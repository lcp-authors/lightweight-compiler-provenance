
../repos/coreutils/src/groups:     file format elf32-littlearm


Disassembly of section .init:

00010da4 <.init>:
   10da4:	push	{r3, lr}
   10da8:	bl	11070 <putchar_unlocked@plt+0x48>
   10dac:	pop	{r3, pc}

Disassembly of section .plt:

00010db0 <calloc@plt-0x14>:
   10db0:	push	{lr}		; (str lr, [sp, #-4]!)
   10db4:	ldr	lr, [pc, #4]	; 10dc0 <calloc@plt-0x4>
   10db8:	add	lr, pc, lr
   10dbc:	ldr	pc, [lr, #8]!
   10dc0:	andeq	r5, r1, r0, asr #4

00010dc4 <calloc@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #86016	; 0x15000
   10dcc:	ldr	pc, [ip, #576]!	; 0x240

00010dd0 <fputs_unlocked@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #86016	; 0x15000
   10dd8:	ldr	pc, [ip, #568]!	; 0x238

00010ddc <raise@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #86016	; 0x15000
   10de4:	ldr	pc, [ip, #560]!	; 0x230

00010de8 <getpwnam@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #86016	; 0x15000
   10df0:	ldr	pc, [ip, #552]!	; 0x228

00010df4 <strcmp@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #86016	; 0x15000
   10dfc:	ldr	pc, [ip, #544]!	; 0x220

00010e00 <getpwuid@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #86016	; 0x15000
   10e08:	ldr	pc, [ip, #536]!	; 0x218

00010e0c <fflush@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #86016	; 0x15000
   10e14:	ldr	pc, [ip, #528]!	; 0x210

00010e18 <getuid@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #86016	; 0x15000
   10e20:	ldr	pc, [ip, #520]!	; 0x208

00010e24 <free@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #86016	; 0x15000
   10e2c:	ldr	pc, [ip, #512]!	; 0x200

00010e30 <_exit@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #86016	; 0x15000
   10e38:	ldr	pc, [ip, #504]!	; 0x1f8

00010e3c <memcpy@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #86016	; 0x15000
   10e44:	ldr	pc, [ip, #496]!	; 0x1f0

00010e48 <mbsinit@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #86016	; 0x15000
   10e50:	ldr	pc, [ip, #488]!	; 0x1e8

00010e54 <memcmp@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #86016	; 0x15000
   10e5c:	ldr	pc, [ip, #480]!	; 0x1e0

00010e60 <dcgettext@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #86016	; 0x15000
   10e68:	ldr	pc, [ip, #472]!	; 0x1d8

00010e6c <realloc@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #86016	; 0x15000
   10e74:	ldr	pc, [ip, #464]!	; 0x1d0

00010e78 <textdomain@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #86016	; 0x15000
   10e80:	ldr	pc, [ip, #456]!	; 0x1c8

00010e84 <iswprint@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #86016	; 0x15000
   10e8c:	ldr	pc, [ip, #448]!	; 0x1c0

00010e90 <getegid@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #86016	; 0x15000
   10e98:	ldr	pc, [ip, #440]!	; 0x1b8

00010e9c <lseek64@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #86016	; 0x15000
   10ea4:	ldr	pc, [ip, #432]!	; 0x1b0

00010ea8 <__ctype_get_mb_cur_max@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #86016	; 0x15000
   10eb0:	ldr	pc, [ip, #424]!	; 0x1a8

00010eb4 <__fpending@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #86016	; 0x15000
   10ebc:	ldr	pc, [ip, #416]!	; 0x1a0

00010ec0 <ferror_unlocked@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #86016	; 0x15000
   10ec8:	ldr	pc, [ip, #408]!	; 0x198

00010ecc <mbrtowc@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #86016	; 0x15000
   10ed4:	ldr	pc, [ip, #400]!	; 0x190

00010ed8 <error@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #86016	; 0x15000
   10ee0:	ldr	pc, [ip, #392]!	; 0x188

00010ee4 <malloc@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #86016	; 0x15000
   10eec:	ldr	pc, [ip, #384]!	; 0x180

00010ef0 <__libc_start_main@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #86016	; 0x15000
   10ef8:	ldr	pc, [ip, #376]!	; 0x178

00010efc <__freading@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #86016	; 0x15000
   10f04:	ldr	pc, [ip, #368]!	; 0x170

00010f08 <__gmon_start__@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #86016	; 0x15000
   10f10:	ldr	pc, [ip, #360]!	; 0x168

00010f14 <getopt_long@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #86016	; 0x15000
   10f1c:	ldr	pc, [ip, #352]!	; 0x160

00010f20 <__ctype_b_loc@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #86016	; 0x15000
   10f28:	ldr	pc, [ip, #344]!	; 0x158

00010f2c <exit@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #86016	; 0x15000
   10f34:	ldr	pc, [ip, #336]!	; 0x150

00010f38 <strlen@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #86016	; 0x15000
   10f40:	ldr	pc, [ip, #328]!	; 0x148

00010f44 <__errno_location@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #86016	; 0x15000
   10f4c:	ldr	pc, [ip, #320]!	; 0x140

00010f50 <__cxa_atexit@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #86016	; 0x15000
   10f58:	ldr	pc, [ip, #312]!	; 0x138

00010f5c <getgid@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #86016	; 0x15000
   10f64:	ldr	pc, [ip, #304]!	; 0x130

00010f68 <getgrouplist@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #86016	; 0x15000
   10f70:	ldr	pc, [ip, #296]!	; 0x128

00010f74 <memset@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #86016	; 0x15000
   10f7c:	ldr	pc, [ip, #288]!	; 0x120

00010f80 <__printf_chk@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #86016	; 0x15000
   10f88:	ldr	pc, [ip, #280]!	; 0x118

00010f8c <fileno@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #86016	; 0x15000
   10f94:	ldr	pc, [ip, #272]!	; 0x110

00010f98 <__fprintf_chk@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #86016	; 0x15000
   10fa0:	ldr	pc, [ip, #264]!	; 0x108

00010fa4 <fclose@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #86016	; 0x15000
   10fac:	ldr	pc, [ip, #256]!	; 0x100

00010fb0 <fseeko64@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #86016	; 0x15000
   10fb8:	ldr	pc, [ip, #248]!	; 0xf8

00010fbc <setlocale@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #86016	; 0x15000
   10fc4:	ldr	pc, [ip, #240]!	; 0xf0

00010fc8 <strrchr@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #86016	; 0x15000
   10fd0:	ldr	pc, [ip, #232]!	; 0xe8

00010fd4 <nl_langinfo@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #86016	; 0x15000
   10fdc:	ldr	pc, [ip, #224]!	; 0xe0

00010fe0 <getgroups@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #86016	; 0x15000
   10fe8:	ldr	pc, [ip, #216]!	; 0xd8

00010fec <bindtextdomain@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #86016	; 0x15000
   10ff4:	ldr	pc, [ip, #208]!	; 0xd0

00010ff8 <fputs@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #86016	; 0x15000
   11000:	ldr	pc, [ip, #200]!	; 0xc8

00011004 <strncmp@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #86016	; 0x15000
   1100c:	ldr	pc, [ip, #192]!	; 0xc0

00011010 <abort@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #86016	; 0x15000
   11018:	ldr	pc, [ip, #184]!	; 0xb8

0001101c <getgrgid@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #86016	; 0x15000
   11024:	ldr	pc, [ip, #176]!	; 0xb0

00011028 <putchar_unlocked@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #86016	; 0x15000
   11030:	ldr	pc, [ip, #168]!	; 0xa8

Disassembly of section .text:

00011034 <.text>:
   11034:	mov	fp, #0
   11038:	mov	lr, #0
   1103c:	pop	{r1}		; (ldr r1, [sp], #4)
   11040:	mov	r2, sp
   11044:	push	{r2}		; (str r2, [sp, #-4]!)
   11048:	push	{r0}		; (str r0, [sp, #-4]!)
   1104c:	ldr	ip, [pc, #16]	; 11064 <putchar_unlocked@plt+0x3c>
   11050:	push	{ip}		; (str ip, [sp, #-4]!)
   11054:	ldr	r0, [pc, #12]	; 11068 <putchar_unlocked@plt+0x40>
   11058:	ldr	r3, [pc, #12]	; 1106c <putchar_unlocked@plt+0x44>
   1105c:	bl	10ef0 <__libc_start_main@plt>
   11060:	bl	11010 <abort@plt>
   11064:	andeq	r4, r1, ip, lsl r7
   11068:	andeq	r1, r1, r8, asr #6
   1106c:			; <UNDEFINED> instruction: 0x000146bc
   11070:	ldr	r3, [pc, #20]	; 1108c <putchar_unlocked@plt+0x64>
   11074:	ldr	r2, [pc, #20]	; 11090 <putchar_unlocked@plt+0x68>
   11078:	add	r3, pc, r3
   1107c:	ldr	r2, [r3, r2]
   11080:	cmp	r2, #0
   11084:	bxeq	lr
   11088:	b	10f08 <__gmon_start__@plt>
   1108c:	andeq	r4, r1, r0, lsl #31
   11090:	ldrdeq	r0, [r0], -ip
   11094:	ldr	r0, [pc, #24]	; 110b4 <putchar_unlocked@plt+0x8c>
   11098:	ldr	r3, [pc, #24]	; 110b8 <putchar_unlocked@plt+0x90>
   1109c:	cmp	r3, r0
   110a0:	bxeq	lr
   110a4:	ldr	r3, [pc, #16]	; 110bc <putchar_unlocked@plt+0x94>
   110a8:	cmp	r3, #0
   110ac:	bxeq	lr
   110b0:	bx	r3
   110b4:	andeq	r6, r2, r0, lsr r1
   110b8:	andeq	r6, r2, r0, lsr r1
   110bc:	andeq	r0, r0, r0
   110c0:	ldr	r0, [pc, #36]	; 110ec <putchar_unlocked@plt+0xc4>
   110c4:	ldr	r1, [pc, #36]	; 110f0 <putchar_unlocked@plt+0xc8>
   110c8:	sub	r1, r1, r0
   110cc:	asr	r1, r1, #2
   110d0:	add	r1, r1, r1, lsr #31
   110d4:	asrs	r1, r1, #1
   110d8:	bxeq	lr
   110dc:	ldr	r3, [pc, #16]	; 110f4 <putchar_unlocked@plt+0xcc>
   110e0:	cmp	r3, #0
   110e4:	bxeq	lr
   110e8:	bx	r3
   110ec:	andeq	r6, r2, r0, lsr r1
   110f0:	andeq	r6, r2, r0, lsr r1
   110f4:	andeq	r0, r0, r0
   110f8:	push	{r4, lr}
   110fc:	ldr	r4, [pc, #24]	; 1111c <putchar_unlocked@plt+0xf4>
   11100:	ldrb	r3, [r4]
   11104:	cmp	r3, #0
   11108:	popne	{r4, pc}
   1110c:	bl	11094 <putchar_unlocked@plt+0x6c>
   11110:	mov	r3, #1
   11114:	strb	r3, [r4]
   11118:	pop	{r4, pc}
   1111c:	andeq	r6, r2, r8, asr #2
   11120:	b	110c0 <putchar_unlocked@plt+0x98>
   11124:	push	{fp, lr}
   11128:	mov	fp, sp
   1112c:	sub	sp, sp, #56	; 0x38
   11130:	mov	r8, r0
   11134:	cmp	r0, #0
   11138:	bne	11308 <putchar_unlocked@plt+0x2e0>
   1113c:	movw	r1, #18283	; 0x476b
   11140:	mov	r0, #0
   11144:	mov	r2, #5
   11148:	movt	r1, #1
   1114c:	bl	10e60 <dcgettext@plt>
   11150:	mov	r1, r0
   11154:	movw	r0, #24936	; 0x6168
   11158:	movt	r0, #2
   1115c:	ldr	r2, [r0]
   11160:	mov	r0, #1
   11164:	bl	10f80 <__printf_chk@plt>
   11168:	movw	r1, #18320	; 0x4790
   1116c:	mov	r0, #0
   11170:	mov	r2, #5
   11174:	movt	r1, #1
   11178:	bl	10e60 <dcgettext@plt>
   1117c:	movw	r9, #24900	; 0x6144
   11180:	movt	r9, #2
   11184:	ldr	r1, [r9]
   11188:	bl	10dd0 <fputs_unlocked@plt>
   1118c:	movw	r1, #18475	; 0x482b
   11190:	mov	r0, #0
   11194:	mov	r2, #5
   11198:	movt	r1, #1
   1119c:	bl	10e60 <dcgettext@plt>
   111a0:	ldr	r1, [r9]
   111a4:	bl	10dd0 <fputs_unlocked@plt>
   111a8:	movw	r1, #18520	; 0x4858
   111ac:	mov	r0, #0
   111b0:	mov	r2, #5
   111b4:	movt	r1, #1
   111b8:	bl	10e60 <dcgettext@plt>
   111bc:	ldr	r1, [r9]
   111c0:	bl	10dd0 <fputs_unlocked@plt>
   111c4:	movw	r0, #19112	; 0x4aa8
   111c8:	mov	r6, sp
   111cc:	movt	r0, #1
   111d0:	mov	r1, r6
   111d4:	ldm	r0!, {r2, r3, r4, r5}
   111d8:	stmia	r1!, {r2, r3, r4, r5}
   111dc:	ldm	r0!, {r2, r3, r4, r5, r7}
   111e0:	stmia	r1!, {r2, r3, r4, r5, r7}
   111e4:	ldm	r0, {r2, r3, r4, r5, r7}
   111e8:	stm	r1, {r2, r3, r4, r5, r7}
   111ec:	movw	r1, #18738	; 0x4932
   111f0:	movw	r5, #18574	; 0x488e
   111f4:	movt	r1, #1
   111f8:	movt	r5, #1
   111fc:	mov	r0, r5
   11200:	bl	10df4 <strcmp@plt>
   11204:	cmp	r0, #0
   11208:	ldrne	r1, [r6, #8]!
   1120c:	cmpne	r1, #0
   11210:	bne	111fc <putchar_unlocked@plt+0x1d4>
   11214:	ldr	r6, [r6, #4]
   11218:	movw	r1, #18833	; 0x4991
   1121c:	mov	r0, #0
   11220:	mov	r2, #5
   11224:	movt	r1, #1
   11228:	bl	10e60 <dcgettext@plt>
   1122c:	movw	r2, #18605	; 0x48ad
   11230:	movw	r3, #18856	; 0x49a8
   11234:	mov	r1, r0
   11238:	mov	r0, #1
   1123c:	movt	r2, #1
   11240:	movt	r3, #1
   11244:	bl	10f80 <__printf_chk@plt>
   11248:	cmp	r6, #0
   1124c:	mov	r0, #5
   11250:	mov	r1, #0
   11254:	moveq	r6, r5
   11258:	bl	10fbc <setlocale@plt>
   1125c:	cmp	r0, #0
   11260:	beq	11298 <putchar_unlocked@plt+0x270>
   11264:	movw	r1, #18896	; 0x49d0
   11268:	mov	r2, #3
   1126c:	movt	r1, #1
   11270:	bl	11004 <strncmp@plt>
   11274:	cmp	r0, #0
   11278:	beq	11298 <putchar_unlocked@plt+0x270>
   1127c:	movw	r1, #18900	; 0x49d4
   11280:	mov	r0, #0
   11284:	mov	r2, #5
   11288:	movt	r1, #1
   1128c:	bl	10e60 <dcgettext@plt>
   11290:	ldr	r1, [r9]
   11294:	bl	10dd0 <fputs_unlocked@plt>
   11298:	movw	r1, #18971	; 0x4a1b
   1129c:	mov	r0, #0
   112a0:	mov	r2, #5
   112a4:	movt	r1, #1
   112a8:	bl	10e60 <dcgettext@plt>
   112ac:	movw	r2, #18856	; 0x49a8
   112b0:	mov	r1, r0
   112b4:	mov	r0, #1
   112b8:	mov	r3, r5
   112bc:	movt	r2, #1
   112c0:	bl	10f80 <__printf_chk@plt>
   112c4:	movw	r1, #18998	; 0x4a36
   112c8:	mov	r0, #0
   112cc:	mov	r2, #5
   112d0:	movt	r1, #1
   112d4:	bl	10e60 <dcgettext@plt>
   112d8:	movw	r3, #19048	; 0x4a68
   112dc:	mov	r1, r0
   112e0:	movw	r0, #18766	; 0x494e
   112e4:	cmp	r6, r5
   112e8:	mov	r2, r6
   112ec:	movt	r0, #1
   112f0:	movt	r3, #1
   112f4:	moveq	r3, r0
   112f8:	mov	r0, #1
   112fc:	bl	10f80 <__printf_chk@plt>
   11300:	mov	r0, r8
   11304:	bl	10f2c <exit@plt>
   11308:	movw	r0, #24896	; 0x6140
   1130c:	movw	r1, #18244	; 0x4744
   11310:	mov	r2, #5
   11314:	movt	r0, #2
   11318:	movt	r1, #1
   1131c:	ldr	r5, [r0]
   11320:	mov	r0, #0
   11324:	bl	10e60 <dcgettext@plt>
   11328:	mov	r2, r0
   1132c:	movw	r0, #24936	; 0x6168
   11330:	mov	r1, #1
   11334:	movt	r0, #2
   11338:	ldr	r3, [r0]
   1133c:	mov	r0, r5
   11340:	bl	10f98 <__fprintf_chk@plt>
   11344:	b	11300 <putchar_unlocked@plt+0x2d8>
   11348:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1134c:	add	fp, sp, #28
   11350:	sub	sp, sp, #12
   11354:	mov	sl, r0
   11358:	ldr	r0, [r1]
   1135c:	mov	r4, r1
   11360:	bl	119bc <putchar_unlocked@plt+0x994>
   11364:	movw	r6, #19048	; 0x4a68
   11368:	mov	r0, #6
   1136c:	movt	r6, #1
   11370:	mov	r1, r6
   11374:	bl	10fbc <setlocale@plt>
   11378:	movw	r7, #18609	; 0x48b1
   1137c:	movw	r1, #18581	; 0x4895
   11380:	movt	r7, #1
   11384:	movt	r1, #1
   11388:	mov	r0, r7
   1138c:	bl	10fec <bindtextdomain@plt>
   11390:	mov	r0, r7
   11394:	bl	10e78 <textdomain@plt>
   11398:	movw	r0, #6224	; 0x1850
   1139c:	movt	r0, #1
   113a0:	bl	14720 <putchar_unlocked@plt+0x36f8>
   113a4:	movw	r3, #19064	; 0x4a78
   113a8:	mov	r0, #0
   113ac:	mov	r1, r4
   113b0:	mov	r2, r6
   113b4:	str	r0, [sp]
   113b8:	movt	r3, #1
   113bc:	mov	r0, sl
   113c0:	bl	10f14 <getopt_long@plt>
   113c4:	cmn	r0, #1
   113c8:	bne	11558 <putchar_unlocked@plt+0x530>
   113cc:	movw	r8, #24888	; 0x6138
   113d0:	movt	r8, #2
   113d4:	ldr	r0, [r8]
   113d8:	cmp	r0, sl
   113dc:	bne	11480 <putchar_unlocked@plt+0x458>
   113e0:	bl	10f44 <__errno_location@plt>
   113e4:	mov	r7, #0
   113e8:	mov	r5, r0
   113ec:	str	r7, [r0]
   113f0:	bl	10e18 <getuid@plt>
   113f4:	mov	r4, r0
   113f8:	cmn	r0, #1
   113fc:	bne	1140c <putchar_unlocked@plt+0x3e4>
   11400:	ldr	r6, [r5]
   11404:	cmp	r6, #0
   11408:	bne	115cc <putchar_unlocked@plt+0x5a4>
   1140c:	str	r7, [r5]
   11410:	bl	10e90 <getegid@plt>
   11414:	mov	r6, r0
   11418:	cmn	r0, #1
   1141c:	bne	1142c <putchar_unlocked@plt+0x404>
   11420:	ldr	r7, [r5]
   11424:	cmp	r7, #0
   11428:	bne	115f0 <putchar_unlocked@plt+0x5c8>
   1142c:	mov	r0, #0
   11430:	str	r0, [r5]
   11434:	bl	10f5c <getgid@plt>
   11438:	mov	r2, r0
   1143c:	cmn	r0, #1
   11440:	bne	11450 <putchar_unlocked@plt+0x428>
   11444:	ldr	r5, [r5]
   11448:	cmp	r5, #0
   1144c:	bne	11614 <putchar_unlocked@plt+0x5ec>
   11450:	mov	r0, #32
   11454:	mov	r1, #1
   11458:	mov	r3, r6
   1145c:	str	r1, [sp]
   11460:	str	r0, [sp, #4]
   11464:	mov	r0, #0
   11468:	mov	r1, r4
   1146c:	bl	11638 <putchar_unlocked@plt+0x610>
   11470:	mov	r6, r0
   11474:	mov	r0, #10
   11478:	bl	11028 <putchar_unlocked@plt>
   1147c:	b	1154c <putchar_unlocked@plt+0x524>
   11480:	mov	r6, #1
   11484:	bge	1154c <putchar_unlocked@plt+0x524>
   11488:	movw	r9, #18732	; 0x492c
   1148c:	mov	r6, #1
   11490:	movt	r9, #1
   11494:	ldr	r0, [r4, r0, lsl #2]
   11498:	bl	10de8 <getpwnam@plt>
   1149c:	cmp	r0, #0
   114a0:	beq	114fc <putchar_unlocked@plt+0x4d4>
   114a4:	ldr	r1, [r8]
   114a8:	ldr	r7, [r0, #8]
   114ac:	ldr	r5, [r0, #12]
   114b0:	mov	r0, #1
   114b4:	ldr	r2, [r4, r1, lsl #2]
   114b8:	mov	r1, r9
   114bc:	bl	10f80 <__printf_chk@plt>
   114c0:	ldr	r0, [r8]
   114c4:	mov	r1, #1
   114c8:	mov	r2, r5
   114cc:	mov	r3, r5
   114d0:	ldr	r0, [r4, r0, lsl #2]
   114d4:	str	r1, [sp]
   114d8:	mov	r1, #32
   114dc:	str	r1, [sp, #4]
   114e0:	mov	r1, r7
   114e4:	bl	11638 <putchar_unlocked@plt+0x610>
   114e8:	mov	r5, r0
   114ec:	mov	r0, #10
   114f0:	bl	11028 <putchar_unlocked@plt>
   114f4:	and	r6, r6, r5
   114f8:	b	11538 <putchar_unlocked@plt+0x510>
   114fc:	movw	r1, #18715	; 0x491b
   11500:	mov	r0, #0
   11504:	mov	r2, #5
   11508:	mov	r6, #0
   1150c:	movt	r1, #1
   11510:	bl	10e60 <dcgettext@plt>
   11514:	mov	r7, r0
   11518:	ldr	r0, [r8]
   1151c:	ldr	r0, [r4, r0, lsl #2]
   11520:	bl	133c0 <putchar_unlocked@plt+0x2398>
   11524:	mov	r3, r0
   11528:	mov	r0, #0
   1152c:	mov	r1, #0
   11530:	mov	r2, r7
   11534:	bl	10ed8 <error@plt>
   11538:	ldr	r0, [r8]
   1153c:	add	r0, r0, #1
   11540:	cmp	r0, sl
   11544:	str	r0, [r8]
   11548:	blt	11494 <putchar_unlocked@plt+0x46c>
   1154c:	eor	r0, r6, #1
   11550:	sub	sp, fp, #28
   11554:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11558:	cmn	r0, #3
   1155c:	beq	11570 <putchar_unlocked@plt+0x548>
   11560:	cmn	r0, #2
   11564:	bne	115c4 <putchar_unlocked@plt+0x59c>
   11568:	mov	r0, #0
   1156c:	bl	11124 <putchar_unlocked@plt+0xfc>
   11570:	movw	r0, #24808	; 0x60e8
   11574:	movw	r2, #18635	; 0x48cb
   11578:	mov	r1, #0
   1157c:	movw	r7, #18619	; 0x48bb
   11580:	movt	r0, #2
   11584:	movt	r2, #1
   11588:	str	r1, [sp, #8]
   1158c:	movw	r1, #18574	; 0x488e
   11590:	movt	r7, #1
   11594:	ldr	r3, [r0]
   11598:	movw	r0, #24900	; 0x6144
   1159c:	str	r2, [sp, #4]
   115a0:	movw	r2, #18605	; 0x48ad
   115a4:	movt	r1, #1
   115a8:	str	r7, [sp]
   115ac:	movt	r0, #2
   115b0:	movt	r2, #1
   115b4:	ldr	r0, [r0]
   115b8:	bl	138ac <putchar_unlocked@plt+0x2884>
   115bc:	mov	r0, #0
   115c0:	bl	10f2c <exit@plt>
   115c4:	mov	r0, #1
   115c8:	bl	11124 <putchar_unlocked@plt+0xfc>
   115cc:	movw	r1, #18650	; 0x48da
   115d0:	mov	r0, #0
   115d4:	mov	r2, #5
   115d8:	movt	r1, #1
   115dc:	bl	10e60 <dcgettext@plt>
   115e0:	mov	r2, r0
   115e4:	mov	r0, #1
   115e8:	mov	r1, r6
   115ec:	bl	10ed8 <error@plt>
   115f0:	movw	r1, #18670	; 0x48ee
   115f4:	mov	r0, #0
   115f8:	mov	r2, #5
   115fc:	movt	r1, #1
   11600:	bl	10e60 <dcgettext@plt>
   11604:	mov	r2, r0
   11608:	mov	r0, #1
   1160c:	mov	r1, r7
   11610:	bl	10ed8 <error@plt>
   11614:	movw	r1, #18695	; 0x4907
   11618:	mov	r0, #0
   1161c:	mov	r2, #5
   11620:	movt	r1, #1
   11624:	bl	10e60 <dcgettext@plt>
   11628:	mov	r2, r0
   1162c:	mov	r0, #1
   11630:	mov	r1, r5
   11634:	bl	10ed8 <error@plt>
   11638:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1163c:	add	fp, sp, #28
   11640:	sub	sp, sp, #4
   11644:	ldr	r9, [fp, #8]
   11648:	mov	r8, r3
   1164c:	mov	r5, r2
   11650:	mov	r4, r0
   11654:	cmp	r0, #0
   11658:	beq	11678 <putchar_unlocked@plt+0x650>
   1165c:	mov	r0, r1
   11660:	bl	10e00 <getpwuid@plt>
   11664:	cmp	r0, #0
   11668:	mov	r7, r0
   1166c:	mov	r6, r0
   11670:	movwne	r7, #1
   11674:	b	11680 <putchar_unlocked@plt+0x658>
   11678:	mov	r6, #0
   1167c:	mov	r7, #1
   11680:	ldr	sl, [fp, #12]
   11684:	mov	r0, r5
   11688:	mov	r1, r9
   1168c:	bl	117a4 <putchar_unlocked@plt+0x77c>
   11690:	and	r7, r7, r0
   11694:	cmp	r8, r5
   11698:	beq	116b4 <putchar_unlocked@plt+0x68c>
   1169c:	mov	r0, sl
   116a0:	bl	11028 <putchar_unlocked@plt>
   116a4:	mov	r0, r8
   116a8:	mov	r1, r9
   116ac:	bl	117a4 <putchar_unlocked@plt+0x77c>
   116b0:	and	r7, r7, r0
   116b4:	cmp	r6, #0
   116b8:	mov	r1, r8
   116bc:	mov	r2, sp
   116c0:	mov	r0, r4
   116c4:	ldrne	r1, [r6, #12]
   116c8:	bl	13e48 <putchar_unlocked@plt+0x2e20>
   116cc:	cmp	r0, #0
   116d0:	blt	11728 <putchar_unlocked@plt+0x700>
   116d4:	beq	1171c <putchar_unlocked@plt+0x6f4>
   116d8:	mov	r6, r0
   116dc:	mov	r4, #0
   116e0:	ldr	r0, [sp]
   116e4:	ldr	r0, [r0, r4, lsl #2]
   116e8:	cmp	r0, r5
   116ec:	cmpne	r0, r8
   116f0:	beq	11710 <putchar_unlocked@plt+0x6e8>
   116f4:	mov	r0, sl
   116f8:	bl	11028 <putchar_unlocked@plt>
   116fc:	ldr	r0, [sp]
   11700:	mov	r1, r9
   11704:	ldr	r0, [r0, r4, lsl #2]
   11708:	bl	117a4 <putchar_unlocked@plt+0x77c>
   1170c:	and	r7, r7, r0
   11710:	add	r4, r4, #1
   11714:	cmp	r6, r4
   11718:	bne	116e0 <putchar_unlocked@plt+0x6b8>
   1171c:	ldr	r0, [sp]
   11720:	bl	11938 <putchar_unlocked@plt+0x910>
   11724:	b	11798 <putchar_unlocked@plt+0x770>
   11728:	bl	10f44 <__errno_location@plt>
   1172c:	ldr	r6, [r0]
   11730:	cmp	r4, #0
   11734:	beq	11770 <putchar_unlocked@plt+0x748>
   11738:	movw	r1, #19168	; 0x4ae0
   1173c:	mov	r0, #0
   11740:	mov	r2, #5
   11744:	movt	r1, #1
   11748:	bl	10e60 <dcgettext@plt>
   1174c:	mov	r5, r0
   11750:	mov	r0, r4
   11754:	bl	133c0 <putchar_unlocked@plt+0x2398>
   11758:	mov	r3, r0
   1175c:	mov	r0, #0
   11760:	mov	r1, r6
   11764:	mov	r2, r5
   11768:	bl	10ed8 <error@plt>
   1176c:	b	11794 <putchar_unlocked@plt+0x76c>
   11770:	movw	r1, #19201	; 0x4b01
   11774:	mov	r0, #0
   11778:	mov	r2, #5
   1177c:	movt	r1, #1
   11780:	bl	10e60 <dcgettext@plt>
   11784:	mov	r2, r0
   11788:	mov	r0, #0
   1178c:	mov	r1, r6
   11790:	bl	10ed8 <error@plt>
   11794:	mov	r7, #0
   11798:	and	r0, r7, #1
   1179c:	sub	sp, fp, #28
   117a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   117a4:	push	{r4, r5, fp, lr}
   117a8:	add	fp, sp, #8
   117ac:	mov	r5, r0
   117b0:	mov	r4, #1
   117b4:	cmp	r1, #0
   117b8:	beq	11804 <putchar_unlocked@plt+0x7dc>
   117bc:	mov	r0, r5
   117c0:	bl	1101c <getgrgid@plt>
   117c4:	cmp	r0, #0
   117c8:	beq	117d8 <putchar_unlocked@plt+0x7b0>
   117cc:	ldr	r0, [r0]
   117d0:	mov	r4, #1
   117d4:	b	11818 <putchar_unlocked@plt+0x7f0>
   117d8:	movw	r1, #19246	; 0x4b2e
   117dc:	mov	r0, #0
   117e0:	mov	r2, #5
   117e4:	mov	r4, #0
   117e8:	movt	r1, #1
   117ec:	bl	10e60 <dcgettext@plt>
   117f0:	mov	r2, r0
   117f4:	mov	r0, #0
   117f8:	mov	r1, #0
   117fc:	mov	r3, r5
   11800:	bl	10ed8 <error@plt>
   11804:	movw	r2, #24905	; 0x6149
   11808:	mov	r0, r5
   1180c:	mov	r1, #0
   11810:	movt	r2, #2
   11814:	bl	11960 <putchar_unlocked@plt+0x938>
   11818:	movw	r1, #24900	; 0x6144
   1181c:	movt	r1, #2
   11820:	ldr	r1, [r1]
   11824:	bl	10dd0 <fputs_unlocked@plt>
   11828:	mov	r0, r4
   1182c:	pop	{r4, r5, fp, pc}
   11830:	movw	r1, #24928	; 0x6160
   11834:	movt	r1, #2
   11838:	str	r0, [r1]
   1183c:	bx	lr
   11840:	movw	r1, #24932	; 0x6164
   11844:	movt	r1, #2
   11848:	strb	r0, [r1]
   1184c:	bx	lr
   11850:	push	{r4, r5, r6, sl, fp, lr}
   11854:	add	fp, sp, #16
   11858:	sub	sp, sp, #8
   1185c:	movw	r0, #24900	; 0x6144
   11860:	movt	r0, #2
   11864:	ldr	r0, [r0]
   11868:	bl	13f50 <putchar_unlocked@plt+0x2f28>
   1186c:	cmp	r0, #0
   11870:	beq	11898 <putchar_unlocked@plt+0x870>
   11874:	movw	r0, #24932	; 0x6164
   11878:	movt	r0, #2
   1187c:	ldrb	r0, [r0]
   11880:	cmp	r0, #0
   11884:	beq	118b8 <putchar_unlocked@plt+0x890>
   11888:	bl	10f44 <__errno_location@plt>
   1188c:	ldr	r0, [r0]
   11890:	cmp	r0, #32
   11894:	bne	118b8 <putchar_unlocked@plt+0x890>
   11898:	movw	r0, #24896	; 0x6140
   1189c:	movt	r0, #2
   118a0:	ldr	r0, [r0]
   118a4:	bl	13f50 <putchar_unlocked@plt+0x2f28>
   118a8:	cmp	r0, #0
   118ac:	subeq	sp, fp, #16
   118b0:	popeq	{r4, r5, r6, sl, fp, pc}
   118b4:	b	11928 <putchar_unlocked@plt+0x900>
   118b8:	movw	r1, #19295	; 0x4b5f
   118bc:	mov	r0, #0
   118c0:	mov	r2, #5
   118c4:	movt	r1, #1
   118c8:	bl	10e60 <dcgettext@plt>
   118cc:	mov	r4, r0
   118d0:	movw	r0, #24928	; 0x6160
   118d4:	movt	r0, #2
   118d8:	ldr	r6, [r0]
   118dc:	bl	10f44 <__errno_location@plt>
   118e0:	ldr	r5, [r0]
   118e4:	cmp	r6, #0
   118e8:	bne	11904 <putchar_unlocked@plt+0x8dc>
   118ec:	movw	r2, #19311	; 0x4b6f
   118f0:	mov	r0, #0
   118f4:	mov	r1, r5
   118f8:	mov	r3, r4
   118fc:	movt	r2, #1
   11900:	b	11924 <putchar_unlocked@plt+0x8fc>
   11904:	mov	r0, r6
   11908:	bl	13180 <putchar_unlocked@plt+0x2158>
   1190c:	movw	r2, #19307	; 0x4b6b
   11910:	mov	r3, r0
   11914:	str	r4, [sp]
   11918:	mov	r0, #0
   1191c:	mov	r1, r5
   11920:	movt	r2, #1
   11924:	bl	10ed8 <error@plt>
   11928:	movw	r0, #24812	; 0x60ec
   1192c:	movt	r0, #2
   11930:	ldr	r0, [r0]
   11934:	bl	10e30 <_exit@plt>
   11938:	push	{r4, r5, r6, sl, fp, lr}
   1193c:	add	fp, sp, #16
   11940:	mov	r4, r0
   11944:	bl	10f44 <__errno_location@plt>
   11948:	ldr	r6, [r0]
   1194c:	mov	r5, r0
   11950:	mov	r0, r4
   11954:	bl	10e24 <free@plt>
   11958:	str	r6, [r5]
   1195c:	pop	{r4, r5, r6, sl, fp, pc}
   11960:	push	{r4, r5, r6, sl, fp, lr}
   11964:	add	fp, sp, #16
   11968:	mov	r5, r0
   1196c:	mov	r0, #0
   11970:	mov	r4, r1
   11974:	add	r6, r2, #19
   11978:	strb	r0, [r2, #20]
   1197c:	mov	r0, r5
   11980:	mov	r1, r4
   11984:	mov	r2, #10
   11988:	mov	r3, #0
   1198c:	bl	14548 <putchar_unlocked@plt+0x3520>
   11990:	add	r2, r0, r0, lsl #2
   11994:	sub	r2, r5, r2, lsl #1
   11998:	orr	r2, r2, #48	; 0x30
   1199c:	strb	r2, [r6], #-1
   119a0:	rsbs	r2, r5, #9
   119a4:	mov	r5, r0
   119a8:	rscs	r2, r4, #0
   119ac:	mov	r4, r1
   119b0:	bcc	1197c <putchar_unlocked@plt+0x954>
   119b4:	add	r0, r6, #1
   119b8:	pop	{r4, r5, r6, sl, fp, pc}
   119bc:	push	{r4, r5, fp, lr}
   119c0:	add	fp, sp, #8
   119c4:	cmp	r0, #0
   119c8:	beq	11a5c <putchar_unlocked@plt+0xa34>
   119cc:	mov	r1, #47	; 0x2f
   119d0:	mov	r4, r0
   119d4:	bl	10fc8 <strrchr@plt>
   119d8:	cmp	r0, #0
   119dc:	mov	r5, r4
   119e0:	addne	r5, r0, #1
   119e4:	sub	r0, r5, r4
   119e8:	cmp	r0, #7
   119ec:	blt	11a40 <putchar_unlocked@plt+0xa18>
   119f0:	movw	r1, #19370	; 0x4baa
   119f4:	sub	r0, r5, #7
   119f8:	mov	r2, #7
   119fc:	movt	r1, #1
   11a00:	bl	11004 <strncmp@plt>
   11a04:	cmp	r0, #0
   11a08:	bne	11a40 <putchar_unlocked@plt+0xa18>
   11a0c:	movw	r1, #19378	; 0x4bb2
   11a10:	mov	r0, r5
   11a14:	mov	r2, #3
   11a18:	movt	r1, #1
   11a1c:	bl	11004 <strncmp@plt>
   11a20:	cmp	r0, #0
   11a24:	beq	11a30 <putchar_unlocked@plt+0xa08>
   11a28:	mov	r4, r5
   11a2c:	b	11a40 <putchar_unlocked@plt+0xa18>
   11a30:	movw	r0, #24880	; 0x6130
   11a34:	add	r4, r5, #3
   11a38:	movt	r0, #2
   11a3c:	str	r4, [r0]
   11a40:	movw	r0, #24884	; 0x6134
   11a44:	movt	r0, #2
   11a48:	str	r4, [r0]
   11a4c:	movw	r0, #24936	; 0x6168
   11a50:	movt	r0, #2
   11a54:	str	r4, [r0]
   11a58:	pop	{r4, r5, fp, pc}
   11a5c:	movw	r0, #24896	; 0x6140
   11a60:	movt	r0, #2
   11a64:	ldr	r1, [r0]
   11a68:	movw	r0, #19314	; 0x4b72
   11a6c:	movt	r0, #1
   11a70:	bl	10ff8 <fputs@plt>
   11a74:	bl	11010 <abort@plt>
   11a78:	push	{r4, r5, r6, sl, fp, lr}
   11a7c:	add	fp, sp, #16
   11a80:	mov	r4, r0
   11a84:	movw	r0, #24944	; 0x6170
   11a88:	movt	r0, #2
   11a8c:	cmp	r4, #0
   11a90:	moveq	r4, r0
   11a94:	bl	10f44 <__errno_location@plt>
   11a98:	ldr	r6, [r0]
   11a9c:	mov	r5, r0
   11aa0:	mov	r0, r4
   11aa4:	mov	r1, #48	; 0x30
   11aa8:	bl	13d04 <putchar_unlocked@plt+0x2cdc>
   11aac:	str	r6, [r5]
   11ab0:	pop	{r4, r5, r6, sl, fp, pc}
   11ab4:	movw	r1, #24944	; 0x6170
   11ab8:	cmp	r0, #0
   11abc:	movt	r1, #2
   11ac0:	movne	r1, r0
   11ac4:	ldr	r0, [r1]
   11ac8:	bx	lr
   11acc:	movw	r2, #24944	; 0x6170
   11ad0:	cmp	r0, #0
   11ad4:	movt	r2, #2
   11ad8:	movne	r2, r0
   11adc:	str	r1, [r2]
   11ae0:	bx	lr
   11ae4:	movw	r3, #24944	; 0x6170
   11ae8:	cmp	r0, #0
   11aec:	movt	r3, #2
   11af0:	movne	r3, r0
   11af4:	ubfx	r0, r1, #5, #3
   11af8:	and	r1, r1, #31
   11afc:	add	r0, r3, r0, lsl #2
   11b00:	ldr	r3, [r0, #8]
   11b04:	eor	r2, r2, r3, lsr r1
   11b08:	and	r2, r2, #1
   11b0c:	eor	r2, r3, r2, lsl r1
   11b10:	str	r2, [r0, #8]
   11b14:	mov	r0, #1
   11b18:	and	r0, r0, r3, lsr r1
   11b1c:	bx	lr
   11b20:	movw	r2, #24944	; 0x6170
   11b24:	cmp	r0, #0
   11b28:	movt	r2, #2
   11b2c:	movne	r2, r0
   11b30:	ldr	r0, [r2, #4]
   11b34:	str	r1, [r2, #4]
   11b38:	bx	lr
   11b3c:	movw	r3, #24944	; 0x6170
   11b40:	cmp	r0, #0
   11b44:	movt	r3, #2
   11b48:	movne	r3, r0
   11b4c:	cmp	r1, #0
   11b50:	mov	r0, #10
   11b54:	cmpne	r2, #0
   11b58:	str	r0, [r3]
   11b5c:	bne	11b6c <putchar_unlocked@plt+0xb44>
   11b60:	push	{fp, lr}
   11b64:	mov	fp, sp
   11b68:	bl	11010 <abort@plt>
   11b6c:	str	r1, [r3, #40]	; 0x28
   11b70:	str	r2, [r3, #44]	; 0x2c
   11b74:	bx	lr
   11b78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b7c:	add	fp, sp, #28
   11b80:	sub	sp, sp, #20
   11b84:	mov	r7, r0
   11b88:	ldr	r0, [fp, #8]
   11b8c:	movw	r5, #24944	; 0x6170
   11b90:	mov	r8, r3
   11b94:	mov	r9, r2
   11b98:	mov	sl, r1
   11b9c:	movt	r5, #2
   11ba0:	cmp	r0, #0
   11ba4:	movne	r5, r0
   11ba8:	bl	10f44 <__errno_location@plt>
   11bac:	mov	r4, r0
   11bb0:	ldm	r5, {r0, r1}
   11bb4:	ldr	r2, [r5, #40]	; 0x28
   11bb8:	ldr	r3, [r5, #44]	; 0x2c
   11bbc:	add	r5, r5, #8
   11bc0:	ldr	r6, [r4]
   11bc4:	stm	sp, {r0, r1, r5}
   11bc8:	str	r2, [sp, #12]
   11bcc:	str	r3, [sp, #16]
   11bd0:	mov	r0, r7
   11bd4:	mov	r1, sl
   11bd8:	mov	r2, r9
   11bdc:	mov	r3, r8
   11be0:	bl	11bf0 <putchar_unlocked@plt+0xbc8>
   11be4:	str	r6, [r4]
   11be8:	sub	sp, fp, #28
   11bec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11bf0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11bf4:	add	fp, sp, #28
   11bf8:	sub	sp, sp, #156	; 0x9c
   11bfc:	str	r0, [fp, #-56]	; 0xffffffc8
   11c00:	ldr	r0, [fp, #12]
   11c04:	mov	r4, r1
   11c08:	str	r3, [sp, #80]	; 0x50
   11c0c:	str	r2, [fp, #-84]	; 0xffffffac
   11c10:	and	r1, r0, #4
   11c14:	str	r1, [sp, #24]
   11c18:	and	r1, r0, #1
   11c1c:	str	r1, [sp, #28]
   11c20:	ubfx	r7, r0, #1, #1
   11c24:	bl	10ea8 <__ctype_get_mb_cur_max@plt>
   11c28:	str	r0, [sp, #32]
   11c2c:	ldr	r0, [fp, #24]
   11c30:	ldr	r9, [fp, #8]
   11c34:	mov	r2, #0
   11c38:	mov	r1, #0
   11c3c:	mov	r5, #0
   11c40:	str	r2, [sp, #52]	; 0x34
   11c44:	mov	r2, #1
   11c48:	str	r0, [sp, #72]	; 0x48
   11c4c:	ldr	r0, [fp, #20]
   11c50:	str	r0, [sp, #64]	; 0x40
   11c54:	mov	r0, #0
   11c58:	str	r0, [sp, #92]	; 0x5c
   11c5c:	mov	r0, #0
   11c60:	str	r0, [fp, #-76]	; 0xffffffb4
   11c64:	mov	r0, #0
   11c68:	cmp	r9, #10
   11c6c:	str	r1, [sp, #68]	; 0x44
   11c70:	bhi	12c70 <putchar_unlocked@plt+0x1c48>
   11c74:	add	r1, pc, #28
   11c78:	ldr	ip, [fp, #-84]	; 0xffffffac
   11c7c:	ldr	lr, [sp, #80]	; 0x50
   11c80:	mov	r6, r4
   11c84:	mov	r8, #0
   11c88:	mov	r3, #1
   11c8c:	mov	sl, #0
   11c90:	mov	r4, r2
   11c94:	ldr	pc, [r1, r9, lsl #2]
   11c98:	andeq	r1, r1, r8, ror #26
   11c9c:	andeq	r1, r1, r4, lsr #27
   11ca0:	andeq	r1, r1, r8, ror sp
   11ca4:	andeq	r1, r1, r0, ror #26
   11ca8:	muleq	r1, r8, sp
   11cac:	strdeq	r1, [r1], -r0
   11cb0:	andeq	r1, r1, r8, lsl #27
   11cb4:	andeq	r1, r1, r0, asr lr
   11cb8:	andeq	r1, r1, r4, asr #25
   11cbc:	andeq	r1, r1, r4, asr #25
   11cc0:	andeq	r1, r1, ip, ror #25
   11cc4:	movw	r0, #19462	; 0x4c06
   11cc8:	mov	r1, r9
   11ccc:	movt	r0, #1
   11cd0:	bl	133d8 <putchar_unlocked@plt+0x23b0>
   11cd4:	str	r0, [sp, #64]	; 0x40
   11cd8:	movw	r0, #19464	; 0x4c08
   11cdc:	mov	r1, r9
   11ce0:	movt	r0, #1
   11ce4:	bl	133d8 <putchar_unlocked@plt+0x23b0>
   11ce8:	str	r0, [sp, #72]	; 0x48
   11cec:	mov	r8, #0
   11cf0:	mov	sl, r7
   11cf4:	tst	r7, #1
   11cf8:	str	r5, [fp, #-48]	; 0xffffffd0
   11cfc:	bne	11d38 <putchar_unlocked@plt+0xd10>
   11d00:	ldr	r0, [sp, #64]	; 0x40
   11d04:	ldrb	r0, [r0]
   11d08:	cmp	r0, #0
   11d0c:	beq	11d38 <putchar_unlocked@plt+0xd10>
   11d10:	ldr	r1, [sp, #64]	; 0x40
   11d14:	mov	r8, #0
   11d18:	add	r1, r1, #1
   11d1c:	cmp	r8, r6
   11d20:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   11d24:	strbcc	r0, [r2, r8]
   11d28:	ldrb	r0, [r1, r8]
   11d2c:	add	r8, r8, #1
   11d30:	cmp	r0, #0
   11d34:	bne	11d1c <putchar_unlocked@plt+0xcf4>
   11d38:	ldr	r7, [sp, #72]	; 0x48
   11d3c:	mov	r0, r7
   11d40:	bl	10f38 <strlen@plt>
   11d44:	ldr	ip, [fp, #-84]	; 0xffffffac
   11d48:	ldr	lr, [sp, #80]	; 0x50
   11d4c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   11d50:	str	r0, [fp, #-76]	; 0xffffffb4
   11d54:	str	r7, [sp, #92]	; 0x5c
   11d58:	mov	r3, #1
   11d5c:	b	11e50 <putchar_unlocked@plt+0xe28>
   11d60:	mov	r0, #1
   11d64:	b	11da4 <putchar_unlocked@plt+0xd7c>
   11d68:	mov	r9, #0
   11d6c:	mov	r8, #0
   11d70:	mov	r3, r0
   11d74:	b	11e4c <putchar_unlocked@plt+0xe24>
   11d78:	tst	r7, #1
   11d7c:	bne	11da4 <putchar_unlocked@plt+0xd7c>
   11d80:	mov	r3, r0
   11d84:	b	11dcc <putchar_unlocked@plt+0xda4>
   11d88:	mov	r0, #1
   11d8c:	mov	r8, #0
   11d90:	mov	r9, #5
   11d94:	b	11e04 <putchar_unlocked@plt+0xddc>
   11d98:	mov	r3, #1
   11d9c:	tst	r7, #1
   11da0:	beq	11dcc <putchar_unlocked@plt+0xda4>
   11da4:	mov	r1, #1
   11da8:	mov	r8, #0
   11dac:	mov	r9, #2
   11db0:	mov	r3, r0
   11db4:	mov	sl, #1
   11db8:	str	r1, [fp, #-76]	; 0xffffffb4
   11dbc:	movw	r1, #19464	; 0x4c08
   11dc0:	movt	r1, #1
   11dc4:	str	r1, [sp, #92]	; 0x5c
   11dc8:	b	11e50 <putchar_unlocked@plt+0xe28>
   11dcc:	cmp	r6, #0
   11dd0:	mov	r8, #1
   11dd4:	mov	r9, #2
   11dd8:	ldrne	r1, [fp, #-56]	; 0xffffffc8
   11ddc:	movne	r0, #39	; 0x27
   11de0:	strbne	r0, [r1]
   11de4:	movw	r0, #19464	; 0x4c08
   11de8:	movt	r0, #1
   11dec:	b	11e40 <putchar_unlocked@plt+0xe18>
   11df0:	mov	r9, #5
   11df4:	tst	r7, #1
   11df8:	beq	11e20 <putchar_unlocked@plt+0xdf8>
   11dfc:	mov	r0, #1
   11e00:	mov	r8, #0
   11e04:	str	r0, [fp, #-76]	; 0xffffffb4
   11e08:	movw	r0, #19460	; 0x4c04
   11e0c:	mov	r3, #1
   11e10:	mov	sl, #1
   11e14:	movt	r0, #1
   11e18:	str	r0, [sp, #92]	; 0x5c
   11e1c:	b	11e50 <putchar_unlocked@plt+0xe28>
   11e20:	cmp	r6, #0
   11e24:	mov	r8, #1
   11e28:	mov	r3, #1
   11e2c:	ldrne	r1, [fp, #-56]	; 0xffffffc8
   11e30:	movne	r0, #34	; 0x22
   11e34:	strbne	r0, [r1]
   11e38:	movw	r0, #19460	; 0x4c04
   11e3c:	movt	r0, #1
   11e40:	str	r0, [sp, #92]	; 0x5c
   11e44:	mov	r0, #1
   11e48:	str	r0, [fp, #-76]	; 0xffffffb4
   11e4c:	mov	sl, #0
   11e50:	ldr	r0, [fp, #16]
   11e54:	mov	r7, #0
   11e58:	str	r9, [fp, #-64]	; 0xffffffc0
   11e5c:	str	sl, [fp, #-72]	; 0xffffffb8
   11e60:	str	r3, [sp, #84]	; 0x54
   11e64:	cmp	r0, #0
   11e68:	movwne	r0, #1
   11e6c:	and	r0, r0, sl
   11e70:	str	r0, [fp, #-88]	; 0xffffffa8
   11e74:	ldr	r0, [fp, #-76]	; 0xffffffb4
   11e78:	cmp	r0, #0
   11e7c:	movwne	r0, #1
   11e80:	subs	r2, r9, #2
   11e84:	and	r1, r0, sl
   11e88:	str	r2, [fp, #-80]	; 0xffffffb0
   11e8c:	and	r1, r3, r1
   11e90:	str	r1, [sp, #44]	; 0x2c
   11e94:	clz	r1, r2
   11e98:	lsr	r1, r1, #5
   11e9c:	and	r1, r1, sl
   11ea0:	str	r1, [sp, #56]	; 0x38
   11ea4:	mov	r1, r2
   11ea8:	eor	r2, sl, #1
   11eac:	movwne	r1, #1
   11eb0:	str	r2, [sp, #88]	; 0x58
   11eb4:	orr	r2, r1, r2
   11eb8:	and	r1, r1, r3
   11ebc:	and	r0, r0, r1
   11ec0:	str	r2, [sp, #60]	; 0x3c
   11ec4:	str	r1, [fp, #-68]	; 0xffffffbc
   11ec8:	str	r0, [fp, #-60]	; 0xffffffc4
   11ecc:	eor	r0, r3, #1
   11ed0:	str	r0, [sp, #48]	; 0x30
   11ed4:	cmn	lr, #1
   11ed8:	beq	11ee8 <putchar_unlocked@plt+0xec0>
   11edc:	cmp	r7, lr
   11ee0:	bne	11ef4 <putchar_unlocked@plt+0xecc>
   11ee4:	b	12aa0 <putchar_unlocked@plt+0x1a78>
   11ee8:	ldrb	r0, [ip, r7]
   11eec:	cmp	r0, #0
   11ef0:	beq	12aa8 <putchar_unlocked@plt+0x1a80>
   11ef4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11ef8:	mov	r9, #0
   11efc:	str	r5, [fp, #-48]	; 0xffffffd0
   11f00:	str	r6, [fp, #-52]	; 0xffffffcc
   11f04:	cmp	r0, #0
   11f08:	beq	11f48 <putchar_unlocked@plt+0xf20>
   11f0c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   11f10:	mov	r5, r4
   11f14:	add	r4, r7, r0
   11f18:	cmp	r0, #2
   11f1c:	bcc	11f38 <putchar_unlocked@plt+0xf10>
   11f20:	cmn	lr, #1
   11f24:	bne	11f38 <putchar_unlocked@plt+0xf10>
   11f28:	mov	r0, ip
   11f2c:	bl	10f38 <strlen@plt>
   11f30:	ldr	ip, [fp, #-84]	; 0xffffffac
   11f34:	mov	lr, r0
   11f38:	cmp	r4, lr
   11f3c:	bls	11f50 <putchar_unlocked@plt+0xf28>
   11f40:	mov	r6, #0
   11f44:	b	11f90 <putchar_unlocked@plt+0xf68>
   11f48:	mov	r6, #0
   11f4c:	b	11f94 <putchar_unlocked@plt+0xf6c>
   11f50:	ldr	r1, [sp, #92]	; 0x5c
   11f54:	ldr	r2, [fp, #-76]	; 0xffffffb4
   11f58:	add	r0, ip, r7
   11f5c:	mov	r4, lr
   11f60:	bl	10e54 <memcmp@plt>
   11f64:	ldr	r2, [sp, #88]	; 0x58
   11f68:	cmp	r0, #0
   11f6c:	mov	r1, r0
   11f70:	movwne	r1, #1
   11f74:	orr	r1, r1, r2
   11f78:	tst	r1, #1
   11f7c:	beq	12b3c <putchar_unlocked@plt+0x1b14>
   11f80:	ldr	ip, [fp, #-84]	; 0xffffffac
   11f84:	clz	r0, r0
   11f88:	mov	lr, r4
   11f8c:	lsr	r6, r0, #5
   11f90:	mov	r4, r5
   11f94:	ldrb	r5, [ip, r7]
   11f98:	cmp	r5, #126	; 0x7e
   11f9c:	bhi	12364 <putchar_unlocked@plt+0x133c>
   11fa0:	add	r3, pc, #16
   11fa4:	mov	sl, #1
   11fa8:	mov	r2, #110	; 0x6e
   11fac:	mov	r0, #97	; 0x61
   11fb0:	mov	r1, #0
   11fb4:	ldr	pc, [r3, r5, lsl #2]
   11fb8:	andeq	r2, r1, r8, asr #4
   11fbc:	andeq	r2, r1, r4, ror #6
   11fc0:	andeq	r2, r1, r4, ror #6
   11fc4:	andeq	r2, r1, r4, ror #6
   11fc8:	andeq	r2, r1, r4, ror #6
   11fcc:	andeq	r2, r1, r4, ror #6
   11fd0:	andeq	r2, r1, r4, ror #6
   11fd4:	andeq	r2, r1, r8, lsl #8
   11fd8:	andeq	r2, r1, r8, lsr #4
   11fdc:	andeq	r2, r1, r0, lsr #4
   11fe0:	andeq	r2, r1, r4, lsr r2
   11fe4:			; <UNDEFINED> instruction: 0x000122b8
   11fe8:	andeq	r2, r1, r8, lsl r2
   11fec:	andeq	r2, r1, r0, lsr r2
   11ff0:	andeq	r2, r1, r4, ror #6
   11ff4:	andeq	r2, r1, r4, ror #6
   11ff8:	andeq	r2, r1, r4, ror #6
   11ffc:	andeq	r2, r1, r4, ror #6
   12000:	andeq	r2, r1, r4, ror #6
   12004:	andeq	r2, r1, r4, ror #6
   12008:	andeq	r2, r1, r4, ror #6
   1200c:	andeq	r2, r1, r4, ror #6
   12010:	andeq	r2, r1, r4, ror #6
   12014:	andeq	r2, r1, r4, ror #6
   12018:	andeq	r2, r1, r4, ror #6
   1201c:	andeq	r2, r1, r4, ror #6
   12020:	andeq	r2, r1, r4, ror #6
   12024:	andeq	r2, r1, r4, ror #6
   12028:	andeq	r2, r1, r4, ror #6
   1202c:	andeq	r2, r1, r4, ror #6
   12030:	andeq	r2, r1, r4, ror #6
   12034:	andeq	r2, r1, r4, ror #6
   12038:	andeq	r2, r1, r8, asr #7
   1203c:	andeq	r2, r1, ip, asr #7
   12040:	andeq	r2, r1, ip, asr #7
   12044:	andeq	r2, r1, r8, asr #3
   12048:	andeq	r2, r1, ip, asr #7
   1204c:			; <UNDEFINED> instruction: 0x000121b4
   12050:	andeq	r2, r1, ip, asr #7
   12054:	andeq	r2, r1, r0, asr #5
   12058:	andeq	r2, r1, ip, asr #7
   1205c:	andeq	r2, r1, ip, asr #7
   12060:	andeq	r2, r1, ip, asr #7
   12064:			; <UNDEFINED> instruction: 0x000121b4
   12068:			; <UNDEFINED> instruction: 0x000121b4
   1206c:			; <UNDEFINED> instruction: 0x000121b4
   12070:			; <UNDEFINED> instruction: 0x000121b4
   12074:			; <UNDEFINED> instruction: 0x000121b4
   12078:			; <UNDEFINED> instruction: 0x000121b4
   1207c:			; <UNDEFINED> instruction: 0x000121b4
   12080:			; <UNDEFINED> instruction: 0x000121b4
   12084:			; <UNDEFINED> instruction: 0x000121b4
   12088:			; <UNDEFINED> instruction: 0x000121b4
   1208c:			; <UNDEFINED> instruction: 0x000121b4
   12090:			; <UNDEFINED> instruction: 0x000121b4
   12094:			; <UNDEFINED> instruction: 0x000121b4
   12098:			; <UNDEFINED> instruction: 0x000121b4
   1209c:			; <UNDEFINED> instruction: 0x000121b4
   120a0:			; <UNDEFINED> instruction: 0x000121b4
   120a4:	andeq	r2, r1, ip, asr #7
   120a8:	andeq	r2, r1, ip, asr #7
   120ac:	andeq	r2, r1, ip, asr #7
   120b0:	andeq	r2, r1, ip, asr #7
   120b4:	andeq	r2, r1, ip, lsl #5
   120b8:	andeq	r2, r1, r4, ror #6
   120bc:			; <UNDEFINED> instruction: 0x000121b4
   120c0:			; <UNDEFINED> instruction: 0x000121b4
   120c4:			; <UNDEFINED> instruction: 0x000121b4
   120c8:			; <UNDEFINED> instruction: 0x000121b4
   120cc:			; <UNDEFINED> instruction: 0x000121b4
   120d0:			; <UNDEFINED> instruction: 0x000121b4
   120d4:			; <UNDEFINED> instruction: 0x000121b4
   120d8:			; <UNDEFINED> instruction: 0x000121b4
   120dc:			; <UNDEFINED> instruction: 0x000121b4
   120e0:			; <UNDEFINED> instruction: 0x000121b4
   120e4:			; <UNDEFINED> instruction: 0x000121b4
   120e8:			; <UNDEFINED> instruction: 0x000121b4
   120ec:			; <UNDEFINED> instruction: 0x000121b4
   120f0:			; <UNDEFINED> instruction: 0x000121b4
   120f4:			; <UNDEFINED> instruction: 0x000121b4
   120f8:			; <UNDEFINED> instruction: 0x000121b4
   120fc:			; <UNDEFINED> instruction: 0x000121b4
   12100:			; <UNDEFINED> instruction: 0x000121b4
   12104:			; <UNDEFINED> instruction: 0x000121b4
   12108:			; <UNDEFINED> instruction: 0x000121b4
   1210c:			; <UNDEFINED> instruction: 0x000121b4
   12110:			; <UNDEFINED> instruction: 0x000121b4
   12114:			; <UNDEFINED> instruction: 0x000121b4
   12118:			; <UNDEFINED> instruction: 0x000121b4
   1211c:			; <UNDEFINED> instruction: 0x000121b4
   12120:			; <UNDEFINED> instruction: 0x000121b4
   12124:	andeq	r2, r1, ip, asr #7
   12128:	strdeq	r2, [r1], -r4
   1212c:			; <UNDEFINED> instruction: 0x000121b4
   12130:	andeq	r2, r1, ip, asr #7
   12134:			; <UNDEFINED> instruction: 0x000121b4
   12138:	andeq	r2, r1, ip, asr #7
   1213c:			; <UNDEFINED> instruction: 0x000121b4
   12140:			; <UNDEFINED> instruction: 0x000121b4
   12144:			; <UNDEFINED> instruction: 0x000121b4
   12148:			; <UNDEFINED> instruction: 0x000121b4
   1214c:			; <UNDEFINED> instruction: 0x000121b4
   12150:			; <UNDEFINED> instruction: 0x000121b4
   12154:			; <UNDEFINED> instruction: 0x000121b4
   12158:			; <UNDEFINED> instruction: 0x000121b4
   1215c:			; <UNDEFINED> instruction: 0x000121b4
   12160:			; <UNDEFINED> instruction: 0x000121b4
   12164:			; <UNDEFINED> instruction: 0x000121b4
   12168:			; <UNDEFINED> instruction: 0x000121b4
   1216c:			; <UNDEFINED> instruction: 0x000121b4
   12170:			; <UNDEFINED> instruction: 0x000121b4
   12174:			; <UNDEFINED> instruction: 0x000121b4
   12178:			; <UNDEFINED> instruction: 0x000121b4
   1217c:			; <UNDEFINED> instruction: 0x000121b4
   12180:			; <UNDEFINED> instruction: 0x000121b4
   12184:			; <UNDEFINED> instruction: 0x000121b4
   12188:			; <UNDEFINED> instruction: 0x000121b4
   1218c:			; <UNDEFINED> instruction: 0x000121b4
   12190:			; <UNDEFINED> instruction: 0x000121b4
   12194:			; <UNDEFINED> instruction: 0x000121b4
   12198:			; <UNDEFINED> instruction: 0x000121b4
   1219c:			; <UNDEFINED> instruction: 0x000121b4
   121a0:			; <UNDEFINED> instruction: 0x000121b4
   121a4:	ldrdeq	r2, [r1], -r8
   121a8:	andeq	r2, r1, ip, asr #7
   121ac:	ldrdeq	r2, [r1], -r8
   121b0:	andeq	r2, r1, r8, asr #3
   121b4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   121b8:	cmp	r0, #0
   121bc:	beq	1241c <putchar_unlocked@plt+0x13f4>
   121c0:	ldr	r0, [fp, #16]
   121c4:	b	12420 <putchar_unlocked@plt+0x13f8>
   121c8:	mov	sl, #0
   121cc:	cmp	r7, #0
   121d0:	bne	12638 <putchar_unlocked@plt+0x1610>
   121d4:	b	123c8 <putchar_unlocked@plt+0x13a0>
   121d8:	mov	sl, #0
   121dc:	cmn	lr, #1
   121e0:	beq	123b4 <putchar_unlocked@plt+0x138c>
   121e4:	cmp	r7, #0
   121e8:	cmpeq	lr, #1
   121ec:	bne	12638 <putchar_unlocked@plt+0x1610>
   121f0:	b	123c8 <putchar_unlocked@plt+0x13a0>
   121f4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   121f8:	cmp	r0, #2
   121fc:	bne	123ec <putchar_unlocked@plt+0x13c4>
   12200:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12204:	tst	r0, #1
   12208:	bne	12b58 <putchar_unlocked@plt+0x1b30>
   1220c:	mov	r9, #0
   12210:	mov	r0, #92	; 0x5c
   12214:	b	12400 <putchar_unlocked@plt+0x13d8>
   12218:	mov	r0, #102	; 0x66
   1221c:	b	12408 <putchar_unlocked@plt+0x13e0>
   12220:	mov	r2, #116	; 0x74
   12224:	b	12234 <putchar_unlocked@plt+0x120c>
   12228:	mov	r0, #98	; 0x62
   1222c:	b	12408 <putchar_unlocked@plt+0x13e0>
   12230:	mov	r2, #114	; 0x72
   12234:	ldr	r0, [sp, #60]	; 0x3c
   12238:	tst	r0, #1
   1223c:	mov	r0, r2
   12240:	bne	12408 <putchar_unlocked@plt+0x13e0>
   12244:	b	12b58 <putchar_unlocked@plt+0x1b30>
   12248:	ldr	r0, [sp, #84]	; 0x54
   1224c:	tst	r0, #1
   12250:	beq	124f4 <putchar_unlocked@plt+0x14cc>
   12254:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12258:	tst	r0, #1
   1225c:	bne	12c60 <putchar_unlocked@plt+0x1c38>
   12260:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12264:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12268:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1226c:	cmp	r0, #2
   12270:	ldr	r0, [fp, #-80]	; 0xffffffb0
   12274:	movwne	r0, #1
   12278:	orr	r0, r0, r3
   1227c:	tst	r0, #1
   12280:	beq	12974 <putchar_unlocked@plt+0x194c>
   12284:	mov	r0, r8
   12288:	b	129b4 <putchar_unlocked@plt+0x198c>
   1228c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12290:	mov	r9, #0
   12294:	mov	r5, #63	; 0x3f
   12298:	cmp	r0, #5
   1229c:	beq	12640 <putchar_unlocked@plt+0x1618>
   122a0:	cmp	r0, #2
   122a4:	bne	12700 <putchar_unlocked@plt+0x16d8>
   122a8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   122ac:	tst	r0, #1
   122b0:	beq	12704 <putchar_unlocked@plt+0x16dc>
   122b4:	b	12b58 <putchar_unlocked@plt+0x1b30>
   122b8:	mov	r0, #118	; 0x76
   122bc:	b	12408 <putchar_unlocked@plt+0x13e0>
   122c0:	mov	r0, #1
   122c4:	mov	r5, #39	; 0x27
   122c8:	str	r0, [sp, #52]	; 0x34
   122cc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   122d0:	cmp	r0, #2
   122d4:	bne	1235c <putchar_unlocked@plt+0x1334>
   122d8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   122dc:	tst	r0, #1
   122e0:	bne	12b58 <putchar_unlocked@plt+0x1b30>
   122e4:	ldr	r3, [sp, #68]	; 0x44
   122e8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   122ec:	mov	r9, #0
   122f0:	clz	r1, r2
   122f4:	cmp	r3, #0
   122f8:	mov	r0, r3
   122fc:	movwne	r0, #1
   12300:	lsr	r1, r1, #5
   12304:	orrs	r0, r0, r1
   12308:	moveq	r3, r2
   1230c:	moveq	r2, r0
   12310:	cmp	r8, r2
   12314:	str	r3, [sp, #68]	; 0x44
   12318:	str	r2, [fp, #-52]	; 0xffffffcc
   1231c:	ldrcc	r1, [fp, #-56]	; 0xffffffc8
   12320:	movcc	r0, #39	; 0x27
   12324:	strbcc	r0, [r1, r8]
   12328:	add	r0, r8, #1
   1232c:	cmp	r0, r2
   12330:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   12334:	movcc	r1, #92	; 0x5c
   12338:	strbcc	r1, [r3, r0]
   1233c:	add	r0, r8, #2
   12340:	add	r8, r8, #3
   12344:	cmp	r0, r2
   12348:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   1234c:	movcc	r1, #39	; 0x27
   12350:	strbcc	r1, [r2, r0]
   12354:	mov	r0, #0
   12358:	str	r0, [fp, #-48]	; 0xffffffd0
   1235c:	mov	sl, #1
   12360:	b	121b4 <putchar_unlocked@plt+0x118c>
   12364:	ldr	r0, [sp, #32]
   12368:	cmp	r0, #1
   1236c:	bne	12518 <putchar_unlocked@plt+0x14f0>
   12370:	str	lr, [sp, #80]	; 0x50
   12374:	bl	10f20 <__ctype_b_loc@plt>
   12378:	ldr	r0, [r0]
   1237c:	ldr	ip, [fp, #-84]	; 0xffffffac
   12380:	mov	r1, #1
   12384:	add	r0, r0, r5, lsl #1
   12388:	ldrb	r0, [r0, #1]
   1238c:	ubfx	sl, r0, #6, #1
   12390:	ldr	r0, [sp, #48]	; 0x30
   12394:	mov	r2, r1
   12398:	cmp	r1, #1
   1239c:	orr	r0, sl, r0
   123a0:	bhi	1270c <putchar_unlocked@plt+0x16e4>
   123a4:	tst	r0, #1
   123a8:	beq	1270c <putchar_unlocked@plt+0x16e4>
   123ac:	ldr	lr, [sp, #80]	; 0x50
   123b0:	b	121b4 <putchar_unlocked@plt+0x118c>
   123b4:	cmp	r7, #0
   123b8:	bne	12634 <putchar_unlocked@plt+0x160c>
   123bc:	ldrb	r0, [ip, #1]
   123c0:	cmp	r0, #0
   123c4:	bne	12634 <putchar_unlocked@plt+0x160c>
   123c8:	mov	r1, #1
   123cc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   123d0:	cmp	r0, #2
   123d4:	bne	123e4 <putchar_unlocked@plt+0x13bc>
   123d8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   123dc:	tst	r0, #1
   123e0:	bne	12b58 <putchar_unlocked@plt+0x1b30>
   123e4:	mov	sl, r1
   123e8:	b	121b4 <putchar_unlocked@plt+0x118c>
   123ec:	ldr	r1, [sp, #44]	; 0x2c
   123f0:	mov	r9, #0
   123f4:	mov	r0, #92	; 0x5c
   123f8:	cmp	r1, #0
   123fc:	beq	12408 <putchar_unlocked@plt+0x13e0>
   12400:	mov	sl, #0
   12404:	b	12920 <putchar_unlocked@plt+0x18f8>
   12408:	ldr	r1, [sp, #84]	; 0x54
   1240c:	mov	sl, #0
   12410:	mov	r9, #0
   12414:	tst	r1, #1
   12418:	bne	12454 <putchar_unlocked@plt+0x142c>
   1241c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   12420:	cmp	r0, #0
   12424:	mov	r0, r5
   12428:	beq	1244c <putchar_unlocked@plt+0x1424>
   1242c:	ldr	r1, [fp, #16]
   12430:	ubfx	r0, r5, #5, #3
   12434:	mov	r2, #1
   12438:	ldr	r0, [r1, r0, lsl #2]
   1243c:	and	r1, r5, #31
   12440:	tst	r0, r2, lsl r1
   12444:	mov	r0, r5
   12448:	bne	12454 <putchar_unlocked@plt+0x142c>
   1244c:	cmp	r6, #0
   12450:	beq	12920 <putchar_unlocked@plt+0x18f8>
   12454:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12458:	ldr	r6, [fp, #-52]	; 0xffffffcc
   1245c:	tst	r1, #1
   12460:	bne	12b34 <putchar_unlocked@plt+0x1b0c>
   12464:	ldr	r1, [fp, #-64]	; 0xffffffc0
   12468:	ldr	r5, [fp, #-48]	; 0xffffffd0
   1246c:	cmp	r1, #2
   12470:	ldr	r1, [fp, #-80]	; 0xffffffb0
   12474:	movwne	r1, #1
   12478:	orr	r1, r1, r5
   1247c:	tst	r1, #1
   12480:	bne	124c4 <putchar_unlocked@plt+0x149c>
   12484:	cmp	r8, r6
   12488:	mov	r5, #1
   1248c:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12490:	movcc	r1, #39	; 0x27
   12494:	strbcc	r1, [r2, r8]
   12498:	add	r1, r8, #1
   1249c:	cmp	r1, r6
   124a0:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   124a4:	movcc	r2, #36	; 0x24
   124a8:	strbcc	r2, [r3, r1]
   124ac:	add	r1, r8, #2
   124b0:	add	r8, r8, #3
   124b4:	cmp	r1, r6
   124b8:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   124bc:	movcc	r2, #39	; 0x27
   124c0:	strbcc	r2, [r3, r1]
   124c4:	cmp	r8, r6
   124c8:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   124cc:	movcc	r1, #92	; 0x5c
   124d0:	strbcc	r1, [r2, r8]
   124d4:	add	r8, r8, #1
   124d8:	cmp	r8, r6
   124dc:	and	r4, r4, sl
   124e0:	ldrcc	r1, [fp, #-56]	; 0xffffffc8
   124e4:	strbcc	r0, [r1, r8]
   124e8:	add	r8, r8, #1
   124ec:	add	r7, r7, #1
   124f0:	b	11ed4 <putchar_unlocked@plt+0xeac>
   124f4:	ldr	r0, [sp, #28]
   124f8:	mov	sl, #0
   124fc:	mov	r9, #0
   12500:	mov	r5, #0
   12504:	cmp	r0, #0
   12508:	beq	1241c <putchar_unlocked@plt+0x13f4>
   1250c:	ldr	r6, [fp, #-52]	; 0xffffffcc
   12510:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12514:	b	124ec <putchar_unlocked@plt+0x14c4>
   12518:	mov	r0, #0
   1251c:	cmn	lr, #1
   12520:	str	r6, [sp, #76]	; 0x4c
   12524:	str	r4, [sp, #20]
   12528:	str	r0, [fp, #-36]	; 0xffffffdc
   1252c:	str	r0, [fp, #-40]	; 0xffffffd8
   12530:	bne	12544 <putchar_unlocked@plt+0x151c>
   12534:	mov	r0, ip
   12538:	bl	10f38 <strlen@plt>
   1253c:	ldr	ip, [fp, #-84]	; 0xffffffac
   12540:	mov	lr, r0
   12544:	add	r0, ip, r7
   12548:	mov	sl, #1
   1254c:	mov	r6, #0
   12550:	sub	r4, fp, #40	; 0x28
   12554:	str	lr, [sp, #80]	; 0x50
   12558:	str	r0, [sp, #36]	; 0x24
   1255c:	str	r6, [sp, #40]	; 0x28
   12560:	add	r6, r6, r7
   12564:	sub	r0, fp, #44	; 0x2c
   12568:	mov	r3, r4
   1256c:	add	r1, ip, r6
   12570:	sub	r2, lr, r6
   12574:	bl	141a4 <putchar_unlocked@plt+0x317c>
   12578:	cmp	r0, #0
   1257c:	beq	12a88 <putchar_unlocked@plt+0x1a60>
   12580:	cmn	r0, #1
   12584:	beq	12a48 <putchar_unlocked@plt+0x1a20>
   12588:	ldr	lr, [sp, #80]	; 0x50
   1258c:	cmn	r0, #2
   12590:	beq	12a50 <putchar_unlocked@plt+0x1a28>
   12594:	ldr	r2, [sp, #56]	; 0x38
   12598:	cmp	r0, #2
   1259c:	mov	r1, #0
   125a0:	movwcc	r1, #1
   125a4:	eor	r2, r2, #1
   125a8:	orrs	r1, r2, r1
   125ac:	bne	125f8 <putchar_unlocked@plt+0x15d0>
   125b0:	ldr	r1, [sp, #40]	; 0x28
   125b4:	ldr	r2, [sp, #36]	; 0x24
   125b8:	add	ip, r2, r1
   125bc:	mov	r2, #1
   125c0:	ldrb	r3, [ip, r2]
   125c4:	sub	r6, r3, #94	; 0x5e
   125c8:	cmp	r6, #30
   125cc:	bhi	125e0 <putchar_unlocked@plt+0x15b8>
   125d0:	mov	r4, #1
   125d4:	mov	r1, #1073741829	; 0x40000005
   125d8:	tst	r1, r4, lsl r6
   125dc:	bne	12b54 <putchar_unlocked@plt+0x1b2c>
   125e0:	sub	r3, r3, #91	; 0x5b
   125e4:	cmp	r3, #2
   125e8:	bcc	12b54 <putchar_unlocked@plt+0x1b2c>
   125ec:	add	r2, r2, #1
   125f0:	cmp	r2, r0
   125f4:	bcc	125c0 <putchar_unlocked@plt+0x1598>
   125f8:	ldr	r6, [sp, #40]	; 0x28
   125fc:	add	r6, r0, r6
   12600:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12604:	bl	10e84 <iswprint@plt>
   12608:	cmp	r0, #0
   1260c:	sub	r4, fp, #40	; 0x28
   12610:	movwne	r0, #1
   12614:	and	sl, sl, r0
   12618:	mov	r0, r4
   1261c:	bl	10e48 <mbsinit@plt>
   12620:	ldr	lr, [sp, #80]	; 0x50
   12624:	ldr	ip, [fp, #-84]	; 0xffffffac
   12628:	cmp	r0, #0
   1262c:	beq	1255c <putchar_unlocked@plt+0x1534>
   12630:	b	12a90 <putchar_unlocked@plt+0x1a68>
   12634:	mvn	lr, #0
   12638:	mov	r9, #0
   1263c:	b	121b4 <putchar_unlocked@plt+0x118c>
   12640:	ldr	r0, [sp, #24]
   12644:	cmp	r0, #0
   12648:	beq	12700 <putchar_unlocked@plt+0x16d8>
   1264c:	add	r0, r7, #2
   12650:	cmp	r0, lr
   12654:	bcs	12700 <putchar_unlocked@plt+0x16d8>
   12658:	add	r1, ip, r7
   1265c:	ldrb	r1, [r1, #1]
   12660:	cmp	r1, #63	; 0x3f
   12664:	bne	12700 <putchar_unlocked@plt+0x16d8>
   12668:	ldrb	r5, [ip, r0]
   1266c:	sub	r1, r5, #33	; 0x21
   12670:	cmp	r1, #29
   12674:	bhi	12700 <putchar_unlocked@plt+0x16d8>
   12678:	movw	r3, #20929	; 0x51c1
   1267c:	mov	r2, #1
   12680:	movt	r3, #14336	; 0x3800
   12684:	tst	r3, r2, lsl r1
   12688:	beq	12700 <putchar_unlocked@plt+0x16d8>
   1268c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12690:	tst	r1, #1
   12694:	bne	12c68 <putchar_unlocked@plt+0x1c40>
   12698:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1269c:	mov	r7, r0
   126a0:	cmp	r8, r1
   126a4:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   126a8:	movcc	r1, #63	; 0x3f
   126ac:	strbcc	r1, [r2, r8]
   126b0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   126b4:	add	r1, r8, #1
   126b8:	cmp	r1, r2
   126bc:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   126c0:	movcc	r2, #34	; 0x22
   126c4:	strbcc	r2, [r3, r1]
   126c8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   126cc:	add	r1, r8, #2
   126d0:	cmp	r1, r2
   126d4:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   126d8:	movcc	r2, #34	; 0x22
   126dc:	strbcc	r2, [r3, r1]
   126e0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   126e4:	add	r1, r8, #3
   126e8:	add	r8, r8, #4
   126ec:	cmp	r1, r2
   126f0:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   126f4:	movcc	r2, #63	; 0x3f
   126f8:	strbcc	r2, [r3, r1]
   126fc:	b	12704 <putchar_unlocked@plt+0x16dc>
   12700:	mov	r5, #63	; 0x3f
   12704:	mov	sl, #0
   12708:	b	121b4 <putchar_unlocked@plt+0x118c>
   1270c:	str	r0, [sp, #40]	; 0x28
   12710:	add	r0, r2, r7
   12714:	str	r6, [sp, #76]	; 0x4c
   12718:	add	r1, r7, #1
   1271c:	ldr	lr, [sp, #80]	; 0x50
   12720:	ldr	r7, [fp, #-64]	; 0xffffffc0
   12724:	ldr	r6, [fp, #-52]	; 0xffffffcc
   12728:	mov	r3, #0
   1272c:	str	r0, [sp, #36]	; 0x24
   12730:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12734:	b	127c8 <putchar_unlocked@plt+0x17a0>
   12738:	str	r0, [sp, #76]	; 0x4c
   1273c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12740:	cmp	r9, #0
   12744:	movwne	r9, #1
   12748:	mvn	r7, r0
   1274c:	orr	r7, r7, r9
   12750:	tst	r7, #1
   12754:	bne	127a4 <putchar_unlocked@plt+0x177c>
   12758:	ldr	r6, [fp, #-52]	; 0xffffffcc
   1275c:	cmp	r8, r6
   12760:	bcs	12778 <putchar_unlocked@plt+0x1750>
   12764:	ldr	r7, [fp, #-56]	; 0xffffffc8
   12768:	mov	r2, r4
   1276c:	mov	r4, #39	; 0x27
   12770:	strb	r4, [r7, r8]
   12774:	mov	r4, r2
   12778:	add	r7, r8, #1
   1277c:	cmp	r7, r6
   12780:	bcs	12798 <putchar_unlocked@plt+0x1770>
   12784:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12788:	mov	r2, r4
   1278c:	mov	r4, #39	; 0x27
   12790:	strb	r4, [r0, r7]
   12794:	mov	r4, r2
   12798:	add	r8, r8, #2
   1279c:	mov	r0, #0
   127a0:	b	127ac <putchar_unlocked@plt+0x1784>
   127a4:	ldr	r6, [fp, #-52]	; 0xffffffcc
   127a8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   127ac:	cmp	r8, r6
   127b0:	ldr	r7, [fp, #-64]	; 0xffffffc0
   127b4:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   127b8:	strbcc	r5, [r2, r8]
   127bc:	add	r8, r8, #1
   127c0:	ldrb	r5, [ip, r1]
   127c4:	add	r1, r1, #1
   127c8:	ldr	r2, [sp, #40]	; 0x28
   127cc:	tst	r2, #1
   127d0:	beq	1280c <putchar_unlocked@plt+0x17e4>
   127d4:	ldr	r2, [sp, #76]	; 0x4c
   127d8:	str	r0, [fp, #-48]	; 0xffffffd0
   127dc:	tst	r2, #1
   127e0:	beq	12804 <putchar_unlocked@plt+0x17dc>
   127e4:	cmp	r8, r6
   127e8:	bcs	12800 <putchar_unlocked@plt+0x17d8>
   127ec:	ldr	r6, [fp, #-56]	; 0xffffffc8
   127f0:	mov	r2, r4
   127f4:	mov	r4, #92	; 0x5c
   127f8:	strb	r4, [r6, r8]
   127fc:	mov	r4, r2
   12800:	add	r8, r8, #1
   12804:	mov	r0, #0
   12808:	b	12900 <putchar_unlocked@plt+0x18d8>
   1280c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   12810:	tst	r2, #1
   12814:	bne	12b60 <putchar_unlocked@plt+0x1b38>
   12818:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1281c:	cmp	r7, #2
   12820:	movwne	r3, #1
   12824:	orr	r3, r3, r0
   12828:	tst	r3, #1
   1282c:	bne	12888 <putchar_unlocked@plt+0x1860>
   12830:	cmp	r8, r6
   12834:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12838:	movcc	r3, #39	; 0x27
   1283c:	strbcc	r3, [r2, r8]
   12840:	add	r3, r8, #1
   12844:	cmp	r3, r6
   12848:	bcs	12860 <putchar_unlocked@plt+0x1838>
   1284c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12850:	mov	r7, r4
   12854:	mov	r4, #36	; 0x24
   12858:	strb	r4, [r2, r3]
   1285c:	mov	r4, r7
   12860:	add	r3, r8, #2
   12864:	cmp	r3, r6
   12868:	bcs	12880 <putchar_unlocked@plt+0x1858>
   1286c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12870:	mov	r7, r4
   12874:	mov	r4, #39	; 0x27
   12878:	strb	r4, [r2, r3]
   1287c:	mov	r4, r7
   12880:	add	r8, r8, #3
   12884:	mov	r0, #1
   12888:	cmp	r8, r6
   1288c:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12890:	movcc	r3, #92	; 0x5c
   12894:	strbcc	r3, [r2, r8]
   12898:	add	r3, r8, #1
   1289c:	cmp	r3, r6
   128a0:	bcs	128c0 <putchar_unlocked@plt+0x1898>
   128a4:	mov	r2, r4
   128a8:	and	r7, r5, #192	; 0xc0
   128ac:	mov	r4, #48	; 0x30
   128b0:	orr	r7, r4, r7, lsr #6
   128b4:	mov	r4, r2
   128b8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   128bc:	strb	r7, [r2, r3]
   128c0:	add	r3, r8, #2
   128c4:	cmp	r3, r6
   128c8:	bcs	128e8 <putchar_unlocked@plt+0x18c0>
   128cc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   128d0:	mov	r6, r4
   128d4:	lsr	r7, r5, #3
   128d8:	mov	r4, #6
   128dc:	bfi	r7, r4, #3, #29
   128e0:	mov	r4, r6
   128e4:	strb	r7, [r2, r3]
   128e8:	str	r0, [fp, #-48]	; 0xffffffd0
   128ec:	ldr	r0, [sp, #76]	; 0x4c
   128f0:	mov	r3, #6
   128f4:	add	r8, r8, #3
   128f8:	bfi	r5, r3, #3, #29
   128fc:	mov	r3, #1
   12900:	ldr	r2, [sp, #36]	; 0x24
   12904:	and	r9, r3, #1
   12908:	cmp	r2, r1
   1290c:	bhi	12738 <putchar_unlocked@plt+0x1710>
   12910:	cmp	r9, #0
   12914:	sub	r7, r1, #1
   12918:	mov	r0, r5
   1291c:	movwne	r9, #1
   12920:	cmp	r9, #0
   12924:	bne	12968 <putchar_unlocked@plt+0x1940>
   12928:	ldr	r5, [fp, #-48]	; 0xffffffd0
   1292c:	ldr	r6, [fp, #-52]	; 0xffffffcc
   12930:	tst	r5, #1
   12934:	beq	124d8 <putchar_unlocked@plt+0x14b0>
   12938:	cmp	r8, r6
   1293c:	mov	r5, #0
   12940:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12944:	movcc	r1, #39	; 0x27
   12948:	strbcc	r1, [r2, r8]
   1294c:	add	r1, r8, #1
   12950:	add	r8, r8, #2
   12954:	cmp	r1, r6
   12958:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   1295c:	movcc	r2, #39	; 0x27
   12960:	strbcc	r2, [r3, r1]
   12964:	b	124d8 <putchar_unlocked@plt+0x14b0>
   12968:	ldr	r6, [fp, #-52]	; 0xffffffcc
   1296c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12970:	b	124d8 <putchar_unlocked@plt+0x14b0>
   12974:	cmp	r8, r1
   12978:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   1297c:	movcc	r0, #39	; 0x27
   12980:	strbcc	r0, [r2, r8]
   12984:	add	r0, r8, #1
   12988:	cmp	r0, r1
   1298c:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   12990:	movcc	r2, #36	; 0x24
   12994:	strbcc	r2, [r3, r0]
   12998:	add	r0, r8, #2
   1299c:	cmp	r0, r1
   129a0:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   129a4:	movcc	r2, #39	; 0x27
   129a8:	strbcc	r2, [r3, r0]
   129ac:	add	r0, r8, #3
   129b0:	mov	r3, #1
   129b4:	cmp	r0, r1
   129b8:	add	r8, r0, #1
   129bc:	str	r3, [fp, #-48]	; 0xffffffd0
   129c0:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   129c4:	movcc	r1, #92	; 0x5c
   129c8:	strbcc	r1, [r2, r0]
   129cc:	ldr	r1, [fp, #-64]	; 0xffffffc0
   129d0:	cmp	r1, #2
   129d4:	beq	12a38 <putchar_unlocked@plt+0x1a10>
   129d8:	add	r1, r7, #1
   129dc:	mov	sl, #0
   129e0:	mov	r9, #1
   129e4:	mov	r5, #48	; 0x30
   129e8:	cmp	r1, lr
   129ec:	bcs	121b4 <putchar_unlocked@plt+0x118c>
   129f0:	ldrb	r1, [ip, r1]
   129f4:	sub	r1, r1, #48	; 0x30
   129f8:	uxtb	r1, r1
   129fc:	cmp	r1, #9
   12a00:	bhi	121b4 <putchar_unlocked@plt+0x118c>
   12a04:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12a08:	cmp	r8, r1
   12a0c:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12a10:	movcc	r1, #48	; 0x30
   12a14:	strbcc	r1, [r2, r8]
   12a18:	ldr	r2, [fp, #-52]	; 0xffffffcc
   12a1c:	add	r1, r0, #2
   12a20:	add	r8, r0, #3
   12a24:	cmp	r1, r2
   12a28:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   12a2c:	movcc	r2, #48	; 0x30
   12a30:	strbcc	r2, [r3, r1]
   12a34:	b	121b4 <putchar_unlocked@plt+0x118c>
   12a38:	mov	r0, #48	; 0x30
   12a3c:	mov	r9, #1
   12a40:	mov	sl, #0
   12a44:	b	1244c <putchar_unlocked@plt+0x1424>
   12a48:	mov	sl, #0
   12a4c:	b	12a88 <putchar_unlocked@plt+0x1a60>
   12a50:	mov	sl, #0
   12a54:	cmp	lr, r6
   12a58:	bls	12a88 <putchar_unlocked@plt+0x1a60>
   12a5c:	ldr	ip, [fp, #-84]	; 0xffffffac
   12a60:	ldr	r6, [sp, #40]	; 0x28
   12a64:	ldr	r0, [sp, #36]	; 0x24
   12a68:	ldrb	r0, [r0, r6]
   12a6c:	cmp	r0, #0
   12a70:	beq	12a90 <putchar_unlocked@plt+0x1a68>
   12a74:	add	r6, r6, #1
   12a78:	add	r0, r7, r6
   12a7c:	cmp	r0, lr
   12a80:	bcc	12a64 <putchar_unlocked@plt+0x1a3c>
   12a84:	b	12a90 <putchar_unlocked@plt+0x1a68>
   12a88:	ldr	ip, [fp, #-84]	; 0xffffffac
   12a8c:	ldr	r6, [sp, #40]	; 0x28
   12a90:	mov	r1, r6
   12a94:	ldr	r4, [sp, #20]
   12a98:	ldr	r6, [sp, #76]	; 0x4c
   12a9c:	b	12390 <putchar_unlocked@plt+0x1368>
   12aa0:	mov	lr, r7
   12aa4:	b	12aac <putchar_unlocked@plt+0x1a84>
   12aa8:	mvn	lr, #0
   12aac:	ldr	r9, [fp, #-64]	; 0xffffffc0
   12ab0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12ab4:	eor	r0, r9, #2
   12ab8:	orr	r0, r0, r8
   12abc:	clz	r0, r0
   12ac0:	lsr	r0, r0, #5
   12ac4:	tst	r1, r0
   12ac8:	bne	12bc4 <putchar_unlocked@plt+0x1b9c>
   12acc:	mov	r0, r1
   12ad0:	ldr	r1, [fp, #-80]	; 0xffffffb0
   12ad4:	cmp	r9, #2
   12ad8:	movwne	r1, #1
   12adc:	orr	r0, r0, r1
   12ae0:	tst	r0, #1
   12ae4:	bne	12c04 <putchar_unlocked@plt+0x1bdc>
   12ae8:	ldr	r0, [sp, #52]	; 0x34
   12aec:	ldr	r1, [sp, #68]	; 0x44
   12af0:	str	lr, [sp, #80]	; 0x50
   12af4:	eor	r0, r0, #1
   12af8:	tst	r0, #1
   12afc:	bne	12c04 <putchar_unlocked@plt+0x1bdc>
   12b00:	tst	r4, #1
   12b04:	bne	12bcc <putchar_unlocked@plt+0x1ba4>
   12b08:	mov	r7, #0
   12b0c:	cmp	r1, #0
   12b10:	beq	12bfc <putchar_unlocked@plt+0x1bd4>
   12b14:	ldr	r0, [sp, #84]	; 0x54
   12b18:	mov	r3, #0
   12b1c:	cmp	r6, #0
   12b20:	mov	r2, #0
   12b24:	mov	r4, r1
   12b28:	str	r3, [fp, #-72]	; 0xffffffb8
   12b2c:	beq	11c68 <putchar_unlocked@plt+0xc40>
   12b30:	b	12c04 <putchar_unlocked@plt+0x1bdc>
   12b34:	ldr	r7, [fp, #-64]	; 0xffffffc0
   12b38:	b	12b60 <putchar_unlocked@plt+0x1b38>
   12b3c:	ldr	ip, [fp, #-84]	; 0xffffffac
   12b40:	mov	r2, #1
   12b44:	mov	lr, r4
   12b48:	ldr	r7, [fp, #-64]	; 0xffffffc0
   12b4c:	ldr	r6, [fp, #-52]	; 0xffffffcc
   12b50:	b	12b64 <putchar_unlocked@plt+0x1b3c>
   12b54:	ldr	ip, [fp, #-84]	; 0xffffffac
   12b58:	mov	r7, #2
   12b5c:	ldr	r6, [fp, #-52]	; 0xffffffcc
   12b60:	ldr	r2, [sp, #84]	; 0x54
   12b64:	mov	r0, #0
   12b68:	ldr	r1, [fp, #12]
   12b6c:	tst	r2, #1
   12b70:	mov	r2, r7
   12b74:	mov	r3, lr
   12b78:	str	r0, [sp, #8]
   12b7c:	ldr	r0, [sp, #64]	; 0x40
   12b80:	movwne	r2, #4
   12b84:	cmp	r7, #2
   12b88:	movne	r2, r7
   12b8c:	str	r2, [sp]
   12b90:	mov	r2, ip
   12b94:	bic	r1, r1, #2
   12b98:	str	r0, [sp, #12]
   12b9c:	ldr	r0, [sp, #72]	; 0x48
   12ba0:	str	r1, [sp, #4]
   12ba4:	mov	r1, r6
   12ba8:	str	r0, [sp, #16]
   12bac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12bb0:	bl	11bf0 <putchar_unlocked@plt+0xbc8>
   12bb4:	mov	r8, r0
   12bb8:	mov	r0, r8
   12bbc:	sub	sp, fp, #28
   12bc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12bc4:	mov	r7, #2
   12bc8:	b	12b60 <putchar_unlocked@plt+0x1b38>
   12bcc:	mov	r0, #5
   12bd0:	ldr	r2, [fp, #-84]	; 0xffffffac
   12bd4:	ldr	r3, [sp, #80]	; 0x50
   12bd8:	str	r0, [sp]
   12bdc:	ldr	r0, [fp, #12]
   12be0:	str	r0, [sp, #4]
   12be4:	ldr	r0, [fp, #16]
   12be8:	str	r0, [sp, #8]
   12bec:	ldr	r0, [sp, #64]	; 0x40
   12bf0:	str	r0, [sp, #12]
   12bf4:	ldr	r0, [sp, #72]	; 0x48
   12bf8:	b	12ba8 <putchar_unlocked@plt+0x1b80>
   12bfc:	mov	r0, #0
   12c00:	str	r0, [fp, #-72]	; 0xffffffb8
   12c04:	ldr	r1, [sp, #92]	; 0x5c
   12c08:	cmp	r1, #0
   12c0c:	beq	12c4c <putchar_unlocked@plt+0x1c24>
   12c10:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12c14:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12c18:	tst	r0, #1
   12c1c:	bne	12c50 <putchar_unlocked@plt+0x1c28>
   12c20:	ldrb	r0, [r1]
   12c24:	cmp	r0, #0
   12c28:	beq	12c50 <putchar_unlocked@plt+0x1c28>
   12c2c:	add	r1, r1, #1
   12c30:	cmp	r8, r6
   12c34:	strbcc	r0, [r2, r8]
   12c38:	add	r8, r8, #1
   12c3c:	ldrb	r0, [r1], #1
   12c40:	cmp	r0, #0
   12c44:	bne	12c30 <putchar_unlocked@plt+0x1c08>
   12c48:	b	12c50 <putchar_unlocked@plt+0x1c28>
   12c4c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12c50:	cmp	r8, r6
   12c54:	movcc	r0, #0
   12c58:	strbcc	r0, [r2, r8]
   12c5c:	b	12bb8 <putchar_unlocked@plt+0x1b90>
   12c60:	mov	r2, #1
   12c64:	b	12b48 <putchar_unlocked@plt+0x1b20>
   12c68:	mov	r7, #5
   12c6c:	b	12b5c <putchar_unlocked@plt+0x1b34>
   12c70:	bl	11010 <abort@plt>
   12c74:	mov	r3, r2
   12c78:	mov	r2, #0
   12c7c:	b	12c80 <putchar_unlocked@plt+0x1c58>
   12c80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c84:	add	fp, sp, #28
   12c88:	sub	sp, sp, #36	; 0x24
   12c8c:	movw	r8, #24944	; 0x6170
   12c90:	cmp	r3, #0
   12c94:	mov	r4, r2
   12c98:	str	r2, [sp, #24]
   12c9c:	mov	r5, r1
   12ca0:	mov	r6, r0
   12ca4:	str	r0, [sp, #20]
   12ca8:	movt	r8, #2
   12cac:	movne	r8, r3
   12cb0:	bl	10f44 <__errno_location@plt>
   12cb4:	str	r0, [sp, #28]
   12cb8:	cmp	r4, #0
   12cbc:	add	sl, r8, #8
   12cc0:	ldm	r8, {r3, r9}
   12cc4:	ldr	r7, [r0]
   12cc8:	ldr	r1, [r8, #40]	; 0x28
   12ccc:	ldr	r2, [r8, #44]	; 0x2c
   12cd0:	mov	r0, #0
   12cd4:	orreq	r9, r9, #1
   12cd8:	str	r7, [sp, #32]
   12cdc:	mov	r7, r5
   12ce0:	stm	sp, {r3, r9, sl}
   12ce4:	str	r1, [sp, #12]
   12ce8:	str	r2, [sp, #16]
   12cec:	mov	r1, #0
   12cf0:	mov	r2, r6
   12cf4:	mov	r3, r5
   12cf8:	bl	11bf0 <putchar_unlocked@plt+0xbc8>
   12cfc:	add	r4, r0, #1
   12d00:	mov	r5, r0
   12d04:	mov	r0, r4
   12d08:	bl	139e4 <putchar_unlocked@plt+0x29bc>
   12d0c:	mov	r6, r0
   12d10:	ldr	r0, [r8]
   12d14:	ldr	r2, [r8, #44]	; 0x2c
   12d18:	ldr	r1, [r8, #40]	; 0x28
   12d1c:	mov	r3, r7
   12d20:	stm	sp, {r0, r9, sl}
   12d24:	str	r2, [sp, #16]
   12d28:	str	r1, [sp, #12]
   12d2c:	mov	r0, r6
   12d30:	mov	r1, r4
   12d34:	ldr	r2, [sp, #20]
   12d38:	bl	11bf0 <putchar_unlocked@plt+0xbc8>
   12d3c:	ldr	r0, [sp, #24]
   12d40:	ldr	r1, [sp, #32]
   12d44:	ldr	r2, [sp, #28]
   12d48:	cmp	r0, #0
   12d4c:	str	r1, [r2]
   12d50:	strne	r5, [r0]
   12d54:	mov	r0, r6
   12d58:	sub	sp, fp, #28
   12d5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d60:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12d64:	add	fp, sp, #24
   12d68:	movw	r5, #24820	; 0x60f4
   12d6c:	movw	r8, #24816	; 0x60f0
   12d70:	movt	r5, #2
   12d74:	movt	r8, #2
   12d78:	ldr	r0, [r5]
   12d7c:	ldr	r4, [r8]
   12d80:	cmp	r0, #2
   12d84:	blt	12db0 <putchar_unlocked@plt+0x1d88>
   12d88:	add	r7, r4, #12
   12d8c:	mov	r6, #0
   12d90:	ldr	r0, [r7, r6, lsl #3]
   12d94:	bl	11938 <putchar_unlocked@plt+0x910>
   12d98:	ldr	r1, [r5]
   12d9c:	add	r2, r6, #2
   12da0:	add	r0, r6, #1
   12da4:	mov	r6, r0
   12da8:	cmp	r2, r1
   12dac:	blt	12d90 <putchar_unlocked@plt+0x1d68>
   12db0:	ldr	r0, [r4, #4]
   12db4:	movw	r7, #24992	; 0x61a0
   12db8:	movt	r7, #2
   12dbc:	cmp	r0, r7
   12dc0:	beq	12dd8 <putchar_unlocked@plt+0x1db0>
   12dc4:	bl	11938 <putchar_unlocked@plt+0x910>
   12dc8:	movw	r0, #24824	; 0x60f8
   12dcc:	mov	r6, #256	; 0x100
   12dd0:	movt	r0, #2
   12dd4:	strd	r6, [r0]
   12dd8:	movw	r6, #24824	; 0x60f8
   12ddc:	movt	r6, #2
   12de0:	cmp	r4, r6
   12de4:	beq	12df4 <putchar_unlocked@plt+0x1dcc>
   12de8:	mov	r0, r4
   12dec:	bl	11938 <putchar_unlocked@plt+0x910>
   12df0:	str	r6, [r8]
   12df4:	mov	r0, #1
   12df8:	str	r0, [r5]
   12dfc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12e00:	movw	r3, #24944	; 0x6170
   12e04:	mvn	r2, #0
   12e08:	movt	r3, #2
   12e0c:	b	12e10 <putchar_unlocked@plt+0x1de8>
   12e10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e14:	add	fp, sp, #28
   12e18:	sub	sp, sp, #44	; 0x2c
   12e1c:	mov	r7, r3
   12e20:	str	r2, [sp, #36]	; 0x24
   12e24:	str	r1, [sp, #32]
   12e28:	mov	r5, r0
   12e2c:	bl	10f44 <__errno_location@plt>
   12e30:	cmp	r5, #0
   12e34:	blt	12fa0 <putchar_unlocked@plt+0x1f78>
   12e38:	cmn	r5, #-2147483647	; 0x80000001
   12e3c:	beq	12fa0 <putchar_unlocked@plt+0x1f78>
   12e40:	movw	r8, #24820	; 0x60f4
   12e44:	movw	r4, #24816	; 0x60f0
   12e48:	str	r0, [sp, #28]
   12e4c:	ldr	r0, [r0]
   12e50:	movt	r8, #2
   12e54:	movt	r4, #2
   12e58:	ldr	r1, [r8]
   12e5c:	ldr	r6, [r4]
   12e60:	str	r0, [sp, #24]
   12e64:	cmp	r1, r5
   12e68:	ble	12e74 <putchar_unlocked@plt+0x1e4c>
   12e6c:	mov	sl, r6
   12e70:	b	12edc <putchar_unlocked@plt+0x1eb4>
   12e74:	movw	r9, #24824	; 0x60f8
   12e78:	mov	r0, #8
   12e7c:	add	r2, r5, #1
   12e80:	str	r1, [fp, #-32]	; 0xffffffe0
   12e84:	mvn	r3, #-2147483648	; 0x80000000
   12e88:	movt	r9, #2
   12e8c:	str	r0, [sp]
   12e90:	sub	r2, r2, r1
   12e94:	sub	r1, fp, #32
   12e98:	subs	r0, r6, r9
   12e9c:	movne	r0, r6
   12ea0:	bl	13b14 <putchar_unlocked@plt+0x2aec>
   12ea4:	cmp	r6, r9
   12ea8:	mov	sl, r0
   12eac:	str	r0, [r4]
   12eb0:	ldrdeq	r0, [r9]
   12eb4:	stmeq	sl, {r0, r1}
   12eb8:	ldr	r1, [r8]
   12ebc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12ec0:	add	r0, sl, r1, lsl #3
   12ec4:	sub	r1, r2, r1
   12ec8:	lsl	r2, r1, #3
   12ecc:	mov	r1, #0
   12ed0:	bl	10f74 <memset@plt>
   12ed4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12ed8:	str	r0, [r8]
   12edc:	mov	r9, sl
   12ee0:	ldr	r6, [r9, r5, lsl #3]!
   12ee4:	ldr	r4, [r9, #4]!
   12ee8:	ldm	r7, {r0, r1}
   12eec:	ldr	r2, [r7, #40]	; 0x28
   12ef0:	ldr	r3, [r7, #44]	; 0x2c
   12ef4:	orr	r8, r1, #1
   12ef8:	add	r1, r7, #8
   12efc:	stm	sp, {r0, r8}
   12f00:	add	r0, sp, #8
   12f04:	str	r1, [sp, #20]
   12f08:	stm	r0, {r1, r2, r3}
   12f0c:	mov	r0, r4
   12f10:	mov	r1, r6
   12f14:	ldr	r2, [sp, #32]
   12f18:	ldr	r3, [sp, #36]	; 0x24
   12f1c:	bl	11bf0 <putchar_unlocked@plt+0xbc8>
   12f20:	cmp	r6, r0
   12f24:	bhi	12f88 <putchar_unlocked@plt+0x1f60>
   12f28:	add	r6, r0, #1
   12f2c:	movw	r0, #24992	; 0x61a0
   12f30:	movt	r0, #2
   12f34:	str	r6, [sl, r5, lsl #3]
   12f38:	cmp	r4, r0
   12f3c:	beq	12f48 <putchar_unlocked@plt+0x1f20>
   12f40:	mov	r0, r4
   12f44:	bl	11938 <putchar_unlocked@plt+0x910>
   12f48:	mov	r0, r6
   12f4c:	bl	139e4 <putchar_unlocked@plt+0x29bc>
   12f50:	str	r0, [r9]
   12f54:	mov	r4, r0
   12f58:	add	r3, sp, #8
   12f5c:	ldr	r0, [r7]
   12f60:	ldr	r1, [r7, #40]	; 0x28
   12f64:	ldr	r2, [r7, #44]	; 0x2c
   12f68:	stm	sp, {r0, r8}
   12f6c:	ldr	r0, [sp, #20]
   12f70:	stm	r3, {r0, r1, r2}
   12f74:	mov	r0, r4
   12f78:	mov	r1, r6
   12f7c:	ldr	r2, [sp, #32]
   12f80:	ldr	r3, [sp, #36]	; 0x24
   12f84:	bl	11bf0 <putchar_unlocked@plt+0xbc8>
   12f88:	ldr	r0, [sp, #28]
   12f8c:	ldr	r1, [sp, #24]
   12f90:	str	r1, [r0]
   12f94:	mov	r0, r4
   12f98:	sub	sp, fp, #28
   12f9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12fa0:	bl	11010 <abort@plt>
   12fa4:	movw	r3, #24944	; 0x6170
   12fa8:	movt	r3, #2
   12fac:	b	12e10 <putchar_unlocked@plt+0x1de8>
   12fb0:	movw	r3, #24944	; 0x6170
   12fb4:	mov	r1, r0
   12fb8:	mov	r0, #0
   12fbc:	mvn	r2, #0
   12fc0:	movt	r3, #2
   12fc4:	b	12e10 <putchar_unlocked@plt+0x1de8>
   12fc8:	movw	r3, #24944	; 0x6170
   12fcc:	mov	r2, r1
   12fd0:	mov	r1, r0
   12fd4:	mov	r0, #0
   12fd8:	movt	r3, #2
   12fdc:	b	12e10 <putchar_unlocked@plt+0x1de8>
   12fe0:	push	{fp, lr}
   12fe4:	mov	fp, sp
   12fe8:	sub	sp, sp, #48	; 0x30
   12fec:	vmov.i32	q8, #0	; 0x00000000
   12ff0:	mov	ip, #32
   12ff4:	mov	r3, sp
   12ff8:	mov	lr, r2
   12ffc:	cmp	r1, #10
   13000:	add	r2, r3, #16
   13004:	vst1.64	{d16-d17}, [r3], ip
   13008:	vst1.64	{d16-d17}, [r3]
   1300c:	vst1.64	{d16-d17}, [r2]
   13010:	beq	13030 <putchar_unlocked@plt+0x2008>
   13014:	str	r1, [sp]
   13018:	mov	r3, sp
   1301c:	mov	r1, lr
   13020:	mvn	r2, #0
   13024:	bl	12e10 <putchar_unlocked@plt+0x1de8>
   13028:	mov	sp, fp
   1302c:	pop	{fp, pc}
   13030:	bl	11010 <abort@plt>
   13034:	push	{r4, sl, fp, lr}
   13038:	add	fp, sp, #8
   1303c:	sub	sp, sp, #48	; 0x30
   13040:	mov	ip, r3
   13044:	mov	r3, sp
   13048:	vmov.i32	q8, #0	; 0x00000000
   1304c:	mov	lr, #32
   13050:	cmp	r1, #10
   13054:	add	r4, r3, #16
   13058:	vst1.64	{d16-d17}, [r3], lr
   1305c:	vst1.64	{d16-d17}, [r3]
   13060:	vst1.64	{d16-d17}, [r4]
   13064:	beq	13084 <putchar_unlocked@plt+0x205c>
   13068:	str	r1, [sp]
   1306c:	mov	r1, r2
   13070:	mov	r3, sp
   13074:	mov	r2, ip
   13078:	bl	12e10 <putchar_unlocked@plt+0x1de8>
   1307c:	sub	sp, fp, #8
   13080:	pop	{r4, sl, fp, pc}
   13084:	bl	11010 <abort@plt>
   13088:	mov	r2, r1
   1308c:	mov	r1, r0
   13090:	mov	r0, #0
   13094:	b	12fe0 <putchar_unlocked@plt+0x1fb8>
   13098:	mov	r3, r2
   1309c:	mov	r2, r1
   130a0:	mov	r1, r0
   130a4:	mov	r0, #0
   130a8:	b	13034 <putchar_unlocked@plt+0x200c>
   130ac:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   130b0:	add	fp, sp, #24
   130b4:	sub	sp, sp, #48	; 0x30
   130b8:	movw	r8, #24944	; 0x6170
   130bc:	mov	lr, r0
   130c0:	mov	r3, sp
   130c4:	mov	ip, r1
   130c8:	movt	r8, #2
   130cc:	mov	r1, r3
   130d0:	ldm	r8!, {r0, r4, r5, r6, r7, r9}
   130d4:	stmia	r1!, {r0, r4, r5, r6, r7, r9}
   130d8:	ldm	r8, {r0, r4, r5, r6, r7, r9}
   130dc:	stm	r1, {r0, r4, r5, r6, r7, r9}
   130e0:	ubfx	r0, r2, #5, #3
   130e4:	and	r2, r2, #31
   130e8:	mov	r4, #1
   130ec:	add	r0, r3, r0, lsl #2
   130f0:	ldr	r1, [r0, #8]
   130f4:	bic	r4, r4, r1, lsr r2
   130f8:	eor	r1, r1, r4, lsl r2
   130fc:	mov	r2, ip
   13100:	str	r1, [r0, #8]
   13104:	mov	r0, #0
   13108:	mov	r1, lr
   1310c:	bl	12e10 <putchar_unlocked@plt+0x1de8>
   13110:	sub	sp, fp, #24
   13114:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13118:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1311c:	add	fp, sp, #24
   13120:	sub	sp, sp, #48	; 0x30
   13124:	movw	lr, #24944	; 0x6170
   13128:	mov	ip, r0
   1312c:	mov	r3, sp
   13130:	movt	lr, #2
   13134:	mov	r2, r3
   13138:	ldm	lr!, {r0, r4, r5, r6, r7, r8}
   1313c:	stmia	r2!, {r0, r4, r5, r6, r7, r8}
   13140:	ldm	lr, {r0, r4, r5, r6, r7, r8}
   13144:	stm	r2, {r0, r4, r5, r6, r7, r8}
   13148:	ubfx	r0, r1, #5, #3
   1314c:	and	r1, r1, #31
   13150:	mov	r7, #1
   13154:	add	r0, r3, r0, lsl #2
   13158:	ldr	r2, [r0, #8]
   1315c:	bic	r7, r7, r2, lsr r1
   13160:	eor	r1, r2, r7, lsl r1
   13164:	mvn	r2, #0
   13168:	str	r1, [r0, #8]
   1316c:	mov	r0, #0
   13170:	mov	r1, ip
   13174:	bl	12e10 <putchar_unlocked@plt+0x1de8>
   13178:	sub	sp, fp, #24
   1317c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13180:	push	{r4, r5, r6, r7, fp, lr}
   13184:	add	fp, sp, #16
   13188:	sub	sp, sp, #48	; 0x30
   1318c:	movw	lr, #24944	; 0x6170
   13190:	mov	ip, r0
   13194:	mov	r3, sp
   13198:	movt	lr, #2
   1319c:	mov	r2, r3
   131a0:	ldm	lr!, {r0, r1, r4, r5, r6, r7}
   131a4:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   131a8:	ldm	lr, {r0, r1, r4, r5, r6, r7}
   131ac:	stm	r2, {r0, r1, r4, r5, r6, r7}
   131b0:	mov	r1, ip
   131b4:	mvn	r2, #0
   131b8:	ldr	r0, [sp, #12]
   131bc:	orr	r0, r0, #67108864	; 0x4000000
   131c0:	str	r0, [sp, #12]
   131c4:	mov	r0, #0
   131c8:	bl	12e10 <putchar_unlocked@plt+0x1de8>
   131cc:	sub	sp, fp, #16
   131d0:	pop	{r4, r5, r6, r7, fp, pc}
   131d4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   131d8:	add	fp, sp, #24
   131dc:	sub	sp, sp, #48	; 0x30
   131e0:	movw	r8, #24944	; 0x6170
   131e4:	mov	ip, r1
   131e8:	mov	lr, r0
   131ec:	mov	r3, sp
   131f0:	movt	r8, #2
   131f4:	mov	r2, r3
   131f8:	ldm	r8!, {r0, r1, r4, r5, r6, r7}
   131fc:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   13200:	ldm	r8, {r0, r1, r4, r5, r6, r7}
   13204:	stm	r2, {r0, r1, r4, r5, r6, r7}
   13208:	mov	r1, lr
   1320c:	mov	r2, ip
   13210:	ldr	r0, [sp, #12]
   13214:	orr	r0, r0, #67108864	; 0x4000000
   13218:	str	r0, [sp, #12]
   1321c:	mov	r0, #0
   13220:	bl	12e10 <putchar_unlocked@plt+0x1de8>
   13224:	sub	sp, fp, #24
   13228:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1322c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13230:	add	fp, sp, #24
   13234:	sub	sp, sp, #96	; 0x60
   13238:	mov	lr, sp
   1323c:	vmov.i32	q8, #0	; 0x00000000
   13240:	mov	ip, r2
   13244:	cmp	r1, #10
   13248:	add	r3, lr, #16
   1324c:	mov	r2, lr
   13250:	vst1.64	{d16-d17}, [r3]
   13254:	mov	r3, #28
   13258:	vst1.64	{d16-d17}, [r2], r3
   1325c:	vst1.32	{d16-d17}, [r2]
   13260:	beq	132a0 <putchar_unlocked@plt+0x2278>
   13264:	str	r1, [sp, #48]	; 0x30
   13268:	add	r3, sp, #48	; 0x30
   1326c:	ldm	lr!, {r2, r4, r5, r6, r7}
   13270:	add	r1, r3, #4
   13274:	stmia	r1!, {r2, r4, r5, r6, r7}
   13278:	ldm	lr, {r2, r4, r5, r6, r7, r8}
   1327c:	stm	r1, {r2, r4, r5, r6, r7, r8}
   13280:	mvn	r2, #0
   13284:	ldr	r1, [sp, #60]	; 0x3c
   13288:	orr	r1, r1, #67108864	; 0x4000000
   1328c:	str	r1, [sp, #60]	; 0x3c
   13290:	mov	r1, ip
   13294:	bl	12e10 <putchar_unlocked@plt+0x1de8>
   13298:	sub	sp, fp, #24
   1329c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   132a0:	bl	11010 <abort@plt>
   132a4:	push	{fp, lr}
   132a8:	mov	fp, sp
   132ac:	sub	sp, sp, #8
   132b0:	mvn	ip, #0
   132b4:	str	ip, [sp]
   132b8:	bl	132c4 <putchar_unlocked@plt+0x229c>
   132bc:	mov	sp, fp
   132c0:	pop	{fp, pc}
   132c4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   132c8:	add	fp, sp, #24
   132cc:	sub	sp, sp, #48	; 0x30
   132d0:	movw	ip, #24944	; 0x6170
   132d4:	mov	lr, r3
   132d8:	mov	r3, sp
   132dc:	cmp	r1, #0
   132e0:	movt	ip, #2
   132e4:	cmpne	r2, #0
   132e8:	ldm	ip!, {r4, r5, r6, r7, r8, r9}
   132ec:	stmia	r3!, {r4, r5, r6, r7, r8, r9}
   132f0:	ldm	ip, {r4, r5, r6, r7, r8, r9}
   132f4:	stm	r3, {r4, r5, r6, r7, r8, r9}
   132f8:	mov	r3, #10
   132fc:	str	r3, [sp]
   13300:	bne	13308 <putchar_unlocked@plt+0x22e0>
   13304:	bl	11010 <abort@plt>
   13308:	ldr	ip, [fp, #8]
   1330c:	str	r2, [sp, #44]	; 0x2c
   13310:	str	r1, [sp, #40]	; 0x28
   13314:	mov	r3, sp
   13318:	mov	r1, lr
   1331c:	mov	r2, ip
   13320:	bl	12e10 <putchar_unlocked@plt+0x1de8>
   13324:	sub	sp, fp, #24
   13328:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1332c:	push	{fp, lr}
   13330:	mov	fp, sp
   13334:	sub	sp, sp, #8
   13338:	mov	r3, r2
   1333c:	mov	r2, r1
   13340:	mov	r1, r0
   13344:	mvn	r0, #0
   13348:	str	r0, [sp]
   1334c:	mov	r0, #0
   13350:	bl	132c4 <putchar_unlocked@plt+0x229c>
   13354:	mov	sp, fp
   13358:	pop	{fp, pc}
   1335c:	push	{fp, lr}
   13360:	mov	fp, sp
   13364:	sub	sp, sp, #8
   13368:	mov	ip, r2
   1336c:	mov	r2, r1
   13370:	mov	r1, r0
   13374:	str	r3, [sp]
   13378:	mov	r0, #0
   1337c:	mov	r3, ip
   13380:	bl	132c4 <putchar_unlocked@plt+0x229c>
   13384:	mov	sp, fp
   13388:	pop	{fp, pc}
   1338c:	movw	r3, #24832	; 0x6100
   13390:	movt	r3, #2
   13394:	b	12e10 <putchar_unlocked@plt+0x1de8>
   13398:	movw	r3, #24832	; 0x6100
   1339c:	mov	r2, r1
   133a0:	mov	r1, r0
   133a4:	mov	r0, #0
   133a8:	movt	r3, #2
   133ac:	b	12e10 <putchar_unlocked@plt+0x1de8>
   133b0:	movw	r3, #24832	; 0x6100
   133b4:	mvn	r2, #0
   133b8:	movt	r3, #2
   133bc:	b	12e10 <putchar_unlocked@plt+0x1de8>
   133c0:	movw	r3, #24832	; 0x6100
   133c4:	mov	r1, r0
   133c8:	mov	r0, #0
   133cc:	mvn	r2, #0
   133d0:	movt	r3, #2
   133d4:	b	12e10 <putchar_unlocked@plt+0x1de8>
   133d8:	push	{r4, r5, fp, lr}
   133dc:	add	fp, sp, #8
   133e0:	mov	r5, r0
   133e4:	mov	r4, r1
   133e8:	mov	r0, #0
   133ec:	mov	r2, #5
   133f0:	mov	r1, r5
   133f4:	bl	10e60 <dcgettext@plt>
   133f8:	cmp	r0, r5
   133fc:	popne	{r4, r5, fp, pc}
   13400:	bl	1416c <putchar_unlocked@plt+0x3144>
   13404:	ldrb	r1, [r0]
   13408:	and	r1, r1, #223	; 0xdf
   1340c:	cmp	r1, #71	; 0x47
   13410:	beq	13478 <putchar_unlocked@plt+0x2450>
   13414:	cmp	r1, #85	; 0x55
   13418:	bne	1349c <putchar_unlocked@plt+0x2474>
   1341c:	ldrb	r1, [r0, #1]
   13420:	and	r1, r1, #223	; 0xdf
   13424:	cmp	r1, #84	; 0x54
   13428:	bne	1349c <putchar_unlocked@plt+0x2474>
   1342c:	ldrb	r1, [r0, #2]
   13430:	and	r1, r1, #223	; 0xdf
   13434:	cmp	r1, #70	; 0x46
   13438:	ldrbeq	r1, [r0, #3]
   1343c:	cmpeq	r1, #45	; 0x2d
   13440:	bne	1349c <putchar_unlocked@plt+0x2474>
   13444:	ldrb	r1, [r0, #4]
   13448:	cmp	r1, #56	; 0x38
   1344c:	ldrbeq	r0, [r0, #5]
   13450:	cmpeq	r0, #0
   13454:	bne	1349c <putchar_unlocked@plt+0x2474>
   13458:	ldrb	r1, [r5]
   1345c:	movw	r2, #19466	; 0x4c0a
   13460:	movw	r0, #19470	; 0x4c0e
   13464:	movt	r2, #1
   13468:	movt	r0, #1
   1346c:	cmp	r1, #96	; 0x60
   13470:	moveq	r0, r2
   13474:	pop	{r4, r5, fp, pc}
   13478:	ldrb	r1, [r0, #1]
   1347c:	and	r1, r1, #223	; 0xdf
   13480:	cmp	r1, #66	; 0x42
   13484:	bne	1349c <putchar_unlocked@plt+0x2474>
   13488:	ldrb	r1, [r0, #2]
   1348c:	cmp	r1, #49	; 0x31
   13490:	ldrbeq	r1, [r0, #3]
   13494:	cmpeq	r1, #56	; 0x38
   13498:	beq	134b8 <putchar_unlocked@plt+0x2490>
   1349c:	movw	r1, #19460	; 0x4c04
   134a0:	movw	r0, #19464	; 0x4c08
   134a4:	cmp	r4, #9
   134a8:	movt	r1, #1
   134ac:	movt	r0, #1
   134b0:	moveq	r0, r1
   134b4:	pop	{r4, r5, fp, pc}
   134b8:	ldrb	r1, [r0, #4]
   134bc:	cmp	r1, #48	; 0x30
   134c0:	ldrbeq	r1, [r0, #5]
   134c4:	cmpeq	r1, #51	; 0x33
   134c8:	bne	1349c <putchar_unlocked@plt+0x2474>
   134cc:	ldrb	r1, [r0, #6]
   134d0:	cmp	r1, #48	; 0x30
   134d4:	ldrbeq	r0, [r0, #7]
   134d8:	cmpeq	r0, #0
   134dc:	bne	1349c <putchar_unlocked@plt+0x2474>
   134e0:	ldrb	r1, [r5]
   134e4:	movw	r2, #19474	; 0x4c12
   134e8:	movw	r0, #19478	; 0x4c16
   134ec:	movt	r2, #1
   134f0:	movt	r0, #1
   134f4:	b	1346c <putchar_unlocked@plt+0x2444>
   134f8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   134fc:	add	fp, sp, #24
   13500:	sub	sp, sp, #32
   13504:	ldr	r6, [fp, #12]
   13508:	ldr	r7, [fp, #8]
   1350c:	mov	r4, r2
   13510:	mov	r8, r0
   13514:	cmp	r1, #0
   13518:	beq	13540 <putchar_unlocked@plt+0x2518>
   1351c:	movw	r2, #19568	; 0x4c70
   13520:	mov	r5, r1
   13524:	str	r3, [sp, #4]
   13528:	str	r4, [sp]
   1352c:	mov	r0, r8
   13530:	mov	r1, #1
   13534:	movt	r2, #1
   13538:	mov	r3, r5
   1353c:	b	13558 <putchar_unlocked@plt+0x2530>
   13540:	movw	r2, #19580	; 0x4c7c
   13544:	str	r3, [sp]
   13548:	mov	r0, r8
   1354c:	mov	r1, #1
   13550:	mov	r3, r4
   13554:	movt	r2, #1
   13558:	bl	10f98 <__fprintf_chk@plt>
   1355c:	movw	r1, #19587	; 0x4c83
   13560:	mov	r0, #0
   13564:	mov	r2, #5
   13568:	movt	r1, #1
   1356c:	bl	10e60 <dcgettext@plt>
   13570:	movw	r2, #20305	; 0x4f51
   13574:	mov	r3, r0
   13578:	movw	r0, #2022	; 0x7e6
   1357c:	mov	r1, #1
   13580:	str	r0, [sp]
   13584:	movt	r2, #1
   13588:	mov	r0, r8
   1358c:	bl	10f98 <__fprintf_chk@plt>
   13590:	movw	r4, #19047	; 0x4a67
   13594:	mov	r1, r8
   13598:	movt	r4, #1
   1359c:	mov	r0, r4
   135a0:	bl	10dd0 <fputs_unlocked@plt>
   135a4:	movw	r1, #19591	; 0x4c87
   135a8:	mov	r0, #0
   135ac:	mov	r2, #5
   135b0:	movt	r1, #1
   135b4:	bl	10e60 <dcgettext@plt>
   135b8:	movw	r3, #19762	; 0x4d32
   135bc:	mov	r2, r0
   135c0:	mov	r0, r8
   135c4:	mov	r1, #1
   135c8:	movt	r3, #1
   135cc:	bl	10f98 <__fprintf_chk@plt>
   135d0:	mov	r0, r4
   135d4:	mov	r1, r8
   135d8:	bl	10dd0 <fputs_unlocked@plt>
   135dc:	cmp	r6, #9
   135e0:	bhi	13644 <putchar_unlocked@plt+0x261c>
   135e4:	add	r0, pc, #0
   135e8:	ldr	pc, [r0, r6, lsl #2]
   135ec:	andeq	r3, r1, ip, lsl r8
   135f0:	andeq	r3, r1, r4, lsl r6
   135f4:	andeq	r3, r1, r0, asr r6
   135f8:	andeq	r3, r1, r8, ror r6
   135fc:	andeq	r3, r1, r0, lsr #13
   13600:	andeq	r3, r1, r8, asr #13
   13604:	strdeq	r3, [r1], -r0
   13608:	andeq	r3, r1, r8, lsr #14
   1360c:	andeq	r3, r1, r8, asr #15
   13610:	andeq	r3, r1, r0, ror r7
   13614:	movw	r1, #19796	; 0x4d54
   13618:	mov	r0, #0
   1361c:	mov	r2, #5
   13620:	movt	r1, #1
   13624:	bl	10e60 <dcgettext@plt>
   13628:	ldr	r3, [r7]
   1362c:	mov	r2, r0
   13630:	mov	r0, r8
   13634:	mov	r1, #1
   13638:	sub	sp, fp, #24
   1363c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13640:	b	10f98 <__fprintf_chk@plt>
   13644:	movw	r1, #20115	; 0x4e93
   13648:	movt	r1, #1
   1364c:	b	13778 <putchar_unlocked@plt+0x2750>
   13650:	movw	r1, #19812	; 0x4d64
   13654:	mov	r0, #0
   13658:	mov	r2, #5
   1365c:	movt	r1, #1
   13660:	bl	10e60 <dcgettext@plt>
   13664:	mov	r2, r0
   13668:	ldr	r3, [r7]
   1366c:	ldr	r0, [r7, #4]
   13670:	str	r0, [sp]
   13674:	b	13764 <putchar_unlocked@plt+0x273c>
   13678:	movw	r1, #19835	; 0x4d7b
   1367c:	mov	r0, #0
   13680:	mov	r2, #5
   13684:	movt	r1, #1
   13688:	bl	10e60 <dcgettext@plt>
   1368c:	ldr	r3, [r7]
   13690:	mov	r2, r0
   13694:	ldmib	r7, {r0, r1}
   13698:	stm	sp, {r0, r1}
   1369c:	b	13764 <putchar_unlocked@plt+0x273c>
   136a0:	movw	r1, #19863	; 0x4d97
   136a4:	mov	r0, #0
   136a8:	mov	r2, #5
   136ac:	movt	r1, #1
   136b0:	bl	10e60 <dcgettext@plt>
   136b4:	ldr	r3, [r7]
   136b8:	mov	r2, r0
   136bc:	ldmib	r7, {r0, r1, r7}
   136c0:	stm	sp, {r0, r1, r7}
   136c4:	b	13764 <putchar_unlocked@plt+0x273c>
   136c8:	movw	r1, #19895	; 0x4db7
   136cc:	mov	r0, #0
   136d0:	mov	r2, #5
   136d4:	movt	r1, #1
   136d8:	bl	10e60 <dcgettext@plt>
   136dc:	ldr	r3, [r7]
   136e0:	mov	r2, r0
   136e4:	ldmib	r7, {r0, r1, r6, r7}
   136e8:	stm	sp, {r0, r1, r6, r7}
   136ec:	b	13764 <putchar_unlocked@plt+0x273c>
   136f0:	movw	r1, #19931	; 0x4ddb
   136f4:	mov	r0, #0
   136f8:	mov	r2, #5
   136fc:	movt	r1, #1
   13700:	bl	10e60 <dcgettext@plt>
   13704:	ldr	r3, [r7]
   13708:	mov	r2, r0
   1370c:	ldmib	r7, {r0, r1, r6}
   13710:	ldr	r5, [r7, #16]
   13714:	ldr	r7, [r7, #20]
   13718:	stm	sp, {r0, r1, r6}
   1371c:	str	r5, [sp, #12]
   13720:	str	r7, [sp, #16]
   13724:	b	13764 <putchar_unlocked@plt+0x273c>
   13728:	movw	r1, #19971	; 0x4e03
   1372c:	mov	r0, #0
   13730:	mov	r2, #5
   13734:	movt	r1, #1
   13738:	bl	10e60 <dcgettext@plt>
   1373c:	ldr	r3, [r7]
   13740:	mov	r2, r0
   13744:	ldmib	r7, {r0, r1, r6}
   13748:	ldr	r5, [r7, #16]
   1374c:	ldr	r4, [r7, #20]
   13750:	ldr	r7, [r7, #24]
   13754:	stm	sp, {r0, r1, r6}
   13758:	str	r5, [sp, #12]
   1375c:	str	r4, [sp, #16]
   13760:	str	r7, [sp, #20]
   13764:	mov	r0, r8
   13768:	mov	r1, #1
   1376c:	b	13818 <putchar_unlocked@plt+0x27f0>
   13770:	movw	r1, #20063	; 0x4e5f
   13774:	movt	r1, #1
   13778:	mov	r0, #0
   1377c:	mov	r2, #5
   13780:	bl	10e60 <dcgettext@plt>
   13784:	mov	ip, r0
   13788:	ldr	r3, [r7]
   1378c:	ldr	r0, [r7, #4]
   13790:	ldr	r1, [r7, #8]
   13794:	ldr	r6, [r7, #12]
   13798:	ldr	r5, [r7, #16]
   1379c:	ldr	r4, [r7, #20]
   137a0:	ldr	r2, [r7, #24]
   137a4:	ldr	lr, [r7, #28]
   137a8:	ldr	r7, [r7, #32]
   137ac:	stm	sp, {r0, r1, r6}
   137b0:	str	r5, [sp, #12]
   137b4:	str	r4, [sp, #16]
   137b8:	str	r2, [sp, #20]
   137bc:	str	lr, [sp, #24]
   137c0:	str	r7, [sp, #28]
   137c4:	b	1380c <putchar_unlocked@plt+0x27e4>
   137c8:	movw	r1, #20015	; 0x4e2f
   137cc:	mov	r0, #0
   137d0:	mov	r2, #5
   137d4:	movt	r1, #1
   137d8:	bl	10e60 <dcgettext@plt>
   137dc:	mov	ip, r0
   137e0:	ldr	r3, [r7]
   137e4:	ldmib	r7, {r0, r1, r6}
   137e8:	ldr	r5, [r7, #16]
   137ec:	ldr	r4, [r7, #20]
   137f0:	ldr	r2, [r7, #24]
   137f4:	ldr	r7, [r7, #28]
   137f8:	stm	sp, {r0, r1, r6}
   137fc:	str	r5, [sp, #12]
   13800:	str	r4, [sp, #16]
   13804:	str	r2, [sp, #20]
   13808:	str	r7, [sp, #24]
   1380c:	mov	r0, r8
   13810:	mov	r1, #1
   13814:	mov	r2, ip
   13818:	bl	10f98 <__fprintf_chk@plt>
   1381c:	sub	sp, fp, #24
   13820:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13824:	push	{r4, sl, fp, lr}
   13828:	add	fp, sp, #8
   1382c:	sub	sp, sp, #8
   13830:	ldr	ip, [fp, #8]
   13834:	mov	lr, #0
   13838:	ldr	r4, [ip, lr, lsl #2]
   1383c:	add	lr, lr, #1
   13840:	cmp	r4, #0
   13844:	bne	13838 <putchar_unlocked@plt+0x2810>
   13848:	sub	r4, lr, #1
   1384c:	str	ip, [sp]
   13850:	str	r4, [sp, #4]
   13854:	bl	134f8 <putchar_unlocked@plt+0x24d0>
   13858:	sub	sp, fp, #8
   1385c:	pop	{r4, sl, fp, pc}
   13860:	push	{r4, r5, fp, lr}
   13864:	add	fp, sp, #8
   13868:	sub	sp, sp, #48	; 0x30
   1386c:	ldr	r4, [fp, #8]
   13870:	mov	ip, #0
   13874:	add	lr, sp, #8
   13878:	ldr	r5, [r4]
   1387c:	cmp	r5, #0
   13880:	str	r5, [lr, ip, lsl #2]
   13884:	beq	13898 <putchar_unlocked@plt+0x2870>
   13888:	add	ip, ip, #1
   1388c:	add	r4, r4, #4
   13890:	cmp	ip, #10
   13894:	bcc	13878 <putchar_unlocked@plt+0x2850>
   13898:	str	lr, [sp]
   1389c:	str	ip, [sp, #4]
   138a0:	bl	134f8 <putchar_unlocked@plt+0x24d0>
   138a4:	sub	sp, fp, #8
   138a8:	pop	{r4, r5, fp, pc}
   138ac:	push	{fp, lr}
   138b0:	mov	fp, sp
   138b4:	sub	sp, sp, #8
   138b8:	add	ip, fp, #8
   138bc:	str	ip, [sp, #4]
   138c0:	str	ip, [sp]
   138c4:	bl	13860 <putchar_unlocked@plt+0x2838>
   138c8:	mov	sp, fp
   138cc:	pop	{fp, pc}
   138d0:	push	{fp, lr}
   138d4:	mov	fp, sp
   138d8:	movw	r0, #24900	; 0x6144
   138dc:	movt	r0, #2
   138e0:	ldr	r1, [r0]
   138e4:	movw	r0, #19047	; 0x4a67
   138e8:	movt	r0, #1
   138ec:	bl	10dd0 <fputs_unlocked@plt>
   138f0:	movw	r1, #20175	; 0x4ecf
   138f4:	mov	r0, #0
   138f8:	mov	r2, #5
   138fc:	movt	r1, #1
   13900:	bl	10e60 <dcgettext@plt>
   13904:	movw	r2, #20195	; 0x4ee3
   13908:	mov	r1, r0
   1390c:	mov	r0, #1
   13910:	movt	r2, #1
   13914:	bl	10f80 <__printf_chk@plt>
   13918:	movw	r1, #20217	; 0x4ef9
   1391c:	mov	r0, #0
   13920:	mov	r2, #5
   13924:	movt	r1, #1
   13928:	bl	10e60 <dcgettext@plt>
   1392c:	movw	r2, #18605	; 0x48ad
   13930:	movw	r3, #18856	; 0x49a8
   13934:	mov	r1, r0
   13938:	mov	r0, #1
   1393c:	movt	r2, #1
   13940:	movt	r3, #1
   13944:	bl	10f80 <__printf_chk@plt>
   13948:	movw	r1, #20237	; 0x4f0d
   1394c:	mov	r0, #0
   13950:	mov	r2, #5
   13954:	movt	r1, #1
   13958:	bl	10e60 <dcgettext@plt>
   1395c:	movw	r2, #20276	; 0x4f34
   13960:	mov	r1, r0
   13964:	mov	r0, #1
   13968:	movt	r2, #1
   1396c:	pop	{fp, lr}
   13970:	b	10f80 <__printf_chk@plt>
   13974:	b	13978 <putchar_unlocked@plt+0x2950>
   13978:	push	{r4, r5, r6, sl, fp, lr}
   1397c:	add	fp, sp, #16
   13980:	mov	r4, r2
   13984:	mov	r5, r1
   13988:	mov	r6, r0
   1398c:	bl	14414 <putchar_unlocked@plt+0x33ec>
   13990:	cmp	r0, #0
   13994:	popne	{r4, r5, r6, sl, fp, pc}
   13998:	cmp	r6, #0
   1399c:	beq	139b0 <putchar_unlocked@plt+0x2988>
   139a0:	cmp	r5, #0
   139a4:	cmpne	r4, #0
   139a8:	bne	139b0 <putchar_unlocked@plt+0x2988>
   139ac:	pop	{r4, r5, r6, sl, fp, pc}
   139b0:	bl	13e04 <putchar_unlocked@plt+0x2ddc>
   139b4:	push	{fp, lr}
   139b8:	mov	fp, sp
   139bc:	bl	13ed0 <putchar_unlocked@plt+0x2ea8>
   139c0:	cmp	r0, #0
   139c4:	popne	{fp, pc}
   139c8:	bl	13e04 <putchar_unlocked@plt+0x2ddc>
   139cc:	push	{fp, lr}
   139d0:	mov	fp, sp
   139d4:	bl	13ed0 <putchar_unlocked@plt+0x2ea8>
   139d8:	cmp	r0, #0
   139dc:	popne	{fp, pc}
   139e0:	bl	13e04 <putchar_unlocked@plt+0x2ddc>
   139e4:	push	{fp, lr}
   139e8:	mov	fp, sp
   139ec:	bl	13ed0 <putchar_unlocked@plt+0x2ea8>
   139f0:	cmp	r0, #0
   139f4:	popne	{fp, pc}
   139f8:	bl	13e04 <putchar_unlocked@plt+0x2ddc>
   139fc:	push	{r4, r5, fp, lr}
   13a00:	add	fp, sp, #8
   13a04:	mov	r4, r1
   13a08:	mov	r5, r0
   13a0c:	bl	13f00 <putchar_unlocked@plt+0x2ed8>
   13a10:	cmp	r0, #0
   13a14:	popne	{r4, r5, fp, pc}
   13a18:	cmp	r5, #0
   13a1c:	beq	13a2c <putchar_unlocked@plt+0x2a04>
   13a20:	cmp	r4, #0
   13a24:	bne	13a2c <putchar_unlocked@plt+0x2a04>
   13a28:	pop	{r4, r5, fp, pc}
   13a2c:	bl	13e04 <putchar_unlocked@plt+0x2ddc>
   13a30:	push	{fp, lr}
   13a34:	mov	fp, sp
   13a38:	cmp	r1, #0
   13a3c:	orreq	r1, r1, #1
   13a40:	bl	13f00 <putchar_unlocked@plt+0x2ed8>
   13a44:	cmp	r0, #0
   13a48:	popne	{fp, pc}
   13a4c:	bl	13e04 <putchar_unlocked@plt+0x2ddc>
   13a50:	push	{fp, lr}
   13a54:	mov	fp, sp
   13a58:	clz	r3, r2
   13a5c:	lsr	ip, r3, #5
   13a60:	clz	r3, r1
   13a64:	lsr	r3, r3, #5
   13a68:	orrs	r3, r3, ip
   13a6c:	movwne	r1, #1
   13a70:	movwne	r2, #1
   13a74:	bl	14414 <putchar_unlocked@plt+0x33ec>
   13a78:	cmp	r0, #0
   13a7c:	popne	{fp, pc}
   13a80:	bl	13e04 <putchar_unlocked@plt+0x2ddc>
   13a84:	push	{fp, lr}
   13a88:	mov	fp, sp
   13a8c:	mov	r2, r1
   13a90:	mov	r1, r0
   13a94:	mov	r0, #0
   13a98:	bl	14414 <putchar_unlocked@plt+0x33ec>
   13a9c:	cmp	r0, #0
   13aa0:	popne	{fp, pc}
   13aa4:	bl	13e04 <putchar_unlocked@plt+0x2ddc>
   13aa8:	mov	r2, r1
   13aac:	mov	r1, r0
   13ab0:	mov	r0, #0
   13ab4:	b	13a50 <putchar_unlocked@plt+0x2a28>
   13ab8:	mov	r2, #1
   13abc:	b	13ac0 <putchar_unlocked@plt+0x2a98>
   13ac0:	push	{r4, r5, fp, lr}
   13ac4:	add	fp, sp, #8
   13ac8:	ldr	r5, [r1]
   13acc:	mov	r4, r1
   13ad0:	cmp	r0, #0
   13ad4:	beq	13aec <putchar_unlocked@plt+0x2ac4>
   13ad8:	mov	r1, #1
   13adc:	add	r1, r1, r5, lsr #1
   13ae0:	adds	r5, r5, r1
   13ae4:	bcc	13b04 <putchar_unlocked@plt+0x2adc>
   13ae8:	bl	13e04 <putchar_unlocked@plt+0x2ddc>
   13aec:	cmp	r5, #0
   13af0:	bne	13b04 <putchar_unlocked@plt+0x2adc>
   13af4:	mov	r1, #64	; 0x40
   13af8:	cmp	r2, #64	; 0x40
   13afc:	udiv	r5, r1, r2
   13b00:	addhi	r5, r5, #1
   13b04:	mov	r1, r5
   13b08:	bl	13978 <putchar_unlocked@plt+0x2950>
   13b0c:	str	r5, [r4]
   13b10:	pop	{r4, r5, fp, pc}
   13b14:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13b18:	add	fp, sp, #24
   13b1c:	ldr	r6, [r1]
   13b20:	mov	r8, r1
   13b24:	ldr	r4, [fp, #8]
   13b28:	add	r1, r6, r6, asr #1
   13b2c:	cmp	r1, r6
   13b30:	mvnvs	r1, #-2147483648	; 0x80000000
   13b34:	cmp	r1, r3
   13b38:	mov	r5, r1
   13b3c:	movgt	r5, r3
   13b40:	cmn	r3, #1
   13b44:	movle	r5, r1
   13b48:	cmn	r4, #1
   13b4c:	ble	13b6c <putchar_unlocked@plt+0x2b44>
   13b50:	cmp	r4, #0
   13b54:	beq	13bc0 <putchar_unlocked@plt+0x2b98>
   13b58:	cmn	r5, #1
   13b5c:	ble	13b94 <putchar_unlocked@plt+0x2b6c>
   13b60:	mvn	r7, #-2147483648	; 0x80000000
   13b64:	udiv	r1, r7, r4
   13b68:	b	13b88 <putchar_unlocked@plt+0x2b60>
   13b6c:	cmn	r5, #1
   13b70:	ble	13bb0 <putchar_unlocked@plt+0x2b88>
   13b74:	cmn	r4, #1
   13b78:	beq	13bc0 <putchar_unlocked@plt+0x2b98>
   13b7c:	mov	r1, #-2147483648	; 0x80000000
   13b80:	mvn	r7, #-2147483648	; 0x80000000
   13b84:	sdiv	r1, r1, r4
   13b88:	cmp	r1, r5
   13b8c:	bge	13bc0 <putchar_unlocked@plt+0x2b98>
   13b90:	b	13bd0 <putchar_unlocked@plt+0x2ba8>
   13b94:	beq	13bc0 <putchar_unlocked@plt+0x2b98>
   13b98:	mov	r1, #-2147483648	; 0x80000000
   13b9c:	mvn	r7, #-2147483648	; 0x80000000
   13ba0:	sdiv	r1, r1, r5
   13ba4:	cmp	r1, r4
   13ba8:	bge	13bc0 <putchar_unlocked@plt+0x2b98>
   13bac:	b	13bd0 <putchar_unlocked@plt+0x2ba8>
   13bb0:	mvn	r7, #-2147483648	; 0x80000000
   13bb4:	sdiv	r1, r7, r4
   13bb8:	cmp	r5, r1
   13bbc:	blt	13bd0 <putchar_unlocked@plt+0x2ba8>
   13bc0:	mul	r1, r5, r4
   13bc4:	mov	r7, #64	; 0x40
   13bc8:	cmp	r1, #63	; 0x3f
   13bcc:	bgt	13bd8 <putchar_unlocked@plt+0x2bb0>
   13bd0:	sdiv	r5, r7, r4
   13bd4:	mul	r1, r5, r4
   13bd8:	cmp	r0, #0
   13bdc:	moveq	r7, #0
   13be0:	streq	r7, [r8]
   13be4:	sub	r7, r5, r6
   13be8:	cmp	r7, r2
   13bec:	bge	13c90 <putchar_unlocked@plt+0x2c68>
   13bf0:	add	r5, r6, r2
   13bf4:	mov	r2, #0
   13bf8:	mov	r1, #0
   13bfc:	cmp	r5, r3
   13c00:	movwgt	r2, #1
   13c04:	cmn	r3, #1
   13c08:	movwgt	r1, #1
   13c0c:	cmp	r5, r6
   13c10:	bvs	13c78 <putchar_unlocked@plt+0x2c50>
   13c14:	ands	r1, r1, r2
   13c18:	bne	13c78 <putchar_unlocked@plt+0x2c50>
   13c1c:	cmn	r4, #1
   13c20:	ble	13c40 <putchar_unlocked@plt+0x2c18>
   13c24:	cmp	r4, #0
   13c28:	beq	13c8c <putchar_unlocked@plt+0x2c64>
   13c2c:	cmn	r5, #1
   13c30:	ble	13c64 <putchar_unlocked@plt+0x2c3c>
   13c34:	mvn	r1, #-2147483648	; 0x80000000
   13c38:	udiv	r1, r1, r4
   13c3c:	b	13c58 <putchar_unlocked@plt+0x2c30>
   13c40:	cmn	r5, #1
   13c44:	ble	13c7c <putchar_unlocked@plt+0x2c54>
   13c48:	cmn	r4, #1
   13c4c:	beq	13c8c <putchar_unlocked@plt+0x2c64>
   13c50:	mov	r1, #-2147483648	; 0x80000000
   13c54:	sdiv	r1, r1, r4
   13c58:	cmp	r1, r5
   13c5c:	bge	13c8c <putchar_unlocked@plt+0x2c64>
   13c60:	b	13c78 <putchar_unlocked@plt+0x2c50>
   13c64:	beq	13c8c <putchar_unlocked@plt+0x2c64>
   13c68:	mov	r1, #-2147483648	; 0x80000000
   13c6c:	sdiv	r1, r1, r5
   13c70:	cmp	r1, r4
   13c74:	bge	13c8c <putchar_unlocked@plt+0x2c64>
   13c78:	bl	13e04 <putchar_unlocked@plt+0x2ddc>
   13c7c:	mvn	r1, #-2147483648	; 0x80000000
   13c80:	sdiv	r1, r1, r4
   13c84:	cmp	r5, r1
   13c88:	blt	13c78 <putchar_unlocked@plt+0x2c50>
   13c8c:	mul	r1, r5, r4
   13c90:	bl	139fc <putchar_unlocked@plt+0x29d4>
   13c94:	str	r5, [r8]
   13c98:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13c9c:	push	{fp, lr}
   13ca0:	mov	fp, sp
   13ca4:	mov	r1, #1
   13ca8:	bl	13e7c <putchar_unlocked@plt+0x2e54>
   13cac:	cmp	r0, #0
   13cb0:	popne	{fp, pc}
   13cb4:	bl	13e04 <putchar_unlocked@plt+0x2ddc>
   13cb8:	push	{fp, lr}
   13cbc:	mov	fp, sp
   13cc0:	bl	13e7c <putchar_unlocked@plt+0x2e54>
   13cc4:	cmp	r0, #0
   13cc8:	popne	{fp, pc}
   13ccc:	bl	13e04 <putchar_unlocked@plt+0x2ddc>
   13cd0:	push	{fp, lr}
   13cd4:	mov	fp, sp
   13cd8:	mov	r1, #1
   13cdc:	bl	13e7c <putchar_unlocked@plt+0x2e54>
   13ce0:	cmp	r0, #0
   13ce4:	popne	{fp, pc}
   13ce8:	bl	13e04 <putchar_unlocked@plt+0x2ddc>
   13cec:	push	{fp, lr}
   13cf0:	mov	fp, sp
   13cf4:	bl	13e7c <putchar_unlocked@plt+0x2e54>
   13cf8:	cmp	r0, #0
   13cfc:	popne	{fp, pc}
   13d00:	bl	13e04 <putchar_unlocked@plt+0x2ddc>
   13d04:	push	{r4, r5, r6, sl, fp, lr}
   13d08:	add	fp, sp, #16
   13d0c:	mov	r5, r0
   13d10:	mov	r0, r1
   13d14:	mov	r4, r1
   13d18:	bl	13ed0 <putchar_unlocked@plt+0x2ea8>
   13d1c:	cmp	r0, #0
   13d20:	beq	13d3c <putchar_unlocked@plt+0x2d14>
   13d24:	mov	r1, r5
   13d28:	mov	r2, r4
   13d2c:	mov	r6, r0
   13d30:	bl	10e3c <memcpy@plt>
   13d34:	mov	r0, r6
   13d38:	pop	{r4, r5, r6, sl, fp, pc}
   13d3c:	bl	13e04 <putchar_unlocked@plt+0x2ddc>
   13d40:	push	{r4, r5, r6, sl, fp, lr}
   13d44:	add	fp, sp, #16
   13d48:	mov	r5, r0
   13d4c:	mov	r0, r1
   13d50:	mov	r4, r1
   13d54:	bl	13ed0 <putchar_unlocked@plt+0x2ea8>
   13d58:	cmp	r0, #0
   13d5c:	beq	13d78 <putchar_unlocked@plt+0x2d50>
   13d60:	mov	r1, r5
   13d64:	mov	r2, r4
   13d68:	mov	r6, r0
   13d6c:	bl	10e3c <memcpy@plt>
   13d70:	mov	r0, r6
   13d74:	pop	{r4, r5, r6, sl, fp, pc}
   13d78:	bl	13e04 <putchar_unlocked@plt+0x2ddc>
   13d7c:	push	{r4, r5, r6, sl, fp, lr}
   13d80:	add	fp, sp, #16
   13d84:	mov	r5, r0
   13d88:	add	r0, r1, #1
   13d8c:	mov	r4, r1
   13d90:	bl	13ed0 <putchar_unlocked@plt+0x2ea8>
   13d94:	cmp	r0, #0
   13d98:	beq	13dc0 <putchar_unlocked@plt+0x2d98>
   13d9c:	mov	r6, r0
   13da0:	mov	r0, #0
   13da4:	mov	r1, r5
   13da8:	mov	r2, r4
   13dac:	strb	r0, [r6, r4]
   13db0:	mov	r0, r6
   13db4:	bl	10e3c <memcpy@plt>
   13db8:	mov	r0, r6
   13dbc:	pop	{r4, r5, r6, sl, fp, pc}
   13dc0:	bl	13e04 <putchar_unlocked@plt+0x2ddc>
   13dc4:	push	{r4, r5, r6, sl, fp, lr}
   13dc8:	add	fp, sp, #16
   13dcc:	mov	r4, r0
   13dd0:	bl	10f38 <strlen@plt>
   13dd4:	add	r5, r0, #1
   13dd8:	mov	r0, r5
   13ddc:	bl	13ed0 <putchar_unlocked@plt+0x2ea8>
   13de0:	cmp	r0, #0
   13de4:	beq	13e00 <putchar_unlocked@plt+0x2dd8>
   13de8:	mov	r1, r4
   13dec:	mov	r2, r5
   13df0:	mov	r6, r0
   13df4:	bl	10e3c <memcpy@plt>
   13df8:	mov	r0, r6
   13dfc:	pop	{r4, r5, r6, sl, fp, pc}
   13e00:	bl	13e04 <putchar_unlocked@plt+0x2ddc>
   13e04:	push	{fp, lr}
   13e08:	mov	fp, sp
   13e0c:	movw	r0, #24812	; 0x60ec
   13e10:	movw	r1, #20352	; 0x4f80
   13e14:	mov	r2, #5
   13e18:	movt	r0, #2
   13e1c:	movt	r1, #1
   13e20:	ldr	r4, [r0]
   13e24:	mov	r0, #0
   13e28:	bl	10e60 <dcgettext@plt>
   13e2c:	movw	r2, #19311	; 0x4b6f
   13e30:	mov	r3, r0
   13e34:	mov	r0, r4
   13e38:	mov	r1, #0
   13e3c:	movt	r2, #1
   13e40:	bl	10ed8 <error@plt>
   13e44:	bl	11010 <abort@plt>
   13e48:	push	{r4, sl, fp, lr}
   13e4c:	add	fp, sp, #8
   13e50:	bl	14204 <putchar_unlocked@plt+0x31dc>
   13e54:	mov	r4, r0
   13e58:	cmn	r0, #1
   13e5c:	bne	13e70 <putchar_unlocked@plt+0x2e48>
   13e60:	bl	10f44 <__errno_location@plt>
   13e64:	ldr	r0, [r0]
   13e68:	cmp	r0, #12
   13e6c:	beq	13e78 <putchar_unlocked@plt+0x2e50>
   13e70:	mov	r0, r4
   13e74:	pop	{r4, sl, fp, pc}
   13e78:	bl	13e04 <putchar_unlocked@plt+0x2ddc>
   13e7c:	clz	r2, r1
   13e80:	clz	r3, r0
   13e84:	lsr	r2, r2, #5
   13e88:	lsr	r3, r3, #5
   13e8c:	orrs	r2, r3, r2
   13e90:	movwne	r1, #1
   13e94:	movwne	r0, #1
   13e98:	cmp	r1, #0
   13e9c:	beq	13ecc <putchar_unlocked@plt+0x2ea4>
   13ea0:	mvn	r2, #-2147483648	; 0x80000000
   13ea4:	udiv	r2, r2, r1
   13ea8:	cmp	r2, r0
   13eac:	bcs	13ecc <putchar_unlocked@plt+0x2ea4>
   13eb0:	push	{fp, lr}
   13eb4:	mov	fp, sp
   13eb8:	bl	10f44 <__errno_location@plt>
   13ebc:	mov	r1, #12
   13ec0:	str	r1, [r0]
   13ec4:	mov	r0, #0
   13ec8:	pop	{fp, pc}
   13ecc:	b	10dc4 <calloc@plt>
   13ed0:	cmp	r0, #0
   13ed4:	movweq	r0, #1
   13ed8:	cmn	r0, #1
   13edc:	ble	13ee4 <putchar_unlocked@plt+0x2ebc>
   13ee0:	b	10ee4 <malloc@plt>
   13ee4:	push	{fp, lr}
   13ee8:	mov	fp, sp
   13eec:	bl	10f44 <__errno_location@plt>
   13ef0:	mov	r1, #12
   13ef4:	str	r1, [r0]
   13ef8:	mov	r0, #0
   13efc:	pop	{fp, pc}
   13f00:	push	{fp, lr}
   13f04:	mov	fp, sp
   13f08:	cmp	r0, #0
   13f0c:	beq	13f28 <putchar_unlocked@plt+0x2f00>
   13f10:	cmp	r1, #0
   13f14:	beq	13f34 <putchar_unlocked@plt+0x2f0c>
   13f18:	cmn	r1, #1
   13f1c:	ble	13f3c <putchar_unlocked@plt+0x2f14>
   13f20:	pop	{fp, lr}
   13f24:	b	10e6c <realloc@plt>
   13f28:	mov	r0, r1
   13f2c:	pop	{fp, lr}
   13f30:	b	13ed0 <putchar_unlocked@plt+0x2ea8>
   13f34:	bl	11938 <putchar_unlocked@plt+0x910>
   13f38:	b	13f48 <putchar_unlocked@plt+0x2f20>
   13f3c:	bl	10f44 <__errno_location@plt>
   13f40:	mov	r1, #12
   13f44:	str	r1, [r0]
   13f48:	mov	r0, #0
   13f4c:	pop	{fp, pc}
   13f50:	push	{r4, r5, r6, sl, fp, lr}
   13f54:	add	fp, sp, #16
   13f58:	mov	r4, r0
   13f5c:	bl	10eb4 <__fpending@plt>
   13f60:	mov	r5, r0
   13f64:	mov	r0, r4
   13f68:	bl	10ec0 <ferror_unlocked@plt>
   13f6c:	mov	r6, r0
   13f70:	mov	r0, r4
   13f74:	bl	13fd0 <putchar_unlocked@plt+0x2fa8>
   13f78:	cmp	r6, #0
   13f7c:	beq	13f9c <putchar_unlocked@plt+0x2f74>
   13f80:	mvn	r4, #0
   13f84:	cmp	r0, #0
   13f88:	bne	13fc8 <putchar_unlocked@plt+0x2fa0>
   13f8c:	bl	10f44 <__errno_location@plt>
   13f90:	mov	r1, #0
   13f94:	str	r1, [r0]
   13f98:	b	13fc8 <putchar_unlocked@plt+0x2fa0>
   13f9c:	cmp	r0, #0
   13fa0:	mov	r4, r0
   13fa4:	mvnne	r4, #0
   13fa8:	cmp	r5, #0
   13fac:	bne	13fc8 <putchar_unlocked@plt+0x2fa0>
   13fb0:	cmp	r0, #0
   13fb4:	beq	13fc8 <putchar_unlocked@plt+0x2fa0>
   13fb8:	bl	10f44 <__errno_location@plt>
   13fbc:	ldr	r0, [r0]
   13fc0:	subs	r4, r0, #9
   13fc4:	mvnne	r4, #0
   13fc8:	mov	r0, r4
   13fcc:	pop	{r4, r5, r6, sl, fp, pc}
   13fd0:	push	{r4, r5, r6, sl, fp, lr}
   13fd4:	add	fp, sp, #16
   13fd8:	sub	sp, sp, #8
   13fdc:	mov	r4, r0
   13fe0:	bl	10f8c <fileno@plt>
   13fe4:	cmn	r0, #1
   13fe8:	ble	1405c <putchar_unlocked@plt+0x3034>
   13fec:	mov	r0, r4
   13ff0:	bl	10efc <__freading@plt>
   13ff4:	cmp	r0, #0
   13ff8:	beq	14024 <putchar_unlocked@plt+0x2ffc>
   13ffc:	mov	r0, r4
   14000:	bl	10f8c <fileno@plt>
   14004:	mov	r1, #1
   14008:	mov	r2, #0
   1400c:	mov	r3, #0
   14010:	str	r1, [sp]
   14014:	bl	10e9c <lseek64@plt>
   14018:	and	r0, r0, r1
   1401c:	cmn	r0, #1
   14020:	beq	1405c <putchar_unlocked@plt+0x3034>
   14024:	mov	r0, r4
   14028:	bl	1406c <putchar_unlocked@plt+0x3044>
   1402c:	cmp	r0, #0
   14030:	beq	1405c <putchar_unlocked@plt+0x3034>
   14034:	bl	10f44 <__errno_location@plt>
   14038:	ldr	r6, [r0]
   1403c:	mov	r5, r0
   14040:	mov	r0, r4
   14044:	bl	10fa4 <fclose@plt>
   14048:	cmp	r6, #0
   1404c:	strne	r6, [r5]
   14050:	mvnne	r0, #0
   14054:	sub	sp, fp, #16
   14058:	pop	{r4, r5, r6, sl, fp, pc}
   1405c:	mov	r0, r4
   14060:	sub	sp, fp, #16
   14064:	pop	{r4, r5, r6, sl, fp, lr}
   14068:	b	10fa4 <fclose@plt>
   1406c:	push	{r4, sl, fp, lr}
   14070:	add	fp, sp, #8
   14074:	sub	sp, sp, #8
   14078:	mov	r4, r0
   1407c:	cmp	r0, #0
   14080:	beq	1409c <putchar_unlocked@plt+0x3074>
   14084:	mov	r0, r4
   14088:	bl	10efc <__freading@plt>
   1408c:	cmp	r0, #0
   14090:	ldrbne	r0, [r4, #1]
   14094:	tstne	r0, #1
   14098:	bne	140ac <putchar_unlocked@plt+0x3084>
   1409c:	mov	r0, r4
   140a0:	sub	sp, fp, #8
   140a4:	pop	{r4, sl, fp, lr}
   140a8:	b	10e0c <fflush@plt>
   140ac:	mov	r0, #1
   140b0:	mov	r2, #0
   140b4:	mov	r3, #0
   140b8:	str	r0, [sp]
   140bc:	mov	r0, r4
   140c0:	bl	140c8 <putchar_unlocked@plt+0x30a0>
   140c4:	b	1409c <putchar_unlocked@plt+0x3074>
   140c8:	push	{r4, r5, r6, r7, fp, lr}
   140cc:	add	fp, sp, #16
   140d0:	sub	sp, sp, #8
   140d4:	mov	r4, r0
   140d8:	ldr	r0, [r0, #4]
   140dc:	mov	r5, r3
   140e0:	mov	r6, r2
   140e4:	ldr	r1, [r4, #8]
   140e8:	cmp	r1, r0
   140ec:	bne	14108 <putchar_unlocked@plt+0x30e0>
   140f0:	ldrd	r0, [r4, #16]
   140f4:	cmp	r1, r0
   140f8:	bne	14108 <putchar_unlocked@plt+0x30e0>
   140fc:	ldr	r0, [r4, #36]	; 0x24
   14100:	cmp	r0, #0
   14104:	beq	14120 <putchar_unlocked@plt+0x30f8>
   14108:	mov	r0, r4
   1410c:	mov	r2, r6
   14110:	mov	r3, r5
   14114:	sub	sp, fp, #16
   14118:	pop	{r4, r5, r6, r7, fp, lr}
   1411c:	b	10fb0 <fseeko64@plt>
   14120:	ldr	r7, [fp, #8]
   14124:	mov	r0, r4
   14128:	bl	10f8c <fileno@plt>
   1412c:	mov	r2, r6
   14130:	mov	r3, r5
   14134:	str	r7, [sp]
   14138:	bl	10e9c <lseek64@plt>
   1413c:	and	r2, r0, r1
   14140:	cmn	r2, #1
   14144:	beq	14160 <putchar_unlocked@plt+0x3138>
   14148:	strd	r0, [r4, #80]	; 0x50
   1414c:	ldr	r0, [r4]
   14150:	bic	r0, r0, #16
   14154:	str	r0, [r4]
   14158:	mov	r0, #0
   1415c:	b	14164 <putchar_unlocked@plt+0x313c>
   14160:	mvn	r0, #0
   14164:	sub	sp, fp, #16
   14168:	pop	{r4, r5, r6, r7, fp, pc}
   1416c:	push	{fp, lr}
   14170:	mov	fp, sp
   14174:	mov	r0, #14
   14178:	bl	10fd4 <nl_langinfo@plt>
   1417c:	movw	r1, #19048	; 0x4a68
   14180:	cmp	r0, #0
   14184:	movt	r1, #1
   14188:	movne	r1, r0
   1418c:	movw	r0, #20369	; 0x4f91
   14190:	ldrb	r2, [r1]
   14194:	movt	r0, #1
   14198:	cmp	r2, #0
   1419c:	movne	r0, r1
   141a0:	pop	{fp, pc}
   141a4:	push	{r4, r5, r6, r7, fp, lr}
   141a8:	add	fp, sp, #16
   141ac:	sub	sp, sp, #8
   141b0:	add	r5, sp, #4
   141b4:	cmp	r0, #0
   141b8:	mov	r7, r2
   141bc:	mov	r4, r1
   141c0:	movne	r5, r0
   141c4:	mov	r0, r5
   141c8:	bl	10ecc <mbrtowc@plt>
   141cc:	mov	r6, r0
   141d0:	cmp	r7, #0
   141d4:	beq	141f8 <putchar_unlocked@plt+0x31d0>
   141d8:	cmn	r6, #2
   141dc:	bcc	141f8 <putchar_unlocked@plt+0x31d0>
   141e0:	mov	r0, #0
   141e4:	bl	14450 <putchar_unlocked@plt+0x3428>
   141e8:	cmp	r0, #0
   141ec:	ldrbeq	r0, [r4]
   141f0:	moveq	r6, #1
   141f4:	streq	r0, [r5]
   141f8:	mov	r0, r6
   141fc:	sub	sp, fp, #16
   14200:	pop	{r4, r5, r6, r7, fp, pc}
   14204:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14208:	add	fp, sp, #28
   1420c:	sub	sp, sp, #12
   14210:	mov	r6, r2
   14214:	mov	sl, r1
   14218:	cmp	r0, #0
   1421c:	beq	142ac <putchar_unlocked@plt+0x3284>
   14220:	mov	r7, r0
   14224:	mov	r8, #10
   14228:	mov	r0, #0
   1422c:	mov	r1, #40	; 0x28
   14230:	str	r8, [sp, #8]
   14234:	bl	13f00 <putchar_unlocked@plt+0x2ed8>
   14238:	mvn	r9, #0
   1423c:	cmp	r0, #0
   14240:	beq	143d0 <putchar_unlocked@plt+0x33a8>
   14244:	mov	r5, r0
   14248:	add	r4, sp, #8
   1424c:	str	r6, [sp, #4]
   14250:	b	14264 <putchar_unlocked@plt+0x323c>
   14254:	cmn	r6, #1
   14258:	bgt	14378 <putchar_unlocked@plt+0x3350>
   1425c:	ldr	r8, [sp, #8]
   14260:	mov	r5, r0
   14264:	mov	r0, r7
   14268:	mov	r1, sl
   1426c:	mov	r2, r5
   14270:	mov	r3, r4
   14274:	bl	10f68 <getgrouplist@plt>
   14278:	ldr	r1, [sp, #8]
   1427c:	mov	r6, r0
   14280:	cmn	r0, #1
   14284:	bgt	14294 <putchar_unlocked@plt+0x326c>
   14288:	cmp	r8, r1
   1428c:	lsleq	r1, r8, #1
   14290:	streq	r1, [sp, #8]
   14294:	mov	r0, r5
   14298:	bl	143e4 <putchar_unlocked@plt+0x33bc>
   1429c:	cmp	r0, #0
   142a0:	bne	14254 <putchar_unlocked@plt+0x322c>
   142a4:	mov	r0, r5
   142a8:	b	143cc <putchar_unlocked@plt+0x33a4>
   142ac:	mov	r0, #0
   142b0:	mov	r1, #0
   142b4:	bl	10fe0 <getgroups@plt>
   142b8:	cmn	r0, #1
   142bc:	str	r0, [sp, #8]
   142c0:	ble	14388 <putchar_unlocked@plt+0x3360>
   142c4:	mov	r4, r0
   142c8:	cmn	sl, #1
   142cc:	bne	142d8 <putchar_unlocked@plt+0x32b0>
   142d0:	cmp	r4, #0
   142d4:	bne	142e0 <putchar_unlocked@plt+0x32b8>
   142d8:	add	r4, r4, #1
   142dc:	str	r4, [sp, #8]
   142e0:	mov	r0, #0
   142e4:	mov	r1, r4
   142e8:	bl	143e4 <putchar_unlocked@plt+0x33bc>
   142ec:	mvn	r9, #0
   142f0:	cmp	r0, #0
   142f4:	beq	143d0 <putchar_unlocked@plt+0x33a8>
   142f8:	add	r1, sl, #1
   142fc:	cmn	sl, #1
   14300:	mov	r7, r0
   14304:	movwne	r1, #1
   14308:	sub	r0, r4, r1
   1430c:	add	r1, r7, r1, lsl #2
   14310:	bl	10fe0 <getgroups@plt>
   14314:	cmn	r0, #1
   14318:	ble	143c8 <putchar_unlocked@plt+0x33a0>
   1431c:	cmn	sl, #1
   14320:	addne	r0, r0, #1
   14324:	strne	sl, [r7]
   14328:	str	r7, [r6]
   1432c:	cmp	r0, #2
   14330:	blt	143dc <putchar_unlocked@plt+0x33b4>
   14334:	mov	r2, r7
   14338:	add	r1, r7, r0, lsl #2
   1433c:	mov	r9, r0
   14340:	ldr	r6, [r2], #4
   14344:	mov	r3, r6
   14348:	ldr	r0, [r2]
   1434c:	cmp	r0, r6
   14350:	cmpne	r0, r3
   14354:	bne	14360 <putchar_unlocked@plt+0x3338>
   14358:	sub	r9, r9, #1
   1435c:	b	14368 <putchar_unlocked@plt+0x3340>
   14360:	str	r0, [r7, #4]!
   14364:	mov	r3, r0
   14368:	add	r2, r2, #4
   1436c:	cmp	r2, r1
   14370:	bcc	14348 <putchar_unlocked@plt+0x3320>
   14374:	b	143d0 <putchar_unlocked@plt+0x33a8>
   14378:	ldr	r1, [sp, #4]
   1437c:	str	r0, [r1]
   14380:	ldr	r9, [sp, #8]
   14384:	b	143d0 <putchar_unlocked@plt+0x33a8>
   14388:	bl	10f44 <__errno_location@plt>
   1438c:	ldr	r0, [r0]
   14390:	mvn	r9, #0
   14394:	cmp	r0, #38	; 0x26
   14398:	bne	143d0 <putchar_unlocked@plt+0x33a8>
   1439c:	mov	r0, #0
   143a0:	mov	r1, #4
   143a4:	bl	13f00 <putchar_unlocked@plt+0x2ed8>
   143a8:	cmp	r0, #0
   143ac:	beq	143d0 <putchar_unlocked@plt+0x33a8>
   143b0:	add	r9, sl, #1
   143b4:	cmn	sl, #1
   143b8:	str	r0, [r6]
   143bc:	str	sl, [r0]
   143c0:	movwne	r9, #1
   143c4:	b	143d0 <putchar_unlocked@plt+0x33a8>
   143c8:	mov	r0, r7
   143cc:	bl	11938 <putchar_unlocked@plt+0x910>
   143d0:	mov	r0, r9
   143d4:	sub	sp, fp, #28
   143d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   143dc:	mov	r9, r0
   143e0:	b	143d0 <putchar_unlocked@plt+0x33a8>
   143e4:	push	{fp, lr}
   143e8:	mov	fp, sp
   143ec:	cmp	r1, #536870912	; 0x20000000
   143f0:	bcc	14408 <putchar_unlocked@plt+0x33e0>
   143f4:	bl	10f44 <__errno_location@plt>
   143f8:	mov	r1, #12
   143fc:	str	r1, [r0]
   14400:	mov	r0, #0
   14404:	pop	{fp, pc}
   14408:	lsl	r1, r1, #2
   1440c:	bl	13f00 <putchar_unlocked@plt+0x2ed8>
   14410:	pop	{fp, pc}
   14414:	cmp	r2, #0
   14418:	beq	14448 <putchar_unlocked@plt+0x3420>
   1441c:	mvn	r3, #0
   14420:	udiv	r3, r3, r2
   14424:	cmp	r3, r1
   14428:	bcs	14448 <putchar_unlocked@plt+0x3420>
   1442c:	push	{fp, lr}
   14430:	mov	fp, sp
   14434:	bl	10f44 <__errno_location@plt>
   14438:	mov	r1, #12
   1443c:	str	r1, [r0]
   14440:	mov	r0, #0
   14444:	pop	{fp, pc}
   14448:	mul	r1, r2, r1
   1444c:	b	13f00 <putchar_unlocked@plt+0x2ed8>
   14450:	push	{r4, sl, fp, lr}
   14454:	add	fp, sp, #8
   14458:	sub	sp, sp, #264	; 0x108
   1445c:	add	r1, sp, #7
   14460:	movw	r2, #257	; 0x101
   14464:	bl	144b4 <putchar_unlocked@plt+0x348c>
   14468:	mov	r4, #0
   1446c:	cmp	r0, #0
   14470:	bne	144a8 <putchar_unlocked@plt+0x3480>
   14474:	movw	r1, #20375	; 0x4f97
   14478:	add	r0, sp, #7
   1447c:	movt	r1, #1
   14480:	bl	10df4 <strcmp@plt>
   14484:	cmp	r0, #0
   14488:	beq	144a8 <putchar_unlocked@plt+0x3480>
   1448c:	movw	r1, #20377	; 0x4f99
   14490:	add	r0, sp, #7
   14494:	movt	r1, #1
   14498:	bl	10df4 <strcmp@plt>
   1449c:	mov	r4, r0
   144a0:	cmp	r0, #0
   144a4:	movwne	r4, #1
   144a8:	mov	r0, r4
   144ac:	sub	sp, fp, #8
   144b0:	pop	{r4, sl, fp, pc}
   144b4:	push	{r4, r5, r6, r7, fp, lr}
   144b8:	add	fp, sp, #16
   144bc:	mov	r4, r1
   144c0:	mov	r1, #0
   144c4:	mov	r6, r2
   144c8:	bl	10fbc <setlocale@plt>
   144cc:	cmp	r0, #0
   144d0:	beq	144fc <putchar_unlocked@plt+0x34d4>
   144d4:	mov	r7, r0
   144d8:	bl	10f38 <strlen@plt>
   144dc:	cmp	r0, r6
   144e0:	bcs	14510 <putchar_unlocked@plt+0x34e8>
   144e4:	add	r2, r0, #1
   144e8:	mov	r0, r4
   144ec:	mov	r1, r7
   144f0:	bl	10e3c <memcpy@plt>
   144f4:	mov	r5, #0
   144f8:	b	14538 <putchar_unlocked@plt+0x3510>
   144fc:	cmp	r6, #0
   14500:	mov	r5, #22
   14504:	movne	r0, #0
   14508:	strbne	r0, [r4]
   1450c:	b	14538 <putchar_unlocked@plt+0x3510>
   14510:	mov	r5, #34	; 0x22
   14514:	cmp	r6, #0
   14518:	beq	14538 <putchar_unlocked@plt+0x3510>
   1451c:	sub	r6, r6, #1
   14520:	mov	r0, r4
   14524:	mov	r1, r7
   14528:	mov	r2, r6
   1452c:	bl	10e3c <memcpy@plt>
   14530:	mov	r0, #0
   14534:	strb	r0, [r4, r6]
   14538:	mov	r0, r5
   1453c:	pop	{r4, r5, r6, r7, fp, pc}
   14540:	mov	r1, #0
   14544:	b	10fbc <setlocale@plt>
   14548:	cmp	r3, #0
   1454c:	cmpeq	r2, #0
   14550:	bne	14568 <putchar_unlocked@plt+0x3540>
   14554:	cmp	r1, #0
   14558:	cmpeq	r0, #0
   1455c:	mvnne	r1, #0
   14560:	mvnne	r0, #0
   14564:	b	14584 <putchar_unlocked@plt+0x355c>
   14568:	sub	sp, sp, #8
   1456c:	push	{sp, lr}
   14570:	bl	14594 <putchar_unlocked@plt+0x356c>
   14574:	ldr	lr, [sp, #4]
   14578:	add	sp, sp, #8
   1457c:	pop	{r2, r3}
   14580:	bx	lr
   14584:	push	{r1, lr}
   14588:	mov	r0, #8
   1458c:	bl	10ddc <raise@plt>
   14590:	pop	{r1, pc}
   14594:	cmp	r1, r3
   14598:	cmpeq	r0, r2
   1459c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   145a0:	mov	r4, r0
   145a4:	movcc	r0, #0
   145a8:	mov	r5, r1
   145ac:	ldr	lr, [sp, #36]	; 0x24
   145b0:	movcc	r1, r0
   145b4:	bcc	146b0 <putchar_unlocked@plt+0x3688>
   145b8:	cmp	r3, #0
   145bc:	clzeq	ip, r2
   145c0:	clzne	ip, r3
   145c4:	addeq	ip, ip, #32
   145c8:	cmp	r5, #0
   145cc:	clzeq	r1, r4
   145d0:	addeq	r1, r1, #32
   145d4:	clzne	r1, r5
   145d8:	sub	ip, ip, r1
   145dc:	sub	sl, ip, #32
   145e0:	lsl	r9, r3, ip
   145e4:	rsb	fp, ip, #32
   145e8:	orr	r9, r9, r2, lsl sl
   145ec:	orr	r9, r9, r2, lsr fp
   145f0:	lsl	r8, r2, ip
   145f4:	cmp	r5, r9
   145f8:	cmpeq	r4, r8
   145fc:	movcc	r0, #0
   14600:	movcc	r1, r0
   14604:	bcc	14620 <putchar_unlocked@plt+0x35f8>
   14608:	mov	r0, #1
   1460c:	subs	r4, r4, r8
   14610:	lsl	r1, r0, sl
   14614:	orr	r1, r1, r0, lsr fp
   14618:	lsl	r0, r0, ip
   1461c:	sbc	r5, r5, r9
   14620:	cmp	ip, #0
   14624:	beq	146b0 <putchar_unlocked@plt+0x3688>
   14628:	lsr	r6, r8, #1
   1462c:	orr	r6, r6, r9, lsl #31
   14630:	lsr	r7, r9, #1
   14634:	mov	r2, ip
   14638:	b	1465c <putchar_unlocked@plt+0x3634>
   1463c:	subs	r3, r4, r6
   14640:	sbc	r8, r5, r7
   14644:	adds	r3, r3, r3
   14648:	adc	r8, r8, r8
   1464c:	adds	r4, r3, #1
   14650:	adc	r5, r8, #0
   14654:	subs	r2, r2, #1
   14658:	beq	14678 <putchar_unlocked@plt+0x3650>
   1465c:	cmp	r5, r7
   14660:	cmpeq	r4, r6
   14664:	bcs	1463c <putchar_unlocked@plt+0x3614>
   14668:	adds	r4, r4, r4
   1466c:	adc	r5, r5, r5
   14670:	subs	r2, r2, #1
   14674:	bne	1465c <putchar_unlocked@plt+0x3634>
   14678:	lsr	r3, r4, ip
   1467c:	orr	r3, r3, r5, lsl fp
   14680:	lsr	r2, r5, ip
   14684:	orr	r3, r3, r5, lsr sl
   14688:	adds	r0, r0, r4
   1468c:	mov	r4, r3
   14690:	lsl	r3, r2, ip
   14694:	orr	r3, r3, r4, lsl sl
   14698:	lsl	ip, r4, ip
   1469c:	orr	r3, r3, r4, lsr fp
   146a0:	adc	r1, r1, r5
   146a4:	subs	r0, r0, ip
   146a8:	mov	r5, r2
   146ac:	sbc	r1, r1, r3
   146b0:	cmp	lr, #0
   146b4:	strdne	r4, [lr]
   146b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   146bc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   146c0:	mov	r7, r0
   146c4:	ldr	r6, [pc, #72]	; 14714 <putchar_unlocked@plt+0x36ec>
   146c8:	ldr	r5, [pc, #72]	; 14718 <putchar_unlocked@plt+0x36f0>
   146cc:	add	r6, pc, r6
   146d0:	add	r5, pc, r5
   146d4:	sub	r6, r6, r5
   146d8:	mov	r8, r1
   146dc:	mov	r9, r2
   146e0:	bl	10da4 <calloc@plt-0x20>
   146e4:	asrs	r6, r6, #2
   146e8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   146ec:	mov	r4, #0
   146f0:	add	r4, r4, #1
   146f4:	ldr	r3, [r5], #4
   146f8:	mov	r2, r9
   146fc:	mov	r1, r8
   14700:	mov	r0, r7
   14704:	blx	r3
   14708:	cmp	r6, r4
   1470c:	bne	146f0 <putchar_unlocked@plt+0x36c8>
   14710:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14714:	andeq	r1, r1, r8, lsr r8
   14718:	andeq	r1, r1, r0, lsr r8
   1471c:	bx	lr
   14720:	ldr	r3, [pc, #12]	; 14734 <putchar_unlocked@plt+0x370c>
   14724:	mov	r1, #0
   14728:	add	r3, pc, r3
   1472c:	ldr	r2, [r3]
   14730:	b	10f50 <__cxa_atexit@plt>
   14734:			; <UNDEFINED> instruction: 0x000119b4

Disassembly of section .fini:

00014738 <.fini>:
   14738:	push	{r3, lr}
   1473c:	pop	{r3, pc}
