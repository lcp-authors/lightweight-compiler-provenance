
../repos/charybdis/modules/.libs/m_resv.so:     file format elf32-littlearm


Disassembly of section .init:

00000b68 <_init>:
 b68:	push	{r3, lr}
 b6c:	bl	d74 <call_weak_fn>
 b70:	pop	{r3, pc}

Disassembly of section .plt:

00000b74 <.plt>:
 b74:	push	{lr}		; (str lr, [sp, #-4]!)
 b78:	ldr	lr, [pc, #4]	; b84 <.plt+0x10>
 b7c:	add	lr, pc, lr
 b80:	ldr	pc, [lr, #8]!
 b84:	.word	0x0001247c

00000b88 <propagate_generic@plt>:
 b88:	add	ip, pc, #0, 12
 b8c:	add	ip, ip, #73728	; 0x12000
 b90:	ldr	pc, [ip, #1148]!	; 0x47c

00000b94 <make_conf@plt>:
 b94:	add	ip, pc, #0, 12
 b98:	add	ip, ip, #73728	; 0x12000
 b9c:	ldr	pc, [ip, #1140]!	; 0x474

00000ba0 <rb_current_time@plt>:
 ba0:	add	ip, pc, #0, 12
 ba4:	add	ip, ip, #73728	; 0x12000
 ba8:	ldr	pc, [ip, #1132]!	; 0x46c

00000bac <add_to_resv_hash@plt>:
 bac:	add	ip, pc, #0, 12
 bb0:	add	ip, ip, #73728	; 0x12000
 bb4:	ldr	pc, [ip, #1124]!	; 0x464

00000bb8 <sendto_match_servs@plt>:
 bb8:	add	ip, pc, #0, 12
 bbc:	add	ip, ip, #73728	; 0x12000
 bc0:	ldr	pc, [ip, #1116]!	; 0x45c

00000bc4 <__cxa_finalize@plt>:
 bc4:	add	ip, pc, #0, 12
 bc8:	add	ip, ip, #73728	; 0x12000
 bcc:	ldr	pc, [ip, #1108]!	; 0x454

00000bd0 <strtol@plt>:
 bd0:	add	ip, pc, #0, 12
 bd4:	add	ip, ip, #73728	; 0x12000
 bd8:	ldr	pc, [ip, #1100]!	; 0x44c

00000bdc <sendto_one@plt>:
 bdc:	add	ip, pc, #0, 12
 be0:	add	ip, ip, #73728	; 0x12000
 be4:	ldr	pc, [ip, #1092]!	; 0x444

00000be8 <replace_old_ban@plt>:
 be8:	add	ip, pc, #0, 12
 bec:	add	ip, ip, #73728	; 0x12000
 bf0:	ldr	pc, [ip, #1084]!	; 0x43c

00000bf4 <memcpy@plt>:
 bf4:	add	ip, pc, #0, 12
 bf8:	add	ip, ip, #73728	; 0x12000
 bfc:	ldr	pc, [ip, #1076]!	; 0x434

00000c00 <rb_outofmemory@plt>:
 c00:	add	ip, pc, #0, 12
 c04:	add	ip, ip, #73728	; 0x12000
 c08:	ldr	pc, [ip, #1068]!	; 0x42c

00000c0c <resv_nick_fnc@plt>:
 c0c:	add	ip, pc, #0, 12
 c10:	add	ip, ip, #73728	; 0x12000
 c14:	ldr	pc, [ip, #1060]!	; 0x424

00000c18 <operhash_delete@plt>:
 c18:	add	ip, pc, #0, 12
 c1c:	add	ip, ip, #73728	; 0x12000
 c20:	ldr	pc, [ip, #1052]!	; 0x41c

00000c24 <sendto_realops_snomask@plt>:
 c24:	add	ip, pc, #0, 12
 c28:	add	ip, ip, #73728	; 0x12000
 c2c:	ldr	pc, [ip, #1044]!	; 0x414

00000c30 <bandb_add@plt>:
 c30:	add	ip, pc, #0, 12
 c34:	add	ip, ip, #73728	; 0x12000
 c38:	ldr	pc, [ip, #1036]!	; 0x40c

00000c3c <resv_chan_forcepart@plt>:
 c3c:	add	ip, pc, #0, 12
 c40:	add	ip, ip, #73728	; 0x12000
 c44:	ldr	pc, [ip, #1028]!	; 0x404

00000c48 <deactivate_conf@plt>:
 c48:	add	ip, pc, #0, 12
 c4c:	add	ip, ip, #73728	; 0x12000
 c50:	ldr	pc, [ip, #1020]!	; 0x3fc

00000c54 <get_oper_name@plt>:
 c54:	add	ip, pc, #0, 12
 c58:	add	ip, ip, #73728	; 0x12000
 c5c:	ldr	pc, [ip, #1012]!	; 0x3f4

00000c60 <rb_free_rb_dlink_node@plt>:
 c60:	add	ip, pc, #0, 12
 c64:	add	ip, ip, #73728	; 0x12000
 c68:	ldr	pc, [ip, #1004]!	; 0x3ec

00000c6c <cluster_generic@plt>:
 c6c:	add	ip, pc, #0, 12
 c70:	add	ip, ip, #73728	; 0x12000
 c74:	ldr	pc, [ip, #996]!	; 0x3e4

00000c78 <operhash_add@plt>:
 c78:	add	ip, pc, #0, 12
 c7c:	add	ip, ip, #73728	; 0x12000
 c80:	ldr	pc, [ip, #988]!	; 0x3dc

00000c84 <sendto_server@plt>:
 c84:	add	ip, pc, #0, 12
 c88:	add	ip, ip, #73728	; 0x12000
 c8c:	ldr	pc, [ip, #980]!	; 0x3d4

00000c90 <malloc@plt>:
 c90:	add	ip, pc, #0, 12
 c94:	add	ip, ip, #73728	; 0x12000
 c98:	ldr	pc, [ip, #972]!	; 0x3cc

00000c9c <__gmon_start__@plt>:
 c9c:	add	ip, pc, #0, 12
 ca0:	add	ip, ip, #73728	; 0x12000
 ca4:	ldr	pc, [ip, #964]!	; 0x3c4

00000ca8 <free_conf@plt>:
 ca8:	add	ip, pc, #0, 12
 cac:	add	ip, ip, #73728	; 0x12000
 cb0:	ldr	pc, [ip, #956]!	; 0x3bc

00000cb4 <rb_make_rb_dlink_node@plt>:
 cb4:	add	ip, pc, #0, 12
 cb8:	add	ip, ip, #73728	; 0x12000
 cbc:	ldr	pc, [ip, #948]!	; 0x3b4

00000cc0 <strlen@plt>:
 cc0:	add	ip, pc, #0, 12
 cc4:	add	ip, ip, #73728	; 0x12000
 cc8:	ldr	pc, [ip, #940]!	; 0x3ac

00000ccc <ilog@plt>:
 ccc:	add	ip, pc, #0, 12
 cd0:	add	ip, ip, #73728	; 0x12000
 cd4:	ldr	pc, [ip, #932]!	; 0x3a4

00000cd8 <match@plt>:
 cd8:	add	ip, pc, #0, 12
 cdc:	add	ip, ip, #73728	; 0x12000
 ce0:	ldr	pc, [ip, #924]!	; 0x39c

00000ce4 <del_from_resv_hash@plt>:
 ce4:	add	ip, pc, #0, 12
 ce8:	add	ip, ip, #73728	; 0x12000
 cec:	ldr	pc, [ip, #916]!	; 0x394

00000cf0 <find_nick_resv_mask@plt>:
 cf0:	add	ip, pc, #0, 12
 cf4:	add	ip, ip, #73728	; 0x12000
 cf8:	ldr	pc, [ip, #908]!	; 0x38c

00000cfc <valid_temp_time@plt>:
 cfc:	add	ip, pc, #0, 12
 d00:	add	ip, ip, #73728	; 0x12000
 d04:	ldr	pc, [ip, #900]!	; 0x384

00000d08 <sendto_one_notice@plt>:
 d08:	add	ip, pc, #0, 12
 d0c:	add	ip, ip, #73728	; 0x12000
 d10:	ldr	pc, [ip, #892]!	; 0x37c

00000d14 <bandb_del@plt>:
 d14:	add	ip, pc, #0, 12
 d18:	add	ip, ip, #73728	; 0x12000
 d1c:	ldr	pc, [ip, #884]!	; 0x374

00000d20 <valid_wild_card_simple@plt>:
 d20:	add	ip, pc, #0, 12
 d24:	add	ip, ip, #73728	; 0x12000
 d28:	ldr	pc, [ip, #876]!	; 0x36c

00000d2c <find_shared_conf@plt>:
 d2c:	add	ip, pc, #0, 12
 d30:	add	ip, ip, #73728	; 0x12000
 d34:	ldr	pc, [ip, #868]!	; 0x364

00000d38 <privilegeset_in_set@plt>:
 d38:	add	ip, pc, #0, 12
 d3c:	add	ip, ip, #73728	; 0x12000
 d40:	ldr	pc, [ip, #860]!	; 0x35c

00000d44 <hash_find_resv@plt>:
 d44:	add	ip, pc, #0, 12
 d48:	add	ip, ip, #73728	; 0x12000
 d4c:	ldr	pc, [ip, #852]!	; 0x354

00000d50 <irccmp@plt>:
 d50:	add	ip, pc, #0, 12
 d54:	add	ip, ip, #73728	; 0x12000
 d58:	ldr	pc, [ip, #844]!	; 0x34c

00000d5c <clean_resv_nick@plt>:
 d5c:	add	ip, pc, #0, 12
 d60:	add	ip, ip, #73728	; 0x12000
 d64:	ldr	pc, [ip, #836]!	; 0x344

00000d68 <__assert_fail@plt>:
 d68:	add	ip, pc, #0, 12
 d6c:	add	ip, ip, #73728	; 0x12000
 d70:	ldr	pc, [ip, #828]!	; 0x33c

Disassembly of section .text:

00000d74 <call_weak_fn>:
     d74:	ldr	r3, [pc, #20]	; d90 <call_weak_fn+0x1c>
     d78:	ldr	r2, [pc, #20]	; d94 <call_weak_fn+0x20>
     d7c:	add	r3, pc, r3
     d80:	ldr	r2, [r3, r2]
     d84:	cmp	r2, #0
     d88:	bxeq	lr
     d8c:	b	c9c <__gmon_start__@plt>
     d90:	.word	0x0001227c
     d94:	.word	0x000000cc

00000d98 <deregister_tm_clones>:
     d98:	ldr	r0, [pc, #44]	; dcc <deregister_tm_clones+0x34>
     d9c:	ldr	r3, [pc, #44]	; dd0 <deregister_tm_clones+0x38>
     da0:	add	r0, pc, r0
     da4:	add	r3, pc, r3
     da8:	cmp	r3, r0
     dac:	ldr	r3, [pc, #32]	; dd4 <deregister_tm_clones+0x3c>
     db0:	add	r3, pc, r3
     db4:	bxeq	lr
     db8:	ldr	r2, [pc, #24]	; dd8 <deregister_tm_clones+0x40>
     dbc:	ldr	r3, [r3, r2]
     dc0:	cmp	r3, #0
     dc4:	bxeq	lr
     dc8:	bx	r3
     dcc:	.word	0x00012400
     dd0:	.word	0x000123fc
     dd4:	.word	0x00012248
     dd8:	.word	0x000000b4

00000ddc <register_tm_clones>:
     ddc:	ldr	r0, [pc, #56]	; e1c <register_tm_clones+0x40>
     de0:	ldr	r3, [pc, #56]	; e20 <register_tm_clones+0x44>
     de4:	add	r0, pc, r0
     de8:	add	r3, pc, r3
     dec:	sub	r1, r3, r0
     df0:	ldr	r3, [pc, #44]	; e24 <register_tm_clones+0x48>
     df4:	asr	r1, r1, #2
     df8:	add	r3, pc, r3
     dfc:	add	r1, r1, r1, lsr #31
     e00:	asrs	r1, r1, #1
     e04:	bxeq	lr
     e08:	ldr	r2, [pc, #24]	; e28 <register_tm_clones+0x4c>
     e0c:	ldr	r3, [r3, r2]
     e10:	cmp	r3, #0
     e14:	bxeq	lr
     e18:	bx	r3
     e1c:	.word	0x000123bc
     e20:	.word	0x000123b8
     e24:	.word	0x00012200
     e28:	.word	0x000000d8

00000e2c <__do_global_dtors_aux>:
     e2c:	ldr	r3, [pc, #76]	; e80 <__do_global_dtors_aux+0x54>
     e30:	ldr	r2, [pc, #76]	; e84 <__do_global_dtors_aux+0x58>
     e34:	add	r3, pc, r3
     e38:	add	r2, pc, r2
     e3c:	ldrb	r3, [r3]
     e40:	cmp	r3, #0
     e44:	bxne	lr
     e48:	ldr	r3, [pc, #56]	; e88 <__do_global_dtors_aux+0x5c>
     e4c:	push	{r4, lr}
     e50:	ldr	r3, [r2, r3]
     e54:	cmp	r3, #0
     e58:	beq	e68 <__do_global_dtors_aux+0x3c>
     e5c:	ldr	r3, [pc, #40]	; e8c <__do_global_dtors_aux+0x60>
     e60:	ldr	r0, [pc, r3]
     e64:	bl	bc4 <__cxa_finalize@plt>
     e68:	bl	d98 <deregister_tm_clones>
     e6c:	ldr	r3, [pc, #28]	; e90 <__do_global_dtors_aux+0x64>
     e70:	mov	r2, #1
     e74:	add	r3, pc, r3
     e78:	strb	r2, [r3]
     e7c:	pop	{r4, pc}
     e80:	.word	0x0001236c
     e84:	.word	0x000121c0
     e88:	.word	0x000000b0
     e8c:	.word	0x00012280
     e90:	.word	0x0001232c

00000e94 <frame_dummy>:
     e94:	b	ddc <register_tm_clones>

00000e98 <propagate_resv.part.0>:
     e98:	strd	r4, [sp, #-28]!	; 0xffffffe4
     e9c:	mov	r5, r1
     ea0:	ldr	r4, [pc, #140]	; f34 <propagate_resv.part.0+0x9c>
     ea4:	strd	r6, [sp, #8]
     ea8:	mov	r7, r2
     eac:	mov	r6, r3
     eb0:	ldr	ip, [pc, #128]	; f38 <propagate_resv.part.0+0xa0>
     eb4:	mov	r3, #0
     eb8:	strd	r8, [sp, #16]
     ebc:	mov	r9, r0
     ec0:	ldr	r2, [pc, #116]	; f3c <propagate_resv.part.0+0xa4>
     ec4:	add	r4, pc, r4
     ec8:	str	lr, [sp, #24]
     ecc:	sub	sp, sp, #28
     ed0:	ldr	r8, [r4, ip]
     ed4:	str	r6, [sp, #12]
     ed8:	add	r2, pc, r2
     edc:	stm	sp, {r2, r5, r7}
     ee0:	ldr	r2, [r8]
     ee4:	bl	bb8 <sendto_match_servs@plt>
     ee8:	ldr	ip, [pc, #80]	; f40 <propagate_resv.part.0+0xa8>
     eec:	mov	lr, #0
     ef0:	mov	r0, r9
     ef4:	mov	r1, r5
     ef8:	ldr	r2, [pc, #68]	; f44 <propagate_resv.part.0+0xac>
     efc:	ldr	r3, [r8]
     f00:	ldr	ip, [r4, ip]
     f04:	add	r2, pc, r2
     f08:	stm	sp, {r2, r5, lr}
     f0c:	str	r7, [sp, #12]
     f10:	ldr	r2, [ip]
     f14:	str	r6, [sp, #16]
     f18:	bl	bb8 <sendto_match_servs@plt>
     f1c:	add	sp, sp, #28
     f20:	ldrd	r4, [sp]
     f24:	ldrd	r6, [sp, #8]
     f28:	ldrd	r8, [sp, #16]
     f2c:	add	sp, sp, #24
     f30:	pop	{pc}		; (ldr pc, [sp], #4)
     f34:	.word	0x00012134
     f38:	.word	0x000000c0
     f3c:	.word	0x000019b8
     f40:	.word	0x000000e0
     f44:	.word	0x0000199c

00000f48 <rb_dlinkFind.part.4>:
     f48:	ldr	r3, [pc, #32]	; f70 <rb_dlinkFind.part.4+0x28>
     f4c:	movw	r2, #311	; 0x137
     f50:	str	r4, [sp, #-8]!
     f54:	ldr	r1, [pc, #24]	; f74 <rb_dlinkFind.part.4+0x2c>
     f58:	str	lr, [sp, #4]
     f5c:	ldr	r0, [pc, #20]	; f78 <rb_dlinkFind.part.4+0x30>
     f60:	add	r3, pc, r3
     f64:	add	r1, pc, r1
     f68:	add	r0, pc, r0
     f6c:	bl	d68 <__assert_fail@plt>
     f70:	.word	0x000018cc
     f74:	.word	0x00001958
     f78:	.word	0x00001970

00000f7c <remove_resv>:
     f7c:	strd	r4, [sp, #-32]!	; 0xffffffe0
     f80:	strd	r6, [sp, #8]
     f84:	subs	r6, r1, #0
     f88:	ldr	r7, [pc, #1608]	; 15d8 <remove_resv+0x65c>
     f8c:	strd	r8, [sp, #16]
     f90:	mov	r8, r0
     f94:	mov	r9, r2
     f98:	str	sl, [sp, #24]
     f9c:	str	lr, [sp, #28]
     fa0:	sub	sp, sp, #24
     fa4:	add	r7, pc, r7
     fa8:	beq	fc4 <remove_resv+0x48>
     fac:	ldr	r3, [pc, #1576]	; 15dc <remove_resv+0x660>
     fb0:	ldrb	r2, [r6]
     fb4:	ldr	r3, [r7, r3]
     fb8:	ldr	r3, [r3, r2, lsl #2]
     fbc:	tst	r3, #512	; 0x200
     fc0:	bne	1294 <remove_resv+0x318>
     fc4:	ldr	r3, [pc, #1556]	; 15e0 <remove_resv+0x664>
     fc8:	ldr	sl, [r7, r3]
     fcc:	ldr	r4, [sl]
     fd0:	cmp	r4, #0
     fd4:	bne	fe8 <remove_resv+0x6c>
     fd8:	b	13d0 <remove_resv+0x454>
     fdc:	ldr	r4, [r4, #8]
     fe0:	cmp	r4, #0
     fe4:	beq	13d0 <remove_resv+0x454>
     fe8:	ldr	r5, [r4]
     fec:	mov	r1, r6
     ff0:	ldr	r0, [r5, #16]
     ff4:	bl	d50 <irccmp@plt>
     ff8:	cmp	r0, #0
     ffc:	bne	fdc <remove_resv+0x60>
    1000:	ldr	r3, [r5, #44]	; 0x2c
    1004:	cmp	r3, #0
    1008:	beq	1044 <remove_resv+0xc8>
    100c:	cmp	r9, #0
    1010:	beq	1484 <remove_resv+0x508>
    1014:	ldr	r3, [pc, #1480]	; 15e4 <remove_resv+0x668>
    1018:	ldr	r3, [r7, r3]
    101c:	ldr	r4, [r3]
    1020:	cmp	r4, #0
    1024:	bne	1164 <remove_resv+0x1e8>
    1028:	add	sp, sp, #24
    102c:	ldrd	r4, [sp]
    1030:	ldrd	r6, [sp, #8]
    1034:	ldrd	r8, [sp, #16]
    1038:	ldr	sl, [sp, #24]
    103c:	add	sp, sp, #28
    1040:	pop	{pc}		; (ldr pc, [sp], #4)
    1044:	cmp	r9, #0
    1048:	beq	108c <remove_resv+0x110>
    104c:	ldr	r3, [pc, #1428]	; 15e8 <remove_resv+0x66c>
    1050:	ldr	r3, [r7, r3]
    1054:	ldr	r3, [r3, #8]
    1058:	cmp	r3, #0
    105c:	beq	108c <remove_resv+0x110>
    1060:	ldr	r1, [pc, #1412]	; 15ec <remove_resv+0x670>
    1064:	mov	r2, #512	; 0x200
    1068:	mov	r0, r8
    106c:	ldr	r3, [pc, #1404]	; 15f0 <remove_resv+0x674>
    1070:	ldr	ip, [r7, r1]
    1074:	ldr	r1, [pc, #1400]	; 15f4 <remove_resv+0x678>
    1078:	add	r3, pc, r3
    107c:	stm	sp, {r3, r6}
    1080:	ldr	r3, [ip]
    1084:	add	r1, pc, r1
    1088:	bl	c6c <cluster_generic@plt>
    108c:	ldr	r1, [pc, #1380]	; 15f8 <remove_resv+0x67c>
    1090:	mov	r2, r6
    1094:	mov	r0, r8
    1098:	add	r1, pc, r1
    109c:	bl	d08 <sendto_one_notice@plt>
    10a0:	mov	r0, r8
    10a4:	bl	c54 <get_oper_name@plt>
    10a8:	ldr	r1, [pc, #1356]	; 15fc <remove_resv+0x680>
    10ac:	mov	r2, r0
    10b0:	mov	r3, r6
    10b4:	mov	r0, #7
    10b8:	add	r1, pc, r1
    10bc:	bl	ccc <ilog@plt>
    10c0:	ldr	r7, [r5, #36]	; 0x24
    10c4:	cmp	r7, #0
    10c8:	beq	144c <remove_resv+0x4d0>
    10cc:	mov	r0, r8
    10d0:	bl	c54 <get_oper_name@plt>
    10d4:	ldr	r2, [pc, #1316]	; 1600 <remove_resv+0x684>
    10d8:	mov	r3, r0
    10dc:	mov	r1, #0
    10e0:	mov	r0, #256	; 0x100
    10e4:	str	r6, [sp]
    10e8:	add	r2, pc, r2
    10ec:	bl	c24 <sendto_realops_snomask@plt>
    10f0:	ldr	r3, [r4, #4]
    10f4:	mov	r0, r4
    10f8:	ldr	r2, [r4, #8]
    10fc:	cmp	r2, #0
    1100:	strne	r3, [r2, #4]
    1104:	ldrne	r3, [r4, #4]
    1108:	streq	r3, [sl, #4]
    110c:	cmp	r3, #0
    1110:	strne	r2, [r3, #8]
    1114:	ldr	r3, [sl, #8]
    1118:	streq	r2, [sl]
    111c:	mov	r2, #0
    1120:	str	r2, [r4, #4]
    1124:	str	r2, [r4, #8]
    1128:	sub	r3, r3, #1
    112c:	str	r3, [sl, #8]
    1130:	bl	c60 <rb_free_rb_dlink_node@plt>
    1134:	mov	r0, r5
    1138:	add	sp, sp, #24
    113c:	ldrd	r4, [sp]
    1140:	ldrd	r6, [sp, #8]
    1144:	ldrd	r8, [sp, #16]
    1148:	ldr	sl, [sp, #24]
    114c:	ldr	lr, [sp, #28]
    1150:	add	sp, sp, #32
    1154:	b	ca8 <free_conf@plt>
    1158:	ldr	r4, [r4, #8]
    115c:	cmp	r4, #0
    1160:	beq	1028 <remove_resv+0xac>
    1164:	ldr	r3, [r4]
    1168:	cmp	r5, r3
    116c:	bne	1158 <remove_resv+0x1dc>
    1170:	ldr	r1, [pc, #1164]	; 1604 <remove_resv+0x688>
    1174:	mov	r2, r6
    1178:	mov	r0, r8
    117c:	add	r1, pc, r1
    1180:	bl	d08 <sendto_one_notice@plt>
    1184:	mov	r0, r8
    1188:	bl	c54 <get_oper_name@plt>
    118c:	ldr	r2, [pc, #1140]	; 1608 <remove_resv+0x68c>
    1190:	mov	r3, r0
    1194:	mov	r1, #0
    1198:	mov	r0, #256	; 0x100
    119c:	str	r6, [sp]
    11a0:	add	r2, pc, r2
    11a4:	bl	c24 <sendto_realops_snomask@plt>
    11a8:	mov	r0, r8
    11ac:	bl	c54 <get_oper_name@plt>
    11b0:	ldr	r1, [pc, #1108]	; 160c <remove_resv+0x690>
    11b4:	mov	r3, r6
    11b8:	mov	r2, r0
    11bc:	mov	r0, #7
    11c0:	add	r1, pc, r1
    11c4:	bl	ccc <ilog@plt>
    11c8:	bl	ba0 <rb_current_time@plt>
    11cc:	ldr	r3, [r5, #40]	; 0x28
    11d0:	mov	r6, r0
    11d4:	cmp	r3, r0
    11d8:	movlt	r3, r0
    11dc:	addge	r3, r3, #1
    11e0:	str	r3, [r5, #36]	; 0x24
    11e4:	str	r3, [r5, #40]	; 0x28
    11e8:	ldr	r0, [r5, #12]
    11ec:	bl	c18 <operhash_delete@plt>
    11f0:	mov	r0, r8
    11f4:	add	r8, r8, #396	; 0x18c
    11f8:	bl	c54 <get_oper_name@plt>
    11fc:	bl	c78 <operhash_add@plt>
    1200:	ldr	ip, [r5, #4]
    1204:	mov	r3, #0
    1208:	str	r0, [r5, #12]
    120c:	ldr	r1, [pc, #1020]	; 1610 <remove_resv+0x694>
    1210:	ldr	r2, [pc, #1020]	; 1614 <remove_resv+0x698>
    1214:	orr	ip, ip, #8912896	; 0x880000
    1218:	ldr	r0, [r5, #40]	; 0x28
    121c:	str	ip, [r5, #4]
    1220:	ldr	ip, [r5, #44]	; 0x2c
    1224:	ldr	r1, [r7, r1]
    1228:	ldr	r2, [r7, r2]
    122c:	sub	ip, ip, r0
    1230:	str	r0, [sp, #12]
    1234:	mov	r0, r3
    1238:	str	r3, [sp, #16]
    123c:	ldr	r7, [r1]
    1240:	mov	r1, r3
    1244:	ldr	r2, [r2]
    1248:	str	ip, [sp, #20]
    124c:	ldr	ip, [pc, #964]	; 1618 <remove_resv+0x69c>
    1250:	add	ip, pc, ip
    1254:	ldr	lr, [r5, #16]
    1258:	orr	r2, r7, r2
    125c:	str	ip, [sp]
    1260:	stmib	sp, {r8, lr}
    1264:	bl	c84 <sendto_server@plt>
    1268:	mov	r2, r6
    126c:	mov	r1, r4
    1270:	mov	r0, r5
    1274:	add	sp, sp, #24
    1278:	ldrd	r4, [sp]
    127c:	ldrd	r6, [sp, #8]
    1280:	ldrd	r8, [sp, #16]
    1284:	ldr	sl, [sp, #24]
    1288:	ldr	lr, [sp, #28]
    128c:	add	sp, sp, #32
    1290:	b	c48 <deactivate_conf@plt>
    1294:	mov	r0, r6
    1298:	bl	d44 <hash_find_resv@plt>
    129c:	subs	r5, r0, #0
    12a0:	beq	158c <remove_resv+0x610>
    12a4:	ldr	r3, [r5, #44]	; 0x2c
    12a8:	cmp	r3, #0
    12ac:	beq	1498 <remove_resv+0x51c>
    12b0:	cmp	r9, #0
    12b4:	beq	1484 <remove_resv+0x508>
    12b8:	ldr	r3, [pc, #804]	; 15e4 <remove_resv+0x668>
    12bc:	ldr	r3, [r7, r3]
    12c0:	ldr	r4, [r3]
    12c4:	cmp	r4, #0
    12c8:	bne	12dc <remove_resv+0x360>
    12cc:	b	1028 <remove_resv+0xac>
    12d0:	ldr	r4, [r4, #8]
    12d4:	cmp	r4, #0
    12d8:	beq	1028 <remove_resv+0xac>
    12dc:	ldr	r3, [r4]
    12e0:	cmp	r5, r3
    12e4:	bne	12d0 <remove_resv+0x354>
    12e8:	ldr	r1, [pc, #812]	; 161c <remove_resv+0x6a0>
    12ec:	mov	r2, r6
    12f0:	mov	r0, r8
    12f4:	add	r1, pc, r1
    12f8:	bl	d08 <sendto_one_notice@plt>
    12fc:	mov	r0, r8
    1300:	bl	c54 <get_oper_name@plt>
    1304:	ldr	r2, [pc, #788]	; 1620 <remove_resv+0x6a4>
    1308:	mov	r3, r0
    130c:	mov	r1, #0
    1310:	mov	r0, #256	; 0x100
    1314:	str	r6, [sp]
    1318:	add	r2, pc, r2
    131c:	bl	c24 <sendto_realops_snomask@plt>
    1320:	mov	r0, r8
    1324:	bl	c54 <get_oper_name@plt>
    1328:	ldr	r1, [pc, #756]	; 1624 <remove_resv+0x6a8>
    132c:	mov	r3, r6
    1330:	mov	r2, r0
    1334:	mov	r0, #7
    1338:	add	r1, pc, r1
    133c:	bl	ccc <ilog@plt>
    1340:	bl	ba0 <rb_current_time@plt>
    1344:	ldr	r3, [r5, #40]	; 0x28
    1348:	mov	r6, r0
    134c:	cmp	r3, r0
    1350:	movlt	r3, r0
    1354:	addge	r3, r3, #1
    1358:	str	r3, [r5, #36]	; 0x24
    135c:	str	r3, [r5, #40]	; 0x28
    1360:	ldr	r0, [r5, #12]
    1364:	bl	c18 <operhash_delete@plt>
    1368:	mov	r0, r8
    136c:	add	r8, r8, #396	; 0x18c
    1370:	bl	c54 <get_oper_name@plt>
    1374:	bl	c78 <operhash_add@plt>
    1378:	ldr	ip, [r5, #4]
    137c:	mov	r3, #0
    1380:	str	r0, [r5, #12]
    1384:	ldr	r1, [pc, #644]	; 1610 <remove_resv+0x694>
    1388:	ldr	r2, [pc, #644]	; 1614 <remove_resv+0x698>
    138c:	orr	ip, ip, #8912896	; 0x880000
    1390:	ldr	r0, [r5, #40]	; 0x28
    1394:	str	ip, [r5, #4]
    1398:	ldr	ip, [r5, #44]	; 0x2c
    139c:	ldr	r1, [r7, r1]
    13a0:	ldr	r2, [r7, r2]
    13a4:	sub	ip, ip, r0
    13a8:	str	r0, [sp, #12]
    13ac:	mov	r0, r3
    13b0:	str	r3, [sp, #16]
    13b4:	ldr	r7, [r1]
    13b8:	mov	r1, r3
    13bc:	ldr	r2, [r2]
    13c0:	str	ip, [sp, #20]
    13c4:	ldr	ip, [pc, #604]	; 1628 <remove_resv+0x6ac>
    13c8:	add	ip, pc, ip
    13cc:	b	1254 <remove_resv+0x2d8>
    13d0:	cmp	r9, #0
    13d4:	bne	1408 <remove_resv+0x48c>
    13d8:	ldr	r1, [pc, #588]	; 162c <remove_resv+0x6b0>
    13dc:	mov	r2, r6
    13e0:	mov	r0, r8
    13e4:	add	r1, pc, r1
    13e8:	add	sp, sp, #24
    13ec:	ldrd	r4, [sp]
    13f0:	ldrd	r6, [sp, #8]
    13f4:	ldrd	r8, [sp, #16]
    13f8:	ldr	sl, [sp, #24]
    13fc:	ldr	lr, [sp, #28]
    1400:	add	sp, sp, #32
    1404:	b	d08 <sendto_one_notice@plt>
    1408:	ldr	r3, [pc, #472]	; 15e8 <remove_resv+0x66c>
    140c:	ldr	r3, [r7, r3]
    1410:	ldr	r3, [r3, #8]
    1414:	cmp	r3, #0
    1418:	beq	13d8 <remove_resv+0x45c>
    141c:	ldr	r1, [pc, #456]	; 15ec <remove_resv+0x670>
    1420:	mov	r2, #512	; 0x200
    1424:	mov	r0, r8
    1428:	ldr	r3, [pc, #512]	; 1630 <remove_resv+0x6b4>
    142c:	ldr	ip, [r7, r1]
    1430:	ldr	r1, [pc, #508]	; 1634 <remove_resv+0x6b8>
    1434:	add	r3, pc, r3
    1438:	stm	sp, {r3, r6}
    143c:	ldr	r3, [ip]
    1440:	add	r1, pc, r1
    1444:	bl	c6c <cluster_generic@plt>
    1448:	b	13d8 <remove_resv+0x45c>
    144c:	mov	r2, r7
    1450:	mov	r0, #3
    1454:	ldr	r1, [r5, #16]
    1458:	bl	d14 <bandb_del@plt>
    145c:	mov	r0, r8
    1460:	bl	c54 <get_oper_name@plt>
    1464:	ldr	r2, [pc, #460]	; 1638 <remove_resv+0x6bc>
    1468:	mov	r3, r0
    146c:	mov	r1, r7
    1470:	mov	r0, #256	; 0x100
    1474:	str	r6, [sp]
    1478:	add	r2, pc, r2
    147c:	bl	c24 <sendto_realops_snomask@plt>
    1480:	b	10f0 <remove_resv+0x174>
    1484:	ldr	r1, [pc, #432]	; 163c <remove_resv+0x6c0>
    1488:	mov	r2, r6
    148c:	mov	r0, r8
    1490:	add	r1, pc, r1
    1494:	b	13e8 <remove_resv+0x46c>
    1498:	cmp	r9, #0
    149c:	beq	14e0 <remove_resv+0x564>
    14a0:	ldr	r3, [pc, #320]	; 15e8 <remove_resv+0x66c>
    14a4:	ldr	r3, [r7, r3]
    14a8:	ldr	r3, [r3, #8]
    14ac:	cmp	r3, #0
    14b0:	beq	14e0 <remove_resv+0x564>
    14b4:	ldr	r1, [pc, #304]	; 15ec <remove_resv+0x670>
    14b8:	mov	r2, #512	; 0x200
    14bc:	mov	r0, r8
    14c0:	ldr	r3, [pc, #376]	; 1640 <remove_resv+0x6c4>
    14c4:	ldr	ip, [r7, r1]
    14c8:	ldr	r1, [pc, #372]	; 1644 <remove_resv+0x6c8>
    14cc:	add	r3, pc, r3
    14d0:	stm	sp, {r3, r6}
    14d4:	ldr	r3, [ip]
    14d8:	add	r1, pc, r1
    14dc:	bl	c6c <cluster_generic@plt>
    14e0:	ldr	r1, [pc, #352]	; 1648 <remove_resv+0x6cc>
    14e4:	mov	r2, r6
    14e8:	mov	r0, r8
    14ec:	add	r1, pc, r1
    14f0:	bl	d08 <sendto_one_notice@plt>
    14f4:	mov	r0, r8
    14f8:	bl	c54 <get_oper_name@plt>
    14fc:	ldr	r1, [pc, #328]	; 164c <remove_resv+0x6d0>
    1500:	mov	r2, r0
    1504:	mov	r3, r6
    1508:	mov	r0, #7
    150c:	add	r1, pc, r1
    1510:	bl	ccc <ilog@plt>
    1514:	ldr	r4, [r5, #36]	; 0x24
    1518:	cmp	r4, #0
    151c:	beq	1554 <remove_resv+0x5d8>
    1520:	mov	r0, r8
    1524:	bl	c54 <get_oper_name@plt>
    1528:	ldr	r2, [pc, #288]	; 1650 <remove_resv+0x6d4>
    152c:	mov	r3, r0
    1530:	mov	r1, #0
    1534:	mov	r0, #256	; 0x100
    1538:	str	r6, [sp]
    153c:	add	r2, pc, r2
    1540:	bl	c24 <sendto_realops_snomask@plt>
    1544:	mov	r0, r6
    1548:	mov	r1, r5
    154c:	bl	ce4 <del_from_resv_hash@plt>
    1550:	b	1134 <remove_resv+0x1b8>
    1554:	mov	r2, r4
    1558:	mov	r0, #3
    155c:	ldr	r1, [r5, #16]
    1560:	bl	d14 <bandb_del@plt>
    1564:	mov	r0, r8
    1568:	bl	c54 <get_oper_name@plt>
    156c:	ldr	r2, [pc, #224]	; 1654 <remove_resv+0x6d8>
    1570:	mov	r3, r0
    1574:	mov	r1, r4
    1578:	mov	r0, #256	; 0x100
    157c:	str	r6, [sp]
    1580:	add	r2, pc, r2
    1584:	bl	c24 <sendto_realops_snomask@plt>
    1588:	b	1544 <remove_resv+0x5c8>
    158c:	cmp	r9, #0
    1590:	beq	13d8 <remove_resv+0x45c>
    1594:	ldr	r3, [pc, #76]	; 15e8 <remove_resv+0x66c>
    1598:	ldr	r3, [r7, r3]
    159c:	ldr	r3, [r3, #8]
    15a0:	cmp	r3, #0
    15a4:	beq	13d8 <remove_resv+0x45c>
    15a8:	ldr	r1, [pc, #60]	; 15ec <remove_resv+0x670>
    15ac:	mov	r2, #512	; 0x200
    15b0:	mov	r0, r8
    15b4:	ldr	r3, [pc, #156]	; 1658 <remove_resv+0x6dc>
    15b8:	ldr	ip, [r7, r1]
    15bc:	ldr	r1, [pc, #152]	; 165c <remove_resv+0x6e0>
    15c0:	add	r3, pc, r3
    15c4:	stm	sp, {r3, r6}
    15c8:	ldr	r3, [ip]
    15cc:	add	r1, pc, r1
    15d0:	bl	c6c <cluster_generic@plt>
    15d4:	b	13d8 <remove_resv+0x45c>
    15d8:	.word	0x00012054
    15dc:	.word	0x000000d4
    15e0:	.word	0x000000b8
    15e4:	.word	0x000000bc
    15e8:	.word	0x000000d0
    15ec:	.word	0x000000c0
    15f0:	.word	0x00001a08
    15f4:	.word	0x00001864
    15f8:	.word	0x000018bc
    15fc:	.word	0x000018b8
    1600:	.word	0x000018b8
    1604:	.word	0x000017d8
    1608:	.word	0x0000182c
    160c:	.word	0x000017b0
    1610:	.word	0x000000c4
    1614:	.word	0x000000c8
    1618:	.word	0x000016e4
    161c:	.word	0x00001660
    1620:	.word	0x000016b4
    1624:	.word	0x00001638
    1628:	.word	0x0000156c
    162c:	.word	0x0000150c
    1630:	.word	0x0000164c
    1634:	.word	0x000014a8
    1638:	.word	0x00001504
    163c:	.word	0x00001470
    1640:	.word	0x000015b4
    1644:	.word	0x00001410
    1648:	.word	0x00001468
    164c:	.word	0x00001464
    1650:	.word	0x00001464
    1654:	.word	0x000013fc
    1658:	.word	0x000014c0
    165c:	.word	0x0000131c

00001660 <mo_unresv>:
    1660:	strd	r4, [sp, #-20]!	; 0xffffffec
    1664:	mov	r4, r2
    1668:	ldr	r2, [r2, #24]
    166c:	strd	r6, [sp, #8]
    1670:	ldr	r5, [pc, #364]	; 17e4 <mo_unresv+0x184>
    1674:	str	lr, [sp, #16]
    1678:	sub	sp, sp, #12
    167c:	ldr	r6, [sp, #32]
    1680:	cmp	r2, #0
    1684:	add	r5, pc, r5
    1688:	beq	16e0 <mo_unresv+0x80>
    168c:	ldr	r0, [r2, #36]	; 0x24
    1690:	cmp	r0, #0
    1694:	beq	16e0 <mo_unresv+0x80>
    1698:	ldr	r1, [pc, #328]	; 17e8 <mo_unresv+0x188>
    169c:	mov	r7, r3
    16a0:	add	r1, pc, r1
    16a4:	bl	d38 <privilegeset_in_set@plt>
    16a8:	cmp	r0, #0
    16ac:	beq	16e0 <mo_unresv+0x80>
    16b0:	cmp	r7, #4
    16b4:	beq	1720 <mo_unresv+0xc0>
    16b8:	mov	r7, #1
    16bc:	ldr	r1, [r6, #4]
    16c0:	mov	r2, r7
    16c4:	mov	r0, r4
    16c8:	add	sp, sp, #12
    16cc:	ldrd	r4, [sp]
    16d0:	ldrd	r6, [sp, #8]
    16d4:	ldr	lr, [sp, #16]
    16d8:	add	sp, sp, #20
    16dc:	b	f7c <remove_resv>
    16e0:	ldr	ip, [pc, #260]	; 17ec <mo_unresv+0x18c>
    16e4:	add	r3, r4, #88	; 0x58
    16e8:	mov	r0, r4
    16ec:	ldr	r1, [pc, #252]	; 17f0 <mo_unresv+0x190>
    16f0:	ldr	r2, [pc, #252]	; 17f4 <mo_unresv+0x194>
    16f4:	add	ip, pc, ip
    16f8:	add	r1, pc, r1
    16fc:	ldr	r2, [r5, r2]
    1700:	str	ip, [sp, #32]
    1704:	add	r2, r2, #88	; 0x58
    1708:	add	sp, sp, #12
    170c:	ldrd	r4, [sp]
    1710:	ldrd	r6, [sp, #8]
    1714:	ldr	lr, [sp, #16]
    1718:	add	sp, sp, #20
    171c:	b	bdc <sendto_one@plt>
    1720:	ldr	r1, [pc, #208]	; 17f8 <mo_unresv+0x198>
    1724:	ldr	r0, [r6, #8]
    1728:	add	r1, pc, r1
    172c:	bl	d50 <irccmp@plt>
    1730:	subs	r7, r0, #0
    1734:	bne	16b8 <mo_unresv+0x58>
    1738:	ldr	r3, [r4, #24]
    173c:	cmp	r3, #0
    1740:	beq	17c4 <mo_unresv+0x164>
    1744:	ldr	r0, [r3, #36]	; 0x24
    1748:	cmp	r0, #0
    174c:	beq	17c4 <mo_unresv+0x164>
    1750:	ldr	r1, [pc, #164]	; 17fc <mo_unresv+0x19c>
    1754:	add	r1, pc, r1
    1758:	bl	d38 <privilegeset_in_set@plt>
    175c:	cmp	r0, #0
    1760:	beq	17c4 <mo_unresv+0x164>
    1764:	ldr	r2, [pc, #148]	; 1800 <mo_unresv+0x1a0>
    1768:	mov	r0, r4
    176c:	ldr	r3, [pc, #144]	; 1804 <mo_unresv+0x1a4>
    1770:	ldr	r1, [pc, #144]	; 1808 <mo_unresv+0x1a8>
    1774:	ldr	ip, [r5, r2]
    1778:	add	r3, pc, r3
    177c:	ldr	lr, [r6, #4]
    1780:	add	r1, pc, r1
    1784:	stm	sp, {r3, lr}
    1788:	ldr	r3, [ip]
    178c:	ldr	r2, [r6, #12]
    1790:	bl	b88 <propagate_generic@plt>
    1794:	ldr	r3, [pc, #88]	; 17f4 <mo_unresv+0x194>
    1798:	ldr	r0, [r6, #12]
    179c:	ldr	r1, [r5, r3]
    17a0:	add	r1, r1, #88	; 0x58
    17a4:	bl	cd8 <match@plt>
    17a8:	cmp	r0, #0
    17ac:	bne	16bc <mo_unresv+0x5c>
    17b0:	add	sp, sp, #12
    17b4:	ldrd	r4, [sp]
    17b8:	ldrd	r6, [sp, #8]
    17bc:	add	sp, sp, #16
    17c0:	pop	{pc}		; (ldr pc, [sp], #4)
    17c4:	ldr	ip, [pc, #64]	; 180c <mo_unresv+0x1ac>
    17c8:	add	r3, r4, #88	; 0x58
    17cc:	mov	r0, r4
    17d0:	ldr	r1, [pc, #56]	; 1810 <mo_unresv+0x1b0>
    17d4:	ldr	r2, [pc, #24]	; 17f4 <mo_unresv+0x194>
    17d8:	add	ip, pc, ip
    17dc:	add	r1, pc, r1
    17e0:	b	16fc <mo_unresv+0x9c>
    17e4:	.word	0x00011974
    17e8:	.word	0x00001388
    17ec:	.word	0x0000132c
    17f0:	.word	0x00001300
    17f4:	.word	0x000000dc
    17f8:	.word	0x0000130c
    17fc:	.word	0x000012f0
    1800:	.word	0x000000c0
    1804:	.word	0x00001308
    1808:	.word	0x00001168
    180c:	.word	0x00001260
    1810:	.word	0x0000121c

00001814 <handle_remote_unresv>:
    1814:	ldr	r2, [r0, #32]
    1818:	mov	r3, #512	; 0x200
    181c:	strd	r4, [sp, #-16]!
    1820:	mov	r4, r0
    1824:	mov	r5, r1
    1828:	add	r1, r0, #163	; 0xa3
    182c:	add	r0, r0, #152	; 0x98
    1830:	str	r6, [sp, #8]
    1834:	str	lr, [sp, #12]
    1838:	add	r2, r2, #88	; 0x58
    183c:	bl	d2c <find_shared_conf@plt>
    1840:	cmp	r0, #0
    1844:	bne	1858 <handle_remote_unresv+0x44>
    1848:	ldrd	r4, [sp]
    184c:	ldr	r6, [sp, #8]
    1850:	add	sp, sp, #12
    1854:	pop	{pc}		; (ldr pc, [sp], #4)
    1858:	mov	r1, r5
    185c:	mov	r0, r4
    1860:	ldrd	r4, [sp]
    1864:	mov	r2, #0
    1868:	ldr	r6, [sp, #8]
    186c:	ldr	lr, [sp, #12]
    1870:	add	sp, sp, #16
    1874:	b	f7c <remove_resv>

00001878 <me_unresv>:
    1878:	ldrh	r3, [r2, #80]	; 0x50
    187c:	ldr	r1, [sp]
    1880:	cmp	r3, #64	; 0x40
    1884:	bne	18a0 <me_unresv+0x28>
    1888:	ldr	r3, [r2, #24]
    188c:	cmp	r3, #0
    1890:	beq	18a0 <me_unresv+0x28>
    1894:	mov	r0, r2
    1898:	ldr	r1, [r1, #4]
    189c:	b	1814 <handle_remote_unresv>
    18a0:	bx	lr

000018a4 <ms_unresv>:
    18a4:	strd	r4, [sp, #-16]!
    18a8:	mov	r0, r2
    18ac:	ldr	r4, [pc, #172]	; 1960 <ms_unresv+0xbc>
    18b0:	str	r6, [sp, #8]
    18b4:	mov	r6, r2
    18b8:	str	lr, [sp, #12]
    18bc:	sub	sp, sp, #8
    18c0:	ldr	r2, [pc, #156]	; 1964 <ms_unresv+0xc0>
    18c4:	ldr	r5, [sp, #24]
    18c8:	add	r4, pc, r4
    18cc:	ldr	r3, [pc, #148]	; 1968 <ms_unresv+0xc4>
    18d0:	ldr	r1, [pc, #148]	; 196c <ms_unresv+0xc8>
    18d4:	ldr	ip, [r4, r2]
    18d8:	add	r3, pc, r3
    18dc:	ldr	r2, [r5, #8]
    18e0:	add	r1, pc, r1
    18e4:	str	r3, [sp]
    18e8:	ldr	r3, [ip]
    18ec:	str	r2, [sp, #4]
    18f0:	ldr	r2, [r5, #4]
    18f4:	bl	b88 <propagate_generic@plt>
    18f8:	ldr	r3, [pc, #112]	; 1970 <ms_unresv+0xcc>
    18fc:	ldr	r0, [r5, #4]
    1900:	ldr	r1, [r4, r3]
    1904:	add	r1, r1, #88	; 0x58
    1908:	bl	cd8 <match@plt>
    190c:	cmp	r0, #0
    1910:	beq	194c <ms_unresv+0xa8>
    1914:	ldrh	r3, [r6, #80]	; 0x50
    1918:	cmp	r3, #64	; 0x40
    191c:	bne	194c <ms_unresv+0xa8>
    1920:	ldr	r3, [r6, #24]
    1924:	cmp	r3, #0
    1928:	beq	194c <ms_unresv+0xa8>
    192c:	ldr	r1, [r5, #8]
    1930:	mov	r0, r6
    1934:	add	sp, sp, #8
    1938:	ldrd	r4, [sp]
    193c:	ldr	r6, [sp, #8]
    1940:	ldr	lr, [sp, #12]
    1944:	add	sp, sp, #16
    1948:	b	1814 <handle_remote_unresv>
    194c:	add	sp, sp, #8
    1950:	ldrd	r4, [sp]
    1954:	ldr	r6, [sp, #8]
    1958:	add	sp, sp, #12
    195c:	pop	{pc}		; (ldr pc, [sp], #4)
    1960:	.word	0x00011730
    1964:	.word	0x000000c0
    1968:	.word	0x000011a8
    196c:	.word	0x00001008
    1970:	.word	0x000000dc

00001974 <parse_resv>:
    1974:	strd	r4, [sp, #-36]!	; 0xffffffdc
    1978:	mov	r4, r0
    197c:	mov	r5, r1
    1980:	strd	r6, [sp, #8]
    1984:	mov	r7, r3
    1988:	strd	r8, [sp, #16]
    198c:	mov	r8, r2
    1990:	ldr	r2, [r0, #64]	; 0x40
    1994:	strd	sl, [sp, #24]
    1998:	mov	fp, #0
    199c:	ldr	r6, [pc, #2156]	; 2210 <parse_resv+0x89c>
    19a0:	str	lr, [sp, #32]
    19a4:	sub	sp, sp, #44	; 0x2c
    19a8:	ldr	r9, [sp, #80]	; 0x50
    19ac:	and	sl, r2, #8192	; 0x2000
    19b0:	orrs	r3, sl, fp
    19b4:	add	r6, pc, r6
    19b8:	beq	19c8 <parse_resv+0x54>
    19bc:	ldrh	r3, [r0, #80]	; 0x50
    19c0:	cmp	r3, #64	; 0x40
    19c4:	beq	19f0 <parse_resv+0x7c>
    19c8:	ldr	r2, [r4, #32]
    19cc:	cmp	r7, #0
    19d0:	add	r1, r4, #163	; 0xa3
    19d4:	movgt	r3, #128	; 0x80
    19d8:	movle	r3, #256	; 0x100
    19dc:	add	r0, r4, #152	; 0x98
    19e0:	add	r2, r2, #88	; 0x58
    19e4:	bl	d2c <find_shared_conf@plt>
    19e8:	cmp	r0, #0
    19ec:	beq	1a64 <parse_resv+0xf0>
    19f0:	cmp	r5, #0
    19f4:	beq	1a10 <parse_resv+0x9c>
    19f8:	ldr	r3, [pc, #2068]	; 2214 <parse_resv+0x8a0>
    19fc:	ldrb	r2, [r5]
    1a00:	ldr	r3, [r6, r3]
    1a04:	ldr	r3, [r3, r2, lsl #2]
    1a08:	tst	r3, #512	; 0x200
    1a0c:	bne	1a80 <parse_resv+0x10c>
    1a10:	mov	r0, r5
    1a14:	bl	d5c <clean_resv_nick@plt>
    1a18:	cmp	r0, #0
    1a1c:	beq	1c08 <parse_resv+0x294>
    1a20:	mov	r0, r5
    1a24:	bl	cc0 <strlen@plt>
    1a28:	cmp	r0, #64	; 0x40
    1a2c:	bhi	1c54 <parse_resv+0x2e0>
    1a30:	mov	r0, r5
    1a34:	bl	d20 <valid_wild_card_simple@plt>
    1a38:	cmp	r0, #0
    1a3c:	beq	1c38 <parse_resv+0x2c4>
    1a40:	mov	r0, r5
    1a44:	bl	cf0 <find_nick_resv_mask@plt>
    1a48:	subs	fp, r0, #0
    1a4c:	beq	1c7c <parse_resv+0x308>
    1a50:	ldr	r1, [pc, #1984]	; 2218 <parse_resv+0x8a4>
    1a54:	mov	r2, r5
    1a58:	mov	r0, r4
    1a5c:	add	r1, pc, r1
    1a60:	b	1c18 <parse_resv+0x2a4>
    1a64:	add	sp, sp, #44	; 0x2c
    1a68:	ldrd	r4, [sp]
    1a6c:	ldrd	r6, [sp, #8]
    1a70:	ldrd	r8, [sp, #16]
    1a74:	ldrd	sl, [sp, #24]
    1a78:	add	sp, sp, #32
    1a7c:	pop	{pc}		; (ldr pc, [sp], #4)
    1a80:	mov	r0, r5
    1a84:	bl	d44 <hash_find_resv@plt>
    1a88:	subs	fp, r0, #0
    1a8c:	bne	1c68 <parse_resv+0x2f4>
    1a90:	mov	r0, r5
    1a94:	bl	cc0 <strlen@plt>
    1a98:	cmp	r0, #200	; 0xc8
    1a9c:	bhi	1c54 <parse_resv+0x2e0>
    1aa0:	bl	b94 <make_conf@plt>
    1aa4:	mov	r3, #256	; 0x100
    1aa8:	mov	sl, r0
    1aac:	str	r3, [r0]
    1ab0:	str	fp, [r0, #32]
    1ab4:	bl	ba0 <rb_current_time@plt>
    1ab8:	str	r0, [sl, #40]	; 0x28
    1abc:	mov	r0, r5
    1ac0:	bl	cc0 <strlen@plt>
    1ac4:	add	r2, r0, #1
    1ac8:	mov	r0, r2
    1acc:	str	r2, [sp, #32]
    1ad0:	bl	c90 <malloc@plt>
    1ad4:	subs	r3, r0, #0
    1ad8:	ldr	r2, [sp, #32]
    1adc:	beq	20b0 <parse_resv+0x73c>
    1ae0:	mov	r1, r5
    1ae4:	str	r3, [sp, #32]
    1ae8:	bl	bf4 <memcpy@plt>
    1aec:	ldr	r3, [sp, #32]
    1af0:	mov	r0, r8
    1af4:	str	r3, [sl, #16]
    1af8:	bl	cc0 <strlen@plt>
    1afc:	add	r2, r0, #1
    1b00:	mov	r0, r2
    1b04:	str	r2, [sp, #36]	; 0x24
    1b08:	bl	c90 <malloc@plt>
    1b0c:	subs	r3, r0, #0
    1b10:	str	r3, [sp, #32]
    1b14:	beq	20b0 <parse_resv+0x73c>
    1b18:	mov	r1, r8
    1b1c:	ldr	r2, [sp, #36]	; 0x24
    1b20:	bl	bf4 <memcpy@plt>
    1b24:	ldr	r3, [sp, #32]
    1b28:	mov	r0, r4
    1b2c:	str	r3, [sl, #20]
    1b30:	bl	c54 <get_oper_name@plt>
    1b34:	bl	c78 <operhash_add@plt>
    1b38:	cmp	r9, #0
    1b3c:	str	r0, [sl, #12]
    1b40:	bne	1e20 <parse_resv+0x4ac>
    1b44:	cmp	r7, #0
    1b48:	ble	20b4 <parse_resv+0x740>
    1b4c:	bl	ba0 <rb_current_time@plt>
    1b50:	add	r3, r0, r7
    1b54:	mov	r0, r4
    1b58:	asr	r6, r7, #31
    1b5c:	str	r3, [sl, #36]	; 0x24
    1b60:	bl	c54 <get_oper_name@plt>
    1b64:	movw	r2, #34953	; 0x8889
    1b68:	movt	r2, #34952	; 0x8888
    1b6c:	stmib	sp, {r5, r8}
    1b70:	mov	r3, r0
    1b74:	mov	r1, r9
    1b78:	smull	r2, ip, r2, r7
    1b7c:	ldr	r2, [pc, #1688]	; 221c <parse_resv+0x8a8>
    1b80:	mov	r0, #256	; 0x100
    1b84:	add	ip, ip, r7
    1b88:	rsb	r6, r6, ip, asr #5
    1b8c:	add	r2, pc, r2
    1b90:	str	r6, [sp]
    1b94:	bl	c24 <sendto_realops_snomask@plt>
    1b98:	mov	r0, r4
    1b9c:	bl	c54 <get_oper_name@plt>
    1ba0:	ldr	r1, [pc, #1656]	; 2220 <parse_resv+0x8ac>
    1ba4:	mov	r2, r0
    1ba8:	mov	r3, r6
    1bac:	mov	r0, #7
    1bb0:	stm	sp, {r5, r8}
    1bb4:	add	r1, pc, r1
    1bb8:	bl	ccc <ilog@plt>
    1bbc:	ldr	r1, [pc, #1632]	; 2224 <parse_resv+0x8b0>
    1bc0:	mov	r3, r5
    1bc4:	mov	r2, r6
    1bc8:	mov	r0, r4
    1bcc:	add	r1, pc, r1
    1bd0:	bl	d08 <sendto_one_notice@plt>
    1bd4:	mov	r1, sl
    1bd8:	ldr	r0, [sl, #16]
    1bdc:	bl	bac <add_to_resv_hash@plt>
    1be0:	ldrd	r0, [sl, #16]
    1be4:	mov	r2, r7
    1be8:	add	sp, sp, #44	; 0x2c
    1bec:	ldrd	r4, [sp]
    1bf0:	ldrd	r6, [sp, #8]
    1bf4:	ldrd	r8, [sp, #16]
    1bf8:	ldrd	sl, [sp, #24]
    1bfc:	ldr	lr, [sp, #32]
    1c00:	add	sp, sp, #36	; 0x24
    1c04:	b	c3c <resv_chan_forcepart@plt>
    1c08:	ldr	r1, [pc, #1560]	; 2228 <parse_resv+0x8b4>
    1c0c:	mov	r2, r5
    1c10:	mov	r0, r4
    1c14:	add	r1, pc, r1
    1c18:	add	sp, sp, #44	; 0x2c
    1c1c:	ldrd	r4, [sp]
    1c20:	ldrd	r6, [sp, #8]
    1c24:	ldrd	r8, [sp, #16]
    1c28:	ldrd	sl, [sp, #24]
    1c2c:	ldr	lr, [sp, #32]
    1c30:	add	sp, sp, #36	; 0x24
    1c34:	b	d08 <sendto_one_notice@plt>
    1c38:	ldr	r3, [pc, #1516]	; 222c <parse_resv+0x8b8>
    1c3c:	mov	r0, r4
    1c40:	ldr	r1, [pc, #1512]	; 2230 <parse_resv+0x8bc>
    1c44:	ldr	r3, [r6, r3]
    1c48:	add	r1, pc, r1
    1c4c:	ldr	r2, [r3, #240]	; 0xf0
    1c50:	b	1c18 <parse_resv+0x2a4>
    1c54:	ldr	r1, [pc, #1496]	; 2234 <parse_resv+0x8c0>
    1c58:	mov	r2, r5
    1c5c:	mov	r0, r4
    1c60:	add	r1, pc, r1
    1c64:	b	1c18 <parse_resv+0x2a4>
    1c68:	ldr	r1, [pc, #1480]	; 2238 <parse_resv+0x8c4>
    1c6c:	mov	r2, r5
    1c70:	mov	r0, r4
    1c74:	add	r1, pc, r1
    1c78:	b	1c18 <parse_resv+0x2a4>
    1c7c:	bl	b94 <make_conf@plt>
    1c80:	mov	r3, #512	; 0x200
    1c84:	mov	sl, r0
    1c88:	str	r3, [r0]
    1c8c:	str	fp, [r0, #32]
    1c90:	bl	ba0 <rb_current_time@plt>
    1c94:	str	r0, [sl, #40]	; 0x28
    1c98:	mov	r0, r5
    1c9c:	bl	cc0 <strlen@plt>
    1ca0:	add	r2, r0, #1
    1ca4:	mov	r0, r2
    1ca8:	str	r2, [sp, #36]	; 0x24
    1cac:	bl	c90 <malloc@plt>
    1cb0:	subs	r3, r0, #0
    1cb4:	str	r3, [sp, #32]
    1cb8:	beq	20b0 <parse_resv+0x73c>
    1cbc:	mov	r1, r5
    1cc0:	ldr	r2, [sp, #36]	; 0x24
    1cc4:	bl	bf4 <memcpy@plt>
    1cc8:	ldr	r3, [sp, #32]
    1ccc:	mov	r0, r8
    1cd0:	str	r3, [sl, #16]
    1cd4:	bl	cc0 <strlen@plt>
    1cd8:	add	r2, r0, #1
    1cdc:	mov	r0, r2
    1ce0:	str	r2, [sp, #36]	; 0x24
    1ce4:	bl	c90 <malloc@plt>
    1ce8:	subs	r3, r0, #0
    1cec:	str	r3, [sp, #32]
    1cf0:	beq	20b0 <parse_resv+0x73c>
    1cf4:	mov	r1, r8
    1cf8:	ldr	r2, [sp, #36]	; 0x24
    1cfc:	bl	bf4 <memcpy@plt>
    1d00:	ldr	r3, [sp, #32]
    1d04:	mov	r0, r4
    1d08:	str	r3, [sl, #20]
    1d0c:	bl	c54 <get_oper_name@plt>
    1d10:	bl	c78 <operhash_add@plt>
    1d14:	cmp	r9, #0
    1d18:	str	r0, [sl, #12]
    1d1c:	bne	1f68 <parse_resv+0x5f4>
    1d20:	cmp	r7, #0
    1d24:	ble	2148 <parse_resv+0x7d4>
    1d28:	bl	ba0 <rb_current_time@plt>
    1d2c:	add	r3, r0, r7
    1d30:	mov	r0, r4
    1d34:	str	r3, [sl, #36]	; 0x24
    1d38:	bl	c54 <get_oper_name@plt>
    1d3c:	movw	lr, #34953	; 0x8889
    1d40:	movt	lr, #34952	; 0x8888
    1d44:	asr	ip, r7, #31
    1d48:	mov	r3, r0
    1d4c:	ldr	r2, [pc, #1256]	; 223c <parse_resv+0x8c8>
    1d50:	mov	r1, r9
    1d54:	smull	r0, lr, lr, r7
    1d58:	mov	r0, #256	; 0x100
    1d5c:	stmib	sp, {r5, r8}
    1d60:	add	lr, lr, r7
    1d64:	rsb	r9, ip, lr, asr #5
    1d68:	add	r2, pc, r2
    1d6c:	str	r9, [sp]
    1d70:	bl	c24 <sendto_realops_snomask@plt>
    1d74:	mov	r0, r4
    1d78:	bl	c54 <get_oper_name@plt>
    1d7c:	ldr	r1, [pc, #1212]	; 2240 <parse_resv+0x8cc>
    1d80:	mov	r2, r0
    1d84:	mov	r3, r9
    1d88:	mov	r0, #7
    1d8c:	stm	sp, {r5, r8}
    1d90:	add	r1, pc, r1
    1d94:	bl	ccc <ilog@plt>
    1d98:	ldr	r1, [pc, #1188]	; 2244 <parse_resv+0x8d0>
    1d9c:	mov	r3, r5
    1da0:	mov	r2, r9
    1da4:	mov	r0, r4
    1da8:	add	r1, pc, r1
    1dac:	bl	d08 <sendto_one_notice@plt>
    1db0:	bl	cb4 <rb_make_rb_dlink_node@plt>
    1db4:	cmp	r0, #0
    1db8:	beq	21ec <parse_resv+0x878>
    1dbc:	ldr	r3, [pc, #1156]	; 2248 <parse_resv+0x8d4>
    1dc0:	mov	r2, #0
    1dc4:	str	sl, [r0]
    1dc8:	str	r2, [r0, #4]
    1dcc:	ldr	r3, [r6, r3]
    1dd0:	ldr	r2, [r3]
    1dd4:	cmp	r2, #0
    1dd8:	str	r2, [r0, #8]
    1ddc:	strne	r0, [r2, #4]
    1de0:	beq	2138 <parse_resv+0x7c4>
    1de4:	ldr	ip, [r3, #8]
    1de8:	mov	r2, r7
    1dec:	str	r0, [r3]
    1df0:	ldr	r0, [sl, #16]
    1df4:	ldr	r1, [sl, #20]
    1df8:	add	ip, ip, #1
    1dfc:	str	ip, [r3, #8]
    1e00:	add	sp, sp, #44	; 0x2c
    1e04:	ldrd	r4, [sp]
    1e08:	ldrd	r6, [sp, #8]
    1e0c:	ldrd	r8, [sp, #16]
    1e10:	ldrd	sl, [sp, #24]
    1e14:	ldr	lr, [sp, #32]
    1e18:	add	sp, sp, #36	; 0x24
    1e1c:	b	c0c <resv_nick_fnc@plt>
    1e20:	ldr	r3, [sl, #4]
    1e24:	orr	r3, r3, #8912896	; 0x880000
    1e28:	str	r3, [sl, #4]
    1e2c:	bl	ba0 <rb_current_time@plt>
    1e30:	add	r3, r0, r7
    1e34:	mov	r0, sl
    1e38:	str	r3, [sl, #36]	; 0x24
    1e3c:	str	r3, [sl, #44]	; 0x2c
    1e40:	bl	be8 <replace_old_ban@plt>
    1e44:	bl	cb4 <rb_make_rb_dlink_node@plt>
    1e48:	subs	r2, r0, #0
    1e4c:	beq	21ec <parse_resv+0x878>
    1e50:	ldr	r3, [pc, #1012]	; 224c <parse_resv+0x8d8>
    1e54:	strd	sl, [r2]
    1e58:	ldr	r3, [r6, r3]
    1e5c:	ldr	r1, [r3]
    1e60:	cmp	r1, #0
    1e64:	str	r1, [r2, #8]
    1e68:	strne	r2, [r1, #4]
    1e6c:	beq	21cc <parse_resv+0x858>
    1e70:	ldr	r1, [r3, #8]
    1e74:	mov	r0, r4
    1e78:	asr	r9, r7, #31
    1e7c:	str	r2, [r3]
    1e80:	add	r2, r1, #1
    1e84:	str	r2, [r3, #8]
    1e88:	bl	c54 <get_oper_name@plt>
    1e8c:	movw	ip, #34953	; 0x8889
    1e90:	movt	ip, #34952	; 0x8888
    1e94:	ldr	r2, [pc, #948]	; 2250 <parse_resv+0x8dc>
    1e98:	mov	r3, r0
    1e9c:	mov	r1, #0
    1ea0:	stmib	sp, {r5, r8}
    1ea4:	smull	r0, ip, ip, r7
    1ea8:	mov	r0, #256	; 0x100
    1eac:	add	ip, ip, r7
    1eb0:	add	r2, pc, r2
    1eb4:	rsb	r9, r9, ip, asr #5
    1eb8:	str	r9, [sp]
    1ebc:	bl	c24 <sendto_realops_snomask@plt>
    1ec0:	mov	r0, r4
    1ec4:	bl	c54 <get_oper_name@plt>
    1ec8:	ldr	r1, [pc, #900]	; 2254 <parse_resv+0x8e0>
    1ecc:	mov	r2, r0
    1ed0:	mov	r3, r9
    1ed4:	mov	r0, #7
    1ed8:	stm	sp, {r5, r8}
    1edc:	add	r1, pc, r1
    1ee0:	bl	ccc <ilog@plt>
    1ee4:	ldr	r1, [pc, #876]	; 2258 <parse_resv+0x8e4>
    1ee8:	mov	r3, r5
    1eec:	mov	r2, r9
    1ef0:	mov	r0, r4
    1ef4:	add	r4, r4, #396	; 0x18c
    1ef8:	add	r1, pc, r1
    1efc:	bl	d08 <sendto_one_notice@plt>
    1f00:	ldr	ip, [pc, #852]	; 225c <parse_resv+0x8e8>
    1f04:	mov	r3, #0
    1f08:	mov	r1, r3
    1f0c:	mov	r0, r3
    1f10:	ldr	r2, [pc, #840]	; 2260 <parse_resv+0x8ec>
    1f14:	ldr	r5, [sl, #40]	; 0x28
    1f18:	ldr	r9, [r6, ip]
    1f1c:	ldr	r2, [r6, r2]
    1f20:	str	r8, [sp, #24]
    1f24:	ldr	lr, [sl, #44]	; 0x2c
    1f28:	ldr	r6, [r9]
    1f2c:	ldr	r2, [r2]
    1f30:	sub	lr, lr, r5
    1f34:	ldr	ip, [pc, #808]	; 2264 <parse_resv+0x8f0>
    1f38:	str	lr, [sp, #20]
    1f3c:	ldr	lr, [sl, #36]	; 0x24
    1f40:	str	r5, [sp, #12]
    1f44:	orr	r2, r6, r2
    1f48:	add	ip, pc, ip
    1f4c:	sub	lr, lr, r5
    1f50:	str	lr, [sp, #16]
    1f54:	ldr	lr, [sl, #16]
    1f58:	str	ip, [sp]
    1f5c:	stmib	sp, {r4, lr}
    1f60:	bl	c84 <sendto_server@plt>
    1f64:	b	1bd4 <parse_resv+0x260>
    1f68:	ldr	r3, [sl, #4]
    1f6c:	orr	r3, r3, #8912896	; 0x880000
    1f70:	str	r3, [sl, #4]
    1f74:	bl	ba0 <rb_current_time@plt>
    1f78:	add	r3, r0, r7
    1f7c:	mov	r0, sl
    1f80:	str	r3, [sl, #36]	; 0x24
    1f84:	str	r3, [sl, #44]	; 0x2c
    1f88:	bl	be8 <replace_old_ban@plt>
    1f8c:	bl	cb4 <rb_make_rb_dlink_node@plt>
    1f90:	subs	r2, r0, #0
    1f94:	beq	21ec <parse_resv+0x878>
    1f98:	ldr	r3, [pc, #684]	; 224c <parse_resv+0x8d8>
    1f9c:	strd	sl, [r2]
    1fa0:	ldr	r3, [r6, r3]
    1fa4:	ldr	r1, [r3]
    1fa8:	cmp	r1, #0
    1fac:	str	r1, [r2, #8]
    1fb0:	strne	r2, [r1, #4]
    1fb4:	beq	21dc <parse_resv+0x868>
    1fb8:	ldr	r1, [r3, #8]
    1fbc:	mov	r0, r4
    1fc0:	asr	r9, r7, #31
    1fc4:	str	r2, [r3]
    1fc8:	add	r2, r1, #1
    1fcc:	str	r2, [r3, #8]
    1fd0:	bl	c54 <get_oper_name@plt>
    1fd4:	movw	ip, #34953	; 0x8889
    1fd8:	movt	ip, #34952	; 0x8888
    1fdc:	ldr	r2, [pc, #644]	; 2268 <parse_resv+0x8f4>
    1fe0:	mov	r3, r0
    1fe4:	mov	r1, #0
    1fe8:	stmib	sp, {r5, r8}
    1fec:	smull	r0, ip, ip, r7
    1ff0:	mov	r0, #256	; 0x100
    1ff4:	add	ip, ip, r7
    1ff8:	add	r2, pc, r2
    1ffc:	rsb	r9, r9, ip, asr #5
    2000:	str	r9, [sp]
    2004:	bl	c24 <sendto_realops_snomask@plt>
    2008:	mov	r0, r4
    200c:	bl	c54 <get_oper_name@plt>
    2010:	ldr	r1, [pc, #596]	; 226c <parse_resv+0x8f8>
    2014:	mov	r2, r0
    2018:	mov	r3, r9
    201c:	mov	r0, #7
    2020:	stm	sp, {r5, r8}
    2024:	add	r1, pc, r1
    2028:	bl	ccc <ilog@plt>
    202c:	ldr	r1, [pc, #572]	; 2270 <parse_resv+0x8fc>
    2030:	mov	r3, r5
    2034:	mov	r2, r9
    2038:	mov	r0, r4
    203c:	add	r4, r4, #396	; 0x18c
    2040:	add	r1, pc, r1
    2044:	bl	d08 <sendto_one_notice@plt>
    2048:	ldr	ip, [pc, #524]	; 225c <parse_resv+0x8e8>
    204c:	mov	r3, #0
    2050:	mov	r1, r3
    2054:	mov	r0, r3
    2058:	ldr	r2, [pc, #512]	; 2260 <parse_resv+0x8ec>
    205c:	ldr	r5, [sl, #40]	; 0x28
    2060:	ldr	ip, [r6, ip]
    2064:	ldr	r2, [r6, r2]
    2068:	str	r8, [sp, #24]
    206c:	ldr	lr, [sl, #44]	; 0x2c
    2070:	ldr	r8, [ip]
    2074:	ldr	r2, [r2]
    2078:	sub	lr, lr, r5
    207c:	ldr	ip, [pc, #496]	; 2274 <parse_resv+0x900>
    2080:	str	lr, [sp, #20]
    2084:	ldr	lr, [sl, #36]	; 0x24
    2088:	str	r5, [sp, #12]
    208c:	orr	r2, r8, r2
    2090:	add	ip, pc, ip
    2094:	sub	lr, lr, r5
    2098:	str	lr, [sp, #16]
    209c:	ldr	lr, [sl, #16]
    20a0:	str	ip, [sp]
    20a4:	stmib	sp, {r4, lr}
    20a8:	bl	c84 <sendto_server@plt>
    20ac:	b	1db0 <parse_resv+0x43c>
    20b0:	bl	c00 <rb_outofmemory@plt>
    20b4:	mov	r0, r4
    20b8:	bl	c54 <get_oper_name@plt>
    20bc:	ldr	r2, [pc, #436]	; 2278 <parse_resv+0x904>
    20c0:	mov	r3, r0
    20c4:	mov	r1, r9
    20c8:	mov	r0, #256	; 0x100
    20cc:	stm	sp, {r5, r8}
    20d0:	add	r2, pc, r2
    20d4:	bl	c24 <sendto_realops_snomask@plt>
    20d8:	mov	r0, r4
    20dc:	bl	c54 <get_oper_name@plt>
    20e0:	ldr	r1, [pc, #404]	; 227c <parse_resv+0x908>
    20e4:	mov	r3, r5
    20e8:	mov	r2, r0
    20ec:	mov	r0, #7
    20f0:	str	r8, [sp]
    20f4:	add	r1, pc, r1
    20f8:	bl	ccc <ilog@plt>
    20fc:	ldr	r1, [pc, #380]	; 2280 <parse_resv+0x90c>
    2100:	mov	r2, r5
    2104:	mov	r0, r4
    2108:	add	r1, pc, r1
    210c:	bl	d08 <sendto_one_notice@plt>
    2110:	ldr	r2, [sl, #16]
    2114:	mov	r1, r4
    2118:	mov	r3, r9
    211c:	str	r9, [sp, #4]
    2120:	mov	r0, #3
    2124:	str	r9, [sp, #8]
    2128:	ldr	ip, [sl, #20]
    212c:	str	ip, [sp]
    2130:	bl	c30 <bandb_add@plt>
    2134:	b	1bd4 <parse_resv+0x260>
    2138:	ldr	r2, [r3, #4]
    213c:	cmp	r2, #0
    2140:	streq	r0, [r3, #4]
    2144:	b	1de4 <parse_resv+0x470>
    2148:	mov	r0, r4
    214c:	bl	c54 <get_oper_name@plt>
    2150:	ldr	r2, [pc, #300]	; 2284 <parse_resv+0x910>
    2154:	mov	r3, r0
    2158:	mov	r1, r9
    215c:	mov	r0, #256	; 0x100
    2160:	stm	sp, {r5, r8}
    2164:	add	r2, pc, r2
    2168:	bl	c24 <sendto_realops_snomask@plt>
    216c:	mov	r0, r4
    2170:	bl	c54 <get_oper_name@plt>
    2174:	ldr	r1, [pc, #268]	; 2288 <parse_resv+0x914>
    2178:	mov	r3, r5
    217c:	mov	r2, r0
    2180:	mov	r0, #7
    2184:	str	r8, [sp]
    2188:	add	r1, pc, r1
    218c:	bl	ccc <ilog@plt>
    2190:	ldr	r1, [pc, #244]	; 228c <parse_resv+0x918>
    2194:	mov	r2, r5
    2198:	mov	r0, r4
    219c:	add	r1, pc, r1
    21a0:	bl	d08 <sendto_one_notice@plt>
    21a4:	ldr	r2, [sl, #16]
    21a8:	mov	r1, r4
    21ac:	mov	r3, r9
    21b0:	str	r9, [sp, #4]
    21b4:	mov	r0, #3
    21b8:	str	r9, [sp, #8]
    21bc:	ldr	ip, [sl, #20]
    21c0:	str	ip, [sp]
    21c4:	bl	c30 <bandb_add@plt>
    21c8:	b	1db0 <parse_resv+0x43c>
    21cc:	ldr	r1, [r3, #4]
    21d0:	cmp	r1, #0
    21d4:	streq	r2, [r3, #4]
    21d8:	b	1e70 <parse_resv+0x4fc>
    21dc:	ldr	r1, [r3, #4]
    21e0:	cmp	r1, #0
    21e4:	streq	r2, [r3, #4]
    21e8:	b	1fb8 <parse_resv+0x644>
    21ec:	ldr	r3, [pc, #156]	; 2290 <parse_resv+0x91c>
    21f0:	mov	r2, #144	; 0x90
    21f4:	ldr	r1, [pc, #152]	; 2294 <parse_resv+0x920>
    21f8:	ldr	r0, [pc, #152]	; 2298 <parse_resv+0x924>
    21fc:	add	r3, pc, r3
    2200:	add	r3, r3, #16
    2204:	add	r1, pc, r1
    2208:	add	r0, pc, r0
    220c:	bl	d68 <__assert_fail@plt>
    2210:	.word	0x00011644
    2214:	.word	0x000000d4
    2218:	.word	0x000011a4
    221c:	.word	0x00000f9c
    2220:	.word	0x00000f24
    2224:	.word	0x00000f8c
    2228:	.word	0x00001018
    222c:	.word	0x000000e4
    2230:	.word	0x00000f74
    2234:	.word	0x00000e24
    2238:	.word	0x00000de0
    223c:	.word	0x00000dc0
    2240:	.word	0x00000d48
    2244:	.word	0x00000db0
    2248:	.word	0x000000b8
    224c:	.word	0x000000bc
    2250:	.word	0x00000bfc
    2254:	.word	0x00000bfc
    2258:	.word	0x00000bf0
    225c:	.word	0x000000c4
    2260:	.word	0x000000c8
    2264:	.word	0x00000bc0
    2268:	.word	0x00000ab4
    226c:	.word	0x00000ab4
    2270:	.word	0x00000aa8
    2274:	.word	0x00000a78
    2278:	.word	0x00000aac
    227c:	.word	0x00000aa4
    2280:	.word	0x00000aa0
    2284:	.word	0x00000a18
    2288:	.word	0x00000a10
    228c:	.word	0x00000a0c
    2290:	.word	0x00000630
    2294:	.word	0x000006b8
    2298:	.word	0x00000898

0000229c <mo_resv>:
    229c:	strd	r4, [sp, #-36]!	; 0xffffffdc
    22a0:	mov	r4, r2
    22a4:	strd	r6, [sp, #8]
    22a8:	mov	r7, r3
    22ac:	ldr	r3, [r2, #24]
    22b0:	strd	r8, [sp, #16]
    22b4:	ldr	r5, [pc, #1024]	; 26bc <mo_resv+0x420>
    22b8:	strd	sl, [sp, #24]
    22bc:	str	lr, [sp, #32]
    22c0:	sub	sp, sp, #52	; 0x34
    22c4:	cmp	r3, #0
    22c8:	ldr	r6, [sp, #88]	; 0x58
    22cc:	add	r5, pc, r5
    22d0:	beq	2300 <mo_resv+0x64>
    22d4:	ldr	r0, [r3, #36]	; 0x24
    22d8:	cmp	r0, #0
    22dc:	beq	2300 <mo_resv+0x64>
    22e0:	ldr	r3, [pc, #984]	; 26c0 <mo_resv+0x424>
    22e4:	ldr	r1, [pc, #984]	; 26c4 <mo_resv+0x428>
    22e8:	ldr	r3, [r5, r3]
    22ec:	add	r1, pc, r1
    22f0:	ldr	r8, [r3, #324]	; 0x144
    22f4:	bl	d38 <privilegeset_in_set@plt>
    22f8:	cmp	r0, #0
    22fc:	bne	2348 <mo_resv+0xac>
    2300:	ldr	ip, [pc, #960]	; 26c8 <mo_resv+0x42c>
    2304:	add	r3, r4, #88	; 0x58
    2308:	mov	r0, r4
    230c:	ldr	r1, [pc, #952]	; 26cc <mo_resv+0x430>
    2310:	ldr	r2, [pc, #952]	; 26d0 <mo_resv+0x434>
    2314:	add	ip, pc, ip
    2318:	add	r1, pc, r1
    231c:	ldr	r2, [r5, r2]
    2320:	str	ip, [sp, #88]	; 0x58
    2324:	add	r2, r2, #88	; 0x58
    2328:	add	sp, sp, #52	; 0x34
    232c:	ldrd	r4, [sp]
    2330:	ldrd	r6, [sp, #8]
    2334:	ldrd	r8, [sp, #16]
    2338:	ldrd	sl, [sp, #24]
    233c:	ldr	lr, [sp, #32]
    2340:	add	sp, sp, #36	; 0x24
    2344:	b	bdc <sendto_one@plt>
    2348:	ldr	r0, [r6, #4]
    234c:	bl	cfc <valid_temp_time@plt>
    2350:	subs	r9, r0, #0
    2354:	blt	2428 <mo_resv+0x18c>
    2358:	mov	sl, #2
    235c:	mov	r0, #3
    2360:	mov	r3, sl
    2364:	mov	r1, #4
    2368:	mov	r2, #8
    236c:	ldr	r2, [r6, r2]
    2370:	cmp	r7, r1
    2374:	movle	sl, #0
    2378:	str	r2, [sp, #28]
    237c:	bgt	2464 <mo_resv+0x1c8>
    2380:	cmp	r0, r7
    2384:	addlt	fp, r6, r0, lsl #2
    2388:	bge	2444 <mo_resv+0x1a8>
    238c:	ldr	r6, [fp]
    2390:	cmp	r6, #0
    2394:	beq	2444 <mo_resv+0x1a8>
    2398:	ldrb	r3, [r6]
    239c:	cmp	r3, #0
    23a0:	beq	2444 <mo_resv+0x1a8>
    23a4:	cmp	sl, #0
    23a8:	beq	24d0 <mo_resv+0x234>
    23ac:	cmp	r9, #0
    23b0:	bne	25f0 <mo_resv+0x354>
    23b4:	mov	r3, r6
    23b8:	mov	r1, sl
    23bc:	ldr	r2, [sp, #28]
    23c0:	mov	r0, r4
    23c4:	bl	e98 <propagate_resv.part.0>
    23c8:	ldr	r3, [pc, #768]	; 26d0 <mo_resv+0x434>
    23cc:	mov	r0, sl
    23d0:	ldr	r1, [r5, r3]
    23d4:	add	r1, r1, #88	; 0x58
    23d8:	bl	cd8 <match@plt>
    23dc:	cmp	r0, #0
    23e0:	beq	2698 <mo_resv+0x3fc>
    23e4:	clz	r3, r9
    23e8:	cmp	r8, #0
    23ec:	lsr	r3, r3, #5
    23f0:	moveq	r3, #0
    23f4:	cmp	r3, #0
    23f8:	beq	2644 <mo_resv+0x3a8>
    23fc:	ldr	r1, [pc, #720]	; 26d4 <mo_resv+0x438>
    2400:	mov	r0, r4
    2404:	add	r1, pc, r1
    2408:	add	sp, sp, #52	; 0x34
    240c:	ldrd	r4, [sp]
    2410:	ldrd	r6, [sp, #8]
    2414:	ldrd	r8, [sp, #16]
    2418:	ldrd	sl, [sp, #24]
    241c:	ldr	lr, [sp, #32]
    2420:	add	sp, sp, #36	; 0x24
    2424:	b	d08 <sendto_one_notice@plt>
    2428:	mov	sl, #1
    242c:	mov	r0, #2
    2430:	mov	r3, sl
    2434:	mov	r1, #3
    2438:	mov	r2, #4
    243c:	mov	r9, #0
    2440:	b	236c <mo_resv+0xd0>
    2444:	ldr	ip, [pc, #652]	; 26d8 <mo_resv+0x43c>
    2448:	add	r3, r4, #88	; 0x58
    244c:	mov	r0, r4
    2450:	ldr	r1, [pc, #644]	; 26dc <mo_resv+0x440>
    2454:	ldr	r2, [pc, #628]	; 26d0 <mo_resv+0x434>
    2458:	add	ip, pc, ip
    245c:	add	r1, pc, r1
    2460:	b	231c <mo_resv+0x80>
    2464:	ldr	r1, [pc, #628]	; 26e0 <mo_resv+0x444>
    2468:	add	fp, r6, r0, lsl #2
    246c:	str	r3, [sp, #32]
    2470:	ldr	r0, [r6, r0, lsl #2]
    2474:	add	r1, pc, r1
    2478:	bl	d50 <irccmp@plt>
    247c:	subs	r2, r0, #0
    2480:	bne	25e8 <mo_resv+0x34c>
    2484:	ldr	r1, [r4, #24]
    2488:	ldr	r3, [sp, #32]
    248c:	cmp	r1, #0
    2490:	beq	2678 <mo_resv+0x3dc>
    2494:	ldr	r0, [r1, #36]	; 0x24
    2498:	strd	r2, [sp, #32]
    249c:	cmp	r0, #0
    24a0:	beq	2678 <mo_resv+0x3dc>
    24a4:	ldr	r1, [pc, #568]	; 26e4 <mo_resv+0x448>
    24a8:	add	r1, pc, r1
    24ac:	bl	d38 <privilegeset_in_set@plt>
    24b0:	cmp	r0, #0
    24b4:	beq	2678 <mo_resv+0x3dc>
    24b8:	ldrd	r2, [sp, #32]
    24bc:	add	sl, sl, #2
    24c0:	ldr	sl, [r6, sl, lsl #2]
    24c4:	add	r0, r3, #3
    24c8:	mov	r8, r2
    24cc:	b	2380 <mo_resv+0xe4>
    24d0:	cmp	r8, #0
    24d4:	bne	23e4 <mo_resv+0x148>
    24d8:	ldr	r3, [pc, #520]	; 26e8 <mo_resv+0x44c>
    24dc:	ldr	r3, [r5, r3]
    24e0:	ldr	r2, [r3, #8]
    24e4:	cmp	r2, #0
    24e8:	beq	2644 <mo_resv+0x3a8>
    24ec:	ldr	fp, [r3]
    24f0:	cmp	fp, #0
    24f4:	beq	2644 <mo_resv+0x3a8>
    24f8:	ldr	r3, [pc, #492]	; 26ec <mo_resv+0x450>
    24fc:	str	r8, [sp, #44]	; 0x2c
    2500:	ldr	r8, [sp, #28]
    2504:	add	r3, pc, r3
    2508:	str	r3, [sp, #40]	; 0x28
    250c:	ldr	r3, [pc, #476]	; 26f0 <mo_resv+0x454>
    2510:	add	r3, pc, r3
    2514:	str	r3, [sp, #32]
    2518:	ldr	r3, [pc, #468]	; 26f4 <mo_resv+0x458>
    251c:	add	r3, pc, r3
    2520:	str	r3, [sp, #36]	; 0x24
    2524:	b	259c <mo_resv+0x300>
    2528:	tst	r2, #256	; 0x100
    252c:	mov	r3, r9
    2530:	ldr	r1, [pc, #448]	; 26f8 <mo_resv+0x45c>
    2534:	mov	r0, r4
    2538:	beq	2590 <mo_resv+0x2f4>
    253c:	ldr	sl, [r5, r1]
    2540:	ldr	r1, [r7, #8]
    2544:	str	r8, [sp, #8]
    2548:	ldr	r2, [sp, #32]
    254c:	str	r2, [sp]
    2550:	ldr	r2, [sl]
    2554:	str	r1, [sp, #4]
    2558:	str	r6, [sp, #12]
    255c:	bl	bb8 <sendto_match_servs@plt>
    2560:	ldr	r2, [pc, #404]	; 26fc <mo_resv+0x460>
    2564:	mov	r0, r4
    2568:	ldr	ip, [r7, #8]
    256c:	ldr	r1, [sp, #36]	; 0x24
    2570:	ldr	r2, [r5, r2]
    2574:	ldr	r3, [sl]
    2578:	stm	sp, {r1, ip}
    257c:	mov	r1, ip
    2580:	str	r8, [sp, #8]
    2584:	str	r6, [sp, #12]
    2588:	ldr	r2, [r2]
    258c:	bl	bb8 <sendto_match_servs@plt>
    2590:	ldr	fp, [fp, #8]
    2594:	cmp	fp, #0
    2598:	beq	26b4 <mo_resv+0x418>
    259c:	ldr	r7, [fp]
    25a0:	cmp	r9, #0
    25a4:	ldr	r2, [r7, #12]
    25a8:	beq	2528 <mo_resv+0x28c>
    25ac:	tst	r2, #128	; 0x80
    25b0:	beq	2590 <mo_resv+0x2f4>
    25b4:	ldr	r2, [pc, #320]	; 26fc <mo_resv+0x460>
    25b8:	mov	r3, #0
    25bc:	mov	r0, r4
    25c0:	ldr	r1, [r7, #8]
    25c4:	ldr	ip, [sp, #40]	; 0x28
    25c8:	ldr	r2, [r5, r2]
    25cc:	str	ip, [sp]
    25d0:	stmib	sp, {r1, r9}
    25d4:	str	r8, [sp, #12]
    25d8:	ldr	r2, [r2]
    25dc:	str	r6, [sp, #16]
    25e0:	bl	bb8 <sendto_match_servs@plt>
    25e4:	b	2590 <mo_resv+0x2f4>
    25e8:	mov	sl, #0
    25ec:	b	238c <mo_resv+0xf0>
    25f0:	ldr	r2, [pc, #264]	; 2700 <mo_resv+0x464>
    25f4:	mov	r3, #0
    25f8:	mov	r1, sl
    25fc:	mov	r0, r4
    2600:	ldr	ip, [pc, #244]	; 26fc <mo_resv+0x460>
    2604:	add	r2, pc, r2
    2608:	ldr	ip, [r5, ip]
    260c:	stm	sp, {r2, sl}
    2610:	ldr	r2, [sp, #28]
    2614:	str	r9, [sp, #8]
    2618:	str	r2, [sp, #12]
    261c:	ldr	r2, [ip]
    2620:	str	r6, [sp, #16]
    2624:	bl	bb8 <sendto_match_servs@plt>
    2628:	ldr	r3, [pc, #160]	; 26d0 <mo_resv+0x434>
    262c:	mov	r0, sl
    2630:	ldr	r1, [r5, r3]
    2634:	add	r1, r1, #88	; 0x58
    2638:	bl	cd8 <match@plt>
    263c:	cmp	r0, #0
    2640:	beq	2698 <mo_resv+0x3fc>
    2644:	ldr	r1, [sp, #28]
    2648:	mov	r3, r9
    264c:	mov	r2, r6
    2650:	mov	r0, r4
    2654:	str	r8, [sp, #88]	; 0x58
    2658:	add	sp, sp, #52	; 0x34
    265c:	ldrd	r4, [sp]
    2660:	ldrd	r6, [sp, #8]
    2664:	ldrd	r8, [sp, #16]
    2668:	ldrd	sl, [sp, #24]
    266c:	ldr	lr, [sp, #32]
    2670:	add	sp, sp, #36	; 0x24
    2674:	b	1974 <parse_resv>
    2678:	ldr	ip, [pc, #132]	; 2704 <mo_resv+0x468>
    267c:	add	r3, r4, #88	; 0x58
    2680:	mov	r0, r4
    2684:	ldr	r1, [pc, #124]	; 2708 <mo_resv+0x46c>
    2688:	ldr	r2, [pc, #64]	; 26d0 <mo_resv+0x434>
    268c:	add	ip, pc, ip
    2690:	add	r1, pc, r1
    2694:	b	231c <mo_resv+0x80>
    2698:	add	sp, sp, #52	; 0x34
    269c:	ldrd	r4, [sp]
    26a0:	ldrd	r6, [sp, #8]
    26a4:	ldrd	r8, [sp, #16]
    26a8:	ldrd	sl, [sp, #24]
    26ac:	add	sp, sp, #32
    26b0:	pop	{pc}		; (ldr pc, [sp], #4)
    26b4:	ldr	r8, [sp, #44]	; 0x2c
    26b8:	b	2644 <mo_resv+0x3a8>
    26bc:	.word	0x00010d2c
    26c0:	.word	0x000000e4
    26c4:	.word	0x0000073c
    26c8:	.word	0x0000070c
    26cc:	.word	0x000006e0
    26d0:	.word	0x000000dc
    26d4:	.word	0x000008a0
    26d8:	.word	0x00000828
    26dc:	.word	0x000007fc
    26e0:	.word	0x000005c0
    26e4:	.word	0x0000059c
    26e8:	.word	0x000000d0
    26ec:	.word	0x0000039c
    26f0:	.word	0x00000380
    26f4:	.word	0x0000076c
    26f8:	.word	0x000000c0
    26fc:	.word	0x000000e0
    2700:	.word	0x0000029c
    2704:	.word	0x000003ac
    2708:	.word	0x00000368

0000270c <me_resv>:
    270c:	ldrh	r1, [r2, #80]	; 0x50
    2710:	strd	r4, [sp, #-16]!
    2714:	str	r6, [sp, #8]
    2718:	str	lr, [sp, #12]
    271c:	ldr	r3, [sp, #16]
    2720:	cmp	r1, #64	; 0x40
    2724:	bne	2778 <me_resv+0x6c>
    2728:	ldr	r1, [r2, #24]
    272c:	cmp	r1, #0
    2730:	beq	2778 <me_resv+0x6c>
    2734:	ldmib	r3, {r0, r5}
    2738:	mov	r4, r2
    273c:	mov	r1, #0
    2740:	mov	r2, #10
    2744:	ldr	r6, [r3, #16]
    2748:	bl	bd0 <strtol@plt>
    274c:	mov	ip, #0
    2750:	mov	r3, r0
    2754:	ldr	lr, [sp, #12]
    2758:	mov	r1, r5
    275c:	mov	r0, r4
    2760:	str	ip, [sp, #16]
    2764:	mov	r2, r6
    2768:	ldrd	r4, [sp]
    276c:	ldr	r6, [sp, #8]
    2770:	add	sp, sp, #16
    2774:	b	1974 <parse_resv>
    2778:	ldrd	r4, [sp]
    277c:	ldr	r6, [sp, #8]
    2780:	add	sp, sp, #12
    2784:	pop	{pc}		; (ldr pc, [sp], #4)

00002788 <ms_resv>:
    2788:	strd	r4, [sp, #-16]!
    278c:	mov	r0, r2
    2790:	mov	r5, r2
    2794:	ldr	r4, [sp, #16]
    2798:	ldr	r1, [r4, #4]
    279c:	ldrd	r2, [r4, #8]
    27a0:	str	r6, [sp, #8]
    27a4:	ldr	r6, [pc, #120]	; 2824 <ms_resv+0x9c>
    27a8:	str	lr, [sp, #12]
    27ac:	bl	e98 <propagate_resv.part.0>
    27b0:	ldr	r3, [pc, #112]	; 2828 <ms_resv+0xa0>
    27b4:	add	r6, pc, r6
    27b8:	ldr	r0, [r4, #4]
    27bc:	ldr	r1, [r6, r3]
    27c0:	add	r1, r1, #88	; 0x58
    27c4:	bl	cd8 <match@plt>
    27c8:	cmp	r0, #0
    27cc:	beq	2814 <ms_resv+0x8c>
    27d0:	ldrh	r3, [r5, #80]	; 0x50
    27d4:	cmp	r3, #64	; 0x40
    27d8:	bne	2814 <ms_resv+0x8c>
    27dc:	ldr	r3, [r5, #24]
    27e0:	cmp	r3, #0
    27e4:	beq	2814 <ms_resv+0x8c>
    27e8:	mov	r2, #0
    27ec:	mov	r0, r5
    27f0:	ldr	r1, [r4, #8]
    27f4:	mov	r3, r2
    27f8:	str	r2, [sp, #16]
    27fc:	ldr	r6, [sp, #8]
    2800:	ldr	lr, [sp, #12]
    2804:	ldr	r2, [r4, #12]
    2808:	ldrd	r4, [sp]
    280c:	add	sp, sp, #16
    2810:	b	1974 <parse_resv>
    2814:	ldrd	r4, [sp]
    2818:	ldr	r6, [sp, #8]
    281c:	add	sp, sp, #12
    2820:	pop	{pc}		; (ldr pc, [sp], #4)
    2824:	.word	0x00010844
    2828:	.word	0x000000dc

Disassembly of section .fini:

0000282c <_fini>:
    282c:	push	{r3, lr}
    2830:	pop	{r3, pc}
