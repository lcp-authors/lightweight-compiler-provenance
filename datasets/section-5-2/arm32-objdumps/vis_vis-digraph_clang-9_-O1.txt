
../repos/vis/vis-digraph:     file format elf32-littlearm


Disassembly of section .init:

00010664 <.init>:
   10664:	push	{r3, lr}
   10668:	bl	10798 <tcgetattr@plt+0x48>
   1066c:	pop	{r3, pc}

Disassembly of section .plt:

00010670 <calloc@plt-0x14>:
   10670:	push	{lr}		; (str lr, [sp, #-4]!)
   10674:	ldr	lr, [pc, #4]	; 10680 <calloc@plt-0x4>
   10678:	add	lr, pc, lr
   1067c:	ldr	pc, [lr, #8]!
   10680:	andeq	r4, r2, r4, lsr #18

00010684 <calloc@plt>:
   10684:	add	ip, pc, #0, 12
   10688:	add	ip, ip, #36, 20	; 0x24000
   1068c:	ldr	pc, [ip, #2340]!	; 0x924

00010690 <strcmp@plt>:
   10690:	add	ip, pc, #0, 12
   10694:	add	ip, ip, #36, 20	; 0x24000
   10698:	ldr	pc, [ip, #2332]!	; 0x91c

0001069c <read@plt>:
   1069c:	add	ip, pc, #0, 12
   106a0:	add	ip, ip, #36, 20	; 0x24000
   106a4:	ldr	pc, [ip, #2324]!	; 0x914

000106a8 <__stack_chk_fail@plt>:
   106a8:	add	ip, pc, #0, 12
   106ac:	add	ip, ip, #36, 20	; 0x24000
   106b0:	ldr	pc, [ip, #2316]!	; 0x90c

000106b4 <perror@plt>:
   106b4:	add	ip, pc, #0, 12
   106b8:	add	ip, ip, #36, 20	; 0x24000
   106bc:	ldr	pc, [ip, #2308]!	; 0x904

000106c0 <putwchar@plt>:
   106c0:	add	ip, pc, #0, 12
   106c4:	add	ip, ip, #36, 20	; 0x24000
   106c8:	ldr	pc, [ip, #2300]!	; 0x8fc

000106cc <fwrite@plt>:
   106cc:	add	ip, pc, #0, 12
   106d0:	add	ip, ip, #36, 20	; 0x24000
   106d4:	ldr	pc, [ip, #2292]!	; 0x8f4

000106d8 <tcsetattr@plt>:
   106d8:	add	ip, pc, #0, 12
   106dc:	add	ip, ip, #36, 20	; 0x24000
   106e0:	ldr	pc, [ip, #2284]!	; 0x8ec

000106e4 <__libc_start_main@plt>:
   106e4:	add	ip, pc, #0, 12
   106e8:	add	ip, ip, #36, 20	; 0x24000
   106ec:	ldr	pc, [ip, #2276]!	; 0x8e4

000106f0 <__gmon_start__@plt>:
   106f0:	add	ip, pc, #0, 12
   106f4:	add	ip, ip, #36, 20	; 0x24000
   106f8:	ldr	pc, [ip, #2268]!	; 0x8dc

000106fc <strlen@plt>:
   106fc:	add	ip, pc, #0, 12
   10700:	add	ip, ip, #36, 20	; 0x24000
   10704:	ldr	pc, [ip, #2260]!	; 0x8d4

00010708 <__errno_location@plt>:
   10708:	add	ip, pc, #0, 12
   1070c:	add	ip, ip, #36, 20	; 0x24000
   10710:	ldr	pc, [ip, #2252]!	; 0x8cc

00010714 <__fprintf_chk@plt>:
   10714:	add	ip, pc, #0, 12
   10718:	add	ip, ip, #36, 20	; 0x24000
   1071c:	ldr	pc, [ip, #2244]!	; 0x8c4

00010720 <setlocale@plt>:
   10720:	add	ip, pc, #0, 12
   10724:	add	ip, ip, #36, 20	; 0x24000
   10728:	ldr	pc, [ip, #2236]!	; 0x8bc

0001072c <__wprintf_chk@plt>:
   1072c:	add	ip, pc, #0, 12
   10730:	add	ip, ip, #36, 20	; 0x24000
   10734:	ldr	pc, [ip, #2228]!	; 0x8b4

00010738 <strncmp@plt>:
   10738:	add	ip, pc, #0, 12
   1073c:	add	ip, ip, #36, 20	; 0x24000
   10740:	ldr	pc, [ip, #2220]!	; 0x8ac

00010744 <abort@plt>:
   10744:	add	ip, pc, #0, 12
   10748:	add	ip, ip, #36, 20	; 0x24000
   1074c:	ldr	pc, [ip, #2212]!	; 0x8a4

00010750 <tcgetattr@plt>:
   10750:	add	ip, pc, #0, 12
   10754:	add	ip, ip, #36, 20	; 0x24000
   10758:	ldr	pc, [ip, #2204]!	; 0x89c

Disassembly of section .text:

0001075c <.text>:
   1075c:	mov	fp, #0
   10760:	mov	lr, #0
   10764:	pop	{r1}		; (ldr r1, [sp], #4)
   10768:	mov	r2, sp
   1076c:	push	{r2}		; (str r2, [sp, #-4]!)
   10770:	push	{r0}		; (str r0, [sp, #-4]!)
   10774:	ldr	ip, [pc, #16]	; 1078c <tcgetattr@plt+0x3c>
   10778:	push	{ip}		; (str ip, [sp, #-4]!)
   1077c:	ldr	r0, [pc, #12]	; 10790 <tcgetattr@plt+0x40>
   10780:	ldr	r3, [pc, #12]	; 10794 <tcgetattr@plt+0x44>
   10784:	bl	106e4 <__libc_start_main@plt>
   10788:	bl	10744 <abort@plt>
   1078c:	andeq	r0, r1, r4, lsl #26
   10790:	andeq	r0, r1, ip, asr #16
   10794:	andeq	r0, r1, r4, lsr #25
   10798:	ldr	r3, [pc, #20]	; 107b4 <tcgetattr@plt+0x64>
   1079c:	ldr	r2, [pc, #20]	; 107b8 <tcgetattr@plt+0x68>
   107a0:	add	r3, pc, r3
   107a4:	ldr	r2, [r3, r2]
   107a8:	cmp	r2, #0
   107ac:	bxeq	lr
   107b0:	b	106f0 <__gmon_start__@plt>
   107b4:	strdeq	r4, [r2], -ip
   107b8:	andeq	r0, r0, r4, asr r0
   107bc:	ldr	r0, [pc, #24]	; 107dc <tcgetattr@plt+0x8c>
   107c0:	ldr	r3, [pc, #24]	; 107e0 <tcgetattr@plt+0x90>
   107c4:	cmp	r3, r0
   107c8:	bxeq	lr
   107cc:	ldr	r3, [pc, #16]	; 107e4 <tcgetattr@plt+0x94>
   107d0:	cmp	r3, #0
   107d4:	bxeq	lr
   107d8:	bx	r3
   107dc:	andeq	r5, r3, r0
   107e0:	andeq	r5, r3, r0
   107e4:	andeq	r0, r0, r0
   107e8:	ldr	r0, [pc, #36]	; 10814 <tcgetattr@plt+0xc4>
   107ec:	ldr	r1, [pc, #36]	; 10818 <tcgetattr@plt+0xc8>
   107f0:	sub	r1, r1, r0
   107f4:	asr	r1, r1, #2
   107f8:	add	r1, r1, r1, lsr #31
   107fc:	asrs	r1, r1, #1
   10800:	bxeq	lr
   10804:	ldr	r3, [pc, #16]	; 1081c <tcgetattr@plt+0xcc>
   10808:	cmp	r3, #0
   1080c:	bxeq	lr
   10810:	bx	r3
   10814:	andeq	r5, r3, r0
   10818:	andeq	r5, r3, r0
   1081c:	andeq	r0, r0, r0
   10820:	push	{r4, lr}
   10824:	ldr	r4, [pc, #24]	; 10844 <tcgetattr@plt+0xf4>
   10828:	ldrb	r3, [r4]
   1082c:	cmp	r3, #0
   10830:	popne	{r4, pc}
   10834:	bl	107bc <tcgetattr@plt+0x6c>
   10838:	mov	r3, #1
   1083c:	strb	r3, [r4]
   10840:	pop	{r4, pc}
   10844:	andeq	r5, r3, r4
   10848:	b	107e8 <tcgetattr@plt+0x98>
   1084c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   10850:	add	fp, sp, #24
   10854:	sub	sp, sp, #24
   10858:	mov	r4, r1
   1085c:	mov	r7, r0
   10860:	movw	r8, #20120	; 0x4e98
   10864:	movt	r8, #3
   10868:	ldr	r0, [r8]
   1086c:	str	r0, [sp, #20]
   10870:	movw	r1, #3378	; 0xd32
   10874:	movt	r1, #1
   10878:	mov	r0, #6
   1087c:	bl	10720 <setlocale@plt>
   10880:	cmp	r7, #1
   10884:	bne	108c8 <tcgetattr@plt+0x178>
   10888:	movw	r4, #55176	; 0xd788
   1088c:	movt	r4, #1
   10890:	movw	r5, #19960	; 0x4df8
   10894:	movt	r5, #2
   10898:	ldr	r3, [r4, #8]
   1089c:	ldr	r0, [r4, #12]
   108a0:	str	r0, [sp]
   108a4:	mov	r0, #1
   108a8:	mov	r1, r5
   108ac:	mov	r2, r4
   108b0:	bl	1072c <__wprintf_chk@plt>
   108b4:	ldrb	r0, [r4, #16]!
   108b8:	cmp	r0, #0
   108bc:	bne	10898 <tcgetattr@plt+0x148>
   108c0:	mov	r4, #0
   108c4:	b	10a64 <tcgetattr@plt+0x314>
   108c8:	ldr	r0, [r4, #4]
   108cc:	movw	r1, #3344	; 0xd10
   108d0:	movt	r1, #1
   108d4:	bl	10690 <strcmp@plt>
   108d8:	cmp	r0, #0
   108dc:	beq	1095c <tcgetattr@plt+0x20c>
   108e0:	sub	r5, r7, #1
   108e4:	mov	r0, r5
   108e8:	mov	r1, #4
   108ec:	bl	10684 <calloc@plt>
   108f0:	cmp	r0, #0
   108f4:	beq	10a58 <tcgetattr@plt+0x308>
   108f8:	mov	r6, r0
   108fc:	cmp	r7, #2
   10900:	blt	1093c <tcgetattr@plt+0x1ec>
   10904:	sub	r9, r7, #1
   10908:	add	r7, r4, #4
   1090c:	mov	r4, r6
   10910:	ldr	r0, [r7]
   10914:	mov	r1, r4
   10918:	bl	10c10 <tcgetattr@plt+0x4c0>
   1091c:	cmn	r0, #1
   10920:	beq	10a14 <tcgetattr@plt+0x2c4>
   10924:	cmp	r0, #0
   10928:	beq	10a1c <tcgetattr@plt+0x2cc>
   1092c:	add	r4, r4, #4
   10930:	subs	r9, r9, #1
   10934:	add	r7, r7, #4
   10938:	bne	10910 <tcgetattr@plt+0x1c0>
   1093c:	mov	r4, #0
   10940:	cmp	r5, #1
   10944:	blt	10a64 <tcgetattr@plt+0x314>
   10948:	ldr	r0, [r6], #4
   1094c:	bl	106c0 <putwchar@plt>
   10950:	subs	r5, r5, #1
   10954:	bne	10948 <tcgetattr@plt+0x1f8>
   10958:	b	10a64 <tcgetattr@plt+0x314>
   1095c:	bl	10a80 <tcgetattr@plt+0x330>
   10960:	mov	r7, #0
   10964:	str	r7, [sp, #12]
   10968:	str	r7, [sp, #8]
   1096c:	add	r4, sp, #8
   10970:	add	r5, sp, #4
   10974:	add	r0, r4, r7
   10978:	bl	10b5c <tcgetattr@plt+0x40c>
   1097c:	cmn	r0, #1
   10980:	beq	109c4 <tcgetattr@plt+0x274>
   10984:	mov	r6, r0
   10988:	mov	r0, r4
   1098c:	mov	r1, r5
   10990:	bl	10c10 <tcgetattr@plt+0x4c0>
   10994:	cmp	r0, #0
   10998:	beq	109f0 <tcgetattr@plt+0x2a0>
   1099c:	cmp	r6, #0
   109a0:	cmneq	r0, #1
   109a4:	beq	109f0 <tcgetattr@plt+0x2a0>
   109a8:	cmp	r0, #1
   109ac:	beq	10a44 <tcgetattr@plt+0x2f4>
   109b0:	add	r7, r7, #1
   109b4:	cmp	r7, #7
   109b8:	bne	10974 <tcgetattr@plt+0x224>
   109bc:	bl	10bc4 <tcgetattr@plt+0x474>
   109c0:	b	10a60 <tcgetattr@plt+0x310>
   109c4:	bl	10bc4 <tcgetattr@plt+0x474>
   109c8:	movw	r0, #20480	; 0x5000
   109cc:	movt	r0, #3
   109d0:	ldr	r3, [r0]
   109d4:	movw	r0, #3346	; 0xd12
   109d8:	movt	r0, #1
   109dc:	mov	r1, #9
   109e0:	mov	r2, #1
   109e4:	bl	106cc <fwrite@plt>
   109e8:	mov	r4, #3
   109ec:	b	10a64 <tcgetattr@plt+0x314>
   109f0:	bl	10bc4 <tcgetattr@plt+0x474>
   109f4:	movw	r0, #20480	; 0x5000
   109f8:	movt	r0, #3
   109fc:	ldr	r0, [r0]
   10a00:	mov	r4, #1
   10a04:	movw	r2, #3356	; 0xd1c
   10a08:	movt	r2, #1
   10a0c:	add	r3, sp, #8
   10a10:	b	10a38 <tcgetattr@plt+0x2e8>
   10a14:	mov	r4, #2
   10a18:	b	10a64 <tcgetattr@plt+0x314>
   10a1c:	ldr	r3, [r7]
   10a20:	movw	r0, #20480	; 0x5000
   10a24:	movt	r0, #3
   10a28:	ldr	r0, [r0]
   10a2c:	mov	r4, #1
   10a30:	movw	r2, #3356	; 0xd1c
   10a34:	movt	r2, #1
   10a38:	mov	r1, #1
   10a3c:	bl	10714 <__fprintf_chk@plt>
   10a40:	b	10a64 <tcgetattr@plt+0x314>
   10a44:	bl	10bc4 <tcgetattr@plt+0x474>
   10a48:	ldr	r0, [sp, #4]
   10a4c:	bl	106c0 <putwchar@plt>
   10a50:	mov	r4, #0
   10a54:	b	10a64 <tcgetattr@plt+0x314>
   10a58:	mov	r0, #0
   10a5c:	bl	106b4 <perror@plt>
   10a60:	mov	r4, #1
   10a64:	ldr	r0, [r8]
   10a68:	ldr	r1, [sp, #20]
   10a6c:	subs	r0, r0, r1
   10a70:	moveq	r0, r4
   10a74:	subeq	sp, fp, #24
   10a78:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   10a7c:	bl	106a8 <__stack_chk_fail@plt>
   10a80:	push	{r4, r5, fp, lr}
   10a84:	add	fp, sp, #8
   10a88:	sub	sp, sp, #8
   10a8c:	movw	r5, #20120	; 0x4e98
   10a90:	movt	r5, #3
   10a94:	ldr	r0, [r5]
   10a98:	str	r0, [sp, #4]
   10a9c:	movw	r4, #20488	; 0x5008
   10aa0:	movt	r4, #3
   10aa4:	mov	r0, #0
   10aa8:	mov	r1, r4
   10aac:	bl	10750 <tcgetattr@plt>
   10ab0:	add	r0, r4, #16
   10ab4:	movw	r2, #20552	; 0x5048
   10ab8:	movt	r2, #3
   10abc:	vld1.64	{d16-d17}, [r0]
   10ac0:	add	r0, r2, #16
   10ac4:	add	r1, r4, #32
   10ac8:	mov	r3, #44	; 0x2c
   10acc:	vld1.64	{d18-d19}, [r4], r3
   10ad0:	vld1.64	{d20-d21}, [r1]
   10ad4:	vst1.64	{d16-d17}, [r0]
   10ad8:	add	r0, r2, #32
   10adc:	vld1.32	{d16-d17}, [r4]
   10ae0:	vst1.64	{d20-d21}, [r0]
   10ae4:	mov	r0, #23
   10ae8:	mov	r1, r2
   10aec:	vst1.64	{d18-d19}, [r1], r0
   10af0:	mov	r0, #1
   10af4:	strb	r0, [r1]
   10af8:	add	r0, r2, #44	; 0x2c
   10afc:	vst1.32	{d16-d17}, [r0]
   10b00:	ldr	r0, [r2]
   10b04:	ldr	r4, [r2, #8]
   10b08:	ldr	r1, [r2, #12]
   10b0c:	movw	r3, #32692	; 0x7fb4
   10b10:	movt	r3, #65535	; 0xffff
   10b14:	and	r1, r1, r3
   10b18:	movw	r3, #64021	; 0xfa15
   10b1c:	movt	r3, #65535	; 0xffff
   10b20:	and	r0, r0, r3
   10b24:	str	r0, [r2]
   10b28:	bic	r0, r4, #304	; 0x130
   10b2c:	orr	r0, r0, #48	; 0x30
   10b30:	strd	r0, [r2, #8]
   10b34:	ldr	r0, [r5]
   10b38:	ldr	r1, [sp, #4]
   10b3c:	subs	r0, r0, r1
   10b40:	bne	10b58 <tcgetattr@plt+0x408>
   10b44:	mov	r0, #0
   10b48:	mov	r1, #0
   10b4c:	sub	sp, fp, #8
   10b50:	pop	{r4, r5, fp, lr}
   10b54:	b	106d8 <tcsetattr@plt>
   10b58:	bl	106a8 <__stack_chk_fail@plt>
   10b5c:	push	{r4, r5, r6, sl, fp, lr}
   10b60:	add	fp, sp, #16
   10b64:	sub	sp, sp, #8
   10b68:	mov	r4, r0
   10b6c:	movw	r6, #20120	; 0x4e98
   10b70:	movt	r6, #3
   10b74:	ldr	r0, [r6]
   10b78:	str	r0, [sp, #4]
   10b7c:	mov	r0, #0
   10b80:	mov	r1, r4
   10b84:	mov	r2, #1
   10b88:	bl	1069c <read@plt>
   10b8c:	mov	r5, r0
   10b90:	cmn	r0, #1
   10b94:	bne	10ba8 <tcgetattr@plt+0x458>
   10b98:	bl	10708 <__errno_location@plt>
   10b9c:	ldr	r0, [r0]
   10ba0:	cmp	r0, #4
   10ba4:	beq	10b7c <tcgetattr@plt+0x42c>
   10ba8:	ldr	r0, [r6]
   10bac:	ldr	r1, [sp, #4]
   10bb0:	subs	r0, r0, r1
   10bb4:	moveq	r0, r5
   10bb8:	subeq	sp, fp, #16
   10bbc:	popeq	{r4, r5, r6, sl, fp, pc}
   10bc0:	bl	106a8 <__stack_chk_fail@plt>
   10bc4:	push	{fp, lr}
   10bc8:	mov	fp, sp
   10bcc:	sub	sp, sp, #8
   10bd0:	movw	r0, #20120	; 0x4e98
   10bd4:	movt	r0, #3
   10bd8:	ldr	r1, [r0]
   10bdc:	str	r1, [sp, #4]
   10be0:	ldr	r0, [r0]
   10be4:	ldr	r1, [sp, #4]
   10be8:	subs	r0, r0, r1
   10bec:	bne	10c0c <tcgetattr@plt+0x4bc>
   10bf0:	movw	r2, #20488	; 0x5008
   10bf4:	movt	r2, #3
   10bf8:	mov	r0, #0
   10bfc:	mov	r1, #0
   10c00:	mov	sp, fp
   10c04:	pop	{fp, lr}
   10c08:	b	106d8 <tcsetattr@plt>
   10c0c:	bl	106a8 <__stack_chk_fail@plt>
   10c10:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10c14:	add	fp, sp, #24
   10c18:	sub	sp, sp, #8
   10c1c:	mov	r4, r1
   10c20:	mov	r5, r0
   10c24:	movw	r8, #20120	; 0x4e98
   10c28:	movt	r8, #3
   10c2c:	ldr	r0, [r8]
   10c30:	str	r0, [sp, #4]
   10c34:	mov	r0, r5
   10c38:	bl	106fc <strlen@plt>
   10c3c:	mov	r6, r0
   10c40:	movw	r7, #55176	; 0xd788
   10c44:	movt	r7, #1
   10c48:	mov	r0, r5
   10c4c:	mov	r1, r7
   10c50:	mov	r2, r6
   10c54:	bl	10738 <strncmp@plt>
   10c58:	cmp	r0, #0
   10c5c:	beq	10c74 <tcgetattr@plt+0x524>
   10c60:	ldrb	r0, [r7, #16]!
   10c64:	cmp	r0, #0
   10c68:	bne	10c48 <tcgetattr@plt+0x4f8>
   10c6c:	mov	r0, #0
   10c70:	b	10c8c <tcgetattr@plt+0x53c>
   10c74:	ldr	r0, [r7, #8]
   10c78:	str	r0, [r4]
   10c7c:	ldrb	r1, [r7, r6]
   10c80:	mvn	r0, #0
   10c84:	cmp	r1, #0
   10c88:	movweq	r0, #1
   10c8c:	ldr	r1, [r8]
   10c90:	ldr	r2, [sp, #4]
   10c94:	subs	r1, r1, r2
   10c98:	subeq	sp, fp, #24
   10c9c:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   10ca0:	bl	106a8 <__stack_chk_fail@plt>
   10ca4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10ca8:	mov	r7, r0
   10cac:	ldr	r6, [pc, #72]	; 10cfc <tcgetattr@plt+0x5ac>
   10cb0:	ldr	r5, [pc, #72]	; 10d00 <tcgetattr@plt+0x5b0>
   10cb4:	add	r6, pc, r6
   10cb8:	add	r5, pc, r5
   10cbc:	sub	r6, r6, r5
   10cc0:	mov	r8, r1
   10cc4:	mov	r9, r2
   10cc8:	bl	10664 <calloc@plt-0x20>
   10ccc:	asrs	r6, r6, #2
   10cd0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10cd4:	mov	r4, #0
   10cd8:	add	r4, r4, #1
   10cdc:	ldr	r3, [r5], #4
   10ce0:	mov	r2, r9
   10ce4:	mov	r1, r8
   10ce8:	mov	r0, r7
   10cec:	blx	r3
   10cf0:	cmp	r6, r4
   10cf4:	bne	10cd8 <tcgetattr@plt+0x588>
   10cf8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10cfc:	ldrdeq	r4, [r2], -r8
   10d00:	ldrdeq	r4, [r2], -r0
   10d04:	bx	lr

Disassembly of section .fini:

00010d08 <.fini>:
   10d08:	push	{r3, lr}
   10d0c:	pop	{r3, pc}
