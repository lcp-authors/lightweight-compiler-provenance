
../repos/eddieantonio-ocreval-3ab279a/editopcost/editopcost:     file format elf32-littlearm


Disassembly of section .init:

000106d4 <.init>:
   106d4:	push	{r3, lr}
   106d8:	bl	108ac <abort@plt+0xbc>
   106dc:	pop	{r3, pc}

Disassembly of section .plt:

000106e0 <calloc@plt-0x14>:
   106e0:	push	{lr}		; (str lr, [sp, #-4]!)
   106e4:	ldr	lr, [pc, #4]	; 106f0 <calloc@plt-0x4>
   106e8:	add	lr, pc, lr
   106ec:	ldr	pc, [lr, #8]!
   106f0:	andeq	r1, r1, r0, lsl r9

000106f4 <calloc@plt>:
   106f4:	add	ip, pc, #0, 12
   106f8:	add	ip, ip, #69632	; 0x11000
   106fc:	ldr	pc, [ip, #2320]!	; 0x910

00010700 <strcmp@plt>:
   10700:	add	ip, pc, #0, 12
   10704:	add	ip, ip, #69632	; 0x11000
   10708:	ldr	pc, [ip, #2312]!	; 0x908

0001070c <printf@plt>:
   1070c:	add	ip, pc, #0, 12
   10710:	add	ip, ip, #69632	; 0x11000
   10714:	ldr	pc, [ip, #2304]!	; 0x900

00010718 <fopen@plt>:
   10718:	add	ip, pc, #0, 12
   1071c:	add	ip, ip, #69632	; 0x11000
   10720:	ldr	pc, [ip, #2296]!	; 0x8f8

00010724 <free@plt>:
   10724:	add	ip, pc, #0, 12
   10728:	add	ip, ip, #69632	; 0x11000
   1072c:	ldr	pc, [ip, #2288]!	; 0x8f0

00010730 <fgets@plt>:
   10730:	add	ip, pc, #0, 12
   10734:	add	ip, ip, #69632	; 0x11000
   10738:	ldr	pc, [ip, #2280]!	; 0x8e8

0001073c <strdup@plt>:
   1073c:	add	ip, pc, #0, 12
   10740:	add	ip, ip, #69632	; 0x11000
   10744:	ldr	pc, [ip, #2272]!	; 0x8e0

00010748 <unlink@plt>:
   10748:	add	ip, pc, #0, 12
   1074c:	add	ip, ip, #69632	; 0x11000
   10750:	ldr	pc, [ip, #2264]!	; 0x8d8

00010754 <__xstat@plt>:
   10754:	add	ip, pc, #0, 12
   10758:	add	ip, ip, #69632	; 0x11000
   1075c:	ldr	pc, [ip, #2256]!	; 0x8d0

00010760 <__libc_start_main@plt>:
   10760:	add	ip, pc, #0, 12
   10764:	add	ip, ip, #69632	; 0x11000
   10768:	ldr	pc, [ip, #2248]!	; 0x8c8

0001076c <__sysv_signal@plt>:
   1076c:	add	ip, pc, #0, 12
   10770:	add	ip, ip, #69632	; 0x11000
   10774:	ldr	pc, [ip, #2240]!	; 0x8c0

00010778 <__gmon_start__@plt>:
   10778:	add	ip, pc, #0, 12
   1077c:	add	ip, ip, #69632	; 0x11000
   10780:	ldr	pc, [ip, #2232]!	; 0x8b8

00010784 <getpid@plt>:
   10784:	add	ip, pc, #0, 12
   10788:	add	ip, ip, #69632	; 0x11000
   1078c:	ldr	pc, [ip, #2224]!	; 0x8b0

00010790 <exit@plt>:
   10790:	add	ip, pc, #0, 12
   10794:	add	ip, ip, #69632	; 0x11000
   10798:	ldr	pc, [ip, #2216]!	; 0x8a8

0001079c <strlen@plt>:
   1079c:	add	ip, pc, #0, 12
   107a0:	add	ip, ip, #69632	; 0x11000
   107a4:	ldr	pc, [ip, #2208]!	; 0x8a0

000107a8 <fprintf@plt>:
   107a8:	add	ip, pc, #0, 12
   107ac:	add	ip, ip, #69632	; 0x11000
   107b0:	ldr	pc, [ip, #2200]!	; 0x898

000107b4 <__isoc99_sscanf@plt>:
   107b4:	add	ip, pc, #0, 12
   107b8:	add	ip, ip, #69632	; 0x11000
   107bc:	ldr	pc, [ip, #2192]!	; 0x890

000107c0 <fclose@plt>:
   107c0:	add	ip, pc, #0, 12
   107c4:	add	ip, ip, #69632	; 0x11000
   107c8:	ldr	pc, [ip, #2184]!	; 0x888

000107cc <sprintf@plt>:
   107cc:	add	ip, pc, #0, 12
   107d0:	add	ip, ip, #69632	; 0x11000
   107d4:	ldr	pc, [ip, #2176]!	; 0x880

000107d8 <fputs@plt>:
   107d8:	add	ip, pc, #0, 12
   107dc:	add	ip, ip, #69632	; 0x11000
   107e0:	ldr	pc, [ip, #2168]!	; 0x878

000107e4 <strncmp@plt>:
   107e4:	add	ip, pc, #0, 12
   107e8:	add	ip, ip, #69632	; 0x11000
   107ec:	ldr	pc, [ip, #2160]!	; 0x870

000107f0 <abort@plt>:
   107f0:	add	ip, pc, #0, 12
   107f4:	add	ip, ip, #69632	; 0x11000
   107f8:	ldr	pc, [ip, #2152]!	; 0x868

Disassembly of section .text:

000107fc <error@@Base-0x700>:
   107fc:	push	{r0, r1, r2, lr}
   10800:	mov	r3, #0
   10804:	mov	r4, r1
   10808:	ldr	r2, [pc, #80]	; 10860 <abort@plt+0x70>
   1080c:	str	r0, [sp, #4]
   10810:	add	r0, sp, #4
   10814:	bl	1101c <error@@Base+0x120>
   10818:	ldr	r3, [sp, #4]
   1081c:	sub	r3, r3, #1
   10820:	cmp	r3, #1
   10824:	bls	10830 <abort@plt+0x40>
   10828:	ldr	r0, [pc, #52]	; 10864 <abort@plt+0x74>
   1082c:	bl	10efc <error@@Base>
   10830:	ldr	r0, [pc, #48]	; 10868 <abort@plt+0x78>
   10834:	ldr	r1, [r4]
   10838:	bl	10a9c <abort@plt+0x2ac>
   1083c:	ldr	r3, [sp, #4]
   10840:	cmp	r3, #2
   10844:	bne	10858 <abort@plt+0x68>
   10848:	ldr	r0, [pc, #28]	; 1086c <abort@plt+0x7c>
   1084c:	ldr	r1, [r4, #4]
   10850:	bl	10a9c <abort@plt+0x2ac>
   10854:	bl	10960 <abort@plt+0x170>
   10858:	bl	109d4 <abort@plt+0x1e4>
   1085c:	bl	10ea4 <abort@plt+0x6b4>
   10860:	andeq	r1, r1, r8, lsr #5
   10864:	andeq	r1, r1, pc, asr #5
   10868:	muleq	r2, r4, r2
   1086c:	strdeq	r2, [r2], -r4
   10870:	mov	fp, #0
   10874:	mov	lr, #0
   10878:	pop	{r1}		; (ldr r1, [sp], #4)
   1087c:	mov	r2, sp
   10880:	push	{r2}		; (str r2, [sp, #-4]!)
   10884:	push	{r0}		; (str r0, [sp, #-4]!)
   10888:	ldr	ip, [pc, #16]	; 108a0 <abort@plt+0xb0>
   1088c:	push	{ip}		; (str ip, [sp, #-4]!)
   10890:	ldr	r0, [pc, #12]	; 108a4 <abort@plt+0xb4>
   10894:	ldr	r3, [pc, #12]	; 108a8 <abort@plt+0xb8>
   10898:	bl	10760 <__libc_start_main@plt>
   1089c:	bl	107f0 <abort@plt>
   108a0:	andeq	r1, r1, ip, ror r2
   108a4:	strdeq	r0, [r1], -ip
   108a8:	andeq	r1, r1, ip, lsl r2
   108ac:	ldr	r3, [pc, #20]	; 108c8 <abort@plt+0xd8>
   108b0:	ldr	r2, [pc, #20]	; 108cc <abort@plt+0xdc>
   108b4:	add	r3, pc, r3
   108b8:	ldr	r2, [r3, r2]
   108bc:	cmp	r2, #0
   108c0:	bxeq	lr
   108c4:	b	10778 <__gmon_start__@plt>
   108c8:	andeq	r1, r1, r4, asr #14
   108cc:	andeq	r0, r0, r4, rrx
   108d0:	ldr	r0, [pc, #24]	; 108f0 <abort@plt+0x100>
   108d4:	ldr	r3, [pc, #24]	; 108f4 <abort@plt+0x104>
   108d8:	cmp	r3, r0
   108dc:	bxeq	lr
   108e0:	ldr	r3, [pc, #16]	; 108f8 <abort@plt+0x108>
   108e4:	cmp	r3, #0
   108e8:	bxeq	lr
   108ec:	bx	r3
   108f0:	andeq	r2, r2, r8, ror r0
   108f4:	andeq	r2, r2, r8, ror r0
   108f8:	andeq	r0, r0, r0
   108fc:	ldr	r0, [pc, #36]	; 10928 <abort@plt+0x138>
   10900:	ldr	r1, [pc, #36]	; 1092c <abort@plt+0x13c>
   10904:	sub	r1, r1, r0
   10908:	asr	r1, r1, #2
   1090c:	add	r1, r1, r1, lsr #31
   10910:	asrs	r1, r1, #1
   10914:	bxeq	lr
   10918:	ldr	r3, [pc, #16]	; 10930 <abort@plt+0x140>
   1091c:	cmp	r3, #0
   10920:	bxeq	lr
   10924:	bx	r3
   10928:	andeq	r2, r2, r8, ror r0
   1092c:	andeq	r2, r2, r8, ror r0
   10930:	andeq	r0, r0, r0
   10934:	push	{r4, lr}
   10938:	ldr	r4, [pc, #24]	; 10958 <abort@plt+0x168>
   1093c:	ldrb	r3, [r4]
   10940:	cmp	r3, #0
   10944:	popne	{r4, pc}
   10948:	bl	108d0 <abort@plt+0xe0>
   1094c:	mov	r3, #1
   10950:	strb	r3, [r4]
   10954:	pop	{r4, pc}
   10958:	andeq	r2, r2, r8, lsl #1
   1095c:	b	108fc <abort@plt+0x10c>
   10960:	ldr	r3, [pc, #100]	; 109cc <abort@plt+0x1dc>
   10964:	ldr	r2, [pc, #100]	; 109d0 <abort@plt+0x1e0>
   10968:	ldr	r1, [r3]
   1096c:	add	r3, r3, #16
   10970:	ldr	r0, [r2]
   10974:	add	r2, r2, #16
   10978:	sub	r1, r1, r0
   1097c:	ldr	r0, [r2, #-12]
   10980:	str	r1, [r3, #-16]
   10984:	ldr	r1, [r3, #-12]
   10988:	sub	r1, r1, r0
   1098c:	ldr	r0, [r2, #-8]
   10990:	str	r1, [r3, #-12]
   10994:	ldr	r1, [r3, #-8]
   10998:	sub	r1, r1, r0
   1099c:	str	r1, [r3, #-8]
   109a0:	mov	r1, #1
   109a4:	ldr	r0, [r3]
   109a8:	add	r1, r1, #1
   109ac:	ldr	ip, [r2], #4
   109b0:	sub	r0, r0, ip
   109b4:	str	r0, [r3], #4
   109b8:	uxth	r0, r1
   109bc:	cmp	r0, #101	; 0x65
   109c0:	sxth	r1, r0
   109c4:	bne	109a4 <abort@plt+0x1b4>
   109c8:	bx	lr
   109cc:	muleq	r2, r4, r2
   109d0:	strdeq	r2, [r2], -r4
   109d4:	ldr	r3, [pc, #64]	; 10a1c <abort@plt+0x22c>
   109d8:	push	{r4, r5, r6, r7, r8, lr}
   109dc:	mov	r4, #0
   109e0:	ldr	r8, [pc, #56]	; 10a20 <abort@plt+0x230>
   109e4:	add	r5, r3, #12
   109e8:	ldr	r7, [r3]
   109ec:	ldr	r6, [r3, #8]
   109f0:	mla	r2, r4, r6, r7
   109f4:	mov	r1, r4
   109f8:	mov	r0, r8
   109fc:	bl	1070c <printf@plt>
   10a00:	ldr	r3, [r5], #4
   10a04:	mla	r7, r4, r3, r7
   10a08:	add	r4, r4, #1
   10a0c:	sub	r6, r6, r3
   10a10:	cmp	r4, #101	; 0x65
   10a14:	bne	109f0 <abort@plt+0x200>
   10a18:	pop	{r4, r5, r6, r7, r8, pc}
   10a1c:	muleq	r2, r4, r2
   10a20:	muleq	r1, ip, r2
   10a24:	mov	r2, r0
   10a28:	push	{r4, lr}
   10a2c:	mov	r1, #99	; 0x63
   10a30:	ldr	r0, [pc, #12]	; 10a44 <abort@plt+0x254>
   10a34:	bl	10730 <fgets@plt>
   10a38:	adds	r0, r0, #0
   10a3c:	movne	r0, #1
   10a40:	pop	{r4, pc}
   10a44:	andeq	r2, r2, r9, lsl #1
   10a48:	push	{r4, r5, r6, lr}
   10a4c:	mov	r5, r1
   10a50:	mov	r4, r2
   10a54:	bl	10a24 <abort@plt+0x234>
   10a58:	cmp	r0, #0
   10a5c:	bne	10a68 <abort@plt+0x278>
   10a60:	mov	r0, #0
   10a64:	pop	{r4, r5, r6, pc}
   10a68:	mov	r2, r5
   10a6c:	ldr	r1, [pc, #32]	; 10a94 <abort@plt+0x2a4>
   10a70:	ldr	r0, [pc, #32]	; 10a98 <abort@plt+0x2a8>
   10a74:	bl	107b4 <__isoc99_sscanf@plt>
   10a78:	cmp	r0, #1
   10a7c:	bne	10a60 <abort@plt+0x270>
   10a80:	ldr	r3, [r4]
   10a84:	ldr	r2, [r5]
   10a88:	add	r3, r3, r2
   10a8c:	str	r3, [r4]
   10a90:	pop	{r4, r5, r6, pc}
   10a94:	andeq	r1, r1, sp, asr #6
   10a98:	andeq	r2, r2, r9, lsl #1
   10a9c:	push	{r4, r5, r6, r7, lr}
   10aa0:	mov	r6, r1
   10aa4:	sub	sp, sp, #20
   10aa8:	mov	r5, r0
   10aac:	mov	r0, r6
   10ab0:	ldr	r1, [pc, #324]	; 10bfc <abort@plt+0x40c>
   10ab4:	bl	10fc0 <error@@Base+0xc4>
   10ab8:	mov	r4, r0
   10abc:	bl	10a24 <abort@plt+0x234>
   10ac0:	cmp	r0, #0
   10ac4:	beq	10be8 <abort@plt+0x3f8>
   10ac8:	mov	r2, #42	; 0x2a
   10acc:	ldr	r1, [pc, #300]	; 10c00 <abort@plt+0x410>
   10ad0:	ldr	r0, [pc, #300]	; 10c04 <abort@plt+0x414>
   10ad4:	bl	107e4 <strncmp@plt>
   10ad8:	cmp	r0, #0
   10adc:	bne	10be8 <abort@plt+0x3f8>
   10ae0:	mov	r0, r4
   10ae4:	bl	10a24 <abort@plt+0x234>
   10ae8:	cmp	r0, #0
   10aec:	beq	10be8 <abort@plt+0x3f8>
   10af0:	ldr	r1, [pc, #272]	; 10c08 <abort@plt+0x418>
   10af4:	ldr	r0, [pc, #264]	; 10c04 <abort@plt+0x414>
   10af8:	bl	10700 <strcmp@plt>
   10afc:	cmp	r0, #0
   10b00:	bne	10be8 <abort@plt+0x3f8>
   10b04:	mov	r2, r5
   10b08:	add	r1, sp, #8
   10b0c:	mov	r0, r4
   10b10:	bl	10a48 <abort@plt+0x258>
   10b14:	cmp	r0, #0
   10b18:	beq	10be8 <abort@plt+0x3f8>
   10b1c:	add	r2, r5, #4
   10b20:	add	r1, sp, #8
   10b24:	mov	r0, r4
   10b28:	bl	10a48 <abort@plt+0x258>
   10b2c:	cmp	r0, #0
   10b30:	beq	10be8 <abort@plt+0x3f8>
   10b34:	add	r2, r5, #8
   10b38:	add	r1, sp, #4
   10b3c:	mov	r0, r4
   10b40:	bl	10a48 <abort@plt+0x258>
   10b44:	cmp	r0, #0
   10b48:	beq	10be8 <abort@plt+0x3f8>
   10b4c:	ldr	r3, [sp, #4]
   10b50:	cmp	r3, #0
   10b54:	ble	10bbc <abort@plt+0x3cc>
   10b58:	mov	r0, r4
   10b5c:	bl	10a24 <abort@plt+0x234>
   10b60:	cmp	r0, #0
   10b64:	beq	10bbc <abort@plt+0x3cc>
   10b68:	mov	r0, r4
   10b6c:	bl	10a24 <abort@plt+0x234>
   10b70:	cmp	r0, #0
   10b74:	beq	10bbc <abort@plt+0x3cc>
   10b78:	mov	r0, r4
   10b7c:	bl	10a24 <abort@plt+0x234>
   10b80:	cmp	r0, #0
   10b84:	beq	10bbc <abort@plt+0x3cc>
   10b88:	ldr	r7, [pc, #124]	; 10c0c <abort@plt+0x41c>
   10b8c:	ldr	r6, [pc, #112]	; 10c04 <abort@plt+0x414>
   10b90:	mov	r0, r4
   10b94:	bl	10a24 <abort@plt+0x234>
   10b98:	cmp	r0, #0
   10b9c:	beq	10bbc <abort@plt+0x3cc>
   10ba0:	add	r3, sp, #12
   10ba4:	add	r2, sp, #8
   10ba8:	mov	r1, r7
   10bac:	mov	r0, r6
   10bb0:	bl	107b4 <__isoc99_sscanf@plt>
   10bb4:	cmp	r0, #2
   10bb8:	beq	10bcc <abort@plt+0x3dc>
   10bbc:	mov	r0, r4
   10bc0:	bl	10de4 <abort@plt+0x5f4>
   10bc4:	add	sp, sp, #20
   10bc8:	pop	{r4, r5, r6, r7, pc}
   10bcc:	ldr	r1, [sp, #8]
   10bd0:	ldr	r3, [sp, #12]
   10bd4:	add	r3, r5, r3, lsl #2
   10bd8:	ldr	r2, [r3, #12]
   10bdc:	add	r2, r2, r1
   10be0:	str	r2, [r3, #12]
   10be4:	b	10b90 <abort@plt+0x3a0>
   10be8:	cmp	r6, #0
   10bec:	ldr	r1, [pc, #28]	; 10c10 <abort@plt+0x420>
   10bf0:	movne	r1, r6
   10bf4:	ldr	r0, [pc, #24]	; 10c14 <abort@plt+0x424>
   10bf8:	bl	10f80 <error@@Base+0x84>
   10bfc:	andeq	r1, r1, sp, ror #5
   10c00:	andeq	r1, r1, pc, ror #5
   10c04:	andeq	r2, r2, r9, lsl #1
   10c08:	andeq	r1, r1, ip, lsl r3
   10c0c:	andeq	r1, r1, r9, asr #6
   10c10:	andeq	r1, r1, r7, ror #5
   10c14:	andeq	r1, r1, r1, asr r3
   10c18:	push	{r4, r5, r6, r7, r8, lr}
   10c1c:	mov	r4, r0
   10c20:	mov	r0, r1
   10c24:	ldr	r1, [pc, #168]	; 10cd4 <abort@plt+0x4e4>
   10c28:	bl	10fc0 <error@@Base+0xc4>
   10c2c:	mov	r5, r0
   10c30:	ldr	r3, [pc, #160]	; 10cd8 <abort@plt+0x4e8>
   10c34:	ldr	r2, [pc, #160]	; 10cdc <abort@plt+0x4ec>
   10c38:	ldr	r1, [pc, #160]	; 10ce0 <abort@plt+0x4f0>
   10c3c:	bl	107a8 <fprintf@plt>
   10c40:	ldr	r3, [pc, #156]	; 10ce4 <abort@plt+0x4f4>
   10c44:	mov	r0, r5
   10c48:	ldr	r1, [pc, #152]	; 10ce8 <abort@plt+0x4f8>
   10c4c:	ldr	r2, [r4]
   10c50:	bl	107a8 <fprintf@plt>
   10c54:	ldr	r3, [pc, #144]	; 10cec <abort@plt+0x4fc>
   10c58:	mov	r0, r5
   10c5c:	ldr	r1, [pc, #132]	; 10ce8 <abort@plt+0x4f8>
   10c60:	ldr	r2, [r4, #4]
   10c64:	bl	107a8 <fprintf@plt>
   10c68:	ldr	r3, [pc, #128]	; 10cf0 <abort@plt+0x500>
   10c6c:	mov	r0, r5
   10c70:	ldr	r1, [pc, #112]	; 10ce8 <abort@plt+0x4f8>
   10c74:	ldr	r2, [r4, #8]
   10c78:	bl	107a8 <fprintf@plt>
   10c7c:	ldr	r3, [r4, #8]
   10c80:	cmp	r3, #0
   10c84:	ble	10cc8 <abort@plt+0x4d8>
   10c88:	ldr	r7, [pc, #100]	; 10cf4 <abort@plt+0x504>
   10c8c:	mov	r1, r5
   10c90:	add	r4, r4, #16
   10c94:	mov	r6, #1
   10c98:	ldr	r0, [pc, #88]	; 10cf8 <abort@plt+0x508>
   10c9c:	bl	107d8 <fputs@plt>
   10ca0:	ldr	r2, [r4], #4
   10ca4:	cmp	r2, #0
   10ca8:	ble	10cbc <abort@plt+0x4cc>
   10cac:	mov	r3, r6
   10cb0:	mov	r1, r7
   10cb4:	mov	r0, r5
   10cb8:	bl	107a8 <fprintf@plt>
   10cbc:	add	r6, r6, #1
   10cc0:	cmp	r6, #101	; 0x65
   10cc4:	bne	10ca0 <abort@plt+0x4b0>
   10cc8:	mov	r0, r5
   10ccc:	pop	{r4, r5, r6, r7, r8, lr}
   10cd0:	b	10de4 <abort@plt+0x5f4>
   10cd4:	andeq	r1, r1, r3, ror #6
   10cd8:	andeq	r1, r1, ip, lsl r3
   10cdc:	andeq	r1, r1, pc, ror #5
   10ce0:	andeq	r1, r1, r5, ror #6
   10ce4:	andeq	r1, r1, sl, ror #6
   10ce8:	andeq	r1, r1, r5, ror r3
   10cec:	andeq	r1, r1, r0, lsl #7
   10cf0:	andeq	r1, r1, sl, lsl #7
   10cf4:	andeq	r1, r1, sl, lsr #7
   10cf8:	muleq	r1, r0, r3
   10cfc:	ldr	r3, [pc, #56]	; 10d3c <abort@plt+0x54c>
   10d00:	push	{r4, r5, lr}
   10d04:	sub	sp, sp, #116	; 0x74
   10d08:	mov	r5, r0
   10d0c:	ldr	r4, [r3]
   10d10:	bl	10784 <getpid@plt>
   10d14:	ldr	r1, [pc, #36]	; 10d40 <abort@plt+0x550>
   10d18:	mov	r3, r0
   10d1c:	add	r0, sp, #12
   10d20:	str	r5, [sp]
   10d24:	mov	r2, r4
   10d28:	bl	107cc <sprintf@plt>
   10d2c:	add	r0, sp, #12
   10d30:	bl	1073c <strdup@plt>
   10d34:	add	sp, sp, #116	; 0x74
   10d38:	pop	{r4, r5, pc}
   10d3c:	andeq	r2, r2, r8, lsr r4
   10d40:			; <UNDEFINED> instruction: 0x000113b5
   10d44:	ldr	r3, [pc, #84]	; 10da0 <abort@plt+0x5b0>
   10d48:	mov	r5, r0
   10d4c:	push	{r7, lr}
   10d50:	ldr	r3, [r3]
   10d54:	cmp	r3, #0
   10d58:	beq	10d60 <abort@plt+0x570>
   10d5c:	blx	r3
   10d60:	ldr	r6, [pc, #60]	; 10da4 <abort@plt+0x5b4>
   10d64:	mov	r4, #1
   10d68:	ldrsh	r3, [r6]
   10d6c:	cmp	r3, r4
   10d70:	bge	10d7c <abort@plt+0x58c>
   10d74:	mov	r0, r5
   10d78:	bl	10790 <exit@plt>
   10d7c:	mov	r0, r4
   10d80:	add	r4, r4, #1
   10d84:	bl	10cfc <abort@plt+0x50c>
   10d88:	mov	r7, r0
   10d8c:	sxth	r4, r4
   10d90:	bl	10748 <unlink@plt>
   10d94:	mov	r0, r7
   10d98:	bl	10724 <free@plt>
   10d9c:	b	10d68 <abort@plt+0x578>
   10da0:	andeq	r2, r2, ip, lsr r4
   10da4:	andeq	r2, r2, lr, ror #1
   10da8:	sub	r2, r0, #1
   10dac:	sub	r1, r1, #1
   10db0:	ldrb	r3, [r2, #1]!
   10db4:	ldrb	r0, [r1, #1]!
   10db8:	cmp	r3, #0
   10dbc:	beq	10dd8 <abort@plt+0x5e8>
   10dc0:	cmp	r3, r0
   10dc4:	beq	10db0 <abort@plt+0x5c0>
   10dc8:	cmp	r3, r0
   10dcc:	mvncc	r0, #0
   10dd0:	movcs	r0, #1
   10dd4:	bx	lr
   10dd8:	cmp	r0, #0
   10ddc:	bxeq	lr
   10de0:	b	10dc8 <abort@plt+0x5d8>
   10de4:	ldr	r2, [pc, #28]	; 10e08 <abort@plt+0x618>
   10de8:	ldr	r2, [r2]
   10dec:	cmp	r2, r0
   10df0:	bxeq	lr
   10df4:	ldr	r2, [pc, #16]	; 10e0c <abort@plt+0x61c>
   10df8:	ldr	r2, [r2]
   10dfc:	cmp	r2, r0
   10e00:	bxeq	lr
   10e04:	b	107c0 <fclose@plt>
   10e08:	andeq	r2, r2, r0, lsl #1
   10e0c:	andeq	r2, r2, r4, lsl #1
   10e10:	push	{lr}		; (str lr, [sp, #-4]!)
   10e14:	sub	sp, sp, #92	; 0x5c
   10e18:	mov	r1, sp
   10e1c:	bl	11280 <error@@Base+0x384>
   10e20:	clz	r0, r0
   10e24:	lsr	r0, r0, #5
   10e28:	add	sp, sp, #92	; 0x5c
   10e2c:	pop	{pc}		; (ldr pc, [sp], #4)
   10e30:	ldr	r3, [pc, #36]	; 10e5c <abort@plt+0x66c>
   10e34:	push	{r4, lr}
   10e38:	ldrh	r0, [r3]
   10e3c:	add	r0, r0, #1
   10e40:	sxth	r0, r0
   10e44:	strh	r0, [r3]
   10e48:	bl	10cfc <abort@plt+0x50c>
   10e4c:	mov	r4, r0
   10e50:	bl	10748 <unlink@plt>
   10e54:	mov	r0, r4
   10e58:	pop	{r4, pc}
   10e5c:	andeq	r2, r2, lr, ror #1
   10e60:	push	{r4, lr}
   10e64:	mov	r4, r0
   10e68:	bl	1079c <strlen@plt>
   10e6c:	sub	r0, r0, #1
   10e70:	add	r1, r4, #1
   10e74:	sxth	r0, r0
   10e78:	tst	r0, #32768	; 0x8000
   10e7c:	bne	10e90 <abort@plt+0x6a0>
   10e80:	sub	r3, r0, #1
   10e84:	ldrb	r2, [r1, r3]
   10e88:	cmp	r2, #47	; 0x2f
   10e8c:	bne	10e9c <abort@plt+0x6ac>
   10e90:	add	r0, r0, #1
   10e94:	add	r0, r4, r0
   10e98:	pop	{r4, pc}
   10e9c:	mov	r0, r3
   10ea0:	b	10e78 <abort@plt+0x688>
   10ea4:	push	{r4, lr}
   10ea8:	mov	r0, #0
   10eac:	bl	10d44 <abort@plt+0x554>
   10eb0:	ldr	r2, [pc, #52]	; 10eec <abort@plt+0x6fc>
   10eb4:	push	{r4, lr}
   10eb8:	ldr	r2, [r2]
   10ebc:	cmp	r2, #0
   10ec0:	beq	10ecc <abort@plt+0x6dc>
   10ec4:	blx	r2
   10ec8:	bl	10ea4 <abort@plt+0x6b4>
   10ecc:	mov	r3, r0
   10ed0:	ldr	r2, [pc, #24]	; 10ef0 <abort@plt+0x700>
   10ed4:	ldr	r0, [pc, #24]	; 10ef4 <abort@plt+0x704>
   10ed8:	ldr	r1, [pc, #24]	; 10ef8 <abort@plt+0x708>
   10edc:	ldr	r2, [r2]
   10ee0:	ldr	r0, [r0]
   10ee4:	bl	107a8 <fprintf@plt>
   10ee8:	b	10ec8 <abort@plt+0x6d8>
   10eec:	andeq	r2, r2, r4, lsr r4
   10ef0:	andeq	r2, r2, r8, lsr r4
   10ef4:	andeq	r2, r2, r8, ror r0
   10ef8:	andeq	r1, r1, r3, asr #7

00010efc <error@@Base>:
   10efc:	mov	r3, r0
   10f00:	ldr	r2, [pc, #32]	; 10f28 <error@@Base+0x2c>
   10f04:	push	{r4, lr}
   10f08:	ldr	r0, [pc, #28]	; 10f2c <error@@Base+0x30>
   10f0c:	ldr	r1, [pc, #28]	; 10f30 <error@@Base+0x34>
   10f10:	ldr	r2, [r2]
   10f14:	ldr	r0, [r0]
   10f18:	bl	107a8 <fprintf@plt>
   10f1c:	ldr	r3, [pc, #16]	; 10f34 <error@@Base+0x38>
   10f20:	ldr	r0, [r3]
   10f24:	bl	10d44 <abort@plt+0x554>
   10f28:	andeq	r2, r2, r8, lsr r4
   10f2c:	andeq	r2, r2, r8, ror r0
   10f30:	ldrdeq	r1, [r1], -r2
   10f34:	andeq	r2, r2, r0, ror r0
   10f38:	push	{r4, lr}
   10f3c:	bl	106f4 <calloc@plt>
   10f40:	cmp	r0, #0
   10f44:	popne	{r4, pc}
   10f48:	ldr	r0, [pc]	; 10f50 <error@@Base+0x54>
   10f4c:	bl	10efc <error@@Base>
   10f50:	ldrdeq	r1, [r1], -sl
   10f54:	ldr	r3, [pc, #28]	; 10f78 <error@@Base+0x7c>
   10f58:	ldrb	r2, [r3, #2]
   10f5c:	cmp	r2, #0
   10f60:	bxne	lr
   10f64:	mov	r2, #1
   10f68:	push	{r4, lr}
   10f6c:	ldr	r0, [pc, #8]	; 10f7c <error@@Base+0x80>
   10f70:	strb	r2, [r3, #2]
   10f74:	bl	10efc <error@@Base>
   10f78:	andeq	r2, r2, lr, ror #1
   10f7c:	strdeq	r1, [r1], -r4
   10f80:	push	{r0, r1, r2, lr}
   10f84:	mov	r3, r0
   10f88:	ldr	r2, [pc, #32]	; 10fb0 <error@@Base+0xb4>
   10f8c:	str	r1, [sp]
   10f90:	ldr	r0, [pc, #28]	; 10fb4 <error@@Base+0xb8>
   10f94:	ldr	r1, [pc, #28]	; 10fb8 <error@@Base+0xbc>
   10f98:	ldr	r2, [r2]
   10f9c:	ldr	r0, [r0]
   10fa0:	bl	107a8 <fprintf@plt>
   10fa4:	ldr	r3, [pc, #16]	; 10fbc <error@@Base+0xc0>
   10fa8:	ldr	r0, [r3]
   10fac:	bl	10d44 <abort@plt+0x554>
   10fb0:	andeq	r2, r2, r8, lsr r4
   10fb4:	andeq	r2, r2, r8, ror r0
   10fb8:	andeq	r1, r1, r3, lsl #8
   10fbc:	andeq	r2, r2, r0, ror r0
   10fc0:	push	{r4, r5, r6, lr}
   10fc4:	subs	r4, r0, #0
   10fc8:	mov	r5, r1
   10fcc:	bne	10fe8 <error@@Base+0xec>
   10fd0:	ldrb	r3, [r1]
   10fd4:	cmp	r3, #114	; 0x72
   10fd8:	ldreq	r3, [pc, #44]	; 1100c <error@@Base+0x110>
   10fdc:	ldrne	r3, [pc, #44]	; 11010 <error@@Base+0x114>
   10fe0:	ldr	r0, [r3]
   10fe4:	pop	{r4, r5, r6, pc}
   10fe8:	bl	10718 <fopen@plt>
   10fec:	cmp	r0, #0
   10ff0:	popne	{r4, r5, r6, pc}
   10ff4:	mov	r1, r4
   10ff8:	ldrb	r3, [r5]
   10ffc:	cmp	r3, #119	; 0x77
   11000:	ldreq	r0, [pc, #12]	; 11014 <error@@Base+0x118>
   11004:	ldrne	r0, [pc, #12]	; 11018 <error@@Base+0x11c>
   11008:	bl	10f80 <error@@Base+0x84>
   1100c:	andeq	r2, r2, r0, lsl #1
   11010:	andeq	r2, r2, r4, lsl #1
   11014:	andeq	r1, r1, r0, lsl r4
   11018:	andeq	r1, r1, r6, lsr #8
   1101c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11020:	mov	r8, r0
   11024:	mov	r7, r1
   11028:	mov	r9, r3
   1102c:	ldr	r0, [r1]
   11030:	str	r2, [sp]
   11034:	bl	10e60 <abort@plt+0x670>
   11038:	ldr	r3, [pc, #396]	; 111cc <error@@Base+0x2d0>
   1103c:	ldr	r1, [pc, #396]	; 111d0 <error@@Base+0x2d4>
   11040:	str	r0, [r3]
   11044:	mov	r0, #2
   11048:	bl	1076c <__sysv_signal@plt>
   1104c:	ldr	r1, [pc, #380]	; 111d0 <error@@Base+0x2d4>
   11050:	mov	r0, #15
   11054:	bl	1076c <__sysv_signal@plt>
   11058:	ldr	r4, [r8]
   1105c:	cmp	r4, #1
   11060:	movne	r6, #0
   11064:	movne	r4, #1
   11068:	bne	1118c <error@@Base+0x290>
   1106c:	ldr	r3, [pc, #352]	; 111d4 <error@@Base+0x2d8>
   11070:	ldrb	r6, [r3, #4]
   11074:	cmp	r6, #0
   11078:	beq	1118c <error@@Base+0x290>
   1107c:	ldr	r0, [sp]
   11080:	bl	10eb0 <abort@plt+0x6c0>
   11084:	ldr	r5, [r7, r4, lsl #2]
   11088:	lsl	sl, r4, #2
   1108c:	ldrb	r3, [r5]
   11090:	cmp	r3, #45	; 0x2d
   11094:	bne	111bc <error@@Base+0x2c0>
   11098:	ldrb	r3, [r5, #1]
   1109c:	cmp	r3, #0
   110a0:	str	r3, [sp, #4]
   110a4:	beq	111bc <error@@Base+0x2c0>
   110a8:	mov	r0, r5
   110ac:	bl	1079c <strlen@plt>
   110b0:	mov	r2, r0
   110b4:	mov	r1, r5
   110b8:	ldr	r0, [pc, #280]	; 111d8 <error@@Base+0x2dc>
   110bc:	bl	107e4 <strncmp@plt>
   110c0:	cmp	r0, #0
   110c4:	beq	1107c <error@@Base+0x180>
   110c8:	add	r0, r4, #1
   110cc:	ldr	r3, [sp, #4]
   110d0:	cmp	r0, fp
   110d4:	addlt	sl, r7, sl
   110d8:	movge	r1, #0
   110dc:	ldrlt	r1, [sl, #4]
   110e0:	cmp	r9, #0
   110e4:	beq	111a4 <error@@Base+0x2a8>
   110e8:	mov	ip, #0
   110ec:	sxth	r2, ip
   110f0:	add	r2, r2, r2, lsl #1
   110f4:	add	lr, r9, r2, lsl #2
   110f8:	ldrb	r2, [r9, r2, lsl #2]
   110fc:	cmp	r2, #0
   11100:	beq	111a4 <error@@Base+0x2a8>
   11104:	cmp	r3, r2
   11108:	add	ip, ip, #1
   1110c:	bne	110ec <error@@Base+0x1f0>
   11110:	ldr	r3, [lr, #4]
   11114:	cmp	r3, #0
   11118:	bne	1114c <error@@Base+0x250>
   1111c:	ldr	r3, [lr, #8]
   11120:	cmp	r3, #0
   11124:	beq	111a4 <error@@Base+0x2a8>
   11128:	ldrb	r2, [r5, #2]
   1112c:	cmp	r2, #0
   11130:	bne	111a4 <error@@Base+0x2a8>
   11134:	ldrb	r2, [r3]
   11138:	cmp	r2, #0
   1113c:	bne	111b0 <error@@Base+0x2b4>
   11140:	mov	r2, #1
   11144:	strb	r2, [r3]
   11148:	b	11184 <error@@Base+0x288>
   1114c:	ldrb	r2, [r5, #2]
   11150:	cmp	r1, #0
   11154:	cmpeq	r2, #0
   11158:	beq	1111c <error@@Base+0x220>
   1115c:	ldr	ip, [r3]
   11160:	cmp	ip, #0
   11164:	bne	111b0 <error@@Base+0x2b4>
   11168:	cmp	r2, #0
   1116c:	sxth	r0, r0
   11170:	addne	r1, r5, #2
   11174:	str	r1, [r3]
   11178:	ldrb	r3, [r5, #2]
   1117c:	cmp	r3, #0
   11180:	moveq	r4, r0
   11184:	add	r4, r4, #1
   11188:	sxth	r4, r4
   1118c:	ldr	fp, [r8]
   11190:	cmp	r4, fp
   11194:	blt	11084 <error@@Base+0x188>
   11198:	str	r6, [r8]
   1119c:	add	sp, sp, #12
   111a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   111a4:	ldr	r0, [pc, #48]	; 111dc <error@@Base+0x2e0>
   111a8:	mov	r1, r5
   111ac:	bl	10f80 <error@@Base+0x84>
   111b0:	mov	r1, r5
   111b4:	ldr	r0, [pc, #36]	; 111e0 <error@@Base+0x2e4>
   111b8:	b	111ac <error@@Base+0x2b0>
   111bc:	add	r3, r6, #1
   111c0:	str	r5, [r7, r6, lsl #2]
   111c4:	sxth	r6, r3
   111c8:	b	11184 <error@@Base+0x288>
   111cc:	andeq	r2, r2, r8, lsr r4
   111d0:	andeq	r0, r1, r4, asr pc
   111d4:	andeq	r2, r2, r0, ror r0
   111d8:	andeq	r1, r1, sl, lsr r4
   111dc:	andeq	r1, r1, r0, asr #8
   111e0:	andeq	r1, r1, pc, asr #8
   111e4:	push	{r0, r1, r2, lr}
   111e8:	mov	r3, r0
   111ec:	ldr	r2, [pc, #28]	; 11210 <error@@Base+0x314>
   111f0:	str	r1, [sp]
   111f4:	ldr	r0, [pc, #24]	; 11214 <error@@Base+0x318>
   111f8:	ldr	r1, [pc, #24]	; 11218 <error@@Base+0x31c>
   111fc:	ldr	r2, [r2]
   11200:	ldr	r0, [r0]
   11204:	bl	107a8 <fprintf@plt>
   11208:	add	sp, sp, #12
   1120c:	pop	{pc}		; (ldr pc, [sp], #4)
   11210:	andeq	r2, r2, r8, lsr r4
   11214:	andeq	r2, r2, r8, ror r0
   11218:	andeq	r1, r1, r3, lsl #8
   1121c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11220:	mov	r7, r0
   11224:	ldr	r6, [pc, #72]	; 11274 <error@@Base+0x378>
   11228:	ldr	r5, [pc, #72]	; 11278 <error@@Base+0x37c>
   1122c:	add	r6, pc, r6
   11230:	add	r5, pc, r5
   11234:	sub	r6, r6, r5
   11238:	mov	r8, r1
   1123c:	mov	r9, r2
   11240:	bl	106d4 <calloc@plt-0x20>
   11244:	asrs	r6, r6, #2
   11248:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1124c:	mov	r4, #0
   11250:	add	r4, r4, #1
   11254:	ldr	r3, [r5], #4
   11258:	mov	r2, r9
   1125c:	mov	r1, r8
   11260:	mov	r0, r7
   11264:	blx	r3
   11268:	cmp	r6, r4
   1126c:	bne	11250 <error@@Base+0x354>
   11270:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11274:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   11278:	andeq	r0, r1, r8, asr #25
   1127c:	bx	lr
   11280:	mov	r2, r1
   11284:	mov	r1, r0
   11288:	mov	r0, #3
   1128c:	b	10754 <__xstat@plt>

Disassembly of section .fini:

00011290 <.fini>:
   11290:	push	{r3, lr}
   11294:	pop	{r3, pc}
