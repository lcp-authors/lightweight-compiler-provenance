
../repos/charybdis/modules/.libs/m_capab.so:     file format elf32-littlearm


Disassembly of section .init:

0000053c <_init>:
 53c:	push	{r3, lr}
 540:	bl	5d4 <call_weak_fn>
 544:	pop	{r3, pc}

Disassembly of section .plt:

00000548 <.plt>:
 548:	push	{lr}		; (str lr, [sp, #-4]!)
 54c:	ldr	lr, [pc, #4]	; 558 <.plt+0x10>
 550:	add	lr, pc, lr
 554:	ldr	pc, [lr, #8]!
 558:	.word	0x00010aa8

0000055c <__cxa_finalize@plt>:
 55c:	add	ip, pc, #0, 12
 560:	add	ip, ip, #16, 20	; 0x10000
 564:	ldr	pc, [ip, #2728]!	; 0xaa8

00000568 <free@plt>:
 568:	add	ip, pc, #0, 12
 56c:	add	ip, ip, #16, 20	; 0x10000
 570:	ldr	pc, [ip, #2720]!	; 0xaa0

00000574 <rb_outofmemory@plt>:
 574:	add	ip, pc, #0, 12
 578:	add	ip, ip, #16, 20	; 0x10000
 57c:	ldr	pc, [ip, #2712]!	; 0xa98

00000580 <strcpy@plt>:
 580:	add	ip, pc, #0, 12
 584:	add	ip, ip, #16, 20	; 0x10000
 588:	ldr	pc, [ip, #2704]!	; 0xa90

0000058c <malloc@plt>:
 58c:	add	ip, pc, #0, 12
 590:	add	ip, ip, #16, 20	; 0x10000
 594:	ldr	pc, [ip, #2696]!	; 0xa88

00000598 <__gmon_start__@plt>:
 598:	add	ip, pc, #0, 12
 59c:	add	ip, ip, #16, 20	; 0x10000
 5a0:	ldr	pc, [ip, #2688]!	; 0xa80

000005a4 <strlen@plt>:
 5a4:	add	ip, pc, #0, 12
 5a8:	add	ip, ip, #16, 20	; 0x10000
 5ac:	ldr	pc, [ip, #2680]!	; 0xa78

000005b0 <capability_get@plt>:
 5b0:	add	ip, pc, #0, 12
 5b4:	add	ip, ip, #16, 20	; 0x10000
 5b8:	ldr	pc, [ip, #2672]!	; 0xa70

000005bc <rb_strtok_r@plt>:
 5bc:	add	ip, pc, #0, 12
 5c0:	add	ip, ip, #16, 20	; 0x10000
 5c4:	ldr	pc, [ip, #2664]!	; 0xa68

000005c8 <exit_client@plt>:
 5c8:	add	ip, pc, #0, 12
 5cc:	add	ip, ip, #16, 20	; 0x10000
 5d0:	ldr	pc, [ip, #2656]!	; 0xa60

Disassembly of section .text:

000005d4 <call_weak_fn>:
 5d4:	ldr	r3, [pc, #20]	; 5f0 <call_weak_fn+0x1c>
 5d8:	ldr	r2, [pc, #20]	; 5f4 <call_weak_fn+0x20>
 5dc:	add	r3, pc, r3
 5e0:	ldr	r2, [r3, r2]
 5e4:	cmp	r2, #0
 5e8:	bxeq	lr
 5ec:	b	598 <__gmon_start__@plt>
 5f0:	.word	0x00010a1c
 5f4:	.word	0x00000048

000005f8 <deregister_tm_clones>:
 5f8:	ldr	r0, [pc, #44]	; 62c <deregister_tm_clones+0x34>
 5fc:	ldr	r3, [pc, #44]	; 630 <deregister_tm_clones+0x38>
 600:	add	r0, pc, r0
 604:	add	r3, pc, r3
 608:	cmp	r3, r0
 60c:	ldr	r3, [pc, #32]	; 634 <deregister_tm_clones+0x3c>
 610:	add	r3, pc, r3
 614:	bxeq	lr
 618:	ldr	r2, [pc, #24]	; 638 <deregister_tm_clones+0x40>
 61c:	ldr	r3, [r3, r2]
 620:	cmp	r3, #0
 624:	bxeq	lr
 628:	bx	r3
 62c:	.word	0x00010b08
 630:	.word	0x00010b04
 634:	.word	0x000109e8
 638:	.word	0x00000040

0000063c <register_tm_clones>:
 63c:	ldr	r0, [pc, #56]	; 67c <register_tm_clones+0x40>
 640:	ldr	r3, [pc, #56]	; 680 <register_tm_clones+0x44>
 644:	add	r0, pc, r0
 648:	add	r3, pc, r3
 64c:	sub	r1, r3, r0
 650:	ldr	r3, [pc, #44]	; 684 <register_tm_clones+0x48>
 654:	asr	r1, r1, #2
 658:	add	r3, pc, r3
 65c:	add	r1, r1, r1, lsr #31
 660:	asrs	r1, r1, #1
 664:	bxeq	lr
 668:	ldr	r2, [pc, #24]	; 688 <register_tm_clones+0x4c>
 66c:	ldr	r3, [r3, r2]
 670:	cmp	r3, #0
 674:	bxeq	lr
 678:	bx	r3
 67c:	.word	0x00010ac4
 680:	.word	0x00010ac0
 684:	.word	0x000109a0
 688:	.word	0x0000004c

0000068c <__do_global_dtors_aux>:
 68c:	ldr	r3, [pc, #76]	; 6e0 <__do_global_dtors_aux+0x54>
 690:	ldr	r2, [pc, #76]	; 6e4 <__do_global_dtors_aux+0x58>
 694:	add	r3, pc, r3
 698:	add	r2, pc, r2
 69c:	ldrb	r3, [r3]
 6a0:	cmp	r3, #0
 6a4:	bxne	lr
 6a8:	ldr	r3, [pc, #56]	; 6e8 <__do_global_dtors_aux+0x5c>
 6ac:	push	{r4, lr}
 6b0:	ldr	r3, [r2, r3]
 6b4:	cmp	r3, #0
 6b8:	beq	6c8 <__do_global_dtors_aux+0x3c>
 6bc:	ldr	r3, [pc, #40]	; 6ec <__do_global_dtors_aux+0x60>
 6c0:	ldr	r0, [pc, r3]
 6c4:	bl	55c <__cxa_finalize@plt>
 6c8:	bl	5f8 <deregister_tm_clones>
 6cc:	ldr	r3, [pc, #28]	; 6f0 <__do_global_dtors_aux+0x64>
 6d0:	mov	r2, #1
 6d4:	add	r3, pc, r3
 6d8:	strb	r2, [r3]
 6dc:	pop	{r4, pc}
 6e0:	.word	0x00010a74
 6e4:	.word	0x00010960
 6e8:	.word	0x00000038
 6ec:	.word	0x00010988
 6f0:	.word	0x00010a34

000006f4 <frame_dummy>:
 6f4:	b	63c <register_tm_clones>

000006f8 <mr_capab>:
 6f8:	strd	r4, [sp, #-36]!	; 0xffffffdc
 6fc:	strd	r6, [sp, #8]
 700:	strd	r8, [sp, #16]
 704:	strd	sl, [sp, #24]
 708:	str	lr, [sp, #32]
 70c:	add	fp, sp, #32
 710:	sub	sp, sp, #20
 714:	ldr	r9, [pc, #400]	; 8ac <mr_capab+0x1b4>
 718:	add	r9, pc, r9
 71c:	ldr	r2, [r1, #432]	; 0x1b0
 720:	cmp	r2, #0
 724:	beq	734 <mr_capab+0x3c>
 728:	ldr	r0, [r1, #24]
 72c:	cmp	r0, #0
 730:	beq	750 <mr_capab+0x58>
 734:	sub	sp, fp, #32
 738:	ldrd	r4, [sp]
 73c:	ldrd	r6, [sp, #8]
 740:	ldrd	r8, [sp, #16]
 744:	ldrd	sl, [sp, #24]
 748:	add	sp, sp, #32
 74c:	pop	{pc}		; (ldr pc, [sp], #4)
 750:	mov	sl, r3
 754:	mov	r5, r1
 758:	ldr	r1, [r2, #296]	; 0x128
 75c:	ldr	r3, [pc, #332]	; 8b0 <mr_capab+0x1b8>
 760:	ldr	r3, [r9, r3]
 764:	ldr	r3, [r3]
 768:	bics	r3, r1, r3
 76c:	bne	800 <mr_capab+0x108>
 770:	ldr	r3, [pc, #316]	; 8b4 <mr_capab+0x1bc>
 774:	ldr	r3, [r9, r3]
 778:	ldr	r3, [r3]
 77c:	orr	r3, r3, r1
 780:	str	r3, [r2, #296]	; 0x128
 784:	ldr	r3, [r5, #432]	; 0x1b0
 788:	ldr	r0, [r3, #288]	; 0x120
 78c:	cmp	r0, #0
 790:	beq	798 <mr_capab+0xa0>
 794:	bl	568 <free@plt>
 798:	ldr	r3, [fp, #4]
 79c:	ldr	r4, [r3, #4]
 7a0:	ldr	r7, [r5, #432]	; 0x1b0
 7a4:	mov	r0, r4
 7a8:	bl	5a4 <strlen@plt>
 7ac:	add	r0, r0, #1
 7b0:	bl	58c <malloc@plt>
 7b4:	subs	r6, r0, #0
 7b8:	beq	81c <mr_capab+0x124>
 7bc:	mov	r1, r4
 7c0:	mov	r0, r6
 7c4:	bl	580 <strcpy@plt>
 7c8:	str	r6, [r7, #288]	; 0x120
 7cc:	cmp	sl, #1
 7d0:	ble	734 <mr_capab+0x3c>
 7d4:	ldr	r3, [fp, #4]
 7d8:	add	r8, r3, #4
 7dc:	add	sl, r3, sl, lsl #2
 7e0:	sub	r6, fp, #40	; 0x28
 7e4:	ldr	r3, [pc, #204]	; 8b8 <mr_capab+0x1c0>
 7e8:	add	r3, pc, r3
 7ec:	str	r3, [fp, #-52]	; 0xffffffcc
 7f0:	ldr	r3, [pc, #196]	; 8bc <mr_capab+0x1c4>
 7f4:	add	r3, pc, r3
 7f8:	str	r3, [fp, #-48]	; 0xffffffd0
 7fc:	b	828 <mr_capab+0x130>
 800:	ldr	r3, [pc, #184]	; 8c0 <mr_capab+0x1c8>
 804:	add	r3, pc, r3
 808:	mov	r2, r5
 80c:	mov	r1, r5
 810:	mov	r0, r5
 814:	bl	5c8 <exit_client@plt>
 818:	b	734 <mr_capab+0x3c>
 81c:	bl	574 <rb_outofmemory@plt>
 820:	cmp	r8, sl
 824:	beq	734 <mr_capab+0x3c>
 828:	ldr	r4, [r8], #4
 82c:	mov	r0, r4
 830:	bl	5a4 <strlen@plt>
 834:	add	r0, r0, #8
 838:	bic	r0, r0, #7
 83c:	sub	sp, sp, r0
 840:	mov	r7, sp
 844:	mov	r1, r4
 848:	mov	r0, r7
 84c:	bl	580 <strcpy@plt>
 850:	mov	r2, r6
 854:	ldr	r1, [fp, #-52]	; 0xffffffcc
 858:	mov	r0, r7
 85c:	bl	5bc <rb_strtok_r@plt>
 860:	subs	r1, r0, #0
 864:	beq	820 <mr_capab+0x128>
 868:	ldr	r3, [pc, #84]	; 8c4 <mr_capab+0x1cc>
 86c:	ldr	r7, [r9, r3]
 870:	mov	r4, #0
 874:	mov	r2, r4
 878:	ldr	r0, [r7]
 87c:	bl	5b0 <capability_get@plt>
 880:	ldr	r2, [r5, #432]	; 0x1b0
 884:	ldr	r3, [r2, #296]	; 0x128
 888:	orr	r0, r3, r0
 88c:	str	r0, [r2, #296]	; 0x128
 890:	mov	r2, r6
 894:	ldr	r1, [fp, #-48]	; 0xffffffd0
 898:	mov	r0, r4
 89c:	bl	5bc <rb_strtok_r@plt>
 8a0:	subs	r1, r0, #0
 8a4:	bne	874 <mr_capab+0x17c>
 8a8:	b	820 <mr_capab+0x128>
 8ac:	.word	0x000108e0
 8b0:	.word	0x00000044
 8b4:	.word	0x00000034
 8b8:	.word	0x0000029c
 8bc:	.word	0x00000290
 8c0:	.word	0x00000268
 8c4:	.word	0x0000003c

000008c8 <me_gcap>:
 8c8:	strd	r4, [sp, #-32]!	; 0xffffffe0
 8cc:	strd	r6, [sp, #8]
 8d0:	strd	r8, [sp, #16]
 8d4:	str	fp, [sp, #24]
 8d8:	str	lr, [sp, #28]
 8dc:	add	fp, sp, #28
 8e0:	sub	sp, sp, #8
 8e4:	mov	r5, r2
 8e8:	ldr	r6, [fp, #4]
 8ec:	ldr	r7, [pc, #288]	; a14 <me_gcap+0x14c>
 8f0:	add	r7, pc, r7
 8f4:	ldr	r4, [r6, #4]
 8f8:	mov	r0, r4
 8fc:	bl	5a4 <strlen@plt>
 900:	add	r0, r0, #8
 904:	bic	r0, r0, #7
 908:	sub	sp, sp, r0
 90c:	mov	r8, sp
 910:	mov	r1, r4
 914:	mov	r0, r8
 918:	bl	580 <strcpy@plt>
 91c:	ldrh	r3, [r5, #80]	; 0x50
 920:	cmp	r3, #32
 924:	bne	9f4 <me_gcap+0x12c>
 928:	ldr	r2, [r5, #28]
 92c:	ldr	r3, [r2, #64]	; 0x40
 930:	cmp	r3, #0
 934:	beq	960 <me_gcap+0x98>
 938:	ldrb	r3, [r3]
 93c:	cmp	r3, #0
 940:	beq	960 <me_gcap+0x98>
 944:	mov	r3, #0
 948:	str	r3, [r2, #60]	; 0x3c
 94c:	ldr	r3, [r5, #28]
 950:	ldr	r0, [r3, #64]	; 0x40
 954:	cmp	r0, #0
 958:	beq	960 <me_gcap+0x98>
 95c:	bl	568 <free@plt>
 960:	ldr	r4, [r6, #4]
 964:	ldr	r9, [r5, #28]
 968:	mov	r0, r4
 96c:	bl	5a4 <strlen@plt>
 970:	add	r0, r0, #1
 974:	bl	58c <malloc@plt>
 978:	subs	r6, r0, #0
 97c:	beq	a10 <me_gcap+0x148>
 980:	mov	r1, r4
 984:	mov	r0, r6
 988:	bl	580 <strcpy@plt>
 98c:	str	r6, [r9, #64]	; 0x40
 990:	sub	r2, fp, #32
 994:	ldr	r1, [pc, #124]	; a18 <me_gcap+0x150>
 998:	add	r1, pc, r1
 99c:	mov	r0, r8
 9a0:	bl	5bc <rb_strtok_r@plt>
 9a4:	subs	r1, r0, #0
 9a8:	beq	9f4 <me_gcap+0x12c>
 9ac:	ldr	r3, [pc, #104]	; a1c <me_gcap+0x154>
 9b0:	ldr	r7, [r7, r3]
 9b4:	mov	r4, #0
 9b8:	ldr	r6, [pc, #96]	; a20 <me_gcap+0x158>
 9bc:	add	r6, pc, r6
 9c0:	mov	r2, r4
 9c4:	ldr	r0, [r7]
 9c8:	bl	5b0 <capability_get@plt>
 9cc:	ldr	r2, [r5, #28]
 9d0:	ldr	r3, [r2, #60]	; 0x3c
 9d4:	orr	r0, r3, r0
 9d8:	str	r0, [r2, #60]	; 0x3c
 9dc:	sub	r2, fp, #32
 9e0:	mov	r1, r6
 9e4:	mov	r0, r4
 9e8:	bl	5bc <rb_strtok_r@plt>
 9ec:	subs	r1, r0, #0
 9f0:	bne	9c0 <me_gcap+0xf8>
 9f4:	sub	sp, fp, #28
 9f8:	ldrd	r4, [sp]
 9fc:	ldrd	r6, [sp, #8]
 a00:	ldrd	r8, [sp, #16]
 a04:	ldr	fp, [sp, #24]
 a08:	add	sp, sp, #28
 a0c:	pop	{pc}		; (ldr pc, [sp], #4)
 a10:	bl	574 <rb_outofmemory@plt>
 a14:	.word	0x00010708
 a18:	.word	0x000000ec
 a1c:	.word	0x0000003c
 a20:	.word	0x000000c8

Disassembly of section .fini:

00000a24 <_fini>:
 a24:	push	{r3, lr}
 a28:	pop	{r3, pc}
