
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/test_json_printer:     file format elf32-littlearm


Disassembly of section .init:

00012854 <.init>:
   12854:	push	{r3, lr}
   12858:	bl	129dc <_start@@Base+0x3c>
   1285c:	pop	{r3, pc}

Disassembly of section .plt:

00012860 <raise@plt-0x14>:
   12860:	push	{lr}		; (str lr, [sp, #-4]!)
   12864:	ldr	lr, [pc, #4]	; 12870 <raise@plt-0x4>
   12868:	add	lr, pc, lr
   1286c:	ldr	pc, [lr, #8]!
   12870:	muleq	r2, r0, r7

00012874 <raise@plt>:
   12874:	add	ip, pc, #0, 12
   12878:	add	ip, ip, #32, 20	; 0x20000
   1287c:	ldr	pc, [ip, #1936]!	; 0x790

00012880 <strcmp@plt>:
   12880:	add	ip, pc, #0, 12
   12884:	add	ip, ip, #32, 20	; 0x20000
   12888:	ldr	pc, [ip, #1928]!	; 0x788

0001288c <fopen@plt>:
   1288c:	add	ip, pc, #0, 12
   12890:	add	ip, ip, #32, 20	; 0x20000
   12894:	ldr	pc, [ip, #1920]!	; 0x780

00012898 <memmove@plt>:
   12898:	add	ip, pc, #0, 12
   1289c:	add	ip, ip, #32, 20	; 0x20000
   128a0:	ldr	pc, [ip, #1912]!	; 0x778

000128a4 <free@plt>:
   128a4:	add	ip, pc, #0, 12
   128a8:	add	ip, ip, #32, 20	; 0x20000
   128ac:	ldr	pc, [ip, #1904]!	; 0x770

000128b0 <memcpy@plt>:
   128b0:	add	ip, pc, #0, 12
   128b4:	add	ip, ip, #32, 20	; 0x20000
   128b8:	ldr	pc, [ip, #1896]!	; 0x768

000128bc <ftell@plt>:
   128bc:	add	ip, pc, #0, 12
   128c0:	add	ip, ip, #32, 20	; 0x20000
   128c4:	ldr	pc, [ip, #1888]!	; 0x760

000128c8 <memcmp@plt>:
   128c8:	add	ip, pc, #0, 12
   128cc:	add	ip, ip, #32, 20	; 0x20000
   128d0:	ldr	pc, [ip, #1880]!	; 0x758

000128d4 <rewind@plt>:
   128d4:	add	ip, pc, #0, 12
   128d8:	add	ip, ip, #32, 20	; 0x20000
   128dc:	ldr	pc, [ip, #1872]!	; 0x750

000128e0 <realloc@plt>:
   128e0:	add	ip, pc, #0, 12
   128e4:	add	ip, ip, #32, 20	; 0x20000
   128e8:	ldr	pc, [ip, #1864]!	; 0x748

000128ec <fwrite@plt>:
   128ec:	add	ip, pc, #0, 12
   128f0:	add	ip, ip, #32, 20	; 0x20000
   128f4:	ldr	pc, [ip, #1856]!	; 0x740

000128f8 <puts@plt>:
   128f8:	add	ip, pc, #0, 12
   128fc:	add	ip, ip, #32, 20	; 0x20000
   12900:	ldr	pc, [ip, #1848]!	; 0x738

00012904 <malloc@plt>:
   12904:	add	ip, pc, #0, 12
   12908:	add	ip, ip, #32, 20	; 0x20000
   1290c:	ldr	pc, [ip, #1840]!	; 0x730

00012910 <__libc_start_main@plt>:
   12910:	add	ip, pc, #0, 12
   12914:	add	ip, ip, #32, 20	; 0x20000
   12918:	ldr	pc, [ip, #1832]!	; 0x728

0001291c <__gmon_start__@plt>:
   1291c:	add	ip, pc, #0, 12
   12920:	add	ip, ip, #32, 20	; 0x20000
   12924:	ldr	pc, [ip, #1824]!	; 0x720

00012928 <exit@plt>:
   12928:	add	ip, pc, #0, 12
   1292c:	add	ip, ip, #32, 20	; 0x20000
   12930:	ldr	pc, [ip, #1816]!	; 0x718

00012934 <fprintf@plt>:
   12934:	add	ip, pc, #0, 12
   12938:	add	ip, ip, #32, 20	; 0x20000
   1293c:	ldr	pc, [ip, #1808]!	; 0x710

00012940 <memset@plt>:
   12940:	add	ip, pc, #0, 12
   12944:	add	ip, ip, #32, 20	; 0x20000
   12948:	ldr	pc, [ip, #1800]!	; 0x708

0001294c <strncpy@plt>:
   1294c:	add	ip, pc, #0, 12
   12950:	add	ip, ip, #32, 20	; 0x20000
   12954:	ldr	pc, [ip, #1792]!	; 0x700

00012958 <fclose@plt>:
   12958:	add	ip, pc, #0, 12
   1295c:	add	ip, ip, #32, 20	; 0x20000
   12960:	ldr	pc, [ip, #1784]!	; 0x6f8

00012964 <sprintf@plt>:
   12964:	add	ip, pc, #0, 12
   12968:	add	ip, ip, #32, 20	; 0x20000
   1296c:	ldr	pc, [ip, #1776]!	; 0x6f0

00012970 <fread_unlocked@plt>:
   12970:	add	ip, pc, #0, 12
   12974:	add	ip, ip, #32, 20	; 0x20000
   12978:	ldr	pc, [ip, #1768]!	; 0x6e8

0001297c <fseek@plt>:
   1297c:	add	ip, pc, #0, 12
   12980:	add	ip, ip, #32, 20	; 0x20000
   12984:	ldr	pc, [ip, #1760]!	; 0x6e0

00012988 <abort@plt>:
   12988:	add	ip, pc, #0, 12
   1298c:	add	ip, ip, #32, 20	; 0x20000
   12990:	ldr	pc, [ip, #1752]!	; 0x6d8

00012994 <__assert_fail@plt>:
   12994:	add	ip, pc, #0, 12
   12998:	add	ip, ip, #32, 20	; 0x20000
   1299c:	ldr	pc, [ip, #1744]!	; 0x6d0

Disassembly of section .text:

000129a0 <_start@@Base>:
   129a0:	mov	fp, #0
   129a4:	mov	lr, #0
   129a8:	pop	{r1}		; (ldr r1, [sp], #4)
   129ac:	mov	r2, sp
   129b0:	push	{r2}		; (str r2, [sp, #-4]!)
   129b4:	push	{r0}		; (str r0, [sp, #-4]!)
   129b8:	ldr	ip, [pc, #16]	; 129d0 <_start@@Base+0x30>
   129bc:	push	{ip}		; (str ip, [sp, #-4]!)
   129c0:	ldr	r0, [pc, #12]	; 129d4 <_start@@Base+0x34>
   129c4:	ldr	r3, [pc, #12]	; 129d8 <_start@@Base+0x38>
   129c8:	bl	12910 <__libc_start_main@plt>
   129cc:	bl	12988 <abort@plt>
   129d0:	andeq	r1, r2, ip, asr r0
   129d4:	muleq	r1, r8, lr
   129d8:	strdeq	r0, [r2], -ip
   129dc:	ldr	r3, [pc, #20]	; 129f8 <_start@@Base+0x58>
   129e0:	ldr	r2, [pc, #20]	; 129fc <_start@@Base+0x5c>
   129e4:	add	r3, pc, r3
   129e8:	ldr	r2, [r3, r2]
   129ec:	cmp	r2, #0
   129f0:	bxeq	lr
   129f4:	b	1291c <__gmon_start__@plt>
   129f8:	andeq	r0, r2, r4, lsl r6
   129fc:	andeq	r0, r0, r8, ror r0
   12a00:	ldr	r0, [pc, #24]	; 12a20 <_start@@Base+0x80>
   12a04:	ldr	r3, [pc, #24]	; 12a24 <_start@@Base+0x84>
   12a08:	cmp	r3, r0
   12a0c:	bxeq	lr
   12a10:	ldr	r3, [pc, #16]	; 12a28 <_start@@Base+0x88>
   12a14:	cmp	r3, #0
   12a18:	bxeq	lr
   12a1c:	bx	r3
   12a20:	muleq	r3, r8, r0
   12a24:	muleq	r3, r8, r0
   12a28:	andeq	r0, r0, r0
   12a2c:	ldr	r0, [pc, #36]	; 12a58 <_start@@Base+0xb8>
   12a30:	ldr	r1, [pc, #36]	; 12a5c <_start@@Base+0xbc>
   12a34:	sub	r1, r1, r0
   12a38:	asr	r1, r1, #2
   12a3c:	add	r1, r1, r1, lsr #31
   12a40:	asrs	r1, r1, #1
   12a44:	bxeq	lr
   12a48:	ldr	r3, [pc, #16]	; 12a60 <_start@@Base+0xc0>
   12a4c:	cmp	r3, #0
   12a50:	bxeq	lr
   12a54:	bx	r3
   12a58:	muleq	r3, r8, r0
   12a5c:	muleq	r3, r8, r0
   12a60:	andeq	r0, r0, r0
   12a64:	push	{r4, lr}
   12a68:	ldr	r4, [pc, #24]	; 12a88 <_start@@Base+0xe8>
   12a6c:	ldrb	r3, [r4]
   12a70:	cmp	r3, #0
   12a74:	popne	{r4, pc}
   12a78:	bl	12a00 <_start@@Base+0x60>
   12a7c:	mov	r3, #1
   12a80:	strb	r3, [r4]
   12a84:	pop	{r4, pc}
   12a88:	muleq	r3, r8, r0
   12a8c:	b	12a2c <_start@@Base+0x8c>

00012a90 <test_print@@Base>:
   12a90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a94:	add	fp, sp, #28
   12a98:	sub	sp, sp, #68	; 0x44
   12a9c:	mov	r4, #0
   12aa0:	str	r4, [fp, #-32]	; 0xffffffe0
   12aa4:	str	r4, [fp, #-36]	; 0xffffffdc
   12aa8:	str	r4, [fp, #-40]	; 0xffffffd8
   12aac:	ldr	sl, [pc, #672]	; 12d54 <test_print@@Base+0x2c4>
   12ab0:	ldr	sl, [pc, sl]
   12ab4:	ldr	r0, [sl]
   12ab8:	ldr	r1, [pc, #664]	; 12d58 <test_print@@Base+0x2c8>
   12abc:	add	r1, pc, r1
   12ac0:	bl	1288c <fopen@plt>
   12ac4:	cmp	r0, #0
   12ac8:	bne	12af0 <test_print@@Base+0x60>
   12acc:	ldr	r2, [sl]
   12ad0:	ldr	r0, [pc, #644]	; 12d5c <test_print@@Base+0x2cc>
   12ad4:	ldr	r0, [pc, r0]
   12ad8:	ldr	r0, [r0]
   12adc:	ldr	r1, [pc, #636]	; 12d60 <test_print@@Base+0x2d0>
   12ae0:	add	r1, pc, r1
   12ae4:	bl	12934 <fprintf@plt>
   12ae8:	mvn	r4, #0
   12aec:	b	12d34 <test_print@@Base+0x2a4>
   12af0:	mov	r5, r0
   12af4:	add	r0, sp, #8
   12af8:	mov	r1, r5
   12afc:	bl	2092c <flatcc_json_printer_init@@Base>
   12b00:	movw	r0, #258	; 0x102
   12b04:	strh	r0, [sp, #33]	; 0x21
   12b08:	strb	r4, [sp, #35]	; 0x23
   12b0c:	ldr	r9, [pc, #592]	; 12d64 <test_print@@Base+0x2d4>
   12b10:	ldr	r9, [pc, r9]
   12b14:	ldr	r4, [r9]
   12b18:	cmp	r4, #0
   12b1c:	beq	12b38 <test_print@@Base+0xa8>
   12b20:	ldr	r1, [pc, #576]	; 12d68 <test_print@@Base+0x2d8>
   12b24:	mov	r0, r4
   12b28:	add	r1, pc, r1
   12b2c:	bl	12880 <strcmp@plt>
   12b30:	cmp	r0, #0
   12b34:	bne	12c28 <test_print@@Base+0x198>
   12b38:	mov	r0, #288	; 0x120
   12b3c:	str	r0, [fp, #-32]	; 0xffffffe0
   12b40:	ldr	r8, [pc, #548]	; 12d6c <test_print@@Base+0x2dc>
   12b44:	add	r8, pc, r8
   12b48:	ldr	r4, [pc, #544]	; 12d70 <test_print@@Base+0x2e0>
   12b4c:	sub	r1, fp, #36	; 0x24
   12b50:	ldr	r4, [pc, r4]
   12b54:	ldr	r0, [r4]
   12b58:	bl	12da8 <test_print@@Base+0x318>
   12b5c:	cmp	r0, #0
   12b60:	bne	12b90 <test_print@@Base+0x100>
   12b64:	ldr	r2, [r4]
   12b68:	ldr	r0, [pc, #516]	; 12d74 <test_print@@Base+0x2e4>
   12b6c:	ldr	r0, [pc, r0]
   12b70:	ldr	r0, [r0]
   12b74:	ldr	r1, [pc, #508]	; 12d78 <test_print@@Base+0x2e8>
   12b78:	add	r1, pc, r1
   12b7c:	bl	12934 <fprintf@plt>
   12b80:	mov	r6, #0
   12b84:	mvn	r4, #0
   12b88:	mov	r7, #0
   12b8c:	b	12cec <test_print@@Base+0x25c>
   12b90:	mov	r6, r0
   12b94:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12b98:	ldr	r0, [pc, #484]	; 12d84 <test_print@@Base+0x2f4>
   12b9c:	add	r4, sp, #8
   12ba0:	mov	r1, r8
   12ba4:	add	r0, pc, r0
   12ba8:	str	r0, [sp]
   12bac:	mov	r0, r4
   12bb0:	ldr	r3, [pc, #464]	; 12d88 <test_print@@Base+0x2f8>
   12bb4:	add	r3, pc, r3
   12bb8:	bl	201ac <flatcc_json_printer_table_as_root@@Base>
   12bbc:	ldr	r2, [sp, #52]	; 0x34
   12bc0:	mov	r0, r4
   12bc4:	mov	r1, #1
   12bc8:	blx	r2
   12bcc:	ldr	r0, [sp, #44]	; 0x2c
   12bd0:	cmp	r0, #0
   12bd4:	beq	12be4 <test_print@@Base+0x154>
   12bd8:	ldr	r0, [pc, #428]	; 12d8c <test_print@@Base+0x2fc>
   12bdc:	add	r0, pc, r0
   12be0:	bl	128f8 <puts@plt>
   12be4:	mov	r0, r5
   12be8:	bl	12958 <fclose@plt>
   12bec:	ldr	r0, [sl]
   12bf0:	sub	r1, fp, #40	; 0x28
   12bf4:	bl	12da8 <test_print@@Base+0x318>
   12bf8:	cmp	r0, #0
   12bfc:	bne	12c70 <test_print@@Base+0x1e0>
   12c00:	ldr	r2, [sl]
   12c04:	ldr	r0, [pc, #388]	; 12d90 <test_print@@Base+0x300>
   12c08:	ldr	r0, [pc, r0]
   12c0c:	ldr	r0, [r0]
   12c10:	ldr	r1, [pc, #380]	; 12d94 <test_print@@Base+0x304>
   12c14:	add	r1, pc, r1
   12c18:	bl	12934 <fprintf@plt>
   12c1c:	mov	r7, #0
   12c20:	mvn	r4, #0
   12c24:	b	12cbc <test_print@@Base+0x22c>
   12c28:	sub	r1, fp, #32
   12c2c:	mov	r0, r4
   12c30:	bl	12da8 <test_print@@Base+0x318>
   12c34:	mov	r8, r0
   12c38:	cmp	r0, #0
   12c3c:	bne	12b48 <test_print@@Base+0xb8>
   12c40:	ldr	r2, [r9]
   12c44:	ldr	r0, [pc, #304]	; 12d7c <test_print@@Base+0x2ec>
   12c48:	ldr	r0, [pc, r0]
   12c4c:	ldr	r0, [r0]
   12c50:	ldr	r1, [pc, #296]	; 12d80 <test_print@@Base+0x2f0>
   12c54:	add	r1, pc, r1
   12c58:	bl	12934 <fprintf@plt>
   12c5c:	mvn	r4, #0
   12c60:	mov	r8, #0
   12c64:	mov	r6, #0
   12c68:	mov	r7, #0
   12c6c:	b	12cec <test_print@@Base+0x25c>
   12c70:	mov	r7, r0
   12c74:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12c78:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12c7c:	cmp	r2, r0
   12c80:	bne	12cc4 <test_print@@Base+0x234>
   12c84:	mov	r0, r7
   12c88:	mov	r1, r6
   12c8c:	bl	128c8 <memcmp@plt>
   12c90:	cmp	r0, #0
   12c94:	bne	12cc4 <test_print@@Base+0x234>
   12c98:	ldr	r0, [pc, #256]	; 12da0 <test_print@@Base+0x310>
   12c9c:	mov	r1, #26
   12ca0:	mov	r2, #1
   12ca4:	ldr	r0, [pc, r0]
   12ca8:	ldr	r3, [r0]
   12cac:	ldr	r0, [pc, #240]	; 12da4 <test_print@@Base+0x314>
   12cb0:	add	r0, pc, r0
   12cb4:	bl	128ec <fwrite@plt>
   12cb8:	mov	r4, #0
   12cbc:	mov	r5, #0
   12cc0:	b	12cec <test_print@@Base+0x25c>
   12cc4:	ldr	r0, [pc, #204]	; 12d98 <test_print@@Base+0x308>
   12cc8:	mov	r1, #54	; 0x36
   12ccc:	mov	r2, #1
   12cd0:	ldr	r0, [pc, r0]
   12cd4:	ldr	r3, [r0]
   12cd8:	ldr	r0, [pc, #188]	; 12d9c <test_print@@Base+0x30c>
   12cdc:	add	r0, pc, r0
   12ce0:	bl	128ec <fwrite@plt>
   12ce4:	mov	r5, #0
   12ce8:	mvn	r4, #0
   12cec:	add	r0, sp, #8
   12cf0:	bl	20cf4 <flatcc_json_printer_clear@@Base>
   12cf4:	cmp	r8, #0
   12cf8:	ldrne	r0, [r9]
   12cfc:	cmpne	r0, #0
   12d00:	bne	12d40 <test_print@@Base+0x2b0>
   12d04:	cmp	r6, #0
   12d08:	beq	12d14 <test_print@@Base+0x284>
   12d0c:	mov	r0, r6
   12d10:	bl	128a4 <free@plt>
   12d14:	cmp	r7, #0
   12d18:	beq	12d24 <test_print@@Base+0x294>
   12d1c:	mov	r0, r7
   12d20:	bl	128a4 <free@plt>
   12d24:	cmp	r5, #0
   12d28:	beq	12d34 <test_print@@Base+0x2a4>
   12d2c:	mov	r0, r5
   12d30:	bl	12958 <fclose@plt>
   12d34:	mov	r0, r4
   12d38:	sub	sp, fp, #28
   12d3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d40:	mov	r0, r8
   12d44:	bl	128a4 <free@plt>
   12d48:	cmp	r6, #0
   12d4c:	bne	12d0c <test_print@@Base+0x27c>
   12d50:	b	12d14 <test_print@@Base+0x284>
   12d54:	andeq	r0, r2, ip, asr #11
   12d58:	andeq	lr, r0, r2, ror #11
   12d5c:	muleq	r2, r4, r5
   12d60:	andeq	lr, r0, r1, asr #11
   12d64:	andeq	r0, r2, r4, ror #10
   12d68:	muleq	r0, r9, r5
   12d6c:			; <UNDEFINED> instruction: 0x0000eab9
   12d70:	andeq	r0, r2, ip, lsl r5
   12d74:	strdeq	r0, [r2], -ip
   12d78:	andeq	lr, r0, r5, ror r5
   12d7c:	andeq	r0, r2, r0, lsr #8
   12d80:	andeq	lr, r0, pc, ror #8
   12d84:	muleq	r0, r4, r3
   12d88:	andeq	lr, r0, r4, ror #10
   12d8c:	andeq	lr, r0, ip, asr #22
   12d90:	andeq	r0, r2, r0, ror #8
   12d94:	andeq	lr, r0, r9, lsl #10
   12d98:	muleq	r2, r8, r3
   12d9c:	andeq	lr, r0, r6, ror #8
   12da0:	andeq	r0, r2, r4, asr #7
   12da4:	andeq	lr, r0, r9, asr #9
   12da8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12dac:	add	fp, sp, #24
   12db0:	sub	sp, sp, #8
   12db4:	add	r9, sp, #4
   12db8:	cmp	r1, #0
   12dbc:	movne	r9, r1
   12dc0:	ldr	r1, [pc, #204]	; 12e94 <test_print@@Base+0x404>
   12dc4:	add	r1, pc, r1
   12dc8:	bl	1288c <fopen@plt>
   12dcc:	cmp	r0, #0
   12dd0:	beq	12e70 <test_print@@Base+0x3e0>
   12dd4:	mov	r1, #0
   12dd8:	mov	r2, #2
   12ddc:	mov	r5, r0
   12de0:	mov	r8, #0
   12de4:	bl	1297c <fseek@plt>
   12de8:	mov	r0, r5
   12dec:	bl	128bc <ftell@plt>
   12df0:	mov	r4, r0
   12df4:	cmp	r0, #10240	; 0x2800
   12df8:	str	r0, [r9]
   12dfc:	bhi	12e64 <test_print@@Base+0x3d4>
   12e00:	mov	r0, r5
   12e04:	bl	128d4 <rewind@plt>
   12e08:	cmp	r4, #0
   12e0c:	mov	r0, r4
   12e10:	movweq	r0, #1
   12e14:	bl	12904 <malloc@plt>
   12e18:	cmp	r0, #0
   12e1c:	beq	12e64 <test_print@@Base+0x3d4>
   12e20:	mov	r7, r0
   12e24:	mov	r1, #0
   12e28:	mov	r6, r1
   12e2c:	add	r0, r7, r1
   12e30:	sub	r2, r4, r1
   12e34:	mov	r1, #1
   12e38:	mov	r3, r5
   12e3c:	bl	12970 <fread_unlocked@plt>
   12e40:	add	r1, r0, r6
   12e44:	cmp	r0, #0
   12e48:	bne	12e28 <test_print@@Base+0x398>
   12e4c:	mov	r0, r5
   12e50:	bl	12958 <fclose@plt>
   12e54:	cmp	r4, r6
   12e58:	bne	12e78 <test_print@@Base+0x3e8>
   12e5c:	mov	r8, r7
   12e60:	b	12e84 <test_print@@Base+0x3f4>
   12e64:	mov	r0, r5
   12e68:	bl	12958 <fclose@plt>
   12e6c:	b	12e84 <test_print@@Base+0x3f4>
   12e70:	mov	r4, #0
   12e74:	b	12e80 <test_print@@Base+0x3f0>
   12e78:	mov	r0, r7
   12e7c:	bl	128a4 <free@plt>
   12e80:	mov	r8, #0
   12e84:	str	r4, [r9]
   12e88:	mov	r0, r8
   12e8c:	sub	sp, fp, #24
   12e90:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12e94:	andeq	lr, r0, r9, lsr #9

00012e98 <main@@Base>:
   12e98:	push	{r4, r5, r6, sl, fp, lr}
   12e9c:	add	fp, sp, #16
   12ea0:	ldr	r6, [pc, #128]	; 12f28 <main@@Base+0x90>
   12ea4:	mov	r5, r0
   12ea8:	mov	r4, r1
   12eac:	mov	r1, #24
   12eb0:	mov	r2, #1
   12eb4:	ldr	r6, [pc, r6]
   12eb8:	ldr	r3, [r6]
   12ebc:	ldr	r0, [pc, #104]	; 12f2c <main@@Base+0x94>
   12ec0:	add	r0, pc, r0
   12ec4:	bl	128ec <fwrite@plt>
   12ec8:	cmp	r5, #1
   12ecc:	beq	12f00 <main@@Base+0x68>
   12ed0:	cmp	r5, #4
   12ed4:	bne	12f08 <main@@Base+0x70>
   12ed8:	ldmib	r4, {r0, r1, r2}
   12edc:	ldr	r3, [pc, #76]	; 12f30 <main@@Base+0x98>
   12ee0:	ldr	r3, [pc, r3]
   12ee4:	str	r0, [r3]
   12ee8:	ldr	r0, [pc, #68]	; 12f34 <main@@Base+0x9c>
   12eec:	ldr	r0, [pc, r0]
   12ef0:	str	r1, [r0]
   12ef4:	ldr	r0, [pc, #60]	; 12f38 <main@@Base+0xa0>
   12ef8:	ldr	r0, [pc, r0]
   12efc:	str	r2, [r0]
   12f00:	pop	{r4, r5, r6, sl, fp, lr}
   12f04:	b	12a90 <test_print@@Base>
   12f08:	ldr	r3, [r6]
   12f0c:	ldr	r0, [pc, #40]	; 12f3c <main@@Base+0xa4>
   12f10:	mov	r1, #191	; 0xbf
   12f14:	mov	r2, #1
   12f18:	add	r0, pc, r0
   12f1c:	bl	128ec <fwrite@plt>
   12f20:	mov	r0, #1
   12f24:	bl	12928 <exit@plt>
   12f28:			; <UNDEFINED> instruction: 0x000201b4
   12f2c:	ldrdeq	lr, [r0], -r4
   12f30:	muleq	r2, r4, r1
   12f34:	andeq	r0, r2, r0, lsl #3
   12f38:	andeq	r0, r2, r4, lsl #3
   12f3c:	muleq	r0, r5, r2
   12f40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f44:	add	fp, sp, #28
   12f48:	sub	sp, sp, #20
   12f4c:	mov	r5, r0
   12f50:	ldr	r0, [pc, #1268]	; 1344c <main@@Base+0x5b4>
   12f54:	mov	r4, r1
   12f58:	mov	r1, #3
   12f5c:	mov	r2, #0
   12f60:	mov	r8, #0
   12f64:	str	r1, [sp]
   12f68:	mov	r1, r4
   12f6c:	add	r0, pc, r0
   12f70:	str	r0, [sp, #4]
   12f74:	mov	r0, r5
   12f78:	ldr	r3, [pc, #1232]	; 13450 <main@@Base+0x5b8>
   12f7c:	add	r3, pc, r3
   12f80:	bl	1fddc <flatcc_json_printer_struct_field@@Base>
   12f84:	mov	r0, #150	; 0x96
   12f88:	mov	r1, #4
   12f8c:	mov	r2, #1
   12f90:	mov	r6, #4
   12f94:	str	r1, [sp]
   12f98:	str	r0, [sp, #4]
   12f9c:	mov	r0, r5
   12fa0:	mov	r1, r4
   12fa4:	ldr	r3, [pc, #1192]	; 13454 <main@@Base+0x5bc>
   12fa8:	add	r3, pc, r3
   12fac:	bl	16e38 <flatcc_json_printer_int16_field@@Base>
   12fb0:	mov	r0, #100	; 0x64
   12fb4:	mov	r1, #2
   12fb8:	mov	r2, #2
   12fbc:	str	r1, [sp]
   12fc0:	str	r0, [sp, #4]
   12fc4:	mov	r0, r5
   12fc8:	mov	r1, r4
   12fcc:	ldr	r3, [pc, #1156]	; 13458 <main@@Base+0x5c0>
   12fd0:	add	r3, pc, r3
   12fd4:	bl	16e38 <flatcc_json_printer_int16_field@@Base>
   12fd8:	str	r6, [sp]
   12fdc:	mov	r0, r5
   12fe0:	mov	r1, r4
   12fe4:	mov	r2, #3
   12fe8:	ldr	r3, [pc, #1132]	; 1345c <main@@Base+0x5c4>
   12fec:	add	r3, pc, r3
   12ff0:	bl	16470 <flatcc_json_printer_string_field@@Base>
   12ff4:	mov	r0, #9
   12ff8:	mov	r1, r4
   12ffc:	mov	r2, #5
   13000:	mov	r7, #5
   13004:	str	r0, [sp]
   13008:	mov	r0, r5
   1300c:	ldr	r3, [pc, #1100]	; 13460 <main@@Base+0x5c8>
   13010:	add	r3, pc, r3
   13014:	bl	18ef0 <flatcc_json_printer_uint8_vector_field@@Base>
   13018:	ldr	r0, [pc, #1092]	; 13464 <main@@Base+0x5cc>
   1301c:	mov	r1, #8
   13020:	str	r7, [sp]
   13024:	mov	r2, #6
   13028:	mov	r7, #5
   1302c:	str	r1, [sp, #4]
   13030:	mov	r1, r4
   13034:	add	r0, pc, r0
   13038:	str	r0, [sp, #8]
   1303c:	mov	r0, r5
   13040:	ldr	r3, [pc, #1056]	; 13468 <main@@Base+0x5d0>
   13044:	add	r3, pc, r3
   13048:	bl	177d0 <flatcc_json_printer_int8_enum_field@@Base>
   1304c:	ldr	r0, [pc, #1048]	; 1346c <main@@Base+0x5d4>
   13050:	ldr	r1, [pc, #1048]	; 13470 <main@@Base+0x5d8>
   13054:	str	r6, [sp]
   13058:	mov	r2, #8
   1305c:	add	r0, pc, r0
   13060:	add	r1, pc, r1
   13064:	str	r1, [sp, #4]
   13068:	str	r0, [sp, #8]
   1306c:	mov	r0, r5
   13070:	mov	r1, r4
   13074:	ldr	r3, [pc, #1016]	; 13474 <main@@Base+0x5dc>
   13078:	add	r3, pc, r3
   1307c:	bl	1f4d8 <flatcc_json_printer_union_field@@Base>
   13080:	ldr	r0, [pc, #1008]	; 13478 <main@@Base+0x5e0>
   13084:	str	r7, [sp]
   13088:	str	r6, [sp, #4]
   1308c:	mov	r1, r4
   13090:	mov	r2, #9
   13094:	mov	sl, #5
   13098:	add	r0, pc, r0
   1309c:	str	r0, [sp, #8]
   130a0:	mov	r0, r5
   130a4:	ldr	r3, [pc, #976]	; 1347c <main@@Base+0x5e4>
   130a8:	add	r3, pc, r3
   130ac:	bl	1e130 <flatcc_json_printer_struct_vector_field@@Base>
   130b0:	mov	r7, #17
   130b4:	mov	r0, r5
   130b8:	mov	r1, r4
   130bc:	mov	r2, #10
   130c0:	str	r7, [sp]
   130c4:	ldr	r3, [pc, #948]	; 13480 <main@@Base+0x5e8>
   130c8:	add	r3, pc, r3
   130cc:	bl	1e6cc <flatcc_json_printer_string_vector_field@@Base>
   130d0:	ldr	r9, [pc, #940]	; 13484 <main@@Base+0x5ec>
   130d4:	mov	r0, r5
   130d8:	mov	r1, r4
   130dc:	mov	r2, #11
   130e0:	add	r9, pc, r9
   130e4:	stm	sp, {r7, r9}
   130e8:	ldr	r3, [pc, #920]	; 13488 <main@@Base+0x5f0>
   130ec:	add	r3, pc, r3
   130f0:	bl	1ea84 <flatcc_json_printer_table_vector_field@@Base>
   130f4:	str	sl, [sp]
   130f8:	str	r9, [sp, #4]
   130fc:	mov	r0, r5
   13100:	mov	r1, r4
   13104:	mov	r2, #12
   13108:	mov	sl, #5
   1310c:	ldr	r3, [pc, #888]	; 1348c <main@@Base+0x5f4>
   13110:	add	r3, pc, r3
   13114:	bl	1f2f0 <flatcc_json_printer_table_field@@Base>
   13118:	mov	r0, #20
   1311c:	mov	r1, r4
   13120:	mov	r2, #13
   13124:	stm	sp, {r0, r8, r9}
   13128:	mov	r0, r5
   1312c:	ldr	r3, [pc, #860]	; 13490 <main@@Base+0x5f8>
   13130:	add	r3, pc, r3
   13134:	bl	20680 <flatcc_json_printer_table_as_nested_root@@Base>
   13138:	ldr	r0, [pc, #852]	; 13494 <main@@Base+0x5fc>
   1313c:	mov	r1, #9
   13140:	mov	r2, #14
   13144:	str	r1, [sp]
   13148:	mov	r1, r4
   1314c:	add	r0, pc, r0
   13150:	str	r0, [sp, #4]
   13154:	mov	r0, r5
   13158:	ldr	r3, [pc, #824]	; 13498 <main@@Base+0x600>
   1315c:	add	r3, pc, r3
   13160:	bl	1f2f0 <flatcc_json_printer_table_field@@Base>
   13164:	mov	r9, #8
   13168:	mov	r0, #1
   1316c:	mov	r1, r4
   13170:	mov	r2, #15
   13174:	str	r0, [sp, #4]
   13178:	str	r9, [sp]
   1317c:	mov	r0, r5
   13180:	ldr	r3, [pc, #788]	; 1349c <main@@Base+0x604>
   13184:	add	r3, pc, r3
   13188:	bl	170e8 <flatcc_json_printer_bool_field@@Base>
   1318c:	mov	r6, #16
   13190:	mov	r0, r5
   13194:	mov	r1, r4
   13198:	mov	r2, #16
   1319c:	stm	sp, {r6, r8}
   131a0:	ldr	r3, [pc, #760]	; 134a0 <main@@Base+0x608>
   131a4:	add	r3, pc, r3
   131a8:	bl	16f18 <flatcc_json_printer_int32_field@@Base>
   131ac:	stm	sp, {r6, r8}
   131b0:	mov	r0, r5
   131b4:	mov	r1, r4
   131b8:	mov	r2, #17
   131bc:	ldr	r3, [pc, #736]	; 134a4 <main@@Base+0x60c>
   131c0:	add	r3, pc, r3
   131c4:	bl	16b10 <flatcc_json_printer_uint32_field@@Base>
   131c8:	str	r8, [sp, #8]
   131cc:	str	r8, [sp, #12]
   131d0:	str	r6, [sp]
   131d4:	mov	r0, r5
   131d8:	mov	r1, r4
   131dc:	mov	r2, #18
   131e0:	ldr	r3, [pc, #704]	; 134a8 <main@@Base+0x610>
   131e4:	add	r3, pc, r3
   131e8:	bl	16ff0 <flatcc_json_printer_int64_field@@Base>
   131ec:	str	r8, [sp, #8]
   131f0:	str	r8, [sp, #12]
   131f4:	str	r6, [sp]
   131f8:	mov	r0, r5
   131fc:	mov	r1, r4
   13200:	mov	r2, #19
   13204:	ldr	r3, [pc, #672]	; 134ac <main@@Base+0x614>
   13208:	add	r3, pc, r3
   1320c:	bl	16bd0 <flatcc_json_printer_uint64_field@@Base>
   13210:	stm	sp, {r7, r8}
   13214:	mov	r0, r5
   13218:	mov	r1, r4
   1321c:	mov	r2, #20
   13220:	ldr	r3, [pc, #648]	; 134b0 <main@@Base+0x618>
   13224:	add	r3, pc, r3
   13228:	bl	16f18 <flatcc_json_printer_int32_field@@Base>
   1322c:	stm	sp, {r7, r8}
   13230:	mov	r0, r5
   13234:	mov	r1, r4
   13238:	mov	r2, #21
   1323c:	ldr	r3, [pc, #624]	; 134b4 <main@@Base+0x61c>
   13240:	add	r3, pc, r3
   13244:	bl	16b10 <flatcc_json_printer_uint32_field@@Base>
   13248:	str	r8, [sp, #8]
   1324c:	str	r8, [sp, #12]
   13250:	str	r7, [sp]
   13254:	mov	r0, r5
   13258:	mov	r1, r4
   1325c:	mov	r2, #22
   13260:	ldr	r3, [pc, #592]	; 134b8 <main@@Base+0x620>
   13264:	add	r3, pc, r3
   13268:	bl	16ff0 <flatcc_json_printer_int64_field@@Base>
   1326c:	str	r8, [sp, #8]
   13270:	str	r8, [sp, #12]
   13274:	str	r7, [sp]
   13278:	mov	r0, r5
   1327c:	mov	r1, r4
   13280:	mov	r2, #23
   13284:	mov	r8, #23
   13288:	ldr	r3, [pc, #556]	; 134bc <main@@Base+0x624>
   1328c:	add	r3, pc, r3
   13290:	bl	16bd0 <flatcc_json_printer_uint64_field@@Base>
   13294:	str	r6, [sp]
   13298:	mov	r0, r5
   1329c:	mov	r1, r4
   132a0:	mov	r2, #24
   132a4:	ldr	r3, [pc, #532]	; 134c0 <main@@Base+0x628>
   132a8:	add	r3, pc, r3
   132ac:	bl	1b030 <flatcc_json_printer_bool_vector_field@@Base>
   132b0:	str	sl, [sp]
   132b4:	vldr	s0, [pc, #392]	; 13444 <main@@Base+0x5ac>
   132b8:	mov	r0, r5
   132bc:	mov	r1, r4
   132c0:	mov	r2, #25
   132c4:	ldr	r3, [pc, #504]	; 134c4 <main@@Base+0x62c>
   132c8:	add	r3, pc, r3
   132cc:	bl	171dc <flatcc_json_printer_float_field@@Base>
   132d0:	mov	r6, #6
   132d4:	vmov.f32	s0, #8	; 0x40400000  3.0
   132d8:	mov	r0, r5
   132dc:	mov	r1, r4
   132e0:	mov	r2, #26
   132e4:	str	r6, [sp]
   132e8:	ldr	r3, [pc, #472]	; 134c8 <main@@Base+0x630>
   132ec:	add	r3, pc, r3
   132f0:	bl	171dc <flatcc_json_printer_float_field@@Base>
   132f4:	str	r6, [sp]
   132f8:	vldr	s0, [pc, #328]	; 13448 <main@@Base+0x5b0>
   132fc:	mov	r0, r5
   13300:	mov	r1, r4
   13304:	mov	r2, #27
   13308:	ldr	r3, [pc, #444]	; 134cc <main@@Base+0x634>
   1330c:	add	r3, pc, r3
   13310:	bl	171dc <flatcc_json_printer_float_field@@Base>
   13314:	mov	r0, #18
   13318:	mov	r1, r4
   1331c:	mov	r2, #28
   13320:	str	r0, [sp]
   13324:	mov	r0, r5
   13328:	ldr	r3, [pc, #416]	; 134d0 <main@@Base+0x638>
   1332c:	add	r3, pc, r3
   13330:	bl	1e6cc <flatcc_json_printer_string_vector_field@@Base>
   13334:	ldr	r0, [pc, #408]	; 134d4 <main@@Base+0x63c>
   13338:	stm	sp, {r8, r9}
   1333c:	mov	r1, r4
   13340:	mov	r2, #29
   13344:	add	r0, pc, r0
   13348:	str	r0, [sp, #8]
   1334c:	mov	r0, r5
   13350:	ldr	r3, [pc, #384]	; 134d8 <main@@Base+0x640>
   13354:	add	r3, pc, r3
   13358:	bl	1e130 <flatcc_json_printer_struct_vector_field@@Base>
   1335c:	mov	r6, #4
   13360:	mov	r0, r5
   13364:	mov	r1, r4
   13368:	mov	r2, #30
   1336c:	str	r6, [sp]
   13370:	ldr	r3, [pc, #356]	; 134dc <main@@Base+0x644>
   13374:	add	r3, pc, r3
   13378:	bl	18ef0 <flatcc_json_printer_uint8_vector_field@@Base>
   1337c:	str	sl, [sp]
   13380:	str	r6, [sp, #4]
   13384:	mov	r1, r4
   13388:	mov	r2, #31
   1338c:	ldr	r0, [pc, #332]	; 134e0 <main@@Base+0x648>
   13390:	add	r0, pc, r0
   13394:	str	r0, [sp, #8]
   13398:	mov	r0, r5
   1339c:	ldr	r3, [pc, #320]	; 134e4 <main@@Base+0x64c>
   133a0:	add	r3, pc, r3
   133a4:	bl	1e130 <flatcc_json_printer_struct_vector_field@@Base>
   133a8:	mov	r0, #15
   133ac:	mov	r1, r4
   133b0:	mov	r2, #32
   133b4:	str	r0, [sp]
   133b8:	mov	r0, r5
   133bc:	ldr	r3, [pc, #292]	; 134e8 <main@@Base+0x650>
   133c0:	add	r3, pc, r3
   133c4:	bl	1ac38 <flatcc_json_printer_int64_vector_field@@Base>
   133c8:	str	r7, [sp]
   133cc:	mov	r0, r5
   133d0:	mov	r1, r4
   133d4:	mov	r2, #33	; 0x21
   133d8:	ldr	r3, [pc, #268]	; 134ec <main@@Base+0x654>
   133dc:	add	r3, pc, r3
   133e0:	bl	1b818 <flatcc_json_printer_double_vector_field@@Base>
   133e4:	ldr	r0, [pc, #260]	; 134f0 <main@@Base+0x658>
   133e8:	mov	r1, #21
   133ec:	mov	r2, #34	; 0x22
   133f0:	str	r1, [sp]
   133f4:	mov	r1, r4
   133f8:	add	r0, pc, r0
   133fc:	str	r0, [sp, #4]
   13400:	mov	r0, r5
   13404:	ldr	r3, [pc, #232]	; 134f4 <main@@Base+0x65c>
   13408:	add	r3, pc, r3
   1340c:	bl	1f2f0 <flatcc_json_printer_table_field@@Base>
   13410:	ldr	r0, [pc, #224]	; 134f8 <main@@Base+0x660>
   13414:	mov	r1, #10
   13418:	mov	r2, #35	; 0x23
   1341c:	str	r1, [sp]
   13420:	mov	r1, r4
   13424:	add	r0, pc, r0
   13428:	str	r0, [sp, #4]
   1342c:	mov	r0, r5
   13430:	ldr	r3, [pc, #196]	; 134fc <main@@Base+0x664>
   13434:	add	r3, pc, r3
   13438:	bl	1f2f0 <flatcc_json_printer_table_field@@Base>
   1343c:	sub	sp, fp, #28
   13440:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13444:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   13448:	andeq	r0, r0, r0
   1344c:	andeq	r0, r0, ip, lsl #11
   13450:	strdeq	lr, [r0], -r4
   13454:	andeq	lr, r0, ip, asr #5
   13458:	andeq	lr, r0, r9, lsr #5
   1345c:	muleq	r0, r0, r2
   13460:	andeq	lr, r0, r1, ror r2
   13464:	andeq	r0, r0, r0, ror #11
   13468:	andeq	lr, r0, r7, asr #4
   1346c:	andeq	r0, r0, r8, lsr #14
   13470:	muleq	r0, r8, r6
   13474:	andeq	lr, r0, fp, lsl #7
   13478:	andeq	r0, r0, r8, asr r7
   1347c:	andeq	lr, r0, r9, ror #3
   13480:	andeq	lr, r0, pc, asr #3
   13484:			; <UNDEFINED> instruction: 0xfffffe58
   13488:			; <UNDEFINED> instruction: 0x0000e1bd
   1348c:	andeq	lr, r0, fp, lsr #3
   13490:	muleq	r0, r1, r1
   13494:	andeq	r0, r0, ip, lsl #14
   13498:	andeq	lr, r0, sl, ror r1
   1349c:	andeq	lr, r0, ip, asr r1
   134a0:	andeq	lr, r0, r5, asr #2
   134a4:	andeq	lr, r0, sl, lsr r1
   134a8:	andeq	lr, r0, r7, lsr #2
   134ac:	andeq	lr, r0, r4, lsl r1
   134b0:	andeq	lr, r0, r9, lsl #2
   134b4:	strdeq	lr, [r0], -pc	; <UNPREDICTABLE>
   134b8:	andeq	lr, r0, sp, ror #1
   134bc:	ldrdeq	lr, [r0], -r7
   134c0:	andeq	lr, r0, sp, asr #1
   134c4:	strheq	lr, [r0], -lr	; <UNPREDICTABLE>
   134c8:	andeq	lr, r0, r0, lsr #1
   134cc:	andeq	lr, r0, r7, lsl #1
   134d0:	andeq	lr, r0, lr, rrx
   134d4:	andeq	r0, r0, r4, lsr #11
   134d8:	andeq	lr, r0, r9, asr r0
   134dc:	andeq	lr, r0, r1, asr r0
   134e0:	andeq	r0, r0, r0, ror #8
   134e4:	andeq	lr, r0, sl, lsr #32
   134e8:	andeq	lr, r0, r0, lsl r0
   134ec:	andeq	lr, r0, r4
   134f0:	andeq	r0, r0, r4, ror #10
   134f4:	andeq	sp, r0, sl, ror #31
   134f8:	andeq	r0, r0, ip, lsr r5
   134fc:	ldrdeq	sp, [r0], -r4
   13500:	push	{r4, r5, r6, sl, fp, lr}
   13504:	add	fp, sp, #16
   13508:	sub	sp, sp, #16
   1350c:	mov	r5, r0
   13510:	ldr	r0, [pc, #228]	; 135fc <main@@Base+0x764>
   13514:	mov	r4, r1
   13518:	mov	r6, #1
   1351c:	mov	r1, #0
   13520:	mov	r3, #0
   13524:	mov	r2, r4
   13528:	add	r0, pc, r0
   1352c:	stm	sp, {r0, r6}
   13530:	mov	r0, r5
   13534:	bl	182e4 <flatcc_json_printer_float_struct_field@@Base>
   13538:	ldr	r0, [pc, #192]	; 13600 <main@@Base+0x768>
   1353c:	mov	r1, #1
   13540:	mov	r2, r4
   13544:	mov	r3, #4
   13548:	add	r0, pc, r0
   1354c:	stm	sp, {r0, r6}
   13550:	mov	r0, r5
   13554:	bl	182e4 <flatcc_json_printer_float_struct_field@@Base>
   13558:	ldr	r0, [pc, #164]	; 13604 <main@@Base+0x76c>
   1355c:	mov	r1, #2
   13560:	mov	r2, r4
   13564:	mov	r3, #8
   13568:	add	r0, pc, r0
   1356c:	stm	sp, {r0, r6}
   13570:	mov	r0, r5
   13574:	bl	182e4 <flatcc_json_printer_float_struct_field@@Base>
   13578:	ldr	r0, [pc, #136]	; 13608 <main@@Base+0x770>
   1357c:	mov	r6, #5
   13580:	mov	r1, #3
   13584:	mov	r2, r4
   13588:	mov	r3, #16
   1358c:	add	r0, pc, r0
   13590:	stm	sp, {r0, r6}
   13594:	mov	r0, r5
   13598:	bl	18348 <flatcc_json_printer_double_struct_field@@Base>
   1359c:	ldr	r0, [pc, #104]	; 1360c <main@@Base+0x774>
   135a0:	ldr	r1, [pc, #104]	; 13610 <main@@Base+0x778>
   135a4:	mov	r2, r4
   135a8:	mov	r3, #24
   135ac:	add	r1, pc, r1
   135b0:	add	r0, pc, r0
   135b4:	stm	sp, {r1, r6}
   135b8:	str	r0, [sp, #8]
   135bc:	mov	r0, r5
   135c0:	mov	r1, #4
   135c4:	bl	1863c <flatcc_json_printer_int8_enum_struct_field@@Base>
   135c8:	ldr	r0, [pc, #68]	; 13614 <main@@Base+0x77c>
   135cc:	ldr	r1, [pc, #68]	; 13618 <main@@Base+0x780>
   135d0:	mov	r2, r4
   135d4:	mov	r3, #26
   135d8:	add	r1, pc, r1
   135dc:	add	r0, pc, r0
   135e0:	stm	sp, {r1, r6}
   135e4:	str	r0, [sp, #8]
   135e8:	mov	r0, r5
   135ec:	mov	r1, #5
   135f0:	bl	1fc90 <flatcc_json_printer_embedded_struct_field@@Base>
   135f4:	sub	sp, fp, #16
   135f8:	pop	{r4, r5, r6, sl, fp, pc}
   135fc:	andeq	sp, r0, r0, lsr #29
   13600:	andeq	sp, r0, r7, ror sp
   13604:	andeq	sp, r0, fp, lsr #29
   13608:	andeq	sp, r0, r9, lsl #29
   1360c:	andeq	r0, r0, r4, rrx
   13610:	andeq	sp, r0, pc, ror #28
   13614:	andeq	r0, r0, r4, lsl r2
   13618:	andeq	sp, r0, r9, asr #28
   1361c:	push	{r4, r5, r6, r7, fp, lr}
   13620:	add	fp, sp, #16
   13624:	mov	r4, r0
   13628:	mvn	r0, #0
   1362c:	uxtb	r7, r1
   13630:	uxtab	r0, r0, r1
   13634:	ands	r5, r0, r7
   13638:	movwne	r5, #1
   1363c:	cmp	r1, #0
   13640:	beq	1369c <main@@Base+0x804>
   13644:	ands	r0, r1, #244	; 0xf4
   13648:	bne	1369c <main@@Base+0x804>
   1364c:	mov	r0, r4
   13650:	mov	r1, r5
   13654:	bl	16370 <flatcc_json_printer_delimit_enum_flags@@Base>
   13658:	mov	r6, #0
   1365c:	tst	r7, #1
   13660:	bne	136a8 <main@@Base+0x810>
   13664:	tst	r7, #2
   13668:	bne	136cc <main@@Base+0x834>
   1366c:	tst	r7, #8
   13670:	beq	1368c <main@@Base+0x7f4>
   13674:	ldr	r2, [pc, #128]	; 136fc <main@@Base+0x864>
   13678:	mov	r0, r4
   1367c:	mov	r1, r6
   13680:	mov	r3, #4
   13684:	add	r2, pc, r2
   13688:	bl	163a4 <flatcc_json_printer_enum_flag@@Base>
   1368c:	mov	r0, r4
   13690:	mov	r1, r5
   13694:	pop	{r4, r5, r6, r7, fp, lr}
   13698:	b	16370 <flatcc_json_printer_delimit_enum_flags@@Base>
   1369c:	mov	r0, r4
   136a0:	pop	{r4, r5, r6, r7, fp, lr}
   136a4:	b	16078 <flatcc_json_printer_int8@@Base>
   136a8:	ldr	r2, [pc, #68]	; 136f4 <main@@Base+0x85c>
   136ac:	mov	r0, r4
   136b0:	mov	r1, #0
   136b4:	mov	r3, #3
   136b8:	add	r2, pc, r2
   136bc:	bl	163a4 <flatcc_json_printer_enum_flag@@Base>
   136c0:	mov	r6, #1
   136c4:	tst	r7, #2
   136c8:	beq	1366c <main@@Base+0x7d4>
   136cc:	ldr	r2, [pc, #36]	; 136f8 <main@@Base+0x860>
   136d0:	mov	r0, r4
   136d4:	mov	r1, r6
   136d8:	mov	r3, #5
   136dc:	add	r2, pc, r2
   136e0:	bl	163a4 <flatcc_json_printer_enum_flag@@Base>
   136e4:	add	r6, r6, #1
   136e8:	tst	r7, #8
   136ec:	bne	13674 <main@@Base+0x7dc>
   136f0:	b	1368c <main@@Base+0x7f4>
   136f4:	andeq	sp, r0, pc, ror #26
   136f8:	andeq	sp, r0, pc, asr #26
   136fc:	andeq	sp, r0, sp, lsr #27
   13700:	sub	r1, r1, #1
   13704:	cmp	r1, #3
   13708:	bhi	13738 <main@@Base+0x8a0>
   1370c:	add	r2, pc, #4
   13710:	ldr	r1, [r2, r1, lsl #2]
   13714:	add	pc, r2, r1
   13718:	andeq	r0, r0, r0, lsl r0
   1371c:	andeq	r0, r0, r0, lsr r0
   13720:	andeq	r0, r0, r0, asr #32
   13724:	andeq	r0, r0, r0, asr r0
   13728:	ldr	r1, [pc, #72]	; 13778 <main@@Base+0x8e0>
   1372c:	mov	r2, #7
   13730:	add	r1, pc, r1
   13734:	b	16284 <flatcc_json_printer_enum@@Base>
   13738:	ldr	r1, [pc, #72]	; 13788 <main@@Base+0x8f0>
   1373c:	mov	r2, #4
   13740:	add	r1, pc, r1
   13744:	b	16284 <flatcc_json_printer_enum@@Base>
   13748:	ldr	r1, [pc, #44]	; 1377c <main@@Base+0x8e4>
   1374c:	mov	r2, #23
   13750:	add	r1, pc, r1
   13754:	b	16284 <flatcc_json_printer_enum@@Base>
   13758:	ldr	r1, [pc, #32]	; 13780 <main@@Base+0x8e8>
   1375c:	mov	r2, #8
   13760:	add	r1, pc, r1
   13764:	b	16284 <flatcc_json_printer_enum@@Base>
   13768:	ldr	r1, [pc, #20]	; 13784 <main@@Base+0x8ec>
   1376c:	mov	r2, #3
   13770:	add	r1, pc, r1
   13774:	b	16284 <flatcc_json_printer_enum@@Base>
   13778:	andeq	sp, r0, r6, lsl #26
   1377c:	andeq	sp, r0, lr, ror #25
   13780:	strdeq	sp, [r0], -r6
   13784:	andeq	sp, r0, pc, ror #25
   13788:	andeq	sp, r0, r3, lsr #26
   1378c:	ldrb	r2, [r1, #8]
   13790:	sub	r2, r2, #1
   13794:	cmp	r2, #3
   13798:	bxhi	lr
   1379c:	add	r3, pc, #4
   137a0:	ldr	r2, [r3, r2, lsl #2]
   137a4:	add	pc, r3, r2
   137a8:	andeq	r0, r0, r0, lsl r0
   137ac:	andeq	r0, r0, r4, lsr r0
   137b0:	andeq	r0, r0, ip, lsl r0
   137b4:	andeq	r0, r0, r8, lsr #32
   137b8:	ldr	r2, [pc, #40]	; 137e8 <main@@Base+0x950>
   137bc:	add	r2, pc, r2
   137c0:	b	1f9dc <flatcc_json_printer_union_table@@Base>
   137c4:	ldr	r2, [pc, #36]	; 137f0 <main@@Base+0x958>
   137c8:	add	r2, pc, r2
   137cc:	b	1f9dc <flatcc_json_printer_union_table@@Base>
   137d0:	ldr	r2, [pc, #28]	; 137f4 <main@@Base+0x95c>
   137d4:	add	r2, pc, r2
   137d8:	b	1f9dc <flatcc_json_printer_union_table@@Base>
   137dc:	ldr	r2, [pc, #8]	; 137ec <main@@Base+0x954>
   137e0:	add	r2, pc, r2
   137e4:	b	1f9dc <flatcc_json_printer_union_table@@Base>
   137e8:			; <UNDEFINED> instruction: 0xfffff77c
   137ec:	andeq	r0, r0, r0, lsl r2
   137f0:	andeq	r0, r0, r0, ror #5
   137f4:	ldrdeq	r0, [r0], -r8
   137f8:	push	{r4, r5, r6, sl, fp, lr}
   137fc:	add	fp, sp, #16
   13800:	sub	sp, sp, #8
   13804:	mov	r5, r0
   13808:	ldr	r0, [pc, #72]	; 13858 <main@@Base+0x9c0>
   1380c:	mov	r4, r1
   13810:	mov	r6, #1
   13814:	mov	r1, #0
   13818:	mov	r3, #0
   1381c:	mov	r2, r4
   13820:	add	r0, pc, r0
   13824:	stm	sp, {r0, r6}
   13828:	mov	r0, r5
   1382c:	bl	180f4 <flatcc_json_printer_int16_struct_field@@Base>
   13830:	ldr	r0, [pc, #36]	; 1385c <main@@Base+0x9c4>
   13834:	mov	r1, #1
   13838:	mov	r2, r4
   1383c:	mov	r3, #2
   13840:	add	r0, pc, r0
   13844:	stm	sp, {r0, r6}
   13848:	mov	r0, r5
   1384c:	bl	17fd4 <flatcc_json_printer_int8_struct_field@@Base>
   13850:	sub	sp, fp, #16
   13854:	pop	{r4, r5, r6, sl, fp, pc}
   13858:	andeq	sp, r0, sp, lsl fp
   1385c:	andeq	sp, r0, r1, lsr #25
   13860:	push	{r4, r5, r6, sl, fp, lr}
   13864:	add	fp, sp, #16
   13868:	sub	sp, sp, #16
   1386c:	mov	r5, r0
   13870:	mov	r0, #2
   13874:	mov	r2, #0
   13878:	mov	r4, r1
   1387c:	mov	r6, #0
   13880:	str	r0, [sp]
   13884:	mov	r0, r5
   13888:	ldr	r3, [pc, #84]	; 138e4 <main@@Base+0xa4c>
   1388c:	add	r3, pc, r3
   13890:	bl	16470 <flatcc_json_printer_string_field@@Base>
   13894:	mov	r0, #3
   13898:	str	r6, [sp, #8]
   1389c:	str	r6, [sp, #12]
   138a0:	mov	r1, r4
   138a4:	mov	r2, #1
   138a8:	str	r0, [sp]
   138ac:	mov	r0, r5
   138b0:	ldr	r3, [pc, #48]	; 138e8 <main@@Base+0xa50>
   138b4:	add	r3, pc, r3
   138b8:	bl	16ff0 <flatcc_json_printer_int64_field@@Base>
   138bc:	mov	r0, #5
   138c0:	mov	r1, r4
   138c4:	mov	r2, #2
   138c8:	stm	sp, {r0, r6}
   138cc:	mov	r0, r5
   138d0:	ldr	r3, [pc, #20]	; 138ec <main@@Base+0xa54>
   138d4:	add	r3, pc, r3
   138d8:	bl	16a50 <flatcc_json_printer_uint16_field@@Base>
   138dc:	sub	sp, fp, #16
   138e0:	pop	{r4, r5, r6, sl, fp, pc}
   138e4:	andeq	sp, r0, ip, asr #26
   138e8:	andeq	sp, r0, r7, lsr #26
   138ec:	andeq	sp, r0, fp, lsl #26
   138f0:	push	{r4, r5, fp, lr}
   138f4:	add	fp, sp, #8
   138f8:	sub	sp, sp, #8
   138fc:	mov	r4, r1
   13900:	ldr	r1, [pc, #84]	; 1395c <main@@Base+0xac4>
   13904:	mov	r5, r0
   13908:	mov	r0, #2
   1390c:	mov	r3, #0
   13910:	str	r0, [sp, #4]
   13914:	mov	r0, r5
   13918:	mov	r2, r4
   1391c:	add	r1, pc, r1
   13920:	str	r1, [sp]
   13924:	mov	r1, #0
   13928:	bl	17f1c <flatcc_json_printer_uint32_struct_field@@Base>
   1392c:	ldr	r1, [pc, #44]	; 13960 <main@@Base+0xac8>
   13930:	mov	r0, #8
   13934:	mov	r2, r4
   13938:	mov	r3, #4
   1393c:	str	r0, [sp, #4]
   13940:	mov	r0, r5
   13944:	add	r1, pc, r1
   13948:	str	r1, [sp]
   1394c:	mov	r1, #1
   13950:	bl	17f1c <flatcc_json_printer_uint32_struct_field@@Base>
   13954:	sub	sp, fp, #8
   13958:	pop	{r4, r5, fp, pc}
   1395c:			; <UNDEFINED> instruction: 0x0000dcbc
   13960:	andeq	sp, r0, r1, lsr #25
   13964:	bx	lr
   13968:	push	{r4, r5, r6, sl, fp, lr}
   1396c:	add	fp, sp, #16
   13970:	sub	sp, sp, #8
   13974:	mov	r5, r0
   13978:	mov	r6, #0
   1397c:	mov	r0, #4
   13980:	mov	r2, #0
   13984:	mov	r4, r1
   13988:	stm	sp, {r0, r6}
   1398c:	mov	r0, r5
   13990:	ldr	r3, [pc, #84]	; 139ec <main@@Base+0xb54>
   13994:	add	r3, pc, r3
   13998:	bl	16700 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   1399c:	mov	r0, #1
   139a0:	mov	r1, #7
   139a4:	mov	r2, #1
   139a8:	str	r1, [sp]
   139ac:	str	r0, [sp, #4]
   139b0:	mov	r0, r5
   139b4:	mov	r1, r4
   139b8:	ldr	r3, [pc, #48]	; 139f0 <main@@Base+0xb58>
   139bc:	add	r3, pc, r3
   139c0:	bl	16700 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   139c4:	mov	r0, #6
   139c8:	mov	r1, r4
   139cc:	mov	r2, #2
   139d0:	stm	sp, {r0, r6}
   139d4:	mov	r0, r5
   139d8:	ldr	r3, [pc, #20]	; 139f4 <main@@Base+0xb5c>
   139dc:	add	r3, pc, r3
   139e0:	bl	16700 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   139e4:	sub	sp, fp, #16
   139e8:	pop	{r4, r5, r6, sl, fp, pc}
   139ec:	andeq	sp, r0, sp, asr ip
   139f0:	andeq	sp, r0, r2, lsr ip
   139f4:	andeq	sp, r0, sl, lsl ip
   139f8:	push	{r4, r5, r6, r7, fp, lr}
   139fc:	add	fp, sp, #16
   13a00:	sub	sp, sp, #16
   13a04:	ldr	r7, [pc, #144]	; 13a9c <main@@Base+0xc04>
   13a08:	mov	r5, r0
   13a0c:	mov	r6, #2
   13a10:	mov	r0, #5
   13a14:	mov	r2, #0
   13a18:	mov	r4, r1
   13a1c:	add	r7, pc, r7
   13a20:	stm	sp, {r0, r6, r7}
   13a24:	mov	r0, r5
   13a28:	ldr	r3, [pc, #112]	; 13aa0 <main@@Base+0xc08>
   13a2c:	add	r3, pc, r3
   13a30:	bl	177d0 <flatcc_json_printer_int8_enum_field@@Base>
   13a34:	mov	r0, #6
   13a38:	mov	r1, r4
   13a3c:	mov	r2, #1
   13a40:	stm	sp, {r0, r6, r7}
   13a44:	mov	r0, r5
   13a48:	ldr	r3, [pc, #84]	; 13aa4 <main@@Base+0xc0c>
   13a4c:	add	r3, pc, r3
   13a50:	bl	177d0 <flatcc_json_printer_int8_enum_field@@Base>
   13a54:	str	r6, [sp]
   13a58:	str	r6, [sp, #4]
   13a5c:	mov	r0, r5
   13a60:	mov	r1, r4
   13a64:	mov	r2, #2
   13a68:	ldr	r3, [pc, #56]	; 13aa8 <main@@Base+0xc10>
   13a6c:	add	r3, pc, r3
   13a70:	bl	168f0 <flatcc_json_printer_uint8_field@@Base>
   13a74:	mov	r0, #3
   13a78:	mov	r1, r4
   13a7c:	mov	r2, #3
   13a80:	stm	sp, {r0, r6}
   13a84:	mov	r0, r5
   13a88:	ldr	r3, [pc, #28]	; 13aac <main@@Base+0xc14>
   13a8c:	add	r3, pc, r3
   13a90:	bl	168f0 <flatcc_json_printer_uint8_field@@Base>
   13a94:	sub	sp, fp, #16
   13a98:	pop	{r4, r5, r6, r7, fp, pc}
   13a9c:			; <UNDEFINED> instruction: 0xfffffbf8
   13aa0:	andeq	sp, r0, pc, asr r8
   13aa4:	andeq	sp, r0, ip, lsl sl
   13aa8:	andeq	sp, r0, r3, lsl #20
   13aac:	andeq	sp, r0, r6, ror #19
   13ab0:	bx	lr
   13ab4:	push	{r4, r5, fp, lr}
   13ab8:	add	fp, sp, #8
   13abc:	sub	sp, sp, #16
   13ac0:	mov	r5, r0
   13ac4:	ldr	r0, [pc, #148]	; 13b60 <main@@Base+0xcc8>
   13ac8:	mov	r4, r1
   13acc:	mov	r1, #6
   13ad0:	mov	r2, #0
   13ad4:	str	r1, [sp]
   13ad8:	mov	r1, r4
   13adc:	add	r0, pc, r0
   13ae0:	str	r0, [sp, #4]
   13ae4:	mov	r0, r5
   13ae8:	ldr	r3, [pc, #116]	; 13b64 <main@@Base+0xccc>
   13aec:	add	r3, pc, r3
   13af0:	bl	1f2f0 <flatcc_json_printer_table_field@@Base>
   13af4:	ldr	r0, [pc, #108]	; 13b68 <main@@Base+0xcd0>
   13af8:	mov	r1, #5
   13afc:	mov	r2, #1
   13b00:	str	r1, [sp]
   13b04:	mov	r1, r4
   13b08:	add	r0, pc, r0
   13b0c:	str	r0, [sp, #4]
   13b10:	mov	r0, r5
   13b14:	ldr	r3, [pc, #80]	; 13b6c <main@@Base+0xcd4>
   13b18:	add	r3, pc, r3
   13b1c:	bl	1f2f0 <flatcc_json_printer_table_field@@Base>
   13b20:	ldr	r0, [pc, #72]	; 13b70 <main@@Base+0xcd8>
   13b24:	ldr	r1, [pc, #72]	; 13b74 <main@@Base+0xcdc>
   13b28:	mov	r2, #7
   13b2c:	str	r2, [sp]
   13b30:	mov	r2, #3
   13b34:	add	r0, pc, r0
   13b38:	add	r1, pc, r1
   13b3c:	str	r1, [sp, #4]
   13b40:	str	r0, [sp, #8]
   13b44:	mov	r0, r5
   13b48:	mov	r1, r4
   13b4c:	ldr	r3, [pc, #36]	; 13b78 <main@@Base+0xce0>
   13b50:	add	r3, pc, r3
   13b54:	bl	1ef1c <flatcc_json_printer_union_vector_field@@Base>
   13b58:	sub	sp, fp, #8
   13b5c:	pop	{r4, r5, fp, pc}
   13b60:	muleq	r0, r8, r0
   13b64:	andeq	sp, r0, sl, lsl #19
   13b68:	andeq	r0, r0, r0, lsr #2
   13b6c:	andeq	sp, r0, r5, ror #18
   13b70:			; <UNDEFINED> instruction: 0xfffffc50
   13b74:			; <UNDEFINED> instruction: 0xfffffbc0
   13b78:	andeq	sp, r0, r3, lsr r9
   13b7c:	push	{r4, r5, r6, sl, fp, lr}
   13b80:	add	fp, sp, #16
   13b84:	sub	sp, sp, #8
   13b88:	mov	r5, r0
   13b8c:	ldr	r0, [pc, #132]	; 13c18 <main@@Base+0xd80>
   13b90:	mov	r4, r1
   13b94:	mov	r1, #21
   13b98:	mov	r2, #0
   13b9c:	str	r1, [sp]
   13ba0:	mov	r1, r4
   13ba4:	add	r0, pc, r0
   13ba8:	str	r0, [sp, #4]
   13bac:	mov	r0, r5
   13bb0:	ldr	r3, [pc, #100]	; 13c1c <main@@Base+0xd84>
   13bb4:	add	r3, pc, r3
   13bb8:	bl	1f2f0 <flatcc_json_printer_table_field@@Base>
   13bbc:	ldr	r0, [pc, #92]	; 13c20 <main@@Base+0xd88>
   13bc0:	mov	r6, #22
   13bc4:	mov	r1, r4
   13bc8:	mov	r2, #1
   13bcc:	str	r6, [sp]
   13bd0:	add	r0, pc, r0
   13bd4:	str	r0, [sp, #4]
   13bd8:	mov	r0, r5
   13bdc:	ldr	r3, [pc, #64]	; 13c24 <main@@Base+0xd8c>
   13be0:	add	r3, pc, r3
   13be4:	bl	1f2f0 <flatcc_json_printer_table_field@@Base>
   13be8:	ldr	r0, [pc, #56]	; 13c28 <main@@Base+0xd90>
   13bec:	str	r6, [sp]
   13bf0:	mov	r1, r4
   13bf4:	mov	r2, #2
   13bf8:	add	r0, pc, r0
   13bfc:	str	r0, [sp, #4]
   13c00:	mov	r0, r5
   13c04:	ldr	r3, [pc, #32]	; 13c2c <main@@Base+0xd94>
   13c08:	add	r3, pc, r3
   13c0c:	bl	1f2f0 <flatcc_json_printer_table_field@@Base>
   13c10:	sub	sp, fp, #16
   13c14:	pop	{r4, r5, r6, sl, fp, pc}
   13c18:	andeq	r0, r0, r4, lsl #3
   13c1c:	ldrdeq	sp, [r0], -r7
   13c20:	andeq	r0, r0, r0, asr #5
   13c24:	andeq	sp, r0, r1, asr #17
   13c28:	andeq	r0, r0, r4, lsl #6
   13c2c:			; <UNDEFINED> instruction: 0x0000d8b0
   13c30:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13c34:	add	fp, sp, #24
   13c38:	sub	sp, sp, #16
   13c3c:	ldr	r6, [pc, #208]	; 13d14 <main@@Base+0xe7c>
   13c40:	ldr	r7, [pc, #208]	; 13d18 <main@@Base+0xe80>
   13c44:	mov	r5, r0
   13c48:	mov	r0, #14
   13c4c:	mov	r2, #1
   13c50:	mov	r4, r1
   13c54:	add	r7, pc, r7
   13c58:	add	r6, pc, r6
   13c5c:	stm	sp, {r0, r7}
   13c60:	str	r6, [sp, #8]
   13c64:	mov	r0, r5
   13c68:	ldr	r3, [pc, #172]	; 13d1c <main@@Base+0xe84>
   13c6c:	add	r3, pc, r3
   13c70:	bl	1f4d8 <flatcc_json_printer_union_field@@Base>
   13c74:	mov	r8, #10
   13c78:	str	r7, [sp, #4]
   13c7c:	str	r6, [sp, #8]
   13c80:	mov	r0, r5
   13c84:	mov	r1, r4
   13c88:	mov	r2, #3
   13c8c:	str	r8, [sp]
   13c90:	ldr	r3, [pc, #136]	; 13d20 <main@@Base+0xe88>
   13c94:	add	r3, pc, r3
   13c98:	bl	1f4d8 <flatcc_json_printer_union_field@@Base>
   13c9c:	mov	r0, #9
   13ca0:	mov	r1, r4
   13ca4:	mov	r2, #5
   13ca8:	mov	r9, #5
   13cac:	stm	sp, {r0, r7}
   13cb0:	str	r6, [sp, #8]
   13cb4:	mov	r0, r5
   13cb8:	ldr	r3, [pc, #100]	; 13d24 <main@@Base+0xe8c>
   13cbc:	add	r3, pc, r3
   13cc0:	bl	1f4d8 <flatcc_json_printer_union_field@@Base>
   13cc4:	str	r9, [sp]
   13cc8:	str	r7, [sp, #4]
   13ccc:	str	r6, [sp, #8]
   13cd0:	mov	r0, r5
   13cd4:	mov	r1, r4
   13cd8:	mov	r2, #7
   13cdc:	ldr	r3, [pc, #68]	; 13d28 <main@@Base+0xe90>
   13ce0:	add	r3, pc, r3
   13ce4:	bl	1f4d8 <flatcc_json_printer_union_field@@Base>
   13ce8:	str	r8, [sp]
   13cec:	str	r7, [sp, #4]
   13cf0:	str	r6, [sp, #8]
   13cf4:	mov	r0, r5
   13cf8:	mov	r1, r4
   13cfc:	mov	r2, #9
   13d00:	ldr	r3, [pc, #36]	; 13d2c <main@@Base+0xe94>
   13d04:	add	r3, pc, r3
   13d08:	bl	1ef1c <flatcc_json_printer_union_vector_field@@Base>
   13d0c:	sub	sp, fp, #24
   13d10:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13d14:	andeq	r0, r0, r4, ror #7
   13d18:	andeq	r0, r0, r4, lsl r3
   13d1c:	andeq	sp, r0, r2, ror #17
   13d20:	andeq	sp, r0, r9, asr #17
   13d24:	andeq	sp, r0, ip, lsr #17
   13d28:	muleq	r0, r2, r8
   13d2c:	andeq	sp, r0, r4, ror r8
   13d30:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13d34:	add	fp, sp, #24
   13d38:	sub	sp, sp, #16
   13d3c:	mov	r9, #4
   13d40:	mov	r2, #0
   13d44:	mov	r4, r1
   13d48:	mov	r5, r0
   13d4c:	mov	r6, #0
   13d50:	str	r9, [sp]
   13d54:	ldr	r3, [pc, #280]	; 13e74 <main@@Base+0xfdc>
   13d58:	add	r3, pc, r3
   13d5c:	bl	16470 <flatcc_json_printer_string_field@@Base>
   13d60:	mov	r8, #9
   13d64:	str	r6, [sp, #4]
   13d68:	mov	r0, r5
   13d6c:	mov	r1, r4
   13d70:	mov	r2, #1
   13d74:	str	r8, [sp]
   13d78:	ldr	r3, [pc, #248]	; 13e78 <main@@Base+0xfe0>
   13d7c:	add	r3, pc, r3
   13d80:	bl	16b10 <flatcc_json_printer_uint32_field@@Base>
   13d84:	str	r9, [sp]
   13d88:	mov	r0, r5
   13d8c:	mov	r1, r4
   13d90:	mov	r2, #2
   13d94:	ldr	r3, [pc, #224]	; 13e7c <main@@Base+0xfe4>
   13d98:	add	r3, pc, r3
   13d9c:	bl	16470 <flatcc_json_printer_string_field@@Base>
   13da0:	mov	r7, #8
   13da4:	str	r6, [sp, #8]
   13da8:	str	r6, [sp, #12]
   13dac:	mov	r0, r5
   13db0:	mov	r1, r4
   13db4:	mov	r2, #3
   13db8:	str	r7, [sp]
   13dbc:	ldr	r3, [pc, #188]	; 13e80 <main@@Base+0xfe8>
   13dc0:	add	r3, pc, r3
   13dc4:	bl	16ff0 <flatcc_json_printer_int64_field@@Base>
   13dc8:	str	r9, [sp]
   13dcc:	mov	r0, r5
   13dd0:	mov	r1, r4
   13dd4:	mov	r2, #4
   13dd8:	ldr	r3, [pc, #164]	; 13e84 <main@@Base+0xfec>
   13ddc:	add	r3, pc, r3
   13de0:	bl	16470 <flatcc_json_printer_string_field@@Base>
   13de4:	str	r6, [sp, #8]
   13de8:	str	r6, [sp, #12]
   13dec:	str	r7, [sp]
   13df0:	mov	r0, r5
   13df4:	mov	r1, r4
   13df8:	mov	r2, #5
   13dfc:	ldr	r3, [pc, #132]	; 13e88 <main@@Base+0xff0>
   13e00:	add	r3, pc, r3
   13e04:	bl	16ff0 <flatcc_json_printer_int64_field@@Base>
   13e08:	str	r8, [sp]
   13e0c:	str	r6, [sp, #4]
   13e10:	mov	r0, r5
   13e14:	mov	r1, r4
   13e18:	mov	r2, #6
   13e1c:	ldr	r3, [pc, #104]	; 13e8c <main@@Base+0xff4>
   13e20:	add	r3, pc, r3
   13e24:	bl	16b10 <flatcc_json_printer_uint32_field@@Base>
   13e28:	str	r6, [sp, #8]
   13e2c:	str	r6, [sp, #12]
   13e30:	str	r7, [sp]
   13e34:	mov	r0, r5
   13e38:	mov	r1, r4
   13e3c:	mov	r2, #7
   13e40:	ldr	r3, [pc, #72]	; 13e90 <main@@Base+0xff8>
   13e44:	add	r3, pc, r3
   13e48:	bl	16ff0 <flatcc_json_printer_int64_field@@Base>
   13e4c:	str	r8, [sp]
   13e50:	str	r6, [sp, #4]
   13e54:	mov	r0, r5
   13e58:	mov	r1, r4
   13e5c:	mov	r2, #8
   13e60:	ldr	r3, [pc, #44]	; 13e94 <main@@Base+0xffc>
   13e64:	add	r3, pc, r3
   13e68:	bl	16b10 <flatcc_json_printer_uint32_field@@Base>
   13e6c:	sub	sp, fp, #24
   13e70:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13e74:	andeq	sp, r0, r7, ror r7
   13e78:	andeq	sp, r0, r8, asr r7
   13e7c:	andeq	sp, r0, r6, asr #14
   13e80:	andeq	sp, r0, r3, lsr #14
   13e84:	andeq	sp, r0, r0, lsl r7
   13e88:	strdeq	sp, [r0], -r1
   13e8c:	ldrdeq	sp, [r0], -sl
   13e90:	andeq	sp, r0, r0, asr #13
   13e94:	andeq	sp, r0, r9, lsr #13
   13e98:	push	{r4, r5, r6, sl, fp, lr}
   13e9c:	add	fp, sp, #16
   13ea0:	sub	sp, sp, #16
   13ea4:	mov	r6, #0
   13ea8:	mov	r5, r0
   13eac:	mov	r0, #15
   13eb0:	mov	r2, #0
   13eb4:	mov	r4, r1
   13eb8:	str	r0, [sp]
   13ebc:	str	r6, [sp, #8]
   13ec0:	str	r6, [sp, #12]
   13ec4:	mov	r0, r5
   13ec8:	ldr	r3, [pc, #44]	; 13efc <main@@Base+0x1064>
   13ecc:	add	r3, pc, r3
   13ed0:	bl	16ff0 <flatcc_json_printer_int64_field@@Base>
   13ed4:	mov	r0, #16
   13ed8:	mov	r1, r4
   13edc:	mov	r2, #1
   13ee0:	stm	sp, {r0, r6}
   13ee4:	mov	r0, r5
   13ee8:	ldr	r3, [pc, #16]	; 13f00 <main@@Base+0x1068>
   13eec:	add	r3, pc, r3
   13ef0:	bl	16b10 <flatcc_json_printer_uint32_field@@Base>
   13ef4:	sub	sp, fp, #16
   13ef8:	pop	{r4, r5, r6, sl, fp, pc}
   13efc:	andeq	sp, r0, fp, asr #12
   13f00:	andeq	sp, r0, fp, lsr r6
   13f04:	push	{r4, r5, r6, sl, fp, lr}
   13f08:	add	fp, sp, #16
   13f0c:	sub	sp, sp, #16
   13f10:	mov	r6, #0
   13f14:	mov	r5, r0
   13f18:	mov	r0, #15
   13f1c:	mov	r2, #0
   13f20:	mov	r4, r1
   13f24:	str	r0, [sp]
   13f28:	str	r6, [sp, #8]
   13f2c:	str	r6, [sp, #12]
   13f30:	mov	r0, r5
   13f34:	ldr	r3, [pc, #44]	; 13f68 <main@@Base+0x10d0>
   13f38:	add	r3, pc, r3
   13f3c:	bl	16ff0 <flatcc_json_printer_int64_field@@Base>
   13f40:	mov	r0, #21
   13f44:	mov	r1, r4
   13f48:	mov	r2, #1
   13f4c:	stm	sp, {r0, r6}
   13f50:	mov	r0, r5
   13f54:	ldr	r3, [pc, #16]	; 13f6c <main@@Base+0x10d4>
   13f58:	add	r3, pc, r3
   13f5c:	bl	16b10 <flatcc_json_printer_uint32_field@@Base>
   13f60:	sub	sp, fp, #16
   13f64:	pop	{r4, r5, r6, sl, fp, pc}
   13f68:	ldrdeq	sp, [r0], -pc	; <UNPREDICTABLE>
   13f6c:	andeq	sp, r0, r0, ror #11
   13f70:	sub	r2, r1, #2
   13f74:	cmp	r2, #9
   13f78:	bhi	13fc0 <main@@Base+0x1128>
   13f7c:	add	r1, pc, #4
   13f80:	ldr	r2, [r1, r2, lsl #2]
   13f84:	add	pc, r1, r2
   13f88:	andeq	r0, r0, r8, lsr #32
   13f8c:	andeq	r0, r0, r0, asr r0
   13f90:	andeq	r0, r0, r0, asr r0
   13f94:	andeq	r0, r0, r0, asr r0
   13f98:	andeq	r0, r0, r0, asr r0
   13f9c:	andeq	r0, r0, r0, asr r0
   13fa0:	andeq	r0, r0, r0, rrx
   13fa4:	andeq	r0, r0, r0, ror r0
   13fa8:	andeq	r0, r0, r0, lsl #1
   13fac:	muleq	r0, r0, r0
   13fb0:	ldr	r1, [pc, #116]	; 1402c <main@@Base+0x1194>
   13fb4:	mov	r2, #5
   13fb8:	add	r1, pc, r1
   13fbc:	b	16284 <flatcc_json_printer_enum@@Base>
   13fc0:	cmp	r1, #255	; 0xff
   13fc4:	bne	13fd8 <main@@Base+0x1140>
   13fc8:	ldr	r1, [pc, #88]	; 14028 <main@@Base+0x1190>
   13fcc:	mov	r2, #6
   13fd0:	add	r1, pc, r1
   13fd4:	b	16284 <flatcc_json_printer_enum@@Base>
   13fd8:	ldr	r1, [pc, #96]	; 14040 <main@@Base+0x11a8>
   13fdc:	mov	r2, #4
   13fe0:	add	r1, pc, r1
   13fe4:	b	16284 <flatcc_json_printer_enum@@Base>
   13fe8:	ldr	r1, [pc, #64]	; 14030 <main@@Base+0x1198>
   13fec:	mov	r2, #8
   13ff0:	add	r1, pc, r1
   13ff4:	b	16284 <flatcc_json_printer_enum@@Base>
   13ff8:	ldr	r1, [pc, #52]	; 14034 <main@@Base+0x119c>
   13ffc:	mov	r2, #5
   14000:	add	r1, pc, r1
   14004:	b	16284 <flatcc_json_printer_enum@@Base>
   14008:	ldr	r1, [pc, #40]	; 14038 <main@@Base+0x11a0>
   1400c:	mov	r2, #7
   14010:	add	r1, pc, r1
   14014:	b	16284 <flatcc_json_printer_enum@@Base>
   14018:	ldr	r1, [pc, #28]	; 1403c <main@@Base+0x11a4>
   1401c:	mov	r2, #5
   14020:	add	r1, pc, r1
   14024:	b	16284 <flatcc_json_printer_enum@@Base>
   14028:	ldrdeq	sp, [r0], -r6
   1402c:	andeq	sp, r0, fp, asr #11
   14030:	muleq	r0, r9, r5
   14034:	muleq	r0, r2, r5
   14038:	andeq	sp, r0, r8, lsl #11
   1403c:	andeq	sp, r0, r0, lsl #11
   14040:	andeq	sp, r0, r3, lsl #9
   14044:	ldrb	r3, [r1, #8]
   14048:	sub	r2, r3, #2
   1404c:	cmp	r2, #9
   14050:	bhi	14094 <main@@Base+0x11fc>
   14054:	add	r3, pc, #4
   14058:	ldr	r2, [r3, r2, lsl #2]
   1405c:	add	pc, r3, r2
   14060:	andeq	r0, r0, r0, asr #32
   14064:	andeq	r0, r0, r8, asr r0
   14068:	andeq	r0, r0, r8, asr r0
   1406c:	andeq	r0, r0, r8, asr r0
   14070:	andeq	r0, r0, r8, asr r0
   14074:	andeq	r0, r0, r8, asr r0
   14078:	andeq	r0, r0, ip, asr #32
   1407c:	andeq	r0, r0, r8, lsr #32
   14080:	andeq	r0, r0, r8, lsr #32
   14084:	andeq	r0, r0, ip, lsr r0
   14088:	ldr	r2, [pc, #52]	; 140c4 <main@@Base+0x122c>
   1408c:	add	r2, pc, r2
   14090:	b	1fb5c <flatcc_json_printer_union_struct@@Base>
   14094:	cmp	r3, #255	; 0xff
   14098:	bxne	lr
   1409c:	b	1fc7c <flatcc_json_printer_union_string@@Base>
   140a0:	ldr	r2, [pc, #20]	; 140bc <main@@Base+0x1224>
   140a4:	add	r2, pc, r2
   140a8:	b	1f9dc <flatcc_json_printer_union_table@@Base>
   140ac:	ldr	r2, [pc, #12]	; 140c0 <main@@Base+0x1228>
   140b0:	add	r2, pc, r2
   140b4:	b	1fb5c <flatcc_json_printer_union_struct@@Base>
   140b8:	bx	lr
   140bc:	andeq	r0, r0, ip, lsl r0
   140c0:	andeq	r0, r0, r8, asr #32
   140c4:	andeq	r0, r0, r8, lsr #1
   140c8:	push	{fp, lr}
   140cc:	mov	fp, sp
   140d0:	sub	sp, sp, #8
   140d4:	mov	r2, #0
   140d8:	mov	r3, #19
   140dc:	str	r2, [sp, #4]
   140e0:	str	r3, [sp]
   140e4:	mov	r2, #0
   140e8:	ldr	r3, [pc, #12]	; 140fc <main@@Base+0x1264>
   140ec:	add	r3, pc, r3
   140f0:	bl	16f18 <flatcc_json_printer_int32_field@@Base>
   140f4:	mov	sp, fp
   140f8:	pop	{fp, pc}
   140fc:	andeq	sp, r0, r1, asr #9
   14100:	push	{fp, lr}
   14104:	mov	fp, sp
   14108:	sub	sp, sp, #8
   1410c:	ldr	r3, [pc, #36]	; 14138 <main@@Base+0x12a0>
   14110:	mov	r2, r1
   14114:	mov	r1, #11
   14118:	str	r1, [sp, #4]
   1411c:	mov	r1, #0
   14120:	add	r3, pc, r3
   14124:	str	r3, [sp]
   14128:	mov	r3, #0
   1412c:	bl	17ec0 <flatcc_json_printer_uint16_struct_field@@Base>
   14130:	mov	sp, fp
   14134:	pop	{fp, pc}
   14138:	andeq	sp, r0, r1, lsr #9
   1413c:	push	{fp, lr}
   14140:	mov	fp, sp
   14144:	sub	sp, sp, #8
   14148:	ldr	r3, [pc, #36]	; 14174 <main@@Base+0x12dc>
   1414c:	mov	r2, r1
   14150:	mov	r1, #10
   14154:	str	r1, [sp, #4]
   14158:	mov	r1, #0
   1415c:	add	r3, pc, r3
   14160:	str	r3, [sp]
   14164:	mov	r3, #0
   14168:	bl	18168 <flatcc_json_printer_int32_struct_field@@Base>
   1416c:	mov	sp, fp
   14170:	pop	{fp, pc}
   14174:	andeq	sp, r0, r1, ror r4

00014178 <flatcc_json_printer_error_string@@Base>:
   14178:	cmp	r0, #3
   1417c:	ldrhi	r0, [pc, #24]	; 1419c <flatcc_json_printer_error_string@@Base+0x24>
   14180:	addhi	r0, pc, r0
   14184:	bxhi	lr
   14188:	ldr	r1, [pc, #8]	; 14198 <flatcc_json_printer_error_string@@Base+0x20>
   1418c:	add	r1, pc, r1
   14190:	ldr	r0, [r1, r0, lsl #2]
   14194:	bx	lr
   14198:	andeq	lr, r1, ip, ror #26
   1419c:	andeq	sp, r0, sp, ror #11

000141a0 <flatcc_json_printer_fmt_float@@Base>:
   141a0:	vcvt.f64.f32	d0, s0
   141a4:	b	141a8 <flatcc_json_printer_fmt_float@@Base+0x8>
   141a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   141ac:	add	fp, sp, #28
   141b0:	sub	sp, sp, #84	; 0x54
   141b4:	cmp	r0, #0
   141b8:	beq	14f60 <flatcc_json_printer_fmt_float@@Base+0xdc0>
   141bc:	mov	ip, r0
   141c0:	vmov	r3, r2, d0
   141c4:	mov	r0, #-2147483648	; 0x80000000
   141c8:	mov	r6, #0
   141cc:	add	r1, r0, #266338304	; 0xfe00000
   141d0:	lsl	r7, r2, #1
   141d4:	subs	r6, r6, r3, lsl #1
   141d8:	add	r1, r1, #1879048192	; 0x70000000
   141dc:	orr	r7, r7, r3, lsr #31
   141e0:	sbcs	r1, r1, r7
   141e4:	bcs	14200 <flatcc_json_printer_fmt_float@@Base+0x60>
   141e8:	ldr	r1, [pc, #3592]	; 14ff8 <flatcc_json_printer_fmt_float@@Base+0xe58>
   141ec:	mov	r0, ip
   141f0:	add	r1, pc, r1
   141f4:	sub	sp, fp, #28
   141f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   141fc:	b	12964 <sprintf@plt>
   14200:	cmn	r2, #1
   14204:	ble	14210 <flatcc_json_printer_fmt_float@@Base+0x70>
   14208:	mov	r5, ip
   1420c:	b	14224 <flatcc_json_printer_fmt_float@@Base+0x84>
   14210:	mov	r1, #45	; 0x2d
   14214:	mov	r5, ip
   14218:	vneg.f64	d0, d0
   1421c:	eor	r2, r2, r0
   14220:	strb	r1, [r5], #1
   14224:	movw	r0, #0
   14228:	movt	r0, #32752	; 0x7ff0
   1422c:	eor	r1, r2, r0
   14230:	orrs	r1, r3, r1
   14234:	beq	1424c <flatcc_json_printer_fmt_float@@Base+0xac>
   14238:	orrs	r1, r3, r2
   1423c:	bne	14264 <flatcc_json_printer_fmt_float@@Base+0xc4>
   14240:	mov	r0, #48	; 0x30
   14244:	strh	r0, [r5], #1
   14248:	b	14258 <flatcc_json_printer_fmt_float@@Base+0xb8>
   1424c:	movw	r0, #28265	; 0x6e69
   14250:	movt	r0, #102	; 0x66
   14254:	str	r0, [r5], #3
   14258:	sub	r0, r5, ip
   1425c:	sub	sp, fp, #28
   14260:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14264:	vmov	sl, r9, d0
   14268:	ands	r1, r9, r0
   1426c:	bfc	r9, #20, #12
   14270:	str	r1, [fp, #-40]	; 0xffffffd8
   14274:	beq	14290 <flatcc_json_printer_fmt_float@@Base+0xf0>
   14278:	movw	r0, #64461	; 0xfbcd
   1427c:	orr	r6, r9, #1048576	; 0x100000
   14280:	movt	r0, #65535	; 0xffff
   14284:	add	r4, r0, r1, lsr #20
   14288:	mov	r0, #0
   1428c:	b	142a8 <flatcc_json_printer_fmt_float@@Base+0x108>
   14290:	orrs	r0, sl, r9
   14294:	beq	14fc0 <flatcc_json_printer_fmt_float@@Base+0xe20>
   14298:	movw	r4, #64462	; 0xfbce
   1429c:	mov	r0, #0
   142a0:	mov	r6, r9
   142a4:	movt	r4, #65535	; 0xffff
   142a8:	mov	r7, r4
   142ac:	mov	r3, sl
   142b0:	mov	r2, r6
   142b4:	lsl	r1, r2, #10
   142b8:	sub	r7, r7, #10
   142bc:	orr	r2, r1, r3, lsr #22
   142c0:	lsl	r3, r3, #10
   142c4:	cmp	r2, #4194304	; 0x400000
   142c8:	bcc	142b4 <flatcc_json_printer_fmt_float@@Base+0x114>
   142cc:	cmp	r2, #0
   142d0:	str	r5, [fp, #-36]	; 0xffffffdc
   142d4:	blt	14300 <flatcc_json_printer_fmt_float@@Base+0x160>
   142d8:	mvn	r5, #0
   142dc:	lsl	r1, r2, #1
   142e0:	sub	r7, r7, #1
   142e4:	orr	r2, r1, r3, lsr #31
   142e8:	lsl	r1, r3, #1
   142ec:	subs	r3, r5, r3, lsl #1
   142f0:	sbcs	r3, r5, r2
   142f4:	mov	r3, r1
   142f8:	blt	142dc <flatcc_json_printer_fmt_float@@Base+0x13c>
   142fc:	b	14308 <flatcc_json_printer_fmt_float@@Base+0x168>
   14300:	mov	r1, r3
   14304:	mvn	r5, #0
   14308:	mov	r0, #1
   1430c:	sub	r8, r4, #1
   14310:	str	r6, [fp, #-44]	; 0xffffffd4
   14314:	str	r4, [fp, #-32]	; 0xffffffe0
   14318:	orr	r3, r0, sl, lsl #1
   1431c:	lsl	r0, r6, #1
   14320:	orr	lr, r0, sl, lsr #31
   14324:	mov	r0, #0
   14328:	cmp	r0, lr, lsr #22
   1432c:	bne	1435c <flatcc_json_printer_fmt_float@@Base+0x1bc>
   14330:	mov	r0, #0
   14334:	mov	r6, lr
   14338:	mov	r4, r8
   1433c:	str	r0, [fp, #-48]	; 0xffffffd0
   14340:	lsl	r0, r6, #10
   14344:	sub	r4, r4, #10
   14348:	orr	r6, r0, r3, lsr #22
   1434c:	lsl	r3, r3, #10
   14350:	cmp	r6, #4194304	; 0x400000
   14354:	bcc	14340 <flatcc_json_printer_fmt_float@@Base+0x1a0>
   14358:	b	1436c <flatcc_json_printer_fmt_float@@Base+0x1cc>
   1435c:	mov	r0, #0
   14360:	mov	r4, r8
   14364:	mov	r6, lr
   14368:	str	r0, [fp, #-48]	; 0xffffffd0
   1436c:	subs	r0, r5, r3
   14370:	str	ip, [sp, #24]
   14374:	sbcs	r0, r5, r6
   14378:	bge	143a0 <flatcc_json_printer_fmt_float@@Base+0x200>
   1437c:	lsl	r0, r6, #1
   14380:	lsl	ip, r3, #1
   14384:	sub	r4, r4, #1
   14388:	orr	r6, r0, r3, lsr #31
   1438c:	subs	r0, r5, r3, lsl #1
   14390:	mov	r3, ip
   14394:	sbcs	r0, r5, r6
   14398:	blt	1437c <flatcc_json_printer_fmt_float@@Base+0x1dc>
   1439c:	b	143a4 <flatcc_json_printer_fmt_float@@Base+0x204>
   143a0:	mov	ip, r3
   143a4:	vcmpe.f64	d0, #0.0
   143a8:	vmrs	APSR_nzcv, fpscr
   143ac:	ble	14fa0 <flatcc_json_printer_fmt_float@@Base+0xe00>
   143b0:	vldr	d16, [pc, #672]	; 14658 <flatcc_json_printer_fmt_float@@Base+0x4b8>
   143b4:	vcmpe.f64	d0, d16
   143b8:	vmrs	APSR_nzcv, fpscr
   143bc:	bhi	14fa0 <flatcc_json_printer_fmt_float@@Base+0xe00>
   143c0:	ldr	r5, [fp, #-40]	; 0xffffffd8
   143c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   143c8:	orrs	r3, sl, r9
   143cc:	vldr	d16, [pc, #652]	; 14660 <flatcc_json_printer_fmt_float@@Base+0x4c0>
   143d0:	movwne	r3, #1
   143d4:	clz	r5, r5
   143d8:	lsl	r0, r0, #2
   143dc:	lsr	r5, r5, #5
   143e0:	orrs	r3, r3, r5
   143e4:	mvn	r5, #60	; 0x3c
   143e8:	sub	r5, r5, r7
   143ec:	orreq	lr, r0, sl, lsr #30
   143f0:	lsl	r0, sl, #2
   143f4:	lslne	r0, sl, #1
   143f8:	vmov	s2, r5
   143fc:	subs	r9, r0, #1
   14400:	vcvt.f64.s32	d17, s2
   14404:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14408:	sbc	lr, lr, #0
   1440c:	cmp	r3, #0
   14410:	vmul.f64	d16, d17, d16
   14414:	vcvt.s32.f64	s2, d16
   14418:	vcmpe.f64	d16, #0.0
   1441c:	subeq	r8, r0, #2
   14420:	sub	r3, r8, r4
   14424:	rsb	r0, r3, #32
   14428:	lsl	sl, r9, r3
   1442c:	lsr	r0, r9, r0
   14430:	orr	r5, r0, lr, lsl r3
   14434:	sub	r0, r3, #32
   14438:	cmp	r0, #0
   1443c:	lslge	r5, r9, r0
   14440:	movwge	sl, #0
   14444:	vmrs	APSR_nzcv, fpscr
   14448:	str	r5, [fp, #-32]	; 0xffffffe0
   1444c:	vmov	r5, s2
   14450:	bmi	14468 <flatcc_json_printer_fmt_float@@Base+0x2c8>
   14454:	vcvt.f64.s32	d17, s2
   14458:	vsub.f64	d16, d16, d17
   1445c:	vcmp.f64	d16, #0.0
   14460:	vmrs	APSR_nzcv, fpscr
   14464:	addne	r5, r5, #1
   14468:	movw	r0, #347	; 0x15b
   1446c:	bic	r1, r1, #1
   14470:	add	r0, r5, r0
   14474:	asr	r5, r0, #31
   14478:	add	r0, r0, r5, lsr #29
   1447c:	mvn	r5, #15
   14480:	and	r0, r5, r0, lsl #1
   14484:	ldr	r5, [pc, #2900]	; 14fe0 <flatcc_json_printer_fmt_float@@Base+0xe40>
   14488:	add	r5, pc, r5
   1448c:	add	r0, r5, r0
   14490:	ldrd	r8, [r0, #16]
   14494:	str	r0, [sp, #28]
   14498:	umull	r0, r5, r9, ip
   1449c:	str	r0, [fp, #-40]	; 0xffffffd8
   144a0:	umull	r0, lr, r8, r6
   144a4:	umaal	lr, r5, r9, r6
   144a8:	umull	r6, r3, r8, ip
   144ac:	ldr	r6, [fp, #-40]	; 0xffffffd8
   144b0:	adds	r0, r0, r3
   144b4:	mov	r3, #0
   144b8:	adc	r3, r3, #0
   144bc:	adds	r0, r0, r6
   144c0:	adc	r3, r3, #0
   144c4:	adds	r0, r0, #-2147483648	; 0x80000000
   144c8:	adc	r0, r3, #0
   144cc:	adds	r0, lr, r0
   144d0:	adc	r3, r5, #0
   144d4:	adds	r0, r0, #1
   144d8:	str	r0, [sp, #36]	; 0x24
   144dc:	adc	ip, r3, #0
   144e0:	umull	r0, r3, r9, sl
   144e4:	str	r0, [fp, #-40]	; 0xffffffd8
   144e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   144ec:	umull	lr, r5, r8, r0
   144f0:	umaal	r5, r3, r9, r0
   144f4:	umull	r0, r6, r8, sl
   144f8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   144fc:	adds	sl, lr, r6
   14500:	mov	r6, #0
   14504:	mov	lr, ip
   14508:	adc	r6, r6, #0
   1450c:	adds	r0, sl, r0
   14510:	adc	r6, r6, #0
   14514:	adds	r0, r0, #-2147483648	; 0x80000000
   14518:	adc	r0, r6, #0
   1451c:	adds	r0, r5, r0
   14520:	adc	r3, r3, #0
   14524:	subs	ip, r0, #1
   14528:	umull	r0, r6, r8, r2
   1452c:	sbc	sl, r3, #0
   14530:	umull	r3, r5, r9, r1
   14534:	umaal	r6, r5, r9, r2
   14538:	umull	r1, r2, r8, r1
   1453c:	ldr	r8, [sp, #36]	; 0x24
   14540:	mov	r1, #0
   14544:	adds	r0, r0, r2
   14548:	bic	r2, r3, #1
   1454c:	str	r1, [sp, #40]	; 0x28
   14550:	mov	r1, #0
   14554:	adc	r1, r1, #0
   14558:	adds	r0, r0, r2
   1455c:	adc	r1, r1, #0
   14560:	adds	r0, r0, #-2147483648	; 0x80000000
   14564:	adc	r0, r1, #0
   14568:	adds	r0, r6, r0
   1456c:	str	r0, [sp, #12]
   14570:	adc	r0, r5, #0
   14574:	str	r0, [sp, #16]
   14578:	subs	r0, r8, ip
   1457c:	str	r0, [sp, #48]	; 0x30
   14580:	sbcs	r0, lr, sl
   14584:	str	r0, [fp, #-44]	; 0xffffffd4
   14588:	bcc	14f80 <flatcc_json_printer_fmt_float@@Base+0xde0>
   1458c:	ldr	r0, [sp, #28]
   14590:	ldrsh	r0, [r0, #24]
   14594:	add	r0, r0, #64	; 0x40
   14598:	add	r6, r0, r7
   1459c:	add	r1, r0, r4
   145a0:	movw	r7, #1233	; 0x4d1
   145a4:	str	r1, [sp, #8]
   145a8:	str	r6, [sp, #4]
   145ac:	mvn	r1, #31
   145b0:	rsb	r3, r6, #0
   145b4:	add	r2, r6, #32
   145b8:	ldr	sl, [pc, #2596]	; 14fe4 <flatcc_json_printer_fmt_float@@Base+0xe44>
   145bc:	sub	r4, r1, r6
   145c0:	movw	r1, #14609	; 0x3911
   145c4:	lsr	r0, r8, r3
   145c8:	movt	r1, #1
   145cc:	orr	r0, r0, lr, lsl r2
   145d0:	cmp	r4, #0
   145d4:	mla	r5, r6, r7, r1
   145d8:	mov	r1, #1
   145dc:	lsrge	r0, lr, r4
   145e0:	add	r7, r1, r5, asr #12
   145e4:	lsr	r2, r1, r2
   145e8:	add	sl, pc, sl
   145ec:	ldr	r6, [sl, r7, lsl #2]
   145f0:	cmp	r6, r0
   145f4:	asrhi	r7, r5, #12
   145f8:	cmp	r4, #0
   145fc:	lslge	r2, r1, r4
   14600:	str	r2, [sp, #44]	; 0x2c
   14604:	str	r3, [fp, #-40]	; 0xffffffd8
   14608:	lsl	r3, r1, r3
   1460c:	movwge	r3, #0
   14610:	subs	r1, r3, #1
   14614:	str	r3, [sp, #32]
   14618:	str	lr, [sp, #20]
   1461c:	sbc	r2, r2, #0
   14620:	and	r3, r8, r1
   14624:	cmp	r7, #0
   14628:	str	r1, [fp, #-48]	; 0xffffffd0
   1462c:	and	r9, lr, r2
   14630:	str	r2, [fp, #-52]	; 0xffffffcc
   14634:	ble	146ec <flatcc_json_printer_fmt_float@@Base+0x54c>
   14638:	ldr	r1, [sl, r7, lsl #2]
   1463c:	movw	ip, #52429	; 0xcccd
   14640:	sub	r7, r7, #1
   14644:	mov	r4, #0
   14648:	mov	r8, r9
   1464c:	movt	ip, #52428	; 0xcccc
   14650:	str	r7, [fp, #-32]	; 0xffffffe0
   14654:	b	14680 <flatcc_json_printer_fmt_float@@Base+0x4e0>
   14658:			; <UNDEFINED> instruction: 0xffffffff
   1465c:	svcvc	0x00efffff
   14660:			; <UNDEFINED> instruction: 0x509f79fe
   14664:	svccc	0x00d34413
   14668:	umull	r1, r2, r1, ip
   1466c:	mov	r4, lr
   14670:	sub	r7, r7, #1
   14674:	add	r4, lr, #1
   14678:	lsr	r1, r2, #3
   1467c:	str	r7, [fp, #-32]	; 0xffffffe0
   14680:	udiv	r2, r0, r1
   14684:	ldr	r5, [fp, #-36]	; 0xffffffdc
   14688:	mov	lr, r4
   1468c:	ldr	r7, [sp, #48]	; 0x30
   14690:	add	r6, r2, #48	; 0x30
   14694:	mls	r0, r2, r1, r0
   14698:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1469c:	strb	r6, [r5, r4]
   146a0:	sub	r4, r2, #32
   146a4:	rsb	sl, r2, #32
   146a8:	lsl	r2, r0, r2
   146ac:	cmp	r4, #0
   146b0:	lsr	r5, r0, sl
   146b4:	movwge	r2, #0
   146b8:	lslge	r5, r0, r4
   146bc:	adds	r2, r2, r3
   146c0:	adc	r5, r5, r8
   146c4:	subs	r7, r2, r7
   146c8:	ldr	r7, [fp, #-44]	; 0xffffffd4
   146cc:	sbcs	r7, r5, r7
   146d0:	bcc	148fc <flatcc_json_printer_fmt_float@@Base+0x75c>
   146d4:	ldr	r7, [fp, #-32]	; 0xffffffe0
   146d8:	add	r2, r7, #1
   146dc:	cmp	r2, #2
   146e0:	bge	14668 <flatcc_json_printer_fmt_float@@Base+0x4c8>
   146e4:	add	r0, lr, #1
   146e8:	str	r0, [sp, #40]	; 0x28
   146ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   146f0:	mov	r4, r9
   146f4:	mov	r1, #0
   146f8:	mov	r9, #1
   146fc:	rsb	r2, r0, #32
   14700:	str	r2, [sp, #56]	; 0x38
   14704:	sub	r2, r0, #32
   14708:	str	r2, [sp, #52]	; 0x34
   1470c:	ldr	lr, [sp, #40]	; 0x28
   14710:	ldr	sl, [fp, #-44]	; 0xffffffd4
   14714:	ldr	r6, [sp, #48]	; 0x30
   14718:	mov	ip, r1
   1471c:	mov	r1, #10
   14720:	str	r7, [fp, #-32]	; 0xffffffe0
   14724:	mov	r2, r9
   14728:	umull	r7, r1, r3, r1
   1472c:	add	r3, r4, r4, lsl #2
   14730:	add	r8, ip, ip, lsl #2
   14734:	lsr	r5, r7, r0
   14738:	ldr	r0, [sp, #56]	; 0x38
   1473c:	add	r3, r1, r3, lsl #1
   14740:	orr	r1, r5, r3, lsl r0
   14744:	ldr	r0, [sp, #52]	; 0x34
   14748:	cmp	r0, #0
   1474c:	lsrge	r1, r3, r0
   14750:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14754:	add	r5, r1, #48	; 0x30
   14758:	strb	r5, [r0, lr]
   1475c:	mov	r0, #10
   14760:	add	lr, lr, #1
   14764:	umull	r9, r1, r9, r0
   14768:	umull	r6, r4, r6, r0
   1476c:	add	r0, sl, sl, lsl #2
   14770:	add	sl, r4, r0, lsl #1
   14774:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14778:	add	r1, r1, r8, lsl #1
   1477c:	and	r4, r3, r0
   14780:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14784:	and	r3, r7, r0
   14788:	ldr	r7, [fp, #-32]	; 0xffffffe0
   1478c:	subs	r0, r3, r6
   14790:	sbcs	r0, r4, sl
   14794:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14798:	sub	r7, r7, #1
   1479c:	bcs	14718 <flatcc_json_printer_fmt_float@@Base+0x578>
   147a0:	str	r4, [sp]
   147a4:	str	r8, [sp, #52]	; 0x34
   147a8:	str	r2, [sp, #56]	; 0x38
   147ac:	str	ip, [fp, #-52]	; 0xffffffcc
   147b0:	str	lr, [sp, #40]	; 0x28
   147b4:	ldr	r0, [sp, #8]
   147b8:	ldr	r2, [sp, #4]
   147bc:	ldr	ip, [sp, #20]
   147c0:	ldr	lr, [sp, #36]	; 0x24
   147c4:	ldr	r4, [sp, #12]
   147c8:	cmp	r0, r2
   147cc:	ldr	r2, [sp, #16]
   147d0:	bne	14f80 <flatcc_json_printer_fmt_float@@Base+0xde0>
   147d4:	subs	r0, lr, r4
   147d8:	sbcs	r0, ip, r2
   147dc:	bcc	14f80 <flatcc_json_printer_fmt_float@@Base+0xde0>
   147e0:	subs	r0, lr, r4
   147e4:	sbc	r2, ip, r2
   147e8:	umull	ip, r4, r9, r0
   147ec:	mla	r2, r9, r2, r4
   147f0:	mla	r0, r1, r0, r2
   147f4:	adds	r2, ip, r9
   147f8:	str	r2, [sp, #36]	; 0x24
   147fc:	adc	r2, r0, r1
   14800:	subs	lr, ip, r9
   14804:	mov	ip, #0
   14808:	str	r2, [sp, #20]
   1480c:	sbc	r9, r0, r1
   14810:	subs	r0, r6, r3
   14814:	ldr	r4, [sp]
   14818:	str	sl, [fp, #-44]	; 0xffffffd4
   1481c:	ldr	r2, [sp, #32]
   14820:	sbc	r1, sl, r4
   14824:	subs	r0, r0, r2
   14828:	ldr	r0, [sp, #44]	; 0x2c
   1482c:	str	r7, [fp, #-32]	; 0xffffffe0
   14830:	str	r6, [sp, #48]	; 0x30
   14834:	sbcs	r0, r1, r0
   14838:	movwcc	ip, #1
   1483c:	cmp	ip, #0
   14840:	bne	148f4 <flatcc_json_printer_fmt_float@@Base+0x754>
   14844:	subs	r0, r3, lr
   14848:	str	lr, [fp, #-40]	; 0xffffffd8
   1484c:	sbcs	r0, r4, r9
   14850:	bcs	148f4 <flatcc_json_printer_fmt_float@@Base+0x754>
   14854:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14858:	ldr	r1, [sp, #40]	; 0x28
   1485c:	add	r0, r0, r1
   14860:	str	r0, [fp, #-48]	; 0xffffffd0
   14864:	ldr	r6, [sp, #44]	; 0x2c
   14868:	ldr	lr, [sp, #32]
   1486c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14870:	adds	r8, r3, lr
   14874:	adc	sl, r4, r6
   14878:	subs	r0, r8, r2
   1487c:	sbcs	r0, sl, r9
   14880:	bcc	148a4 <flatcc_json_printer_fmt_float@@Base+0x704>
   14884:	subs	r0, r8, r2
   14888:	sbc	r1, sl, r9
   1488c:	subs	r7, r2, r3
   14890:	sbc	r6, r9, r4
   14894:	subs	r0, r7, r0
   14898:	sbcs	r0, r6, r1
   1489c:	ldr	r6, [sp, #44]	; 0x2c
   148a0:	bcc	14a50 <flatcc_json_printer_fmt_float@@Base+0x8b0>
   148a4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   148a8:	sub	r5, r5, #1
   148ac:	mov	ip, #0
   148b0:	strb	r5, [r0, #-1]
   148b4:	ldr	r0, [sp, #48]	; 0x30
   148b8:	subs	r1, r0, r8
   148bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   148c0:	sbc	r7, r0, sl
   148c4:	subs	r0, r1, lr
   148c8:	sbcs	r0, r7, r6
   148cc:	movwcc	ip, #1
   148d0:	subs	r0, r8, r2
   148d4:	sbcs	r0, sl, r9
   148d8:	bcs	14a5c <flatcc_json_printer_fmt_float@@Base+0x8bc>
   148dc:	subs	r0, r1, lr
   148e0:	mov	r3, r8
   148e4:	mov	r4, sl
   148e8:	sbcs	r0, r7, r6
   148ec:	bcs	14870 <flatcc_json_printer_fmt_float@@Base+0x6d0>
   148f0:	b	14a5c <flatcc_json_printer_fmt_float@@Base+0x8bc>
   148f4:	ldr	r6, [sp, #44]	; 0x2c
   148f8:	b	14a54 <flatcc_json_printer_fmt_float@@Base+0x8b4>
   148fc:	ldr	r9, [sp, #36]	; 0x24
   14900:	ldr	r0, [sp, #12]
   14904:	subs	r3, r9, r0
   14908:	str	r3, [sp, #52]	; 0x34
   1490c:	ldr	r8, [sp, #20]
   14910:	ldr	r7, [sp, #16]
   14914:	sbc	r3, r8, r7
   14918:	str	r3, [sp, #56]	; 0x38
   1491c:	ldr	r3, [sp, #8]
   14920:	ldr	ip, [sp, #4]
   14924:	cmp	r3, ip
   14928:	bne	14f80 <flatcc_json_printer_fmt_float@@Base+0xde0>
   1492c:	subs	r0, r9, r0
   14930:	sbcs	r0, r8, r7
   14934:	bcc	14f80 <flatcc_json_printer_fmt_float@@Base+0xde0>
   14938:	ldr	r0, [sp, #48]	; 0x30
   1493c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14940:	lsr	r8, r1, sl
   14944:	subs	r0, r0, r2
   14948:	sbc	r3, r3, r5
   1494c:	cmp	r4, #0
   14950:	mov	sl, r3
   14954:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14958:	lslge	r8, r1, r4
   1495c:	lsl	r9, r1, r3
   14960:	mov	r1, #0
   14964:	movwge	r9, #0
   14968:	subs	r7, r0, r9
   1496c:	sbcs	r7, sl, r8
   14970:	ldr	r7, [sp, #52]	; 0x34
   14974:	movwcc	r1, #1
   14978:	adds	r3, r7, #1
   1497c:	str	r3, [fp, #-48]	; 0xffffffd0
   14980:	ldr	r4, [sp, #56]	; 0x38
   14984:	adc	r3, r4, #0
   14988:	subs	ip, r7, #1
   1498c:	str	r3, [fp, #-52]	; 0xffffffcc
   14990:	sbc	r3, r4, #0
   14994:	subs	r4, r2, ip
   14998:	sbcs	r4, r5, r3
   1499c:	bcs	14a48 <flatcc_json_printer_fmt_float@@Base+0x8a8>
   149a0:	subs	r0, r0, r9
   149a4:	sbcs	r0, sl, r8
   149a8:	bcc	14a48 <flatcc_json_printer_fmt_float@@Base+0x8a8>
   149ac:	ldr	sl, [sp, #48]	; 0x30
   149b0:	adds	r4, r2, r9
   149b4:	adc	r0, r5, r8
   149b8:	subs	r1, r4, ip
   149bc:	sbcs	r1, r0, r3
   149c0:	bcc	149fc <flatcc_json_printer_fmt_float@@Base+0x85c>
   149c4:	subs	sl, r4, ip
   149c8:	mov	r7, r9
   149cc:	mov	r9, r8
   149d0:	sbc	r1, r0, r3
   149d4:	str	r1, [fp, #-40]	; 0xffffffd8
   149d8:	subs	r1, ip, r2
   149dc:	sbc	r8, r3, r5
   149e0:	subs	r1, r1, sl
   149e4:	ldr	sl, [sp, #48]	; 0x30
   149e8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   149ec:	sbcs	r1, r8, r1
   149f0:	mov	r8, r9
   149f4:	mov	r9, r7
   149f8:	bcc	14b38 <flatcc_json_printer_fmt_float@@Base+0x998>
   149fc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14a00:	sub	r6, r6, #1
   14a04:	subs	r2, sl, r4
   14a08:	strb	r6, [r1, lr]
   14a0c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14a10:	sbc	r5, r1, r0
   14a14:	subs	r1, r2, r9
   14a18:	sbcs	r1, r5, r8
   14a1c:	mov	r1, #0
   14a20:	movwcc	r1, #1
   14a24:	subs	r7, r4, ip
   14a28:	sbcs	r7, r0, r3
   14a2c:	bcs	14b44 <flatcc_json_printer_fmt_float@@Base+0x9a4>
   14a30:	subs	r2, r2, r9
   14a34:	sbcs	r2, r5, r8
   14a38:	mov	r5, r0
   14a3c:	mov	r2, r4
   14a40:	bcs	149b0 <flatcc_json_printer_fmt_float@@Base+0x810>
   14a44:	b	14b44 <flatcc_json_printer_fmt_float@@Base+0x9a4>
   14a48:	ldr	sl, [sp, #48]	; 0x30
   14a4c:	b	14b3c <flatcc_json_printer_fmt_float@@Base+0x99c>
   14a50:	mov	ip, #0
   14a54:	mov	r8, r3
   14a58:	mov	sl, r4
   14a5c:	ldr	r3, [sp, #36]	; 0x24
   14a60:	ldr	r4, [sp, #20]
   14a64:	subs	r0, r8, r3
   14a68:	sbcs	r0, sl, r4
   14a6c:	bcs	14ad4 <flatcc_json_printer_fmt_float@@Base+0x934>
   14a70:	cmp	ip, #0
   14a74:	bne	14ad4 <flatcc_json_printer_fmt_float@@Base+0x934>
   14a78:	ldr	r0, [sp, #32]
   14a7c:	ldr	r5, [sp, #56]	; 0x38
   14a80:	ldr	r9, [sp, #52]	; 0x34
   14a84:	adds	r1, r8, r0
   14a88:	adc	r7, sl, r6
   14a8c:	ldr	r6, [fp, #-52]	; 0xffffffcc
   14a90:	subs	r0, r1, r3
   14a94:	sbcs	r0, r7, r4
   14a98:	bcc	14c3c <flatcc_json_printer_fmt_float@@Base+0xa9c>
   14a9c:	subs	ip, r1, r3
   14aa0:	mov	r0, #20
   14aa4:	sbc	lr, r7, r4
   14aa8:	subs	r7, r3, r8
   14aac:	umull	r0, r3, r5, r0
   14ab0:	sbc	r1, r4, sl
   14ab4:	add	r3, r3, r9, lsl #2
   14ab8:	subs	r0, r8, r0
   14abc:	sbcs	r0, sl, r3
   14ac0:	bcc	14c3c <flatcc_json_printer_fmt_float@@Base+0xa9c>
   14ac4:	subs	r0, ip, r7
   14ac8:	sbcs	r0, lr, r1
   14acc:	bcs	14af8 <flatcc_json_printer_fmt_float@@Base+0x958>
   14ad0:	b	14c3c <flatcc_json_printer_fmt_float@@Base+0xa9c>
   14ad4:	ldr	r5, [sp, #56]	; 0x38
   14ad8:	ldr	r3, [sp, #52]	; 0x34
   14adc:	mov	r0, #20
   14ae0:	ldr	r6, [fp, #-52]	; 0xffffffcc
   14ae4:	umull	r0, r1, r5, r0
   14ae8:	add	r1, r1, r3, lsl #2
   14aec:	subs	r0, r8, r0
   14af0:	sbcs	r0, sl, r1
   14af4:	bcc	14c3c <flatcc_json_printer_fmt_float@@Base+0xa9c>
   14af8:	mvn	r7, #0
   14afc:	ldr	r2, [sp, #48]	; 0x30
   14b00:	subs	r0, r7, #39	; 0x27
   14b04:	umull	r1, r3, r5, r0
   14b08:	sbc	r7, r7, #0
   14b0c:	mla	r3, r5, r7, r3
   14b10:	mla	r0, r6, r0, r3
   14b14:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14b18:	adds	r1, r1, r2
   14b1c:	adc	r0, r0, r3
   14b20:	subs	r1, r1, r8
   14b24:	sbcs	r0, r0, sl
   14b28:	bcc	14c3c <flatcc_json_printer_fmt_float@@Base+0xa9c>
   14b2c:	ldr	r0, [sp, #40]	; 0x28
   14b30:	sub	lr, r0, #1
   14b34:	b	14be4 <flatcc_json_printer_fmt_float@@Base+0xa44>
   14b38:	mov	r1, #0
   14b3c:	mov	r4, r2
   14b40:	mov	r0, r5
   14b44:	add	r2, lr, #1
   14b48:	str	r2, [sp, #40]	; 0x28
   14b4c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   14b50:	ldr	r6, [fp, #-52]	; 0xffffffcc
   14b54:	subs	r2, r4, r5
   14b58:	sbcs	r2, r0, r6
   14b5c:	bcs	14bc0 <flatcc_json_printer_fmt_float@@Base+0xa20>
   14b60:	cmp	r1, #0
   14b64:	bne	14bc0 <flatcc_json_printer_fmt_float@@Base+0xa20>
   14b68:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14b6c:	adds	r1, r4, r9
   14b70:	adc	r2, r0, r8
   14b74:	subs	r7, r1, r5
   14b78:	sbcs	r7, r2, r6
   14b7c:	bcc	14c3c <flatcc_json_printer_fmt_float@@Base+0xa9c>
   14b80:	subs	ip, r1, r5
   14b84:	sbc	r9, r2, r6
   14b88:	subs	r7, r5, r4
   14b8c:	sbc	r1, r6, r0
   14b90:	subs	r8, sl, #4
   14b94:	sbc	r3, r3, #0
   14b98:	subs	r2, r4, #2
   14b9c:	sbcs	r2, r0, #0
   14ba0:	bcc	14c3c <flatcc_json_printer_fmt_float@@Base+0xa9c>
   14ba4:	subs	r2, ip, r7
   14ba8:	sbcs	r1, r9, r1
   14bac:	bcc	14c3c <flatcc_json_printer_fmt_float@@Base+0xa9c>
   14bb0:	subs	r1, r8, r4
   14bb4:	sbcs	r0, r3, r0
   14bb8:	bcs	14be4 <flatcc_json_printer_fmt_float@@Base+0xa44>
   14bbc:	b	14c3c <flatcc_json_printer_fmt_float@@Base+0xa9c>
   14bc0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14bc4:	subs	r1, sl, #4
   14bc8:	sbc	r2, r2, #0
   14bcc:	subs	r3, r4, #2
   14bd0:	sbcs	r3, r0, #0
   14bd4:	bcc	14c3c <flatcc_json_printer_fmt_float@@Base+0xa9c>
   14bd8:	subs	r1, r1, r4
   14bdc:	sbcs	r0, r2, r0
   14be0:	bcc	14c3c <flatcc_json_printer_fmt_float@@Base+0xa9c>
   14be4:	ldr	r0, [sp, #28]
   14be8:	ldr	r4, [sp, #40]	; 0x28
   14bec:	ldr	r7, [fp, #-32]	; 0xffffffe0
   14bf0:	ldrsh	r5, [r0, #26]
   14bf4:	sub	r0, r4, #1
   14bf8:	cmp	r4, #3
   14bfc:	movwlt	r0, #1
   14c00:	sub	r9, r7, r5
   14c04:	rsb	r3, r9, #0
   14c08:	cmp	r0, r3
   14c0c:	movge	r0, r3
   14c10:	cmn	r9, #1
   14c14:	ble	14c68 <flatcc_json_printer_fmt_float@@Base+0xac8>
   14c18:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14c1c:	cmp	r9, #3
   14c20:	bcc	14ce8 <flatcc_json_printer_fmt_float@@Base+0xb48>
   14c24:	mov	r0, #101	; 0x65
   14c28:	add	lr, r4, #1
   14c2c:	strb	r0, [r1, r4]
   14c30:	add	r0, r1, lr
   14c34:	mov	r2, r0
   14c38:	b	14e44 <flatcc_json_printer_fmt_float@@Base+0xca4>
   14c3c:	ldr	r1, [pc, #932]	; 14fe8 <flatcc_json_printer_fmt_float@@Base+0xe48>
   14c40:	ldr	r4, [fp, #-36]	; 0xffffffdc
   14c44:	vmov	r2, r3, d0
   14c48:	add	r1, pc, r1
   14c4c:	mov	r0, r4
   14c50:	bl	12964 <sprintf@plt>
   14c54:	ldr	r1, [sp, #24]
   14c58:	sub	r1, r4, r1
   14c5c:	add	r0, r1, r0
   14c60:	sub	sp, fp, #28
   14c64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14c68:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14c6c:	cmp	r4, r3
   14c70:	bgt	14d4c <flatcc_json_printer_fmt_float@@Base+0xbac>
   14c74:	add	r2, r9, r4
   14c78:	cmn	r2, #2
   14c7c:	blt	14d4c <flatcc_json_printer_fmt_float@@Base+0xbac>
   14c80:	add	r8, r1, #2
   14c84:	mvn	r0, lr
   14c88:	add	r2, r8, r3
   14c8c:	add	r0, r2, r0
   14c90:	mov	r2, r4
   14c94:	bl	12898 <memmove@plt>
   14c98:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14c9c:	movw	r0, #11824	; 0x2e30
   14ca0:	mov	r6, r4
   14ca4:	strh	r0, [r1]
   14ca8:	rsb	r0, r4, #2
   14cac:	sub	r4, r0, r9
   14cb0:	mov	r0, #2
   14cb4:	cmp	r4, #3
   14cb8:	blt	14cd8 <flatcc_json_printer_fmt_float@@Base+0xb38>
   14cbc:	sub	r0, r5, r7
   14cc0:	mov	r1, #48	; 0x30
   14cc4:	sub	r2, r0, r6
   14cc8:	mov	r0, r8
   14ccc:	bl	12940 <memset@plt>
   14cd0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14cd4:	mov	r0, r4
   14cd8:	ldr	ip, [sp, #24]
   14cdc:	add	r6, r0, r6
   14ce0:	mov	r4, r6
   14ce4:	b	14ec0 <flatcc_json_printer_fmt_float@@Base+0xd20>
   14ce8:	cmp	r9, #0
   14cec:	beq	14dbc <flatcc_json_printer_fmt_float@@Base+0xc1c>
   14cf0:	add	r0, r1, r4
   14cf4:	mvn	r1, r7
   14cf8:	mov	r6, r4
   14cfc:	mvn	r4, #1
   14d00:	add	r1, r1, r5
   14d04:	cmn	r1, #2
   14d08:	movle	r1, r4
   14d0c:	add	r1, r7, r1
   14d10:	add	r1, r1, #2
   14d14:	sub	r2, r1, r5
   14d18:	mov	r1, #48	; 0x30
   14d1c:	bl	12940 <memset@plt>
   14d20:	mvn	r0, r9
   14d24:	cmn	r0, #2
   14d28:	movgt	r4, r0
   14d2c:	add	r0, r9, r4
   14d30:	add	r0, r0, #2
   14d34:	cmp	r0, #4
   14d38:	bcs	14dc4 <flatcc_json_printer_fmt_float@@Base+0xc24>
   14d3c:	ldr	ip, [sp, #24]
   14d40:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14d44:	mov	r4, r6
   14d48:	b	14e10 <flatcc_json_printer_fmt_float@@Base+0xc70>
   14d4c:	cmp	r4, #2
   14d50:	blt	14e28 <flatcc_json_printer_fmt_float@@Base+0xc88>
   14d54:	ldr	ip, [sp, #24]
   14d58:	cmp	r0, #1
   14d5c:	blt	14d84 <flatcc_json_printer_fmt_float@@Base+0xbe4>
   14d60:	add	r2, r1, r4
   14d64:	mov	r6, #0
   14d68:	mov	r3, r2
   14d6c:	ldrb	r7, [r3, #-1]!
   14d70:	add	r6, r6, #1
   14d74:	cmp	r6, r0
   14d78:	strb	r7, [r2]
   14d7c:	mov	r2, r3
   14d80:	blt	14d6c <flatcc_json_printer_fmt_float@@Base+0xbcc>
   14d84:	sub	r3, r4, r0
   14d88:	mov	r2, #46	; 0x2e
   14d8c:	adds	r7, r0, r9
   14d90:	add	r0, r4, #1
   14d94:	strb	r2, [r1, r3]
   14d98:	beq	14ed4 <flatcc_json_printer_fmt_float@@Base+0xd34>
   14d9c:	mov	r2, #101	; 0x65
   14da0:	add	lr, r4, #2
   14da4:	cmn	r7, #1
   14da8:	strb	r2, [r1, r0]
   14dac:	add	r0, r1, lr
   14db0:	ble	14edc <flatcc_json_printer_fmt_float@@Base+0xd3c>
   14db4:	mov	r2, r0
   14db8:	b	14eec <flatcc_json_printer_fmt_float@@Base+0xd4c>
   14dbc:	ldr	ip, [sp, #24]
   14dc0:	b	14ec0 <flatcc_json_printer_fmt_float@@Base+0xd20>
   14dc4:	ldr	ip, [sp, #24]
   14dc8:	mov	r1, #0
   14dcc:	vmov.i32	q9, #1	; 0x00000001
   14dd0:	vdup.32	q8, r1
   14dd4:	bic	r1, r0, #3
   14dd8:	vmov.32	d16[0], r6
   14ddc:	sub	r9, r9, r1
   14de0:	mov	r2, r1
   14de4:	subs	r2, r2, #4
   14de8:	vadd.i32	q8, q8, q9
   14dec:	bne	14de4 <flatcc_json_printer_fmt_float@@Base+0xc44>
   14df0:	vext.8	q9, q8, q8, #8
   14df4:	cmp	r0, r1
   14df8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14dfc:	vadd.i32	q8, q8, q9
   14e00:	vdup.32	q9, d16[1]
   14e04:	vadd.i32	q8, q8, q9
   14e08:	vmov.32	r4, d16[0]
   14e0c:	beq	14ec0 <flatcc_json_printer_fmt_float@@Base+0xd20>
   14e10:	add	r0, r9, #1
   14e14:	sub	r0, r0, #1
   14e18:	add	r4, r4, #1
   14e1c:	cmp	r0, #1
   14e20:	bgt	14e14 <flatcc_json_printer_fmt_float@@Base+0xc74>
   14e24:	b	14ec0 <flatcc_json_printer_fmt_float@@Base+0xd20>
   14e28:	add	r0, r1, r4
   14e2c:	movw	r2, #11621	; 0x2d65
   14e30:	add	lr, r4, #1
   14e34:	mov	r9, r3
   14e38:	strh	r2, [r0]
   14e3c:	add	r0, r1, lr
   14e40:	add	r2, r0, #1
   14e44:	ldr	ip, [sp, #24]
   14e48:	movw	r7, #26215	; 0x6667
   14e4c:	mov	r3, r2
   14e50:	movt	r7, #26214	; 0x6666
   14e54:	smmul	r6, r9, r7
   14e58:	asr	r5, r6, #2
   14e5c:	add	r4, r5, r6, lsr #31
   14e60:	add	r6, r4, r4, lsl #2
   14e64:	sub	r6, r9, r6, lsl #1
   14e68:	add	r6, r6, #48	; 0x30
   14e6c:	strb	r6, [r3], #1
   14e70:	add	r6, r9, #9
   14e74:	mov	r9, r4
   14e78:	cmp	r6, #18
   14e7c:	bhi	14e54 <flatcc_json_printer_fmt_float@@Base+0xcb4>
   14e80:	mov	r6, #0
   14e84:	mov	r7, r3
   14e88:	strb	r6, [r7], -r2
   14e8c:	cmp	r7, #2
   14e90:	blt	14eb8 <flatcc_json_printer_fmt_float@@Base+0xd18>
   14e94:	add	r7, r7, r7, lsr #31
   14e98:	sub	r6, r3, #1
   14e9c:	asr	r7, r7, #1
   14ea0:	ldrb	r5, [r2]
   14ea4:	ldrb	r4, [r6]
   14ea8:	subs	r7, r7, #1
   14eac:	strb	r4, [r2], #1
   14eb0:	strb	r5, [r6], #-1
   14eb4:	bne	14ea0 <flatcc_json_printer_fmt_float@@Base+0xd00>
   14eb8:	sub	r0, lr, r0
   14ebc:	add	r4, r0, r3
   14ec0:	mov	r0, #0
   14ec4:	strb	r0, [r1, r4]!
   14ec8:	sub	r0, r1, ip
   14ecc:	sub	sp, fp, #28
   14ed0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ed4:	mov	r4, r0
   14ed8:	b	14ec0 <flatcc_json_printer_fmt_float@@Base+0xd20>
   14edc:	mov	r3, #45	; 0x2d
   14ee0:	mov	r2, r0
   14ee4:	rsb	r7, r7, #0
   14ee8:	strb	r3, [r2], #1
   14eec:	movw	r6, #26215	; 0x6667
   14ef0:	mov	r3, r2
   14ef4:	movt	r6, #26214	; 0x6666
   14ef8:	smmul	r5, r7, r6
   14efc:	asr	r4, r5, #2
   14f00:	add	r5, r4, r5, lsr #31
   14f04:	add	r4, r5, r5, lsl #2
   14f08:	sub	r4, r7, r4, lsl #1
   14f0c:	add	r7, r7, #9
   14f10:	add	r4, r4, #48	; 0x30
   14f14:	cmp	r7, #18
   14f18:	mov	r7, r5
   14f1c:	strb	r4, [r3], #1
   14f20:	bhi	14ef8 <flatcc_json_printer_fmt_float@@Base+0xd58>
   14f24:	mov	r6, #0
   14f28:	mov	r7, r3
   14f2c:	strb	r6, [r7], -r2
   14f30:	cmp	r7, #2
   14f34:	blt	14eb8 <flatcc_json_printer_fmt_float@@Base+0xd18>
   14f38:	add	r7, r7, r7, lsr #31
   14f3c:	sub	r6, r3, #1
   14f40:	asr	r7, r7, #1
   14f44:	ldrb	r5, [r2]
   14f48:	ldrb	r4, [r6]
   14f4c:	subs	r7, r7, #1
   14f50:	strb	r4, [r2], #1
   14f54:	strb	r5, [r6], #-1
   14f58:	bne	14f44 <flatcc_json_printer_fmt_float@@Base+0xda4>
   14f5c:	b	14eb8 <flatcc_json_printer_fmt_float@@Base+0xd18>
   14f60:	ldr	r0, [pc, #132]	; 14fec <flatcc_json_printer_fmt_float@@Base+0xe4c>
   14f64:	ldr	r1, [pc, #132]	; 14ff0 <flatcc_json_printer_fmt_float@@Base+0xe50>
   14f68:	ldr	r3, [pc, #132]	; 14ff4 <flatcc_json_printer_fmt_float@@Base+0xe54>
   14f6c:	mov	r2, #189	; 0xbd
   14f70:	add	r0, pc, r0
   14f74:	add	r1, pc, r1
   14f78:	add	r3, pc, r3
   14f7c:	bl	12994 <__assert_fail@plt>
   14f80:	ldr	r0, [pc, #128]	; 15008 <flatcc_json_printer_fmt_float@@Base+0xe68>
   14f84:	ldr	r1, [pc, #128]	; 1500c <flatcc_json_printer_fmt_float@@Base+0xe6c>
   14f88:	ldr	r3, [pc, #128]	; 15010 <flatcc_json_printer_fmt_float@@Base+0xe70>
   14f8c:	mov	r2, #239	; 0xef
   14f90:	add	r0, pc, r0
   14f94:	add	r1, pc, r1
   14f98:	add	r3, pc, r3
   14f9c:	bl	12994 <__assert_fail@plt>
   14fa0:	ldr	r0, [pc, #84]	; 14ffc <flatcc_json_printer_fmt_float@@Base+0xe5c>
   14fa4:	ldr	r1, [pc, #84]	; 15000 <flatcc_json_printer_fmt_float@@Base+0xe60>
   14fa8:	ldr	r3, [pc, #84]	; 15004 <flatcc_json_printer_fmt_float@@Base+0xe64>
   14fac:	mov	r2, #138	; 0x8a
   14fb0:	add	r0, pc, r0
   14fb4:	add	r1, pc, r1
   14fb8:	add	r3, pc, r3
   14fbc:	bl	12994 <__assert_fail@plt>
   14fc0:	ldr	r0, [pc, #76]	; 15014 <flatcc_json_printer_fmt_float@@Base+0xe74>
   14fc4:	ldr	r1, [pc, #76]	; 15018 <flatcc_json_printer_fmt_float@@Base+0xe78>
   14fc8:	ldr	r3, [pc, #76]	; 1501c <flatcc_json_printer_fmt_float@@Base+0xe7c>
   14fcc:	mov	r2, #260	; 0x104
   14fd0:	add	r0, pc, r0
   14fd4:	add	r1, pc, r1
   14fd8:	add	r3, pc, r3
   14fdc:	bl	12994 <__assert_fail@plt>
   14fe0:	strdeq	sp, [r0], -r0
   14fe4:	andeq	sp, r0, r0, lsl #26
   14fe8:	muleq	r0, lr, sp
   14fec:	andeq	ip, r0, lr, asr #19
   14ff0:	andeq	ip, r0, lr, asr #19
   14ff4:	andeq	ip, r0, r8, lsr sl
   14ff8:	andeq	sp, r0, r8, ror #15
   14ffc:	andeq	ip, r0, ip, lsr sl
   15000:	andeq	ip, r0, lr, lsl #19
   15004:	andeq	ip, r0, r9, asr sl
   15008:	andeq	ip, r0, r9, asr fp
   1500c:	andeq	ip, r0, pc, lsr #21
   15010:	andeq	ip, r0, sl, ror #22
   15014:	andeq	ip, r0, sl, ror #20
   15018:	andeq	ip, r0, pc, ror #20
   1501c:	ldrdeq	ip, [r0], -r8

00015020 <flatcc_json_printer_fmt_double@@Base>:
   15020:	b	141a8 <flatcc_json_printer_fmt_float@@Base+0x8>

00015024 <flatcc_json_printer_fmt_bool@@Base>:
   15024:	cmp	r1, #0
   15028:	movwne	r1, #29300	; 0x7274
   1502c:	movtne	r1, #25973	; 0x6575
   15030:	strne	r1, [r0]
   15034:	movne	r0, #4
   15038:	bxne	lr
   1503c:	mov	r1, #101	; 0x65
   15040:	strb	r1, [r0, #4]
   15044:	movw	r1, #24934	; 0x6166
   15048:	movt	r1, #29548	; 0x736c
   1504c:	str	r1, [r0]
   15050:	mov	r0, #5
   15054:	bx	lr

00015058 <flatcc_json_printer_string@@Base>:
   15058:	b	1505c <flatcc_json_printer_string@@Base+0x4>
   1505c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15060:	add	fp, sp, #28
   15064:	sub	sp, sp, #12
   15068:	mov	r5, r0
   1506c:	mov	r4, r0
   15070:	mov	r6, r1
   15074:	mov	r3, r2
   15078:	ldr	r0, [r5, #20]!
   1507c:	add	r1, r0, #1
   15080:	str	r5, [sp, #4]
   15084:	str	r1, [r5]
   15088:	mov	r1, #34	; 0x22
   1508c:	strb	r1, [r0]
   15090:	b	150a0 <flatcc_json_printer_string@@Base+0x48>
   15094:	strb	r2, [r1]
   15098:	sub	r3, r0, #1
   1509c:	add	r6, r8, #1
   150a0:	ldrb	sl, [r6]
   150a4:	mov	r8, r6
   150a8:	cmp	sl, #32
   150ac:	bcc	150cc <flatcc_json_printer_string@@Base+0x74>
   150b0:	uxtb	r0, sl
   150b4:	cmp	r0, #34	; 0x22
   150b8:	cmpne	r0, #92	; 0x5c
   150bc:	beq	150cc <flatcc_json_printer_string@@Base+0x74>
   150c0:	ldrb	sl, [r8, #1]!
   150c4:	cmp	sl, #31
   150c8:	bhi	150b0 <flatcc_json_printer_string@@Base+0x58>
   150cc:	ldr	r0, [r4, #20]
   150d0:	ldr	r1, [r4, #16]
   150d4:	sub	r9, r8, r6
   150d8:	add	r2, r0, r9
   150dc:	cmp	r2, r1
   150e0:	bcs	15100 <flatcc_json_printer_string@@Base+0xa8>
   150e4:	mov	r1, r6
   150e8:	mov	r2, r9
   150ec:	mov	r6, r3
   150f0:	bl	128b0 <memcpy@plt>
   150f4:	mov	r2, r6
   150f8:	mov	r7, r9
   150fc:	b	1518c <flatcc_json_printer_string@@Base+0x134>
   15100:	cmp	r0, r1
   15104:	str	r3, [sp, #8]
   15108:	bcc	15124 <flatcc_json_printer_string@@Base+0xcc>
   1510c:	ldr	r2, [r4, #44]	; 0x2c
   15110:	mov	r0, r4
   15114:	mov	r1, #0
   15118:	blx	r2
   1511c:	ldr	r1, [r4, #16]
   15120:	ldr	r0, [r4, #20]
   15124:	sub	r5, r1, r0
   15128:	mov	r7, r9
   1512c:	cmp	r5, r9
   15130:	bcs	15178 <flatcc_json_printer_string@@Base+0x120>
   15134:	mov	r1, r6
   15138:	mov	r2, r5
   1513c:	bl	128b0 <memcpy@plt>
   15140:	ldr	r0, [r4, #20]
   15144:	ldr	r2, [r4, #44]	; 0x2c
   15148:	mov	r1, #0
   1514c:	add	r0, r0, r5
   15150:	str	r0, [r4, #20]
   15154:	mov	r0, r4
   15158:	blx	r2
   1515c:	ldr	r1, [r4, #16]
   15160:	ldr	r0, [r4, #20]
   15164:	sub	r7, r7, r5
   15168:	add	r6, r6, r5
   1516c:	sub	r5, r1, r0
   15170:	cmp	r7, r5
   15174:	bhi	15134 <flatcc_json_printer_string@@Base+0xdc>
   15178:	ldr	r5, [sp, #4]
   1517c:	mov	r1, r6
   15180:	mov	r2, r7
   15184:	bl	128b0 <memcpy@plt>
   15188:	ldr	r2, [sp, #8]
   1518c:	ldr	r0, [r5]
   15190:	add	r1, r0, r7
   15194:	add	r0, r1, #1
   15198:	str	r0, [r5]
   1519c:	subs	r0, r2, r9
   151a0:	beq	15348 <flatcc_json_printer_string@@Base+0x2f0>
   151a4:	mov	r2, #92	; 0x5c
   151a8:	strb	r2, [r1]
   151ac:	mvn	r1, #7
   151b0:	uxtab	r2, r1, sl
   151b4:	uxtb	r1, sl
   151b8:	cmp	r2, #26
   151bc:	bhi	1524c <flatcc_json_printer_string@@Base+0x1f4>
   151c0:	add	r3, pc, #4
   151c4:	ldr	r2, [r3, r2, lsl #2]
   151c8:	add	pc, r3, r2
   151cc:	andeq	r0, r0, ip, rrx
   151d0:	andeq	r0, r0, r8, lsl r1
   151d4:	andeq	r0, r0, ip, lsr #2
   151d8:	muleq	r0, ip, r0
   151dc:	andeq	r0, r0, r0, asr #2
   151e0:	andeq	r0, r0, r4, asr r1
   151e4:	muleq	r0, ip, r0
   151e8:	muleq	r0, ip, r0
   151ec:	muleq	r0, ip, r0
   151f0:	muleq	r0, ip, r0
   151f4:	muleq	r0, ip, r0
   151f8:	muleq	r0, ip, r0
   151fc:	muleq	r0, ip, r0
   15200:	muleq	r0, ip, r0
   15204:	muleq	r0, ip, r0
   15208:	muleq	r0, ip, r0
   1520c:	muleq	r0, ip, r0
   15210:	muleq	r0, ip, r0
   15214:	muleq	r0, ip, r0
   15218:	muleq	r0, ip, r0
   1521c:	muleq	r0, ip, r0
   15220:	muleq	r0, ip, r0
   15224:	muleq	r0, ip, r0
   15228:	muleq	r0, ip, r0
   1522c:	muleq	r0, ip, r0
   15230:	muleq	r0, ip, r0
   15234:	andeq	r0, r0, r8, ror #2
   15238:	ldr	r1, [r5]
   1523c:	add	r2, r1, #1
   15240:	str	r2, [r5]
   15244:	mov	r2, #98	; 0x62
   15248:	b	15094 <flatcc_json_printer_string@@Base+0x3c>
   1524c:	cmp	r1, #92	; 0x5c
   15250:	bne	15268 <flatcc_json_printer_string@@Base+0x210>
   15254:	ldr	r1, [r5]
   15258:	add	r2, r1, #1
   1525c:	str	r2, [r5]
   15260:	mov	r2, #92	; 0x5c
   15264:	b	15094 <flatcc_json_printer_string@@Base+0x3c>
   15268:	ldr	r2, [r5]
   1526c:	mov	r7, #48	; 0x30
   15270:	cmp	r1, #160	; 0xa0
   15274:	add	r3, r2, #1
   15278:	str	r3, [r5]
   1527c:	mov	r3, #117	; 0x75
   15280:	strb	r3, [r2]
   15284:	ldr	r2, [r5]
   15288:	add	r3, r2, #1
   1528c:	str	r3, [r5]
   15290:	strb	r7, [r2]
   15294:	ldr	r2, [r5]
   15298:	add	r3, r2, #1
   1529c:	str	r3, [r5]
   152a0:	strb	r7, [r2]
   152a4:	ldr	r2, [r5]
   152a8:	add	r3, r2, #1
   152ac:	str	r3, [r5]
   152b0:	mov	r3, #87	; 0x57
   152b4:	movwcc	r3, #48	; 0x30
   152b8:	add	r1, r3, r1, lsr #4
   152bc:	mov	r3, #87	; 0x57
   152c0:	strb	r1, [r2]
   152c4:	ldr	r1, [r5]
   152c8:	add	r2, r1, #1
   152cc:	str	r2, [r5]
   152d0:	and	r2, sl, #15
   152d4:	cmp	r2, #10
   152d8:	movwcc	r3, #48	; 0x30
   152dc:	add	r2, r3, r2
   152e0:	b	15094 <flatcc_json_printer_string@@Base+0x3c>
   152e4:	ldr	r1, [r5]
   152e8:	add	r2, r1, #1
   152ec:	str	r2, [r5]
   152f0:	mov	r2, #116	; 0x74
   152f4:	b	15094 <flatcc_json_printer_string@@Base+0x3c>
   152f8:	ldr	r1, [r5]
   152fc:	add	r2, r1, #1
   15300:	str	r2, [r5]
   15304:	mov	r2, #110	; 0x6e
   15308:	b	15094 <flatcc_json_printer_string@@Base+0x3c>
   1530c:	ldr	r1, [r5]
   15310:	add	r2, r1, #1
   15314:	str	r2, [r5]
   15318:	mov	r2, #102	; 0x66
   1531c:	b	15094 <flatcc_json_printer_string@@Base+0x3c>
   15320:	ldr	r1, [r5]
   15324:	add	r2, r1, #1
   15328:	str	r2, [r5]
   1532c:	mov	r2, #114	; 0x72
   15330:	b	15094 <flatcc_json_printer_string@@Base+0x3c>
   15334:	ldr	r1, [r5]
   15338:	add	r2, r1, #1
   1533c:	str	r2, [r5]
   15340:	mov	r2, #34	; 0x22
   15344:	b	15094 <flatcc_json_printer_string@@Base+0x3c>
   15348:	mov	r0, #34	; 0x22
   1534c:	strb	r0, [r1]
   15350:	sub	sp, fp, #28
   15354:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015358 <flatcc_json_printer_write@@Base>:
   15358:	push	{r4, r5, r6, r7, fp, lr}
   1535c:	add	fp, sp, #16
   15360:	mov	r6, r1
   15364:	mov	r5, r0
   15368:	ldr	r1, [r0, #16]
   1536c:	ldr	r0, [r0, #20]
   15370:	mov	r4, r2
   15374:	add	r2, r0, r2
   15378:	cmp	r2, r1
   1537c:	bcc	153f0 <flatcc_json_printer_write@@Base+0x98>
   15380:	cmp	r0, r1
   15384:	bcc	153a0 <flatcc_json_printer_write@@Base+0x48>
   15388:	ldr	r2, [r5, #44]	; 0x2c
   1538c:	mov	r0, r5
   15390:	mov	r1, #0
   15394:	blx	r2
   15398:	ldr	r1, [r5, #16]
   1539c:	ldr	r0, [r5, #20]
   153a0:	sub	r7, r1, r0
   153a4:	cmp	r7, r4
   153a8:	bcs	153f0 <flatcc_json_printer_write@@Base+0x98>
   153ac:	mov	r1, r6
   153b0:	mov	r2, r7
   153b4:	bl	128b0 <memcpy@plt>
   153b8:	ldr	r0, [r5, #20]
   153bc:	ldr	r2, [r5, #44]	; 0x2c
   153c0:	mov	r1, #0
   153c4:	add	r0, r0, r7
   153c8:	str	r0, [r5, #20]
   153cc:	mov	r0, r5
   153d0:	blx	r2
   153d4:	ldr	r1, [r5, #16]
   153d8:	ldr	r0, [r5, #20]
   153dc:	sub	r4, r4, r7
   153e0:	add	r6, r6, r7
   153e4:	sub	r7, r1, r0
   153e8:	cmp	r4, r7
   153ec:	bhi	153ac <flatcc_json_printer_write@@Base+0x54>
   153f0:	mov	r1, r6
   153f4:	mov	r2, r4
   153f8:	bl	128b0 <memcpy@plt>
   153fc:	ldr	r0, [r5, #20]
   15400:	add	r0, r0, r4
   15404:	str	r0, [r5, #20]
   15408:	pop	{r4, r5, r6, r7, fp, pc}

0001540c <flatcc_json_printer_nl@@Base>:
   1540c:	ldr	r1, [r0, #20]
   15410:	add	r2, r1, #1
   15414:	str	r2, [r0, #20]
   15418:	mov	r2, #10
   1541c:	strb	r2, [r1]
   15420:	ldr	r1, [r0, #16]
   15424:	ldr	r2, [r0, #20]
   15428:	cmp	r2, r1
   1542c:	bxcc	lr
   15430:	ldr	r2, [r0, #44]	; 0x2c
   15434:	mov	r1, #0
   15438:	bx	r2

0001543c <flatcc_json_printer_char@@Base>:
   1543c:	ldr	r2, [r0, #20]
   15440:	add	r3, r2, #1
   15444:	str	r3, [r0, #20]
   15448:	strb	r1, [r2]
   1544c:	bx	lr

00015450 <flatcc_json_printer_indent@@Base>:
   15450:	push	{r4, r5, r6, sl, fp, lr}
   15454:	add	fp, sp, #16
   15458:	mov	r4, r0
   1545c:	ldr	r1, [r0, #16]
   15460:	ldr	r0, [r0, #20]
   15464:	ldrb	r2, [r4, #25]
   15468:	ldr	r3, [r4, #32]
   1546c:	mla	r6, r3, r2, r0
   15470:	mul	r5, r3, r2
   15474:	cmp	r6, r1
   15478:	bls	154e8 <flatcc_json_printer_indent@@Base+0x98>
   1547c:	cmp	r0, r1
   15480:	bcc	1549c <flatcc_json_printer_indent@@Base+0x4c>
   15484:	ldr	r2, [r4, #44]	; 0x2c
   15488:	mov	r0, r4
   1548c:	mov	r1, #0
   15490:	blx	r2
   15494:	ldr	r1, [r4, #16]
   15498:	ldr	r0, [r4, #20]
   1549c:	sub	r6, r1, r0
   154a0:	cmp	r6, r5
   154a4:	bcs	154e8 <flatcc_json_printer_indent@@Base+0x98>
   154a8:	mov	r1, #32
   154ac:	mov	r2, r6
   154b0:	bl	12940 <memset@plt>
   154b4:	ldr	r0, [r4, #20]
   154b8:	ldr	r2, [r4, #44]	; 0x2c
   154bc:	mov	r1, #0
   154c0:	add	r0, r0, r6
   154c4:	str	r0, [r4, #20]
   154c8:	mov	r0, r4
   154cc:	blx	r2
   154d0:	ldr	r1, [r4, #16]
   154d4:	ldr	r0, [r4, #20]
   154d8:	sub	r5, r5, r6
   154dc:	sub	r6, r1, r0
   154e0:	cmp	r5, r6
   154e4:	bhi	154a8 <flatcc_json_printer_indent@@Base+0x58>
   154e8:	mov	r1, #32
   154ec:	mov	r2, r5
   154f0:	bl	12940 <memset@plt>
   154f4:	ldr	r0, [r4, #20]
   154f8:	add	r0, r0, r5
   154fc:	str	r0, [r4, #20]
   15500:	pop	{r4, r5, r6, sl, fp, pc}

00015504 <flatcc_json_printer_add_level@@Base>:
   15504:	ldr	r2, [r0, #32]
   15508:	add	r1, r2, r1
   1550c:	str	r1, [r0, #32]
   15510:	bx	lr

00015514 <flatcc_json_printer_get_level@@Base>:
   15514:	ldr	r0, [r0, #32]
   15518:	bx	lr

0001551c <flatcc_json_printer_uint8@@Base>:
   1551c:	push	{fp, lr}
   15520:	mov	fp, sp
   15524:	ldr	lr, [r0, #20]
   15528:	cmp	r1, #100	; 0x64
   1552c:	bcc	15578 <flatcc_json_printer_uint8@@Base+0x5c>
   15530:	mov	r3, #0
   15534:	strb	r3, [lr, #3]
   15538:	movw	r3, #34079	; 0x851f
   1553c:	movt	r3, #20971	; 0x51eb
   15540:	umull	r3, ip, r1, r3
   15544:	mov	r3, #48	; 0x30
   15548:	orr	r3, r3, ip, lsr #5
   1554c:	lsr	ip, ip, #5
   15550:	strb	r3, [lr]
   15554:	mov	r3, #100	; 0x64
   15558:	mls	r1, ip, r3, r1
   1555c:	ldr	r3, [pc, #124]	; 155e0 <flatcc_json_printer_uint8@@Base+0xc4>
   15560:	add	r3, pc, r3
   15564:	add	r1, r3, r1, lsl #1
   15568:	ldrh	r1, [r1]
   1556c:	strh	r1, [lr, #1]
   15570:	mov	r1, #3
   15574:	b	155d0 <flatcc_json_printer_uint8@@Base+0xb4>
   15578:	cmp	r1, #10
   1557c:	bcc	155bc <flatcc_json_printer_uint8@@Base+0xa0>
   15580:	mov	r3, #0
   15584:	strb	r3, [lr, #2]
   15588:	movw	r3, #34079	; 0x851f
   1558c:	movt	r3, #20971	; 0x51eb
   15590:	umull	r3, r2, r1, r3
   15594:	lsr	r2, r2, #5
   15598:	mov	r3, #100	; 0x64
   1559c:	mls	r1, r2, r3, r1
   155a0:	ldr	r2, [pc, #60]	; 155e4 <flatcc_json_printer_uint8@@Base+0xc8>
   155a4:	add	r2, pc, r2
   155a8:	add	r1, r2, r1, lsl #1
   155ac:	ldrh	r1, [r1]
   155b0:	strh	r1, [lr]
   155b4:	mov	r1, #2
   155b8:	b	155d0 <flatcc_json_printer_uint8@@Base+0xb4>
   155bc:	mov	r2, #0
   155c0:	add	r1, r1, #48	; 0x30
   155c4:	strb	r2, [lr, #1]
   155c8:	strb	r1, [lr]
   155cc:	mov	r1, #1
   155d0:	ldr	r2, [r0, #20]
   155d4:	add	r1, r2, r1
   155d8:	str	r1, [r0, #20]
   155dc:	pop	{fp, pc}
   155e0:	andeq	ip, r0, r8, ror #11
   155e4:	andeq	ip, r0, r4, lsr #11

000155e8 <flatcc_json_printer_uint16@@Base>:
   155e8:	push	{r4, sl, fp, lr}
   155ec:	add	fp, sp, #8
   155f0:	mov	r2, r1
   155f4:	ldr	r1, [r0, #20]
   155f8:	mov	r4, r0
   155fc:	mov	r0, r2
   15600:	bl	15614 <flatcc_json_printer_uint16@@Base+0x2c>
   15604:	ldr	r1, [r4, #20]
   15608:	add	r0, r1, r0
   1560c:	str	r0, [r4, #20]
   15610:	pop	{r4, sl, fp, pc}
   15614:	mov	ip, r0
   15618:	cmp	r0, #1000	; 0x3e8
   1561c:	bcc	15634 <flatcc_json_printer_uint16@@Base+0x4c>
   15620:	movw	r3, #9999	; 0x270f
   15624:	mov	r0, #4
   15628:	cmp	ip, r3
   1562c:	movwhi	r0, #5
   15630:	b	15658 <flatcc_json_printer_uint16@@Base+0x70>
   15634:	cmp	ip, #100	; 0x64
   15638:	bcc	1564c <flatcc_json_printer_uint16@@Base+0x64>
   1563c:	mov	r0, #0
   15640:	strb	r0, [r1, #3]!
   15644:	mov	r0, #3
   15648:	b	156f4 <flatcc_json_printer_uint16@@Base+0x10c>
   1564c:	mov	r0, #1
   15650:	cmp	ip, #9
   15654:	movwhi	r0, #2
   15658:	mov	r3, #0
   1565c:	tst	r0, #1
   15660:	strb	r3, [r1, r0]!
   15664:	bne	156ac <flatcc_json_printer_uint16@@Base+0xc4>
   15668:	cmp	r0, #2
   1566c:	beq	15734 <flatcc_json_printer_uint16@@Base+0x14c>
   15670:	cmp	r0, #4
   15674:	bxne	lr
   15678:	movw	r2, #34079	; 0x851f
   1567c:	movt	r2, #20971	; 0x51eb
   15680:	umull	r2, r3, ip, r2
   15684:	lsr	r3, r3, #5
   15688:	mov	r2, #100	; 0x64
   1568c:	mls	r2, r3, r2, ip
   15690:	uxth	ip, r2
   15694:	ldr	r2, [pc, #224]	; 1577c <flatcc_json_printer_uint16@@Base+0x194>
   15698:	add	r2, pc, r2
   1569c:	add	r2, r2, ip, lsl #1
   156a0:	ldrh	r2, [r2]
   156a4:	strh	r2, [r1, #-2]!
   156a8:	b	15738 <flatcc_json_printer_uint16@@Base+0x150>
   156ac:	cmp	r0, #1
   156b0:	beq	1576c <flatcc_json_printer_uint16@@Base+0x184>
   156b4:	cmp	r0, #3
   156b8:	beq	156f4 <flatcc_json_printer_uint16@@Base+0x10c>
   156bc:	cmp	r0, #5
   156c0:	bne	15768 <flatcc_json_printer_uint16@@Base+0x180>
   156c4:	movw	r3, #34079	; 0x851f
   156c8:	movt	r3, #20971	; 0x51eb
   156cc:	umull	r3, r2, ip, r3
   156d0:	lsr	r2, r2, #5
   156d4:	mov	r3, #100	; 0x64
   156d8:	mls	ip, r2, r3, ip
   156dc:	ldr	r3, [pc, #144]	; 15774 <flatcc_json_printer_uint16@@Base+0x18c>
   156e0:	add	r3, pc, r3
   156e4:	add	r3, r3, ip, lsl #1
   156e8:	mov	ip, r2
   156ec:	ldrh	r3, [r3]
   156f0:	strh	r3, [r1, #-2]!
   156f4:	movw	r3, #34079	; 0x851f
   156f8:	uxth	r2, ip
   156fc:	movt	r3, #20971	; 0x51eb
   15700:	umull	r2, r3, r2, r3
   15704:	lsr	r3, r3, #5
   15708:	mov	r2, #100	; 0x64
   1570c:	mls	r2, r3, r2, ip
   15710:	uxth	ip, r2
   15714:	ldr	r2, [pc, #92]	; 15778 <flatcc_json_printer_uint16@@Base+0x190>
   15718:	add	r2, pc, r2
   1571c:	add	r2, r2, ip, lsl #1
   15720:	ldrh	r2, [r2]
   15724:	strh	r2, [r1, #-2]!
   15728:	add	r2, r3, #48	; 0x30
   1572c:	strb	r2, [r1, #-1]
   15730:	bx	lr
   15734:	mov	r3, ip
   15738:	uxth	ip, r3
   1573c:	movw	r3, #34079	; 0x851f
   15740:	movt	r3, #20971	; 0x51eb
   15744:	umull	r3, r2, ip, r3
   15748:	lsr	r2, r2, #5
   1574c:	mov	r3, #100	; 0x64
   15750:	mls	r2, r2, r3, ip
   15754:	ldr	r3, [pc, #36]	; 15780 <flatcc_json_printer_uint16@@Base+0x198>
   15758:	add	r3, pc, r3
   1575c:	add	r2, r3, r2, lsl #1
   15760:	ldrh	r2, [r2]
   15764:	strh	r2, [r1, #-2]
   15768:	bx	lr
   1576c:	mov	r3, ip
   15770:	b	15728 <flatcc_json_printer_uint16@@Base+0x140>
   15774:	andeq	ip, r0, r8, ror #8
   15778:	andeq	ip, r0, r0, lsr r4
   1577c:			; <UNDEFINED> instruction: 0x0000c4b0
   15780:	strdeq	ip, [r0], -r0

00015784 <flatcc_json_printer_uint32@@Base>:
   15784:	push	{r4, sl, fp, lr}
   15788:	add	fp, sp, #8
   1578c:	mov	r2, r1
   15790:	ldr	r1, [r0, #20]
   15794:	mov	r4, r0
   15798:	mov	r0, r2
   1579c:	bl	157b0 <flatcc_json_printer_uint32@@Base+0x2c>
   157a0:	ldr	r1, [r4, #20]
   157a4:	add	r0, r1, r0
   157a8:	str	r0, [r4, #20]
   157ac:	pop	{r4, sl, fp, pc}
   157b0:	mov	ip, r0
   157b4:	movw	r0, #10000	; 0x2710
   157b8:	cmp	ip, r0
   157bc:	bcc	157f0 <flatcc_json_printer_uint32@@Base+0x6c>
   157c0:	movw	r0, #38528	; 0x9680
   157c4:	movt	r0, #152	; 0x98
   157c8:	cmp	ip, r0
   157cc:	bcc	1580c <flatcc_json_printer_uint32@@Base+0x88>
   157d0:	movw	r0, #51712	; 0xca00
   157d4:	movt	r0, #15258	; 0x3b9a
   157d8:	cmp	ip, r0
   157dc:	bcc	1583c <flatcc_json_printer_uint32@@Base+0xb8>
   157e0:	mov	r0, #0
   157e4:	strb	r0, [r1, #10]!
   157e8:	mov	r0, #10
   157ec:	b	15878 <flatcc_json_printer_uint32@@Base+0xf4>
   157f0:	cmp	ip, #100	; 0x64
   157f4:	bcc	1582c <flatcc_json_printer_uint32@@Base+0xa8>
   157f8:	lsr	r3, ip, #3
   157fc:	mov	r0, #3
   15800:	cmp	r3, #124	; 0x7c
   15804:	movwhi	r0, #4
   15808:	b	15868 <flatcc_json_printer_uint32@@Base+0xe4>
   1580c:	movw	r0, #16960	; 0x4240
   15810:	movt	r0, #15
   15814:	cmp	ip, r0
   15818:	bcc	15854 <flatcc_json_printer_uint32@@Base+0xd0>
   1581c:	mov	r0, #0
   15820:	strb	r0, [r1, #7]!
   15824:	mov	r0, #7
   15828:	b	159b0 <flatcc_json_printer_uint32@@Base+0x22c>
   1582c:	mov	r0, #1
   15830:	cmp	ip, #9
   15834:	movwhi	r0, #2
   15838:	b	15868 <flatcc_json_printer_uint32@@Base+0xe4>
   1583c:	movw	r3, #57599	; 0xe0ff
   15840:	mov	r0, #8
   15844:	movt	r3, #1525	; 0x5f5
   15848:	cmp	ip, r3
   1584c:	movwhi	r0, #9
   15850:	b	15868 <flatcc_json_printer_uint32@@Base+0xe4>
   15854:	movw	r3, #34463	; 0x869f
   15858:	mov	r0, #5
   1585c:	movt	r3, #1
   15860:	cmp	ip, r3
   15864:	movwhi	r0, #6
   15868:	mov	r3, #0
   1586c:	tst	r0, #1
   15870:	strb	r3, [r1, r0]!
   15874:	bne	159b0 <flatcc_json_printer_uint32@@Base+0x22c>
   15878:	lsr	r2, r0, #1
   1587c:	orr	r2, r2, r0, lsl #3
   15880:	eor	r3, r2, #4
   15884:	sbfx	r2, r3, #0, #4
   15888:	cmp	r2, #0
   1588c:	blt	159ac <flatcc_json_printer_uint32@@Base+0x228>
   15890:	and	r2, r3, #15
   15894:	add	r3, pc, #4
   15898:	ldr	r2, [r3, r2, lsl #2]
   1589c:	add	pc, r3, r2
   158a0:	andeq	r0, r0, r0, asr r0
   158a4:	andeq	r0, r0, r0, lsr #32
   158a8:	andeq	r0, r0, ip, lsl #2
   158ac:	andeq	r0, r0, ip, lsl #2
   158b0:	andeq	r0, r0, ip, lsl #2
   158b4:	andeq	r0, r0, r0, ror #1
   158b8:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   158bc:	andeq	r0, r0, r0, lsl #1
   158c0:	movw	r2, #34079	; 0x851f
   158c4:	movt	r2, #20971	; 0x51eb
   158c8:	umull	r2, r3, ip, r2
   158cc:	lsr	r2, r3, #5
   158d0:	mov	r3, #100	; 0x64
   158d4:	mls	ip, r2, r3, ip
   158d8:	ldr	r3, [pc, #500]	; 15ad4 <flatcc_json_printer_uint32@@Base+0x350>
   158dc:	add	r3, pc, r3
   158e0:	add	r3, r3, ip, lsl #1
   158e4:	mov	ip, r2
   158e8:	ldrh	r3, [r3]
   158ec:	strh	r3, [r1, #-2]!
   158f0:	movw	r2, #34079	; 0x851f
   158f4:	movt	r2, #20971	; 0x51eb
   158f8:	umull	r2, r3, ip, r2
   158fc:	lsr	r2, r3, #5
   15900:	mov	r3, #100	; 0x64
   15904:	mls	ip, r2, r3, ip
   15908:	ldr	r3, [pc, #456]	; 15ad8 <flatcc_json_printer_uint32@@Base+0x354>
   1590c:	add	r3, pc, r3
   15910:	add	r3, r3, ip, lsl #1
   15914:	mov	ip, r2
   15918:	ldrh	r3, [r3]
   1591c:	strh	r3, [r1, #-2]!
   15920:	movw	r2, #34079	; 0x851f
   15924:	movt	r2, #20971	; 0x51eb
   15928:	umull	r2, r3, ip, r2
   1592c:	lsr	r2, r3, #5
   15930:	mov	r3, #100	; 0x64
   15934:	mls	ip, r2, r3, ip
   15938:	ldr	r3, [pc, #412]	; 15adc <flatcc_json_printer_uint32@@Base+0x358>
   1593c:	add	r3, pc, r3
   15940:	add	r3, r3, ip, lsl #1
   15944:	mov	ip, r2
   15948:	ldrh	r3, [r3]
   1594c:	strh	r3, [r1, #-2]!
   15950:	movw	r2, #34079	; 0x851f
   15954:	movt	r2, #20971	; 0x51eb
   15958:	umull	r2, r3, ip, r2
   1595c:	lsr	r2, r3, #5
   15960:	mov	r3, #100	; 0x64
   15964:	mls	ip, r2, r3, ip
   15968:	ldr	r3, [pc, #368]	; 15ae0 <flatcc_json_printer_uint32@@Base+0x35c>
   1596c:	add	r3, pc, r3
   15970:	add	r3, r3, ip, lsl #1
   15974:	mov	ip, r2
   15978:	ldrh	r3, [r3]
   1597c:	strh	r3, [r1, #-2]!
   15980:	movw	r2, #34079	; 0x851f
   15984:	movt	r2, #20971	; 0x51eb
   15988:	umull	r2, r3, ip, r2
   1598c:	lsr	r2, r3, #5
   15990:	mov	r3, #100	; 0x64
   15994:	mls	r2, r2, r3, ip
   15998:	ldr	r3, [pc, #324]	; 15ae4 <flatcc_json_printer_uint32@@Base+0x360>
   1599c:	add	r3, pc, r3
   159a0:	add	r2, r3, r2, lsl #1
   159a4:	ldrh	r2, [r2]
   159a8:	strh	r2, [r1, #-2]
   159ac:	bx	lr
   159b0:	add	r3, r0, #7
   159b4:	ubfx	r2, r3, #1, #3
   159b8:	orr	r3, r2, r3, lsl #3
   159bc:	sbfx	r2, r3, #0, #4
   159c0:	cmp	r2, #0
   159c4:	bxlt	lr
   159c8:	and	r2, r3, #15
   159cc:	add	r3, pc, #4
   159d0:	ldr	r2, [r3, r2, lsl #2]
   159d4:	add	pc, r3, r2
   159d8:	andeq	r0, r0, r0, lsr #32
   159dc:			; <UNDEFINED> instruction: 0xffffffd4
   159e0:			; <UNDEFINED> instruction: 0xffffffd4
   159e4:			; <UNDEFINED> instruction: 0xffffffd4
   159e8:	andeq	r0, r0, r0, ror #1
   159ec:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   159f0:	andeq	r0, r0, r0, lsl #1
   159f4:	andeq	r0, r0, r0, asr r0
   159f8:	movw	r2, #34079	; 0x851f
   159fc:	movt	r2, #20971	; 0x51eb
   15a00:	umull	r2, r3, ip, r2
   15a04:	lsr	r2, r3, #5
   15a08:	mov	r3, #100	; 0x64
   15a0c:	mls	ip, r2, r3, ip
   15a10:	ldr	r3, [pc, #172]	; 15ac4 <flatcc_json_printer_uint32@@Base+0x340>
   15a14:	add	r3, pc, r3
   15a18:	add	r3, r3, ip, lsl #1
   15a1c:	mov	ip, r2
   15a20:	ldrh	r3, [r3]
   15a24:	strh	r3, [r1, #-2]!
   15a28:	movw	r2, #34079	; 0x851f
   15a2c:	movt	r2, #20971	; 0x51eb
   15a30:	umull	r2, r3, ip, r2
   15a34:	lsr	r2, r3, #5
   15a38:	mov	r3, #100	; 0x64
   15a3c:	mls	ip, r2, r3, ip
   15a40:	ldr	r3, [pc, #128]	; 15ac8 <flatcc_json_printer_uint32@@Base+0x344>
   15a44:	add	r3, pc, r3
   15a48:	add	r3, r3, ip, lsl #1
   15a4c:	mov	ip, r2
   15a50:	ldrh	r3, [r3]
   15a54:	strh	r3, [r1, #-2]!
   15a58:	movw	r2, #34079	; 0x851f
   15a5c:	movt	r2, #20971	; 0x51eb
   15a60:	umull	r2, r3, ip, r2
   15a64:	lsr	r2, r3, #5
   15a68:	mov	r3, #100	; 0x64
   15a6c:	mls	ip, r2, r3, ip
   15a70:	ldr	r3, [pc, #84]	; 15acc <flatcc_json_printer_uint32@@Base+0x348>
   15a74:	add	r3, pc, r3
   15a78:	add	r3, r3, ip, lsl #1
   15a7c:	mov	ip, r2
   15a80:	ldrh	r3, [r3]
   15a84:	strh	r3, [r1, #-2]!
   15a88:	movw	r2, #34079	; 0x851f
   15a8c:	movt	r2, #20971	; 0x51eb
   15a90:	umull	r2, r3, ip, r2
   15a94:	lsr	r2, r3, #5
   15a98:	mov	r3, #100	; 0x64
   15a9c:	mls	ip, r2, r3, ip
   15aa0:	ldr	r3, [pc, #40]	; 15ad0 <flatcc_json_printer_uint32@@Base+0x34c>
   15aa4:	add	r3, pc, r3
   15aa8:	add	r3, r3, ip, lsl #1
   15aac:	mov	ip, r2
   15ab0:	ldrh	r3, [r3]
   15ab4:	strh	r3, [r1, #-2]!
   15ab8:	add	r2, ip, #48	; 0x30
   15abc:	strb	r2, [r1, #-1]
   15ac0:	bx	lr
   15ac4:	andeq	ip, r0, r4, lsr r1
   15ac8:	andeq	ip, r0, r4, lsl #2
   15acc:	ldrdeq	ip, [r0], -r4
   15ad0:	andeq	ip, r0, r4, lsr #1
   15ad4:	andeq	ip, r0, ip, ror #4
   15ad8:	andeq	ip, r0, ip, lsr r2
   15adc:	andeq	ip, r0, ip, lsl #4
   15ae0:	ldrdeq	ip, [r0], -ip	; <UNPREDICTABLE>
   15ae4:	andeq	ip, r0, ip, lsr #3

00015ae8 <flatcc_json_printer_uint64@@Base>:
   15ae8:	push	{r4, sl, fp, lr}
   15aec:	add	fp, sp, #8
   15af0:	mov	r1, r3
   15af4:	mov	r3, r2
   15af8:	ldr	r2, [r0, #20]
   15afc:	mov	r4, r0
   15b00:	mov	r0, r3
   15b04:	bl	15b18 <flatcc_json_printer_uint64@@Base+0x30>
   15b08:	ldr	r1, [r4, #20]
   15b0c:	add	r0, r1, r0
   15b10:	str	r0, [r4, #20]
   15b14:	pop	{r4, sl, fp, pc}
   15b18:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15b1c:	add	fp, sp, #24
   15b20:	mov	r7, r0
   15b24:	movw	r0, #51711	; 0xc9ff
   15b28:	mov	r4, r2
   15b2c:	movt	r0, #15258	; 0x3b9a
   15b30:	subs	r0, r0, r7
   15b34:	rscs	r0, r1, #0
   15b38:	bcc	15b4c <flatcc_json_printer_uint64@@Base+0x64>
   15b3c:	mov	r0, r7
   15b40:	mov	r1, r4
   15b44:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   15b48:	b	157b0 <flatcc_json_printer_uint32@@Base+0x2c>
   15b4c:	mov	r6, r1
   15b50:	movw	r1, #40960	; 0xa000
   15b54:	movw	r0, #2328	; 0x918
   15b58:	movt	r1, #20082	; 0x4e72
   15b5c:	subs	r1, r7, r1
   15b60:	sbcs	r0, r6, r0
   15b64:	bcc	15bc4 <flatcc_json_printer_uint64@@Base+0xdc>
   15b68:	movw	r1, #0
   15b6c:	movw	r0, #34546	; 0x86f2
   15b70:	movt	r1, #28609	; 0x6fc1
   15b74:	movt	r0, #35	; 0x23
   15b78:	subs	r1, r7, r1
   15b7c:	sbcs	r0, r6, r0
   15b80:	bcc	15bf4 <flatcc_json_printer_uint64@@Base+0x10c>
   15b84:	movw	r1, #0
   15b88:	movw	r0, #46771	; 0xb6b3
   15b8c:	movt	r1, #42852	; 0xa764
   15b90:	movt	r0, #3552	; 0xde0
   15b94:	subs	r1, r7, r1
   15b98:	sbcs	r0, r6, r0
   15b9c:	bcc	15c3c <flatcc_json_printer_uint64@@Base+0x154>
   15ba0:	movw	r1, #65535	; 0xffff
   15ba4:	movw	r0, #8964	; 0x2304
   15ba8:	mov	r8, #19
   15bac:	movt	r1, #35303	; 0x89e7
   15bb0:	movt	r0, #35527	; 0x8ac7
   15bb4:	subs	r1, r1, r7
   15bb8:	sbcs	r0, r0, r6
   15bbc:	movwcc	r8, #20
   15bc0:	b	15c7c <flatcc_json_printer_uint64@@Base+0x194>
   15bc4:	movw	r0, #59392	; 0xe800
   15bc8:	movt	r0, #18550	; 0x4876
   15bcc:	subs	r0, r7, r0
   15bd0:	sbcs	r0, r6, #23
   15bd4:	bcc	15c20 <flatcc_json_printer_uint64@@Base+0x138>
   15bd8:	movw	r0, #4095	; 0xfff
   15bdc:	mov	r8, #12
   15be0:	movt	r0, #54437	; 0xd4a5
   15be4:	subs	r0, r0, r7
   15be8:	rscs	r0, r6, #232	; 0xe8
   15bec:	movwcc	r8, #13
   15bf0:	b	15c7c <flatcc_json_printer_uint64@@Base+0x194>
   15bf4:	movw	r1, #32768	; 0x8000
   15bf8:	movw	r0, #36222	; 0x8d7e
   15bfc:	movt	r1, #42182	; 0xa4c6
   15c00:	movt	r0, #3
   15c04:	subs	r1, r7, r1
   15c08:	sbcs	r0, r6, r0
   15c0c:	bcc	15c60 <flatcc_json_printer_uint64@@Base+0x178>
   15c10:	mov	r0, #0
   15c14:	mov	r8, #16
   15c18:	strb	r0, [r4, #16]!
   15c1c:	b	15d40 <flatcc_json_printer_uint64@@Base+0x258>
   15c20:	movw	r0, #58367	; 0xe3ff
   15c24:	mov	r8, #10
   15c28:	movt	r0, #21515	; 0x540b
   15c2c:	subs	r0, r0, r7
   15c30:	rscs	r0, r6, #2
   15c34:	movwcc	r8, #11
   15c38:	b	15c7c <flatcc_json_printer_uint64@@Base+0x194>
   15c3c:	movw	r1, #65535	; 0xffff
   15c40:	movw	r0, #17784	; 0x4578
   15c44:	mov	r8, #17
   15c48:	movt	r1, #23945	; 0x5d89
   15c4c:	movt	r0, #355	; 0x163
   15c50:	subs	r1, r1, r7
   15c54:	sbcs	r0, r0, r6
   15c58:	movwcc	r8, #18
   15c5c:	b	15c7c <flatcc_json_printer_uint64@@Base+0x194>
   15c60:	movw	r1, #16383	; 0x3fff
   15c64:	movw	r0, #23283	; 0x5af3
   15c68:	mov	r8, #14
   15c6c:	movt	r1, #4218	; 0x107a
   15c70:	subs	r1, r1, r7
   15c74:	sbcs	r0, r0, r6
   15c78:	movwcc	r8, #15
   15c7c:	mov	r0, #0
   15c80:	tst	r8, #1
   15c84:	strb	r0, [r4, r8]!
   15c88:	bne	15e24 <flatcc_json_printer_uint64@@Base+0x33c>
   15c8c:	sub	r0, r8, #10
   15c90:	cmp	r0, #10
   15c94:	bhi	15f9c <flatcc_json_printer_uint64@@Base+0x4b4>
   15c98:	add	r1, pc, #4
   15c9c:	ldr	r0, [r1, r0, lsl #2]
   15ca0:	add	pc, r1, r0
   15ca4:	andeq	r0, r0, r4, asr #2
   15ca8:	strdeq	r0, [r0], -r8
   15cac:	andeq	r0, r0, ip, lsl #2
   15cb0:	strdeq	r0, [r0], -r8
   15cb4:	ldrdeq	r0, [r0], -r4
   15cb8:	strdeq	r0, [r0], -r8
   15cbc:	muleq	r0, ip, r0
   15cc0:	strdeq	r0, [r0], -r8
   15cc4:	andeq	r0, r0, r4, rrx
   15cc8:	strdeq	r0, [r0], -r8
   15ccc:	andeq	r0, r0, ip, lsr #32
   15cd0:	mov	r0, r7
   15cd4:	mov	r1, r6
   15cd8:	mov	r2, #100	; 0x64
   15cdc:	mov	r3, #0
   15ce0:	mov	r5, #100	; 0x64
   15ce4:	bl	20e88 <flatcc_json_printer_clear@@Base+0x194>
   15ce8:	ldr	r2, [pc, #876]	; 1605c <flatcc_json_printer_uint64@@Base+0x574>
   15cec:	mov	r6, r1
   15cf0:	mls	r1, r0, r5, r7
   15cf4:	mov	r7, r0
   15cf8:	add	r2, pc, r2
   15cfc:	add	r1, r2, r1, lsl #1
   15d00:	ldrh	r1, [r1]
   15d04:	strh	r1, [r4, #-2]!
   15d08:	mov	r0, r7
   15d0c:	mov	r1, r6
   15d10:	mov	r2, #100	; 0x64
   15d14:	mov	r3, #0
   15d18:	mov	r5, #100	; 0x64
   15d1c:	bl	20e88 <flatcc_json_printer_clear@@Base+0x194>
   15d20:	ldr	r2, [pc, #824]	; 16060 <flatcc_json_printer_uint64@@Base+0x578>
   15d24:	mov	r6, r1
   15d28:	mls	r1, r0, r5, r7
   15d2c:	mov	r7, r0
   15d30:	add	r2, pc, r2
   15d34:	add	r1, r2, r1, lsl #1
   15d38:	ldrh	r1, [r1]
   15d3c:	strh	r1, [r4, #-2]!
   15d40:	mov	r0, r7
   15d44:	mov	r1, r6
   15d48:	mov	r2, #100	; 0x64
   15d4c:	mov	r3, #0
   15d50:	mov	r5, #100	; 0x64
   15d54:	bl	20e88 <flatcc_json_printer_clear@@Base+0x194>
   15d58:	ldr	r2, [pc, #772]	; 16064 <flatcc_json_printer_uint64@@Base+0x57c>
   15d5c:	mov	r6, r1
   15d60:	mls	r1, r0, r5, r7
   15d64:	mov	r7, r0
   15d68:	add	r2, pc, r2
   15d6c:	add	r1, r2, r1, lsl #1
   15d70:	ldrh	r1, [r1]
   15d74:	strh	r1, [r4, #-2]!
   15d78:	mov	r0, r7
   15d7c:	mov	r1, r6
   15d80:	mov	r2, #100	; 0x64
   15d84:	mov	r3, #0
   15d88:	mov	r5, #100	; 0x64
   15d8c:	bl	20e88 <flatcc_json_printer_clear@@Base+0x194>
   15d90:	ldr	r2, [pc, #720]	; 16068 <flatcc_json_printer_uint64@@Base+0x580>
   15d94:	mov	r6, r1
   15d98:	mls	r1, r0, r5, r7
   15d9c:	mov	r7, r0
   15da0:	add	r2, pc, r2
   15da4:	add	r1, r2, r1, lsl #1
   15da8:	ldrh	r1, [r1]
   15dac:	strh	r1, [r4, #-2]!
   15db0:	mov	r0, r7
   15db4:	mov	r1, r6
   15db8:	mov	r2, #100	; 0x64
   15dbc:	mov	r3, #0
   15dc0:	mov	r5, #100	; 0x64
   15dc4:	bl	20e88 <flatcc_json_printer_clear@@Base+0x194>
   15dc8:	ldr	r2, [pc, #668]	; 1606c <flatcc_json_printer_uint64@@Base+0x584>
   15dcc:	mov	r6, r1
   15dd0:	mls	r1, r0, r5, r7
   15dd4:	mov	r7, r0
   15dd8:	add	r2, pc, r2
   15ddc:	add	r1, r2, r1, lsl #1
   15de0:	ldrh	r1, [r1]
   15de4:	strh	r1, [r4, #-2]!
   15de8:	mov	r0, r7
   15dec:	mov	r1, r6
   15df0:	mov	r2, #100	; 0x64
   15df4:	mov	r3, #0
   15df8:	mov	r5, #100	; 0x64
   15dfc:	bl	20e88 <flatcc_json_printer_clear@@Base+0x194>
   15e00:	ldr	r2, [pc, #616]	; 16070 <flatcc_json_printer_uint64@@Base+0x588>
   15e04:	mov	r6, r1
   15e08:	mls	r1, r0, r5, r7
   15e0c:	mov	r7, r0
   15e10:	add	r2, pc, r2
   15e14:	add	r1, r2, r1, lsl #1
   15e18:	ldrh	r1, [r1]
   15e1c:	strh	r1, [r4, #-2]!
   15e20:	b	15f9c <flatcc_json_printer_uint64@@Base+0x4b4>
   15e24:	sub	r0, r8, #11
   15e28:	cmp	r0, #8
   15e2c:	bhi	15f9c <flatcc_json_printer_uint64@@Base+0x4b4>
   15e30:	add	r1, pc, #4
   15e34:	ldr	r0, [r1, r0, lsl #2]
   15e38:	add	pc, r1, r0
   15e3c:	strdeq	r0, [r0], -ip
   15e40:	andeq	r0, r0, r0, ror #2
   15e44:	andeq	r0, r0, r4, asr #1
   15e48:	andeq	r0, r0, r0, ror #2
   15e4c:	andeq	r0, r0, ip, lsl #1
   15e50:	andeq	r0, r0, r0, ror #2
   15e54:	andeq	r0, r0, r4, asr r0
   15e58:	andeq	r0, r0, r0, ror #2
   15e5c:	andeq	r0, r0, r4, lsr #32
   15e60:	mov	r0, r7
   15e64:	mov	r1, r6
   15e68:	mov	r2, #100	; 0x64
   15e6c:	mov	r3, #0
   15e70:	bl	20e88 <flatcc_json_printer_clear@@Base+0x194>
   15e74:	mov	r7, r0
   15e78:	ldr	r0, [pc, #456]	; 16048 <flatcc_json_printer_uint64@@Base+0x560>
   15e7c:	mov	r6, r1
   15e80:	add	r0, pc, r0
   15e84:	add	r0, r0, r2, lsl #1
   15e88:	ldrh	r0, [r0]
   15e8c:	strh	r0, [r4, #-2]!
   15e90:	mov	r0, r7
   15e94:	mov	r1, r6
   15e98:	mov	r2, #100	; 0x64
   15e9c:	mov	r3, #0
   15ea0:	mov	r5, #100	; 0x64
   15ea4:	bl	20e88 <flatcc_json_printer_clear@@Base+0x194>
   15ea8:	ldr	r2, [pc, #412]	; 1604c <flatcc_json_printer_uint64@@Base+0x564>
   15eac:	mov	r6, r1
   15eb0:	mls	r1, r0, r5, r7
   15eb4:	mov	r7, r0
   15eb8:	add	r2, pc, r2
   15ebc:	add	r1, r2, r1, lsl #1
   15ec0:	ldrh	r1, [r1]
   15ec4:	strh	r1, [r4, #-2]!
   15ec8:	mov	r0, r7
   15ecc:	mov	r1, r6
   15ed0:	mov	r2, #100	; 0x64
   15ed4:	mov	r3, #0
   15ed8:	mov	r5, #100	; 0x64
   15edc:	bl	20e88 <flatcc_json_printer_clear@@Base+0x194>
   15ee0:	ldr	r2, [pc, #360]	; 16050 <flatcc_json_printer_uint64@@Base+0x568>
   15ee4:	mov	r6, r1
   15ee8:	mls	r1, r0, r5, r7
   15eec:	mov	r7, r0
   15ef0:	add	r2, pc, r2
   15ef4:	add	r1, r2, r1, lsl #1
   15ef8:	ldrh	r1, [r1]
   15efc:	strh	r1, [r4, #-2]!
   15f00:	mov	r0, r7
   15f04:	mov	r1, r6
   15f08:	mov	r2, #100	; 0x64
   15f0c:	mov	r3, #0
   15f10:	mov	r5, #100	; 0x64
   15f14:	bl	20e88 <flatcc_json_printer_clear@@Base+0x194>
   15f18:	ldr	r2, [pc, #308]	; 16054 <flatcc_json_printer_uint64@@Base+0x56c>
   15f1c:	mov	r6, r1
   15f20:	mls	r1, r0, r5, r7
   15f24:	mov	r7, r0
   15f28:	add	r2, pc, r2
   15f2c:	add	r1, r2, r1, lsl #1
   15f30:	ldrh	r1, [r1]
   15f34:	strh	r1, [r4, #-2]!
   15f38:	mov	r0, r7
   15f3c:	mov	r1, r6
   15f40:	mov	r2, #100	; 0x64
   15f44:	mov	r3, #0
   15f48:	mov	r9, #100	; 0x64
   15f4c:	bl	20e88 <flatcc_json_printer_clear@@Base+0x194>
   15f50:	mov	r2, #10
   15f54:	mov	r3, #0
   15f58:	mov	r5, r0
   15f5c:	bl	20e88 <flatcc_json_printer_clear@@Base+0x194>
   15f60:	orr	r0, r2, #48	; 0x30
   15f64:	mov	r2, #1000	; 0x3e8
   15f68:	mov	r3, #0
   15f6c:	strb	r0, [r4, #-3]!
   15f70:	mls	r0, r5, r9, r7
   15f74:	ldr	r1, [pc, #220]	; 16058 <flatcc_json_printer_uint64@@Base+0x570>
   15f78:	add	r1, pc, r1
   15f7c:	add	r0, r1, r0, lsl #1
   15f80:	mov	r1, r6
   15f84:	ldrh	r0, [r0]
   15f88:	strh	r0, [r4, #1]
   15f8c:	mov	r0, r7
   15f90:	bl	20e88 <flatcc_json_printer_clear@@Base+0x194>
   15f94:	mov	r7, r0
   15f98:	mov	r6, r1
   15f9c:	mov	r0, r7
   15fa0:	mov	r1, r6
   15fa4:	mov	r2, #100	; 0x64
   15fa8:	mov	r3, #0
   15fac:	mov	r5, #100	; 0x64
   15fb0:	bl	20e88 <flatcc_json_printer_clear@@Base+0x194>
   15fb4:	mls	r2, r0, r5, r7
   15fb8:	ldr	r5, [pc, #180]	; 16074 <flatcc_json_printer_uint64@@Base+0x58c>
   15fbc:	mov	r3, #0
   15fc0:	add	r5, pc, r5
   15fc4:	add	r2, r5, r2, lsl #1
   15fc8:	ldrh	r2, [r2]
   15fcc:	strh	r2, [r4, #-2]
   15fd0:	mov	r2, #100	; 0x64
   15fd4:	bl	20e88 <flatcc_json_printer_clear@@Base+0x194>
   15fd8:	add	r0, r5, r2, lsl #1
   15fdc:	mov	r1, r6
   15fe0:	movw	r2, #10000	; 0x2710
   15fe4:	mov	r3, #0
   15fe8:	ldrh	r0, [r0]
   15fec:	strh	r0, [r4, #-4]
   15ff0:	mov	r0, r7
   15ff4:	bl	20e88 <flatcc_json_printer_clear@@Base+0x194>
   15ff8:	mov	r2, #100	; 0x64
   15ffc:	mov	r3, #0
   16000:	bl	20e88 <flatcc_json_printer_clear@@Base+0x194>
   16004:	add	r0, r5, r2, lsl #1
   16008:	movw	r2, #16960	; 0x4240
   1600c:	mov	r1, r6
   16010:	mov	r3, #0
   16014:	ldrh	r0, [r0]
   16018:	movt	r2, #15
   1601c:	strh	r0, [r4, #-6]
   16020:	mov	r0, r7
   16024:	bl	20e88 <flatcc_json_printer_clear@@Base+0x194>
   16028:	mov	r2, #100	; 0x64
   1602c:	mov	r3, #0
   16030:	bl	20e88 <flatcc_json_printer_clear@@Base+0x194>
   16034:	add	r0, r5, r2, lsl #1
   16038:	ldrh	r0, [r0]
   1603c:	strh	r0, [r4, #-8]
   16040:	mov	r0, r8
   16044:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16048:	andeq	fp, r0, r8, asr #25
   1604c:	muleq	r0, r0, ip
   16050:	andeq	fp, r0, r8, asr ip
   16054:	andeq	fp, r0, r0, lsr #24
   16058:	ldrdeq	fp, [r0], -r0
   1605c:	andeq	fp, r0, r0, asr lr
   16060:	andeq	fp, r0, r8, lsl lr
   16064:	andeq	fp, r0, r0, ror #27
   16068:	andeq	fp, r0, r8, lsr #27
   1606c:	andeq	fp, r0, r0, ror sp
   16070:	andeq	fp, r0, r8, lsr sp
   16074:	andeq	fp, r0, r8, lsl #23

00016078 <flatcc_json_printer_int8@@Base>:
   16078:	push	{r4, sl, fp, lr}
   1607c:	add	fp, sp, #8
   16080:	ubfx	ip, r1, #7, #1
   16084:	ldr	r4, [r0, #20]
   16088:	cmn	r1, #1
   1608c:	movle	r2, #45	; 0x2d
   16090:	rsble	r1, r1, #0
   16094:	strble	r2, [r4], #1
   16098:	uxtb	r2, r1
   1609c:	cmp	r2, #100	; 0x64
   160a0:	bcc	160ec <flatcc_json_printer_int8@@Base+0x74>
   160a4:	mov	r1, #0
   160a8:	strb	r1, [r4, #3]
   160ac:	movw	r1, #34079	; 0x851f
   160b0:	movt	r1, #20971	; 0x51eb
   160b4:	umull	r1, lr, r2, r1
   160b8:	mov	r1, #48	; 0x30
   160bc:	orr	r1, r1, lr, lsr #5
   160c0:	lsr	lr, lr, #5
   160c4:	strb	r1, [r4]
   160c8:	mov	r1, #100	; 0x64
   160cc:	mls	r1, lr, r1, r2
   160d0:	ldr	r2, [pc, #128]	; 16158 <flatcc_json_printer_int8@@Base+0xe0>
   160d4:	add	r2, pc, r2
   160d8:	add	r1, r2, r1, lsl #1
   160dc:	ldrh	r1, [r1]
   160e0:	strh	r1, [r4, #1]
   160e4:	mov	r1, #3
   160e8:	b	16144 <flatcc_json_printer_int8@@Base+0xcc>
   160ec:	cmp	r2, #10
   160f0:	bcc	16130 <flatcc_json_printer_int8@@Base+0xb8>
   160f4:	mov	r1, #0
   160f8:	strb	r1, [r4, #2]
   160fc:	movw	r1, #34079	; 0x851f
   16100:	movt	r1, #20971	; 0x51eb
   16104:	umull	r1, r3, r2, r1
   16108:	lsr	r1, r3, #5
   1610c:	mov	r3, #100	; 0x64
   16110:	mls	r1, r1, r3, r2
   16114:	ldr	r2, [pc, #64]	; 1615c <flatcc_json_printer_int8@@Base+0xe4>
   16118:	add	r2, pc, r2
   1611c:	add	r1, r2, r1, lsl #1
   16120:	ldrh	r1, [r1]
   16124:	strh	r1, [r4]
   16128:	mov	r1, #2
   1612c:	b	16144 <flatcc_json_printer_int8@@Base+0xcc>
   16130:	mov	r2, #0
   16134:	add	r1, r1, #48	; 0x30
   16138:	strb	r2, [r4, #1]
   1613c:	strb	r1, [r4]
   16140:	mov	r1, #1
   16144:	ldr	r2, [r0, #20]
   16148:	add	r1, r1, ip
   1614c:	add	r1, r2, r1
   16150:	str	r1, [r0, #20]
   16154:	pop	{r4, sl, fp, pc}
   16158:	andeq	fp, r0, r4, ror sl
   1615c:	andeq	fp, r0, r0, lsr sl

00016160 <flatcc_json_printer_int16@@Base>:
   16160:	push	{r4, r5, fp, lr}
   16164:	add	fp, sp, #8
   16168:	ubfx	r5, r1, #15, #1
   1616c:	ldr	r2, [r0, #20]
   16170:	cmn	r1, #1
   16174:	mov	r4, r0
   16178:	movle	r0, #45	; 0x2d
   1617c:	rsble	r1, r1, #0
   16180:	strble	r0, [r2], #1
   16184:	uxth	r0, r1
   16188:	mov	r1, r2
   1618c:	bl	15614 <flatcc_json_printer_uint16@@Base+0x2c>
   16190:	ldr	r1, [r4, #20]
   16194:	add	r0, r0, r5
   16198:	add	r0, r1, r0
   1619c:	str	r0, [r4, #20]
   161a0:	pop	{r4, r5, fp, pc}

000161a4 <flatcc_json_printer_int32@@Base>:
   161a4:	push	{r4, r5, fp, lr}
   161a8:	add	fp, sp, #8
   161ac:	mov	r2, r1
   161b0:	lsr	r5, r1, #31
   161b4:	ldr	r1, [r0, #20]
   161b8:	mov	r4, r0
   161bc:	cmn	r2, #1
   161c0:	movle	r0, #45	; 0x2d
   161c4:	rsble	r2, r2, #0
   161c8:	strble	r0, [r1], #1
   161cc:	mov	r0, r2
   161d0:	bl	157b0 <flatcc_json_printer_uint32@@Base+0x2c>
   161d4:	ldr	r1, [r4, #20]
   161d8:	add	r0, r0, r5
   161dc:	add	r0, r1, r0
   161e0:	str	r0, [r4, #20]
   161e4:	pop	{r4, r5, fp, pc}

000161e8 <flatcc_json_printer_int64@@Base>:
   161e8:	push	{r4, r5, fp, lr}
   161ec:	add	fp, sp, #8
   161f0:	mov	r1, r3
   161f4:	mov	r3, r2
   161f8:	ldr	r2, [r0, #20]
   161fc:	mov	r4, r0
   16200:	lsr	r5, r1, #31
   16204:	cmn	r1, #1
   16208:	bgt	1621c <flatcc_json_printer_int64@@Base+0x34>
   1620c:	mov	r0, #45	; 0x2d
   16210:	rsbs	r3, r3, #0
   16214:	strb	r0, [r2], #1
   16218:	rsc	r1, r1, #0
   1621c:	mov	r0, r3
   16220:	bl	15b18 <flatcc_json_printer_uint64@@Base+0x30>
   16224:	ldr	r1, [r4, #20]
   16228:	add	r0, r0, r5
   1622c:	add	r0, r1, r0
   16230:	str	r0, [r4, #20]
   16234:	pop	{r4, r5, fp, pc}

00016238 <flatcc_json_printer_float@@Base>:
   16238:	push	{r4, sl, fp, lr}
   1623c:	add	fp, sp, #8
   16240:	mov	r4, r0
   16244:	ldr	r0, [r0, #20]
   16248:	vcvt.f64.f32	d0, s0
   1624c:	bl	141a8 <flatcc_json_printer_fmt_float@@Base+0x8>
   16250:	ldr	r1, [r4, #20]
   16254:	add	r0, r1, r0
   16258:	str	r0, [r4, #20]
   1625c:	pop	{r4, sl, fp, pc}

00016260 <flatcc_json_printer_double@@Base>:
   16260:	push	{r4, sl, fp, lr}
   16264:	add	fp, sp, #8
   16268:	mov	r4, r0
   1626c:	ldr	r0, [r0, #20]
   16270:	bl	141a8 <flatcc_json_printer_fmt_float@@Base+0x8>
   16274:	ldr	r1, [r4, #20]
   16278:	add	r0, r1, r0
   1627c:	str	r0, [r4, #20]
   16280:	pop	{r4, sl, fp, pc}

00016284 <flatcc_json_printer_enum@@Base>:
   16284:	push	{r4, r5, r6, r7, fp, lr}
   16288:	add	fp, sp, #16
   1628c:	mov	r4, r0
   16290:	ldr	r0, [r0, #20]
   16294:	mov	r6, r1
   16298:	mov	r1, #34	; 0x22
   1629c:	mov	r5, r2
   162a0:	strb	r1, [r0]
   162a4:	ldrb	r2, [r4, #26]
   162a8:	ldr	r0, [r4, #20]
   162ac:	ldr	r1, [r4, #16]
   162b0:	cmp	r2, #0
   162b4:	addeq	r0, r0, #1
   162b8:	add	r2, r0, r5
   162bc:	str	r0, [r4, #20]
   162c0:	cmp	r2, r1
   162c4:	bcc	16338 <flatcc_json_printer_enum@@Base+0xb4>
   162c8:	cmp	r0, r1
   162cc:	bcc	162e8 <flatcc_json_printer_enum@@Base+0x64>
   162d0:	ldr	r2, [r4, #44]	; 0x2c
   162d4:	mov	r0, r4
   162d8:	mov	r1, #0
   162dc:	blx	r2
   162e0:	ldr	r1, [r4, #16]
   162e4:	ldr	r0, [r4, #20]
   162e8:	sub	r7, r1, r0
   162ec:	cmp	r7, r5
   162f0:	bcs	16338 <flatcc_json_printer_enum@@Base+0xb4>
   162f4:	mov	r1, r6
   162f8:	mov	r2, r7
   162fc:	bl	128b0 <memcpy@plt>
   16300:	ldr	r0, [r4, #20]
   16304:	ldr	r2, [r4, #44]	; 0x2c
   16308:	mov	r1, #0
   1630c:	add	r0, r0, r7
   16310:	str	r0, [r4, #20]
   16314:	mov	r0, r4
   16318:	blx	r2
   1631c:	ldr	r1, [r4, #16]
   16320:	ldr	r0, [r4, #20]
   16324:	sub	r5, r5, r7
   16328:	add	r6, r6, r7
   1632c:	sub	r7, r1, r0
   16330:	cmp	r5, r7
   16334:	bhi	162f4 <flatcc_json_printer_enum@@Base+0x70>
   16338:	mov	r1, r6
   1633c:	mov	r2, r5
   16340:	bl	128b0 <memcpy@plt>
   16344:	ldr	r0, [r4, #20]
   16348:	add	r1, r0, r5
   1634c:	str	r1, [r4, #20]
   16350:	mov	r1, #34	; 0x22
   16354:	strb	r1, [r0, r5]
   16358:	ldrb	r0, [r4, #26]
   1635c:	ldr	r1, [r4, #20]
   16360:	cmp	r0, #0
   16364:	addeq	r1, r1, #1
   16368:	str	r1, [r4, #20]
   1636c:	pop	{r4, r5, r6, r7, fp, pc}

00016370 <flatcc_json_printer_delimit_enum_flags@@Base>:
   16370:	ldrb	ip, [r0, #26]
   16374:	ldr	r3, [r0, #20]
   16378:	mov	r2, #34	; 0x22
   1637c:	cmp	r1, #0
   16380:	movwne	r1, #1
   16384:	strb	r2, [r3]
   16388:	clz	r2, ip
   1638c:	lsr	r2, r2, #5
   16390:	orr	r1, r1, r2
   16394:	ldr	r2, [r0, #20]
   16398:	add	r1, r2, r1
   1639c:	str	r1, [r0, #20]
   163a0:	bx	lr

000163a4 <flatcc_json_printer_enum_flag@@Base>:
   163a4:	push	{r4, r5, r6, r7, fp, lr}
   163a8:	add	fp, sp, #16
   163ac:	mov	r5, r0
   163b0:	ldr	r0, [r0, #20]
   163b4:	mov	r6, r2
   163b8:	mov	r2, #32
   163bc:	cmp	r1, #0
   163c0:	mov	r4, r3
   163c4:	strb	r2, [r0]
   163c8:	ldr	r0, [r5, #20]
   163cc:	ldr	r2, [r5, #16]
   163d0:	addgt	r0, r0, #1
   163d4:	add	r1, r0, r3
   163d8:	str	r0, [r5, #20]
   163dc:	cmp	r1, r2
   163e0:	bcc	16454 <flatcc_json_printer_enum_flag@@Base+0xb0>
   163e4:	cmp	r0, r2
   163e8:	bcc	16404 <flatcc_json_printer_enum_flag@@Base+0x60>
   163ec:	ldr	r2, [r5, #44]	; 0x2c
   163f0:	mov	r0, r5
   163f4:	mov	r1, #0
   163f8:	blx	r2
   163fc:	ldr	r2, [r5, #16]
   16400:	ldr	r0, [r5, #20]
   16404:	sub	r7, r2, r0
   16408:	cmp	r7, r4
   1640c:	bcs	16454 <flatcc_json_printer_enum_flag@@Base+0xb0>
   16410:	mov	r1, r6
   16414:	mov	r2, r7
   16418:	bl	128b0 <memcpy@plt>
   1641c:	ldr	r0, [r5, #20]
   16420:	ldr	r2, [r5, #44]	; 0x2c
   16424:	mov	r1, #0
   16428:	add	r0, r0, r7
   1642c:	str	r0, [r5, #20]
   16430:	mov	r0, r5
   16434:	blx	r2
   16438:	ldr	r1, [r5, #16]
   1643c:	ldr	r0, [r5, #20]
   16440:	sub	r4, r4, r7
   16444:	add	r6, r6, r7
   16448:	sub	r7, r1, r0
   1644c:	cmp	r4, r7
   16450:	bhi	16410 <flatcc_json_printer_enum_flag@@Base+0x6c>
   16454:	mov	r1, r6
   16458:	mov	r2, r4
   1645c:	bl	128b0 <memcpy@plt>
   16460:	ldr	r0, [r5, #20]
   16464:	add	r0, r0, r4
   16468:	str	r0, [r5, #20]
   1646c:	pop	{r4, r5, r6, r7, fp, pc}

00016470 <flatcc_json_printer_string_field@@Base>:
   16470:	push	{r4, r5, fp, lr}
   16474:	add	fp, sp, #8
   16478:	mov	r4, r0
   1647c:	mov	r0, #4
   16480:	add	r0, r0, r2, lsl #1
   16484:	ldr	r2, [r1, #8]
   16488:	cmp	r0, r2
   1648c:	popge	{r4, r5, fp, pc}
   16490:	ldr	r2, [r1, #4]
   16494:	add	r0, r2, r0
   16498:	ldrh	r0, [r0]
   1649c:	cmp	r0, #0
   164a0:	ldrne	r2, [r1]
   164a4:	addsne	r5, r2, r0
   164a8:	bne	164b0 <flatcc_json_printer_string_field@@Base+0x40>
   164ac:	pop	{r4, r5, fp, pc}
   164b0:	ldr	ip, [r1, #16]
   164b4:	ldr	r2, [fp, #8]
   164b8:	add	r0, ip, #1
   164bc:	cmp	ip, #0
   164c0:	str	r0, [r1, #16]
   164c4:	ldrne	r0, [r4, #20]
   164c8:	addne	r1, r0, #1
   164cc:	strne	r1, [r4, #20]
   164d0:	movne	r1, #44	; 0x2c
   164d4:	strbne	r1, [r0]
   164d8:	mov	r0, r4
   164dc:	mov	r1, r3
   164e0:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   164e4:	ldr	r0, [r5]
   164e8:	ldr	r2, [r5, r0]!
   164ec:	mov	r0, r4
   164f0:	add	r1, r5, #4
   164f4:	pop	{r4, r5, fp, lr}
   164f8:	b	1505c <flatcc_json_printer_string@@Base+0x4>
   164fc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16500:	add	fp, sp, #24
   16504:	mov	r4, r0
   16508:	mov	r6, r1
   1650c:	ldr	r0, [r0, #20]
   16510:	mov	r8, r2
   16514:	ldrb	r1, [r4, #25]
   16518:	cmp	r1, #0
   1651c:	beq	165dc <flatcc_json_printer_string_field@@Base+0x16c>
   16520:	add	r1, r0, #1
   16524:	mov	r9, r4
   16528:	str	r1, [r4, #20]
   1652c:	mov	r1, #10
   16530:	strb	r1, [r0]
   16534:	ldr	r1, [r9, #16]!
   16538:	ldr	r0, [r4, #20]
   1653c:	ldrb	r2, [r9, #9]
   16540:	ldr	r3, [r9, #16]
   16544:	mla	r5, r3, r2, r0
   16548:	mul	r7, r3, r2
   1654c:	cmp	r5, r1
   16550:	bls	165c0 <flatcc_json_printer_string_field@@Base+0x150>
   16554:	cmp	r0, r1
   16558:	bcc	16574 <flatcc_json_printer_string_field@@Base+0x104>
   1655c:	ldr	r2, [r4, #44]	; 0x2c
   16560:	mov	r0, r4
   16564:	mov	r1, #0
   16568:	blx	r2
   1656c:	ldr	r1, [r4, #16]
   16570:	ldr	r0, [r4, #20]
   16574:	sub	r5, r1, r0
   16578:	cmp	r5, r7
   1657c:	bcs	165c0 <flatcc_json_printer_string_field@@Base+0x150>
   16580:	mov	r1, #32
   16584:	mov	r2, r5
   16588:	bl	12940 <memset@plt>
   1658c:	ldr	r0, [r4, #20]
   16590:	ldr	r2, [r4, #44]	; 0x2c
   16594:	mov	r1, #0
   16598:	add	r0, r0, r5
   1659c:	str	r0, [r4, #20]
   165a0:	mov	r0, r4
   165a4:	blx	r2
   165a8:	ldr	r1, [r4, #16]
   165ac:	ldr	r0, [r4, #20]
   165b0:	sub	r7, r7, r5
   165b4:	sub	r5, r1, r0
   165b8:	cmp	r7, r5
   165bc:	bhi	16580 <flatcc_json_printer_string_field@@Base+0x110>
   165c0:	mov	r1, #32
   165c4:	mov	r2, r7
   165c8:	bl	12940 <memset@plt>
   165cc:	ldr	r0, [r4, #20]
   165d0:	add	r0, r0, r7
   165d4:	str	r0, [r4, #20]
   165d8:	b	16600 <flatcc_json_printer_string_field@@Base+0x190>
   165dc:	mov	r9, r4
   165e0:	ldr	r1, [r9, #16]!
   165e4:	cmp	r0, r1
   165e8:	bcc	16600 <flatcc_json_printer_string_field@@Base+0x190>
   165ec:	ldr	r2, [r4, #44]	; 0x2c
   165f0:	mov	r0, r4
   165f4:	mov	r1, #0
   165f8:	blx	r2
   165fc:	ldr	r0, [r4, #20]
   16600:	mov	r1, #34	; 0x22
   16604:	strb	r1, [r0]
   16608:	ldrb	r2, [r4, #26]
   1660c:	ldr	r0, [r4, #20]
   16610:	ldr	r1, [r4, #16]
   16614:	cmp	r2, #0
   16618:	addeq	r0, r0, #1
   1661c:	add	r2, r0, r8
   16620:	str	r0, [r4, #20]
   16624:	cmp	r2, r1
   16628:	bcc	1669c <flatcc_json_printer_string_field@@Base+0x22c>
   1662c:	cmp	r0, r1
   16630:	bcc	1664c <flatcc_json_printer_string_field@@Base+0x1dc>
   16634:	ldr	r2, [r4, #44]	; 0x2c
   16638:	mov	r0, r4
   1663c:	mov	r1, #0
   16640:	blx	r2
   16644:	ldr	r0, [r4, #20]
   16648:	ldr	r1, [r9]
   1664c:	sub	r7, r1, r0
   16650:	cmp	r7, r8
   16654:	bcs	1669c <flatcc_json_printer_string_field@@Base+0x22c>
   16658:	mov	r1, r6
   1665c:	mov	r2, r7
   16660:	bl	128b0 <memcpy@plt>
   16664:	ldr	r0, [r4, #20]
   16668:	ldr	r2, [r4, #44]	; 0x2c
   1666c:	mov	r1, #0
   16670:	add	r0, r0, r7
   16674:	str	r0, [r4, #20]
   16678:	mov	r0, r4
   1667c:	blx	r2
   16680:	ldr	r0, [r4, #20]
   16684:	ldr	r1, [r9]
   16688:	sub	r8, r8, r7
   1668c:	add	r6, r6, r7
   16690:	sub	r7, r1, r0
   16694:	cmp	r8, r7
   16698:	bhi	16658 <flatcc_json_printer_string_field@@Base+0x1e8>
   1669c:	mov	r1, r6
   166a0:	mov	r2, r8
   166a4:	bl	128b0 <memcpy@plt>
   166a8:	ldr	r0, [r4, #20]
   166ac:	add	r1, r0, r8
   166b0:	str	r1, [r4, #20]
   166b4:	mov	r1, #34	; 0x22
   166b8:	strb	r1, [r0, r8]
   166bc:	ldrb	r0, [r4, #26]
   166c0:	ldr	r1, [r4, #20]
   166c4:	cmp	r0, #0
   166c8:	addeq	r1, r1, #1
   166cc:	add	r0, r1, #1
   166d0:	str	r0, [r4, #20]
   166d4:	mov	r0, #58	; 0x3a
   166d8:	strb	r0, [r1]
   166dc:	mov	r1, #32
   166e0:	ldr	r0, [r4, #20]
   166e4:	strb	r1, [r0]
   166e8:	ldrb	r0, [r4, #25]
   166ec:	ldr	r1, [r4, #20]
   166f0:	cmp	r0, #0
   166f4:	addne	r1, r1, #1
   166f8:	str	r1, [r4, #20]
   166fc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00016700 <flatcc_json_printer_uint8_vector_base64_field@@Base>:
   16700:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16704:	add	fp, sp, #28
   16708:	sub	sp, sp, #12
   1670c:	mov	r4, r0
   16710:	mov	r0, #4
   16714:	add	r0, r0, r2, lsl #1
   16718:	ldr	r2, [r1, #8]
   1671c:	cmp	r0, r2
   16720:	bge	168bc <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1bc>
   16724:	ldr	r2, [r1, #4]
   16728:	add	r0, r2, r0
   1672c:	ldrh	r0, [r0]
   16730:	cmp	r0, #0
   16734:	beq	168bc <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1bc>
   16738:	ldr	r5, [fp, #12]
   1673c:	ldr	r2, [r1]
   16740:	cmp	r5, #0
   16744:	add	r6, r2, r0
   16748:	movwne	r5, #1
   1674c:	cmp	r6, #0
   16750:	beq	168bc <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1bc>
   16754:	ldr	r0, [r1, #16]
   16758:	ldr	r2, [fp, #8]
   1675c:	add	r7, r0, #1
   16760:	cmp	r0, #0
   16764:	str	r7, [r1, #16]
   16768:	ldrne	r0, [r4, #20]
   1676c:	addne	r1, r0, #1
   16770:	strne	r1, [r4, #20]
   16774:	movne	r1, #44	; 0x2c
   16778:	strbne	r1, [r0]
   1677c:	mov	r0, r4
   16780:	mov	r1, r3
   16784:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   16788:	ldr	r0, [r6]
   1678c:	ldr	r0, [r6, r0]!
   16790:	str	r0, [sp, #8]
   16794:	ldr	r0, [r4, #20]
   16798:	add	r1, r0, #1
   1679c:	str	r1, [r4, #20]
   167a0:	mov	r1, #34	; 0x22
   167a4:	strb	r1, [r0]
   167a8:	movw	r1, #43691	; 0xaaab
   167ac:	ldr	r0, [sp, #8]
   167b0:	movt	r1, #43690	; 0xaaaa
   167b4:	lsl	r0, r0, #2
   167b8:	umull	r0, r1, r0, r1
   167bc:	mov	r0, #3
   167c0:	add	r0, r0, r1, lsr #1
   167c4:	ldr	r1, [r4, #16]
   167c8:	bic	r7, r0, #3
   167cc:	ldr	r0, [r4, #20]
   167d0:	add	r2, r0, r7
   167d4:	cmp	r2, r1
   167d8:	bcc	167f8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xf8>
   167dc:	ldr	r2, [r4, #44]	; 0x2c
   167e0:	mov	r0, r4
   167e4:	mov	r1, #0
   167e8:	blx	r2
   167ec:	ldr	r0, [r4, #20]
   167f0:	ldr	r1, [r4, #16]
   167f4:	add	r2, r0, r7
   167f8:	add	r6, r6, #4
   167fc:	cmp	r2, r1
   16800:	bls	16894 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x194>
   16804:	add	r9, sp, #4
   16808:	mov	sl, #3
   1680c:	sub	r1, r1, r0
   16810:	bic	r7, r1, #3
   16814:	add	r1, r7, r7, lsl #1
   16818:	cmp	r1, #0
   1681c:	beq	168c4 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1c4>
   16820:	lsr	r8, r1, #2
   16824:	mov	r1, r6
   16828:	mov	r2, r9
   1682c:	mov	r3, r5
   16830:	str	r8, [sp, #4]
   16834:	bl	20d34 <flatcc_json_printer_clear@@Base+0x40>
   16838:	ldr	r0, [r4, #20]
   1683c:	mov	r1, #0
   16840:	add	r0, r0, r7
   16844:	str	r0, [r4, #20]
   16848:	ldr	r0, [sp, #8]
   1684c:	sub	r0, r0, r8
   16850:	str	r0, [sp, #8]
   16854:	mov	r0, r4
   16858:	ldr	r2, [r4, #44]	; 0x2c
   1685c:	blx	r2
   16860:	ldr	r0, [sp, #8]
   16864:	movw	r1, #43691	; 0xaaab
   16868:	add	r6, r6, r8
   1686c:	movt	r1, #43690	; 0xaaaa
   16870:	lsl	r0, r0, #2
   16874:	umull	r0, r1, r0, r1
   16878:	add	r0, sl, r1, lsr #1
   1687c:	ldr	r1, [r4, #16]
   16880:	bic	r7, r0, #3
   16884:	ldr	r0, [r4, #20]
   16888:	add	r2, r0, r7
   1688c:	cmp	r2, r1
   16890:	bhi	1680c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x10c>
   16894:	orr	r3, r5, #128	; 0x80
   16898:	add	r2, sp, #8
   1689c:	mov	r1, r6
   168a0:	bl	20d34 <flatcc_json_printer_clear@@Base+0x40>
   168a4:	ldr	r0, [r4, #20]
   168a8:	add	r1, r0, r7
   168ac:	add	r1, r1, #1
   168b0:	str	r1, [r4, #20]
   168b4:	mov	r1, #34	; 0x22
   168b8:	strb	r1, [r0, r7]
   168bc:	sub	sp, fp, #28
   168c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   168c4:	ldr	r0, [pc, #24]	; 168e4 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1e4>
   168c8:	ldr	r1, [pc, #24]	; 168e8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1e8>
   168cc:	ldr	r3, [pc, #24]	; 168ec <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1ec>
   168d0:	movw	r2, #277	; 0x115
   168d4:	add	r0, pc, r0
   168d8:	add	r1, pc, r1
   168dc:	add	r3, pc, r3
   168e0:	bl	12994 <__assert_fail@plt>
   168e4:	andeq	fp, r0, sp, lsr r3
   168e8:			; <UNDEFINED> instruction: 0x0000aebe
   168ec:	andeq	fp, r0, fp, lsr r3

000168f0 <flatcc_json_printer_uint8_field@@Base>:
   168f0:	push	{r4, r5, r6, sl, fp, lr}
   168f4:	add	fp, sp, #16
   168f8:	mov	r6, r0
   168fc:	mov	r0, #4
   16900:	ldr	r5, [r1, #8]
   16904:	add	r2, r0, r2, lsl #1
   16908:	ldr	r0, [fp, #12]
   1690c:	cmp	r2, r5
   16910:	bge	16930 <flatcc_json_printer_uint8_field@@Base+0x40>
   16914:	ldr	r5, [r1, #4]
   16918:	add	r2, r5, r2
   1691c:	ldrh	r2, [r2]
   16920:	cmp	r2, #0
   16924:	ldrne	r5, [r1]
   16928:	addsne	r2, r5, r2
   1692c:	bne	16a28 <flatcc_json_printer_uint8_field@@Base+0x138>
   16930:	ldrb	r2, [r6, #29]
   16934:	mov	r5, r0
   16938:	cmp	r2, #0
   1693c:	popeq	{r4, r5, r6, sl, fp, pc}
   16940:	ldr	r0, [r1, #16]
   16944:	ldr	r2, [fp, #8]
   16948:	add	r4, r0, #1
   1694c:	cmp	r0, #0
   16950:	str	r4, [r1, #16]
   16954:	ldrne	r0, [r6, #20]
   16958:	addne	r1, r0, #1
   1695c:	strne	r1, [r6, #20]
   16960:	movne	r1, #44	; 0x2c
   16964:	strbne	r1, [r0]
   16968:	mov	r0, r6
   1696c:	mov	r1, r3
   16970:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   16974:	ldr	r0, [r6, #20]
   16978:	mov	r1, #0
   1697c:	cmp	r5, #100	; 0x64
   16980:	bcc	169c8 <flatcc_json_printer_uint8_field@@Base+0xd8>
   16984:	strb	r1, [r0, #3]
   16988:	movw	r1, #34079	; 0x851f
   1698c:	movt	r1, #20971	; 0x51eb
   16990:	umull	r1, r2, r5, r1
   16994:	mov	r1, #48	; 0x30
   16998:	orr	r1, r1, r2, lsr #5
   1699c:	strb	r1, [r0]
   169a0:	lsr	r1, r2, #5
   169a4:	mov	r2, #100	; 0x64
   169a8:	mls	r1, r1, r2, r5
   169ac:	ldr	r2, [pc, #148]	; 16a48 <flatcc_json_printer_uint8_field@@Base+0x158>
   169b0:	add	r2, pc, r2
   169b4:	add	r1, r2, r1, lsl #1
   169b8:	ldrh	r1, [r1]
   169bc:	strh	r1, [r0, #1]
   169c0:	mov	r0, #3
   169c4:	b	16a18 <flatcc_json_printer_uint8_field@@Base+0x128>
   169c8:	cmp	r5, #10
   169cc:	bcc	16a08 <flatcc_json_printer_uint8_field@@Base+0x118>
   169d0:	strb	r1, [r0, #2]
   169d4:	movw	r1, #34079	; 0x851f
   169d8:	movt	r1, #20971	; 0x51eb
   169dc:	umull	r1, r2, r5, r1
   169e0:	lsr	r1, r2, #5
   169e4:	mov	r2, #100	; 0x64
   169e8:	mls	r1, r1, r2, r5
   169ec:	ldr	r2, [pc, #88]	; 16a4c <flatcc_json_printer_uint8_field@@Base+0x15c>
   169f0:	add	r2, pc, r2
   169f4:	add	r1, r2, r1, lsl #1
   169f8:	ldrh	r1, [r1]
   169fc:	strh	r1, [r0]
   16a00:	mov	r0, #2
   16a04:	b	16a18 <flatcc_json_printer_uint8_field@@Base+0x128>
   16a08:	strb	r1, [r0, #1]
   16a0c:	add	r1, r5, #48	; 0x30
   16a10:	strb	r1, [r0]
   16a14:	mov	r0, #1
   16a18:	ldr	r1, [r6, #20]
   16a1c:	add	r0, r1, r0
   16a20:	str	r0, [r6, #20]
   16a24:	pop	{r4, r5, r6, sl, fp, pc}
   16a28:	ldrb	r5, [r2]
   16a2c:	cmp	r5, r0
   16a30:	bne	16940 <flatcc_json_printer_uint8_field@@Base+0x50>
   16a34:	ldrb	r2, [r6, #28]
   16a38:	mov	r5, r0
   16a3c:	cmp	r2, #0
   16a40:	bne	16a24 <flatcc_json_printer_uint8_field@@Base+0x134>
   16a44:	b	16940 <flatcc_json_printer_uint8_field@@Base+0x50>
   16a48:	muleq	r0, r8, r1
   16a4c:	andeq	fp, r0, r8, asr r1

00016a50 <flatcc_json_printer_uint16_field@@Base>:
   16a50:	push	{r4, r5, r6, sl, fp, lr}
   16a54:	add	fp, sp, #16
   16a58:	mov	r4, r0
   16a5c:	mov	r0, #4
   16a60:	ldr	r5, [r1, #8]
   16a64:	add	r2, r0, r2, lsl #1
   16a68:	ldr	r0, [fp, #12]
   16a6c:	cmp	r2, r5
   16a70:	bge	16a90 <flatcc_json_printer_uint16_field@@Base+0x40>
   16a74:	ldr	r5, [r1, #4]
   16a78:	add	r2, r5, r2
   16a7c:	ldrh	r2, [r2]
   16a80:	cmp	r2, #0
   16a84:	ldrne	r5, [r1]
   16a88:	addsne	r2, r5, r2
   16a8c:	bne	16af0 <flatcc_json_printer_uint16_field@@Base+0xa0>
   16a90:	ldrb	r2, [r4, #29]
   16a94:	mov	r6, r0
   16a98:	cmp	r2, #0
   16a9c:	popeq	{r4, r5, r6, sl, fp, pc}
   16aa0:	ldr	r0, [r1, #16]
   16aa4:	ldr	r2, [fp, #8]
   16aa8:	add	r5, r0, #1
   16aac:	cmp	r0, #0
   16ab0:	str	r5, [r1, #16]
   16ab4:	ldrne	r0, [r4, #20]
   16ab8:	addne	r1, r0, #1
   16abc:	strne	r1, [r4, #20]
   16ac0:	movne	r1, #44	; 0x2c
   16ac4:	strbne	r1, [r0]
   16ac8:	mov	r0, r4
   16acc:	mov	r1, r3
   16ad0:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   16ad4:	ldr	r1, [r4, #20]
   16ad8:	mov	r0, r6
   16adc:	bl	15614 <flatcc_json_printer_uint16@@Base+0x2c>
   16ae0:	ldr	r1, [r4, #20]
   16ae4:	add	r0, r1, r0
   16ae8:	str	r0, [r4, #20]
   16aec:	pop	{r4, r5, r6, sl, fp, pc}
   16af0:	ldrh	r6, [r2]
   16af4:	cmp	r6, r0
   16af8:	bne	16aa0 <flatcc_json_printer_uint16_field@@Base+0x50>
   16afc:	ldrb	r2, [r4, #28]
   16b00:	mov	r6, r0
   16b04:	cmp	r2, #0
   16b08:	bne	16aec <flatcc_json_printer_uint16_field@@Base+0x9c>
   16b0c:	b	16aa0 <flatcc_json_printer_uint16_field@@Base+0x50>

00016b10 <flatcc_json_printer_uint32_field@@Base>:
   16b10:	push	{r4, r5, r6, sl, fp, lr}
   16b14:	add	fp, sp, #16
   16b18:	mov	r4, r0
   16b1c:	mov	r0, #4
   16b20:	ldr	r5, [r1, #8]
   16b24:	add	r2, r0, r2, lsl #1
   16b28:	ldr	r0, [fp, #12]
   16b2c:	cmp	r2, r5
   16b30:	bge	16b50 <flatcc_json_printer_uint32_field@@Base+0x40>
   16b34:	ldr	r5, [r1, #4]
   16b38:	add	r2, r5, r2
   16b3c:	ldrh	r2, [r2]
   16b40:	cmp	r2, #0
   16b44:	ldrne	r5, [r1]
   16b48:	addsne	r2, r5, r2
   16b4c:	bne	16bb0 <flatcc_json_printer_uint32_field@@Base+0xa0>
   16b50:	ldrb	r2, [r4, #29]
   16b54:	mov	r6, r0
   16b58:	cmp	r2, #0
   16b5c:	popeq	{r4, r5, r6, sl, fp, pc}
   16b60:	ldr	r0, [r1, #16]
   16b64:	ldr	r2, [fp, #8]
   16b68:	add	r5, r0, #1
   16b6c:	cmp	r0, #0
   16b70:	str	r5, [r1, #16]
   16b74:	ldrne	r0, [r4, #20]
   16b78:	addne	r1, r0, #1
   16b7c:	strne	r1, [r4, #20]
   16b80:	movne	r1, #44	; 0x2c
   16b84:	strbne	r1, [r0]
   16b88:	mov	r0, r4
   16b8c:	mov	r1, r3
   16b90:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   16b94:	ldr	r1, [r4, #20]
   16b98:	mov	r0, r6
   16b9c:	bl	157b0 <flatcc_json_printer_uint32@@Base+0x2c>
   16ba0:	ldr	r1, [r4, #20]
   16ba4:	add	r0, r1, r0
   16ba8:	str	r0, [r4, #20]
   16bac:	pop	{r4, r5, r6, sl, fp, pc}
   16bb0:	ldr	r6, [r2]
   16bb4:	cmp	r6, r0
   16bb8:	bne	16b60 <flatcc_json_printer_uint32_field@@Base+0x50>
   16bbc:	ldrb	r2, [r4, #28]
   16bc0:	mov	r6, r0
   16bc4:	cmp	r2, #0
   16bc8:	bne	16bac <flatcc_json_printer_uint32_field@@Base+0x9c>
   16bcc:	b	16b60 <flatcc_json_printer_uint32_field@@Base+0x50>

00016bd0 <flatcc_json_printer_uint64_field@@Base>:
   16bd0:	push	{r4, r6, r7, r8, fp, lr}
   16bd4:	add	fp, sp, #16
   16bd8:	mov	r4, r0
   16bdc:	mov	r0, #4
   16be0:	ldr	r6, [r1, #8]
   16be4:	ldr	lr, [fp, #20]
   16be8:	add	r7, r0, r2, lsl #1
   16bec:	ldr	r2, [fp, #16]
   16bf0:	cmp	r7, r6
   16bf4:	bge	16c14 <flatcc_json_printer_uint64_field@@Base+0x44>
   16bf8:	ldr	r6, [r1, #4]
   16bfc:	add	r7, r6, r7
   16c00:	ldrh	r7, [r7]
   16c04:	cmp	r7, #0
   16c08:	ldrne	r6, [r1]
   16c0c:	addsne	r7, r6, r7
   16c10:	bne	16c7c <flatcc_json_printer_uint64_field@@Base+0xac>
   16c14:	ldrb	r0, [r4, #29]
   16c18:	mov	r8, r2
   16c1c:	mov	r7, lr
   16c20:	cmp	r0, #0
   16c24:	popeq	{r4, r6, r7, r8, fp, pc}
   16c28:	ldr	r0, [r1, #16]
   16c2c:	ldr	r2, [fp, #8]
   16c30:	add	r6, r0, #1
   16c34:	cmp	r0, #0
   16c38:	str	r6, [r1, #16]
   16c3c:	ldrne	r0, [r4, #20]
   16c40:	addne	r1, r0, #1
   16c44:	strne	r1, [r4, #20]
   16c48:	movne	r1, #44	; 0x2c
   16c4c:	strbne	r1, [r0]
   16c50:	mov	r0, r4
   16c54:	mov	r1, r3
   16c58:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   16c5c:	ldr	r2, [r4, #20]
   16c60:	mov	r0, r8
   16c64:	mov	r1, r7
   16c68:	bl	15b18 <flatcc_json_printer_uint64@@Base+0x30>
   16c6c:	ldr	r1, [r4, #20]
   16c70:	add	r0, r1, r0
   16c74:	str	r0, [r4, #20]
   16c78:	pop	{r4, r6, r7, r8, fp, pc}
   16c7c:	ldr	r8, [r7]
   16c80:	ldr	r7, [r7, #4]
   16c84:	eor	ip, r7, lr
   16c88:	eor	r0, r8, r2
   16c8c:	orrs	r0, r0, ip
   16c90:	bne	16c28 <flatcc_json_printer_uint64_field@@Base+0x58>
   16c94:	ldrb	r0, [r4, #28]
   16c98:	mov	r8, r2
   16c9c:	mov	r7, lr
   16ca0:	cmp	r0, #0
   16ca4:	bne	16c78 <flatcc_json_printer_uint64_field@@Base+0xa8>
   16ca8:	b	16c28 <flatcc_json_printer_uint64_field@@Base+0x58>

00016cac <flatcc_json_printer_int8_field@@Base>:
   16cac:	push	{r4, r5, r6, sl, fp, lr}
   16cb0:	add	fp, sp, #16
   16cb4:	mov	r6, r0
   16cb8:	mov	r0, #4
   16cbc:	ldr	r5, [r1, #8]
   16cc0:	add	r2, r0, r2, lsl #1
   16cc4:	ldr	r0, [fp, #12]
   16cc8:	cmp	r2, r5
   16ccc:	bge	16cec <flatcc_json_printer_int8_field@@Base+0x40>
   16cd0:	ldr	r5, [r1, #4]
   16cd4:	add	r2, r5, r2
   16cd8:	ldrh	r2, [r2]
   16cdc:	cmp	r2, #0
   16ce0:	ldrne	r5, [r1]
   16ce4:	addsne	r2, r5, r2
   16ce8:	bne	16e0c <flatcc_json_printer_int8_field@@Base+0x160>
   16cec:	ldrb	r2, [r6, #29]
   16cf0:	mov	r5, r0
   16cf4:	cmp	r2, #0
   16cf8:	popeq	{r4, r5, r6, sl, fp, pc}
   16cfc:	ldr	r0, [r1, #16]
   16d00:	ldr	r2, [fp, #8]
   16d04:	add	r4, r0, #1
   16d08:	cmp	r0, #0
   16d0c:	str	r4, [r1, #16]
   16d10:	ldrne	r0, [r6, #20]
   16d14:	addne	r1, r0, #1
   16d18:	strne	r1, [r6, #20]
   16d1c:	movne	r1, #44	; 0x2c
   16d20:	strbne	r1, [r0]
   16d24:	mov	r0, r6
   16d28:	mov	r1, r3
   16d2c:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   16d30:	ubfx	r0, r5, #7, #1
   16d34:	ldr	r1, [r6, #20]
   16d38:	sxtb	r2, r5
   16d3c:	cmn	r2, #1
   16d40:	movle	r2, #45	; 0x2d
   16d44:	rsble	r5, r5, #0
   16d48:	strble	r2, [r1], #1
   16d4c:	uxtb	r2, r5
   16d50:	cmp	r2, #100	; 0x64
   16d54:	bcc	16da0 <flatcc_json_printer_int8_field@@Base+0xf4>
   16d58:	mov	r3, #0
   16d5c:	strb	r3, [r1, #3]
   16d60:	movw	r3, #34079	; 0x851f
   16d64:	movt	r3, #20971	; 0x51eb
   16d68:	umull	r3, r5, r2, r3
   16d6c:	mov	r3, #48	; 0x30
   16d70:	orr	r3, r3, r5, lsr #5
   16d74:	strb	r3, [r1]
   16d78:	lsr	r3, r5, #5
   16d7c:	mov	r5, #100	; 0x64
   16d80:	mls	r2, r3, r5, r2
   16d84:	ldr	r3, [pc, #164]	; 16e30 <flatcc_json_printer_int8_field@@Base+0x184>
   16d88:	add	r3, pc, r3
   16d8c:	add	r2, r3, r2, lsl #1
   16d90:	ldrh	r2, [r2]
   16d94:	strh	r2, [r1, #1]
   16d98:	mov	r1, #3
   16d9c:	b	16df8 <flatcc_json_printer_int8_field@@Base+0x14c>
   16da0:	cmp	r2, #10
   16da4:	bcc	16de4 <flatcc_json_printer_int8_field@@Base+0x138>
   16da8:	mov	r3, #0
   16dac:	strb	r3, [r1, #2]
   16db0:	movw	r3, #34079	; 0x851f
   16db4:	movt	r3, #20971	; 0x51eb
   16db8:	umull	r3, r5, r2, r3
   16dbc:	lsr	r3, r5, #5
   16dc0:	mov	r5, #100	; 0x64
   16dc4:	mls	r2, r3, r5, r2
   16dc8:	ldr	r3, [pc, #100]	; 16e34 <flatcc_json_printer_int8_field@@Base+0x188>
   16dcc:	add	r3, pc, r3
   16dd0:	add	r2, r3, r2, lsl #1
   16dd4:	ldrh	r2, [r2]
   16dd8:	strh	r2, [r1]
   16ddc:	mov	r1, #2
   16de0:	b	16df8 <flatcc_json_printer_int8_field@@Base+0x14c>
   16de4:	mov	r2, #0
   16de8:	strb	r2, [r1, #1]
   16dec:	add	r2, r5, #48	; 0x30
   16df0:	strb	r2, [r1]
   16df4:	mov	r1, #1
   16df8:	add	r0, r1, r0
   16dfc:	ldr	r1, [r6, #20]
   16e00:	add	r0, r1, r0
   16e04:	str	r0, [r6, #20]
   16e08:	pop	{r4, r5, r6, sl, fp, pc}
   16e0c:	ldrb	r5, [r2]
   16e10:	uxtb	r2, r0
   16e14:	cmp	r5, r2
   16e18:	bne	16cfc <flatcc_json_printer_int8_field@@Base+0x50>
   16e1c:	ldrb	r2, [r6, #28]
   16e20:	mov	r5, r0
   16e24:	cmp	r2, #0
   16e28:	bne	16e08 <flatcc_json_printer_int8_field@@Base+0x15c>
   16e2c:	b	16cfc <flatcc_json_printer_int8_field@@Base+0x50>
   16e30:	andeq	sl, r0, r0, asr #27
   16e34:	andeq	sl, r0, ip, ror sp

00016e38 <flatcc_json_printer_int16_field@@Base>:
   16e38:	push	{r4, r5, r6, sl, fp, lr}
   16e3c:	add	fp, sp, #16
   16e40:	mov	r4, r0
   16e44:	mov	r0, #4
   16e48:	ldr	r6, [r1, #8]
   16e4c:	add	r2, r0, r2, lsl #1
   16e50:	ldr	r0, [fp, #12]
   16e54:	cmp	r2, r6
   16e58:	bge	16e78 <flatcc_json_printer_int16_field@@Base+0x40>
   16e5c:	ldr	r6, [r1, #4]
   16e60:	add	r2, r6, r2
   16e64:	ldrh	r2, [r2]
   16e68:	cmp	r2, #0
   16e6c:	ldrne	r6, [r1]
   16e70:	addsne	r2, r6, r2
   16e74:	bne	16ef4 <flatcc_json_printer_int16_field@@Base+0xbc>
   16e78:	ldrb	r2, [r4, #29]
   16e7c:	mov	r5, r0
   16e80:	cmp	r2, #0
   16e84:	popeq	{r4, r5, r6, sl, fp, pc}
   16e88:	ldr	r0, [r1, #16]
   16e8c:	ldr	r2, [fp, #8]
   16e90:	add	r6, r0, #1
   16e94:	cmp	r0, #0
   16e98:	str	r6, [r1, #16]
   16e9c:	ldrne	r0, [r4, #20]
   16ea0:	addne	r1, r0, #1
   16ea4:	strne	r1, [r4, #20]
   16ea8:	movne	r1, #44	; 0x2c
   16eac:	strbne	r1, [r0]
   16eb0:	mov	r0, r4
   16eb4:	mov	r1, r3
   16eb8:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   16ebc:	ubfx	r6, r5, #15, #1
   16ec0:	ldr	r1, [r4, #20]
   16ec4:	sxth	r0, r5
   16ec8:	cmn	r0, #1
   16ecc:	movle	r0, #45	; 0x2d
   16ed0:	rsble	r5, r5, #0
   16ed4:	strble	r0, [r1], #1
   16ed8:	uxth	r0, r5
   16edc:	bl	15614 <flatcc_json_printer_uint16@@Base+0x2c>
   16ee0:	ldr	r1, [r4, #20]
   16ee4:	add	r0, r0, r6
   16ee8:	add	r0, r1, r0
   16eec:	str	r0, [r4, #20]
   16ef0:	pop	{r4, r5, r6, sl, fp, pc}
   16ef4:	ldrh	r5, [r2]
   16ef8:	uxth	r2, r0
   16efc:	cmp	r5, r2
   16f00:	bne	16e88 <flatcc_json_printer_int16_field@@Base+0x50>
   16f04:	ldrb	r2, [r4, #28]
   16f08:	mov	r5, r0
   16f0c:	cmp	r2, #0
   16f10:	bne	16ef0 <flatcc_json_printer_int16_field@@Base+0xb8>
   16f14:	b	16e88 <flatcc_json_printer_int16_field@@Base+0x50>

00016f18 <flatcc_json_printer_int32_field@@Base>:
   16f18:	push	{r4, r5, r6, sl, fp, lr}
   16f1c:	add	fp, sp, #16
   16f20:	mov	r4, r0
   16f24:	mov	r0, #4
   16f28:	ldr	r6, [r1, #8]
   16f2c:	add	r2, r0, r2, lsl #1
   16f30:	ldr	r0, [fp, #12]
   16f34:	cmp	r2, r6
   16f38:	bge	16f58 <flatcc_json_printer_int32_field@@Base+0x40>
   16f3c:	ldr	r6, [r1, #4]
   16f40:	add	r2, r6, r2
   16f44:	ldrh	r2, [r2]
   16f48:	cmp	r2, #0
   16f4c:	ldrne	r6, [r1]
   16f50:	addsne	r2, r6, r2
   16f54:	bne	16fd0 <flatcc_json_printer_int32_field@@Base+0xb8>
   16f58:	ldrb	r2, [r4, #29]
   16f5c:	mov	r5, r0
   16f60:	cmp	r2, #0
   16f64:	popeq	{r4, r5, r6, sl, fp, pc}
   16f68:	ldr	r0, [r1, #16]
   16f6c:	ldr	r2, [fp, #8]
   16f70:	add	r6, r0, #1
   16f74:	cmp	r0, #0
   16f78:	str	r6, [r1, #16]
   16f7c:	ldrne	r0, [r4, #20]
   16f80:	addne	r1, r0, #1
   16f84:	strne	r1, [r4, #20]
   16f88:	movne	r1, #44	; 0x2c
   16f8c:	strbne	r1, [r0]
   16f90:	mov	r0, r4
   16f94:	mov	r1, r3
   16f98:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   16f9c:	ldr	r1, [r4, #20]
   16fa0:	cmn	r5, #1
   16fa4:	lsr	r6, r5, #31
   16fa8:	movle	r0, #45	; 0x2d
   16fac:	rsble	r5, r5, #0
   16fb0:	strble	r0, [r1], #1
   16fb4:	mov	r0, r5
   16fb8:	bl	157b0 <flatcc_json_printer_uint32@@Base+0x2c>
   16fbc:	ldr	r1, [r4, #20]
   16fc0:	add	r0, r0, r6
   16fc4:	add	r0, r1, r0
   16fc8:	str	r0, [r4, #20]
   16fcc:	pop	{r4, r5, r6, sl, fp, pc}
   16fd0:	ldr	r5, [r2]
   16fd4:	cmp	r5, r0
   16fd8:	bne	16f68 <flatcc_json_printer_int32_field@@Base+0x50>
   16fdc:	ldrb	r2, [r4, #28]
   16fe0:	mov	r5, r0
   16fe4:	cmp	r2, #0
   16fe8:	bne	16fcc <flatcc_json_printer_int32_field@@Base+0xb4>
   16fec:	b	16f68 <flatcc_json_printer_int32_field@@Base+0x50>

00016ff0 <flatcc_json_printer_int64_field@@Base>:
   16ff0:	push	{r4, r5, r6, r7, fp, lr}
   16ff4:	add	fp, sp, #16
   16ff8:	mov	r4, r0
   16ffc:	mov	r0, #4
   17000:	ldr	r6, [r1, #8]
   17004:	add	r7, r0, r2, lsl #1
   17008:	ldr	r0, [fp, #20]
   1700c:	ldr	r2, [fp, #16]
   17010:	cmp	r7, r6
   17014:	bge	17034 <flatcc_json_printer_int64_field@@Base+0x44>
   17018:	ldr	r6, [r1, #4]
   1701c:	add	r7, r6, r7
   17020:	ldrh	r7, [r7]
   17024:	cmp	r7, #0
   17028:	ldrne	r6, [r1]
   1702c:	addsne	r7, r6, r7
   17030:	bne	170bc <flatcc_json_printer_int64_field@@Base+0xcc>
   17034:	ldrb	r7, [r4, #29]
   17038:	mov	r6, r2
   1703c:	cmp	r7, #0
   17040:	mov	r7, r0
   17044:	popeq	{r4, r5, r6, r7, fp, pc}
   17048:	ldr	r0, [r1, #16]
   1704c:	ldr	r2, [fp, #8]
   17050:	add	r5, r0, #1
   17054:	cmp	r0, #0
   17058:	str	r5, [r1, #16]
   1705c:	ldrne	r0, [r4, #20]
   17060:	addne	r1, r0, #1
   17064:	strne	r1, [r4, #20]
   17068:	movne	r1, #44	; 0x2c
   1706c:	strbne	r1, [r0]
   17070:	mov	r0, r4
   17074:	mov	r1, r3
   17078:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   1707c:	ldr	r2, [r4, #20]
   17080:	lsr	r5, r7, #31
   17084:	cmn	r7, #1
   17088:	bgt	1709c <flatcc_json_printer_int64_field@@Base+0xac>
   1708c:	mov	r0, #45	; 0x2d
   17090:	rsbs	r6, r6, #0
   17094:	strb	r0, [r2], #1
   17098:	rsc	r7, r7, #0
   1709c:	mov	r0, r6
   170a0:	mov	r1, r7
   170a4:	bl	15b18 <flatcc_json_printer_uint64@@Base+0x30>
   170a8:	ldr	r1, [r4, #20]
   170ac:	add	r0, r0, r5
   170b0:	add	r0, r1, r0
   170b4:	str	r0, [r4, #20]
   170b8:	pop	{r4, r5, r6, r7, fp, pc}
   170bc:	ldrd	r6, [r7]
   170c0:	eor	ip, r7, r0
   170c4:	eor	r5, r6, r2
   170c8:	orrs	r5, r5, ip
   170cc:	bne	17048 <flatcc_json_printer_int64_field@@Base+0x58>
   170d0:	ldrb	r7, [r4, #28]
   170d4:	mov	r6, r2
   170d8:	cmp	r7, #0
   170dc:	mov	r7, r0
   170e0:	bne	170b8 <flatcc_json_printer_int64_field@@Base+0xc8>
   170e4:	b	17048 <flatcc_json_printer_int64_field@@Base+0x58>

000170e8 <flatcc_json_printer_bool_field@@Base>:
   170e8:	push	{r4, r5, r6, sl, fp, lr}
   170ec:	add	fp, sp, #16
   170f0:	mov	r4, r0
   170f4:	mov	r0, #4
   170f8:	ldr	r5, [r1, #8]
   170fc:	add	r2, r0, r2, lsl #1
   17100:	ldr	r0, [fp, #12]
   17104:	cmp	r2, r5
   17108:	bge	17128 <flatcc_json_printer_bool_field@@Base+0x40>
   1710c:	ldr	r5, [r1, #4]
   17110:	add	r2, r5, r2
   17114:	ldrh	r2, [r2]
   17118:	cmp	r2, #0
   1711c:	ldrne	r5, [r1]
   17120:	addsne	r2, r5, r2
   17124:	bne	171bc <flatcc_json_printer_bool_field@@Base+0xd4>
   17128:	ldrb	r2, [r4, #29]
   1712c:	mov	r6, r0
   17130:	cmp	r2, #0
   17134:	popeq	{r4, r5, r6, sl, fp, pc}
   17138:	ldr	r0, [r1, #16]
   1713c:	ldr	r2, [fp, #8]
   17140:	add	r5, r0, #1
   17144:	cmp	r0, #0
   17148:	str	r5, [r1, #16]
   1714c:	ldrne	r0, [r4, #20]
   17150:	addne	r1, r0, #1
   17154:	strne	r1, [r4, #20]
   17158:	movne	r1, #44	; 0x2c
   1715c:	strbne	r1, [r0]
   17160:	mov	r0, r4
   17164:	mov	r1, r3
   17168:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   1716c:	ldr	r0, [r4, #20]
   17170:	cmp	r6, #0
   17174:	beq	17194 <flatcc_json_printer_bool_field@@Base+0xac>
   17178:	mov	r1, #0
   1717c:	strb	r1, [r0, #4]
   17180:	movw	r1, #29300	; 0x7274
   17184:	movt	r1, #25973	; 0x6575
   17188:	str	r1, [r0]
   1718c:	mov	r0, #4
   17190:	b	171ac <flatcc_json_printer_bool_field@@Base+0xc4>
   17194:	mov	r1, #101	; 0x65
   17198:	strh	r1, [r0, #4]
   1719c:	movw	r1, #24934	; 0x6166
   171a0:	movt	r1, #29548	; 0x736c
   171a4:	str	r1, [r0]
   171a8:	mov	r0, #5
   171ac:	ldr	r1, [r4, #20]
   171b0:	add	r0, r1, r0
   171b4:	str	r0, [r4, #20]
   171b8:	pop	{r4, r5, r6, sl, fp, pc}
   171bc:	ldrb	r6, [r2]
   171c0:	cmp	r6, r0
   171c4:	bne	17138 <flatcc_json_printer_bool_field@@Base+0x50>
   171c8:	ldrb	r2, [r4, #28]
   171cc:	mov	r6, r0
   171d0:	cmp	r2, #0
   171d4:	bne	171b8 <flatcc_json_printer_bool_field@@Base+0xd0>
   171d8:	b	17138 <flatcc_json_printer_bool_field@@Base+0x50>

000171dc <flatcc_json_printer_float_field@@Base>:
   171dc:	push	{r4, r5, fp, lr}
   171e0:	add	fp, sp, #8
   171e4:	vpush	{d8}
   171e8:	mov	r5, r0
   171ec:	mov	r0, #4
   171f0:	vmov.f32	s16, s0
   171f4:	add	r0, r0, r2, lsl #1
   171f8:	ldr	r2, [r1, #8]
   171fc:	cmp	r0, r2
   17200:	bge	17220 <flatcc_json_printer_float_field@@Base+0x44>
   17204:	ldr	r2, [r1, #4]
   17208:	add	r0, r2, r0
   1720c:	ldrh	r0, [r0]
   17210:	cmp	r0, #0
   17214:	ldrne	r2, [r1]
   17218:	addsne	r0, r2, r0
   1721c:	bne	17280 <flatcc_json_printer_float_field@@Base+0xa4>
   17220:	ldrb	r0, [r5, #29]
   17224:	cmp	r0, #0
   17228:	beq	17278 <flatcc_json_printer_float_field@@Base+0x9c>
   1722c:	ldr	r0, [r1, #16]
   17230:	ldr	r2, [fp, #8]
   17234:	add	r4, r0, #1
   17238:	cmp	r0, #0
   1723c:	str	r4, [r1, #16]
   17240:	ldrne	r0, [r5, #20]
   17244:	addne	r1, r0, #1
   17248:	strne	r1, [r5, #20]
   1724c:	movne	r1, #44	; 0x2c
   17250:	strbne	r1, [r0]
   17254:	mov	r0, r5
   17258:	mov	r1, r3
   1725c:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   17260:	ldr	r0, [r5, #20]
   17264:	vcvt.f64.f32	d0, s16
   17268:	bl	141a8 <flatcc_json_printer_fmt_float@@Base+0x8>
   1726c:	ldr	r1, [r5, #20]
   17270:	add	r0, r1, r0
   17274:	str	r0, [r5, #20]
   17278:	vpop	{d8}
   1727c:	pop	{r4, r5, fp, pc}
   17280:	vldr	s0, [r0]
   17284:	vcmp.f32	s0, s16
   17288:	vmrs	APSR_nzcv, fpscr
   1728c:	bne	172a4 <flatcc_json_printer_float_field@@Base+0xc8>
   17290:	ldrb	r0, [r5, #28]
   17294:	vmov.f32	s16, s0
   17298:	cmp	r0, #0
   1729c:	bne	17278 <flatcc_json_printer_float_field@@Base+0x9c>
   172a0:	b	1722c <flatcc_json_printer_float_field@@Base+0x50>
   172a4:	vmov.f32	s16, s0
   172a8:	b	1722c <flatcc_json_printer_float_field@@Base+0x50>

000172ac <flatcc_json_printer_double_field@@Base>:
   172ac:	push	{r4, r5, fp, lr}
   172b0:	add	fp, sp, #8
   172b4:	vpush	{d8}
   172b8:	mov	r5, r0
   172bc:	mov	r0, #4
   172c0:	vmov.f64	d8, d0
   172c4:	add	r0, r0, r2, lsl #1
   172c8:	ldr	r2, [r1, #8]
   172cc:	cmp	r0, r2
   172d0:	bge	172f0 <flatcc_json_printer_double_field@@Base+0x44>
   172d4:	ldr	r2, [r1, #4]
   172d8:	add	r0, r2, r0
   172dc:	ldrh	r0, [r0]
   172e0:	cmp	r0, #0
   172e4:	ldrne	r2, [r1]
   172e8:	addsne	r0, r2, r0
   172ec:	bne	17350 <flatcc_json_printer_double_field@@Base+0xa4>
   172f0:	ldrb	r0, [r5, #29]
   172f4:	cmp	r0, #0
   172f8:	beq	17348 <flatcc_json_printer_double_field@@Base+0x9c>
   172fc:	ldr	r0, [r1, #16]
   17300:	ldr	r2, [fp, #8]
   17304:	add	r4, r0, #1
   17308:	cmp	r0, #0
   1730c:	str	r4, [r1, #16]
   17310:	ldrne	r0, [r5, #20]
   17314:	addne	r1, r0, #1
   17318:	strne	r1, [r5, #20]
   1731c:	movne	r1, #44	; 0x2c
   17320:	strbne	r1, [r0]
   17324:	mov	r0, r5
   17328:	mov	r1, r3
   1732c:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   17330:	ldr	r0, [r5, #20]
   17334:	vmov.f64	d0, d8
   17338:	bl	141a8 <flatcc_json_printer_fmt_float@@Base+0x8>
   1733c:	ldr	r1, [r5, #20]
   17340:	add	r0, r1, r0
   17344:	str	r0, [r5, #20]
   17348:	vpop	{d8}
   1734c:	pop	{r4, r5, fp, pc}
   17350:	vldr	d16, [r0]
   17354:	vcmp.f64	d16, d8
   17358:	vmrs	APSR_nzcv, fpscr
   1735c:	bne	17374 <flatcc_json_printer_double_field@@Base+0xc8>
   17360:	ldrb	r0, [r5, #28]
   17364:	vmov.f64	d8, d16
   17368:	cmp	r0, #0
   1736c:	bne	17348 <flatcc_json_printer_double_field@@Base+0x9c>
   17370:	b	172fc <flatcc_json_printer_double_field@@Base+0x50>
   17374:	vmov.f64	d8, d16
   17378:	b	172fc <flatcc_json_printer_double_field@@Base+0x50>

0001737c <flatcc_json_printer_uint8_enum_field@@Base>:
   1737c:	push	{r4, r5, r6, r7, fp, lr}
   17380:	add	fp, sp, #16
   17384:	mov	r6, r0
   17388:	mov	r0, #4
   1738c:	ldr	r4, [r1, #8]
   17390:	ldr	ip, [fp, #16]
   17394:	add	r5, r0, r2, lsl #1
   17398:	ldr	r0, [fp, #12]
   1739c:	ldr	r2, [fp, #8]
   173a0:	cmp	r5, r4
   173a4:	bge	173c4 <flatcc_json_printer_uint8_enum_field@@Base+0x48>
   173a8:	ldr	r4, [r1, #4]
   173ac:	add	r5, r4, r5
   173b0:	ldrh	r5, [r5]
   173b4:	cmp	r5, #0
   173b8:	ldrne	r4, [r1]
   173bc:	addsne	r5, r4, r5
   173c0:	bne	174dc <flatcc_json_printer_uint8_enum_field@@Base+0x160>
   173c4:	ldrb	r5, [r6, #29]
   173c8:	cmp	r5, #0
   173cc:	mov	r5, r0
   173d0:	popeq	{r4, r5, r6, r7, fp, pc}
   173d4:	ldr	r0, [r1, #16]
   173d8:	mov	r7, ip
   173dc:	add	r4, r0, #1
   173e0:	cmp	r0, #0
   173e4:	str	r4, [r1, #16]
   173e8:	ldrne	r0, [r6, #20]
   173ec:	addne	r1, r0, #1
   173f0:	strne	r1, [r6, #20]
   173f4:	movne	r1, #44	; 0x2c
   173f8:	strbne	r1, [r0]
   173fc:	mov	r0, r6
   17400:	mov	r1, r3
   17404:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   17408:	ldrb	r0, [r6, #27]
   1740c:	cmp	r0, #0
   17410:	beq	17468 <flatcc_json_printer_uint8_enum_field@@Base+0xec>
   17414:	ldr	r0, [r6, #20]
   17418:	mov	r1, #0
   1741c:	cmp	r5, #100	; 0x64
   17420:	bcc	1747c <flatcc_json_printer_uint8_enum_field@@Base+0x100>
   17424:	strb	r1, [r0, #3]
   17428:	movw	r1, #34079	; 0x851f
   1742c:	movt	r1, #20971	; 0x51eb
   17430:	umull	r1, r2, r5, r1
   17434:	mov	r1, #48	; 0x30
   17438:	orr	r1, r1, r2, lsr #5
   1743c:	strb	r1, [r0]
   17440:	lsr	r1, r2, #5
   17444:	mov	r2, #100	; 0x64
   17448:	mls	r1, r1, r2, r5
   1744c:	ldr	r2, [pc, #168]	; 174fc <flatcc_json_printer_uint8_enum_field@@Base+0x180>
   17450:	add	r2, pc, r2
   17454:	add	r1, r2, r1, lsl #1
   17458:	ldrh	r1, [r1]
   1745c:	strh	r1, [r0, #1]
   17460:	mov	r0, #3
   17464:	b	174cc <flatcc_json_printer_uint8_enum_field@@Base+0x150>
   17468:	mov	r0, r6
   1746c:	mov	r1, r5
   17470:	mov	r2, r7
   17474:	pop	{r4, r5, r6, r7, fp, lr}
   17478:	bx	r2
   1747c:	cmp	r5, #10
   17480:	bcc	174bc <flatcc_json_printer_uint8_enum_field@@Base+0x140>
   17484:	strb	r1, [r0, #2]
   17488:	movw	r1, #34079	; 0x851f
   1748c:	movt	r1, #20971	; 0x51eb
   17490:	umull	r1, r2, r5, r1
   17494:	lsr	r1, r2, #5
   17498:	mov	r2, #100	; 0x64
   1749c:	mls	r1, r1, r2, r5
   174a0:	ldr	r2, [pc, #88]	; 17500 <flatcc_json_printer_uint8_enum_field@@Base+0x184>
   174a4:	add	r2, pc, r2
   174a8:	add	r1, r2, r1, lsl #1
   174ac:	ldrh	r1, [r1]
   174b0:	strh	r1, [r0]
   174b4:	mov	r0, #2
   174b8:	b	174cc <flatcc_json_printer_uint8_enum_field@@Base+0x150>
   174bc:	strb	r1, [r0, #1]
   174c0:	add	r1, r5, #48	; 0x30
   174c4:	strb	r1, [r0]
   174c8:	mov	r0, #1
   174cc:	ldr	r1, [r6, #20]
   174d0:	add	r0, r1, r0
   174d4:	str	r0, [r6, #20]
   174d8:	pop	{r4, r5, r6, r7, fp, pc}
   174dc:	ldrb	r5, [r5]
   174e0:	cmp	r5, r0
   174e4:	bne	173d4 <flatcc_json_printer_uint8_enum_field@@Base+0x58>
   174e8:	ldrb	r5, [r6, #28]
   174ec:	cmp	r5, #0
   174f0:	mov	r5, r0
   174f4:	bne	174d8 <flatcc_json_printer_uint8_enum_field@@Base+0x15c>
   174f8:	b	173d4 <flatcc_json_printer_uint8_enum_field@@Base+0x58>
   174fc:	strdeq	sl, [r0], -r8
   17500:	andeq	sl, r0, r4, lsr #13

00017504 <flatcc_json_printer_uint16_enum_field@@Base>:
   17504:	push	{r4, r5, r6, r7, fp, lr}
   17508:	add	fp, sp, #16
   1750c:	mov	r4, r0
   17510:	mov	r0, #4
   17514:	ldr	r7, [fp, #16]
   17518:	ldr	ip, [fp, #12]
   1751c:	add	r5, r0, r2, lsl #1
   17520:	ldr	r0, [r1, #8]
   17524:	ldr	r2, [fp, #8]
   17528:	cmp	r5, r0
   1752c:	bge	1754c <flatcc_json_printer_uint16_enum_field@@Base+0x48>
   17530:	ldr	r0, [r1, #4]
   17534:	add	r0, r0, r5
   17538:	ldrh	r5, [r0]
   1753c:	cmp	r5, #0
   17540:	ldrne	r0, [r1]
   17544:	addsne	r5, r0, r5
   17548:	bne	175c8 <flatcc_json_printer_uint16_enum_field@@Base+0xc4>
   1754c:	ldrb	r0, [r4, #29]
   17550:	mov	r6, ip
   17554:	cmp	r0, #0
   17558:	popeq	{r4, r5, r6, r7, fp, pc}
   1755c:	ldr	r0, [r1, #16]
   17560:	add	r5, r0, #1
   17564:	cmp	r0, #0
   17568:	str	r5, [r1, #16]
   1756c:	ldrne	r0, [r4, #20]
   17570:	addne	r1, r0, #1
   17574:	strne	r1, [r4, #20]
   17578:	movne	r1, #44	; 0x2c
   1757c:	strbne	r1, [r0]
   17580:	mov	r0, r4
   17584:	mov	r1, r3
   17588:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   1758c:	ldrb	r0, [r4, #27]
   17590:	cmp	r0, #0
   17594:	beq	175b4 <flatcc_json_printer_uint16_enum_field@@Base+0xb0>
   17598:	ldr	r1, [r4, #20]
   1759c:	mov	r0, r6
   175a0:	bl	15614 <flatcc_json_printer_uint16@@Base+0x2c>
   175a4:	ldr	r1, [r4, #20]
   175a8:	add	r0, r1, r0
   175ac:	str	r0, [r4, #20]
   175b0:	pop	{r4, r5, r6, r7, fp, pc}
   175b4:	mov	r0, r4
   175b8:	mov	r1, r6
   175bc:	mov	r2, r7
   175c0:	pop	{r4, r5, r6, r7, fp, lr}
   175c4:	bx	r2
   175c8:	ldrh	r6, [r5]
   175cc:	cmp	r6, ip
   175d0:	bne	1755c <flatcc_json_printer_uint16_enum_field@@Base+0x58>
   175d4:	ldrb	r0, [r4, #28]
   175d8:	mov	r6, ip
   175dc:	cmp	r0, #0
   175e0:	bne	175b0 <flatcc_json_printer_uint16_enum_field@@Base+0xac>
   175e4:	b	1755c <flatcc_json_printer_uint16_enum_field@@Base+0x58>

000175e8 <flatcc_json_printer_uint32_enum_field@@Base>:
   175e8:	push	{r4, r5, r6, r7, fp, lr}
   175ec:	add	fp, sp, #16
   175f0:	mov	r4, r0
   175f4:	mov	r0, #4
   175f8:	ldr	r7, [fp, #16]
   175fc:	ldr	ip, [fp, #12]
   17600:	add	r5, r0, r2, lsl #1
   17604:	ldr	r0, [r1, #8]
   17608:	ldr	r2, [fp, #8]
   1760c:	cmp	r5, r0
   17610:	bge	17630 <flatcc_json_printer_uint32_enum_field@@Base+0x48>
   17614:	ldr	r0, [r1, #4]
   17618:	add	r0, r0, r5
   1761c:	ldrh	r5, [r0]
   17620:	cmp	r5, #0
   17624:	ldrne	r0, [r1]
   17628:	addsne	r5, r0, r5
   1762c:	bne	176ac <flatcc_json_printer_uint32_enum_field@@Base+0xc4>
   17630:	ldrb	r0, [r4, #29]
   17634:	mov	r6, ip
   17638:	cmp	r0, #0
   1763c:	popeq	{r4, r5, r6, r7, fp, pc}
   17640:	ldr	r0, [r1, #16]
   17644:	add	r5, r0, #1
   17648:	cmp	r0, #0
   1764c:	str	r5, [r1, #16]
   17650:	ldrne	r0, [r4, #20]
   17654:	addne	r1, r0, #1
   17658:	strne	r1, [r4, #20]
   1765c:	movne	r1, #44	; 0x2c
   17660:	strbne	r1, [r0]
   17664:	mov	r0, r4
   17668:	mov	r1, r3
   1766c:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   17670:	ldrb	r0, [r4, #27]
   17674:	cmp	r0, #0
   17678:	beq	17698 <flatcc_json_printer_uint32_enum_field@@Base+0xb0>
   1767c:	ldr	r1, [r4, #20]
   17680:	mov	r0, r6
   17684:	bl	157b0 <flatcc_json_printer_uint32@@Base+0x2c>
   17688:	ldr	r1, [r4, #20]
   1768c:	add	r0, r1, r0
   17690:	str	r0, [r4, #20]
   17694:	pop	{r4, r5, r6, r7, fp, pc}
   17698:	mov	r0, r4
   1769c:	mov	r1, r6
   176a0:	mov	r2, r7
   176a4:	pop	{r4, r5, r6, r7, fp, lr}
   176a8:	bx	r2
   176ac:	ldr	r6, [r5]
   176b0:	cmp	r6, ip
   176b4:	bne	17640 <flatcc_json_printer_uint32_enum_field@@Base+0x58>
   176b8:	ldrb	r0, [r4, #28]
   176bc:	mov	r6, ip
   176c0:	cmp	r0, #0
   176c4:	bne	17694 <flatcc_json_printer_uint32_enum_field@@Base+0xac>
   176c8:	b	17640 <flatcc_json_printer_uint32_enum_field@@Base+0x58>

000176cc <flatcc_json_printer_uint64_enum_field@@Base>:
   176cc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   176d0:	add	fp, sp, #24
   176d4:	mov	r4, r0
   176d8:	mov	r0, #4
   176dc:	ldr	ip, [fp, #20]
   176e0:	ldr	r6, [fp, #16]
   176e4:	ldr	r5, [fp, #24]
   176e8:	add	r7, r0, r2, lsl #1
   176ec:	ldr	r0, [r1, #8]
   176f0:	ldr	r2, [fp, #8]
   176f4:	cmp	r7, r0
   176f8:	bge	17718 <flatcc_json_printer_uint64_enum_field@@Base+0x4c>
   176fc:	ldr	r0, [r1, #4]
   17700:	add	r0, r0, r7
   17704:	ldrh	r7, [r0]
   17708:	cmp	r7, #0
   1770c:	ldrne	r0, [r1]
   17710:	addsne	r7, r0, r7
   17714:	bne	177a0 <flatcc_json_printer_uint64_enum_field@@Base+0xd4>
   17718:	ldrb	r0, [r4, #29]
   1771c:	mov	r8, r6
   17720:	mov	r7, ip
   17724:	cmp	r0, #0
   17728:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   1772c:	ldr	r0, [r1, #16]
   17730:	add	r6, r0, #1
   17734:	cmp	r0, #0
   17738:	str	r6, [r1, #16]
   1773c:	ldrne	r0, [r4, #20]
   17740:	addne	r1, r0, #1
   17744:	strne	r1, [r4, #20]
   17748:	movne	r1, #44	; 0x2c
   1774c:	strbne	r1, [r0]
   17750:	mov	r0, r4
   17754:	mov	r1, r3
   17758:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   1775c:	ldrb	r0, [r4, #27]
   17760:	cmp	r0, #0
   17764:	beq	17788 <flatcc_json_printer_uint64_enum_field@@Base+0xbc>
   17768:	ldr	r2, [r4, #20]
   1776c:	mov	r0, r8
   17770:	mov	r1, r7
   17774:	bl	15b18 <flatcc_json_printer_uint64@@Base+0x30>
   17778:	ldr	r1, [r4, #20]
   1777c:	add	r0, r1, r0
   17780:	str	r0, [r4, #20]
   17784:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17788:	mov	r0, r4
   1778c:	mov	r2, r8
   17790:	mov	r3, r7
   17794:	mov	r1, r5
   17798:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1779c:	bx	r1
   177a0:	ldr	r8, [r7]
   177a4:	ldr	r7, [r7, #4]
   177a8:	eor	lr, r7, ip
   177ac:	eor	r0, r8, r6
   177b0:	orrs	r0, r0, lr
   177b4:	bne	1772c <flatcc_json_printer_uint64_enum_field@@Base+0x60>
   177b8:	ldrb	r0, [r4, #28]
   177bc:	mov	r8, r6
   177c0:	mov	r7, ip
   177c4:	cmp	r0, #0
   177c8:	bne	17784 <flatcc_json_printer_uint64_enum_field@@Base+0xb8>
   177cc:	b	1772c <flatcc_json_printer_uint64_enum_field@@Base+0x60>

000177d0 <flatcc_json_printer_int8_enum_field@@Base>:
   177d0:	push	{r4, r5, r6, r7, fp, lr}
   177d4:	add	fp, sp, #16
   177d8:	mov	r6, r0
   177dc:	mov	r0, #4
   177e0:	ldr	r4, [r1, #8]
   177e4:	ldr	ip, [fp, #16]
   177e8:	add	r5, r0, r2, lsl #1
   177ec:	ldr	r0, [fp, #12]
   177f0:	ldr	r2, [fp, #8]
   177f4:	cmp	r5, r4
   177f8:	bge	17818 <flatcc_json_printer_int8_enum_field@@Base+0x48>
   177fc:	ldr	r4, [r1, #4]
   17800:	add	r5, r4, r5
   17804:	ldrh	r5, [r5]
   17808:	cmp	r5, #0
   1780c:	ldrne	r4, [r1]
   17810:	addsne	r5, r4, r5
   17814:	bne	17958 <flatcc_json_printer_int8_enum_field@@Base+0x188>
   17818:	ldrb	r5, [r6, #29]
   1781c:	cmp	r5, #0
   17820:	mov	r5, r0
   17824:	popeq	{r4, r5, r6, r7, fp, pc}
   17828:	ldr	r0, [r1, #16]
   1782c:	mov	r7, ip
   17830:	add	r4, r0, #1
   17834:	cmp	r0, #0
   17838:	str	r4, [r1, #16]
   1783c:	ldrne	r0, [r6, #20]
   17840:	addne	r1, r0, #1
   17844:	strne	r1, [r6, #20]
   17848:	movne	r1, #44	; 0x2c
   1784c:	strbne	r1, [r0]
   17850:	mov	r0, r6
   17854:	mov	r1, r3
   17858:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   1785c:	ldrb	r0, [r6, #27]
   17860:	cmp	r0, #0
   17864:	beq	178d8 <flatcc_json_printer_int8_enum_field@@Base+0x108>
   17868:	ubfx	r0, r5, #7, #1
   1786c:	ldr	r1, [r6, #20]
   17870:	sxtb	r2, r5
   17874:	cmn	r2, #1
   17878:	movle	r2, #45	; 0x2d
   1787c:	rsble	r5, r5, #0
   17880:	strble	r2, [r1], #1
   17884:	uxtb	r2, r5
   17888:	cmp	r2, #100	; 0x64
   1788c:	bcc	178ec <flatcc_json_printer_int8_enum_field@@Base+0x11c>
   17890:	mov	r3, #0
   17894:	strb	r3, [r1, #3]
   17898:	movw	r3, #34079	; 0x851f
   1789c:	movt	r3, #20971	; 0x51eb
   178a0:	umull	r3, r5, r2, r3
   178a4:	mov	r3, #48	; 0x30
   178a8:	orr	r3, r3, r5, lsr #5
   178ac:	strb	r3, [r1]
   178b0:	lsr	r3, r5, #5
   178b4:	mov	r5, #100	; 0x64
   178b8:	mls	r2, r3, r5, r2
   178bc:	ldr	r3, [pc, #184]	; 1797c <flatcc_json_printer_int8_enum_field@@Base+0x1ac>
   178c0:	add	r3, pc, r3
   178c4:	add	r2, r3, r2, lsl #1
   178c8:	ldrh	r2, [r2]
   178cc:	strh	r2, [r1, #1]
   178d0:	mov	r1, #3
   178d4:	b	17944 <flatcc_json_printer_int8_enum_field@@Base+0x174>
   178d8:	sxtb	r1, r5
   178dc:	mov	r0, r6
   178e0:	mov	r2, r7
   178e4:	pop	{r4, r5, r6, r7, fp, lr}
   178e8:	bx	r2
   178ec:	cmp	r2, #10
   178f0:	bcc	17930 <flatcc_json_printer_int8_enum_field@@Base+0x160>
   178f4:	mov	r3, #0
   178f8:	strb	r3, [r1, #2]
   178fc:	movw	r3, #34079	; 0x851f
   17900:	movt	r3, #20971	; 0x51eb
   17904:	umull	r3, r5, r2, r3
   17908:	lsr	r3, r5, #5
   1790c:	mov	r5, #100	; 0x64
   17910:	mls	r2, r3, r5, r2
   17914:	ldr	r3, [pc, #100]	; 17980 <flatcc_json_printer_int8_enum_field@@Base+0x1b0>
   17918:	add	r3, pc, r3
   1791c:	add	r2, r3, r2, lsl #1
   17920:	ldrh	r2, [r2]
   17924:	strh	r2, [r1]
   17928:	mov	r1, #2
   1792c:	b	17944 <flatcc_json_printer_int8_enum_field@@Base+0x174>
   17930:	mov	r2, #0
   17934:	strb	r2, [r1, #1]
   17938:	add	r2, r5, #48	; 0x30
   1793c:	strb	r2, [r1]
   17940:	mov	r1, #1
   17944:	add	r0, r1, r0
   17948:	ldr	r1, [r6, #20]
   1794c:	add	r0, r1, r0
   17950:	str	r0, [r6, #20]
   17954:	pop	{r4, r5, r6, r7, fp, pc}
   17958:	ldrb	r5, [r5]
   1795c:	uxtb	r4, r0
   17960:	cmp	r5, r4
   17964:	bne	17828 <flatcc_json_printer_int8_enum_field@@Base+0x58>
   17968:	ldrb	r5, [r6, #28]
   1796c:	cmp	r5, #0
   17970:	mov	r5, r0
   17974:	bne	17954 <flatcc_json_printer_int8_enum_field@@Base+0x184>
   17978:	b	17828 <flatcc_json_printer_int8_enum_field@@Base+0x58>
   1797c:	andeq	sl, r0, r8, lsl #5
   17980:	andeq	sl, r0, r0, lsr r2

00017984 <flatcc_json_printer_int16_enum_field@@Base>:
   17984:	push	{r4, r5, r6, r7, fp, lr}
   17988:	add	fp, sp, #16
   1798c:	mov	r4, r0
   17990:	mov	r0, #4
   17994:	ldr	r5, [r1, #8]
   17998:	ldr	ip, [fp, #16]
   1799c:	add	r6, r0, r2, lsl #1
   179a0:	ldr	r0, [fp, #12]
   179a4:	ldr	r2, [fp, #8]
   179a8:	cmp	r6, r5
   179ac:	bge	179cc <flatcc_json_printer_int16_enum_field@@Base+0x48>
   179b0:	ldr	r5, [r1, #4]
   179b4:	add	r6, r5, r6
   179b8:	ldrh	r6, [r6]
   179bc:	cmp	r6, #0
   179c0:	ldrne	r5, [r1]
   179c4:	addsne	r6, r5, r6
   179c8:	bne	17a68 <flatcc_json_printer_int16_enum_field@@Base+0xe4>
   179cc:	ldrb	r6, [r4, #29]
   179d0:	mov	r5, r0
   179d4:	cmp	r6, #0
   179d8:	popeq	{r4, r5, r6, r7, fp, pc}
   179dc:	ldr	r0, [r1, #16]
   179e0:	mov	r7, ip
   179e4:	add	r6, r0, #1
   179e8:	cmp	r0, #0
   179ec:	str	r6, [r1, #16]
   179f0:	ldrne	r0, [r4, #20]
   179f4:	addne	r1, r0, #1
   179f8:	strne	r1, [r4, #20]
   179fc:	movne	r1, #44	; 0x2c
   17a00:	strbne	r1, [r0]
   17a04:	mov	r0, r4
   17a08:	mov	r1, r3
   17a0c:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   17a10:	ldrb	r0, [r4, #27]
   17a14:	cmp	r0, #0
   17a18:	beq	17a54 <flatcc_json_printer_int16_enum_field@@Base+0xd0>
   17a1c:	ubfx	r6, r5, #15, #1
   17a20:	ldr	r1, [r4, #20]
   17a24:	sxth	r0, r5
   17a28:	cmn	r0, #1
   17a2c:	movle	r0, #45	; 0x2d
   17a30:	rsble	r5, r5, #0
   17a34:	strble	r0, [r1], #1
   17a38:	uxth	r0, r5
   17a3c:	bl	15614 <flatcc_json_printer_uint16@@Base+0x2c>
   17a40:	ldr	r1, [r4, #20]
   17a44:	add	r0, r0, r6
   17a48:	add	r0, r1, r0
   17a4c:	str	r0, [r4, #20]
   17a50:	pop	{r4, r5, r6, r7, fp, pc}
   17a54:	sxth	r1, r5
   17a58:	mov	r0, r4
   17a5c:	mov	r2, r7
   17a60:	pop	{r4, r5, r6, r7, fp, lr}
   17a64:	bx	r2
   17a68:	ldrh	r5, [r6]
   17a6c:	uxth	r6, r0
   17a70:	cmp	r5, r6
   17a74:	bne	179dc <flatcc_json_printer_int16_enum_field@@Base+0x58>
   17a78:	ldrb	r6, [r4, #28]
   17a7c:	mov	r5, r0
   17a80:	cmp	r6, #0
   17a84:	bne	17a50 <flatcc_json_printer_int16_enum_field@@Base+0xcc>
   17a88:	b	179dc <flatcc_json_printer_int16_enum_field@@Base+0x58>

00017a8c <flatcc_json_printer_int32_enum_field@@Base>:
   17a8c:	push	{r4, r5, r6, r7, fp, lr}
   17a90:	add	fp, sp, #16
   17a94:	mov	r4, r0
   17a98:	mov	r0, #4
   17a9c:	ldr	r5, [r1, #8]
   17aa0:	ldr	ip, [fp, #16]
   17aa4:	add	r6, r0, r2, lsl #1
   17aa8:	ldr	r0, [fp, #12]
   17aac:	ldr	r2, [fp, #8]
   17ab0:	cmp	r6, r5
   17ab4:	bge	17ad4 <flatcc_json_printer_int32_enum_field@@Base+0x48>
   17ab8:	ldr	r5, [r1, #4]
   17abc:	add	r6, r5, r6
   17ac0:	ldrh	r6, [r6]
   17ac4:	cmp	r6, #0
   17ac8:	ldrne	r5, [r1]
   17acc:	addsne	r6, r5, r6
   17ad0:	bne	17b6c <flatcc_json_printer_int32_enum_field@@Base+0xe0>
   17ad4:	ldrb	r6, [r4, #29]
   17ad8:	mov	r5, r0
   17adc:	cmp	r6, #0
   17ae0:	popeq	{r4, r5, r6, r7, fp, pc}
   17ae4:	ldr	r0, [r1, #16]
   17ae8:	mov	r7, ip
   17aec:	add	r6, r0, #1
   17af0:	cmp	r0, #0
   17af4:	str	r6, [r1, #16]
   17af8:	ldrne	r0, [r4, #20]
   17afc:	addne	r1, r0, #1
   17b00:	strne	r1, [r4, #20]
   17b04:	movne	r1, #44	; 0x2c
   17b08:	strbne	r1, [r0]
   17b0c:	mov	r0, r4
   17b10:	mov	r1, r3
   17b14:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   17b18:	ldrb	r0, [r4, #27]
   17b1c:	cmp	r0, #0
   17b20:	beq	17b58 <flatcc_json_printer_int32_enum_field@@Base+0xcc>
   17b24:	ldr	r1, [r4, #20]
   17b28:	cmn	r5, #1
   17b2c:	lsr	r6, r5, #31
   17b30:	movle	r0, #45	; 0x2d
   17b34:	rsble	r5, r5, #0
   17b38:	strble	r0, [r1], #1
   17b3c:	mov	r0, r5
   17b40:	bl	157b0 <flatcc_json_printer_uint32@@Base+0x2c>
   17b44:	ldr	r1, [r4, #20]
   17b48:	add	r0, r0, r6
   17b4c:	add	r0, r1, r0
   17b50:	str	r0, [r4, #20]
   17b54:	pop	{r4, r5, r6, r7, fp, pc}
   17b58:	mov	r0, r4
   17b5c:	mov	r1, r5
   17b60:	mov	r2, r7
   17b64:	pop	{r4, r5, r6, r7, fp, lr}
   17b68:	bx	r2
   17b6c:	ldr	r5, [r6]
   17b70:	cmp	r5, r0
   17b74:	bne	17ae4 <flatcc_json_printer_int32_enum_field@@Base+0x58>
   17b78:	ldrb	r6, [r4, #28]
   17b7c:	mov	r5, r0
   17b80:	cmp	r6, #0
   17b84:	bne	17b54 <flatcc_json_printer_int32_enum_field@@Base+0xc8>
   17b88:	b	17ae4 <flatcc_json_printer_int32_enum_field@@Base+0x58>

00017b8c <flatcc_json_printer_int64_enum_field@@Base>:
   17b8c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17b90:	add	fp, sp, #24
   17b94:	mov	r4, r0
   17b98:	mov	r0, #4
   17b9c:	ldr	r5, [r1, #8]
   17ba0:	ldr	r6, [fp, #16]
   17ba4:	ldr	r9, [fp, #24]
   17ba8:	add	r7, r0, r2, lsl #1
   17bac:	ldr	r0, [fp, #20]
   17bb0:	ldr	r2, [fp, #8]
   17bb4:	cmp	r7, r5
   17bb8:	bge	17bd8 <flatcc_json_printer_int64_enum_field@@Base+0x4c>
   17bbc:	ldr	r5, [r1, #4]
   17bc0:	add	r7, r5, r7
   17bc4:	ldrh	r7, [r7]
   17bc8:	cmp	r7, #0
   17bcc:	ldrne	r5, [r1]
   17bd0:	addsne	r7, r5, r7
   17bd4:	bne	17c80 <flatcc_json_printer_int64_enum_field@@Base+0xf4>
   17bd8:	ldrb	r7, [r4, #29]
   17bdc:	mov	r8, r6
   17be0:	cmp	r7, #0
   17be4:	mov	r7, r0
   17be8:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   17bec:	ldr	r0, [r1, #16]
   17bf0:	add	r6, r0, #1
   17bf4:	cmp	r0, #0
   17bf8:	str	r6, [r1, #16]
   17bfc:	ldrne	r0, [r4, #20]
   17c00:	addne	r1, r0, #1
   17c04:	strne	r1, [r4, #20]
   17c08:	movne	r1, #44	; 0x2c
   17c0c:	strbne	r1, [r0]
   17c10:	mov	r0, r4
   17c14:	mov	r1, r3
   17c18:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   17c1c:	ldrb	r0, [r4, #27]
   17c20:	cmp	r0, #0
   17c24:	beq	17c68 <flatcc_json_printer_int64_enum_field@@Base+0xdc>
   17c28:	ldr	r2, [r4, #20]
   17c2c:	lsr	r5, r7, #31
   17c30:	cmn	r7, #1
   17c34:	bgt	17c48 <flatcc_json_printer_int64_enum_field@@Base+0xbc>
   17c38:	mov	r0, #45	; 0x2d
   17c3c:	rsbs	r8, r8, #0
   17c40:	strb	r0, [r2], #1
   17c44:	rsc	r7, r7, #0
   17c48:	mov	r0, r8
   17c4c:	mov	r1, r7
   17c50:	bl	15b18 <flatcc_json_printer_uint64@@Base+0x30>
   17c54:	ldr	r1, [r4, #20]
   17c58:	add	r0, r0, r5
   17c5c:	add	r0, r1, r0
   17c60:	str	r0, [r4, #20]
   17c64:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17c68:	mov	r0, r4
   17c6c:	mov	r2, r8
   17c70:	mov	r3, r7
   17c74:	mov	r1, r9
   17c78:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   17c7c:	bx	r1
   17c80:	ldr	r8, [r7]
   17c84:	ldr	r7, [r7, #4]
   17c88:	eor	ip, r7, r0
   17c8c:	eor	r5, r8, r6
   17c90:	orrs	r5, r5, ip
   17c94:	bne	17bec <flatcc_json_printer_int64_enum_field@@Base+0x60>
   17c98:	ldrb	r7, [r4, #28]
   17c9c:	mov	r8, r6
   17ca0:	cmp	r7, #0
   17ca4:	mov	r7, r0
   17ca8:	bne	17c64 <flatcc_json_printer_int64_enum_field@@Base+0xd8>
   17cac:	b	17bec <flatcc_json_printer_int64_enum_field@@Base+0x60>

00017cb0 <flatcc_json_printer_bool_enum_field@@Base>:
   17cb0:	push	{r4, r5, r6, r7, fp, lr}
   17cb4:	add	fp, sp, #16
   17cb8:	mov	r4, r0
   17cbc:	mov	r0, #4
   17cc0:	ldr	r7, [fp, #16]
   17cc4:	ldr	ip, [fp, #12]
   17cc8:	add	r5, r0, r2, lsl #1
   17ccc:	ldr	r0, [r1, #8]
   17cd0:	ldr	r2, [fp, #8]
   17cd4:	cmp	r5, r0
   17cd8:	bge	17cf8 <flatcc_json_printer_bool_enum_field@@Base+0x48>
   17cdc:	ldr	r0, [r1, #4]
   17ce0:	add	r0, r0, r5
   17ce4:	ldrh	r5, [r0]
   17ce8:	cmp	r5, #0
   17cec:	ldrne	r0, [r1]
   17cf0:	addsne	r5, r0, r5
   17cf4:	bne	17da8 <flatcc_json_printer_bool_enum_field@@Base+0xf8>
   17cf8:	ldrb	r0, [r4, #29]
   17cfc:	mov	r6, ip
   17d00:	cmp	r0, #0
   17d04:	popeq	{r4, r5, r6, r7, fp, pc}
   17d08:	ldr	r0, [r1, #16]
   17d0c:	add	r5, r0, #1
   17d10:	cmp	r0, #0
   17d14:	str	r5, [r1, #16]
   17d18:	ldrne	r0, [r4, #20]
   17d1c:	addne	r1, r0, #1
   17d20:	strne	r1, [r4, #20]
   17d24:	movne	r1, #44	; 0x2c
   17d28:	strbne	r1, [r0]
   17d2c:	mov	r0, r4
   17d30:	mov	r1, r3
   17d34:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   17d38:	ldrb	r0, [r4, #27]
   17d3c:	cmp	r0, #0
   17d40:	beq	17d6c <flatcc_json_printer_bool_enum_field@@Base+0xbc>
   17d44:	ldr	r0, [r4, #20]
   17d48:	cmp	r6, #0
   17d4c:	beq	17d80 <flatcc_json_printer_bool_enum_field@@Base+0xd0>
   17d50:	mov	r1, #0
   17d54:	strb	r1, [r0, #4]
   17d58:	movw	r1, #29300	; 0x7274
   17d5c:	movt	r1, #25973	; 0x6575
   17d60:	str	r1, [r0]
   17d64:	mov	r0, #4
   17d68:	b	17d98 <flatcc_json_printer_bool_enum_field@@Base+0xe8>
   17d6c:	mov	r0, r4
   17d70:	mov	r1, r6
   17d74:	mov	r2, r7
   17d78:	pop	{r4, r5, r6, r7, fp, lr}
   17d7c:	bx	r2
   17d80:	mov	r1, #101	; 0x65
   17d84:	strh	r1, [r0, #4]
   17d88:	movw	r1, #24934	; 0x6166
   17d8c:	movt	r1, #29548	; 0x736c
   17d90:	str	r1, [r0]
   17d94:	mov	r0, #5
   17d98:	ldr	r1, [r4, #20]
   17d9c:	add	r0, r1, r0
   17da0:	str	r0, [r4, #20]
   17da4:	pop	{r4, r5, r6, r7, fp, pc}
   17da8:	ldrb	r6, [r5]
   17dac:	cmp	r6, ip
   17db0:	bne	17d08 <flatcc_json_printer_bool_enum_field@@Base+0x58>
   17db4:	ldrb	r0, [r4, #28]
   17db8:	mov	r6, ip
   17dbc:	cmp	r0, #0
   17dc0:	bne	17da4 <flatcc_json_printer_bool_enum_field@@Base+0xf4>
   17dc4:	b	17d08 <flatcc_json_printer_bool_enum_field@@Base+0x58>

00017dc8 <flatcc_json_printer_uint8_struct_field@@Base>:
   17dc8:	push	{r4, r5, r6, sl, fp, lr}
   17dcc:	add	fp, sp, #16
   17dd0:	mov	r4, r1
   17dd4:	mov	r5, r0
   17dd8:	ldrb	r6, [r2, r3]
   17ddc:	ldr	r2, [fp, #12]
   17de0:	ldr	r1, [fp, #8]
   17de4:	cmp	r4, #0
   17de8:	ldrne	r0, [r5, #20]
   17dec:	addne	r3, r0, #1
   17df0:	strne	r3, [r5, #20]
   17df4:	movne	r3, #44	; 0x2c
   17df8:	strbne	r3, [r0]
   17dfc:	mov	r0, r5
   17e00:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   17e04:	ldr	r0, [r5, #20]
   17e08:	mov	r1, #0
   17e0c:	cmp	r6, #100	; 0x64
   17e10:	bcc	17e58 <flatcc_json_printer_uint8_struct_field@@Base+0x90>
   17e14:	strb	r1, [r0, #3]
   17e18:	movw	r1, #34079	; 0x851f
   17e1c:	movt	r1, #20971	; 0x51eb
   17e20:	umull	r1, r2, r6, r1
   17e24:	mov	r1, #48	; 0x30
   17e28:	orr	r1, r1, r2, lsr #5
   17e2c:	strb	r1, [r0]
   17e30:	lsr	r1, r2, #5
   17e34:	mov	r2, #100	; 0x64
   17e38:	mls	r1, r1, r2, r6
   17e3c:	ldr	r2, [pc, #116]	; 17eb8 <flatcc_json_printer_uint8_struct_field@@Base+0xf0>
   17e40:	add	r2, pc, r2
   17e44:	add	r1, r2, r1, lsl #1
   17e48:	ldrh	r1, [r1]
   17e4c:	strh	r1, [r0, #1]
   17e50:	mov	r0, #3
   17e54:	b	17ea8 <flatcc_json_printer_uint8_struct_field@@Base+0xe0>
   17e58:	cmp	r6, #10
   17e5c:	bcc	17e98 <flatcc_json_printer_uint8_struct_field@@Base+0xd0>
   17e60:	strb	r1, [r0, #2]
   17e64:	movw	r1, #34079	; 0x851f
   17e68:	movt	r1, #20971	; 0x51eb
   17e6c:	umull	r1, r2, r6, r1
   17e70:	lsr	r1, r2, #5
   17e74:	mov	r2, #100	; 0x64
   17e78:	mls	r1, r1, r2, r6
   17e7c:	ldr	r2, [pc, #56]	; 17ebc <flatcc_json_printer_uint8_struct_field@@Base+0xf4>
   17e80:	add	r2, pc, r2
   17e84:	add	r1, r2, r1, lsl #1
   17e88:	ldrh	r1, [r1]
   17e8c:	strh	r1, [r0]
   17e90:	mov	r0, #2
   17e94:	b	17ea8 <flatcc_json_printer_uint8_struct_field@@Base+0xe0>
   17e98:	strb	r1, [r0, #1]
   17e9c:	add	r1, r6, #48	; 0x30
   17ea0:	strb	r1, [r0]
   17ea4:	mov	r0, #1
   17ea8:	ldr	r1, [r5, #20]
   17eac:	add	r0, r1, r0
   17eb0:	str	r0, [r5, #20]
   17eb4:	pop	{r4, r5, r6, sl, fp, pc}
   17eb8:	andeq	r9, r0, r8, lsl #26
   17ebc:	andeq	r9, r0, r8, asr #25

00017ec0 <flatcc_json_printer_uint16_struct_field@@Base>:
   17ec0:	push	{r4, r5, r6, sl, fp, lr}
   17ec4:	add	fp, sp, #16
   17ec8:	mov	r5, r1
   17ecc:	mov	r4, r0
   17ed0:	add	r0, r2, r3
   17ed4:	ldr	r2, [fp, #12]
   17ed8:	ldr	r1, [fp, #8]
   17edc:	cmp	r5, #0
   17ee0:	ldrh	r6, [r0]
   17ee4:	ldrne	r0, [r4, #20]
   17ee8:	addne	r3, r0, #1
   17eec:	strne	r3, [r4, #20]
   17ef0:	movne	r3, #44	; 0x2c
   17ef4:	strbne	r3, [r0]
   17ef8:	mov	r0, r4
   17efc:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   17f00:	ldr	r1, [r4, #20]
   17f04:	mov	r0, r6
   17f08:	bl	15614 <flatcc_json_printer_uint16@@Base+0x2c>
   17f0c:	ldr	r1, [r4, #20]
   17f10:	add	r0, r1, r0
   17f14:	str	r0, [r4, #20]
   17f18:	pop	{r4, r5, r6, sl, fp, pc}

00017f1c <flatcc_json_printer_uint32_struct_field@@Base>:
   17f1c:	push	{r4, r5, r6, sl, fp, lr}
   17f20:	add	fp, sp, #16
   17f24:	mov	r5, r1
   17f28:	mov	r4, r0
   17f2c:	ldr	r6, [r2, r3]
   17f30:	ldr	r2, [fp, #12]
   17f34:	ldr	r1, [fp, #8]
   17f38:	cmp	r5, #0
   17f3c:	ldrne	r0, [r4, #20]
   17f40:	addne	r3, r0, #1
   17f44:	strne	r3, [r4, #20]
   17f48:	movne	r3, #44	; 0x2c
   17f4c:	strbne	r3, [r0]
   17f50:	mov	r0, r4
   17f54:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   17f58:	ldr	r1, [r4, #20]
   17f5c:	mov	r0, r6
   17f60:	bl	157b0 <flatcc_json_printer_uint32@@Base+0x2c>
   17f64:	ldr	r1, [r4, #20]
   17f68:	add	r0, r1, r0
   17f6c:	str	r0, [r4, #20]
   17f70:	pop	{r4, r5, r6, sl, fp, pc}

00017f74 <flatcc_json_printer_uint64_struct_field@@Base>:
   17f74:	push	{r4, r5, r6, r7, fp, lr}
   17f78:	add	fp, sp, #16
   17f7c:	mov	r5, r1
   17f80:	ldr	r7, [r2, r3]!
   17f84:	mov	r4, r0
   17f88:	ldr	r1, [fp, #8]
   17f8c:	cmp	r5, #0
   17f90:	ldrne	r0, [r4, #20]
   17f94:	ldr	r6, [r2, #4]
   17f98:	ldr	r2, [fp, #12]
   17f9c:	addne	r3, r0, #1
   17fa0:	strne	r3, [r4, #20]
   17fa4:	movne	r3, #44	; 0x2c
   17fa8:	strbne	r3, [r0]
   17fac:	mov	r0, r4
   17fb0:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   17fb4:	ldr	r2, [r4, #20]
   17fb8:	mov	r0, r7
   17fbc:	mov	r1, r6
   17fc0:	bl	15b18 <flatcc_json_printer_uint64@@Base+0x30>
   17fc4:	ldr	r1, [r4, #20]
   17fc8:	add	r0, r1, r0
   17fcc:	str	r0, [r4, #20]
   17fd0:	pop	{r4, r5, r6, r7, fp, pc}

00017fd4 <flatcc_json_printer_int8_struct_field@@Base>:
   17fd4:	push	{r4, r5, r6, sl, fp, lr}
   17fd8:	add	fp, sp, #16
   17fdc:	mov	r4, r1
   17fe0:	mov	r5, r0
   17fe4:	add	r0, r2, r3
   17fe8:	ldr	r2, [fp, #12]
   17fec:	ldr	r1, [fp, #8]
   17ff0:	cmp	r4, #0
   17ff4:	ldrsb	r6, [r0]
   17ff8:	ldrne	r0, [r5, #20]
   17ffc:	addne	r3, r0, #1
   18000:	strne	r3, [r5, #20]
   18004:	movne	r3, #44	; 0x2c
   18008:	strbne	r3, [r0]
   1800c:	mov	r0, r5
   18010:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   18014:	ubfx	r0, r6, #7, #1
   18018:	ldr	r1, [r5, #20]
   1801c:	cmn	r6, #1
   18020:	movle	r2, #45	; 0x2d
   18024:	rsble	r6, r6, #0
   18028:	strble	r2, [r1], #1
   1802c:	uxtb	r2, r6
   18030:	cmp	r2, #100	; 0x64
   18034:	bcc	18080 <flatcc_json_printer_int8_struct_field@@Base+0xac>
   18038:	mov	r3, #0
   1803c:	strb	r3, [r1, #3]
   18040:	movw	r3, #34079	; 0x851f
   18044:	movt	r3, #20971	; 0x51eb
   18048:	umull	r3, r6, r2, r3
   1804c:	mov	r3, #48	; 0x30
   18050:	orr	r3, r3, r6, lsr #5
   18054:	strb	r3, [r1]
   18058:	lsr	r3, r6, #5
   1805c:	mov	r6, #100	; 0x64
   18060:	mls	r2, r3, r6, r2
   18064:	ldr	r3, [pc, #128]	; 180ec <flatcc_json_printer_int8_struct_field@@Base+0x118>
   18068:	add	r3, pc, r3
   1806c:	add	r2, r3, r2, lsl #1
   18070:	ldrh	r2, [r2]
   18074:	strh	r2, [r1, #1]
   18078:	mov	r1, #3
   1807c:	b	180d8 <flatcc_json_printer_int8_struct_field@@Base+0x104>
   18080:	cmp	r2, #10
   18084:	bcc	180c4 <flatcc_json_printer_int8_struct_field@@Base+0xf0>
   18088:	mov	r3, #0
   1808c:	strb	r3, [r1, #2]
   18090:	movw	r3, #34079	; 0x851f
   18094:	movt	r3, #20971	; 0x51eb
   18098:	umull	r3, r6, r2, r3
   1809c:	lsr	r3, r6, #5
   180a0:	mov	r6, #100	; 0x64
   180a4:	mls	r2, r3, r6, r2
   180a8:	ldr	r3, [pc, #64]	; 180f0 <flatcc_json_printer_int8_struct_field@@Base+0x11c>
   180ac:	add	r3, pc, r3
   180b0:	add	r2, r3, r2, lsl #1
   180b4:	ldrh	r2, [r2]
   180b8:	strh	r2, [r1]
   180bc:	mov	r1, #2
   180c0:	b	180d8 <flatcc_json_printer_int8_struct_field@@Base+0x104>
   180c4:	mov	r2, #0
   180c8:	strb	r2, [r1, #1]
   180cc:	add	r2, r6, #48	; 0x30
   180d0:	strb	r2, [r1]
   180d4:	mov	r1, #1
   180d8:	add	r0, r1, r0
   180dc:	ldr	r1, [r5, #20]
   180e0:	add	r0, r1, r0
   180e4:	str	r0, [r5, #20]
   180e8:	pop	{r4, r5, r6, sl, fp, pc}
   180ec:	andeq	r9, r0, r0, ror #21
   180f0:	muleq	r0, ip, sl

000180f4 <flatcc_json_printer_int16_struct_field@@Base>:
   180f4:	push	{r4, r5, r6, sl, fp, lr}
   180f8:	add	fp, sp, #16
   180fc:	mov	ip, r1
   18100:	mov	r4, r0
   18104:	add	r0, r2, r3
   18108:	ldr	r2, [fp, #12]
   1810c:	ldr	r1, [fp, #8]
   18110:	cmp	ip, #0
   18114:	ldrsh	r5, [r0]
   18118:	ldrne	r0, [r4, #20]
   1811c:	addne	r3, r0, #1
   18120:	strne	r3, [r4, #20]
   18124:	movne	r3, #44	; 0x2c
   18128:	strbne	r3, [r0]
   1812c:	mov	r0, r4
   18130:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   18134:	ubfx	r6, r5, #15, #1
   18138:	ldr	r1, [r4, #20]
   1813c:	cmn	r5, #1
   18140:	movle	r0, #45	; 0x2d
   18144:	rsble	r5, r5, #0
   18148:	strble	r0, [r1], #1
   1814c:	uxth	r0, r5
   18150:	bl	15614 <flatcc_json_printer_uint16@@Base+0x2c>
   18154:	ldr	r1, [r4, #20]
   18158:	add	r0, r0, r6
   1815c:	add	r0, r1, r0
   18160:	str	r0, [r4, #20]
   18164:	pop	{r4, r5, r6, sl, fp, pc}

00018168 <flatcc_json_printer_int32_struct_field@@Base>:
   18168:	push	{r4, r5, r6, sl, fp, lr}
   1816c:	add	fp, sp, #16
   18170:	mov	ip, r1
   18174:	mov	r4, r0
   18178:	ldr	r5, [r2, r3]
   1817c:	ldr	r2, [fp, #12]
   18180:	ldr	r1, [fp, #8]
   18184:	cmp	ip, #0
   18188:	ldrne	r0, [r4, #20]
   1818c:	addne	r3, r0, #1
   18190:	strne	r3, [r4, #20]
   18194:	movne	r3, #44	; 0x2c
   18198:	strbne	r3, [r0]
   1819c:	mov	r0, r4
   181a0:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   181a4:	ldr	r1, [r4, #20]
   181a8:	cmn	r5, #1
   181ac:	lsr	r6, r5, #31
   181b0:	movle	r0, #45	; 0x2d
   181b4:	rsble	r5, r5, #0
   181b8:	strble	r0, [r1], #1
   181bc:	mov	r0, r5
   181c0:	bl	157b0 <flatcc_json_printer_uint32@@Base+0x2c>
   181c4:	ldr	r1, [r4, #20]
   181c8:	add	r0, r0, r6
   181cc:	add	r0, r1, r0
   181d0:	str	r0, [r4, #20]
   181d4:	pop	{r4, r5, r6, sl, fp, pc}

000181d8 <flatcc_json_printer_int64_struct_field@@Base>:
   181d8:	push	{r4, r5, r6, r7, fp, lr}
   181dc:	add	fp, sp, #16
   181e0:	mov	r5, r1
   181e4:	ldr	r7, [r2, r3]!
   181e8:	mov	r4, r0
   181ec:	ldr	r1, [fp, #8]
   181f0:	cmp	r5, #0
   181f4:	ldrne	r0, [r4, #20]
   181f8:	ldr	r6, [r2, #4]
   181fc:	ldr	r2, [fp, #12]
   18200:	addne	r3, r0, #1
   18204:	strne	r3, [r4, #20]
   18208:	movne	r3, #44	; 0x2c
   1820c:	strbne	r3, [r0]
   18210:	mov	r0, r4
   18214:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   18218:	ldr	r2, [r4, #20]
   1821c:	lsr	r5, r6, #31
   18220:	cmn	r6, #1
   18224:	bgt	18238 <flatcc_json_printer_int64_struct_field@@Base+0x60>
   18228:	mov	r0, #45	; 0x2d
   1822c:	rsbs	r7, r7, #0
   18230:	strb	r0, [r2], #1
   18234:	rsc	r6, r6, #0
   18238:	mov	r0, r7
   1823c:	mov	r1, r6
   18240:	bl	15b18 <flatcc_json_printer_uint64@@Base+0x30>
   18244:	ldr	r1, [r4, #20]
   18248:	add	r0, r0, r5
   1824c:	add	r0, r1, r0
   18250:	str	r0, [r4, #20]
   18254:	pop	{r4, r5, r6, r7, fp, pc}

00018258 <flatcc_json_printer_bool_struct_field@@Base>:
   18258:	push	{r4, r5, fp, lr}
   1825c:	add	fp, sp, #8
   18260:	mov	ip, r1
   18264:	mov	r4, r0
   18268:	ldrb	r5, [r2, r3]
   1826c:	ldr	r2, [fp, #12]
   18270:	ldr	r1, [fp, #8]
   18274:	cmp	ip, #0
   18278:	ldrne	r0, [r4, #20]
   1827c:	addne	r3, r0, #1
   18280:	strne	r3, [r4, #20]
   18284:	movne	r3, #44	; 0x2c
   18288:	strbne	r3, [r0]
   1828c:	mov	r0, r4
   18290:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   18294:	ldr	r0, [r4, #20]
   18298:	cmp	r5, #0
   1829c:	beq	182bc <flatcc_json_printer_bool_struct_field@@Base+0x64>
   182a0:	mov	r1, #0
   182a4:	strb	r1, [r0, #4]
   182a8:	movw	r1, #29300	; 0x7274
   182ac:	movt	r1, #25973	; 0x6575
   182b0:	str	r1, [r0]
   182b4:	mov	r0, #4
   182b8:	b	182d4 <flatcc_json_printer_bool_struct_field@@Base+0x7c>
   182bc:	mov	r1, #101	; 0x65
   182c0:	strh	r1, [r0, #4]
   182c4:	movw	r1, #24934	; 0x6166
   182c8:	movt	r1, #29548	; 0x736c
   182cc:	str	r1, [r0]
   182d0:	mov	r0, #5
   182d4:	ldr	r1, [r4, #20]
   182d8:	add	r0, r1, r0
   182dc:	str	r0, [r4, #20]
   182e0:	pop	{r4, r5, fp, pc}

000182e4 <flatcc_json_printer_float_struct_field@@Base>:
   182e4:	push	{r4, sl, fp, lr}
   182e8:	add	fp, sp, #8
   182ec:	vpush	{d8}
   182f0:	mov	ip, r1
   182f4:	mov	r4, r0
   182f8:	add	r0, r2, r3
   182fc:	ldr	r2, [fp, #12]
   18300:	ldr	r1, [fp, #8]
   18304:	cmp	ip, #0
   18308:	vldr	s16, [r0]
   1830c:	ldrne	r0, [r4, #20]
   18310:	addne	r3, r0, #1
   18314:	strne	r3, [r4, #20]
   18318:	movne	r3, #44	; 0x2c
   1831c:	strbne	r3, [r0]
   18320:	mov	r0, r4
   18324:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   18328:	ldr	r0, [r4, #20]
   1832c:	vcvt.f64.f32	d0, s16
   18330:	bl	141a8 <flatcc_json_printer_fmt_float@@Base+0x8>
   18334:	ldr	r1, [r4, #20]
   18338:	add	r0, r1, r0
   1833c:	str	r0, [r4, #20]
   18340:	vpop	{d8}
   18344:	pop	{r4, sl, fp, pc}

00018348 <flatcc_json_printer_double_struct_field@@Base>:
   18348:	push	{r4, sl, fp, lr}
   1834c:	add	fp, sp, #8
   18350:	vpush	{d8}
   18354:	mov	ip, r1
   18358:	mov	r4, r0
   1835c:	add	r0, r2, r3
   18360:	ldr	r2, [fp, #12]
   18364:	ldr	r1, [fp, #8]
   18368:	cmp	ip, #0
   1836c:	vldr	d8, [r0]
   18370:	ldrne	r0, [r4, #20]
   18374:	addne	r3, r0, #1
   18378:	strne	r3, [r4, #20]
   1837c:	movne	r3, #44	; 0x2c
   18380:	strbne	r3, [r0]
   18384:	mov	r0, r4
   18388:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   1838c:	ldr	r0, [r4, #20]
   18390:	vorr	d0, d8, d8
   18394:	bl	141a8 <flatcc_json_printer_fmt_float@@Base+0x8>
   18398:	ldr	r1, [r4, #20]
   1839c:	add	r0, r1, r0
   183a0:	str	r0, [r4, #20]
   183a4:	vpop	{d8}
   183a8:	pop	{r4, sl, fp, pc}

000183ac <flatcc_json_printer_uint8_enum_struct_field@@Base>:
   183ac:	push	{r4, r5, r6, r7, fp, lr}
   183b0:	add	fp, sp, #16
   183b4:	mov	r5, r1
   183b8:	mov	r4, r0
   183bc:	add	r7, fp, #8
   183c0:	ldrb	r6, [r2, r3]
   183c4:	cmp	r5, #0
   183c8:	ldm	r7, {r1, r2, r7}
   183cc:	ldrne	r0, [r4, #20]
   183d0:	addne	r3, r0, #1
   183d4:	strne	r3, [r4, #20]
   183d8:	movne	r3, #44	; 0x2c
   183dc:	strbne	r3, [r0]
   183e0:	mov	r0, r4
   183e4:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   183e8:	ldrb	r0, [r4, #27]
   183ec:	cmp	r0, #0
   183f0:	beq	18448 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x9c>
   183f4:	ldr	r0, [r4, #20]
   183f8:	mov	r1, #0
   183fc:	cmp	r6, #100	; 0x64
   18400:	bcc	1845c <flatcc_json_printer_uint8_enum_struct_field@@Base+0xb0>
   18404:	strb	r1, [r0, #3]
   18408:	movw	r1, #34079	; 0x851f
   1840c:	movt	r1, #20971	; 0x51eb
   18410:	umull	r1, r2, r6, r1
   18414:	mov	r1, #48	; 0x30
   18418:	orr	r1, r1, r2, lsr #5
   1841c:	strb	r1, [r0]
   18420:	lsr	r1, r2, #5
   18424:	mov	r2, #100	; 0x64
   18428:	mls	r1, r1, r2, r6
   1842c:	ldr	r2, [pc, #136]	; 184bc <flatcc_json_printer_uint8_enum_struct_field@@Base+0x110>
   18430:	add	r2, pc, r2
   18434:	add	r1, r2, r1, lsl #1
   18438:	ldrh	r1, [r1]
   1843c:	strh	r1, [r0, #1]
   18440:	mov	r0, #3
   18444:	b	184ac <flatcc_json_printer_uint8_enum_struct_field@@Base+0x100>
   18448:	mov	r0, r4
   1844c:	mov	r1, r6
   18450:	mov	r2, r7
   18454:	pop	{r4, r5, r6, r7, fp, lr}
   18458:	bx	r2
   1845c:	cmp	r6, #10
   18460:	bcc	1849c <flatcc_json_printer_uint8_enum_struct_field@@Base+0xf0>
   18464:	strb	r1, [r0, #2]
   18468:	movw	r1, #34079	; 0x851f
   1846c:	movt	r1, #20971	; 0x51eb
   18470:	umull	r1, r2, r6, r1
   18474:	lsr	r1, r2, #5
   18478:	mov	r2, #100	; 0x64
   1847c:	mls	r1, r1, r2, r6
   18480:	ldr	r2, [pc, #56]	; 184c0 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x114>
   18484:	add	r2, pc, r2
   18488:	add	r1, r2, r1, lsl #1
   1848c:	ldrh	r1, [r1]
   18490:	strh	r1, [r0]
   18494:	mov	r0, #2
   18498:	b	184ac <flatcc_json_printer_uint8_enum_struct_field@@Base+0x100>
   1849c:	strb	r1, [r0, #1]
   184a0:	add	r1, r6, #48	; 0x30
   184a4:	strb	r1, [r0]
   184a8:	mov	r0, #1
   184ac:	ldr	r1, [r4, #20]
   184b0:	add	r0, r1, r0
   184b4:	str	r0, [r4, #20]
   184b8:	pop	{r4, r5, r6, r7, fp, pc}
   184bc:	andeq	r9, r0, r8, lsl r7
   184c0:	andeq	r9, r0, r4, asr #13

000184c4 <flatcc_json_printer_uint16_enum_struct_field@@Base>:
   184c4:	push	{r4, r5, r6, r7, fp, lr}
   184c8:	add	fp, sp, #16
   184cc:	mov	r5, r1
   184d0:	mov	r4, r0
   184d4:	add	r0, r2, r3
   184d8:	add	r7, fp, #8
   184dc:	cmp	r5, #0
   184e0:	ldrh	r6, [r0]
   184e4:	ldm	r7, {r1, r2, r7}
   184e8:	ldrne	r0, [r4, #20]
   184ec:	addne	r3, r0, #1
   184f0:	strne	r3, [r4, #20]
   184f4:	movne	r3, #44	; 0x2c
   184f8:	strbne	r3, [r0]
   184fc:	mov	r0, r4
   18500:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   18504:	ldrb	r0, [r4, #27]
   18508:	cmp	r0, #0
   1850c:	beq	1852c <flatcc_json_printer_uint16_enum_struct_field@@Base+0x68>
   18510:	ldr	r1, [r4, #20]
   18514:	mov	r0, r6
   18518:	bl	15614 <flatcc_json_printer_uint16@@Base+0x2c>
   1851c:	ldr	r1, [r4, #20]
   18520:	add	r0, r1, r0
   18524:	str	r0, [r4, #20]
   18528:	pop	{r4, r5, r6, r7, fp, pc}
   1852c:	mov	r0, r4
   18530:	mov	r1, r6
   18534:	mov	r2, r7
   18538:	pop	{r4, r5, r6, r7, fp, lr}
   1853c:	bx	r2

00018540 <flatcc_json_printer_uint32_enum_struct_field@@Base>:
   18540:	push	{r4, r5, r6, r7, fp, lr}
   18544:	add	fp, sp, #16
   18548:	mov	r5, r1
   1854c:	mov	r4, r0
   18550:	add	r7, fp, #8
   18554:	ldr	r6, [r2, r3]
   18558:	cmp	r5, #0
   1855c:	ldm	r7, {r1, r2, r7}
   18560:	ldrne	r0, [r4, #20]
   18564:	addne	r3, r0, #1
   18568:	strne	r3, [r4, #20]
   1856c:	movne	r3, #44	; 0x2c
   18570:	strbne	r3, [r0]
   18574:	mov	r0, r4
   18578:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   1857c:	ldrb	r0, [r4, #27]
   18580:	cmp	r0, #0
   18584:	beq	185a4 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x64>
   18588:	ldr	r1, [r4, #20]
   1858c:	mov	r0, r6
   18590:	bl	157b0 <flatcc_json_printer_uint32@@Base+0x2c>
   18594:	ldr	r1, [r4, #20]
   18598:	add	r0, r1, r0
   1859c:	str	r0, [r4, #20]
   185a0:	pop	{r4, r5, r6, r7, fp, pc}
   185a4:	mov	r0, r4
   185a8:	mov	r1, r6
   185ac:	mov	r2, r7
   185b0:	pop	{r4, r5, r6, r7, fp, lr}
   185b4:	bx	r2

000185b8 <flatcc_json_printer_uint64_enum_struct_field@@Base>:
   185b8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   185bc:	add	fp, sp, #24
   185c0:	ldr	r6, [r2, r3]!
   185c4:	mov	r5, r1
   185c8:	mov	r4, r0
   185cc:	add	r8, fp, #8
   185d0:	cmp	r5, #0
   185d4:	ldr	r7, [r2, #4]
   185d8:	ldm	r8, {r1, r2, r8}
   185dc:	ldrne	r0, [r4, #20]
   185e0:	addne	r3, r0, #1
   185e4:	strne	r3, [r4, #20]
   185e8:	movne	r3, #44	; 0x2c
   185ec:	strbne	r3, [r0]
   185f0:	mov	r0, r4
   185f4:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   185f8:	ldrb	r0, [r4, #27]
   185fc:	cmp	r0, #0
   18600:	beq	18624 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x6c>
   18604:	ldr	r2, [r4, #20]
   18608:	mov	r0, r6
   1860c:	mov	r1, r7
   18610:	bl	15b18 <flatcc_json_printer_uint64@@Base+0x30>
   18614:	ldr	r1, [r4, #20]
   18618:	add	r0, r1, r0
   1861c:	str	r0, [r4, #20]
   18620:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18624:	mov	r0, r4
   18628:	mov	r2, r6
   1862c:	mov	r3, r7
   18630:	mov	r1, r8
   18634:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   18638:	bx	r1

0001863c <flatcc_json_printer_int8_enum_struct_field@@Base>:
   1863c:	push	{r4, r5, r6, r7, fp, lr}
   18640:	add	fp, sp, #16
   18644:	mov	r5, r1
   18648:	mov	r4, r0
   1864c:	add	r0, r2, r3
   18650:	add	r7, fp, #8
   18654:	cmp	r5, #0
   18658:	ldrsb	r6, [r0]
   1865c:	ldm	r7, {r1, r2, r7}
   18660:	ldrne	r0, [r4, #20]
   18664:	addne	r3, r0, #1
   18668:	strne	r3, [r4, #20]
   1866c:	movne	r3, #44	; 0x2c
   18670:	strbne	r3, [r0]
   18674:	mov	r0, r4
   18678:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   1867c:	ldrb	r0, [r4, #27]
   18680:	cmp	r0, #0
   18684:	beq	186f4 <flatcc_json_printer_int8_enum_struct_field@@Base+0xb8>
   18688:	ubfx	r0, r6, #7, #1
   1868c:	ldr	r1, [r4, #20]
   18690:	cmn	r6, #1
   18694:	movle	r2, #45	; 0x2d
   18698:	rsble	r6, r6, #0
   1869c:	strble	r2, [r1], #1
   186a0:	uxtb	r2, r6
   186a4:	cmp	r2, #100	; 0x64
   186a8:	bcc	18708 <flatcc_json_printer_int8_enum_struct_field@@Base+0xcc>
   186ac:	mov	r3, #0
   186b0:	strb	r3, [r1, #3]
   186b4:	movw	r3, #34079	; 0x851f
   186b8:	movt	r3, #20971	; 0x51eb
   186bc:	umull	r3, r6, r2, r3
   186c0:	mov	r3, #48	; 0x30
   186c4:	orr	r3, r3, r6, lsr #5
   186c8:	strb	r3, [r1]
   186cc:	lsr	r3, r6, #5
   186d0:	mov	r6, #100	; 0x64
   186d4:	mls	r2, r3, r6, r2
   186d8:	ldr	r3, [pc, #148]	; 18774 <flatcc_json_printer_int8_enum_struct_field@@Base+0x138>
   186dc:	add	r3, pc, r3
   186e0:	add	r2, r3, r2, lsl #1
   186e4:	ldrh	r2, [r2]
   186e8:	strh	r2, [r1, #1]
   186ec:	mov	r1, #3
   186f0:	b	18760 <flatcc_json_printer_int8_enum_struct_field@@Base+0x124>
   186f4:	mov	r0, r4
   186f8:	mov	r1, r6
   186fc:	mov	r2, r7
   18700:	pop	{r4, r5, r6, r7, fp, lr}
   18704:	bx	r2
   18708:	cmp	r2, #10
   1870c:	bcc	1874c <flatcc_json_printer_int8_enum_struct_field@@Base+0x110>
   18710:	mov	r3, #0
   18714:	strb	r3, [r1, #2]
   18718:	movw	r3, #34079	; 0x851f
   1871c:	movt	r3, #20971	; 0x51eb
   18720:	umull	r3, r6, r2, r3
   18724:	lsr	r3, r6, #5
   18728:	mov	r6, #100	; 0x64
   1872c:	mls	r2, r3, r6, r2
   18730:	ldr	r3, [pc, #64]	; 18778 <flatcc_json_printer_int8_enum_struct_field@@Base+0x13c>
   18734:	add	r3, pc, r3
   18738:	add	r2, r3, r2, lsl #1
   1873c:	ldrh	r2, [r2]
   18740:	strh	r2, [r1]
   18744:	mov	r1, #2
   18748:	b	18760 <flatcc_json_printer_int8_enum_struct_field@@Base+0x124>
   1874c:	mov	r2, #0
   18750:	strb	r2, [r1, #1]
   18754:	add	r2, r6, #48	; 0x30
   18758:	strb	r2, [r1]
   1875c:	mov	r1, #1
   18760:	add	r0, r1, r0
   18764:	ldr	r1, [r4, #20]
   18768:	add	r0, r1, r0
   1876c:	str	r0, [r4, #20]
   18770:	pop	{r4, r5, r6, r7, fp, pc}
   18774:	andeq	r9, r0, ip, ror #8
   18778:	andeq	r9, r0, r4, lsl r4

0001877c <flatcc_json_printer_int16_enum_struct_field@@Base>:
   1877c:	push	{r4, r5, r6, r7, fp, lr}
   18780:	add	fp, sp, #16
   18784:	mov	r5, r1
   18788:	mov	r4, r0
   1878c:	add	r0, r2, r3
   18790:	add	r7, fp, #8
   18794:	cmp	r5, #0
   18798:	ldrsh	r6, [r0]
   1879c:	ldm	r7, {r1, r2, r7}
   187a0:	ldrne	r0, [r4, #20]
   187a4:	addne	r3, r0, #1
   187a8:	strne	r3, [r4, #20]
   187ac:	movne	r3, #44	; 0x2c
   187b0:	strbne	r3, [r0]
   187b4:	mov	r0, r4
   187b8:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   187bc:	ldrb	r0, [r4, #27]
   187c0:	cmp	r0, #0
   187c4:	beq	187fc <flatcc_json_printer_int16_enum_struct_field@@Base+0x80>
   187c8:	ubfx	r5, r6, #15, #1
   187cc:	ldr	r1, [r4, #20]
   187d0:	cmn	r6, #1
   187d4:	movle	r0, #45	; 0x2d
   187d8:	rsble	r6, r6, #0
   187dc:	strble	r0, [r1], #1
   187e0:	uxth	r0, r6
   187e4:	bl	15614 <flatcc_json_printer_uint16@@Base+0x2c>
   187e8:	ldr	r1, [r4, #20]
   187ec:	add	r0, r0, r5
   187f0:	add	r0, r1, r0
   187f4:	str	r0, [r4, #20]
   187f8:	pop	{r4, r5, r6, r7, fp, pc}
   187fc:	mov	r0, r4
   18800:	mov	r1, r6
   18804:	mov	r2, r7
   18808:	pop	{r4, r5, r6, r7, fp, lr}
   1880c:	bx	r2

00018810 <flatcc_json_printer_int32_enum_struct_field@@Base>:
   18810:	push	{r4, r5, r6, r7, fp, lr}
   18814:	add	fp, sp, #16
   18818:	mov	r5, r1
   1881c:	mov	r4, r0
   18820:	add	r7, fp, #8
   18824:	ldr	r6, [r2, r3]
   18828:	cmp	r5, #0
   1882c:	ldm	r7, {r1, r2, r7}
   18830:	ldrne	r0, [r4, #20]
   18834:	addne	r3, r0, #1
   18838:	strne	r3, [r4, #20]
   1883c:	movne	r3, #44	; 0x2c
   18840:	strbne	r3, [r0]
   18844:	mov	r0, r4
   18848:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   1884c:	ldrb	r0, [r4, #27]
   18850:	cmp	r0, #0
   18854:	beq	1888c <flatcc_json_printer_int32_enum_struct_field@@Base+0x7c>
   18858:	ldr	r1, [r4, #20]
   1885c:	cmn	r6, #1
   18860:	lsr	r5, r6, #31
   18864:	movle	r0, #45	; 0x2d
   18868:	rsble	r6, r6, #0
   1886c:	strble	r0, [r1], #1
   18870:	mov	r0, r6
   18874:	bl	157b0 <flatcc_json_printer_uint32@@Base+0x2c>
   18878:	ldr	r1, [r4, #20]
   1887c:	add	r0, r0, r5
   18880:	add	r0, r1, r0
   18884:	str	r0, [r4, #20]
   18888:	pop	{r4, r5, r6, r7, fp, pc}
   1888c:	mov	r0, r4
   18890:	mov	r1, r6
   18894:	mov	r2, r7
   18898:	pop	{r4, r5, r6, r7, fp, lr}
   1889c:	bx	r2

000188a0 <flatcc_json_printer_int64_enum_struct_field@@Base>:
   188a0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   188a4:	add	fp, sp, #24
   188a8:	ldr	r7, [r2, r3]!
   188ac:	mov	r6, r1
   188b0:	mov	r4, r0
   188b4:	add	r8, fp, #8
   188b8:	cmp	r6, #0
   188bc:	ldr	r5, [r2, #4]
   188c0:	ldm	r8, {r1, r2, r8}
   188c4:	ldrne	r0, [r4, #20]
   188c8:	addne	r3, r0, #1
   188cc:	strne	r3, [r4, #20]
   188d0:	movne	r3, #44	; 0x2c
   188d4:	strbne	r3, [r0]
   188d8:	mov	r0, r4
   188dc:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   188e0:	ldrb	r0, [r4, #27]
   188e4:	cmp	r0, #0
   188e8:	beq	1892c <flatcc_json_printer_int64_enum_struct_field@@Base+0x8c>
   188ec:	ldr	r2, [r4, #20]
   188f0:	lsr	r6, r5, #31
   188f4:	cmn	r5, #1
   188f8:	bgt	1890c <flatcc_json_printer_int64_enum_struct_field@@Base+0x6c>
   188fc:	mov	r0, #45	; 0x2d
   18900:	rsbs	r7, r7, #0
   18904:	strb	r0, [r2], #1
   18908:	rsc	r5, r5, #0
   1890c:	mov	r0, r7
   18910:	mov	r1, r5
   18914:	bl	15b18 <flatcc_json_printer_uint64@@Base+0x30>
   18918:	ldr	r1, [r4, #20]
   1891c:	add	r0, r0, r6
   18920:	add	r0, r1, r0
   18924:	str	r0, [r4, #20]
   18928:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1892c:	mov	r0, r4
   18930:	mov	r2, r7
   18934:	mov	r3, r5
   18938:	mov	r1, r8
   1893c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   18940:	bx	r1

00018944 <flatcc_json_printer_bool_enum_struct_field@@Base>:
   18944:	push	{r4, r5, r6, r7, fp, lr}
   18948:	add	fp, sp, #16
   1894c:	mov	r5, r1
   18950:	mov	r4, r0
   18954:	add	r7, fp, #8
   18958:	ldrb	r6, [r2, r3]
   1895c:	cmp	r5, #0
   18960:	ldm	r7, {r1, r2, r7}
   18964:	ldrne	r0, [r4, #20]
   18968:	addne	r3, r0, #1
   1896c:	strne	r3, [r4, #20]
   18970:	movne	r3, #44	; 0x2c
   18974:	strbne	r3, [r0]
   18978:	mov	r0, r4
   1897c:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   18980:	ldrb	r0, [r4, #27]
   18984:	cmp	r0, #0
   18988:	beq	189b4 <flatcc_json_printer_bool_enum_struct_field@@Base+0x70>
   1898c:	ldr	r0, [r4, #20]
   18990:	cmp	r6, #0
   18994:	beq	189c8 <flatcc_json_printer_bool_enum_struct_field@@Base+0x84>
   18998:	mov	r1, #0
   1899c:	strb	r1, [r0, #4]
   189a0:	movw	r1, #29300	; 0x7274
   189a4:	movt	r1, #25973	; 0x6575
   189a8:	str	r1, [r0]
   189ac:	mov	r0, #4
   189b0:	b	189e0 <flatcc_json_printer_bool_enum_struct_field@@Base+0x9c>
   189b4:	mov	r0, r4
   189b8:	mov	r1, r6
   189bc:	mov	r2, r7
   189c0:	pop	{r4, r5, r6, r7, fp, lr}
   189c4:	bx	r2
   189c8:	mov	r1, #101	; 0x65
   189cc:	strh	r1, [r0, #4]
   189d0:	movw	r1, #24934	; 0x6166
   189d4:	movt	r1, #29548	; 0x736c
   189d8:	str	r1, [r0]
   189dc:	mov	r0, #5
   189e0:	ldr	r1, [r4, #20]
   189e4:	add	r0, r1, r0
   189e8:	str	r0, [r4, #20]
   189ec:	pop	{r4, r5, r6, r7, fp, pc}

000189f0 <flatcc_json_printer_utype_vector_field@@Base>:
   189f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   189f4:	add	fp, sp, #28
   189f8:	sub	sp, sp, #4
   189fc:	mov	r4, r0
   18a00:	mov	r0, #4
   18a04:	add	r0, r0, r2, lsl #1
   18a08:	ldr	r2, [r1, #8]
   18a0c:	cmp	r0, r2
   18a10:	bge	18a30 <flatcc_json_printer_utype_vector_field@@Base+0x40>
   18a14:	ldr	r2, [r1, #4]
   18a18:	add	r0, r2, r0
   18a1c:	ldrh	r0, [r0]
   18a20:	cmp	r0, #0
   18a24:	ldrne	r2, [r1]
   18a28:	addsne	r9, r2, r0
   18a2c:	bne	18a38 <flatcc_json_printer_utype_vector_field@@Base+0x48>
   18a30:	sub	sp, fp, #28
   18a34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18a38:	ldr	r0, [r1, #16]
   18a3c:	ldr	r2, [fp, #8]
   18a40:	add	r7, r0, #1
   18a44:	cmp	r0, #0
   18a48:	str	r7, [r1, #16]
   18a4c:	ldrne	r0, [r4, #20]
   18a50:	addne	r1, r0, #1
   18a54:	strne	r1, [r4, #20]
   18a58:	movne	r1, #44	; 0x2c
   18a5c:	strbne	r1, [r0]
   18a60:	mov	r1, r3
   18a64:	ldr	r0, [r9]
   18a68:	ldr	r8, [r9, r0]!
   18a6c:	mov	r0, r4
   18a70:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   18a74:	ldr	r1, [r4, #32]
   18a78:	ldr	r0, [r4, #20]
   18a7c:	cmp	r8, #0
   18a80:	add	r1, r1, #1
   18a84:	str	r1, [r4, #32]
   18a88:	add	r1, r0, #1
   18a8c:	str	r1, [r4, #20]
   18a90:	mov	r1, #91	; 0x5b
   18a94:	strb	r1, [r0]
   18a98:	beq	18dfc <flatcc_json_printer_utype_vector_field@@Base+0x40c>
   18a9c:	ldrb	r1, [r4, #25]
   18aa0:	ldr	r0, [r4, #20]
   18aa4:	cmp	r1, #0
   18aa8:	beq	18b64 <flatcc_json_printer_utype_vector_field@@Base+0x174>
   18aac:	add	r1, r0, #1
   18ab0:	str	r1, [r4, #20]
   18ab4:	mov	r1, #10
   18ab8:	strb	r1, [r0]
   18abc:	ldr	r0, [r4, #20]
   18ac0:	ldrb	r2, [r4, #25]
   18ac4:	ldr	r3, [r4, #32]
   18ac8:	ldr	r1, [r4, #16]
   18acc:	mla	r7, r3, r2, r0
   18ad0:	mul	r5, r3, r2
   18ad4:	cmp	r7, r1
   18ad8:	bls	18b48 <flatcc_json_printer_utype_vector_field@@Base+0x158>
   18adc:	cmp	r0, r1
   18ae0:	bcc	18afc <flatcc_json_printer_utype_vector_field@@Base+0x10c>
   18ae4:	ldr	r2, [r4, #44]	; 0x2c
   18ae8:	mov	r0, r4
   18aec:	mov	r1, #0
   18af0:	blx	r2
   18af4:	ldr	r1, [r4, #16]
   18af8:	ldr	r0, [r4, #20]
   18afc:	sub	r6, r1, r0
   18b00:	cmp	r6, r5
   18b04:	bcs	18b48 <flatcc_json_printer_utype_vector_field@@Base+0x158>
   18b08:	mov	r1, #32
   18b0c:	mov	r2, r6
   18b10:	bl	12940 <memset@plt>
   18b14:	ldr	r0, [r4, #20]
   18b18:	ldr	r2, [r4, #44]	; 0x2c
   18b1c:	mov	r1, #0
   18b20:	add	r0, r0, r6
   18b24:	str	r0, [r4, #20]
   18b28:	mov	r0, r4
   18b2c:	blx	r2
   18b30:	ldr	r1, [r4, #16]
   18b34:	ldr	r0, [r4, #20]
   18b38:	sub	r5, r5, r6
   18b3c:	sub	r6, r1, r0
   18b40:	cmp	r5, r6
   18b44:	bhi	18b08 <flatcc_json_printer_utype_vector_field@@Base+0x118>
   18b48:	mov	r1, #32
   18b4c:	mov	r2, r5
   18b50:	bl	12940 <memset@plt>
   18b54:	ldr	r0, [r4, #20]
   18b58:	add	r0, r0, r5
   18b5c:	str	r0, [r4, #20]
   18b60:	b	18b84 <flatcc_json_printer_utype_vector_field@@Base+0x194>
   18b64:	ldr	r1, [r4, #16]
   18b68:	cmp	r0, r1
   18b6c:	bcc	18b84 <flatcc_json_printer_utype_vector_field@@Base+0x194>
   18b70:	ldr	r2, [r4, #44]	; 0x2c
   18b74:	mov	r0, r4
   18b78:	mov	r1, #0
   18b7c:	blx	r2
   18b80:	ldr	r0, [r4, #20]
   18b84:	ldrb	r1, [r9, #4]
   18b88:	mov	r2, #0
   18b8c:	cmp	r1, #100	; 0x64
   18b90:	bcc	18bd8 <flatcc_json_printer_utype_vector_field@@Base+0x1e8>
   18b94:	strb	r2, [r0, #3]
   18b98:	movw	r2, #34079	; 0x851f
   18b9c:	movt	r2, #20971	; 0x51eb
   18ba0:	umull	r2, r3, r1, r2
   18ba4:	mov	r2, #48	; 0x30
   18ba8:	orr	r2, r2, r3, lsr #5
   18bac:	strb	r2, [r0]
   18bb0:	lsr	r2, r3, #5
   18bb4:	mov	r3, #100	; 0x64
   18bb8:	mls	r1, r2, r3, r1
   18bbc:	ldr	r2, [pc, #796]	; 18ee0 <flatcc_json_printer_utype_vector_field@@Base+0x4f0>
   18bc0:	add	r2, pc, r2
   18bc4:	add	r1, r2, r1, lsl #1
   18bc8:	ldrh	r1, [r1]
   18bcc:	strh	r1, [r0, #1]
   18bd0:	mov	r0, #3
   18bd4:	b	18c28 <flatcc_json_printer_utype_vector_field@@Base+0x238>
   18bd8:	cmp	r1, #10
   18bdc:	bcc	18c18 <flatcc_json_printer_utype_vector_field@@Base+0x228>
   18be0:	strb	r2, [r0, #2]
   18be4:	movw	r2, #34079	; 0x851f
   18be8:	movt	r2, #20971	; 0x51eb
   18bec:	umull	r2, r3, r1, r2
   18bf0:	lsr	r2, r3, #5
   18bf4:	mov	r3, #100	; 0x64
   18bf8:	mls	r1, r2, r3, r1
   18bfc:	ldr	r2, [pc, #736]	; 18ee4 <flatcc_json_printer_utype_vector_field@@Base+0x4f4>
   18c00:	add	r2, pc, r2
   18c04:	add	r1, r2, r1, lsl #1
   18c08:	ldrh	r1, [r1]
   18c0c:	strh	r1, [r0]
   18c10:	mov	r0, #2
   18c14:	b	18c28 <flatcc_json_printer_utype_vector_field@@Base+0x238>
   18c18:	add	r1, r1, #48	; 0x30
   18c1c:	strb	r2, [r0, #1]
   18c20:	strb	r1, [r0]
   18c24:	mov	r0, #1
   18c28:	ldr	r1, [r4, #20]
   18c2c:	subs	r8, r8, #1
   18c30:	add	r0, r1, r0
   18c34:	str	r0, [r4, #20]
   18c38:	beq	18dfc <flatcc_json_printer_utype_vector_field@@Base+0x40c>
   18c3c:	ldr	r0, [r4, #20]
   18c40:	add	r7, r9, #5
   18c44:	mov	r9, #44	; 0x2c
   18c48:	mov	sl, #0
   18c4c:	add	r1, r0, #1
   18c50:	str	r1, [r4, #20]
   18c54:	strb	r9, [r0]
   18c58:	ldrb	r1, [r4, #25]
   18c5c:	ldr	r0, [r4, #20]
   18c60:	cmp	r1, #0
   18c64:	beq	18d20 <flatcc_json_printer_utype_vector_field@@Base+0x330>
   18c68:	add	r1, r0, #1
   18c6c:	str	r1, [r4, #20]
   18c70:	mov	r1, #10
   18c74:	strb	r1, [r0]
   18c78:	ldr	r0, [r4, #20]
   18c7c:	ldrb	r2, [r4, #25]
   18c80:	ldr	r3, [r4, #32]
   18c84:	ldr	r1, [r4, #16]
   18c88:	mla	r6, r3, r2, r0
   18c8c:	mul	r5, r3, r2
   18c90:	cmp	r6, r1
   18c94:	bls	18d04 <flatcc_json_printer_utype_vector_field@@Base+0x314>
   18c98:	cmp	r0, r1
   18c9c:	bcc	18cb8 <flatcc_json_printer_utype_vector_field@@Base+0x2c8>
   18ca0:	ldr	r2, [r4, #44]	; 0x2c
   18ca4:	mov	r0, r4
   18ca8:	mov	r1, #0
   18cac:	blx	r2
   18cb0:	ldr	r1, [r4, #16]
   18cb4:	ldr	r0, [r4, #20]
   18cb8:	sub	r6, r1, r0
   18cbc:	cmp	r6, r5
   18cc0:	bcs	18d04 <flatcc_json_printer_utype_vector_field@@Base+0x314>
   18cc4:	mov	r1, #32
   18cc8:	mov	r2, r6
   18ccc:	bl	12940 <memset@plt>
   18cd0:	ldr	r0, [r4, #20]
   18cd4:	ldr	r2, [r4, #44]	; 0x2c
   18cd8:	mov	r1, #0
   18cdc:	add	r0, r0, r6
   18ce0:	str	r0, [r4, #20]
   18ce4:	mov	r0, r4
   18ce8:	blx	r2
   18cec:	ldr	r1, [r4, #16]
   18cf0:	ldr	r0, [r4, #20]
   18cf4:	sub	r5, r5, r6
   18cf8:	sub	r6, r1, r0
   18cfc:	cmp	r5, r6
   18d00:	bhi	18cc4 <flatcc_json_printer_utype_vector_field@@Base+0x2d4>
   18d04:	mov	r1, #32
   18d08:	mov	r2, r5
   18d0c:	bl	12940 <memset@plt>
   18d10:	ldr	r0, [r4, #20]
   18d14:	add	r0, r0, r5
   18d18:	str	r0, [r4, #20]
   18d1c:	b	18d40 <flatcc_json_printer_utype_vector_field@@Base+0x350>
   18d20:	ldr	r1, [r4, #16]
   18d24:	cmp	r0, r1
   18d28:	bcc	18d40 <flatcc_json_printer_utype_vector_field@@Base+0x350>
   18d2c:	ldr	r2, [r4, #44]	; 0x2c
   18d30:	mov	r0, r4
   18d34:	mov	r1, #0
   18d38:	blx	r2
   18d3c:	ldr	r0, [r4, #20]
   18d40:	ldrb	r1, [r7]
   18d44:	sub	r8, r8, #1
   18d48:	cmp	r1, #100	; 0x64
   18d4c:	bcc	18d94 <flatcc_json_printer_utype_vector_field@@Base+0x3a4>
   18d50:	movw	r2, #34079	; 0x851f
   18d54:	strb	sl, [r0, #3]
   18d58:	movt	r2, #20971	; 0x51eb
   18d5c:	umull	r2, r3, r1, r2
   18d60:	mov	r2, #48	; 0x30
   18d64:	orr	r2, r2, r3, lsr #5
   18d68:	strb	r2, [r0]
   18d6c:	lsr	r2, r3, #5
   18d70:	mov	r3, #100	; 0x64
   18d74:	mls	r1, r2, r3, r1
   18d78:	ldr	r2, [pc, #360]	; 18ee8 <flatcc_json_printer_utype_vector_field@@Base+0x4f8>
   18d7c:	add	r2, pc, r2
   18d80:	add	r1, r2, r1, lsl #1
   18d84:	ldrh	r1, [r1]
   18d88:	strh	r1, [r0, #1]
   18d8c:	mov	r0, #3
   18d90:	b	18de4 <flatcc_json_printer_utype_vector_field@@Base+0x3f4>
   18d94:	cmp	r1, #10
   18d98:	bcc	18dd4 <flatcc_json_printer_utype_vector_field@@Base+0x3e4>
   18d9c:	movw	r2, #34079	; 0x851f
   18da0:	strb	sl, [r0, #2]
   18da4:	movt	r2, #20971	; 0x51eb
   18da8:	umull	r2, r3, r1, r2
   18dac:	lsr	r2, r3, #5
   18db0:	mov	r3, #100	; 0x64
   18db4:	mls	r1, r2, r3, r1
   18db8:	ldr	r2, [pc, #300]	; 18eec <flatcc_json_printer_utype_vector_field@@Base+0x4fc>
   18dbc:	add	r2, pc, r2
   18dc0:	add	r1, r2, r1, lsl #1
   18dc4:	ldrh	r1, [r1]
   18dc8:	strh	r1, [r0]
   18dcc:	mov	r0, #2
   18dd0:	b	18de4 <flatcc_json_printer_utype_vector_field@@Base+0x3f4>
   18dd4:	add	r1, r1, #48	; 0x30
   18dd8:	strb	sl, [r0, #1]
   18ddc:	strb	r1, [r0]
   18de0:	mov	r0, #1
   18de4:	ldr	r1, [r4, #20]
   18de8:	add	r7, r7, #1
   18dec:	cmp	r8, #0
   18df0:	add	r0, r1, r0
   18df4:	str	r0, [r4, #20]
   18df8:	bne	18c4c <flatcc_json_printer_utype_vector_field@@Base+0x25c>
   18dfc:	ldrb	r1, [r4, #25]
   18e00:	ldr	r0, [r4, #20]
   18e04:	cmp	r1, #0
   18e08:	beq	18ec8 <flatcc_json_printer_utype_vector_field@@Base+0x4d8>
   18e0c:	add	r1, r0, #1
   18e10:	str	r1, [r4, #20]
   18e14:	mov	r1, #10
   18e18:	strb	r1, [r0]
   18e1c:	ldr	r0, [r4, #32]
   18e20:	sub	r2, r0, #1
   18e24:	str	r2, [r4, #32]
   18e28:	ldrb	r3, [r4, #25]
   18e2c:	ldr	r0, [r4, #20]
   18e30:	ldr	r1, [r4, #16]
   18e34:	mla	r7, r2, r3, r0
   18e38:	mul	r5, r2, r3
   18e3c:	cmp	r7, r1
   18e40:	bls	18eb0 <flatcc_json_printer_utype_vector_field@@Base+0x4c0>
   18e44:	cmp	r0, r1
   18e48:	bcc	18e64 <flatcc_json_printer_utype_vector_field@@Base+0x474>
   18e4c:	ldr	r2, [r4, #44]	; 0x2c
   18e50:	mov	r0, r4
   18e54:	mov	r1, #0
   18e58:	blx	r2
   18e5c:	ldr	r1, [r4, #16]
   18e60:	ldr	r0, [r4, #20]
   18e64:	sub	r6, r1, r0
   18e68:	cmp	r6, r5
   18e6c:	bcs	18eb0 <flatcc_json_printer_utype_vector_field@@Base+0x4c0>
   18e70:	mov	r1, #32
   18e74:	mov	r2, r6
   18e78:	bl	12940 <memset@plt>
   18e7c:	ldr	r0, [r4, #20]
   18e80:	ldr	r2, [r4, #44]	; 0x2c
   18e84:	mov	r1, #0
   18e88:	add	r0, r0, r6
   18e8c:	str	r0, [r4, #20]
   18e90:	mov	r0, r4
   18e94:	blx	r2
   18e98:	ldr	r1, [r4, #16]
   18e9c:	ldr	r0, [r4, #20]
   18ea0:	sub	r5, r5, r6
   18ea4:	sub	r6, r1, r0
   18ea8:	cmp	r5, r6
   18eac:	bhi	18e70 <flatcc_json_printer_utype_vector_field@@Base+0x480>
   18eb0:	mov	r1, #32
   18eb4:	mov	r2, r5
   18eb8:	bl	12940 <memset@plt>
   18ebc:	ldr	r0, [r4, #20]
   18ec0:	add	r0, r0, r5
   18ec4:	str	r0, [r4, #20]
   18ec8:	add	r1, r0, #1
   18ecc:	str	r1, [r4, #20]
   18ed0:	mov	r1, #93	; 0x5d
   18ed4:	strb	r1, [r0]
   18ed8:	sub	sp, fp, #28
   18edc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18ee0:	andeq	r8, r0, r8, lsl #31
   18ee4:	andeq	r8, r0, r8, asr #30
   18ee8:	andeq	r8, r0, ip, asr #27
   18eec:	andeq	r8, r0, ip, lsl #27

00018ef0 <flatcc_json_printer_uint8_vector_field@@Base>:
   18ef0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18ef4:	add	fp, sp, #28
   18ef8:	sub	sp, sp, #4
   18efc:	mov	r4, r0
   18f00:	mov	r0, #4
   18f04:	add	r0, r0, r2, lsl #1
   18f08:	ldr	r2, [r1, #8]
   18f0c:	cmp	r0, r2
   18f10:	bge	18f30 <flatcc_json_printer_uint8_vector_field@@Base+0x40>
   18f14:	ldr	r2, [r1, #4]
   18f18:	add	r0, r2, r0
   18f1c:	ldrh	r0, [r0]
   18f20:	cmp	r0, #0
   18f24:	ldrne	r2, [r1]
   18f28:	addsne	r9, r2, r0
   18f2c:	bne	18f38 <flatcc_json_printer_uint8_vector_field@@Base+0x48>
   18f30:	sub	sp, fp, #28
   18f34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18f38:	ldr	r0, [r1, #16]
   18f3c:	ldr	r2, [fp, #8]
   18f40:	add	r7, r0, #1
   18f44:	cmp	r0, #0
   18f48:	str	r7, [r1, #16]
   18f4c:	ldrne	r0, [r4, #20]
   18f50:	addne	r1, r0, #1
   18f54:	strne	r1, [r4, #20]
   18f58:	movne	r1, #44	; 0x2c
   18f5c:	strbne	r1, [r0]
   18f60:	mov	r1, r3
   18f64:	ldr	r0, [r9]
   18f68:	ldr	r8, [r9, r0]!
   18f6c:	mov	r0, r4
   18f70:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   18f74:	ldr	r1, [r4, #32]
   18f78:	ldr	r0, [r4, #20]
   18f7c:	cmp	r8, #0
   18f80:	add	r1, r1, #1
   18f84:	str	r1, [r4, #32]
   18f88:	add	r1, r0, #1
   18f8c:	str	r1, [r4, #20]
   18f90:	mov	r1, #91	; 0x5b
   18f94:	strb	r1, [r0]
   18f98:	beq	192fc <flatcc_json_printer_uint8_vector_field@@Base+0x40c>
   18f9c:	ldrb	r1, [r4, #25]
   18fa0:	ldr	r0, [r4, #20]
   18fa4:	cmp	r1, #0
   18fa8:	beq	19064 <flatcc_json_printer_uint8_vector_field@@Base+0x174>
   18fac:	add	r1, r0, #1
   18fb0:	str	r1, [r4, #20]
   18fb4:	mov	r1, #10
   18fb8:	strb	r1, [r0]
   18fbc:	ldr	r0, [r4, #20]
   18fc0:	ldrb	r2, [r4, #25]
   18fc4:	ldr	r3, [r4, #32]
   18fc8:	ldr	r1, [r4, #16]
   18fcc:	mla	r7, r3, r2, r0
   18fd0:	mul	r5, r3, r2
   18fd4:	cmp	r7, r1
   18fd8:	bls	19048 <flatcc_json_printer_uint8_vector_field@@Base+0x158>
   18fdc:	cmp	r0, r1
   18fe0:	bcc	18ffc <flatcc_json_printer_uint8_vector_field@@Base+0x10c>
   18fe4:	ldr	r2, [r4, #44]	; 0x2c
   18fe8:	mov	r0, r4
   18fec:	mov	r1, #0
   18ff0:	blx	r2
   18ff4:	ldr	r1, [r4, #16]
   18ff8:	ldr	r0, [r4, #20]
   18ffc:	sub	r6, r1, r0
   19000:	cmp	r6, r5
   19004:	bcs	19048 <flatcc_json_printer_uint8_vector_field@@Base+0x158>
   19008:	mov	r1, #32
   1900c:	mov	r2, r6
   19010:	bl	12940 <memset@plt>
   19014:	ldr	r0, [r4, #20]
   19018:	ldr	r2, [r4, #44]	; 0x2c
   1901c:	mov	r1, #0
   19020:	add	r0, r0, r6
   19024:	str	r0, [r4, #20]
   19028:	mov	r0, r4
   1902c:	blx	r2
   19030:	ldr	r1, [r4, #16]
   19034:	ldr	r0, [r4, #20]
   19038:	sub	r5, r5, r6
   1903c:	sub	r6, r1, r0
   19040:	cmp	r5, r6
   19044:	bhi	19008 <flatcc_json_printer_uint8_vector_field@@Base+0x118>
   19048:	mov	r1, #32
   1904c:	mov	r2, r5
   19050:	bl	12940 <memset@plt>
   19054:	ldr	r0, [r4, #20]
   19058:	add	r0, r0, r5
   1905c:	str	r0, [r4, #20]
   19060:	b	19084 <flatcc_json_printer_uint8_vector_field@@Base+0x194>
   19064:	ldr	r1, [r4, #16]
   19068:	cmp	r0, r1
   1906c:	bcc	19084 <flatcc_json_printer_uint8_vector_field@@Base+0x194>
   19070:	ldr	r2, [r4, #44]	; 0x2c
   19074:	mov	r0, r4
   19078:	mov	r1, #0
   1907c:	blx	r2
   19080:	ldr	r0, [r4, #20]
   19084:	ldrb	r1, [r9, #4]
   19088:	mov	r2, #0
   1908c:	cmp	r1, #100	; 0x64
   19090:	bcc	190d8 <flatcc_json_printer_uint8_vector_field@@Base+0x1e8>
   19094:	strb	r2, [r0, #3]
   19098:	movw	r2, #34079	; 0x851f
   1909c:	movt	r2, #20971	; 0x51eb
   190a0:	umull	r2, r3, r1, r2
   190a4:	mov	r2, #48	; 0x30
   190a8:	orr	r2, r2, r3, lsr #5
   190ac:	strb	r2, [r0]
   190b0:	lsr	r2, r3, #5
   190b4:	mov	r3, #100	; 0x64
   190b8:	mls	r1, r2, r3, r1
   190bc:	ldr	r2, [pc, #796]	; 193e0 <flatcc_json_printer_uint8_vector_field@@Base+0x4f0>
   190c0:	add	r2, pc, r2
   190c4:	add	r1, r2, r1, lsl #1
   190c8:	ldrh	r1, [r1]
   190cc:	strh	r1, [r0, #1]
   190d0:	mov	r0, #3
   190d4:	b	19128 <flatcc_json_printer_uint8_vector_field@@Base+0x238>
   190d8:	cmp	r1, #10
   190dc:	bcc	19118 <flatcc_json_printer_uint8_vector_field@@Base+0x228>
   190e0:	strb	r2, [r0, #2]
   190e4:	movw	r2, #34079	; 0x851f
   190e8:	movt	r2, #20971	; 0x51eb
   190ec:	umull	r2, r3, r1, r2
   190f0:	lsr	r2, r3, #5
   190f4:	mov	r3, #100	; 0x64
   190f8:	mls	r1, r2, r3, r1
   190fc:	ldr	r2, [pc, #736]	; 193e4 <flatcc_json_printer_uint8_vector_field@@Base+0x4f4>
   19100:	add	r2, pc, r2
   19104:	add	r1, r2, r1, lsl #1
   19108:	ldrh	r1, [r1]
   1910c:	strh	r1, [r0]
   19110:	mov	r0, #2
   19114:	b	19128 <flatcc_json_printer_uint8_vector_field@@Base+0x238>
   19118:	add	r1, r1, #48	; 0x30
   1911c:	strb	r2, [r0, #1]
   19120:	strb	r1, [r0]
   19124:	mov	r0, #1
   19128:	ldr	r1, [r4, #20]
   1912c:	subs	r8, r8, #1
   19130:	add	r0, r1, r0
   19134:	str	r0, [r4, #20]
   19138:	beq	192fc <flatcc_json_printer_uint8_vector_field@@Base+0x40c>
   1913c:	ldr	r0, [r4, #20]
   19140:	add	r7, r9, #5
   19144:	mov	r9, #44	; 0x2c
   19148:	mov	sl, #0
   1914c:	add	r1, r0, #1
   19150:	str	r1, [r4, #20]
   19154:	strb	r9, [r0]
   19158:	ldrb	r1, [r4, #25]
   1915c:	ldr	r0, [r4, #20]
   19160:	cmp	r1, #0
   19164:	beq	19220 <flatcc_json_printer_uint8_vector_field@@Base+0x330>
   19168:	add	r1, r0, #1
   1916c:	str	r1, [r4, #20]
   19170:	mov	r1, #10
   19174:	strb	r1, [r0]
   19178:	ldr	r0, [r4, #20]
   1917c:	ldrb	r2, [r4, #25]
   19180:	ldr	r3, [r4, #32]
   19184:	ldr	r1, [r4, #16]
   19188:	mla	r6, r3, r2, r0
   1918c:	mul	r5, r3, r2
   19190:	cmp	r6, r1
   19194:	bls	19204 <flatcc_json_printer_uint8_vector_field@@Base+0x314>
   19198:	cmp	r0, r1
   1919c:	bcc	191b8 <flatcc_json_printer_uint8_vector_field@@Base+0x2c8>
   191a0:	ldr	r2, [r4, #44]	; 0x2c
   191a4:	mov	r0, r4
   191a8:	mov	r1, #0
   191ac:	blx	r2
   191b0:	ldr	r1, [r4, #16]
   191b4:	ldr	r0, [r4, #20]
   191b8:	sub	r6, r1, r0
   191bc:	cmp	r6, r5
   191c0:	bcs	19204 <flatcc_json_printer_uint8_vector_field@@Base+0x314>
   191c4:	mov	r1, #32
   191c8:	mov	r2, r6
   191cc:	bl	12940 <memset@plt>
   191d0:	ldr	r0, [r4, #20]
   191d4:	ldr	r2, [r4, #44]	; 0x2c
   191d8:	mov	r1, #0
   191dc:	add	r0, r0, r6
   191e0:	str	r0, [r4, #20]
   191e4:	mov	r0, r4
   191e8:	blx	r2
   191ec:	ldr	r1, [r4, #16]
   191f0:	ldr	r0, [r4, #20]
   191f4:	sub	r5, r5, r6
   191f8:	sub	r6, r1, r0
   191fc:	cmp	r5, r6
   19200:	bhi	191c4 <flatcc_json_printer_uint8_vector_field@@Base+0x2d4>
   19204:	mov	r1, #32
   19208:	mov	r2, r5
   1920c:	bl	12940 <memset@plt>
   19210:	ldr	r0, [r4, #20]
   19214:	add	r0, r0, r5
   19218:	str	r0, [r4, #20]
   1921c:	b	19240 <flatcc_json_printer_uint8_vector_field@@Base+0x350>
   19220:	ldr	r1, [r4, #16]
   19224:	cmp	r0, r1
   19228:	bcc	19240 <flatcc_json_printer_uint8_vector_field@@Base+0x350>
   1922c:	ldr	r2, [r4, #44]	; 0x2c
   19230:	mov	r0, r4
   19234:	mov	r1, #0
   19238:	blx	r2
   1923c:	ldr	r0, [r4, #20]
   19240:	ldrb	r1, [r7]
   19244:	sub	r8, r8, #1
   19248:	cmp	r1, #100	; 0x64
   1924c:	bcc	19294 <flatcc_json_printer_uint8_vector_field@@Base+0x3a4>
   19250:	movw	r2, #34079	; 0x851f
   19254:	strb	sl, [r0, #3]
   19258:	movt	r2, #20971	; 0x51eb
   1925c:	umull	r2, r3, r1, r2
   19260:	mov	r2, #48	; 0x30
   19264:	orr	r2, r2, r3, lsr #5
   19268:	strb	r2, [r0]
   1926c:	lsr	r2, r3, #5
   19270:	mov	r3, #100	; 0x64
   19274:	mls	r1, r2, r3, r1
   19278:	ldr	r2, [pc, #360]	; 193e8 <flatcc_json_printer_uint8_vector_field@@Base+0x4f8>
   1927c:	add	r2, pc, r2
   19280:	add	r1, r2, r1, lsl #1
   19284:	ldrh	r1, [r1]
   19288:	strh	r1, [r0, #1]
   1928c:	mov	r0, #3
   19290:	b	192e4 <flatcc_json_printer_uint8_vector_field@@Base+0x3f4>
   19294:	cmp	r1, #10
   19298:	bcc	192d4 <flatcc_json_printer_uint8_vector_field@@Base+0x3e4>
   1929c:	movw	r2, #34079	; 0x851f
   192a0:	strb	sl, [r0, #2]
   192a4:	movt	r2, #20971	; 0x51eb
   192a8:	umull	r2, r3, r1, r2
   192ac:	lsr	r2, r3, #5
   192b0:	mov	r3, #100	; 0x64
   192b4:	mls	r1, r2, r3, r1
   192b8:	ldr	r2, [pc, #300]	; 193ec <flatcc_json_printer_uint8_vector_field@@Base+0x4fc>
   192bc:	add	r2, pc, r2
   192c0:	add	r1, r2, r1, lsl #1
   192c4:	ldrh	r1, [r1]
   192c8:	strh	r1, [r0]
   192cc:	mov	r0, #2
   192d0:	b	192e4 <flatcc_json_printer_uint8_vector_field@@Base+0x3f4>
   192d4:	add	r1, r1, #48	; 0x30
   192d8:	strb	sl, [r0, #1]
   192dc:	strb	r1, [r0]
   192e0:	mov	r0, #1
   192e4:	ldr	r1, [r4, #20]
   192e8:	add	r7, r7, #1
   192ec:	cmp	r8, #0
   192f0:	add	r0, r1, r0
   192f4:	str	r0, [r4, #20]
   192f8:	bne	1914c <flatcc_json_printer_uint8_vector_field@@Base+0x25c>
   192fc:	ldrb	r1, [r4, #25]
   19300:	ldr	r0, [r4, #20]
   19304:	cmp	r1, #0
   19308:	beq	193c8 <flatcc_json_printer_uint8_vector_field@@Base+0x4d8>
   1930c:	add	r1, r0, #1
   19310:	str	r1, [r4, #20]
   19314:	mov	r1, #10
   19318:	strb	r1, [r0]
   1931c:	ldr	r0, [r4, #32]
   19320:	sub	r2, r0, #1
   19324:	str	r2, [r4, #32]
   19328:	ldrb	r3, [r4, #25]
   1932c:	ldr	r0, [r4, #20]
   19330:	ldr	r1, [r4, #16]
   19334:	mla	r7, r2, r3, r0
   19338:	mul	r5, r2, r3
   1933c:	cmp	r7, r1
   19340:	bls	193b0 <flatcc_json_printer_uint8_vector_field@@Base+0x4c0>
   19344:	cmp	r0, r1
   19348:	bcc	19364 <flatcc_json_printer_uint8_vector_field@@Base+0x474>
   1934c:	ldr	r2, [r4, #44]	; 0x2c
   19350:	mov	r0, r4
   19354:	mov	r1, #0
   19358:	blx	r2
   1935c:	ldr	r1, [r4, #16]
   19360:	ldr	r0, [r4, #20]
   19364:	sub	r6, r1, r0
   19368:	cmp	r6, r5
   1936c:	bcs	193b0 <flatcc_json_printer_uint8_vector_field@@Base+0x4c0>
   19370:	mov	r1, #32
   19374:	mov	r2, r6
   19378:	bl	12940 <memset@plt>
   1937c:	ldr	r0, [r4, #20]
   19380:	ldr	r2, [r4, #44]	; 0x2c
   19384:	mov	r1, #0
   19388:	add	r0, r0, r6
   1938c:	str	r0, [r4, #20]
   19390:	mov	r0, r4
   19394:	blx	r2
   19398:	ldr	r1, [r4, #16]
   1939c:	ldr	r0, [r4, #20]
   193a0:	sub	r5, r5, r6
   193a4:	sub	r6, r1, r0
   193a8:	cmp	r5, r6
   193ac:	bhi	19370 <flatcc_json_printer_uint8_vector_field@@Base+0x480>
   193b0:	mov	r1, #32
   193b4:	mov	r2, r5
   193b8:	bl	12940 <memset@plt>
   193bc:	ldr	r0, [r4, #20]
   193c0:	add	r0, r0, r5
   193c4:	str	r0, [r4, #20]
   193c8:	add	r1, r0, #1
   193cc:	str	r1, [r4, #20]
   193d0:	mov	r1, #93	; 0x5d
   193d4:	strb	r1, [r0]
   193d8:	sub	sp, fp, #28
   193dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   193e0:	andeq	r8, r0, r8, lsl #21
   193e4:	andeq	r8, r0, r8, asr #20
   193e8:	andeq	r8, r0, ip, asr #17
   193ec:	andeq	r8, r0, ip, lsl #17

000193f0 <flatcc_json_printer_uint16_vector_field@@Base>:
   193f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   193f4:	add	fp, sp, #28
   193f8:	sub	sp, sp, #4
   193fc:	mov	r4, r0
   19400:	mov	r0, #4
   19404:	add	r0, r0, r2, lsl #1
   19408:	ldr	r2, [r1, #8]
   1940c:	cmp	r0, r2
   19410:	bge	19430 <flatcc_json_printer_uint16_vector_field@@Base+0x40>
   19414:	ldr	r2, [r1, #4]
   19418:	add	r0, r2, r0
   1941c:	ldrh	r0, [r0]
   19420:	cmp	r0, #0
   19424:	ldrne	r2, [r1]
   19428:	addsne	r8, r2, r0
   1942c:	bne	19438 <flatcc_json_printer_uint16_vector_field@@Base+0x48>
   19430:	sub	sp, fp, #28
   19434:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19438:	ldr	r0, [r1, #16]
   1943c:	ldr	r2, [fp, #8]
   19440:	add	r7, r0, #1
   19444:	cmp	r0, #0
   19448:	str	r7, [r1, #16]
   1944c:	ldrne	r0, [r4, #20]
   19450:	addne	r1, r0, #1
   19454:	strne	r1, [r4, #20]
   19458:	movne	r1, #44	; 0x2c
   1945c:	strbne	r1, [r0]
   19460:	mov	r1, r3
   19464:	ldr	r0, [r8]
   19468:	ldr	r7, [r8, r0]!
   1946c:	mov	r0, r4
   19470:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   19474:	ldr	r1, [r4, #32]
   19478:	ldr	r0, [r4, #20]
   1947c:	cmp	r7, #0
   19480:	add	r1, r1, #1
   19484:	str	r1, [r4, #32]
   19488:	add	r1, r0, #1
   1948c:	str	r1, [r4, #20]
   19490:	mov	r1, #91	; 0x5b
   19494:	strb	r1, [r0]
   19498:	beq	196c0 <flatcc_json_printer_uint16_vector_field@@Base+0x2d0>
   1949c:	ldrb	r0, [r4, #25]
   194a0:	ldr	r1, [r4, #20]
   194a4:	cmp	r0, #0
   194a8:	beq	19564 <flatcc_json_printer_uint16_vector_field@@Base+0x174>
   194ac:	add	r0, r1, #1
   194b0:	str	r0, [r4, #20]
   194b4:	mov	r0, #10
   194b8:	strb	r0, [r1]
   194bc:	ldr	r0, [r4, #20]
   194c0:	ldrb	r2, [r4, #25]
   194c4:	ldr	r3, [r4, #32]
   194c8:	ldr	r1, [r4, #16]
   194cc:	mla	r6, r3, r2, r0
   194d0:	mul	r5, r3, r2
   194d4:	cmp	r6, r1
   194d8:	bls	19548 <flatcc_json_printer_uint16_vector_field@@Base+0x158>
   194dc:	cmp	r0, r1
   194e0:	bcc	194fc <flatcc_json_printer_uint16_vector_field@@Base+0x10c>
   194e4:	ldr	r2, [r4, #44]	; 0x2c
   194e8:	mov	r0, r4
   194ec:	mov	r1, #0
   194f0:	blx	r2
   194f4:	ldr	r1, [r4, #16]
   194f8:	ldr	r0, [r4, #20]
   194fc:	sub	r6, r1, r0
   19500:	cmp	r6, r5
   19504:	bcs	19548 <flatcc_json_printer_uint16_vector_field@@Base+0x158>
   19508:	mov	r1, #32
   1950c:	mov	r2, r6
   19510:	bl	12940 <memset@plt>
   19514:	ldr	r0, [r4, #20]
   19518:	ldr	r2, [r4, #44]	; 0x2c
   1951c:	mov	r1, #0
   19520:	add	r0, r0, r6
   19524:	str	r0, [r4, #20]
   19528:	mov	r0, r4
   1952c:	blx	r2
   19530:	ldr	r1, [r4, #16]
   19534:	ldr	r0, [r4, #20]
   19538:	sub	r5, r5, r6
   1953c:	sub	r6, r1, r0
   19540:	cmp	r5, r6
   19544:	bhi	19508 <flatcc_json_printer_uint16_vector_field@@Base+0x118>
   19548:	mov	r1, #32
   1954c:	mov	r2, r5
   19550:	bl	12940 <memset@plt>
   19554:	ldr	r0, [r4, #20]
   19558:	add	r1, r0, r5
   1955c:	str	r1, [r4, #20]
   19560:	b	19584 <flatcc_json_printer_uint16_vector_field@@Base+0x194>
   19564:	ldr	r0, [r4, #16]
   19568:	cmp	r1, r0
   1956c:	bcc	19584 <flatcc_json_printer_uint16_vector_field@@Base+0x194>
   19570:	ldr	r2, [r4, #44]	; 0x2c
   19574:	mov	r0, r4
   19578:	mov	r1, #0
   1957c:	blx	r2
   19580:	ldr	r1, [r4, #20]
   19584:	ldrh	r0, [r8, #4]
   19588:	bl	15614 <flatcc_json_printer_uint16@@Base+0x2c>
   1958c:	ldr	r1, [r4, #20]
   19590:	subs	r9, r7, #1
   19594:	add	r0, r1, r0
   19598:	str	r0, [r4, #20]
   1959c:	beq	196c0 <flatcc_json_printer_uint16_vector_field@@Base+0x2d0>
   195a0:	ldr	r0, [r4, #20]
   195a4:	add	r7, r8, #6
   195a8:	mov	r8, #44	; 0x2c
   195ac:	mov	sl, #10
   195b0:	add	r1, r0, #1
   195b4:	sub	r9, r9, #1
   195b8:	str	r1, [r4, #20]
   195bc:	strb	r8, [r0]
   195c0:	ldrb	r0, [r4, #25]
   195c4:	ldr	r1, [r4, #20]
   195c8:	cmp	r0, #0
   195cc:	beq	19684 <flatcc_json_printer_uint16_vector_field@@Base+0x294>
   195d0:	add	r0, r1, #1
   195d4:	str	r0, [r4, #20]
   195d8:	strb	sl, [r1]
   195dc:	ldr	r0, [r4, #20]
   195e0:	ldrb	r2, [r4, #25]
   195e4:	ldr	r3, [r4, #32]
   195e8:	ldr	r1, [r4, #16]
   195ec:	mla	r6, r3, r2, r0
   195f0:	mul	r5, r3, r2
   195f4:	cmp	r6, r1
   195f8:	bls	19668 <flatcc_json_printer_uint16_vector_field@@Base+0x278>
   195fc:	cmp	r0, r1
   19600:	bcc	1961c <flatcc_json_printer_uint16_vector_field@@Base+0x22c>
   19604:	ldr	r2, [r4, #44]	; 0x2c
   19608:	mov	r0, r4
   1960c:	mov	r1, #0
   19610:	blx	r2
   19614:	ldr	r1, [r4, #16]
   19618:	ldr	r0, [r4, #20]
   1961c:	sub	r6, r1, r0
   19620:	cmp	r6, r5
   19624:	bcs	19668 <flatcc_json_printer_uint16_vector_field@@Base+0x278>
   19628:	mov	r1, #32
   1962c:	mov	r2, r6
   19630:	bl	12940 <memset@plt>
   19634:	ldr	r0, [r4, #20]
   19638:	ldr	r2, [r4, #44]	; 0x2c
   1963c:	mov	r1, #0
   19640:	add	r0, r0, r6
   19644:	str	r0, [r4, #20]
   19648:	mov	r0, r4
   1964c:	blx	r2
   19650:	ldr	r1, [r4, #16]
   19654:	ldr	r0, [r4, #20]
   19658:	sub	r5, r5, r6
   1965c:	sub	r6, r1, r0
   19660:	cmp	r5, r6
   19664:	bhi	19628 <flatcc_json_printer_uint16_vector_field@@Base+0x238>
   19668:	mov	r1, #32
   1966c:	mov	r2, r5
   19670:	bl	12940 <memset@plt>
   19674:	ldr	r0, [r4, #20]
   19678:	add	r1, r0, r5
   1967c:	str	r1, [r4, #20]
   19680:	b	196a4 <flatcc_json_printer_uint16_vector_field@@Base+0x2b4>
   19684:	ldr	r0, [r4, #16]
   19688:	cmp	r1, r0
   1968c:	bcc	196a4 <flatcc_json_printer_uint16_vector_field@@Base+0x2b4>
   19690:	ldr	r2, [r4, #44]	; 0x2c
   19694:	mov	r0, r4
   19698:	mov	r1, #0
   1969c:	blx	r2
   196a0:	ldr	r1, [r4, #20]
   196a4:	ldrh	r0, [r7], #2
   196a8:	bl	15614 <flatcc_json_printer_uint16@@Base+0x2c>
   196ac:	ldr	r1, [r4, #20]
   196b0:	cmp	r9, #0
   196b4:	add	r0, r1, r0
   196b8:	str	r0, [r4, #20]
   196bc:	bne	195b0 <flatcc_json_printer_uint16_vector_field@@Base+0x1c0>
   196c0:	ldrb	r1, [r4, #25]
   196c4:	ldr	r0, [r4, #20]
   196c8:	cmp	r1, #0
   196cc:	beq	1978c <flatcc_json_printer_uint16_vector_field@@Base+0x39c>
   196d0:	add	r1, r0, #1
   196d4:	str	r1, [r4, #20]
   196d8:	mov	r1, #10
   196dc:	strb	r1, [r0]
   196e0:	ldr	r0, [r4, #32]
   196e4:	sub	r2, r0, #1
   196e8:	str	r2, [r4, #32]
   196ec:	ldrb	r3, [r4, #25]
   196f0:	ldr	r0, [r4, #20]
   196f4:	ldr	r1, [r4, #16]
   196f8:	mla	r7, r2, r3, r0
   196fc:	mul	r5, r2, r3
   19700:	cmp	r7, r1
   19704:	bls	19774 <flatcc_json_printer_uint16_vector_field@@Base+0x384>
   19708:	cmp	r0, r1
   1970c:	bcc	19728 <flatcc_json_printer_uint16_vector_field@@Base+0x338>
   19710:	ldr	r2, [r4, #44]	; 0x2c
   19714:	mov	r0, r4
   19718:	mov	r1, #0
   1971c:	blx	r2
   19720:	ldr	r1, [r4, #16]
   19724:	ldr	r0, [r4, #20]
   19728:	sub	r6, r1, r0
   1972c:	cmp	r6, r5
   19730:	bcs	19774 <flatcc_json_printer_uint16_vector_field@@Base+0x384>
   19734:	mov	r1, #32
   19738:	mov	r2, r6
   1973c:	bl	12940 <memset@plt>
   19740:	ldr	r0, [r4, #20]
   19744:	ldr	r2, [r4, #44]	; 0x2c
   19748:	mov	r1, #0
   1974c:	add	r0, r0, r6
   19750:	str	r0, [r4, #20]
   19754:	mov	r0, r4
   19758:	blx	r2
   1975c:	ldr	r1, [r4, #16]
   19760:	ldr	r0, [r4, #20]
   19764:	sub	r5, r5, r6
   19768:	sub	r6, r1, r0
   1976c:	cmp	r5, r6
   19770:	bhi	19734 <flatcc_json_printer_uint16_vector_field@@Base+0x344>
   19774:	mov	r1, #32
   19778:	mov	r2, r5
   1977c:	bl	12940 <memset@plt>
   19780:	ldr	r0, [r4, #20]
   19784:	add	r0, r0, r5
   19788:	str	r0, [r4, #20]
   1978c:	add	r1, r0, #1
   19790:	str	r1, [r4, #20]
   19794:	mov	r1, #93	; 0x5d
   19798:	strb	r1, [r0]
   1979c:	sub	sp, fp, #28
   197a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000197a4 <flatcc_json_printer_uint32_vector_field@@Base>:
   197a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   197a8:	add	fp, sp, #28
   197ac:	sub	sp, sp, #4
   197b0:	mov	r4, r0
   197b4:	mov	r0, #4
   197b8:	add	r0, r0, r2, lsl #1
   197bc:	ldr	r2, [r1, #8]
   197c0:	cmp	r0, r2
   197c4:	bge	197e4 <flatcc_json_printer_uint32_vector_field@@Base+0x40>
   197c8:	ldr	r2, [r1, #4]
   197cc:	add	r0, r2, r0
   197d0:	ldrh	r0, [r0]
   197d4:	cmp	r0, #0
   197d8:	ldrne	r2, [r1]
   197dc:	addsne	r8, r2, r0
   197e0:	bne	197ec <flatcc_json_printer_uint32_vector_field@@Base+0x48>
   197e4:	sub	sp, fp, #28
   197e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   197ec:	ldr	r0, [r1, #16]
   197f0:	ldr	r2, [fp, #8]
   197f4:	add	r7, r0, #1
   197f8:	cmp	r0, #0
   197fc:	str	r7, [r1, #16]
   19800:	ldrne	r0, [r4, #20]
   19804:	addne	r1, r0, #1
   19808:	strne	r1, [r4, #20]
   1980c:	movne	r1, #44	; 0x2c
   19810:	strbne	r1, [r0]
   19814:	mov	r1, r3
   19818:	ldr	r0, [r8]
   1981c:	ldr	r7, [r8, r0]!
   19820:	mov	r0, r4
   19824:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   19828:	ldr	r1, [r4, #32]
   1982c:	ldr	r0, [r4, #20]
   19830:	cmp	r7, #0
   19834:	add	r1, r1, #1
   19838:	str	r1, [r4, #32]
   1983c:	add	r1, r0, #1
   19840:	str	r1, [r4, #20]
   19844:	mov	r1, #91	; 0x5b
   19848:	strb	r1, [r0]
   1984c:	beq	19a74 <flatcc_json_printer_uint32_vector_field@@Base+0x2d0>
   19850:	ldrb	r0, [r4, #25]
   19854:	ldr	r1, [r4, #20]
   19858:	cmp	r0, #0
   1985c:	beq	19918 <flatcc_json_printer_uint32_vector_field@@Base+0x174>
   19860:	add	r0, r1, #1
   19864:	str	r0, [r4, #20]
   19868:	mov	r0, #10
   1986c:	strb	r0, [r1]
   19870:	ldr	r0, [r4, #20]
   19874:	ldrb	r2, [r4, #25]
   19878:	ldr	r3, [r4, #32]
   1987c:	ldr	r1, [r4, #16]
   19880:	mla	r6, r3, r2, r0
   19884:	mul	r5, r3, r2
   19888:	cmp	r6, r1
   1988c:	bls	198fc <flatcc_json_printer_uint32_vector_field@@Base+0x158>
   19890:	cmp	r0, r1
   19894:	bcc	198b0 <flatcc_json_printer_uint32_vector_field@@Base+0x10c>
   19898:	ldr	r2, [r4, #44]	; 0x2c
   1989c:	mov	r0, r4
   198a0:	mov	r1, #0
   198a4:	blx	r2
   198a8:	ldr	r1, [r4, #16]
   198ac:	ldr	r0, [r4, #20]
   198b0:	sub	r6, r1, r0
   198b4:	cmp	r6, r5
   198b8:	bcs	198fc <flatcc_json_printer_uint32_vector_field@@Base+0x158>
   198bc:	mov	r1, #32
   198c0:	mov	r2, r6
   198c4:	bl	12940 <memset@plt>
   198c8:	ldr	r0, [r4, #20]
   198cc:	ldr	r2, [r4, #44]	; 0x2c
   198d0:	mov	r1, #0
   198d4:	add	r0, r0, r6
   198d8:	str	r0, [r4, #20]
   198dc:	mov	r0, r4
   198e0:	blx	r2
   198e4:	ldr	r1, [r4, #16]
   198e8:	ldr	r0, [r4, #20]
   198ec:	sub	r5, r5, r6
   198f0:	sub	r6, r1, r0
   198f4:	cmp	r5, r6
   198f8:	bhi	198bc <flatcc_json_printer_uint32_vector_field@@Base+0x118>
   198fc:	mov	r1, #32
   19900:	mov	r2, r5
   19904:	bl	12940 <memset@plt>
   19908:	ldr	r0, [r4, #20]
   1990c:	add	r1, r0, r5
   19910:	str	r1, [r4, #20]
   19914:	b	19938 <flatcc_json_printer_uint32_vector_field@@Base+0x194>
   19918:	ldr	r0, [r4, #16]
   1991c:	cmp	r1, r0
   19920:	bcc	19938 <flatcc_json_printer_uint32_vector_field@@Base+0x194>
   19924:	ldr	r2, [r4, #44]	; 0x2c
   19928:	mov	r0, r4
   1992c:	mov	r1, #0
   19930:	blx	r2
   19934:	ldr	r1, [r4, #20]
   19938:	ldr	r0, [r8, #4]
   1993c:	bl	157b0 <flatcc_json_printer_uint32@@Base+0x2c>
   19940:	ldr	r1, [r4, #20]
   19944:	subs	r9, r7, #1
   19948:	add	r0, r1, r0
   1994c:	str	r0, [r4, #20]
   19950:	beq	19a74 <flatcc_json_printer_uint32_vector_field@@Base+0x2d0>
   19954:	ldr	r0, [r4, #20]
   19958:	add	r7, r8, #8
   1995c:	mov	r8, #44	; 0x2c
   19960:	mov	sl, #10
   19964:	add	r1, r0, #1
   19968:	sub	r9, r9, #1
   1996c:	str	r1, [r4, #20]
   19970:	strb	r8, [r0]
   19974:	ldrb	r0, [r4, #25]
   19978:	ldr	r1, [r4, #20]
   1997c:	cmp	r0, #0
   19980:	beq	19a38 <flatcc_json_printer_uint32_vector_field@@Base+0x294>
   19984:	add	r0, r1, #1
   19988:	str	r0, [r4, #20]
   1998c:	strb	sl, [r1]
   19990:	ldr	r0, [r4, #20]
   19994:	ldrb	r2, [r4, #25]
   19998:	ldr	r3, [r4, #32]
   1999c:	ldr	r1, [r4, #16]
   199a0:	mla	r6, r3, r2, r0
   199a4:	mul	r5, r3, r2
   199a8:	cmp	r6, r1
   199ac:	bls	19a1c <flatcc_json_printer_uint32_vector_field@@Base+0x278>
   199b0:	cmp	r0, r1
   199b4:	bcc	199d0 <flatcc_json_printer_uint32_vector_field@@Base+0x22c>
   199b8:	ldr	r2, [r4, #44]	; 0x2c
   199bc:	mov	r0, r4
   199c0:	mov	r1, #0
   199c4:	blx	r2
   199c8:	ldr	r1, [r4, #16]
   199cc:	ldr	r0, [r4, #20]
   199d0:	sub	r6, r1, r0
   199d4:	cmp	r6, r5
   199d8:	bcs	19a1c <flatcc_json_printer_uint32_vector_field@@Base+0x278>
   199dc:	mov	r1, #32
   199e0:	mov	r2, r6
   199e4:	bl	12940 <memset@plt>
   199e8:	ldr	r0, [r4, #20]
   199ec:	ldr	r2, [r4, #44]	; 0x2c
   199f0:	mov	r1, #0
   199f4:	add	r0, r0, r6
   199f8:	str	r0, [r4, #20]
   199fc:	mov	r0, r4
   19a00:	blx	r2
   19a04:	ldr	r1, [r4, #16]
   19a08:	ldr	r0, [r4, #20]
   19a0c:	sub	r5, r5, r6
   19a10:	sub	r6, r1, r0
   19a14:	cmp	r5, r6
   19a18:	bhi	199dc <flatcc_json_printer_uint32_vector_field@@Base+0x238>
   19a1c:	mov	r1, #32
   19a20:	mov	r2, r5
   19a24:	bl	12940 <memset@plt>
   19a28:	ldr	r0, [r4, #20]
   19a2c:	add	r1, r0, r5
   19a30:	str	r1, [r4, #20]
   19a34:	b	19a58 <flatcc_json_printer_uint32_vector_field@@Base+0x2b4>
   19a38:	ldr	r0, [r4, #16]
   19a3c:	cmp	r1, r0
   19a40:	bcc	19a58 <flatcc_json_printer_uint32_vector_field@@Base+0x2b4>
   19a44:	ldr	r2, [r4, #44]	; 0x2c
   19a48:	mov	r0, r4
   19a4c:	mov	r1, #0
   19a50:	blx	r2
   19a54:	ldr	r1, [r4, #20]
   19a58:	ldr	r0, [r7], #4
   19a5c:	bl	157b0 <flatcc_json_printer_uint32@@Base+0x2c>
   19a60:	ldr	r1, [r4, #20]
   19a64:	cmp	r9, #0
   19a68:	add	r0, r1, r0
   19a6c:	str	r0, [r4, #20]
   19a70:	bne	19964 <flatcc_json_printer_uint32_vector_field@@Base+0x1c0>
   19a74:	ldrb	r1, [r4, #25]
   19a78:	ldr	r0, [r4, #20]
   19a7c:	cmp	r1, #0
   19a80:	beq	19b40 <flatcc_json_printer_uint32_vector_field@@Base+0x39c>
   19a84:	add	r1, r0, #1
   19a88:	str	r1, [r4, #20]
   19a8c:	mov	r1, #10
   19a90:	strb	r1, [r0]
   19a94:	ldr	r0, [r4, #32]
   19a98:	sub	r2, r0, #1
   19a9c:	str	r2, [r4, #32]
   19aa0:	ldrb	r3, [r4, #25]
   19aa4:	ldr	r0, [r4, #20]
   19aa8:	ldr	r1, [r4, #16]
   19aac:	mla	r7, r2, r3, r0
   19ab0:	mul	r5, r2, r3
   19ab4:	cmp	r7, r1
   19ab8:	bls	19b28 <flatcc_json_printer_uint32_vector_field@@Base+0x384>
   19abc:	cmp	r0, r1
   19ac0:	bcc	19adc <flatcc_json_printer_uint32_vector_field@@Base+0x338>
   19ac4:	ldr	r2, [r4, #44]	; 0x2c
   19ac8:	mov	r0, r4
   19acc:	mov	r1, #0
   19ad0:	blx	r2
   19ad4:	ldr	r1, [r4, #16]
   19ad8:	ldr	r0, [r4, #20]
   19adc:	sub	r6, r1, r0
   19ae0:	cmp	r6, r5
   19ae4:	bcs	19b28 <flatcc_json_printer_uint32_vector_field@@Base+0x384>
   19ae8:	mov	r1, #32
   19aec:	mov	r2, r6
   19af0:	bl	12940 <memset@plt>
   19af4:	ldr	r0, [r4, #20]
   19af8:	ldr	r2, [r4, #44]	; 0x2c
   19afc:	mov	r1, #0
   19b00:	add	r0, r0, r6
   19b04:	str	r0, [r4, #20]
   19b08:	mov	r0, r4
   19b0c:	blx	r2
   19b10:	ldr	r1, [r4, #16]
   19b14:	ldr	r0, [r4, #20]
   19b18:	sub	r5, r5, r6
   19b1c:	sub	r6, r1, r0
   19b20:	cmp	r5, r6
   19b24:	bhi	19ae8 <flatcc_json_printer_uint32_vector_field@@Base+0x344>
   19b28:	mov	r1, #32
   19b2c:	mov	r2, r5
   19b30:	bl	12940 <memset@plt>
   19b34:	ldr	r0, [r4, #20]
   19b38:	add	r0, r0, r5
   19b3c:	str	r0, [r4, #20]
   19b40:	add	r1, r0, #1
   19b44:	str	r1, [r4, #20]
   19b48:	mov	r1, #93	; 0x5d
   19b4c:	strb	r1, [r0]
   19b50:	sub	sp, fp, #28
   19b54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00019b58 <flatcc_json_printer_uint64_vector_field@@Base>:
   19b58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19b5c:	add	fp, sp, #28
   19b60:	sub	sp, sp, #4
   19b64:	mov	r4, r0
   19b68:	mov	r0, #4
   19b6c:	add	r0, r0, r2, lsl #1
   19b70:	ldr	r2, [r1, #8]
   19b74:	cmp	r0, r2
   19b78:	bge	19b98 <flatcc_json_printer_uint64_vector_field@@Base+0x40>
   19b7c:	ldr	r2, [r1, #4]
   19b80:	add	r0, r2, r0
   19b84:	ldrh	r0, [r0]
   19b88:	cmp	r0, #0
   19b8c:	ldrne	r2, [r1]
   19b90:	addsne	r8, r2, r0
   19b94:	bne	19ba0 <flatcc_json_printer_uint64_vector_field@@Base+0x48>
   19b98:	sub	sp, fp, #28
   19b9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19ba0:	ldr	r0, [r1, #16]
   19ba4:	ldr	r2, [fp, #8]
   19ba8:	add	r7, r0, #1
   19bac:	cmp	r0, #0
   19bb0:	str	r7, [r1, #16]
   19bb4:	ldrne	r0, [r4, #20]
   19bb8:	addne	r1, r0, #1
   19bbc:	strne	r1, [r4, #20]
   19bc0:	movne	r1, #44	; 0x2c
   19bc4:	strbne	r1, [r0]
   19bc8:	mov	r1, r3
   19bcc:	ldr	r0, [r8]
   19bd0:	ldr	r7, [r8, r0]!
   19bd4:	mov	r0, r4
   19bd8:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   19bdc:	ldr	r1, [r4, #32]
   19be0:	ldr	r0, [r4, #20]
   19be4:	cmp	r7, #0
   19be8:	add	r1, r1, #1
   19bec:	str	r1, [r4, #32]
   19bf0:	add	r1, r0, #1
   19bf4:	str	r1, [r4, #20]
   19bf8:	mov	r1, #91	; 0x5b
   19bfc:	strb	r1, [r0]
   19c00:	beq	19e2c <flatcc_json_printer_uint64_vector_field@@Base+0x2d4>
   19c04:	ldrb	r0, [r4, #25]
   19c08:	ldr	r2, [r4, #20]
   19c0c:	cmp	r0, #0
   19c10:	beq	19ccc <flatcc_json_printer_uint64_vector_field@@Base+0x174>
   19c14:	add	r0, r2, #1
   19c18:	str	r0, [r4, #20]
   19c1c:	mov	r0, #10
   19c20:	strb	r0, [r2]
   19c24:	ldr	r0, [r4, #20]
   19c28:	ldrb	r2, [r4, #25]
   19c2c:	ldr	r3, [r4, #32]
   19c30:	ldr	r1, [r4, #16]
   19c34:	mla	r6, r3, r2, r0
   19c38:	mul	r5, r3, r2
   19c3c:	cmp	r6, r1
   19c40:	bls	19cb0 <flatcc_json_printer_uint64_vector_field@@Base+0x158>
   19c44:	cmp	r0, r1
   19c48:	bcc	19c64 <flatcc_json_printer_uint64_vector_field@@Base+0x10c>
   19c4c:	ldr	r2, [r4, #44]	; 0x2c
   19c50:	mov	r0, r4
   19c54:	mov	r1, #0
   19c58:	blx	r2
   19c5c:	ldr	r1, [r4, #16]
   19c60:	ldr	r0, [r4, #20]
   19c64:	sub	r6, r1, r0
   19c68:	cmp	r6, r5
   19c6c:	bcs	19cb0 <flatcc_json_printer_uint64_vector_field@@Base+0x158>
   19c70:	mov	r1, #32
   19c74:	mov	r2, r6
   19c78:	bl	12940 <memset@plt>
   19c7c:	ldr	r0, [r4, #20]
   19c80:	ldr	r2, [r4, #44]	; 0x2c
   19c84:	mov	r1, #0
   19c88:	add	r0, r0, r6
   19c8c:	str	r0, [r4, #20]
   19c90:	mov	r0, r4
   19c94:	blx	r2
   19c98:	ldr	r1, [r4, #16]
   19c9c:	ldr	r0, [r4, #20]
   19ca0:	sub	r5, r5, r6
   19ca4:	sub	r6, r1, r0
   19ca8:	cmp	r5, r6
   19cac:	bhi	19c70 <flatcc_json_printer_uint64_vector_field@@Base+0x118>
   19cb0:	mov	r1, #32
   19cb4:	mov	r2, r5
   19cb8:	bl	12940 <memset@plt>
   19cbc:	ldr	r0, [r4, #20]
   19cc0:	add	r2, r0, r5
   19cc4:	str	r2, [r4, #20]
   19cc8:	b	19cec <flatcc_json_printer_uint64_vector_field@@Base+0x194>
   19ccc:	ldr	r0, [r4, #16]
   19cd0:	cmp	r2, r0
   19cd4:	bcc	19cec <flatcc_json_printer_uint64_vector_field@@Base+0x194>
   19cd8:	ldr	r2, [r4, #44]	; 0x2c
   19cdc:	mov	r0, r4
   19ce0:	mov	r1, #0
   19ce4:	blx	r2
   19ce8:	ldr	r2, [r4, #20]
   19cec:	ldrd	r0, [r8, #4]
   19cf0:	bl	15b18 <flatcc_json_printer_uint64@@Base+0x30>
   19cf4:	ldr	r1, [r4, #20]
   19cf8:	subs	r9, r7, #1
   19cfc:	add	r0, r1, r0
   19d00:	str	r0, [r4, #20]
   19d04:	beq	19e2c <flatcc_json_printer_uint64_vector_field@@Base+0x2d4>
   19d08:	ldr	r0, [r4, #20]
   19d0c:	add	r7, r8, #12
   19d10:	mov	r8, #44	; 0x2c
   19d14:	mov	sl, #10
   19d18:	add	r1, r0, #1
   19d1c:	sub	r9, r9, #1
   19d20:	str	r1, [r4, #20]
   19d24:	strb	r8, [r0]
   19d28:	ldrb	r0, [r4, #25]
   19d2c:	ldr	r2, [r4, #20]
   19d30:	cmp	r0, #0
   19d34:	beq	19dec <flatcc_json_printer_uint64_vector_field@@Base+0x294>
   19d38:	add	r0, r2, #1
   19d3c:	str	r0, [r4, #20]
   19d40:	strb	sl, [r2]
   19d44:	ldr	r0, [r4, #20]
   19d48:	ldrb	r2, [r4, #25]
   19d4c:	ldr	r3, [r4, #32]
   19d50:	ldr	r1, [r4, #16]
   19d54:	mla	r6, r3, r2, r0
   19d58:	mul	r5, r3, r2
   19d5c:	cmp	r6, r1
   19d60:	bls	19dd0 <flatcc_json_printer_uint64_vector_field@@Base+0x278>
   19d64:	cmp	r0, r1
   19d68:	bcc	19d84 <flatcc_json_printer_uint64_vector_field@@Base+0x22c>
   19d6c:	ldr	r2, [r4, #44]	; 0x2c
   19d70:	mov	r0, r4
   19d74:	mov	r1, #0
   19d78:	blx	r2
   19d7c:	ldr	r1, [r4, #16]
   19d80:	ldr	r0, [r4, #20]
   19d84:	sub	r6, r1, r0
   19d88:	cmp	r6, r5
   19d8c:	bcs	19dd0 <flatcc_json_printer_uint64_vector_field@@Base+0x278>
   19d90:	mov	r1, #32
   19d94:	mov	r2, r6
   19d98:	bl	12940 <memset@plt>
   19d9c:	ldr	r0, [r4, #20]
   19da0:	ldr	r2, [r4, #44]	; 0x2c
   19da4:	mov	r1, #0
   19da8:	add	r0, r0, r6
   19dac:	str	r0, [r4, #20]
   19db0:	mov	r0, r4
   19db4:	blx	r2
   19db8:	ldr	r1, [r4, #16]
   19dbc:	ldr	r0, [r4, #20]
   19dc0:	sub	r5, r5, r6
   19dc4:	sub	r6, r1, r0
   19dc8:	cmp	r5, r6
   19dcc:	bhi	19d90 <flatcc_json_printer_uint64_vector_field@@Base+0x238>
   19dd0:	mov	r1, #32
   19dd4:	mov	r2, r5
   19dd8:	bl	12940 <memset@plt>
   19ddc:	ldr	r0, [r4, #20]
   19de0:	add	r2, r0, r5
   19de4:	str	r2, [r4, #20]
   19de8:	b	19e0c <flatcc_json_printer_uint64_vector_field@@Base+0x2b4>
   19dec:	ldr	r0, [r4, #16]
   19df0:	cmp	r2, r0
   19df4:	bcc	19e0c <flatcc_json_printer_uint64_vector_field@@Base+0x2b4>
   19df8:	ldr	r2, [r4, #44]	; 0x2c
   19dfc:	mov	r0, r4
   19e00:	mov	r1, #0
   19e04:	blx	r2
   19e08:	ldr	r2, [r4, #20]
   19e0c:	ldrd	r0, [r7]
   19e10:	bl	15b18 <flatcc_json_printer_uint64@@Base+0x30>
   19e14:	ldr	r1, [r4, #20]
   19e18:	add	r7, r7, #8
   19e1c:	cmp	r9, #0
   19e20:	add	r0, r1, r0
   19e24:	str	r0, [r4, #20]
   19e28:	bne	19d18 <flatcc_json_printer_uint64_vector_field@@Base+0x1c0>
   19e2c:	ldrb	r1, [r4, #25]
   19e30:	ldr	r0, [r4, #20]
   19e34:	cmp	r1, #0
   19e38:	beq	19ef8 <flatcc_json_printer_uint64_vector_field@@Base+0x3a0>
   19e3c:	add	r1, r0, #1
   19e40:	str	r1, [r4, #20]
   19e44:	mov	r1, #10
   19e48:	strb	r1, [r0]
   19e4c:	ldr	r0, [r4, #32]
   19e50:	sub	r2, r0, #1
   19e54:	str	r2, [r4, #32]
   19e58:	ldrb	r3, [r4, #25]
   19e5c:	ldr	r0, [r4, #20]
   19e60:	ldr	r1, [r4, #16]
   19e64:	mla	r7, r2, r3, r0
   19e68:	mul	r5, r2, r3
   19e6c:	cmp	r7, r1
   19e70:	bls	19ee0 <flatcc_json_printer_uint64_vector_field@@Base+0x388>
   19e74:	cmp	r0, r1
   19e78:	bcc	19e94 <flatcc_json_printer_uint64_vector_field@@Base+0x33c>
   19e7c:	ldr	r2, [r4, #44]	; 0x2c
   19e80:	mov	r0, r4
   19e84:	mov	r1, #0
   19e88:	blx	r2
   19e8c:	ldr	r1, [r4, #16]
   19e90:	ldr	r0, [r4, #20]
   19e94:	sub	r6, r1, r0
   19e98:	cmp	r6, r5
   19e9c:	bcs	19ee0 <flatcc_json_printer_uint64_vector_field@@Base+0x388>
   19ea0:	mov	r1, #32
   19ea4:	mov	r2, r6
   19ea8:	bl	12940 <memset@plt>
   19eac:	ldr	r0, [r4, #20]
   19eb0:	ldr	r2, [r4, #44]	; 0x2c
   19eb4:	mov	r1, #0
   19eb8:	add	r0, r0, r6
   19ebc:	str	r0, [r4, #20]
   19ec0:	mov	r0, r4
   19ec4:	blx	r2
   19ec8:	ldr	r1, [r4, #16]
   19ecc:	ldr	r0, [r4, #20]
   19ed0:	sub	r5, r5, r6
   19ed4:	sub	r6, r1, r0
   19ed8:	cmp	r5, r6
   19edc:	bhi	19ea0 <flatcc_json_printer_uint64_vector_field@@Base+0x348>
   19ee0:	mov	r1, #32
   19ee4:	mov	r2, r5
   19ee8:	bl	12940 <memset@plt>
   19eec:	ldr	r0, [r4, #20]
   19ef0:	add	r0, r0, r5
   19ef4:	str	r0, [r4, #20]
   19ef8:	add	r1, r0, #1
   19efc:	str	r1, [r4, #20]
   19f00:	mov	r1, #93	; 0x5d
   19f04:	strb	r1, [r0]
   19f08:	sub	sp, fp, #28
   19f0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00019f10 <flatcc_json_printer_int8_vector_field@@Base>:
   19f10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19f14:	add	fp, sp, #28
   19f18:	sub	sp, sp, #4
   19f1c:	mov	r4, r0
   19f20:	mov	r0, #4
   19f24:	add	r0, r0, r2, lsl #1
   19f28:	ldr	r2, [r1, #8]
   19f2c:	cmp	r0, r2
   19f30:	bge	19f50 <flatcc_json_printer_int8_vector_field@@Base+0x40>
   19f34:	ldr	r2, [r1, #4]
   19f38:	add	r0, r2, r0
   19f3c:	ldrh	r0, [r0]
   19f40:	cmp	r0, #0
   19f44:	ldrne	r2, [r1]
   19f48:	addsne	r9, r2, r0
   19f4c:	bne	19f58 <flatcc_json_printer_int8_vector_field@@Base+0x48>
   19f50:	sub	sp, fp, #28
   19f54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19f58:	ldr	r0, [r1, #16]
   19f5c:	ldr	r2, [fp, #8]
   19f60:	add	r7, r0, #1
   19f64:	cmp	r0, #0
   19f68:	str	r7, [r1, #16]
   19f6c:	ldrne	r0, [r4, #20]
   19f70:	addne	r1, r0, #1
   19f74:	strne	r1, [r4, #20]
   19f78:	movne	r1, #44	; 0x2c
   19f7c:	strbne	r1, [r0]
   19f80:	mov	r1, r3
   19f84:	ldr	r0, [r9]
   19f88:	ldr	r8, [r9, r0]!
   19f8c:	mov	r0, r4
   19f90:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   19f94:	ldr	r1, [r4, #32]
   19f98:	ldr	r0, [r4, #20]
   19f9c:	cmp	r8, #0
   19fa0:	add	r1, r1, #1
   19fa4:	str	r1, [r4, #32]
   19fa8:	add	r1, r0, #1
   19fac:	str	r1, [r4, #20]
   19fb0:	mov	r1, #91	; 0x5b
   19fb4:	strb	r1, [r0]
   19fb8:	beq	1a364 <flatcc_json_printer_int8_vector_field@@Base+0x454>
   19fbc:	ldrb	r1, [r4, #25]
   19fc0:	ldr	r0, [r4, #20]
   19fc4:	cmp	r1, #0
   19fc8:	beq	1a084 <flatcc_json_printer_int8_vector_field@@Base+0x174>
   19fcc:	add	r1, r0, #1
   19fd0:	str	r1, [r4, #20]
   19fd4:	mov	r1, #10
   19fd8:	strb	r1, [r0]
   19fdc:	ldr	r0, [r4, #20]
   19fe0:	ldrb	r2, [r4, #25]
   19fe4:	ldr	r3, [r4, #32]
   19fe8:	ldr	r1, [r4, #16]
   19fec:	mla	r7, r3, r2, r0
   19ff0:	mul	r5, r3, r2
   19ff4:	cmp	r7, r1
   19ff8:	bls	1a068 <flatcc_json_printer_int8_vector_field@@Base+0x158>
   19ffc:	cmp	r0, r1
   1a000:	bcc	1a01c <flatcc_json_printer_int8_vector_field@@Base+0x10c>
   1a004:	ldr	r2, [r4, #44]	; 0x2c
   1a008:	mov	r0, r4
   1a00c:	mov	r1, #0
   1a010:	blx	r2
   1a014:	ldr	r1, [r4, #16]
   1a018:	ldr	r0, [r4, #20]
   1a01c:	sub	r6, r1, r0
   1a020:	cmp	r6, r5
   1a024:	bcs	1a068 <flatcc_json_printer_int8_vector_field@@Base+0x158>
   1a028:	mov	r1, #32
   1a02c:	mov	r2, r6
   1a030:	bl	12940 <memset@plt>
   1a034:	ldr	r0, [r4, #20]
   1a038:	ldr	r2, [r4, #44]	; 0x2c
   1a03c:	mov	r1, #0
   1a040:	add	r0, r0, r6
   1a044:	str	r0, [r4, #20]
   1a048:	mov	r0, r4
   1a04c:	blx	r2
   1a050:	ldr	r1, [r4, #16]
   1a054:	ldr	r0, [r4, #20]
   1a058:	sub	r5, r5, r6
   1a05c:	sub	r6, r1, r0
   1a060:	cmp	r5, r6
   1a064:	bhi	1a028 <flatcc_json_printer_int8_vector_field@@Base+0x118>
   1a068:	mov	r1, #32
   1a06c:	mov	r2, r5
   1a070:	bl	12940 <memset@plt>
   1a074:	ldr	r0, [r4, #20]
   1a078:	add	r0, r0, r5
   1a07c:	str	r0, [r4, #20]
   1a080:	b	1a0a4 <flatcc_json_printer_int8_vector_field@@Base+0x194>
   1a084:	ldr	r1, [r4, #16]
   1a088:	cmp	r0, r1
   1a08c:	bcc	1a0a4 <flatcc_json_printer_int8_vector_field@@Base+0x194>
   1a090:	ldr	r2, [r4, #44]	; 0x2c
   1a094:	mov	r0, r4
   1a098:	mov	r1, #0
   1a09c:	blx	r2
   1a0a0:	ldr	r0, [r4, #20]
   1a0a4:	ldrb	r1, [r9, #4]
   1a0a8:	sxtb	r2, r1
   1a0ac:	lsr	r1, r1, #7
   1a0b0:	cmn	r2, #1
   1a0b4:	movle	r3, #45	; 0x2d
   1a0b8:	rsble	r2, r2, #0
   1a0bc:	strble	r3, [r0], #1
   1a0c0:	uxtb	r3, r2
   1a0c4:	cmp	r3, #100	; 0x64
   1a0c8:	bcc	1a114 <flatcc_json_printer_int8_vector_field@@Base+0x204>
   1a0cc:	mov	r2, #0
   1a0d0:	strb	r2, [r0, #3]
   1a0d4:	movw	r2, #34079	; 0x851f
   1a0d8:	movt	r2, #20971	; 0x51eb
   1a0dc:	umull	r2, r7, r3, r2
   1a0e0:	mov	r2, #48	; 0x30
   1a0e4:	orr	r2, r2, r7, lsr #5
   1a0e8:	strb	r2, [r0]
   1a0ec:	lsr	r2, r7, #5
   1a0f0:	mov	r7, #100	; 0x64
   1a0f4:	mls	r2, r2, r7, r3
   1a0f8:	ldr	r3, [pc, #840]	; 1a448 <flatcc_json_printer_int8_vector_field@@Base+0x538>
   1a0fc:	add	r3, pc, r3
   1a100:	add	r2, r3, r2, lsl #1
   1a104:	ldrh	r2, [r2]
   1a108:	strh	r2, [r0, #1]
   1a10c:	mov	r0, #3
   1a110:	b	1a16c <flatcc_json_printer_int8_vector_field@@Base+0x25c>
   1a114:	cmp	r3, #10
   1a118:	bcc	1a158 <flatcc_json_printer_int8_vector_field@@Base+0x248>
   1a11c:	mov	r2, #0
   1a120:	strb	r2, [r0, #2]
   1a124:	movw	r2, #34079	; 0x851f
   1a128:	movt	r2, #20971	; 0x51eb
   1a12c:	umull	r2, r7, r3, r2
   1a130:	lsr	r2, r7, #5
   1a134:	mov	r7, #100	; 0x64
   1a138:	mls	r2, r2, r7, r3
   1a13c:	ldr	r3, [pc, #776]	; 1a44c <flatcc_json_printer_int8_vector_field@@Base+0x53c>
   1a140:	add	r3, pc, r3
   1a144:	add	r2, r3, r2, lsl #1
   1a148:	ldrh	r2, [r2]
   1a14c:	strh	r2, [r0]
   1a150:	mov	r0, #2
   1a154:	b	1a16c <flatcc_json_printer_int8_vector_field@@Base+0x25c>
   1a158:	mov	r3, #0
   1a15c:	add	r2, r2, #48	; 0x30
   1a160:	strb	r3, [r0, #1]
   1a164:	strb	r2, [r0]
   1a168:	mov	r0, #1
   1a16c:	add	r0, r0, r1
   1a170:	ldr	r1, [r4, #20]
   1a174:	subs	r8, r8, #1
   1a178:	add	r0, r1, r0
   1a17c:	str	r0, [r4, #20]
   1a180:	beq	1a364 <flatcc_json_printer_int8_vector_field@@Base+0x454>
   1a184:	ldr	r0, [r4, #20]
   1a188:	add	r7, r9, #5
   1a18c:	mov	r9, #44	; 0x2c
   1a190:	mov	sl, #0
   1a194:	add	r1, r0, #1
   1a198:	str	r1, [r4, #20]
   1a19c:	strb	r9, [r0]
   1a1a0:	ldrb	r1, [r4, #25]
   1a1a4:	ldr	r0, [r4, #20]
   1a1a8:	cmp	r1, #0
   1a1ac:	beq	1a268 <flatcc_json_printer_int8_vector_field@@Base+0x358>
   1a1b0:	add	r1, r0, #1
   1a1b4:	str	r1, [r4, #20]
   1a1b8:	mov	r1, #10
   1a1bc:	strb	r1, [r0]
   1a1c0:	ldr	r0, [r4, #20]
   1a1c4:	ldrb	r2, [r4, #25]
   1a1c8:	ldr	r3, [r4, #32]
   1a1cc:	ldr	r1, [r4, #16]
   1a1d0:	mla	r6, r3, r2, r0
   1a1d4:	mul	r5, r3, r2
   1a1d8:	cmp	r6, r1
   1a1dc:	bls	1a24c <flatcc_json_printer_int8_vector_field@@Base+0x33c>
   1a1e0:	cmp	r0, r1
   1a1e4:	bcc	1a200 <flatcc_json_printer_int8_vector_field@@Base+0x2f0>
   1a1e8:	ldr	r2, [r4, #44]	; 0x2c
   1a1ec:	mov	r0, r4
   1a1f0:	mov	r1, #0
   1a1f4:	blx	r2
   1a1f8:	ldr	r1, [r4, #16]
   1a1fc:	ldr	r0, [r4, #20]
   1a200:	sub	r6, r1, r0
   1a204:	cmp	r6, r5
   1a208:	bcs	1a24c <flatcc_json_printer_int8_vector_field@@Base+0x33c>
   1a20c:	mov	r1, #32
   1a210:	mov	r2, r6
   1a214:	bl	12940 <memset@plt>
   1a218:	ldr	r0, [r4, #20]
   1a21c:	ldr	r2, [r4, #44]	; 0x2c
   1a220:	mov	r1, #0
   1a224:	add	r0, r0, r6
   1a228:	str	r0, [r4, #20]
   1a22c:	mov	r0, r4
   1a230:	blx	r2
   1a234:	ldr	r1, [r4, #16]
   1a238:	ldr	r0, [r4, #20]
   1a23c:	sub	r5, r5, r6
   1a240:	sub	r6, r1, r0
   1a244:	cmp	r5, r6
   1a248:	bhi	1a20c <flatcc_json_printer_int8_vector_field@@Base+0x2fc>
   1a24c:	mov	r1, #32
   1a250:	mov	r2, r5
   1a254:	bl	12940 <memset@plt>
   1a258:	ldr	r0, [r4, #20]
   1a25c:	add	r0, r0, r5
   1a260:	str	r0, [r4, #20]
   1a264:	b	1a288 <flatcc_json_printer_int8_vector_field@@Base+0x378>
   1a268:	ldr	r1, [r4, #16]
   1a26c:	cmp	r0, r1
   1a270:	bcc	1a288 <flatcc_json_printer_int8_vector_field@@Base+0x378>
   1a274:	ldr	r2, [r4, #44]	; 0x2c
   1a278:	mov	r0, r4
   1a27c:	mov	r1, #0
   1a280:	blx	r2
   1a284:	ldr	r0, [r4, #20]
   1a288:	ldrb	r1, [r7]
   1a28c:	sub	r8, r8, #1
   1a290:	sxtb	r2, r1
   1a294:	lsr	r1, r1, #7
   1a298:	cmn	r2, #1
   1a29c:	movle	r3, #45	; 0x2d
   1a2a0:	rsble	r2, r2, #0
   1a2a4:	strble	r3, [r0], #1
   1a2a8:	uxtb	r3, r2
   1a2ac:	cmp	r3, #100	; 0x64
   1a2b0:	bcc	1a2f8 <flatcc_json_printer_int8_vector_field@@Base+0x3e8>
   1a2b4:	movw	r2, #34079	; 0x851f
   1a2b8:	strb	sl, [r0, #3]
   1a2bc:	movt	r2, #20971	; 0x51eb
   1a2c0:	umull	r2, r6, r3, r2
   1a2c4:	mov	r2, #48	; 0x30
   1a2c8:	orr	r2, r2, r6, lsr #5
   1a2cc:	strb	r2, [r0]
   1a2d0:	lsr	r2, r6, #5
   1a2d4:	mov	r6, #100	; 0x64
   1a2d8:	mls	r2, r2, r6, r3
   1a2dc:	ldr	r3, [pc, #364]	; 1a450 <flatcc_json_printer_int8_vector_field@@Base+0x540>
   1a2e0:	add	r3, pc, r3
   1a2e4:	add	r2, r3, r2, lsl #1
   1a2e8:	ldrh	r2, [r2]
   1a2ec:	strh	r2, [r0, #1]
   1a2f0:	mov	r0, #3
   1a2f4:	b	1a348 <flatcc_json_printer_int8_vector_field@@Base+0x438>
   1a2f8:	cmp	r3, #10
   1a2fc:	bcc	1a338 <flatcc_json_printer_int8_vector_field@@Base+0x428>
   1a300:	movw	r2, #34079	; 0x851f
   1a304:	strb	sl, [r0, #2]
   1a308:	movt	r2, #20971	; 0x51eb
   1a30c:	umull	r2, r6, r3, r2
   1a310:	lsr	r2, r6, #5
   1a314:	mov	r6, #100	; 0x64
   1a318:	mls	r2, r2, r6, r3
   1a31c:	ldr	r3, [pc, #304]	; 1a454 <flatcc_json_printer_int8_vector_field@@Base+0x544>
   1a320:	add	r3, pc, r3
   1a324:	add	r2, r3, r2, lsl #1
   1a328:	ldrh	r2, [r2]
   1a32c:	strh	r2, [r0]
   1a330:	mov	r0, #2
   1a334:	b	1a348 <flatcc_json_printer_int8_vector_field@@Base+0x438>
   1a338:	add	r2, r2, #48	; 0x30
   1a33c:	strb	sl, [r0, #1]
   1a340:	strb	r2, [r0]
   1a344:	mov	r0, #1
   1a348:	add	r0, r0, r1
   1a34c:	ldr	r1, [r4, #20]
   1a350:	add	r7, r7, #1
   1a354:	cmp	r8, #0
   1a358:	add	r0, r1, r0
   1a35c:	str	r0, [r4, #20]
   1a360:	bne	1a194 <flatcc_json_printer_int8_vector_field@@Base+0x284>
   1a364:	ldrb	r1, [r4, #25]
   1a368:	ldr	r0, [r4, #20]
   1a36c:	cmp	r1, #0
   1a370:	beq	1a430 <flatcc_json_printer_int8_vector_field@@Base+0x520>
   1a374:	add	r1, r0, #1
   1a378:	str	r1, [r4, #20]
   1a37c:	mov	r1, #10
   1a380:	strb	r1, [r0]
   1a384:	ldr	r0, [r4, #32]
   1a388:	sub	r2, r0, #1
   1a38c:	str	r2, [r4, #32]
   1a390:	ldrb	r3, [r4, #25]
   1a394:	ldr	r0, [r4, #20]
   1a398:	ldr	r1, [r4, #16]
   1a39c:	mla	r7, r2, r3, r0
   1a3a0:	mul	r5, r2, r3
   1a3a4:	cmp	r7, r1
   1a3a8:	bls	1a418 <flatcc_json_printer_int8_vector_field@@Base+0x508>
   1a3ac:	cmp	r0, r1
   1a3b0:	bcc	1a3cc <flatcc_json_printer_int8_vector_field@@Base+0x4bc>
   1a3b4:	ldr	r2, [r4, #44]	; 0x2c
   1a3b8:	mov	r0, r4
   1a3bc:	mov	r1, #0
   1a3c0:	blx	r2
   1a3c4:	ldr	r1, [r4, #16]
   1a3c8:	ldr	r0, [r4, #20]
   1a3cc:	sub	r6, r1, r0
   1a3d0:	cmp	r6, r5
   1a3d4:	bcs	1a418 <flatcc_json_printer_int8_vector_field@@Base+0x508>
   1a3d8:	mov	r1, #32
   1a3dc:	mov	r2, r6
   1a3e0:	bl	12940 <memset@plt>
   1a3e4:	ldr	r0, [r4, #20]
   1a3e8:	ldr	r2, [r4, #44]	; 0x2c
   1a3ec:	mov	r1, #0
   1a3f0:	add	r0, r0, r6
   1a3f4:	str	r0, [r4, #20]
   1a3f8:	mov	r0, r4
   1a3fc:	blx	r2
   1a400:	ldr	r1, [r4, #16]
   1a404:	ldr	r0, [r4, #20]
   1a408:	sub	r5, r5, r6
   1a40c:	sub	r6, r1, r0
   1a410:	cmp	r5, r6
   1a414:	bhi	1a3d8 <flatcc_json_printer_int8_vector_field@@Base+0x4c8>
   1a418:	mov	r1, #32
   1a41c:	mov	r2, r5
   1a420:	bl	12940 <memset@plt>
   1a424:	ldr	r0, [r4, #20]
   1a428:	add	r0, r0, r5
   1a42c:	str	r0, [r4, #20]
   1a430:	add	r1, r0, #1
   1a434:	str	r1, [r4, #20]
   1a438:	mov	r1, #93	; 0x5d
   1a43c:	strb	r1, [r0]
   1a440:	sub	sp, fp, #28
   1a444:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a448:	andeq	r7, r0, ip, asr #20
   1a44c:	andeq	r7, r0, r8, lsl #20
   1a450:	andeq	r7, r0, r8, ror #16
   1a454:	andeq	r7, r0, r8, lsr #16

0001a458 <flatcc_json_printer_int16_vector_field@@Base>:
   1a458:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a45c:	add	fp, sp, #28
   1a460:	sub	sp, sp, #4
   1a464:	mov	r4, r0
   1a468:	mov	r0, #4
   1a46c:	add	r0, r0, r2, lsl #1
   1a470:	ldr	r2, [r1, #8]
   1a474:	cmp	r0, r2
   1a478:	bge	1a498 <flatcc_json_printer_int16_vector_field@@Base+0x40>
   1a47c:	ldr	r2, [r1, #4]
   1a480:	add	r0, r2, r0
   1a484:	ldrh	r0, [r0]
   1a488:	cmp	r0, #0
   1a48c:	ldrne	r2, [r1]
   1a490:	addsne	r8, r2, r0
   1a494:	bne	1a4a0 <flatcc_json_printer_int16_vector_field@@Base+0x48>
   1a498:	sub	sp, fp, #28
   1a49c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a4a0:	ldr	r0, [r1, #16]
   1a4a4:	ldr	r2, [fp, #8]
   1a4a8:	add	r7, r0, #1
   1a4ac:	cmp	r0, #0
   1a4b0:	str	r7, [r1, #16]
   1a4b4:	ldrne	r0, [r4, #20]
   1a4b8:	addne	r1, r0, #1
   1a4bc:	strne	r1, [r4, #20]
   1a4c0:	movne	r1, #44	; 0x2c
   1a4c4:	strbne	r1, [r0]
   1a4c8:	mov	r1, r3
   1a4cc:	ldr	r0, [r8]
   1a4d0:	ldr	r7, [r8, r0]!
   1a4d4:	mov	r0, r4
   1a4d8:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   1a4dc:	ldr	r1, [r4, #32]
   1a4e0:	ldr	r0, [r4, #20]
   1a4e4:	cmp	r7, #0
   1a4e8:	add	r1, r1, #1
   1a4ec:	str	r1, [r4, #32]
   1a4f0:	add	r1, r0, #1
   1a4f4:	str	r1, [r4, #20]
   1a4f8:	mov	r1, #91	; 0x5b
   1a4fc:	strb	r1, [r0]
   1a500:	beq	1a76c <flatcc_json_printer_int16_vector_field@@Base+0x314>
   1a504:	ldrb	r0, [r4, #25]
   1a508:	ldr	r1, [r4, #20]
   1a50c:	cmp	r0, #0
   1a510:	beq	1a5cc <flatcc_json_printer_int16_vector_field@@Base+0x174>
   1a514:	add	r0, r1, #1
   1a518:	str	r0, [r4, #20]
   1a51c:	mov	r0, #10
   1a520:	strb	r0, [r1]
   1a524:	ldr	r0, [r4, #20]
   1a528:	ldrb	r2, [r4, #25]
   1a52c:	ldr	r3, [r4, #32]
   1a530:	ldr	r1, [r4, #16]
   1a534:	mla	r6, r3, r2, r0
   1a538:	mul	r5, r3, r2
   1a53c:	cmp	r6, r1
   1a540:	bls	1a5b0 <flatcc_json_printer_int16_vector_field@@Base+0x158>
   1a544:	cmp	r0, r1
   1a548:	bcc	1a564 <flatcc_json_printer_int16_vector_field@@Base+0x10c>
   1a54c:	ldr	r2, [r4, #44]	; 0x2c
   1a550:	mov	r0, r4
   1a554:	mov	r1, #0
   1a558:	blx	r2
   1a55c:	ldr	r1, [r4, #16]
   1a560:	ldr	r0, [r4, #20]
   1a564:	sub	r6, r1, r0
   1a568:	cmp	r6, r5
   1a56c:	bcs	1a5b0 <flatcc_json_printer_int16_vector_field@@Base+0x158>
   1a570:	mov	r1, #32
   1a574:	mov	r2, r6
   1a578:	bl	12940 <memset@plt>
   1a57c:	ldr	r0, [r4, #20]
   1a580:	ldr	r2, [r4, #44]	; 0x2c
   1a584:	mov	r1, #0
   1a588:	add	r0, r0, r6
   1a58c:	str	r0, [r4, #20]
   1a590:	mov	r0, r4
   1a594:	blx	r2
   1a598:	ldr	r1, [r4, #16]
   1a59c:	ldr	r0, [r4, #20]
   1a5a0:	sub	r5, r5, r6
   1a5a4:	sub	r6, r1, r0
   1a5a8:	cmp	r5, r6
   1a5ac:	bhi	1a570 <flatcc_json_printer_int16_vector_field@@Base+0x118>
   1a5b0:	mov	r1, #32
   1a5b4:	mov	r2, r5
   1a5b8:	bl	12940 <memset@plt>
   1a5bc:	ldr	r0, [r4, #20]
   1a5c0:	add	r1, r0, r5
   1a5c4:	str	r1, [r4, #20]
   1a5c8:	b	1a5ec <flatcc_json_printer_int16_vector_field@@Base+0x194>
   1a5cc:	ldr	r0, [r4, #16]
   1a5d0:	cmp	r1, r0
   1a5d4:	bcc	1a5ec <flatcc_json_printer_int16_vector_field@@Base+0x194>
   1a5d8:	ldr	r2, [r4, #44]	; 0x2c
   1a5dc:	mov	r0, r4
   1a5e0:	mov	r1, #0
   1a5e4:	blx	r2
   1a5e8:	ldr	r1, [r4, #20]
   1a5ec:	ldrh	r0, [r8, #4]
   1a5f0:	lsr	r5, r0, #15
   1a5f4:	sxth	r0, r0
   1a5f8:	cmn	r0, #1
   1a5fc:	rsble	r0, r0, #0
   1a600:	movle	r2, #45	; 0x2d
   1a604:	strble	r2, [r1], #1
   1a608:	uxth	r0, r0
   1a60c:	bl	15614 <flatcc_json_printer_uint16@@Base+0x2c>
   1a610:	ldr	r1, [r4, #20]
   1a614:	add	r0, r0, r5
   1a618:	subs	r9, r7, #1
   1a61c:	add	r0, r1, r0
   1a620:	str	r0, [r4, #20]
   1a624:	beq	1a76c <flatcc_json_printer_int16_vector_field@@Base+0x314>
   1a628:	ldr	r0, [r4, #20]
   1a62c:	add	r7, r8, #6
   1a630:	mov	r8, #44	; 0x2c
   1a634:	mov	sl, #10
   1a638:	add	r1, r0, #1
   1a63c:	str	r1, [r4, #20]
   1a640:	strb	r8, [r0]
   1a644:	ldrb	r0, [r4, #25]
   1a648:	ldr	r1, [r4, #20]
   1a64c:	cmp	r0, #0
   1a650:	beq	1a708 <flatcc_json_printer_int16_vector_field@@Base+0x2b0>
   1a654:	add	r0, r1, #1
   1a658:	str	r0, [r4, #20]
   1a65c:	strb	sl, [r1]
   1a660:	ldr	r0, [r4, #20]
   1a664:	ldrb	r2, [r4, #25]
   1a668:	ldr	r3, [r4, #32]
   1a66c:	ldr	r1, [r4, #16]
   1a670:	mla	r6, r3, r2, r0
   1a674:	mul	r5, r3, r2
   1a678:	cmp	r6, r1
   1a67c:	bls	1a6ec <flatcc_json_printer_int16_vector_field@@Base+0x294>
   1a680:	cmp	r0, r1
   1a684:	bcc	1a6a0 <flatcc_json_printer_int16_vector_field@@Base+0x248>
   1a688:	ldr	r2, [r4, #44]	; 0x2c
   1a68c:	mov	r0, r4
   1a690:	mov	r1, #0
   1a694:	blx	r2
   1a698:	ldr	r1, [r4, #16]
   1a69c:	ldr	r0, [r4, #20]
   1a6a0:	sub	r6, r1, r0
   1a6a4:	cmp	r6, r5
   1a6a8:	bcs	1a6ec <flatcc_json_printer_int16_vector_field@@Base+0x294>
   1a6ac:	mov	r1, #32
   1a6b0:	mov	r2, r6
   1a6b4:	bl	12940 <memset@plt>
   1a6b8:	ldr	r0, [r4, #20]
   1a6bc:	ldr	r2, [r4, #44]	; 0x2c
   1a6c0:	mov	r1, #0
   1a6c4:	add	r0, r0, r6
   1a6c8:	str	r0, [r4, #20]
   1a6cc:	mov	r0, r4
   1a6d0:	blx	r2
   1a6d4:	ldr	r1, [r4, #16]
   1a6d8:	ldr	r0, [r4, #20]
   1a6dc:	sub	r5, r5, r6
   1a6e0:	sub	r6, r1, r0
   1a6e4:	cmp	r5, r6
   1a6e8:	bhi	1a6ac <flatcc_json_printer_int16_vector_field@@Base+0x254>
   1a6ec:	mov	r1, #32
   1a6f0:	mov	r2, r5
   1a6f4:	bl	12940 <memset@plt>
   1a6f8:	ldr	r0, [r4, #20]
   1a6fc:	add	r1, r0, r5
   1a700:	str	r1, [r4, #20]
   1a704:	b	1a728 <flatcc_json_printer_int16_vector_field@@Base+0x2d0>
   1a708:	ldr	r0, [r4, #16]
   1a70c:	cmp	r1, r0
   1a710:	bcc	1a728 <flatcc_json_printer_int16_vector_field@@Base+0x2d0>
   1a714:	ldr	r2, [r4, #44]	; 0x2c
   1a718:	mov	r0, r4
   1a71c:	mov	r1, #0
   1a720:	blx	r2
   1a724:	ldr	r1, [r4, #20]
   1a728:	ldrh	r0, [r7]
   1a72c:	sub	r9, r9, #1
   1a730:	lsr	r5, r0, #15
   1a734:	sxth	r0, r0
   1a738:	cmn	r0, #1
   1a73c:	rsble	r0, r0, #0
   1a740:	movle	r2, #45	; 0x2d
   1a744:	strble	r2, [r1], #1
   1a748:	uxth	r0, r0
   1a74c:	bl	15614 <flatcc_json_printer_uint16@@Base+0x2c>
   1a750:	ldr	r1, [r4, #20]
   1a754:	add	r0, r0, r5
   1a758:	add	r7, r7, #2
   1a75c:	cmp	r9, #0
   1a760:	add	r0, r1, r0
   1a764:	str	r0, [r4, #20]
   1a768:	bne	1a638 <flatcc_json_printer_int16_vector_field@@Base+0x1e0>
   1a76c:	ldrb	r1, [r4, #25]
   1a770:	ldr	r0, [r4, #20]
   1a774:	cmp	r1, #0
   1a778:	beq	1a838 <flatcc_json_printer_int16_vector_field@@Base+0x3e0>
   1a77c:	add	r1, r0, #1
   1a780:	str	r1, [r4, #20]
   1a784:	mov	r1, #10
   1a788:	strb	r1, [r0]
   1a78c:	ldr	r0, [r4, #32]
   1a790:	sub	r2, r0, #1
   1a794:	str	r2, [r4, #32]
   1a798:	ldrb	r3, [r4, #25]
   1a79c:	ldr	r0, [r4, #20]
   1a7a0:	ldr	r1, [r4, #16]
   1a7a4:	mla	r7, r2, r3, r0
   1a7a8:	mul	r5, r2, r3
   1a7ac:	cmp	r7, r1
   1a7b0:	bls	1a820 <flatcc_json_printer_int16_vector_field@@Base+0x3c8>
   1a7b4:	cmp	r0, r1
   1a7b8:	bcc	1a7d4 <flatcc_json_printer_int16_vector_field@@Base+0x37c>
   1a7bc:	ldr	r2, [r4, #44]	; 0x2c
   1a7c0:	mov	r0, r4
   1a7c4:	mov	r1, #0
   1a7c8:	blx	r2
   1a7cc:	ldr	r1, [r4, #16]
   1a7d0:	ldr	r0, [r4, #20]
   1a7d4:	sub	r6, r1, r0
   1a7d8:	cmp	r6, r5
   1a7dc:	bcs	1a820 <flatcc_json_printer_int16_vector_field@@Base+0x3c8>
   1a7e0:	mov	r1, #32
   1a7e4:	mov	r2, r6
   1a7e8:	bl	12940 <memset@plt>
   1a7ec:	ldr	r0, [r4, #20]
   1a7f0:	ldr	r2, [r4, #44]	; 0x2c
   1a7f4:	mov	r1, #0
   1a7f8:	add	r0, r0, r6
   1a7fc:	str	r0, [r4, #20]
   1a800:	mov	r0, r4
   1a804:	blx	r2
   1a808:	ldr	r1, [r4, #16]
   1a80c:	ldr	r0, [r4, #20]
   1a810:	sub	r5, r5, r6
   1a814:	sub	r6, r1, r0
   1a818:	cmp	r5, r6
   1a81c:	bhi	1a7e0 <flatcc_json_printer_int16_vector_field@@Base+0x388>
   1a820:	mov	r1, #32
   1a824:	mov	r2, r5
   1a828:	bl	12940 <memset@plt>
   1a82c:	ldr	r0, [r4, #20]
   1a830:	add	r0, r0, r5
   1a834:	str	r0, [r4, #20]
   1a838:	add	r1, r0, #1
   1a83c:	str	r1, [r4, #20]
   1a840:	mov	r1, #93	; 0x5d
   1a844:	strb	r1, [r0]
   1a848:	sub	sp, fp, #28
   1a84c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001a850 <flatcc_json_printer_int32_vector_field@@Base>:
   1a850:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a854:	add	fp, sp, #28
   1a858:	sub	sp, sp, #4
   1a85c:	mov	r4, r0
   1a860:	mov	r0, #4
   1a864:	add	r0, r0, r2, lsl #1
   1a868:	ldr	r2, [r1, #8]
   1a86c:	cmp	r0, r2
   1a870:	bge	1a890 <flatcc_json_printer_int32_vector_field@@Base+0x40>
   1a874:	ldr	r2, [r1, #4]
   1a878:	add	r0, r2, r0
   1a87c:	ldrh	r0, [r0]
   1a880:	cmp	r0, #0
   1a884:	ldrne	r2, [r1]
   1a888:	addsne	r8, r2, r0
   1a88c:	bne	1a898 <flatcc_json_printer_int32_vector_field@@Base+0x48>
   1a890:	sub	sp, fp, #28
   1a894:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a898:	ldr	r0, [r1, #16]
   1a89c:	ldr	r2, [fp, #8]
   1a8a0:	add	r7, r0, #1
   1a8a4:	cmp	r0, #0
   1a8a8:	str	r7, [r1, #16]
   1a8ac:	ldrne	r0, [r4, #20]
   1a8b0:	addne	r1, r0, #1
   1a8b4:	strne	r1, [r4, #20]
   1a8b8:	movne	r1, #44	; 0x2c
   1a8bc:	strbne	r1, [r0]
   1a8c0:	mov	r1, r3
   1a8c4:	ldr	r0, [r8]
   1a8c8:	ldr	r7, [r8, r0]!
   1a8cc:	mov	r0, r4
   1a8d0:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   1a8d4:	ldr	r1, [r4, #32]
   1a8d8:	ldr	r0, [r4, #20]
   1a8dc:	cmp	r7, #0
   1a8e0:	add	r1, r1, #1
   1a8e4:	str	r1, [r4, #32]
   1a8e8:	add	r1, r0, #1
   1a8ec:	str	r1, [r4, #20]
   1a8f0:	mov	r1, #91	; 0x5b
   1a8f4:	strb	r1, [r0]
   1a8f8:	beq	1ab54 <flatcc_json_printer_int32_vector_field@@Base+0x304>
   1a8fc:	ldrb	r0, [r4, #25]
   1a900:	ldr	r1, [r4, #20]
   1a904:	cmp	r0, #0
   1a908:	beq	1a9c4 <flatcc_json_printer_int32_vector_field@@Base+0x174>
   1a90c:	add	r0, r1, #1
   1a910:	str	r0, [r4, #20]
   1a914:	mov	r0, #10
   1a918:	strb	r0, [r1]
   1a91c:	ldr	r0, [r4, #20]
   1a920:	ldrb	r2, [r4, #25]
   1a924:	ldr	r3, [r4, #32]
   1a928:	ldr	r1, [r4, #16]
   1a92c:	mla	r6, r3, r2, r0
   1a930:	mul	r5, r3, r2
   1a934:	cmp	r6, r1
   1a938:	bls	1a9a8 <flatcc_json_printer_int32_vector_field@@Base+0x158>
   1a93c:	cmp	r0, r1
   1a940:	bcc	1a95c <flatcc_json_printer_int32_vector_field@@Base+0x10c>
   1a944:	ldr	r2, [r4, #44]	; 0x2c
   1a948:	mov	r0, r4
   1a94c:	mov	r1, #0
   1a950:	blx	r2
   1a954:	ldr	r1, [r4, #16]
   1a958:	ldr	r0, [r4, #20]
   1a95c:	sub	r6, r1, r0
   1a960:	cmp	r6, r5
   1a964:	bcs	1a9a8 <flatcc_json_printer_int32_vector_field@@Base+0x158>
   1a968:	mov	r1, #32
   1a96c:	mov	r2, r6
   1a970:	bl	12940 <memset@plt>
   1a974:	ldr	r0, [r4, #20]
   1a978:	ldr	r2, [r4, #44]	; 0x2c
   1a97c:	mov	r1, #0
   1a980:	add	r0, r0, r6
   1a984:	str	r0, [r4, #20]
   1a988:	mov	r0, r4
   1a98c:	blx	r2
   1a990:	ldr	r1, [r4, #16]
   1a994:	ldr	r0, [r4, #20]
   1a998:	sub	r5, r5, r6
   1a99c:	sub	r6, r1, r0
   1a9a0:	cmp	r5, r6
   1a9a4:	bhi	1a968 <flatcc_json_printer_int32_vector_field@@Base+0x118>
   1a9a8:	mov	r1, #32
   1a9ac:	mov	r2, r5
   1a9b0:	bl	12940 <memset@plt>
   1a9b4:	ldr	r0, [r4, #20]
   1a9b8:	add	r1, r0, r5
   1a9bc:	str	r1, [r4, #20]
   1a9c0:	b	1a9e4 <flatcc_json_printer_int32_vector_field@@Base+0x194>
   1a9c4:	ldr	r0, [r4, #16]
   1a9c8:	cmp	r1, r0
   1a9cc:	bcc	1a9e4 <flatcc_json_printer_int32_vector_field@@Base+0x194>
   1a9d0:	ldr	r2, [r4, #44]	; 0x2c
   1a9d4:	mov	r0, r4
   1a9d8:	mov	r1, #0
   1a9dc:	blx	r2
   1a9e0:	ldr	r1, [r4, #20]
   1a9e4:	ldr	r0, [r8, #4]
   1a9e8:	cmn	r0, #1
   1a9ec:	lsr	r5, r0, #31
   1a9f0:	movle	r2, #45	; 0x2d
   1a9f4:	rsble	r0, r0, #0
   1a9f8:	strble	r2, [r1], #1
   1a9fc:	bl	157b0 <flatcc_json_printer_uint32@@Base+0x2c>
   1aa00:	ldr	r1, [r4, #20]
   1aa04:	add	r0, r0, r5
   1aa08:	subs	r9, r7, #1
   1aa0c:	add	r0, r1, r0
   1aa10:	str	r0, [r4, #20]
   1aa14:	beq	1ab54 <flatcc_json_printer_int32_vector_field@@Base+0x304>
   1aa18:	ldr	r0, [r4, #20]
   1aa1c:	add	r7, r8, #8
   1aa20:	mov	r8, #44	; 0x2c
   1aa24:	mov	sl, #10
   1aa28:	add	r1, r0, #1
   1aa2c:	str	r1, [r4, #20]
   1aa30:	strb	r8, [r0]
   1aa34:	ldrb	r0, [r4, #25]
   1aa38:	ldr	r1, [r4, #20]
   1aa3c:	cmp	r0, #0
   1aa40:	beq	1aaf8 <flatcc_json_printer_int32_vector_field@@Base+0x2a8>
   1aa44:	add	r0, r1, #1
   1aa48:	str	r0, [r4, #20]
   1aa4c:	strb	sl, [r1]
   1aa50:	ldr	r0, [r4, #20]
   1aa54:	ldrb	r2, [r4, #25]
   1aa58:	ldr	r3, [r4, #32]
   1aa5c:	ldr	r1, [r4, #16]
   1aa60:	mla	r6, r3, r2, r0
   1aa64:	mul	r5, r3, r2
   1aa68:	cmp	r6, r1
   1aa6c:	bls	1aadc <flatcc_json_printer_int32_vector_field@@Base+0x28c>
   1aa70:	cmp	r0, r1
   1aa74:	bcc	1aa90 <flatcc_json_printer_int32_vector_field@@Base+0x240>
   1aa78:	ldr	r2, [r4, #44]	; 0x2c
   1aa7c:	mov	r0, r4
   1aa80:	mov	r1, #0
   1aa84:	blx	r2
   1aa88:	ldr	r1, [r4, #16]
   1aa8c:	ldr	r0, [r4, #20]
   1aa90:	sub	r6, r1, r0
   1aa94:	cmp	r6, r5
   1aa98:	bcs	1aadc <flatcc_json_printer_int32_vector_field@@Base+0x28c>
   1aa9c:	mov	r1, #32
   1aaa0:	mov	r2, r6
   1aaa4:	bl	12940 <memset@plt>
   1aaa8:	ldr	r0, [r4, #20]
   1aaac:	ldr	r2, [r4, #44]	; 0x2c
   1aab0:	mov	r1, #0
   1aab4:	add	r0, r0, r6
   1aab8:	str	r0, [r4, #20]
   1aabc:	mov	r0, r4
   1aac0:	blx	r2
   1aac4:	ldr	r1, [r4, #16]
   1aac8:	ldr	r0, [r4, #20]
   1aacc:	sub	r5, r5, r6
   1aad0:	sub	r6, r1, r0
   1aad4:	cmp	r5, r6
   1aad8:	bhi	1aa9c <flatcc_json_printer_int32_vector_field@@Base+0x24c>
   1aadc:	mov	r1, #32
   1aae0:	mov	r2, r5
   1aae4:	bl	12940 <memset@plt>
   1aae8:	ldr	r0, [r4, #20]
   1aaec:	add	r1, r0, r5
   1aaf0:	str	r1, [r4, #20]
   1aaf4:	b	1ab18 <flatcc_json_printer_int32_vector_field@@Base+0x2c8>
   1aaf8:	ldr	r0, [r4, #16]
   1aafc:	cmp	r1, r0
   1ab00:	bcc	1ab18 <flatcc_json_printer_int32_vector_field@@Base+0x2c8>
   1ab04:	ldr	r2, [r4, #44]	; 0x2c
   1ab08:	mov	r0, r4
   1ab0c:	mov	r1, #0
   1ab10:	blx	r2
   1ab14:	ldr	r1, [r4, #20]
   1ab18:	ldr	r0, [r7]
   1ab1c:	sub	r9, r9, #1
   1ab20:	cmn	r0, #1
   1ab24:	lsr	r5, r0, #31
   1ab28:	movle	r2, #45	; 0x2d
   1ab2c:	rsble	r0, r0, #0
   1ab30:	strble	r2, [r1], #1
   1ab34:	bl	157b0 <flatcc_json_printer_uint32@@Base+0x2c>
   1ab38:	ldr	r1, [r4, #20]
   1ab3c:	add	r0, r0, r5
   1ab40:	add	r7, r7, #4
   1ab44:	cmp	r9, #0
   1ab48:	add	r0, r1, r0
   1ab4c:	str	r0, [r4, #20]
   1ab50:	bne	1aa28 <flatcc_json_printer_int32_vector_field@@Base+0x1d8>
   1ab54:	ldrb	r1, [r4, #25]
   1ab58:	ldr	r0, [r4, #20]
   1ab5c:	cmp	r1, #0
   1ab60:	beq	1ac20 <flatcc_json_printer_int32_vector_field@@Base+0x3d0>
   1ab64:	add	r1, r0, #1
   1ab68:	str	r1, [r4, #20]
   1ab6c:	mov	r1, #10
   1ab70:	strb	r1, [r0]
   1ab74:	ldr	r0, [r4, #32]
   1ab78:	sub	r2, r0, #1
   1ab7c:	str	r2, [r4, #32]
   1ab80:	ldrb	r3, [r4, #25]
   1ab84:	ldr	r0, [r4, #20]
   1ab88:	ldr	r1, [r4, #16]
   1ab8c:	mla	r7, r2, r3, r0
   1ab90:	mul	r5, r2, r3
   1ab94:	cmp	r7, r1
   1ab98:	bls	1ac08 <flatcc_json_printer_int32_vector_field@@Base+0x3b8>
   1ab9c:	cmp	r0, r1
   1aba0:	bcc	1abbc <flatcc_json_printer_int32_vector_field@@Base+0x36c>
   1aba4:	ldr	r2, [r4, #44]	; 0x2c
   1aba8:	mov	r0, r4
   1abac:	mov	r1, #0
   1abb0:	blx	r2
   1abb4:	ldr	r1, [r4, #16]
   1abb8:	ldr	r0, [r4, #20]
   1abbc:	sub	r6, r1, r0
   1abc0:	cmp	r6, r5
   1abc4:	bcs	1ac08 <flatcc_json_printer_int32_vector_field@@Base+0x3b8>
   1abc8:	mov	r1, #32
   1abcc:	mov	r2, r6
   1abd0:	bl	12940 <memset@plt>
   1abd4:	ldr	r0, [r4, #20]
   1abd8:	ldr	r2, [r4, #44]	; 0x2c
   1abdc:	mov	r1, #0
   1abe0:	add	r0, r0, r6
   1abe4:	str	r0, [r4, #20]
   1abe8:	mov	r0, r4
   1abec:	blx	r2
   1abf0:	ldr	r1, [r4, #16]
   1abf4:	ldr	r0, [r4, #20]
   1abf8:	sub	r5, r5, r6
   1abfc:	sub	r6, r1, r0
   1ac00:	cmp	r5, r6
   1ac04:	bhi	1abc8 <flatcc_json_printer_int32_vector_field@@Base+0x378>
   1ac08:	mov	r1, #32
   1ac0c:	mov	r2, r5
   1ac10:	bl	12940 <memset@plt>
   1ac14:	ldr	r0, [r4, #20]
   1ac18:	add	r0, r0, r5
   1ac1c:	str	r0, [r4, #20]
   1ac20:	add	r1, r0, #1
   1ac24:	str	r1, [r4, #20]
   1ac28:	mov	r1, #93	; 0x5d
   1ac2c:	strb	r1, [r0]
   1ac30:	sub	sp, fp, #28
   1ac34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001ac38 <flatcc_json_printer_int64_vector_field@@Base>:
   1ac38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ac3c:	add	fp, sp, #28
   1ac40:	sub	sp, sp, #4
   1ac44:	mov	r4, r0
   1ac48:	mov	r0, #4
   1ac4c:	add	r0, r0, r2, lsl #1
   1ac50:	ldr	r2, [r1, #8]
   1ac54:	cmp	r0, r2
   1ac58:	bge	1ac78 <flatcc_json_printer_int64_vector_field@@Base+0x40>
   1ac5c:	ldr	r2, [r1, #4]
   1ac60:	add	r0, r2, r0
   1ac64:	ldrh	r0, [r0]
   1ac68:	cmp	r0, #0
   1ac6c:	ldrne	r2, [r1]
   1ac70:	addsne	r8, r2, r0
   1ac74:	bne	1ac80 <flatcc_json_printer_int64_vector_field@@Base+0x48>
   1ac78:	sub	sp, fp, #28
   1ac7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ac80:	ldr	r0, [r1, #16]
   1ac84:	ldr	r2, [fp, #8]
   1ac88:	add	r7, r0, #1
   1ac8c:	cmp	r0, #0
   1ac90:	str	r7, [r1, #16]
   1ac94:	ldrne	r0, [r4, #20]
   1ac98:	addne	r1, r0, #1
   1ac9c:	strne	r1, [r4, #20]
   1aca0:	movne	r1, #44	; 0x2c
   1aca4:	strbne	r1, [r0]
   1aca8:	mov	r1, r3
   1acac:	ldr	r0, [r8]
   1acb0:	ldr	r7, [r8, r0]!
   1acb4:	mov	r0, r4
   1acb8:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   1acbc:	ldr	r1, [r4, #32]
   1acc0:	ldr	r0, [r4, #20]
   1acc4:	cmp	r7, #0
   1acc8:	add	r1, r1, #1
   1accc:	str	r1, [r4, #32]
   1acd0:	add	r1, r0, #1
   1acd4:	str	r1, [r4, #20]
   1acd8:	mov	r1, #91	; 0x5b
   1acdc:	strb	r1, [r0]
   1ace0:	beq	1af4c <flatcc_json_printer_int64_vector_field@@Base+0x314>
   1ace4:	ldrb	r0, [r4, #25]
   1ace8:	ldr	r2, [r4, #20]
   1acec:	cmp	r0, #0
   1acf0:	beq	1adac <flatcc_json_printer_int64_vector_field@@Base+0x174>
   1acf4:	add	r0, r2, #1
   1acf8:	str	r0, [r4, #20]
   1acfc:	mov	r0, #10
   1ad00:	strb	r0, [r2]
   1ad04:	ldr	r0, [r4, #20]
   1ad08:	ldrb	r2, [r4, #25]
   1ad0c:	ldr	r3, [r4, #32]
   1ad10:	ldr	r1, [r4, #16]
   1ad14:	mla	r6, r3, r2, r0
   1ad18:	mul	r5, r3, r2
   1ad1c:	cmp	r6, r1
   1ad20:	bls	1ad90 <flatcc_json_printer_int64_vector_field@@Base+0x158>
   1ad24:	cmp	r0, r1
   1ad28:	bcc	1ad44 <flatcc_json_printer_int64_vector_field@@Base+0x10c>
   1ad2c:	ldr	r2, [r4, #44]	; 0x2c
   1ad30:	mov	r0, r4
   1ad34:	mov	r1, #0
   1ad38:	blx	r2
   1ad3c:	ldr	r1, [r4, #16]
   1ad40:	ldr	r0, [r4, #20]
   1ad44:	sub	r6, r1, r0
   1ad48:	cmp	r6, r5
   1ad4c:	bcs	1ad90 <flatcc_json_printer_int64_vector_field@@Base+0x158>
   1ad50:	mov	r1, #32
   1ad54:	mov	r2, r6
   1ad58:	bl	12940 <memset@plt>
   1ad5c:	ldr	r0, [r4, #20]
   1ad60:	ldr	r2, [r4, #44]	; 0x2c
   1ad64:	mov	r1, #0
   1ad68:	add	r0, r0, r6
   1ad6c:	str	r0, [r4, #20]
   1ad70:	mov	r0, r4
   1ad74:	blx	r2
   1ad78:	ldr	r1, [r4, #16]
   1ad7c:	ldr	r0, [r4, #20]
   1ad80:	sub	r5, r5, r6
   1ad84:	sub	r6, r1, r0
   1ad88:	cmp	r5, r6
   1ad8c:	bhi	1ad50 <flatcc_json_printer_int64_vector_field@@Base+0x118>
   1ad90:	mov	r1, #32
   1ad94:	mov	r2, r5
   1ad98:	bl	12940 <memset@plt>
   1ad9c:	ldr	r0, [r4, #20]
   1ada0:	add	r2, r0, r5
   1ada4:	str	r2, [r4, #20]
   1ada8:	b	1adcc <flatcc_json_printer_int64_vector_field@@Base+0x194>
   1adac:	ldr	r0, [r4, #16]
   1adb0:	cmp	r2, r0
   1adb4:	bcc	1adcc <flatcc_json_printer_int64_vector_field@@Base+0x194>
   1adb8:	ldr	r2, [r4, #44]	; 0x2c
   1adbc:	mov	r0, r4
   1adc0:	mov	r1, #0
   1adc4:	blx	r2
   1adc8:	ldr	r2, [r4, #20]
   1adcc:	ldrd	r0, [r8, #4]
   1add0:	lsr	r5, r1, #31
   1add4:	cmn	r1, #1
   1add8:	bgt	1adec <flatcc_json_printer_int64_vector_field@@Base+0x1b4>
   1addc:	mov	r3, #45	; 0x2d
   1ade0:	rsbs	r0, r0, #0
   1ade4:	strb	r3, [r2], #1
   1ade8:	rsc	r1, r1, #0
   1adec:	bl	15b18 <flatcc_json_printer_uint64@@Base+0x30>
   1adf0:	ldr	r1, [r4, #20]
   1adf4:	add	r0, r0, r5
   1adf8:	subs	r9, r7, #1
   1adfc:	add	r0, r1, r0
   1ae00:	str	r0, [r4, #20]
   1ae04:	beq	1af4c <flatcc_json_printer_int64_vector_field@@Base+0x314>
   1ae08:	ldr	r0, [r4, #20]
   1ae0c:	add	r7, r8, #12
   1ae10:	mov	r8, #44	; 0x2c
   1ae14:	mov	sl, #10
   1ae18:	add	r1, r0, #1
   1ae1c:	str	r1, [r4, #20]
   1ae20:	strb	r8, [r0]
   1ae24:	ldrb	r0, [r4, #25]
   1ae28:	ldr	r2, [r4, #20]
   1ae2c:	cmp	r0, #0
   1ae30:	beq	1aee8 <flatcc_json_printer_int64_vector_field@@Base+0x2b0>
   1ae34:	add	r0, r2, #1
   1ae38:	str	r0, [r4, #20]
   1ae3c:	strb	sl, [r2]
   1ae40:	ldr	r0, [r4, #20]
   1ae44:	ldrb	r2, [r4, #25]
   1ae48:	ldr	r3, [r4, #32]
   1ae4c:	ldr	r1, [r4, #16]
   1ae50:	mla	r6, r3, r2, r0
   1ae54:	mul	r5, r3, r2
   1ae58:	cmp	r6, r1
   1ae5c:	bls	1aecc <flatcc_json_printer_int64_vector_field@@Base+0x294>
   1ae60:	cmp	r0, r1
   1ae64:	bcc	1ae80 <flatcc_json_printer_int64_vector_field@@Base+0x248>
   1ae68:	ldr	r2, [r4, #44]	; 0x2c
   1ae6c:	mov	r0, r4
   1ae70:	mov	r1, #0
   1ae74:	blx	r2
   1ae78:	ldr	r1, [r4, #16]
   1ae7c:	ldr	r0, [r4, #20]
   1ae80:	sub	r6, r1, r0
   1ae84:	cmp	r6, r5
   1ae88:	bcs	1aecc <flatcc_json_printer_int64_vector_field@@Base+0x294>
   1ae8c:	mov	r1, #32
   1ae90:	mov	r2, r6
   1ae94:	bl	12940 <memset@plt>
   1ae98:	ldr	r0, [r4, #20]
   1ae9c:	ldr	r2, [r4, #44]	; 0x2c
   1aea0:	mov	r1, #0
   1aea4:	add	r0, r0, r6
   1aea8:	str	r0, [r4, #20]
   1aeac:	mov	r0, r4
   1aeb0:	blx	r2
   1aeb4:	ldr	r1, [r4, #16]
   1aeb8:	ldr	r0, [r4, #20]
   1aebc:	sub	r5, r5, r6
   1aec0:	sub	r6, r1, r0
   1aec4:	cmp	r5, r6
   1aec8:	bhi	1ae8c <flatcc_json_printer_int64_vector_field@@Base+0x254>
   1aecc:	mov	r1, #32
   1aed0:	mov	r2, r5
   1aed4:	bl	12940 <memset@plt>
   1aed8:	ldr	r0, [r4, #20]
   1aedc:	add	r2, r0, r5
   1aee0:	str	r2, [r4, #20]
   1aee4:	b	1af08 <flatcc_json_printer_int64_vector_field@@Base+0x2d0>
   1aee8:	ldr	r0, [r4, #16]
   1aeec:	cmp	r2, r0
   1aef0:	bcc	1af08 <flatcc_json_printer_int64_vector_field@@Base+0x2d0>
   1aef4:	ldr	r2, [r4, #44]	; 0x2c
   1aef8:	mov	r0, r4
   1aefc:	mov	r1, #0
   1af00:	blx	r2
   1af04:	ldr	r2, [r4, #20]
   1af08:	ldrd	r0, [r7]
   1af0c:	sub	r9, r9, #1
   1af10:	lsr	r5, r1, #31
   1af14:	cmn	r1, #1
   1af18:	bgt	1af2c <flatcc_json_printer_int64_vector_field@@Base+0x2f4>
   1af1c:	mov	r3, #45	; 0x2d
   1af20:	rsbs	r0, r0, #0
   1af24:	strb	r3, [r2], #1
   1af28:	rsc	r1, r1, #0
   1af2c:	bl	15b18 <flatcc_json_printer_uint64@@Base+0x30>
   1af30:	ldr	r1, [r4, #20]
   1af34:	add	r0, r0, r5
   1af38:	add	r7, r7, #8
   1af3c:	cmp	r9, #0
   1af40:	add	r0, r1, r0
   1af44:	str	r0, [r4, #20]
   1af48:	bne	1ae18 <flatcc_json_printer_int64_vector_field@@Base+0x1e0>
   1af4c:	ldrb	r1, [r4, #25]
   1af50:	ldr	r0, [r4, #20]
   1af54:	cmp	r1, #0
   1af58:	beq	1b018 <flatcc_json_printer_int64_vector_field@@Base+0x3e0>
   1af5c:	add	r1, r0, #1
   1af60:	str	r1, [r4, #20]
   1af64:	mov	r1, #10
   1af68:	strb	r1, [r0]
   1af6c:	ldr	r0, [r4, #32]
   1af70:	sub	r2, r0, #1
   1af74:	str	r2, [r4, #32]
   1af78:	ldrb	r3, [r4, #25]
   1af7c:	ldr	r0, [r4, #20]
   1af80:	ldr	r1, [r4, #16]
   1af84:	mla	r7, r2, r3, r0
   1af88:	mul	r5, r2, r3
   1af8c:	cmp	r7, r1
   1af90:	bls	1b000 <flatcc_json_printer_int64_vector_field@@Base+0x3c8>
   1af94:	cmp	r0, r1
   1af98:	bcc	1afb4 <flatcc_json_printer_int64_vector_field@@Base+0x37c>
   1af9c:	ldr	r2, [r4, #44]	; 0x2c
   1afa0:	mov	r0, r4
   1afa4:	mov	r1, #0
   1afa8:	blx	r2
   1afac:	ldr	r1, [r4, #16]
   1afb0:	ldr	r0, [r4, #20]
   1afb4:	sub	r6, r1, r0
   1afb8:	cmp	r6, r5
   1afbc:	bcs	1b000 <flatcc_json_printer_int64_vector_field@@Base+0x3c8>
   1afc0:	mov	r1, #32
   1afc4:	mov	r2, r6
   1afc8:	bl	12940 <memset@plt>
   1afcc:	ldr	r0, [r4, #20]
   1afd0:	ldr	r2, [r4, #44]	; 0x2c
   1afd4:	mov	r1, #0
   1afd8:	add	r0, r0, r6
   1afdc:	str	r0, [r4, #20]
   1afe0:	mov	r0, r4
   1afe4:	blx	r2
   1afe8:	ldr	r1, [r4, #16]
   1afec:	ldr	r0, [r4, #20]
   1aff0:	sub	r5, r5, r6
   1aff4:	sub	r6, r1, r0
   1aff8:	cmp	r5, r6
   1affc:	bhi	1afc0 <flatcc_json_printer_int64_vector_field@@Base+0x388>
   1b000:	mov	r1, #32
   1b004:	mov	r2, r5
   1b008:	bl	12940 <memset@plt>
   1b00c:	ldr	r0, [r4, #20]
   1b010:	add	r0, r0, r5
   1b014:	str	r0, [r4, #20]
   1b018:	add	r1, r0, #1
   1b01c:	str	r1, [r4, #20]
   1b020:	mov	r1, #93	; 0x5d
   1b024:	strb	r1, [r0]
   1b028:	sub	sp, fp, #28
   1b02c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001b030 <flatcc_json_printer_bool_vector_field@@Base>:
   1b030:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b034:	add	fp, sp, #28
   1b038:	sub	sp, sp, #4
   1b03c:	mov	r4, r0
   1b040:	mov	r0, #4
   1b044:	add	r0, r0, r2, lsl #1
   1b048:	ldr	r2, [r1, #8]
   1b04c:	cmp	r0, r2
   1b050:	bge	1b070 <flatcc_json_printer_bool_vector_field@@Base+0x40>
   1b054:	ldr	r2, [r1, #4]
   1b058:	add	r0, r2, r0
   1b05c:	ldrh	r0, [r0]
   1b060:	cmp	r0, #0
   1b064:	ldrne	r2, [r1]
   1b068:	addsne	r8, r2, r0
   1b06c:	bne	1b078 <flatcc_json_printer_bool_vector_field@@Base+0x48>
   1b070:	sub	sp, fp, #28
   1b074:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b078:	ldr	r0, [r1, #16]
   1b07c:	ldr	r2, [fp, #8]
   1b080:	add	r7, r0, #1
   1b084:	cmp	r0, #0
   1b088:	str	r7, [r1, #16]
   1b08c:	ldrne	r0, [r4, #20]
   1b090:	addne	r1, r0, #1
   1b094:	strne	r1, [r4, #20]
   1b098:	movne	r1, #44	; 0x2c
   1b09c:	strbne	r1, [r0]
   1b0a0:	mov	r1, r3
   1b0a4:	ldr	r0, [r8]
   1b0a8:	ldr	r7, [r8, r0]!
   1b0ac:	mov	r0, r4
   1b0b0:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   1b0b4:	ldr	r1, [r4, #32]
   1b0b8:	ldr	r0, [r4, #20]
   1b0bc:	cmp	r7, #0
   1b0c0:	add	r1, r1, #1
   1b0c4:	str	r1, [r4, #32]
   1b0c8:	add	r1, r0, #1
   1b0cc:	str	r1, [r4, #20]
   1b0d0:	mov	r1, #91	; 0x5b
   1b0d4:	strb	r1, [r0]
   1b0d8:	beq	1b374 <flatcc_json_printer_bool_vector_field@@Base+0x344>
   1b0dc:	ldrb	r1, [r4, #25]
   1b0e0:	ldr	r0, [r4, #20]
   1b0e4:	cmp	r1, #0
   1b0e8:	beq	1b1a4 <flatcc_json_printer_bool_vector_field@@Base+0x174>
   1b0ec:	add	r1, r0, #1
   1b0f0:	str	r1, [r4, #20]
   1b0f4:	mov	r1, #10
   1b0f8:	strb	r1, [r0]
   1b0fc:	ldr	r0, [r4, #20]
   1b100:	ldrb	r2, [r4, #25]
   1b104:	ldr	r3, [r4, #32]
   1b108:	ldr	r1, [r4, #16]
   1b10c:	mla	r6, r3, r2, r0
   1b110:	mul	r5, r3, r2
   1b114:	cmp	r6, r1
   1b118:	bls	1b188 <flatcc_json_printer_bool_vector_field@@Base+0x158>
   1b11c:	cmp	r0, r1
   1b120:	bcc	1b13c <flatcc_json_printer_bool_vector_field@@Base+0x10c>
   1b124:	ldr	r2, [r4, #44]	; 0x2c
   1b128:	mov	r0, r4
   1b12c:	mov	r1, #0
   1b130:	blx	r2
   1b134:	ldr	r1, [r4, #16]
   1b138:	ldr	r0, [r4, #20]
   1b13c:	sub	r6, r1, r0
   1b140:	cmp	r6, r5
   1b144:	bcs	1b188 <flatcc_json_printer_bool_vector_field@@Base+0x158>
   1b148:	mov	r1, #32
   1b14c:	mov	r2, r6
   1b150:	bl	12940 <memset@plt>
   1b154:	ldr	r0, [r4, #20]
   1b158:	ldr	r2, [r4, #44]	; 0x2c
   1b15c:	mov	r1, #0
   1b160:	add	r0, r0, r6
   1b164:	str	r0, [r4, #20]
   1b168:	mov	r0, r4
   1b16c:	blx	r2
   1b170:	ldr	r1, [r4, #16]
   1b174:	ldr	r0, [r4, #20]
   1b178:	sub	r5, r5, r6
   1b17c:	sub	r6, r1, r0
   1b180:	cmp	r5, r6
   1b184:	bhi	1b148 <flatcc_json_printer_bool_vector_field@@Base+0x118>
   1b188:	mov	r1, #32
   1b18c:	mov	r2, r5
   1b190:	bl	12940 <memset@plt>
   1b194:	ldr	r0, [r4, #20]
   1b198:	add	r0, r0, r5
   1b19c:	str	r0, [r4, #20]
   1b1a0:	b	1b1c4 <flatcc_json_printer_bool_vector_field@@Base+0x194>
   1b1a4:	ldr	r1, [r4, #16]
   1b1a8:	cmp	r0, r1
   1b1ac:	bcc	1b1c4 <flatcc_json_printer_bool_vector_field@@Base+0x194>
   1b1b0:	ldr	r2, [r4, #44]	; 0x2c
   1b1b4:	mov	r0, r4
   1b1b8:	mov	r1, #0
   1b1bc:	blx	r2
   1b1c0:	ldr	r0, [r4, #20]
   1b1c4:	ldrb	r1, [r8, #4]
   1b1c8:	cmp	r1, #0
   1b1cc:	beq	1b1ec <flatcc_json_printer_bool_vector_field@@Base+0x1bc>
   1b1d0:	mov	r1, #0
   1b1d4:	strb	r1, [r0, #4]
   1b1d8:	movw	r1, #29300	; 0x7274
   1b1dc:	movt	r1, #25973	; 0x6575
   1b1e0:	str	r1, [r0]
   1b1e4:	mov	r0, #4
   1b1e8:	b	1b204 <flatcc_json_printer_bool_vector_field@@Base+0x1d4>
   1b1ec:	mov	r1, #101	; 0x65
   1b1f0:	strh	r1, [r0, #4]
   1b1f4:	movw	r1, #24934	; 0x6166
   1b1f8:	movt	r1, #29548	; 0x736c
   1b1fc:	str	r1, [r0]
   1b200:	mov	r0, #5
   1b204:	ldr	r1, [r4, #20]
   1b208:	subs	r9, r7, #1
   1b20c:	add	r0, r1, r0
   1b210:	str	r0, [r4, #20]
   1b214:	beq	1b374 <flatcc_json_printer_bool_vector_field@@Base+0x344>
   1b218:	ldr	r0, [r4, #20]
   1b21c:	add	r7, r8, #5
   1b220:	mov	r8, #44	; 0x2c
   1b224:	mov	sl, #10
   1b228:	add	r1, r0, #1
   1b22c:	str	r1, [r4, #20]
   1b230:	strb	r8, [r0]
   1b234:	ldrb	r1, [r4, #25]
   1b238:	ldr	r0, [r4, #20]
   1b23c:	cmp	r1, #0
   1b240:	beq	1b2f8 <flatcc_json_printer_bool_vector_field@@Base+0x2c8>
   1b244:	add	r1, r0, #1
   1b248:	str	r1, [r4, #20]
   1b24c:	strb	sl, [r0]
   1b250:	ldr	r0, [r4, #20]
   1b254:	ldrb	r2, [r4, #25]
   1b258:	ldr	r3, [r4, #32]
   1b25c:	ldr	r1, [r4, #16]
   1b260:	mla	r6, r3, r2, r0
   1b264:	mul	r5, r3, r2
   1b268:	cmp	r6, r1
   1b26c:	bls	1b2dc <flatcc_json_printer_bool_vector_field@@Base+0x2ac>
   1b270:	cmp	r0, r1
   1b274:	bcc	1b290 <flatcc_json_printer_bool_vector_field@@Base+0x260>
   1b278:	ldr	r2, [r4, #44]	; 0x2c
   1b27c:	mov	r0, r4
   1b280:	mov	r1, #0
   1b284:	blx	r2
   1b288:	ldr	r1, [r4, #16]
   1b28c:	ldr	r0, [r4, #20]
   1b290:	sub	r6, r1, r0
   1b294:	cmp	r6, r5
   1b298:	bcs	1b2dc <flatcc_json_printer_bool_vector_field@@Base+0x2ac>
   1b29c:	mov	r1, #32
   1b2a0:	mov	r2, r6
   1b2a4:	bl	12940 <memset@plt>
   1b2a8:	ldr	r0, [r4, #20]
   1b2ac:	ldr	r2, [r4, #44]	; 0x2c
   1b2b0:	mov	r1, #0
   1b2b4:	add	r0, r0, r6
   1b2b8:	str	r0, [r4, #20]
   1b2bc:	mov	r0, r4
   1b2c0:	blx	r2
   1b2c4:	ldr	r1, [r4, #16]
   1b2c8:	ldr	r0, [r4, #20]
   1b2cc:	sub	r5, r5, r6
   1b2d0:	sub	r6, r1, r0
   1b2d4:	cmp	r5, r6
   1b2d8:	bhi	1b29c <flatcc_json_printer_bool_vector_field@@Base+0x26c>
   1b2dc:	mov	r1, #32
   1b2e0:	mov	r2, r5
   1b2e4:	bl	12940 <memset@plt>
   1b2e8:	ldr	r0, [r4, #20]
   1b2ec:	add	r0, r0, r5
   1b2f0:	str	r0, [r4, #20]
   1b2f4:	b	1b318 <flatcc_json_printer_bool_vector_field@@Base+0x2e8>
   1b2f8:	ldr	r1, [r4, #16]
   1b2fc:	cmp	r0, r1
   1b300:	bcc	1b318 <flatcc_json_printer_bool_vector_field@@Base+0x2e8>
   1b304:	ldr	r2, [r4, #44]	; 0x2c
   1b308:	mov	r0, r4
   1b30c:	mov	r1, #0
   1b310:	blx	r2
   1b314:	ldr	r0, [r4, #20]
   1b318:	ldrb	r1, [r7]
   1b31c:	sub	r9, r9, #1
   1b320:	cmp	r1, #0
   1b324:	beq	1b344 <flatcc_json_printer_bool_vector_field@@Base+0x314>
   1b328:	mov	r1, #0
   1b32c:	strb	r1, [r0, #4]
   1b330:	movw	r1, #29300	; 0x7274
   1b334:	movt	r1, #25973	; 0x6575
   1b338:	str	r1, [r0]
   1b33c:	mov	r0, #4
   1b340:	b	1b35c <flatcc_json_printer_bool_vector_field@@Base+0x32c>
   1b344:	mov	r1, #101	; 0x65
   1b348:	strh	r1, [r0, #4]
   1b34c:	movw	r1, #24934	; 0x6166
   1b350:	movt	r1, #29548	; 0x736c
   1b354:	str	r1, [r0]
   1b358:	mov	r0, #5
   1b35c:	ldr	r1, [r4, #20]
   1b360:	add	r7, r7, #1
   1b364:	cmp	r9, #0
   1b368:	add	r0, r1, r0
   1b36c:	str	r0, [r4, #20]
   1b370:	bne	1b228 <flatcc_json_printer_bool_vector_field@@Base+0x1f8>
   1b374:	ldrb	r1, [r4, #25]
   1b378:	ldr	r0, [r4, #20]
   1b37c:	cmp	r1, #0
   1b380:	beq	1b440 <flatcc_json_printer_bool_vector_field@@Base+0x410>
   1b384:	add	r1, r0, #1
   1b388:	str	r1, [r4, #20]
   1b38c:	mov	r1, #10
   1b390:	strb	r1, [r0]
   1b394:	ldr	r0, [r4, #32]
   1b398:	sub	r2, r0, #1
   1b39c:	str	r2, [r4, #32]
   1b3a0:	ldrb	r3, [r4, #25]
   1b3a4:	ldr	r0, [r4, #20]
   1b3a8:	ldr	r1, [r4, #16]
   1b3ac:	mla	r7, r2, r3, r0
   1b3b0:	mul	r5, r2, r3
   1b3b4:	cmp	r7, r1
   1b3b8:	bls	1b428 <flatcc_json_printer_bool_vector_field@@Base+0x3f8>
   1b3bc:	cmp	r0, r1
   1b3c0:	bcc	1b3dc <flatcc_json_printer_bool_vector_field@@Base+0x3ac>
   1b3c4:	ldr	r2, [r4, #44]	; 0x2c
   1b3c8:	mov	r0, r4
   1b3cc:	mov	r1, #0
   1b3d0:	blx	r2
   1b3d4:	ldr	r1, [r4, #16]
   1b3d8:	ldr	r0, [r4, #20]
   1b3dc:	sub	r6, r1, r0
   1b3e0:	cmp	r6, r5
   1b3e4:	bcs	1b428 <flatcc_json_printer_bool_vector_field@@Base+0x3f8>
   1b3e8:	mov	r1, #32
   1b3ec:	mov	r2, r6
   1b3f0:	bl	12940 <memset@plt>
   1b3f4:	ldr	r0, [r4, #20]
   1b3f8:	ldr	r2, [r4, #44]	; 0x2c
   1b3fc:	mov	r1, #0
   1b400:	add	r0, r0, r6
   1b404:	str	r0, [r4, #20]
   1b408:	mov	r0, r4
   1b40c:	blx	r2
   1b410:	ldr	r1, [r4, #16]
   1b414:	ldr	r0, [r4, #20]
   1b418:	sub	r5, r5, r6
   1b41c:	sub	r6, r1, r0
   1b420:	cmp	r5, r6
   1b424:	bhi	1b3e8 <flatcc_json_printer_bool_vector_field@@Base+0x3b8>
   1b428:	mov	r1, #32
   1b42c:	mov	r2, r5
   1b430:	bl	12940 <memset@plt>
   1b434:	ldr	r0, [r4, #20]
   1b438:	add	r0, r0, r5
   1b43c:	str	r0, [r4, #20]
   1b440:	add	r1, r0, #1
   1b444:	str	r1, [r4, #20]
   1b448:	mov	r1, #93	; 0x5d
   1b44c:	strb	r1, [r0]
   1b450:	sub	sp, fp, #28
   1b454:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001b458 <flatcc_json_printer_float_vector_field@@Base>:
   1b458:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b45c:	add	fp, sp, #28
   1b460:	sub	sp, sp, #4
   1b464:	mov	r4, r0
   1b468:	mov	r0, #4
   1b46c:	add	r0, r0, r2, lsl #1
   1b470:	ldr	r2, [r1, #8]
   1b474:	cmp	r0, r2
   1b478:	bge	1b498 <flatcc_json_printer_float_vector_field@@Base+0x40>
   1b47c:	ldr	r2, [r1, #4]
   1b480:	add	r0, r2, r0
   1b484:	ldrh	r0, [r0]
   1b488:	cmp	r0, #0
   1b48c:	ldrne	r2, [r1]
   1b490:	addsne	r8, r2, r0
   1b494:	bne	1b4a0 <flatcc_json_printer_float_vector_field@@Base+0x48>
   1b498:	sub	sp, fp, #28
   1b49c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b4a0:	ldr	r0, [r1, #16]
   1b4a4:	ldr	r2, [fp, #8]
   1b4a8:	add	r7, r0, #1
   1b4ac:	cmp	r0, #0
   1b4b0:	str	r7, [r1, #16]
   1b4b4:	ldrne	r0, [r4, #20]
   1b4b8:	addne	r1, r0, #1
   1b4bc:	strne	r1, [r4, #20]
   1b4c0:	movne	r1, #44	; 0x2c
   1b4c4:	strbne	r1, [r0]
   1b4c8:	mov	r1, r3
   1b4cc:	ldr	r0, [r8]
   1b4d0:	ldr	r7, [r8, r0]!
   1b4d4:	mov	r0, r4
   1b4d8:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   1b4dc:	ldr	r1, [r4, #32]
   1b4e0:	ldr	r0, [r4, #20]
   1b4e4:	cmp	r7, #0
   1b4e8:	add	r1, r1, #1
   1b4ec:	str	r1, [r4, #32]
   1b4f0:	add	r1, r0, #1
   1b4f4:	str	r1, [r4, #20]
   1b4f8:	mov	r1, #91	; 0x5b
   1b4fc:	strb	r1, [r0]
   1b500:	beq	1b734 <flatcc_json_printer_float_vector_field@@Base+0x2dc>
   1b504:	ldrb	r1, [r4, #25]
   1b508:	ldr	r0, [r4, #20]
   1b50c:	cmp	r1, #0
   1b510:	beq	1b5cc <flatcc_json_printer_float_vector_field@@Base+0x174>
   1b514:	add	r1, r0, #1
   1b518:	str	r1, [r4, #20]
   1b51c:	mov	r1, #10
   1b520:	strb	r1, [r0]
   1b524:	ldr	r0, [r4, #20]
   1b528:	ldrb	r2, [r4, #25]
   1b52c:	ldr	r3, [r4, #32]
   1b530:	ldr	r1, [r4, #16]
   1b534:	mla	r6, r3, r2, r0
   1b538:	mul	r5, r3, r2
   1b53c:	cmp	r6, r1
   1b540:	bls	1b5b0 <flatcc_json_printer_float_vector_field@@Base+0x158>
   1b544:	cmp	r0, r1
   1b548:	bcc	1b564 <flatcc_json_printer_float_vector_field@@Base+0x10c>
   1b54c:	ldr	r2, [r4, #44]	; 0x2c
   1b550:	mov	r0, r4
   1b554:	mov	r1, #0
   1b558:	blx	r2
   1b55c:	ldr	r1, [r4, #16]
   1b560:	ldr	r0, [r4, #20]
   1b564:	sub	r6, r1, r0
   1b568:	cmp	r6, r5
   1b56c:	bcs	1b5b0 <flatcc_json_printer_float_vector_field@@Base+0x158>
   1b570:	mov	r1, #32
   1b574:	mov	r2, r6
   1b578:	bl	12940 <memset@plt>
   1b57c:	ldr	r0, [r4, #20]
   1b580:	ldr	r2, [r4, #44]	; 0x2c
   1b584:	mov	r1, #0
   1b588:	add	r0, r0, r6
   1b58c:	str	r0, [r4, #20]
   1b590:	mov	r0, r4
   1b594:	blx	r2
   1b598:	ldr	r1, [r4, #16]
   1b59c:	ldr	r0, [r4, #20]
   1b5a0:	sub	r5, r5, r6
   1b5a4:	sub	r6, r1, r0
   1b5a8:	cmp	r5, r6
   1b5ac:	bhi	1b570 <flatcc_json_printer_float_vector_field@@Base+0x118>
   1b5b0:	mov	r1, #32
   1b5b4:	mov	r2, r5
   1b5b8:	bl	12940 <memset@plt>
   1b5bc:	ldr	r0, [r4, #20]
   1b5c0:	add	r0, r0, r5
   1b5c4:	str	r0, [r4, #20]
   1b5c8:	b	1b5ec <flatcc_json_printer_float_vector_field@@Base+0x194>
   1b5cc:	ldr	r1, [r4, #16]
   1b5d0:	cmp	r0, r1
   1b5d4:	bcc	1b5ec <flatcc_json_printer_float_vector_field@@Base+0x194>
   1b5d8:	ldr	r2, [r4, #44]	; 0x2c
   1b5dc:	mov	r0, r4
   1b5e0:	mov	r1, #0
   1b5e4:	blx	r2
   1b5e8:	ldr	r0, [r4, #20]
   1b5ec:	vldr	s0, [r8, #4]
   1b5f0:	vcvt.f64.f32	d0, s0
   1b5f4:	bl	141a8 <flatcc_json_printer_fmt_float@@Base+0x8>
   1b5f8:	ldr	r1, [r4, #20]
   1b5fc:	subs	r9, r7, #1
   1b600:	add	r0, r1, r0
   1b604:	str	r0, [r4, #20]
   1b608:	beq	1b734 <flatcc_json_printer_float_vector_field@@Base+0x2dc>
   1b60c:	ldr	r0, [r4, #20]
   1b610:	add	r7, r8, #8
   1b614:	mov	r8, #44	; 0x2c
   1b618:	mov	sl, #10
   1b61c:	add	r1, r0, #1
   1b620:	sub	r9, r9, #1
   1b624:	str	r1, [r4, #20]
   1b628:	strb	r8, [r0]
   1b62c:	ldrb	r1, [r4, #25]
   1b630:	ldr	r0, [r4, #20]
   1b634:	cmp	r1, #0
   1b638:	beq	1b6f0 <flatcc_json_printer_float_vector_field@@Base+0x298>
   1b63c:	add	r1, r0, #1
   1b640:	str	r1, [r4, #20]
   1b644:	strb	sl, [r0]
   1b648:	ldr	r0, [r4, #20]
   1b64c:	ldrb	r2, [r4, #25]
   1b650:	ldr	r3, [r4, #32]
   1b654:	ldr	r1, [r4, #16]
   1b658:	mla	r6, r3, r2, r0
   1b65c:	mul	r5, r3, r2
   1b660:	cmp	r6, r1
   1b664:	bls	1b6d4 <flatcc_json_printer_float_vector_field@@Base+0x27c>
   1b668:	cmp	r0, r1
   1b66c:	bcc	1b688 <flatcc_json_printer_float_vector_field@@Base+0x230>
   1b670:	ldr	r2, [r4, #44]	; 0x2c
   1b674:	mov	r0, r4
   1b678:	mov	r1, #0
   1b67c:	blx	r2
   1b680:	ldr	r1, [r4, #16]
   1b684:	ldr	r0, [r4, #20]
   1b688:	sub	r6, r1, r0
   1b68c:	cmp	r6, r5
   1b690:	bcs	1b6d4 <flatcc_json_printer_float_vector_field@@Base+0x27c>
   1b694:	mov	r1, #32
   1b698:	mov	r2, r6
   1b69c:	bl	12940 <memset@plt>
   1b6a0:	ldr	r0, [r4, #20]
   1b6a4:	ldr	r2, [r4, #44]	; 0x2c
   1b6a8:	mov	r1, #0
   1b6ac:	add	r0, r0, r6
   1b6b0:	str	r0, [r4, #20]
   1b6b4:	mov	r0, r4
   1b6b8:	blx	r2
   1b6bc:	ldr	r1, [r4, #16]
   1b6c0:	ldr	r0, [r4, #20]
   1b6c4:	sub	r5, r5, r6
   1b6c8:	sub	r6, r1, r0
   1b6cc:	cmp	r5, r6
   1b6d0:	bhi	1b694 <flatcc_json_printer_float_vector_field@@Base+0x23c>
   1b6d4:	mov	r1, #32
   1b6d8:	mov	r2, r5
   1b6dc:	bl	12940 <memset@plt>
   1b6e0:	ldr	r0, [r4, #20]
   1b6e4:	add	r0, r0, r5
   1b6e8:	str	r0, [r4, #20]
   1b6ec:	b	1b710 <flatcc_json_printer_float_vector_field@@Base+0x2b8>
   1b6f0:	ldr	r1, [r4, #16]
   1b6f4:	cmp	r0, r1
   1b6f8:	bcc	1b710 <flatcc_json_printer_float_vector_field@@Base+0x2b8>
   1b6fc:	ldr	r2, [r4, #44]	; 0x2c
   1b700:	mov	r0, r4
   1b704:	mov	r1, #0
   1b708:	blx	r2
   1b70c:	ldr	r0, [r4, #20]
   1b710:	vldr	s0, [r7]
   1b714:	vcvt.f64.f32	d0, s0
   1b718:	bl	141a8 <flatcc_json_printer_fmt_float@@Base+0x8>
   1b71c:	ldr	r1, [r4, #20]
   1b720:	add	r7, r7, #4
   1b724:	cmp	r9, #0
   1b728:	add	r0, r1, r0
   1b72c:	str	r0, [r4, #20]
   1b730:	bne	1b61c <flatcc_json_printer_float_vector_field@@Base+0x1c4>
   1b734:	ldrb	r1, [r4, #25]
   1b738:	ldr	r0, [r4, #20]
   1b73c:	cmp	r1, #0
   1b740:	beq	1b800 <flatcc_json_printer_float_vector_field@@Base+0x3a8>
   1b744:	add	r1, r0, #1
   1b748:	str	r1, [r4, #20]
   1b74c:	mov	r1, #10
   1b750:	strb	r1, [r0]
   1b754:	ldr	r0, [r4, #32]
   1b758:	sub	r2, r0, #1
   1b75c:	str	r2, [r4, #32]
   1b760:	ldrb	r3, [r4, #25]
   1b764:	ldr	r0, [r4, #20]
   1b768:	ldr	r1, [r4, #16]
   1b76c:	mla	r7, r2, r3, r0
   1b770:	mul	r5, r2, r3
   1b774:	cmp	r7, r1
   1b778:	bls	1b7e8 <flatcc_json_printer_float_vector_field@@Base+0x390>
   1b77c:	cmp	r0, r1
   1b780:	bcc	1b79c <flatcc_json_printer_float_vector_field@@Base+0x344>
   1b784:	ldr	r2, [r4, #44]	; 0x2c
   1b788:	mov	r0, r4
   1b78c:	mov	r1, #0
   1b790:	blx	r2
   1b794:	ldr	r1, [r4, #16]
   1b798:	ldr	r0, [r4, #20]
   1b79c:	sub	r6, r1, r0
   1b7a0:	cmp	r6, r5
   1b7a4:	bcs	1b7e8 <flatcc_json_printer_float_vector_field@@Base+0x390>
   1b7a8:	mov	r1, #32
   1b7ac:	mov	r2, r6
   1b7b0:	bl	12940 <memset@plt>
   1b7b4:	ldr	r0, [r4, #20]
   1b7b8:	ldr	r2, [r4, #44]	; 0x2c
   1b7bc:	mov	r1, #0
   1b7c0:	add	r0, r0, r6
   1b7c4:	str	r0, [r4, #20]
   1b7c8:	mov	r0, r4
   1b7cc:	blx	r2
   1b7d0:	ldr	r1, [r4, #16]
   1b7d4:	ldr	r0, [r4, #20]
   1b7d8:	sub	r5, r5, r6
   1b7dc:	sub	r6, r1, r0
   1b7e0:	cmp	r5, r6
   1b7e4:	bhi	1b7a8 <flatcc_json_printer_float_vector_field@@Base+0x350>
   1b7e8:	mov	r1, #32
   1b7ec:	mov	r2, r5
   1b7f0:	bl	12940 <memset@plt>
   1b7f4:	ldr	r0, [r4, #20]
   1b7f8:	add	r0, r0, r5
   1b7fc:	str	r0, [r4, #20]
   1b800:	add	r1, r0, #1
   1b804:	str	r1, [r4, #20]
   1b808:	mov	r1, #93	; 0x5d
   1b80c:	strb	r1, [r0]
   1b810:	sub	sp, fp, #28
   1b814:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001b818 <flatcc_json_printer_double_vector_field@@Base>:
   1b818:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b81c:	add	fp, sp, #28
   1b820:	sub	sp, sp, #4
   1b824:	mov	r4, r0
   1b828:	mov	r0, #4
   1b82c:	add	r0, r0, r2, lsl #1
   1b830:	ldr	r2, [r1, #8]
   1b834:	cmp	r0, r2
   1b838:	bge	1b858 <flatcc_json_printer_double_vector_field@@Base+0x40>
   1b83c:	ldr	r2, [r1, #4]
   1b840:	add	r0, r2, r0
   1b844:	ldrh	r0, [r0]
   1b848:	cmp	r0, #0
   1b84c:	ldrne	r2, [r1]
   1b850:	addsne	r8, r2, r0
   1b854:	bne	1b860 <flatcc_json_printer_double_vector_field@@Base+0x48>
   1b858:	sub	sp, fp, #28
   1b85c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b860:	ldr	r0, [r1, #16]
   1b864:	ldr	r2, [fp, #8]
   1b868:	add	r7, r0, #1
   1b86c:	cmp	r0, #0
   1b870:	str	r7, [r1, #16]
   1b874:	ldrne	r0, [r4, #20]
   1b878:	addne	r1, r0, #1
   1b87c:	strne	r1, [r4, #20]
   1b880:	movne	r1, #44	; 0x2c
   1b884:	strbne	r1, [r0]
   1b888:	mov	r1, r3
   1b88c:	ldr	r0, [r8]
   1b890:	ldr	r7, [r8, r0]!
   1b894:	mov	r0, r4
   1b898:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   1b89c:	ldr	r1, [r4, #32]
   1b8a0:	ldr	r0, [r4, #20]
   1b8a4:	cmp	r7, #0
   1b8a8:	add	r1, r1, #1
   1b8ac:	str	r1, [r4, #32]
   1b8b0:	add	r1, r0, #1
   1b8b4:	str	r1, [r4, #20]
   1b8b8:	mov	r1, #91	; 0x5b
   1b8bc:	strb	r1, [r0]
   1b8c0:	beq	1baec <flatcc_json_printer_double_vector_field@@Base+0x2d4>
   1b8c4:	ldrb	r1, [r4, #25]
   1b8c8:	ldr	r0, [r4, #20]
   1b8cc:	cmp	r1, #0
   1b8d0:	beq	1b98c <flatcc_json_printer_double_vector_field@@Base+0x174>
   1b8d4:	add	r1, r0, #1
   1b8d8:	str	r1, [r4, #20]
   1b8dc:	mov	r1, #10
   1b8e0:	strb	r1, [r0]
   1b8e4:	ldr	r0, [r4, #20]
   1b8e8:	ldrb	r2, [r4, #25]
   1b8ec:	ldr	r3, [r4, #32]
   1b8f0:	ldr	r1, [r4, #16]
   1b8f4:	mla	r6, r3, r2, r0
   1b8f8:	mul	r5, r3, r2
   1b8fc:	cmp	r6, r1
   1b900:	bls	1b970 <flatcc_json_printer_double_vector_field@@Base+0x158>
   1b904:	cmp	r0, r1
   1b908:	bcc	1b924 <flatcc_json_printer_double_vector_field@@Base+0x10c>
   1b90c:	ldr	r2, [r4, #44]	; 0x2c
   1b910:	mov	r0, r4
   1b914:	mov	r1, #0
   1b918:	blx	r2
   1b91c:	ldr	r1, [r4, #16]
   1b920:	ldr	r0, [r4, #20]
   1b924:	sub	r6, r1, r0
   1b928:	cmp	r6, r5
   1b92c:	bcs	1b970 <flatcc_json_printer_double_vector_field@@Base+0x158>
   1b930:	mov	r1, #32
   1b934:	mov	r2, r6
   1b938:	bl	12940 <memset@plt>
   1b93c:	ldr	r0, [r4, #20]
   1b940:	ldr	r2, [r4, #44]	; 0x2c
   1b944:	mov	r1, #0
   1b948:	add	r0, r0, r6
   1b94c:	str	r0, [r4, #20]
   1b950:	mov	r0, r4
   1b954:	blx	r2
   1b958:	ldr	r1, [r4, #16]
   1b95c:	ldr	r0, [r4, #20]
   1b960:	sub	r5, r5, r6
   1b964:	sub	r6, r1, r0
   1b968:	cmp	r5, r6
   1b96c:	bhi	1b930 <flatcc_json_printer_double_vector_field@@Base+0x118>
   1b970:	mov	r1, #32
   1b974:	mov	r2, r5
   1b978:	bl	12940 <memset@plt>
   1b97c:	ldr	r0, [r4, #20]
   1b980:	add	r0, r0, r5
   1b984:	str	r0, [r4, #20]
   1b988:	b	1b9ac <flatcc_json_printer_double_vector_field@@Base+0x194>
   1b98c:	ldr	r1, [r4, #16]
   1b990:	cmp	r0, r1
   1b994:	bcc	1b9ac <flatcc_json_printer_double_vector_field@@Base+0x194>
   1b998:	ldr	r2, [r4, #44]	; 0x2c
   1b99c:	mov	r0, r4
   1b9a0:	mov	r1, #0
   1b9a4:	blx	r2
   1b9a8:	ldr	r0, [r4, #20]
   1b9ac:	vldr	d0, [r8, #4]
   1b9b0:	bl	141a8 <flatcc_json_printer_fmt_float@@Base+0x8>
   1b9b4:	ldr	r1, [r4, #20]
   1b9b8:	subs	r9, r7, #1
   1b9bc:	add	r0, r1, r0
   1b9c0:	str	r0, [r4, #20]
   1b9c4:	beq	1baec <flatcc_json_printer_double_vector_field@@Base+0x2d4>
   1b9c8:	ldr	r0, [r4, #20]
   1b9cc:	add	r7, r8, #12
   1b9d0:	mov	r8, #44	; 0x2c
   1b9d4:	mov	sl, #10
   1b9d8:	add	r1, r0, #1
   1b9dc:	sub	r9, r9, #1
   1b9e0:	str	r1, [r4, #20]
   1b9e4:	strb	r8, [r0]
   1b9e8:	ldrb	r1, [r4, #25]
   1b9ec:	ldr	r0, [r4, #20]
   1b9f0:	cmp	r1, #0
   1b9f4:	beq	1baac <flatcc_json_printer_double_vector_field@@Base+0x294>
   1b9f8:	add	r1, r0, #1
   1b9fc:	str	r1, [r4, #20]
   1ba00:	strb	sl, [r0]
   1ba04:	ldr	r0, [r4, #20]
   1ba08:	ldrb	r2, [r4, #25]
   1ba0c:	ldr	r3, [r4, #32]
   1ba10:	ldr	r1, [r4, #16]
   1ba14:	mla	r6, r3, r2, r0
   1ba18:	mul	r5, r3, r2
   1ba1c:	cmp	r6, r1
   1ba20:	bls	1ba90 <flatcc_json_printer_double_vector_field@@Base+0x278>
   1ba24:	cmp	r0, r1
   1ba28:	bcc	1ba44 <flatcc_json_printer_double_vector_field@@Base+0x22c>
   1ba2c:	ldr	r2, [r4, #44]	; 0x2c
   1ba30:	mov	r0, r4
   1ba34:	mov	r1, #0
   1ba38:	blx	r2
   1ba3c:	ldr	r1, [r4, #16]
   1ba40:	ldr	r0, [r4, #20]
   1ba44:	sub	r6, r1, r0
   1ba48:	cmp	r6, r5
   1ba4c:	bcs	1ba90 <flatcc_json_printer_double_vector_field@@Base+0x278>
   1ba50:	mov	r1, #32
   1ba54:	mov	r2, r6
   1ba58:	bl	12940 <memset@plt>
   1ba5c:	ldr	r0, [r4, #20]
   1ba60:	ldr	r2, [r4, #44]	; 0x2c
   1ba64:	mov	r1, #0
   1ba68:	add	r0, r0, r6
   1ba6c:	str	r0, [r4, #20]
   1ba70:	mov	r0, r4
   1ba74:	blx	r2
   1ba78:	ldr	r1, [r4, #16]
   1ba7c:	ldr	r0, [r4, #20]
   1ba80:	sub	r5, r5, r6
   1ba84:	sub	r6, r1, r0
   1ba88:	cmp	r5, r6
   1ba8c:	bhi	1ba50 <flatcc_json_printer_double_vector_field@@Base+0x238>
   1ba90:	mov	r1, #32
   1ba94:	mov	r2, r5
   1ba98:	bl	12940 <memset@plt>
   1ba9c:	ldr	r0, [r4, #20]
   1baa0:	add	r0, r0, r5
   1baa4:	str	r0, [r4, #20]
   1baa8:	b	1bacc <flatcc_json_printer_double_vector_field@@Base+0x2b4>
   1baac:	ldr	r1, [r4, #16]
   1bab0:	cmp	r0, r1
   1bab4:	bcc	1bacc <flatcc_json_printer_double_vector_field@@Base+0x2b4>
   1bab8:	ldr	r2, [r4, #44]	; 0x2c
   1babc:	mov	r0, r4
   1bac0:	mov	r1, #0
   1bac4:	blx	r2
   1bac8:	ldr	r0, [r4, #20]
   1bacc:	vldr	d0, [r7]
   1bad0:	bl	141a8 <flatcc_json_printer_fmt_float@@Base+0x8>
   1bad4:	ldr	r1, [r4, #20]
   1bad8:	add	r7, r7, #8
   1badc:	cmp	r9, #0
   1bae0:	add	r0, r1, r0
   1bae4:	str	r0, [r4, #20]
   1bae8:	bne	1b9d8 <flatcc_json_printer_double_vector_field@@Base+0x1c0>
   1baec:	ldrb	r1, [r4, #25]
   1baf0:	ldr	r0, [r4, #20]
   1baf4:	cmp	r1, #0
   1baf8:	beq	1bbb8 <flatcc_json_printer_double_vector_field@@Base+0x3a0>
   1bafc:	add	r1, r0, #1
   1bb00:	str	r1, [r4, #20]
   1bb04:	mov	r1, #10
   1bb08:	strb	r1, [r0]
   1bb0c:	ldr	r0, [r4, #32]
   1bb10:	sub	r2, r0, #1
   1bb14:	str	r2, [r4, #32]
   1bb18:	ldrb	r3, [r4, #25]
   1bb1c:	ldr	r0, [r4, #20]
   1bb20:	ldr	r1, [r4, #16]
   1bb24:	mla	r7, r2, r3, r0
   1bb28:	mul	r5, r2, r3
   1bb2c:	cmp	r7, r1
   1bb30:	bls	1bba0 <flatcc_json_printer_double_vector_field@@Base+0x388>
   1bb34:	cmp	r0, r1
   1bb38:	bcc	1bb54 <flatcc_json_printer_double_vector_field@@Base+0x33c>
   1bb3c:	ldr	r2, [r4, #44]	; 0x2c
   1bb40:	mov	r0, r4
   1bb44:	mov	r1, #0
   1bb48:	blx	r2
   1bb4c:	ldr	r1, [r4, #16]
   1bb50:	ldr	r0, [r4, #20]
   1bb54:	sub	r6, r1, r0
   1bb58:	cmp	r6, r5
   1bb5c:	bcs	1bba0 <flatcc_json_printer_double_vector_field@@Base+0x388>
   1bb60:	mov	r1, #32
   1bb64:	mov	r2, r6
   1bb68:	bl	12940 <memset@plt>
   1bb6c:	ldr	r0, [r4, #20]
   1bb70:	ldr	r2, [r4, #44]	; 0x2c
   1bb74:	mov	r1, #0
   1bb78:	add	r0, r0, r6
   1bb7c:	str	r0, [r4, #20]
   1bb80:	mov	r0, r4
   1bb84:	blx	r2
   1bb88:	ldr	r1, [r4, #16]
   1bb8c:	ldr	r0, [r4, #20]
   1bb90:	sub	r5, r5, r6
   1bb94:	sub	r6, r1, r0
   1bb98:	cmp	r5, r6
   1bb9c:	bhi	1bb60 <flatcc_json_printer_double_vector_field@@Base+0x348>
   1bba0:	mov	r1, #32
   1bba4:	mov	r2, r5
   1bba8:	bl	12940 <memset@plt>
   1bbac:	ldr	r0, [r4, #20]
   1bbb0:	add	r0, r0, r5
   1bbb4:	str	r0, [r4, #20]
   1bbb8:	add	r1, r0, #1
   1bbbc:	str	r1, [r4, #20]
   1bbc0:	mov	r1, #93	; 0x5d
   1bbc4:	strb	r1, [r0]
   1bbc8:	sub	sp, fp, #28
   1bbcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001bbd0 <flatcc_json_printer_utype_enum_vector_field@@Base>:
   1bbd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bbd4:	add	fp, sp, #28
   1bbd8:	sub	sp, sp, #4
   1bbdc:	mov	r4, r0
   1bbe0:	ldrb	r0, [r0, #27]
   1bbe4:	cmp	r0, #0
   1bbe8:	beq	1bbfc <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c>
   1bbec:	mov	r0, r4
   1bbf0:	sub	sp, fp, #28
   1bbf4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bbf8:	b	189f0 <flatcc_json_printer_utype_vector_field@@Base>
   1bbfc:	mov	r0, #4
   1bc00:	add	r0, r0, r2, lsl #1
   1bc04:	ldr	r2, [r1, #8]
   1bc08:	cmp	r0, r2
   1bc0c:	bge	1bc2c <flatcc_json_printer_utype_enum_vector_field@@Base+0x5c>
   1bc10:	ldr	r2, [r1, #4]
   1bc14:	add	r0, r2, r0
   1bc18:	ldrh	r0, [r0]
   1bc1c:	cmp	r0, #0
   1bc20:	ldrne	r2, [r1]
   1bc24:	addsne	r8, r2, r0
   1bc28:	bne	1bc34 <flatcc_json_printer_utype_enum_vector_field@@Base+0x64>
   1bc2c:	sub	sp, fp, #28
   1bc30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bc34:	ldr	r0, [r1, #16]
   1bc38:	ldr	sl, [fp, #12]
   1bc3c:	ldr	r2, [fp, #8]
   1bc40:	add	r7, r0, #1
   1bc44:	cmp	r0, #0
   1bc48:	str	r7, [r1, #16]
   1bc4c:	ldrne	r0, [r4, #20]
   1bc50:	addne	r1, r0, #1
   1bc54:	strne	r1, [r4, #20]
   1bc58:	movne	r1, #44	; 0x2c
   1bc5c:	strbne	r1, [r0]
   1bc60:	mov	r1, r3
   1bc64:	ldr	r0, [r8]
   1bc68:	ldr	r9, [r8, r0]!
   1bc6c:	mov	r0, r4
   1bc70:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   1bc74:	ldr	r1, [r4, #32]
   1bc78:	ldr	r0, [r4, #20]
   1bc7c:	cmp	r9, #0
   1bc80:	add	r1, r1, #1
   1bc84:	str	r1, [r4, #32]
   1bc88:	add	r1, r0, #1
   1bc8c:	str	r1, [r4, #20]
   1bc90:	mov	r1, #91	; 0x5b
   1bc94:	strb	r1, [r0]
   1bc98:	beq	1bea8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2d8>
   1bc9c:	ldrb	r1, [r4, #25]
   1bca0:	ldr	r0, [r4, #20]
   1bca4:	cmp	r1, #0
   1bca8:	beq	1bd64 <flatcc_json_printer_utype_enum_vector_field@@Base+0x194>
   1bcac:	add	r1, r0, #1
   1bcb0:	str	r1, [r4, #20]
   1bcb4:	mov	r1, #10
   1bcb8:	strb	r1, [r0]
   1bcbc:	ldr	r0, [r4, #20]
   1bcc0:	ldrb	r2, [r4, #25]
   1bcc4:	ldr	r3, [r4, #32]
   1bcc8:	ldr	r1, [r4, #16]
   1bccc:	mla	r7, r3, r2, r0
   1bcd0:	mul	r5, r3, r2
   1bcd4:	cmp	r7, r1
   1bcd8:	bls	1bd48 <flatcc_json_printer_utype_enum_vector_field@@Base+0x178>
   1bcdc:	cmp	r0, r1
   1bce0:	bcc	1bcfc <flatcc_json_printer_utype_enum_vector_field@@Base+0x12c>
   1bce4:	ldr	r2, [r4, #44]	; 0x2c
   1bce8:	mov	r0, r4
   1bcec:	mov	r1, #0
   1bcf0:	blx	r2
   1bcf4:	ldr	r1, [r4, #16]
   1bcf8:	ldr	r0, [r4, #20]
   1bcfc:	sub	r6, r1, r0
   1bd00:	cmp	r6, r5
   1bd04:	bcs	1bd48 <flatcc_json_printer_utype_enum_vector_field@@Base+0x178>
   1bd08:	mov	r1, #32
   1bd0c:	mov	r2, r6
   1bd10:	bl	12940 <memset@plt>
   1bd14:	ldr	r0, [r4, #20]
   1bd18:	ldr	r2, [r4, #44]	; 0x2c
   1bd1c:	mov	r1, #0
   1bd20:	add	r0, r0, r6
   1bd24:	str	r0, [r4, #20]
   1bd28:	mov	r0, r4
   1bd2c:	blx	r2
   1bd30:	ldr	r1, [r4, #16]
   1bd34:	ldr	r0, [r4, #20]
   1bd38:	sub	r5, r5, r6
   1bd3c:	sub	r6, r1, r0
   1bd40:	cmp	r5, r6
   1bd44:	bhi	1bd08 <flatcc_json_printer_utype_enum_vector_field@@Base+0x138>
   1bd48:	mov	r1, #32
   1bd4c:	mov	r2, r5
   1bd50:	bl	12940 <memset@plt>
   1bd54:	ldr	r0, [r4, #20]
   1bd58:	add	r0, r0, r5
   1bd5c:	str	r0, [r4, #20]
   1bd60:	b	1bd80 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1b0>
   1bd64:	ldr	r1, [r4, #16]
   1bd68:	cmp	r0, r1
   1bd6c:	bcc	1bd80 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1b0>
   1bd70:	ldr	r2, [r4, #44]	; 0x2c
   1bd74:	mov	r0, r4
   1bd78:	mov	r1, #0
   1bd7c:	blx	r2
   1bd80:	ldrb	r1, [r8, #4]
   1bd84:	mov	r0, r4
   1bd88:	blx	sl
   1bd8c:	subs	r9, r9, #1
   1bd90:	beq	1bea8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2d8>
   1bd94:	add	r7, r8, #5
   1bd98:	mov	r8, #44	; 0x2c
   1bd9c:	ldr	r0, [r4, #20]
   1bda0:	sub	r9, r9, #1
   1bda4:	add	r1, r0, #1
   1bda8:	str	r1, [r4, #20]
   1bdac:	strb	r8, [r0]
   1bdb0:	ldrb	r1, [r4, #25]
   1bdb4:	ldr	r0, [r4, #20]
   1bdb8:	cmp	r1, #0
   1bdbc:	beq	1be78 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2a8>
   1bdc0:	add	r1, r0, #1
   1bdc4:	str	r1, [r4, #20]
   1bdc8:	mov	r1, #10
   1bdcc:	strb	r1, [r0]
   1bdd0:	ldr	r0, [r4, #20]
   1bdd4:	ldrb	r2, [r4, #25]
   1bdd8:	ldr	r3, [r4, #32]
   1bddc:	ldr	r1, [r4, #16]
   1bde0:	mla	r6, r3, r2, r0
   1bde4:	mul	r5, r3, r2
   1bde8:	cmp	r6, r1
   1bdec:	bls	1be5c <flatcc_json_printer_utype_enum_vector_field@@Base+0x28c>
   1bdf0:	cmp	r0, r1
   1bdf4:	bcc	1be10 <flatcc_json_printer_utype_enum_vector_field@@Base+0x240>
   1bdf8:	ldr	r2, [r4, #44]	; 0x2c
   1bdfc:	mov	r0, r4
   1be00:	mov	r1, #0
   1be04:	blx	r2
   1be08:	ldr	r1, [r4, #16]
   1be0c:	ldr	r0, [r4, #20]
   1be10:	sub	r6, r1, r0
   1be14:	cmp	r6, r5
   1be18:	bcs	1be5c <flatcc_json_printer_utype_enum_vector_field@@Base+0x28c>
   1be1c:	mov	r1, #32
   1be20:	mov	r2, r6
   1be24:	bl	12940 <memset@plt>
   1be28:	ldr	r0, [r4, #20]
   1be2c:	ldr	r2, [r4, #44]	; 0x2c
   1be30:	mov	r1, #0
   1be34:	add	r0, r0, r6
   1be38:	str	r0, [r4, #20]
   1be3c:	mov	r0, r4
   1be40:	blx	r2
   1be44:	ldr	r1, [r4, #16]
   1be48:	ldr	r0, [r4, #20]
   1be4c:	sub	r5, r5, r6
   1be50:	sub	r6, r1, r0
   1be54:	cmp	r5, r6
   1be58:	bhi	1be1c <flatcc_json_printer_utype_enum_vector_field@@Base+0x24c>
   1be5c:	mov	r1, #32
   1be60:	mov	r2, r5
   1be64:	bl	12940 <memset@plt>
   1be68:	ldr	r0, [r4, #20]
   1be6c:	add	r0, r0, r5
   1be70:	str	r0, [r4, #20]
   1be74:	b	1be94 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c4>
   1be78:	ldr	r1, [r4, #16]
   1be7c:	cmp	r0, r1
   1be80:	bcc	1be94 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c4>
   1be84:	ldr	r2, [r4, #44]	; 0x2c
   1be88:	mov	r0, r4
   1be8c:	mov	r1, #0
   1be90:	blx	r2
   1be94:	ldrb	r1, [r7], #1
   1be98:	mov	r0, r4
   1be9c:	blx	sl
   1bea0:	cmp	r9, #0
   1bea4:	bne	1bd9c <flatcc_json_printer_utype_enum_vector_field@@Base+0x1cc>
   1bea8:	ldrb	r1, [r4, #25]
   1beac:	ldr	r0, [r4, #20]
   1beb0:	cmp	r1, #0
   1beb4:	beq	1bf74 <flatcc_json_printer_utype_enum_vector_field@@Base+0x3a4>
   1beb8:	add	r1, r0, #1
   1bebc:	str	r1, [r4, #20]
   1bec0:	mov	r1, #10
   1bec4:	strb	r1, [r0]
   1bec8:	ldr	r0, [r4, #32]
   1becc:	sub	r2, r0, #1
   1bed0:	str	r2, [r4, #32]
   1bed4:	ldrb	r3, [r4, #25]
   1bed8:	ldr	r0, [r4, #20]
   1bedc:	ldr	r1, [r4, #16]
   1bee0:	mla	r7, r2, r3, r0
   1bee4:	mul	r5, r2, r3
   1bee8:	cmp	r7, r1
   1beec:	bls	1bf5c <flatcc_json_printer_utype_enum_vector_field@@Base+0x38c>
   1bef0:	cmp	r0, r1
   1bef4:	bcc	1bf10 <flatcc_json_printer_utype_enum_vector_field@@Base+0x340>
   1bef8:	ldr	r2, [r4, #44]	; 0x2c
   1befc:	mov	r0, r4
   1bf00:	mov	r1, #0
   1bf04:	blx	r2
   1bf08:	ldr	r1, [r4, #16]
   1bf0c:	ldr	r0, [r4, #20]
   1bf10:	sub	r6, r1, r0
   1bf14:	cmp	r6, r5
   1bf18:	bcs	1bf5c <flatcc_json_printer_utype_enum_vector_field@@Base+0x38c>
   1bf1c:	mov	r1, #32
   1bf20:	mov	r2, r6
   1bf24:	bl	12940 <memset@plt>
   1bf28:	ldr	r0, [r4, #20]
   1bf2c:	ldr	r2, [r4, #44]	; 0x2c
   1bf30:	mov	r1, #0
   1bf34:	add	r0, r0, r6
   1bf38:	str	r0, [r4, #20]
   1bf3c:	mov	r0, r4
   1bf40:	blx	r2
   1bf44:	ldr	r1, [r4, #16]
   1bf48:	ldr	r0, [r4, #20]
   1bf4c:	sub	r5, r5, r6
   1bf50:	sub	r6, r1, r0
   1bf54:	cmp	r5, r6
   1bf58:	bhi	1bf1c <flatcc_json_printer_utype_enum_vector_field@@Base+0x34c>
   1bf5c:	mov	r1, #32
   1bf60:	mov	r2, r5
   1bf64:	bl	12940 <memset@plt>
   1bf68:	ldr	r0, [r4, #20]
   1bf6c:	add	r0, r0, r5
   1bf70:	str	r0, [r4, #20]
   1bf74:	add	r1, r0, #1
   1bf78:	str	r1, [r4, #20]
   1bf7c:	mov	r1, #93	; 0x5d
   1bf80:	strb	r1, [r0]
   1bf84:	sub	sp, fp, #28
   1bf88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001bf8c <flatcc_json_printer_uint8_enum_vector_field@@Base>:
   1bf8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bf90:	add	fp, sp, #28
   1bf94:	sub	sp, sp, #4
   1bf98:	mov	r4, r0
   1bf9c:	ldrb	r0, [r0, #27]
   1bfa0:	cmp	r0, #0
   1bfa4:	beq	1bfb8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c>
   1bfa8:	mov	r0, r4
   1bfac:	sub	sp, fp, #28
   1bfb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bfb4:	b	18ef0 <flatcc_json_printer_uint8_vector_field@@Base>
   1bfb8:	mov	r0, #4
   1bfbc:	add	r0, r0, r2, lsl #1
   1bfc0:	ldr	r2, [r1, #8]
   1bfc4:	cmp	r0, r2
   1bfc8:	bge	1bfe8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x5c>
   1bfcc:	ldr	r2, [r1, #4]
   1bfd0:	add	r0, r2, r0
   1bfd4:	ldrh	r0, [r0]
   1bfd8:	cmp	r0, #0
   1bfdc:	ldrne	r2, [r1]
   1bfe0:	addsne	r8, r2, r0
   1bfe4:	bne	1bff0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x64>
   1bfe8:	sub	sp, fp, #28
   1bfec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bff0:	ldr	r0, [r1, #16]
   1bff4:	ldr	sl, [fp, #12]
   1bff8:	ldr	r2, [fp, #8]
   1bffc:	add	r7, r0, #1
   1c000:	cmp	r0, #0
   1c004:	str	r7, [r1, #16]
   1c008:	ldrne	r0, [r4, #20]
   1c00c:	addne	r1, r0, #1
   1c010:	strne	r1, [r4, #20]
   1c014:	movne	r1, #44	; 0x2c
   1c018:	strbne	r1, [r0]
   1c01c:	mov	r1, r3
   1c020:	ldr	r0, [r8]
   1c024:	ldr	r9, [r8, r0]!
   1c028:	mov	r0, r4
   1c02c:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   1c030:	ldr	r1, [r4, #32]
   1c034:	ldr	r0, [r4, #20]
   1c038:	cmp	r9, #0
   1c03c:	add	r1, r1, #1
   1c040:	str	r1, [r4, #32]
   1c044:	add	r1, r0, #1
   1c048:	str	r1, [r4, #20]
   1c04c:	mov	r1, #91	; 0x5b
   1c050:	strb	r1, [r0]
   1c054:	beq	1c264 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2d8>
   1c058:	ldrb	r1, [r4, #25]
   1c05c:	ldr	r0, [r4, #20]
   1c060:	cmp	r1, #0
   1c064:	beq	1c120 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x194>
   1c068:	add	r1, r0, #1
   1c06c:	str	r1, [r4, #20]
   1c070:	mov	r1, #10
   1c074:	strb	r1, [r0]
   1c078:	ldr	r0, [r4, #20]
   1c07c:	ldrb	r2, [r4, #25]
   1c080:	ldr	r3, [r4, #32]
   1c084:	ldr	r1, [r4, #16]
   1c088:	mla	r7, r3, r2, r0
   1c08c:	mul	r5, r3, r2
   1c090:	cmp	r7, r1
   1c094:	bls	1c104 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x178>
   1c098:	cmp	r0, r1
   1c09c:	bcc	1c0b8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x12c>
   1c0a0:	ldr	r2, [r4, #44]	; 0x2c
   1c0a4:	mov	r0, r4
   1c0a8:	mov	r1, #0
   1c0ac:	blx	r2
   1c0b0:	ldr	r1, [r4, #16]
   1c0b4:	ldr	r0, [r4, #20]
   1c0b8:	sub	r6, r1, r0
   1c0bc:	cmp	r6, r5
   1c0c0:	bcs	1c104 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x178>
   1c0c4:	mov	r1, #32
   1c0c8:	mov	r2, r6
   1c0cc:	bl	12940 <memset@plt>
   1c0d0:	ldr	r0, [r4, #20]
   1c0d4:	ldr	r2, [r4, #44]	; 0x2c
   1c0d8:	mov	r1, #0
   1c0dc:	add	r0, r0, r6
   1c0e0:	str	r0, [r4, #20]
   1c0e4:	mov	r0, r4
   1c0e8:	blx	r2
   1c0ec:	ldr	r1, [r4, #16]
   1c0f0:	ldr	r0, [r4, #20]
   1c0f4:	sub	r5, r5, r6
   1c0f8:	sub	r6, r1, r0
   1c0fc:	cmp	r5, r6
   1c100:	bhi	1c0c4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x138>
   1c104:	mov	r1, #32
   1c108:	mov	r2, r5
   1c10c:	bl	12940 <memset@plt>
   1c110:	ldr	r0, [r4, #20]
   1c114:	add	r0, r0, r5
   1c118:	str	r0, [r4, #20]
   1c11c:	b	1c13c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1b0>
   1c120:	ldr	r1, [r4, #16]
   1c124:	cmp	r0, r1
   1c128:	bcc	1c13c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1b0>
   1c12c:	ldr	r2, [r4, #44]	; 0x2c
   1c130:	mov	r0, r4
   1c134:	mov	r1, #0
   1c138:	blx	r2
   1c13c:	ldrb	r1, [r8, #4]
   1c140:	mov	r0, r4
   1c144:	blx	sl
   1c148:	subs	r9, r9, #1
   1c14c:	beq	1c264 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2d8>
   1c150:	add	r7, r8, #5
   1c154:	mov	r8, #44	; 0x2c
   1c158:	ldr	r0, [r4, #20]
   1c15c:	sub	r9, r9, #1
   1c160:	add	r1, r0, #1
   1c164:	str	r1, [r4, #20]
   1c168:	strb	r8, [r0]
   1c16c:	ldrb	r1, [r4, #25]
   1c170:	ldr	r0, [r4, #20]
   1c174:	cmp	r1, #0
   1c178:	beq	1c234 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2a8>
   1c17c:	add	r1, r0, #1
   1c180:	str	r1, [r4, #20]
   1c184:	mov	r1, #10
   1c188:	strb	r1, [r0]
   1c18c:	ldr	r0, [r4, #20]
   1c190:	ldrb	r2, [r4, #25]
   1c194:	ldr	r3, [r4, #32]
   1c198:	ldr	r1, [r4, #16]
   1c19c:	mla	r6, r3, r2, r0
   1c1a0:	mul	r5, r3, r2
   1c1a4:	cmp	r6, r1
   1c1a8:	bls	1c218 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x28c>
   1c1ac:	cmp	r0, r1
   1c1b0:	bcc	1c1cc <flatcc_json_printer_uint8_enum_vector_field@@Base+0x240>
   1c1b4:	ldr	r2, [r4, #44]	; 0x2c
   1c1b8:	mov	r0, r4
   1c1bc:	mov	r1, #0
   1c1c0:	blx	r2
   1c1c4:	ldr	r1, [r4, #16]
   1c1c8:	ldr	r0, [r4, #20]
   1c1cc:	sub	r6, r1, r0
   1c1d0:	cmp	r6, r5
   1c1d4:	bcs	1c218 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x28c>
   1c1d8:	mov	r1, #32
   1c1dc:	mov	r2, r6
   1c1e0:	bl	12940 <memset@plt>
   1c1e4:	ldr	r0, [r4, #20]
   1c1e8:	ldr	r2, [r4, #44]	; 0x2c
   1c1ec:	mov	r1, #0
   1c1f0:	add	r0, r0, r6
   1c1f4:	str	r0, [r4, #20]
   1c1f8:	mov	r0, r4
   1c1fc:	blx	r2
   1c200:	ldr	r1, [r4, #16]
   1c204:	ldr	r0, [r4, #20]
   1c208:	sub	r5, r5, r6
   1c20c:	sub	r6, r1, r0
   1c210:	cmp	r5, r6
   1c214:	bhi	1c1d8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x24c>
   1c218:	mov	r1, #32
   1c21c:	mov	r2, r5
   1c220:	bl	12940 <memset@plt>
   1c224:	ldr	r0, [r4, #20]
   1c228:	add	r0, r0, r5
   1c22c:	str	r0, [r4, #20]
   1c230:	b	1c250 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c4>
   1c234:	ldr	r1, [r4, #16]
   1c238:	cmp	r0, r1
   1c23c:	bcc	1c250 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c4>
   1c240:	ldr	r2, [r4, #44]	; 0x2c
   1c244:	mov	r0, r4
   1c248:	mov	r1, #0
   1c24c:	blx	r2
   1c250:	ldrb	r1, [r7], #1
   1c254:	mov	r0, r4
   1c258:	blx	sl
   1c25c:	cmp	r9, #0
   1c260:	bne	1c158 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1cc>
   1c264:	ldrb	r1, [r4, #25]
   1c268:	ldr	r0, [r4, #20]
   1c26c:	cmp	r1, #0
   1c270:	beq	1c330 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x3a4>
   1c274:	add	r1, r0, #1
   1c278:	str	r1, [r4, #20]
   1c27c:	mov	r1, #10
   1c280:	strb	r1, [r0]
   1c284:	ldr	r0, [r4, #32]
   1c288:	sub	r2, r0, #1
   1c28c:	str	r2, [r4, #32]
   1c290:	ldrb	r3, [r4, #25]
   1c294:	ldr	r0, [r4, #20]
   1c298:	ldr	r1, [r4, #16]
   1c29c:	mla	r7, r2, r3, r0
   1c2a0:	mul	r5, r2, r3
   1c2a4:	cmp	r7, r1
   1c2a8:	bls	1c318 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x38c>
   1c2ac:	cmp	r0, r1
   1c2b0:	bcc	1c2cc <flatcc_json_printer_uint8_enum_vector_field@@Base+0x340>
   1c2b4:	ldr	r2, [r4, #44]	; 0x2c
   1c2b8:	mov	r0, r4
   1c2bc:	mov	r1, #0
   1c2c0:	blx	r2
   1c2c4:	ldr	r1, [r4, #16]
   1c2c8:	ldr	r0, [r4, #20]
   1c2cc:	sub	r6, r1, r0
   1c2d0:	cmp	r6, r5
   1c2d4:	bcs	1c318 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x38c>
   1c2d8:	mov	r1, #32
   1c2dc:	mov	r2, r6
   1c2e0:	bl	12940 <memset@plt>
   1c2e4:	ldr	r0, [r4, #20]
   1c2e8:	ldr	r2, [r4, #44]	; 0x2c
   1c2ec:	mov	r1, #0
   1c2f0:	add	r0, r0, r6
   1c2f4:	str	r0, [r4, #20]
   1c2f8:	mov	r0, r4
   1c2fc:	blx	r2
   1c300:	ldr	r1, [r4, #16]
   1c304:	ldr	r0, [r4, #20]
   1c308:	sub	r5, r5, r6
   1c30c:	sub	r6, r1, r0
   1c310:	cmp	r5, r6
   1c314:	bhi	1c2d8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x34c>
   1c318:	mov	r1, #32
   1c31c:	mov	r2, r5
   1c320:	bl	12940 <memset@plt>
   1c324:	ldr	r0, [r4, #20]
   1c328:	add	r0, r0, r5
   1c32c:	str	r0, [r4, #20]
   1c330:	add	r1, r0, #1
   1c334:	str	r1, [r4, #20]
   1c338:	mov	r1, #93	; 0x5d
   1c33c:	strb	r1, [r0]
   1c340:	sub	sp, fp, #28
   1c344:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001c348 <flatcc_json_printer_uint16_enum_vector_field@@Base>:
   1c348:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c34c:	add	fp, sp, #28
   1c350:	sub	sp, sp, #4
   1c354:	mov	r4, r0
   1c358:	ldrb	r0, [r0, #27]
   1c35c:	cmp	r0, #0
   1c360:	beq	1c374 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c>
   1c364:	mov	r0, r4
   1c368:	sub	sp, fp, #28
   1c36c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c370:	b	193f0 <flatcc_json_printer_uint16_vector_field@@Base>
   1c374:	mov	r0, #4
   1c378:	add	r0, r0, r2, lsl #1
   1c37c:	ldr	r2, [r1, #8]
   1c380:	cmp	r0, r2
   1c384:	bge	1c3a4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x5c>
   1c388:	ldr	r2, [r1, #4]
   1c38c:	add	r0, r2, r0
   1c390:	ldrh	r0, [r0]
   1c394:	cmp	r0, #0
   1c398:	ldrne	r2, [r1]
   1c39c:	addsne	r8, r2, r0
   1c3a0:	bne	1c3ac <flatcc_json_printer_uint16_enum_vector_field@@Base+0x64>
   1c3a4:	sub	sp, fp, #28
   1c3a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c3ac:	ldr	r0, [r1, #16]
   1c3b0:	ldr	sl, [fp, #12]
   1c3b4:	ldr	r2, [fp, #8]
   1c3b8:	add	r7, r0, #1
   1c3bc:	cmp	r0, #0
   1c3c0:	str	r7, [r1, #16]
   1c3c4:	ldrne	r0, [r4, #20]
   1c3c8:	addne	r1, r0, #1
   1c3cc:	strne	r1, [r4, #20]
   1c3d0:	movne	r1, #44	; 0x2c
   1c3d4:	strbne	r1, [r0]
   1c3d8:	mov	r1, r3
   1c3dc:	ldr	r0, [r8]
   1c3e0:	ldr	r9, [r8, r0]!
   1c3e4:	mov	r0, r4
   1c3e8:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   1c3ec:	ldr	r1, [r4, #32]
   1c3f0:	ldr	r0, [r4, #20]
   1c3f4:	cmp	r9, #0
   1c3f8:	add	r1, r1, #1
   1c3fc:	str	r1, [r4, #32]
   1c400:	add	r1, r0, #1
   1c404:	str	r1, [r4, #20]
   1c408:	mov	r1, #91	; 0x5b
   1c40c:	strb	r1, [r0]
   1c410:	beq	1c620 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2d8>
   1c414:	ldrb	r1, [r4, #25]
   1c418:	ldr	r0, [r4, #20]
   1c41c:	cmp	r1, #0
   1c420:	beq	1c4dc <flatcc_json_printer_uint16_enum_vector_field@@Base+0x194>
   1c424:	add	r1, r0, #1
   1c428:	str	r1, [r4, #20]
   1c42c:	mov	r1, #10
   1c430:	strb	r1, [r0]
   1c434:	ldr	r0, [r4, #20]
   1c438:	ldrb	r2, [r4, #25]
   1c43c:	ldr	r3, [r4, #32]
   1c440:	ldr	r1, [r4, #16]
   1c444:	mla	r7, r3, r2, r0
   1c448:	mul	r5, r3, r2
   1c44c:	cmp	r7, r1
   1c450:	bls	1c4c0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x178>
   1c454:	cmp	r0, r1
   1c458:	bcc	1c474 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x12c>
   1c45c:	ldr	r2, [r4, #44]	; 0x2c
   1c460:	mov	r0, r4
   1c464:	mov	r1, #0
   1c468:	blx	r2
   1c46c:	ldr	r1, [r4, #16]
   1c470:	ldr	r0, [r4, #20]
   1c474:	sub	r6, r1, r0
   1c478:	cmp	r6, r5
   1c47c:	bcs	1c4c0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x178>
   1c480:	mov	r1, #32
   1c484:	mov	r2, r6
   1c488:	bl	12940 <memset@plt>
   1c48c:	ldr	r0, [r4, #20]
   1c490:	ldr	r2, [r4, #44]	; 0x2c
   1c494:	mov	r1, #0
   1c498:	add	r0, r0, r6
   1c49c:	str	r0, [r4, #20]
   1c4a0:	mov	r0, r4
   1c4a4:	blx	r2
   1c4a8:	ldr	r1, [r4, #16]
   1c4ac:	ldr	r0, [r4, #20]
   1c4b0:	sub	r5, r5, r6
   1c4b4:	sub	r6, r1, r0
   1c4b8:	cmp	r5, r6
   1c4bc:	bhi	1c480 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x138>
   1c4c0:	mov	r1, #32
   1c4c4:	mov	r2, r5
   1c4c8:	bl	12940 <memset@plt>
   1c4cc:	ldr	r0, [r4, #20]
   1c4d0:	add	r0, r0, r5
   1c4d4:	str	r0, [r4, #20]
   1c4d8:	b	1c4f8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1b0>
   1c4dc:	ldr	r1, [r4, #16]
   1c4e0:	cmp	r0, r1
   1c4e4:	bcc	1c4f8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1b0>
   1c4e8:	ldr	r2, [r4, #44]	; 0x2c
   1c4ec:	mov	r0, r4
   1c4f0:	mov	r1, #0
   1c4f4:	blx	r2
   1c4f8:	ldrh	r1, [r8, #4]
   1c4fc:	mov	r0, r4
   1c500:	blx	sl
   1c504:	subs	r9, r9, #1
   1c508:	beq	1c620 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2d8>
   1c50c:	add	r7, r8, #6
   1c510:	mov	r8, #44	; 0x2c
   1c514:	ldr	r0, [r4, #20]
   1c518:	sub	r9, r9, #1
   1c51c:	add	r1, r0, #1
   1c520:	str	r1, [r4, #20]
   1c524:	strb	r8, [r0]
   1c528:	ldrb	r1, [r4, #25]
   1c52c:	ldr	r0, [r4, #20]
   1c530:	cmp	r1, #0
   1c534:	beq	1c5f0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2a8>
   1c538:	add	r1, r0, #1
   1c53c:	str	r1, [r4, #20]
   1c540:	mov	r1, #10
   1c544:	strb	r1, [r0]
   1c548:	ldr	r0, [r4, #20]
   1c54c:	ldrb	r2, [r4, #25]
   1c550:	ldr	r3, [r4, #32]
   1c554:	ldr	r1, [r4, #16]
   1c558:	mla	r6, r3, r2, r0
   1c55c:	mul	r5, r3, r2
   1c560:	cmp	r6, r1
   1c564:	bls	1c5d4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x28c>
   1c568:	cmp	r0, r1
   1c56c:	bcc	1c588 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x240>
   1c570:	ldr	r2, [r4, #44]	; 0x2c
   1c574:	mov	r0, r4
   1c578:	mov	r1, #0
   1c57c:	blx	r2
   1c580:	ldr	r1, [r4, #16]
   1c584:	ldr	r0, [r4, #20]
   1c588:	sub	r6, r1, r0
   1c58c:	cmp	r6, r5
   1c590:	bcs	1c5d4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x28c>
   1c594:	mov	r1, #32
   1c598:	mov	r2, r6
   1c59c:	bl	12940 <memset@plt>
   1c5a0:	ldr	r0, [r4, #20]
   1c5a4:	ldr	r2, [r4, #44]	; 0x2c
   1c5a8:	mov	r1, #0
   1c5ac:	add	r0, r0, r6
   1c5b0:	str	r0, [r4, #20]
   1c5b4:	mov	r0, r4
   1c5b8:	blx	r2
   1c5bc:	ldr	r1, [r4, #16]
   1c5c0:	ldr	r0, [r4, #20]
   1c5c4:	sub	r5, r5, r6
   1c5c8:	sub	r6, r1, r0
   1c5cc:	cmp	r5, r6
   1c5d0:	bhi	1c594 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x24c>
   1c5d4:	mov	r1, #32
   1c5d8:	mov	r2, r5
   1c5dc:	bl	12940 <memset@plt>
   1c5e0:	ldr	r0, [r4, #20]
   1c5e4:	add	r0, r0, r5
   1c5e8:	str	r0, [r4, #20]
   1c5ec:	b	1c60c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c4>
   1c5f0:	ldr	r1, [r4, #16]
   1c5f4:	cmp	r0, r1
   1c5f8:	bcc	1c60c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c4>
   1c5fc:	ldr	r2, [r4, #44]	; 0x2c
   1c600:	mov	r0, r4
   1c604:	mov	r1, #0
   1c608:	blx	r2
   1c60c:	ldrh	r1, [r7], #2
   1c610:	mov	r0, r4
   1c614:	blx	sl
   1c618:	cmp	r9, #0
   1c61c:	bne	1c514 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1cc>
   1c620:	ldrb	r1, [r4, #25]
   1c624:	ldr	r0, [r4, #20]
   1c628:	cmp	r1, #0
   1c62c:	beq	1c6ec <flatcc_json_printer_uint16_enum_vector_field@@Base+0x3a4>
   1c630:	add	r1, r0, #1
   1c634:	str	r1, [r4, #20]
   1c638:	mov	r1, #10
   1c63c:	strb	r1, [r0]
   1c640:	ldr	r0, [r4, #32]
   1c644:	sub	r2, r0, #1
   1c648:	str	r2, [r4, #32]
   1c64c:	ldrb	r3, [r4, #25]
   1c650:	ldr	r0, [r4, #20]
   1c654:	ldr	r1, [r4, #16]
   1c658:	mla	r7, r2, r3, r0
   1c65c:	mul	r5, r2, r3
   1c660:	cmp	r7, r1
   1c664:	bls	1c6d4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x38c>
   1c668:	cmp	r0, r1
   1c66c:	bcc	1c688 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x340>
   1c670:	ldr	r2, [r4, #44]	; 0x2c
   1c674:	mov	r0, r4
   1c678:	mov	r1, #0
   1c67c:	blx	r2
   1c680:	ldr	r1, [r4, #16]
   1c684:	ldr	r0, [r4, #20]
   1c688:	sub	r6, r1, r0
   1c68c:	cmp	r6, r5
   1c690:	bcs	1c6d4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x38c>
   1c694:	mov	r1, #32
   1c698:	mov	r2, r6
   1c69c:	bl	12940 <memset@plt>
   1c6a0:	ldr	r0, [r4, #20]
   1c6a4:	ldr	r2, [r4, #44]	; 0x2c
   1c6a8:	mov	r1, #0
   1c6ac:	add	r0, r0, r6
   1c6b0:	str	r0, [r4, #20]
   1c6b4:	mov	r0, r4
   1c6b8:	blx	r2
   1c6bc:	ldr	r1, [r4, #16]
   1c6c0:	ldr	r0, [r4, #20]
   1c6c4:	sub	r5, r5, r6
   1c6c8:	sub	r6, r1, r0
   1c6cc:	cmp	r5, r6
   1c6d0:	bhi	1c694 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x34c>
   1c6d4:	mov	r1, #32
   1c6d8:	mov	r2, r5
   1c6dc:	bl	12940 <memset@plt>
   1c6e0:	ldr	r0, [r4, #20]
   1c6e4:	add	r0, r0, r5
   1c6e8:	str	r0, [r4, #20]
   1c6ec:	add	r1, r0, #1
   1c6f0:	str	r1, [r4, #20]
   1c6f4:	mov	r1, #93	; 0x5d
   1c6f8:	strb	r1, [r0]
   1c6fc:	sub	sp, fp, #28
   1c700:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001c704 <flatcc_json_printer_uint32_enum_vector_field@@Base>:
   1c704:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c708:	add	fp, sp, #28
   1c70c:	sub	sp, sp, #4
   1c710:	mov	r4, r0
   1c714:	ldrb	r0, [r0, #27]
   1c718:	cmp	r0, #0
   1c71c:	beq	1c730 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c>
   1c720:	mov	r0, r4
   1c724:	sub	sp, fp, #28
   1c728:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c72c:	b	197a4 <flatcc_json_printer_uint32_vector_field@@Base>
   1c730:	mov	r0, #4
   1c734:	add	r0, r0, r2, lsl #1
   1c738:	ldr	r2, [r1, #8]
   1c73c:	cmp	r0, r2
   1c740:	bge	1c760 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x5c>
   1c744:	ldr	r2, [r1, #4]
   1c748:	add	r0, r2, r0
   1c74c:	ldrh	r0, [r0]
   1c750:	cmp	r0, #0
   1c754:	ldrne	r2, [r1]
   1c758:	addsne	r8, r2, r0
   1c75c:	bne	1c768 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x64>
   1c760:	sub	sp, fp, #28
   1c764:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c768:	ldr	r0, [r1, #16]
   1c76c:	ldr	sl, [fp, #12]
   1c770:	ldr	r2, [fp, #8]
   1c774:	add	r7, r0, #1
   1c778:	cmp	r0, #0
   1c77c:	str	r7, [r1, #16]
   1c780:	ldrne	r0, [r4, #20]
   1c784:	addne	r1, r0, #1
   1c788:	strne	r1, [r4, #20]
   1c78c:	movne	r1, #44	; 0x2c
   1c790:	strbne	r1, [r0]
   1c794:	mov	r1, r3
   1c798:	ldr	r0, [r8]
   1c79c:	ldr	r9, [r8, r0]!
   1c7a0:	mov	r0, r4
   1c7a4:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   1c7a8:	ldr	r1, [r4, #32]
   1c7ac:	ldr	r0, [r4, #20]
   1c7b0:	cmp	r9, #0
   1c7b4:	add	r1, r1, #1
   1c7b8:	str	r1, [r4, #32]
   1c7bc:	add	r1, r0, #1
   1c7c0:	str	r1, [r4, #20]
   1c7c4:	mov	r1, #91	; 0x5b
   1c7c8:	strb	r1, [r0]
   1c7cc:	beq	1c9dc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2d8>
   1c7d0:	ldrb	r1, [r4, #25]
   1c7d4:	ldr	r0, [r4, #20]
   1c7d8:	cmp	r1, #0
   1c7dc:	beq	1c898 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x194>
   1c7e0:	add	r1, r0, #1
   1c7e4:	str	r1, [r4, #20]
   1c7e8:	mov	r1, #10
   1c7ec:	strb	r1, [r0]
   1c7f0:	ldr	r0, [r4, #20]
   1c7f4:	ldrb	r2, [r4, #25]
   1c7f8:	ldr	r3, [r4, #32]
   1c7fc:	ldr	r1, [r4, #16]
   1c800:	mla	r7, r3, r2, r0
   1c804:	mul	r5, r3, r2
   1c808:	cmp	r7, r1
   1c80c:	bls	1c87c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x178>
   1c810:	cmp	r0, r1
   1c814:	bcc	1c830 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x12c>
   1c818:	ldr	r2, [r4, #44]	; 0x2c
   1c81c:	mov	r0, r4
   1c820:	mov	r1, #0
   1c824:	blx	r2
   1c828:	ldr	r1, [r4, #16]
   1c82c:	ldr	r0, [r4, #20]
   1c830:	sub	r6, r1, r0
   1c834:	cmp	r6, r5
   1c838:	bcs	1c87c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x178>
   1c83c:	mov	r1, #32
   1c840:	mov	r2, r6
   1c844:	bl	12940 <memset@plt>
   1c848:	ldr	r0, [r4, #20]
   1c84c:	ldr	r2, [r4, #44]	; 0x2c
   1c850:	mov	r1, #0
   1c854:	add	r0, r0, r6
   1c858:	str	r0, [r4, #20]
   1c85c:	mov	r0, r4
   1c860:	blx	r2
   1c864:	ldr	r1, [r4, #16]
   1c868:	ldr	r0, [r4, #20]
   1c86c:	sub	r5, r5, r6
   1c870:	sub	r6, r1, r0
   1c874:	cmp	r5, r6
   1c878:	bhi	1c83c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x138>
   1c87c:	mov	r1, #32
   1c880:	mov	r2, r5
   1c884:	bl	12940 <memset@plt>
   1c888:	ldr	r0, [r4, #20]
   1c88c:	add	r0, r0, r5
   1c890:	str	r0, [r4, #20]
   1c894:	b	1c8b4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1b0>
   1c898:	ldr	r1, [r4, #16]
   1c89c:	cmp	r0, r1
   1c8a0:	bcc	1c8b4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1b0>
   1c8a4:	ldr	r2, [r4, #44]	; 0x2c
   1c8a8:	mov	r0, r4
   1c8ac:	mov	r1, #0
   1c8b0:	blx	r2
   1c8b4:	ldr	r1, [r8, #4]
   1c8b8:	mov	r0, r4
   1c8bc:	blx	sl
   1c8c0:	subs	r9, r9, #1
   1c8c4:	beq	1c9dc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2d8>
   1c8c8:	add	r7, r8, #8
   1c8cc:	mov	r8, #44	; 0x2c
   1c8d0:	ldr	r0, [r4, #20]
   1c8d4:	sub	r9, r9, #1
   1c8d8:	add	r1, r0, #1
   1c8dc:	str	r1, [r4, #20]
   1c8e0:	strb	r8, [r0]
   1c8e4:	ldrb	r1, [r4, #25]
   1c8e8:	ldr	r0, [r4, #20]
   1c8ec:	cmp	r1, #0
   1c8f0:	beq	1c9ac <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2a8>
   1c8f4:	add	r1, r0, #1
   1c8f8:	str	r1, [r4, #20]
   1c8fc:	mov	r1, #10
   1c900:	strb	r1, [r0]
   1c904:	ldr	r0, [r4, #20]
   1c908:	ldrb	r2, [r4, #25]
   1c90c:	ldr	r3, [r4, #32]
   1c910:	ldr	r1, [r4, #16]
   1c914:	mla	r6, r3, r2, r0
   1c918:	mul	r5, r3, r2
   1c91c:	cmp	r6, r1
   1c920:	bls	1c990 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x28c>
   1c924:	cmp	r0, r1
   1c928:	bcc	1c944 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x240>
   1c92c:	ldr	r2, [r4, #44]	; 0x2c
   1c930:	mov	r0, r4
   1c934:	mov	r1, #0
   1c938:	blx	r2
   1c93c:	ldr	r1, [r4, #16]
   1c940:	ldr	r0, [r4, #20]
   1c944:	sub	r6, r1, r0
   1c948:	cmp	r6, r5
   1c94c:	bcs	1c990 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x28c>
   1c950:	mov	r1, #32
   1c954:	mov	r2, r6
   1c958:	bl	12940 <memset@plt>
   1c95c:	ldr	r0, [r4, #20]
   1c960:	ldr	r2, [r4, #44]	; 0x2c
   1c964:	mov	r1, #0
   1c968:	add	r0, r0, r6
   1c96c:	str	r0, [r4, #20]
   1c970:	mov	r0, r4
   1c974:	blx	r2
   1c978:	ldr	r1, [r4, #16]
   1c97c:	ldr	r0, [r4, #20]
   1c980:	sub	r5, r5, r6
   1c984:	sub	r6, r1, r0
   1c988:	cmp	r5, r6
   1c98c:	bhi	1c950 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x24c>
   1c990:	mov	r1, #32
   1c994:	mov	r2, r5
   1c998:	bl	12940 <memset@plt>
   1c99c:	ldr	r0, [r4, #20]
   1c9a0:	add	r0, r0, r5
   1c9a4:	str	r0, [r4, #20]
   1c9a8:	b	1c9c8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c4>
   1c9ac:	ldr	r1, [r4, #16]
   1c9b0:	cmp	r0, r1
   1c9b4:	bcc	1c9c8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c4>
   1c9b8:	ldr	r2, [r4, #44]	; 0x2c
   1c9bc:	mov	r0, r4
   1c9c0:	mov	r1, #0
   1c9c4:	blx	r2
   1c9c8:	ldr	r1, [r7], #4
   1c9cc:	mov	r0, r4
   1c9d0:	blx	sl
   1c9d4:	cmp	r9, #0
   1c9d8:	bne	1c8d0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1cc>
   1c9dc:	ldrb	r1, [r4, #25]
   1c9e0:	ldr	r0, [r4, #20]
   1c9e4:	cmp	r1, #0
   1c9e8:	beq	1caa8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x3a4>
   1c9ec:	add	r1, r0, #1
   1c9f0:	str	r1, [r4, #20]
   1c9f4:	mov	r1, #10
   1c9f8:	strb	r1, [r0]
   1c9fc:	ldr	r0, [r4, #32]
   1ca00:	sub	r2, r0, #1
   1ca04:	str	r2, [r4, #32]
   1ca08:	ldrb	r3, [r4, #25]
   1ca0c:	ldr	r0, [r4, #20]
   1ca10:	ldr	r1, [r4, #16]
   1ca14:	mla	r7, r2, r3, r0
   1ca18:	mul	r5, r2, r3
   1ca1c:	cmp	r7, r1
   1ca20:	bls	1ca90 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x38c>
   1ca24:	cmp	r0, r1
   1ca28:	bcc	1ca44 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x340>
   1ca2c:	ldr	r2, [r4, #44]	; 0x2c
   1ca30:	mov	r0, r4
   1ca34:	mov	r1, #0
   1ca38:	blx	r2
   1ca3c:	ldr	r1, [r4, #16]
   1ca40:	ldr	r0, [r4, #20]
   1ca44:	sub	r6, r1, r0
   1ca48:	cmp	r6, r5
   1ca4c:	bcs	1ca90 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x38c>
   1ca50:	mov	r1, #32
   1ca54:	mov	r2, r6
   1ca58:	bl	12940 <memset@plt>
   1ca5c:	ldr	r0, [r4, #20]
   1ca60:	ldr	r2, [r4, #44]	; 0x2c
   1ca64:	mov	r1, #0
   1ca68:	add	r0, r0, r6
   1ca6c:	str	r0, [r4, #20]
   1ca70:	mov	r0, r4
   1ca74:	blx	r2
   1ca78:	ldr	r1, [r4, #16]
   1ca7c:	ldr	r0, [r4, #20]
   1ca80:	sub	r5, r5, r6
   1ca84:	sub	r6, r1, r0
   1ca88:	cmp	r5, r6
   1ca8c:	bhi	1ca50 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x34c>
   1ca90:	mov	r1, #32
   1ca94:	mov	r2, r5
   1ca98:	bl	12940 <memset@plt>
   1ca9c:	ldr	r0, [r4, #20]
   1caa0:	add	r0, r0, r5
   1caa4:	str	r0, [r4, #20]
   1caa8:	add	r1, r0, #1
   1caac:	str	r1, [r4, #20]
   1cab0:	mov	r1, #93	; 0x5d
   1cab4:	strb	r1, [r0]
   1cab8:	sub	sp, fp, #28
   1cabc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001cac0 <flatcc_json_printer_uint64_enum_vector_field@@Base>:
   1cac0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cac4:	add	fp, sp, #28
   1cac8:	sub	sp, sp, #4
   1cacc:	mov	r4, r0
   1cad0:	ldrb	r0, [r0, #27]
   1cad4:	cmp	r0, #0
   1cad8:	beq	1caec <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c>
   1cadc:	mov	r0, r4
   1cae0:	sub	sp, fp, #28
   1cae4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cae8:	b	19b58 <flatcc_json_printer_uint64_vector_field@@Base>
   1caec:	mov	r0, #4
   1caf0:	add	r0, r0, r2, lsl #1
   1caf4:	ldr	r2, [r1, #8]
   1caf8:	cmp	r0, r2
   1cafc:	bge	1cb1c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x5c>
   1cb00:	ldr	r2, [r1, #4]
   1cb04:	add	r0, r2, r0
   1cb08:	ldrh	r0, [r0]
   1cb0c:	cmp	r0, #0
   1cb10:	ldrne	r2, [r1]
   1cb14:	addsne	r8, r2, r0
   1cb18:	bne	1cb24 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x64>
   1cb1c:	sub	sp, fp, #28
   1cb20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cb24:	ldr	r0, [r1, #16]
   1cb28:	ldr	sl, [fp, #12]
   1cb2c:	ldr	r2, [fp, #8]
   1cb30:	add	r7, r0, #1
   1cb34:	cmp	r0, #0
   1cb38:	str	r7, [r1, #16]
   1cb3c:	ldrne	r0, [r4, #20]
   1cb40:	addne	r1, r0, #1
   1cb44:	strne	r1, [r4, #20]
   1cb48:	movne	r1, #44	; 0x2c
   1cb4c:	strbne	r1, [r0]
   1cb50:	mov	r1, r3
   1cb54:	ldr	r0, [r8]
   1cb58:	ldr	r9, [r8, r0]!
   1cb5c:	mov	r0, r4
   1cb60:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   1cb64:	ldr	r1, [r4, #32]
   1cb68:	ldr	r0, [r4, #20]
   1cb6c:	cmp	r9, #0
   1cb70:	add	r1, r1, #1
   1cb74:	str	r1, [r4, #32]
   1cb78:	add	r1, r0, #1
   1cb7c:	str	r1, [r4, #20]
   1cb80:	mov	r1, #91	; 0x5b
   1cb84:	strb	r1, [r0]
   1cb88:	beq	1cd9c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2dc>
   1cb8c:	ldrb	r1, [r4, #25]
   1cb90:	ldr	r0, [r4, #20]
   1cb94:	cmp	r1, #0
   1cb98:	beq	1cc54 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x194>
   1cb9c:	add	r1, r0, #1
   1cba0:	str	r1, [r4, #20]
   1cba4:	mov	r1, #10
   1cba8:	strb	r1, [r0]
   1cbac:	ldr	r0, [r4, #20]
   1cbb0:	ldrb	r2, [r4, #25]
   1cbb4:	ldr	r3, [r4, #32]
   1cbb8:	ldr	r1, [r4, #16]
   1cbbc:	mla	r7, r3, r2, r0
   1cbc0:	mul	r5, r3, r2
   1cbc4:	cmp	r7, r1
   1cbc8:	bls	1cc38 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x178>
   1cbcc:	cmp	r0, r1
   1cbd0:	bcc	1cbec <flatcc_json_printer_uint64_enum_vector_field@@Base+0x12c>
   1cbd4:	ldr	r2, [r4, #44]	; 0x2c
   1cbd8:	mov	r0, r4
   1cbdc:	mov	r1, #0
   1cbe0:	blx	r2
   1cbe4:	ldr	r1, [r4, #16]
   1cbe8:	ldr	r0, [r4, #20]
   1cbec:	sub	r6, r1, r0
   1cbf0:	cmp	r6, r5
   1cbf4:	bcs	1cc38 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x178>
   1cbf8:	mov	r1, #32
   1cbfc:	mov	r2, r6
   1cc00:	bl	12940 <memset@plt>
   1cc04:	ldr	r0, [r4, #20]
   1cc08:	ldr	r2, [r4, #44]	; 0x2c
   1cc0c:	mov	r1, #0
   1cc10:	add	r0, r0, r6
   1cc14:	str	r0, [r4, #20]
   1cc18:	mov	r0, r4
   1cc1c:	blx	r2
   1cc20:	ldr	r1, [r4, #16]
   1cc24:	ldr	r0, [r4, #20]
   1cc28:	sub	r5, r5, r6
   1cc2c:	sub	r6, r1, r0
   1cc30:	cmp	r5, r6
   1cc34:	bhi	1cbf8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x138>
   1cc38:	mov	r1, #32
   1cc3c:	mov	r2, r5
   1cc40:	bl	12940 <memset@plt>
   1cc44:	ldr	r0, [r4, #20]
   1cc48:	add	r0, r0, r5
   1cc4c:	str	r0, [r4, #20]
   1cc50:	b	1cc70 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1b0>
   1cc54:	ldr	r1, [r4, #16]
   1cc58:	cmp	r0, r1
   1cc5c:	bcc	1cc70 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1b0>
   1cc60:	ldr	r2, [r4, #44]	; 0x2c
   1cc64:	mov	r0, r4
   1cc68:	mov	r1, #0
   1cc6c:	blx	r2
   1cc70:	ldrd	r2, [r8, #4]
   1cc74:	mov	r0, r4
   1cc78:	blx	sl
   1cc7c:	subs	r9, r9, #1
   1cc80:	beq	1cd9c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2dc>
   1cc84:	add	r7, r8, #12
   1cc88:	mov	r8, #44	; 0x2c
   1cc8c:	ldr	r0, [r4, #20]
   1cc90:	sub	r9, r9, #1
   1cc94:	add	r1, r0, #1
   1cc98:	str	r1, [r4, #20]
   1cc9c:	strb	r8, [r0]
   1cca0:	ldrb	r1, [r4, #25]
   1cca4:	ldr	r0, [r4, #20]
   1cca8:	cmp	r1, #0
   1ccac:	beq	1cd68 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2a8>
   1ccb0:	add	r1, r0, #1
   1ccb4:	str	r1, [r4, #20]
   1ccb8:	mov	r1, #10
   1ccbc:	strb	r1, [r0]
   1ccc0:	ldr	r0, [r4, #20]
   1ccc4:	ldrb	r2, [r4, #25]
   1ccc8:	ldr	r3, [r4, #32]
   1cccc:	ldr	r1, [r4, #16]
   1ccd0:	mla	r6, r3, r2, r0
   1ccd4:	mul	r5, r3, r2
   1ccd8:	cmp	r6, r1
   1ccdc:	bls	1cd4c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x28c>
   1cce0:	cmp	r0, r1
   1cce4:	bcc	1cd00 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x240>
   1cce8:	ldr	r2, [r4, #44]	; 0x2c
   1ccec:	mov	r0, r4
   1ccf0:	mov	r1, #0
   1ccf4:	blx	r2
   1ccf8:	ldr	r1, [r4, #16]
   1ccfc:	ldr	r0, [r4, #20]
   1cd00:	sub	r6, r1, r0
   1cd04:	cmp	r6, r5
   1cd08:	bcs	1cd4c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x28c>
   1cd0c:	mov	r1, #32
   1cd10:	mov	r2, r6
   1cd14:	bl	12940 <memset@plt>
   1cd18:	ldr	r0, [r4, #20]
   1cd1c:	ldr	r2, [r4, #44]	; 0x2c
   1cd20:	mov	r1, #0
   1cd24:	add	r0, r0, r6
   1cd28:	str	r0, [r4, #20]
   1cd2c:	mov	r0, r4
   1cd30:	blx	r2
   1cd34:	ldr	r1, [r4, #16]
   1cd38:	ldr	r0, [r4, #20]
   1cd3c:	sub	r5, r5, r6
   1cd40:	sub	r6, r1, r0
   1cd44:	cmp	r5, r6
   1cd48:	bhi	1cd0c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x24c>
   1cd4c:	mov	r1, #32
   1cd50:	mov	r2, r5
   1cd54:	bl	12940 <memset@plt>
   1cd58:	ldr	r0, [r4, #20]
   1cd5c:	add	r0, r0, r5
   1cd60:	str	r0, [r4, #20]
   1cd64:	b	1cd84 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c4>
   1cd68:	ldr	r1, [r4, #16]
   1cd6c:	cmp	r0, r1
   1cd70:	bcc	1cd84 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c4>
   1cd74:	ldr	r2, [r4, #44]	; 0x2c
   1cd78:	mov	r0, r4
   1cd7c:	mov	r1, #0
   1cd80:	blx	r2
   1cd84:	ldrd	r2, [r7]
   1cd88:	mov	r0, r4
   1cd8c:	blx	sl
   1cd90:	add	r7, r7, #8
   1cd94:	cmp	r9, #0
   1cd98:	bne	1cc8c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1cc>
   1cd9c:	ldrb	r1, [r4, #25]
   1cda0:	ldr	r0, [r4, #20]
   1cda4:	cmp	r1, #0
   1cda8:	beq	1ce68 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x3a8>
   1cdac:	add	r1, r0, #1
   1cdb0:	str	r1, [r4, #20]
   1cdb4:	mov	r1, #10
   1cdb8:	strb	r1, [r0]
   1cdbc:	ldr	r0, [r4, #32]
   1cdc0:	sub	r2, r0, #1
   1cdc4:	str	r2, [r4, #32]
   1cdc8:	ldrb	r3, [r4, #25]
   1cdcc:	ldr	r0, [r4, #20]
   1cdd0:	ldr	r1, [r4, #16]
   1cdd4:	mla	r7, r2, r3, r0
   1cdd8:	mul	r5, r2, r3
   1cddc:	cmp	r7, r1
   1cde0:	bls	1ce50 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x390>
   1cde4:	cmp	r0, r1
   1cde8:	bcc	1ce04 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x344>
   1cdec:	ldr	r2, [r4, #44]	; 0x2c
   1cdf0:	mov	r0, r4
   1cdf4:	mov	r1, #0
   1cdf8:	blx	r2
   1cdfc:	ldr	r1, [r4, #16]
   1ce00:	ldr	r0, [r4, #20]
   1ce04:	sub	r6, r1, r0
   1ce08:	cmp	r6, r5
   1ce0c:	bcs	1ce50 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x390>
   1ce10:	mov	r1, #32
   1ce14:	mov	r2, r6
   1ce18:	bl	12940 <memset@plt>
   1ce1c:	ldr	r0, [r4, #20]
   1ce20:	ldr	r2, [r4, #44]	; 0x2c
   1ce24:	mov	r1, #0
   1ce28:	add	r0, r0, r6
   1ce2c:	str	r0, [r4, #20]
   1ce30:	mov	r0, r4
   1ce34:	blx	r2
   1ce38:	ldr	r1, [r4, #16]
   1ce3c:	ldr	r0, [r4, #20]
   1ce40:	sub	r5, r5, r6
   1ce44:	sub	r6, r1, r0
   1ce48:	cmp	r5, r6
   1ce4c:	bhi	1ce10 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x350>
   1ce50:	mov	r1, #32
   1ce54:	mov	r2, r5
   1ce58:	bl	12940 <memset@plt>
   1ce5c:	ldr	r0, [r4, #20]
   1ce60:	add	r0, r0, r5
   1ce64:	str	r0, [r4, #20]
   1ce68:	add	r1, r0, #1
   1ce6c:	str	r1, [r4, #20]
   1ce70:	mov	r1, #93	; 0x5d
   1ce74:	strb	r1, [r0]
   1ce78:	sub	sp, fp, #28
   1ce7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001ce80 <flatcc_json_printer_int8_enum_vector_field@@Base>:
   1ce80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ce84:	add	fp, sp, #28
   1ce88:	sub	sp, sp, #4
   1ce8c:	mov	r4, r0
   1ce90:	ldrb	r0, [r0, #27]
   1ce94:	cmp	r0, #0
   1ce98:	beq	1ceac <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c>
   1ce9c:	mov	r0, r4
   1cea0:	sub	sp, fp, #28
   1cea4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cea8:	b	19f10 <flatcc_json_printer_int8_vector_field@@Base>
   1ceac:	mov	r0, #4
   1ceb0:	add	r0, r0, r2, lsl #1
   1ceb4:	ldr	r2, [r1, #8]
   1ceb8:	cmp	r0, r2
   1cebc:	bge	1cedc <flatcc_json_printer_int8_enum_vector_field@@Base+0x5c>
   1cec0:	ldr	r2, [r1, #4]
   1cec4:	add	r0, r2, r0
   1cec8:	ldrh	r0, [r0]
   1cecc:	cmp	r0, #0
   1ced0:	ldrne	r2, [r1]
   1ced4:	addsne	r8, r2, r0
   1ced8:	bne	1cee4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x64>
   1cedc:	sub	sp, fp, #28
   1cee0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cee4:	ldr	r0, [r1, #16]
   1cee8:	ldr	sl, [fp, #12]
   1ceec:	ldr	r2, [fp, #8]
   1cef0:	add	r7, r0, #1
   1cef4:	cmp	r0, #0
   1cef8:	str	r7, [r1, #16]
   1cefc:	ldrne	r0, [r4, #20]
   1cf00:	addne	r1, r0, #1
   1cf04:	strne	r1, [r4, #20]
   1cf08:	movne	r1, #44	; 0x2c
   1cf0c:	strbne	r1, [r0]
   1cf10:	mov	r1, r3
   1cf14:	ldr	r0, [r8]
   1cf18:	ldr	r9, [r8, r0]!
   1cf1c:	mov	r0, r4
   1cf20:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   1cf24:	ldr	r1, [r4, #32]
   1cf28:	ldr	r0, [r4, #20]
   1cf2c:	cmp	r9, #0
   1cf30:	add	r1, r1, #1
   1cf34:	str	r1, [r4, #32]
   1cf38:	add	r1, r0, #1
   1cf3c:	str	r1, [r4, #20]
   1cf40:	mov	r1, #91	; 0x5b
   1cf44:	strb	r1, [r0]
   1cf48:	beq	1d158 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2d8>
   1cf4c:	ldrb	r1, [r4, #25]
   1cf50:	ldr	r0, [r4, #20]
   1cf54:	cmp	r1, #0
   1cf58:	beq	1d014 <flatcc_json_printer_int8_enum_vector_field@@Base+0x194>
   1cf5c:	add	r1, r0, #1
   1cf60:	str	r1, [r4, #20]
   1cf64:	mov	r1, #10
   1cf68:	strb	r1, [r0]
   1cf6c:	ldr	r0, [r4, #20]
   1cf70:	ldrb	r2, [r4, #25]
   1cf74:	ldr	r3, [r4, #32]
   1cf78:	ldr	r1, [r4, #16]
   1cf7c:	mla	r7, r3, r2, r0
   1cf80:	mul	r5, r3, r2
   1cf84:	cmp	r7, r1
   1cf88:	bls	1cff8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x178>
   1cf8c:	cmp	r0, r1
   1cf90:	bcc	1cfac <flatcc_json_printer_int8_enum_vector_field@@Base+0x12c>
   1cf94:	ldr	r2, [r4, #44]	; 0x2c
   1cf98:	mov	r0, r4
   1cf9c:	mov	r1, #0
   1cfa0:	blx	r2
   1cfa4:	ldr	r1, [r4, #16]
   1cfa8:	ldr	r0, [r4, #20]
   1cfac:	sub	r6, r1, r0
   1cfb0:	cmp	r6, r5
   1cfb4:	bcs	1cff8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x178>
   1cfb8:	mov	r1, #32
   1cfbc:	mov	r2, r6
   1cfc0:	bl	12940 <memset@plt>
   1cfc4:	ldr	r0, [r4, #20]
   1cfc8:	ldr	r2, [r4, #44]	; 0x2c
   1cfcc:	mov	r1, #0
   1cfd0:	add	r0, r0, r6
   1cfd4:	str	r0, [r4, #20]
   1cfd8:	mov	r0, r4
   1cfdc:	blx	r2
   1cfe0:	ldr	r1, [r4, #16]
   1cfe4:	ldr	r0, [r4, #20]
   1cfe8:	sub	r5, r5, r6
   1cfec:	sub	r6, r1, r0
   1cff0:	cmp	r5, r6
   1cff4:	bhi	1cfb8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x138>
   1cff8:	mov	r1, #32
   1cffc:	mov	r2, r5
   1d000:	bl	12940 <memset@plt>
   1d004:	ldr	r0, [r4, #20]
   1d008:	add	r0, r0, r5
   1d00c:	str	r0, [r4, #20]
   1d010:	b	1d030 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1b0>
   1d014:	ldr	r1, [r4, #16]
   1d018:	cmp	r0, r1
   1d01c:	bcc	1d030 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1b0>
   1d020:	ldr	r2, [r4, #44]	; 0x2c
   1d024:	mov	r0, r4
   1d028:	mov	r1, #0
   1d02c:	blx	r2
   1d030:	ldrsb	r1, [r8, #4]
   1d034:	mov	r0, r4
   1d038:	blx	sl
   1d03c:	subs	r9, r9, #1
   1d040:	beq	1d158 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2d8>
   1d044:	add	r7, r8, #5
   1d048:	mov	r8, #44	; 0x2c
   1d04c:	ldr	r0, [r4, #20]
   1d050:	sub	r9, r9, #1
   1d054:	add	r1, r0, #1
   1d058:	str	r1, [r4, #20]
   1d05c:	strb	r8, [r0]
   1d060:	ldrb	r1, [r4, #25]
   1d064:	ldr	r0, [r4, #20]
   1d068:	cmp	r1, #0
   1d06c:	beq	1d128 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2a8>
   1d070:	add	r1, r0, #1
   1d074:	str	r1, [r4, #20]
   1d078:	mov	r1, #10
   1d07c:	strb	r1, [r0]
   1d080:	ldr	r0, [r4, #20]
   1d084:	ldrb	r2, [r4, #25]
   1d088:	ldr	r3, [r4, #32]
   1d08c:	ldr	r1, [r4, #16]
   1d090:	mla	r6, r3, r2, r0
   1d094:	mul	r5, r3, r2
   1d098:	cmp	r6, r1
   1d09c:	bls	1d10c <flatcc_json_printer_int8_enum_vector_field@@Base+0x28c>
   1d0a0:	cmp	r0, r1
   1d0a4:	bcc	1d0c0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x240>
   1d0a8:	ldr	r2, [r4, #44]	; 0x2c
   1d0ac:	mov	r0, r4
   1d0b0:	mov	r1, #0
   1d0b4:	blx	r2
   1d0b8:	ldr	r1, [r4, #16]
   1d0bc:	ldr	r0, [r4, #20]
   1d0c0:	sub	r6, r1, r0
   1d0c4:	cmp	r6, r5
   1d0c8:	bcs	1d10c <flatcc_json_printer_int8_enum_vector_field@@Base+0x28c>
   1d0cc:	mov	r1, #32
   1d0d0:	mov	r2, r6
   1d0d4:	bl	12940 <memset@plt>
   1d0d8:	ldr	r0, [r4, #20]
   1d0dc:	ldr	r2, [r4, #44]	; 0x2c
   1d0e0:	mov	r1, #0
   1d0e4:	add	r0, r0, r6
   1d0e8:	str	r0, [r4, #20]
   1d0ec:	mov	r0, r4
   1d0f0:	blx	r2
   1d0f4:	ldr	r1, [r4, #16]
   1d0f8:	ldr	r0, [r4, #20]
   1d0fc:	sub	r5, r5, r6
   1d100:	sub	r6, r1, r0
   1d104:	cmp	r5, r6
   1d108:	bhi	1d0cc <flatcc_json_printer_int8_enum_vector_field@@Base+0x24c>
   1d10c:	mov	r1, #32
   1d110:	mov	r2, r5
   1d114:	bl	12940 <memset@plt>
   1d118:	ldr	r0, [r4, #20]
   1d11c:	add	r0, r0, r5
   1d120:	str	r0, [r4, #20]
   1d124:	b	1d144 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c4>
   1d128:	ldr	r1, [r4, #16]
   1d12c:	cmp	r0, r1
   1d130:	bcc	1d144 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c4>
   1d134:	ldr	r2, [r4, #44]	; 0x2c
   1d138:	mov	r0, r4
   1d13c:	mov	r1, #0
   1d140:	blx	r2
   1d144:	ldrsb	r1, [r7], #1
   1d148:	mov	r0, r4
   1d14c:	blx	sl
   1d150:	cmp	r9, #0
   1d154:	bne	1d04c <flatcc_json_printer_int8_enum_vector_field@@Base+0x1cc>
   1d158:	ldrb	r1, [r4, #25]
   1d15c:	ldr	r0, [r4, #20]
   1d160:	cmp	r1, #0
   1d164:	beq	1d224 <flatcc_json_printer_int8_enum_vector_field@@Base+0x3a4>
   1d168:	add	r1, r0, #1
   1d16c:	str	r1, [r4, #20]
   1d170:	mov	r1, #10
   1d174:	strb	r1, [r0]
   1d178:	ldr	r0, [r4, #32]
   1d17c:	sub	r2, r0, #1
   1d180:	str	r2, [r4, #32]
   1d184:	ldrb	r3, [r4, #25]
   1d188:	ldr	r0, [r4, #20]
   1d18c:	ldr	r1, [r4, #16]
   1d190:	mla	r7, r2, r3, r0
   1d194:	mul	r5, r2, r3
   1d198:	cmp	r7, r1
   1d19c:	bls	1d20c <flatcc_json_printer_int8_enum_vector_field@@Base+0x38c>
   1d1a0:	cmp	r0, r1
   1d1a4:	bcc	1d1c0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x340>
   1d1a8:	ldr	r2, [r4, #44]	; 0x2c
   1d1ac:	mov	r0, r4
   1d1b0:	mov	r1, #0
   1d1b4:	blx	r2
   1d1b8:	ldr	r1, [r4, #16]
   1d1bc:	ldr	r0, [r4, #20]
   1d1c0:	sub	r6, r1, r0
   1d1c4:	cmp	r6, r5
   1d1c8:	bcs	1d20c <flatcc_json_printer_int8_enum_vector_field@@Base+0x38c>
   1d1cc:	mov	r1, #32
   1d1d0:	mov	r2, r6
   1d1d4:	bl	12940 <memset@plt>
   1d1d8:	ldr	r0, [r4, #20]
   1d1dc:	ldr	r2, [r4, #44]	; 0x2c
   1d1e0:	mov	r1, #0
   1d1e4:	add	r0, r0, r6
   1d1e8:	str	r0, [r4, #20]
   1d1ec:	mov	r0, r4
   1d1f0:	blx	r2
   1d1f4:	ldr	r1, [r4, #16]
   1d1f8:	ldr	r0, [r4, #20]
   1d1fc:	sub	r5, r5, r6
   1d200:	sub	r6, r1, r0
   1d204:	cmp	r5, r6
   1d208:	bhi	1d1cc <flatcc_json_printer_int8_enum_vector_field@@Base+0x34c>
   1d20c:	mov	r1, #32
   1d210:	mov	r2, r5
   1d214:	bl	12940 <memset@plt>
   1d218:	ldr	r0, [r4, #20]
   1d21c:	add	r0, r0, r5
   1d220:	str	r0, [r4, #20]
   1d224:	add	r1, r0, #1
   1d228:	str	r1, [r4, #20]
   1d22c:	mov	r1, #93	; 0x5d
   1d230:	strb	r1, [r0]
   1d234:	sub	sp, fp, #28
   1d238:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001d23c <flatcc_json_printer_int16_enum_vector_field@@Base>:
   1d23c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d240:	add	fp, sp, #28
   1d244:	sub	sp, sp, #4
   1d248:	mov	r4, r0
   1d24c:	ldrb	r0, [r0, #27]
   1d250:	cmp	r0, #0
   1d254:	beq	1d268 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c>
   1d258:	mov	r0, r4
   1d25c:	sub	sp, fp, #28
   1d260:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d264:	b	1a458 <flatcc_json_printer_int16_vector_field@@Base>
   1d268:	mov	r0, #4
   1d26c:	add	r0, r0, r2, lsl #1
   1d270:	ldr	r2, [r1, #8]
   1d274:	cmp	r0, r2
   1d278:	bge	1d298 <flatcc_json_printer_int16_enum_vector_field@@Base+0x5c>
   1d27c:	ldr	r2, [r1, #4]
   1d280:	add	r0, r2, r0
   1d284:	ldrh	r0, [r0]
   1d288:	cmp	r0, #0
   1d28c:	ldrne	r2, [r1]
   1d290:	addsne	r8, r2, r0
   1d294:	bne	1d2a0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x64>
   1d298:	sub	sp, fp, #28
   1d29c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d2a0:	ldr	r0, [r1, #16]
   1d2a4:	ldr	sl, [fp, #12]
   1d2a8:	ldr	r2, [fp, #8]
   1d2ac:	add	r7, r0, #1
   1d2b0:	cmp	r0, #0
   1d2b4:	str	r7, [r1, #16]
   1d2b8:	ldrne	r0, [r4, #20]
   1d2bc:	addne	r1, r0, #1
   1d2c0:	strne	r1, [r4, #20]
   1d2c4:	movne	r1, #44	; 0x2c
   1d2c8:	strbne	r1, [r0]
   1d2cc:	mov	r1, r3
   1d2d0:	ldr	r0, [r8]
   1d2d4:	ldr	r9, [r8, r0]!
   1d2d8:	mov	r0, r4
   1d2dc:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   1d2e0:	ldr	r1, [r4, #32]
   1d2e4:	ldr	r0, [r4, #20]
   1d2e8:	cmp	r9, #0
   1d2ec:	add	r1, r1, #1
   1d2f0:	str	r1, [r4, #32]
   1d2f4:	add	r1, r0, #1
   1d2f8:	str	r1, [r4, #20]
   1d2fc:	mov	r1, #91	; 0x5b
   1d300:	strb	r1, [r0]
   1d304:	beq	1d514 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2d8>
   1d308:	ldrb	r1, [r4, #25]
   1d30c:	ldr	r0, [r4, #20]
   1d310:	cmp	r1, #0
   1d314:	beq	1d3d0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x194>
   1d318:	add	r1, r0, #1
   1d31c:	str	r1, [r4, #20]
   1d320:	mov	r1, #10
   1d324:	strb	r1, [r0]
   1d328:	ldr	r0, [r4, #20]
   1d32c:	ldrb	r2, [r4, #25]
   1d330:	ldr	r3, [r4, #32]
   1d334:	ldr	r1, [r4, #16]
   1d338:	mla	r7, r3, r2, r0
   1d33c:	mul	r5, r3, r2
   1d340:	cmp	r7, r1
   1d344:	bls	1d3b4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x178>
   1d348:	cmp	r0, r1
   1d34c:	bcc	1d368 <flatcc_json_printer_int16_enum_vector_field@@Base+0x12c>
   1d350:	ldr	r2, [r4, #44]	; 0x2c
   1d354:	mov	r0, r4
   1d358:	mov	r1, #0
   1d35c:	blx	r2
   1d360:	ldr	r1, [r4, #16]
   1d364:	ldr	r0, [r4, #20]
   1d368:	sub	r6, r1, r0
   1d36c:	cmp	r6, r5
   1d370:	bcs	1d3b4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x178>
   1d374:	mov	r1, #32
   1d378:	mov	r2, r6
   1d37c:	bl	12940 <memset@plt>
   1d380:	ldr	r0, [r4, #20]
   1d384:	ldr	r2, [r4, #44]	; 0x2c
   1d388:	mov	r1, #0
   1d38c:	add	r0, r0, r6
   1d390:	str	r0, [r4, #20]
   1d394:	mov	r0, r4
   1d398:	blx	r2
   1d39c:	ldr	r1, [r4, #16]
   1d3a0:	ldr	r0, [r4, #20]
   1d3a4:	sub	r5, r5, r6
   1d3a8:	sub	r6, r1, r0
   1d3ac:	cmp	r5, r6
   1d3b0:	bhi	1d374 <flatcc_json_printer_int16_enum_vector_field@@Base+0x138>
   1d3b4:	mov	r1, #32
   1d3b8:	mov	r2, r5
   1d3bc:	bl	12940 <memset@plt>
   1d3c0:	ldr	r0, [r4, #20]
   1d3c4:	add	r0, r0, r5
   1d3c8:	str	r0, [r4, #20]
   1d3cc:	b	1d3ec <flatcc_json_printer_int16_enum_vector_field@@Base+0x1b0>
   1d3d0:	ldr	r1, [r4, #16]
   1d3d4:	cmp	r0, r1
   1d3d8:	bcc	1d3ec <flatcc_json_printer_int16_enum_vector_field@@Base+0x1b0>
   1d3dc:	ldr	r2, [r4, #44]	; 0x2c
   1d3e0:	mov	r0, r4
   1d3e4:	mov	r1, #0
   1d3e8:	blx	r2
   1d3ec:	ldrsh	r1, [r8, #4]
   1d3f0:	mov	r0, r4
   1d3f4:	blx	sl
   1d3f8:	subs	r9, r9, #1
   1d3fc:	beq	1d514 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2d8>
   1d400:	add	r7, r8, #6
   1d404:	mov	r8, #44	; 0x2c
   1d408:	ldr	r0, [r4, #20]
   1d40c:	sub	r9, r9, #1
   1d410:	add	r1, r0, #1
   1d414:	str	r1, [r4, #20]
   1d418:	strb	r8, [r0]
   1d41c:	ldrb	r1, [r4, #25]
   1d420:	ldr	r0, [r4, #20]
   1d424:	cmp	r1, #0
   1d428:	beq	1d4e4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2a8>
   1d42c:	add	r1, r0, #1
   1d430:	str	r1, [r4, #20]
   1d434:	mov	r1, #10
   1d438:	strb	r1, [r0]
   1d43c:	ldr	r0, [r4, #20]
   1d440:	ldrb	r2, [r4, #25]
   1d444:	ldr	r3, [r4, #32]
   1d448:	ldr	r1, [r4, #16]
   1d44c:	mla	r6, r3, r2, r0
   1d450:	mul	r5, r3, r2
   1d454:	cmp	r6, r1
   1d458:	bls	1d4c8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x28c>
   1d45c:	cmp	r0, r1
   1d460:	bcc	1d47c <flatcc_json_printer_int16_enum_vector_field@@Base+0x240>
   1d464:	ldr	r2, [r4, #44]	; 0x2c
   1d468:	mov	r0, r4
   1d46c:	mov	r1, #0
   1d470:	blx	r2
   1d474:	ldr	r1, [r4, #16]
   1d478:	ldr	r0, [r4, #20]
   1d47c:	sub	r6, r1, r0
   1d480:	cmp	r6, r5
   1d484:	bcs	1d4c8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x28c>
   1d488:	mov	r1, #32
   1d48c:	mov	r2, r6
   1d490:	bl	12940 <memset@plt>
   1d494:	ldr	r0, [r4, #20]
   1d498:	ldr	r2, [r4, #44]	; 0x2c
   1d49c:	mov	r1, #0
   1d4a0:	add	r0, r0, r6
   1d4a4:	str	r0, [r4, #20]
   1d4a8:	mov	r0, r4
   1d4ac:	blx	r2
   1d4b0:	ldr	r1, [r4, #16]
   1d4b4:	ldr	r0, [r4, #20]
   1d4b8:	sub	r5, r5, r6
   1d4bc:	sub	r6, r1, r0
   1d4c0:	cmp	r5, r6
   1d4c4:	bhi	1d488 <flatcc_json_printer_int16_enum_vector_field@@Base+0x24c>
   1d4c8:	mov	r1, #32
   1d4cc:	mov	r2, r5
   1d4d0:	bl	12940 <memset@plt>
   1d4d4:	ldr	r0, [r4, #20]
   1d4d8:	add	r0, r0, r5
   1d4dc:	str	r0, [r4, #20]
   1d4e0:	b	1d500 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c4>
   1d4e4:	ldr	r1, [r4, #16]
   1d4e8:	cmp	r0, r1
   1d4ec:	bcc	1d500 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c4>
   1d4f0:	ldr	r2, [r4, #44]	; 0x2c
   1d4f4:	mov	r0, r4
   1d4f8:	mov	r1, #0
   1d4fc:	blx	r2
   1d500:	ldrsh	r1, [r7], #2
   1d504:	mov	r0, r4
   1d508:	blx	sl
   1d50c:	cmp	r9, #0
   1d510:	bne	1d408 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1cc>
   1d514:	ldrb	r1, [r4, #25]
   1d518:	ldr	r0, [r4, #20]
   1d51c:	cmp	r1, #0
   1d520:	beq	1d5e0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x3a4>
   1d524:	add	r1, r0, #1
   1d528:	str	r1, [r4, #20]
   1d52c:	mov	r1, #10
   1d530:	strb	r1, [r0]
   1d534:	ldr	r0, [r4, #32]
   1d538:	sub	r2, r0, #1
   1d53c:	str	r2, [r4, #32]
   1d540:	ldrb	r3, [r4, #25]
   1d544:	ldr	r0, [r4, #20]
   1d548:	ldr	r1, [r4, #16]
   1d54c:	mla	r7, r2, r3, r0
   1d550:	mul	r5, r2, r3
   1d554:	cmp	r7, r1
   1d558:	bls	1d5c8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x38c>
   1d55c:	cmp	r0, r1
   1d560:	bcc	1d57c <flatcc_json_printer_int16_enum_vector_field@@Base+0x340>
   1d564:	ldr	r2, [r4, #44]	; 0x2c
   1d568:	mov	r0, r4
   1d56c:	mov	r1, #0
   1d570:	blx	r2
   1d574:	ldr	r1, [r4, #16]
   1d578:	ldr	r0, [r4, #20]
   1d57c:	sub	r6, r1, r0
   1d580:	cmp	r6, r5
   1d584:	bcs	1d5c8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x38c>
   1d588:	mov	r1, #32
   1d58c:	mov	r2, r6
   1d590:	bl	12940 <memset@plt>
   1d594:	ldr	r0, [r4, #20]
   1d598:	ldr	r2, [r4, #44]	; 0x2c
   1d59c:	mov	r1, #0
   1d5a0:	add	r0, r0, r6
   1d5a4:	str	r0, [r4, #20]
   1d5a8:	mov	r0, r4
   1d5ac:	blx	r2
   1d5b0:	ldr	r1, [r4, #16]
   1d5b4:	ldr	r0, [r4, #20]
   1d5b8:	sub	r5, r5, r6
   1d5bc:	sub	r6, r1, r0
   1d5c0:	cmp	r5, r6
   1d5c4:	bhi	1d588 <flatcc_json_printer_int16_enum_vector_field@@Base+0x34c>
   1d5c8:	mov	r1, #32
   1d5cc:	mov	r2, r5
   1d5d0:	bl	12940 <memset@plt>
   1d5d4:	ldr	r0, [r4, #20]
   1d5d8:	add	r0, r0, r5
   1d5dc:	str	r0, [r4, #20]
   1d5e0:	add	r1, r0, #1
   1d5e4:	str	r1, [r4, #20]
   1d5e8:	mov	r1, #93	; 0x5d
   1d5ec:	strb	r1, [r0]
   1d5f0:	sub	sp, fp, #28
   1d5f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001d5f8 <flatcc_json_printer_int32_enum_vector_field@@Base>:
   1d5f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d5fc:	add	fp, sp, #28
   1d600:	sub	sp, sp, #4
   1d604:	mov	r4, r0
   1d608:	ldrb	r0, [r0, #27]
   1d60c:	cmp	r0, #0
   1d610:	beq	1d624 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c>
   1d614:	mov	r0, r4
   1d618:	sub	sp, fp, #28
   1d61c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d620:	b	1a850 <flatcc_json_printer_int32_vector_field@@Base>
   1d624:	mov	r0, #4
   1d628:	add	r0, r0, r2, lsl #1
   1d62c:	ldr	r2, [r1, #8]
   1d630:	cmp	r0, r2
   1d634:	bge	1d654 <flatcc_json_printer_int32_enum_vector_field@@Base+0x5c>
   1d638:	ldr	r2, [r1, #4]
   1d63c:	add	r0, r2, r0
   1d640:	ldrh	r0, [r0]
   1d644:	cmp	r0, #0
   1d648:	ldrne	r2, [r1]
   1d64c:	addsne	r8, r2, r0
   1d650:	bne	1d65c <flatcc_json_printer_int32_enum_vector_field@@Base+0x64>
   1d654:	sub	sp, fp, #28
   1d658:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d65c:	ldr	r0, [r1, #16]
   1d660:	ldr	sl, [fp, #12]
   1d664:	ldr	r2, [fp, #8]
   1d668:	add	r7, r0, #1
   1d66c:	cmp	r0, #0
   1d670:	str	r7, [r1, #16]
   1d674:	ldrne	r0, [r4, #20]
   1d678:	addne	r1, r0, #1
   1d67c:	strne	r1, [r4, #20]
   1d680:	movne	r1, #44	; 0x2c
   1d684:	strbne	r1, [r0]
   1d688:	mov	r1, r3
   1d68c:	ldr	r0, [r8]
   1d690:	ldr	r9, [r8, r0]!
   1d694:	mov	r0, r4
   1d698:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   1d69c:	ldr	r1, [r4, #32]
   1d6a0:	ldr	r0, [r4, #20]
   1d6a4:	cmp	r9, #0
   1d6a8:	add	r1, r1, #1
   1d6ac:	str	r1, [r4, #32]
   1d6b0:	add	r1, r0, #1
   1d6b4:	str	r1, [r4, #20]
   1d6b8:	mov	r1, #91	; 0x5b
   1d6bc:	strb	r1, [r0]
   1d6c0:	beq	1d8d0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2d8>
   1d6c4:	ldrb	r1, [r4, #25]
   1d6c8:	ldr	r0, [r4, #20]
   1d6cc:	cmp	r1, #0
   1d6d0:	beq	1d78c <flatcc_json_printer_int32_enum_vector_field@@Base+0x194>
   1d6d4:	add	r1, r0, #1
   1d6d8:	str	r1, [r4, #20]
   1d6dc:	mov	r1, #10
   1d6e0:	strb	r1, [r0]
   1d6e4:	ldr	r0, [r4, #20]
   1d6e8:	ldrb	r2, [r4, #25]
   1d6ec:	ldr	r3, [r4, #32]
   1d6f0:	ldr	r1, [r4, #16]
   1d6f4:	mla	r7, r3, r2, r0
   1d6f8:	mul	r5, r3, r2
   1d6fc:	cmp	r7, r1
   1d700:	bls	1d770 <flatcc_json_printer_int32_enum_vector_field@@Base+0x178>
   1d704:	cmp	r0, r1
   1d708:	bcc	1d724 <flatcc_json_printer_int32_enum_vector_field@@Base+0x12c>
   1d70c:	ldr	r2, [r4, #44]	; 0x2c
   1d710:	mov	r0, r4
   1d714:	mov	r1, #0
   1d718:	blx	r2
   1d71c:	ldr	r1, [r4, #16]
   1d720:	ldr	r0, [r4, #20]
   1d724:	sub	r6, r1, r0
   1d728:	cmp	r6, r5
   1d72c:	bcs	1d770 <flatcc_json_printer_int32_enum_vector_field@@Base+0x178>
   1d730:	mov	r1, #32
   1d734:	mov	r2, r6
   1d738:	bl	12940 <memset@plt>
   1d73c:	ldr	r0, [r4, #20]
   1d740:	ldr	r2, [r4, #44]	; 0x2c
   1d744:	mov	r1, #0
   1d748:	add	r0, r0, r6
   1d74c:	str	r0, [r4, #20]
   1d750:	mov	r0, r4
   1d754:	blx	r2
   1d758:	ldr	r1, [r4, #16]
   1d75c:	ldr	r0, [r4, #20]
   1d760:	sub	r5, r5, r6
   1d764:	sub	r6, r1, r0
   1d768:	cmp	r5, r6
   1d76c:	bhi	1d730 <flatcc_json_printer_int32_enum_vector_field@@Base+0x138>
   1d770:	mov	r1, #32
   1d774:	mov	r2, r5
   1d778:	bl	12940 <memset@plt>
   1d77c:	ldr	r0, [r4, #20]
   1d780:	add	r0, r0, r5
   1d784:	str	r0, [r4, #20]
   1d788:	b	1d7a8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1b0>
   1d78c:	ldr	r1, [r4, #16]
   1d790:	cmp	r0, r1
   1d794:	bcc	1d7a8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1b0>
   1d798:	ldr	r2, [r4, #44]	; 0x2c
   1d79c:	mov	r0, r4
   1d7a0:	mov	r1, #0
   1d7a4:	blx	r2
   1d7a8:	ldr	r1, [r8, #4]
   1d7ac:	mov	r0, r4
   1d7b0:	blx	sl
   1d7b4:	subs	r9, r9, #1
   1d7b8:	beq	1d8d0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2d8>
   1d7bc:	add	r7, r8, #8
   1d7c0:	mov	r8, #44	; 0x2c
   1d7c4:	ldr	r0, [r4, #20]
   1d7c8:	sub	r9, r9, #1
   1d7cc:	add	r1, r0, #1
   1d7d0:	str	r1, [r4, #20]
   1d7d4:	strb	r8, [r0]
   1d7d8:	ldrb	r1, [r4, #25]
   1d7dc:	ldr	r0, [r4, #20]
   1d7e0:	cmp	r1, #0
   1d7e4:	beq	1d8a0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2a8>
   1d7e8:	add	r1, r0, #1
   1d7ec:	str	r1, [r4, #20]
   1d7f0:	mov	r1, #10
   1d7f4:	strb	r1, [r0]
   1d7f8:	ldr	r0, [r4, #20]
   1d7fc:	ldrb	r2, [r4, #25]
   1d800:	ldr	r3, [r4, #32]
   1d804:	ldr	r1, [r4, #16]
   1d808:	mla	r6, r3, r2, r0
   1d80c:	mul	r5, r3, r2
   1d810:	cmp	r6, r1
   1d814:	bls	1d884 <flatcc_json_printer_int32_enum_vector_field@@Base+0x28c>
   1d818:	cmp	r0, r1
   1d81c:	bcc	1d838 <flatcc_json_printer_int32_enum_vector_field@@Base+0x240>
   1d820:	ldr	r2, [r4, #44]	; 0x2c
   1d824:	mov	r0, r4
   1d828:	mov	r1, #0
   1d82c:	blx	r2
   1d830:	ldr	r1, [r4, #16]
   1d834:	ldr	r0, [r4, #20]
   1d838:	sub	r6, r1, r0
   1d83c:	cmp	r6, r5
   1d840:	bcs	1d884 <flatcc_json_printer_int32_enum_vector_field@@Base+0x28c>
   1d844:	mov	r1, #32
   1d848:	mov	r2, r6
   1d84c:	bl	12940 <memset@plt>
   1d850:	ldr	r0, [r4, #20]
   1d854:	ldr	r2, [r4, #44]	; 0x2c
   1d858:	mov	r1, #0
   1d85c:	add	r0, r0, r6
   1d860:	str	r0, [r4, #20]
   1d864:	mov	r0, r4
   1d868:	blx	r2
   1d86c:	ldr	r1, [r4, #16]
   1d870:	ldr	r0, [r4, #20]
   1d874:	sub	r5, r5, r6
   1d878:	sub	r6, r1, r0
   1d87c:	cmp	r5, r6
   1d880:	bhi	1d844 <flatcc_json_printer_int32_enum_vector_field@@Base+0x24c>
   1d884:	mov	r1, #32
   1d888:	mov	r2, r5
   1d88c:	bl	12940 <memset@plt>
   1d890:	ldr	r0, [r4, #20]
   1d894:	add	r0, r0, r5
   1d898:	str	r0, [r4, #20]
   1d89c:	b	1d8bc <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c4>
   1d8a0:	ldr	r1, [r4, #16]
   1d8a4:	cmp	r0, r1
   1d8a8:	bcc	1d8bc <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c4>
   1d8ac:	ldr	r2, [r4, #44]	; 0x2c
   1d8b0:	mov	r0, r4
   1d8b4:	mov	r1, #0
   1d8b8:	blx	r2
   1d8bc:	ldr	r1, [r7], #4
   1d8c0:	mov	r0, r4
   1d8c4:	blx	sl
   1d8c8:	cmp	r9, #0
   1d8cc:	bne	1d7c4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1cc>
   1d8d0:	ldrb	r1, [r4, #25]
   1d8d4:	ldr	r0, [r4, #20]
   1d8d8:	cmp	r1, #0
   1d8dc:	beq	1d99c <flatcc_json_printer_int32_enum_vector_field@@Base+0x3a4>
   1d8e0:	add	r1, r0, #1
   1d8e4:	str	r1, [r4, #20]
   1d8e8:	mov	r1, #10
   1d8ec:	strb	r1, [r0]
   1d8f0:	ldr	r0, [r4, #32]
   1d8f4:	sub	r2, r0, #1
   1d8f8:	str	r2, [r4, #32]
   1d8fc:	ldrb	r3, [r4, #25]
   1d900:	ldr	r0, [r4, #20]
   1d904:	ldr	r1, [r4, #16]
   1d908:	mla	r7, r2, r3, r0
   1d90c:	mul	r5, r2, r3
   1d910:	cmp	r7, r1
   1d914:	bls	1d984 <flatcc_json_printer_int32_enum_vector_field@@Base+0x38c>
   1d918:	cmp	r0, r1
   1d91c:	bcc	1d938 <flatcc_json_printer_int32_enum_vector_field@@Base+0x340>
   1d920:	ldr	r2, [r4, #44]	; 0x2c
   1d924:	mov	r0, r4
   1d928:	mov	r1, #0
   1d92c:	blx	r2
   1d930:	ldr	r1, [r4, #16]
   1d934:	ldr	r0, [r4, #20]
   1d938:	sub	r6, r1, r0
   1d93c:	cmp	r6, r5
   1d940:	bcs	1d984 <flatcc_json_printer_int32_enum_vector_field@@Base+0x38c>
   1d944:	mov	r1, #32
   1d948:	mov	r2, r6
   1d94c:	bl	12940 <memset@plt>
   1d950:	ldr	r0, [r4, #20]
   1d954:	ldr	r2, [r4, #44]	; 0x2c
   1d958:	mov	r1, #0
   1d95c:	add	r0, r0, r6
   1d960:	str	r0, [r4, #20]
   1d964:	mov	r0, r4
   1d968:	blx	r2
   1d96c:	ldr	r1, [r4, #16]
   1d970:	ldr	r0, [r4, #20]
   1d974:	sub	r5, r5, r6
   1d978:	sub	r6, r1, r0
   1d97c:	cmp	r5, r6
   1d980:	bhi	1d944 <flatcc_json_printer_int32_enum_vector_field@@Base+0x34c>
   1d984:	mov	r1, #32
   1d988:	mov	r2, r5
   1d98c:	bl	12940 <memset@plt>
   1d990:	ldr	r0, [r4, #20]
   1d994:	add	r0, r0, r5
   1d998:	str	r0, [r4, #20]
   1d99c:	add	r1, r0, #1
   1d9a0:	str	r1, [r4, #20]
   1d9a4:	mov	r1, #93	; 0x5d
   1d9a8:	strb	r1, [r0]
   1d9ac:	sub	sp, fp, #28
   1d9b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001d9b4 <flatcc_json_printer_int64_enum_vector_field@@Base>:
   1d9b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d9b8:	add	fp, sp, #28
   1d9bc:	sub	sp, sp, #4
   1d9c0:	mov	r4, r0
   1d9c4:	ldrb	r0, [r0, #27]
   1d9c8:	cmp	r0, #0
   1d9cc:	beq	1d9e0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c>
   1d9d0:	mov	r0, r4
   1d9d4:	sub	sp, fp, #28
   1d9d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d9dc:	b	1ac38 <flatcc_json_printer_int64_vector_field@@Base>
   1d9e0:	mov	r0, #4
   1d9e4:	add	r0, r0, r2, lsl #1
   1d9e8:	ldr	r2, [r1, #8]
   1d9ec:	cmp	r0, r2
   1d9f0:	bge	1da10 <flatcc_json_printer_int64_enum_vector_field@@Base+0x5c>
   1d9f4:	ldr	r2, [r1, #4]
   1d9f8:	add	r0, r2, r0
   1d9fc:	ldrh	r0, [r0]
   1da00:	cmp	r0, #0
   1da04:	ldrne	r2, [r1]
   1da08:	addsne	r8, r2, r0
   1da0c:	bne	1da18 <flatcc_json_printer_int64_enum_vector_field@@Base+0x64>
   1da10:	sub	sp, fp, #28
   1da14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1da18:	ldr	r0, [r1, #16]
   1da1c:	ldr	sl, [fp, #12]
   1da20:	ldr	r2, [fp, #8]
   1da24:	add	r7, r0, #1
   1da28:	cmp	r0, #0
   1da2c:	str	r7, [r1, #16]
   1da30:	ldrne	r0, [r4, #20]
   1da34:	addne	r1, r0, #1
   1da38:	strne	r1, [r4, #20]
   1da3c:	movne	r1, #44	; 0x2c
   1da40:	strbne	r1, [r0]
   1da44:	mov	r1, r3
   1da48:	ldr	r0, [r8]
   1da4c:	ldr	r9, [r8, r0]!
   1da50:	mov	r0, r4
   1da54:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   1da58:	ldr	r1, [r4, #32]
   1da5c:	ldr	r0, [r4, #20]
   1da60:	cmp	r9, #0
   1da64:	add	r1, r1, #1
   1da68:	str	r1, [r4, #32]
   1da6c:	add	r1, r0, #1
   1da70:	str	r1, [r4, #20]
   1da74:	mov	r1, #91	; 0x5b
   1da78:	strb	r1, [r0]
   1da7c:	beq	1dc90 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2dc>
   1da80:	ldrb	r1, [r4, #25]
   1da84:	ldr	r0, [r4, #20]
   1da88:	cmp	r1, #0
   1da8c:	beq	1db48 <flatcc_json_printer_int64_enum_vector_field@@Base+0x194>
   1da90:	add	r1, r0, #1
   1da94:	str	r1, [r4, #20]
   1da98:	mov	r1, #10
   1da9c:	strb	r1, [r0]
   1daa0:	ldr	r0, [r4, #20]
   1daa4:	ldrb	r2, [r4, #25]
   1daa8:	ldr	r3, [r4, #32]
   1daac:	ldr	r1, [r4, #16]
   1dab0:	mla	r7, r3, r2, r0
   1dab4:	mul	r5, r3, r2
   1dab8:	cmp	r7, r1
   1dabc:	bls	1db2c <flatcc_json_printer_int64_enum_vector_field@@Base+0x178>
   1dac0:	cmp	r0, r1
   1dac4:	bcc	1dae0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x12c>
   1dac8:	ldr	r2, [r4, #44]	; 0x2c
   1dacc:	mov	r0, r4
   1dad0:	mov	r1, #0
   1dad4:	blx	r2
   1dad8:	ldr	r1, [r4, #16]
   1dadc:	ldr	r0, [r4, #20]
   1dae0:	sub	r6, r1, r0
   1dae4:	cmp	r6, r5
   1dae8:	bcs	1db2c <flatcc_json_printer_int64_enum_vector_field@@Base+0x178>
   1daec:	mov	r1, #32
   1daf0:	mov	r2, r6
   1daf4:	bl	12940 <memset@plt>
   1daf8:	ldr	r0, [r4, #20]
   1dafc:	ldr	r2, [r4, #44]	; 0x2c
   1db00:	mov	r1, #0
   1db04:	add	r0, r0, r6
   1db08:	str	r0, [r4, #20]
   1db0c:	mov	r0, r4
   1db10:	blx	r2
   1db14:	ldr	r1, [r4, #16]
   1db18:	ldr	r0, [r4, #20]
   1db1c:	sub	r5, r5, r6
   1db20:	sub	r6, r1, r0
   1db24:	cmp	r5, r6
   1db28:	bhi	1daec <flatcc_json_printer_int64_enum_vector_field@@Base+0x138>
   1db2c:	mov	r1, #32
   1db30:	mov	r2, r5
   1db34:	bl	12940 <memset@plt>
   1db38:	ldr	r0, [r4, #20]
   1db3c:	add	r0, r0, r5
   1db40:	str	r0, [r4, #20]
   1db44:	b	1db64 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1b0>
   1db48:	ldr	r1, [r4, #16]
   1db4c:	cmp	r0, r1
   1db50:	bcc	1db64 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1b0>
   1db54:	ldr	r2, [r4, #44]	; 0x2c
   1db58:	mov	r0, r4
   1db5c:	mov	r1, #0
   1db60:	blx	r2
   1db64:	ldrd	r2, [r8, #4]
   1db68:	mov	r0, r4
   1db6c:	blx	sl
   1db70:	subs	r9, r9, #1
   1db74:	beq	1dc90 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2dc>
   1db78:	add	r7, r8, #12
   1db7c:	mov	r8, #44	; 0x2c
   1db80:	ldr	r0, [r4, #20]
   1db84:	sub	r9, r9, #1
   1db88:	add	r1, r0, #1
   1db8c:	str	r1, [r4, #20]
   1db90:	strb	r8, [r0]
   1db94:	ldrb	r1, [r4, #25]
   1db98:	ldr	r0, [r4, #20]
   1db9c:	cmp	r1, #0
   1dba0:	beq	1dc5c <flatcc_json_printer_int64_enum_vector_field@@Base+0x2a8>
   1dba4:	add	r1, r0, #1
   1dba8:	str	r1, [r4, #20]
   1dbac:	mov	r1, #10
   1dbb0:	strb	r1, [r0]
   1dbb4:	ldr	r0, [r4, #20]
   1dbb8:	ldrb	r2, [r4, #25]
   1dbbc:	ldr	r3, [r4, #32]
   1dbc0:	ldr	r1, [r4, #16]
   1dbc4:	mla	r6, r3, r2, r0
   1dbc8:	mul	r5, r3, r2
   1dbcc:	cmp	r6, r1
   1dbd0:	bls	1dc40 <flatcc_json_printer_int64_enum_vector_field@@Base+0x28c>
   1dbd4:	cmp	r0, r1
   1dbd8:	bcc	1dbf4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x240>
   1dbdc:	ldr	r2, [r4, #44]	; 0x2c
   1dbe0:	mov	r0, r4
   1dbe4:	mov	r1, #0
   1dbe8:	blx	r2
   1dbec:	ldr	r1, [r4, #16]
   1dbf0:	ldr	r0, [r4, #20]
   1dbf4:	sub	r6, r1, r0
   1dbf8:	cmp	r6, r5
   1dbfc:	bcs	1dc40 <flatcc_json_printer_int64_enum_vector_field@@Base+0x28c>
   1dc00:	mov	r1, #32
   1dc04:	mov	r2, r6
   1dc08:	bl	12940 <memset@plt>
   1dc0c:	ldr	r0, [r4, #20]
   1dc10:	ldr	r2, [r4, #44]	; 0x2c
   1dc14:	mov	r1, #0
   1dc18:	add	r0, r0, r6
   1dc1c:	str	r0, [r4, #20]
   1dc20:	mov	r0, r4
   1dc24:	blx	r2
   1dc28:	ldr	r1, [r4, #16]
   1dc2c:	ldr	r0, [r4, #20]
   1dc30:	sub	r5, r5, r6
   1dc34:	sub	r6, r1, r0
   1dc38:	cmp	r5, r6
   1dc3c:	bhi	1dc00 <flatcc_json_printer_int64_enum_vector_field@@Base+0x24c>
   1dc40:	mov	r1, #32
   1dc44:	mov	r2, r5
   1dc48:	bl	12940 <memset@plt>
   1dc4c:	ldr	r0, [r4, #20]
   1dc50:	add	r0, r0, r5
   1dc54:	str	r0, [r4, #20]
   1dc58:	b	1dc78 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c4>
   1dc5c:	ldr	r1, [r4, #16]
   1dc60:	cmp	r0, r1
   1dc64:	bcc	1dc78 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c4>
   1dc68:	ldr	r2, [r4, #44]	; 0x2c
   1dc6c:	mov	r0, r4
   1dc70:	mov	r1, #0
   1dc74:	blx	r2
   1dc78:	ldrd	r2, [r7]
   1dc7c:	mov	r0, r4
   1dc80:	blx	sl
   1dc84:	add	r7, r7, #8
   1dc88:	cmp	r9, #0
   1dc8c:	bne	1db80 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1cc>
   1dc90:	ldrb	r1, [r4, #25]
   1dc94:	ldr	r0, [r4, #20]
   1dc98:	cmp	r1, #0
   1dc9c:	beq	1dd5c <flatcc_json_printer_int64_enum_vector_field@@Base+0x3a8>
   1dca0:	add	r1, r0, #1
   1dca4:	str	r1, [r4, #20]
   1dca8:	mov	r1, #10
   1dcac:	strb	r1, [r0]
   1dcb0:	ldr	r0, [r4, #32]
   1dcb4:	sub	r2, r0, #1
   1dcb8:	str	r2, [r4, #32]
   1dcbc:	ldrb	r3, [r4, #25]
   1dcc0:	ldr	r0, [r4, #20]
   1dcc4:	ldr	r1, [r4, #16]
   1dcc8:	mla	r7, r2, r3, r0
   1dccc:	mul	r5, r2, r3
   1dcd0:	cmp	r7, r1
   1dcd4:	bls	1dd44 <flatcc_json_printer_int64_enum_vector_field@@Base+0x390>
   1dcd8:	cmp	r0, r1
   1dcdc:	bcc	1dcf8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x344>
   1dce0:	ldr	r2, [r4, #44]	; 0x2c
   1dce4:	mov	r0, r4
   1dce8:	mov	r1, #0
   1dcec:	blx	r2
   1dcf0:	ldr	r1, [r4, #16]
   1dcf4:	ldr	r0, [r4, #20]
   1dcf8:	sub	r6, r1, r0
   1dcfc:	cmp	r6, r5
   1dd00:	bcs	1dd44 <flatcc_json_printer_int64_enum_vector_field@@Base+0x390>
   1dd04:	mov	r1, #32
   1dd08:	mov	r2, r6
   1dd0c:	bl	12940 <memset@plt>
   1dd10:	ldr	r0, [r4, #20]
   1dd14:	ldr	r2, [r4, #44]	; 0x2c
   1dd18:	mov	r1, #0
   1dd1c:	add	r0, r0, r6
   1dd20:	str	r0, [r4, #20]
   1dd24:	mov	r0, r4
   1dd28:	blx	r2
   1dd2c:	ldr	r1, [r4, #16]
   1dd30:	ldr	r0, [r4, #20]
   1dd34:	sub	r5, r5, r6
   1dd38:	sub	r6, r1, r0
   1dd3c:	cmp	r5, r6
   1dd40:	bhi	1dd04 <flatcc_json_printer_int64_enum_vector_field@@Base+0x350>
   1dd44:	mov	r1, #32
   1dd48:	mov	r2, r5
   1dd4c:	bl	12940 <memset@plt>
   1dd50:	ldr	r0, [r4, #20]
   1dd54:	add	r0, r0, r5
   1dd58:	str	r0, [r4, #20]
   1dd5c:	add	r1, r0, #1
   1dd60:	str	r1, [r4, #20]
   1dd64:	mov	r1, #93	; 0x5d
   1dd68:	strb	r1, [r0]
   1dd6c:	sub	sp, fp, #28
   1dd70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001dd74 <flatcc_json_printer_bool_enum_vector_field@@Base>:
   1dd74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dd78:	add	fp, sp, #28
   1dd7c:	sub	sp, sp, #4
   1dd80:	mov	r4, r0
   1dd84:	ldrb	r0, [r0, #27]
   1dd88:	cmp	r0, #0
   1dd8c:	beq	1dda0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c>
   1dd90:	mov	r0, r4
   1dd94:	sub	sp, fp, #28
   1dd98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dd9c:	b	1b030 <flatcc_json_printer_bool_vector_field@@Base>
   1dda0:	mov	r0, #4
   1dda4:	add	r0, r0, r2, lsl #1
   1dda8:	ldr	r2, [r1, #8]
   1ddac:	cmp	r0, r2
   1ddb0:	bge	1ddd0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x5c>
   1ddb4:	ldr	r2, [r1, #4]
   1ddb8:	add	r0, r2, r0
   1ddbc:	ldrh	r0, [r0]
   1ddc0:	cmp	r0, #0
   1ddc4:	ldrne	r2, [r1]
   1ddc8:	addsne	r8, r2, r0
   1ddcc:	bne	1ddd8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x64>
   1ddd0:	sub	sp, fp, #28
   1ddd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ddd8:	ldr	r0, [r1, #16]
   1dddc:	ldr	sl, [fp, #12]
   1dde0:	ldr	r2, [fp, #8]
   1dde4:	add	r7, r0, #1
   1dde8:	cmp	r0, #0
   1ddec:	str	r7, [r1, #16]
   1ddf0:	ldrne	r0, [r4, #20]
   1ddf4:	addne	r1, r0, #1
   1ddf8:	strne	r1, [r4, #20]
   1ddfc:	movne	r1, #44	; 0x2c
   1de00:	strbne	r1, [r0]
   1de04:	mov	r1, r3
   1de08:	ldr	r0, [r8]
   1de0c:	ldr	r9, [r8, r0]!
   1de10:	mov	r0, r4
   1de14:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   1de18:	ldr	r1, [r4, #32]
   1de1c:	ldr	r0, [r4, #20]
   1de20:	cmp	r9, #0
   1de24:	add	r1, r1, #1
   1de28:	str	r1, [r4, #32]
   1de2c:	add	r1, r0, #1
   1de30:	str	r1, [r4, #20]
   1de34:	mov	r1, #91	; 0x5b
   1de38:	strb	r1, [r0]
   1de3c:	beq	1e04c <flatcc_json_printer_bool_enum_vector_field@@Base+0x2d8>
   1de40:	ldrb	r1, [r4, #25]
   1de44:	ldr	r0, [r4, #20]
   1de48:	cmp	r1, #0
   1de4c:	beq	1df08 <flatcc_json_printer_bool_enum_vector_field@@Base+0x194>
   1de50:	add	r1, r0, #1
   1de54:	str	r1, [r4, #20]
   1de58:	mov	r1, #10
   1de5c:	strb	r1, [r0]
   1de60:	ldr	r0, [r4, #20]
   1de64:	ldrb	r2, [r4, #25]
   1de68:	ldr	r3, [r4, #32]
   1de6c:	ldr	r1, [r4, #16]
   1de70:	mla	r7, r3, r2, r0
   1de74:	mul	r5, r3, r2
   1de78:	cmp	r7, r1
   1de7c:	bls	1deec <flatcc_json_printer_bool_enum_vector_field@@Base+0x178>
   1de80:	cmp	r0, r1
   1de84:	bcc	1dea0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x12c>
   1de88:	ldr	r2, [r4, #44]	; 0x2c
   1de8c:	mov	r0, r4
   1de90:	mov	r1, #0
   1de94:	blx	r2
   1de98:	ldr	r1, [r4, #16]
   1de9c:	ldr	r0, [r4, #20]
   1dea0:	sub	r6, r1, r0
   1dea4:	cmp	r6, r5
   1dea8:	bcs	1deec <flatcc_json_printer_bool_enum_vector_field@@Base+0x178>
   1deac:	mov	r1, #32
   1deb0:	mov	r2, r6
   1deb4:	bl	12940 <memset@plt>
   1deb8:	ldr	r0, [r4, #20]
   1debc:	ldr	r2, [r4, #44]	; 0x2c
   1dec0:	mov	r1, #0
   1dec4:	add	r0, r0, r6
   1dec8:	str	r0, [r4, #20]
   1decc:	mov	r0, r4
   1ded0:	blx	r2
   1ded4:	ldr	r1, [r4, #16]
   1ded8:	ldr	r0, [r4, #20]
   1dedc:	sub	r5, r5, r6
   1dee0:	sub	r6, r1, r0
   1dee4:	cmp	r5, r6
   1dee8:	bhi	1deac <flatcc_json_printer_bool_enum_vector_field@@Base+0x138>
   1deec:	mov	r1, #32
   1def0:	mov	r2, r5
   1def4:	bl	12940 <memset@plt>
   1def8:	ldr	r0, [r4, #20]
   1defc:	add	r0, r0, r5
   1df00:	str	r0, [r4, #20]
   1df04:	b	1df24 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1b0>
   1df08:	ldr	r1, [r4, #16]
   1df0c:	cmp	r0, r1
   1df10:	bcc	1df24 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1b0>
   1df14:	ldr	r2, [r4, #44]	; 0x2c
   1df18:	mov	r0, r4
   1df1c:	mov	r1, #0
   1df20:	blx	r2
   1df24:	ldrb	r1, [r8, #4]
   1df28:	mov	r0, r4
   1df2c:	blx	sl
   1df30:	subs	r9, r9, #1
   1df34:	beq	1e04c <flatcc_json_printer_bool_enum_vector_field@@Base+0x2d8>
   1df38:	add	r7, r8, #5
   1df3c:	mov	r8, #44	; 0x2c
   1df40:	ldr	r0, [r4, #20]
   1df44:	sub	r9, r9, #1
   1df48:	add	r1, r0, #1
   1df4c:	str	r1, [r4, #20]
   1df50:	strb	r8, [r0]
   1df54:	ldrb	r1, [r4, #25]
   1df58:	ldr	r0, [r4, #20]
   1df5c:	cmp	r1, #0
   1df60:	beq	1e01c <flatcc_json_printer_bool_enum_vector_field@@Base+0x2a8>
   1df64:	add	r1, r0, #1
   1df68:	str	r1, [r4, #20]
   1df6c:	mov	r1, #10
   1df70:	strb	r1, [r0]
   1df74:	ldr	r0, [r4, #20]
   1df78:	ldrb	r2, [r4, #25]
   1df7c:	ldr	r3, [r4, #32]
   1df80:	ldr	r1, [r4, #16]
   1df84:	mla	r6, r3, r2, r0
   1df88:	mul	r5, r3, r2
   1df8c:	cmp	r6, r1
   1df90:	bls	1e000 <flatcc_json_printer_bool_enum_vector_field@@Base+0x28c>
   1df94:	cmp	r0, r1
   1df98:	bcc	1dfb4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x240>
   1df9c:	ldr	r2, [r4, #44]	; 0x2c
   1dfa0:	mov	r0, r4
   1dfa4:	mov	r1, #0
   1dfa8:	blx	r2
   1dfac:	ldr	r1, [r4, #16]
   1dfb0:	ldr	r0, [r4, #20]
   1dfb4:	sub	r6, r1, r0
   1dfb8:	cmp	r6, r5
   1dfbc:	bcs	1e000 <flatcc_json_printer_bool_enum_vector_field@@Base+0x28c>
   1dfc0:	mov	r1, #32
   1dfc4:	mov	r2, r6
   1dfc8:	bl	12940 <memset@plt>
   1dfcc:	ldr	r0, [r4, #20]
   1dfd0:	ldr	r2, [r4, #44]	; 0x2c
   1dfd4:	mov	r1, #0
   1dfd8:	add	r0, r0, r6
   1dfdc:	str	r0, [r4, #20]
   1dfe0:	mov	r0, r4
   1dfe4:	blx	r2
   1dfe8:	ldr	r1, [r4, #16]
   1dfec:	ldr	r0, [r4, #20]
   1dff0:	sub	r5, r5, r6
   1dff4:	sub	r6, r1, r0
   1dff8:	cmp	r5, r6
   1dffc:	bhi	1dfc0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x24c>
   1e000:	mov	r1, #32
   1e004:	mov	r2, r5
   1e008:	bl	12940 <memset@plt>
   1e00c:	ldr	r0, [r4, #20]
   1e010:	add	r0, r0, r5
   1e014:	str	r0, [r4, #20]
   1e018:	b	1e038 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c4>
   1e01c:	ldr	r1, [r4, #16]
   1e020:	cmp	r0, r1
   1e024:	bcc	1e038 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c4>
   1e028:	ldr	r2, [r4, #44]	; 0x2c
   1e02c:	mov	r0, r4
   1e030:	mov	r1, #0
   1e034:	blx	r2
   1e038:	ldrb	r1, [r7], #1
   1e03c:	mov	r0, r4
   1e040:	blx	sl
   1e044:	cmp	r9, #0
   1e048:	bne	1df40 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1cc>
   1e04c:	ldrb	r1, [r4, #25]
   1e050:	ldr	r0, [r4, #20]
   1e054:	cmp	r1, #0
   1e058:	beq	1e118 <flatcc_json_printer_bool_enum_vector_field@@Base+0x3a4>
   1e05c:	add	r1, r0, #1
   1e060:	str	r1, [r4, #20]
   1e064:	mov	r1, #10
   1e068:	strb	r1, [r0]
   1e06c:	ldr	r0, [r4, #32]
   1e070:	sub	r2, r0, #1
   1e074:	str	r2, [r4, #32]
   1e078:	ldrb	r3, [r4, #25]
   1e07c:	ldr	r0, [r4, #20]
   1e080:	ldr	r1, [r4, #16]
   1e084:	mla	r7, r2, r3, r0
   1e088:	mul	r5, r2, r3
   1e08c:	cmp	r7, r1
   1e090:	bls	1e100 <flatcc_json_printer_bool_enum_vector_field@@Base+0x38c>
   1e094:	cmp	r0, r1
   1e098:	bcc	1e0b4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x340>
   1e09c:	ldr	r2, [r4, #44]	; 0x2c
   1e0a0:	mov	r0, r4
   1e0a4:	mov	r1, #0
   1e0a8:	blx	r2
   1e0ac:	ldr	r1, [r4, #16]
   1e0b0:	ldr	r0, [r4, #20]
   1e0b4:	sub	r6, r1, r0
   1e0b8:	cmp	r6, r5
   1e0bc:	bcs	1e100 <flatcc_json_printer_bool_enum_vector_field@@Base+0x38c>
   1e0c0:	mov	r1, #32
   1e0c4:	mov	r2, r6
   1e0c8:	bl	12940 <memset@plt>
   1e0cc:	ldr	r0, [r4, #20]
   1e0d0:	ldr	r2, [r4, #44]	; 0x2c
   1e0d4:	mov	r1, #0
   1e0d8:	add	r0, r0, r6
   1e0dc:	str	r0, [r4, #20]
   1e0e0:	mov	r0, r4
   1e0e4:	blx	r2
   1e0e8:	ldr	r1, [r4, #16]
   1e0ec:	ldr	r0, [r4, #20]
   1e0f0:	sub	r5, r5, r6
   1e0f4:	sub	r6, r1, r0
   1e0f8:	cmp	r5, r6
   1e0fc:	bhi	1e0c0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x34c>
   1e100:	mov	r1, #32
   1e104:	mov	r2, r5
   1e108:	bl	12940 <memset@plt>
   1e10c:	ldr	r0, [r4, #20]
   1e110:	add	r0, r0, r5
   1e114:	str	r0, [r4, #20]
   1e118:	add	r1, r0, #1
   1e11c:	str	r1, [r4, #20]
   1e120:	mov	r1, #93	; 0x5d
   1e124:	strb	r1, [r0]
   1e128:	sub	sp, fp, #28
   1e12c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001e130 <flatcc_json_printer_struct_vector_field@@Base>:
   1e130:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e134:	add	fp, sp, #28
   1e138:	sub	sp, sp, #4
   1e13c:	mov	r4, r0
   1e140:	mov	r0, #4
   1e144:	add	r0, r0, r2, lsl #1
   1e148:	ldr	r2, [r1, #8]
   1e14c:	cmp	r0, r2
   1e150:	bge	1e170 <flatcc_json_printer_struct_vector_field@@Base+0x40>
   1e154:	ldr	r2, [r1, #4]
   1e158:	add	r0, r2, r0
   1e15c:	ldrh	r0, [r0]
   1e160:	cmp	r0, #0
   1e164:	ldrne	r2, [r1]
   1e168:	addsne	r6, r2, r0
   1e16c:	bne	1e178 <flatcc_json_printer_struct_vector_field@@Base+0x48>
   1e170:	sub	sp, fp, #28
   1e174:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e178:	ldr	r0, [r1, #16]
   1e17c:	ldr	r2, [fp, #8]
   1e180:	add	r7, r0, #1
   1e184:	cmp	r0, #0
   1e188:	str	r7, [r1, #16]
   1e18c:	ldrne	r0, [r4, #20]
   1e190:	addne	r1, r0, #1
   1e194:	strne	r1, [r4, #20]
   1e198:	movne	r1, #44	; 0x2c
   1e19c:	strbne	r1, [r0]
   1e1a0:	mov	r1, r3
   1e1a4:	ldr	r0, [r6]
   1e1a8:	ldr	r5, [r6, r0]!
   1e1ac:	mov	r0, r4
   1e1b0:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   1e1b4:	ldr	r1, [r4, #32]
   1e1b8:	ldr	r0, [r4, #20]
   1e1bc:	cmp	r5, #0
   1e1c0:	add	r1, r1, #1
   1e1c4:	str	r1, [r4, #32]
   1e1c8:	add	r1, r0, #1
   1e1cc:	str	r1, [r4, #20]
   1e1d0:	mov	r1, #91	; 0x5b
   1e1d4:	strb	r1, [r0]
   1e1d8:	beq	1e5e8 <flatcc_json_printer_struct_vector_field@@Base+0x4b8>
   1e1dc:	ldrb	r1, [r4, #25]
   1e1e0:	ldr	r0, [r4, #20]
   1e1e4:	add	r9, r6, #4
   1e1e8:	cmp	r1, #0
   1e1ec:	beq	1e2a8 <flatcc_json_printer_struct_vector_field@@Base+0x178>
   1e1f0:	add	r1, r0, #1
   1e1f4:	str	r1, [r4, #20]
   1e1f8:	mov	r1, #10
   1e1fc:	strb	r1, [r0]
   1e200:	ldr	r0, [r4, #20]
   1e204:	ldrb	r2, [r4, #25]
   1e208:	ldr	r3, [r4, #32]
   1e20c:	ldr	r1, [r4, #16]
   1e210:	mla	r7, r3, r2, r0
   1e214:	mul	r6, r3, r2
   1e218:	cmp	r7, r1
   1e21c:	bls	1e28c <flatcc_json_printer_struct_vector_field@@Base+0x15c>
   1e220:	cmp	r0, r1
   1e224:	bcc	1e240 <flatcc_json_printer_struct_vector_field@@Base+0x110>
   1e228:	ldr	r2, [r4, #44]	; 0x2c
   1e22c:	mov	r0, r4
   1e230:	mov	r1, #0
   1e234:	blx	r2
   1e238:	ldr	r1, [r4, #16]
   1e23c:	ldr	r0, [r4, #20]
   1e240:	sub	r7, r1, r0
   1e244:	cmp	r7, r6
   1e248:	bcs	1e28c <flatcc_json_printer_struct_vector_field@@Base+0x15c>
   1e24c:	mov	r1, #32
   1e250:	mov	r2, r7
   1e254:	bl	12940 <memset@plt>
   1e258:	ldr	r0, [r4, #20]
   1e25c:	ldr	r2, [r4, #44]	; 0x2c
   1e260:	mov	r1, #0
   1e264:	add	r0, r0, r7
   1e268:	str	r0, [r4, #20]
   1e26c:	mov	r0, r4
   1e270:	blx	r2
   1e274:	ldr	r1, [r4, #16]
   1e278:	ldr	r0, [r4, #20]
   1e27c:	sub	r6, r6, r7
   1e280:	sub	r7, r1, r0
   1e284:	cmp	r6, r7
   1e288:	bhi	1e24c <flatcc_json_printer_struct_vector_field@@Base+0x11c>
   1e28c:	mov	r1, #32
   1e290:	mov	r2, r6
   1e294:	bl	12940 <memset@plt>
   1e298:	ldr	r0, [r4, #20]
   1e29c:	add	r0, r0, r6
   1e2a0:	str	r0, [r4, #20]
   1e2a4:	b	1e2c8 <flatcc_json_printer_struct_vector_field@@Base+0x198>
   1e2a8:	ldr	r1, [r4, #16]
   1e2ac:	cmp	r0, r1
   1e2b0:	bcc	1e2c8 <flatcc_json_printer_struct_vector_field@@Base+0x198>
   1e2b4:	ldr	r2, [r4, #44]	; 0x2c
   1e2b8:	mov	r0, r4
   1e2bc:	mov	r1, #0
   1e2c0:	blx	r2
   1e2c4:	ldr	r0, [r4, #20]
   1e2c8:	add	r1, r0, #1
   1e2cc:	ldr	r2, [fp, #16]
   1e2d0:	str	r1, [r4, #20]
   1e2d4:	ldr	r1, [r4, #32]
   1e2d8:	add	r1, r1, #1
   1e2dc:	str	r1, [r4, #32]
   1e2e0:	mov	r1, #123	; 0x7b
   1e2e4:	strb	r1, [r0]
   1e2e8:	mov	r0, r4
   1e2ec:	mov	r1, r9
   1e2f0:	blx	r2
   1e2f4:	ldrb	r1, [r4, #25]
   1e2f8:	ldr	r0, [r4, #20]
   1e2fc:	cmp	r1, #0
   1e300:	beq	1e3c0 <flatcc_json_printer_struct_vector_field@@Base+0x290>
   1e304:	add	r1, r0, #1
   1e308:	str	r1, [r4, #20]
   1e30c:	mov	r1, #10
   1e310:	strb	r1, [r0]
   1e314:	ldr	r0, [r4, #32]
   1e318:	sub	r2, r0, #1
   1e31c:	str	r2, [r4, #32]
   1e320:	ldrb	r3, [r4, #25]
   1e324:	ldr	r0, [r4, #20]
   1e328:	ldr	r1, [r4, #16]
   1e32c:	mla	r7, r2, r3, r0
   1e330:	mul	r6, r2, r3
   1e334:	cmp	r7, r1
   1e338:	bls	1e3a8 <flatcc_json_printer_struct_vector_field@@Base+0x278>
   1e33c:	cmp	r0, r1
   1e340:	bcc	1e35c <flatcc_json_printer_struct_vector_field@@Base+0x22c>
   1e344:	ldr	r2, [r4, #44]	; 0x2c
   1e348:	mov	r0, r4
   1e34c:	mov	r1, #0
   1e350:	blx	r2
   1e354:	ldr	r1, [r4, #16]
   1e358:	ldr	r0, [r4, #20]
   1e35c:	sub	r7, r1, r0
   1e360:	cmp	r7, r6
   1e364:	bcs	1e3a8 <flatcc_json_printer_struct_vector_field@@Base+0x278>
   1e368:	mov	r1, #32
   1e36c:	mov	r2, r7
   1e370:	bl	12940 <memset@plt>
   1e374:	ldr	r0, [r4, #20]
   1e378:	ldr	r2, [r4, #44]	; 0x2c
   1e37c:	mov	r1, #0
   1e380:	add	r0, r0, r7
   1e384:	str	r0, [r4, #20]
   1e388:	mov	r0, r4
   1e38c:	blx	r2
   1e390:	ldr	r1, [r4, #16]
   1e394:	ldr	r0, [r4, #20]
   1e398:	sub	r6, r6, r7
   1e39c:	sub	r7, r1, r0
   1e3a0:	cmp	r6, r7
   1e3a4:	bhi	1e368 <flatcc_json_printer_struct_vector_field@@Base+0x238>
   1e3a8:	mov	r1, #32
   1e3ac:	mov	r2, r6
   1e3b0:	bl	12940 <memset@plt>
   1e3b4:	ldr	r0, [r4, #20]
   1e3b8:	add	r0, r0, r6
   1e3bc:	str	r0, [r4, #20]
   1e3c0:	add	r1, r0, #1
   1e3c4:	mov	sl, #125	; 0x7d
   1e3c8:	subs	r5, r5, #1
   1e3cc:	str	r1, [r4, #20]
   1e3d0:	strb	sl, [r0]
   1e3d4:	beq	1e5e8 <flatcc_json_printer_struct_vector_field@@Base+0x4b8>
   1e3d8:	mov	r8, #10
   1e3dc:	ldr	r0, [r4, #20]
   1e3e0:	add	r1, r0, #1
   1e3e4:	str	r1, [r4, #20]
   1e3e8:	mov	r1, #44	; 0x2c
   1e3ec:	strb	r1, [r0]
   1e3f0:	ldr	r0, [fp, #12]
   1e3f4:	ldrb	r1, [r4, #25]
   1e3f8:	add	r9, r9, r0
   1e3fc:	ldr	r0, [r4, #20]
   1e400:	cmp	r1, #0
   1e404:	beq	1e4bc <flatcc_json_printer_struct_vector_field@@Base+0x38c>
   1e408:	add	r1, r0, #1
   1e40c:	str	r1, [r4, #20]
   1e410:	strb	r8, [r0]
   1e414:	ldr	r0, [r4, #20]
   1e418:	ldrb	r2, [r4, #25]
   1e41c:	ldr	r3, [r4, #32]
   1e420:	ldr	r1, [r4, #16]
   1e424:	mla	r7, r3, r2, r0
   1e428:	mul	r6, r3, r2
   1e42c:	cmp	r7, r1
   1e430:	bls	1e4a0 <flatcc_json_printer_struct_vector_field@@Base+0x370>
   1e434:	cmp	r0, r1
   1e438:	bcc	1e454 <flatcc_json_printer_struct_vector_field@@Base+0x324>
   1e43c:	ldr	r2, [r4, #44]	; 0x2c
   1e440:	mov	r0, r4
   1e444:	mov	r1, #0
   1e448:	blx	r2
   1e44c:	ldr	r1, [r4, #16]
   1e450:	ldr	r0, [r4, #20]
   1e454:	sub	r7, r1, r0
   1e458:	cmp	r7, r6
   1e45c:	bcs	1e4a0 <flatcc_json_printer_struct_vector_field@@Base+0x370>
   1e460:	mov	r1, #32
   1e464:	mov	r2, r7
   1e468:	bl	12940 <memset@plt>
   1e46c:	ldr	r0, [r4, #20]
   1e470:	ldr	r2, [r4, #44]	; 0x2c
   1e474:	mov	r1, #0
   1e478:	add	r0, r0, r7
   1e47c:	str	r0, [r4, #20]
   1e480:	mov	r0, r4
   1e484:	blx	r2
   1e488:	ldr	r1, [r4, #16]
   1e48c:	ldr	r0, [r4, #20]
   1e490:	sub	r6, r6, r7
   1e494:	sub	r7, r1, r0
   1e498:	cmp	r6, r7
   1e49c:	bhi	1e460 <flatcc_json_printer_struct_vector_field@@Base+0x330>
   1e4a0:	mov	r1, #32
   1e4a4:	mov	r2, r6
   1e4a8:	bl	12940 <memset@plt>
   1e4ac:	ldr	r0, [r4, #20]
   1e4b0:	add	r0, r0, r6
   1e4b4:	str	r0, [r4, #20]
   1e4b8:	b	1e4dc <flatcc_json_printer_struct_vector_field@@Base+0x3ac>
   1e4bc:	ldr	r1, [r4, #16]
   1e4c0:	cmp	r0, r1
   1e4c4:	bcc	1e4dc <flatcc_json_printer_struct_vector_field@@Base+0x3ac>
   1e4c8:	ldr	r2, [r4, #44]	; 0x2c
   1e4cc:	mov	r0, r4
   1e4d0:	mov	r1, #0
   1e4d4:	blx	r2
   1e4d8:	ldr	r0, [r4, #20]
   1e4dc:	add	r1, r0, #1
   1e4e0:	ldr	r2, [fp, #16]
   1e4e4:	sub	r5, r5, #1
   1e4e8:	str	r1, [r4, #20]
   1e4ec:	ldr	r1, [r4, #32]
   1e4f0:	add	r1, r1, #1
   1e4f4:	str	r1, [r4, #32]
   1e4f8:	mov	r1, #123	; 0x7b
   1e4fc:	strb	r1, [r0]
   1e500:	mov	r0, r4
   1e504:	mov	r1, r9
   1e508:	blx	r2
   1e50c:	ldrb	r1, [r4, #25]
   1e510:	ldr	r0, [r4, #20]
   1e514:	cmp	r1, #0
   1e518:	beq	1e5d4 <flatcc_json_printer_struct_vector_field@@Base+0x4a4>
   1e51c:	add	r1, r0, #1
   1e520:	str	r1, [r4, #20]
   1e524:	strb	r8, [r0]
   1e528:	ldr	r0, [r4, #32]
   1e52c:	sub	r2, r0, #1
   1e530:	str	r2, [r4, #32]
   1e534:	ldrb	r3, [r4, #25]
   1e538:	ldr	r0, [r4, #20]
   1e53c:	ldr	r1, [r4, #16]
   1e540:	mla	r7, r2, r3, r0
   1e544:	mul	r6, r2, r3
   1e548:	cmp	r7, r1
   1e54c:	bls	1e5bc <flatcc_json_printer_struct_vector_field@@Base+0x48c>
   1e550:	cmp	r0, r1
   1e554:	bcc	1e570 <flatcc_json_printer_struct_vector_field@@Base+0x440>
   1e558:	ldr	r2, [r4, #44]	; 0x2c
   1e55c:	mov	r0, r4
   1e560:	mov	r1, #0
   1e564:	blx	r2
   1e568:	ldr	r1, [r4, #16]
   1e56c:	ldr	r0, [r4, #20]
   1e570:	sub	r7, r1, r0
   1e574:	cmp	r7, r6
   1e578:	bcs	1e5bc <flatcc_json_printer_struct_vector_field@@Base+0x48c>
   1e57c:	mov	r1, #32
   1e580:	mov	r2, r7
   1e584:	bl	12940 <memset@plt>
   1e588:	ldr	r0, [r4, #20]
   1e58c:	ldr	r2, [r4, #44]	; 0x2c
   1e590:	mov	r1, #0
   1e594:	add	r0, r0, r7
   1e598:	str	r0, [r4, #20]
   1e59c:	mov	r0, r4
   1e5a0:	blx	r2
   1e5a4:	ldr	r1, [r4, #16]
   1e5a8:	ldr	r0, [r4, #20]
   1e5ac:	sub	r6, r6, r7
   1e5b0:	sub	r7, r1, r0
   1e5b4:	cmp	r6, r7
   1e5b8:	bhi	1e57c <flatcc_json_printer_struct_vector_field@@Base+0x44c>
   1e5bc:	mov	r1, #32
   1e5c0:	mov	r2, r6
   1e5c4:	bl	12940 <memset@plt>
   1e5c8:	ldr	r0, [r4, #20]
   1e5cc:	add	r0, r0, r6
   1e5d0:	str	r0, [r4, #20]
   1e5d4:	add	r1, r0, #1
   1e5d8:	cmp	r5, #0
   1e5dc:	str	r1, [r4, #20]
   1e5e0:	strb	sl, [r0]
   1e5e4:	bne	1e3dc <flatcc_json_printer_struct_vector_field@@Base+0x2ac>
   1e5e8:	ldrb	r1, [r4, #25]
   1e5ec:	ldr	r0, [r4, #20]
   1e5f0:	cmp	r1, #0
   1e5f4:	beq	1e6b4 <flatcc_json_printer_struct_vector_field@@Base+0x584>
   1e5f8:	add	r1, r0, #1
   1e5fc:	str	r1, [r4, #20]
   1e600:	mov	r1, #10
   1e604:	strb	r1, [r0]
   1e608:	ldr	r0, [r4, #32]
   1e60c:	sub	r2, r0, #1
   1e610:	str	r2, [r4, #32]
   1e614:	ldrb	r3, [r4, #25]
   1e618:	ldr	r0, [r4, #20]
   1e61c:	ldr	r1, [r4, #16]
   1e620:	mla	r7, r2, r3, r0
   1e624:	mul	r5, r2, r3
   1e628:	cmp	r7, r1
   1e62c:	bls	1e69c <flatcc_json_printer_struct_vector_field@@Base+0x56c>
   1e630:	cmp	r0, r1
   1e634:	bcc	1e650 <flatcc_json_printer_struct_vector_field@@Base+0x520>
   1e638:	ldr	r2, [r4, #44]	; 0x2c
   1e63c:	mov	r0, r4
   1e640:	mov	r1, #0
   1e644:	blx	r2
   1e648:	ldr	r1, [r4, #16]
   1e64c:	ldr	r0, [r4, #20]
   1e650:	sub	r6, r1, r0
   1e654:	cmp	r6, r5
   1e658:	bcs	1e69c <flatcc_json_printer_struct_vector_field@@Base+0x56c>
   1e65c:	mov	r1, #32
   1e660:	mov	r2, r6
   1e664:	bl	12940 <memset@plt>
   1e668:	ldr	r0, [r4, #20]
   1e66c:	ldr	r2, [r4, #44]	; 0x2c
   1e670:	mov	r1, #0
   1e674:	add	r0, r0, r6
   1e678:	str	r0, [r4, #20]
   1e67c:	mov	r0, r4
   1e680:	blx	r2
   1e684:	ldr	r1, [r4, #16]
   1e688:	ldr	r0, [r4, #20]
   1e68c:	sub	r5, r5, r6
   1e690:	sub	r6, r1, r0
   1e694:	cmp	r5, r6
   1e698:	bhi	1e65c <flatcc_json_printer_struct_vector_field@@Base+0x52c>
   1e69c:	mov	r1, #32
   1e6a0:	mov	r2, r5
   1e6a4:	bl	12940 <memset@plt>
   1e6a8:	ldr	r0, [r4, #20]
   1e6ac:	add	r0, r0, r5
   1e6b0:	str	r0, [r4, #20]
   1e6b4:	add	r1, r0, #1
   1e6b8:	str	r1, [r4, #20]
   1e6bc:	mov	r1, #93	; 0x5d
   1e6c0:	strb	r1, [r0]
   1e6c4:	sub	sp, fp, #28
   1e6c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001e6cc <flatcc_json_printer_string_vector_field@@Base>:
   1e6cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e6d0:	add	fp, sp, #28
   1e6d4:	sub	sp, sp, #4
   1e6d8:	mov	r4, r0
   1e6dc:	mov	r0, #4
   1e6e0:	add	r0, r0, r2, lsl #1
   1e6e4:	ldr	r2, [r1, #8]
   1e6e8:	cmp	r0, r2
   1e6ec:	bge	1e70c <flatcc_json_printer_string_vector_field@@Base+0x40>
   1e6f0:	ldr	r2, [r1, #4]
   1e6f4:	add	r0, r2, r0
   1e6f8:	ldrh	r0, [r0]
   1e6fc:	cmp	r0, #0
   1e700:	ldrne	r2, [r1]
   1e704:	addsne	r5, r2, r0
   1e708:	bne	1e714 <flatcc_json_printer_string_vector_field@@Base+0x48>
   1e70c:	sub	sp, fp, #28
   1e710:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e714:	ldr	r0, [r1, #16]
   1e718:	ldr	r2, [fp, #8]
   1e71c:	add	r7, r0, #1
   1e720:	cmp	r0, #0
   1e724:	str	r7, [r1, #16]
   1e728:	ldrne	r0, [r4, #20]
   1e72c:	addne	r1, r0, #1
   1e730:	strne	r1, [r4, #20]
   1e734:	movne	r1, #44	; 0x2c
   1e738:	strbne	r1, [r0]
   1e73c:	mov	r1, r3
   1e740:	ldr	r0, [r5]
   1e744:	ldr	r8, [r5, r0]!
   1e748:	mov	r0, r4
   1e74c:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   1e750:	ldr	r1, [r4, #32]
   1e754:	ldr	r0, [r4, #20]
   1e758:	cmp	r8, #0
   1e75c:	add	r1, r1, #1
   1e760:	str	r1, [r4, #32]
   1e764:	add	r1, r0, #1
   1e768:	str	r1, [r4, #20]
   1e76c:	mov	r1, #91	; 0x5b
   1e770:	strb	r1, [r0]
   1e774:	beq	1e9a0 <flatcc_json_printer_string_vector_field@@Base+0x2d4>
   1e778:	ldrb	r1, [r4, #25]
   1e77c:	ldr	r0, [r4, #20]
   1e780:	add	r9, r5, #4
   1e784:	cmp	r1, #0
   1e788:	beq	1e844 <flatcc_json_printer_string_vector_field@@Base+0x178>
   1e78c:	add	r1, r0, #1
   1e790:	str	r1, [r4, #20]
   1e794:	mov	r1, #10
   1e798:	strb	r1, [r0]
   1e79c:	ldr	r0, [r4, #20]
   1e7a0:	ldrb	r2, [r4, #25]
   1e7a4:	ldr	r3, [r4, #32]
   1e7a8:	ldr	r1, [r4, #16]
   1e7ac:	mla	r7, r3, r2, r0
   1e7b0:	mul	r5, r3, r2
   1e7b4:	cmp	r7, r1
   1e7b8:	bls	1e828 <flatcc_json_printer_string_vector_field@@Base+0x15c>
   1e7bc:	cmp	r0, r1
   1e7c0:	bcc	1e7dc <flatcc_json_printer_string_vector_field@@Base+0x110>
   1e7c4:	ldr	r2, [r4, #44]	; 0x2c
   1e7c8:	mov	r0, r4
   1e7cc:	mov	r1, #0
   1e7d0:	blx	r2
   1e7d4:	ldr	r1, [r4, #16]
   1e7d8:	ldr	r0, [r4, #20]
   1e7dc:	sub	r6, r1, r0
   1e7e0:	cmp	r6, r5
   1e7e4:	bcs	1e828 <flatcc_json_printer_string_vector_field@@Base+0x15c>
   1e7e8:	mov	r1, #32
   1e7ec:	mov	r2, r6
   1e7f0:	bl	12940 <memset@plt>
   1e7f4:	ldr	r0, [r4, #20]
   1e7f8:	ldr	r2, [r4, #44]	; 0x2c
   1e7fc:	mov	r1, #0
   1e800:	add	r0, r0, r6
   1e804:	str	r0, [r4, #20]
   1e808:	mov	r0, r4
   1e80c:	blx	r2
   1e810:	ldr	r1, [r4, #16]
   1e814:	ldr	r0, [r4, #20]
   1e818:	sub	r5, r5, r6
   1e81c:	sub	r6, r1, r0
   1e820:	cmp	r5, r6
   1e824:	bhi	1e7e8 <flatcc_json_printer_string_vector_field@@Base+0x11c>
   1e828:	mov	r1, #32
   1e82c:	mov	r2, r5
   1e830:	bl	12940 <memset@plt>
   1e834:	ldr	r0, [r4, #20]
   1e838:	add	r0, r0, r5
   1e83c:	str	r0, [r4, #20]
   1e840:	b	1e860 <flatcc_json_printer_string_vector_field@@Base+0x194>
   1e844:	ldr	r1, [r4, #16]
   1e848:	cmp	r0, r1
   1e84c:	bcc	1e860 <flatcc_json_printer_string_vector_field@@Base+0x194>
   1e850:	ldr	r2, [r4, #44]	; 0x2c
   1e854:	mov	r0, r4
   1e858:	mov	r1, #0
   1e85c:	blx	r2
   1e860:	ldr	r0, [r9]
   1e864:	mov	r1, r9
   1e868:	ldr	r2, [r1, r0]!
   1e86c:	mov	r0, r4
   1e870:	add	r1, r1, #4
   1e874:	bl	1505c <flatcc_json_printer_string@@Base+0x4>
   1e878:	subs	r7, r8, #1
   1e87c:	beq	1e9a0 <flatcc_json_printer_string_vector_field@@Base+0x2d4>
   1e880:	mov	r8, #44	; 0x2c
   1e884:	mov	sl, #10
   1e888:	ldr	r0, [r4, #20]
   1e88c:	add	r9, r9, #4
   1e890:	sub	r7, r7, #1
   1e894:	add	r1, r0, #1
   1e898:	str	r1, [r4, #20]
   1e89c:	strb	r8, [r0]
   1e8a0:	ldrb	r1, [r4, #25]
   1e8a4:	ldr	r0, [r4, #20]
   1e8a8:	cmp	r1, #0
   1e8ac:	beq	1e964 <flatcc_json_printer_string_vector_field@@Base+0x298>
   1e8b0:	add	r1, r0, #1
   1e8b4:	str	r1, [r4, #20]
   1e8b8:	strb	sl, [r0]
   1e8bc:	ldr	r0, [r4, #20]
   1e8c0:	ldrb	r2, [r4, #25]
   1e8c4:	ldr	r3, [r4, #32]
   1e8c8:	ldr	r1, [r4, #16]
   1e8cc:	mla	r6, r3, r2, r0
   1e8d0:	mul	r5, r3, r2
   1e8d4:	cmp	r6, r1
   1e8d8:	bls	1e948 <flatcc_json_printer_string_vector_field@@Base+0x27c>
   1e8dc:	cmp	r0, r1
   1e8e0:	bcc	1e8fc <flatcc_json_printer_string_vector_field@@Base+0x230>
   1e8e4:	ldr	r2, [r4, #44]	; 0x2c
   1e8e8:	mov	r0, r4
   1e8ec:	mov	r1, #0
   1e8f0:	blx	r2
   1e8f4:	ldr	r1, [r4, #16]
   1e8f8:	ldr	r0, [r4, #20]
   1e8fc:	sub	r6, r1, r0
   1e900:	cmp	r6, r5
   1e904:	bcs	1e948 <flatcc_json_printer_string_vector_field@@Base+0x27c>
   1e908:	mov	r1, #32
   1e90c:	mov	r2, r6
   1e910:	bl	12940 <memset@plt>
   1e914:	ldr	r0, [r4, #20]
   1e918:	ldr	r2, [r4, #44]	; 0x2c
   1e91c:	mov	r1, #0
   1e920:	add	r0, r0, r6
   1e924:	str	r0, [r4, #20]
   1e928:	mov	r0, r4
   1e92c:	blx	r2
   1e930:	ldr	r1, [r4, #16]
   1e934:	ldr	r0, [r4, #20]
   1e938:	sub	r5, r5, r6
   1e93c:	sub	r6, r1, r0
   1e940:	cmp	r5, r6
   1e944:	bhi	1e908 <flatcc_json_printer_string_vector_field@@Base+0x23c>
   1e948:	mov	r1, #32
   1e94c:	mov	r2, r5
   1e950:	bl	12940 <memset@plt>
   1e954:	ldr	r0, [r4, #20]
   1e958:	add	r0, r0, r5
   1e95c:	str	r0, [r4, #20]
   1e960:	b	1e980 <flatcc_json_printer_string_vector_field@@Base+0x2b4>
   1e964:	ldr	r1, [r4, #16]
   1e968:	cmp	r0, r1
   1e96c:	bcc	1e980 <flatcc_json_printer_string_vector_field@@Base+0x2b4>
   1e970:	ldr	r2, [r4, #44]	; 0x2c
   1e974:	mov	r0, r4
   1e978:	mov	r1, #0
   1e97c:	blx	r2
   1e980:	ldr	r0, [r9]
   1e984:	mov	r1, r9
   1e988:	ldr	r2, [r1, r0]!
   1e98c:	mov	r0, r4
   1e990:	add	r1, r1, #4
   1e994:	bl	1505c <flatcc_json_printer_string@@Base+0x4>
   1e998:	cmp	r7, #0
   1e99c:	bne	1e888 <flatcc_json_printer_string_vector_field@@Base+0x1bc>
   1e9a0:	ldrb	r1, [r4, #25]
   1e9a4:	ldr	r0, [r4, #20]
   1e9a8:	cmp	r1, #0
   1e9ac:	beq	1ea6c <flatcc_json_printer_string_vector_field@@Base+0x3a0>
   1e9b0:	add	r1, r0, #1
   1e9b4:	str	r1, [r4, #20]
   1e9b8:	mov	r1, #10
   1e9bc:	strb	r1, [r0]
   1e9c0:	ldr	r0, [r4, #32]
   1e9c4:	sub	r2, r0, #1
   1e9c8:	str	r2, [r4, #32]
   1e9cc:	ldrb	r3, [r4, #25]
   1e9d0:	ldr	r0, [r4, #20]
   1e9d4:	ldr	r1, [r4, #16]
   1e9d8:	mla	r7, r2, r3, r0
   1e9dc:	mul	r5, r2, r3
   1e9e0:	cmp	r7, r1
   1e9e4:	bls	1ea54 <flatcc_json_printer_string_vector_field@@Base+0x388>
   1e9e8:	cmp	r0, r1
   1e9ec:	bcc	1ea08 <flatcc_json_printer_string_vector_field@@Base+0x33c>
   1e9f0:	ldr	r2, [r4, #44]	; 0x2c
   1e9f4:	mov	r0, r4
   1e9f8:	mov	r1, #0
   1e9fc:	blx	r2
   1ea00:	ldr	r1, [r4, #16]
   1ea04:	ldr	r0, [r4, #20]
   1ea08:	sub	r6, r1, r0
   1ea0c:	cmp	r6, r5
   1ea10:	bcs	1ea54 <flatcc_json_printer_string_vector_field@@Base+0x388>
   1ea14:	mov	r1, #32
   1ea18:	mov	r2, r6
   1ea1c:	bl	12940 <memset@plt>
   1ea20:	ldr	r0, [r4, #20]
   1ea24:	ldr	r2, [r4, #44]	; 0x2c
   1ea28:	mov	r1, #0
   1ea2c:	add	r0, r0, r6
   1ea30:	str	r0, [r4, #20]
   1ea34:	mov	r0, r4
   1ea38:	blx	r2
   1ea3c:	ldr	r1, [r4, #16]
   1ea40:	ldr	r0, [r4, #20]
   1ea44:	sub	r5, r5, r6
   1ea48:	sub	r6, r1, r0
   1ea4c:	cmp	r5, r6
   1ea50:	bhi	1ea14 <flatcc_json_printer_string_vector_field@@Base+0x348>
   1ea54:	mov	r1, #32
   1ea58:	mov	r2, r5
   1ea5c:	bl	12940 <memset@plt>
   1ea60:	ldr	r0, [r4, #20]
   1ea64:	add	r0, r0, r5
   1ea68:	str	r0, [r4, #20]
   1ea6c:	add	r1, r0, #1
   1ea70:	str	r1, [r4, #20]
   1ea74:	mov	r1, #93	; 0x5d
   1ea78:	strb	r1, [r0]
   1ea7c:	sub	sp, fp, #28
   1ea80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001ea84 <flatcc_json_printer_table_vector_field@@Base>:
   1ea84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ea88:	add	fp, sp, #28
   1ea8c:	sub	sp, sp, #20
   1ea90:	mov	sl, r1
   1ea94:	ldr	r1, [r1, #8]
   1ea98:	mov	r4, r0
   1ea9c:	mov	r0, #4
   1eaa0:	add	r0, r0, r2, lsl #1
   1eaa4:	cmp	r0, r1
   1eaa8:	bge	1eac8 <flatcc_json_printer_table_vector_field@@Base+0x44>
   1eaac:	ldr	r1, [sl, #4]
   1eab0:	add	r0, r1, r0
   1eab4:	ldrh	r0, [r0]
   1eab8:	cmp	r0, #0
   1eabc:	ldrne	r1, [sl]
   1eac0:	addsne	r5, r1, r0
   1eac4:	bne	1ead0 <flatcc_json_printer_table_vector_field@@Base+0x4c>
   1eac8:	sub	sp, fp, #28
   1eacc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ead0:	ldr	r0, [sl, #16]
   1ead4:	ldr	r2, [fp, #8]
   1ead8:	add	r1, r0, #1
   1eadc:	cmp	r0, #0
   1eae0:	str	r1, [sl, #16]
   1eae4:	ldrne	r0, [r4, #20]
   1eae8:	addne	r1, r0, #1
   1eaec:	strne	r1, [r4, #20]
   1eaf0:	movne	r1, #44	; 0x2c
   1eaf4:	strbne	r1, [r0]
   1eaf8:	mov	r1, r3
   1eafc:	ldr	r0, [r5]
   1eb00:	ldr	r8, [r5, r0]!
   1eb04:	mov	r0, r4
   1eb08:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   1eb0c:	ldr	r1, [r4, #32]
   1eb10:	ldr	r0, [r4, #20]
   1eb14:	cmp	r8, #0
   1eb18:	add	r1, r1, #1
   1eb1c:	str	r1, [r4, #32]
   1eb20:	add	r1, r0, #1
   1eb24:	str	r1, [r4, #20]
   1eb28:	mov	r1, #91	; 0x5b
   1eb2c:	strb	r1, [r0]
   1eb30:	beq	1ee38 <flatcc_json_printer_table_vector_field@@Base+0x3b4>
   1eb34:	ldr	r0, [sl, #12]
   1eb38:	ldr	r6, [fp, #12]
   1eb3c:	add	r5, r5, #4
   1eb40:	subs	r0, r0, #1
   1eb44:	beq	1ec8c <flatcc_json_printer_table_vector_field@@Base+0x208>
   1eb48:	ldr	r3, [r4, #32]
   1eb4c:	ldr	r2, [r4, #20]
   1eb50:	ldr	r1, [r5]
   1eb54:	add	r3, r3, #1
   1eb58:	add	r1, r5, r1
   1eb5c:	str	r3, [r4, #32]
   1eb60:	add	r3, r2, #1
   1eb64:	str	r3, [r4, #20]
   1eb68:	mov	r3, #123	; 0x7b
   1eb6c:	strb	r3, [r2]
   1eb70:	str	r0, [sp, #12]
   1eb74:	mov	r0, #0
   1eb78:	str	r0, [sp, #16]
   1eb7c:	str	r1, [sp]
   1eb80:	ldr	r0, [r1]
   1eb84:	sub	r2, r1, r0
   1eb88:	str	r2, [sp, #4]
   1eb8c:	ldrh	r0, [r1, -r0]
   1eb90:	mov	r1, sp
   1eb94:	str	r0, [sp, #8]
   1eb98:	mov	r0, r4
   1eb9c:	blx	r6
   1eba0:	ldrb	r1, [r4, #25]
   1eba4:	ldr	r0, [r4, #20]
   1eba8:	cmp	r1, #0
   1ebac:	beq	1ec70 <flatcc_json_printer_table_vector_field@@Base+0x1ec>
   1ebb0:	add	r1, r0, #1
   1ebb4:	str	r1, [r4, #20]
   1ebb8:	mov	r1, #10
   1ebbc:	strb	r1, [r0]
   1ebc0:	ldr	r0, [r4, #32]
   1ebc4:	sub	r2, r0, #1
   1ebc8:	str	r2, [r4, #32]
   1ebcc:	ldrb	r3, [r4, #25]
   1ebd0:	ldr	r0, [r4, #20]
   1ebd4:	ldr	r1, [r4, #16]
   1ebd8:	mla	r7, r2, r3, r0
   1ebdc:	mul	r6, r2, r3
   1ebe0:	cmp	r7, r1
   1ebe4:	bls	1ec54 <flatcc_json_printer_table_vector_field@@Base+0x1d0>
   1ebe8:	cmp	r0, r1
   1ebec:	bcc	1ec08 <flatcc_json_printer_table_vector_field@@Base+0x184>
   1ebf0:	ldr	r2, [r4, #44]	; 0x2c
   1ebf4:	mov	r0, r4
   1ebf8:	mov	r1, #0
   1ebfc:	blx	r2
   1ec00:	ldr	r1, [r4, #16]
   1ec04:	ldr	r0, [r4, #20]
   1ec08:	sub	r7, r1, r0
   1ec0c:	cmp	r7, r6
   1ec10:	bcs	1ec54 <flatcc_json_printer_table_vector_field@@Base+0x1d0>
   1ec14:	mov	r1, #32
   1ec18:	mov	r2, r7
   1ec1c:	bl	12940 <memset@plt>
   1ec20:	ldr	r0, [r4, #20]
   1ec24:	ldr	r2, [r4, #44]	; 0x2c
   1ec28:	mov	r1, #0
   1ec2c:	add	r0, r0, r7
   1ec30:	str	r0, [r4, #20]
   1ec34:	mov	r0, r4
   1ec38:	blx	r2
   1ec3c:	ldr	r1, [r4, #16]
   1ec40:	ldr	r0, [r4, #20]
   1ec44:	sub	r6, r6, r7
   1ec48:	sub	r7, r1, r0
   1ec4c:	cmp	r6, r7
   1ec50:	bhi	1ec14 <flatcc_json_printer_table_vector_field@@Base+0x190>
   1ec54:	mov	r1, #32
   1ec58:	mov	r2, r6
   1ec5c:	bl	12940 <memset@plt>
   1ec60:	ldr	r0, [r4, #20]
   1ec64:	add	r0, r0, r6
   1ec68:	ldr	r6, [fp, #12]
   1ec6c:	str	r0, [r4, #20]
   1ec70:	add	r1, r0, #1
   1ec74:	str	r1, [r4, #20]
   1ec78:	mov	r1, #125	; 0x7d
   1ec7c:	strb	r1, [r0]
   1ec80:	subs	r9, r8, #1
   1ec84:	bne	1eca4 <flatcc_json_printer_table_vector_field@@Base+0x220>
   1ec88:	b	1ee38 <flatcc_json_printer_table_vector_field@@Base+0x3b4>
   1ec8c:	ldr	r0, [r4, #36]	; 0x24
   1ec90:	cmp	r0, #0
   1ec94:	moveq	r0, #2
   1ec98:	streq	r0, [r4, #36]	; 0x24
   1ec9c:	subs	r9, r8, #1
   1eca0:	beq	1ee38 <flatcc_json_printer_table_vector_field@@Base+0x3b4>
   1eca4:	mov	r8, #44	; 0x2c
   1eca8:	ldr	r0, [r4, #20]
   1ecac:	sub	r9, r9, #1
   1ecb0:	add	r1, r0, #1
   1ecb4:	str	r1, [r4, #20]
   1ecb8:	strb	r8, [r0]
   1ecbc:	ldr	r0, [sl, #12]
   1ecc0:	ldr	r1, [r5, #4]!
   1ecc4:	subs	r0, r0, #1
   1ecc8:	beq	1ede8 <flatcc_json_printer_table_vector_field@@Base+0x364>
   1eccc:	ldr	r3, [r4, #32]
   1ecd0:	ldr	r2, [r4, #20]
   1ecd4:	add	r1, r5, r1
   1ecd8:	add	r3, r3, #1
   1ecdc:	str	r3, [r4, #32]
   1ece0:	add	r3, r2, #1
   1ece4:	str	r3, [r4, #20]
   1ece8:	mov	r3, #123	; 0x7b
   1ecec:	strb	r3, [r2]
   1ecf0:	str	r0, [sp, #12]
   1ecf4:	mov	r0, #0
   1ecf8:	str	r0, [sp, #16]
   1ecfc:	str	r1, [sp]
   1ed00:	ldr	r0, [r1]
   1ed04:	sub	r2, r1, r0
   1ed08:	str	r2, [sp, #4]
   1ed0c:	ldrh	r0, [r1, -r0]
   1ed10:	mov	r1, sp
   1ed14:	str	r0, [sp, #8]
   1ed18:	mov	r0, r4
   1ed1c:	blx	r6
   1ed20:	ldrb	r1, [r4, #25]
   1ed24:	ldr	r0, [r4, #20]
   1ed28:	cmp	r1, #0
   1ed2c:	beq	1ee20 <flatcc_json_printer_table_vector_field@@Base+0x39c>
   1ed30:	add	r1, r0, #1
   1ed34:	str	r1, [r4, #20]
   1ed38:	mov	r1, #10
   1ed3c:	strb	r1, [r0]
   1ed40:	ldr	r0, [r4, #32]
   1ed44:	sub	r2, r0, #1
   1ed48:	str	r2, [r4, #32]
   1ed4c:	ldrb	r3, [r4, #25]
   1ed50:	ldr	r0, [r4, #20]
   1ed54:	ldr	r1, [r4, #16]
   1ed58:	mla	r6, r2, r3, r0
   1ed5c:	mul	r7, r2, r3
   1ed60:	cmp	r6, r1
   1ed64:	bls	1ee04 <flatcc_json_printer_table_vector_field@@Base+0x380>
   1ed68:	cmp	r0, r1
   1ed6c:	bcc	1ed88 <flatcc_json_printer_table_vector_field@@Base+0x304>
   1ed70:	ldr	r2, [r4, #44]	; 0x2c
   1ed74:	mov	r0, r4
   1ed78:	mov	r1, #0
   1ed7c:	blx	r2
   1ed80:	ldr	r1, [r4, #16]
   1ed84:	ldr	r0, [r4, #20]
   1ed88:	sub	r6, r1, r0
   1ed8c:	cmp	r6, r7
   1ed90:	bcs	1edd4 <flatcc_json_printer_table_vector_field@@Base+0x350>
   1ed94:	mov	r1, #32
   1ed98:	mov	r2, r6
   1ed9c:	bl	12940 <memset@plt>
   1eda0:	ldr	r0, [r4, #20]
   1eda4:	ldr	r2, [r4, #44]	; 0x2c
   1eda8:	mov	r1, #0
   1edac:	add	r0, r0, r6
   1edb0:	str	r0, [r4, #20]
   1edb4:	mov	r0, r4
   1edb8:	blx	r2
   1edbc:	ldr	r1, [r4, #16]
   1edc0:	ldr	r0, [r4, #20]
   1edc4:	sub	r7, r7, r6
   1edc8:	sub	r6, r1, r0
   1edcc:	cmp	r7, r6
   1edd0:	bhi	1ed94 <flatcc_json_printer_table_vector_field@@Base+0x310>
   1edd4:	ldr	r6, [fp, #12]
   1edd8:	mov	r1, #32
   1eddc:	mov	r2, r7
   1ede0:	bl	12940 <memset@plt>
   1ede4:	b	1ee14 <flatcc_json_printer_table_vector_field@@Base+0x390>
   1ede8:	ldr	r0, [r4, #36]	; 0x24
   1edec:	cmp	r0, #0
   1edf0:	moveq	r0, #2
   1edf4:	streq	r0, [r4, #36]	; 0x24
   1edf8:	cmp	r9, #0
   1edfc:	bne	1eca8 <flatcc_json_printer_table_vector_field@@Base+0x224>
   1ee00:	b	1ee38 <flatcc_json_printer_table_vector_field@@Base+0x3b4>
   1ee04:	mov	r1, #32
   1ee08:	mov	r2, r7
   1ee0c:	bl	12940 <memset@plt>
   1ee10:	ldr	r6, [fp, #12]
   1ee14:	ldr	r0, [r4, #20]
   1ee18:	add	r0, r0, r7
   1ee1c:	str	r0, [r4, #20]
   1ee20:	add	r1, r0, #1
   1ee24:	str	r1, [r4, #20]
   1ee28:	mov	r1, #125	; 0x7d
   1ee2c:	strb	r1, [r0]
   1ee30:	cmp	r9, #0
   1ee34:	bne	1eca8 <flatcc_json_printer_table_vector_field@@Base+0x224>
   1ee38:	ldrb	r1, [r4, #25]
   1ee3c:	ldr	r0, [r4, #20]
   1ee40:	cmp	r1, #0
   1ee44:	beq	1ef04 <flatcc_json_printer_table_vector_field@@Base+0x480>
   1ee48:	add	r1, r0, #1
   1ee4c:	str	r1, [r4, #20]
   1ee50:	mov	r1, #10
   1ee54:	strb	r1, [r0]
   1ee58:	ldr	r0, [r4, #32]
   1ee5c:	sub	r2, r0, #1
   1ee60:	str	r2, [r4, #32]
   1ee64:	ldrb	r3, [r4, #25]
   1ee68:	ldr	r0, [r4, #20]
   1ee6c:	ldr	r1, [r4, #16]
   1ee70:	mla	r7, r2, r3, r0
   1ee74:	mul	r5, r2, r3
   1ee78:	cmp	r7, r1
   1ee7c:	bls	1eeec <flatcc_json_printer_table_vector_field@@Base+0x468>
   1ee80:	cmp	r0, r1
   1ee84:	bcc	1eea0 <flatcc_json_printer_table_vector_field@@Base+0x41c>
   1ee88:	ldr	r2, [r4, #44]	; 0x2c
   1ee8c:	mov	r0, r4
   1ee90:	mov	r1, #0
   1ee94:	blx	r2
   1ee98:	ldr	r1, [r4, #16]
   1ee9c:	ldr	r0, [r4, #20]
   1eea0:	sub	r6, r1, r0
   1eea4:	cmp	r6, r5
   1eea8:	bcs	1eeec <flatcc_json_printer_table_vector_field@@Base+0x468>
   1eeac:	mov	r1, #32
   1eeb0:	mov	r2, r6
   1eeb4:	bl	12940 <memset@plt>
   1eeb8:	ldr	r0, [r4, #20]
   1eebc:	ldr	r2, [r4, #44]	; 0x2c
   1eec0:	mov	r1, #0
   1eec4:	add	r0, r0, r6
   1eec8:	str	r0, [r4, #20]
   1eecc:	mov	r0, r4
   1eed0:	blx	r2
   1eed4:	ldr	r1, [r4, #16]
   1eed8:	ldr	r0, [r4, #20]
   1eedc:	sub	r5, r5, r6
   1eee0:	sub	r6, r1, r0
   1eee4:	cmp	r5, r6
   1eee8:	bhi	1eeac <flatcc_json_printer_table_vector_field@@Base+0x428>
   1eeec:	mov	r1, #32
   1eef0:	mov	r2, r5
   1eef4:	bl	12940 <memset@plt>
   1eef8:	ldr	r0, [r4, #20]
   1eefc:	add	r0, r0, r5
   1ef00:	str	r0, [r4, #20]
   1ef04:	add	r1, r0, #1
   1ef08:	str	r1, [r4, #20]
   1ef0c:	mov	r1, #93	; 0x5d
   1ef10:	strb	r1, [r0]
   1ef14:	sub	sp, fp, #28
   1ef18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001ef1c <flatcc_json_printer_union_vector_field@@Base>:
   1ef1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ef20:	add	fp, sp, #28
   1ef24:	sub	sp, sp, #140	; 0x8c
   1ef28:	mov	r6, r1
   1ef2c:	mov	r9, r0
   1ef30:	sub	r1, r2, #1
   1ef34:	mov	r0, #4
   1ef38:	mov	r4, r3
   1ef3c:	mov	r5, #0
   1ef40:	mov	r8, #0
   1ef44:	str	r1, [sp, #8]
   1ef48:	add	r3, r0, r1, lsl #1
   1ef4c:	ldr	r1, [r6, #8]
   1ef50:	cmp	r3, r1
   1ef54:	bge	1ef74 <flatcc_json_printer_union_vector_field@@Base+0x58>
   1ef58:	ldr	r7, [r6, #4]
   1ef5c:	mov	r8, #0
   1ef60:	add	r3, r7, r3
   1ef64:	ldrh	r3, [r3]
   1ef68:	cmp	r3, #0
   1ef6c:	ldrne	r7, [r6]
   1ef70:	addne	r8, r7, r3
   1ef74:	ldr	sl, [fp, #8]
   1ef78:	add	r0, r0, r2, lsl #1
   1ef7c:	cmp	r0, r1
   1ef80:	bge	1ef9c <flatcc_json_printer_union_vector_field@@Base+0x80>
   1ef84:	ldr	r1, [r6, #4]
   1ef88:	add	r0, r1, r0
   1ef8c:	ldrh	r0, [r0]
   1ef90:	cmp	r0, #0
   1ef94:	ldrne	r1, [r6]
   1ef98:	addne	r5, r1, r0
   1ef9c:	ldr	r0, [r6, #12]
   1efa0:	cmp	sl, #101	; 0x65
   1efa4:	str	r5, [sp, #16]
   1efa8:	str	r0, [sp, #24]
   1efac:	bge	1f2b4 <flatcc_json_printer_union_vector_field@@Base+0x398>
   1efb0:	add	r5, sp, #32
   1efb4:	mov	r1, r4
   1efb8:	mov	r2, sl
   1efbc:	str	r4, [sp, #12]
   1efc0:	mov	r0, r5
   1efc4:	bl	128b0 <memcpy@plt>
   1efc8:	movw	r0, #29791	; 0x745f
   1efcc:	cmp	r8, #0
   1efd0:	mov	r1, #101	; 0x65
   1efd4:	movt	r0, #28793	; 0x7079
   1efd8:	str	r0, [r5, sl]
   1efdc:	add	r0, r5, sl
   1efe0:	ldr	r5, [sp, #16]
   1efe4:	strb	r1, [r0, #4]
   1efe8:	cmpne	r5, #0
   1efec:	bne	1eff8 <flatcc_json_printer_union_vector_field@@Base+0xdc>
   1eff0:	sub	sp, fp, #28
   1eff4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1eff8:	ldr	r0, [fp, #12]
   1effc:	ldr	r2, [sp, #8]
   1f000:	add	r1, sl, #5
   1f004:	add	r3, sp, #32
   1f008:	str	r1, [sp]
   1f00c:	mov	r1, r6
   1f010:	str	r0, [sp, #4]
   1f014:	mov	r0, r9
   1f018:	bl	1bbd0 <flatcc_json_printer_utype_enum_vector_field@@Base>
   1f01c:	ldr	r0, [r6, #16]
   1f020:	add	r7, r9, #20
   1f024:	mov	r2, sl
   1f028:	add	r1, r0, #1
   1f02c:	cmp	r0, #0
   1f030:	str	r1, [r6, #16]
   1f034:	mov	r6, r5
   1f038:	ldrne	r0, [r7]
   1f03c:	addne	r1, r0, #1
   1f040:	strne	r1, [r7]
   1f044:	movne	r1, #44	; 0x2c
   1f048:	strbne	r1, [r0]
   1f04c:	ldr	r1, [sp, #12]
   1f050:	ldr	r0, [r5]
   1f054:	ldr	r5, [r8]
   1f058:	ldr	r4, [r6, r0]!
   1f05c:	str	r0, [sp, #8]
   1f060:	mov	r0, r9
   1f064:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   1f068:	ldr	r1, [r9, #32]
   1f06c:	ldr	r0, [r9, #20]
   1f070:	cmp	r4, #0
   1f074:	add	r1, r1, #1
   1f078:	str	r1, [r9, #32]
   1f07c:	add	r1, r0, #1
   1f080:	str	r1, [r9, #20]
   1f084:	mov	r1, #91	; 0x5b
   1f088:	strb	r1, [r0]
   1f08c:	beq	1f1d0 <flatcc_json_printer_union_vector_field@@Base+0x2b4>
   1f090:	add	r5, r8, r5
   1f094:	ldr	r2, [fp, #16]
   1f098:	ldrb	r0, [r5, #4]
   1f09c:	cmp	r0, #0
   1f0a0:	beq	1f0cc <flatcc_json_printer_union_vector_field@@Base+0x1b0>
   1f0a4:	add	r1, r6, #4
   1f0a8:	mov	r8, r2
   1f0ac:	str	r1, [sp, #20]
   1f0b0:	strb	r0, [sp, #28]
   1f0b4:	add	r1, sp, #20
   1f0b8:	mov	r0, r9
   1f0bc:	blx	r2
   1f0c0:	cmp	r4, #1
   1f0c4:	bne	1f124 <flatcc_json_printer_union_vector_field@@Base+0x208>
   1f0c8:	b	1f1d0 <flatcc_json_printer_union_vector_field@@Base+0x2b4>
   1f0cc:	ldr	r0, [r7]
   1f0d0:	mov	r8, r2
   1f0d4:	add	r1, r0, #1
   1f0d8:	str	r1, [r7]
   1f0dc:	mov	r1, #110	; 0x6e
   1f0e0:	strb	r1, [r0]
   1f0e4:	ldr	r0, [r7]
   1f0e8:	add	r1, r0, #1
   1f0ec:	str	r1, [r7]
   1f0f0:	mov	r1, #117	; 0x75
   1f0f4:	strb	r1, [r0]
   1f0f8:	ldr	r0, [r7]
   1f0fc:	add	r1, r0, #1
   1f100:	str	r1, [r7]
   1f104:	mov	r1, #108	; 0x6c
   1f108:	strb	r1, [r0]
   1f10c:	ldr	r0, [r7]
   1f110:	add	r2, r0, #1
   1f114:	str	r2, [r7]
   1f118:	strb	r1, [r0]
   1f11c:	cmp	r4, #1
   1f120:	beq	1f1d0 <flatcc_json_printer_union_vector_field@@Base+0x2b4>
   1f124:	ldr	r0, [sp, #16]
   1f128:	ldr	r1, [sp, #8]
   1f12c:	add	r5, r5, #5
   1f130:	rsb	r4, r4, #1
   1f134:	mov	sl, #44	; 0x2c
   1f138:	add	r0, r0, r1
   1f13c:	add	r6, r0, #8
   1f140:	ldrb	r0, [r5]
   1f144:	ldr	r1, [r7]
   1f148:	add	r2, r1, #1
   1f14c:	cmp	r0, #0
   1f150:	str	r2, [r7]
   1f154:	strb	sl, [r1]
   1f158:	beq	1f174 <flatcc_json_printer_union_vector_field@@Base+0x258>
   1f15c:	str	r6, [sp, #20]
   1f160:	strb	r0, [sp, #28]
   1f164:	mov	r0, r9
   1f168:	add	r1, sp, #20
   1f16c:	blx	r8
   1f170:	b	1f1c0 <flatcc_json_printer_union_vector_field@@Base+0x2a4>
   1f174:	ldr	r0, [r7]
   1f178:	mov	r2, #108	; 0x6c
   1f17c:	add	r1, r0, #1
   1f180:	str	r1, [r7]
   1f184:	mov	r1, #110	; 0x6e
   1f188:	strb	r1, [r0]
   1f18c:	ldr	r0, [r7]
   1f190:	add	r1, r0, #1
   1f194:	str	r1, [r7]
   1f198:	mov	r1, #117	; 0x75
   1f19c:	strb	r1, [r0]
   1f1a0:	ldr	r0, [r7]
   1f1a4:	add	r1, r0, #1
   1f1a8:	str	r1, [r7]
   1f1ac:	strb	r2, [r0]
   1f1b0:	ldr	r0, [r7]
   1f1b4:	add	r1, r0, #1
   1f1b8:	str	r1, [r7]
   1f1bc:	strb	r2, [r0]
   1f1c0:	add	r6, r6, #4
   1f1c4:	add	r5, r5, #1
   1f1c8:	adds	r4, r4, #1
   1f1cc:	bne	1f140 <flatcc_json_printer_union_vector_field@@Base+0x224>
   1f1d0:	ldrb	r1, [r9, #25]
   1f1d4:	ldr	r0, [r9, #20]
   1f1d8:	cmp	r1, #0
   1f1dc:	beq	1f29c <flatcc_json_printer_union_vector_field@@Base+0x380>
   1f1e0:	add	r1, r0, #1
   1f1e4:	str	r1, [r9, #20]
   1f1e8:	mov	r1, #10
   1f1ec:	strb	r1, [r0]
   1f1f0:	ldr	r0, [r9, #32]
   1f1f4:	sub	r2, r0, #1
   1f1f8:	str	r2, [r9, #32]
   1f1fc:	ldrb	r3, [r9, #25]
   1f200:	ldr	r0, [r9, #20]
   1f204:	ldr	r1, [r9, #16]
   1f208:	mla	r6, r2, r3, r0
   1f20c:	mul	r5, r2, r3
   1f210:	cmp	r6, r1
   1f214:	bls	1f284 <flatcc_json_printer_union_vector_field@@Base+0x368>
   1f218:	cmp	r0, r1
   1f21c:	bcc	1f238 <flatcc_json_printer_union_vector_field@@Base+0x31c>
   1f220:	ldr	r2, [r9, #44]	; 0x2c
   1f224:	mov	r0, r9
   1f228:	mov	r1, #0
   1f22c:	blx	r2
   1f230:	ldr	r1, [r9, #16]
   1f234:	ldr	r0, [r9, #20]
   1f238:	sub	r6, r1, r0
   1f23c:	cmp	r6, r5
   1f240:	bcs	1f284 <flatcc_json_printer_union_vector_field@@Base+0x368>
   1f244:	mov	r1, #32
   1f248:	mov	r2, r6
   1f24c:	bl	12940 <memset@plt>
   1f250:	ldr	r0, [r9, #20]
   1f254:	ldr	r2, [r9, #44]	; 0x2c
   1f258:	mov	r1, #0
   1f25c:	add	r0, r0, r6
   1f260:	str	r0, [r9, #20]
   1f264:	mov	r0, r9
   1f268:	blx	r2
   1f26c:	ldr	r1, [r9, #16]
   1f270:	ldr	r0, [r9, #20]
   1f274:	sub	r5, r5, r6
   1f278:	sub	r6, r1, r0
   1f27c:	cmp	r5, r6
   1f280:	bhi	1f244 <flatcc_json_printer_union_vector_field@@Base+0x328>
   1f284:	mov	r1, #32
   1f288:	mov	r2, r5
   1f28c:	bl	12940 <memset@plt>
   1f290:	ldr	r0, [r7]
   1f294:	add	r0, r0, r5
   1f298:	str	r0, [r7]
   1f29c:	add	r1, r0, #1
   1f2a0:	str	r1, [r7]
   1f2a4:	mov	r1, #93	; 0x5d
   1f2a8:	strb	r1, [r0]
   1f2ac:	sub	sp, fp, #28
   1f2b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f2b4:	ldr	r0, [r9, #36]	; 0x24
   1f2b8:	movw	r2, #843	; 0x34b
   1f2bc:	cmp	r0, #0
   1f2c0:	moveq	r0, #1
   1f2c4:	streq	r0, [r9, #36]	; 0x24
   1f2c8:	ldr	r0, [pc, #20]	; 1f2e4 <flatcc_json_printer_union_vector_field@@Base+0x3c8>
   1f2cc:	ldr	r1, [pc, #20]	; 1f2e8 <flatcc_json_printer_union_vector_field@@Base+0x3cc>
   1f2d0:	ldr	r3, [pc, #20]	; 1f2ec <flatcc_json_printer_union_vector_field@@Base+0x3d0>
   1f2d4:	add	r0, pc, r0
   1f2d8:	add	r1, pc, r1
   1f2dc:	add	r3, pc, r3
   1f2e0:	bl	12994 <__assert_fail@plt>
   1f2e4:	andeq	r2, r0, r7, lsr #9
   1f2e8:			; <UNDEFINED> instruction: 0x000024be
   1f2ec:	andeq	r2, r0, ip, lsl r5

0001f2f0 <flatcc_json_printer_table_field@@Base>:
   1f2f0:	push	{r4, r5, r6, sl, fp, lr}
   1f2f4:	add	fp, sp, #16
   1f2f8:	sub	sp, sp, #24
   1f2fc:	mov	r5, r1
   1f300:	ldr	r1, [r1, #8]
   1f304:	mov	r4, r0
   1f308:	mov	r0, #4
   1f30c:	add	r0, r0, r2, lsl #1
   1f310:	cmp	r0, r1
   1f314:	bge	1f334 <flatcc_json_printer_table_field@@Base+0x44>
   1f318:	ldr	r1, [r5, #4]
   1f31c:	add	r0, r1, r0
   1f320:	ldrh	r0, [r0]
   1f324:	cmp	r0, #0
   1f328:	ldrne	r1, [r5]
   1f32c:	addsne	r6, r1, r0
   1f330:	bne	1f33c <flatcc_json_printer_table_field@@Base+0x4c>
   1f334:	sub	sp, fp, #16
   1f338:	pop	{r4, r5, r6, sl, fp, pc}
   1f33c:	ldr	r0, [r5, #16]
   1f340:	ldr	r2, [fp, #8]
   1f344:	add	r1, r0, #1
   1f348:	cmp	r0, #0
   1f34c:	str	r1, [r5, #16]
   1f350:	ldrne	r0, [r4, #20]
   1f354:	addne	r1, r0, #1
   1f358:	strne	r1, [r4, #20]
   1f35c:	movne	r1, #44	; 0x2c
   1f360:	strbne	r1, [r0]
   1f364:	mov	r0, r4
   1f368:	mov	r1, r3
   1f36c:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   1f370:	ldr	r0, [r5, #12]
   1f374:	subs	r0, r0, #1
   1f378:	beq	1f4bc <flatcc_json_printer_table_field@@Base+0x1cc>
   1f37c:	ldr	r1, [r6]
   1f380:	ldr	r3, [r4, #20]
   1f384:	ldr	r2, [fp, #12]
   1f388:	add	r1, r6, r1
   1f38c:	ldr	r6, [r4, #32]
   1f390:	add	r6, r6, #1
   1f394:	str	r6, [r4, #32]
   1f398:	add	r6, r3, #1
   1f39c:	str	r6, [r4, #20]
   1f3a0:	mov	r6, #123	; 0x7b
   1f3a4:	strb	r6, [r3]
   1f3a8:	str	r0, [sp, #16]
   1f3ac:	mov	r0, #0
   1f3b0:	str	r0, [sp, #20]
   1f3b4:	str	r1, [sp, #4]
   1f3b8:	ldr	r0, [r1]
   1f3bc:	sub	r3, r1, r0
   1f3c0:	str	r3, [sp, #8]
   1f3c4:	ldrh	r0, [r1, -r0]
   1f3c8:	add	r1, sp, #4
   1f3cc:	str	r0, [sp, #12]
   1f3d0:	mov	r0, r4
   1f3d4:	blx	r2
   1f3d8:	ldrb	r1, [r4, #25]
   1f3dc:	ldr	r0, [r4, #20]
   1f3e0:	cmp	r1, #0
   1f3e4:	beq	1f4a4 <flatcc_json_printer_table_field@@Base+0x1b4>
   1f3e8:	add	r1, r0, #1
   1f3ec:	str	r1, [r4, #20]
   1f3f0:	mov	r1, #10
   1f3f4:	strb	r1, [r0]
   1f3f8:	ldr	r0, [r4, #32]
   1f3fc:	sub	r2, r0, #1
   1f400:	str	r2, [r4, #32]
   1f404:	ldrb	r3, [r4, #25]
   1f408:	ldr	r0, [r4, #20]
   1f40c:	ldr	r1, [r4, #16]
   1f410:	mla	r6, r2, r3, r0
   1f414:	mul	r5, r2, r3
   1f418:	cmp	r6, r1
   1f41c:	bls	1f48c <flatcc_json_printer_table_field@@Base+0x19c>
   1f420:	cmp	r0, r1
   1f424:	bcc	1f440 <flatcc_json_printer_table_field@@Base+0x150>
   1f428:	ldr	r2, [r4, #44]	; 0x2c
   1f42c:	mov	r0, r4
   1f430:	mov	r1, #0
   1f434:	blx	r2
   1f438:	ldr	r1, [r4, #16]
   1f43c:	ldr	r0, [r4, #20]
   1f440:	sub	r6, r1, r0
   1f444:	cmp	r6, r5
   1f448:	bcs	1f48c <flatcc_json_printer_table_field@@Base+0x19c>
   1f44c:	mov	r1, #32
   1f450:	mov	r2, r6
   1f454:	bl	12940 <memset@plt>
   1f458:	ldr	r0, [r4, #20]
   1f45c:	ldr	r2, [r4, #44]	; 0x2c
   1f460:	mov	r1, #0
   1f464:	add	r0, r0, r6
   1f468:	str	r0, [r4, #20]
   1f46c:	mov	r0, r4
   1f470:	blx	r2
   1f474:	ldr	r1, [r4, #16]
   1f478:	ldr	r0, [r4, #20]
   1f47c:	sub	r5, r5, r6
   1f480:	sub	r6, r1, r0
   1f484:	cmp	r5, r6
   1f488:	bhi	1f44c <flatcc_json_printer_table_field@@Base+0x15c>
   1f48c:	mov	r1, #32
   1f490:	mov	r2, r5
   1f494:	bl	12940 <memset@plt>
   1f498:	ldr	r0, [r4, #20]
   1f49c:	add	r0, r0, r5
   1f4a0:	str	r0, [r4, #20]
   1f4a4:	add	r1, r0, #1
   1f4a8:	str	r1, [r4, #20]
   1f4ac:	mov	r1, #125	; 0x7d
   1f4b0:	strb	r1, [r0]
   1f4b4:	sub	sp, fp, #16
   1f4b8:	pop	{r4, r5, r6, sl, fp, pc}
   1f4bc:	ldr	r0, [r4, #36]	; 0x24
   1f4c0:	cmp	r0, #0
   1f4c4:	bne	1f334 <flatcc_json_printer_table_field@@Base+0x44>
   1f4c8:	mov	r0, #2
   1f4cc:	str	r0, [r4, #36]	; 0x24
   1f4d0:	sub	sp, fp, #16
   1f4d4:	pop	{r4, r5, r6, sl, fp, pc}

0001f4d8 <flatcc_json_printer_union_field@@Base>:
   1f4d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f4dc:	add	fp, sp, #28
   1f4e0:	sub	sp, sp, #20
   1f4e4:	mov	r9, r1
   1f4e8:	mov	r4, r0
   1f4ec:	mov	r0, #2
   1f4f0:	mov	r8, r3
   1f4f4:	lsl	r1, r2, #1
   1f4f8:	add	r3, r0, r2, lsl #1
   1f4fc:	ldr	r2, [r9, #8]
   1f500:	mov	r0, #0
   1f504:	cmp	r3, r2
   1f508:	bge	1f524 <flatcc_json_printer_union_field@@Base+0x4c>
   1f50c:	ldr	r7, [r9, #4]
   1f510:	add	r3, r7, r3
   1f514:	ldrh	r3, [r3]
   1f518:	cmp	r3, #0
   1f51c:	ldrne	r0, [r9]
   1f520:	addne	r0, r0, r3
   1f524:	add	r1, r1, #4
   1f528:	cmp	r1, r2
   1f52c:	bge	1f554 <flatcc_json_printer_union_field@@Base+0x7c>
   1f530:	ldr	r2, [r9, #4]
   1f534:	add	r1, r2, r1
   1f538:	ldrh	r1, [r1]
   1f53c:	cmp	r1, #0
   1f540:	beq	1f554 <flatcc_json_printer_union_field@@Base+0x7c>
   1f544:	cmp	r0, #0
   1f548:	ldrne	r2, [r9]
   1f54c:	addsne	r2, r2, r1
   1f550:	bne	1f55c <flatcc_json_printer_union_field@@Base+0x84>
   1f554:	sub	sp, fp, #28
   1f558:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f55c:	ldrb	r6, [r0]
   1f560:	ldr	r0, [r9, #16]
   1f564:	ldr	r7, [fp, #8]
   1f568:	str	r2, [sp]
   1f56c:	add	r1, r0, #1
   1f570:	cmp	r0, #0
   1f574:	str	r1, [r9, #16]
   1f578:	ldrne	r0, [r4, #20]
   1f57c:	addne	r1, r0, #1
   1f580:	strne	r1, [r4, #20]
   1f584:	movne	r1, #44	; 0x2c
   1f588:	strbne	r1, [r0]
   1f58c:	ldrb	r1, [r4, #25]
   1f590:	ldr	r0, [r4, #20]
   1f594:	cmp	r1, #0
   1f598:	beq	1f654 <flatcc_json_printer_union_field@@Base+0x17c>
   1f59c:	add	r1, r0, #1
   1f5a0:	mov	sl, r4
   1f5a4:	mov	r5, r6
   1f5a8:	str	r1, [r4, #20]
   1f5ac:	mov	r1, #10
   1f5b0:	strb	r1, [r0]
   1f5b4:	ldr	r1, [sl, #16]!
   1f5b8:	ldr	r0, [r4, #20]
   1f5bc:	ldrb	r2, [sl, #9]
   1f5c0:	ldr	r3, [sl, #16]
   1f5c4:	mla	r6, r3, r2, r0
   1f5c8:	mul	r7, r3, r2
   1f5cc:	cmp	r6, r1
   1f5d0:	bls	1f67c <flatcc_json_printer_union_field@@Base+0x1a4>
   1f5d4:	cmp	r0, r1
   1f5d8:	bcc	1f5f4 <flatcc_json_printer_union_field@@Base+0x11c>
   1f5dc:	ldr	r2, [r4, #44]	; 0x2c
   1f5e0:	mov	r0, r4
   1f5e4:	mov	r1, #0
   1f5e8:	blx	r2
   1f5ec:	ldr	r1, [r4, #16]
   1f5f0:	ldr	r0, [r4, #20]
   1f5f4:	mov	r6, r5
   1f5f8:	sub	r5, r1, r0
   1f5fc:	cmp	r5, r7
   1f600:	bcs	1f644 <flatcc_json_printer_union_field@@Base+0x16c>
   1f604:	mov	r1, #32
   1f608:	mov	r2, r5
   1f60c:	bl	12940 <memset@plt>
   1f610:	ldr	r0, [r4, #20]
   1f614:	ldr	r2, [r4, #44]	; 0x2c
   1f618:	mov	r1, #0
   1f61c:	add	r0, r0, r5
   1f620:	str	r0, [r4, #20]
   1f624:	mov	r0, r4
   1f628:	blx	r2
   1f62c:	ldr	r1, [r4, #16]
   1f630:	ldr	r0, [r4, #20]
   1f634:	sub	r7, r7, r5
   1f638:	sub	r5, r1, r0
   1f63c:	cmp	r7, r5
   1f640:	bhi	1f604 <flatcc_json_printer_union_field@@Base+0x12c>
   1f644:	mov	r1, #32
   1f648:	mov	r2, r7
   1f64c:	bl	12940 <memset@plt>
   1f650:	b	1f68c <flatcc_json_printer_union_field@@Base+0x1b4>
   1f654:	mov	sl, r4
   1f658:	ldr	r1, [sl, #16]!
   1f65c:	cmp	r0, r1
   1f660:	bcc	1f69c <flatcc_json_printer_union_field@@Base+0x1c4>
   1f664:	ldr	r2, [r4, #44]	; 0x2c
   1f668:	mov	r0, r4
   1f66c:	mov	r1, #0
   1f670:	blx	r2
   1f674:	ldr	r0, [r4, #20]
   1f678:	b	1f69c <flatcc_json_printer_union_field@@Base+0x1c4>
   1f67c:	mov	r1, #32
   1f680:	mov	r2, r7
   1f684:	bl	12940 <memset@plt>
   1f688:	mov	r6, r5
   1f68c:	ldr	r0, [r4, #20]
   1f690:	add	r0, r0, r7
   1f694:	ldr	r7, [fp, #8]
   1f698:	str	r0, [r4, #20]
   1f69c:	mov	r1, #34	; 0x22
   1f6a0:	str	r6, [sp, #4]
   1f6a4:	strb	r1, [r0]
   1f6a8:	ldrb	r2, [r4, #26]
   1f6ac:	ldr	r0, [r4, #20]
   1f6b0:	ldr	r1, [r4, #16]
   1f6b4:	cmp	r2, #0
   1f6b8:	addeq	r0, r0, #1
   1f6bc:	add	r2, r0, r7
   1f6c0:	str	r0, [r4, #20]
   1f6c4:	cmp	r2, r1
   1f6c8:	bcs	1f6dc <flatcc_json_printer_union_field@@Base+0x204>
   1f6cc:	mov	r1, r8
   1f6d0:	mov	r2, r7
   1f6d4:	bl	128b0 <memcpy@plt>
   1f6d8:	b	1f770 <flatcc_json_printer_union_field@@Base+0x298>
   1f6dc:	mov	r5, r8
   1f6e0:	cmp	r0, r1
   1f6e4:	bcc	1f700 <flatcc_json_printer_union_field@@Base+0x228>
   1f6e8:	ldr	r2, [r4, #44]	; 0x2c
   1f6ec:	mov	r0, r4
   1f6f0:	mov	r1, #0
   1f6f4:	blx	r2
   1f6f8:	ldr	r0, [r4, #20]
   1f6fc:	ldr	r1, [sl]
   1f700:	sub	r8, r1, r0
   1f704:	mov	r6, r5
   1f708:	cmp	r8, r7
   1f70c:	bcs	1f75c <flatcc_json_printer_union_field@@Base+0x284>
   1f710:	ldr	r7, [fp, #8]
   1f714:	mov	r6, r5
   1f718:	mov	r1, r6
   1f71c:	mov	r2, r8
   1f720:	bl	128b0 <memcpy@plt>
   1f724:	ldr	r0, [r4, #20]
   1f728:	ldr	r2, [r4, #44]	; 0x2c
   1f72c:	mov	r1, #0
   1f730:	add	r0, r0, r8
   1f734:	str	r0, [r4, #20]
   1f738:	mov	r0, r4
   1f73c:	blx	r2
   1f740:	ldr	r0, [r4, #20]
   1f744:	ldr	r1, [sl]
   1f748:	sub	r7, r7, r8
   1f74c:	add	r6, r6, r8
   1f750:	sub	r8, r1, r0
   1f754:	cmp	r7, r8
   1f758:	bhi	1f718 <flatcc_json_printer_union_field@@Base+0x240>
   1f75c:	mov	r1, r6
   1f760:	mov	r2, r7
   1f764:	bl	128b0 <memcpy@plt>
   1f768:	ldr	r6, [sp, #4]
   1f76c:	mov	r8, r5
   1f770:	ldr	r0, [r4, #20]
   1f774:	ldr	r1, [r4, #16]
   1f778:	add	r0, r0, r7
   1f77c:	add	r2, r0, #5
   1f780:	str	r0, [r4, #20]
   1f784:	cmp	r2, r1
   1f788:	bcs	1f7ac <flatcc_json_printer_union_field@@Base+0x2d4>
   1f78c:	ldr	sl, [sp]
   1f790:	mov	r1, #101	; 0x65
   1f794:	mov	r7, #5
   1f798:	strb	r1, [r0, #4]
   1f79c:	movw	r1, #29791	; 0x745f
   1f7a0:	movt	r1, #28793	; 0x7079
   1f7a4:	str	r1, [r0]
   1f7a8:	b	1f84c <flatcc_json_printer_union_field@@Base+0x374>
   1f7ac:	cmp	r0, r1
   1f7b0:	bcc	1f7cc <flatcc_json_printer_union_field@@Base+0x2f4>
   1f7b4:	ldr	r2, [r4, #44]	; 0x2c
   1f7b8:	mov	r0, r4
   1f7bc:	mov	r1, #0
   1f7c0:	blx	r2
   1f7c4:	ldr	r0, [r4, #20]
   1f7c8:	ldr	r1, [sl]
   1f7cc:	sub	r5, r1, r0
   1f7d0:	cmp	r5, #4
   1f7d4:	bhi	1f82c <flatcc_json_printer_union_field@@Base+0x354>
   1f7d8:	ldr	r6, [pc, #496]	; 1f9d0 <flatcc_json_printer_union_field@@Base+0x4f8>
   1f7dc:	mov	r7, #5
   1f7e0:	add	r6, pc, r6
   1f7e4:	mov	r1, r6
   1f7e8:	mov	r2, r5
   1f7ec:	bl	128b0 <memcpy@plt>
   1f7f0:	ldr	r0, [r4, #20]
   1f7f4:	ldr	r2, [r4, #44]	; 0x2c
   1f7f8:	mov	r1, #0
   1f7fc:	add	r0, r0, r5
   1f800:	str	r0, [r4, #20]
   1f804:	mov	r0, r4
   1f808:	blx	r2
   1f80c:	ldr	r0, [r4, #20]
   1f810:	ldr	r1, [sl]
   1f814:	sub	r7, r7, r5
   1f818:	add	r6, r6, r5
   1f81c:	sub	r5, r1, r0
   1f820:	cmp	r7, r5
   1f824:	bhi	1f7e4 <flatcc_json_printer_union_field@@Base+0x30c>
   1f828:	b	1f838 <flatcc_json_printer_union_field@@Base+0x360>
   1f82c:	ldr	r6, [pc, #408]	; 1f9cc <flatcc_json_printer_union_field@@Base+0x4f4>
   1f830:	mov	r7, #5
   1f834:	add	r6, pc, r6
   1f838:	ldr	sl, [sp]
   1f83c:	mov	r1, r6
   1f840:	mov	r2, r7
   1f844:	bl	128b0 <memcpy@plt>
   1f848:	ldr	r6, [sp, #4]
   1f84c:	ldr	r0, [r4, #20]
   1f850:	add	r1, r0, r7
   1f854:	str	r1, [r4, #20]
   1f858:	mov	r1, #34	; 0x22
   1f85c:	strb	r1, [r0, r7]
   1f860:	ldrb	r0, [r4, #26]
   1f864:	ldr	r1, [r4, #20]
   1f868:	cmp	r0, #0
   1f86c:	addeq	r1, r1, #1
   1f870:	add	r0, r1, #1
   1f874:	str	r0, [r4, #20]
   1f878:	mov	r0, #58	; 0x3a
   1f87c:	strb	r0, [r1]
   1f880:	mov	r1, #32
   1f884:	ldr	r0, [r4, #20]
   1f888:	strb	r1, [r0]
   1f88c:	ldrb	r1, [r4, #25]
   1f890:	ldr	r0, [r4, #20]
   1f894:	cmp	r1, #0
   1f898:	addne	r0, r0, #1
   1f89c:	str	r0, [r4, #20]
   1f8a0:	ldrb	r1, [r4, #27]
   1f8a4:	cmp	r1, #0
   1f8a8:	beq	1f8fc <flatcc_json_printer_union_field@@Base+0x424>
   1f8ac:	mov	r1, #0
   1f8b0:	cmp	r6, #100	; 0x64
   1f8b4:	bcc	1f91c <flatcc_json_printer_union_field@@Base+0x444>
   1f8b8:	strb	r1, [r0, #3]
   1f8bc:	movw	r1, #34079	; 0x851f
   1f8c0:	movt	r1, #20971	; 0x51eb
   1f8c4:	umull	r1, r2, r6, r1
   1f8c8:	mov	r1, #48	; 0x30
   1f8cc:	orr	r1, r1, r2, lsr #5
   1f8d0:	strb	r1, [r0]
   1f8d4:	lsr	r1, r2, #5
   1f8d8:	mov	r2, #100	; 0x64
   1f8dc:	mls	r1, r1, r2, r6
   1f8e0:	ldr	r2, [pc, #236]	; 1f9d4 <flatcc_json_printer_union_field@@Base+0x4fc>
   1f8e4:	add	r2, pc, r2
   1f8e8:	add	r1, r2, r1, lsl #1
   1f8ec:	ldrh	r1, [r1]
   1f8f0:	strh	r1, [r0, #1]
   1f8f4:	mov	r0, #3
   1f8f8:	b	1f96c <flatcc_json_printer_union_field@@Base+0x494>
   1f8fc:	ldr	r2, [fp, #12]
   1f900:	mov	r0, r4
   1f904:	mov	r1, r6
   1f908:	blx	r2
   1f90c:	ldr	r2, [fp, #8]
   1f910:	cmp	r6, #0
   1f914:	bne	1f984 <flatcc_json_printer_union_field@@Base+0x4ac>
   1f918:	b	1f554 <flatcc_json_printer_union_field@@Base+0x7c>
   1f91c:	cmp	r6, #10
   1f920:	bcc	1f95c <flatcc_json_printer_union_field@@Base+0x484>
   1f924:	strb	r1, [r0, #2]
   1f928:	movw	r1, #34079	; 0x851f
   1f92c:	movt	r1, #20971	; 0x51eb
   1f930:	umull	r1, r2, r6, r1
   1f934:	lsr	r1, r2, #5
   1f938:	mov	r2, #100	; 0x64
   1f93c:	mls	r1, r1, r2, r6
   1f940:	ldr	r2, [pc, #144]	; 1f9d8 <flatcc_json_printer_union_field@@Base+0x500>
   1f944:	add	r2, pc, r2
   1f948:	add	r1, r2, r1, lsl #1
   1f94c:	ldrh	r1, [r1]
   1f950:	strh	r1, [r0]
   1f954:	mov	r0, #2
   1f958:	b	1f96c <flatcc_json_printer_union_field@@Base+0x494>
   1f95c:	strb	r1, [r0, #1]
   1f960:	add	r1, r6, #48	; 0x30
   1f964:	strb	r1, [r0]
   1f968:	mov	r0, #1
   1f96c:	ldr	r1, [r4, #20]
   1f970:	ldr	r2, [fp, #8]
   1f974:	add	r0, r1, r0
   1f978:	str	r0, [r4, #20]
   1f97c:	cmp	r6, #0
   1f980:	beq	1f554 <flatcc_json_printer_union_field@@Base+0x7c>
   1f984:	ldr	r0, [r4, #20]
   1f988:	ldr	r5, [fp, #16]
   1f98c:	add	r1, r0, #1
   1f990:	str	r1, [r4, #20]
   1f994:	mov	r1, #44	; 0x2c
   1f998:	strb	r1, [r0]
   1f99c:	mov	r0, r4
   1f9a0:	mov	r1, r8
   1f9a4:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   1f9a8:	ldr	r0, [r9, #12]
   1f9ac:	strb	r6, [sp, #16]
   1f9b0:	str	sl, [sp, #8]
   1f9b4:	add	r1, sp, #8
   1f9b8:	str	r0, [sp, #12]
   1f9bc:	mov	r0, r4
   1f9c0:	blx	r5
   1f9c4:	sub	sp, fp, #28
   1f9c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f9cc:	andeq	r2, r0, lr, lsl #1
   1f9d0:	andeq	r2, r0, r2, ror #1
   1f9d4:	andeq	r2, r0, r4, ror #4
   1f9d8:	andeq	r2, r0, r4, lsl #4

0001f9dc <flatcc_json_printer_union_table@@Base>:
   1f9dc:	push	{r4, r5, r6, sl, fp, lr}
   1f9e0:	add	fp, sp, #16
   1f9e4:	sub	sp, sp, #24
   1f9e8:	mov	r4, r0
   1f9ec:	ldr	r0, [r1, #4]
   1f9f0:	subs	r0, r0, #1
   1f9f4:	beq	1fb38 <flatcc_json_printer_union_table@@Base+0x15c>
   1f9f8:	ldr	r1, [r1]
   1f9fc:	ldr	r6, [r4, #32]
   1fa00:	ldr	r3, [r1]
   1fa04:	add	r6, r6, #1
   1fa08:	add	r1, r1, r3
   1fa0c:	ldr	r3, [r4, #20]
   1fa10:	str	r6, [r4, #32]
   1fa14:	add	r6, r3, #1
   1fa18:	str	r6, [r4, #20]
   1fa1c:	mov	r6, #123	; 0x7b
   1fa20:	strb	r6, [r3]
   1fa24:	str	r0, [sp, #16]
   1fa28:	mov	r0, #0
   1fa2c:	str	r0, [sp, #20]
   1fa30:	str	r1, [sp, #4]
   1fa34:	ldr	r0, [r1]
   1fa38:	sub	r3, r1, r0
   1fa3c:	str	r3, [sp, #8]
   1fa40:	ldrh	r0, [r1, -r0]
   1fa44:	add	r1, sp, #4
   1fa48:	str	r0, [sp, #12]
   1fa4c:	mov	r0, r4
   1fa50:	blx	r2
   1fa54:	ldrb	r1, [r4, #25]
   1fa58:	ldr	r0, [r4, #20]
   1fa5c:	cmp	r1, #0
   1fa60:	beq	1fb20 <flatcc_json_printer_union_table@@Base+0x144>
   1fa64:	add	r1, r0, #1
   1fa68:	str	r1, [r4, #20]
   1fa6c:	mov	r1, #10
   1fa70:	strb	r1, [r0]
   1fa74:	ldr	r0, [r4, #32]
   1fa78:	sub	r2, r0, #1
   1fa7c:	str	r2, [r4, #32]
   1fa80:	ldrb	r3, [r4, #25]
   1fa84:	ldr	r0, [r4, #20]
   1fa88:	ldr	r1, [r4, #16]
   1fa8c:	mla	r6, r2, r3, r0
   1fa90:	mul	r5, r2, r3
   1fa94:	cmp	r6, r1
   1fa98:	bls	1fb08 <flatcc_json_printer_union_table@@Base+0x12c>
   1fa9c:	cmp	r0, r1
   1faa0:	bcc	1fabc <flatcc_json_printer_union_table@@Base+0xe0>
   1faa4:	ldr	r2, [r4, #44]	; 0x2c
   1faa8:	mov	r0, r4
   1faac:	mov	r1, #0
   1fab0:	blx	r2
   1fab4:	ldr	r1, [r4, #16]
   1fab8:	ldr	r0, [r4, #20]
   1fabc:	sub	r6, r1, r0
   1fac0:	cmp	r6, r5
   1fac4:	bcs	1fb08 <flatcc_json_printer_union_table@@Base+0x12c>
   1fac8:	mov	r1, #32
   1facc:	mov	r2, r6
   1fad0:	bl	12940 <memset@plt>
   1fad4:	ldr	r0, [r4, #20]
   1fad8:	ldr	r2, [r4, #44]	; 0x2c
   1fadc:	mov	r1, #0
   1fae0:	add	r0, r0, r6
   1fae4:	str	r0, [r4, #20]
   1fae8:	mov	r0, r4
   1faec:	blx	r2
   1faf0:	ldr	r1, [r4, #16]
   1faf4:	ldr	r0, [r4, #20]
   1faf8:	sub	r5, r5, r6
   1fafc:	sub	r6, r1, r0
   1fb00:	cmp	r5, r6
   1fb04:	bhi	1fac8 <flatcc_json_printer_union_table@@Base+0xec>
   1fb08:	mov	r1, #32
   1fb0c:	mov	r2, r5
   1fb10:	bl	12940 <memset@plt>
   1fb14:	ldr	r0, [r4, #20]
   1fb18:	add	r0, r0, r5
   1fb1c:	str	r0, [r4, #20]
   1fb20:	add	r1, r0, #1
   1fb24:	str	r1, [r4, #20]
   1fb28:	mov	r1, #125	; 0x7d
   1fb2c:	strb	r1, [r0]
   1fb30:	sub	sp, fp, #16
   1fb34:	pop	{r4, r5, r6, sl, fp, pc}
   1fb38:	ldr	r0, [r4, #36]	; 0x24
   1fb3c:	cmp	r0, #0
   1fb40:	beq	1fb4c <flatcc_json_printer_union_table@@Base+0x170>
   1fb44:	sub	sp, fp, #16
   1fb48:	pop	{r4, r5, r6, sl, fp, pc}
   1fb4c:	mov	r0, #2
   1fb50:	str	r0, [r4, #36]	; 0x24
   1fb54:	sub	sp, fp, #16
   1fb58:	pop	{r4, r5, r6, sl, fp, pc}

0001fb5c <flatcc_json_printer_union_struct@@Base>:
   1fb5c:	push	{r4, r5, r6, sl, fp, lr}
   1fb60:	add	fp, sp, #16
   1fb64:	mov	r4, r0
   1fb68:	ldr	r0, [r0, #20]
   1fb6c:	ldr	r3, [r4, #32]
   1fb70:	add	r3, r3, #1
   1fb74:	str	r3, [r4, #32]
   1fb78:	add	r3, r0, #1
   1fb7c:	str	r3, [r4, #20]
   1fb80:	mov	r3, #123	; 0x7b
   1fb84:	strb	r3, [r0]
   1fb88:	ldr	r0, [r1]
   1fb8c:	ldr	r1, [r0]
   1fb90:	add	r1, r0, r1
   1fb94:	mov	r0, r4
   1fb98:	blx	r2
   1fb9c:	ldrb	r1, [r4, #25]
   1fba0:	ldr	r0, [r4, #20]
   1fba4:	cmp	r1, #0
   1fba8:	beq	1fc68 <flatcc_json_printer_union_struct@@Base+0x10c>
   1fbac:	add	r1, r0, #1
   1fbb0:	str	r1, [r4, #20]
   1fbb4:	mov	r1, #10
   1fbb8:	strb	r1, [r0]
   1fbbc:	ldr	r0, [r4, #32]
   1fbc0:	sub	r2, r0, #1
   1fbc4:	str	r2, [r4, #32]
   1fbc8:	ldrb	r3, [r4, #25]
   1fbcc:	ldr	r0, [r4, #20]
   1fbd0:	ldr	r1, [r4, #16]
   1fbd4:	mla	r6, r2, r3, r0
   1fbd8:	mul	r5, r2, r3
   1fbdc:	cmp	r6, r1
   1fbe0:	bls	1fc50 <flatcc_json_printer_union_struct@@Base+0xf4>
   1fbe4:	cmp	r0, r1
   1fbe8:	bcc	1fc04 <flatcc_json_printer_union_struct@@Base+0xa8>
   1fbec:	ldr	r2, [r4, #44]	; 0x2c
   1fbf0:	mov	r0, r4
   1fbf4:	mov	r1, #0
   1fbf8:	blx	r2
   1fbfc:	ldr	r1, [r4, #16]
   1fc00:	ldr	r0, [r4, #20]
   1fc04:	sub	r6, r1, r0
   1fc08:	cmp	r6, r5
   1fc0c:	bcs	1fc50 <flatcc_json_printer_union_struct@@Base+0xf4>
   1fc10:	mov	r1, #32
   1fc14:	mov	r2, r6
   1fc18:	bl	12940 <memset@plt>
   1fc1c:	ldr	r0, [r4, #20]
   1fc20:	ldr	r2, [r4, #44]	; 0x2c
   1fc24:	mov	r1, #0
   1fc28:	add	r0, r0, r6
   1fc2c:	str	r0, [r4, #20]
   1fc30:	mov	r0, r4
   1fc34:	blx	r2
   1fc38:	ldr	r1, [r4, #16]
   1fc3c:	ldr	r0, [r4, #20]
   1fc40:	sub	r5, r5, r6
   1fc44:	sub	r6, r1, r0
   1fc48:	cmp	r5, r6
   1fc4c:	bhi	1fc10 <flatcc_json_printer_union_struct@@Base+0xb4>
   1fc50:	mov	r1, #32
   1fc54:	mov	r2, r5
   1fc58:	bl	12940 <memset@plt>
   1fc5c:	ldr	r0, [r4, #20]
   1fc60:	add	r0, r0, r5
   1fc64:	str	r0, [r4, #20]
   1fc68:	add	r1, r0, #1
   1fc6c:	str	r1, [r4, #20]
   1fc70:	mov	r1, #125	; 0x7d
   1fc74:	strb	r1, [r0]
   1fc78:	pop	{r4, r5, r6, sl, fp, pc}

0001fc7c <flatcc_json_printer_union_string@@Base>:
   1fc7c:	ldr	r1, [r1]
   1fc80:	ldr	r2, [r1]
   1fc84:	ldr	r2, [r1, r2]!
   1fc88:	add	r1, r1, #4
   1fc8c:	b	1505c <flatcc_json_printer_string@@Base+0x4>

0001fc90 <flatcc_json_printer_embedded_struct_field@@Base>:
   1fc90:	push	{r4, r5, r6, r7, fp, lr}
   1fc94:	add	fp, sp, #16
   1fc98:	mov	r5, r3
   1fc9c:	mov	r3, r1
   1fca0:	mov	r4, r0
   1fca4:	add	r7, fp, #8
   1fca8:	mov	r6, r2
   1fcac:	cmp	r3, #0
   1fcb0:	ldm	r7, {r1, r2, r7}
   1fcb4:	ldrne	r0, [r4, #20]
   1fcb8:	addne	r3, r0, #1
   1fcbc:	strne	r3, [r4, #20]
   1fcc0:	movne	r3, #44	; 0x2c
   1fcc4:	strbne	r3, [r0]
   1fcc8:	mov	r0, r4
   1fccc:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   1fcd0:	ldr	r1, [r4, #32]
   1fcd4:	ldr	r0, [r4, #20]
   1fcd8:	add	r1, r1, #1
   1fcdc:	str	r1, [r4, #32]
   1fce0:	add	r1, r0, #1
   1fce4:	str	r1, [r4, #20]
   1fce8:	mov	r1, #123	; 0x7b
   1fcec:	strb	r1, [r0]
   1fcf0:	add	r1, r6, r5
   1fcf4:	mov	r0, r4
   1fcf8:	blx	r7
   1fcfc:	ldrb	r1, [r4, #25]
   1fd00:	ldr	r0, [r4, #20]
   1fd04:	cmp	r1, #0
   1fd08:	beq	1fdc8 <flatcc_json_printer_embedded_struct_field@@Base+0x138>
   1fd0c:	add	r1, r0, #1
   1fd10:	str	r1, [r4, #20]
   1fd14:	mov	r1, #10
   1fd18:	strb	r1, [r0]
   1fd1c:	ldr	r0, [r4, #32]
   1fd20:	sub	r2, r0, #1
   1fd24:	str	r2, [r4, #32]
   1fd28:	ldrb	r3, [r4, #25]
   1fd2c:	ldr	r0, [r4, #20]
   1fd30:	ldr	r1, [r4, #16]
   1fd34:	mla	r7, r2, r3, r0
   1fd38:	mul	r5, r2, r3
   1fd3c:	cmp	r7, r1
   1fd40:	bls	1fdb0 <flatcc_json_printer_embedded_struct_field@@Base+0x120>
   1fd44:	cmp	r0, r1
   1fd48:	bcc	1fd64 <flatcc_json_printer_embedded_struct_field@@Base+0xd4>
   1fd4c:	ldr	r2, [r4, #44]	; 0x2c
   1fd50:	mov	r0, r4
   1fd54:	mov	r1, #0
   1fd58:	blx	r2
   1fd5c:	ldr	r1, [r4, #16]
   1fd60:	ldr	r0, [r4, #20]
   1fd64:	sub	r6, r1, r0
   1fd68:	cmp	r6, r5
   1fd6c:	bcs	1fdb0 <flatcc_json_printer_embedded_struct_field@@Base+0x120>
   1fd70:	mov	r1, #32
   1fd74:	mov	r2, r6
   1fd78:	bl	12940 <memset@plt>
   1fd7c:	ldr	r0, [r4, #20]
   1fd80:	ldr	r2, [r4, #44]	; 0x2c
   1fd84:	mov	r1, #0
   1fd88:	add	r0, r0, r6
   1fd8c:	str	r0, [r4, #20]
   1fd90:	mov	r0, r4
   1fd94:	blx	r2
   1fd98:	ldr	r1, [r4, #16]
   1fd9c:	ldr	r0, [r4, #20]
   1fda0:	sub	r5, r5, r6
   1fda4:	sub	r6, r1, r0
   1fda8:	cmp	r5, r6
   1fdac:	bhi	1fd70 <flatcc_json_printer_embedded_struct_field@@Base+0xe0>
   1fdb0:	mov	r1, #32
   1fdb4:	mov	r2, r5
   1fdb8:	bl	12940 <memset@plt>
   1fdbc:	ldr	r0, [r4, #20]
   1fdc0:	add	r0, r0, r5
   1fdc4:	str	r0, [r4, #20]
   1fdc8:	add	r1, r0, #1
   1fdcc:	str	r1, [r4, #20]
   1fdd0:	mov	r1, #125	; 0x7d
   1fdd4:	strb	r1, [r0]
   1fdd8:	pop	{r4, r5, r6, r7, fp, pc}

0001fddc <flatcc_json_printer_struct_field@@Base>:
   1fddc:	push	{r4, r5, r6, r7, fp, lr}
   1fde0:	add	fp, sp, #16
   1fde4:	mov	r4, r0
   1fde8:	mov	r0, #4
   1fdec:	add	r0, r0, r2, lsl #1
   1fdf0:	ldr	r2, [r1, #8]
   1fdf4:	cmp	r0, r2
   1fdf8:	popge	{r4, r5, r6, r7, fp, pc}
   1fdfc:	ldr	r2, [r1, #4]
   1fe00:	add	r0, r2, r0
   1fe04:	ldrh	r0, [r0]
   1fe08:	cmp	r0, #0
   1fe0c:	ldrne	r2, [r1]
   1fe10:	addsne	r5, r2, r0
   1fe14:	bne	1fe1c <flatcc_json_printer_struct_field@@Base+0x40>
   1fe18:	pop	{r4, r5, r6, r7, fp, pc}
   1fe1c:	ldr	r0, [r1, #16]
   1fe20:	ldr	r2, [fp, #8]
   1fe24:	ldr	r7, [fp, #12]
   1fe28:	add	r6, r0, #1
   1fe2c:	cmp	r0, #0
   1fe30:	str	r6, [r1, #16]
   1fe34:	ldrne	r0, [r4, #20]
   1fe38:	addne	r1, r0, #1
   1fe3c:	strne	r1, [r4, #20]
   1fe40:	movne	r1, #44	; 0x2c
   1fe44:	strbne	r1, [r0]
   1fe48:	mov	r0, r4
   1fe4c:	mov	r1, r3
   1fe50:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   1fe54:	ldr	r1, [r4, #32]
   1fe58:	ldr	r0, [r4, #20]
   1fe5c:	add	r1, r1, #1
   1fe60:	str	r1, [r4, #32]
   1fe64:	add	r1, r0, #1
   1fe68:	str	r1, [r4, #20]
   1fe6c:	mov	r1, #123	; 0x7b
   1fe70:	strb	r1, [r0]
   1fe74:	mov	r0, r4
   1fe78:	mov	r1, r5
   1fe7c:	blx	r7
   1fe80:	ldrb	r1, [r4, #25]
   1fe84:	ldr	r0, [r4, #20]
   1fe88:	cmp	r1, #0
   1fe8c:	beq	1ff4c <flatcc_json_printer_struct_field@@Base+0x170>
   1fe90:	add	r1, r0, #1
   1fe94:	str	r1, [r4, #20]
   1fe98:	mov	r1, #10
   1fe9c:	strb	r1, [r0]
   1fea0:	ldr	r0, [r4, #32]
   1fea4:	sub	r2, r0, #1
   1fea8:	str	r2, [r4, #32]
   1feac:	ldrb	r3, [r4, #25]
   1feb0:	ldr	r0, [r4, #20]
   1feb4:	ldr	r1, [r4, #16]
   1feb8:	mla	r7, r2, r3, r0
   1febc:	mul	r5, r2, r3
   1fec0:	cmp	r7, r1
   1fec4:	bls	1ff34 <flatcc_json_printer_struct_field@@Base+0x158>
   1fec8:	cmp	r0, r1
   1fecc:	bcc	1fee8 <flatcc_json_printer_struct_field@@Base+0x10c>
   1fed0:	ldr	r2, [r4, #44]	; 0x2c
   1fed4:	mov	r0, r4
   1fed8:	mov	r1, #0
   1fedc:	blx	r2
   1fee0:	ldr	r1, [r4, #16]
   1fee4:	ldr	r0, [r4, #20]
   1fee8:	sub	r6, r1, r0
   1feec:	cmp	r6, r5
   1fef0:	bcs	1ff34 <flatcc_json_printer_struct_field@@Base+0x158>
   1fef4:	mov	r1, #32
   1fef8:	mov	r2, r6
   1fefc:	bl	12940 <memset@plt>
   1ff00:	ldr	r0, [r4, #20]
   1ff04:	ldr	r2, [r4, #44]	; 0x2c
   1ff08:	mov	r1, #0
   1ff0c:	add	r0, r0, r6
   1ff10:	str	r0, [r4, #20]
   1ff14:	mov	r0, r4
   1ff18:	blx	r2
   1ff1c:	ldr	r1, [r4, #16]
   1ff20:	ldr	r0, [r4, #20]
   1ff24:	sub	r5, r5, r6
   1ff28:	sub	r6, r1, r0
   1ff2c:	cmp	r5, r6
   1ff30:	bhi	1fef4 <flatcc_json_printer_struct_field@@Base+0x118>
   1ff34:	mov	r1, #32
   1ff38:	mov	r2, r5
   1ff3c:	bl	12940 <memset@plt>
   1ff40:	ldr	r0, [r4, #20]
   1ff44:	add	r0, r0, r5
   1ff48:	str	r0, [r4, #20]
   1ff4c:	add	r1, r0, #1
   1ff50:	str	r1, [r4, #20]
   1ff54:	mov	r1, #125	; 0x7d
   1ff58:	strb	r1, [r0]
   1ff5c:	pop	{r4, r5, r6, r7, fp, pc}

0001ff60 <flatcc_json_printer_struct_as_root@@Base>:
   1ff60:	push	{r4, r5, r6, sl, fp, lr}
   1ff64:	add	fp, sp, #16
   1ff68:	sub	sp, sp, #8
   1ff6c:	cmp	r1, #0
   1ff70:	mov	r4, r0
   1ff74:	mov	r0, #0
   1ff78:	cmpne	r2, #7
   1ff7c:	str	r0, [sp, #4]
   1ff80:	bls	20134 <flatcc_json_printer_struct_as_root@@Base+0x1d4>
   1ff84:	mov	r5, r1
   1ff88:	cmp	r3, #0
   1ff8c:	beq	1ffb4 <flatcc_json_printer_struct_as_root@@Base+0x54>
   1ff90:	add	r0, sp, #4
   1ff94:	mov	r1, r3
   1ff98:	mov	r2, #4
   1ff9c:	bl	1294c <strncpy@plt>
   1ffa0:	ldr	r0, [sp, #4]
   1ffa4:	cmp	r0, #0
   1ffa8:	ldrne	r1, [r5, #4]
   1ffac:	cmpne	r1, r0
   1ffb0:	bne	20164 <flatcc_json_printer_struct_as_root@@Base+0x204>
   1ffb4:	ldr	r1, [r4, #32]
   1ffb8:	ldr	r0, [r4, #20]
   1ffbc:	ldr	r2, [fp, #8]
   1ffc0:	add	r1, r1, #1
   1ffc4:	str	r1, [r4, #32]
   1ffc8:	add	r1, r0, #1
   1ffcc:	str	r1, [r4, #20]
   1ffd0:	mov	r1, #123	; 0x7b
   1ffd4:	strb	r1, [r0]
   1ffd8:	ldr	r0, [r5]
   1ffdc:	add	r1, r5, r0
   1ffe0:	mov	r0, r4
   1ffe4:	blx	r2
   1ffe8:	ldrb	r1, [r4, #25]
   1ffec:	ldr	r0, [r4, #20]
   1fff0:	cmp	r1, #0
   1fff4:	beq	200b4 <flatcc_json_printer_struct_as_root@@Base+0x154>
   1fff8:	add	r1, r0, #1
   1fffc:	str	r1, [r4, #20]
   20000:	mov	r1, #10
   20004:	strb	r1, [r0]
   20008:	ldr	r0, [r4, #32]
   2000c:	sub	r2, r0, #1
   20010:	str	r2, [r4, #32]
   20014:	ldrb	r3, [r4, #25]
   20018:	ldr	r0, [r4, #20]
   2001c:	ldr	r1, [r4, #16]
   20020:	mla	r6, r2, r3, r0
   20024:	mul	r5, r2, r3
   20028:	cmp	r6, r1
   2002c:	bls	2009c <flatcc_json_printer_struct_as_root@@Base+0x13c>
   20030:	cmp	r0, r1
   20034:	bcc	20050 <flatcc_json_printer_struct_as_root@@Base+0xf0>
   20038:	ldr	r2, [r4, #44]	; 0x2c
   2003c:	mov	r0, r4
   20040:	mov	r1, #0
   20044:	blx	r2
   20048:	ldr	r1, [r4, #16]
   2004c:	ldr	r0, [r4, #20]
   20050:	sub	r6, r1, r0
   20054:	cmp	r6, r5
   20058:	bcs	2009c <flatcc_json_printer_struct_as_root@@Base+0x13c>
   2005c:	mov	r1, #32
   20060:	mov	r2, r6
   20064:	bl	12940 <memset@plt>
   20068:	ldr	r0, [r4, #20]
   2006c:	ldr	r2, [r4, #44]	; 0x2c
   20070:	mov	r1, #0
   20074:	add	r0, r0, r6
   20078:	str	r0, [r4, #20]
   2007c:	mov	r0, r4
   20080:	blx	r2
   20084:	ldr	r1, [r4, #16]
   20088:	ldr	r0, [r4, #20]
   2008c:	sub	r5, r5, r6
   20090:	sub	r6, r1, r0
   20094:	cmp	r5, r6
   20098:	bhi	2005c <flatcc_json_printer_struct_as_root@@Base+0xfc>
   2009c:	mov	r1, #32
   200a0:	mov	r2, r5
   200a4:	bl	12940 <memset@plt>
   200a8:	ldr	r0, [r4, #20]
   200ac:	add	r0, r0, r5
   200b0:	str	r0, [r4, #20]
   200b4:	add	r1, r0, #1
   200b8:	str	r1, [r4, #20]
   200bc:	mov	r1, #125	; 0x7d
   200c0:	strb	r1, [r0]
   200c4:	ldrb	r0, [r4, #25]
   200c8:	cmp	r0, #0
   200cc:	beq	200f0 <flatcc_json_printer_struct_as_root@@Base+0x190>
   200d0:	ldr	r0, [r4, #32]
   200d4:	cmp	r0, #0
   200d8:	bne	200f0 <flatcc_json_printer_struct_as_root@@Base+0x190>
   200dc:	ldr	r0, [r4, #20]
   200e0:	add	r1, r0, #1
   200e4:	str	r1, [r4, #20]
   200e8:	mov	r1, #10
   200ec:	strb	r1, [r0]
   200f0:	ldr	r2, [r4, #44]	; 0x2c
   200f4:	mov	r0, r4
   200f8:	mov	r1, #1
   200fc:	blx	r2
   20100:	ldr	r1, [r4, #36]	; 0x24
   20104:	mvn	r0, #0
   20108:	cmp	r1, #0
   2010c:	beq	20118 <flatcc_json_printer_struct_as_root@@Base+0x1b8>
   20110:	sub	sp, fp, #16
   20114:	pop	{r4, r5, r6, sl, fp, pc}
   20118:	ldr	r1, [r4, #12]
   2011c:	ldr	r2, [r4, #20]
   20120:	ldr	r0, [r4]
   20124:	add	r1, r2, r1
   20128:	sub	r0, r1, r0
   2012c:	sub	sp, fp, #16
   20130:	pop	{r4, r5, r6, sl, fp, pc}
   20134:	ldr	r0, [r4, #36]	; 0x24
   20138:	movw	r2, #1019	; 0x3fb
   2013c:	cmp	r0, #0
   20140:	moveq	r0, #1
   20144:	streq	r0, [r4, #36]	; 0x24
   20148:	ldr	r0, [pc, #68]	; 20194 <flatcc_json_printer_struct_as_root@@Base+0x234>
   2014c:	ldr	r1, [pc, #68]	; 20198 <flatcc_json_printer_struct_as_root@@Base+0x238>
   20150:	ldr	r3, [pc, #68]	; 2019c <flatcc_json_printer_struct_as_root@@Base+0x23c>
   20154:	add	r0, pc, r0
   20158:	add	r1, pc, r1
   2015c:	add	r3, pc, r3
   20160:	bl	12994 <__assert_fail@plt>
   20164:	ldr	r0, [r4, #36]	; 0x24
   20168:	movw	r2, #1028	; 0x404
   2016c:	cmp	r0, #0
   20170:	moveq	r0, #1
   20174:	streq	r0, [r4, #36]	; 0x24
   20178:	ldr	r0, [pc, #32]	; 201a0 <flatcc_json_printer_struct_as_root@@Base+0x240>
   2017c:	ldr	r1, [pc, #32]	; 201a4 <flatcc_json_printer_struct_as_root@@Base+0x244>
   20180:	ldr	r3, [pc, #32]	; 201a8 <flatcc_json_printer_struct_as_root@@Base+0x248>
   20184:	add	r0, pc, r0
   20188:	add	r1, pc, r1
   2018c:	add	r3, pc, r3
   20190:	bl	12994 <__assert_fail@plt>
   20194:	muleq	r0, r7, fp
   20198:	andeq	r1, r0, lr, lsr r6
   2019c:	andeq	r1, r0, lr, lsr #23
   201a0:	ldrdeq	r1, [r0], -r5
   201a4:	andeq	r1, r0, lr, lsl #12
   201a8:	andeq	r1, r0, lr, ror fp

000201ac <flatcc_json_printer_table_as_root@@Base>:
   201ac:	push	{r4, r5, r6, sl, fp, lr}
   201b0:	add	fp, sp, #16
   201b4:	sub	sp, sp, #24
   201b8:	cmp	r1, #0
   201bc:	mov	r4, r0
   201c0:	mov	r0, #0
   201c4:	cmpne	r2, #7
   201c8:	str	r0, [sp, #4]
   201cc:	bls	203ac <flatcc_json_printer_table_as_root@@Base+0x200>
   201d0:	mov	r5, r1
   201d4:	cmp	r3, #0
   201d8:	beq	20200 <flatcc_json_printer_table_as_root@@Base+0x54>
   201dc:	add	r0, sp, #4
   201e0:	mov	r1, r3
   201e4:	mov	r2, #4
   201e8:	bl	1294c <strncpy@plt>
   201ec:	ldr	r0, [sp, #4]
   201f0:	cmp	r0, #0
   201f4:	ldrne	r1, [r5, #4]
   201f8:	cmpne	r1, r0
   201fc:	bne	203dc <flatcc_json_printer_table_as_root@@Base+0x230>
   20200:	ldr	r3, [r4, #32]
   20204:	ldr	r1, [r4, #20]
   20208:	ldr	r0, [r5]
   2020c:	ldr	r2, [fp, #8]
   20210:	add	r3, r3, #1
   20214:	str	r3, [r4, #32]
   20218:	add	r3, r1, #1
   2021c:	str	r3, [r4, #20]
   20220:	mov	r3, #123	; 0x7b
   20224:	strb	r3, [r1]
   20228:	mov	r1, #99	; 0x63
   2022c:	str	r1, [sp, #16]
   20230:	mov	r1, #0
   20234:	str	r1, [sp, #20]
   20238:	add	r1, r5, r0
   2023c:	str	r1, [sp, #4]
   20240:	ldr	r0, [r5, r0]
   20244:	sub	r3, r1, r0
   20248:	str	r3, [sp, #8]
   2024c:	ldrh	r0, [r1, -r0]
   20250:	add	r1, sp, #4
   20254:	str	r0, [sp, #12]
   20258:	mov	r0, r4
   2025c:	blx	r2
   20260:	ldrb	r1, [r4, #25]
   20264:	ldr	r0, [r4, #20]
   20268:	cmp	r1, #0
   2026c:	beq	2032c <flatcc_json_printer_table_as_root@@Base+0x180>
   20270:	add	r1, r0, #1
   20274:	str	r1, [r4, #20]
   20278:	mov	r1, #10
   2027c:	strb	r1, [r0]
   20280:	ldr	r0, [r4, #32]
   20284:	sub	r2, r0, #1
   20288:	str	r2, [r4, #32]
   2028c:	ldrb	r3, [r4, #25]
   20290:	ldr	r0, [r4, #20]
   20294:	ldr	r1, [r4, #16]
   20298:	mla	r6, r2, r3, r0
   2029c:	mul	r5, r2, r3
   202a0:	cmp	r6, r1
   202a4:	bls	20314 <flatcc_json_printer_table_as_root@@Base+0x168>
   202a8:	cmp	r0, r1
   202ac:	bcc	202c8 <flatcc_json_printer_table_as_root@@Base+0x11c>
   202b0:	ldr	r2, [r4, #44]	; 0x2c
   202b4:	mov	r0, r4
   202b8:	mov	r1, #0
   202bc:	blx	r2
   202c0:	ldr	r1, [r4, #16]
   202c4:	ldr	r0, [r4, #20]
   202c8:	sub	r6, r1, r0
   202cc:	cmp	r6, r5
   202d0:	bcs	20314 <flatcc_json_printer_table_as_root@@Base+0x168>
   202d4:	mov	r1, #32
   202d8:	mov	r2, r6
   202dc:	bl	12940 <memset@plt>
   202e0:	ldr	r0, [r4, #20]
   202e4:	ldr	r2, [r4, #44]	; 0x2c
   202e8:	mov	r1, #0
   202ec:	add	r0, r0, r6
   202f0:	str	r0, [r4, #20]
   202f4:	mov	r0, r4
   202f8:	blx	r2
   202fc:	ldr	r1, [r4, #16]
   20300:	ldr	r0, [r4, #20]
   20304:	sub	r5, r5, r6
   20308:	sub	r6, r1, r0
   2030c:	cmp	r5, r6
   20310:	bhi	202d4 <flatcc_json_printer_table_as_root@@Base+0x128>
   20314:	mov	r1, #32
   20318:	mov	r2, r5
   2031c:	bl	12940 <memset@plt>
   20320:	ldr	r0, [r4, #20]
   20324:	add	r0, r0, r5
   20328:	str	r0, [r4, #20]
   2032c:	add	r1, r0, #1
   20330:	str	r1, [r4, #20]
   20334:	mov	r1, #125	; 0x7d
   20338:	strb	r1, [r0]
   2033c:	ldrb	r0, [r4, #25]
   20340:	cmp	r0, #0
   20344:	beq	20368 <flatcc_json_printer_table_as_root@@Base+0x1bc>
   20348:	ldr	r0, [r4, #32]
   2034c:	cmp	r0, #0
   20350:	bne	20368 <flatcc_json_printer_table_as_root@@Base+0x1bc>
   20354:	ldr	r0, [r4, #20]
   20358:	add	r1, r0, #1
   2035c:	str	r1, [r4, #20]
   20360:	mov	r1, #10
   20364:	strb	r1, [r0]
   20368:	ldr	r2, [r4, #44]	; 0x2c
   2036c:	mov	r0, r4
   20370:	mov	r1, #1
   20374:	blx	r2
   20378:	ldr	r1, [r4, #36]	; 0x24
   2037c:	mvn	r0, #0
   20380:	cmp	r1, #0
   20384:	beq	20390 <flatcc_json_printer_table_as_root@@Base+0x1e4>
   20388:	sub	sp, fp, #16
   2038c:	pop	{r4, r5, r6, sl, fp, pc}
   20390:	ldr	r1, [r4, #12]
   20394:	ldr	r2, [r4, #20]
   20398:	ldr	r0, [r4]
   2039c:	add	r1, r2, r1
   203a0:	sub	r0, r1, r0
   203a4:	sub	sp, fp, #16
   203a8:	pop	{r4, r5, r6, sl, fp, pc}
   203ac:	ldr	r0, [r4, #36]	; 0x24
   203b0:	movw	r2, #1019	; 0x3fb
   203b4:	cmp	r0, #0
   203b8:	moveq	r0, #1
   203bc:	streq	r0, [r4, #36]	; 0x24
   203c0:	ldr	r0, [pc, #68]	; 2040c <flatcc_json_printer_table_as_root@@Base+0x260>
   203c4:	ldr	r1, [pc, #68]	; 20410 <flatcc_json_printer_table_as_root@@Base+0x264>
   203c8:	ldr	r3, [pc, #68]	; 20414 <flatcc_json_printer_table_as_root@@Base+0x268>
   203cc:	add	r0, pc, r0
   203d0:	add	r1, pc, r1
   203d4:	add	r3, pc, r3
   203d8:	bl	12994 <__assert_fail@plt>
   203dc:	ldr	r0, [r4, #36]	; 0x24
   203e0:	movw	r2, #1028	; 0x404
   203e4:	cmp	r0, #0
   203e8:	moveq	r0, #1
   203ec:	streq	r0, [r4, #36]	; 0x24
   203f0:	ldr	r0, [pc, #32]	; 20418 <flatcc_json_printer_table_as_root@@Base+0x26c>
   203f4:	ldr	r1, [pc, #32]	; 2041c <flatcc_json_printer_table_as_root@@Base+0x270>
   203f8:	ldr	r3, [pc, #32]	; 20420 <flatcc_json_printer_table_as_root@@Base+0x274>
   203fc:	add	r0, pc, r0
   20400:	add	r1, pc, r1
   20404:	add	r3, pc, r3
   20408:	bl	12994 <__assert_fail@plt>
   2040c:	andeq	r1, r0, pc, lsl r9
   20410:	andeq	r1, r0, r6, asr #7
   20414:	andeq	r1, r0, r6, lsr r9
   20418:	andeq	r1, r0, sp, asr r9
   2041c:	muleq	r0, r6, r3
   20420:	andeq	r1, r0, r6, lsl #18

00020424 <flatcc_json_printer_struct_as_nested_root@@Base>:
   20424:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   20428:	add	fp, sp, #24
   2042c:	sub	sp, sp, #8
   20430:	mov	r6, r1
   20434:	ldr	r1, [r1, #8]
   20438:	mov	r4, r0
   2043c:	mov	r0, #4
   20440:	add	r0, r0, r2, lsl #1
   20444:	cmp	r0, r1
   20448:	bge	20468 <flatcc_json_printer_struct_as_nested_root@@Base+0x44>
   2044c:	ldr	r1, [r6, #4]
   20450:	add	r0, r1, r0
   20454:	ldrh	r0, [r0]
   20458:	cmp	r0, #0
   2045c:	ldrne	r1, [r6]
   20460:	addsne	r0, r1, r0
   20464:	bne	20470 <flatcc_json_printer_struct_as_nested_root@@Base+0x4c>
   20468:	sub	sp, fp, #24
   2046c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   20470:	ldr	r7, [r0]
   20474:	mov	r1, #0
   20478:	ldr	r0, [r7, r0]!
   2047c:	str	r1, [sp, #4]
   20480:	cmp	r7, #0
   20484:	cmpne	r0, #7
   20488:	bls	20608 <flatcc_json_printer_struct_as_nested_root@@Base+0x1e4>
   2048c:	ldr	r1, [fp, #12]
   20490:	mov	r5, r3
   20494:	cmp	r1, #0
   20498:	beq	204bc <flatcc_json_printer_struct_as_nested_root@@Base+0x98>
   2049c:	add	r0, sp, #4
   204a0:	mov	r2, #4
   204a4:	bl	1294c <strncpy@plt>
   204a8:	ldr	r0, [sp, #4]
   204ac:	cmp	r0, #0
   204b0:	ldrne	r1, [r7, #4]
   204b4:	cmpne	r1, r0
   204b8:	bne	20638 <flatcc_json_printer_struct_as_nested_root@@Base+0x214>
   204bc:	ldr	r0, [r6, #16]
   204c0:	ldr	r2, [fp, #8]
   204c4:	ldr	r8, [fp, #16]
   204c8:	add	r1, r0, #1
   204cc:	cmp	r0, #0
   204d0:	str	r1, [r6, #16]
   204d4:	ldrne	r0, [r4, #20]
   204d8:	addne	r1, r0, #1
   204dc:	strne	r1, [r4, #20]
   204e0:	movne	r1, #44	; 0x2c
   204e4:	strbne	r1, [r0]
   204e8:	mov	r0, r4
   204ec:	mov	r1, r5
   204f0:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   204f4:	ldr	r1, [r4, #32]
   204f8:	ldr	r0, [r4, #20]
   204fc:	add	r1, r1, #1
   20500:	str	r1, [r4, #32]
   20504:	add	r1, r0, #1
   20508:	str	r1, [r4, #20]
   2050c:	mov	r1, #123	; 0x7b
   20510:	strb	r1, [r0]
   20514:	ldr	r0, [r7]
   20518:	add	r1, r7, r0
   2051c:	mov	r0, r4
   20520:	blx	r8
   20524:	ldrb	r1, [r4, #25]
   20528:	ldr	r0, [r4, #20]
   2052c:	cmp	r1, #0
   20530:	beq	205f0 <flatcc_json_printer_struct_as_nested_root@@Base+0x1cc>
   20534:	add	r1, r0, #1
   20538:	str	r1, [r4, #20]
   2053c:	mov	r1, #10
   20540:	strb	r1, [r0]
   20544:	ldr	r0, [r4, #32]
   20548:	sub	r2, r0, #1
   2054c:	str	r2, [r4, #32]
   20550:	ldrb	r3, [r4, #25]
   20554:	ldr	r0, [r4, #20]
   20558:	ldr	r1, [r4, #16]
   2055c:	mla	r7, r2, r3, r0
   20560:	mul	r5, r2, r3
   20564:	cmp	r7, r1
   20568:	bls	205d8 <flatcc_json_printer_struct_as_nested_root@@Base+0x1b4>
   2056c:	cmp	r0, r1
   20570:	bcc	2058c <flatcc_json_printer_struct_as_nested_root@@Base+0x168>
   20574:	ldr	r2, [r4, #44]	; 0x2c
   20578:	mov	r0, r4
   2057c:	mov	r1, #0
   20580:	blx	r2
   20584:	ldr	r1, [r4, #16]
   20588:	ldr	r0, [r4, #20]
   2058c:	sub	r6, r1, r0
   20590:	cmp	r6, r5
   20594:	bcs	205d8 <flatcc_json_printer_struct_as_nested_root@@Base+0x1b4>
   20598:	mov	r1, #32
   2059c:	mov	r2, r6
   205a0:	bl	12940 <memset@plt>
   205a4:	ldr	r0, [r4, #20]
   205a8:	ldr	r2, [r4, #44]	; 0x2c
   205ac:	mov	r1, #0
   205b0:	add	r0, r0, r6
   205b4:	str	r0, [r4, #20]
   205b8:	mov	r0, r4
   205bc:	blx	r2
   205c0:	ldr	r1, [r4, #16]
   205c4:	ldr	r0, [r4, #20]
   205c8:	sub	r5, r5, r6
   205cc:	sub	r6, r1, r0
   205d0:	cmp	r5, r6
   205d4:	bhi	20598 <flatcc_json_printer_struct_as_nested_root@@Base+0x174>
   205d8:	mov	r1, #32
   205dc:	mov	r2, r5
   205e0:	bl	12940 <memset@plt>
   205e4:	ldr	r0, [r4, #20]
   205e8:	add	r0, r0, r5
   205ec:	str	r0, [r4, #20]
   205f0:	add	r1, r0, #1
   205f4:	str	r1, [r4, #20]
   205f8:	mov	r1, #125	; 0x7d
   205fc:	strb	r1, [r0]
   20600:	sub	sp, fp, #24
   20604:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   20608:	ldr	r0, [r4, #36]	; 0x24
   2060c:	movw	r2, #1019	; 0x3fb
   20610:	cmp	r0, #0
   20614:	moveq	r0, #1
   20618:	streq	r0, [r4, #36]	; 0x24
   2061c:	ldr	r0, [pc, #68]	; 20668 <flatcc_json_printer_struct_as_nested_root@@Base+0x244>
   20620:	ldr	r1, [pc, #68]	; 2066c <flatcc_json_printer_struct_as_nested_root@@Base+0x248>
   20624:	ldr	r3, [pc, #68]	; 20670 <flatcc_json_printer_struct_as_nested_root@@Base+0x24c>
   20628:	add	r0, pc, r0
   2062c:	add	r1, pc, r1
   20630:	add	r3, pc, r3
   20634:	bl	12994 <__assert_fail@plt>
   20638:	ldr	r0, [r4, #36]	; 0x24
   2063c:	movw	r2, #1028	; 0x404
   20640:	cmp	r0, #0
   20644:	moveq	r0, #1
   20648:	streq	r0, [r4, #36]	; 0x24
   2064c:	ldr	r0, [pc, #32]	; 20674 <flatcc_json_printer_struct_as_nested_root@@Base+0x250>
   20650:	ldr	r1, [pc, #32]	; 20678 <flatcc_json_printer_struct_as_nested_root@@Base+0x254>
   20654:	ldr	r3, [pc, #32]	; 2067c <flatcc_json_printer_struct_as_nested_root@@Base+0x258>
   20658:	add	r0, pc, r0
   2065c:	add	r1, pc, r1
   20660:	add	r3, pc, r3
   20664:	bl	12994 <__assert_fail@plt>
   20668:	andeq	r1, r0, r3, asr #13
   2066c:	andeq	r1, r0, sl, ror #2
   20670:	ldrdeq	r1, [r0], -sl
   20674:	andeq	r1, r0, r1, lsl #14
   20678:	andeq	r1, r0, sl, lsr r1
   2067c:	andeq	r1, r0, sl, lsr #13

00020680 <flatcc_json_printer_table_as_nested_root@@Base>:
   20680:	push	{r4, r5, r6, r7, fp, lr}
   20684:	add	fp, sp, #16
   20688:	sub	sp, sp, #24
   2068c:	mov	r5, r1
   20690:	ldr	r1, [r1, #8]
   20694:	mov	r4, r0
   20698:	mov	r0, #4
   2069c:	add	r0, r0, r2, lsl #1
   206a0:	cmp	r0, r1
   206a4:	bge	206c4 <flatcc_json_printer_table_as_nested_root@@Base+0x44>
   206a8:	ldr	r1, [r5, #4]
   206ac:	add	r0, r1, r0
   206b0:	ldrh	r0, [r0]
   206b4:	cmp	r0, #0
   206b8:	ldrne	r1, [r5]
   206bc:	addsne	r0, r1, r0
   206c0:	bne	206cc <flatcc_json_printer_table_as_nested_root@@Base+0x4c>
   206c4:	sub	sp, fp, #16
   206c8:	pop	{r4, r5, r6, r7, fp, pc}
   206cc:	ldr	r7, [r0]
   206d0:	mov	r1, #0
   206d4:	ldr	r0, [r7, r0]!
   206d8:	str	r1, [sp, #4]
   206dc:	cmp	r0, #7
   206e0:	bls	208b4 <flatcc_json_printer_table_as_nested_root@@Base+0x234>
   206e4:	ldr	r1, [fp, #12]
   206e8:	mov	r6, r3
   206ec:	cmp	r1, #0
   206f0:	beq	20714 <flatcc_json_printer_table_as_nested_root@@Base+0x94>
   206f4:	add	r0, sp, #4
   206f8:	mov	r2, #4
   206fc:	bl	1294c <strncpy@plt>
   20700:	ldr	r0, [sp, #4]
   20704:	cmp	r0, #0
   20708:	ldrne	r1, [r7, #8]
   2070c:	cmpne	r1, r0
   20710:	bne	208e4 <flatcc_json_printer_table_as_nested_root@@Base+0x264>
   20714:	ldr	r0, [r5, #16]
   20718:	ldr	r2, [fp, #8]
   2071c:	add	r1, r0, #1
   20720:	cmp	r0, #0
   20724:	str	r1, [r5, #16]
   20728:	ldrne	r0, [r4, #20]
   2072c:	addne	r1, r0, #1
   20730:	strne	r1, [r4, #20]
   20734:	movne	r1, #44	; 0x2c
   20738:	strbne	r1, [r0]
   2073c:	mov	r0, r4
   20740:	mov	r1, r6
   20744:	bl	164fc <flatcc_json_printer_string_field@@Base+0x8c>
   20748:	ldr	r0, [r5, #12]
   2074c:	subs	r0, r0, #1
   20750:	beq	20898 <flatcc_json_printer_table_as_nested_root@@Base+0x218>
   20754:	add	r1, r7, #4
   20758:	ldr	r7, [r4, #32]
   2075c:	ldr	r2, [fp, #16]
   20760:	ldr	r3, [r1]
   20764:	add	r7, r7, #1
   20768:	add	r1, r1, r3
   2076c:	ldr	r3, [r4, #20]
   20770:	str	r7, [r4, #32]
   20774:	add	r7, r3, #1
   20778:	str	r7, [r4, #20]
   2077c:	mov	r7, #123	; 0x7b
   20780:	strb	r7, [r3]
   20784:	str	r0, [sp, #16]
   20788:	mov	r0, #0
   2078c:	str	r0, [sp, #20]
   20790:	str	r1, [sp, #4]
   20794:	ldr	r0, [r1]
   20798:	sub	r3, r1, r0
   2079c:	str	r3, [sp, #8]
   207a0:	ldrh	r0, [r1, -r0]
   207a4:	add	r1, sp, #4
   207a8:	str	r0, [sp, #12]
   207ac:	mov	r0, r4
   207b0:	blx	r2
   207b4:	ldrb	r1, [r4, #25]
   207b8:	ldr	r0, [r4, #20]
   207bc:	cmp	r1, #0
   207c0:	beq	20880 <flatcc_json_printer_table_as_nested_root@@Base+0x200>
   207c4:	add	r1, r0, #1
   207c8:	str	r1, [r4, #20]
   207cc:	mov	r1, #10
   207d0:	strb	r1, [r0]
   207d4:	ldr	r0, [r4, #32]
   207d8:	sub	r2, r0, #1
   207dc:	str	r2, [r4, #32]
   207e0:	ldrb	r3, [r4, #25]
   207e4:	ldr	r0, [r4, #20]
   207e8:	ldr	r1, [r4, #16]
   207ec:	mla	r7, r2, r3, r0
   207f0:	mul	r5, r2, r3
   207f4:	cmp	r7, r1
   207f8:	bls	20868 <flatcc_json_printer_table_as_nested_root@@Base+0x1e8>
   207fc:	cmp	r0, r1
   20800:	bcc	2081c <flatcc_json_printer_table_as_nested_root@@Base+0x19c>
   20804:	ldr	r2, [r4, #44]	; 0x2c
   20808:	mov	r0, r4
   2080c:	mov	r1, #0
   20810:	blx	r2
   20814:	ldr	r1, [r4, #16]
   20818:	ldr	r0, [r4, #20]
   2081c:	sub	r6, r1, r0
   20820:	cmp	r6, r5
   20824:	bcs	20868 <flatcc_json_printer_table_as_nested_root@@Base+0x1e8>
   20828:	mov	r1, #32
   2082c:	mov	r2, r6
   20830:	bl	12940 <memset@plt>
   20834:	ldr	r0, [r4, #20]
   20838:	ldr	r2, [r4, #44]	; 0x2c
   2083c:	mov	r1, #0
   20840:	add	r0, r0, r6
   20844:	str	r0, [r4, #20]
   20848:	mov	r0, r4
   2084c:	blx	r2
   20850:	ldr	r1, [r4, #16]
   20854:	ldr	r0, [r4, #20]
   20858:	sub	r5, r5, r6
   2085c:	sub	r6, r1, r0
   20860:	cmp	r5, r6
   20864:	bhi	20828 <flatcc_json_printer_table_as_nested_root@@Base+0x1a8>
   20868:	mov	r1, #32
   2086c:	mov	r2, r5
   20870:	bl	12940 <memset@plt>
   20874:	ldr	r0, [r4, #20]
   20878:	add	r0, r0, r5
   2087c:	str	r0, [r4, #20]
   20880:	add	r1, r0, #1
   20884:	str	r1, [r4, #20]
   20888:	mov	r1, #125	; 0x7d
   2088c:	strb	r1, [r0]
   20890:	sub	sp, fp, #16
   20894:	pop	{r4, r5, r6, r7, fp, pc}
   20898:	ldr	r0, [r4, #36]	; 0x24
   2089c:	cmp	r0, #0
   208a0:	bne	206c4 <flatcc_json_printer_table_as_nested_root@@Base+0x44>
   208a4:	mov	r0, #2
   208a8:	str	r0, [r4, #36]	; 0x24
   208ac:	sub	sp, fp, #16
   208b0:	pop	{r4, r5, r6, r7, fp, pc}
   208b4:	ldr	r0, [r4, #36]	; 0x24
   208b8:	movw	r2, #1019	; 0x3fb
   208bc:	cmp	r0, #0
   208c0:	moveq	r0, #1
   208c4:	streq	r0, [r4, #36]	; 0x24
   208c8:	ldr	r0, [pc, #68]	; 20914 <flatcc_json_printer_table_as_nested_root@@Base+0x294>
   208cc:	ldr	r1, [pc, #68]	; 20918 <flatcc_json_printer_table_as_nested_root@@Base+0x298>
   208d0:	ldr	r3, [pc, #68]	; 2091c <flatcc_json_printer_table_as_nested_root@@Base+0x29c>
   208d4:	add	r0, pc, r0
   208d8:	add	r1, pc, r1
   208dc:	add	r3, pc, r3
   208e0:	bl	12994 <__assert_fail@plt>
   208e4:	ldr	r0, [r4, #36]	; 0x24
   208e8:	movw	r2, #1028	; 0x404
   208ec:	cmp	r0, #0
   208f0:	moveq	r0, #1
   208f4:	streq	r0, [r4, #36]	; 0x24
   208f8:	ldr	r0, [pc, #32]	; 20920 <flatcc_json_printer_table_as_nested_root@@Base+0x2a0>
   208fc:	ldr	r1, [pc, #32]	; 20924 <flatcc_json_printer_table_as_nested_root@@Base+0x2a4>
   20900:	ldr	r3, [pc, #32]	; 20928 <flatcc_json_printer_table_as_nested_root@@Base+0x2a8>
   20904:	add	r0, pc, r0
   20908:	add	r1, pc, r1
   2090c:	add	r3, pc, r3
   20910:	bl	12994 <__assert_fail@plt>
   20914:	andeq	r1, r0, r7, lsl r4
   20918:			; <UNDEFINED> instruction: 0x00000ebe
   2091c:	andeq	r1, r0, lr, lsr #8
   20920:	andeq	r1, r0, r5, asr r4
   20924:	andeq	r0, r0, lr, lsl #29
   20928:	strdeq	r1, [r0], -lr

0002092c <flatcc_json_printer_init@@Base>:
   2092c:	push	{r4, r5, r6, sl, fp, lr}
   20930:	add	fp, sp, #16
   20934:	mov	r5, r0
   20938:	mov	r4, #0
   2093c:	vmov.i32	q8, #0	; 0x00000000
   20940:	cmp	r1, #0
   20944:	movw	r6, #16448	; 0x4040
   20948:	str	r4, [r0, #32]
   2094c:	mov	r0, #36	; 0x24
   20950:	mov	r2, r5
   20954:	vst1.32	{d16-d17}, [r2], r0
   20958:	add	r0, r5, #16
   2095c:	str	r4, [r2]
   20960:	vst1.32	{d16-d17}, [r0]
   20964:	ldr	r0, [pc, #92]	; 209c8 <flatcc_json_printer_init@@Base+0x9c>
   20968:	ldr	r0, [pc, r0]
   2096c:	ldr	r0, [r0]
   20970:	ldr	r2, [pc, #84]	; 209cc <flatcc_json_printer_init@@Base+0xa0>
   20974:	movne	r0, r1
   20978:	add	r2, pc, r2
   2097c:	str	r0, [r5, #40]	; 0x28
   20980:	movw	r0, #16448	; 0x4040
   20984:	str	r2, [r5, #44]	; 0x2c
   20988:	bl	12904 <malloc@plt>
   2098c:	cmp	r0, #0
   20990:	str	r0, [r5]
   20994:	mvneq	r4, #0
   20998:	moveq	r0, r4
   2099c:	popeq	{r4, r5, r6, sl, fp, pc}
   209a0:	mov	r1, #1
   209a4:	strb	r1, [r5, #24]
   209a8:	mov	r1, #16384	; 0x4000
   209ac:	str	r6, [r5, #4]
   209b0:	str	r1, [r5, #8]
   209b4:	add	r1, r0, #16384	; 0x4000
   209b8:	str	r1, [r5, #16]
   209bc:	str	r0, [r5, #20]
   209c0:	mov	r0, r4
   209c4:	pop	{r4, r5, r6, sl, fp, pc}
   209c8:	andeq	r2, r1, r0, lsl r7
   209cc:	andeq	r0, r0, r0, asr r0
   209d0:	push	{r4, r5, r6, sl, fp, lr}
   209d4:	add	fp, sp, #16
   209d8:	mov	r4, r0
   209dc:	cmp	r1, #0
   209e0:	beq	209ec <flatcc_json_printer_init@@Base+0xc0>
   209e4:	ldr	r5, [r4, #20]
   209e8:	b	209fc <flatcc_json_printer_init@@Base+0xd0>
   209ec:	ldr	r6, [r4, #16]
   209f0:	ldr	r5, [r4, #20]
   209f4:	cmp	r5, r6
   209f8:	bcs	20a28 <flatcc_json_printer_init@@Base+0xfc>
   209fc:	ldr	r0, [r4]
   20a00:	ldr	r3, [r4, #40]	; 0x28
   20a04:	mov	r2, #1
   20a08:	sub	r5, r5, r0
   20a0c:	mov	r1, r5
   20a10:	bl	128ec <fwrite@plt>
   20a14:	ldr	r1, [r4, #12]
   20a18:	ldr	r0, [r4]
   20a1c:	str	r0, [r4, #20]
   20a20:	add	r1, r1, r5
   20a24:	b	20a6c <flatcc_json_printer_init@@Base+0x140>
   20a28:	ldr	r0, [r4]
   20a2c:	ldr	r1, [r4, #8]
   20a30:	ldr	r3, [r4, #40]	; 0x28
   20a34:	mov	r2, #1
   20a38:	bl	128ec <fwrite@plt>
   20a3c:	ldr	r0, [r4]
   20a40:	ldr	r1, [r4, #8]
   20a44:	sub	r5, r5, r6
   20a48:	mov	r2, r5
   20a4c:	add	r1, r0, r1
   20a50:	bl	128b0 <memcpy@plt>
   20a54:	ldr	r0, [r4]
   20a58:	ldr	r1, [r4, #8]
   20a5c:	ldr	r2, [r4, #12]
   20a60:	add	r0, r0, r5
   20a64:	add	r1, r2, r1
   20a68:	str	r0, [r4, #20]
   20a6c:	str	r1, [r4, #12]
   20a70:	mov	r1, #0
   20a74:	strb	r1, [r0]
   20a78:	pop	{r4, r5, r6, sl, fp, pc}

00020a7c <flatcc_json_printer_init_buffer@@Base>:
   20a7c:	cmp	r2, #63	; 0x3f
   20a80:	bls	20ac0 <flatcc_json_printer_init_buffer@@Base+0x44>
   20a84:	vmov.i32	q8, #0	; 0x00000000
   20a88:	add	r3, r0, #12
   20a8c:	vst1.32	{d16-d17}, [r3]
   20a90:	ldr	r3, [pc, #80]	; 20ae8 <flatcc_json_printer_init_buffer@@Base+0x6c>
   20a94:	add	r3, pc, r3
   20a98:	str	r3, [r0, #44]	; 0x2c
   20a9c:	add	r3, r0, #28
   20aa0:	vst1.32	{d16-d17}, [r3]
   20aa4:	sub	r3, r2, #64	; 0x40
   20aa8:	stm	r0, {r1, r2, r3}
   20aac:	add	r2, r1, r3
   20ab0:	str	r2, [r0, #16]
   20ab4:	str	r1, [r0, #20]
   20ab8:	mov	r0, #0
   20abc:	bx	lr
   20ac0:	push	{fp, lr}
   20ac4:	mov	fp, sp
   20ac8:	ldr	r0, [pc, #28]	; 20aec <flatcc_json_printer_init_buffer@@Base+0x70>
   20acc:	ldr	r1, [pc, #28]	; 20af0 <flatcc_json_printer_init_buffer@@Base+0x74>
   20ad0:	ldr	r3, [pc, #28]	; 20af4 <flatcc_json_printer_init_buffer@@Base+0x78>
   20ad4:	movw	r2, #1165	; 0x48d
   20ad8:	add	r0, pc, r0
   20adc:	add	r1, pc, r1
   20ae0:	add	r3, pc, r3
   20ae4:	bl	12994 <__assert_fail@plt>
   20ae8:	andeq	r0, r0, ip, asr r0
   20aec:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   20af0:			; <UNDEFINED> instruction: 0x00000cba
   20af4:	andeq	r0, r0, r1, lsl lr
   20af8:	ldr	r2, [r0, #16]
   20afc:	ldr	r1, [r0, #20]
   20b00:	cmp	r1, r2
   20b04:	bcs	20b10 <flatcc_json_printer_init_buffer@@Base+0x94>
   20b08:	mov	r2, r1
   20b0c:	b	20b38 <flatcc_json_printer_init_buffer@@Base+0xbc>
   20b10:	ldr	r2, [r0, #36]	; 0x24
   20b14:	cmp	r2, #0
   20b18:	moveq	r2, #3
   20b1c:	streq	r2, [r0, #36]	; 0x24
   20b20:	ldr	r2, [r0]
   20b24:	ldr	r3, [r0, #12]
   20b28:	sub	r1, r1, r2
   20b2c:	str	r2, [r0, #20]
   20b30:	add	r1, r1, r3
   20b34:	str	r1, [r0, #12]
   20b38:	mov	r0, #0
   20b3c:	strb	r0, [r2]
   20b40:	bx	lr

00020b44 <flatcc_json_printer_init_dynamic_buffer@@Base>:
   20b44:	push	{r4, r5, fp, lr}
   20b48:	add	fp, sp, #8
   20b4c:	mov	r5, r1
   20b50:	cmp	r1, #0
   20b54:	mov	r4, r0
   20b58:	vmov.i32	q8, #0	; 0x00000000
   20b5c:	add	r0, r0, #28
   20b60:	movweq	r5, #4096	; 0x1000
   20b64:	vst1.32	{d16-d17}, [r0]
   20b68:	add	r0, r4, #12
   20b6c:	cmp	r5, #64	; 0x40
   20b70:	vst1.32	{d16-d17}, [r0]
   20b74:	movls	r5, #64	; 0x40
   20b78:	mov	r0, r5
   20b7c:	bl	12904 <malloc@plt>
   20b80:	mov	r1, r0
   20b84:	mov	r0, #1
   20b88:	strb	r0, [r4, #24]
   20b8c:	sub	r0, r5, #64	; 0x40
   20b90:	stm	r4, {r1, r5}
   20b94:	cmp	r1, #0
   20b98:	str	r0, [r4, #8]
   20b9c:	add	r0, r1, r0
   20ba0:	ldr	r2, [pc, #32]	; 20bc8 <flatcc_json_printer_init_dynamic_buffer@@Base+0x84>
   20ba4:	add	r2, pc, r2
   20ba8:	str	r2, [r4, #44]	; 0x2c
   20bac:	str	r0, [r4, #16]
   20bb0:	mov	r0, #0
   20bb4:	str	r1, [r4, #20]
   20bb8:	moveq	r0, #3
   20bbc:	streq	r0, [r4, #36]	; 0x24
   20bc0:	mvneq	r0, #0
   20bc4:	pop	{r4, r5, fp, pc}
   20bc8:	andeq	r0, r0, r0, lsr #32
   20bcc:	push	{r4, r5, fp, lr}
   20bd0:	add	fp, sp, #8
   20bd4:	mov	r4, r0
   20bd8:	ldr	r0, [r0]
   20bdc:	mov	r1, #0
   20be0:	ldr	r5, [r4, #20]
   20be4:	strb	r1, [r5], -r0
   20be8:	ldr	r0, [r4, #16]
   20bec:	ldr	r1, [r4, #20]
   20bf0:	cmp	r1, r0
   20bf4:	popcc	{r4, r5, fp, pc}
   20bf8:	ldm	r4, {r0, r1}
   20bfc:	lsl	r1, r1, #1
   20c00:	bl	128e0 <realloc@plt>
   20c04:	cmp	r0, #0
   20c08:	beq	20c3c <flatcc_json_printer_init_dynamic_buffer@@Base+0xf8>
   20c0c:	str	r0, [r4]
   20c10:	mvn	r3, #63	; 0x3f
   20c14:	add	r1, r0, r5
   20c18:	ldr	r2, [r4, #4]
   20c1c:	add	r3, r3, r2, lsl #1
   20c20:	lsl	r2, r2, #1
   20c24:	add	r0, r0, r3
   20c28:	str	r3, [r4, #8]
   20c2c:	str	r2, [r4, #4]
   20c30:	str	r0, [r4, #16]
   20c34:	str	r1, [r4, #20]
   20c38:	b	20c60 <flatcc_json_printer_init_dynamic_buffer@@Base+0x11c>
   20c3c:	ldr	r0, [r4, #36]	; 0x24
   20c40:	cmp	r0, #0
   20c44:	moveq	r0, #3
   20c48:	streq	r0, [r4, #36]	; 0x24
   20c4c:	ldr	r0, [r4, #12]
   20c50:	ldr	r1, [r4]
   20c54:	add	r0, r0, r5
   20c58:	str	r1, [r4, #20]
   20c5c:	str	r0, [r4, #12]
   20c60:	mov	r0, #0
   20c64:	strb	r0, [r1]
   20c68:	pop	{r4, r5, fp, pc}

00020c6c <flatcc_json_printer_get_buffer@@Base>:
   20c6c:	push	{r4, r5, fp, lr}
   20c70:	add	fp, sp, #8
   20c74:	ldr	r2, [r0, #44]	; 0x2c
   20c78:	mov	r4, r1
   20c7c:	mov	r1, #0
   20c80:	mov	r5, r0
   20c84:	blx	r2
   20c88:	cmp	r4, #0
   20c8c:	ldrne	r0, [r5]
   20c90:	ldrne	r1, [r5, #20]
   20c94:	subne	r1, r1, r0
   20c98:	strne	r1, [r4]
   20c9c:	popne	{r4, r5, fp, pc}
   20ca0:	ldr	r0, [r5]
   20ca4:	pop	{r4, r5, fp, pc}

00020ca8 <flatcc_json_printer_finalize_dynamic_buffer@@Base>:
   20ca8:	push	{r4, r5, fp, lr}
   20cac:	add	fp, sp, #8
   20cb0:	ldr	r2, [r0, #44]	; 0x2c
   20cb4:	mov	r5, r1
   20cb8:	mov	r1, #0
   20cbc:	mov	r4, r0
   20cc0:	blx	r2
   20cc4:	cmp	r5, #0
   20cc8:	ldr	r0, [r4]
   20ccc:	vmov.i32	q8, #0	; 0x00000000
   20cd0:	add	r2, r4, #16
   20cd4:	ldrne	r1, [r4, #20]
   20cd8:	subne	r1, r1, r0
   20cdc:	strne	r1, [r5]
   20ce0:	mov	r1, #32
   20ce4:	vst1.32	{d16-d17}, [r2]
   20ce8:	vst1.32	{d16-d17}, [r4], r1
   20cec:	vst1.32	{d16-d17}, [r4]
   20cf0:	pop	{r4, r5, fp, pc}

00020cf4 <flatcc_json_printer_clear@@Base>:
   20cf4:	push	{r4, sl, fp, lr}
   20cf8:	add	fp, sp, #8
   20cfc:	mov	r4, r0
   20d00:	ldrb	r0, [r0, #24]
   20d04:	cmp	r0, #0
   20d08:	ldrne	r0, [r4]
   20d0c:	cmpne	r0, #0
   20d10:	beq	20d18 <flatcc_json_printer_clear@@Base+0x24>
   20d14:	bl	128a4 <free@plt>
   20d18:	vmov.i32	q8, #0	; 0x00000000
   20d1c:	mov	r0, #32
   20d20:	add	r1, r4, #16
   20d24:	vst1.32	{d16-d17}, [r4], r0
   20d28:	vst1.32	{d16-d17}, [r1]
   20d2c:	vst1.32	{d16-d17}, [r4]
   20d30:	pop	{r4, sl, fp, pc}
   20d34:	cmp	r2, #0
   20d38:	bxeq	lr
   20d3c:	push	{r4, r5, fp, lr}
   20d40:	add	fp, sp, #8
   20d44:	ldr	lr, [r2]
   20d48:	bic	ip, r3, #224	; 0xe0
   20d4c:	cmp	ip, #0
   20d50:	beq	20d70 <flatcc_json_printer_clear@@Base+0x7c>
   20d54:	cmp	ip, #1
   20d58:	bne	20e38 <flatcc_json_printer_clear@@Base+0x144>
   20d5c:	ldr	ip, [pc, #288]	; 20e84 <flatcc_json_printer_clear@@Base+0x190>
   20d60:	add	ip, pc, ip
   20d64:	cmp	lr, #3
   20d68:	bcs	20d80 <flatcc_json_printer_clear@@Base+0x8c>
   20d6c:	b	20de0 <flatcc_json_printer_clear@@Base+0xec>
   20d70:	ldr	ip, [pc, #264]	; 20e80 <flatcc_json_printer_clear@@Base+0x18c>
   20d74:	add	ip, pc, ip
   20d78:	cmp	lr, #3
   20d7c:	bcc	20de0 <flatcc_json_printer_clear@@Base+0xec>
   20d80:	ldrb	r4, [r1]
   20d84:	sub	lr, lr, #3
   20d88:	cmp	lr, #2
   20d8c:	ldrb	r4, [ip, r4, lsr #2]
   20d90:	strb	r4, [r0]
   20d94:	ldrb	r5, [r1, #1]
   20d98:	ldrb	r4, [r1]
   20d9c:	lsr	r5, r5, #4
   20da0:	bfi	r5, r4, #4, #2
   20da4:	ldrb	r4, [ip, r5]
   20da8:	strb	r4, [r0, #1]
   20dac:	ldrb	r5, [r1, #2]
   20db0:	ldrb	r4, [r1, #1]
   20db4:	lsr	r5, r5, #6
   20db8:	bfi	r5, r4, #2, #4
   20dbc:	ldrb	r4, [ip, r5]
   20dc0:	strb	r4, [r0, #2]
   20dc4:	ldrb	r4, [r1, #2]
   20dc8:	add	r1, r1, #3
   20dcc:	and	r4, r4, #63	; 0x3f
   20dd0:	ldrb	r4, [ip, r4]
   20dd4:	strb	r4, [r0, #3]
   20dd8:	add	r0, r0, #4
   20ddc:	bhi	20d80 <flatcc_json_printer_clear@@Base+0x8c>
   20de0:	and	r3, r3, #128	; 0x80
   20de4:	cmp	lr, #1
   20de8:	beq	20e40 <flatcc_json_printer_clear@@Base+0x14c>
   20dec:	cmp	lr, #2
   20df0:	bne	20e68 <flatcc_json_printer_clear@@Base+0x174>
   20df4:	ldrb	r5, [r1]
   20df8:	cmp	r3, #0
   20dfc:	ldrb	r5, [ip, r5, lsr #2]
   20e00:	strb	r5, [r0]
   20e04:	ldrb	r4, [r1, #1]
   20e08:	ldrb	r5, [r1]
   20e0c:	lsr	r4, r4, #4
   20e10:	bfi	r4, r5, #4, #2
   20e14:	ldrb	r5, [ip, r4]
   20e18:	strb	r5, [r0, #1]
   20e1c:	ldrb	r1, [r1, #1]
   20e20:	and	r1, r1, #15
   20e24:	ldrb	r1, [ip, r1, lsl #2]
   20e28:	strb	r1, [r0, #2]
   20e2c:	movne	r1, #61	; 0x3d
   20e30:	strbne	r1, [r0, #3]
   20e34:	b	20e68 <flatcc_json_printer_clear@@Base+0x174>
   20e38:	mov	r0, lr
   20e3c:	b	20e70 <flatcc_json_printer_clear@@Base+0x17c>
   20e40:	ldrb	r5, [r1]
   20e44:	cmp	r3, #0
   20e48:	ldrb	r5, [ip, r5, lsr #2]
   20e4c:	strb	r5, [r0]
   20e50:	ldrb	r1, [r1]
   20e54:	and	r1, r1, #3
   20e58:	ldrb	r1, [ip, r1, lsl #4]
   20e5c:	strb	r1, [r0, #1]
   20e60:	movwne	r1, #15677	; 0x3d3d
   20e64:	strhne	r1, [r0, #2]
   20e68:	ldr	lr, [r2]
   20e6c:	mov	r0, #0
   20e70:	sub	r0, lr, r0
   20e74:	str	r0, [r2]
   20e78:	pop	{r4, r5, fp, lr}
   20e7c:	bx	lr
   20e80:	strdeq	r0, [r0], -r5
   20e84:	andeq	r0, r0, sl, asr #30
   20e88:	cmp	r3, #0
   20e8c:	cmpeq	r2, #0
   20e90:	bne	20ea8 <flatcc_json_printer_clear@@Base+0x1b4>
   20e94:	cmp	r1, #0
   20e98:	cmpeq	r0, #0
   20e9c:	mvnne	r1, #0
   20ea0:	mvnne	r0, #0
   20ea4:	b	20ec4 <flatcc_json_printer_clear@@Base+0x1d0>
   20ea8:	sub	sp, sp, #8
   20eac:	push	{sp, lr}
   20eb0:	bl	20ed4 <flatcc_json_printer_clear@@Base+0x1e0>
   20eb4:	ldr	lr, [sp, #4]
   20eb8:	add	sp, sp, #8
   20ebc:	pop	{r2, r3}
   20ec0:	bx	lr
   20ec4:	push	{r1, lr}
   20ec8:	mov	r0, #8
   20ecc:	bl	12874 <raise@plt>
   20ed0:	pop	{r1, pc}
   20ed4:	cmp	r1, r3
   20ed8:	cmpeq	r0, r2
   20edc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20ee0:	mov	r4, r0
   20ee4:	movcc	r0, #0
   20ee8:	mov	r5, r1
   20eec:	ldr	lr, [sp, #36]	; 0x24
   20ef0:	movcc	r1, r0
   20ef4:	bcc	20ff0 <flatcc_json_printer_clear@@Base+0x2fc>
   20ef8:	cmp	r3, #0
   20efc:	clzeq	ip, r2
   20f00:	clzne	ip, r3
   20f04:	addeq	ip, ip, #32
   20f08:	cmp	r5, #0
   20f0c:	clzeq	r1, r4
   20f10:	addeq	r1, r1, #32
   20f14:	clzne	r1, r5
   20f18:	sub	ip, ip, r1
   20f1c:	sub	sl, ip, #32
   20f20:	lsl	r9, r3, ip
   20f24:	rsb	fp, ip, #32
   20f28:	orr	r9, r9, r2, lsl sl
   20f2c:	orr	r9, r9, r2, lsr fp
   20f30:	lsl	r8, r2, ip
   20f34:	cmp	r5, r9
   20f38:	cmpeq	r4, r8
   20f3c:	movcc	r0, #0
   20f40:	movcc	r1, r0
   20f44:	bcc	20f60 <flatcc_json_printer_clear@@Base+0x26c>
   20f48:	mov	r0, #1
   20f4c:	subs	r4, r4, r8
   20f50:	lsl	r1, r0, sl
   20f54:	orr	r1, r1, r0, lsr fp
   20f58:	lsl	r0, r0, ip
   20f5c:	sbc	r5, r5, r9
   20f60:	cmp	ip, #0
   20f64:	beq	20ff0 <flatcc_json_printer_clear@@Base+0x2fc>
   20f68:	lsr	r6, r8, #1
   20f6c:	orr	r6, r6, r9, lsl #31
   20f70:	lsr	r7, r9, #1
   20f74:	mov	r2, ip
   20f78:	b	20f9c <flatcc_json_printer_clear@@Base+0x2a8>
   20f7c:	subs	r3, r4, r6
   20f80:	sbc	r8, r5, r7
   20f84:	adds	r3, r3, r3
   20f88:	adc	r8, r8, r8
   20f8c:	adds	r4, r3, #1
   20f90:	adc	r5, r8, #0
   20f94:	subs	r2, r2, #1
   20f98:	beq	20fb8 <flatcc_json_printer_clear@@Base+0x2c4>
   20f9c:	cmp	r5, r7
   20fa0:	cmpeq	r4, r6
   20fa4:	bcs	20f7c <flatcc_json_printer_clear@@Base+0x288>
   20fa8:	adds	r4, r4, r4
   20fac:	adc	r5, r5, r5
   20fb0:	subs	r2, r2, #1
   20fb4:	bne	20f9c <flatcc_json_printer_clear@@Base+0x2a8>
   20fb8:	lsr	r3, r4, ip
   20fbc:	orr	r3, r3, r5, lsl fp
   20fc0:	lsr	r2, r5, ip
   20fc4:	orr	r3, r3, r5, lsr sl
   20fc8:	adds	r0, r0, r4
   20fcc:	mov	r4, r3
   20fd0:	lsl	r3, r2, ip
   20fd4:	orr	r3, r3, r4, lsl sl
   20fd8:	lsl	ip, r4, ip
   20fdc:	orr	r3, r3, r4, lsr fp
   20fe0:	adc	r1, r1, r5
   20fe4:	subs	r0, r0, ip
   20fe8:	mov	r5, r2
   20fec:	sbc	r1, r1, r3
   20ff0:	cmp	lr, #0
   20ff4:	strdne	r4, [lr]
   20ff8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00020ffc <__libc_csu_init@@Base>:
   20ffc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   21000:	mov	r7, r0
   21004:	ldr	r6, [pc, #72]	; 21054 <__libc_csu_init@@Base+0x58>
   21008:	ldr	r5, [pc, #72]	; 21058 <__libc_csu_init@@Base+0x5c>
   2100c:	add	r6, pc, r6
   21010:	add	r5, pc, r5
   21014:	sub	r6, r6, r5
   21018:	mov	r8, r1
   2101c:	mov	r9, r2
   21020:	bl	12854 <raise@plt-0x20>
   21024:	asrs	r6, r6, #2
   21028:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   2102c:	mov	r4, #0
   21030:	add	r4, r4, #1
   21034:	ldr	r3, [r5], #4
   21038:	mov	r2, r9
   2103c:	mov	r1, r8
   21040:	mov	r0, r7
   21044:	blx	r3
   21048:	cmp	r6, r4
   2104c:	bne	21030 <__libc_csu_init@@Base+0x34>
   21050:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   21054:	andeq	r1, r1, r8, ror #29
   21058:	andeq	r1, r1, r0, ror #29

0002105c <__libc_csu_fini@@Base>:
   2105c:	bx	lr

Disassembly of section .fini:

00021060 <.fini>:
   21060:	push	{r3, lr}
   21064:	pop	{r3, pc}
