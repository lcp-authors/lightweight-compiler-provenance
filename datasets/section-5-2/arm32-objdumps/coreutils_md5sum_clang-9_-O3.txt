
../repos/coreutils/src/md5sum:     file format elf32-littlearm


Disassembly of section .init:

00010e70 <.init>:
   10e70:	push	{r3, lr}
   10e74:	bl	1116c <dcngettext@plt+0x54>
   10e78:	pop	{r3, pc}

Disassembly of section .plt:

00010e7c <fdopen@plt-0x14>:
   10e7c:	push	{lr}		; (str lr, [sp, #-4]!)
   10e80:	ldr	lr, [pc, #4]	; 10e8c <fdopen@plt-0x4>
   10e84:	add	lr, pc, lr
   10e88:	ldr	pc, [lr, #8]!
   10e8c:	andeq	r8, r1, r4, ror r1

00010e90 <fdopen@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #24, 20	; 0x18000
   10e98:	ldr	pc, [ip, #372]!	; 0x174

00010e9c <calloc@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #24, 20	; 0x18000
   10ea4:	ldr	pc, [ip, #364]!	; 0x16c

00010ea8 <fputs_unlocked@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #24, 20	; 0x18000
   10eb0:	ldr	pc, [ip, #356]!	; 0x164

00010eb4 <raise@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #24, 20	; 0x18000
   10ebc:	ldr	pc, [ip, #348]!	; 0x15c

00010ec0 <__getdelim@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #24, 20	; 0x18000
   10ec8:	ldr	pc, [ip, #340]!	; 0x154

00010ecc <strcmp@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #24, 20	; 0x18000
   10ed4:	ldr	pc, [ip, #332]!	; 0x14c

00010ed8 <posix_fadvise64@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #24, 20	; 0x18000
   10ee0:	ldr	pc, [ip, #324]!	; 0x144

00010ee4 <fflush@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #24, 20	; 0x18000
   10eec:	ldr	pc, [ip, #316]!	; 0x13c

00010ef0 <free@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #24, 20	; 0x18000
   10ef8:	ldr	pc, [ip, #308]!	; 0x134

00010efc <_exit@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #24, 20	; 0x18000
   10f04:	ldr	pc, [ip, #300]!	; 0x12c

00010f08 <memcpy@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #24, 20	; 0x18000
   10f10:	ldr	pc, [ip, #292]!	; 0x124

00010f14 <mbsinit@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #24, 20	; 0x18000
   10f1c:	ldr	pc, [ip, #284]!	; 0x11c

00010f20 <dcgettext@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #24, 20	; 0x18000
   10f28:	ldr	pc, [ip, #276]!	; 0x114

00010f2c <realloc@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #24, 20	; 0x18000
   10f34:	ldr	pc, [ip, #268]!	; 0x10c

00010f38 <textdomain@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #24, 20	; 0x18000
   10f40:	ldr	pc, [ip, #260]!	; 0x104

00010f44 <iswprint@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #24, 20	; 0x18000
   10f4c:	ldr	pc, [ip, #252]!	; 0xfc

00010f50 <fwrite@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #24, 20	; 0x18000
   10f58:	ldr	pc, [ip, #244]!	; 0xf4

00010f5c <lseek64@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #24, 20	; 0x18000
   10f64:	ldr	pc, [ip, #236]!	; 0xec

00010f68 <__ctype_get_mb_cur_max@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #24, 20	; 0x18000
   10f70:	ldr	pc, [ip, #228]!	; 0xe4

00010f74 <__fpending@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #24, 20	; 0x18000
   10f7c:	ldr	pc, [ip, #220]!	; 0xdc

00010f80 <mbrtowc@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #24, 20	; 0x18000
   10f88:	ldr	pc, [ip, #212]!	; 0xd4

00010f8c <error@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #24, 20	; 0x18000
   10f94:	ldr	pc, [ip, #204]!	; 0xcc

00010f98 <malloc@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #24, 20	; 0x18000
   10fa0:	ldr	pc, [ip, #196]!	; 0xc4

00010fa4 <__libc_start_main@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #24, 20	; 0x18000
   10fac:	ldr	pc, [ip, #188]!	; 0xbc

00010fb0 <__freading@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #24, 20	; 0x18000
   10fb8:	ldr	pc, [ip, #180]!	; 0xb4

00010fbc <__ctype_tolower_loc@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #24, 20	; 0x18000
   10fc4:	ldr	pc, [ip, #172]!	; 0xac

00010fc8 <__gmon_start__@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #24, 20	; 0x18000
   10fd0:	ldr	pc, [ip, #164]!	; 0xa4

00010fd4 <getopt_long@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #24, 20	; 0x18000
   10fdc:	ldr	pc, [ip, #156]!	; 0x9c

00010fe0 <__ctype_b_loc@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #24, 20	; 0x18000
   10fe8:	ldr	pc, [ip, #148]!	; 0x94

00010fec <exit@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #24, 20	; 0x18000
   10ff4:	ldr	pc, [ip, #140]!	; 0x8c

00010ff8 <bcmp@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #24, 20	; 0x18000
   11000:	ldr	pc, [ip, #132]!	; 0x84

00011004 <strlen@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #24, 20	; 0x18000
   1100c:	ldr	pc, [ip, #124]!	; 0x7c

00011010 <strchr@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #24, 20	; 0x18000
   11018:	ldr	pc, [ip, #116]!	; 0x74

0001101c <__errno_location@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #24, 20	; 0x18000
   11024:	ldr	pc, [ip, #108]!	; 0x6c

00011028 <__cxa_atexit@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #24, 20	; 0x18000
   11030:	ldr	pc, [ip, #100]!	; 0x64

00011034 <setvbuf@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #24, 20	; 0x18000
   1103c:	ldr	pc, [ip, #92]!	; 0x5c

00011040 <memset@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #24, 20	; 0x18000
   11048:	ldr	pc, [ip, #84]!	; 0x54

0001104c <__printf_chk@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #24, 20	; 0x18000
   11054:	ldr	pc, [ip, #76]!	; 0x4c

00011058 <fileno@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #24, 20	; 0x18000
   11060:	ldr	pc, [ip, #68]!	; 0x44

00011064 <__fprintf_chk@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #24, 20	; 0x18000
   1106c:	ldr	pc, [ip, #60]!	; 0x3c

00011070 <fclose@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #24, 20	; 0x18000
   11078:	ldr	pc, [ip, #52]!	; 0x34

0001107c <fseeko64@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #24, 20	; 0x18000
   11084:	ldr	pc, [ip, #44]!	; 0x2c

00011088 <fcntl64@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #24, 20	; 0x18000
   11090:	ldr	pc, [ip, #36]!	; 0x24

00011094 <__overflow@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #24, 20	; 0x18000
   1109c:	ldr	pc, [ip, #28]!

000110a0 <setlocale@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #24, 20	; 0x18000
   110a8:	ldr	pc, [ip, #20]!

000110ac <strrchr@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #24, 20	; 0x18000
   110b4:	ldr	pc, [ip, #12]!

000110b8 <nl_langinfo@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #24, 20	; 0x18000
   110c0:	ldr	pc, [ip, #4]!

000110c4 <clearerr_unlocked@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #94208	; 0x17000
   110cc:	ldr	pc, [ip, #4092]!	; 0xffc

000110d0 <fopen64@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #94208	; 0x17000
   110d8:	ldr	pc, [ip, #4084]!	; 0xff4

000110dc <bindtextdomain@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #94208	; 0x17000
   110e4:	ldr	pc, [ip, #4076]!	; 0xfec

000110e8 <fread_unlocked@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #94208	; 0x17000
   110f0:	ldr	pc, [ip, #4068]!	; 0xfe4

000110f4 <strncmp@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #94208	; 0x17000
   110fc:	ldr	pc, [ip, #4060]!	; 0xfdc

00011100 <abort@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #94208	; 0x17000
   11108:	ldr	pc, [ip, #4052]!	; 0xfd4

0001110c <close@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #94208	; 0x17000
   11114:	ldr	pc, [ip, #4044]!	; 0xfcc

00011118 <dcngettext@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #94208	; 0x17000
   11120:	ldr	pc, [ip, #4036]!	; 0xfc4

Disassembly of section .text:

00011130 <.text>:
   11130:	mov	fp, #0
   11134:	mov	lr, #0
   11138:	pop	{r1}		; (ldr r1, [sp], #4)
   1113c:	mov	r2, sp
   11140:	push	{r2}		; (str r2, [sp, #-4]!)
   11144:	push	{r0}		; (str r0, [sp, #-4]!)
   11148:	ldr	ip, [pc, #16]	; 11160 <dcngettext@plt+0x48>
   1114c:	push	{ip}		; (str ip, [sp, #-4]!)
   11150:	ldr	r0, [pc, #12]	; 11164 <dcngettext@plt+0x4c>
   11154:	ldr	r3, [pc, #12]	; 11168 <dcngettext@plt+0x50>
   11158:	bl	10fa4 <__libc_start_main@plt>
   1115c:	bl	11100 <abort@plt>
   11160:	andeq	r7, r1, r0, lsr #20
   11164:	andeq	r1, r1, ip, ror r5
   11168:	andeq	r7, r1, r0, asr #19
   1116c:	ldr	r3, [pc, #20]	; 11188 <dcngettext@plt+0x70>
   11170:	ldr	r2, [pc, #20]	; 1118c <dcngettext@plt+0x74>
   11174:	add	r3, pc, r3
   11178:	ldr	r2, [r3, r2]
   1117c:	cmp	r2, #0
   11180:	bxeq	lr
   11184:	b	10fc8 <__gmon_start__@plt>
   11188:	andeq	r7, r1, r4, lsl #29
   1118c:	andeq	r0, r0, r8, ror #1
   11190:	ldr	r0, [pc, #24]	; 111b0 <dcngettext@plt+0x98>
   11194:	ldr	r3, [pc, #24]	; 111b4 <dcngettext@plt+0x9c>
   11198:	cmp	r3, r0
   1119c:	bxeq	lr
   111a0:	ldr	r3, [pc, #16]	; 111b8 <dcngettext@plt+0xa0>
   111a4:	cmp	r3, #0
   111a8:	bxeq	lr
   111ac:	bx	r3
   111b0:	andeq	r9, r2, r8, asr #2
   111b4:	andeq	r9, r2, r8, asr #2
   111b8:	andeq	r0, r0, r0
   111bc:	ldr	r0, [pc, #36]	; 111e8 <dcngettext@plt+0xd0>
   111c0:	ldr	r1, [pc, #36]	; 111ec <dcngettext@plt+0xd4>
   111c4:	sub	r1, r1, r0
   111c8:	asr	r1, r1, #2
   111cc:	add	r1, r1, r1, lsr #31
   111d0:	asrs	r1, r1, #1
   111d4:	bxeq	lr
   111d8:	ldr	r3, [pc, #16]	; 111f0 <dcngettext@plt+0xd8>
   111dc:	cmp	r3, #0
   111e0:	bxeq	lr
   111e4:	bx	r3
   111e8:	andeq	r9, r2, r8, asr #2
   111ec:	andeq	r9, r2, r8, asr #2
   111f0:	andeq	r0, r0, r0
   111f4:	push	{r4, lr}
   111f8:	ldr	r4, [pc, #24]	; 11218 <dcngettext@plt+0x100>
   111fc:	ldrb	r3, [r4]
   11200:	cmp	r3, #0
   11204:	popne	{r4, pc}
   11208:	bl	11190 <dcngettext@plt+0x78>
   1120c:	mov	r3, #1
   11210:	strb	r3, [r4]
   11214:	pop	{r4, pc}
   11218:	andeq	r9, r2, r8, ror #2
   1121c:	b	111bc <dcngettext@plt+0xa4>
   11220:	push	{fp, lr}
   11224:	mov	fp, sp
   11228:	sub	sp, sp, #56	; 0x38
   1122c:	mov	r4, r0
   11230:	cmp	r0, #0
   11234:	bne	11538 <dcngettext@plt+0x420>
   11238:	movw	r1, #31347	; 0x7a73
   1123c:	mov	r0, #0
   11240:	mov	r2, #5
   11244:	movt	r1, #1
   11248:	bl	10f20 <dcgettext@plt>
   1124c:	mov	r1, r0
   11250:	movw	r0, #37252	; 0x9184
   11254:	movt	r0, #2
   11258:	ldr	r2, [r0]
   1125c:	mov	r0, #1
   11260:	bl	1104c <__printf_chk@plt>
   11264:	movw	r1, #31380	; 0x7a94
   11268:	mov	r0, #0
   1126c:	mov	r2, #5
   11270:	movt	r1, #1
   11274:	bl	10f20 <dcgettext@plt>
   11278:	movw	r2, #31419	; 0x7abb
   1127c:	mov	r1, r0
   11280:	mov	r0, #1
   11284:	mov	r3, #128	; 0x80
   11288:	movt	r2, #1
   1128c:	bl	1104c <__printf_chk@plt>
   11290:	movw	r1, #33351	; 0x8247
   11294:	mov	r0, #0
   11298:	mov	r2, #5
   1129c:	movt	r1, #1
   112a0:	bl	10f20 <dcgettext@plt>
   112a4:	movw	r7, #37220	; 0x9164
   112a8:	movt	r7, #2
   112ac:	ldr	r1, [r7]
   112b0:	bl	10ea8 <fputs_unlocked@plt>
   112b4:	movw	r1, #31423	; 0x7abf
   112b8:	mov	r0, #0
   112bc:	mov	r2, #5
   112c0:	movt	r1, #1
   112c4:	bl	10f20 <dcgettext@plt>
   112c8:	ldr	r1, [r7]
   112cc:	bl	10ea8 <fputs_unlocked@plt>
   112d0:	movw	r1, #31468	; 0x7aec
   112d4:	mov	r0, #0
   112d8:	mov	r2, #5
   112dc:	movt	r1, #1
   112e0:	bl	10f20 <dcgettext@plt>
   112e4:	ldr	r1, [r7]
   112e8:	bl	10ea8 <fputs_unlocked@plt>
   112ec:	movw	r1, #31538	; 0x7b32
   112f0:	mov	r0, #0
   112f4:	mov	r2, #5
   112f8:	movt	r1, #1
   112fc:	bl	10f20 <dcgettext@plt>
   11300:	ldr	r1, [r7]
   11304:	bl	10ea8 <fputs_unlocked@plt>
   11308:	movw	r1, #31591	; 0x7b67
   1130c:	mov	r0, #0
   11310:	mov	r2, #5
   11314:	movt	r1, #1
   11318:	bl	10f20 <dcgettext@plt>
   1131c:	ldr	r1, [r7]
   11320:	bl	10ea8 <fputs_unlocked@plt>
   11324:	movw	r1, #31644	; 0x7b9c
   11328:	mov	r0, #0
   1132c:	mov	r2, #5
   11330:	movt	r1, #1
   11334:	bl	10f20 <dcgettext@plt>
   11338:	ldr	r1, [r7]
   1133c:	bl	10ea8 <fputs_unlocked@plt>
   11340:	movw	r1, #31770	; 0x7c1a
   11344:	mov	r0, #0
   11348:	mov	r2, #5
   1134c:	movt	r1, #1
   11350:	bl	10f20 <dcgettext@plt>
   11354:	ldr	r1, [r7]
   11358:	bl	10ea8 <fputs_unlocked@plt>
   1135c:	movw	r1, #32209	; 0x7dd1
   11360:	mov	r0, #0
   11364:	mov	r2, #5
   11368:	movt	r1, #1
   1136c:	bl	10f20 <dcgettext@plt>
   11370:	ldr	r1, [r7]
   11374:	bl	10ea8 <fputs_unlocked@plt>
   11378:	movw	r1, #32254	; 0x7dfe
   1137c:	mov	r0, #0
   11380:	mov	r2, #5
   11384:	movt	r1, #1
   11388:	bl	10f20 <dcgettext@plt>
   1138c:	ldr	r1, [r7]
   11390:	bl	10ea8 <fputs_unlocked@plt>
   11394:	movw	r1, #32308	; 0x7e34
   11398:	mov	r0, #0
   1139c:	mov	r2, #5
   113a0:	movt	r1, #1
   113a4:	bl	10f20 <dcgettext@plt>
   113a8:	movw	r2, #32352	; 0x7e60
   113ac:	mov	r1, r0
   113b0:	mov	r0, #1
   113b4:	movt	r2, #1
   113b8:	bl	1104c <__printf_chk@plt>
   113bc:	movw	r1, #32361	; 0x7e69
   113c0:	mov	r0, #0
   113c4:	mov	r2, #5
   113c8:	movt	r1, #1
   113cc:	bl	10f20 <dcgettext@plt>
   113d0:	ldr	r1, [r7]
   113d4:	bl	10ea8 <fputs_unlocked@plt>
   113d8:	movw	r0, #34496	; 0x86c0
   113dc:	mov	r2, #48	; 0x30
   113e0:	mov	r6, sp
   113e4:	movw	r5, #32694	; 0x7fb6
   113e8:	movt	r0, #1
   113ec:	movt	r5, #1
   113f0:	add	r1, r0, #32
   113f4:	add	r3, r0, #16
   113f8:	vld1.64	{d18-d19}, [r0], r2
   113fc:	vld1.64	{d16-d17}, [r1]
   11400:	vld1.64	{d20-d21}, [r3]
   11404:	vldr	d22, [r0]
   11408:	add	r1, r6, #32
   1140c:	add	r0, r6, #16
   11410:	vst1.64	{d16-d17}, [r1]
   11414:	movw	r1, #33407	; 0x827f
   11418:	vst1.64	{d20-d21}, [r0]
   1141c:	mov	r0, r6
   11420:	movt	r1, #1
   11424:	vst1.64	{d18-d19}, [r0], r2
   11428:	vstr	d22, [r0]
   1142c:	mov	r0, r5
   11430:	bl	10ecc <strcmp@plt>
   11434:	cmp	r0, #0
   11438:	ldrne	r1, [r6, #8]!
   1143c:	cmpne	r1, #0
   11440:	bne	1142c <dcngettext@plt+0x314>
   11444:	movw	r1, #33502	; 0x82de
   11448:	ldr	r6, [r6, #4]
   1144c:	mov	r0, #0
   11450:	mov	r2, #5
   11454:	movt	r1, #1
   11458:	bl	10f20 <dcgettext@plt>
   1145c:	movw	r2, #32731	; 0x7fdb
   11460:	movw	r3, #33525	; 0x82f5
   11464:	mov	r1, r0
   11468:	mov	r0, #1
   1146c:	movt	r2, #1
   11470:	movt	r3, #1
   11474:	bl	1104c <__printf_chk@plt>
   11478:	cmp	r6, #0
   1147c:	mov	r0, #5
   11480:	mov	r1, #0
   11484:	moveq	r6, r5
   11488:	bl	110a0 <setlocale@plt>
   1148c:	cmp	r0, #0
   11490:	beq	114c8 <dcngettext@plt+0x3b0>
   11494:	movw	r1, #33565	; 0x831d
   11498:	mov	r2, #3
   1149c:	movt	r1, #1
   114a0:	bl	110f4 <strncmp@plt>
   114a4:	cmp	r0, #0
   114a8:	beq	114c8 <dcngettext@plt+0x3b0>
   114ac:	movw	r1, #33569	; 0x8321
   114b0:	mov	r0, #0
   114b4:	mov	r2, #5
   114b8:	movt	r1, #1
   114bc:	bl	10f20 <dcgettext@plt>
   114c0:	ldr	r1, [r7]
   114c4:	bl	10ea8 <fputs_unlocked@plt>
   114c8:	movw	r1, #33640	; 0x8368
   114cc:	mov	r0, #0
   114d0:	mov	r2, #5
   114d4:	movt	r1, #1
   114d8:	bl	10f20 <dcgettext@plt>
   114dc:	movw	r2, #33525	; 0x82f5
   114e0:	mov	r1, r0
   114e4:	mov	r0, #1
   114e8:	mov	r3, r5
   114ec:	movt	r2, #1
   114f0:	bl	1104c <__printf_chk@plt>
   114f4:	movw	r1, #33667	; 0x8383
   114f8:	mov	r0, #0
   114fc:	mov	r2, #5
   11500:	movt	r1, #1
   11504:	bl	10f20 <dcgettext@plt>
   11508:	mov	r1, r0
   1150c:	movw	r0, #33435	; 0x829b
   11510:	movw	r3, #32208	; 0x7dd0
   11514:	cmp	r6, r5
   11518:	mov	r2, r6
   1151c:	movt	r0, #1
   11520:	movt	r3, #1
   11524:	moveq	r3, r0
   11528:	mov	r0, #1
   1152c:	bl	1104c <__printf_chk@plt>
   11530:	mov	r0, r4
   11534:	bl	10fec <exit@plt>
   11538:	movw	r0, #37208	; 0x9158
   1153c:	movw	r1, #31308	; 0x7a4c
   11540:	mov	r2, #5
   11544:	movt	r0, #2
   11548:	movt	r1, #1
   1154c:	ldr	r5, [r0]
   11550:	mov	r0, #0
   11554:	bl	10f20 <dcgettext@plt>
   11558:	mov	r2, r0
   1155c:	movw	r0, #37252	; 0x9184
   11560:	mov	r1, #1
   11564:	movt	r0, #2
   11568:	ldr	r3, [r0]
   1156c:	mov	r0, r5
   11570:	bl	11064 <__fprintf_chk@plt>
   11574:	mov	r0, r4
   11578:	bl	10fec <exit@plt>
   1157c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11580:	add	fp, sp, #28
   11584:	sub	sp, sp, #180	; 0xb4
   11588:	mov	r5, r0
   1158c:	ldr	r0, [r1]
   11590:	mov	r4, r1
   11594:	bl	14704 <dcngettext@plt+0x35ec>
   11598:	movw	r1, #32208	; 0x7dd0
   1159c:	mov	r0, #6
   115a0:	movt	r1, #1
   115a4:	bl	110a0 <setlocale@plt>
   115a8:	movw	r6, #32735	; 0x7fdf
   115ac:	movw	r1, #32701	; 0x7fbd
   115b0:	movt	r6, #1
   115b4:	movt	r1, #1
   115b8:	mov	r0, r6
   115bc:	bl	110dc <bindtextdomain@plt>
   115c0:	mov	r0, r6
   115c4:	bl	10f38 <textdomain@plt>
   115c8:	movw	r0, #13392	; 0x3450
   115cc:	movt	r0, #1
   115d0:	bl	17a24 <dcngettext@plt+0x690c>
   115d4:	movw	r0, #37220	; 0x9164
   115d8:	mov	r1, #0
   115dc:	mov	r2, #1
   115e0:	mov	r3, #0
   115e4:	mov	r8, #0
   115e8:	movt	r0, #2
   115ec:	ldr	r0, [r0]
   115f0:	bl	11034 <setvbuf@plt>
   115f4:	sub	r7, fp, #77	; 0x4d
   115f8:	movw	sl, #32725	; 0x7fd5
   115fc:	movw	r9, #34288	; 0x85f0
   11600:	mvn	r6, #0
   11604:	add	r0, r7, #3
   11608:	movt	sl, #1
   1160c:	movt	r9, #1
   11610:	and	r1, r0, #3
   11614:	sub	r0, r0, r1
   11618:	str	r1, [fp, #-84]	; 0xffffffac
   1161c:	str	r0, [sp, #48]	; 0x30
   11620:	mov	r0, #0
   11624:	str	r0, [sp, #56]	; 0x38
   11628:	mov	r0, #0
   1162c:	str	r0, [sp, #76]	; 0x4c
   11630:	mov	r0, r5
   11634:	mov	r1, r4
   11638:	mov	r2, sl
   1163c:	mov	r3, r9
   11640:	str	r8, [sp]
   11644:	bl	10fd4 <getopt_long@plt>
   11648:	cmp	r0, #97	; 0x61
   1164c:	ble	117ac <dcngettext@plt+0x694>
   11650:	sub	r1, r0, #98	; 0x62
   11654:	cmp	r1, #24
   11658:	bls	1169c <dcngettext@plt+0x584>
   1165c:	sub	r0, r0, #256	; 0x100
   11660:	cmp	r0, #4
   11664:	bhi	131e4 <dcngettext@plt+0x20cc>
   11668:	add	r1, pc, #0
   1166c:	ldr	pc, [r1, r0, lsl #2]
   11670:	andeq	r1, r1, r4, lsl #13
   11674:	muleq	r1, r0, r7
   11678:	andeq	r1, r1, r0, asr r7
   1167c:	andeq	r1, r1, r8, ror r7
   11680:	andeq	r1, r1, r8, lsl r7
   11684:	movw	r0, #37228	; 0x916c
   11688:	mov	r1, #1
   1168c:	movt	r0, #2
   11690:	strb	r1, [r0, #3]
   11694:	ldr	r0, [sp, #76]	; 0x4c
   11698:	b	1162c <dcngettext@plt+0x514>
   1169c:	add	r2, pc, #4
   116a0:	mov	r0, #1
   116a4:	ldr	pc, [r2, r1, lsl #2]
   116a8:	andeq	r1, r1, ip, lsl #14
   116ac:	andeq	r1, r1, ip, lsr #12
   116b0:	andeq	r3, r1, r4, ror #3
   116b4:	andeq	r3, r1, r4, ror #3
   116b8:	andeq	r3, r1, r4, ror #3
   116bc:	andeq	r3, r1, r4, ror #3
   116c0:	andeq	r3, r1, r4, ror #3
   116c4:	andeq	r3, r1, r4, ror #3
   116c8:	andeq	r3, r1, r4, ror #3
   116cc:	andeq	r3, r1, r4, ror #3
   116d0:	andeq	r3, r1, r4, ror #3
   116d4:	andeq	r3, r1, r4, ror #3
   116d8:	andeq	r3, r1, r4, ror #3
   116dc:	andeq	r3, r1, r4, ror #3
   116e0:	andeq	r3, r1, r4, ror #3
   116e4:	andeq	r3, r1, r4, ror #3
   116e8:	andeq	r3, r1, r4, ror #3
   116ec:	andeq	r3, r1, r4, ror #3
   116f0:	andeq	r1, r1, r4, asr #14
   116f4:	andeq	r3, r1, r4, ror #3
   116f8:	andeq	r3, r1, r4, ror #3
   116fc:	andeq	r1, r1, ip, ror #14
   11700:	andeq	r3, r1, r4, ror #3
   11704:	andeq	r3, r1, r4, ror #3
   11708:	andeq	r1, r1, ip, lsr #14
   1170c:	ldr	r0, [sp, #76]	; 0x4c
   11710:	mov	r6, #1
   11714:	b	1162c <dcngettext@plt+0x514>
   11718:	mov	r0, #1
   1171c:	mov	r6, #1
   11720:	str	r0, [sp, #56]	; 0x38
   11724:	ldr	r0, [sp, #76]	; 0x4c
   11728:	b	1162c <dcngettext@plt+0x514>
   1172c:	movw	r0, #37228	; 0x916c
   11730:	mov	r1, #1
   11734:	movt	r0, #2
   11738:	strb	r1, [r0, #5]
   1173c:	ldr	r0, [sp, #76]	; 0x4c
   11740:	b	1162c <dcngettext@plt+0x514>
   11744:	ldr	r0, [sp, #76]	; 0x4c
   11748:	mov	r6, #0
   1174c:	b	1162c <dcngettext@plt+0x514>
   11750:	movw	r0, #37228	; 0x916c
   11754:	mov	r1, #1
   11758:	movt	r0, #2
   1175c:	strb	r1, [r0, #2]
   11760:	strh	r8, [r0]
   11764:	ldr	r0, [sp, #76]	; 0x4c
   11768:	b	1162c <dcngettext@plt+0x514>
   1176c:	movw	r0, #37228	; 0x916c
   11770:	mov	r1, #256	; 0x100
   11774:	b	11798 <dcngettext@plt+0x680>
   11778:	movw	r0, #37228	; 0x916c
   1177c:	mov	r1, #1
   11780:	movt	r0, #2
   11784:	strb	r1, [r0, #4]
   11788:	ldr	r0, [sp, #76]	; 0x4c
   1178c:	b	1162c <dcngettext@plt+0x514>
   11790:	movw	r0, #37228	; 0x916c
   11794:	mov	r1, #1
   11798:	movt	r0, #2
   1179c:	strb	r8, [r0, #2]
   117a0:	strh	r1, [r0]
   117a4:	ldr	r0, [sp, #76]	; 0x4c
   117a8:	b	1162c <dcngettext@plt+0x514>
   117ac:	cmn	r0, #1
   117b0:	bne	13170 <dcngettext@plt+0x2058>
   117b4:	movw	r8, #37228	; 0x916c
   117b8:	mov	r0, #1
   117bc:	ldr	r3, [sp, #76]	; 0x4c
   117c0:	movw	r9, #37220	; 0x9164
   117c4:	cmp	r6, #0
   117c8:	mov	ip, r7
   117cc:	movt	r8, #2
   117d0:	movt	r9, #2
   117d4:	strb	r0, [r8, #12]
   117d8:	strb	r0, [r8, #8]
   117dc:	ldr	r0, [sp, #56]	; 0x38
   117e0:	eor	r1, r0, #1
   117e4:	tsteq	r1, #1
   117e8:	beq	131ec <dcngettext@plt+0x20d4>
   117ec:	eor	r0, r3, #1
   117f0:	tst	r0, #1
   117f4:	bne	11804 <dcngettext@plt+0x6ec>
   117f8:	ldrb	r2, [r8, #5]
   117fc:	cmp	r2, #0
   11800:	bne	131f8 <dcngettext@plt+0x20e0>
   11804:	orr	r1, r1, r0
   11808:	tst	r1, #1
   1180c:	beq	13204 <dcngettext@plt+0x20ec>
   11810:	cmp	r6, #0
   11814:	mov	r1, #0
   11818:	movwmi	r1, #1
   1181c:	orr	r1, r1, r0
   11820:	tst	r1, #1
   11824:	beq	13210 <dcngettext@plt+0x20f8>
   11828:	ldrb	r1, [r8, #3]
   1182c:	mvn	r1, r1
   11830:	orr	r1, r3, r1
   11834:	tst	r1, #1
   11838:	beq	1321c <dcngettext@plt+0x2104>
   1183c:	ldrb	r1, [r8]
   11840:	mvn	r1, r1
   11844:	orr	r1, r3, r1
   11848:	tst	r1, #1
   1184c:	beq	13228 <dcngettext@plt+0x2110>
   11850:	ldrb	r1, [r8, #1]
   11854:	mvn	r1, r1
   11858:	orr	r1, r3, r1
   1185c:	tst	r1, #1
   11860:	beq	13234 <dcngettext@plt+0x211c>
   11864:	ldrb	r1, [r8, #2]
   11868:	mvn	r1, r1
   1186c:	orr	r1, r3, r1
   11870:	tst	r1, #1
   11874:	beq	13240 <dcngettext@plt+0x2128>
   11878:	ldrb	r1, [r8, #4]
   1187c:	and	r0, r1, r0
   11880:	tst	r0, #1
   11884:	bne	1324c <dcngettext@plt+0x2134>
   11888:	movw	r0, #37200	; 0x9150
   1188c:	add	r2, r4, r5, lsl #2
   11890:	movt	r0, #2
   11894:	ldr	r0, [r0]
   11898:	cmp	r0, r5
   1189c:	add	r0, r4, r0, lsl #2
   118a0:	mov	r4, #1
   118a4:	movweq	r1, #34738	; 0x87b2
   118a8:	movteq	r1, #1
   118ac:	streq	r1, [r2], #4
   118b0:	cmp	r0, r2
   118b4:	bcs	13100 <dcngettext@plt+0x1fe8>
   118b8:	cmp	r6, #1
   118bc:	sub	r6, fp, #48	; 0x30
   118c0:	mov	r1, #42	; 0x2a
   118c4:	mov	r3, r0
   118c8:	mov	r7, #1
   118cc:	str	r2, [sp, #72]	; 0x48
   118d0:	movwlt	r1, #32
   118d4:	add	r0, r6, #3
   118d8:	str	r1, [sp, #28]
   118dc:	and	r1, r0, #3
   118e0:	sub	r0, r0, r1
   118e4:	str	r0, [sp, #20]
   118e8:	ldr	r0, [fp, #-84]	; 0xffffffac
   118ec:	sub	r0, ip, r0
   118f0:	add	r5, r0, #3
   118f4:	sub	r0, r6, r1
   118f8:	add	r0, r0, #3
   118fc:	str	r5, [sp, #32]
   11900:	str	r0, [sp, #24]
   11904:	mov	r0, r3
   11908:	b	11958 <dcngettext@plt+0x840>
   1190c:	ldr	r1, [r9]
   11910:	mov	r0, r7
   11914:	bl	10ea8 <fputs_unlocked@plt>
   11918:	ldr	r0, [r9]
   1191c:	ldr	r1, [r0, #20]
   11920:	ldr	r2, [r0, #24]
   11924:	cmp	r1, r2
   11928:	bcs	1303c <dcngettext@plt+0x1f24>
   1192c:	add	r2, r1, #1
   11930:	str	r2, [r0, #20]
   11934:	ldr	r0, [fp, #-84]	; 0xffffffac
   11938:	strb	r0, [r1]
   1193c:	mov	r4, r5
   11940:	ldr	r2, [sp, #72]	; 0x48
   11944:	ldr	r0, [sp, #92]	; 0x5c
   11948:	mov	r7, r4
   1194c:	add	r0, r0, #4
   11950:	cmp	r0, r2
   11954:	bcs	13100 <dcngettext@plt+0x1fe8>
   11958:	str	r0, [sp, #92]	; 0x5c
   1195c:	ldr	sl, [r0]
   11960:	ldr	r0, [sp, #76]	; 0x4c
   11964:	tst	r0, #1
   11968:	beq	119bc <dcngettext@plt+0x8a4>
   1196c:	movw	r1, #34738	; 0x87b2
   11970:	mov	r0, sl
   11974:	movt	r1, #1
   11978:	bl	10ecc <strcmp@plt>
   1197c:	mov	r4, r0
   11980:	cmp	r0, #0
   11984:	sub	r5, fp, #52	; 0x34
   11988:	beq	11b30 <dcngettext@plt+0xa18>
   1198c:	movw	r1, #34265	; 0x85d9
   11990:	mov	r0, sl
   11994:	movt	r1, #1
   11998:	bl	14584 <dcngettext@plt+0x346c>
   1199c:	cmp	r0, #0
   119a0:	beq	12fa8 <dcngettext@plt+0x1e90>
   119a4:	mov	r8, r0
   119a8:	mov	r6, r0
   119ac:	str	r4, [sp, #60]	; 0x3c
   119b0:	str	sl, [sp, #88]	; 0x58
   119b4:	str	r7, [sp, #80]	; 0x50
   119b8:	b	11b64 <dcngettext@plt+0xa4c>
   119bc:	ldr	r1, [sp, #48]	; 0x30
   119c0:	mov	r0, sl
   119c4:	sub	r2, fp, #48	; 0x30
   119c8:	bl	132a4 <dcngettext@plt+0x218c>
   119cc:	mov	r4, #0
   119d0:	cmp	r0, #0
   119d4:	beq	11940 <dcngettext@plt+0x828>
   119d8:	ldrb	r0, [r8, #5]
   119dc:	mov	r4, #0
   119e0:	cmp	r0, #0
   119e4:	mov	r0, #10
   119e8:	movwne	r0, #0
   119ec:	str	r0, [fp, #-84]	; 0xffffffac
   119f0:	bne	11a58 <dcngettext@plt+0x940>
   119f4:	mov	r0, sl
   119f8:	mov	r1, #92	; 0x5c
   119fc:	bl	11010 <strchr@plt>
   11a00:	cmp	r0, #0
   11a04:	bne	11a30 <dcngettext@plt+0x918>
   11a08:	mov	r0, sl
   11a0c:	mov	r1, #10
   11a10:	bl	11010 <strchr@plt>
   11a14:	cmp	r0, #0
   11a18:	bne	11a30 <dcngettext@plt+0x918>
   11a1c:	mov	r0, sl
   11a20:	mov	r1, #13
   11a24:	bl	11010 <strchr@plt>
   11a28:	cmp	r0, #0
   11a2c:	beq	11a58 <dcngettext@plt+0x940>
   11a30:	ldr	r0, [r9]
   11a34:	ldr	r1, [r0, #20]
   11a38:	ldr	r2, [r0, #24]
   11a3c:	cmp	r1, r2
   11a40:	bcs	130f4 <dcngettext@plt+0x1fdc>
   11a44:	add	r2, r1, #1
   11a48:	str	r2, [r0, #20]
   11a4c:	mov	r0, #92	; 0x5c
   11a50:	strb	r0, [r1]
   11a54:	mov	r4, #1
   11a58:	ldr	r0, [sp, #56]	; 0x38
   11a5c:	str	r7, [sp, #80]	; 0x50
   11a60:	tst	r0, #1
   11a64:	beq	12efc <dcngettext@plt+0x1de4>
   11a68:	ldr	r1, [r9]
   11a6c:	movw	r0, #31419	; 0x7abb
   11a70:	movt	r0, #1
   11a74:	bl	10ea8 <fputs_unlocked@plt>
   11a78:	ldr	r1, [r9]
   11a7c:	movw	r0, #34270	; 0x85de
   11a80:	movt	r0, #1
   11a84:	bl	10ea8 <fputs_unlocked@plt>
   11a88:	cmp	r4, #0
   11a8c:	mov	r6, sl
   11a90:	bne	11ab8 <dcngettext@plt+0x9a0>
   11a94:	ldr	r1, [r9]
   11a98:	mov	r0, sl
   11a9c:	bl	10ea8 <fputs_unlocked@plt>
   11aa0:	b	12eec <dcngettext@plt+0x1dd4>
   11aa4:	ldr	r1, [r9]
   11aa8:	movw	r0, #34264	; 0x85d8
   11aac:	movt	r0, #1
   11ab0:	bl	10ea8 <fputs_unlocked@plt>
   11ab4:	add	r6, r6, #1
   11ab8:	ldrb	r1, [r6]
   11abc:	cmp	r1, #12
   11ac0:	ble	11ae4 <dcngettext@plt+0x9cc>
   11ac4:	cmp	r1, #13
   11ac8:	beq	11aa4 <dcngettext@plt+0x98c>
   11acc:	cmp	r1, #92	; 0x5c
   11ad0:	bne	11b04 <dcngettext@plt+0x9ec>
   11ad4:	ldr	r1, [r9]
   11ad8:	movw	r0, #34267	; 0x85db
   11adc:	movt	r0, #1
   11ae0:	b	11ab0 <dcngettext@plt+0x998>
   11ae4:	cmp	r1, #10
   11ae8:	bne	11afc <dcngettext@plt+0x9e4>
   11aec:	ldr	r1, [r9]
   11af0:	movw	r0, #34261	; 0x85d5
   11af4:	movt	r0, #1
   11af8:	b	11ab0 <dcngettext@plt+0x998>
   11afc:	cmp	r1, #0
   11b00:	beq	12eec <dcngettext@plt+0x1dd4>
   11b04:	ldr	r0, [r9]
   11b08:	ldr	r2, [r0, #20]
   11b0c:	ldr	r3, [r0, #24]
   11b10:	cmp	r2, r3
   11b14:	bcs	11b28 <dcngettext@plt+0xa10>
   11b18:	add	r3, r2, #1
   11b1c:	str	r3, [r0, #20]
   11b20:	strb	r1, [r2]
   11b24:	b	11ab4 <dcngettext@plt+0x99c>
   11b28:	bl	11094 <__overflow@plt>
   11b2c:	b	11ab4 <dcngettext@plt+0x99c>
   11b30:	movw	r1, #33336	; 0x8238
   11b34:	mov	r0, #1
   11b38:	mov	r2, #5
   11b3c:	str	r4, [sp, #60]	; 0x3c
   11b40:	str	r7, [sp, #80]	; 0x50
   11b44:	movt	r1, #1
   11b48:	strb	r0, [r8, #13]
   11b4c:	mov	r0, #0
   11b50:	bl	10f20 <dcgettext@plt>
   11b54:	str	r0, [sp, #88]	; 0x58
   11b58:	movw	r0, #37216	; 0x9160
   11b5c:	movt	r0, #2
   11b60:	ldr	r8, [r0]
   11b64:	mov	r0, #0
   11b68:	mov	r1, #0
   11b6c:	mov	r4, #0
   11b70:	mov	sl, #0
   11b74:	mov	r7, #0
   11b78:	sub	r6, fp, #56	; 0x38
   11b7c:	str	r8, [sp, #100]	; 0x64
   11b80:	str	r0, [sp, #36]	; 0x24
   11b84:	mov	r0, #0
   11b88:	str	r1, [fp, #-56]	; 0xffffffc8
   11b8c:	str	r1, [fp, #-52]	; 0xffffffcc
   11b90:	str	r0, [sp, #52]	; 0x34
   11b94:	mov	r0, #0
   11b98:	str	r0, [sp, #44]	; 0x2c
   11b9c:	mov	r0, #0
   11ba0:	str	r0, [sp, #68]	; 0x44
   11ba4:	mov	r0, #0
   11ba8:	str	r0, [sp, #40]	; 0x28
   11bac:	mov	r0, #0
   11bb0:	str	r0, [sp, #64]	; 0x40
   11bb4:	mov	r0, #0
   11bb8:	str	r0, [fp, #-92]	; 0xffffffa4
   11bbc:	mov	r0, #0
   11bc0:	str	r0, [fp, #-96]	; 0xffffffa0
   11bc4:	mov	r0, #0
   11bc8:	str	r0, [fp, #-100]	; 0xffffff9c
   11bcc:	b	11c00 <dcngettext@plt+0xae8>
   11bd0:	ldr	r0, [fp, #-92]	; 0xffffffa4
   11bd4:	ldr	r8, [sp, #100]	; 0x64
   11bd8:	sub	r5, fp, #52	; 0x34
   11bdc:	sub	r6, fp, #56	; 0x38
   11be0:	adds	r0, r0, #1
   11be4:	str	r0, [fp, #-92]	; 0xffffffa4
   11be8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   11bec:	adc	r0, r0, #0
   11bf0:	str	r0, [fp, #-96]	; 0xffffffa0
   11bf4:	ldrb	r0, [r8]
   11bf8:	tst	r0, #48	; 0x30
   11bfc:	bne	12ba4 <dcngettext@plt+0x1a8c>
   11c00:	adds	r4, r4, #1
   11c04:	mov	r0, #0
   11c08:	adcs	sl, sl, #0
   11c0c:	adc	r0, r0, #0
   11c10:	cmp	r0, #1
   11c14:	beq	13134 <dcngettext@plt+0x201c>
   11c18:	mov	r0, r5
   11c1c:	mov	r1, r6
   11c20:	mov	r2, #10
   11c24:	mov	r3, r8
   11c28:	bl	10ec0 <__getdelim@plt>
   11c2c:	cmp	r0, #1
   11c30:	blt	12ba4 <dcngettext@plt+0x1a8c>
   11c34:	mov	r9, r0
   11c38:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11c3c:	ldrb	r1, [r0]
   11c40:	cmp	r1, #35	; 0x23
   11c44:	beq	11bf4 <dcngettext@plt+0xadc>
   11c48:	add	r1, r9, r0
   11c4c:	str	r7, [fp, #-84]	; 0xffffffac
   11c50:	str	r4, [fp, #-88]	; 0xffffffa8
   11c54:	ldrb	r1, [r1, #-1]
   11c58:	sub	r1, r1, #10
   11c5c:	clz	r1, r1
   11c60:	lsr	r8, r1, #5
   11c64:	sub	r1, r9, r8
   11c68:	cmp	r1, #0
   11c6c:	mov	r2, r1
   11c70:	subgt	r2, r2, #1
   11c74:	ldrb	r2, [r0, r2]
   11c78:	sub	r2, r2, #13
   11c7c:	clz	r2, r2
   11c80:	lsr	r7, r2, #5
   11c84:	subs	r1, r1, r7
   11c88:	beq	12044 <dcngettext@plt+0xf2c>
   11c8c:	mov	r4, #0
   11c90:	strb	r4, [r0, r1]
   11c94:	ldr	r5, [fp, #-52]	; 0xffffffcc
   11c98:	b	11ca0 <dcngettext@plt+0xb88>
   11c9c:	add	r4, r4, #1
   11ca0:	ldrb	r0, [r5, r4]
   11ca4:	cmp	r0, #9
   11ca8:	cmpne	r0, #32
   11cac:	beq	11c9c <dcngettext@plt+0xb84>
   11cb0:	cmp	r0, #92	; 0x5c
   11cb4:	mov	r6, r1
   11cb8:	movw	r1, #31419	; 0x7abb
   11cbc:	str	sl, [sp, #104]	; 0x68
   11cc0:	mov	r2, #3
   11cc4:	addeq	r4, r4, #1
   11cc8:	movne	r0, #0
   11ccc:	moveq	r0, #1
   11cd0:	movt	r1, #1
   11cd4:	add	sl, r5, r4
   11cd8:	str	r0, [sp, #96]	; 0x60
   11cdc:	mov	r0, sl
   11ce0:	bl	110f4 <strncmp@plt>
   11ce4:	cmp	r0, #0
   11ce8:	beq	12060 <dcngettext@plt+0xf48>
   11cec:	movw	r1, #37228	; 0x916c
   11cf0:	ldrb	r2, [sl]
   11cf4:	sub	r0, r6, r4
   11cf8:	movt	r1, #2
   11cfc:	ldrb	r1, [r1, #8]
   11d00:	sub	r2, r2, #92	; 0x5c
   11d04:	clz	r2, r2
   11d08:	lsr	r2, r2, #5
   11d0c:	bfi	r2, r1, #1, #1
   11d10:	bfi	r2, r1, #5, #1
   11d14:	cmp	r0, r2
   11d18:	bcc	12684 <dcngettext@plt+0x156c>
   11d1c:	movw	r0, #37228	; 0x916c
   11d20:	mov	lr, r6
   11d24:	movt	r0, #2
   11d28:	ldrb	r0, [r0, #12]
   11d2c:	cmp	r0, #0
   11d30:	addne	r4, r4, #32
   11d34:	ldrb	r1, [r5, r4]
   11d38:	cmp	r1, #32
   11d3c:	cmpne	r1, #9
   11d40:	bne	12684 <dcngettext@plt+0x156c>
   11d44:	mov	r1, #0
   11d48:	cmp	r0, #0
   11d4c:	mov	r0, sl
   11d50:	strb	r1, [r5, r4]
   11d54:	beq	11fec <dcngettext@plt+0xed4>
   11d58:	mov	r6, lr
   11d5c:	bl	10fe0 <__ctype_b_loc@plt>
   11d60:	ldrb	r1, [sl]
   11d64:	ldr	r0, [r0]
   11d68:	add	r1, r0, r1, lsl #1
   11d6c:	ldrb	r1, [r1, #1]
   11d70:	tst	r1, #16
   11d74:	beq	12684 <dcngettext@plt+0x156c>
   11d78:	ldrb	r1, [sl, #1]
   11d7c:	add	r1, r0, r1, lsl #1
   11d80:	ldrb	r1, [r1, #1]
   11d84:	tst	r1, #16
   11d88:	beq	12684 <dcngettext@plt+0x156c>
   11d8c:	ldrb	r1, [sl, #2]
   11d90:	add	r1, r0, r1, lsl #1
   11d94:	ldrb	r1, [r1, #1]
   11d98:	tst	r1, #16
   11d9c:	beq	12684 <dcngettext@plt+0x156c>
   11da0:	ldrb	r1, [sl, #3]
   11da4:	add	r1, r0, r1, lsl #1
   11da8:	ldrb	r1, [r1, #1]
   11dac:	tst	r1, #16
   11db0:	beq	12684 <dcngettext@plt+0x156c>
   11db4:	ldrb	r1, [sl, #4]
   11db8:	add	r1, r0, r1, lsl #1
   11dbc:	ldrb	r1, [r1, #1]
   11dc0:	tst	r1, #16
   11dc4:	beq	12684 <dcngettext@plt+0x156c>
   11dc8:	ldrb	r1, [sl, #5]
   11dcc:	add	r1, r0, r1, lsl #1
   11dd0:	ldrb	r1, [r1, #1]
   11dd4:	tst	r1, #16
   11dd8:	beq	12684 <dcngettext@plt+0x156c>
   11ddc:	ldrb	r1, [sl, #6]
   11de0:	add	r1, r0, r1, lsl #1
   11de4:	ldrb	r1, [r1, #1]
   11de8:	tst	r1, #16
   11dec:	beq	12684 <dcngettext@plt+0x156c>
   11df0:	ldrb	r1, [sl, #7]
   11df4:	add	r1, r0, r1, lsl #1
   11df8:	ldrb	r1, [r1, #1]
   11dfc:	tst	r1, #16
   11e00:	beq	12684 <dcngettext@plt+0x156c>
   11e04:	ldrb	r1, [sl, #8]
   11e08:	add	r1, r0, r1, lsl #1
   11e0c:	ldrb	r1, [r1, #1]
   11e10:	tst	r1, #16
   11e14:	beq	12684 <dcngettext@plt+0x156c>
   11e18:	ldrb	r1, [sl, #9]
   11e1c:	add	r1, r0, r1, lsl #1
   11e20:	ldrb	r1, [r1, #1]
   11e24:	tst	r1, #16
   11e28:	beq	12684 <dcngettext@plt+0x156c>
   11e2c:	ldrb	r1, [sl, #10]
   11e30:	add	r1, r0, r1, lsl #1
   11e34:	ldrb	r1, [r1, #1]
   11e38:	tst	r1, #16
   11e3c:	beq	12684 <dcngettext@plt+0x156c>
   11e40:	ldrb	r1, [sl, #11]
   11e44:	add	r1, r0, r1, lsl #1
   11e48:	ldrb	r1, [r1, #1]
   11e4c:	tst	r1, #16
   11e50:	beq	12684 <dcngettext@plt+0x156c>
   11e54:	ldrb	r1, [sl, #12]
   11e58:	add	r1, r0, r1, lsl #1
   11e5c:	ldrb	r1, [r1, #1]
   11e60:	tst	r1, #16
   11e64:	beq	12684 <dcngettext@plt+0x156c>
   11e68:	ldrb	r1, [sl, #13]
   11e6c:	add	r1, r0, r1, lsl #1
   11e70:	ldrb	r1, [r1, #1]
   11e74:	tst	r1, #16
   11e78:	beq	12684 <dcngettext@plt+0x156c>
   11e7c:	ldrb	r1, [sl, #14]
   11e80:	add	r1, r0, r1, lsl #1
   11e84:	ldrb	r1, [r1, #1]
   11e88:	tst	r1, #16
   11e8c:	beq	12684 <dcngettext@plt+0x156c>
   11e90:	ldrb	r1, [sl, #15]
   11e94:	add	r1, r0, r1, lsl #1
   11e98:	ldrb	r1, [r1, #1]
   11e9c:	tst	r1, #16
   11ea0:	beq	12684 <dcngettext@plt+0x156c>
   11ea4:	ldrb	r1, [sl, #16]
   11ea8:	add	r1, r0, r1, lsl #1
   11eac:	ldrb	r1, [r1, #1]
   11eb0:	tst	r1, #16
   11eb4:	beq	12684 <dcngettext@plt+0x156c>
   11eb8:	ldrb	r1, [sl, #17]
   11ebc:	add	r1, r0, r1, lsl #1
   11ec0:	ldrb	r1, [r1, #1]
   11ec4:	tst	r1, #16
   11ec8:	beq	12684 <dcngettext@plt+0x156c>
   11ecc:	ldrb	r1, [sl, #18]
   11ed0:	add	r1, r0, r1, lsl #1
   11ed4:	ldrb	r1, [r1, #1]
   11ed8:	tst	r1, #16
   11edc:	beq	12684 <dcngettext@plt+0x156c>
   11ee0:	ldrb	r1, [sl, #19]
   11ee4:	add	r1, r0, r1, lsl #1
   11ee8:	ldrb	r1, [r1, #1]
   11eec:	tst	r1, #16
   11ef0:	beq	12684 <dcngettext@plt+0x156c>
   11ef4:	ldrb	r1, [sl, #20]
   11ef8:	add	r1, r0, r1, lsl #1
   11efc:	ldrb	r1, [r1, #1]
   11f00:	tst	r1, #16
   11f04:	beq	12684 <dcngettext@plt+0x156c>
   11f08:	ldrb	r1, [sl, #21]
   11f0c:	add	r1, r0, r1, lsl #1
   11f10:	ldrb	r1, [r1, #1]
   11f14:	tst	r1, #16
   11f18:	beq	12684 <dcngettext@plt+0x156c>
   11f1c:	ldrb	r1, [sl, #22]
   11f20:	add	r1, r0, r1, lsl #1
   11f24:	ldrb	r1, [r1, #1]
   11f28:	tst	r1, #16
   11f2c:	beq	12684 <dcngettext@plt+0x156c>
   11f30:	ldrb	r1, [sl, #23]
   11f34:	add	r1, r0, r1, lsl #1
   11f38:	ldrb	r1, [r1, #1]
   11f3c:	tst	r1, #16
   11f40:	beq	12684 <dcngettext@plt+0x156c>
   11f44:	ldrb	r1, [sl, #24]
   11f48:	add	r1, r0, r1, lsl #1
   11f4c:	ldrb	r1, [r1, #1]
   11f50:	tst	r1, #16
   11f54:	beq	12684 <dcngettext@plt+0x156c>
   11f58:	ldrb	r1, [sl, #25]
   11f5c:	add	r1, r0, r1, lsl #1
   11f60:	ldrb	r1, [r1, #1]
   11f64:	tst	r1, #16
   11f68:	beq	12684 <dcngettext@plt+0x156c>
   11f6c:	ldrb	r1, [sl, #26]
   11f70:	add	r1, r0, r1, lsl #1
   11f74:	ldrb	r1, [r1, #1]
   11f78:	tst	r1, #16
   11f7c:	beq	12684 <dcngettext@plt+0x156c>
   11f80:	ldrb	r1, [sl, #27]
   11f84:	add	r1, r0, r1, lsl #1
   11f88:	ldrb	r1, [r1, #1]
   11f8c:	tst	r1, #16
   11f90:	beq	12684 <dcngettext@plt+0x156c>
   11f94:	ldrb	r1, [sl, #28]
   11f98:	add	r1, r0, r1, lsl #1
   11f9c:	ldrb	r1, [r1, #1]
   11fa0:	tst	r1, #16
   11fa4:	beq	12684 <dcngettext@plt+0x156c>
   11fa8:	ldrb	r1, [sl, #29]
   11fac:	add	r1, r0, r1, lsl #1
   11fb0:	ldrb	r1, [r1, #1]
   11fb4:	tst	r1, #16
   11fb8:	beq	12684 <dcngettext@plt+0x156c>
   11fbc:	ldrb	r1, [sl, #30]
   11fc0:	add	r1, r0, r1, lsl #1
   11fc4:	ldrb	r1, [r1, #1]
   11fc8:	tst	r1, #16
   11fcc:	beq	12684 <dcngettext@plt+0x156c>
   11fd0:	ldrb	r1, [sl, #31]
   11fd4:	add	r0, r0, r1, lsl #1
   11fd8:	ldrb	r0, [r0, #1]
   11fdc:	tst	r0, #16
   11fe0:	beq	12684 <dcngettext@plt+0x156c>
   11fe4:	mov	lr, r6
   11fe8:	add	r0, sl, #32
   11fec:	ldrb	r0, [r0]
   11ff0:	cmp	r0, #0
   11ff4:	bne	12684 <dcngettext@plt+0x156c>
   11ff8:	add	r3, r4, #1
   11ffc:	sub	r1, lr, r3
   12000:	cmp	r1, #1
   12004:	beq	12500 <dcngettext@plt+0x13e8>
   12008:	ldrb	r1, [r5, r3]
   1200c:	cmp	r1, #32
   12010:	cmpne	r1, #42	; 0x2a
   12014:	bne	12500 <dcngettext@plt+0x13e8>
   12018:	movw	r1, #37112	; 0x90f8
   1201c:	movt	r1, #2
   12020:	ldr	r1, [r1]
   12024:	cmp	r1, #1
   12028:	beq	12524 <dcngettext@plt+0x140c>
   1202c:	movw	r1, #37112	; 0x90f8
   12030:	add	r3, r4, #2
   12034:	mov	r0, #0
   12038:	movt	r1, #2
   1203c:	str	r0, [r1]
   12040:	b	12524 <dcngettext@plt+0x140c>
   12044:	ldr	r7, [fp, #-84]	; 0xffffffac
   12048:	ldr	r8, [sp, #100]	; 0x64
   1204c:	ldr	r4, [fp, #-88]	; 0xffffffa8
   12050:	ldrb	r0, [r8]
   12054:	tst	r0, #48	; 0x30
   12058:	beq	11c00 <dcngettext@plt+0xae8>
   1205c:	b	12ba4 <dcngettext@plt+0x1a8c>
   12060:	add	r1, r4, #3
   12064:	ldrb	r0, [r5, r1]
   12068:	cmp	r0, #32
   1206c:	addeq	r1, r4, #4
   12070:	ldrb	r0, [r5, r1]
   12074:	cmp	r0, #40	; 0x28
   12078:	bne	12684 <dcngettext@plt+0x156c>
   1207c:	add	r0, r1, #1
   12080:	subs	r2, r6, r0
   12084:	beq	12684 <dcngettext@plt+0x156c>
   12088:	add	r1, r1, r8
   1208c:	add	r6, r8, r7
   12090:	add	r0, r5, r0
   12094:	add	r1, r1, r7
   12098:	sub	r7, r9, r6
   1209c:	str	r0, [sp, #84]	; 0x54
   120a0:	sub	r0, r5, r6
   120a4:	add	r7, r5, r7
   120a8:	add	r3, r1, #2
   120ac:	add	r2, r1, #3
   120b0:	add	r1, r1, #1
   120b4:	add	r5, r7, #16
   120b8:	mov	ip, r1
   120bc:	mov	lr, r2
   120c0:	mov	r6, r3
   120c4:	mov	r4, r0
   120c8:	mov	r8, r5
   120cc:	cmp	r9, r3
   120d0:	beq	121cc <dcngettext@plt+0x10b4>
   120d4:	add	r0, r4, r9
   120d8:	sub	r5, r8, #1
   120dc:	add	r3, r6, #1
   120e0:	add	r2, lr, #1
   120e4:	add	r1, ip, #1
   120e8:	ldrb	r7, [r0, #-1]
   120ec:	sub	r0, r4, #1
   120f0:	cmp	r7, #41	; 0x29
   120f4:	bne	120b8 <dcngettext@plt+0xfa0>
   120f8:	add	r1, r0, r9
   120fc:	mov	r0, #0
   12100:	ldr	r2, [sp, #96]	; 0x60
   12104:	cmp	r2, #0
   12108:	beq	121f0 <dcngettext@plt+0x10d8>
   1210c:	ldr	r5, [sp, #84]	; 0x54
   12110:	cmp	r0, #0
   12114:	bne	121bc <dcngettext@plt+0x10a4>
   12118:	ldr	r5, [sp, #84]	; 0x54
   1211c:	sub	r6, r9, r6
   12120:	mov	r3, #0
   12124:	ldr	r0, [sp, #84]	; 0x54
   12128:	ldrb	r0, [r0, r3]
   1212c:	cmp	r0, #92	; 0x5c
   12130:	beq	1215c <dcngettext@plt+0x1044>
   12134:	cmp	r0, #0
   12138:	beq	12684 <dcngettext@plt+0x156c>
   1213c:	add	r3, r3, #1
   12140:	strb	r0, [r5], #1
   12144:	cmp	r3, r6
   12148:	bcs	121bc <dcngettext@plt+0x10a4>
   1214c:	ldr	r0, [sp, #84]	; 0x54
   12150:	ldrb	r0, [r0, r3]
   12154:	cmp	r0, #92	; 0x5c
   12158:	bne	12134 <dcngettext@plt+0x101c>
   1215c:	sub	r0, r9, r3
   12160:	cmp	r0, lr
   12164:	beq	12684 <dcngettext@plt+0x156c>
   12168:	ldr	r0, [sp, #84]	; 0x54
   1216c:	add	r3, r3, #1
   12170:	ldrb	r2, [r0, r3]
   12174:	cmp	r2, #92	; 0x5c
   12178:	beq	121a8 <dcngettext@plt+0x1090>
   1217c:	mov	r0, #10
   12180:	cmp	r2, #110	; 0x6e
   12184:	beq	1213c <dcngettext@plt+0x1024>
   12188:	cmp	r2, #114	; 0x72
   1218c:	bne	12684 <dcngettext@plt+0x156c>
   12190:	mov	r0, #13
   12194:	add	r3, r3, #1
   12198:	strb	r0, [r5], #1
   1219c:	cmp	r3, r6
   121a0:	bcc	1214c <dcngettext@plt+0x1034>
   121a4:	b	121bc <dcngettext@plt+0x10a4>
   121a8:	mov	r0, #92	; 0x5c
   121ac:	add	r3, r3, #1
   121b0:	strb	r0, [r5], #1
   121b4:	cmp	r3, r6
   121b8:	bcc	1214c <dcngettext@plt+0x1034>
   121bc:	cmp	r5, r1
   121c0:	movcc	r0, #0
   121c4:	strbcc	r0, [r5]
   121c8:	b	121f0 <dcngettext@plt+0x10d8>
   121cc:	ldr	r2, [sp, #84]	; 0x54
   121d0:	mov	r0, #1
   121d4:	ldrb	r1, [r2]
   121d8:	cmp	r1, #41	; 0x29
   121dc:	mov	r1, r2
   121e0:	bne	12684 <dcngettext@plt+0x156c>
   121e4:	ldr	r2, [sp, #96]	; 0x60
   121e8:	cmp	r2, #0
   121ec:	bne	1210c <dcngettext@plt+0xff4>
   121f0:	sub	r0, r9, ip
   121f4:	mov	r2, #0
   121f8:	strb	r2, [r1]
   121fc:	b	1220c <dcngettext@plt+0x10f4>
   12200:	add	r8, r8, #1
   12204:	add	r9, r9, #1
   12208:	add	r0, r0, #1
   1220c:	ldrb	r1, [r4, r9]
   12210:	cmp	r1, #9
   12214:	cmpne	r1, #32
   12218:	beq	12200 <dcngettext@plt+0x10e8>
   1221c:	cmp	r1, #61	; 0x3d
   12220:	bne	12684 <dcngettext@plt+0x156c>
   12224:	ldrb	r4, [r8, #-15]
   12228:	cmp	r4, #32
   1222c:	cmpne	r4, #9
   12230:	bne	12248 <dcngettext@plt+0x1130>
   12234:	add	r8, r8, #1
   12238:	ldrb	r4, [r8, #-15]
   1223c:	cmp	r4, #32
   12240:	cmpne	r4, #9
   12244:	beq	12234 <dcngettext@plt+0x111c>
   12248:	movw	r0, #37228	; 0x916c
   1224c:	movt	r0, #2
   12250:	ldrb	r0, [r0, #12]
   12254:	cmp	r0, #1
   12258:	bne	124e4 <dcngettext@plt+0x13cc>
   1225c:	bl	10fe0 <__ctype_b_loc@plt>
   12260:	ldr	r0, [r0]
   12264:	add	r1, r0, r4, lsl #1
   12268:	ldrb	r1, [r1, #1]
   1226c:	tst	r1, #16
   12270:	beq	12684 <dcngettext@plt+0x156c>
   12274:	ldrb	r1, [r8, #-14]
   12278:	add	r1, r0, r1, lsl #1
   1227c:	ldrb	r1, [r1, #1]
   12280:	tst	r1, #16
   12284:	beq	12684 <dcngettext@plt+0x156c>
   12288:	ldrb	r1, [r8, #-13]
   1228c:	add	r1, r0, r1, lsl #1
   12290:	ldrb	r1, [r1, #1]
   12294:	tst	r1, #16
   12298:	beq	12684 <dcngettext@plt+0x156c>
   1229c:	ldrb	r1, [r8, #-12]
   122a0:	add	r1, r0, r1, lsl #1
   122a4:	ldrb	r1, [r1, #1]
   122a8:	tst	r1, #16
   122ac:	beq	12684 <dcngettext@plt+0x156c>
   122b0:	ldrb	r1, [r8, #-11]
   122b4:	add	r1, r0, r1, lsl #1
   122b8:	ldrb	r1, [r1, #1]
   122bc:	tst	r1, #16
   122c0:	beq	12684 <dcngettext@plt+0x156c>
   122c4:	ldrb	r1, [r8, #-10]
   122c8:	add	r1, r0, r1, lsl #1
   122cc:	ldrb	r1, [r1, #1]
   122d0:	tst	r1, #16
   122d4:	beq	12684 <dcngettext@plt+0x156c>
   122d8:	ldrb	r1, [r8, #-9]
   122dc:	add	r1, r0, r1, lsl #1
   122e0:	ldrb	r1, [r1, #1]
   122e4:	tst	r1, #16
   122e8:	beq	12684 <dcngettext@plt+0x156c>
   122ec:	ldrb	r1, [r8, #-8]
   122f0:	add	r1, r0, r1, lsl #1
   122f4:	ldrb	r1, [r1, #1]
   122f8:	tst	r1, #16
   122fc:	beq	12684 <dcngettext@plt+0x156c>
   12300:	ldrb	r1, [r8, #-7]
   12304:	add	r1, r0, r1, lsl #1
   12308:	ldrb	r1, [r1, #1]
   1230c:	tst	r1, #16
   12310:	beq	12684 <dcngettext@plt+0x156c>
   12314:	ldrb	r1, [r8, #-6]
   12318:	add	r1, r0, r1, lsl #1
   1231c:	ldrb	r1, [r1, #1]
   12320:	tst	r1, #16
   12324:	beq	12684 <dcngettext@plt+0x156c>
   12328:	ldrb	r1, [r8, #-5]
   1232c:	add	r1, r0, r1, lsl #1
   12330:	ldrb	r1, [r1, #1]
   12334:	tst	r1, #16
   12338:	beq	12684 <dcngettext@plt+0x156c>
   1233c:	ldrb	r1, [r8, #-4]
   12340:	add	r1, r0, r1, lsl #1
   12344:	ldrb	r1, [r1, #1]
   12348:	tst	r1, #16
   1234c:	beq	12684 <dcngettext@plt+0x156c>
   12350:	ldrb	r1, [r8, #-3]
   12354:	add	r1, r0, r1, lsl #1
   12358:	ldrb	r1, [r1, #1]
   1235c:	tst	r1, #16
   12360:	beq	12684 <dcngettext@plt+0x156c>
   12364:	ldrb	r1, [r8, #-2]
   12368:	add	r1, r0, r1, lsl #1
   1236c:	ldrb	r1, [r1, #1]
   12370:	tst	r1, #16
   12374:	beq	12684 <dcngettext@plt+0x156c>
   12378:	ldrb	r1, [r8, #-1]
   1237c:	add	r1, r0, r1, lsl #1
   12380:	ldrb	r1, [r1, #1]
   12384:	tst	r1, #16
   12388:	beq	12684 <dcngettext@plt+0x156c>
   1238c:	ldrb	r1, [r8]
   12390:	add	r1, r0, r1, lsl #1
   12394:	ldrb	r1, [r1, #1]
   12398:	tst	r1, #16
   1239c:	beq	12684 <dcngettext@plt+0x156c>
   123a0:	ldrb	r1, [r8, #1]
   123a4:	add	r1, r0, r1, lsl #1
   123a8:	ldrb	r1, [r1, #1]
   123ac:	tst	r1, #16
   123b0:	beq	12684 <dcngettext@plt+0x156c>
   123b4:	ldrb	r1, [r8, #2]
   123b8:	add	r1, r0, r1, lsl #1
   123bc:	ldrb	r1, [r1, #1]
   123c0:	tst	r1, #16
   123c4:	beq	12684 <dcngettext@plt+0x156c>
   123c8:	ldrb	r1, [r8, #3]
   123cc:	add	r1, r0, r1, lsl #1
   123d0:	ldrb	r1, [r1, #1]
   123d4:	tst	r1, #16
   123d8:	beq	12684 <dcngettext@plt+0x156c>
   123dc:	ldrb	r1, [r8, #4]
   123e0:	add	r1, r0, r1, lsl #1
   123e4:	ldrb	r1, [r1, #1]
   123e8:	tst	r1, #16
   123ec:	beq	12684 <dcngettext@plt+0x156c>
   123f0:	ldrb	r1, [r8, #5]
   123f4:	add	r1, r0, r1, lsl #1
   123f8:	ldrb	r1, [r1, #1]
   123fc:	tst	r1, #16
   12400:	beq	12684 <dcngettext@plt+0x156c>
   12404:	ldrb	r1, [r8, #6]
   12408:	add	r1, r0, r1, lsl #1
   1240c:	ldrb	r1, [r1, #1]
   12410:	tst	r1, #16
   12414:	beq	12684 <dcngettext@plt+0x156c>
   12418:	ldrb	r1, [r8, #7]
   1241c:	add	r1, r0, r1, lsl #1
   12420:	ldrb	r1, [r1, #1]
   12424:	tst	r1, #16
   12428:	beq	12684 <dcngettext@plt+0x156c>
   1242c:	ldrb	r1, [r8, #8]
   12430:	add	r1, r0, r1, lsl #1
   12434:	ldrb	r1, [r1, #1]
   12438:	tst	r1, #16
   1243c:	beq	12684 <dcngettext@plt+0x156c>
   12440:	ldrb	r1, [r8, #9]
   12444:	add	r1, r0, r1, lsl #1
   12448:	ldrb	r1, [r1, #1]
   1244c:	tst	r1, #16
   12450:	beq	12684 <dcngettext@plt+0x156c>
   12454:	ldrb	r1, [r8, #10]
   12458:	add	r1, r0, r1, lsl #1
   1245c:	ldrb	r1, [r1, #1]
   12460:	tst	r1, #16
   12464:	beq	12684 <dcngettext@plt+0x156c>
   12468:	ldrb	r1, [r8, #11]
   1246c:	add	r1, r0, r1, lsl #1
   12470:	ldrb	r1, [r1, #1]
   12474:	tst	r1, #16
   12478:	beq	12684 <dcngettext@plt+0x156c>
   1247c:	ldrb	r1, [r8, #12]
   12480:	add	r1, r0, r1, lsl #1
   12484:	ldrb	r1, [r1, #1]
   12488:	tst	r1, #16
   1248c:	beq	12684 <dcngettext@plt+0x156c>
   12490:	ldrb	r1, [r8, #13]
   12494:	add	r1, r0, r1, lsl #1
   12498:	ldrb	r1, [r1, #1]
   1249c:	tst	r1, #16
   124a0:	beq	12684 <dcngettext@plt+0x156c>
   124a4:	ldrb	r1, [r8, #14]
   124a8:	add	r1, r0, r1, lsl #1
   124ac:	ldrb	r1, [r1, #1]
   124b0:	tst	r1, #16
   124b4:	beq	12684 <dcngettext@plt+0x156c>
   124b8:	ldrb	r1, [r8, #15]
   124bc:	add	r1, r0, r1, lsl #1
   124c0:	ldrb	r1, [r1, #1]
   124c4:	tst	r1, #16
   124c8:	beq	12684 <dcngettext@plt+0x156c>
   124cc:	ldrb	r1, [r8, #16]
   124d0:	add	r0, r0, r1, lsl #1
   124d4:	ldrb	r0, [r0, #1]
   124d8:	tst	r0, #16
   124dc:	beq	12684 <dcngettext@plt+0x156c>
   124e0:	ldrb	r4, [r8, #17]
   124e4:	cmp	r4, #0
   124e8:	bne	12684 <dcngettext@plt+0x156c>
   124ec:	sub	sl, r8, #15
   124f0:	ldr	r0, [sp, #60]	; 0x3c
   124f4:	cmp	r0, #0
   124f8:	bne	12600 <dcngettext@plt+0x14e8>
   124fc:	b	125e8 <dcngettext@plt+0x14d0>
   12500:	movw	r1, #37112	; 0x90f8
   12504:	movt	r1, #2
   12508:	ldr	r1, [r1]
   1250c:	cmp	r1, #0
   12510:	beq	12684 <dcngettext@plt+0x156c>
   12514:	movw	r2, #37112	; 0x90f8
   12518:	mov	r1, #1
   1251c:	movt	r2, #2
   12520:	str	r1, [r2]
   12524:	ldr	r1, [sp, #96]	; 0x60
   12528:	add	r0, r5, r3
   1252c:	str	r0, [sp, #84]	; 0x54
   12530:	cmp	r1, #0
   12534:	beq	125dc <dcngettext@plt+0x14c4>
   12538:	subs	r1, lr, r3
   1253c:	mov	r4, r0
   12540:	beq	125c4 <dcngettext@plt+0x14ac>
   12544:	sub	ip, r1, #1
   12548:	mov	r3, #0
   1254c:	mov	r4, r0
   12550:	ldrb	r7, [r0, r3]
   12554:	cmp	r7, #92	; 0x5c
   12558:	beq	12584 <dcngettext@plt+0x146c>
   1255c:	cmp	r7, #0
   12560:	beq	12684 <dcngettext@plt+0x156c>
   12564:	ldr	r0, [sp, #84]	; 0x54
   12568:	add	r3, r3, #1
   1256c:	strb	r7, [r4], #1
   12570:	cmp	r3, r1
   12574:	bcs	125c4 <dcngettext@plt+0x14ac>
   12578:	ldrb	r7, [r0, r3]
   1257c:	cmp	r7, #92	; 0x5c
   12580:	bne	1255c <dcngettext@plt+0x1444>
   12584:	cmp	r3, ip
   12588:	beq	12684 <dcngettext@plt+0x156c>
   1258c:	ldr	r0, [sp, #84]	; 0x54
   12590:	add	r3, r3, #1
   12594:	ldrb	r6, [r0, r3]
   12598:	cmp	r6, #92	; 0x5c
   1259c:	beq	125bc <dcngettext@plt+0x14a4>
   125a0:	mov	r7, #10
   125a4:	cmp	r6, #110	; 0x6e
   125a8:	beq	12564 <dcngettext@plt+0x144c>
   125ac:	cmp	r6, #114	; 0x72
   125b0:	bne	12684 <dcngettext@plt+0x156c>
   125b4:	mov	r7, #13
   125b8:	b	12564 <dcngettext@plt+0x144c>
   125bc:	mov	r7, #92	; 0x5c
   125c0:	b	12564 <dcngettext@plt+0x144c>
   125c4:	add	r1, r5, lr
   125c8:	cmp	r4, r1
   125cc:	movcc	r1, #0
   125d0:	strbcc	r1, [r4]
   125d4:	cmp	r0, #0
   125d8:	beq	12684 <dcngettext@plt+0x156c>
   125dc:	ldr	r0, [sp, #60]	; 0x3c
   125e0:	cmp	r0, #0
   125e4:	bne	12600 <dcngettext@plt+0x14e8>
   125e8:	ldr	r0, [sp, #84]	; 0x54
   125ec:	movw	r1, #34738	; 0x87b2
   125f0:	movt	r1, #1
   125f4:	bl	10ecc <strcmp@plt>
   125f8:	cmp	r0, #0
   125fc:	beq	12684 <dcngettext@plt+0x156c>
   12600:	movw	r0, #37228	; 0x916c
   12604:	mov	r9, #0
   12608:	movt	r0, #2
   1260c:	ldrb	r0, [r0]
   12610:	cmp	r0, #0
   12614:	bne	12630 <dcngettext@plt+0x1518>
   12618:	ldr	r0, [sp, #84]	; 0x54
   1261c:	mov	r1, #10
   12620:	bl	11010 <strchr@plt>
   12624:	cmp	r0, #0
   12628:	mov	r9, r0
   1262c:	movwne	r9, #1
   12630:	ldr	r0, [sp, #84]	; 0x54
   12634:	ldr	r1, [sp, #20]
   12638:	sub	r2, fp, #57	; 0x39
   1263c:	bl	132a4 <dcngettext@plt+0x218c>
   12640:	cmp	r0, #0
   12644:	sub	r5, fp, #52	; 0x34
   12648:	beq	12704 <dcngettext@plt+0x15ec>
   1264c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   12650:	ldr	r8, [sp, #100]	; 0x64
   12654:	sub	r6, fp, #56	; 0x38
   12658:	cmp	r0, #0
   1265c:	beq	12748 <dcngettext@plt+0x1630>
   12660:	movw	r0, #37228	; 0x916c
   12664:	movt	r0, #2
   12668:	ldrb	r0, [r0, #3]
   1266c:	cmp	r0, #0
   12670:	beq	12748 <dcngettext@plt+0x1630>
   12674:	ldr	r7, [fp, #-84]	; 0xffffffac
   12678:	ldr	r4, [fp, #-88]	; 0xffffffa8
   1267c:	ldr	sl, [sp, #104]	; 0x68
   12680:	b	12b90 <dcngettext@plt+0x1a78>
   12684:	ldr	r0, [fp, #-100]	; 0xffffff9c
   12688:	ldr	r7, [fp, #-84]	; 0xffffffac
   1268c:	ldr	r4, [fp, #-88]	; 0xffffffa8
   12690:	ldr	sl, [sp, #104]	; 0x68
   12694:	adds	r0, r0, #1
   12698:	str	r0, [fp, #-100]	; 0xffffff9c
   1269c:	movw	r0, #37228	; 0x916c
   126a0:	adc	r7, r7, #0
   126a4:	movt	r0, #2
   126a8:	ldrb	r0, [r0, #1]
   126ac:	cmp	r0, #1
   126b0:	bne	11bd0 <dcngettext@plt+0xab8>
   126b4:	movw	r1, #33826	; 0x8422
   126b8:	mov	r0, #0
   126bc:	mov	r2, #5
   126c0:	movt	r1, #1
   126c4:	bl	10f20 <dcgettext@plt>
   126c8:	ldr	r2, [sp, #88]	; 0x58
   126cc:	mov	r5, r0
   126d0:	mov	r0, #0
   126d4:	mov	r1, #3
   126d8:	bl	1641c <dcngettext@plt+0x5304>
   126dc:	mov	r3, r0
   126e0:	movw	r0, #31419	; 0x7abb
   126e4:	stm	sp, {r4, sl}
   126e8:	mov	r1, #0
   126ec:	mov	r2, r5
   126f0:	movt	r0, #1
   126f4:	str	r0, [sp, #8]
   126f8:	mov	r0, #0
   126fc:	bl	10f8c <error@plt>
   12700:	b	11bd0 <dcngettext@plt+0xab8>
   12704:	ldr	r0, [sp, #44]	; 0x2c
   12708:	ldr	r8, [sp, #100]	; 0x64
   1270c:	ldr	sl, [sp, #104]	; 0x68
   12710:	sub	r6, fp, #56	; 0x38
   12714:	adds	r0, r0, #1
   12718:	str	r0, [sp, #44]	; 0x2c
   1271c:	ldr	r0, [sp, #68]	; 0x44
   12720:	adc	r0, r0, #0
   12724:	str	r0, [sp, #68]	; 0x44
   12728:	movw	r0, #37228	; 0x916c
   1272c:	movt	r0, #2
   12730:	ldrb	r0, [r0]
   12734:	cmp	r0, #0
   12738:	beq	12818 <dcngettext@plt+0x1700>
   1273c:	ldr	r7, [fp, #-84]	; 0xffffffac
   12740:	ldr	r4, [fp, #-88]	; 0xffffffa8
   12744:	b	12b90 <dcngettext@plt+0x1a78>
   12748:	movw	r0, #37228	; 0x916c
   1274c:	mov	r6, sl
   12750:	ldr	sl, [sp, #104]	; 0x68
   12754:	mov	r5, #0
   12758:	movt	r0, #2
   1275c:	ldrb	r4, [r0, #12]
   12760:	cmp	r4, #0
   12764:	movwne	r4, #16
   12768:	beq	127c0 <dcngettext@plt+0x16a8>
   1276c:	bl	10fbc <__ctype_tolower_loc@plt>
   12770:	ldr	r0, [r0]
   12774:	mov	r5, #0
   12778:	ldr	r1, [sp, #24]
   1277c:	ldrb	r3, [r6, r5, lsl #1]
   12780:	movw	r7, #34552	; 0x86f8
   12784:	movt	r7, #1
   12788:	ldrb	r1, [r1, r5]
   1278c:	ldr	r3, [r0, r3, lsl #2]
   12790:	ldrb	r2, [r7, r1, lsr #4]
   12794:	cmp	r3, r2
   12798:	addeq	r2, r6, r5, lsl #1
   1279c:	andeq	r1, r1, #15
   127a0:	ldrbeq	r1, [r7, r1]
   127a4:	ldrbeq	r2, [r2, #1]
   127a8:	ldreq	r2, [r0, r2, lsl #2]
   127ac:	cmpeq	r2, r1
   127b0:	bne	127c0 <dcngettext@plt+0x16a8>
   127b4:	add	r5, r5, #1
   127b8:	cmp	r5, r4
   127bc:	bcc	12778 <dcngettext@plt+0x1660>
   127c0:	movw	r2, #37228	; 0x916c
   127c4:	ldr	r0, [sp, #40]	; 0x28
   127c8:	ldr	r1, [sp, #64]	; 0x40
   127cc:	movt	r2, #2
   127d0:	ldrb	r2, [r2]
   127d4:	adds	r7, r0, #1
   127d8:	adc	r8, r1, #0
   127dc:	cmp	r5, r4
   127e0:	movne	r0, r7
   127e4:	movne	r1, r8
   127e8:	cmp	r2, #0
   127ec:	beq	12868 <dcngettext@plt+0x1750>
   127f0:	ldr	r3, [sp, #36]	; 0x24
   127f4:	sub	r2, r5, r4
   127f8:	str	r0, [sp, #40]	; 0x28
   127fc:	str	r1, [sp, #64]	; 0x40
   12800:	sub	r5, fp, #52	; 0x34
   12804:	clz	r2, r2
   12808:	lsr	r2, r2, #5
   1280c:	orr	r3, r3, r2
   12810:	str	r3, [sp, #36]	; 0x24
   12814:	b	12b80 <dcngettext@plt+0x1a68>
   12818:	movw	r0, #37220	; 0x9164
   1281c:	ldr	r7, [fp, #-84]	; 0xffffffac
   12820:	ldr	r4, [fp, #-88]	; 0xffffffa8
   12824:	cmp	r9, #0
   12828:	movt	r0, #2
   1282c:	ldr	r1, [r0]
   12830:	beq	12894 <dcngettext@plt+0x177c>
   12834:	ldr	r0, [r1, #20]
   12838:	ldr	r2, [r1, #24]
   1283c:	ldr	r9, [sp, #84]	; 0x54
   12840:	cmp	r0, r2
   12844:	bcs	128fc <dcngettext@plt+0x17e4>
   12848:	add	r2, r0, #1
   1284c:	str	r2, [r1, #20]
   12850:	mov	r1, #92	; 0x5c
   12854:	strb	r1, [r0]
   12858:	ldrb	r1, [r9]
   1285c:	cmp	r1, #12
   12860:	bgt	12968 <dcngettext@plt+0x1850>
   12864:	b	129b8 <dcngettext@plt+0x18a0>
   12868:	cmp	r5, r4
   1286c:	bne	128a0 <dcngettext@plt+0x1788>
   12870:	movw	r0, #37228	; 0x916c
   12874:	movt	r0, #2
   12878:	ldrb	r0, [r0, #2]
   1287c:	cmp	r0, #0
   12880:	beq	128a0 <dcngettext@plt+0x1788>
   12884:	mov	r0, #1
   12888:	sub	r5, fp, #52	; 0x34
   1288c:	str	r0, [sp, #36]	; 0x24
   12890:	b	12b80 <dcngettext@plt+0x1a68>
   12894:	ldr	r0, [sp, #84]	; 0x54
   12898:	bl	10ea8 <fputs_unlocked@plt>
   1289c:	b	129e0 <dcngettext@plt+0x18c8>
   128a0:	movw	r0, #37220	; 0x9164
   128a4:	cmp	r9, #0
   128a8:	movt	r0, #2
   128ac:	ldr	r1, [r0]
   128b0:	beq	128e8 <dcngettext@plt+0x17d0>
   128b4:	ldr	r0, [r1, #20]
   128b8:	ldr	r2, [r1, #24]
   128bc:	ldr	r6, [sp, #84]	; 0x54
   128c0:	cmp	r0, r2
   128c4:	bcs	12a0c <dcngettext@plt+0x18f4>
   128c8:	add	r2, r0, #1
   128cc:	str	r2, [r1, #20]
   128d0:	mov	r1, #92	; 0x5c
   128d4:	strb	r1, [r0]
   128d8:	ldrb	r1, [r6]
   128dc:	cmp	r1, #12
   128e0:	bgt	12a78 <dcngettext@plt+0x1960>
   128e4:	b	12ac8 <dcngettext@plt+0x19b0>
   128e8:	ldr	r0, [sp, #84]	; 0x54
   128ec:	bl	10ea8 <fputs_unlocked@plt>
   128f0:	cmp	r5, r4
   128f4:	beq	12b30 <dcngettext@plt+0x1a18>
   128f8:	b	12af8 <dcngettext@plt+0x19e0>
   128fc:	mov	r0, r1
   12900:	mov	r1, #92	; 0x5c
   12904:	bl	11094 <__overflow@plt>
   12908:	ldrb	r1, [r9]
   1290c:	cmp	r1, #12
   12910:	bgt	12968 <dcngettext@plt+0x1850>
   12914:	b	129b8 <dcngettext@plt+0x18a0>
   12918:	movw	r0, #37220	; 0x9164
   1291c:	movt	r0, #2
   12920:	ldr	r0, [r0]
   12924:	ldr	r2, [r0, #20]
   12928:	ldr	r3, [r0, #24]
   1292c:	cmp	r2, r3
   12930:	bcs	12954 <dcngettext@plt+0x183c>
   12934:	add	r3, r2, #1
   12938:	add	r9, r9, #1
   1293c:	str	r3, [r0, #20]
   12940:	strb	r1, [r2]
   12944:	ldrb	r1, [r9]
   12948:	cmp	r1, #12
   1294c:	bgt	12968 <dcngettext@plt+0x1850>
   12950:	b	129b8 <dcngettext@plt+0x18a0>
   12954:	bl	11094 <__overflow@plt>
   12958:	add	r9, r9, #1
   1295c:	ldrb	r1, [r9]
   12960:	cmp	r1, #12
   12964:	ble	129b8 <dcngettext@plt+0x18a0>
   12968:	cmp	r1, #13
   1296c:	beq	12990 <dcngettext@plt+0x1878>
   12970:	cmp	r1, #92	; 0x5c
   12974:	bne	12918 <dcngettext@plt+0x1800>
   12978:	movw	r0, #37220	; 0x9164
   1297c:	movt	r0, #2
   12980:	ldr	r1, [r0]
   12984:	movw	r0, #34267	; 0x85db
   12988:	movt	r0, #1
   1298c:	b	129a4 <dcngettext@plt+0x188c>
   12990:	movw	r0, #37220	; 0x9164
   12994:	movt	r0, #2
   12998:	ldr	r1, [r0]
   1299c:	movw	r0, #34264	; 0x85d8
   129a0:	movt	r0, #1
   129a4:	bl	10ea8 <fputs_unlocked@plt>
   129a8:	add	r9, r9, #1
   129ac:	ldrb	r1, [r9]
   129b0:	cmp	r1, #12
   129b4:	bgt	12968 <dcngettext@plt+0x1850>
   129b8:	cmp	r1, #10
   129bc:	bne	129d8 <dcngettext@plt+0x18c0>
   129c0:	movw	r0, #37220	; 0x9164
   129c4:	movt	r0, #2
   129c8:	ldr	r1, [r0]
   129cc:	movw	r0, #34261	; 0x85d5
   129d0:	movt	r0, #1
   129d4:	b	129a4 <dcngettext@plt+0x188c>
   129d8:	cmp	r1, #0
   129dc:	bne	12918 <dcngettext@plt+0x1800>
   129e0:	movw	r1, #33874	; 0x8452
   129e4:	mov	r0, #0
   129e8:	mov	r2, #5
   129ec:	movt	r1, #1
   129f0:	bl	10f20 <dcgettext@plt>
   129f4:	movw	r1, #35545	; 0x8ad9
   129f8:	mov	r2, r0
   129fc:	mov	r0, #1
   12a00:	movt	r1, #1
   12a04:	bl	1104c <__printf_chk@plt>
   12a08:	b	12b90 <dcngettext@plt+0x1a78>
   12a0c:	mov	r0, r1
   12a10:	mov	r1, #92	; 0x5c
   12a14:	bl	11094 <__overflow@plt>
   12a18:	ldrb	r1, [r6]
   12a1c:	cmp	r1, #12
   12a20:	bgt	12a78 <dcngettext@plt+0x1960>
   12a24:	b	12ac8 <dcngettext@plt+0x19b0>
   12a28:	movw	r0, #37220	; 0x9164
   12a2c:	movt	r0, #2
   12a30:	ldr	r0, [r0]
   12a34:	ldr	r2, [r0, #20]
   12a38:	ldr	r3, [r0, #24]
   12a3c:	cmp	r2, r3
   12a40:	bcs	12a64 <dcngettext@plt+0x194c>
   12a44:	add	r3, r2, #1
   12a48:	add	r6, r6, #1
   12a4c:	str	r3, [r0, #20]
   12a50:	strb	r1, [r2]
   12a54:	ldrb	r1, [r6]
   12a58:	cmp	r1, #12
   12a5c:	bgt	12a78 <dcngettext@plt+0x1960>
   12a60:	b	12ac8 <dcngettext@plt+0x19b0>
   12a64:	bl	11094 <__overflow@plt>
   12a68:	add	r6, r6, #1
   12a6c:	ldrb	r1, [r6]
   12a70:	cmp	r1, #12
   12a74:	ble	12ac8 <dcngettext@plt+0x19b0>
   12a78:	cmp	r1, #13
   12a7c:	beq	12aa0 <dcngettext@plt+0x1988>
   12a80:	cmp	r1, #92	; 0x5c
   12a84:	bne	12a28 <dcngettext@plt+0x1910>
   12a88:	movw	r0, #37220	; 0x9164
   12a8c:	movt	r0, #2
   12a90:	ldr	r1, [r0]
   12a94:	movw	r0, #34267	; 0x85db
   12a98:	movt	r0, #1
   12a9c:	b	12ab4 <dcngettext@plt+0x199c>
   12aa0:	movw	r0, #37220	; 0x9164
   12aa4:	movt	r0, #2
   12aa8:	ldr	r1, [r0]
   12aac:	movw	r0, #34264	; 0x85d8
   12ab0:	movt	r0, #1
   12ab4:	bl	10ea8 <fputs_unlocked@plt>
   12ab8:	add	r6, r6, #1
   12abc:	ldrb	r1, [r6]
   12ac0:	cmp	r1, #12
   12ac4:	bgt	12a78 <dcngettext@plt+0x1960>
   12ac8:	cmp	r1, #10
   12acc:	bne	12ae8 <dcngettext@plt+0x19d0>
   12ad0:	movw	r0, #37220	; 0x9164
   12ad4:	movt	r0, #2
   12ad8:	ldr	r1, [r0]
   12adc:	movw	r0, #34261	; 0x85d5
   12ae0:	movt	r0, #1
   12ae4:	b	12ab4 <dcngettext@plt+0x199c>
   12ae8:	cmp	r1, #0
   12aec:	bne	12a28 <dcngettext@plt+0x1910>
   12af0:	cmp	r5, r4
   12af4:	beq	12b30 <dcngettext@plt+0x1a18>
   12af8:	movw	r1, #33894	; 0x8466
   12afc:	mov	r0, #0
   12b00:	mov	r2, #5
   12b04:	movt	r1, #1
   12b08:	bl	10f20 <dcgettext@plt>
   12b0c:	movw	r1, #35545	; 0x8ad9
   12b10:	mov	r2, r0
   12b14:	mov	r0, #1
   12b18:	movt	r1, #1
   12b1c:	bl	1104c <__printf_chk@plt>
   12b20:	str	r7, [sp, #40]	; 0x28
   12b24:	str	r8, [sp, #64]	; 0x40
   12b28:	sub	r5, fp, #52	; 0x34
   12b2c:	b	12b80 <dcngettext@plt+0x1a68>
   12b30:	movw	r0, #37228	; 0x916c
   12b34:	mov	r1, #1
   12b38:	sub	r5, fp, #52	; 0x34
   12b3c:	movt	r0, #2
   12b40:	str	r1, [sp, #36]	; 0x24
   12b44:	ldrb	r0, [r0, #2]
   12b48:	cmp	r0, #0
   12b4c:	bne	12b80 <dcngettext@plt+0x1a68>
   12b50:	movw	r1, #33901	; 0x846d
   12b54:	mov	r0, #0
   12b58:	mov	r2, #5
   12b5c:	movt	r1, #1
   12b60:	bl	10f20 <dcgettext@plt>
   12b64:	movw	r1, #35545	; 0x8ad9
   12b68:	mov	r2, r0
   12b6c:	mov	r0, #1
   12b70:	movt	r1, #1
   12b74:	str	r0, [sp, #36]	; 0x24
   12b78:	mov	r0, #1
   12b7c:	bl	1104c <__printf_chk@plt>
   12b80:	ldr	r7, [fp, #-84]	; 0xffffffac
   12b84:	ldr	r8, [sp, #100]	; 0x64
   12b88:	ldr	r4, [fp, #-88]	; 0xffffffa8
   12b8c:	sub	r6, fp, #56	; 0x38
   12b90:	mov	r0, #1
   12b94:	str	r0, [sp, #52]	; 0x34
   12b98:	ldrb	r0, [r8]
   12b9c:	tst	r0, #48	; 0x30
   12ba0:	beq	11c00 <dcngettext@plt+0xae8>
   12ba4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12ba8:	mov	sl, r7
   12bac:	bl	14634 <dcngettext@plt+0x351c>
   12bb0:	ldr	r0, [r8]
   12bb4:	mov	r5, #0
   12bb8:	ands	r4, r0, #32
   12bbc:	ldr	r0, [sp, #60]	; 0x3c
   12bc0:	mvneq	r5, #0
   12bc4:	cmp	r0, #0
   12bc8:	beq	12c68 <dcngettext@plt+0x1b50>
   12bcc:	mov	r0, r8
   12bd0:	bl	1448c <dcngettext@plt+0x3374>
   12bd4:	ldr	r7, [sp, #80]	; 0x50
   12bd8:	ldr	r6, [sp, #88]	; 0x58
   12bdc:	ldr	r3, [sp, #68]	; 0x44
   12be0:	movw	r9, #37220	; 0x9164
   12be4:	movw	r8, #37228	; 0x916c
   12be8:	cmp	r4, #0
   12bec:	movt	r9, #2
   12bf0:	movt	r8, #2
   12bf4:	bne	1302c <dcngettext@plt+0x1f14>
   12bf8:	ldr	r4, [sp, #64]	; 0x40
   12bfc:	cmp	r0, #0
   12c00:	beq	12c14 <dcngettext@plt+0x1afc>
   12c04:	mov	r5, r3
   12c08:	bl	1101c <__errno_location@plt>
   12c0c:	mov	r3, r5
   12c10:	ldr	r5, [r0]
   12c14:	cmp	r5, #0
   12c18:	bmi	12c98 <dcngettext@plt+0x1b80>
   12c1c:	movw	r4, #34599	; 0x8727
   12c20:	mov	sl, r6
   12c24:	movt	r4, #1
   12c28:	bne	12c44 <dcngettext@plt+0x1b2c>
   12c2c:	movw	r1, #33904	; 0x8470
   12c30:	mov	r0, #0
   12c34:	mov	r2, #5
   12c38:	movt	r1, #1
   12c3c:	bl	10f20 <dcgettext@plt>
   12c40:	mov	r4, r0
   12c44:	mov	r0, #0
   12c48:	mov	r1, #3
   12c4c:	mov	r2, sl
   12c50:	mov	r6, #0
   12c54:	bl	1641c <dcngettext@plt+0x5304>
   12c58:	mov	r3, r0
   12c5c:	mov	r0, #0
   12c60:	mov	r1, r5
   12c64:	b	13018 <dcngettext@plt+0x1f00>
   12c68:	mov	r0, r8
   12c6c:	bl	110c4 <clearerr_unlocked@plt>
   12c70:	ldr	r7, [sp, #80]	; 0x50
   12c74:	ldr	r6, [sp, #88]	; 0x58
   12c78:	ldr	r3, [sp, #68]	; 0x44
   12c7c:	ldr	r4, [sp, #64]	; 0x40
   12c80:	movw	r9, #37220	; 0x9164
   12c84:	movw	r8, #37228	; 0x916c
   12c88:	movt	r9, #2
   12c8c:	movt	r8, #2
   12c90:	cmp	r5, #0
   12c94:	bpl	12c1c <dcngettext@plt+0x1b04>
   12c98:	ldr	r0, [sp, #52]	; 0x34
   12c9c:	tst	r0, #1
   12ca0:	beq	12fdc <dcngettext@plt+0x1ec4>
   12ca4:	ldrb	r0, [r8]
   12ca8:	ldr	r2, [sp, #72]	; 0x48
   12cac:	cmp	r0, #0
   12cb0:	bne	12e94 <dcngettext@plt+0x1d7c>
   12cb4:	ldr	r1, [fp, #-100]	; 0xffffff9c
   12cb8:	str	r3, [sp, #68]	; 0x44
   12cbc:	orrs	r0, r1, sl
   12cc0:	beq	12d34 <dcngettext@plt+0x1c1c>
   12cc4:	cmp	sl, #0
   12cc8:	mov	r3, r1
   12ccc:	mov	r5, r1
   12cd0:	beq	12cf8 <dcngettext@plt+0x1be0>
   12cd4:	movw	r4, #16960	; 0x4240
   12cd8:	mov	r0, r5
   12cdc:	mov	r1, sl
   12ce0:	mov	r3, #0
   12ce4:	movt	r4, #15
   12ce8:	mov	r2, r4
   12cec:	bl	1784c <dcngettext@plt+0x6734>
   12cf0:	add	r3, r2, r4
   12cf4:	ldr	r4, [sp, #64]	; 0x40
   12cf8:	movw	r1, #33966	; 0x84ae
   12cfc:	movw	r2, #34009	; 0x84d9
   12d00:	mov	r0, #5
   12d04:	movt	r1, #1
   12d08:	movt	r2, #1
   12d0c:	str	r0, [sp]
   12d10:	mov	r0, #0
   12d14:	bl	11118 <dcngettext@plt>
   12d18:	mov	r2, r0
   12d1c:	mov	r0, #0
   12d20:	mov	r1, #0
   12d24:	stm	sp, {r5, sl}
   12d28:	bl	10f8c <error@plt>
   12d2c:	ldr	r2, [sp, #72]	; 0x48
   12d30:	ldr	r3, [sp, #68]	; 0x44
   12d34:	ldr	r1, [sp, #44]	; 0x2c
   12d38:	orrs	r0, r1, r3
   12d3c:	beq	12db4 <dcngettext@plt+0x1c9c>
   12d40:	cmp	r3, #0
   12d44:	mov	sl, r3
   12d48:	mov	r3, r1
   12d4c:	mov	r5, r1
   12d50:	beq	12d78 <dcngettext@plt+0x1c60>
   12d54:	movw	r4, #16960	; 0x4240
   12d58:	mov	r0, r5
   12d5c:	mov	r1, sl
   12d60:	mov	r3, #0
   12d64:	movt	r4, #15
   12d68:	mov	r2, r4
   12d6c:	bl	1784c <dcngettext@plt+0x6734>
   12d70:	add	r3, r2, r4
   12d74:	ldr	r4, [sp, #64]	; 0x40
   12d78:	movw	r1, #34054	; 0x8506
   12d7c:	movw	r2, #34098	; 0x8532
   12d80:	mov	r0, #5
   12d84:	movt	r1, #1
   12d88:	movt	r2, #1
   12d8c:	str	r0, [sp]
   12d90:	mov	r0, #0
   12d94:	bl	11118 <dcngettext@plt>
   12d98:	mov	r2, r0
   12d9c:	mov	r0, #0
   12da0:	mov	r1, #0
   12da4:	stm	sp, {r5, sl}
   12da8:	bl	10f8c <error@plt>
   12dac:	ldr	r2, [sp, #72]	; 0x48
   12db0:	mov	r3, sl
   12db4:	ldr	r1, [sp, #40]	; 0x28
   12db8:	orrs	r0, r1, r4
   12dbc:	beq	12e34 <dcngettext@plt+0x1d1c>
   12dc0:	cmp	r4, #0
   12dc4:	mov	r3, r1
   12dc8:	mov	r5, r1
   12dcc:	beq	12df4 <dcngettext@plt+0x1cdc>
   12dd0:	mov	r1, r4
   12dd4:	movw	r4, #16960	; 0x4240
   12dd8:	mov	r0, r5
   12ddc:	mov	r3, #0
   12de0:	movt	r4, #15
   12de4:	mov	r2, r4
   12de8:	bl	1784c <dcngettext@plt+0x6734>
   12dec:	add	r3, r2, r4
   12df0:	ldr	r4, [sp, #64]	; 0x40
   12df4:	movw	r1, #34143	; 0x855f
   12df8:	movw	r2, #34189	; 0x858d
   12dfc:	mov	r0, #5
   12e00:	movt	r1, #1
   12e04:	movt	r2, #1
   12e08:	str	r0, [sp]
   12e0c:	mov	r0, #0
   12e10:	bl	11118 <dcngettext@plt>
   12e14:	mov	r2, r0
   12e18:	mov	r0, #0
   12e1c:	mov	r1, #0
   12e20:	str	r5, [sp]
   12e24:	str	r4, [sp, #4]
   12e28:	bl	10f8c <error@plt>
   12e2c:	ldr	r2, [sp, #72]	; 0x48
   12e30:	ldr	r3, [sp, #68]	; 0x44
   12e34:	ldrb	r0, [r8, #3]
   12e38:	ldr	r1, [sp, #36]	; 0x24
   12e3c:	mvn	r0, r0
   12e40:	orr	r0, r1, r0
   12e44:	tst	r0, #1
   12e48:	bne	12e94 <dcngettext@plt+0x1d7c>
   12e4c:	movw	r1, #34236	; 0x85bc
   12e50:	mov	r0, #0
   12e54:	mov	r2, #5
   12e58:	movt	r1, #1
   12e5c:	bl	10f20 <dcgettext@plt>
   12e60:	mov	r4, r0
   12e64:	mov	r0, #0
   12e68:	mov	r1, #3
   12e6c:	mov	r2, r6
   12e70:	bl	1641c <dcngettext@plt+0x5304>
   12e74:	mov	r2, r4
   12e78:	ldr	r4, [sp, #64]	; 0x40
   12e7c:	mov	r3, r0
   12e80:	mov	r0, #0
   12e84:	mov	r1, #0
   12e88:	bl	10f8c <error@plt>
   12e8c:	ldr	r3, [sp, #68]	; 0x44
   12e90:	ldr	r2, [sp, #72]	; 0x48
   12e94:	ldr	r0, [sp, #44]	; 0x2c
   12e98:	ldr	r1, [sp, #40]	; 0x28
   12e9c:	mov	r6, #0
   12ea0:	orr	r0, r0, r1
   12ea4:	orr	r1, r3, r4
   12ea8:	orrs	r0, r0, r1
   12eac:	ldr	r1, [sp, #36]	; 0x24
   12eb0:	movwne	r0, #1
   12eb4:	mvn	r1, r1
   12eb8:	orr	r0, r1, r0
   12ebc:	tst	r0, #1
   12ec0:	bne	12ee4 <dcngettext@plt+0x1dcc>
   12ec4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   12ec8:	ldr	r1, [fp, #-96]	; 0xffffffa0
   12ecc:	orr	r0, r0, r1
   12ed0:	ldrb	r1, [r8, #4]
   12ed4:	clz	r0, r0
   12ed8:	lsr	r0, r0, #5
   12edc:	eor	r1, r1, #1
   12ee0:	orr	r6, r0, r1
   12ee4:	and	r4, r7, r6
   12ee8:	b	11944 <dcngettext@plt+0x82c>
   12eec:	ldr	r1, [r9]
   12ef0:	movw	r0, #34273	; 0x85e1
   12ef4:	movt	r0, #1
   12ef8:	bl	10ea8 <fputs_unlocked@plt>
   12efc:	ldrb	r0, [r8, #12]
   12f00:	ldr	r5, [sp, #32]
   12f04:	mov	r7, sl
   12f08:	movw	sl, #34278	; 0x85e6
   12f0c:	movt	sl, #1
   12f10:	cmp	r0, #1
   12f14:	bne	12f44 <dcngettext@plt+0x1e2c>
   12f18:	mov	r6, #0
   12f1c:	ldrb	r2, [r5, r6]
   12f20:	mov	r0, #1
   12f24:	mov	r1, sl
   12f28:	bl	1104c <__printf_chk@plt>
   12f2c:	ldrb	r0, [r8, #12]
   12f30:	add	r6, r6, #1
   12f34:	cmp	r0, #0
   12f38:	movwne	r0, #16
   12f3c:	cmp	r6, r0
   12f40:	bcc	12f1c <dcngettext@plt+0x1e04>
   12f44:	ldr	r0, [sp, #56]	; 0x38
   12f48:	ldr	r5, [sp, #80]	; 0x50
   12f4c:	tst	r0, #1
   12f50:	bne	11918 <dcngettext@plt+0x800>
   12f54:	ldr	r0, [r9]
   12f58:	ldr	r1, [r0, #20]
   12f5c:	ldr	r2, [r0, #24]
   12f60:	cmp	r1, r2
   12f64:	bcs	13048 <dcngettext@plt+0x1f30>
   12f68:	add	r2, r1, #1
   12f6c:	str	r2, [r0, #20]
   12f70:	mov	r0, #32
   12f74:	strb	r0, [r1]
   12f78:	ldr	r0, [r9]
   12f7c:	ldr	r1, [r0, #20]
   12f80:	ldr	r2, [r0, #24]
   12f84:	cmp	r1, r2
   12f88:	bcs	13054 <dcngettext@plt+0x1f3c>
   12f8c:	add	r2, r1, #1
   12f90:	str	r2, [r0, #20]
   12f94:	ldr	r0, [sp, #28]
   12f98:	strb	r0, [r1]
   12f9c:	cmp	r4, #0
   12fa0:	bne	1307c <dcngettext@plt+0x1f64>
   12fa4:	b	1190c <dcngettext@plt+0x7f4>
   12fa8:	bl	1101c <__errno_location@plt>
   12fac:	ldr	r4, [r0]
   12fb0:	mov	r0, #0
   12fb4:	mov	r1, #3
   12fb8:	mov	r2, sl
   12fbc:	mov	r6, #0
   12fc0:	bl	1641c <dcngettext@plt+0x5304>
   12fc4:	movw	r2, #34599	; 0x8727
   12fc8:	mov	r3, r0
   12fcc:	mov	r0, #0
   12fd0:	mov	r1, r4
   12fd4:	movt	r2, #1
   12fd8:	b	1301c <dcngettext@plt+0x1f04>
   12fdc:	movw	r1, #33919	; 0x847f
   12fe0:	mov	r0, #0
   12fe4:	mov	r2, #5
   12fe8:	mov	r5, r6
   12fec:	mov	r6, #0
   12ff0:	movt	r1, #1
   12ff4:	bl	10f20 <dcgettext@plt>
   12ff8:	mov	r4, r0
   12ffc:	mov	r0, #0
   13000:	mov	r1, #3
   13004:	mov	r2, r5
   13008:	bl	1641c <dcngettext@plt+0x5304>
   1300c:	mov	r3, r0
   13010:	mov	r0, #0
   13014:	mov	r1, #0
   13018:	mov	r2, r4
   1301c:	bl	10f8c <error@plt>
   13020:	ldr	r2, [sp, #72]	; 0x48
   13024:	and	r4, r7, r6
   13028:	b	11944 <dcngettext@plt+0x82c>
   1302c:	ldr	r4, [sp, #64]	; 0x40
   13030:	cmp	r5, #0
   13034:	bpl	12c1c <dcngettext@plt+0x1b04>
   13038:	b	12c98 <dcngettext@plt+0x1b80>
   1303c:	ldr	r1, [fp, #-84]	; 0xffffffac
   13040:	bl	11094 <__overflow@plt>
   13044:	b	1193c <dcngettext@plt+0x824>
   13048:	mov	r1, #32
   1304c:	bl	11094 <__overflow@plt>
   13050:	b	12f78 <dcngettext@plt+0x1e60>
   13054:	ldr	r1, [sp, #28]
   13058:	bl	11094 <__overflow@plt>
   1305c:	cmp	r4, #0
   13060:	bne	1307c <dcngettext@plt+0x1f64>
   13064:	b	1190c <dcngettext@plt+0x7f4>
   13068:	ldr	r1, [r9]
   1306c:	movw	r0, #34264	; 0x85d8
   13070:	movt	r0, #1
   13074:	bl	10ea8 <fputs_unlocked@plt>
   13078:	add	r7, r7, #1
   1307c:	ldrb	r1, [r7]
   13080:	cmp	r1, #12
   13084:	ble	130a8 <dcngettext@plt+0x1f90>
   13088:	cmp	r1, #13
   1308c:	beq	13068 <dcngettext@plt+0x1f50>
   13090:	cmp	r1, #92	; 0x5c
   13094:	bne	130c8 <dcngettext@plt+0x1fb0>
   13098:	ldr	r1, [r9]
   1309c:	movw	r0, #34267	; 0x85db
   130a0:	movt	r0, #1
   130a4:	b	13074 <dcngettext@plt+0x1f5c>
   130a8:	cmp	r1, #10
   130ac:	bne	130c0 <dcngettext@plt+0x1fa8>
   130b0:	ldr	r1, [r9]
   130b4:	movw	r0, #34261	; 0x85d5
   130b8:	movt	r0, #1
   130bc:	b	13074 <dcngettext@plt+0x1f5c>
   130c0:	cmp	r1, #0
   130c4:	beq	11918 <dcngettext@plt+0x800>
   130c8:	ldr	r0, [r9]
   130cc:	ldr	r2, [r0, #20]
   130d0:	ldr	r3, [r0, #24]
   130d4:	cmp	r2, r3
   130d8:	bcs	130ec <dcngettext@plt+0x1fd4>
   130dc:	add	r3, r2, #1
   130e0:	str	r3, [r0, #20]
   130e4:	strb	r1, [r2]
   130e8:	b	13078 <dcngettext@plt+0x1f60>
   130ec:	bl	11094 <__overflow@plt>
   130f0:	b	13078 <dcngettext@plt+0x1f60>
   130f4:	mov	r1, #92	; 0x5c
   130f8:	bl	11094 <__overflow@plt>
   130fc:	b	11a54 <dcngettext@plt+0x93c>
   13100:	ldrb	r0, [r8, #13]
   13104:	cmp	r0, #0
   13108:	beq	13124 <dcngettext@plt+0x200c>
   1310c:	movw	r0, #37216	; 0x9160
   13110:	movt	r0, #2
   13114:	ldr	r0, [r0]
   13118:	bl	1448c <dcngettext@plt+0x3374>
   1311c:	cmn	r0, #1
   13120:	beq	13278 <dcngettext@plt+0x2160>
   13124:	mov	r0, #1
   13128:	bic	r0, r0, r4
   1312c:	sub	sp, fp, #28
   13130:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13134:	movw	r1, #33798	; 0x8406
   13138:	mov	r0, #0
   1313c:	mov	r2, #5
   13140:	movt	r1, #1
   13144:	bl	10f20 <dcgettext@plt>
   13148:	ldr	r2, [sp, #88]	; 0x58
   1314c:	mov	r4, r0
   13150:	mov	r0, #0
   13154:	mov	r1, #3
   13158:	bl	1641c <dcngettext@plt+0x5304>
   1315c:	mov	r3, r0
   13160:	mov	r0, #1
   13164:	mov	r1, #0
   13168:	mov	r2, r4
   1316c:	bl	10f8c <error@plt>
   13170:	cmn	r0, #3
   13174:	bne	131d4 <dcngettext@plt+0x20bc>
   13178:	movw	r0, #37116	; 0x90fc
   1317c:	movw	r2, #32773	; 0x8005
   13180:	movw	r6, #32745	; 0x7fe9
   13184:	movw	r7, #32760	; 0x7ff8
   13188:	mov	r1, #0
   1318c:	movt	r0, #2
   13190:	movt	r2, #1
   13194:	movt	r6, #1
   13198:	movt	r7, #1
   1319c:	ldr	r3, [r0]
   131a0:	movw	r0, #37220	; 0x9164
   131a4:	stm	sp, {r6, r7}
   131a8:	str	r2, [sp, #8]
   131ac:	movw	r2, #32731	; 0x7fdb
   131b0:	str	r1, [sp, #12]
   131b4:	movw	r1, #32694	; 0x7fb6
   131b8:	movt	r0, #2
   131bc:	movt	r1, #1
   131c0:	movt	r2, #1
   131c4:	ldr	r0, [r0]
   131c8:	bl	16b78 <dcngettext@plt+0x5a60>
   131cc:	mov	r0, #0
   131d0:	bl	10fec <exit@plt>
   131d4:	cmn	r0, #2
   131d8:	bne	131e4 <dcngettext@plt+0x20cc>
   131dc:	mov	r0, #0
   131e0:	bl	11220 <dcngettext@plt+0x108>
   131e4:	mov	r0, #1
   131e8:	bl	11220 <dcngettext@plt+0x108>
   131ec:	movw	r1, #32786	; 0x8012
   131f0:	movt	r1, #1
   131f4:	b	13254 <dcngettext@plt+0x213c>
   131f8:	movw	r1, #32821	; 0x8035
   131fc:	movt	r1, #1
   13200:	b	13254 <dcngettext@plt+0x213c>
   13204:	movw	r1, #32881	; 0x8071
   13208:	movt	r1, #1
   1320c:	b	13254 <dcngettext@plt+0x213c>
   13210:	movw	r1, #32938	; 0x80aa
   13214:	movt	r1, #1
   13218:	b	13254 <dcngettext@plt+0x213c>
   1321c:	movw	r1, #33011	; 0x80f3
   13220:	movt	r1, #1
   13224:	b	13254 <dcngettext@plt+0x213c>
   13228:	movw	r1, #33083	; 0x813b
   1322c:	movt	r1, #1
   13230:	b	13254 <dcngettext@plt+0x213c>
   13234:	movw	r1, #33147	; 0x817b
   13238:	movt	r1, #1
   1323c:	b	13254 <dcngettext@plt+0x213c>
   13240:	movw	r1, #33209	; 0x81b9
   13244:	movt	r1, #1
   13248:	b	13254 <dcngettext@plt+0x213c>
   1324c:	movw	r1, #33272	; 0x81f8
   13250:	movt	r1, #1
   13254:	mov	r0, #0
   13258:	mov	r2, #5
   1325c:	bl	10f20 <dcgettext@plt>
   13260:	mov	r2, r0
   13264:	mov	r0, #0
   13268:	mov	r1, #0
   1326c:	bl	10f8c <error@plt>
   13270:	mov	r0, #1
   13274:	bl	11220 <dcngettext@plt+0x108>
   13278:	bl	1101c <__errno_location@plt>
   1327c:	movw	r1, #33336	; 0x8238
   13280:	ldr	r4, [r0]
   13284:	mov	r0, #0
   13288:	mov	r2, #5
   1328c:	movt	r1, #1
   13290:	bl	10f20 <dcgettext@plt>
   13294:	mov	r2, r0
   13298:	mov	r0, #1
   1329c:	mov	r1, r4
   132a0:	bl	10f8c <error@plt>
   132a4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   132a8:	add	fp, sp, #24
   132ac:	mov	r7, r1
   132b0:	movw	r1, #34738	; 0x87b2
   132b4:	mov	r6, r2
   132b8:	mov	r8, r0
   132bc:	movt	r1, #1
   132c0:	bl	10ecc <strcmp@plt>
   132c4:	mov	r5, r0
   132c8:	mov	r0, #0
   132cc:	cmp	r5, #0
   132d0:	strb	r0, [r6]
   132d4:	beq	13328 <dcngettext@plt+0x2210>
   132d8:	movw	r1, #34265	; 0x85d9
   132dc:	mov	r0, r8
   132e0:	movt	r1, #1
   132e4:	bl	14584 <dcngettext@plt+0x346c>
   132e8:	mov	r4, r0
   132ec:	cmp	r0, #0
   132f0:	bne	13344 <dcngettext@plt+0x222c>
   132f4:	movw	r0, #37228	; 0x916c
   132f8:	movt	r0, #2
   132fc:	ldrb	r4, [r0, #3]
   13300:	bl	1101c <__errno_location@plt>
   13304:	cmp	r4, #1
   13308:	bne	133f8 <dcngettext@plt+0x22e0>
   1330c:	ldr	r1, [r0]
   13310:	cmp	r1, #2
   13314:	bne	133f8 <dcngettext@plt+0x22e0>
   13318:	mov	r4, #1
   1331c:	mov	r0, r4
   13320:	strb	r4, [r6]
   13324:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13328:	movw	r0, #37228	; 0x916c
   1332c:	mov	r1, #1
   13330:	movt	r0, #2
   13334:	strb	r1, [r0, #13]
   13338:	movw	r0, #37216	; 0x9160
   1333c:	movt	r0, #2
   13340:	ldr	r4, [r0]
   13344:	mov	r0, r4
   13348:	mov	r1, #2
   1334c:	bl	14450 <dcngettext@plt+0x3338>
   13350:	mov	r0, r4
   13354:	mov	r1, r7
   13358:	bl	1353c <dcngettext@plt+0x2424>
   1335c:	cmp	r0, #0
   13360:	beq	133d0 <dcngettext@plt+0x22b8>
   13364:	bl	1101c <__errno_location@plt>
   13368:	ldr	r6, [r0]
   1336c:	mov	r0, r4
   13370:	cmp	r5, #0
   13374:	beq	133e0 <dcngettext@plt+0x22c8>
   13378:	bl	1448c <dcngettext@plt+0x3374>
   1337c:	cmp	r6, #0
   13380:	bne	13394 <dcngettext@plt+0x227c>
   13384:	cmp	r0, #0
   13388:	beq	13394 <dcngettext@plt+0x227c>
   1338c:	bl	1101c <__errno_location@plt>
   13390:	ldr	r6, [r0]
   13394:	cmp	r6, #0
   13398:	beq	133ec <dcngettext@plt+0x22d4>
   1339c:	mov	r0, #0
   133a0:	mov	r1, #3
   133a4:	mov	r2, r8
   133a8:	mov	r4, #0
   133ac:	bl	1641c <dcngettext@plt+0x5304>
   133b0:	movw	r2, #34599	; 0x8727
   133b4:	mov	r3, r0
   133b8:	mov	r0, #0
   133bc:	mov	r1, r6
   133c0:	movt	r2, #1
   133c4:	bl	10f8c <error@plt>
   133c8:	mov	r0, r4
   133cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   133d0:	mov	r6, #0
   133d4:	mov	r0, r4
   133d8:	cmp	r5, #0
   133dc:	bne	13378 <dcngettext@plt+0x2260>
   133e0:	bl	110c4 <clearerr_unlocked@plt>
   133e4:	cmp	r6, #0
   133e8:	bne	1339c <dcngettext@plt+0x2284>
   133ec:	mov	r4, #1
   133f0:	mov	r0, r4
   133f4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   133f8:	ldr	r5, [r0]
   133fc:	mov	r0, #0
   13400:	mov	r1, #3
   13404:	mov	r2, r8
   13408:	mov	r4, #0
   1340c:	bl	1641c <dcngettext@plt+0x5304>
   13410:	movw	r2, #34599	; 0x8727
   13414:	mov	r3, r0
   13418:	mov	r0, #0
   1341c:	mov	r1, r5
   13420:	movt	r2, #1
   13424:	bl	10f8c <error@plt>
   13428:	mov	r0, r4
   1342c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13430:	movw	r1, #37244	; 0x917c
   13434:	movt	r1, #2
   13438:	str	r0, [r1, #4]
   1343c:	bx	lr
   13440:	movw	r1, #37244	; 0x917c
   13444:	movt	r1, #2
   13448:	strb	r0, [r1]
   1344c:	bx	lr
   13450:	push	{r4, r5, r6, sl, fp, lr}
   13454:	add	fp, sp, #16
   13458:	sub	sp, sp, #8
   1345c:	movw	r0, #37220	; 0x9164
   13460:	movt	r0, #2
   13464:	ldr	r0, [r0]
   13468:	bl	17404 <dcngettext@plt+0x62ec>
   1346c:	cmp	r0, #0
   13470:	beq	13498 <dcngettext@plt+0x2380>
   13474:	movw	r5, #37244	; 0x917c
   13478:	movt	r5, #2
   1347c:	ldrb	r0, [r5]
   13480:	cmp	r0, #0
   13484:	beq	134c4 <dcngettext@plt+0x23ac>
   13488:	bl	1101c <__errno_location@plt>
   1348c:	ldr	r0, [r0]
   13490:	cmp	r0, #32
   13494:	bne	134c4 <dcngettext@plt+0x23ac>
   13498:	movw	r0, #37208	; 0x9158
   1349c:	movt	r0, #2
   134a0:	ldr	r0, [r0]
   134a4:	bl	17404 <dcngettext@plt+0x62ec>
   134a8:	cmp	r0, #0
   134ac:	subeq	sp, fp, #16
   134b0:	popeq	{r4, r5, r6, sl, fp, pc}
   134b4:	movw	r0, #37120	; 0x9100
   134b8:	movt	r0, #2
   134bc:	ldr	r0, [r0]
   134c0:	bl	10efc <_exit@plt>
   134c4:	movw	r1, #34583	; 0x8717
   134c8:	mov	r0, #0
   134cc:	mov	r2, #5
   134d0:	movt	r1, #1
   134d4:	bl	10f20 <dcgettext@plt>
   134d8:	ldr	r6, [r5, #4]
   134dc:	mov	r4, r0
   134e0:	bl	1101c <__errno_location@plt>
   134e4:	ldr	r5, [r0]
   134e8:	cmp	r6, #0
   134ec:	bne	13508 <dcngettext@plt+0x23f0>
   134f0:	movw	r2, #34599	; 0x8727
   134f4:	mov	r0, #0
   134f8:	mov	r1, r5
   134fc:	mov	r3, r4
   13500:	movt	r2, #1
   13504:	b	13528 <dcngettext@plt+0x2410>
   13508:	mov	r0, r6
   1350c:	bl	16340 <dcngettext@plt+0x5228>
   13510:	movw	r2, #34595	; 0x8723
   13514:	mov	r3, r0
   13518:	str	r4, [sp]
   1351c:	mov	r0, #0
   13520:	mov	r1, r5
   13524:	movt	r2, #1
   13528:	bl	10f8c <error@plt>
   1352c:	movw	r0, #37120	; 0x9100
   13530:	movt	r0, #2
   13534:	ldr	r0, [r0]
   13538:	bl	10efc <_exit@plt>
   1353c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13540:	add	fp, sp, #24
   13544:	sub	sp, sp, #160	; 0xa0
   13548:	mov	r6, r0
   1354c:	movw	r0, #32840	; 0x8048
   13550:	mov	r8, r1
   13554:	bl	17380 <dcngettext@plt+0x6268>
   13558:	cmp	r0, #0
   1355c:	beq	13608 <dcngettext@plt+0x24f0>
   13560:	add	r5, sp, #4
   13564:	mov	r4, r0
   13568:	mov	r0, r5
   1356c:	bl	13620 <dcngettext@plt+0x2508>
   13570:	b	13584 <dcngettext@plt+0x246c>
   13574:	mov	r0, r4
   13578:	mov	r1, #32768	; 0x8000
   1357c:	mov	r2, r5
   13580:	bl	1373c <dcngettext@plt+0x2624>
   13584:	mov	r7, #0
   13588:	ldrb	r0, [r6]
   1358c:	tst	r0, #16
   13590:	bne	135cc <dcngettext@plt+0x24b4>
   13594:	add	r0, r4, r7
   13598:	rsb	r2, r7, #32768	; 0x8000
   1359c:	mov	r1, #1
   135a0:	mov	r3, r6
   135a4:	bl	110e8 <fread_unlocked@plt>
   135a8:	add	r7, r0, r7
   135ac:	cmp	r7, #32768	; 0x8000
   135b0:	beq	13574 <dcngettext@plt+0x245c>
   135b4:	cmp	r0, #0
   135b8:	bne	13588 <dcngettext@plt+0x2470>
   135bc:	ldrb	r0, [r6]
   135c0:	mov	r5, #1
   135c4:	tst	r0, #32
   135c8:	bne	135f4 <dcngettext@plt+0x24dc>
   135cc:	cmp	r7, #0
   135d0:	beq	135e4 <dcngettext@plt+0x24cc>
   135d4:	add	r2, sp, #4
   135d8:	mov	r0, r4
   135dc:	mov	r1, r7
   135e0:	bl	14280 <dcngettext@plt+0x3168>
   135e4:	add	r0, sp, #4
   135e8:	mov	r1, r8
   135ec:	bl	13688 <dcngettext@plt+0x2570>
   135f0:	mov	r5, #0
   135f4:	mov	r0, r4
   135f8:	bl	14634 <dcngettext@plt+0x351c>
   135fc:	mov	r0, r5
   13600:	sub	sp, fp, #24
   13604:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13608:	mov	r5, #1
   1360c:	mov	r0, r5
   13610:	sub	sp, fp, #24
   13614:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
	...
   13620:	add	r2, pc, #40	; 0x28
   13624:	mov	r1, #0
   13628:	vld1.64	{d16-d17}, [r2 :128]
   1362c:	mov	r2, #20
   13630:	str	r1, [r0, #24]
   13634:	str	r1, [r0, #16]
   13638:	vst1.32	{d16-d17}, [r0], r2
   1363c:	str	r1, [r0]
   13640:	bx	lr
   13644:	nop	{0}
   13648:	nop	{0}
   1364c:	nop	{0}
   13650:	strbvs	r2, [r5, -r1, lsl #6]
   13654:	svc	0x00cdab89
   13658:	ldmls	sl!, {r1, r2, r3, r4, r5, r6, r7, sl, fp, ip, lr, pc}
   1365c:	eorsne	r5, r2, r6, ror r4
   13660:	ldr	r2, [r0]
   13664:	str	r2, [r1]
   13668:	ldr	r2, [r0, #4]
   1366c:	str	r2, [r1, #4]
   13670:	ldr	r2, [r0, #8]
   13674:	str	r2, [r1, #8]
   13678:	ldr	r0, [r0, #12]
   1367c:	str	r0, [r1, #12]
   13680:	mov	r0, r1
   13684:	bx	lr
   13688:	push	{r4, r5, r6, r7, fp, lr}
   1368c:	add	fp, sp, #16
   13690:	mov	r4, r1
   13694:	ldr	r1, [r0, #24]
   13698:	ldr	r2, [r0, #16]
   1369c:	mov	r5, r0
   136a0:	mov	r7, #32
   136a4:	add	r0, r2, r1
   136a8:	cmp	r1, #56	; 0x38
   136ac:	movwcc	r7, #16
   136b0:	cmp	r0, r2
   136b4:	str	r0, [r5, #16]
   136b8:	bcs	136c8 <dcngettext@plt+0x25b0>
   136bc:	ldr	r2, [r5, #20]
   136c0:	add	r2, r2, #1
   136c4:	str	r2, [r5, #20]
   136c8:	mvn	r2, #7
   136cc:	add	r6, r5, #28
   136d0:	lsl	r3, r0, #3
   136d4:	add	r2, r2, r7, lsl #2
   136d8:	add	ip, r6, r7, lsl #2
   136dc:	str	r3, [r6, r2]
   136e0:	sub	r2, r2, r1
   136e4:	ldr	r3, [r5, #20]
   136e8:	lsl	r3, r3, #3
   136ec:	orr	r0, r3, r0, lsr #29
   136f0:	str	r0, [ip, #-4]
   136f4:	add	r0, r6, r1
   136f8:	movw	r1, #34608	; 0x8730
   136fc:	movt	r1, #1
   13700:	bl	10f08 <memcpy@plt>
   13704:	lsl	r1, r7, #2
   13708:	mov	r0, r6
   1370c:	mov	r2, r5
   13710:	bl	1373c <dcngettext@plt+0x2624>
   13714:	ldr	r0, [r5]
   13718:	str	r0, [r4]
   1371c:	ldr	r0, [r5, #4]
   13720:	str	r0, [r4, #4]
   13724:	ldr	r0, [r5, #8]
   13728:	str	r0, [r4, #8]
   1372c:	ldr	r0, [r5, #12]
   13730:	str	r0, [r4, #12]
   13734:	mov	r0, r4
   13738:	pop	{r4, r5, r6, r7, fp, pc}
   1373c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13740:	add	fp, sp, #28
   13744:	sub	sp, sp, #88	; 0x58
   13748:	ldr	r3, [r2, #16]
   1374c:	adds	r3, r3, r1
   13750:	bic	r1, r1, #3
   13754:	str	r3, [r2, #16]
   13758:	add	lr, r0, r1
   1375c:	ldr	r3, [r2, #20]
   13760:	adc	r3, r3, #0
   13764:	cmp	lr, r0
   13768:	str	r3, [r2, #20]
   1376c:	ldr	r1, [r2, #12]
   13770:	ldm	r2, {r3, r4, ip}
   13774:	str	r2, [sp]
   13778:	bls	1418c <dcngettext@plt+0x3074>
   1377c:	mov	sl, r0
   13780:	str	lr, [sp, #4]
   13784:	eor	r2, ip, r1
   13788:	ldr	r0, [sl]
   1378c:	str	r3, [sp, #24]
   13790:	mov	r6, r4
   13794:	str	r1, [sp, #28]
   13798:	str	ip, [fp, #-40]	; 0xffffffd8
   1379c:	ldr	r5, [sl, #8]
   137a0:	ldr	lr, [sl, #12]
   137a4:	ldr	r8, [sl, #36]	; 0x24
   137a8:	and	r2, r4, r2
   137ac:	ldr	r4, [sl, #4]
   137b0:	eor	r7, r6, ip
   137b4:	eor	r2, r2, r1
   137b8:	add	r2, r3, r2
   137bc:	movw	r3, #42104	; 0xa478
   137c0:	movt	r3, #55146	; 0xd76a
   137c4:	add	r2, r2, r0
   137c8:	str	r5, [fp, #-36]	; 0xffffffdc
   137cc:	str	r0, [fp, #-44]	; 0xffffffd4
   137d0:	ldr	r0, [sl, #16]
   137d4:	str	lr, [fp, #-52]	; 0xffffffcc
   137d8:	str	r8, [fp, #-56]	; 0xffffffc8
   137dc:	str	r4, [fp, #-32]	; 0xffffffe0
   137e0:	add	r2, r2, r3
   137e4:	mov	r3, r6
   137e8:	add	r2, r6, r2, ror #25
   137ec:	add	r6, r1, r4
   137f0:	movw	r1, #46934	; 0xb756
   137f4:	str	r3, [sp, #20]
   137f8:	movt	r1, #59591	; 0xe8c7
   137fc:	str	r0, [sp, #44]	; 0x2c
   13800:	and	r7, r2, r7
   13804:	eor	r7, r7, ip
   13808:	ldr	ip, [sl, #24]
   1380c:	add	r7, r6, r7
   13810:	eor	r6, r2, r3
   13814:	add	r7, r7, r1
   13818:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1381c:	add	r7, r2, r7, ror #20
   13820:	str	ip, [sp, #48]	; 0x30
   13824:	and	r6, r7, r6
   13828:	add	r4, r1, r5
   1382c:	movw	r1, #28891	; 0x70db
   13830:	eor	r6, r6, r3
   13834:	add	r5, r3, lr
   13838:	movt	r1, #9248	; 0x2420
   1383c:	add	r6, r4, r6
   13840:	add	r6, r6, r1
   13844:	movw	r1, #52974	; 0xceee
   13848:	add	r4, r7, r6, ror #15
   1384c:	eor	r6, r7, r2
   13850:	movt	r1, #49597	; 0xc1bd
   13854:	and	r6, r4, r6
   13858:	eor	r6, r6, r2
   1385c:	add	r2, r0, r2
   13860:	ldr	r0, [sl, #20]
   13864:	add	r6, r5, r6
   13868:	add	r6, r6, r1
   1386c:	movw	r1, #4015	; 0xfaf
   13870:	add	r5, r4, r6, ror #10
   13874:	eor	r6, r4, r7
   13878:	movt	r1, #62844	; 0xf57c
   1387c:	str	r0, [sp, #32]
   13880:	and	r6, r5, r6
   13884:	eor	r6, r6, r7
   13888:	add	r7, r0, r7
   1388c:	ldr	r0, [sl, #28]
   13890:	add	r2, r2, r6
   13894:	movw	r6, #38145	; 0x9501
   13898:	add	r2, r2, r1
   1389c:	movw	r1, #50730	; 0xc62a
   138a0:	movt	r6, #64838	; 0xfd46
   138a4:	add	r3, r5, r2, ror #25
   138a8:	eor	r2, r5, r4
   138ac:	movt	r1, #18311	; 0x4787
   138b0:	str	r0, [sp, #16]
   138b4:	and	r2, r3, r2
   138b8:	eor	r2, r2, r4
   138bc:	add	r4, ip, r4
   138c0:	add	r2, r7, r2
   138c4:	add	r2, r2, r1
   138c8:	movw	r1, #17939	; 0x4613
   138cc:	add	r7, r3, r2, ror #20
   138d0:	eor	r2, r3, r5
   138d4:	movt	r1, #43056	; 0xa830
   138d8:	and	r2, r7, r2
   138dc:	eor	r2, r2, r5
   138e0:	add	r5, r0, r5
   138e4:	ldr	r0, [sl, #32]
   138e8:	add	r2, r4, r2
   138ec:	add	r2, r2, r1
   138f0:	add	r4, r7, r2, ror #15
   138f4:	eor	r2, r7, r3
   138f8:	str	r0, [sp, #40]	; 0x28
   138fc:	and	r2, r4, r2
   13900:	eor	r1, r2, r3
   13904:	add	r3, r0, r3
   13908:	ldr	r0, [sl, #40]	; 0x28
   1390c:	ldr	r2, [sl, #44]	; 0x2c
   13910:	add	r1, r5, r1
   13914:	eor	r5, r4, r7
   13918:	add	r1, r1, r6
   1391c:	movw	r6, #39128	; 0x98d8
   13920:	add	r1, r4, r1, ror #10
   13924:	movt	r6, #27008	; 0x6980
   13928:	str	r2, [fp, #-48]	; 0xffffffd0
   1392c:	str	r0, [sp, #52]	; 0x34
   13930:	and	r5, r1, r5
   13934:	eor	lr, r5, r7
   13938:	movw	r5, #63407	; 0xf7af
   1393c:	add	r7, r8, r7
   13940:	add	r3, r3, lr
   13944:	movt	r5, #35652	; 0x8b44
   13948:	add	r3, r3, r6
   1394c:	add	lr, r1, r3, ror #25
   13950:	eor	r3, r1, r4
   13954:	and	r3, lr, r3
   13958:	eor	r3, r3, r4
   1395c:	add	r4, r0, r4
   13960:	add	r3, r7, r3
   13964:	add	r3, r3, r5
   13968:	add	r7, lr, r3, ror #20
   1396c:	eor	r3, lr, r1
   13970:	and	r3, r7, r3
   13974:	eor	r5, r7, lr
   13978:	eor	r9, r3, r1
   1397c:	movw	r3, #42063	; 0xa44f
   13980:	add	r1, r2, r1
   13984:	add	r4, r4, r9
   13988:	sub	r4, r4, r3
   1398c:	movw	r3, #55230	; 0xd7be
   13990:	add	r4, r7, r4, ror #15
   13994:	movt	r3, #35164	; 0x895c
   13998:	and	r5, r4, r5
   1399c:	eor	r5, r5, lr
   139a0:	add	r1, r1, r5
   139a4:	add	r1, r1, r3
   139a8:	ldr	r3, [sl, #48]	; 0x30
   139ac:	add	r5, r4, r1, ror #10
   139b0:	eor	r1, r4, r7
   139b4:	and	r1, r5, r1
   139b8:	str	r3, [sp, #56]	; 0x38
   139bc:	add	r6, r3, lr
   139c0:	movw	r3, #4386	; 0x1122
   139c4:	eor	r1, r1, r7
   139c8:	movt	r3, #27536	; 0x6b90
   139cc:	add	r1, r6, r1
   139d0:	add	r1, r1, r3
   139d4:	ldr	r3, [sl, #56]	; 0x38
   139d8:	add	r6, r5, r1, ror #25
   139dc:	eor	r1, r5, r4
   139e0:	and	r1, r6, r1
   139e4:	eor	lr, r1, r4
   139e8:	ldr	r1, [sl, #52]	; 0x34
   139ec:	add	r4, r3, r4
   139f0:	mov	r9, r3
   139f4:	str	r3, [sp, #8]
   139f8:	movw	r3, #17294	; 0x438e
   139fc:	movt	r3, #42617	; 0xa679
   13a00:	add	r7, r1, r7
   13a04:	str	r1, [sp, #36]	; 0x24
   13a08:	movw	r1, #29075	; 0x7193
   13a0c:	movt	r1, #64920	; 0xfd98
   13a10:	add	r7, r7, lr
   13a14:	add	r7, r7, r1
   13a18:	eor	r1, r6, r5
   13a1c:	add	r7, r6, r7, ror #20
   13a20:	and	r1, r7, r1
   13a24:	eor	r1, r1, r5
   13a28:	add	r1, r4, r1
   13a2c:	eor	r4, r7, r6
   13a30:	add	r1, r1, r3
   13a34:	ldr	r3, [sl, #60]	; 0x3c
   13a38:	add	sl, sl, #64	; 0x40
   13a3c:	add	r1, r7, r1, ror #15
   13a40:	and	r4, r1, r4
   13a44:	add	r5, r3, r5
   13a48:	mov	lr, r3
   13a4c:	str	r3, [sp, #12]
   13a50:	movw	r3, #2081	; 0x821
   13a54:	eor	r4, r4, r6
   13a58:	movt	r3, #18868	; 0x49b4
   13a5c:	add	r4, r5, r4
   13a60:	add	r4, r4, r3
   13a64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13a68:	add	r4, r1, r4, ror #10
   13a6c:	eor	r5, r4, r1
   13a70:	and	r5, r5, r7
   13a74:	add	r6, r3, r6
   13a78:	movw	r3, #9570	; 0x2562
   13a7c:	add	r7, ip, r7
   13a80:	ldr	ip, [sp, #32]
   13a84:	eor	r5, r5, r1
   13a88:	movt	r3, #63006	; 0xf61e
   13a8c:	add	r5, r6, r5
   13a90:	add	r5, r5, r3
   13a94:	movw	r3, #45888	; 0xb340
   13a98:	add	r5, r4, r5, ror #27
   13a9c:	movt	r3, #49216	; 0xc040
   13aa0:	eor	r6, r5, r4
   13aa4:	and	r6, r6, r1
   13aa8:	add	r1, r2, r1
   13aac:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13ab0:	eor	r6, r6, r4
   13ab4:	add	r6, r7, r6
   13ab8:	add	r6, r6, r3
   13abc:	movw	r3, #23121	; 0x5a51
   13ac0:	add	r6, r5, r6, ror #23
   13ac4:	movt	r3, #9822	; 0x265e
   13ac8:	eor	r7, r6, r5
   13acc:	and	r7, r7, r4
   13ad0:	add	r4, r2, r4
   13ad4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13ad8:	eor	r7, r7, r5
   13adc:	add	r1, r1, r7
   13ae0:	add	r1, r1, r3
   13ae4:	movw	r3, #51114	; 0xc7aa
   13ae8:	add	r1, r6, r1, ror #18
   13aec:	movt	r3, #59830	; 0xe9b6
   13af0:	eor	r7, r1, r6
   13af4:	and	r7, r7, r5
   13af8:	add	r5, ip, r5
   13afc:	eor	r7, r7, r6
   13b00:	add	r4, r4, r7
   13b04:	add	r4, r4, r3
   13b08:	movw	r3, #4189	; 0x105d
   13b0c:	add	r4, r1, r4, ror #12
   13b10:	movt	r3, #54831	; 0xd62f
   13b14:	eor	r7, r4, r1
   13b18:	and	r7, r7, r6
   13b1c:	add	r6, r0, r6
   13b20:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13b24:	eor	r7, r7, r1
   13b28:	add	r5, r5, r7
   13b2c:	add	r5, r5, r3
   13b30:	movw	r3, #5203	; 0x1453
   13b34:	add	r5, r4, r5, ror #27
   13b38:	movt	r3, #580	; 0x244
   13b3c:	eor	r7, r5, r4
   13b40:	and	r7, r7, r1
   13b44:	add	r1, lr, r1
   13b48:	ldr	lr, [sp, #44]	; 0x2c
   13b4c:	eor	r7, r7, r4
   13b50:	add	r6, r6, r7
   13b54:	add	r6, r6, r3
   13b58:	movw	r3, #59009	; 0xe681
   13b5c:	add	r6, r5, r6, ror #23
   13b60:	movt	r3, #55457	; 0xd8a1
   13b64:	eor	r7, r6, r5
   13b68:	and	r7, r7, r4
   13b6c:	add	r4, lr, r4
   13b70:	eor	r7, r7, r5
   13b74:	add	r1, r1, r7
   13b78:	add	r1, r1, r3
   13b7c:	movw	r3, #64456	; 0xfbc8
   13b80:	add	r1, r6, r1, ror #18
   13b84:	movt	r3, #59347	; 0xe7d3
   13b88:	eor	r7, r1, r6
   13b8c:	and	r7, r7, r5
   13b90:	add	r5, r8, r5
   13b94:	ldr	r8, [sp, #36]	; 0x24
   13b98:	eor	r7, r7, r6
   13b9c:	add	r4, r4, r7
   13ba0:	add	r4, r4, r3
   13ba4:	movw	r3, #52710	; 0xcde6
   13ba8:	add	r4, r1, r4, ror #12
   13bac:	movt	r3, #8673	; 0x21e1
   13bb0:	eor	r7, r4, r1
   13bb4:	and	r7, r7, r6
   13bb8:	add	r6, r9, r6
   13bbc:	ldr	r9, [sp, #56]	; 0x38
   13bc0:	eor	r7, r7, r1
   13bc4:	add	r5, r5, r7
   13bc8:	add	r5, r5, r3
   13bcc:	movw	r3, #2006	; 0x7d6
   13bd0:	add	r5, r4, r5, ror #27
   13bd4:	movt	r3, #49975	; 0xc337
   13bd8:	eor	r7, r5, r4
   13bdc:	and	r7, r7, r1
   13be0:	add	r1, r0, r1
   13be4:	ldr	r0, [sp, #40]	; 0x28
   13be8:	eor	r7, r7, r4
   13bec:	add	r6, r6, r7
   13bf0:	add	r6, r6, r3
   13bf4:	movw	r3, #3463	; 0xd87
   13bf8:	add	r6, r5, r6, ror #23
   13bfc:	movt	r3, #62677	; 0xf4d5
   13c00:	eor	r7, r6, r5
   13c04:	and	r7, r7, r4
   13c08:	add	r4, r0, r4
   13c0c:	eor	r7, r7, r5
   13c10:	add	r1, r1, r7
   13c14:	add	r1, r1, r3
   13c18:	movw	r3, #5357	; 0x14ed
   13c1c:	add	r1, r6, r1, ror #18
   13c20:	movt	r3, #17754	; 0x455a
   13c24:	eor	r7, r1, r6
   13c28:	and	r7, r7, r5
   13c2c:	add	r5, r8, r5
   13c30:	eor	r7, r7, r6
   13c34:	add	r4, r4, r7
   13c38:	add	r4, r4, r3
   13c3c:	movw	r3, #59653	; 0xe905
   13c40:	add	r4, r1, r4, ror #12
   13c44:	movt	r3, #43491	; 0xa9e3
   13c48:	eor	r7, r4, r1
   13c4c:	and	r7, r7, r6
   13c50:	add	r6, r2, r6
   13c54:	ldr	r2, [sp, #16]
   13c58:	eor	r7, r7, r1
   13c5c:	add	r5, r5, r7
   13c60:	add	r5, r5, r3
   13c64:	movw	r3, #41976	; 0xa3f8
   13c68:	add	r5, r4, r5, ror #27
   13c6c:	movt	r3, #64751	; 0xfcef
   13c70:	eor	r7, r5, r4
   13c74:	and	r7, r7, r1
   13c78:	add	r1, r2, r1
   13c7c:	eor	r7, r7, r4
   13c80:	add	r6, r6, r7
   13c84:	add	r6, r6, r3
   13c88:	movw	r3, #729	; 0x2d9
   13c8c:	add	r6, r5, r6, ror #23
   13c90:	movt	r3, #26479	; 0x676f
   13c94:	eor	r7, r6, r5
   13c98:	and	r7, r7, r4
   13c9c:	add	r4, r9, r4
   13ca0:	ldr	r9, [fp, #-52]	; 0xffffffcc
   13ca4:	eor	r7, r7, r5
   13ca8:	add	r1, r1, r7
   13cac:	add	r1, r1, r3
   13cb0:	add	r1, r6, r1, ror #18
   13cb4:	eor	r7, r1, r6
   13cb8:	and	r3, r7, r5
   13cbc:	add	r5, ip, r5
   13cc0:	ldr	ip, [sp, #8]
   13cc4:	eor	r3, r3, r6
   13cc8:	add	r6, r0, r6
   13ccc:	ldr	r0, [sp, #48]	; 0x30
   13cd0:	add	r3, r4, r3
   13cd4:	movw	r4, #19594	; 0x4c8a
   13cd8:	movt	r4, #36138	; 0x8d2a
   13cdc:	add	r3, r3, r4
   13ce0:	add	r3, r1, r3, ror #12
   13ce4:	eor	r4, r7, r3
   13ce8:	ldr	r7, [fp, #-48]	; 0xffffffd0
   13cec:	add	r4, r5, r4
   13cf0:	movw	r5, #14658	; 0x3942
   13cf4:	movt	r5, #65530	; 0xfffa
   13cf8:	add	r4, r4, r5
   13cfc:	eor	r5, r3, r1
   13d00:	add	r1, r7, r1
   13d04:	ldr	r7, [fp, #-32]	; 0xffffffe0
   13d08:	add	r4, r3, r4, ror #28
   13d0c:	eor	r5, r5, r4
   13d10:	add	r5, r6, r5
   13d14:	movw	r6, #63105	; 0xf681
   13d18:	movt	r6, #34673	; 0x8771
   13d1c:	add	r5, r5, r6
   13d20:	eor	r6, r4, r3
   13d24:	add	r3, ip, r3
   13d28:	add	r5, r4, r5, ror #21
   13d2c:	eor	r6, r6, r5
   13d30:	add	r1, r1, r6
   13d34:	movw	r6, #24866	; 0x6122
   13d38:	movt	r6, #28061	; 0x6d9d
   13d3c:	add	r1, r1, r6
   13d40:	eor	r6, r5, r4
   13d44:	add	r4, r7, r4
   13d48:	ldr	r7, [sp, #52]	; 0x34
   13d4c:	add	r1, r5, r1, ror #16
   13d50:	eor	r6, r6, r1
   13d54:	add	r3, r3, r6
   13d58:	movw	r6, #14348	; 0x380c
   13d5c:	movt	r6, #64997	; 0xfde5
   13d60:	add	r3, r3, r6
   13d64:	eor	r6, r1, r5
   13d68:	add	r5, lr, r5
   13d6c:	ldr	lr, [sp, #12]
   13d70:	add	r3, r1, r3, ror #9
   13d74:	eor	r6, r6, r3
   13d78:	add	r4, r4, r6
   13d7c:	movw	r6, #59972	; 0xea44
   13d80:	movt	r6, #42174	; 0xa4be
   13d84:	add	r4, r4, r6
   13d88:	eor	r6, r3, r1
   13d8c:	add	r1, r2, r1
   13d90:	add	r4, r3, r4, ror #28
   13d94:	eor	r6, r6, r4
   13d98:	add	r5, r5, r6
   13d9c:	movw	r6, #53161	; 0xcfa9
   13da0:	movt	r6, #19422	; 0x4bde
   13da4:	add	r5, r5, r6
   13da8:	eor	r6, r4, r3
   13dac:	add	r3, r7, r3
   13db0:	ldr	r7, [fp, #-36]	; 0xffffffdc
   13db4:	add	r5, r4, r5, ror #21
   13db8:	eor	r6, r6, r5
   13dbc:	add	r1, r1, r6
   13dc0:	movw	r6, #19296	; 0x4b60
   13dc4:	movt	r6, #63163	; 0xf6bb
   13dc8:	add	r1, r1, r6
   13dcc:	eor	r6, r5, r4
   13dd0:	add	r4, r8, r4
   13dd4:	ldr	r8, [fp, #-44]	; 0xffffffd4
   13dd8:	add	r1, r5, r1, ror #16
   13ddc:	eor	r6, r6, r1
   13de0:	add	r3, r3, r6
   13de4:	movw	r6, #48240	; 0xbc70
   13de8:	movt	r6, #48831	; 0xbebf
   13dec:	add	r3, r3, r6
   13df0:	eor	r6, r1, r5
   13df4:	add	r5, r8, r5
   13df8:	add	r3, r1, r3, ror #9
   13dfc:	eor	r6, r6, r3
   13e00:	add	r4, r4, r6
   13e04:	movw	r6, #32454	; 0x7ec6
   13e08:	movt	r6, #10395	; 0x289b
   13e0c:	add	r4, r4, r6
   13e10:	eor	r6, r3, r1
   13e14:	add	r1, r9, r1
   13e18:	add	r4, r3, r4, ror #28
   13e1c:	eor	r6, r6, r4
   13e20:	add	r5, r5, r6
   13e24:	movw	r6, #10234	; 0x27fa
   13e28:	movt	r6, #60065	; 0xeaa1
   13e2c:	add	r5, r5, r6
   13e30:	eor	r6, r4, r3
   13e34:	add	r3, r0, r3
   13e38:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13e3c:	add	r5, r4, r5, ror #21
   13e40:	eor	r6, r6, r5
   13e44:	add	r1, r1, r6
   13e48:	movw	r6, #12421	; 0x3085
   13e4c:	movt	r6, #54511	; 0xd4ef
   13e50:	add	r1, r1, r6
   13e54:	eor	r6, r5, r4
   13e58:	add	r4, r0, r4
   13e5c:	ldr	r0, [sp, #56]	; 0x38
   13e60:	add	r1, r5, r1, ror #16
   13e64:	eor	r6, r6, r1
   13e68:	add	r3, r3, r6
   13e6c:	movw	r6, #7429	; 0x1d05
   13e70:	movt	r6, #1160	; 0x488
   13e74:	add	r3, r3, r6
   13e78:	eor	r6, r1, r5
   13e7c:	add	r5, r0, r5
   13e80:	add	r3, r1, r3, ror #9
   13e84:	eor	r6, r6, r3
   13e88:	add	r4, r4, r6
   13e8c:	movw	r6, #53305	; 0xd039
   13e90:	movt	r6, #55764	; 0xd9d4
   13e94:	add	r4, r4, r6
   13e98:	eor	r6, r3, r1
   13e9c:	add	r1, lr, r1
   13ea0:	add	r4, r3, r4, ror #28
   13ea4:	eor	r6, r6, r4
   13ea8:	add	r5, r5, r6
   13eac:	movw	r6, #39397	; 0x99e5
   13eb0:	movt	r6, #59099	; 0xe6db
   13eb4:	add	r5, r5, r6
   13eb8:	eor	r6, r4, r3
   13ebc:	add	r3, r7, r3
   13ec0:	ldr	r7, [sp, #32]
   13ec4:	add	r5, r4, r5, ror #21
   13ec8:	eor	r6, r6, r5
   13ecc:	add	r2, r2, r5
   13ed0:	add	r1, r1, r6
   13ed4:	movw	r6, #31992	; 0x7cf8
   13ed8:	movt	r6, #8098	; 0x1fa2
   13edc:	add	r1, r1, r6
   13ee0:	eor	r6, r5, r4
   13ee4:	add	r4, r8, r4
   13ee8:	add	r1, r5, r1, ror #16
   13eec:	eor	r6, r6, r1
   13ef0:	add	r3, r3, r6
   13ef4:	movw	r6, #22117	; 0x5665
   13ef8:	movt	r6, #50348	; 0xc4ac
   13efc:	add	r3, r3, r6
   13f00:	mvn	r6, r5
   13f04:	movw	r5, #65431	; 0xff97
   13f08:	add	r3, r1, r3, ror #9
   13f0c:	movt	r5, #17194	; 0x432a
   13f10:	orr	r6, r3, r6
   13f14:	eor	r6, r6, r1
   13f18:	add	r4, r4, r6
   13f1c:	movw	r6, #8772	; 0x2244
   13f20:	movt	r6, #62505	; 0xf429
   13f24:	add	r4, r4, r6
   13f28:	mvn	r6, r1
   13f2c:	add	r1, ip, r1
   13f30:	ldr	ip, [fp, #-40]	; 0xffffffd8
   13f34:	add	r4, r3, r4, ror #26
   13f38:	orr	r6, r4, r6
   13f3c:	eor	r6, r6, r3
   13f40:	add	r2, r2, r6
   13f44:	add	r2, r2, r5
   13f48:	mvn	r5, r3
   13f4c:	add	r3, r7, r3
   13f50:	add	r2, r4, r2, ror #22
   13f54:	orr	r5, r2, r5
   13f58:	eor	r5, r5, r4
   13f5c:	add	r1, r1, r5
   13f60:	movw	r5, #9127	; 0x23a7
   13f64:	movt	r5, #43924	; 0xab94
   13f68:	add	r1, r1, r5
   13f6c:	mvn	r5, r4
   13f70:	add	r4, r0, r4
   13f74:	ldr	r0, [sp, #52]	; 0x34
   13f78:	add	r1, r2, r1, ror #17
   13f7c:	orr	r5, r1, r5
   13f80:	eor	r5, r5, r2
   13f84:	add	r3, r3, r5
   13f88:	movw	r5, #41017	; 0xa039
   13f8c:	movt	r5, #64659	; 0xfc93
   13f90:	add	r3, r3, r5
   13f94:	mvn	r5, r2
   13f98:	add	r2, r9, r2
   13f9c:	add	r3, r1, r3, ror #11
   13fa0:	orr	r5, r3, r5
   13fa4:	eor	r5, r5, r1
   13fa8:	add	r4, r4, r5
   13fac:	movw	r5, #22979	; 0x59c3
   13fb0:	movt	r5, #25947	; 0x655b
   13fb4:	add	r4, r4, r5
   13fb8:	mvn	r5, r1
   13fbc:	add	r1, r0, r1
   13fc0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13fc4:	add	r4, r3, r4, ror #26
   13fc8:	orr	r5, r4, r5
   13fcc:	eor	r5, r5, r3
   13fd0:	add	r2, r2, r5
   13fd4:	movw	r5, #52370	; 0xcc92
   13fd8:	movt	r5, #36620	; 0x8f0c
   13fdc:	add	r2, r2, r5
   13fe0:	mvn	r5, r3
   13fe4:	add	r3, r0, r3
   13fe8:	ldr	r0, [sp, #40]	; 0x28
   13fec:	add	r2, r4, r2, ror #22
   13ff0:	orr	r5, r2, r5
   13ff4:	eor	r5, r5, r4
   13ff8:	add	r1, r1, r5
   13ffc:	movw	r5, #62589	; 0xf47d
   14000:	movt	r5, #65519	; 0xffef
   14004:	add	r1, r1, r5
   14008:	mvn	r5, r4
   1400c:	add	r4, r0, r4
   14010:	ldr	r0, [sp, #48]	; 0x30
   14014:	add	r1, r2, r1, ror #17
   14018:	orr	r5, r1, r5
   1401c:	eor	r5, r5, r2
   14020:	add	r3, r3, r5
   14024:	movw	r5, #24017	; 0x5dd1
   14028:	movt	r5, #34180	; 0x8584
   1402c:	add	r3, r3, r5
   14030:	mvn	r5, r2
   14034:	add	r2, lr, r2
   14038:	ldr	lr, [sp, #4]
   1403c:	add	r3, r1, r3, ror #11
   14040:	orr	r5, r3, r5
   14044:	mvn	r7, r3
   14048:	eor	r5, r5, r1
   1404c:	cmp	sl, lr
   14050:	add	r4, r4, r5
   14054:	movw	r5, #32335	; 0x7e4f
   14058:	movt	r5, #28584	; 0x6fa8
   1405c:	add	r4, r4, r5
   14060:	mvn	r5, r1
   14064:	add	r1, r0, r1
   14068:	ldr	r0, [sp, #36]	; 0x24
   1406c:	add	r4, r3, r4, ror #26
   14070:	orr	r5, r4, r5
   14074:	eor	r5, r5, r3
   14078:	add	r3, r0, r3
   1407c:	ldr	r0, [sp, #44]	; 0x2c
   14080:	add	r2, r2, r5
   14084:	movw	r5, #59104	; 0xe6e0
   14088:	movt	r5, #65068	; 0xfe2c
   1408c:	add	r2, r2, r5
   14090:	movw	r5, #17172	; 0x4314
   14094:	add	r6, r0, r4
   14098:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1409c:	add	r2, r4, r2, ror #22
   140a0:	movt	r5, #41729	; 0xa301
   140a4:	orr	r7, r2, r7
   140a8:	eor	r7, r7, r4
   140ac:	add	r1, r1, r7
   140b0:	mvn	r7, r4
   140b4:	movw	r4, #32386	; 0x7e82
   140b8:	add	r1, r1, r5
   140bc:	movw	r5, #4513	; 0x11a1
   140c0:	movt	r4, #63315	; 0xf753
   140c4:	add	r1, r2, r1, ror #17
   140c8:	movt	r5, #19976	; 0x4e08
   140cc:	orr	r7, r1, r7
   140d0:	eor	r7, r7, r2
   140d4:	add	r3, r3, r7
   140d8:	mvn	r7, r2
   140dc:	add	r2, r0, r2
   140e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   140e4:	add	r3, r3, r5
   140e8:	add	r3, r1, r3, ror #11
   140ec:	orr	r7, r3, r7
   140f0:	eor	r7, r7, r1
   140f4:	add	r7, r6, r7
   140f8:	mvn	r6, r1
   140fc:	add	r1, r0, r1
   14100:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14104:	add	r7, r7, r4
   14108:	movw	r4, #62005	; 0xf235
   1410c:	add	r7, r3, r7, ror #26
   14110:	movt	r4, #48442	; 0xbd3a
   14114:	orr	r6, r7, r6
   14118:	mvn	r5, r7
   1411c:	eor	r6, r6, r3
   14120:	add	r2, r2, r6
   14124:	mvn	r6, r3
   14128:	add	r3, r0, r3
   1412c:	add	r2, r2, r4
   14130:	movw	r4, #53947	; 0xd2bb
   14134:	add	r2, r7, r2, ror #22
   14138:	movt	r4, #10967	; 0x2ad7
   1413c:	orr	r6, r2, r6
   14140:	eor	r6, r6, r7
   14144:	add	r1, r1, r6
   14148:	add	r1, r1, r4
   1414c:	ldr	r4, [sp, #20]
   14150:	add	r1, r2, r1, ror #17
   14154:	orr	r5, r1, r5
   14158:	add	ip, r1, ip
   1415c:	add	r6, r1, r4
   14160:	movw	r4, #54161	; 0xd391
   14164:	eor	r5, r5, r2
   14168:	ldr	r1, [sp, #28]
   1416c:	movt	r4, #60294	; 0xeb86
   14170:	add	r3, r3, r5
   14174:	add	r3, r3, r4
   14178:	add	r4, r6, r3, ror #11
   1417c:	ldr	r3, [sp, #24]
   14180:	add	r1, r2, r1
   14184:	add	r3, r7, r3
   14188:	bcc	13784 <dcngettext@plt+0x266c>
   1418c:	ldr	r0, [sp]
   14190:	stm	r0, {r3, r4, ip}
   14194:	str	r1, [r0, #12]
   14198:	sub	sp, fp, #28
   1419c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   141a0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   141a4:	add	fp, sp, #24
   141a8:	sub	sp, sp, #160	; 0xa0
   141ac:	mov	r8, r2
   141b0:	add	r2, pc, #184	; 0xb8
   141b4:	add	r5, sp, #4
   141b8:	vld1.64	{d16-d17}, [r2 :128]
   141bc:	mov	r2, #20
   141c0:	mov	r3, r5
   141c4:	vst1.32	{d16-d17}, [r3], r2
   141c8:	mov	r2, #0
   141cc:	str	r2, [r3]
   141d0:	str	r2, [sp, #28]
   141d4:	str	r2, [sp, #20]
   141d8:	mov	r2, r5
   141dc:	bl	14280 <dcngettext@plt+0x3168>
   141e0:	ldr	r1, [sp, #28]
   141e4:	ldr	r2, [sp, #20]
   141e8:	mov	r7, #32
   141ec:	add	r0, r2, r1
   141f0:	cmp	r1, #56	; 0x38
   141f4:	movwcc	r7, #16
   141f8:	cmp	r0, r2
   141fc:	str	r0, [sp, #20]
   14200:	bcs	14210 <dcngettext@plt+0x30f8>
   14204:	ldr	r2, [sp, #24]
   14208:	add	r2, r2, #1
   1420c:	str	r2, [sp, #24]
   14210:	mvn	r2, #7
   14214:	add	r6, r5, #28
   14218:	lsl	r3, r0, #3
   1421c:	add	r2, r2, r7, lsl #2
   14220:	str	r3, [r6, r2]
   14224:	add	r3, r6, r7, lsl #2
   14228:	sub	r2, r2, r1
   1422c:	ldr	r4, [sp, #24]
   14230:	lsl	r4, r4, #3
   14234:	orr	r0, r4, r0, lsr #29
   14238:	str	r0, [r3, #-4]
   1423c:	add	r0, r6, r1
   14240:	movw	r1, #34608	; 0x8730
   14244:	movt	r1, #1
   14248:	bl	10f08 <memcpy@plt>
   1424c:	lsl	r1, r7, #2
   14250:	mov	r0, r6
   14254:	mov	r2, r5
   14258:	bl	1373c <dcngettext@plt+0x2624>
   1425c:	vld1.32	{d16-d17}, [r5]
   14260:	mov	r0, r8
   14264:	vst1.8	{d16-d17}, [r8]
   14268:	sub	sp, fp, #24
   1426c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14270:	strbvs	r2, [r5, -r1, lsl #6]
   14274:	svc	0x00cdab89
   14278:	ldmls	sl!, {r1, r2, r3, r4, r5, r6, r7, sl, fp, ip, lr, pc}
   1427c:	eorsne	r5, r2, r6, ror r4
   14280:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14284:	add	fp, sp, #28
   14288:	sub	sp, sp, #12
   1428c:	ldr	r5, [r2, #24]
   14290:	mov	r4, r2
   14294:	mov	r8, r1
   14298:	mov	r6, r0
   1429c:	cmp	r5, #0
   142a0:	beq	14310 <dcngettext@plt+0x31f8>
   142a4:	rsb	r7, r5, #128	; 0x80
   142a8:	add	r9, r4, #28
   142ac:	mov	r1, r6
   142b0:	cmp	r7, r8
   142b4:	add	r0, r9, r5
   142b8:	movhi	r7, r8
   142bc:	mov	r2, r7
   142c0:	bl	10f08 <memcpy@plt>
   142c4:	ldr	r0, [r4, #24]
   142c8:	add	r0, r0, r7
   142cc:	cmp	r0, #65	; 0x41
   142d0:	str	r0, [r4, #24]
   142d4:	bcc	14308 <dcngettext@plt+0x31f0>
   142d8:	bic	r1, r0, #63	; 0x3f
   142dc:	mov	r0, r9
   142e0:	mov	r2, r4
   142e4:	bl	1373c <dcngettext@plt+0x2624>
   142e8:	ldr	r0, [r4, #24]
   142ec:	and	r2, r0, #63	; 0x3f
   142f0:	add	r0, r7, r5
   142f4:	bic	r0, r0, #63	; 0x3f
   142f8:	str	r2, [r4, #24]
   142fc:	add	r1, r9, r0
   14300:	mov	r0, r9
   14304:	bl	10f08 <memcpy@plt>
   14308:	sub	r8, r8, r7
   1430c:	add	r6, r6, r7
   14310:	cmp	r8, #64	; 0x40
   14314:	bcc	143b4 <dcngettext@plt+0x329c>
   14318:	tst	r6, #3
   1431c:	beq	143c8 <dcngettext@plt+0x32b0>
   14320:	cmp	r8, #65	; 0x41
   14324:	bcc	143f0 <dcngettext@plt+0x32d8>
   14328:	add	r5, r4, #28
   1432c:	sub	r0, r8, #65	; 0x41
   14330:	mov	r7, r6
   14334:	str	r8, [sp, #8]
   14338:	bic	r0, r0, #63	; 0x3f
   1433c:	add	sl, r5, #32
   14340:	add	r9, r5, #16
   14344:	str	r0, [sp, #4]
   14348:	mov	r0, #64	; 0x40
   1434c:	add	r1, r6, #48	; 0x30
   14350:	mov	r2, r4
   14354:	vld1.8	{d16-d17}, [r7], r0
   14358:	add	r0, r6, #32
   1435c:	vld1.8	{d18-d19}, [r1]
   14360:	mov	r1, #48	; 0x30
   14364:	vld1.8	{d20-d21}, [r0]
   14368:	mov	r0, r5
   1436c:	vst1.8	{d16-d17}, [r0], r1
   14370:	add	r1, r6, #16
   14374:	vld1.8	{d16-d17}, [r1]
   14378:	vst1.8	{d18-d19}, [r0]
   1437c:	mov	r0, r5
   14380:	mov	r1, #64	; 0x40
   14384:	vst1.8	{d20-d21}, [sl]
   14388:	vst1.8	{d16-d17}, [r9]
   1438c:	bl	1373c <dcngettext@plt+0x2624>
   14390:	sub	r8, r8, #64	; 0x40
   14394:	mov	r6, r7
   14398:	cmp	r8, #64	; 0x40
   1439c:	bhi	14348 <dcngettext@plt+0x3230>
   143a0:	ldr	r0, [sp, #8]
   143a4:	ldr	r1, [sp, #4]
   143a8:	sub	r0, r0, r1
   143ac:	sub	r8, r0, #64	; 0x40
   143b0:	b	143f8 <dcngettext@plt+0x32e0>
   143b4:	mov	r7, r6
   143b8:	cmp	r8, #0
   143bc:	bne	143f8 <dcngettext@plt+0x32e0>
   143c0:	sub	sp, fp, #28
   143c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   143c8:	bic	r5, r8, #63	; 0x3f
   143cc:	mov	r0, r6
   143d0:	mov	r2, r4
   143d4:	mov	r1, r5
   143d8:	bl	1373c <dcngettext@plt+0x2624>
   143dc:	add	r7, r6, r5
   143e0:	and	r8, r8, #63	; 0x3f
   143e4:	cmp	r8, #0
   143e8:	bne	143f8 <dcngettext@plt+0x32e0>
   143ec:	b	143c0 <dcngettext@plt+0x32a8>
   143f0:	mov	r7, r6
   143f4:	mov	r8, #64	; 0x40
   143f8:	ldr	r5, [r4, #24]
   143fc:	add	r6, r4, #28
   14400:	mov	r1, r7
   14404:	mov	r2, r8
   14408:	add	r0, r6, r5
   1440c:	bl	10f08 <memcpy@plt>
   14410:	add	r5, r5, r8
   14414:	cmp	r5, #64	; 0x40
   14418:	bcc	14440 <dcngettext@plt+0x3328>
   1441c:	mov	r0, r6
   14420:	mov	r1, #64	; 0x40
   14424:	mov	r2, r4
   14428:	bl	1373c <dcngettext@plt+0x2624>
   1442c:	sub	r5, r5, #64	; 0x40
   14430:	add	r1, r4, #92	; 0x5c
   14434:	mov	r0, r6
   14438:	mov	r2, r5
   1443c:	bl	10f08 <memcpy@plt>
   14440:	str	r5, [r4, #24]
   14444:	sub	sp, fp, #28
   14448:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1444c:	b	10ed8 <posix_fadvise64@plt>
   14450:	cmp	r0, #0
   14454:	bxeq	lr
   14458:	push	{r4, sl, fp, lr}
   1445c:	add	fp, sp, #8
   14460:	sub	sp, sp, #16
   14464:	mov	r4, r1
   14468:	bl	11058 <fileno@plt>
   1446c:	mov	r1, #0
   14470:	mov	r2, #0
   14474:	mov	r3, #0
   14478:	str	r1, [sp]
   1447c:	stmib	sp, {r1, r4}
   14480:	bl	10ed8 <posix_fadvise64@plt>
   14484:	sub	sp, fp, #8
   14488:	pop	{r4, sl, fp, pc}
   1448c:	push	{r4, r5, r6, sl, fp, lr}
   14490:	add	fp, sp, #16
   14494:	sub	sp, sp, #8
   14498:	mov	r4, r0
   1449c:	bl	11058 <fileno@plt>
   144a0:	cmn	r0, #1
   144a4:	ble	14518 <dcngettext@plt+0x3400>
   144a8:	mov	r0, r4
   144ac:	bl	10fb0 <__freading@plt>
   144b0:	cmp	r0, #0
   144b4:	beq	144e0 <dcngettext@plt+0x33c8>
   144b8:	mov	r0, r4
   144bc:	bl	11058 <fileno@plt>
   144c0:	mov	r1, #1
   144c4:	mov	r2, #0
   144c8:	mov	r3, #0
   144cc:	str	r1, [sp]
   144d0:	bl	10f5c <lseek64@plt>
   144d4:	and	r0, r0, r1
   144d8:	cmn	r0, #1
   144dc:	beq	14518 <dcngettext@plt+0x3400>
   144e0:	mov	r0, r4
   144e4:	bl	14528 <dcngettext@plt+0x3410>
   144e8:	cmp	r0, #0
   144ec:	beq	14518 <dcngettext@plt+0x3400>
   144f0:	bl	1101c <__errno_location@plt>
   144f4:	ldr	r6, [r0]
   144f8:	mov	r5, r0
   144fc:	mov	r0, r4
   14500:	bl	11070 <fclose@plt>
   14504:	cmp	r6, #0
   14508:	strne	r6, [r5]
   1450c:	mvnne	r0, #0
   14510:	sub	sp, fp, #16
   14514:	pop	{r4, r5, r6, sl, fp, pc}
   14518:	mov	r0, r4
   1451c:	sub	sp, fp, #16
   14520:	pop	{r4, r5, r6, sl, fp, lr}
   14524:	b	11070 <fclose@plt>
   14528:	push	{r4, sl, fp, lr}
   1452c:	add	fp, sp, #8
   14530:	sub	sp, sp, #8
   14534:	mov	r4, r0
   14538:	cmp	r0, #0
   1453c:	beq	14574 <dcngettext@plt+0x345c>
   14540:	mov	r0, r4
   14544:	bl	10fb0 <__freading@plt>
   14548:	cmp	r0, #0
   1454c:	beq	14574 <dcngettext@plt+0x345c>
   14550:	ldrb	r0, [r4, #1]
   14554:	tst	r0, #1
   14558:	beq	14574 <dcngettext@plt+0x345c>
   1455c:	mov	r0, #1
   14560:	mov	r2, #0
   14564:	mov	r3, #0
   14568:	str	r0, [sp]
   1456c:	mov	r0, r4
   14570:	bl	1465c <dcngettext@plt+0x3544>
   14574:	mov	r0, r4
   14578:	sub	sp, fp, #8
   1457c:	pop	{r4, sl, fp, lr}
   14580:	b	10ee4 <fflush@plt>
   14584:	push	{r4, r5, r6, r7, fp, lr}
   14588:	add	fp, sp, #16
   1458c:	mov	r5, r1
   14590:	bl	110d0 <fopen64@plt>
   14594:	mov	r4, #0
   14598:	cmp	r0, #0
   1459c:	beq	14604 <dcngettext@plt+0x34ec>
   145a0:	mov	r6, r0
   145a4:	bl	11058 <fileno@plt>
   145a8:	cmp	r0, #2
   145ac:	bhi	1460c <dcngettext@plt+0x34f4>
   145b0:	bl	166e0 <dcngettext@plt+0x55c8>
   145b4:	cmn	r0, #1
   145b8:	ble	14614 <dcngettext@plt+0x34fc>
   145bc:	mov	r7, r0
   145c0:	mov	r0, r6
   145c4:	bl	1448c <dcngettext@plt+0x3374>
   145c8:	cmp	r0, #0
   145cc:	bne	145e8 <dcngettext@plt+0x34d0>
   145d0:	mov	r0, r7
   145d4:	mov	r1, r5
   145d8:	bl	10e90 <fdopen@plt>
   145dc:	mov	r4, r0
   145e0:	cmp	r0, #0
   145e4:	bne	14604 <dcngettext@plt+0x34ec>
   145e8:	bl	1101c <__errno_location@plt>
   145ec:	ldr	r5, [r0]
   145f0:	mov	r4, r0
   145f4:	mov	r0, r7
   145f8:	bl	1110c <close@plt>
   145fc:	str	r5, [r4]
   14600:	mov	r4, #0
   14604:	mov	r0, r4
   14608:	pop	{r4, r5, r6, r7, fp, pc}
   1460c:	mov	r0, r6
   14610:	pop	{r4, r5, r6, r7, fp, pc}
   14614:	bl	1101c <__errno_location@plt>
   14618:	ldr	r7, [r0]
   1461c:	mov	r5, r0
   14620:	mov	r0, r6
   14624:	bl	1448c <dcngettext@plt+0x3374>
   14628:	mov	r0, r4
   1462c:	str	r7, [r5]
   14630:	pop	{r4, r5, r6, r7, fp, pc}
   14634:	push	{r4, r5, r6, sl, fp, lr}
   14638:	add	fp, sp, #16
   1463c:	mov	r4, r0
   14640:	bl	1101c <__errno_location@plt>
   14644:	ldr	r6, [r0]
   14648:	mov	r5, r0
   1464c:	mov	r0, r4
   14650:	bl	10ef0 <free@plt>
   14654:	str	r6, [r5]
   14658:	pop	{r4, r5, r6, sl, fp, pc}
   1465c:	push	{r4, r5, r6, r7, fp, lr}
   14660:	add	fp, sp, #16
   14664:	sub	sp, sp, #8
   14668:	mov	r4, r0
   1466c:	ldr	r0, [r0, #4]
   14670:	mov	r5, r3
   14674:	mov	r6, r2
   14678:	ldr	r1, [r4, #8]
   1467c:	cmp	r1, r0
   14680:	bne	1469c <dcngettext@plt+0x3584>
   14684:	ldrd	r0, [r4, #16]
   14688:	cmp	r1, r0
   1468c:	bne	1469c <dcngettext@plt+0x3584>
   14690:	ldr	r0, [r4, #36]	; 0x24
   14694:	cmp	r0, #0
   14698:	beq	146b4 <dcngettext@plt+0x359c>
   1469c:	mov	r0, r4
   146a0:	mov	r2, r6
   146a4:	mov	r3, r5
   146a8:	sub	sp, fp, #16
   146ac:	pop	{r4, r5, r6, r7, fp, lr}
   146b0:	b	1107c <fseeko64@plt>
   146b4:	ldr	r7, [fp, #8]
   146b8:	mov	r0, r4
   146bc:	bl	11058 <fileno@plt>
   146c0:	mov	r2, r6
   146c4:	mov	r3, r5
   146c8:	str	r7, [sp]
   146cc:	bl	10f5c <lseek64@plt>
   146d0:	and	r2, r0, r1
   146d4:	cmn	r2, #1
   146d8:	beq	146f8 <dcngettext@plt+0x35e0>
   146dc:	strd	r0, [r4, #80]	; 0x50
   146e0:	ldr	r0, [r4]
   146e4:	bic	r0, r0, #16
   146e8:	str	r0, [r4]
   146ec:	mov	r0, #0
   146f0:	sub	sp, fp, #16
   146f4:	pop	{r4, r5, r6, r7, fp, pc}
   146f8:	mvn	r0, #0
   146fc:	sub	sp, fp, #16
   14700:	pop	{r4, r5, r6, r7, fp, pc}
   14704:	push	{r4, r5, fp, lr}
   14708:	add	fp, sp, #8
   1470c:	cmp	r0, #0
   14710:	beq	147a4 <dcngettext@plt+0x368c>
   14714:	mov	r1, #47	; 0x2f
   14718:	mov	r4, r0
   1471c:	bl	110ac <strrchr@plt>
   14720:	cmp	r0, #0
   14724:	mov	r5, r4
   14728:	addne	r5, r0, #1
   1472c:	sub	r0, r5, r4
   14730:	cmp	r0, #7
   14734:	blt	14788 <dcngettext@plt+0x3670>
   14738:	movw	r1, #34728	; 0x87a8
   1473c:	sub	r0, r5, #7
   14740:	mov	r2, #7
   14744:	movt	r1, #1
   14748:	bl	110f4 <strncmp@plt>
   1474c:	cmp	r0, #0
   14750:	bne	14788 <dcngettext@plt+0x3670>
   14754:	movw	r1, #34736	; 0x87b0
   14758:	mov	r0, r5
   1475c:	mov	r2, #3
   14760:	movt	r1, #1
   14764:	bl	110f4 <strncmp@plt>
   14768:	cmp	r0, #0
   1476c:	beq	14778 <dcngettext@plt+0x3660>
   14770:	mov	r4, r5
   14774:	b	14788 <dcngettext@plt+0x3670>
   14778:	movw	r0, #37192	; 0x9148
   1477c:	add	r4, r5, #3
   14780:	movt	r0, #2
   14784:	str	r4, [r0]
   14788:	movw	r0, #37196	; 0x914c
   1478c:	movt	r0, #2
   14790:	str	r4, [r0]
   14794:	movw	r0, #37252	; 0x9184
   14798:	movt	r0, #2
   1479c:	str	r4, [r0]
   147a0:	pop	{r4, r5, fp, pc}
   147a4:	movw	r0, #37208	; 0x9158
   147a8:	mov	r1, #55	; 0x37
   147ac:	mov	r2, #1
   147b0:	movt	r0, #2
   147b4:	ldr	r3, [r0]
   147b8:	movw	r0, #34672	; 0x8770
   147bc:	movt	r0, #1
   147c0:	bl	10f50 <fwrite@plt>
   147c4:	bl	11100 <abort@plt>
   147c8:	push	{r4, r5, r6, sl, fp, lr}
   147cc:	add	fp, sp, #16
   147d0:	mov	r4, r0
   147d4:	movw	r0, #37256	; 0x9188
   147d8:	movt	r0, #2
   147dc:	cmp	r4, #0
   147e0:	moveq	r4, r0
   147e4:	bl	1101c <__errno_location@plt>
   147e8:	ldr	r6, [r0]
   147ec:	mov	r5, r0
   147f0:	mov	r0, r4
   147f4:	mov	r1, #48	; 0x30
   147f8:	bl	1720c <dcngettext@plt+0x60f4>
   147fc:	str	r6, [r5]
   14800:	pop	{r4, r5, r6, sl, fp, pc}
   14804:	movw	r1, #37256	; 0x9188
   14808:	cmp	r0, #0
   1480c:	movt	r1, #2
   14810:	movne	r1, r0
   14814:	ldr	r0, [r1]
   14818:	bx	lr
   1481c:	movw	r2, #37256	; 0x9188
   14820:	cmp	r0, #0
   14824:	movt	r2, #2
   14828:	movne	r2, r0
   1482c:	str	r1, [r2]
   14830:	bx	lr
   14834:	movw	r3, #37256	; 0x9188
   14838:	cmp	r0, #0
   1483c:	and	r2, r2, #1
   14840:	movt	r3, #2
   14844:	movne	r3, r0
   14848:	ubfx	r0, r1, #5, #3
   1484c:	and	r1, r1, #31
   14850:	add	ip, r3, r0, lsl #2
   14854:	mov	r0, #1
   14858:	ldr	r3, [ip, #8]
   1485c:	and	r0, r0, r3, lsr r1
   14860:	eor	r2, r0, r2
   14864:	eor	r1, r3, r2, lsl r1
   14868:	str	r1, [ip, #8]
   1486c:	bx	lr
   14870:	movw	r2, #37256	; 0x9188
   14874:	cmp	r0, #0
   14878:	movt	r2, #2
   1487c:	movne	r2, r0
   14880:	ldr	r0, [r2, #4]
   14884:	str	r1, [r2, #4]
   14888:	bx	lr
   1488c:	push	{fp, lr}
   14890:	mov	fp, sp
   14894:	movw	r3, #37256	; 0x9188
   14898:	cmp	r0, #0
   1489c:	movt	r3, #2
   148a0:	movne	r3, r0
   148a4:	cmp	r1, #0
   148a8:	mov	r0, #10
   148ac:	cmpne	r2, #0
   148b0:	str	r0, [r3]
   148b4:	bne	148bc <dcngettext@plt+0x37a4>
   148b8:	bl	11100 <abort@plt>
   148bc:	str	r1, [r3, #40]	; 0x28
   148c0:	str	r2, [r3, #44]	; 0x2c
   148c4:	pop	{fp, pc}
   148c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   148cc:	add	fp, sp, #28
   148d0:	sub	sp, sp, #20
   148d4:	mov	r7, r0
   148d8:	ldr	r0, [fp, #8]
   148dc:	movw	r5, #37256	; 0x9188
   148e0:	mov	r8, r3
   148e4:	mov	r9, r2
   148e8:	mov	sl, r1
   148ec:	movt	r5, #2
   148f0:	cmp	r0, #0
   148f4:	movne	r5, r0
   148f8:	bl	1101c <__errno_location@plt>
   148fc:	ldr	r2, [r5, #40]	; 0x28
   14900:	ldr	r3, [r5, #44]	; 0x2c
   14904:	mov	r4, r0
   14908:	ldm	r5, {r0, r1}
   1490c:	add	r5, r5, #8
   14910:	ldr	r6, [r4]
   14914:	stm	sp, {r0, r1, r5}
   14918:	mov	r0, r7
   1491c:	mov	r1, sl
   14920:	str	r2, [sp, #12]
   14924:	str	r3, [sp, #16]
   14928:	mov	r2, r9
   1492c:	mov	r3, r8
   14930:	bl	14940 <dcngettext@plt+0x3828>
   14934:	str	r6, [r4]
   14938:	sub	sp, fp, #28
   1493c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14940:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14944:	add	fp, sp, #28
   14948:	sub	sp, sp, #156	; 0x9c
   1494c:	str	r0, [fp, #-84]	; 0xffffffac
   14950:	add	r0, r2, #1
   14954:	mov	r6, r1
   14958:	mov	r7, r3
   1495c:	str	r2, [fp, #-80]	; 0xffffffb0
   14960:	str	r0, [sp, #80]	; 0x50
   14964:	ldr	r0, [fp, #12]
   14968:	and	r1, r0, #1
   1496c:	str	r1, [sp, #36]	; 0x24
   14970:	and	r1, r0, #4
   14974:	str	r1, [sp, #32]
   14978:	ubfx	r8, r0, #1, #1
   1497c:	bl	10f68 <__ctype_get_mb_cur_max@plt>
   14980:	str	r0, [sp, #40]	; 0x28
   14984:	ldr	r0, [fp, #24]
   14988:	ldr	r4, [fp, #8]
   1498c:	mov	r1, #0
   14990:	str	r1, [fp, #-52]	; 0xffffffcc
   14994:	mov	r1, #0
   14998:	str	r1, [sp, #60]	; 0x3c
   1499c:	mov	r1, #1
   149a0:	str	r1, [sp, #84]	; 0x54
   149a4:	str	r0, [sp, #76]	; 0x4c
   149a8:	ldr	r0, [fp, #20]
   149ac:	str	r0, [sp, #72]	; 0x48
   149b0:	mov	r0, #0
   149b4:	str	r0, [sp, #56]	; 0x38
   149b8:	mov	r0, #0
   149bc:	str	r0, [fp, #-88]	; 0xffffffa8
   149c0:	mov	r0, #0
   149c4:	str	r0, [fp, #-72]	; 0xffffffb8
   149c8:	mov	r0, #0
   149cc:	cmp	r4, #10
   149d0:	bhi	15cec <dcngettext@plt+0x4bd4>
   149d4:	add	r1, pc, #24
   149d8:	ldr	ip, [fp, #-84]	; 0xffffffac
   149dc:	ldr	lr, [fp, #-80]	; 0xffffffb0
   149e0:	mov	r5, r6
   149e4:	mov	r9, #0
   149e8:	mov	r2, #1
   149ec:	mov	r3, #0
   149f0:	ldr	pc, [r1, r4, lsl #2]
   149f4:			; <UNDEFINED> instruction: 0x00014abc
   149f8:	strdeq	r4, [r1], -r8
   149fc:	andeq	r4, r1, ip, asr #21
   14a00:			; <UNDEFINED> instruction: 0x00014ab4
   14a04:	andeq	r4, r1, ip, ror #21
   14a08:	andeq	r4, r1, r0, asr fp
   14a0c:	ldrdeq	r4, [r1], -ip
   14a10:	andeq	r4, r1, r8, asr #27
   14a14:	andeq	r4, r1, r0, lsr #20
   14a18:	andeq	r4, r1, r0, lsr #20
   14a1c:	andeq	r4, r1, r8, asr ip
   14a20:	movw	r6, #34820	; 0x8804
   14a24:	mov	r0, #0
   14a28:	mov	r2, #5
   14a2c:	movt	r6, #1
   14a30:	mov	r1, r6
   14a34:	bl	10f20 <dcgettext@plt>
   14a38:	cmp	r0, r6
   14a3c:	str	r0, [sp, #72]	; 0x48
   14a40:	bne	14c30 <dcngettext@plt+0x3b18>
   14a44:	bl	17668 <dcngettext@plt+0x6550>
   14a48:	ldrb	r1, [r0]
   14a4c:	and	r1, r1, #223	; 0xdf
   14a50:	cmp	r1, #71	; 0x47
   14a54:	beq	14bb0 <dcngettext@plt+0x3a98>
   14a58:	cmp	r1, #85	; 0x55
   14a5c:	bne	14c14 <dcngettext@plt+0x3afc>
   14a60:	ldrb	r1, [r0, #1]
   14a64:	and	r1, r1, #223	; 0xdf
   14a68:	cmp	r1, #84	; 0x54
   14a6c:	bne	14c14 <dcngettext@plt+0x3afc>
   14a70:	ldrb	r1, [r0, #2]
   14a74:	and	r1, r1, #223	; 0xdf
   14a78:	cmp	r1, #70	; 0x46
   14a7c:	bne	14c14 <dcngettext@plt+0x3afc>
   14a80:	ldrb	r1, [r0, #3]
   14a84:	cmp	r1, #45	; 0x2d
   14a88:	bne	14c14 <dcngettext@plt+0x3afc>
   14a8c:	ldrb	r1, [r0, #4]
   14a90:	cmp	r1, #56	; 0x38
   14a94:	bne	14c14 <dcngettext@plt+0x3afc>
   14a98:	ldrb	r0, [r0, #5]
   14a9c:	cmp	r0, #0
   14aa0:	movw	r0, #34824	; 0x8808
   14aa4:	movt	r0, #1
   14aa8:	str	r0, [sp, #72]	; 0x48
   14aac:	bne	14c14 <dcngettext@plt+0x3afc>
   14ab0:	b	14c30 <dcngettext@plt+0x3b18>
   14ab4:	mov	r0, #1
   14ab8:	b	14af8 <dcngettext@plt+0x39e0>
   14abc:	mov	r4, #0
   14ac0:	mov	r9, #0
   14ac4:	mov	r2, r0
   14ac8:	b	14b48 <dcngettext@plt+0x3a30>
   14acc:	tst	r8, #1
   14ad0:	bne	14af8 <dcngettext@plt+0x39e0>
   14ad4:	mov	r2, r0
   14ad8:	b	14b20 <dcngettext@plt+0x3a08>
   14adc:	mov	r0, #1
   14ae0:	mov	r9, #0
   14ae4:	mov	r4, #5
   14ae8:	b	14b64 <dcngettext@plt+0x3a4c>
   14aec:	mov	r2, #1
   14af0:	tst	r8, #1
   14af4:	beq	14b20 <dcngettext@plt+0x3a08>
   14af8:	mov	r1, #1
   14afc:	mov	r9, #0
   14b00:	mov	r4, #2
   14b04:	mov	r2, r0
   14b08:	mov	r3, #1
   14b0c:	str	r1, [fp, #-72]	; 0xffffffb8
   14b10:	movw	r1, #34822	; 0x8806
   14b14:	movt	r1, #1
   14b18:	str	r1, [fp, #-88]	; 0xffffffa8
   14b1c:	b	14dc8 <dcngettext@plt+0x3cb0>
   14b20:	cmp	r5, #0
   14b24:	mov	r9, #1
   14b28:	mov	r4, #2
   14b2c:	movne	r0, #39	; 0x27
   14b30:	strbne	r0, [ip]
   14b34:	movw	r0, #34822	; 0x8806
   14b38:	movt	r0, #1
   14b3c:	str	r0, [fp, #-88]	; 0xffffffa8
   14b40:	mov	r0, #1
   14b44:	str	r0, [fp, #-72]	; 0xffffffb8
   14b48:	mov	r3, #0
   14b4c:	b	14dc8 <dcngettext@plt+0x3cb0>
   14b50:	mov	r4, #5
   14b54:	tst	r8, #1
   14b58:	beq	14b80 <dcngettext@plt+0x3a68>
   14b5c:	mov	r0, #1
   14b60:	mov	r9, #0
   14b64:	str	r0, [fp, #-72]	; 0xffffffb8
   14b68:	movw	r0, #34818	; 0x8802
   14b6c:	mov	r2, #1
   14b70:	mov	r3, #1
   14b74:	movt	r0, #1
   14b78:	str	r0, [fp, #-88]	; 0xffffffa8
   14b7c:	b	14dc8 <dcngettext@plt+0x3cb0>
   14b80:	cmp	r5, #0
   14b84:	mov	r3, #0
   14b88:	mov	r9, #1
   14b8c:	mov	r2, #1
   14b90:	movne	r0, #34	; 0x22
   14b94:	strbne	r0, [ip]
   14b98:	movw	r0, #34818	; 0x8802
   14b9c:	movt	r0, #1
   14ba0:	str	r0, [fp, #-88]	; 0xffffffa8
   14ba4:	mov	r0, #1
   14ba8:	str	r0, [fp, #-72]	; 0xffffffb8
   14bac:	b	14dc8 <dcngettext@plt+0x3cb0>
   14bb0:	ldrb	r1, [r0, #1]
   14bb4:	and	r1, r1, #223	; 0xdf
   14bb8:	cmp	r1, #66	; 0x42
   14bbc:	bne	14c14 <dcngettext@plt+0x3afc>
   14bc0:	ldrb	r1, [r0, #2]
   14bc4:	cmp	r1, #49	; 0x31
   14bc8:	bne	14c14 <dcngettext@plt+0x3afc>
   14bcc:	ldrb	r1, [r0, #3]
   14bd0:	cmp	r1, #56	; 0x38
   14bd4:	bne	14c14 <dcngettext@plt+0x3afc>
   14bd8:	ldrb	r1, [r0, #4]
   14bdc:	cmp	r1, #48	; 0x30
   14be0:	bne	14c14 <dcngettext@plt+0x3afc>
   14be4:	ldrb	r1, [r0, #5]
   14be8:	cmp	r1, #51	; 0x33
   14bec:	bne	14c14 <dcngettext@plt+0x3afc>
   14bf0:	ldrb	r1, [r0, #6]
   14bf4:	cmp	r1, #48	; 0x30
   14bf8:	bne	14c14 <dcngettext@plt+0x3afc>
   14bfc:	ldrb	r0, [r0, #7]
   14c00:	cmp	r0, #0
   14c04:	movw	r0, #34832	; 0x8810
   14c08:	movt	r0, #1
   14c0c:	str	r0, [sp, #72]	; 0x48
   14c10:	beq	14c30 <dcngettext@plt+0x3b18>
   14c14:	movw	r1, #34818	; 0x8802
   14c18:	movw	r0, #34822	; 0x8806
   14c1c:	cmp	r4, #9
   14c20:	movt	r1, #1
   14c24:	movt	r0, #1
   14c28:	moveq	r0, r1
   14c2c:	str	r0, [sp, #72]	; 0x48
   14c30:	movw	r6, #34822	; 0x8806
   14c34:	mov	r0, #0
   14c38:	mov	r2, #5
   14c3c:	movt	r6, #1
   14c40:	mov	r1, r6
   14c44:	bl	10f20 <dcgettext@plt>
   14c48:	cmp	r0, r6
   14c4c:	str	r0, [sp, #76]	; 0x4c
   14c50:	beq	14c9c <dcngettext@plt+0x3b84>
   14c54:	ldr	ip, [fp, #-84]	; 0xffffffac
   14c58:	mov	r9, #0
   14c5c:	tst	r8, #1
   14c60:	bne	14da4 <dcngettext@plt+0x3c8c>
   14c64:	ldr	r0, [sp, #72]	; 0x48
   14c68:	ldrb	r0, [r0]
   14c6c:	cmp	r0, #0
   14c70:	beq	14da4 <dcngettext@plt+0x3c8c>
   14c74:	ldr	r1, [sp, #72]	; 0x48
   14c78:	mov	r9, #0
   14c7c:	add	r1, r1, #1
   14c80:	cmp	r9, r5
   14c84:	strbcc	r0, [ip, r9]
   14c88:	ldrb	r0, [r1, r9]
   14c8c:	add	r9, r9, #1
   14c90:	cmp	r0, #0
   14c94:	bne	14c80 <dcngettext@plt+0x3b68>
   14c98:	b	14da4 <dcngettext@plt+0x3c8c>
   14c9c:	bl	17668 <dcngettext@plt+0x6550>
   14ca0:	ldrb	r1, [r0]
   14ca4:	and	r1, r1, #223	; 0xdf
   14ca8:	cmp	r1, #71	; 0x47
   14cac:	beq	14d1c <dcngettext@plt+0x3c04>
   14cb0:	ldr	ip, [fp, #-84]	; 0xffffffac
   14cb4:	cmp	r1, #85	; 0x55
   14cb8:	bne	14d78 <dcngettext@plt+0x3c60>
   14cbc:	ldrb	r1, [r0, #1]
   14cc0:	and	r1, r1, #223	; 0xdf
   14cc4:	cmp	r1, #84	; 0x54
   14cc8:	bne	14d78 <dcngettext@plt+0x3c60>
   14ccc:	ldrb	r1, [r0, #2]
   14cd0:	and	r1, r1, #223	; 0xdf
   14cd4:	cmp	r1, #70	; 0x46
   14cd8:	bne	14d78 <dcngettext@plt+0x3c60>
   14cdc:	ldrb	r1, [r0, #3]
   14ce0:	cmp	r1, #45	; 0x2d
   14ce4:	bne	14d78 <dcngettext@plt+0x3c60>
   14ce8:	ldrb	r1, [r0, #4]
   14cec:	cmp	r1, #56	; 0x38
   14cf0:	bne	14d78 <dcngettext@plt+0x3c60>
   14cf4:	ldrb	r0, [r0, #5]
   14cf8:	cmp	r0, #0
   14cfc:	bne	14d78 <dcngettext@plt+0x3c60>
   14d00:	movw	r0, #34828	; 0x880c
   14d04:	movt	r0, #1
   14d08:	str	r0, [sp, #76]	; 0x4c
   14d0c:	mov	r9, #0
   14d10:	tst	r8, #1
   14d14:	beq	14c64 <dcngettext@plt+0x3b4c>
   14d18:	b	14da4 <dcngettext@plt+0x3c8c>
   14d1c:	ldrb	r1, [r0, #1]
   14d20:	ldr	ip, [fp, #-84]	; 0xffffffac
   14d24:	and	r1, r1, #223	; 0xdf
   14d28:	cmp	r1, #66	; 0x42
   14d2c:	bne	14d78 <dcngettext@plt+0x3c60>
   14d30:	ldrb	r1, [r0, #2]
   14d34:	cmp	r1, #49	; 0x31
   14d38:	bne	14d78 <dcngettext@plt+0x3c60>
   14d3c:	ldrb	r1, [r0, #3]
   14d40:	cmp	r1, #56	; 0x38
   14d44:	bne	14d78 <dcngettext@plt+0x3c60>
   14d48:	ldrb	r1, [r0, #4]
   14d4c:	cmp	r1, #48	; 0x30
   14d50:	bne	14d78 <dcngettext@plt+0x3c60>
   14d54:	ldrb	r1, [r0, #5]
   14d58:	cmp	r1, #51	; 0x33
   14d5c:	bne	14d78 <dcngettext@plt+0x3c60>
   14d60:	ldrb	r1, [r0, #6]
   14d64:	cmp	r1, #48	; 0x30
   14d68:	bne	14d78 <dcngettext@plt+0x3c60>
   14d6c:	ldrb	r0, [r0, #7]
   14d70:	cmp	r0, #0
   14d74:	beq	15b8c <dcngettext@plt+0x4a74>
   14d78:	movw	r0, #34822	; 0x8806
   14d7c:	cmp	r4, #9
   14d80:	movt	r0, #1
   14d84:	mov	r1, r0
   14d88:	movw	r0, #34818	; 0x8802
   14d8c:	movt	r0, #1
   14d90:	moveq	r1, r0
   14d94:	str	r1, [sp, #76]	; 0x4c
   14d98:	mov	r9, #0
   14d9c:	tst	r8, #1
   14da0:	beq	14c64 <dcngettext@plt+0x3b4c>
   14da4:	ldr	r6, [sp, #76]	; 0x4c
   14da8:	mov	r0, r6
   14dac:	bl	11004 <strlen@plt>
   14db0:	ldr	ip, [fp, #-84]	; 0xffffffac
   14db4:	ldr	lr, [fp, #-80]	; 0xffffffb0
   14db8:	str	r0, [fp, #-72]	; 0xffffffb8
   14dbc:	str	r6, [fp, #-88]	; 0xffffffa8
   14dc0:	mov	r2, #1
   14dc4:	mov	r3, r8
   14dc8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14dcc:	str	r4, [fp, #-64]	; 0xffffffc0
   14dd0:	mov	sl, #0
   14dd4:	str	r3, [fp, #-76]	; 0xffffffb4
   14dd8:	str	r2, [sp, #88]	; 0x58
   14ddc:	cmp	r0, #0
   14de0:	movwne	r0, #1
   14de4:	and	r1, r0, r3
   14de8:	and	r1, r2, r1
   14dec:	str	r1, [sp, #48]	; 0x30
   14df0:	sub	r1, r4, #2
   14df4:	clz	r1, r1
   14df8:	lsr	r1, r1, #5
   14dfc:	and	r1, r1, r3
   14e00:	str	r1, [sp, #44]	; 0x2c
   14e04:	subs	r1, r4, #2
   14e08:	eor	r4, r3, #1
   14e0c:	movwne	r1, #1
   14e10:	str	r4, [sp, #92]	; 0x5c
   14e14:	orr	r4, r1, r4
   14e18:	and	r1, r1, r2
   14e1c:	and	r0, r0, r1
   14e20:	str	r4, [sp, #64]	; 0x40
   14e24:	ldr	r4, [sp, #84]	; 0x54
   14e28:	str	r0, [fp, #-60]	; 0xffffffc4
   14e2c:	orr	r0, r1, r3
   14e30:	ldr	r1, [fp, #16]
   14e34:	eor	r0, r0, #1
   14e38:	clz	r1, r1
   14e3c:	lsr	r1, r1, #5
   14e40:	orr	r0, r1, r0
   14e44:	str	r0, [fp, #-68]	; 0xffffffbc
   14e48:	eor	r0, r2, #1
   14e4c:	str	r0, [sp, #52]	; 0x34
   14e50:	cmn	r7, #1
   14e54:	beq	14e64 <dcngettext@plt+0x3d4c>
   14e58:	cmp	sl, r7
   14e5c:	bne	14e70 <dcngettext@plt+0x3d58>
   14e60:	b	15b04 <dcngettext@plt+0x49ec>
   14e64:	ldrb	r0, [lr, sl]
   14e68:	cmp	r0, #0
   14e6c:	beq	15b0c <dcngettext@plt+0x49f4>
   14e70:	ldr	r0, [fp, #-60]	; 0xffffffc4
   14e74:	cmp	r0, #0
   14e78:	beq	14ed8 <dcngettext@plt+0x3dc0>
   14e7c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14e80:	mov	r6, r5
   14e84:	add	r5, sl, r0
   14e88:	cmp	r0, #2
   14e8c:	bcc	14ef8 <dcngettext@plt+0x3de0>
   14e90:	mov	r0, #0
   14e94:	cmn	r7, #1
   14e98:	str	r0, [fp, #-56]	; 0xffffffc8
   14e9c:	bne	14eb4 <dcngettext@plt+0x3d9c>
   14ea0:	mov	r0, lr
   14ea4:	bl	11004 <strlen@plt>
   14ea8:	ldr	lr, [fp, #-80]	; 0xffffffb0
   14eac:	ldr	ip, [fp, #-84]	; 0xffffffac
   14eb0:	mov	r7, r0
   14eb4:	cmp	r5, r7
   14eb8:	bls	14f08 <dcngettext@plt+0x3df0>
   14ebc:	mov	r0, #0
   14ec0:	mov	r5, r6
   14ec4:	str	r0, [fp, #-48]	; 0xffffffd0
   14ec8:	ldrb	r6, [lr, sl]
   14ecc:	cmp	r6, #126	; 0x7e
   14ed0:	bls	14f58 <dcngettext@plt+0x3e40>
   14ed4:	b	154b4 <dcngettext@plt+0x439c>
   14ed8:	mov	r0, #0
   14edc:	str	r0, [fp, #-56]	; 0xffffffc8
   14ee0:	mov	r0, #0
   14ee4:	str	r0, [fp, #-48]	; 0xffffffd0
   14ee8:	ldrb	r6, [lr, sl]
   14eec:	cmp	r6, #126	; 0x7e
   14ef0:	bls	14f58 <dcngettext@plt+0x3e40>
   14ef4:	b	154b4 <dcngettext@plt+0x439c>
   14ef8:	mov	r0, #0
   14efc:	str	r0, [fp, #-56]	; 0xffffffc8
   14f00:	cmp	r5, r7
   14f04:	bhi	14ebc <dcngettext@plt+0x3da4>
   14f08:	ldr	r1, [fp, #-88]	; 0xffffffa8
   14f0c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14f10:	add	r0, lr, sl
   14f14:	bl	10ff8 <bcmp@plt>
   14f18:	ldr	r2, [sp, #92]	; 0x5c
   14f1c:	cmp	r0, #0
   14f20:	mov	r1, r0
   14f24:	mov	r5, r6
   14f28:	movwne	r1, #1
   14f2c:	orr	r1, r1, r2
   14f30:	tst	r1, #1
   14f34:	beq	15bcc <dcngettext@plt+0x4ab4>
   14f38:	ldr	ip, [fp, #-84]	; 0xffffffac
   14f3c:	ldr	lr, [fp, #-80]	; 0xffffffb0
   14f40:	clz	r0, r0
   14f44:	lsr	r0, r0, #5
   14f48:	str	r0, [fp, #-48]	; 0xffffffd0
   14f4c:	ldrb	r6, [lr, sl]
   14f50:	cmp	r6, #126	; 0x7e
   14f54:	bhi	154b4 <dcngettext@plt+0x439c>
   14f58:	add	r3, pc, #16
   14f5c:	mov	r8, #1
   14f60:	mov	r2, #110	; 0x6e
   14f64:	mov	r0, #97	; 0x61
   14f68:	mov	r1, #0
   14f6c:	ldr	pc, [r3, r6, lsl #2]
   14f70:	andeq	r5, r1, ip, ror #4
   14f74:			; <UNDEFINED> instruction: 0x000154b4
   14f78:			; <UNDEFINED> instruction: 0x000154b4
   14f7c:			; <UNDEFINED> instruction: 0x000154b4
   14f80:			; <UNDEFINED> instruction: 0x000154b4
   14f84:			; <UNDEFINED> instruction: 0x000154b4
   14f88:			; <UNDEFINED> instruction: 0x000154b4
   14f8c:	andeq	r5, r1, r8, ror #10
   14f90:	andeq	r5, r1, ip, asr #4
   14f94:	andeq	r5, r1, r4, asr #4
   14f98:	andeq	r5, r1, r8, asr r2
   14f9c:	andeq	r5, r1, r8, lsl #7
   14fa0:	andeq	r5, r1, ip, lsr r2
   14fa4:	andeq	r5, r1, r4, asr r2
   14fa8:			; <UNDEFINED> instruction: 0x000154b4
   14fac:			; <UNDEFINED> instruction: 0x000154b4
   14fb0:			; <UNDEFINED> instruction: 0x000154b4
   14fb4:			; <UNDEFINED> instruction: 0x000154b4
   14fb8:			; <UNDEFINED> instruction: 0x000154b4
   14fbc:			; <UNDEFINED> instruction: 0x000154b4
   14fc0:			; <UNDEFINED> instruction: 0x000154b4
   14fc4:			; <UNDEFINED> instruction: 0x000154b4
   14fc8:			; <UNDEFINED> instruction: 0x000154b4
   14fcc:			; <UNDEFINED> instruction: 0x000154b4
   14fd0:			; <UNDEFINED> instruction: 0x000154b4
   14fd4:			; <UNDEFINED> instruction: 0x000154b4
   14fd8:			; <UNDEFINED> instruction: 0x000154b4
   14fdc:			; <UNDEFINED> instruction: 0x000154b4
   14fe0:			; <UNDEFINED> instruction: 0x000154b4
   14fe4:			; <UNDEFINED> instruction: 0x000154b4
   14fe8:			; <UNDEFINED> instruction: 0x000154b4
   14fec:			; <UNDEFINED> instruction: 0x000154b4
   14ff0:	andeq	r5, r1, r0, ror #3
   14ff4:	andeq	r5, r1, r4, ror #3
   14ff8:	andeq	r5, r1, r4, ror #3
   14ffc:	ldrdeq	r5, [r1], -r4
   15000:	andeq	r5, r1, r4, ror #3
   15004:	andeq	r5, r1, ip, ror #2
   15008:	andeq	r5, r1, r4, ror #3
   1500c:	muleq	r1, r0, r3
   15010:	andeq	r5, r1, r4, ror #3
   15014:	andeq	r5, r1, r4, ror #3
   15018:	andeq	r5, r1, r4, ror #3
   1501c:	andeq	r5, r1, ip, ror #2
   15020:	andeq	r5, r1, ip, ror #2
   15024:	andeq	r5, r1, ip, ror #2
   15028:	andeq	r5, r1, ip, ror #2
   1502c:	andeq	r5, r1, ip, ror #2
   15030:	andeq	r5, r1, ip, ror #2
   15034:	andeq	r5, r1, ip, ror #2
   15038:	andeq	r5, r1, ip, ror #2
   1503c:	andeq	r5, r1, ip, ror #2
   15040:	andeq	r5, r1, ip, ror #2
   15044:	andeq	r5, r1, ip, ror #2
   15048:	andeq	r5, r1, ip, ror #2
   1504c:	andeq	r5, r1, ip, ror #2
   15050:	andeq	r5, r1, ip, ror #2
   15054:	andeq	r5, r1, ip, ror #2
   15058:	andeq	r5, r1, ip, ror #2
   1505c:	andeq	r5, r1, r4, ror #3
   15060:	andeq	r5, r1, r4, ror #3
   15064:	andeq	r5, r1, r4, ror #3
   15068:	andeq	r5, r1, r4, ror #3
   1506c:	andeq	r5, r1, r4, asr r3
   15070:			; <UNDEFINED> instruction: 0x000154b4
   15074:	andeq	r5, r1, ip, ror #2
   15078:	andeq	r5, r1, ip, ror #2
   1507c:	andeq	r5, r1, ip, ror #2
   15080:	andeq	r5, r1, ip, ror #2
   15084:	andeq	r5, r1, ip, ror #2
   15088:	andeq	r5, r1, ip, ror #2
   1508c:	andeq	r5, r1, ip, ror #2
   15090:	andeq	r5, r1, ip, ror #2
   15094:	andeq	r5, r1, ip, ror #2
   15098:	andeq	r5, r1, ip, ror #2
   1509c:	andeq	r5, r1, ip, ror #2
   150a0:	andeq	r5, r1, ip, ror #2
   150a4:	andeq	r5, r1, ip, ror #2
   150a8:	andeq	r5, r1, ip, ror #2
   150ac:	andeq	r5, r1, ip, ror #2
   150b0:	andeq	r5, r1, ip, ror #2
   150b4:	andeq	r5, r1, ip, ror #2
   150b8:	andeq	r5, r1, ip, ror #2
   150bc:	andeq	r5, r1, ip, ror #2
   150c0:	andeq	r5, r1, ip, ror #2
   150c4:	andeq	r5, r1, ip, ror #2
   150c8:	andeq	r5, r1, ip, ror #2
   150cc:	andeq	r5, r1, ip, ror #2
   150d0:	andeq	r5, r1, ip, ror #2
   150d4:	andeq	r5, r1, ip, ror #2
   150d8:	andeq	r5, r1, ip, ror #2
   150dc:	andeq	r5, r1, r4, ror #3
   150e0:	andeq	r5, r1, r8, lsl r2
   150e4:	andeq	r5, r1, ip, ror #2
   150e8:	andeq	r5, r1, r4, ror #3
   150ec:	andeq	r5, r1, ip, ror #2
   150f0:	andeq	r5, r1, r4, ror #3
   150f4:	andeq	r5, r1, ip, ror #2
   150f8:	andeq	r5, r1, ip, ror #2
   150fc:	andeq	r5, r1, ip, ror #2
   15100:	andeq	r5, r1, ip, ror #2
   15104:	andeq	r5, r1, ip, ror #2
   15108:	andeq	r5, r1, ip, ror #2
   1510c:	andeq	r5, r1, ip, ror #2
   15110:	andeq	r5, r1, ip, ror #2
   15114:	andeq	r5, r1, ip, ror #2
   15118:	andeq	r5, r1, ip, ror #2
   1511c:	andeq	r5, r1, ip, ror #2
   15120:	andeq	r5, r1, ip, ror #2
   15124:	andeq	r5, r1, ip, ror #2
   15128:	andeq	r5, r1, ip, ror #2
   1512c:	andeq	r5, r1, ip, ror #2
   15130:	andeq	r5, r1, ip, ror #2
   15134:	andeq	r5, r1, ip, ror #2
   15138:	andeq	r5, r1, ip, ror #2
   1513c:	andeq	r5, r1, ip, ror #2
   15140:	andeq	r5, r1, ip, ror #2
   15144:	andeq	r5, r1, ip, ror #2
   15148:	andeq	r5, r1, ip, ror #2
   1514c:	andeq	r5, r1, ip, ror #2
   15150:	andeq	r5, r1, ip, ror #2
   15154:	andeq	r5, r1, ip, ror #2
   15158:	andeq	r5, r1, ip, ror #2
   1515c:	andeq	r5, r1, ip, lsr #3
   15160:	andeq	r5, r1, r4, ror #3
   15164:	andeq	r5, r1, ip, lsr #3
   15168:	ldrdeq	r5, [r1], -r4
   1516c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15170:	tst	r0, #1
   15174:	bne	1542c <dcngettext@plt+0x4314>
   15178:	ldr	r1, [fp, #16]
   1517c:	ubfx	r0, r6, #5, #3
   15180:	mov	r2, #1
   15184:	ldr	r0, [r1, r0, lsl #2]
   15188:	and	r1, r6, #31
   1518c:	tst	r0, r2, lsl r1
   15190:	beq	1542c <dcngettext@plt+0x4314>
   15194:	mov	r0, r6
   15198:	mov	r1, r8
   1519c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   151a0:	tst	r2, #1
   151a4:	beq	1544c <dcngettext@plt+0x4334>
   151a8:	b	15ba8 <dcngettext@plt+0x4a90>
   151ac:	cmp	r7, #1
   151b0:	beq	151d4 <dcngettext@plt+0x40bc>
   151b4:	mov	r8, #0
   151b8:	cmn	r7, #1
   151bc:	bne	15418 <dcngettext@plt+0x4300>
   151c0:	ldrb	r0, [lr, #1]
   151c4:	cmp	r0, #0
   151c8:	beq	151d4 <dcngettext@plt+0x40bc>
   151cc:	mvn	r7, #0
   151d0:	b	15418 <dcngettext@plt+0x4300>
   151d4:	mov	r8, #0
   151d8:	cmp	sl, #0
   151dc:	bne	15418 <dcngettext@plt+0x4300>
   151e0:	mov	r1, #1
   151e4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   151e8:	cmp	r0, #2
   151ec:	bne	15204 <dcngettext@plt+0x40ec>
   151f0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   151f4:	mov	r8, r1
   151f8:	tst	r0, #1
   151fc:	beq	1516c <dcngettext@plt+0x4054>
   15200:	b	15ba8 <dcngettext@plt+0x4a90>
   15204:	mov	r8, r1
   15208:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1520c:	tst	r0, #1
   15210:	beq	15178 <dcngettext@plt+0x4060>
   15214:	b	1542c <dcngettext@plt+0x4314>
   15218:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1521c:	cmp	r0, #2
   15220:	bne	154e0 <dcngettext@plt+0x43c8>
   15224:	ldr	r0, [fp, #-76]	; 0xffffffb4
   15228:	tst	r0, #1
   1522c:	bne	15ba8 <dcngettext@plt+0x4a90>
   15230:	mov	r0, #0
   15234:	str	r0, [fp, #-56]	; 0xffffffc8
   15238:	b	154f8 <dcngettext@plt+0x43e0>
   1523c:	mov	r0, #102	; 0x66
   15240:	b	15568 <dcngettext@plt+0x4450>
   15244:	mov	r2, #116	; 0x74
   15248:	b	15258 <dcngettext@plt+0x4140>
   1524c:	mov	r0, #98	; 0x62
   15250:	b	15568 <dcngettext@plt+0x4450>
   15254:	mov	r2, #114	; 0x72
   15258:	ldr	r0, [sp, #64]	; 0x40
   1525c:	tst	r0, #1
   15260:	mov	r0, r2
   15264:	bne	15568 <dcngettext@plt+0x4450>
   15268:	b	15ba8 <dcngettext@plt+0x4a90>
   1526c:	ldr	r0, [sp, #88]	; 0x58
   15270:	tst	r0, #1
   15274:	beq	15588 <dcngettext@plt+0x4470>
   15278:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1527c:	tst	r0, #1
   15280:	bne	15ce4 <dcngettext@plt+0x4bcc>
   15284:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15288:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1528c:	subs	r0, r0, #2
   15290:	movwne	r0, #1
   15294:	orr	r0, r0, r1
   15298:	tst	r0, #1
   1529c:	bne	152d8 <dcngettext@plt+0x41c0>
   152a0:	cmp	r9, r5
   152a4:	movcc	r0, #39	; 0x27
   152a8:	strbcc	r0, [ip, r9]
   152ac:	add	r0, r9, #1
   152b0:	cmp	r0, r5
   152b4:	movcc	r1, #36	; 0x24
   152b8:	strbcc	r1, [ip, r0]
   152bc:	add	r0, r9, #2
   152c0:	add	r9, r9, #3
   152c4:	cmp	r0, r5
   152c8:	movcc	r1, #39	; 0x27
   152cc:	strbcc	r1, [ip, r0]
   152d0:	mov	r0, #1
   152d4:	str	r0, [fp, #-52]	; 0xffffffcc
   152d8:	mov	r1, #1
   152dc:	cmp	r9, r5
   152e0:	mov	r8, #0
   152e4:	mov	r6, #48	; 0x30
   152e8:	str	r1, [fp, #-56]	; 0xffffffc8
   152ec:	ldr	r1, [fp, #-64]	; 0xffffffc0
   152f0:	movcc	r0, #92	; 0x5c
   152f4:	strbcc	r0, [ip, r9]
   152f8:	add	r0, r9, #1
   152fc:	cmp	r1, #2
   15300:	beq	15754 <dcngettext@plt+0x463c>
   15304:	add	r1, sl, #1
   15308:	cmp	r1, r7
   1530c:	bcs	15754 <dcngettext@plt+0x463c>
   15310:	ldrb	r1, [lr, r1]
   15314:	sub	r1, r1, #48	; 0x30
   15318:	uxtb	r1, r1
   1531c:	cmp	r1, #9
   15320:	bhi	15754 <dcngettext@plt+0x463c>
   15324:	cmp	r0, r5
   15328:	movcc	r1, #48	; 0x30
   1532c:	strbcc	r1, [ip, r0]
   15330:	add	r0, r9, #2
   15334:	add	r9, r9, #3
   15338:	cmp	r0, r5
   1533c:	movcc	r1, #48	; 0x30
   15340:	strbcc	r1, [ip, r0]
   15344:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15348:	tst	r0, #1
   1534c:	beq	15178 <dcngettext@plt+0x4060>
   15350:	b	1542c <dcngettext@plt+0x4314>
   15354:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15358:	mov	r6, #63	; 0x3f
   1535c:	cmp	r0, #5
   15360:	beq	15768 <dcngettext@plt+0x4650>
   15364:	mov	r1, #0
   15368:	cmp	r0, #2
   1536c:	str	r1, [fp, #-56]	; 0xffffffc8
   15370:	bne	15830 <dcngettext@plt+0x4718>
   15374:	ldr	r0, [fp, #-76]	; 0xffffffb4
   15378:	mov	r8, #0
   1537c:	tst	r0, #1
   15380:	beq	1516c <dcngettext@plt+0x4054>
   15384:	b	15ba8 <dcngettext@plt+0x4a90>
   15388:	mov	r0, #118	; 0x76
   1538c:	b	15568 <dcngettext@plt+0x4450>
   15390:	mov	r0, #1
   15394:	mov	r6, #39	; 0x27
   15398:	str	r0, [sp, #60]	; 0x3c
   1539c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   153a0:	cmp	r0, #2
   153a4:	bne	155a8 <dcngettext@plt+0x4490>
   153a8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   153ac:	tst	r0, #1
   153b0:	bne	15ba8 <dcngettext@plt+0x4a90>
   153b4:	ldr	r2, [sp, #56]	; 0x38
   153b8:	clz	r1, r5
   153bc:	mov	r8, #1
   153c0:	lsr	r1, r1, #5
   153c4:	cmp	r2, #0
   153c8:	mov	r0, r2
   153cc:	movwne	r0, #1
   153d0:	orrs	r0, r0, r1
   153d4:	moveq	r2, r5
   153d8:	moveq	r5, r0
   153dc:	cmp	r9, r5
   153e0:	str	r2, [sp, #56]	; 0x38
   153e4:	movcc	r0, #39	; 0x27
   153e8:	strbcc	r0, [ip, r9]
   153ec:	add	r0, r9, #1
   153f0:	cmp	r0, r5
   153f4:	movcc	r1, #92	; 0x5c
   153f8:	strbcc	r1, [ip, r0]
   153fc:	add	r0, r9, #2
   15400:	add	r9, r9, #3
   15404:	cmp	r0, r5
   15408:	movcc	r1, #39	; 0x27
   1540c:	strbcc	r1, [ip, r0]
   15410:	mov	r0, #0
   15414:	str	r0, [fp, #-52]	; 0xffffffcc
   15418:	mov	r0, #0
   1541c:	str	r0, [fp, #-56]	; 0xffffffc8
   15420:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15424:	tst	r0, #1
   15428:	beq	15178 <dcngettext@plt+0x4060>
   1542c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15430:	mov	r1, r8
   15434:	cmp	r0, #0
   15438:	mov	r0, r6
   1543c:	beq	15500 <dcngettext@plt+0x43e8>
   15440:	ldr	r2, [fp, #-76]	; 0xffffffb4
   15444:	tst	r2, #1
   15448:	bne	15ba8 <dcngettext@plt+0x4a90>
   1544c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15450:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15454:	subs	r2, r2, #2
   15458:	movwne	r2, #1
   1545c:	orr	r2, r2, r3
   15460:	tst	r2, #1
   15464:	bne	154a0 <dcngettext@plt+0x4388>
   15468:	cmp	r9, r5
   1546c:	movcc	r2, #39	; 0x27
   15470:	strbcc	r2, [ip, r9]
   15474:	add	r2, r9, #1
   15478:	cmp	r2, r5
   1547c:	movcc	r3, #36	; 0x24
   15480:	strbcc	r3, [ip, r2]
   15484:	add	r2, r9, #2
   15488:	add	r9, r9, #3
   1548c:	cmp	r2, r5
   15490:	movcc	r3, #39	; 0x27
   15494:	strbcc	r3, [ip, r2]
   15498:	mov	r2, #1
   1549c:	str	r2, [fp, #-52]	; 0xffffffcc
   154a0:	cmp	r9, r5
   154a4:	movcc	r2, #92	; 0x5c
   154a8:	strbcc	r2, [ip, r9]
   154ac:	add	r9, r9, #1
   154b0:	b	15548 <dcngettext@plt+0x4430>
   154b4:	ldr	r0, [sp, #40]	; 0x28
   154b8:	cmp	r0, #1
   154bc:	bne	155bc <dcngettext@plt+0x44a4>
   154c0:	bl	10fe0 <__ctype_b_loc@plt>
   154c4:	ldr	r0, [r0]
   154c8:	ldr	lr, [fp, #-80]	; 0xffffffb0
   154cc:	mov	r1, #1
   154d0:	add	r0, r0, r6, lsl #1
   154d4:	ldrb	r0, [r0, #1]
   154d8:	ubfx	r8, r0, #6, #1
   154dc:	b	15914 <dcngettext@plt+0x47fc>
   154e0:	ldr	r1, [sp, #48]	; 0x30
   154e4:	mov	r0, #0
   154e8:	str	r0, [fp, #-56]	; 0xffffffc8
   154ec:	mov	r0, #92	; 0x5c
   154f0:	cmp	r1, #0
   154f4:	beq	15568 <dcngettext@plt+0x4450>
   154f8:	mov	r6, #92	; 0x5c
   154fc:	mov	r8, #0
   15500:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15504:	cmp	r0, #0
   15508:	bne	15540 <dcngettext@plt+0x4428>
   1550c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15510:	tst	r0, #1
   15514:	beq	15540 <dcngettext@plt+0x4428>
   15518:	cmp	r9, r5
   1551c:	movcc	r0, #39	; 0x27
   15520:	strbcc	r0, [ip, r9]
   15524:	add	r0, r9, #1
   15528:	add	r9, r9, #2
   1552c:	cmp	r0, r5
   15530:	movcc	r1, #39	; 0x27
   15534:	strbcc	r1, [ip, r0]
   15538:	mov	r0, #0
   1553c:	str	r0, [fp, #-52]	; 0xffffffcc
   15540:	mov	r1, r8
   15544:	mov	r0, r6
   15548:	cmp	r9, r5
   1554c:	and	r4, r4, r1
   15550:	strbcc	r0, [ip, r9]
   15554:	add	r9, r9, #1
   15558:	add	sl, sl, #1
   1555c:	cmn	r7, #1
   15560:	bne	14e58 <dcngettext@plt+0x3d40>
   15564:	b	14e64 <dcngettext@plt+0x3d4c>
   15568:	mov	r1, #0
   1556c:	mov	r8, #0
   15570:	str	r1, [fp, #-56]	; 0xffffffc8
   15574:	ldr	r1, [sp, #88]	; 0x58
   15578:	tst	r1, #1
   1557c:	mov	r1, #0
   15580:	beq	1516c <dcngettext@plt+0x4054>
   15584:	b	15440 <dcngettext@plt+0x4328>
   15588:	ldr	r0, [sp, #36]	; 0x24
   1558c:	mov	r6, #0
   15590:	mov	r8, #0
   15594:	cmp	r0, #0
   15598:	mov	r0, #0
   1559c:	str	r0, [fp, #-56]	; 0xffffffc8
   155a0:	bne	15558 <dcngettext@plt+0x4440>
   155a4:	b	1516c <dcngettext@plt+0x4054>
   155a8:	mov	r8, #1
   155ac:	ldr	r0, [fp, #-68]	; 0xffffffbc
   155b0:	tst	r0, #1
   155b4:	beq	15178 <dcngettext@plt+0x4060>
   155b8:	b	1542c <dcngettext@plt+0x4314>
   155bc:	mov	r0, #0
   155c0:	cmn	r7, #1
   155c4:	str	r0, [fp, #-36]	; 0xffffffdc
   155c8:	str	r0, [fp, #-40]	; 0xffffffd8
   155cc:	bne	155e0 <dcngettext@plt+0x44c8>
   155d0:	mov	r0, lr
   155d4:	bl	11004 <strlen@plt>
   155d8:	ldr	lr, [fp, #-80]	; 0xffffffb0
   155dc:	mov	r7, r0
   155e0:	ldr	r0, [sp, #44]	; 0x2c
   155e4:	str	r4, [sp, #84]	; 0x54
   155e8:	str	r5, [sp, #28]
   155ec:	cmp	r0, #0
   155f0:	beq	15844 <dcngettext@plt+0x472c>
   155f4:	ldr	r0, [sp, #80]	; 0x50
   155f8:	mov	r8, #1
   155fc:	mov	r5, #0
   15600:	add	r0, r0, sl
   15604:	str	r0, [sp, #24]
   15608:	sub	r0, fp, #40	; 0x28
   1560c:	mov	r3, r0
   15610:	b	1564c <dcngettext@plt+0x4534>
   15614:	ldr	r5, [sp, #68]	; 0x44
   15618:	add	r5, r0, r5
   1561c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15620:	bl	10f44 <iswprint@plt>
   15624:	cmp	r0, #0
   15628:	sub	r4, fp, #40	; 0x28
   1562c:	movwne	r0, #1
   15630:	and	r8, r8, r0
   15634:	mov	r0, r4
   15638:	bl	10f14 <mbsinit@plt>
   1563c:	ldr	lr, [fp, #-80]	; 0xffffffb0
   15640:	mov	r3, r4
   15644:	cmp	r0, #0
   15648:	bne	15908 <dcngettext@plt+0x47f0>
   1564c:	str	r5, [sp, #68]	; 0x44
   15650:	add	r5, r5, sl
   15654:	sub	r0, fp, #44	; 0x2c
   15658:	add	r1, lr, r5
   1565c:	sub	r2, r7, r5
   15660:	bl	176a0 <dcngettext@plt+0x6588>
   15664:	cmn	r0, #2
   15668:	beq	158c8 <dcngettext@plt+0x47b0>
   1566c:	ldr	ip, [fp, #-84]	; 0xffffffac
   15670:	cmn	r0, #1
   15674:	beq	158bc <dcngettext@plt+0x47a4>
   15678:	cmp	r0, #0
   1567c:	beq	158c0 <dcngettext@plt+0x47a8>
   15680:	cmp	r0, #2
   15684:	bcc	15614 <dcngettext@plt+0x44fc>
   15688:	ldr	r1, [sp, #68]	; 0x44
   1568c:	ldr	r2, [sp, #24]
   15690:	add	r1, r2, r1
   15694:	sub	r2, r0, #1
   15698:	ldrb	r3, [r1]
   1569c:	sub	r3, r3, #91	; 0x5b
   156a0:	cmp	r3, #33	; 0x21
   156a4:	bls	156c4 <dcngettext@plt+0x45ac>
   156a8:	add	r1, r1, #1
   156ac:	subs	r2, r2, #1
   156b0:	beq	15614 <dcngettext@plt+0x44fc>
   156b4:	ldrb	r3, [r1]
   156b8:	sub	r3, r3, #91	; 0x5b
   156bc:	cmp	r3, #33	; 0x21
   156c0:	bhi	156a8 <dcngettext@plt+0x4590>
   156c4:	add	r5, pc, #0
   156c8:	ldr	pc, [r5, r3, lsl #2]
   156cc:	andeq	r5, r1, r0, ror #23
   156d0:	andeq	r5, r1, r0, ror #23
   156d4:	andeq	r5, r1, r8, lsr #13
   156d8:	andeq	r5, r1, r0, ror #23
   156dc:	andeq	r5, r1, r8, lsr #13
   156e0:	andeq	r5, r1, r0, ror #23
   156e4:	andeq	r5, r1, r8, lsr #13
   156e8:	andeq	r5, r1, r8, lsr #13
   156ec:	andeq	r5, r1, r8, lsr #13
   156f0:	andeq	r5, r1, r8, lsr #13
   156f4:	andeq	r5, r1, r8, lsr #13
   156f8:	andeq	r5, r1, r8, lsr #13
   156fc:	andeq	r5, r1, r8, lsr #13
   15700:	andeq	r5, r1, r8, lsr #13
   15704:	andeq	r5, r1, r8, lsr #13
   15708:	andeq	r5, r1, r8, lsr #13
   1570c:	andeq	r5, r1, r8, lsr #13
   15710:	andeq	r5, r1, r8, lsr #13
   15714:	andeq	r5, r1, r8, lsr #13
   15718:	andeq	r5, r1, r8, lsr #13
   1571c:	andeq	r5, r1, r8, lsr #13
   15720:	andeq	r5, r1, r8, lsr #13
   15724:	andeq	r5, r1, r8, lsr #13
   15728:	andeq	r5, r1, r8, lsr #13
   1572c:	andeq	r5, r1, r8, lsr #13
   15730:	andeq	r5, r1, r8, lsr #13
   15734:	andeq	r5, r1, r8, lsr #13
   15738:	andeq	r5, r1, r8, lsr #13
   1573c:	andeq	r5, r1, r8, lsr #13
   15740:	andeq	r5, r1, r8, lsr #13
   15744:	andeq	r5, r1, r8, lsr #13
   15748:	andeq	r5, r1, r8, lsr #13
   1574c:	andeq	r5, r1, r8, lsr #13
   15750:	andeq	r5, r1, r0, ror #23
   15754:	mov	r9, r0
   15758:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1575c:	tst	r0, #1
   15760:	beq	15178 <dcngettext@plt+0x4060>
   15764:	b	1542c <dcngettext@plt+0x4314>
   15768:	mov	r0, #0
   1576c:	str	r0, [fp, #-56]	; 0xffffffc8
   15770:	ldr	r0, [sp, #32]
   15774:	cmp	r0, #0
   15778:	beq	15830 <dcngettext@plt+0x4718>
   1577c:	add	r0, sl, #2
   15780:	mov	r1, r7
   15784:	cmp	r0, r7
   15788:	bcs	15830 <dcngettext@plt+0x4718>
   1578c:	add	r1, sl, lr
   15790:	ldrb	r1, [r1, #1]
   15794:	cmp	r1, #63	; 0x3f
   15798:	bne	15830 <dcngettext@plt+0x4718>
   1579c:	ldrb	r8, [lr, r0]
   157a0:	sub	r2, r8, #33	; 0x21
   157a4:	cmp	r2, #29
   157a8:	bhi	15830 <dcngettext@plt+0x4718>
   157ac:	mov	r1, r4
   157b0:	movw	r4, #20929	; 0x51c1
   157b4:	mov	r3, #1
   157b8:	movt	r4, #14336	; 0x3800
   157bc:	tst	r4, r3, lsl r2
   157c0:	beq	15aec <dcngettext@plt+0x49d4>
   157c4:	ldr	r2, [fp, #-76]	; 0xffffffb4
   157c8:	tst	r2, #1
   157cc:	bne	15ba8 <dcngettext@plt+0x4a90>
   157d0:	cmp	r9, r5
   157d4:	mov	r6, r8
   157d8:	mov	r4, r1
   157dc:	mov	sl, r0
   157e0:	mov	r8, #0
   157e4:	movcc	r2, #63	; 0x3f
   157e8:	strbcc	r2, [ip, r9]
   157ec:	add	r2, r9, #1
   157f0:	cmp	r2, r5
   157f4:	movcc	r3, #34	; 0x22
   157f8:	strbcc	r3, [ip, r2]
   157fc:	add	r2, r9, #2
   15800:	cmp	r2, r5
   15804:	movcc	r3, #34	; 0x22
   15808:	strbcc	r3, [ip, r2]
   1580c:	add	r2, r9, #3
   15810:	add	r9, r9, #4
   15814:	cmp	r2, r5
   15818:	movcc	r3, #63	; 0x3f
   1581c:	strbcc	r3, [ip, r2]
   15820:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15824:	tst	r0, #1
   15828:	beq	15178 <dcngettext@plt+0x4060>
   1582c:	b	1542c <dcngettext@plt+0x4314>
   15830:	mov	r8, #0
   15834:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15838:	tst	r0, #1
   1583c:	beq	15178 <dcngettext@plt+0x4060>
   15840:	b	1542c <dcngettext@plt+0x4314>
   15844:	mov	r8, #1
   15848:	mov	r5, #0
   1584c:	sub	r4, fp, #40	; 0x28
   15850:	str	r5, [sp, #68]	; 0x44
   15854:	add	r5, r5, sl
   15858:	sub	r0, fp, #44	; 0x2c
   1585c:	mov	r3, r4
   15860:	add	r1, lr, r5
   15864:	sub	r2, r7, r5
   15868:	bl	176a0 <dcngettext@plt+0x6588>
   1586c:	cmn	r0, #2
   15870:	beq	158c8 <dcngettext@plt+0x47b0>
   15874:	cmn	r0, #1
   15878:	beq	158bc <dcngettext@plt+0x47a4>
   1587c:	ldr	r5, [sp, #68]	; 0x44
   15880:	cmp	r0, #0
   15884:	beq	15904 <dcngettext@plt+0x47ec>
   15888:	add	r5, r0, r5
   1588c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15890:	bl	10f44 <iswprint@plt>
   15894:	cmp	r0, #0
   15898:	sub	r4, fp, #40	; 0x28
   1589c:	movwne	r0, #1
   158a0:	and	r8, r8, r0
   158a4:	mov	r0, r4
   158a8:	bl	10f14 <mbsinit@plt>
   158ac:	ldr	lr, [fp, #-80]	; 0xffffffb0
   158b0:	cmp	r0, #0
   158b4:	beq	15850 <dcngettext@plt+0x4738>
   158b8:	b	15908 <dcngettext@plt+0x47f0>
   158bc:	mov	r8, #0
   158c0:	ldr	lr, [fp, #-80]	; 0xffffffb0
   158c4:	b	158fc <dcngettext@plt+0x47e4>
   158c8:	ldr	lr, [fp, #-80]	; 0xffffffb0
   158cc:	mov	r8, #0
   158d0:	cmp	r5, r7
   158d4:	bcs	158fc <dcngettext@plt+0x47e4>
   158d8:	ldrb	r0, [lr, r5]
   158dc:	cmp	r0, #0
   158e0:	beq	158fc <dcngettext@plt+0x47e4>
   158e4:	ldr	r0, [sp, #68]	; 0x44
   158e8:	add	r0, r0, #1
   158ec:	add	r5, r0, sl
   158f0:	str	r0, [sp, #68]	; 0x44
   158f4:	cmp	r5, r7
   158f8:	bcc	158d8 <dcngettext@plt+0x47c0>
   158fc:	ldr	r5, [sp, #68]	; 0x44
   15900:	b	15908 <dcngettext@plt+0x47f0>
   15904:	ldr	lr, [fp, #-80]	; 0xffffffb0
   15908:	mov	r1, r5
   1590c:	ldr	r5, [sp, #28]
   15910:	ldr	r4, [sp, #84]	; 0x54
   15914:	ldr	r0, [sp, #52]	; 0x34
   15918:	ldr	ip, [fp, #-84]	; 0xffffffac
   1591c:	cmp	r1, #1
   15920:	orr	r2, r8, r0
   15924:	mov	r0, r1
   15928:	bhi	15934 <dcngettext@plt+0x481c>
   1592c:	tst	r2, #1
   15930:	bne	1516c <dcngettext@plt+0x4054>
   15934:	add	r0, r0, sl
   15938:	str	r2, [sp, #84]	; 0x54
   1593c:	str	r0, [fp, #-56]	; 0xffffffc8
   15940:	mov	r0, #0
   15944:	tst	r2, #1
   15948:	bne	15a28 <dcngettext@plt+0x4910>
   1594c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   15950:	tst	r1, #1
   15954:	bne	15ba8 <dcngettext@plt+0x4a90>
   15958:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1595c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15960:	subs	r2, r1, #2
   15964:	movwne	r2, #1
   15968:	orr	r2, r2, r0
   1596c:	tst	r2, #1
   15970:	bne	159ac <dcngettext@plt+0x4894>
   15974:	cmp	r9, r5
   15978:	add	r2, r9, #1
   1597c:	mov	r0, #1
   15980:	movcc	r1, #39	; 0x27
   15984:	str	r0, [fp, #-52]	; 0xffffffcc
   15988:	strbcc	r1, [ip, r9]
   1598c:	cmp	r2, r5
   15990:	movcc	r1, #36	; 0x24
   15994:	strbcc	r1, [ip, r2]
   15998:	add	r2, r9, #2
   1599c:	add	r9, r9, #3
   159a0:	cmp	r2, r5
   159a4:	movcc	r1, #39	; 0x27
   159a8:	strbcc	r1, [ip, r2]
   159ac:	cmp	r9, r5
   159b0:	add	r2, r9, #1
   159b4:	movcc	r1, #92	; 0x5c
   159b8:	strbcc	r1, [ip, r9]
   159bc:	cmp	r2, r5
   159c0:	bcs	159d4 <dcngettext@plt+0x48bc>
   159c4:	uxtb	r3, r6
   159c8:	mov	r1, #48	; 0x30
   159cc:	orr	r3, r1, r3, lsr #6
   159d0:	strb	r3, [ip, r2]
   159d4:	add	r2, r9, #2
   159d8:	add	r9, r9, #3
   159dc:	cmp	r2, r5
   159e0:	lsrcc	r3, r6, #3
   159e4:	movcc	r1, #6
   159e8:	bficc	r3, r1, #3, #29
   159ec:	mov	r1, #6
   159f0:	bfi	r6, r1, #3, #29
   159f4:	strbcc	r3, [ip, r2]
   159f8:	mov	r2, #1
   159fc:	b	15a5c <dcngettext@plt+0x4944>
   15a00:	ldr	r1, [sp, #80]	; 0x50
   15a04:	cmp	r9, r2
   15a08:	mov	r5, r2
   15a0c:	ldr	r2, [sp, #84]	; 0x54
   15a10:	strbcc	r6, [ip, r9]
   15a14:	add	r9, r9, #1
   15a18:	ldrb	r6, [r1, sl]
   15a1c:	mov	sl, r3
   15a20:	tst	r2, #1
   15a24:	beq	1594c <dcngettext@plt+0x4834>
   15a28:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15a2c:	tst	r1, #1
   15a30:	beq	15a50 <dcngettext@plt+0x4938>
   15a34:	cmp	r9, r5
   15a38:	mov	r2, r0
   15a3c:	movcc	r1, #92	; 0x5c
   15a40:	strbcc	r1, [ip, r9]
   15a44:	add	r9, r9, #1
   15a48:	mov	r1, #0
   15a4c:	b	15a58 <dcngettext@plt+0x4940>
   15a50:	mov	r1, #0
   15a54:	mov	r2, r0
   15a58:	str	r1, [fp, #-48]	; 0xffffffd0
   15a5c:	mov	r0, r2
   15a60:	and	r1, r2, #1
   15a64:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15a68:	add	r3, sl, #1
   15a6c:	cmp	r2, r3
   15a70:	bls	15ad0 <dcngettext@plt+0x49b8>
   15a74:	mov	r2, r5
   15a78:	ldr	r5, [fp, #-52]	; 0xffffffcc
   15a7c:	cmp	r1, #0
   15a80:	movwne	r1, #1
   15a84:	mvn	r5, r5
   15a88:	orr	r5, r5, r1
   15a8c:	tst	r5, #1
   15a90:	bne	15a00 <dcngettext@plt+0x48e8>
   15a94:	cmp	r9, r2
   15a98:	movcc	r5, r4
   15a9c:	movcc	r4, #39	; 0x27
   15aa0:	strbcc	r4, [ip, r9]
   15aa4:	movcc	r4, r5
   15aa8:	add	r5, r9, #1
   15aac:	add	r9, r9, #2
   15ab0:	cmp	r5, r2
   15ab4:	movcc	r1, r4
   15ab8:	movcc	r4, #39	; 0x27
   15abc:	strbcc	r4, [ip, r5]
   15ac0:	movcc	r4, r1
   15ac4:	mov	r1, #0
   15ac8:	str	r1, [fp, #-52]	; 0xffffffcc
   15acc:	b	15a00 <dcngettext@plt+0x48e8>
   15ad0:	cmp	r1, #0
   15ad4:	movwne	r1, #1
   15ad8:	str	r1, [fp, #-56]	; 0xffffffc8
   15adc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15ae0:	cmp	r0, #0
   15ae4:	beq	1550c <dcngettext@plt+0x43f4>
   15ae8:	b	15540 <dcngettext@plt+0x4428>
   15aec:	mov	r8, #0
   15af0:	mov	r4, r1
   15af4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15af8:	tst	r0, #1
   15afc:	beq	15178 <dcngettext@plt+0x4060>
   15b00:	b	1542c <dcngettext@plt+0x4314>
   15b04:	mov	r7, sl
   15b08:	b	15b10 <dcngettext@plt+0x49f8>
   15b0c:	mvn	r7, #0
   15b10:	ldr	r1, [fp, #-64]	; 0xffffffc0
   15b14:	ldr	r3, [fp, #-76]	; 0xffffffb4
   15b18:	ldr	r2, [sp, #88]	; 0x58
   15b1c:	eor	r0, r1, #2
   15b20:	orr	r0, r0, r9
   15b24:	clz	r0, r0
   15b28:	lsr	r0, r0, #5
   15b2c:	tst	r3, r0
   15b30:	bne	15ba8 <dcngettext@plt+0x4a90>
   15b34:	subs	r0, r1, #2
   15b38:	movwne	r0, #1
   15b3c:	orr	r0, r3, r0
   15b40:	tst	r0, #1
   15b44:	ldreq	r0, [sp, #60]	; 0x3c
   15b48:	eoreq	r0, r0, #1
   15b4c:	tsteq	r0, #1
   15b50:	bne	15c84 <dcngettext@plt+0x4b6c>
   15b54:	tst	r4, #1
   15b58:	bne	15c48 <dcngettext@plt+0x4b30>
   15b5c:	ldr	r6, [sp, #56]	; 0x38
   15b60:	mov	r8, #0
   15b64:	cmp	r6, #0
   15b68:	beq	15c80 <dcngettext@plt+0x4b68>
   15b6c:	mov	r1, #0
   15b70:	mov	r4, #2
   15b74:	cmp	r5, #0
   15b78:	mov	r0, r2
   15b7c:	mov	r3, #0
   15b80:	str	r1, [sp, #84]	; 0x54
   15b84:	beq	149cc <dcngettext@plt+0x38b4>
   15b88:	b	15c84 <dcngettext@plt+0x4b6c>
   15b8c:	movw	r0, #34836	; 0x8814
   15b90:	movt	r0, #1
   15b94:	str	r0, [sp, #76]	; 0x4c
   15b98:	mov	r9, #0
   15b9c:	tst	r8, #1
   15ba0:	beq	14c64 <dcngettext@plt+0x3b4c>
   15ba4:	b	14da4 <dcngettext@plt+0x3c8c>
   15ba8:	ldr	r1, [sp, #88]	; 0x58
   15bac:	mov	r0, #2
   15bb0:	tst	r1, #1
   15bb4:	movwne	r0, #4
   15bb8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15bbc:	ldr	r1, [fp, #12]
   15bc0:	cmp	r2, #2
   15bc4:	moveq	r2, r0
   15bc8:	b	15c00 <dcngettext@plt+0x4ae8>
   15bcc:	ldr	ip, [fp, #-84]	; 0xffffffac
   15bd0:	ldr	lr, [fp, #-80]	; 0xffffffb0
   15bd4:	ldr	r1, [fp, #12]
   15bd8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15bdc:	b	15c00 <dcngettext@plt+0x4ae8>
   15be0:	ldr	r1, [sp, #88]	; 0x58
   15be4:	ldr	lr, [fp, #-80]	; 0xffffffb0
   15be8:	ldr	r5, [sp, #28]
   15bec:	mov	r0, #2
   15bf0:	tst	r1, #1
   15bf4:	ldr	r1, [fp, #12]
   15bf8:	movwne	r0, #4
   15bfc:	mov	r2, r0
   15c00:	mov	r0, #0
   15c04:	bic	r1, r1, #2
   15c08:	str	r2, [sp]
   15c0c:	mov	r2, lr
   15c10:	str	r0, [sp, #8]
   15c14:	ldr	r0, [sp, #72]	; 0x48
   15c18:	str	r1, [sp, #4]
   15c1c:	mov	r1, r5
   15c20:	str	r0, [sp, #12]
   15c24:	ldr	r0, [sp, #76]	; 0x4c
   15c28:	str	r0, [sp, #16]
   15c2c:	mov	r0, ip
   15c30:	mov	r3, r7
   15c34:	bl	14940 <dcngettext@plt+0x3828>
   15c38:	mov	r9, r0
   15c3c:	mov	r0, r9
   15c40:	sub	sp, fp, #28
   15c44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15c48:	mov	r0, #5
   15c4c:	ldr	r1, [sp, #56]	; 0x38
   15c50:	ldr	r2, [fp, #-80]	; 0xffffffb0
   15c54:	str	r0, [sp]
   15c58:	ldr	r0, [fp, #12]
   15c5c:	str	r0, [sp, #4]
   15c60:	ldr	r0, [fp, #16]
   15c64:	str	r0, [sp, #8]
   15c68:	ldr	r0, [sp, #72]	; 0x48
   15c6c:	str	r0, [sp, #12]
   15c70:	ldr	r0, [sp, #76]	; 0x4c
   15c74:	str	r0, [sp, #16]
   15c78:	ldr	r0, [fp, #-84]	; 0xffffffac
   15c7c:	b	15c30 <dcngettext@plt+0x4b18>
   15c80:	mov	r3, #0
   15c84:	ldr	r1, [fp, #-88]	; 0xffffffa8
   15c88:	cmp	r1, #0
   15c8c:	beq	15cc8 <dcngettext@plt+0x4bb0>
   15c90:	ldr	r2, [fp, #-84]	; 0xffffffac
   15c94:	tst	r3, #1
   15c98:	bne	15ccc <dcngettext@plt+0x4bb4>
   15c9c:	ldrb	r0, [r1]
   15ca0:	cmp	r0, #0
   15ca4:	beq	15ccc <dcngettext@plt+0x4bb4>
   15ca8:	add	r1, r1, #1
   15cac:	cmp	r9, r5
   15cb0:	strbcc	r0, [r2, r9]
   15cb4:	add	r9, r9, #1
   15cb8:	ldrb	r0, [r1], #1
   15cbc:	cmp	r0, #0
   15cc0:	bne	15cac <dcngettext@plt+0x4b94>
   15cc4:	b	15ccc <dcngettext@plt+0x4bb4>
   15cc8:	ldr	r2, [fp, #-84]	; 0xffffffac
   15ccc:	cmp	r9, r5
   15cd0:	movcc	r0, #0
   15cd4:	strbcc	r0, [r2, r9]
   15cd8:	mov	r0, r9
   15cdc:	sub	sp, fp, #28
   15ce0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15ce4:	mov	r0, #4
   15ce8:	b	15bb8 <dcngettext@plt+0x4aa0>
   15cec:	bl	11100 <abort@plt>
   15cf0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15cf4:	add	fp, sp, #28
   15cf8:	sub	sp, sp, #28
   15cfc:	movw	r5, #37256	; 0x9188
   15d00:	cmp	r2, #0
   15d04:	mov	r4, r1
   15d08:	mov	r7, r0
   15d0c:	str	r0, [sp, #20]
   15d10:	movt	r5, #2
   15d14:	movne	r5, r2
   15d18:	bl	1101c <__errno_location@plt>
   15d1c:	mov	sl, r0
   15d20:	ldr	r2, [r5, #40]	; 0x28
   15d24:	ldr	r3, [r5, #44]	; 0x2c
   15d28:	ldm	r5, {r0, r1}
   15d2c:	orr	r8, r1, #1
   15d30:	add	r9, r5, #8
   15d34:	mov	r1, #0
   15d38:	ldr	r6, [sl]
   15d3c:	stm	sp, {r0, r8, r9}
   15d40:	mov	r0, #0
   15d44:	str	r2, [sp, #12]
   15d48:	str	r3, [sp, #16]
   15d4c:	mov	r2, r7
   15d50:	mov	r3, r4
   15d54:	str	r6, [sp, #24]
   15d58:	mov	r6, r4
   15d5c:	bl	14940 <dcngettext@plt+0x3828>
   15d60:	add	r7, r0, #1
   15d64:	mov	r0, r7
   15d68:	bl	16ddc <dcngettext@plt+0x5cc4>
   15d6c:	mov	r4, r0
   15d70:	ldr	r0, [r5]
   15d74:	ldr	r2, [r5, #44]	; 0x2c
   15d78:	ldr	r1, [r5, #40]	; 0x28
   15d7c:	mov	r3, r6
   15d80:	stm	sp, {r0, r8, r9}
   15d84:	str	r2, [sp, #16]
   15d88:	ldr	r2, [sp, #20]
   15d8c:	str	r1, [sp, #12]
   15d90:	mov	r0, r4
   15d94:	mov	r1, r7
   15d98:	bl	14940 <dcngettext@plt+0x3828>
   15d9c:	ldr	r0, [sp, #24]
   15da0:	str	r0, [sl]
   15da4:	mov	r0, r4
   15da8:	sub	sp, fp, #28
   15dac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15db0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15db4:	add	fp, sp, #28
   15db8:	sub	sp, sp, #36	; 0x24
   15dbc:	movw	r8, #37256	; 0x9188
   15dc0:	cmp	r3, #0
   15dc4:	mov	r4, r2
   15dc8:	str	r2, [sp, #24]
   15dcc:	mov	r5, r1
   15dd0:	mov	r6, r0
   15dd4:	str	r0, [sp, #20]
   15dd8:	movt	r8, #2
   15ddc:	movne	r8, r3
   15de0:	bl	1101c <__errno_location@plt>
   15de4:	str	r0, [sp, #28]
   15de8:	ldr	r1, [r8, #40]	; 0x28
   15dec:	ldr	r2, [r8, #44]	; 0x2c
   15df0:	ldr	r7, [r0]
   15df4:	cmp	r4, #0
   15df8:	add	sl, r8, #8
   15dfc:	mov	r0, #0
   15e00:	ldm	r8, {r3, r9}
   15e04:	orreq	r9, r9, #1
   15e08:	stm	sp, {r3, r9, sl}
   15e0c:	str	r1, [sp, #12]
   15e10:	str	r2, [sp, #16]
   15e14:	mov	r1, #0
   15e18:	mov	r2, r6
   15e1c:	mov	r3, r5
   15e20:	str	r7, [sp, #32]
   15e24:	mov	r7, r5
   15e28:	bl	14940 <dcngettext@plt+0x3828>
   15e2c:	add	r4, r0, #1
   15e30:	mov	r5, r0
   15e34:	mov	r0, r4
   15e38:	bl	16ddc <dcngettext@plt+0x5cc4>
   15e3c:	mov	r6, r0
   15e40:	ldr	r0, [r8]
   15e44:	ldr	r2, [r8, #44]	; 0x2c
   15e48:	ldr	r1, [r8, #40]	; 0x28
   15e4c:	mov	r3, r7
   15e50:	stm	sp, {r0, r9, sl}
   15e54:	str	r2, [sp, #16]
   15e58:	ldr	r2, [sp, #20]
   15e5c:	str	r1, [sp, #12]
   15e60:	mov	r0, r6
   15e64:	mov	r1, r4
   15e68:	bl	14940 <dcngettext@plt+0x3828>
   15e6c:	ldr	r0, [sp, #24]
   15e70:	ldr	r1, [sp, #32]
   15e74:	ldr	r2, [sp, #28]
   15e78:	cmp	r0, #0
   15e7c:	str	r1, [r2]
   15e80:	strne	r5, [r0]
   15e84:	mov	r0, r6
   15e88:	sub	sp, fp, #28
   15e8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15e90:	push	{r4, r5, r6, r7, fp, lr}
   15e94:	add	fp, sp, #16
   15e98:	movw	r4, #37176	; 0x9138
   15e9c:	movt	r4, #2
   15ea0:	ldrd	r6, [r4]
   15ea4:	cmp	r7, #2
   15ea8:	blt	15ed4 <dcngettext@plt+0x4dbc>
   15eac:	add	r5, r6, #12
   15eb0:	mov	r7, #0
   15eb4:	ldr	r0, [r5, r7, lsl #3]
   15eb8:	bl	14634 <dcngettext@plt+0x351c>
   15ebc:	ldr	r1, [r4, #4]
   15ec0:	add	r2, r7, #2
   15ec4:	add	r0, r7, #1
   15ec8:	mov	r7, r0
   15ecc:	cmp	r2, r1
   15ed0:	blt	15eb4 <dcngettext@plt+0x4d9c>
   15ed4:	ldr	r0, [r6, #4]
   15ed8:	movw	r5, #37304	; 0x91b8
   15edc:	movt	r5, #2
   15ee0:	cmp	r0, r5
   15ee4:	beq	15ef8 <dcngettext@plt+0x4de0>
   15ee8:	bl	14634 <dcngettext@plt+0x351c>
   15eec:	mov	r0, #256	; 0x100
   15ef0:	str	r0, [r4, #8]
   15ef4:	str	r5, [r4, #12]
   15ef8:	add	r5, r4, #8
   15efc:	cmp	r6, r5
   15f00:	beq	15f10 <dcngettext@plt+0x4df8>
   15f04:	mov	r0, r6
   15f08:	bl	14634 <dcngettext@plt+0x351c>
   15f0c:	str	r5, [r4]
   15f10:	mov	r0, #1
   15f14:	str	r0, [r4, #4]
   15f18:	pop	{r4, r5, r6, r7, fp, pc}
   15f1c:	movw	r3, #37256	; 0x9188
   15f20:	mvn	r2, #0
   15f24:	movt	r3, #2
   15f28:	b	15f2c <dcngettext@plt+0x4e14>
   15f2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15f30:	add	fp, sp, #28
   15f34:	sub	sp, sp, #44	; 0x2c
   15f38:	mov	r7, r3
   15f3c:	str	r2, [sp, #36]	; 0x24
   15f40:	str	r1, [sp, #32]
   15f44:	mov	r5, r0
   15f48:	bl	1101c <__errno_location@plt>
   15f4c:	cmp	r5, #0
   15f50:	bmi	160b8 <dcngettext@plt+0x4fa0>
   15f54:	cmn	r5, #-2147483647	; 0x80000001
   15f58:	beq	160b8 <dcngettext@plt+0x4fa0>
   15f5c:	movw	r8, #37176	; 0x9138
   15f60:	mov	r4, r0
   15f64:	ldr	r0, [r0]
   15f68:	movt	r8, #2
   15f6c:	str	r4, [sp, #28]
   15f70:	ldr	r1, [r8, #4]
   15f74:	ldr	r6, [r8]
   15f78:	str	r0, [sp, #24]
   15f7c:	cmp	r1, r5
   15f80:	ble	15f8c <dcngettext@plt+0x4e74>
   15f84:	mov	sl, r6
   15f88:	b	15ff4 <dcngettext@plt+0x4edc>
   15f8c:	mov	r0, #8
   15f90:	add	r9, r8, #8
   15f94:	str	r1, [fp, #-32]	; 0xffffffe0
   15f98:	sub	r1, r5, r1
   15f9c:	mvn	r3, #-2147483648	; 0x80000000
   15fa0:	str	r0, [sp]
   15fa4:	subs	r0, r6, r9
   15fa8:	add	r2, r1, #1
   15fac:	sub	r1, fp, #32
   15fb0:	movne	r0, r6
   15fb4:	bl	16fdc <dcngettext@plt+0x5ec4>
   15fb8:	mov	sl, r0
   15fbc:	cmp	r6, r9
   15fc0:	str	r0, [r8]
   15fc4:	bne	15fd0 <dcngettext@plt+0x4eb8>
   15fc8:	ldrd	r0, [r8, #8]
   15fcc:	stm	sl, {r0, r1}
   15fd0:	ldr	r1, [r8, #4]
   15fd4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15fd8:	add	r0, sl, r1, lsl #3
   15fdc:	sub	r1, r2, r1
   15fe0:	lsl	r2, r1, #3
   15fe4:	mov	r1, #0
   15fe8:	bl	11040 <memset@plt>
   15fec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15ff0:	str	r0, [r8, #4]
   15ff4:	mov	r9, sl
   15ff8:	ldm	r7, {r0, r1}
   15ffc:	orr	r8, r1, #1
   16000:	add	r1, r7, #8
   16004:	ldr	r2, [r7, #40]	; 0x28
   16008:	ldr	r3, [r7, #44]	; 0x2c
   1600c:	ldr	r6, [r9, r5, lsl #3]!
   16010:	str	r1, [sp, #20]
   16014:	ldr	r4, [r9, #4]!
   16018:	stm	sp, {r0, r8}
   1601c:	add	r0, sp, #8
   16020:	stm	r0, {r1, r2, r3}
   16024:	ldr	r2, [sp, #32]
   16028:	ldr	r3, [sp, #36]	; 0x24
   1602c:	mov	r1, r6
   16030:	mov	r0, r4
   16034:	bl	14940 <dcngettext@plt+0x3828>
   16038:	cmp	r6, r0
   1603c:	bhi	160a0 <dcngettext@plt+0x4f88>
   16040:	add	r6, r0, #1
   16044:	movw	r0, #37304	; 0x91b8
   16048:	movt	r0, #2
   1604c:	str	r6, [sl, r5, lsl #3]
   16050:	cmp	r4, r0
   16054:	beq	16060 <dcngettext@plt+0x4f48>
   16058:	mov	r0, r4
   1605c:	bl	14634 <dcngettext@plt+0x351c>
   16060:	mov	r0, r6
   16064:	bl	16ddc <dcngettext@plt+0x5cc4>
   16068:	str	r0, [r9]
   1606c:	mov	r4, r0
   16070:	add	r3, sp, #8
   16074:	ldr	r0, [r7]
   16078:	ldr	r1, [r7, #40]	; 0x28
   1607c:	ldr	r2, [r7, #44]	; 0x2c
   16080:	stm	sp, {r0, r8}
   16084:	ldr	r0, [sp, #20]
   16088:	stm	r3, {r0, r1, r2}
   1608c:	ldr	r2, [sp, #32]
   16090:	ldr	r3, [sp, #36]	; 0x24
   16094:	mov	r0, r4
   16098:	mov	r1, r6
   1609c:	bl	14940 <dcngettext@plt+0x3828>
   160a0:	ldr	r1, [sp, #24]
   160a4:	ldr	r0, [sp, #28]
   160a8:	str	r1, [r0]
   160ac:	mov	r0, r4
   160b0:	sub	sp, fp, #28
   160b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   160b8:	bl	11100 <abort@plt>
   160bc:	movw	r3, #37256	; 0x9188
   160c0:	movt	r3, #2
   160c4:	b	15f2c <dcngettext@plt+0x4e14>
   160c8:	movw	r3, #37256	; 0x9188
   160cc:	mov	r1, r0
   160d0:	mov	r0, #0
   160d4:	mvn	r2, #0
   160d8:	movt	r3, #2
   160dc:	b	15f2c <dcngettext@plt+0x4e14>
   160e0:	movw	r3, #37256	; 0x9188
   160e4:	mov	r2, r1
   160e8:	mov	r1, r0
   160ec:	mov	r0, #0
   160f0:	movt	r3, #2
   160f4:	b	15f2c <dcngettext@plt+0x4e14>
   160f8:	push	{fp, lr}
   160fc:	mov	fp, sp
   16100:	sub	sp, sp, #48	; 0x30
   16104:	vmov.i32	q8, #0	; 0x00000000
   16108:	mov	ip, #32
   1610c:	mov	r3, sp
   16110:	mov	lr, r2
   16114:	cmp	r1, #10
   16118:	add	r2, r3, #16
   1611c:	vst1.64	{d16-d17}, [r3], ip
   16120:	vst1.64	{d16-d17}, [r2]
   16124:	vst1.64	{d16-d17}, [r3]
   16128:	beq	16148 <dcngettext@plt+0x5030>
   1612c:	str	r1, [sp]
   16130:	mov	r3, sp
   16134:	mov	r1, lr
   16138:	mvn	r2, #0
   1613c:	bl	15f2c <dcngettext@plt+0x4e14>
   16140:	mov	sp, fp
   16144:	pop	{fp, pc}
   16148:	bl	11100 <abort@plt>
   1614c:	push	{r4, sl, fp, lr}
   16150:	add	fp, sp, #8
   16154:	sub	sp, sp, #48	; 0x30
   16158:	vmov.i32	q8, #0	; 0x00000000
   1615c:	mov	ip, r3
   16160:	mov	r3, sp
   16164:	mov	lr, #32
   16168:	cmp	r1, #10
   1616c:	add	r4, r3, #16
   16170:	vst1.64	{d16-d17}, [r3], lr
   16174:	vst1.64	{d16-d17}, [r4]
   16178:	vst1.64	{d16-d17}, [r3]
   1617c:	beq	1619c <dcngettext@plt+0x5084>
   16180:	str	r1, [sp]
   16184:	mov	r1, r2
   16188:	mov	r3, sp
   1618c:	mov	r2, ip
   16190:	bl	15f2c <dcngettext@plt+0x4e14>
   16194:	sub	sp, fp, #8
   16198:	pop	{r4, sl, fp, pc}
   1619c:	bl	11100 <abort@plt>
   161a0:	push	{fp, lr}
   161a4:	mov	fp, sp
   161a8:	sub	sp, sp, #48	; 0x30
   161ac:	vmov.i32	q8, #0	; 0x00000000
   161b0:	mov	r3, sp
   161b4:	mov	ip, #32
   161b8:	cmp	r0, #10
   161bc:	add	r2, r3, #16
   161c0:	vst1.64	{d16-d17}, [r3], ip
   161c4:	vst1.64	{d16-d17}, [r2]
   161c8:	vst1.64	{d16-d17}, [r3]
   161cc:	beq	161ec <dcngettext@plt+0x50d4>
   161d0:	str	r0, [sp]
   161d4:	mov	r3, sp
   161d8:	mov	r0, #0
   161dc:	mvn	r2, #0
   161e0:	bl	15f2c <dcngettext@plt+0x4e14>
   161e4:	mov	sp, fp
   161e8:	pop	{fp, pc}
   161ec:	bl	11100 <abort@plt>
   161f0:	push	{fp, lr}
   161f4:	mov	fp, sp
   161f8:	sub	sp, sp, #48	; 0x30
   161fc:	vmov.i32	q8, #0	; 0x00000000
   16200:	mov	r3, sp
   16204:	mov	ip, #32
   16208:	cmp	r0, #10
   1620c:	add	lr, r3, #16
   16210:	vst1.64	{d16-d17}, [r3], ip
   16214:	vst1.64	{d16-d17}, [lr]
   16218:	vst1.64	{d16-d17}, [r3]
   1621c:	beq	16238 <dcngettext@plt+0x5120>
   16220:	str	r0, [sp]
   16224:	mov	r3, sp
   16228:	mov	r0, #0
   1622c:	bl	15f2c <dcngettext@plt+0x4e14>
   16230:	mov	sp, fp
   16234:	pop	{fp, pc}
   16238:	bl	11100 <abort@plt>
   1623c:	push	{r4, sl, fp, lr}
   16240:	add	fp, sp, #8
   16244:	sub	sp, sp, #48	; 0x30
   16248:	mov	lr, r0
   1624c:	movw	r0, #37256	; 0x9188
   16250:	mov	ip, r1
   16254:	mov	r1, #32
   16258:	mov	r4, #1
   1625c:	movt	r0, #2
   16260:	add	r3, r0, #16
   16264:	vld1.64	{d16-d17}, [r0], r1
   16268:	vld1.64	{d20-d21}, [r0]
   1626c:	vld1.64	{d18-d19}, [r3]
   16270:	mov	r3, sp
   16274:	add	r0, r3, #32
   16278:	add	r1, r3, #16
   1627c:	vst1.64	{d20-d21}, [r0]
   16280:	mov	r0, #28
   16284:	vst1.64	{d18-d19}, [r1]
   16288:	mov	r1, r3
   1628c:	and	r0, r0, r2, lsr #3
   16290:	and	r2, r2, #31
   16294:	vst1.64	{d16-d17}, [r1], r0
   16298:	ldr	r0, [r1, #8]
   1629c:	bic	r4, r4, r0, lsr r2
   162a0:	eor	r0, r0, r4, lsl r2
   162a4:	mov	r2, ip
   162a8:	str	r0, [r1, #8]
   162ac:	mov	r0, #0
   162b0:	mov	r1, lr
   162b4:	bl	15f2c <dcngettext@plt+0x4e14>
   162b8:	sub	sp, fp, #8
   162bc:	pop	{r4, sl, fp, pc}
   162c0:	push	{fp, lr}
   162c4:	mov	fp, sp
   162c8:	sub	sp, sp, #48	; 0x30
   162cc:	mov	ip, r0
   162d0:	movw	r0, #37256	; 0x9188
   162d4:	mov	r2, #32
   162d8:	movt	r0, #2
   162dc:	add	r3, r0, #16
   162e0:	vld1.64	{d16-d17}, [r0], r2
   162e4:	vld1.64	{d20-d21}, [r0]
   162e8:	vld1.64	{d18-d19}, [r3]
   162ec:	mov	r3, sp
   162f0:	add	r0, r3, #32
   162f4:	add	r2, r3, #16
   162f8:	vst1.64	{d20-d21}, [r0]
   162fc:	mov	r0, #28
   16300:	vst1.64	{d18-d19}, [r2]
   16304:	mov	r2, r3
   16308:	and	r0, r0, r1, lsr #3
   1630c:	and	r1, r1, #31
   16310:	vst1.64	{d16-d17}, [r2], r0
   16314:	mov	r0, #1
   16318:	ldr	lr, [r2, #8]
   1631c:	bic	r0, r0, lr, lsr r1
   16320:	eor	r0, lr, r0, lsl r1
   16324:	mov	r1, ip
   16328:	str	r0, [r2, #8]
   1632c:	mov	r0, #0
   16330:	mvn	r2, #0
   16334:	bl	15f2c <dcngettext@plt+0x4e14>
   16338:	mov	sp, fp
   1633c:	pop	{fp, pc}
   16340:	push	{fp, lr}
   16344:	mov	fp, sp
   16348:	sub	sp, sp, #48	; 0x30
   1634c:	mov	r1, r0
   16350:	movw	r0, #37256	; 0x9188
   16354:	mov	r3, #32
   16358:	movt	r0, #2
   1635c:	add	r2, r0, #16
   16360:	vld1.64	{d16-d17}, [r0], r3
   16364:	mov	r3, sp
   16368:	vld1.64	{d18-d19}, [r2]
   1636c:	vld1.64	{d20-d21}, [r0]
   16370:	add	r2, r3, #16
   16374:	add	r0, r3, #32
   16378:	vst1.64	{d18-d19}, [r2]
   1637c:	vst1.64	{d20-d21}, [r0]
   16380:	mov	r0, #12
   16384:	mov	r2, r3
   16388:	vst1.64	{d16-d17}, [r2], r0
   1638c:	ldr	r0, [r2]
   16390:	orr	r0, r0, #67108864	; 0x4000000
   16394:	str	r0, [r2]
   16398:	mov	r0, #0
   1639c:	mvn	r2, #0
   163a0:	bl	15f2c <dcngettext@plt+0x4e14>
   163a4:	mov	sp, fp
   163a8:	pop	{fp, pc}
   163ac:	push	{fp, lr}
   163b0:	mov	fp, sp
   163b4:	sub	sp, sp, #48	; 0x30
   163b8:	mov	ip, r1
   163bc:	mov	r1, r0
   163c0:	movw	r0, #37256	; 0x9188
   163c4:	mov	r2, #32
   163c8:	movt	r0, #2
   163cc:	add	r3, r0, #16
   163d0:	vld1.64	{d16-d17}, [r0], r2
   163d4:	vld1.64	{d18-d19}, [r3]
   163d8:	vld1.64	{d20-d21}, [r0]
   163dc:	mov	r3, sp
   163e0:	add	r2, r3, #16
   163e4:	add	r0, r3, #32
   163e8:	vst1.64	{d18-d19}, [r2]
   163ec:	vst1.64	{d20-d21}, [r0]
   163f0:	mov	r0, #12
   163f4:	mov	r2, r3
   163f8:	vst1.64	{d16-d17}, [r2], r0
   163fc:	ldr	r0, [r2]
   16400:	orr	r0, r0, #67108864	; 0x4000000
   16404:	str	r0, [r2]
   16408:	mov	r0, #0
   1640c:	mov	r2, ip
   16410:	bl	15f2c <dcngettext@plt+0x4e14>
   16414:	mov	sp, fp
   16418:	pop	{fp, pc}
   1641c:	push	{r4, sl, fp, lr}
   16420:	add	fp, sp, #8
   16424:	sub	sp, sp, #96	; 0x60
   16428:	vmov.i32	q8, #0	; 0x00000000
   1642c:	mov	ip, r2
   16430:	mov	r2, sp
   16434:	mov	r4, #28
   16438:	cmp	r1, #10
   1643c:	mov	r3, r2
   16440:	add	lr, r2, #16
   16444:	vst1.64	{d16-d17}, [r3], r4
   16448:	vst1.64	{d16-d17}, [lr]
   1644c:	vst1.32	{d16-d17}, [r3]
   16450:	beq	164a0 <dcngettext@plt+0x5388>
   16454:	vld1.64	{d16-d17}, [r2], r4
   16458:	vld1.64	{d18-d19}, [lr]
   1645c:	add	r3, sp, #48	; 0x30
   16460:	vld1.32	{d20-d21}, [r2]
   16464:	add	r2, r3, #20
   16468:	add	r4, r3, #4
   1646c:	vst1.32	{d18-d19}, [r2]
   16470:	add	r2, r3, #32
   16474:	vst1.32	{d16-d17}, [r4]
   16478:	vst1.32	{d20-d21}, [r2]
   1647c:	str	r1, [sp, #48]	; 0x30
   16480:	mvn	r2, #0
   16484:	ldr	r1, [sp, #60]	; 0x3c
   16488:	orr	r1, r1, #67108864	; 0x4000000
   1648c:	str	r1, [sp, #60]	; 0x3c
   16490:	mov	r1, ip
   16494:	bl	15f2c <dcngettext@plt+0x4e14>
   16498:	sub	sp, fp, #8
   1649c:	pop	{r4, sl, fp, pc}
   164a0:	bl	11100 <abort@plt>
   164a4:	push	{r4, r5, r6, sl, fp, lr}
   164a8:	add	fp, sp, #16
   164ac:	sub	sp, sp, #48	; 0x30
   164b0:	mov	ip, r3
   164b4:	movw	r3, #37256	; 0x9188
   164b8:	mov	r6, #32
   164bc:	cmp	r1, #0
   164c0:	mov	r4, sp
   164c4:	movt	r3, #2
   164c8:	cmpne	r2, #0
   164cc:	add	r5, r4, #16
   164d0:	add	lr, r3, #16
   164d4:	vld1.64	{d16-d17}, [r3], r6
   164d8:	vld1.64	{d18-d19}, [lr]
   164dc:	vld1.64	{d20-d21}, [r3]
   164e0:	mov	r3, #10
   164e4:	vst1.64	{d16-d17}, [r4], r6
   164e8:	vst1.64	{d18-d19}, [r5]
   164ec:	vst1.64	{d20-d21}, [r4]
   164f0:	str	r3, [sp]
   164f4:	bne	164fc <dcngettext@plt+0x53e4>
   164f8:	bl	11100 <abort@plt>
   164fc:	str	r2, [sp, #44]	; 0x2c
   16500:	str	r1, [sp, #40]	; 0x28
   16504:	mov	r3, sp
   16508:	mov	r1, ip
   1650c:	mvn	r2, #0
   16510:	bl	15f2c <dcngettext@plt+0x4e14>
   16514:	sub	sp, fp, #16
   16518:	pop	{r4, r5, r6, sl, fp, pc}
   1651c:	push	{r4, r5, r6, sl, fp, lr}
   16520:	add	fp, sp, #16
   16524:	sub	sp, sp, #48	; 0x30
   16528:	mov	lr, r3
   1652c:	movw	r3, #37256	; 0x9188
   16530:	mov	r6, #32
   16534:	cmp	r1, #0
   16538:	mov	r4, sp
   1653c:	movt	r3, #2
   16540:	cmpne	r2, #0
   16544:	add	r5, r4, #16
   16548:	add	ip, r3, #16
   1654c:	vld1.64	{d16-d17}, [r3], r6
   16550:	vld1.64	{d18-d19}, [ip]
   16554:	vld1.64	{d20-d21}, [r3]
   16558:	mov	r3, #10
   1655c:	vst1.64	{d16-d17}, [r4], r6
   16560:	vst1.64	{d18-d19}, [r5]
   16564:	vst1.64	{d20-d21}, [r4]
   16568:	str	r3, [sp]
   1656c:	bne	16574 <dcngettext@plt+0x545c>
   16570:	bl	11100 <abort@plt>
   16574:	ldr	ip, [fp, #8]
   16578:	str	r2, [sp, #44]	; 0x2c
   1657c:	str	r1, [sp, #40]	; 0x28
   16580:	mov	r3, sp
   16584:	mov	r1, lr
   16588:	mov	r2, ip
   1658c:	bl	15f2c <dcngettext@plt+0x4e14>
   16590:	sub	sp, fp, #16
   16594:	pop	{r4, r5, r6, sl, fp, pc}
   16598:	push	{r4, sl, fp, lr}
   1659c:	add	fp, sp, #8
   165a0:	sub	sp, sp, #48	; 0x30
   165a4:	movw	r3, #37256	; 0x9188
   165a8:	mov	lr, #32
   165ac:	mov	ip, r2
   165b0:	cmp	r0, #0
   165b4:	movt	r3, #2
   165b8:	cmpne	r1, #0
   165bc:	add	r2, r3, #16
   165c0:	vld1.64	{d16-d17}, [r3], lr
   165c4:	vld1.64	{d20-d21}, [r3]
   165c8:	vld1.64	{d18-d19}, [r2]
   165cc:	mov	r2, sp
   165d0:	add	r4, r2, #16
   165d4:	vst1.64	{d16-d17}, [r2], lr
   165d8:	vst1.64	{d20-d21}, [r2]
   165dc:	mov	r2, #10
   165e0:	vst1.64	{d18-d19}, [r4]
   165e4:	str	r2, [sp]
   165e8:	bne	165f0 <dcngettext@plt+0x54d8>
   165ec:	bl	11100 <abort@plt>
   165f0:	str	r1, [sp, #44]	; 0x2c
   165f4:	str	r0, [sp, #40]	; 0x28
   165f8:	mov	r3, sp
   165fc:	mov	r0, #0
   16600:	mov	r1, ip
   16604:	mvn	r2, #0
   16608:	bl	15f2c <dcngettext@plt+0x4e14>
   1660c:	sub	sp, fp, #8
   16610:	pop	{r4, sl, fp, pc}
   16614:	push	{r4, r5, fp, lr}
   16618:	add	fp, sp, #8
   1661c:	sub	sp, sp, #48	; 0x30
   16620:	mov	ip, r3
   16624:	movw	r3, #37256	; 0x9188
   16628:	mov	r4, #32
   1662c:	mov	lr, r2
   16630:	cmp	r0, #0
   16634:	movt	r3, #2
   16638:	cmpne	r1, #0
   1663c:	add	r2, r3, #16
   16640:	vld1.64	{d16-d17}, [r3], r4
   16644:	vld1.64	{d20-d21}, [r3]
   16648:	vld1.64	{d18-d19}, [r2]
   1664c:	mov	r2, sp
   16650:	add	r5, r2, #16
   16654:	vst1.64	{d16-d17}, [r2], r4
   16658:	vst1.64	{d20-d21}, [r2]
   1665c:	mov	r2, #10
   16660:	vst1.64	{d18-d19}, [r5]
   16664:	str	r2, [sp]
   16668:	bne	16670 <dcngettext@plt+0x5558>
   1666c:	bl	11100 <abort@plt>
   16670:	str	r1, [sp, #44]	; 0x2c
   16674:	str	r0, [sp, #40]	; 0x28
   16678:	mov	r3, sp
   1667c:	mov	r0, #0
   16680:	mov	r1, lr
   16684:	mov	r2, ip
   16688:	bl	15f2c <dcngettext@plt+0x4e14>
   1668c:	sub	sp, fp, #8
   16690:	pop	{r4, r5, fp, pc}
   16694:	movw	r3, #37128	; 0x9108
   16698:	movt	r3, #2
   1669c:	b	15f2c <dcngettext@plt+0x4e14>
   166a0:	movw	r3, #37128	; 0x9108
   166a4:	mov	r2, r1
   166a8:	mov	r1, r0
   166ac:	mov	r0, #0
   166b0:	movt	r3, #2
   166b4:	b	15f2c <dcngettext@plt+0x4e14>
   166b8:	movw	r3, #37128	; 0x9108
   166bc:	mvn	r2, #0
   166c0:	movt	r3, #2
   166c4:	b	15f2c <dcngettext@plt+0x4e14>
   166c8:	movw	r3, #37128	; 0x9108
   166cc:	mov	r1, r0
   166d0:	mov	r0, #0
   166d4:	mvn	r2, #0
   166d8:	movt	r3, #2
   166dc:	b	15f2c <dcngettext@plt+0x4e14>
   166e0:	mov	r1, #0
   166e4:	mov	r2, #3
   166e8:	b	17488 <dcngettext@plt+0x6370>
   166ec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   166f0:	add	fp, sp, #24
   166f4:	sub	sp, sp, #32
   166f8:	ldr	r6, [fp, #12]
   166fc:	ldr	r7, [fp, #8]
   16700:	mov	r4, r2
   16704:	mov	r8, r0
   16708:	cmp	r1, #0
   1670c:	beq	16734 <dcngettext@plt+0x561c>
   16710:	movw	r2, #34924	; 0x886c
   16714:	mov	r5, r1
   16718:	str	r3, [sp, #4]
   1671c:	str	r4, [sp]
   16720:	mov	r0, r8
   16724:	mov	r1, #1
   16728:	movt	r2, #1
   1672c:	mov	r3, r5
   16730:	b	1674c <dcngettext@plt+0x5634>
   16734:	movw	r2, #34936	; 0x8878
   16738:	str	r3, [sp]
   1673c:	mov	r0, r8
   16740:	mov	r1, #1
   16744:	mov	r3, r4
   16748:	movt	r2, #1
   1674c:	bl	11064 <__fprintf_chk@plt>
   16750:	movw	r1, #34943	; 0x887f
   16754:	mov	r0, #0
   16758:	mov	r2, #5
   1675c:	movt	r1, #1
   16760:	bl	10f20 <dcgettext@plt>
   16764:	movw	r2, #35661	; 0x8b4d
   16768:	mov	r3, r0
   1676c:	movw	r0, #2022	; 0x7e6
   16770:	mov	r1, #1
   16774:	movt	r2, #1
   16778:	str	r0, [sp]
   1677c:	mov	r0, r8
   16780:	bl	11064 <__fprintf_chk@plt>
   16784:	movw	r4, #32207	; 0x7dcf
   16788:	mov	r1, r8
   1678c:	movt	r4, #1
   16790:	mov	r0, r4
   16794:	bl	10ea8 <fputs_unlocked@plt>
   16798:	movw	r1, #34947	; 0x8883
   1679c:	mov	r0, #0
   167a0:	mov	r2, #5
   167a4:	movt	r1, #1
   167a8:	bl	10f20 <dcgettext@plt>
   167ac:	movw	r3, #35118	; 0x892e
   167b0:	mov	r2, r0
   167b4:	mov	r0, r8
   167b8:	mov	r1, #1
   167bc:	movt	r3, #1
   167c0:	bl	11064 <__fprintf_chk@plt>
   167c4:	mov	r0, r4
   167c8:	mov	r1, r8
   167cc:	bl	10ea8 <fputs_unlocked@plt>
   167d0:	cmp	r6, #9
   167d4:	bhi	16810 <dcngettext@plt+0x56f8>
   167d8:	add	r0, pc, #0
   167dc:	ldr	pc, [r0, r6, lsl #2]
   167e0:	andeq	r6, r1, r8, lsl #16
   167e4:	andeq	r6, r1, ip, lsl r8
   167e8:	andeq	r6, r1, ip, asr #16
   167ec:	andeq	r6, r1, r4, ror r8
   167f0:	muleq	r1, ip, r8
   167f4:	andeq	r6, r1, r4, asr #17
   167f8:	andeq	r6, r1, ip, ror #17
   167fc:	andeq	r6, r1, r4, lsr #18
   16800:	andeq	r6, r1, ip, asr #19
   16804:	andeq	r6, r1, r4, ror r9
   16808:	sub	sp, fp, #24
   1680c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16810:	movw	r1, #35471	; 0x8a8f
   16814:	movt	r1, #1
   16818:	b	1697c <dcngettext@plt+0x5864>
   1681c:	movw	r1, #35152	; 0x8950
   16820:	mov	r0, #0
   16824:	mov	r2, #5
   16828:	movt	r1, #1
   1682c:	bl	10f20 <dcgettext@plt>
   16830:	ldr	r3, [r7]
   16834:	mov	r2, r0
   16838:	mov	r0, r8
   1683c:	mov	r1, #1
   16840:	sub	sp, fp, #24
   16844:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   16848:	b	11064 <__fprintf_chk@plt>
   1684c:	movw	r1, #35168	; 0x8960
   16850:	mov	r0, #0
   16854:	mov	r2, #5
   16858:	movt	r1, #1
   1685c:	bl	10f20 <dcgettext@plt>
   16860:	mov	r2, r0
   16864:	ldr	r3, [r7]
   16868:	ldr	r0, [r7, #4]
   1686c:	str	r0, [sp]
   16870:	b	16960 <dcngettext@plt+0x5848>
   16874:	movw	r1, #35191	; 0x8977
   16878:	mov	r0, #0
   1687c:	mov	r2, #5
   16880:	movt	r1, #1
   16884:	bl	10f20 <dcgettext@plt>
   16888:	mov	r2, r0
   1688c:	ldr	r3, [r7]
   16890:	ldmib	r7, {r0, r1}
   16894:	stm	sp, {r0, r1}
   16898:	b	16960 <dcngettext@plt+0x5848>
   1689c:	movw	r1, #35219	; 0x8993
   168a0:	mov	r0, #0
   168a4:	mov	r2, #5
   168a8:	movt	r1, #1
   168ac:	bl	10f20 <dcgettext@plt>
   168b0:	ldr	r3, [r7]
   168b4:	mov	r2, r0
   168b8:	ldmib	r7, {r0, r1, r7}
   168bc:	stm	sp, {r0, r1, r7}
   168c0:	b	16960 <dcngettext@plt+0x5848>
   168c4:	movw	r1, #35251	; 0x89b3
   168c8:	mov	r0, #0
   168cc:	mov	r2, #5
   168d0:	movt	r1, #1
   168d4:	bl	10f20 <dcgettext@plt>
   168d8:	ldr	r3, [r7]
   168dc:	mov	r2, r0
   168e0:	ldmib	r7, {r0, r1, r6, r7}
   168e4:	stm	sp, {r0, r1, r6, r7}
   168e8:	b	16960 <dcngettext@plt+0x5848>
   168ec:	movw	r1, #35287	; 0x89d7
   168f0:	mov	r0, #0
   168f4:	mov	r2, #5
   168f8:	movt	r1, #1
   168fc:	bl	10f20 <dcgettext@plt>
   16900:	mov	r2, r0
   16904:	ldr	r3, [r7]
   16908:	ldmib	r7, {r0, r1, r6}
   1690c:	ldr	r5, [r7, #16]
   16910:	ldr	r7, [r7, #20]
   16914:	stm	sp, {r0, r1, r6}
   16918:	str	r5, [sp, #12]
   1691c:	str	r7, [sp, #16]
   16920:	b	16960 <dcngettext@plt+0x5848>
   16924:	movw	r1, #35327	; 0x89ff
   16928:	mov	r0, #0
   1692c:	mov	r2, #5
   16930:	movt	r1, #1
   16934:	bl	10f20 <dcgettext@plt>
   16938:	mov	r2, r0
   1693c:	ldr	r3, [r7]
   16940:	ldmib	r7, {r0, r1, r6}
   16944:	ldr	r5, [r7, #16]
   16948:	ldr	r4, [r7, #20]
   1694c:	ldr	r7, [r7, #24]
   16950:	stm	sp, {r0, r1, r6}
   16954:	str	r5, [sp, #12]
   16958:	str	r4, [sp, #16]
   1695c:	str	r7, [sp, #20]
   16960:	mov	r0, r8
   16964:	mov	r1, #1
   16968:	bl	11064 <__fprintf_chk@plt>
   1696c:	sub	sp, fp, #24
   16970:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16974:	movw	r1, #35419	; 0x8a5b
   16978:	movt	r1, #1
   1697c:	mov	r0, #0
   16980:	mov	r2, #5
   16984:	bl	10f20 <dcgettext@plt>
   16988:	mov	ip, r0
   1698c:	ldr	r3, [r7]
   16990:	ldr	r0, [r7, #4]
   16994:	ldr	r1, [r7, #8]
   16998:	ldr	r6, [r7, #12]
   1699c:	ldr	r5, [r7, #16]
   169a0:	ldr	r4, [r7, #20]
   169a4:	ldr	r2, [r7, #24]
   169a8:	ldr	lr, [r7, #28]
   169ac:	ldr	r7, [r7, #32]
   169b0:	stm	sp, {r0, r1, r6}
   169b4:	str	r5, [sp, #12]
   169b8:	str	r4, [sp, #16]
   169bc:	str	r2, [sp, #20]
   169c0:	str	lr, [sp, #24]
   169c4:	str	r7, [sp, #28]
   169c8:	b	16a10 <dcngettext@plt+0x58f8>
   169cc:	movw	r1, #35371	; 0x8a2b
   169d0:	mov	r0, #0
   169d4:	mov	r2, #5
   169d8:	movt	r1, #1
   169dc:	bl	10f20 <dcgettext@plt>
   169e0:	mov	ip, r0
   169e4:	ldr	r3, [r7]
   169e8:	ldmib	r7, {r0, r1, r6}
   169ec:	ldr	r5, [r7, #16]
   169f0:	ldr	r4, [r7, #20]
   169f4:	ldr	r2, [r7, #24]
   169f8:	ldr	r7, [r7, #28]
   169fc:	stm	sp, {r0, r1, r6}
   16a00:	str	r5, [sp, #12]
   16a04:	str	r4, [sp, #16]
   16a08:	str	r2, [sp, #20]
   16a0c:	str	r7, [sp, #24]
   16a10:	mov	r0, r8
   16a14:	mov	r1, #1
   16a18:	mov	r2, ip
   16a1c:	bl	11064 <__fprintf_chk@plt>
   16a20:	sub	sp, fp, #24
   16a24:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16a28:	push	{r4, sl, fp, lr}
   16a2c:	add	fp, sp, #8
   16a30:	sub	sp, sp, #8
   16a34:	ldr	ip, [fp, #8]
   16a38:	mov	lr, #0
   16a3c:	ldr	r4, [ip, lr, lsl #2]
   16a40:	add	lr, lr, #1
   16a44:	cmp	r4, #0
   16a48:	bne	16a3c <dcngettext@plt+0x5924>
   16a4c:	sub	r4, lr, #1
   16a50:	str	ip, [sp]
   16a54:	str	r4, [sp, #4]
   16a58:	bl	166ec <dcngettext@plt+0x55d4>
   16a5c:	sub	sp, fp, #8
   16a60:	pop	{r4, sl, fp, pc}
   16a64:	push	{fp, lr}
   16a68:	mov	fp, sp
   16a6c:	sub	sp, sp, #48	; 0x30
   16a70:	ldr	ip, [fp, #8]
   16a74:	ldr	lr, [ip]
   16a78:	cmp	lr, #0
   16a7c:	str	lr, [sp, #8]
   16a80:	beq	16b1c <dcngettext@plt+0x5a04>
   16a84:	ldr	lr, [ip, #4]
   16a88:	cmp	lr, #0
   16a8c:	str	lr, [sp, #12]
   16a90:	beq	16b24 <dcngettext@plt+0x5a0c>
   16a94:	ldr	lr, [ip, #8]
   16a98:	cmp	lr, #0
   16a9c:	str	lr, [sp, #16]
   16aa0:	beq	16b2c <dcngettext@plt+0x5a14>
   16aa4:	ldr	lr, [ip, #12]
   16aa8:	cmp	lr, #0
   16aac:	str	lr, [sp, #20]
   16ab0:	beq	16b34 <dcngettext@plt+0x5a1c>
   16ab4:	ldr	lr, [ip, #16]
   16ab8:	cmp	lr, #0
   16abc:	str	lr, [sp, #24]
   16ac0:	beq	16b3c <dcngettext@plt+0x5a24>
   16ac4:	ldr	lr, [ip, #20]
   16ac8:	cmp	lr, #0
   16acc:	str	lr, [sp, #28]
   16ad0:	beq	16b44 <dcngettext@plt+0x5a2c>
   16ad4:	ldr	lr, [ip, #24]
   16ad8:	cmp	lr, #0
   16adc:	str	lr, [sp, #32]
   16ae0:	beq	16b4c <dcngettext@plt+0x5a34>
   16ae4:	ldr	lr, [ip, #28]
   16ae8:	cmp	lr, #0
   16aec:	str	lr, [sp, #36]	; 0x24
   16af0:	beq	16b54 <dcngettext@plt+0x5a3c>
   16af4:	ldr	lr, [ip, #32]
   16af8:	cmp	lr, #0
   16afc:	str	lr, [sp, #40]	; 0x28
   16b00:	beq	16b5c <dcngettext@plt+0x5a44>
   16b04:	ldr	lr, [ip, #36]	; 0x24
   16b08:	mov	ip, #10
   16b0c:	cmp	lr, #0
   16b10:	str	lr, [sp, #44]	; 0x2c
   16b14:	movweq	ip, #9
   16b18:	b	16b60 <dcngettext@plt+0x5a48>
   16b1c:	mov	ip, #0
   16b20:	b	16b60 <dcngettext@plt+0x5a48>
   16b24:	mov	ip, #1
   16b28:	b	16b60 <dcngettext@plt+0x5a48>
   16b2c:	mov	ip, #2
   16b30:	b	16b60 <dcngettext@plt+0x5a48>
   16b34:	mov	ip, #3
   16b38:	b	16b60 <dcngettext@plt+0x5a48>
   16b3c:	mov	ip, #4
   16b40:	b	16b60 <dcngettext@plt+0x5a48>
   16b44:	mov	ip, #5
   16b48:	b	16b60 <dcngettext@plt+0x5a48>
   16b4c:	mov	ip, #6
   16b50:	b	16b60 <dcngettext@plt+0x5a48>
   16b54:	mov	ip, #7
   16b58:	b	16b60 <dcngettext@plt+0x5a48>
   16b5c:	mov	ip, #8
   16b60:	add	lr, sp, #8
   16b64:	str	ip, [sp, #4]
   16b68:	str	lr, [sp]
   16b6c:	bl	166ec <dcngettext@plt+0x55d4>
   16b70:	mov	sp, fp
   16b74:	pop	{fp, pc}
   16b78:	push	{fp, lr}
   16b7c:	mov	fp, sp
   16b80:	sub	sp, sp, #56	; 0x38
   16b84:	add	ip, fp, #8
   16b88:	str	ip, [sp, #12]
   16b8c:	ldr	lr, [fp, #8]
   16b90:	cmp	lr, #0
   16b94:	str	lr, [sp, #16]
   16b98:	beq	16c34 <dcngettext@plt+0x5b1c>
   16b9c:	ldr	lr, [ip, #4]
   16ba0:	cmp	lr, #0
   16ba4:	str	lr, [sp, #20]
   16ba8:	beq	16c3c <dcngettext@plt+0x5b24>
   16bac:	ldr	lr, [ip, #8]
   16bb0:	cmp	lr, #0
   16bb4:	str	lr, [sp, #24]
   16bb8:	beq	16c44 <dcngettext@plt+0x5b2c>
   16bbc:	ldr	lr, [ip, #12]
   16bc0:	cmp	lr, #0
   16bc4:	str	lr, [sp, #28]
   16bc8:	beq	16c4c <dcngettext@plt+0x5b34>
   16bcc:	ldr	lr, [ip, #16]
   16bd0:	cmp	lr, #0
   16bd4:	str	lr, [sp, #32]
   16bd8:	beq	16c54 <dcngettext@plt+0x5b3c>
   16bdc:	ldr	lr, [ip, #20]
   16be0:	cmp	lr, #0
   16be4:	str	lr, [sp, #36]	; 0x24
   16be8:	beq	16c5c <dcngettext@plt+0x5b44>
   16bec:	ldr	lr, [ip, #24]
   16bf0:	cmp	lr, #0
   16bf4:	str	lr, [sp, #40]	; 0x28
   16bf8:	beq	16c64 <dcngettext@plt+0x5b4c>
   16bfc:	ldr	lr, [ip, #28]
   16c00:	cmp	lr, #0
   16c04:	str	lr, [sp, #44]	; 0x2c
   16c08:	beq	16c6c <dcngettext@plt+0x5b54>
   16c0c:	ldr	lr, [ip, #32]
   16c10:	cmp	lr, #0
   16c14:	str	lr, [sp, #48]	; 0x30
   16c18:	beq	16c74 <dcngettext@plt+0x5b5c>
   16c1c:	ldr	lr, [ip, #36]	; 0x24
   16c20:	mov	ip, #10
   16c24:	cmp	lr, #0
   16c28:	str	lr, [sp, #52]	; 0x34
   16c2c:	movweq	ip, #9
   16c30:	b	16c78 <dcngettext@plt+0x5b60>
   16c34:	mov	ip, #0
   16c38:	b	16c78 <dcngettext@plt+0x5b60>
   16c3c:	mov	ip, #1
   16c40:	b	16c78 <dcngettext@plt+0x5b60>
   16c44:	mov	ip, #2
   16c48:	b	16c78 <dcngettext@plt+0x5b60>
   16c4c:	mov	ip, #3
   16c50:	b	16c78 <dcngettext@plt+0x5b60>
   16c54:	mov	ip, #4
   16c58:	b	16c78 <dcngettext@plt+0x5b60>
   16c5c:	mov	ip, #5
   16c60:	b	16c78 <dcngettext@plt+0x5b60>
   16c64:	mov	ip, #6
   16c68:	b	16c78 <dcngettext@plt+0x5b60>
   16c6c:	mov	ip, #7
   16c70:	b	16c78 <dcngettext@plt+0x5b60>
   16c74:	mov	ip, #8
   16c78:	add	lr, sp, #16
   16c7c:	str	ip, [sp, #4]
   16c80:	str	lr, [sp]
   16c84:	bl	166ec <dcngettext@plt+0x55d4>
   16c88:	mov	sp, fp
   16c8c:	pop	{fp, pc}
   16c90:	push	{fp, lr}
   16c94:	mov	fp, sp
   16c98:	movw	r0, #37220	; 0x9164
   16c9c:	movt	r0, #2
   16ca0:	ldr	r1, [r0]
   16ca4:	movw	r0, #32207	; 0x7dcf
   16ca8:	movt	r0, #1
   16cac:	bl	10ea8 <fputs_unlocked@plt>
   16cb0:	movw	r1, #35531	; 0x8acb
   16cb4:	mov	r0, #0
   16cb8:	mov	r2, #5
   16cbc:	movt	r1, #1
   16cc0:	bl	10f20 <dcgettext@plt>
   16cc4:	movw	r2, #35551	; 0x8adf
   16cc8:	mov	r1, r0
   16ccc:	mov	r0, #1
   16cd0:	movt	r2, #1
   16cd4:	bl	1104c <__printf_chk@plt>
   16cd8:	movw	r1, #35573	; 0x8af5
   16cdc:	mov	r0, #0
   16ce0:	mov	r2, #5
   16ce4:	movt	r1, #1
   16ce8:	bl	10f20 <dcgettext@plt>
   16cec:	movw	r2, #32731	; 0x7fdb
   16cf0:	movw	r3, #33525	; 0x82f5
   16cf4:	mov	r1, r0
   16cf8:	mov	r0, #1
   16cfc:	movt	r2, #1
   16d00:	movt	r3, #1
   16d04:	bl	1104c <__printf_chk@plt>
   16d08:	movw	r1, #35593	; 0x8b09
   16d0c:	mov	r0, #0
   16d10:	mov	r2, #5
   16d14:	movt	r1, #1
   16d18:	bl	10f20 <dcgettext@plt>
   16d1c:	movw	r2, #35632	; 0x8b30
   16d20:	mov	r1, r0
   16d24:	mov	r0, #1
   16d28:	movt	r2, #1
   16d2c:	pop	{fp, lr}
   16d30:	b	1104c <__printf_chk@plt>
   16d34:	push	{r4, r5, r6, sl, fp, lr}
   16d38:	add	fp, sp, #16
   16d3c:	mov	r4, r2
   16d40:	mov	r5, r1
   16d44:	mov	r6, r0
   16d48:	bl	17704 <dcngettext@plt+0x65ec>
   16d4c:	cmp	r0, #0
   16d50:	popne	{r4, r5, r6, sl, fp, pc}
   16d54:	cmp	r6, #0
   16d58:	beq	16d6c <dcngettext@plt+0x5c54>
   16d5c:	cmp	r5, #0
   16d60:	cmpne	r4, #0
   16d64:	bne	16d6c <dcngettext@plt+0x5c54>
   16d68:	pop	{r4, r5, r6, sl, fp, pc}
   16d6c:	bl	172e8 <dcngettext@plt+0x61d0>
   16d70:	push	{r4, r5, r6, sl, fp, lr}
   16d74:	add	fp, sp, #16
   16d78:	mov	r4, r2
   16d7c:	mov	r5, r1
   16d80:	mov	r6, r0
   16d84:	bl	17704 <dcngettext@plt+0x65ec>
   16d88:	cmp	r0, #0
   16d8c:	popne	{r4, r5, r6, sl, fp, pc}
   16d90:	cmp	r6, #0
   16d94:	beq	16da8 <dcngettext@plt+0x5c90>
   16d98:	cmp	r5, #0
   16d9c:	cmpne	r4, #0
   16da0:	bne	16da8 <dcngettext@plt+0x5c90>
   16da4:	pop	{r4, r5, r6, sl, fp, pc}
   16da8:	bl	172e8 <dcngettext@plt+0x61d0>
   16dac:	push	{fp, lr}
   16db0:	mov	fp, sp
   16db4:	bl	17380 <dcngettext@plt+0x6268>
   16db8:	cmp	r0, #0
   16dbc:	popne	{fp, pc}
   16dc0:	bl	172e8 <dcngettext@plt+0x61d0>
   16dc4:	push	{fp, lr}
   16dc8:	mov	fp, sp
   16dcc:	bl	17380 <dcngettext@plt+0x6268>
   16dd0:	cmp	r0, #0
   16dd4:	popne	{fp, pc}
   16dd8:	bl	172e8 <dcngettext@plt+0x61d0>
   16ddc:	push	{fp, lr}
   16de0:	mov	fp, sp
   16de4:	bl	17380 <dcngettext@plt+0x6268>
   16de8:	cmp	r0, #0
   16dec:	popne	{fp, pc}
   16df0:	bl	172e8 <dcngettext@plt+0x61d0>
   16df4:	push	{r4, r5, fp, lr}
   16df8:	add	fp, sp, #8
   16dfc:	mov	r4, r1
   16e00:	mov	r5, r0
   16e04:	bl	173b0 <dcngettext@plt+0x6298>
   16e08:	cmp	r0, #0
   16e0c:	popne	{r4, r5, fp, pc}
   16e10:	cmp	r5, #0
   16e14:	beq	16e24 <dcngettext@plt+0x5d0c>
   16e18:	cmp	r4, #0
   16e1c:	bne	16e24 <dcngettext@plt+0x5d0c>
   16e20:	pop	{r4, r5, fp, pc}
   16e24:	bl	172e8 <dcngettext@plt+0x61d0>
   16e28:	push	{fp, lr}
   16e2c:	mov	fp, sp
   16e30:	cmp	r1, #0
   16e34:	orreq	r1, r1, #1
   16e38:	bl	173b0 <dcngettext@plt+0x6298>
   16e3c:	cmp	r0, #0
   16e40:	popne	{fp, pc}
   16e44:	bl	172e8 <dcngettext@plt+0x61d0>
   16e48:	push	{fp, lr}
   16e4c:	mov	fp, sp
   16e50:	clz	r3, r2
   16e54:	lsr	ip, r3, #5
   16e58:	clz	r3, r1
   16e5c:	lsr	r3, r3, #5
   16e60:	orrs	r3, r3, ip
   16e64:	movwne	r1, #1
   16e68:	movwne	r2, #1
   16e6c:	bl	17704 <dcngettext@plt+0x65ec>
   16e70:	cmp	r0, #0
   16e74:	popne	{fp, pc}
   16e78:	bl	172e8 <dcngettext@plt+0x61d0>
   16e7c:	push	{fp, lr}
   16e80:	mov	fp, sp
   16e84:	mov	r2, r1
   16e88:	mov	r1, r0
   16e8c:	mov	r0, #0
   16e90:	bl	17704 <dcngettext@plt+0x65ec>
   16e94:	cmp	r0, #0
   16e98:	popne	{fp, pc}
   16e9c:	bl	172e8 <dcngettext@plt+0x61d0>
   16ea0:	push	{fp, lr}
   16ea4:	mov	fp, sp
   16ea8:	mov	r2, r1
   16eac:	mov	r1, r0
   16eb0:	clz	r0, r2
   16eb4:	clz	r3, r1
   16eb8:	lsr	r0, r0, #5
   16ebc:	lsr	r3, r3, #5
   16ec0:	orrs	r0, r3, r0
   16ec4:	mov	r0, #0
   16ec8:	movwne	r1, #1
   16ecc:	movwne	r2, #1
   16ed0:	bl	17704 <dcngettext@plt+0x65ec>
   16ed4:	cmp	r0, #0
   16ed8:	popne	{fp, pc}
   16edc:	bl	172e8 <dcngettext@plt+0x61d0>
   16ee0:	push	{r4, r5, r6, sl, fp, lr}
   16ee4:	add	fp, sp, #16
   16ee8:	ldr	r5, [r1]
   16eec:	mov	r4, r1
   16ef0:	mov	r6, r0
   16ef4:	cmp	r0, #0
   16ef8:	beq	16f10 <dcngettext@plt+0x5df8>
   16efc:	mov	r0, #1
   16f00:	add	r0, r0, r5, lsr #1
   16f04:	adds	r5, r5, r0
   16f08:	bcc	16f18 <dcngettext@plt+0x5e00>
   16f0c:	b	16f54 <dcngettext@plt+0x5e3c>
   16f10:	cmp	r5, #0
   16f14:	movweq	r5, #64	; 0x40
   16f18:	mov	r0, r6
   16f1c:	mov	r1, r5
   16f20:	mov	r2, #1
   16f24:	bl	17704 <dcngettext@plt+0x65ec>
   16f28:	cmp	r5, #0
   16f2c:	mov	r1, r5
   16f30:	movwne	r1, #1
   16f34:	cmp	r0, #0
   16f38:	bne	16f4c <dcngettext@plt+0x5e34>
   16f3c:	clz	r2, r6
   16f40:	lsr	r2, r2, #5
   16f44:	orrs	r1, r2, r1
   16f48:	bne	16f54 <dcngettext@plt+0x5e3c>
   16f4c:	str	r5, [r4]
   16f50:	pop	{r4, r5, r6, sl, fp, pc}
   16f54:	bl	172e8 <dcngettext@plt+0x61d0>
   16f58:	push	{r4, r5, r6, r7, fp, lr}
   16f5c:	add	fp, sp, #16
   16f60:	ldr	r5, [r1]
   16f64:	mov	r6, r2
   16f68:	mov	r4, r1
   16f6c:	mov	r7, r0
   16f70:	cmp	r0, #0
   16f74:	beq	16f8c <dcngettext@plt+0x5e74>
   16f78:	mov	r0, #1
   16f7c:	add	r0, r0, r5, lsr #1
   16f80:	adds	r5, r5, r0
   16f84:	bcc	16fa4 <dcngettext@plt+0x5e8c>
   16f88:	b	16fd8 <dcngettext@plt+0x5ec0>
   16f8c:	cmp	r5, #0
   16f90:	bne	16fa4 <dcngettext@plt+0x5e8c>
   16f94:	mov	r0, #64	; 0x40
   16f98:	cmp	r6, #64	; 0x40
   16f9c:	udiv	r5, r0, r6
   16fa0:	addhi	r5, r5, #1
   16fa4:	mov	r0, r7
   16fa8:	mov	r1, r5
   16fac:	mov	r2, r6
   16fb0:	bl	17704 <dcngettext@plt+0x65ec>
   16fb4:	cmp	r0, #0
   16fb8:	bne	16fd0 <dcngettext@plt+0x5eb8>
   16fbc:	cmp	r7, #0
   16fc0:	beq	16fd8 <dcngettext@plt+0x5ec0>
   16fc4:	cmp	r6, #0
   16fc8:	cmpne	r5, #0
   16fcc:	bne	16fd8 <dcngettext@plt+0x5ec0>
   16fd0:	str	r5, [r4]
   16fd4:	pop	{r4, r5, r6, r7, fp, pc}
   16fd8:	bl	172e8 <dcngettext@plt+0x61d0>
   16fdc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16fe0:	add	fp, sp, #24
   16fe4:	mov	r8, r1
   16fe8:	ldr	r1, [r1]
   16fec:	mov	r5, r0
   16ff0:	add	r0, r1, r1, asr #1
   16ff4:	cmp	r0, r1
   16ff8:	mvnvs	r0, #-2147483648	; 0x80000000
   16ffc:	cmp	r0, r3
   17000:	mov	r7, r0
   17004:	movgt	r7, r3
   17008:	cmn	r3, #1
   1700c:	movle	r7, r0
   17010:	ldr	r0, [fp, #8]
   17014:	cmn	r0, #1
   17018:	ble	17040 <dcngettext@plt+0x5f28>
   1701c:	cmp	r0, #0
   17020:	beq	17094 <dcngettext@plt+0x5f7c>
   17024:	cmn	r7, #1
   17028:	ble	17068 <dcngettext@plt+0x5f50>
   1702c:	mvn	r4, #-2147483648	; 0x80000000
   17030:	udiv	r6, r4, r0
   17034:	cmp	r6, r7
   17038:	bge	17094 <dcngettext@plt+0x5f7c>
   1703c:	b	170a4 <dcngettext@plt+0x5f8c>
   17040:	cmn	r7, #1
   17044:	ble	17084 <dcngettext@plt+0x5f6c>
   17048:	cmn	r0, #1
   1704c:	beq	17094 <dcngettext@plt+0x5f7c>
   17050:	mov	r6, #-2147483648	; 0x80000000
   17054:	mvn	r4, #-2147483648	; 0x80000000
   17058:	sdiv	r6, r6, r0
   1705c:	cmp	r6, r7
   17060:	bge	17094 <dcngettext@plt+0x5f7c>
   17064:	b	170a4 <dcngettext@plt+0x5f8c>
   17068:	beq	17094 <dcngettext@plt+0x5f7c>
   1706c:	mov	r6, #-2147483648	; 0x80000000
   17070:	mvn	r4, #-2147483648	; 0x80000000
   17074:	sdiv	r6, r6, r7
   17078:	cmp	r6, r0
   1707c:	bge	17094 <dcngettext@plt+0x5f7c>
   17080:	b	170a4 <dcngettext@plt+0x5f8c>
   17084:	mvn	r4, #-2147483648	; 0x80000000
   17088:	sdiv	r6, r4, r0
   1708c:	cmp	r7, r6
   17090:	blt	170a4 <dcngettext@plt+0x5f8c>
   17094:	mul	r6, r7, r0
   17098:	mov	r4, #64	; 0x40
   1709c:	cmp	r6, #63	; 0x3f
   170a0:	bgt	170ac <dcngettext@plt+0x5f94>
   170a4:	sdiv	r7, r4, r0
   170a8:	mul	r6, r7, r0
   170ac:	cmp	r5, #0
   170b0:	moveq	r4, #0
   170b4:	streq	r4, [r8]
   170b8:	sub	r4, r7, r1
   170bc:	cmp	r4, r2
   170c0:	bge	1716c <dcngettext@plt+0x6054>
   170c4:	add	r7, r1, r2
   170c8:	mov	r6, #0
   170cc:	mov	r2, #0
   170d0:	cmp	r7, r3
   170d4:	movwgt	r6, #1
   170d8:	cmn	r3, #1
   170dc:	movwgt	r2, #1
   170e0:	cmp	r7, r1
   170e4:	bvs	171a0 <dcngettext@plt+0x6088>
   170e8:	ands	r1, r2, r6
   170ec:	bne	171a0 <dcngettext@plt+0x6088>
   170f0:	cmn	r0, #1
   170f4:	ble	1711c <dcngettext@plt+0x6004>
   170f8:	cmp	r0, #0
   170fc:	beq	17168 <dcngettext@plt+0x6050>
   17100:	cmn	r7, #1
   17104:	ble	17140 <dcngettext@plt+0x6028>
   17108:	mvn	r1, #-2147483648	; 0x80000000
   1710c:	udiv	r1, r1, r0
   17110:	cmp	r1, r7
   17114:	bge	17168 <dcngettext@plt+0x6050>
   17118:	b	171a0 <dcngettext@plt+0x6088>
   1711c:	cmn	r7, #1
   17120:	ble	17158 <dcngettext@plt+0x6040>
   17124:	cmn	r0, #1
   17128:	beq	17168 <dcngettext@plt+0x6050>
   1712c:	mov	r1, #-2147483648	; 0x80000000
   17130:	sdiv	r1, r1, r0
   17134:	cmp	r1, r7
   17138:	bge	17168 <dcngettext@plt+0x6050>
   1713c:	b	171a0 <dcngettext@plt+0x6088>
   17140:	beq	17168 <dcngettext@plt+0x6050>
   17144:	mov	r1, #-2147483648	; 0x80000000
   17148:	sdiv	r1, r1, r7
   1714c:	cmp	r1, r0
   17150:	bge	17168 <dcngettext@plt+0x6050>
   17154:	b	171a0 <dcngettext@plt+0x6088>
   17158:	mvn	r1, #-2147483648	; 0x80000000
   1715c:	sdiv	r1, r1, r0
   17160:	cmp	r7, r1
   17164:	blt	171a0 <dcngettext@plt+0x6088>
   17168:	mul	r6, r7, r0
   1716c:	mov	r0, r5
   17170:	mov	r1, r6
   17174:	bl	173b0 <dcngettext@plt+0x6298>
   17178:	cmp	r6, #0
   1717c:	movwne	r6, #1
   17180:	cmp	r0, #0
   17184:	bne	17198 <dcngettext@plt+0x6080>
   17188:	clz	r1, r5
   1718c:	lsr	r1, r1, #5
   17190:	orrs	r1, r1, r6
   17194:	bne	171a0 <dcngettext@plt+0x6088>
   17198:	str	r7, [r8]
   1719c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   171a0:	bl	172e8 <dcngettext@plt+0x61d0>
   171a4:	push	{fp, lr}
   171a8:	mov	fp, sp
   171ac:	mov	r1, #1
   171b0:	bl	1732c <dcngettext@plt+0x6214>
   171b4:	cmp	r0, #0
   171b8:	popne	{fp, pc}
   171bc:	bl	172e8 <dcngettext@plt+0x61d0>
   171c0:	push	{fp, lr}
   171c4:	mov	fp, sp
   171c8:	bl	1732c <dcngettext@plt+0x6214>
   171cc:	cmp	r0, #0
   171d0:	popne	{fp, pc}
   171d4:	bl	172e8 <dcngettext@plt+0x61d0>
   171d8:	push	{fp, lr}
   171dc:	mov	fp, sp
   171e0:	mov	r1, #1
   171e4:	bl	1732c <dcngettext@plt+0x6214>
   171e8:	cmp	r0, #0
   171ec:	popne	{fp, pc}
   171f0:	bl	172e8 <dcngettext@plt+0x61d0>
   171f4:	push	{fp, lr}
   171f8:	mov	fp, sp
   171fc:	bl	1732c <dcngettext@plt+0x6214>
   17200:	cmp	r0, #0
   17204:	popne	{fp, pc}
   17208:	bl	172e8 <dcngettext@plt+0x61d0>
   1720c:	push	{r4, r5, fp, lr}
   17210:	add	fp, sp, #8
   17214:	mov	r5, r0
   17218:	mov	r0, r1
   1721c:	mov	r4, r1
   17220:	bl	17380 <dcngettext@plt+0x6268>
   17224:	cmp	r0, #0
   17228:	beq	1723c <dcngettext@plt+0x6124>
   1722c:	mov	r1, r5
   17230:	mov	r2, r4
   17234:	pop	{r4, r5, fp, lr}
   17238:	b	10f08 <memcpy@plt>
   1723c:	bl	172e8 <dcngettext@plt+0x61d0>
   17240:	push	{r4, r5, fp, lr}
   17244:	add	fp, sp, #8
   17248:	mov	r5, r0
   1724c:	mov	r0, r1
   17250:	mov	r4, r1
   17254:	bl	17380 <dcngettext@plt+0x6268>
   17258:	cmp	r0, #0
   1725c:	beq	17270 <dcngettext@plt+0x6158>
   17260:	mov	r1, r5
   17264:	mov	r2, r4
   17268:	pop	{r4, r5, fp, lr}
   1726c:	b	10f08 <memcpy@plt>
   17270:	bl	172e8 <dcngettext@plt+0x61d0>
   17274:	push	{r4, r5, fp, lr}
   17278:	add	fp, sp, #8
   1727c:	mov	r5, r0
   17280:	add	r0, r1, #1
   17284:	mov	r4, r1
   17288:	bl	17380 <dcngettext@plt+0x6268>
   1728c:	cmp	r0, #0
   17290:	beq	172ac <dcngettext@plt+0x6194>
   17294:	mov	r1, #0
   17298:	mov	r2, r4
   1729c:	strb	r1, [r0, r4]
   172a0:	mov	r1, r5
   172a4:	pop	{r4, r5, fp, lr}
   172a8:	b	10f08 <memcpy@plt>
   172ac:	bl	172e8 <dcngettext@plt+0x61d0>
   172b0:	push	{r4, r5, fp, lr}
   172b4:	add	fp, sp, #8
   172b8:	mov	r4, r0
   172bc:	bl	11004 <strlen@plt>
   172c0:	add	r5, r0, #1
   172c4:	mov	r0, r5
   172c8:	bl	17380 <dcngettext@plt+0x6268>
   172cc:	cmp	r0, #0
   172d0:	beq	172e4 <dcngettext@plt+0x61cc>
   172d4:	mov	r1, r4
   172d8:	mov	r2, r5
   172dc:	pop	{r4, r5, fp, lr}
   172e0:	b	10f08 <memcpy@plt>
   172e4:	bl	172e8 <dcngettext@plt+0x61d0>
   172e8:	push	{fp, lr}
   172ec:	mov	fp, sp
   172f0:	movw	r0, #37120	; 0x9100
   172f4:	movw	r1, #35708	; 0x8b7c
   172f8:	mov	r2, #5
   172fc:	movt	r0, #2
   17300:	movt	r1, #1
   17304:	ldr	r4, [r0]
   17308:	mov	r0, #0
   1730c:	bl	10f20 <dcgettext@plt>
   17310:	movw	r2, #34599	; 0x8727
   17314:	mov	r3, r0
   17318:	mov	r0, r4
   1731c:	mov	r1, #0
   17320:	movt	r2, #1
   17324:	bl	10f8c <error@plt>
   17328:	bl	11100 <abort@plt>
   1732c:	clz	r2, r1
   17330:	clz	r3, r0
   17334:	lsr	r2, r2, #5
   17338:	lsr	r3, r3, #5
   1733c:	orrs	r2, r3, r2
   17340:	movwne	r1, #1
   17344:	movwne	r0, #1
   17348:	cmp	r1, #0
   1734c:	beq	1737c <dcngettext@plt+0x6264>
   17350:	mvn	r2, #-2147483648	; 0x80000000
   17354:	udiv	r2, r2, r1
   17358:	cmp	r2, r0
   1735c:	bcs	1737c <dcngettext@plt+0x6264>
   17360:	push	{fp, lr}
   17364:	mov	fp, sp
   17368:	bl	1101c <__errno_location@plt>
   1736c:	mov	r1, #12
   17370:	str	r1, [r0]
   17374:	mov	r0, #0
   17378:	pop	{fp, pc}
   1737c:	b	10e9c <calloc@plt>
   17380:	cmp	r0, #0
   17384:	movweq	r0, #1
   17388:	cmn	r0, #1
   1738c:	ble	17394 <dcngettext@plt+0x627c>
   17390:	b	10f98 <malloc@plt>
   17394:	push	{fp, lr}
   17398:	mov	fp, sp
   1739c:	bl	1101c <__errno_location@plt>
   173a0:	mov	r1, #12
   173a4:	str	r1, [r0]
   173a8:	mov	r0, #0
   173ac:	pop	{fp, pc}
   173b0:	push	{fp, lr}
   173b4:	mov	fp, sp
   173b8:	cmp	r0, #0
   173bc:	beq	173d8 <dcngettext@plt+0x62c0>
   173c0:	cmp	r1, #0
   173c4:	beq	173e4 <dcngettext@plt+0x62cc>
   173c8:	cmn	r1, #1
   173cc:	ble	173f0 <dcngettext@plt+0x62d8>
   173d0:	pop	{fp, lr}
   173d4:	b	10f2c <realloc@plt>
   173d8:	mov	r0, r1
   173dc:	pop	{fp, lr}
   173e0:	b	17380 <dcngettext@plt+0x6268>
   173e4:	bl	14634 <dcngettext@plt+0x351c>
   173e8:	mov	r0, #0
   173ec:	pop	{fp, pc}
   173f0:	bl	1101c <__errno_location@plt>
   173f4:	mov	r1, #12
   173f8:	str	r1, [r0]
   173fc:	mov	r0, #0
   17400:	pop	{fp, pc}
   17404:	push	{r4, r5, r6, sl, fp, lr}
   17408:	add	fp, sp, #16
   1740c:	mov	r4, r0
   17410:	bl	10f74 <__fpending@plt>
   17414:	ldr	r6, [r4]
   17418:	mov	r5, r0
   1741c:	mov	r0, r4
   17420:	bl	1448c <dcngettext@plt+0x3374>
   17424:	tst	r6, #32
   17428:	bne	17460 <dcngettext@plt+0x6348>
   1742c:	cmp	r0, #0
   17430:	mov	r4, r0
   17434:	mvnne	r4, #0
   17438:	cmp	r5, #0
   1743c:	bne	1746c <dcngettext@plt+0x6354>
   17440:	cmp	r0, #0
   17444:	beq	1746c <dcngettext@plt+0x6354>
   17448:	bl	1101c <__errno_location@plt>
   1744c:	ldr	r0, [r0]
   17450:	subs	r4, r0, #9
   17454:	mvnne	r4, #0
   17458:	mov	r0, r4
   1745c:	pop	{r4, r5, r6, sl, fp, pc}
   17460:	mvn	r4, #0
   17464:	cmp	r0, #0
   17468:	beq	17474 <dcngettext@plt+0x635c>
   1746c:	mov	r0, r4
   17470:	pop	{r4, r5, r6, sl, fp, pc}
   17474:	bl	1101c <__errno_location@plt>
   17478:	mov	r1, #0
   1747c:	str	r1, [r0]
   17480:	mov	r0, r4
   17484:	pop	{r4, r5, r6, sl, fp, pc}
   17488:	sub	sp, sp, #8
   1748c:	push	{r4, r5, r6, r7, fp, lr}
   17490:	add	fp, sp, #16
   17494:	sub	sp, sp, #8
   17498:	mov	r5, r0
   1749c:	add	r0, fp, #8
   174a0:	cmp	r1, #11
   174a4:	str	r2, [fp, #8]
   174a8:	str	r3, [fp, #12]
   174ac:	str	r0, [sp, #4]
   174b0:	bhi	174ec <dcngettext@plt+0x63d4>
   174b4:	mov	r0, #1
   174b8:	movw	r2, #1300	; 0x514
   174bc:	tst	r2, r0, lsl r1
   174c0:	bne	175ac <dcngettext@plt+0x6494>
   174c4:	movw	r2, #2570	; 0xa0a
   174c8:	tst	r2, r0, lsl r1
   174cc:	bne	17514 <dcngettext@plt+0x63fc>
   174d0:	cmp	r1, #0
   174d4:	bne	174ec <dcngettext@plt+0x63d4>
   174d8:	ldr	r0, [sp, #4]
   174dc:	add	r1, r0, #4
   174e0:	str	r1, [sp, #4]
   174e4:	mov	r1, #0
   174e8:	b	175b8 <dcngettext@plt+0x64a0>
   174ec:	sub	r0, r1, #1024	; 0x400
   174f0:	cmp	r0, #10
   174f4:	bhi	175ac <dcngettext@plt+0x6494>
   174f8:	mov	r2, #1
   174fc:	movw	r3, #645	; 0x285
   17500:	tst	r3, r2, lsl r0
   17504:	bne	175ac <dcngettext@plt+0x6494>
   17508:	movw	r3, #1282	; 0x502
   1750c:	tst	r3, r2, lsl r0
   17510:	beq	17520 <dcngettext@plt+0x6408>
   17514:	mov	r0, r5
   17518:	bl	11088 <fcntl64@plt>
   1751c:	b	175c4 <dcngettext@plt+0x64ac>
   17520:	cmp	r0, #6
   17524:	bne	175ac <dcngettext@plt+0x6494>
   17528:	ldr	r0, [sp, #4]
   1752c:	movw	r7, #37560	; 0x92b8
   17530:	movt	r7, #2
   17534:	add	r1, r0, #4
   17538:	str	r1, [sp, #4]
   1753c:	ldr	r6, [r0]
   17540:	ldr	r0, [r7]
   17544:	cmp	r0, #0
   17548:	bmi	175e8 <dcngettext@plt+0x64d0>
   1754c:	mov	r0, r5
   17550:	movw	r1, #1030	; 0x406
   17554:	mov	r2, r6
   17558:	bl	11088 <fcntl64@plt>
   1755c:	mov	r4, r0
   17560:	cmn	r0, #1
   17564:	bgt	175dc <dcngettext@plt+0x64c4>
   17568:	bl	1101c <__errno_location@plt>
   1756c:	ldr	r0, [r0]
   17570:	cmp	r0, #22
   17574:	bne	175dc <dcngettext@plt+0x64c4>
   17578:	mov	r0, r5
   1757c:	mov	r1, #0
   17580:	mov	r2, r6
   17584:	bl	11088 <fcntl64@plt>
   17588:	mov	r4, r0
   1758c:	cmp	r0, #0
   17590:	bmi	175c8 <dcngettext@plt+0x64b0>
   17594:	mvn	r0, #0
   17598:	str	r0, [r7]
   1759c:	mov	r0, #1
   175a0:	cmp	r0, #0
   175a4:	bne	17614 <dcngettext@plt+0x64fc>
   175a8:	b	175c8 <dcngettext@plt+0x64b0>
   175ac:	ldr	r0, [sp, #4]
   175b0:	add	r2, r0, #4
   175b4:	str	r2, [sp, #4]
   175b8:	ldr	r2, [r0]
   175bc:	mov	r0, r5
   175c0:	bl	11088 <fcntl64@plt>
   175c4:	mov	r4, r0
   175c8:	mov	r0, r4
   175cc:	sub	sp, fp, #16
   175d0:	pop	{r4, r5, r6, r7, fp, lr}
   175d4:	add	sp, sp, #8
   175d8:	bx	lr
   175dc:	mov	r0, #1
   175e0:	str	r0, [r7]
   175e4:	b	175c8 <dcngettext@plt+0x64b0>
   175e8:	mov	r0, r5
   175ec:	mov	r1, #0
   175f0:	mov	r2, r6
   175f4:	bl	11088 <fcntl64@plt>
   175f8:	mov	r4, r0
   175fc:	ldr	r0, [r7]
   17600:	add	r0, r0, #1
   17604:	clz	r0, r0
   17608:	lsr	r0, r0, #5
   1760c:	cmp	r0, #0
   17610:	beq	175c8 <dcngettext@plt+0x64b0>
   17614:	cmp	r4, #0
   17618:	bmi	175c8 <dcngettext@plt+0x64b0>
   1761c:	mov	r0, r4
   17620:	mov	r1, #1
   17624:	bl	11088 <fcntl64@plt>
   17628:	cmp	r0, #0
   1762c:	bmi	17648 <dcngettext@plt+0x6530>
   17630:	orr	r2, r0, #1
   17634:	mov	r0, r4
   17638:	mov	r1, #2
   1763c:	bl	11088 <fcntl64@plt>
   17640:	cmn	r0, #1
   17644:	bne	175c8 <dcngettext@plt+0x64b0>
   17648:	bl	1101c <__errno_location@plt>
   1764c:	ldr	r6, [r0]
   17650:	mov	r5, r0
   17654:	mov	r0, r4
   17658:	bl	1110c <close@plt>
   1765c:	str	r6, [r5]
   17660:	mvn	r4, #0
   17664:	b	175c8 <dcngettext@plt+0x64b0>
   17668:	push	{fp, lr}
   1766c:	mov	fp, sp
   17670:	mov	r0, #14
   17674:	bl	110b8 <nl_langinfo@plt>
   17678:	movw	r1, #32208	; 0x7dd0
   1767c:	cmp	r0, #0
   17680:	movt	r1, #1
   17684:	movne	r1, r0
   17688:	movw	r0, #35725	; 0x8b8d
   1768c:	ldrb	r2, [r1]
   17690:	movt	r0, #1
   17694:	cmp	r2, #0
   17698:	movne	r0, r1
   1769c:	pop	{fp, pc}
   176a0:	push	{r4, r5, r6, r7, fp, lr}
   176a4:	add	fp, sp, #16
   176a8:	sub	sp, sp, #8
   176ac:	cmp	r0, #0
   176b0:	add	r5, sp, #4
   176b4:	mov	r7, r2
   176b8:	mov	r4, r1
   176bc:	movne	r5, r0
   176c0:	mov	r0, r5
   176c4:	bl	10f80 <mbrtowc@plt>
   176c8:	mov	r6, r0
   176cc:	cmp	r7, #0
   176d0:	beq	176f8 <dcngettext@plt+0x65e0>
   176d4:	cmn	r6, #2
   176d8:	bcc	176f8 <dcngettext@plt+0x65e0>
   176dc:	mov	r0, #0
   176e0:	bl	17740 <dcngettext@plt+0x6628>
   176e4:	cmp	r0, #0
   176e8:	bne	176f8 <dcngettext@plt+0x65e0>
   176ec:	ldrb	r0, [r4]
   176f0:	mov	r6, #1
   176f4:	str	r0, [r5]
   176f8:	mov	r0, r6
   176fc:	sub	sp, fp, #16
   17700:	pop	{r4, r5, r6, r7, fp, pc}
   17704:	cmp	r2, #0
   17708:	beq	17738 <dcngettext@plt+0x6620>
   1770c:	mvn	r3, #0
   17710:	udiv	r3, r3, r2
   17714:	cmp	r3, r1
   17718:	bcs	17738 <dcngettext@plt+0x6620>
   1771c:	push	{fp, lr}
   17720:	mov	fp, sp
   17724:	bl	1101c <__errno_location@plt>
   17728:	mov	r1, #12
   1772c:	str	r1, [r0]
   17730:	mov	r0, #0
   17734:	pop	{fp, pc}
   17738:	mul	r1, r2, r1
   1773c:	b	173b0 <dcngettext@plt+0x6298>
   17740:	push	{r4, sl, fp, lr}
   17744:	add	fp, sp, #8
   17748:	sub	sp, sp, #264	; 0x108
   1774c:	add	r1, sp, #7
   17750:	movw	r2, #257	; 0x101
   17754:	bl	177ac <dcngettext@plt+0x6694>
   17758:	mov	r4, #0
   1775c:	cmp	r0, #0
   17760:	bne	177a0 <dcngettext@plt+0x6688>
   17764:	movw	r1, #35731	; 0x8b93
   17768:	add	r0, sp, #7
   1776c:	mov	r2, #2
   17770:	movt	r1, #1
   17774:	bl	10ff8 <bcmp@plt>
   17778:	cmp	r0, #0
   1777c:	beq	177a0 <dcngettext@plt+0x6688>
   17780:	movw	r1, #35733	; 0x8b95
   17784:	add	r0, sp, #7
   17788:	mov	r2, #6
   1778c:	movt	r1, #1
   17790:	bl	10ff8 <bcmp@plt>
   17794:	cmp	r0, #0
   17798:	mov	r4, r0
   1779c:	movwne	r4, #1
   177a0:	mov	r0, r4
   177a4:	sub	sp, fp, #8
   177a8:	pop	{r4, sl, fp, pc}
   177ac:	push	{r4, r5, r6, r7, fp, lr}
   177b0:	add	fp, sp, #16
   177b4:	mov	r4, r1
   177b8:	mov	r1, #0
   177bc:	mov	r6, r2
   177c0:	bl	110a0 <setlocale@plt>
   177c4:	cmp	r0, #0
   177c8:	beq	177f8 <dcngettext@plt+0x66e0>
   177cc:	mov	r7, r0
   177d0:	bl	11004 <strlen@plt>
   177d4:	cmp	r0, r6
   177d8:	bcs	17814 <dcngettext@plt+0x66fc>
   177dc:	add	r2, r0, #1
   177e0:	mov	r0, r4
   177e4:	mov	r1, r7
   177e8:	bl	10f08 <memcpy@plt>
   177ec:	mov	r5, #0
   177f0:	mov	r0, r5
   177f4:	pop	{r4, r5, r6, r7, fp, pc}
   177f8:	mov	r5, #22
   177fc:	cmp	r6, #0
   17800:	beq	1783c <dcngettext@plt+0x6724>
   17804:	mov	r0, #0
   17808:	strb	r0, [r4]
   1780c:	mov	r0, r5
   17810:	pop	{r4, r5, r6, r7, fp, pc}
   17814:	mov	r5, #34	; 0x22
   17818:	cmp	r6, #0
   1781c:	beq	1783c <dcngettext@plt+0x6724>
   17820:	sub	r6, r6, #1
   17824:	mov	r0, r4
   17828:	mov	r1, r7
   1782c:	mov	r2, r6
   17830:	bl	10f08 <memcpy@plt>
   17834:	mov	r0, #0
   17838:	strb	r0, [r4, r6]
   1783c:	mov	r0, r5
   17840:	pop	{r4, r5, r6, r7, fp, pc}
   17844:	mov	r1, #0
   17848:	b	110a0 <setlocale@plt>
   1784c:	cmp	r3, #0
   17850:	cmpeq	r2, #0
   17854:	bne	1786c <dcngettext@plt+0x6754>
   17858:	cmp	r1, #0
   1785c:	cmpeq	r0, #0
   17860:	mvnne	r1, #0
   17864:	mvnne	r0, #0
   17868:	b	17888 <dcngettext@plt+0x6770>
   1786c:	sub	sp, sp, #8
   17870:	push	{sp, lr}
   17874:	bl	17898 <dcngettext@plt+0x6780>
   17878:	ldr	lr, [sp, #4]
   1787c:	add	sp, sp, #8
   17880:	pop	{r2, r3}
   17884:	bx	lr
   17888:	push	{r1, lr}
   1788c:	mov	r0, #8
   17890:	bl	10eb4 <raise@plt>
   17894:	pop	{r1, pc}
   17898:	cmp	r1, r3
   1789c:	cmpeq	r0, r2
   178a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   178a4:	mov	r4, r0
   178a8:	movcc	r0, #0
   178ac:	mov	r5, r1
   178b0:	ldr	lr, [sp, #36]	; 0x24
   178b4:	movcc	r1, r0
   178b8:	bcc	179b4 <dcngettext@plt+0x689c>
   178bc:	cmp	r3, #0
   178c0:	clzeq	ip, r2
   178c4:	clzne	ip, r3
   178c8:	addeq	ip, ip, #32
   178cc:	cmp	r5, #0
   178d0:	clzeq	r1, r4
   178d4:	addeq	r1, r1, #32
   178d8:	clzne	r1, r5
   178dc:	sub	ip, ip, r1
   178e0:	sub	sl, ip, #32
   178e4:	lsl	r9, r3, ip
   178e8:	rsb	fp, ip, #32
   178ec:	orr	r9, r9, r2, lsl sl
   178f0:	orr	r9, r9, r2, lsr fp
   178f4:	lsl	r8, r2, ip
   178f8:	cmp	r5, r9
   178fc:	cmpeq	r4, r8
   17900:	movcc	r0, #0
   17904:	movcc	r1, r0
   17908:	bcc	17924 <dcngettext@plt+0x680c>
   1790c:	mov	r0, #1
   17910:	subs	r4, r4, r8
   17914:	lsl	r1, r0, sl
   17918:	orr	r1, r1, r0, lsr fp
   1791c:	lsl	r0, r0, ip
   17920:	sbc	r5, r5, r9
   17924:	cmp	ip, #0
   17928:	beq	179b4 <dcngettext@plt+0x689c>
   1792c:	lsr	r6, r8, #1
   17930:	orr	r6, r6, r9, lsl #31
   17934:	lsr	r7, r9, #1
   17938:	mov	r2, ip
   1793c:	b	17960 <dcngettext@plt+0x6848>
   17940:	subs	r3, r4, r6
   17944:	sbc	r8, r5, r7
   17948:	adds	r3, r3, r3
   1794c:	adc	r8, r8, r8
   17950:	adds	r4, r3, #1
   17954:	adc	r5, r8, #0
   17958:	subs	r2, r2, #1
   1795c:	beq	1797c <dcngettext@plt+0x6864>
   17960:	cmp	r5, r7
   17964:	cmpeq	r4, r6
   17968:	bcs	17940 <dcngettext@plt+0x6828>
   1796c:	adds	r4, r4, r4
   17970:	adc	r5, r5, r5
   17974:	subs	r2, r2, #1
   17978:	bne	17960 <dcngettext@plt+0x6848>
   1797c:	lsr	r3, r4, ip
   17980:	orr	r3, r3, r5, lsl fp
   17984:	lsr	r2, r5, ip
   17988:	orr	r3, r3, r5, lsr sl
   1798c:	adds	r0, r0, r4
   17990:	mov	r4, r3
   17994:	lsl	r3, r2, ip
   17998:	orr	r3, r3, r4, lsl sl
   1799c:	lsl	ip, r4, ip
   179a0:	orr	r3, r3, r4, lsr fp
   179a4:	adc	r1, r1, r5
   179a8:	subs	r0, r0, ip
   179ac:	mov	r5, r2
   179b0:	sbc	r1, r1, r3
   179b4:	cmp	lr, #0
   179b8:	strdne	r4, [lr]
   179bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   179c0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   179c4:	mov	r7, r0
   179c8:	ldr	r6, [pc, #72]	; 17a18 <dcngettext@plt+0x6900>
   179cc:	ldr	r5, [pc, #72]	; 17a1c <dcngettext@plt+0x6904>
   179d0:	add	r6, pc, r6
   179d4:	add	r5, pc, r5
   179d8:	sub	r6, r6, r5
   179dc:	mov	r8, r1
   179e0:	mov	r9, r2
   179e4:	bl	10e70 <fdopen@plt-0x20>
   179e8:	asrs	r6, r6, #2
   179ec:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   179f0:	mov	r4, #0
   179f4:	add	r4, r4, #1
   179f8:	ldr	r3, [r5], #4
   179fc:	mov	r2, r9
   17a00:	mov	r1, r8
   17a04:	mov	r0, r7
   17a08:	blx	r3
   17a0c:	cmp	r6, r4
   17a10:	bne	179f4 <dcngettext@plt+0x68dc>
   17a14:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17a18:	andeq	r1, r1, r4, lsr r5
   17a1c:	andeq	r1, r1, ip, lsr #10
   17a20:	bx	lr
   17a24:	ldr	r3, [pc, #12]	; 17a38 <dcngettext@plt+0x6920>
   17a28:	mov	r1, #0
   17a2c:	add	r3, pc, r3
   17a30:	ldr	r2, [r3]
   17a34:	b	11028 <__cxa_atexit@plt>
   17a38:	andeq	r1, r1, r0, asr #13

Disassembly of section .fini:

00017a3c <.fini>:
   17a3c:	push	{r3, lr}
   17a40:	pop	{r3, pc}
