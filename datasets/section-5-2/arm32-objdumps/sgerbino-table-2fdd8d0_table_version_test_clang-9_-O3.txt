
../repos/sgerbino-table-2fdd8d0/bin/table_version_test:     file format elf32-littlearm


Disassembly of section .init:

00011e70 <.init>:
   11e70:	push	{r3, lr}
   11e74:	bl	11f5c <_start@@Base+0x3c>
   11e78:	pop	{r3, pc}

Disassembly of section .plt:

00011e7c <strcmp@plt-0x14>:
   11e7c:	push	{lr}		; (str lr, [sp, #-4]!)
   11e80:	ldr	lr, [pc, #4]	; 11e8c <strcmp@plt-0x4>
   11e84:	add	lr, pc, lr
   11e88:	ldr	pc, [lr, #8]!
   11e8c:	andeq	r4, r1, r4, ror r1

00011e90 <strcmp@plt>:
   11e90:	add	ip, pc, #0, 12
   11e94:	add	ip, ip, #20, 20	; 0x14000
   11e98:	ldr	pc, [ip, #372]!	; 0x174

00011e9c <printf@plt>:
   11e9c:	add	ip, pc, #0, 12
   11ea0:	add	ip, ip, #20, 20	; 0x14000
   11ea4:	ldr	pc, [ip, #364]!	; 0x16c

00011ea8 <free@plt>:
   11ea8:	add	ip, pc, #0, 12
   11eac:	add	ip, ip, #20, 20	; 0x14000
   11eb0:	ldr	pc, [ip, #356]!	; 0x164

00011eb4 <realloc@plt>:
   11eb4:	add	ip, pc, #0, 12
   11eb8:	add	ip, ip, #20, 20	; 0x14000
   11ebc:	ldr	pc, [ip, #348]!	; 0x15c

00011ec0 <strcpy@plt>:
   11ec0:	add	ip, pc, #0, 12
   11ec4:	add	ip, ip, #20, 20	; 0x14000
   11ec8:	ldr	pc, [ip, #340]!	; 0x154

00011ecc <malloc@plt>:
   11ecc:	add	ip, pc, #0, 12
   11ed0:	add	ip, ip, #20, 20	; 0x14000
   11ed4:	ldr	pc, [ip, #332]!	; 0x14c

00011ed8 <__libc_start_main@plt>:
   11ed8:	add	ip, pc, #0, 12
   11edc:	add	ip, ip, #20, 20	; 0x14000
   11ee0:	ldr	pc, [ip, #324]!	; 0x144

00011ee4 <__gmon_start__@plt>:
   11ee4:	add	ip, pc, #0, 12
   11ee8:	add	ip, ip, #20, 20	; 0x14000
   11eec:	ldr	pc, [ip, #316]!	; 0x13c

00011ef0 <strlen@plt>:
   11ef0:	add	ip, pc, #0, 12
   11ef4:	add	ip, ip, #20, 20	; 0x14000
   11ef8:	ldr	pc, [ip, #308]!	; 0x134

00011efc <snprintf@plt>:
   11efc:	add	ip, pc, #0, 12
   11f00:	add	ip, ip, #20, 20	; 0x14000
   11f04:	ldr	pc, [ip, #300]!	; 0x12c

00011f08 <__isoc99_sscanf@plt>:
   11f08:	add	ip, pc, #0, 12
   11f0c:	add	ip, ip, #20, 20	; 0x14000
   11f10:	ldr	pc, [ip, #292]!	; 0x124

00011f14 <abort@plt>:
   11f14:	add	ip, pc, #0, 12
   11f18:	add	ip, ip, #20, 20	; 0x14000
   11f1c:	ldr	pc, [ip, #284]!	; 0x11c

Disassembly of section .text:

00011f20 <_start@@Base>:
   11f20:	mov	fp, #0
   11f24:	mov	lr, #0
   11f28:	pop	{r1}		; (ldr r1, [sp], #4)
   11f2c:	mov	r2, sp
   11f30:	push	{r2}		; (str r2, [sp, #-4]!)
   11f34:	push	{r0}		; (str r0, [sp, #-4]!)
   11f38:	ldr	ip, [pc, #16]	; 11f50 <_start@@Base+0x30>
   11f3c:	push	{ip}		; (str ip, [sp, #-4]!)
   11f40:	ldr	r0, [pc, #12]	; 11f54 <_start@@Base+0x34>
   11f44:	ldr	r3, [pc, #12]	; 11f58 <_start@@Base+0x38>
   11f48:	bl	11ed8 <__libc_start_main@plt>
   11f4c:	bl	11f14 <abort@plt>
   11f50:	andeq	r5, r1, r4, ror #11
   11f54:	andeq	r2, r1, r0, lsl r0
   11f58:	andeq	r5, r1, r4, lsl #11
   11f5c:	ldr	r3, [pc, #20]	; 11f78 <_start@@Base+0x58>
   11f60:	ldr	r2, [pc, #20]	; 11f7c <_start@@Base+0x5c>
   11f64:	add	r3, pc, r3
   11f68:	ldr	r2, [r3, r2]
   11f6c:	cmp	r2, #0
   11f70:	bxeq	lr
   11f74:	b	11ee4 <__gmon_start__@plt>
   11f78:	muleq	r1, r4, r0
   11f7c:	andeq	r0, r0, ip, lsr r0
   11f80:	ldr	r0, [pc, #24]	; 11fa0 <_start@@Base+0x80>
   11f84:	ldr	r3, [pc, #24]	; 11fa4 <_start@@Base+0x84>
   11f88:	cmp	r3, r0
   11f8c:	bxeq	lr
   11f90:	ldr	r3, [pc, #16]	; 11fa8 <_start@@Base+0x88>
   11f94:	cmp	r3, #0
   11f98:	bxeq	lr
   11f9c:	bx	r3
   11fa0:	andeq	r6, r2, r8, asr #32
   11fa4:	andeq	r6, r2, r8, asr #32
   11fa8:	andeq	r0, r0, r0
   11fac:	ldr	r0, [pc, #36]	; 11fd8 <_start@@Base+0xb8>
   11fb0:	ldr	r1, [pc, #36]	; 11fdc <_start@@Base+0xbc>
   11fb4:	sub	r1, r1, r0
   11fb8:	asr	r1, r1, #2
   11fbc:	add	r1, r1, r1, lsr #31
   11fc0:	asrs	r1, r1, #1
   11fc4:	bxeq	lr
   11fc8:	ldr	r3, [pc, #16]	; 11fe0 <_start@@Base+0xc0>
   11fcc:	cmp	r3, #0
   11fd0:	bxeq	lr
   11fd4:	bx	r3
   11fd8:	andeq	r6, r2, r8, asr #32
   11fdc:	andeq	r6, r2, r8, asr #32
   11fe0:	andeq	r0, r0, r0
   11fe4:	push	{r4, lr}
   11fe8:	ldr	r4, [pc, #24]	; 12008 <_start@@Base+0xe8>
   11fec:	ldrb	r3, [r4]
   11ff0:	cmp	r3, #0
   11ff4:	popne	{r4, pc}
   11ff8:	bl	11f80 <_start@@Base+0x60>
   11ffc:	mov	r3, #1
   12000:	strb	r3, [r4]
   12004:	pop	{r4, pc}
   12008:	andeq	r6, r2, r8, asr #32
   1200c:	b	11fac <_start@@Base+0x8c>

00012010 <main@@Base>:
   12010:	push	{fp, lr}
   12014:	mov	fp, sp
   12018:	bl	12848 <table_get_major_version@@Base>
   1201c:	mov	r1, r0
   12020:	movw	r0, #22004	; 0x55f4
   12024:	movt	r0, #1
   12028:	bl	11e9c <printf@plt>
   1202c:	bl	12850 <table_get_minor_version@@Base>
   12030:	mov	r1, r0
   12034:	movw	r0, #22029	; 0x560d
   12038:	movt	r0, #1
   1203c:	bl	11e9c <printf@plt>
   12040:	bl	12858 <table_get_patch_version@@Base>
   12044:	mov	r1, r0
   12048:	movw	r0, #22054	; 0x5626
   1204c:	movt	r0, #1
   12050:	bl	11e9c <printf@plt>
   12054:	bl	12860 <table_get_version@@Base>
   12058:	mov	r1, r0
   1205c:	movw	r0, #22079	; 0x563f
   12060:	movt	r0, #1
   12064:	bl	11e9c <printf@plt>
   12068:	mov	r0, #0
   1206c:	pop	{fp, pc}

00012070 <table_new@@Base>:
   12070:	push	{fp, lr}
   12074:	mov	fp, sp
   12078:	mov	r0, #56	; 0x38
   1207c:	bl	11ecc <malloc@plt>
   12080:	vmov.i32	q8, #0	; 0x00000000
   12084:	mov	r1, #0
   12088:	mov	r2, #10
   1208c:	mov	r3, #20
   12090:	str	r1, [r0]
   12094:	stmib	r0, {r1, r2}
   12098:	str	r1, [r0, #12]
   1209c:	str	r1, [r0, #16]
   120a0:	str	r1, [r0, #20]
   120a4:	str	r3, [r0, #24]
   120a8:	str	r1, [r0, #28]
   120ac:	str	r2, [r0, #48]	; 0x30
   120b0:	str	r1, [r0, #52]	; 0x34
   120b4:	add	r1, r0, #32
   120b8:	vst1.32	{d16-d17}, [r1]
   120bc:	pop	{fp, pc}

000120c0 <table_init@@Base>:
   120c0:	vmov.i32	q8, #0	; 0x00000000
   120c4:	mov	r1, #0
   120c8:	mov	r2, #10
   120cc:	mov	r3, #20
   120d0:	str	r1, [r0]
   120d4:	stmib	r0, {r1, r2}
   120d8:	str	r1, [r0, #12]
   120dc:	str	r1, [r0, #16]
   120e0:	str	r1, [r0, #20]
   120e4:	str	r3, [r0, #24]
   120e8:	str	r1, [r0, #28]
   120ec:	str	r2, [r0, #48]	; 0x30
   120f0:	str	r1, [r0, #52]	; 0x34
   120f4:	add	r0, r0, #32
   120f8:	vst1.32	{d16-d17}, [r0]
   120fc:	bx	lr

00012100 <table_delete@@Base>:
   12100:	push	{r4, sl, fp, lr}
   12104:	add	fp, sp, #8
   12108:	mov	r4, r0
   1210c:	bl	1211c <table_destroy@@Base>
   12110:	mov	r0, r4
   12114:	pop	{r4, sl, fp, lr}
   12118:	b	11ea8 <free@plt>

0001211c <table_destroy@@Base>:
   1211c:	cmp	r0, #0
   12120:	bxeq	lr
   12124:	push	{r4, r5, r6, sl, fp, lr}
   12128:	add	fp, sp, #16
   1212c:	mvn	r1, #0
   12130:	mvn	r2, #0
   12134:	mov	r3, #64	; 0x40
   12138:	mov	r4, r0
   1213c:	bl	12adc <table_notify@@Base>
   12140:	mov	r0, r4
   12144:	bl	139c4 <table_get_row_length@@Base>
   12148:	cmp	r0, #1
   1214c:	blt	12170 <table_destroy@@Base+0x54>
   12150:	mov	r5, r0
   12154:	mov	r6, #0
   12158:	mov	r0, r4
   1215c:	mov	r1, r6
   12160:	bl	13968 <table_row_destroy@@Base>
   12164:	add	r6, r6, #1
   12168:	cmp	r5, r6
   1216c:	bne	12158 <table_destroy@@Base+0x3c>
   12170:	ldr	r0, [r4, #16]
   12174:	cmp	r0, #0
   12178:	beq	12180 <table_destroy@@Base+0x64>
   1217c:	bl	11ea8 <free@plt>
   12180:	mov	r0, r4
   12184:	bl	12bec <table_get_column_length@@Base>
   12188:	cmp	r0, #1
   1218c:	blt	121b0 <table_destroy@@Base+0x94>
   12190:	mov	r5, r0
   12194:	mov	r6, #0
   12198:	mov	r0, r4
   1219c:	mov	r1, r6
   121a0:	bl	12bd4 <table_column_destroy@@Base>
   121a4:	add	r6, r6, #1
   121a8:	cmp	r5, r6
   121ac:	bne	12198 <table_destroy@@Base+0x7c>
   121b0:	ldr	r0, [r4]
   121b4:	cmp	r0, #0
   121b8:	beq	121c0 <table_destroy@@Base+0xa4>
   121bc:	bl	11ea8 <free@plt>
   121c0:	ldr	r0, [r4, #36]	; 0x24
   121c4:	cmp	r0, #0
   121c8:	beq	121d0 <table_destroy@@Base+0xb4>
   121cc:	bl	11ea8 <free@plt>
   121d0:	ldr	r0, [r4, #40]	; 0x28
   121d4:	cmp	r0, #0
   121d8:	beq	121e0 <table_destroy@@Base+0xc4>
   121dc:	bl	11ea8 <free@plt>
   121e0:	ldr	r0, [r4, #44]	; 0x2c
   121e4:	cmp	r0, #0
   121e8:	pop	{r4, r5, r6, sl, fp, lr}
   121ec:	beq	121f4 <table_destroy@@Base+0xd8>
   121f0:	b	11ea8 <free@plt>
   121f4:	bx	lr

000121f8 <table_dupe@@Base>:
   121f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   121fc:	add	fp, sp, #28
   12200:	sub	sp, sp, #12
   12204:	mov	r4, r0
   12208:	bl	139c4 <table_get_row_length@@Base>
   1220c:	mov	r8, r0
   12210:	mov	r0, r4
   12214:	bl	12bec <table_get_column_length@@Base>
   12218:	mov	r6, r0
   1221c:	mov	r0, #56	; 0x38
   12220:	bl	11ecc <malloc@plt>
   12224:	vmov.i32	q8, #0	; 0x00000000
   12228:	mov	sl, r0
   1222c:	mov	r5, #0
   12230:	mov	r0, #10
   12234:	mov	r1, #20
   12238:	cmp	r6, #1
   1223c:	str	r5, [sl]
   12240:	str	r5, [sl, #4]
   12244:	str	r0, [sl, #8]
   12248:	str	r5, [sl, #12]
   1224c:	str	r5, [sl, #16]
   12250:	str	r5, [sl, #20]
   12254:	str	r1, [sl, #24]
   12258:	str	r5, [sl, #28]
   1225c:	str	r0, [sl, #48]	; 0x30
   12260:	add	r0, sl, #32
   12264:	str	r5, [sl, #52]	; 0x34
   12268:	vst1.32	{d16-d17}, [r0]
   1226c:	blt	122a8 <table_dupe@@Base+0xb0>
   12270:	mov	r0, r4
   12274:	mov	r1, r5
   12278:	bl	12c60 <table_get_column_name@@Base>
   1227c:	mov	r7, r0
   12280:	mov	r0, r4
   12284:	mov	r1, r5
   12288:	bl	12c70 <table_get_column_data_type@@Base>
   1228c:	mov	r2, r0
   12290:	mov	r0, sl
   12294:	mov	r1, r7
   12298:	bl	12c84 <table_add_column@@Base>
   1229c:	add	r5, r5, #1
   122a0:	cmp	r6, r5
   122a4:	bne	12270 <table_dupe@@Base+0x78>
   122a8:	cmp	r8, #1
   122ac:	blt	1283c <table_dupe@@Base+0x644>
   122b0:	mov	r5, #0
   122b4:	add	r9, sp, #8
   122b8:	mov	r0, sl
   122bc:	bl	139cc <table_add_row@@Base>
   122c0:	cmp	r6, #1
   122c4:	bge	122e4 <table_dupe@@Base+0xec>
   122c8:	add	r5, r5, #1
   122cc:	cmp	r5, r8
   122d0:	beq	1283c <table_dupe@@Base+0x644>
   122d4:	mov	r0, sl
   122d8:	bl	139cc <table_add_row@@Base>
   122dc:	cmp	r6, #1
   122e0:	blt	122c8 <table_dupe@@Base+0xd0>
   122e4:	mov	r7, #0
   122e8:	b	12320 <table_dupe@@Base+0x128>
   122ec:	mov	r0, r4
   122f0:	mov	r1, r5
   122f4:	mov	r2, r7
   122f8:	bl	13924 <table_get_ptr@@Base>
   122fc:	str	r0, [sp, #8]
   12300:	mov	r0, sl
   12304:	mov	r1, r5
   12308:	mov	r2, r7
   1230c:	mov	r3, r9
   12310:	bl	14abc <table_set_ptr@@Base>
   12314:	add	r7, r7, #1
   12318:	cmp	r6, r7
   1231c:	beq	122c8 <table_dupe@@Base+0xd0>
   12320:	mov	r0, r4
   12324:	mov	r1, r7
   12328:	bl	12c70 <table_get_column_data_type@@Base>
   1232c:	cmp	r0, #23
   12330:	bhi	12314 <table_dupe@@Base+0x11c>
   12334:	add	r1, pc, #0
   12338:	ldr	pc, [r1, r0, lsl #2]
   1233c:	muleq	r1, ip, r3
   12340:	ldrdeq	r2, [r1], -r0
   12344:	andeq	r2, r1, r4, lsl #8
   12348:	andeq	r2, r1, r8, lsr r4
   1234c:	andeq	r2, r1, ip, ror #8
   12350:	andeq	r2, r1, r0, lsr #9
   12354:	ldrdeq	r2, [r1], -r4
   12358:	andeq	r2, r1, r8, lsl #10
   1235c:	andeq	r2, r1, ip, lsr r5
   12360:	andeq	r2, r1, r0, ror r5
   12364:	andeq	r2, r1, r4, lsr #11
   12368:	ldrdeq	r2, [r1], -r8
   1236c:	andeq	r2, r1, ip, lsl #12
   12370:	andeq	r2, r1, r0, asr #12
   12374:	andeq	r2, r1, r4, ror r6
   12378:	andeq	r2, r1, r8, lsr #13
   1237c:	ldrdeq	r2, [r1], -ip
   12380:	andeq	r2, r1, ip, lsl #14
   12384:	andeq	r2, r1, ip, lsr r7
   12388:	andeq	r2, r1, ip, ror #14
   1238c:	andeq	r2, r1, r0, lsr #15
   12390:	ldrdeq	r2, [r1], -r4
   12394:	andeq	r2, r1, r8, lsl #16
   12398:	andeq	r2, r1, ip, ror #5
   1239c:	mov	r0, r4
   123a0:	mov	r1, r5
   123a4:	mov	r2, r7
   123a8:	bl	13718 <table_get_int@@Base>
   123ac:	mov	r3, r0
   123b0:	mov	r0, sl
   123b4:	mov	r1, r5
   123b8:	mov	r2, r7
   123bc:	bl	13f78 <table_set_int@@Base>
   123c0:	add	r7, r7, #1
   123c4:	cmp	r6, r7
   123c8:	bne	12320 <table_dupe@@Base+0x128>
   123cc:	b	122c8 <table_dupe@@Base+0xd0>
   123d0:	mov	r0, r4
   123d4:	mov	r1, r5
   123d8:	mov	r2, r7
   123dc:	bl	13730 <table_get_uint@@Base>
   123e0:	mov	r3, r0
   123e4:	mov	r0, sl
   123e8:	mov	r1, r5
   123ec:	mov	r2, r7
   123f0:	bl	13ff8 <table_set_uint@@Base>
   123f4:	add	r7, r7, #1
   123f8:	cmp	r6, r7
   123fc:	bne	12320 <table_dupe@@Base+0x128>
   12400:	b	122c8 <table_dupe@@Base+0xd0>
   12404:	mov	r0, r4
   12408:	mov	r1, r5
   1240c:	mov	r2, r7
   12410:	bl	13748 <table_get_int8@@Base>
   12414:	mov	r3, r0
   12418:	mov	r0, sl
   1241c:	mov	r1, r5
   12420:	mov	r2, r7
   12424:	bl	14078 <table_set_int8@@Base>
   12428:	add	r7, r7, #1
   1242c:	cmp	r6, r7
   12430:	bne	12320 <table_dupe@@Base+0x128>
   12434:	b	122c8 <table_dupe@@Base+0xd0>
   12438:	mov	r0, r4
   1243c:	mov	r1, r5
   12440:	mov	r2, r7
   12444:	bl	13760 <table_get_uint8@@Base>
   12448:	mov	r3, r0
   1244c:	mov	r0, sl
   12450:	mov	r1, r5
   12454:	mov	r2, r7
   12458:	bl	140f8 <table_set_uint8@@Base>
   1245c:	add	r7, r7, #1
   12460:	cmp	r6, r7
   12464:	bne	12320 <table_dupe@@Base+0x128>
   12468:	b	122c8 <table_dupe@@Base+0xd0>
   1246c:	mov	r0, r4
   12470:	mov	r1, r5
   12474:	mov	r2, r7
   12478:	bl	13778 <table_get_int16@@Base>
   1247c:	mov	r3, r0
   12480:	mov	r0, sl
   12484:	mov	r1, r5
   12488:	mov	r2, r7
   1248c:	bl	14178 <table_set_int16@@Base>
   12490:	add	r7, r7, #1
   12494:	cmp	r6, r7
   12498:	bne	12320 <table_dupe@@Base+0x128>
   1249c:	b	122c8 <table_dupe@@Base+0xd0>
   124a0:	mov	r0, r4
   124a4:	mov	r1, r5
   124a8:	mov	r2, r7
   124ac:	bl	13790 <table_get_uint16@@Base>
   124b0:	mov	r3, r0
   124b4:	mov	r0, sl
   124b8:	mov	r1, r5
   124bc:	mov	r2, r7
   124c0:	bl	141f8 <table_set_uint16@@Base>
   124c4:	add	r7, r7, #1
   124c8:	cmp	r6, r7
   124cc:	bne	12320 <table_dupe@@Base+0x128>
   124d0:	b	122c8 <table_dupe@@Base+0xd0>
   124d4:	mov	r0, r4
   124d8:	mov	r1, r5
   124dc:	mov	r2, r7
   124e0:	bl	137a8 <table_get_int32@@Base>
   124e4:	mov	r3, r0
   124e8:	mov	r0, sl
   124ec:	mov	r1, r5
   124f0:	mov	r2, r7
   124f4:	bl	14278 <table_set_int32@@Base>
   124f8:	add	r7, r7, #1
   124fc:	cmp	r6, r7
   12500:	bne	12320 <table_dupe@@Base+0x128>
   12504:	b	122c8 <table_dupe@@Base+0xd0>
   12508:	mov	r0, r4
   1250c:	mov	r1, r5
   12510:	mov	r2, r7
   12514:	bl	137c0 <table_get_uint32@@Base>
   12518:	mov	r3, r0
   1251c:	mov	r0, sl
   12520:	mov	r1, r5
   12524:	mov	r2, r7
   12528:	bl	142f8 <table_set_uint32@@Base>
   1252c:	add	r7, r7, #1
   12530:	cmp	r6, r7
   12534:	bne	12320 <table_dupe@@Base+0x128>
   12538:	b	122c8 <table_dupe@@Base+0xd0>
   1253c:	mov	r0, r4
   12540:	mov	r1, r5
   12544:	mov	r2, r7
   12548:	bl	137d8 <table_get_int64@@Base>
   1254c:	stm	sp, {r0, r1}
   12550:	mov	r0, sl
   12554:	mov	r1, r5
   12558:	mov	r2, r7
   1255c:	bl	14378 <table_set_int64@@Base>
   12560:	add	r7, r7, #1
   12564:	cmp	r6, r7
   12568:	bne	12320 <table_dupe@@Base+0x128>
   1256c:	b	122c8 <table_dupe@@Base+0xd0>
   12570:	mov	r0, r4
   12574:	mov	r1, r5
   12578:	mov	r2, r7
   1257c:	bl	137f0 <table_get_uint64@@Base>
   12580:	stm	sp, {r0, r1}
   12584:	mov	r0, sl
   12588:	mov	r1, r5
   1258c:	mov	r2, r7
   12590:	bl	14400 <table_set_uint64@@Base>
   12594:	add	r7, r7, #1
   12598:	cmp	r6, r7
   1259c:	bne	12320 <table_dupe@@Base+0x128>
   125a0:	b	122c8 <table_dupe@@Base+0xd0>
   125a4:	mov	r0, r4
   125a8:	mov	r1, r5
   125ac:	mov	r2, r7
   125b0:	bl	13808 <table_get_short@@Base>
   125b4:	mov	r3, r0
   125b8:	mov	r0, sl
   125bc:	mov	r1, r5
   125c0:	mov	r2, r7
   125c4:	bl	14488 <table_set_short@@Base>
   125c8:	add	r7, r7, #1
   125cc:	cmp	r6, r7
   125d0:	bne	12320 <table_dupe@@Base+0x128>
   125d4:	b	122c8 <table_dupe@@Base+0xd0>
   125d8:	mov	r0, r4
   125dc:	mov	r1, r5
   125e0:	mov	r2, r7
   125e4:	bl	13820 <table_get_ushort@@Base>
   125e8:	mov	r3, r0
   125ec:	mov	r0, sl
   125f0:	mov	r1, r5
   125f4:	mov	r2, r7
   125f8:	bl	14508 <table_set_ushort@@Base>
   125fc:	add	r7, r7, #1
   12600:	cmp	r6, r7
   12604:	bne	12320 <table_dupe@@Base+0x128>
   12608:	b	122c8 <table_dupe@@Base+0xd0>
   1260c:	mov	r0, r4
   12610:	mov	r1, r5
   12614:	mov	r2, r7
   12618:	bl	13838 <table_get_long@@Base>
   1261c:	mov	r3, r0
   12620:	mov	r0, sl
   12624:	mov	r1, r5
   12628:	mov	r2, r7
   1262c:	bl	14588 <table_set_long@@Base>
   12630:	add	r7, r7, #1
   12634:	cmp	r6, r7
   12638:	bne	12320 <table_dupe@@Base+0x128>
   1263c:	b	122c8 <table_dupe@@Base+0xd0>
   12640:	mov	r0, r4
   12644:	mov	r1, r5
   12648:	mov	r2, r7
   1264c:	bl	13850 <table_get_ulong@@Base>
   12650:	mov	r3, r0
   12654:	mov	r0, sl
   12658:	mov	r1, r5
   1265c:	mov	r2, r7
   12660:	bl	14608 <table_set_ulong@@Base>
   12664:	add	r7, r7, #1
   12668:	cmp	r6, r7
   1266c:	bne	12320 <table_dupe@@Base+0x128>
   12670:	b	122c8 <table_dupe@@Base+0xd0>
   12674:	mov	r0, r4
   12678:	mov	r1, r5
   1267c:	mov	r2, r7
   12680:	bl	13868 <table_get_llong@@Base>
   12684:	stm	sp, {r0, r1}
   12688:	mov	r0, sl
   1268c:	mov	r1, r5
   12690:	mov	r2, r7
   12694:	bl	14688 <table_set_llong@@Base>
   12698:	add	r7, r7, #1
   1269c:	cmp	r6, r7
   126a0:	bne	12320 <table_dupe@@Base+0x128>
   126a4:	b	122c8 <table_dupe@@Base+0xd0>
   126a8:	mov	r0, r4
   126ac:	mov	r1, r5
   126b0:	mov	r2, r7
   126b4:	bl	13880 <table_get_ullong@@Base>
   126b8:	stm	sp, {r0, r1}
   126bc:	mov	r0, sl
   126c0:	mov	r1, r5
   126c4:	mov	r2, r7
   126c8:	bl	14710 <table_set_ullong@@Base>
   126cc:	add	r7, r7, #1
   126d0:	cmp	r6, r7
   126d4:	bne	12320 <table_dupe@@Base+0x128>
   126d8:	b	122c8 <table_dupe@@Base+0xd0>
   126dc:	mov	r0, r4
   126e0:	mov	r1, r5
   126e4:	mov	r2, r7
   126e8:	bl	13898 <table_get_float@@Base>
   126ec:	mov	r0, sl
   126f0:	mov	r1, r5
   126f4:	mov	r2, r7
   126f8:	bl	14798 <table_set_float@@Base>
   126fc:	add	r7, r7, #1
   12700:	cmp	r6, r7
   12704:	bne	12320 <table_dupe@@Base+0x128>
   12708:	b	122c8 <table_dupe@@Base+0xd0>
   1270c:	mov	r0, r4
   12710:	mov	r1, r5
   12714:	mov	r2, r7
   12718:	bl	138b0 <table_get_double@@Base>
   1271c:	mov	r0, sl
   12720:	mov	r1, r5
   12724:	mov	r2, r7
   12728:	bl	14824 <table_set_double@@Base>
   1272c:	add	r7, r7, #1
   12730:	cmp	r6, r7
   12734:	bne	12320 <table_dupe@@Base+0x128>
   12738:	b	122c8 <table_dupe@@Base+0xd0>
   1273c:	mov	r0, r4
   12740:	mov	r1, r5
   12744:	mov	r2, r7
   12748:	bl	138c8 <table_get_ldouble@@Base>
   1274c:	mov	r0, sl
   12750:	mov	r1, r5
   12754:	mov	r2, r7
   12758:	bl	148ac <table_set_ldouble@@Base>
   1275c:	add	r7, r7, #1
   12760:	cmp	r6, r7
   12764:	bne	12320 <table_dupe@@Base+0x128>
   12768:	b	122c8 <table_dupe@@Base+0xd0>
   1276c:	mov	r0, r4
   12770:	mov	r1, r5
   12774:	mov	r2, r7
   12778:	bl	138e0 <table_get_char@@Base>
   1277c:	mov	r3, r0
   12780:	mov	r0, sl
   12784:	mov	r1, r5
   12788:	mov	r2, r7
   1278c:	bl	149bc <table_set_char@@Base>
   12790:	add	r7, r7, #1
   12794:	cmp	r6, r7
   12798:	bne	12320 <table_dupe@@Base+0x128>
   1279c:	b	122c8 <table_dupe@@Base+0xd0>
   127a0:	mov	r0, r4
   127a4:	mov	r1, r5
   127a8:	mov	r2, r7
   127ac:	bl	138f8 <table_get_uchar@@Base>
   127b0:	mov	r3, r0
   127b4:	mov	r0, sl
   127b8:	mov	r1, r5
   127bc:	mov	r2, r7
   127c0:	bl	14a3c <table_set_uchar@@Base>
   127c4:	add	r7, r7, #1
   127c8:	cmp	r6, r7
   127cc:	bne	12320 <table_dupe@@Base+0x128>
   127d0:	b	122c8 <table_dupe@@Base+0xd0>
   127d4:	mov	r0, r4
   127d8:	mov	r1, r5
   127dc:	mov	r2, r7
   127e0:	bl	13910 <table_get_string@@Base>
   127e4:	mov	r3, r0
   127e8:	mov	r0, sl
   127ec:	mov	r1, r5
   127f0:	mov	r2, r7
   127f4:	bl	14934 <table_set_string@@Base>
   127f8:	add	r7, r7, #1
   127fc:	cmp	r6, r7
   12800:	bne	12320 <table_dupe@@Base+0x128>
   12804:	b	122c8 <table_dupe@@Base+0xd0>
   12808:	mov	r0, r4
   1280c:	mov	r1, r5
   12810:	mov	r2, r7
   12814:	bl	13700 <table_get_bool@@Base>
   12818:	mov	r3, r0
   1281c:	mov	r0, sl
   12820:	mov	r1, r5
   12824:	mov	r2, r7
   12828:	bl	13ef8 <table_set_bool@@Base>
   1282c:	add	r7, r7, #1
   12830:	cmp	r6, r7
   12834:	bne	12320 <table_dupe@@Base+0x128>
   12838:	b	122c8 <table_dupe@@Base+0xd0>
   1283c:	mov	r0, sl
   12840:	sub	sp, fp, #28
   12844:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012848 <table_get_major_version@@Base>:
   12848:	mov	r0, #0
   1284c:	bx	lr

00012850 <table_get_minor_version@@Base>:
   12850:	mov	r0, #0
   12854:	bx	lr

00012858 <table_get_patch_version@@Base>:
   12858:	mov	r0, #0
   1285c:	bx	lr

00012860 <table_get_version@@Base>:
   12860:	movw	r0, #22078	; 0x563e
   12864:	movt	r0, #1
   12868:	bx	lr

0001286c <table_get_callback_length@@Base>:
   1286c:	ldr	r0, [r0, #32]
   12870:	bx	lr

00012874 <table_register_callback@@Base>:
   12874:	push	{r4, r5, r6, r7, fp, lr}
   12878:	add	fp, sp, #16
   1287c:	mov	r5, r0
   12880:	ldr	r0, [r0, #32]
   12884:	mov	r4, r3
   12888:	mov	r6, r2
   1288c:	mov	r7, r1
   12890:	cmp	r0, #1
   12894:	blt	128f0 <table_register_callback@@Base+0x7c>
   12898:	ldr	r2, [r5, #36]	; 0x24
   1289c:	mov	r1, #0
   128a0:	ldr	r3, [r2, r1, lsl #2]
   128a4:	cmp	r3, r7
   128a8:	beq	128c4 <table_register_callback@@Base+0x50>
   128ac:	add	r1, r1, #1
   128b0:	cmp	r0, r1
   128b4:	beq	128f0 <table_register_callback@@Base+0x7c>
   128b8:	ldr	r3, [r2, r1, lsl #2]
   128bc:	cmp	r3, r7
   128c0:	bne	128ac <table_register_callback@@Base+0x38>
   128c4:	ldr	r3, [r5, #40]	; 0x28
   128c8:	ldr	r3, [r3, r1, lsl #2]
   128cc:	cmp	r3, r6
   128d0:	bne	128ac <table_register_callback@@Base+0x38>
   128d4:	cmp	r1, #0
   128d8:	beq	128f0 <table_register_callback@@Base+0x7c>
   128dc:	ldr	r0, [r5, #44]	; 0x2c
   128e0:	ldr	r2, [r0, r1, lsl #2]
   128e4:	orr	r2, r2, r4
   128e8:	str	r2, [r0, r1, lsl #2]
   128ec:	pop	{r4, r5, r6, r7, fp, pc}
   128f0:	ldr	r1, [r5, #48]	; 0x30
   128f4:	udiv	r2, r0, r1
   128f8:	mls	r2, r2, r1, r0
   128fc:	cmp	r2, #0
   12900:	bne	1294c <table_register_callback@@Base+0xd8>
   12904:	ldr	r2, [r5, #52]	; 0x34
   12908:	ldr	r0, [r5, #36]	; 0x24
   1290c:	add	r1, r2, r1
   12910:	str	r1, [r5, #52]	; 0x34
   12914:	lsl	r1, r1, #2
   12918:	bl	11eb4 <realloc@plt>
   1291c:	str	r0, [r5, #36]	; 0x24
   12920:	ldr	r1, [r5, #52]	; 0x34
   12924:	ldr	r0, [r5, #40]	; 0x28
   12928:	lsl	r1, r1, #2
   1292c:	bl	11eb4 <realloc@plt>
   12930:	str	r0, [r5, #40]	; 0x28
   12934:	ldr	r1, [r5, #52]	; 0x34
   12938:	ldr	r0, [r5, #44]	; 0x2c
   1293c:	lsl	r1, r1, #2
   12940:	bl	11eb4 <realloc@plt>
   12944:	str	r0, [r5, #44]	; 0x2c
   12948:	ldr	r0, [r5, #32]
   1294c:	ldr	r1, [r5, #36]	; 0x24
   12950:	str	r7, [r1, r0, lsl #2]
   12954:	ldr	r1, [r5, #40]	; 0x28
   12958:	str	r6, [r1, r0, lsl #2]
   1295c:	ldr	r1, [r5, #44]	; 0x2c
   12960:	str	r4, [r1, r0, lsl #2]
   12964:	ldr	r0, [r5, #32]
   12968:	add	r0, r0, #1
   1296c:	str	r0, [r5, #32]
   12970:	pop	{r4, r5, r6, r7, fp, pc}

00012974 <table_unregister_callback@@Base>:
   12974:	push	{r4, r5, r6, sl, fp, lr}
   12978:	add	fp, sp, #16
   1297c:	ldr	r4, [r0, #32]
   12980:	cmp	r4, #1
   12984:	blt	12ad8 <table_unregister_callback@@Base+0x164>
   12988:	ldr	r3, [r0, #36]	; 0x24
   1298c:	mov	r6, r0
   12990:	mov	r0, #0
   12994:	ldr	r5, [r3, r0, lsl #2]
   12998:	cmp	r5, r1
   1299c:	beq	129b8 <table_unregister_callback@@Base+0x44>
   129a0:	add	r0, r0, #1
   129a4:	cmp	r0, r4
   129a8:	beq	12ad8 <table_unregister_callback@@Base+0x164>
   129ac:	ldr	r5, [r3, r0, lsl #2]
   129b0:	cmp	r5, r1
   129b4:	bne	129a0 <table_unregister_callback@@Base+0x2c>
   129b8:	ldr	r5, [r6, #40]	; 0x28
   129bc:	ldr	r5, [r5, r0, lsl #2]
   129c0:	cmp	r5, r2
   129c4:	bne	129a0 <table_unregister_callback@@Base+0x2c>
   129c8:	sub	r1, r4, #1
   129cc:	cmp	r0, r1
   129d0:	bge	12a54 <table_unregister_callback@@Base+0xe0>
   129d4:	add	r2, r0, #1
   129d8:	ldr	r1, [r3, r2, lsl #2]
   129dc:	str	r1, [r3, r0, lsl #2]
   129e0:	ldr	r1, [r6, #40]	; 0x28
   129e4:	ldr	r3, [r1, r2, lsl #2]
   129e8:	str	r3, [r1, r0, lsl #2]
   129ec:	ldr	r1, [r6, #44]	; 0x2c
   129f0:	ldr	r3, [r1, r2, lsl #2]
   129f4:	str	r3, [r1, r0, lsl #2]
   129f8:	ldr	r1, [r6, #32]
   129fc:	sub	r1, r1, #1
   12a00:	cmp	r2, r1
   12a04:	bge	12a54 <table_unregister_callback@@Base+0xe0>
   12a08:	ldr	r1, [r6, #36]	; 0x24
   12a0c:	add	r1, r1, r0, lsl #2
   12a10:	ldr	r2, [r1, #8]
   12a14:	str	r2, [r1, #4]
   12a18:	ldr	r1, [r6, #40]	; 0x28
   12a1c:	add	r1, r1, r0, lsl #2
   12a20:	ldr	r2, [r1, #8]
   12a24:	str	r2, [r1, #4]
   12a28:	ldr	r1, [r6, #44]	; 0x2c
   12a2c:	add	r1, r1, r0, lsl #2
   12a30:	ldr	r2, [r1, #8]
   12a34:	str	r2, [r1, #4]
   12a38:	add	r2, r0, #1
   12a3c:	add	r0, r0, #2
   12a40:	ldr	r1, [r6, #32]
   12a44:	sub	r1, r1, #1
   12a48:	cmp	r0, r1
   12a4c:	mov	r0, r2
   12a50:	blt	12a08 <table_unregister_callback@@Base+0x94>
   12a54:	str	r1, [r6, #32]
   12a58:	ldr	r2, [r6, #48]	; 0x30
   12a5c:	udiv	r0, r1, r2
   12a60:	mls	r0, r0, r2, r1
   12a64:	cmp	r0, #0
   12a68:	popne	{r4, r5, r6, sl, fp, pc}
   12a6c:	ldr	r1, [r6, #52]	; 0x34
   12a70:	ldr	r0, [r6, #36]	; 0x24
   12a74:	subs	r1, r1, r2
   12a78:	str	r1, [r6, #52]	; 0x34
   12a7c:	beq	12ab4 <table_unregister_callback@@Base+0x140>
   12a80:	lsl	r1, r1, #2
   12a84:	bl	11eb4 <realloc@plt>
   12a88:	str	r0, [r6, #36]	; 0x24
   12a8c:	ldr	r1, [r6, #52]	; 0x34
   12a90:	ldr	r0, [r6, #40]	; 0x28
   12a94:	lsl	r1, r1, #2
   12a98:	bl	11eb4 <realloc@plt>
   12a9c:	str	r0, [r6, #40]	; 0x28
   12aa0:	ldr	r1, [r6, #52]	; 0x34
   12aa4:	ldr	r0, [r6, #44]	; 0x2c
   12aa8:	lsl	r1, r1, #2
   12aac:	bl	11eb4 <realloc@plt>
   12ab0:	b	12ad4 <table_unregister_callback@@Base+0x160>
   12ab4:	bl	11ea8 <free@plt>
   12ab8:	ldr	r0, [r6, #40]	; 0x28
   12abc:	bl	11ea8 <free@plt>
   12ac0:	ldr	r0, [r6, #44]	; 0x2c
   12ac4:	bl	11ea8 <free@plt>
   12ac8:	mov	r0, #0
   12acc:	str	r0, [r6, #36]	; 0x24
   12ad0:	str	r0, [r6, #40]	; 0x28
   12ad4:	str	r0, [r6, #44]	; 0x2c
   12ad8:	pop	{r4, r5, r6, sl, fp, pc}

00012adc <table_notify@@Base>:
   12adc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12ae0:	add	fp, sp, #24
   12ae4:	sub	sp, sp, #8
   12ae8:	mov	r7, r0
   12aec:	ldr	r0, [r0, #32]
   12af0:	cmp	r0, #1
   12af4:	blt	12b6c <table_notify@@Base+0x90>
   12af8:	mov	r4, r3
   12afc:	mov	r8, r2
   12b00:	mov	r9, r1
   12b04:	mov	r5, #0
   12b08:	ldr	r1, [r7, #44]	; 0x2c
   12b0c:	ldr	r1, [r1, r5, lsl #2]
   12b10:	tst	r1, r4
   12b14:	bne	12b34 <table_notify@@Base+0x58>
   12b18:	add	r5, r5, #1
   12b1c:	cmp	r5, r0
   12b20:	bge	12b6c <table_notify@@Base+0x90>
   12b24:	ldr	r1, [r7, #44]	; 0x2c
   12b28:	ldr	r1, [r1, r5, lsl #2]
   12b2c:	tst	r1, r4
   12b30:	beq	12b18 <table_notify@@Base+0x3c>
   12b34:	ldr	r0, [r7, #36]	; 0x24
   12b38:	ldr	r1, [r7, #40]	; 0x28
   12b3c:	mov	r2, r8
   12b40:	mov	r3, r4
   12b44:	ldr	r6, [r0, r5, lsl #2]
   12b48:	ldr	r0, [r1, r5, lsl #2]
   12b4c:	mov	r1, r9
   12b50:	str	r0, [sp]
   12b54:	mov	r0, r7
   12b58:	blx	r6
   12b5c:	ldr	r0, [r7, #32]
   12b60:	add	r5, r5, #1
   12b64:	cmp	r5, r0
   12b68:	blt	12b24 <table_notify@@Base+0x48>
   12b6c:	sub	sp, fp, #24
   12b70:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012b74 <table_column_init@@Base>:
   12b74:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12b78:	add	fp, sp, #24
   12b7c:	ldr	r7, [r0]
   12b80:	mov	r0, r2
   12b84:	mov	r4, r3
   12b88:	mov	r5, r2
   12b8c:	mov	r6, r1
   12b90:	bl	11ef0 <strlen@plt>
   12b94:	add	r0, r0, #1
   12b98:	bl	11ecc <malloc@plt>
   12b9c:	ldr	r8, [fp, #8]
   12ba0:	add	r6, r6, r6, lsl #1
   12ba4:	cmp	r0, #0
   12ba8:	str	r0, [r7, r6, lsl #2]
   12bac:	beq	12bb8 <table_column_init@@Base+0x44>
   12bb0:	mov	r1, r5
   12bb4:	bl	11ec0 <strcpy@plt>
   12bb8:	add	r0, r7, r6, lsl #2
   12bbc:	stmib	r0, {r4, r8}
   12bc0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012bc4 <table_get_col_ptr@@Base>:
   12bc4:	ldr	r0, [r0]
   12bc8:	add	r1, r1, r1, lsl #1
   12bcc:	add	r0, r0, r1, lsl #2
   12bd0:	bx	lr

00012bd4 <table_column_destroy@@Base>:
   12bd4:	ldr	r0, [r0]
   12bd8:	add	r1, r1, r1, lsl #1
   12bdc:	ldr	r0, [r0, r1, lsl #2]
   12be0:	cmp	r0, #0
   12be4:	bxeq	lr
   12be8:	b	11ea8 <free@plt>

00012bec <table_get_column_length@@Base>:
   12bec:	ldr	r0, [r0, #4]
   12bf0:	bx	lr

00012bf4 <table_get_column@@Base>:
   12bf4:	push	{r4, r5, r6, r7, fp, lr}
   12bf8:	add	fp, sp, #16
   12bfc:	ldr	r6, [r0, #4]
   12c00:	cmp	r6, #1
   12c04:	blt	12c4c <table_get_column@@Base+0x58>
   12c08:	ldr	r7, [r0]
   12c0c:	mov	r5, r1
   12c10:	mov	r4, #0
   12c14:	ldr	r0, [r7]
   12c18:	mov	r1, r5
   12c1c:	bl	11e90 <strcmp@plt>
   12c20:	cmp	r0, #0
   12c24:	beq	12c3c <table_get_column@@Base+0x48>
   12c28:	add	r4, r4, #1
   12c2c:	add	r7, r7, #12
   12c30:	cmp	r6, r4
   12c34:	bne	12c14 <table_get_column@@Base+0x20>
   12c38:	mov	r4, r6
   12c3c:	cmp	r4, r6
   12c40:	mvneq	r4, #0
   12c44:	mov	r0, r4
   12c48:	pop	{r4, r5, r6, r7, fp, pc}
   12c4c:	mov	r4, #0
   12c50:	cmp	r4, r6
   12c54:	mvneq	r4, #0
   12c58:	mov	r0, r4
   12c5c:	pop	{r4, r5, r6, r7, fp, pc}

00012c60 <table_get_column_name@@Base>:
   12c60:	ldr	r0, [r0]
   12c64:	add	r1, r1, r1, lsl #1
   12c68:	ldr	r0, [r0, r1, lsl #2]
   12c6c:	bx	lr

00012c70 <table_get_column_data_type@@Base>:
   12c70:	ldr	r0, [r0]
   12c74:	add	r1, r1, r1, lsl #1
   12c78:	add	r0, r0, r1, lsl #2
   12c7c:	ldr	r0, [r0, #4]
   12c80:	bx	lr

00012c84 <table_add_column@@Base>:
   12c84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c88:	add	fp, sp, #28
   12c8c:	sub	sp, sp, #4
   12c90:	mov	r4, r0
   12c94:	mov	r8, r1
   12c98:	ldr	r0, [r0, #4]
   12c9c:	mov	r9, r2
   12ca0:	ldr	r1, [r4, #8]
   12ca4:	udiv	r2, r0, r1
   12ca8:	mls	r0, r2, r1, r0
   12cac:	cmp	r0, #0
   12cb0:	bne	12d1c <table_add_column@@Base+0x98>
   12cb4:	ldr	r2, [r4, #12]
   12cb8:	ldr	r0, [r4]
   12cbc:	add	r1, r2, r1
   12cc0:	str	r1, [r4, #12]
   12cc4:	add	r1, r1, r1, lsl #1
   12cc8:	lsl	r1, r1, #2
   12ccc:	bl	11eb4 <realloc@plt>
   12cd0:	str	r0, [r4]
   12cd4:	mov	r0, r4
   12cd8:	bl	139c4 <table_get_row_length@@Base>
   12cdc:	cmp	r0, #1
   12ce0:	blt	12d1c <table_add_column@@Base+0x98>
   12ce4:	mov	r6, r0
   12ce8:	mov	r5, #0
   12cec:	mov	r0, r4
   12cf0:	mov	r1, r5
   12cf4:	bl	1395c <table_get_row_ptr@@Base>
   12cf8:	ldr	r1, [r4, #12]
   12cfc:	mov	r7, r0
   12d00:	ldr	r0, [r0]
   12d04:	lsl	r1, r1, #2
   12d08:	bl	11eb4 <realloc@plt>
   12d0c:	add	r5, r5, #1
   12d10:	str	r0, [r7]
   12d14:	cmp	r6, r5
   12d18:	bne	12cec <table_add_column@@Base+0x68>
   12d1c:	mov	r0, r4
   12d20:	bl	139c4 <table_get_row_length@@Base>
   12d24:	ldr	r6, [r4, #4]
   12d28:	mov	r7, r0
   12d2c:	mov	r0, r9
   12d30:	bl	136d0 <table_get_default_compare_function_for_data_type@@Base>
   12d34:	ldr	r5, [r4]
   12d38:	mov	sl, r0
   12d3c:	mov	r0, r8
   12d40:	bl	11ef0 <strlen@plt>
   12d44:	add	r0, r0, #1
   12d48:	bl	11ecc <malloc@plt>
   12d4c:	mov	r1, r8
   12d50:	add	r8, r6, r6, lsl #1
   12d54:	cmp	r0, #0
   12d58:	str	r0, [r5, r8, lsl #2]
   12d5c:	beq	12d64 <table_add_column@@Base+0xe0>
   12d60:	bl	11ec0 <strcpy@plt>
   12d64:	add	r0, r5, r8, lsl #2
   12d68:	cmp	r7, #1
   12d6c:	stmib	r0, {r9, sl}
   12d70:	blt	12d94 <table_add_column@@Base+0x110>
   12d74:	mov	r5, #0
   12d78:	mov	r0, r4
   12d7c:	mov	r1, r5
   12d80:	mov	r2, r6
   12d84:	bl	14b18 <table_cell_init@@Base>
   12d88:	add	r5, r5, #1
   12d8c:	cmp	r7, r5
   12d90:	bne	12d78 <table_add_column@@Base+0xf4>
   12d94:	ldr	r2, [r4, #4]
   12d98:	mov	r0, r4
   12d9c:	mvn	r1, #0
   12da0:	mov	r3, #8
   12da4:	bl	12adc <table_notify@@Base>
   12da8:	ldr	r0, [r4, #4]
   12dac:	add	r1, r0, #1
   12db0:	str	r1, [r4, #4]
   12db4:	sub	sp, fp, #28
   12db8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012dbc <table_remove_column@@Base>:
   12dbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12dc0:	add	fp, sp, #28
   12dc4:	sub	sp, sp, #12
   12dc8:	mov	r5, r0
   12dcc:	ldr	r0, [r0]
   12dd0:	add	r6, r1, r1, lsl #1
   12dd4:	mov	r4, r1
   12dd8:	ldr	r0, [r0, r6, lsl #2]
   12ddc:	cmp	r0, #0
   12de0:	beq	12de8 <table_remove_column@@Base+0x2c>
   12de4:	bl	11ea8 <free@plt>
   12de8:	ldr	r7, [r5, #4]
   12dec:	sub	r0, r7, #1
   12df0:	cmp	r0, r4
   12df4:	str	r0, [sp, #8]
   12df8:	ble	12e2c <table_remove_column@@Base+0x70>
   12dfc:	mvn	r0, r4
   12e00:	lsl	r1, r6, #2
   12e04:	add	r0, r0, r7
   12e08:	ldr	r2, [r5]
   12e0c:	subs	r0, r0, #1
   12e10:	add	r2, r2, r1
   12e14:	add	r1, r1, #12
   12e18:	vldr	d16, [r2, #12]
   12e1c:	ldr	r3, [r2, #20]
   12e20:	str	r3, [r2, #8]
   12e24:	vstr	d16, [r2]
   12e28:	bne	12e08 <table_remove_column@@Base+0x4c>
   12e2c:	mov	r0, r5
   12e30:	bl	139c4 <table_get_row_length@@Base>
   12e34:	cmp	r0, #1
   12e38:	blt	12f24 <table_remove_column@@Base+0x168>
   12e3c:	mov	sl, r0
   12e40:	ldr	r0, [sp, #8]
   12e44:	cmp	r0, r4
   12e48:	ble	12ef8 <table_remove_column@@Base+0x13c>
   12e4c:	mvn	r0, r4
   12e50:	sub	r8, r7, #2
   12e54:	add	r0, r7, r0
   12e58:	mov	r7, #0
   12e5c:	and	r9, r0, #1
   12e60:	add	r0, r4, #1
   12e64:	str	r0, [sp, #4]
   12e68:	b	12e78 <table_remove_column@@Base+0xbc>
   12e6c:	add	r7, r7, #1
   12e70:	cmp	r7, sl
   12e74:	beq	12f24 <table_remove_column@@Base+0x168>
   12e78:	mov	r0, r5
   12e7c:	mov	r1, r7
   12e80:	mov	r2, r4
   12e84:	bl	14b54 <table_cell_destroy@@Base>
   12e88:	mov	r0, r5
   12e8c:	mov	r1, r7
   12e90:	bl	1395c <table_get_row_ptr@@Base>
   12e94:	cmp	r9, #0
   12e98:	mov	r2, r4
   12e9c:	beq	12eb4 <table_remove_column@@Base+0xf8>
   12ea0:	ldr	r1, [r0]
   12ea4:	add	r2, r1, r4, lsl #2
   12ea8:	ldr	r2, [r2, #4]
   12eac:	str	r2, [r1, r4, lsl #2]
   12eb0:	ldr	r2, [sp, #4]
   12eb4:	cmp	r8, r4
   12eb8:	beq	12e6c <table_remove_column@@Base+0xb0>
   12ebc:	ldr	r1, [sp, #8]
   12ec0:	sub	r1, r1, r2
   12ec4:	lsl	r2, r2, #2
   12ec8:	ldr	r3, [r0]
   12ecc:	subs	r1, r1, #2
   12ed0:	add	r6, r3, r2
   12ed4:	ldr	r6, [r6, #4]
   12ed8:	str	r6, [r3, r2]
   12edc:	ldr	r3, [r0]
   12ee0:	add	r3, r3, r2
   12ee4:	add	r2, r2, #8
   12ee8:	ldr	r6, [r3, #8]
   12eec:	str	r6, [r3, #4]
   12ef0:	bne	12ec8 <table_remove_column@@Base+0x10c>
   12ef4:	b	12e6c <table_remove_column@@Base+0xb0>
   12ef8:	mov	r7, #0
   12efc:	mov	r0, r5
   12f00:	mov	r1, r7
   12f04:	mov	r2, r4
   12f08:	bl	14b54 <table_cell_destroy@@Base>
   12f0c:	mov	r0, r5
   12f10:	mov	r1, r7
   12f14:	bl	1395c <table_get_row_ptr@@Base>
   12f18:	add	r7, r7, #1
   12f1c:	cmp	sl, r7
   12f20:	bne	12efc <table_remove_column@@Base+0x140>
   12f24:	ldmib	r5, {r0, r1}
   12f28:	sub	r0, r0, #1
   12f2c:	udiv	r2, r0, r1
   12f30:	str	r0, [r5, #4]
   12f34:	mls	r0, r2, r1, r0
   12f38:	cmp	r0, #0
   12f3c:	bne	12fa8 <table_remove_column@@Base+0x1ec>
   12f40:	ldr	r2, [r5, #12]
   12f44:	ldr	r0, [r5]
   12f48:	sub	r1, r2, r1
   12f4c:	str	r1, [r5, #12]
   12f50:	add	r1, r1, r1, lsl #1
   12f54:	lsl	r1, r1, #2
   12f58:	bl	11eb4 <realloc@plt>
   12f5c:	str	r0, [r5]
   12f60:	mov	r0, r5
   12f64:	bl	139c4 <table_get_row_length@@Base>
   12f68:	cmp	r0, #1
   12f6c:	blt	12fa8 <table_remove_column@@Base+0x1ec>
   12f70:	mov	r8, r0
   12f74:	mov	r7, #0
   12f78:	mov	r0, r5
   12f7c:	mov	r1, r7
   12f80:	bl	1395c <table_get_row_ptr@@Base>
   12f84:	ldr	r1, [r5, #12]
   12f88:	mov	r6, r0
   12f8c:	ldr	r0, [r0]
   12f90:	lsl	r1, r1, #2
   12f94:	bl	11eb4 <realloc@plt>
   12f98:	add	r7, r7, #1
   12f9c:	str	r0, [r6]
   12fa0:	cmp	r8, r7
   12fa4:	bne	12f78 <table_remove_column@@Base+0x1bc>
   12fa8:	mov	r0, r5
   12fac:	mvn	r1, #0
   12fb0:	mov	r2, r4
   12fb4:	mov	r3, #16
   12fb8:	bl	12adc <table_notify@@Base>
   12fbc:	mov	r0, #0
   12fc0:	sub	sp, fp, #28
   12fc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012fc8 <table_get_column_compare_function@@Base>:
   12fc8:	ldr	r0, [r0]
   12fcc:	add	r1, r1, r1, lsl #1
   12fd0:	add	r0, r0, r1, lsl #2
   12fd4:	ldr	r0, [r0, #8]
   12fd8:	bx	lr

00012fdc <table_set_column_compare_function@@Base>:
   12fdc:	ldr	r0, [r0]
   12fe0:	add	r1, r1, r1, lsl #1
   12fe4:	add	r0, r0, r1, lsl #2
   12fe8:	str	r2, [r0, #8]
   12fec:	bx	lr

00012ff0 <table_compare_bool@@Base>:
   12ff0:	cmp	r0, #0
   12ff4:	beq	13028 <table_compare_bool@@Base+0x38>
   12ff8:	cmp	r1, #0
   12ffc:	moveq	r1, #1
   13000:	moveq	r0, r1
   13004:	bxeq	lr
   13008:	ldrb	r2, [r1]
   1300c:	ldrb	r0, [r0]
   13010:	mov	r1, #0
   13014:	cmp	r0, r2
   13018:	mvncc	r1, #0
   1301c:	movwhi	r1, #1
   13020:	mov	r0, r1
   13024:	bx	lr
   13028:	cmp	r1, #0
   1302c:	mvnne	r1, #0
   13030:	mov	r0, r1
   13034:	bx	lr

00013038 <table_compare_int@@Base>:
   13038:	cmp	r0, #0
   1303c:	beq	13070 <table_compare_int@@Base+0x38>
   13040:	cmp	r1, #0
   13044:	moveq	r1, #1
   13048:	moveq	r0, r1
   1304c:	bxeq	lr
   13050:	ldr	r2, [r1]
   13054:	ldr	r0, [r0]
   13058:	mov	r1, #0
   1305c:	cmp	r0, r2
   13060:	mvnlt	r1, #0
   13064:	movwgt	r1, #1
   13068:	mov	r0, r1
   1306c:	bx	lr
   13070:	cmp	r1, #0
   13074:	mvnne	r1, #0
   13078:	mov	r0, r1
   1307c:	bx	lr

00013080 <table_compare_uint@@Base>:
   13080:	cmp	r0, #0
   13084:	beq	130b8 <table_compare_uint@@Base+0x38>
   13088:	cmp	r1, #0
   1308c:	moveq	r1, #1
   13090:	moveq	r0, r1
   13094:	bxeq	lr
   13098:	ldr	r2, [r1]
   1309c:	ldr	r0, [r0]
   130a0:	mov	r1, #0
   130a4:	cmp	r0, r2
   130a8:	mvncc	r1, #0
   130ac:	movwhi	r1, #1
   130b0:	mov	r0, r1
   130b4:	bx	lr
   130b8:	cmp	r1, #0
   130bc:	mvnne	r1, #0
   130c0:	mov	r0, r1
   130c4:	bx	lr

000130c8 <table_compare_int8@@Base>:
   130c8:	cmp	r0, #0
   130cc:	beq	13100 <table_compare_int8@@Base+0x38>
   130d0:	cmp	r1, #0
   130d4:	moveq	r1, #1
   130d8:	moveq	r0, r1
   130dc:	bxeq	lr
   130e0:	ldrsb	r2, [r1]
   130e4:	ldrsb	r0, [r0]
   130e8:	mov	r1, #0
   130ec:	cmp	r0, r2
   130f0:	mvnlt	r1, #0
   130f4:	movwgt	r1, #1
   130f8:	mov	r0, r1
   130fc:	bx	lr
   13100:	cmp	r1, #0
   13104:	mvnne	r1, #0
   13108:	mov	r0, r1
   1310c:	bx	lr

00013110 <table_compare_uint8@@Base>:
   13110:	cmp	r0, #0
   13114:	beq	13148 <table_compare_uint8@@Base+0x38>
   13118:	cmp	r1, #0
   1311c:	moveq	r1, #1
   13120:	moveq	r0, r1
   13124:	bxeq	lr
   13128:	ldrb	r2, [r1]
   1312c:	ldrb	r0, [r0]
   13130:	mov	r1, #0
   13134:	cmp	r0, r2
   13138:	mvncc	r1, #0
   1313c:	movwhi	r1, #1
   13140:	mov	r0, r1
   13144:	bx	lr
   13148:	cmp	r1, #0
   1314c:	mvnne	r1, #0
   13150:	mov	r0, r1
   13154:	bx	lr

00013158 <table_compare_int16@@Base>:
   13158:	cmp	r0, #0
   1315c:	beq	13190 <table_compare_int16@@Base+0x38>
   13160:	cmp	r1, #0
   13164:	moveq	r1, #1
   13168:	moveq	r0, r1
   1316c:	bxeq	lr
   13170:	ldrsh	r2, [r1]
   13174:	ldrsh	r0, [r0]
   13178:	mov	r1, #0
   1317c:	cmp	r0, r2
   13180:	mvnlt	r1, #0
   13184:	movwgt	r1, #1
   13188:	mov	r0, r1
   1318c:	bx	lr
   13190:	cmp	r1, #0
   13194:	mvnne	r1, #0
   13198:	mov	r0, r1
   1319c:	bx	lr

000131a0 <table_compare_uint16@@Base>:
   131a0:	cmp	r0, #0
   131a4:	beq	131d8 <table_compare_uint16@@Base+0x38>
   131a8:	cmp	r1, #0
   131ac:	moveq	r1, #1
   131b0:	moveq	r0, r1
   131b4:	bxeq	lr
   131b8:	ldrh	r2, [r1]
   131bc:	ldrh	r0, [r0]
   131c0:	mov	r1, #0
   131c4:	cmp	r0, r2
   131c8:	mvncc	r1, #0
   131cc:	movwhi	r1, #1
   131d0:	mov	r0, r1
   131d4:	bx	lr
   131d8:	cmp	r1, #0
   131dc:	mvnne	r1, #0
   131e0:	mov	r0, r1
   131e4:	bx	lr

000131e8 <table_compare_int32@@Base>:
   131e8:	cmp	r0, #0
   131ec:	beq	13220 <table_compare_int32@@Base+0x38>
   131f0:	cmp	r1, #0
   131f4:	moveq	r1, #1
   131f8:	moveq	r0, r1
   131fc:	bxeq	lr
   13200:	ldr	r2, [r1]
   13204:	ldr	r0, [r0]
   13208:	mov	r1, #0
   1320c:	cmp	r0, r2
   13210:	mvnlt	r1, #0
   13214:	movwgt	r1, #1
   13218:	mov	r0, r1
   1321c:	bx	lr
   13220:	cmp	r1, #0
   13224:	mvnne	r1, #0
   13228:	mov	r0, r1
   1322c:	bx	lr

00013230 <table_compare_uint32@@Base>:
   13230:	cmp	r0, #0
   13234:	beq	13268 <table_compare_uint32@@Base+0x38>
   13238:	cmp	r1, #0
   1323c:	moveq	r1, #1
   13240:	moveq	r0, r1
   13244:	bxeq	lr
   13248:	ldr	r2, [r1]
   1324c:	ldr	r0, [r0]
   13250:	mov	r1, #0
   13254:	cmp	r0, r2
   13258:	mvncc	r1, #0
   1325c:	movwhi	r1, #1
   13260:	mov	r0, r1
   13264:	bx	lr
   13268:	cmp	r1, #0
   1326c:	mvnne	r1, #0
   13270:	mov	r0, r1
   13274:	bx	lr

00013278 <table_compare_int64@@Base>:
   13278:	cmp	r0, #0
   1327c:	beq	132d0 <table_compare_int64@@Base+0x58>
   13280:	cmp	r1, #0
   13284:	moveq	r1, #1
   13288:	moveq	r0, r1
   1328c:	bxeq	lr
   13290:	push	{r5, r7, fp, lr}
   13294:	add	fp, sp, #8
   13298:	ldm	r0, {r0, r5}
   1329c:	ldm	r1, {r2, r7}
   132a0:	mov	r1, #0
   132a4:	subs	r3, r0, r2
   132a8:	sbcs	r3, r5, r7
   132ac:	movwlt	r1, #1
   132b0:	cmp	r1, #0
   132b4:	mvnne	r1, #0
   132b8:	subs	r0, r2, r0
   132bc:	sbcs	r0, r7, r5
   132c0:	movwlt	r1, #1
   132c4:	pop	{r5, r7, fp, lr}
   132c8:	mov	r0, r1
   132cc:	bx	lr
   132d0:	cmp	r1, #0
   132d4:	mvnne	r1, #0
   132d8:	mov	r0, r1
   132dc:	bx	lr

000132e0 <table_compare_uint64@@Base>:
   132e0:	cmp	r0, #0
   132e4:	beq	13338 <table_compare_uint64@@Base+0x58>
   132e8:	cmp	r1, #0
   132ec:	moveq	r1, #1
   132f0:	moveq	r0, r1
   132f4:	bxeq	lr
   132f8:	push	{r5, r7, fp, lr}
   132fc:	add	fp, sp, #8
   13300:	ldm	r0, {r0, r5}
   13304:	ldm	r1, {r2, r7}
   13308:	mov	r1, #0
   1330c:	subs	r3, r0, r2
   13310:	sbcs	r3, r5, r7
   13314:	movwcc	r1, #1
   13318:	cmp	r1, #0
   1331c:	mvnne	r1, #0
   13320:	subs	r0, r2, r0
   13324:	sbcs	r0, r7, r5
   13328:	movwcc	r1, #1
   1332c:	pop	{r5, r7, fp, lr}
   13330:	mov	r0, r1
   13334:	bx	lr
   13338:	cmp	r1, #0
   1333c:	mvnne	r1, #0
   13340:	mov	r0, r1
   13344:	bx	lr

00013348 <table_compare_short@@Base>:
   13348:	cmp	r0, #0
   1334c:	beq	13380 <table_compare_short@@Base+0x38>
   13350:	cmp	r1, #0
   13354:	moveq	r1, #1
   13358:	moveq	r0, r1
   1335c:	bxeq	lr
   13360:	ldrsh	r2, [r1]
   13364:	ldrsh	r0, [r0]
   13368:	mov	r1, #0
   1336c:	cmp	r0, r2
   13370:	mvnlt	r1, #0
   13374:	movwgt	r1, #1
   13378:	mov	r0, r1
   1337c:	bx	lr
   13380:	cmp	r1, #0
   13384:	mvnne	r1, #0
   13388:	mov	r0, r1
   1338c:	bx	lr

00013390 <table_compare_ushort@@Base>:
   13390:	cmp	r0, #0
   13394:	beq	133c8 <table_compare_ushort@@Base+0x38>
   13398:	cmp	r1, #0
   1339c:	moveq	r1, #1
   133a0:	moveq	r0, r1
   133a4:	bxeq	lr
   133a8:	ldrh	r2, [r1]
   133ac:	ldrh	r0, [r0]
   133b0:	mov	r1, #0
   133b4:	cmp	r0, r2
   133b8:	mvncc	r1, #0
   133bc:	movwhi	r1, #1
   133c0:	mov	r0, r1
   133c4:	bx	lr
   133c8:	cmp	r1, #0
   133cc:	mvnne	r1, #0
   133d0:	mov	r0, r1
   133d4:	bx	lr

000133d8 <table_compare_long@@Base>:
   133d8:	cmp	r0, #0
   133dc:	beq	13410 <table_compare_long@@Base+0x38>
   133e0:	cmp	r1, #0
   133e4:	moveq	r1, #1
   133e8:	moveq	r0, r1
   133ec:	bxeq	lr
   133f0:	ldr	r2, [r1]
   133f4:	ldr	r0, [r0]
   133f8:	mov	r1, #0
   133fc:	cmp	r0, r2
   13400:	mvnlt	r1, #0
   13404:	movwgt	r1, #1
   13408:	mov	r0, r1
   1340c:	bx	lr
   13410:	cmp	r1, #0
   13414:	mvnne	r1, #0
   13418:	mov	r0, r1
   1341c:	bx	lr

00013420 <table_compare_ulong@@Base>:
   13420:	cmp	r0, #0
   13424:	beq	13458 <table_compare_ulong@@Base+0x38>
   13428:	cmp	r1, #0
   1342c:	moveq	r1, #1
   13430:	moveq	r0, r1
   13434:	bxeq	lr
   13438:	ldr	r2, [r1]
   1343c:	ldr	r0, [r0]
   13440:	mov	r1, #0
   13444:	cmp	r0, r2
   13448:	mvncc	r1, #0
   1344c:	movwhi	r1, #1
   13450:	mov	r0, r1
   13454:	bx	lr
   13458:	cmp	r1, #0
   1345c:	mvnne	r1, #0
   13460:	mov	r0, r1
   13464:	bx	lr

00013468 <table_compare_llong@@Base>:
   13468:	cmp	r0, #0
   1346c:	beq	134c0 <table_compare_llong@@Base+0x58>
   13470:	cmp	r1, #0
   13474:	moveq	r1, #1
   13478:	moveq	r0, r1
   1347c:	bxeq	lr
   13480:	push	{r5, r7, fp, lr}
   13484:	add	fp, sp, #8
   13488:	ldm	r0, {r0, r5}
   1348c:	ldm	r1, {r2, r7}
   13490:	mov	r1, #0
   13494:	subs	r3, r0, r2
   13498:	sbcs	r3, r5, r7
   1349c:	movwlt	r1, #1
   134a0:	cmp	r1, #0
   134a4:	mvnne	r1, #0
   134a8:	subs	r0, r2, r0
   134ac:	sbcs	r0, r7, r5
   134b0:	movwlt	r1, #1
   134b4:	pop	{r5, r7, fp, lr}
   134b8:	mov	r0, r1
   134bc:	bx	lr
   134c0:	cmp	r1, #0
   134c4:	mvnne	r1, #0
   134c8:	mov	r0, r1
   134cc:	bx	lr

000134d0 <table_compare_ullong@@Base>:
   134d0:	cmp	r0, #0
   134d4:	beq	13508 <table_compare_ullong@@Base+0x38>
   134d8:	cmp	r1, #0
   134dc:	moveq	r1, #1
   134e0:	moveq	r0, r1
   134e4:	bxeq	lr
   134e8:	ldr	r2, [r1]
   134ec:	ldr	r0, [r0]
   134f0:	mov	r1, #0
   134f4:	cmp	r0, r2
   134f8:	mvncc	r1, #0
   134fc:	movwhi	r1, #1
   13500:	mov	r0, r1
   13504:	bx	lr
   13508:	cmp	r1, #0
   1350c:	mvnne	r1, #0
   13510:	mov	r0, r1
   13514:	bx	lr

00013518 <table_compare_float@@Base>:
   13518:	cmp	r0, #0
   1351c:	beq	13554 <table_compare_float@@Base+0x3c>
   13520:	cmp	r1, #0
   13524:	moveq	r1, #1
   13528:	moveq	r0, r1
   1352c:	bxeq	lr
   13530:	vldr	s0, [r1]
   13534:	vldr	s2, [r0]
   13538:	mov	r1, #0
   1353c:	vcmpe.f32	s2, s0
   13540:	vmrs	APSR_nzcv, fpscr
   13544:	mvnmi	r1, #0
   13548:	movwgt	r1, #1
   1354c:	mov	r0, r1
   13550:	bx	lr
   13554:	cmp	r1, #0
   13558:	mvnne	r1, #0
   1355c:	mov	r0, r1
   13560:	bx	lr

00013564 <table_compare_double@@Base>:
   13564:	cmp	r0, #0
   13568:	beq	135a0 <table_compare_double@@Base+0x3c>
   1356c:	cmp	r1, #0
   13570:	moveq	r1, #1
   13574:	moveq	r0, r1
   13578:	bxeq	lr
   1357c:	vldr	d16, [r1]
   13580:	vldr	d17, [r0]
   13584:	mov	r1, #0
   13588:	vcmpe.f64	d17, d16
   1358c:	vmrs	APSR_nzcv, fpscr
   13590:	mvnmi	r1, #0
   13594:	movwgt	r1, #1
   13598:	mov	r0, r1
   1359c:	bx	lr
   135a0:	cmp	r1, #0
   135a4:	mvnne	r1, #0
   135a8:	mov	r0, r1
   135ac:	bx	lr

000135b0 <table_compare_ldouble@@Base>:
   135b0:	cmp	r0, #0
   135b4:	beq	135ec <table_compare_ldouble@@Base+0x3c>
   135b8:	cmp	r1, #0
   135bc:	moveq	r1, #1
   135c0:	moveq	r0, r1
   135c4:	bxeq	lr
   135c8:	vldr	d16, [r1]
   135cc:	vldr	d17, [r0]
   135d0:	mov	r1, #0
   135d4:	vcmpe.f64	d17, d16
   135d8:	vmrs	APSR_nzcv, fpscr
   135dc:	mvnmi	r1, #0
   135e0:	movwgt	r1, #1
   135e4:	mov	r0, r1
   135e8:	bx	lr
   135ec:	cmp	r1, #0
   135f0:	mvnne	r1, #0
   135f4:	mov	r0, r1
   135f8:	bx	lr

000135fc <table_compare_char@@Base>:
   135fc:	cmp	r0, #0
   13600:	beq	13634 <table_compare_char@@Base+0x38>
   13604:	cmp	r1, #0
   13608:	moveq	r1, #1
   1360c:	moveq	r0, r1
   13610:	bxeq	lr
   13614:	ldrb	r2, [r1]
   13618:	ldrb	r0, [r0]
   1361c:	mov	r1, #0
   13620:	cmp	r0, r2
   13624:	mvncc	r1, #0
   13628:	movwhi	r1, #1
   1362c:	mov	r0, r1
   13630:	bx	lr
   13634:	cmp	r1, #0
   13638:	mvnne	r1, #0
   1363c:	mov	r0, r1
   13640:	bx	lr

00013644 <table_compare_uchar@@Base>:
   13644:	cmp	r0, #0
   13648:	beq	1367c <table_compare_uchar@@Base+0x38>
   1364c:	cmp	r1, #0
   13650:	moveq	r1, #1
   13654:	moveq	r0, r1
   13658:	bxeq	lr
   1365c:	ldrb	r2, [r1]
   13660:	ldrb	r0, [r0]
   13664:	mov	r1, #0
   13668:	cmp	r0, r2
   1366c:	mvncc	r1, #0
   13670:	movwhi	r1, #1
   13674:	mov	r0, r1
   13678:	bx	lr
   1367c:	cmp	r1, #0
   13680:	mvnne	r1, #0
   13684:	mov	r0, r1
   13688:	bx	lr

0001368c <table_compare_string@@Base>:
   1368c:	cmp	r0, #0
   13690:	beq	136a8 <table_compare_string@@Base+0x1c>
   13694:	cmp	r1, #0
   13698:	moveq	r1, #1
   1369c:	moveq	r0, r1
   136a0:	bxeq	lr
   136a4:	b	11e90 <strcmp@plt>
   136a8:	cmp	r1, #0
   136ac:	mvnne	r1, #0
   136b0:	mov	r0, r1
   136b4:	bx	lr

000136b8 <table_compare_ptr@@Base>:
   136b8:	cmp	r0, r1
   136bc:	mov	r2, #0
   136c0:	mvncc	r2, #0
   136c4:	movwhi	r2, #1
   136c8:	mov	r0, r2
   136cc:	bx	lr

000136d0 <table_get_default_compare_function_for_data_type@@Base>:
   136d0:	cmp	r0, #23
   136d4:	movhi	r0, #0
   136d8:	bxhi	lr
   136dc:	movw	r1, #22100	; 0x5654
   136e0:	movt	r1, #1
   136e4:	ldr	r0, [r1, r0, lsl #2]
   136e8:	bx	lr

000136ec <table_get@@Base>:
   136ec:	push	{fp, lr}
   136f0:	mov	fp, sp
   136f4:	bl	14b38 <table_get_cell_ptr@@Base>
   136f8:	ldr	r0, [r0]
   136fc:	pop	{fp, pc}

00013700 <table_get_bool@@Base>:
   13700:	push	{fp, lr}
   13704:	mov	fp, sp
   13708:	bl	14b38 <table_get_cell_ptr@@Base>
   1370c:	ldr	r0, [r0]
   13710:	ldrb	r0, [r0]
   13714:	pop	{fp, pc}

00013718 <table_get_int@@Base>:
   13718:	push	{fp, lr}
   1371c:	mov	fp, sp
   13720:	bl	14b38 <table_get_cell_ptr@@Base>
   13724:	ldr	r0, [r0]
   13728:	ldr	r0, [r0]
   1372c:	pop	{fp, pc}

00013730 <table_get_uint@@Base>:
   13730:	push	{fp, lr}
   13734:	mov	fp, sp
   13738:	bl	14b38 <table_get_cell_ptr@@Base>
   1373c:	ldr	r0, [r0]
   13740:	ldr	r0, [r0]
   13744:	pop	{fp, pc}

00013748 <table_get_int8@@Base>:
   13748:	push	{fp, lr}
   1374c:	mov	fp, sp
   13750:	bl	14b38 <table_get_cell_ptr@@Base>
   13754:	ldr	r0, [r0]
   13758:	ldrsb	r0, [r0]
   1375c:	pop	{fp, pc}

00013760 <table_get_uint8@@Base>:
   13760:	push	{fp, lr}
   13764:	mov	fp, sp
   13768:	bl	14b38 <table_get_cell_ptr@@Base>
   1376c:	ldr	r0, [r0]
   13770:	ldrb	r0, [r0]
   13774:	pop	{fp, pc}

00013778 <table_get_int16@@Base>:
   13778:	push	{fp, lr}
   1377c:	mov	fp, sp
   13780:	bl	14b38 <table_get_cell_ptr@@Base>
   13784:	ldr	r0, [r0]
   13788:	ldrsh	r0, [r0]
   1378c:	pop	{fp, pc}

00013790 <table_get_uint16@@Base>:
   13790:	push	{fp, lr}
   13794:	mov	fp, sp
   13798:	bl	14b38 <table_get_cell_ptr@@Base>
   1379c:	ldr	r0, [r0]
   137a0:	ldrh	r0, [r0]
   137a4:	pop	{fp, pc}

000137a8 <table_get_int32@@Base>:
   137a8:	push	{fp, lr}
   137ac:	mov	fp, sp
   137b0:	bl	14b38 <table_get_cell_ptr@@Base>
   137b4:	ldr	r0, [r0]
   137b8:	ldr	r0, [r0]
   137bc:	pop	{fp, pc}

000137c0 <table_get_uint32@@Base>:
   137c0:	push	{fp, lr}
   137c4:	mov	fp, sp
   137c8:	bl	14b38 <table_get_cell_ptr@@Base>
   137cc:	ldr	r0, [r0]
   137d0:	ldr	r0, [r0]
   137d4:	pop	{fp, pc}

000137d8 <table_get_int64@@Base>:
   137d8:	push	{fp, lr}
   137dc:	mov	fp, sp
   137e0:	bl	14b38 <table_get_cell_ptr@@Base>
   137e4:	ldr	r0, [r0]
   137e8:	ldrd	r0, [r0]
   137ec:	pop	{fp, pc}

000137f0 <table_get_uint64@@Base>:
   137f0:	push	{fp, lr}
   137f4:	mov	fp, sp
   137f8:	bl	14b38 <table_get_cell_ptr@@Base>
   137fc:	ldr	r0, [r0]
   13800:	ldrd	r0, [r0]
   13804:	pop	{fp, pc}

00013808 <table_get_short@@Base>:
   13808:	push	{fp, lr}
   1380c:	mov	fp, sp
   13810:	bl	14b38 <table_get_cell_ptr@@Base>
   13814:	ldr	r0, [r0]
   13818:	ldrsh	r0, [r0]
   1381c:	pop	{fp, pc}

00013820 <table_get_ushort@@Base>:
   13820:	push	{fp, lr}
   13824:	mov	fp, sp
   13828:	bl	14b38 <table_get_cell_ptr@@Base>
   1382c:	ldr	r0, [r0]
   13830:	ldrh	r0, [r0]
   13834:	pop	{fp, pc}

00013838 <table_get_long@@Base>:
   13838:	push	{fp, lr}
   1383c:	mov	fp, sp
   13840:	bl	14b38 <table_get_cell_ptr@@Base>
   13844:	ldr	r0, [r0]
   13848:	ldr	r0, [r0]
   1384c:	pop	{fp, pc}

00013850 <table_get_ulong@@Base>:
   13850:	push	{fp, lr}
   13854:	mov	fp, sp
   13858:	bl	14b38 <table_get_cell_ptr@@Base>
   1385c:	ldr	r0, [r0]
   13860:	ldr	r0, [r0]
   13864:	pop	{fp, pc}

00013868 <table_get_llong@@Base>:
   13868:	push	{fp, lr}
   1386c:	mov	fp, sp
   13870:	bl	14b38 <table_get_cell_ptr@@Base>
   13874:	ldr	r0, [r0]
   13878:	ldrd	r0, [r0]
   1387c:	pop	{fp, pc}

00013880 <table_get_ullong@@Base>:
   13880:	push	{fp, lr}
   13884:	mov	fp, sp
   13888:	bl	14b38 <table_get_cell_ptr@@Base>
   1388c:	ldr	r0, [r0]
   13890:	ldrd	r0, [r0]
   13894:	pop	{fp, pc}

00013898 <table_get_float@@Base>:
   13898:	push	{fp, lr}
   1389c:	mov	fp, sp
   138a0:	bl	14b38 <table_get_cell_ptr@@Base>
   138a4:	ldr	r0, [r0]
   138a8:	vldr	s0, [r0]
   138ac:	pop	{fp, pc}

000138b0 <table_get_double@@Base>:
   138b0:	push	{fp, lr}
   138b4:	mov	fp, sp
   138b8:	bl	14b38 <table_get_cell_ptr@@Base>
   138bc:	ldr	r0, [r0]
   138c0:	vldr	d0, [r0]
   138c4:	pop	{fp, pc}

000138c8 <table_get_ldouble@@Base>:
   138c8:	push	{fp, lr}
   138cc:	mov	fp, sp
   138d0:	bl	14b38 <table_get_cell_ptr@@Base>
   138d4:	ldr	r0, [r0]
   138d8:	vldr	d0, [r0]
   138dc:	pop	{fp, pc}

000138e0 <table_get_char@@Base>:
   138e0:	push	{fp, lr}
   138e4:	mov	fp, sp
   138e8:	bl	14b38 <table_get_cell_ptr@@Base>
   138ec:	ldr	r0, [r0]
   138f0:	ldrb	r0, [r0]
   138f4:	pop	{fp, pc}

000138f8 <table_get_uchar@@Base>:
   138f8:	push	{fp, lr}
   138fc:	mov	fp, sp
   13900:	bl	14b38 <table_get_cell_ptr@@Base>
   13904:	ldr	r0, [r0]
   13908:	ldrb	r0, [r0]
   1390c:	pop	{fp, pc}

00013910 <table_get_string@@Base>:
   13910:	push	{fp, lr}
   13914:	mov	fp, sp
   13918:	bl	14b38 <table_get_cell_ptr@@Base>
   1391c:	ldr	r0, [r0]
   13920:	pop	{fp, pc}

00013924 <table_get_ptr@@Base>:
   13924:	push	{fp, lr}
   13928:	mov	fp, sp
   1392c:	bl	14b38 <table_get_cell_ptr@@Base>
   13930:	ldr	r0, [r0]
   13934:	pop	{fp, pc}

00013938 <table_row_init@@Base>:
   13938:	push	{r4, r5, fp, lr}
   1393c:	add	fp, sp, #8
   13940:	mov	r4, r1
   13944:	ldr	r1, [r0, #12]
   13948:	ldr	r5, [r0, #16]
   1394c:	lsl	r0, r1, #2
   13950:	bl	11ecc <malloc@plt>
   13954:	str	r0, [r5, r4, lsl #2]
   13958:	pop	{r4, r5, fp, pc}

0001395c <table_get_row_ptr@@Base>:
   1395c:	ldr	r0, [r0, #16]
   13960:	add	r0, r0, r1, lsl #2
   13964:	bx	lr

00013968 <table_row_destroy@@Base>:
   13968:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1396c:	add	fp, sp, #24
   13970:	mov	r4, r1
   13974:	mov	r5, r0
   13978:	bl	12bec <table_get_column_length@@Base>
   1397c:	ldr	r8, [r5, #16]
   13980:	cmp	r0, #1
   13984:	blt	139ac <table_row_destroy@@Base+0x44>
   13988:	mov	r6, r0
   1398c:	mov	r7, #0
   13990:	mov	r0, r5
   13994:	mov	r1, r4
   13998:	mov	r2, r7
   1399c:	bl	14b54 <table_cell_destroy@@Base>
   139a0:	add	r7, r7, #1
   139a4:	cmp	r6, r7
   139a8:	bne	13990 <table_row_destroy@@Base+0x28>
   139ac:	ldr	r0, [r8, r4, lsl #2]
   139b0:	cmp	r0, #0
   139b4:	beq	139c0 <table_row_destroy@@Base+0x58>
   139b8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   139bc:	b	11ea8 <free@plt>
   139c0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000139c4 <table_get_row_length@@Base>:
   139c4:	ldr	r0, [r0, #20]
   139c8:	bx	lr

000139cc <table_add_row@@Base>:
   139cc:	push	{r4, r5, r6, r7, fp, lr}
   139d0:	add	fp, sp, #16
   139d4:	ldr	r5, [r0, #20]
   139d8:	ldr	r1, [r0, #24]
   139dc:	mov	r4, r0
   139e0:	udiv	r0, r5, r1
   139e4:	mls	r0, r0, r1, r5
   139e8:	cmp	r0, #0
   139ec:	bne	13a10 <table_add_row@@Base+0x44>
   139f0:	ldr	r2, [r4, #28]
   139f4:	ldr	r0, [r4, #16]
   139f8:	add	r1, r2, r1
   139fc:	str	r1, [r4, #28]
   13a00:	lsl	r1, r1, #2
   13a04:	bl	11eb4 <realloc@plt>
   13a08:	str	r0, [r4, #16]
   13a0c:	ldr	r5, [r4, #20]
   13a10:	mov	r0, r4
   13a14:	bl	12bec <table_get_column_length@@Base>
   13a18:	mov	r6, r0
   13a1c:	ldr	r0, [r4, #12]
   13a20:	ldr	r7, [r4, #16]
   13a24:	lsl	r0, r0, #2
   13a28:	bl	11ecc <malloc@plt>
   13a2c:	cmp	r6, #1
   13a30:	str	r0, [r7, r5, lsl #2]
   13a34:	blt	13a58 <table_add_row@@Base+0x8c>
   13a38:	mov	r7, #0
   13a3c:	mov	r0, r4
   13a40:	mov	r1, r5
   13a44:	mov	r2, r7
   13a48:	bl	14b18 <table_cell_init@@Base>
   13a4c:	add	r7, r7, #1
   13a50:	cmp	r6, r7
   13a54:	bne	13a3c <table_add_row@@Base+0x70>
   13a58:	ldr	r1, [r4, #20]
   13a5c:	mov	r0, r4
   13a60:	mvn	r2, #0
   13a64:	mov	r3, #2
   13a68:	bl	12adc <table_notify@@Base>
   13a6c:	ldr	r0, [r4, #20]
   13a70:	add	r1, r0, #1
   13a74:	str	r1, [r4, #20]
   13a78:	pop	{r4, r5, r6, r7, fp, pc}

00013a7c <table_remove_row@@Base>:
   13a7c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13a80:	add	fp, sp, #24
   13a84:	ldr	r8, [r0, #20]
   13a88:	mov	r4, r1
   13a8c:	mov	r5, r0
   13a90:	bl	12bec <table_get_column_length@@Base>
   13a94:	cmp	r0, #1
   13a98:	blt	13aec <table_remove_row@@Base+0x70>
   13a9c:	mov	r6, r0
   13aa0:	mov	r7, #0
   13aa4:	b	13ab4 <table_remove_row@@Base+0x38>
   13aa8:	add	r7, r7, #1
   13aac:	cmp	r6, r7
   13ab0:	beq	13aec <table_remove_row@@Base+0x70>
   13ab4:	mov	r0, r5
   13ab8:	mov	r1, r7
   13abc:	bl	12c70 <table_get_column_data_type@@Base>
   13ac0:	cmp	r0, #23
   13ac4:	beq	13aa8 <table_remove_row@@Base+0x2c>
   13ac8:	mov	r0, r5
   13acc:	mov	r1, r4
   13ad0:	mov	r2, r7
   13ad4:	bl	14b38 <table_get_cell_ptr@@Base>
   13ad8:	ldr	r0, [r0]
   13adc:	cmp	r0, #0
   13ae0:	beq	13aa8 <table_remove_row@@Base+0x2c>
   13ae4:	bl	11ea8 <free@plt>
   13ae8:	b	13aa8 <table_remove_row@@Base+0x2c>
   13aec:	ldr	r0, [r5, #16]
   13af0:	ldr	r0, [r0, r4, lsl #2]
   13af4:	cmp	r0, #0
   13af8:	beq	13b00 <table_remove_row@@Base+0x84>
   13afc:	bl	11ea8 <free@plt>
   13b00:	sub	r0, r8, #1
   13b04:	cmp	r0, r4
   13b08:	ble	13b78 <table_remove_row@@Base+0xfc>
   13b0c:	mvn	r0, r4
   13b10:	add	r1, r8, r0
   13b14:	sub	r0, r8, #2
   13b18:	tst	r1, #1
   13b1c:	mov	r1, r4
   13b20:	beq	13b38 <table_remove_row@@Base+0xbc>
   13b24:	ldr	r1, [r5, #16]
   13b28:	add	r2, r1, r4, lsl #2
   13b2c:	ldr	r2, [r2, #4]
   13b30:	str	r2, [r1, r4, lsl #2]
   13b34:	add	r1, r4, #1
   13b38:	cmp	r0, r4
   13b3c:	beq	13b78 <table_remove_row@@Base+0xfc>
   13b40:	mvn	r0, r1
   13b44:	lsl	r1, r1, #2
   13b48:	add	r0, r0, r8
   13b4c:	ldr	r2, [r5, #16]
   13b50:	subs	r0, r0, #2
   13b54:	add	r3, r2, r1
   13b58:	ldr	r3, [r3, #4]
   13b5c:	str	r3, [r2, r1]
   13b60:	ldr	r2, [r5, #16]
   13b64:	add	r2, r2, r1
   13b68:	add	r1, r1, #8
   13b6c:	ldr	r3, [r2, #8]
   13b70:	str	r3, [r2, #4]
   13b74:	bne	13b4c <table_remove_row@@Base+0xd0>
   13b78:	ldr	r0, [r5, #20]
   13b7c:	ldr	r1, [r5, #24]
   13b80:	sub	r0, r0, #1
   13b84:	udiv	r2, r0, r1
   13b88:	str	r0, [r5, #20]
   13b8c:	mls	r0, r2, r1, r0
   13b90:	cmp	r0, #0
   13b94:	bne	13bb4 <table_remove_row@@Base+0x138>
   13b98:	ldr	r2, [r5, #28]
   13b9c:	ldr	r0, [r5, #16]
   13ba0:	sub	r1, r2, r1
   13ba4:	str	r1, [r5, #28]
   13ba8:	lsl	r1, r1, #2
   13bac:	bl	11eb4 <realloc@plt>
   13bb0:	str	r0, [r5, #16]
   13bb4:	mov	r0, r5
   13bb8:	mov	r1, r4
   13bbc:	mvn	r2, #0
   13bc0:	mov	r3, #4
   13bc4:	bl	12adc <table_notify@@Base>
   13bc8:	mov	r0, #0
   13bcc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013bd0 <table_set_row_ptr@@Base>:
   13bd0:	ldr	r2, [r2]
   13bd4:	ldr	r0, [r0, #16]
   13bd8:	str	r2, [r0, r1, lsl #2]
   13bdc:	bx	lr

00013be0 <table_set@@Base>:
   13be0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13be4:	add	fp, sp, #24
   13be8:	mov	r8, r3
   13bec:	mov	r4, r2
   13bf0:	mov	r9, r1
   13bf4:	mov	r6, r0
   13bf8:	bl	14b38 <table_get_cell_ptr@@Base>
   13bfc:	mov	r5, r0
   13c00:	mov	r0, r6
   13c04:	mov	r1, r4
   13c08:	bl	12bc4 <table_get_col_ptr@@Base>
   13c0c:	ldr	r1, [fp, #8]
   13c10:	mvn	r7, #0
   13c14:	cmp	r1, #23
   13c18:	bhi	13edc <table_set@@Base+0x2fc>
   13c1c:	add	r2, pc, #0
   13c20:	ldr	pc, [r2, r1, lsl #2]
   13c24:	andeq	r3, r1, r4, lsl #25
   13c28:	muleq	r1, r4, ip
   13c2c:	andeq	r3, r1, r4, lsr #25
   13c30:			; <UNDEFINED> instruction: 0x00013cb4
   13c34:	andeq	r3, r1, r4, asr #25
   13c38:	ldrdeq	r3, [r1], -r4
   13c3c:	andeq	r3, r1, r4, ror #25
   13c40:	strdeq	r3, [r1], -r4
   13c44:	andeq	r3, r1, r4, lsl #26
   13c48:	andeq	r3, r1, r4, lsl sp
   13c4c:	andeq	r3, r1, r4, lsr #26
   13c50:	andeq	r3, r1, r4, lsr sp
   13c54:	andeq	r3, r1, ip, ror #26
   13c58:	andeq	r3, r1, ip, ror sp
   13c5c:	andeq	r3, r1, ip, lsl #27
   13c60:	muleq	r1, ip, sp
   13c64:	andeq	r3, r1, ip, lsr #27
   13c68:	andeq	r3, r1, r4, ror #27
   13c6c:	strdeq	r3, [r1], -r4
   13c70:	andeq	r3, r1, r4, lsr lr
   13c74:	andeq	r3, r1, r4, asr #28
   13c78:	andeq	r3, r1, r4, asr lr
   13c7c:	muleq	r1, r0, lr
   13c80:	andeq	r3, r1, r4, ror #29
   13c84:	ldr	r0, [r0, #4]
   13c88:	cmp	r0, #0
   13c8c:	bne	13edc <table_set@@Base+0x2fc>
   13c90:	b	13db8 <table_set@@Base+0x1d8>
   13c94:	ldr	r0, [r0, #4]
   13c98:	cmp	r0, #1
   13c9c:	beq	13db8 <table_set@@Base+0x1d8>
   13ca0:	b	13edc <table_set@@Base+0x2fc>
   13ca4:	ldr	r0, [r0, #4]
   13ca8:	cmp	r0, #2
   13cac:	beq	13e9c <table_set@@Base+0x2bc>
   13cb0:	b	13edc <table_set@@Base+0x2fc>
   13cb4:	ldr	r0, [r0, #4]
   13cb8:	cmp	r0, #3
   13cbc:	beq	13e9c <table_set@@Base+0x2bc>
   13cc0:	b	13edc <table_set@@Base+0x2fc>
   13cc4:	ldr	r0, [r0, #4]
   13cc8:	cmp	r0, #4
   13ccc:	beq	13d40 <table_set@@Base+0x160>
   13cd0:	b	13edc <table_set@@Base+0x2fc>
   13cd4:	ldr	r0, [r0, #4]
   13cd8:	cmp	r0, #5
   13cdc:	beq	13d40 <table_set@@Base+0x160>
   13ce0:	b	13edc <table_set@@Base+0x2fc>
   13ce4:	ldr	r0, [r0, #4]
   13ce8:	cmp	r0, #6
   13cec:	beq	13db8 <table_set@@Base+0x1d8>
   13cf0:	b	13edc <table_set@@Base+0x2fc>
   13cf4:	ldr	r0, [r0, #4]
   13cf8:	cmp	r0, #7
   13cfc:	beq	13db8 <table_set@@Base+0x1d8>
   13d00:	b	13edc <table_set@@Base+0x2fc>
   13d04:	ldr	r0, [r0, #4]
   13d08:	cmp	r0, #8
   13d0c:	beq	13e00 <table_set@@Base+0x220>
   13d10:	b	13edc <table_set@@Base+0x2fc>
   13d14:	ldr	r0, [r0, #4]
   13d18:	cmp	r0, #9
   13d1c:	beq	13e00 <table_set@@Base+0x220>
   13d20:	b	13edc <table_set@@Base+0x2fc>
   13d24:	ldr	r0, [r0, #4]
   13d28:	cmp	r0, #10
   13d2c:	beq	13d40 <table_set@@Base+0x160>
   13d30:	b	13edc <table_set@@Base+0x2fc>
   13d34:	ldr	r0, [r0, #4]
   13d38:	cmp	r0, #11
   13d3c:	bne	13edc <table_set@@Base+0x2fc>
   13d40:	ldr	r0, [r5]
   13d44:	cmp	r0, #0
   13d48:	bne	13d60 <table_set@@Base+0x180>
   13d4c:	mov	r0, #2
   13d50:	bl	11ecc <malloc@plt>
   13d54:	cmp	r0, #0
   13d58:	str	r0, [r5]
   13d5c:	beq	13edc <table_set@@Base+0x2fc>
   13d60:	ldrh	r1, [r8]
   13d64:	strh	r1, [r0]
   13d68:	b	13ec4 <table_set@@Base+0x2e4>
   13d6c:	ldr	r0, [r0, #4]
   13d70:	cmp	r0, #12
   13d74:	beq	13db8 <table_set@@Base+0x1d8>
   13d78:	b	13edc <table_set@@Base+0x2fc>
   13d7c:	ldr	r0, [r0, #4]
   13d80:	cmp	r0, #13
   13d84:	beq	13db8 <table_set@@Base+0x1d8>
   13d88:	b	13edc <table_set@@Base+0x2fc>
   13d8c:	ldr	r0, [r0, #4]
   13d90:	cmp	r0, #14
   13d94:	beq	13e00 <table_set@@Base+0x220>
   13d98:	b	13edc <table_set@@Base+0x2fc>
   13d9c:	ldr	r0, [r0, #4]
   13da0:	cmp	r0, #15
   13da4:	beq	13e00 <table_set@@Base+0x220>
   13da8:	b	13edc <table_set@@Base+0x2fc>
   13dac:	ldr	r0, [r0, #4]
   13db0:	cmp	r0, #16
   13db4:	bne	13edc <table_set@@Base+0x2fc>
   13db8:	ldr	r0, [r5]
   13dbc:	cmp	r0, #0
   13dc0:	bne	13dd8 <table_set@@Base+0x1f8>
   13dc4:	mov	r0, #4
   13dc8:	bl	11ecc <malloc@plt>
   13dcc:	cmp	r0, #0
   13dd0:	str	r0, [r5]
   13dd4:	beq	13edc <table_set@@Base+0x2fc>
   13dd8:	ldr	r1, [r8]
   13ddc:	str	r1, [r0]
   13de0:	b	13ec4 <table_set@@Base+0x2e4>
   13de4:	ldr	r0, [r0, #4]
   13de8:	cmp	r0, #17
   13dec:	beq	13e00 <table_set@@Base+0x220>
   13df0:	b	13edc <table_set@@Base+0x2fc>
   13df4:	ldr	r0, [r0, #4]
   13df8:	cmp	r0, #18
   13dfc:	bne	13edc <table_set@@Base+0x2fc>
   13e00:	ldr	r0, [r5]
   13e04:	cmp	r0, #0
   13e08:	bne	13e20 <table_set@@Base+0x240>
   13e0c:	mov	r0, #8
   13e10:	bl	11ecc <malloc@plt>
   13e14:	cmp	r0, #0
   13e18:	str	r0, [r5]
   13e1c:	beq	13edc <table_set@@Base+0x2fc>
   13e20:	ldr	r1, [r8]
   13e24:	ldr	r2, [r8, #4]
   13e28:	str	r2, [r0, #4]
   13e2c:	str	r1, [r0]
   13e30:	b	13ec4 <table_set@@Base+0x2e4>
   13e34:	ldr	r0, [r0, #4]
   13e38:	cmp	r0, #19
   13e3c:	beq	13e9c <table_set@@Base+0x2bc>
   13e40:	b	13edc <table_set@@Base+0x2fc>
   13e44:	ldr	r0, [r0, #4]
   13e48:	cmp	r0, #20
   13e4c:	beq	13e9c <table_set@@Base+0x2bc>
   13e50:	b	13edc <table_set@@Base+0x2fc>
   13e54:	ldr	r0, [r0, #4]
   13e58:	cmp	r0, #21
   13e5c:	bne	13edc <table_set@@Base+0x2fc>
   13e60:	mov	r0, r8
   13e64:	bl	11ef0 <strlen@plt>
   13e68:	ldr	r2, [r5]
   13e6c:	add	r1, r0, #1
   13e70:	mov	r0, r2
   13e74:	bl	11eb4 <realloc@plt>
   13e78:	cmp	r0, #0
   13e7c:	str	r0, [r5]
   13e80:	beq	13edc <table_set@@Base+0x2fc>
   13e84:	mov	r1, r8
   13e88:	bl	11ec0 <strcpy@plt>
   13e8c:	b	13ec4 <table_set@@Base+0x2e4>
   13e90:	ldr	r0, [r0, #4]
   13e94:	cmp	r0, #22
   13e98:	bne	13edc <table_set@@Base+0x2fc>
   13e9c:	ldr	r0, [r5]
   13ea0:	cmp	r0, #0
   13ea4:	bne	13ebc <table_set@@Base+0x2dc>
   13ea8:	mov	r0, #1
   13eac:	bl	11ecc <malloc@plt>
   13eb0:	cmp	r0, #0
   13eb4:	str	r0, [r5]
   13eb8:	beq	13edc <table_set@@Base+0x2fc>
   13ebc:	ldrb	r1, [r8]
   13ec0:	strb	r1, [r0]
   13ec4:	mov	r0, r6
   13ec8:	mov	r1, r9
   13ecc:	mov	r2, r4
   13ed0:	mov	r3, #1
   13ed4:	bl	12adc <table_notify@@Base>
   13ed8:	mov	r7, #0
   13edc:	mov	r0, r7
   13ee0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13ee4:	ldr	r0, [r0, #4]
   13ee8:	cmp	r0, #23
   13eec:	bne	13edc <table_set@@Base+0x2fc>
   13ef0:	str	r8, [r5]
   13ef4:	b	13ec4 <table_set@@Base+0x2e4>

00013ef8 <table_set_bool@@Base>:
   13ef8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13efc:	add	fp, sp, #24
   13f00:	mov	r8, r3
   13f04:	mov	r4, r2
   13f08:	mov	r9, r1
   13f0c:	mov	r6, r0
   13f10:	bl	14b38 <table_get_cell_ptr@@Base>
   13f14:	mov	r5, r0
   13f18:	mov	r0, r6
   13f1c:	mov	r1, r4
   13f20:	bl	12bc4 <table_get_col_ptr@@Base>
   13f24:	ldr	r0, [r0, #4]
   13f28:	mvn	r7, #0
   13f2c:	cmp	r0, #22
   13f30:	bne	13f70 <table_set_bool@@Base+0x78>
   13f34:	ldr	r0, [r5]
   13f38:	cmp	r0, #0
   13f3c:	bne	13f54 <table_set_bool@@Base+0x5c>
   13f40:	mov	r0, #1
   13f44:	bl	11ecc <malloc@plt>
   13f48:	cmp	r0, #0
   13f4c:	str	r0, [r5]
   13f50:	beq	13f70 <table_set_bool@@Base+0x78>
   13f54:	strb	r8, [r0]
   13f58:	mov	r0, r6
   13f5c:	mov	r1, r9
   13f60:	mov	r2, r4
   13f64:	mov	r3, #1
   13f68:	bl	12adc <table_notify@@Base>
   13f6c:	mov	r7, #0
   13f70:	mov	r0, r7
   13f74:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013f78 <table_set_int@@Base>:
   13f78:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13f7c:	add	fp, sp, #24
   13f80:	mov	r8, r3
   13f84:	mov	r4, r2
   13f88:	mov	r5, r1
   13f8c:	mov	r6, r0
   13f90:	bl	14b38 <table_get_cell_ptr@@Base>
   13f94:	mov	r9, r0
   13f98:	mov	r0, r6
   13f9c:	mov	r1, r4
   13fa0:	bl	12bc4 <table_get_col_ptr@@Base>
   13fa4:	ldr	r0, [r0, #4]
   13fa8:	mvn	r7, #0
   13fac:	cmp	r0, #0
   13fb0:	bne	13ff0 <table_set_int@@Base+0x78>
   13fb4:	ldr	r0, [r9]
   13fb8:	cmp	r0, #0
   13fbc:	bne	13fd4 <table_set_int@@Base+0x5c>
   13fc0:	mov	r0, #4
   13fc4:	bl	11ecc <malloc@plt>
   13fc8:	cmp	r0, #0
   13fcc:	str	r0, [r9]
   13fd0:	beq	13ff0 <table_set_int@@Base+0x78>
   13fd4:	str	r8, [r0]
   13fd8:	mov	r0, r6
   13fdc:	mov	r1, r5
   13fe0:	mov	r2, r4
   13fe4:	mov	r3, #1
   13fe8:	bl	12adc <table_notify@@Base>
   13fec:	mov	r7, #0
   13ff0:	mov	r0, r7
   13ff4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013ff8 <table_set_uint@@Base>:
   13ff8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13ffc:	add	fp, sp, #24
   14000:	mov	r8, r3
   14004:	mov	r4, r2
   14008:	mov	r5, r1
   1400c:	mov	r6, r0
   14010:	bl	14b38 <table_get_cell_ptr@@Base>
   14014:	mov	r9, r0
   14018:	mov	r0, r6
   1401c:	mov	r1, r4
   14020:	bl	12bc4 <table_get_col_ptr@@Base>
   14024:	ldr	r0, [r0, #4]
   14028:	mvn	r7, #0
   1402c:	cmp	r0, #1
   14030:	bne	14070 <table_set_uint@@Base+0x78>
   14034:	ldr	r0, [r9]
   14038:	cmp	r0, #0
   1403c:	bne	14054 <table_set_uint@@Base+0x5c>
   14040:	mov	r0, #4
   14044:	bl	11ecc <malloc@plt>
   14048:	cmp	r0, #0
   1404c:	str	r0, [r9]
   14050:	beq	14070 <table_set_uint@@Base+0x78>
   14054:	str	r8, [r0]
   14058:	mov	r0, r6
   1405c:	mov	r1, r5
   14060:	mov	r2, r4
   14064:	mov	r3, #1
   14068:	bl	12adc <table_notify@@Base>
   1406c:	mov	r7, #0
   14070:	mov	r0, r7
   14074:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014078 <table_set_int8@@Base>:
   14078:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1407c:	add	fp, sp, #24
   14080:	mov	r8, r3
   14084:	mov	r4, r2
   14088:	mov	r9, r1
   1408c:	mov	r6, r0
   14090:	bl	14b38 <table_get_cell_ptr@@Base>
   14094:	mov	r5, r0
   14098:	mov	r0, r6
   1409c:	mov	r1, r4
   140a0:	bl	12bc4 <table_get_col_ptr@@Base>
   140a4:	ldr	r0, [r0, #4]
   140a8:	mvn	r7, #0
   140ac:	cmp	r0, #2
   140b0:	bne	140f0 <table_set_int8@@Base+0x78>
   140b4:	ldr	r0, [r5]
   140b8:	cmp	r0, #0
   140bc:	bne	140d4 <table_set_int8@@Base+0x5c>
   140c0:	mov	r0, #1
   140c4:	bl	11ecc <malloc@plt>
   140c8:	cmp	r0, #0
   140cc:	str	r0, [r5]
   140d0:	beq	140f0 <table_set_int8@@Base+0x78>
   140d4:	strb	r8, [r0]
   140d8:	mov	r0, r6
   140dc:	mov	r1, r9
   140e0:	mov	r2, r4
   140e4:	mov	r3, #1
   140e8:	bl	12adc <table_notify@@Base>
   140ec:	mov	r7, #0
   140f0:	mov	r0, r7
   140f4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000140f8 <table_set_uint8@@Base>:
   140f8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   140fc:	add	fp, sp, #24
   14100:	mov	r8, r3
   14104:	mov	r4, r2
   14108:	mov	r9, r1
   1410c:	mov	r6, r0
   14110:	bl	14b38 <table_get_cell_ptr@@Base>
   14114:	mov	r5, r0
   14118:	mov	r0, r6
   1411c:	mov	r1, r4
   14120:	bl	12bc4 <table_get_col_ptr@@Base>
   14124:	ldr	r0, [r0, #4]
   14128:	mvn	r7, #0
   1412c:	cmp	r0, #3
   14130:	bne	14170 <table_set_uint8@@Base+0x78>
   14134:	ldr	r0, [r5]
   14138:	cmp	r0, #0
   1413c:	bne	14154 <table_set_uint8@@Base+0x5c>
   14140:	mov	r0, #1
   14144:	bl	11ecc <malloc@plt>
   14148:	cmp	r0, #0
   1414c:	str	r0, [r5]
   14150:	beq	14170 <table_set_uint8@@Base+0x78>
   14154:	strb	r8, [r0]
   14158:	mov	r0, r6
   1415c:	mov	r1, r9
   14160:	mov	r2, r4
   14164:	mov	r3, #1
   14168:	bl	12adc <table_notify@@Base>
   1416c:	mov	r7, #0
   14170:	mov	r0, r7
   14174:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014178 <table_set_int16@@Base>:
   14178:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1417c:	add	fp, sp, #24
   14180:	mov	r8, r3
   14184:	mov	r4, r2
   14188:	mov	r9, r1
   1418c:	mov	r6, r0
   14190:	bl	14b38 <table_get_cell_ptr@@Base>
   14194:	mov	r5, r0
   14198:	mov	r0, r6
   1419c:	mov	r1, r4
   141a0:	bl	12bc4 <table_get_col_ptr@@Base>
   141a4:	ldr	r0, [r0, #4]
   141a8:	mvn	r7, #0
   141ac:	cmp	r0, #4
   141b0:	bne	141f0 <table_set_int16@@Base+0x78>
   141b4:	ldr	r0, [r5]
   141b8:	cmp	r0, #0
   141bc:	bne	141d4 <table_set_int16@@Base+0x5c>
   141c0:	mov	r0, #2
   141c4:	bl	11ecc <malloc@plt>
   141c8:	cmp	r0, #0
   141cc:	str	r0, [r5]
   141d0:	beq	141f0 <table_set_int16@@Base+0x78>
   141d4:	strh	r8, [r0]
   141d8:	mov	r0, r6
   141dc:	mov	r1, r9
   141e0:	mov	r2, r4
   141e4:	mov	r3, #1
   141e8:	bl	12adc <table_notify@@Base>
   141ec:	mov	r7, #0
   141f0:	mov	r0, r7
   141f4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000141f8 <table_set_uint16@@Base>:
   141f8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   141fc:	add	fp, sp, #24
   14200:	mov	r8, r3
   14204:	mov	r4, r2
   14208:	mov	r9, r1
   1420c:	mov	r6, r0
   14210:	bl	14b38 <table_get_cell_ptr@@Base>
   14214:	mov	r5, r0
   14218:	mov	r0, r6
   1421c:	mov	r1, r4
   14220:	bl	12bc4 <table_get_col_ptr@@Base>
   14224:	ldr	r0, [r0, #4]
   14228:	mvn	r7, #0
   1422c:	cmp	r0, #5
   14230:	bne	14270 <table_set_uint16@@Base+0x78>
   14234:	ldr	r0, [r5]
   14238:	cmp	r0, #0
   1423c:	bne	14254 <table_set_uint16@@Base+0x5c>
   14240:	mov	r0, #2
   14244:	bl	11ecc <malloc@plt>
   14248:	cmp	r0, #0
   1424c:	str	r0, [r5]
   14250:	beq	14270 <table_set_uint16@@Base+0x78>
   14254:	strh	r8, [r0]
   14258:	mov	r0, r6
   1425c:	mov	r1, r9
   14260:	mov	r2, r4
   14264:	mov	r3, #1
   14268:	bl	12adc <table_notify@@Base>
   1426c:	mov	r7, #0
   14270:	mov	r0, r7
   14274:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014278 <table_set_int32@@Base>:
   14278:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1427c:	add	fp, sp, #24
   14280:	mov	r8, r3
   14284:	mov	r4, r2
   14288:	mov	r5, r1
   1428c:	mov	r6, r0
   14290:	bl	14b38 <table_get_cell_ptr@@Base>
   14294:	mov	r9, r0
   14298:	mov	r0, r6
   1429c:	mov	r1, r4
   142a0:	bl	12bc4 <table_get_col_ptr@@Base>
   142a4:	ldr	r0, [r0, #4]
   142a8:	mvn	r7, #0
   142ac:	cmp	r0, #6
   142b0:	bne	142f0 <table_set_int32@@Base+0x78>
   142b4:	ldr	r0, [r9]
   142b8:	cmp	r0, #0
   142bc:	bne	142d4 <table_set_int32@@Base+0x5c>
   142c0:	mov	r0, #4
   142c4:	bl	11ecc <malloc@plt>
   142c8:	cmp	r0, #0
   142cc:	str	r0, [r9]
   142d0:	beq	142f0 <table_set_int32@@Base+0x78>
   142d4:	str	r8, [r0]
   142d8:	mov	r0, r6
   142dc:	mov	r1, r5
   142e0:	mov	r2, r4
   142e4:	mov	r3, #1
   142e8:	bl	12adc <table_notify@@Base>
   142ec:	mov	r7, #0
   142f0:	mov	r0, r7
   142f4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000142f8 <table_set_uint32@@Base>:
   142f8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   142fc:	add	fp, sp, #24
   14300:	mov	r8, r3
   14304:	mov	r4, r2
   14308:	mov	r5, r1
   1430c:	mov	r6, r0
   14310:	bl	14b38 <table_get_cell_ptr@@Base>
   14314:	mov	r9, r0
   14318:	mov	r0, r6
   1431c:	mov	r1, r4
   14320:	bl	12bc4 <table_get_col_ptr@@Base>
   14324:	ldr	r0, [r0, #4]
   14328:	mvn	r7, #0
   1432c:	cmp	r0, #7
   14330:	bne	14370 <table_set_uint32@@Base+0x78>
   14334:	ldr	r0, [r9]
   14338:	cmp	r0, #0
   1433c:	bne	14354 <table_set_uint32@@Base+0x5c>
   14340:	mov	r0, #4
   14344:	bl	11ecc <malloc@plt>
   14348:	cmp	r0, #0
   1434c:	str	r0, [r9]
   14350:	beq	14370 <table_set_uint32@@Base+0x78>
   14354:	str	r8, [r0]
   14358:	mov	r0, r6
   1435c:	mov	r1, r5
   14360:	mov	r2, r4
   14364:	mov	r3, #1
   14368:	bl	12adc <table_notify@@Base>
   1436c:	mov	r7, #0
   14370:	mov	r0, r7
   14374:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014378 <table_set_int64@@Base>:
   14378:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1437c:	add	fp, sp, #24
   14380:	mov	r4, r2
   14384:	mov	r8, r1
   14388:	mov	r6, r0
   1438c:	bl	14b38 <table_get_cell_ptr@@Base>
   14390:	mov	r5, r0
   14394:	mov	r0, r6
   14398:	mov	r1, r4
   1439c:	bl	12bc4 <table_get_col_ptr@@Base>
   143a0:	ldr	r0, [r0, #4]
   143a4:	mvn	r7, #0
   143a8:	cmp	r0, #8
   143ac:	bne	143f8 <table_set_int64@@Base+0x80>
   143b0:	ldr	r0, [r5]
   143b4:	cmp	r0, #0
   143b8:	bne	143d0 <table_set_int64@@Base+0x58>
   143bc:	mov	r0, #8
   143c0:	bl	11ecc <malloc@plt>
   143c4:	cmp	r0, #0
   143c8:	str	r0, [r5]
   143cc:	beq	143f8 <table_set_int64@@Base+0x80>
   143d0:	ldr	r1, [fp, #12]
   143d4:	ldr	r2, [fp, #8]
   143d8:	mov	r3, #1
   143dc:	str	r2, [r0]
   143e0:	str	r1, [r0, #4]
   143e4:	mov	r0, r6
   143e8:	mov	r1, r8
   143ec:	mov	r2, r4
   143f0:	bl	12adc <table_notify@@Base>
   143f4:	mov	r7, #0
   143f8:	mov	r0, r7
   143fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014400 <table_set_uint64@@Base>:
   14400:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14404:	add	fp, sp, #24
   14408:	mov	r4, r2
   1440c:	mov	r8, r1
   14410:	mov	r6, r0
   14414:	bl	14b38 <table_get_cell_ptr@@Base>
   14418:	mov	r5, r0
   1441c:	mov	r0, r6
   14420:	mov	r1, r4
   14424:	bl	12bc4 <table_get_col_ptr@@Base>
   14428:	ldr	r0, [r0, #4]
   1442c:	mvn	r7, #0
   14430:	cmp	r0, #9
   14434:	bne	14480 <table_set_uint64@@Base+0x80>
   14438:	ldr	r0, [r5]
   1443c:	cmp	r0, #0
   14440:	bne	14458 <table_set_uint64@@Base+0x58>
   14444:	mov	r0, #8
   14448:	bl	11ecc <malloc@plt>
   1444c:	cmp	r0, #0
   14450:	str	r0, [r5]
   14454:	beq	14480 <table_set_uint64@@Base+0x80>
   14458:	ldr	r1, [fp, #12]
   1445c:	ldr	r2, [fp, #8]
   14460:	mov	r3, #1
   14464:	str	r2, [r0]
   14468:	str	r1, [r0, #4]
   1446c:	mov	r0, r6
   14470:	mov	r1, r8
   14474:	mov	r2, r4
   14478:	bl	12adc <table_notify@@Base>
   1447c:	mov	r7, #0
   14480:	mov	r0, r7
   14484:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014488 <table_set_short@@Base>:
   14488:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1448c:	add	fp, sp, #24
   14490:	mov	r8, r3
   14494:	mov	r4, r2
   14498:	mov	r9, r1
   1449c:	mov	r6, r0
   144a0:	bl	14b38 <table_get_cell_ptr@@Base>
   144a4:	mov	r5, r0
   144a8:	mov	r0, r6
   144ac:	mov	r1, r4
   144b0:	bl	12bc4 <table_get_col_ptr@@Base>
   144b4:	ldr	r0, [r0, #4]
   144b8:	mvn	r7, #0
   144bc:	cmp	r0, #10
   144c0:	bne	14500 <table_set_short@@Base+0x78>
   144c4:	ldr	r0, [r5]
   144c8:	cmp	r0, #0
   144cc:	bne	144e4 <table_set_short@@Base+0x5c>
   144d0:	mov	r0, #2
   144d4:	bl	11ecc <malloc@plt>
   144d8:	cmp	r0, #0
   144dc:	str	r0, [r5]
   144e0:	beq	14500 <table_set_short@@Base+0x78>
   144e4:	strh	r8, [r0]
   144e8:	mov	r0, r6
   144ec:	mov	r1, r9
   144f0:	mov	r2, r4
   144f4:	mov	r3, #1
   144f8:	bl	12adc <table_notify@@Base>
   144fc:	mov	r7, #0
   14500:	mov	r0, r7
   14504:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014508 <table_set_ushort@@Base>:
   14508:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1450c:	add	fp, sp, #24
   14510:	mov	r8, r3
   14514:	mov	r4, r2
   14518:	mov	r9, r1
   1451c:	mov	r6, r0
   14520:	bl	14b38 <table_get_cell_ptr@@Base>
   14524:	mov	r5, r0
   14528:	mov	r0, r6
   1452c:	mov	r1, r4
   14530:	bl	12bc4 <table_get_col_ptr@@Base>
   14534:	ldr	r0, [r0, #4]
   14538:	mvn	r7, #0
   1453c:	cmp	r0, #11
   14540:	bne	14580 <table_set_ushort@@Base+0x78>
   14544:	ldr	r0, [r5]
   14548:	cmp	r0, #0
   1454c:	bne	14564 <table_set_ushort@@Base+0x5c>
   14550:	mov	r0, #2
   14554:	bl	11ecc <malloc@plt>
   14558:	cmp	r0, #0
   1455c:	str	r0, [r5]
   14560:	beq	14580 <table_set_ushort@@Base+0x78>
   14564:	strh	r8, [r0]
   14568:	mov	r0, r6
   1456c:	mov	r1, r9
   14570:	mov	r2, r4
   14574:	mov	r3, #1
   14578:	bl	12adc <table_notify@@Base>
   1457c:	mov	r7, #0
   14580:	mov	r0, r7
   14584:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014588 <table_set_long@@Base>:
   14588:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1458c:	add	fp, sp, #24
   14590:	mov	r8, r3
   14594:	mov	r4, r2
   14598:	mov	r5, r1
   1459c:	mov	r6, r0
   145a0:	bl	14b38 <table_get_cell_ptr@@Base>
   145a4:	mov	r9, r0
   145a8:	mov	r0, r6
   145ac:	mov	r1, r4
   145b0:	bl	12bc4 <table_get_col_ptr@@Base>
   145b4:	ldr	r0, [r0, #4]
   145b8:	mvn	r7, #0
   145bc:	cmp	r0, #12
   145c0:	bne	14600 <table_set_long@@Base+0x78>
   145c4:	ldr	r0, [r9]
   145c8:	cmp	r0, #0
   145cc:	bne	145e4 <table_set_long@@Base+0x5c>
   145d0:	mov	r0, #4
   145d4:	bl	11ecc <malloc@plt>
   145d8:	cmp	r0, #0
   145dc:	str	r0, [r9]
   145e0:	beq	14600 <table_set_long@@Base+0x78>
   145e4:	str	r8, [r0]
   145e8:	mov	r0, r6
   145ec:	mov	r1, r5
   145f0:	mov	r2, r4
   145f4:	mov	r3, #1
   145f8:	bl	12adc <table_notify@@Base>
   145fc:	mov	r7, #0
   14600:	mov	r0, r7
   14604:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014608 <table_set_ulong@@Base>:
   14608:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1460c:	add	fp, sp, #24
   14610:	mov	r8, r3
   14614:	mov	r4, r2
   14618:	mov	r5, r1
   1461c:	mov	r6, r0
   14620:	bl	14b38 <table_get_cell_ptr@@Base>
   14624:	mov	r9, r0
   14628:	mov	r0, r6
   1462c:	mov	r1, r4
   14630:	bl	12bc4 <table_get_col_ptr@@Base>
   14634:	ldr	r0, [r0, #4]
   14638:	mvn	r7, #0
   1463c:	cmp	r0, #13
   14640:	bne	14680 <table_set_ulong@@Base+0x78>
   14644:	ldr	r0, [r9]
   14648:	cmp	r0, #0
   1464c:	bne	14664 <table_set_ulong@@Base+0x5c>
   14650:	mov	r0, #4
   14654:	bl	11ecc <malloc@plt>
   14658:	cmp	r0, #0
   1465c:	str	r0, [r9]
   14660:	beq	14680 <table_set_ulong@@Base+0x78>
   14664:	str	r8, [r0]
   14668:	mov	r0, r6
   1466c:	mov	r1, r5
   14670:	mov	r2, r4
   14674:	mov	r3, #1
   14678:	bl	12adc <table_notify@@Base>
   1467c:	mov	r7, #0
   14680:	mov	r0, r7
   14684:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014688 <table_set_llong@@Base>:
   14688:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1468c:	add	fp, sp, #24
   14690:	mov	r4, r2
   14694:	mov	r8, r1
   14698:	mov	r6, r0
   1469c:	bl	14b38 <table_get_cell_ptr@@Base>
   146a0:	mov	r5, r0
   146a4:	mov	r0, r6
   146a8:	mov	r1, r4
   146ac:	bl	12bc4 <table_get_col_ptr@@Base>
   146b0:	ldr	r0, [r0, #4]
   146b4:	mvn	r7, #0
   146b8:	cmp	r0, #14
   146bc:	bne	14708 <table_set_llong@@Base+0x80>
   146c0:	ldr	r0, [r5]
   146c4:	cmp	r0, #0
   146c8:	bne	146e0 <table_set_llong@@Base+0x58>
   146cc:	mov	r0, #8
   146d0:	bl	11ecc <malloc@plt>
   146d4:	cmp	r0, #0
   146d8:	str	r0, [r5]
   146dc:	beq	14708 <table_set_llong@@Base+0x80>
   146e0:	ldr	r1, [fp, #12]
   146e4:	ldr	r2, [fp, #8]
   146e8:	mov	r3, #1
   146ec:	str	r2, [r0]
   146f0:	str	r1, [r0, #4]
   146f4:	mov	r0, r6
   146f8:	mov	r1, r8
   146fc:	mov	r2, r4
   14700:	bl	12adc <table_notify@@Base>
   14704:	mov	r7, #0
   14708:	mov	r0, r7
   1470c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014710 <table_set_ullong@@Base>:
   14710:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14714:	add	fp, sp, #24
   14718:	mov	r4, r2
   1471c:	mov	r8, r1
   14720:	mov	r6, r0
   14724:	bl	14b38 <table_get_cell_ptr@@Base>
   14728:	mov	r5, r0
   1472c:	mov	r0, r6
   14730:	mov	r1, r4
   14734:	bl	12bc4 <table_get_col_ptr@@Base>
   14738:	ldr	r0, [r0, #4]
   1473c:	mvn	r7, #0
   14740:	cmp	r0, #15
   14744:	bne	14790 <table_set_ullong@@Base+0x80>
   14748:	ldr	r0, [r5]
   1474c:	cmp	r0, #0
   14750:	bne	14768 <table_set_ullong@@Base+0x58>
   14754:	mov	r0, #8
   14758:	bl	11ecc <malloc@plt>
   1475c:	cmp	r0, #0
   14760:	str	r0, [r5]
   14764:	beq	14790 <table_set_ullong@@Base+0x80>
   14768:	ldr	r1, [fp, #12]
   1476c:	ldr	r2, [fp, #8]
   14770:	mov	r3, #1
   14774:	str	r2, [r0]
   14778:	str	r1, [r0, #4]
   1477c:	mov	r0, r6
   14780:	mov	r1, r8
   14784:	mov	r2, r4
   14788:	bl	12adc <table_notify@@Base>
   1478c:	mov	r7, #0
   14790:	mov	r0, r7
   14794:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014798 <table_set_float@@Base>:
   14798:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1479c:	add	fp, sp, #24
   147a0:	vpush	{d8}
   147a4:	vmov.f32	s16, s0
   147a8:	mov	r4, r2
   147ac:	mov	r8, r1
   147b0:	mov	r6, r0
   147b4:	bl	14b38 <table_get_cell_ptr@@Base>
   147b8:	mov	r5, r0
   147bc:	mov	r0, r6
   147c0:	mov	r1, r4
   147c4:	bl	12bc4 <table_get_col_ptr@@Base>
   147c8:	ldr	r0, [r0, #4]
   147cc:	mvn	r7, #0
   147d0:	cmp	r0, #16
   147d4:	bne	14818 <table_set_float@@Base+0x80>
   147d8:	ldr	r0, [r5]
   147dc:	cmp	r0, #0
   147e0:	bne	147f8 <table_set_float@@Base+0x60>
   147e4:	mov	r0, #4
   147e8:	bl	11ecc <malloc@plt>
   147ec:	cmp	r0, #0
   147f0:	str	r0, [r5]
   147f4:	beq	14818 <table_set_float@@Base+0x80>
   147f8:	vmov	r1, s16
   147fc:	mov	r2, r4
   14800:	mov	r3, #1
   14804:	str	r1, [r0]
   14808:	mov	r0, r6
   1480c:	mov	r1, r8
   14810:	bl	12adc <table_notify@@Base>
   14814:	mov	r7, #0
   14818:	mov	r0, r7
   1481c:	vpop	{d8}
   14820:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014824 <table_set_double@@Base>:
   14824:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14828:	add	fp, sp, #24
   1482c:	vpush	{d8}
   14830:	vorr	d8, d0, d0
   14834:	mov	r4, r2
   14838:	mov	r5, r1
   1483c:	mov	r6, r0
   14840:	bl	14b38 <table_get_cell_ptr@@Base>
   14844:	mov	r8, r0
   14848:	mov	r0, r6
   1484c:	mov	r1, r4
   14850:	bl	12bc4 <table_get_col_ptr@@Base>
   14854:	ldr	r0, [r0, #4]
   14858:	mvn	r7, #0
   1485c:	cmp	r0, #17
   14860:	bne	148a0 <table_set_double@@Base+0x7c>
   14864:	ldr	r0, [r8]
   14868:	cmp	r0, #0
   1486c:	bne	14884 <table_set_double@@Base+0x60>
   14870:	mov	r0, #8
   14874:	bl	11ecc <malloc@plt>
   14878:	cmp	r0, #0
   1487c:	str	r0, [r8]
   14880:	beq	148a0 <table_set_double@@Base+0x7c>
   14884:	vst1.8	{d8}, [r0]
   14888:	mov	r0, r6
   1488c:	mov	r1, r5
   14890:	mov	r2, r4
   14894:	mov	r3, #1
   14898:	bl	12adc <table_notify@@Base>
   1489c:	mov	r7, #0
   148a0:	mov	r0, r7
   148a4:	vpop	{d8}
   148a8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000148ac <table_set_ldouble@@Base>:
   148ac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   148b0:	add	fp, sp, #24
   148b4:	vpush	{d8}
   148b8:	vorr	d8, d0, d0
   148bc:	mov	r4, r2
   148c0:	mov	r5, r1
   148c4:	mov	r6, r0
   148c8:	bl	14b38 <table_get_cell_ptr@@Base>
   148cc:	mov	r8, r0
   148d0:	mov	r0, r6
   148d4:	mov	r1, r4
   148d8:	bl	12bc4 <table_get_col_ptr@@Base>
   148dc:	ldr	r0, [r0, #4]
   148e0:	mvn	r7, #0
   148e4:	cmp	r0, #18
   148e8:	bne	14928 <table_set_ldouble@@Base+0x7c>
   148ec:	ldr	r0, [r8]
   148f0:	cmp	r0, #0
   148f4:	bne	1490c <table_set_ldouble@@Base+0x60>
   148f8:	mov	r0, #8
   148fc:	bl	11ecc <malloc@plt>
   14900:	cmp	r0, #0
   14904:	str	r0, [r8]
   14908:	beq	14928 <table_set_ldouble@@Base+0x7c>
   1490c:	vst1.8	{d8}, [r0]
   14910:	mov	r0, r6
   14914:	mov	r1, r5
   14918:	mov	r2, r4
   1491c:	mov	r3, #1
   14920:	bl	12adc <table_notify@@Base>
   14924:	mov	r7, #0
   14928:	mov	r0, r7
   1492c:	vpop	{d8}
   14930:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014934 <table_set_string@@Base>:
   14934:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14938:	add	fp, sp, #24
   1493c:	mov	r8, r3
   14940:	mov	r4, r2
   14944:	mov	r9, r1
   14948:	mov	r6, r0
   1494c:	bl	14b38 <table_get_cell_ptr@@Base>
   14950:	mov	r5, r0
   14954:	mov	r0, r6
   14958:	mov	r1, r4
   1495c:	bl	12bc4 <table_get_col_ptr@@Base>
   14960:	ldr	r0, [r0, #4]
   14964:	mvn	r7, #0
   14968:	cmp	r0, #21
   1496c:	bne	149b4 <table_set_string@@Base+0x80>
   14970:	mov	r0, r8
   14974:	bl	11ef0 <strlen@plt>
   14978:	ldr	r2, [r5]
   1497c:	add	r1, r0, #1
   14980:	mov	r0, r2
   14984:	bl	11eb4 <realloc@plt>
   14988:	cmp	r0, #0
   1498c:	str	r0, [r5]
   14990:	beq	149b4 <table_set_string@@Base+0x80>
   14994:	mov	r1, r8
   14998:	bl	11ec0 <strcpy@plt>
   1499c:	mov	r0, r6
   149a0:	mov	r1, r9
   149a4:	mov	r2, r4
   149a8:	mov	r3, #1
   149ac:	bl	12adc <table_notify@@Base>
   149b0:	mov	r7, #0
   149b4:	mov	r0, r7
   149b8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000149bc <table_set_char@@Base>:
   149bc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   149c0:	add	fp, sp, #24
   149c4:	mov	r8, r3
   149c8:	mov	r4, r2
   149cc:	mov	r9, r1
   149d0:	mov	r6, r0
   149d4:	bl	14b38 <table_get_cell_ptr@@Base>
   149d8:	mov	r5, r0
   149dc:	mov	r0, r6
   149e0:	mov	r1, r4
   149e4:	bl	12bc4 <table_get_col_ptr@@Base>
   149e8:	ldr	r0, [r0, #4]
   149ec:	mvn	r7, #0
   149f0:	cmp	r0, #19
   149f4:	bne	14a34 <table_set_char@@Base+0x78>
   149f8:	ldr	r0, [r5]
   149fc:	cmp	r0, #0
   14a00:	bne	14a18 <table_set_char@@Base+0x5c>
   14a04:	mov	r0, #1
   14a08:	bl	11ecc <malloc@plt>
   14a0c:	cmp	r0, #0
   14a10:	str	r0, [r5]
   14a14:	beq	14a34 <table_set_char@@Base+0x78>
   14a18:	strb	r8, [r0]
   14a1c:	mov	r0, r6
   14a20:	mov	r1, r9
   14a24:	mov	r2, r4
   14a28:	mov	r3, #1
   14a2c:	bl	12adc <table_notify@@Base>
   14a30:	mov	r7, #0
   14a34:	mov	r0, r7
   14a38:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014a3c <table_set_uchar@@Base>:
   14a3c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14a40:	add	fp, sp, #24
   14a44:	mov	r8, r3
   14a48:	mov	r4, r2
   14a4c:	mov	r9, r1
   14a50:	mov	r6, r0
   14a54:	bl	14b38 <table_get_cell_ptr@@Base>
   14a58:	mov	r5, r0
   14a5c:	mov	r0, r6
   14a60:	mov	r1, r4
   14a64:	bl	12bc4 <table_get_col_ptr@@Base>
   14a68:	ldr	r0, [r0, #4]
   14a6c:	mvn	r7, #0
   14a70:	cmp	r0, #20
   14a74:	bne	14ab4 <table_set_uchar@@Base+0x78>
   14a78:	ldr	r0, [r5]
   14a7c:	cmp	r0, #0
   14a80:	bne	14a98 <table_set_uchar@@Base+0x5c>
   14a84:	mov	r0, #1
   14a88:	bl	11ecc <malloc@plt>
   14a8c:	cmp	r0, #0
   14a90:	str	r0, [r5]
   14a94:	beq	14ab4 <table_set_uchar@@Base+0x78>
   14a98:	strb	r8, [r0]
   14a9c:	mov	r0, r6
   14aa0:	mov	r1, r9
   14aa4:	mov	r2, r4
   14aa8:	mov	r3, #1
   14aac:	bl	12adc <table_notify@@Base>
   14ab0:	mov	r7, #0
   14ab4:	mov	r0, r7
   14ab8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014abc <table_set_ptr@@Base>:
   14abc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14ac0:	add	fp, sp, #24
   14ac4:	mov	r8, r3
   14ac8:	mov	r4, r2
   14acc:	mov	r5, r1
   14ad0:	mov	r6, r0
   14ad4:	bl	14b38 <table_get_cell_ptr@@Base>
   14ad8:	mov	r7, r0
   14adc:	mov	r0, r6
   14ae0:	mov	r1, r4
   14ae4:	bl	12bc4 <table_get_col_ptr@@Base>
   14ae8:	ldr	r1, [r0, #4]
   14aec:	mvn	r0, #0
   14af0:	cmp	r1, #23
   14af4:	bne	14b14 <table_set_ptr@@Base+0x58>
   14af8:	mov	r0, r6
   14afc:	mov	r1, r5
   14b00:	mov	r2, r4
   14b04:	mov	r3, #1
   14b08:	str	r8, [r7]
   14b0c:	bl	12adc <table_notify@@Base>
   14b10:	mov	r0, #0
   14b14:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014b18 <table_cell_init@@Base>:
   14b18:	push	{r4, sl, fp, lr}
   14b1c:	add	fp, sp, #8
   14b20:	mov	r4, r2
   14b24:	bl	1395c <table_get_row_ptr@@Base>
   14b28:	ldr	r0, [r0]
   14b2c:	mov	r1, #0
   14b30:	str	r1, [r0, r4, lsl #2]
   14b34:	pop	{r4, sl, fp, pc}

00014b38 <table_get_cell_ptr@@Base>:
   14b38:	push	{r4, sl, fp, lr}
   14b3c:	add	fp, sp, #8
   14b40:	mov	r4, r2
   14b44:	bl	1395c <table_get_row_ptr@@Base>
   14b48:	ldr	r0, [r0]
   14b4c:	add	r0, r0, r4, lsl #2
   14b50:	pop	{r4, sl, fp, pc}

00014b54 <table_cell_destroy@@Base>:
   14b54:	push	{r4, r5, r6, sl, fp, lr}
   14b58:	add	fp, sp, #16
   14b5c:	mov	r5, r1
   14b60:	mov	r1, r2
   14b64:	mov	r4, r2
   14b68:	mov	r6, r0
   14b6c:	bl	12c70 <table_get_column_data_type@@Base>
   14b70:	cmp	r0, #23
   14b74:	popeq	{r4, r5, r6, sl, fp, pc}
   14b78:	mov	r0, r6
   14b7c:	mov	r1, r5
   14b80:	bl	1395c <table_get_row_ptr@@Base>
   14b84:	ldr	r0, [r0]
   14b88:	ldr	r0, [r0, r4, lsl #2]
   14b8c:	cmp	r0, #0
   14b90:	beq	14b9c <table_cell_destroy@@Base+0x48>
   14b94:	pop	{r4, r5, r6, sl, fp, lr}
   14b98:	b	11ea8 <free@plt>
   14b9c:	pop	{r4, r5, r6, sl, fp, pc}

00014ba0 <table_cell_to_buffer@@Base>:
   14ba0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14ba4:	add	fp, sp, #24
   14ba8:	sub	sp, sp, #8
   14bac:	mov	r7, r1
   14bb0:	mov	r1, r2
   14bb4:	mov	r5, r3
   14bb8:	mov	r6, r2
   14bbc:	mov	r4, r0
   14bc0:	bl	12c70 <table_get_column_data_type@@Base>
   14bc4:	cmp	r0, #23
   14bc8:	bhi	14e38 <table_cell_to_buffer@@Base+0x298>
   14bcc:	ldr	r8, [fp, #8]
   14bd0:	add	r1, pc, #0
   14bd4:	ldr	pc, [r1, r0, lsl #2]
   14bd8:	andeq	r4, r1, r8, lsr ip
   14bdc:	andeq	r4, r1, ip, asr #24
   14be0:	andeq	r4, r1, r0, ror #24
   14be4:	andeq	r4, r1, r4, ror ip
   14be8:	andeq	r4, r1, r8, lsl #25
   14bec:	muleq	r1, ip, ip
   14bf0:			; <UNDEFINED> instruction: 0x00014cb0
   14bf4:	andeq	r4, r1, r4, asr #25
   14bf8:	andeq	r4, r1, r4, ror #25
   14bfc:	strdeq	r4, [r1], -r8
   14c00:	andeq	r4, r1, ip, lsl #26
   14c04:	andeq	r4, r1, ip, lsr #26
   14c08:	andeq	r4, r1, ip, asr #26
   14c0c:	andeq	r4, r1, ip, ror #26
   14c10:	andeq	r4, r1, ip, lsl #27
   14c14:	andeq	r4, r1, ip, lsr #27
   14c18:	andeq	r4, r1, ip, asr #27
   14c1c:	strdeq	r4, [r1], -r0
   14c20:	andeq	r4, r1, r0, lsl lr
   14c24:	andeq	r4, r1, r4, asr #28
   14c28:	andeq	r4, r1, r8, asr lr
   14c2c:	andeq	r4, r1, r8, ror lr
   14c30:	muleq	r1, r8, lr
   14c34:	andeq	r4, r1, ip, asr #29
   14c38:	mov	r0, r4
   14c3c:	mov	r1, r7
   14c40:	mov	r2, r6
   14c44:	bl	13718 <table_get_int@@Base>
   14c48:	b	14ea8 <table_cell_to_buffer@@Base+0x308>
   14c4c:	mov	r0, r4
   14c50:	mov	r1, r7
   14c54:	mov	r2, r6
   14c58:	bl	13730 <table_get_uint@@Base>
   14c5c:	b	14cd4 <table_cell_to_buffer@@Base+0x134>
   14c60:	mov	r0, r4
   14c64:	mov	r1, r7
   14c68:	mov	r2, r6
   14c6c:	bl	13748 <table_get_int8@@Base>
   14c70:	b	14ea8 <table_cell_to_buffer@@Base+0x308>
   14c74:	mov	r0, r4
   14c78:	mov	r1, r7
   14c7c:	mov	r2, r6
   14c80:	bl	13760 <table_get_uint8@@Base>
   14c84:	b	14cd4 <table_cell_to_buffer@@Base+0x134>
   14c88:	mov	r0, r4
   14c8c:	mov	r1, r7
   14c90:	mov	r2, r6
   14c94:	bl	13778 <table_get_int16@@Base>
   14c98:	b	14ea8 <table_cell_to_buffer@@Base+0x308>
   14c9c:	mov	r0, r4
   14ca0:	mov	r1, r7
   14ca4:	mov	r2, r6
   14ca8:	bl	13790 <table_get_uint16@@Base>
   14cac:	b	14cd4 <table_cell_to_buffer@@Base+0x134>
   14cb0:	mov	r0, r4
   14cb4:	mov	r1, r7
   14cb8:	mov	r2, r6
   14cbc:	bl	137a8 <table_get_int32@@Base>
   14cc0:	b	14ea8 <table_cell_to_buffer@@Base+0x308>
   14cc4:	mov	r0, r4
   14cc8:	mov	r1, r7
   14ccc:	mov	r2, r6
   14cd0:	bl	137c0 <table_get_uint32@@Base>
   14cd4:	movw	r2, #22199	; 0x56b7
   14cd8:	mov	r3, r0
   14cdc:	movt	r2, #1
   14ce0:	b	14eb4 <table_cell_to_buffer@@Base+0x314>
   14ce4:	mov	r0, r4
   14ce8:	mov	r1, r7
   14cec:	mov	r2, r6
   14cf0:	bl	137d8 <table_get_int64@@Base>
   14cf4:	b	14d9c <table_cell_to_buffer@@Base+0x1fc>
   14cf8:	mov	r0, r4
   14cfc:	mov	r1, r7
   14d00:	mov	r2, r6
   14d04:	bl	137f0 <table_get_uint64@@Base>
   14d08:	b	14dbc <table_cell_to_buffer@@Base+0x21c>
   14d0c:	mov	r0, r4
   14d10:	mov	r1, r7
   14d14:	mov	r2, r6
   14d18:	bl	13808 <table_get_short@@Base>
   14d1c:	movw	r2, #22212	; 0x56c4
   14d20:	mov	r3, r0
   14d24:	movt	r2, #1
   14d28:	b	14eb4 <table_cell_to_buffer@@Base+0x314>
   14d2c:	mov	r0, r4
   14d30:	mov	r1, r7
   14d34:	mov	r2, r6
   14d38:	bl	13820 <table_get_ushort@@Base>
   14d3c:	movw	r2, #22216	; 0x56c8
   14d40:	mov	r3, r0
   14d44:	movt	r2, #1
   14d48:	b	14eb4 <table_cell_to_buffer@@Base+0x314>
   14d4c:	mov	r0, r4
   14d50:	mov	r1, r7
   14d54:	mov	r2, r6
   14d58:	bl	13838 <table_get_long@@Base>
   14d5c:	movw	r2, #22220	; 0x56cc
   14d60:	mov	r3, r0
   14d64:	movt	r2, #1
   14d68:	b	14eb4 <table_cell_to_buffer@@Base+0x314>
   14d6c:	mov	r0, r4
   14d70:	mov	r1, r7
   14d74:	mov	r2, r6
   14d78:	bl	13850 <table_get_ulong@@Base>
   14d7c:	movw	r2, #22224	; 0x56d0
   14d80:	mov	r3, r0
   14d84:	movt	r2, #1
   14d88:	b	14eb4 <table_cell_to_buffer@@Base+0x314>
   14d8c:	mov	r0, r4
   14d90:	mov	r1, r7
   14d94:	mov	r2, r6
   14d98:	bl	13868 <table_get_llong@@Base>
   14d9c:	movw	r2, #22202	; 0x56ba
   14da0:	stm	sp, {r0, r1}
   14da4:	movt	r2, #1
   14da8:	b	14e2c <table_cell_to_buffer@@Base+0x28c>
   14dac:	mov	r0, r4
   14db0:	mov	r1, r7
   14db4:	mov	r2, r6
   14db8:	bl	13880 <table_get_ullong@@Base>
   14dbc:	movw	r2, #22207	; 0x56bf
   14dc0:	stm	sp, {r0, r1}
   14dc4:	movt	r2, #1
   14dc8:	b	14e2c <table_cell_to_buffer@@Base+0x28c>
   14dcc:	mov	r0, r4
   14dd0:	mov	r1, r7
   14dd4:	mov	r2, r6
   14dd8:	bl	13898 <table_get_float@@Base>
   14ddc:	vcvt.f64.f32	d16, s0
   14de0:	movw	r2, #22231	; 0x56d7
   14de4:	movt	r2, #1
   14de8:	vstr	d16, [sp]
   14dec:	b	14e2c <table_cell_to_buffer@@Base+0x28c>
   14df0:	mov	r0, r4
   14df4:	mov	r1, r7
   14df8:	mov	r2, r6
   14dfc:	bl	138b0 <table_get_double@@Base>
   14e00:	movw	r2, #22234	; 0x56da
   14e04:	vstr	d0, [sp]
   14e08:	movt	r2, #1
   14e0c:	b	14e2c <table_cell_to_buffer@@Base+0x28c>
   14e10:	mov	r0, r4
   14e14:	mov	r1, r7
   14e18:	mov	r2, r6
   14e1c:	bl	138c8 <table_get_ldouble@@Base>
   14e20:	movw	r2, #22238	; 0x56de
   14e24:	vstr	d0, [sp]
   14e28:	movt	r2, #1
   14e2c:	mov	r0, r5
   14e30:	mov	r1, r8
   14e34:	bl	11efc <snprintf@plt>
   14e38:	mov	r0, #0
   14e3c:	sub	sp, fp, #24
   14e40:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14e44:	mov	r0, r4
   14e48:	mov	r1, r7
   14e4c:	mov	r2, r6
   14e50:	bl	138e0 <table_get_char@@Base>
   14e54:	b	14e68 <table_cell_to_buffer@@Base+0x2c8>
   14e58:	mov	r0, r4
   14e5c:	mov	r1, r7
   14e60:	mov	r2, r6
   14e64:	bl	138f8 <table_get_uchar@@Base>
   14e68:	movw	r2, #22242	; 0x56e2
   14e6c:	mov	r3, r0
   14e70:	movt	r2, #1
   14e74:	b	14eb4 <table_cell_to_buffer@@Base+0x314>
   14e78:	mov	r0, r4
   14e7c:	mov	r1, r7
   14e80:	mov	r2, r6
   14e84:	bl	13910 <table_get_string@@Base>
   14e88:	movw	r2, #22228	; 0x56d4
   14e8c:	mov	r3, r0
   14e90:	movt	r2, #1
   14e94:	b	14eb4 <table_cell_to_buffer@@Base+0x314>
   14e98:	mov	r0, r4
   14e9c:	mov	r1, r7
   14ea0:	mov	r2, r6
   14ea4:	bl	13700 <table_get_bool@@Base>
   14ea8:	movw	r2, #22196	; 0x56b4
   14eac:	mov	r3, r0
   14eb0:	movt	r2, #1
   14eb4:	mov	r0, r5
   14eb8:	mov	r1, r8
   14ebc:	bl	11efc <snprintf@plt>
   14ec0:	mov	r0, #0
   14ec4:	sub	sp, fp, #24
   14ec8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14ecc:	mov	r0, r4
   14ed0:	mov	r1, r7
   14ed4:	mov	r2, r6
   14ed8:	bl	13924 <table_get_ptr@@Base>
   14edc:	movw	r2, #22245	; 0x56e5
   14ee0:	mov	r3, r0
   14ee4:	movt	r2, #1
   14ee8:	b	14eb4 <table_cell_to_buffer@@Base+0x314>

00014eec <table_cell_from_buffer@@Base>:
   14eec:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14ef0:	add	fp, sp, #24
   14ef4:	sub	sp, sp, #264	; 0x108
   14ef8:	mov	r5, r1
   14efc:	mov	r1, r2
   14f00:	mov	r7, r3
   14f04:	mov	r4, r2
   14f08:	mov	r6, r0
   14f0c:	bl	12c70 <table_get_column_data_type@@Base>
   14f10:	cmp	r0, #23
   14f14:	bhi	15544 <table_cell_from_buffer@@Base+0x658>
   14f18:	add	r1, pc, #0
   14f1c:	ldr	pc, [r1, r0, lsl #2]
   14f20:	andeq	r4, r1, r0, lsl #31
   14f24:			; <UNDEFINED> instruction: 0x00014fbc
   14f28:	strdeq	r4, [r1], -r8
   14f2c:	andeq	r5, r1, r4, lsr r0
   14f30:	andeq	r5, r1, r0, ror r0
   14f34:	andeq	r5, r1, ip, lsr #1
   14f38:	andeq	r5, r1, r8, ror #1
   14f3c:	andeq	r5, r1, r4, lsr #2
   14f40:	andeq	r5, r1, r0, ror #2
   14f44:	andeq	r5, r1, r4, lsr #3
   14f48:	andeq	r5, r1, r8, ror #3
   14f4c:	andeq	r5, r1, r4, lsr #4
   14f50:	andeq	r5, r1, r0, ror #4
   14f54:	muleq	r1, ip, r2
   14f58:	ldrdeq	r5, [r1], -r8
   14f5c:	andeq	r5, r1, ip, lsl r3
   14f60:	andeq	r5, r1, r0, ror #6
   14f64:	muleq	r1, ip, r3
   14f68:	ldrdeq	r5, [r1], -r8
   14f6c:	andeq	r5, r1, r4, lsl r4
   14f70:	andeq	r5, r1, r0, asr r4
   14f74:	andeq	r5, r1, ip, lsl #9
   14f78:	andeq	r5, r1, r8, asr #9
   14f7c:	andeq	r5, r1, ip, lsl #10
   14f80:	movw	r1, #22196	; 0x56b4
   14f84:	add	r2, sp, #8
   14f88:	mov	r0, r7
   14f8c:	movt	r1, #1
   14f90:	bl	11f08 <__isoc99_sscanf@plt>
   14f94:	mov	r1, r0
   14f98:	mvn	r0, #0
   14f9c:	cmp	r1, #1
   14fa0:	bne	15548 <table_cell_from_buffer@@Base+0x65c>
   14fa4:	ldr	r3, [sp, #8]
   14fa8:	mov	r0, r6
   14fac:	mov	r1, r5
   14fb0:	mov	r2, r4
   14fb4:	bl	13f78 <table_set_int@@Base>
   14fb8:	b	15544 <table_cell_from_buffer@@Base+0x658>
   14fbc:	movw	r1, #22199	; 0x56b7
   14fc0:	add	r2, sp, #8
   14fc4:	mov	r0, r7
   14fc8:	movt	r1, #1
   14fcc:	bl	11f08 <__isoc99_sscanf@plt>
   14fd0:	mov	r1, r0
   14fd4:	mvn	r0, #0
   14fd8:	cmp	r1, #1
   14fdc:	bne	15548 <table_cell_from_buffer@@Base+0x65c>
   14fe0:	ldr	r3, [sp, #8]
   14fe4:	mov	r0, r6
   14fe8:	mov	r1, r5
   14fec:	mov	r2, r4
   14ff0:	bl	13ff8 <table_set_uint@@Base>
   14ff4:	b	15544 <table_cell_from_buffer@@Base+0x658>
   14ff8:	movw	r1, #22248	; 0x56e8
   14ffc:	add	r2, sp, #8
   15000:	mov	r0, r7
   15004:	movt	r1, #1
   15008:	bl	11f08 <__isoc99_sscanf@plt>
   1500c:	mov	r1, r0
   15010:	mvn	r0, #0
   15014:	cmp	r1, #1
   15018:	bne	15548 <table_cell_from_buffer@@Base+0x65c>
   1501c:	ldrsb	r3, [sp, #8]
   15020:	mov	r0, r6
   15024:	mov	r1, r5
   15028:	mov	r2, r4
   1502c:	bl	14078 <table_set_int8@@Base>
   15030:	b	15544 <table_cell_from_buffer@@Base+0x658>
   15034:	movw	r1, #22253	; 0x56ed
   15038:	add	r2, sp, #8
   1503c:	mov	r0, r7
   15040:	movt	r1, #1
   15044:	bl	11f08 <__isoc99_sscanf@plt>
   15048:	mov	r1, r0
   1504c:	mvn	r0, #0
   15050:	cmp	r1, #1
   15054:	bne	15548 <table_cell_from_buffer@@Base+0x65c>
   15058:	ldrb	r3, [sp, #8]
   1505c:	mov	r0, r6
   15060:	mov	r1, r5
   15064:	mov	r2, r4
   15068:	bl	140f8 <table_set_uint8@@Base>
   1506c:	b	15544 <table_cell_from_buffer@@Base+0x658>
   15070:	movw	r1, #22212	; 0x56c4
   15074:	add	r2, sp, #8
   15078:	mov	r0, r7
   1507c:	movt	r1, #1
   15080:	bl	11f08 <__isoc99_sscanf@plt>
   15084:	mov	r1, r0
   15088:	mvn	r0, #0
   1508c:	cmp	r1, #1
   15090:	bne	15548 <table_cell_from_buffer@@Base+0x65c>
   15094:	ldrsh	r3, [sp, #8]
   15098:	mov	r0, r6
   1509c:	mov	r1, r5
   150a0:	mov	r2, r4
   150a4:	bl	14178 <table_set_int16@@Base>
   150a8:	b	15544 <table_cell_from_buffer@@Base+0x658>
   150ac:	movw	r1, #22216	; 0x56c8
   150b0:	add	r2, sp, #8
   150b4:	mov	r0, r7
   150b8:	movt	r1, #1
   150bc:	bl	11f08 <__isoc99_sscanf@plt>
   150c0:	mov	r1, r0
   150c4:	mvn	r0, #0
   150c8:	cmp	r1, #1
   150cc:	bne	15548 <table_cell_from_buffer@@Base+0x65c>
   150d0:	ldrh	r3, [sp, #8]
   150d4:	mov	r0, r6
   150d8:	mov	r1, r5
   150dc:	mov	r2, r4
   150e0:	bl	141f8 <table_set_uint16@@Base>
   150e4:	b	15544 <table_cell_from_buffer@@Base+0x658>
   150e8:	movw	r1, #22196	; 0x56b4
   150ec:	add	r2, sp, #8
   150f0:	mov	r0, r7
   150f4:	movt	r1, #1
   150f8:	bl	11f08 <__isoc99_sscanf@plt>
   150fc:	mov	r1, r0
   15100:	mvn	r0, #0
   15104:	cmp	r1, #1
   15108:	bne	15548 <table_cell_from_buffer@@Base+0x65c>
   1510c:	ldr	r3, [sp, #8]
   15110:	mov	r0, r6
   15114:	mov	r1, r5
   15118:	mov	r2, r4
   1511c:	bl	14278 <table_set_int32@@Base>
   15120:	b	15544 <table_cell_from_buffer@@Base+0x658>
   15124:	movw	r1, #22199	; 0x56b7
   15128:	add	r2, sp, #8
   1512c:	mov	r0, r7
   15130:	movt	r1, #1
   15134:	bl	11f08 <__isoc99_sscanf@plt>
   15138:	mov	r1, r0
   1513c:	mvn	r0, #0
   15140:	cmp	r1, #1
   15144:	bne	15548 <table_cell_from_buffer@@Base+0x65c>
   15148:	ldr	r3, [sp, #8]
   1514c:	mov	r0, r6
   15150:	mov	r1, r5
   15154:	mov	r2, r4
   15158:	bl	142f8 <table_set_uint32@@Base>
   1515c:	b	15544 <table_cell_from_buffer@@Base+0x658>
   15160:	movw	r1, #22202	; 0x56ba
   15164:	add	r2, sp, #8
   15168:	mov	r0, r7
   1516c:	movt	r1, #1
   15170:	bl	11f08 <__isoc99_sscanf@plt>
   15174:	mov	r1, r0
   15178:	mvn	r0, #0
   1517c:	cmp	r1, #1
   15180:	bne	15548 <table_cell_from_buffer@@Base+0x65c>
   15184:	ldr	r0, [sp, #8]
   15188:	ldr	r1, [sp, #12]
   1518c:	mov	r2, r4
   15190:	stm	sp, {r0, r1}
   15194:	mov	r0, r6
   15198:	mov	r1, r5
   1519c:	bl	14378 <table_set_int64@@Base>
   151a0:	b	15544 <table_cell_from_buffer@@Base+0x658>
   151a4:	movw	r1, #22207	; 0x56bf
   151a8:	add	r2, sp, #8
   151ac:	mov	r0, r7
   151b0:	movt	r1, #1
   151b4:	bl	11f08 <__isoc99_sscanf@plt>
   151b8:	mov	r1, r0
   151bc:	mvn	r0, #0
   151c0:	cmp	r1, #1
   151c4:	bne	15548 <table_cell_from_buffer@@Base+0x65c>
   151c8:	ldr	r0, [sp, #8]
   151cc:	ldr	r1, [sp, #12]
   151d0:	mov	r2, r4
   151d4:	stm	sp, {r0, r1}
   151d8:	mov	r0, r6
   151dc:	mov	r1, r5
   151e0:	bl	14400 <table_set_uint64@@Base>
   151e4:	b	15544 <table_cell_from_buffer@@Base+0x658>
   151e8:	movw	r1, #22212	; 0x56c4
   151ec:	add	r2, sp, #8
   151f0:	mov	r0, r7
   151f4:	movt	r1, #1
   151f8:	bl	11f08 <__isoc99_sscanf@plt>
   151fc:	mov	r1, r0
   15200:	mvn	r0, #0
   15204:	cmp	r1, #1
   15208:	bne	15548 <table_cell_from_buffer@@Base+0x65c>
   1520c:	ldrsh	r3, [sp, #8]
   15210:	mov	r0, r6
   15214:	mov	r1, r5
   15218:	mov	r2, r4
   1521c:	bl	14488 <table_set_short@@Base>
   15220:	b	15544 <table_cell_from_buffer@@Base+0x658>
   15224:	movw	r1, #22216	; 0x56c8
   15228:	add	r2, sp, #8
   1522c:	mov	r0, r7
   15230:	movt	r1, #1
   15234:	bl	11f08 <__isoc99_sscanf@plt>
   15238:	mov	r1, r0
   1523c:	mvn	r0, #0
   15240:	cmp	r1, #1
   15244:	bne	15548 <table_cell_from_buffer@@Base+0x65c>
   15248:	ldrh	r3, [sp, #8]
   1524c:	mov	r0, r6
   15250:	mov	r1, r5
   15254:	mov	r2, r4
   15258:	bl	14508 <table_set_ushort@@Base>
   1525c:	b	15544 <table_cell_from_buffer@@Base+0x658>
   15260:	movw	r1, #22220	; 0x56cc
   15264:	add	r2, sp, #8
   15268:	mov	r0, r7
   1526c:	movt	r1, #1
   15270:	bl	11f08 <__isoc99_sscanf@plt>
   15274:	mov	r1, r0
   15278:	mvn	r0, #0
   1527c:	cmp	r1, #1
   15280:	bne	15548 <table_cell_from_buffer@@Base+0x65c>
   15284:	ldr	r3, [sp, #8]
   15288:	mov	r0, r6
   1528c:	mov	r1, r5
   15290:	mov	r2, r4
   15294:	bl	14588 <table_set_long@@Base>
   15298:	b	15544 <table_cell_from_buffer@@Base+0x658>
   1529c:	movw	r1, #22224	; 0x56d0
   152a0:	add	r2, sp, #8
   152a4:	mov	r0, r7
   152a8:	movt	r1, #1
   152ac:	bl	11f08 <__isoc99_sscanf@plt>
   152b0:	mov	r1, r0
   152b4:	mvn	r0, #0
   152b8:	cmp	r1, #1
   152bc:	bne	15548 <table_cell_from_buffer@@Base+0x65c>
   152c0:	ldr	r3, [sp, #8]
   152c4:	mov	r0, r6
   152c8:	mov	r1, r5
   152cc:	mov	r2, r4
   152d0:	bl	14608 <table_set_ulong@@Base>
   152d4:	b	15544 <table_cell_from_buffer@@Base+0x658>
   152d8:	movw	r1, #22202	; 0x56ba
   152dc:	add	r2, sp, #8
   152e0:	mov	r0, r7
   152e4:	movt	r1, #1
   152e8:	bl	11f08 <__isoc99_sscanf@plt>
   152ec:	mov	r1, r0
   152f0:	mvn	r0, #0
   152f4:	cmp	r1, #1
   152f8:	bne	15548 <table_cell_from_buffer@@Base+0x65c>
   152fc:	ldr	r0, [sp, #8]
   15300:	ldr	r1, [sp, #12]
   15304:	mov	r2, r4
   15308:	stm	sp, {r0, r1}
   1530c:	mov	r0, r6
   15310:	mov	r1, r5
   15314:	bl	14688 <table_set_llong@@Base>
   15318:	b	15544 <table_cell_from_buffer@@Base+0x658>
   1531c:	movw	r1, #22207	; 0x56bf
   15320:	add	r2, sp, #8
   15324:	mov	r0, r7
   15328:	movt	r1, #1
   1532c:	bl	11f08 <__isoc99_sscanf@plt>
   15330:	mov	r1, r0
   15334:	mvn	r0, #0
   15338:	cmp	r1, #1
   1533c:	bne	15548 <table_cell_from_buffer@@Base+0x65c>
   15340:	ldr	r0, [sp, #8]
   15344:	ldr	r1, [sp, #12]
   15348:	mov	r2, r4
   1534c:	stm	sp, {r0, r1}
   15350:	mov	r0, r6
   15354:	mov	r1, r5
   15358:	bl	14710 <table_set_ullong@@Base>
   1535c:	b	15544 <table_cell_from_buffer@@Base+0x658>
   15360:	movw	r1, #22231	; 0x56d7
   15364:	add	r2, sp, #8
   15368:	mov	r0, r7
   1536c:	movt	r1, #1
   15370:	bl	11f08 <__isoc99_sscanf@plt>
   15374:	mov	r1, r0
   15378:	mvn	r0, #0
   1537c:	cmp	r1, #1
   15380:	bne	15548 <table_cell_from_buffer@@Base+0x65c>
   15384:	vldr	s0, [sp, #8]
   15388:	mov	r0, r6
   1538c:	mov	r1, r5
   15390:	mov	r2, r4
   15394:	bl	14798 <table_set_float@@Base>
   15398:	b	15544 <table_cell_from_buffer@@Base+0x658>
   1539c:	movw	r1, #22234	; 0x56da
   153a0:	add	r2, sp, #8
   153a4:	mov	r0, r7
   153a8:	movt	r1, #1
   153ac:	bl	11f08 <__isoc99_sscanf@plt>
   153b0:	mov	r1, r0
   153b4:	mvn	r0, #0
   153b8:	cmp	r1, #1
   153bc:	bne	15548 <table_cell_from_buffer@@Base+0x65c>
   153c0:	vldr	d0, [sp, #8]
   153c4:	mov	r0, r6
   153c8:	mov	r1, r5
   153cc:	mov	r2, r4
   153d0:	bl	14824 <table_set_double@@Base>
   153d4:	b	15544 <table_cell_from_buffer@@Base+0x658>
   153d8:	movw	r1, #22238	; 0x56de
   153dc:	add	r2, sp, #8
   153e0:	mov	r0, r7
   153e4:	movt	r1, #1
   153e8:	bl	11f08 <__isoc99_sscanf@plt>
   153ec:	mov	r1, r0
   153f0:	mvn	r0, #0
   153f4:	cmp	r1, #1
   153f8:	bne	15548 <table_cell_from_buffer@@Base+0x65c>
   153fc:	vldr	d0, [sp, #8]
   15400:	mov	r0, r6
   15404:	mov	r1, r5
   15408:	mov	r2, r4
   1540c:	bl	148ac <table_set_ldouble@@Base>
   15410:	b	15544 <table_cell_from_buffer@@Base+0x658>
   15414:	movw	r1, #22242	; 0x56e2
   15418:	add	r2, sp, #8
   1541c:	mov	r0, r7
   15420:	movt	r1, #1
   15424:	bl	11f08 <__isoc99_sscanf@plt>
   15428:	mov	r1, r0
   1542c:	mvn	r0, #0
   15430:	cmp	r1, #1
   15434:	bne	15548 <table_cell_from_buffer@@Base+0x65c>
   15438:	ldrb	r3, [sp, #8]
   1543c:	mov	r0, r6
   15440:	mov	r1, r5
   15444:	mov	r2, r4
   15448:	bl	149bc <table_set_char@@Base>
   1544c:	b	15544 <table_cell_from_buffer@@Base+0x658>
   15450:	movw	r1, #22242	; 0x56e2
   15454:	add	r2, sp, #8
   15458:	mov	r0, r7
   1545c:	movt	r1, #1
   15460:	bl	11f08 <__isoc99_sscanf@plt>
   15464:	mov	r1, r0
   15468:	mvn	r0, #0
   1546c:	cmp	r1, #1
   15470:	bne	15548 <table_cell_from_buffer@@Base+0x65c>
   15474:	ldrb	r3, [sp, #8]
   15478:	mov	r0, r6
   1547c:	mov	r1, r5
   15480:	mov	r2, r4
   15484:	bl	14a3c <table_set_uchar@@Base>
   15488:	b	15544 <table_cell_from_buffer@@Base+0x658>
   1548c:	movw	r1, #22228	; 0x56d4
   15490:	add	r2, sp, #8
   15494:	mov	r0, r7
   15498:	movt	r1, #1
   1549c:	bl	11f08 <__isoc99_sscanf@plt>
   154a0:	mov	r1, r0
   154a4:	mvn	r0, #0
   154a8:	cmp	r1, #1
   154ac:	bne	15548 <table_cell_from_buffer@@Base+0x65c>
   154b0:	add	r3, sp, #8
   154b4:	mov	r0, r6
   154b8:	mov	r1, r5
   154bc:	mov	r2, r4
   154c0:	bl	14934 <table_set_string@@Base>
   154c4:	b	15544 <table_cell_from_buffer@@Base+0x658>
   154c8:	movw	r1, #22196	; 0x56b4
   154cc:	add	r2, sp, #8
   154d0:	mov	r0, r7
   154d4:	movt	r1, #1
   154d8:	bl	11f08 <__isoc99_sscanf@plt>
   154dc:	mov	r1, r0
   154e0:	mvn	r0, #0
   154e4:	cmp	r1, #1
   154e8:	bne	15548 <table_cell_from_buffer@@Base+0x65c>
   154ec:	ldr	r3, [sp, #8]
   154f0:	mov	r0, r6
   154f4:	mov	r1, r5
   154f8:	mov	r2, r4
   154fc:	cmp	r3, #0
   15500:	movwne	r3, #1
   15504:	bl	13ef8 <table_set_bool@@Base>
   15508:	b	15544 <table_cell_from_buffer@@Base+0x658>
   1550c:	movw	r1, #22245	; 0x56e5
   15510:	add	r2, sp, #8
   15514:	mov	r0, r7
   15518:	movt	r1, #1
   1551c:	bl	11f08 <__isoc99_sscanf@plt>
   15520:	mov	r1, r0
   15524:	mvn	r0, #0
   15528:	cmp	r1, #1
   1552c:	bne	15548 <table_cell_from_buffer@@Base+0x65c>
   15530:	ldr	r3, [sp, #8]
   15534:	mov	r0, r6
   15538:	mov	r1, r5
   1553c:	mov	r2, r4
   15540:	bl	14abc <table_set_ptr@@Base>
   15544:	mov	r0, #0
   15548:	sub	sp, fp, #24
   1554c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015550 <table_cell_nullify@@Base>:
   15550:	push	{r4, r5, fp, lr}
   15554:	add	fp, sp, #8
   15558:	mov	r4, r2
   1555c:	bl	1395c <table_get_row_ptr@@Base>
   15560:	ldr	r5, [r0]
   15564:	ldr	r0, [r5, r4, lsl #2]
   15568:	cmp	r0, #0
   1556c:	beq	1557c <table_cell_nullify@@Base+0x2c>
   15570:	bl	11ea8 <free@plt>
   15574:	mov	r0, #0
   15578:	str	r0, [r5, r4, lsl #2]
   1557c:	mov	r0, #0
   15580:	pop	{r4, r5, fp, pc}

00015584 <__libc_csu_init@@Base>:
   15584:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15588:	mov	r7, r0
   1558c:	ldr	r6, [pc, #72]	; 155dc <__libc_csu_init@@Base+0x58>
   15590:	ldr	r5, [pc, #72]	; 155e0 <__libc_csu_init@@Base+0x5c>
   15594:	add	r6, pc, r6
   15598:	add	r5, pc, r5
   1559c:	sub	r6, r6, r5
   155a0:	mov	r8, r1
   155a4:	mov	r9, r2
   155a8:	bl	11e70 <strcmp@plt-0x20>
   155ac:	asrs	r6, r6, #2
   155b0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   155b4:	mov	r4, #0
   155b8:	add	r4, r4, #1
   155bc:	ldr	r3, [r5], #4
   155c0:	mov	r2, r9
   155c4:	mov	r1, r8
   155c8:	mov	r0, r7
   155cc:	blx	r3
   155d0:	cmp	r6, r4
   155d4:	bne	155b8 <__libc_csu_init@@Base+0x34>
   155d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   155dc:	andeq	r0, r1, r0, ror r9
   155e0:	andeq	r0, r1, r8, ror #18

000155e4 <__libc_csu_fini@@Base>:
   155e4:	bx	lr

Disassembly of section .fini:

000155e8 <.fini>:
   155e8:	push	{r3, lr}
   155ec:	pop	{r3, pc}
