
../repos/stcorp-coda-3a25f25/codafind:     file format elf32-littlearm


Disassembly of section .init:

00010900 <.init>:
   10900:	push	{r3, lr}
   10904:	bl	10a28 <_start@@Base+0x3c>
   10908:	pop	{r3, pc}

Disassembly of section .plt:

0001090c <coda_match_filefilter@plt-0x14>:
   1090c:	push	{lr}		; (str lr, [sp, #-4]!)
   10910:	ldr	lr, [pc, #4]	; 1091c <coda_match_filefilter@plt-0x4>
   10914:	add	lr, pc, lr
   10918:	ldr	pc, [lr, #8]!
   1091c:	andeq	r1, r1, r4, ror #13

00010920 <coda_match_filefilter@plt>:
   10920:	add	ip, pc, #0, 12
   10924:	add	ip, ip, #69632	; 0x11000
   10928:	ldr	pc, [ip, #1764]!	; 0x6e4

0001092c <strcmp@plt>:
   1092c:	add	ip, pc, #0, 12
   10930:	add	ip, ip, #69632	; 0x11000
   10934:	ldr	pc, [ip, #1756]!	; 0x6dc

00010938 <printf@plt>:
   10938:	add	ip, pc, #0, 12
   1093c:	add	ip, ip, #69632	; 0x11000
   10940:	ldr	pc, [ip, #1748]!	; 0x6d4

00010944 <coda_set_definition_path_conditional@plt>:
   10944:	add	ip, pc, #0, 12
   10948:	add	ip, ip, #69632	; 0x11000
   1094c:	ldr	pc, [ip, #1740]!	; 0x6cc

00010950 <coda_set_definition_path@plt>:
   10950:	add	ip, pc, #0, 12
   10954:	add	ip, ip, #69632	; 0x11000
   10958:	ldr	pc, [ip, #1732]!	; 0x6c4

0001095c <coda_done@plt>:
   1095c:	add	ip, pc, #0, 12
   10960:	add	ip, ip, #69632	; 0x11000
   10964:	ldr	pc, [ip, #1724]!	; 0x6bc

00010968 <__libc_start_main@plt>:
   10968:	add	ip, pc, #0, 12
   1096c:	add	ip, ip, #69632	; 0x11000
   10970:	ldr	pc, [ip, #1716]!	; 0x6b4

00010974 <__gmon_start__@plt>:
   10974:	add	ip, pc, #0, 12
   10978:	add	ip, ip, #69632	; 0x11000
   1097c:	ldr	pc, [ip, #1708]!	; 0x6ac

00010980 <exit@plt>:
   10980:	add	ip, pc, #0, 12
   10984:	add	ip, ip, #69632	; 0x11000
   10988:	ldr	pc, [ip, #1700]!	; 0x6a4

0001098c <fprintf@plt>:
   1098c:	add	ip, pc, #0, 12
   10990:	add	ip, ip, #69632	; 0x11000
   10994:	ldr	pc, [ip, #1692]!	; 0x69c

00010998 <coda_init@plt>:
   10998:	add	ip, pc, #0, 12
   1099c:	add	ip, ip, #69632	; 0x11000
   109a0:	ldr	pc, [ip, #1684]!	; 0x694

000109a4 <coda_set_option_perform_conversions@plt>:
   109a4:	add	ip, pc, #0, 12
   109a8:	add	ip, ip, #69632	; 0x11000
   109ac:	ldr	pc, [ip, #1676]!	; 0x68c

000109b0 <coda_errno_to_string@plt>:
   109b0:	add	ip, pc, #0, 12
   109b4:	add	ip, ip, #69632	; 0x11000
   109b8:	ldr	pc, [ip, #1668]!	; 0x684

000109bc <coda_get_libcoda_version@plt>:
   109bc:	add	ip, pc, #0, 12
   109c0:	add	ip, ip, #69632	; 0x11000
   109c4:	ldr	pc, [ip, #1660]!	; 0x67c

000109c8 <coda_get_errno@plt>:
   109c8:	add	ip, pc, #0, 12
   109cc:	add	ip, ip, #69632	; 0x11000
   109d0:	ldr	pc, [ip, #1652]!	; 0x674

000109d4 <abort@plt>:
   109d4:	add	ip, pc, #0, 12
   109d8:	add	ip, ip, #69632	; 0x11000
   109dc:	ldr	pc, [ip, #1644]!	; 0x66c

000109e0 <__assert_fail@plt>:
   109e0:	add	ip, pc, #0, 12
   109e4:	add	ip, ip, #69632	; 0x11000
   109e8:	ldr	pc, [ip, #1636]!	; 0x664

Disassembly of section .text:

000109ec <_start@@Base>:
   109ec:	mov	fp, #0
   109f0:	mov	lr, #0
   109f4:	pop	{r1}		; (ldr r1, [sp], #4)
   109f8:	mov	r2, sp
   109fc:	push	{r2}		; (str r2, [sp, #-4]!)
   10a00:	push	{r0}		; (str r0, [sp, #-4]!)
   10a04:	ldr	ip, [pc, #16]	; 10a1c <_start@@Base+0x30>
   10a08:	push	{ip}		; (str ip, [sp, #-4]!)
   10a0c:	ldr	r0, [pc, #12]	; 10a20 <_start@@Base+0x34>
   10a10:	ldr	r3, [pc, #12]	; 10a24 <_start@@Base+0x38>
   10a14:	bl	10968 <__libc_start_main@plt>
   10a18:	bl	109d4 <abort@plt>
   10a1c:	andeq	r1, r1, r4, lsr r5
   10a20:	andeq	r0, r1, r4, lsr #25
   10a24:	ldrdeq	r1, [r1], -r4
   10a28:	ldr	r3, [pc, #20]	; 10a44 <_start@@Base+0x58>
   10a2c:	ldr	r2, [pc, #20]	; 10a48 <_start@@Base+0x5c>
   10a30:	add	r3, pc, r3
   10a34:	ldr	r2, [r3, r2]
   10a38:	cmp	r2, #0
   10a3c:	bxeq	lr
   10a40:	b	10974 <__gmon_start__@plt>
   10a44:	andeq	r1, r1, r8, asr #11
   10a48:	andeq	r0, r0, r4, asr r0
   10a4c:	ldr	r0, [pc, #24]	; 10a6c <_start@@Base+0x80>
   10a50:	ldr	r3, [pc, #24]	; 10a70 <_start@@Base+0x84>
   10a54:	cmp	r3, r0
   10a58:	bxeq	lr
   10a5c:	ldr	r3, [pc, #16]	; 10a74 <_start@@Base+0x88>
   10a60:	cmp	r3, #0
   10a64:	bxeq	lr
   10a68:	bx	r3
   10a6c:	andeq	r2, r2, r4, rrx
   10a70:	andeq	r2, r2, r4, rrx
   10a74:	andeq	r0, r0, r0
   10a78:	ldr	r0, [pc, #36]	; 10aa4 <_start@@Base+0xb8>
   10a7c:	ldr	r1, [pc, #36]	; 10aa8 <_start@@Base+0xbc>
   10a80:	sub	r1, r1, r0
   10a84:	asr	r1, r1, #2
   10a88:	add	r1, r1, r1, lsr #31
   10a8c:	asrs	r1, r1, #1
   10a90:	bxeq	lr
   10a94:	ldr	r3, [pc, #16]	; 10aac <_start@@Base+0xc0>
   10a98:	cmp	r3, #0
   10a9c:	bxeq	lr
   10aa0:	bx	r3
   10aa4:	andeq	r2, r2, r4, rrx
   10aa8:	andeq	r2, r2, r4, rrx
   10aac:	andeq	r0, r0, r0
   10ab0:	push	{r4, lr}
   10ab4:	ldr	r4, [pc, #24]	; 10ad4 <_start@@Base+0xe8>
   10ab8:	ldrb	r3, [r4]
   10abc:	cmp	r3, #0
   10ac0:	popne	{r4, pc}
   10ac4:	bl	10a4c <_start@@Base+0x60>
   10ac8:	mov	r3, #1
   10acc:	strb	r3, [r4]
   10ad0:	pop	{r4, pc}
   10ad4:	andeq	r2, r2, r4, rrx
   10ad8:	b	10a78 <_start@@Base+0x8c>

00010adc <callback@@Base>:
   10adc:	push	{fp, lr}
   10ae0:	mov	fp, sp
   10ae4:	sub	sp, sp, #24
   10ae8:	str	r0, [fp, #-4]
   10aec:	str	r1, [fp, #-8]
   10af0:	str	r2, [sp, #12]
   10af4:	str	r3, [sp, #8]
   10af8:	ldr	r0, [fp, #-8]
   10afc:	cmp	r0, #0
   10b00:	bne	10b28 <callback@@Base+0x4c>
   10b04:	ldr	r0, [pc, #396]	; 10c98 <callback@@Base+0x1bc>
   10b08:	add	r1, pc, r0
   10b0c:	ldr	r0, [pc, #392]	; 10c9c <callback@@Base+0x1c0>
   10b10:	ldr	r0, [pc, r0]
   10b14:	ldr	r0, [r0]
   10b18:	ldr	r2, [fp, #-4]
   10b1c:	ldr	r3, [sp, #12]
   10b20:	bl	1098c <fprintf@plt>
   10b24:	b	10c5c <callback@@Base+0x180>
   10b28:	ldr	r0, [fp, #-8]
   10b2c:	cmp	r0, #2
   10b30:	bne	10b54 <callback@@Base+0x78>
   10b34:	ldr	r0, [pc, #340]	; 10c90 <callback@@Base+0x1b4>
   10b38:	add	r1, pc, r0
   10b3c:	ldr	r0, [pc, #336]	; 10c94 <callback@@Base+0x1b8>
   10b40:	ldr	r0, [pc, r0]
   10b44:	ldr	r0, [r0]
   10b48:	ldr	r2, [fp, #-4]
   10b4c:	bl	1098c <fprintf@plt>
   10b50:	b	10c58 <callback@@Base+0x17c>
   10b54:	ldr	r0, [fp, #-8]
   10b58:	cmp	r0, #1
   10b5c:	bne	10b84 <callback@@Base+0xa8>
   10b60:	ldr	r0, [pc, #288]	; 10c88 <callback@@Base+0x1ac>
   10b64:	add	r1, pc, r0
   10b68:	ldr	r0, [pc, #284]	; 10c8c <callback@@Base+0x1b0>
   10b6c:	ldr	r0, [pc, r0]
   10b70:	ldr	r0, [r0]
   10b74:	ldr	r2, [fp, #-4]
   10b78:	ldr	r3, [sp, #12]
   10b7c:	bl	1098c <fprintf@plt>
   10b80:	b	10c54 <callback@@Base+0x178>
   10b84:	ldr	r0, [pc, #220]	; 10c68 <callback@@Base+0x18c>
   10b88:	add	r0, pc, r0
   10b8c:	ldr	r0, [r0]
   10b90:	cmp	r0, #0
   10b94:	beq	10c30 <callback@@Base+0x154>
   10b98:	ldr	r1, [fp, #-4]
   10b9c:	ldr	r0, [pc, #252]	; 10ca0 <callback@@Base+0x1c4>
   10ba0:	add	r0, pc, r0
   10ba4:	bl	10938 <printf@plt>
   10ba8:	ldr	r1, [fp, #-8]
   10bac:	cmp	r1, #5
   10bb0:	str	r1, [sp, #4]
   10bb4:	bhi	10c2c <callback@@Base+0x150>
   10bb8:	add	r0, pc, #8
   10bbc:	ldr	r1, [sp, #4]
   10bc0:	ldr	r2, [r0, r1, lsl #2]
   10bc4:	add	pc, r0, r2
   10bc8:	andeq	r0, r0, r8, lsl r0
   10bcc:	andeq	r0, r0, r8, lsl r0
   10bd0:	andeq	r0, r0, r8, lsl r0
   10bd4:	andeq	r0, r0, r8, lsr r0
   10bd8:	andeq	r0, r0, r8, asr r0
   10bdc:	andeq	r0, r0, r8, asr #32
   10be0:	ldr	r0, [pc, #148]	; 10c7c <callback@@Base+0x1a0>
   10be4:	add	r0, pc, r0
   10be8:	ldr	r1, [pc, #144]	; 10c80 <callback@@Base+0x1a4>
   10bec:	add	r1, pc, r1
   10bf0:	ldr	r2, [pc, #140]	; 10c84 <callback@@Base+0x1a8>
   10bf4:	add	r3, pc, r2
   10bf8:	movw	r2, #110	; 0x6e
   10bfc:	bl	109e0 <__assert_fail@plt>
   10c00:	ldr	r0, [pc, #112]	; 10c78 <callback@@Base+0x19c>
   10c04:	add	r0, pc, r0
   10c08:	bl	10938 <printf@plt>
   10c0c:	b	10c2c <callback@@Base+0x150>
   10c10:	ldr	r0, [pc, #92]	; 10c74 <callback@@Base+0x198>
   10c14:	add	r0, pc, r0
   10c18:	bl	10938 <printf@plt>
   10c1c:	b	10c2c <callback@@Base+0x150>
   10c20:	ldr	r0, [pc, #72]	; 10c70 <callback@@Base+0x194>
   10c24:	add	r0, pc, r0
   10c28:	bl	10938 <printf@plt>
   10c2c:	b	10c50 <callback@@Base+0x174>
   10c30:	ldr	r0, [fp, #-8]
   10c34:	cmp	r0, #4
   10c38:	bne	10c4c <callback@@Base+0x170>
   10c3c:	ldr	r0, [pc, #40]	; 10c6c <callback@@Base+0x190>
   10c40:	add	r0, pc, r0
   10c44:	ldr	r1, [fp, #-4]
   10c48:	bl	10938 <printf@plt>
   10c4c:	b	10c50 <callback@@Base+0x174>
   10c50:	b	10c54 <callback@@Base+0x178>
   10c54:	b	10c58 <callback@@Base+0x17c>
   10c58:	b	10c5c <callback@@Base+0x180>
   10c5c:	movw	r0, #0
   10c60:	mov	sp, fp
   10c64:	pop	{fp, pc}
   10c68:	ldrdeq	r1, [r1], -r8
   10c6c:	andeq	r0, r0, sl, asr #20
   10c70:	andeq	r0, r0, r4, lsr #20
   10c74:	andeq	r0, r0, r1, lsr sl
   10c78:	andeq	r0, r0, ip, lsr #20
   10c7c:	andeq	r0, r0, r5, lsr #19
   10c80:	muleq	r0, pc, r9	; <UNPREDICTABLE>
   10c84:	strdeq	r0, [r0], -r3
   10c88:	andeq	r0, r0, r0, lsl #20
   10c8c:	ldrdeq	r1, [r1], -ip
   10c90:	andeq	r0, r0, ip, lsl #20
   10c94:	andeq	r1, r1, r8, lsl #10
   10c98:	andeq	r0, r0, r4, lsr sl
   10c9c:	andeq	r1, r1, r8, lsr r5
   10ca0:	andeq	r0, r0, r2, ror #19

00010ca4 <main@@Base>:
   10ca4:	push	{fp, lr}
   10ca8:	mov	fp, sp
   10cac:	sub	sp, sp, #88	; 0x58
   10cb0:	ldr	r2, [pc, #1168]	; 11148 <main@@Base+0x4a4>
   10cb4:	add	r2, pc, r2
   10cb8:	movw	r3, #0
   10cbc:	str	r3, [fp, #-4]
   10cc0:	str	r0, [fp, #-8]
   10cc4:	str	r1, [fp, #-12]
   10cc8:	str	r3, [fp, #-16]
   10ccc:	str	r3, [r2]
   10cd0:	movw	r0, #1
   10cd4:	str	r0, [fp, #-20]	; 0xffffffec
   10cd8:	ldr	r0, [fp, #-8]
   10cdc:	cmp	r0, #1
   10ce0:	beq	10d1c <main@@Base+0x78>
   10ce4:	ldr	r0, [fp, #-12]
   10ce8:	ldr	r0, [r0, #4]
   10cec:	ldr	r1, [pc, #1164]	; 11180 <main@@Base+0x4dc>
   10cf0:	add	r1, pc, r1
   10cf4:	bl	1092c <strcmp@plt>
   10cf8:	cmp	r0, #0
   10cfc:	beq	10d1c <main@@Base+0x78>
   10d00:	ldr	r0, [fp, #-12]
   10d04:	ldr	r0, [r0, #4]
   10d08:	ldr	r1, [pc, #1140]	; 11184 <main@@Base+0x4e0>
   10d0c:	add	r1, pc, r1
   10d10:	bl	1092c <strcmp@plt>
   10d14:	cmp	r0, #0
   10d18:	bne	10d28 <main@@Base+0x84>
   10d1c:	bl	111ac <main@@Base+0x508>
   10d20:	movw	r0, #0
   10d24:	bl	10980 <exit@plt>
   10d28:	ldr	r0, [fp, #-12]
   10d2c:	ldr	r0, [r0, #4]
   10d30:	ldr	r1, [pc, #1104]	; 11188 <main@@Base+0x4e4>
   10d34:	add	r1, pc, r1
   10d38:	bl	1092c <strcmp@plt>
   10d3c:	cmp	r0, #0
   10d40:	beq	10d60 <main@@Base+0xbc>
   10d44:	ldr	r0, [fp, #-12]
   10d48:	ldr	r0, [r0, #4]
   10d4c:	ldr	r1, [pc, #1080]	; 1118c <main@@Base+0x4e8>
   10d50:	add	r1, pc, r1
   10d54:	bl	1092c <strcmp@plt>
   10d58:	cmp	r0, #0
   10d5c:	bne	10d6c <main@@Base+0xc8>
   10d60:	bl	11470 <main@@Base+0x7cc>
   10d64:	movw	r0, #0
   10d68:	bl	10980 <exit@plt>
   10d6c:	movw	r0, #1
   10d70:	str	r0, [fp, #-24]	; 0xffffffe8
   10d74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10d78:	add	r0, r0, #1
   10d7c:	ldr	r1, [fp, #-8]
   10d80:	cmp	r0, r1
   10d84:	bge	10dd4 <main@@Base+0x130>
   10d88:	ldr	r0, [fp, #-12]
   10d8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10d90:	add	r0, r0, r1, lsl #2
   10d94:	ldr	r0, [r0]
   10d98:	ldr	r1, [pc, #1008]	; 11190 <main@@Base+0x4ec>
   10d9c:	add	r1, pc, r1
   10da0:	bl	1092c <strcmp@plt>
   10da4:	cmp	r0, #0
   10da8:	bne	10dd4 <main@@Base+0x130>
   10dac:	ldr	r0, [fp, #-12]
   10db0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10db4:	add	r1, r1, #1
   10db8:	add	r0, r0, r1, lsl #2
   10dbc:	ldr	r0, [r0]
   10dc0:	bl	10950 <coda_set_definition_path@plt>
   10dc4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10dc8:	add	r1, r1, #2
   10dcc:	str	r1, [fp, #-24]	; 0xffffffe8
   10dd0:	b	10e48 <main@@Base+0x1a4>
   10dd4:	ldr	r0, [pc, #880]	; 1114c <main@@Base+0x4a8>
   10dd8:	add	r0, pc, r0
   10ddc:	str	r0, [fp, #-28]	; 0xffffffe4
   10de0:	ldr	r0, [fp, #-12]
   10de4:	ldr	r0, [r0]
   10de8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   10dec:	movw	r1, #0
   10df0:	bl	10944 <coda_set_definition_path_conditional@plt>
   10df4:	cmp	r0, #0
   10df8:	beq	10e44 <main@@Base+0x1a0>
   10dfc:	ldr	r0, [pc, #848]	; 11154 <main@@Base+0x4b0>
   10e00:	ldr	r0, [pc, r0]
   10e04:	ldr	r0, [r0]
   10e08:	str	r0, [fp, #-32]	; 0xffffffe0
   10e0c:	bl	109c8 <coda_get_errno@plt>
   10e10:	ldr	r0, [r0]
   10e14:	bl	109b0 <coda_errno_to_string@plt>
   10e18:	ldr	r1, [pc, #816]	; 11150 <main@@Base+0x4ac>
   10e1c:	add	r1, pc, r1
   10e20:	ldr	r2, [fp, #-32]	; 0xffffffe0
   10e24:	str	r0, [fp, #-36]	; 0xffffffdc
   10e28:	mov	r0, r2
   10e2c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   10e30:	bl	1098c <fprintf@plt>
   10e34:	movw	r1, #1
   10e38:	str	r0, [fp, #-40]	; 0xffffffd8
   10e3c:	mov	r0, r1
   10e40:	bl	10980 <exit@plt>
   10e44:	b	10e48 <main@@Base+0x1a4>
   10e48:	b	10e4c <main@@Base+0x1a8>
   10e4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10e50:	ldr	r1, [fp, #-8]
   10e54:	cmp	r0, r1
   10e58:	bge	11010 <main@@Base+0x36c>
   10e5c:	ldr	r0, [fp, #-12]
   10e60:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10e64:	add	r0, r0, r1, lsl #2
   10e68:	ldr	r0, [r0]
   10e6c:	ldr	r1, [pc, #800]	; 11194 <main@@Base+0x4f0>
   10e70:	add	r1, pc, r1
   10e74:	bl	1092c <strcmp@plt>
   10e78:	cmp	r0, #0
   10e7c:	beq	10ea4 <main@@Base+0x200>
   10e80:	ldr	r0, [fp, #-12]
   10e84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10e88:	add	r0, r0, r1, lsl #2
   10e8c:	ldr	r0, [r0]
   10e90:	ldr	r1, [pc, #768]	; 11198 <main@@Base+0x4f4>
   10e94:	add	r1, pc, r1
   10e98:	bl	1092c <strcmp@plt>
   10e9c:	cmp	r0, #0
   10ea0:	bne	10eb0 <main@@Base+0x20c>
   10ea4:	movw	r0, #0
   10ea8:	str	r0, [fp, #-20]	; 0xffffffec
   10eac:	b	11000 <main@@Base+0x35c>
   10eb0:	ldr	r0, [fp, #-12]
   10eb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10eb8:	add	r0, r0, r1, lsl #2
   10ebc:	ldr	r0, [r0]
   10ec0:	ldr	r1, [pc, #724]	; 1119c <main@@Base+0x4f8>
   10ec4:	add	r1, pc, r1
   10ec8:	bl	1092c <strcmp@plt>
   10ecc:	cmp	r0, #0
   10ed0:	beq	10ef8 <main@@Base+0x254>
   10ed4:	ldr	r0, [fp, #-12]
   10ed8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10edc:	add	r0, r0, r1, lsl #2
   10ee0:	ldr	r0, [r0]
   10ee4:	ldr	r1, [pc, #692]	; 111a0 <main@@Base+0x4fc>
   10ee8:	add	r1, pc, r1
   10eec:	bl	1092c <strcmp@plt>
   10ef0:	cmp	r0, #0
   10ef4:	bne	10f54 <main@@Base+0x2b0>
   10ef8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10efc:	add	r0, r0, #1
   10f00:	ldr	r1, [fp, #-8]
   10f04:	cmp	r0, r1
   10f08:	bge	10f54 <main@@Base+0x2b0>
   10f0c:	ldr	r0, [fp, #-12]
   10f10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10f14:	add	r1, r1, #1
   10f18:	add	r0, r0, r1, lsl #2
   10f1c:	ldr	r0, [r0]
   10f20:	ldrb	r0, [r0]
   10f24:	cmp	r0, #45	; 0x2d
   10f28:	beq	10f54 <main@@Base+0x2b0>
   10f2c:	ldr	r0, [fp, #-12]
   10f30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10f34:	add	r1, r1, #1
   10f38:	add	r0, r0, r1, lsl #2
   10f3c:	ldr	r0, [r0]
   10f40:	str	r0, [fp, #-16]
   10f44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10f48:	add	r0, r0, #1
   10f4c:	str	r0, [fp, #-24]	; 0xffffffe8
   10f50:	b	10ffc <main@@Base+0x358>
   10f54:	ldr	r0, [fp, #-12]
   10f58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10f5c:	add	r0, r0, r1, lsl #2
   10f60:	ldr	r0, [r0]
   10f64:	ldr	r1, [pc, #568]	; 111a4 <main@@Base+0x500>
   10f68:	add	r1, pc, r1
   10f6c:	bl	1092c <strcmp@plt>
   10f70:	cmp	r0, #0
   10f74:	beq	10f9c <main@@Base+0x2f8>
   10f78:	ldr	r0, [fp, #-12]
   10f7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10f80:	add	r0, r0, r1, lsl #2
   10f84:	ldr	r0, [r0]
   10f88:	ldr	r1, [pc, #536]	; 111a8 <main@@Base+0x504>
   10f8c:	add	r1, pc, r1
   10f90:	bl	1092c <strcmp@plt>
   10f94:	cmp	r0, #0
   10f98:	bne	10fb0 <main@@Base+0x30c>
   10f9c:	ldr	r0, [pc, #472]	; 1117c <main@@Base+0x4d8>
   10fa0:	add	r0, pc, r0
   10fa4:	movw	r1, #1
   10fa8:	str	r1, [r0]
   10fac:	b	10ff8 <main@@Base+0x354>
   10fb0:	ldr	r0, [fp, #-12]
   10fb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10fb8:	add	r0, r0, r1, lsl #2
   10fbc:	ldr	r0, [r0]
   10fc0:	ldrb	r0, [r0]
   10fc4:	cmp	r0, #45	; 0x2d
   10fc8:	beq	10fd0 <main@@Base+0x32c>
   10fcc:	b	11010 <main@@Base+0x36c>
   10fd0:	ldr	r0, [pc, #384]	; 11158 <main@@Base+0x4b4>
   10fd4:	add	r1, pc, r0
   10fd8:	ldr	r0, [pc, #380]	; 1115c <main@@Base+0x4b8>
   10fdc:	ldr	r0, [pc, r0]
   10fe0:	ldr	r0, [r0]
   10fe4:	bl	1098c <fprintf@plt>
   10fe8:	str	r0, [sp, #44]	; 0x2c
   10fec:	bl	111ac <main@@Base+0x508>
   10ff0:	movw	r0, #1
   10ff4:	bl	10980 <exit@plt>
   10ff8:	b	10ffc <main@@Base+0x358>
   10ffc:	b	11000 <main@@Base+0x35c>
   11000:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11004:	add	r0, r0, #1
   11008:	str	r0, [fp, #-24]	; 0xffffffe8
   1100c:	b	10e4c <main@@Base+0x1a8>
   11010:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11014:	ldr	r1, [fp, #-8]
   11018:	cmp	r0, r1
   1101c:	bne	11048 <main@@Base+0x3a4>
   11020:	ldr	r0, [pc, #332]	; 11174 <main@@Base+0x4d0>
   11024:	add	r1, pc, r0
   11028:	ldr	r0, [pc, #328]	; 11178 <main@@Base+0x4d4>
   1102c:	ldr	r0, [pc, r0]
   11030:	ldr	r0, [r0]
   11034:	bl	1098c <fprintf@plt>
   11038:	str	r0, [sp, #40]	; 0x28
   1103c:	bl	111ac <main@@Base+0x508>
   11040:	movw	r0, #1
   11044:	bl	10980 <exit@plt>
   11048:	bl	10998 <coda_init@plt>
   1104c:	cmp	r0, #0
   11050:	beq	1109c <main@@Base+0x3f8>
   11054:	ldr	r0, [pc, #276]	; 11170 <main@@Base+0x4cc>
   11058:	ldr	r0, [pc, r0]
   1105c:	ldr	r0, [r0]
   11060:	str	r0, [sp, #36]	; 0x24
   11064:	bl	109c8 <coda_get_errno@plt>
   11068:	ldr	r0, [r0]
   1106c:	bl	109b0 <coda_errno_to_string@plt>
   11070:	ldr	r1, [pc, #244]	; 1116c <main@@Base+0x4c8>
   11074:	add	r1, pc, r1
   11078:	ldr	r2, [sp, #36]	; 0x24
   1107c:	str	r0, [sp, #32]
   11080:	mov	r0, r2
   11084:	ldr	r2, [sp, #32]
   11088:	bl	1098c <fprintf@plt>
   1108c:	movw	r1, #1
   11090:	str	r0, [sp, #28]
   11094:	mov	r0, r1
   11098:	bl	10980 <exit@plt>
   1109c:	ldr	r0, [pc, #188]	; 11160 <main@@Base+0x4bc>
   110a0:	ldr	r3, [pc, r0]
   110a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   110a8:	str	r3, [sp, #24]
   110ac:	bl	109a4 <coda_set_option_perform_conversions@plt>
   110b0:	ldr	r1, [fp, #-16]
   110b4:	ldr	r2, [fp, #-8]
   110b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   110bc:	sub	r2, r2, r3
   110c0:	ldr	ip, [fp, #-12]
   110c4:	add	r3, ip, r3, lsl #2
   110c8:	str	r0, [sp, #20]
   110cc:	mov	r0, r1
   110d0:	mov	r1, r2
   110d4:	mov	r2, r3
   110d8:	ldr	r3, [sp, #24]
   110dc:	movw	ip, #0
   110e0:	str	ip, [sp]
   110e4:	bl	10920 <coda_match_filefilter@plt>
   110e8:	cmp	r0, #0
   110ec:	beq	11138 <main@@Base+0x494>
   110f0:	ldr	r0, [pc, #112]	; 11168 <main@@Base+0x4c4>
   110f4:	ldr	r0, [pc, r0]
   110f8:	ldr	r0, [r0]
   110fc:	str	r0, [sp, #16]
   11100:	bl	109c8 <coda_get_errno@plt>
   11104:	ldr	r0, [r0]
   11108:	bl	109b0 <coda_errno_to_string@plt>
   1110c:	ldr	r1, [pc, #80]	; 11164 <main@@Base+0x4c0>
   11110:	add	r1, pc, r1
   11114:	ldr	r2, [sp, #16]
   11118:	str	r0, [sp, #12]
   1111c:	mov	r0, r2
   11120:	ldr	r2, [sp, #12]
   11124:	bl	1098c <fprintf@plt>
   11128:	movw	r1, #1
   1112c:	str	r0, [sp, #8]
   11130:	mov	r0, r1
   11134:	bl	10980 <exit@plt>
   11138:	bl	1095c <coda_done@plt>
   1113c:	movw	r0, #0
   11140:	mov	sp, fp
   11144:	pop	{fp, pc}
   11148:	andeq	r1, r1, ip, lsr #7
   1114c:	muleq	r0, r1, r8
   11150:	andeq	r0, r0, r7, ror #16
   11154:	andeq	r1, r1, r8, asr #4
   11158:	andeq	r0, r0, lr, ror #13
   1115c:	andeq	r1, r1, ip, rrx
   11160:			; <UNDEFINED> instruction: 0x00010fb0
   11164:	andeq	r0, r0, r3, ror r5
   11168:	andeq	r0, r1, r4, asr pc
   1116c:	andeq	r0, r0, pc, lsl #12
   11170:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   11174:	muleq	r0, lr, r6
   11178:	andeq	r1, r1, ip, lsl r0
   1117c:	andeq	r1, r1, r0, asr #1
   11180:	andeq	r0, r0, pc, asr r9
   11184:	andeq	r0, r0, r6, asr #18
   11188:	andeq	r0, r0, r5, lsr #18
   1118c:	andeq	r0, r0, ip, lsl #18
   11190:	andeq	r0, r0, sl, asr #17
   11194:	andeq	r0, r0, lr, lsl r8
   11198:	strdeq	r0, [r0], -sp
   1119c:	andeq	r0, r0, r3, ror #15
   111a0:	andeq	r0, r0, r2, asr #15
   111a4:	andeq	r0, r0, fp, asr #14
   111a8:	andeq	r0, r0, sl, lsr #14
   111ac:	push	{fp, lr}
   111b0:	mov	fp, sp
   111b4:	sub	sp, sp, #112	; 0x70
   111b8:	ldr	r0, [pc, #684]	; 1146c <main@@Base+0x7c8>
   111bc:	add	r0, pc, r0
   111c0:	bl	10938 <printf@plt>
   111c4:	ldr	r1, [pc, #668]	; 11468 <main@@Base+0x7c4>
   111c8:	add	r1, pc, r1
   111cc:	str	r0, [fp, #-4]
   111d0:	mov	r0, r1
   111d4:	bl	10938 <printf@plt>
   111d8:	ldr	r1, [pc, #644]	; 11464 <main@@Base+0x7c0>
   111dc:	add	r1, pc, r1
   111e0:	str	r0, [fp, #-8]
   111e4:	mov	r0, r1
   111e8:	bl	10938 <printf@plt>
   111ec:	ldr	r1, [pc, #620]	; 11460 <main@@Base+0x7bc>
   111f0:	add	r1, pc, r1
   111f4:	str	r0, [fp, #-12]
   111f8:	mov	r0, r1
   111fc:	bl	10938 <printf@plt>
   11200:	ldr	r1, [pc, #596]	; 1145c <main@@Base+0x7b8>
   11204:	add	r1, pc, r1
   11208:	str	r0, [fp, #-16]
   1120c:	mov	r0, r1
   11210:	bl	10938 <printf@plt>
   11214:	ldr	r1, [pc, #572]	; 11458 <main@@Base+0x7b4>
   11218:	add	r1, pc, r1
   1121c:	str	r0, [fp, #-20]	; 0xffffffec
   11220:	mov	r0, r1
   11224:	bl	10938 <printf@plt>
   11228:	ldr	r1, [pc, #548]	; 11454 <main@@Base+0x7b0>
   1122c:	add	r1, pc, r1
   11230:	str	r0, [fp, #-24]	; 0xffffffe8
   11234:	mov	r0, r1
   11238:	bl	10938 <printf@plt>
   1123c:	ldr	r1, [pc, #524]	; 11450 <main@@Base+0x7ac>
   11240:	add	r1, pc, r1
   11244:	str	r0, [fp, #-28]	; 0xffffffe4
   11248:	mov	r0, r1
   1124c:	bl	10938 <printf@plt>
   11250:	ldr	r1, [pc, #500]	; 1144c <main@@Base+0x7a8>
   11254:	add	r1, pc, r1
   11258:	str	r0, [fp, #-32]	; 0xffffffe0
   1125c:	mov	r0, r1
   11260:	bl	10938 <printf@plt>
   11264:	ldr	r1, [pc, #476]	; 11448 <main@@Base+0x7a4>
   11268:	add	r1, pc, r1
   1126c:	str	r0, [fp, #-36]	; 0xffffffdc
   11270:	mov	r0, r1
   11274:	bl	10938 <printf@plt>
   11278:	ldr	r1, [pc, #452]	; 11444 <main@@Base+0x7a0>
   1127c:	add	r1, pc, r1
   11280:	str	r0, [fp, #-40]	; 0xffffffd8
   11284:	mov	r0, r1
   11288:	bl	10938 <printf@plt>
   1128c:	ldr	r1, [pc, #428]	; 11440 <main@@Base+0x79c>
   11290:	add	r1, pc, r1
   11294:	str	r0, [fp, #-44]	; 0xffffffd4
   11298:	mov	r0, r1
   1129c:	bl	10938 <printf@plt>
   112a0:	ldr	r1, [pc, #404]	; 1143c <main@@Base+0x798>
   112a4:	add	r1, pc, r1
   112a8:	str	r0, [fp, #-48]	; 0xffffffd0
   112ac:	mov	r0, r1
   112b0:	bl	10938 <printf@plt>
   112b4:	ldr	r1, [pc, #380]	; 11438 <main@@Base+0x794>
   112b8:	add	r1, pc, r1
   112bc:	str	r0, [fp, #-52]	; 0xffffffcc
   112c0:	mov	r0, r1
   112c4:	bl	10938 <printf@plt>
   112c8:	ldr	r1, [pc, #356]	; 11434 <main@@Base+0x790>
   112cc:	add	r1, pc, r1
   112d0:	str	r0, [sp, #56]	; 0x38
   112d4:	mov	r0, r1
   112d8:	bl	10938 <printf@plt>
   112dc:	ldr	r1, [pc, #332]	; 11430 <main@@Base+0x78c>
   112e0:	add	r1, pc, r1
   112e4:	str	r0, [sp, #52]	; 0x34
   112e8:	mov	r0, r1
   112ec:	bl	10938 <printf@plt>
   112f0:	ldr	r1, [pc, #308]	; 1142c <main@@Base+0x788>
   112f4:	add	r1, pc, r1
   112f8:	str	r0, [sp, #48]	; 0x30
   112fc:	mov	r0, r1
   11300:	bl	10938 <printf@plt>
   11304:	ldr	r1, [pc, #284]	; 11428 <main@@Base+0x784>
   11308:	add	r1, pc, r1
   1130c:	str	r0, [sp, #44]	; 0x2c
   11310:	mov	r0, r1
   11314:	bl	10938 <printf@plt>
   11318:	ldr	r1, [pc, #260]	; 11424 <main@@Base+0x780>
   1131c:	add	r1, pc, r1
   11320:	str	r0, [sp, #40]	; 0x28
   11324:	mov	r0, r1
   11328:	bl	10938 <printf@plt>
   1132c:	ldr	r1, [pc, #236]	; 11420 <main@@Base+0x77c>
   11330:	add	r1, pc, r1
   11334:	str	r0, [sp, #36]	; 0x24
   11338:	mov	r0, r1
   1133c:	bl	10938 <printf@plt>
   11340:	ldr	r1, [pc, #212]	; 1141c <main@@Base+0x778>
   11344:	add	r1, pc, r1
   11348:	str	r0, [sp, #32]
   1134c:	mov	r0, r1
   11350:	bl	10938 <printf@plt>
   11354:	ldr	r1, [pc, #188]	; 11418 <main@@Base+0x774>
   11358:	add	r1, pc, r1
   1135c:	str	r0, [sp, #28]
   11360:	mov	r0, r1
   11364:	bl	10938 <printf@plt>
   11368:	ldr	r1, [pc, #164]	; 11414 <main@@Base+0x770>
   1136c:	add	r1, pc, r1
   11370:	str	r0, [sp, #24]
   11374:	mov	r0, r1
   11378:	bl	10938 <printf@plt>
   1137c:	ldr	r1, [pc, #140]	; 11410 <main@@Base+0x76c>
   11380:	add	r1, pc, r1
   11384:	str	r0, [sp, #20]
   11388:	mov	r0, r1
   1138c:	bl	10938 <printf@plt>
   11390:	ldr	r1, [pc, #116]	; 1140c <main@@Base+0x768>
   11394:	add	r1, pc, r1
   11398:	str	r0, [sp, #16]
   1139c:	mov	r0, r1
   113a0:	bl	10938 <printf@plt>
   113a4:	ldr	r1, [pc, #92]	; 11408 <main@@Base+0x764>
   113a8:	add	r1, pc, r1
   113ac:	str	r0, [sp, #12]
   113b0:	mov	r0, r1
   113b4:	bl	10938 <printf@plt>
   113b8:	ldr	r1, [pc, #68]	; 11404 <main@@Base+0x760>
   113bc:	add	r1, pc, r1
   113c0:	str	r0, [sp, #8]
   113c4:	mov	r0, r1
   113c8:	bl	10938 <printf@plt>
   113cc:	ldr	r1, [pc, #44]	; 11400 <main@@Base+0x75c>
   113d0:	add	r1, pc, r1
   113d4:	str	r0, [sp, #4]
   113d8:	mov	r0, r1
   113dc:	bl	10938 <printf@plt>
   113e0:	ldr	r1, [pc, #20]	; 113fc <main@@Base+0x758>
   113e4:	add	r1, pc, r1
   113e8:	str	r0, [sp]
   113ec:	mov	r0, r1
   113f0:	bl	10938 <printf@plt>
   113f4:	mov	sp, fp
   113f8:	pop	{fp, pc}
   113fc:	andeq	r0, r0, ip, lsr r6
   11400:	muleq	r0, ip, r7
   11404:	andeq	r0, r0, r0, ror r7
   11408:	andeq	r0, r0, sp, lsr r7
   1140c:	andeq	r0, r0, r4, lsl #14
   11410:	andeq	r0, r0, ip, ror #13
   11414:			; <UNDEFINED> instruction: 0x000006b6
   11418:	andeq	r0, r0, fp, ror r6
   1141c:	ldrdeq	r0, [r0], -ip
   11420:	andeq	r0, r0, r0, ror r6
   11424:	andeq	r0, r0, r8, ror #12
   11428:	andeq	r0, r0, r8, lsl r7
   1142c:	andeq	r0, r0, r1, ror r6
   11430:	andeq	r0, r0, ip, ror #12
   11434:	andeq	r0, r0, r4, asr r7
   11438:	andeq	r0, r0, fp, asr r6
   1143c:	andeq	r0, r0, r4, asr r6
   11440:	andeq	r0, r0, fp, lsr r6
   11444:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   11448:	andeq	r0, r0, sl, asr #11
   1144c:	andeq	r0, r0, lr, lsr #11
   11450:	andeq	r0, r0, r7, lsl #11
   11454:	andeq	r0, r0, r4, ror r5
   11458:	andeq	r0, r0, r6, ror r5
   1145c:	andeq	r0, r0, ip, lsl r8
   11460:	andeq	r0, r0, r6, lsl #11
   11464:	andeq	r0, r0, sl, asr #10
   11468:	andeq	r0, r0, ip, lsl r5
   1146c:	andeq	r0, r0, r0, lsr #10
   11470:	push	{fp, lr}
   11474:	mov	fp, sp
   11478:	sub	sp, sp, #16
   1147c:	bl	109bc <coda_get_libcoda_version@plt>
   11480:	ldr	r1, [pc, #72]	; 114d0 <main@@Base+0x82c>
   11484:	add	r1, pc, r1
   11488:	str	r0, [fp, #-4]
   1148c:	mov	r0, r1
   11490:	ldr	r1, [fp, #-4]
   11494:	bl	10938 <printf@plt>
   11498:	ldr	r1, [pc, #44]	; 114cc <main@@Base+0x828>
   1149c:	add	r1, pc, r1
   114a0:	str	r0, [sp, #8]
   114a4:	mov	r0, r1
   114a8:	bl	10938 <printf@plt>
   114ac:	ldr	r1, [pc, #20]	; 114c8 <main@@Base+0x824>
   114b0:	add	r1, pc, r1
   114b4:	str	r0, [sp, #4]
   114b8:	mov	r0, r1
   114bc:	bl	10938 <printf@plt>
   114c0:	mov	sp, fp
   114c4:	pop	{fp, pc}
   114c8:	andeq	r0, r0, r0, ror r5
   114cc:	andeq	r0, r0, lr, lsl r7
   114d0:	andeq	r0, r0, r9, lsr #14

000114d4 <__libc_csu_init@@Base>:
   114d4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   114d8:	mov	r7, r0
   114dc:	ldr	r6, [pc, #72]	; 1152c <__libc_csu_init@@Base+0x58>
   114e0:	ldr	r5, [pc, #72]	; 11530 <__libc_csu_init@@Base+0x5c>
   114e4:	add	r6, pc, r6
   114e8:	add	r5, pc, r5
   114ec:	sub	r6, r6, r5
   114f0:	mov	r8, r1
   114f4:	mov	r9, r2
   114f8:	bl	10900 <coda_match_filefilter@plt-0x20>
   114fc:	asrs	r6, r6, #2
   11500:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11504:	mov	r4, #0
   11508:	add	r4, r4, #1
   1150c:	ldr	r3, [r5], #4
   11510:	mov	r2, r9
   11514:	mov	r1, r8
   11518:	mov	r0, r7
   1151c:	blx	r3
   11520:	cmp	r6, r4
   11524:	bne	11508 <__libc_csu_init@@Base+0x34>
   11528:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1152c:	andeq	r0, r1, r8, lsl #20
   11530:	andeq	r0, r1, r0, lsl #20

00011534 <__libc_csu_fini@@Base>:
   11534:	bx	lr

Disassembly of section .fini:

00011538 <.fini>:
   11538:	push	{r3, lr}
   1153c:	pop	{r3, pc}
