
../repos/dvidelabs-flatcc-3b39ef7/test/cgen_test/cgen_test:     file format elf32-littlearm


Disassembly of section .init:

0001478c <.init>:
   1478c:	push	{r3, lr}
   14790:	bl	1499c <_start@@Base+0x3c>
   14794:	pop	{r3, pc}

Disassembly of section .plt:

00014798 <calloc@plt-0x14>:
   14798:	push	{lr}		; (str lr, [sp, #-4]!)
   1479c:	ldr	lr, [pc, #4]	; 147a8 <calloc@plt-0x4>
   147a0:	add	lr, pc, lr
   147a4:	ldr	pc, [lr, #8]!
   147a8:	andeq	ip, r4, r8, asr r8

000147ac <calloc@plt>:
   147ac:	add	ip, pc, #0, 12
   147b0:	add	ip, ip, #76, 20	; 0x4c000
   147b4:	ldr	pc, [ip, #2136]!	; 0x858

000147b8 <raise@plt>:
   147b8:	add	ip, pc, #0, 12
   147bc:	add	ip, ip, #76, 20	; 0x4c000
   147c0:	ldr	pc, [ip, #2128]!	; 0x850

000147c4 <strcmp@plt>:
   147c4:	add	ip, pc, #0, 12
   147c8:	add	ip, ip, #76, 20	; 0x4c000
   147cc:	ldr	pc, [ip, #2120]!	; 0x848

000147d0 <fopen@plt>:
   147d0:	add	ip, pc, #0, 12
   147d4:	add	ip, ip, #76, 20	; 0x4c000
   147d8:	ldr	pc, [ip, #2112]!	; 0x840

000147dc <free@plt>:
   147dc:	add	ip, pc, #0, 12
   147e0:	add	ip, ip, #76, 20	; 0x4c000
   147e4:	ldr	pc, [ip, #2104]!	; 0x838

000147e8 <memcpy@plt>:
   147e8:	add	ip, pc, #0, 12
   147ec:	add	ip, ip, #76, 20	; 0x4c000
   147f0:	ldr	pc, [ip, #2096]!	; 0x830

000147f4 <ftell@plt>:
   147f4:	add	ip, pc, #0, 12
   147f8:	add	ip, ip, #76, 20	; 0x4c000
   147fc:	ldr	pc, [ip, #2088]!	; 0x828

00014800 <memcmp@plt>:
   14800:	add	ip, pc, #0, 12
   14804:	add	ip, ip, #76, 20	; 0x4c000
   14808:	ldr	pc, [ip, #2080]!	; 0x820

0001480c <fputc_unlocked@plt>:
   1480c:	add	ip, pc, #0, 12
   14810:	add	ip, ip, #76, 20	; 0x4c000
   14814:	ldr	pc, [ip, #2072]!	; 0x818

00014818 <rewind@plt>:
   14818:	add	ip, pc, #0, 12
   1481c:	add	ip, ip, #76, 20	; 0x4c000
   14820:	ldr	pc, [ip, #2064]!	; 0x810

00014824 <realloc@plt>:
   14824:	add	ip, pc, #0, 12
   14828:	add	ip, ip, #76, 20	; 0x4c000
   1482c:	ldr	pc, [ip, #2056]!	; 0x808

00014830 <fwrite@plt>:
   14830:	add	ip, pc, #0, 12
   14834:	add	ip, ip, #76, 20	; 0x4c000
   14838:	ldr	pc, [ip, #2048]!	; 0x800

0001483c <puts@plt>:
   1483c:	add	ip, pc, #0, 12
   14840:	add	ip, ip, #76, 20	; 0x4c000
   14844:	ldr	pc, [ip, #2040]!	; 0x7f8

00014848 <malloc@plt>:
   14848:	add	ip, pc, #0, 12
   1484c:	add	ip, ip, #76, 20	; 0x4c000
   14850:	ldr	pc, [ip, #2032]!	; 0x7f0

00014854 <__libc_start_main@plt>:
   14854:	add	ip, pc, #0, 12
   14858:	add	ip, ip, #76, 20	; 0x4c000
   1485c:	ldr	pc, [ip, #2024]!	; 0x7e8

00014860 <__ctype_toupper_loc@plt>:
   14860:	add	ip, pc, #0, 12
   14864:	add	ip, ip, #76, 20	; 0x4c000
   14868:	ldr	pc, [ip, #2016]!	; 0x7e0

0001486c <__gmon_start__@plt>:
   1486c:	add	ip, pc, #0, 12
   14870:	add	ip, ip, #76, 20	; 0x4c000
   14874:	ldr	pc, [ip, #2008]!	; 0x7d8

00014878 <exit@plt>:
   14878:	add	ip, pc, #0, 12
   1487c:	add	ip, ip, #76, 20	; 0x4c000
   14880:	ldr	pc, [ip, #2000]!	; 0x7d0

00014884 <strlen@plt>:
   14884:	add	ip, pc, #0, 12
   14888:	add	ip, ip, #76, 20	; 0x4c000
   1488c:	ldr	pc, [ip, #1992]!	; 0x7c8

00014890 <fprintf@plt>:
   14890:	add	ip, pc, #0, 12
   14894:	add	ip, ip, #76, 20	; 0x4c000
   14898:	ldr	pc, [ip, #1984]!	; 0x7c0

0001489c <posix_memalign@plt>:
   1489c:	add	ip, pc, #0, 12
   148a0:	add	ip, ip, #76, 20	; 0x4c000
   148a4:	ldr	pc, [ip, #1976]!	; 0x7b8

000148a8 <memset@plt>:
   148a8:	add	ip, pc, #0, 12
   148ac:	add	ip, ip, #76, 20	; 0x4c000
   148b0:	ldr	pc, [ip, #1968]!	; 0x7b0

000148b4 <strncpy@plt>:
   148b4:	add	ip, pc, #0, 12
   148b8:	add	ip, ip, #76, 20	; 0x4c000
   148bc:	ldr	pc, [ip, #1960]!	; 0x7a8

000148c0 <strtod@plt>:
   148c0:	add	ip, pc, #0, 12
   148c4:	add	ip, ip, #76, 20	; 0x4c000
   148c8:	ldr	pc, [ip, #1952]!	; 0x7a0

000148cc <memchr@plt>:
   148cc:	add	ip, pc, #0, 12
   148d0:	add	ip, ip, #76, 20	; 0x4c000
   148d4:	ldr	pc, [ip, #1944]!	; 0x798

000148d8 <fclose@plt>:
   148d8:	add	ip, pc, #0, 12
   148dc:	add	ip, ip, #76, 20	; 0x4c000
   148e0:	ldr	pc, [ip, #1936]!	; 0x790

000148e4 <vfprintf@plt>:
   148e4:	add	ip, pc, #0, 12
   148e8:	add	ip, ip, #76, 20	; 0x4c000
   148ec:	ldr	pc, [ip, #1928]!	; 0x788

000148f0 <fputc@plt>:
   148f0:	add	ip, pc, #0, 12
   148f4:	add	ip, ip, #76, 20	; 0x4c000
   148f8:	ldr	pc, [ip, #1920]!	; 0x780

000148fc <sprintf@plt>:
   148fc:	add	ip, pc, #0, 12
   14900:	add	ip, ip, #76, 20	; 0x4c000
   14904:	ldr	pc, [ip, #1912]!	; 0x778

00014908 <vsnprintf@plt>:
   14908:	add	ip, pc, #0, 12
   1490c:	add	ip, ip, #76, 20	; 0x4c000
   14910:	ldr	pc, [ip, #1904]!	; 0x770

00014914 <qsort@plt>:
   14914:	add	ip, pc, #0, 12
   14918:	add	ip, ip, #76, 20	; 0x4c000
   1491c:	ldr	pc, [ip, #1896]!	; 0x768

00014920 <fread_unlocked@plt>:
   14920:	add	ip, pc, #0, 12
   14924:	add	ip, ip, #76, 20	; 0x4c000
   14928:	ldr	pc, [ip, #1888]!	; 0x760

0001492c <fseek@plt>:
   1492c:	add	ip, pc, #0, 12
   14930:	add	ip, ip, #76, 20	; 0x4c000
   14934:	ldr	pc, [ip, #1880]!	; 0x758

00014938 <strncmp@plt>:
   14938:	add	ip, pc, #0, 12
   1493c:	add	ip, ip, #76, 20	; 0x4c000
   14940:	ldr	pc, [ip, #1872]!	; 0x750

00014944 <abort@plt>:
   14944:	add	ip, pc, #0, 12
   14948:	add	ip, ip, #76, 20	; 0x4c000
   1494c:	ldr	pc, [ip, #1864]!	; 0x748

00014950 <__assert_fail@plt>:
   14950:	add	ip, pc, #0, 12
   14954:	add	ip, ip, #76, 20	; 0x4c000
   14958:	ldr	pc, [ip, #1856]!	; 0x740

Disassembly of section .text:

00014960 <_start@@Base>:
   14960:	mov	fp, #0
   14964:	mov	lr, #0
   14968:	pop	{r1}		; (ldr r1, [sp], #4)
   1496c:	mov	r2, sp
   14970:	push	{r2}		; (str r2, [sp, #-4]!)
   14974:	push	{r0}		; (str r0, [sp, #-4]!)
   14978:	ldr	ip, [pc, #16]	; 14990 <_start@@Base+0x30>
   1497c:	push	{ip}		; (str ip, [sp, #-4]!)
   14980:	ldr	r0, [pc, #12]	; 14994 <_start@@Base+0x34>
   14984:	ldr	r3, [pc, #12]	; 14998 <_start@@Base+0x38>
   14988:	bl	14854 <__libc_start_main@plt>
   1498c:	bl	14944 <abort@plt>
   14990:	andeq	r3, r3, r0, ror lr
   14994:	andeq	r4, r1, r0, asr sl
   14998:	andeq	r3, r3, r0, lsl lr
   1499c:	ldr	r3, [pc, #20]	; 149b8 <_start@@Base+0x58>
   149a0:	ldr	r2, [pc, #20]	; 149bc <_start@@Base+0x5c>
   149a4:	add	r3, pc, r3
   149a8:	ldr	r2, [r3, r2]
   149ac:	cmp	r2, #0
   149b0:	bxeq	lr
   149b4:	b	1486c <__gmon_start__@plt>
   149b8:	andeq	ip, r4, r4, asr r6
   149bc:	muleq	r0, ip, r0
   149c0:	ldr	r0, [pc, #24]	; 149e0 <_start@@Base+0x80>
   149c4:	ldr	r3, [pc, #24]	; 149e4 <_start@@Base+0x84>
   149c8:	cmp	r3, r0
   149cc:	bxeq	lr
   149d0:	ldr	r3, [pc, #16]	; 149e8 <_start@@Base+0x88>
   149d4:	cmp	r3, #0
   149d8:	bxeq	lr
   149dc:	bx	r3
   149e0:	andeq	r1, r6, r8, lsr #1
   149e4:	andeq	r1, r6, r8, lsr #1
   149e8:	andeq	r0, r0, r0
   149ec:	ldr	r0, [pc, #36]	; 14a18 <_start@@Base+0xb8>
   149f0:	ldr	r1, [pc, #36]	; 14a1c <_start@@Base+0xbc>
   149f4:	sub	r1, r1, r0
   149f8:	asr	r1, r1, #2
   149fc:	add	r1, r1, r1, lsr #31
   14a00:	asrs	r1, r1, #1
   14a04:	bxeq	lr
   14a08:	ldr	r3, [pc, #16]	; 14a20 <_start@@Base+0xc0>
   14a0c:	cmp	r3, #0
   14a10:	bxeq	lr
   14a14:	bx	r3
   14a18:	andeq	r1, r6, r8, lsr #1
   14a1c:	andeq	r1, r6, r8, lsr #1
   14a20:	andeq	r0, r0, r0
   14a24:	push	{r4, lr}
   14a28:	ldr	r4, [pc, #24]	; 14a48 <_start@@Base+0xe8>
   14a2c:	ldrb	r3, [r4]
   14a30:	cmp	r3, #0
   14a34:	popne	{r4, pc}
   14a38:	bl	149c0 <_start@@Base+0x60>
   14a3c:	mov	r3, #1
   14a40:	strb	r3, [r4]
   14a44:	pop	{r4, pc}
   14a48:	strheq	r1, [r6], -r0
   14a4c:	b	149ec <_start@@Base+0x8c>

00014a50 <main@@Base>:
   14a50:	push	{r4, r5, r6, sl, fp, lr}
   14a54:	add	fp, sp, #16
   14a58:	sub	sp, sp, #888	; 0x378
   14a5c:	sub	sp, sp, #3072	; 0xc00
   14a60:	add	r0, sp, #224	; 0xe0
   14a64:	movw	r1, #16248	; 0x3f78
   14a68:	movt	r1, #3
   14a6c:	movw	r2, #3735	; 0xe97
   14a70:	bl	147e8 <memcpy@plt>
   14a74:	mov	r4, sp
   14a78:	mov	r0, r4
   14a7c:	bl	14ba0 <flatcc_init_options@@Base>
   14a80:	mov	r0, #1
   14a84:	str	r0, [sp, #152]	; 0x98
   14a88:	str	r0, [sp, #144]	; 0x90
   14a8c:	str	r0, [sp, #148]	; 0x94
   14a90:	str	r0, [sp, #156]	; 0x9c
   14a94:	str	r0, [sp, #108]	; 0x6c
   14a98:	movw	r1, #16004	; 0x3e84
   14a9c:	movt	r1, #3
   14aa0:	mov	r0, r4
   14aa4:	mov	r2, #0
   14aa8:	mov	r3, #0
   14aac:	bl	14c80 <flatcc_create_context@@Base>
   14ab0:	cmp	r0, #0
   14ab4:	bne	14ae0 <main@@Base+0x90>
   14ab8:	movw	r0, #4264	; 0x10a8
   14abc:	movt	r0, #6
   14ac0:	ldr	r3, [r0]
   14ac4:	movw	r0, #16017	; 0x3e91
   14ac8:	movt	r0, #3
   14acc:	mov	r1, #41	; 0x29
   14ad0:	mov	r2, #1
   14ad4:	bl	14830 <fwrite@plt>
   14ad8:	mvn	r5, #0
   14adc:	b	14b80 <main@@Base+0x130>
   14ae0:	mov	r4, r0
   14ae4:	add	r1, sp, #224	; 0xe0
   14ae8:	movw	r2, #3735	; 0xe97
   14aec:	bl	14cf8 <flatcc_parse_buffer@@Base>
   14af0:	mov	r5, r0
   14af4:	movw	r6, #4264	; 0x10a8
   14af8:	movt	r6, #6
   14afc:	ldr	r3, [r6]
   14b00:	cmp	r0, #0
   14b04:	bne	14b64 <main@@Base+0x114>
   14b08:	movw	r0, #16080	; 0x3ed0
   14b0c:	movt	r0, #3
   14b10:	mov	r1, #17
   14b14:	mov	r2, #1
   14b18:	bl	14830 <fwrite@plt>
   14b1c:	ldr	r3, [r6]
   14b20:	movw	r0, #16098	; 0x3ee2
   14b24:	movt	r0, #3
   14b28:	mov	r1, #31
   14b2c:	mov	r2, #1
   14b30:	bl	14830 <fwrite@plt>
   14b34:	mov	r0, r4
   14b38:	bl	1541c <flatcc_generate_files@@Base>
   14b3c:	cmp	r0, #0
   14b40:	bne	14b8c <main@@Base+0x13c>
   14b44:	movw	r0, #4268	; 0x10ac
   14b48:	movt	r0, #6
   14b4c:	ldr	r0, [r0]
   14b50:	movw	r1, #16163	; 0x3f23
   14b54:	movt	r1, #3
   14b58:	add	r2, sp, #224	; 0xe0
   14b5c:	bl	14890 <fprintf@plt>
   14b60:	b	14b78 <main@@Base+0x128>
   14b64:	movw	r0, #16059	; 0x3ebb
   14b68:	movt	r0, #3
   14b6c:	mov	r1, #20
   14b70:	mov	r2, #1
   14b74:	bl	14830 <fwrite@plt>
   14b78:	mov	r0, r4
   14b7c:	bl	15554 <flatcc_destroy_context@@Base>
   14b80:	mov	r0, r5
   14b84:	sub	sp, fp, #16
   14b88:	pop	{r4, r5, r6, sl, fp, pc}
   14b8c:	ldr	r3, [r6]
   14b90:	movw	r0, #16130	; 0x3f02
   14b94:	movt	r0, #3
   14b98:	mov	r1, #32
   14b9c:	b	14b70 <main@@Base+0x120>

00014ba0 <flatcc_init_options@@Base>:
   14ba0:	push	{r4, r5, fp, lr}
   14ba4:	add	fp, sp, #8
   14ba8:	mov	r4, r0
   14bac:	mov	r5, #0
   14bb0:	mov	r1, #0
   14bb4:	mov	r2, #224	; 0xe0
   14bb8:	bl	148a8 <memset@plt>
   14bbc:	mov	r0, #65536	; 0x10000
   14bc0:	mov	r1, #100	; 0x64
   14bc4:	stm	r4, {r0, r1}
   14bc8:	str	r1, [r4, #8]
   14bcc:	mov	r0, #1
   14bd0:	str	r0, [r4, #16]
   14bd4:	str	r0, [r4, #20]
   14bd8:	str	r0, [r4, #24]
   14bdc:	str	r0, [r4, #28]
   14be0:	str	r0, [r4, #32]
   14be4:	str	r0, [r4, #36]	; 0x24
   14be8:	str	r0, [r4, #40]	; 0x28
   14bec:	str	r0, [r4, #44]	; 0x2c
   14bf0:	mov	lr, #4
   14bf4:	mov	r2, #2
   14bf8:	vmov.i32	q8, #0	; 0x00000000
   14bfc:	movw	ip, #65534	; 0xfffe
   14c00:	str	r0, [r4, #48]	; 0x30
   14c04:	str	r0, [r4, #52]	; 0x34
   14c08:	str	r5, [r4, #56]	; 0x38
   14c0c:	str	r5, [r4, #60]	; 0x3c
   14c10:	str	lr, [r4, #64]	; 0x40
   14c14:	str	r2, [r4, #68]	; 0x44
   14c18:	str	r0, [r4, #72]	; 0x48
   14c1c:	str	r0, [r4, #76]	; 0x4c
   14c20:	movw	r2, #16012	; 0x3e8c
   14c24:	movt	r2, #3
   14c28:	movw	r3, #19984	; 0x4e10
   14c2c:	movt	r3, #3
   14c30:	movw	r1, #19990	; 0x4e16
   14c34:	movt	r1, #3
   14c38:	str	r5, [r4, #80]	; 0x50
   14c3c:	str	r0, [r4, #84]	; 0x54
   14c40:	str	ip, [r4, #88]	; 0x58
   14c44:	str	r5, [r4, #92]	; 0x5c
   14c48:	str	r2, [r4, #96]	; 0x60
   14c4c:	str	r3, [r4, #100]	; 0x64
   14c50:	str	r1, [r4, #104]	; 0x68
   14c54:	str	r5, [r4, #132]	; 0x84
   14c58:	str	r0, [r4, #136]	; 0x88
   14c5c:	str	r0, [r4, #140]	; 0x8c
   14c60:	str	r5, [r4, #164]	; 0xa4
   14c64:	add	r1, r4, #144	; 0x90
   14c68:	vst1.64	{d16-d17}, [r1]
   14c6c:	str	lr, [r4, #176]	; 0xb0
   14c70:	str	r5, [r4, #180]	; 0xb4
   14c74:	str	r0, [r4, #184]	; 0xb8
   14c78:	str	r5, [r4, #188]	; 0xbc
   14c7c:	pop	{r4, r5, fp, pc}

00014c80 <flatcc_create_context@@Base>:
   14c80:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14c84:	add	fp, sp, #24
   14c88:	sub	sp, sp, #8
   14c8c:	mov	r7, r3
   14c90:	mov	r8, r2
   14c94:	mov	r9, r1
   14c98:	mov	r6, r0
   14c9c:	mov	r0, #560	; 0x230
   14ca0:	bl	14848 <malloc@plt>
   14ca4:	cmp	r0, #0
   14ca8:	beq	14ce0 <flatcc_create_context@@Base+0x60>
   14cac:	mov	r5, r0
   14cb0:	mov	r4, #0
   14cb4:	str	r7, [sp]
   14cb8:	str	r4, [sp, #4]
   14cbc:	mov	r1, r6
   14cc0:	mov	r2, r9
   14cc4:	mov	r3, r8
   14cc8:	bl	276a0 <__flatcc_fb_init_parser@@Base>
   14ccc:	cmp	r0, #0
   14cd0:	beq	14ce8 <flatcc_create_context@@Base+0x68>
   14cd4:	mov	r0, r5
   14cd8:	bl	147dc <free@plt>
   14cdc:	b	14cec <flatcc_create_context@@Base+0x6c>
   14ce0:	mov	r4, #0
   14ce4:	b	14cec <flatcc_create_context@@Base+0x6c>
   14ce8:	mov	r4, r5
   14cec:	mov	r0, r4
   14cf0:	sub	sp, fp, #24
   14cf4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014cf8 <flatcc_parse_buffer@@Base>:
   14cf8:	push	{r4, r5, r6, sl, fp, lr}
   14cfc:	add	fp, sp, #16
   14d00:	mov	r5, r2
   14d04:	mov	r6, r1
   14d08:	mov	r4, r0
   14d0c:	mov	r0, #1
   14d10:	str	r0, [r4, #140]	; 0x8c
   14d14:	ldr	r0, [r4, #128]	; 0x80
   14d18:	cmp	r0, r2
   14d1c:	bcs	14d40 <flatcc_parse_buffer@@Base+0x48>
   14d20:	cmp	r0, #0
   14d24:	beq	14d40 <flatcc_parse_buffer@@Base+0x48>
   14d28:	movw	r1, #19995	; 0x4e1b
   14d2c:	movt	r1, #3
   14d30:	mov	r0, r4
   14d34:	bl	27368 <__flatcc_fb_print_error@@Base>
   14d38:	mvn	r0, #0
   14d3c:	pop	{r4, r5, r6, sl, fp, pc}
   14d40:	add	r0, r4, #524	; 0x20c
   14d44:	add	r1, r4, #352	; 0x160
   14d48:	mov	r2, #1
   14d4c:	bl	2575c <ptr_set_insert_item@@Base>
   14d50:	mov	r0, r4
   14d54:	mov	r1, r6
   14d58:	mov	r2, r5
   14d5c:	mov	r3, #0
   14d60:	bl	27968 <__flatcc_fb_parse@@Base>
   14d64:	mov	r1, r0
   14d68:	mvn	r0, #0
   14d6c:	cmp	r1, #0
   14d70:	popne	{r4, r5, r6, sl, fp, pc}
   14d74:	mov	r0, r4
   14d78:	bl	2b240 <__flatcc_fb_build_schema@@Base>
   14d7c:	cmp	r0, #0
   14d80:	mvnne	r0, #0
   14d84:	pop	{r4, r5, r6, sl, fp, pc}

00014d88 <flatcc_parse_file@@Base>:
   14d88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14d8c:	add	fp, sp, #28
   14d90:	sub	sp, sp, #20
   14d94:	mov	r6, r1
   14d98:	mov	r4, r0
   14d9c:	mov	r0, r1
   14da0:	bl	14884 <strlen@plt>
   14da4:	mov	sl, r0
   14da8:	ldr	r0, [r4, #412]	; 0x19c
   14dac:	add	r8, r4, #352	; 0x160
   14db0:	add	r0, r0, #32
   14db4:	mov	r1, r8
   14db8:	mov	r2, #1
   14dbc:	bl	26af8 <fb_schema_table_insert_item@@Base>
   14dc0:	mov	r5, #0
   14dc4:	cmp	r0, #0
   14dc8:	beq	14dd8 <flatcc_parse_file@@Base+0x50>
   14dcc:	mov	r0, r5
   14dd0:	sub	sp, fp, #28
   14dd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14dd8:	ldr	r9, [r4, #552]	; 0x228
   14ddc:	cmp	r9, #0
   14de0:	beq	14f00 <flatcc_parse_file@@Base+0x178>
   14de4:	str	r9, [sp, #12]
   14de8:	str	r8, [sp, #8]
   14dec:	ldr	r0, [r4, #336]	; 0x150
   14df0:	cmp	r0, #1
   14df4:	blt	14e88 <flatcc_parse_file@@Base+0x100>
   14df8:	mov	r8, #0
   14dfc:	add	r9, sp, #16
   14e00:	ldr	r0, [r4, #328]	; 0x148
   14e04:	ldr	r5, [r0, r8, lsl #2]
   14e08:	mov	r0, r5
   14e0c:	bl	14884 <strlen@plt>
   14e10:	mov	r1, r0
   14e14:	movw	r0, #21264	; 0x5310
   14e18:	movt	r0, #3
   14e1c:	str	r0, [sp]
   14e20:	mov	r0, #1
   14e24:	str	r0, [sp, #4]
   14e28:	mov	r0, r5
   14e2c:	mov	r2, r6
   14e30:	mov	r3, sl
   14e34:	bl	26e88 <__flatcc_fb_create_join_path_n@@Base>
   14e38:	mov	r5, r0
   14e3c:	bl	15098 <flatcc_parse_file@@Base+0x310>
   14e40:	ldr	r1, [r4, #128]	; 0x80
   14e44:	mov	r0, r5
   14e48:	mov	r2, r9
   14e4c:	bl	27250 <__flatcc_fb_read_file@@Base>
   14e50:	cmp	r0, #0
   14e54:	bne	14f30 <flatcc_parse_file@@Base+0x1a8>
   14e58:	mov	r0, r5
   14e5c:	bl	147dc <free@plt>
   14e60:	ldr	r0, [r4, #128]	; 0x80
   14e64:	ldr	r1, [sp, #16]
   14e68:	cmp	r1, r0
   14e6c:	bls	14e78 <flatcc_parse_file@@Base+0xf0>
   14e70:	cmp	r0, #0
   14e74:	bne	15064 <flatcc_parse_file@@Base+0x2dc>
   14e78:	add	r8, r8, #1
   14e7c:	ldr	r0, [r4, #336]	; 0x150
   14e80:	cmp	r8, r0
   14e84:	blt	14e00 <flatcc_parse_file@@Base+0x78>
   14e88:	ldr	r9, [sp, #12]
   14e8c:	cmp	r9, #0
   14e90:	beq	1507c <flatcc_parse_file@@Base+0x2f4>
   14e94:	ldr	r5, [r4, #552]	; 0x228
   14e98:	mov	r0, r5
   14e9c:	bl	14884 <strlen@plt>
   14ea0:	mov	r1, r0
   14ea4:	mov	r0, r5
   14ea8:	bl	271c0 <__flatcc_fb_find_basename@@Base>
   14eac:	mov	r1, r0
   14eb0:	mov	r0, #1
   14eb4:	movw	r2, #21264	; 0x5310
   14eb8:	movt	r2, #3
   14ebc:	str	r2, [sp]
   14ec0:	str	r0, [sp, #4]
   14ec4:	mov	r0, r5
   14ec8:	mov	r2, r6
   14ecc:	mov	r3, sl
   14ed0:	bl	26e88 <__flatcc_fb_create_join_path_n@@Base>
   14ed4:	mov	r5, r0
   14ed8:	bl	15098 <flatcc_parse_file@@Base+0x310>
   14edc:	ldr	r1, [r4, #128]	; 0x80
   14ee0:	add	r2, sp, #16
   14ee4:	mov	r0, r5
   14ee8:	bl	27250 <__flatcc_fb_read_file@@Base>
   14eec:	cmp	r0, #0
   14ef0:	beq	15044 <flatcc_parse_file@@Base+0x2bc>
   14ef4:	mov	r7, r0
   14ef8:	ldr	r8, [sp, #8]
   14efc:	b	14f3c <flatcc_parse_file@@Base+0x1b4>
   14f00:	ldr	r1, [r4, #128]	; 0x80
   14f04:	add	r2, sp, #16
   14f08:	mov	r0, r6
   14f0c:	bl	27250 <__flatcc_fb_read_file@@Base>
   14f10:	cmp	r0, #0
   14f14:	beq	14fd4 <flatcc_parse_file@@Base+0x24c>
   14f18:	mov	r7, r0
   14f1c:	mov	r0, r6
   14f20:	bl	26ddc <__flatcc_fb_copy_path@@Base>
   14f24:	mov	r5, r0
   14f28:	bl	15098 <flatcc_parse_file@@Base+0x310>
   14f2c:	b	14f3c <flatcc_parse_file@@Base+0x1b4>
   14f30:	mov	r7, r0
   14f34:	ldr	r8, [sp, #8]
   14f38:	ldr	r9, [sp, #12]
   14f3c:	ldr	r0, [r4, #412]	; 0x19c
   14f40:	ldr	r1, [r0, #56]	; 0x38
   14f44:	ldr	r2, [sp, #16]
   14f48:	add	r1, r1, r2
   14f4c:	str	r1, [r0, #56]	; 0x38
   14f50:	str	r5, [r4, #548]	; 0x224
   14f54:	mov	r0, r4
   14f58:	mov	r1, r7
   14f5c:	mov	r3, #1
   14f60:	bl	27968 <__flatcc_fb_parse@@Base>
   14f64:	cmp	r0, #0
   14f68:	beq	14f74 <flatcc_parse_file@@Base+0x1ec>
   14f6c:	mov	r5, #0
   14f70:	b	14dcc <flatcc_parse_file@@Base+0x44>
   14f74:	mov	r5, r0
   14f78:	ldr	r7, [r8]
   14f7c:	cmp	r7, #0
   14f80:	bne	14f9c <flatcc_parse_file@@Base+0x214>
   14f84:	b	14ffc <flatcc_parse_file@@Base+0x274>
   14f88:	mov	r0, r6
   14f8c:	bl	147dc <free@plt>
   14f90:	ldr	r7, [r7]
   14f94:	cmp	r7, #0
   14f98:	beq	14ffc <flatcc_parse_file@@Base+0x274>
   14f9c:	ldrd	r0, [r7, #8]
   14fa0:	bl	26d68 <__flatcc_fb_copy_path_n@@Base>
   14fa4:	mov	r6, r0
   14fa8:	bl	15098 <flatcc_parse_file@@Base+0x310>
   14fac:	mov	r0, r4
   14fb0:	mov	r1, r6
   14fb4:	bl	150d0 <flatcc_parse_file@@Base+0x348>
   14fb8:	cmp	r0, #0
   14fbc:	beq	14f88 <flatcc_parse_file@@Base+0x200>
   14fc0:	cmp	r6, #0
   14fc4:	beq	14dcc <flatcc_parse_file@@Base+0x44>
   14fc8:	mov	r0, r6
   14fcc:	bl	147dc <free@plt>
   14fd0:	b	14dcc <flatcc_parse_file@@Base+0x44>
   14fd4:	ldr	r0, [r4, #128]	; 0x80
   14fd8:	ldr	r1, [r4, #412]	; 0x19c
   14fdc:	ldr	r1, [r1, #56]	; 0x38
   14fe0:	ldr	r2, [sp, #16]
   14fe4:	add	r1, r1, r2
   14fe8:	cmp	r1, r0
   14fec:	bls	14de4 <flatcc_parse_file@@Base+0x5c>
   14ff0:	cmp	r0, #0
   14ff4:	bne	15064 <flatcc_parse_file@@Base+0x2dc>
   14ff8:	b	14de4 <flatcc_parse_file@@Base+0x5c>
   14ffc:	add	r0, r4, #524	; 0x20c
   15000:	mov	r1, r8
   15004:	mov	r2, #1
   15008:	bl	2575c <ptr_set_insert_item@@Base>
   1500c:	mov	r0, r4
   15010:	bl	2b240 <__flatcc_fb_build_schema@@Base>
   15014:	cmp	r0, #0
   15018:	bne	14dcc <flatcc_parse_file@@Base+0x44>
   1501c:	cmp	r9, #0
   15020:	bne	14f6c <flatcc_parse_file@@Base+0x1e4>
   15024:	ldr	r0, [r4, #240]	; 0xf0
   15028:	cmp	r0, #0
   1502c:	beq	14f6c <flatcc_parse_file@@Base+0x1e4>
   15030:	mov	r0, r4
   15034:	bl	151e4 <flatcc_parse_file@@Base+0x45c>
   15038:	cmp	r0, #0
   1503c:	moveq	r5, #0
   15040:	b	14dcc <flatcc_parse_file@@Base+0x44>
   15044:	mov	r0, r5
   15048:	bl	147dc <free@plt>
   1504c:	ldr	r0, [r4, #128]	; 0x80
   15050:	ldr	r1, [sp, #16]
   15054:	cmp	r1, r0
   15058:	bls	1507c <flatcc_parse_file@@Base+0x2f4>
   1505c:	cmp	r0, #0
   15060:	beq	1507c <flatcc_parse_file@@Base+0x2f4>
   15064:	movw	r1, #19995	; 0x4e1b
   15068:	movt	r1, #3
   1506c:	mov	r0, r4
   15070:	bl	27368 <__flatcc_fb_print_error@@Base>
   15074:	mvn	r5, #0
   15078:	b	14dcc <flatcc_parse_file@@Base+0x44>
   1507c:	movw	r1, #20031	; 0x4e3f
   15080:	movt	r1, #3
   15084:	mov	r0, r4
   15088:	mov	r2, r6
   1508c:	bl	27368 <__flatcc_fb_print_error@@Base>
   15090:	mvn	r5, #0
   15094:	b	14dcc <flatcc_parse_file@@Base+0x44>
   15098:	cmp	r0, #0
   1509c:	bxne	lr
   150a0:	push	{fp, lr}
   150a4:	mov	fp, sp
   150a8:	movw	r0, #4264	; 0x10a8
   150ac:	movt	r0, #6
   150b0:	ldr	r3, [r0]
   150b4:	movw	r0, #20071	; 0x4e67
   150b8:	movt	r0, #3
   150bc:	mov	r1, #34	; 0x22
   150c0:	mov	r2, #1
   150c4:	bl	14830 <fwrite@plt>
   150c8:	mov	r0, #1
   150cc:	bl	14878 <exit@plt>
   150d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   150d4:	add	fp, sp, #28
   150d8:	sub	sp, sp, #4
   150dc:	mov	sl, r1
   150e0:	mov	r5, r0
   150e4:	ldr	r0, [r0, #132]	; 0x84
   150e8:	ldr	r4, [r5, #412]	; 0x19c
   150ec:	ldr	r1, [r4, #52]	; 0x34
   150f0:	cmp	r1, r0
   150f4:	cmpge	r0, #1
   150f8:	bge	15168 <flatcc_parse_file@@Base+0x3e0>
   150fc:	ldr	r0, [r5, #136]	; 0x88
   15100:	ldr	r1, [r4, #48]	; 0x30
   15104:	cmp	r1, r0
   15108:	cmpge	r0, #1
   1510c:	bge	15174 <flatcc_parse_file@@Base+0x3ec>
   15110:	add	r0, r5, #128	; 0x80
   15114:	mov	r1, sl
   15118:	mov	r2, r5
   1511c:	bl	1558c <flatcc_destroy_context@@Base+0x38>
   15120:	mvn	r6, #0
   15124:	cmp	r0, #0
   15128:	beq	15188 <flatcc_parse_file@@Base+0x400>
   1512c:	mov	r7, r0
   15130:	add	r8, r5, #352	; 0x160
   15134:	add	r0, r4, #32
   15138:	add	r9, r7, #352	; 0x160
   1513c:	mov	r1, r9
   15140:	bl	26bd8 <fb_schema_table_find_item@@Base>
   15144:	cmp	r0, #0
   15148:	beq	15194 <flatcc_parse_file@@Base+0x40c>
   1514c:	mov	r1, r0
   15150:	mov	r0, r8
   15154:	bl	15604 <flatcc_destroy_context@@Base+0xb0>
   15158:	mov	r0, r7
   1515c:	bl	15554 <flatcc_destroy_context@@Base>
   15160:	mov	r6, #0
   15164:	b	15188 <flatcc_parse_file@@Base+0x400>
   15168:	movw	r1, #20106	; 0x4e8a
   1516c:	movt	r1, #3
   15170:	b	1517c <flatcc_parse_file@@Base+0x3f4>
   15174:	movw	r1, #20138	; 0x4eaa
   15178:	movt	r1, #3
   1517c:	mov	r0, r5
   15180:	bl	27368 <__flatcc_fb_print_error@@Base>
   15184:	mvn	r6, #0
   15188:	mov	r0, r6
   1518c:	sub	sp, fp, #28
   15190:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15194:	ldr	r0, [r5]
   15198:	str	r0, [r7]
   1519c:	str	r7, [r5]
   151a0:	ldr	r0, [r5, #548]	; 0x224
   151a4:	str	r0, [r7, #552]	; 0x228
   151a8:	ldr	r0, [r4, #48]	; 0x30
   151ac:	ldr	r1, [r4, #52]	; 0x34
   151b0:	add	r1, r1, #1
   151b4:	add	r0, r0, #1
   151b8:	str	r0, [r4, #48]	; 0x30
   151bc:	str	r1, [r4, #52]	; 0x34
   151c0:	mov	r0, r7
   151c4:	mov	r1, sl
   151c8:	bl	14d88 <flatcc_parse_file@@Base>
   151cc:	cmp	r0, #0
   151d0:	bne	15188 <flatcc_parse_file@@Base+0x400>
   151d4:	mov	r0, r8
   151d8:	mov	r1, r9
   151dc:	bl	15604 <flatcc_destroy_context@@Base+0xb0>
   151e0:	b	15160 <flatcc_parse_file@@Base+0x3d8>
   151e4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   151e8:	add	fp, sp, #24
   151ec:	mov	r6, r0
   151f0:	ldr	r0, [r0, #552]	; 0x228
   151f4:	cmp	r0, #0
   151f8:	bne	153a4 <flatcc_parse_file@@Base+0x61c>
   151fc:	ldr	r1, [r6, #244]	; 0xf4
   15200:	ldr	r7, [r6, #248]	; 0xf8
   15204:	ldr	r3, [r6, #344]	; 0x158
   15208:	ldr	ip, [r6, #512]	; 0x200
   1520c:	movw	r2, #20304	; 0x4f50
   15210:	movt	r2, #3
   15214:	movw	r5, #21264	; 0x5310
   15218:	movt	r5, #3
   1521c:	cmp	r1, #0
   15220:	movne	r2, r5
   15224:	cmp	r3, #0
   15228:	moveq	r3, r5
   1522c:	cmp	r1, #0
   15230:	mov	r0, r5
   15234:	moveq	r0, r3
   15238:	moveq	r1, ip
   1523c:	cmp	r7, #0
   15240:	mov	r4, r5
   15244:	bne	1526c <flatcc_parse_file@@Base+0x4e4>
   15248:	ldr	r7, [r6, #308]	; 0x134
   1524c:	movw	r4, #49097	; 0xbfc9
   15250:	movt	r4, #4
   15254:	movw	r5, #19984	; 0x4e10
   15258:	movt	r5, #3
   1525c:	cmp	r7, #0
   15260:	moveq	r5, r4
   15264:	mov	r7, ip
   15268:	mov	r4, r3
   1526c:	mov	r3, #1
   15270:	bl	26fa4 <__flatcc_fb_create_join_path@@Base>
   15274:	mov	r8, r0
   15278:	bl	15098 <flatcc_parse_file@@Base+0x310>
   1527c:	mov	r0, r4
   15280:	mov	r1, r7
   15284:	mov	r2, r5
   15288:	mov	r3, #1
   1528c:	bl	26fa4 <__flatcc_fb_create_join_path@@Base>
   15290:	mov	r4, r0
   15294:	bl	15098 <flatcc_parse_file@@Base+0x310>
   15298:	mov	r0, r4
   1529c:	bl	271a0 <__flatcc_fb_create_make_path@@Base>
   152a0:	mov	r9, r0
   152a4:	bl	15098 <flatcc_parse_file@@Base+0x310>
   152a8:	cmp	r4, #0
   152ac:	beq	152b8 <flatcc_parse_file@@Base+0x530>
   152b0:	mov	r0, r4
   152b4:	bl	147dc <free@plt>
   152b8:	movw	r1, #20311	; 0x4f57
   152bc:	movt	r1, #3
   152c0:	mov	r0, r8
   152c4:	bl	147d0 <fopen@plt>
   152c8:	mov	r7, r0
   152cc:	cmp	r0, #0
   152d0:	beq	15380 <flatcc_parse_file@@Base+0x5f8>
   152d4:	movw	r1, #20361	; 0x4f89
   152d8:	movt	r1, #3
   152dc:	mov	r0, r7
   152e0:	mov	r2, r9
   152e4:	bl	14890 <fprintf@plt>
   152e8:	ldr	r5, [r6]
   152ec:	cmp	r5, #0
   152f0:	beq	15338 <flatcc_parse_file@@Base+0x5b0>
   152f4:	movw	r6, #20365	; 0x4f8d
   152f8:	movt	r6, #3
   152fc:	ldr	r0, [r5, #548]	; 0x224
   15300:	bl	271a0 <__flatcc_fb_create_make_path@@Base>
   15304:	mov	r4, r0
   15308:	bl	15098 <flatcc_parse_file@@Base+0x310>
   1530c:	mov	r0, r7
   15310:	mov	r1, r6
   15314:	mov	r2, r4
   15318:	bl	14890 <fprintf@plt>
   1531c:	ldr	r5, [r5]
   15320:	cmp	r4, #0
   15324:	beq	15330 <flatcc_parse_file@@Base+0x5a8>
   15328:	mov	r0, r4
   1532c:	bl	147dc <free@plt>
   15330:	cmp	r5, #0
   15334:	bne	152fc <flatcc_parse_file@@Base+0x574>
   15338:	mov	r0, #10
   1533c:	mov	r1, r7
   15340:	bl	1480c <fputc_unlocked@plt>
   15344:	mov	r6, #0
   15348:	cmp	r8, #0
   1534c:	beq	15358 <flatcc_parse_file@@Base+0x5d0>
   15350:	mov	r0, r8
   15354:	bl	147dc <free@plt>
   15358:	cmp	r9, #0
   1535c:	beq	15368 <flatcc_parse_file@@Base+0x5e0>
   15360:	mov	r0, r9
   15364:	bl	147dc <free@plt>
   15368:	cmp	r7, #0
   1536c:	beq	15378 <flatcc_parse_file@@Base+0x5f0>
   15370:	mov	r0, r7
   15374:	bl	148d8 <fclose@plt>
   15378:	mov	r0, r6
   1537c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15380:	movw	r1, #20314	; 0x4f5a
   15384:	movt	r1, #3
   15388:	mov	r0, r6
   1538c:	mov	r2, r8
   15390:	bl	27368 <__flatcc_fb_print_error@@Base>
   15394:	mvn	r6, #0
   15398:	cmp	r8, #0
   1539c:	bne	15350 <flatcc_parse_file@@Base+0x5c8>
   153a0:	b	15358 <flatcc_parse_file@@Base+0x5d0>
   153a4:	movw	r0, #20168	; 0x4ec8
   153a8:	movt	r0, #3
   153ac:	movw	r1, #20189	; 0x4edd
   153b0:	movt	r1, #3
   153b4:	movw	r3, #20259	; 0x4f23
   153b8:	movt	r3, #3
   153bc:	mov	r2, #220	; 0xdc
   153c0:	bl	14950 <__assert_fail@plt>

000153c4 <flatcc_generate_binary_schema_to_buffer@@Base>:
   153c4:	push	{fp, lr}
   153c8:	mov	fp, sp
   153cc:	sub	sp, sp, #8
   153d0:	mov	ip, r1
   153d4:	str	r2, [sp, #4]
   153d8:	add	r2, r0, #128	; 0x80
   153dc:	add	r1, r0, #352	; 0x160
   153e0:	add	r3, sp, #4
   153e4:	mov	r0, r2
   153e8:	mov	r2, ip
   153ec:	bl	22db4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base>
   153f0:	ldr	r1, [sp, #4]
   153f4:	cmp	r0, #0
   153f8:	mvneq	r1, #0
   153fc:	mov	r0, r1
   15400:	mov	sp, fp
   15404:	pop	{fp, pc}

00015408 <flatcc_generate_binary_schema@@Base>:
   15408:	mov	r2, r1
   1540c:	add	r3, r0, #128	; 0x80
   15410:	add	r1, r0, #352	; 0x160
   15414:	mov	r0, r3
   15418:	b	22fb0 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>

0001541c <flatcc_generate_files@@Base>:
   1541c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15420:	add	fp, sp, #24
   15424:	sub	sp, sp, #232	; 0xe8
   15428:	mvn	r4, #0
   1542c:	cmp	r0, #0
   15430:	beq	15444 <flatcc_generate_files@@Base+0x28>
   15434:	mov	r5, r0
   15438:	ldr	r0, [r0, #108]	; 0x6c
   1543c:	cmp	r0, #0
   15440:	beq	15450 <flatcc_generate_files@@Base+0x34>
   15444:	mov	r0, r4
   15448:	sub	sp, fp, #24
   1544c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15450:	mov	r0, #0
   15454:	mov	r1, r5
   15458:	mov	r7, r1
   1545c:	str	r0, [r1, #4]
   15460:	ldr	r1, [r1]
   15464:	cmp	r1, #0
   15468:	mov	r0, r7
   1546c:	bne	15458 <flatcc_generate_files@@Base+0x3c>
   15470:	ldr	r0, [r5, #308]	; 0x134
   15474:	add	r6, r5, #128	; 0x80
   15478:	cmp	r0, #0
   1547c:	beq	15494 <flatcc_generate_files@@Base+0x78>
   15480:	add	r1, r5, #352	; 0x160
   15484:	mov	r0, r6
   15488:	bl	23024 <__flatcc_fb_codegen_bfbs_to_file@@Base>
   1548c:	cmp	r0, #0
   15490:	bne	15444 <flatcc_generate_files@@Base+0x28>
   15494:	mov	r0, sp
   15498:	mov	r1, r6
   1549c:	bl	157a8 <__flatcc_fb_init_output_c@@Base>
   154a0:	cmp	r0, #0
   154a4:	bne	15444 <flatcc_generate_files@@Base+0x28>
   154a8:	ldr	r0, [r5, #256]	; 0x100
   154ac:	cmp	r0, #0
   154b0:	beq	15518 <flatcc_generate_files@@Base+0xfc>
   154b4:	ldr	r0, [r5, #120]	; 0x78
   154b8:	mov	r4, #0
   154bc:	cmp	r0, #0
   154c0:	beq	15548 <flatcc_generate_files@@Base+0x12c>
   154c4:	ldr	r0, [r5, #300]	; 0x12c
   154c8:	cmp	r0, #0
   154cc:	beq	15530 <flatcc_generate_files@@Base+0x114>
   154d0:	cmp	r7, #0
   154d4:	beq	15548 <flatcc_generate_files@@Base+0x12c>
   154d8:	mov	r5, sp
   154dc:	ldr	r0, [r7, #108]	; 0x6c
   154e0:	cmp	r0, #0
   154e4:	bne	15544 <flatcc_generate_files@@Base+0x128>
   154e8:	add	r1, r7, #352	; 0x160
   154ec:	mov	r0, r5
   154f0:	bl	15d00 <__flatcc_fb_codegen_c@@Base>
   154f4:	cmp	r0, #0
   154f8:	mov	r4, r0
   154fc:	movwne	r4, #1
   15500:	ldr	r7, [r7, #4]
   15504:	cmp	r7, #0
   15508:	beq	15548 <flatcc_generate_files@@Base+0x12c>
   1550c:	cmp	r0, #0
   15510:	beq	154dc <flatcc_generate_files@@Base+0xc0>
   15514:	b	15548 <flatcc_generate_files@@Base+0x12c>
   15518:	mov	r0, sp
   1551c:	bl	15c40 <__flatcc_fb_codegen_common_c@@Base>
   15520:	mov	r4, r0
   15524:	cmp	r0, #0
   15528:	bne	15548 <flatcc_generate_files@@Base+0x12c>
   1552c:	b	154b4 <flatcc_generate_files@@Base+0x98>
   15530:	add	r1, r5, #352	; 0x160
   15534:	mov	r0, sp
   15538:	bl	15d00 <__flatcc_fb_codegen_c@@Base>
   1553c:	mov	r4, r0
   15540:	b	15548 <flatcc_generate_files@@Base+0x12c>
   15544:	mov	r4, #1
   15548:	mov	r0, sp
   1554c:	bl	15770 <__flatcc_fb_end_output_c@@Base>
   15550:	b	15444 <flatcc_generate_files@@Base+0x28>

00015554 <flatcc_destroy_context@@Base>:
   15554:	push	{r4, r5, fp, lr}
   15558:	add	fp, sp, #8
   1555c:	cmp	r0, #0
   15560:	popeq	{r4, r5, fp, pc}
   15564:	mov	r4, r0
   15568:	ldr	r5, [r4]
   1556c:	mov	r0, r4
   15570:	bl	28ab0 <__flatcc_fb_clear_parser@@Base>
   15574:	mov	r0, r4
   15578:	bl	147dc <free@plt>
   1557c:	cmp	r5, #0
   15580:	mov	r4, r5
   15584:	bne	15568 <flatcc_destroy_context@@Base+0x14>
   15588:	pop	{r4, r5, fp, pc}
   1558c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15590:	add	fp, sp, #24
   15594:	sub	sp, sp, #8
   15598:	mov	r6, r2
   1559c:	mov	r8, r1
   155a0:	mov	r7, r0
   155a4:	mov	r0, #560	; 0x230
   155a8:	bl	14848 <malloc@plt>
   155ac:	mov	r4, #0
   155b0:	cmp	r0, #0
   155b4:	beq	155f8 <flatcc_destroy_context@@Base+0xa4>
   155b8:	mov	r5, r0
   155bc:	ldr	r3, [r6, #8]
   155c0:	ldr	r1, [r6, #12]
   155c4:	ldr	r0, [r6, #412]	; 0x19c
   155c8:	str	r1, [sp]
   155cc:	str	r0, [sp, #4]
   155d0:	mov	r0, r5
   155d4:	mov	r1, r7
   155d8:	mov	r2, r8
   155dc:	bl	276a0 <__flatcc_fb_init_parser@@Base>
   155e0:	cmp	r0, #0
   155e4:	beq	155f4 <flatcc_destroy_context@@Base+0xa0>
   155e8:	mov	r0, r5
   155ec:	bl	147dc <free@plt>
   155f0:	b	155f8 <flatcc_destroy_context@@Base+0xa4>
   155f4:	mov	r4, r5
   155f8:	mov	r0, r4
   155fc:	sub	sp, fp, #24
   15600:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15604:	mov	r2, r0
   15608:	add	r0, r1, #172	; 0xac
   1560c:	movw	r1, #22040	; 0x5618
   15610:	movt	r1, #1
   15614:	b	258f4 <ptr_set_visit@@Base>
   15618:	add	r0, r0, #172	; 0xac
   1561c:	mov	r2, #1
   15620:	b	2575c <ptr_set_insert_item@@Base>

00015624 <__flatcc_fb_open_output_file@@Base>:
   15624:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15628:	add	fp, sp, #24
   1562c:	sub	sp, sp, #8
   15630:	mov	r9, r1
   15634:	mov	r4, r0
   15638:	ldr	r0, [r0, #204]	; 0xcc
   1563c:	ldr	r1, [r4, #212]	; 0xd4
   15640:	ldr	r1, [r1, #216]	; 0xd8
   15644:	movw	r6, #21264	; 0x5310
   15648:	movt	r6, #3
   1564c:	cmp	r1, #0
   15650:	movne	r6, r1
   15654:	mov	r5, #0
   15658:	cmp	r0, #0
   1565c:	bne	156c0 <__flatcc_fb_open_output_file@@Base+0x9c>
   15660:	mov	r7, r3
   15664:	mov	r8, r2
   15668:	mov	r0, r6
   1566c:	bl	14884 <strlen@plt>
   15670:	mov	r1, r0
   15674:	mov	r0, #1
   15678:	str	r7, [sp]
   1567c:	str	r0, [sp, #4]
   15680:	mov	r0, r6
   15684:	mov	r2, r9
   15688:	mov	r3, r8
   1568c:	bl	26e88 <__flatcc_fb_create_join_path_n@@Base>
   15690:	mov	r6, r0
   15694:	bl	156f0 <__flatcc_fb_open_output_file@@Base+0xcc>
   15698:	movw	r1, #20311	; 0x4f57
   1569c:	movt	r1, #3
   156a0:	mov	r0, r6
   156a4:	bl	147d0 <fopen@plt>
   156a8:	str	r0, [r4, #204]	; 0xcc
   156ac:	mov	r5, #0
   156b0:	cmp	r0, #0
   156b4:	beq	156cc <__flatcc_fb_open_output_file@@Base+0xa8>
   156b8:	mov	r0, r6
   156bc:	bl	147dc <free@plt>
   156c0:	mov	r0, r5
   156c4:	sub	sp, fp, #24
   156c8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   156cc:	movw	r0, #4264	; 0x10a8
   156d0:	movt	r0, #6
   156d4:	ldr	r0, [r0]
   156d8:	movw	r1, #20369	; 0x4f91
   156dc:	movt	r1, #3
   156e0:	mov	r2, r6
   156e4:	bl	14890 <fprintf@plt>
   156e8:	mvn	r5, #0
   156ec:	b	156b8 <__flatcc_fb_open_output_file@@Base+0x94>
   156f0:	cmp	r0, #0
   156f4:	bxne	lr
   156f8:	push	{fp, lr}
   156fc:	mov	fp, sp
   15700:	movw	r0, #4264	; 0x10a8
   15704:	movt	r0, #6
   15708:	ldr	r3, [r0]
   1570c:	movw	r0, #20071	; 0x4e67
   15710:	movt	r0, #3
   15714:	mov	r1, #34	; 0x22
   15718:	mov	r2, #1
   1571c:	bl	14830 <fwrite@plt>
   15720:	mov	r0, #1
   15724:	bl	14878 <exit@plt>

00015728 <__flatcc_fb_close_output_file@@Base>:
   15728:	push	{r4, sl, fp, lr}
   1572c:	add	fp, sp, #8
   15730:	mov	r4, r0
   15734:	ldr	r0, [r0, #212]	; 0xd4
   15738:	ldr	r1, [r0, #124]	; 0x7c
   1573c:	cmp	r1, #0
   15740:	bne	15750 <__flatcc_fb_close_output_file@@Base+0x28>
   15744:	ldr	r0, [r0, #108]	; 0x6c
   15748:	cmp	r0, #0
   1574c:	beq	15754 <__flatcc_fb_close_output_file@@Base+0x2c>
   15750:	pop	{r4, sl, fp, pc}
   15754:	ldr	r0, [r4, #204]	; 0xcc
   15758:	cmp	r0, #0
   1575c:	popeq	{r4, sl, fp, pc}
   15760:	bl	148d8 <fclose@plt>
   15764:	mov	r0, #0
   15768:	str	r0, [r4, #204]	; 0xcc
   1576c:	pop	{r4, sl, fp, pc}

00015770 <__flatcc_fb_end_output_c@@Base>:
   15770:	push	{r4, sl, fp, lr}
   15774:	add	fp, sp, #8
   15778:	mov	r4, r0
   1577c:	ldr	r0, [r0, #204]	; 0xcc
   15780:	cmp	r0, #0
   15784:	movwne	r1, #4268	; 0x10ac
   15788:	movtne	r1, #6
   1578c:	ldrne	r1, [r1]
   15790:	cmpne	r0, r1
   15794:	beq	1579c <__flatcc_fb_end_output_c@@Base+0x2c>
   15798:	bl	148d8 <fclose@plt>
   1579c:	mov	r0, #0
   157a0:	str	r0, [r4, #204]	; 0xcc
   157a4:	pop	{r4, sl, fp, pc}

000157a8 <__flatcc_fb_init_output_c@@Base>:
   157a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   157ac:	add	fp, sp, #28
   157b0:	sub	sp, sp, #4
   157b4:	mov	r6, r1
   157b8:	mov	r4, r0
   157bc:	ldr	r5, [r1, #128]	; 0x80
   157c0:	ldr	r7, [r1, #216]	; 0xd8
   157c4:	mov	sl, #0
   157c8:	mov	r1, #0
   157cc:	mov	r2, #232	; 0xe8
   157d0:	bl	148a8 <memset@plt>
   157d4:	str	r6, [r4, #212]	; 0xd4
   157d8:	movw	r0, #20311	; 0x4f57
   157dc:	movt	r0, #3
   157e0:	movw	r8, #20403	; 0x4fb3
   157e4:	movt	r8, #3
   157e8:	cmp	r5, #0
   157ec:	moveq	r8, r0
   157f0:	movw	r9, #21264	; 0x5310
   157f4:	movt	r9, #3
   157f8:	cmp	r7, #0
   157fc:	movne	r9, r7
   15800:	ldr	r5, [r6, #196]	; 0xc4
   15804:	cmp	r5, #0
   15808:	beq	15844 <__flatcc_fb_init_output_c@@Base+0x9c>
   1580c:	mov	r0, r5
   15810:	bl	14884 <strlen@plt>
   15814:	mov	r7, r0
   15818:	cmp	r0, #101	; 0x65
   1581c:	bcc	15850 <__flatcc_fb_init_output_c@@Base+0xa8>
   15820:	movw	r0, #4264	; 0x10a8
   15824:	movt	r0, #6
   15828:	ldr	r0, [r0]
   1582c:	movw	r1, #20406	; 0x4fb6
   15830:	movt	r1, #3
   15834:	mov	r2, #100	; 0x64
   15838:	bl	14890 <fprintf@plt>
   1583c:	mvn	sl, #0
   15840:	b	158b0 <__flatcc_fb_init_output_c@@Base+0x108>
   15844:	movw	r5, #20461	; 0x4fed
   15848:	movt	r5, #3
   1584c:	mov	r7, #11
   15850:	mov	r0, r4
   15854:	mov	r1, r5
   15858:	mov	r2, #100	; 0x64
   1585c:	bl	148b4 <strncpy@plt>
   15860:	strb	sl, [r4, #100]	; 0x64
   15864:	cmp	r7, #0
   15868:	addne	r0, r4, r7
   1586c:	movne	r1, #95	; 0x5f
   15870:	strhne	r1, [r0]
   15874:	add	r5, r4, #102	; 0x66
   15878:	mov	r0, r5
   1587c:	mov	r1, r4
   15880:	bl	15944 <__flatcc_fb_init_output_c@@Base+0x19c>
   15884:	mov	sl, #0
   15888:	strb	sl, [r5, r7]
   1588c:	ldr	r0, [r6, #176]	; 0xb0
   15890:	str	r0, [r4, #224]	; 0xe0
   15894:	ldr	r0, [r6, #108]	; 0x6c
   15898:	cmp	r0, #0
   1589c:	beq	158bc <__flatcc_fb_init_output_c@@Base+0x114>
   158a0:	movw	r0, #4268	; 0x10ac
   158a4:	movt	r0, #6
   158a8:	ldr	r0, [r0]
   158ac:	str	r0, [r4, #204]	; 0xcc
   158b0:	mov	r0, sl
   158b4:	sub	sp, fp, #28
   158b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   158bc:	ldr	r0, [r4, #212]	; 0xd4
   158c0:	ldr	r1, [r0, #124]	; 0x7c
   158c4:	cmp	r1, #0
   158c8:	beq	158b0 <__flatcc_fb_init_output_c@@Base+0x108>
   158cc:	movw	r2, #21264	; 0x5310
   158d0:	movt	r2, #3
   158d4:	mov	r0, r9
   158d8:	mov	r3, #1
   158dc:	bl	26fa4 <__flatcc_fb_create_join_path@@Base>
   158e0:	mov	r6, r0
   158e4:	bl	156f0 <__flatcc_fb_open_output_file@@Base+0xcc>
   158e8:	mov	r0, r6
   158ec:	mov	r1, r8
   158f0:	bl	147d0 <fopen@plt>
   158f4:	str	r0, [r4, #204]	; 0xcc
   158f8:	mov	sl, #0
   158fc:	cmp	r0, #0
   15900:	beq	15918 <__flatcc_fb_init_output_c@@Base+0x170>
   15904:	cmp	r6, #0
   15908:	beq	158b0 <__flatcc_fb_init_output_c@@Base+0x108>
   1590c:	mov	r0, r6
   15910:	bl	147dc <free@plt>
   15914:	b	158b0 <__flatcc_fb_init_output_c@@Base+0x108>
   15918:	movw	r0, #4264	; 0x10a8
   1591c:	movt	r0, #6
   15920:	ldr	r0, [r0]
   15924:	movw	r1, #20369	; 0x4f91
   15928:	movt	r1, #3
   1592c:	mov	r2, r6
   15930:	bl	14890 <fprintf@plt>
   15934:	mvn	sl, #0
   15938:	cmp	r6, #0
   1593c:	bne	1590c <__flatcc_fb_init_output_c@@Base+0x164>
   15940:	b	158b0 <__flatcc_fb_init_output_c@@Base+0x108>
   15944:	push	{r4, r5, r6, sl, fp, lr}
   15948:	add	fp, sp, #16
   1594c:	mov	r4, r0
   15950:	ldrb	r5, [r1]
   15954:	cmp	r5, #0
   15958:	beq	15980 <__flatcc_fb_init_output_c@@Base+0x1d8>
   1595c:	add	r6, r1, #1
   15960:	bl	14860 <__ctype_toupper_loc@plt>
   15964:	ldr	r1, [r0]
   15968:	uxtb	r2, r5
   1596c:	ldr	r1, [r1, r2, lsl #2]
   15970:	strb	r1, [r4], #1
   15974:	ldrb	r5, [r6], #1
   15978:	cmp	r5, #0
   1597c:	bne	15964 <__flatcc_fb_init_output_c@@Base+0x1bc>
   15980:	mov	r0, #0
   15984:	strb	r0, [r4]
   15988:	pop	{r4, r5, r6, sl, fp, pc}

0001598c <__flatcc_fb_gen_c_includes@@Base>:
   1598c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15990:	add	fp, sp, #28
   15994:	sub	sp, sp, #36	; 0x24
   15998:	str	r2, [sp, #12]
   1599c:	str	r1, [sp, #8]
   159a0:	mov	r6, r0
   159a4:	ldr	r0, [r0, #208]	; 0xd0
   159a8:	ldr	r8, [r0]
   159ac:	vmov.i32	q8, #0	; 0x00000000
   159b0:	add	r4, sp, #16
   159b4:	vst1.64	{d16-d17}, [r4]
   159b8:	ldr	r0, [r0, #164]	; 0xa4
   159bc:	bl	26ddc <__flatcc_fb_copy_path@@Base>
   159c0:	mov	r1, r0
   159c4:	mov	r0, r4
   159c8:	mov	r2, #1
   159cc:	bl	2517c <str_set_insert_item@@Base>
   159d0:	cmp	r8, #0
   159d4:	beq	15a94 <__flatcc_fb_gen_c_includes@@Base+0x108>
   159d8:	add	r7, sp, #16
   159dc:	ldrd	r0, [r8, #8]
   159e0:	ldr	r2, [r6, #212]	; 0xd4
   159e4:	ldr	r2, [r2, #96]	; 0x60
   159e8:	bl	271ec <__flatcc_fb_create_basename@@Base>
   159ec:	mov	r4, r0
   159f0:	bl	156f0 <__flatcc_fb_open_output_file@@Base+0xcc>
   159f4:	ldr	r8, [r8]
   159f8:	mov	r0, r4
   159fc:	bl	26ddc <__flatcc_fb_copy_path@@Base>
   15a00:	mov	r5, r0
   15a04:	bl	156f0 <__flatcc_fb_open_output_file@@Base+0xcc>
   15a08:	ldrb	r9, [r5]
   15a0c:	cmp	r9, #0
   15a10:	beq	15a3c <__flatcc_fb_gen_c_includes@@Base+0xb0>
   15a14:	add	sl, r5, #1
   15a18:	bl	14860 <__ctype_toupper_loc@plt>
   15a1c:	ldr	r1, [r0]
   15a20:	uxtb	r2, r9
   15a24:	ldr	r1, [r1, r2, lsl #2]
   15a28:	strb	r1, [sl, #-1]
   15a2c:	ldrb	r9, [sl]
   15a30:	add	sl, sl, #1
   15a34:	cmp	r9, #0
   15a38:	bne	15a1c <__flatcc_fb_gen_c_includes@@Base+0x90>
   15a3c:	mov	r0, r7
   15a40:	mov	r1, r5
   15a44:	mov	r2, #1
   15a48:	bl	2517c <str_set_insert_item@@Base>
   15a4c:	cmp	r0, #0
   15a50:	beq	15a60 <__flatcc_fb_gen_c_includes@@Base+0xd4>
   15a54:	mov	r0, r5
   15a58:	bl	147dc <free@plt>
   15a5c:	b	15a84 <__flatcc_fb_gen_c_includes@@Base+0xf8>
   15a60:	ldr	r0, [r6, #204]	; 0xcc
   15a64:	str	r4, [sp]
   15a68:	ldr	r1, [sp, #8]
   15a6c:	str	r1, [sp, #4]
   15a70:	movw	r1, #20473	; 0x4ff9
   15a74:	movt	r1, #3
   15a78:	mov	r2, r5
   15a7c:	ldr	r3, [sp, #12]
   15a80:	bl	14890 <fprintf@plt>
   15a84:	mov	r0, r4
   15a88:	bl	147dc <free@plt>
   15a8c:	cmp	r8, #0
   15a90:	bne	159dc <__flatcc_fb_gen_c_includes@@Base+0x50>
   15a94:	add	r0, sp, #16
   15a98:	movw	r1, #23216	; 0x5ab0
   15a9c:	movt	r1, #1
   15aa0:	mov	r2, #0
   15aa4:	bl	24e00 <str_set_destroy@@Base>
   15aa8:	sub	sp, fp, #28
   15aac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15ab0:	mov	r0, r1
   15ab4:	b	147dc <free@plt>

00015ab8 <__flatcc_fb_copy_scope@@Base>:
   15ab8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15abc:	add	fp, sp, #24
   15ac0:	mov	r4, r1
   15ac4:	mov	r6, r0
   15ac8:	ldr	r1, [r0]
   15acc:	ldr	r5, [r0, #24]
   15ad0:	cmp	r1, #0
   15ad4:	mov	r0, r5
   15ad8:	beq	15b00 <__flatcc_fb_copy_scope@@Base+0x48>
   15adc:	mov	r0, r5
   15ae0:	ldr	r2, [r1]
   15ae4:	ldr	r1, [r1, #4]
   15ae8:	ldr	r1, [r1, #4]
   15aec:	add	r0, r0, r1
   15af0:	add	r0, r0, #1
   15af4:	cmp	r2, #0
   15af8:	mov	r1, r2
   15afc:	bne	15ae0 <__flatcc_fb_copy_scope@@Base+0x28>
   15b00:	cmp	r0, #101	; 0x65
   15b04:	bls	15b10 <__flatcc_fb_copy_scope@@Base+0x58>
   15b08:	mvn	r5, #0
   15b0c:	b	15b60 <__flatcc_fb_copy_scope@@Base+0xa8>
   15b10:	ldr	r1, [r6, #20]
   15b14:	mov	r0, r4
   15b18:	mov	r2, r5
   15b1c:	bl	147e8 <memcpy@plt>
   15b20:	ldr	r7, [r6]
   15b24:	cmp	r7, #0
   15b28:	beq	15b5c <__flatcc_fb_copy_scope@@Base+0xa4>
   15b2c:	mov	r8, #95	; 0x5f
   15b30:	add	r0, r4, r5
   15b34:	ldr	r2, [r7, #4]
   15b38:	ldm	r2, {r1, r6}
   15b3c:	mov	r2, r6
   15b40:	bl	147e8 <memcpy@plt>
   15b44:	add	r0, r6, r5
   15b48:	strb	r8, [r4, r0]
   15b4c:	add	r5, r0, #1
   15b50:	ldr	r7, [r7]
   15b54:	cmp	r7, #0
   15b58:	bne	15b30 <__flatcc_fb_copy_scope@@Base+0x78>
   15b5c:	add	r4, r4, r5
   15b60:	mov	r0, #0
   15b64:	strb	r0, [r4]
   15b68:	mov	r0, r5
   15b6c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00015b70 <__flatcc_fb_scoped_symbol_name@@Base>:
   15b70:	push	{r4, r5, fp, lr}
   15b74:	add	fp, sp, #8
   15b78:	mov	r4, r2
   15b7c:	ldr	r5, [r1, #4]
   15b80:	ldr	r1, [r2, #204]	; 0xcc
   15b84:	cmp	r1, r0
   15b88:	beq	15ba0 <__flatcc_fb_scoped_symbol_name@@Base+0x30>
   15b8c:	mov	r1, r4
   15b90:	bl	15ab8 <__flatcc_fb_copy_scope@@Base>
   15b94:	str	r0, [r4, #208]	; 0xd0
   15b98:	cmn	r0, #1
   15b9c:	ble	15c14 <__flatcc_fb_scoped_symbol_name@@Base+0xa4>
   15ba0:	ldr	r2, [r5, #4]
   15ba4:	ldr	r0, [r4, #208]	; 0xd0
   15ba8:	add	r0, r0, r2
   15bac:	str	r2, [r4, #212]	; 0xd4
   15bb0:	str	r0, [r4, #216]	; 0xd8
   15bb4:	cmp	r0, #204	; 0xcc
   15bb8:	bge	15be0 <__flatcc_fb_scoped_symbol_name@@Base+0x70>
   15bbc:	ldr	r0, [r4, #208]	; 0xd0
   15bc0:	ldr	r2, [r4, #212]	; 0xd4
   15bc4:	add	r0, r4, r0
   15bc8:	ldr	r1, [r5]
   15bcc:	bl	147e8 <memcpy@plt>
   15bd0:	ldr	r0, [r4, #216]	; 0xd8
   15bd4:	mov	r1, #0
   15bd8:	strb	r1, [r4, r0]
   15bdc:	pop	{r4, r5, fp, pc}
   15be0:	ldr	r3, [r5]
   15be4:	movw	r0, #4264	; 0x10a8
   15be8:	movt	r0, #6
   15bec:	ldr	r0, [r0]
   15bf0:	movw	r1, #20539	; 0x503b
   15bf4:	movt	r1, #3
   15bf8:	bl	14890 <fprintf@plt>
   15bfc:	mov	r0, #203	; 0xcb
   15c00:	ldr	r1, [r4, #208]	; 0xd0
   15c04:	rsb	r1, r1, #203	; 0xcb
   15c08:	str	r1, [r4, #212]	; 0xd4
   15c0c:	str	r0, [r4, #216]	; 0xd8
   15c10:	b	15bbc <__flatcc_fb_scoped_symbol_name@@Base+0x4c>
   15c14:	mov	r0, #0
   15c18:	str	r0, [r4, #208]	; 0xd0
   15c1c:	movw	r0, #4264	; 0x10a8
   15c20:	movt	r0, #6
   15c24:	ldr	r3, [r0]
   15c28:	movw	r0, #20510	; 0x501e
   15c2c:	movt	r0, #3
   15c30:	mov	r1, #28
   15c34:	mov	r2, #1
   15c38:	bl	14830 <fwrite@plt>
   15c3c:	b	15ba0 <__flatcc_fb_scoped_symbol_name@@Base+0x30>

00015c40 <__flatcc_fb_codegen_common_c@@Base>:
   15c40:	push	{r4, r5, r6, sl, fp, lr}
   15c44:	add	fp, sp, #16
   15c48:	mov	r4, r0
   15c4c:	bl	14884 <strlen@plt>
   15c50:	sub	r5, r0, #1
   15c54:	ldr	r0, [r4, #212]	; 0xd4
   15c58:	ldr	r0, [r0, #144]	; 0x90
   15c5c:	cmp	r0, #0
   15c60:	beq	15ca4 <__flatcc_fb_codegen_common_c@@Base+0x64>
   15c64:	movw	r3, #20577	; 0x5061
   15c68:	movt	r3, #3
   15c6c:	mov	r0, r4
   15c70:	mov	r1, r4
   15c74:	mov	r2, r5
   15c78:	bl	15624 <__flatcc_fb_open_output_file@@Base>
   15c7c:	mvn	r6, #0
   15c80:	cmp	r0, #0
   15c84:	bne	15cdc <__flatcc_fb_codegen_common_c@@Base+0x9c>
   15c88:	mov	r0, r4
   15c8c:	bl	15ee4 <__flatcc_fb_gen_common_c_header@@Base>
   15c90:	mov	r6, r0
   15c94:	mov	r0, r4
   15c98:	bl	15728 <__flatcc_fb_close_output_file@@Base>
   15c9c:	cmp	r6, #0
   15ca0:	bne	15cdc <__flatcc_fb_codegen_common_c@@Base+0x9c>
   15ca4:	ldr	r0, [r4, #212]	; 0xd4
   15ca8:	ldr	r0, [r0, #148]	; 0x94
   15cac:	mov	r6, #0
   15cb0:	cmp	r0, #0
   15cb4:	beq	15cdc <__flatcc_fb_codegen_common_c@@Base+0x9c>
   15cb8:	movw	r3, #20594	; 0x5072
   15cbc:	movt	r3, #3
   15cc0:	mov	r0, r4
   15cc4:	mov	r1, r4
   15cc8:	mov	r2, r5
   15ccc:	bl	15624 <__flatcc_fb_open_output_file@@Base>
   15cd0:	mvn	r6, #0
   15cd4:	cmp	r0, #0
   15cd8:	beq	15ce4 <__flatcc_fb_codegen_common_c@@Base+0xa4>
   15cdc:	mov	r0, r6
   15ce0:	pop	{r4, r5, r6, sl, fp, pc}
   15ce4:	mov	r0, r4
   15ce8:	bl	18ff8 <__flatcc_fb_gen_common_c_builder_header@@Base>
   15cec:	mov	r0, r4
   15cf0:	bl	15728 <__flatcc_fb_close_output_file@@Base>
   15cf4:	mov	r6, #0
   15cf8:	mov	r0, r6
   15cfc:	pop	{r4, r5, r6, sl, fp, pc}

00015d00 <__flatcc_fb_codegen_c@@Base>:
   15d00:	push	{r4, r5, r6, sl, fp, lr}
   15d04:	add	fp, sp, #16
   15d08:	mov	r4, r0
   15d0c:	str	r1, [r0, #208]	; 0xd0
   15d10:	ldr	r0, [r1, #60]	; 0x3c
   15d14:	mov	r1, #0
   15d18:	mov	r2, #0
   15d1c:	bl	26388 <fb_scope_table_find@@Base>
   15d20:	str	r0, [r4, #216]	; 0xd8
   15d24:	ldr	r0, [r4, #208]	; 0xd0
   15d28:	ldr	r6, [r0, #160]	; 0xa0
   15d2c:	mov	r0, r6
   15d30:	bl	14884 <strlen@plt>
   15d34:	mov	r5, r0
   15d38:	ldr	r0, [r4, #212]	; 0xd4
   15d3c:	ldr	r0, [r0, #152]	; 0x98
   15d40:	cmp	r0, #0
   15d44:	beq	15d88 <__flatcc_fb_codegen_c@@Base+0x88>
   15d48:	movw	r3, #49097	; 0xbfc9
   15d4c:	movt	r3, #4
   15d50:	mov	r0, r4
   15d54:	mov	r1, r6
   15d58:	mov	r2, r5
   15d5c:	bl	15624 <__flatcc_fb_open_output_file@@Base>
   15d60:	mov	r1, r0
   15d64:	mvn	r0, #0
   15d68:	cmp	r1, #0
   15d6c:	bne	15ee0 <__flatcc_fb_codegen_c@@Base+0x1e0>
   15d70:	mov	r0, r4
   15d74:	bl	1681c <__flatcc_fb_gen_c_reader@@Base>
   15d78:	cmp	r0, #0
   15d7c:	bne	15ee0 <__flatcc_fb_codegen_c@@Base+0x1e0>
   15d80:	mov	r0, r4
   15d84:	bl	15728 <__flatcc_fb_close_output_file@@Base>
   15d88:	ldr	r0, [r4, #212]	; 0xd4
   15d8c:	ldr	r0, [r0, #156]	; 0x9c
   15d90:	cmp	r0, #0
   15d94:	beq	15ddc <__flatcc_fb_codegen_c@@Base+0xdc>
   15d98:	ldr	r0, [r4, #208]	; 0xd0
   15d9c:	ldr	r1, [r0, #160]	; 0xa0
   15da0:	movw	r3, #47817	; 0xbac9
   15da4:	movt	r3, #4
   15da8:	mov	r0, r4
   15dac:	mov	r2, r5
   15db0:	bl	15624 <__flatcc_fb_open_output_file@@Base>
   15db4:	mov	r1, r0
   15db8:	mvn	r0, #0
   15dbc:	cmp	r1, #0
   15dc0:	bne	15ee0 <__flatcc_fb_codegen_c@@Base+0x1e0>
   15dc4:	mov	r0, r4
   15dc8:	bl	198b8 <__flatcc_fb_gen_c_builder@@Base>
   15dcc:	cmp	r0, #0
   15dd0:	bne	15ee0 <__flatcc_fb_codegen_c@@Base+0x1e0>
   15dd4:	mov	r0, r4
   15dd8:	bl	15728 <__flatcc_fb_close_output_file@@Base>
   15ddc:	ldr	r0, [r4, #212]	; 0xd4
   15de0:	ldr	r0, [r0, #160]	; 0xa0
   15de4:	cmp	r0, #0
   15de8:	beq	15e30 <__flatcc_fb_codegen_c@@Base+0x130>
   15dec:	ldr	r0, [r4, #208]	; 0xd0
   15df0:	ldr	r1, [r0, #160]	; 0xa0
   15df4:	movw	r3, #20612	; 0x5084
   15df8:	movt	r3, #3
   15dfc:	mov	r0, r4
   15e00:	mov	r2, r5
   15e04:	bl	15624 <__flatcc_fb_open_output_file@@Base>
   15e08:	mov	r1, r0
   15e0c:	mvn	r0, #0
   15e10:	cmp	r1, #0
   15e14:	bne	15ee0 <__flatcc_fb_codegen_c@@Base+0x1e0>
   15e18:	mov	r0, r4
   15e1c:	bl	1beec <__flatcc_fb_gen_c_verifier@@Base>
   15e20:	cmp	r0, #0
   15e24:	bne	15ee0 <__flatcc_fb_codegen_c@@Base+0x1e0>
   15e28:	mov	r0, r4
   15e2c:	bl	15728 <__flatcc_fb_close_output_file@@Base>
   15e30:	ldr	r0, [r4, #212]	; 0xd4
   15e34:	ldr	r0, [r0, #164]	; 0xa4
   15e38:	cmp	r0, #0
   15e3c:	beq	15e84 <__flatcc_fb_codegen_c@@Base+0x184>
   15e40:	ldr	r0, [r4, #208]	; 0xd0
   15e44:	ldr	r1, [r0, #160]	; 0xa0
   15e48:	movw	r3, #20624	; 0x5090
   15e4c:	movt	r3, #3
   15e50:	mov	r0, r4
   15e54:	mov	r2, r5
   15e58:	bl	15624 <__flatcc_fb_open_output_file@@Base>
   15e5c:	mov	r1, r0
   15e60:	mvn	r0, #0
   15e64:	cmp	r1, #0
   15e68:	bne	15ee0 <__flatcc_fb_codegen_c@@Base+0x1e0>
   15e6c:	mov	r0, r4
   15e70:	bl	1c9fc <__flatcc_fb_gen_c_json_parser@@Base>
   15e74:	cmp	r0, #0
   15e78:	bne	15ee0 <__flatcc_fb_codegen_c@@Base+0x1e0>
   15e7c:	mov	r0, r4
   15e80:	bl	15728 <__flatcc_fb_close_output_file@@Base>
   15e84:	ldr	r0, [r4, #212]	; 0xd4
   15e88:	ldr	r1, [r0, #168]	; 0xa8
   15e8c:	mov	r0, #0
   15e90:	cmp	r1, #0
   15e94:	beq	15ee0 <__flatcc_fb_codegen_c@@Base+0x1e0>
   15e98:	ldr	r0, [r4, #208]	; 0xd0
   15e9c:	ldr	r1, [r0, #160]	; 0xa0
   15ea0:	movw	r3, #20639	; 0x509f
   15ea4:	movt	r3, #3
   15ea8:	mov	r0, r4
   15eac:	mov	r2, r5
   15eb0:	bl	15624 <__flatcc_fb_open_output_file@@Base>
   15eb4:	mov	r1, r0
   15eb8:	mvn	r0, #0
   15ebc:	cmp	r1, #0
   15ec0:	bne	15ee0 <__flatcc_fb_codegen_c@@Base+0x1e0>
   15ec4:	mov	r0, r4
   15ec8:	bl	21688 <__flatcc_fb_gen_c_json_printer@@Base>
   15ecc:	cmp	r0, #0
   15ed0:	popne	{r4, r5, r6, sl, fp, pc}
   15ed4:	mov	r0, r4
   15ed8:	bl	15728 <__flatcc_fb_close_output_file@@Base>
   15edc:	mov	r0, #0
   15ee0:	pop	{r4, r5, r6, sl, fp, pc}

00015ee4 <__flatcc_fb_gen_common_c_header@@Base>:
   15ee4:	push	{r4, r5, fp, lr}
   15ee8:	add	fp, sp, #8
   15eec:	mov	r5, r0
   15ef0:	ldr	r0, [r0, #204]	; 0xcc
   15ef4:	add	r4, r5, #102	; 0x66
   15ef8:	movw	r1, #20655	; 0x50af
   15efc:	movt	r1, #3
   15f00:	mov	r2, r4
   15f04:	mov	r3, r4
   15f08:	bl	14890 <fprintf@plt>
   15f0c:	ldr	r3, [r5, #204]	; 0xcc
   15f10:	movw	r0, #20710	; 0x50e6
   15f14:	movt	r0, #3
   15f18:	mov	r1, #81	; 0x51
   15f1c:	mov	r2, #1
   15f20:	bl	14830 <fwrite@plt>
   15f24:	ldr	r3, [r5, #204]	; 0xcc
   15f28:	movw	r0, #20792	; 0x5138
   15f2c:	movt	r0, #3
   15f30:	mov	r1, #52	; 0x34
   15f34:	mov	r2, #1
   15f38:	bl	14830 <fwrite@plt>
   15f3c:	ldr	r0, [r5, #212]	; 0xd4
   15f40:	ldr	r0, [r0, #136]	; 0x88
   15f44:	cmp	r0, #0
   15f48:	bne	15f64 <__flatcc_fb_gen_common_c_header@@Base+0x80>
   15f4c:	ldr	r3, [r5, #204]	; 0xcc
   15f50:	movw	r0, #20845	; 0x516d
   15f54:	movt	r0, #3
   15f58:	mov	r1, #135	; 0x87
   15f5c:	mov	r2, #1
   15f60:	bl	14830 <fwrite@plt>
   15f64:	mov	r0, r5
   15f68:	bl	15f98 <__flatcc_fb_gen_common_c_header@@Base+0xb4>
   15f6c:	mov	r0, r5
   15f70:	bl	15fc0 <__flatcc_fb_gen_common_c_header@@Base+0xdc>
   15f74:	mov	r0, r5
   15f78:	bl	167f4 <__flatcc_fb_gen_common_c_header@@Base+0x910>
   15f7c:	ldr	r0, [r5, #204]	; 0xcc
   15f80:	movw	r1, #20981	; 0x51f5
   15f84:	movt	r1, #3
   15f88:	mov	r2, r4
   15f8c:	bl	14890 <fprintf@plt>
   15f90:	mov	r0, #0
   15f94:	pop	{r4, r5, fp, pc}
   15f98:	ldr	r1, [r0, #212]	; 0xd4
   15f9c:	ldr	r1, [r1, #140]	; 0x8c
   15fa0:	cmp	r1, #0
   15fa4:	bxeq	lr
   15fa8:	ldr	r3, [r0, #204]	; 0xcc
   15fac:	movw	r0, #21186	; 0x52c2
   15fb0:	movt	r0, #3
   15fb4:	mov	r1, #36	; 0x24
   15fb8:	mov	r2, #1
   15fbc:	b	14830 <fwrite@plt>
   15fc0:	push	{r4, sl, fp, lr}
   15fc4:	add	fp, sp, #8
   15fc8:	sub	sp, sp, #232	; 0xe8
   15fcc:	mov	r4, r0
   15fd0:	ldr	r3, [r0, #204]	; 0xcc
   15fd4:	movw	r0, #21223	; 0x52e7
   15fd8:	movt	r0, #3
   15fdc:	mov	r1, #41	; 0x29
   15fe0:	mov	r2, #1
   15fe4:	bl	14830 <fwrite@plt>
   15fe8:	movw	r1, #21265	; 0x5311
   15fec:	movt	r1, #3
   15ff0:	mov	r0, r4
   15ff4:	bl	147c4 <strcmp@plt>
   15ff8:	cmp	r0, #0
   15ffc:	beq	16084 <__flatcc_fb_gen_common_c_header@@Base+0x1a0>
   16000:	ldr	r0, [r4, #204]	; 0xcc
   16004:	str	r4, [sp]
   16008:	str	r4, [sp, #4]
   1600c:	str	r4, [sp, #8]
   16010:	movw	r1, #21278	; 0x531e
   16014:	movt	r1, #3
   16018:	mov	r2, r4
   1601c:	mov	r3, r4
   16020:	bl	14890 <fprintf@plt>
   16024:	ldr	r0, [r4, #204]	; 0xcc
   16028:	str	r4, [sp]
   1602c:	str	r4, [sp, #4]
   16030:	movw	r1, #21485	; 0x53ed
   16034:	movt	r1, #3
   16038:	movw	r2, #21263	; 0x530f
   1603c:	movt	r2, #3
   16040:	mov	r3, r4
   16044:	bl	14890 <fprintf@plt>
   16048:	ldr	r0, [r4, #204]	; 0xcc
   1604c:	str	r4, [sp]
   16050:	str	r4, [sp, #4]
   16054:	str	r4, [sp, #8]
   16058:	movw	r1, #21828	; 0x5544
   1605c:	movt	r1, #3
   16060:	mov	r2, r4
   16064:	mov	r3, r4
   16068:	bl	14890 <fprintf@plt>
   1606c:	ldr	r0, [r4, #204]	; 0xcc
   16070:	add	r2, r4, #102	; 0x66
   16074:	movw	r1, #22442	; 0x57aa
   16078:	movt	r1, #3
   1607c:	mov	r3, r2
   16080:	bl	14890 <fprintf@plt>
   16084:	ldr	r0, [r4, #204]	; 0xcc
   16088:	movw	r1, #22522	; 0x57fa
   1608c:	movt	r1, #3
   16090:	mov	r2, r4
   16094:	mov	r3, r4
   16098:	bl	14890 <fprintf@plt>
   1609c:	ldr	r0, [r4, #204]	; 0xcc
   160a0:	str	r4, [sp]
   160a4:	str	r4, [sp, #4]
   160a8:	str	r4, [sp, #8]
   160ac:	str	r4, [sp, #12]
   160b0:	str	r4, [sp, #16]
   160b4:	movw	r1, #22663	; 0x5887
   160b8:	movt	r1, #3
   160bc:	mov	r2, r4
   160c0:	mov	r3, r4
   160c4:	bl	14890 <fprintf@plt>
   160c8:	ldr	r0, [r4, #204]	; 0xcc
   160cc:	movw	r1, #23034	; 0x59fa
   160d0:	movt	r1, #3
   160d4:	mov	r2, r4
   160d8:	mov	r3, r4
   160dc:	bl	14890 <fprintf@plt>
   160e0:	ldr	r0, [r4, #204]	; 0xcc
   160e4:	str	r4, [sp]
   160e8:	str	r4, [sp, #4]
   160ec:	movw	r1, #23119	; 0x5a4f
   160f0:	movt	r1, #3
   160f4:	mov	r2, r4
   160f8:	mov	r3, r4
   160fc:	bl	14890 <fprintf@plt>
   16100:	ldr	r2, [r4, #204]	; 0xcc
   16104:	ldr	r0, [r4, #212]	; 0xd4
   16108:	ldr	r0, [r0, #32]
   1610c:	cmp	r0, #0
   16110:	beq	1612c <__flatcc_fb_gen_common_c_header@@Base+0x248>
   16114:	movw	r1, #23412	; 0x5b74
   16118:	movt	r1, #3
   1611c:	mov	r0, r2
   16120:	mov	r2, r4
   16124:	bl	14890 <fprintf@plt>
   16128:	b	16138 <__flatcc_fb_gen_common_c_header@@Base+0x254>
   1612c:	mov	r0, #10
   16130:	mov	r1, r2
   16134:	bl	148f0 <fputc@plt>
   16138:	ldr	r0, [r4, #204]	; 0xcc
   1613c:	movw	r1, #23457	; 0x5ba1
   16140:	movt	r1, #3
   16144:	mov	r2, r4
   16148:	mov	r3, r4
   1614c:	bl	14890 <fprintf@plt>
   16150:	ldr	r0, [r4, #204]	; 0xcc
   16154:	str	r4, [sp]
   16158:	str	r4, [sp, #4]
   1615c:	str	r4, [sp, #8]
   16160:	movw	r1, #23668	; 0x5c74
   16164:	movt	r1, #3
   16168:	mov	r2, r4
   1616c:	mov	r3, r4
   16170:	bl	14890 <fprintf@plt>
   16174:	ldr	r0, [r4, #204]	; 0xcc
   16178:	str	r4, [sp]
   1617c:	str	r4, [sp, #4]
   16180:	str	r4, [sp, #8]
   16184:	movw	r1, #24094	; 0x5e1e
   16188:	movt	r1, #3
   1618c:	mov	r2, r4
   16190:	mov	r3, r4
   16194:	bl	14890 <fprintf@plt>
   16198:	ldr	r0, [r4, #204]	; 0xcc
   1619c:	str	r4, [sp]
   161a0:	movw	r1, #24254	; 0x5ebe
   161a4:	movt	r1, #3
   161a8:	mov	r2, r4
   161ac:	mov	r3, r4
   161b0:	bl	14890 <fprintf@plt>
   161b4:	ldr	r0, [r4, #204]	; 0xcc
   161b8:	str	r4, [sp]
   161bc:	movw	r1, #24472	; 0x5f98
   161c0:	movt	r1, #3
   161c4:	mov	r2, r4
   161c8:	mov	r3, r4
   161cc:	bl	14890 <fprintf@plt>
   161d0:	ldr	r0, [r4, #204]	; 0xcc
   161d4:	str	r4, [sp]
   161d8:	movw	r1, #24690	; 0x6072
   161dc:	movt	r1, #3
   161e0:	mov	r2, r4
   161e4:	mov	r3, r4
   161e8:	bl	14890 <fprintf@plt>
   161ec:	ldr	r0, [r4, #204]	; 0xcc
   161f0:	str	r4, [sp]
   161f4:	str	r4, [sp, #4]
   161f8:	str	r4, [sp, #8]
   161fc:	movw	r1, #24906	; 0x614a
   16200:	movt	r1, #3
   16204:	mov	r2, r4
   16208:	mov	r3, r4
   1620c:	bl	14890 <fprintf@plt>
   16210:	ldr	r2, [r4, #204]	; 0xcc
   16214:	ldr	r0, [r4, #212]	; 0xd4
   16218:	ldr	r0, [r0, #32]
   1621c:	cmp	r0, #0
   16220:	beq	1623c <__flatcc_fb_gen_common_c_header@@Base+0x358>
   16224:	movw	r1, #25138	; 0x6232
   16228:	movt	r1, #3
   1622c:	mov	r0, r2
   16230:	mov	r2, r4
   16234:	bl	14890 <fprintf@plt>
   16238:	b	16248 <__flatcc_fb_gen_common_c_header@@Base+0x364>
   1623c:	mov	r0, #10
   16240:	mov	r1, r2
   16244:	bl	148f0 <fputc@plt>
   16248:	ldr	r0, [r4, #204]	; 0xcc
   1624c:	str	r4, [sp]
   16250:	str	r4, [sp, #4]
   16254:	movw	r1, #25180	; 0x625c
   16258:	movt	r1, #3
   1625c:	mov	r2, r4
   16260:	mov	r3, r4
   16264:	bl	14890 <fprintf@plt>
   16268:	ldr	r0, [r4, #204]	; 0xcc
   1626c:	movw	r1, #25339	; 0x62fb
   16270:	movt	r1, #3
   16274:	mov	r2, r4
   16278:	mov	r3, r4
   1627c:	bl	14890 <fprintf@plt>
   16280:	ldr	r0, [r4, #204]	; 0xcc
   16284:	str	r4, [sp]
   16288:	movw	r1, #25405	; 0x633d
   1628c:	movt	r1, #3
   16290:	mov	r2, r4
   16294:	mov	r3, r4
   16298:	bl	14890 <fprintf@plt>
   1629c:	ldr	r0, [r4, #204]	; 0xcc
   162a0:	movw	r1, #25543	; 0x63c7
   162a4:	movt	r1, #3
   162a8:	mov	r2, r4
   162ac:	mov	r3, r4
   162b0:	bl	14890 <fprintf@plt>
   162b4:	ldr	r0, [r4, #204]	; 0xcc
   162b8:	str	r4, [sp]
   162bc:	str	r4, [sp, #4]
   162c0:	movw	r1, #25657	; 0x6439
   162c4:	movt	r1, #3
   162c8:	mov	r2, r4
   162cc:	mov	r3, r4
   162d0:	bl	14890 <fprintf@plt>
   162d4:	ldr	r0, [r4, #204]	; 0xcc
   162d8:	movw	r1, #25945	; 0x6559
   162dc:	movt	r1, #3
   162e0:	mov	r2, r4
   162e4:	mov	r3, r4
   162e8:	bl	14890 <fprintf@plt>
   162ec:	ldr	r0, [r4, #204]	; 0xcc
   162f0:	movw	r1, #26064	; 0x65d0
   162f4:	movt	r1, #3
   162f8:	mov	r2, r4
   162fc:	mov	r3, r4
   16300:	bl	14890 <fprintf@plt>
   16304:	ldr	r0, [r4, #204]	; 0xcc
   16308:	str	r4, [sp]
   1630c:	str	r4, [sp, #4]
   16310:	movw	r1, #26192	; 0x6650
   16314:	movt	r1, #3
   16318:	mov	r2, r4
   1631c:	mov	r3, r4
   16320:	bl	14890 <fprintf@plt>
   16324:	ldr	r0, [r4, #204]	; 0xcc
   16328:	str	r4, [sp, #32]
   1632c:	str	r4, [sp, #36]	; 0x24
   16330:	str	r4, [sp]
   16334:	str	r4, [sp, #4]
   16338:	str	r4, [sp, #8]
   1633c:	str	r4, [sp, #12]
   16340:	str	r4, [sp, #16]
   16344:	str	r4, [sp, #20]
   16348:	str	r4, [sp, #24]
   1634c:	str	r4, [sp, #28]
   16350:	movw	r1, #26291	; 0x66b3
   16354:	movt	r1, #3
   16358:	mov	r2, r4
   1635c:	mov	r3, r4
   16360:	bl	14890 <fprintf@plt>
   16364:	ldr	r0, [r4, #204]	; 0xcc
   16368:	movw	r1, #26580	; 0x67d4
   1636c:	movt	r1, #3
   16370:	mov	r2, r4
   16374:	bl	14890 <fprintf@plt>
   16378:	ldr	r0, [r4, #204]	; 0xcc
   1637c:	str	r4, [sp]
   16380:	str	r4, [sp, #4]
   16384:	movw	r1, #26614	; 0x67f6
   16388:	movt	r1, #3
   1638c:	mov	r2, r4
   16390:	mov	r3, r4
   16394:	bl	14890 <fprintf@plt>
   16398:	ldr	r0, [r4, #204]	; 0xcc
   1639c:	str	r4, [sp, #32]
   163a0:	str	r4, [sp, #36]	; 0x24
   163a4:	str	r4, [sp, #40]	; 0x28
   163a8:	str	r4, [sp, #44]	; 0x2c
   163ac:	str	r4, [sp, #48]	; 0x30
   163b0:	str	r4, [sp, #52]	; 0x34
   163b4:	str	r4, [sp, #56]	; 0x38
   163b8:	str	r4, [sp]
   163bc:	str	r4, [sp, #4]
   163c0:	str	r4, [sp, #8]
   163c4:	str	r4, [sp, #12]
   163c8:	str	r4, [sp, #16]
   163cc:	str	r4, [sp, #20]
   163d0:	str	r4, [sp, #24]
   163d4:	str	r4, [sp, #28]
   163d8:	movw	r1, #26749	; 0x687d
   163dc:	movt	r1, #3
   163e0:	mov	r2, r4
   163e4:	mov	r3, r4
   163e8:	bl	14890 <fprintf@plt>
   163ec:	mov	r0, r4
   163f0:	bl	185e8 <__flatcc_fb_gen_c_reader@@Base+0x1dcc>
   163f4:	mov	r0, r4
   163f8:	bl	186d4 <__flatcc_fb_gen_c_reader@@Base+0x1eb8>
   163fc:	mov	r0, r4
   16400:	bl	18804 <__flatcc_fb_gen_c_reader@@Base+0x1fe8>
   16404:	ldr	r0, [r4, #212]	; 0xd4
   16408:	ldr	r0, [r0, #136]	; 0x88
   1640c:	cmp	r0, #0
   16410:	beq	16420 <__flatcc_fb_gen_common_c_header@@Base+0x53c>
   16414:	mov	r0, r4
   16418:	bl	18ec8 <__flatcc_gen_sort@@Base>
   1641c:	b	16438 <__flatcc_fb_gen_common_c_header@@Base+0x554>
   16420:	ldr	r3, [r4, #204]	; 0xcc
   16424:	movw	r0, #27180	; 0x6a2c
   16428:	movt	r0, #3
   1642c:	mov	r1, #20
   16430:	mov	r2, #1
   16434:	bl	14830 <fwrite@plt>
   16438:	ldr	r0, [r4, #204]	; 0xcc
   1643c:	str	r4, [sp]
   16440:	str	r4, [sp, #4]
   16444:	str	r4, [sp, #8]
   16448:	movw	r1, #27201	; 0x6a41
   1644c:	movt	r1, #3
   16450:	mov	r2, r4
   16454:	mov	r3, r4
   16458:	bl	14890 <fprintf@plt>
   1645c:	ldr	r2, [r4, #204]	; 0xcc
   16460:	ldr	r0, [r4, #212]	; 0xd4
   16464:	ldr	r0, [r0, #136]	; 0x88
   16468:	cmp	r0, #0
   1646c:	beq	16488 <__flatcc_fb_gen_common_c_header@@Base+0x5a4>
   16470:	movw	r1, #27426	; 0x6b22
   16474:	movt	r1, #3
   16478:	mov	r0, r2
   1647c:	mov	r2, r4
   16480:	bl	14890 <fprintf@plt>
   16484:	b	16494 <__flatcc_fb_gen_common_c_header@@Base+0x5b0>
   16488:	mov	r0, #10
   1648c:	mov	r1, r2
   16490:	bl	148f0 <fputc@plt>
   16494:	ldr	r1, [r4, #204]	; 0xcc
   16498:	mov	r0, #10
   1649c:	bl	148f0 <fputc@plt>
   164a0:	ldr	r0, [r4, #204]	; 0xcc
   164a4:	str	r4, [sp]
   164a8:	movw	r1, #27458	; 0x6b42
   164ac:	movt	r1, #3
   164b0:	mov	r2, r4
   164b4:	mov	r3, r4
   164b8:	bl	14890 <fprintf@plt>
   164bc:	ldr	r0, [r4, #204]	; 0xcc
   164c0:	str	r4, [sp, #64]	; 0x40
   164c4:	str	r4, [sp, #68]	; 0x44
   164c8:	str	r4, [sp, #72]	; 0x48
   164cc:	str	r4, [sp, #76]	; 0x4c
   164d0:	str	r4, [sp, #80]	; 0x50
   164d4:	str	r4, [sp, #84]	; 0x54
   164d8:	str	r4, [sp, #88]	; 0x58
   164dc:	str	r4, [sp, #92]	; 0x5c
   164e0:	str	r4, [sp, #32]
   164e4:	str	r4, [sp, #36]	; 0x24
   164e8:	str	r4, [sp, #40]	; 0x28
   164ec:	str	r4, [sp, #44]	; 0x2c
   164f0:	str	r4, [sp, #48]	; 0x30
   164f4:	str	r4, [sp, #52]	; 0x34
   164f8:	str	r4, [sp, #56]	; 0x38
   164fc:	str	r4, [sp, #60]	; 0x3c
   16500:	str	r4, [sp]
   16504:	str	r4, [sp, #4]
   16508:	str	r4, [sp, #8]
   1650c:	str	r4, [sp, #12]
   16510:	str	r4, [sp, #16]
   16514:	str	r4, [sp, #20]
   16518:	str	r4, [sp, #24]
   1651c:	str	r4, [sp, #28]
   16520:	movw	r1, #27586	; 0x6bc2
   16524:	movt	r1, #3
   16528:	mov	r2, r4
   1652c:	mov	r3, r4
   16530:	bl	14890 <fprintf@plt>
   16534:	ldr	r0, [r4, #204]	; 0xcc
   16538:	str	r4, [sp, #32]
   1653c:	str	r4, [sp, #36]	; 0x24
   16540:	str	r4, [sp]
   16544:	str	r4, [sp, #4]
   16548:	str	r4, [sp, #8]
   1654c:	str	r4, [sp, #12]
   16550:	str	r4, [sp, #16]
   16554:	str	r4, [sp, #20]
   16558:	str	r4, [sp, #24]
   1655c:	str	r4, [sp, #28]
   16560:	movw	r1, #28117	; 0x6dd5
   16564:	movt	r1, #3
   16568:	mov	r2, r4
   1656c:	mov	r3, r4
   16570:	bl	14890 <fprintf@plt>
   16574:	ldr	r0, [r4, #204]	; 0xcc
   16578:	str	r4, [sp, #224]	; 0xe0
   1657c:	str	r4, [sp, #228]	; 0xe4
   16580:	str	r4, [sp, #192]	; 0xc0
   16584:	str	r4, [sp, #196]	; 0xc4
   16588:	str	r4, [sp, #200]	; 0xc8
   1658c:	str	r4, [sp, #204]	; 0xcc
   16590:	str	r4, [sp, #208]	; 0xd0
   16594:	str	r4, [sp, #212]	; 0xd4
   16598:	str	r4, [sp, #216]	; 0xd8
   1659c:	str	r4, [sp, #220]	; 0xdc
   165a0:	str	r4, [sp, #160]	; 0xa0
   165a4:	str	r4, [sp, #164]	; 0xa4
   165a8:	str	r4, [sp, #168]	; 0xa8
   165ac:	str	r4, [sp, #172]	; 0xac
   165b0:	str	r4, [sp, #176]	; 0xb0
   165b4:	str	r4, [sp, #180]	; 0xb4
   165b8:	str	r4, [sp, #184]	; 0xb8
   165bc:	str	r4, [sp, #188]	; 0xbc
   165c0:	str	r4, [sp, #128]	; 0x80
   165c4:	str	r4, [sp, #132]	; 0x84
   165c8:	str	r4, [sp, #136]	; 0x88
   165cc:	str	r4, [sp, #140]	; 0x8c
   165d0:	str	r4, [sp, #144]	; 0x90
   165d4:	str	r4, [sp, #148]	; 0x94
   165d8:	str	r4, [sp, #152]	; 0x98
   165dc:	str	r4, [sp, #156]	; 0x9c
   165e0:	str	r4, [sp, #96]	; 0x60
   165e4:	str	r4, [sp, #100]	; 0x64
   165e8:	str	r4, [sp, #104]	; 0x68
   165ec:	str	r4, [sp, #108]	; 0x6c
   165f0:	str	r4, [sp, #112]	; 0x70
   165f4:	str	r4, [sp, #116]	; 0x74
   165f8:	str	r4, [sp, #120]	; 0x78
   165fc:	str	r4, [sp, #124]	; 0x7c
   16600:	str	r4, [sp, #64]	; 0x40
   16604:	str	r4, [sp, #68]	; 0x44
   16608:	str	r4, [sp, #72]	; 0x48
   1660c:	str	r4, [sp, #76]	; 0x4c
   16610:	str	r4, [sp, #80]	; 0x50
   16614:	str	r4, [sp, #84]	; 0x54
   16618:	str	r4, [sp, #88]	; 0x58
   1661c:	str	r4, [sp, #92]	; 0x5c
   16620:	str	r4, [sp, #32]
   16624:	str	r4, [sp, #36]	; 0x24
   16628:	str	r4, [sp, #40]	; 0x28
   1662c:	str	r4, [sp, #44]	; 0x2c
   16630:	str	r4, [sp, #48]	; 0x30
   16634:	str	r4, [sp, #52]	; 0x34
   16638:	str	r4, [sp, #56]	; 0x38
   1663c:	str	r4, [sp, #60]	; 0x3c
   16640:	str	r4, [sp]
   16644:	str	r4, [sp, #4]
   16648:	str	r4, [sp, #8]
   1664c:	str	r4, [sp, #12]
   16650:	str	r4, [sp, #16]
   16654:	str	r4, [sp, #20]
   16658:	str	r4, [sp, #24]
   1665c:	str	r4, [sp, #28]
   16660:	movw	r1, #28447	; 0x6f1f
   16664:	movt	r1, #3
   16668:	mov	r2, r4
   1666c:	mov	r3, r4
   16670:	bl	14890 <fprintf@plt>
   16674:	ldr	r0, [r4, #212]	; 0xd4
   16678:	ldr	r0, [r0, #136]	; 0x88
   1667c:	cmp	r0, #0
   16680:	beq	16698 <__flatcc_fb_gen_common_c_header@@Base+0x7b4>
   16684:	ldr	r0, [r4, #204]	; 0xcc
   16688:	movw	r1, #30168	; 0x75d8
   1668c:	movt	r1, #3
   16690:	mov	r2, r4
   16694:	bl	14890 <fprintf@plt>
   16698:	ldr	r0, [r4, #204]	; 0xcc
   1669c:	movw	r1, #30194	; 0x75f2
   166a0:	movt	r1, #3
   166a4:	mov	r2, r4
   166a8:	mov	r3, r4
   166ac:	bl	14890 <fprintf@plt>
   166b0:	ldr	r2, [r4, #204]	; 0xcc
   166b4:	ldr	r0, [r4, #212]	; 0xd4
   166b8:	ldr	r0, [r0, #32]
   166bc:	cmp	r0, #0
   166c0:	beq	166dc <__flatcc_fb_gen_common_c_header@@Base+0x7f8>
   166c4:	movw	r1, #23412	; 0x5b74
   166c8:	movt	r1, #3
   166cc:	mov	r0, r2
   166d0:	mov	r2, r4
   166d4:	bl	14890 <fprintf@plt>
   166d8:	b	166e8 <__flatcc_fb_gen_common_c_header@@Base+0x804>
   166dc:	mov	r0, #10
   166e0:	mov	r1, r2
   166e4:	bl	148f0 <fputc@plt>
   166e8:	ldr	r0, [r4, #204]	; 0xcc
   166ec:	movw	r1, #30347	; 0x768b
   166f0:	movt	r1, #3
   166f4:	mov	r2, r4
   166f8:	bl	14890 <fprintf@plt>
   166fc:	ldr	r0, [r4, #204]	; 0xcc
   16700:	str	r4, [sp, #32]
   16704:	str	r4, [sp, #36]	; 0x24
   16708:	str	r4, [sp, #40]	; 0x28
   1670c:	str	r4, [sp, #44]	; 0x2c
   16710:	str	r4, [sp]
   16714:	str	r4, [sp, #4]
   16718:	str	r4, [sp, #8]
   1671c:	str	r4, [sp, #12]
   16720:	str	r4, [sp, #16]
   16724:	str	r4, [sp, #20]
   16728:	str	r4, [sp, #24]
   1672c:	str	r4, [sp, #28]
   16730:	movw	r1, #30474	; 0x770a
   16734:	movt	r1, #3
   16738:	mov	r2, r4
   1673c:	mov	r3, r4
   16740:	bl	14890 <fprintf@plt>
   16744:	ldr	r0, [r4, #204]	; 0xcc
   16748:	str	r4, [sp]
   1674c:	movw	r1, #31315	; 0x7a53
   16750:	movt	r1, #3
   16754:	mov	r2, r4
   16758:	mov	r3, r4
   1675c:	bl	14890 <fprintf@plt>
   16760:	ldr	r0, [r4, #204]	; 0xcc
   16764:	str	r4, [sp]
   16768:	str	r4, [sp, #4]
   1676c:	str	r4, [sp, #8]
   16770:	str	r4, [sp, #12]
   16774:	movw	r1, #31498	; 0x7b0a
   16778:	movt	r1, #3
   1677c:	mov	r2, r4
   16780:	mov	r3, r4
   16784:	bl	14890 <fprintf@plt>
   16788:	ldr	r0, [r4, #204]	; 0xcc
   1678c:	str	r4, [sp]
   16790:	str	r4, [sp, #4]
   16794:	movw	r1, #31953	; 0x7cd1
   16798:	movt	r1, #3
   1679c:	mov	r2, r4
   167a0:	mov	r3, r4
   167a4:	bl	14890 <fprintf@plt>
   167a8:	ldr	r0, [r4, #204]	; 0xcc
   167ac:	str	r4, [sp]
   167b0:	str	r4, [sp, #4]
   167b4:	str	r4, [sp, #8]
   167b8:	str	r4, [sp, #12]
   167bc:	str	r4, [sp, #16]
   167c0:	str	r4, [sp, #20]
   167c4:	str	r4, [sp, #24]
   167c8:	str	r4, [sp, #28]
   167cc:	movw	r1, #32589	; 0x7f4d
   167d0:	movt	r1, #3
   167d4:	mov	r2, r4
   167d8:	mov	r3, r4
   167dc:	bl	14890 <fprintf@plt>
   167e0:	ldr	r1, [r4, #204]	; 0xcc
   167e4:	mov	r0, #10
   167e8:	sub	sp, fp, #8
   167ec:	pop	{r4, sl, fp, lr}
   167f0:	b	148f0 <fputc@plt>
   167f4:	ldr	r1, [r0, #212]	; 0xd4
   167f8:	ldr	r1, [r1, #140]	; 0x8c
   167fc:	cmp	r1, #0
   16800:	bxeq	lr
   16804:	ldr	r3, [r0, #204]	; 0xcc
   16808:	movw	r0, #45228	; 0xb0ac
   1680c:	movt	r0, #3
   16810:	mov	r1, #36	; 0x24
   16814:	mov	r2, #1
   16818:	b	14830 <fwrite@plt>

0001681c <__flatcc_fb_gen_c_reader@@Base>:
   1681c:	push	{r4, r5, fp, lr}
   16820:	add	fp, sp, #8
   16824:	sub	sp, sp, #8
   16828:	mov	r4, r0
   1682c:	bl	16a34 <__flatcc_fb_gen_c_reader@@Base+0x218>
   16830:	ldr	r0, [r4, #208]	; 0xd0
   16834:	ldr	r5, [r0, #44]	; 0x2c
   16838:	cmp	r5, #0
   1683c:	beq	16858 <__flatcc_fb_gen_c_reader@@Base+0x3c>
   16840:	mov	r0, r4
   16844:	mov	r1, r5
   16848:	bl	16bf0 <__flatcc_fb_gen_c_reader@@Base+0x3d4>
   1684c:	ldr	r5, [r5, #120]	; 0x78
   16850:	cmp	r5, #0
   16854:	bne	16840 <__flatcc_fb_gen_c_reader@@Base+0x24>
   16858:	ldr	r1, [r4, #204]	; 0xcc
   1685c:	mov	r0, #10
   16860:	bl	148f0 <fputc@plt>
   16864:	ldr	r0, [r4, #208]	; 0xd0
   16868:	ldr	r5, [r0, #40]	; 0x28
   1686c:	cmp	r5, #0
   16870:	bne	16884 <__flatcc_fb_gen_c_reader@@Base+0x68>
   16874:	b	168a0 <__flatcc_fb_gen_c_reader@@Base+0x84>
   16878:	ldr	r5, [r5]
   1687c:	cmp	r5, #0
   16880:	beq	168a0 <__flatcc_fb_gen_c_reader@@Base+0x84>
   16884:	ldrh	r0, [r5, #8]
   16888:	cmp	r0, #0
   1688c:	bne	16878 <__flatcc_fb_gen_c_reader@@Base+0x5c>
   16890:	mov	r0, r4
   16894:	mov	r1, r5
   16898:	bl	16bf0 <__flatcc_fb_gen_c_reader@@Base+0x3d4>
   1689c:	b	16878 <__flatcc_fb_gen_c_reader@@Base+0x5c>
   168a0:	ldr	r0, [r4, #208]	; 0xd0
   168a4:	ldr	r5, [r0, #40]	; 0x28
   168a8:	cmp	r5, #0
   168ac:	bne	168c0 <__flatcc_fb_gen_c_reader@@Base+0xa4>
   168b0:	b	168dc <__flatcc_fb_gen_c_reader@@Base+0xc0>
   168b4:	ldr	r5, [r5]
   168b8:	cmp	r5, #0
   168bc:	beq	168dc <__flatcc_fb_gen_c_reader@@Base+0xc0>
   168c0:	ldrh	r0, [r5, #8]
   168c4:	cmp	r0, #1
   168c8:	bhi	168b4 <__flatcc_fb_gen_c_reader@@Base+0x98>
   168cc:	mov	r0, r4
   168d0:	mov	r1, r5
   168d4:	bl	16d44 <__flatcc_fb_gen_c_reader@@Base+0x528>
   168d8:	b	168b4 <__flatcc_fb_gen_c_reader@@Base+0x98>
   168dc:	ldr	r1, [r4, #204]	; 0xcc
   168e0:	mov	r0, #10
   168e4:	bl	148f0 <fputc@plt>
   168e8:	ldr	r0, [r4, #208]	; 0xd0
   168ec:	ldr	r5, [r0, #40]	; 0x28
   168f0:	cmp	r5, #0
   168f4:	bne	16908 <__flatcc_fb_gen_c_reader@@Base+0xec>
   168f8:	b	16924 <__flatcc_fb_gen_c_reader@@Base+0x108>
   168fc:	ldr	r5, [r5]
   16900:	cmp	r5, #0
   16904:	beq	16924 <__flatcc_fb_gen_c_reader@@Base+0x108>
   16908:	ldrh	r0, [r5, #8]
   1690c:	cmp	r0, #3
   16910:	bne	168fc <__flatcc_fb_gen_c_reader@@Base+0xe0>
   16914:	mov	r0, r4
   16918:	mov	r1, r5
   1691c:	bl	16e30 <__flatcc_fb_gen_c_reader@@Base+0x614>
   16920:	b	168fc <__flatcc_fb_gen_c_reader@@Base+0xe0>
   16924:	ldr	r1, [r4, #204]	; 0xcc
   16928:	mov	r0, #10
   1692c:	bl	148f0 <fputc@plt>
   16930:	ldr	r0, [r4, #208]	; 0xd0
   16934:	ldr	r5, [r0, #44]	; 0x2c
   16938:	cmp	r5, #0
   1693c:	beq	16958 <__flatcc_fb_gen_c_reader@@Base+0x13c>
   16940:	mov	r0, r4
   16944:	mov	r1, r5
   16948:	bl	17204 <__flatcc_fb_gen_c_reader@@Base+0x9e8>
   1694c:	ldr	r5, [r5, #120]	; 0x78
   16950:	cmp	r5, #0
   16954:	bne	16940 <__flatcc_fb_gen_c_reader@@Base+0x124>
   16958:	ldr	r0, [r4, #208]	; 0xd0
   1695c:	ldr	r5, [r0, #40]	; 0x28
   16960:	cmp	r5, #0
   16964:	bne	16978 <__flatcc_fb_gen_c_reader@@Base+0x15c>
   16968:	b	169c4 <__flatcc_fb_gen_c_reader@@Base+0x1a8>
   1696c:	ldr	r5, [r5]
   16970:	cmp	r5, #0
   16974:	beq	169c4 <__flatcc_fb_gen_c_reader@@Base+0x1a8>
   16978:	ldrh	r0, [r5, #8]
   1697c:	sub	r1, r0, #1
   16980:	cmp	r1, #3
   16984:	bcc	1696c <__flatcc_fb_gen_c_reader@@Base+0x150>
   16988:	cmp	r0, #0
   1698c:	beq	169b4 <__flatcc_fb_gen_c_reader@@Base+0x198>
   16990:	cmp	r0, #4
   16994:	bne	169e4 <__flatcc_fb_gen_c_reader@@Base+0x1c8>
   16998:	mov	r0, r4
   1699c:	mov	r1, r5
   169a0:	bl	16e30 <__flatcc_fb_gen_c_reader@@Base+0x614>
   169a4:	ldr	r5, [r5]
   169a8:	cmp	r5, #0
   169ac:	bne	16978 <__flatcc_fb_gen_c_reader@@Base+0x15c>
   169b0:	b	169c4 <__flatcc_fb_gen_c_reader@@Base+0x1a8>
   169b4:	mov	r0, r4
   169b8:	mov	r1, r5
   169bc:	bl	17b0c <__flatcc_fb_gen_c_reader@@Base+0x12f0>
   169c0:	b	1696c <__flatcc_fb_gen_c_reader@@Base+0x150>
   169c4:	ldr	r1, [r4, #204]	; 0xcc
   169c8:	mov	r0, #10
   169cc:	bl	148f0 <fputc@plt>
   169d0:	mov	r0, r4
   169d4:	bl	185bc <__flatcc_fb_gen_c_reader@@Base+0x1da0>
   169d8:	mov	r0, #0
   169dc:	sub	sp, fp, #8
   169e0:	pop	{r4, r5, fp, pc}
   169e4:	movw	r0, #4264	; 0x10a8
   169e8:	movt	r0, #6
   169ec:	ldr	r0, [r0]
   169f0:	movw	r1, #21098	; 0x526a
   169f4:	movt	r1, #3
   169f8:	str	r1, [sp]
   169fc:	movw	r1, #21007	; 0x520f
   16a00:	movt	r1, #3
   16a04:	movw	r4, #21018	; 0x521a
   16a08:	movt	r4, #3
   16a0c:	mov	r2, r4
   16a10:	movw	r3, #1672	; 0x688
   16a14:	bl	14890 <fprintf@plt>
   16a18:	movw	r0, #24925	; 0x615d
   16a1c:	movt	r0, #4
   16a20:	movw	r3, #21142	; 0x5296
   16a24:	movt	r3, #3
   16a28:	mov	r1, r4
   16a2c:	movw	r2, #1672	; 0x688
   16a30:	bl	14950 <__assert_fail@plt>
   16a34:	push	{r4, r5, r6, sl, fp, lr}
   16a38:	add	fp, sp, #16
   16a3c:	sub	sp, sp, #8
   16a40:	mov	r4, r0
   16a44:	ldr	r0, [r0, #204]	; 0xcc
   16a48:	ldr	r1, [r4, #208]	; 0xd0
   16a4c:	ldr	r2, [r4, #212]	; 0xd4
   16a50:	ldr	r6, [r2, #132]	; 0x84
   16a54:	ldr	r2, [r1, #164]	; 0xa4
   16a58:	movw	r1, #45265	; 0xb0d1
   16a5c:	movt	r1, #3
   16a60:	mov	r3, r2
   16a64:	bl	14890 <fprintf@plt>
   16a68:	ldr	r3, [r4, #204]	; 0xcc
   16a6c:	movw	r0, #20710	; 0x50e6
   16a70:	movt	r0, #3
   16a74:	mov	r1, #81	; 0x51
   16a78:	mov	r2, #1
   16a7c:	bl	14830 <fwrite@plt>
   16a80:	add	r5, r4, #102	; 0x66
   16a84:	ldr	r3, [r4, #204]	; 0xcc
   16a88:	cmp	r6, #0
   16a8c:	beq	16ae8 <__flatcc_fb_gen_c_reader@@Base+0x2cc>
   16a90:	movw	r0, #45306	; 0xb0fa
   16a94:	movt	r0, #3
   16a98:	movw	r1, #443	; 0x1bb
   16a9c:	mov	r2, #1
   16aa0:	bl	14830 <fwrite@plt>
   16aa4:	ldr	r0, [r4, #204]	; 0xcc
   16aa8:	movw	r1, #45750	; 0xb2b6
   16aac:	movt	r1, #3
   16ab0:	mov	r2, r5
   16ab4:	mov	r3, r4
   16ab8:	bl	14890 <fprintf@plt>
   16abc:	movw	r1, #49097	; 0xbfc9
   16ac0:	movt	r1, #4
   16ac4:	movw	r2, #45814	; 0xb2f6
   16ac8:	movt	r2, #3
   16acc:	mov	r0, r4
   16ad0:	bl	1598c <__flatcc_fb_gen_c_includes@@Base>
   16ad4:	ldr	r3, [r4, #204]	; 0xcc
   16ad8:	movw	r0, #45824	; 0xb300
   16adc:	movt	r0, #3
   16ae0:	mov	r1, #39	; 0x27
   16ae4:	b	16b40 <__flatcc_fb_gen_c_reader@@Base+0x324>
   16ae8:	movw	r1, #45750	; 0xb2b6
   16aec:	movt	r1, #3
   16af0:	mov	r0, r3
   16af4:	mov	r2, r5
   16af8:	mov	r3, r4
   16afc:	bl	14890 <fprintf@plt>
   16b00:	movw	r1, #49097	; 0xbfc9
   16b04:	movt	r1, #4
   16b08:	movw	r2, #45814	; 0xb2f6
   16b0c:	movt	r2, #3
   16b10:	mov	r0, r4
   16b14:	bl	1598c <__flatcc_fb_gen_c_includes@@Base>
   16b18:	ldr	r3, [r4, #204]	; 0xcc
   16b1c:	movw	r0, #45824	; 0xb300
   16b20:	movt	r0, #3
   16b24:	mov	r1, #39	; 0x27
   16b28:	mov	r2, #1
   16b2c:	bl	14830 <fwrite@plt>
   16b30:	ldr	r3, [r4, #204]	; 0xcc
   16b34:	movw	r0, #45864	; 0xb328
   16b38:	movt	r0, #3
   16b3c:	mov	r1, #58	; 0x3a
   16b40:	mov	r2, #1
   16b44:	bl	14830 <fwrite@plt>
   16b48:	mov	r0, r4
   16b4c:	bl	15f98 <__flatcc_fb_gen_common_c_header@@Base+0xb4>
   16b50:	ldr	r0, [r4, #204]	; 0xcc
   16b54:	ldr	r1, [r4, #208]	; 0xd0
   16b58:	ldrh	r2, [r1, #16]
   16b5c:	cmp	r2, #2
   16b60:	bne	16b7c <__flatcc_fb_gen_c_reader@@Base+0x360>
   16b64:	ldrd	r2, [r1, #8]
   16b68:	str	r3, [sp]
   16b6c:	str	r2, [sp, #4]
   16b70:	movw	r1, #45923	; 0xb363
   16b74:	movt	r1, #3
   16b78:	b	16b84 <__flatcc_fb_gen_c_reader@@Base+0x368>
   16b7c:	movw	r1, #45972	; 0xb394
   16b80:	movt	r1, #3
   16b84:	mov	r2, r4
   16b88:	mov	r3, r4
   16b8c:	bl	14890 <fprintf@plt>
   16b90:	ldr	r0, [r4, #204]	; 0xcc
   16b94:	ldr	r1, [r4, #208]	; 0xd0
   16b98:	ldrh	r2, [r1, #32]
   16b9c:	cmp	r2, #2
   16ba0:	bne	16bbc <__flatcc_fb_gen_c_reader@@Base+0x3a0>
   16ba4:	ldrd	r2, [r1, #24]
   16ba8:	str	r3, [sp]
   16bac:	str	r2, [sp, #4]
   16bb0:	movw	r1, #46024	; 0xb3c8
   16bb4:	movt	r1, #3
   16bb8:	b	16bd0 <__flatcc_fb_gen_c_reader@@Base+0x3b4>
   16bbc:	ldr	r1, [r4, #212]	; 0xd4
   16bc0:	ldr	r1, [r1, #104]	; 0x68
   16bc4:	str	r1, [sp]
   16bc8:	movw	r1, #46072	; 0xb3f8
   16bcc:	movt	r1, #3
   16bd0:	mov	r2, r4
   16bd4:	mov	r3, r4
   16bd8:	bl	14890 <fprintf@plt>
   16bdc:	ldr	r1, [r4, #204]	; 0xcc
   16be0:	mov	r0, #10
   16be4:	sub	sp, fp, #16
   16be8:	pop	{r4, r5, r6, sl, fp, lr}
   16bec:	b	148f0 <fputc@plt>
   16bf0:	push	{r4, r5, fp, lr}
   16bf4:	add	fp, sp, #8
   16bf8:	sub	sp, sp, #224	; 0xe0
   16bfc:	mov	r5, r1
   16c00:	mov	r4, r0
   16c04:	mov	r0, sp
   16c08:	mov	r1, #0
   16c0c:	mov	r2, #220	; 0xdc
   16c10:	bl	148a8 <memset@plt>
   16c14:	ldrh	r0, [r5, #8]
   16c18:	cmp	r0, #2
   16c1c:	bcs	16d24 <__flatcc_fb_gen_c_reader@@Base+0x508>
   16c20:	mov	r1, sp
   16c24:	mov	r0, r5
   16c28:	bl	18998 <__flatcc_fb_gen_c_reader@@Base+0x217c>
   16c2c:	ldrh	r0, [r5, #8]
   16c30:	cmp	r0, #1
   16c34:	bne	16c60 <__flatcc_fb_gen_c_reader@@Base+0x444>
   16c38:	ldr	r0, [r4, #204]	; 0xcc
   16c3c:	ldrd	r2, [r5, #112]	; 0x70
   16c40:	orrs	r1, r2, r3
   16c44:	beq	16ca8 <__flatcc_fb_gen_c_reader@@Base+0x48c>
   16c48:	movw	r1, #46289	; 0xb4d1
   16c4c:	movt	r1, #3
   16c50:	mov	r2, sp
   16c54:	mov	r3, r2
   16c58:	bl	14890 <fprintf@plt>
   16c5c:	b	16cb8 <__flatcc_fb_gen_c_reader@@Base+0x49c>
   16c60:	ldr	r0, [r4, #204]	; 0xcc
   16c64:	movw	r1, #46448	; 0xb570
   16c68:	movt	r1, #3
   16c6c:	mov	r5, sp
   16c70:	mov	r2, r5
   16c74:	mov	r3, r5
   16c78:	bl	14890 <fprintf@plt>
   16c7c:	ldr	r0, [r4, #204]	; 0xcc
   16c80:	movw	r1, #46492	; 0xb59c
   16c84:	movt	r1, #3
   16c88:	mov	r2, r4
   16c8c:	mov	r3, r5
   16c90:	bl	14890 <fprintf@plt>
   16c94:	ldr	r0, [r4, #204]	; 0xcc
   16c98:	movw	r1, #46530	; 0xb5c2
   16c9c:	movt	r1, #3
   16ca0:	mov	r2, r4
   16ca4:	b	16d14 <__flatcc_fb_gen_c_reader@@Base+0x4f8>
   16ca8:	movw	r1, #46250	; 0xb4aa
   16cac:	movt	r1, #3
   16cb0:	mov	r2, sp
   16cb4:	bl	14890 <fprintf@plt>
   16cb8:	ldr	r0, [r4, #204]	; 0xcc
   16cbc:	movw	r1, #46314	; 0xb4ea
   16cc0:	movt	r1, #3
   16cc4:	mov	r5, sp
   16cc8:	mov	r2, r5
   16ccc:	mov	r3, r5
   16cd0:	bl	14890 <fprintf@plt>
   16cd4:	ldr	r0, [r4, #204]	; 0xcc
   16cd8:	movw	r1, #46348	; 0xb50c
   16cdc:	movt	r1, #3
   16ce0:	mov	r2, r5
   16ce4:	mov	r3, r5
   16ce8:	bl	14890 <fprintf@plt>
   16cec:	ldr	r0, [r4, #204]	; 0xcc
   16cf0:	movw	r1, #46384	; 0xb530
   16cf4:	movt	r1, #3
   16cf8:	mov	r2, r5
   16cfc:	mov	r3, r5
   16d00:	bl	14890 <fprintf@plt>
   16d04:	ldr	r0, [r4, #204]	; 0xcc
   16d08:	movw	r1, #46415	; 0xb54f
   16d0c:	movt	r1, #3
   16d10:	mov	r2, r5
   16d14:	mov	r3, r5
   16d18:	bl	14890 <fprintf@plt>
   16d1c:	sub	sp, fp, #8
   16d20:	pop	{r4, r5, fp, pc}
   16d24:	movw	r0, #46125	; 0xb42d
   16d28:	movt	r0, #3
   16d2c:	movw	r1, #21018	; 0x521a
   16d30:	movt	r1, #3
   16d34:	movw	r3, #46191	; 0xb46f
   16d38:	movt	r3, #3
   16d3c:	movw	r2, #863	; 0x35f
   16d40:	bl	14950 <__assert_fail@plt>
   16d44:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16d48:	add	fp, sp, #24
   16d4c:	sub	sp, sp, #248	; 0xf8
   16d50:	mov	r5, r1
   16d54:	mov	r4, r0
   16d58:	add	r6, sp, #8
   16d5c:	mov	r7, #0
   16d60:	mov	r0, r6
   16d64:	mov	r1, #0
   16d68:	mov	r2, #220	; 0xdc
   16d6c:	bl	148a8 <memset@plt>
   16d70:	mov	r0, r5
   16d74:	mov	r1, r6
   16d78:	bl	18998 <__flatcc_fb_gen_c_reader@@Base+0x217c>
   16d7c:	ldr	r5, [r5, #88]	; 0x58
   16d80:	ldr	r0, [r4, #204]	; 0xcc
   16d84:	str	r4, [sp]
   16d88:	movw	r1, #46570	; 0xb5ea
   16d8c:	movt	r1, #3
   16d90:	mov	r2, r6
   16d94:	mov	r3, r6
   16d98:	bl	14890 <fprintf@plt>
   16d9c:	ldr	r0, [r4, #204]	; 0xcc
   16da0:	str	r5, [sp]
   16da4:	movw	r1, #46635	; 0xb62b
   16da8:	movt	r1, #3
   16dac:	mov	r2, r6
   16db0:	mov	r3, r4
   16db4:	bl	14890 <fprintf@plt>
   16db8:	sub	r0, fp, #41	; 0x29
   16dbc:	movw	r1, #30812	; 0x785c
   16dc0:	add	r2, r0, r7, lsl #2
   16dc4:	strh	r1, [r2]
   16dc8:	and	r3, r5, #15
   16dcc:	cmp	r3, #9
   16dd0:	mov	r6, #48	; 0x30
   16dd4:	movwhi	r6, #87	; 0x57
   16dd8:	add	r3, r6, r3
   16ddc:	strb	r3, [r2, #3]
   16de0:	ubfx	r3, r5, #4, #4
   16de4:	cmp	r3, #9
   16de8:	mov	r6, #48	; 0x30
   16dec:	movwhi	r6, #87	; 0x57
   16df0:	add	r3, r6, r3
   16df4:	strb	r3, [r2, #2]
   16df8:	add	r7, r7, #1
   16dfc:	lsr	r5, r5, #8
   16e00:	cmp	r7, #4
   16e04:	bne	16dc0 <__flatcc_fb_gen_c_reader@@Base+0x5a4>
   16e08:	mov	r0, #0
   16e0c:	strb	r0, [fp, #-25]	; 0xffffffe7
   16e10:	ldr	r0, [r4, #204]	; 0xcc
   16e14:	movw	r1, #46676	; 0xb654
   16e18:	movt	r1, #3
   16e1c:	add	r2, sp, #8
   16e20:	sub	r3, fp, #41	; 0x29
   16e24:	bl	14890 <fprintf@plt>
   16e28:	sub	sp, fp, #24
   16e2c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16e30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16e34:	add	fp, sp, #28
   16e38:	sub	sp, sp, #356	; 0x164
   16e3c:	mov	r5, r1
   16e40:	mov	r4, r0
   16e44:	add	r8, sp, #24
   16e48:	mov	r0, r8
   16e4c:	mov	r1, #0
   16e50:	mov	r2, #220	; 0xdc
   16e54:	bl	148a8 <memset@plt>
   16e58:	ldrh	r0, [r5, #8]
   16e5c:	sub	r0, r0, #3
   16e60:	uxth	r0, r0
   16e64:	cmp	r0, #2
   16e68:	bcs	171c4 <__flatcc_fb_gen_c_reader@@Base+0x9a8>
   16e6c:	ldrh	r0, [r5, #48]	; 0x30
   16e70:	cmp	r0, #8
   16e74:	bne	171e4 <__flatcc_fb_gen_c_reader@@Base+0x9c8>
   16e78:	ldr	r6, [r5, #40]	; 0x28
   16e7c:	mov	r0, r6
   16e80:	mov	r1, r4
   16e84:	bl	189a8 <__flatcc_fb_gen_c_reader@@Base+0x218c>
   16e88:	mov	r9, r0
   16e8c:	mov	r0, r6
   16e90:	bl	189c0 <__flatcc_fb_gen_c_reader@@Base+0x21a4>
   16e94:	mov	r6, r0
   16e98:	ldr	r0, [r5, #112]	; 0x70
   16e9c:	str	r0, [sp, #20]
   16ea0:	ldrh	r7, [r5, #8]
   16ea4:	mov	r0, r5
   16ea8:	mov	r1, r8
   16eac:	bl	18998 <__flatcc_fb_gen_c_reader@@Base+0x217c>
   16eb0:	ldr	r2, [r5, #32]
   16eb4:	movw	r1, #21264	; 0x5310
   16eb8:	movt	r1, #3
   16ebc:	mov	r0, r4
   16ec0:	bl	18a34 <__flatcc_fb_gen_c_reader@@Base+0x2218>
   16ec4:	movw	r0, #46856	; 0xb708
   16ec8:	movt	r0, #3
   16ecc:	movw	sl, #58695	; 0xe547
   16ed0:	movt	sl, #4
   16ed4:	cmp	r7, #3
   16ed8:	movne	sl, r0
   16edc:	ldr	r0, [r4, #204]	; 0xcc
   16ee0:	stm	sp, {r8, sl}
   16ee4:	movw	r1, #46867	; 0xb713
   16ee8:	movt	r1, #3
   16eec:	mov	r2, r9
   16ef0:	mov	r3, r6
   16ef4:	bl	14890 <fprintf@plt>
   16ef8:	ldr	r0, [r4, #204]	; 0xcc
   16efc:	ldr	r1, [sp, #20]
   16f00:	lsl	r1, r1, #3
   16f04:	stm	sp, {r8, sl}
   16f08:	str	r1, [sp, #8]
   16f0c:	movw	r1, #46890	; 0xb72a
   16f10:	movt	r1, #3
   16f14:	mov	r2, r4
   16f18:	mov	r6, r8
   16f1c:	mov	r3, r8
   16f20:	bl	14890 <fprintf@plt>
   16f24:	str	r7, [sp, #20]
   16f28:	cmp	r7, #3
   16f2c:	beq	16f4c <__flatcc_fb_gen_c_reader@@Base+0x730>
   16f30:	ldr	r0, [r4, #204]	; 0xcc
   16f34:	str	r6, [sp]
   16f38:	movw	r1, #46932	; 0xb754
   16f3c:	movt	r1, #3
   16f40:	mov	r2, r4
   16f44:	mov	r3, r4
   16f48:	bl	14890 <fprintf@plt>
   16f4c:	ldr	r7, [r5, #20]
   16f50:	cmp	r7, #0
   16f54:	beq	16fc4 <__flatcc_fb_gen_c_reader@@Base+0x7a8>
   16f58:	sub	r8, fp, #136	; 0x88
   16f5c:	movw	r9, #46958	; 0xb76e
   16f60:	movt	r9, #3
   16f64:	ldr	r2, [r7, #68]	; 0x44
   16f68:	mov	r0, r4
   16f6c:	movw	r1, #21264	; 0x5310
   16f70:	movt	r1, #3
   16f74:	bl	18a34 <__flatcc_fb_gen_c_reader@@Base+0x2218>
   16f78:	mov	r0, r7
   16f7c:	sub	r1, fp, #140	; 0x8c
   16f80:	sub	r2, fp, #36	; 0x24
   16f84:	bl	18ae4 <__flatcc_fb_gen_c_reader@@Base+0x22c8>
   16f88:	ldr	r0, [r5, #40]	; 0x28
   16f8c:	add	r1, r7, #48	; 0x30
   16f90:	mov	r2, r8
   16f94:	bl	18aec <__flatcc_fb_gen_c_reader@@Base+0x22d0>
   16f98:	ldr	r0, [r4, #204]	; 0xcc
   16f9c:	ldr	r3, [fp, #-140]	; 0xffffff74
   16fa0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16fa4:	stm	sp, {r1, r6, sl}
   16fa8:	str	r8, [sp, #12]
   16fac:	mov	r1, r9
   16fb0:	mov	r2, r6
   16fb4:	bl	14890 <fprintf@plt>
   16fb8:	ldr	r7, [r7]
   16fbc:	cmp	r7, #0
   16fc0:	bne	16f64 <__flatcc_fb_gen_c_reader@@Base+0x748>
   16fc4:	ldr	r1, [r4, #204]	; 0xcc
   16fc8:	mov	r0, #10
   16fcc:	bl	148f0 <fputc@plt>
   16fd0:	ldr	r0, [r4, #204]	; 0xcc
   16fd4:	ldr	r1, [sp, #20]
   16fd8:	cmp	r1, #3
   16fdc:	beq	17008 <__flatcc_fb_gen_c_reader@@Base+0x7ec>
   16fe0:	movw	r1, #46989	; 0xb78d
   16fe4:	movt	r1, #3
   16fe8:	add	r2, sp, #24
   16fec:	mov	r3, r2
   16ff0:	bl	14890 <fprintf@plt>
   16ff4:	ldr	r3, [r4, #204]	; 0xcc
   16ff8:	movw	r0, #43718	; 0xaac6
   16ffc:	movt	r0, #4
   17000:	mov	r1, #20
   17004:	b	1702c <__flatcc_fb_gen_c_reader@@Base+0x810>
   17008:	movw	r1, #47053	; 0xb7cd
   1700c:	movt	r1, #3
   17010:	add	r2, sp, #24
   17014:	mov	r3, r2
   17018:	bl	14890 <fprintf@plt>
   1701c:	ldr	r3, [r4, #204]	; 0xcc
   17020:	movw	r0, #47107	; 0xb803
   17024:	movt	r0, #3
   17028:	mov	r1, #21
   1702c:	mov	r2, #1
   17030:	bl	14830 <fwrite@plt>
   17034:	mov	r8, r5
   17038:	ldr	r6, [r5, #20]
   1703c:	cmp	r6, #0
   17040:	beq	170a4 <__flatcc_fb_gen_c_reader@@Base+0x888>
   17044:	sub	sl, fp, #140	; 0x8c
   17048:	sub	r5, fp, #36	; 0x24
   1704c:	add	r7, sp, #24
   17050:	movw	r9, #47129	; 0xb819
   17054:	movt	r9, #3
   17058:	mov	r0, r6
   1705c:	mov	r1, sl
   17060:	mov	r2, r5
   17064:	bl	18ae4 <__flatcc_fb_gen_c_reader@@Base+0x22c8>
   17068:	ldr	r0, [r4, #204]	; 0xcc
   1706c:	ldrb	r2, [r6, #10]
   17070:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17074:	ldr	r3, [fp, #-140]	; 0xffffff74
   17078:	tst	r2, #4
   1707c:	stm	sp, {r1, r3}
   17080:	str	r1, [sp, #8]
   17084:	movweq	r1, #47181	; 0xb84d
   17088:	movteq	r1, #3
   1708c:	movne	r1, r9
   17090:	mov	r2, r7
   17094:	bl	14890 <fprintf@plt>
   17098:	ldr	r6, [r6]
   1709c:	cmp	r6, #0
   170a0:	bne	17058 <__flatcc_fb_gen_c_reader@@Base+0x83c>
   170a4:	ldr	r3, [r4, #204]	; 0xcc
   170a8:	movw	r0, #47215	; 0xb86f
   170ac:	movt	r0, #3
   170b0:	mov	r1, #32
   170b4:	mov	r2, #1
   170b8:	bl	14830 <fwrite@plt>
   170bc:	ldr	r1, [r4, #204]	; 0xcc
   170c0:	mov	r0, #10
   170c4:	bl	148f0 <fputc@plt>
   170c8:	ldr	r0, [r4, #204]	; 0xcc
   170cc:	ldr	r1, [sp, #20]
   170d0:	cmp	r1, #3
   170d4:	beq	17100 <__flatcc_fb_gen_c_reader@@Base+0x8e4>
   170d8:	movw	r1, #47248	; 0xb890
   170dc:	movt	r1, #3
   170e0:	add	r2, sp, #24
   170e4:	mov	r3, r2
   170e8:	bl	14890 <fprintf@plt>
   170ec:	ldr	r3, [r4, #204]	; 0xcc
   170f0:	movw	r0, #43718	; 0xaac6
   170f4:	movt	r0, #4
   170f8:	mov	r1, #20
   170fc:	b	17124 <__flatcc_fb_gen_c_reader@@Base+0x908>
   17100:	movw	r1, #47308	; 0xb8cc
   17104:	movt	r1, #3
   17108:	add	r2, sp, #24
   1710c:	mov	r3, r2
   17110:	bl	14890 <fprintf@plt>
   17114:	ldr	r3, [r4, #204]	; 0xcc
   17118:	movw	r0, #47107	; 0xb803
   1711c:	movt	r0, #3
   17120:	mov	r1, #21
   17124:	mov	r2, #1
   17128:	bl	14830 <fwrite@plt>
   1712c:	ldr	r5, [r8, #20]
   17130:	cmp	r5, #0
   17134:	beq	17198 <__flatcc_fb_gen_c_reader@@Base+0x97c>
   17138:	sub	r9, fp, #140	; 0x8c
   1713c:	sub	r7, fp, #36	; 0x24
   17140:	movw	r8, #47411	; 0xb933
   17144:	movt	r8, #3
   17148:	add	r6, sp, #24
   1714c:	movw	sl, #47364	; 0xb904
   17150:	movt	sl, #3
   17154:	mov	r0, r5
   17158:	mov	r1, r9
   1715c:	mov	r2, r7
   17160:	bl	18ae4 <__flatcc_fb_gen_c_reader@@Base+0x22c8>
   17164:	ldr	r0, [r4, #204]	; 0xcc
   17168:	ldrb	r2, [r5, #10]
   1716c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17170:	ldr	r3, [fp, #-140]	; 0xffffff74
   17174:	tst	r2, #4
   17178:	str	r1, [sp]
   1717c:	moveq	r1, r8
   17180:	movne	r1, sl
   17184:	mov	r2, r6
   17188:	bl	14890 <fprintf@plt>
   1718c:	ldr	r5, [r5]
   17190:	cmp	r5, #0
   17194:	bne	17154 <__flatcc_fb_gen_c_reader@@Base+0x938>
   17198:	ldr	r3, [r4, #204]	; 0xcc
   1719c:	movw	r0, #47440	; 0xb950
   171a0:	movt	r0, #3
   171a4:	mov	r1, #31
   171a8:	mov	r2, #1
   171ac:	bl	14830 <fwrite@plt>
   171b0:	ldr	r1, [r4, #204]	; 0xcc
   171b4:	mov	r0, #10
   171b8:	bl	148f0 <fputc@plt>
   171bc:	sub	sp, fp, #28
   171c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   171c4:	movw	r0, #46709	; 0xb675
   171c8:	movt	r0, #3
   171cc:	movw	r1, #21018	; 0x521a
   171d0:	movt	r1, #3
   171d4:	movw	r3, #46773	; 0xb6b5
   171d8:	movt	r3, #3
   171dc:	movw	r2, #1204	; 0x4b4
   171e0:	bl	14950 <__assert_fail@plt>
   171e4:	movw	r0, #46824	; 0xb6e8
   171e8:	movt	r0, #3
   171ec:	movw	r1, #21018	; 0x521a
   171f0:	movt	r1, #3
   171f4:	movw	r3, #46773	; 0xb6b5
   171f8:	movt	r3, #3
   171fc:	movw	r2, #1205	; 0x4b5
   17200:	bl	14950 <__assert_fail@plt>
   17204:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17208:	add	fp, sp, #28
   1720c:	sub	sp, sp, #516	; 0x204
   17210:	mov	r5, r1
   17214:	mov	r9, r0
   17218:	ldr	r0, [r0, #212]	; 0xd4
   1721c:	ldr	r0, [r0, #132]	; 0x84
   17220:	str	r0, [sp, #52]	; 0x34
   17224:	sub	r0, fp, #264	; 0x108
   17228:	mov	r1, #0
   1722c:	mov	r2, #220	; 0xdc
   17230:	bl	148a8 <memset@plt>
   17234:	add	sl, sp, #56	; 0x38
   17238:	mov	r0, sl
   1723c:	mov	r1, #0
   17240:	mov	r2, #220	; 0xdc
   17244:	bl	148a8 <memset@plt>
   17248:	ldrh	r0, [r5, #8]
   1724c:	cmp	r0, #1
   17250:	bne	17aac <__flatcc_fb_gen_c_reader@@Base+0x1290>
   17254:	mov	r8, r5
   17258:	ldrh	r0, [r8, #104]!	; 0x68
   1725c:	cmp	r0, #0
   17260:	bne	17270 <__flatcc_fb_gen_c_reader@@Base+0xa54>
   17264:	ldrd	r0, [r5, #96]	; 0x60
   17268:	orrs	r0, r0, r1
   1726c:	bne	17acc <__flatcc_fb_gen_c_reader@@Base+0x12b0>
   17270:	mov	r7, r5
   17274:	ldr	r0, [r7, #112]!	; 0x70
   17278:	ldr	r1, [r7, #4]
   1727c:	orrs	r0, r0, r1
   17280:	bne	17290 <__flatcc_fb_gen_c_reader@@Base+0xa74>
   17284:	ldrd	r0, [r5, #96]	; 0x60
   17288:	orrs	r0, r0, r1
   1728c:	bne	17aec <__flatcc_fb_gen_c_reader@@Base+0x12d0>
   17290:	sub	r6, fp, #264	; 0x108
   17294:	mov	r0, r5
   17298:	mov	r1, r6
   1729c:	bl	18998 <__flatcc_fb_gen_c_reader@@Base+0x217c>
   172a0:	ldr	r2, [r5, #32]
   172a4:	movw	r1, #21264	; 0x5310
   172a8:	movt	r1, #3
   172ac:	mov	r0, r9
   172b0:	bl	18a34 <__flatcc_fb_gen_c_reader@@Base+0x2218>
   172b4:	ldrd	r0, [r7]
   172b8:	orrs	r0, r0, r1
   172bc:	str	r9, [sp, #44]	; 0x2c
   172c0:	beq	17538 <__flatcc_fb_gen_c_reader@@Base+0xd1c>
   172c4:	str	r7, [sp, #24]
   172c8:	ldr	r0, [sp, #52]	; 0x34
   172cc:	cmp	r0, #0
   172d0:	beq	172ec <__flatcc_fb_gen_c_reader@@Base+0xad0>
   172d4:	ldr	r3, [r9, #204]	; 0xcc
   172d8:	movw	r0, #48365	; 0xbced
   172dc:	movt	r0, #3
   172e0:	mov	r1, #16
   172e4:	mov	r2, #1
   172e8:	bl	14830 <fwrite@plt>
   172ec:	ldr	r0, [r9, #204]	; 0xcc
   172f0:	movw	r1, #48382	; 0xbcfe
   172f4:	movt	r1, #3
   172f8:	sub	r2, fp, #264	; 0x108
   172fc:	bl	14890 <fprintf@plt>
   17300:	str	r5, [sp, #28]
   17304:	ldr	r7, [r5, #20]
   17308:	cmp	r7, #0
   1730c:	beq	17598 <__flatcc_fb_gen_c_reader@@Base+0xd7c>
   17310:	mov	r5, #0
   17314:	add	r6, sp, #56	; 0x38
   17318:	mov	sl, #0
   1731c:	mov	r4, #0
   17320:	str	r8, [sp, #36]	; 0x24
   17324:	ldr	r2, [r7, #68]	; 0x44
   17328:	mov	r0, r9
   1732c:	movw	r1, #45230	; 0xb0ae
   17330:	movt	r1, #4
   17334:	bl	18a34 <__flatcc_fb_gen_c_reader@@Base+0x2218>
   17338:	mov	r0, r7
   1733c:	sub	r1, fp, #36	; 0x24
   17340:	sub	r2, fp, #40	; 0x28
   17344:	bl	18ae4 <__flatcc_fb_gen_c_reader@@Base+0x22c8>
   17348:	cmp	r5, #0
   1734c:	mov	r0, r8
   17350:	addne	r0, r7, #74	; 0x4a
   17354:	ldrh	r0, [r0]
   17358:	str	r0, [sp, #48]	; 0x30
   1735c:	ldr	r0, [sp, #52]	; 0x34
   17360:	cmp	r0, #0
   17364:	ldrne	r0, [r7, #80]	; 0x50
   17368:	subsne	r3, r0, r5
   1736c:	beq	17388 <__flatcc_fb_gen_c_reader@@Base+0xb6c>
   17370:	ldr	r0, [r9, #204]	; 0xcc
   17374:	movw	r1, #48395	; 0xbd0b
   17378:	movt	r1, #3
   1737c:	mov	r2, r4
   17380:	bl	14890 <fprintf@plt>
   17384:	add	r4, r4, #1
   17388:	ldrb	r0, [r7, #72]	; 0x48
   1738c:	tst	r0, #4
   17390:	bne	173f8 <__flatcc_fb_gen_c_reader@@Base+0xbdc>
   17394:	str	sl, [sp, #40]	; 0x28
   17398:	ldrh	r0, [r7, #24]
   1739c:	cmp	r0, #14
   173a0:	beq	17434 <__flatcc_fb_gen_c_reader@@Base+0xc18>
   173a4:	mov	sl, r4
   173a8:	ldr	r4, [sp, #52]	; 0x34
   173ac:	cmp	r0, #8
   173b0:	bne	17a20 <__flatcc_fb_gen_c_reader@@Base+0x1204>
   173b4:	ldr	r9, [r7, #16]
   173b8:	mov	r0, r9
   173bc:	ldr	r5, [sp, #44]	; 0x2c
   173c0:	mov	r1, r5
   173c4:	bl	189a8 <__flatcc_fb_gen_c_reader@@Base+0x218c>
   173c8:	str	r0, [sp, #32]
   173cc:	mov	r0, r9
   173d0:	mov	r9, r5
   173d4:	bl	189c0 <__flatcc_fb_gen_c_reader@@Base+0x21a4>
   173d8:	mov	r3, r0
   173dc:	ldr	r0, [r5, #204]	; 0xcc
   173e0:	cmp	r4, #0
   173e4:	beq	174bc <__flatcc_fb_gen_c_reader@@Base+0xca0>
   173e8:	movw	r1, #48539	; 0xbd9b
   173ec:	movt	r1, #3
   173f0:	ldr	r2, [sp, #32]
   173f4:	b	174d0 <__flatcc_fb_gen_c_reader@@Base+0xcb4>
   173f8:	mov	r8, r4
   173fc:	ldr	r0, [r9, #204]	; 0xcc
   17400:	mov	r5, r7
   17404:	ldr	r3, [r5, #88]!	; 0x58
   17408:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1740c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17410:	ldr	r4, [sp, #52]	; 0x34
   17414:	cmp	r4, #0
   17418:	beq	1748c <__flatcc_fb_gen_c_reader@@Base+0xc70>
   1741c:	str	r2, [sp]
   17420:	str	r1, [sp, #4]
   17424:	movw	r1, #48425	; 0xbd29
   17428:	movt	r1, #3
   1742c:	mov	r2, sl
   17430:	b	174a8 <__flatcc_fb_gen_c_reader@@Base+0xc8c>
   17434:	ldr	r0, [r7, #16]
   17438:	ldrh	r5, [r0, #8]
   1743c:	orr	r1, r5, #2
   17440:	cmp	r1, #3
   17444:	bne	17a8c <__flatcc_fb_gen_c_reader@@Base+0x1270>
   17448:	mov	sl, r8
   1744c:	mov	r1, r6
   17450:	bl	18998 <__flatcc_fb_gen_c_reader@@Base+0x217c>
   17454:	cmp	r5, #1
   17458:	movw	r3, #48662	; 0xbe16
   1745c:	movt	r3, #3
   17460:	movw	r0, #21264	; 0x5310
   17464:	movt	r0, #3
   17468:	moveq	r3, r0
   1746c:	ldr	r0, [r9, #204]	; 0xcc
   17470:	ldr	r1, [sp, #52]	; 0x34
   17474:	cmp	r1, #0
   17478:	beq	174dc <__flatcc_fb_gen_c_reader@@Base+0xcc0>
   1747c:	movw	r1, #48668	; 0xbe1c
   17480:	movt	r1, #3
   17484:	mov	r2, r6
   17488:	b	174f0 <__flatcc_fb_gen_c_reader@@Base+0xcd4>
   1748c:	str	r3, [sp]
   17490:	str	r2, [sp, #4]
   17494:	str	r1, [sp, #8]
   17498:	movw	r1, #48476	; 0xbd5c
   1749c:	movt	r1, #3
   174a0:	ldr	r2, [sp, #48]	; 0x30
   174a4:	mov	r3, sl
   174a8:	bl	14890 <fprintf@plt>
   174ac:	add	sl, sl, #1
   174b0:	mov	r4, r8
   174b4:	ldr	r8, [sp, #36]	; 0x24
   174b8:	b	17518 <__flatcc_fb_gen_c_reader@@Base+0xcfc>
   174bc:	str	r3, [sp]
   174c0:	movw	r1, #48549	; 0xbda5
   174c4:	movt	r1, #3
   174c8:	ldr	r2, [sp, #48]	; 0x30
   174cc:	ldr	r3, [sp, #32]
   174d0:	bl	14890 <fprintf@plt>
   174d4:	mov	r4, sl
   174d8:	b	174f8 <__flatcc_fb_gen_c_reader@@Base+0xcdc>
   174dc:	str	r3, [sp]
   174e0:	movw	r1, #48680	; 0xbe28
   174e4:	movt	r1, #3
   174e8:	ldr	r2, [sp, #48]	; 0x30
   174ec:	mov	r3, r6
   174f0:	bl	14890 <fprintf@plt>
   174f4:	mov	r8, sl
   174f8:	ldr	r0, [r9, #204]	; 0xcc
   174fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17500:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17504:	movw	r1, #48743	; 0xbe67
   17508:	movt	r1, #3
   1750c:	bl	14890 <fprintf@plt>
   17510:	add	r5, r7, #88	; 0x58
   17514:	ldr	sl, [sp, #40]	; 0x28
   17518:	ldr	r0, [r7]
   1751c:	ldr	r1, [r7, #80]	; 0x50
   17520:	ldr	r2, [r5]
   17524:	add	r5, r2, r1
   17528:	cmp	r0, #0
   1752c:	mov	r7, r0
   17530:	bne	17324 <__flatcc_fb_gen_c_reader@@Base+0xb08>
   17534:	b	175a0 <__flatcc_fb_gen_c_reader@@Base+0xd84>
   17538:	ldr	r0, [r9, #204]	; 0xcc
   1753c:	movw	r1, #48041	; 0xbba9
   17540:	movt	r1, #3
   17544:	mov	r2, r6
   17548:	bl	14890 <fprintf@plt>
   1754c:	ldr	r0, [r9, #204]	; 0xcc
   17550:	str	r6, [sp]
   17554:	movw	r1, #48138	; 0xbc0a
   17558:	movt	r1, #3
   1755c:	mov	r2, r6
   17560:	mov	r3, r6
   17564:	bl	14890 <fprintf@plt>
   17568:	ldr	r0, [r9, #204]	; 0xcc
   1756c:	str	r6, [sp]
   17570:	movw	r1, #48222	; 0xbc5e
   17574:	movt	r1, #3
   17578:	mov	r2, r6
   1757c:	mov	r3, r6
   17580:	bl	14890 <fprintf@plt>
   17584:	ldr	r0, [r9, #204]	; 0xcc
   17588:	str	r6, [sp]
   1758c:	movw	r1, #48288	; 0xbca0
   17590:	movt	r1, #3
   17594:	b	17698 <__flatcc_fb_gen_c_reader@@Base+0xe7c>
   17598:	mov	r4, #0
   1759c:	mov	r5, #0
   175a0:	ldr	r0, [sp, #52]	; 0x34
   175a4:	cmp	r0, #0
   175a8:	beq	1760c <__flatcc_fb_gen_c_reader@@Base+0xdf0>
   175ac:	ldr	r7, [sp, #24]
   175b0:	ldr	r0, [r7]
   175b4:	subs	r3, r0, r5
   175b8:	add	sl, sp, #56	; 0x38
   175bc:	beq	175d4 <__flatcc_fb_gen_c_reader@@Base+0xdb8>
   175c0:	ldr	r0, [r9, #204]	; 0xcc
   175c4:	movw	r1, #48395	; 0xbd0b
   175c8:	movt	r1, #3
   175cc:	mov	r2, r4
   175d0:	bl	14890 <fprintf@plt>
   175d4:	ldr	r3, [r9, #204]	; 0xcc
   175d8:	movw	r0, #25361	; 0x6311
   175dc:	movt	r0, #4
   175e0:	mov	r1, #3
   175e4:	mov	r2, #1
   175e8:	bl	14830 <fwrite@plt>
   175ec:	ldr	r3, [r9, #204]	; 0xcc
   175f0:	movw	r0, #48750	; 0xbe6e
   175f4:	movt	r0, #3
   175f8:	mov	r1, #15
   175fc:	mov	r2, #1
   17600:	bl	14830 <fwrite@plt>
   17604:	ldr	r5, [sp, #28]
   17608:	b	17630 <__flatcc_fb_gen_c_reader@@Base+0xe14>
   1760c:	ldr	r3, [r9, #204]	; 0xcc
   17610:	movw	r0, #25361	; 0x6311
   17614:	movt	r0, #4
   17618:	mov	r1, #3
   1761c:	mov	r2, #1
   17620:	bl	14830 <fwrite@plt>
   17624:	add	sl, sp, #56	; 0x38
   17628:	ldr	r5, [sp, #28]
   1762c:	ldr	r7, [sp, #24]
   17630:	ldr	r0, [r9, #204]	; 0xcc
   17634:	ldrd	r2, [r7]
   17638:	stm	sp, {r2, r3}
   1763c:	movw	r1, #48766	; 0xbe7e
   17640:	movt	r1, #3
   17644:	sub	r6, fp, #264	; 0x108
   17648:	mov	r2, r6
   1764c:	bl	14890 <fprintf@plt>
   17650:	ldr	r0, [r9, #204]	; 0xcc
   17654:	str	r6, [sp]
   17658:	movw	r1, #48829	; 0xbebd
   1765c:	movt	r1, #3
   17660:	mov	r2, r6
   17664:	mov	r3, r6
   17668:	bl	14890 <fprintf@plt>
   1766c:	ldr	r0, [r9, #204]	; 0xcc
   17670:	str	r6, [sp]
   17674:	movw	r1, #48917	; 0xbf15
   17678:	movt	r1, #3
   1767c:	mov	r2, r6
   17680:	mov	r3, r6
   17684:	bl	14890 <fprintf@plt>
   17688:	ldr	r0, [r9, #204]	; 0xcc
   1768c:	stm	sp, {r6, r9}
   17690:	movw	r1, #48987	; 0xbf5b
   17694:	movt	r1, #3
   17698:	mov	r2, r6
   1769c:	mov	r3, r6
   176a0:	bl	14890 <fprintf@plt>
   176a4:	ldr	r0, [r9, #204]	; 0xcc
   176a8:	ldrd	r2, [r7]
   176ac:	stm	sp, {r2, r3}
   176b0:	movw	r1, #49074	; 0xbfb2
   176b4:	movt	r1, #3
   176b8:	mov	r4, r9
   176bc:	sub	r9, fp, #264	; 0x108
   176c0:	mov	r2, r9
   176c4:	bl	14890 <fprintf@plt>
   176c8:	ldr	r0, [r4, #204]	; 0xcc
   176cc:	str	r4, [sp]
   176d0:	movw	r1, #49124	; 0xbfe4
   176d4:	movt	r1, #3
   176d8:	mov	r2, r9
   176dc:	mov	r3, r9
   176e0:	bl	14890 <fprintf@plt>
   176e4:	ldr	r0, [r4, #204]	; 0xcc
   176e8:	movw	r1, #49188	; 0xc024
   176ec:	movt	r1, #3
   176f0:	mov	r2, r4
   176f4:	mov	r3, r9
   176f8:	bl	14890 <fprintf@plt>
   176fc:	ldr	r1, [r4, #204]	; 0xcc
   17700:	mov	r0, #10
   17704:	bl	148f0 <fputc@plt>
   17708:	ldr	r6, [r5, #20]
   1770c:	cmp	r6, #0
   17710:	beq	17a08 <__flatcc_fb_gen_c_reader@@Base+0x11ec>
   17714:	mov	r0, #0
   17718:	str	r0, [sp, #48]	; 0x30
   1771c:	sub	r7, fp, #36	; 0x24
   17720:	sub	r4, fp, #40	; 0x28
   17724:	mov	r0, #0
   17728:	str	r0, [sp, #52]	; 0x34
   1772c:	ldrb	r0, [r6, #72]	; 0x48
   17730:	tst	r0, #4
   17734:	bne	179fc <__flatcc_fb_gen_c_reader@@Base+0x11e0>
   17738:	mov	r0, r6
   1773c:	mov	r1, r7
   17740:	mov	r2, r4
   17744:	bl	18ae4 <__flatcc_fb_gen_c_reader@@Base+0x22c8>
   17748:	ldrh	r0, [r6, #24]
   1774c:	cmp	r0, #14
   17750:	beq	177d0 <__flatcc_fb_gen_c_reader@@Base+0xfb4>
   17754:	cmp	r0, #8
   17758:	bne	179b8 <__flatcc_fb_gen_c_reader@@Base+0x119c>
   1775c:	ldr	r8, [r6, #16]
   17760:	mov	r0, r8
   17764:	ldr	r4, [sp, #44]	; 0x2c
   17768:	mov	r1, r4
   1776c:	bl	189a8 <__flatcc_fb_gen_c_reader@@Base+0x218c>
   17770:	mov	r7, r9
   17774:	mov	r9, sl
   17778:	mov	sl, r0
   1777c:	mov	r0, r8
   17780:	bl	189c0 <__flatcc_fb_gen_c_reader@@Base+0x21a4>
   17784:	mov	r5, r0
   17788:	ldr	r0, [r6, #16]
   1778c:	bl	18c9c <__flatcc_fb_gen_c_reader@@Base+0x2480>
   17790:	ldr	r1, [r4, #204]	; 0xcc
   17794:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17798:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1779c:	stm	sp, {r2, r3, r4}
   177a0:	str	r0, [sp, #12]
   177a4:	str	sl, [sp, #16]
   177a8:	mov	sl, r9
   177ac:	mov	r9, r7
   177b0:	sub	r7, fp, #36	; 0x24
   177b4:	str	r5, [sp, #20]
   177b8:	mov	r0, r1
   177bc:	movw	r1, #49212	; 0xc03c
   177c0:	movt	r1, #3
   177c4:	mov	r2, r4
   177c8:	sub	r4, fp, #40	; 0x28
   177cc:	b	179b0 <__flatcc_fb_gen_c_reader@@Base+0x1194>
   177d0:	ldr	r0, [r6, #16]
   177d4:	mov	r1, sl
   177d8:	bl	18998 <__flatcc_fb_gen_c_reader@@Base+0x217c>
   177dc:	ldr	r0, [r6, #16]
   177e0:	ldrh	r1, [r0, #8]
   177e4:	cmp	r1, #1
   177e8:	beq	17994 <__flatcc_fb_gen_c_reader@@Base+0x1178>
   177ec:	cmp	r1, #3
   177f0:	bne	179b8 <__flatcc_fb_gen_c_reader@@Base+0x119c>
   177f4:	ldr	r0, [r0, #40]	; 0x28
   177f8:	bl	18c9c <__flatcc_fb_gen_c_reader@@Base+0x2480>
   177fc:	ldr	r4, [sp, #44]	; 0x2c
   17800:	ldr	r0, [r4, #204]	; 0xcc
   17804:	ldr	r5, [fp, #-36]	; 0xffffffdc
   17808:	ldr	r8, [fp, #-40]	; 0xffffffd8
   1780c:	stm	sp, {r5, r8, sl}
   17810:	str	sl, [sp, #12]
   17814:	movw	r1, #49266	; 0xc072
   17818:	movt	r1, #3
   1781c:	mov	r2, r4
   17820:	mov	r3, r9
   17824:	bl	14890 <fprintf@plt>
   17828:	ldr	r0, [r4, #212]	; 0xd4
   1782c:	ldr	r0, [r0, #32]
   17830:	cmp	r0, #0
   17834:	bne	17860 <__flatcc_fb_gen_c_reader@@Base+0x1044>
   17838:	ldrb	r0, [r6, #72]	; 0x48
   1783c:	tst	r0, #128	; 0x80
   17840:	beq	17860 <__flatcc_fb_gen_c_reader@@Base+0x1044>
   17844:	ldr	r2, [sp, #44]	; 0x2c
   17848:	ldr	r0, [r2, #204]	; 0xcc
   1784c:	stm	sp, {r5, r8, sl}
   17850:	movw	r1, #49323	; 0xc0ab
   17854:	movt	r1, #3
   17858:	mov	r3, r9
   1785c:	bl	14890 <fprintf@plt>
   17860:	ldrb	r0, [r6, #72]	; 0x48
   17864:	tst	r0, #128	; 0x80
   17868:	sub	r4, fp, #40	; 0x28
   1786c:	beq	179b8 <__flatcc_fb_gen_c_reader@@Base+0x119c>
   17870:	ldr	r0, [sp, #48]	; 0x30
   17874:	cmp	r0, #0
   17878:	ldr	r4, [sp, #44]	; 0x2c
   1787c:	beq	17898 <__flatcc_fb_gen_c_reader@@Base+0x107c>
   17880:	ldr	r3, [r4, #204]	; 0xcc
   17884:	movw	r0, #49377	; 0xc0e1
   17888:	movt	r0, #3
   1788c:	mov	r1, #66	; 0x42
   17890:	mov	r2, #1
   17894:	bl	14830 <fwrite@plt>
   17898:	ldr	r3, [r4, #204]	; 0xcc
   1789c:	movw	r0, #49444	; 0xc124
   178a0:	movt	r0, #3
   178a4:	mov	r1, #61	; 0x3d
   178a8:	mov	r2, #1
   178ac:	bl	14830 <fwrite@plt>
   178b0:	ldr	r0, [r4, #204]	; 0xcc
   178b4:	stm	sp, {r5, r8, sl}
   178b8:	movw	r1, #49506	; 0xc162
   178bc:	movt	r1, #3
   178c0:	mov	r2, r4
   178c4:	mov	r3, r9
   178c8:	bl	14890 <fprintf@plt>
   178cc:	ldr	r0, [r4, #212]	; 0xd4
   178d0:	ldr	r0, [r0, #136]	; 0x88
   178d4:	cmp	r0, #0
   178d8:	beq	178fc <__flatcc_fb_gen_c_reader@@Base+0x10e0>
   178dc:	ldr	r0, [r4, #204]	; 0xcc
   178e0:	stm	sp, {r5, r8, sl}
   178e4:	str	r9, [sp, #12]
   178e8:	movw	r1, #49560	; 0xc198
   178ec:	movt	r1, #3
   178f0:	mov	r2, r4
   178f4:	mov	r3, r9
   178f8:	bl	14890 <fprintf@plt>
   178fc:	mov	r0, #1
   17900:	str	r0, [sp, #52]	; 0x34
   17904:	ldr	r0, [sp, #48]	; 0x30
   17908:	cmp	r0, #0
   1790c:	sub	r4, fp, #40	; 0x28
   17910:	bne	179fc <__flatcc_fb_gen_c_reader@@Base+0x11e0>
   17914:	ldr	r4, [sp, #44]	; 0x2c
   17918:	ldr	r0, [r4, #204]	; 0xcc
   1791c:	stm	sp, {r5, r8, sl}
   17920:	movw	r1, #49620	; 0xc1d4
   17924:	movt	r1, #3
   17928:	mov	r2, r4
   1792c:	mov	r3, r9
   17930:	bl	14890 <fprintf@plt>
   17934:	ldr	r0, [r4, #204]	; 0xcc
   17938:	stm	sp, {r5, r8, sl}
   1793c:	movw	r1, #49682	; 0xc212
   17940:	movt	r1, #3
   17944:	mov	r2, r4
   17948:	mov	r3, r9
   1794c:	bl	14890 <fprintf@plt>
   17950:	ldr	r0, [r4, #212]	; 0xd4
   17954:	ldr	r0, [r0, #136]	; 0x88
   17958:	mov	r1, #1
   1795c:	str	r1, [sp, #52]	; 0x34
   17960:	cmp	r0, #0
   17964:	beq	17984 <__flatcc_fb_gen_c_reader@@Base+0x1168>
   17968:	ldr	r0, [r4, #204]	; 0xcc
   1796c:	stm	sp, {r5, r8}
   17970:	movw	r1, #49744	; 0xc250
   17974:	movt	r1, #3
   17978:	mov	r2, r9
   1797c:	mov	r3, r9
   17980:	bl	14890 <fprintf@plt>
   17984:	mov	r0, #1
   17988:	str	r0, [sp, #48]	; 0x30
   1798c:	sub	r4, fp, #40	; 0x28
   17990:	b	179fc <__flatcc_fb_gen_c_reader@@Base+0x11e0>
   17994:	ldr	r2, [sp, #44]	; 0x2c
   17998:	ldr	r0, [r2, #204]	; 0xcc
   1799c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   179a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   179a4:	stm	sp, {r1, r3, sl}
   179a8:	movw	r1, #49785	; 0xc279
   179ac:	movt	r1, #3
   179b0:	mov	r3, r9
   179b4:	bl	14890 <fprintf@plt>
   179b8:	ldr	r0, [sp, #52]	; 0x34
   179bc:	cmp	r0, #0
   179c0:	bne	179fc <__flatcc_fb_gen_c_reader@@Base+0x11e0>
   179c4:	ldrh	r0, [r6, #72]	; 0x48
   179c8:	ands	r0, r0, #128	; 0x80
   179cc:	beq	179fc <__flatcc_fb_gen_c_reader@@Base+0x11e0>
   179d0:	ldr	r0, [sp, #44]	; 0x2c
   179d4:	ldr	r3, [r0, #204]	; 0xcc
   179d8:	mov	r0, #1
   179dc:	str	r0, [sp, #48]	; 0x30
   179e0:	movw	r0, #49840	; 0xc2b0
   179e4:	movt	r0, #3
   179e8:	mov	r1, #84	; 0x54
   179ec:	mov	r2, #1
   179f0:	bl	14830 <fwrite@plt>
   179f4:	mov	r0, #0
   179f8:	str	r0, [sp, #52]	; 0x34
   179fc:	ldr	r6, [r6]
   17a00:	cmp	r6, #0
   17a04:	bne	1772c <__flatcc_fb_gen_c_reader@@Base+0xf10>
   17a08:	ldr	r0, [sp, #44]	; 0x2c
   17a0c:	ldr	r1, [r0, #204]	; 0xcc
   17a10:	mov	r0, #10
   17a14:	bl	148f0 <fputc@plt>
   17a18:	sub	sp, fp, #28
   17a1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17a20:	ldr	r0, [sp, #44]	; 0x2c
   17a24:	ldr	r0, [r0, #204]	; 0xcc
   17a28:	movw	r1, #48704	; 0xbe40
   17a2c:	movt	r1, #3
   17a30:	movw	r2, #48712	; 0xbe48
   17a34:	movt	r2, #3
   17a38:	bl	14890 <fprintf@plt>
   17a3c:	movw	r0, #4264	; 0x10a8
   17a40:	movt	r0, #6
   17a44:	ldr	r0, [r0]
   17a48:	movw	r1, #47600	; 0xb9f0
   17a4c:	movt	r1, #3
   17a50:	str	r1, [sp]
   17a54:	movw	r1, #21007	; 0x520f
   17a58:	movt	r1, #3
   17a5c:	movw	r4, #21018	; 0x521a
   17a60:	movt	r4, #3
   17a64:	mov	r2, r4
   17a68:	movw	r3, #1029	; 0x405
   17a6c:	bl	14890 <fprintf@plt>
   17a70:	movw	r0, #24925	; 0x615d
   17a74:	movt	r0, #4
   17a78:	movw	r3, #47925	; 0xbb35
   17a7c:	movt	r3, #3
   17a80:	mov	r1, r4
   17a84:	movw	r2, #1029	; 0x405
   17a88:	bl	14950 <__assert_fail@plt>
   17a8c:	movw	r0, #48571	; 0xbdbb
   17a90:	movt	r0, #3
   17a94:	movw	r1, #21018	; 0x521a
   17a98:	movt	r1, #3
   17a9c:	movw	r3, #47925	; 0xbb35
   17aa0:	movt	r3, #3
   17aa4:	movw	r2, #1018	; 0x3fa
   17aa8:	bl	14950 <__assert_fail@plt>
   17aac:	movw	r0, #47893	; 0xbb15
   17ab0:	movt	r0, #3
   17ab4:	movw	r1, #21018	; 0x521a
   17ab8:	movt	r1, #3
   17abc:	movw	r3, #47925	; 0xbb35
   17ac0:	movt	r3, #3
   17ac4:	mov	r2, #936	; 0x3a8
   17ac8:	bl	14950 <__assert_fail@plt>
   17acc:	movw	r0, #47978	; 0xbb6a
   17ad0:	movt	r0, #3
   17ad4:	movw	r1, #21018	; 0x521a
   17ad8:	movt	r1, #3
   17adc:	movw	r3, #47925	; 0xbb35
   17ae0:	movt	r3, #3
   17ae4:	movw	r2, #937	; 0x3a9
   17ae8:	bl	14950 <__assert_fail@plt>
   17aec:	movw	r0, #48010	; 0xbb8a
   17af0:	movt	r0, #3
   17af4:	movw	r1, #21018	; 0x521a
   17af8:	movt	r1, #3
   17afc:	movw	r3, #47925	; 0xbb35
   17b00:	movt	r3, #3
   17b04:	movw	r2, #938	; 0x3aa
   17b08:	bl	14950 <__assert_fail@plt>
   17b0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17b10:	add	fp, sp, #28
   17b14:	sub	sp, sp, #620	; 0x26c
   17b18:	mov	r5, r0
   17b1c:	ldrh	r0, [r1, #8]
   17b20:	cmp	r0, #0
   17b24:	bne	1859c <__flatcc_fb_gen_c_reader@@Base+0x1d80>
   17b28:	mov	r4, r1
   17b2c:	sub	r8, fp, #264	; 0x108
   17b30:	mov	r0, #0
   17b34:	str	r0, [sp, #56]	; 0x38
   17b38:	mov	r0, r8
   17b3c:	mov	r1, #0
   17b40:	mov	r2, #220	; 0xdc
   17b44:	bl	148a8 <memset@plt>
   17b48:	add	r0, sp, #160	; 0xa0
   17b4c:	mov	r1, #0
   17b50:	mov	r2, #220	; 0xdc
   17b54:	bl	148a8 <memset@plt>
   17b58:	ldr	r1, [r5, #204]	; 0xcc
   17b5c:	mov	r0, #10
   17b60:	bl	148f0 <fputc@plt>
   17b64:	mov	r0, r4
   17b68:	mov	r1, r8
   17b6c:	bl	18998 <__flatcc_fb_gen_c_reader@@Base+0x217c>
   17b70:	ldr	r2, [r4, #32]
   17b74:	movw	r1, #21264	; 0x5310
   17b78:	movt	r1, #3
   17b7c:	mov	r0, r5
   17b80:	bl	18a34 <__flatcc_fb_gen_c_reader@@Base+0x2218>
   17b84:	ldr	r0, [r5, #204]	; 0xcc
   17b88:	movw	r1, #50053	; 0xc385
   17b8c:	movt	r1, #3
   17b90:	mov	r2, r8
   17b94:	bl	14890 <fprintf@plt>
   17b98:	ldr	r0, [r5, #204]	; 0xcc
   17b9c:	str	r5, [sp]
   17ba0:	movw	r1, #49124	; 0xbfe4
   17ba4:	movt	r1, #3
   17ba8:	mov	r2, r8
   17bac:	mov	r3, r8
   17bb0:	bl	14890 <fprintf@plt>
   17bb4:	ldr	r0, [r5, #204]	; 0xcc
   17bb8:	str	r8, [sp]
   17bbc:	stmib	sp, {r5, r8}
   17bc0:	movw	r1, #50094	; 0xc3ae
   17bc4:	movt	r1, #3
   17bc8:	mov	r2, r8
   17bcc:	mov	r3, r8
   17bd0:	bl	14890 <fprintf@plt>
   17bd4:	ldr	r0, [r5, #204]	; 0xcc
   17bd8:	movw	r1, #50195	; 0xc413
   17bdc:	movt	r1, #3
   17be0:	mov	r2, r5
   17be4:	mov	r3, r8
   17be8:	bl	14890 <fprintf@plt>
   17bec:	ldr	r1, [r5, #204]	; 0xcc
   17bf0:	mov	r0, #10
   17bf4:	bl	148f0 <fputc@plt>
   17bf8:	str	r4, [sp, #40]	; 0x28
   17bfc:	ldr	r7, [r4, #20]
   17c00:	cmp	r7, #0
   17c04:	beq	184a4 <__flatcc_fb_gen_c_reader@@Base+0x1c88>
   17c08:	movw	r9, #21264	; 0x5310
   17c0c:	movt	r9, #3
   17c10:	sub	sl, fp, #40	; 0x28
   17c14:	sub	r6, fp, #36	; 0x24
   17c18:	b	17dc0 <__flatcc_fb_gen_c_reader@@Base+0x15a4>
   17c1c:	ldr	r0, [r0, #40]	; 0x28
   17c20:	add	r1, r7, #48	; 0x30
   17c24:	add	r2, sp, #60	; 0x3c
   17c28:	bl	18aec <__flatcc_fb_gen_c_reader@@Base+0x22d0>
   17c2c:	ldr	r0, [r5, #204]	; 0xcc
   17c30:	ldrd	r2, [r8]
   17c34:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17c38:	ldr	r6, [fp, #-36]	; 0xffffffdc
   17c3c:	stm	sp, {r2, r3}
   17c40:	mov	r8, r9
   17c44:	str	r9, [sp, #8]
   17c48:	str	r1, [sp, #12]
   17c4c:	str	r6, [sp, #16]
   17c50:	add	r4, sp, #160	; 0xa0
   17c54:	str	r4, [sp, #20]
   17c58:	str	r4, [sp, #24]
   17c5c:	add	r1, sp, #60	; 0x3c
   17c60:	str	r1, [sp, #28]
   17c64:	movw	r1, #51096	; 0xc798
   17c68:	movt	r1, #3
   17c6c:	mov	r2, r5
   17c70:	bl	14890 <fprintf@plt>
   17c74:	ldr	r0, [r5, #212]	; 0xd4
   17c78:	ldr	r0, [r0, #32]
   17c7c:	cmp	r0, #0
   17c80:	bne	17cb4 <__flatcc_fb_gen_c_reader@@Base+0x1498>
   17c84:	ldrb	r0, [r7, #72]	; 0x48
   17c88:	tst	r0, #128	; 0x80
   17c8c:	beq	17cb4 <__flatcc_fb_gen_c_reader@@Base+0x1498>
   17c90:	ldr	r0, [r5, #204]	; 0xcc
   17c94:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17c98:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17c9c:	stm	sp, {r1, r2, r4}
   17ca0:	movw	r1, #49323	; 0xc0ab
   17ca4:	movt	r1, #3
   17ca8:	mov	r2, r5
   17cac:	mov	r3, r8
   17cb0:	bl	14890 <fprintf@plt>
   17cb4:	ldrb	r0, [r7, #72]	; 0x48
   17cb8:	tst	r0, #128	; 0x80
   17cbc:	movw	r9, #21264	; 0x5310
   17cc0:	movt	r9, #3
   17cc4:	beq	18468 <__flatcc_fb_gen_c_reader@@Base+0x1c4c>
   17cc8:	ldr	r0, [sp, #56]	; 0x38
   17ccc:	cmp	r0, #0
   17cd0:	sub	r6, fp, #36	; 0x24
   17cd4:	beq	17cf0 <__flatcc_fb_gen_c_reader@@Base+0x14d4>
   17cd8:	ldr	r3, [r5, #204]	; 0xcc
   17cdc:	movw	r0, #49377	; 0xc0e1
   17ce0:	movt	r0, #3
   17ce4:	mov	r1, #66	; 0x42
   17ce8:	mov	r2, #1
   17cec:	bl	14830 <fwrite@plt>
   17cf0:	ldr	r3, [r5, #204]	; 0xcc
   17cf4:	movw	r0, #49444	; 0xc124
   17cf8:	movt	r0, #3
   17cfc:	mov	r1, #61	; 0x3d
   17d00:	mov	r2, #1
   17d04:	bl	14830 <fwrite@plt>
   17d08:	ldr	r0, [r5, #204]	; 0xcc
   17d0c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17d10:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17d14:	stm	sp, {r1, r2}
   17d18:	add	r4, sp, #160	; 0xa0
   17d1c:	str	r4, [sp, #8]
   17d20:	movw	r1, #49506	; 0xc162
   17d24:	movt	r1, #3
   17d28:	mov	r2, r5
   17d2c:	mov	r3, r8
   17d30:	bl	14890 <fprintf@plt>
   17d34:	ldr	r0, [r5, #212]	; 0xd4
   17d38:	ldr	r0, [r0, #136]	; 0x88
   17d3c:	cmp	r0, #0
   17d40:	beq	17d68 <__flatcc_fb_gen_c_reader@@Base+0x154c>
   17d44:	ldr	r0, [r5, #204]	; 0xcc
   17d48:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17d4c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17d50:	stm	sp, {r1, r2, r4, r5}
   17d54:	movw	r1, #51156	; 0xc7d4
   17d58:	movt	r1, #3
   17d5c:	mov	r2, r5
   17d60:	mov	r3, r8
   17d64:	bl	14890 <fprintf@plt>
   17d68:	ldr	r0, [sp, #56]	; 0x38
   17d6c:	cmp	r0, #0
   17d70:	bne	18498 <__flatcc_fb_gen_c_reader@@Base+0x1c7c>
   17d74:	ldr	r0, [r5, #204]	; 0xcc
   17d78:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17d7c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17d80:	stm	sp, {r1, r2}
   17d84:	add	r1, sp, #160	; 0xa0
   17d88:	mov	r4, r1
   17d8c:	str	r1, [sp, #8]
   17d90:	movw	r1, #49620	; 0xc1d4
   17d94:	movt	r1, #3
   17d98:	mov	r2, r5
   17d9c:	mov	r3, r8
   17da0:	bl	14890 <fprintf@plt>
   17da4:	ldr	r0, [r5, #204]	; 0xcc
   17da8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17dac:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17db0:	stm	sp, {r1, r2, r4}
   17db4:	movw	r1, #49682	; 0xc212
   17db8:	movt	r1, #3
   17dbc:	b	18230 <__flatcc_fb_gen_c_reader@@Base+0x1a14>
   17dc0:	ldr	r2, [r7, #68]	; 0x44
   17dc4:	mov	r0, r5
   17dc8:	mov	r1, r9
   17dcc:	bl	18a34 <__flatcc_fb_gen_c_reader@@Base+0x2218>
   17dd0:	mov	r0, r7
   17dd4:	mov	r1, sl
   17dd8:	mov	r2, r6
   17ddc:	bl	18ae4 <__flatcc_fb_gen_c_reader@@Base+0x22c8>
   17de0:	ldrh	r0, [r7, #72]	; 0x48
   17de4:	tst	r0, #4
   17de8:	bne	17ea8 <__flatcc_fb_gen_c_reader@@Base+0x168c>
   17dec:	ubfx	r4, r0, #8, #1
   17df0:	ldrh	r0, [r7, #24]
   17df4:	sub	r0, r0, #7
   17df8:	cmp	r0, #8
   17dfc:	bhi	184ac <__flatcc_fb_gen_c_reader@@Base+0x1c90>
   17e00:	mov	r9, r8
   17e04:	add	r8, r7, #96	; 0x60
   17e08:	add	r1, pc, #0
   17e0c:	ldr	pc, [r1, r0, lsl #2]
   17e10:	andeq	r7, r1, r4, lsr lr
   17e14:	andeq	r8, r1, r4, lsr #32
   17e18:	andeq	r8, r1, ip, ror r2
   17e1c:	andeq	r7, r1, ip, asr #29
   17e20:	andeq	r8, r1, ip, lsr #9
   17e24:	andeq	r8, r1, ip, lsr #9
   17e28:	andeq	r8, r1, ip, lsr #9
   17e2c:	andeq	r8, r1, r4, lsr r3
   17e30:	andeq	r8, r1, r4, asr #5
   17e34:	ldr	r0, [r7, #16]
   17e38:	bl	18d10 <__flatcc_fb_gen_c_reader@@Base+0x24f4>
   17e3c:	ldr	ip, [r5, #204]	; 0xcc
   17e40:	ldrd	r2, [r8]
   17e44:	ldr	r6, [fp, #-40]	; 0xffffffd8
   17e48:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17e4c:	stm	sp, {r2, r3}
   17e50:	mov	r8, r9
   17e54:	str	r9, [sp, #8]
   17e58:	str	r6, [sp, #12]
   17e5c:	movw	r9, #21264	; 0x5310
   17e60:	movt	r9, #3
   17e64:	str	r1, [sp, #16]
   17e68:	str	r5, [sp, #20]
   17e6c:	str	r0, [sp, #24]
   17e70:	str	r4, [sp, #28]
   17e74:	mov	r0, ip
   17e78:	movw	r1, #50594	; 0xc5a2
   17e7c:	movt	r1, #3
   17e80:	mov	r2, r5
   17e84:	bl	14890 <fprintf@plt>
   17e88:	ldr	r1, [r7, #104]	; 0x68
   17e8c:	cmp	r1, #0
   17e90:	beq	18468 <__flatcc_fb_gen_c_reader@@Base+0x1c4c>
   17e94:	mov	r0, r5
   17e98:	ldr	r2, [sp, #40]	; 0x28
   17e9c:	mov	r3, r7
   17ea0:	bl	18d84 <__flatcc_fb_gen_c_reader@@Base+0x2568>
   17ea4:	b	18468 <__flatcc_fb_gen_c_reader@@Base+0x1c4c>
   17ea8:	ldr	r0, [r5, #204]	; 0xcc
   17eac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17eb0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17eb4:	str	r1, [sp]
   17eb8:	movw	r1, #50218	; 0xc42a
   17ebc:	movt	r1, #3
   17ec0:	mov	r2, r8
   17ec4:	bl	14890 <fprintf@plt>
   17ec8:	b	18498 <__flatcc_fb_gen_c_reader@@Base+0x1c7c>
   17ecc:	ldr	r0, [r5, #204]	; 0xcc
   17ed0:	ldrd	r2, [r8]
   17ed4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17ed8:	ldr	r6, [fp, #-36]	; 0xffffffdc
   17edc:	stm	sp, {r2, r3}
   17ee0:	mov	r8, r9
   17ee4:	str	r9, [sp, #8]
   17ee8:	str	r1, [sp, #12]
   17eec:	str	r6, [sp, #16]
   17ef0:	str	r4, [sp, #20]
   17ef4:	movw	r1, #50645	; 0xc5d5
   17ef8:	movt	r1, #3
   17efc:	mov	r2, r5
   17f00:	bl	14890 <fprintf@plt>
   17f04:	ldr	r0, [r5, #212]	; 0xd4
   17f08:	ldr	r0, [r0, #32]
   17f0c:	cmp	r0, #0
   17f10:	bne	17f44 <__flatcc_fb_gen_c_reader@@Base+0x1728>
   17f14:	ldrb	r0, [r7, #72]	; 0x48
   17f18:	tst	r0, #128	; 0x80
   17f1c:	beq	17f44 <__flatcc_fb_gen_c_reader@@Base+0x1728>
   17f20:	ldr	r0, [r5, #204]	; 0xcc
   17f24:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17f28:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17f2c:	stm	sp, {r1, r2}
   17f30:	movw	r1, #50690	; 0xc602
   17f34:	movt	r1, #3
   17f38:	mov	r2, r5
   17f3c:	mov	r3, r8
   17f40:	bl	14890 <fprintf@plt>
   17f44:	ldrb	r0, [r7, #72]	; 0x48
   17f48:	tst	r0, #128	; 0x80
   17f4c:	movw	r9, #21264	; 0x5310
   17f50:	movt	r9, #3
   17f54:	beq	18468 <__flatcc_fb_gen_c_reader@@Base+0x1c4c>
   17f58:	ldr	r0, [sp, #56]	; 0x38
   17f5c:	cmp	r0, #0
   17f60:	sub	r6, fp, #36	; 0x24
   17f64:	beq	17f80 <__flatcc_fb_gen_c_reader@@Base+0x1764>
   17f68:	ldr	r3, [r5, #204]	; 0xcc
   17f6c:	movw	r0, #49377	; 0xc0e1
   17f70:	movt	r0, #3
   17f74:	mov	r1, #66	; 0x42
   17f78:	mov	r2, #1
   17f7c:	bl	14830 <fwrite@plt>
   17f80:	ldr	r0, [r5, #204]	; 0xcc
   17f84:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17f88:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17f8c:	stm	sp, {r1, r2}
   17f90:	movw	r1, #50733	; 0xc62d
   17f94:	movt	r1, #3
   17f98:	mov	r2, r5
   17f9c:	mov	r3, r8
   17fa0:	bl	14890 <fprintf@plt>
   17fa4:	ldr	r0, [r5, #212]	; 0xd4
   17fa8:	ldr	r0, [r0, #136]	; 0x88
   17fac:	cmp	r0, #0
   17fb0:	beq	17fd8 <__flatcc_fb_gen_c_reader@@Base+0x17bc>
   17fb4:	ldr	r0, [r5, #204]	; 0xcc
   17fb8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17fbc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17fc0:	stm	sp, {r1, r2}
   17fc4:	movw	r1, #50776	; 0xc658
   17fc8:	movt	r1, #3
   17fcc:	mov	r2, r5
   17fd0:	mov	r3, r8
   17fd4:	bl	14890 <fprintf@plt>
   17fd8:	ldr	r0, [sp, #56]	; 0x38
   17fdc:	cmp	r0, #0
   17fe0:	bne	18498 <__flatcc_fb_gen_c_reader@@Base+0x1c7c>
   17fe4:	ldr	r0, [r5, #204]	; 0xcc
   17fe8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17fec:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17ff0:	stm	sp, {r1, r2}
   17ff4:	movw	r1, #50819	; 0xc683
   17ff8:	movt	r1, #3
   17ffc:	mov	r2, r5
   18000:	mov	r3, r8
   18004:	bl	14890 <fprintf@plt>
   18008:	ldr	r0, [r5, #204]	; 0xcc
   1800c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18010:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18014:	stm	sp, {r1, r2}
   18018:	movw	r1, #50870	; 0xc6b6
   1801c:	movt	r1, #3
   18020:	b	18230 <__flatcc_fb_gen_c_reader@@Base+0x1a14>
   18024:	ldr	r4, [r7, #16]
   18028:	mov	r0, r4
   1802c:	mov	r1, r5
   18030:	bl	189a8 <__flatcc_fb_gen_c_reader@@Base+0x218c>
   18034:	str	r0, [sp, #52]	; 0x34
   18038:	mov	r0, r4
   1803c:	bl	189c0 <__flatcc_fb_gen_c_reader@@Base+0x21a4>
   18040:	mov	r6, r0
   18044:	ldr	r0, [r7, #16]
   18048:	bl	18c9c <__flatcc_fb_gen_c_reader@@Base+0x2480>
   1804c:	str	r0, [sp, #44]	; 0x2c
   18050:	ldr	r0, [r7, #16]
   18054:	add	r1, r7, #48	; 0x30
   18058:	add	r4, sp, #60	; 0x3c
   1805c:	mov	r2, r4
   18060:	bl	18aec <__flatcc_fb_gen_c_reader@@Base+0x22d0>
   18064:	ldrd	r2, [r8]
   18068:	ldr	r0, [r5, #204]	; 0xcc
   1806c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18070:	ldr	r4, [fp, #-36]	; 0xffffffdc
   18074:	str	r6, [sp, #48]	; 0x30
   18078:	str	r6, [sp, #32]
   1807c:	add	r6, sp, #60	; 0x3c
   18080:	str	r6, [sp, #36]	; 0x24
   18084:	stm	sp, {r2, r3}
   18088:	mov	r8, r9
   1808c:	str	r9, [sp, #8]
   18090:	add	r2, sp, #12
   18094:	stm	r2, {r1, r4, r5}
   18098:	ldr	r1, [sp, #44]	; 0x2c
   1809c:	str	r1, [sp, #24]
   180a0:	ldr	r1, [sp, #52]	; 0x34
   180a4:	str	r1, [sp, #28]
   180a8:	movw	r1, #50263	; 0xc457
   180ac:	movt	r1, #3
   180b0:	mov	r2, r5
   180b4:	bl	14890 <fprintf@plt>
   180b8:	ldr	r0, [r5, #212]	; 0xd4
   180bc:	ldr	r0, [r0, #32]
   180c0:	cmp	r0, #0
   180c4:	bne	18108 <__flatcc_fb_gen_c_reader@@Base+0x18ec>
   180c8:	ldrb	r0, [r7, #72]	; 0x48
   180cc:	tst	r0, #128	; 0x80
   180d0:	beq	18108 <__flatcc_fb_gen_c_reader@@Base+0x18ec>
   180d4:	ldr	r0, [r5, #204]	; 0xcc
   180d8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   180dc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   180e0:	stm	sp, {r1, r2}
   180e4:	ldr	r1, [sp, #52]	; 0x34
   180e8:	str	r1, [sp, #8]
   180ec:	ldr	r1, [sp, #48]	; 0x30
   180f0:	str	r1, [sp, #12]
   180f4:	movw	r1, #50320	; 0xc490
   180f8:	movt	r1, #3
   180fc:	mov	r2, r5
   18100:	mov	r3, r8
   18104:	bl	14890 <fprintf@plt>
   18108:	ldrb	r0, [r7, #72]	; 0x48
   1810c:	tst	r0, #128	; 0x80
   18110:	movw	r9, #21264	; 0x5310
   18114:	movt	r9, #3
   18118:	beq	18468 <__flatcc_fb_gen_c_reader@@Base+0x1c4c>
   1811c:	ldr	r0, [sp, #56]	; 0x38
   18120:	cmp	r0, #0
   18124:	sub	r6, fp, #36	; 0x24
   18128:	beq	18144 <__flatcc_fb_gen_c_reader@@Base+0x1928>
   1812c:	ldr	r3, [r5, #204]	; 0xcc
   18130:	movw	r0, #49377	; 0xc0e1
   18134:	movt	r0, #3
   18138:	mov	r1, #66	; 0x42
   1813c:	mov	r2, #1
   18140:	bl	14830 <fwrite@plt>
   18144:	ldr	r3, [r5, #204]	; 0xcc
   18148:	movw	r0, #49444	; 0xc124
   1814c:	movt	r0, #3
   18150:	mov	r1, #61	; 0x3d
   18154:	mov	r2, #1
   18158:	bl	14830 <fwrite@plt>
   1815c:	ldr	r0, [r5, #204]	; 0xcc
   18160:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18164:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18168:	stm	sp, {r1, r2}
   1816c:	ldr	r1, [sp, #52]	; 0x34
   18170:	str	r1, [sp, #8]
   18174:	ldr	r4, [sp, #48]	; 0x30
   18178:	str	r4, [sp, #12]
   1817c:	movw	r1, #50369	; 0xc4c1
   18180:	movt	r1, #3
   18184:	mov	r2, r5
   18188:	mov	r3, r8
   1818c:	bl	14890 <fprintf@plt>
   18190:	ldr	r0, [r5, #212]	; 0xd4
   18194:	ldr	r0, [r0, #136]	; 0x88
   18198:	cmp	r0, #0
   1819c:	beq	181d0 <__flatcc_fb_gen_c_reader@@Base+0x19b4>
   181a0:	ldr	r0, [r5, #204]	; 0xcc
   181a4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   181a8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   181ac:	stm	sp, {r1, r2}
   181b0:	ldr	r1, [sp, #52]	; 0x34
   181b4:	add	r2, sp, #8
   181b8:	stm	r2, {r1, r4, r5}
   181bc:	movw	r1, #50418	; 0xc4f2
   181c0:	movt	r1, #3
   181c4:	mov	r2, r5
   181c8:	mov	r3, r8
   181cc:	bl	14890 <fprintf@plt>
   181d0:	ldr	r0, [sp, #56]	; 0x38
   181d4:	cmp	r0, #0
   181d8:	bne	18498 <__flatcc_fb_gen_c_reader@@Base+0x1c7c>
   181dc:	ldr	r0, [r5, #204]	; 0xcc
   181e0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   181e4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   181e8:	stm	sp, {r1, r2}
   181ec:	ldr	r4, [sp, #52]	; 0x34
   181f0:	str	r4, [sp, #8]
   181f4:	ldr	r1, [sp, #48]	; 0x30
   181f8:	str	r1, [sp, #12]
   181fc:	movw	r1, #50480	; 0xc530
   18200:	movt	r1, #3
   18204:	mov	r2, r5
   18208:	mov	r3, r8
   1820c:	bl	14890 <fprintf@plt>
   18210:	ldr	r0, [r5, #204]	; 0xcc
   18214:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18218:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1821c:	stm	sp, {r1, r2, r4}
   18220:	ldr	r1, [sp, #48]	; 0x30
   18224:	str	r1, [sp, #12]
   18228:	movw	r1, #50537	; 0xc569
   1822c:	movt	r1, #3
   18230:	mov	r2, r5
   18234:	mov	r3, r8
   18238:	bl	14890 <fprintf@plt>
   1823c:	ldr	r0, [r5, #212]	; 0xd4
   18240:	ldr	r0, [r0, #136]	; 0x88
   18244:	mov	r1, #1
   18248:	str	r1, [sp, #56]	; 0x38
   1824c:	cmp	r0, #0
   18250:	beq	18498 <__flatcc_fb_gen_c_reader@@Base+0x1c7c>
   18254:	ldr	r0, [r5, #204]	; 0xcc
   18258:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1825c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18260:	stm	sp, {r1, r2}
   18264:	movw	r1, #49744	; 0xc250
   18268:	movt	r1, #3
   1826c:	mov	r2, r8
   18270:	mov	r3, r8
   18274:	bl	14890 <fprintf@plt>
   18278:	b	18498 <__flatcc_fb_gen_c_reader@@Base+0x1c7c>
   1827c:	ldr	r0, [r5, #204]	; 0xcc
   18280:	ldrd	r2, [r8]
   18284:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18288:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1828c:	stm	sp, {r2, r3}
   18290:	mov	r8, r9
   18294:	str	r9, [sp, #8]
   18298:	str	r1, [sp, #12]
   1829c:	str	r6, [sp, #16]
   182a0:	movw	r9, #21264	; 0x5310
   182a4:	movt	r9, #3
   182a8:	str	r5, [sp, #20]
   182ac:	str	r4, [sp, #24]
   182b0:	movw	r1, #50921	; 0xc6e9
   182b4:	movt	r1, #3
   182b8:	mov	r2, r5
   182bc:	bl	14890 <fprintf@plt>
   182c0:	b	18468 <__flatcc_fb_gen_c_reader@@Base+0x1c4c>
   182c4:	ldr	r0, [r7, #16]
   182c8:	add	r1, sp, #160	; 0xa0
   182cc:	bl	18998 <__flatcc_fb_gen_c_reader@@Base+0x217c>
   182d0:	ldr	r0, [r7, #16]
   182d4:	ldrh	r6, [r0, #8]
   182d8:	cmp	r6, #4
   182dc:	bhi	184fc <__flatcc_fb_gen_c_reader@@Base+0x1ce0>
   182e0:	cmp	r6, #2
   182e4:	beq	184fc <__flatcc_fb_gen_c_reader@@Base+0x1ce0>
   182e8:	ldr	r3, [r8, #4]
   182ec:	ldr	r8, [r8]
   182f0:	ldr	r0, [r5, #204]	; 0xcc
   182f4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   182f8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   182fc:	cmp	r6, #4
   18300:	bne	183a8 <__flatcc_fb_gen_c_reader@@Base+0x1b8c>
   18304:	str	r8, [sp]
   18308:	str	r3, [sp, #4]
   1830c:	mov	r8, r9
   18310:	str	r9, [sp, #8]
   18314:	str	r2, [sp, #12]
   18318:	str	r1, [sp, #16]
   1831c:	add	r1, sp, #160	; 0xa0
   18320:	str	r1, [sp, #20]
   18324:	str	r4, [sp, #24]
   18328:	movw	r1, #51428	; 0xc8e4
   1832c:	movt	r1, #3
   18330:	b	18410 <__flatcc_fb_gen_c_reader@@Base+0x1bf4>
   18334:	ldr	r0, [r7, #16]
   18338:	add	r1, sp, #160	; 0xa0
   1833c:	bl	18998 <__flatcc_fb_gen_c_reader@@Base+0x217c>
   18340:	ldr	r0, [r7, #16]
   18344:	ldrh	r1, [r0, #8]
   18348:	cmp	r1, #4
   1834c:	bhi	1854c <__flatcc_fb_gen_c_reader@@Base+0x1d30>
   18350:	add	r2, pc, #0
   18354:	ldr	pc, [r2, r1, lsl #2]
   18358:	andeq	r8, r1, ip, ror #6
   1835c:	andeq	r8, r1, r0, lsr #8
   18360:	andeq	r8, r1, ip, asr #10
   18364:	andeq	r7, r1, ip, lsl ip
   18368:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   1836c:	ldr	r0, [r5, #204]	; 0xcc
   18370:	ldrd	r2, [r8]
   18374:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18378:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1837c:	stm	sp, {r2, r3}
   18380:	mov	r8, r9
   18384:	str	r9, [sp, #8]
   18388:	str	r1, [sp, #12]
   1838c:	str	r6, [sp, #16]
   18390:	add	r1, sp, #160	; 0xa0
   18394:	str	r1, [sp, #20]
   18398:	str	r4, [sp, #24]
   1839c:	movw	r1, #51040	; 0xc760
   183a0:	movt	r1, #3
   183a4:	b	18458 <__flatcc_fb_gen_c_reader@@Base+0x1c3c>
   183a8:	str	r8, [sp]
   183ac:	str	r3, [sp, #4]
   183b0:	mov	r8, r9
   183b4:	str	r9, [sp, #8]
   183b8:	str	r2, [sp, #12]
   183bc:	str	r1, [sp, #16]
   183c0:	add	r1, sp, #160	; 0xa0
   183c4:	str	r1, [sp, #20]
   183c8:	str	r4, [sp, #24]
   183cc:	movw	r1, #51487	; 0xc91f
   183d0:	movt	r1, #3
   183d4:	b	18458 <__flatcc_fb_gen_c_reader@@Base+0x1c3c>
   183d8:	ldr	r0, [r5, #204]	; 0xcc
   183dc:	ldrd	r2, [r8]
   183e0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   183e4:	ldr	r6, [fp, #-36]	; 0xffffffdc
   183e8:	stm	sp, {r2, r3}
   183ec:	mov	r8, r9
   183f0:	str	r9, [sp, #8]
   183f4:	str	r1, [sp, #12]
   183f8:	str	r6, [sp, #16]
   183fc:	add	r1, sp, #160	; 0xa0
   18400:	str	r1, [sp, #20]
   18404:	str	r4, [sp, #24]
   18408:	movw	r1, #51223	; 0xc817
   1840c:	movt	r1, #3
   18410:	mov	r2, r5
   18414:	mov	r3, r5
   18418:	bl	14890 <fprintf@plt>
   1841c:	b	18460 <__flatcc_fb_gen_c_reader@@Base+0x1c44>
   18420:	ldr	r0, [r5, #204]	; 0xcc
   18424:	ldrd	r2, [r8]
   18428:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1842c:	ldr	r6, [fp, #-36]	; 0xffffffdc
   18430:	stm	sp, {r2, r3}
   18434:	mov	r8, r9
   18438:	str	r9, [sp, #8]
   1843c:	str	r1, [sp, #12]
   18440:	str	r6, [sp, #16]
   18444:	add	r1, sp, #160	; 0xa0
   18448:	str	r1, [sp, #20]
   1844c:	str	r4, [sp, #24]
   18450:	movw	r1, #50982	; 0xc726
   18454:	movt	r1, #3
   18458:	mov	r2, r5
   1845c:	bl	14890 <fprintf@plt>
   18460:	movw	r9, #21264	; 0x5310
   18464:	movt	r9, #3
   18468:	ldrb	r0, [r7, #72]	; 0x48
   1846c:	tst	r0, #128	; 0x80
   18470:	sub	r6, fp, #36	; 0x24
   18474:	beq	18498 <__flatcc_fb_gen_c_reader@@Base+0x1c7c>
   18478:	ldr	r3, [r5, #204]	; 0xcc
   1847c:	mov	r0, #1
   18480:	str	r0, [sp, #56]	; 0x38
   18484:	movw	r0, #49840	; 0xc2b0
   18488:	movt	r0, #3
   1848c:	mov	r1, #84	; 0x54
   18490:	mov	r2, #1
   18494:	bl	14830 <fwrite@plt>
   18498:	ldr	r7, [r7]
   1849c:	cmp	r7, #0
   184a0:	bne	17dc0 <__flatcc_fb_gen_c_reader@@Base+0x15a4>
   184a4:	sub	sp, fp, #28
   184a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   184ac:	movw	r0, #4264	; 0x10a8
   184b0:	movt	r0, #6
   184b4:	ldr	r0, [r0]
   184b8:	movw	r1, #51542	; 0xc956
   184bc:	movt	r1, #3
   184c0:	str	r1, [sp]
   184c4:	movw	r1, #21007	; 0x520f
   184c8:	movt	r1, #3
   184cc:	movw	r4, #21018	; 0x521a
   184d0:	movt	r4, #3
   184d4:	mov	r2, r4
   184d8:	movw	r3, #1599	; 0x63f
   184dc:	bl	14890 <fprintf@plt>
   184e0:	movw	r0, #24925	; 0x615d
   184e4:	movt	r0, #4
   184e8:	movw	r3, #50001	; 0xc351
   184ec:	movt	r3, #3
   184f0:	mov	r1, r4
   184f4:	movw	r2, #1599	; 0x63f
   184f8:	bl	14950 <__assert_fail@plt>
   184fc:	movw	r0, #4264	; 0x10a8
   18500:	movt	r0, #6
   18504:	ldr	r0, [r0]
   18508:	movw	r1, #51348	; 0xc894
   1850c:	movt	r1, #3
   18510:	str	r1, [sp]
   18514:	movw	r1, #21007	; 0x520f
   18518:	movt	r1, #3
   1851c:	movw	r4, #21018	; 0x521a
   18520:	movt	r4, #3
   18524:	mov	r2, r4
   18528:	mov	r3, #1584	; 0x630
   1852c:	bl	14890 <fprintf@plt>
   18530:	movw	r0, #24925	; 0x615d
   18534:	movt	r0, #4
   18538:	movw	r3, #50001	; 0xc351
   1853c:	movt	r3, #3
   18540:	mov	r1, r4
   18544:	mov	r2, #1584	; 0x630
   18548:	bl	14950 <__assert_fail@plt>
   1854c:	movw	r0, #4264	; 0x10a8
   18550:	movt	r0, #6
   18554:	ldr	r0, [r0]
   18558:	movw	r1, #51275	; 0xc84b
   1855c:	movt	r1, #3
   18560:	str	r1, [sp]
   18564:	movw	r1, #21007	; 0x520f
   18568:	movt	r1, #3
   1856c:	movw	r4, #21018	; 0x521a
   18570:	movt	r4, #3
   18574:	mov	r2, r4
   18578:	mov	r3, #1568	; 0x620
   1857c:	bl	14890 <fprintf@plt>
   18580:	movw	r0, #24925	; 0x615d
   18584:	movt	r0, #4
   18588:	movw	r3, #50001	; 0xc351
   1858c:	movt	r3, #3
   18590:	mov	r1, r4
   18594:	mov	r2, #1568	; 0x620
   18598:	bl	14950 <__assert_fail@plt>
   1859c:	movw	r0, #46160	; 0xb450
   185a0:	movt	r0, #3
   185a4:	movw	r1, #21018	; 0x521a
   185a8:	movt	r1, #3
   185ac:	movw	r3, #50001	; 0xc351
   185b0:	movt	r3, #3
   185b4:	movw	r2, #1362	; 0x552
   185b8:	bl	14950 <__assert_fail@plt>
   185bc:	push	{r4, sl, fp, lr}
   185c0:	add	fp, sp, #8
   185c4:	mov	r4, r0
   185c8:	bl	167f4 <__flatcc_fb_gen_common_c_header@@Base+0x910>
   185cc:	ldr	r0, [r4, #204]	; 0xcc
   185d0:	ldr	r1, [r4, #208]	; 0xd0
   185d4:	ldr	r2, [r1, #164]	; 0xa4
   185d8:	movw	r1, #51975	; 0xcb07
   185dc:	movt	r1, #3
   185e0:	pop	{r4, sl, fp, lr}
   185e4:	b	14890 <fprintf@plt>
   185e8:	push	{r4, sl, fp, lr}
   185ec:	add	fp, sp, #8
   185f0:	sub	sp, sp, #24
   185f4:	mov	r4, r0
   185f8:	ldr	r0, [r0, #204]	; 0xcc
   185fc:	str	r4, [sp]
   18600:	str	r4, [sp, #4]
   18604:	str	r4, [sp, #8]
   18608:	str	r4, [sp, #12]
   1860c:	str	r4, [sp, #16]
   18610:	str	r4, [sp, #20]
   18614:	movw	r1, #33327	; 0x822f
   18618:	movt	r1, #3
   1861c:	mov	r2, r4
   18620:	mov	r3, r4
   18624:	bl	14890 <fprintf@plt>
   18628:	ldr	r0, [r4, #204]	; 0xcc
   1862c:	str	r4, [sp]
   18630:	str	r4, [sp, #4]
   18634:	movw	r1, #33522	; 0x82f2
   18638:	movt	r1, #3
   1863c:	mov	r2, r4
   18640:	mov	r3, r4
   18644:	bl	14890 <fprintf@plt>
   18648:	ldr	r0, [r4, #204]	; 0xcc
   1864c:	str	r4, [sp]
   18650:	str	r4, [sp, #4]
   18654:	movw	r1, #33675	; 0x838b
   18658:	movt	r1, #3
   1865c:	mov	r2, r4
   18660:	mov	r3, r4
   18664:	bl	14890 <fprintf@plt>
   18668:	ldr	r0, [r4, #204]	; 0xcc
   1866c:	movw	r1, #33794	; 0x8402
   18670:	movt	r1, #3
   18674:	mov	r2, r4
   18678:	bl	14890 <fprintf@plt>
   1867c:	ldr	r0, [r4, #204]	; 0xcc
   18680:	movw	r1, #34515	; 0x86d3
   18684:	movt	r1, #3
   18688:	mov	r2, r4
   1868c:	bl	14890 <fprintf@plt>
   18690:	ldr	r0, [r4, #204]	; 0xcc
   18694:	movw	r1, #35173	; 0x8965
   18698:	movt	r1, #3
   1869c:	mov	r2, r4
   186a0:	bl	14890 <fprintf@plt>
   186a4:	ldr	r0, [r4, #204]	; 0xcc
   186a8:	movw	r1, #35302	; 0x89e6
   186ac:	movt	r1, #3
   186b0:	mov	r2, r4
   186b4:	bl	14890 <fprintf@plt>
   186b8:	ldr	r0, [r4, #204]	; 0xcc
   186bc:	movw	r1, #35412	; 0x8a54
   186c0:	movt	r1, #3
   186c4:	mov	r2, r4
   186c8:	sub	sp, fp, #8
   186cc:	pop	{r4, sl, fp, lr}
   186d0:	b	14890 <fprintf@plt>
   186d4:	push	{r4, sl, fp, lr}
   186d8:	add	fp, sp, #8
   186dc:	sub	sp, sp, #40	; 0x28
   186e0:	mov	r4, r0
   186e4:	ldr	r0, [r0, #204]	; 0xcc
   186e8:	str	r4, [sp]
   186ec:	str	r4, [sp, #4]
   186f0:	movw	r1, #35896	; 0x8c38
   186f4:	movt	r1, #3
   186f8:	mov	r2, r4
   186fc:	mov	r3, r4
   18700:	bl	14890 <fprintf@plt>
   18704:	ldr	r0, [r4, #204]	; 0xcc
   18708:	str	r4, [sp]
   1870c:	str	r4, [sp, #4]
   18710:	str	r4, [sp, #8]
   18714:	str	r4, [sp, #12]
   18718:	movw	r1, #36065	; 0x8ce1
   1871c:	movt	r1, #3
   18720:	mov	r2, r4
   18724:	mov	r3, r4
   18728:	bl	14890 <fprintf@plt>
   1872c:	ldr	r0, [r4, #204]	; 0xcc
   18730:	str	r4, [sp]
   18734:	movw	r1, #36540	; 0x8ebc
   18738:	movt	r1, #3
   1873c:	mov	r2, r4
   18740:	mov	r3, r4
   18744:	bl	14890 <fprintf@plt>
   18748:	ldr	r0, [r4, #204]	; 0xcc
   1874c:	str	r4, [sp, #32]
   18750:	str	r4, [sp]
   18754:	str	r4, [sp, #4]
   18758:	str	r4, [sp, #8]
   1875c:	str	r4, [sp, #12]
   18760:	str	r4, [sp, #16]
   18764:	str	r4, [sp, #20]
   18768:	str	r4, [sp, #24]
   1876c:	str	r4, [sp, #28]
   18770:	movw	r1, #37078	; 0x90d6
   18774:	movt	r1, #3
   18778:	mov	r2, r4
   1877c:	mov	r3, r4
   18780:	bl	14890 <fprintf@plt>
   18784:	ldr	r0, [r4, #204]	; 0xcc
   18788:	movw	r1, #37421	; 0x922d
   1878c:	movt	r1, #3
   18790:	mov	r2, r4
   18794:	mov	r3, r4
   18798:	bl	14890 <fprintf@plt>
   1879c:	ldr	r0, [r4, #204]	; 0xcc
   187a0:	str	r4, [sp]
   187a4:	movw	r1, #37628	; 0x92fc
   187a8:	movt	r1, #3
   187ac:	mov	r2, r4
   187b0:	mov	r3, r4
   187b4:	bl	14890 <fprintf@plt>
   187b8:	ldr	r0, [r4, #204]	; 0xcc
   187bc:	str	r4, [sp]
   187c0:	movw	r1, #37809	; 0x93b1
   187c4:	movt	r1, #3
   187c8:	mov	r2, r4
   187cc:	mov	r3, r4
   187d0:	bl	14890 <fprintf@plt>
   187d4:	ldr	r0, [r4, #204]	; 0xcc
   187d8:	movw	r1, #38246	; 0x9566
   187dc:	movt	r1, #3
   187e0:	mov	r2, r4
   187e4:	bl	14890 <fprintf@plt>
   187e8:	ldr	r0, [r4, #204]	; 0xcc
   187ec:	movw	r1, #38416	; 0x9610
   187f0:	movt	r1, #3
   187f4:	mov	r2, r4
   187f8:	sub	sp, fp, #8
   187fc:	pop	{r4, sl, fp, lr}
   18800:	b	14890 <fprintf@plt>
   18804:	push	{r4, sl, fp, lr}
   18808:	add	fp, sp, #8
   1880c:	sub	sp, sp, #48	; 0x30
   18810:	mov	r4, r0
   18814:	ldr	r0, [r0, #204]	; 0xcc
   18818:	movw	r1, #38717	; 0x973d
   1881c:	movt	r1, #3
   18820:	mov	r2, r4
   18824:	mov	r3, r4
   18828:	bl	14890 <fprintf@plt>
   1882c:	ldr	r0, [r4, #204]	; 0xcc
   18830:	movw	r1, #39053	; 0x988d
   18834:	movt	r1, #3
   18838:	mov	r2, r4
   1883c:	mov	r3, r4
   18840:	bl	14890 <fprintf@plt>
   18844:	ldr	r0, [r4, #204]	; 0xcc
   18848:	str	r4, [sp, #32]
   1884c:	str	r4, [sp]
   18850:	str	r4, [sp, #4]
   18854:	str	r4, [sp, #8]
   18858:	str	r4, [sp, #12]
   1885c:	str	r4, [sp, #16]
   18860:	str	r4, [sp, #20]
   18864:	str	r4, [sp, #24]
   18868:	str	r4, [sp, #28]
   1886c:	movw	r1, #39265	; 0x9961
   18870:	movt	r1, #3
   18874:	mov	r2, r4
   18878:	mov	r3, r4
   1887c:	bl	14890 <fprintf@plt>
   18880:	ldr	r0, [r4, #204]	; 0xcc
   18884:	str	r4, [sp, #32]
   18888:	str	r4, [sp]
   1888c:	str	r4, [sp, #4]
   18890:	str	r4, [sp, #8]
   18894:	str	r4, [sp, #12]
   18898:	str	r4, [sp, #16]
   1889c:	str	r4, [sp, #20]
   188a0:	str	r4, [sp, #24]
   188a4:	str	r4, [sp, #28]
   188a8:	movw	r1, #39644	; 0x9adc
   188ac:	movt	r1, #3
   188b0:	mov	r2, r4
   188b4:	mov	r3, r4
   188b8:	bl	14890 <fprintf@plt>
   188bc:	ldr	r0, [r4, #204]	; 0xcc
   188c0:	str	r4, [sp]
   188c4:	str	r4, [sp, #4]
   188c8:	str	r4, [sp, #8]
   188cc:	str	r4, [sp, #12]
   188d0:	str	r4, [sp, #16]
   188d4:	movw	r1, #40029	; 0x9c5d
   188d8:	movt	r1, #3
   188dc:	mov	r2, r4
   188e0:	mov	r3, r4
   188e4:	bl	14890 <fprintf@plt>
   188e8:	ldr	r0, [r4, #204]	; 0xcc
   188ec:	str	r4, [sp, #32]
   188f0:	str	r4, [sp]
   188f4:	str	r4, [sp, #4]
   188f8:	str	r4, [sp, #8]
   188fc:	str	r4, [sp, #12]
   18900:	str	r4, [sp, #16]
   18904:	str	r4, [sp, #20]
   18908:	str	r4, [sp, #24]
   1890c:	str	r4, [sp, #28]
   18910:	movw	r1, #40882	; 0x9fb2
   18914:	movt	r1, #3
   18918:	mov	r2, r4
   1891c:	mov	r3, r4
   18920:	bl	14890 <fprintf@plt>
   18924:	ldr	r0, [r4, #204]	; 0xcc
   18928:	str	r4, [sp, #32]
   1892c:	str	r4, [sp, #36]	; 0x24
   18930:	str	r4, [sp, #40]	; 0x28
   18934:	str	r4, [sp]
   18938:	str	r4, [sp, #4]
   1893c:	str	r4, [sp, #8]
   18940:	str	r4, [sp, #12]
   18944:	str	r4, [sp, #16]
   18948:	str	r4, [sp, #20]
   1894c:	str	r4, [sp, #24]
   18950:	str	r4, [sp, #28]
   18954:	movw	r1, #41682	; 0xa2d2
   18958:	movt	r1, #3
   1895c:	mov	r2, r4
   18960:	mov	r3, r4
   18964:	bl	14890 <fprintf@plt>
   18968:	ldr	r0, [r4, #204]	; 0xcc
   1896c:	movw	r1, #43419	; 0xa99b
   18970:	movt	r1, #3
   18974:	mov	r2, r4
   18978:	bl	14890 <fprintf@plt>
   1897c:	ldr	r0, [r4, #204]	; 0xcc
   18980:	movw	r1, #44011	; 0xabeb
   18984:	movt	r1, #3
   18988:	mov	r2, r4
   1898c:	sub	sp, fp, #8
   18990:	pop	{r4, sl, fp, lr}
   18994:	b	14890 <fprintf@plt>
   18998:	mov	r2, r1
   1899c:	mov	r1, r0
   189a0:	ldr	r0, [r0, #12]
   189a4:	b	15b70 <__flatcc_fb_scoped_symbol_name@@Base>
   189a8:	movw	r2, #21264	; 0x5310
   189ac:	movt	r2, #3
   189b0:	cmp	r0, #5
   189b4:	moveq	r2, r1
   189b8:	mov	r0, r2
   189bc:	bx	lr
   189c0:	sub	r0, r0, #1
   189c4:	cmp	r0, #11
   189c8:	movwcc	r1, #52016	; 0xcb30
   189cc:	movtcc	r1, #3
   189d0:	ldrcc	r0, [r1, r0, lsl #2]
   189d4:	bxcc	lr
   189d8:	push	{r4, sl, fp, lr}
   189dc:	add	fp, sp, #8
   189e0:	sub	sp, sp, #8
   189e4:	movw	r0, #4264	; 0x10a8
   189e8:	movt	r0, #6
   189ec:	ldr	r0, [r0]
   189f0:	movw	r1, #47600	; 0xb9f0
   189f4:	movt	r1, #3
   189f8:	str	r1, [sp]
   189fc:	movw	r1, #21007	; 0x520f
   18a00:	movt	r1, #3
   18a04:	movw	r4, #47527	; 0xb9a7
   18a08:	movt	r4, #3
   18a0c:	mov	r2, r4
   18a10:	mov	r3, #141	; 0x8d
   18a14:	bl	14890 <fprintf@plt>
   18a18:	movw	r0, #24925	; 0x615d
   18a1c:	movt	r0, #4
   18a20:	movw	r3, #47655	; 0xba27
   18a24:	movt	r3, #3
   18a28:	mov	r1, r4
   18a2c:	mov	r2, #141	; 0x8d
   18a30:	bl	14950 <__assert_fail@plt>
   18a34:	cmp	r2, #0
   18a38:	bxeq	lr
   18a3c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   18a40:	add	fp, sp, #24
   18a44:	mov	r5, r1
   18a48:	mov	r4, r0
   18a4c:	mov	r0, #0
   18a50:	mov	r1, #1
   18a54:	movw	r6, #24941	; 0x616d
   18a58:	movt	r6, #4
   18a5c:	movw	r8, #47709	; 0xba5d
   18a60:	movt	r8, #3
   18a64:	movw	r9, #47702	; 0xba56
   18a68:	movt	r9, #3
   18a6c:	mov	r7, r2
   18a70:	ldr	r2, [r2, #4]
   18a74:	ldr	r2, [r2, #8]
   18a78:	cmp	r0, r2
   18a7c:	beq	18a98 <__flatcc_fb_gen_c_reader@@Base+0x227c>
   18a80:	ldr	r0, [r4, #204]	; 0xcc
   18a84:	cmp	r1, #0
   18a88:	moveq	r1, r8
   18a8c:	movne	r1, r9
   18a90:	mov	r2, r5
   18a94:	bl	14890 <fprintf@plt>
   18a98:	ldr	r0, [r4, #204]	; 0xcc
   18a9c:	ldr	r1, [r7, #4]
   18aa0:	ldr	r3, [r1]
   18aa4:	ldr	r2, [r1, #4]
   18aa8:	mov	r1, r6
   18aac:	bl	14890 <fprintf@plt>
   18ab0:	ldr	r2, [r7]
   18ab4:	ldr	r0, [r7, #4]
   18ab8:	ldr	r0, [r0, #8]
   18abc:	mov	r1, #0
   18ac0:	cmp	r2, #0
   18ac4:	bne	18a6c <__flatcc_fb_gen_c_reader@@Base+0x2250>
   18ac8:	ldr	r3, [r4, #204]	; 0xcc
   18acc:	movw	r0, #42264	; 0xa518
   18ad0:	movt	r0, #4
   18ad4:	mov	r1, #4
   18ad8:	mov	r2, #1
   18adc:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   18ae0:	b	14830 <fwrite@plt>
   18ae4:	ldr	r0, [r0, #4]
   18ae8:	b	18c14 <__flatcc_fb_gen_c_reader@@Base+0x23f8>
   18aec:	push	{r4, r5, fp, lr}
   18af0:	add	fp, sp, #8
   18af4:	sub	sp, sp, #8
   18af8:	mov	r5, r1
   18afc:	ldrh	r1, [r1, #8]
   18b00:	sub	r1, r1, #3
   18b04:	cmp	r1, #3
   18b08:	bhi	18bc4 <__flatcc_fb_gen_c_reader@@Base+0x23a8>
   18b0c:	mov	r4, r2
   18b10:	add	r2, pc, #0
   18b14:	ldr	pc, [r2, r1, lsl #2]
   18b18:	andeq	r8, r1, r8, lsr #22
   18b1c:	andeq	r8, r1, r0, lsl #23
   18b20:	andeq	r8, r1, ip, asr #22
   18b24:	andeq	r8, r1, r8, ror #22
   18b28:	vldr	d16, [r5]
   18b2c:	cmp	r0, #11
   18b30:	bne	18ba8 <__flatcc_fb_gen_c_reader@@Base+0x238c>
   18b34:	vcvt.f32.f64	s0, d16
   18b38:	vcvt.f64.f32	d16, s0
   18b3c:	vmov	r2, r3, d16
   18b40:	movw	r1, #47741	; 0xba7d
   18b44:	movt	r1, #3
   18b48:	b	18bb4 <__flatcc_fb_gen_c_reader@@Base+0x2398>
   18b4c:	bl	18c28 <__flatcc_fb_gen_c_reader@@Base+0x240c>
   18b50:	mov	r2, r0
   18b54:	ldrd	r0, [r5]
   18b58:	stm	sp, {r0, r1}
   18b5c:	movw	r1, #47716	; 0xba64
   18b60:	movt	r1, #3
   18b64:	b	18b98 <__flatcc_fb_gen_c_reader@@Base+0x237c>
   18b68:	bl	18c28 <__flatcc_fb_gen_c_reader@@Base+0x240c>
   18b6c:	mov	r2, r0
   18b70:	ldrb	r3, [r5]
   18b74:	movw	r1, #47734	; 0xba76
   18b78:	movt	r1, #3
   18b7c:	b	18bb4 <__flatcc_fb_gen_c_reader@@Base+0x2398>
   18b80:	bl	18c28 <__flatcc_fb_gen_c_reader@@Base+0x240c>
   18b84:	mov	r2, r0
   18b88:	ldrd	r0, [r5]
   18b8c:	stm	sp, {r0, r1}
   18b90:	movw	r1, #47725	; 0xba6d
   18b94:	movt	r1, #3
   18b98:	mov	r0, r4
   18b9c:	bl	148fc <sprintf@plt>
   18ba0:	sub	sp, fp, #8
   18ba4:	pop	{r4, r5, fp, pc}
   18ba8:	vmov	r2, r3, d16
   18bac:	movw	r1, #47745	; 0xba81
   18bb0:	movt	r1, #3
   18bb4:	mov	r0, r4
   18bb8:	sub	sp, fp, #8
   18bbc:	pop	{r4, r5, fp, lr}
   18bc0:	b	148fc <sprintf@plt>
   18bc4:	movw	r0, #4264	; 0x10a8
   18bc8:	movt	r0, #6
   18bcc:	ldr	r0, [r0]
   18bd0:	movw	r1, #47600	; 0xb9f0
   18bd4:	movt	r1, #3
   18bd8:	str	r1, [sp]
   18bdc:	movw	r1, #21007	; 0x520f
   18be0:	movt	r1, #3
   18be4:	movw	r4, #47527	; 0xb9a7
   18be8:	movt	r4, #3
   18bec:	mov	r2, r4
   18bf0:	mov	r3, #260	; 0x104
   18bf4:	bl	14890 <fprintf@plt>
   18bf8:	movw	r0, #24925	; 0x615d
   18bfc:	movt	r0, #4
   18c00:	movw	r3, #47749	; 0xba85
   18c04:	movt	r3, #3
   18c08:	mov	r1, r4
   18c0c:	mov	r2, #260	; 0x104
   18c10:	bl	14950 <__assert_fail@plt>
   18c14:	ldr	r3, [r0, #4]
   18c18:	str	r3, [r1]
   18c1c:	ldr	r0, [r0]
   18c20:	str	r0, [r2]
   18c24:	bx	lr
   18c28:	sub	r0, r0, #1
   18c2c:	cmp	r0, #9
   18c30:	movwcc	r1, #52064	; 0xcb60
   18c34:	movtcc	r1, #3
   18c38:	ldrcc	r0, [r1, r0, lsl #2]
   18c3c:	bxcc	lr
   18c40:	push	{r4, sl, fp, lr}
   18c44:	add	fp, sp, #8
   18c48:	sub	sp, sp, #8
   18c4c:	movw	r0, #4264	; 0x10a8
   18c50:	movt	r0, #6
   18c54:	ldr	r0, [r0]
   18c58:	movw	r1, #47600	; 0xb9f0
   18c5c:	movt	r1, #3
   18c60:	str	r1, [sp]
   18c64:	movw	r1, #21007	; 0x520f
   18c68:	movt	r1, #3
   18c6c:	movw	r4, #47527	; 0xb9a7
   18c70:	movt	r4, #3
   18c74:	mov	r2, r4
   18c78:	mov	r3, #226	; 0xe2
   18c7c:	bl	14890 <fprintf@plt>
   18c80:	movw	r0, #24925	; 0x615d
   18c84:	movt	r0, #4
   18c88:	movw	r3, #47851	; 0xbaeb
   18c8c:	movt	r3, #3
   18c90:	mov	r1, r4
   18c94:	mov	r2, #226	; 0xe2
   18c98:	bl	14950 <__assert_fail@plt>
   18c9c:	sub	r0, r0, #1
   18ca0:	cmp	r0, #11
   18ca4:	movwcc	r1, #52112	; 0xcb90
   18ca8:	movtcc	r1, #3
   18cac:	ldrcc	r0, [r1, r0, lsl #2]
   18cb0:	bxcc	lr
   18cb4:	push	{r4, sl, fp, lr}
   18cb8:	add	fp, sp, #8
   18cbc:	sub	sp, sp, #8
   18cc0:	movw	r0, #4264	; 0x10a8
   18cc4:	movt	r0, #6
   18cc8:	ldr	r0, [r0]
   18ccc:	movw	r1, #47600	; 0xb9f0
   18cd0:	movt	r1, #3
   18cd4:	str	r1, [sp]
   18cd8:	movw	r1, #21007	; 0x520f
   18cdc:	movt	r1, #3
   18ce0:	movw	r4, #47527	; 0xb9a7
   18ce4:	movt	r4, #3
   18ce8:	mov	r2, r4
   18cec:	mov	r3, #96	; 0x60
   18cf0:	bl	14890 <fprintf@plt>
   18cf4:	movw	r0, #24925	; 0x615d
   18cf8:	movt	r0, #4
   18cfc:	movw	r3, #49952	; 0xc320
   18d00:	movt	r3, #3
   18d04:	mov	r1, r4
   18d08:	mov	r2, #96	; 0x60
   18d0c:	bl	14950 <__assert_fail@plt>
   18d10:	sub	r0, r0, #1
   18d14:	cmp	r0, #11
   18d18:	movwcc	r1, #52160	; 0xcbc0
   18d1c:	movtcc	r1, #3
   18d20:	ldrcc	r0, [r1, r0, lsl #2]
   18d24:	bxcc	lr
   18d28:	push	{r4, sl, fp, lr}
   18d2c:	add	fp, sp, #8
   18d30:	sub	sp, sp, #8
   18d34:	movw	r0, #4264	; 0x10a8
   18d38:	movt	r0, #6
   18d3c:	ldr	r0, [r0]
   18d40:	movw	r1, #47600	; 0xb9f0
   18d44:	movt	r1, #3
   18d48:	str	r1, [sp]
   18d4c:	movw	r1, #21007	; 0x520f
   18d50:	movt	r1, #3
   18d54:	movw	r4, #47527	; 0xb9a7
   18d58:	movt	r4, #3
   18d5c:	mov	r2, r4
   18d60:	mov	r3, #186	; 0xba
   18d64:	bl	14890 <fprintf@plt>
   18d68:	movw	r0, #24925	; 0x615d
   18d6c:	movt	r0, #4
   18d70:	movw	r3, #51697	; 0xc9f1
   18d74:	movt	r3, #3
   18d78:	mov	r1, r4
   18d7c:	mov	r2, #186	; 0xba
   18d80:	bl	14950 <__assert_fail@plt>
   18d84:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   18d88:	add	fp, sp, #24
   18d8c:	sub	sp, sp, #472	; 0x1d8
   18d90:	mov	r5, r3
   18d94:	mov	r6, r2
   18d98:	mov	r7, r1
   18d9c:	mov	r4, r0
   18da0:	add	r0, sp, #240	; 0xf0
   18da4:	mov	r1, #0
   18da8:	mov	r2, #220	; 0xdc
   18dac:	bl	148a8 <memset@plt>
   18db0:	add	r0, sp, #16
   18db4:	mov	r1, #0
   18db8:	mov	r2, #220	; 0xdc
   18dbc:	bl	148a8 <memset@plt>
   18dc0:	cmp	r7, #0
   18dc4:	beq	18e50 <__flatcc_fb_gen_c_reader@@Base+0x2634>
   18dc8:	ldrh	r0, [r7, #8]
   18dcc:	cmp	r0, #0
   18dd0:	beq	18de8 <__flatcc_fb_gen_c_reader@@Base+0x25cc>
   18dd4:	cmp	r0, #1
   18dd8:	bne	18e58 <__flatcc_fb_gen_c_reader@@Base+0x263c>
   18ddc:	movw	r9, #51758	; 0xca2e
   18de0:	movt	r9, #3
   18de4:	b	18df0 <__flatcc_fb_gen_c_reader@@Base+0x25d4>
   18de8:	movw	r9, #51751	; 0xca27
   18dec:	movt	r9, #3
   18df0:	add	r8, sp, #240	; 0xf0
   18df4:	mov	r0, r7
   18df8:	mov	r1, r8
   18dfc:	bl	18998 <__flatcc_fb_gen_c_reader@@Base+0x217c>
   18e00:	ldrh	r0, [r6, #8]
   18e04:	cmp	r0, #0
   18e08:	bne	18ea8 <__flatcc_fb_gen_c_reader@@Base+0x268c>
   18e0c:	add	r7, sp, #16
   18e10:	mov	r0, r6
   18e14:	mov	r1, r7
   18e18:	bl	18998 <__flatcc_fb_gen_c_reader@@Base+0x217c>
   18e1c:	sub	r1, fp, #36	; 0x24
   18e20:	sub	r2, fp, #32
   18e24:	mov	r0, r5
   18e28:	bl	18ae4 <__flatcc_fb_gen_c_reader@@Base+0x22c8>
   18e2c:	ldr	r0, [r4, #204]	; 0xcc
   18e30:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18e34:	ldr	r2, [fp, #-32]	; 0xffffffe0
   18e38:	stm	sp, {r1, r2, r8, r9}
   18e3c:	movw	r1, #51930	; 0xcada
   18e40:	movt	r1, #3
   18e44:	mov	r2, r4
   18e48:	mov	r3, r7
   18e4c:	bl	14890 <fprintf@plt>
   18e50:	sub	sp, fp, #24
   18e54:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   18e58:	movw	r0, #4264	; 0x10a8
   18e5c:	movt	r0, #6
   18e60:	ldr	r0, [r0]
   18e64:	movw	r1, #51766	; 0xca36
   18e68:	movt	r1, #3
   18e6c:	str	r1, [sp]
   18e70:	movw	r1, #21007	; 0x520f
   18e74:	movt	r1, #3
   18e78:	movw	r4, #21018	; 0x521a
   18e7c:	movt	r4, #3
   18e80:	mov	r2, r4
   18e84:	movw	r3, #1339	; 0x53b
   18e88:	bl	14890 <fprintf@plt>
   18e8c:	movw	r0, #24925	; 0x615d
   18e90:	movt	r0, #4
   18e94:	movw	r3, #51818	; 0xca6a
   18e98:	movt	r3, #3
   18e9c:	mov	r1, r4
   18ea0:	movw	r2, #1339	; 0x53b
   18ea4:	bl	14950 <__assert_fail@plt>
   18ea8:	movw	r0, #51899	; 0xcabb
   18eac:	movt	r0, #3
   18eb0:	movw	r1, #21018	; 0x521a
   18eb4:	movt	r1, #3
   18eb8:	movw	r3, #51818	; 0xca6a
   18ebc:	movt	r3, #3
   18ec0:	movw	r2, #1343	; 0x53f
   18ec4:	bl	14950 <__assert_fail@plt>

00018ec8 <__flatcc_gen_sort@@Base>:
   18ec8:	push	{r4, sl, fp, lr}
   18ecc:	add	fp, sp, #8
   18ed0:	sub	sp, sp, #24
   18ed4:	mov	r4, r0
   18ed8:	ldr	r0, [r0, #204]	; 0xcc
   18edc:	movw	r1, #52204	; 0xcbec
   18ee0:	movt	r1, #3
   18ee4:	mov	r2, r4
   18ee8:	bl	14890 <fprintf@plt>
   18eec:	ldr	r0, [r4, #204]	; 0xcc
   18ef0:	movw	r1, #53178	; 0xcfba
   18ef4:	movt	r1, #3
   18ef8:	mov	r2, r4
   18efc:	mov	r3, r4
   18f00:	bl	14890 <fprintf@plt>
   18f04:	ldr	r0, [r4, #204]	; 0xcc
   18f08:	str	r4, [sp]
   18f0c:	movw	r1, #53450	; 0xd0ca
   18f10:	movt	r1, #3
   18f14:	mov	r2, r4
   18f18:	mov	r3, r4
   18f1c:	bl	14890 <fprintf@plt>
   18f20:	ldr	r0, [r4, #204]	; 0xcc
   18f24:	str	r4, [sp]
   18f28:	str	r4, [sp, #4]
   18f2c:	movw	r1, #53662	; 0xd19e
   18f30:	movt	r1, #3
   18f34:	mov	r2, r4
   18f38:	mov	r3, r4
   18f3c:	bl	14890 <fprintf@plt>
   18f40:	ldr	r0, [r4, #204]	; 0xcc
   18f44:	movw	r1, #53810	; 0xd232
   18f48:	movt	r1, #3
   18f4c:	mov	r2, r4
   18f50:	mov	r3, r4
   18f54:	bl	14890 <fprintf@plt>
   18f58:	ldr	r0, [r4, #204]	; 0xcc
   18f5c:	str	r4, [sp]
   18f60:	str	r4, [sp, #4]
   18f64:	movw	r1, #54217	; 0xd3c9
   18f68:	movt	r1, #3
   18f6c:	mov	r2, r4
   18f70:	mov	r3, r4
   18f74:	bl	14890 <fprintf@plt>
   18f78:	ldr	r0, [r4, #204]	; 0xcc
   18f7c:	str	r4, [sp]
   18f80:	str	r4, [sp, #4]
   18f84:	str	r4, [sp, #8]
   18f88:	str	r4, [sp, #12]
   18f8c:	movw	r1, #54350	; 0xd44e
   18f90:	movt	r1, #3
   18f94:	mov	r2, r4
   18f98:	mov	r3, r4
   18f9c:	bl	14890 <fprintf@plt>
   18fa0:	ldr	r0, [r4, #204]	; 0xcc
   18fa4:	str	r4, [sp]
   18fa8:	str	r4, [sp, #4]
   18fac:	movw	r1, #54492	; 0xd4dc
   18fb0:	movt	r1, #3
   18fb4:	mov	r2, r4
   18fb8:	mov	r3, r4
   18fbc:	bl	14890 <fprintf@plt>
   18fc0:	ldr	r0, [r4, #204]	; 0xcc
   18fc4:	str	r4, [sp]
   18fc8:	str	r4, [sp, #4]
   18fcc:	str	r4, [sp, #8]
   18fd0:	str	r4, [sp, #12]
   18fd4:	str	r4, [sp, #16]
   18fd8:	movw	r1, #54589	; 0xd53d
   18fdc:	movt	r1, #3
   18fe0:	mov	r2, r4
   18fe4:	mov	r3, r4
   18fe8:	bl	14890 <fprintf@plt>
   18fec:	mov	r0, #0
   18ff0:	sub	sp, fp, #8
   18ff4:	pop	{r4, sl, fp, pc}

00018ff8 <__flatcc_fb_gen_common_c_builder_header@@Base>:
   18ff8:	push	{r4, r5, fp, lr}
   18ffc:	add	fp, sp, #8
   19000:	sub	sp, sp, #8
   19004:	mov	r5, r0
   19008:	ldr	r0, [r0, #204]	; 0xcc
   1900c:	add	r4, r5, #102	; 0x66
   19010:	movw	r1, #54708	; 0xd5b4
   19014:	movt	r1, #3
   19018:	mov	r2, r4
   1901c:	bl	14890 <fprintf@plt>
   19020:	ldr	r0, [r5, #204]	; 0xcc
   19024:	movw	r1, #54737	; 0xd5d1
   19028:	movt	r1, #3
   1902c:	mov	r2, r4
   19030:	bl	14890 <fprintf@plt>
   19034:	ldr	r3, [r5, #204]	; 0xcc
   19038:	movw	r0, #20710	; 0x50e6
   1903c:	movt	r0, #3
   19040:	mov	r1, #81	; 0x51
   19044:	mov	r2, #1
   19048:	bl	14830 <fwrite@plt>
   1904c:	ldr	r3, [r5, #204]	; 0xcc
   19050:	movw	r0, #54766	; 0xd5ee
   19054:	movt	r0, #3
   19058:	mov	r1, #53	; 0x35
   1905c:	mov	r2, #1
   19060:	bl	14830 <fwrite@plt>
   19064:	mov	r0, r5
   19068:	bl	19868 <__flatcc_fb_gen_common_c_builder_header@@Base+0x870>
   1906c:	ldr	r3, [r5, #204]	; 0xcc
   19070:	movw	r0, #54820	; 0xd624
   19074:	movt	r0, #3
   19078:	mov	r1, #22
   1907c:	mov	r2, #1
   19080:	bl	14830 <fwrite@plt>
   19084:	ldr	r3, [r5, #204]	; 0xcc
   19088:	movw	r0, #54843	; 0xd63b
   1908c:	movt	r0, #3
   19090:	mov	r1, #35	; 0x23
   19094:	mov	r2, #1
   19098:	bl	14830 <fwrite@plt>
   1909c:	ldr	r3, [r5, #204]	; 0xcc
   190a0:	movw	r0, #45806	; 0xb2ee
   190a4:	movt	r0, #3
   190a8:	mov	r1, #7
   190ac:	mov	r2, #1
   190b0:	bl	14830 <fwrite@plt>
   190b4:	movw	r1, #54879	; 0xd65f
   190b8:	movt	r1, #3
   190bc:	mov	r0, r5
   190c0:	bl	147c4 <strcmp@plt>
   190c4:	cmp	r0, #0
   190c8:	beq	19144 <__flatcc_fb_gen_common_c_builder_header@@Base+0x14c>
   190cc:	ldr	r0, [r5, #204]	; 0xcc
   190d0:	movw	r1, #54895	; 0xd66f
   190d4:	movt	r1, #3
   190d8:	mov	r2, r5
   190dc:	bl	14890 <fprintf@plt>
   190e0:	ldr	r0, [r5, #204]	; 0xcc
   190e4:	movw	r1, #54934	; 0xd696
   190e8:	movt	r1, #3
   190ec:	mov	r2, r5
   190f0:	bl	14890 <fprintf@plt>
   190f4:	ldr	r0, [r5, #204]	; 0xcc
   190f8:	movw	r1, #54973	; 0xd6bd
   190fc:	movt	r1, #3
   19100:	mov	r2, r5
   19104:	bl	14890 <fprintf@plt>
   19108:	ldr	r0, [r5, #204]	; 0xcc
   1910c:	movw	r1, #55016	; 0xd6e8
   19110:	movt	r1, #3
   19114:	mov	r2, r5
   19118:	bl	14890 <fprintf@plt>
   1911c:	ldr	r0, [r5, #204]	; 0xcc
   19120:	movw	r1, #55067	; 0xd71b
   19124:	movt	r1, #3
   19128:	mov	r2, r5
   1912c:	bl	14890 <fprintf@plt>
   19130:	ldr	r0, [r5, #204]	; 0xcc
   19134:	movw	r1, #55126	; 0xd756
   19138:	movt	r1, #3
   1913c:	mov	r2, r5
   19140:	bl	14890 <fprintf@plt>
   19144:	ldr	r0, [r5, #204]	; 0xcc
   19148:	movw	r1, #55214	; 0xd7ae
   1914c:	movt	r1, #3
   19150:	mov	r2, r5
   19154:	mov	r3, r5
   19158:	bl	14890 <fprintf@plt>
   1915c:	ldr	r0, [r5, #204]	; 0xcc
   19160:	movw	r1, #55241	; 0xd7c9
   19164:	movt	r1, #3
   19168:	mov	r2, r5
   1916c:	mov	r3, r5
   19170:	bl	14890 <fprintf@plt>
   19174:	movw	r1, #21265	; 0x5311
   19178:	movt	r1, #3
   1917c:	mov	r0, r5
   19180:	bl	147c4 <strcmp@plt>
   19184:	cmp	r0, #0
   19188:	beq	191b4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x1bc>
   1918c:	ldr	r0, [r5, #204]	; 0xcc
   19190:	movw	r1, #55280	; 0xd7f0
   19194:	movt	r1, #3
   19198:	mov	r2, r5
   1919c:	bl	14890 <fprintf@plt>
   191a0:	ldr	r0, [r5, #204]	; 0xcc
   191a4:	movw	r1, #55329	; 0xd821
   191a8:	movt	r1, #3
   191ac:	mov	r2, r5
   191b0:	bl	14890 <fprintf@plt>
   191b4:	ldr	r1, [r5, #204]	; 0xcc
   191b8:	mov	r0, #10
   191bc:	bl	148f0 <fputc@plt>
   191c0:	ldr	r0, [r5, #204]	; 0xcc
   191c4:	movw	r1, #55365	; 0xd845
   191c8:	movt	r1, #3
   191cc:	mov	r2, r5
   191d0:	bl	14890 <fprintf@plt>
   191d4:	ldr	r0, [r5, #204]	; 0xcc
   191d8:	movw	r1, #56248	; 0xdbb8
   191dc:	movt	r1, #3
   191e0:	mov	r2, r5
   191e4:	bl	14890 <fprintf@plt>
   191e8:	ldr	r0, [r5, #204]	; 0xcc
   191ec:	str	r5, [sp]
   191f0:	movw	r1, #57985	; 0xe281
   191f4:	movt	r1, #3
   191f8:	mov	r2, r5
   191fc:	mov	r3, r5
   19200:	bl	14890 <fprintf@plt>
   19204:	ldr	r0, [r5, #204]	; 0xcc
   19208:	movw	r1, #58122	; 0xe30a
   1920c:	movt	r1, #3
   19210:	mov	r2, r5
   19214:	bl	14890 <fprintf@plt>
   19218:	ldr	r0, [r5, #204]	; 0xcc
   1921c:	movw	r1, #60869	; 0xedc5
   19220:	movt	r1, #3
   19224:	mov	r2, r5
   19228:	bl	14890 <fprintf@plt>
   1922c:	ldr	r0, [r5, #204]	; 0xcc
   19230:	movw	r1, #61856	; 0xf1a0
   19234:	movt	r1, #3
   19238:	mov	r2, r5
   1923c:	bl	14890 <fprintf@plt>
   19240:	ldr	r0, [r5, #204]	; 0xcc
   19244:	movw	r1, #63446	; 0xf7d6
   19248:	movt	r1, #3
   1924c:	mov	r2, r5
   19250:	bl	14890 <fprintf@plt>
   19254:	ldr	r0, [r5, #204]	; 0xcc
   19258:	movw	r1, #64594	; 0xfc52
   1925c:	movt	r1, #3
   19260:	mov	r2, r5
   19264:	mov	r3, r5
   19268:	bl	14890 <fprintf@plt>
   1926c:	ldr	r0, [r5, #204]	; 0xcc
   19270:	str	r5, [sp]
   19274:	movw	r1, #965	; 0x3c5
   19278:	movt	r1, #4
   1927c:	mov	r2, r5
   19280:	mov	r3, r5
   19284:	bl	14890 <fprintf@plt>
   19288:	ldr	r0, [r5, #204]	; 0xcc
   1928c:	movw	r1, #2317	; 0x90d
   19290:	movt	r1, #4
   19294:	mov	r2, r5
   19298:	bl	14890 <fprintf@plt>
   1929c:	ldr	r0, [r5, #204]	; 0xcc
   192a0:	movw	r1, #3467	; 0xd8b
   192a4:	movt	r1, #4
   192a8:	mov	r2, r5
   192ac:	bl	14890 <fprintf@plt>
   192b0:	ldr	r0, [r5, #204]	; 0xcc
   192b4:	movw	r1, #3865	; 0xf19
   192b8:	movt	r1, #4
   192bc:	mov	r2, r5
   192c0:	bl	14890 <fprintf@plt>
   192c4:	ldr	r0, [r5, #204]	; 0xcc
   192c8:	movw	r1, #4723	; 0x1273
   192cc:	movt	r1, #4
   192d0:	mov	r2, r5
   192d4:	mov	r3, r5
   192d8:	bl	14890 <fprintf@plt>
   192dc:	ldr	r0, [r5, #204]	; 0xcc
   192e0:	movw	r1, #5240	; 0x1478
   192e4:	movt	r1, #4
   192e8:	mov	r2, r5
   192ec:	bl	14890 <fprintf@plt>
   192f0:	ldr	r0, [r5, #204]	; 0xcc
   192f4:	str	r5, [sp]
   192f8:	movw	r1, #6113	; 0x17e1
   192fc:	movt	r1, #4
   19300:	mov	r2, r5
   19304:	mov	r3, r5
   19308:	bl	14890 <fprintf@plt>
   1930c:	ldr	r0, [r5, #204]	; 0xcc
   19310:	str	r5, [sp]
   19314:	str	r5, [sp, #4]
   19318:	movw	r1, #7389	; 0x1cdd
   1931c:	movt	r1, #4
   19320:	mov	r2, r5
   19324:	mov	r3, r5
   19328:	bl	14890 <fprintf@plt>
   1932c:	ldr	r0, [r5, #204]	; 0xcc
   19330:	movw	r1, #7654	; 0x1de6
   19334:	movt	r1, #4
   19338:	mov	r2, r5
   1933c:	mov	r3, r5
   19340:	bl	14890 <fprintf@plt>
   19344:	ldr	r0, [r5, #204]	; 0xcc
   19348:	str	r5, [sp]
   1934c:	str	r5, [sp, #4]
   19350:	movw	r1, #8526	; 0x214e
   19354:	movt	r1, #4
   19358:	mov	r2, r5
   1935c:	mov	r3, r5
   19360:	bl	14890 <fprintf@plt>
   19364:	ldr	r0, [r5, #204]	; 0xcc
   19368:	movw	r1, #10060	; 0x274c
   1936c:	movt	r1, #4
   19370:	mov	r2, r5
   19374:	mov	r3, r5
   19378:	bl	14890 <fprintf@plt>
   1937c:	ldr	r0, [r5, #204]	; 0xcc
   19380:	movw	r1, #10495	; 0x28ff
   19384:	movt	r1, #4
   19388:	mov	r2, r5
   1938c:	bl	14890 <fprintf@plt>
   19390:	ldr	r0, [r5, #204]	; 0xcc
   19394:	movw	r1, #11044	; 0x2b24
   19398:	movt	r1, #4
   1939c:	mov	r2, r5
   193a0:	bl	14890 <fprintf@plt>
   193a4:	ldr	r0, [r5, #204]	; 0xcc
   193a8:	movw	r1, #12004	; 0x2ee4
   193ac:	movt	r1, #4
   193b0:	mov	r2, r5
   193b4:	bl	14890 <fprintf@plt>
   193b8:	ldr	r0, [r5, #204]	; 0xcc
   193bc:	movw	r1, #12705	; 0x31a1
   193c0:	movt	r1, #4
   193c4:	mov	r2, r5
   193c8:	bl	14890 <fprintf@plt>
   193cc:	ldr	r0, [r5, #204]	; 0xcc
   193d0:	movw	r1, #13749	; 0x35b5
   193d4:	movt	r1, #4
   193d8:	mov	r2, r5
   193dc:	mov	r3, r5
   193e0:	bl	14890 <fprintf@plt>
   193e4:	ldr	r0, [r5, #204]	; 0xcc
   193e8:	movw	r1, #13985	; 0x36a1
   193ec:	movt	r1, #4
   193f0:	mov	r2, r5
   193f4:	bl	14890 <fprintf@plt>
   193f8:	ldr	r0, [r5, #204]	; 0xcc
   193fc:	movw	r1, #14594	; 0x3902
   19400:	movt	r1, #4
   19404:	mov	r2, r5
   19408:	bl	14890 <fprintf@plt>
   1940c:	ldr	r0, [r5, #204]	; 0xcc
   19410:	movw	r1, #15481	; 0x3c79
   19414:	movt	r1, #4
   19418:	mov	r2, r5
   1941c:	mov	r3, r5
   19420:	bl	14890 <fprintf@plt>
   19424:	ldr	r0, [r5, #204]	; 0xcc
   19428:	movw	r1, #16584	; 0x40c8
   1942c:	movt	r1, #4
   19430:	mov	r2, r5
   19434:	mov	r3, r5
   19438:	bl	14890 <fprintf@plt>
   1943c:	ldr	r0, [r5, #204]	; 0xcc
   19440:	movw	r1, #17248	; 0x4360
   19444:	movt	r1, #4
   19448:	mov	r2, r5
   1944c:	mov	r3, r5
   19450:	bl	14890 <fprintf@plt>
   19454:	ldr	r0, [r5, #204]	; 0xcc
   19458:	movw	r1, #18268	; 0x475c
   1945c:	movt	r1, #4
   19460:	mov	r2, r5
   19464:	mov	r3, r5
   19468:	bl	14890 <fprintf@plt>
   1946c:	ldr	r0, [r5, #204]	; 0xcc
   19470:	str	r5, [sp]
   19474:	movw	r1, #18536	; 0x4868
   19478:	movt	r1, #4
   1947c:	mov	r2, r5
   19480:	mov	r3, r5
   19484:	bl	14890 <fprintf@plt>
   19488:	ldr	r0, [r5, #204]	; 0xcc
   1948c:	movw	r1, #18675	; 0x48f3
   19490:	movt	r1, #4
   19494:	mov	r2, r5
   19498:	mov	r3, r5
   1949c:	bl	14890 <fprintf@plt>
   194a0:	ldr	r0, [r5, #204]	; 0xcc
   194a4:	movw	r1, #19519	; 0x4c3f
   194a8:	movt	r1, #4
   194ac:	mov	r2, r5
   194b0:	bl	14890 <fprintf@plt>
   194b4:	ldr	r0, [r5, #204]	; 0xcc
   194b8:	movw	r1, #20167	; 0x4ec7
   194bc:	movt	r1, #4
   194c0:	mov	r2, r5
   194c4:	bl	14890 <fprintf@plt>
   194c8:	ldr	r0, [r5, #204]	; 0xcc
   194cc:	movw	r1, #20821	; 0x5155
   194d0:	movt	r1, #4
   194d4:	mov	r2, r5
   194d8:	bl	14890 <fprintf@plt>
   194dc:	ldr	r0, [r5, #204]	; 0xcc
   194e0:	str	r5, [sp]
   194e4:	movw	r1, #22283	; 0x570b
   194e8:	movt	r1, #4
   194ec:	mov	r2, r5
   194f0:	mov	r3, r5
   194f4:	bl	14890 <fprintf@plt>
   194f8:	ldr	r0, [r5, #204]	; 0xcc
   194fc:	movw	r1, #22426	; 0x579a
   19500:	movt	r1, #4
   19504:	mov	r2, r5
   19508:	bl	14890 <fprintf@plt>
   1950c:	ldr	r0, [r5, #204]	; 0xcc
   19510:	movw	r1, #22470	; 0x57c6
   19514:	movt	r1, #4
   19518:	mov	r2, r5
   1951c:	bl	14890 <fprintf@plt>
   19520:	ldr	r0, [r5, #204]	; 0xcc
   19524:	movw	r1, #22504	; 0x57e8
   19528:	movt	r1, #4
   1952c:	mov	r2, r5
   19530:	bl	14890 <fprintf@plt>
   19534:	ldr	r0, [r5, #204]	; 0xcc
   19538:	movw	r1, #22546	; 0x5812
   1953c:	movt	r1, #4
   19540:	mov	r2, r5
   19544:	bl	14890 <fprintf@plt>
   19548:	ldr	r0, [r5, #204]	; 0xcc
   1954c:	movw	r1, #22579	; 0x5833
   19550:	movt	r1, #4
   19554:	mov	r2, r5
   19558:	mov	r3, r5
   1955c:	bl	14890 <fprintf@plt>
   19560:	ldr	r0, [r5, #204]	; 0xcc
   19564:	movw	r1, #22623	; 0x585f
   19568:	movt	r1, #4
   1956c:	mov	r2, r5
   19570:	bl	14890 <fprintf@plt>
   19574:	ldr	r0, [r5, #204]	; 0xcc
   19578:	movw	r1, #22656	; 0x5880
   1957c:	movt	r1, #4
   19580:	mov	r2, r5
   19584:	bl	14890 <fprintf@plt>
   19588:	ldr	r0, [r5, #204]	; 0xcc
   1958c:	movw	r1, #22702	; 0x58ae
   19590:	movt	r1, #4
   19594:	mov	r2, r5
   19598:	bl	14890 <fprintf@plt>
   1959c:	ldr	r0, [r5, #204]	; 0xcc
   195a0:	movw	r1, #22737	; 0x58d1
   195a4:	movt	r1, #4
   195a8:	mov	r2, r5
   195ac:	bl	14890 <fprintf@plt>
   195b0:	ldr	r0, [r5, #204]	; 0xcc
   195b4:	movw	r1, #22783	; 0x58ff
   195b8:	movt	r1, #4
   195bc:	mov	r2, r5
   195c0:	bl	14890 <fprintf@plt>
   195c4:	ldr	r0, [r5, #204]	; 0xcc
   195c8:	movw	r1, #22818	; 0x5922
   195cc:	movt	r1, #4
   195d0:	mov	r2, r5
   195d4:	bl	14890 <fprintf@plt>
   195d8:	ldr	r0, [r5, #204]	; 0xcc
   195dc:	movw	r1, #22864	; 0x5950
   195e0:	movt	r1, #4
   195e4:	mov	r2, r5
   195e8:	bl	14890 <fprintf@plt>
   195ec:	ldr	r0, [r5, #204]	; 0xcc
   195f0:	movw	r1, #22899	; 0x5973
   195f4:	movt	r1, #4
   195f8:	mov	r2, r5
   195fc:	bl	14890 <fprintf@plt>
   19600:	ldr	r0, [r5, #204]	; 0xcc
   19604:	movw	r1, #22943	; 0x599f
   19608:	movt	r1, #4
   1960c:	mov	r2, r5
   19610:	bl	14890 <fprintf@plt>
   19614:	ldr	r0, [r5, #204]	; 0xcc
   19618:	movw	r1, #22977	; 0x59c1
   1961c:	movt	r1, #4
   19620:	mov	r2, r5
   19624:	bl	14890 <fprintf@plt>
   19628:	ldr	r0, [r5, #204]	; 0xcc
   1962c:	movw	r1, #23021	; 0x59ed
   19630:	movt	r1, #4
   19634:	mov	r2, r5
   19638:	bl	14890 <fprintf@plt>
   1963c:	ldr	r0, [r5, #204]	; 0xcc
   19640:	movw	r1, #23055	; 0x5a0f
   19644:	movt	r1, #4
   19648:	mov	r2, r5
   1964c:	bl	14890 <fprintf@plt>
   19650:	ldr	r0, [r5, #204]	; 0xcc
   19654:	movw	r1, #23099	; 0x5a3b
   19658:	movt	r1, #4
   1965c:	mov	r2, r5
   19660:	bl	14890 <fprintf@plt>
   19664:	ldr	r0, [r5, #204]	; 0xcc
   19668:	movw	r1, #23133	; 0x5a5d
   1966c:	movt	r1, #4
   19670:	mov	r2, r5
   19674:	bl	14890 <fprintf@plt>
   19678:	ldr	r0, [r5, #204]	; 0xcc
   1967c:	movw	r1, #23175	; 0x5a87
   19680:	movt	r1, #4
   19684:	mov	r2, r5
   19688:	bl	14890 <fprintf@plt>
   1968c:	ldr	r0, [r5, #204]	; 0xcc
   19690:	movw	r1, #23209	; 0x5aa9
   19694:	movt	r1, #4
   19698:	mov	r2, r5
   1969c:	bl	14890 <fprintf@plt>
   196a0:	ldr	r0, [r5, #204]	; 0xcc
   196a4:	movw	r1, #23253	; 0x5ad5
   196a8:	movt	r1, #4
   196ac:	mov	r2, r5
   196b0:	bl	14890 <fprintf@plt>
   196b4:	ldr	r1, [r5, #204]	; 0xcc
   196b8:	mov	r0, #10
   196bc:	bl	148f0 <fputc@plt>
   196c0:	ldr	r0, [r5, #204]	; 0xcc
   196c4:	str	r5, [sp]
   196c8:	movw	r1, #23288	; 0x5af8
   196cc:	movt	r1, #4
   196d0:	mov	r2, r5
   196d4:	mov	r3, r5
   196d8:	bl	14890 <fprintf@plt>
   196dc:	ldr	r0, [r5, #204]	; 0xcc
   196e0:	str	r5, [sp]
   196e4:	movw	r1, #23328	; 0x5b20
   196e8:	movt	r1, #4
   196ec:	mov	r2, r5
   196f0:	mov	r3, r5
   196f4:	bl	14890 <fprintf@plt>
   196f8:	ldr	r0, [r5, #204]	; 0xcc
   196fc:	str	r5, [sp]
   19700:	str	r5, [sp, #4]
   19704:	movw	r1, #23366	; 0x5b46
   19708:	movt	r1, #4
   1970c:	mov	r2, r5
   19710:	mov	r3, r5
   19714:	bl	14890 <fprintf@plt>
   19718:	ldr	r0, [r5, #204]	; 0xcc
   1971c:	str	r5, [sp]
   19720:	movw	r1, #23406	; 0x5b6e
   19724:	movt	r1, #4
   19728:	mov	r2, r5
   1972c:	mov	r3, r5
   19730:	bl	14890 <fprintf@plt>
   19734:	ldr	r0, [r5, #204]	; 0xcc
   19738:	str	r5, [sp]
   1973c:	movw	r1, #23448	; 0x5b98
   19740:	movt	r1, #4
   19744:	mov	r2, r5
   19748:	mov	r3, r5
   1974c:	bl	14890 <fprintf@plt>
   19750:	ldr	r0, [r5, #204]	; 0xcc
   19754:	str	r5, [sp]
   19758:	movw	r1, #23490	; 0x5bc2
   1975c:	movt	r1, #4
   19760:	mov	r2, r5
   19764:	mov	r3, r5
   19768:	bl	14890 <fprintf@plt>
   1976c:	ldr	r0, [r5, #204]	; 0xcc
   19770:	str	r5, [sp]
   19774:	movw	r1, #23532	; 0x5bec
   19778:	movt	r1, #4
   1977c:	mov	r2, r5
   19780:	mov	r3, r5
   19784:	bl	14890 <fprintf@plt>
   19788:	ldr	r0, [r5, #204]	; 0xcc
   1978c:	str	r5, [sp]
   19790:	movw	r1, #23572	; 0x5c14
   19794:	movt	r1, #4
   19798:	mov	r2, r5
   1979c:	mov	r3, r5
   197a0:	bl	14890 <fprintf@plt>
   197a4:	ldr	r0, [r5, #204]	; 0xcc
   197a8:	str	r5, [sp]
   197ac:	movw	r1, #23612	; 0x5c3c
   197b0:	movt	r1, #4
   197b4:	mov	r2, r5
   197b8:	mov	r3, r5
   197bc:	bl	14890 <fprintf@plt>
   197c0:	ldr	r0, [r5, #204]	; 0xcc
   197c4:	str	r5, [sp]
   197c8:	movw	r1, #23652	; 0x5c64
   197cc:	movt	r1, #4
   197d0:	mov	r2, r5
   197d4:	mov	r3, r5
   197d8:	bl	14890 <fprintf@plt>
   197dc:	ldr	r0, [r5, #204]	; 0xcc
   197e0:	str	r5, [sp]
   197e4:	movw	r1, #23690	; 0x5c8a
   197e8:	movt	r1, #4
   197ec:	mov	r2, r5
   197f0:	mov	r3, r5
   197f4:	bl	14890 <fprintf@plt>
   197f8:	ldr	r1, [r5, #204]	; 0xcc
   197fc:	mov	r0, #10
   19800:	bl	148f0 <fputc@plt>
   19804:	ldr	r0, [r5, #204]	; 0xcc
   19808:	movw	r1, #23730	; 0x5cb2
   1980c:	movt	r1, #4
   19810:	mov	r2, r5
   19814:	mov	r3, r5
   19818:	bl	14890 <fprintf@plt>
   1981c:	ldr	r1, [r5, #204]	; 0xcc
   19820:	mov	r0, #10
   19824:	bl	148f0 <fputc@plt>
   19828:	ldr	r0, [r5, #204]	; 0xcc
   1982c:	movw	r1, #23752	; 0x5cc8
   19830:	movt	r1, #4
   19834:	mov	r2, r5
   19838:	mov	r3, r5
   1983c:	bl	14890 <fprintf@plt>
   19840:	mov	r0, r5
   19844:	bl	19890 <__flatcc_fb_gen_common_c_builder_header@@Base+0x898>
   19848:	ldr	r0, [r5, #204]	; 0xcc
   1984c:	movw	r1, #23774	; 0x5cde
   19850:	movt	r1, #4
   19854:	mov	r2, r4
   19858:	bl	14890 <fprintf@plt>
   1985c:	mov	r0, #0
   19860:	sub	sp, fp, #8
   19864:	pop	{r4, r5, fp, pc}
   19868:	ldr	r1, [r0, #212]	; 0xd4
   1986c:	ldr	r1, [r1, #140]	; 0x8c
   19870:	cmp	r1, #0
   19874:	bxeq	lr
   19878:	ldr	r3, [r0, #204]	; 0xcc
   1987c:	movw	r0, #21186	; 0x52c2
   19880:	movt	r0, #3
   19884:	mov	r1, #36	; 0x24
   19888:	mov	r2, #1
   1988c:	b	14830 <fwrite@plt>
   19890:	ldr	r1, [r0, #212]	; 0xd4
   19894:	ldr	r1, [r1, #140]	; 0x8c
   19898:	cmp	r1, #0
   1989c:	bxeq	lr
   198a0:	ldr	r3, [r0, #204]	; 0xcc
   198a4:	movw	r0, #45228	; 0xb0ac
   198a8:	movt	r0, #3
   198ac:	mov	r1, #36	; 0x24
   198b0:	mov	r2, #1
   198b4:	b	14830 <fwrite@plt>

000198b8 <__flatcc_fb_gen_c_builder@@Base>:
   198b8:	push	{r4, sl, fp, lr}
   198bc:	add	fp, sp, #8
   198c0:	mov	r4, r0
   198c4:	bl	198f0 <__flatcc_fb_gen_c_builder@@Base+0x38>
   198c8:	mov	r0, r4
   198cc:	bl	19a7c <__flatcc_fb_gen_c_builder@@Base+0x1c4>
   198d0:	mov	r0, r4
   198d4:	bl	19b3c <__flatcc_fb_gen_c_builder@@Base+0x284>
   198d8:	mov	r0, r4
   198dc:	bl	19b7c <__flatcc_fb_gen_c_builder@@Base+0x2c4>
   198e0:	mov	r0, r4
   198e4:	bl	19c98 <__flatcc_fb_gen_c_builder@@Base+0x3e0>
   198e8:	mov	r0, #0
   198ec:	pop	{r4, sl, fp, pc}
   198f0:	push	{r4, r5, fp, lr}
   198f4:	add	fp, sp, #8
   198f8:	sub	sp, sp, #8
   198fc:	mov	r4, r0
   19900:	ldr	r0, [r0, #204]	; 0xcc
   19904:	ldr	r1, [r4, #208]	; 0xd0
   19908:	ldr	r2, [r1, #164]	; 0xa4
   1990c:	movw	r1, #23808	; 0x5d00
   19910:	movt	r1, #4
   19914:	mov	r3, r2
   19918:	bl	14890 <fprintf@plt>
   1991c:	ldr	r3, [r4, #204]	; 0xcc
   19920:	movw	r0, #20710	; 0x50e6
   19924:	movt	r0, #3
   19928:	mov	r1, #81	; 0x51
   1992c:	mov	r2, #1
   19930:	bl	14830 <fwrite@plt>
   19934:	ldr	r0, [r4, #204]	; 0xcc
   19938:	ldr	r1, [r4, #208]	; 0xd0
   1993c:	ldr	r2, [r1, #164]	; 0xa4
   19940:	movw	r1, #23851	; 0x5d2b
   19944:	movt	r1, #4
   19948:	bl	14890 <fprintf@plt>
   1994c:	ldr	r0, [r4, #204]	; 0xcc
   19950:	ldr	r1, [r4, #208]	; 0xd0
   19954:	ldr	r2, [r1, #160]	; 0xa0
   19958:	movw	r1, #23872	; 0x5d40
   1995c:	movt	r1, #4
   19960:	bl	14890 <fprintf@plt>
   19964:	ldr	r3, [r4, #204]	; 0xcc
   19968:	movw	r5, #45806	; 0xb2ee
   1996c:	movt	r5, #3
   19970:	mov	r0, r5
   19974:	mov	r1, #7
   19978:	mov	r2, #1
   1997c:	bl	14830 <fwrite@plt>
   19980:	ldr	r0, [r4, #204]	; 0xcc
   19984:	add	r2, r4, #102	; 0x66
   19988:	movw	r1, #54708	; 0xd5b4
   1998c:	movt	r1, #3
   19990:	bl	14890 <fprintf@plt>
   19994:	ldr	r0, [r4, #204]	; 0xcc
   19998:	movw	r1, #23896	; 0x5d58
   1999c:	movt	r1, #4
   199a0:	mov	r2, r4
   199a4:	bl	14890 <fprintf@plt>
   199a8:	ldr	r3, [r4, #204]	; 0xcc
   199ac:	mov	r0, r5
   199b0:	mov	r1, #7
   199b4:	mov	r2, #1
   199b8:	bl	14830 <fwrite@plt>
   199bc:	movw	r1, #47817	; 0xbac9
   199c0:	movt	r1, #4
   199c4:	movw	r2, #23927	; 0x5d77
   199c8:	movt	r2, #4
   199cc:	mov	r0, r4
   199d0:	bl	1598c <__flatcc_fb_gen_c_includes@@Base>
   199d4:	mov	r0, r4
   199d8:	bl	19868 <__flatcc_fb_gen_common_c_builder_header@@Base+0x870>
   199dc:	ldr	r0, [r4, #204]	; 0xcc
   199e0:	ldr	r1, [r4, #208]	; 0xd0
   199e4:	ldrh	r2, [r1, #16]
   199e8:	cmp	r2, #2
   199ec:	bne	19a08 <__flatcc_fb_gen_c_builder@@Base+0x150>
   199f0:	ldrd	r2, [r1, #8]
   199f4:	str	r3, [sp]
   199f8:	str	r2, [sp, #4]
   199fc:	movw	r1, #45923	; 0xb363
   19a00:	movt	r1, #3
   19a04:	b	19a10 <__flatcc_fb_gen_c_builder@@Base+0x158>
   19a08:	movw	r1, #45972	; 0xb394
   19a0c:	movt	r1, #3
   19a10:	mov	r2, r4
   19a14:	mov	r3, r4
   19a18:	bl	14890 <fprintf@plt>
   19a1c:	ldr	r0, [r4, #204]	; 0xcc
   19a20:	ldr	r1, [r4, #208]	; 0xd0
   19a24:	ldrh	r2, [r1, #32]
   19a28:	cmp	r2, #2
   19a2c:	bne	19a48 <__flatcc_fb_gen_c_builder@@Base+0x190>
   19a30:	ldrd	r2, [r1, #24]
   19a34:	str	r3, [sp]
   19a38:	str	r2, [sp, #4]
   19a3c:	movw	r1, #46024	; 0xb3c8
   19a40:	movt	r1, #3
   19a44:	b	19a5c <__flatcc_fb_gen_c_builder@@Base+0x1a4>
   19a48:	ldr	r1, [r4, #212]	; 0xd4
   19a4c:	ldr	r1, [r1, #104]	; 0x68
   19a50:	str	r1, [sp]
   19a54:	movw	r1, #46072	; 0xb3f8
   19a58:	movt	r1, #3
   19a5c:	mov	r2, r4
   19a60:	mov	r3, r4
   19a64:	bl	14890 <fprintf@plt>
   19a68:	ldr	r1, [r4, #204]	; 0xcc
   19a6c:	mov	r0, #10
   19a70:	sub	sp, fp, #8
   19a74:	pop	{r4, r5, fp, lr}
   19a78:	b	148f0 <fputc@plt>
   19a7c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   19a80:	add	fp, sp, #24
   19a84:	sub	sp, sp, #232	; 0xe8
   19a88:	mov	r4, r0
   19a8c:	add	r5, sp, #8
   19a90:	mov	r7, #0
   19a94:	mov	r0, r5
   19a98:	mov	r1, #0
   19a9c:	mov	r2, #220	; 0xdc
   19aa0:	bl	148a8 <memset@plt>
   19aa4:	ldr	r0, [r4, #208]	; 0xd0
   19aa8:	ldr	r6, [r0, #40]	; 0x28
   19aac:	cmp	r6, #0
   19ab0:	beq	19b34 <__flatcc_fb_gen_c_builder@@Base+0x27c>
   19ab4:	movw	r8, #23938	; 0x5d82
   19ab8:	movt	r8, #4
   19abc:	movw	r9, #24007	; 0x5dc7
   19ac0:	movt	r9, #4
   19ac4:	ldrh	r0, [r6, #8]
   19ac8:	cmp	r0, #3
   19acc:	bne	19b14 <__flatcc_fb_gen_c_builder@@Base+0x25c>
   19ad0:	mov	r0, r6
   19ad4:	mov	r1, r5
   19ad8:	bl	19cc4 <__flatcc_fb_gen_c_builder@@Base+0x40c>
   19adc:	ldr	r0, [r4, #204]	; 0xcc
   19ae0:	str	r5, [sp]
   19ae4:	mov	r1, r8
   19ae8:	mov	r2, r5
   19aec:	mov	r3, r5
   19af0:	bl	14890 <fprintf@plt>
   19af4:	ldr	r0, [r4, #204]	; 0xcc
   19af8:	str	r5, [sp]
   19afc:	str	r5, [sp, #4]
   19b00:	mov	r1, r9
   19b04:	mov	r2, r4
   19b08:	mov	r3, r4
   19b0c:	bl	14890 <fprintf@plt>
   19b10:	mov	r7, #1
   19b14:	ldr	r6, [r6]
   19b18:	cmp	r6, #0
   19b1c:	bne	19ac4 <__flatcc_fb_gen_c_builder@@Base+0x20c>
   19b20:	cmp	r7, #0
   19b24:	beq	19b34 <__flatcc_fb_gen_c_builder@@Base+0x27c>
   19b28:	ldr	r1, [r4, #204]	; 0xcc
   19b2c:	mov	r0, #10
   19b30:	bl	148f0 <fputc@plt>
   19b34:	sub	sp, fp, #24
   19b38:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19b3c:	push	{r4, r5, fp, lr}
   19b40:	add	fp, sp, #8
   19b44:	mov	r4, r0
   19b48:	ldr	r0, [r0, #208]	; 0xd0
   19b4c:	ldr	r5, [r0, #44]	; 0x2c
   19b50:	b	19b70 <__flatcc_fb_gen_c_builder@@Base+0x2b8>
   19b54:	mov	r0, r4
   19b58:	mov	r1, r5
   19b5c:	bl	19cd4 <__flatcc_fb_gen_c_builder@@Base+0x41c>
   19b60:	ldr	r1, [r4, #204]	; 0xcc
   19b64:	mov	r0, #10
   19b68:	bl	148f0 <fputc@plt>
   19b6c:	ldr	r5, [r5, #120]	; 0x78
   19b70:	cmp	r5, #0
   19b74:	popeq	{r4, r5, fp, pc}
   19b78:	b	19b54 <__flatcc_fb_gen_c_builder@@Base+0x29c>
   19b7c:	push	{r4, r5, r6, sl, fp, lr}
   19b80:	add	fp, sp, #16
   19b84:	mov	r4, r0
   19b88:	bl	1a8b0 <__flatcc_fb_gen_c_builder@@Base+0xff8>
   19b8c:	ldr	r0, [r4, #208]	; 0xd0
   19b90:	ldr	r5, [r0, #40]	; 0x28
   19b94:	mov	r6, #0
   19b98:	cmp	r5, #0
   19b9c:	bne	19bb0 <__flatcc_fb_gen_c_builder@@Base+0x2f8>
   19ba0:	b	19bdc <__flatcc_fb_gen_c_builder@@Base+0x324>
   19ba4:	ldr	r5, [r5]
   19ba8:	cmp	r5, #0
   19bac:	beq	19bdc <__flatcc_fb_gen_c_builder@@Base+0x324>
   19bb0:	ldrh	r0, [r5, #8]
   19bb4:	cmp	r0, #0
   19bb8:	bne	19ba4 <__flatcc_fb_gen_c_builder@@Base+0x2ec>
   19bbc:	mov	r0, r4
   19bc0:	mov	r1, r5
   19bc4:	bl	1a94c <__flatcc_fb_gen_c_builder@@Base+0x1094>
   19bc8:	mov	r0, r4
   19bcc:	mov	r1, r5
   19bd0:	bl	1aa54 <__flatcc_fb_gen_c_builder@@Base+0x119c>
   19bd4:	mov	r6, #1
   19bd8:	b	19ba4 <__flatcc_fb_gen_c_builder@@Base+0x2ec>
   19bdc:	ldr	r0, [r4, #208]	; 0xd0
   19be0:	ldr	r5, [r0, #40]	; 0x28
   19be4:	cmp	r5, #0
   19be8:	bne	19bfc <__flatcc_fb_gen_c_builder@@Base+0x344>
   19bec:	b	19c18 <__flatcc_fb_gen_c_builder@@Base+0x360>
   19bf0:	ldr	r5, [r5]
   19bf4:	cmp	r5, #0
   19bf8:	beq	19c18 <__flatcc_fb_gen_c_builder@@Base+0x360>
   19bfc:	ldrh	r0, [r5, #8]
   19c00:	cmp	r0, #0
   19c04:	bne	19bf0 <__flatcc_fb_gen_c_builder@@Base+0x338>
   19c08:	mov	r0, r4
   19c0c:	mov	r1, r5
   19c10:	bl	1aab8 <__flatcc_fb_gen_c_builder@@Base+0x1200>
   19c14:	b	19bf0 <__flatcc_fb_gen_c_builder@@Base+0x338>
   19c18:	cmp	r6, #0
   19c1c:	beq	19c8c <__flatcc_fb_gen_c_builder@@Base+0x3d4>
   19c20:	ldr	r1, [r4, #204]	; 0xcc
   19c24:	mov	r0, #10
   19c28:	bl	148f0 <fputc@plt>
   19c2c:	mov	r0, r4
   19c30:	bl	1ab74 <__flatcc_fb_gen_c_builder@@Base+0x12bc>
   19c34:	ldr	r0, [r4, #208]	; 0xd0
   19c38:	ldr	r5, [r0, #40]	; 0x28
   19c3c:	b	19c44 <__flatcc_fb_gen_c_builder@@Base+0x38c>
   19c40:	ldr	r5, [r5]
   19c44:	cmp	r5, #0
   19c48:	popeq	{r4, r5, r6, sl, fp, pc}
   19c4c:	ldrh	r0, [r5, #8]
   19c50:	cmp	r0, #0
   19c54:	bne	19c40 <__flatcc_fb_gen_c_builder@@Base+0x388>
   19c58:	mov	r0, r4
   19c5c:	mov	r1, r5
   19c60:	bl	1abd8 <__flatcc_fb_gen_c_builder@@Base+0x1320>
   19c64:	mov	r0, r4
   19c68:	mov	r1, r5
   19c6c:	bl	1b318 <__flatcc_fb_gen_c_builder@@Base+0x1a60>
   19c70:	mov	r0, r4
   19c74:	mov	r1, r5
   19c78:	bl	1b528 <__flatcc_fb_gen_c_builder@@Base+0x1c70>
   19c7c:	ldr	r1, [r4, #204]	; 0xcc
   19c80:	mov	r0, #10
   19c84:	bl	148f0 <fputc@plt>
   19c88:	b	19c40 <__flatcc_fb_gen_c_builder@@Base+0x388>
   19c8c:	mov	r0, r4
   19c90:	pop	{r4, r5, r6, sl, fp, lr}
   19c94:	b	1ab74 <__flatcc_fb_gen_c_builder@@Base+0x12bc>
   19c98:	push	{r4, sl, fp, lr}
   19c9c:	add	fp, sp, #8
   19ca0:	mov	r4, r0
   19ca4:	bl	19890 <__flatcc_fb_gen_common_c_builder_header@@Base+0x898>
   19ca8:	ldr	r0, [r4, #204]	; 0xcc
   19cac:	ldr	r1, [r4, #208]	; 0xd0
   19cb0:	ldr	r2, [r1, #164]	; 0xa4
   19cb4:	movw	r1, #28032	; 0x6d80
   19cb8:	movt	r1, #4
   19cbc:	pop	{r4, sl, fp, lr}
   19cc0:	b	14890 <fprintf@plt>
   19cc4:	mov	r2, r1
   19cc8:	mov	r1, r0
   19ccc:	ldr	r0, [r0, #12]
   19cd0:	b	15b70 <__flatcc_fb_scoped_symbol_name@@Base>
   19cd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19cd8:	add	fp, sp, #28
   19cdc:	sub	sp, sp, #260	; 0x104
   19ce0:	mov	r6, r1
   19ce4:	mov	r4, r0
   19ce8:	add	r5, sp, #32
   19cec:	mov	r9, #0
   19cf0:	mov	r0, r5
   19cf4:	mov	r1, #0
   19cf8:	mov	r2, #220	; 0xdc
   19cfc:	bl	148a8 <memset@plt>
   19d00:	ldrh	r0, [r6, #8]
   19d04:	cmp	r0, #1
   19d08:	bne	1a078 <__flatcc_fb_gen_c_builder@@Base+0x7c0>
   19d0c:	mov	r0, r6
   19d10:	mov	r1, r5
   19d14:	bl	19cc4 <__flatcc_fb_gen_c_builder@@Base+0x40c>
   19d18:	mov	r0, r6
   19d1c:	bl	1a098 <__flatcc_fb_gen_c_builder@@Base+0x7e0>
   19d20:	mov	r7, r0
   19d24:	ldr	r0, [r4, #204]	; 0xcc
   19d28:	movw	r1, #24186	; 0x5e7a
   19d2c:	movt	r1, #4
   19d30:	mov	r2, r5
   19d34:	bl	14890 <fprintf@plt>
   19d38:	mov	r0, #1
   19d3c:	str	r0, [sp]
   19d40:	mov	r8, #1
   19d44:	mov	r0, r4
   19d48:	mov	r1, r6
   19d4c:	mov	r2, #0
   19d50:	mov	r3, r7
   19d54:	bl	1a0fc <__flatcc_fb_gen_c_builder@@Base+0x844>
   19d58:	ldr	r0, [r4, #204]	; 0xcc
   19d5c:	movw	r1, #24212	; 0x5e94
   19d60:	movt	r1, #4
   19d64:	mov	r2, r5
   19d68:	bl	14890 <fprintf@plt>
   19d6c:	str	r8, [sp]
   19d70:	mov	r0, r4
   19d74:	mov	r1, r6
   19d78:	mov	r2, #0
   19d7c:	mov	r3, r7
   19d80:	bl	1a288 <__flatcc_fb_gen_c_builder@@Base+0x9d0>
   19d84:	ldr	r1, [r4, #204]	; 0xcc
   19d88:	mov	r0, #10
   19d8c:	bl	148f0 <fputc@plt>
   19d90:	ldr	r0, [r4, #204]	; 0xcc
   19d94:	str	r5, [sp]
   19d98:	movw	r1, #24237	; 0x5ead
   19d9c:	movt	r1, #4
   19da0:	mov	r2, r5
   19da4:	mov	r3, r5
   19da8:	bl	14890 <fprintf@plt>
   19dac:	str	r9, [sp]
   19db0:	mov	r0, r4
   19db4:	mov	r1, r6
   19db8:	mov	r2, #0
   19dbc:	mov	r3, r7
   19dc0:	bl	1a0fc <__flatcc_fb_gen_c_builder@@Base+0x844>
   19dc4:	ldr	r3, [r4, #204]	; 0xcc
   19dc8:	movw	r0, #24275	; 0x5ed3
   19dcc:	movt	r0, #4
   19dd0:	mov	r1, #4
   19dd4:	mov	r2, #1
   19dd8:	bl	14830 <fwrite@plt>
   19ddc:	str	r9, [sp]
   19de0:	mov	r0, r4
   19de4:	mov	r1, r6
   19de8:	mov	r2, r7
   19dec:	mov	r3, #0
   19df0:	bl	1a304 <__flatcc_fb_gen_c_builder@@Base+0xa4c>
   19df4:	ldr	r3, [r4, #204]	; 0xcc
   19df8:	movw	r8, #48209	; 0xbc51
   19dfc:	movt	r8, #3
   19e00:	mov	r0, r8
   19e04:	mov	r1, #12
   19e08:	mov	r2, #1
   19e0c:	bl	14830 <fwrite@plt>
   19e10:	ldr	r0, [r4, #204]	; 0xcc
   19e14:	str	r5, [sp]
   19e18:	str	r5, [sp, #4]
   19e1c:	movw	r1, #24280	; 0x5ed8
   19e20:	movt	r1, #4
   19e24:	mov	r2, r5
   19e28:	mov	r3, r5
   19e2c:	bl	14890 <fprintf@plt>
   19e30:	ldr	r3, [r4, #204]	; 0xcc
   19e34:	movw	r9, #24277	; 0x5ed5
   19e38:	movt	r9, #4
   19e3c:	mov	r0, r9
   19e40:	mov	sl, #0
   19e44:	mov	r1, #2
   19e48:	mov	r2, #1
   19e4c:	bl	14830 <fwrite@plt>
   19e50:	mov	r0, #1
   19e54:	str	r0, [sp]
   19e58:	mov	r0, r4
   19e5c:	mov	r1, r6
   19e60:	mov	r2, r7
   19e64:	mov	r3, #0
   19e68:	bl	1a304 <__flatcc_fb_gen_c_builder@@Base+0xa4c>
   19e6c:	ldr	r3, [r4, #204]	; 0xcc
   19e70:	mov	r0, r8
   19e74:	mov	r1, #12
   19e78:	mov	r2, #1
   19e7c:	bl	14830 <fwrite@plt>
   19e80:	ldr	r0, [r4, #204]	; 0xcc
   19e84:	str	r5, [sp]
   19e88:	movw	r1, #24334	; 0x5f0e
   19e8c:	movt	r1, #4
   19e90:	mov	r2, r5
   19e94:	mov	r3, r5
   19e98:	bl	14890 <fprintf@plt>
   19e9c:	str	sl, [sp]
   19ea0:	mov	r0, r4
   19ea4:	mov	r1, r6
   19ea8:	mov	r2, #0
   19eac:	mov	r3, r7
   19eb0:	bl	1a0fc <__flatcc_fb_gen_c_builder@@Base+0x844>
   19eb4:	ldr	r3, [r4, #204]	; 0xcc
   19eb8:	movw	r0, #24275	; 0x5ed3
   19ebc:	movt	r0, #4
   19ec0:	mov	r1, #4
   19ec4:	mov	r2, #1
   19ec8:	bl	14830 <fwrite@plt>
   19ecc:	str	sl, [sp]
   19ed0:	mov	r0, r4
   19ed4:	mov	r1, r6
   19ed8:	mov	r2, r7
   19edc:	mov	r3, #2
   19ee0:	bl	1a304 <__flatcc_fb_gen_c_builder@@Base+0xa4c>
   19ee4:	ldr	r3, [r4, #204]	; 0xcc
   19ee8:	mov	r0, r8
   19eec:	mov	r1, #12
   19ef0:	mov	r2, #1
   19ef4:	bl	14830 <fwrite@plt>
   19ef8:	ldr	r0, [r4, #204]	; 0xcc
   19efc:	str	r5, [sp]
   19f00:	str	r5, [sp, #4]
   19f04:	movw	r1, #24378	; 0x5f3a
   19f08:	movt	r1, #4
   19f0c:	mov	r2, r5
   19f10:	mov	r3, r5
   19f14:	bl	14890 <fprintf@plt>
   19f18:	ldr	r3, [r4, #204]	; 0xcc
   19f1c:	mov	r0, r9
   19f20:	mov	r1, #2
   19f24:	mov	r2, #1
   19f28:	bl	14830 <fwrite@plt>
   19f2c:	mov	r0, #1
   19f30:	str	r0, [sp]
   19f34:	mov	r0, r4
   19f38:	mov	r1, r6
   19f3c:	mov	r2, r7
   19f40:	mov	r3, #2
   19f44:	bl	1a304 <__flatcc_fb_gen_c_builder@@Base+0xa4c>
   19f48:	ldr	r3, [r4, #204]	; 0xcc
   19f4c:	mov	r0, r8
   19f50:	mov	r1, #12
   19f54:	mov	r2, #1
   19f58:	bl	14830 <fwrite@plt>
   19f5c:	ldr	r0, [r4, #204]	; 0xcc
   19f60:	str	r5, [sp]
   19f64:	movw	r1, #24438	; 0x5f76
   19f68:	movt	r1, #4
   19f6c:	mov	r2, r5
   19f70:	mov	r3, r5
   19f74:	bl	14890 <fprintf@plt>
   19f78:	str	sl, [sp]
   19f7c:	mov	r0, r4
   19f80:	mov	r1, r6
   19f84:	mov	r2, #0
   19f88:	mov	r3, r7
   19f8c:	bl	1a0fc <__flatcc_fb_gen_c_builder@@Base+0x844>
   19f90:	ldr	r3, [r4, #204]	; 0xcc
   19f94:	movw	r0, #24275	; 0x5ed3
   19f98:	movt	r0, #4
   19f9c:	mov	r1, #4
   19fa0:	mov	r2, #1
   19fa4:	bl	14830 <fwrite@plt>
   19fa8:	str	sl, [sp]
   19fac:	mov	r0, r4
   19fb0:	mov	r1, r6
   19fb4:	mov	r2, r7
   19fb8:	mov	r3, #1
   19fbc:	bl	1a304 <__flatcc_fb_gen_c_builder@@Base+0xa4c>
   19fc0:	ldr	r3, [r4, #204]	; 0xcc
   19fc4:	mov	r0, r8
   19fc8:	mov	r1, #12
   19fcc:	mov	r2, #1
   19fd0:	bl	14830 <fwrite@plt>
   19fd4:	ldr	r0, [r4, #204]	; 0xcc
   19fd8:	str	r5, [sp]
   19fdc:	str	r5, [sp, #4]
   19fe0:	movw	r1, #24484	; 0x5fa4
   19fe4:	movt	r1, #4
   19fe8:	mov	r2, r5
   19fec:	mov	r3, r5
   19ff0:	bl	14890 <fprintf@plt>
   19ff4:	ldr	r3, [r4, #204]	; 0xcc
   19ff8:	mov	r0, r9
   19ffc:	mov	r1, #2
   1a000:	mov	r2, #1
   1a004:	bl	14830 <fwrite@plt>
   1a008:	mov	r0, #1
   1a00c:	str	r0, [sp]
   1a010:	mov	r0, r4
   1a014:	mov	r1, r6
   1a018:	mov	r2, r7
   1a01c:	mov	r3, #1
   1a020:	bl	1a304 <__flatcc_fb_gen_c_builder@@Base+0xa4c>
   1a024:	ldr	r3, [r4, #204]	; 0xcc
   1a028:	mov	r0, r8
   1a02c:	mov	r1, #12
   1a030:	mov	r2, #1
   1a034:	bl	14830 <fwrite@plt>
   1a038:	ldr	r0, [r4, #204]	; 0xcc
   1a03c:	ldrd	r2, [r6, #112]	; 0x70
   1a040:	ldrh	r1, [r6, #104]	; 0x68
   1a044:	str	r2, [sp, #8]
   1a048:	str	r3, [sp, #12]
   1a04c:	str	r1, [sp, #16]
   1a050:	str	r5, [sp, #20]
   1a054:	str	r5, [sp, #24]
   1a058:	str	r5, [sp]
   1a05c:	movw	r1, #24546	; 0x5fe2
   1a060:	movt	r1, #4
   1a064:	mov	r2, r4
   1a068:	mov	r3, r4
   1a06c:	bl	14890 <fprintf@plt>
   1a070:	sub	sp, fp, #28
   1a074:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a078:	movw	r0, #47893	; 0xbb15
   1a07c:	movt	r0, #3
   1a080:	movw	r1, #24044	; 0x5dec
   1a084:	movt	r1, #4
   1a088:	movw	r3, #24125	; 0x5e3d
   1a08c:	movt	r3, #4
   1a090:	movw	r2, #1010	; 0x3f2
   1a094:	bl	14950 <__assert_fail@plt>
   1a098:	push	{r4, r5, fp, lr}
   1a09c:	add	fp, sp, #8
   1a0a0:	ldr	r5, [r0, #20]
   1a0a4:	mov	r4, #0
   1a0a8:	b	1a0b0 <__flatcc_fb_gen_c_builder@@Base+0x7f8>
   1a0ac:	ldr	r5, [r5]
   1a0b0:	cmp	r5, #0
   1a0b4:	moveq	r0, r4
   1a0b8:	popeq	{r4, r5, fp, pc}
   1a0bc:	ldrb	r0, [r5, #72]	; 0x48
   1a0c0:	tst	r0, #4
   1a0c4:	bne	1a0ac <__flatcc_fb_gen_c_builder@@Base+0x7f4>
   1a0c8:	ldrh	r0, [r5, #24]
   1a0cc:	cmp	r0, #14
   1a0d0:	bne	1a0f4 <__flatcc_fb_gen_c_builder@@Base+0x83c>
   1a0d4:	ldr	r0, [r5, #16]
   1a0d8:	ldrh	r1, [r0, #8]
   1a0dc:	cmp	r1, #1
   1a0e0:	bne	1a0f4 <__flatcc_fb_gen_c_builder@@Base+0x83c>
   1a0e4:	bl	1a098 <__flatcc_fb_gen_c_builder@@Base+0x7e0>
   1a0e8:	add	r4, r0, r4
   1a0ec:	ldr	r5, [r5]
   1a0f0:	b	1a0b0 <__flatcc_fb_gen_c_builder@@Base+0x7f8>
   1a0f4:	add	r4, r4, #1
   1a0f8:	b	1a0ac <__flatcc_fb_gen_c_builder@@Base+0x7f4>
   1a0fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a100:	add	fp, sp, #28
   1a104:	sub	sp, sp, #236	; 0xec
   1a108:	mov	r5, r3
   1a10c:	mov	r4, r2
   1a110:	mov	r7, r1
   1a114:	mov	r6, r0
   1a118:	add	r0, sp, #8
   1a11c:	mov	r1, #0
   1a120:	mov	r2, #220	; 0xdc
   1a124:	bl	148a8 <memset@plt>
   1a128:	ldr	r9, [r7, #20]
   1a12c:	cmp	r9, #0
   1a130:	beq	1a22c <__flatcc_fb_gen_c_builder@@Base+0x974>
   1a134:	ldr	r7, [fp, #8]
   1a138:	ldrb	r0, [r9, #72]	; 0x48
   1a13c:	tst	r0, #4
   1a140:	bne	1a220 <__flatcc_fb_gen_c_builder@@Base+0x968>
   1a144:	ldrh	r0, [r9, #24]
   1a148:	cmp	r0, #8
   1a14c:	beq	1a184 <__flatcc_fb_gen_c_builder@@Base+0x8cc>
   1a150:	cmp	r0, #14
   1a154:	bne	1a238 <__flatcc_fb_gen_c_builder@@Base+0x980>
   1a158:	ldr	r1, [r9, #16]
   1a15c:	ldrh	r0, [r1, #8]
   1a160:	cmp	r0, #1
   1a164:	bne	1a1d0 <__flatcc_fb_gen_c_builder@@Base+0x918>
   1a168:	str	r7, [sp]
   1a16c:	mov	r0, r6
   1a170:	mov	r2, r4
   1a174:	mov	r3, r5
   1a178:	bl	1a0fc <__flatcc_fb_gen_c_builder@@Base+0x844>
   1a17c:	mov	r4, r0
   1a180:	b	1a220 <__flatcc_fb_gen_c_builder@@Base+0x968>
   1a184:	mov	r0, r6
   1a188:	mov	r1, r4
   1a18c:	mov	r2, r5
   1a190:	mov	r3, r7
   1a194:	bl	1a70c <__flatcc_fb_gen_c_builder@@Base+0xe54>
   1a198:	ldr	sl, [r9, #16]
   1a19c:	mov	r0, sl
   1a1a0:	mov	r1, r6
   1a1a4:	bl	1a794 <__flatcc_fb_gen_c_builder@@Base+0xedc>
   1a1a8:	mov	r8, r0
   1a1ac:	mov	r0, sl
   1a1b0:	bl	1a7ac <__flatcc_fb_gen_c_builder@@Base+0xef4>
   1a1b4:	mov	r3, r0
   1a1b8:	ldr	r0, [r6, #204]	; 0xcc
   1a1bc:	str	r4, [sp]
   1a1c0:	movw	r1, #24631	; 0x6037
   1a1c4:	movt	r1, #4
   1a1c8:	mov	r2, r8
   1a1cc:	b	1a218 <__flatcc_fb_gen_c_builder@@Base+0x960>
   1a1d0:	mov	r0, r6
   1a1d4:	mov	r1, r4
   1a1d8:	mov	r2, r5
   1a1dc:	mov	r3, r7
   1a1e0:	bl	1a70c <__flatcc_fb_gen_c_builder@@Base+0xe54>
   1a1e4:	ldr	r0, [r9, #16]
   1a1e8:	mov	r8, r5
   1a1ec:	mov	r5, r7
   1a1f0:	add	r7, sp, #8
   1a1f4:	mov	r1, r7
   1a1f8:	bl	19cc4 <__flatcc_fb_gen_c_builder@@Base+0x40c>
   1a1fc:	ldr	r0, [r6, #204]	; 0xcc
   1a200:	movw	r1, #24617	; 0x6029
   1a204:	movt	r1, #4
   1a208:	mov	r2, r7
   1a20c:	mov	r7, r5
   1a210:	mov	r5, r8
   1a214:	mov	r3, r4
   1a218:	bl	14890 <fprintf@plt>
   1a21c:	add	r4, r4, #1
   1a220:	ldr	r9, [r9]
   1a224:	cmp	r9, #0
   1a228:	bne	1a138 <__flatcc_fb_gen_c_builder@@Base+0x880>
   1a22c:	mov	r0, r4
   1a230:	sub	sp, fp, #28
   1a234:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a238:	movw	r0, #4264	; 0x10a8
   1a23c:	movt	r0, #6
   1a240:	ldr	r0, [r0]
   1a244:	movw	r1, #24640	; 0x6040
   1a248:	movt	r1, #4
   1a24c:	str	r1, [sp]
   1a250:	movw	r1, #21007	; 0x520f
   1a254:	movt	r1, #3
   1a258:	movw	r4, #24044	; 0x5dec
   1a25c:	movt	r4, #4
   1a260:	mov	r2, r4
   1a264:	movw	r3, #850	; 0x352
   1a268:	bl	14890 <fprintf@plt>
   1a26c:	movw	r0, #24925	; 0x615d
   1a270:	movt	r0, #4
   1a274:	movw	r3, #24686	; 0x606e
   1a278:	movt	r3, #4
   1a27c:	mov	r1, r4
   1a280:	movw	r2, #850	; 0x352
   1a284:	bl	14950 <__assert_fail@plt>
   1a288:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a28c:	add	fp, sp, #28
   1a290:	sub	sp, sp, #4
   1a294:	mov	r5, r3
   1a298:	mov	r9, r2
   1a29c:	mov	r6, r0
   1a2a0:	mov	r0, r1
   1a2a4:	bl	1a098 <__flatcc_fb_gen_c_builder@@Base+0x7e0>
   1a2a8:	cmp	r0, #1
   1a2ac:	blt	1a2f8 <__flatcc_fb_gen_c_builder@@Base+0xa40>
   1a2b0:	mov	r7, r0
   1a2b4:	ldr	r8, [fp, #8]
   1a2b8:	mov	r4, #0
   1a2bc:	movw	sl, #24956	; 0x617c
   1a2c0:	movt	sl, #4
   1a2c4:	mov	r0, r6
   1a2c8:	mov	r1, r4
   1a2cc:	mov	r2, r5
   1a2d0:	mov	r3, r8
   1a2d4:	bl	1a70c <__flatcc_fb_gen_c_builder@@Base+0xe54>
   1a2d8:	add	r2, r9, r4
   1a2dc:	ldr	r0, [r6, #204]	; 0xcc
   1a2e0:	mov	r1, sl
   1a2e4:	bl	14890 <fprintf@plt>
   1a2e8:	add	r4, r4, #1
   1a2ec:	cmp	r7, r4
   1a2f0:	bne	1a2c4 <__flatcc_fb_gen_c_builder@@Base+0xa0c>
   1a2f4:	add	r9, r7, r9
   1a2f8:	mov	r0, r9
   1a2fc:	sub	sp, fp, #28
   1a300:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a304:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a308:	add	fp, sp, #28
   1a30c:	sub	sp, sp, #268	; 0x10c
   1a310:	mov	r7, r3
   1a314:	str	r2, [sp, #20]
   1a318:	mov	r5, r1
   1a31c:	mov	r4, r0
   1a320:	add	r0, sp, #32
   1a324:	mov	r1, #0
   1a328:	mov	r2, #220	; 0xdc
   1a32c:	bl	148a8 <memset@plt>
   1a330:	movw	r0, #24779	; 0x60cb
   1a334:	movt	r0, #4
   1a338:	movw	r1, #21264	; 0x5310
   1a33c:	movt	r1, #3
   1a340:	cmp	r7, #1
   1a344:	moveq	r1, r0
   1a348:	movw	r0, #24772	; 0x60c4
   1a34c:	movt	r0, #4
   1a350:	cmp	r7, #2
   1a354:	movne	r0, r1
   1a358:	str	r0, [sp, #24]
   1a35c:	ldr	r5, [r5, #20]
   1a360:	cmp	r5, #0
   1a364:	beq	1a690 <__flatcc_fb_gen_c_builder@@Base+0xdd8>
   1a368:	sub	sl, fp, #36	; 0x24
   1a36c:	sub	r6, fp, #40	; 0x28
   1a370:	mov	r8, #0
   1a374:	mov	r9, #0
   1a378:	str	r7, [sp, #28]
   1a37c:	mov	r0, r5
   1a380:	mov	r1, sl
   1a384:	mov	r2, r6
   1a388:	bl	1a820 <__flatcc_fb_gen_c_builder@@Base+0xf68>
   1a38c:	cmp	r8, #1
   1a390:	blt	1a3c4 <__flatcc_fb_gen_c_builder@@Base+0xb0c>
   1a394:	ldr	r3, [r4, #204]	; 0xcc
   1a398:	tst	r8, #3
   1a39c:	beq	1a3b0 <__flatcc_fb_gen_c_builder@@Base+0xaf8>
   1a3a0:	movw	r0, #24793	; 0x60d9
   1a3a4:	movt	r0, #4
   1a3a8:	mov	r1, #2
   1a3ac:	b	1a3bc <__flatcc_fb_gen_c_builder@@Base+0xb04>
   1a3b0:	movw	r0, #24788	; 0x60d4
   1a3b4:	movt	r0, #4
   1a3b8:	mov	r1, #4
   1a3bc:	mov	r2, #1
   1a3c0:	bl	14830 <fwrite@plt>
   1a3c4:	ldrh	r0, [r5, #24]
   1a3c8:	cmp	r0, #8
   1a3cc:	beq	1a430 <__flatcc_fb_gen_c_builder@@Base+0xb78>
   1a3d0:	cmp	r0, #14
   1a3d4:	bne	1a6bc <__flatcc_fb_gen_c_builder@@Base+0xe04>
   1a3d8:	ldr	r0, [r5, #16]
   1a3dc:	add	r1, sp, #32
   1a3e0:	bl	19cc4 <__flatcc_fb_gen_c_builder@@Base+0x40c>
   1a3e4:	ldrh	r0, [r5, #72]	; 0x48
   1a3e8:	and	r0, r0, #4
   1a3ec:	ldr	r1, [r5, #16]
   1a3f0:	ldrh	r1, [r1, #8]
   1a3f4:	cmp	r1, #1
   1a3f8:	bne	1a498 <__flatcc_fb_gen_c_builder@@Base+0xbe0>
   1a3fc:	cmp	r0, #0
   1a400:	beq	1a4c0 <__flatcc_fb_gen_c_builder@@Base+0xc08>
   1a404:	ldr	r0, [r4, #204]	; 0xcc
   1a408:	movw	r1, #24796	; 0x60dc
   1a40c:	movt	r1, #4
   1a410:	mov	r2, r9
   1a414:	mov	r3, r9
   1a418:	bl	14890 <fprintf@plt>
   1a41c:	ldr	r0, [r5, #16]
   1a420:	bl	1a098 <__flatcc_fb_gen_c_builder@@Base+0x7e0>
   1a424:	add	r8, r0, r8
   1a428:	add	r9, r9, #1
   1a42c:	b	1a684 <__flatcc_fb_gen_c_builder@@Base+0xdcc>
   1a430:	ldr	r0, [r5, #16]
   1a434:	bl	1a828 <__flatcc_fb_gen_c_builder@@Base+0xf70>
   1a438:	mov	r3, r0
   1a43c:	ldrb	r0, [r5, #72]	; 0x48
   1a440:	tst	r0, #4
   1a444:	bne	1a4a0 <__flatcc_fb_gen_c_builder@@Base+0xbe8>
   1a448:	ldrd	r0, [r5, #88]	; 0x58
   1a44c:	eor	r0, r0, #1
   1a450:	orrs	r0, r0, r1
   1a454:	movne	r0, r7
   1a458:	cmp	r0, #2
   1a45c:	beq	1a56c <__flatcc_fb_gen_c_builder@@Base+0xcb4>
   1a460:	cmp	r0, #1
   1a464:	bne	1a544 <__flatcc_fb_gen_c_builder@@Base+0xc8c>
   1a468:	ldr	r0, [r4, #204]	; 0xcc
   1a46c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a470:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a474:	ldr	r7, [fp, #8]
   1a478:	cmp	r7, #0
   1a47c:	beq	1a624 <__flatcc_fb_gen_c_builder@@Base+0xd6c>
   1a480:	str	r2, [sp]
   1a484:	stmib	sp, {r1, r2}
   1a488:	str	r1, [sp, #12]
   1a48c:	movw	r1, #24960	; 0x6180
   1a490:	movt	r1, #4
   1a494:	b	1a648 <__flatcc_fb_gen_c_builder@@Base+0xd90>
   1a498:	cmp	r0, #0
   1a49c:	beq	1a4f8 <__flatcc_fb_gen_c_builder@@Base+0xc40>
   1a4a0:	ldr	r0, [r4, #204]	; 0xcc
   1a4a4:	movw	r1, #24905	; 0x6149
   1a4a8:	movt	r1, #4
   1a4ac:	mov	r2, r9
   1a4b0:	bl	14890 <fprintf@plt>
   1a4b4:	add	r8, r8, #1
   1a4b8:	add	r9, r9, #1
   1a4bc:	b	1a684 <__flatcc_fb_gen_c_builder@@Base+0xdcc>
   1a4c0:	ldr	r0, [r4, #204]	; 0xcc
   1a4c4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a4c8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a4cc:	ldr	r3, [fp, #8]
   1a4d0:	cmp	r3, #0
   1a4d4:	beq	1a59c <__flatcc_fb_gen_c_builder@@Base+0xce4>
   1a4d8:	str	r2, [sp]
   1a4dc:	stmib	sp, {r1, r2}
   1a4e0:	str	r1, [sp, #12]
   1a4e4:	movw	r1, #24853	; 0x6115
   1a4e8:	movt	r1, #4
   1a4ec:	add	r2, sp, #32
   1a4f0:	ldr	r3, [sp, #24]
   1a4f4:	b	1a67c <__flatcc_fb_gen_c_builder@@Base+0xdc4>
   1a4f8:	ldrd	r0, [r5, #88]	; 0x58
   1a4fc:	eor	r0, r0, #1
   1a500:	orrs	r0, r0, r1
   1a504:	movne	r0, r7
   1a508:	cmp	r0, #2
   1a50c:	beq	1a5f8 <__flatcc_fb_gen_c_builder@@Base+0xd40>
   1a510:	cmp	r0, #1
   1a514:	bne	1a544 <__flatcc_fb_gen_c_builder@@Base+0xc8c>
   1a518:	ldr	r0, [r4, #204]	; 0xcc
   1a51c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a520:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a524:	ldr	r2, [fp, #8]
   1a528:	cmp	r2, #0
   1a52c:	beq	1a65c <__flatcc_fb_gen_c_builder@@Base+0xda4>
   1a530:	stm	sp, {r1, r3}
   1a534:	str	r1, [sp, #8]
   1a538:	movw	r1, #24962	; 0x6182
   1a53c:	movt	r1, #4
   1a540:	b	1a678 <__flatcc_fb_gen_c_builder@@Base+0xdc0>
   1a544:	ldr	r0, [r4, #204]	; 0xcc
   1a548:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a54c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a550:	ldr	r1, [fp, #8]
   1a554:	cmp	r1, #0
   1a558:	beq	1a5e8 <__flatcc_fb_gen_c_builder@@Base+0xd30>
   1a55c:	stm	sp, {r2, r3}
   1a560:	movw	r1, #24927	; 0x615f
   1a564:	movt	r1, #4
   1a568:	b	1a67c <__flatcc_fb_gen_c_builder@@Base+0xdc4>
   1a56c:	ldr	r0, [r4, #204]	; 0xcc
   1a570:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a574:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a578:	ldr	r7, [fp, #8]
   1a57c:	cmp	r7, #0
   1a580:	beq	1a638 <__flatcc_fb_gen_c_builder@@Base+0xd80>
   1a584:	str	r2, [sp]
   1a588:	stmib	sp, {r1, r2}
   1a58c:	str	r1, [sp, #12]
   1a590:	movw	r1, #25034	; 0x61ca
   1a594:	movt	r1, #4
   1a598:	b	1a648 <__flatcc_fb_gen_c_builder@@Base+0xd90>
   1a59c:	str	r2, [sp]
   1a5a0:	str	r1, [sp, #4]
   1a5a4:	movw	r1, #24884	; 0x6134
   1a5a8:	movt	r1, #4
   1a5ac:	add	r2, sp, #32
   1a5b0:	ldr	r3, [sp, #24]
   1a5b4:	bl	14890 <fprintf@plt>
   1a5b8:	ldr	r1, [r5, #16]
   1a5bc:	mov	r0, #0
   1a5c0:	str	r0, [sp]
   1a5c4:	mov	r0, r4
   1a5c8:	mov	r2, r8
   1a5cc:	ldr	r3, [sp, #20]
   1a5d0:	bl	1a288 <__flatcc_fb_gen_c_builder@@Base+0x9d0>
   1a5d4:	mov	r8, r0
   1a5d8:	ldr	r1, [r4, #204]	; 0xcc
   1a5dc:	mov	r0, #41	; 0x29
   1a5e0:	bl	148f0 <fputc@plt>
   1a5e4:	b	1a684 <__flatcc_fb_gen_c_builder@@Base+0xdcc>
   1a5e8:	str	r8, [sp]
   1a5ec:	movw	r1, #24946	; 0x6172
   1a5f0:	movt	r1, #4
   1a5f4:	b	1a67c <__flatcc_fb_gen_c_builder@@Base+0xdc4>
   1a5f8:	ldr	r0, [r4, #204]	; 0xcc
   1a5fc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a600:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a604:	ldr	r2, [fp, #8]
   1a608:	cmp	r2, #0
   1a60c:	beq	1a66c <__flatcc_fb_gen_c_builder@@Base+0xdb4>
   1a610:	stm	sp, {r1, r3}
   1a614:	str	r1, [sp, #8]
   1a618:	movw	r1, #25036	; 0x61cc
   1a61c:	movt	r1, #4
   1a620:	b	1a678 <__flatcc_fb_gen_c_builder@@Base+0xdc0>
   1a624:	str	r2, [sp]
   1a628:	stmib	sp, {r1, r8}
   1a62c:	movw	r1, #24999	; 0x61a7
   1a630:	movt	r1, #4
   1a634:	b	1a648 <__flatcc_fb_gen_c_builder@@Base+0xd90>
   1a638:	str	r2, [sp]
   1a63c:	stmib	sp, {r1, r8}
   1a640:	movw	r1, #25071	; 0x61ef
   1a644:	movt	r1, #4
   1a648:	mov	r2, r4
   1a64c:	bl	14890 <fprintf@plt>
   1a650:	add	r8, r8, #1
   1a654:	ldr	r7, [sp, #28]
   1a658:	b	1a684 <__flatcc_fb_gen_c_builder@@Base+0xdcc>
   1a65c:	stm	sp, {r1, r8}
   1a660:	movw	r1, #25001	; 0x61a9
   1a664:	movt	r1, #4
   1a668:	b	1a678 <__flatcc_fb_gen_c_builder@@Base+0xdc0>
   1a66c:	stm	sp, {r1, r8}
   1a670:	movw	r1, #25073	; 0x61f1
   1a674:	movt	r1, #4
   1a678:	add	r2, sp, #32
   1a67c:	bl	14890 <fprintf@plt>
   1a680:	add	r8, r8, #1
   1a684:	ldr	r5, [r5]
   1a688:	cmp	r5, #0
   1a68c:	bne	1a37c <__flatcc_fb_gen_c_builder@@Base+0xac4>
   1a690:	ldr	r0, [sp, #20]
   1a694:	cmp	r0, #1
   1a698:	blt	1a6b4 <__flatcc_fb_gen_c_builder@@Base+0xdfc>
   1a69c:	ldr	r3, [r4, #204]	; 0xcc
   1a6a0:	movw	r0, #24788	; 0x60d4
   1a6a4:	movt	r0, #4
   1a6a8:	mov	r1, #4
   1a6ac:	mov	r2, #1
   1a6b0:	bl	14830 <fwrite@plt>
   1a6b4:	sub	sp, fp, #28
   1a6b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a6bc:	movw	r0, #4264	; 0x10a8
   1a6c0:	movt	r0, #6
   1a6c4:	ldr	r0, [r0]
   1a6c8:	movw	r1, #25104	; 0x6210
   1a6cc:	movt	r1, #4
   1a6d0:	str	r1, [sp]
   1a6d4:	movw	r1, #21007	; 0x520f
   1a6d8:	movt	r1, #3
   1a6dc:	movw	r4, #24044	; 0x5dec
   1a6e0:	movt	r4, #4
   1a6e4:	mov	r2, r4
   1a6e8:	movw	r3, #993	; 0x3e1
   1a6ec:	bl	14890 <fprintf@plt>
   1a6f0:	movw	r0, #24925	; 0x615d
   1a6f4:	movt	r0, #4
   1a6f8:	movw	r3, #25131	; 0x622b
   1a6fc:	movt	r3, #4
   1a700:	mov	r1, r4
   1a704:	movw	r2, #993	; 0x3e1
   1a708:	bl	14950 <__assert_fail@plt>
   1a70c:	push	{fp, lr}
   1a710:	mov	fp, sp
   1a714:	mov	lr, r2
   1a718:	movw	ip, #21263	; 0x530f
   1a71c:	movt	ip, #3
   1a720:	movw	r2, #27177	; 0x6a29
   1a724:	movt	r2, #3
   1a728:	cmp	r3, #0
   1a72c:	moveq	r2, ip
   1a730:	cmp	lr, #0
   1a734:	popeq	{fp, pc}
   1a738:	cmp	r1, #0
   1a73c:	beq	1a76c <__flatcc_fb_gen_c_builder@@Base+0xeb4>
   1a740:	ldr	ip, [r0, #204]	; 0xcc
   1a744:	tst	r1, #3
   1a748:	bne	1a778 <__flatcc_fb_gen_c_builder@@Base+0xec0>
   1a74c:	sub	r0, lr, r1
   1a750:	cmp	r0, #2
   1a754:	ble	1a778 <__flatcc_fb_gen_c_builder@@Base+0xec0>
   1a758:	movw	r1, #24766	; 0x60be
   1a75c:	movt	r1, #4
   1a760:	mov	r0, ip
   1a764:	pop	{fp, lr}
   1a768:	b	14890 <fprintf@plt>
   1a76c:	ldr	ip, [r0, #204]	; 0xcc
   1a770:	cmp	lr, #5
   1a774:	bge	1a758 <__flatcc_fb_gen_c_builder@@Base+0xea0>
   1a778:	movw	r0, #47405	; 0xb92d
   1a77c:	movt	r0, #4
   1a780:	mov	r1, #2
   1a784:	mov	r2, #1
   1a788:	mov	r3, ip
   1a78c:	pop	{fp, lr}
   1a790:	b	14830 <fwrite@plt>
   1a794:	movw	r2, #21264	; 0x5310
   1a798:	movt	r2, #3
   1a79c:	cmp	r0, #5
   1a7a0:	moveq	r2, r1
   1a7a4:	mov	r0, r2
   1a7a8:	bx	lr
   1a7ac:	sub	r0, r0, #1
   1a7b0:	cmp	r0, #11
   1a7b4:	movwcc	r1, #28064	; 0x6da0
   1a7b8:	movtcc	r1, #4
   1a7bc:	ldrcc	r0, [r1, r0, lsl #2]
   1a7c0:	bxcc	lr
   1a7c4:	push	{r4, sl, fp, lr}
   1a7c8:	add	fp, sp, #8
   1a7cc:	sub	sp, sp, #8
   1a7d0:	movw	r0, #4264	; 0x10a8
   1a7d4:	movt	r0, #6
   1a7d8:	ldr	r0, [r0]
   1a7dc:	movw	r1, #47600	; 0xb9f0
   1a7e0:	movt	r1, #3
   1a7e4:	str	r1, [sp]
   1a7e8:	movw	r1, #21007	; 0x520f
   1a7ec:	movt	r1, #3
   1a7f0:	movw	r4, #47527	; 0xb9a7
   1a7f4:	movt	r4, #3
   1a7f8:	mov	r2, r4
   1a7fc:	mov	r3, #141	; 0x8d
   1a800:	bl	14890 <fprintf@plt>
   1a804:	movw	r0, #24925	; 0x615d
   1a808:	movt	r0, #4
   1a80c:	movw	r3, #47655	; 0xba27
   1a810:	movt	r3, #3
   1a814:	mov	r1, r4
   1a818:	mov	r2, #141	; 0x8d
   1a81c:	bl	14950 <__assert_fail@plt>
   1a820:	ldr	r0, [r0, #4]
   1a824:	b	1a89c <__flatcc_fb_gen_c_builder@@Base+0xfe4>
   1a828:	sub	r0, r0, #1
   1a82c:	cmp	r0, #11
   1a830:	movwcc	r1, #28112	; 0x6dd0
   1a834:	movtcc	r1, #4
   1a838:	ldrcc	r0, [r1, r0, lsl #2]
   1a83c:	bxcc	lr
   1a840:	push	{r4, sl, fp, lr}
   1a844:	add	fp, sp, #8
   1a848:	sub	sp, sp, #8
   1a84c:	movw	r0, #4264	; 0x10a8
   1a850:	movt	r0, #6
   1a854:	ldr	r0, [r0]
   1a858:	movw	r1, #47600	; 0xb9f0
   1a85c:	movt	r1, #3
   1a860:	str	r1, [sp]
   1a864:	movw	r1, #21007	; 0x520f
   1a868:	movt	r1, #3
   1a86c:	movw	r4, #47527	; 0xb9a7
   1a870:	movt	r4, #3
   1a874:	mov	r2, r4
   1a878:	mov	r3, #96	; 0x60
   1a87c:	bl	14890 <fprintf@plt>
   1a880:	movw	r0, #24925	; 0x615d
   1a884:	movt	r0, #4
   1a888:	movw	r3, #49952	; 0xc320
   1a88c:	movt	r3, #3
   1a890:	mov	r1, r4
   1a894:	mov	r2, #96	; 0x60
   1a898:	bl	14950 <__assert_fail@plt>
   1a89c:	ldr	r3, [r0, #4]
   1a8a0:	str	r3, [r1]
   1a8a4:	ldr	r0, [r0]
   1a8a8:	str	r0, [r2]
   1a8ac:	bx	lr
   1a8b0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1a8b4:	add	fp, sp, #24
   1a8b8:	sub	sp, sp, #232	; 0xe8
   1a8bc:	mov	r4, r0
   1a8c0:	add	r5, sp, #8
   1a8c4:	mov	r7, #0
   1a8c8:	mov	r0, r5
   1a8cc:	mov	r1, #0
   1a8d0:	mov	r2, #220	; 0xdc
   1a8d4:	bl	148a8 <memset@plt>
   1a8d8:	ldr	r0, [r4, #208]	; 0xd0
   1a8dc:	ldr	r6, [r0, #40]	; 0x28
   1a8e0:	cmp	r6, #0
   1a8e4:	beq	1a944 <__flatcc_fb_gen_c_builder@@Base+0x108c>
   1a8e8:	movw	r8, #25224	; 0x6288
   1a8ec:	movt	r8, #4
   1a8f0:	ldrh	r0, [r6, #8]
   1a8f4:	cmp	r0, #4
   1a8f8:	bne	1a924 <__flatcc_fb_gen_c_builder@@Base+0x106c>
   1a8fc:	mov	r0, r6
   1a900:	mov	r1, r5
   1a904:	bl	19cc4 <__flatcc_fb_gen_c_builder@@Base+0x40c>
   1a908:	ldr	r0, [r4, #204]	; 0xcc
   1a90c:	stm	sp, {r4, r5}
   1a910:	mov	r1, r8
   1a914:	mov	r2, r4
   1a918:	mov	r3, r5
   1a91c:	bl	14890 <fprintf@plt>
   1a920:	mov	r7, #1
   1a924:	ldr	r6, [r6]
   1a928:	cmp	r6, #0
   1a92c:	bne	1a8f0 <__flatcc_fb_gen_c_builder@@Base+0x1038>
   1a930:	cmp	r7, #0
   1a934:	beq	1a944 <__flatcc_fb_gen_c_builder@@Base+0x108c>
   1a938:	ldr	r1, [r4, #204]	; 0xcc
   1a93c:	mov	r0, #10
   1a940:	bl	148f0 <fputc@plt>
   1a944:	sub	sp, fp, #24
   1a948:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a94c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1a950:	add	fp, sp, #24
   1a954:	sub	sp, sp, #224	; 0xe0
   1a958:	mov	r7, r1
   1a95c:	mov	r4, r0
   1a960:	mov	r8, sp
   1a964:	mov	r5, #0
   1a968:	mov	r0, r8
   1a96c:	mov	r1, #0
   1a970:	mov	r2, #220	; 0xdc
   1a974:	bl	148a8 <memset@plt>
   1a978:	mov	r0, r7
   1a97c:	bl	1b588 <__flatcc_fb_gen_c_builder@@Base+0x1cd0>
   1a980:	mov	r6, r0
   1a984:	mov	r0, r7
   1a988:	mov	r1, r8
   1a98c:	bl	19cc4 <__flatcc_fb_gen_c_builder@@Base+0x40c>
   1a990:	ldr	r0, [r4, #204]	; 0xcc
   1a994:	movw	r1, #25309	; 0x62dd
   1a998:	movt	r1, #4
   1a99c:	mov	r2, r4
   1a9a0:	mov	r3, r8
   1a9a4:	bl	14890 <fprintf@plt>
   1a9a8:	ldr	r7, [r7, #20]
   1a9ac:	cmp	r7, #0
   1a9b0:	beq	1aa34 <__flatcc_fb_gen_c_builder@@Base+0x117c>
   1a9b4:	movw	r8, #25354	; 0x630a
   1a9b8:	movt	r8, #4
   1a9bc:	ldrh	r0, [r7, #72]	; 0x48
   1a9c0:	and	r0, r0, #260	; 0x104
   1a9c4:	cmp	r0, #256	; 0x100
   1a9c8:	bne	1aa0c <__flatcc_fb_gen_c_builder@@Base+0x1154>
   1a9cc:	cmp	r5, #1
   1a9d0:	blt	1a9ec <__flatcc_fb_gen_c_builder@@Base+0x1134>
   1a9d4:	mov	r0, r4
   1a9d8:	mov	r1, r5
   1a9dc:	mov	r2, r6
   1a9e0:	mov	r3, #0
   1a9e4:	bl	1a70c <__flatcc_fb_gen_c_builder@@Base+0xe54>
   1a9e8:	b	1a9f8 <__flatcc_fb_gen_c_builder@@Base+0x1140>
   1a9ec:	ldr	r1, [r4, #204]	; 0xcc
   1a9f0:	mov	r0, #32
   1a9f4:	bl	148f0 <fputc@plt>
   1a9f8:	ldr	r2, [r7, #96]	; 0x60
   1a9fc:	ldr	r0, [r4, #204]	; 0xcc
   1aa00:	mov	r1, r8
   1aa04:	bl	14890 <fprintf@plt>
   1aa08:	add	r5, r5, #1
   1aa0c:	ldr	r7, [r7]
   1aa10:	cmp	r7, #0
   1aa14:	bne	1a9bc <__flatcc_fb_gen_c_builder@@Base+0x1104>
   1aa18:	ldr	r3, [r4, #204]	; 0xcc
   1aa1c:	cmp	r5, #1
   1aa20:	blt	1aa38 <__flatcc_fb_gen_c_builder@@Base+0x1180>
   1aa24:	movw	r0, #25357	; 0x630d
   1aa28:	movt	r0, #4
   1aa2c:	mov	r1, #7
   1aa30:	b	1aa44 <__flatcc_fb_gen_c_builder@@Base+0x118c>
   1aa34:	ldr	r3, [r4, #204]	; 0xcc
   1aa38:	movw	r0, #25358	; 0x630e
   1aa3c:	movt	r0, #4
   1aa40:	mov	r1, #6
   1aa44:	mov	r2, #1
   1aa48:	bl	14830 <fwrite@plt>
   1aa4c:	sub	sp, fp, #24
   1aa50:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1aa54:	push	{r4, r5, r6, sl, fp, lr}
   1aa58:	add	fp, sp, #16
   1aa5c:	sub	sp, sp, #240	; 0xf0
   1aa60:	mov	r4, r1
   1aa64:	mov	r5, r0
   1aa68:	add	r6, sp, #16
   1aa6c:	mov	r0, r6
   1aa70:	mov	r1, #0
   1aa74:	mov	r2, #220	; 0xdc
   1aa78:	bl	148a8 <memset@plt>
   1aa7c:	mov	r0, r4
   1aa80:	mov	r1, r6
   1aa84:	bl	19cc4 <__flatcc_fb_gen_c_builder@@Base+0x40c>
   1aa88:	ldr	r0, [r5, #204]	; 0xcc
   1aa8c:	ldrd	r2, [r4, #96]	; 0x60
   1aa90:	str	r2, [sp, #8]
   1aa94:	str	r3, [sp, #12]
   1aa98:	str	r6, [sp]
   1aa9c:	movw	r1, #25365	; 0x6315
   1aaa0:	movt	r1, #4
   1aaa4:	mov	r2, r5
   1aaa8:	mov	r3, r5
   1aaac:	bl	14890 <fprintf@plt>
   1aab0:	sub	sp, fp, #16
   1aab4:	pop	{r4, r5, r6, sl, fp, pc}
   1aab8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1aabc:	add	fp, sp, #24
   1aac0:	sub	sp, sp, #232	; 0xe8
   1aac4:	mov	r6, r1
   1aac8:	mov	r5, r0
   1aacc:	add	r4, sp, #8
   1aad0:	mov	r0, r4
   1aad4:	mov	r1, #0
   1aad8:	mov	r2, #220	; 0xdc
   1aadc:	bl	148a8 <memset@plt>
   1aae0:	mov	r0, r6
   1aae4:	mov	r1, r4
   1aae8:	bl	19cc4 <__flatcc_fb_gen_c_builder@@Base+0x40c>
   1aaec:	mov	r0, r6
   1aaf0:	bl	1b588 <__flatcc_fb_gen_c_builder@@Base+0x1cd0>
   1aaf4:	mov	r7, r0
   1aaf8:	ldr	r0, [r5, #204]	; 0xcc
   1aafc:	movw	r1, #24186	; 0x5e7a
   1ab00:	movt	r1, #4
   1ab04:	mov	r2, r4
   1ab08:	bl	14890 <fprintf@plt>
   1ab0c:	mov	r0, r5
   1ab10:	mov	r1, r6
   1ab14:	mov	r2, r7
   1ab18:	bl	1b5b8 <__flatcc_fb_gen_c_builder@@Base+0x1d00>
   1ab1c:	ldr	r0, [r5, #204]	; 0xcc
   1ab20:	movw	r1, #24212	; 0x5e94
   1ab24:	movt	r1, #4
   1ab28:	mov	r2, r4
   1ab2c:	bl	14890 <fprintf@plt>
   1ab30:	mov	r0, r5
   1ab34:	mov	r1, r6
   1ab38:	mov	r2, r7
   1ab3c:	bl	1b8fc <__flatcc_fb_gen_c_builder@@Base+0x2044>
   1ab40:	ldr	r1, [r5, #204]	; 0xcc
   1ab44:	mov	r0, #10
   1ab48:	bl	148f0 <fputc@plt>
   1ab4c:	ldr	r0, [r5, #204]	; 0xcc
   1ab50:	str	r5, [sp]
   1ab54:	str	r4, [sp, #4]
   1ab58:	movw	r1, #25396	; 0x6334
   1ab5c:	movt	r1, #4
   1ab60:	mov	r2, r4
   1ab64:	mov	r3, r4
   1ab68:	bl	14890 <fprintf@plt>
   1ab6c:	sub	sp, fp, #24
   1ab70:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1ab74:	push	{r4, r5, fp, lr}
   1ab78:	add	fp, sp, #8
   1ab7c:	mov	r4, r0
   1ab80:	ldr	r0, [r0, #208]	; 0xd0
   1ab84:	ldr	r5, [r0, #40]	; 0x28
   1ab88:	cmp	r5, #0
   1ab8c:	popeq	{r4, r5, fp, pc}
   1ab90:	mov	r0, #0
   1ab94:	ldrh	r1, [r5, #8]
   1ab98:	cmp	r1, #4
   1ab9c:	bne	1abb0 <__flatcc_fb_gen_c_builder@@Base+0x12f8>
   1aba0:	mov	r0, r4
   1aba4:	mov	r1, r5
   1aba8:	bl	1b968 <__flatcc_fb_gen_c_builder@@Base+0x20b0>
   1abac:	mov	r0, #1
   1abb0:	ldr	r5, [r5]
   1abb4:	cmp	r5, #0
   1abb8:	bne	1ab94 <__flatcc_fb_gen_c_builder@@Base+0x12dc>
   1abbc:	cmp	r0, #0
   1abc0:	beq	1abd4 <__flatcc_fb_gen_c_builder@@Base+0x131c>
   1abc4:	ldr	r1, [r4, #204]	; 0xcc
   1abc8:	mov	r0, #10
   1abcc:	pop	{r4, r5, fp, lr}
   1abd0:	b	148f0 <fputc@plt>
   1abd4:	pop	{r4, r5, fp, pc}
   1abd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1abdc:	add	fp, sp, #28
   1abe0:	sub	sp, sp, #628	; 0x274
   1abe4:	mov	r6, r1
   1abe8:	mov	r4, r0
   1abec:	sub	r9, fp, #264	; 0x108
   1abf0:	mov	r0, r9
   1abf4:	mov	r1, #0
   1abf8:	mov	r2, #220	; 0xdc
   1abfc:	bl	148a8 <memset@plt>
   1ac00:	add	r0, sp, #168	; 0xa8
   1ac04:	mov	r1, #0
   1ac08:	mov	r2, #220	; 0xdc
   1ac0c:	bl	148a8 <memset@plt>
   1ac10:	mov	r0, r6
   1ac14:	mov	r1, r9
   1ac18:	bl	19cc4 <__flatcc_fb_gen_c_builder@@Base+0x40c>
   1ac1c:	ldr	r7, [r6, #20]
   1ac20:	cmp	r7, #0
   1ac24:	beq	1b1c4 <__flatcc_fb_gen_c_builder@@Base+0x190c>
   1ac28:	sub	r5, fp, #40	; 0x28
   1ac2c:	sub	r6, fp, #36	; 0x24
   1ac30:	mov	r0, r7
   1ac34:	mov	r1, r5
   1ac38:	mov	r2, r6
   1ac3c:	bl	1a820 <__flatcc_fb_gen_c_builder@@Base+0xf68>
   1ac40:	ldrb	r0, [r7, #72]	; 0x48
   1ac44:	tst	r0, #4
   1ac48:	bne	1ad54 <__flatcc_fb_gen_c_builder@@Base+0x149c>
   1ac4c:	ldrh	r0, [r7, #24]
   1ac50:	sub	r0, r0, #7
   1ac54:	cmp	r0, #8
   1ac58:	bhi	1b1d8 <__flatcc_fb_gen_c_builder@@Base+0x1920>
   1ac5c:	add	r1, pc, #0
   1ac60:	ldr	pc, [r1, r0, lsl #2]
   1ac64:	andeq	sl, r1, r8, lsl #25
   1ac68:	andeq	sl, r1, r4, lsr #27
   1ac6c:	andeq	sl, r1, r8, asr #28
   1ac70:	andeq	sl, r1, r8, ror sp
   1ac74:	ldrdeq	fp, [r1], -r8
   1ac78:	ldrdeq	fp, [r1], -r8
   1ac7c:	ldrdeq	fp, [r1], -r8
   1ac80:	andeq	sl, r1, r8, lsl #30
   1ac84:	andeq	sl, r1, ip, ror lr
   1ac88:	ldr	r5, [r7, #16]
   1ac8c:	mov	r0, r5
   1ac90:	mov	r1, r4
   1ac94:	bl	1a794 <__flatcc_fb_gen_c_builder@@Base+0xedc>
   1ac98:	mov	r6, r0
   1ac9c:	mov	r0, r5
   1aca0:	bl	1a7ac <__flatcc_fb_gen_c_builder@@Base+0xef4>
   1aca4:	mov	r5, r0
   1aca8:	ldr	r0, [r7, #16]
   1acac:	bl	1a828 <__flatcc_fb_gen_c_builder@@Base+0xf70>
   1acb0:	ldr	r1, [r4, #204]	; 0xcc
   1acb4:	ldrd	r2, [r7, #96]	; 0x60
   1acb8:	ldr	sl, [fp, #-40]	; 0xffffffd8
   1acbc:	ldr	r8, [fp, #-36]	; 0xffffffdc
   1acc0:	str	r6, [sp, #32]
   1acc4:	sub	r6, fp, #36	; 0x24
   1acc8:	str	r5, [sp, #36]	; 0x24
   1accc:	sub	r5, fp, #40	; 0x28
   1acd0:	stm	sp, {r2, r3, r4, r9, sl}
   1acd4:	str	r8, [sp, #20]
   1acd8:	str	r4, [sp, #24]
   1acdc:	str	r0, [sp, #28]
   1ace0:	mov	r0, r1
   1ace4:	movw	r1, #26431	; 0x673f
   1ace8:	movt	r1, #4
   1acec:	mov	r2, r4
   1acf0:	bl	14890 <fprintf@plt>
   1acf4:	ldr	r0, [r7, #104]	; 0x68
   1acf8:	cmp	r0, #0
   1acfc:	beq	1b1b8 <__flatcc_fb_gen_c_builder@@Base+0x1900>
   1ad00:	ldrh	r1, [r0, #8]
   1ad04:	cmp	r1, #1
   1ad08:	beq	1af70 <__flatcc_fb_gen_c_builder@@Base+0x16b8>
   1ad0c:	cmp	r1, #0
   1ad10:	bne	1b2c8 <__flatcc_fb_gen_c_builder@@Base+0x1a10>
   1ad14:	add	r5, sp, #168	; 0xa8
   1ad18:	mov	r1, r5
   1ad1c:	bl	19cc4 <__flatcc_fb_gen_c_builder@@Base+0x40c>
   1ad20:	ldr	r0, [r4, #204]	; 0xcc
   1ad24:	stm	sp, {r9, sl}
   1ad28:	str	r8, [sp, #8]
   1ad2c:	str	r5, [sp, #12]
   1ad30:	str	r5, [sp, #16]
   1ad34:	str	r5, [sp, #20]
   1ad38:	movw	r1, #26486	; 0x6776
   1ad3c:	movt	r1, #4
   1ad40:	mov	r2, r4
   1ad44:	mov	r3, r4
   1ad48:	bl	14890 <fprintf@plt>
   1ad4c:	sub	r5, fp, #40	; 0x28
   1ad50:	b	1b1b8 <__flatcc_fb_gen_c_builder@@Base+0x1900>
   1ad54:	ldr	r0, [r4, #204]	; 0xcc
   1ad58:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ad5c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ad60:	str	r1, [sp]
   1ad64:	movw	r1, #26308	; 0x66c4
   1ad68:	movt	r1, #4
   1ad6c:	mov	r2, r9
   1ad70:	bl	14890 <fprintf@plt>
   1ad74:	b	1b1b8 <__flatcc_fb_gen_c_builder@@Base+0x1900>
   1ad78:	ldr	r0, [r4, #204]	; 0xcc
   1ad7c:	ldrd	r2, [r7, #96]	; 0x60
   1ad80:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ad84:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1ad88:	stm	sp, {r2, r3, r4, r9}
   1ad8c:	str	r1, [sp, #16]
   1ad90:	str	r6, [sp, #20]
   1ad94:	sub	r6, fp, #36	; 0x24
   1ad98:	movw	r1, #26758	; 0x6886
   1ad9c:	movt	r1, #4
   1ada0:	b	1ae70 <__flatcc_fb_gen_c_builder@@Base+0x15b8>
   1ada4:	ldr	sl, [r7, #16]
   1ada8:	mov	r0, sl
   1adac:	mov	r1, r4
   1adb0:	bl	1a794 <__flatcc_fb_gen_c_builder@@Base+0xedc>
   1adb4:	str	r0, [sp, #64]	; 0x40
   1adb8:	mov	r0, sl
   1adbc:	bl	1a7ac <__flatcc_fb_gen_c_builder@@Base+0xef4>
   1adc0:	mov	r8, r9
   1adc4:	mov	r9, r0
   1adc8:	ldr	r0, [r7, #16]
   1adcc:	bl	1a828 <__flatcc_fb_gen_c_builder@@Base+0xf70>
   1add0:	str	r0, [sp, #60]	; 0x3c
   1add4:	ldr	r0, [r7, #16]
   1add8:	add	r1, r7, #48	; 0x30
   1addc:	add	r2, sp, #68	; 0x44
   1ade0:	bl	1bb04 <__flatcc_fb_gen_c_builder@@Base+0x224c>
   1ade4:	add	r5, r7, #88	; 0x58
   1ade8:	ldm	r5, {r1, r2, r3, r5}
   1adec:	ldrh	r6, [r7, #74]	; 0x4a
   1adf0:	ldr	r0, [r4, #204]	; 0xcc
   1adf4:	ldr	ip, [fp, #-40]	; 0xffffffd8
   1adf8:	ldr	lr, [fp, #-36]	; 0xffffffdc
   1adfc:	ldr	sl, [sp, #64]	; 0x40
   1ae00:	str	sl, [sp, #32]
   1ae04:	str	r9, [sp, #36]	; 0x24
   1ae08:	mov	r9, r8
   1ae0c:	add	sl, sp, #40	; 0x28
   1ae10:	stm	sl, {r1, r2, r6}
   1ae14:	sub	r6, fp, #36	; 0x24
   1ae18:	add	r1, sp, #68	; 0x44
   1ae1c:	str	r1, [sp, #52]	; 0x34
   1ae20:	stm	sp, {r3, r5}
   1ae24:	sub	r5, fp, #40	; 0x28
   1ae28:	add	r1, sp, #8
   1ae2c:	stm	r1, {r4, r8, ip, lr}
   1ae30:	str	r4, [sp, #24]
   1ae34:	ldr	r1, [sp, #60]	; 0x3c
   1ae38:	str	r1, [sp, #28]
   1ae3c:	movw	r1, #26362	; 0x66fa
   1ae40:	movt	r1, #4
   1ae44:	b	1ae70 <__flatcc_fb_gen_c_builder@@Base+0x15b8>
   1ae48:	ldr	r0, [r4, #204]	; 0xcc
   1ae4c:	ldrd	r2, [r7, #96]	; 0x60
   1ae50:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ae54:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1ae58:	stm	sp, {r2, r3, r4, r9}
   1ae5c:	str	r1, [sp, #16]
   1ae60:	str	r6, [sp, #20]
   1ae64:	sub	r6, fp, #36	; 0x24
   1ae68:	movw	r1, #26801	; 0x68b1
   1ae6c:	movt	r1, #4
   1ae70:	mov	r2, r4
   1ae74:	bl	14890 <fprintf@plt>
   1ae78:	b	1b1b8 <__flatcc_fb_gen_c_builder@@Base+0x1900>
   1ae7c:	ldr	r0, [r7, #16]
   1ae80:	add	r1, sp, #168	; 0xa8
   1ae84:	bl	19cc4 <__flatcc_fb_gen_c_builder@@Base+0x40c>
   1ae88:	ldr	r0, [r7, #16]
   1ae8c:	ldrh	r1, [r0, #8]
   1ae90:	cmp	r1, #4
   1ae94:	bhi	1b228 <__flatcc_fb_gen_c_builder@@Base+0x1970>
   1ae98:	add	r2, pc, #0
   1ae9c:	ldr	pc, [r2, r1, lsl #2]
   1aea0:			; <UNDEFINED> instruction: 0x0001aeb4
   1aea4:	andeq	fp, r1, ip, ror r0
   1aea8:	andeq	fp, r1, r8, lsr #4
   1aeac:	andeq	fp, r1, r8, lsl r1
   1aeb0:			; <UNDEFINED> instruction: 0x0001afb8
   1aeb4:	ldrb	r0, [r0, #10]
   1aeb8:	tst	r0, #8
   1aebc:	beq	1aed8 <__flatcc_fb_gen_c_builder@@Base+0x1620>
   1aec0:	ldr	r3, [r4, #204]	; 0xcc
   1aec4:	movw	r0, #27072	; 0x69c0
   1aec8:	movt	r0, #4
   1aecc:	mov	r1, #32
   1aed0:	mov	r2, #1
   1aed4:	bl	14830 <fwrite@plt>
   1aed8:	ldr	r0, [r4, #204]	; 0xcc
   1aedc:	ldrd	r2, [r7, #96]	; 0x60
   1aee0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1aee4:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1aee8:	stm	sp, {r2, r3, r4, r9}
   1aeec:	str	r1, [sp, #16]
   1aef0:	str	r6, [sp, #20]
   1aef4:	add	r1, sp, #168	; 0xa8
   1aef8:	str	r1, [sp, #24]
   1aefc:	movw	r1, #27158	; 0x6a16
   1af00:	movt	r1, #4
   1af04:	b	1b1ac <__flatcc_fb_gen_c_builder@@Base+0x18f4>
   1af08:	ldr	r0, [r7, #16]
   1af0c:	add	r1, sp, #168	; 0xa8
   1af10:	bl	19cc4 <__flatcc_fb_gen_c_builder@@Base+0x40c>
   1af14:	ldr	r0, [r7, #16]
   1af18:	ldrh	r1, [r0, #8]
   1af1c:	cmp	r1, #4
   1af20:	bhi	1b278 <__flatcc_fb_gen_c_builder@@Base+0x19c0>
   1af24:	add	r2, pc, #0
   1af28:	ldr	pc, [r2, r1, lsl #2]
   1af2c:	andeq	sl, r1, r0, asr #30
   1af30:	ldrdeq	fp, [r1], -r4
   1af34:	andeq	fp, r1, r8, ror r2
   1af38:	andeq	fp, r1, r0, asr r1
   1af3c:	andeq	fp, r1, ip, lsl r0
   1af40:	ldr	r0, [r4, #204]	; 0xcc
   1af44:	ldrd	r2, [r7, #96]	; 0x60
   1af48:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1af4c:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1af50:	stm	sp, {r2, r3, r4, r9}
   1af54:	str	r1, [sp, #16]
   1af58:	str	r6, [sp, #20]
   1af5c:	add	r1, sp, #168	; 0xa8
   1af60:	str	r1, [sp, #24]
   1af64:	movw	r1, #26908	; 0x691c
   1af68:	movt	r1, #4
   1af6c:	b	1b1ac <__flatcc_fb_gen_c_builder@@Base+0x18f4>
   1af70:	add	r5, sp, #168	; 0xa8
   1af74:	mov	r1, r5
   1af78:	bl	19cc4 <__flatcc_fb_gen_c_builder@@Base+0x40c>
   1af7c:	ldr	r0, [r4, #204]	; 0xcc
   1af80:	ldr	r1, [r7, #104]	; 0x68
   1af84:	ldrh	r1, [r1, #104]	; 0x68
   1af88:	stm	sp, {r9, sl}
   1af8c:	str	r8, [sp, #8]
   1af90:	str	r5, [sp, #12]
   1af94:	str	r1, [sp, #16]
   1af98:	str	r5, [sp, #20]
   1af9c:	str	r5, [sp, #24]
   1afa0:	sub	r5, fp, #40	; 0x28
   1afa4:	movw	r1, #26567	; 0x67c7
   1afa8:	movt	r1, #4
   1afac:	mov	r2, r4
   1afb0:	mov	r3, r4
   1afb4:	b	1ad70 <__flatcc_fb_gen_c_builder@@Base+0x14b8>
   1afb8:	ldr	r0, [r4, #204]	; 0xcc
   1afbc:	ldrd	r2, [r7, #96]	; 0x60
   1afc0:	ldr	r5, [fp, #-40]	; 0xffffffd8
   1afc4:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1afc8:	stm	sp, {r2, r3, r4, r9}
   1afcc:	str	r5, [sp, #16]
   1afd0:	str	r6, [sp, #20]
   1afd4:	add	r1, sp, #168	; 0xa8
   1afd8:	str	r1, [sp, #24]
   1afdc:	movw	r1, #27269	; 0x6a85
   1afe0:	movt	r1, #4
   1afe4:	mov	r2, r4
   1afe8:	bl	14890 <fprintf@plt>
   1afec:	ldr	r0, [r7, #16]
   1aff0:	str	r0, [sp]
   1aff4:	mov	r0, #1
   1aff8:	str	r0, [sp, #4]
   1affc:	mov	r0, r4
   1b000:	mov	r1, r9
   1b004:	mov	r2, r5
   1b008:	sub	r5, fp, #40	; 0x28
   1b00c:	mov	r3, r6
   1b010:	sub	r6, fp, #36	; 0x24
   1b014:	bl	1bc2c <__flatcc_fb_gen_c_builder@@Base+0x2374>
   1b018:	b	1b1b8 <__flatcc_fb_gen_c_builder@@Base+0x1900>
   1b01c:	ldr	r0, [r4, #204]	; 0xcc
   1b020:	ldrd	r2, [r7, #96]	; 0x60
   1b024:	ldr	r5, [fp, #-40]	; 0xffffffd8
   1b028:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1b02c:	stm	sp, {r2, r3, r4, r9}
   1b030:	str	r5, [sp, #16]
   1b034:	str	r6, [sp, #20]
   1b038:	add	r1, sp, #168	; 0xa8
   1b03c:	str	r1, [sp, #24]
   1b040:	movw	r1, #27026	; 0x6992
   1b044:	movt	r1, #4
   1b048:	mov	r2, r4
   1b04c:	bl	14890 <fprintf@plt>
   1b050:	ldr	r0, [r7, #16]
   1b054:	str	r0, [sp]
   1b058:	mov	r0, #0
   1b05c:	str	r0, [sp, #4]
   1b060:	mov	r0, r4
   1b064:	mov	r1, r9
   1b068:	mov	r2, r5
   1b06c:	sub	r5, fp, #40	; 0x28
   1b070:	mov	r3, r6
   1b074:	bl	1bc2c <__flatcc_fb_gen_c_builder@@Base+0x2374>
   1b078:	b	1b1b4 <__flatcc_fb_gen_c_builder@@Base+0x18fc>
   1b07c:	ldrb	r0, [r0, #10]
   1b080:	tst	r0, #8
   1b084:	beq	1b0a0 <__flatcc_fb_gen_c_builder@@Base+0x17e8>
   1b088:	ldr	r3, [r4, #204]	; 0xcc
   1b08c:	movw	r0, #27072	; 0x69c0
   1b090:	movt	r0, #4
   1b094:	mov	r1, #32
   1b098:	mov	r2, #1
   1b09c:	bl	14830 <fwrite@plt>
   1b0a0:	ldr	r0, [r4, #204]	; 0xcc
   1b0a4:	ldrd	r2, [r7, #96]	; 0x60
   1b0a8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b0ac:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1b0b0:	stm	sp, {r2, r3, r4, r9}
   1b0b4:	str	r1, [sp, #16]
   1b0b8:	str	r6, [sp, #20]
   1b0bc:	add	r1, sp, #168	; 0xa8
   1b0c0:	str	r1, [sp, #24]
   1b0c4:	str	r1, [sp, #28]
   1b0c8:	movw	r1, #27105	; 0x69e1
   1b0cc:	movt	r1, #4
   1b0d0:	b	1b1ac <__flatcc_fb_gen_c_builder@@Base+0x18f4>
   1b0d4:	ldr	r0, [r4, #204]	; 0xcc
   1b0d8:	add	r6, r7, #88	; 0x58
   1b0dc:	ldm	r6, {r1, r2, r3, r6}
   1b0e0:	ldrh	r5, [r7, #74]	; 0x4a
   1b0e4:	ldr	ip, [fp, #-40]	; 0xffffffd8
   1b0e8:	ldr	lr, [fp, #-36]	; 0xffffffdc
   1b0ec:	add	r8, sp, #32
   1b0f0:	stm	r8, {r1, r2, r5}
   1b0f4:	sub	r5, fp, #40	; 0x28
   1b0f8:	stm	sp, {r3, r6}
   1b0fc:	add	r1, sp, #8
   1b100:	stm	r1, {r4, r9, ip, lr}
   1b104:	add	r1, sp, #168	; 0xa8
   1b108:	str	r1, [sp, #24]
   1b10c:	movw	r1, #26851	; 0x68e3
   1b110:	movt	r1, #4
   1b114:	b	1b1ac <__flatcc_fb_gen_c_builder@@Base+0x18f4>
   1b118:	ldr	r0, [r4, #204]	; 0xcc
   1b11c:	ldrd	r2, [r7, #96]	; 0x60
   1b120:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b124:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1b128:	stm	sp, {r2, r3, r4, r9}
   1b12c:	str	r1, [sp, #16]
   1b130:	str	r6, [sp, #20]
   1b134:	sub	r6, fp, #36	; 0x24
   1b138:	add	r1, sp, #168	; 0xa8
   1b13c:	str	r1, [sp, #24]
   1b140:	str	r1, [sp, #28]
   1b144:	movw	r1, #27211	; 0x6a4b
   1b148:	movt	r1, #4
   1b14c:	b	1ae70 <__flatcc_fb_gen_c_builder@@Base+0x15b8>
   1b150:	ldr	r0, [r0, #40]	; 0x28
   1b154:	add	r1, r7, #48	; 0x30
   1b158:	add	r8, sp, #68	; 0x44
   1b15c:	mov	r2, r8
   1b160:	bl	1bb04 <__flatcc_fb_gen_c_builder@@Base+0x224c>
   1b164:	add	r6, r7, #88	; 0x58
   1b168:	ldm	r6, {r1, r2, r3, r6}
   1b16c:	ldrh	r5, [r7, #74]	; 0x4a
   1b170:	ldr	r0, [r4, #204]	; 0xcc
   1b174:	ldr	ip, [fp, #-40]	; 0xffffffd8
   1b178:	ldr	lr, [fp, #-36]	; 0xffffffdc
   1b17c:	add	sl, sp, #32
   1b180:	stm	sl, {r1, r2, r5}
   1b184:	sub	r5, fp, #40	; 0x28
   1b188:	str	r8, [sp, #44]	; 0x2c
   1b18c:	stm	sp, {r3, r6}
   1b190:	add	r1, sp, #8
   1b194:	stm	r1, {r4, r9, ip, lr}
   1b198:	add	r1, sp, #168	; 0xa8
   1b19c:	str	r1, [sp, #24]
   1b1a0:	str	r1, [sp, #28]
   1b1a4:	movw	r1, #26954	; 0x694a
   1b1a8:	movt	r1, #4
   1b1ac:	mov	r2, r4
   1b1b0:	bl	14890 <fprintf@plt>
   1b1b4:	sub	r6, fp, #36	; 0x24
   1b1b8:	ldr	r7, [r7]
   1b1bc:	cmp	r7, #0
   1b1c0:	bne	1ac30 <__flatcc_fb_gen_c_builder@@Base+0x1378>
   1b1c4:	ldr	r1, [r4, #204]	; 0xcc
   1b1c8:	mov	r0, #10
   1b1cc:	bl	148f0 <fputc@plt>
   1b1d0:	sub	sp, fp, #28
   1b1d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b1d8:	movw	r0, #4264	; 0x10a8
   1b1dc:	movt	r0, #6
   1b1e0:	ldr	r0, [r0]
   1b1e4:	movw	r1, #51542	; 0xc956
   1b1e8:	movt	r1, #3
   1b1ec:	str	r1, [sp]
   1b1f0:	movw	r1, #21007	; 0x520f
   1b1f4:	movt	r1, #3
   1b1f8:	movw	r4, #24044	; 0x5dec
   1b1fc:	movt	r4, #4
   1b200:	mov	r2, r4
   1b204:	movw	r3, #1512	; 0x5e8
   1b208:	bl	14890 <fprintf@plt>
   1b20c:	movw	r0, #24925	; 0x615d
   1b210:	movt	r0, #4
   1b214:	movw	r3, #26692	; 0x6844
   1b218:	movt	r3, #4
   1b21c:	mov	r1, r4
   1b220:	movw	r2, #1512	; 0x5e8
   1b224:	bl	14950 <__assert_fail@plt>
   1b228:	movw	r0, #4264	; 0x10a8
   1b22c:	movt	r0, #6
   1b230:	ldr	r0, [r0]
   1b234:	movw	r1, #51348	; 0xc894
   1b238:	movt	r1, #3
   1b23c:	str	r1, [sp]
   1b240:	movw	r1, #21007	; 0x520f
   1b244:	movt	r1, #3
   1b248:	movw	r4, #24044	; 0x5dec
   1b24c:	movt	r4, #4
   1b250:	mov	r2, r4
   1b254:	movw	r3, #1507	; 0x5e3
   1b258:	bl	14890 <fprintf@plt>
   1b25c:	movw	r0, #24925	; 0x615d
   1b260:	movt	r0, #4
   1b264:	movw	r3, #26692	; 0x6844
   1b268:	movt	r3, #4
   1b26c:	mov	r1, r4
   1b270:	movw	r2, #1507	; 0x5e3
   1b274:	bl	14950 <__assert_fail@plt>
   1b278:	movw	r0, #4264	; 0x10a8
   1b27c:	movt	r0, #6
   1b280:	ldr	r0, [r0]
   1b284:	movw	r1, #51275	; 0xc84b
   1b288:	movt	r1, #3
   1b28c:	str	r1, [sp]
   1b290:	movw	r1, #21007	; 0x520f
   1b294:	movt	r1, #3
   1b298:	movw	r4, #24044	; 0x5dec
   1b29c:	movt	r4, #4
   1b2a0:	mov	r2, r4
   1b2a4:	mov	r3, #1472	; 0x5c0
   1b2a8:	bl	14890 <fprintf@plt>
   1b2ac:	movw	r0, #24925	; 0x615d
   1b2b0:	movt	r0, #4
   1b2b4:	movw	r3, #26692	; 0x6844
   1b2b8:	movt	r3, #4
   1b2bc:	mov	r1, r4
   1b2c0:	mov	r2, #1472	; 0x5c0
   1b2c4:	bl	14950 <__assert_fail@plt>
   1b2c8:	movw	r0, #4264	; 0x10a8
   1b2cc:	movt	r0, #6
   1b2d0:	ldr	r0, [r0]
   1b2d4:	movw	r1, #26653	; 0x681d
   1b2d8:	movt	r1, #4
   1b2dc:	str	r1, [sp]
   1b2e0:	movw	r1, #21007	; 0x520f
   1b2e4:	movt	r1, #3
   1b2e8:	movw	r4, #24044	; 0x5dec
   1b2ec:	movt	r4, #4
   1b2f0:	mov	r2, r4
   1b2f4:	movw	r3, #1430	; 0x596
   1b2f8:	bl	14890 <fprintf@plt>
   1b2fc:	movw	r0, #24925	; 0x615d
   1b300:	movt	r0, #4
   1b304:	movw	r3, #26692	; 0x6844
   1b308:	movt	r3, #4
   1b30c:	mov	r1, r4
   1b310:	movw	r2, #1430	; 0x596
   1b314:	bl	14950 <__assert_fail@plt>
   1b318:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b31c:	add	fp, sp, #28
   1b320:	sub	sp, sp, #260	; 0x104
   1b324:	mov	r7, r1
   1b328:	mov	r4, r0
   1b32c:	ldrh	r9, [r1, #92]	; 0x5c
   1b330:	add	r5, sp, #24
   1b334:	mov	r8, #0
   1b338:	mov	r0, r5
   1b33c:	mov	r1, #0
   1b340:	mov	r2, #220	; 0xdc
   1b344:	bl	148a8 <memset@plt>
   1b348:	mov	r0, r7
   1b34c:	mov	r1, r5
   1b350:	bl	19cc4 <__flatcc_fb_gen_c_builder@@Base+0x40c>
   1b354:	ldr	r0, [r4, #204]	; 0xcc
   1b358:	stm	sp, {r4, r5}
   1b35c:	movw	r1, #27705	; 0x6c39
   1b360:	movt	r1, #4
   1b364:	mov	r2, r5
   1b368:	mov	r3, r5
   1b36c:	bl	14890 <fprintf@plt>
   1b370:	ldr	r0, [r4, #204]	; 0xcc
   1b374:	movw	r1, #27772	; 0x6c7c
   1b378:	movt	r1, #4
   1b37c:	mov	r2, r5
   1b380:	bl	14890 <fprintf@plt>
   1b384:	ldr	r6, [r7, #24]
   1b388:	cmp	r6, #0
   1b38c:	beq	1b50c <__flatcc_fb_gen_c_builder@@Base+0x1c54>
   1b390:	str	r7, [sp, #20]
   1b394:	ands	r9, r9, #8
   1b398:	str	r9, [sp, #16]
   1b39c:	movwne	r9, #1
   1b3a0:	sub	sl, fp, #40	; 0x28
   1b3a4:	add	r7, sp, #24
   1b3a8:	ldrb	r0, [r6, #72]	; 0x48
   1b3ac:	tst	r0, #4
   1b3b0:	bne	1b458 <__flatcc_fb_gen_c_builder@@Base+0x1ba0>
   1b3b4:	mov	r0, r6
   1b3b8:	sub	r1, fp, #36	; 0x24
   1b3bc:	mov	r2, sl
   1b3c0:	bl	1a820 <__flatcc_fb_gen_c_builder@@Base+0xf68>
   1b3c4:	ldrh	r0, [r6, #24]
   1b3c8:	cmp	r0, #14
   1b3cc:	bne	1b3f0 <__flatcc_fb_gen_c_builder@@Base+0x1b38>
   1b3d0:	ldr	r0, [r6, #16]
   1b3d4:	ldrh	r0, [r0, #8]
   1b3d8:	cmp	r0, #4
   1b3dc:	moveq	r8, #1
   1b3e0:	sub	r0, r0, #4
   1b3e4:	movwne	r0, #1
   1b3e8:	orrs	r0, r0, r9
   1b3ec:	beq	1b424 <__flatcc_fb_gen_c_builder@@Base+0x1b6c>
   1b3f0:	ldr	r0, [r4, #204]	; 0xcc
   1b3f4:	ldr	r2, [r6, #96]	; 0x60
   1b3f8:	ldr	r1, [r6, #100]	; 0x64
   1b3fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b400:	ldr	r5, [fp, #-40]	; 0xffffffd8
   1b404:	str	r2, [sp, #8]
   1b408:	str	r1, [sp, #12]
   1b40c:	str	r5, [sp]
   1b410:	movw	r1, #27834	; 0x6cba
   1b414:	movt	r1, #4
   1b418:	mov	r2, r7
   1b41c:	bl	14890 <fprintf@plt>
   1b420:	b	1b458 <__flatcc_fb_gen_c_builder@@Base+0x1ba0>
   1b424:	ldr	r0, [r4, #204]	; 0xcc
   1b428:	ldr	r2, [r6, #96]	; 0x60
   1b42c:	ldr	r1, [r6, #100]	; 0x64
   1b430:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b434:	ldr	r5, [fp, #-40]	; 0xffffffd8
   1b438:	str	r2, [sp, #8]
   1b43c:	str	r1, [sp, #12]
   1b440:	str	r5, [sp]
   1b444:	movw	r1, #27794	; 0x6c92
   1b448:	movt	r1, #4
   1b44c:	mov	r2, r7
   1b450:	bl	14890 <fprintf@plt>
   1b454:	mov	r8, #1
   1b458:	ldr	r6, [r6, #108]	; 0x6c
   1b45c:	cmp	r6, #0
   1b460:	bne	1b3a8 <__flatcc_fb_gen_c_builder@@Base+0x1af0>
   1b464:	ldr	r0, [sp, #16]
   1b468:	cmp	r0, #0
   1b46c:	ldr	r0, [sp, #20]
   1b470:	bne	1b50c <__flatcc_fb_gen_c_builder@@Base+0x1c54>
   1b474:	cmp	r8, #0
   1b478:	ldrne	r5, [r0, #24]
   1b47c:	cmpne	r5, #0
   1b480:	beq	1b50c <__flatcc_fb_gen_c_builder@@Base+0x1c54>
   1b484:	sub	r8, fp, #36	; 0x24
   1b488:	sub	r9, fp, #40	; 0x28
   1b48c:	movw	sl, #27868	; 0x6cdc
   1b490:	movt	sl, #4
   1b494:	add	r7, sp, #24
   1b498:	b	1b4ec <__flatcc_fb_gen_c_builder@@Base+0x1c34>
   1b49c:	ldr	r0, [r5, #16]
   1b4a0:	ldrh	r0, [r0, #8]
   1b4a4:	cmp	r0, #4
   1b4a8:	bne	1b500 <__flatcc_fb_gen_c_builder@@Base+0x1c48>
   1b4ac:	mov	r0, r5
   1b4b0:	mov	r1, r8
   1b4b4:	mov	r2, r9
   1b4b8:	bl	1a820 <__flatcc_fb_gen_c_builder@@Base+0xf68>
   1b4bc:	ldr	r0, [r4, #204]	; 0xcc
   1b4c0:	ldr	r2, [r5, #96]	; 0x60
   1b4c4:	ldr	r1, [r5, #100]	; 0x64
   1b4c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b4cc:	ldr	r6, [fp, #-40]	; 0xffffffd8
   1b4d0:	str	r2, [sp, #8]
   1b4d4:	str	r1, [sp, #12]
   1b4d8:	str	r6, [sp]
   1b4dc:	mov	r1, sl
   1b4e0:	mov	r2, r7
   1b4e4:	bl	14890 <fprintf@plt>
   1b4e8:	b	1b500 <__flatcc_fb_gen_c_builder@@Base+0x1c48>
   1b4ec:	ldrb	r0, [r5, #72]	; 0x48
   1b4f0:	tst	r0, #4
   1b4f4:	ldrheq	r0, [r5, #24]
   1b4f8:	cmpeq	r0, #14
   1b4fc:	beq	1b49c <__flatcc_fb_gen_c_builder@@Base+0x1be4>
   1b500:	ldr	r5, [r5, #108]	; 0x6c
   1b504:	cmp	r5, #0
   1b508:	bne	1b4ec <__flatcc_fb_gen_c_builder@@Base+0x1c34>
   1b50c:	ldr	r0, [r4, #204]	; 0xcc
   1b510:	movw	r1, #27912	; 0x6d08
   1b514:	movt	r1, #4
   1b518:	add	r2, sp, #24
   1b51c:	bl	14890 <fprintf@plt>
   1b520:	sub	sp, fp, #28
   1b524:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b528:	push	{r4, r5, r6, sl, fp, lr}
   1b52c:	add	fp, sp, #16
   1b530:	sub	sp, sp, #240	; 0xf0
   1b534:	mov	r4, r1
   1b538:	mov	r5, r0
   1b53c:	add	r6, sp, #16
   1b540:	mov	r0, r6
   1b544:	mov	r1, #0
   1b548:	mov	r2, #220	; 0xdc
   1b54c:	bl	148a8 <memset@plt>
   1b550:	mov	r0, r4
   1b554:	mov	r1, r6
   1b558:	bl	19cc4 <__flatcc_fb_gen_c_builder@@Base+0x40c>
   1b55c:	ldr	r0, [r5, #204]	; 0xcc
   1b560:	str	r6, [sp]
   1b564:	str	r6, [sp, #4]
   1b568:	str	r6, [sp, #8]
   1b56c:	movw	r1, #27965	; 0x6d3d
   1b570:	movt	r1, #4
   1b574:	mov	r2, r5
   1b578:	mov	r3, r5
   1b57c:	bl	14890 <fprintf@plt>
   1b580:	sub	sp, fp, #16
   1b584:	pop	{r4, r5, r6, sl, fp, pc}
   1b588:	ldr	r1, [r0, #20]
   1b58c:	mov	r0, #0
   1b590:	cmp	r1, #0
   1b594:	bxeq	lr
   1b598:	mov	r2, #1
   1b59c:	ldrh	r3, [r1, #72]	; 0x48
   1b5a0:	bic	r3, r2, r3, lsr #2
   1b5a4:	add	r0, r0, r3
   1b5a8:	ldr	r1, [r1]
   1b5ac:	cmp	r1, #0
   1b5b0:	bne	1b59c <__flatcc_fb_gen_c_builder@@Base+0x1ce4>
   1b5b4:	bx	lr
   1b5b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b5bc:	add	fp, sp, #28
   1b5c0:	sub	sp, sp, #236	; 0xec
   1b5c4:	mov	r4, r2
   1b5c8:	mov	r7, r1
   1b5cc:	mov	r5, r0
   1b5d0:	add	r0, sp, #8
   1b5d4:	mov	r6, #0
   1b5d8:	mov	r1, #0
   1b5dc:	mov	r2, #220	; 0xdc
   1b5e0:	bl	148a8 <memset@plt>
   1b5e4:	ldr	r7, [r7, #20]
   1b5e8:	cmp	r7, #0
   1b5ec:	beq	1b804 <__flatcc_fb_gen_c_builder@@Base+0x1f4c>
   1b5f0:	add	r8, sp, #8
   1b5f4:	ldrb	r0, [r7, #72]	; 0x48
   1b5f8:	tst	r0, #4
   1b5fc:	bne	1b7f8 <__flatcc_fb_gen_c_builder@@Base+0x1f40>
   1b600:	mov	r0, r5
   1b604:	mov	r1, r6
   1b608:	mov	r2, r4
   1b60c:	mov	r3, #1
   1b610:	bl	1a70c <__flatcc_fb_gen_c_builder@@Base+0xe54>
   1b614:	ldrh	r0, [r7, #24]
   1b618:	sub	r0, r0, #7
   1b61c:	cmp	r0, #8
   1b620:	bhi	1b80c <__flatcc_fb_gen_c_builder@@Base+0x1f54>
   1b624:	add	r6, r6, #1
   1b628:	add	r1, pc, #0
   1b62c:	ldr	pc, [r1, r0, lsl #2]
   1b630:	andeq	fp, r1, r4, asr r6
   1b634:	muleq	r1, ip, r6
   1b638:	andeq	fp, r1, r4, ror #13
   1b63c:	andeq	fp, r1, r4, lsl #13
   1b640:	andeq	fp, r1, ip, lsl #16
   1b644:	andeq	fp, r1, ip, lsl #16
   1b648:	andeq	fp, r1, ip, lsl #16
   1b64c:	andeq	fp, r1, r4, asr #14
   1b650:	andeq	fp, r1, r0, lsl #14
   1b654:	ldr	r0, [r7, #16]
   1b658:	bl	1a828 <__flatcc_fb_gen_c_builder@@Base+0xf70>
   1b65c:	mov	r3, r0
   1b660:	ldr	r0, [r5, #204]	; 0xcc
   1b664:	ldr	r2, [r7, #96]	; 0x60
   1b668:	ldr	r1, [r7, #100]	; 0x64
   1b66c:	str	r2, [sp]
   1b670:	str	r1, [sp, #4]
   1b674:	movw	r1, #25726	; 0x647e
   1b678:	movt	r1, #4
   1b67c:	mov	r2, r5
   1b680:	b	1b6dc <__flatcc_fb_gen_c_builder@@Base+0x1e24>
   1b684:	ldr	r0, [r5, #204]	; 0xcc
   1b688:	ldrd	r2, [r7, #96]	; 0x60
   1b68c:	stm	sp, {r2, r3}
   1b690:	movw	r1, #25747	; 0x6493
   1b694:	movt	r1, #4
   1b698:	b	1b6f8 <__flatcc_fb_gen_c_builder@@Base+0x1e40>
   1b69c:	ldr	r9, [r7, #16]
   1b6a0:	mov	r0, r9
   1b6a4:	mov	r1, r5
   1b6a8:	bl	1a794 <__flatcc_fb_gen_c_builder@@Base+0xedc>
   1b6ac:	mov	sl, r0
   1b6b0:	mov	r0, r9
   1b6b4:	bl	1a7ac <__flatcc_fb_gen_c_builder@@Base+0xef4>
   1b6b8:	mov	r3, r0
   1b6bc:	ldr	r0, [r5, #204]	; 0xcc
   1b6c0:	ldr	r2, [r7, #96]	; 0x60
   1b6c4:	ldr	r1, [r7, #100]	; 0x64
   1b6c8:	str	r2, [sp]
   1b6cc:	str	r1, [sp, #4]
   1b6d0:	movw	r1, #25715	; 0x6473
   1b6d4:	movt	r1, #4
   1b6d8:	mov	r2, sl
   1b6dc:	bl	14890 <fprintf@plt>
   1b6e0:	b	1b7f8 <__flatcc_fb_gen_c_builder@@Base+0x1f40>
   1b6e4:	ldr	r0, [r5, #204]	; 0xcc
   1b6e8:	ldrd	r2, [r7, #96]	; 0x60
   1b6ec:	stm	sp, {r2, r3}
   1b6f0:	movw	r1, #25768	; 0x64a8
   1b6f4:	movt	r1, #4
   1b6f8:	mov	r2, r5
   1b6fc:	b	1b7f4 <__flatcc_fb_gen_c_builder@@Base+0x1f3c>
   1b700:	ldr	r0, [r7, #16]
   1b704:	mov	r1, r8
   1b708:	bl	19cc4 <__flatcc_fb_gen_c_builder@@Base+0x40c>
   1b70c:	ldr	r0, [r7, #16]
   1b710:	ldrh	r0, [r0, #8]
   1b714:	cmp	r0, #2
   1b718:	bcc	1b72c <__flatcc_fb_gen_c_builder@@Base+0x1e74>
   1b71c:	cmp	r0, #4
   1b720:	beq	1b794 <__flatcc_fb_gen_c_builder@@Base+0x1edc>
   1b724:	cmp	r0, #3
   1b728:	bne	1b8ac <__flatcc_fb_gen_c_builder@@Base+0x1ff4>
   1b72c:	ldr	r0, [r5, #204]	; 0xcc
   1b730:	ldrd	r2, [r7, #96]	; 0x60
   1b734:	stm	sp, {r2, r3}
   1b738:	movw	r1, #25728	; 0x6480
   1b73c:	movt	r1, #4
   1b740:	b	1b7f0 <__flatcc_fb_gen_c_builder@@Base+0x1f38>
   1b744:	ldr	r0, [r7, #16]
   1b748:	mov	r1, r8
   1b74c:	bl	19cc4 <__flatcc_fb_gen_c_builder@@Base+0x40c>
   1b750:	ldr	r0, [r7, #16]
   1b754:	ldrh	r0, [r0, #8]
   1b758:	cmp	r0, #4
   1b75c:	bhi	1b85c <__flatcc_fb_gen_c_builder@@Base+0x1fa4>
   1b760:	add	r1, pc, #0
   1b764:	ldr	pc, [r1, r0, lsl #2]
   1b768:	andeq	fp, r1, ip, ror r7
   1b76c:	andeq	fp, r1, r4, asr #15
   1b770:	andeq	fp, r1, ip, asr r8
   1b774:	ldrdeq	fp, [r1], -ip
   1b778:	andeq	fp, r1, ip, lsr #15
   1b77c:	ldr	r0, [r5, #204]	; 0xcc
   1b780:	ldrd	r2, [r7, #96]	; 0x60
   1b784:	stm	sp, {r2, r3}
   1b788:	movw	r1, #25492	; 0x6394
   1b78c:	movt	r1, #4
   1b790:	b	1b7f0 <__flatcc_fb_gen_c_builder@@Base+0x1f38>
   1b794:	ldr	r0, [r5, #204]	; 0xcc
   1b798:	ldrd	r2, [r7, #96]	; 0x60
   1b79c:	stm	sp, {r2, r3}
   1b7a0:	movw	r1, #25646	; 0x642e
   1b7a4:	movt	r1, #4
   1b7a8:	b	1b7f0 <__flatcc_fb_gen_c_builder@@Base+0x1f38>
   1b7ac:	ldr	r0, [r5, #204]	; 0xcc
   1b7b0:	ldrd	r2, [r7, #96]	; 0x60
   1b7b4:	stm	sp, {r2, r3}
   1b7b8:	movw	r1, #25507	; 0x63a3
   1b7bc:	movt	r1, #4
   1b7c0:	b	1b7f0 <__flatcc_fb_gen_c_builder@@Base+0x1f38>
   1b7c4:	ldr	r0, [r5, #204]	; 0xcc
   1b7c8:	ldrd	r2, [r7, #96]	; 0x60
   1b7cc:	stm	sp, {r2, r3}
   1b7d0:	movw	r1, #25464	; 0x6378
   1b7d4:	movt	r1, #4
   1b7d8:	b	1b7f0 <__flatcc_fb_gen_c_builder@@Base+0x1f38>
   1b7dc:	ldr	r0, [r5, #204]	; 0xcc
   1b7e0:	ldrd	r2, [r7, #96]	; 0x60
   1b7e4:	stm	sp, {r2, r3}
   1b7e8:	movw	r1, #25476	; 0x6384
   1b7ec:	movt	r1, #4
   1b7f0:	mov	r2, r8
   1b7f4:	bl	14890 <fprintf@plt>
   1b7f8:	ldr	r7, [r7]
   1b7fc:	cmp	r7, #0
   1b800:	bne	1b5f4 <__flatcc_fb_gen_c_builder@@Base+0x1d3c>
   1b804:	sub	sp, fp, #28
   1b808:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b80c:	movw	r0, #4264	; 0x10a8
   1b810:	movt	r0, #6
   1b814:	ldr	r0, [r0]
   1b818:	movw	r1, #24640	; 0x6040
   1b81c:	movt	r1, #4
   1b820:	str	r1, [sp]
   1b824:	movw	r1, #21007	; 0x520f
   1b828:	movt	r1, #3
   1b82c:	movw	r4, #24044	; 0x5dec
   1b830:	movt	r4, #4
   1b834:	mov	r2, r4
   1b838:	movw	r3, #1209	; 0x4b9
   1b83c:	bl	14890 <fprintf@plt>
   1b840:	movw	r0, #24925	; 0x615d
   1b844:	movt	r0, #4
   1b848:	movw	r3, #25572	; 0x63e4
   1b84c:	movt	r3, #4
   1b850:	mov	r1, r4
   1b854:	movw	r2, #1209	; 0x4b9
   1b858:	bl	14950 <__assert_fail@plt>
   1b85c:	movw	r0, #4264	; 0x10a8
   1b860:	movt	r0, #6
   1b864:	ldr	r0, [r0]
   1b868:	movw	r1, #25528	; 0x63b8
   1b86c:	movt	r1, #4
   1b870:	str	r1, [sp]
   1b874:	movw	r1, #21007	; 0x520f
   1b878:	movt	r1, #3
   1b87c:	movw	r4, #24044	; 0x5dec
   1b880:	movt	r4, #4
   1b884:	mov	r2, r4
   1b888:	movw	r3, #1173	; 0x495
   1b88c:	bl	14890 <fprintf@plt>
   1b890:	movw	r0, #24925	; 0x615d
   1b894:	movt	r0, #4
   1b898:	movw	r3, #25572	; 0x63e4
   1b89c:	movt	r3, #4
   1b8a0:	mov	r1, r4
   1b8a4:	movw	r2, #1173	; 0x495
   1b8a8:	bl	14950 <__assert_fail@plt>
   1b8ac:	movw	r0, #4264	; 0x10a8
   1b8b0:	movt	r0, #6
   1b8b4:	ldr	r0, [r0]
   1b8b8:	movw	r1, #25671	; 0x6447
   1b8bc:	movt	r1, #4
   1b8c0:	str	r1, [sp]
   1b8c4:	movw	r1, #21007	; 0x520f
   1b8c8:	movt	r1, #3
   1b8cc:	movw	r4, #24044	; 0x5dec
   1b8d0:	movt	r4, #4
   1b8d4:	mov	r2, r4
   1b8d8:	movw	r3, #1189	; 0x4a5
   1b8dc:	bl	14890 <fprintf@plt>
   1b8e0:	movw	r0, #24925	; 0x615d
   1b8e4:	movt	r0, #4
   1b8e8:	movw	r3, #25572	; 0x63e4
   1b8ec:	movt	r3, #4
   1b8f0:	mov	r1, r4
   1b8f4:	movw	r2, #1189	; 0x4a5
   1b8f8:	bl	14950 <__assert_fail@plt>
   1b8fc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1b900:	add	fp, sp, #24
   1b904:	ldr	r7, [r1, #20]
   1b908:	cmp	r7, #0
   1b90c:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   1b910:	mov	r4, r2
   1b914:	mov	r5, r0
   1b918:	mov	r6, #0
   1b91c:	movw	r8, #25720	; 0x6478
   1b920:	movt	r8, #4
   1b924:	ldrb	r0, [r7, #72]	; 0x48
   1b928:	tst	r0, #4
   1b92c:	bne	1b958 <__flatcc_fb_gen_c_builder@@Base+0x20a0>
   1b930:	mov	r0, r5
   1b934:	mov	r1, r6
   1b938:	mov	r2, r4
   1b93c:	mov	r3, #1
   1b940:	bl	1a70c <__flatcc_fb_gen_c_builder@@Base+0xe54>
   1b944:	ldrd	r2, [r7, #96]	; 0x60
   1b948:	ldr	r0, [r5, #204]	; 0xcc
   1b94c:	mov	r1, r8
   1b950:	bl	14890 <fprintf@plt>
   1b954:	add	r6, r6, #1
   1b958:	ldr	r7, [r7]
   1b95c:	cmp	r7, #0
   1b960:	bne	1b924 <__flatcc_fb_gen_c_builder@@Base+0x206c>
   1b964:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1b968:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b96c:	add	fp, sp, #28
   1b970:	sub	sp, sp, #492	; 0x1ec
   1b974:	mov	r6, r1
   1b978:	mov	r4, r0
   1b97c:	add	r5, sp, #256	; 0x100
   1b980:	mov	r0, r5
   1b984:	mov	r1, #0
   1b988:	mov	r2, #220	; 0xdc
   1b98c:	bl	148a8 <memset@plt>
   1b990:	add	r9, sp, #32
   1b994:	mov	r0, r9
   1b998:	mov	r1, #0
   1b99c:	mov	r2, #220	; 0xdc
   1b9a0:	bl	148a8 <memset@plt>
   1b9a4:	mov	r0, r6
   1b9a8:	mov	r1, r5
   1b9ac:	bl	19cc4 <__flatcc_fb_gen_c_builder@@Base+0x40c>
   1b9b0:	ldr	r7, [r6, #20]
   1b9b4:	cmp	r7, #0
   1b9b8:	beq	1ba90 <__flatcc_fb_gen_c_builder@@Base+0x21d8>
   1b9bc:	sub	sl, fp, #40	; 0x28
   1b9c0:	sub	r6, fp, #36	; 0x24
   1b9c4:	movw	r8, #25793	; 0x64c1
   1b9c8:	movt	r8, #4
   1b9cc:	ldrh	r0, [r7, #24]
   1b9d0:	cmp	r0, #0
   1b9d4:	beq	1ba64 <__flatcc_fb_gen_c_builder@@Base+0x21ac>
   1b9d8:	cmp	r0, #10
   1b9dc:	beq	1ba2c <__flatcc_fb_gen_c_builder@@Base+0x2174>
   1b9e0:	cmp	r0, #14
   1b9e4:	bne	1bab4 <__flatcc_fb_gen_c_builder@@Base+0x21fc>
   1b9e8:	ldr	r0, [r7, #16]
   1b9ec:	mov	r1, r9
   1b9f0:	bl	19cc4 <__flatcc_fb_gen_c_builder@@Base+0x40c>
   1b9f4:	mov	r0, r7
   1b9f8:	mov	r1, sl
   1b9fc:	mov	r2, r6
   1ba00:	bl	1a820 <__flatcc_fb_gen_c_builder@@Base+0xf68>
   1ba04:	ldr	r0, [r4, #204]	; 0xcc
   1ba08:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ba0c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ba10:	stm	sp, {r1, r2, r9}
   1ba14:	str	r5, [sp, #12]
   1ba18:	str	r5, [sp, #16]
   1ba1c:	str	r1, [sp, #20]
   1ba20:	str	r2, [sp, #24]
   1ba24:	mov	r1, r8
   1ba28:	b	1ba78 <__flatcc_fb_gen_c_builder@@Base+0x21c0>
   1ba2c:	mov	r0, r7
   1ba30:	mov	r1, sl
   1ba34:	mov	r2, r6
   1ba38:	bl	1a820 <__flatcc_fb_gen_c_builder@@Base+0xf68>
   1ba3c:	ldr	r0, [r4, #204]	; 0xcc
   1ba40:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ba44:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ba48:	stm	sp, {r1, r2, r4, r5}
   1ba4c:	str	r5, [sp, #16]
   1ba50:	str	r1, [sp, #20]
   1ba54:	str	r2, [sp, #24]
   1ba58:	movw	r1, #25925	; 0x6545
   1ba5c:	movt	r1, #4
   1ba60:	b	1ba78 <__flatcc_fb_gen_c_builder@@Base+0x21c0>
   1ba64:	ldr	r0, [r4, #204]	; 0xcc
   1ba68:	str	r5, [sp]
   1ba6c:	str	r5, [sp, #4]
   1ba70:	movw	r1, #26063	; 0x65cf
   1ba74:	movt	r1, #4
   1ba78:	mov	r2, r5
   1ba7c:	mov	r3, r5
   1ba80:	bl	14890 <fprintf@plt>
   1ba84:	ldr	r7, [r7]
   1ba88:	cmp	r7, #0
   1ba8c:	bne	1b9cc <__flatcc_fb_gen_c_builder@@Base+0x2114>
   1ba90:	ldr	r0, [r4, #204]	; 0xcc
   1ba94:	str	r5, [sp]
   1ba98:	movw	r1, #26276	; 0x66a4
   1ba9c:	movt	r1, #4
   1baa0:	mov	r2, r4
   1baa4:	mov	r3, r4
   1baa8:	bl	14890 <fprintf@plt>
   1baac:	sub	sp, fp, #28
   1bab0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bab4:	movw	r0, #4264	; 0x10a8
   1bab8:	movt	r0, #6
   1babc:	ldr	r0, [r0]
   1bac0:	movw	r1, #26181	; 0x6645
   1bac4:	movt	r1, #4
   1bac8:	str	r1, [sp]
   1bacc:	movw	r1, #21007	; 0x520f
   1bad0:	movt	r1, #3
   1bad4:	movw	r4, #24044	; 0x5dec
   1bad8:	movt	r4, #4
   1badc:	mov	r2, r4
   1bae0:	movw	r3, #1608	; 0x648
   1bae4:	bl	14890 <fprintf@plt>
   1bae8:	movw	r0, #24925	; 0x615d
   1baec:	movt	r0, #4
   1baf0:	movw	r3, #26225	; 0x6671
   1baf4:	movt	r3, #4
   1baf8:	mov	r1, r4
   1bafc:	movw	r2, #1608	; 0x648
   1bb00:	bl	14950 <__assert_fail@plt>
   1bb04:	push	{r4, r5, fp, lr}
   1bb08:	add	fp, sp, #8
   1bb0c:	sub	sp, sp, #8
   1bb10:	mov	r5, r1
   1bb14:	ldrh	r1, [r1, #8]
   1bb18:	sub	r1, r1, #3
   1bb1c:	cmp	r1, #3
   1bb20:	bhi	1bbdc <__flatcc_fb_gen_c_builder@@Base+0x2324>
   1bb24:	mov	r4, r2
   1bb28:	add	r2, pc, #0
   1bb2c:	ldr	pc, [r2, r1, lsl #2]
   1bb30:	andeq	fp, r1, r0, asr #22
   1bb34:	muleq	r1, r8, fp
   1bb38:	andeq	fp, r1, r4, ror #22
   1bb3c:	andeq	fp, r1, r0, lsl #23
   1bb40:	vldr	d16, [r5]
   1bb44:	cmp	r0, #11
   1bb48:	bne	1bbc0 <__flatcc_fb_gen_c_builder@@Base+0x2308>
   1bb4c:	vcvt.f32.f64	s0, d16
   1bb50:	vcvt.f64.f32	d16, s0
   1bb54:	vmov	r2, r3, d16
   1bb58:	movw	r1, #47741	; 0xba7d
   1bb5c:	movt	r1, #3
   1bb60:	b	1bbcc <__flatcc_fb_gen_c_builder@@Base+0x2314>
   1bb64:	bl	1be78 <__flatcc_fb_gen_c_builder@@Base+0x25c0>
   1bb68:	mov	r2, r0
   1bb6c:	ldrd	r0, [r5]
   1bb70:	stm	sp, {r0, r1}
   1bb74:	movw	r1, #47716	; 0xba64
   1bb78:	movt	r1, #3
   1bb7c:	b	1bbb0 <__flatcc_fb_gen_c_builder@@Base+0x22f8>
   1bb80:	bl	1be78 <__flatcc_fb_gen_c_builder@@Base+0x25c0>
   1bb84:	mov	r2, r0
   1bb88:	ldrb	r3, [r5]
   1bb8c:	movw	r1, #47734	; 0xba76
   1bb90:	movt	r1, #3
   1bb94:	b	1bbcc <__flatcc_fb_gen_c_builder@@Base+0x2314>
   1bb98:	bl	1be78 <__flatcc_fb_gen_c_builder@@Base+0x25c0>
   1bb9c:	mov	r2, r0
   1bba0:	ldrd	r0, [r5]
   1bba4:	stm	sp, {r0, r1}
   1bba8:	movw	r1, #47725	; 0xba6d
   1bbac:	movt	r1, #3
   1bbb0:	mov	r0, r4
   1bbb4:	bl	148fc <sprintf@plt>
   1bbb8:	sub	sp, fp, #8
   1bbbc:	pop	{r4, r5, fp, pc}
   1bbc0:	vmov	r2, r3, d16
   1bbc4:	movw	r1, #47745	; 0xba81
   1bbc8:	movt	r1, #3
   1bbcc:	mov	r0, r4
   1bbd0:	sub	sp, fp, #8
   1bbd4:	pop	{r4, r5, fp, lr}
   1bbd8:	b	148fc <sprintf@plt>
   1bbdc:	movw	r0, #4264	; 0x10a8
   1bbe0:	movt	r0, #6
   1bbe4:	ldr	r0, [r0]
   1bbe8:	movw	r1, #47600	; 0xb9f0
   1bbec:	movt	r1, #3
   1bbf0:	str	r1, [sp]
   1bbf4:	movw	r1, #21007	; 0x520f
   1bbf8:	movt	r1, #3
   1bbfc:	movw	r4, #47527	; 0xb9a7
   1bc00:	movt	r4, #3
   1bc04:	mov	r2, r4
   1bc08:	mov	r3, #260	; 0x104
   1bc0c:	bl	14890 <fprintf@plt>
   1bc10:	movw	r0, #24925	; 0x615d
   1bc14:	movt	r0, #4
   1bc18:	movw	r3, #47749	; 0xba85
   1bc1c:	movt	r3, #3
   1bc20:	mov	r1, r4
   1bc24:	mov	r2, #260	; 0x104
   1bc28:	bl	14950 <__assert_fail@plt>
   1bc2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bc30:	add	fp, sp, #28
   1bc34:	sub	sp, sp, #500	; 0x1f4
   1bc38:	str	r3, [sp, #36]	; 0x24
   1bc3c:	str	r2, [sp, #32]
   1bc40:	mov	sl, r1
   1bc44:	mov	r7, r0
   1bc48:	add	r4, sp, #264	; 0x108
   1bc4c:	mov	r0, r4
   1bc50:	mov	r1, #0
   1bc54:	mov	r2, #220	; 0xdc
   1bc58:	bl	148a8 <memset@plt>
   1bc5c:	add	r0, sp, #40	; 0x28
   1bc60:	mov	r1, #0
   1bc64:	mov	r2, #220	; 0xdc
   1bc68:	bl	148a8 <memset@plt>
   1bc6c:	ldr	r8, [fp, #8]
   1bc70:	mov	r0, r8
   1bc74:	mov	r1, r4
   1bc78:	bl	19cc4 <__flatcc_fb_gen_c_builder@@Base+0x40c>
   1bc7c:	ldr	r0, [fp, #12]
   1bc80:	movw	r1, #57263	; 0xdfaf
   1bc84:	movt	r1, #4
   1bc88:	movw	r4, #27322	; 0x6aba
   1bc8c:	movt	r4, #4
   1bc90:	cmp	r0, #0
   1bc94:	moveq	r4, r1
   1bc98:	ldr	r9, [r8, #20]
   1bc9c:	cmp	r9, #0
   1bca0:	beq	1bdd0 <__flatcc_fb_gen_c_builder@@Base+0x2518>
   1bca4:	sub	r5, fp, #40	; 0x28
   1bca8:	sub	r6, fp, #36	; 0x24
   1bcac:	mov	r0, r9
   1bcb0:	mov	r1, r5
   1bcb4:	mov	r2, r6
   1bcb8:	bl	1a820 <__flatcc_fb_gen_c_builder@@Base+0xf68>
   1bcbc:	ldrh	r0, [r9, #24]
   1bcc0:	cmp	r0, #0
   1bcc4:	beq	1bdc4 <__flatcc_fb_gen_c_builder@@Base+0x250c>
   1bcc8:	cmp	r0, #10
   1bccc:	beq	1bd44 <__flatcc_fb_gen_c_builder@@Base+0x248c>
   1bcd0:	cmp	r0, #14
   1bcd4:	add	r8, sp, #40	; 0x28
   1bcd8:	bne	1bdd8 <__flatcc_fb_gen_c_builder@@Base+0x2520>
   1bcdc:	ldr	r0, [r9, #16]
   1bce0:	mov	r1, r8
   1bce4:	bl	19cc4 <__flatcc_fb_gen_c_builder@@Base+0x40c>
   1bce8:	ldr	r0, [r9, #16]
   1bcec:	ldrh	r0, [r0, #8]
   1bcf0:	cmp	r0, #1
   1bcf4:	beq	1bd80 <__flatcc_fb_gen_c_builder@@Base+0x24c8>
   1bcf8:	cmp	r0, #0
   1bcfc:	bne	1be28 <__flatcc_fb_gen_c_builder@@Base+0x2570>
   1bd00:	ldr	r0, [r7, #204]	; 0xcc
   1bd04:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1bd08:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1bd0c:	stm	sp, {r7, sl}
   1bd10:	ldr	r3, [sp, #32]
   1bd14:	str	r3, [sp, #8]
   1bd18:	ldr	r3, [sp, #36]	; 0x24
   1bd1c:	str	r3, [sp, #12]
   1bd20:	add	r3, sp, #264	; 0x108
   1bd24:	str	r3, [sp, #16]
   1bd28:	str	r1, [sp, #20]
   1bd2c:	str	r2, [sp, #24]
   1bd30:	add	r1, sp, #40	; 0x28
   1bd34:	str	r1, [sp, #28]
   1bd38:	movw	r1, #27335	; 0x6ac7
   1bd3c:	movt	r1, #4
   1bd40:	b	1bdb8 <__flatcc_fb_gen_c_builder@@Base+0x2500>
   1bd44:	ldr	r0, [r7, #204]	; 0xcc
   1bd48:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1bd4c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1bd50:	stm	sp, {r7, sl}
   1bd54:	ldr	r3, [sp, #32]
   1bd58:	str	r3, [sp, #8]
   1bd5c:	ldr	r3, [sp, #36]	; 0x24
   1bd60:	str	r3, [sp, #12]
   1bd64:	add	r3, sp, #264	; 0x108
   1bd68:	str	r3, [sp, #16]
   1bd6c:	str	r1, [sp, #20]
   1bd70:	str	r2, [sp, #24]
   1bd74:	movw	r1, #27604	; 0x6bd4
   1bd78:	movt	r1, #4
   1bd7c:	b	1bdb8 <__flatcc_fb_gen_c_builder@@Base+0x2500>
   1bd80:	ldr	r0, [r7, #204]	; 0xcc
   1bd84:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1bd88:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1bd8c:	stm	sp, {r7, sl}
   1bd90:	ldr	r3, [sp, #32]
   1bd94:	str	r3, [sp, #8]
   1bd98:	ldr	r3, [sp, #36]	; 0x24
   1bd9c:	str	r3, [sp, #12]
   1bda0:	add	r3, sp, #264	; 0x108
   1bda4:	str	r3, [sp, #16]
   1bda8:	add	r3, sp, #20
   1bdac:	stm	r3, {r1, r2, r8}
   1bdb0:	movw	r1, #27394	; 0x6b02
   1bdb4:	movt	r1, #4
   1bdb8:	mov	r2, r7
   1bdbc:	mov	r3, r4
   1bdc0:	bl	14890 <fprintf@plt>
   1bdc4:	ldr	r9, [r9]
   1bdc8:	cmp	r9, #0
   1bdcc:	bne	1bcac <__flatcc_fb_gen_c_builder@@Base+0x23f4>
   1bdd0:	sub	sp, fp, #28
   1bdd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bdd8:	movw	r0, #4264	; 0x10a8
   1bddc:	movt	r0, #6
   1bde0:	ldr	r0, [r0]
   1bde4:	movw	r1, #27660	; 0x6c0c
   1bde8:	movt	r1, #4
   1bdec:	str	r1, [sp]
   1bdf0:	movw	r1, #21007	; 0x520f
   1bdf4:	movt	r1, #3
   1bdf8:	movw	r4, #24044	; 0x5dec
   1bdfc:	movt	r4, #4
   1be00:	mov	r2, r4
   1be04:	movw	r3, #1368	; 0x558
   1be08:	bl	14890 <fprintf@plt>
   1be0c:	movw	r0, #24925	; 0x615d
   1be10:	movt	r0, #4
   1be14:	movw	r3, #27508	; 0x6b74
   1be18:	movt	r3, #4
   1be1c:	mov	r1, r4
   1be20:	movw	r2, #1368	; 0x558
   1be24:	bl	14950 <__assert_fail@plt>
   1be28:	movw	r0, #4264	; 0x10a8
   1be2c:	movt	r0, #6
   1be30:	ldr	r0, [r0]
   1be34:	movw	r1, #27454	; 0x6b3e
   1be38:	movt	r1, #4
   1be3c:	str	r1, [sp]
   1be40:	movw	r1, #21007	; 0x520f
   1be44:	movt	r1, #3
   1be48:	movw	r4, #24044	; 0x5dec
   1be4c:	movt	r4, #4
   1be50:	mov	r2, r4
   1be54:	movw	r3, #1358	; 0x54e
   1be58:	bl	14890 <fprintf@plt>
   1be5c:	movw	r0, #24925	; 0x615d
   1be60:	movt	r0, #4
   1be64:	movw	r3, #27508	; 0x6b74
   1be68:	movt	r3, #4
   1be6c:	mov	r1, r4
   1be70:	movw	r2, #1358	; 0x54e
   1be74:	bl	14950 <__assert_fail@plt>
   1be78:	sub	r0, r0, #1
   1be7c:	cmp	r0, #9
   1be80:	movwcc	r1, #28160	; 0x6e00
   1be84:	movtcc	r1, #4
   1be88:	ldrcc	r0, [r1, r0, lsl #2]
   1be8c:	bxcc	lr
   1be90:	push	{r4, sl, fp, lr}
   1be94:	add	fp, sp, #8
   1be98:	sub	sp, sp, #8
   1be9c:	movw	r0, #4264	; 0x10a8
   1bea0:	movt	r0, #6
   1bea4:	ldr	r0, [r0]
   1bea8:	movw	r1, #47600	; 0xb9f0
   1beac:	movt	r1, #3
   1beb0:	str	r1, [sp]
   1beb4:	movw	r1, #21007	; 0x520f
   1beb8:	movt	r1, #3
   1bebc:	movw	r4, #47527	; 0xb9a7
   1bec0:	movt	r4, #3
   1bec4:	mov	r2, r4
   1bec8:	mov	r3, #226	; 0xe2
   1becc:	bl	14890 <fprintf@plt>
   1bed0:	movw	r0, #24925	; 0x615d
   1bed4:	movt	r0, #4
   1bed8:	movw	r3, #47851	; 0xbaeb
   1bedc:	movt	r3, #3
   1bee0:	mov	r1, r4
   1bee4:	mov	r2, #226	; 0xe2
   1bee8:	bl	14950 <__assert_fail@plt>

0001beec <__flatcc_fb_gen_c_verifier@@Base>:
   1beec:	push	{r4, sl, fp, lr}
   1bef0:	add	fp, sp, #8
   1bef4:	mov	r4, r0
   1bef8:	bl	1bf2c <__flatcc_fb_gen_c_verifier@@Base+0x40>
   1befc:	mov	r0, r4
   1bf00:	bl	1bffc <__flatcc_fb_gen_c_verifier@@Base+0x110>
   1bf04:	mov	r0, r4
   1bf08:	bl	1c080 <__flatcc_fb_gen_c_verifier@@Base+0x194>
   1bf0c:	mov	r0, r4
   1bf10:	bl	1c0c0 <__flatcc_fb_gen_c_verifier@@Base+0x1d4>
   1bf14:	mov	r0, r4
   1bf18:	bl	1c100 <__flatcc_fb_gen_c_verifier@@Base+0x214>
   1bf1c:	mov	r0, r4
   1bf20:	bl	1c140 <__flatcc_fb_gen_c_verifier@@Base+0x254>
   1bf24:	mov	r0, #0
   1bf28:	pop	{r4, sl, fp, pc}
   1bf2c:	push	{r4, sl, fp, lr}
   1bf30:	add	fp, sp, #8
   1bf34:	mov	r4, r0
   1bf38:	ldr	r0, [r0, #204]	; 0xcc
   1bf3c:	ldr	r1, [r4, #208]	; 0xd0
   1bf40:	ldr	r2, [r1, #164]	; 0xa4
   1bf44:	movw	r1, #28196	; 0x6e24
   1bf48:	movt	r1, #4
   1bf4c:	mov	r3, r2
   1bf50:	bl	14890 <fprintf@plt>
   1bf54:	ldr	r3, [r4, #204]	; 0xcc
   1bf58:	movw	r0, #20710	; 0x50e6
   1bf5c:	movt	r0, #3
   1bf60:	mov	r1, #81	; 0x51
   1bf64:	mov	r2, #1
   1bf68:	bl	14830 <fwrite@plt>
   1bf6c:	ldr	r0, [r4, #204]	; 0xcc
   1bf70:	ldr	r1, [r4, #208]	; 0xd0
   1bf74:	ldr	r2, [r1, #164]	; 0xa4
   1bf78:	movw	r1, #23851	; 0x5d2b
   1bf7c:	movt	r1, #4
   1bf80:	bl	14890 <fprintf@plt>
   1bf84:	ldr	r0, [r4, #204]	; 0xcc
   1bf88:	ldr	r1, [r4, #208]	; 0xd0
   1bf8c:	ldr	r2, [r1, #160]	; 0xa0
   1bf90:	movw	r1, #23872	; 0x5d40
   1bf94:	movt	r1, #4
   1bf98:	bl	14890 <fprintf@plt>
   1bf9c:	ldr	r3, [r4, #204]	; 0xcc
   1bfa0:	movw	r0, #45806	; 0xb2ee
   1bfa4:	movt	r0, #3
   1bfa8:	mov	r1, #7
   1bfac:	mov	r2, #1
   1bfb0:	bl	14830 <fwrite@plt>
   1bfb4:	ldr	r3, [r4, #204]	; 0xcc
   1bfb8:	movw	r0, #28241	; 0x6e51
   1bfbc:	movt	r0, #4
   1bfc0:	mov	r1, #36	; 0x24
   1bfc4:	mov	r2, #1
   1bfc8:	bl	14830 <fwrite@plt>
   1bfcc:	movw	r1, #20612	; 0x5084
   1bfd0:	movt	r1, #3
   1bfd4:	movw	r2, #28278	; 0x6e76
   1bfd8:	movt	r2, #4
   1bfdc:	mov	r0, r4
   1bfe0:	bl	1598c <__flatcc_fb_gen_c_includes@@Base>
   1bfe4:	mov	r0, r4
   1bfe8:	bl	1c16c <__flatcc_fb_gen_c_verifier@@Base+0x280>
   1bfec:	ldr	r1, [r4, #204]	; 0xcc
   1bff0:	mov	r0, #10
   1bff4:	pop	{r4, sl, fp, lr}
   1bff8:	b	148f0 <fputc@plt>
   1bffc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1c000:	add	fp, sp, #24
   1c004:	sub	sp, sp, #224	; 0xe0
   1c008:	mov	r4, r0
   1c00c:	mov	r0, sp
   1c010:	mov	r1, #0
   1c014:	mov	r2, #220	; 0xdc
   1c018:	bl	148a8 <memset@plt>
   1c01c:	ldr	r0, [r4, #208]	; 0xd0
   1c020:	ldr	r5, [r0, #40]	; 0x28
   1c024:	cmp	r5, #0
   1c028:	beq	1c06c <__flatcc_fb_gen_c_verifier@@Base+0x180>
   1c02c:	mov	r6, sp
   1c030:	movw	r7, #28290	; 0x6e82
   1c034:	movt	r7, #4
   1c038:	ldrh	r0, [r5, #8]
   1c03c:	cmp	r0, #0
   1c040:	bne	1c060 <__flatcc_fb_gen_c_verifier@@Base+0x174>
   1c044:	mov	r0, r5
   1c048:	mov	r1, r6
   1c04c:	bl	1c194 <__flatcc_fb_gen_c_verifier@@Base+0x2a8>
   1c050:	ldr	r0, [r4, #204]	; 0xcc
   1c054:	mov	r1, r7
   1c058:	mov	r2, r6
   1c05c:	bl	14890 <fprintf@plt>
   1c060:	ldr	r5, [r5]
   1c064:	cmp	r5, #0
   1c068:	bne	1c038 <__flatcc_fb_gen_c_verifier@@Base+0x14c>
   1c06c:	ldr	r1, [r4, #204]	; 0xcc
   1c070:	mov	r0, #10
   1c074:	bl	148f0 <fputc@plt>
   1c078:	sub	sp, fp, #24
   1c07c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1c080:	push	{r4, r5, fp, lr}
   1c084:	add	fp, sp, #8
   1c088:	mov	r4, r0
   1c08c:	ldr	r0, [r0, #208]	; 0xd0
   1c090:	ldr	r5, [r0, #40]	; 0x28
   1c094:	b	1c09c <__flatcc_fb_gen_c_verifier@@Base+0x1b0>
   1c098:	ldr	r5, [r5]
   1c09c:	cmp	r5, #0
   1c0a0:	popeq	{r4, r5, fp, pc}
   1c0a4:	ldrh	r0, [r5, #8]
   1c0a8:	cmp	r0, #4
   1c0ac:	bne	1c098 <__flatcc_fb_gen_c_verifier@@Base+0x1ac>
   1c0b0:	mov	r0, r4
   1c0b4:	mov	r1, r5
   1c0b8:	bl	1c1a4 <__flatcc_fb_gen_c_verifier@@Base+0x2b8>
   1c0bc:	b	1c098 <__flatcc_fb_gen_c_verifier@@Base+0x1ac>
   1c0c0:	push	{r4, r5, fp, lr}
   1c0c4:	add	fp, sp, #8
   1c0c8:	mov	r4, r0
   1c0cc:	ldr	r0, [r0, #208]	; 0xd0
   1c0d0:	ldr	r5, [r0, #40]	; 0x28
   1c0d4:	b	1c0dc <__flatcc_fb_gen_c_verifier@@Base+0x1f0>
   1c0d8:	ldr	r5, [r5]
   1c0dc:	cmp	r5, #0
   1c0e0:	popeq	{r4, r5, fp, pc}
   1c0e4:	ldrh	r0, [r5, #8]
   1c0e8:	cmp	r0, #1
   1c0ec:	bne	1c0d8 <__flatcc_fb_gen_c_verifier@@Base+0x1ec>
   1c0f0:	mov	r0, r4
   1c0f4:	mov	r1, r5
   1c0f8:	bl	1c3e4 <__flatcc_fb_gen_c_verifier@@Base+0x4f8>
   1c0fc:	b	1c0d8 <__flatcc_fb_gen_c_verifier@@Base+0x1ec>
   1c100:	push	{r4, r5, fp, lr}
   1c104:	add	fp, sp, #8
   1c108:	mov	r4, r0
   1c10c:	ldr	r0, [r0, #208]	; 0xd0
   1c110:	ldr	r5, [r0, #40]	; 0x28
   1c114:	b	1c11c <__flatcc_fb_gen_c_verifier@@Base+0x230>
   1c118:	ldr	r5, [r5]
   1c11c:	cmp	r5, #0
   1c120:	popeq	{r4, r5, fp, pc}
   1c124:	ldrh	r0, [r5, #8]
   1c128:	cmp	r0, #0
   1c12c:	bne	1c118 <__flatcc_fb_gen_c_verifier@@Base+0x22c>
   1c130:	mov	r0, r4
   1c134:	mov	r1, r5
   1c138:	bl	1c4bc <__flatcc_fb_gen_c_verifier@@Base+0x5d0>
   1c13c:	b	1c118 <__flatcc_fb_gen_c_verifier@@Base+0x22c>
   1c140:	push	{r4, sl, fp, lr}
   1c144:	add	fp, sp, #8
   1c148:	mov	r4, r0
   1c14c:	bl	1c9d4 <__flatcc_fb_gen_c_verifier@@Base+0xae8>
   1c150:	ldr	r0, [r4, #204]	; 0xcc
   1c154:	ldr	r1, [r4, #208]	; 0xd0
   1c158:	ldr	r2, [r1, #164]	; 0xa4
   1c15c:	movw	r1, #31299	; 0x7a43
   1c160:	movt	r1, #4
   1c164:	pop	{r4, sl, fp, lr}
   1c168:	b	14890 <fprintf@plt>
   1c16c:	ldr	r1, [r0, #212]	; 0xd4
   1c170:	ldr	r1, [r1, #140]	; 0x8c
   1c174:	cmp	r1, #0
   1c178:	bxeq	lr
   1c17c:	ldr	r3, [r0, #204]	; 0xcc
   1c180:	movw	r0, #21186	; 0x52c2
   1c184:	movt	r0, #3
   1c188:	mov	r1, #36	; 0x24
   1c18c:	mov	r2, #1
   1c190:	b	14830 <fwrite@plt>
   1c194:	mov	r2, r1
   1c198:	mov	r1, r0
   1c19c:	ldr	r0, [r0, #12]
   1c1a0:	b	15b70 <__flatcc_fb_scoped_symbol_name@@Base>
   1c1a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c1a8:	add	fp, sp, #28
   1c1ac:	sub	sp, sp, #484	; 0x1e4
   1c1b0:	mov	r5, r1
   1c1b4:	mov	r9, r0
   1c1b8:	add	r6, sp, #256	; 0x100
   1c1bc:	mov	r0, r6
   1c1c0:	mov	r1, #0
   1c1c4:	mov	r2, #220	; 0xdc
   1c1c8:	bl	148a8 <memset@plt>
   1c1cc:	add	r0, sp, #32
   1c1d0:	mov	r1, #0
   1c1d4:	mov	r2, #220	; 0xdc
   1c1d8:	bl	148a8 <memset@plt>
   1c1dc:	mov	r0, r5
   1c1e0:	mov	r1, r6
   1c1e4:	bl	1c194 <__flatcc_fb_gen_c_verifier@@Base+0x2a8>
   1c1e8:	ldr	r0, [r9, #204]	; 0xcc
   1c1ec:	movw	r1, #28359	; 0x6ec7
   1c1f0:	movt	r1, #4
   1c1f4:	mov	r2, r6
   1c1f8:	bl	14890 <fprintf@plt>
   1c1fc:	ldr	r5, [r5, #20]
   1c200:	cmp	r5, #0
   1c204:	beq	1c308 <__flatcc_fb_gen_c_verifier@@Base+0x41c>
   1c208:	add	r8, sp, #28
   1c20c:	add	sl, sp, #24
   1c210:	movw	r4, #28811	; 0x708b
   1c214:	movt	r4, #4
   1c218:	add	r6, sp, #32
   1c21c:	mov	r0, r5
   1c220:	mov	r1, r8
   1c224:	mov	r2, sl
   1c228:	bl	1c3c8 <__flatcc_fb_gen_c_verifier@@Base+0x4dc>
   1c22c:	ldrh	r0, [r5, #24]
   1c230:	cmp	r0, #0
   1c234:	beq	1c2fc <__flatcc_fb_gen_c_verifier@@Base+0x410>
   1c238:	cmp	r0, #10
   1c23c:	beq	1c294 <__flatcc_fb_gen_c_verifier@@Base+0x3a8>
   1c240:	cmp	r0, #14
   1c244:	bne	1c328 <__flatcc_fb_gen_c_verifier@@Base+0x43c>
   1c248:	ldr	r0, [r5, #16]
   1c24c:	mov	r1, r6
   1c250:	bl	1c194 <__flatcc_fb_gen_c_verifier@@Base+0x2a8>
   1c254:	ldr	r1, [r5, #16]
   1c258:	ldrh	r0, [r1, #8]
   1c25c:	cmp	r0, #1
   1c260:	beq	1c2b4 <__flatcc_fb_gen_c_verifier@@Base+0x3c8>
   1c264:	cmp	r0, #0
   1c268:	bne	1c378 <__flatcc_fb_gen_c_verifier@@Base+0x48c>
   1c26c:	ldr	r2, [r5, #48]	; 0x30
   1c270:	ldr	r0, [r9, #204]	; 0xcc
   1c274:	ldr	r1, [sp, #28]
   1c278:	ldr	r3, [sp, #24]
   1c27c:	stm	sp, {r1, r3}
   1c280:	movw	r1, #28455	; 0x6f27
   1c284:	movt	r1, #4
   1c288:	mov	r3, r6
   1c28c:	bl	14890 <fprintf@plt>
   1c290:	b	1c2fc <__flatcc_fb_gen_c_verifier@@Base+0x410>
   1c294:	ldr	r2, [r5, #48]	; 0x30
   1c298:	ldr	r0, [r9, #204]	; 0xcc
   1c29c:	ldr	r3, [sp, #28]
   1c2a0:	ldr	r1, [sp, #24]
   1c2a4:	str	r1, [sp]
   1c2a8:	mov	r1, r4
   1c2ac:	bl	14890 <fprintf@plt>
   1c2b0:	b	1c2fc <__flatcc_fb_gen_c_verifier@@Base+0x410>
   1c2b4:	ldr	r2, [r5, #48]	; 0x30
   1c2b8:	ldr	r0, [r9, #204]	; 0xcc
   1c2bc:	ldr	r3, [r1, #112]	; 0x70
   1c2c0:	ldr	r7, [r1, #116]	; 0x74
   1c2c4:	ldrh	r1, [r1, #104]	; 0x68
   1c2c8:	mov	lr, r6
   1c2cc:	ldr	r6, [sp, #28]
   1c2d0:	mov	ip, r4
   1c2d4:	ldr	r4, [sp, #24]
   1c2d8:	stm	sp, {r3, r7}
   1c2dc:	str	r1, [sp, #8]
   1c2e0:	str	r6, [sp, #12]
   1c2e4:	mov	r6, lr
   1c2e8:	str	r4, [sp, #16]
   1c2ec:	mov	r4, ip
   1c2f0:	movw	r1, #28535	; 0x6f77
   1c2f4:	movt	r1, #4
   1c2f8:	bl	14890 <fprintf@plt>
   1c2fc:	ldr	r5, [r5]
   1c300:	cmp	r5, #0
   1c304:	bne	1c21c <__flatcc_fb_gen_c_verifier@@Base+0x330>
   1c308:	ldr	r3, [r9, #204]	; 0xcc
   1c30c:	movw	r0, #28926	; 0x70fe
   1c310:	movt	r0, #4
   1c314:	mov	r1, #47	; 0x2f
   1c318:	mov	r2, #1
   1c31c:	bl	14830 <fwrite@plt>
   1c320:	sub	sp, fp, #28
   1c324:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c328:	movw	r0, #4264	; 0x10a8
   1c32c:	movt	r0, #6
   1c330:	ldr	r0, [r0]
   1c334:	movw	r1, #28875	; 0x70cb
   1c338:	movt	r1, #4
   1c33c:	str	r1, [sp]
   1c340:	movw	r1, #21007	; 0x520f
   1c344:	movt	r1, #3
   1c348:	movw	r4, #28609	; 0x6fc1
   1c34c:	movt	r4, #4
   1c350:	mov	r2, r4
   1c354:	mov	r3, #83	; 0x53
   1c358:	bl	14890 <fprintf@plt>
   1c35c:	movw	r0, #24925	; 0x615d
   1c360:	movt	r0, #4
   1c364:	movw	r3, #28751	; 0x704f
   1c368:	movt	r3, #4
   1c36c:	mov	r1, r4
   1c370:	mov	r2, #83	; 0x53
   1c374:	bl	14950 <__assert_fail@plt>
   1c378:	movw	r0, #4264	; 0x10a8
   1c37c:	movt	r0, #6
   1c380:	ldr	r0, [r0]
   1c384:	movw	r1, #28691	; 0x7013
   1c388:	movt	r1, #4
   1c38c:	str	r1, [sp]
   1c390:	movw	r1, #21007	; 0x520f
   1c394:	movt	r1, #3
   1c398:	movw	r4, #28609	; 0x6fc1
   1c39c:	movt	r4, #4
   1c3a0:	mov	r2, r4
   1c3a4:	mov	r3, #74	; 0x4a
   1c3a8:	bl	14890 <fprintf@plt>
   1c3ac:	movw	r0, #24925	; 0x615d
   1c3b0:	movt	r0, #4
   1c3b4:	movw	r3, #28751	; 0x704f
   1c3b8:	movt	r3, #4
   1c3bc:	mov	r1, r4
   1c3c0:	mov	r2, #74	; 0x4a
   1c3c4:	bl	14950 <__assert_fail@plt>
   1c3c8:	ldr	r0, [r0, #4]
   1c3cc:	b	1c3d0 <__flatcc_fb_gen_c_verifier@@Base+0x4e4>
   1c3d0:	ldr	r3, [r0, #4]
   1c3d4:	str	r3, [r1]
   1c3d8:	ldr	r0, [r0]
   1c3dc:	str	r0, [r2]
   1c3e0:	bx	lr
   1c3e4:	push	{r4, r5, r6, sl, fp, lr}
   1c3e8:	add	fp, sp, #16
   1c3ec:	sub	sp, sp, #240	; 0xf0
   1c3f0:	mov	r5, r1
   1c3f4:	mov	r6, r0
   1c3f8:	add	r4, sp, #16
   1c3fc:	mov	r0, r4
   1c400:	mov	r1, #0
   1c404:	mov	r2, #220	; 0xdc
   1c408:	bl	148a8 <memset@plt>
   1c40c:	mov	r0, r5
   1c410:	mov	r1, r4
   1c414:	bl	1c194 <__flatcc_fb_gen_c_verifier@@Base+0x2a8>
   1c418:	ldr	r0, [r6, #204]	; 0xcc
   1c41c:	ldrd	r2, [r5, #112]	; 0x70
   1c420:	ldrh	r1, [r5, #104]	; 0x68
   1c424:	stm	sp, {r2, r3}
   1c428:	str	r1, [sp, #8]
   1c42c:	movw	r1, #28974	; 0x712e
   1c430:	movt	r1, #4
   1c434:	mov	r2, r4
   1c438:	mov	r3, r4
   1c43c:	bl	14890 <fprintf@plt>
   1c440:	ldr	r0, [r6, #204]	; 0xcc
   1c444:	ldrd	r2, [r5, #112]	; 0x70
   1c448:	ldrh	r1, [r5, #104]	; 0x68
   1c44c:	stm	sp, {r2, r3}
   1c450:	str	r1, [sp, #8]
   1c454:	movw	r1, #29127	; 0x71c7
   1c458:	movt	r1, #4
   1c45c:	mov	r2, r4
   1c460:	mov	r3, r4
   1c464:	bl	14890 <fprintf@plt>
   1c468:	ldr	r0, [r6, #204]	; 0xcc
   1c46c:	ldrd	r2, [r5, #112]	; 0x70
   1c470:	ldrh	r1, [r5, #104]	; 0x68
   1c474:	stm	sp, {r2, r3}
   1c478:	str	r1, [sp, #8]
   1c47c:	movw	r1, #29291	; 0x726b
   1c480:	movt	r1, #4
   1c484:	mov	r2, r4
   1c488:	mov	r3, r6
   1c48c:	bl	14890 <fprintf@plt>
   1c490:	ldr	r0, [r6, #204]	; 0xcc
   1c494:	ldrd	r2, [r5, #112]	; 0x70
   1c498:	ldrh	r1, [r5, #104]	; 0x68
   1c49c:	stm	sp, {r2, r3}
   1c4a0:	str	r1, [sp, #8]
   1c4a4:	movw	r1, #29474	; 0x7322
   1c4a8:	movt	r1, #4
   1c4ac:	mov	r2, r4
   1c4b0:	bl	14890 <fprintf@plt>
   1c4b4:	sub	sp, fp, #16
   1c4b8:	pop	{r4, r5, r6, sl, fp, pc}
   1c4bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c4c0:	add	fp, sp, #28
   1c4c4:	sub	sp, sp, #484	; 0x1e4
   1c4c8:	mov	r7, r1
   1c4cc:	mov	r4, r0
   1c4d0:	add	r5, sp, #256	; 0x100
   1c4d4:	mov	r0, r5
   1c4d8:	mov	r1, #0
   1c4dc:	mov	r2, #220	; 0xdc
   1c4e0:	bl	148a8 <memset@plt>
   1c4e4:	add	r8, sp, #32
   1c4e8:	mov	r0, r8
   1c4ec:	mov	r1, #0
   1c4f0:	mov	r2, #220	; 0xdc
   1c4f4:	bl	148a8 <memset@plt>
   1c4f8:	mov	r0, r7
   1c4fc:	mov	r1, r5
   1c500:	bl	1c194 <__flatcc_fb_gen_c_verifier@@Base+0x2a8>
   1c504:	ldr	r0, [r4, #204]	; 0xcc
   1c508:	movw	r1, #29650	; 0x73d2
   1c50c:	movt	r1, #4
   1c510:	mov	r2, r5
   1c514:	bl	14890 <fprintf@plt>
   1c518:	ldr	r9, [r7, #20]
   1c51c:	cmp	r9, #0
   1c520:	beq	1c88c <__flatcc_fb_gen_c_verifier@@Base+0x9a0>
   1c524:	mov	r0, #1
   1c528:	movw	sl, #29749	; 0x7435
   1c52c:	movt	sl, #4
   1c530:	movw	r6, #33399	; 0x8277
   1c534:	movt	r6, #4
   1c538:	b	1c628 <__flatcc_fb_gen_c_verifier@@Base+0x73c>
   1c53c:	add	sl, r9, #88	; 0x58
   1c540:	ldm	sl, {r6, r7, sl}
   1c544:	ldr	r8, [r9, #100]	; 0x64
   1c548:	orrs	r3, r6, r7
   1c54c:	mov	r2, r6
   1c550:	movweq	r2, #1
   1c554:	movne	r3, r7
   1c558:	mvn	r0, #0
   1c55c:	mov	r1, #0
   1c560:	bl	33bc0 <fb_value_set_visit@@Base+0x6c0>
   1c564:	ldr	r2, [r4, #204]	; 0xcc
   1c568:	ldrh	r3, [r9, #74]	; 0x4a
   1c56c:	str	r6, [sp, #8]
   1c570:	movw	r6, #33399	; 0x8277
   1c574:	movt	r6, #4
   1c578:	str	r7, [sp, #12]
   1c57c:	str	r3, [sp, #16]
   1c580:	str	r5, [sp]
   1c584:	str	r0, [sp, #24]
   1c588:	str	r1, [sp, #28]
   1c58c:	mov	r0, r2
   1c590:	movw	r1, #29957	; 0x7505
   1c594:	movt	r1, #4
   1c598:	mov	r2, sl
   1c59c:	movw	sl, #29749	; 0x7435
   1c5a0:	movt	sl, #4
   1c5a4:	mov	r3, r8
   1c5a8:	add	r8, sp, #32
   1c5ac:	b	1c840 <__flatcc_fb_gen_c_verifier@@Base+0x954>
   1c5b0:	ldrd	r2, [r9, #96]	; 0x60
   1c5b4:	ldr	r0, [r4, #204]	; 0xcc
   1c5b8:	stm	sp, {r5, r8}
   1c5bc:	movw	r1, #30350	; 0x768e
   1c5c0:	movt	r1, #4
   1c5c4:	b	1c840 <__flatcc_fb_gen_c_verifier@@Base+0x954>
   1c5c8:	ldrd	r2, [r9, #96]	; 0x60
   1c5cc:	ldr	r0, [r4, #204]	; 0xcc
   1c5d0:	stm	sp, {r5, r8}
   1c5d4:	movw	r1, #30415	; 0x76cf
   1c5d8:	movt	r1, #4
   1c5dc:	b	1c840 <__flatcc_fb_gen_c_verifier@@Base+0x954>
   1c5e0:	ldrd	r2, [r9, #96]	; 0x60
   1c5e4:	ldr	r0, [r4, #204]	; 0xcc
   1c5e8:	stm	sp, {r5, r8}
   1c5ec:	movw	r1, #30112	; 0x75a0
   1c5f0:	movt	r1, #4
   1c5f4:	b	1c840 <__flatcc_fb_gen_c_verifier@@Base+0x954>
   1c5f8:	ldrd	r2, [r9, #96]	; 0x60
   1c5fc:	ldr	r0, [r4, #204]	; 0xcc
   1c600:	stm	sp, {r5, r8}
   1c604:	movw	r1, #30170	; 0x75da
   1c608:	movt	r1, #4
   1c60c:	b	1c840 <__flatcc_fb_gen_c_verifier@@Base+0x954>
   1c610:	ldrh	r1, [r9, #74]	; 0x4a
   1c614:	str	r5, [sp]
   1c618:	stmib	sp, {r1, r8}
   1c61c:	movw	r1, #29820	; 0x747c
   1c620:	movt	r1, #4
   1c624:	b	1c840 <__flatcc_fb_gen_c_verifier@@Base+0x954>
   1c628:	ldrb	r1, [r9, #72]	; 0x48
   1c62c:	tst	r1, #4
   1c630:	bne	1c860 <__flatcc_fb_gen_c_verifier@@Base+0x974>
   1c634:	ldr	r3, [r4, #204]	; 0xcc
   1c638:	cmp	r0, #0
   1c63c:	beq	1c650 <__flatcc_fb_gen_c_verifier@@Base+0x764>
   1c640:	movw	r0, #29720	; 0x7418
   1c644:	movt	r0, #4
   1c648:	mov	r1, #28
   1c64c:	b	1c658 <__flatcc_fb_gen_c_verifier@@Base+0x76c>
   1c650:	mov	r0, sl
   1c654:	mov	r1, #30
   1c658:	mov	r2, #1
   1c65c:	bl	14830 <fwrite@plt>
   1c660:	ldrh	r0, [r9, #72]	; 0x48
   1c664:	ubfx	r5, r0, #8, #1
   1c668:	ldrh	r0, [r9, #24]
   1c66c:	sub	r0, r0, #7
   1c670:	cmp	r0, #8
   1c674:	bhi	1c844 <__flatcc_fb_gen_c_verifier@@Base+0x958>
   1c678:	add	r1, pc, #0
   1c67c:	ldr	pc, [r1, r0, lsl #2]
   1c680:	andeq	ip, r1, r4, lsr #13
   1c684:	andeq	ip, r1, r0, lsl r8
   1c688:	andeq	ip, r1, r0, lsl #14
   1c68c:	andeq	ip, r1, r0, asr #15
   1c690:	andeq	ip, r1, r4, asr #16
   1c694:	andeq	ip, r1, r4, asr #16
   1c698:	andeq	ip, r1, r4, asr #16
   1c69c:	ldrdeq	ip, [r1], -r8
   1c6a0:	andeq	ip, r1, r8, lsl r7
   1c6a4:	ldr	r0, [r9, #104]	; 0x68
   1c6a8:	cmp	r0, #0
   1c6ac:	beq	1c53c <__flatcc_fb_gen_c_verifier@@Base+0x650>
   1c6b0:	mov	r1, r8
   1c6b4:	bl	1c194 <__flatcc_fb_gen_c_verifier@@Base+0x2a8>
   1c6b8:	ldr	r0, [r4, #204]	; 0xcc
   1c6bc:	ldr	r2, [r9, #96]	; 0x60
   1c6c0:	ldr	r3, [r9, #100]	; 0x64
   1c6c4:	ldr	r1, [r9, #104]	; 0x68
   1c6c8:	ldrh	r1, [r1, #8]
   1c6cc:	cmp	r1, #0
   1c6d0:	beq	1c610 <__flatcc_fb_gen_c_verifier@@Base+0x724>
   1c6d4:	ldrd	r6, [r9, #88]	; 0x58
   1c6d8:	ldrh	r1, [r9, #74]	; 0x4a
   1c6dc:	str	r6, [sp, #8]
   1c6e0:	movw	r6, #33399	; 0x8277
   1c6e4:	movt	r6, #4
   1c6e8:	str	r7, [sp, #12]
   1c6ec:	str	r1, [sp, #16]
   1c6f0:	str	r5, [sp]
   1c6f4:	movw	r1, #29893	; 0x74c5
   1c6f8:	movt	r1, #4
   1c6fc:	b	1c840 <__flatcc_fb_gen_c_verifier@@Base+0x954>
   1c700:	ldrd	r2, [r9, #96]	; 0x60
   1c704:	ldr	r0, [r4, #204]	; 0xcc
   1c708:	str	r5, [sp]
   1c70c:	movw	r1, #30064	; 0x7570
   1c710:	movt	r1, #4
   1c714:	b	1c840 <__flatcc_fb_gen_c_verifier@@Base+0x954>
   1c718:	ldr	r0, [r9, #16]
   1c71c:	mov	r1, r8
   1c720:	bl	1c194 <__flatcc_fb_gen_c_verifier@@Base+0x2a8>
   1c724:	ldr	r0, [r9, #16]
   1c728:	ldrh	r0, [r0, #8]
   1c72c:	cmp	r0, #4
   1c730:	bhi	1c934 <__flatcc_fb_gen_c_verifier@@Base+0xa48>
   1c734:	add	r1, pc, #0
   1c738:	ldr	pc, [r1, r0, lsl #2]
   1c73c:			; <UNDEFINED> instruction: 0x0001c5b0
   1c740:	andeq	ip, r1, r0, asr r7
   1c744:	andeq	ip, r1, r4, lsr r9
   1c748:	andeq	ip, r1, r0, asr r7
   1c74c:	andeq	ip, r1, r8, asr #11
   1c750:	add	sl, r9, #88	; 0x58
   1c754:	ldm	sl, {r6, r7, r8, sl}
   1c758:	orrs	r3, r6, r7
   1c75c:	mov	r2, r6
   1c760:	movweq	r2, #1
   1c764:	movne	r3, r7
   1c768:	mvn	r0, #0
   1c76c:	mov	r1, #0
   1c770:	bl	33bc0 <fb_value_set_visit@@Base+0x6c0>
   1c774:	ldr	r2, [r4, #204]	; 0xcc
   1c778:	ldrh	r3, [r9, #74]	; 0x4a
   1c77c:	str	r6, [sp, #8]
   1c780:	movw	r6, #33399	; 0x8277
   1c784:	movt	r6, #4
   1c788:	str	r7, [sp, #12]
   1c78c:	str	r3, [sp, #16]
   1c790:	str	r5, [sp]
   1c794:	str	r0, [sp, #24]
   1c798:	str	r1, [sp, #28]
   1c79c:	mov	r0, r2
   1c7a0:	movw	r1, #29957	; 0x7505
   1c7a4:	movt	r1, #4
   1c7a8:	mov	r2, r8
   1c7ac:	add	r8, sp, #32
   1c7b0:	mov	r3, sl
   1c7b4:	movw	sl, #29749	; 0x7435
   1c7b8:	movt	sl, #4
   1c7bc:	b	1c840 <__flatcc_fb_gen_c_verifier@@Base+0x954>
   1c7c0:	ldrd	r2, [r9, #96]	; 0x60
   1c7c4:	ldr	r0, [r4, #204]	; 0xcc
   1c7c8:	str	r5, [sp]
   1c7cc:	movw	r1, #30023	; 0x7547
   1c7d0:	movt	r1, #4
   1c7d4:	b	1c840 <__flatcc_fb_gen_c_verifier@@Base+0x954>
   1c7d8:	ldr	r0, [r9, #16]
   1c7dc:	mov	r1, r8
   1c7e0:	bl	1c194 <__flatcc_fb_gen_c_verifier@@Base+0x2a8>
   1c7e4:	ldr	r0, [r9, #16]
   1c7e8:	ldrh	r0, [r0, #8]
   1c7ec:	cmp	r0, #4
   1c7f0:	bhi	1c984 <__flatcc_fb_gen_c_verifier@@Base+0xa98>
   1c7f4:	add	r1, pc, #0
   1c7f8:	ldr	pc, [r1, r0, lsl #2]
   1c7fc:	andeq	ip, r1, r0, ror #11
   1c800:	andeq	ip, r1, r0, lsl r8
   1c804:	andeq	ip, r1, r4, lsl #19
   1c808:	andeq	ip, r1, r0, lsl r8
   1c80c:	strdeq	ip, [r1], -r8
   1c810:	ldr	r0, [r4, #204]	; 0xcc
   1c814:	ldr	r1, [r9, #88]	; 0x58
   1c818:	ldr	r7, [r9, #92]	; 0x5c
   1c81c:	ldr	r2, [r9, #96]	; 0x60
   1c820:	ldr	r3, [r9, #100]	; 0x64
   1c824:	ldrh	r6, [r9, #74]	; 0x4a
   1c828:	stm	sp, {r1, r7}
   1c82c:	str	r6, [sp, #8]
   1c830:	movw	r6, #33399	; 0x8277
   1c834:	movt	r6, #4
   1c838:	movw	r1, #29780	; 0x7454
   1c83c:	movt	r1, #4
   1c840:	bl	14890 <fprintf@plt>
   1c844:	ldr	r0, [r4, #204]	; 0xcc
   1c848:	ldr	r1, [r9, #4]
   1c84c:	ldr	r3, [r1]
   1c850:	ldr	r2, [r1, #4]
   1c854:	mov	r1, r6
   1c858:	bl	14890 <fprintf@plt>
   1c85c:	mov	r0, #0
   1c860:	ldr	r9, [r9]
   1c864:	cmp	r9, #0
   1c868:	bne	1c628 <__flatcc_fb_gen_c_verifier@@Base+0x73c>
   1c86c:	cmp	r0, #0
   1c870:	bne	1c88c <__flatcc_fb_gen_c_verifier@@Base+0x9a0>
   1c874:	ldr	r3, [r4, #204]	; 0xcc
   1c878:	movw	r0, #30549	; 0x7755
   1c87c:	movt	r0, #4
   1c880:	mov	r1, #15
   1c884:	mov	r2, #1
   1c888:	bl	14830 <fwrite@plt>
   1c88c:	ldr	r3, [r4, #204]	; 0xcc
   1c890:	movw	r0, #30565	; 0x7765
   1c894:	movt	r0, #4
   1c898:	mov	r1, #29
   1c89c:	mov	r2, #1
   1c8a0:	bl	14830 <fwrite@plt>
   1c8a4:	ldr	r3, [r4, #204]	; 0xcc
   1c8a8:	movw	r0, #47136	; 0xb820
   1c8ac:	movt	r0, #4
   1c8b0:	mov	r1, #3
   1c8b4:	mov	r2, #1
   1c8b8:	bl	14830 <fwrite@plt>
   1c8bc:	ldr	r0, [r4, #204]	; 0xcc
   1c8c0:	add	r5, sp, #256	; 0x100
   1c8c4:	str	r5, [sp]
   1c8c8:	movw	r1, #30595	; 0x7783
   1c8cc:	movt	r1, #4
   1c8d0:	mov	r2, r5
   1c8d4:	mov	r3, r5
   1c8d8:	bl	14890 <fprintf@plt>
   1c8dc:	ldr	r0, [r4, #204]	; 0xcc
   1c8e0:	str	r5, [sp]
   1c8e4:	movw	r1, #30755	; 0x7823
   1c8e8:	movt	r1, #4
   1c8ec:	mov	r2, r5
   1c8f0:	mov	r3, r5
   1c8f4:	bl	14890 <fprintf@plt>
   1c8f8:	ldr	r0, [r4, #204]	; 0xcc
   1c8fc:	movw	r1, #30926	; 0x78ce
   1c900:	movt	r1, #4
   1c904:	mov	r2, r5
   1c908:	mov	r3, r5
   1c90c:	bl	14890 <fprintf@plt>
   1c910:	ldr	r0, [r4, #204]	; 0xcc
   1c914:	str	r5, [sp]
   1c918:	movw	r1, #31109	; 0x7985
   1c91c:	movt	r1, #4
   1c920:	mov	r2, r5
   1c924:	mov	r3, r4
   1c928:	bl	14890 <fprintf@plt>
   1c92c:	sub	sp, fp, #28
   1c930:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c934:	movw	r0, #4264	; 0x10a8
   1c938:	movt	r0, #6
   1c93c:	ldr	r0, [r0]
   1c940:	movw	r1, #30482	; 0x7712
   1c944:	movt	r1, #4
   1c948:	str	r1, [sp]
   1c94c:	movw	r1, #21007	; 0x520f
   1c950:	movt	r1, #3
   1c954:	movw	r4, #28609	; 0x6fc1
   1c958:	movt	r4, #4
   1c95c:	mov	r2, r4
   1c960:	mov	r3, #202	; 0xca
   1c964:	bl	14890 <fprintf@plt>
   1c968:	movw	r0, #24925	; 0x615d
   1c96c:	movt	r0, #4
   1c970:	movw	r3, #30290	; 0x7652
   1c974:	movt	r3, #4
   1c978:	mov	r1, r4
   1c97c:	mov	r2, #202	; 0xca
   1c980:	bl	14950 <__assert_fail@plt>
   1c984:	movw	r0, #4264	; 0x10a8
   1c988:	movt	r0, #6
   1c98c:	ldr	r0, [r0]
   1c990:	movw	r1, #30230	; 0x7616
   1c994:	movt	r1, #4
   1c998:	str	r1, [sp]
   1c99c:	movw	r1, #21007	; 0x520f
   1c9a0:	movt	r1, #3
   1c9a4:	movw	r4, #28609	; 0x6fc1
   1c9a8:	movt	r4, #4
   1c9ac:	mov	r2, r4
   1c9b0:	mov	r3, #178	; 0xb2
   1c9b4:	bl	14890 <fprintf@plt>
   1c9b8:	movw	r0, #24925	; 0x615d
   1c9bc:	movt	r0, #4
   1c9c0:	movw	r3, #30290	; 0x7652
   1c9c4:	movt	r3, #4
   1c9c8:	mov	r1, r4
   1c9cc:	mov	r2, #178	; 0xb2
   1c9d0:	bl	14950 <__assert_fail@plt>
   1c9d4:	ldr	r1, [r0, #212]	; 0xd4
   1c9d8:	ldr	r1, [r1, #140]	; 0x8c
   1c9dc:	cmp	r1, #0
   1c9e0:	bxeq	lr
   1c9e4:	ldr	r3, [r0, #204]	; 0xcc
   1c9e8:	movw	r0, #45228	; 0xb0ac
   1c9ec:	movt	r0, #3
   1c9f0:	mov	r1, #36	; 0x24
   1c9f4:	mov	r2, #1
   1c9f8:	b	14830 <fwrite@plt>

0001c9fc <__flatcc_fb_gen_c_json_parser@@Base>:
   1c9fc:	push	{r4, sl, fp, lr}
   1ca00:	add	fp, sp, #8
   1ca04:	mov	r4, r0
   1ca08:	bl	1ca2c <__flatcc_fb_gen_c_json_parser@@Base+0x30>
   1ca0c:	mov	r0, r4
   1ca10:	bl	1cad8 <__flatcc_fb_gen_c_json_parser@@Base+0xdc>
   1ca14:	mov	r0, r4
   1ca18:	bl	1ce90 <__flatcc_fb_gen_c_json_parser@@Base+0x494>
   1ca1c:	mov	r0, r4
   1ca20:	bl	1cf7c <__flatcc_fb_gen_c_json_parser@@Base+0x580>
   1ca24:	mov	r0, #0
   1ca28:	pop	{r4, sl, fp, pc}
   1ca2c:	push	{r4, r5, fp, lr}
   1ca30:	add	fp, sp, #8
   1ca34:	mov	r4, r0
   1ca38:	ldr	r0, [r0, #208]	; 0xd0
   1ca3c:	ldr	r2, [r0, #164]	; 0xa4
   1ca40:	movw	r1, #31327	; 0x7a5f
   1ca44:	movt	r1, #4
   1ca48:	mov	r0, r4
   1ca4c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ca50:	ldr	r0, [r4, #208]	; 0xd0
   1ca54:	ldr	r2, [r0, #164]	; 0xa4
   1ca58:	movw	r1, #31352	; 0x7a78
   1ca5c:	movt	r1, #4
   1ca60:	mov	r0, r4
   1ca64:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ca68:	movw	r5, #21264	; 0x5310
   1ca6c:	movt	r5, #3
   1ca70:	mov	r0, r4
   1ca74:	mov	r1, r5
   1ca78:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ca7c:	movw	r1, #31377	; 0x7a91
   1ca80:	movt	r1, #4
   1ca84:	mov	r0, r4
   1ca88:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ca8c:	mov	r0, r4
   1ca90:	mov	r1, r5
   1ca94:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ca98:	movw	r1, #31456	; 0x7ae0
   1ca9c:	movt	r1, #4
   1caa0:	mov	r0, r4
   1caa4:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1caa8:	movw	r1, #20624	; 0x5090
   1caac:	movt	r1, #3
   1cab0:	movw	r2, #31362	; 0x7a82
   1cab4:	movt	r2, #4
   1cab8:	mov	r0, r4
   1cabc:	bl	1598c <__flatcc_fb_gen_c_includes@@Base>
   1cac0:	mov	r0, r4
   1cac4:	bl	1d0b4 <__flatcc_fb_gen_c_json_parser@@Base+0x6b8>
   1cac8:	mov	r0, r4
   1cacc:	mov	r1, r5
   1cad0:	pop	{r4, r5, fp, lr}
   1cad4:	b	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1cad8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cadc:	add	fp, sp, #28
   1cae0:	sub	sp, sp, #228	; 0xe4
   1cae4:	mov	r4, r0
   1cae8:	ldr	r0, [r0, #208]	; 0xd0
   1caec:	ldr	r5, [r0, #52]	; 0x34
   1caf0:	mov	r0, sp
   1caf4:	mov	r1, #0
   1caf8:	mov	r2, #220	; 0xdc
   1cafc:	bl	148a8 <memset@plt>
   1cb00:	cmp	r5, #0
   1cb04:	beq	1cc08 <__flatcc_fb_gen_c_json_parser@@Base+0x20c>
   1cb08:	ldrh	r0, [r5, #8]
   1cb0c:	cmp	r0, #1
   1cb10:	bhi	1cc08 <__flatcc_fb_gen_c_json_parser@@Base+0x20c>
   1cb14:	movw	r1, #31495	; 0x7b07
   1cb18:	movt	r1, #4
   1cb1c:	mov	r0, r4
   1cb20:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1cb24:	movw	r1, #31498	; 0x7b0a
   1cb28:	movt	r1, #4
   1cb2c:	mov	r0, r4
   1cb30:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1cb34:	movw	r1, #31584	; 0x7b60
   1cb38:	movt	r1, #4
   1cb3c:	mov	r0, r4
   1cb40:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1cb44:	movw	r1, #31587	; 0x7b63
   1cb48:	movt	r1, #4
   1cb4c:	mov	r0, r4
   1cb50:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1cb54:	movw	r1, #31655	; 0x7ba7
   1cb58:	movt	r1, #4
   1cb5c:	mov	r0, r4
   1cb60:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1cb64:	movw	r1, #31709	; 0x7bdd
   1cb68:	movt	r1, #4
   1cb6c:	mov	r0, r4
   1cb70:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1cb74:	movw	r1, #31749	; 0x7c05
   1cb78:	movt	r1, #4
   1cb7c:	mov	r0, r4
   1cb80:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1cb84:	movw	r1, #31821	; 0x7c4d
   1cb88:	movt	r1, #4
   1cb8c:	mov	r0, r4
   1cb90:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1cb94:	movw	r1, #35406	; 0x8a4e
   1cb98:	movt	r1, #4
   1cb9c:	mov	r0, r4
   1cba0:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1cba4:	ldr	r0, [r4, #208]	; 0xd0
   1cba8:	ldr	r2, [r0, #160]	; 0xa0
   1cbac:	movw	r1, #31883	; 0x7c8b
   1cbb0:	movt	r1, #4
   1cbb4:	mov	r0, r4
   1cbb8:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1cbbc:	ldr	r0, [r4, #220]	; 0xdc
   1cbc0:	add	r0, r0, #2
   1cbc4:	str	r0, [r4, #220]	; 0xdc
   1cbc8:	movw	r1, #31956	; 0x7cd4
   1cbcc:	movt	r1, #4
   1cbd0:	mov	r0, r4
   1cbd4:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1cbd8:	ldr	r0, [r4, #220]	; 0xdc
   1cbdc:	cmp	r0, #0
   1cbe0:	beq	1ce70 <__flatcc_fb_gen_c_json_parser@@Base+0x474>
   1cbe4:	subs	r1, r0, #1
   1cbe8:	str	r1, [r4, #220]	; 0xdc
   1cbec:	beq	1ce70 <__flatcc_fb_gen_c_json_parser@@Base+0x474>
   1cbf0:	sub	r0, r0, #2
   1cbf4:	str	r0, [r4, #220]	; 0xdc
   1cbf8:	movw	r1, #21264	; 0x5310
   1cbfc:	movt	r1, #3
   1cc00:	mov	r0, r4
   1cc04:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1cc08:	ldr	r0, [r4, #208]	; 0xd0
   1cc0c:	ldr	r5, [r0, #40]	; 0x28
   1cc10:	cmp	r5, #0
   1cc14:	beq	1cd8c <__flatcc_fb_gen_c_json_parser@@Base+0x390>
   1cc18:	mov	r6, sp
   1cc1c:	movw	r7, #32338	; 0x7e52
   1cc20:	movt	r7, #4
   1cc24:	movw	r8, #32437	; 0x7eb5
   1cc28:	movt	r8, #4
   1cc2c:	movw	r9, #32143	; 0x7d8f
   1cc30:	movt	r9, #4
   1cc34:	movw	sl, #32286	; 0x7e1e
   1cc38:	movt	sl, #4
   1cc3c:	ldrh	r0, [r5, #8]
   1cc40:	cmp	r0, #4
   1cc44:	bhi	1cd80 <__flatcc_fb_gen_c_json_parser@@Base+0x384>
   1cc48:	add	r1, pc, #0
   1cc4c:	ldr	pc, [r1, r0, lsl #2]
   1cc50:	andeq	ip, r1, r4, ror #24
   1cc54:	ldrdeq	ip, [r1], -r4
   1cc58:	andeq	ip, r1, r0, lsl #27
   1cc5c:	andeq	ip, r1, r0, lsl #25
   1cc60:	andeq	ip, r1, ip, lsl #26
   1cc64:	mov	r0, r5
   1cc68:	mov	r1, r6
   1cc6c:	bl	1d0dc <__flatcc_fb_gen_c_json_parser@@Base+0x6e0>
   1cc70:	mov	r0, r4
   1cc74:	movw	r1, #32748	; 0x7fec
   1cc78:	movt	r1, #4
   1cc7c:	b	1cd00 <__flatcc_fb_gen_c_json_parser@@Base+0x304>
   1cc80:	mov	r0, r5
   1cc84:	mov	r1, r6
   1cc88:	bl	1d0dc <__flatcc_fb_gen_c_json_parser@@Base+0x6e0>
   1cc8c:	mov	r0, r4
   1cc90:	mov	r1, r7
   1cc94:	mov	r2, r6
   1cc98:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1cc9c:	ldr	r0, [r4, #220]	; 0xdc
   1cca0:	add	r0, r0, #2
   1cca4:	str	r0, [r4, #220]	; 0xdc
   1cca8:	mov	r0, r4
   1ccac:	mov	r1, r8
   1ccb0:	mov	r2, r6
   1ccb4:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ccb8:	ldr	r0, [r4, #220]	; 0xdc
   1ccbc:	cmp	r0, #0
   1ccc0:	beq	1ce10 <__flatcc_fb_gen_c_json_parser@@Base+0x414>
   1ccc4:	subs	r1, r0, #1
   1ccc8:	str	r1, [r4, #220]	; 0xdc
   1cccc:	bne	1cd78 <__flatcc_fb_gen_c_json_parser@@Base+0x37c>
   1ccd0:	b	1ce10 <__flatcc_fb_gen_c_json_parser@@Base+0x414>
   1ccd4:	mov	r0, r5
   1ccd8:	mov	r1, r6
   1ccdc:	bl	1d0dc <__flatcc_fb_gen_c_json_parser@@Base+0x6e0>
   1cce0:	mov	r0, r4
   1cce4:	movw	r1, #32488	; 0x7ee8
   1cce8:	movt	r1, #4
   1ccec:	mov	r2, r6
   1ccf0:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ccf4:	mov	r0, r4
   1ccf8:	movw	r1, #32616	; 0x7f68
   1ccfc:	movt	r1, #4
   1cd00:	mov	r2, r6
   1cd04:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1cd08:	b	1cd80 <__flatcc_fb_gen_c_json_parser@@Base+0x384>
   1cd0c:	mov	r0, r5
   1cd10:	mov	r1, r6
   1cd14:	bl	1d0dc <__flatcc_fb_gen_c_json_parser@@Base+0x6e0>
   1cd18:	mov	r0, r4
   1cd1c:	mov	r1, r9
   1cd20:	mov	r2, r6
   1cd24:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1cd28:	mov	r0, r4
   1cd2c:	mov	r1, sl
   1cd30:	mov	r2, r6
   1cd34:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1cd38:	mov	r0, r4
   1cd3c:	mov	r1, r7
   1cd40:	mov	r2, r6
   1cd44:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1cd48:	ldr	r0, [r4, #220]	; 0xdc
   1cd4c:	add	r0, r0, #2
   1cd50:	str	r0, [r4, #220]	; 0xdc
   1cd54:	mov	r0, r4
   1cd58:	mov	r1, r8
   1cd5c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1cd60:	ldr	r0, [r4, #220]	; 0xdc
   1cd64:	cmp	r0, #0
   1cd68:	beq	1ce30 <__flatcc_fb_gen_c_json_parser@@Base+0x434>
   1cd6c:	subs	r1, r0, #1
   1cd70:	str	r1, [r4, #220]	; 0xdc
   1cd74:	beq	1ce30 <__flatcc_fb_gen_c_json_parser@@Base+0x434>
   1cd78:	sub	r0, r0, #2
   1cd7c:	str	r0, [r4, #220]	; 0xdc
   1cd80:	ldr	r5, [r5]
   1cd84:	cmp	r5, #0
   1cd88:	bne	1cc3c <__flatcc_fb_gen_c_json_parser@@Base+0x240>
   1cd8c:	ldr	r0, [r4, #208]	; 0xd0
   1cd90:	ldr	r0, [r0, #60]	; 0x3c
   1cd94:	movw	r1, #53484	; 0xd0ec
   1cd98:	movt	r1, #1
   1cd9c:	mov	r2, r4
   1cda0:	bl	26504 <fb_scope_table_visit@@Base>
   1cda4:	ldr	r0, [r4, #208]	; 0xd0
   1cda8:	ldr	r2, [r0, #160]	; 0xa0
   1cdac:	movw	r1, #32879	; 0x806f
   1cdb0:	movt	r1, #4
   1cdb4:	mov	r0, r4
   1cdb8:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1cdbc:	ldr	r0, [r4, #220]	; 0xdc
   1cdc0:	add	r0, r0, #2
   1cdc4:	str	r0, [r4, #220]	; 0xdc
   1cdc8:	movw	r1, #32437	; 0x7eb5
   1cdcc:	movt	r1, #4
   1cdd0:	mov	r0, r4
   1cdd4:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1cdd8:	ldr	r0, [r4, #220]	; 0xdc
   1cddc:	cmp	r0, #0
   1cde0:	beq	1ce50 <__flatcc_fb_gen_c_json_parser@@Base+0x454>
   1cde4:	subs	r1, r0, #1
   1cde8:	str	r1, [r4, #220]	; 0xdc
   1cdec:	beq	1ce50 <__flatcc_fb_gen_c_json_parser@@Base+0x454>
   1cdf0:	sub	r0, r0, #2
   1cdf4:	str	r0, [r4, #220]	; 0xdc
   1cdf8:	movw	r1, #21264	; 0x5310
   1cdfc:	movt	r1, #3
   1ce00:	mov	r0, r4
   1ce04:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ce08:	sub	sp, fp, #28
   1ce0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ce10:	movw	r0, #32000	; 0x7d00
   1ce14:	movt	r0, #4
   1ce18:	movw	r1, #32012	; 0x7d0c
   1ce1c:	movt	r1, #4
   1ce20:	movw	r3, #32097	; 0x7d61
   1ce24:	movt	r3, #4
   1ce28:	movw	r2, #1747	; 0x6d3
   1ce2c:	bl	14950 <__assert_fail@plt>
   1ce30:	movw	r0, #32000	; 0x7d00
   1ce34:	movt	r0, #4
   1ce38:	movw	r1, #32012	; 0x7d0c
   1ce3c:	movt	r1, #4
   1ce40:	movw	r3, #32097	; 0x7d61
   1ce44:	movt	r3, #4
   1ce48:	movw	r2, #1731	; 0x6c3
   1ce4c:	bl	14950 <__assert_fail@plt>
   1ce50:	movw	r0, #32000	; 0x7d00
   1ce54:	movt	r0, #4
   1ce58:	movw	r1, #32012	; 0x7d0c
   1ce5c:	movt	r1, #4
   1ce60:	movw	r3, #32097	; 0x7d61
   1ce64:	movt	r3, #4
   1ce68:	movw	r2, #1755	; 0x6db
   1ce6c:	bl	14950 <__assert_fail@plt>
   1ce70:	movw	r0, #32000	; 0x7d00
   1ce74:	movt	r0, #4
   1ce78:	movw	r1, #32012	; 0x7d0c
   1ce7c:	movt	r1, #4
   1ce80:	movw	r3, #32097	; 0x7d61
   1ce84:	movt	r3, #4
   1ce88:	movw	r2, #1716	; 0x6b4
   1ce8c:	bl	14950 <__assert_fail@plt>
   1ce90:	push	{r4, r5, fp, lr}
   1ce94:	add	fp, sp, #8
   1ce98:	mov	r4, r0
   1ce9c:	ldr	r0, [r0, #208]	; 0xd0
   1cea0:	ldr	r5, [r0, #40]	; 0x28
   1cea4:	cmp	r5, #0
   1cea8:	bne	1cebc <__flatcc_fb_gen_c_json_parser@@Base+0x4c0>
   1ceac:	b	1cf50 <__flatcc_fb_gen_c_json_parser@@Base+0x554>
   1ceb0:	ldr	r5, [r5]
   1ceb4:	cmp	r5, #0
   1ceb8:	beq	1cf50 <__flatcc_fb_gen_c_json_parser@@Base+0x554>
   1cebc:	ldrh	r0, [r5, #8]
   1cec0:	cmp	r0, #4
   1cec4:	bhi	1ceb0 <__flatcc_fb_gen_c_json_parser@@Base+0x4b4>
   1cec8:	add	r1, pc, #0
   1cecc:	ldr	pc, [r1, r0, lsl #2]
   1ced0:	andeq	ip, r1, r4, ror #29
   1ced4:	andeq	ip, r1, r0, lsl #30
   1ced8:			; <UNDEFINED> instruction: 0x0001ceb0
   1cedc:	andeq	ip, r1, r0, asr #30
   1cee0:	andeq	ip, r1, r8, lsr #30
   1cee4:	mov	r0, r4
   1cee8:	mov	r1, r5
   1ceec:	bl	1e08c <__flatcc_fb_gen_c_json_parser@@Base+0x1690>
   1cef0:	ldr	r5, [r5]
   1cef4:	cmp	r5, #0
   1cef8:	bne	1cebc <__flatcc_fb_gen_c_json_parser@@Base+0x4c0>
   1cefc:	b	1cf50 <__flatcc_fb_gen_c_json_parser@@Base+0x554>
   1cf00:	mov	r0, r4
   1cf04:	mov	r1, r5
   1cf08:	bl	1db0c <__flatcc_fb_gen_c_json_parser@@Base+0x1110>
   1cf0c:	mov	r0, r4
   1cf10:	mov	r1, r5
   1cf14:	bl	1de4c <__flatcc_fb_gen_c_json_parser@@Base+0x1450>
   1cf18:	ldr	r5, [r5]
   1cf1c:	cmp	r5, #0
   1cf20:	bne	1cebc <__flatcc_fb_gen_c_json_parser@@Base+0x4c0>
   1cf24:	b	1cf50 <__flatcc_fb_gen_c_json_parser@@Base+0x554>
   1cf28:	mov	r0, r4
   1cf2c:	mov	r1, r5
   1cf30:	bl	1d140 <__flatcc_fb_gen_c_json_parser@@Base+0x744>
   1cf34:	mov	r0, r4
   1cf38:	mov	r1, r5
   1cf3c:	bl	1d684 <__flatcc_fb_gen_c_json_parser@@Base+0xc88>
   1cf40:	mov	r0, r4
   1cf44:	mov	r1, r5
   1cf48:	bl	1d820 <__flatcc_fb_gen_c_json_parser@@Base+0xe24>
   1cf4c:	b	1ceb0 <__flatcc_fb_gen_c_json_parser@@Base+0x4b4>
   1cf50:	ldr	r0, [r4, #208]	; 0xd0
   1cf54:	ldr	r0, [r0, #60]	; 0x3c
   1cf58:	movw	r1, #58996	; 0xe674
   1cf5c:	movt	r1, #1
   1cf60:	mov	r2, r4
   1cf64:	bl	26504 <fb_scope_table_visit@@Base>
   1cf68:	mov	r0, r4
   1cf6c:	bl	1e918 <__flatcc_fb_gen_c_json_parser@@Base+0x1f1c>
   1cf70:	mov	r0, r4
   1cf74:	pop	{r4, r5, fp, lr}
   1cf78:	b	1ebd4 <__flatcc_fb_gen_c_json_parser@@Base+0x21d8>
   1cf7c:	push	{r4, sl, fp, lr}
   1cf80:	add	fp, sp, #8
   1cf84:	mov	r4, r0
   1cf88:	bl	21660 <__flatcc_fb_gen_c_json_parser@@Base+0x4c64>
   1cf8c:	ldr	r0, [r4, #208]	; 0xd0
   1cf90:	ldr	r2, [r0, #164]	; 0xa4
   1cf94:	movw	r1, #41545	; 0xa249
   1cf98:	movt	r1, #4
   1cf9c:	mov	r0, r4
   1cfa0:	pop	{r4, sl, fp, lr}
   1cfa4:	b	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1cfa8:	sub	sp, sp, #8
   1cfac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cfb0:	add	fp, sp, #28
   1cfb4:	sub	sp, sp, #4
   1cfb8:	mov	r8, r1
   1cfbc:	mov	r4, r0
   1cfc0:	str	r3, [fp, #12]
   1cfc4:	str	r2, [fp, #8]
   1cfc8:	ldr	r0, [r0, #212]	; 0xd4
   1cfcc:	ldr	r5, [r4, #220]	; 0xdc
   1cfd0:	ldr	r7, [r0, #176]	; 0xb0
   1cfd4:	movw	r0, #4280	; 0x10b8
   1cfd8:	movt	r0, #6
   1cfdc:	ldrb	r0, [r0]
   1cfe0:	cmp	r0, #0
   1cfe4:	bne	1cffc <__flatcc_fb_gen_c_json_parser@@Base+0x600>
   1cfe8:	movw	r0, #4280	; 0x10b8
   1cfec:	movt	r0, #6
   1cff0:	mov	r1, #32
   1cff4:	mov	r2, #64	; 0x40
   1cff8:	bl	148a8 <memset@plt>
   1cffc:	ldrb	r0, [r8]
   1d000:	cmp	r0, #0
   1d004:	beq	1d098 <__flatcc_fb_gen_c_json_parser@@Base+0x69c>
   1d008:	mul	r9, r7, r5
   1d00c:	ldr	r0, [r4, #204]	; 0xcc
   1d010:	cmp	r9, #65	; 0x41
   1d014:	blt	1d06c <__flatcc_fb_gen_c_json_parser@@Base+0x670>
   1d018:	add	r6, r9, #64	; 0x40
   1d01c:	mvn	r1, r9
   1d020:	cmn	r1, #129	; 0x81
   1d024:	mvnle	r1, #128	; 0x80
   1d028:	mla	r1, r7, r5, r1
   1d02c:	add	r1, r1, #64	; 0x40
   1d030:	bic	sl, r1, #63	; 0x3f
   1d034:	movw	r7, #24941	; 0x616d
   1d038:	movt	r7, #4
   1d03c:	movw	r5, #4280	; 0x10b8
   1d040:	movt	r5, #6
   1d044:	mov	r1, r7
   1d048:	mov	r2, #64	; 0x40
   1d04c:	mov	r3, r5
   1d050:	bl	14890 <fprintf@plt>
   1d054:	sub	r6, r6, #64	; 0x40
   1d058:	ldr	r0, [r4, #204]	; 0xcc
   1d05c:	cmp	r6, #128	; 0x80
   1d060:	bgt	1d044 <__flatcc_fb_gen_c_json_parser@@Base+0x648>
   1d064:	sub	r1, r9, #64	; 0x40
   1d068:	sub	r9, r1, sl
   1d06c:	movw	r1, #24941	; 0x616d
   1d070:	movt	r1, #4
   1d074:	movw	r3, #4280	; 0x10b8
   1d078:	movt	r3, #6
   1d07c:	mov	r2, r9
   1d080:	bl	14890 <fprintf@plt>
   1d084:	add	r2, fp, #8
   1d088:	str	r2, [sp]
   1d08c:	ldr	r0, [r4, #204]	; 0xcc
   1d090:	mov	r1, r8
   1d094:	bl	148e4 <vfprintf@plt>
   1d098:	ldr	r1, [r4, #204]	; 0xcc
   1d09c:	mov	r0, #10
   1d0a0:	bl	148f0 <fputc@plt>
   1d0a4:	sub	sp, fp, #28
   1d0a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d0ac:	add	sp, sp, #8
   1d0b0:	bx	lr
   1d0b4:	ldr	r1, [r0, #212]	; 0xd4
   1d0b8:	ldr	r1, [r1, #140]	; 0x8c
   1d0bc:	cmp	r1, #0
   1d0c0:	bxeq	lr
   1d0c4:	ldr	r3, [r0, #204]	; 0xcc
   1d0c8:	movw	r0, #21186	; 0x52c2
   1d0cc:	movt	r0, #3
   1d0d0:	mov	r1, #36	; 0x24
   1d0d4:	mov	r2, #1
   1d0d8:	b	14830 <fwrite@plt>
   1d0dc:	mov	r2, r1
   1d0e0:	mov	r1, r0
   1d0e4:	ldr	r0, [r0, #12]
   1d0e8:	b	15b70 <__flatcc_fb_scoped_symbol_name@@Base>
   1d0ec:	push	{r4, r5, fp, lr}
   1d0f0:	add	fp, sp, #8
   1d0f4:	sub	sp, sp, #208	; 0xd0
   1d0f8:	mov	r4, r0
   1d0fc:	add	r5, sp, #4
   1d100:	mov	r0, r1
   1d104:	mov	r1, r5
   1d108:	bl	15ab8 <__flatcc_fb_copy_scope@@Base>
   1d10c:	ldr	r0, [r4, #208]	; 0xd0
   1d110:	ldr	r2, [r0, #160]	; 0xa0
   1d114:	movw	r1, #32986	; 0x80da
   1d118:	movt	r1, #4
   1d11c:	mov	r0, r4
   1d120:	mov	r3, r5
   1d124:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d128:	movw	r1, #32437	; 0x7eb5
   1d12c:	movt	r1, #4
   1d130:	mov	r0, r4
   1d134:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d138:	sub	sp, fp, #8
   1d13c:	pop	{r4, r5, fp, pc}
   1d140:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d144:	add	fp, sp, #28
   1d148:	sub	sp, sp, #468	; 0x1d4
   1d14c:	mov	r5, r1
   1d150:	mov	r4, r0
   1d154:	add	r6, sp, #240	; 0xf0
   1d158:	mov	r0, r6
   1d15c:	mov	r1, #0
   1d160:	mov	r2, #220	; 0xdc
   1d164:	bl	148a8 <memset@plt>
   1d168:	add	r0, sp, #16
   1d16c:	mov	r1, #0
   1d170:	mov	r2, #220	; 0xdc
   1d174:	bl	148a8 <memset@plt>
   1d178:	mov	r0, r5
   1d17c:	mov	r1, r6
   1d180:	bl	1d0dc <__flatcc_fb_gen_c_json_parser@@Base+0x6e0>
   1d184:	movw	r1, #33094	; 0x8146
   1d188:	movt	r1, #4
   1d18c:	mov	r0, r4
   1d190:	mov	r2, r6
   1d194:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d198:	movw	r1, #45227	; 0xb0ab
   1d19c:	movt	r1, #4
   1d1a0:	mov	r0, r4
   1d1a4:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d1a8:	ldr	r0, [r4, #220]	; 0xdc
   1d1ac:	add	r0, r0, #1
   1d1b0:	str	r0, [r4, #220]	; 0xdc
   1d1b4:	movw	r1, #21264	; 0x5310
   1d1b8:	movt	r1, #3
   1d1bc:	mov	r0, r4
   1d1c0:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d1c4:	movw	r1, #33238	; 0x81d6
   1d1c8:	movt	r1, #4
   1d1cc:	mov	r0, r4
   1d1d0:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d1d4:	movw	r1, #33251	; 0x81e3
   1d1d8:	movt	r1, #4
   1d1dc:	mov	r0, r4
   1d1e0:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d1e4:	movw	r1, #33267	; 0x81f3
   1d1e8:	movt	r1, #4
   1d1ec:	mov	r0, r4
   1d1f0:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d1f4:	ldr	r0, [r4, #220]	; 0xdc
   1d1f8:	add	r0, r0, #1
   1d1fc:	str	r0, [r4, #220]	; 0xdc
   1d200:	movw	r1, #33286	; 0x8206
   1d204:	movt	r1, #4
   1d208:	mov	r0, r4
   1d20c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d210:	ldr	r0, [r4, #220]	; 0xdc
   1d214:	cmp	r0, #0
   1d218:	beq	1d5c4 <__flatcc_fb_gen_c_json_parser@@Base+0xbc8>
   1d21c:	sub	r0, r0, #1
   1d220:	str	r0, [r4, #220]	; 0xdc
   1d224:	ldr	r5, [r5, #20]
   1d228:	cmp	r5, #0
   1d22c:	beq	1d368 <__flatcc_fb_gen_c_json_parser@@Base+0x96c>
   1d230:	add	r6, sp, #12
   1d234:	add	r7, sp, #8
   1d238:	movw	r8, #33391	; 0x826f
   1d23c:	movt	r8, #4
   1d240:	movw	sl, #33567	; 0x831f
   1d244:	movt	sl, #4
   1d248:	add	r9, sp, #16
   1d24c:	mov	r0, r5
   1d250:	mov	r1, r6
   1d254:	mov	r2, r7
   1d258:	bl	1ec04 <__flatcc_fb_gen_c_json_parser@@Base+0x2208>
   1d25c:	ldrh	r0, [r5, #24]
   1d260:	cmp	r0, #0
   1d264:	beq	1d35c <__flatcc_fb_gen_c_json_parser@@Base+0x960>
   1d268:	cmp	r0, #10
   1d26c:	beq	1d2d4 <__flatcc_fb_gen_c_json_parser@@Base+0x8d8>
   1d270:	cmp	r0, #14
   1d274:	bne	1d4e4 <__flatcc_fb_gen_c_json_parser@@Base+0xae8>
   1d278:	ldr	r0, [r5, #16]
   1d27c:	mov	r1, r9
   1d280:	bl	1d0dc <__flatcc_fb_gen_c_json_parser@@Base+0x6e0>
   1d284:	ldr	r2, [r5, #48]	; 0x30
   1d288:	ldr	r3, [sp, #12]
   1d28c:	ldr	r0, [sp, #8]
   1d290:	str	r0, [sp]
   1d294:	mov	r0, r4
   1d298:	mov	r1, r8
   1d29c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d2a0:	ldr	r0, [r4, #220]	; 0xdc
   1d2a4:	add	r0, r0, #1
   1d2a8:	str	r0, [r4, #220]	; 0xdc
   1d2ac:	ldr	r0, [r5, #16]
   1d2b0:	ldrh	r0, [r0, #8]
   1d2b4:	cmp	r0, #1
   1d2b8:	beq	1d328 <__flatcc_fb_gen_c_json_parser@@Base+0x92c>
   1d2bc:	cmp	r0, #0
   1d2c0:	bne	1d534 <__flatcc_fb_gen_c_json_parser@@Base+0xb38>
   1d2c4:	mov	r0, r4
   1d2c8:	movw	r1, #33411	; 0x8283
   1d2cc:	movt	r1, #4
   1d2d0:	b	1d334 <__flatcc_fb_gen_c_json_parser@@Base+0x938>
   1d2d4:	ldr	r2, [r5, #48]	; 0x30
   1d2d8:	ldr	r3, [sp, #12]
   1d2dc:	ldr	r0, [sp, #8]
   1d2e0:	str	r0, [sp]
   1d2e4:	mov	r0, r4
   1d2e8:	mov	r1, r8
   1d2ec:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d2f0:	ldr	r0, [r4, #220]	; 0xdc
   1d2f4:	add	r0, r0, #1
   1d2f8:	str	r0, [r4, #220]	; 0xdc
   1d2fc:	mov	r0, r4
   1d300:	movw	r1, #33574	; 0x8326
   1d304:	movt	r1, #4
   1d308:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d30c:	mov	r0, r4
   1d310:	mov	r1, sl
   1d314:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d318:	ldr	r0, [r4, #220]	; 0xdc
   1d31c:	cmp	r0, #0
   1d320:	bne	1d354 <__flatcc_fb_gen_c_json_parser@@Base+0x958>
   1d324:	b	1d5a4 <__flatcc_fb_gen_c_json_parser@@Base+0xba8>
   1d328:	mov	r0, r4
   1d32c:	movw	r1, #33461	; 0x82b5
   1d330:	movt	r1, #4
   1d334:	mov	r2, r9
   1d338:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d33c:	mov	r0, r4
   1d340:	mov	r1, sl
   1d344:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d348:	ldr	r0, [r4, #220]	; 0xdc
   1d34c:	cmp	r0, #0
   1d350:	beq	1d584 <__flatcc_fb_gen_c_json_parser@@Base+0xb88>
   1d354:	sub	r0, r0, #1
   1d358:	str	r0, [r4, #220]	; 0xdc
   1d35c:	ldr	r5, [r5]
   1d360:	cmp	r5, #0
   1d364:	bne	1d24c <__flatcc_fb_gen_c_json_parser@@Base+0x850>
   1d368:	movw	r1, #33682	; 0x8392
   1d36c:	movt	r1, #4
   1d370:	mov	r0, r4
   1d374:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d378:	ldr	r0, [r4, #220]	; 0xdc
   1d37c:	add	r0, r0, #1
   1d380:	str	r0, [r4, #220]	; 0xdc
   1d384:	movw	r1, #33691	; 0x839b
   1d388:	movt	r1, #4
   1d38c:	mov	r0, r4
   1d390:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d394:	ldr	r0, [r4, #220]	; 0xdc
   1d398:	add	r0, r0, #1
   1d39c:	str	r0, [r4, #220]	; 0xdc
   1d3a0:	movw	r1, #33748	; 0x83d4
   1d3a4:	movt	r1, #4
   1d3a8:	mov	r0, r4
   1d3ac:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d3b0:	ldr	r0, [r4, #220]	; 0xdc
   1d3b4:	cmp	r0, #0
   1d3b8:	beq	1d5e4 <__flatcc_fb_gen_c_json_parser@@Base+0xbe8>
   1d3bc:	sub	r0, r0, #1
   1d3c0:	str	r0, [r4, #220]	; 0xdc
   1d3c4:	movw	r1, #33840	; 0x8430
   1d3c8:	movt	r1, #4
   1d3cc:	mov	r0, r4
   1d3d0:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d3d4:	ldr	r0, [r4, #220]	; 0xdc
   1d3d8:	add	r0, r0, #1
   1d3dc:	str	r0, [r4, #220]	; 0xdc
   1d3e0:	movw	r1, #33849	; 0x8439
   1d3e4:	movt	r1, #4
   1d3e8:	mov	r0, r4
   1d3ec:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d3f0:	ldr	r0, [r4, #220]	; 0xdc
   1d3f4:	cmp	r0, #0
   1d3f8:	beq	1d604 <__flatcc_fb_gen_c_json_parser@@Base+0xc08>
   1d3fc:	sub	r0, r0, #1
   1d400:	str	r0, [r4, #220]	; 0xdc
   1d404:	movw	r1, #30345	; 0x7689
   1d408:	movt	r1, #3
   1d40c:	mov	r0, r4
   1d410:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d414:	ldr	r0, [r4, #220]	; 0xdc
   1d418:	cmp	r0, #0
   1d41c:	beq	1d624 <__flatcc_fb_gen_c_json_parser@@Base+0xc28>
   1d420:	sub	r0, r0, #1
   1d424:	str	r0, [r4, #220]	; 0xdc
   1d428:	movw	r1, #30345	; 0x7689
   1d42c:	movt	r1, #3
   1d430:	mov	r0, r4
   1d434:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d438:	movw	r1, #33904	; 0x8470
   1d43c:	movt	r1, #4
   1d440:	mov	r0, r4
   1d444:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d448:	movw	r1, #33932	; 0x848c
   1d44c:	movt	r1, #4
   1d450:	mov	r0, r4
   1d454:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d458:	ldr	r0, [r4, #220]	; 0xdc
   1d45c:	add	r0, r0, #1
   1d460:	str	r0, [r4, #220]	; 0xdc
   1d464:	movw	r1, #33948	; 0x849c
   1d468:	movt	r1, #4
   1d46c:	mov	r0, r4
   1d470:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d474:	ldr	r0, [r4, #220]	; 0xdc
   1d478:	cmp	r0, #0
   1d47c:	beq	1d644 <__flatcc_fb_gen_c_json_parser@@Base+0xc48>
   1d480:	sub	r0, r0, #1
   1d484:	str	r0, [r4, #220]	; 0xdc
   1d488:	movw	r1, #30345	; 0x7689
   1d48c:	movt	r1, #3
   1d490:	mov	r0, r4
   1d494:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d498:	movw	r1, #33920	; 0x8480
   1d49c:	movt	r1, #4
   1d4a0:	mov	r0, r4
   1d4a4:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d4a8:	ldr	r0, [r4, #220]	; 0xdc
   1d4ac:	cmp	r0, #0
   1d4b0:	beq	1d664 <__flatcc_fb_gen_c_json_parser@@Base+0xc68>
   1d4b4:	sub	r0, r0, #1
   1d4b8:	str	r0, [r4, #220]	; 0xdc
   1d4bc:	movw	r1, #30345	; 0x7689
   1d4c0:	movt	r1, #3
   1d4c4:	mov	r0, r4
   1d4c8:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d4cc:	movw	r1, #21264	; 0x5310
   1d4d0:	movt	r1, #3
   1d4d4:	mov	r0, r4
   1d4d8:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d4dc:	sub	sp, fp, #28
   1d4e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d4e4:	movw	r0, #4264	; 0x10a8
   1d4e8:	movt	r0, #6
   1d4ec:	ldr	r0, [r0]
   1d4f0:	movw	r1, #33636	; 0x8364
   1d4f4:	movt	r1, #4
   1d4f8:	str	r1, [sp]
   1d4fc:	movw	r1, #21007	; 0x520f
   1d500:	movt	r1, #3
   1d504:	movw	r4, #32012	; 0x7d0c
   1d508:	movt	r4, #4
   1d50c:	mov	r2, r4
   1d510:	movw	r3, #1535	; 0x5ff
   1d514:	bl	14890 <fprintf@plt>
   1d518:	movw	r0, #24925	; 0x615d
   1d51c:	movt	r0, #4
   1d520:	movw	r3, #33333	; 0x8235
   1d524:	movt	r3, #4
   1d528:	mov	r1, r4
   1d52c:	movw	r2, #1535	; 0x5ff
   1d530:	bl	14950 <__assert_fail@plt>
   1d534:	movw	r0, #4264	; 0x10a8
   1d538:	movt	r0, #6
   1d53c:	ldr	r0, [r0]
   1d540:	movw	r1, #33512	; 0x82e8
   1d544:	movt	r1, #4
   1d548:	str	r1, [sp]
   1d54c:	movw	r1, #21007	; 0x520f
   1d550:	movt	r1, #3
   1d554:	movw	r4, #32012	; 0x7d0c
   1d558:	movt	r4, #4
   1d55c:	mov	r2, r4
   1d560:	movw	r3, #1522	; 0x5f2
   1d564:	bl	14890 <fprintf@plt>
   1d568:	movw	r0, #24925	; 0x615d
   1d56c:	movt	r0, #4
   1d570:	movw	r3, #33333	; 0x8235
   1d574:	movt	r3, #4
   1d578:	mov	r1, r4
   1d57c:	movw	r2, #1522	; 0x5f2
   1d580:	bl	14950 <__assert_fail@plt>
   1d584:	movw	r0, #32000	; 0x7d00
   1d588:	movt	r0, #4
   1d58c:	movw	r1, #32012	; 0x7d0c
   1d590:	movt	r1, #4
   1d594:	movw	r3, #33333	; 0x8235
   1d598:	movt	r3, #4
   1d59c:	movw	r2, #1526	; 0x5f6
   1d5a0:	bl	14950 <__assert_fail@plt>
   1d5a4:	movw	r0, #32000	; 0x7d00
   1d5a8:	movt	r0, #4
   1d5ac:	movw	r1, #32012	; 0x7d0c
   1d5b0:	movt	r1, #4
   1d5b4:	movw	r3, #33333	; 0x8235
   1d5b8:	movt	r3, #4
   1d5bc:	movw	r2, #1532	; 0x5fc
   1d5c0:	bl	14950 <__assert_fail@plt>
   1d5c4:	movw	r0, #32000	; 0x7d00
   1d5c8:	movt	r0, #4
   1d5cc:	movw	r1, #32012	; 0x7d0c
   1d5d0:	movt	r1, #4
   1d5d4:	movw	r3, #33333	; 0x8235
   1d5d8:	movt	r3, #4
   1d5dc:	movw	r2, #1503	; 0x5df
   1d5e0:	bl	14950 <__assert_fail@plt>
   1d5e4:	movw	r0, #32000	; 0x7d00
   1d5e8:	movt	r0, #4
   1d5ec:	movw	r1, #32012	; 0x7d0c
   1d5f0:	movt	r1, #4
   1d5f4:	movw	r3, #33333	; 0x8235
   1d5f8:	movt	r3, #4
   1d5fc:	movw	r2, #1543	; 0x607
   1d600:	bl	14950 <__assert_fail@plt>
   1d604:	movw	r0, #32000	; 0x7d00
   1d608:	movt	r0, #4
   1d60c:	movw	r1, #32012	; 0x7d0c
   1d610:	movt	r1, #4
   1d614:	movw	r3, #33333	; 0x8235
   1d618:	movt	r3, #4
   1d61c:	movw	r2, #1545	; 0x609
   1d620:	bl	14950 <__assert_fail@plt>
   1d624:	movw	r0, #32000	; 0x7d00
   1d628:	movt	r0, #4
   1d62c:	movw	r1, #32012	; 0x7d0c
   1d630:	movt	r1, #4
   1d634:	movw	r3, #33333	; 0x8235
   1d638:	movt	r3, #4
   1d63c:	movw	r2, #1546	; 0x60a
   1d640:	bl	14950 <__assert_fail@plt>
   1d644:	movw	r0, #32000	; 0x7d00
   1d648:	movt	r0, #4
   1d64c:	movw	r1, #32012	; 0x7d0c
   1d650:	movt	r1, #4
   1d654:	movw	r3, #33333	; 0x8235
   1d658:	movt	r3, #4
   1d65c:	movw	r2, #1550	; 0x60e
   1d660:	bl	14950 <__assert_fail@plt>
   1d664:	movw	r0, #32000	; 0x7d00
   1d668:	movt	r0, #4
   1d66c:	movw	r1, #32012	; 0x7d0c
   1d670:	movt	r1, #4
   1d674:	movw	r3, #33333	; 0x8235
   1d678:	movt	r3, #4
   1d67c:	mov	r2, #1552	; 0x610
   1d680:	bl	14950 <__assert_fail@plt>
   1d684:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1d688:	add	fp, sp, #24
   1d68c:	sub	sp, sp, #240	; 0xf0
   1d690:	mov	r5, r1
   1d694:	mov	r4, r0
   1d698:	add	r6, sp, #16
   1d69c:	mov	r0, r6
   1d6a0:	mov	r1, #0
   1d6a4:	mov	r2, #220	; 0xdc
   1d6a8:	bl	148a8 <memset@plt>
   1d6ac:	mov	r0, r5
   1d6b0:	mov	r1, r6
   1d6b4:	bl	1d0dc <__flatcc_fb_gen_c_json_parser@@Base+0x6e0>
   1d6b8:	movw	r1, #34034	; 0x84f2
   1d6bc:	movt	r1, #4
   1d6c0:	mov	r0, r4
   1d6c4:	mov	r2, r6
   1d6c8:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d6cc:	movw	r1, #45227	; 0xb0ab
   1d6d0:	movt	r1, #4
   1d6d4:	mov	r0, r4
   1d6d8:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d6dc:	ldr	r0, [r4, #220]	; 0xdc
   1d6e0:	add	r0, r0, #1
   1d6e4:	str	r0, [r4, #220]	; 0xdc
   1d6e8:	movw	r1, #33251	; 0x81e3
   1d6ec:	movt	r1, #4
   1d6f0:	mov	r0, r4
   1d6f4:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d6f8:	ldr	r5, [r5, #20]
   1d6fc:	cmp	r5, #0
   1d700:	beq	1d770 <__flatcc_fb_gen_c_json_parser@@Base+0xd74>
   1d704:	add	r6, sp, #12
   1d708:	add	r7, sp, #8
   1d70c:	movw	r8, #34085	; 0x8525
   1d710:	movt	r8, #4
   1d714:	movw	r9, #34114	; 0x8542
   1d718:	movt	r9, #4
   1d71c:	mov	r0, r5
   1d720:	mov	r1, r6
   1d724:	mov	r2, r7
   1d728:	bl	1ec04 <__flatcc_fb_gen_c_json_parser@@Base+0x2208>
   1d72c:	ldrh	r0, [r5, #24]
   1d730:	cmp	r0, #0
   1d734:	beq	1d758 <__flatcc_fb_gen_c_json_parser@@Base+0xd5c>
   1d738:	ldr	r2, [r5, #48]	; 0x30
   1d73c:	ldr	r3, [sp, #12]
   1d740:	ldr	r0, [sp, #8]
   1d744:	str	r0, [sp]
   1d748:	mov	r0, r4
   1d74c:	mov	r1, r9
   1d750:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d754:	b	1d764 <__flatcc_fb_gen_c_json_parser@@Base+0xd68>
   1d758:	mov	r0, r4
   1d75c:	mov	r1, r8
   1d760:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d764:	ldr	r5, [r5]
   1d768:	cmp	r5, #0
   1d76c:	bne	1d71c <__flatcc_fb_gen_c_json_parser@@Base+0xd20>
   1d770:	movw	r1, #34144	; 0x8560
   1d774:	movt	r1, #4
   1d778:	mov	r0, r4
   1d77c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d780:	ldr	r0, [r4, #220]	; 0xdc
   1d784:	adds	r1, r0, #1
   1d788:	str	r1, [r4, #220]	; 0xdc
   1d78c:	beq	1d7e0 <__flatcc_fb_gen_c_json_parser@@Base+0xde4>
   1d790:	str	r0, [r4, #220]	; 0xdc
   1d794:	movw	r1, #30345	; 0x7689
   1d798:	movt	r1, #3
   1d79c:	mov	r0, r4
   1d7a0:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d7a4:	ldr	r0, [r4, #220]	; 0xdc
   1d7a8:	cmp	r0, #0
   1d7ac:	beq	1d800 <__flatcc_fb_gen_c_json_parser@@Base+0xe04>
   1d7b0:	sub	r0, r0, #1
   1d7b4:	str	r0, [r4, #220]	; 0xdc
   1d7b8:	movw	r1, #30345	; 0x7689
   1d7bc:	movt	r1, #3
   1d7c0:	mov	r0, r4
   1d7c4:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d7c8:	movw	r1, #21264	; 0x5310
   1d7cc:	movt	r1, #3
   1d7d0:	mov	r0, r4
   1d7d4:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d7d8:	sub	sp, fp, #24
   1d7dc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1d7e0:	movw	r0, #32000	; 0x7d00
   1d7e4:	movt	r0, #4
   1d7e8:	movw	r1, #32012	; 0x7d0c
   1d7ec:	movt	r1, #4
   1d7f0:	movw	r3, #34163	; 0x8573
   1d7f4:	movt	r3, #4
   1d7f8:	movw	r2, #1582	; 0x62e
   1d7fc:	bl	14950 <__assert_fail@plt>
   1d800:	movw	r0, #32000	; 0x7d00
   1d804:	movt	r0, #4
   1d808:	movw	r1, #32012	; 0x7d0c
   1d80c:	movt	r1, #4
   1d810:	movw	r3, #34163	; 0x8573
   1d814:	movt	r3, #4
   1d818:	movw	r2, #1583	; 0x62f
   1d81c:	bl	14950 <__assert_fail@plt>
   1d820:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1d824:	add	fp, sp, #24
   1d828:	sub	sp, sp, #264	; 0x108
   1d82c:	mov	r5, r1
   1d830:	mov	r4, r0
   1d834:	mov	r0, #0
   1d838:	str	r0, [sp, #36]	; 0x24
   1d83c:	vmov.i32	q8, #0	; 0x00000000
   1d840:	mov	r0, #12
   1d844:	add	r1, sp, #8
   1d848:	vst1.64	{d16-d17}, [r1], r0
   1d84c:	vst1.32	{d16-d17}, [r1]
   1d850:	ldrh	r0, [r5, #8]
   1d854:	sub	r0, r0, #3
   1d858:	uxth	r0, r0
   1d85c:	cmp	r0, #2
   1d860:	bcs	1da7c <__flatcc_fb_gen_c_json_parser@@Base+0x1080>
   1d864:	add	r1, sp, #36	; 0x24
   1d868:	mov	r0, r5
   1d86c:	bl	1ec20 <__flatcc_fb_gen_c_json_parser@@Base+0x2224>
   1d870:	str	r0, [sp, #8]
   1d874:	ldr	r7, [sp, #36]	; 0x24
   1d878:	cmp	r0, #0
   1d87c:	bne	1d888 <__flatcc_fb_gen_c_json_parser@@Base+0xe8c>
   1d880:	cmp	r7, #1
   1d884:	bge	1da9c <__flatcc_fb_gen_c_json_parser@@Base+0x10a0>
   1d888:	mov	r0, #2
   1d88c:	str	r0, [sp, #24]
   1d890:	str	r5, [sp, #20]
   1d894:	movw	r0, #60828	; 0xed9c
   1d898:	movt	r0, #1
   1d89c:	str	r0, [sp, #12]
   1d8a0:	movw	r0, #60992	; 0xee40
   1d8a4:	movt	r0, #1
   1d8a8:	str	r0, [sp, #16]
   1d8ac:	add	r6, sp, #40	; 0x28
   1d8b0:	mov	r0, r6
   1d8b4:	mov	r1, #0
   1d8b8:	mov	r2, #220	; 0xdc
   1d8bc:	bl	148a8 <memset@plt>
   1d8c0:	mov	r0, r5
   1d8c4:	mov	r1, r6
   1d8c8:	bl	1d0dc <__flatcc_fb_gen_c_json_parser@@Base+0x6e0>
   1d8cc:	movw	r1, #32338	; 0x7e52
   1d8d0:	movt	r1, #4
   1d8d4:	mov	r0, r4
   1d8d8:	mov	r2, r6
   1d8dc:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d8e0:	ldr	r0, [r4, #220]	; 0xdc
   1d8e4:	add	r0, r0, #2
   1d8e8:	str	r0, [r4, #220]	; 0xdc
   1d8ec:	movw	r1, #34343	; 0x8627
   1d8f0:	movt	r1, #4
   1d8f4:	mov	r0, r4
   1d8f8:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d8fc:	ldr	r0, [r4, #220]	; 0xdc
   1d900:	cmp	r0, #0
   1d904:	beq	1da5c <__flatcc_fb_gen_c_json_parser@@Base+0x1060>
   1d908:	subs	r1, r0, #1
   1d90c:	str	r1, [r4, #220]	; 0xdc
   1d910:	beq	1da5c <__flatcc_fb_gen_c_json_parser@@Base+0x1060>
   1d914:	sub	r0, r0, #2
   1d918:	str	r0, [r4, #220]	; 0xdc
   1d91c:	movw	r1, #45227	; 0xb0ab
   1d920:	movt	r1, #4
   1d924:	mov	r0, r4
   1d928:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d92c:	ldr	r0, [r4, #220]	; 0xdc
   1d930:	add	r0, r0, #1
   1d934:	str	r0, [r4, #220]	; 0xdc
   1d938:	cmp	r7, #0
   1d93c:	beq	1d9e8 <__flatcc_fb_gen_c_json_parser@@Base+0xfec>
   1d940:	movw	r1, #34464	; 0x86a0
   1d944:	movt	r1, #4
   1d948:	mov	r0, r4
   1d94c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d950:	movw	r1, #34493	; 0x86bd
   1d954:	movt	r1, #4
   1d958:	mov	r0, r4
   1d95c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d960:	movw	r1, #34511	; 0x86cf
   1d964:	movt	r1, #4
   1d968:	mov	r0, r4
   1d96c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d970:	movw	r1, #21264	; 0x5310
   1d974:	movt	r1, #3
   1d978:	mov	r0, r4
   1d97c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d980:	movw	r1, #34523	; 0x86db
   1d984:	movt	r1, #4
   1d988:	mov	r0, r4
   1d98c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d990:	mov	r0, #0
   1d994:	str	r0, [sp]
   1d998:	sub	r3, r7, #1
   1d99c:	add	r1, sp, #8
   1d9a0:	mov	r0, r4
   1d9a4:	mov	r2, #0
   1d9a8:	bl	1ee4c <__flatcc_fb_gen_c_json_parser@@Base+0x2450>
   1d9ac:	movw	r1, #33920	; 0x8480
   1d9b0:	movt	r1, #4
   1d9b4:	mov	r0, r4
   1d9b8:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d9bc:	ldr	r0, [r4, #220]	; 0xdc
   1d9c0:	cmp	r0, #0
   1d9c4:	bne	1da24 <__flatcc_fb_gen_c_json_parser@@Base+0x1028>
   1d9c8:	movw	r0, #32000	; 0x7d00
   1d9cc:	movt	r0, #4
   1d9d0:	movw	r1, #32012	; 0x7d0c
   1d9d4:	movt	r1, #4
   1d9d8:	movw	r3, #34226	; 0x85b2
   1d9dc:	movt	r3, #4
   1d9e0:	movw	r2, #1278	; 0x4fe
   1d9e4:	bl	14950 <__assert_fail@plt>
   1d9e8:	movw	r1, #34393	; 0x8659
   1d9ec:	movt	r1, #4
   1d9f0:	mov	r0, r4
   1d9f4:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1d9f8:	movw	r1, #34419	; 0x8673
   1d9fc:	movt	r1, #4
   1da00:	mov	r0, r4
   1da04:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1da08:	movw	r1, #34435	; 0x8683
   1da0c:	movt	r1, #4
   1da10:	mov	r0, r4
   1da14:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1da18:	ldr	r0, [r4, #220]	; 0xdc
   1da1c:	cmp	r0, #0
   1da20:	beq	1daec <__flatcc_fb_gen_c_json_parser@@Base+0x10f0>
   1da24:	sub	r0, r0, #1
   1da28:	str	r0, [r4, #220]	; 0xdc
   1da2c:	movw	r1, #30345	; 0x7689
   1da30:	movt	r1, #3
   1da34:	mov	r0, r4
   1da38:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1da3c:	movw	r1, #21264	; 0x5310
   1da40:	movt	r1, #3
   1da44:	mov	r0, r4
   1da48:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1da4c:	ldr	r0, [sp, #8]
   1da50:	bl	1f438 <__flatcc_fb_gen_c_json_parser@@Base+0x2a3c>
   1da54:	sub	sp, fp, #24
   1da58:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1da5c:	movw	r0, #32000	; 0x7d00
   1da60:	movt	r0, #4
   1da64:	movw	r1, #32012	; 0x7d0c
   1da68:	movt	r1, #4
   1da6c:	movw	r3, #34226	; 0x85b2
   1da70:	movt	r3, #4
   1da74:	movw	r2, #1263	; 0x4ef
   1da78:	bl	14950 <__assert_fail@plt>
   1da7c:	movw	r0, #46709	; 0xb675
   1da80:	movt	r0, #3
   1da84:	movw	r1, #32012	; 0x7d0c
   1da88:	movt	r1, #4
   1da8c:	movw	r3, #34226	; 0x85b2
   1da90:	movt	r3, #4
   1da94:	movw	r2, #1246	; 0x4de
   1da98:	bl	14950 <__assert_fail@plt>
   1da9c:	movw	r0, #4264	; 0x10a8
   1daa0:	movt	r0, #6
   1daa4:	ldr	r0, [r0]
   1daa8:	movw	r1, #34283	; 0x85eb
   1daac:	movt	r1, #4
   1dab0:	str	r1, [sp]
   1dab4:	movw	r1, #21007	; 0x520f
   1dab8:	movt	r1, #3
   1dabc:	movw	r4, #32012	; 0x7d0c
   1dac0:	movt	r4, #4
   1dac4:	mov	r2, r4
   1dac8:	movw	r3, #1249	; 0x4e1
   1dacc:	bl	14890 <fprintf@plt>
   1dad0:	movw	r0, #24925	; 0x615d
   1dad4:	movt	r0, #4
   1dad8:	movw	r3, #34226	; 0x85b2
   1dadc:	movt	r3, #4
   1dae0:	mov	r1, r4
   1dae4:	movw	r2, #1249	; 0x4e1
   1dae8:	bl	14950 <__assert_fail@plt>
   1daec:	movw	r0, #32000	; 0x7d00
   1daf0:	movt	r0, #4
   1daf4:	movw	r1, #32012	; 0x7d0c
   1daf8:	movt	r1, #4
   1dafc:	movw	r3, #34226	; 0x85b2
   1db00:	movt	r3, #4
   1db04:	movw	r2, #1269	; 0x4f5
   1db08:	bl	14950 <__assert_fail@plt>
   1db0c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1db10:	add	fp, sp, #24
   1db14:	sub	sp, sp, #264	; 0x108
   1db18:	mov	r5, r1
   1db1c:	mov	r4, r0
   1db20:	vmov.i32	q8, #0	; 0x00000000
   1db24:	mov	r0, #12
   1db28:	add	r1, sp, #8
   1db2c:	vst1.64	{d16-d17}, [r1], r0
   1db30:	vst1.32	{d16-d17}, [r1]
   1db34:	ldrh	r0, [r5, #8]
   1db38:	cmp	r0, #1
   1db3c:	bne	1dd9c <__flatcc_fb_gen_c_json_parser@@Base+0x13a0>
   1db40:	add	r1, sp, #36	; 0x24
   1db44:	mov	r0, r5
   1db48:	bl	1ec20 <__flatcc_fb_gen_c_json_parser@@Base+0x2224>
   1db4c:	str	r0, [sp, #8]
   1db50:	ldr	r7, [sp, #36]	; 0x24
   1db54:	cmp	r0, #0
   1db58:	bne	1db64 <__flatcc_fb_gen_c_json_parser@@Base+0x1168>
   1db5c:	cmp	r7, #1
   1db60:	bge	1ddbc <__flatcc_fb_gen_c_json_parser@@Base+0x13c0>
   1db64:	mov	r0, #1
   1db68:	str	r0, [sp, #24]
   1db6c:	str	r5, [sp, #20]
   1db70:	movw	r0, #64552	; 0xfc28
   1db74:	movt	r0, #1
   1db78:	str	r0, [sp, #12]
   1db7c:	movw	r0, #64724	; 0xfcd4
   1db80:	movt	r0, #1
   1db84:	str	r0, [sp, #16]
   1db88:	add	r6, sp, #40	; 0x28
   1db8c:	mov	r0, r6
   1db90:	mov	r1, #0
   1db94:	mov	r2, #220	; 0xdc
   1db98:	bl	148a8 <memset@plt>
   1db9c:	mov	r0, r5
   1dba0:	mov	r1, r6
   1dba4:	bl	1d0dc <__flatcc_fb_gen_c_json_parser@@Base+0x6e0>
   1dba8:	movw	r1, #35595	; 0x8b0b
   1dbac:	movt	r1, #4
   1dbb0:	mov	r0, r4
   1dbb4:	mov	r2, r6
   1dbb8:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1dbbc:	movw	r1, #45227	; 0xb0ab
   1dbc0:	movt	r1, #4
   1dbc4:	mov	r0, r4
   1dbc8:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1dbcc:	ldr	r0, [r4, #220]	; 0xdc
   1dbd0:	add	r0, r0, #1
   1dbd4:	str	r0, [r4, #220]	; 0xdc
   1dbd8:	movw	r1, #35722	; 0x8b8a
   1dbdc:	movt	r1, #4
   1dbe0:	mov	r0, r4
   1dbe4:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1dbe8:	cmp	r7, #1
   1dbec:	blt	1dc30 <__flatcc_fb_gen_c_json_parser@@Base+0x1234>
   1dbf0:	movw	r1, #35732	; 0x8b94
   1dbf4:	movt	r1, #4
   1dbf8:	mov	r0, r4
   1dbfc:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1dc00:	movw	r1, #35758	; 0x8bae
   1dc04:	movt	r1, #4
   1dc08:	mov	r0, r4
   1dc0c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1dc10:	movw	r1, #34493	; 0x86bd
   1dc14:	movt	r1, #4
   1dc18:	mov	r0, r4
   1dc1c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1dc20:	movw	r1, #34511	; 0x86cf
   1dc24:	movt	r1, #4
   1dc28:	mov	r0, r4
   1dc2c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1dc30:	movw	r1, #21264	; 0x5310
   1dc34:	movt	r1, #3
   1dc38:	mov	r0, r4
   1dc3c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1dc40:	movw	r1, #35770	; 0x8bba
   1dc44:	movt	r1, #4
   1dc48:	mov	r0, r4
   1dc4c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1dc50:	movw	r1, #35831	; 0x8bf7
   1dc54:	movt	r1, #4
   1dc58:	mov	r0, r4
   1dc5c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1dc60:	ldr	r0, [r4, #220]	; 0xdc
   1dc64:	add	r0, r0, #1
   1dc68:	str	r0, [r4, #220]	; 0xdc
   1dc6c:	cmp	r7, #0
   1dc70:	beq	1dcb4 <__flatcc_fb_gen_c_json_parser@@Base+0x12b8>
   1dc74:	movw	r1, #35924	; 0x8c54
   1dc78:	movt	r1, #4
   1dc7c:	mov	r0, r4
   1dc80:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1dc84:	movw	r1, #34523	; 0x86db
   1dc88:	movt	r1, #4
   1dc8c:	mov	r0, r4
   1dc90:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1dc94:	mov	r0, #0
   1dc98:	str	r0, [sp]
   1dc9c:	sub	r3, r7, #1
   1dca0:	add	r1, sp, #8
   1dca4:	mov	r0, r4
   1dca8:	mov	r2, #0
   1dcac:	bl	1ee4c <__flatcc_fb_gen_c_json_parser@@Base+0x2450>
   1dcb0:	b	1dcd4 <__flatcc_fb_gen_c_json_parser@@Base+0x12d8>
   1dcb4:	movw	r1, #35846	; 0x8c06
   1dcb8:	movt	r1, #4
   1dcbc:	mov	r0, r4
   1dcc0:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1dcc4:	movw	r1, #35866	; 0x8c1a
   1dcc8:	movt	r1, #4
   1dccc:	mov	r0, r4
   1dcd0:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1dcd4:	movw	r1, #35978	; 0x8c8a
   1dcd8:	movt	r1, #4
   1dcdc:	mov	r0, r4
   1dce0:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1dce4:	ldr	r0, [r4, #220]	; 0xdc
   1dce8:	cmp	r0, #0
   1dcec:	beq	1de0c <__flatcc_fb_gen_c_json_parser@@Base+0x1410>
   1dcf0:	sub	r0, r0, #1
   1dcf4:	str	r0, [r4, #220]	; 0xdc
   1dcf8:	movw	r1, #30345	; 0x7689
   1dcfc:	movt	r1, #3
   1dd00:	mov	r0, r4
   1dd04:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1dd08:	movw	r1, #33920	; 0x8480
   1dd0c:	movt	r1, #4
   1dd10:	mov	r0, r4
   1dd14:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1dd18:	cmp	r7, #1
   1dd1c:	blt	1dd58 <__flatcc_fb_gen_c_json_parser@@Base+0x135c>
   1dd20:	ldr	r0, [r4, #220]	; 0xdc
   1dd24:	mov	r1, #0
   1dd28:	str	r1, [r4, #220]	; 0xdc
   1dd2c:	str	r0, [r4, #228]	; 0xe4
   1dd30:	movw	r1, #36038	; 0x8cc6
   1dd34:	movt	r1, #4
   1dd38:	mov	r0, r4
   1dd3c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1dd40:	ldr	r0, [r4, #228]	; 0xe4
   1dd44:	str	r0, [r4, #220]	; 0xdc
   1dd48:	movw	r1, #33948	; 0x849c
   1dd4c:	movt	r1, #4
   1dd50:	mov	r0, r4
   1dd54:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1dd58:	ldr	r0, [r4, #220]	; 0xdc
   1dd5c:	cmp	r0, #0
   1dd60:	beq	1de2c <__flatcc_fb_gen_c_json_parser@@Base+0x1430>
   1dd64:	sub	r0, r0, #1
   1dd68:	str	r0, [r4, #220]	; 0xdc
   1dd6c:	movw	r1, #30345	; 0x7689
   1dd70:	movt	r1, #3
   1dd74:	mov	r0, r4
   1dd78:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1dd7c:	movw	r1, #21264	; 0x5310
   1dd80:	movt	r1, #3
   1dd84:	mov	r0, r4
   1dd88:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1dd8c:	ldr	r0, [sp, #8]
   1dd90:	bl	1f438 <__flatcc_fb_gen_c_json_parser@@Base+0x2a3c>
   1dd94:	sub	sp, fp, #24
   1dd98:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1dd9c:	movw	r0, #47893	; 0xbb15
   1dda0:	movt	r0, #3
   1dda4:	movw	r1, #32012	; 0x7d0c
   1dda8:	movt	r1, #4
   1ddac:	movw	r3, #35529	; 0x8ac9
   1ddb0:	movt	r3, #4
   1ddb4:	movw	r2, #1301	; 0x515
   1ddb8:	bl	14950 <__assert_fail@plt>
   1ddbc:	movw	r0, #4264	; 0x10a8
   1ddc0:	movt	r0, #6
   1ddc4:	ldr	r0, [r0]
   1ddc8:	movw	r1, #34283	; 0x85eb
   1ddcc:	movt	r1, #4
   1ddd0:	str	r1, [sp]
   1ddd4:	movw	r1, #21007	; 0x520f
   1ddd8:	movt	r1, #3
   1dddc:	movw	r4, #32012	; 0x7d0c
   1dde0:	movt	r4, #4
   1dde4:	mov	r2, r4
   1dde8:	movw	r3, #1303	; 0x517
   1ddec:	bl	14890 <fprintf@plt>
   1ddf0:	movw	r0, #24925	; 0x615d
   1ddf4:	movt	r0, #4
   1ddf8:	movw	r3, #35529	; 0x8ac9
   1ddfc:	movt	r3, #4
   1de00:	mov	r1, r4
   1de04:	movw	r2, #1303	; 0x517
   1de08:	bl	14950 <__assert_fail@plt>
   1de0c:	movw	r0, #32000	; 0x7d00
   1de10:	movt	r0, #4
   1de14:	movw	r1, #32012	; 0x7d0c
   1de18:	movt	r1, #4
   1de1c:	movw	r3, #35529	; 0x8ac9
   1de20:	movt	r3, #4
   1de24:	movw	r2, #1334	; 0x536
   1de28:	bl	14950 <__assert_fail@plt>
   1de2c:	movw	r0, #32000	; 0x7d00
   1de30:	movt	r0, #4
   1de34:	movw	r1, #32012	; 0x7d0c
   1de38:	movt	r1, #4
   1de3c:	movw	r3, #35529	; 0x8ac9
   1de40:	movt	r3, #4
   1de44:	movw	r2, #1343	; 0x53f
   1de48:	bl	14950 <__assert_fail@plt>
   1de4c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1de50:	add	fp, sp, #24
   1de54:	sub	sp, sp, #232	; 0xe8
   1de58:	mov	r4, r0
   1de5c:	ldrh	r0, [r1, #8]
   1de60:	cmp	r0, #1
   1de64:	bne	1e02c <__flatcc_fb_gen_c_json_parser@@Base+0x1630>
   1de68:	mov	r6, r1
   1de6c:	add	r5, sp, #8
   1de70:	mov	r7, #0
   1de74:	mov	r0, r5
   1de78:	mov	r1, #0
   1de7c:	mov	r2, #220	; 0xdc
   1de80:	bl	148a8 <memset@plt>
   1de84:	mov	r0, r6
   1de88:	mov	r1, r5
   1de8c:	bl	1d0dc <__flatcc_fb_gen_c_json_parser@@Base+0x6e0>
   1de90:	movw	r1, #38836	; 0x97b4
   1de94:	movt	r1, #4
   1de98:	mov	r0, r4
   1de9c:	mov	r2, r5
   1dea0:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1dea4:	movw	r1, #45227	; 0xb0ab
   1dea8:	movt	r1, #4
   1deac:	mov	r0, r4
   1deb0:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1deb4:	ldr	r0, [r4, #220]	; 0xdc
   1deb8:	add	r0, r0, #1
   1debc:	str	r0, [r4, #220]	; 0xdc
   1dec0:	movw	r1, #35758	; 0x8bae
   1dec4:	movt	r1, #4
   1dec8:	mov	r0, r4
   1decc:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ded0:	movw	r1, #21264	; 0x5310
   1ded4:	movt	r1, #3
   1ded8:	mov	r0, r4
   1dedc:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1dee0:	movw	r1, #33238	; 0x81d6
   1dee4:	movt	r1, #4
   1dee8:	mov	r0, r4
   1deec:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1def0:	ldrd	r2, [r6, #112]	; 0x70
   1def4:	ldrh	r0, [r6, #104]	; 0x68
   1def8:	str	r0, [sp]
   1defc:	movw	r1, #38967	; 0x9837
   1df00:	movt	r1, #4
   1df04:	mov	r0, r4
   1df08:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1df0c:	movw	r1, #37617	; 0x92f1
   1df10:	movt	r1, #4
   1df14:	mov	r0, r4
   1df18:	mov	r2, r5
   1df1c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1df20:	movw	r1, #39043	; 0x9883
   1df24:	movt	r1, #4
   1df28:	mov	r0, r4
   1df2c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1df30:	movw	r1, #33920	; 0x8480
   1df34:	movt	r1, #4
   1df38:	mov	r0, r4
   1df3c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1df40:	ldr	r0, [r4, #220]	; 0xdc
   1df44:	str	r7, [r4, #220]	; 0xdc
   1df48:	str	r0, [r4, #228]	; 0xe4
   1df4c:	movw	r1, #36038	; 0x8cc6
   1df50:	movt	r1, #4
   1df54:	mov	r0, r4
   1df58:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1df5c:	ldr	r0, [r4, #228]	; 0xe4
   1df60:	str	r0, [r4, #220]	; 0xdc
   1df64:	movw	r1, #33948	; 0x849c
   1df68:	movt	r1, #4
   1df6c:	mov	r0, r4
   1df70:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1df74:	ldr	r0, [r4, #220]	; 0xdc
   1df78:	cmp	r0, #0
   1df7c:	beq	1e04c <__flatcc_fb_gen_c_json_parser@@Base+0x1650>
   1df80:	sub	r0, r0, #1
   1df84:	str	r0, [r4, #220]	; 0xdc
   1df88:	movw	r1, #30345	; 0x7689
   1df8c:	movt	r1, #3
   1df90:	mov	r0, r4
   1df94:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1df98:	movw	r1, #21264	; 0x5310
   1df9c:	movt	r1, #3
   1dfa0:	mov	r0, r4
   1dfa4:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1dfa8:	movw	r1, #39124	; 0x98d4
   1dfac:	movt	r1, #4
   1dfb0:	add	r5, sp, #8
   1dfb4:	mov	r0, r4
   1dfb8:	mov	r2, r5
   1dfbc:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1dfc0:	movw	r1, #45227	; 0xb0ab
   1dfc4:	movt	r1, #4
   1dfc8:	mov	r0, r4
   1dfcc:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1dfd0:	ldr	r0, [r4, #220]	; 0xdc
   1dfd4:	add	r0, r0, #1
   1dfd8:	str	r0, [r4, #220]	; 0xdc
   1dfdc:	movw	r1, #39272	; 0x9968
   1dfe0:	movt	r1, #4
   1dfe4:	mov	r0, r4
   1dfe8:	mov	r2, r5
   1dfec:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1dff0:	ldr	r0, [r4, #220]	; 0xdc
   1dff4:	cmp	r0, #0
   1dff8:	beq	1e06c <__flatcc_fb_gen_c_json_parser@@Base+0x1670>
   1dffc:	sub	r0, r0, #1
   1e000:	str	r0, [r4, #220]	; 0xdc
   1e004:	movw	r1, #30345	; 0x7689
   1e008:	movt	r1, #3
   1e00c:	mov	r0, r4
   1e010:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e014:	movw	r1, #21264	; 0x5310
   1e018:	movt	r1, #3
   1e01c:	mov	r0, r4
   1e020:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e024:	sub	sp, fp, #24
   1e028:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1e02c:	movw	r0, #47893	; 0xbb15
   1e030:	movt	r0, #3
   1e034:	movw	r1, #32012	; 0x7d0c
   1e038:	movt	r1, #4
   1e03c:	movw	r3, #38777	; 0x9779
   1e040:	movt	r3, #4
   1e044:	movw	r2, #1353	; 0x549
   1e048:	bl	14950 <__assert_fail@plt>
   1e04c:	movw	r0, #32000	; 0x7d00
   1e050:	movt	r0, #4
   1e054:	movw	r1, #32012	; 0x7d0c
   1e058:	movt	r1, #4
   1e05c:	movw	r3, #38777	; 0x9779
   1e060:	movt	r3, #4
   1e064:	movw	r2, #1370	; 0x55a
   1e068:	bl	14950 <__assert_fail@plt>
   1e06c:	movw	r0, #32000	; 0x7d00
   1e070:	movt	r0, #4
   1e074:	movw	r1, #32012	; 0x7d0c
   1e078:	movt	r1, #4
   1e07c:	movw	r3, #38777	; 0x9779
   1e080:	movt	r3, #4
   1e084:	mov	r2, #1376	; 0x560
   1e088:	bl	14950 <__assert_fail@plt>
   1e08c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e090:	add	fp, sp, #28
   1e094:	sub	sp, sp, #268	; 0x10c
   1e098:	mov	r7, r1
   1e09c:	mov	r4, r0
   1e0a0:	vmov.i32	q8, #0	; 0x00000000
   1e0a4:	mov	r0, #12
   1e0a8:	add	r1, sp, #8
   1e0ac:	vst1.64	{d16-d17}, [r1], r0
   1e0b0:	vst1.32	{d16-d17}, [r1]
   1e0b4:	ldrh	r0, [r7, #8]
   1e0b8:	cmp	r0, #0
   1e0bc:	bne	1e564 <__flatcc_fb_gen_c_json_parser@@Base+0x1b68>
   1e0c0:	add	r1, sp, #36	; 0x24
   1e0c4:	mov	r0, r7
   1e0c8:	bl	1ec20 <__flatcc_fb_gen_c_json_parser@@Base+0x2224>
   1e0cc:	str	r0, [sp, #8]
   1e0d0:	ldr	sl, [sp, #36]	; 0x24
   1e0d4:	cmp	r0, #0
   1e0d8:	bne	1e0e4 <__flatcc_fb_gen_c_json_parser@@Base+0x16e8>
   1e0dc:	cmp	sl, #1
   1e0e0:	bge	1e584 <__flatcc_fb_gen_c_json_parser@@Base+0x1b88>
   1e0e4:	mov	r1, #0
   1e0e8:	str	r1, [sp, #24]
   1e0ec:	str	r7, [sp, #20]
   1e0f0:	movw	r2, #64552	; 0xfc28
   1e0f4:	movt	r2, #1
   1e0f8:	str	r2, [sp, #12]
   1e0fc:	movw	r2, #64724	; 0xfcd4
   1e100:	movt	r2, #1
   1e104:	str	r2, [sp, #16]
   1e108:	str	r1, [sp, #28]
   1e10c:	cmp	sl, #1
   1e110:	blt	1e138 <__flatcc_fb_gen_c_json_parser@@Base+0x173c>
   1e114:	add	r1, r0, #12
   1e118:	ldr	r0, [sp, #28]
   1e11c:	mov	r2, sl
   1e120:	ldr	r3, [r1], #16
   1e124:	cmp	r3, #0
   1e128:	addne	r0, r0, #1
   1e12c:	subs	r2, r2, #1
   1e130:	bne	1e120 <__flatcc_fb_gen_c_json_parser@@Base+0x1724>
   1e134:	str	r0, [sp, #28]
   1e138:	add	r6, sp, #40	; 0x28
   1e13c:	mov	r0, r6
   1e140:	mov	r1, #0
   1e144:	mov	r2, #220	; 0xdc
   1e148:	bl	148a8 <memset@plt>
   1e14c:	mov	r0, r7
   1e150:	mov	r1, r6
   1e154:	bl	1d0dc <__flatcc_fb_gen_c_json_parser@@Base+0x6e0>
   1e158:	movw	r1, #39427	; 0x9a03
   1e15c:	movt	r1, #4
   1e160:	mov	r0, r4
   1e164:	mov	r2, r6
   1e168:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e16c:	movw	r1, #45227	; 0xb0ab
   1e170:	movt	r1, #4
   1e174:	mov	r0, r4
   1e178:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e17c:	ldr	r0, [r4, #220]	; 0xdc
   1e180:	add	r0, r0, #1
   1e184:	str	r0, [r4, #220]	; 0xdc
   1e188:	movw	r1, #35722	; 0x8b8a
   1e18c:	movt	r1, #4
   1e190:	mov	r0, r4
   1e194:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e198:	cmp	sl, #1
   1e19c:	blt	1e1e0 <__flatcc_fb_gen_c_json_parser@@Base+0x17e4>
   1e1a0:	movw	r1, #35758	; 0x8bae
   1e1a4:	movt	r1, #4
   1e1a8:	mov	r0, r4
   1e1ac:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e1b0:	movw	r1, #39557	; 0x9a85
   1e1b4:	movt	r1, #4
   1e1b8:	mov	r0, r4
   1e1bc:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e1c0:	movw	r1, #34493	; 0x86bd
   1e1c4:	movt	r1, #4
   1e1c8:	mov	r0, r4
   1e1cc:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e1d0:	movw	r1, #34511	; 0x86cf
   1e1d4:	movt	r1, #4
   1e1d8:	mov	r0, r4
   1e1dc:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e1e0:	ldr	r0, [sp, #28]
   1e1e4:	cmp	r0, #0
   1e1e8:	beq	1e1fc <__flatcc_fb_gen_c_json_parser@@Base+0x1800>
   1e1ec:	movw	r1, #39590	; 0x9aa6
   1e1f0:	movt	r1, #4
   1e1f4:	mov	r0, r4
   1e1f8:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e1fc:	movw	r1, #21264	; 0x5310
   1e200:	movt	r1, #3
   1e204:	mov	r0, r4
   1e208:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e20c:	movw	r1, #33238	; 0x81d6
   1e210:	movt	r1, #4
   1e214:	mov	r0, r4
   1e218:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e21c:	ldrd	r2, [r7, #96]	; 0x60
   1e220:	movw	r1, #39607	; 0x9ab7
   1e224:	movt	r1, #4
   1e228:	mov	r0, r4
   1e22c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e230:	ldr	r2, [sp, #28]
   1e234:	cmp	r2, #0
   1e238:	beq	1e250 <__flatcc_fb_gen_c_json_parser@@Base+0x1854>
   1e23c:	asr	r3, r2, #31
   1e240:	movw	r1, #39668	; 0x9af4
   1e244:	movt	r1, #4
   1e248:	mov	r0, r4
   1e24c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e250:	movw	r1, #35770	; 0x8bba
   1e254:	movt	r1, #4
   1e258:	mov	r0, r4
   1e25c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e260:	movw	r1, #35831	; 0x8bf7
   1e264:	movt	r1, #4
   1e268:	mov	r0, r4
   1e26c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e270:	ldr	r0, [r4, #220]	; 0xdc
   1e274:	add	r0, r0, #1
   1e278:	str	r0, [r4, #220]	; 0xdc
   1e27c:	movw	r1, #35924	; 0x8c54
   1e280:	movt	r1, #4
   1e284:	mov	r0, r4
   1e288:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e28c:	cmp	sl, #1
   1e290:	blt	1e2c4 <__flatcc_fb_gen_c_json_parser@@Base+0x18c8>
   1e294:	movw	r1, #34523	; 0x86db
   1e298:	movt	r1, #4
   1e29c:	mov	r0, r4
   1e2a0:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e2a4:	mov	r0, #0
   1e2a8:	str	r0, [sp]
   1e2ac:	sub	r3, sl, #1
   1e2b0:	add	r1, sp, #8
   1e2b4:	mov	r0, r4
   1e2b8:	mov	r2, #0
   1e2bc:	bl	1ee4c <__flatcc_fb_gen_c_json_parser@@Base+0x2450>
   1e2c0:	b	1e2e4 <__flatcc_fb_gen_c_json_parser@@Base+0x18e8>
   1e2c4:	movw	r1, #39759	; 0x9b4f
   1e2c8:	movt	r1, #4
   1e2cc:	mov	r0, r4
   1e2d0:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e2d4:	movw	r1, #35866	; 0x8c1a
   1e2d8:	movt	r1, #4
   1e2dc:	mov	r0, r4
   1e2e0:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e2e4:	movw	r1, #39786	; 0x9b6a
   1e2e8:	movt	r1, #4
   1e2ec:	mov	r0, r4
   1e2f0:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e2f4:	ldr	r0, [r4, #220]	; 0xdc
   1e2f8:	cmp	r0, #0
   1e2fc:	beq	1e5d4 <__flatcc_fb_gen_c_json_parser@@Base+0x1bd8>
   1e300:	sub	r0, r0, #1
   1e304:	str	r0, [r4, #220]	; 0xdc
   1e308:	movw	r1, #30345	; 0x7689
   1e30c:	movt	r1, #3
   1e310:	mov	r0, r4
   1e314:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e318:	movw	r1, #39845	; 0x9ba5
   1e31c:	movt	r1, #4
   1e320:	mov	r0, r4
   1e324:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e328:	cmp	sl, #1
   1e32c:	blt	1e430 <__flatcc_fb_gen_c_json_parser@@Base+0x1a34>
   1e330:	mov	r6, #0
   1e334:	mov	r5, #1
   1e338:	movw	r9, #39931	; 0x9bfb
   1e33c:	movt	r9, #4
   1e340:	movw	r8, #39874	; 0x9bc2
   1e344:	movt	r8, #4
   1e348:	ldr	r0, [sp, #8]
   1e34c:	add	r0, r0, r6, lsl #4
   1e350:	ldr	r7, [r0, #8]
   1e354:	ldrh	r0, [r7, #72]	; 0x48
   1e358:	and	r0, r0, #260	; 0x104
   1e35c:	cmp	r0, #256	; 0x100
   1e360:	bne	1e3a8 <__flatcc_fb_gen_c_json_parser@@Base+0x19ac>
   1e364:	mov	r0, r7
   1e368:	bl	1f444 <__flatcc_fb_gen_c_json_parser@@Base+0x2a48>
   1e36c:	ldrd	r2, [r7, #96]	; 0x60
   1e370:	subs	r2, r2, r0
   1e374:	sbc	r3, r3, r0, asr #31
   1e378:	mov	r0, r4
   1e37c:	cmp	r5, #0
   1e380:	bne	1e390 <__flatcc_fb_gen_c_json_parser@@Base+0x1994>
   1e384:	mov	r1, r9
   1e388:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e38c:	b	1e3a4 <__flatcc_fb_gen_c_json_parser@@Base+0x19a8>
   1e390:	mov	r1, r8
   1e394:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e398:	ldr	r0, [r4, #220]	; 0xdc
   1e39c:	add	r0, r0, #1
   1e3a0:	str	r0, [r4, #220]	; 0xdc
   1e3a4:	mov	r5, #0
   1e3a8:	add	r6, r6, #1
   1e3ac:	cmp	sl, r6
   1e3b0:	bne	1e348 <__flatcc_fb_gen_c_json_parser@@Base+0x194c>
   1e3b4:	cmp	r5, #0
   1e3b8:	bne	1e430 <__flatcc_fb_gen_c_json_parser@@Base+0x1a34>
   1e3bc:	ldr	r0, [r4, #220]	; 0xdc
   1e3c0:	cmp	r0, #0
   1e3c4:	beq	1e634 <__flatcc_fb_gen_c_json_parser@@Base+0x1c38>
   1e3c8:	sub	r0, r0, #1
   1e3cc:	str	r0, [r4, #220]	; 0xdc
   1e3d0:	movw	r1, #37390	; 0x920e
   1e3d4:	movt	r1, #4
   1e3d8:	mov	r0, r4
   1e3dc:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e3e0:	ldr	r0, [r4, #220]	; 0xdc
   1e3e4:	add	r0, r0, #1
   1e3e8:	str	r0, [r4, #220]	; 0xdc
   1e3ec:	movw	r1, #39988	; 0x9c34
   1e3f0:	movt	r1, #4
   1e3f4:	mov	r0, r4
   1e3f8:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e3fc:	movw	r1, #36913	; 0x9031
   1e400:	movt	r1, #4
   1e404:	mov	r0, r4
   1e408:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e40c:	ldr	r0, [r4, #220]	; 0xdc
   1e410:	cmp	r0, #0
   1e414:	beq	1e654 <__flatcc_fb_gen_c_json_parser@@Base+0x1c58>
   1e418:	sub	r0, r0, #1
   1e41c:	str	r0, [r4, #220]	; 0xdc
   1e420:	movw	r1, #30345	; 0x7689
   1e424:	movt	r1, #3
   1e428:	mov	r0, r4
   1e42c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e430:	ldr	r0, [sp, #28]
   1e434:	cmp	r0, #0
   1e438:	beq	1e44c <__flatcc_fb_gen_c_json_parser@@Base+0x1a50>
   1e43c:	movw	r1, #40074	; 0x9c8a
   1e440:	movt	r1, #4
   1e444:	mov	r0, r4
   1e448:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e44c:	movw	r1, #40141	; 0x9ccd
   1e450:	movt	r1, #4
   1e454:	mov	r0, r4
   1e458:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e45c:	movw	r1, #33920	; 0x8480
   1e460:	movt	r1, #4
   1e464:	mov	r0, r4
   1e468:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e46c:	ldr	r0, [r4, #220]	; 0xdc
   1e470:	mov	r1, #0
   1e474:	str	r1, [r4, #220]	; 0xdc
   1e478:	str	r0, [r4, #228]	; 0xe4
   1e47c:	movw	r1, #36038	; 0x8cc6
   1e480:	movt	r1, #4
   1e484:	mov	r0, r4
   1e488:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e48c:	ldr	r0, [r4, #228]	; 0xe4
   1e490:	str	r0, [r4, #220]	; 0xdc
   1e494:	movw	r1, #33948	; 0x849c
   1e498:	movt	r1, #4
   1e49c:	mov	r0, r4
   1e4a0:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e4a4:	ldr	r0, [r4, #220]	; 0xdc
   1e4a8:	cmp	r0, #0
   1e4ac:	beq	1e5f4 <__flatcc_fb_gen_c_json_parser@@Base+0x1bf8>
   1e4b0:	sub	r0, r0, #1
   1e4b4:	str	r0, [r4, #220]	; 0xdc
   1e4b8:	movw	r1, #30345	; 0x7689
   1e4bc:	movt	r1, #3
   1e4c0:	mov	r0, r4
   1e4c4:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e4c8:	movw	r1, #21264	; 0x5310
   1e4cc:	movt	r1, #3
   1e4d0:	mov	r0, r4
   1e4d4:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e4d8:	movw	r1, #39124	; 0x98d4
   1e4dc:	movt	r1, #4
   1e4e0:	add	r5, sp, #40	; 0x28
   1e4e4:	mov	r0, r4
   1e4e8:	mov	r2, r5
   1e4ec:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e4f0:	movw	r1, #45227	; 0xb0ab
   1e4f4:	movt	r1, #4
   1e4f8:	mov	r0, r4
   1e4fc:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e500:	ldr	r0, [r4, #220]	; 0xdc
   1e504:	add	r0, r0, #1
   1e508:	str	r0, [r4, #220]	; 0xdc
   1e50c:	movw	r1, #40207	; 0x9d0f
   1e510:	movt	r1, #4
   1e514:	mov	r0, r4
   1e518:	mov	r2, r5
   1e51c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e520:	ldr	r0, [r4, #220]	; 0xdc
   1e524:	cmp	r0, #0
   1e528:	beq	1e614 <__flatcc_fb_gen_c_json_parser@@Base+0x1c18>
   1e52c:	sub	r0, r0, #1
   1e530:	str	r0, [r4, #220]	; 0xdc
   1e534:	movw	r1, #30345	; 0x7689
   1e538:	movt	r1, #3
   1e53c:	mov	r0, r4
   1e540:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e544:	movw	r1, #21264	; 0x5310
   1e548:	movt	r1, #3
   1e54c:	mov	r0, r4
   1e550:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e554:	ldr	r0, [sp, #8]
   1e558:	bl	1f438 <__flatcc_fb_gen_c_json_parser@@Base+0x2a3c>
   1e55c:	sub	sp, fp, #28
   1e560:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e564:	movw	r0, #46160	; 0xb450
   1e568:	movt	r0, #3
   1e56c:	movw	r1, #32012	; 0x7d0c
   1e570:	movt	r1, #4
   1e574:	movw	r3, #39369	; 0x99c9
   1e578:	movt	r3, #4
   1e57c:	movw	r2, #1390	; 0x56e
   1e580:	bl	14950 <__assert_fail@plt>
   1e584:	movw	r0, #4264	; 0x10a8
   1e588:	movt	r0, #6
   1e58c:	ldr	r0, [r0]
   1e590:	movw	r1, #34283	; 0x85eb
   1e594:	movt	r1, #4
   1e598:	str	r1, [sp]
   1e59c:	movw	r1, #21007	; 0x520f
   1e5a0:	movt	r1, #3
   1e5a4:	movw	r4, #32012	; 0x7d0c
   1e5a8:	movt	r4, #4
   1e5ac:	mov	r2, r4
   1e5b0:	mov	r3, #1392	; 0x570
   1e5b4:	bl	14890 <fprintf@plt>
   1e5b8:	movw	r0, #24925	; 0x615d
   1e5bc:	movt	r0, #4
   1e5c0:	movw	r3, #39369	; 0x99c9
   1e5c4:	movt	r3, #4
   1e5c8:	mov	r1, r4
   1e5cc:	mov	r2, #1392	; 0x570
   1e5d0:	bl	14950 <__assert_fail@plt>
   1e5d4:	movw	r0, #32000	; 0x7d00
   1e5d8:	movt	r0, #4
   1e5dc:	movw	r1, #32012	; 0x7d0c
   1e5e0:	movt	r1, #4
   1e5e4:	movw	r3, #39369	; 0x99c9
   1e5e8:	movt	r3, #4
   1e5ec:	movw	r2, #1438	; 0x59e
   1e5f0:	bl	14950 <__assert_fail@plt>
   1e5f4:	movw	r0, #32000	; 0x7d00
   1e5f8:	movt	r0, #4
   1e5fc:	movw	r1, #32012	; 0x7d0c
   1e600:	movt	r1, #4
   1e604:	movw	r3, #39369	; 0x99c9
   1e608:	movt	r3, #4
   1e60c:	movw	r2, #1473	; 0x5c1
   1e610:	bl	14950 <__assert_fail@plt>
   1e614:	movw	r0, #32000	; 0x7d00
   1e618:	movt	r0, #4
   1e61c:	movw	r1, #32012	; 0x7d0c
   1e620:	movt	r1, #4
   1e624:	movw	r3, #39369	; 0x99c9
   1e628:	movt	r3, #4
   1e62c:	movw	r2, #1479	; 0x5c7
   1e630:	bl	14950 <__assert_fail@plt>
   1e634:	movw	r0, #32000	; 0x7d00
   1e638:	movt	r0, #4
   1e63c:	movw	r1, #32012	; 0x7d0c
   1e640:	movt	r1, #4
   1e644:	movw	r3, #39369	; 0x99c9
   1e648:	movt	r3, #4
   1e64c:	movw	r2, #1458	; 0x5b2
   1e650:	bl	14950 <__assert_fail@plt>
   1e654:	movw	r0, #32000	; 0x7d00
   1e658:	movt	r0, #4
   1e65c:	movw	r1, #32012	; 0x7d0c
   1e660:	movt	r1, #4
   1e664:	movw	r3, #39369	; 0x99c9
   1e668:	movt	r3, #4
   1e66c:	movw	r2, #1461	; 0x5b5
   1e670:	bl	14950 <__assert_fail@plt>
   1e674:	push	{r4, r5, r6, sl, fp, lr}
   1e678:	add	fp, sp, #16
   1e67c:	sub	sp, sp, #240	; 0xf0
   1e680:	mov	r5, r1
   1e684:	mov	r4, r0
   1e688:	mov	r6, #0
   1e68c:	str	r6, [fp, #-20]	; 0xffffffec
   1e690:	vmov.i32	q8, #0	; 0x00000000
   1e694:	sub	r0, fp, #48	; 0x30
   1e698:	add	r0, r0, #4
   1e69c:	vst1.32	{d16-d17}, [r0]
   1e6a0:	str	r6, [fp, #-24]	; 0xffffffe8
   1e6a4:	str	r6, [fp, #-28]	; 0xffffffe4
   1e6a8:	add	r1, sp, #4
   1e6ac:	mov	r0, r5
   1e6b0:	bl	15ab8 <__flatcc_fb_copy_scope@@Base>
   1e6b4:	ldr	r0, [r4, #208]	; 0xd0
   1e6b8:	sub	r2, fp, #20
   1e6bc:	mov	r1, r5
   1e6c0:	bl	20a98 <__flatcc_fb_gen_c_json_parser@@Base+0x409c>
   1e6c4:	str	r0, [fp, #-48]	; 0xffffffd0
   1e6c8:	ldr	r5, [fp, #-20]	; 0xffffffec
   1e6cc:	cmp	r0, #0
   1e6d0:	bne	1e6dc <__flatcc_fb_gen_c_json_parser@@Base+0x1ce0>
   1e6d4:	cmp	r5, #1
   1e6d8:	bge	1e8a8 <__flatcc_fb_gen_c_json_parser@@Base+0x1eac>
   1e6dc:	mov	r0, #3
   1e6e0:	str	r0, [fp, #-32]	; 0xffffffe0
   1e6e4:	str	r6, [fp, #-36]	; 0xffffffdc
   1e6e8:	movw	r0, #2864	; 0xb30
   1e6ec:	movt	r0, #2
   1e6f0:	str	r0, [fp, #-44]	; 0xffffffd4
   1e6f4:	movw	r0, #3020	; 0xbcc
   1e6f8:	movt	r0, #2
   1e6fc:	str	r0, [fp, #-40]	; 0xffffffd8
   1e700:	ldr	r0, [r4, #208]	; 0xd0
   1e704:	ldr	r2, [r0, #160]	; 0xa0
   1e708:	movw	r1, #32986	; 0x80da
   1e70c:	movt	r1, #4
   1e710:	add	r3, sp, #4
   1e714:	mov	r0, r4
   1e718:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e71c:	ldr	r0, [r4, #220]	; 0xdc
   1e720:	add	r0, r0, #2
   1e724:	str	r0, [r4, #220]	; 0xdc
   1e728:	movw	r1, #40352	; 0x9da0
   1e72c:	movt	r1, #4
   1e730:	mov	r0, r4
   1e734:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e738:	ldr	r0, [r4, #220]	; 0xdc
   1e73c:	cmp	r0, #0
   1e740:	beq	1e888 <__flatcc_fb_gen_c_json_parser@@Base+0x1e8c>
   1e744:	subs	r1, r0, #1
   1e748:	str	r1, [r4, #220]	; 0xdc
   1e74c:	beq	1e888 <__flatcc_fb_gen_c_json_parser@@Base+0x1e8c>
   1e750:	sub	r0, r0, #2
   1e754:	str	r0, [r4, #220]	; 0xdc
   1e758:	movw	r1, #45227	; 0xb0ab
   1e75c:	movt	r1, #4
   1e760:	mov	r0, r4
   1e764:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e768:	ldr	r0, [r4, #220]	; 0xdc
   1e76c:	add	r0, r0, #1
   1e770:	str	r0, [r4, #220]	; 0xdc
   1e774:	cmp	r5, #0
   1e778:	beq	1e824 <__flatcc_fb_gen_c_json_parser@@Base+0x1e28>
   1e77c:	movw	r1, #34464	; 0x86a0
   1e780:	movt	r1, #4
   1e784:	mov	r0, r4
   1e788:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e78c:	movw	r1, #34493	; 0x86bd
   1e790:	movt	r1, #4
   1e794:	mov	r0, r4
   1e798:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e79c:	movw	r1, #34511	; 0x86cf
   1e7a0:	movt	r1, #4
   1e7a4:	mov	r0, r4
   1e7a8:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e7ac:	movw	r1, #21264	; 0x5310
   1e7b0:	movt	r1, #3
   1e7b4:	mov	r0, r4
   1e7b8:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e7bc:	movw	r1, #34523	; 0x86db
   1e7c0:	movt	r1, #4
   1e7c4:	mov	r0, r4
   1e7c8:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e7cc:	mov	r0, #0
   1e7d0:	str	r0, [sp]
   1e7d4:	sub	r3, r5, #1
   1e7d8:	sub	r1, fp, #48	; 0x30
   1e7dc:	mov	r0, r4
   1e7e0:	mov	r2, #0
   1e7e4:	bl	1ee4c <__flatcc_fb_gen_c_json_parser@@Base+0x2450>
   1e7e8:	movw	r1, #33920	; 0x8480
   1e7ec:	movt	r1, #4
   1e7f0:	mov	r0, r4
   1e7f4:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e7f8:	ldr	r0, [r4, #220]	; 0xdc
   1e7fc:	cmp	r0, #0
   1e800:	bne	1e850 <__flatcc_fb_gen_c_json_parser@@Base+0x1e54>
   1e804:	movw	r0, #32000	; 0x7d00
   1e808:	movt	r0, #4
   1e80c:	movw	r1, #32012	; 0x7d0c
   1e810:	movt	r1, #4
   1e814:	movw	r3, #40302	; 0x9d6e
   1e818:	movt	r3, #4
   1e81c:	movw	r2, #1166	; 0x48e
   1e820:	bl	14950 <__assert_fail@plt>
   1e824:	movw	r1, #40402	; 0x9dd2
   1e828:	movt	r1, #4
   1e82c:	mov	r0, r4
   1e830:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e834:	movw	r1, #34435	; 0x8683
   1e838:	movt	r1, #4
   1e83c:	mov	r0, r4
   1e840:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e844:	ldr	r0, [r4, #220]	; 0xdc
   1e848:	cmp	r0, #0
   1e84c:	beq	1e8f8 <__flatcc_fb_gen_c_json_parser@@Base+0x1efc>
   1e850:	sub	r0, r0, #1
   1e854:	str	r0, [r4, #220]	; 0xdc
   1e858:	movw	r1, #30345	; 0x7689
   1e85c:	movt	r1, #3
   1e860:	mov	r0, r4
   1e864:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e868:	movw	r1, #21264	; 0x5310
   1e86c:	movt	r1, #3
   1e870:	mov	r0, r4
   1e874:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e878:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1e87c:	bl	1f438 <__flatcc_fb_gen_c_json_parser@@Base+0x2a3c>
   1e880:	sub	sp, fp, #16
   1e884:	pop	{r4, r5, r6, sl, fp, pc}
   1e888:	movw	r0, #32000	; 0x7d00
   1e88c:	movt	r0, #4
   1e890:	movw	r1, #32012	; 0x7d0c
   1e894:	movt	r1, #4
   1e898:	movw	r3, #40302	; 0x9d6e
   1e89c:	movt	r3, #4
   1e8a0:	mov	r2, #1152	; 0x480
   1e8a4:	bl	14950 <__assert_fail@plt>
   1e8a8:	movw	r0, #4264	; 0x10a8
   1e8ac:	movt	r0, #6
   1e8b0:	ldr	r0, [r0]
   1e8b4:	movw	r1, #34283	; 0x85eb
   1e8b8:	movt	r1, #4
   1e8bc:	str	r1, [sp]
   1e8c0:	movw	r1, #21007	; 0x520f
   1e8c4:	movt	r1, #3
   1e8c8:	movw	r4, #32012	; 0x7d0c
   1e8cc:	movt	r4, #4
   1e8d0:	mov	r2, r4
   1e8d4:	movw	r3, #1140	; 0x474
   1e8d8:	bl	14890 <fprintf@plt>
   1e8dc:	movw	r0, #24925	; 0x615d
   1e8e0:	movt	r0, #4
   1e8e4:	movw	r3, #40302	; 0x9d6e
   1e8e8:	movt	r3, #4
   1e8ec:	mov	r1, r4
   1e8f0:	movw	r2, #1140	; 0x474
   1e8f4:	bl	14950 <__assert_fail@plt>
   1e8f8:	movw	r0, #32000	; 0x7d00
   1e8fc:	movt	r0, #4
   1e900:	movw	r1, #32012	; 0x7d0c
   1e904:	movt	r1, #4
   1e908:	movw	r3, #40302	; 0x9d6e
   1e90c:	movt	r3, #4
   1e910:	movw	r2, #1157	; 0x485
   1e914:	bl	14950 <__assert_fail@plt>
   1e918:	push	{r4, r5, fp, lr}
   1e91c:	add	fp, sp, #8
   1e920:	sub	sp, sp, #80	; 0x50
   1e924:	mov	r4, r0
   1e928:	mov	r0, #0
   1e92c:	str	r0, [fp, #-12]
   1e930:	vmov.i32	q8, #0	; 0x00000000
   1e934:	mov	r0, #12
   1e938:	sub	r1, fp, #40	; 0x28
   1e93c:	vst1.64	{d16-d17}, [r1], r0
   1e940:	vst1.32	{d16-d17}, [r1]
   1e944:	ldr	r1, [r4, #208]	; 0xd0
   1e948:	ldr	r2, [r1, #60]	; 0x3c
   1e94c:	add	r0, sp, #4
   1e950:	bl	20d20 <__flatcc_fb_gen_c_json_parser@@Base+0x4324>
   1e954:	cmp	r0, #0
   1e958:	beq	1e964 <__flatcc_fb_gen_c_json_parser@@Base+0x1f68>
   1e95c:	sub	sp, fp, #8
   1e960:	pop	{r4, r5, fp, pc}
   1e964:	add	r0, sp, #4
   1e968:	sub	r1, fp, #12
   1e96c:	bl	20e2c <__flatcc_fb_gen_c_json_parser@@Base+0x4430>
   1e970:	str	r0, [fp, #-40]	; 0xffffffd8
   1e974:	ldr	r5, [fp, #-12]
   1e978:	cmp	r0, #0
   1e97c:	bne	1e988 <__flatcc_fb_gen_c_json_parser@@Base+0x1f8c>
   1e980:	cmp	r5, #1
   1e984:	bge	1eb5c <__flatcc_fb_gen_c_json_parser@@Base+0x2160>
   1e988:	mov	r0, #4
   1e98c:	str	r0, [fp, #-24]	; 0xffffffe8
   1e990:	mov	r0, #0
   1e994:	str	r0, [fp, #-28]	; 0xffffffe4
   1e998:	movw	r0, #2864	; 0xb30
   1e99c:	movt	r0, #2
   1e9a0:	str	r0, [fp, #-36]	; 0xffffffdc
   1e9a4:	movw	r0, #3020	; 0xbcc
   1e9a8:	movt	r0, #2
   1e9ac:	str	r0, [fp, #-32]	; 0xffffffe0
   1e9b0:	ldr	r0, [r4, #208]	; 0xd0
   1e9b4:	ldr	r2, [r0, #160]	; 0xa0
   1e9b8:	movw	r1, #32879	; 0x806f
   1e9bc:	movt	r1, #4
   1e9c0:	mov	r0, r4
   1e9c4:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e9c8:	ldr	r0, [r4, #220]	; 0xdc
   1e9cc:	add	r0, r0, #2
   1e9d0:	str	r0, [r4, #220]	; 0xdc
   1e9d4:	movw	r1, #40352	; 0x9da0
   1e9d8:	movt	r1, #4
   1e9dc:	mov	r0, r4
   1e9e0:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1e9e4:	ldr	r0, [r4, #220]	; 0xdc
   1e9e8:	cmp	r0, #0
   1e9ec:	beq	1eb3c <__flatcc_fb_gen_c_json_parser@@Base+0x2140>
   1e9f0:	subs	r1, r0, #1
   1e9f4:	str	r1, [r4, #220]	; 0xdc
   1e9f8:	beq	1eb3c <__flatcc_fb_gen_c_json_parser@@Base+0x2140>
   1e9fc:	sub	r0, r0, #2
   1ea00:	str	r0, [r4, #220]	; 0xdc
   1ea04:	movw	r1, #45227	; 0xb0ab
   1ea08:	movt	r1, #4
   1ea0c:	mov	r0, r4
   1ea10:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ea14:	ldr	r0, [r4, #220]	; 0xdc
   1ea18:	add	r0, r0, #1
   1ea1c:	str	r0, [r4, #220]	; 0xdc
   1ea20:	cmp	r5, #0
   1ea24:	beq	1ead0 <__flatcc_fb_gen_c_json_parser@@Base+0x20d4>
   1ea28:	movw	r1, #34464	; 0x86a0
   1ea2c:	movt	r1, #4
   1ea30:	mov	r0, r4
   1ea34:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ea38:	movw	r1, #34493	; 0x86bd
   1ea3c:	movt	r1, #4
   1ea40:	mov	r0, r4
   1ea44:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ea48:	movw	r1, #34511	; 0x86cf
   1ea4c:	movt	r1, #4
   1ea50:	mov	r0, r4
   1ea54:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ea58:	movw	r1, #21264	; 0x5310
   1ea5c:	movt	r1, #3
   1ea60:	mov	r0, r4
   1ea64:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ea68:	movw	r1, #34523	; 0x86db
   1ea6c:	movt	r1, #4
   1ea70:	mov	r0, r4
   1ea74:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ea78:	mov	r0, #0
   1ea7c:	str	r0, [sp]
   1ea80:	sub	r3, r5, #1
   1ea84:	sub	r1, fp, #40	; 0x28
   1ea88:	mov	r0, r4
   1ea8c:	mov	r2, #0
   1ea90:	bl	1ee4c <__flatcc_fb_gen_c_json_parser@@Base+0x2450>
   1ea94:	movw	r1, #33920	; 0x8480
   1ea98:	movt	r1, #4
   1ea9c:	mov	r0, r4
   1eaa0:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1eaa4:	ldr	r0, [r4, #220]	; 0xdc
   1eaa8:	cmp	r0, #0
   1eaac:	bne	1eafc <__flatcc_fb_gen_c_json_parser@@Base+0x2100>
   1eab0:	movw	r0, #32000	; 0x7d00
   1eab4:	movt	r0, #4
   1eab8:	movw	r1, #32012	; 0x7d0c
   1eabc:	movt	r1, #4
   1eac0:	movw	r3, #40744	; 0x9f28
   1eac4:	movt	r3, #4
   1eac8:	movw	r2, #1219	; 0x4c3
   1eacc:	bl	14950 <__assert_fail@plt>
   1ead0:	movw	r1, #40787	; 0x9f53
   1ead4:	movt	r1, #4
   1ead8:	mov	r0, r4
   1eadc:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1eae0:	movw	r1, #34435	; 0x8683
   1eae4:	movt	r1, #4
   1eae8:	mov	r0, r4
   1eaec:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1eaf0:	ldr	r0, [r4, #220]	; 0xdc
   1eaf4:	cmp	r0, #0
   1eaf8:	beq	1ebb4 <__flatcc_fb_gen_c_json_parser@@Base+0x21b8>
   1eafc:	sub	r0, r0, #1
   1eb00:	str	r0, [r4, #220]	; 0xdc
   1eb04:	movw	r1, #30345	; 0x7689
   1eb08:	movt	r1, #3
   1eb0c:	mov	r0, r4
   1eb10:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1eb14:	movw	r1, #21264	; 0x5310
   1eb18:	movt	r1, #3
   1eb1c:	mov	r0, r4
   1eb20:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1eb24:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1eb28:	bl	1f438 <__flatcc_fb_gen_c_json_parser@@Base+0x2a3c>
   1eb2c:	add	r0, sp, #4
   1eb30:	bl	20ee4 <__flatcc_fb_gen_c_json_parser@@Base+0x44e8>
   1eb34:	sub	sp, fp, #8
   1eb38:	pop	{r4, r5, fp, pc}
   1eb3c:	movw	r0, #32000	; 0x7d00
   1eb40:	movt	r0, #4
   1eb44:	movw	r1, #32012	; 0x7d0c
   1eb48:	movt	r1, #4
   1eb4c:	movw	r3, #40744	; 0x9f28
   1eb50:	movt	r3, #4
   1eb54:	movw	r2, #1205	; 0x4b5
   1eb58:	bl	14950 <__assert_fail@plt>
   1eb5c:	add	r0, sp, #4
   1eb60:	bl	20ee4 <__flatcc_fb_gen_c_json_parser@@Base+0x44e8>
   1eb64:	movw	r0, #4264	; 0x10a8
   1eb68:	movt	r0, #6
   1eb6c:	ldr	r0, [r0]
   1eb70:	movw	r1, #34283	; 0x85eb
   1eb74:	movt	r1, #4
   1eb78:	str	r1, [sp]
   1eb7c:	movw	r1, #21007	; 0x520f
   1eb80:	movt	r1, #3
   1eb84:	movw	r4, #32012	; 0x7d0c
   1eb88:	movt	r4, #4
   1eb8c:	mov	r2, r4
   1eb90:	movw	r3, #1194	; 0x4aa
   1eb94:	bl	14890 <fprintf@plt>
   1eb98:	movw	r0, #24925	; 0x615d
   1eb9c:	movt	r0, #4
   1eba0:	movw	r3, #40744	; 0x9f28
   1eba4:	movt	r3, #4
   1eba8:	mov	r1, r4
   1ebac:	movw	r2, #1194	; 0x4aa
   1ebb0:	bl	14950 <__assert_fail@plt>
   1ebb4:	movw	r0, #32000	; 0x7d00
   1ebb8:	movt	r0, #4
   1ebbc:	movw	r1, #32012	; 0x7d0c
   1ebc0:	movt	r1, #4
   1ebc4:	movw	r3, #40744	; 0x9f28
   1ebc8:	movt	r3, #4
   1ebcc:	movw	r2, #1210	; 0x4ba
   1ebd0:	bl	14950 <__assert_fail@plt>
   1ebd4:	ldr	r1, [r0, #208]	; 0xd0
   1ebd8:	ldr	r1, [r1, #52]	; 0x34
   1ebdc:	cmp	r1, #0
   1ebe0:	beq	1ebfc <__flatcc_fb_gen_c_json_parser@@Base+0x2200>
   1ebe4:	ldrh	r2, [r1, #8]
   1ebe8:	cmp	r2, #1
   1ebec:	beq	1ec00 <__flatcc_fb_gen_c_json_parser@@Base+0x2204>
   1ebf0:	cmp	r2, #0
   1ebf4:	bxne	lr
   1ebf8:	b	21198 <__flatcc_fb_gen_c_json_parser@@Base+0x479c>
   1ebfc:	bx	lr
   1ec00:	b	213fc <__flatcc_fb_gen_c_json_parser@@Base+0x4a00>
   1ec04:	ldr	r0, [r0, #4]
   1ec08:	b	1ec0c <__flatcc_fb_gen_c_json_parser@@Base+0x2210>
   1ec0c:	ldr	r3, [r0, #4]
   1ec10:	str	r3, [r1]
   1ec14:	ldr	r0, [r0]
   1ec18:	str	r0, [r2]
   1ec1c:	bx	lr
   1ec20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ec24:	add	fp, sp, #28
   1ec28:	sub	sp, sp, #4
   1ec2c:	mov	r5, r1
   1ec30:	ldr	r7, [r0, #20]
   1ec34:	cmp	r7, #0
   1ec38:	beq	1ed88 <__flatcc_fb_gen_c_json_parser@@Base+0x238c>
   1ec3c:	mov	r8, r0
   1ec40:	mov	r6, #0
   1ec44:	mov	r4, #0
   1ec48:	ldrb	r0, [r7, #72]	; 0x48
   1ec4c:	tst	r0, #4
   1ec50:	bne	1ec78 <__flatcc_fb_gen_c_json_parser@@Base+0x227c>
   1ec54:	mov	r0, r7
   1ec58:	bl	1f444 <__flatcc_fb_gen_c_json_parser@@Base+0x2a48>
   1ec5c:	cmp	r0, #0
   1ec60:	ldrne	r0, [r7, #4]
   1ec64:	ldrne	r0, [r0, #4]
   1ec68:	addne	r0, r6, r0
   1ec6c:	addne	r6, r0, #6
   1ec70:	addne	r4, r4, #1
   1ec74:	add	r4, r4, #1
   1ec78:	ldr	r7, [r7]
   1ec7c:	cmp	r7, #0
   1ec80:	bne	1ec48 <__flatcc_fb_gen_c_json_parser@@Base+0x224c>
   1ec84:	str	r4, [r5]
   1ec88:	mov	r7, #0
   1ec8c:	cmp	r4, #0
   1ec90:	beq	1ed90 <__flatcc_fb_gen_c_json_parser@@Base+0x2394>
   1ec94:	add	r0, r6, r4, lsl #4
   1ec98:	bl	14848 <malloc@plt>
   1ec9c:	str	r0, [sp]
   1eca0:	cmp	r0, #0
   1eca4:	beq	1ed90 <__flatcc_fb_gen_c_json_parser@@Base+0x2394>
   1eca8:	ldr	r6, [r8, #20]
   1ecac:	cmp	r6, #0
   1ecb0:	beq	1ed68 <__flatcc_fb_gen_c_json_parser@@Base+0x236c>
   1ecb4:	lsl	r0, r4, #4
   1ecb8:	ldr	r8, [sp]
   1ecbc:	add	r7, r8, r0
   1ecc0:	mov	sl, #0
   1ecc4:	ldrb	r0, [r6, #72]	; 0x48
   1ecc8:	tst	r0, #4
   1eccc:	bne	1ed5c <__flatcc_fb_gen_c_json_parser@@Base+0x2360>
   1ecd0:	ldr	r0, [r6, #4]
   1ecd4:	ldr	r0, [r0]
   1ecd8:	str	r0, [r8]
   1ecdc:	ldr	r9, [r6, #4]
   1ece0:	ldr	r5, [r9, #4]
   1ece4:	stmib	r8, {r5, r6}
   1ece8:	mov	r0, #0
   1ecec:	str	r0, [r8, #12]
   1ecf0:	mov	r0, r6
   1ecf4:	bl	1f444 <__flatcc_fb_gen_c_json_parser@@Base+0x2a48>
   1ecf8:	cmp	r0, #0
   1ecfc:	beq	1ed58 <__flatcc_fb_gen_c_json_parser@@Base+0x235c>
   1ed00:	str	sl, [r6, #112]	; 0x70
   1ed04:	add	r0, r5, #5
   1ed08:	str	r7, [r8, #16]
   1ed0c:	str	r0, [r8, #20]
   1ed10:	ldr	r1, [r9]
   1ed14:	mov	r0, r7
   1ed18:	mov	r2, r5
   1ed1c:	bl	147e8 <memcpy@plt>
   1ed20:	ldr	r0, [r6, #4]
   1ed24:	ldr	r0, [r0, #4]
   1ed28:	movw	r1, #29791	; 0x745f
   1ed2c:	movt	r1, #28793	; 0x7079
   1ed30:	str	r1, [r7, r0]!
   1ed34:	mov	r0, #101	; 0x65
   1ed38:	strh	r0, [r7, #4]
   1ed3c:	str	r6, [r8, #24]
   1ed40:	mov	r0, #1
   1ed44:	str	r0, [r8, #28]
   1ed48:	add	r7, r7, #6
   1ed4c:	add	r8, r8, #32
   1ed50:	add	sl, sl, #1
   1ed54:	b	1ed5c <__flatcc_fb_gen_c_json_parser@@Base+0x2360>
   1ed58:	add	r8, r8, #16
   1ed5c:	ldr	r6, [r6]
   1ed60:	cmp	r6, #0
   1ed64:	bne	1ecc4 <__flatcc_fb_gen_c_json_parser@@Base+0x22c8>
   1ed68:	movw	r3, #62584	; 0xf478
   1ed6c:	movt	r3, #1
   1ed70:	ldr	r7, [sp]
   1ed74:	mov	r0, r7
   1ed78:	mov	r1, r4
   1ed7c:	mov	r2, #16
   1ed80:	bl	14914 <qsort@plt>
   1ed84:	b	1ed90 <__flatcc_fb_gen_c_json_parser@@Base+0x2394>
   1ed88:	mov	r7, #0
   1ed8c:	str	r7, [r5]
   1ed90:	mov	r0, r7
   1ed94:	sub	sp, fp, #28
   1ed98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ed9c:	push	{r4, r5, r6, sl, fp, lr}
   1eda0:	add	fp, sp, #16
   1eda4:	mov	r5, r2
   1eda8:	mov	r6, r1
   1edac:	mov	r4, r0
   1edb0:	ldr	r2, [fp, #8]
   1edb4:	movw	r1, #34569	; 0x8709
   1edb8:	movt	r1, #4
   1edbc:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1edc0:	movw	r1, #34649	; 0x8759
   1edc4:	movt	r1, #4
   1edc8:	mov	r0, r4
   1edcc:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1edd0:	ldr	r0, [r4, #220]	; 0xdc
   1edd4:	add	r0, r0, #1
   1edd8:	str	r0, [r4, #220]	; 0xdc
   1eddc:	mov	r0, r4
   1ede0:	mov	r1, r6
   1ede4:	mov	r2, r5
   1ede8:	bl	1f4ac <__flatcc_fb_gen_c_json_parser@@Base+0x2ab0>
   1edec:	ldr	r0, [r4, #220]	; 0xdc
   1edf0:	cmp	r0, #0
   1edf4:	beq	1ee20 <__flatcc_fb_gen_c_json_parser@@Base+0x2424>
   1edf8:	sub	r0, r0, #1
   1edfc:	str	r0, [r4, #220]	; 0xdc
   1ee00:	movw	r1, #33840	; 0x8430
   1ee04:	movt	r1, #4
   1ee08:	mov	r0, r4
   1ee0c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ee10:	ldr	r0, [r4, #220]	; 0xdc
   1ee14:	add	r0, r0, #1
   1ee18:	str	r0, [r4, #220]	; 0xdc
   1ee1c:	pop	{r4, r5, r6, sl, fp, pc}
   1ee20:	movw	r0, #32000	; 0x7d00
   1ee24:	movt	r0, #4
   1ee28:	movw	r1, #32012	; 0x7d0c
   1ee2c:	movt	r1, #4
   1ee30:	movw	r3, #34668	; 0x876c
   1ee34:	movt	r3, #4
   1ee38:	movw	r2, #719	; 0x2cf
   1ee3c:	bl	14950 <__assert_fail@plt>
   1ee40:	movw	r1, #34940	; 0x887c
   1ee44:	movt	r1, #4
   1ee48:	b	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ee4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ee50:	add	fp, sp, #28
   1ee54:	sub	sp, sp, #52	; 0x34
   1ee58:	mov	r7, r3
   1ee5c:	mov	sl, r2
   1ee60:	mov	r8, r1
   1ee64:	mov	r4, r0
   1ee68:	mov	r0, #0
   1ee6c:	str	r0, [sp, #44]	; 0x2c
   1ee70:	str	r0, [sp, #40]	; 0x28
   1ee74:	str	r0, [sp, #36]	; 0x24
   1ee78:	str	r0, [sp, #32]
   1ee7c:	movw	r1, #21264	; 0x5310
   1ee80:	movt	r1, #3
   1ee84:	str	r1, [sp, #28]
   1ee88:	str	r0, [sp, #24]
   1ee8c:	ldr	r5, [r8]
   1ee90:	add	r0, r5, r2, lsl #4
   1ee94:	ldr	r9, [fp, #8]
   1ee98:	mov	r1, r9
   1ee9c:	bl	1f550 <__flatcc_fb_gen_c_json_parser@@Base+0x2b54>
   1eea0:	cmp	r0, #0
   1eea4:	beq	1f14c <__flatcc_fb_gen_c_json_parser@@Base+0x2750>
   1eea8:	mov	r0, r5
   1eeac:	mov	r1, sl
   1eeb0:	mov	r2, r7
   1eeb4:	mov	r3, r9
   1eeb8:	bl	1f910 <__flatcc_fb_gen_c_json_parser@@Base+0x2f14>
   1eebc:	mov	r5, r0
   1eec0:	ldr	r0, [r8]
   1eec4:	cmp	r5, sl
   1eec8:	ble	1efb0 <__flatcc_fb_gen_c_json_parser@@Base+0x25b4>
   1eecc:	add	r1, sp, #24
   1eed0:	add	r2, sp, #28
   1eed4:	str	r2, [sp]
   1eed8:	str	r1, [sp, #4]
   1eedc:	add	r0, r0, r5, lsl #4
   1eee0:	add	r2, sp, #40	; 0x28
   1eee4:	add	r3, sp, #32
   1eee8:	mov	r1, r9
   1eeec:	bl	1f9e8 <__flatcc_fb_gen_c_json_parser@@Base+0x2fec>
   1eef0:	ldr	r2, [sp, #40]	; 0x28
   1eef4:	ldr	r3, [sp, #44]	; 0x2c
   1eef8:	ldr	r0, [sp, #24]
   1eefc:	ldr	r1, [sp, #28]
   1ef00:	stm	sp, {r0, r1}
   1ef04:	movw	r1, #34958	; 0x888e
   1ef08:	movt	r1, #4
   1ef0c:	mov	r0, r4
   1ef10:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ef14:	ldr	r0, [r4, #220]	; 0xdc
   1ef18:	add	r0, r0, #1
   1ef1c:	str	r0, [r4, #220]	; 0xdc
   1ef20:	str	r9, [sp]
   1ef24:	sub	r3, r5, #1
   1ef28:	mov	r0, r4
   1ef2c:	mov	r1, r8
   1ef30:	mov	r2, sl
   1ef34:	bl	1ee4c <__flatcc_fb_gen_c_json_parser@@Base+0x2450>
   1ef38:	ldr	r0, [r4, #220]	; 0xdc
   1ef3c:	cmp	r0, #0
   1ef40:	beq	1f398 <__flatcc_fb_gen_c_json_parser@@Base+0x299c>
   1ef44:	sub	r0, r0, #1
   1ef48:	str	r0, [r4, #220]	; 0xdc
   1ef4c:	ldr	r3, [sp, #28]
   1ef50:	ldr	r2, [sp, #24]
   1ef54:	movw	r1, #35050	; 0x88ea
   1ef58:	movt	r1, #4
   1ef5c:	mov	r0, r4
   1ef60:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ef64:	ldr	r0, [r4, #220]	; 0xdc
   1ef68:	add	r0, r0, #1
   1ef6c:	str	r0, [r4, #220]	; 0xdc
   1ef70:	str	r9, [sp]
   1ef74:	mov	r0, r4
   1ef78:	mov	r1, r8
   1ef7c:	mov	r2, r5
   1ef80:	mov	r3, r7
   1ef84:	bl	1ee4c <__flatcc_fb_gen_c_json_parser@@Base+0x2450>
   1ef88:	ldr	r0, [r4, #220]	; 0xdc
   1ef8c:	cmp	r0, #0
   1ef90:	beq	1f3b8 <__flatcc_fb_gen_c_json_parser@@Base+0x29bc>
   1ef94:	sub	r0, r0, #1
   1ef98:	str	r0, [r4, #220]	; 0xdc
   1ef9c:	ldr	r3, [sp, #28]
   1efa0:	ldr	r2, [sp, #24]
   1efa4:	movw	r1, #35079	; 0x8907
   1efa8:	movt	r1, #4
   1efac:	b	1f388 <__flatcc_fb_gen_c_json_parser@@Base+0x298c>
   1efb0:	mov	r1, sl
   1efb4:	mov	r2, r7
   1efb8:	mov	r3, r9
   1efbc:	bl	1fae0 <__flatcc_fb_gen_c_json_parser@@Base+0x30e4>
   1efc0:	mov	r6, r0
   1efc4:	sub	r2, r0, #1
   1efc8:	ldr	r5, [r8]
   1efcc:	mov	r0, r5
   1efd0:	mov	r1, sl
   1efd4:	str	r2, [sp, #12]
   1efd8:	mov	r3, r9
   1efdc:	bl	1fbbc <__flatcc_fb_gen_c_json_parser@@Base+0x31c0>
   1efe0:	mov	r3, r0
   1efe4:	cmp	r0, r6
   1efe8:	str	r6, [sp, #20]
   1efec:	str	r0, [sp, #16]
   1eff0:	bge	1f17c <__flatcc_fb_gen_c_json_parser@@Base+0x2780>
   1eff4:	mov	r6, #0
   1eff8:	cmp	r3, sl
   1effc:	ble	1f024 <__flatcc_fb_gen_c_json_parser@@Base+0x2628>
   1f000:	add	r0, r5, r3, lsl #4
   1f004:	sub	r0, r0, #16
   1f008:	mov	r1, r9
   1f00c:	mov	r6, r3
   1f010:	bl	1fc10 <__flatcc_fb_gen_c_json_parser@@Base+0x3214>
   1f014:	mov	r3, r6
   1f018:	sub	r0, r0, #8
   1f01c:	clz	r0, r0
   1f020:	lsr	r6, r0, #5
   1f024:	add	r0, sp, #24
   1f028:	add	r1, sp, #28
   1f02c:	str	r1, [sp]
   1f030:	str	r0, [sp, #4]
   1f034:	add	r0, r5, r3, lsl #4
   1f038:	add	r2, sp, #40	; 0x28
   1f03c:	mov	r5, r3
   1f040:	add	r3, sp, #32
   1f044:	mov	r1, r9
   1f048:	bl	1f9e8 <__flatcc_fb_gen_c_json_parser@@Base+0x2fec>
   1f04c:	ldr	r2, [sp, #40]	; 0x28
   1f050:	ldr	r3, [sp, #44]	; 0x2c
   1f054:	ldr	r0, [sp, #24]
   1f058:	ldr	r1, [sp, #28]
   1f05c:	stm	sp, {r0, r1}
   1f060:	movw	r1, #35101	; 0x891d
   1f064:	movt	r1, #4
   1f068:	mov	r0, r4
   1f06c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f070:	ldr	r0, [r4, #220]	; 0xdc
   1f074:	add	r0, r0, #1
   1f078:	str	r0, [r4, #220]	; 0xdc
   1f07c:	cmp	r6, #0
   1f080:	beq	1f1ac <__flatcc_fb_gen_c_json_parser@@Base+0x27b0>
   1f084:	ldr	r3, [sp, #28]
   1f088:	ldr	r2, [sp, #24]
   1f08c:	movw	r1, #35141	; 0x8945
   1f090:	movt	r1, #4
   1f094:	mov	r0, r4
   1f098:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f09c:	ldm	r8, {r0, ip}
   1f0a0:	ldr	r1, [r8, #12]
   1f0a4:	sub	r2, r5, #1
   1f0a8:	mov	r6, r2
   1f0ac:	add	r0, r0, r2, lsl #4
   1f0b0:	ldr	r2, [r0, #8]
   1f0b4:	ldr	r3, [r0, #12]
   1f0b8:	mov	r0, #8
   1f0bc:	str	r0, [sp]
   1f0c0:	mov	r0, r4
   1f0c4:	blx	ip
   1f0c8:	ldr	r3, [sp, #28]
   1f0cc:	ldr	r2, [sp, #24]
   1f0d0:	movw	r1, #35173	; 0x8965
   1f0d4:	movt	r1, #4
   1f0d8:	mov	r0, r4
   1f0dc:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f0e0:	movw	r1, #35201	; 0x8981
   1f0e4:	movt	r1, #4
   1f0e8:	mov	r0, r4
   1f0ec:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f0f0:	movw	r1, #34523	; 0x86db
   1f0f4:	movt	r1, #4
   1f0f8:	mov	r0, r4
   1f0fc:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f100:	add	r0, r9, #8
   1f104:	str	r0, [sp]
   1f108:	mov	r0, r4
   1f10c:	mov	r1, r8
   1f110:	mov	r2, r5
   1f114:	ldr	r3, [sp, #12]
   1f118:	bl	1ee4c <__flatcc_fb_gen_c_json_parser@@Base+0x2450>
   1f11c:	ldr	r0, [r4, #220]	; 0xdc
   1f120:	cmp	r0, #0
   1f124:	beq	1f418 <__flatcc_fb_gen_c_json_parser@@Base+0x2a1c>
   1f128:	sub	r0, r0, #1
   1f12c:	str	r0, [r4, #220]	; 0xdc
   1f130:	ldr	r3, [sp, #28]
   1f134:	ldr	r2, [sp, #24]
   1f138:	movw	r1, #35211	; 0x898b
   1f13c:	movt	r1, #4
   1f140:	mov	r0, r4
   1f144:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f148:	b	1f1ec <__flatcc_fb_gen_c_json_parser@@Base+0x27f0>
   1f14c:	cmp	r7, sl
   1f150:	bne	1f188 <__flatcc_fb_gen_c_json_parser@@Base+0x278c>
   1f154:	mov	r0, #0
   1f158:	str	r9, [sp]
   1f15c:	str	r0, [sp, #4]
   1f160:	mov	r0, r4
   1f164:	mov	r1, r8
   1f168:	mov	r2, sl
   1f16c:	mov	r3, r7
   1f170:	bl	1f570 <__flatcc_fb_gen_c_json_parser@@Base+0x2b74>
   1f174:	sub	sp, fp, #28
   1f178:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f17c:	mov	r2, r6
   1f180:	mov	r6, r3
   1f184:	b	1f228 <__flatcc_fb_gen_c_json_parser@@Base+0x282c>
   1f188:	add	r0, sl, #1
   1f18c:	cmp	r0, r7
   1f190:	bne	1eea8 <__flatcc_fb_gen_c_json_parser@@Base+0x24ac>
   1f194:	add	r0, r5, r7, lsl #4
   1f198:	mov	r1, r9
   1f19c:	bl	1f550 <__flatcc_fb_gen_c_json_parser@@Base+0x2b54>
   1f1a0:	cmp	r0, #0
   1f1a4:	bne	1eea8 <__flatcc_fb_gen_c_json_parser@@Base+0x24ac>
   1f1a8:	b	1f154 <__flatcc_fb_gen_c_json_parser@@Base+0x2758>
   1f1ac:	movw	r1, #35201	; 0x8981
   1f1b0:	movt	r1, #4
   1f1b4:	mov	r0, r4
   1f1b8:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f1bc:	movw	r1, #34523	; 0x86db
   1f1c0:	movt	r1, #4
   1f1c4:	mov	r0, r4
   1f1c8:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f1cc:	add	r0, r9, #8
   1f1d0:	str	r0, [sp]
   1f1d4:	mov	r0, r4
   1f1d8:	mov	r1, r8
   1f1dc:	mov	r2, r5
   1f1e0:	ldr	r3, [sp, #12]
   1f1e4:	bl	1ee4c <__flatcc_fb_gen_c_json_parser@@Base+0x2450>
   1f1e8:	mov	r6, r5
   1f1ec:	ldr	r0, [r4, #220]	; 0xdc
   1f1f0:	cmp	r0, #0
   1f1f4:	beq	1f3d8 <__flatcc_fb_gen_c_json_parser@@Base+0x29dc>
   1f1f8:	sub	r0, r0, #1
   1f1fc:	str	r0, [r4, #220]	; 0xdc
   1f200:	ldr	r3, [sp, #28]
   1f204:	ldr	r2, [sp, #24]
   1f208:	movw	r1, #35240	; 0x89a8
   1f20c:	movt	r1, #4
   1f210:	mov	r0, r4
   1f214:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f218:	ldr	r0, [r4, #220]	; 0xdc
   1f21c:	add	r0, r0, #1
   1f220:	str	r0, [r4, #220]	; 0xdc
   1f224:	ldr	r2, [sp, #20]
   1f228:	mov	r5, #0
   1f22c:	cmp	r6, sl
   1f230:	mov	r0, #0
   1f234:	movwgt	r0, #1
   1f238:	str	r7, [sp, #12]
   1f23c:	cmp	r2, r7
   1f240:	mov	r1, #0
   1f244:	movwle	r1, #1
   1f248:	and	r9, r1, r0
   1f24c:	cmp	r9, #1
   1f250:	ldreq	r0, [r8, #24]
   1f254:	addeq	r5, r0, #1
   1f258:	streq	r5, [r8, #24]
   1f25c:	cmp	r6, sl
   1f260:	ble	1f2d8 <__flatcc_fb_gen_c_json_parser@@Base+0x28dc>
   1f264:	ldr	r0, [fp, #8]
   1f268:	stm	sp, {r0, r5}
   1f26c:	sub	r3, r6, #1
   1f270:	mov	r0, r4
   1f274:	mov	r1, r8
   1f278:	mov	r2, sl
   1f27c:	mov	r7, r6
   1f280:	bl	1f570 <__flatcc_fb_gen_c_json_parser@@Base+0x2b74>
   1f284:	ldr	r2, [sp, #20]
   1f288:	cmp	r9, #0
   1f28c:	beq	1f2d8 <__flatcc_fb_gen_c_json_parser@@Base+0x28dc>
   1f290:	movw	r1, #35270	; 0x89c6
   1f294:	movt	r1, #4
   1f298:	mov	r0, r4
   1f29c:	mov	r2, r5
   1f2a0:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f2a4:	ldr	r0, [r4, #220]	; 0xdc
   1f2a8:	mov	r1, #0
   1f2ac:	str	r1, [r4, #220]	; 0xdc
   1f2b0:	str	r0, [r4, #228]	; 0xe4
   1f2b4:	movw	r1, #35292	; 0x89dc
   1f2b8:	movt	r1, #4
   1f2bc:	mov	r0, r4
   1f2c0:	mov	r2, r5
   1f2c4:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f2c8:	mov	r6, r7
   1f2cc:	ldr	r2, [sp, #20]
   1f2d0:	ldr	r0, [r4, #228]	; 0xe4
   1f2d4:	str	r0, [r4, #220]	; 0xdc
   1f2d8:	ldr	r3, [sp, #12]
   1f2dc:	cmp	r2, r3
   1f2e0:	ble	1f2fc <__flatcc_fb_gen_c_json_parser@@Base+0x2900>
   1f2e4:	cmp	r6, sl
   1f2e8:	bgt	1f310 <__flatcc_fb_gen_c_json_parser@@Base+0x2914>
   1f2ec:	ldr	r1, [r8, #8]
   1f2f0:	mov	r0, r4
   1f2f4:	blx	r1
   1f2f8:	b	1f354 <__flatcc_fb_gen_c_json_parser@@Base+0x2958>
   1f2fc:	ldr	r0, [fp, #8]
   1f300:	str	r0, [sp]
   1f304:	mov	r0, r4
   1f308:	mov	r1, r8
   1f30c:	bl	1ee4c <__flatcc_fb_gen_c_json_parser@@Base+0x2450>
   1f310:	cmp	r9, #0
   1f314:	beq	1f354 <__flatcc_fb_gen_c_json_parser@@Base+0x2958>
   1f318:	ldr	r0, [r4, #220]	; 0xdc
   1f31c:	mov	r1, #0
   1f320:	str	r1, [r4, #220]	; 0xdc
   1f324:	str	r0, [r4, #228]	; 0xe4
   1f328:	movw	r1, #35289	; 0x89d9
   1f32c:	movt	r1, #4
   1f330:	mov	r0, r4
   1f334:	mov	r2, r5
   1f338:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f33c:	ldr	r0, [r4, #228]	; 0xe4
   1f340:	str	r0, [r4, #220]	; 0xdc
   1f344:	movw	r1, #35303	; 0x89e7
   1f348:	movt	r1, #4
   1f34c:	mov	r0, r4
   1f350:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f354:	ldr	r0, [sp, #20]
   1f358:	ldr	r1, [sp, #16]
   1f35c:	cmp	r1, r0
   1f360:	bge	1f390 <__flatcc_fb_gen_c_json_parser@@Base+0x2994>
   1f364:	ldr	r0, [r4, #220]	; 0xdc
   1f368:	cmp	r0, #0
   1f36c:	beq	1f3f8 <__flatcc_fb_gen_c_json_parser@@Base+0x29fc>
   1f370:	sub	r0, r0, #1
   1f374:	str	r0, [r4, #220]	; 0xdc
   1f378:	ldr	r3, [sp, #28]
   1f37c:	ldr	r2, [sp, #24]
   1f380:	movw	r1, #35312	; 0x89f0
   1f384:	movt	r1, #4
   1f388:	mov	r0, r4
   1f38c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f390:	sub	sp, fp, #28
   1f394:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f398:	movw	r0, #32000	; 0x7d00
   1f39c:	movt	r0, #4
   1f3a0:	movw	r1, #32012	; 0x7d0c
   1f3a4:	movt	r1, #4
   1f3a8:	movw	r3, #34996	; 0x88b4
   1f3ac:	movt	r3, #4
   1f3b0:	movw	r2, #973	; 0x3cd
   1f3b4:	bl	14950 <__assert_fail@plt>
   1f3b8:	movw	r0, #32000	; 0x7d00
   1f3bc:	movt	r0, #4
   1f3c0:	movw	r1, #32012	; 0x7d0c
   1f3c4:	movt	r1, #4
   1f3c8:	movw	r3, #34996	; 0x88b4
   1f3cc:	movt	r3, #4
   1f3d0:	movw	r2, #975	; 0x3cf
   1f3d4:	bl	14950 <__assert_fail@plt>
   1f3d8:	movw	r0, #32000	; 0x7d00
   1f3dc:	movt	r0, #4
   1f3e0:	movw	r1, #32012	; 0x7d0c
   1f3e4:	movt	r1, #4
   1f3e8:	movw	r3, #34996	; 0x88b4
   1f3ec:	movt	r3, #4
   1f3f0:	movw	r2, #1044	; 0x414
   1f3f4:	bl	14950 <__assert_fail@plt>
   1f3f8:	movw	r0, #32000	; 0x7d00
   1f3fc:	movt	r0, #4
   1f400:	movw	r1, #32012	; 0x7d0c
   1f404:	movt	r1, #4
   1f408:	movw	r3, #34996	; 0x88b4
   1f40c:	movt	r3, #4
   1f410:	mov	r2, #1072	; 0x430
   1f414:	bl	14950 <__assert_fail@plt>
   1f418:	movw	r0, #32000	; 0x7d00
   1f41c:	movt	r0, #4
   1f420:	movw	r1, #32012	; 0x7d0c
   1f424:	movt	r1, #4
   1f428:	movw	r3, #34996	; 0x88b4
   1f42c:	movt	r3, #4
   1f430:	mov	r2, #1040	; 0x410
   1f434:	bl	14950 <__assert_fail@plt>
   1f438:	cmp	r0, #0
   1f43c:	bxeq	lr
   1f440:	b	147dc <free@plt>
   1f444:	ldrh	r1, [r0, #24]
   1f448:	movw	r2, #65534	; 0xfffe
   1f44c:	and	r2, r1, r2
   1f450:	mov	r1, #0
   1f454:	cmp	r2, #14
   1f458:	bne	1f470 <__flatcc_fb_gen_c_json_parser@@Base+0x2a74>
   1f45c:	ldr	r0, [r0, #16]
   1f460:	ldrh	r0, [r0, #8]
   1f464:	sub	r0, r0, #4
   1f468:	clz	r0, r0
   1f46c:	lsr	r1, r0, #5
   1f470:	mov	r0, r1
   1f474:	bx	lr
   1f478:	push	{r4, r5, fp, lr}
   1f47c:	add	fp, sp, #8
   1f480:	ldm	r1, {r3, r4}
   1f484:	ldm	r0, {r1, r5}
   1f488:	cmp	r5, r4
   1f48c:	mov	r2, r5
   1f490:	movgt	r2, r4
   1f494:	mov	r0, r1
   1f498:	mov	r1, r3
   1f49c:	bl	14800 <memcmp@plt>
   1f4a0:	cmp	r0, #0
   1f4a4:	subeq	r0, r5, r4
   1f4a8:	pop	{r4, r5, fp, pc}
   1f4ac:	ldr	r1, [r1, #40]	; 0x28
   1f4b0:	sub	r3, r1, #1
   1f4b4:	cmp	r3, #5
   1f4b8:	bcs	1f4c4 <__flatcc_fb_gen_c_json_parser@@Base+0x2ac8>
   1f4bc:	ldrd	r2, [r2, #48]	; 0x30
   1f4c0:	b	1f4dc <__flatcc_fb_gen_c_json_parser@@Base+0x2ae0>
   1f4c4:	sub	r1, r1, #6
   1f4c8:	cmp	r1, #4
   1f4cc:	bcs	1f4f4 <__flatcc_fb_gen_c_json_parser@@Base+0x2af8>
   1f4d0:	ldrd	r2, [r2, #48]	; 0x30
   1f4d4:	cmn	r3, #1
   1f4d8:	ble	1f4e8 <__flatcc_fb_gen_c_json_parser@@Base+0x2aec>
   1f4dc:	movw	r1, #34743	; 0x87b7
   1f4e0:	movt	r1, #4
   1f4e4:	b	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f4e8:	movw	r1, #34785	; 0x87e1
   1f4ec:	movt	r1, #4
   1f4f0:	b	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f4f4:	push	{r4, sl, fp, lr}
   1f4f8:	add	fp, sp, #8
   1f4fc:	sub	sp, sp, #8
   1f500:	movw	r0, #4264	; 0x10a8
   1f504:	movt	r0, #6
   1f508:	ldr	r0, [r0]
   1f50c:	movw	r1, #34827	; 0x880b
   1f510:	movt	r1, #4
   1f514:	str	r1, [sp]
   1f518:	movw	r1, #21007	; 0x520f
   1f51c:	movt	r1, #3
   1f520:	movw	r4, #32012	; 0x7d0c
   1f524:	movt	r4, #4
   1f528:	mov	r2, r4
   1f52c:	movw	r3, #710	; 0x2c6
   1f530:	bl	14890 <fprintf@plt>
   1f534:	movw	r0, #24925	; 0x615d
   1f538:	movt	r0, #4
   1f53c:	movw	r3, #34862	; 0x882e
   1f540:	movt	r3, #4
   1f544:	mov	r1, r4
   1f548:	movw	r2, #710	; 0x2c6
   1f54c:	bl	14950 <__assert_fail@plt>
   1f550:	mvn	r2, #7
   1f554:	sub	r2, r2, r1
   1f558:	ldr	r3, [r0, #4]
   1f55c:	add	r0, r2, r3
   1f560:	add	r1, r1, #8
   1f564:	cmp	r1, r3
   1f568:	movwgt	r0, #0
   1f56c:	bx	lr
   1f570:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f574:	add	fp, sp, #28
   1f578:	sub	sp, sp, #52	; 0x34
   1f57c:	mov	sl, r3
   1f580:	mov	r5, r1
   1f584:	mov	r4, r0
   1f588:	mov	r0, #0
   1f58c:	str	r0, [sp, #44]	; 0x2c
   1f590:	str	r0, [sp, #40]	; 0x28
   1f594:	str	r0, [sp, #36]	; 0x24
   1f598:	str	r0, [sp, #32]
   1f59c:	ldr	r0, [r1]
   1f5a0:	add	r1, sp, #24
   1f5a4:	add	r3, sp, #28
   1f5a8:	str	r3, [sp]
   1f5ac:	str	r1, [sp, #4]
   1f5b0:	sub	r8, sl, r2
   1f5b4:	add	r1, r8, #1
   1f5b8:	add	r1, r1, r1, lsr #31
   1f5bc:	str	r2, [sp, #16]
   1f5c0:	add	r1, r2, r1, asr #1
   1f5c4:	str	r1, [sp, #20]
   1f5c8:	add	r0, r0, r1, lsl #4
   1f5cc:	ldr	r1, [fp, #8]
   1f5d0:	add	r2, sp, #40	; 0x28
   1f5d4:	add	r3, sp, #32
   1f5d8:	bl	1f9e8 <__flatcc_fb_gen_c_json_parser@@Base+0x2fec>
   1f5dc:	mov	r9, r0
   1f5e0:	cmp	r0, #8
   1f5e4:	bne	1f608 <__flatcc_fb_gen_c_json_parser@@Base+0x2c0c>
   1f5e8:	ldr	r2, [sp, #40]	; 0x28
   1f5ec:	ldr	r3, [sp, #44]	; 0x2c
   1f5f0:	ldr	r0, [sp, #24]
   1f5f4:	ldr	r1, [sp, #28]
   1f5f8:	stm	sp, {r0, r1}
   1f5fc:	movw	r1, #35335	; 0x8a07
   1f600:	movt	r1, #4
   1f604:	b	1f638 <__flatcc_fb_gen_c_json_parser@@Base+0x2c3c>
   1f608:	ldr	r2, [sp, #32]
   1f60c:	ldr	r3, [sp, #36]	; 0x24
   1f610:	ldr	r0, [sp, #40]	; 0x28
   1f614:	ldr	r1, [sp, #44]	; 0x2c
   1f618:	mov	r7, r5
   1f61c:	ldr	r5, [sp, #24]
   1f620:	ldr	r6, [sp, #28]
   1f624:	stm	sp, {r0, r1, r5}
   1f628:	mov	r5, r7
   1f62c:	str	r6, [sp, #12]
   1f630:	movw	r1, #35367	; 0x8a27
   1f634:	movt	r1, #4
   1f638:	mov	r0, r4
   1f63c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f640:	ldr	r7, [fp, #12]
   1f644:	ldr	r0, [r4, #220]	; 0xdc
   1f648:	add	r0, r0, #1
   1f64c:	str	r0, [r4, #220]	; 0xdc
   1f650:	add	r0, r8, #2
   1f654:	cmp	r0, #2
   1f658:	bhi	1f6a8 <__flatcc_fb_gen_c_json_parser@@Base+0x2cac>
   1f65c:	ldr	r0, [r5]
   1f660:	mov	r6, r7
   1f664:	ldr	r7, [r5, #4]
   1f668:	ldr	r1, [r5, #12]
   1f66c:	ldr	r2, [sp, #20]
   1f670:	add	r0, r0, r2, lsl #4
   1f674:	ldr	r2, [r0, #8]
   1f678:	ldr	r3, [r0, #12]
   1f67c:	str	r9, [sp]
   1f680:	mov	r0, r4
   1f684:	blx	r7
   1f688:	cmp	r6, #1
   1f68c:	blt	1f720 <__flatcc_fb_gen_c_json_parser@@Base+0x2d24>
   1f690:	movw	r1, #35410	; 0x8a52
   1f694:	movt	r1, #4
   1f698:	mov	r0, r4
   1f69c:	mov	r2, r6
   1f6a0:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f6a4:	b	1f72c <__flatcc_fb_gen_c_json_parser@@Base+0x2d30>
   1f6a8:	ldr	r8, [sp, #20]
   1f6ac:	cmp	r8, sl
   1f6b0:	bne	1f700 <__flatcc_fb_gen_c_json_parser@@Base+0x2d04>
   1f6b4:	ldr	r0, [r5]
   1f6b8:	mov	r6, r7
   1f6bc:	ldr	r7, [r5, #4]
   1f6c0:	ldr	r1, [r5, #12]
   1f6c4:	add	r0, r0, r8, lsl #4
   1f6c8:	ldr	r2, [r0, #8]
   1f6cc:	ldr	r3, [r0, #12]
   1f6d0:	str	r9, [sp]
   1f6d4:	mov	r0, r4
   1f6d8:	blx	r7
   1f6dc:	mov	r7, r6
   1f6e0:	cmp	r6, #1
   1f6e4:	blt	1f7b8 <__flatcc_fb_gen_c_json_parser@@Base+0x2dbc>
   1f6e8:	movw	r1, #35410	; 0x8a52
   1f6ec:	movt	r1, #4
   1f6f0:	mov	r0, r4
   1f6f4:	mov	r2, r7
   1f6f8:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f6fc:	b	1f7c4 <__flatcc_fb_gen_c_json_parser@@Base+0x2dc8>
   1f700:	ldr	r6, [fp, #8]
   1f704:	stm	sp, {r6, r7}
   1f708:	mov	r0, r4
   1f70c:	mov	r1, r5
   1f710:	mov	r2, r8
   1f714:	mov	r3, sl
   1f718:	bl	1f570 <__flatcc_fb_gen_c_json_parser@@Base+0x2b74>
   1f71c:	b	1f7ec <__flatcc_fb_gen_c_json_parser@@Base+0x2df0>
   1f720:	ldr	r1, [r5, #8]
   1f724:	mov	r0, r4
   1f728:	blx	r1
   1f72c:	ldr	r0, [r4, #220]	; 0xdc
   1f730:	cmp	r0, #0
   1f734:	beq	1f890 <__flatcc_fb_gen_c_json_parser@@Base+0x2e94>
   1f738:	sub	r0, r0, #1
   1f73c:	str	r0, [r4, #220]	; 0xdc
   1f740:	movw	r1, #30345	; 0x7689
   1f744:	movt	r1, #3
   1f748:	mov	r0, r4
   1f74c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f750:	ldr	r0, [r4, #220]	; 0xdc
   1f754:	cmp	r0, #0
   1f758:	beq	1f8b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2eb4>
   1f75c:	sub	r0, r0, #1
   1f760:	str	r0, [r4, #220]	; 0xdc
   1f764:	ldr	r3, [sp, #28]
   1f768:	ldr	r2, [sp, #24]
   1f76c:	movw	r1, #35492	; 0x8aa4
   1f770:	movt	r1, #4
   1f774:	mov	r0, r4
   1f778:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f77c:	ldr	r0, [r4, #220]	; 0xdc
   1f780:	add	r0, r0, #1
   1f784:	str	r0, [r4, #220]	; 0xdc
   1f788:	cmp	r6, #1
   1f78c:	blt	1f7a8 <__flatcc_fb_gen_c_json_parser@@Base+0x2dac>
   1f790:	movw	r1, #35410	; 0x8a52
   1f794:	movt	r1, #4
   1f798:	mov	r0, r4
   1f79c:	mov	r2, r6
   1f7a0:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f7a4:	b	1f83c <__flatcc_fb_gen_c_json_parser@@Base+0x2e40>
   1f7a8:	ldr	r1, [r5, #8]
   1f7ac:	mov	r0, r4
   1f7b0:	blx	r1
   1f7b4:	b	1f83c <__flatcc_fb_gen_c_json_parser@@Base+0x2e40>
   1f7b8:	ldr	r1, [r5, #8]
   1f7bc:	mov	r0, r4
   1f7c0:	blx	r1
   1f7c4:	ldr	r0, [r4, #220]	; 0xdc
   1f7c8:	cmp	r0, #0
   1f7cc:	ldr	r6, [fp, #8]
   1f7d0:	beq	1f8f0 <__flatcc_fb_gen_c_json_parser@@Base+0x2ef4>
   1f7d4:	sub	r0, r0, #1
   1f7d8:	str	r0, [r4, #220]	; 0xdc
   1f7dc:	movw	r1, #30345	; 0x7689
   1f7e0:	movt	r1, #3
   1f7e4:	mov	r0, r4
   1f7e8:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f7ec:	ldr	r0, [r4, #220]	; 0xdc
   1f7f0:	cmp	r0, #0
   1f7f4:	beq	1f8d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2ed4>
   1f7f8:	sub	r0, r0, #1
   1f7fc:	str	r0, [r4, #220]	; 0xdc
   1f800:	ldr	r3, [sp, #28]
   1f804:	ldr	r2, [sp, #24]
   1f808:	movw	r1, #35492	; 0x8aa4
   1f80c:	movt	r1, #4
   1f810:	mov	r0, r4
   1f814:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f818:	ldr	r0, [r4, #220]	; 0xdc
   1f81c:	add	r0, r0, #1
   1f820:	str	r0, [r4, #220]	; 0xdc
   1f824:	stm	sp, {r6, r7}
   1f828:	sub	r3, r8, #1
   1f82c:	mov	r0, r4
   1f830:	mov	r1, r5
   1f834:	ldr	r2, [sp, #16]
   1f838:	bl	1f570 <__flatcc_fb_gen_c_json_parser@@Base+0x2b74>
   1f83c:	ldr	r0, [r4, #220]	; 0xdc
   1f840:	cmp	r0, #0
   1f844:	beq	1f870 <__flatcc_fb_gen_c_json_parser@@Base+0x2e74>
   1f848:	sub	r0, r0, #1
   1f84c:	str	r0, [r4, #220]	; 0xdc
   1f850:	ldr	r3, [sp, #28]
   1f854:	ldr	r2, [sp, #24]
   1f858:	movw	r1, #35514	; 0x8aba
   1f85c:	movt	r1, #4
   1f860:	mov	r0, r4
   1f864:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1f868:	sub	sp, fp, #28
   1f86c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f870:	movw	r0, #32000	; 0x7d00
   1f874:	movt	r0, #4
   1f878:	movw	r1, #32012	; 0x7d0c
   1f87c:	movt	r1, #4
   1f880:	movw	r3, #35426	; 0x8a62
   1f884:	movt	r3, #4
   1f888:	movw	r2, #910	; 0x38e
   1f88c:	bl	14950 <__assert_fail@plt>
   1f890:	movw	r0, #32000	; 0x7d00
   1f894:	movt	r0, #4
   1f898:	movw	r1, #32012	; 0x7d0c
   1f89c:	movt	r1, #4
   1f8a0:	movw	r3, #35426	; 0x8a62
   1f8a4:	movt	r3, #4
   1f8a8:	mov	r2, #888	; 0x378
   1f8ac:	bl	14950 <__assert_fail@plt>
   1f8b0:	movw	r0, #32000	; 0x7d00
   1f8b4:	movt	r0, #4
   1f8b8:	movw	r1, #32012	; 0x7d0c
   1f8bc:	movt	r1, #4
   1f8c0:	movw	r3, #35426	; 0x8a62
   1f8c4:	movt	r3, #4
   1f8c8:	movw	r2, #889	; 0x379
   1f8cc:	bl	14950 <__assert_fail@plt>
   1f8d0:	movw	r0, #32000	; 0x7d00
   1f8d4:	movt	r0, #4
   1f8d8:	movw	r1, #32012	; 0x7d0c
   1f8dc:	movt	r1, #4
   1f8e0:	movw	r3, #35426	; 0x8a62
   1f8e4:	movt	r3, #4
   1f8e8:	movw	r2, #907	; 0x38b
   1f8ec:	bl	14950 <__assert_fail@plt>
   1f8f0:	movw	r0, #32000	; 0x7d00
   1f8f4:	movt	r0, #4
   1f8f8:	movw	r1, #32012	; 0x7d0c
   1f8fc:	movt	r1, #4
   1f900:	movw	r3, #35426	; 0x8a62
   1f904:	movt	r3, #4
   1f908:	movw	r2, #903	; 0x387
   1f90c:	bl	14950 <__assert_fail@plt>
   1f910:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f914:	add	fp, sp, #28
   1f918:	sub	sp, sp, #44	; 0x2c
   1f91c:	mov	r4, r3
   1f920:	mov	r5, r1
   1f924:	mov	r9, #0
   1f928:	str	r9, [sp, #36]	; 0x24
   1f92c:	str	r9, [sp, #32]
   1f930:	str	r9, [sp, #28]
   1f934:	str	r9, [sp, #24]
   1f938:	str	r9, [sp, #20]
   1f93c:	str	r9, [sp, #16]
   1f940:	str	r9, [sp, #12]
   1f944:	str	r9, [sp, #8]
   1f948:	sub	r1, r2, r1
   1f94c:	add	r1, r1, r1, lsr #31
   1f950:	add	r1, r5, r1, asr #1
   1f954:	add	r0, r0, r1, lsl #4
   1f958:	sub	r6, r0, #16
   1f95c:	add	sl, sp, #8
   1f960:	mov	r8, r1
   1f964:	cmp	r1, r5
   1f968:	ble	1f9dc <__flatcc_fb_gen_c_json_parser@@Base+0x2fe0>
   1f96c:	str	r9, [sp]
   1f970:	str	r9, [sp, #4]
   1f974:	mov	r0, r6
   1f978:	mov	r1, r4
   1f97c:	add	r2, sp, #32
   1f980:	add	r3, sp, #16
   1f984:	bl	1f9e8 <__flatcc_fb_gen_c_json_parser@@Base+0x2fec>
   1f988:	str	r9, [sp]
   1f98c:	str	r9, [sp, #4]
   1f990:	add	r0, r6, #16
   1f994:	mov	r1, r4
   1f998:	add	r2, sp, #24
   1f99c:	mov	r3, sl
   1f9a0:	bl	1f9e8 <__flatcc_fb_gen_c_json_parser@@Base+0x2fec>
   1f9a4:	ldr	r0, [sp, #32]
   1f9a8:	ldr	r1, [sp, #36]	; 0x24
   1f9ac:	ldr	r2, [sp, #24]
   1f9b0:	ldr	r3, [sp, #28]
   1f9b4:	eor	r1, r3, r1
   1f9b8:	ldr	r3, [sp, #16]
   1f9bc:	ldr	r7, [sp, #20]
   1f9c0:	and	r1, r1, r7
   1f9c4:	eor	r0, r2, r0
   1f9c8:	and	r0, r0, r3
   1f9cc:	orrs	r0, r0, r1
   1f9d0:	sub	r6, r6, #16
   1f9d4:	sub	r1, r8, #1
   1f9d8:	beq	1f960 <__flatcc_fb_gen_c_json_parser@@Base+0x2f64>
   1f9dc:	mov	r0, r8
   1f9e0:	sub	sp, fp, #28
   1f9e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f9e8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1f9ec:	add	fp, sp, #24
   1f9f0:	mov	ip, r0
   1f9f4:	ldr	r4, [r0, #4]
   1f9f8:	mov	r0, #0
   1f9fc:	ldr	lr, [fp, #8]
   1fa00:	cmp	r4, r1
   1fa04:	mov	r8, #0
   1fa08:	blt	1fac8 <__flatcc_fb_gen_c_json_parser@@Base+0x30cc>
   1fa0c:	sub	r0, r4, r1
   1fa10:	cmp	r0, #8
   1fa14:	movge	r0, #8
   1fa18:	ldr	r7, [ip]
   1fa1c:	add	r8, r7, r1
   1fa20:	cmp	r0, #0
   1fa24:	beq	1fa88 <__flatcc_fb_gen_c_json_parser@@Base+0x308c>
   1fa28:	sub	r1, r1, #1
   1fa2c:	sub	r7, r1, r4
   1fa30:	cmn	r7, #9
   1fa34:	mvnle	r7, #8
   1fa38:	mov	r1, #72	; 0x48
   1fa3c:	add	r1, r1, r7, lsl #3
   1fa40:	add	r4, r7, #2
   1fa44:	mov	ip, #0
   1fa48:	mov	r9, #0
   1fa4c:	ldrb	r5, [r8, -r4]
   1fa50:	rsb	r6, r1, #32
   1fa54:	lsr	r6, r5, r6
   1fa58:	sub	r7, r1, #32
   1fa5c:	cmp	r7, #0
   1fa60:	lslge	r6, r5, r7
   1fa64:	orr	r9, r6, r9
   1fa68:	lsl	r5, r5, r1
   1fa6c:	movwge	r5, #0
   1fa70:	orr	ip, r5, ip
   1fa74:	add	r4, r4, #1
   1fa78:	add	r1, r1, #8
   1fa7c:	cmp	r4, #1
   1fa80:	bne	1fa4c <__flatcc_fb_gen_c_json_parser@@Base+0x3050>
   1fa84:	b	1fa90 <__flatcc_fb_gen_c_json_parser@@Base+0x3094>
   1fa88:	mov	ip, #0
   1fa8c:	mov	r9, #0
   1fa90:	str	ip, [r2]
   1fa94:	str	r9, [r2, #4]
   1fa98:	mov	r1, #32
   1fa9c:	sub	r1, r1, r0, lsl #3
   1faa0:	mov	r2, #64	; 0x40
   1faa4:	sub	r2, r2, r0, lsl #3
   1faa8:	mvn	r7, #0
   1faac:	lsl	r4, r7, r2
   1fab0:	cmp	r1, #0
   1fab4:	movwge	r4, #0
   1fab8:	rsb	r2, r2, #32
   1fabc:	ror	r5, r7, r2
   1fac0:	lslge	r5, r7, r1
   1fac4:	strd	r4, [r3]
   1fac8:	ldr	r1, [fp, #12]
   1facc:	cmp	lr, #0
   1fad0:	strne	r8, [lr]
   1fad4:	cmp	r1, #0
   1fad8:	strne	r0, [r1]
   1fadc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1fae0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fae4:	add	fp, sp, #28
   1fae8:	sub	sp, sp, #44	; 0x2c
   1faec:	mov	r4, r3
   1faf0:	mov	sl, r2
   1faf4:	mov	r9, #0
   1faf8:	str	r9, [sp, #36]	; 0x24
   1fafc:	str	r9, [sp, #32]
   1fb00:	str	r9, [sp, #28]
   1fb04:	str	r9, [sp, #24]
   1fb08:	str	r9, [sp, #20]
   1fb0c:	str	r9, [sp, #16]
   1fb10:	str	r9, [sp, #12]
   1fb14:	str	r9, [sp, #8]
   1fb18:	sub	r2, r2, r1
   1fb1c:	add	r2, r2, r2, lsr #31
   1fb20:	add	r1, r1, r2, asr #1
   1fb24:	add	r6, r1, #1
   1fb28:	add	r7, r0, r6, lsl #4
   1fb2c:	add	r8, sp, #8
   1fb30:	sub	r0, r6, #1
   1fb34:	cmp	r0, sl
   1fb38:	bge	1fbb0 <__flatcc_fb_gen_c_json_parser@@Base+0x31b4>
   1fb3c:	str	r9, [sp]
   1fb40:	str	r9, [sp, #4]
   1fb44:	sub	r0, r7, #16
   1fb48:	mov	r1, r4
   1fb4c:	add	r2, sp, #32
   1fb50:	add	r3, sp, #16
   1fb54:	bl	1f9e8 <__flatcc_fb_gen_c_json_parser@@Base+0x2fec>
   1fb58:	str	r9, [sp]
   1fb5c:	str	r9, [sp, #4]
   1fb60:	mov	r0, r7
   1fb64:	mov	r1, r4
   1fb68:	add	r2, sp, #24
   1fb6c:	mov	r3, r8
   1fb70:	bl	1f9e8 <__flatcc_fb_gen_c_json_parser@@Base+0x2fec>
   1fb74:	ldr	r0, [sp, #32]
   1fb78:	ldr	r1, [sp, #36]	; 0x24
   1fb7c:	ldr	r2, [sp, #24]
   1fb80:	ldr	r3, [sp, #28]
   1fb84:	eor	r1, r3, r1
   1fb88:	ldr	r3, [sp, #16]
   1fb8c:	ldr	r5, [sp, #20]
   1fb90:	and	r1, r1, r5
   1fb94:	eor	r0, r2, r0
   1fb98:	and	r0, r0, r3
   1fb9c:	orrs	r0, r0, r1
   1fba0:	add	r7, r7, #16
   1fba4:	add	r6, r6, #1
   1fba8:	beq	1fb30 <__flatcc_fb_gen_c_json_parser@@Base+0x3134>
   1fbac:	sub	r6, r6, #1
   1fbb0:	mov	r0, r6
   1fbb4:	sub	sp, fp, #28
   1fbb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fbbc:	push	{r4, r5, r6, r7, fp, lr}
   1fbc0:	add	fp, sp, #16
   1fbc4:	mov	r6, r1
   1fbc8:	cmp	r1, r2
   1fbcc:	bgt	1fc08 <__flatcc_fb_gen_c_json_parser@@Base+0x320c>
   1fbd0:	mov	r4, r3
   1fbd4:	mov	r5, r2
   1fbd8:	add	r7, r0, r6, lsl #4
   1fbdc:	b	1fbf4 <__flatcc_fb_gen_c_json_parser@@Base+0x31f8>
   1fbe0:	add	r7, r7, #16
   1fbe4:	add	r0, r6, #1
   1fbe8:	cmp	r6, r5
   1fbec:	mov	r6, r0
   1fbf0:	popge	{r4, r5, r6, r7, fp, pc}
   1fbf4:	mov	r0, r7
   1fbf8:	mov	r1, r4
   1fbfc:	bl	1f550 <__flatcc_fb_gen_c_json_parser@@Base+0x2b54>
   1fc00:	cmp	r0, #0
   1fc04:	ble	1fbe0 <__flatcc_fb_gen_c_json_parser@@Base+0x31e4>
   1fc08:	mov	r0, r6
   1fc0c:	pop	{r4, r5, r6, r7, fp, pc}
   1fc10:	ldr	r2, [r0, #4]
   1fc14:	sub	r0, r2, r1
   1fc18:	add	r1, r1, #8
   1fc1c:	cmp	r1, r2
   1fc20:	movwlt	r0, #0
   1fc24:	bx	lr
   1fc28:	push	{r4, r5, r6, r7, fp, lr}
   1fc2c:	add	fp, sp, #16
   1fc30:	mov	r5, r3
   1fc34:	mov	r6, r2
   1fc38:	mov	r7, r1
   1fc3c:	mov	r4, r0
   1fc40:	ldr	r2, [fp, #8]
   1fc44:	movw	r1, #36046	; 0x8cce
   1fc48:	movt	r1, #4
   1fc4c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1fc50:	movw	r1, #36113	; 0x8d11
   1fc54:	movt	r1, #4
   1fc58:	mov	r0, r4
   1fc5c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1fc60:	ldr	r0, [r4, #220]	; 0xdc
   1fc64:	add	r0, r0, #1
   1fc68:	str	r0, [r4, #220]	; 0xdc
   1fc6c:	mov	r0, r4
   1fc70:	mov	r1, r7
   1fc74:	mov	r2, r6
   1fc78:	mov	r3, r5
   1fc7c:	bl	1fce0 <__flatcc_fb_gen_c_json_parser@@Base+0x32e4>
   1fc80:	ldr	r0, [r4, #220]	; 0xdc
   1fc84:	cmp	r0, #0
   1fc88:	beq	1fcb4 <__flatcc_fb_gen_c_json_parser@@Base+0x32b8>
   1fc8c:	sub	r0, r0, #1
   1fc90:	str	r0, [r4, #220]	; 0xdc
   1fc94:	movw	r1, #33840	; 0x8430
   1fc98:	movt	r1, #4
   1fc9c:	mov	r0, r4
   1fca0:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1fca4:	ldr	r0, [r4, #220]	; 0xdc
   1fca8:	add	r0, r0, #1
   1fcac:	str	r0, [r4, #220]	; 0xdc
   1fcb0:	pop	{r4, r5, r6, r7, fp, pc}
   1fcb4:	movw	r0, #32000	; 0x7d00
   1fcb8:	movt	r0, #4
   1fcbc:	movw	r1, #32012	; 0x7d0c
   1fcc0:	movt	r1, #4
   1fcc4:	movw	r3, #36132	; 0x8d24
   1fcc8:	movt	r3, #4
   1fccc:	movw	r2, #675	; 0x2a3
   1fcd0:	bl	14950 <__assert_fail@plt>
   1fcd4:	movw	r1, #35866	; 0x8c1a
   1fcd8:	movt	r1, #4
   1fcdc:	b	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1fce0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fce4:	add	fp, sp, #28
   1fce8:	sub	sp, sp, #540	; 0x21c
   1fcec:	mov	r9, r3
   1fcf0:	mov	r5, r2
   1fcf4:	mov	r6, r1
   1fcf8:	mov	r4, r0
   1fcfc:	sub	r0, fp, #256	; 0x100
   1fd00:	mov	r1, #0
   1fd04:	str	r1, [sp, #104]	; 0x68
   1fd08:	mov	r1, #0
   1fd0c:	mov	r2, #220	; 0xdc
   1fd10:	bl	148a8 <memset@plt>
   1fd14:	ldr	r0, [r6, #12]
   1fd18:	add	r1, sp, #108	; 0x6c
   1fd1c:	bl	15ab8 <__flatcc_fb_copy_scope@@Base>
   1fd20:	str	r5, [sp, #88]	; 0x58
   1fd24:	ldrh	r0, [r5, #24]
   1fd28:	ldrh	r1, [r6, #8]
   1fd2c:	str	r1, [sp, #92]	; 0x5c
   1fd30:	cmp	r0, #15
   1fd34:	mov	r5, #0
   1fd38:	bhi	1fd50 <__flatcc_fb_gen_c_json_parser@@Base+0x3354>
   1fd3c:	mov	r1, #1
   1fd40:	movw	r2, #33408	; 0x8280
   1fd44:	tst	r2, r1, lsl r0
   1fd48:	mov	r5, #0
   1fd4c:	movne	r5, #1
   1fd50:	sub	r6, r0, #7
   1fd54:	cmp	r6, #8
   1fd58:	bhi	20828 <__flatcc_fb_gen_c_json_parser@@Base+0x3e2c>
   1fd5c:	add	r0, pc, #68	; 0x44
   1fd60:	mov	lr, #0
   1fd64:	mov	ip, #0
   1fd68:	mov	sl, #0
   1fd6c:	mov	r2, #0
   1fd70:	str	r2, [sp, #44]	; 0x2c
   1fd74:	mov	r2, #0
   1fd78:	str	r2, [sp, #40]	; 0x28
   1fd7c:	mov	r8, #0
   1fd80:	mov	r2, #0
   1fd84:	str	r2, [sp, #80]	; 0x50
   1fd88:	mov	r2, #0
   1fd8c:	str	r2, [sp, #96]	; 0x60
   1fd90:	mov	r3, #0
   1fd94:	mov	r2, #0
   1fd98:	mov	r7, #0
   1fd9c:	mov	r1, #0
   1fda0:	str	r1, [sp, #48]	; 0x30
   1fda4:	ldr	pc, [r0, r6, lsl #2]
   1fda8:	muleq	r1, r4, lr
   1fdac:			; <UNDEFINED> instruction: 0x0001feb0
   1fdb0:	andeq	pc, r1, ip, asr #27
   1fdb4:	andeq	pc, r1, ip, asr #27
   1fdb8:	strdeq	pc, [r1], -r0
   1fdbc:	strdeq	pc, [r1], -r0
   1fdc0:	strdeq	pc, [r1], -r0
   1fdc4:	strdeq	pc, [r1], -r8
   1fdc8:	strdeq	pc, [r1], -r8
   1fdcc:	mov	r0, #1
   1fdd0:	str	r0, [sp, #44]	; 0x2c
   1fdd4:	mov	r0, #0
   1fdd8:	str	r0, [sp, #40]	; 0x28
   1fddc:	mov	r8, #0
   1fde0:	mov	r0, #0
   1fde4:	str	r0, [sp, #80]	; 0x50
   1fde8:	mov	r0, #0
   1fdec:	str	r0, [sp, #96]	; 0x60
   1fdf0:	mov	r3, #0
   1fdf4:	b	1fe80 <__flatcc_fb_gen_c_json_parser@@Base+0x3484>
   1fdf8:	ldr	r6, [sp, #88]	; 0x58
   1fdfc:	ldr	r0, [r6, #16]
   1fe00:	sub	r1, fp, #256	; 0x100
   1fe04:	bl	1d0dc <__flatcc_fb_gen_c_json_parser@@Base+0x6e0>
   1fe08:	ldr	r0, [r6, #16]
   1fe0c:	ldrh	r1, [r0, #8]
   1fe10:	eor	r2, r1, #4
   1fe14:	orr	r2, r9, r2
   1fe18:	clz	r2, r2
   1fe1c:	lsr	r3, r2, #5
   1fe20:	clz	r2, r1
   1fe24:	lsr	r2, r2, #5
   1fe28:	str	r2, [sp, #80]	; 0x50
   1fe2c:	sub	r2, r1, #1
   1fe30:	clz	r2, r2
   1fe34:	lsr	r2, r2, #5
   1fe38:	str	r2, [sp, #96]	; 0x60
   1fe3c:	cmp	r1, #3
   1fe40:	bne	1fe6c <__flatcc_fb_gen_c_json_parser@@Base+0x3470>
   1fe44:	ldr	r0, [r0, #40]	; 0x28
   1fe48:	str	r0, [sp, #48]	; 0x30
   1fe4c:	mov	r0, #1
   1fe50:	str	r0, [sp, #40]	; 0x28
   1fe54:	mov	r0, #0
   1fe58:	str	r0, [sp, #44]	; 0x2c
   1fe5c:	mov	r8, #1
   1fe60:	mov	r2, #0
   1fe64:	mov	r7, #0
   1fe68:	b	1fef0 <__flatcc_fb_gen_c_json_parser@@Base+0x34f4>
   1fe6c:	mov	r0, #0
   1fe70:	str	r0, [sp, #44]	; 0x2c
   1fe74:	mov	r0, #0
   1fe78:	str	r0, [sp, #40]	; 0x28
   1fe7c:	mov	r8, #0
   1fe80:	mov	r2, #0
   1fe84:	mov	r7, #0
   1fe88:	mov	r0, #0
   1fe8c:	str	r0, [sp, #48]	; 0x30
   1fe90:	b	1fef0 <__flatcc_fb_gen_c_json_parser@@Base+0x34f4>
   1fe94:	ldr	r2, [sp, #88]	; 0x58
   1fe98:	ldrh	r1, [r2, #72]	; 0x48
   1fe9c:	and	ip, r1, #2048	; 0x800
   1fea0:	and	lr, r1, #1024	; 0x400
   1fea4:	ldr	sl, [r2, #104]	; 0x68
   1fea8:	cmp	sl, #0
   1feac:	movwne	sl, #1
   1feb0:	ldr	r2, [sp, #88]	; 0x58
   1feb4:	ldr	r0, [r2, #16]
   1feb8:	str	r0, [sp, #48]	; 0x30
   1febc:	mov	r8, #1
   1fec0:	mov	r0, #0
   1fec4:	str	r0, [sp, #44]	; 0x2c
   1fec8:	mov	r0, #0
   1fecc:	str	r0, [sp, #40]	; 0x28
   1fed0:	mov	r0, #0
   1fed4:	str	r0, [sp, #80]	; 0x50
   1fed8:	mov	r0, #0
   1fedc:	str	r0, [sp, #96]	; 0x60
   1fee0:	mov	r3, #0
   1fee4:	str	lr, [sp, #104]	; 0x68
   1fee8:	mov	r2, ip
   1feec:	mov	r7, sl
   1fef0:	ldr	r6, [sp, #104]	; 0x68
   1fef4:	orrs	r0, r2, r6
   1fef8:	str	r0, [sp, #64]	; 0x40
   1fefc:	beq	1ff70 <__flatcc_fb_gen_c_json_parser@@Base+0x3574>
   1ff00:	cmp	r5, #0
   1ff04:	beq	1ff20 <__flatcc_fb_gen_c_json_parser@@Base+0x3524>
   1ff08:	mov	r5, #0
   1ff0c:	ldr	r0, [sp, #48]	; 0x30
   1ff10:	cmp	r0, #4
   1ff14:	mov	sl, #0
   1ff18:	mov	r7, #0
   1ff1c:	beq	1ff74 <__flatcc_fb_gen_c_json_parser@@Base+0x3578>
   1ff20:	movw	r0, #4264	; 0x10a8
   1ff24:	movt	r0, #6
   1ff28:	ldr	r0, [r0]
   1ff2c:	movw	r1, #36212	; 0x8d74
   1ff30:	movt	r1, #4
   1ff34:	str	r1, [sp]
   1ff38:	movw	r1, #21007	; 0x520f
   1ff3c:	movt	r1, #3
   1ff40:	movw	r4, #32012	; 0x7d0c
   1ff44:	movt	r4, #4
   1ff48:	mov	r2, r4
   1ff4c:	movw	r3, #466	; 0x1d2
   1ff50:	bl	14890 <fprintf@plt>
   1ff54:	movw	r0, #24925	; 0x615d
   1ff58:	movt	r0, #4
   1ff5c:	movw	r3, #36271	; 0x8daf
   1ff60:	movt	r3, #4
   1ff64:	mov	r1, r4
   1ff68:	movw	r2, #466	; 0x1d2
   1ff6c:	bl	14950 <__assert_fail@plt>
   1ff70:	mov	sl, r8
   1ff74:	cmp	r5, #0
   1ff78:	mov	r0, r5
   1ff7c:	movwne	r0, #1
   1ff80:	cmp	r9, #0
   1ff84:	mov	r1, r9
   1ff88:	movwne	r1, #1
   1ff8c:	ands	r0, r1, r0
   1ff90:	str	r0, [sp, #16]
   1ff94:	movwne	r5, #0
   1ff98:	cmp	r5, #0
   1ff9c:	mov	r0, r5
   1ffa0:	movwne	r0, #1
   1ffa4:	cmp	r3, #0
   1ffa8:	str	r3, [sp, #28]
   1ffac:	mov	r1, r3
   1ffb0:	movwne	r1, #1
   1ffb4:	ands	r0, r1, r0
   1ffb8:	str	r0, [sp, #24]
   1ffbc:	movwne	r5, #0
   1ffc0:	str	r5, [sp, #100]	; 0x64
   1ffc4:	cmp	r9, #0
   1ffc8:	movwne	sl, #0
   1ffcc:	cmp	r7, #0
   1ffd0:	beq	1fff0 <__flatcc_fb_gen_c_json_parser@@Base+0x35f4>
   1ffd4:	movw	r1, #36349	; 0x8dfd
   1ffd8:	movt	r1, #4
   1ffdc:	mov	r0, r4
   1ffe0:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   1ffe4:	ldr	r0, [r4, #220]	; 0xdc
   1ffe8:	add	r0, r0, #1
   1ffec:	str	r0, [r4, #220]	; 0xdc
   1fff0:	ldr	r0, [sp, #88]	; 0x58
   1fff4:	add	r1, r0, #96	; 0x60
   1fff8:	str	r1, [sp, #56]	; 0x38
   1fffc:	add	r1, r0, #88	; 0x58
   20000:	str	r1, [sp, #68]	; 0x44
   20004:	add	r1, r0, #48	; 0x30
   20008:	str	r1, [sp, #36]	; 0x24
   2000c:	add	r0, r0, #80	; 0x50
   20010:	str	r0, [sp, #52]	; 0x34
   20014:	clz	r0, r6
   20018:	lsr	r0, r0, #5
   2001c:	str	r0, [sp, #32]
   20020:	str	r9, [sp, #20]
   20024:	clz	r0, r9
   20028:	lsr	r0, r0, #5
   2002c:	str	r0, [sp, #76]	; 0x4c
   20030:	movw	r0, #36208	; 0x8d70
   20034:	movt	r0, #4
   20038:	str	r0, [sp, #84]	; 0x54
   2003c:	str	r0, [sp, #60]	; 0x3c
   20040:	b	201c4 <__flatcc_fb_gen_c_json_parser@@Base+0x37c8>
   20044:	ldr	r0, [sp, #80]	; 0x50
   20048:	cmp	r0, #0
   2004c:	beq	20068 <__flatcc_fb_gen_c_json_parser@@Base+0x366c>
   20050:	mov	r0, r4
   20054:	movw	r1, #37810	; 0x93b2
   20058:	movt	r1, #4
   2005c:	sub	r2, fp, #256	; 0x100
   20060:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   20064:	b	206f4 <__flatcc_fb_gen_c_json_parser@@Base+0x3cf8>
   20068:	ldr	r0, [sp, #28]
   2006c:	cmp	r0, #0
   20070:	beq	200ac <__flatcc_fb_gen_c_json_parser@@Base+0x36b0>
   20074:	ldr	r0, [sp, #56]	; 0x38
   20078:	ldrd	r0, [r0]
   2007c:	ldr	r2, [sp, #88]	; 0x58
   20080:	ldr	r2, [r2, #112]	; 0x70
   20084:	ldr	r3, [sp, #24]
   20088:	cmp	r3, #0
   2008c:	beq	20178 <__flatcc_fb_gen_c_json_parser@@Base+0x377c>
   20090:	stm	sp, {r0, r1}
   20094:	sub	r0, fp, #256	; 0x100
   20098:	str	r0, [sp, #8]
   2009c:	mov	r0, r4
   200a0:	movw	r1, #37858	; 0x93e2
   200a4:	movt	r1, #4
   200a8:	b	201b8 <__flatcc_fb_gen_c_json_parser@@Base+0x37bc>
   200ac:	ldr	r0, [sp, #20]
   200b0:	cmp	r0, #0
   200b4:	beq	20194 <__flatcc_fb_gen_c_json_parser@@Base+0x3798>
   200b8:	mov	r0, r4
   200bc:	movw	r1, #36706	; 0x8f62
   200c0:	movt	r1, #4
   200c4:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   200c8:	ldr	r0, [r4, #220]	; 0xdc
   200cc:	add	r0, r0, #2
   200d0:	str	r0, [r4, #220]	; 0xdc
   200d4:	mov	r0, r4
   200d8:	movw	r1, #36774	; 0x8fa6
   200dc:	movt	r1, #4
   200e0:	sub	r2, fp, #256	; 0x100
   200e4:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   200e8:	ldr	r0, [r4, #208]	; 0xd0
   200ec:	ldr	r2, [r0, #160]	; 0xa0
   200f0:	mov	r0, r4
   200f4:	movw	r1, #36794	; 0x8fba
   200f8:	movt	r1, #4
   200fc:	add	r3, sp, #108	; 0x6c
   20100:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   20104:	ldr	r0, [r4, #208]	; 0xd0
   20108:	ldr	r2, [r0, #160]	; 0xa0
   2010c:	mov	r0, r4
   20110:	movw	r1, #36823	; 0x8fd7
   20114:	movt	r1, #4
   20118:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   2011c:	ldr	r0, [r4, #220]	; 0xdc
   20120:	cmp	r0, #0
   20124:	beq	20920 <__flatcc_fb_gen_c_json_parser@@Base+0x3f24>
   20128:	subs	r1, r0, #1
   2012c:	str	r1, [r4, #220]	; 0xdc
   20130:	beq	20920 <__flatcc_fb_gen_c_json_parser@@Base+0x3f24>
   20134:	sub	r0, r0, #2
   20138:	str	r0, [r4, #220]	; 0xdc
   2013c:	ldr	r0, [sp, #56]	; 0x38
   20140:	ldrd	r0, [r0]
   20144:	ldr	r2, [sp, #88]	; 0x58
   20148:	ldr	r2, [r2, #112]	; 0x70
   2014c:	ldr	r3, [sp, #16]
   20150:	cmp	r3, #0
   20154:	beq	201a0 <__flatcc_fb_gen_c_json_parser@@Base+0x37a4>
   20158:	stm	sp, {r0, r1}
   2015c:	sub	r0, fp, #256	; 0x100
   20160:	str	r0, [sp, #8]
   20164:	str	r0, [sp, #12]
   20168:	mov	r0, r4
   2016c:	movw	r1, #38045	; 0x949d
   20170:	movt	r1, #4
   20174:	b	201b8 <__flatcc_fb_gen_c_json_parser@@Base+0x37bc>
   20178:	stm	sp, {r0, r1}
   2017c:	sub	r0, fp, #256	; 0x100
   20180:	str	r0, [sp, #8]
   20184:	mov	r0, r4
   20188:	movw	r1, #37955	; 0x9443
   2018c:	movt	r1, #4
   20190:	b	201b8 <__flatcc_fb_gen_c_json_parser@@Base+0x37bc>
   20194:	cmp	r8, #0
   20198:	bne	206fc <__flatcc_fb_gen_c_json_parser@@Base+0x3d00>
   2019c:	b	20940 <__flatcc_fb_gen_c_json_parser@@Base+0x3f44>
   201a0:	stm	sp, {r0, r1}
   201a4:	sub	r0, fp, #256	; 0x100
   201a8:	str	r0, [sp, #8]
   201ac:	mov	r0, r4
   201b0:	movw	r1, #38192	; 0x9530
   201b4:	movt	r1, #4
   201b8:	mov	r3, #0
   201bc:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   201c0:	b	206f4 <__flatcc_fb_gen_c_json_parser@@Base+0x3cf8>
   201c4:	cmp	r7, #2
   201c8:	str	r7, [sp, #104]	; 0x68
   201cc:	bne	2026c <__flatcc_fb_gen_c_json_parser@@Base+0x3870>
   201d0:	ldr	r0, [r4, #220]	; 0xdc
   201d4:	cmp	r0, #0
   201d8:	beq	20830 <__flatcc_fb_gen_c_json_parser@@Base+0x3e34>
   201dc:	sub	r0, r0, #1
   201e0:	str	r0, [r4, #220]	; 0xdc
   201e4:	mov	r0, r4
   201e8:	movw	r1, #36401	; 0x8e31
   201ec:	movt	r1, #4
   201f0:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   201f4:	ldr	r0, [r4, #220]	; 0xdc
   201f8:	add	r0, r0, #1
   201fc:	str	r0, [r4, #220]	; 0xdc
   20200:	ldr	r5, [sp, #88]	; 0x58
   20204:	ldr	r0, [r5, #104]	; 0x68
   20208:	sub	r1, fp, #256	; 0x100
   2020c:	bl	1d0dc <__flatcc_fb_gen_c_json_parser@@Base+0x6e0>
   20210:	ldr	r0, [r5, #104]	; 0x68
   20214:	ldrh	r5, [r0, #8]
   20218:	mov	r0, r4
   2021c:	movw	r1, #36423	; 0x8e47
   20220:	movt	r1, #4
   20224:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   20228:	cmp	r5, #0
   2022c:	ldr	r0, [sp, #96]	; 0x60
   20230:	movne	r0, #1
   20234:	str	r0, [sp, #96]	; 0x60
   20238:	clz	r0, r0
   2023c:	lsr	r9, r0, #5
   20240:	ldr	r0, [sp, #76]	; 0x4c
   20244:	and	r5, r9, r0
   20248:	ldr	r0, [sp, #80]	; 0x50
   2024c:	movweq	r0, #1
   20250:	str	r0, [sp, #80]	; 0x50
   20254:	mov	r8, #0
   20258:	mov	r0, #0
   2025c:	str	r0, [sp, #100]	; 0x64
   20260:	mov	sl, #0
   20264:	mov	r7, #0
   20268:	b	2047c <__flatcc_fb_gen_c_json_parser@@Base+0x3a80>
   2026c:	ldr	r1, [sp, #96]	; 0x60
   20270:	orr	r0, r1, sl
   20274:	clz	r0, r0
   20278:	lsr	r5, r0, #5
   2027c:	clz	r9, r1
   20280:	str	sl, [sp, #72]	; 0x48
   20284:	cmp	sl, #0
   20288:	beq	202b8 <__flatcc_fb_gen_c_json_parser@@Base+0x38bc>
   2028c:	ldr	r6, [sp, #48]	; 0x30
   20290:	mov	r0, r6
   20294:	bl	209b0 <__flatcc_fb_gen_c_json_parser@@Base+0x3fb4>
   20298:	mov	r8, r0
   2029c:	mov	sl, #1
   202a0:	cmp	r6, #5
   202a4:	str	r0, [sp, #84]	; 0x54
   202a8:	bne	202c0 <__flatcc_fb_gen_c_json_parser@@Base+0x38c4>
   202ac:	movw	r0, #47499	; 0xb98b
   202b0:	movt	r0, #3
   202b4:	b	202c8 <__flatcc_fb_gen_c_json_parser@@Base+0x38cc>
   202b8:	mov	sl, #0
   202bc:	b	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x38d0>
   202c0:	mov	r0, r6
   202c4:	bl	20a24 <__flatcc_fb_gen_c_json_parser@@Base+0x4028>
   202c8:	str	r0, [sp, #60]	; 0x3c
   202cc:	ldr	r0, [sp, #76]	; 0x4c
   202d0:	and	r5, r5, r0
   202d4:	lsr	r9, r9, #5
   202d8:	ldr	r0, [sp, #100]	; 0x64
   202dc:	cmp	r0, #0
   202e0:	beq	20300 <__flatcc_fb_gen_c_json_parser@@Base+0x3904>
   202e4:	cmp	r5, #0
   202e8:	beq	2031c <__flatcc_fb_gen_c_json_parser@@Base+0x3920>
   202ec:	mov	r0, r4
   202f0:	movw	r1, #36488	; 0x8e88
   202f4:	movt	r1, #4
   202f8:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   202fc:	b	20370 <__flatcc_fb_gen_c_json_parser@@Base+0x3974>
   20300:	mov	r8, #0
   20304:	cmp	sl, #0
   20308:	ldr	sl, [sp, #72]	; 0x48
   2030c:	bne	203b0 <__flatcc_fb_gen_c_json_parser@@Base+0x39b4>
   20310:	mov	r0, #0
   20314:	str	r0, [sp, #100]	; 0x64
   20318:	b	20264 <__flatcc_fb_gen_c_json_parser@@Base+0x3868>
   2031c:	ldr	r0, [sp, #68]	; 0x44
   20320:	ldr	r8, [r0]
   20324:	ldr	r7, [r0, #4]
   20328:	orrs	r3, r8, r7
   2032c:	mov	r2, r8
   20330:	movweq	r2, #1
   20334:	movne	r3, r7
   20338:	mvn	r0, #0
   2033c:	mov	r1, #0
   20340:	bl	33bc0 <fb_value_set_visit@@Base+0x6c0>
   20344:	ldr	r2, [sp, #88]	; 0x58
   20348:	ldrsh	r2, [r2, #74]	; 0x4a
   2034c:	str	r2, [sp]
   20350:	str	r0, [sp, #8]
   20354:	str	r1, [sp, #12]
   20358:	mov	r0, r4
   2035c:	movw	r1, #36551	; 0x8ec7
   20360:	movt	r1, #4
   20364:	mov	r2, r8
   20368:	mov	r3, r7
   2036c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   20370:	mov	r0, r4
   20374:	movw	r1, #36634	; 0x8f1a
   20378:	movt	r1, #4
   2037c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   20380:	mov	r0, r4
   20384:	movw	r1, #35831	; 0x8bf7
   20388:	movt	r1, #4
   2038c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   20390:	ldr	r0, [r4, #220]	; 0xdc
   20394:	add	r0, r0, #1
   20398:	str	r0, [r4, #220]	; 0xdc
   2039c:	mov	r7, #0
   203a0:	mov	r8, #1
   203a4:	cmp	sl, #0
   203a8:	ldr	sl, [sp, #72]	; 0x48
   203ac:	beq	20458 <__flatcc_fb_gen_c_json_parser@@Base+0x3a5c>
   203b0:	mov	r0, r4
   203b4:	movw	r1, #36694	; 0x8f56
   203b8:	movt	r1, #4
   203bc:	ldr	r2, [sp, #60]	; 0x3c
   203c0:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   203c4:	mov	r0, r4
   203c8:	movw	r1, #36706	; 0x8f62
   203cc:	movt	r1, #4
   203d0:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   203d4:	ldr	r0, [r4, #220]	; 0xdc
   203d8:	add	r0, r0, #2
   203dc:	str	r0, [r4, #220]	; 0xdc
   203e0:	ldr	r0, [sp, #40]	; 0x28
   203e4:	cmp	r0, #0
   203e8:	beq	20400 <__flatcc_fb_gen_c_json_parser@@Base+0x3a04>
   203ec:	mov	r0, r4
   203f0:	movw	r1, #36774	; 0x8fa6
   203f4:	movt	r1, #4
   203f8:	sub	r2, fp, #256	; 0x100
   203fc:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   20400:	ldr	r0, [r4, #208]	; 0xd0
   20404:	ldr	r2, [r0, #160]	; 0xa0
   20408:	mov	r0, r4
   2040c:	movw	r1, #36794	; 0x8fba
   20410:	movt	r1, #4
   20414:	add	r3, sp, #108	; 0x6c
   20418:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   2041c:	ldr	r0, [r4, #208]	; 0xd0
   20420:	ldr	r2, [r0, #160]	; 0xa0
   20424:	mov	r0, r4
   20428:	movw	r1, #36823	; 0x8fd7
   2042c:	movt	r1, #4
   20430:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   20434:	ldr	r0, [r4, #220]	; 0xdc
   20438:	cmp	r0, #0
   2043c:	beq	20850 <__flatcc_fb_gen_c_json_parser@@Base+0x3e54>
   20440:	subs	r1, r0, #1
   20444:	str	r1, [r4, #220]	; 0xdc
   20448:	beq	20850 <__flatcc_fb_gen_c_json_parser@@Base+0x3e54>
   2044c:	sub	r0, r0, #2
   20450:	str	r0, [r4, #220]	; 0xdc
   20454:	mov	r7, #1
   20458:	ldr	r0, [sp, #100]	; 0x64
   2045c:	clz	r0, r0
   20460:	lsr	r0, r0, #5
   20464:	orrs	r0, r5, r0
   20468:	bne	2047c <__flatcc_fb_gen_c_json_parser@@Base+0x3a80>
   2046c:	mov	r0, r4
   20470:	movw	r1, #36856	; 0x8ff8
   20474:	movt	r1, #4
   20478:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   2047c:	ldr	r0, [sp, #92]	; 0x5c
   20480:	cmp	r0, #1
   20484:	bne	204a0 <__flatcc_fb_gen_c_json_parser@@Base+0x3aa4>
   20488:	ldr	r0, [sp, #52]	; 0x34
   2048c:	ldrd	r2, [r0]
   20490:	mov	r0, r4
   20494:	movw	r1, #36926	; 0x903e
   20498:	movt	r1, #4
   2049c:	b	204d0 <__flatcc_fb_gen_c_json_parser@@Base+0x3ad4>
   204a0:	orrs	r0, r8, r9
   204a4:	bne	204d4 <__flatcc_fb_gen_c_json_parser@@Base+0x3ad8>
   204a8:	ldr	r0, [sp, #56]	; 0x38
   204ac:	ldrd	r2, [r0]
   204b0:	ldr	r0, [sp, #68]	; 0x44
   204b4:	ldrd	r0, [r0]
   204b8:	ldr	r6, [sp, #88]	; 0x58
   204bc:	ldrh	r6, [r6, #74]	; 0x4a
   204c0:	stm	sp, {r0, r1, r6}
   204c4:	mov	r0, r4
   204c8:	movw	r1, #36971	; 0x906b
   204cc:	movt	r1, #4
   204d0:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   204d4:	cmp	r7, #0
   204d8:	beq	205c0 <__flatcc_fb_gen_c_json_parser@@Base+0x3bc4>
   204dc:	mov	r6, r5
   204e0:	mov	r0, r4
   204e4:	movw	r1, #37050	; 0x90ba
   204e8:	movt	r1, #4
   204ec:	ldr	r5, [sp, #84]	; 0x54
   204f0:	mov	r2, r5
   204f4:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   204f8:	mov	r0, r4
   204fc:	movw	r1, #37109	; 0x90f5
   20500:	movt	r1, #4
   20504:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   20508:	ldr	r0, [r4, #220]	; 0xdc
   2050c:	add	r0, r0, #1
   20510:	str	r0, [r4, #220]	; 0xdc
   20514:	mov	r0, r4
   20518:	movw	r1, #37128	; 0x9108
   2051c:	movt	r1, #4
   20520:	mov	r2, r5
   20524:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   20528:	mov	r0, r4
   2052c:	movw	r1, #37214	; 0x915e
   20530:	movt	r1, #4
   20534:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   20538:	ldr	r0, [r4, #220]	; 0xdc
   2053c:	cmp	r0, #0
   20540:	beq	20870 <__flatcc_fb_gen_c_json_parser@@Base+0x3e74>
   20544:	sub	r0, r0, #1
   20548:	str	r0, [r4, #220]	; 0xdc
   2054c:	mov	r0, r4
   20550:	movw	r1, #30345	; 0x7689
   20554:	movt	r1, #3
   20558:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   2055c:	ldr	r0, [sp, #92]	; 0x5c
   20560:	sub	r0, r0, #1
   20564:	clz	r0, r0
   20568:	lsr	r0, r0, #5
   2056c:	orr	r5, r0, r8
   20570:	ldr	r0, [sp, #64]	; 0x40
   20574:	cmp	r0, #0
   20578:	ldr	r9, [sp, #104]	; 0x68
   2057c:	cmpeq	r5, #0
   20580:	bne	2069c <__flatcc_fb_gen_c_json_parser@@Base+0x3ca0>
   20584:	ldr	r0, [sp, #88]	; 0x58
   20588:	ldrh	r0, [r0, #56]	; 0x38
   2058c:	sub	r1, r0, #5
   20590:	cmp	r1, #2
   20594:	bcc	20630 <__flatcc_fb_gen_c_json_parser@@Base+0x3c34>
   20598:	cmp	r0, #3
   2059c:	beq	20648 <__flatcc_fb_gen_c_json_parser@@Base+0x3c4c>
   205a0:	cmp	r0, #4
   205a4:	bne	208d0 <__flatcc_fb_gen_c_json_parser@@Base+0x3ed4>
   205a8:	ldr	r0, [sp, #36]	; 0x24
   205ac:	ldrd	r2, [r0]
   205b0:	mov	r0, r4
   205b4:	movw	r1, #37326	; 0x91ce
   205b8:	movt	r1, #4
   205bc:	b	20660 <__flatcc_fb_gen_c_json_parser@@Base+0x3c64>
   205c0:	cmp	r9, #0
   205c4:	beq	205e8 <__flatcc_fb_gen_c_json_parser@@Base+0x3bec>
   205c8:	ldr	r0, [sp, #44]	; 0x2c
   205cc:	cmp	r0, #0
   205d0:	ldr	r9, [sp, #104]	; 0x68
   205d4:	beq	2060c <__flatcc_fb_gen_c_json_parser@@Base+0x3c10>
   205d8:	mov	r0, r4
   205dc:	movw	r1, #37673	; 0x9329
   205e0:	movt	r1, #4
   205e4:	b	206f0 <__flatcc_fb_gen_c_json_parser@@Base+0x3cf4>
   205e8:	mov	r0, r4
   205ec:	movw	r1, #37617	; 0x92f1
   205f0:	movt	r1, #4
   205f4:	sub	r2, fp, #256	; 0x100
   205f8:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   205fc:	cmp	r8, #0
   20600:	ldr	r9, [sp, #104]	; 0x68
   20604:	bne	206fc <__flatcc_fb_gen_c_json_parser@@Base+0x3d00>
   20608:	b	2077c <__flatcc_fb_gen_c_json_parser@@Base+0x3d80>
   2060c:	ldr	r0, [sp, #64]	; 0x40
   20610:	cmp	r0, #0
   20614:	beq	20044 <__flatcc_fb_gen_c_json_parser@@Base+0x3648>
   20618:	mov	r0, r4
   2061c:	movw	r1, #37733	; 0x9365
   20620:	movt	r1, #4
   20624:	ldr	r2, [sp, #32]
   20628:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   2062c:	b	206f4 <__flatcc_fb_gen_c_json_parser@@Base+0x3cf8>
   20630:	ldr	r0, [sp, #36]	; 0x24
   20634:	ldrd	r2, [r0]
   20638:	mov	r0, r4
   2063c:	movw	r1, #37258	; 0x918a
   20640:	movt	r1, #4
   20644:	b	20660 <__flatcc_fb_gen_c_json_parser@@Base+0x3c64>
   20648:	ldr	r0, [sp, #36]	; 0x24
   2064c:	vldr	d16, [r0]
   20650:	vmov	r2, r3, d16
   20654:	mov	r0, r4
   20658:	movw	r1, #37394	; 0x9212
   2065c:	movt	r1, #4
   20660:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   20664:	ldr	r0, [r4, #220]	; 0xdc
   20668:	add	r0, r0, #1
   2066c:	str	r0, [r4, #220]	; 0xdc
   20670:	ldr	r0, [sp, #56]	; 0x38
   20674:	ldrd	r2, [r0]
   20678:	ldr	r0, [sp, #68]	; 0x44
   2067c:	ldrd	r0, [r0]
   20680:	ldr	r7, [sp, #88]	; 0x58
   20684:	ldrsh	r7, [r7, #74]	; 0x4a
   20688:	stm	sp, {r0, r1, r7}
   2068c:	mov	r0, r4
   20690:	movw	r1, #37508	; 0x9284
   20694:	movt	r1, #4
   20698:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   2069c:	mov	r0, r4
   206a0:	movw	r1, #37588	; 0x92d4
   206a4:	movt	r1, #4
   206a8:	mov	r2, r4
   206ac:	ldr	r3, [sp, #84]	; 0x54
   206b0:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   206b4:	cmp	r5, #0
   206b8:	beq	206cc <__flatcc_fb_gen_c_json_parser@@Base+0x3cd0>
   206bc:	cmp	r8, #0
   206c0:	mov	r5, r6
   206c4:	bne	206fc <__flatcc_fb_gen_c_json_parser@@Base+0x3d00>
   206c8:	b	2077c <__flatcc_fb_gen_c_json_parser@@Base+0x3d80>
   206cc:	ldr	r0, [r4, #220]	; 0xdc
   206d0:	cmp	r0, #0
   206d4:	beq	208b0 <__flatcc_fb_gen_c_json_parser@@Base+0x3eb4>
   206d8:	mov	r5, r6
   206dc:	sub	r0, r0, #1
   206e0:	str	r0, [r4, #220]	; 0xdc
   206e4:	mov	r0, r4
   206e8:	movw	r1, #30345	; 0x7689
   206ec:	movt	r1, #3
   206f0:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   206f4:	cmp	r8, #0
   206f8:	beq	2077c <__flatcc_fb_gen_c_json_parser@@Base+0x3d80>
   206fc:	cmp	r5, #0
   20700:	beq	20724 <__flatcc_fb_gen_c_json_parser@@Base+0x3d28>
   20704:	mov	r0, r4
   20708:	movw	r1, #38354	; 0x95d2
   2070c:	movt	r1, #4
   20710:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   20714:	mov	r0, r4
   20718:	movw	r1, #38439	; 0x9627
   2071c:	movt	r1, #4
   20720:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   20724:	mov	r0, r4
   20728:	movw	r1, #38452	; 0x9634
   2072c:	movt	r1, #4
   20730:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   20734:	ldr	r0, [r4, #220]	; 0xdc
   20738:	cmp	r0, #0
   2073c:	beq	20890 <__flatcc_fb_gen_c_json_parser@@Base+0x3e94>
   20740:	sub	r0, r0, #1
   20744:	str	r0, [r4, #220]	; 0xdc
   20748:	mov	r0, r4
   2074c:	movw	r1, #30345	; 0x7689
   20750:	movt	r1, #3
   20754:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   20758:	mov	r0, r4
   2075c:	cmp	r5, #0
   20760:	beq	20770 <__flatcc_fb_gen_c_json_parser@@Base+0x3d74>
   20764:	movw	r1, #38510	; 0x966e
   20768:	movt	r1, #4
   2076c:	b	20778 <__flatcc_fb_gen_c_json_parser@@Base+0x3d7c>
   20770:	movw	r1, #38560	; 0x96a0
   20774:	movt	r1, #4
   20778:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   2077c:	mov	r7, #2
   20780:	cmp	r9, #1
   20784:	beq	201c4 <__flatcc_fb_gen_c_json_parser@@Base+0x37c8>
   20788:	cmp	r9, #2
   2078c:	bne	207d4 <__flatcc_fb_gen_c_json_parser@@Base+0x3dd8>
   20790:	movw	r1, #38603	; 0x96cb
   20794:	movt	r1, #4
   20798:	mov	r0, r4
   2079c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   207a0:	movw	r1, #38626	; 0x96e2
   207a4:	movt	r1, #4
   207a8:	mov	r0, r4
   207ac:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   207b0:	ldr	r0, [r4, #220]	; 0xdc
   207b4:	cmp	r0, #0
   207b8:	beq	20990 <__flatcc_fb_gen_c_json_parser@@Base+0x3f94>
   207bc:	sub	r0, r0, #1
   207c0:	str	r0, [r4, #220]	; 0xdc
   207c4:	movw	r1, #38674	; 0x9712
   207c8:	movt	r1, #4
   207cc:	mov	r0, r4
   207d0:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   207d4:	ldr	r0, [sp, #44]	; 0x2c
   207d8:	ldr	r1, [sp, #64]	; 0x40
   207dc:	orr	r0, r1, r0
   207e0:	orr	r0, r0, r9
   207e4:	ldr	r1, [sp, #100]	; 0x64
   207e8:	orr	r0, r0, r1
   207ec:	ldr	r1, [sp, #80]	; 0x50
   207f0:	orrs	r0, r0, r1
   207f4:	beq	20820 <__flatcc_fb_gen_c_json_parser@@Base+0x3e24>
   207f8:	ldr	r0, [sp, #88]	; 0x58
   207fc:	ldrd	r2, [r0, #96]	; 0x60
   20800:	movw	r1, #38693	; 0x9725
   20804:	movt	r1, #4
   20808:	mov	r0, r4
   2080c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   20810:	movw	r1, #38439	; 0x9627
   20814:	movt	r1, #4
   20818:	mov	r0, r4
   2081c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   20820:	sub	sp, fp, #28
   20824:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20828:	mov	r0, #0
   2082c:	b	1fdd0 <__flatcc_fb_gen_c_json_parser@@Base+0x33d4>
   20830:	movw	r0, #32000	; 0x7d00
   20834:	movt	r0, #4
   20838:	movw	r1, #32012	; 0x7d0c
   2083c:	movt	r1, #4
   20840:	movw	r3, #36271	; 0x8daf
   20844:	movt	r3, #4
   20848:	movw	r2, #490	; 0x1ea
   2084c:	bl	14950 <__assert_fail@plt>
   20850:	movw	r0, #32000	; 0x7d00
   20854:	movt	r0, #4
   20858:	movw	r1, #32012	; 0x7d0c
   2085c:	movt	r1, #4
   20860:	movw	r3, #36271	; 0x8daf
   20864:	movt	r3, #4
   20868:	movw	r2, #539	; 0x21b
   2086c:	bl	14950 <__assert_fail@plt>
   20870:	movw	r0, #32000	; 0x7d00
   20874:	movt	r0, #4
   20878:	movw	r1, #32012	; 0x7d0c
   2087c:	movt	r1, #4
   20880:	movw	r3, #36271	; 0x8daf
   20884:	movt	r3, #4
   20888:	movw	r2, #559	; 0x22f
   2088c:	bl	14950 <__assert_fail@plt>
   20890:	movw	r0, #32000	; 0x7d00
   20894:	movt	r0, #4
   20898:	movw	r1, #32012	; 0x7d0c
   2089c:	movt	r1, #4
   208a0:	movw	r3, #36271	; 0x8daf
   208a4:	movt	r3, #4
   208a8:	movw	r2, #647	; 0x287
   208ac:	bl	14950 <__assert_fail@plt>
   208b0:	movw	r0, #32000	; 0x7d00
   208b4:	movt	r0, #4
   208b8:	movw	r1, #32012	; 0x7d0c
   208bc:	movt	r1, #4
   208c0:	movw	r3, #36271	; 0x8daf
   208c4:	movt	r3, #4
   208c8:	movw	r2, #602	; 0x25a
   208cc:	bl	14950 <__assert_fail@plt>
   208d0:	movw	r0, #4264	; 0x10a8
   208d4:	movt	r0, #6
   208d8:	ldr	r0, [r0]
   208dc:	movw	r1, #37461	; 0x9255
   208e0:	movt	r1, #4
   208e4:	str	r1, [sp]
   208e8:	movw	r1, #21007	; 0x520f
   208ec:	movt	r1, #3
   208f0:	movw	r4, #32012	; 0x7d0c
   208f4:	movt	r4, #4
   208f8:	mov	r2, r4
   208fc:	movw	r3, #590	; 0x24e
   20900:	bl	14890 <fprintf@plt>
   20904:	movw	r0, #24925	; 0x615d
   20908:	movt	r0, #4
   2090c:	movw	r3, #36271	; 0x8daf
   20910:	movt	r3, #4
   20914:	mov	r1, r4
   20918:	movw	r2, #590	; 0x24e
   2091c:	bl	14950 <__assert_fail@plt>
   20920:	movw	r0, #32000	; 0x7d00
   20924:	movt	r0, #4
   20928:	movw	r1, #32012	; 0x7d0c
   2092c:	movt	r1, #4
   20930:	movw	r3, #36271	; 0x8daf
   20934:	movt	r3, #4
   20938:	movw	r2, #627	; 0x273
   2093c:	bl	14950 <__assert_fail@plt>
   20940:	movw	r0, #4264	; 0x10a8
   20944:	movt	r0, #6
   20948:	ldr	r0, [r0]
   2094c:	movw	r1, #38305	; 0x95a1
   20950:	movt	r1, #4
   20954:	str	r1, [sp]
   20958:	movw	r1, #21007	; 0x520f
   2095c:	movt	r1, #3
   20960:	movw	r4, #32012	; 0x7d0c
   20964:	movt	r4, #4
   20968:	mov	r2, r4
   2096c:	mov	r3, #636	; 0x27c
   20970:	bl	14890 <fprintf@plt>
   20974:	movw	r0, #24925	; 0x615d
   20978:	movt	r0, #4
   2097c:	movw	r3, #36271	; 0x8daf
   20980:	movt	r3, #4
   20984:	mov	r1, r4
   20988:	mov	r2, #636	; 0x27c
   2098c:	bl	14950 <__assert_fail@plt>
   20990:	movw	r0, #32000	; 0x7d00
   20994:	movt	r0, #4
   20998:	movw	r1, #32012	; 0x7d0c
   2099c:	movt	r1, #4
   209a0:	movw	r3, #36271	; 0x8daf
   209a4:	movt	r3, #4
   209a8:	movw	r2, #661	; 0x295
   209ac:	bl	14950 <__assert_fail@plt>
   209b0:	sub	r0, r0, #1
   209b4:	cmp	r0, #11
   209b8:	movwcc	r1, #41584	; 0xa270
   209bc:	movtcc	r1, #4
   209c0:	ldrcc	r0, [r1, r0, lsl #2]
   209c4:	bxcc	lr
   209c8:	push	{r4, sl, fp, lr}
   209cc:	add	fp, sp, #8
   209d0:	sub	sp, sp, #8
   209d4:	movw	r0, #4264	; 0x10a8
   209d8:	movt	r0, #6
   209dc:	ldr	r0, [r0]
   209e0:	movw	r1, #47600	; 0xb9f0
   209e4:	movt	r1, #3
   209e8:	str	r1, [sp]
   209ec:	movw	r1, #21007	; 0x520f
   209f0:	movt	r1, #3
   209f4:	movw	r4, #47527	; 0xb9a7
   209f8:	movt	r4, #3
   209fc:	mov	r2, r4
   20a00:	mov	r3, #96	; 0x60
   20a04:	bl	14890 <fprintf@plt>
   20a08:	movw	r0, #24925	; 0x615d
   20a0c:	movt	r0, #4
   20a10:	movw	r3, #49952	; 0xc320
   20a14:	movt	r3, #3
   20a18:	mov	r1, r4
   20a1c:	mov	r2, #96	; 0x60
   20a20:	bl	14950 <__assert_fail@plt>
   20a24:	sub	r0, r0, #1
   20a28:	cmp	r0, #11
   20a2c:	movwcc	r1, #41632	; 0xa2a0
   20a30:	movtcc	r1, #4
   20a34:	ldrcc	r0, [r1, r0, lsl #2]
   20a38:	bxcc	lr
   20a3c:	push	{r4, sl, fp, lr}
   20a40:	add	fp, sp, #8
   20a44:	sub	sp, sp, #8
   20a48:	movw	r0, #4264	; 0x10a8
   20a4c:	movt	r0, #6
   20a50:	ldr	r0, [r0]
   20a54:	movw	r1, #47600	; 0xb9f0
   20a58:	movt	r1, #3
   20a5c:	str	r1, [sp]
   20a60:	movw	r1, #21007	; 0x520f
   20a64:	movt	r1, #3
   20a68:	movw	r4, #47527	; 0xb9a7
   20a6c:	movt	r4, #3
   20a70:	mov	r2, r4
   20a74:	mov	r3, #141	; 0x8d
   20a78:	bl	14890 <fprintf@plt>
   20a7c:	movw	r0, #24925	; 0x615d
   20a80:	movt	r0, #4
   20a84:	movw	r3, #47655	; 0xba27
   20a88:	movt	r3, #3
   20a8c:	mov	r1, r4
   20a90:	mov	r2, #141	; 0x8d
   20a94:	bl	14950 <__assert_fail@plt>
   20a98:	push	{r4, r5, r6, sl, fp, lr}
   20a9c:	add	fp, sp, #16
   20aa0:	sub	sp, sp, #16
   20aa4:	mov	r6, r2
   20aa8:	mov	r4, #0
   20aac:	str	r4, [sp]
   20ab0:	stmib	sp, {r0, r4}
   20ab4:	add	r5, r1, #4
   20ab8:	movw	r1, #3032	; 0xbd8
   20abc:	movt	r1, #2
   20ac0:	mov	r2, sp
   20ac4:	mov	r0, r5
   20ac8:	bl	25f10 <fb_symbol_table_visit@@Base>
   20acc:	ldr	r0, [sp]
   20ad0:	str	r0, [r6]
   20ad4:	cmp	r0, #0
   20ad8:	beq	20b24 <__flatcc_fb_gen_c_json_parser@@Base+0x4128>
   20adc:	lsl	r0, r0, #4
   20ae0:	bl	14848 <malloc@plt>
   20ae4:	cmp	r0, #0
   20ae8:	beq	20b24 <__flatcc_fb_gen_c_json_parser@@Base+0x4128>
   20aec:	mov	r6, r0
   20af0:	str	r0, [sp, #8]
   20af4:	movw	r1, #3072	; 0xc00
   20af8:	movt	r1, #2
   20afc:	mov	r2, sp
   20b00:	mov	r0, r5
   20b04:	bl	25f10 <fb_symbol_table_visit@@Base>
   20b08:	ldr	r1, [sp]
   20b0c:	movw	r3, #62584	; 0xf478
   20b10:	movt	r3, #1
   20b14:	mov	r0, r6
   20b18:	mov	r2, #16
   20b1c:	bl	14914 <qsort@plt>
   20b20:	mov	r4, r6
   20b24:	mov	r0, r4
   20b28:	sub	sp, fp, #16
   20b2c:	pop	{r4, r5, r6, sl, fp, pc}
   20b30:	push	{r4, r5, fp, lr}
   20b34:	add	fp, sp, #8
   20b38:	mov	r5, r2
   20b3c:	mov	r4, r0
   20b40:	ldr	r2, [fp, #8]
   20b44:	movw	r1, #40452	; 0x9e04
   20b48:	movt	r1, #4
   20b4c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   20b50:	movw	r1, #34649	; 0x8759
   20b54:	movt	r1, #4
   20b58:	mov	r0, r4
   20b5c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   20b60:	ldr	r0, [r4, #220]	; 0xdc
   20b64:	add	r0, r0, #1
   20b68:	str	r0, [r4, #220]	; 0xdc
   20b6c:	mov	r0, r4
   20b70:	mov	r1, r5
   20b74:	bl	20c9c <__flatcc_fb_gen_c_json_parser@@Base+0x42a0>
   20b78:	ldr	r0, [r4, #220]	; 0xdc
   20b7c:	cmp	r0, #0
   20b80:	beq	20bac <__flatcc_fb_gen_c_json_parser@@Base+0x41b0>
   20b84:	sub	r0, r0, #1
   20b88:	str	r0, [r4, #220]	; 0xdc
   20b8c:	movw	r1, #33840	; 0x8430
   20b90:	movt	r1, #4
   20b94:	mov	r0, r4
   20b98:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   20b9c:	ldr	r0, [r4, #220]	; 0xdc
   20ba0:	add	r0, r0, #1
   20ba4:	str	r0, [r4, #220]	; 0xdc
   20ba8:	pop	{r4, r5, fp, pc}
   20bac:	movw	r0, #32000	; 0x7d00
   20bb0:	movt	r0, #4
   20bb4:	movw	r1, #32012	; 0x7d0c
   20bb8:	movt	r1, #4
   20bbc:	movw	r3, #40518	; 0x9e46
   20bc0:	movt	r3, #4
   20bc4:	movw	r2, #742	; 0x2e6
   20bc8:	bl	14950 <__assert_fail@plt>
   20bcc:	movw	r1, #34940	; 0x887c
   20bd0:	movt	r1, #4
   20bd4:	b	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   20bd8:	push	{r4, sl, fp, lr}
   20bdc:	add	fp, sp, #8
   20be0:	mov	r4, r0
   20be4:	ldr	r0, [r0, #4]
   20be8:	bl	20c4c <__flatcc_fb_gen_c_json_parser@@Base+0x4250>
   20bec:	cmp	r0, #0
   20bf0:	ldrne	r0, [r4]
   20bf4:	addne	r0, r0, #1
   20bf8:	strne	r0, [r4]
   20bfc:	pop	{r4, sl, fp, pc}
   20c00:	push	{r4, r5, fp, lr}
   20c04:	add	fp, sp, #8
   20c08:	mov	r5, r1
   20c0c:	mov	r4, r0
   20c10:	ldr	r0, [r0, #4]
   20c14:	bl	20c4c <__flatcc_fb_gen_c_json_parser@@Base+0x4250>
   20c18:	cmp	r0, #0
   20c1c:	popeq	{r4, r5, fp, pc}
   20c20:	ldr	r0, [r4, #8]
   20c24:	ldr	r1, [r5, #4]
   20c28:	ldr	r1, [r1]
   20c2c:	str	r1, [r0]
   20c30:	ldr	r0, [r5, #4]
   20c34:	ldr	r0, [r0, #4]
   20c38:	ldr	r1, [r4, #8]
   20c3c:	stmib	r1, {r0, r5}
   20c40:	add	r0, r1, #16
   20c44:	str	r0, [r4, #8]
   20c48:	pop	{r4, r5, fp, pc}
   20c4c:	push	{r4, sl, fp, lr}
   20c50:	add	fp, sp, #8
   20c54:	mov	r4, r1
   20c58:	ldrh	r1, [r1, #8]
   20c5c:	sub	r1, r1, #3
   20c60:	cmp	r1, #1
   20c64:	movhi	r0, #0
   20c68:	pophi	{r4, sl, fp, pc}
   20c6c:	ldr	r1, [r4, #16]
   20c70:	add	r0, r0, #172	; 0xac
   20c74:	bl	20c84 <__flatcc_fb_gen_c_json_parser@@Base+0x4288>
   20c78:	cmp	r0, #0
   20c7c:	movne	r0, r4
   20c80:	pop	{r4, sl, fp, pc}
   20c84:	push	{fp, lr}
   20c88:	mov	fp, sp
   20c8c:	bl	2580c <ptr_set_find_item@@Base>
   20c90:	cmp	r0, #0
   20c94:	movwne	r0, #1
   20c98:	pop	{fp, pc}
   20c9c:	push	{r4, r5, r6, sl, fp, lr}
   20ca0:	add	fp, sp, #16
   20ca4:	sub	sp, sp, #224	; 0xe0
   20ca8:	mov	r4, r0
   20cac:	ldrh	r0, [r1, #8]
   20cb0:	sub	r0, r0, #3
   20cb4:	uxth	r0, r0
   20cb8:	cmp	r0, #2
   20cbc:	bcs	20d00 <__flatcc_fb_gen_c_json_parser@@Base+0x4304>
   20cc0:	mov	r5, r1
   20cc4:	mov	r6, sp
   20cc8:	mov	r0, r6
   20ccc:	mov	r1, #0
   20cd0:	mov	r2, #220	; 0xdc
   20cd4:	bl	148a8 <memset@plt>
   20cd8:	mov	r0, r5
   20cdc:	mov	r1, r6
   20ce0:	bl	1d0dc <__flatcc_fb_gen_c_json_parser@@Base+0x6e0>
   20ce4:	movw	r1, #40673	; 0x9ee1
   20ce8:	movt	r1, #4
   20cec:	mov	r0, r4
   20cf0:	mov	r2, r6
   20cf4:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   20cf8:	sub	sp, fp, #16
   20cfc:	pop	{r4, r5, r6, sl, fp, pc}
   20d00:	movw	r0, #46709	; 0xb675
   20d04:	movt	r0, #3
   20d08:	movw	r1, #32012	; 0x7d0c
   20d0c:	movt	r1, #4
   20d10:	movw	r3, #40594	; 0x9e92
   20d14:	movt	r3, #4
   20d18:	movw	r2, #729	; 0x2d9
   20d1c:	bl	14950 <__assert_fail@plt>
   20d20:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   20d24:	add	fp, sp, #24
   20d28:	mov	r8, r2
   20d2c:	mov	r4, r0
   20d30:	mov	r0, #0
   20d34:	vmov.i32	q8, #0	; 0x00000000
   20d38:	mov	r2, #1
   20d3c:	str	r2, [r4]
   20d40:	str	r0, [r4, #36]	; 0x24
   20d44:	str	r1, [r4, #40]	; 0x28
   20d48:	add	r0, r4, #20
   20d4c:	vst1.32	{d16-d17}, [r0]
   20d50:	add	r0, r4, #4
   20d54:	vst1.32	{d16-d17}, [r0]
   20d58:	movw	r1, #3900	; 0xf3c
   20d5c:	movt	r1, #2
   20d60:	mov	r0, r8
   20d64:	mov	r2, r4
   20d68:	bl	26504 <fb_scope_table_visit@@Base>
   20d6c:	ldr	r5, [r4, #4]
   20d70:	mov	r0, r5
   20d74:	mov	r1, #8
   20d78:	bl	147ac <calloc@plt>
   20d7c:	str	r0, [r4, #16]
   20d80:	ldr	r7, [r4, #8]
   20d84:	mov	r0, r7
   20d88:	mov	r1, #8
   20d8c:	bl	147ac <calloc@plt>
   20d90:	str	r0, [r4, #20]
   20d94:	ldr	r6, [r4, #12]
   20d98:	mov	r0, r6
   20d9c:	bl	14848 <malloc@plt>
   20da0:	ldr	r1, [r4, #16]
   20da4:	ldr	r2, [r4, #20]
   20da8:	add	r3, r4, #24
   20dac:	stm	r3, {r0, r1, r2}
   20db0:	str	r0, [r4, #36]	; 0x24
   20db4:	cmp	r5, #1
   20db8:	blt	20dc4 <__flatcc_fb_gen_c_json_parser@@Base+0x43c8>
   20dbc:	cmp	r1, #0
   20dc0:	beq	20de8 <__flatcc_fb_gen_c_json_parser@@Base+0x43ec>
   20dc4:	cmp	r7, #1
   20dc8:	blt	20dd8 <__flatcc_fb_gen_c_json_parser@@Base+0x43dc>
   20dcc:	ldr	r1, [r4, #20]
   20dd0:	cmp	r1, #0
   20dd4:	beq	20de8 <__flatcc_fb_gen_c_json_parser@@Base+0x43ec>
   20dd8:	cmp	r6, #0
   20ddc:	beq	20df8 <__flatcc_fb_gen_c_json_parser@@Base+0x43fc>
   20de0:	cmp	r0, #0
   20de4:	bne	20df8 <__flatcc_fb_gen_c_json_parser@@Base+0x43fc>
   20de8:	mov	r0, r4
   20dec:	bl	20ee4 <__flatcc_fb_gen_c_json_parser@@Base+0x44e8>
   20df0:	mvn	r0, #0
   20df4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   20df8:	movw	r1, #3920	; 0xf50
   20dfc:	movt	r1, #2
   20e00:	mov	r0, r8
   20e04:	mov	r2, r4
   20e08:	bl	26504 <fb_scope_table_visit@@Base>
   20e0c:	ldr	r1, [r4, #4]
   20e10:	ldr	r0, [r4, #16]
   20e14:	bl	20f64 <__flatcc_fb_gen_c_json_parser@@Base+0x4568>
   20e18:	ldr	r1, [r4, #8]
   20e1c:	ldr	r0, [r4, #20]
   20e20:	bl	20f64 <__flatcc_fb_gen_c_json_parser@@Base+0x4568>
   20e24:	mov	r0, #0
   20e28:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   20e2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20e30:	add	fp, sp, #28
   20e34:	sub	sp, sp, #4
   20e38:	mov	r5, r0
   20e3c:	ldr	r0, [r0, #8]
   20e40:	str	r0, [r1]
   20e44:	mov	r7, #0
   20e48:	cmp	r0, #0
   20e4c:	beq	20ed8 <__flatcc_fb_gen_c_json_parser@@Base+0x44dc>
   20e50:	mov	r8, r1
   20e54:	lsl	r0, r0, #4
   20e58:	bl	14848 <malloc@plt>
   20e5c:	cmp	r0, #0
   20e60:	beq	20ed8 <__flatcc_fb_gen_c_json_parser@@Base+0x44dc>
   20e64:	mov	r9, r0
   20e68:	ldr	r1, [r5, #8]
   20e6c:	cmp	r1, #1
   20e70:	blt	20eb8 <__flatcc_fb_gen_c_json_parser@@Base+0x44bc>
   20e74:	add	r7, r9, #8
   20e78:	mov	sl, #0
   20e7c:	mov	r6, #0
   20e80:	ldr	r4, [r5, #20]
   20e84:	add	r0, r4, r6, lsl #3
   20e88:	ldr	r1, [r0, #4]
   20e8c:	str	r1, [r7, #-8]
   20e90:	ldr	r0, [r0, #4]
   20e94:	bl	14884 <strlen@plt>
   20e98:	str	r0, [r7, #-4]
   20e9c:	ldr	r0, [r4, r6, lsl #3]
   20ea0:	stm	r7, {r0, sl}
   20ea4:	add	r7, r7, #16
   20ea8:	add	r6, r6, #1
   20eac:	ldr	r1, [r5, #8]
   20eb0:	cmp	r6, r1
   20eb4:	blt	20e80 <__flatcc_fb_gen_c_json_parser@@Base+0x4484>
   20eb8:	movw	r3, #62584	; 0xf478
   20ebc:	movt	r3, #1
   20ec0:	mov	r0, r9
   20ec4:	mov	r2, #16
   20ec8:	bl	14914 <qsort@plt>
   20ecc:	ldr	r0, [r5, #8]
   20ed0:	str	r0, [r8]
   20ed4:	mov	r7, r9
   20ed8:	mov	r0, r7
   20edc:	sub	sp, fp, #28
   20ee0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20ee4:	push	{r4, sl, fp, lr}
   20ee8:	add	fp, sp, #8
   20eec:	mov	r4, r0
   20ef0:	ldr	r0, [r0, #16]
   20ef4:	cmp	r0, #0
   20ef8:	beq	20f00 <__flatcc_fb_gen_c_json_parser@@Base+0x4504>
   20efc:	bl	147dc <free@plt>
   20f00:	ldr	r0, [r4, #20]
   20f04:	cmp	r0, #0
   20f08:	beq	20f10 <__flatcc_fb_gen_c_json_parser@@Base+0x4514>
   20f0c:	bl	147dc <free@plt>
   20f10:	ldr	r0, [r4, #24]
   20f14:	cmp	r0, #0
   20f18:	beq	20f20 <__flatcc_fb_gen_c_json_parser@@Base+0x4524>
   20f1c:	bl	147dc <free@plt>
   20f20:	vmov.i32	q8, #0	; 0x00000000
   20f24:	mov	r0, #28
   20f28:	add	r1, r4, #16
   20f2c:	vst1.32	{d16-d17}, [r4], r0
   20f30:	vst1.32	{d16-d17}, [r4]
   20f34:	vst1.32	{d16-d17}, [r1]
   20f38:	pop	{r4, sl, fp, pc}
   20f3c:	mov	r2, r0
   20f40:	add	r0, r1, #4
   20f44:	movw	r1, #4008	; 0xfa8
   20f48:	movt	r1, #2
   20f4c:	b	25f10 <fb_symbol_table_visit@@Base>
   20f50:	mov	r2, r0
   20f54:	add	r0, r1, #4
   20f58:	movw	r1, #4244	; 0x1094
   20f5c:	movt	r1, #2
   20f60:	b	25f10 <fb_symbol_table_visit@@Base>
   20f64:	push	{r4, r5, fp, lr}
   20f68:	add	fp, sp, #8
   20f6c:	mov	r4, r1
   20f70:	mov	r5, r0
   20f74:	movw	r3, #4492	; 0x118c
   20f78:	movt	r3, #2
   20f7c:	mov	r2, #8
   20f80:	bl	14914 <qsort@plt>
   20f84:	cmp	r4, #1
   20f88:	poplt	{r4, r5, fp, pc}
   20f8c:	mov	r0, #0
   20f90:	ldr	r1, [r5, r0, lsl #3]
   20f94:	str	r0, [r1, #124]	; 0x7c
   20f98:	add	r0, r0, #1
   20f9c:	cmp	r4, r0
   20fa0:	bne	20f90 <__flatcc_fb_gen_c_json_parser@@Base+0x4594>
   20fa4:	pop	{r4, r5, fp, pc}
   20fa8:	push	{r4, r5, fp, lr}
   20fac:	add	fp, sp, #8
   20fb0:	mov	r5, r1
   20fb4:	mov	r4, r0
   20fb8:	ldr	r0, [r0, #40]	; 0x28
   20fbc:	bl	21060 <__flatcc_fb_gen_c_json_parser@@Base+0x4664>
   20fc0:	cmp	r0, #0
   20fc4:	popeq	{r4, r5, fp, pc}
   20fc8:	ldr	r2, [r4]
   20fcc:	mov	r1, #1
   20fd0:	cmp	r2, #0
   20fd4:	beq	21010 <__flatcc_fb_gen_c_json_parser@@Base+0x4614>
   20fd8:	ldr	r0, [r0, #12]
   20fdc:	ldr	r0, [r0]
   20fe0:	cmp	r0, #0
   20fe4:	beq	21010 <__flatcc_fb_gen_c_json_parser@@Base+0x4614>
   20fe8:	mov	r1, #0
   20fec:	ldr	r2, [r0]
   20ff0:	ldr	r0, [r0, #4]
   20ff4:	ldr	r0, [r0, #4]
   20ff8:	add	r0, r1, r0
   20ffc:	add	r1, r0, #1
   21000:	cmp	r2, #0
   21004:	mov	r0, r2
   21008:	bne	20fec <__flatcc_fb_gen_c_json_parser@@Base+0x45f0>
   2100c:	add	r1, r1, #1
   21010:	ldr	r0, [r5, #4]
   21014:	ldr	r0, [r0, #4]
   21018:	add	r0, r1, r0
   2101c:	ldr	r1, [r4, #12]
   21020:	add	r0, r0, r1
   21024:	str	r0, [r4, #12]
   21028:	ldrh	r0, [r5, #8]
   2102c:	sub	r1, r0, #3
   21030:	cmp	r1, #2
   21034:	bcc	21050 <__flatcc_fb_gen_c_json_parser@@Base+0x4654>
   21038:	cmp	r0, #1
   2103c:	ldrls	r0, [r4, #4]
   21040:	addls	r0, r0, #1
   21044:	strls	r0, [r4, #4]
   21048:	popls	{r4, r5, fp, pc}
   2104c:	pop	{r4, r5, fp, pc}
   21050:	ldr	r0, [r4, #8]
   21054:	add	r0, r0, #1
   21058:	str	r0, [r4, #8]
   2105c:	pop	{r4, r5, fp, pc}
   21060:	push	{r4, sl, fp, lr}
   21064:	add	fp, sp, #8
   21068:	mov	r4, r1
   2106c:	ldrh	r1, [r1, #8]
   21070:	cmp	r1, #4
   21074:	movhi	r0, #0
   21078:	pophi	{r4, sl, fp, pc}
   2107c:	ldr	r1, [r4, #16]
   21080:	add	r0, r0, #172	; 0xac
   21084:	bl	20c84 <__flatcc_fb_gen_c_json_parser@@Base+0x4288>
   21088:	cmp	r0, #0
   2108c:	movne	r0, r4
   21090:	pop	{r4, sl, fp, pc}
   21094:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21098:	add	fp, sp, #28
   2109c:	sub	sp, sp, #4
   210a0:	mov	r9, r1
   210a4:	mov	sl, r0
   210a8:	ldr	r0, [r0, #40]	; 0x28
   210ac:	bl	21060 <__flatcc_fb_gen_c_json_parser@@Base+0x4664>
   210b0:	cmp	r0, #0
   210b4:	beq	21184 <__flatcc_fb_gen_c_json_parser@@Base+0x4788>
   210b8:	ldr	r1, [sl]
   210bc:	ldr	r8, [sl, #36]	; 0x24
   210c0:	cmp	r1, #0
   210c4:	mov	r6, r8
   210c8:	beq	21110 <__flatcc_fb_gen_c_json_parser@@Base+0x4714>
   210cc:	ldr	r0, [r0, #12]
   210d0:	ldr	r5, [r0]
   210d4:	cmp	r5, #0
   210d8:	mov	r6, r8
   210dc:	beq	21110 <__flatcc_fb_gen_c_json_parser@@Base+0x4714>
   210e0:	mov	r4, #46	; 0x2e
   210e4:	mov	r6, r8
   210e8:	ldr	r0, [r5, #4]
   210ec:	ldm	r0, {r1, r7}
   210f0:	mov	r0, r6
   210f4:	mov	r2, r7
   210f8:	bl	147e8 <memcpy@plt>
   210fc:	strb	r4, [r6, r7]!
   21100:	add	r6, r6, #1
   21104:	ldr	r5, [r5]
   21108:	cmp	r5, #0
   2110c:	bne	210e8 <__flatcc_fb_gen_c_json_parser@@Base+0x46ec>
   21110:	ldr	r0, [r9, #4]
   21114:	ldm	r0, {r1, r7}
   21118:	mov	r0, r6
   2111c:	mov	r2, r7
   21120:	bl	147e8 <memcpy@plt>
   21124:	mov	r0, #0
   21128:	strb	r0, [r6, r7]!
   2112c:	add	r0, r6, #1
   21130:	str	r0, [sl, #36]	; 0x24
   21134:	ldrh	r0, [r9, #8]
   21138:	sub	r1, r0, #3
   2113c:	cmp	r1, #2
   21140:	bcc	2116c <__flatcc_fb_gen_c_json_parser@@Base+0x4770>
   21144:	cmp	r0, #1
   21148:	bhi	21184 <__flatcc_fb_gen_c_json_parser@@Base+0x4788>
   2114c:	ldr	r0, [sl, #28]
   21150:	str	r9, [r0]
   21154:	ldr	r0, [sl, #28]
   21158:	str	r8, [r0, #4]
   2115c:	add	r0, r0, #8
   21160:	str	r0, [sl, #28]
   21164:	sub	sp, fp, #28
   21168:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2116c:	ldr	r0, [sl, #32]
   21170:	str	r9, [r0]
   21174:	ldr	r0, [sl, #32]
   21178:	str	r8, [r0, #4]
   2117c:	add	r0, r0, #8
   21180:	str	r0, [sl, #32]
   21184:	sub	sp, fp, #28
   21188:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2118c:	ldr	r1, [r1, #4]
   21190:	ldr	r0, [r0, #4]
   21194:	b	147c4 <strcmp@plt>
   21198:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2119c:	add	fp, sp, #24
   211a0:	sub	sp, sp, #224	; 0xe0
   211a4:	mov	r5, r1
   211a8:	mov	r4, r0
   211ac:	mov	r6, sp
   211b0:	mov	r0, r6
   211b4:	mov	r1, #0
   211b8:	mov	r2, #220	; 0xdc
   211bc:	bl	148a8 <memset@plt>
   211c0:	mov	r0, r5
   211c4:	mov	r1, r6
   211c8:	bl	1d0dc <__flatcc_fb_gen_c_json_parser@@Base+0x6e0>
   211cc:	ldr	r0, [r4, #208]	; 0xd0
   211d0:	ldr	r2, [r0, #160]	; 0xa0
   211d4:	movw	r1, #31883	; 0x7c8b
   211d8:	movt	r1, #4
   211dc:	mov	r0, r4
   211e0:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   211e4:	ldr	r0, [r4, #220]	; 0xdc
   211e8:	add	r0, r0, #2
   211ec:	str	r0, [r4, #220]	; 0xdc
   211f0:	movw	r1, #40844	; 0x9f8c
   211f4:	movt	r1, #4
   211f8:	mov	r0, r4
   211fc:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21200:	ldr	r0, [r4, #220]	; 0xdc
   21204:	cmp	r0, #0
   21208:	beq	2139c <__flatcc_fb_gen_c_json_parser@@Base+0x49a0>
   2120c:	subs	r1, r0, #1
   21210:	str	r1, [r4, #220]	; 0xdc
   21214:	beq	2139c <__flatcc_fb_gen_c_json_parser@@Base+0x49a0>
   21218:	sub	r0, r0, #2
   2121c:	str	r0, [r4, #220]	; 0xdc
   21220:	movw	r1, #45227	; 0xb0ab
   21224:	movt	r1, #4
   21228:	mov	r0, r4
   2122c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21230:	ldr	r0, [r4, #220]	; 0xdc
   21234:	add	r0, r0, #1
   21238:	str	r0, [r4, #220]	; 0xdc
   2123c:	movw	r1, #40950	; 0x9ff6
   21240:	movt	r1, #4
   21244:	mov	r0, r4
   21248:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   2124c:	movw	r1, #40979	; 0xa013
   21250:	movt	r1, #4
   21254:	mov	r0, r4
   21258:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   2125c:	movw	r1, #21264	; 0x5310
   21260:	movt	r1, #3
   21264:	mov	r0, r4
   21268:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   2126c:	movw	r1, #41006	; 0xa02e
   21270:	movt	r1, #4
   21274:	mov	r0, r4
   21278:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   2127c:	movw	r1, #41033	; 0xa049
   21280:	movt	r1, #4
   21284:	mov	r0, r4
   21288:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   2128c:	ldr	r0, [r4, #208]	; 0xd0
   21290:	ldrh	r1, [r0, #16]
   21294:	cmp	r1, #2
   21298:	bne	212bc <__flatcc_fb_gen_c_json_parser@@Base+0x48c0>
   2129c:	ldrd	r6, [r0, #8]
   212a0:	movw	r1, #41092	; 0xa084
   212a4:	movt	r1, #4
   212a8:	mov	r0, r4
   212ac:	mov	r2, r7
   212b0:	mov	r3, r6
   212b4:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   212b8:	b	212cc <__flatcc_fb_gen_c_json_parser@@Base+0x48d0>
   212bc:	movw	r1, #41153	; 0xa0c1
   212c0:	movt	r1, #4
   212c4:	mov	r0, r4
   212c8:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   212cc:	movw	r1, #41209	; 0xa0f9
   212d0:	movt	r1, #4
   212d4:	mov	r2, sp
   212d8:	mov	r0, r4
   212dc:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   212e0:	movw	r1, #41261	; 0xa12d
   212e4:	movt	r1, #4
   212e8:	mov	r0, r4
   212ec:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   212f0:	ldr	r0, [r4, #220]	; 0xdc
   212f4:	add	r0, r0, #1
   212f8:	str	r0, [r4, #220]	; 0xdc
   212fc:	movw	r1, #41279	; 0xa13f
   21300:	movt	r1, #4
   21304:	mov	r0, r4
   21308:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   2130c:	ldr	r0, [r4, #220]	; 0xdc
   21310:	cmp	r0, #0
   21314:	beq	213bc <__flatcc_fb_gen_c_json_parser@@Base+0x49c0>
   21318:	sub	r0, r0, #1
   2131c:	str	r0, [r4, #220]	; 0xdc
   21320:	movw	r1, #30345	; 0x7689
   21324:	movt	r1, #3
   21328:	mov	r0, r4
   2132c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21330:	movw	r1, #41298	; 0xa152
   21334:	movt	r1, #4
   21338:	mov	r0, r4
   2133c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21340:	movw	r1, #41350	; 0xa186
   21344:	movt	r1, #4
   21348:	mov	r0, r4
   2134c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21350:	movw	r1, #34153	; 0x8569
   21354:	movt	r1, #4
   21358:	mov	r0, r4
   2135c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21360:	ldr	r0, [r4, #220]	; 0xdc
   21364:	cmp	r0, #0
   21368:	beq	213dc <__flatcc_fb_gen_c_json_parser@@Base+0x49e0>
   2136c:	sub	r0, r0, #1
   21370:	str	r0, [r4, #220]	; 0xdc
   21374:	movw	r1, #30345	; 0x7689
   21378:	movt	r1, #3
   2137c:	mov	r0, r4
   21380:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21384:	movw	r1, #21264	; 0x5310
   21388:	movt	r1, #3
   2138c:	mov	r0, r4
   21390:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21394:	sub	sp, fp, #24
   21398:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2139c:	movw	r0, #32000	; 0x7d00
   213a0:	movt	r0, #4
   213a4:	movw	r1, #32012	; 0x7d0c
   213a8:	movt	r1, #4
   213ac:	movw	r3, #40887	; 0x9fb7
   213b0:	movt	r3, #4
   213b4:	movw	r2, #1610	; 0x64a
   213b8:	bl	14950 <__assert_fail@plt>
   213bc:	movw	r0, #32000	; 0x7d00
   213c0:	movt	r0, #4
   213c4:	movw	r1, #32012	; 0x7d0c
   213c8:	movt	r1, #4
   213cc:	movw	r3, #40887	; 0x9fb7
   213d0:	movt	r3, #4
   213d4:	movw	r2, #1626	; 0x65a
   213d8:	bl	14950 <__assert_fail@plt>
   213dc:	movw	r0, #32000	; 0x7d00
   213e0:	movt	r0, #4
   213e4:	movw	r1, #32012	; 0x7d0c
   213e8:	movt	r1, #4
   213ec:	movw	r3, #40887	; 0x9fb7
   213f0:	movt	r3, #4
   213f4:	movw	r2, #1630	; 0x65e
   213f8:	bl	14950 <__assert_fail@plt>
   213fc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   21400:	add	fp, sp, #24
   21404:	sub	sp, sp, #224	; 0xe0
   21408:	mov	r5, r1
   2140c:	mov	r4, r0
   21410:	mov	r6, sp
   21414:	mov	r0, r6
   21418:	mov	r1, #0
   2141c:	mov	r2, #220	; 0xdc
   21420:	bl	148a8 <memset@plt>
   21424:	mov	r0, r5
   21428:	mov	r1, r6
   2142c:	bl	1d0dc <__flatcc_fb_gen_c_json_parser@@Base+0x6e0>
   21430:	ldr	r0, [r4, #208]	; 0xd0
   21434:	ldr	r2, [r0, #160]	; 0xa0
   21438:	movw	r1, #31883	; 0x7c8b
   2143c:	movt	r1, #4
   21440:	mov	r0, r4
   21444:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21448:	ldr	r0, [r4, #220]	; 0xdc
   2144c:	add	r0, r0, #2
   21450:	str	r0, [r4, #220]	; 0xdc
   21454:	movw	r1, #40844	; 0x9f8c
   21458:	movt	r1, #4
   2145c:	mov	r0, r4
   21460:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21464:	ldr	r0, [r4, #220]	; 0xdc
   21468:	cmp	r0, #0
   2146c:	beq	21600 <__flatcc_fb_gen_c_json_parser@@Base+0x4c04>
   21470:	subs	r1, r0, #1
   21474:	str	r1, [r4, #220]	; 0xdc
   21478:	beq	21600 <__flatcc_fb_gen_c_json_parser@@Base+0x4c04>
   2147c:	sub	r0, r0, #2
   21480:	str	r0, [r4, #220]	; 0xdc
   21484:	movw	r1, #45227	; 0xb0ab
   21488:	movt	r1, #4
   2148c:	mov	r0, r4
   21490:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21494:	ldr	r0, [r4, #220]	; 0xdc
   21498:	add	r0, r0, #1
   2149c:	str	r0, [r4, #220]	; 0xdc
   214a0:	movw	r1, #41434	; 0xa1da
   214a4:	movt	r1, #4
   214a8:	mov	r0, r4
   214ac:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   214b0:	movw	r1, #40979	; 0xa013
   214b4:	movt	r1, #4
   214b8:	mov	r0, r4
   214bc:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   214c0:	movw	r1, #21264	; 0x5310
   214c4:	movt	r1, #3
   214c8:	mov	r0, r4
   214cc:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   214d0:	movw	r1, #41461	; 0xa1f5
   214d4:	movt	r1, #4
   214d8:	mov	r0, r4
   214dc:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   214e0:	movw	r1, #41033	; 0xa049
   214e4:	movt	r1, #4
   214e8:	mov	r0, r4
   214ec:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   214f0:	ldr	r0, [r4, #208]	; 0xd0
   214f4:	ldrh	r1, [r0, #16]
   214f8:	cmp	r1, #2
   214fc:	bne	21520 <__flatcc_fb_gen_c_json_parser@@Base+0x4b24>
   21500:	ldrd	r6, [r0, #8]
   21504:	movw	r1, #41092	; 0xa084
   21508:	movt	r1, #4
   2150c:	mov	r0, r4
   21510:	mov	r2, r7
   21514:	mov	r3, r6
   21518:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   2151c:	b	21530 <__flatcc_fb_gen_c_json_parser@@Base+0x4b34>
   21520:	movw	r1, #41153	; 0xa0c1
   21524:	movt	r1, #4
   21528:	mov	r0, r4
   2152c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21530:	movw	r1, #41486	; 0xa20e
   21534:	movt	r1, #4
   21538:	mov	r2, sp
   2153c:	mov	r0, r4
   21540:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21544:	movw	r1, #41261	; 0xa12d
   21548:	movt	r1, #4
   2154c:	mov	r0, r4
   21550:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21554:	ldr	r0, [r4, #220]	; 0xdc
   21558:	add	r0, r0, #1
   2155c:	str	r0, [r4, #220]	; 0xdc
   21560:	movw	r1, #41279	; 0xa13f
   21564:	movt	r1, #4
   21568:	mov	r0, r4
   2156c:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21570:	ldr	r0, [r4, #220]	; 0xdc
   21574:	cmp	r0, #0
   21578:	beq	21620 <__flatcc_fb_gen_c_json_parser@@Base+0x4c24>
   2157c:	sub	r0, r0, #1
   21580:	str	r0, [r4, #220]	; 0xdc
   21584:	movw	r1, #30345	; 0x7689
   21588:	movt	r1, #3
   2158c:	mov	r0, r4
   21590:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   21594:	movw	r1, #41298	; 0xa152
   21598:	movt	r1, #4
   2159c:	mov	r0, r4
   215a0:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   215a4:	movw	r1, #41350	; 0xa186
   215a8:	movt	r1, #4
   215ac:	mov	r0, r4
   215b0:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   215b4:	movw	r1, #34153	; 0x8569
   215b8:	movt	r1, #4
   215bc:	mov	r0, r4
   215c0:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   215c4:	ldr	r0, [r4, #220]	; 0xdc
   215c8:	cmp	r0, #0
   215cc:	beq	21640 <__flatcc_fb_gen_c_json_parser@@Base+0x4c44>
   215d0:	sub	r0, r0, #1
   215d4:	str	r0, [r4, #220]	; 0xdc
   215d8:	movw	r1, #30345	; 0x7689
   215dc:	movt	r1, #3
   215e0:	mov	r0, r4
   215e4:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   215e8:	movw	r1, #21264	; 0x5310
   215ec:	movt	r1, #3
   215f0:	mov	r0, r4
   215f4:	bl	1cfa8 <__flatcc_fb_gen_c_json_parser@@Base+0x5ac>
   215f8:	sub	sp, fp, #24
   215fc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   21600:	movw	r0, #32000	; 0x7d00
   21604:	movt	r0, #4
   21608:	movw	r1, #32012	; 0x7d0c
   2160c:	movt	r1, #4
   21610:	movw	r3, #41370	; 0xa19a
   21614:	movt	r3, #4
   21618:	movw	r2, #1645	; 0x66d
   2161c:	bl	14950 <__assert_fail@plt>
   21620:	movw	r0, #32000	; 0x7d00
   21624:	movt	r0, #4
   21628:	movw	r1, #32012	; 0x7d0c
   2162c:	movt	r1, #4
   21630:	movw	r3, #41370	; 0xa19a
   21634:	movt	r3, #4
   21638:	movw	r2, #1661	; 0x67d
   2163c:	bl	14950 <__assert_fail@plt>
   21640:	movw	r0, #32000	; 0x7d00
   21644:	movt	r0, #4
   21648:	movw	r1, #32012	; 0x7d0c
   2164c:	movt	r1, #4
   21650:	movw	r3, #41370	; 0xa19a
   21654:	movt	r3, #4
   21658:	movw	r2, #1665	; 0x681
   2165c:	bl	14950 <__assert_fail@plt>
   21660:	ldr	r1, [r0, #212]	; 0xd4
   21664:	ldr	r1, [r1, #140]	; 0x8c
   21668:	cmp	r1, #0
   2166c:	bxeq	lr
   21670:	ldr	r3, [r0, #204]	; 0xcc
   21674:	movw	r0, #45228	; 0xb0ac
   21678:	movt	r0, #3
   2167c:	mov	r1, #36	; 0x24
   21680:	mov	r2, #1
   21684:	b	14830 <fwrite@plt>

00021688 <__flatcc_fb_gen_c_json_printer@@Base>:
   21688:	push	{r4, sl, fp, lr}
   2168c:	add	fp, sp, #8
   21690:	mov	r4, r0
   21694:	bl	216d8 <__flatcc_fb_gen_c_json_printer@@Base+0x50>
   21698:	mov	r0, r4
   2169c:	bl	21760 <__flatcc_fb_gen_c_json_printer@@Base+0xd8>
   216a0:	mov	r0, r4
   216a4:	bl	2188c <__flatcc_fb_gen_c_json_printer@@Base+0x204>
   216a8:	mov	r0, r4
   216ac:	bl	218cc <__flatcc_fb_gen_c_json_printer@@Base+0x244>
   216b0:	mov	r0, r4
   216b4:	bl	2190c <__flatcc_fb_gen_c_json_printer@@Base+0x284>
   216b8:	mov	r0, r4
   216bc:	bl	2194c <__flatcc_fb_gen_c_json_printer@@Base+0x2c4>
   216c0:	mov	r0, r4
   216c4:	bl	2198c <__flatcc_fb_gen_c_json_printer@@Base+0x304>
   216c8:	mov	r0, r4
   216cc:	bl	219b0 <__flatcc_fb_gen_c_json_printer@@Base+0x328>
   216d0:	mov	r0, #0
   216d4:	pop	{r4, sl, fp, pc}
   216d8:	push	{r4, sl, fp, lr}
   216dc:	add	fp, sp, #8
   216e0:	mov	r4, r0
   216e4:	ldr	r0, [r0, #204]	; 0xcc
   216e8:	ldr	r1, [r4, #208]	; 0xd0
   216ec:	ldr	r2, [r1, #164]	; 0xa4
   216f0:	movw	r1, #41676	; 0xa2cc
   216f4:	movt	r1, #4
   216f8:	mov	r3, r2
   216fc:	bl	14890 <fprintf@plt>
   21700:	ldr	r3, [r4, #204]	; 0xcc
   21704:	movw	r0, #20710	; 0x50e6
   21708:	movt	r0, #3
   2170c:	mov	r1, #81	; 0x51
   21710:	mov	r2, #1
   21714:	bl	14830 <fwrite@plt>
   21718:	ldr	r3, [r4, #204]	; 0xcc
   2171c:	movw	r0, #41729	; 0xa301
   21720:	movt	r0, #4
   21724:	mov	r1, #40	; 0x28
   21728:	mov	r2, #1
   2172c:	bl	14830 <fwrite@plt>
   21730:	movw	r1, #20639	; 0x509f
   21734:	movt	r1, #3
   21738:	movw	r2, #41770	; 0xa32a
   2173c:	movt	r2, #4
   21740:	mov	r0, r4
   21744:	bl	1598c <__flatcc_fb_gen_c_includes@@Base>
   21748:	mov	r0, r4
   2174c:	bl	219dc <__flatcc_fb_gen_c_json_printer@@Base+0x354>
   21750:	ldr	r1, [r4, #204]	; 0xcc
   21754:	mov	r0, #10
   21758:	pop	{r4, sl, fp, lr}
   2175c:	b	148f0 <fputc@plt>
   21760:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   21764:	add	fp, sp, #24
   21768:	sub	sp, sp, #224	; 0xe0
   2176c:	mov	r4, r0
   21770:	ldr	r0, [r0, #208]	; 0xd0
   21774:	ldr	r5, [r0, #52]	; 0x34
   21778:	mov	r0, sp
   2177c:	mov	r1, #0
   21780:	mov	r2, #220	; 0xdc
   21784:	bl	148a8 <memset@plt>
   21788:	cmp	r5, #0
   2178c:	beq	217cc <__flatcc_fb_gen_c_json_printer@@Base+0x144>
   21790:	ldrh	r0, [r5, #8]
   21794:	cmp	r0, #1
   21798:	bhi	217cc <__flatcc_fb_gen_c_json_printer@@Base+0x144>
   2179c:	ldr	r3, [r4, #204]	; 0xcc
   217a0:	movw	r0, #41786	; 0xa33a
   217a4:	movt	r0, #4
   217a8:	movw	r1, #482	; 0x1e2
   217ac:	mov	r2, #1
   217b0:	bl	14830 <fwrite@plt>
   217b4:	ldr	r0, [r4, #204]	; 0xcc
   217b8:	ldr	r1, [r4, #208]	; 0xd0
   217bc:	ldr	r2, [r1, #160]	; 0xa0
   217c0:	movw	r1, #42269	; 0xa51d
   217c4:	movt	r1, #4
   217c8:	bl	14890 <fprintf@plt>
   217cc:	ldr	r0, [r4, #208]	; 0xd0
   217d0:	ldr	r5, [r0, #40]	; 0x28
   217d4:	cmp	r5, #0
   217d8:	beq	21878 <__flatcc_fb_gen_c_json_printer@@Base+0x1f0>
   217dc:	mov	r6, sp
   217e0:	movw	r8, #42555	; 0xa63b
   217e4:	movt	r8, #4
   217e8:	movw	r9, #42661	; 0xa6a5
   217ec:	movt	r9, #4
   217f0:	movw	r7, #42357	; 0xa575
   217f4:	movt	r7, #4
   217f8:	ldrh	r0, [r5, #8]
   217fc:	cmp	r0, #0
   21800:	beq	21850 <__flatcc_fb_gen_c_json_printer@@Base+0x1c8>
   21804:	cmp	r0, #1
   21808:	beq	21838 <__flatcc_fb_gen_c_json_printer@@Base+0x1b0>
   2180c:	cmp	r0, #4
   21810:	bne	2186c <__flatcc_fb_gen_c_json_printer@@Base+0x1e4>
   21814:	mov	r0, r5
   21818:	mov	r1, r6
   2181c:	bl	21a04 <__flatcc_fb_gen_c_json_printer@@Base+0x37c>
   21820:	ldr	r0, [r4, #204]	; 0xcc
   21824:	mov	r1, r7
   21828:	mov	r2, r6
   2182c:	mov	r3, r6
   21830:	bl	14890 <fprintf@plt>
   21834:	b	2186c <__flatcc_fb_gen_c_json_printer@@Base+0x1e4>
   21838:	mov	r0, r5
   2183c:	mov	r1, r6
   21840:	bl	21a04 <__flatcc_fb_gen_c_json_printer@@Base+0x37c>
   21844:	ldr	r0, [r4, #204]	; 0xcc
   21848:	mov	r1, r9
   2184c:	b	21864 <__flatcc_fb_gen_c_json_printer@@Base+0x1dc>
   21850:	mov	r0, r5
   21854:	mov	r1, r6
   21858:	bl	21a04 <__flatcc_fb_gen_c_json_printer@@Base+0x37c>
   2185c:	ldr	r0, [r4, #204]	; 0xcc
   21860:	mov	r1, r8
   21864:	mov	r2, r6
   21868:	bl	14890 <fprintf@plt>
   2186c:	ldr	r5, [r5]
   21870:	cmp	r5, #0
   21874:	bne	217f8 <__flatcc_fb_gen_c_json_printer@@Base+0x170>
   21878:	ldr	r1, [r4, #204]	; 0xcc
   2187c:	mov	r0, #10
   21880:	bl	148f0 <fputc@plt>
   21884:	sub	sp, fp, #24
   21888:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2188c:	push	{r4, r5, fp, lr}
   21890:	add	fp, sp, #8
   21894:	mov	r4, r0
   21898:	ldr	r0, [r0, #208]	; 0xd0
   2189c:	ldr	r5, [r0, #40]	; 0x28
   218a0:	b	218a8 <__flatcc_fb_gen_c_json_printer@@Base+0x220>
   218a4:	ldr	r5, [r5]
   218a8:	cmp	r5, #0
   218ac:	popeq	{r4, r5, fp, pc}
   218b0:	ldrh	r0, [r5, #8]
   218b4:	cmp	r0, #3
   218b8:	bne	218a4 <__flatcc_fb_gen_c_json_printer@@Base+0x21c>
   218bc:	mov	r0, r4
   218c0:	mov	r1, r5
   218c4:	bl	21a14 <__flatcc_fb_gen_c_json_printer@@Base+0x38c>
   218c8:	b	218a4 <__flatcc_fb_gen_c_json_printer@@Base+0x21c>
   218cc:	push	{r4, r5, fp, lr}
   218d0:	add	fp, sp, #8
   218d4:	mov	r4, r0
   218d8:	ldr	r0, [r0, #208]	; 0xd0
   218dc:	ldr	r5, [r0, #40]	; 0x28
   218e0:	b	218e8 <__flatcc_fb_gen_c_json_printer@@Base+0x260>
   218e4:	ldr	r5, [r5]
   218e8:	cmp	r5, #0
   218ec:	popeq	{r4, r5, fp, pc}
   218f0:	ldrh	r0, [r5, #8]
   218f4:	cmp	r0, #4
   218f8:	bne	218e4 <__flatcc_fb_gen_c_json_printer@@Base+0x25c>
   218fc:	mov	r0, r4
   21900:	mov	r1, r5
   21904:	bl	21fc0 <__flatcc_fb_gen_c_json_printer@@Base+0x938>
   21908:	b	218e4 <__flatcc_fb_gen_c_json_printer@@Base+0x25c>
   2190c:	push	{r4, r5, fp, lr}
   21910:	add	fp, sp, #8
   21914:	mov	r4, r0
   21918:	ldr	r0, [r0, #208]	; 0xd0
   2191c:	ldr	r5, [r0, #40]	; 0x28
   21920:	b	21928 <__flatcc_fb_gen_c_json_printer@@Base+0x2a0>
   21924:	ldr	r5, [r5]
   21928:	cmp	r5, #0
   2192c:	popeq	{r4, r5, fp, pc}
   21930:	ldrh	r0, [r5, #8]
   21934:	cmp	r0, #1
   21938:	bne	21924 <__flatcc_fb_gen_c_json_printer@@Base+0x29c>
   2193c:	mov	r0, r4
   21940:	mov	r1, r5
   21944:	bl	22290 <__flatcc_fb_gen_c_json_printer@@Base+0xc08>
   21948:	b	21924 <__flatcc_fb_gen_c_json_printer@@Base+0x29c>
   2194c:	push	{r4, r5, fp, lr}
   21950:	add	fp, sp, #8
   21954:	mov	r4, r0
   21958:	ldr	r0, [r0, #208]	; 0xd0
   2195c:	ldr	r5, [r0, #40]	; 0x28
   21960:	b	21968 <__flatcc_fb_gen_c_json_printer@@Base+0x2e0>
   21964:	ldr	r5, [r5]
   21968:	cmp	r5, #0
   2196c:	popeq	{r4, r5, fp, pc}
   21970:	ldrh	r0, [r5, #8]
   21974:	cmp	r0, #0
   21978:	bne	21964 <__flatcc_fb_gen_c_json_printer@@Base+0x2dc>
   2197c:	mov	r0, r4
   21980:	mov	r1, r5
   21984:	bl	22454 <__flatcc_fb_gen_c_json_printer@@Base+0xdcc>
   21988:	b	21964 <__flatcc_fb_gen_c_json_printer@@Base+0x2dc>
   2198c:	ldr	r1, [r0, #208]	; 0xd0
   21990:	ldr	r1, [r1, #52]	; 0x34
   21994:	cmp	r1, #0
   21998:	bxeq	lr
   2199c:	ldrh	r2, [r1, #8]
   219a0:	cmp	r2, #1
   219a4:	bhi	219ac <__flatcc_fb_gen_c_json_printer@@Base+0x324>
   219a8:	b	22cc4 <__flatcc_fb_gen_c_json_printer@@Base+0x163c>
   219ac:	bx	lr
   219b0:	push	{r4, sl, fp, lr}
   219b4:	add	fp, sp, #8
   219b8:	mov	r4, r0
   219bc:	bl	22d8c <__flatcc_fb_gen_c_json_printer@@Base+0x1704>
   219c0:	ldr	r0, [r4, #204]	; 0xcc
   219c4:	ldr	r1, [r4, #208]	; 0xd0
   219c8:	ldr	r2, [r1, #164]	; 0xa4
   219cc:	movw	r1, #47422	; 0xb93e
   219d0:	movt	r1, #4
   219d4:	pop	{r4, sl, fp, lr}
   219d8:	b	14890 <fprintf@plt>
   219dc:	ldr	r1, [r0, #212]	; 0xd4
   219e0:	ldr	r1, [r1, #140]	; 0x8c
   219e4:	cmp	r1, #0
   219e8:	bxeq	lr
   219ec:	ldr	r3, [r0, #204]	; 0xcc
   219f0:	movw	r0, #21186	; 0x52c2
   219f4:	movt	r0, #3
   219f8:	mov	r1, #36	; 0x24
   219fc:	mov	r2, #1
   21a00:	b	14830 <fwrite@plt>
   21a04:	mov	r2, r1
   21a08:	mov	r1, r0
   21a0c:	ldr	r0, [r0, #12]
   21a10:	b	15b70 <__flatcc_fb_scoped_symbol_name@@Base>
   21a14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21a18:	add	fp, sp, #28
   21a1c:	sub	sp, sp, #252	; 0xfc
   21a20:	mov	sl, r1
   21a24:	mov	r4, r0
   21a28:	add	r5, sp, #24
   21a2c:	mov	r7, #0
   21a30:	mov	r0, r5
   21a34:	mov	r1, #0
   21a38:	mov	r2, #220	; 0xdc
   21a3c:	bl	148a8 <memset@plt>
   21a40:	mov	r0, sl
   21a44:	mov	r1, r5
   21a48:	bl	21a04 <__flatcc_fb_gen_c_json_printer@@Base+0x37c>
   21a4c:	ldr	r0, [sl, #40]	; 0x28
   21a50:	bl	21ec0 <__flatcc_fb_gen_c_json_printer@@Base+0x838>
   21a54:	mov	r5, r0
   21a58:	ldr	r0, [sl, #40]	; 0x28
   21a5c:	bl	21f34 <__flatcc_fb_gen_c_json_printer@@Base+0x8ac>
   21a60:	mov	r9, r0
   21a64:	ldr	r0, [sl, #40]	; 0x28
   21a68:	mov	r1, r4
   21a6c:	bl	21fa8 <__flatcc_fb_gen_c_json_printer@@Base+0x920>
   21a70:	mov	r3, r0
   21a74:	ldrh	r0, [sl, #92]	; 0x5c
   21a78:	ands	r6, r0, #32
   21a7c:	str	r5, [sp, #20]
   21a80:	beq	21ac8 <__flatcc_fb_gen_c_json_printer@@Base+0x440>
   21a84:	ldrd	r0, [sl, #112]	; 0x70
   21a88:	eor	r2, r0, #1
   21a8c:	orrs	r2, r2, r1
   21a90:	movw	r8, #42739	; 0xa6f3
   21a94:	movt	r8, #4
   21a98:	beq	21b00 <__flatcc_fb_gen_c_json_printer@@Base+0x478>
   21a9c:	eor	r2, r0, #4
   21aa0:	orrs	r2, r2, r1
   21aa4:	beq	21ae4 <__flatcc_fb_gen_c_json_printer@@Base+0x45c>
   21aa8:	eor	r0, r0, #2
   21aac:	orrs	r0, r0, r1
   21ab0:	bne	21b14 <__flatcc_fb_gen_c_json_printer@@Base+0x48c>
   21ab4:	movw	r5, #65535	; 0xffff
   21ab8:	movw	r0, #47490	; 0xb982
   21abc:	movt	r0, #3
   21ac0:	str	r0, [sp, #16]
   21ac4:	b	21b30 <__flatcc_fb_gen_c_json_printer@@Base+0x4a8>
   21ac8:	ldr	r0, [r4, #204]!	; 0xcc
   21acc:	str	r9, [sp]
   21ad0:	movw	r1, #42748	; 0xa6fc
   21ad4:	movt	r1, #4
   21ad8:	add	r2, sp, #24
   21adc:	bl	14890 <fprintf@plt>
   21ae0:	b	21ba4 <__flatcc_fb_gen_c_json_printer@@Base+0x51c>
   21ae4:	mvn	r5, #0
   21ae8:	movw	r0, #47481	; 0xb979
   21aec:	movt	r0, #3
   21af0:	str	r0, [sp, #16]
   21af4:	movw	r8, #42741	; 0xa6f5
   21af8:	movt	r8, #4
   21afc:	b	21b30 <__flatcc_fb_gen_c_json_printer@@Base+0x4a8>
   21b00:	mov	r5, #255	; 0xff
   21b04:	movw	r0, #47499	; 0xb98b
   21b08:	movt	r0, #3
   21b0c:	str	r0, [sp, #16]
   21b10:	b	21b30 <__flatcc_fb_gen_c_json_printer@@Base+0x4a8>
   21b14:	mvn	r5, #0
   21b18:	movw	r0, #47472	; 0xb970
   21b1c:	movt	r0, #3
   21b20:	str	r0, [sp, #16]
   21b24:	movw	r8, #42744	; 0xa6f8
   21b28:	movt	r8, #4
   21b2c:	mvn	r7, #0
   21b30:	ldr	r0, [sl, #20]
   21b34:	cmp	r0, #0
   21b38:	beq	21c90 <__flatcc_fb_gen_c_json_printer@@Base+0x608>
   21b3c:	add	r1, r0, #48	; 0x30
   21b40:	ldrh	r2, [r0, #56]	; 0x38
   21b44:	cmp	r2, #4
   21b48:	beq	21b5c <__flatcc_fb_gen_c_json_printer@@Base+0x4d4>
   21b4c:	cmp	r2, #6
   21b50:	beq	21b70 <__flatcc_fb_gen_c_json_printer@@Base+0x4e8>
   21b54:	cmp	r2, #5
   21b58:	bne	21b78 <__flatcc_fb_gen_c_json_printer@@Base+0x4f0>
   21b5c:	ldr	r2, [r1]
   21b60:	ldr	r1, [r1, #4]
   21b64:	bic	r7, r7, r1
   21b68:	bic	r5, r5, r2
   21b6c:	b	21b78 <__flatcc_fb_gen_c_json_printer@@Base+0x4f0>
   21b70:	ldrb	r1, [r1]
   21b74:	bic	r5, r5, r1
   21b78:	ldr	r0, [r0]
   21b7c:	cmp	r0, #0
   21b80:	bne	21b3c <__flatcc_fb_gen_c_json_printer@@Base+0x4b4>
   21b84:	ldr	r0, [r4, #204]!	; 0xcc
   21b88:	str	r9, [sp]
   21b8c:	movw	r1, #42748	; 0xa6fc
   21b90:	movt	r1, #4
   21b94:	add	r2, sp, #24
   21b98:	bl	14890 <fprintf@plt>
   21b9c:	cmp	r6, #0
   21ba0:	bne	21ca8 <__flatcc_fb_gen_c_json_printer@@Base+0x620>
   21ba4:	ldr	r3, [r4]
   21ba8:	movw	r0, #43348	; 0xa954
   21bac:	movt	r0, #4
   21bb0:	mov	r1, #18
   21bb4:	mov	r2, #1
   21bb8:	bl	14830 <fwrite@plt>
   21bbc:	ldr	r5, [sl, #20]
   21bc0:	cmp	r5, #0
   21bc4:	beq	21c78 <__flatcc_fb_gen_c_json_printer@@Base+0x5f0>
   21bc8:	movw	r8, #43434	; 0xa9aa
   21bcc:	movt	r8, #4
   21bd0:	movw	r9, #43501	; 0xa9ed
   21bd4:	movt	r9, #4
   21bd8:	movw	r7, #43367	; 0xa967
   21bdc:	movt	r7, #4
   21be0:	add	r0, r5, #48	; 0x30
   21be4:	ldrh	r1, [r5, #56]	; 0x38
   21be8:	cmp	r1, #4
   21bec:	beq	21c48 <__flatcc_fb_gen_c_json_printer@@Base+0x5c0>
   21bf0:	cmp	r1, #6
   21bf4:	beq	21c24 <__flatcc_fb_gen_c_json_printer@@Base+0x59c>
   21bf8:	cmp	r1, #5
   21bfc:	bne	21e20 <__flatcc_fb_gen_c_json_printer@@Base+0x798>
   21c00:	ldrd	r2, [r0]
   21c04:	ldr	r0, [r4]
   21c08:	ldr	r1, [r5, #4]
   21c0c:	ldr	r6, [r1]
   21c10:	ldr	r1, [r1, #4]
   21c14:	stm	sp, {r1, r6}
   21c18:	str	r1, [sp, #8]
   21c1c:	mov	r1, r7
   21c20:	b	21c68 <__flatcc_fb_gen_c_json_printer@@Base+0x5e0>
   21c24:	ldrb	r2, [r5, #48]	; 0x30
   21c28:	ldr	r0, [r4]
   21c2c:	ldr	r1, [r5, #4]
   21c30:	ldr	r6, [r1]
   21c34:	ldr	r3, [r1, #4]
   21c38:	str	r6, [sp]
   21c3c:	str	r3, [sp, #4]
   21c40:	mov	r1, r9
   21c44:	b	21c68 <__flatcc_fb_gen_c_json_printer@@Base+0x5e0>
   21c48:	ldrd	r2, [r0]
   21c4c:	ldr	r0, [r4]
   21c50:	ldr	r1, [r5, #4]
   21c54:	ldr	r6, [r1]
   21c58:	ldr	r1, [r1, #4]
   21c5c:	stm	sp, {r1, r6}
   21c60:	str	r1, [sp, #8]
   21c64:	mov	r1, r8
   21c68:	bl	14890 <fprintf@plt>
   21c6c:	ldr	r5, [r5]
   21c70:	cmp	r5, #0
   21c74:	bne	21be0 <__flatcc_fb_gen_c_json_printer@@Base+0x558>
   21c78:	ldr	r0, [r4]
   21c7c:	movw	r1, #43566	; 0xaa2e
   21c80:	movt	r1, #4
   21c84:	ldr	r2, [sp, #20]
   21c88:	bl	14890 <fprintf@plt>
   21c8c:	b	21e00 <__flatcc_fb_gen_c_json_printer@@Base+0x778>
   21c90:	ldr	r0, [r4, #204]!	; 0xcc
   21c94:	str	r9, [sp]
   21c98:	movw	r1, #42748	; 0xa6fc
   21c9c:	movt	r1, #4
   21ca0:	add	r2, sp, #24
   21ca4:	bl	14890 <fprintf@plt>
   21ca8:	ldr	r6, [sp, #16]
   21cac:	mov	r0, r6
   21cb0:	mov	r1, r9
   21cb4:	bl	147c4 <strcmp@plt>
   21cb8:	mov	r1, r0
   21cbc:	ldr	r0, [r4]
   21cc0:	cmp	r1, #0
   21cc4:	beq	21ce0 <__flatcc_fb_gen_c_json_printer@@Base+0x658>
   21cc8:	movw	r1, #42818	; 0xa742
   21ccc:	movt	r1, #4
   21cd0:	mov	r2, r6
   21cd4:	mov	r3, r6
   21cd8:	bl	14890 <fprintf@plt>
   21cdc:	b	21cf0 <__flatcc_fb_gen_c_json_printer@@Base+0x668>
   21ce0:	movw	r1, #42837	; 0xa755
   21ce4:	movt	r1, #4
   21ce8:	mov	r2, r6
   21cec:	bl	14890 <fprintf@plt>
   21cf0:	ldr	r3, [r4]
   21cf4:	movw	r0, #42852	; 0xa764
   21cf8:	movt	r0, #4
   21cfc:	mov	r1, #54	; 0x36
   21d00:	mov	r2, #1
   21d04:	bl	14830 <fwrite@plt>
   21d08:	ldr	r1, [r4]
   21d0c:	mov	r0, #10
   21d10:	bl	148f0 <fputc@plt>
   21d14:	orrs	r0, r5, r7
   21d18:	beq	21d3c <__flatcc_fb_gen_c_json_printer@@Base+0x6b4>
   21d1c:	ldr	r0, [r4]
   21d20:	ldr	r1, [sp, #20]
   21d24:	str	r1, [sp]
   21d28:	movw	r1, #42907	; 0xa79b
   21d2c:	movt	r1, #4
   21d30:	mov	r2, r5
   21d34:	mov	r3, r7
   21d38:	bl	14890 <fprintf@plt>
   21d3c:	ldr	r3, [r4]
   21d40:	movw	r0, #43004	; 0xa7fc
   21d44:	movt	r0, #4
   21d48:	mov	r1, #59	; 0x3b
   21d4c:	mov	r2, #1
   21d50:	bl	14830 <fwrite@plt>
   21d54:	ldr	r6, [sl, #20]
   21d58:	cmp	r6, #0
   21d5c:	beq	21de8 <__flatcc_fb_gen_c_json_printer@@Base+0x760>
   21d60:	movw	r5, #43064	; 0xa838
   21d64:	movt	r5, #4
   21d68:	add	r0, r6, #48	; 0x30
   21d6c:	ldrh	r1, [r6, #56]	; 0x38
   21d70:	cmp	r1, #4
   21d74:	beq	21d88 <__flatcc_fb_gen_c_json_printer@@Base+0x700>
   21d78:	cmp	r1, #6
   21d7c:	beq	21db0 <__flatcc_fb_gen_c_json_printer@@Base+0x728>
   21d80:	cmp	r1, #5
   21d84:	bne	21e70 <__flatcc_fb_gen_c_json_printer@@Base+0x7e8>
   21d88:	ldrd	r2, [r0]
   21d8c:	ldr	r0, [r4]
   21d90:	ldr	r1, [r6, #4]
   21d94:	ldr	r7, [r1]
   21d98:	ldr	r1, [r1, #4]
   21d9c:	str	r8, [sp]
   21da0:	stmib	sp, {r1, r7}
   21da4:	str	r1, [sp, #12]
   21da8:	mov	r1, r5
   21dac:	b	21dd8 <__flatcc_fb_gen_c_json_printer@@Base+0x750>
   21db0:	ldrb	r2, [r6, #48]	; 0x30
   21db4:	ldr	r0, [r4]
   21db8:	ldr	r1, [r6, #4]
   21dbc:	ldr	r3, [r1]
   21dc0:	ldr	r1, [r1, #4]
   21dc4:	str	r8, [sp]
   21dc8:	stmib	sp, {r1, r3}
   21dcc:	str	r1, [sp, #12]
   21dd0:	mov	r1, r5
   21dd4:	mov	r3, #0
   21dd8:	bl	14890 <fprintf@plt>
   21ddc:	ldr	r6, [r6]
   21de0:	cmp	r6, #0
   21de4:	bne	21d68 <__flatcc_fb_gen_c_json_printer@@Base+0x6e0>
   21de8:	ldr	r3, [r4]
   21dec:	movw	r0, #43004	; 0xa7fc
   21df0:	movt	r0, #4
   21df4:	mov	r1, #59	; 0x3b
   21df8:	mov	r2, #1
   21dfc:	bl	14830 <fwrite@plt>
   21e00:	ldr	r3, [r4]
   21e04:	movw	r0, #47136	; 0xb820
   21e08:	movt	r0, #4
   21e0c:	mov	r1, #3
   21e10:	mov	r2, #1
   21e14:	bl	14830 <fwrite@plt>
   21e18:	sub	sp, fp, #28
   21e1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21e20:	movw	r0, #4264	; 0x10a8
   21e24:	movt	r0, #6
   21e28:	ldr	r0, [r0]
   21e2c:	movw	r1, #43227	; 0xa8db
   21e30:	movt	r1, #4
   21e34:	str	r1, [sp]
   21e38:	movw	r1, #21007	; 0x520f
   21e3c:	movt	r1, #3
   21e40:	movw	r4, #43141	; 0xa885
   21e44:	movt	r4, #4
   21e48:	mov	r2, r4
   21e4c:	mov	r3, #157	; 0x9d
   21e50:	bl	14890 <fprintf@plt>
   21e54:	movw	r0, #24925	; 0x615d
   21e58:	movt	r0, #4
   21e5c:	movw	r3, #43285	; 0xa915
   21e60:	movt	r3, #4
   21e64:	mov	r1, r4
   21e68:	mov	r2, #157	; 0x9d
   21e6c:	bl	14950 <__assert_fail@plt>
   21e70:	movw	r0, #4264	; 0x10a8
   21e74:	movt	r0, #6
   21e78:	ldr	r0, [r0]
   21e7c:	movw	r1, #43227	; 0xa8db
   21e80:	movt	r1, #4
   21e84:	str	r1, [sp]
   21e88:	movw	r1, #21007	; 0x520f
   21e8c:	movt	r1, #3
   21e90:	movw	r4, #43141	; 0xa885
   21e94:	movt	r4, #4
   21e98:	mov	r2, r4
   21e9c:	mov	r3, #134	; 0x86
   21ea0:	bl	14890 <fprintf@plt>
   21ea4:	movw	r0, #24925	; 0x615d
   21ea8:	movt	r0, #4
   21eac:	movw	r3, #43285	; 0xa915
   21eb0:	movt	r3, #4
   21eb4:	mov	r1, r4
   21eb8:	mov	r2, #134	; 0x86
   21ebc:	bl	14950 <__assert_fail@plt>
   21ec0:	sub	r0, r0, #1
   21ec4:	cmp	r0, #11
   21ec8:	movwcc	r1, #47456	; 0xb960
   21ecc:	movtcc	r1, #4
   21ed0:	ldrcc	r0, [r1, r0, lsl #2]
   21ed4:	bxcc	lr
   21ed8:	push	{r4, sl, fp, lr}
   21edc:	add	fp, sp, #8
   21ee0:	sub	sp, sp, #8
   21ee4:	movw	r0, #4264	; 0x10a8
   21ee8:	movt	r0, #6
   21eec:	ldr	r0, [r0]
   21ef0:	movw	r1, #47600	; 0xb9f0
   21ef4:	movt	r1, #3
   21ef8:	str	r1, [sp]
   21efc:	movw	r1, #21007	; 0x520f
   21f00:	movt	r1, #3
   21f04:	movw	r4, #47527	; 0xb9a7
   21f08:	movt	r4, #3
   21f0c:	mov	r2, r4
   21f10:	mov	r3, #96	; 0x60
   21f14:	bl	14890 <fprintf@plt>
   21f18:	movw	r0, #24925	; 0x615d
   21f1c:	movt	r0, #4
   21f20:	movw	r3, #49952	; 0xc320
   21f24:	movt	r3, #3
   21f28:	mov	r1, r4
   21f2c:	mov	r2, #96	; 0x60
   21f30:	bl	14950 <__assert_fail@plt>
   21f34:	sub	r0, r0, #1
   21f38:	cmp	r0, #11
   21f3c:	movwcc	r1, #47504	; 0xb990
   21f40:	movtcc	r1, #4
   21f44:	ldrcc	r0, [r1, r0, lsl #2]
   21f48:	bxcc	lr
   21f4c:	push	{r4, sl, fp, lr}
   21f50:	add	fp, sp, #8
   21f54:	sub	sp, sp, #8
   21f58:	movw	r0, #4264	; 0x10a8
   21f5c:	movt	r0, #6
   21f60:	ldr	r0, [r0]
   21f64:	movw	r1, #47600	; 0xb9f0
   21f68:	movt	r1, #3
   21f6c:	str	r1, [sp]
   21f70:	movw	r1, #21007	; 0x520f
   21f74:	movt	r1, #3
   21f78:	movw	r4, #47527	; 0xb9a7
   21f7c:	movt	r4, #3
   21f80:	mov	r2, r4
   21f84:	mov	r3, #141	; 0x8d
   21f88:	bl	14890 <fprintf@plt>
   21f8c:	movw	r0, #24925	; 0x615d
   21f90:	movt	r0, #4
   21f94:	movw	r3, #47655	; 0xba27
   21f98:	movt	r3, #3
   21f9c:	mov	r1, r4
   21fa0:	mov	r2, #141	; 0x8d
   21fa4:	bl	14950 <__assert_fail@plt>
   21fa8:	movw	r2, #21264	; 0x5310
   21fac:	movt	r2, #3
   21fb0:	cmp	r0, #5
   21fb4:	moveq	r2, r1
   21fb8:	mov	r0, r2
   21fbc:	bx	lr
   21fc0:	push	{r4, r5, fp, lr}
   21fc4:	add	fp, sp, #8
   21fc8:	mov	r4, r1
   21fcc:	mov	r5, r0
   21fd0:	bl	21fe4 <__flatcc_fb_gen_c_json_printer@@Base+0x95c>
   21fd4:	mov	r0, r5
   21fd8:	mov	r1, r4
   21fdc:	pop	{r4, r5, fp, lr}
   21fe0:	b	220b4 <__flatcc_fb_gen_c_json_printer@@Base+0xa2c>
   21fe4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   21fe8:	add	fp, sp, #24
   21fec:	sub	sp, sp, #232	; 0xe8
   21ff0:	mov	r5, r1
   21ff4:	mov	r4, r0
   21ff8:	add	r6, sp, #8
   21ffc:	mov	r0, r6
   22000:	mov	r1, #0
   22004:	mov	r2, #220	; 0xdc
   22008:	bl	148a8 <memset@plt>
   2200c:	mov	r0, r5
   22010:	mov	r1, r6
   22014:	bl	21a04 <__flatcc_fb_gen_c_json_printer@@Base+0x37c>
   22018:	ldr	r0, [r4, #204]	; 0xcc
   2201c:	movw	r1, #43625	; 0xaa69
   22020:	movt	r1, #4
   22024:	mov	r2, r6
   22028:	bl	14890 <fprintf@plt>
   2202c:	ldr	r6, [r5, #20]
   22030:	cmp	r6, #0
   22034:	beq	2207c <__flatcc_fb_gen_c_json_printer@@Base+0x9f4>
   22038:	movw	r7, #43739	; 0xaadb
   2203c:	movt	r7, #4
   22040:	ldrh	r0, [r6, #24]
   22044:	cmp	r0, #0
   22048:	beq	22070 <__flatcc_fb_gen_c_json_printer@@Base+0x9e8>
   2204c:	ldr	r0, [r4, #204]	; 0xcc
   22050:	ldr	r1, [r6, #4]
   22054:	ldr	r2, [r6, #48]	; 0x30
   22058:	ldr	r5, [r1]
   2205c:	ldr	r3, [r1, #4]
   22060:	str	r5, [sp]
   22064:	str	r3, [sp, #4]
   22068:	mov	r1, r7
   2206c:	bl	14890 <fprintf@plt>
   22070:	ldr	r6, [r6]
   22074:	cmp	r6, #0
   22078:	bne	22040 <__flatcc_fb_gen_c_json_printer@@Base+0x9b8>
   2207c:	ldr	r3, [r4, #204]	; 0xcc
   22080:	movw	r0, #43820	; 0xab2c
   22084:	movt	r0, #4
   22088:	mov	r1, #78	; 0x4e
   2208c:	mov	r2, #1
   22090:	bl	14830 <fwrite@plt>
   22094:	ldr	r3, [r4, #204]	; 0xcc
   22098:	movw	r0, #28964	; 0x7124
   2209c:	movt	r0, #4
   220a0:	mov	r1, #9
   220a4:	mov	r2, #1
   220a8:	bl	14830 <fwrite@plt>
   220ac:	sub	sp, fp, #24
   220b0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   220b4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   220b8:	add	fp, sp, #24
   220bc:	sub	sp, sp, #456	; 0x1c8
   220c0:	mov	r5, r1
   220c4:	mov	r4, r0
   220c8:	add	r6, sp, #232	; 0xe8
   220cc:	mov	r0, r6
   220d0:	mov	r1, #0
   220d4:	mov	r2, #220	; 0xdc
   220d8:	bl	148a8 <memset@plt>
   220dc:	add	r0, sp, #8
   220e0:	mov	r1, #0
   220e4:	mov	r2, #220	; 0xdc
   220e8:	bl	148a8 <memset@plt>
   220ec:	mov	r0, r5
   220f0:	mov	r1, r6
   220f4:	bl	21a04 <__flatcc_fb_gen_c_json_printer@@Base+0x37c>
   220f8:	ldr	r0, [r4, #204]	; 0xcc
   220fc:	movw	r1, #43899	; 0xab7b
   22100:	movt	r1, #4
   22104:	mov	r2, r6
   22108:	bl	14890 <fprintf@plt>
   2210c:	ldr	r7, [r5, #20]
   22110:	cmp	r7, #0
   22114:	beq	221b8 <__flatcc_fb_gen_c_json_printer@@Base+0xb30>
   22118:	movw	r5, #44342	; 0xad36
   2211c:	movt	r5, #4
   22120:	add	r6, sp, #8
   22124:	movw	r8, #44130	; 0xac62
   22128:	movt	r8, #4
   2212c:	movw	r9, #44030	; 0xabfe
   22130:	movt	r9, #4
   22134:	ldrh	r0, [r7, #24]
   22138:	cmp	r0, #0
   2213c:	beq	221ac <__flatcc_fb_gen_c_json_printer@@Base+0xb24>
   22140:	cmp	r0, #10
   22144:	beq	22184 <__flatcc_fb_gen_c_json_printer@@Base+0xafc>
   22148:	cmp	r0, #14
   2214c:	bne	221f0 <__flatcc_fb_gen_c_json_printer@@Base+0xb68>
   22150:	ldr	r0, [r7, #16]
   22154:	mov	r1, r6
   22158:	bl	21a04 <__flatcc_fb_gen_c_json_printer@@Base+0x37c>
   2215c:	ldr	r0, [r7, #16]
   22160:	ldrh	r0, [r0, #8]
   22164:	cmp	r0, #1
   22168:	beq	22198 <__flatcc_fb_gen_c_json_printer@@Base+0xb10>
   2216c:	cmp	r0, #0
   22170:	bne	22240 <__flatcc_fb_gen_c_json_printer@@Base+0xbb8>
   22174:	ldr	r2, [r7, #48]	; 0x30
   22178:	ldr	r0, [r4, #204]	; 0xcc
   2217c:	mov	r1, r9
   22180:	b	221a4 <__flatcc_fb_gen_c_json_printer@@Base+0xb1c>
   22184:	ldr	r2, [r7, #48]	; 0x30
   22188:	ldr	r0, [r4, #204]	; 0xcc
   2218c:	mov	r1, r5
   22190:	bl	14890 <fprintf@plt>
   22194:	b	221ac <__flatcc_fb_gen_c_json_printer@@Base+0xb24>
   22198:	ldr	r2, [r7, #48]	; 0x30
   2219c:	ldr	r0, [r4, #204]	; 0xcc
   221a0:	mov	r1, r8
   221a4:	mov	r3, r6
   221a8:	bl	14890 <fprintf@plt>
   221ac:	ldr	r7, [r7]
   221b0:	cmp	r7, #0
   221b4:	bne	22134 <__flatcc_fb_gen_c_json_printer@@Base+0xaac>
   221b8:	ldr	r3, [r4, #204]	; 0xcc
   221bc:	movw	r0, #44422	; 0xad86
   221c0:	movt	r0, #4
   221c4:	mov	r1, #28
   221c8:	mov	r2, #1
   221cc:	bl	14830 <fwrite@plt>
   221d0:	ldr	r3, [r4, #204]	; 0xcc
   221d4:	movw	r0, #28964	; 0x7124
   221d8:	movt	r0, #4
   221dc:	mov	r1, #9
   221e0:	mov	r2, #1
   221e4:	bl	14830 <fwrite@plt>
   221e8:	sub	sp, fp, #24
   221ec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   221f0:	movw	r0, #4264	; 0x10a8
   221f4:	movt	r0, #6
   221f8:	ldr	r0, [r0]
   221fc:	movw	r1, #44232	; 0xacc8
   22200:	movt	r1, #4
   22204:	str	r1, [sp]
   22208:	movw	r1, #21007	; 0x520f
   2220c:	movt	r1, #3
   22210:	movw	r4, #43141	; 0xa885
   22214:	movt	r4, #4
   22218:	mov	r2, r4
   2221c:	mov	r3, #251	; 0xfb
   22220:	bl	14890 <fprintf@plt>
   22224:	movw	r0, #24925	; 0x615d
   22228:	movt	r0, #4
   2222c:	movw	r3, #44271	; 0xacef
   22230:	movt	r3, #4
   22234:	mov	r1, r4
   22238:	mov	r2, #251	; 0xfb
   2223c:	bl	14950 <__assert_fail@plt>
   22240:	movw	r0, #4264	; 0x10a8
   22244:	movt	r0, #6
   22248:	ldr	r0, [r0]
   2224c:	movw	r1, #44232	; 0xacc8
   22250:	movt	r1, #4
   22254:	str	r1, [sp]
   22258:	movw	r1, #21007	; 0x520f
   2225c:	movt	r1, #3
   22260:	movw	r4, #43141	; 0xa885
   22264:	movt	r4, #4
   22268:	mov	r2, r4
   2226c:	mov	r3, #240	; 0xf0
   22270:	bl	14890 <fprintf@plt>
   22274:	movw	r0, #24925	; 0x615d
   22278:	movt	r0, #4
   2227c:	movw	r3, #44271	; 0xacef
   22280:	movt	r3, #4
   22284:	mov	r1, r4
   22288:	mov	r2, #240	; 0xf0
   2228c:	bl	14950 <__assert_fail@plt>
   22290:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22294:	add	fp, sp, #28
   22298:	sub	sp, sp, #476	; 0x1dc
   2229c:	mov	r7, r1
   222a0:	mov	r9, r0
   222a4:	add	r6, sp, #248	; 0xf8
   222a8:	mov	r5, #0
   222ac:	mov	r0, r6
   222b0:	mov	r1, #0
   222b4:	mov	r2, #220	; 0xdc
   222b8:	bl	148a8 <memset@plt>
   222bc:	add	sl, sp, #24
   222c0:	mov	r0, sl
   222c4:	mov	r1, #0
   222c8:	mov	r2, #220	; 0xdc
   222cc:	bl	148a8 <memset@plt>
   222d0:	mov	r0, r7
   222d4:	mov	r1, r6
   222d8:	bl	21a04 <__flatcc_fb_gen_c_json_printer@@Base+0x37c>
   222dc:	ldr	r0, [r9, #204]	; 0xcc
   222e0:	movw	r1, #44451	; 0xada3
   222e4:	movt	r1, #4
   222e8:	mov	r2, r6
   222ec:	bl	14890 <fprintf@plt>
   222f0:	ldr	r6, [r7, #20]
   222f4:	cmp	r6, #0
   222f8:	beq	2241c <__flatcc_fb_gen_c_json_printer@@Base+0xd94>
   222fc:	movw	r8, #44530	; 0xadf2
   22300:	movt	r8, #4
   22304:	ldrb	r0, [r6, #72]	; 0x48
   22308:	tst	r0, #4
   2230c:	bne	2240c <__flatcc_fb_gen_c_json_printer@@Base+0xd84>
   22310:	ldrh	r0, [r6, #24]
   22314:	cmp	r0, #14
   22318:	beq	22360 <__flatcc_fb_gen_c_json_printer@@Base+0xcd8>
   2231c:	cmp	r0, #8
   22320:	bne	2240c <__flatcc_fb_gen_c_json_printer@@Base+0xd84>
   22324:	ldr	r0, [r6, #16]
   22328:	bl	21ec0 <__flatcc_fb_gen_c_json_printer@@Base+0x838>
   2232c:	mov	r2, r0
   22330:	ldr	r0, [r9, #204]	; 0xcc
   22334:	ldr	r1, [r6, #4]
   22338:	ldr	r3, [r6, #80]	; 0x50
   2233c:	ldr	r7, [r6, #84]	; 0x54
   22340:	ldr	r4, [r1]
   22344:	ldr	r1, [r1, #4]
   22348:	stm	sp, {r3, r7}
   2234c:	str	r1, [sp, #8]
   22350:	str	r4, [sp, #12]
   22354:	str	r1, [sp, #16]
   22358:	mov	r1, r8
   2235c:	b	223c8 <__flatcc_fb_gen_c_json_printer@@Base+0xd40>
   22360:	ldr	r0, [r6, #16]
   22364:	mov	r1, sl
   22368:	bl	21a04 <__flatcc_fb_gen_c_json_printer@@Base+0x37c>
   2236c:	ldr	r0, [r6, #16]
   22370:	ldrh	r1, [r0, #8]
   22374:	cmp	r1, #1
   22378:	beq	223d4 <__flatcc_fb_gen_c_json_printer@@Base+0xd4c>
   2237c:	cmp	r1, #3
   22380:	bne	2240c <__flatcc_fb_gen_c_json_printer@@Base+0xd84>
   22384:	ldr	r0, [r0, #40]	; 0x28
   22388:	bl	21ec0 <__flatcc_fb_gen_c_json_printer@@Base+0x838>
   2238c:	mov	r2, r0
   22390:	ldr	r0, [r9, #204]	; 0xcc
   22394:	ldr	r1, [r6, #4]
   22398:	ldr	r4, [r6, #80]	; 0x50
   2239c:	ldr	r3, [r6, #84]	; 0x54
   223a0:	ldr	r7, [r1]
   223a4:	ldr	r1, [r1, #4]
   223a8:	str	r4, [sp]
   223ac:	str	r3, [sp, #4]
   223b0:	str	r1, [sp, #8]
   223b4:	str	r7, [sp, #12]
   223b8:	str	r1, [sp, #16]
   223bc:	str	sl, [sp, #20]
   223c0:	movw	r1, #44603	; 0xae3b
   223c4:	movt	r1, #4
   223c8:	mov	r3, r5
   223cc:	bl	14890 <fprintf@plt>
   223d0:	b	2240c <__flatcc_fb_gen_c_json_printer@@Base+0xd84>
   223d4:	ldr	r0, [r9, #204]	; 0xcc
   223d8:	ldr	r1, [r6, #4]
   223dc:	ldrd	r2, [r6, #80]	; 0x50
   223e0:	ldr	r7, [r1]
   223e4:	ldr	r1, [r1, #4]
   223e8:	stm	sp, {r2, r3}
   223ec:	str	r1, [sp, #8]
   223f0:	str	r7, [sp, #12]
   223f4:	str	r1, [sp, #16]
   223f8:	str	sl, [sp, #20]
   223fc:	movw	r1, #44701	; 0xae9d
   22400:	movt	r1, #4
   22404:	mov	r2, r5
   22408:	bl	14890 <fprintf@plt>
   2240c:	add	r5, r5, #1
   22410:	ldr	r6, [r6]
   22414:	cmp	r6, #0
   22418:	bne	22304 <__flatcc_fb_gen_c_json_printer@@Base+0xc7c>
   2241c:	ldr	r3, [r9, #204]	; 0xcc
   22420:	movw	r0, #47136	; 0xb820
   22424:	movt	r0, #4
   22428:	mov	r1, #3
   2242c:	mov	r2, #1
   22430:	bl	14830 <fwrite@plt>
   22434:	ldr	r0, [r9, #204]	; 0xcc
   22438:	movw	r1, #44802	; 0xaf02
   2243c:	movt	r1, #4
   22440:	add	r2, sp, #248	; 0xf8
   22444:	mov	r3, r2
   22448:	bl	14890 <fprintf@plt>
   2244c:	sub	sp, fp, #28
   22450:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22454:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22458:	add	fp, sp, #28
   2245c:	sub	sp, sp, #500	; 0x1f4
   22460:	mov	r7, r1
   22464:	mov	r8, r0
   22468:	sub	r5, fp, #256	; 0x100
   2246c:	mov	r0, r5
   22470:	mov	r1, #0
   22474:	mov	r2, #220	; 0xdc
   22478:	bl	148a8 <memset@plt>
   2247c:	add	r0, sp, #48	; 0x30
   22480:	mov	r1, #0
   22484:	mov	r2, #220	; 0xdc
   22488:	bl	148a8 <memset@plt>
   2248c:	mov	r0, r7
   22490:	mov	r1, r5
   22494:	bl	21a04 <__flatcc_fb_gen_c_json_printer@@Base+0x37c>
   22498:	mov	sl, r7
   2249c:	ldr	r6, [sl, #96]!	; 0x60
   224a0:	ldr	r4, [sl, #4]
   224a4:	mov	r0, r6
   224a8:	mov	r1, #4
   224ac:	bl	147ac <calloc@plt>
   224b0:	mov	r5, r0
   224b4:	orrs	r0, r6, r4
   224b8:	beq	224c4 <__flatcc_fb_gen_c_json_printer@@Base+0xe3c>
   224bc:	cmp	r5, #0
   224c0:	beq	22c74 <__flatcc_fb_gen_c_json_printer@@Base+0x15ec>
   224c4:	ldr	r0, [r7, #20]
   224c8:	cmp	r0, #0
   224cc:	beq	224e4 <__flatcc_fb_gen_c_json_printer@@Base+0xe5c>
   224d0:	ldr	r1, [r0, #96]	; 0x60
   224d4:	str	r0, [r5, r1, lsl #2]
   224d8:	ldr	r0, [r0]
   224dc:	cmp	r0, #0
   224e0:	bne	224d0 <__flatcc_fb_gen_c_json_printer@@Base+0xe48>
   224e4:	mov	r4, r8
   224e8:	ldr	r0, [r4, #204]!	; 0xcc
   224ec:	movw	r1, #45123	; 0xb043
   224f0:	movt	r1, #4
   224f4:	sub	r2, fp, #256	; 0x100
   224f8:	bl	14890 <fprintf@plt>
   224fc:	ldrd	r0, [sl]
   22500:	orrs	r0, r0, r1
   22504:	beq	22aec <__flatcc_fb_gen_c_json_printer@@Base+0x1464>
   22508:	add	r0, r7, #112	; 0x70
   2250c:	str	r0, [sp, #40]	; 0x28
   22510:	mov	r8, #0
   22514:	mov	r6, #0
   22518:	str	r4, [sp, #44]	; 0x2c
   2251c:	ldr	r9, [r5, r8, lsl #2]
   22520:	cmp	r9, #0
   22524:	beq	22ad4 <__flatcc_fb_gen_c_json_printer@@Base+0x144c>
   22528:	ldrb	r0, [r9, #72]	; 0x48
   2252c:	tst	r0, #4
   22530:	bne	22ad4 <__flatcc_fb_gen_c_json_printer@@Base+0x144c>
   22534:	ldr	r3, [r4]
   22538:	movw	r0, #45229	; 0xb0ad
   2253c:	movt	r0, #4
   22540:	mov	r1, #5
   22544:	mov	r2, #1
   22548:	bl	14830 <fwrite@plt>
   2254c:	ldrh	r0, [r9, #24]
   22550:	sub	r0, r0, #7
   22554:	cmp	r0, #8
   22558:	bhi	22ad4 <__flatcc_fb_gen_c_json_printer@@Base+0x144c>
   2255c:	add	r1, pc, #0
   22560:	ldr	pc, [r1, r0, lsl #2]
   22564:	andeq	r2, r2, r8, lsl #11
   22568:	andeq	r2, r2, r0, ror r6
   2256c:	ldrdeq	r2, [r2], -r8
   22570:	andeq	r2, r2, r8, ror #13
   22574:	ldrdeq	r2, [r2], -r4
   22578:	ldrdeq	r2, [r2], -r4
   2257c:	ldrdeq	r2, [r2], -r4
   22580:	andeq	r2, r2, r4, lsl r7
   22584:	andeq	r2, r2, r4, lsl #12
   22588:	ldrh	r0, [r9, #72]	; 0x48
   2258c:	tst	r0, #3072	; 0xc00
   22590:	beq	227c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1140>
   22594:	mov	r1, #1
   22598:	bic	r1, r1, r0, lsr #10
   2259c:	ldr	r0, [r4]
   225a0:	ldr	r2, [r9, #4]
   225a4:	ldr	r4, [r9, #96]	; 0x60
   225a8:	ldr	r3, [r9, #100]	; 0x64
   225ac:	ldr	r7, [r2]
   225b0:	ldr	r2, [r2, #4]
   225b4:	stm	sp, {r2, r7}
   225b8:	str	r2, [sp, #8]
   225bc:	str	r1, [sp, #12]
   225c0:	movw	r1, #45426	; 0xb172
   225c4:	movt	r1, #4
   225c8:	mov	r2, r4
   225cc:	ldr	r4, [sp, #44]	; 0x2c
   225d0:	bl	14890 <fprintf@plt>
   225d4:	b	22ad4 <__flatcc_fb_gen_c_json_printer@@Base+0x144c>
   225d8:	ldr	r0, [r4]
   225dc:	ldr	r1, [r9, #4]
   225e0:	ldrd	r2, [r9, #96]	; 0x60
   225e4:	ldr	r7, [r1]
   225e8:	ldr	r1, [r1, #4]
   225ec:	stm	sp, {r1, r7}
   225f0:	str	r1, [sp, #8]
   225f4:	movw	r1, #45822	; 0xb2fe
   225f8:	movt	r1, #4
   225fc:	bl	14890 <fprintf@plt>
   22600:	b	22ad4 <__flatcc_fb_gen_c_json_printer@@Base+0x144c>
   22604:	ldr	r0, [r9, #16]
   22608:	add	r1, sp, #48	; 0x30
   2260c:	bl	21a04 <__flatcc_fb_gen_c_json_printer@@Base+0x37c>
   22610:	ldr	r0, [r9, #16]
   22614:	ldrh	r0, [r0, #8]
   22618:	cmp	r0, #4
   2261c:	bhi	22b34 <__flatcc_fb_gen_c_json_printer@@Base+0x14ac>
   22620:	add	r1, pc, #0
   22624:	ldr	pc, [r1, r0, lsl #2]
   22628:	andeq	r2, r2, ip, lsr r6
   2262c:	andeq	r2, r2, r4, asr r8
   22630:	andeq	r2, r2, r4, lsr fp
   22634:	ldrdeq	r2, [r2], -r4
   22638:	andeq	r2, r2, ip, lsl r8
   2263c:	ldr	r0, [r4]
   22640:	ldr	r1, [r9, #4]
   22644:	ldrd	r2, [r9, #96]	; 0x60
   22648:	ldr	r7, [r1]
   2264c:	ldr	r1, [r1, #4]
   22650:	stm	sp, {r1, r7}
   22654:	str	r1, [sp, #8]
   22658:	add	r1, sp, #48	; 0x30
   2265c:	str	r1, [sp, #12]
   22660:	movw	r1, #46461	; 0xb57d
   22664:	movt	r1, #4
   22668:	bl	14890 <fprintf@plt>
   2266c:	b	22ad4 <__flatcc_fb_gen_c_json_printer@@Base+0x144c>
   22670:	ldr	r0, [r9, #16]
   22674:	bl	21ec0 <__flatcc_fb_gen_c_json_printer@@Base+0x838>
   22678:	mov	ip, r0
   2267c:	add	r1, r9, #48	; 0x30
   22680:	ldrh	r0, [r9, #56]	; 0x38
   22684:	sub	r3, r0, #5
   22688:	cmp	r3, #2
   2268c:	bcc	22784 <__flatcc_fb_gen_c_json_printer@@Base+0x10fc>
   22690:	cmp	r0, #3
   22694:	beq	2289c <__flatcc_fb_gen_c_json_printer@@Base+0x1214>
   22698:	cmp	r0, #4
   2269c:	bne	22b84 <__flatcc_fb_gen_c_json_printer@@Base+0x14fc>
   226a0:	ldr	r0, [r4]
   226a4:	ldr	r2, [r9, #4]
   226a8:	ldr	r4, [r9, #96]	; 0x60
   226ac:	ldr	r3, [r9, #100]	; 0x64
   226b0:	ldr	r7, [r2]
   226b4:	ldr	r2, [r2, #4]
   226b8:	ldm	r1, {r1, r9}
   226bc:	str	r1, [sp, #24]
   226c0:	str	r9, [sp, #28]
   226c4:	str	r4, [sp]
   226c8:	ldr	r4, [sp, #44]	; 0x2c
   226cc:	str	r3, [sp, #4]
   226d0:	str	r2, [sp, #8]
   226d4:	str	r7, [sp, #12]
   226d8:	str	r2, [sp, #16]
   226dc:	movw	r1, #45299	; 0xb0f3
   226e0:	movt	r1, #4
   226e4:	b	22acc <__flatcc_fb_gen_c_json_printer@@Base+0x1444>
   226e8:	ldr	r0, [r4]
   226ec:	ldr	r1, [r9, #4]
   226f0:	ldrd	r2, [r9, #96]	; 0x60
   226f4:	ldr	r7, [r1]
   226f8:	ldr	r1, [r1, #4]
   226fc:	stm	sp, {r1, r7}
   22700:	str	r1, [sp, #8]
   22704:	movw	r1, #45760	; 0xb2c0
   22708:	movt	r1, #4
   2270c:	bl	14890 <fprintf@plt>
   22710:	b	22ad4 <__flatcc_fb_gen_c_json_printer@@Base+0x144c>
   22714:	ldr	r0, [r9, #16]
   22718:	add	r7, sp, #48	; 0x30
   2271c:	mov	r1, r7
   22720:	bl	21a04 <__flatcc_fb_gen_c_json_printer@@Base+0x37c>
   22724:	ldr	r0, [r9, #16]
   22728:	ldrh	r1, [r0, #8]
   2272c:	cmp	r1, #4
   22730:	bhi	22bd4 <__flatcc_fb_gen_c_json_printer@@Base+0x154c>
   22734:	add	r2, pc, #0
   22738:	ldr	pc, [r2, r1, lsl #2]
   2273c:	andeq	r2, r2, r0, asr r7
   22740:	andeq	r2, r2, ip, ror #18
   22744:	ldrdeq	r2, [r2], -r4
   22748:	andeq	r2, r2, r0, lsr #19
   2274c:	andeq	r2, r2, r4, lsr r9
   22750:	ldr	r0, [r4]
   22754:	ldr	r1, [r9, #4]
   22758:	ldrd	r2, [r9, #96]	; 0x60
   2275c:	mov	ip, r7
   22760:	ldr	r7, [r1]
   22764:	ldr	r1, [r1, #4]
   22768:	stm	sp, {r1, r7}
   2276c:	str	r1, [sp, #8]
   22770:	str	ip, [sp, #12]
   22774:	movw	r1, #46209	; 0xb481
   22778:	movt	r1, #4
   2277c:	bl	14890 <fprintf@plt>
   22780:	b	22ad4 <__flatcc_fb_gen_c_json_printer@@Base+0x144c>
   22784:	ldr	r0, [r4]
   22788:	ldr	r3, [r9, #4]
   2278c:	ldr	r4, [r9, #96]	; 0x60
   22790:	ldr	r7, [r9, #100]	; 0x64
   22794:	ldm	r3, {r2, r3}
   22798:	ldm	r1, {r1, r9}
   2279c:	str	r1, [sp, #24]
   227a0:	str	r9, [sp, #28]
   227a4:	str	r4, [sp]
   227a8:	ldr	r4, [sp, #44]	; 0x2c
   227ac:	str	r7, [sp, #4]
   227b0:	str	r3, [sp, #8]
   227b4:	str	r2, [sp, #12]
   227b8:	str	r3, [sp, #16]
   227bc:	movw	r1, #45235	; 0xb0b3
   227c0:	movt	r1, #4
   227c4:	b	22acc <__flatcc_fb_gen_c_json_printer@@Base+0x1444>
   227c8:	ldr	r0, [r9, #104]	; 0x68
   227cc:	cmp	r0, #0
   227d0:	beq	22a0c <__flatcc_fb_gen_c_json_printer@@Base+0x1384>
   227d4:	add	r1, sp, #48	; 0x30
   227d8:	bl	21a04 <__flatcc_fb_gen_c_json_printer@@Base+0x37c>
   227dc:	ldr	r0, [r4]
   227e0:	ldr	r1, [r9, #4]
   227e4:	add	r4, r9, #96	; 0x60
   227e8:	ldm	r4, {r2, r3, r4}
   227ec:	ldr	r7, [r1]
   227f0:	ldr	r1, [r1, #4]
   227f4:	ldrh	r4, [r4, #8]
   227f8:	cmp	r4, #0
   227fc:	beq	22a54 <__flatcc_fb_gen_c_json_printer@@Base+0x13cc>
   22800:	stm	sp, {r1, r7}
   22804:	str	r1, [sp, #8]
   22808:	add	r1, sp, #48	; 0x30
   2280c:	str	r1, [sp, #12]
   22810:	movw	r1, #45599	; 0xb21f
   22814:	movt	r1, #4
   22818:	b	22a6c <__flatcc_fb_gen_c_json_printer@@Base+0x13e4>
   2281c:	ldr	r0, [r4]
   22820:	ldr	r1, [r9, #4]
   22824:	ldrd	r2, [r9, #96]	; 0x60
   22828:	ldr	r7, [r1]
   2282c:	ldr	r1, [r1, #4]
   22830:	stm	sp, {r1, r7}
   22834:	str	r1, [sp, #8]
   22838:	add	r1, sp, #48	; 0x30
   2283c:	str	r1, [sp, #12]
   22840:	str	r1, [sp, #16]
   22844:	movw	r1, #46743	; 0xb697
   22848:	movt	r1, #4
   2284c:	bl	14890 <fprintf@plt>
   22850:	b	22ad4 <__flatcc_fb_gen_c_json_printer@@Base+0x144c>
   22854:	ldr	ip, [r9, #88]	; 0x58
   22858:	ldr	r7, [r9, #92]	; 0x5c
   2285c:	ldr	r2, [r9, #96]	; 0x60
   22860:	ldr	r3, [r9, #100]	; 0x64
   22864:	ldr	r0, [r4]
   22868:	ldr	r4, [r9, #4]
   2286c:	ldm	r4, {r1, r4}
   22870:	str	ip, [sp, #16]
   22874:	str	r7, [sp, #20]
   22878:	add	r7, sp, #48	; 0x30
   2287c:	str	r7, [sp, #24]
   22880:	str	r4, [sp]
   22884:	stmib	sp, {r1, r4}
   22888:	ldr	r4, [sp, #44]	; 0x2c
   2288c:	movw	r1, #46646	; 0xb636
   22890:	movt	r1, #4
   22894:	bl	14890 <fprintf@plt>
   22898:	b	22ad4 <__flatcc_fb_gen_c_json_printer@@Base+0x144c>
   2289c:	ldr	r0, [r4]
   228a0:	ldrd	r2, [r9, #96]	; 0x60
   228a4:	ldr	r1, [r9, #4]
   228a8:	vldr	d16, [r9, #48]	; 0x30
   228ac:	ldr	r7, [r1]
   228b0:	ldr	r1, [r1, #4]
   228b4:	vstr	d16, [sp, #24]
   228b8:	stm	sp, {r2, r3}
   228bc:	str	r1, [sp, #8]
   228c0:	str	r7, [sp, #12]
   228c4:	str	r1, [sp, #16]
   228c8:	movw	r1, #45363	; 0xb133
   228cc:	movt	r1, #4
   228d0:	b	22acc <__flatcc_fb_gen_c_json_printer@@Base+0x1444>
   228d4:	ldr	r0, [r9, #16]
   228d8:	bl	21ec0 <__flatcc_fb_gen_c_json_printer@@Base+0x838>
   228dc:	mov	ip, r0
   228e0:	ldr	r0, [r4]
   228e4:	ldr	r1, [sp, #40]	; 0x28
   228e8:	ldr	r4, [r1]
   228ec:	ldr	r1, [r1, #4]
   228f0:	ldr	r3, [r9, #4]
   228f4:	ldr	r2, [r9, #96]	; 0x60
   228f8:	ldr	r9, [r9, #100]	; 0x64
   228fc:	ldr	r7, [r3]
   22900:	ldr	r3, [r3, #4]
   22904:	str	r4, [sp, #24]
   22908:	ldr	r4, [sp, #44]	; 0x2c
   2290c:	str	r1, [sp, #28]
   22910:	add	r1, sp, #48	; 0x30
   22914:	str	r1, [sp, #32]
   22918:	stm	sp, {r2, r9}
   2291c:	str	r3, [sp, #8]
   22920:	str	r7, [sp, #12]
   22924:	str	r3, [sp, #16]
   22928:	movw	r1, #46550	; 0xb5d6
   2292c:	movt	r1, #4
   22930:	b	22acc <__flatcc_fb_gen_c_json_printer@@Base+0x1444>
   22934:	ldr	r0, [r4]
   22938:	ldr	r1, [r9, #4]
   2293c:	ldrd	r2, [r9, #96]	; 0x60
   22940:	mov	ip, r7
   22944:	ldr	r7, [r1]
   22948:	ldr	r1, [r1, #4]
   2294c:	stm	sp, {r1, r7}
   22950:	str	r1, [sp, #8]
   22954:	str	ip, [sp, #12]
   22958:	str	ip, [sp, #16]
   2295c:	movw	r1, #46291	; 0xb4d3
   22960:	movt	r1, #4
   22964:	bl	14890 <fprintf@plt>
   22968:	b	22ad4 <__flatcc_fb_gen_c_json_printer@@Base+0x144c>
   2296c:	ldr	r0, [r4]
   22970:	ldr	r1, [r9, #4]
   22974:	ldrd	r2, [r9, #96]	; 0x60
   22978:	mov	ip, r7
   2297c:	ldr	r7, [r1]
   22980:	ldr	r1, [r1, #4]
   22984:	stm	sp, {r1, r7}
   22988:	str	r1, [sp, #8]
   2298c:	str	ip, [sp, #12]
   22990:	movw	r1, #46125	; 0xb42d
   22994:	movt	r1, #4
   22998:	bl	14890 <fprintf@plt>
   2299c:	b	22ad4 <__flatcc_fb_gen_c_json_printer@@Base+0x144c>
   229a0:	ldr	r0, [r0, #40]	; 0x28
   229a4:	bl	21ec0 <__flatcc_fb_gen_c_json_printer@@Base+0x838>
   229a8:	mov	ip, r0
   229ac:	add	r1, r9, #48	; 0x30
   229b0:	ldrh	r0, [r9, #56]	; 0x38
   229b4:	sub	r3, r0, #5
   229b8:	cmp	r3, #2
   229bc:	bcs	22a78 <__flatcc_fb_gen_c_json_printer@@Base+0x13f0>
   229c0:	ldr	r0, [r4]
   229c4:	ldr	r3, [r9, #4]
   229c8:	mov	lr, r7
   229cc:	ldr	r4, [r9, #96]	; 0x60
   229d0:	ldr	r7, [r9, #100]	; 0x64
   229d4:	ldm	r3, {r2, r3}
   229d8:	ldm	r1, {r1, r9}
   229dc:	str	r1, [sp, #24]
   229e0:	str	r9, [sp, #28]
   229e4:	str	lr, [sp, #32]
   229e8:	str	r4, [sp]
   229ec:	ldr	r4, [sp, #44]	; 0x2c
   229f0:	str	r7, [sp, #4]
   229f4:	str	r3, [sp, #8]
   229f8:	str	r2, [sp, #12]
   229fc:	str	r3, [sp, #16]
   22a00:	movw	r1, #45891	; 0xb343
   22a04:	movt	r1, #4
   22a08:	b	22acc <__flatcc_fb_gen_c_json_printer@@Base+0x1444>
   22a0c:	ldr	r0, [r9, #16]
   22a10:	bl	21ec0 <__flatcc_fb_gen_c_json_printer@@Base+0x838>
   22a14:	mov	r2, r0
   22a18:	ldr	r0, [r4]
   22a1c:	ldr	r1, [r9, #4]
   22a20:	ldr	r4, [r9, #96]	; 0x60
   22a24:	ldr	r3, [r9, #100]	; 0x64
   22a28:	ldr	r7, [r1]
   22a2c:	ldr	r1, [r1, #4]
   22a30:	str	r4, [sp]
   22a34:	ldr	r4, [sp, #44]	; 0x2c
   22a38:	str	r3, [sp, #4]
   22a3c:	str	r1, [sp, #8]
   22a40:	str	r7, [sp, #12]
   22a44:	str	r1, [sp, #16]
   22a48:	movw	r1, #45695	; 0xb27f
   22a4c:	movt	r1, #4
   22a50:	b	22ad0 <__flatcc_fb_gen_c_json_printer@@Base+0x1448>
   22a54:	stm	sp, {r1, r7}
   22a58:	str	r1, [sp, #8]
   22a5c:	add	r1, sp, #48	; 0x30
   22a60:	str	r1, [sp, #12]
   22a64:	movw	r1, #45505	; 0xb1c1
   22a68:	movt	r1, #4
   22a6c:	bl	14890 <fprintf@plt>
   22a70:	ldr	r4, [sp, #44]	; 0x2c
   22a74:	b	22ad4 <__flatcc_fb_gen_c_json_printer@@Base+0x144c>
   22a78:	cmp	r0, #4
   22a7c:	bne	22c24 <__flatcc_fb_gen_c_json_printer@@Base+0x159c>
   22a80:	ldr	r0, [r4]
   22a84:	ldr	r2, [r9, #4]
   22a88:	ldr	r4, [r9, #96]	; 0x60
   22a8c:	ldr	r3, [r9, #100]	; 0x64
   22a90:	ldr	r7, [r2]
   22a94:	ldr	r2, [r2, #4]
   22a98:	ldm	r1, {r1, r9}
   22a9c:	str	r1, [sp, #24]
   22aa0:	str	r9, [sp, #28]
   22aa4:	add	r1, sp, #48	; 0x30
   22aa8:	str	r1, [sp, #32]
   22aac:	str	r4, [sp]
   22ab0:	ldr	r4, [sp, #44]	; 0x2c
   22ab4:	str	r3, [sp, #4]
   22ab8:	str	r2, [sp, #8]
   22abc:	str	r7, [sp, #12]
   22ac0:	str	r2, [sp, #16]
   22ac4:	movw	r1, #45980	; 0xb39c
   22ac8:	movt	r1, #4
   22acc:	mov	r2, ip
   22ad0:	bl	14890 <fprintf@plt>
   22ad4:	adds	r8, r8, #1
   22ad8:	adc	r6, r6, #0
   22adc:	ldrd	r0, [sl]
   22ae0:	subs	r0, r8, r0
   22ae4:	sbcs	r0, r6, r1
   22ae8:	bcc	2251c <__flatcc_fb_gen_c_json_printer@@Base+0xe94>
   22aec:	ldr	r3, [r4]
   22af0:	movw	r0, #47135	; 0xb81f
   22af4:	movt	r0, #4
   22af8:	mov	r1, #4
   22afc:	mov	r2, #1
   22b00:	bl	14830 <fwrite@plt>
   22b04:	ldr	r0, [r4]
   22b08:	movw	r1, #46927	; 0xb74f
   22b0c:	movt	r1, #4
   22b10:	sub	r2, fp, #256	; 0x100
   22b14:	mov	r3, r2
   22b18:	bl	14890 <fprintf@plt>
   22b1c:	cmp	r5, #0
   22b20:	beq	22b2c <__flatcc_fb_gen_c_json_printer@@Base+0x14a4>
   22b24:	mov	r0, r5
   22b28:	bl	147dc <free@plt>
   22b2c:	sub	sp, fp, #28
   22b30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22b34:	movw	r0, #4264	; 0x10a8
   22b38:	movt	r0, #6
   22b3c:	ldr	r0, [r0]
   22b40:	movw	r1, #46858	; 0xb70a
   22b44:	movt	r1, #4
   22b48:	str	r1, [sp]
   22b4c:	movw	r1, #21007	; 0x520f
   22b50:	movt	r1, #3
   22b54:	movw	r4, #43141	; 0xa885
   22b58:	movt	r4, #4
   22b5c:	mov	r2, r4
   22b60:	movw	r3, #543	; 0x21f
   22b64:	bl	14890 <fprintf@plt>
   22b68:	movw	r0, #24925	; 0x615d
   22b6c:	movt	r0, #4
   22b70:	movw	r3, #45059	; 0xb003
   22b74:	movt	r3, #4
   22b78:	mov	r1, r4
   22b7c:	movw	r2, #543	; 0x21f
   22b80:	bl	14950 <__assert_fail@plt>
   22b84:	movw	r0, #4264	; 0x10a8
   22b88:	movt	r0, #6
   22b8c:	ldr	r0, [r0]
   22b90:	movw	r1, #37461	; 0x9255
   22b94:	movt	r1, #4
   22b98:	str	r1, [sp]
   22b9c:	movw	r1, #21007	; 0x520f
   22ba0:	movt	r1, #3
   22ba4:	movw	r4, #43141	; 0xa885
   22ba8:	movt	r4, #4
   22bac:	mov	r2, r4
   22bb0:	movw	r3, #406	; 0x196
   22bb4:	bl	14890 <fprintf@plt>
   22bb8:	movw	r0, #24925	; 0x615d
   22bbc:	movt	r0, #4
   22bc0:	movw	r3, #45059	; 0xb003
   22bc4:	movt	r3, #4
   22bc8:	mov	r1, r4
   22bcc:	movw	r2, #406	; 0x196
   22bd0:	bl	14950 <__assert_fail@plt>
   22bd4:	movw	r0, #4264	; 0x10a8
   22bd8:	movt	r0, #6
   22bdc:	ldr	r0, [r0]
   22be0:	movw	r1, #46399	; 0xb53f
   22be4:	movt	r1, #4
   22be8:	str	r1, [sp]
   22bec:	movw	r1, #21007	; 0x520f
   22bf0:	movt	r1, #3
   22bf4:	movw	r4, #43141	; 0xa885
   22bf8:	movt	r4, #4
   22bfc:	mov	r2, r4
   22c00:	mov	r3, #504	; 0x1f8
   22c04:	bl	14890 <fprintf@plt>
   22c08:	movw	r0, #24925	; 0x615d
   22c0c:	movt	r0, #4
   22c10:	movw	r3, #45059	; 0xb003
   22c14:	movt	r3, #4
   22c18:	mov	r1, r4
   22c1c:	mov	r2, #504	; 0x1f8
   22c20:	bl	14950 <__assert_fail@plt>
   22c24:	movw	r0, #4264	; 0x10a8
   22c28:	movt	r0, #6
   22c2c:	ldr	r0, [r0]
   22c30:	movw	r1, #46069	; 0xb3f5
   22c34:	movt	r1, #4
   22c38:	str	r1, [sp]
   22c3c:	movw	r1, #21007	; 0x520f
   22c40:	movt	r1, #3
   22c44:	movw	r4, #43141	; 0xa885
   22c48:	movt	r4, #4
   22c4c:	mov	r2, r4
   22c50:	movw	r3, #483	; 0x1e3
   22c54:	bl	14890 <fprintf@plt>
   22c58:	movw	r0, #24925	; 0x615d
   22c5c:	movt	r0, #4
   22c60:	movw	r3, #45059	; 0xb003
   22c64:	movt	r3, #4
   22c68:	mov	r1, r4
   22c6c:	movw	r2, #483	; 0x1e3
   22c70:	bl	14950 <__assert_fail@plt>
   22c74:	movw	r0, #4264	; 0x10a8
   22c78:	movt	r0, #6
   22c7c:	ldr	r0, [r0]
   22c80:	movw	r1, #45017	; 0xafd9
   22c84:	movt	r1, #4
   22c88:	str	r1, [sp]
   22c8c:	movw	r1, #21007	; 0x520f
   22c90:	movt	r1, #3
   22c94:	movw	r4, #43141	; 0xa885
   22c98:	movt	r4, #4
   22c9c:	mov	r2, r4
   22ca0:	movw	r3, #361	; 0x169
   22ca4:	bl	14890 <fprintf@plt>
   22ca8:	movw	r0, #24925	; 0x615d
   22cac:	movt	r0, #4
   22cb0:	movw	r3, #45059	; 0xb003
   22cb4:	movt	r3, #4
   22cb8:	mov	r1, r4
   22cbc:	movw	r2, #361	; 0x169
   22cc0:	bl	14950 <__assert_fail@plt>
   22cc4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   22cc8:	add	fp, sp, #24
   22ccc:	sub	sp, sp, #224	; 0xe0
   22cd0:	mov	r5, r1
   22cd4:	mov	r4, r0
   22cd8:	mov	r6, sp
   22cdc:	mov	r0, r6
   22ce0:	mov	r1, #0
   22ce4:	mov	r2, #220	; 0xdc
   22ce8:	bl	148a8 <memset@plt>
   22cec:	mov	r0, r5
   22cf0:	mov	r1, r6
   22cf4:	bl	21a04 <__flatcc_fb_gen_c_json_printer@@Base+0x37c>
   22cf8:	ldr	r0, [r4, #204]	; 0xcc
   22cfc:	ldr	r1, [r4, #208]	; 0xd0
   22d00:	ldr	r2, [r1, #160]	; 0xa0
   22d04:	movw	r1, #47140	; 0xb824
   22d08:	movt	r1, #4
   22d0c:	bl	14890 <fprintf@plt>
   22d10:	ldr	r0, [r4, #204]	; 0xcc
   22d14:	movw	r1, #47226	; 0xb87a
   22d18:	movt	r1, #4
   22d1c:	mov	r2, r6
   22d20:	bl	14890 <fprintf@plt>
   22d24:	ldr	r3, [r4, #204]	; 0xcc
   22d28:	ldr	r0, [r4, #208]	; 0xd0
   22d2c:	ldrh	r1, [r0, #16]
   22d30:	cmp	r1, #2
   22d34:	bne	22d58 <__flatcc_fb_gen_c_json_printer@@Base+0x16d0>
   22d38:	ldrd	r6, [r0, #8]
   22d3c:	movw	r1, #47408	; 0xb930
   22d40:	movt	r1, #4
   22d44:	mov	r0, r3
   22d48:	mov	r2, r7
   22d4c:	mov	r3, r6
   22d50:	bl	14890 <fprintf@plt>
   22d54:	b	22d6c <__flatcc_fb_gen_c_json_printer@@Base+0x16e4>
   22d58:	movw	r0, #47418	; 0xb93a
   22d5c:	movt	r0, #4
   22d60:	mov	r1, #3
   22d64:	mov	r2, #1
   22d68:	bl	14830 <fwrite@plt>
   22d6c:	ldr	r3, [r4, #204]	; 0xcc
   22d70:	movw	r0, #47136	; 0xb820
   22d74:	movt	r0, #4
   22d78:	mov	r1, #3
   22d7c:	mov	r2, #1
   22d80:	bl	14830 <fwrite@plt>
   22d84:	sub	sp, fp, #24
   22d88:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   22d8c:	ldr	r1, [r0, #212]	; 0xd4
   22d90:	ldr	r1, [r1, #140]	; 0x8c
   22d94:	cmp	r1, #0
   22d98:	bxeq	lr
   22d9c:	ldr	r3, [r0, #204]	; 0xcc
   22da0:	movw	r0, #45228	; 0xb0ac
   22da4:	movt	r0, #3
   22da8:	mov	r1, #36	; 0x24
   22dac:	mov	r2, #1
   22db0:	b	14830 <fwrite@plt>

00022db4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base>:
   22db4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   22db8:	add	fp, sp, #24
   22dbc:	sub	sp, sp, #232	; 0xe8
   22dc0:	mov	r8, r3
   22dc4:	mov	r4, r2
   22dc8:	mov	r6, r1
   22dcc:	mov	r7, r0
   22dd0:	mov	r5, sp
   22dd4:	mov	r0, r5
   22dd8:	bl	2e50c <flatcc_builder_init@@Base>
   22ddc:	mov	r0, r5
   22de0:	mov	r1, r7
   22de4:	mov	r2, r6
   22de8:	bl	22e2c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x78>
   22dec:	ldr	r2, [r8]
   22df0:	mov	r0, r5
   22df4:	mov	r1, r4
   22df8:	bl	313e4 <flatcc_builder_copy_buffer@@Base>
   22dfc:	cmp	r0, #0
   22e00:	movne	r0, r4
   22e04:	blne	22f60 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1ac>
   22e08:	mov	r5, sp
   22e0c:	mov	r0, r5
   22e10:	bl	31300 <flatcc_builder_get_buffer_size@@Base>
   22e14:	str	r0, [r8]
   22e18:	mov	r0, r5
   22e1c:	bl	2e684 <flatcc_builder_clear@@Base>
   22e20:	mov	r0, r4
   22e24:	sub	sp, fp, #24
   22e28:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   22e2c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   22e30:	add	fp, sp, #24
   22e34:	sub	sp, sp, #48	; 0x30
   22e38:	mov	r5, r2
   22e3c:	mov	r7, r1
   22e40:	mov	r4, r0
   22e44:	ldr	r3, [r2, #60]	; 0x3c
   22e48:	ldr	r2, [r1, #184]	; 0xb8
   22e4c:	add	r0, sp, #4
   22e50:	mov	r1, r5
   22e54:	bl	231d4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b0>
   22e58:	mvn	r6, #0
   22e5c:	cmp	r0, #0
   22e60:	bne	22f54 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1a0>
   22e64:	ldr	r0, [sp, #8]
   22e68:	cmp	r0, #1
   22e6c:	blt	22e88 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd4>
   22e70:	lsl	r0, r0, #2
   22e74:	bl	14848 <malloc@plt>
   22e78:	cmp	r0, #0
   22e7c:	beq	22f4c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x198>
   22e80:	mov	r8, r0
   22e84:	b	22e8c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd8>
   22e88:	mov	r8, #0
   22e8c:	ldr	r0, [r7, #188]	; 0xbc
   22e90:	cmp	r0, #0
   22e94:	beq	22ea4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf0>
   22e98:	mov	r0, r4
   22e9c:	bl	23334 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x310>
   22ea0:	b	22eac <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf8>
   22ea4:	mov	r0, r4
   22ea8:	bl	23358 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x334>
   22eac:	ldrh	r0, [r5, #16]
   22eb0:	cmp	r0, #2
   22eb4:	bne	22ecc <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x118>
   22eb8:	ldrd	r2, [r5, #8]
   22ebc:	mov	r0, r4
   22ec0:	mov	r1, r2
   22ec4:	mov	r2, r3
   22ec8:	bl	2337c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x358>
   22ecc:	ldrh	r0, [r5, #32]
   22ed0:	cmp	r0, #2
   22ed4:	bne	22eec <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x138>
   22ed8:	ldrd	r2, [r5, #24]
   22edc:	mov	r0, r4
   22ee0:	mov	r1, r2
   22ee4:	mov	r2, r3
   22ee8:	bl	2339c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x378>
   22eec:	ldr	r2, [sp, #8]
   22ef0:	ldr	r1, [sp, #20]
   22ef4:	mov	r0, r4
   22ef8:	mov	r3, r8
   22efc:	bl	233bc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x398>
   22f00:	ldr	r2, [sp, #12]
   22f04:	ldr	r1, [sp, #24]
   22f08:	mov	r0, r4
   22f0c:	mov	r3, r8
   22f10:	bl	23480 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x45c>
   22f14:	ldr	r1, [r5, #52]	; 0x34
   22f18:	mov	r0, r4
   22f1c:	mov	r2, r8
   22f20:	bl	23574 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x550>
   22f24:	mov	r0, r4
   22f28:	bl	23598 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x574>
   22f2c:	add	r0, sp, #4
   22f30:	bl	232dc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2b8>
   22f34:	mov	r6, #0
   22f38:	cmp	r8, #0
   22f3c:	beq	22f54 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1a0>
   22f40:	mov	r0, r8
   22f44:	bl	147dc <free@plt>
   22f48:	b	22f54 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1a0>
   22f4c:	add	r0, sp, #4
   22f50:	bl	232dc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2b8>
   22f54:	mov	r0, r6
   22f58:	sub	sp, fp, #24
   22f5c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   22f60:	push	{r4, r5, fp, lr}
   22f64:	add	fp, sp, #8
   22f68:	bl	24848 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1824>
   22f6c:	bl	24880 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x185c>
   22f70:	mov	r4, r0
   22f74:	bl	24900 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x18dc>
   22f78:	cmp	r0, #0
   22f7c:	popeq	{r4, r5, fp, pc}
   22f80:	mov	r5, #0
   22f84:	mov	r0, r4
   22f88:	mov	r1, r5
   22f8c:	bl	24914 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x18f0>
   22f90:	bl	24964 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1940>
   22f94:	bl	249e4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19c0>
   22f98:	add	r5, r5, #1
   22f9c:	mov	r0, r4
   22fa0:	bl	24900 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x18dc>
   22fa4:	cmp	r5, r0
   22fa8:	bcc	22f84 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1d0>
   22fac:	pop	{r4, r5, fp, pc}

00022fb0 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>:
   22fb0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   22fb4:	add	fp, sp, #24
   22fb8:	sub	sp, sp, #232	; 0xe8
   22fbc:	mov	r5, r2
   22fc0:	mov	r4, r1
   22fc4:	mov	r6, r0
   22fc8:	mov	r7, sp
   22fcc:	mov	r0, r7
   22fd0:	bl	2e50c <flatcc_builder_init@@Base>
   22fd4:	mov	r0, r7
   22fd8:	mov	r1, r6
   22fdc:	mov	r2, r4
   22fe0:	bl	22e2c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x78>
   22fe4:	mov	r4, #0
   22fe8:	cmp	r0, #0
   22fec:	bne	23010 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x60>
   22ff0:	mov	r0, sp
   22ff4:	mov	r1, r5
   22ff8:	bl	31430 <flatcc_builder_finalize_buffer@@Base>
   22ffc:	cmp	r0, #0
   23000:	beq	23010 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x60>
   23004:	mov	r5, r0
   23008:	bl	22f60 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1ac>
   2300c:	mov	r4, r5
   23010:	mov	r0, sp
   23014:	bl	2e684 <flatcc_builder_clear@@Base>
   23018:	mov	r0, r4
   2301c:	sub	sp, fp, #24
   23020:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00023024 <__flatcc_fb_codegen_bfbs_to_file@@Base>:
   23024:	push	{r4, r5, r6, r7, fp, lr}
   23028:	add	fp, sp, #16
   2302c:	sub	sp, sp, #8
   23030:	mov	r5, r1
   23034:	mov	r6, r0
   23038:	bl	230e4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xc0>
   2303c:	cmp	r0, #0
   23040:	beq	23090 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6c>
   23044:	mov	r4, r0
   23048:	add	r2, sp, #4
   2304c:	mov	r0, r6
   23050:	mov	r1, r5
   23054:	bl	22fb0 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>
   23058:	cmp	r0, #0
   2305c:	beq	23098 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x74>
   23060:	mov	r5, r0
   23064:	ldr	r7, [sp, #4]
   23068:	mov	r1, #1
   2306c:	mov	r2, r7
   23070:	mov	r3, r4
   23074:	bl	14830 <fwrite@plt>
   23078:	mov	r6, #0
   2307c:	cmp	r7, r0
   23080:	bne	230bc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x98>
   23084:	mov	r0, r5
   23088:	bl	147dc <free@plt>
   2308c:	b	230a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x84>
   23090:	mvn	r6, #0
   23094:	b	230b0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x8c>
   23098:	movw	r0, #49664	; 0xc200
   2309c:	movt	r0, #4
   230a0:	bl	1483c <puts@plt>
   230a4:	mvn	r6, #0
   230a8:	mov	r0, r4
   230ac:	bl	231b8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x194>
   230b0:	mov	r0, r6
   230b4:	sub	sp, fp, #16
   230b8:	pop	{r4, r5, r6, r7, fp, pc}
   230bc:	movw	r0, #4264	; 0x10a8
   230c0:	movt	r0, #6
   230c4:	ldr	r3, [r0]
   230c8:	movw	r0, #47548	; 0xb9bc
   230cc:	movt	r0, #4
   230d0:	mov	r1, #38	; 0x26
   230d4:	mov	r2, #1
   230d8:	bl	14830 <fwrite@plt>
   230dc:	mvn	r6, #0
   230e0:	b	23084 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x60>
   230e4:	push	{r4, r5, r6, sl, fp, lr}
   230e8:	add	fp, sp, #16
   230ec:	sub	sp, sp, #8
   230f0:	ldr	r2, [r0, #108]	; 0x6c
   230f4:	ldr	r0, [r0, #216]	; 0xd8
   230f8:	movw	r4, #21264	; 0x5310
   230fc:	movt	r4, #3
   23100:	cmp	r0, #0
   23104:	movne	r4, r0
   23108:	cmp	r2, #0
   2310c:	beq	23120 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfc>
   23110:	movw	r0, #4268	; 0x10ac
   23114:	movt	r0, #6
   23118:	ldr	r5, [r0]
   2311c:	b	2318c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x168>
   23120:	ldr	r5, [r1, #160]	; 0xa0
   23124:	mov	r0, r5
   23128:	bl	14884 <strlen@plt>
   2312c:	mov	r6, r0
   23130:	mov	r0, r4
   23134:	bl	14884 <strlen@plt>
   23138:	mov	r1, r0
   2313c:	mov	r0, #1
   23140:	movw	r2, #19984	; 0x4e10
   23144:	movt	r2, #3
   23148:	str	r2, [sp]
   2314c:	str	r0, [sp, #4]
   23150:	mov	r0, r4
   23154:	mov	r2, r5
   23158:	mov	r3, r6
   2315c:	bl	26e88 <__flatcc_fb_create_join_path_n@@Base>
   23160:	mov	r4, r0
   23164:	bl	24d9c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d78>
   23168:	movw	r1, #20311	; 0x4f57
   2316c:	movt	r1, #3
   23170:	mov	r0, r4
   23174:	bl	147d0 <fopen@plt>
   23178:	mov	r5, r0
   2317c:	cmp	r0, #0
   23180:	beq	23198 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x174>
   23184:	mov	r0, r4
   23188:	bl	147dc <free@plt>
   2318c:	mov	r0, r5
   23190:	sub	sp, fp, #16
   23194:	pop	{r4, r5, r6, sl, fp, pc}
   23198:	movw	r0, #4264	; 0x10a8
   2319c:	movt	r0, #6
   231a0:	ldr	r0, [r0]
   231a4:	movw	r1, #49581	; 0xc1ad
   231a8:	movt	r1, #4
   231ac:	mov	r2, r4
   231b0:	bl	14890 <fprintf@plt>
   231b4:	b	23184 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x160>
   231b8:	cmp	r0, #0
   231bc:	movwne	r1, #4268	; 0x10ac
   231c0:	movtne	r1, #6
   231c4:	ldrne	r1, [r1]
   231c8:	cmpne	r1, r0
   231cc:	bxeq	lr
   231d0:	b	148d8 <fclose@plt>
   231d4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   231d8:	add	fp, sp, #24
   231dc:	mov	r8, r3
   231e0:	mov	r4, r0
   231e4:	mov	r0, #0
   231e8:	vmov.i32	q8, #0	; 0x00000000
   231ec:	str	r2, [r4]
   231f0:	str	r0, [r4, #36]	; 0x24
   231f4:	str	r1, [r4, #40]	; 0x28
   231f8:	add	r0, r4, #20
   231fc:	vst1.32	{d16-d17}, [r0]
   23200:	add	r0, r4, #4
   23204:	vst1.32	{d16-d17}, [r0]
   23208:	movw	r1, #13752	; 0x35b8
   2320c:	movt	r1, #2
   23210:	mov	r0, r3
   23214:	mov	r2, r4
   23218:	bl	26504 <fb_scope_table_visit@@Base>
   2321c:	ldr	r5, [r4, #4]
   23220:	mov	r0, r5
   23224:	mov	r1, #8
   23228:	bl	147ac <calloc@plt>
   2322c:	str	r0, [r4, #16]
   23230:	ldr	r7, [r4, #8]
   23234:	mov	r0, r7
   23238:	mov	r1, #8
   2323c:	bl	147ac <calloc@plt>
   23240:	str	r0, [r4, #20]
   23244:	ldr	r6, [r4, #12]
   23248:	mov	r0, r6
   2324c:	bl	14848 <malloc@plt>
   23250:	ldr	r1, [r4, #16]
   23254:	ldr	r2, [r4, #20]
   23258:	add	r3, r4, #24
   2325c:	stm	r3, {r0, r1, r2}
   23260:	str	r0, [r4, #36]	; 0x24
   23264:	cmp	r5, #1
   23268:	blt	23274 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x250>
   2326c:	cmp	r1, #0
   23270:	beq	23298 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x274>
   23274:	cmp	r7, #1
   23278:	blt	23288 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x264>
   2327c:	ldr	r1, [r4, #20]
   23280:	cmp	r1, #0
   23284:	beq	23298 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x274>
   23288:	cmp	r6, #0
   2328c:	beq	232a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x284>
   23290:	cmp	r0, #0
   23294:	bne	232a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x284>
   23298:	mov	r0, r4
   2329c:	bl	232dc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2b8>
   232a0:	mvn	r0, #0
   232a4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   232a8:	movw	r1, #13772	; 0x35cc
   232ac:	movt	r1, #2
   232b0:	mov	r0, r8
   232b4:	mov	r2, r4
   232b8:	bl	26504 <fb_scope_table_visit@@Base>
   232bc:	ldr	r1, [r4, #4]
   232c0:	ldr	r0, [r4, #16]
   232c4:	bl	235e0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5bc>
   232c8:	ldr	r1, [r4, #8]
   232cc:	ldr	r0, [r4, #20]
   232d0:	bl	235e0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5bc>
   232d4:	mov	r0, #0
   232d8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   232dc:	push	{r4, sl, fp, lr}
   232e0:	add	fp, sp, #8
   232e4:	mov	r4, r0
   232e8:	ldr	r0, [r0, #16]
   232ec:	cmp	r0, #0
   232f0:	beq	232f8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2d4>
   232f4:	bl	147dc <free@plt>
   232f8:	ldr	r0, [r4, #20]
   232fc:	cmp	r0, #0
   23300:	beq	23308 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2e4>
   23304:	bl	147dc <free@plt>
   23308:	ldr	r0, [r4, #24]
   2330c:	cmp	r0, #0
   23310:	beq	23318 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2f4>
   23314:	bl	147dc <free@plt>
   23318:	vmov.i32	q8, #0	; 0x00000000
   2331c:	mov	r0, #28
   23320:	add	r1, r4, #16
   23324:	vst1.32	{d16-d17}, [r4], r0
   23328:	vst1.32	{d16-d17}, [r4]
   2332c:	vst1.32	{d16-d17}, [r1]
   23330:	pop	{r4, sl, fp, pc}
   23334:	push	{r4, sl, fp, lr}
   23338:	add	fp, sp, #8
   2333c:	mov	r4, r0
   23340:	bl	2382c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x808>
   23344:	cmp	r0, #0
   23348:	popne	{r4, sl, fp, pc}
   2334c:	mov	r0, r4
   23350:	pop	{r4, sl, fp, lr}
   23354:	b	23840 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x81c>
   23358:	push	{r4, sl, fp, lr}
   2335c:	add	fp, sp, #8
   23360:	mov	r4, r0
   23364:	bl	23848 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x824>
   23368:	cmp	r0, #0
   2336c:	popne	{r4, sl, fp, pc}
   23370:	mov	r0, r4
   23374:	pop	{r4, sl, fp, lr}
   23378:	b	23840 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x81c>
   2337c:	push	{r4, sl, fp, lr}
   23380:	add	fp, sp, #8
   23384:	mov	r4, r0
   23388:	bl	30f5c <flatcc_builder_create_string@@Base>
   2338c:	mov	r1, r0
   23390:	mov	r0, r4
   23394:	pop	{r4, sl, fp, lr}
   23398:	b	2385c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x838>
   2339c:	push	{r4, sl, fp, lr}
   233a0:	add	fp, sp, #8
   233a4:	mov	r4, r0
   233a8:	bl	30f5c <flatcc_builder_create_string@@Base>
   233ac:	mov	r1, r0
   233b0:	mov	r0, r4
   233b4:	pop	{r4, sl, fp, lr}
   233b8:	b	23884 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x860>
   233bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   233c0:	add	fp, sp, #28
   233c4:	push	{r3}		; (str r3, [sp, #-4]!)
   233c8:	mov	r9, r2
   233cc:	mov	r6, r0
   233d0:	cmp	r2, #1
   233d4:	blt	23468 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x444>
   233d8:	add	r5, r1, #4
   233dc:	mov	sl, r9
   233e0:	ldr	r4, [sp]
   233e4:	ldr	r7, [r5, #-4]
   233e8:	mov	r0, r6
   233ec:	bl	238ac <__flatcc_fb_codegen_bfbs_to_file@@Base+0x888>
   233f0:	ldr	r1, [r5]
   233f4:	mov	r0, r6
   233f8:	bl	238b4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x890>
   233fc:	mov	r0, r6
   23400:	bl	238d4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x8b0>
   23404:	mov	r0, r6
   23408:	mov	r1, r7
   2340c:	bl	238d8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x8b4>
   23410:	mov	r0, r6
   23414:	bl	23b10 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xaec>
   23418:	ldrh	r8, [r7, #8]
   2341c:	cmp	r8, #1
   23420:	bne	23430 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x40c>
   23424:	ldr	r1, [r7, #112]	; 0x70
   23428:	mov	r0, r6
   2342c:	bl	23b30 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xb0c>
   23430:	sub	r0, r8, #1
   23434:	clz	r0, r0
   23438:	lsr	r1, r0, #5
   2343c:	mov	r0, r6
   23440:	bl	23b6c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xb48>
   23444:	ldrh	r1, [r7, #104]	; 0x68
   23448:	mov	r0, r6
   2344c:	bl	23ba8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xb84>
   23450:	mov	r0, r6
   23454:	bl	23be4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xbc0>
   23458:	str	r0, [r4], #4
   2345c:	add	r5, r5, #8
   23460:	subs	sl, sl, #1
   23464:	bne	233e4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3c0>
   23468:	mov	r0, r6
   2346c:	ldr	r1, [sp]
   23470:	mov	r2, r9
   23474:	sub	sp, fp, #28
   23478:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2347c:	b	23c34 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xc10>
   23480:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23484:	add	fp, sp, #28
   23488:	sub	sp, sp, #20
   2348c:	str	r3, [sp, #12]
   23490:	mov	sl, r2
   23494:	str	r1, [sp, #16]
   23498:	mov	r6, r0
   2349c:	bl	2445c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1438>
   234a0:	cmp	sl, #1
   234a4:	blt	23564 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x540>
   234a8:	mov	r5, #0
   234ac:	ldr	r4, [sp, #16]
   234b0:	ldr	r8, [r4, r5, lsl #3]!
   234b4:	ldrh	r9, [r8, #8]
   234b8:	mov	r0, r6
   234bc:	bl	24460 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x143c>
   234c0:	ldr	r1, [r4, #4]
   234c4:	mov	r0, r6
   234c8:	bl	24464 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1440>
   234cc:	mov	r0, r6
   234d0:	bl	24484 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1460>
   234d4:	ldr	r4, [r8, #20]
   234d8:	cmp	r4, #0
   234dc:	beq	2350c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4e8>
   234e0:	cmp	r9, #4
   234e4:	mov	r7, #0
   234e8:	ldr	r0, [sp, #12]
   234ec:	moveq	r7, r0
   234f0:	mov	r0, r6
   234f4:	mov	r1, r4
   234f8:	mov	r2, r7
   234fc:	bl	24488 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1464>
   23500:	ldr	r4, [r4]
   23504:	cmp	r4, #0
   23508:	bne	234f0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4cc>
   2350c:	mov	r0, r6
   23510:	bl	244f0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x14cc>
   23514:	sub	r0, r9, #4
   23518:	clz	r0, r0
   2351c:	lsr	r1, r0, #5
   23520:	mov	r0, r6
   23524:	bl	24510 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x14ec>
   23528:	ldr	r2, [r8, #40]	; 0x28
   2352c:	ldr	r3, [r8, #44]	; 0x2c
   23530:	ldr	r0, [r8, #48]	; 0x30
   23534:	ldr	r1, [r8, #52]	; 0x34
   23538:	stm	sp, {r0, r1}
   2353c:	mov	r0, r6
   23540:	bl	23df0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xdcc>
   23544:	mov	r1, r0
   23548:	mov	r0, r6
   2354c:	bl	2454c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1528>
   23550:	mov	r0, r6
   23554:	bl	24574 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1550>
   23558:	add	r5, r5, #1
   2355c:	cmp	r5, sl
   23560:	bne	234ac <__flatcc_fb_codegen_bfbs_to_file@@Base+0x488>
   23564:	mov	r0, r6
   23568:	sub	sp, fp, #28
   2356c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23570:	b	24594 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1570>
   23574:	cmp	r1, #0
   23578:	bxeq	lr
   2357c:	ldrh	r3, [r1, #8]
   23580:	cmp	r3, #0
   23584:	beq	2358c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x568>
   23588:	bx	lr
   2358c:	ldr	r1, [r1, #124]	; 0x7c
   23590:	ldr	r1, [r2, r1, lsl #2]
   23594:	b	247cc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x17a8>
   23598:	push	{r4, sl, fp, lr}
   2359c:	add	fp, sp, #8
   235a0:	mov	r4, r0
   235a4:	bl	247f8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x17d4>
   235a8:	mov	r1, r0
   235ac:	mov	r0, r4
   235b0:	pop	{r4, sl, fp, lr}
   235b4:	b	247f4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x17d0>
   235b8:	mov	r2, r0
   235bc:	add	r0, r1, #4
   235c0:	movw	r1, #13860	; 0x3624
   235c4:	movt	r1, #2
   235c8:	b	25f10 <fb_symbol_table_visit@@Base>
   235cc:	mov	r2, r0
   235d0:	add	r0, r1, #4
   235d4:	movw	r1, #14120	; 0x3728
   235d8:	movt	r1, #2
   235dc:	b	25f10 <fb_symbol_table_visit@@Base>
   235e0:	push	{r4, r5, fp, lr}
   235e4:	add	fp, sp, #8
   235e8:	mov	r4, r1
   235ec:	mov	r5, r0
   235f0:	movw	r3, #14368	; 0x3820
   235f4:	movt	r3, #2
   235f8:	mov	r2, #8
   235fc:	bl	14914 <qsort@plt>
   23600:	cmp	r4, #1
   23604:	poplt	{r4, r5, fp, pc}
   23608:	mov	r0, #0
   2360c:	ldr	r1, [r5, r0, lsl #3]
   23610:	str	r0, [r1, #124]	; 0x7c
   23614:	add	r0, r0, #1
   23618:	cmp	r4, r0
   2361c:	bne	2360c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5e8>
   23620:	pop	{r4, r5, fp, pc}
   23624:	push	{r4, r5, fp, lr}
   23628:	add	fp, sp, #8
   2362c:	mov	r5, r1
   23630:	mov	r4, r0
   23634:	ldr	r0, [r0, #40]	; 0x28
   23638:	bl	236dc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6b8>
   2363c:	cmp	r0, #0
   23640:	popeq	{r4, r5, fp, pc}
   23644:	ldr	r2, [r4]
   23648:	mov	r1, #1
   2364c:	cmp	r2, #0
   23650:	beq	2368c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x668>
   23654:	ldr	r0, [r0, #12]
   23658:	ldr	r0, [r0]
   2365c:	cmp	r0, #0
   23660:	beq	2368c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x668>
   23664:	mov	r1, #0
   23668:	ldr	r2, [r0]
   2366c:	ldr	r0, [r0, #4]
   23670:	ldr	r0, [r0, #4]
   23674:	add	r0, r1, r0
   23678:	add	r1, r0, #1
   2367c:	cmp	r2, #0
   23680:	mov	r0, r2
   23684:	bne	23668 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x644>
   23688:	add	r1, r1, #1
   2368c:	ldr	r0, [r5, #4]
   23690:	ldr	r0, [r0, #4]
   23694:	add	r0, r1, r0
   23698:	ldr	r1, [r4, #12]
   2369c:	add	r0, r0, r1
   236a0:	str	r0, [r4, #12]
   236a4:	ldrh	r0, [r5, #8]
   236a8:	sub	r1, r0, #3
   236ac:	cmp	r1, #2
   236b0:	bcc	236cc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6a8>
   236b4:	cmp	r0, #1
   236b8:	ldrls	r0, [r4, #4]
   236bc:	addls	r0, r0, #1
   236c0:	strls	r0, [r4, #4]
   236c4:	popls	{r4, r5, fp, pc}
   236c8:	pop	{r4, r5, fp, pc}
   236cc:	ldr	r0, [r4, #8]
   236d0:	add	r0, r0, #1
   236d4:	str	r0, [r4, #8]
   236d8:	pop	{r4, r5, fp, pc}
   236dc:	push	{r4, sl, fp, lr}
   236e0:	add	fp, sp, #8
   236e4:	mov	r4, r1
   236e8:	ldrh	r1, [r1, #8]
   236ec:	cmp	r1, #4
   236f0:	movhi	r0, #0
   236f4:	pophi	{r4, sl, fp, pc}
   236f8:	ldr	r1, [r4, #16]
   236fc:	add	r0, r0, #172	; 0xac
   23700:	bl	23710 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6ec>
   23704:	cmp	r0, #0
   23708:	movne	r0, r4
   2370c:	pop	{r4, sl, fp, pc}
   23710:	push	{fp, lr}
   23714:	mov	fp, sp
   23718:	bl	2580c <ptr_set_find_item@@Base>
   2371c:	cmp	r0, #0
   23720:	movwne	r0, #1
   23724:	pop	{fp, pc}
   23728:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2372c:	add	fp, sp, #28
   23730:	sub	sp, sp, #4
   23734:	mov	r9, r1
   23738:	mov	sl, r0
   2373c:	ldr	r0, [r0, #40]	; 0x28
   23740:	bl	236dc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6b8>
   23744:	cmp	r0, #0
   23748:	beq	23818 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x7f4>
   2374c:	ldr	r1, [sl]
   23750:	ldr	r8, [sl, #36]	; 0x24
   23754:	cmp	r1, #0
   23758:	mov	r6, r8
   2375c:	beq	237a4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x780>
   23760:	ldr	r0, [r0, #12]
   23764:	ldr	r5, [r0]
   23768:	cmp	r5, #0
   2376c:	mov	r6, r8
   23770:	beq	237a4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x780>
   23774:	mov	r4, #46	; 0x2e
   23778:	mov	r6, r8
   2377c:	ldr	r0, [r5, #4]
   23780:	ldm	r0, {r1, r7}
   23784:	mov	r0, r6
   23788:	mov	r2, r7
   2378c:	bl	147e8 <memcpy@plt>
   23790:	strb	r4, [r6, r7]!
   23794:	add	r6, r6, #1
   23798:	ldr	r5, [r5]
   2379c:	cmp	r5, #0
   237a0:	bne	2377c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x758>
   237a4:	ldr	r0, [r9, #4]
   237a8:	ldm	r0, {r1, r7}
   237ac:	mov	r0, r6
   237b0:	mov	r2, r7
   237b4:	bl	147e8 <memcpy@plt>
   237b8:	mov	r0, #0
   237bc:	strb	r0, [r6, r7]!
   237c0:	add	r0, r6, #1
   237c4:	str	r0, [sl, #36]	; 0x24
   237c8:	ldrh	r0, [r9, #8]
   237cc:	sub	r1, r0, #3
   237d0:	cmp	r1, #2
   237d4:	bcc	23800 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x7dc>
   237d8:	cmp	r0, #1
   237dc:	bhi	23818 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x7f4>
   237e0:	ldr	r0, [sl, #28]
   237e4:	str	r9, [r0]
   237e8:	ldr	r0, [sl, #28]
   237ec:	str	r8, [r0, #4]
   237f0:	add	r0, r0, #8
   237f4:	str	r0, [sl, #28]
   237f8:	sub	sp, fp, #28
   237fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23800:	ldr	r0, [sl, #32]
   23804:	str	r9, [r0]
   23808:	ldr	r0, [sl, #32]
   2380c:	str	r8, [r0, #4]
   23810:	add	r0, r0, #8
   23814:	str	r0, [sl, #32]
   23818:	sub	sp, fp, #28
   2381c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23820:	ldr	r1, [r1, #4]
   23824:	ldr	r0, [r0, #4]
   23828:	b	147c4 <strcmp@plt>
   2382c:	movw	r1, #47587	; 0xb9e3
   23830:	movt	r1, #4
   23834:	mov	r2, #0
   23838:	mov	r3, #2
   2383c:	b	2ee1c <flatcc_builder_start_buffer@@Base>
   23840:	mov	r1, #5
   23844:	b	2fb04 <flatcc_builder_start_table@@Base>
   23848:	movw	r1, #47587	; 0xb9e3
   2384c:	movt	r1, #4
   23850:	mov	r2, #0
   23854:	mov	r3, #0
   23858:	b	2ee1c <flatcc_builder_start_buffer@@Base>
   2385c:	push	{r4, sl, fp, lr}
   23860:	add	fp, sp, #8
   23864:	cmp	r1, #0
   23868:	popeq	{r4, sl, fp, pc}
   2386c:	mov	r4, r1
   23870:	mov	r1, #2
   23874:	bl	30854 <flatcc_builder_table_add_offset@@Base>
   23878:	cmp	r0, #0
   2387c:	strne	r4, [r0]
   23880:	pop	{r4, sl, fp, pc}
   23884:	push	{r4, sl, fp, lr}
   23888:	add	fp, sp, #8
   2388c:	cmp	r1, #0
   23890:	popeq	{r4, sl, fp, pc}
   23894:	mov	r4, r1
   23898:	mov	r1, #3
   2389c:	bl	30854 <flatcc_builder_table_add_offset@@Base>
   238a0:	cmp	r0, #0
   238a4:	strne	r4, [r0]
   238a8:	pop	{r4, sl, fp, pc}
   238ac:	mov	r1, #5
   238b0:	b	2fb04 <flatcc_builder_start_table@@Base>
   238b4:	push	{r4, sl, fp, lr}
   238b8:	add	fp, sp, #8
   238bc:	mov	r4, r0
   238c0:	bl	31018 <flatcc_builder_create_string_str@@Base>
   238c4:	mov	r1, r0
   238c8:	mov	r0, r4
   238cc:	pop	{r4, sl, fp, lr}
   238d0:	b	23c54 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xc30>
   238d4:	b	2f8c0 <flatcc_builder_start_offset_vector@@Base>
   238d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   238dc:	add	fp, sp, #28
   238e0:	sub	sp, sp, #4
   238e4:	vpush	{d8}
   238e8:	sub	sp, sp, #16
   238ec:	str	r1, [sp, #8]
   238f0:	ldr	r9, [r1, #20]
   238f4:	cmp	r9, #0
   238f8:	beq	23b00 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xadc>
   238fc:	mov	r5, r0
   23900:	mov	r8, #0
   23904:	tst	r8, #255	; 0xff
   23908:	mov	r7, #0
   2390c:	ldrbeq	r0, [r9, #72]	; 0x48
   23910:	lsreq	r7, r0, #7
   23914:	mov	r4, r9
   23918:	ldrh	r0, [r4, #24]!
   2391c:	sub	sl, r4, #8
   23920:	ldrh	r1, [r4, #48]	; 0x30
   23924:	ubfx	r6, r1, #2, #1
   23928:	ubfx	r1, r1, #8, #1
   2392c:	str	r1, [sp, #12]
   23930:	cmp	r0, #14
   23934:	bne	239cc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x9a8>
   23938:	ldr	r0, [sl]
   2393c:	ldrh	r0, [r0, #8]
   23940:	cmp	r0, #4
   23944:	bne	239cc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x9a8>
   23948:	mov	r0, r5
   2394c:	bl	23c7c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xc58>
   23950:	mov	r0, r5
   23954:	bl	23c80 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xc5c>
   23958:	ldr	r0, [r9, #4]
   2395c:	ldm	r0, {r1, r2}
   23960:	mov	r0, r5
   23964:	bl	23c84 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xc60>
   23968:	mov	r0, r5
   2396c:	movw	r1, #46861	; 0xb70d
   23970:	movt	r1, #3
   23974:	mov	r2, #5
   23978:	bl	23c84 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xc60>
   2397c:	mov	r0, r5
   23980:	bl	23c88 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xc64>
   23984:	mov	r0, r5
   23988:	bl	23ca8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xc84>
   2398c:	ldrh	r0, [r9, #96]	; 0x60
   23990:	mov	r1, #2
   23994:	add	r0, r1, r0, lsl #1
   23998:	uxth	r1, r0
   2399c:	mov	r0, r5
   239a0:	bl	23cd4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xcb0>
   239a4:	ldrh	r0, [r9, #96]	; 0x60
   239a8:	sub	r0, r0, #1
   239ac:	uxth	r1, r0
   239b0:	mov	r0, r5
   239b4:	bl	23d10 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xcec>
   239b8:	mov	r0, r5
   239bc:	mov	r1, r6
   239c0:	bl	23d4c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xd28>
   239c4:	mov	r0, r5
   239c8:	bl	23d88 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xd64>
   239cc:	mov	r0, r5
   239d0:	bl	23c7c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xc58>
   239d4:	ldr	r0, [r9, #4]
   239d8:	ldm	r0, {r1, r2}
   239dc:	mov	r0, r5
   239e0:	bl	23da8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xd84>
   239e4:	ldrd	r2, [sl]
   239e8:	ldrd	r0, [r4]
   239ec:	stm	sp, {r0, r1}
   239f0:	mov	r0, r5
   239f4:	bl	23df0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xdcc>
   239f8:	mov	r1, r0
   239fc:	mov	r0, r5
   23a00:	bl	23dc8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xda4>
   23a04:	ldr	r0, [sp, #8]
   23a08:	ldrh	r0, [r0, #8]
   23a0c:	cmp	r0, #1
   23a10:	beq	23a5c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xa38>
   23a14:	cmp	r0, #0
   23a18:	bne	23adc <__flatcc_fb_codegen_bfbs_to_file@@Base+0xab8>
   23a1c:	vmov.i32	d8, #0	; 0x00000000
   23a20:	ldrh	r0, [r9, #56]	; 0x38
   23a24:	sub	r2, r0, #3
   23a28:	mov	r1, #0
   23a2c:	cmp	r2, #3
   23a30:	bhi	23a6c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xa48>
   23a34:	add	r0, r9, #48	; 0x30
   23a38:	add	r3, pc, #0
   23a3c:	ldr	pc, [r3, r2, lsl #2]
   23a40:	andeq	r3, r2, r4, ror sl
   23a44:	andeq	r3, r2, r0, asr sl
   23a48:	andeq	r3, r2, r0, asr sl
   23a4c:	andeq	r3, r2, r4, lsl #21
   23a50:	ldr	r2, [r0]
   23a54:	ldr	r1, [r0, #4]
   23a58:	b	23a88 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xa64>
   23a5c:	ldrh	r1, [r9, #80]	; 0x50
   23a60:	mov	r0, r5
   23a64:	bl	23cd4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xcb0>
   23a68:	b	23adc <__flatcc_fb_codegen_bfbs_to_file@@Base+0xab8>
   23a6c:	mov	r2, #0
   23a70:	b	23a88 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xa64>
   23a74:	mov	r2, #0
   23a78:	vldr	d8, [r0]
   23a7c:	mov	r1, #0
   23a80:	b	23a88 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xa64>
   23a84:	ldrb	r2, [r0]
   23a88:	mov	r0, r5
   23a8c:	mov	r3, r1
   23a90:	bl	23ffc <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfd8>
   23a94:	mov	r0, r5
   23a98:	vorr	d0, d8, d8
   23a9c:	bl	24040 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x101c>
   23aa0:	ldrh	r1, [r9, #96]	; 0x60
   23aa4:	mov	r0, r5
   23aa8:	bl	23d10 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xcec>
   23aac:	ldrh	r0, [r9, #96]	; 0x60
   23ab0:	mov	r1, #4
   23ab4:	add	r0, r1, r0, lsl #1
   23ab8:	uxth	r1, r0
   23abc:	mov	r0, r5
   23ac0:	bl	23cd4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xcb0>
   23ac4:	mov	r0, r5
   23ac8:	mov	r1, r7
   23acc:	bl	2408c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1068>
   23ad0:	mov	r0, r5
   23ad4:	ldr	r1, [sp, #12]
   23ad8:	bl	240c8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x10a4>
   23adc:	mov	r0, r5
   23ae0:	mov	r1, r6
   23ae4:	bl	23d4c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xd28>
   23ae8:	mov	r0, r5
   23aec:	bl	23d88 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xd64>
   23af0:	orr	r8, r8, r7
   23af4:	ldr	r9, [r9]
   23af8:	cmp	r9, #0
   23afc:	bne	23904 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x8e0>
   23b00:	sub	sp, fp, #40	; 0x28
   23b04:	vpop	{d8}
   23b08:	add	sp, sp, #4
   23b0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23b10:	push	{r4, sl, fp, lr}
   23b14:	add	fp, sp, #8
   23b18:	mov	r4, r0
   23b1c:	bl	2f974 <flatcc_builder_end_offset_vector@@Base>
   23b20:	mov	r1, r0
   23b24:	mov	r0, r4
   23b28:	pop	{r4, sl, fp, lr}
   23b2c:	b	2440c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x13e8>
   23b30:	push	{r4, sl, fp, lr}
   23b34:	add	fp, sp, #8
   23b38:	cmp	r1, #0
   23b3c:	popeq	{r4, sl, fp, pc}
   23b40:	mov	r4, r1
   23b44:	mov	r1, #4
   23b48:	mov	r2, #4
   23b4c:	mov	r3, #4
   23b50:	bl	30918 <flatcc_builder_table_add@@Base>
   23b54:	cmp	r0, #0
   23b58:	beq	23b68 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xb44>
   23b5c:	mov	r1, r4
   23b60:	pop	{r4, sl, fp, lr}
   23b64:	b	242d8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x12b4>
   23b68:	pop	{r4, sl, fp, pc}
   23b6c:	push	{r4, sl, fp, lr}
   23b70:	add	fp, sp, #8
   23b74:	cmp	r1, #0
   23b78:	popeq	{r4, sl, fp, pc}
   23b7c:	mov	r4, r1
   23b80:	mov	r1, #2
   23b84:	mov	r2, #1
   23b88:	mov	r3, #1
   23b8c:	bl	30918 <flatcc_builder_table_add@@Base>
   23b90:	cmp	r0, #0
   23b94:	beq	23ba4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xb80>
   23b98:	mov	r1, r4
   23b9c:	pop	{r4, sl, fp, lr}
   23ba0:	b	24344 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1320>
   23ba4:	pop	{r4, sl, fp, pc}
   23ba8:	push	{r4, sl, fp, lr}
   23bac:	add	fp, sp, #8
   23bb0:	cmp	r1, #0
   23bb4:	popeq	{r4, sl, fp, pc}
   23bb8:	mov	r4, r1
   23bbc:	mov	r1, #3
   23bc0:	mov	r2, #4
   23bc4:	mov	r3, #4
   23bc8:	bl	30918 <flatcc_builder_table_add@@Base>
   23bcc:	cmp	r0, #0
   23bd0:	beq	23be0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xbbc>
   23bd4:	mov	r1, r4
   23bd8:	pop	{r4, sl, fp, lr}
   23bdc:	b	242d8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x12b4>
   23be0:	pop	{r4, sl, fp, pc}
   23be4:	push	{r4, sl, fp, lr}
   23be8:	add	fp, sp, #8
   23bec:	mov	r4, r0
   23bf0:	movw	r1, #49640	; 0xc1e8
   23bf4:	movt	r1, #4
   23bf8:	mov	r2, #2
   23bfc:	bl	30194 <flatcc_builder_check_required@@Base>
   23c00:	cmp	r0, #0
   23c04:	beq	23c14 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xbf0>
   23c08:	mov	r0, r4
   23c0c:	pop	{r4, sl, fp, lr}
   23c10:	b	30224 <flatcc_builder_end_table@@Base>
   23c14:	movw	r0, #48108	; 0xbbec
   23c18:	movt	r0, #4
   23c1c:	movw	r1, #47733	; 0xba75
   23c20:	movt	r1, #4
   23c24:	movw	r3, #48255	; 0xbc7f
   23c28:	movt	r3, #4
   23c2c:	mov	r2, #31
   23c30:	bl	14950 <__assert_fail@plt>
   23c34:	push	{r4, sl, fp, lr}
   23c38:	add	fp, sp, #8
   23c3c:	mov	r4, r0
   23c40:	bl	2f920 <flatcc_builder_create_offset_vector@@Base>
   23c44:	mov	r1, r0
   23c48:	mov	r0, r4
   23c4c:	pop	{r4, sl, fp, lr}
   23c50:	b	24434 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1410>
   23c54:	push	{r4, sl, fp, lr}
   23c58:	add	fp, sp, #8
   23c5c:	cmp	r1, #0
   23c60:	popeq	{r4, sl, fp, pc}
   23c64:	mov	r4, r1
   23c68:	mov	r1, #0
   23c6c:	bl	30854 <flatcc_builder_table_add_offset@@Base>
   23c70:	cmp	r0, #0
   23c74:	strne	r4, [r0]
   23c78:	pop	{r4, sl, fp, pc}
   23c7c:	b	24104 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x10e0>
   23c80:	b	2f9d8 <flatcc_builder_start_string@@Base>
   23c84:	b	2f594 <flatcc_builder_append_string@@Base>
   23c88:	push	{r4, sl, fp, lr}
   23c8c:	add	fp, sp, #8
   23c90:	mov	r4, r0
   23c94:	bl	31074 <flatcc_builder_end_string@@Base>
   23c98:	mov	r1, r0
   23c9c:	mov	r0, r4
   23ca0:	pop	{r4, sl, fp, lr}
   23ca4:	b	2410c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x10e8>
   23ca8:	push	{r4, sl, fp, lr}
   23cac:	add	fp, sp, #8
   23cb0:	mov	r4, r0
   23cb4:	mov	r1, #1
   23cb8:	mov	r2, #0
   23cbc:	mvn	r3, #0
   23cc0:	bl	24134 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1110>
   23cc4:	mov	r1, r0
   23cc8:	mov	r0, r4
   23ccc:	pop	{r4, sl, fp, lr}
   23cd0:	b	23dc8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xda4>
   23cd4:	push	{r4, sl, fp, lr}
   23cd8:	add	fp, sp, #8
   23cdc:	cmp	r1, #0
   23ce0:	popeq	{r4, sl, fp, pc}
   23ce4:	mov	r4, r1
   23ce8:	mov	r1, #3
   23cec:	mov	r2, #2
   23cf0:	mov	r3, #2
   23cf4:	bl	30918 <flatcc_builder_table_add@@Base>
   23cf8:	cmp	r0, #0
   23cfc:	beq	23d0c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xce8>
   23d00:	mov	r1, r4
   23d04:	pop	{r4, sl, fp, lr}
   23d08:	b	24320 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x12fc>
   23d0c:	pop	{r4, sl, fp, pc}
   23d10:	push	{r4, sl, fp, lr}
   23d14:	add	fp, sp, #8
   23d18:	cmp	r1, #0
   23d1c:	popeq	{r4, sl, fp, pc}
   23d20:	mov	r4, r1
   23d24:	mov	r1, #2
   23d28:	mov	r2, #2
   23d2c:	mov	r3, #2
   23d30:	bl	30918 <flatcc_builder_table_add@@Base>
   23d34:	cmp	r0, #0
   23d38:	beq	23d48 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xd24>
   23d3c:	mov	r1, r4
   23d40:	pop	{r4, sl, fp, lr}
   23d44:	b	24320 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x12fc>
   23d48:	pop	{r4, sl, fp, pc}
   23d4c:	push	{r4, sl, fp, lr}
   23d50:	add	fp, sp, #8
   23d54:	cmp	r1, #0
   23d58:	popeq	{r4, sl, fp, pc}
   23d5c:	mov	r4, r1
   23d60:	mov	r1, #6
   23d64:	mov	r2, #1
   23d68:	mov	r3, #1
   23d6c:	bl	30918 <flatcc_builder_table_add@@Base>
   23d70:	cmp	r0, #0
   23d74:	beq	23d84 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xd60>
   23d78:	mov	r1, r4
   23d7c:	pop	{r4, sl, fp, lr}
   23d80:	b	24344 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1320>
   23d84:	pop	{r4, sl, fp, pc}
   23d88:	push	{r4, sl, fp, lr}
   23d8c:	add	fp, sp, #8
   23d90:	mov	r4, r0
   23d94:	bl	24374 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1350>
   23d98:	mov	r1, r0
   23d9c:	mov	r0, r4
   23da0:	pop	{r4, sl, fp, lr}
   23da4:	b	24368 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1344>
   23da8:	push	{r4, sl, fp, lr}
   23dac:	add	fp, sp, #8
   23db0:	mov	r4, r0
   23db4:	bl	30f5c <flatcc_builder_create_string@@Base>
   23db8:	mov	r1, r0
   23dbc:	mov	r0, r4
   23dc0:	pop	{r4, sl, fp, lr}
   23dc4:	b	2410c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x10e8>
   23dc8:	push	{r4, sl, fp, lr}
   23dcc:	add	fp, sp, #8
   23dd0:	cmp	r1, #0
   23dd4:	popeq	{r4, sl, fp, pc}
   23dd8:	mov	r4, r1
   23ddc:	mov	r1, #1
   23de0:	bl	30854 <flatcc_builder_table_add_offset@@Base>
   23de4:	cmp	r0, #0
   23de8:	strne	r4, [r0]
   23dec:	pop	{r4, sl, fp, pc}
   23df0:	push	{r4, r5, r6, r7, fp, lr}
   23df4:	add	fp, sp, #16
   23df8:	mov	ip, r2
   23dfc:	ldrh	r1, [fp, #8]
   23e00:	sub	r6, r1, #2
   23e04:	mov	r2, #0
   23e08:	mvn	r3, #0
   23e0c:	cmp	r6, #13
   23e10:	bhi	23f10 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xeec>
   23e14:	mov	r4, #13
   23e18:	add	r7, pc, #12
   23e1c:	mov	lr, #0
   23e20:	mov	r5, #13
   23e24:	mov	r1, #0
   23e28:	ldr	pc, [r7, r6, lsl #2]
   23e2c:	andeq	r3, r2, r0, ror #31
   23e30:	andeq	r3, r2, r4, ror #31
   23e34:	andeq	r3, r2, r4, ror #31
   23e38:	andeq	r3, r2, r4, ror #31
   23e3c:	andeq	r3, r2, r4, ror #31
   23e40:			; <UNDEFINED> instruction: 0x00023eb8
   23e44:			; <UNDEFINED> instruction: 0x00023ebc
   23e48:	ldrdeq	r3, [r2], -r0
   23e4c:	andeq	r3, r2, r4, ror #31
   23e50:	andeq	r3, r2, r4, ror #31
   23e54:	andeq	r3, r2, r4, ror #31
   23e58:	andeq	r3, r2, r4, ror #31
   23e5c:	andeq	r3, r2, r4, ror #28
   23e60:	muleq	r2, r8, lr
   23e64:	ldrh	r6, [ip, #8]
   23e68:	ldr	r1, [ip, #124]	; 0x7c
   23e6c:	mov	r5, #15
   23e70:	cmp	r6, #2
   23e74:	bcc	23f20 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xefc>
   23e78:	cmp	r6, #4
   23e7c:	beq	23f1c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xef8>
   23e80:	cmp	r6, #3
   23e84:	bne	23f10 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xeec>
   23e88:	ldr	ip, [ip, #40]	; 0x28
   23e8c:	mov	r3, r1
   23e90:	mov	lr, #0
   23e94:	b	23ebc <__flatcc_fb_codegen_bfbs_to_file@@Base+0xe98>
   23e98:	ldrh	r1, [ip, #8]
   23e9c:	ldr	r3, [ip, #124]	; 0x7c
   23ea0:	mov	r4, #15
   23ea4:	cmp	r1, #2
   23ea8:	bcc	23fd0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfac>
   23eac:	cmp	r1, #3
   23eb0:	bne	23f10 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xeec>
   23eb4:	ldr	ip, [ip, #40]	; 0x28
   23eb8:	mov	lr, #14
   23ebc:	sub	r1, ip, #1
   23ec0:	cmp	r1, #10
   23ec4:	mov	r4, #0
   23ec8:	bhi	23fbc <__flatcc_fb_codegen_bfbs_to_file@@Base+0xf98>
   23ecc:	add	r7, pc, #0
   23ed0:	ldr	pc, [r7, r1, lsl #2]
   23ed4:	andeq	r3, r2, r0, lsl #30
   23ed8:	andeq	r3, r2, r8, lsr #30
   23edc:	andeq	r3, r2, r8, lsr pc
   23ee0:	andeq	r3, r2, r8, asr #30
   23ee4:	andeq	r3, r2, r8, asr pc
   23ee8:	andeq	r3, r2, r8, ror #30
   23eec:	andeq	r3, r2, r8, ror pc
   23ef0:	andeq	r3, r2, r8, lsl #31
   23ef4:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   23ef8:	andeq	r3, r2, r8, lsr #31
   23efc:			; <UNDEFINED> instruction: 0x00023fb8
   23f00:	mov	r4, #10
   23f04:	cmp	lr, #0
   23f08:	bne	23fc4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfa0>
   23f0c:	b	23fec <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfc8>
   23f10:	mov	r1, #0
   23f14:	pop	{r4, r5, r6, r7, fp, lr}
   23f18:	b	24134 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1110>
   23f1c:	mov	r5, #16
   23f20:	mov	r3, r1
   23f24:	b	23fe0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfbc>
   23f28:	mov	r4, #8
   23f2c:	cmp	lr, #0
   23f30:	bne	23fc4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfa0>
   23f34:	b	23fec <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfc8>
   23f38:	mov	r4, #6
   23f3c:	cmp	lr, #0
   23f40:	bne	23fc4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfa0>
   23f44:	b	23fec <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfc8>
   23f48:	mov	r4, #4
   23f4c:	cmp	lr, #0
   23f50:	bne	23fc4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfa0>
   23f54:	b	23fec <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfc8>
   23f58:	mov	r4, #2
   23f5c:	cmp	lr, #0
   23f60:	bne	23fc4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfa0>
   23f64:	b	23fec <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfc8>
   23f68:	mov	r4, #9
   23f6c:	cmp	lr, #0
   23f70:	bne	23fc4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfa0>
   23f74:	b	23fec <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfc8>
   23f78:	mov	r4, #7
   23f7c:	cmp	lr, #0
   23f80:	bne	23fc4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfa0>
   23f84:	b	23fec <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfc8>
   23f88:	mov	r4, #5
   23f8c:	cmp	lr, #0
   23f90:	bne	23fc4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfa0>
   23f94:	b	23fec <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfc8>
   23f98:	mov	r4, #3
   23f9c:	cmp	lr, #0
   23fa0:	bne	23fc4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfa0>
   23fa4:	b	23fec <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfc8>
   23fa8:	mov	r4, #12
   23fac:	cmp	lr, #0
   23fb0:	bne	23fc4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfa0>
   23fb4:	b	23fec <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfc8>
   23fb8:	mov	r4, #11
   23fbc:	cmp	lr, #0
   23fc0:	beq	23fec <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfc8>
   23fc4:	cmp	lr, #14
   23fc8:	mov	r5, lr
   23fcc:	bne	23fe0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xfbc>
   23fd0:	mov	r1, #14
   23fd4:	mov	r2, r4
   23fd8:	pop	{r4, r5, r6, r7, fp, lr}
   23fdc:	b	24134 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1110>
   23fe0:	mov	r1, r5
   23fe4:	pop	{r4, r5, r6, r7, fp, lr}
   23fe8:	b	24134 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1110>
   23fec:	mov	r1, r4
   23ff0:	mov	r2, #0
   23ff4:	pop	{r4, r5, r6, r7, fp, lr}
   23ff8:	b	24134 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1110>
   23ffc:	push	{r4, r5, fp, lr}
   24000:	add	fp, sp, #8
   24004:	orrs	r1, r2, r3
   24008:	popeq	{r4, r5, fp, pc}
   2400c:	mov	r4, r3
   24010:	mov	r5, r2
   24014:	mov	r1, #4
   24018:	mov	r2, #8
   2401c:	mov	r3, #8
   24020:	bl	30918 <flatcc_builder_table_add@@Base>
   24024:	cmp	r0, #0
   24028:	beq	2403c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1018>
   2402c:	mov	r2, r5
   24030:	mov	r3, r4
   24034:	pop	{r4, r5, fp, lr}
   24038:	b	243c4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x13a0>
   2403c:	pop	{r4, r5, fp, pc}
   24040:	push	{fp, lr}
   24044:	mov	fp, sp
   24048:	vpush	{d8}
   2404c:	vcmp.f64	d0, #0.0
   24050:	vmrs	APSR_nzcv, fpscr
   24054:	bne	24060 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x103c>
   24058:	vpop	{d8}
   2405c:	pop	{fp, pc}
   24060:	vmov.f64	d8, d0
   24064:	mov	r1, #5
   24068:	mov	r2, #8
   2406c:	mov	r3, #8
   24070:	bl	30918 <flatcc_builder_table_add@@Base>
   24074:	cmp	r0, #0
   24078:	beq	24058 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1034>
   2407c:	vmov.f64	d0, d8
   24080:	vpop	{d8}
   24084:	pop	{fp, lr}
   24088:	b	243f0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x13cc>
   2408c:	push	{r4, sl, fp, lr}
   24090:	add	fp, sp, #8
   24094:	cmp	r1, #0
   24098:	popeq	{r4, sl, fp, pc}
   2409c:	mov	r4, r1
   240a0:	mov	r1, #8
   240a4:	mov	r2, #1
   240a8:	mov	r3, #1
   240ac:	bl	30918 <flatcc_builder_table_add@@Base>
   240b0:	cmp	r0, #0
   240b4:	beq	240c4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x10a0>
   240b8:	mov	r1, r4
   240bc:	pop	{r4, sl, fp, lr}
   240c0:	b	24344 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1320>
   240c4:	pop	{r4, sl, fp, pc}
   240c8:	push	{r4, sl, fp, lr}
   240cc:	add	fp, sp, #8
   240d0:	cmp	r1, #0
   240d4:	popeq	{r4, sl, fp, pc}
   240d8:	mov	r4, r1
   240dc:	mov	r1, #7
   240e0:	mov	r2, #1
   240e4:	mov	r3, #1
   240e8:	bl	30918 <flatcc_builder_table_add@@Base>
   240ec:	cmp	r0, #0
   240f0:	beq	24100 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x10dc>
   240f4:	mov	r1, r4
   240f8:	pop	{r4, sl, fp, lr}
   240fc:	b	24344 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1320>
   24100:	pop	{r4, sl, fp, pc}
   24104:	mov	r1, #9
   24108:	b	2fb04 <flatcc_builder_start_table@@Base>
   2410c:	push	{r4, sl, fp, lr}
   24110:	add	fp, sp, #8
   24114:	cmp	r1, #0
   24118:	popeq	{r4, sl, fp, pc}
   2411c:	mov	r4, r1
   24120:	mov	r1, #0
   24124:	bl	30854 <flatcc_builder_table_add_offset@@Base>
   24128:	cmp	r0, #0
   2412c:	strne	r4, [r0]
   24130:	pop	{r4, sl, fp, pc}
   24134:	push	{r4, r5, r6, r7, fp, lr}
   24138:	add	fp, sp, #16
   2413c:	mov	r7, r3
   24140:	mov	r5, r2
   24144:	mov	r6, r1
   24148:	mov	r4, r0
   2414c:	bl	241a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1184>
   24150:	cmp	r0, #0
   24154:	bne	24194 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1170>
   24158:	mov	r0, r4
   2415c:	mov	r1, r7
   24160:	bl	241b0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x118c>
   24164:	cmp	r0, #0
   24168:	bne	24194 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1170>
   2416c:	mov	r0, r4
   24170:	mov	r1, r6
   24174:	bl	241f8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x11d4>
   24178:	cmp	r0, #0
   2417c:	bne	24194 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1170>
   24180:	mov	r0, r4
   24184:	mov	r1, r5
   24188:	bl	24240 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x121c>
   2418c:	cmp	r0, #0
   24190:	beq	2419c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1178>
   24194:	mov	r0, #0
   24198:	pop	{r4, r5, r6, r7, fp, pc}
   2419c:	mov	r0, r4
   241a0:	pop	{r4, r5, r6, r7, fp, lr}
   241a4:	b	24288 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1264>
   241a8:	mov	r1, #3
   241ac:	b	2fb04 <flatcc_builder_start_table@@Base>
   241b0:	push	{r4, r5, fp, lr}
   241b4:	add	fp, sp, #8
   241b8:	mov	r4, #0
   241bc:	cmn	r1, #1
   241c0:	beq	241f0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x11cc>
   241c4:	mov	r5, r1
   241c8:	mov	r1, #2
   241cc:	mov	r2, #4
   241d0:	mov	r3, #4
   241d4:	bl	30918 <flatcc_builder_table_add@@Base>
   241d8:	cmp	r0, #0
   241dc:	mvneq	r4, #0
   241e0:	moveq	r0, r4
   241e4:	popeq	{r4, r5, fp, pc}
   241e8:	mov	r1, r5
   241ec:	bl	242d8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x12b4>
   241f0:	mov	r0, r4
   241f4:	pop	{r4, r5, fp, pc}
   241f8:	push	{r4, r5, fp, lr}
   241fc:	add	fp, sp, #8
   24200:	cmp	r1, #0
   24204:	moveq	r4, #0
   24208:	moveq	r0, r4
   2420c:	popeq	{r4, r5, fp, pc}
   24210:	mov	r5, r1
   24214:	mov	r4, #0
   24218:	mov	r1, #0
   2421c:	mov	r2, #1
   24220:	mov	r3, #1
   24224:	bl	30918 <flatcc_builder_table_add@@Base>
   24228:	cmp	r0, #0
   2422c:	mvneq	r4, #0
   24230:	movne	r1, r5
   24234:	blne	242fc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x12d8>
   24238:	mov	r0, r4
   2423c:	pop	{r4, r5, fp, pc}
   24240:	push	{r4, r5, fp, lr}
   24244:	add	fp, sp, #8
   24248:	mov	r4, #0
   2424c:	cmp	r1, #0
   24250:	beq	24280 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x125c>
   24254:	mov	r5, r1
   24258:	mov	r1, #1
   2425c:	mov	r2, #1
   24260:	mov	r3, #1
   24264:	bl	30918 <flatcc_builder_table_add@@Base>
   24268:	cmp	r0, #0
   2426c:	mvneq	r4, #0
   24270:	moveq	r0, r4
   24274:	popeq	{r4, r5, fp, pc}
   24278:	mov	r1, r5
   2427c:	bl	242fc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x12d8>
   24280:	mov	r0, r4
   24284:	pop	{r4, r5, fp, pc}
   24288:	push	{r4, sl, fp, lr}
   2428c:	add	fp, sp, #8
   24290:	mov	r4, r0
   24294:	movw	r1, #49632	; 0xc1e0
   24298:	movt	r1, #4
   2429c:	mov	r2, #0
   242a0:	bl	30194 <flatcc_builder_check_required@@Base>
   242a4:	cmp	r0, #0
   242a8:	beq	242b8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1294>
   242ac:	mov	r0, r4
   242b0:	pop	{r4, sl, fp, lr}
   242b4:	b	30224 <flatcc_builder_end_table@@Base>
   242b8:	movw	r0, #47592	; 0xb9e8
   242bc:	movt	r0, #4
   242c0:	movw	r1, #47733	; 0xba75
   242c4:	movt	r1, #4
   242c8:	movw	r3, #47828	; 0xbad4
   242cc:	movt	r3, #4
   242d0:	mov	r2, #23
   242d4:	bl	14950 <__assert_fail@plt>
   242d8:	push	{r4, r5, fp, lr}
   242dc:	add	fp, sp, #8
   242e0:	mov	r4, r1
   242e4:	mov	r5, r0
   242e8:	mov	r0, r1
   242ec:	bl	242f8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x12d4>
   242f0:	str	r4, [r5]
   242f4:	pop	{r4, r5, fp, pc}
   242f8:	bx	lr
   242fc:	push	{r4, r5, fp, lr}
   24300:	add	fp, sp, #8
   24304:	mov	r4, r1
   24308:	mov	r5, r0
   2430c:	mov	r0, r1
   24310:	bl	2431c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x12f8>
   24314:	strb	r4, [r5]
   24318:	pop	{r4, r5, fp, pc}
   2431c:	bx	lr
   24320:	push	{r4, r5, fp, lr}
   24324:	add	fp, sp, #8
   24328:	mov	r4, r1
   2432c:	mov	r5, r0
   24330:	mov	r0, r1
   24334:	bl	24340 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x131c>
   24338:	strh	r4, [r5]
   2433c:	pop	{r4, r5, fp, pc}
   24340:	bx	lr
   24344:	push	{r4, r5, fp, lr}
   24348:	add	fp, sp, #8
   2434c:	mov	r4, r1
   24350:	mov	r5, r0
   24354:	mov	r0, r1
   24358:	bl	24364 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1340>
   2435c:	strb	r4, [r5]
   24360:	pop	{r4, r5, fp, pc}
   24364:	bx	lr
   24368:	cmp	r1, #0
   2436c:	bxeq	lr
   24370:	b	2f444 <flatcc_builder_offset_vector_push@@Base>
   24374:	push	{r4, sl, fp, lr}
   24378:	add	fp, sp, #8
   2437c:	mov	r4, r0
   24380:	movw	r1, #49634	; 0xc1e2
   24384:	movt	r1, #4
   24388:	mov	r2, #2
   2438c:	bl	30194 <flatcc_builder_check_required@@Base>
   24390:	cmp	r0, #0
   24394:	beq	243a4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1380>
   24398:	mov	r0, r4
   2439c:	pop	{r4, sl, fp, lr}
   243a0:	b	30224 <flatcc_builder_end_table@@Base>
   243a4:	movw	r0, #47895	; 0xbb17
   243a8:	movt	r0, #4
   243ac:	movw	r1, #47733	; 0xba75
   243b0:	movt	r1, #4
   243b4:	movw	r3, #48039	; 0xbba7
   243b8:	movt	r3, #4
   243bc:	mov	r2, #29
   243c0:	bl	14950 <__assert_fail@plt>
   243c4:	push	{r4, r6, r7, sl, fp, lr}
   243c8:	add	fp, sp, #16
   243cc:	mov	r1, r3
   243d0:	mov	r6, r2
   243d4:	mov	r4, r0
   243d8:	mov	r0, r2
   243dc:	bl	243ec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x13c8>
   243e0:	mov	r7, r1
   243e4:	strd	r6, [r4]
   243e8:	pop	{r4, r6, r7, sl, fp, pc}
   243ec:	bx	lr
   243f0:	push	{r4, sl, fp, lr}
   243f4:	add	fp, sp, #8
   243f8:	mov	r4, r0
   243fc:	bl	24408 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x13e4>
   24400:	vstr	d0, [r4]
   24404:	pop	{r4, sl, fp, pc}
   24408:	bx	lr
   2440c:	push	{r4, sl, fp, lr}
   24410:	add	fp, sp, #8
   24414:	cmp	r1, #0
   24418:	popeq	{r4, sl, fp, pc}
   2441c:	mov	r4, r1
   24420:	mov	r1, #1
   24424:	bl	30854 <flatcc_builder_table_add_offset@@Base>
   24428:	cmp	r0, #0
   2442c:	strne	r4, [r0]
   24430:	pop	{r4, sl, fp, pc}
   24434:	push	{r4, sl, fp, lr}
   24438:	add	fp, sp, #8
   2443c:	cmp	r1, #0
   24440:	popeq	{r4, sl, fp, pc}
   24444:	mov	r4, r1
   24448:	mov	r1, #0
   2444c:	bl	30854 <flatcc_builder_table_add_offset@@Base>
   24450:	cmp	r0, #0
   24454:	strne	r4, [r0]
   24458:	pop	{r4, sl, fp, pc}
   2445c:	b	2f8c0 <flatcc_builder_start_offset_vector@@Base>
   24460:	b	245b4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1590>
   24464:	push	{r4, sl, fp, lr}
   24468:	add	fp, sp, #8
   2446c:	mov	r4, r0
   24470:	bl	31018 <flatcc_builder_create_string_str@@Base>
   24474:	mov	r1, r0
   24478:	mov	r0, r4
   2447c:	pop	{r4, sl, fp, lr}
   24480:	b	245bc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1598>
   24484:	b	2f8c0 <flatcc_builder_start_offset_vector@@Base>
   24488:	push	{r4, r5, r6, sl, fp, lr}
   2448c:	add	fp, sp, #16
   24490:	mov	r6, r2
   24494:	mov	r5, r1
   24498:	mov	r4, r0
   2449c:	bl	245e4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x15c0>
   244a0:	ldr	r0, [r5, #4]
   244a4:	ldm	r0, {r1, r2}
   244a8:	mov	r0, r4
   244ac:	bl	245e8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x15c4>
   244b0:	cmp	r6, #0
   244b4:	beq	244d8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x14b4>
   244b8:	ldrh	r0, [r5, #24]
   244bc:	cmp	r0, #14
   244c0:	bne	244d8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x14b4>
   244c4:	ldr	r0, [r5, #16]
   244c8:	ldr	r0, [r0, #124]	; 0x7c
   244cc:	ldr	r1, [r6, r0, lsl #2]
   244d0:	mov	r0, r4
   244d4:	bl	24608 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x15e4>
   244d8:	ldrd	r2, [r5, #48]	; 0x30
   244dc:	mov	r0, r4
   244e0:	bl	24630 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x160c>
   244e4:	mov	r0, r4
   244e8:	pop	{r4, r5, r6, sl, fp, lr}
   244ec:	b	24674 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1650>
   244f0:	push	{r4, sl, fp, lr}
   244f4:	add	fp, sp, #8
   244f8:	mov	r4, r0
   244fc:	bl	2f974 <flatcc_builder_end_offset_vector@@Base>
   24500:	mov	r1, r0
   24504:	mov	r0, r4
   24508:	pop	{r4, sl, fp, lr}
   2450c:	b	24720 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x16fc>
   24510:	push	{r4, sl, fp, lr}
   24514:	add	fp, sp, #8
   24518:	cmp	r1, #0
   2451c:	popeq	{r4, sl, fp, pc}
   24520:	mov	r4, r1
   24524:	mov	r1, #2
   24528:	mov	r2, #1
   2452c:	mov	r3, #1
   24530:	bl	30918 <flatcc_builder_table_add@@Base>
   24534:	cmp	r0, #0
   24538:	beq	24548 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1524>
   2453c:	mov	r1, r4
   24540:	pop	{r4, sl, fp, lr}
   24544:	b	24344 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1320>
   24548:	pop	{r4, sl, fp, pc}
   2454c:	push	{r4, sl, fp, lr}
   24550:	add	fp, sp, #8
   24554:	cmp	r1, #0
   24558:	popeq	{r4, sl, fp, pc}
   2455c:	mov	r4, r1
   24560:	mov	r1, #3
   24564:	bl	30854 <flatcc_builder_table_add_offset@@Base>
   24568:	cmp	r0, #0
   2456c:	strne	r4, [r0]
   24570:	pop	{r4, sl, fp, pc}
   24574:	push	{r4, sl, fp, lr}
   24578:	add	fp, sp, #8
   2457c:	mov	r4, r0
   24580:	bl	24754 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1730>
   24584:	mov	r1, r0
   24588:	mov	r0, r4
   2458c:	pop	{r4, sl, fp, lr}
   24590:	b	24748 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1724>
   24594:	push	{r4, sl, fp, lr}
   24598:	add	fp, sp, #8
   2459c:	mov	r4, r0
   245a0:	bl	2f974 <flatcc_builder_end_offset_vector@@Base>
   245a4:	mov	r1, r0
   245a8:	mov	r0, r4
   245ac:	pop	{r4, sl, fp, lr}
   245b0:	b	247a4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1780>
   245b4:	mov	r1, #4
   245b8:	b	2fb04 <flatcc_builder_start_table@@Base>
   245bc:	push	{r4, sl, fp, lr}
   245c0:	add	fp, sp, #8
   245c4:	cmp	r1, #0
   245c8:	popeq	{r4, sl, fp, pc}
   245cc:	mov	r4, r1
   245d0:	mov	r1, #0
   245d4:	bl	30854 <flatcc_builder_table_add_offset@@Base>
   245d8:	cmp	r0, #0
   245dc:	strne	r4, [r0]
   245e0:	pop	{r4, sl, fp, pc}
   245e4:	b	24694 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1670>
   245e8:	push	{r4, sl, fp, lr}
   245ec:	add	fp, sp, #8
   245f0:	mov	r4, r0
   245f4:	bl	30f5c <flatcc_builder_create_string@@Base>
   245f8:	mov	r1, r0
   245fc:	mov	r0, r4
   24600:	pop	{r4, sl, fp, lr}
   24604:	b	2469c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1678>
   24608:	push	{r4, sl, fp, lr}
   2460c:	add	fp, sp, #8
   24610:	cmp	r1, #0
   24614:	popeq	{r4, sl, fp, pc}
   24618:	mov	r4, r1
   2461c:	mov	r1, #2
   24620:	bl	30854 <flatcc_builder_table_add_offset@@Base>
   24624:	cmp	r0, #0
   24628:	strne	r4, [r0]
   2462c:	pop	{r4, sl, fp, pc}
   24630:	push	{r4, r5, fp, lr}
   24634:	add	fp, sp, #8
   24638:	orrs	r1, r2, r3
   2463c:	popeq	{r4, r5, fp, pc}
   24640:	mov	r4, r3
   24644:	mov	r5, r2
   24648:	mov	r1, #1
   2464c:	mov	r2, #8
   24650:	mov	r3, #8
   24654:	bl	30918 <flatcc_builder_table_add@@Base>
   24658:	cmp	r0, #0
   2465c:	beq	24670 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x164c>
   24660:	mov	r2, r5
   24664:	mov	r3, r4
   24668:	pop	{r4, r5, fp, lr}
   2466c:	b	243c4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x13a0>
   24670:	pop	{r4, r5, fp, pc}
   24674:	push	{r4, sl, fp, lr}
   24678:	add	fp, sp, #8
   2467c:	mov	r4, r0
   24680:	bl	246d0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x16ac>
   24684:	mov	r1, r0
   24688:	mov	r0, r4
   2468c:	pop	{r4, sl, fp, lr}
   24690:	b	246c4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x16a0>
   24694:	mov	r1, #3
   24698:	b	2fb04 <flatcc_builder_start_table@@Base>
   2469c:	push	{r4, sl, fp, lr}
   246a0:	add	fp, sp, #8
   246a4:	cmp	r1, #0
   246a8:	popeq	{r4, sl, fp, pc}
   246ac:	mov	r4, r1
   246b0:	mov	r1, #0
   246b4:	bl	30854 <flatcc_builder_table_add_offset@@Base>
   246b8:	cmp	r0, #0
   246bc:	strne	r4, [r0]
   246c0:	pop	{r4, sl, fp, pc}
   246c4:	cmp	r1, #0
   246c8:	bxeq	lr
   246cc:	b	2f444 <flatcc_builder_offset_vector_push@@Base>
   246d0:	push	{r4, sl, fp, lr}
   246d4:	add	fp, sp, #8
   246d8:	mov	r4, r0
   246dc:	movw	r1, #49646	; 0xc1ee
   246e0:	movt	r1, #4
   246e4:	mov	r2, #1
   246e8:	bl	30194 <flatcc_builder_check_required@@Base>
   246ec:	cmp	r0, #0
   246f0:	beq	24700 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x16dc>
   246f4:	mov	r0, r4
   246f8:	pop	{r4, sl, fp, lr}
   246fc:	b	30224 <flatcc_builder_end_table@@Base>
   24700:	movw	r0, #48326	; 0xbcc6
   24704:	movt	r0, #4
   24708:	movw	r1, #47733	; 0xba75
   2470c:	movt	r1, #4
   24710:	movw	r3, #48476	; 0xbd5c
   24714:	movt	r3, #4
   24718:	mov	r2, #25
   2471c:	bl	14950 <__assert_fail@plt>
   24720:	push	{r4, sl, fp, lr}
   24724:	add	fp, sp, #8
   24728:	cmp	r1, #0
   2472c:	popeq	{r4, sl, fp, pc}
   24730:	mov	r4, r1
   24734:	mov	r1, #1
   24738:	bl	30854 <flatcc_builder_table_add_offset@@Base>
   2473c:	cmp	r0, #0
   24740:	strne	r4, [r0]
   24744:	pop	{r4, sl, fp, pc}
   24748:	cmp	r1, #0
   2474c:	bxeq	lr
   24750:	b	2f444 <flatcc_builder_offset_vector_push@@Base>
   24754:	push	{r4, sl, fp, lr}
   24758:	add	fp, sp, #8
   2475c:	mov	r4, r0
   24760:	movw	r1, #49650	; 0xc1f2
   24764:	movt	r1, #4
   24768:	mov	r2, #3
   2476c:	bl	30194 <flatcc_builder_check_required@@Base>
   24770:	cmp	r0, #0
   24774:	beq	24784 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1760>
   24778:	mov	r0, r4
   2477c:	pop	{r4, sl, fp, lr}
   24780:	b	30224 <flatcc_builder_end_table@@Base>
   24784:	movw	r0, #48549	; 0xbda5
   24788:	movt	r0, #4
   2478c:	movw	r1, #47733	; 0xba75
   24790:	movt	r1, #4
   24794:	movw	r3, #48690	; 0xbe32
   24798:	movt	r3, #4
   2479c:	mov	r2, #27
   247a0:	bl	14950 <__assert_fail@plt>
   247a4:	push	{r4, sl, fp, lr}
   247a8:	add	fp, sp, #8
   247ac:	cmp	r1, #0
   247b0:	popeq	{r4, sl, fp, pc}
   247b4:	mov	r4, r1
   247b8:	mov	r1, #1
   247bc:	bl	30854 <flatcc_builder_table_add_offset@@Base>
   247c0:	cmp	r0, #0
   247c4:	strne	r4, [r0]
   247c8:	pop	{r4, sl, fp, pc}
   247cc:	push	{r4, sl, fp, lr}
   247d0:	add	fp, sp, #8
   247d4:	cmp	r1, #0
   247d8:	popeq	{r4, sl, fp, pc}
   247dc:	mov	r4, r1
   247e0:	mov	r1, #4
   247e4:	bl	30854 <flatcc_builder_table_add_offset@@Base>
   247e8:	cmp	r0, #0
   247ec:	strne	r4, [r0]
   247f0:	pop	{r4, sl, fp, pc}
   247f4:	b	2efd0 <flatcc_builder_end_buffer@@Base>
   247f8:	push	{r4, sl, fp, lr}
   247fc:	add	fp, sp, #8
   24800:	mov	r4, r0
   24804:	movw	r1, #49658	; 0xc1fa
   24808:	movt	r1, #4
   2480c:	mov	r2, #2
   24810:	bl	30194 <flatcc_builder_check_required@@Base>
   24814:	cmp	r0, #0
   24818:	beq	24828 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1804>
   2481c:	mov	r0, r4
   24820:	pop	{r4, sl, fp, lr}
   24824:	b	30224 <flatcc_builder_end_table@@Base>
   24828:	movw	r0, #48757	; 0xbe75
   2482c:	movt	r0, #4
   24830:	movw	r1, #47733	; 0xba75
   24834:	movt	r1, #4
   24838:	movw	r3, #48904	; 0xbf08
   2483c:	movt	r3, #4
   24840:	mov	r2, #33	; 0x21
   24844:	bl	14950 <__assert_fail@plt>
   24848:	push	{r4, r5, fp, lr}
   2484c:	add	fp, sp, #8
   24850:	mov	r5, #0
   24854:	cmp	r0, #0
   24858:	beq	24878 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1854>
   2485c:	mov	r4, r0
   24860:	bl	249e8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19c4>
   24864:	cmp	r0, #0
   24868:	beq	24878 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1854>
   2486c:	mov	r0, r4
   24870:	bl	24a10 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19ec>
   24874:	add	r5, r4, r0
   24878:	mov	r0, r5
   2487c:	pop	{r4, r5, fp, pc}
   24880:	push	{r4, r5, fp, lr}
   24884:	add	fp, sp, #8
   24888:	cmp	r0, #0
   2488c:	beq	248e0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x18bc>
   24890:	mov	r4, r0
   24894:	bl	24a28 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a04>
   24898:	sub	r5, r4, r0
   2489c:	mov	r0, r5
   248a0:	bl	24a30 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a0c>
   248a4:	cmp	r0, #6
   248a8:	bcc	248d4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x18b0>
   248ac:	add	r0, r5, #4
   248b0:	bl	24a30 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a0c>
   248b4:	cmp	r0, #0
   248b8:	beq	248d4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x18b0>
   248bc:	add	r4, r4, r0
   248c0:	mov	r0, r4
   248c4:	bl	24a10 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19ec>
   248c8:	add	r0, r4, r0
   248cc:	add	r0, r0, #4
   248d0:	pop	{r4, r5, fp, pc}
   248d4:	movw	r0, #49184	; 0xc020
   248d8:	movt	r0, #4
   248dc:	b	248e8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x18c4>
   248e0:	movw	r0, #48975	; 0xbf4f
   248e4:	movt	r0, #4
   248e8:	movw	r1, #49013	; 0xbf75
   248ec:	movt	r1, #4
   248f0:	movw	r3, #49107	; 0xbfd3
   248f4:	movt	r3, #4
   248f8:	mov	r2, #237	; 0xed
   248fc:	bl	14950 <__assert_fail@plt>
   24900:	cmp	r0, #0
   24904:	moveq	r0, #0
   24908:	bxeq	lr
   2490c:	sub	r0, r0, #4
   24910:	b	24a10 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19ec>
   24914:	push	{r4, r5, fp, lr}
   24918:	add	fp, sp, #8
   2491c:	mov	r4, r1
   24920:	mov	r5, r0
   24924:	bl	24a40 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a1c>
   24928:	cmp	r0, r4
   2492c:	bls	24944 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1920>
   24930:	add	r4, r5, r4, lsl #2
   24934:	mov	r0, r4
   24938:	bl	24a10 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19ec>
   2493c:	add	r0, r4, r0
   24940:	pop	{r4, r5, fp, pc}
   24944:	movw	r0, #49217	; 0xc041
   24948:	movt	r0, #4
   2494c:	movw	r1, #49013	; 0xbf75
   24950:	movt	r1, #4
   24954:	movw	r3, #49272	; 0xc078
   24958:	movt	r3, #4
   2495c:	mov	r2, #215	; 0xd7
   24960:	bl	14950 <__assert_fail@plt>
   24964:	push	{r4, r5, fp, lr}
   24968:	add	fp, sp, #8
   2496c:	cmp	r0, #0
   24970:	beq	249c4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19a0>
   24974:	mov	r4, r0
   24978:	bl	24a28 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a04>
   2497c:	sub	r5, r4, r0
   24980:	mov	r0, r5
   24984:	bl	24a30 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a0c>
   24988:	cmp	r0, #8
   2498c:	bcc	249b8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1994>
   24990:	add	r0, r5, #6
   24994:	bl	24a30 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a0c>
   24998:	cmp	r0, #0
   2499c:	beq	249b8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1994>
   249a0:	add	r4, r4, r0
   249a4:	mov	r0, r4
   249a8:	bl	24a10 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19ec>
   249ac:	add	r0, r4, r0
   249b0:	add	r0, r0, #4
   249b4:	pop	{r4, r5, fp, pc}
   249b8:	movw	r0, #49184	; 0xc020
   249bc:	movt	r0, #4
   249c0:	b	249cc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19a8>
   249c4:	movw	r0, #48975	; 0xbf4f
   249c8:	movt	r0, #4
   249cc:	movw	r1, #49013	; 0xbf75
   249d0:	movt	r1, #4
   249d4:	movw	r3, #49356	; 0xc0cc
   249d8:	movt	r3, #4
   249dc:	mov	r2, #224	; 0xe0
   249e0:	bl	14950 <__assert_fail@plt>
   249e4:	b	24a54 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a30>
   249e8:	push	{fp, lr}
   249ec:	mov	fp, sp
   249f0:	add	r0, r0, #4
   249f4:	bl	24a18 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19f4>
   249f8:	movw	r1, #47550	; 0xb9be
   249fc:	movt	r1, #44221	; 0xacbd
   24a00:	add	r0, r0, r1
   24a04:	clz	r0, r0
   24a08:	lsr	r0, r0, #5
   24a0c:	pop	{fp, pc}
   24a10:	ldr	r0, [r0]
   24a14:	b	24a24 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a00>
   24a18:	ldr	r0, [r0]
   24a1c:	b	24a20 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19fc>
   24a20:	bx	lr
   24a24:	bx	lr
   24a28:	ldr	r0, [r0]
   24a2c:	b	24a38 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a14>
   24a30:	ldrh	r0, [r0]
   24a34:	b	24a3c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a18>
   24a38:	bx	lr
   24a3c:	bx	lr
   24a40:	cmp	r0, #0
   24a44:	moveq	r0, #0
   24a48:	bxeq	lr
   24a4c:	sub	r0, r0, #4
   24a50:	b	24a10 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19ec>
   24a54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24a58:	add	fp, sp, #28
   24a5c:	sub	sp, sp, #4
   24a60:	mov	r8, r0
   24a64:	bl	24b14 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1af0>
   24a68:	cmp	r0, #0
   24a6c:	beq	24b0c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1ae8>
   24a70:	mov	r5, r0
   24a74:	lsr	r7, r0, #1
   24a78:	sub	r6, r0, #1
   24a7c:	mov	r0, r8
   24a80:	mov	r1, r7
   24a84:	mov	r2, r6
   24a88:	bl	24b28 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b04>
   24a8c:	sub	r7, r7, #1
   24a90:	cmn	r7, #1
   24a94:	bne	24a7c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a58>
   24a98:	cmp	r6, #0
   24a9c:	beq	24b0c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1ae8>
   24aa0:	mov	r0, #4
   24aa4:	sub	r7, r0, r5, lsl #2
   24aa8:	mvn	r0, #3
   24aac:	add	r4, r0, r5, lsl #2
   24ab0:	sub	r5, r5, #2
   24ab4:	add	r6, r8, r4
   24ab8:	mov	r0, r6
   24abc:	bl	24a10 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19ec>
   24ac0:	add	r9, r0, r4
   24ac4:	mov	r0, r8
   24ac8:	bl	24a10 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19ec>
   24acc:	mov	sl, r0
   24ad0:	mov	r0, r8
   24ad4:	mov	r1, r9
   24ad8:	bl	24c40 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c1c>
   24adc:	add	r1, sl, r7
   24ae0:	mov	r0, r6
   24ae4:	bl	24c40 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c1c>
   24ae8:	mov	r0, r8
   24aec:	mov	r1, #0
   24af0:	mov	r2, r5
   24af4:	bl	24b28 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b04>
   24af8:	add	r7, r7, #4
   24afc:	sub	r5, r5, #1
   24b00:	sub	r4, r4, #4
   24b04:	cmn	r5, #1
   24b08:	bne	24ab4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a90>
   24b0c:	sub	sp, fp, #28
   24b10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24b14:	cmp	r0, #0
   24b18:	moveq	r0, #0
   24b1c:	bxeq	lr
   24b20:	sub	r0, r0, #4
   24b24:	b	24a10 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19ec>
   24b28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24b2c:	add	fp, sp, #28
   24b30:	sub	sp, sp, #4
   24b34:	cmp	r2, r1, lsl #1
   24b38:	bcc	24c38 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c14>
   24b3c:	mov	r4, r2
   24b40:	mov	sl, r1
   24b44:	mov	r8, r0
   24b48:	lsl	r7, r1, #1
   24b4c:	str	r2, [sp]
   24b50:	cmp	r7, r4
   24b54:	bcs	24ba0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b7c>
   24b58:	mov	r0, r8
   24b5c:	mov	r1, r7
   24b60:	bl	24ce0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1cbc>
   24b64:	bl	24c60 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c3c>
   24b68:	mov	r9, r0
   24b6c:	orr	r4, r7, #1
   24b70:	mov	r0, r8
   24b74:	mov	r1, r4
   24b78:	bl	24ce0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1cbc>
   24b7c:	bl	24c60 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c3c>
   24b80:	mov	r6, r0
   24b84:	bl	24d84 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d60>
   24b88:	mov	r2, r0
   24b8c:	mov	r0, r9
   24b90:	mov	r1, r6
   24b94:	bl	24d30 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d0c>
   24b98:	cmp	r0, #0
   24b9c:	movlt	r7, r4
   24ba0:	mov	r6, r7
   24ba4:	mov	r0, r8
   24ba8:	mov	r1, sl
   24bac:	bl	24ce0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1cbc>
   24bb0:	bl	24c60 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c3c>
   24bb4:	mov	r7, r0
   24bb8:	mov	r0, r8
   24bbc:	mov	r1, r6
   24bc0:	bl	24ce0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1cbc>
   24bc4:	bl	24c60 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c3c>
   24bc8:	mov	r5, r0
   24bcc:	bl	24d84 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d60>
   24bd0:	mov	r2, r0
   24bd4:	mov	r0, r7
   24bd8:	mov	r1, r5
   24bdc:	bl	24d30 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d0c>
   24be0:	cmn	r0, #1
   24be4:	bgt	24c38 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c14>
   24be8:	sub	r7, sl, r6
   24bec:	add	r5, r8, r6, lsl #2
   24bf0:	mov	r0, r5
   24bf4:	bl	24a10 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19ec>
   24bf8:	sub	r9, r0, r7, lsl #2
   24bfc:	add	r4, r8, sl, lsl #2
   24c00:	mov	r0, r4
   24c04:	bl	24a10 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19ec>
   24c08:	mov	sl, r0
   24c0c:	mov	r0, r4
   24c10:	mov	r1, r9
   24c14:	ldr	r4, [sp]
   24c18:	bl	24c40 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c1c>
   24c1c:	add	r1, sl, r7, lsl #2
   24c20:	mov	r0, r5
   24c24:	bl	24c40 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c1c>
   24c28:	lsl	r7, r6, #1
   24c2c:	cmp	r4, r6, lsl #1
   24c30:	mov	sl, r6
   24c34:	bcs	24b50 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b2c>
   24c38:	sub	sp, fp, #28
   24c3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24c40:	push	{r4, r5, fp, lr}
   24c44:	add	fp, sp, #8
   24c48:	mov	r4, r1
   24c4c:	mov	r5, r0
   24c50:	mov	r0, r1
   24c54:	bl	24d98 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d74>
   24c58:	str	r4, [r5]
   24c5c:	pop	{r4, r5, fp, pc}
   24c60:	push	{r4, r5, fp, lr}
   24c64:	add	fp, sp, #8
   24c68:	cmp	r0, #0
   24c6c:	beq	24cc0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c9c>
   24c70:	mov	r4, r0
   24c74:	bl	24a28 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a04>
   24c78:	sub	r5, r4, r0
   24c7c:	mov	r0, r5
   24c80:	bl	24a30 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a0c>
   24c84:	cmp	r0, #6
   24c88:	bcc	24cb4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c90>
   24c8c:	add	r0, r5, #4
   24c90:	bl	24a30 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a0c>
   24c94:	cmp	r0, #0
   24c98:	beq	24cb4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c90>
   24c9c:	add	r4, r4, r0
   24ca0:	mov	r0, r4
   24ca4:	bl	24a10 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19ec>
   24ca8:	add	r0, r4, r0
   24cac:	add	r0, r0, #4
   24cb0:	pop	{r4, r5, fp, pc}
   24cb4:	movw	r0, #49184	; 0xc020
   24cb8:	movt	r0, #4
   24cbc:	b	24cc8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1ca4>
   24cc0:	movw	r0, #48975	; 0xbf4f
   24cc4:	movt	r0, #4
   24cc8:	movw	r1, #49013	; 0xbf75
   24ccc:	movt	r1, #4
   24cd0:	movw	r3, #49431	; 0xc117
   24cd4:	movt	r3, #4
   24cd8:	mov	r2, #195	; 0xc3
   24cdc:	bl	14950 <__assert_fail@plt>
   24ce0:	push	{r4, r5, fp, lr}
   24ce4:	add	fp, sp, #8
   24ce8:	mov	r4, r1
   24cec:	mov	r5, r0
   24cf0:	bl	24a40 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a1c>
   24cf4:	cmp	r0, r4
   24cf8:	bls	24d10 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1cec>
   24cfc:	add	r4, r5, r4, lsl #2
   24d00:	mov	r0, r4
   24d04:	bl	24a10 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19ec>
   24d08:	add	r0, r4, r0
   24d0c:	pop	{r4, r5, fp, pc}
   24d10:	movw	r0, #49217	; 0xc041
   24d14:	movt	r0, #4
   24d18:	movw	r1, #49013	; 0xbf75
   24d1c:	movt	r1, #4
   24d20:	movw	r3, #49500	; 0xc15c
   24d24:	movt	r3, #4
   24d28:	mov	r2, #192	; 0xc0
   24d2c:	bl	14950 <__assert_fail@plt>
   24d30:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   24d34:	add	fp, sp, #24
   24d38:	mov	r4, r2
   24d3c:	mov	r8, r1
   24d40:	mov	r6, r0
   24d44:	bl	24d84 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d60>
   24d48:	mov	r7, r0
   24d4c:	mov	r5, #0
   24d50:	cmp	r0, r4
   24d54:	movwhi	r5, #1
   24d58:	mov	r2, r4
   24d5c:	movcc	r2, r0
   24d60:	mov	r0, r6
   24d64:	mov	r1, r8
   24d68:	bl	14938 <strncmp@plt>
   24d6c:	cmp	r0, #0
   24d70:	mvneq	r0, #0
   24d74:	movne	r5, r0
   24d78:	cmp	r7, r4
   24d7c:	movcs	r0, r5
   24d80:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   24d84:	cmp	r0, #0
   24d88:	moveq	r0, #0
   24d8c:	bxeq	lr
   24d90:	sub	r0, r0, #4
   24d94:	b	24a10 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19ec>
   24d98:	bx	lr
   24d9c:	cmp	r0, #0
   24da0:	bxne	lr
   24da4:	push	{fp, lr}
   24da8:	mov	fp, sp
   24dac:	movw	r0, #4264	; 0x10a8
   24db0:	movt	r0, #6
   24db4:	ldr	r3, [r0]
   24db8:	movw	r0, #20071	; 0x4e67
   24dbc:	movt	r0, #3
   24dc0:	mov	r1, #34	; 0x22
   24dc4:	mov	r2, #1
   24dc8:	bl	14830 <fwrite@plt>
   24dcc:	mov	r0, #1
   24dd0:	bl	14878 <exit@plt>

00024dd4 <str_set_clear@@Base>:
   24dd4:	b	24dd8 <str_set_clear@@Base+0x4>
   24dd8:	push	{r4, sl, fp, lr}
   24ddc:	add	fp, sp, #8
   24de0:	mov	r4, r0
   24de4:	ldr	r0, [r0]
   24de8:	cmp	r0, #0
   24dec:	beq	24df4 <str_set_clear@@Base+0x20>
   24df0:	bl	147dc <free@plt>
   24df4:	vmov.i32	q8, #0	; 0x00000000
   24df8:	vst1.32	{d16-d17}, [r4]
   24dfc:	pop	{r4, sl, fp, pc}

00024e00 <str_set_destroy@@Base>:
   24e00:	push	{r4, sl, fp, lr}
   24e04:	add	fp, sp, #8
   24e08:	mov	r4, r0
   24e0c:	cmp	r1, #0
   24e10:	movne	r0, r4
   24e14:	blne	24e24 <str_set_destroy@@Base+0x24>
   24e18:	mov	r0, r4
   24e1c:	pop	{r4, sl, fp, lr}
   24e20:	b	24dd8 <str_set_clear@@Base+0x4>
   24e24:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   24e28:	add	fp, sp, #24
   24e2c:	mov	r6, r0
   24e30:	ldr	r0, [r0, #12]
   24e34:	cmp	r0, #0
   24e38:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   24e3c:	mov	r8, r2
   24e40:	mov	r5, r1
   24e44:	ldr	r7, [r6]
   24e48:	mov	r4, #0
   24e4c:	ldr	r1, [r7, r4, lsl #2]
   24e50:	orr	r0, r1, #2
   24e54:	cmp	r0, #2
   24e58:	beq	24e64 <str_set_destroy@@Base+0x64>
   24e5c:	mov	r0, r8
   24e60:	blx	r5
   24e64:	ldr	r0, [r6, #12]
   24e68:	add	r4, r4, #1
   24e6c:	cmp	r4, r0
   24e70:	bcc	24e4c <str_set_destroy@@Base+0x4c>
   24e74:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00024e78 <str_set_init@@Base>:
   24e78:	b	24e7c <str_set_init@@Base+0x4>
   24e7c:	push	{r4, r5, fp, lr}
   24e80:	add	fp, sp, #8
   24e84:	mov	r4, r0
   24e88:	mov	r2, #4
   24e8c:	mov	r0, #179	; 0xb3
   24e90:	mov	r5, r2
   24e94:	mul	r3, r2, r0
   24e98:	lsl	r2, r2, #1
   24e9c:	cmp	r1, r3, lsr #8
   24ea0:	bhi	24e90 <str_set_init@@Base+0x18>
   24ea4:	mov	r0, r5
   24ea8:	mov	r1, #4
   24eac:	bl	147ac <calloc@plt>
   24eb0:	str	r0, [r4]
   24eb4:	cmp	r0, #0
   24eb8:	movne	r0, #0
   24ebc:	strne	r0, [r4, #4]
   24ec0:	strne	r0, [r4, #8]
   24ec4:	strne	r5, [r4, #12]
   24ec8:	popne	{r4, r5, fp, pc}
   24ecc:	mvn	r0, #0
   24ed0:	pop	{r4, r5, fp, pc}

00024ed4 <str_set_resize@@Base>:
   24ed4:	b	24ed8 <str_set_resize@@Base+0x4>
   24ed8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24edc:	add	fp, sp, #28
   24ee0:	sub	sp, sp, #28
   24ee4:	mov	r4, r0
   24ee8:	ldr	r5, [r0]
   24eec:	ldr	r0, [r0, #8]
   24ef0:	cmp	r0, r1
   24ef4:	movhi	r1, r0
   24ef8:	add	r8, sp, #8
   24efc:	mov	r0, r8
   24f00:	bl	24e7c <str_set_init@@Base+0x4>
   24f04:	mov	r1, r0
   24f08:	mvn	r0, #0
   24f0c:	cmp	r1, #0
   24f10:	beq	24f1c <str_set_resize@@Base+0x48>
   24f14:	sub	sp, fp, #28
   24f18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24f1c:	ldr	r0, [r4, #12]
   24f20:	cmp	r0, #0
   24f24:	beq	24f78 <str_set_resize@@Base+0xa4>
   24f28:	mov	r6, #0
   24f2c:	mov	sl, #3
   24f30:	add	r9, sp, #8
   24f34:	ldr	r7, [r5, r6, lsl #2]
   24f38:	orr	r0, r7, #2
   24f3c:	cmp	r0, #2
   24f40:	beq	24f68 <str_set_resize@@Base+0x94>
   24f44:	mov	r0, r7
   24f48:	bl	251c4 <str_set_insert_item@@Base+0x48>
   24f4c:	bl	251c8 <str_set_insert_item@@Base+0x4c>
   24f50:	mov	r2, r0
   24f54:	str	sl, [sp]
   24f58:	mov	r0, r9
   24f5c:	mov	r1, r7
   24f60:	mov	r3, r7
   24f64:	bl	24f98 <str_set_insert@@Base+0x4>
   24f68:	ldr	r0, [r4, #12]
   24f6c:	add	r6, r6, #1
   24f70:	cmp	r6, r0
   24f74:	bcc	24f34 <str_set_resize@@Base+0x60>
   24f78:	mov	r0, r4
   24f7c:	bl	24dd8 <str_set_clear@@Base+0x4>
   24f80:	vld1.64	{d16-d17}, [r8]
   24f84:	vst1.32	{d16-d17}, [r4]
   24f88:	mov	r0, #0
   24f8c:	sub	sp, fp, #28
   24f90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00024f94 <str_set_insert@@Base>:
   24f94:	b	24f98 <str_set_insert@@Base+0x4>
   24f98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24f9c:	add	fp, sp, #28
   24fa0:	sub	sp, sp, #12
   24fa4:	str	r2, [sp, #8]
   24fa8:	cmp	r3, #2
   24fac:	beq	250f4 <str_set_insert@@Base+0x160>
   24fb0:	mov	r9, r3
   24fb4:	cmp	r3, #1
   24fb8:	beq	25114 <str_set_insert@@Base+0x180>
   24fbc:	cmp	r9, #0
   24fc0:	beq	25134 <str_set_insert@@Base+0x1a0>
   24fc4:	mov	r7, r1
   24fc8:	mov	r5, r0
   24fcc:	ldr	r0, [r0, #8]
   24fd0:	ldr	r1, [r5, #12]
   24fd4:	mov	r2, #179	; 0xb3
   24fd8:	mul	r1, r1, r2
   24fdc:	cmp	r0, r1, lsr #8
   24fe0:	bcc	24ff8 <str_set_insert@@Base+0x64>
   24fe4:	lsl	r1, r0, #1
   24fe8:	mov	r0, r5
   24fec:	bl	24ed8 <str_set_resize@@Base+0x4>
   24ff0:	cmp	r0, #0
   24ff4:	bne	25154 <str_set_insert@@Base+0x1c0>
   24ff8:	ldr	sl, [fp, #8]
   24ffc:	ldr	r8, [r5]
   25000:	ldr	r4, [r5, #12]
   25004:	mov	r0, r7
   25008:	ldr	r1, [sp, #8]
   2500c:	bl	25364 <str_set_visit@@Base+0x4>
   25010:	sub	r6, r4, #1
   25014:	and	r1, r0, r6
   25018:	orr	r2, sl, #1
   2501c:	cmp	r2, #3
   25020:	bne	25058 <str_set_insert@@Base+0xc4>
   25024:	ldr	r2, [r5, #8]
   25028:	add	r2, r2, #1
   2502c:	str	r2, [r5, #8]
   25030:	b	25038 <str_set_insert@@Base+0xa4>
   25034:	and	r1, r0, r6
   25038:	add	r0, r0, #1
   2503c:	mov	r5, r8
   25040:	ldr	r1, [r5, r1, lsl #2]!
   25044:	orr	r1, r1, #2
   25048:	cmp	r1, #2
   2504c:	bne	25034 <str_set_insert@@Base+0xa0>
   25050:	mov	r4, #0
   25054:	b	250d0 <str_set_insert@@Base+0x13c>
   25058:	stm	sp, {r5, r9}
   2505c:	add	sl, r0, #1
   25060:	mov	r9, #0
   25064:	b	25070 <str_set_insert@@Base+0xdc>
   25068:	and	r1, sl, r6
   2506c:	add	sl, sl, #1
   25070:	mov	r5, r8
   25074:	ldr	r4, [r5, r1, lsl #2]!
   25078:	cmp	r4, #2
   2507c:	beq	250a4 <str_set_insert@@Base+0x110>
   25080:	cmp	r4, #0
   25084:	beq	250b0 <str_set_insert@@Base+0x11c>
   25088:	mov	r0, r7
   2508c:	ldr	r1, [sp, #8]
   25090:	mov	r2, r4
   25094:	bl	2539c <str_set_visit@@Base+0x3c>
   25098:	cmp	r0, #0
   2509c:	beq	25068 <str_set_insert@@Base+0xd4>
   250a0:	b	250e0 <str_set_insert@@Base+0x14c>
   250a4:	cmp	r9, #0
   250a8:	moveq	r9, r5
   250ac:	b	25068 <str_set_insert@@Base+0xd4>
   250b0:	ldr	r1, [sp]
   250b4:	ldr	r0, [r1, #8]
   250b8:	add	r0, r0, #1
   250bc:	str	r0, [r1, #8]
   250c0:	cmp	r9, #0
   250c4:	movne	r5, r9
   250c8:	mov	r4, #0
   250cc:	ldr	r9, [sp, #4]
   250d0:	str	r9, [r5]
   250d4:	mov	r0, r4
   250d8:	sub	sp, fp, #28
   250dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   250e0:	ldr	r0, [fp, #8]
   250e4:	cmp	r0, #0
   250e8:	ldr	r9, [sp, #4]
   250ec:	streq	r9, [r5]
   250f0:	b	250d4 <str_set_insert@@Base+0x140>
   250f4:	movw	r0, #49901	; 0xc2ed
   250f8:	movt	r0, #4
   250fc:	movw	r1, #49747	; 0xc253
   25100:	movt	r1, #4
   25104:	movw	r3, #49827	; 0xc2a3
   25108:	movt	r3, #4
   2510c:	mov	r2, #115	; 0x73
   25110:	bl	14950 <__assert_fail@plt>
   25114:	movw	r0, #49924	; 0xc304
   25118:	movt	r0, #4
   2511c:	movw	r1, #49747	; 0xc253
   25120:	movt	r1, #4
   25124:	movw	r3, #49827	; 0xc2a3
   25128:	movt	r3, #4
   2512c:	mov	r2, #116	; 0x74
   25130:	bl	14950 <__assert_fail@plt>
   25134:	movw	r0, #49724	; 0xc23c
   25138:	movt	r0, #4
   2513c:	movw	r1, #49747	; 0xc253
   25140:	movt	r1, #4
   25144:	movw	r3, #49827	; 0xc2a3
   25148:	movt	r3, #4
   2514c:	mov	r2, #114	; 0x72
   25150:	bl	14950 <__assert_fail@plt>
   25154:	movw	r0, #4264	; 0x10a8
   25158:	movt	r0, #6
   2515c:	ldr	r0, [r0]
   25160:	movw	r1, #49945	; 0xc319
   25164:	movt	r1, #4
   25168:	movw	r2, #49968	; 0xc330
   2516c:	movt	r2, #4
   25170:	bl	14890 <fprintf@plt>
   25174:	mov	r0, #1
   25178:	bl	14878 <exit@plt>

0002517c <str_set_insert_item@@Base>:
   2517c:	push	{r4, r5, r6, sl, fp, lr}
   25180:	add	fp, sp, #16
   25184:	sub	sp, sp, #8
   25188:	mov	r4, r2
   2518c:	mov	r5, r1
   25190:	mov	r6, r0
   25194:	mov	r0, r1
   25198:	bl	251c4 <str_set_insert_item@@Base+0x48>
   2519c:	mov	r0, r5
   251a0:	bl	251c8 <str_set_insert_item@@Base+0x4c>
   251a4:	mov	r2, r0
   251a8:	str	r4, [sp]
   251ac:	mov	r0, r6
   251b0:	mov	r1, r5
   251b4:	mov	r3, r5
   251b8:	bl	24f98 <str_set_insert@@Base+0x4>
   251bc:	sub	sp, fp, #16
   251c0:	pop	{r4, r5, r6, sl, fp, pc}
   251c4:	bx	lr
   251c8:	b	14884 <strlen@plt>

000251cc <str_set_find@@Base>:
   251cc:	b	251d0 <str_set_find@@Base+0x4>
   251d0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   251d4:	add	fp, sp, #24
   251d8:	ldr	r4, [r0]
   251dc:	cmp	r4, #0
   251e0:	beq	25244 <str_set_find@@Base+0x78>
   251e4:	mov	r8, r2
   251e8:	mov	r9, r1
   251ec:	ldr	r5, [r0, #12]
   251f0:	mov	r0, r1
   251f4:	mov	r1, r2
   251f8:	bl	25364 <str_set_visit@@Base+0x4>
   251fc:	mov	r6, r0
   25200:	sub	r5, r5, #1
   25204:	b	2520c <str_set_find@@Base+0x40>
   25208:	add	r6, r6, #1
   2520c:	and	r0, r6, r5
   25210:	ldr	r7, [r4, r0, lsl #2]
   25214:	cmp	r7, #2
   25218:	beq	25208 <str_set_find@@Base+0x3c>
   2521c:	cmp	r7, #0
   25220:	beq	25244 <str_set_find@@Base+0x78>
   25224:	mov	r0, r9
   25228:	mov	r1, r8
   2522c:	mov	r2, r7
   25230:	bl	2539c <str_set_visit@@Base+0x3c>
   25234:	cmp	r0, #0
   25238:	beq	25208 <str_set_find@@Base+0x3c>
   2523c:	mov	r0, r7
   25240:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   25244:	mov	r7, #0
   25248:	mov	r0, r7
   2524c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00025250 <str_set_find_item@@Base>:
   25250:	push	{r4, r5, fp, lr}
   25254:	add	fp, sp, #8
   25258:	mov	r4, r1
   2525c:	mov	r5, r0
   25260:	mov	r0, r1
   25264:	bl	251c4 <str_set_insert_item@@Base+0x48>
   25268:	mov	r0, r4
   2526c:	bl	251c8 <str_set_insert_item@@Base+0x4c>
   25270:	mov	r2, r0
   25274:	mov	r0, r5
   25278:	mov	r1, r4
   2527c:	pop	{r4, r5, fp, lr}
   25280:	b	251d0 <str_set_find@@Base+0x4>

00025284 <str_set_remove@@Base>:
   25284:	b	25288 <str_set_remove@@Base+0x4>
   25288:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2528c:	add	fp, sp, #28
   25290:	sub	sp, sp, #4
   25294:	ldr	r5, [r0]
   25298:	mov	r7, #0
   2529c:	cmp	r5, #0
   252a0:	beq	25320 <str_set_remove@@Base+0x9c>
   252a4:	mov	r9, r2
   252a8:	mov	sl, r1
   252ac:	str	r0, [sp]
   252b0:	ldr	r6, [r0, #12]
   252b4:	mov	r0, r1
   252b8:	mov	r1, r2
   252bc:	bl	25364 <str_set_visit@@Base+0x4>
   252c0:	mov	r4, r0
   252c4:	sub	r6, r6, #1
   252c8:	b	252d0 <str_set_remove@@Base+0x4c>
   252cc:	add	r4, r4, #1
   252d0:	and	r8, r4, r6
   252d4:	ldr	r7, [r5, r8, lsl #2]
   252d8:	cmp	r7, #2
   252dc:	beq	252cc <str_set_remove@@Base+0x48>
   252e0:	cmp	r7, #0
   252e4:	beq	2531c <str_set_remove@@Base+0x98>
   252e8:	mov	r0, sl
   252ec:	mov	r1, r9
   252f0:	mov	r2, r7
   252f4:	bl	2539c <str_set_visit@@Base+0x3c>
   252f8:	cmp	r0, #0
   252fc:	beq	252cc <str_set_remove@@Base+0x48>
   25300:	mov	r0, #2
   25304:	str	r0, [r5, r8, lsl #2]
   25308:	ldr	r1, [sp]
   2530c:	ldr	r0, [r1, #8]
   25310:	sub	r0, r0, #1
   25314:	str	r0, [r1, #8]
   25318:	b	25320 <str_set_remove@@Base+0x9c>
   2531c:	mov	r7, #0
   25320:	mov	r0, r7
   25324:	sub	sp, fp, #28
   25328:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002532c <str_set_remove_item@@Base>:
   2532c:	push	{r4, r5, fp, lr}
   25330:	add	fp, sp, #8
   25334:	mov	r4, r1
   25338:	mov	r5, r0
   2533c:	mov	r0, r1
   25340:	bl	251c4 <str_set_insert_item@@Base+0x48>
   25344:	mov	r0, r4
   25348:	bl	251c8 <str_set_insert_item@@Base+0x4c>
   2534c:	mov	r2, r0
   25350:	mov	r0, r5
   25354:	mov	r1, r4
   25358:	pop	{r4, r5, fp, lr}
   2535c:	b	25288 <str_set_remove@@Base+0x4>

00025360 <str_set_visit@@Base>:
   25360:	b	24e24 <str_set_destroy@@Base+0x24>
   25364:	push	{fp, lr}
   25368:	mov	fp, sp
   2536c:	sub	sp, sp, #16
   25370:	add	r2, sp, #8
   25374:	movw	r3, #15186	; 0x3b52
   25378:	movt	r3, #12137	; 0x2f69
   2537c:	str	r3, [sp]
   25380:	str	r2, [sp, #4]
   25384:	mov	r2, r1
   25388:	mov	r3, #0
   2538c:	bl	31d78 <cmetrohash64_1@@Base>
   25390:	ldr	r0, [sp, #8]
   25394:	mov	sp, fp
   25398:	pop	{fp, pc}
   2539c:	push	{fp, lr}
   253a0:	mov	fp, sp
   253a4:	mov	r3, r1
   253a8:	mov	r1, r2
   253ac:	mov	r2, r3
   253b0:	bl	14938 <strncmp@plt>
   253b4:	clz	r0, r0
   253b8:	lsr	r0, r0, #5
   253bc:	pop	{fp, pc}

000253c0 <ptr_set_clear@@Base>:
   253c0:	b	253c4 <ptr_set_clear@@Base+0x4>
   253c4:	push	{r4, sl, fp, lr}
   253c8:	add	fp, sp, #8
   253cc:	mov	r4, r0
   253d0:	ldr	r0, [r0]
   253d4:	cmp	r0, #0
   253d8:	beq	253e0 <ptr_set_clear@@Base+0x20>
   253dc:	bl	147dc <free@plt>
   253e0:	vmov.i32	q8, #0	; 0x00000000
   253e4:	vst1.32	{d16-d17}, [r4]
   253e8:	pop	{r4, sl, fp, pc}

000253ec <ptr_set_destroy@@Base>:
   253ec:	push	{r4, sl, fp, lr}
   253f0:	add	fp, sp, #8
   253f4:	mov	r4, r0
   253f8:	cmp	r1, #0
   253fc:	movne	r0, r4
   25400:	blne	25410 <ptr_set_destroy@@Base+0x24>
   25404:	mov	r0, r4
   25408:	pop	{r4, sl, fp, lr}
   2540c:	b	253c4 <ptr_set_clear@@Base+0x4>
   25410:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   25414:	add	fp, sp, #24
   25418:	mov	r6, r0
   2541c:	ldr	r0, [r0, #12]
   25420:	cmp	r0, #0
   25424:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   25428:	mov	r8, r2
   2542c:	mov	r5, r1
   25430:	ldr	r7, [r6]
   25434:	mov	r4, #0
   25438:	ldr	r1, [r7, r4, lsl #2]
   2543c:	orr	r0, r1, #2
   25440:	cmp	r0, #2
   25444:	beq	25450 <ptr_set_destroy@@Base+0x64>
   25448:	mov	r0, r8
   2544c:	blx	r5
   25450:	ldr	r0, [r6, #12]
   25454:	add	r4, r4, #1
   25458:	cmp	r4, r0
   2545c:	bcc	25438 <ptr_set_destroy@@Base+0x4c>
   25460:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00025464 <ptr_set_init@@Base>:
   25464:	b	25468 <ptr_set_init@@Base+0x4>
   25468:	push	{r4, r5, fp, lr}
   2546c:	add	fp, sp, #8
   25470:	mov	r4, r0
   25474:	mov	r2, #4
   25478:	mov	r0, #179	; 0xb3
   2547c:	mov	r5, r2
   25480:	mul	r3, r2, r0
   25484:	lsl	r2, r2, #1
   25488:	cmp	r1, r3, lsr #8
   2548c:	bhi	2547c <ptr_set_init@@Base+0x18>
   25490:	mov	r0, r5
   25494:	mov	r1, #4
   25498:	bl	147ac <calloc@plt>
   2549c:	str	r0, [r4]
   254a0:	cmp	r0, #0
   254a4:	movne	r0, #0
   254a8:	strne	r0, [r4, #4]
   254ac:	strne	r0, [r4, #8]
   254b0:	strne	r5, [r4, #12]
   254b4:	popne	{r4, r5, fp, pc}
   254b8:	mvn	r0, #0
   254bc:	pop	{r4, r5, fp, pc}

000254c0 <ptr_set_resize@@Base>:
   254c0:	b	254c4 <ptr_set_resize@@Base+0x4>
   254c4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   254c8:	add	fp, sp, #24
   254cc:	sub	sp, sp, #16
   254d0:	mov	r4, r0
   254d4:	ldr	r5, [r0]
   254d8:	ldr	r0, [r0, #8]
   254dc:	cmp	r0, r1
   254e0:	movhi	r1, r0
   254e4:	mov	r8, sp
   254e8:	mov	r0, r8
   254ec:	bl	25468 <ptr_set_init@@Base+0x4>
   254f0:	mov	r1, r0
   254f4:	mvn	r0, #0
   254f8:	cmp	r1, #0
   254fc:	beq	25508 <ptr_set_resize@@Base+0x48>
   25500:	sub	sp, fp, #24
   25504:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   25508:	ldr	r0, [r4, #12]
   2550c:	cmp	r0, #0
   25510:	beq	25558 <ptr_set_resize@@Base+0x98>
   25514:	mov	r6, #0
   25518:	mov	r9, sp
   2551c:	ldr	r7, [r5, r6, lsl #2]
   25520:	orr	r0, r7, #2
   25524:	cmp	r0, #2
   25528:	beq	25548 <ptr_set_resize@@Base+0x88>
   2552c:	mov	r0, r7
   25530:	bl	25790 <ptr_set_insert_item@@Base+0x34>
   25534:	mov	r0, r9
   25538:	mov	r1, r7
   2553c:	mov	r2, r7
   25540:	mov	r3, #3
   25544:	bl	25580 <ptr_set_insert@@Base+0xc>
   25548:	ldr	r0, [r4, #12]
   2554c:	add	r6, r6, #1
   25550:	cmp	r6, r0
   25554:	bcc	2551c <ptr_set_resize@@Base+0x5c>
   25558:	mov	r0, r4
   2555c:	bl	253c4 <ptr_set_clear@@Base+0x4>
   25560:	vld1.64	{d16-d17}, [r8]
   25564:	vst1.32	{d16-d17}, [r4]
   25568:	mov	r0, #0
   2556c:	sub	sp, fp, #24
   25570:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00025574 <ptr_set_insert@@Base>:
   25574:	mov	r2, r3
   25578:	ldr	r3, [sp]
   2557c:	b	25580 <ptr_set_insert@@Base+0xc>
   25580:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25584:	add	fp, sp, #28
   25588:	sub	sp, sp, #12
   2558c:	cmp	r2, #2
   25590:	beq	256d4 <ptr_set_insert@@Base+0x160>
   25594:	mov	r9, r2
   25598:	cmp	r2, #1
   2559c:	beq	256f4 <ptr_set_insert@@Base+0x180>
   255a0:	cmp	r9, #0
   255a4:	beq	25714 <ptr_set_insert@@Base+0x1a0>
   255a8:	mov	r6, r3
   255ac:	mov	r7, r1
   255b0:	mov	r4, r0
   255b4:	ldr	r0, [r0, #8]
   255b8:	ldr	r1, [r4, #12]
   255bc:	mov	r2, #179	; 0xb3
   255c0:	mul	r1, r1, r2
   255c4:	cmp	r0, r1, lsr #8
   255c8:	bcc	255e0 <ptr_set_insert@@Base+0x6c>
   255cc:	lsl	r1, r0, #1
   255d0:	mov	r0, r4
   255d4:	bl	254c4 <ptr_set_resize@@Base+0x4>
   255d8:	cmp	r0, #0
   255dc:	bne	25734 <ptr_set_insert@@Base+0x1c0>
   255e0:	ldr	r8, [r4]
   255e4:	ldr	r0, [r4, #12]
   255e8:	sub	r5, r0, #1
   255ec:	mov	r0, r7
   255f0:	bl	258f8 <ptr_set_visit@@Base+0x4>
   255f4:	and	r1, r0, r5
   255f8:	orr	r2, r6, #1
   255fc:	cmp	r2, #3
   25600:	bne	25638 <ptr_set_insert@@Base+0xc4>
   25604:	ldr	r2, [r4, #8]
   25608:	add	r2, r2, #1
   2560c:	str	r2, [r4, #8]
   25610:	b	25618 <ptr_set_insert@@Base+0xa4>
   25614:	and	r1, r0, r5
   25618:	add	r0, r0, #1
   2561c:	mov	r4, r8
   25620:	ldr	r1, [r4, r1, lsl #2]!
   25624:	orr	r1, r1, #2
   25628:	cmp	r1, #2
   2562c:	bne	25614 <ptr_set_insert@@Base+0xa0>
   25630:	mov	r6, #0
   25634:	b	256b0 <ptr_set_insert@@Base+0x13c>
   25638:	str	r6, [sp]
   2563c:	stmib	sp, {r4, r9}
   25640:	add	sl, r0, #1
   25644:	mov	r9, #0
   25648:	b	25654 <ptr_set_insert@@Base+0xe0>
   2564c:	and	r1, sl, r5
   25650:	add	sl, sl, #1
   25654:	mov	r4, r8
   25658:	ldr	r6, [r4, r1, lsl #2]!
   2565c:	cmp	r6, #2
   25660:	beq	25684 <ptr_set_insert@@Base+0x110>
   25664:	cmp	r6, #0
   25668:	beq	25690 <ptr_set_insert@@Base+0x11c>
   2566c:	mov	r0, r7
   25670:	mov	r1, r6
   25674:	bl	25918 <ptr_set_visit@@Base+0x24>
   25678:	cmp	r0, #0
   2567c:	beq	2564c <ptr_set_insert@@Base+0xd8>
   25680:	b	256c0 <ptr_set_insert@@Base+0x14c>
   25684:	cmp	r9, #0
   25688:	moveq	r9, r4
   2568c:	b	2564c <ptr_set_insert@@Base+0xd8>
   25690:	ldr	r1, [sp, #4]
   25694:	ldr	r0, [r1, #8]
   25698:	add	r0, r0, #1
   2569c:	str	r0, [r1, #8]
   256a0:	cmp	r9, #0
   256a4:	movne	r4, r9
   256a8:	mov	r6, #0
   256ac:	ldr	r9, [sp, #8]
   256b0:	str	r9, [r4]
   256b4:	mov	r0, r6
   256b8:	sub	sp, fp, #28
   256bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   256c0:	ldr	r0, [sp]
   256c4:	cmp	r0, #0
   256c8:	ldr	r9, [sp, #8]
   256cc:	streq	r9, [r4]
   256d0:	b	256b4 <ptr_set_insert@@Base+0x140>
   256d4:	movw	r0, #49901	; 0xc2ed
   256d8:	movt	r0, #4
   256dc:	movw	r1, #49747	; 0xc253
   256e0:	movt	r1, #4
   256e4:	movw	r3, #49827	; 0xc2a3
   256e8:	movt	r3, #4
   256ec:	mov	r2, #115	; 0x73
   256f0:	bl	14950 <__assert_fail@plt>
   256f4:	movw	r0, #49924	; 0xc304
   256f8:	movt	r0, #4
   256fc:	movw	r1, #49747	; 0xc253
   25700:	movt	r1, #4
   25704:	movw	r3, #49827	; 0xc2a3
   25708:	movt	r3, #4
   2570c:	mov	r2, #116	; 0x74
   25710:	bl	14950 <__assert_fail@plt>
   25714:	movw	r0, #49724	; 0xc23c
   25718:	movt	r0, #4
   2571c:	movw	r1, #49747	; 0xc253
   25720:	movt	r1, #4
   25724:	movw	r3, #49827	; 0xc2a3
   25728:	movt	r3, #4
   2572c:	mov	r2, #114	; 0x72
   25730:	bl	14950 <__assert_fail@plt>
   25734:	movw	r0, #4264	; 0x10a8
   25738:	movt	r0, #6
   2573c:	ldr	r0, [r0]
   25740:	movw	r1, #49945	; 0xc319
   25744:	movt	r1, #4
   25748:	movw	r2, #49968	; 0xc330
   2574c:	movt	r2, #4
   25750:	bl	14890 <fprintf@plt>
   25754:	mov	r0, #1
   25758:	bl	14878 <exit@plt>

0002575c <ptr_set_insert_item@@Base>:
   2575c:	push	{r4, r5, r6, sl, fp, lr}
   25760:	add	fp, sp, #16
   25764:	mov	r4, r2
   25768:	mov	r5, r1
   2576c:	mov	r6, r0
   25770:	mov	r0, r1
   25774:	bl	25790 <ptr_set_insert_item@@Base+0x34>
   25778:	mov	r0, r6
   2577c:	mov	r1, r5
   25780:	mov	r2, r5
   25784:	mov	r3, r4
   25788:	pop	{r4, r5, r6, sl, fp, lr}
   2578c:	b	25580 <ptr_set_insert@@Base+0xc>
   25790:	bx	lr

00025794 <ptr_set_find@@Base>:
   25794:	b	25798 <ptr_set_find@@Base+0x4>
   25798:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2579c:	add	fp, sp, #24
   257a0:	ldr	r7, [r0]
   257a4:	cmp	r7, #0
   257a8:	beq	25800 <ptr_set_find@@Base+0x6c>
   257ac:	mov	r8, r1
   257b0:	ldr	r0, [r0, #12]
   257b4:	sub	r4, r0, #1
   257b8:	mov	r0, r1
   257bc:	bl	258f8 <ptr_set_visit@@Base+0x4>
   257c0:	mov	r5, r0
   257c4:	b	257cc <ptr_set_find@@Base+0x38>
   257c8:	add	r5, r5, #1
   257cc:	and	r0, r5, r4
   257d0:	ldr	r6, [r7, r0, lsl #2]
   257d4:	cmp	r6, #2
   257d8:	beq	257c8 <ptr_set_find@@Base+0x34>
   257dc:	cmp	r6, #0
   257e0:	beq	25800 <ptr_set_find@@Base+0x6c>
   257e4:	mov	r0, r8
   257e8:	mov	r1, r6
   257ec:	bl	25918 <ptr_set_visit@@Base+0x24>
   257f0:	cmp	r0, #0
   257f4:	beq	257c8 <ptr_set_find@@Base+0x34>
   257f8:	mov	r0, r6
   257fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   25800:	mov	r6, #0
   25804:	mov	r0, r6
   25808:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002580c <ptr_set_find_item@@Base>:
   2580c:	push	{r4, r5, fp, lr}
   25810:	add	fp, sp, #8
   25814:	mov	r4, r1
   25818:	mov	r5, r0
   2581c:	mov	r0, r1
   25820:	bl	25790 <ptr_set_insert_item@@Base+0x34>
   25824:	mov	r0, r5
   25828:	mov	r1, r4
   2582c:	pop	{r4, r5, fp, lr}
   25830:	b	25798 <ptr_set_find@@Base+0x4>

00025834 <ptr_set_remove@@Base>:
   25834:	b	25838 <ptr_set_remove@@Base+0x4>
   25838:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2583c:	add	fp, sp, #28
   25840:	sub	sp, sp, #4
   25844:	ldr	sl, [r0]
   25848:	mov	r6, #0
   2584c:	cmp	sl, #0
   25850:	beq	258c0 <ptr_set_remove@@Base+0x8c>
   25854:	mov	r9, r1
   25858:	mov	r8, r0
   2585c:	ldr	r0, [r0, #12]
   25860:	sub	r5, r0, #1
   25864:	mov	r0, r1
   25868:	bl	258f8 <ptr_set_visit@@Base+0x4>
   2586c:	mov	r7, r0
   25870:	b	25878 <ptr_set_remove@@Base+0x44>
   25874:	add	r7, r7, #1
   25878:	and	r4, r7, r5
   2587c:	ldr	r6, [sl, r4, lsl #2]
   25880:	cmp	r6, #2
   25884:	beq	25874 <ptr_set_remove@@Base+0x40>
   25888:	cmp	r6, #0
   2588c:	beq	258bc <ptr_set_remove@@Base+0x88>
   25890:	mov	r0, r9
   25894:	mov	r1, r6
   25898:	bl	25918 <ptr_set_visit@@Base+0x24>
   2589c:	cmp	r0, #0
   258a0:	beq	25874 <ptr_set_remove@@Base+0x40>
   258a4:	mov	r0, #2
   258a8:	str	r0, [sl, r4, lsl #2]
   258ac:	ldr	r0, [r8, #8]
   258b0:	sub	r0, r0, #1
   258b4:	str	r0, [r8, #8]
   258b8:	b	258c0 <ptr_set_remove@@Base+0x8c>
   258bc:	mov	r6, #0
   258c0:	mov	r0, r6
   258c4:	sub	sp, fp, #28
   258c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000258cc <ptr_set_remove_item@@Base>:
   258cc:	push	{r4, r5, fp, lr}
   258d0:	add	fp, sp, #8
   258d4:	mov	r4, r1
   258d8:	mov	r5, r0
   258dc:	mov	r0, r1
   258e0:	bl	25790 <ptr_set_insert_item@@Base+0x34>
   258e4:	mov	r0, r5
   258e8:	mov	r1, r4
   258ec:	pop	{r4, r5, fp, lr}
   258f0:	b	25838 <ptr_set_remove@@Base+0x4>

000258f4 <ptr_set_visit@@Base>:
   258f4:	b	25410 <ptr_set_destroy@@Base+0x24>
   258f8:	push	{fp, lr}
   258fc:	mov	fp, sp
   25900:	sub	sp, sp, #8
   25904:	str	r0, [sp, #4]
   25908:	add	r0, sp, #4
   2590c:	bl	25928 <ptr_set_visit@@Base+0x34>
   25910:	mov	sp, fp
   25914:	pop	{fp, pc}
   25918:	sub	r0, r0, r1
   2591c:	clz	r0, r0
   25920:	lsr	r0, r0, #5
   25924:	bx	lr
   25928:	push	{fp, lr}
   2592c:	mov	fp, sp
   25930:	sub	sp, sp, #16
   25934:	add	r1, sp, #8
   25938:	movw	r2, #15186	; 0x3b52
   2593c:	movt	r2, #12137	; 0x2f69
   25940:	str	r2, [sp]
   25944:	str	r1, [sp, #4]
   25948:	mov	r2, #4
   2594c:	mov	r3, #0
   25950:	bl	31d78 <cmetrohash64_1@@Base>
   25954:	ldr	r0, [sp, #8]
   25958:	mov	sp, fp
   2595c:	pop	{fp, pc}

00025960 <fb_symbol_table_clear@@Base>:
   25960:	b	25964 <fb_symbol_table_clear@@Base+0x4>
   25964:	push	{r4, sl, fp, lr}
   25968:	add	fp, sp, #8
   2596c:	mov	r4, r0
   25970:	ldr	r0, [r0]
   25974:	cmp	r0, #0
   25978:	beq	25980 <fb_symbol_table_clear@@Base+0x20>
   2597c:	bl	147dc <free@plt>
   25980:	vmov.i32	q8, #0	; 0x00000000
   25984:	vst1.32	{d16-d17}, [r4]
   25988:	pop	{r4, sl, fp, pc}

0002598c <fb_symbol_table_destroy@@Base>:
   2598c:	push	{r4, sl, fp, lr}
   25990:	add	fp, sp, #8
   25994:	mov	r4, r0
   25998:	cmp	r1, #0
   2599c:	movne	r0, r4
   259a0:	blne	259b0 <fb_symbol_table_destroy@@Base+0x24>
   259a4:	mov	r0, r4
   259a8:	pop	{r4, sl, fp, lr}
   259ac:	b	25964 <fb_symbol_table_clear@@Base+0x4>
   259b0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   259b4:	add	fp, sp, #24
   259b8:	mov	r6, r0
   259bc:	ldr	r0, [r0, #12]
   259c0:	cmp	r0, #0
   259c4:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   259c8:	mov	r8, r2
   259cc:	mov	r5, r1
   259d0:	ldr	r7, [r6]
   259d4:	mov	r4, #0
   259d8:	ldr	r1, [r7, r4, lsl #2]
   259dc:	orr	r0, r1, #2
   259e0:	cmp	r0, #2
   259e4:	beq	259f0 <fb_symbol_table_destroy@@Base+0x64>
   259e8:	mov	r0, r8
   259ec:	blx	r5
   259f0:	ldr	r0, [r6, #12]
   259f4:	add	r4, r4, #1
   259f8:	cmp	r4, r0
   259fc:	bcc	259d8 <fb_symbol_table_destroy@@Base+0x4c>
   25a00:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00025a04 <fb_symbol_table_init@@Base>:
   25a04:	b	25a08 <fb_symbol_table_init@@Base+0x4>
   25a08:	push	{r4, r5, fp, lr}
   25a0c:	add	fp, sp, #8
   25a10:	mov	r4, r0
   25a14:	mov	r2, #4
   25a18:	mov	r0, #179	; 0xb3
   25a1c:	mov	r5, r2
   25a20:	mul	r3, r2, r0
   25a24:	lsl	r2, r2, #1
   25a28:	cmp	r1, r3, lsr #8
   25a2c:	bhi	25a1c <fb_symbol_table_init@@Base+0x18>
   25a30:	mov	r0, r5
   25a34:	mov	r1, #4
   25a38:	bl	147ac <calloc@plt>
   25a3c:	str	r0, [r4]
   25a40:	cmp	r0, #0
   25a44:	movne	r0, #0
   25a48:	strne	r0, [r4, #4]
   25a4c:	strne	r0, [r4, #8]
   25a50:	strne	r5, [r4, #12]
   25a54:	popne	{r4, r5, fp, pc}
   25a58:	mvn	r0, #0
   25a5c:	pop	{r4, r5, fp, pc}

00025a60 <fb_symbol_table_resize@@Base>:
   25a60:	b	25a64 <fb_symbol_table_resize@@Base+0x4>
   25a64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25a68:	add	fp, sp, #28
   25a6c:	sub	sp, sp, #28
   25a70:	mov	r4, r0
   25a74:	ldr	sl, [r0]
   25a78:	ldr	r0, [r0, #8]
   25a7c:	cmp	r0, r1
   25a80:	movhi	r1, r0
   25a84:	add	r0, sp, #8
   25a88:	bl	25a08 <fb_symbol_table_init@@Base+0x4>
   25a8c:	mov	r1, r0
   25a90:	mvn	r0, #0
   25a94:	cmp	r1, #0
   25a98:	beq	25aa4 <fb_symbol_table_resize@@Base+0x44>
   25a9c:	sub	sp, fp, #28
   25aa0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25aa4:	ldr	r0, [r4, #12]
   25aa8:	cmp	r0, #0
   25aac:	beq	25b08 <fb_symbol_table_resize@@Base+0xa8>
   25ab0:	mov	r6, #0
   25ab4:	mov	r8, #3
   25ab8:	add	r9, sp, #8
   25abc:	ldr	r7, [sl, r6, lsl #2]
   25ac0:	orr	r0, r7, #2
   25ac4:	cmp	r0, #2
   25ac8:	beq	25af8 <fb_symbol_table_resize@@Base+0x98>
   25acc:	mov	r0, r7
   25ad0:	bl	25d5c <fb_symbol_table_insert_item@@Base+0x4c>
   25ad4:	mov	r5, r0
   25ad8:	mov	r0, r7
   25adc:	bl	25d68 <fb_symbol_table_insert_item@@Base+0x58>
   25ae0:	mov	r2, r0
   25ae4:	str	r8, [sp]
   25ae8:	mov	r0, r9
   25aec:	mov	r1, r5
   25af0:	mov	r3, r7
   25af4:	bl	25b2c <fb_symbol_table_insert@@Base+0x4>
   25af8:	ldr	r0, [r4, #12]
   25afc:	add	r6, r6, #1
   25b00:	cmp	r6, r0
   25b04:	bcc	25abc <fb_symbol_table_resize@@Base+0x5c>
   25b08:	mov	r0, r4
   25b0c:	bl	25964 <fb_symbol_table_clear@@Base+0x4>
   25b10:	add	r0, sp, #8
   25b14:	vld1.64	{d16-d17}, [r0]
   25b18:	vst1.32	{d16-d17}, [r4]
   25b1c:	mov	r0, #0
   25b20:	sub	sp, fp, #28
   25b24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00025b28 <fb_symbol_table_insert@@Base>:
   25b28:	b	25b2c <fb_symbol_table_insert@@Base+0x4>
   25b2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25b30:	add	fp, sp, #28
   25b34:	sub	sp, sp, #12
   25b38:	str	r2, [sp, #8]
   25b3c:	cmp	r3, #2
   25b40:	beq	25c88 <fb_symbol_table_insert@@Base+0x160>
   25b44:	mov	r9, r3
   25b48:	cmp	r3, #1
   25b4c:	beq	25ca8 <fb_symbol_table_insert@@Base+0x180>
   25b50:	cmp	r9, #0
   25b54:	beq	25cc8 <fb_symbol_table_insert@@Base+0x1a0>
   25b58:	mov	r7, r1
   25b5c:	mov	r5, r0
   25b60:	ldr	r0, [r0, #8]
   25b64:	ldr	r1, [r5, #12]
   25b68:	mov	r2, #179	; 0xb3
   25b6c:	mul	r1, r1, r2
   25b70:	cmp	r0, r1, lsr #8
   25b74:	bcc	25b8c <fb_symbol_table_insert@@Base+0x64>
   25b78:	lsl	r1, r0, #1
   25b7c:	mov	r0, r5
   25b80:	bl	25a64 <fb_symbol_table_resize@@Base+0x4>
   25b84:	cmp	r0, #0
   25b88:	bne	25ce8 <fb_symbol_table_insert@@Base+0x1c0>
   25b8c:	ldr	sl, [fp, #8]
   25b90:	ldr	r8, [r5]
   25b94:	ldr	r4, [r5, #12]
   25b98:	mov	r0, r7
   25b9c:	ldr	r1, [sp, #8]
   25ba0:	bl	25f14 <fb_symbol_table_visit@@Base+0x4>
   25ba4:	sub	r6, r4, #1
   25ba8:	and	r1, r0, r6
   25bac:	orr	r2, sl, #1
   25bb0:	cmp	r2, #3
   25bb4:	bne	25bec <fb_symbol_table_insert@@Base+0xc4>
   25bb8:	ldr	r2, [r5, #8]
   25bbc:	add	r2, r2, #1
   25bc0:	str	r2, [r5, #8]
   25bc4:	b	25bcc <fb_symbol_table_insert@@Base+0xa4>
   25bc8:	and	r1, r0, r6
   25bcc:	add	r0, r0, #1
   25bd0:	mov	r5, r8
   25bd4:	ldr	r1, [r5, r1, lsl #2]!
   25bd8:	orr	r1, r1, #2
   25bdc:	cmp	r1, #2
   25be0:	bne	25bc8 <fb_symbol_table_insert@@Base+0xa0>
   25be4:	mov	r4, #0
   25be8:	b	25c64 <fb_symbol_table_insert@@Base+0x13c>
   25bec:	stm	sp, {r5, r9}
   25bf0:	add	sl, r0, #1
   25bf4:	mov	r9, #0
   25bf8:	b	25c04 <fb_symbol_table_insert@@Base+0xdc>
   25bfc:	and	r1, sl, r6
   25c00:	add	sl, sl, #1
   25c04:	mov	r5, r8
   25c08:	ldr	r4, [r5, r1, lsl #2]!
   25c0c:	cmp	r4, #2
   25c10:	beq	25c38 <fb_symbol_table_insert@@Base+0x110>
   25c14:	cmp	r4, #0
   25c18:	beq	25c44 <fb_symbol_table_insert@@Base+0x11c>
   25c1c:	mov	r0, r7
   25c20:	ldr	r1, [sp, #8]
   25c24:	mov	r2, r4
   25c28:	bl	25f4c <fb_symbol_table_visit@@Base+0x3c>
   25c2c:	cmp	r0, #0
   25c30:	beq	25bfc <fb_symbol_table_insert@@Base+0xd4>
   25c34:	b	25c74 <fb_symbol_table_insert@@Base+0x14c>
   25c38:	cmp	r9, #0
   25c3c:	moveq	r9, r5
   25c40:	b	25bfc <fb_symbol_table_insert@@Base+0xd4>
   25c44:	ldr	r1, [sp]
   25c48:	ldr	r0, [r1, #8]
   25c4c:	add	r0, r0, #1
   25c50:	str	r0, [r1, #8]
   25c54:	cmp	r9, #0
   25c58:	movne	r5, r9
   25c5c:	mov	r4, #0
   25c60:	ldr	r9, [sp, #4]
   25c64:	str	r9, [r5]
   25c68:	mov	r0, r4
   25c6c:	sub	sp, fp, #28
   25c70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25c74:	ldr	r0, [fp, #8]
   25c78:	cmp	r0, #0
   25c7c:	ldr	r9, [sp, #4]
   25c80:	streq	r9, [r5]
   25c84:	b	25c68 <fb_symbol_table_insert@@Base+0x140>
   25c88:	movw	r0, #49901	; 0xc2ed
   25c8c:	movt	r0, #4
   25c90:	movw	r1, #49747	; 0xc253
   25c94:	movt	r1, #4
   25c98:	movw	r3, #49827	; 0xc2a3
   25c9c:	movt	r3, #4
   25ca0:	mov	r2, #115	; 0x73
   25ca4:	bl	14950 <__assert_fail@plt>
   25ca8:	movw	r0, #49924	; 0xc304
   25cac:	movt	r0, #4
   25cb0:	movw	r1, #49747	; 0xc253
   25cb4:	movt	r1, #4
   25cb8:	movw	r3, #49827	; 0xc2a3
   25cbc:	movt	r3, #4
   25cc0:	mov	r2, #116	; 0x74
   25cc4:	bl	14950 <__assert_fail@plt>
   25cc8:	movw	r0, #49724	; 0xc23c
   25ccc:	movt	r0, #4
   25cd0:	movw	r1, #49747	; 0xc253
   25cd4:	movt	r1, #4
   25cd8:	movw	r3, #49827	; 0xc2a3
   25cdc:	movt	r3, #4
   25ce0:	mov	r2, #114	; 0x72
   25ce4:	bl	14950 <__assert_fail@plt>
   25ce8:	movw	r0, #4264	; 0x10a8
   25cec:	movt	r0, #6
   25cf0:	ldr	r0, [r0]
   25cf4:	movw	r1, #49945	; 0xc319
   25cf8:	movt	r1, #4
   25cfc:	movw	r2, #49968	; 0xc330
   25d00:	movt	r2, #4
   25d04:	bl	14890 <fprintf@plt>
   25d08:	mov	r0, #1
   25d0c:	bl	14878 <exit@plt>

00025d10 <fb_symbol_table_insert_item@@Base>:
   25d10:	push	{r4, r5, r6, r7, fp, lr}
   25d14:	add	fp, sp, #16
   25d18:	sub	sp, sp, #8
   25d1c:	mov	r4, r2
   25d20:	mov	r5, r1
   25d24:	mov	r6, r0
   25d28:	mov	r0, r1
   25d2c:	bl	25d5c <fb_symbol_table_insert_item@@Base+0x4c>
   25d30:	mov	r7, r0
   25d34:	mov	r0, r5
   25d38:	bl	25d68 <fb_symbol_table_insert_item@@Base+0x58>
   25d3c:	mov	r2, r0
   25d40:	str	r4, [sp]
   25d44:	mov	r0, r6
   25d48:	mov	r1, r7
   25d4c:	mov	r3, r5
   25d50:	bl	25b2c <fb_symbol_table_insert@@Base+0x4>
   25d54:	sub	sp, fp, #16
   25d58:	pop	{r4, r5, r6, r7, fp, pc}
   25d5c:	ldr	r0, [r0, #4]
   25d60:	ldr	r0, [r0]
   25d64:	bx	lr
   25d68:	ldr	r0, [r0, #4]
   25d6c:	ldr	r0, [r0, #4]
   25d70:	bx	lr

00025d74 <fb_symbol_table_find@@Base>:
   25d74:	b	25d78 <fb_symbol_table_find@@Base+0x4>
   25d78:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   25d7c:	add	fp, sp, #24
   25d80:	ldr	r4, [r0]
   25d84:	cmp	r4, #0
   25d88:	beq	25dec <fb_symbol_table_find@@Base+0x78>
   25d8c:	mov	r8, r2
   25d90:	mov	r9, r1
   25d94:	ldr	r5, [r0, #12]
   25d98:	mov	r0, r1
   25d9c:	mov	r1, r2
   25da0:	bl	25f14 <fb_symbol_table_visit@@Base+0x4>
   25da4:	mov	r6, r0
   25da8:	sub	r5, r5, #1
   25dac:	b	25db4 <fb_symbol_table_find@@Base+0x40>
   25db0:	add	r6, r6, #1
   25db4:	and	r0, r6, r5
   25db8:	ldr	r7, [r4, r0, lsl #2]
   25dbc:	cmp	r7, #2
   25dc0:	beq	25db0 <fb_symbol_table_find@@Base+0x3c>
   25dc4:	cmp	r7, #0
   25dc8:	beq	25dec <fb_symbol_table_find@@Base+0x78>
   25dcc:	mov	r0, r9
   25dd0:	mov	r1, r8
   25dd4:	mov	r2, r7
   25dd8:	bl	25f4c <fb_symbol_table_visit@@Base+0x3c>
   25ddc:	cmp	r0, #0
   25de0:	beq	25db0 <fb_symbol_table_find@@Base+0x3c>
   25de4:	mov	r0, r7
   25de8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   25dec:	mov	r7, #0
   25df0:	mov	r0, r7
   25df4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00025df8 <fb_symbol_table_find_item@@Base>:
   25df8:	push	{r4, r5, r6, sl, fp, lr}
   25dfc:	add	fp, sp, #16
   25e00:	mov	r4, r1
   25e04:	mov	r5, r0
   25e08:	mov	r0, r1
   25e0c:	bl	25d5c <fb_symbol_table_insert_item@@Base+0x4c>
   25e10:	mov	r6, r0
   25e14:	mov	r0, r4
   25e18:	bl	25d68 <fb_symbol_table_insert_item@@Base+0x58>
   25e1c:	mov	r2, r0
   25e20:	mov	r0, r5
   25e24:	mov	r1, r6
   25e28:	pop	{r4, r5, r6, sl, fp, lr}
   25e2c:	b	25d78 <fb_symbol_table_find@@Base+0x4>

00025e30 <fb_symbol_table_remove@@Base>:
   25e30:	b	25e34 <fb_symbol_table_remove@@Base+0x4>
   25e34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25e38:	add	fp, sp, #28
   25e3c:	sub	sp, sp, #4
   25e40:	ldr	r5, [r0]
   25e44:	mov	r7, #0
   25e48:	cmp	r5, #0
   25e4c:	beq	25ecc <fb_symbol_table_remove@@Base+0x9c>
   25e50:	mov	r9, r2
   25e54:	mov	sl, r1
   25e58:	str	r0, [sp]
   25e5c:	ldr	r6, [r0, #12]
   25e60:	mov	r0, r1
   25e64:	mov	r1, r2
   25e68:	bl	25f14 <fb_symbol_table_visit@@Base+0x4>
   25e6c:	mov	r4, r0
   25e70:	sub	r6, r6, #1
   25e74:	b	25e7c <fb_symbol_table_remove@@Base+0x4c>
   25e78:	add	r4, r4, #1
   25e7c:	and	r8, r4, r6
   25e80:	ldr	r7, [r5, r8, lsl #2]
   25e84:	cmp	r7, #2
   25e88:	beq	25e78 <fb_symbol_table_remove@@Base+0x48>
   25e8c:	cmp	r7, #0
   25e90:	beq	25ec8 <fb_symbol_table_remove@@Base+0x98>
   25e94:	mov	r0, sl
   25e98:	mov	r1, r9
   25e9c:	mov	r2, r7
   25ea0:	bl	25f4c <fb_symbol_table_visit@@Base+0x3c>
   25ea4:	cmp	r0, #0
   25ea8:	beq	25e78 <fb_symbol_table_remove@@Base+0x48>
   25eac:	mov	r0, #2
   25eb0:	str	r0, [r5, r8, lsl #2]
   25eb4:	ldr	r1, [sp]
   25eb8:	ldr	r0, [r1, #8]
   25ebc:	sub	r0, r0, #1
   25ec0:	str	r0, [r1, #8]
   25ec4:	b	25ecc <fb_symbol_table_remove@@Base+0x9c>
   25ec8:	mov	r7, #0
   25ecc:	mov	r0, r7
   25ed0:	sub	sp, fp, #28
   25ed4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00025ed8 <fb_symbol_table_remove_item@@Base>:
   25ed8:	push	{r4, r5, r6, sl, fp, lr}
   25edc:	add	fp, sp, #16
   25ee0:	mov	r4, r1
   25ee4:	mov	r5, r0
   25ee8:	mov	r0, r1
   25eec:	bl	25d5c <fb_symbol_table_insert_item@@Base+0x4c>
   25ef0:	mov	r6, r0
   25ef4:	mov	r0, r4
   25ef8:	bl	25d68 <fb_symbol_table_insert_item@@Base+0x58>
   25efc:	mov	r2, r0
   25f00:	mov	r0, r5
   25f04:	mov	r1, r6
   25f08:	pop	{r4, r5, r6, sl, fp, lr}
   25f0c:	b	25e34 <fb_symbol_table_remove@@Base+0x4>

00025f10 <fb_symbol_table_visit@@Base>:
   25f10:	b	259b0 <fb_symbol_table_destroy@@Base+0x24>
   25f14:	push	{fp, lr}
   25f18:	mov	fp, sp
   25f1c:	sub	sp, sp, #16
   25f20:	add	r2, sp, #8
   25f24:	movw	r3, #15186	; 0x3b52
   25f28:	movt	r3, #12137	; 0x2f69
   25f2c:	str	r3, [sp]
   25f30:	str	r2, [sp, #4]
   25f34:	mov	r2, r1
   25f38:	mov	r3, #0
   25f3c:	bl	31d78 <cmetrohash64_1@@Base>
   25f40:	ldr	r0, [sp, #8]
   25f44:	mov	sp, fp
   25f48:	pop	{fp, pc}
   25f4c:	push	{r4, r5, r6, sl, fp, lr}
   25f50:	add	fp, sp, #16
   25f54:	mov	r6, r2
   25f58:	mov	r4, r1
   25f5c:	mov	r5, r0
   25f60:	mov	r0, r2
   25f64:	bl	25d68 <fb_symbol_table_insert_item@@Base+0x58>
   25f68:	mov	r1, r0
   25f6c:	mov	r0, #0
   25f70:	cmp	r1, r4
   25f74:	popne	{r4, r5, r6, sl, fp, pc}
   25f78:	mov	r0, r6
   25f7c:	bl	25d5c <fb_symbol_table_insert_item@@Base+0x4c>
   25f80:	mov	r1, r0
   25f84:	mov	r0, r5
   25f88:	mov	r2, r4
   25f8c:	bl	14800 <memcmp@plt>
   25f90:	clz	r0, r0
   25f94:	lsr	r0, r0, #5
   25f98:	pop	{r4, r5, r6, sl, fp, pc}

00025f9c <fb_scope_table_clear@@Base>:
   25f9c:	b	25fa0 <fb_scope_table_clear@@Base+0x4>
   25fa0:	push	{r4, sl, fp, lr}
   25fa4:	add	fp, sp, #8
   25fa8:	mov	r4, r0
   25fac:	ldr	r0, [r0]
   25fb0:	cmp	r0, #0
   25fb4:	beq	25fbc <fb_scope_table_clear@@Base+0x20>
   25fb8:	bl	147dc <free@plt>
   25fbc:	vmov.i32	q8, #0	; 0x00000000
   25fc0:	vst1.32	{d16-d17}, [r4]
   25fc4:	pop	{r4, sl, fp, pc}

00025fc8 <fb_scope_table_destroy@@Base>:
   25fc8:	push	{r4, sl, fp, lr}
   25fcc:	add	fp, sp, #8
   25fd0:	mov	r4, r0
   25fd4:	cmp	r1, #0
   25fd8:	movne	r0, r4
   25fdc:	blne	25fec <fb_scope_table_destroy@@Base+0x24>
   25fe0:	mov	r0, r4
   25fe4:	pop	{r4, sl, fp, lr}
   25fe8:	b	25fa0 <fb_scope_table_clear@@Base+0x4>
   25fec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   25ff0:	add	fp, sp, #24
   25ff4:	mov	r6, r0
   25ff8:	ldr	r0, [r0, #12]
   25ffc:	cmp	r0, #0
   26000:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   26004:	mov	r8, r2
   26008:	mov	r5, r1
   2600c:	ldr	r7, [r6]
   26010:	mov	r4, #0
   26014:	ldr	r1, [r7, r4, lsl #2]
   26018:	orr	r0, r1, #2
   2601c:	cmp	r0, #2
   26020:	beq	2602c <fb_scope_table_destroy@@Base+0x64>
   26024:	mov	r0, r8
   26028:	blx	r5
   2602c:	ldr	r0, [r6, #12]
   26030:	add	r4, r4, #1
   26034:	cmp	r4, r0
   26038:	bcc	26014 <fb_scope_table_destroy@@Base+0x4c>
   2603c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00026040 <fb_scope_table_init@@Base>:
   26040:	b	26044 <fb_scope_table_init@@Base+0x4>
   26044:	push	{r4, r5, fp, lr}
   26048:	add	fp, sp, #8
   2604c:	mov	r4, r0
   26050:	mov	r2, #4
   26054:	mov	r0, #179	; 0xb3
   26058:	mov	r5, r2
   2605c:	mul	r3, r2, r0
   26060:	lsl	r2, r2, #1
   26064:	cmp	r1, r3, lsr #8
   26068:	bhi	26058 <fb_scope_table_init@@Base+0x18>
   2606c:	mov	r0, r5
   26070:	mov	r1, #4
   26074:	bl	147ac <calloc@plt>
   26078:	str	r0, [r4]
   2607c:	cmp	r0, #0
   26080:	movne	r0, #0
   26084:	strne	r0, [r4, #4]
   26088:	strne	r0, [r4, #8]
   2608c:	strne	r5, [r4, #12]
   26090:	popne	{r4, r5, fp, pc}
   26094:	mvn	r0, #0
   26098:	pop	{r4, r5, fp, pc}

0002609c <fb_scope_table_resize@@Base>:
   2609c:	b	260a0 <fb_scope_table_resize@@Base+0x4>
   260a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   260a4:	add	fp, sp, #28
   260a8:	sub	sp, sp, #28
   260ac:	mov	r4, r0
   260b0:	ldr	r5, [r0]
   260b4:	ldr	r0, [r0, #8]
   260b8:	cmp	r0, r1
   260bc:	movhi	r1, r0
   260c0:	add	r8, sp, #8
   260c4:	mov	r0, r8
   260c8:	bl	26044 <fb_scope_table_init@@Base+0x4>
   260cc:	mov	r1, r0
   260d0:	mvn	r0, #0
   260d4:	cmp	r1, #0
   260d8:	beq	260e4 <fb_scope_table_resize@@Base+0x48>
   260dc:	sub	sp, fp, #28
   260e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   260e4:	ldr	r0, [r4, #12]
   260e8:	cmp	r0, #0
   260ec:	beq	2613c <fb_scope_table_resize@@Base+0xa0>
   260f0:	mov	r6, #0
   260f4:	mov	sl, #3
   260f8:	add	r9, sp, #8
   260fc:	ldr	r7, [r5, r6, lsl #2]
   26100:	orr	r0, r7, #2
   26104:	cmp	r0, #2
   26108:	beq	2612c <fb_scope_table_resize@@Base+0x90>
   2610c:	mov	r0, r7
   26110:	bl	26380 <fb_scope_table_insert_item@@Base+0x40>
   26114:	mov	r1, r0
   26118:	str	sl, [sp]
   2611c:	mov	r0, r9
   26120:	mov	r2, #0
   26124:	mov	r3, r7
   26128:	bl	2615c <fb_scope_table_insert@@Base+0x4>
   2612c:	ldr	r0, [r4, #12]
   26130:	add	r6, r6, #1
   26134:	cmp	r6, r0
   26138:	bcc	260fc <fb_scope_table_resize@@Base+0x60>
   2613c:	mov	r0, r4
   26140:	bl	25fa0 <fb_scope_table_clear@@Base+0x4>
   26144:	vld1.64	{d16-d17}, [r8]
   26148:	vst1.32	{d16-d17}, [r4]
   2614c:	mov	r0, #0
   26150:	sub	sp, fp, #28
   26154:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00026158 <fb_scope_table_insert@@Base>:
   26158:	b	2615c <fb_scope_table_insert@@Base+0x4>
   2615c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26160:	add	fp, sp, #28
   26164:	sub	sp, sp, #12
   26168:	str	r2, [sp, #8]
   2616c:	cmp	r3, #2
   26170:	beq	262b8 <fb_scope_table_insert@@Base+0x160>
   26174:	mov	r9, r3
   26178:	cmp	r3, #1
   2617c:	beq	262d8 <fb_scope_table_insert@@Base+0x180>
   26180:	cmp	r9, #0
   26184:	beq	262f8 <fb_scope_table_insert@@Base+0x1a0>
   26188:	mov	r7, r1
   2618c:	mov	r5, r0
   26190:	ldr	r0, [r0, #8]
   26194:	ldr	r1, [r5, #12]
   26198:	mov	r2, #179	; 0xb3
   2619c:	mul	r1, r1, r2
   261a0:	cmp	r0, r1, lsr #8
   261a4:	bcc	261bc <fb_scope_table_insert@@Base+0x64>
   261a8:	lsl	r1, r0, #1
   261ac:	mov	r0, r5
   261b0:	bl	260a0 <fb_scope_table_resize@@Base+0x4>
   261b4:	cmp	r0, #0
   261b8:	bne	26318 <fb_scope_table_insert@@Base+0x1c0>
   261bc:	ldr	sl, [fp, #8]
   261c0:	ldr	r8, [r5]
   261c4:	ldr	r4, [r5, #12]
   261c8:	mov	r0, r7
   261cc:	ldr	r1, [sp, #8]
   261d0:	bl	26508 <fb_scope_table_visit@@Base+0x4>
   261d4:	sub	r6, r4, #1
   261d8:	and	r1, r0, r6
   261dc:	orr	r2, sl, #1
   261e0:	cmp	r2, #3
   261e4:	bne	2621c <fb_scope_table_insert@@Base+0xc4>
   261e8:	ldr	r2, [r5, #8]
   261ec:	add	r2, r2, #1
   261f0:	str	r2, [r5, #8]
   261f4:	b	261fc <fb_scope_table_insert@@Base+0xa4>
   261f8:	and	r1, r0, r6
   261fc:	add	r0, r0, #1
   26200:	mov	r5, r8
   26204:	ldr	r1, [r5, r1, lsl #2]!
   26208:	orr	r1, r1, #2
   2620c:	cmp	r1, #2
   26210:	bne	261f8 <fb_scope_table_insert@@Base+0xa0>
   26214:	mov	r4, #0
   26218:	b	26294 <fb_scope_table_insert@@Base+0x13c>
   2621c:	stm	sp, {r5, r9}
   26220:	add	sl, r0, #1
   26224:	mov	r9, #0
   26228:	b	26234 <fb_scope_table_insert@@Base+0xdc>
   2622c:	and	r1, sl, r6
   26230:	add	sl, sl, #1
   26234:	mov	r5, r8
   26238:	ldr	r4, [r5, r1, lsl #2]!
   2623c:	cmp	r4, #2
   26240:	beq	26268 <fb_scope_table_insert@@Base+0x110>
   26244:	cmp	r4, #0
   26248:	beq	26274 <fb_scope_table_insert@@Base+0x11c>
   2624c:	mov	r0, r7
   26250:	ldr	r1, [sp, #8]
   26254:	mov	r2, r4
   26258:	bl	265cc <fb_scope_table_visit@@Base+0xc8>
   2625c:	cmp	r0, #0
   26260:	beq	2622c <fb_scope_table_insert@@Base+0xd4>
   26264:	b	262a4 <fb_scope_table_insert@@Base+0x14c>
   26268:	cmp	r9, #0
   2626c:	moveq	r9, r5
   26270:	b	2622c <fb_scope_table_insert@@Base+0xd4>
   26274:	ldr	r1, [sp]
   26278:	ldr	r0, [r1, #8]
   2627c:	add	r0, r0, #1
   26280:	str	r0, [r1, #8]
   26284:	cmp	r9, #0
   26288:	movne	r5, r9
   2628c:	mov	r4, #0
   26290:	ldr	r9, [sp, #4]
   26294:	str	r9, [r5]
   26298:	mov	r0, r4
   2629c:	sub	sp, fp, #28
   262a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   262a4:	ldr	r0, [fp, #8]
   262a8:	cmp	r0, #0
   262ac:	ldr	r9, [sp, #4]
   262b0:	streq	r9, [r5]
   262b4:	b	26298 <fb_scope_table_insert@@Base+0x140>
   262b8:	movw	r0, #49901	; 0xc2ed
   262bc:	movt	r0, #4
   262c0:	movw	r1, #49747	; 0xc253
   262c4:	movt	r1, #4
   262c8:	movw	r3, #49827	; 0xc2a3
   262cc:	movt	r3, #4
   262d0:	mov	r2, #115	; 0x73
   262d4:	bl	14950 <__assert_fail@plt>
   262d8:	movw	r0, #49924	; 0xc304
   262dc:	movt	r0, #4
   262e0:	movw	r1, #49747	; 0xc253
   262e4:	movt	r1, #4
   262e8:	movw	r3, #49827	; 0xc2a3
   262ec:	movt	r3, #4
   262f0:	mov	r2, #116	; 0x74
   262f4:	bl	14950 <__assert_fail@plt>
   262f8:	movw	r0, #49724	; 0xc23c
   262fc:	movt	r0, #4
   26300:	movw	r1, #49747	; 0xc253
   26304:	movt	r1, #4
   26308:	movw	r3, #49827	; 0xc2a3
   2630c:	movt	r3, #4
   26310:	mov	r2, #114	; 0x72
   26314:	bl	14950 <__assert_fail@plt>
   26318:	movw	r0, #4264	; 0x10a8
   2631c:	movt	r0, #6
   26320:	ldr	r0, [r0]
   26324:	movw	r1, #49945	; 0xc319
   26328:	movt	r1, #4
   2632c:	movw	r2, #49968	; 0xc330
   26330:	movt	r2, #4
   26334:	bl	14890 <fprintf@plt>
   26338:	mov	r0, #1
   2633c:	bl	14878 <exit@plt>

00026340 <fb_scope_table_insert_item@@Base>:
   26340:	push	{r4, r5, r6, sl, fp, lr}
   26344:	add	fp, sp, #16
   26348:	sub	sp, sp, #8
   2634c:	mov	r4, r2
   26350:	mov	r5, r1
   26354:	mov	r6, r0
   26358:	mov	r0, r1
   2635c:	bl	26380 <fb_scope_table_insert_item@@Base+0x40>
   26360:	mov	r1, r0
   26364:	str	r4, [sp]
   26368:	mov	r0, r6
   2636c:	mov	r2, #0
   26370:	mov	r3, r5
   26374:	bl	2615c <fb_scope_table_insert@@Base+0x4>
   26378:	sub	sp, fp, #16
   2637c:	pop	{r4, r5, r6, sl, fp, pc}
   26380:	ldr	r0, [r0]
   26384:	bx	lr

00026388 <fb_scope_table_find@@Base>:
   26388:	b	2638c <fb_scope_table_find@@Base+0x4>
   2638c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   26390:	add	fp, sp, #24
   26394:	ldr	r4, [r0]
   26398:	cmp	r4, #0
   2639c:	beq	26400 <fb_scope_table_find@@Base+0x78>
   263a0:	mov	r8, r2
   263a4:	mov	r9, r1
   263a8:	ldr	r5, [r0, #12]
   263ac:	mov	r0, r1
   263b0:	mov	r1, r2
   263b4:	bl	26508 <fb_scope_table_visit@@Base+0x4>
   263b8:	mov	r6, r0
   263bc:	sub	r5, r5, #1
   263c0:	b	263c8 <fb_scope_table_find@@Base+0x40>
   263c4:	add	r6, r6, #1
   263c8:	and	r0, r6, r5
   263cc:	ldr	r7, [r4, r0, lsl #2]
   263d0:	cmp	r7, #2
   263d4:	beq	263c4 <fb_scope_table_find@@Base+0x3c>
   263d8:	cmp	r7, #0
   263dc:	beq	26400 <fb_scope_table_find@@Base+0x78>
   263e0:	mov	r0, r9
   263e4:	mov	r1, r8
   263e8:	mov	r2, r7
   263ec:	bl	265cc <fb_scope_table_visit@@Base+0xc8>
   263f0:	cmp	r0, #0
   263f4:	beq	263c4 <fb_scope_table_find@@Base+0x3c>
   263f8:	mov	r0, r7
   263fc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   26400:	mov	r7, #0
   26404:	mov	r0, r7
   26408:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0002640c <fb_scope_table_find_item@@Base>:
   2640c:	push	{r4, sl, fp, lr}
   26410:	add	fp, sp, #8
   26414:	mov	r4, r0
   26418:	mov	r0, r1
   2641c:	bl	26380 <fb_scope_table_insert_item@@Base+0x40>
   26420:	mov	r1, r0
   26424:	mov	r0, r4
   26428:	mov	r2, #0
   2642c:	pop	{r4, sl, fp, lr}
   26430:	b	2638c <fb_scope_table_find@@Base+0x4>

00026434 <fb_scope_table_remove@@Base>:
   26434:	b	26438 <fb_scope_table_remove@@Base+0x4>
   26438:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2643c:	add	fp, sp, #28
   26440:	sub	sp, sp, #4
   26444:	ldr	r5, [r0]
   26448:	mov	r7, #0
   2644c:	cmp	r5, #0
   26450:	beq	264d0 <fb_scope_table_remove@@Base+0x9c>
   26454:	mov	r9, r2
   26458:	mov	sl, r1
   2645c:	str	r0, [sp]
   26460:	ldr	r6, [r0, #12]
   26464:	mov	r0, r1
   26468:	mov	r1, r2
   2646c:	bl	26508 <fb_scope_table_visit@@Base+0x4>
   26470:	mov	r4, r0
   26474:	sub	r6, r6, #1
   26478:	b	26480 <fb_scope_table_remove@@Base+0x4c>
   2647c:	add	r4, r4, #1
   26480:	and	r8, r4, r6
   26484:	ldr	r7, [r5, r8, lsl #2]
   26488:	cmp	r7, #2
   2648c:	beq	2647c <fb_scope_table_remove@@Base+0x48>
   26490:	cmp	r7, #0
   26494:	beq	264cc <fb_scope_table_remove@@Base+0x98>
   26498:	mov	r0, sl
   2649c:	mov	r1, r9
   264a0:	mov	r2, r7
   264a4:	bl	265cc <fb_scope_table_visit@@Base+0xc8>
   264a8:	cmp	r0, #0
   264ac:	beq	2647c <fb_scope_table_remove@@Base+0x48>
   264b0:	mov	r0, #2
   264b4:	str	r0, [r5, r8, lsl #2]
   264b8:	ldr	r1, [sp]
   264bc:	ldr	r0, [r1, #8]
   264c0:	sub	r0, r0, #1
   264c4:	str	r0, [r1, #8]
   264c8:	b	264d0 <fb_scope_table_remove@@Base+0x9c>
   264cc:	mov	r7, #0
   264d0:	mov	r0, r7
   264d4:	sub	sp, fp, #28
   264d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000264dc <fb_scope_table_remove_item@@Base>:
   264dc:	push	{r4, sl, fp, lr}
   264e0:	add	fp, sp, #8
   264e4:	mov	r4, r0
   264e8:	mov	r0, r1
   264ec:	bl	26380 <fb_scope_table_insert_item@@Base+0x40>
   264f0:	mov	r1, r0
   264f4:	mov	r0, r4
   264f8:	mov	r2, #0
   264fc:	pop	{r4, sl, fp, lr}
   26500:	b	26438 <fb_scope_table_remove@@Base+0x4>

00026504 <fb_scope_table_visit@@Base>:
   26504:	b	25fec <fb_scope_table_destroy@@Base+0x24>
   26508:	push	{r4, r5, r6, r7, fp, lr}
   2650c:	add	fp, sp, #16
   26510:	mov	r6, r1
   26514:	mov	r4, r0
   26518:	cmp	r1, #1
   2651c:	blt	26580 <fb_scope_table_visit@@Base+0x7c>
   26520:	mov	r5, #0
   26524:	b	26534 <fb_scope_table_visit@@Base+0x30>
   26528:	add	r0, r7, #1
   2652c:	add	r4, r4, r0
   26530:	sub	r6, r6, r0
   26534:	cmp	r6, #0
   26538:	mov	r7, #0
   2653c:	beq	2655c <fb_scope_table_visit@@Base+0x58>
   26540:	mov	r7, #0
   26544:	ldrb	r0, [r4, r7]
   26548:	cmp	r0, #46	; 0x2e
   2654c:	beq	2655c <fb_scope_table_visit@@Base+0x58>
   26550:	add	r7, r7, #1
   26554:	cmp	r7, r6
   26558:	bcc	26544 <fb_scope_table_visit@@Base+0x40>
   2655c:	mov	r0, r4
   26560:	mov	r1, r7
   26564:	bl	266f0 <fb_scope_table_visit@@Base+0x1ec>
   26568:	eor	r0, r0, r5
   2656c:	bl	2672c <fb_scope_table_visit@@Base+0x228>
   26570:	mov	r5, r0
   26574:	cmp	r7, r6
   26578:	bne	26528 <fb_scope_table_visit@@Base+0x24>
   2657c:	b	265c4 <fb_scope_table_visit@@Base+0xc0>
   26580:	cmp	r4, #0
   26584:	moveq	r5, #0
   26588:	moveq	r0, r5
   2658c:	popeq	{r4, r5, r6, r7, fp, pc}
   26590:	mvn	r6, r6
   26594:	mov	r5, #0
   26598:	ldr	r1, [r4, #4]
   2659c:	ldm	r1, {r0, r1}
   265a0:	bl	266f0 <fb_scope_table_visit@@Base+0x1ec>
   265a4:	eor	r0, r0, r5
   265a8:	bl	2672c <fb_scope_table_visit@@Base+0x228>
   265ac:	mov	r5, r0
   265b0:	cmp	r6, #0
   265b4:	subne	r6, r6, #1
   265b8:	ldrne	r4, [r4]
   265bc:	cmpne	r4, #0
   265c0:	bne	26598 <fb_scope_table_visit@@Base+0x94>
   265c4:	mov	r0, r5
   265c8:	pop	{r4, r5, r6, r7, fp, pc}
   265cc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   265d0:	add	fp, sp, #24
   265d4:	mov	r5, r1
   265d8:	mov	r4, r0
   265dc:	ldr	r7, [r2]
   265e0:	cmp	r1, #1
   265e4:	blt	2666c <fb_scope_table_visit@@Base+0x168>
   265e8:	cmp	r7, #0
   265ec:	beq	266dc <fb_scope_table_visit@@Base+0x1d8>
   265f0:	ldr	r1, [r7, #4]
   265f4:	ldr	r0, [r1, #4]
   265f8:	cmp	r0, r5
   265fc:	bhi	266dc <fb_scope_table_visit@@Base+0x1d8>
   26600:	cmp	r0, #0
   26604:	beq	26634 <fb_scope_table_visit@@Base+0x130>
   26608:	ldr	r2, [r1]
   2660c:	mov	r8, #0
   26610:	mov	r1, #0
   26614:	ldrb	r3, [r4, r1]
   26618:	ldrb	r6, [r2, r1]
   2661c:	cmp	r6, r3
   26620:	bne	266c0 <fb_scope_table_visit@@Base+0x1bc>
   26624:	add	r1, r1, #1
   26628:	cmp	r1, r0
   2662c:	bcc	26614 <fb_scope_table_visit@@Base+0x110>
   26630:	b	26638 <fb_scope_table_visit@@Base+0x134>
   26634:	mov	r1, #0
   26638:	cmp	r0, r5
   2663c:	beq	266e8 <fb_scope_table_visit@@Base+0x1e4>
   26640:	ldrb	r1, [r4, r1]
   26644:	mov	r8, #0
   26648:	cmp	r1, #46	; 0x2e
   2664c:	bne	266c0 <fb_scope_table_visit@@Base+0x1bc>
   26650:	add	r0, r0, #1
   26654:	add	r4, r4, r0
   26658:	sub	r5, r5, r0
   2665c:	ldr	r7, [r7]
   26660:	cmp	r7, #0
   26664:	bne	265f0 <fb_scope_table_visit@@Base+0xec>
   26668:	b	266c0 <fb_scope_table_visit@@Base+0x1bc>
   2666c:	mov	r8, #0
   26670:	cmp	r7, #0
   26674:	cmpne	r4, #0
   26678:	beq	266c8 <fb_scope_table_visit@@Base+0x1c4>
   2667c:	ldr	r0, [r7, #4]
   26680:	ldr	r2, [r0, #4]
   26684:	ldr	r1, [r4, #4]
   26688:	ldr	r3, [r1, #4]
   2668c:	cmp	r2, r3
   26690:	bne	266c0 <fb_scope_table_visit@@Base+0x1bc>
   26694:	ldr	r1, [r1]
   26698:	ldr	r0, [r0]
   2669c:	bl	14938 <strncmp@plt>
   266a0:	cmp	r0, #0
   266a4:	bne	266c0 <fb_scope_table_visit@@Base+0x1bc>
   266a8:	adds	r5, r5, #1
   266ac:	ldr	r4, [r4]
   266b0:	ldr	r7, [r7]
   266b4:	bne	26670 <fb_scope_table_visit@@Base+0x16c>
   266b8:	clz	r0, r7
   266bc:	b	266d0 <fb_scope_table_visit@@Base+0x1cc>
   266c0:	mov	r0, r8
   266c4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   266c8:	orr	r0, r7, r4
   266cc:	clz	r0, r0
   266d0:	lsr	r8, r0, #5
   266d4:	mov	r0, r8
   266d8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   266dc:	mov	r8, #0
   266e0:	mov	r0, r8
   266e4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   266e8:	ldr	r0, [r7]
   266ec:	b	266cc <fb_scope_table_visit@@Base+0x1c8>
   266f0:	mov	r2, r0
   266f4:	movw	r0, #11863	; 0x2e57
   266f8:	movt	r0, #12137	; 0x2f69
   266fc:	cmp	r1, #1
   26700:	beq	26728 <fb_scope_table_visit@@Base+0x224>
   26704:	rsb	r1, r1, #1
   26708:	ldrb	r3, [r2]
   2670c:	cmp	r3, #0
   26710:	bxeq	lr
   26714:	add	r0, r0, r0, lsl #5
   26718:	eor	r0, r0, r3
   2671c:	adds	r1, r1, #1
   26720:	add	r2, r2, #1
   26724:	bne	26708 <fb_scope_table_visit@@Base+0x204>
   26728:	bx	lr
   2672c:	movw	r1, #15186	; 0x3b52
   26730:	movt	r1, #12137	; 0x2f69
   26734:	eor	r0, r0, r1
   26738:	movw	r1, #31153	; 0x79b1
   2673c:	movt	r1, #40503	; 0x9e37
   26740:	mul	r0, r0, r1
   26744:	bx	lr

00026748 <fb_schema_table_clear@@Base>:
   26748:	b	2674c <fb_schema_table_clear@@Base+0x4>
   2674c:	push	{r4, sl, fp, lr}
   26750:	add	fp, sp, #8
   26754:	mov	r4, r0
   26758:	ldr	r0, [r0]
   2675c:	cmp	r0, #0
   26760:	beq	26768 <fb_schema_table_clear@@Base+0x20>
   26764:	bl	147dc <free@plt>
   26768:	vmov.i32	q8, #0	; 0x00000000
   2676c:	vst1.32	{d16-d17}, [r4]
   26770:	pop	{r4, sl, fp, pc}

00026774 <fb_schema_table_destroy@@Base>:
   26774:	push	{r4, sl, fp, lr}
   26778:	add	fp, sp, #8
   2677c:	mov	r4, r0
   26780:	cmp	r1, #0
   26784:	movne	r0, r4
   26788:	blne	26798 <fb_schema_table_destroy@@Base+0x24>
   2678c:	mov	r0, r4
   26790:	pop	{r4, sl, fp, lr}
   26794:	b	2674c <fb_schema_table_clear@@Base+0x4>
   26798:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2679c:	add	fp, sp, #24
   267a0:	mov	r6, r0
   267a4:	ldr	r0, [r0, #12]
   267a8:	cmp	r0, #0
   267ac:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   267b0:	mov	r8, r2
   267b4:	mov	r5, r1
   267b8:	ldr	r7, [r6]
   267bc:	mov	r4, #0
   267c0:	ldr	r1, [r7, r4, lsl #2]
   267c4:	orr	r0, r1, #2
   267c8:	cmp	r0, #2
   267cc:	beq	267d8 <fb_schema_table_destroy@@Base+0x64>
   267d0:	mov	r0, r8
   267d4:	blx	r5
   267d8:	ldr	r0, [r6, #12]
   267dc:	add	r4, r4, #1
   267e0:	cmp	r4, r0
   267e4:	bcc	267c0 <fb_schema_table_destroy@@Base+0x4c>
   267e8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000267ec <fb_schema_table_init@@Base>:
   267ec:	b	267f0 <fb_schema_table_init@@Base+0x4>
   267f0:	push	{r4, r5, fp, lr}
   267f4:	add	fp, sp, #8
   267f8:	mov	r4, r0
   267fc:	mov	r2, #4
   26800:	mov	r0, #179	; 0xb3
   26804:	mov	r5, r2
   26808:	mul	r3, r2, r0
   2680c:	lsl	r2, r2, #1
   26810:	cmp	r1, r3, lsr #8
   26814:	bhi	26804 <fb_schema_table_init@@Base+0x18>
   26818:	mov	r0, r5
   2681c:	mov	r1, #4
   26820:	bl	147ac <calloc@plt>
   26824:	str	r0, [r4]
   26828:	cmp	r0, #0
   2682c:	movne	r0, #0
   26830:	strne	r0, [r4, #4]
   26834:	strne	r0, [r4, #8]
   26838:	strne	r5, [r4, #12]
   2683c:	popne	{r4, r5, fp, pc}
   26840:	mvn	r0, #0
   26844:	pop	{r4, r5, fp, pc}

00026848 <fb_schema_table_resize@@Base>:
   26848:	b	2684c <fb_schema_table_resize@@Base+0x4>
   2684c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26850:	add	fp, sp, #28
   26854:	sub	sp, sp, #28
   26858:	mov	r4, r0
   2685c:	ldr	sl, [r0]
   26860:	ldr	r0, [r0, #8]
   26864:	cmp	r0, r1
   26868:	movhi	r1, r0
   2686c:	add	r0, sp, #8
   26870:	bl	267f0 <fb_schema_table_init@@Base+0x4>
   26874:	mov	r1, r0
   26878:	mvn	r0, #0
   2687c:	cmp	r1, #0
   26880:	beq	2688c <fb_schema_table_resize@@Base+0x44>
   26884:	sub	sp, fp, #28
   26888:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2688c:	ldr	r0, [r4, #12]
   26890:	cmp	r0, #0
   26894:	beq	268f0 <fb_schema_table_resize@@Base+0xa8>
   26898:	mov	r6, #0
   2689c:	mov	r8, #3
   268a0:	add	r9, sp, #8
   268a4:	ldr	r7, [sl, r6, lsl #2]
   268a8:	orr	r0, r7, #2
   268ac:	cmp	r0, #2
   268b0:	beq	268e0 <fb_schema_table_resize@@Base+0x98>
   268b4:	mov	r0, r7
   268b8:	bl	26b44 <fb_schema_table_insert_item@@Base+0x4c>
   268bc:	mov	r5, r0
   268c0:	mov	r0, r7
   268c4:	bl	26b4c <fb_schema_table_insert_item@@Base+0x54>
   268c8:	mov	r2, r0
   268cc:	str	r8, [sp]
   268d0:	mov	r0, r9
   268d4:	mov	r1, r5
   268d8:	mov	r3, r7
   268dc:	bl	26914 <fb_schema_table_insert@@Base+0x4>
   268e0:	ldr	r0, [r4, #12]
   268e4:	add	r6, r6, #1
   268e8:	cmp	r6, r0
   268ec:	bcc	268a4 <fb_schema_table_resize@@Base+0x5c>
   268f0:	mov	r0, r4
   268f4:	bl	2674c <fb_schema_table_clear@@Base+0x4>
   268f8:	add	r0, sp, #8
   268fc:	vld1.64	{d16-d17}, [r0]
   26900:	vst1.32	{d16-d17}, [r4]
   26904:	mov	r0, #0
   26908:	sub	sp, fp, #28
   2690c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00026910 <fb_schema_table_insert@@Base>:
   26910:	b	26914 <fb_schema_table_insert@@Base+0x4>
   26914:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26918:	add	fp, sp, #28
   2691c:	sub	sp, sp, #12
   26920:	str	r2, [sp, #8]
   26924:	cmp	r3, #2
   26928:	beq	26a70 <fb_schema_table_insert@@Base+0x160>
   2692c:	mov	r9, r3
   26930:	cmp	r3, #1
   26934:	beq	26a90 <fb_schema_table_insert@@Base+0x180>
   26938:	cmp	r9, #0
   2693c:	beq	26ab0 <fb_schema_table_insert@@Base+0x1a0>
   26940:	mov	r7, r1
   26944:	mov	r5, r0
   26948:	ldr	r0, [r0, #8]
   2694c:	ldr	r1, [r5, #12]
   26950:	mov	r2, #179	; 0xb3
   26954:	mul	r1, r1, r2
   26958:	cmp	r0, r1, lsr #8
   2695c:	bcc	26974 <fb_schema_table_insert@@Base+0x64>
   26960:	lsl	r1, r0, #1
   26964:	mov	r0, r5
   26968:	bl	2684c <fb_schema_table_resize@@Base+0x4>
   2696c:	cmp	r0, #0
   26970:	bne	26ad0 <fb_schema_table_insert@@Base+0x1c0>
   26974:	ldr	sl, [fp, #8]
   26978:	ldr	r8, [r5]
   2697c:	ldr	r4, [r5, #12]
   26980:	mov	r0, r7
   26984:	ldr	r1, [sp, #8]
   26988:	bl	26cf4 <fb_schema_table_visit@@Base+0x4>
   2698c:	sub	r6, r4, #1
   26990:	and	r1, r0, r6
   26994:	orr	r2, sl, #1
   26998:	cmp	r2, #3
   2699c:	bne	269d4 <fb_schema_table_insert@@Base+0xc4>
   269a0:	ldr	r2, [r5, #8]
   269a4:	add	r2, r2, #1
   269a8:	str	r2, [r5, #8]
   269ac:	b	269b4 <fb_schema_table_insert@@Base+0xa4>
   269b0:	and	r1, r0, r6
   269b4:	add	r0, r0, #1
   269b8:	mov	r5, r8
   269bc:	ldr	r1, [r5, r1, lsl #2]!
   269c0:	orr	r1, r1, #2
   269c4:	cmp	r1, #2
   269c8:	bne	269b0 <fb_schema_table_insert@@Base+0xa0>
   269cc:	mov	r4, #0
   269d0:	b	26a4c <fb_schema_table_insert@@Base+0x13c>
   269d4:	stm	sp, {r5, r9}
   269d8:	add	sl, r0, #1
   269dc:	mov	r9, #0
   269e0:	b	269ec <fb_schema_table_insert@@Base+0xdc>
   269e4:	and	r1, sl, r6
   269e8:	add	sl, sl, #1
   269ec:	mov	r5, r8
   269f0:	ldr	r4, [r5, r1, lsl #2]!
   269f4:	cmp	r4, #2
   269f8:	beq	26a20 <fb_schema_table_insert@@Base+0x110>
   269fc:	cmp	r4, #0
   26a00:	beq	26a2c <fb_schema_table_insert@@Base+0x11c>
   26a04:	mov	r0, r7
   26a08:	ldr	r1, [sp, #8]
   26a0c:	mov	r2, r4
   26a10:	bl	26d2c <fb_schema_table_visit@@Base+0x3c>
   26a14:	cmp	r0, #0
   26a18:	beq	269e4 <fb_schema_table_insert@@Base+0xd4>
   26a1c:	b	26a5c <fb_schema_table_insert@@Base+0x14c>
   26a20:	cmp	r9, #0
   26a24:	moveq	r9, r5
   26a28:	b	269e4 <fb_schema_table_insert@@Base+0xd4>
   26a2c:	ldr	r1, [sp]
   26a30:	ldr	r0, [r1, #8]
   26a34:	add	r0, r0, #1
   26a38:	str	r0, [r1, #8]
   26a3c:	cmp	r9, #0
   26a40:	movne	r5, r9
   26a44:	mov	r4, #0
   26a48:	ldr	r9, [sp, #4]
   26a4c:	str	r9, [r5]
   26a50:	mov	r0, r4
   26a54:	sub	sp, fp, #28
   26a58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26a5c:	ldr	r0, [fp, #8]
   26a60:	cmp	r0, #0
   26a64:	ldr	r9, [sp, #4]
   26a68:	streq	r9, [r5]
   26a6c:	b	26a50 <fb_schema_table_insert@@Base+0x140>
   26a70:	movw	r0, #49901	; 0xc2ed
   26a74:	movt	r0, #4
   26a78:	movw	r1, #49747	; 0xc253
   26a7c:	movt	r1, #4
   26a80:	movw	r3, #49827	; 0xc2a3
   26a84:	movt	r3, #4
   26a88:	mov	r2, #115	; 0x73
   26a8c:	bl	14950 <__assert_fail@plt>
   26a90:	movw	r0, #49924	; 0xc304
   26a94:	movt	r0, #4
   26a98:	movw	r1, #49747	; 0xc253
   26a9c:	movt	r1, #4
   26aa0:	movw	r3, #49827	; 0xc2a3
   26aa4:	movt	r3, #4
   26aa8:	mov	r2, #116	; 0x74
   26aac:	bl	14950 <__assert_fail@plt>
   26ab0:	movw	r0, #49724	; 0xc23c
   26ab4:	movt	r0, #4
   26ab8:	movw	r1, #49747	; 0xc253
   26abc:	movt	r1, #4
   26ac0:	movw	r3, #49827	; 0xc2a3
   26ac4:	movt	r3, #4
   26ac8:	mov	r2, #114	; 0x72
   26acc:	bl	14950 <__assert_fail@plt>
   26ad0:	movw	r0, #4264	; 0x10a8
   26ad4:	movt	r0, #6
   26ad8:	ldr	r0, [r0]
   26adc:	movw	r1, #49945	; 0xc319
   26ae0:	movt	r1, #4
   26ae4:	movw	r2, #49968	; 0xc330
   26ae8:	movt	r2, #4
   26aec:	bl	14890 <fprintf@plt>
   26af0:	mov	r0, #1
   26af4:	bl	14878 <exit@plt>

00026af8 <fb_schema_table_insert_item@@Base>:
   26af8:	push	{r4, r5, r6, r7, fp, lr}
   26afc:	add	fp, sp, #16
   26b00:	sub	sp, sp, #8
   26b04:	mov	r4, r2
   26b08:	mov	r5, r1
   26b0c:	mov	r6, r0
   26b10:	mov	r0, r1
   26b14:	bl	26b44 <fb_schema_table_insert_item@@Base+0x4c>
   26b18:	mov	r7, r0
   26b1c:	mov	r0, r5
   26b20:	bl	26b4c <fb_schema_table_insert_item@@Base+0x54>
   26b24:	mov	r2, r0
   26b28:	str	r4, [sp]
   26b2c:	mov	r0, r6
   26b30:	mov	r1, r7
   26b34:	mov	r3, r5
   26b38:	bl	26914 <fb_schema_table_insert@@Base+0x4>
   26b3c:	sub	sp, fp, #16
   26b40:	pop	{r4, r5, r6, r7, fp, pc}
   26b44:	ldr	r0, [r0, #144]	; 0x90
   26b48:	bx	lr
   26b4c:	ldr	r0, [r0, #148]	; 0x94
   26b50:	bx	lr

00026b54 <fb_schema_table_find@@Base>:
   26b54:	b	26b58 <fb_schema_table_find@@Base+0x4>
   26b58:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   26b5c:	add	fp, sp, #24
   26b60:	ldr	r4, [r0]
   26b64:	cmp	r4, #0
   26b68:	beq	26bcc <fb_schema_table_find@@Base+0x78>
   26b6c:	mov	r8, r2
   26b70:	mov	r9, r1
   26b74:	ldr	r5, [r0, #12]
   26b78:	mov	r0, r1
   26b7c:	mov	r1, r2
   26b80:	bl	26cf4 <fb_schema_table_visit@@Base+0x4>
   26b84:	mov	r6, r0
   26b88:	sub	r5, r5, #1
   26b8c:	b	26b94 <fb_schema_table_find@@Base+0x40>
   26b90:	add	r6, r6, #1
   26b94:	and	r0, r6, r5
   26b98:	ldr	r7, [r4, r0, lsl #2]
   26b9c:	cmp	r7, #2
   26ba0:	beq	26b90 <fb_schema_table_find@@Base+0x3c>
   26ba4:	cmp	r7, #0
   26ba8:	beq	26bcc <fb_schema_table_find@@Base+0x78>
   26bac:	mov	r0, r9
   26bb0:	mov	r1, r8
   26bb4:	mov	r2, r7
   26bb8:	bl	26d2c <fb_schema_table_visit@@Base+0x3c>
   26bbc:	cmp	r0, #0
   26bc0:	beq	26b90 <fb_schema_table_find@@Base+0x3c>
   26bc4:	mov	r0, r7
   26bc8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   26bcc:	mov	r7, #0
   26bd0:	mov	r0, r7
   26bd4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00026bd8 <fb_schema_table_find_item@@Base>:
   26bd8:	push	{r4, r5, r6, sl, fp, lr}
   26bdc:	add	fp, sp, #16
   26be0:	mov	r4, r1
   26be4:	mov	r5, r0
   26be8:	mov	r0, r1
   26bec:	bl	26b44 <fb_schema_table_insert_item@@Base+0x4c>
   26bf0:	mov	r6, r0
   26bf4:	mov	r0, r4
   26bf8:	bl	26b4c <fb_schema_table_insert_item@@Base+0x54>
   26bfc:	mov	r2, r0
   26c00:	mov	r0, r5
   26c04:	mov	r1, r6
   26c08:	pop	{r4, r5, r6, sl, fp, lr}
   26c0c:	b	26b58 <fb_schema_table_find@@Base+0x4>

00026c10 <fb_schema_table_remove@@Base>:
   26c10:	b	26c14 <fb_schema_table_remove@@Base+0x4>
   26c14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26c18:	add	fp, sp, #28
   26c1c:	sub	sp, sp, #4
   26c20:	ldr	r5, [r0]
   26c24:	mov	r7, #0
   26c28:	cmp	r5, #0
   26c2c:	beq	26cac <fb_schema_table_remove@@Base+0x9c>
   26c30:	mov	r9, r2
   26c34:	mov	sl, r1
   26c38:	str	r0, [sp]
   26c3c:	ldr	r6, [r0, #12]
   26c40:	mov	r0, r1
   26c44:	mov	r1, r2
   26c48:	bl	26cf4 <fb_schema_table_visit@@Base+0x4>
   26c4c:	mov	r4, r0
   26c50:	sub	r6, r6, #1
   26c54:	b	26c5c <fb_schema_table_remove@@Base+0x4c>
   26c58:	add	r4, r4, #1
   26c5c:	and	r8, r4, r6
   26c60:	ldr	r7, [r5, r8, lsl #2]
   26c64:	cmp	r7, #2
   26c68:	beq	26c58 <fb_schema_table_remove@@Base+0x48>
   26c6c:	cmp	r7, #0
   26c70:	beq	26ca8 <fb_schema_table_remove@@Base+0x98>
   26c74:	mov	r0, sl
   26c78:	mov	r1, r9
   26c7c:	mov	r2, r7
   26c80:	bl	26d2c <fb_schema_table_visit@@Base+0x3c>
   26c84:	cmp	r0, #0
   26c88:	beq	26c58 <fb_schema_table_remove@@Base+0x48>
   26c8c:	mov	r0, #2
   26c90:	str	r0, [r5, r8, lsl #2]
   26c94:	ldr	r1, [sp]
   26c98:	ldr	r0, [r1, #8]
   26c9c:	sub	r0, r0, #1
   26ca0:	str	r0, [r1, #8]
   26ca4:	b	26cac <fb_schema_table_remove@@Base+0x9c>
   26ca8:	mov	r7, #0
   26cac:	mov	r0, r7
   26cb0:	sub	sp, fp, #28
   26cb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00026cb8 <fb_schema_table_remove_item@@Base>:
   26cb8:	push	{r4, r5, r6, sl, fp, lr}
   26cbc:	add	fp, sp, #16
   26cc0:	mov	r4, r1
   26cc4:	mov	r5, r0
   26cc8:	mov	r0, r1
   26ccc:	bl	26b44 <fb_schema_table_insert_item@@Base+0x4c>
   26cd0:	mov	r6, r0
   26cd4:	mov	r0, r4
   26cd8:	bl	26b4c <fb_schema_table_insert_item@@Base+0x54>
   26cdc:	mov	r2, r0
   26ce0:	mov	r0, r5
   26ce4:	mov	r1, r6
   26ce8:	pop	{r4, r5, r6, sl, fp, lr}
   26cec:	b	26c14 <fb_schema_table_remove@@Base+0x4>

00026cf0 <fb_schema_table_visit@@Base>:
   26cf0:	b	26798 <fb_schema_table_destroy@@Base+0x24>
   26cf4:	push	{fp, lr}
   26cf8:	mov	fp, sp
   26cfc:	sub	sp, sp, #16
   26d00:	add	r2, sp, #8
   26d04:	movw	r3, #15186	; 0x3b52
   26d08:	movt	r3, #12137	; 0x2f69
   26d0c:	str	r3, [sp]
   26d10:	str	r2, [sp, #4]
   26d14:	mov	r2, r1
   26d18:	mov	r3, #0
   26d1c:	bl	31d78 <cmetrohash64_1@@Base>
   26d20:	ldr	r0, [sp, #8]
   26d24:	mov	sp, fp
   26d28:	pop	{fp, pc}
   26d2c:	mov	ip, r1
   26d30:	ldr	r3, [r2, #148]	; 0x94
   26d34:	mov	r1, #0
   26d38:	cmp	r3, ip
   26d3c:	bne	26d60 <fb_schema_table_visit@@Base+0x70>
   26d40:	push	{fp, lr}
   26d44:	mov	fp, sp
   26d48:	ldr	r1, [r2, #144]	; 0x90
   26d4c:	mov	r2, ip
   26d50:	bl	14800 <memcmp@plt>
   26d54:	clz	r0, r0
   26d58:	lsr	r1, r0, #5
   26d5c:	pop	{fp, lr}
   26d60:	mov	r0, r1
   26d64:	bx	lr

00026d68 <__flatcc_fb_copy_path_n@@Base>:
   26d68:	push	{r4, r5, r6, sl, fp, lr}
   26d6c:	add	fp, sp, #16
   26d70:	mov	r4, r0
   26d74:	bl	26db0 <__flatcc_fb_copy_path_n@@Base+0x48>
   26d78:	mov	r5, r0
   26d7c:	add	r0, r0, #1
   26d80:	bl	14848 <malloc@plt>
   26d84:	mov	r6, r0
   26d88:	cmp	r0, #0
   26d8c:	beq	26da8 <__flatcc_fb_copy_path_n@@Base+0x40>
   26d90:	mov	r0, r6
   26d94:	mov	r1, r4
   26d98:	mov	r2, r5
   26d9c:	bl	147e8 <memcpy@plt>
   26da0:	mov	r0, #0
   26da4:	strb	r0, [r6, r5]
   26da8:	mov	r0, r6
   26dac:	pop	{r4, r5, r6, sl, fp, pc}
   26db0:	push	{r4, r5, fp, lr}
   26db4:	add	fp, sp, #8
   26db8:	mov	r4, r1
   26dbc:	mov	r5, r0
   26dc0:	mov	r1, #0
   26dc4:	mov	r2, r4
   26dc8:	bl	148cc <memchr@plt>
   26dcc:	cmp	r0, #0
   26dd0:	subne	r4, r0, r5
   26dd4:	mov	r0, r4
   26dd8:	pop	{r4, r5, fp, pc}

00026ddc <__flatcc_fb_copy_path@@Base>:
   26ddc:	push	{r4, r5, r6, sl, fp, lr}
   26de0:	add	fp, sp, #16
   26de4:	mov	r5, r0
   26de8:	bl	14884 <strlen@plt>
   26dec:	mov	r4, r0
   26df0:	add	r0, r0, #1
   26df4:	bl	14848 <malloc@plt>
   26df8:	mov	r6, r0
   26dfc:	cmp	r0, #0
   26e00:	beq	26e1c <__flatcc_fb_copy_path@@Base+0x40>
   26e04:	mov	r0, r6
   26e08:	mov	r1, r5
   26e0c:	mov	r2, r4
   26e10:	bl	147e8 <memcpy@plt>
   26e14:	mov	r0, #0
   26e18:	strb	r0, [r6, r4]
   26e1c:	mov	r0, r6
   26e20:	pop	{r4, r5, r6, sl, fp, pc}

00026e24 <__flatcc_fb_chomp@@Base>:
   26e24:	push	{r4, r5, r6, r7, fp, lr}
   26e28:	add	fp, sp, #16
   26e2c:	mov	r5, r2
   26e30:	mov	r4, r1
   26e34:	mov	r7, r0
   26e38:	cmp	r2, #0
   26e3c:	beq	26e78 <__flatcc_fb_chomp@@Base+0x54>
   26e40:	mov	r0, r5
   26e44:	bl	14884 <strlen@plt>
   26e48:	mov	r6, r0
   26e4c:	cmp	r6, r4
   26e50:	bcs	26e70 <__flatcc_fb_chomp@@Base+0x4c>
   26e54:	add	r0, r7, r4
   26e58:	sub	r0, r0, r6
   26e5c:	mov	r1, r5
   26e60:	mov	r2, r6
   26e64:	bl	14938 <strncmp@plt>
   26e68:	cmp	r0, #0
   26e6c:	subeq	r4, r4, r6
   26e70:	mov	r0, r4
   26e74:	pop	{r4, r5, r6, r7, fp, pc}
   26e78:	mov	r6, #0
   26e7c:	cmp	r6, r4
   26e80:	bcc	26e54 <__flatcc_fb_chomp@@Base+0x30>
   26e84:	b	26e70 <__flatcc_fb_chomp@@Base+0x4c>

00026e88 <__flatcc_fb_create_join_path_n@@Base>:
   26e88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26e8c:	add	fp, sp, #28
   26e90:	sub	sp, sp, #4
   26e94:	mov	r4, r3
   26e98:	mov	r9, r2
   26e9c:	mov	r6, r1
   26ea0:	mov	r7, r0
   26ea4:	ldr	r0, [fp, #8]
   26ea8:	cmp	r0, #0
   26eac:	beq	26ebc <__flatcc_fb_create_join_path_n@@Base+0x34>
   26eb0:	bl	14884 <strlen@plt>
   26eb4:	mov	sl, r0
   26eb8:	b	26ec0 <__flatcc_fb_create_join_path_n@@Base+0x38>
   26ebc:	mov	sl, #0
   26ec0:	ldr	r8, [fp, #12]
   26ec4:	cmp	r7, #0
   26ec8:	beq	26ee4 <__flatcc_fb_create_join_path_n@@Base+0x5c>
   26ecc:	cmp	r4, #0
   26ed0:	beq	26ee8 <__flatcc_fb_create_join_path_n@@Base+0x60>
   26ed4:	ldrb	r0, [r9]
   26ed8:	cmp	r0, #47	; 0x2f
   26edc:	cmpne	r0, #92	; 0x5c
   26ee0:	bne	26f8c <__flatcc_fb_create_join_path_n@@Base+0x104>
   26ee4:	mov	r6, #0
   26ee8:	cmp	r8, #0
   26eec:	cmpne	r6, #0
   26ef0:	bne	26efc <__flatcc_fb_create_join_path_n@@Base+0x74>
   26ef4:	mov	r8, #0
   26ef8:	b	26f10 <__flatcc_fb_create_join_path_n@@Base+0x88>
   26efc:	add	r0, r7, r6
   26f00:	ldrb	r0, [r0, #-1]
   26f04:	cmp	r0, #92	; 0x5c
   26f08:	cmpne	r0, #47	; 0x2f
   26f0c:	moveq	r8, #0
   26f10:	add	r0, r6, r4
   26f14:	add	r0, r0, sl
   26f18:	add	r0, r0, r8
   26f1c:	add	r0, r0, #1
   26f20:	bl	14848 <malloc@plt>
   26f24:	mov	r5, r0
   26f28:	cmp	r0, #0
   26f2c:	beq	26f80 <__flatcc_fb_create_join_path_n@@Base+0xf8>
   26f30:	mov	r0, r5
   26f34:	mov	r1, r7
   26f38:	mov	r2, r6
   26f3c:	bl	147e8 <memcpy@plt>
   26f40:	cmp	r8, #0
   26f44:	movne	r0, #47	; 0x2f
   26f48:	strbne	r0, [r5, r6]
   26f4c:	addne	r6, r6, #1
   26f50:	add	r0, r5, r6
   26f54:	mov	r1, r9
   26f58:	mov	r2, r4
   26f5c:	bl	147e8 <memcpy@plt>
   26f60:	add	r4, r6, r4
   26f64:	add	r0, r5, r4
   26f68:	ldr	r1, [fp, #8]
   26f6c:	mov	r2, sl
   26f70:	bl	147e8 <memcpy@plt>
   26f74:	add	r0, r4, sl
   26f78:	mov	r1, #0
   26f7c:	strb	r1, [r5, r0]
   26f80:	mov	r0, r5
   26f84:	sub	sp, fp, #28
   26f88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26f8c:	cmp	r4, #2
   26f90:	bcc	26ee8 <__flatcc_fb_create_join_path_n@@Base+0x60>
   26f94:	ldrb	r0, [r9, #1]
   26f98:	cmp	r0, #58	; 0x3a
   26f9c:	moveq	r6, #0
   26fa0:	b	26ee8 <__flatcc_fb_create_join_path_n@@Base+0x60>

00026fa4 <__flatcc_fb_create_join_path@@Base>:
   26fa4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   26fa8:	add	fp, sp, #24
   26fac:	sub	sp, sp, #8
   26fb0:	mov	r8, r3
   26fb4:	mov	r9, r2
   26fb8:	mov	r4, r1
   26fbc:	mov	r6, r0
   26fc0:	mov	r5, #0
   26fc4:	cmp	r0, #0
   26fc8:	mov	r7, #0
   26fcc:	beq	26fdc <__flatcc_fb_create_join_path@@Base+0x38>
   26fd0:	mov	r0, r6
   26fd4:	bl	14884 <strlen@plt>
   26fd8:	mov	r7, r0
   26fdc:	cmp	r4, #0
   26fe0:	beq	26ff0 <__flatcc_fb_create_join_path@@Base+0x4c>
   26fe4:	mov	r0, r4
   26fe8:	bl	14884 <strlen@plt>
   26fec:	mov	r5, r0
   26ff0:	str	r9, [sp]
   26ff4:	str	r8, [sp, #4]
   26ff8:	mov	r0, r6
   26ffc:	mov	r1, r7
   27000:	mov	r2, r4
   27004:	mov	r3, r5
   27008:	bl	26e88 <__flatcc_fb_create_join_path_n@@Base>
   2700c:	sub	sp, fp, #24
   27010:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00027014 <__flatcc_fb_create_path_ext_n@@Base>:
   27014:	push	{fp, lr}
   27018:	mov	fp, sp
   2701c:	sub	sp, sp, #8
   27020:	mov	ip, r1
   27024:	mov	r3, r0
   27028:	mov	r0, #0
   2702c:	str	r2, [sp]
   27030:	str	r0, [sp, #4]
   27034:	mov	r0, #0
   27038:	mov	r1, #0
   2703c:	mov	r2, r3
   27040:	mov	r3, ip
   27044:	bl	26e88 <__flatcc_fb_create_join_path_n@@Base>
   27048:	mov	sp, fp
   2704c:	pop	{fp, pc}

00027050 <__flatcc_fb_create_path_ext@@Base>:
   27050:	mov	r2, r1
   27054:	mov	r1, r0
   27058:	mov	r0, #0
   2705c:	mov	r3, #0
   27060:	b	26fa4 <__flatcc_fb_create_join_path@@Base>

00027064 <__flatcc_fb_create_make_path_n@@Base>:
   27064:	push	{r4, r5, r6, sl, fp, lr}
   27068:	add	fp, sp, #16
   2706c:	mov	r6, r0
   27070:	cmp	r1, #0
   27074:	beq	270bc <__flatcc_fb_create_make_path_n@@Base+0x58>
   27078:	cmp	r1, #1
   2707c:	bne	270c8 <__flatcc_fb_create_make_path_n@@Base+0x64>
   27080:	ldrb	r5, [r6]
   27084:	cmp	r5, #92	; 0x5c
   27088:	cmpne	r5, #32
   2708c:	bne	270bc <__flatcc_fb_create_make_path_n@@Base+0x58>
   27090:	mov	r0, #3
   27094:	bl	14848 <malloc@plt>
   27098:	cmp	r0, #0
   2709c:	moveq	r0, #0
   270a0:	popeq	{r4, r5, r6, sl, fp, pc}
   270a4:	strb	r5, [r0, #1]
   270a8:	mov	r1, #92	; 0x5c
   270ac:	strb	r1, [r0]
   270b0:	mov	r1, #0
   270b4:	strb	r1, [r0, #2]
   270b8:	pop	{r4, r5, r6, sl, fp, pc}
   270bc:	mov	r0, r6
   270c0:	pop	{r4, r5, r6, sl, fp, lr}
   270c4:	b	26d68 <__flatcc_fb_copy_path_n@@Base>
   270c8:	sub	r5, r1, #1
   270cc:	ldrb	r3, [r6]
   270d0:	mov	r2, #1
   270d4:	mov	r0, r1
   270d8:	uxtb	r3, r3
   270dc:	cmp	r3, #92	; 0x5c
   270e0:	bne	270f0 <__flatcc_fb_create_make_path_n@@Base+0x8c>
   270e4:	ldrb	r4, [r6, r2]
   270e8:	cmp	r4, #32
   270ec:	addeq	r0, r0, #1
   270f0:	cmp	r3, #32
   270f4:	addeq	r0, r0, #1
   270f8:	ldrb	r3, [r6, r2]
   270fc:	add	r2, r2, #1
   27100:	cmp	r1, r2
   27104:	bne	270d8 <__flatcc_fb_create_make_path_n@@Base+0x74>
   27108:	cmp	r3, #32
   2710c:	addeq	r0, r0, #1
   27110:	add	r0, r0, #1
   27114:	bl	14848 <malloc@plt>
   27118:	cmp	r0, #0
   2711c:	moveq	r0, #0
   27120:	popeq	{r4, r5, r6, sl, fp, pc}
   27124:	ldrb	r1, [r6]
   27128:	cmp	r5, #0
   2712c:	beq	27178 <__flatcc_fb_create_make_path_n@@Base+0x114>
   27130:	add	r3, r6, #1
   27134:	mov	r2, #0
   27138:	mov	ip, #92	; 0x5c
   2713c:	uxtb	r4, r1
   27140:	cmp	r4, #32
   27144:	beq	27158 <__flatcc_fb_create_make_path_n@@Base+0xf4>
   27148:	cmp	r4, #92	; 0x5c
   2714c:	ldrbeq	r6, [r3]
   27150:	cmpeq	r6, #32
   27154:	bne	27160 <__flatcc_fb_create_make_path_n@@Base+0xfc>
   27158:	strb	ip, [r0, r2]
   2715c:	add	r2, r2, #1
   27160:	strb	r1, [r0, r2]
   27164:	subs	r5, r5, #1
   27168:	add	r2, r2, #1
   2716c:	ldrb	r1, [r3], #1
   27170:	bne	2713c <__flatcc_fb_create_make_path_n@@Base+0xd8>
   27174:	b	2717c <__flatcc_fb_create_make_path_n@@Base+0x118>
   27178:	mov	r2, #0
   2717c:	cmp	r1, #32
   27180:	moveq	r3, #92	; 0x5c
   27184:	strbeq	r3, [r0, r2]
   27188:	addeq	r2, r2, #1
   2718c:	mov	r3, r0
   27190:	strb	r1, [r3, r2]!
   27194:	mov	r1, #0
   27198:	strb	r1, [r3, #1]
   2719c:	pop	{r4, r5, r6, sl, fp, pc}

000271a0 <__flatcc_fb_create_make_path@@Base>:
   271a0:	push	{r4, sl, fp, lr}
   271a4:	add	fp, sp, #8
   271a8:	mov	r4, r0
   271ac:	bl	14884 <strlen@plt>
   271b0:	mov	r1, r0
   271b4:	mov	r0, r4
   271b8:	pop	{r4, sl, fp, lr}
   271bc:	b	27064 <__flatcc_fb_create_make_path_n@@Base>

000271c0 <__flatcc_fb_find_basename@@Base>:
   271c0:	mov	r2, r1
   271c4:	cmp	r1, #0
   271c8:	addne	r1, r0, r2
   271cc:	ldrbne	r3, [r1, #-1]
   271d0:	cmpne	r3, #92	; 0x5c
   271d4:	beq	271e4 <__flatcc_fb_find_basename@@Base+0x24>
   271d8:	sub	r1, r2, #1
   271dc:	cmp	r3, #47	; 0x2f
   271e0:	bne	271c0 <__flatcc_fb_find_basename@@Base>
   271e4:	mov	r0, r2
   271e8:	bx	lr

000271ec <__flatcc_fb_create_basename@@Base>:
   271ec:	push	{r4, r5, r6, sl, fp, lr}
   271f0:	add	fp, sp, #16
   271f4:	mov	r5, r2
   271f8:	mov	r6, r1
   271fc:	mov	r4, r0
   27200:	bl	271c0 <__flatcc_fb_find_basename@@Base>
   27204:	add	r4, r4, r0
   27208:	sub	r1, r6, r0
   2720c:	mov	r0, r4
   27210:	mov	r2, r5
   27214:	bl	26e24 <__flatcc_fb_chomp@@Base>
   27218:	mov	r5, r0
   2721c:	add	r0, r0, #1
   27220:	bl	14848 <malloc@plt>
   27224:	mov	r6, r0
   27228:	cmp	r0, #0
   2722c:	beq	27248 <__flatcc_fb_create_basename@@Base+0x5c>
   27230:	mov	r0, r6
   27234:	mov	r1, r4
   27238:	mov	r2, r5
   2723c:	bl	147e8 <memcpy@plt>
   27240:	mov	r0, #0
   27244:	strb	r0, [r6, r5]
   27248:	mov	r0, r6
   2724c:	pop	{r4, r5, r6, sl, fp, pc}

00027250 <__flatcc_fb_read_file@@Base>:
   27250:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   27254:	add	fp, sp, #24
   27258:	sub	sp, sp, #8
   2725c:	mov	r7, r1
   27260:	add	r9, sp, #4
   27264:	cmp	r2, #0
   27268:	movne	r9, r2
   2726c:	movw	r1, #50068	; 0xc394
   27270:	movt	r1, #4
   27274:	bl	147d0 <fopen@plt>
   27278:	cmp	r0, #0
   2727c:	beq	27314 <__flatcc_fb_read_file@@Base+0xc4>
   27280:	mov	r6, r0
   27284:	mov	r8, #0
   27288:	mov	r1, #0
   2728c:	mov	r2, #2
   27290:	bl	1492c <fseek@plt>
   27294:	mov	r0, r6
   27298:	bl	147f4 <ftell@plt>
   2729c:	mov	r5, r0
   272a0:	str	r0, [r9]
   272a4:	cmp	r7, #0
   272a8:	cmpne	r5, r7
   272ac:	bhi	27324 <__flatcc_fb_read_file@@Base+0xd4>
   272b0:	mov	r0, r6
   272b4:	bl	14818 <rewind@plt>
   272b8:	cmp	r5, #0
   272bc:	mov	r0, r5
   272c0:	movweq	r0, #1
   272c4:	bl	14848 <malloc@plt>
   272c8:	cmp	r0, #0
   272cc:	beq	27324 <__flatcc_fb_read_file@@Base+0xd4>
   272d0:	mov	r7, r0
   272d4:	mov	r8, r0
   272d8:	mov	r1, #0
   272dc:	mov	r4, r1
   272e0:	add	r0, r7, r1
   272e4:	sub	r2, r5, r1
   272e8:	mov	r1, #1
   272ec:	mov	r3, r6
   272f0:	bl	14920 <fread_unlocked@plt>
   272f4:	add	r1, r0, r4
   272f8:	cmp	r0, #0
   272fc:	bne	272dc <__flatcc_fb_read_file@@Base+0x8c>
   27300:	cmp	r5, r4
   27304:	bne	2731c <__flatcc_fb_read_file@@Base+0xcc>
   27308:	mov	r0, r6
   2730c:	bl	148d8 <fclose@plt>
   27310:	b	27340 <__flatcc_fb_read_file@@Base+0xf0>
   27314:	mov	r5, #0
   27318:	b	2733c <__flatcc_fb_read_file@@Base+0xec>
   2731c:	cmp	r6, #0
   27320:	beq	2732c <__flatcc_fb_read_file@@Base+0xdc>
   27324:	mov	r0, r6
   27328:	bl	148d8 <fclose@plt>
   2732c:	cmp	r8, #0
   27330:	beq	2733c <__flatcc_fb_read_file@@Base+0xec>
   27334:	mov	r0, r8
   27338:	bl	147dc <free@plt>
   2733c:	mov	r8, #0
   27340:	str	r5, [r9]
   27344:	mov	r0, r8
   27348:	sub	sp, fp, #24
   2734c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00027350 <__flatcc_fb_default_error_out@@Base>:
   27350:	mov	r0, r1
   27354:	movw	r1, #4264	; 0x10a8
   27358:	movt	r1, #6
   2735c:	ldr	r3, [r1]
   27360:	mov	r1, #1
   27364:	b	14830 <fwrite@plt>

00027368 <__flatcc_fb_print_error@@Base>:
   27368:	sub	sp, sp, #8
   2736c:	push	{r4, r5, fp, lr}
   27370:	add	fp, sp, #8
   27374:	sub	sp, sp, #208	; 0xd0
   27378:	mov	r5, r1
   2737c:	mov	r4, r0
   27380:	str	r3, [fp, #12]
   27384:	str	r2, [fp, #8]
   27388:	add	r3, fp, #8
   2738c:	str	r3, [fp, #-12]
   27390:	add	r0, sp, #4
   27394:	mov	r1, #200	; 0xc8
   27398:	mov	r2, r5
   2739c:	bl	14908 <vsnprintf@plt>
   273a0:	mov	r5, r0
   273a4:	cmp	r0, #200	; 0xc8
   273a8:	blt	273c4 <__flatcc_fb_print_error@@Base+0x5c>
   273ac:	mov	r0, #0
   273b0:	strb	r0, [sp, #203]	; 0xcb
   273b4:	movw	r0, #11822	; 0x2e2e
   273b8:	movt	r0, #2606	; 0xa2e
   273bc:	str	r0, [sp, #199]	; 0xc7
   273c0:	mov	r5, #199	; 0xc7
   273c4:	ldr	r3, [r4, #12]
   273c8:	ldr	r4, [r4, #8]
   273cc:	add	r1, sp, #4
   273d0:	mov	r0, r3
   273d4:	mov	r2, r5
   273d8:	blx	r4
   273dc:	mov	r0, r5
   273e0:	sub	sp, fp, #8
   273e4:	pop	{r4, r5, fp, lr}
   273e8:	add	sp, sp, #8
   273ec:	bx	lr

000273f0 <__flatcc_error_find_file_of_token@@Base>:
   273f0:	mov	r2, r0
   273f4:	movw	r0, #21264	; 0x5310
   273f8:	movt	r0, #3
   273fc:	b	27404 <__flatcc_error_find_file_of_token@@Base+0x14>
   27400:	ldr	r2, [r2]
   27404:	cmp	r2, #0
   27408:	bxeq	lr
   2740c:	ldr	r3, [r2, #20]
   27410:	cmp	r3, r1
   27414:	bhi	27400 <__flatcc_error_find_file_of_token@@Base+0x10>
   27418:	ldr	r3, [r2, #24]
   2741c:	cmp	r3, r1
   27420:	bls	27400 <__flatcc_error_find_file_of_token@@Base+0x10>
   27424:	ldr	r0, [r2, #520]	; 0x208
   27428:	bx	lr

0002742c <__flatcc_error_report@@Base>:
   2742c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27430:	add	fp, sp, #28
   27434:	sub	sp, sp, #36	; 0x24
   27438:	mov	r6, r3
   2743c:	mov	sl, r2
   27440:	mov	r7, r1
   27444:	mov	r9, r0
   27448:	ldr	r5, [fp, #12]
   2744c:	ldr	r4, [fp, #8]
   27450:	cmp	r1, #0
   27454:	beq	27460 <__flatcc_error_report@@Base+0x34>
   27458:	cmp	r4, #0
   2745c:	ldmeq	r7, {r4, r5}
   27460:	cmp	r4, #0
   27464:	moveq	r5, r4
   27468:	movw	r0, #21264	; 0x5310
   2746c:	movt	r0, #3
   27470:	moveq	r4, r0
   27474:	cmp	sl, #0
   27478:	moveq	sl, r0
   2747c:	cmp	r7, #0
   27480:	beq	274c4 <__flatcc_error_report@@Base+0x98>
   27484:	cmp	r6, #0
   27488:	bne	274c4 <__flatcc_error_report@@Base+0x98>
   2748c:	mov	r0, r9
   27490:	mov	r1, r7
   27494:	bl	273f0 <__flatcc_error_find_file_of_token@@Base>
   27498:	mov	r2, r0
   2749c:	ldr	r3, [r7, #8]
   274a0:	ldr	r0, [r7, #12]
   274a4:	stm	sp, {r0, r5}
   274a8:	str	r4, [sp, #8]
   274ac:	str	sl, [sp, #12]
   274b0:	movw	r1, #50071	; 0xc397
   274b4:	movt	r1, #4
   274b8:	mov	r0, r9
   274bc:	bl	27368 <__flatcc_fb_print_error@@Base>
   274c0:	b	275a8 <__flatcc_error_report@@Base+0x17c>
   274c4:	cmp	r7, #0
   274c8:	cmpne	r6, #0
   274cc:	bne	27518 <__flatcc_error_report@@Base+0xec>
   274d0:	orrs	r0, r7, r6
   274d4:	beq	27580 <__flatcc_error_report@@Base+0x154>
   274d8:	cmp	r6, #0
   274dc:	beq	27598 <__flatcc_error_report@@Base+0x16c>
   274e0:	mov	r0, r9
   274e4:	mov	r1, r6
   274e8:	bl	273f0 <__flatcc_error_find_file_of_token@@Base>
   274ec:	mov	r3, r0
   274f0:	ldm	r6, {r0, r1, r2, r7}
   274f4:	stm	sp, {r2, r7}
   274f8:	str	r1, [sp, #8]
   274fc:	str	r0, [sp, #12]
   27500:	movw	r1, #50164	; 0xc3f4
   27504:	movt	r1, #4
   27508:	mov	r0, r9
   2750c:	mov	r2, sl
   27510:	bl	27368 <__flatcc_fb_print_error@@Base>
   27514:	b	275a8 <__flatcc_error_report@@Base+0x17c>
   27518:	mov	r0, r9
   2751c:	mov	r1, r7
   27520:	bl	273f0 <__flatcc_error_find_file_of_token@@Base>
   27524:	mov	r8, r0
   27528:	mov	r0, r9
   2752c:	mov	r1, r6
   27530:	bl	273f0 <__flatcc_error_find_file_of_token@@Base>
   27534:	ldr	r3, [r7, #8]
   27538:	ldr	r1, [r7, #12]
   2753c:	ldm	r6, {r2, ip}
   27540:	ldr	r7, [r6, #8]
   27544:	ldr	r6, [r6, #12]
   27548:	str	r2, [sp, #32]
   2754c:	stm	sp, {r1, r5}
   27550:	str	r4, [sp, #8]
   27554:	str	sl, [sp, #12]
   27558:	str	r0, [sp, #16]
   2755c:	str	r7, [sp, #20]
   27560:	str	r6, [sp, #24]
   27564:	str	ip, [sp, #28]
   27568:	movw	r1, #50102	; 0xc3b6
   2756c:	movt	r1, #4
   27570:	mov	r0, r9
   27574:	mov	r2, r8
   27578:	bl	27368 <__flatcc_fb_print_error@@Base>
   2757c:	b	275a8 <__flatcc_error_report@@Base+0x17c>
   27580:	movw	r1, #50153	; 0xc3e9
   27584:	movt	r1, #4
   27588:	mov	r0, r9
   2758c:	mov	r2, sl
   27590:	bl	27368 <__flatcc_fb_print_error@@Base>
   27594:	b	275a8 <__flatcc_error_report@@Base+0x17c>
   27598:	movw	r1, #50195	; 0xc413
   2759c:	movt	r1, #4
   275a0:	mov	r0, r9
   275a4:	bl	27368 <__flatcc_fb_print_error@@Base>
   275a8:	ldr	r0, [r9, #108]	; 0x6c
   275ac:	add	r0, r0, #1
   275b0:	str	r0, [r9, #108]	; 0x6c
   275b4:	sub	sp, fp, #28
   275b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000275bc <error_ref_sym@@Base>:
   275bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   275c0:	add	fp, sp, #28
   275c4:	sub	sp, sp, #76	; 0x4c
   275c8:	mov	sl, r1
   275cc:	cmp	r1, #0
   275d0:	beq	27650 <error_ref_sym@@Base+0x94>
   275d4:	str	r3, [sp, #12]
   275d8:	str	r0, [sp, #16]
   275dc:	str	r2, [sp, #20]
   275e0:	mov	r5, #50	; 0x32
   275e4:	mov	r8, #0
   275e8:	add	r6, sp, #25
   275ec:	mov	r9, #46	; 0x2e
   275f0:	mov	r7, sl
   275f4:	add	r0, r6, r8
   275f8:	ldr	r2, [r7, #4]
   275fc:	ldm	r2, {r1, r4}
   27600:	cmp	r5, r4
   27604:	movlt	r4, r5
   27608:	mov	r2, r4
   2760c:	bl	147e8 <memcpy@plt>
   27610:	add	r0, r4, r8
   27614:	strb	r9, [r6, r0]
   27618:	mvn	r1, r4
   2761c:	add	r5, r5, r1
   27620:	add	r8, r0, #1
   27624:	ldr	r7, [r7]
   27628:	cmp	r7, #0
   2762c:	beq	27638 <error_ref_sym@@Base+0x7c>
   27630:	cmp	r5, #0
   27634:	bgt	275f4 <error_ref_sym@@Base+0x38>
   27638:	mov	r1, #0
   2763c:	strb	r1, [r6, r8]
   27640:	cmp	r5, #0
   27644:	ble	2765c <error_ref_sym@@Base+0xa0>
   27648:	sub	r6, r0, r0, asr #31
   2764c:	b	2766c <error_ref_sym@@Base+0xb0>
   27650:	mov	r6, #0
   27654:	strb	r6, [sp, #25]
   27658:	b	27678 <error_ref_sym@@Base+0xbc>
   2765c:	movw	r0, #11822	; 0x2e2e
   27660:	movt	r0, #46	; 0x2e
   27664:	str	r0, [sp, #72]	; 0x48
   27668:	mov	r6, #50	; 0x32
   2766c:	ldr	r2, [sp, #20]
   27670:	ldr	r0, [sp, #16]
   27674:	ldr	r3, [sp, #12]
   27678:	ldr	r1, [sl, #4]
   2767c:	cmp	r3, #0
   27680:	ldrne	r3, [r3, #4]
   27684:	moveq	r3, #0
   27688:	add	r7, sp, #25
   2768c:	str	r7, [sp]
   27690:	str	r6, [sp, #4]
   27694:	bl	2742c <__flatcc_error_report@@Base>
   27698:	sub	sp, fp, #28
   2769c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000276a0 <__flatcc_fb_init_parser@@Base>:
   276a0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   276a4:	add	fp, sp, #24
   276a8:	mov	r5, r3
   276ac:	mov	r6, r2
   276b0:	mov	r8, r1
   276b4:	mov	r4, r0
   276b8:	mov	r1, #0
   276bc:	mov	r2, #560	; 0x230
   276c0:	bl	148a8 <memset@plt>
   276c4:	cmp	r5, #0
   276c8:	beq	276dc <__flatcc_fb_init_parser@@Base+0x3c>
   276cc:	ldr	r1, [fp, #8]
   276d0:	str	r5, [r4, #8]
   276d4:	str	r1, [r4, #12]
   276d8:	b	276e8 <__flatcc_fb_init_parser@@Base+0x48>
   276dc:	movw	r0, #29520	; 0x7350
   276e0:	movt	r0, #2
   276e4:	str	r0, [r4, #8]
   276e8:	ldr	r5, [fp, #12]
   276ec:	add	r0, r4, #128	; 0x80
   276f0:	cmp	r8, #0
   276f4:	beq	27708 <__flatcc_fb_init_parser@@Base+0x68>
   276f8:	mov	r1, r8
   276fc:	mov	r2, #224	; 0xe0
   27700:	bl	147e8 <memcpy@plt>
   27704:	b	2770c <__flatcc_fb_init_parser@@Base+0x6c>
   27708:	bl	14ba0 <flatcc_init_options@@Base>
   2770c:	cmp	r5, #0
   27710:	addeq	r5, r4, #416	; 0x1a0
   27714:	str	r5, [r4, #412]	; 0x19c
   27718:	ldr	r0, [r4, #192]	; 0xc0
   2771c:	cmp	r0, #8
   27720:	bhi	27848 <__flatcc_fb_init_parser@@Base+0x1a8>
   27724:	mov	r1, #1
   27728:	mov	r2, #276	; 0x114
   2772c:	tst	r2, r1, lsl r0
   27730:	beq	27848 <__flatcc_fb_init_parser@@Base+0x1a8>
   27734:	ldr	r0, [r4, #196]	; 0xc4
   27738:	cmp	r0, #8
   2773c:	bhi	27854 <__flatcc_fb_init_parser@@Base+0x1b4>
   27740:	mov	r1, #1
   27744:	mov	r2, #276	; 0x114
   27748:	tst	r2, r1, lsl r0
   2774c:	beq	27854 <__flatcc_fb_init_parser@@Base+0x1b4>
   27750:	movw	r7, #50342	; 0xc4a6
   27754:	movt	r7, #4
   27758:	cmp	r6, #0
   2775c:	movne	r7, r6
   27760:	mov	r0, r7
   27764:	bl	14884 <strlen@plt>
   27768:	mov	r9, r0
   2776c:	ldr	r2, [r8, #96]	; 0x60
   27770:	mov	r0, r7
   27774:	mov	r1, r9
   27778:	bl	271ec <__flatcc_fb_create_basename@@Base>
   2777c:	str	r0, [r4, #512]	; 0x200
   27780:	bl	2787c <__flatcc_fb_init_parser@@Base+0x1dc>
   27784:	ldr	r5, [r4, #512]	; 0x200
   27788:	mov	r0, r5
   2778c:	bl	14884 <strlen@plt>
   27790:	mov	r6, r0
   27794:	mov	r0, r5
   27798:	mov	r1, r6
   2779c:	bl	26d68 <__flatcc_fb_copy_path_n@@Base>
   277a0:	mov	r5, r0
   277a4:	bl	2787c <__flatcc_fb_init_parser@@Base+0x1dc>
   277a8:	mov	r0, r5
   277ac:	mov	r1, r6
   277b0:	bl	278b4 <__flatcc_fb_init_parser@@Base+0x214>
   277b4:	str	r5, [r4, #516]	; 0x204
   277b8:	str	r5, [r4, #496]	; 0x1f0
   277bc:	str	r6, [r4, #500]	; 0x1f4
   277c0:	movw	r2, #21264	; 0x5310
   277c4:	movt	r2, #3
   277c8:	mov	r0, r7
   277cc:	mov	r1, r9
   277d0:	bl	271ec <__flatcc_fb_create_basename@@Base>
   277d4:	str	r0, [r4, #520]	; 0x208
   277d8:	bl	2787c <__flatcc_fb_init_parser@@Base+0x1dc>
   277dc:	ldr	r0, [r8, #192]	; 0xc0
   277e0:	cmp	r0, #0
   277e4:	beq	277f4 <__flatcc_fb_init_parser@@Base+0x154>
   277e8:	str	r0, [r4, #476]	; 0x1dc
   277ec:	bl	14884 <strlen@plt>
   277f0:	str	r0, [r4, #480]	; 0x1e0
   277f4:	mov	r5, #0
   277f8:	mov	r0, r4
   277fc:	mov	r1, #0
   27800:	bl	278fc <__flatcc_fb_init_parser@@Base+0x25c>
   27804:	mov	r6, r0
   27808:	str	r0, [r4, #544]	; 0x220
   2780c:	ldr	r0, [r4, #412]	; 0x19c
   27810:	mov	r1, #0
   27814:	mov	r2, #0
   27818:	bl	26388 <fb_scope_table_find@@Base>
   2781c:	cmp	r6, r0
   27820:	moveq	r0, r5
   27824:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   27828:	movw	r0, #50347	; 0xc4ab
   2782c:	movt	r0, #4
   27830:	movw	r1, #50430	; 0xc4fe
   27834:	movt	r1, #4
   27838:	movw	r3, #50500	; 0xc544
   2783c:	movt	r3, #4
   27840:	movw	r2, #1331	; 0x533
   27844:	bl	14950 <__assert_fail@plt>
   27848:	movw	r1, #50229	; 0xc435
   2784c:	movt	r1, #4
   27850:	b	2785c <__flatcc_fb_init_parser@@Base+0x1bc>
   27854:	movw	r1, #50285	; 0xc46d
   27858:	movt	r1, #4
   2785c:	mov	r0, r4
   27860:	bl	27870 <__flatcc_fb_init_parser@@Base+0x1d0>
   27864:	mvn	r5, #0
   27868:	mov	r0, r5
   2786c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   27870:	mov	r2, r1
   27874:	mov	r1, #0
   27878:	b	28be4 <__flatcc_fb_clear_parser@@Base+0x134>
   2787c:	cmp	r0, #0
   27880:	bxne	lr
   27884:	push	{fp, lr}
   27888:	mov	fp, sp
   2788c:	movw	r0, #4264	; 0x10a8
   27890:	movt	r0, #6
   27894:	ldr	r3, [r0]
   27898:	movw	r0, #20071	; 0x4e67
   2789c:	movt	r0, #3
   278a0:	mov	r1, #34	; 0x22
   278a4:	mov	r2, #1
   278a8:	bl	14830 <fwrite@plt>
   278ac:	mov	r0, #1
   278b0:	bl	14878 <exit@plt>
   278b4:	push	{r4, r5, r6, r7, fp, lr}
   278b8:	add	fp, sp, #16
   278bc:	cmp	r1, #0
   278c0:	beq	278f8 <__flatcc_fb_init_parser@@Base+0x258>
   278c4:	mov	r4, r1
   278c8:	mov	r5, r0
   278cc:	mov	r6, #0
   278d0:	ldrb	r7, [r5, r6]
   278d4:	cmp	r7, #0
   278d8:	popeq	{r4, r5, r6, r7, fp, pc}
   278dc:	bl	14860 <__ctype_toupper_loc@plt>
   278e0:	ldr	r0, [r0]
   278e4:	ldr	r0, [r0, r7, lsl #2]
   278e8:	strb	r0, [r5, r6]
   278ec:	add	r6, r6, #1
   278f0:	cmp	r6, r4
   278f4:	bcc	278d0 <__flatcc_fb_init_parser@@Base+0x230>
   278f8:	pop	{r4, r5, r6, r7, fp, pc}
   278fc:	push	{r4, r5, r6, sl, fp, lr}
   27900:	add	fp, sp, #16
   27904:	mov	r5, r1
   27908:	mov	r4, r0
   2790c:	ldr	r0, [r0, #412]	; 0x19c
   27910:	mov	r2, #0
   27914:	bl	26388 <fb_scope_table_find@@Base>
   27918:	mov	r6, r0
   2791c:	cmp	r0, #0
   27920:	beq	2792c <__flatcc_fb_init_parser@@Base+0x28c>
   27924:	mov	r0, r6
   27928:	pop	{r4, r5, r6, sl, fp, pc}
   2792c:	mov	r0, r4
   27930:	mov	r1, #28
   27934:	bl	28c10 <__flatcc_fb_clear_parser@@Base+0x160>
   27938:	mov	r6, r0
   2793c:	str	r5, [r0]
   27940:	ldr	r0, [r4, #476]	; 0x1dc
   27944:	ldr	r1, [r4, #480]	; 0x1e0
   27948:	str	r0, [r6, #20]
   2794c:	str	r1, [r6, #24]
   27950:	ldr	r0, [r4, #412]	; 0x19c
   27954:	mov	r1, r6
   27958:	mov	r2, #1
   2795c:	bl	26340 <fb_scope_table_insert_item@@Base>
   27960:	mov	r0, r6
   27964:	pop	{r4, r5, r6, sl, fp, pc}

00027968 <__flatcc_fb_parse@@Base>:
   27968:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2796c:	add	fp, sp, #24
   27970:	mov	r5, r3
   27974:	mov	r6, r2
   27978:	mov	r7, r1
   2797c:	mov	r4, r0
   27980:	mov	r0, #1
   27984:	str	r1, [r4, #60]	; 0x3c
   27988:	str	r0, [r4, #64]	; 0x40
   2798c:	add	r0, r4, #68	; 0x44
   27990:	movw	r1, #50615	; 0xc5b7
   27994:	movt	r1, #4
   27998:	mov	r2, #9
   2799c:	bl	27a1c <__flatcc_fb_parse@@Base+0xb4>
   279a0:	add	r0, r4, #88	; 0x58
   279a4:	movw	r1, #56554	; 0xdcea
   279a8:	movt	r1, #4
   279ac:	movw	r8, #64554	; 0xfc2a
   279b0:	movt	r8, #65535	; 0xffff
   279b4:	mov	r2, r8
   279b8:	bl	27a1c <__flatcc_fb_parse@@Base+0xb4>
   279bc:	cmp	r5, #0
   279c0:	strne	r7, [r4, #16]
   279c4:	mov	r0, r7
   279c8:	mov	r1, r6
   279cc:	mov	r2, r4
   279d0:	bl	27a48 <__flatcc_fb_parse@@Base+0xe0>
   279d4:	ldr	r1, [r4, #20]
   279d8:	ldr	r2, [r4, #40]	; 0x28
   279dc:	ldr	r0, [r4, #216]	; 0xd8
   279e0:	str	r2, [r4, #24]
   279e4:	str	r1, [r4, #40]	; 0x28
   279e8:	bl	14848 <malloc@plt>
   279ec:	str	r0, [r4, #112]	; 0x70
   279f0:	bl	2787c <__flatcc_fb_init_parser@@Base+0x1dc>
   279f4:	ldr	r0, [r4, #40]	; 0x28
   279f8:	ldr	r0, [r0, #16]
   279fc:	add	r1, r8, #18
   27a00:	cmp	r0, r1
   27a04:	moveq	r0, r4
   27a08:	bleq	289c4 <__flatcc_fb_parse@@Base+0x105c>
   27a0c:	mov	r0, r4
   27a10:	bl	28a30 <__flatcc_fb_parse@@Base+0x10c8>
   27a14:	ldr	r0, [r4, #108]	; 0x6c
   27a18:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   27a1c:	push	{r4, sl, fp, lr}
   27a20:	add	fp, sp, #8
   27a24:	mov	r4, r0
   27a28:	str	r1, [r0]
   27a2c:	str	r2, [r0, #16]
   27a30:	mov	r0, r1
   27a34:	bl	14884 <strlen@plt>
   27a38:	mov	r1, #0
   27a3c:	stmib	r4, {r0, r1}
   27a40:	str	r1, [r4, #12]
   27a44:	pop	{r4, sl, fp, pc}
   27a48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27a4c:	add	fp, sp, #28
   27a50:	sub	sp, sp, #20
   27a54:	mov	r4, r2
   27a58:	mov	r5, r0
   27a5c:	add	r8, r0, r1
   27a60:	cmp	r1, #0
   27a64:	beq	28944 <__flatcc_fb_parse@@Base+0xfdc>
   27a68:	sub	r0, r8, #1
   27a6c:	str	r0, [sp, #16]
   27a70:	sub	r0, r8, #2
   27a74:	str	r0, [sp, #12]
   27a78:	movw	r0, #15934	; 0x3e3e
   27a7c:	movt	r0, #61	; 0x3d
   27a80:	add	r0, r0, #65536	; 0x10000
   27a84:	str	r0, [sp, #8]
   27a88:	mov	sl, #48	; 0x30
   27a8c:	movw	r9, #53167	; 0xcfaf
   27a90:	movt	r9, #4
   27a94:	mov	r6, r5
   27a98:	ldrb	r1, [r5]
   27a9c:	cmp	r1, #126	; 0x7e
   27aa0:	bhi	27e38 <__flatcc_fb_parse@@Base+0x4d0>
   27aa4:	add	r0, pc, #0
   27aa8:	ldr	pc, [r0, r1, lsl #2]
   27aac:	andeq	r8, r2, ip, ror #18
   27ab0:	andeq	r7, r2, r8, lsr lr
   27ab4:	andeq	r7, r2, r8, lsr lr
   27ab8:	andeq	r7, r2, r8, lsr lr
   27abc:	andeq	r7, r2, r8, lsr lr
   27ac0:	andeq	r7, r2, r8, lsr lr
   27ac4:	andeq	r7, r2, r8, lsr lr
   27ac8:	andeq	r7, r2, r8, lsr lr
   27acc:	andeq	r7, r2, r8, lsr lr
   27ad0:	andeq	r7, r2, ip, lsl #28
   27ad4:	andeq	r7, r2, r4, ror #28
   27ad8:	andeq	r7, r2, r8, lsr lr
   27adc:	andeq	r7, r2, r8, lsr lr
   27ae0:	andeq	r7, r2, ip, ror lr
   27ae4:	andeq	r7, r2, r8, lsr lr
   27ae8:	andeq	r7, r2, r8, lsr lr
   27aec:	andeq	r7, r2, r8, lsr lr
   27af0:	andeq	r7, r2, r8, lsr lr
   27af4:	andeq	r7, r2, r8, lsr lr
   27af8:	andeq	r7, r2, r8, lsr lr
   27afc:	andeq	r7, r2, r8, lsr lr
   27b00:	andeq	r7, r2, r8, lsr lr
   27b04:	andeq	r7, r2, r8, lsr lr
   27b08:	andeq	r7, r2, r8, lsr lr
   27b0c:	andeq	r7, r2, r8, lsr lr
   27b10:	andeq	r7, r2, r8, lsr lr
   27b14:	andeq	r7, r2, r8, lsr lr
   27b18:	andeq	r7, r2, r8, lsr lr
   27b1c:	andeq	r7, r2, r8, lsr lr
   27b20:	andeq	r7, r2, r8, lsr lr
   27b24:	andeq	r7, r2, r8, lsr lr
   27b28:	andeq	r7, r2, r8, lsr lr
   27b2c:	andeq	r7, r2, ip, lsl #28
   27b30:	andeq	r7, r2, ip, ror #27
   27b34:	andeq	r7, r2, r8, lsr #29
   27b38:	andeq	r7, r2, r8, lsr lr
   27b3c:	andeq	r7, r2, r8, lsr lr
   27b40:	andeq	r7, r2, ip, ror #27
   27b44:	strheq	r8, [r2], -r4
   27b48:	andeq	r7, r2, r8, lsr lr
   27b4c:	andeq	r7, r2, r8, lsr #26
   27b50:	andeq	r7, r2, r8, lsr #26
   27b54:	andeq	r8, r2, r4, ror #1
   27b58:	andeq	r8, r2, r0, lsl r1
   27b5c:	andeq	r7, r2, r8, lsr #26
   27b60:	andeq	r8, r2, r0, asr #2
   27b64:	andeq	r8, r2, r8, ror r1
   27b68:	muleq	r2, ip, r1
   27b6c:	strdeq	r8, [r2], -r4
   27b70:	andeq	r7, r2, r0, lsr sp
   27b74:	andeq	r7, r2, r0, lsr sp
   27b78:	andeq	r7, r2, r0, lsr sp
   27b7c:	andeq	r7, r2, r0, lsr sp
   27b80:	andeq	r7, r2, r0, lsr sp
   27b84:	andeq	r7, r2, r0, lsr sp
   27b88:	andeq	r7, r2, r0, lsr sp
   27b8c:	andeq	r7, r2, r0, lsr sp
   27b90:	andeq	r7, r2, r0, lsr sp
   27b94:	andeq	r8, r2, r4, ror #4
   27b98:	andeq	r7, r2, r8, lsr #26
   27b9c:	muleq	r2, r4, r2
   27ba0:	andeq	r8, r2, ip, asr #5
   27ba4:	strdeq	r8, [r2], -ip
   27ba8:	andeq	r7, r2, r8, lsr #26
   27bac:	andeq	r7, r2, r8, lsr lr
   27bb0:	andeq	r7, r2, r8, lsr #25
   27bb4:	andeq	r7, r2, r8, lsr #25
   27bb8:	andeq	r7, r2, r8, lsr #25
   27bbc:	andeq	r7, r2, r8, lsr #25
   27bc0:	andeq	r7, r2, r8, lsr #25
   27bc4:	andeq	r7, r2, r8, lsr #25
   27bc8:	andeq	r7, r2, r8, lsr #25
   27bcc:	andeq	r7, r2, r8, lsr #25
   27bd0:	andeq	r7, r2, r8, lsr #25
   27bd4:	andeq	r7, r2, r8, lsr #25
   27bd8:	andeq	r7, r2, r8, lsr #25
   27bdc:	andeq	r7, r2, r8, lsr #25
   27be0:	andeq	r7, r2, r8, lsr #25
   27be4:	andeq	r7, r2, r8, lsr #25
   27be8:	andeq	r7, r2, r8, lsr #25
   27bec:	andeq	r7, r2, r8, lsr #25
   27bf0:	andeq	r7, r2, r8, lsr #25
   27bf4:	andeq	r7, r2, r8, lsr #25
   27bf8:	andeq	r7, r2, r8, lsr #25
   27bfc:	andeq	r7, r2, r8, lsr #25
   27c00:	andeq	r7, r2, r8, lsr #25
   27c04:	andeq	r7, r2, r8, lsr #25
   27c08:	andeq	r7, r2, r8, lsr #25
   27c0c:	andeq	r7, r2, r8, lsr #25
   27c10:	andeq	r7, r2, r8, lsr #25
   27c14:	andeq	r7, r2, r8, lsr #25
   27c18:	andeq	r7, r2, r8, lsr #26
   27c1c:	andeq	r7, r2, r8, lsr #26
   27c20:	andeq	r7, r2, r8, lsr #26
   27c24:	andeq	r7, r2, ip, ror #27
   27c28:	andeq	r7, r2, r8, lsr #25
   27c2c:	andeq	r7, r2, r8, lsr lr
   27c30:	andeq	r7, r2, r8, lsr #25
   27c34:	andeq	r7, r2, r8, lsr #25
   27c38:	andeq	r7, r2, r8, lsr #25
   27c3c:	andeq	r7, r2, r8, lsr #25
   27c40:	andeq	r7, r2, r8, lsr #25
   27c44:	andeq	r7, r2, r8, lsr #25
   27c48:	andeq	r7, r2, r8, lsr #25
   27c4c:	andeq	r7, r2, r8, lsr #25
   27c50:	andeq	r7, r2, r8, lsr #25
   27c54:	andeq	r7, r2, r8, lsr #25
   27c58:	andeq	r7, r2, r8, lsr #25
   27c5c:	andeq	r7, r2, r8, lsr #25
   27c60:	andeq	r7, r2, r8, lsr #25
   27c64:	andeq	r7, r2, r8, lsr #25
   27c68:	andeq	r7, r2, r8, lsr #25
   27c6c:	andeq	r7, r2, r8, lsr #25
   27c70:	andeq	r7, r2, r8, lsr #25
   27c74:	andeq	r7, r2, r8, lsr #25
   27c78:	andeq	r7, r2, r8, lsr #25
   27c7c:	andeq	r7, r2, r8, lsr #25
   27c80:	andeq	r7, r2, r8, lsr #25
   27c84:	andeq	r7, r2, r8, lsr #25
   27c88:	andeq	r7, r2, r8, lsr #25
   27c8c:	andeq	r7, r2, r8, lsr #25
   27c90:	andeq	r7, r2, r8, lsr #25
   27c94:	andeq	r7, r2, r8, lsr #25
   27c98:	andeq	r7, r2, r8, lsr #26
   27c9c:	andeq	r8, r2, ip, lsr #6
   27ca0:	andeq	r7, r2, r8, lsr #26
   27ca4:	andeq	r7, r2, ip, ror #27
   27ca8:	add	r5, r6, #1
   27cac:	lsl	r0, r1, #8
   27cb0:	cmp	r5, r8
   27cb4:	beq	27cec <__flatcc_fb_parse@@Base+0x384>
   27cb8:	ldrb	r1, [r5]
   27cbc:	ldrb	r2, [r9, r1]
   27cc0:	cmp	r2, #0
   27cc4:	beq	27cec <__flatcc_fb_parse@@Base+0x384>
   27cc8:	orr	r0, r0, r1, lsl #16
   27ccc:	add	r1, r6, #2
   27cd0:	mov	r5, r1
   27cd4:	cmp	r8, r1
   27cd8:	movne	r1, r5
   27cdc:	ldrbne	r2, [r1], #1
   27ce0:	ldrbne	r2, [r9, r2]
   27ce4:	cmpne	r2, #0
   27ce8:	bne	27cd0 <__flatcc_fb_parse@@Base+0x368>
   27cec:	sub	r1, r5, r6
   27cf0:	uxtab	r1, sl, r1
   27cf4:	ldrb	r2, [r5, #-1]
   27cf8:	orr	r0, r0, r2, lsl #24
   27cfc:	orr	r0, r0, r1
   27d00:	mov	r1, r6
   27d04:	bl	28d58 <__flatcc_fb_clear_parser@@Base+0x2a8>
   27d08:	mov	r1, r0
   27d0c:	mov	r0, r4
   27d10:	mov	r2, r6
   27d14:	mov	r3, r5
   27d18:	bl	28c7c <__flatcc_fb_clear_parser@@Base+0x1cc>
   27d1c:	cmp	r5, r8
   27d20:	bne	27a94 <__flatcc_fb_parse@@Base+0x12c>
   27d24:	b	28948 <__flatcc_fb_parse@@Base+0xfe0>
   27d28:	add	r5, r6, #1
   27d2c:	b	27d0c <__flatcc_fb_parse@@Base+0x3a4>
   27d30:	mov	r5, r6
   27d34:	ldrb	r0, [r5, #1]!
   27d38:	sub	r1, r0, #48	; 0x30
   27d3c:	uxtb	r1, r1
   27d40:	cmp	r1, #10
   27d44:	bcc	27d34 <__flatcc_fb_parse@@Base+0x3cc>
   27d48:	cmp	r0, #46	; 0x2e
   27d4c:	mov	r0, r5
   27d50:	bne	27d7c <__flatcc_fb_parse@@Base+0x414>
   27d54:	add	r1, r5, #1
   27d58:	mov	r5, r1
   27d5c:	cmp	r8, r1
   27d60:	beq	27d7c <__flatcc_fb_parse@@Base+0x414>
   27d64:	mov	r1, r5
   27d68:	ldrb	r2, [r1], #1
   27d6c:	sub	r2, r2, #48	; 0x30
   27d70:	uxtb	r2, r2
   27d74:	cmp	r2, #10
   27d78:	bcc	27d58 <__flatcc_fb_parse@@Base+0x3f0>
   27d7c:	cmp	r5, r8
   27d80:	beq	27dd8 <__flatcc_fb_parse@@Base+0x470>
   27d84:	ldrb	r1, [r5]
   27d88:	orr	r1, r1, #32
   27d8c:	cmp	r1, #101	; 0x65
   27d90:	bne	27dd8 <__flatcc_fb_parse@@Base+0x470>
   27d94:	add	r1, r5, #1
   27d98:	cmp	r1, r8
   27d9c:	ldrbne	r2, [r1]
   27da0:	cmpne	r2, #43	; 0x2b
   27da4:	beq	27db0 <__flatcc_fb_parse@@Base+0x448>
   27da8:	cmp	r2, #45	; 0x2d
   27dac:	movne	r1, r5
   27db0:	add	r1, r1, #1
   27db4:	mov	r5, r1
   27db8:	cmp	r8, r1
   27dbc:	beq	27dd8 <__flatcc_fb_parse@@Base+0x470>
   27dc0:	mov	r1, r5
   27dc4:	ldrb	r2, [r1], #1
   27dc8:	sub	r2, r2, #48	; 0x30
   27dcc:	uxtb	r2, r2
   27dd0:	cmp	r2, #10
   27dd4:	bcc	27db4 <__flatcc_fb_parse@@Base+0x44c>
   27dd8:	cmp	r0, r5
   27ddc:	mov	r0, r4
   27de0:	moveq	r1, #10
   27de4:	movne	r1, #11
   27de8:	b	27d10 <__flatcc_fb_parse@@Base+0x3a8>
   27dec:	add	r5, r6, #1
   27df0:	cmp	r5, r8
   27df4:	beq	27d0c <__flatcc_fb_parse@@Base+0x3a4>
   27df8:	ldrb	r0, [r5]
   27dfc:	cmp	r0, #61	; 0x3d
   27e00:	orreq	r1, r1, #15616	; 0x3d00
   27e04:	addeq	r5, r6, #2
   27e08:	b	27d0c <__flatcc_fb_parse@@Base+0x3a4>
   27e0c:	add	r5, r6, #1
   27e10:	cmp	r5, r8
   27e14:	beq	27d1c <__flatcc_fb_parse@@Base+0x3b4>
   27e18:	ldrb	r0, [r5]
   27e1c:	cmp	r0, #32
   27e20:	cmpne	r0, #9
   27e24:	bne	27d1c <__flatcc_fb_parse@@Base+0x3b4>
   27e28:	add	r5, r5, #1
   27e2c:	cmp	r8, r5
   27e30:	bne	27e18 <__flatcc_fb_parse@@Base+0x4b0>
   27e34:	b	27d1c <__flatcc_fb_parse@@Base+0x3b4>
   27e38:	add	r5, r6, #1
   27e3c:	cmp	r1, #32
   27e40:	bcc	27e4c <__flatcc_fb_parse@@Base+0x4e4>
   27e44:	cmp	r1, #127	; 0x7f
   27e48:	bne	27e58 <__flatcc_fb_parse@@Base+0x4f0>
   27e4c:	cmp	r1, #9
   27e50:	cmpne	r1, #32
   27e54:	bne	285d4 <__flatcc_fb_parse@@Base+0xc6c>
   27e58:	mov	r0, r4
   27e5c:	mov	r1, #8
   27e60:	b	27d10 <__flatcc_fb_parse@@Base+0x3a8>
   27e64:	add	r5, r6, #1
   27e68:	cmp	r5, r8
   27e6c:	beq	27e94 <__flatcc_fb_parse@@Base+0x52c>
   27e70:	ldrb	r0, [r6, #1]
   27e74:	cmp	r0, #13
   27e78:	b	27e90 <__flatcc_fb_parse@@Base+0x528>
   27e7c:	add	r5, r6, #1
   27e80:	cmp	r5, r8
   27e84:	beq	27e94 <__flatcc_fb_parse@@Base+0x52c>
   27e88:	ldrb	r0, [r6, #1]
   27e8c:	cmp	r0, #10
   27e90:	addeq	r5, r6, #2
   27e94:	str	r5, [r4, #60]	; 0x3c
   27e98:	ldr	r0, [r4, #64]	; 0x40
   27e9c:	add	r0, r0, #1
   27ea0:	str	r0, [r4, #64]	; 0x40
   27ea4:	b	27d1c <__flatcc_fb_parse@@Base+0x3b4>
   27ea8:	add	r7, r6, #1
   27eac:	mov	r0, r4
   27eb0:	mov	r1, #19
   27eb4:	mov	r2, r6
   27eb8:	b	27ed8 <__flatcc_fb_parse@@Base+0x570>
   27ebc:	str	r7, [r4, #60]	; 0x3c
   27ec0:	ldr	r0, [r4, #64]	; 0x40
   27ec4:	add	r0, r0, #1
   27ec8:	str	r0, [r4, #64]	; 0x40
   27ecc:	mov	r0, r4
   27ed0:	mov	r1, #18
   27ed4:	mov	r2, sl
   27ed8:	mov	r3, r7
   27edc:	bl	28c7c <__flatcc_fb_clear_parser@@Base+0x1cc>
   27ee0:	mov	sl, r7
   27ee4:	b	27f0c <__flatcc_fb_parse@@Base+0x5a4>
   27ee8:	add	r3, r6, #1
   27eec:	mov	r0, r4
   27ef0:	mov	r1, #6
   27ef4:	mov	r2, r6
   27ef8:	bl	28c7c <__flatcc_fb_clear_parser@@Base+0x1cc>
   27efc:	add	r7, sl, #1
   27f00:	mov	sl, r7
   27f04:	b	27f0c <__flatcc_fb_parse@@Base+0x5a4>
   27f08:	add	r7, r5, #2
   27f0c:	mov	r5, r7
   27f10:	cmp	r8, r7
   27f14:	beq	27f28 <__flatcc_fb_parse@@Base+0x5c0>
   27f18:	ldrb	r0, [r5]
   27f1c:	cmp	r0, #34	; 0x22
   27f20:	cmpne	r0, #92	; 0x5c
   27f24:	bne	27f4c <__flatcc_fb_parse@@Base+0x5e4>
   27f28:	cmp	sl, r5
   27f2c:	beq	27f64 <__flatcc_fb_parse@@Base+0x5fc>
   27f30:	mov	r0, r4
   27f34:	mov	r1, #20
   27f38:	mov	r2, sl
   27f3c:	mov	r3, r5
   27f40:	bl	28c7c <__flatcc_fb_clear_parser@@Base+0x1cc>
   27f44:	mov	r6, r5
   27f48:	b	27f68 <__flatcc_fb_parse@@Base+0x600>
   27f4c:	cmp	r0, #32
   27f50:	bcc	27f28 <__flatcc_fb_parse@@Base+0x5c0>
   27f54:	add	r7, r5, #1
   27f58:	cmp	r0, #127	; 0x7f
   27f5c:	bne	27f0c <__flatcc_fb_parse@@Base+0x5a4>
   27f60:	b	27f28 <__flatcc_fb_parse@@Base+0x5c0>
   27f64:	mov	r6, sl
   27f68:	ldrb	r0, [r5]
   27f6c:	cmp	r0, #34	; 0x22
   27f70:	mov	sl, #48	; 0x30
   27f74:	beq	283b0 <__flatcc_fb_parse@@Base+0xa48>
   27f78:	cmp	r8, r5
   27f7c:	cmpne	r0, #0
   27f80:	beq	283c0 <__flatcc_fb_parse@@Base+0xa58>
   27f84:	cmp	r0, #92	; 0x5c
   27f88:	bne	28050 <__flatcc_fb_parse@@Base+0x6e8>
   27f8c:	add	sl, r5, #1
   27f90:	mov	r0, r4
   27f94:	mov	r1, #21
   27f98:	mov	r2, r6
   27f9c:	mov	r3, sl
   27fa0:	bl	28c7c <__flatcc_fb_clear_parser@@Base+0x1cc>
   27fa4:	ldr	r0, [sp, #16]
   27fa8:	cmp	r0, r5
   27fac:	beq	283d0 <__flatcc_fb_parse@@Base+0xa68>
   27fb0:	ldrb	r0, [sl]
   27fb4:	cmp	r0, #34	; 0x22
   27fb8:	bhi	28068 <__flatcc_fb_parse@@Base+0x700>
   27fbc:	add	r1, pc, #0
   27fc0:	ldr	pc, [r1, r0, lsl #2]
   27fc4:	ldrdeq	r8, [r2], -r0
   27fc8:	andeq	r8, r2, r0, ror r0
   27fcc:	andeq	r8, r2, r0, ror r0
   27fd0:	andeq	r8, r2, r0, ror r0
   27fd4:	andeq	r8, r2, r0, ror r0
   27fd8:	andeq	r8, r2, r0, ror r0
   27fdc:	andeq	r8, r2, r0, ror r0
   27fe0:	andeq	r8, r2, r0, ror r0
   27fe4:	andeq	r8, r2, r0, ror r0
   27fe8:	andeq	r8, r2, r0, ror r0
   27fec:	andeq	r8, r2, r8, ror r0
   27ff0:	andeq	r8, r2, r0, ror r0
   27ff4:	andeq	r8, r2, r0, ror r0
   27ff8:	muleq	r2, r4, r0
   27ffc:	andeq	r8, r2, r0, ror r0
   28000:	andeq	r8, r2, r0, ror r0
   28004:	andeq	r8, r2, r0, ror r0
   28008:	andeq	r8, r2, r0, ror r0
   2800c:	andeq	r8, r2, r0, ror r0
   28010:	andeq	r8, r2, r0, ror r0
   28014:	andeq	r8, r2, r0, ror r0
   28018:	andeq	r8, r2, r0, ror r0
   2801c:	andeq	r8, r2, r0, ror r0
   28020:	andeq	r8, r2, r0, ror r0
   28024:	andeq	r8, r2, r0, ror r0
   28028:	andeq	r8, r2, r0, ror r0
   2802c:	andeq	r8, r2, r0, ror r0
   28030:	andeq	r8, r2, r0, ror r0
   28034:	andeq	r8, r2, r0, ror r0
   28038:	andeq	r8, r2, r0, ror r0
   2803c:	andeq	r8, r2, r0, ror r0
   28040:	andeq	r8, r2, r0, ror r0
   28044:	andeq	r8, r2, r0, ror r0
   28048:	andeq	r8, r2, r0, ror r0
   2804c:	andeq	r7, r2, r8, lsl #30
   28050:	ldrb	r0, [r5]
   28054:	mov	sl, r5
   28058:	cmp	r0, #13
   2805c:	cmpne	r0, #10
   28060:	bne	27ee8 <__flatcc_fb_parse@@Base+0x580>
   28064:	b	284e4 <__flatcc_fb_parse@@Base+0xb7c>
   28068:	cmp	r0, #92	; 0x5c
   2806c:	beq	27f08 <__flatcc_fb_parse@@Base+0x5a0>
   28070:	mov	r6, sl
   28074:	b	28058 <__flatcc_fb_parse@@Base+0x6f0>
   28078:	add	r7, r5, #2
   2807c:	ldr	r0, [sp, #12]
   28080:	cmp	r0, r5
   28084:	beq	27ebc <__flatcc_fb_parse@@Base+0x554>
   28088:	ldrb	r0, [r5, #2]
   2808c:	cmp	r0, #13
   28090:	b	280ac <__flatcc_fb_parse@@Base+0x744>
   28094:	add	r7, r5, #2
   28098:	ldr	r0, [sp, #12]
   2809c:	cmp	r0, r5
   280a0:	beq	27ebc <__flatcc_fb_parse@@Base+0x554>
   280a4:	ldrb	r0, [r5, #2]
   280a8:	cmp	r0, #10
   280ac:	addeq	r7, r5, #3
   280b0:	b	27ebc <__flatcc_fb_parse@@Base+0x554>
   280b4:	add	r5, r6, #1
   280b8:	cmp	r5, r8
   280bc:	beq	2840c <__flatcc_fb_parse@@Base+0xaa4>
   280c0:	ldrb	r0, [r5]
   280c4:	cmp	r0, #38	; 0x26
   280c8:	beq	283f4 <__flatcc_fb_parse@@Base+0xa8c>
   280cc:	cmp	r0, #61	; 0x3d
   280d0:	bne	2840c <__flatcc_fb_parse@@Base+0xaa4>
   280d4:	add	r5, r6, #2
   280d8:	mov	r0, r4
   280dc:	movw	r1, #15654	; 0x3d26
   280e0:	b	27d10 <__flatcc_fb_parse@@Base+0x3a8>
   280e4:	add	r5, r6, #1
   280e8:	cmp	r5, r8
   280ec:	beq	2835c <__flatcc_fb_parse@@Base+0x9f4>
   280f0:	ldrb	r0, [r5]
   280f4:	cmp	r0, #42	; 0x2a
   280f8:	beq	28418 <__flatcc_fb_parse@@Base+0xab0>
   280fc:	cmp	r0, #61	; 0x3d
   28100:	bne	2835c <__flatcc_fb_parse@@Base+0x9f4>
   28104:	mov	r0, r4
   28108:	movw	r1, #15658	; 0x3d2a
   2810c:	b	27d10 <__flatcc_fb_parse@@Base+0x3a8>
   28110:	add	r5, r6, #1
   28114:	cmp	r5, r8
   28118:	beq	28368 <__flatcc_fb_parse@@Base+0xa00>
   2811c:	ldrb	r0, [r5]
   28120:	cmp	r0, #43	; 0x2b
   28124:	beq	28424 <__flatcc_fb_parse@@Base+0xabc>
   28128:	cmp	r0, #61	; 0x3d
   2812c:	bne	28368 <__flatcc_fb_parse@@Base+0xa00>
   28130:	add	r5, r6, #2
   28134:	mov	r0, r4
   28138:	movw	r1, #15659	; 0x3d2b
   2813c:	b	27d10 <__flatcc_fb_parse@@Base+0x3a8>
   28140:	add	r5, r6, #1
   28144:	cmp	r5, r8
   28148:	beq	2838c <__flatcc_fb_parse@@Base+0xa24>
   2814c:	ldrb	r0, [r5]
   28150:	cmp	r0, #45	; 0x2d
   28154:	beq	28504 <__flatcc_fb_parse@@Base+0xb9c>
   28158:	cmp	r0, #62	; 0x3e
   2815c:	beq	28514 <__flatcc_fb_parse@@Base+0xbac>
   28160:	cmp	r0, #61	; 0x3d
   28164:	bne	2838c <__flatcc_fb_parse@@Base+0xa24>
   28168:	add	r5, r6, #2
   2816c:	mov	r0, r4
   28170:	movw	r1, #15661	; 0x3d2d
   28174:	b	27d10 <__flatcc_fb_parse@@Base+0x3a8>
   28178:	add	r5, r6, #1
   2817c:	cmp	r5, r8
   28180:	beq	28620 <__flatcc_fb_parse@@Base+0xcb8>
   28184:	ldrb	r0, [r5]
   28188:	sub	r1, r0, #48	; 0x30
   2818c:	cmp	r1, #10
   28190:	bcs	285ec <__flatcc_fb_parse@@Base+0xc84>
   28194:	mov	r0, r6
   28198:	b	27d54 <__flatcc_fb_parse@@Base+0x3ec>
   2819c:	add	r5, r6, #1
   281a0:	cmp	r5, r8
   281a4:	beq	28398 <__flatcc_fb_parse@@Base+0xa30>
   281a8:	ldrb	r0, [r5]
   281ac:	cmp	r0, #42	; 0x2a
   281b0:	beq	28524 <__flatcc_fb_parse@@Base+0xbbc>
   281b4:	cmp	r0, #61	; 0x3d
   281b8:	beq	28554 <__flatcc_fb_parse@@Base+0xbec>
   281bc:	cmp	r0, #47	; 0x2f
   281c0:	bne	28398 <__flatcc_fb_parse@@Base+0xa30>
   281c4:	add	r0, r6, #2
   281c8:	cmp	r0, r8
   281cc:	beq	28638 <__flatcc_fb_parse@@Base+0xcd0>
   281d0:	ldrb	r1, [r0]
   281d4:	sub	r2, r1, #33	; 0x21
   281d8:	clz	r2, r2
   281dc:	lsr	r2, r2, #5
   281e0:	sub	r1, r1, #47	; 0x2f
   281e4:	clz	r1, r1
   281e8:	lsr	r1, r1, #5
   281ec:	orr	r1, r1, r2
   281f0:	b	2863c <__flatcc_fb_parse@@Base+0xcd4>
   281f4:	add	r0, r6, #1
   281f8:	cmp	r0, r8
   281fc:	mov	r5, r6
   28200:	beq	27d34 <__flatcc_fb_parse@@Base+0x3cc>
   28204:	ldrb	r0, [r0]
   28208:	orr	r0, r0, #32
   2820c:	cmp	r0, #120	; 0x78
   28210:	mov	r5, r6
   28214:	bne	27d34 <__flatcc_fb_parse@@Base+0x3cc>
   28218:	add	r5, r6, #2
   2821c:	cmp	r5, r8
   28220:	beq	28258 <__flatcc_fb_parse@@Base+0x8f0>
   28224:	ldrb	r0, [r5]
   28228:	sub	r1, r0, #48	; 0x30
   2822c:	uxtb	r1, r1
   28230:	cmp	r1, #10
   28234:	bcc	2824c <__flatcc_fb_parse@@Base+0x8e4>
   28238:	orr	r0, r0, #32
   2823c:	sub	r0, r0, #97	; 0x61
   28240:	uxtb	r0, r0
   28244:	cmp	r0, #5
   28248:	bhi	28258 <__flatcc_fb_parse@@Base+0x8f0>
   2824c:	add	r5, r5, #1
   28250:	cmp	r8, r5
   28254:	bne	28224 <__flatcc_fb_parse@@Base+0x8bc>
   28258:	mov	r0, r4
   2825c:	mov	r1, #14
   28260:	b	27d10 <__flatcc_fb_parse@@Base+0x3a8>
   28264:	add	r5, r6, #1
   28268:	cmp	r5, r8
   2826c:	beq	28374 <__flatcc_fb_parse@@Base+0xa0c>
   28270:	ldrb	r0, [r5]
   28274:	cmp	r0, #58	; 0x3a
   28278:	beq	28434 <__flatcc_fb_parse@@Base+0xacc>
   2827c:	cmp	r0, #61	; 0x3d
   28280:	bne	28374 <__flatcc_fb_parse@@Base+0xa0c>
   28284:	add	r5, r6, #2
   28288:	mov	r0, r4
   2828c:	movw	r1, #15674	; 0x3d3a
   28290:	b	27d10 <__flatcc_fb_parse@@Base+0x3a8>
   28294:	add	r5, r6, #1
   28298:	cmp	r5, r8
   2829c:	beq	283a4 <__flatcc_fb_parse@@Base+0xa3c>
   282a0:	ldrb	r0, [r5]
   282a4:	cmp	r0, #61	; 0x3d
   282a8:	beq	28564 <__flatcc_fb_parse@@Base+0xbfc>
   282ac:	cmp	r0, #60	; 0x3c
   282b0:	beq	28574 <__flatcc_fb_parse@@Base+0xc0c>
   282b4:	cmp	r0, #45	; 0x2d
   282b8:	bne	283a4 <__flatcc_fb_parse@@Base+0xa3c>
   282bc:	add	r5, r6, #2
   282c0:	mov	r0, r4
   282c4:	movw	r1, #11580	; 0x2d3c
   282c8:	b	27d10 <__flatcc_fb_parse@@Base+0x3a8>
   282cc:	add	r5, r6, #1
   282d0:	cmp	r5, r8
   282d4:	beq	285c8 <__flatcc_fb_parse@@Base+0xc60>
   282d8:	ldrb	r0, [r5]
   282dc:	cmp	r0, #61	; 0x3d
   282e0:	beq	28460 <__flatcc_fb_parse@@Base+0xaf8>
   282e4:	cmp	r0, #62	; 0x3e
   282e8:	bne	285c8 <__flatcc_fb_parse@@Base+0xc60>
   282ec:	add	r5, r6, #2
   282f0:	mov	r0, r4
   282f4:	movw	r1, #15933	; 0x3e3d
   282f8:	b	27d10 <__flatcc_fb_parse@@Base+0x3a8>
   282fc:	add	r5, r6, #1
   28300:	cmp	r5, r8
   28304:	beq	28380 <__flatcc_fb_parse@@Base+0xa18>
   28308:	ldrb	r0, [r5]
   2830c:	cmp	r0, #62	; 0x3e
   28310:	beq	2848c <__flatcc_fb_parse@@Base+0xb24>
   28314:	cmp	r0, #61	; 0x3d
   28318:	bne	28380 <__flatcc_fb_parse@@Base+0xa18>
   2831c:	add	r5, r6, #2
   28320:	mov	r0, r4
   28324:	movw	r1, #15678	; 0x3d3e
   28328:	b	27d10 <__flatcc_fb_parse@@Base+0x3a8>
   2832c:	add	r5, r6, #1
   28330:	cmp	r5, r8
   28334:	beq	284d8 <__flatcc_fb_parse@@Base+0xb70>
   28338:	ldrb	r0, [r5]
   2833c:	cmp	r0, #124	; 0x7c
   28340:	beq	284c0 <__flatcc_fb_parse@@Base+0xb58>
   28344:	cmp	r0, #61	; 0x3d
   28348:	bne	284d8 <__flatcc_fb_parse@@Base+0xb70>
   2834c:	add	r5, r6, #2
   28350:	mov	r0, r4
   28354:	movw	r1, #15740	; 0x3d7c
   28358:	b	27d10 <__flatcc_fb_parse@@Base+0x3a8>
   2835c:	mov	r0, r4
   28360:	mov	r1, #42	; 0x2a
   28364:	b	27d10 <__flatcc_fb_parse@@Base+0x3a8>
   28368:	mov	r0, r4
   2836c:	mov	r1, #43	; 0x2b
   28370:	b	27d10 <__flatcc_fb_parse@@Base+0x3a8>
   28374:	mov	r0, r4
   28378:	mov	r1, #58	; 0x3a
   2837c:	b	27d10 <__flatcc_fb_parse@@Base+0x3a8>
   28380:	mov	r0, r4
   28384:	mov	r1, #62	; 0x3e
   28388:	b	27d10 <__flatcc_fb_parse@@Base+0x3a8>
   2838c:	mov	r0, r4
   28390:	mov	r1, #45	; 0x2d
   28394:	b	27d10 <__flatcc_fb_parse@@Base+0x3a8>
   28398:	mov	r0, r4
   2839c:	mov	r1, #47	; 0x2f
   283a0:	b	27d10 <__flatcc_fb_parse@@Base+0x3a8>
   283a4:	mov	r0, r4
   283a8:	mov	r1, #60	; 0x3c
   283ac:	b	27d10 <__flatcc_fb_parse@@Base+0x3a8>
   283b0:	add	r5, r5, #1
   283b4:	mov	r0, r4
   283b8:	mov	r1, #22
   283bc:	b	27d10 <__flatcc_fb_parse@@Base+0x3a8>
   283c0:	mov	r0, r4
   283c4:	mov	r1, #23
   283c8:	mov	r2, r5
   283cc:	b	27d14 <__flatcc_fb_parse@@Base+0x3ac>
   283d0:	add	r5, r5, #1
   283d4:	mov	r0, r4
   283d8:	mov	r1, #23
   283dc:	mov	r2, r5
   283e0:	mov	r3, r5
   283e4:	bl	28c7c <__flatcc_fb_clear_parser@@Base+0x1cc>
   283e8:	mov	r6, r5
   283ec:	mov	sl, #48	; 0x30
   283f0:	b	27d1c <__flatcc_fb_parse@@Base+0x3b4>
   283f4:	add	r5, r6, #2
   283f8:	mov	r0, r4
   283fc:	movw	r1, #9766	; 0x2626
   28400:	mov	r2, r6
   28404:	mov	r3, r5
   28408:	bl	28c7c <__flatcc_fb_clear_parser@@Base+0x1cc>
   2840c:	mov	r0, r4
   28410:	mov	r1, #38	; 0x26
   28414:	b	27d10 <__flatcc_fb_parse@@Base+0x3a8>
   28418:	mov	r0, r4
   2841c:	movw	r1, #10794	; 0x2a2a
   28420:	b	27d10 <__flatcc_fb_parse@@Base+0x3a8>
   28424:	add	r5, r6, #2
   28428:	mov	r0, r4
   2842c:	movw	r1, #11051	; 0x2b2b
   28430:	b	27d10 <__flatcc_fb_parse@@Base+0x3a8>
   28434:	add	r5, r6, #2
   28438:	cmp	r5, r8
   2843c:	beq	285a8 <__flatcc_fb_parse@@Base+0xc40>
   28440:	ldrb	r0, [r5]
   28444:	cmp	r0, #61	; 0x3d
   28448:	bne	285a8 <__flatcc_fb_parse@@Base+0xc40>
   2844c:	add	r5, r6, #3
   28450:	mov	r0, r4
   28454:	movw	r1, #14906	; 0x3a3a
   28458:	movt	r1, #61	; 0x3d
   2845c:	b	27d10 <__flatcc_fb_parse@@Base+0x3a8>
   28460:	add	r5, r6, #2
   28464:	cmp	r5, r8
   28468:	beq	285b4 <__flatcc_fb_parse@@Base+0xc4c>
   2846c:	ldrb	r0, [r5]
   28470:	cmp	r0, #61	; 0x3d
   28474:	bne	285b4 <__flatcc_fb_parse@@Base+0xc4c>
   28478:	add	r5, r6, #3
   2847c:	mov	r0, r4
   28480:	movw	r1, #15677	; 0x3d3d
   28484:	movt	r1, #61	; 0x3d
   28488:	b	27d10 <__flatcc_fb_parse@@Base+0x3a8>
   2848c:	add	r5, r6, #2
   28490:	cmp	r5, r8
   28494:	beq	285e0 <__flatcc_fb_parse@@Base+0xc78>
   28498:	ldrb	r0, [r5]
   2849c:	cmp	r0, #62	; 0x3e
   284a0:	beq	288b0 <__flatcc_fb_parse@@Base+0xf48>
   284a4:	cmp	r0, #61	; 0x3d
   284a8:	bne	285e0 <__flatcc_fb_parse@@Base+0xc78>
   284ac:	add	r5, r6, #3
   284b0:	mov	r0, r4
   284b4:	movw	r1, #15934	; 0x3e3e
   284b8:	movt	r1, #61	; 0x3d
   284bc:	b	27d10 <__flatcc_fb_parse@@Base+0x3a8>
   284c0:	add	r5, r6, #2
   284c4:	mov	r0, r4
   284c8:	movw	r1, #31868	; 0x7c7c
   284cc:	mov	r2, r6
   284d0:	mov	r3, r5
   284d4:	bl	28c7c <__flatcc_fb_clear_parser@@Base+0x1cc>
   284d8:	mov	r0, r4
   284dc:	mov	r1, #124	; 0x7c
   284e0:	b	27d10 <__flatcc_fb_parse@@Base+0x3a8>
   284e4:	mov	r0, r4
   284e8:	mov	r1, #23
   284ec:	mov	r2, sl
   284f0:	mov	r3, sl
   284f4:	bl	28c7c <__flatcc_fb_clear_parser@@Base+0x1cc>
   284f8:	mov	r5, sl
   284fc:	mov	sl, #48	; 0x30
   28500:	b	27d1c <__flatcc_fb_parse@@Base+0x3b4>
   28504:	add	r5, r6, #2
   28508:	mov	r0, r4
   2850c:	movw	r1, #11565	; 0x2d2d
   28510:	b	27d10 <__flatcc_fb_parse@@Base+0x3a8>
   28514:	add	r5, r6, #2
   28518:	mov	r0, r4
   2851c:	movw	r1, #15917	; 0x3e2d
   28520:	b	27d10 <__flatcc_fb_parse@@Base+0x3a8>
   28524:	add	r0, r6, #2
   28528:	cmp	r0, r8
   2852c:	beq	2873c <__flatcc_fb_parse@@Base+0xdd4>
   28530:	ldrb	r1, [r0]
   28534:	sub	r2, r1, #33	; 0x21
   28538:	clz	r2, r2
   2853c:	lsr	r2, r2, #5
   28540:	sub	r1, r1, #42	; 0x2a
   28544:	clz	r1, r1
   28548:	lsr	r1, r1, #5
   2854c:	orr	r1, r1, r2
   28550:	b	28740 <__flatcc_fb_parse@@Base+0xdd8>
   28554:	add	r5, r6, #2
   28558:	mov	r0, r4
   2855c:	movw	r1, #15663	; 0x3d2f
   28560:	b	27d10 <__flatcc_fb_parse@@Base+0x3a8>
   28564:	add	r5, r6, #2
   28568:	mov	r0, r4
   2856c:	movw	r1, #15676	; 0x3d3c
   28570:	b	27d10 <__flatcc_fb_parse@@Base+0x3a8>
   28574:	add	r5, r6, #2
   28578:	cmp	r5, r8
   2857c:	beq	2862c <__flatcc_fb_parse@@Base+0xcc4>
   28580:	ldrb	r0, [r5]
   28584:	cmp	r0, #60	; 0x3c
   28588:	beq	288e8 <__flatcc_fb_parse@@Base+0xf80>
   2858c:	cmp	r0, #61	; 0x3d
   28590:	bne	2862c <__flatcc_fb_parse@@Base+0xcc4>
   28594:	add	r5, r6, #3
   28598:	mov	r0, r4
   2859c:	movw	r1, #15420	; 0x3c3c
   285a0:	movt	r1, #61	; 0x3d
   285a4:	b	27d10 <__flatcc_fb_parse@@Base+0x3a8>
   285a8:	mov	r0, r4
   285ac:	movw	r1, #14906	; 0x3a3a
   285b0:	b	27d10 <__flatcc_fb_parse@@Base+0x3a8>
   285b4:	mov	r0, r4
   285b8:	movw	r1, #15677	; 0x3d3d
   285bc:	mov	r2, r6
   285c0:	mov	r3, r5
   285c4:	bl	28c7c <__flatcc_fb_clear_parser@@Base+0x1cc>
   285c8:	mov	r0, r4
   285cc:	mov	r1, #61	; 0x3d
   285d0:	b	27d10 <__flatcc_fb_parse@@Base+0x3a8>
   285d4:	mov	r0, r4
   285d8:	mov	r1, #5
   285dc:	b	27d10 <__flatcc_fb_parse@@Base+0x3a8>
   285e0:	mov	r0, r4
   285e4:	movw	r1, #15934	; 0x3e3e
   285e8:	b	27d10 <__flatcc_fb_parse@@Base+0x3a8>
   285ec:	cmp	r0, #46	; 0x2e
   285f0:	bne	28620 <__flatcc_fb_parse@@Base+0xcb8>
   285f4:	add	r5, r6, #2
   285f8:	cmp	r5, r8
   285fc:	beq	288dc <__flatcc_fb_parse@@Base+0xf74>
   28600:	ldrb	r0, [r5]
   28604:	cmp	r0, #46	; 0x2e
   28608:	bne	288dc <__flatcc_fb_parse@@Base+0xf74>
   2860c:	add	r5, r6, #3
   28610:	mov	r0, r4
   28614:	movw	r1, #11822	; 0x2e2e
   28618:	movt	r1, #46	; 0x2e
   2861c:	b	27d10 <__flatcc_fb_parse@@Base+0x3a8>
   28620:	mov	r0, r4
   28624:	mov	r1, #46	; 0x2e
   28628:	b	27d10 <__flatcc_fb_parse@@Base+0x3a8>
   2862c:	mov	r0, r4
   28630:	movw	r1, #15420	; 0x3c3c
   28634:	b	27d10 <__flatcc_fb_parse@@Base+0x3a8>
   28638:	mov	r1, #0
   2863c:	add	r5, r0, r1
   28640:	sub	r0, r5, r6
   28644:	sub	r0, r0, #3
   28648:	clz	r0, r0
   2864c:	lsr	r0, r0, #5
   28650:	str	r0, [r4, #32]
   28654:	str	r4, [sp, #4]
   28658:	mov	r0, r4
   2865c:	mov	r1, r5
   28660:	mov	r2, r5
   28664:	bl	28d38 <__flatcc_fb_clear_parser@@Base+0x288>
   28668:	b	28694 <__flatcc_fb_parse@@Base+0xd2c>
   2866c:	add	r2, r6, #1
   28670:	ldr	r0, [sp, #4]
   28674:	mov	r1, r6
   28678:	bl	28d38 <__flatcc_fb_clear_parser@@Base+0x288>
   2867c:	b	28694 <__flatcc_fb_parse@@Base+0xd2c>
   28680:	add	r3, r6, #1
   28684:	ldr	r0, [sp, #4]
   28688:	mov	r1, #7
   2868c:	mov	r2, r6
   28690:	bl	28c7c <__flatcc_fb_clear_parser@@Base+0x1cc>
   28694:	sub	r0, r8, r5
   28698:	mov	r1, #0
   2869c:	mov	r4, r1
   286a0:	adds	r7, r0, r1
   286a4:	beq	286c0 <__flatcc_fb_parse@@Base+0xd58>
   286a8:	ldrb	r2, [r5, -r4]
   286ac:	cmp	r2, #32
   286b0:	bcc	286c0 <__flatcc_fb_parse@@Base+0xd58>
   286b4:	sub	r1, r4, #1
   286b8:	cmp	r2, #127	; 0x7f
   286bc:	bne	2869c <__flatcc_fb_parse@@Base+0xd34>
   286c0:	sub	sl, r5, r4
   286c4:	cmp	r4, #0
   286c8:	mov	r6, r5
   286cc:	beq	286e4 <__flatcc_fb_parse@@Base+0xd7c>
   286d0:	ldr	r0, [sp, #4]
   286d4:	mov	r1, r5
   286d8:	mov	r2, sl
   286dc:	bl	28d38 <__flatcc_fb_clear_parser@@Base+0x288>
   286e0:	mov	r6, sl
   286e4:	cmp	r7, #0
   286e8:	beq	2899c <__flatcc_fb_parse@@Base+0x1034>
   286ec:	ldrb	r0, [sl]
   286f0:	cmp	r0, #13
   286f4:	cmpne	r0, #10
   286f8:	beq	28720 <__flatcc_fb_parse@@Base+0xdb8>
   286fc:	cmp	r0, #0
   28700:	beq	2899c <__flatcc_fb_parse@@Base+0x1034>
   28704:	sub	r0, r5, r4
   28708:	add	r5, r0, #1
   2870c:	ldrb	r0, [r6]
   28710:	cmp	r0, #32
   28714:	cmpne	r0, #9
   28718:	beq	2866c <__flatcc_fb_parse@@Base+0xd04>
   2871c:	b	28680 <__flatcc_fb_parse@@Base+0xd18>
   28720:	ldr	r0, [sp, #4]
   28724:	mov	r1, #0
   28728:	str	r1, [r0, #32]
   2872c:	sub	r5, r5, r4
   28730:	mov	r4, r0
   28734:	mov	sl, #48	; 0x30
   28738:	b	27d1c <__flatcc_fb_parse@@Base+0x3b4>
   2873c:	mov	r1, #0
   28740:	add	r7, r0, r1
   28744:	sub	r0, r7, r6
   28748:	sub	r0, r0, #3
   2874c:	clz	r0, r0
   28750:	lsr	r0, r0, #5
   28754:	str	r0, [r4, #32]
   28758:	mov	r0, r4
   2875c:	mov	r1, r7
   28760:	mov	r2, r7
   28764:	bl	28d38 <__flatcc_fb_clear_parser@@Base+0x288>
   28768:	b	28794 <__flatcc_fb_parse@@Base+0xe2c>
   2876c:	str	r7, [r4, #60]	; 0x3c
   28770:	ldr	r0, [r4, #64]	; 0x40
   28774:	add	r0, r0, #1
   28778:	str	r0, [r4, #64]	; 0x40
   2877c:	b	28794 <__flatcc_fb_parse@@Base+0xe2c>
   28780:	add	r3, r6, #1
   28784:	mov	r0, r4
   28788:	mov	r1, #7
   2878c:	mov	r2, r6
   28790:	bl	28c7c <__flatcc_fb_clear_parser@@Base+0x1cc>
   28794:	cmp	r7, r8
   28798:	mov	r5, r7
   2879c:	beq	287e8 <__flatcc_fb_parse@@Base+0xe80>
   287a0:	sub	r1, r7, #1
   287a4:	mov	r5, r7
   287a8:	mov	r0, r5
   287ac:	ldrb	r2, [r5]
   287b0:	cmp	r2, #32
   287b4:	bcc	28810 <__flatcc_fb_parse@@Base+0xea8>
   287b8:	cmp	r2, #127	; 0x7f
   287bc:	beq	28810 <__flatcc_fb_parse@@Base+0xea8>
   287c0:	cmp	r2, #47	; 0x2f
   287c4:	bne	287d8 <__flatcc_fb_parse@@Base+0xe70>
   287c8:	ldrb	r2, [r0, #-1]
   287cc:	cmp	r2, #42	; 0x2a
   287d0:	mov	r5, r1
   287d4:	beq	287e8 <__flatcc_fb_parse@@Base+0xe80>
   287d8:	add	r5, r0, #1
   287dc:	cmp	r8, r5
   287e0:	mov	r1, r0
   287e4:	bne	287a8 <__flatcc_fb_parse@@Base+0xe40>
   287e8:	cmp	r7, r5
   287ec:	beq	2881c <__flatcc_fb_parse@@Base+0xeb4>
   287f0:	mov	r0, r4
   287f4:	mov	r1, r7
   287f8:	mov	r2, r5
   287fc:	bl	28d38 <__flatcc_fb_clear_parser@@Base+0x288>
   28800:	mov	r6, r5
   28804:	cmp	r5, r8
   28808:	bne	28828 <__flatcc_fb_parse@@Base+0xec0>
   2880c:	b	289a4 <__flatcc_fb_parse@@Base+0x103c>
   28810:	mov	r5, r0
   28814:	cmp	r7, r5
   28818:	bne	287f0 <__flatcc_fb_parse@@Base+0xe88>
   2881c:	mov	r6, r7
   28820:	cmp	r5, r8
   28824:	beq	289a4 <__flatcc_fb_parse@@Base+0x103c>
   28828:	ldrb	r0, [r5]
   2882c:	cmp	r0, #10
   28830:	beq	2887c <__flatcc_fb_parse@@Base+0xf14>
   28834:	cmp	r0, #13
   28838:	beq	28894 <__flatcc_fb_parse@@Base+0xf2c>
   2883c:	cmp	r0, #0
   28840:	beq	289a4 <__flatcc_fb_parse@@Base+0x103c>
   28844:	cmp	r0, #32
   28848:	bcc	28854 <__flatcc_fb_parse@@Base+0xeec>
   2884c:	cmp	r0, #127	; 0x7f
   28850:	bne	28930 <__flatcc_fb_parse@@Base+0xfc8>
   28854:	add	r7, r5, #1
   28858:	ldrb	r0, [r6]
   2885c:	cmp	r0, #32
   28860:	cmpne	r0, #9
   28864:	bne	28780 <__flatcc_fb_parse@@Base+0xe18>
   28868:	add	r2, r6, #1
   2886c:	mov	r0, r4
   28870:	mov	r1, r6
   28874:	bl	28d38 <__flatcc_fb_clear_parser@@Base+0x288>
   28878:	b	28794 <__flatcc_fb_parse@@Base+0xe2c>
   2887c:	add	r7, r5, #1
   28880:	cmp	r7, r8
   28884:	beq	2876c <__flatcc_fb_parse@@Base+0xe04>
   28888:	ldrb	r0, [r5, #1]
   2888c:	cmp	r0, #13
   28890:	b	288a8 <__flatcc_fb_parse@@Base+0xf40>
   28894:	add	r7, r5, #1
   28898:	cmp	r7, r8
   2889c:	beq	2876c <__flatcc_fb_parse@@Base+0xe04>
   288a0:	ldrb	r0, [r5, #1]
   288a4:	cmp	r0, #10
   288a8:	addeq	r7, r5, #2
   288ac:	b	2876c <__flatcc_fb_parse@@Base+0xe04>
   288b0:	add	r5, r6, #3
   288b4:	cmp	r5, r8
   288b8:	beq	28914 <__flatcc_fb_parse@@Base+0xfac>
   288bc:	ldrb	r0, [r5]
   288c0:	cmp	r0, #61	; 0x3d
   288c4:	bne	28914 <__flatcc_fb_parse@@Base+0xfac>
   288c8:	add	r5, r6, #4
   288cc:	mov	r0, r4
   288d0:	movw	r1, #15934	; 0x3e3e
   288d4:	movt	r1, #15678	; 0x3d3e
   288d8:	b	27d10 <__flatcc_fb_parse@@Base+0x3a8>
   288dc:	mov	r0, r4
   288e0:	movw	r1, #11822	; 0x2e2e
   288e4:	b	27d10 <__flatcc_fb_parse@@Base+0x3a8>
   288e8:	add	r5, r6, #3
   288ec:	cmp	r5, r8
   288f0:	beq	28920 <__flatcc_fb_parse@@Base+0xfb8>
   288f4:	ldrb	r0, [r5]
   288f8:	cmp	r0, #61	; 0x3d
   288fc:	bne	28920 <__flatcc_fb_parse@@Base+0xfb8>
   28900:	add	r5, r6, #4
   28904:	mov	r0, r4
   28908:	movw	r1, #15420	; 0x3c3c
   2890c:	movt	r1, #15676	; 0x3d3c
   28910:	b	27d10 <__flatcc_fb_parse@@Base+0x3a8>
   28914:	mov	r0, r4
   28918:	ldr	r1, [sp, #8]
   2891c:	b	27d10 <__flatcc_fb_parse@@Base+0x3a8>
   28920:	mov	r0, r4
   28924:	movw	r1, #15420	; 0x3c3c
   28928:	movt	r1, #60	; 0x3c
   2892c:	b	27d10 <__flatcc_fb_parse@@Base+0x3a8>
   28930:	mov	r0, #0
   28934:	str	r0, [r4, #32]
   28938:	add	r5, r5, #2
   2893c:	mov	r6, r5
   28940:	b	27d1c <__flatcc_fb_parse@@Base+0x3b4>
   28944:	mov	r6, r5
   28948:	cmp	r5, r8
   2894c:	beq	2895c <__flatcc_fb_parse@@Base+0xff4>
   28950:	ldrb	r0, [r5]
   28954:	cmp	r0, #0
   28958:	beq	28980 <__flatcc_fb_parse@@Base+0x1018>
   2895c:	mov	r0, r4
   28960:	mov	r1, #0
   28964:	mov	r2, r5
   28968:	b	2898c <__flatcc_fb_parse@@Base+0x1024>
   2896c:	mov	r0, r4
   28970:	mov	r1, #0
   28974:	mov	r2, r6
   28978:	mov	r3, r6
   2897c:	b	28990 <__flatcc_fb_parse@@Base+0x1028>
   28980:	mov	r0, r4
   28984:	mov	r1, #0
   28988:	mov	r2, r6
   2898c:	mov	r3, r5
   28990:	sub	sp, fp, #28
   28994:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28998:	b	28c7c <__flatcc_fb_clear_parser@@Base+0x1cc>
   2899c:	sub	r5, r5, r4
   289a0:	ldr	r4, [sp, #4]
   289a4:	mov	r0, r4
   289a8:	mov	r1, #27
   289ac:	mov	r2, r5
   289b0:	mov	r3, r5
   289b4:	bl	28c7c <__flatcc_fb_clear_parser@@Base+0x1cc>
   289b8:	cmp	r5, r8
   289bc:	bne	28950 <__flatcc_fb_parse@@Base+0xfe8>
   289c0:	b	2895c <__flatcc_fb_parse@@Base+0xff4>
   289c4:	push	{r4, sl, fp, lr}
   289c8:	add	fp, sp, #8
   289cc:	mov	r4, r0
   289d0:	ldr	r2, [r0, #24]
   289d4:	ldr	r0, [r0, #40]	; 0x28
   289d8:	b	289fc <__flatcc_fb_parse@@Base+0x1094>
   289dc:	ldr	r0, [r0, #36]	; 0x24
   289e0:	cmn	r0, #964	; 0x3c4
   289e4:	movne	r0, r1
   289e8:	popne	{r4, sl, fp, pc}
   289ec:	mov	r0, r4
   289f0:	bl	295a0 <__flatcc_fb_clear_parser@@Base+0xaf0>
   289f4:	ldr	r2, [r4, #24]
   289f8:	ldr	r0, [r4, #40]	; 0x28
   289fc:	add	r1, r0, #20
   28a00:	str	r1, [r4, #40]	; 0x28
   28a04:	cmp	r1, r2
   28a08:	bne	289dc <__flatcc_fb_parse@@Base+0x1074>
   28a0c:	str	r0, [r4, #40]	; 0x28
   28a10:	movw	r0, #24925	; 0x615d
   28a14:	movt	r0, #4
   28a18:	movw	r1, #50430	; 0xc4fe
   28a1c:	movt	r1, #4
   28a20:	movw	r3, #50729	; 0xc629
   28a24:	movt	r3, #4
   28a28:	movw	r2, #341	; 0x155
   28a2c:	bl	14950 <__assert_fail@plt>
   28a30:	push	{r4, r5, fp, lr}
   28a34:	add	fp, sp, #8
   28a38:	mov	r4, r0
   28a3c:	bl	295cc <__flatcc_fb_clear_parser@@Base+0xb1c>
   28a40:	ldr	r5, [r4, #40]	; 0x28
   28a44:	mov	r0, r5
   28a48:	bl	29694 <__flatcc_fb_clear_parser@@Base+0xbe4>
   28a4c:	cmp	r0, #0
   28a50:	bne	28a98 <__flatcc_fb_parse@@Base+0x1130>
   28a54:	ldr	r0, [r4, #108]	; 0x6c
   28a58:	cmp	r0, #9
   28a5c:	bgt	28aac <__flatcc_fb_parse@@Base+0x1144>
   28a60:	mov	r0, r4
   28a64:	bl	296a4 <__flatcc_fb_clear_parser@@Base+0xbf4>
   28a68:	ldr	r1, [r4, #40]	; 0x28
   28a6c:	cmp	r1, r5
   28a70:	mov	r5, r1
   28a74:	bne	28a44 <__flatcc_fb_parse@@Base+0x10dc>
   28a78:	ldr	r0, [r4, #108]	; 0x6c
   28a7c:	cmp	r0, #0
   28a80:	popne	{r4, r5, fp, pc}
   28a84:	movw	r2, #50761	; 0xc649
   28a88:	movt	r2, #4
   28a8c:	mov	r0, r4
   28a90:	pop	{r4, r5, fp, lr}
   28a94:	b	28be4 <__flatcc_fb_clear_parser@@Base+0x134>
   28a98:	add	r0, r4, #356	; 0x164
   28a9c:	bl	29958 <__flatcc_fb_clear_parser@@Base+0xea8>
   28aa0:	add	r0, r4, #392	; 0x188
   28aa4:	pop	{r4, r5, fp, lr}
   28aa8:	b	29990 <__flatcc_fb_clear_parser@@Base+0xee0>
   28aac:	pop	{r4, r5, fp, pc}

00028ab0 <__flatcc_fb_clear_parser@@Base>:
   28ab0:	push	{r4, r5, fp, lr}
   28ab4:	add	fp, sp, #8
   28ab8:	mov	r4, r0
   28abc:	ldr	r5, [r0, #392]	; 0x188
   28ac0:	cmp	r5, #0
   28ac4:	bne	28ad8 <__flatcc_fb_clear_parser@@Base+0x28>
   28ac8:	b	28af8 <__flatcc_fb_clear_parser@@Base+0x48>
   28acc:	ldr	r5, [r5]
   28ad0:	cmp	r5, #0
   28ad4:	beq	28af8 <__flatcc_fb_clear_parser@@Base+0x48>
   28ad8:	ldrh	r0, [r5, #8]
   28adc:	cmp	r0, #4
   28ae0:	bhi	28acc <__flatcc_fb_clear_parser@@Base+0x1c>
   28ae4:	add	r0, r5, #56	; 0x38
   28ae8:	bl	25960 <fb_symbol_table_clear@@Base>
   28aec:	add	r0, r5, #72	; 0x48
   28af0:	bl	32fd4 <fb_value_set_clear@@Base>
   28af4:	b	28acc <__flatcc_fb_clear_parser@@Base+0x1c>
   28af8:	add	r0, r4, #448	; 0x1c0
   28afc:	bl	26748 <fb_schema_table_clear@@Base>
   28b00:	add	r0, r4, #432	; 0x1b0
   28b04:	bl	329b4 <fb_name_table_clear@@Base>
   28b08:	add	r0, r4, #524	; 0x20c
   28b0c:	bl	253c0 <ptr_set_clear@@Base>
   28b10:	ldr	r0, [r4, #112]	; 0x70
   28b14:	cmp	r0, #0
   28b18:	beq	28b20 <__flatcc_fb_clear_parser@@Base+0x70>
   28b1c:	bl	147dc <free@plt>
   28b20:	ldr	r0, [r4, #20]
   28b24:	cmp	r0, #0
   28b28:	beq	28b30 <__flatcc_fb_clear_parser@@Base+0x80>
   28b2c:	bl	147dc <free@plt>
   28b30:	ldr	r0, [r4, #512]	; 0x200
   28b34:	cmp	r0, #0
   28b38:	beq	28b40 <__flatcc_fb_clear_parser@@Base+0x90>
   28b3c:	bl	147dc <free@plt>
   28b40:	ldr	r0, [r4, #516]	; 0x204
   28b44:	cmp	r0, #0
   28b48:	beq	28b50 <__flatcc_fb_clear_parser@@Base+0xa0>
   28b4c:	bl	147dc <free@plt>
   28b50:	ldr	r0, [r4, #520]	; 0x208
   28b54:	cmp	r0, #0
   28b58:	beq	28b60 <__flatcc_fb_clear_parser@@Base+0xb0>
   28b5c:	bl	147dc <free@plt>
   28b60:	ldr	r0, [r4, #548]	; 0x224
   28b64:	cmp	r0, #0
   28b68:	beq	28b70 <__flatcc_fb_clear_parser@@Base+0xc0>
   28b6c:	bl	147dc <free@plt>
   28b70:	add	r0, r4, #416	; 0x1a0
   28b74:	movw	r1, #35760	; 0x8bb0
   28b78:	movt	r1, #2
   28b7c:	mov	r2, #0
   28b80:	bl	25fc8 <fb_scope_table_destroy@@Base>
   28b84:	mov	r0, r4
   28b88:	bl	28bb8 <__flatcc_fb_clear_parser@@Base+0x108>
   28b8c:	ldr	r0, [r4, #16]
   28b90:	cmp	r0, #0
   28b94:	beq	28b9c <__flatcc_fb_clear_parser@@Base+0xec>
   28b98:	bl	147dc <free@plt>
   28b9c:	mov	r0, r4
   28ba0:	mov	r1, #0
   28ba4:	mov	r2, #560	; 0x230
   28ba8:	pop	{r4, r5, fp, lr}
   28bac:	b	148a8 <memset@plt>
   28bb0:	add	r0, r1, #4
   28bb4:	b	25960 <fb_symbol_table_clear@@Base>
   28bb8:	push	{r4, sl, fp, lr}
   28bbc:	add	fp, sp, #8
   28bc0:	ldr	r0, [r0, #48]	; 0x30
   28bc4:	cmp	r0, #0
   28bc8:	popeq	{r4, sl, fp, pc}
   28bcc:	ldr	r4, [r0]
   28bd0:	bl	147dc <free@plt>
   28bd4:	cmp	r4, #0
   28bd8:	mov	r0, r4
   28bdc:	bne	28bcc <__flatcc_fb_clear_parser@@Base+0x11c>
   28be0:	pop	{r4, sl, fp, pc}
   28be4:	mov	r3, #0
   28be8:	b	28bec <__flatcc_fb_clear_parser@@Base+0x13c>
   28bec:	push	{fp, lr}
   28bf0:	mov	fp, sp
   28bf4:	sub	sp, sp, #8
   28bf8:	mov	ip, #0
   28bfc:	str	ip, [sp]
   28c00:	str	ip, [sp, #4]
   28c04:	bl	2742c <__flatcc_error_report@@Base>
   28c08:	mov	sp, fp
   28c0c:	pop	{fp, pc}
   28c10:	push	{r4, r5, r6, r7, fp, lr}
   28c14:	add	fp, sp, #16
   28c18:	mov	r4, r0
   28c1c:	ldr	r2, [r0, #44]	; 0x2c
   28c20:	ldr	r0, [r0, #52]	; 0x34
   28c24:	add	r1, r1, #15
   28c28:	bic	r6, r1, #15
   28c2c:	add	r1, r0, r6
   28c30:	cmp	r1, r2
   28c34:	bls	28c6c <__flatcc_fb_clear_parser@@Base+0x1bc>
   28c38:	mov	r7, #65536	; 0x10000
   28c3c:	mov	r0, #65536	; 0x10000
   28c40:	mov	r1, #1
   28c44:	bl	147ac <calloc@plt>
   28c48:	mov	r5, r0
   28c4c:	bl	2787c <__flatcc_fb_init_parser@@Base+0x1dc>
   28c50:	ldr	r0, [r4, #48]	; 0x30
   28c54:	mov	r1, r5
   28c58:	str	r0, [r1], r7
   28c5c:	add	r0, r5, #16
   28c60:	str	r1, [r4, #44]	; 0x2c
   28c64:	str	r5, [r4, #48]	; 0x30
   28c68:	str	r0, [r4, #52]	; 0x34
   28c6c:	ldr	r1, [r4, #52]	; 0x34
   28c70:	add	r1, r1, r6
   28c74:	str	r1, [r4, #52]	; 0x34
   28c78:	pop	{r4, r5, r6, r7, fp, pc}
   28c7c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   28c80:	add	fp, sp, #24
   28c84:	mov	r8, r3
   28c88:	mov	r5, r2
   28c8c:	mov	r9, r1
   28c90:	mov	r4, r0
   28c94:	ldr	r1, [r0, #20]
   28c98:	ldr	r0, [r0, #28]
   28c9c:	ldr	r7, [r4, #40]	; 0x28
   28ca0:	add	r2, r0, r0, lsl #2
   28ca4:	add	r1, r1, r2, lsl #2
   28ca8:	str	r1, [r4, #24]
   28cac:	cmp	r7, r1
   28cb0:	bne	28d00 <__flatcc_fb_clear_parser@@Base+0x250>
   28cb4:	lsl	r1, r0, #1
   28cb8:	cmp	r0, #0
   28cbc:	movweq	r1, #1024	; 0x400
   28cc0:	str	r1, [r4, #28]
   28cc4:	add	r0, r1, r1, lsl #2
   28cc8:	lsl	r1, r0, #2
   28ccc:	ldr	r6, [r4, #20]
   28cd0:	mov	r0, r6
   28cd4:	bl	14824 <realloc@plt>
   28cd8:	str	r0, [r4, #20]
   28cdc:	bl	2787c <__flatcc_fb_init_parser@@Base+0x1dc>
   28ce0:	sub	r0, r7, r6
   28ce4:	ldr	r1, [r4, #20]
   28ce8:	ldr	r2, [r4, #28]
   28cec:	add	r0, r1, r0
   28cf0:	str	r0, [r4, #40]	; 0x28
   28cf4:	add	r0, r2, r2, lsl #2
   28cf8:	add	r0, r1, r0, lsl #2
   28cfc:	str	r0, [r4, #24]
   28d00:	ldr	r0, [r4, #40]	; 0x28
   28d04:	str	r5, [r0]
   28d08:	str	r9, [r0, #16]
   28d0c:	sub	r1, r8, r5
   28d10:	str	r1, [r0, #4]
   28d14:	ldr	r1, [r4, #64]	; 0x40
   28d18:	str	r1, [r0, #8]
   28d1c:	ldr	r1, [r4, #60]	; 0x3c
   28d20:	add	r2, r5, #1
   28d24:	sub	r1, r2, r1
   28d28:	str	r1, [r0, #12]
   28d2c:	add	r0, r0, #20
   28d30:	str	r0, [r4, #40]	; 0x28
   28d34:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   28d38:	mov	r3, r2
   28d3c:	mov	r2, r1
   28d40:	ldr	r1, [r0, #32]
   28d44:	cmp	r1, #0
   28d48:	bxeq	lr
   28d4c:	movw	r1, #64572	; 0xfc3c
   28d50:	movt	r1, #65535	; 0xffff
   28d54:	b	28c7c <__flatcc_fb_clear_parser@@Base+0x1cc>
   28d58:	push	{fp, lr}
   28d5c:	mov	fp, sp
   28d60:	movw	r2, #29242	; 0x723a
   28d64:	movt	r2, #25968	; 0x6570
   28d68:	cmp	r0, r2
   28d6c:	ble	28de8 <__flatcc_fb_clear_parser@@Base+0x338>
   28d70:	movw	r2, #26173	; 0x663d
   28d74:	movt	r2, #28265	; 0x6e69
   28d78:	cmp	r0, r2
   28d7c:	bgt	28e70 <__flatcc_fb_clear_parser@@Base+0x3c0>
   28d80:	movw	r2, #30004	; 0x7534
   28d84:	movt	r2, #26476	; 0x676c
   28d88:	cmp	r0, r2
   28d8c:	ble	28f50 <__flatcc_fb_clear_parser@@Base+0x4a0>
   28d90:	movw	r2, #29493	; 0x7335
   28d94:	movt	r2, #26484	; 0x6774
   28d98:	cmp	r0, r2
   28d9c:	ble	29098 <__flatcc_fb_clear_parser@@Base+0x5e8>
   28da0:	movw	r2, #29494	; 0x7336
   28da4:	movt	r2, #26484	; 0x6774
   28da8:	cmp	r0, r2
   28dac:	beq	292b8 <__flatcc_fb_clear_parser@@Base+0x808>
   28db0:	movw	r2, #25140	; 0x6234
   28db4:	movt	r2, #27759	; 0x6c6f
   28db8:	cmp	r0, r2
   28dbc:	beq	292e0 <__flatcc_fb_clear_parser@@Base+0x830>
   28dc0:	movw	r2, #25908	; 0x6534
   28dc4:	movt	r2, #28014	; 0x6d6e
   28dc8:	cmp	r0, r2
   28dcc:	ldreq	r0, [r1]
   28dd0:	movweq	r1, #28261	; 0x6e65
   28dd4:	movteq	r1, #28021	; 0x6d75
   28dd8:	cmpeq	r0, r1
   28ddc:	bne	29588 <__flatcc_fb_clear_parser@@Base+0xad8>
   28de0:	mvn	r0, #996	; 0x3e4
   28de4:	pop	{fp, pc}
   28de8:	movw	r2, #30004	; 0x7534
   28dec:	movt	r2, #14441	; 0x3869
   28df0:	cmp	r0, r2
   28df4:	ble	28ee8 <__flatcc_fb_clear_parser@@Base+0x438>
   28df8:	movw	r2, #29748	; 0x7434
   28dfc:	movt	r2, #25953	; 0x6561
   28e00:	cmp	r0, r2
   28e04:	ble	28fa0 <__flatcc_fb_clear_parser@@Base+0x4f0>
   28e08:	movw	r2, #26934	; 0x6936
   28e0c:	movt	r2, #25966	; 0x656e
   28e10:	cmp	r0, r2
   28e14:	ble	290d0 <__flatcc_fb_clear_parser@@Base+0x620>
   28e18:	movw	r2, #26935	; 0x6937
   28e1c:	movt	r2, #25966	; 0x656e
   28e20:	cmp	r0, r2
   28e24:	beq	29304 <__flatcc_fb_clear_parser@@Base+0x854>
   28e28:	movw	r2, #25654	; 0x6436
   28e2c:	movt	r2, #25967	; 0x656f
   28e30:	cmp	r0, r2
   28e34:	beq	2932c <__flatcc_fb_clear_parser@@Base+0x87c>
   28e38:	movw	r2, #29241	; 0x7239
   28e3c:	movt	r2, #25967	; 0x656f
   28e40:	cmp	r0, r2
   28e44:	bne	29588 <__flatcc_fb_clear_parser@@Base+0xad8>
   28e48:	movw	r0, #50688	; 0xc600
   28e4c:	movt	r0, #4
   28e50:	mov	r2, #9
   28e54:	bl	14800 <memcmp@plt>
   28e58:	cmp	r0, #0
   28e5c:	bne	29588 <__flatcc_fb_clear_parser@@Base+0xad8>
   28e60:	movw	r0, #64537	; 0xfc19
   28e64:	movt	r0, #65535	; 0xffff
   28e68:	add	r0, r0, #31
   28e6c:	pop	{fp, pc}
   28e70:	movw	r2, #30003	; 0x7533
   28e74:	movt	r2, #29801	; 0x7469
   28e78:	cmp	r0, r2
   28e7c:	ble	28fe8 <__flatcc_fb_clear_parser@@Base+0x538>
   28e80:	movw	r2, #26930	; 0x6932
   28e84:	movt	r2, #29806	; 0x746e
   28e88:	cmp	r0, r2
   28e8c:	ble	29118 <__flatcc_fb_clear_parser@@Base+0x668>
   28e90:	movw	r2, #29494	; 0x7336
   28e94:	movt	r2, #29812	; 0x7474
   28e98:	cmp	r0, r2
   28e9c:	beq	29354 <__flatcc_fb_clear_parser@@Base+0x8a4>
   28ea0:	movw	r2, #30006	; 0x7536
   28ea4:	movt	r2, #29811	; 0x7473
   28ea8:	cmp	r0, r2
   28eac:	beq	29378 <__flatcc_fb_clear_parser@@Base+0x8c8>
   28eb0:	movw	r2, #26931	; 0x6933
   28eb4:	movt	r2, #29806	; 0x746e
   28eb8:	cmp	r0, r2
   28ebc:	bne	29588 <__flatcc_fb_clear_parser@@Base+0xad8>
   28ec0:	movw	r0, #46457	; 0xb579
   28ec4:	movt	r0, #4
   28ec8:	mov	r2, #3
   28ecc:	bl	14800 <memcmp@plt>
   28ed0:	cmp	r0, #0
   28ed4:	bne	29588 <__flatcc_fb_clear_parser@@Base+0xad8>
   28ed8:	movw	r0, #64537	; 0xfc19
   28edc:	movt	r0, #65535	; 0xffff
   28ee0:	add	r0, r0, #5
   28ee4:	pop	{fp, pc}
   28ee8:	movw	r2, #26166	; 0x6636
   28eec:	movt	r2, #13420	; 0x346c
   28ef0:	cmp	r0, r2
   28ef4:	bgt	29040 <__flatcc_fb_clear_parser@@Base+0x590>
   28ef8:	movw	r2, #26932	; 0x6934
   28efc:	movt	r2, #12910	; 0x326e
   28f00:	cmp	r0, r2
   28f04:	bgt	2915c <__flatcc_fb_clear_parser@@Base+0x6ac>
   28f08:	movw	r2, #30006	; 0x7536
   28f0c:	movt	r2, #12905	; 0x3269
   28f10:	cmp	r0, r2
   28f14:	beq	293a0 <__flatcc_fb_clear_parser@@Base+0x8f0>
   28f18:	movw	r2, #26167	; 0x6637
   28f1c:	movt	r2, #12908	; 0x326c
   28f20:	cmp	r0, r2
   28f24:	bne	29588 <__flatcc_fb_clear_parser@@Base+0xad8>
   28f28:	movw	r0, #50644	; 0xc5d4
   28f2c:	movt	r0, #4
   28f30:	mov	r2, #7
   28f34:	bl	14800 <memcmp@plt>
   28f38:	cmp	r0, #0
   28f3c:	bne	29588 <__flatcc_fb_clear_parser@@Base+0xad8>
   28f40:	movw	r0, #64537	; 0xfc19
   28f44:	movt	r0, #65535	; 0xffff
   28f48:	add	r0, r0, #3
   28f4c:	pop	{fp, pc}
   28f50:	movw	r2, #24888	; 0x6138
   28f54:	movt	r2, #25972	; 0x6574
   28f58:	cmp	r0, r2
   28f5c:	bgt	291a4 <__flatcc_fb_clear_parser@@Base+0x6f4>
   28f60:	movw	r2, #29243	; 0x723b
   28f64:	movt	r2, #25968	; 0x6570
   28f68:	cmp	r0, r2
   28f6c:	beq	293c8 <__flatcc_fb_clear_parser@@Base+0x918>
   28f70:	movw	r2, #29748	; 0x7434
   28f74:	movt	r2, #25970	; 0x6572
   28f78:	cmp	r0, r2
   28f7c:	ldreq	r0, [r1]
   28f80:	movweq	r1, #29300	; 0x7274
   28f84:	movteq	r1, #25973	; 0x6575
   28f88:	cmpeq	r0, r1
   28f8c:	bne	29588 <__flatcc_fb_clear_parser@@Base+0xad8>
   28f90:	movw	r0, #64537	; 0xfc19
   28f94:	movt	r0, #65535	; 0xffff
   28f98:	add	r0, r0, #11
   28f9c:	pop	{fp, pc}
   28fa0:	movw	r2, #26164	; 0x6634
   28fa4:	movt	r2, #25953	; 0x6561
   28fa8:	cmp	r0, r2
   28fac:	bgt	291e4 <__flatcc_fb_clear_parser@@Base+0x734>
   28fb0:	movw	r2, #30005	; 0x7535
   28fb4:	movt	r2, #14441	; 0x3869
   28fb8:	cmp	r0, r2
   28fbc:	beq	293f0 <__flatcc_fb_clear_parser@@Base+0x940>
   28fc0:	movw	r2, #26932	; 0x6934
   28fc4:	movt	r2, #14446	; 0x386e
   28fc8:	cmp	r0, r2
   28fcc:	ldreq	r0, [r1]
   28fd0:	movweq	r1, #28265	; 0x6e69
   28fd4:	movteq	r1, #14452	; 0x3874
   28fd8:	cmpeq	r0, r1
   28fdc:	bne	29588 <__flatcc_fb_clear_parser@@Base+0xad8>
   28fe0:	mvn	r0, #992	; 0x3e0
   28fe4:	pop	{fp, pc}
   28fe8:	movw	r2, #26174	; 0x663e
   28fec:	movt	r2, #29289	; 0x7269
   28ff0:	cmp	r0, r2
   28ff4:	bgt	29228 <__flatcc_fb_clear_parser@@Base+0x778>
   28ff8:	movw	r2, #26174	; 0x663e
   28ffc:	movt	r2, #28265	; 0x6e69
   29000:	cmp	r0, r2
   29004:	beq	29414 <__flatcc_fb_clear_parser@@Base+0x964>
   29008:	movw	r2, #30005	; 0x7535
   2900c:	movt	r2, #28270	; 0x6e6e
   29010:	cmp	r0, r2
   29014:	bne	29588 <__flatcc_fb_clear_parser@@Base+0xad8>
   29018:	movw	r0, #46767	; 0xb6af
   2901c:	movt	r0, #3
   29020:	mov	r2, #5
   29024:	bl	14800 <memcmp@plt>
   29028:	cmp	r0, #0
   2902c:	bne	29588 <__flatcc_fb_clear_parser@@Base+0xad8>
   29030:	movw	r0, #64537	; 0xfc19
   29034:	movt	r0, #65535	; 0xffff
   29038:	add	r0, r0, #23
   2903c:	pop	{fp, pc}
   29040:	movw	r2, #30005	; 0x7535
   29044:	movt	r2, #13929	; 0x3669
   29048:	cmp	r0, r2
   2904c:	bgt	29270 <__flatcc_fb_clear_parser@@Base+0x7c0>
   29050:	movw	r2, #26167	; 0x6637
   29054:	movt	r2, #13420	; 0x346c
   29058:	cmp	r0, r2
   2905c:	beq	2943c <__flatcc_fb_clear_parser@@Base+0x98c>
   29060:	movw	r2, #26933	; 0x6935
   29064:	movt	r2, #13422	; 0x346e
   29068:	cmp	r0, r2
   2906c:	bne	29588 <__flatcc_fb_clear_parser@@Base+0xad8>
   29070:	movw	r0, #49926	; 0xc306
   29074:	movt	r0, #3
   29078:	mov	r2, #5
   2907c:	bl	14800 <memcmp@plt>
   29080:	cmp	r0, #0
   29084:	bne	29588 <__flatcc_fb_clear_parser@@Base+0xad8>
   29088:	movw	r0, #64537	; 0xfc19
   2908c:	movt	r0, #65535	; 0xffff
   29090:	add	r0, r0, #9
   29094:	pop	{fp, pc}
   29098:	movw	r2, #30005	; 0x7535
   2909c:	movt	r2, #26476	; 0x676c
   290a0:	cmp	r0, r2
   290a4:	beq	29464 <__flatcc_fb_clear_parser@@Base+0x9b4>
   290a8:	movw	r2, #27700	; 0x6c34
   290ac:	movt	r2, #26479	; 0x676f
   290b0:	cmp	r0, r2
   290b4:	ldreq	r0, [r1]
   290b8:	movweq	r1, #28524	; 0x6f6c
   290bc:	movteq	r1, #26478	; 0x676e
   290c0:	cmpeq	r0, r1
   290c4:	bne	29588 <__flatcc_fb_clear_parser@@Base+0xad8>
   290c8:	mvn	r0, #988	; 0x3dc
   290cc:	pop	{fp, pc}
   290d0:	movw	r2, #29749	; 0x7435
   290d4:	movt	r2, #25953	; 0x6561
   290d8:	cmp	r0, r2
   290dc:	beq	29488 <__flatcc_fb_clear_parser@@Base+0x9d8>
   290e0:	movw	r2, #30005	; 0x7535
   290e4:	movt	r2, #25954	; 0x6562
   290e8:	cmp	r0, r2
   290ec:	bne	29588 <__flatcc_fb_clear_parser@@Base+0xad8>
   290f0:	movw	r0, #56554	; 0xdcea
   290f4:	movt	r0, #4
   290f8:	mov	r2, #5
   290fc:	bl	14800 <memcmp@plt>
   29100:	cmp	r0, #0
   29104:	bne	29588 <__flatcc_fb_clear_parser@@Base+0xad8>
   29108:	movw	r0, #64537	; 0xfc19
   2910c:	movt	r0, #65535	; 0xffff
   29110:	add	r0, r0, #17
   29114:	pop	{fp, pc}
   29118:	movw	r2, #30004	; 0x7534
   2911c:	movt	r2, #29801	; 0x7469
   29120:	cmp	r0, r2
   29124:	beq	294b0 <__flatcc_fb_clear_parser@@Base+0xa00>
   29128:	movw	r2, #26165	; 0x6635
   2912c:	movt	r2, #29804	; 0x746c
   29130:	cmp	r0, r2
   29134:	bne	29588 <__flatcc_fb_clear_parser@@Base+0xad8>
   29138:	movw	r0, #47514	; 0xb99a
   2913c:	movt	r0, #3
   29140:	mov	r2, #5
   29144:	bl	14800 <memcmp@plt>
   29148:	cmp	r0, #0
   2914c:	mvneq	r0, #984	; 0x3d8
   29150:	popeq	{fp, pc}
   29154:	mov	r0, #9
   29158:	pop	{fp, pc}
   2915c:	movw	r2, #26933	; 0x6935
   29160:	movt	r2, #12910	; 0x326e
   29164:	cmp	r0, r2
   29168:	beq	294d4 <__flatcc_fb_clear_parser@@Base+0xa24>
   2916c:	movw	r2, #30006	; 0x7536
   29170:	movt	r2, #13417	; 0x3469
   29174:	cmp	r0, r2
   29178:	bne	29588 <__flatcc_fb_clear_parser@@Base+0xad8>
   2917c:	movw	r0, #49925	; 0xc305
   29180:	movt	r0, #3
   29184:	mov	r2, #6
   29188:	bl	14800 <memcmp@plt>
   2918c:	cmp	r0, #0
   29190:	bne	29588 <__flatcc_fb_clear_parser@@Base+0xad8>
   29194:	movw	r0, #64537	; 0xfc19
   29198:	movt	r0, #65535	; 0xffff
   2919c:	add	r0, r0, #21
   291a0:	pop	{fp, pc}
   291a4:	movw	r2, #24889	; 0x6139
   291a8:	movt	r2, #25972	; 0x6574
   291ac:	cmp	r0, r2
   291b0:	beq	294fc <__flatcc_fb_clear_parser@@Base+0xa4c>
   291b4:	movw	r2, #25140	; 0x6234
   291b8:	movt	r2, #25977	; 0x6579
   291bc:	cmp	r0, r2
   291c0:	ldreq	r0, [r1]
   291c4:	movweq	r1, #31074	; 0x7962
   291c8:	movteq	r1, #25972	; 0x6574
   291cc:	cmpeq	r0, r1
   291d0:	bne	29588 <__flatcc_fb_clear_parser@@Base+0xad8>
   291d4:	movw	r0, #64537	; 0xfc19
   291d8:	movt	r0, #65535	; 0xffff
   291dc:	add	r0, r0, #1
   291e0:	pop	{fp, pc}
   291e4:	movw	r2, #26165	; 0x6635
   291e8:	movt	r2, #25953	; 0x6561
   291ec:	cmp	r0, r2
   291f0:	beq	29524 <__flatcc_fb_clear_parser@@Base+0xa74>
   291f4:	movw	r2, #28217	; 0x6e39
   291f8:	movt	r2, #25953	; 0x6561
   291fc:	cmp	r0, r2
   29200:	bne	29588 <__flatcc_fb_clear_parser@@Base+0xad8>
   29204:	movw	r0, #50678	; 0xc5f6
   29208:	movt	r0, #4
   2920c:	mov	r2, #9
   29210:	bl	14800 <memcmp@plt>
   29214:	cmp	r0, #0
   29218:	mvneq	r0, #968	; 0x3c8
   2921c:	popeq	{fp, pc}
   29220:	mov	r0, #9
   29224:	pop	{fp, pc}
   29228:	movw	r2, #26175	; 0x663f
   2922c:	movt	r2, #29289	; 0x7269
   29230:	cmp	r0, r2
   29234:	beq	2954c <__flatcc_fb_clear_parser@@Base+0xa9c>
   29238:	movw	r2, #29493	; 0x7335
   2923c:	movt	r2, #29800	; 0x7468
   29240:	cmp	r0, r2
   29244:	bne	29588 <__flatcc_fb_clear_parser@@Base+0xad8>
   29248:	movw	r0, #50638	; 0xc5ce
   2924c:	movt	r0, #4
   29250:	mov	r2, #5
   29254:	bl	14800 <memcmp@plt>
   29258:	cmp	r0, #0
   2925c:	bne	29588 <__flatcc_fb_clear_parser@@Base+0xad8>
   29260:	movw	r0, #64537	; 0xfc19
   29264:	movt	r0, #65535	; 0xffff
   29268:	add	r0, r0, #15
   2926c:	pop	{fp, pc}
   29270:	movw	r2, #30006	; 0x7536
   29274:	movt	r2, #13929	; 0x3669
   29278:	cmp	r0, r2
   2927c:	beq	29570 <__flatcc_fb_clear_parser@@Base+0xac0>
   29280:	movw	r2, #26933	; 0x6935
   29284:	movt	r2, #13934	; 0x366e
   29288:	cmp	r0, r2
   2928c:	bne	29588 <__flatcc_fb_clear_parser@@Base+0xad8>
   29290:	movw	r0, #49940	; 0xc314
   29294:	movt	r0, #3
   29298:	mov	r2, #5
   2929c:	bl	14800 <memcmp@plt>
   292a0:	cmp	r0, #0
   292a4:	bne	29588 <__flatcc_fb_clear_parser@@Base+0xad8>
   292a8:	movw	r0, #64537	; 0xfc19
   292ac:	movt	r0, #65535	; 0xffff
   292b0:	add	r0, r0, #7
   292b4:	pop	{fp, pc}
   292b8:	movw	r0, #55133	; 0xd75d
   292bc:	movt	r0, #4
   292c0:	mov	r2, #6
   292c4:	bl	14800 <memcmp@plt>
   292c8:	cmp	r0, #0
   292cc:	bne	29588 <__flatcc_fb_clear_parser@@Base+0xad8>
   292d0:	movw	r0, #64537	; 0xfc19
   292d4:	movt	r0, #65535	; 0xffff
   292d8:	add	r0, r0, #25
   292dc:	pop	{fp, pc}
   292e0:	ldr	r0, [r1]
   292e4:	movw	r1, #28514	; 0x6f62
   292e8:	movt	r1, #27759	; 0x6c6f
   292ec:	cmp	r0, r1
   292f0:	movweq	r0, #64537	; 0xfc19
   292f4:	movteq	r0, #65535	; 0xffff
   292f8:	popeq	{fp, pc}
   292fc:	mov	r0, #9
   29300:	pop	{fp, pc}
   29304:	movw	r0, #50660	; 0xc5e4
   29308:	movt	r0, #4
   2930c:	mov	r2, #7
   29310:	bl	14800 <memcmp@plt>
   29314:	cmp	r0, #0
   29318:	bne	29588 <__flatcc_fb_clear_parser@@Base+0xad8>
   2931c:	movw	r0, #64537	; 0xfc19
   29320:	movt	r0, #65535	; 0xffff
   29324:	add	r0, r0, #28
   29328:	pop	{fp, pc}
   2932c:	movw	r0, #47520	; 0xb9a0
   29330:	movt	r0, #3
   29334:	mov	r2, #6
   29338:	bl	14800 <memcmp@plt>
   2933c:	cmp	r0, #0
   29340:	bne	29588 <__flatcc_fb_clear_parser@@Base+0xad8>
   29344:	movw	r0, #64537	; 0xfc19
   29348:	movt	r0, #65535	; 0xffff
   2934c:	add	r0, r0, #24
   29350:	pop	{fp, pc}
   29354:	movw	r0, #54342	; 0xd446
   29358:	movt	r0, #4
   2935c:	mov	r2, #6
   29360:	bl	14800 <memcmp@plt>
   29364:	cmp	r0, #0
   29368:	mvneq	r0, #972	; 0x3cc
   2936c:	popeq	{fp, pc}
   29370:	mov	r0, #9
   29374:	pop	{fp, pc}
   29378:	movw	r0, #50637	; 0xc5cd
   2937c:	movt	r0, #4
   29380:	mov	r2, #6
   29384:	bl	14800 <memcmp@plt>
   29388:	cmp	r0, #0
   2938c:	bne	29588 <__flatcc_fb_clear_parser@@Base+0xad8>
   29390:	movw	r0, #64537	; 0xfc19
   29394:	movt	r0, #65535	; 0xffff
   29398:	add	r0, r0, #27
   2939c:	pop	{fp, pc}
   293a0:	movw	r0, #49932	; 0xc30c
   293a4:	movt	r0, #3
   293a8:	mov	r2, #6
   293ac:	bl	14800 <memcmp@plt>
   293b0:	cmp	r0, #0
   293b4:	bne	29588 <__flatcc_fb_clear_parser@@Base+0xad8>
   293b8:	movw	r0, #64537	; 0xfc19
   293bc:	movt	r0, #65535	; 0xffff
   293c0:	add	r0, r0, #20
   293c4:	pop	{fp, pc}
   293c8:	movw	r0, #58725	; 0xe565
   293cc:	movt	r0, #4
   293d0:	mov	r2, #11
   293d4:	bl	14800 <memcmp@plt>
   293d8:	cmp	r0, #0
   293dc:	bne	29588 <__flatcc_fb_clear_parser@@Base+0xad8>
   293e0:	movw	r0, #64537	; 0xfc19
   293e4:	movt	r0, #65535	; 0xffff
   293e8:	add	r0, r0, #32
   293ec:	pop	{fp, pc}
   293f0:	movw	r0, #49946	; 0xc31a
   293f4:	movt	r0, #3
   293f8:	mov	r2, #5
   293fc:	bl	14800 <memcmp@plt>
   29400:	cmp	r0, #0
   29404:	mvneq	r0, #980	; 0x3d4
   29408:	popeq	{fp, pc}
   2940c:	mov	r0, #9
   29410:	pop	{fp, pc}
   29414:	movw	r0, #50698	; 0xc60a
   29418:	movt	r0, #4
   2941c:	mov	r2, #14
   29420:	bl	14800 <memcmp@plt>
   29424:	cmp	r0, #0
   29428:	bne	29588 <__flatcc_fb_clear_parser@@Base+0xad8>
   2942c:	movw	r0, #64537	; 0xfc19
   29430:	movt	r0, #65535	; 0xffff
   29434:	add	r0, r0, #33	; 0x21
   29438:	pop	{fp, pc}
   2943c:	movw	r0, #50652	; 0xc5dc
   29440:	movt	r0, #4
   29444:	mov	r2, #7
   29448:	bl	14800 <memcmp@plt>
   2944c:	cmp	r0, #0
   29450:	bne	29588 <__flatcc_fb_clear_parser@@Base+0xad8>
   29454:	movw	r0, #64537	; 0xfc19
   29458:	movt	r0, #65535	; 0xffff
   2945c:	add	r0, r0, #4
   29460:	pop	{fp, pc}
   29464:	movw	r0, #50631	; 0xc5c7
   29468:	movt	r0, #4
   2946c:	mov	r2, #5
   29470:	bl	14800 <memcmp@plt>
   29474:	cmp	r0, #0
   29478:	mvneq	r0, #976	; 0x3d0
   2947c:	popeq	{fp, pc}
   29480:	mov	r0, #9
   29484:	pop	{fp, pc}
   29488:	movw	r0, #53799	; 0xd227
   2948c:	movt	r0, #4
   29490:	mov	r2, #5
   29494:	bl	14800 <memcmp@plt>
   29498:	cmp	r0, #0
   2949c:	bne	29588 <__flatcc_fb_clear_parser@@Base+0xad8>
   294a0:	movw	r0, #64537	; 0xfc19
   294a4:	movt	r0, #65535	; 0xffff
   294a8:	add	r0, r0, #16
   294ac:	pop	{fp, pc}
   294b0:	ldr	r0, [r1]
   294b4:	movw	r1, #26997	; 0x6975
   294b8:	movt	r1, #29806	; 0x746e
   294bc:	cmp	r0, r1
   294c0:	bne	29588 <__flatcc_fb_clear_parser@@Base+0xad8>
   294c4:	movw	r0, #64537	; 0xfc19
   294c8:	movt	r0, #65535	; 0xffff
   294cc:	add	r0, r0, #12
   294d0:	pop	{fp, pc}
   294d4:	movw	r0, #49933	; 0xc30d
   294d8:	movt	r0, #3
   294dc:	mov	r2, #5
   294e0:	bl	14800 <memcmp@plt>
   294e4:	cmp	r0, #0
   294e8:	bne	29588 <__flatcc_fb_clear_parser@@Base+0xad8>
   294ec:	movw	r0, #64537	; 0xfc19
   294f0:	movt	r0, #65535	; 0xffff
   294f4:	add	r0, r0, #8
   294f8:	pop	{fp, pc}
   294fc:	movw	r0, #50668	; 0xc5ec
   29500:	movt	r0, #4
   29504:	mov	r2, #9
   29508:	bl	14800 <memcmp@plt>
   2950c:	cmp	r0, #0
   29510:	bne	29588 <__flatcc_fb_clear_parser@@Base+0xad8>
   29514:	movw	r0, #64537	; 0xfc19
   29518:	movt	r0, #65535	; 0xffff
   2951c:	add	r0, r0, #29
   29520:	pop	{fp, pc}
   29524:	movw	r0, #50625	; 0xc5c1
   29528:	movt	r0, #4
   2952c:	mov	r2, #5
   29530:	bl	14800 <memcmp@plt>
   29534:	cmp	r0, #0
   29538:	bne	29588 <__flatcc_fb_clear_parser@@Base+0xad8>
   2953c:	movw	r0, #64537	; 0xfc19
   29540:	movt	r0, #65535	; 0xffff
   29544:	add	r0, r0, #13
   29548:	pop	{fp, pc}
   2954c:	movw	r0, #50713	; 0xc619
   29550:	movt	r0, #4
   29554:	mov	r2, #15
   29558:	bl	14800 <memcmp@plt>
   2955c:	cmp	r0, #0
   29560:	mvneq	r0, #964	; 0x3c4
   29564:	popeq	{fp, pc}
   29568:	mov	r0, #9
   2956c:	pop	{fp, pc}
   29570:	movw	r0, #49939	; 0xc313
   29574:	movt	r0, #3
   29578:	mov	r2, #6
   2957c:	bl	14800 <memcmp@plt>
   29580:	cmp	r0, #0
   29584:	beq	29590 <__flatcc_fb_clear_parser@@Base+0xae0>
   29588:	mov	r0, #9
   2958c:	pop	{fp, pc}
   29590:	movw	r0, #64537	; 0xfc19
   29594:	movt	r0, #65535	; 0xffff
   29598:	add	r0, r0, #19
   2959c:	pop	{fp, pc}
   295a0:	push	{r4, r5, fp, lr}
   295a4:	add	fp, sp, #8
   295a8:	mov	r4, r1
   295ac:	mov	r5, r0
   295b0:	mov	r1, #12
   295b4:	bl	28c10 <__flatcc_fb_clear_parser@@Base+0x160>
   295b8:	str	r4, [r0, #4]
   295bc:	ldr	r1, [r5, #36]	; 0x24
   295c0:	str	r1, [r0]
   295c4:	str	r0, [r5, #36]	; 0x24
   295c8:	pop	{r4, r5, fp, pc}
   295cc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   295d0:	add	fp, sp, #24
   295d4:	mov	r4, r0
   295d8:	ldr	r5, [r0, #40]	; 0x28
   295dc:	movw	r8, #64565	; 0xfc35
   295e0:	movt	r8, #65535	; 0xffff
   295e4:	mov	r1, r8
   295e8:	bl	299c8 <__flatcc_fb_clear_parser@@Base+0xf18>
   295ec:	cmp	r0, #0
   295f0:	beq	29690 <__flatcc_fb_clear_parser@@Base+0xbe0>
   295f4:	movw	r7, #50839	; 0xc697
   295f8:	movt	r7, #4
   295fc:	movw	r6, #50885	; 0xc6c5
   29600:	movt	r6, #4
   29604:	movw	r9, #50783	; 0xc65f
   29608:	movt	r9, #4
   2960c:	ldr	r0, [r4, #140]	; 0x8c
   29610:	cmp	r0, #0
   29614:	beq	29628 <__flatcc_fb_clear_parser@@Base+0xb78>
   29618:	mov	r0, r4
   2961c:	mov	r1, r5
   29620:	mov	r2, r9
   29624:	bl	28be4 <__flatcc_fb_clear_parser@@Base+0x134>
   29628:	ldr	r0, [r4, #108]	; 0x6c
   2962c:	cmp	r0, #9
   29630:	popgt	{r4, r5, r6, r7, r8, r9, fp, pc}
   29634:	mov	r0, r4
   29638:	mov	r1, #19
   2963c:	mov	r2, r7
   29640:	bl	299f4 <__flatcc_fb_clear_parser@@Base+0xf44>
   29644:	cmp	r0, #0
   29648:	bne	29658 <__flatcc_fb_clear_parser@@Base+0xba8>
   2964c:	mov	r0, r4
   29650:	mov	r1, #59	; 0x3b
   29654:	bl	29a2c <__flatcc_fb_clear_parser@@Base+0xf7c>
   29658:	mov	r0, r4
   2965c:	bl	29bd8 <__flatcc_fb_clear_parser@@Base+0x1128>
   29660:	add	r1, r0, #8
   29664:	mov	r0, r4
   29668:	bl	29a70 <__flatcc_fb_clear_parser@@Base+0xfc0>
   2966c:	mov	r0, r4
   29670:	mov	r1, #59	; 0x3b
   29674:	mov	r2, r6
   29678:	bl	299f4 <__flatcc_fb_clear_parser@@Base+0xf44>
   2967c:	mov	r0, r4
   29680:	mov	r1, r8
   29684:	bl	299c8 <__flatcc_fb_clear_parser@@Base+0xf18>
   29688:	cmp	r0, #0
   2968c:	bne	2960c <__flatcc_fb_clear_parser@@Base+0xb5c>
   29690:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   29694:	ldr	r0, [r0, #16]
   29698:	clz	r0, r0
   2969c:	lsr	r0, r0, #5
   296a0:	bx	lr
   296a4:	push	{r4, sl, fp, lr}
   296a8:	add	fp, sp, #8
   296ac:	sub	sp, sp, #8
   296b0:	mov	r4, r0
   296b4:	ldr	r1, [r0, #40]	; 0x28
   296b8:	ldr	r0, [r1, #16]
   296bc:	cmp	r0, #4
   296c0:	bgt	29784 <__flatcc_fb_clear_parser@@Base+0xcd4>
   296c4:	movw	r2, #997	; 0x3e5
   296c8:	add	r0, r0, r2
   296cc:	cmp	r0, #32
   296d0:	bhi	29940 <__flatcc_fb_clear_parser@@Base+0xe90>
   296d4:	add	r2, pc, #0
   296d8:	ldr	pc, [r2, r0, lsl #2]
   296dc:	andeq	r9, r2, r0, ror #14
   296e0:	andeq	r9, r2, r0, asr #18
   296e4:	andeq	r9, r2, r0, asr #18
   296e8:	andeq	r9, r2, r0, asr #18
   296ec:	andeq	r9, r2, r0, asr #18
   296f0:	andeq	r9, r2, r0, asr #18
   296f4:	andeq	r9, r2, r0, asr #18
   296f8:	andeq	r9, r2, r0, asr #18
   296fc:	andeq	r9, r2, r0, asr #18
   29700:	andeq	r9, r2, r0, asr #18
   29704:	andeq	r9, r2, r0, asr #18
   29708:	andeq	r9, r2, r0, asr #18
   2970c:	andeq	r9, r2, r0, asr #18
   29710:	andeq	r9, r2, r0, asr #18
   29714:	andeq	r9, r2, ip, asr #15
   29718:	andeq	r9, r2, r0, asr #18
   2971c:	andeq	r9, r2, r0, asr #18
   29720:	andeq	r9, r2, r0, asr #18
   29724:	andeq	r9, r2, r0, asr #18
   29728:	andeq	r9, r2, r0, asr #18
   2972c:	andeq	r9, r2, r0, asr #18
   29730:	andeq	r9, r2, ip, ror #15
   29734:	andeq	r9, r2, r0, asr #18
   29738:	andeq	r9, r2, r0, asr #18
   2973c:	andeq	r9, r2, r0, lsl r8
   29740:	andeq	r9, r2, r0, asr #18
   29744:	andeq	r9, r2, r0, lsr r8
   29748:	andeq	r9, r2, ip, lsr r8
   2974c:	andeq	r9, r2, r0, ror #16
   29750:	andeq	r9, r2, r8, ror r8
   29754:	muleq	r2, r4, r8
   29758:	andeq	r9, r2, r4, asr #17
   2975c:	andeq	r9, r2, r0, ror #17
   29760:	mov	r0, r4
   29764:	bl	289c4 <__flatcc_fb_parse@@Base+0x105c>
   29768:	mov	r0, r4
   2976c:	bl	2a2f0 <__flatcc_fb_clear_parser@@Base+0x1840>
   29770:	mov	r1, r0
   29774:	mov	r0, r4
   29778:	sub	sp, fp, #8
   2977c:	pop	{r4, sl, fp, lr}
   29780:	b	2a138 <__flatcc_fb_clear_parser@@Base+0x1688>
   29784:	cmp	r0, #26
   29788:	bgt	297b0 <__flatcc_fb_clear_parser@@Base+0xd00>
   2978c:	cmp	r0, #5
   29790:	beq	298fc <__flatcc_fb_clear_parser@@Base+0xe4c>
   29794:	cmp	r0, #7
   29798:	bne	29940 <__flatcc_fb_clear_parser@@Base+0xe90>
   2979c:	mov	r0, #1
   297a0:	str	r0, [sp]
   297a4:	movw	r2, #51286	; 0xc856
   297a8:	movt	r2, #4
   297ac:	b	2990c <__flatcc_fb_clear_parser@@Base+0xe5c>
   297b0:	cmp	r0, #27
   297b4:	beq	29918 <__flatcc_fb_clear_parser@@Base+0xe68>
   297b8:	cmp	r0, #123	; 0x7b
   297bc:	bne	29940 <__flatcc_fb_clear_parser@@Base+0xe90>
   297c0:	movw	r2, #51138	; 0xc7c2
   297c4:	movt	r2, #4
   297c8:	b	29948 <__flatcc_fb_clear_parser@@Base+0xe98>
   297cc:	mov	r0, r4
   297d0:	bl	289c4 <__flatcc_fb_parse@@Base+0x105c>
   297d4:	mov	r0, r4
   297d8:	bl	2a094 <__flatcc_fb_clear_parser@@Base+0x15e4>
   297dc:	mov	r1, r0
   297e0:	movw	r2, #64553	; 0xfc29
   297e4:	movt	r2, #65535	; 0xffff
   297e8:	b	298b4 <__flatcc_fb_clear_parser@@Base+0xe04>
   297ec:	mov	r0, r4
   297f0:	bl	289c4 <__flatcc_fb_parse@@Base+0x105c>
   297f4:	mov	r0, r4
   297f8:	bl	2a528 <__flatcc_fb_clear_parser@@Base+0x1a78>
   297fc:	mov	r1, r0
   29800:	mov	r0, r4
   29804:	sub	sp, fp, #8
   29808:	pop	{r4, sl, fp, lr}
   2980c:	b	2a344 <__flatcc_fb_clear_parser@@Base+0x1894>
   29810:	mov	r0, r4
   29814:	bl	289c4 <__flatcc_fb_parse@@Base+0x105c>
   29818:	mov	r0, r4
   2981c:	bl	2a040 <__flatcc_fb_clear_parser@@Base+0x1590>
   29820:	mov	r1, r0
   29824:	mov	r0, r4
   29828:	mvn	r2, #972	; 0x3cc
   2982c:	b	298b8 <__flatcc_fb_clear_parser@@Base+0xe08>
   29830:	movw	r2, #51084	; 0xc78c
   29834:	movt	r2, #4
   29838:	b	29948 <__flatcc_fb_clear_parser@@Base+0xe98>
   2983c:	mov	r0, r4
   29840:	bl	289c4 <__flatcc_fb_parse@@Base+0x105c>
   29844:	mov	r0, r4
   29848:	bl	29f20 <__flatcc_fb_clear_parser@@Base+0x1470>
   2984c:	mov	r1, r0
   29850:	mov	r0, r4
   29854:	sub	sp, fp, #8
   29858:	pop	{r4, sl, fp, lr}
   2985c:	b	29e9c <__flatcc_fb_clear_parser@@Base+0x13ec>
   29860:	mov	r0, r4
   29864:	bl	289c4 <__flatcc_fb_parse@@Base+0x105c>
   29868:	mov	r0, r4
   2986c:	sub	sp, fp, #8
   29870:	pop	{r4, sl, fp, lr}
   29874:	b	29c24 <__flatcc_fb_clear_parser@@Base+0x1174>
   29878:	mov	r0, r4
   2987c:	bl	289c4 <__flatcc_fb_parse@@Base+0x105c>
   29880:	add	r1, r4, #400	; 0x190
   29884:	mov	r0, r4
   29888:	sub	sp, fp, #8
   2988c:	pop	{r4, sl, fp, lr}
   29890:	b	29e38 <__flatcc_fb_clear_parser@@Base+0x1388>
   29894:	mov	r0, r4
   29898:	bl	289c4 <__flatcc_fb_parse@@Base+0x105c>
   2989c:	mov	r0, r4
   298a0:	bl	2a0e4 <__flatcc_fb_clear_parser@@Base+0x1634>
   298a4:	mov	r1, r0
   298a8:	movw	r0, #64553	; 0xfc29
   298ac:	movt	r0, #65535	; 0xffff
   298b0:	add	r2, r0, #16
   298b4:	mov	r0, r4
   298b8:	sub	sp, fp, #8
   298bc:	pop	{r4, sl, fp, lr}
   298c0:	b	29f44 <__flatcc_fb_clear_parser@@Base+0x1494>
   298c4:	mov	r0, r4
   298c8:	bl	289c4 <__flatcc_fb_parse@@Base+0x105c>
   298cc:	add	r1, r4, #376	; 0x178
   298d0:	mov	r0, r4
   298d4:	sub	sp, fp, #8
   298d8:	pop	{r4, sl, fp, lr}
   298dc:	b	29cd0 <__flatcc_fb_clear_parser@@Base+0x1220>
   298e0:	mov	r0, r4
   298e4:	bl	289c4 <__flatcc_fb_parse@@Base+0x105c>
   298e8:	add	r1, r4, #360	; 0x168
   298ec:	mov	r0, r4
   298f0:	sub	sp, fp, #8
   298f4:	pop	{r4, sl, fp, lr}
   298f8:	b	29d68 <__flatcc_fb_clear_parser@@Base+0x12b8>
   298fc:	mov	r0, #1
   29900:	str	r0, [sp]
   29904:	movw	r2, #51236	; 0xc824
   29908:	movt	r2, #4
   2990c:	movw	r3, #50988	; 0xc72c
   29910:	movt	r3, #4
   29914:	b	29930 <__flatcc_fb_clear_parser@@Base+0xe80>
   29918:	mov	r0, #5
   2991c:	str	r0, [sp]
   29920:	movw	r2, #51326	; 0xc87e
   29924:	movt	r2, #4
   29928:	movw	r3, #51347	; 0xc893
   2992c:	movt	r3, #4
   29930:	mov	r0, r4
   29934:	bl	29bfc <__flatcc_fb_clear_parser@@Base+0x114c>
   29938:	sub	sp, fp, #8
   2993c:	pop	{r4, sl, fp, pc}
   29940:	movw	r2, #51353	; 0xc899
   29944:	movt	r2, #4
   29948:	mov	r0, r4
   2994c:	sub	sp, fp, #8
   29950:	pop	{r4, sl, fp, lr}
   29954:	b	28be4 <__flatcc_fb_clear_parser@@Base+0x134>
   29958:	ldr	r1, [r0]
   2995c:	cmp	r1, #0
   29960:	moveq	r2, #0
   29964:	streq	r2, [r0]
   29968:	bxeq	lr
   2996c:	mov	r3, #0
   29970:	mov	r2, r1
   29974:	ldr	r1, [r1]
   29978:	str	r3, [r2]
   2997c:	cmp	r1, #0
   29980:	mov	r3, r2
   29984:	bne	29970 <__flatcc_fb_clear_parser@@Base+0xec0>
   29988:	str	r2, [r0]
   2998c:	bx	lr
   29990:	ldr	r1, [r0]
   29994:	cmp	r1, #0
   29998:	moveq	r2, #0
   2999c:	streq	r2, [r0]
   299a0:	bxeq	lr
   299a4:	mov	r3, #0
   299a8:	mov	r2, r1
   299ac:	ldr	r1, [r1]
   299b0:	str	r3, [r2]
   299b4:	cmp	r1, #0
   299b8:	mov	r3, r2
   299bc:	bne	299a8 <__flatcc_fb_clear_parser@@Base+0xef8>
   299c0:	str	r2, [r0]
   299c4:	bx	lr
   299c8:	push	{r4, sl, fp, lr}
   299cc:	add	fp, sp, #8
   299d0:	ldr	r4, [r0, #40]	; 0x28
   299d4:	ldr	r3, [r4, #16]
   299d8:	mov	r2, #0
   299dc:	cmp	r3, r1
   299e0:	bne	299ec <__flatcc_fb_clear_parser@@Base+0xf3c>
   299e4:	bl	289c4 <__flatcc_fb_parse@@Base+0x105c>
   299e8:	mov	r2, r4
   299ec:	mov	r0, r2
   299f0:	pop	{r4, sl, fp, pc}
   299f4:	push	{r4, sl, fp, lr}
   299f8:	add	fp, sp, #8
   299fc:	ldr	r4, [r0, #40]	; 0x28
   29a00:	ldr	r3, [r4, #16]
   29a04:	cmp	r3, r1
   29a08:	bne	29a18 <__flatcc_fb_clear_parser@@Base+0xf68>
   29a0c:	bl	289c4 <__flatcc_fb_parse@@Base+0x105c>
   29a10:	mov	r0, r4
   29a14:	pop	{r4, sl, fp, pc}
   29a18:	mov	r1, r4
   29a1c:	bl	28be4 <__flatcc_fb_clear_parser@@Base+0x134>
   29a20:	mov	r4, #0
   29a24:	mov	r0, r4
   29a28:	pop	{r4, sl, fp, pc}
   29a2c:	push	{r4, r5, r6, sl, fp, lr}
   29a30:	add	fp, sp, #16
   29a34:	mov	r5, r1
   29a38:	mov	r4, r0
   29a3c:	ldr	r6, [r4, #40]	; 0x28
   29a40:	mov	r0, r6
   29a44:	bl	29694 <__flatcc_fb_clear_parser@@Base+0xbe4>
   29a48:	cmp	r0, #0
   29a4c:	popne	{r4, r5, r6, sl, fp, pc}
   29a50:	ldr	r6, [r6, #16]
   29a54:	mov	r0, r4
   29a58:	bl	289c4 <__flatcc_fb_parse@@Base+0x105c>
   29a5c:	cmp	r6, r5
   29a60:	bne	29a3c <__flatcc_fb_clear_parser@@Base+0xf8c>
   29a64:	mov	r0, #0
   29a68:	str	r0, [r4, #36]	; 0x24
   29a6c:	pop	{r4, r5, r6, sl, fp, pc}
   29a70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29a74:	add	fp, sp, #28
   29a78:	sub	sp, sp, #4
   29a7c:	mov	r4, r1
   29a80:	mov	r5, r0
   29a84:	mov	r0, #0
   29a88:	mov	r1, #2
   29a8c:	strh	r1, [r4, #8]
   29a90:	str	r0, [r4]
   29a94:	str	r0, [r4, #4]
   29a98:	mov	r6, #1
   29a9c:	movw	r8, #50946	; 0xc702
   29aa0:	movt	r8, #4
   29aa4:	movw	r9, #50988	; 0xc72c
   29aa8:	movt	r9, #4
   29aac:	movw	sl, #50990	; 0xc72e
   29ab0:	movt	sl, #4
   29ab4:	movw	r7, #50916	; 0xc6e4
   29ab8:	movt	r7, #4
   29abc:	b	29ac8 <__flatcc_fb_clear_parser@@Base+0x1018>
   29ac0:	mov	r0, r5
   29ac4:	bl	289c4 <__flatcc_fb_parse@@Base+0x105c>
   29ac8:	ldr	r1, [r5, #40]	; 0x28
   29acc:	ldr	r0, [r1, #16]
   29ad0:	sub	r0, r0, #6
   29ad4:	cmp	r0, #17
   29ad8:	bhi	29b80 <__flatcc_fb_clear_parser@@Base+0x10d0>
   29adc:	add	r2, pc, #0
   29ae0:	ldr	pc, [r2, r0, lsl #2]
   29ae4:	andeq	r9, r2, ip, lsr #22
   29ae8:	andeq	r9, r2, r0, lsl #23
   29aec:	andeq	r9, r2, r0, lsl #23
   29af0:	andeq	r9, r2, r0, lsl #23
   29af4:	andeq	r9, r2, r0, lsl #23
   29af8:	andeq	r9, r2, r0, lsl #23
   29afc:	andeq	r9, r2, r0, lsl #23
   29b00:	andeq	r9, r2, r0, lsl #23
   29b04:	andeq	r9, r2, r0, lsl #23
   29b08:	andeq	r9, r2, r0, lsl #23
   29b0c:	andeq	r9, r2, r0, lsl #23
   29b10:	andeq	r9, r2, r0, lsl #23
   29b14:	andeq	r9, r2, r8, asr #22
   29b18:	andeq	r9, r2, r0, lsl #23
   29b1c:	andeq	r9, r2, r8, asr fp
   29b20:	andeq	r9, r2, ip, ror #22
   29b24:	muleq	r2, r8, fp
   29b28:	muleq	r2, r8, fp
   29b2c:	strh	r6, [r4, #8]
   29b30:	str	r6, [sp]
   29b34:	mov	r0, r5
   29b38:	mov	r2, r8
   29b3c:	mov	r3, r9
   29b40:	bl	29bfc <__flatcc_fb_clear_parser@@Base+0x114c>
   29b44:	b	29ac0 <__flatcc_fb_clear_parser@@Base+0x1010>
   29b48:	strh	r6, [r4, #8]
   29b4c:	mov	r0, r5
   29b50:	mov	r2, sl
   29b54:	b	29b78 <__flatcc_fb_clear_parser@@Base+0x10c8>
   29b58:	ldr	r0, [r4]
   29b5c:	cmp	r0, #0
   29b60:	ldreq	r0, [r1]
   29b64:	streq	r0, [r4]
   29b68:	b	29ac0 <__flatcc_fb_clear_parser@@Base+0x1010>
   29b6c:	strh	r6, [r4, #8]
   29b70:	mov	r0, r5
   29b74:	mov	r2, r7
   29b78:	bl	28be4 <__flatcc_fb_clear_parser@@Base+0x134>
   29b7c:	b	29ac0 <__flatcc_fb_clear_parser@@Base+0x1010>
   29b80:	movw	r2, #51021	; 0xc74d
   29b84:	movt	r2, #4
   29b88:	mov	r0, r5
   29b8c:	bl	28be4 <__flatcc_fb_clear_parser@@Base+0x134>
   29b90:	mov	r0, #1
   29b94:	strh	r0, [r4, #8]
   29b98:	ldr	r0, [r4]
   29b9c:	cmp	r0, #0
   29ba0:	ldrne	r1, [r5, #40]	; 0x28
   29ba4:	ldrne	r1, [r1]
   29ba8:	subne	r0, r1, r0
   29bac:	strne	r0, [r4, #4]
   29bb0:	movw	r2, #51064	; 0xc778
   29bb4:	movt	r2, #4
   29bb8:	mov	r0, r5
   29bbc:	mov	r1, #22
   29bc0:	bl	299f4 <__flatcc_fb_clear_parser@@Base+0xf44>
   29bc4:	cmp	r0, #0
   29bc8:	moveq	r0, #1
   29bcc:	strheq	r0, [r4, #8]
   29bd0:	sub	sp, fp, #28
   29bd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29bd8:	push	{r4, sl, fp, lr}
   29bdc:	add	fp, sp, #8
   29be0:	mov	r4, r0
   29be4:	mov	r1, #24
   29be8:	bl	28c10 <__flatcc_fb_clear_parser@@Base+0x160>
   29bec:	ldr	r1, [r4, #352]	; 0x160
   29bf0:	str	r1, [r0]
   29bf4:	str	r0, [r4, #352]	; 0x160
   29bf8:	pop	{r4, sl, fp, pc}
   29bfc:	push	{fp, lr}
   29c00:	mov	fp, sp
   29c04:	sub	sp, sp, #8
   29c08:	str	r3, [sp]
   29c0c:	ldr	r3, [fp, #8]
   29c10:	str	r3, [sp, #4]
   29c14:	mov	r3, #0
   29c18:	bl	2742c <__flatcc_error_report@@Base>
   29c1c:	mov	sp, fp
   29c20:	pop	{fp, pc}
   29c24:	push	{r4, r5, fp, lr}
   29c28:	add	fp, sp, #8
   29c2c:	sub	sp, sp, #8
   29c30:	mov	r4, r0
   29c34:	mov	r0, #0
   29c38:	str	r0, [sp, #4]
   29c3c:	ldr	r5, [r4, #40]	; 0x28
   29c40:	mov	r0, r4
   29c44:	mov	r1, #59	; 0x3b
   29c48:	bl	299c8 <__flatcc_fb_clear_parser@@Base+0xf18>
   29c4c:	cmp	r5, #0
   29c50:	cmpne	r0, #0
   29c54:	bne	29c9c <__flatcc_fb_clear_parser@@Base+0x11ec>
   29c58:	ldr	r1, [r4, #40]	; 0x28
   29c5c:	ldr	r0, [r1, #16]
   29c60:	cmp	r0, #9
   29c64:	bne	29cac <__flatcc_fb_clear_parser@@Base+0x11fc>
   29c68:	add	r1, sp, #4
   29c6c:	mov	r0, r4
   29c70:	bl	2a57c <__flatcc_fb_clear_parser@@Base+0x1acc>
   29c74:	movw	r2, #51423	; 0xc8df
   29c78:	movt	r2, #4
   29c7c:	mov	r0, r4
   29c80:	mov	r1, #59	; 0x3b
   29c84:	mov	r3, r5
   29c88:	bl	2a610 <__flatcc_fb_clear_parser@@Base+0x1b60>
   29c8c:	ldr	r1, [sp, #4]
   29c90:	mov	r0, r4
   29c94:	bl	278fc <__flatcc_fb_init_parser@@Base+0x25c>
   29c98:	b	29ca0 <__flatcc_fb_clear_parser@@Base+0x11f0>
   29c9c:	mov	r0, #0
   29ca0:	str	r0, [r4, #544]	; 0x220
   29ca4:	sub	sp, fp, #8
   29ca8:	pop	{r4, r5, fp, pc}
   29cac:	movw	r2, #51391	; 0xc8bf
   29cb0:	movt	r2, #4
   29cb4:	mov	r0, r4
   29cb8:	bl	28be4 <__flatcc_fb_clear_parser@@Base+0x134>
   29cbc:	mov	r0, r4
   29cc0:	mov	r1, #59	; 0x3b
   29cc4:	bl	29a2c <__flatcc_fb_clear_parser@@Base+0xf7c>
   29cc8:	sub	sp, fp, #8
   29ccc:	pop	{r4, r5, fp, pc}
   29cd0:	push	{r4, r5, r6, r7, fp, lr}
   29cd4:	add	fp, sp, #16
   29cd8:	sub	sp, sp, #8
   29cdc:	mov	r5, r1
   29ce0:	mov	r4, r0
   29ce4:	ldrh	r0, [r1, #8]
   29ce8:	cmp	r0, #2
   29cec:	bne	29d10 <__flatcc_fb_clear_parser@@Base+0x1260>
   29cf0:	ldr	r1, [r4, #40]	; 0x28
   29cf4:	ldrd	r6, [r5]
   29cf8:	str	r7, [sp]
   29cfc:	movw	r2, #51497	; 0xc929
   29d00:	movt	r2, #4
   29d04:	mov	r0, r4
   29d08:	mov	r3, r6
   29d0c:	bl	29bfc <__flatcc_fb_clear_parser@@Base+0x114c>
   29d10:	movw	r2, #51524	; 0xc944
   29d14:	movt	r2, #4
   29d18:	mov	r0, r4
   29d1c:	mov	r1, #19
   29d20:	bl	299f4 <__flatcc_fb_clear_parser@@Base+0xf44>
   29d24:	cmp	r0, #0
   29d28:	beq	29d54 <__flatcc_fb_clear_parser@@Base+0x12a4>
   29d2c:	mov	r0, r4
   29d30:	mov	r1, r5
   29d34:	bl	29a70 <__flatcc_fb_clear_parser@@Base+0xfc0>
   29d38:	movw	r2, #51563	; 0xc96b
   29d3c:	movt	r2, #4
   29d40:	mov	r0, r4
   29d44:	mov	r1, #59	; 0x3b
   29d48:	sub	sp, fp, #16
   29d4c:	pop	{r4, r5, r6, r7, fp, lr}
   29d50:	b	299f4 <__flatcc_fb_clear_parser@@Base+0xf44>
   29d54:	mov	r0, r4
   29d58:	mov	r1, #59	; 0x3b
   29d5c:	sub	sp, fp, #16
   29d60:	pop	{r4, r5, r6, r7, fp, lr}
   29d64:	b	29a2c <__flatcc_fb_clear_parser@@Base+0xf7c>
   29d68:	push	{r4, r5, r6, r7, fp, lr}
   29d6c:	add	fp, sp, #16
   29d70:	sub	sp, sp, #8
   29d74:	mov	r5, r1
   29d78:	mov	r4, r0
   29d7c:	ldrh	r0, [r1, #8]
   29d80:	cmp	r0, #0
   29d84:	beq	29da8 <__flatcc_fb_clear_parser@@Base+0x12f8>
   29d88:	ldr	r1, [r4, #40]	; 0x28
   29d8c:	ldrd	r6, [r5]
   29d90:	str	r7, [sp]
   29d94:	movw	r2, #51591	; 0xc987
   29d98:	movt	r2, #4
   29d9c:	mov	r0, r4
   29da0:	mov	r3, r6
   29da4:	bl	29bfc <__flatcc_fb_clear_parser@@Base+0x114c>
   29da8:	movw	r2, #51619	; 0xc9a3
   29dac:	movt	r2, #4
   29db0:	mov	r0, r4
   29db4:	mov	r1, #19
   29db8:	bl	299f4 <__flatcc_fb_clear_parser@@Base+0xf44>
   29dbc:	cmp	r0, #0
   29dc0:	beq	29e04 <__flatcc_fb_clear_parser@@Base+0x1354>
   29dc4:	ldr	r6, [r4, #40]	; 0x28
   29dc8:	mov	r0, r4
   29dcc:	mov	r1, r5
   29dd0:	bl	29a70 <__flatcc_fb_clear_parser@@Base+0xfc0>
   29dd4:	ldr	r0, [r5]
   29dd8:	cmp	r0, #0
   29ddc:	ldrne	r0, [r5, #4]
   29de0:	cmpne	r0, #4
   29de4:	bne	29e18 <__flatcc_fb_clear_parser@@Base+0x1368>
   29de8:	movw	r2, #51696	; 0xc9f0
   29dec:	movt	r2, #4
   29df0:	mov	r0, r4
   29df4:	mov	r1, #59	; 0x3b
   29df8:	sub	sp, fp, #16
   29dfc:	pop	{r4, r5, r6, r7, fp, lr}
   29e00:	b	299f4 <__flatcc_fb_clear_parser@@Base+0xf44>
   29e04:	mov	r0, r4
   29e08:	mov	r1, #59	; 0x3b
   29e0c:	sub	sp, fp, #16
   29e10:	pop	{r4, r5, r6, r7, fp, lr}
   29e14:	b	29a2c <__flatcc_fb_clear_parser@@Base+0xf7c>
   29e18:	mov	r0, #1
   29e1c:	strh	r0, [r5, #8]
   29e20:	movw	r2, #51659	; 0xc9cb
   29e24:	movt	r2, #4
   29e28:	mov	r0, r4
   29e2c:	mov	r1, r6
   29e30:	bl	28be4 <__flatcc_fb_clear_parser@@Base+0x134>
   29e34:	b	29de8 <__flatcc_fb_clear_parser@@Base+0x1338>
   29e38:	push	{r4, r5, r6, sl, fp, lr}
   29e3c:	add	fp, sp, #16
   29e40:	mov	r6, r1
   29e44:	mov	r5, r0
   29e48:	ldr	r4, [r0, #40]	; 0x28
   29e4c:	ldr	r0, [r1]
   29e50:	cmp	r0, #0
   29e54:	beq	29e6c <__flatcc_fb_clear_parser@@Base+0x13bc>
   29e58:	movw	r2, #51725	; 0xca0d
   29e5c:	movt	r2, #4
   29e60:	mov	r0, r5
   29e64:	mov	r1, r4
   29e68:	bl	28be4 <__flatcc_fb_clear_parser@@Base+0x134>
   29e6c:	mov	r0, r5
   29e70:	mov	r1, r6
   29e74:	bl	2a57c <__flatcc_fb_clear_parser@@Base+0x1acc>
   29e78:	ldr	r0, [r5, #544]	; 0x220
   29e7c:	str	r0, [r6, #8]
   29e80:	movw	r2, #51747	; 0xca23
   29e84:	movt	r2, #4
   29e88:	mov	r0, r5
   29e8c:	mov	r1, #59	; 0x3b
   29e90:	mov	r3, r4
   29e94:	pop	{r4, r5, r6, sl, fp, lr}
   29e98:	b	2a610 <__flatcc_fb_clear_parser@@Base+0x1b60>
   29e9c:	push	{r4, r5, r6, sl, fp, lr}
   29ea0:	add	fp, sp, #16
   29ea4:	sub	sp, sp, #8
   29ea8:	mov	r6, r1
   29eac:	mov	r4, r0
   29eb0:	ldr	r5, [r0, #40]	; 0x28
   29eb4:	movw	r2, #51784	; 0xca48
   29eb8:	movt	r2, #4
   29ebc:	mov	r1, #19
   29ec0:	bl	299f4 <__flatcc_fb_clear_parser@@Base+0xf44>
   29ec4:	cmp	r0, #0
   29ec8:	beq	29f04 <__flatcc_fb_clear_parser@@Base+0x1454>
   29ecc:	add	r1, r6, #8
   29ed0:	mov	r0, r4
   29ed4:	bl	29a70 <__flatcc_fb_clear_parser@@Base+0xfc0>
   29ed8:	ldr	r0, [r6, #12]
   29edc:	cmp	r0, #0
   29ee0:	bne	29f04 <__flatcc_fb_clear_parser@@Base+0x1454>
   29ee4:	mov	r0, #0
   29ee8:	str	r0, [sp]
   29eec:	movw	r2, #51818	; 0xca6a
   29ef0:	movt	r2, #4
   29ef4:	mov	r0, r4
   29ef8:	mov	r1, r5
   29efc:	mov	r3, #0
   29f00:	bl	29bfc <__flatcc_fb_clear_parser@@Base+0x114c>
   29f04:	movw	r2, #51849	; 0xca89
   29f08:	movt	r2, #4
   29f0c:	mov	r0, r4
   29f10:	mov	r1, #59	; 0x3b
   29f14:	sub	sp, fp, #16
   29f18:	pop	{r4, r5, r6, sl, fp, lr}
   29f1c:	b	299f4 <__flatcc_fb_clear_parser@@Base+0xf44>
   29f20:	push	{r4, sl, fp, lr}
   29f24:	add	fp, sp, #8
   29f28:	mov	r4, r0
   29f2c:	mov	r1, #32
   29f30:	bl	28c10 <__flatcc_fb_clear_parser@@Base+0x160>
   29f34:	ldr	r1, [r4, #356]	; 0x164
   29f38:	str	r1, [r0]
   29f3c:	str	r0, [r4, #356]	; 0x164
   29f40:	pop	{r4, sl, fp, pc}
   29f44:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   29f48:	add	fp, sp, #24
   29f4c:	mov	r5, r2
   29f50:	mov	r6, r1
   29f54:	mov	r4, r0
   29f58:	movw	r2, #51872	; 0xcaa0
   29f5c:	movt	r2, #4
   29f60:	mov	r1, #9
   29f64:	bl	299f4 <__flatcc_fb_clear_parser@@Base+0xf44>
   29f68:	cmp	r0, #0
   29f6c:	beq	29ff0 <__flatcc_fb_clear_parser@@Base+0x1540>
   29f70:	str	r0, [r6, #4]
   29f74:	mov	r0, r4
   29f78:	bl	2a660 <__flatcc_fb_clear_parser@@Base+0x1bb0>
   29f7c:	str	r0, [r6, #28]
   29f80:	movw	r2, #51907	; 0xcac3
   29f84:	movt	r2, #4
   29f88:	mov	r0, r4
   29f8c:	mov	r1, #123	; 0x7b
   29f90:	bl	299f4 <__flatcc_fb_clear_parser@@Base+0xf44>
   29f94:	cmp	r0, #0
   29f98:	beq	29ff0 <__flatcc_fb_clear_parser@@Base+0x1540>
   29f9c:	add	r6, r6, #20
   29fa0:	ldr	r8, [r4, #40]	; 0x28
   29fa4:	movw	r7, #64569	; 0xfc39
   29fa8:	movt	r7, #65535	; 0xffff
   29fac:	ldr	r0, [r4, #40]	; 0x28
   29fb0:	ldr	r0, [r0, #16]
   29fb4:	cmp	r0, #125	; 0x7d
   29fb8:	beq	2a000 <__flatcc_fb_clear_parser@@Base+0x1550>
   29fbc:	mov	r0, r4
   29fc0:	mov	r1, r6
   29fc4:	bl	2a854 <__flatcc_fb_clear_parser@@Base+0x1da4>
   29fc8:	mov	r1, r0
   29fcc:	mov	r0, r4
   29fd0:	cmp	r5, r7
   29fd4:	bne	29fe0 <__flatcc_fb_clear_parser@@Base+0x1530>
   29fd8:	bl	2a760 <__flatcc_fb_clear_parser@@Base+0x1cb0>
   29fdc:	b	29fe4 <__flatcc_fb_clear_parser@@Base+0x1534>
   29fe0:	bl	2a8a4 <__flatcc_fb_clear_parser@@Base+0x1df4>
   29fe4:	ldr	r0, [r4, #108]	; 0x6c
   29fe8:	cmp	r0, #9
   29fec:	ble	29fac <__flatcc_fb_clear_parser@@Base+0x14fc>
   29ff0:	mov	r0, r4
   29ff4:	mov	r1, #125	; 0x7d
   29ff8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   29ffc:	b	29a2c <__flatcc_fb_clear_parser@@Base+0xf7c>
   2a000:	mov	r0, r4
   2a004:	mov	r1, #125	; 0x7d
   2a008:	bl	299c8 <__flatcc_fb_clear_parser@@Base+0xf18>
   2a00c:	cmp	r8, #0
   2a010:	beq	2a034 <__flatcc_fb_clear_parser@@Base+0x1584>
   2a014:	cmp	r0, #0
   2a018:	bne	2a034 <__flatcc_fb_clear_parser@@Base+0x1584>
   2a01c:	ldr	r1, [r4, #40]	; 0x28
   2a020:	movw	r2, #51932	; 0xcadc
   2a024:	movt	r2, #4
   2a028:	mov	r0, r4
   2a02c:	mov	r3, r8
   2a030:	bl	28bec <__flatcc_fb_clear_parser@@Base+0x13c>
   2a034:	mov	r0, r6
   2a038:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   2a03c:	b	29990 <__flatcc_fb_clear_parser@@Base+0xee0>
   2a040:	push	{r4, r5, fp, lr}
   2a044:	add	fp, sp, #8
   2a048:	mov	r4, r0
   2a04c:	mov	r1, #128	; 0x80
   2a050:	bl	28c10 <__flatcc_fb_clear_parser@@Base+0x160>
   2a054:	mov	r5, r0
   2a058:	ldr	r0, [r4, #392]	; 0x188
   2a05c:	mov	r1, #1
   2a060:	strh	r1, [r5, #8]
   2a064:	str	r0, [r5]
   2a068:	str	r5, [r4, #392]	; 0x188
   2a06c:	ldr	r0, [r4, #544]	; 0x220
   2a070:	str	r0, [r5, #12]
   2a074:	add	r0, r4, #36	; 0x24
   2a078:	bl	29990 <__flatcc_fb_clear_parser@@Base+0xee0>
   2a07c:	ldr	r0, [r4, #36]	; 0x24
   2a080:	str	r0, [r5, #32]
   2a084:	mov	r0, #0
   2a088:	str	r0, [r4, #36]	; 0x24
   2a08c:	mov	r0, r5
   2a090:	pop	{r4, r5, fp, pc}
   2a094:	push	{r4, r5, r6, sl, fp, lr}
   2a098:	add	fp, sp, #16
   2a09c:	mov	r4, r0
   2a0a0:	mov	r1, #128	; 0x80
   2a0a4:	bl	28c10 <__flatcc_fb_clear_parser@@Base+0x160>
   2a0a8:	mov	r5, r0
   2a0ac:	ldr	r0, [r4, #392]	; 0x188
   2a0b0:	mov	r6, #0
   2a0b4:	strh	r6, [r5, #8]
   2a0b8:	str	r0, [r5]
   2a0bc:	str	r5, [r4, #392]	; 0x188
   2a0c0:	ldr	r0, [r4, #544]	; 0x220
   2a0c4:	str	r0, [r5, #12]
   2a0c8:	add	r0, r4, #36	; 0x24
   2a0cc:	bl	29990 <__flatcc_fb_clear_parser@@Base+0xee0>
   2a0d0:	ldr	r0, [r4, #36]	; 0x24
   2a0d4:	str	r0, [r5, #32]
   2a0d8:	str	r6, [r4, #36]	; 0x24
   2a0dc:	mov	r0, r5
   2a0e0:	pop	{r4, r5, r6, sl, fp, pc}
   2a0e4:	push	{r4, r5, fp, lr}
   2a0e8:	add	fp, sp, #8
   2a0ec:	mov	r4, r0
   2a0f0:	mov	r1, #128	; 0x80
   2a0f4:	bl	28c10 <__flatcc_fb_clear_parser@@Base+0x160>
   2a0f8:	mov	r5, r0
   2a0fc:	ldr	r0, [r4, #392]	; 0x188
   2a100:	mov	r1, #2
   2a104:	strh	r1, [r5, #8]
   2a108:	str	r0, [r5]
   2a10c:	str	r5, [r4, #392]	; 0x188
   2a110:	ldr	r0, [r4, #544]	; 0x220
   2a114:	str	r0, [r5, #12]
   2a118:	add	r0, r4, #36	; 0x24
   2a11c:	bl	29990 <__flatcc_fb_clear_parser@@Base+0xee0>
   2a120:	ldr	r0, [r4, #36]	; 0x24
   2a124:	str	r0, [r5, #32]
   2a128:	mov	r0, #0
   2a12c:	str	r0, [r4, #36]	; 0x24
   2a130:	mov	r0, r5
   2a134:	pop	{r4, r5, fp, pc}
   2a138:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a13c:	add	fp, sp, #28
   2a140:	sub	sp, sp, #4
   2a144:	mov	r5, r1
   2a148:	mov	r4, r0
   2a14c:	movw	r2, #52800	; 0xce40
   2a150:	movt	r2, #4
   2a154:	mov	r1, #9
   2a158:	bl	299f4 <__flatcc_fb_clear_parser@@Base+0xf44>
   2a15c:	str	r0, [r5, #4]
   2a160:	cmp	r0, #0
   2a164:	beq	2a2b4 <__flatcc_fb_clear_parser@@Base+0x1804>
   2a168:	mov	r0, r4
   2a16c:	mov	r1, #58	; 0x3a
   2a170:	bl	299c8 <__flatcc_fb_clear_parser@@Base+0xf18>
   2a174:	cmp	r0, #0
   2a178:	beq	2a1cc <__flatcc_fb_clear_parser@@Base+0x171c>
   2a17c:	add	r1, r5, #40	; 0x28
   2a180:	mov	r0, r4
   2a184:	bl	2b048 <__flatcc_fb_clear_parser@@Base+0x2598>
   2a188:	ldr	r1, [r5, #40]	; 0x28
   2a18c:	ldrh	r0, [r5, #48]	; 0x30
   2a190:	cmp	r0, #8
   2a194:	bne	2a1bc <__flatcc_fb_clear_parser@@Base+0x170c>
   2a198:	ldr	r0, [r1, #16]
   2a19c:	add	r0, r0, #996	; 0x3e4
   2a1a0:	cmp	r0, #21
   2a1a4:	bhi	2a1cc <__flatcc_fb_clear_parser@@Base+0x171c>
   2a1a8:	mov	r2, #1
   2a1ac:	movw	r3, #2051	; 0x803
   2a1b0:	movt	r3, #32
   2a1b4:	tst	r3, r2, lsl r0
   2a1b8:	beq	2a1cc <__flatcc_fb_clear_parser@@Base+0x171c>
   2a1bc:	movw	r2, #52837	; 0xce65
   2a1c0:	movt	r2, #4
   2a1c4:	mov	r0, r4
   2a1c8:	bl	28be4 <__flatcc_fb_clear_parser@@Base+0x134>
   2a1cc:	mov	r0, r4
   2a1d0:	bl	2a660 <__flatcc_fb_clear_parser@@Base+0x1bb0>
   2a1d4:	str	r0, [r5, #28]
   2a1d8:	movw	r2, #52860	; 0xce7c
   2a1dc:	movt	r2, #4
   2a1e0:	mov	r0, r4
   2a1e4:	mov	r1, #123	; 0x7b
   2a1e8:	bl	299f4 <__flatcc_fb_clear_parser@@Base+0xf44>
   2a1ec:	cmp	r0, #0
   2a1f0:	beq	2a2b4 <__flatcc_fb_clear_parser@@Base+0x1804>
   2a1f4:	mov	r9, r0
   2a1f8:	movw	r2, #52890	; 0xce9a
   2a1fc:	movt	r2, #4
   2a200:	mov	r0, r4
   2a204:	mov	r1, #9
   2a208:	bl	299f4 <__flatcc_fb_clear_parser@@Base+0xf44>
   2a20c:	cmp	r0, #0
   2a210:	beq	2a2b4 <__flatcc_fb_clear_parser@@Base+0x1804>
   2a214:	mov	r6, r0
   2a218:	add	r5, r5, #20
   2a21c:	mov	r8, #0
   2a220:	movw	sl, #52890	; 0xce9a
   2a224:	movt	sl, #4
   2a228:	ldr	r0, [r4, #108]	; 0x6c
   2a22c:	cmp	r0, #9
   2a230:	bgt	2a2b4 <__flatcc_fb_clear_parser@@Base+0x1804>
   2a234:	mov	r0, r4
   2a238:	mov	r1, r5
   2a23c:	bl	2a854 <__flatcc_fb_clear_parser@@Base+0x1da4>
   2a240:	mov	r7, r0
   2a244:	str	r6, [r0, #4]
   2a248:	mov	r0, r4
   2a24c:	mov	r1, #61	; 0x3d
   2a250:	bl	299c8 <__flatcc_fb_clear_parser@@Base+0xf18>
   2a254:	cmp	r0, #0
   2a258:	beq	2a274 <__flatcc_fb_clear_parser@@Base+0x17c4>
   2a25c:	add	r1, r7, #48	; 0x30
   2a260:	mov	r0, r4
   2a264:	mov	r2, #0
   2a268:	movw	r3, #52917	; 0xceb5
   2a26c:	movt	r3, #4
   2a270:	bl	2a97c <__flatcc_fb_clear_parser@@Base+0x1ecc>
   2a274:	mov	r0, r4
   2a278:	mov	r1, #44	; 0x2c
   2a27c:	bl	299c8 <__flatcc_fb_clear_parser@@Base+0xf18>
   2a280:	cmp	r0, #0
   2a284:	ldrne	r0, [r4, #40]	; 0x28
   2a288:	ldrne	r0, [r0, #16]
   2a28c:	cmpne	r0, #125	; 0x7d
   2a290:	beq	2a2c8 <__flatcc_fb_clear_parser@@Base+0x1818>
   2a294:	str	r8, [r4, #36]	; 0x24
   2a298:	mov	r0, r4
   2a29c:	mov	r1, #9
   2a2a0:	mov	r2, sl
   2a2a4:	bl	299f4 <__flatcc_fb_clear_parser@@Base+0xf44>
   2a2a8:	mov	r6, r0
   2a2ac:	cmp	r0, #0
   2a2b0:	bne	2a228 <__flatcc_fb_clear_parser@@Base+0x1778>
   2a2b4:	mov	r0, r4
   2a2b8:	mov	r1, #125	; 0x7d
   2a2bc:	sub	sp, fp, #28
   2a2c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a2c4:	b	29a2c <__flatcc_fb_clear_parser@@Base+0xf7c>
   2a2c8:	movw	r2, #52944	; 0xced0
   2a2cc:	movt	r2, #4
   2a2d0:	mov	r0, r4
   2a2d4:	mov	r1, #125	; 0x7d
   2a2d8:	mov	r3, r9
   2a2dc:	bl	2a610 <__flatcc_fb_clear_parser@@Base+0x1b60>
   2a2e0:	mov	r0, r5
   2a2e4:	sub	sp, fp, #28
   2a2e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a2ec:	b	29990 <__flatcc_fb_clear_parser@@Base+0xee0>
   2a2f0:	push	{r4, r5, fp, lr}
   2a2f4:	add	fp, sp, #8
   2a2f8:	mov	r4, r0
   2a2fc:	mov	r1, #128	; 0x80
   2a300:	bl	28c10 <__flatcc_fb_clear_parser@@Base+0x160>
   2a304:	mov	r5, r0
   2a308:	ldr	r0, [r4, #392]	; 0x188
   2a30c:	mov	r1, #3
   2a310:	strh	r1, [r5, #8]
   2a314:	str	r0, [r5]
   2a318:	str	r5, [r4, #392]	; 0x188
   2a31c:	ldr	r0, [r4, #544]	; 0x220
   2a320:	str	r0, [r5, #12]
   2a324:	add	r0, r4, #36	; 0x24
   2a328:	bl	29990 <__flatcc_fb_clear_parser@@Base+0xee0>
   2a32c:	ldr	r0, [r4, #36]	; 0x24
   2a330:	str	r0, [r5, #32]
   2a334:	mov	r0, #0
   2a338:	str	r0, [r4, #36]	; 0x24
   2a33c:	mov	r0, r5
   2a340:	pop	{r4, r5, fp, pc}
   2a344:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a348:	add	fp, sp, #28
   2a34c:	sub	sp, sp, #4
   2a350:	mov	r6, r1
   2a354:	mov	r4, r0
   2a358:	movw	r2, #52978	; 0xcef2
   2a35c:	movt	r2, #4
   2a360:	mov	r1, #9
   2a364:	bl	299f4 <__flatcc_fb_clear_parser@@Base+0xf44>
   2a368:	str	r0, [r6, #4]
   2a36c:	cmp	r0, #0
   2a370:	beq	2a4dc <__flatcc_fb_clear_parser@@Base+0x1a2c>
   2a374:	mov	r0, r4
   2a378:	bl	2a660 <__flatcc_fb_clear_parser@@Base+0x1bb0>
   2a37c:	str	r0, [r6, #28]
   2a380:	movw	r2, #53016	; 0xcf18
   2a384:	movt	r2, #4
   2a388:	mov	r0, r4
   2a38c:	mov	r1, #123	; 0x7b
   2a390:	bl	299f4 <__flatcc_fb_clear_parser@@Base+0xf44>
   2a394:	cmp	r0, #0
   2a398:	beq	2a4dc <__flatcc_fb_clear_parser@@Base+0x1a2c>
   2a39c:	mov	r5, r0
   2a3a0:	ldr	r7, [r4, #40]	; 0x28
   2a3a4:	ldr	r0, [r7, #16]
   2a3a8:	cmp	r0, #9
   2a3ac:	bne	2a4c8 <__flatcc_fb_clear_parser@@Base+0x1a18>
   2a3b0:	add	r6, r6, #20
   2a3b4:	mov	sl, sp
   2a3b8:	ldr	r0, [r4, #108]	; 0x6c
   2a3bc:	cmp	r0, #9
   2a3c0:	bgt	2a4dc <__flatcc_fb_clear_parser@@Base+0x1a2c>
   2a3c4:	mov	r0, r4
   2a3c8:	mov	r1, r6
   2a3cc:	bl	2a854 <__flatcc_fb_clear_parser@@Base+0x1da4>
   2a3d0:	mov	r9, r0
   2a3d4:	mov	r0, r4
   2a3d8:	mov	r1, sl
   2a3dc:	bl	2a57c <__flatcc_fb_clear_parser@@Base+0x1acc>
   2a3e0:	ldr	r0, [sp]
   2a3e4:	mov	r1, #12
   2a3e8:	strh	r1, [r9, #24]
   2a3ec:	str	r0, [r9, #16]
   2a3f0:	ldr	r0, [sp]
   2a3f4:	ldr	r1, [r0]
   2a3f8:	cmp	r1, #0
   2a3fc:	beq	2a414 <__flatcc_fb_clear_parser@@Base+0x1964>
   2a400:	mov	r0, r1
   2a404:	ldr	r1, [r1]
   2a408:	cmp	r1, #0
   2a40c:	bne	2a400 <__flatcc_fb_clear_parser@@Base+0x1950>
   2a410:	str	r0, [sp]
   2a414:	ldr	r0, [r0, #4]
   2a418:	str	r0, [r9, #4]
   2a41c:	mov	r0, r4
   2a420:	mov	r1, #58	; 0x3a
   2a424:	bl	299c8 <__flatcc_fb_clear_parser@@Base+0xf18>
   2a428:	cmp	r0, #0
   2a42c:	beq	2a464 <__flatcc_fb_clear_parser@@Base+0x19b4>
   2a430:	add	r8, r9, #16
   2a434:	ldr	r0, [r8]
   2a438:	ldr	r0, [r0]
   2a43c:	cmp	r0, #0
   2a440:	beq	2a458 <__flatcc_fb_clear_parser@@Base+0x19a8>
   2a444:	mov	r0, r4
   2a448:	mov	r1, r7
   2a44c:	movw	r2, #53075	; 0xcf53
   2a450:	movt	r2, #4
   2a454:	bl	28be4 <__flatcc_fb_clear_parser@@Base+0x134>
   2a458:	mov	r0, r4
   2a45c:	mov	r1, r8
   2a460:	bl	2b048 <__flatcc_fb_clear_parser@@Base+0x2598>
   2a464:	mov	r0, r4
   2a468:	mov	r1, #61	; 0x3d
   2a46c:	bl	299c8 <__flatcc_fb_clear_parser@@Base+0xf18>
   2a470:	cmp	r0, #0
   2a474:	beq	2a490 <__flatcc_fb_clear_parser@@Base+0x19e0>
   2a478:	add	r1, r9, #48	; 0x30
   2a47c:	mov	r0, r4
   2a480:	mov	r2, #0
   2a484:	movw	r3, #52917	; 0xceb5
   2a488:	movt	r3, #4
   2a48c:	bl	2a97c <__flatcc_fb_clear_parser@@Base+0x1ecc>
   2a490:	mov	r0, r4
   2a494:	mov	r1, #44	; 0x2c
   2a498:	bl	299c8 <__flatcc_fb_clear_parser@@Base+0xf18>
   2a49c:	cmp	r0, #0
   2a4a0:	ldrne	r0, [r4, #40]	; 0x28
   2a4a4:	ldrne	r0, [r0, #16]
   2a4a8:	cmpne	r0, #125	; 0x7d
   2a4ac:	beq	2a4ec <__flatcc_fb_clear_parser@@Base+0x1a3c>
   2a4b0:	mov	r0, #0
   2a4b4:	str	r0, [r4, #36]	; 0x24
   2a4b8:	ldr	r7, [r4, #40]	; 0x28
   2a4bc:	ldr	r0, [r7, #16]
   2a4c0:	cmp	r0, #9
   2a4c4:	beq	2a3b8 <__flatcc_fb_clear_parser@@Base+0x1908>
   2a4c8:	movw	r2, #53047	; 0xcf37
   2a4cc:	movt	r2, #4
   2a4d0:	mov	r0, r4
   2a4d4:	mov	r1, r7
   2a4d8:	bl	28be4 <__flatcc_fb_clear_parser@@Base+0x134>
   2a4dc:	mov	r0, r4
   2a4e0:	bl	2b1e8 <__flatcc_fb_clear_parser@@Base+0x2738>
   2a4e4:	sub	sp, fp, #28
   2a4e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a4ec:	movw	r2, #53132	; 0xcf8c
   2a4f0:	movt	r2, #4
   2a4f4:	mov	r0, r4
   2a4f8:	mov	r1, #125	; 0x7d
   2a4fc:	mov	r3, r5
   2a500:	bl	2a610 <__flatcc_fb_clear_parser@@Base+0x1b60>
   2a504:	mov	r0, r6
   2a508:	bl	29990 <__flatcc_fb_clear_parser@@Base+0xee0>
   2a50c:	mov	r0, r4
   2a510:	mov	r1, r6
   2a514:	bl	2a854 <__flatcc_fb_clear_parser@@Base+0x1da4>
   2a518:	add	r1, r4, #68	; 0x44
   2a51c:	str	r1, [r0, #4]
   2a520:	sub	sp, fp, #28
   2a524:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a528:	push	{r4, r5, fp, lr}
   2a52c:	add	fp, sp, #8
   2a530:	mov	r4, r0
   2a534:	mov	r1, #128	; 0x80
   2a538:	bl	28c10 <__flatcc_fb_clear_parser@@Base+0x160>
   2a53c:	mov	r5, r0
   2a540:	ldr	r0, [r4, #392]	; 0x188
   2a544:	mov	r1, #4
   2a548:	strh	r1, [r5, #8]
   2a54c:	str	r0, [r5]
   2a550:	str	r5, [r4, #392]	; 0x188
   2a554:	ldr	r0, [r4, #544]	; 0x220
   2a558:	str	r0, [r5, #12]
   2a55c:	add	r0, r4, #36	; 0x24
   2a560:	bl	29990 <__flatcc_fb_clear_parser@@Base+0xee0>
   2a564:	ldr	r0, [r4, #36]	; 0x24
   2a568:	str	r0, [r5, #32]
   2a56c:	mov	r0, #0
   2a570:	str	r0, [r4, #36]	; 0x24
   2a574:	mov	r0, r5
   2a578:	pop	{r4, r5, fp, pc}
   2a57c:	push	{r4, r5, r6, sl, fp, lr}
   2a580:	add	fp, sp, #16
   2a584:	mov	r5, r1
   2a588:	mov	r4, r0
   2a58c:	ldr	r1, [r0, #40]	; 0x28
   2a590:	bl	2a644 <__flatcc_fb_clear_parser@@Base+0x1b94>
   2a594:	str	r0, [r5]
   2a598:	mov	r0, r4
   2a59c:	bl	289c4 <__flatcc_fb_parse@@Base+0x105c>
   2a5a0:	ldr	r6, [r5]
   2a5a4:	mov	r0, r4
   2a5a8:	mov	r1, #46	; 0x2e
   2a5ac:	bl	299c8 <__flatcc_fb_clear_parser@@Base+0xf18>
   2a5b0:	cmp	r0, #0
   2a5b4:	popeq	{r4, r5, r6, sl, fp, pc}
   2a5b8:	ldr	r1, [r4, #40]	; 0x28
   2a5bc:	ldr	r0, [r1, #16]
   2a5c0:	cmp	r0, #9
   2a5c4:	bne	2a5fc <__flatcc_fb_clear_parser@@Base+0x1b4c>
   2a5c8:	mov	r0, r4
   2a5cc:	bl	2a644 <__flatcc_fb_clear_parser@@Base+0x1b94>
   2a5d0:	mov	r5, r0
   2a5d4:	str	r0, [r6]
   2a5d8:	mov	r0, r4
   2a5dc:	bl	289c4 <__flatcc_fb_parse@@Base+0x105c>
   2a5e0:	mov	r0, r4
   2a5e4:	mov	r1, #46	; 0x2e
   2a5e8:	bl	299c8 <__flatcc_fb_clear_parser@@Base+0xf18>
   2a5ec:	cmp	r0, #0
   2a5f0:	mov	r6, r5
   2a5f4:	bne	2a5b8 <__flatcc_fb_clear_parser@@Base+0x1b08>
   2a5f8:	pop	{r4, r5, r6, sl, fp, pc}
   2a5fc:	movw	r2, #51460	; 0xc904
   2a600:	movt	r2, #4
   2a604:	mov	r0, r4
   2a608:	pop	{r4, r5, r6, sl, fp, lr}
   2a60c:	b	28be4 <__flatcc_fb_clear_parser@@Base+0x134>
   2a610:	push	{fp, lr}
   2a614:	mov	fp, sp
   2a618:	mov	ip, r1
   2a61c:	mov	r1, #0
   2a620:	str	r1, [r0, #36]	; 0x24
   2a624:	ldr	r1, [r0, #40]	; 0x28
   2a628:	ldr	lr, [r1, #16]
   2a62c:	cmp	lr, ip
   2a630:	bne	2a63c <__flatcc_fb_clear_parser@@Base+0x1b8c>
   2a634:	pop	{fp, lr}
   2a638:	b	289c4 <__flatcc_fb_parse@@Base+0x105c>
   2a63c:	pop	{fp, lr}
   2a640:	b	28bec <__flatcc_fb_clear_parser@@Base+0x13c>
   2a644:	push	{r4, sl, fp, lr}
   2a648:	add	fp, sp, #8
   2a64c:	mov	r4, r1
   2a650:	mov	r1, #12
   2a654:	bl	28c10 <__flatcc_fb_clear_parser@@Base+0x160>
   2a658:	str	r4, [r0, #4]
   2a65c:	pop	{r4, sl, fp, pc}
   2a660:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a664:	add	fp, sp, #28
   2a668:	sub	sp, sp, #4
   2a66c:	mov	r4, r0
   2a670:	mov	r5, #0
   2a674:	str	r5, [sp]
   2a678:	mov	r1, #40	; 0x28
   2a67c:	bl	299c8 <__flatcc_fb_clear_parser@@Base+0xf18>
   2a680:	cmp	r0, #0
   2a684:	beq	2a754 <__flatcc_fb_clear_parser@@Base+0x1ca4>
   2a688:	mov	r9, r0
   2a68c:	mov	r0, r4
   2a690:	mov	r1, #9
   2a694:	bl	299c8 <__flatcc_fb_clear_parser@@Base+0xf18>
   2a698:	cmp	r0, #0
   2a69c:	beq	2a730 <__flatcc_fb_clear_parser@@Base+0x1c80>
   2a6a0:	mov	r7, r0
   2a6a4:	mov	r6, sp
   2a6a8:	movw	sl, #52005	; 0xcb25
   2a6ac:	movt	sl, #4
   2a6b0:	movw	r8, #51973	; 0xcb05
   2a6b4:	movt	r8, #4
   2a6b8:	mov	r0, r4
   2a6bc:	mov	r1, r6
   2a6c0:	bl	2a958 <__flatcc_fb_clear_parser@@Base+0x1ea8>
   2a6c4:	ldr	r5, [sp]
   2a6c8:	str	r7, [r5, #4]
   2a6cc:	mov	r0, r4
   2a6d0:	mov	r1, #58	; 0x3a
   2a6d4:	bl	299c8 <__flatcc_fb_clear_parser@@Base+0xf18>
   2a6d8:	cmp	r0, #0
   2a6dc:	beq	2a6f4 <__flatcc_fb_clear_parser@@Base+0x1c44>
   2a6e0:	add	r1, r5, #8
   2a6e4:	mov	r0, r4
   2a6e8:	mov	r2, #1
   2a6ec:	mov	r3, r8
   2a6f0:	bl	2a97c <__flatcc_fb_clear_parser@@Base+0x1ecc>
   2a6f4:	ldr	r0, [r4, #108]	; 0x6c
   2a6f8:	cmp	r0, #9
   2a6fc:	bgt	2a754 <__flatcc_fb_clear_parser@@Base+0x1ca4>
   2a700:	mov	r0, r4
   2a704:	mov	r1, #44	; 0x2c
   2a708:	bl	299c8 <__flatcc_fb_clear_parser@@Base+0xf18>
   2a70c:	cmp	r0, #0
   2a710:	beq	2a730 <__flatcc_fb_clear_parser@@Base+0x1c80>
   2a714:	mov	r0, r4
   2a718:	mov	r1, #9
   2a71c:	mov	r2, sl
   2a720:	bl	299f4 <__flatcc_fb_clear_parser@@Base+0xf44>
   2a724:	mov	r7, r0
   2a728:	cmp	r0, #0
   2a72c:	bne	2a6b8 <__flatcc_fb_clear_parser@@Base+0x1c08>
   2a730:	movw	r2, #52050	; 0xcb52
   2a734:	movt	r2, #4
   2a738:	mov	r0, r4
   2a73c:	mov	r1, #41	; 0x29
   2a740:	mov	r3, r9
   2a744:	bl	2a610 <__flatcc_fb_clear_parser@@Base+0x1b60>
   2a748:	mov	r0, sp
   2a74c:	bl	2ab68 <__flatcc_fb_clear_parser@@Base+0x20b8>
   2a750:	ldr	r5, [sp]
   2a754:	mov	r0, r5
   2a758:	sub	sp, fp, #28
   2a75c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a760:	push	{r4, r5, fp, lr}
   2a764:	add	fp, sp, #8
   2a768:	mov	r5, r1
   2a76c:	mov	r4, r0
   2a770:	movw	r2, #52290	; 0xcc42
   2a774:	movt	r2, #4
   2a778:	mov	r1, #9
   2a77c:	bl	299f4 <__flatcc_fb_clear_parser@@Base+0xf44>
   2a780:	cmp	r0, #0
   2a784:	beq	2a820 <__flatcc_fb_clear_parser@@Base+0x1d70>
   2a788:	str	r0, [r5, #4]
   2a78c:	movw	r2, #52317	; 0xcc5d
   2a790:	movt	r2, #4
   2a794:	mov	r0, r4
   2a798:	mov	r1, #40	; 0x28
   2a79c:	bl	299f4 <__flatcc_fb_clear_parser@@Base+0xf44>
   2a7a0:	cmp	r0, #0
   2a7a4:	beq	2a820 <__flatcc_fb_clear_parser@@Base+0x1d70>
   2a7a8:	add	r1, r5, #32
   2a7ac:	mov	r0, r4
   2a7b0:	bl	2b048 <__flatcc_fb_clear_parser@@Base+0x2598>
   2a7b4:	movw	r2, #52354	; 0xcc82
   2a7b8:	movt	r2, #4
   2a7bc:	mov	r0, r4
   2a7c0:	mov	r1, #41	; 0x29
   2a7c4:	bl	299f4 <__flatcc_fb_clear_parser@@Base+0xf44>
   2a7c8:	cmp	r0, #0
   2a7cc:	beq	2a820 <__flatcc_fb_clear_parser@@Base+0x1d70>
   2a7d0:	movw	r2, #52393	; 0xcca9
   2a7d4:	movt	r2, #4
   2a7d8:	mov	r0, r4
   2a7dc:	mov	r1, #58	; 0x3a
   2a7e0:	bl	299f4 <__flatcc_fb_clear_parser@@Base+0xf44>
   2a7e4:	cmp	r0, #0
   2a7e8:	beq	2a820 <__flatcc_fb_clear_parser@@Base+0x1d70>
   2a7ec:	add	r1, r5, #16
   2a7f0:	mov	r0, r4
   2a7f4:	bl	2b048 <__flatcc_fb_clear_parser@@Base+0x2598>
   2a7f8:	mov	r0, r4
   2a7fc:	mov	r1, #61	; 0x3d
   2a800:	bl	299c8 <__flatcc_fb_clear_parser@@Base+0xf18>
   2a804:	cmp	r0, #0
   2a808:	beq	2a82c <__flatcc_fb_clear_parser@@Base+0x1d7c>
   2a80c:	mov	r1, r0
   2a810:	movw	r2, #52444	; 0xccdc
   2a814:	movt	r2, #4
   2a818:	mov	r0, r4
   2a81c:	bl	28be4 <__flatcc_fb_clear_parser@@Base+0x134>
   2a820:	mov	r0, r4
   2a824:	pop	{r4, r5, fp, lr}
   2a828:	b	2b1e8 <__flatcc_fb_clear_parser@@Base+0x2738>
   2a82c:	mov	r0, r4
   2a830:	bl	2a660 <__flatcc_fb_clear_parser@@Base+0x1bb0>
   2a834:	str	r0, [r5, #64]	; 0x40
   2a838:	movw	r2, #52482	; 0xcd02
   2a83c:	movt	r2, #4
   2a840:	mov	r0, r4
   2a844:	mov	r1, #59	; 0x3b
   2a848:	mov	r3, #0
   2a84c:	pop	{r4, r5, fp, lr}
   2a850:	b	2a610 <__flatcc_fb_clear_parser@@Base+0x1b60>
   2a854:	push	{r4, r5, r6, sl, fp, lr}
   2a858:	add	fp, sp, #16
   2a85c:	mov	r4, r1
   2a860:	mov	r5, r0
   2a864:	mov	r1, #120	; 0x78
   2a868:	bl	28c10 <__flatcc_fb_clear_parser@@Base+0x160>
   2a86c:	mov	r6, r0
   2a870:	ldr	r0, [r4]
   2a874:	mov	r1, #5
   2a878:	strh	r1, [r6, #8]
   2a87c:	str	r0, [r6]
   2a880:	str	r6, [r4]
   2a884:	add	r0, r5, #36	; 0x24
   2a888:	bl	29990 <__flatcc_fb_clear_parser@@Base+0xee0>
   2a88c:	ldr	r0, [r5, #36]	; 0x24
   2a890:	str	r0, [r6, #68]	; 0x44
   2a894:	mov	r0, #0
   2a898:	str	r0, [r5, #36]	; 0x24
   2a89c:	mov	r0, r6
   2a8a0:	pop	{r4, r5, r6, sl, fp, pc}
   2a8a4:	push	{r4, r5, fp, lr}
   2a8a8:	add	fp, sp, #8
   2a8ac:	mov	r5, r1
   2a8b0:	mov	r4, r0
   2a8b4:	movw	r2, #52664	; 0xcdb8
   2a8b8:	movt	r2, #4
   2a8bc:	mov	r1, #9
   2a8c0:	bl	299f4 <__flatcc_fb_clear_parser@@Base+0xf44>
   2a8c4:	cmp	r0, #0
   2a8c8:	beq	2a94c <__flatcc_fb_clear_parser@@Base+0x1e9c>
   2a8cc:	str	r0, [r5, #4]
   2a8d0:	movw	r2, #52690	; 0xcdd2
   2a8d4:	movt	r2, #4
   2a8d8:	mov	r0, r4
   2a8dc:	mov	r1, #58	; 0x3a
   2a8e0:	bl	299f4 <__flatcc_fb_clear_parser@@Base+0xf44>
   2a8e4:	cmp	r0, #0
   2a8e8:	beq	2a94c <__flatcc_fb_clear_parser@@Base+0x1e9c>
   2a8ec:	add	r1, r5, #16
   2a8f0:	mov	r0, r4
   2a8f4:	bl	2b048 <__flatcc_fb_clear_parser@@Base+0x2598>
   2a8f8:	mov	r0, r4
   2a8fc:	mov	r1, #61	; 0x3d
   2a900:	bl	299c8 <__flatcc_fb_clear_parser@@Base+0xf18>
   2a904:	cmp	r0, #0
   2a908:	beq	2a924 <__flatcc_fb_clear_parser@@Base+0x1e74>
   2a90c:	add	r1, r5, #48	; 0x30
   2a910:	movw	r3, #52731	; 0xcdfb
   2a914:	movt	r3, #4
   2a918:	mov	r0, r4
   2a91c:	mov	r2, #2
   2a920:	bl	2a97c <__flatcc_fb_clear_parser@@Base+0x1ecc>
   2a924:	mov	r0, r4
   2a928:	bl	2a660 <__flatcc_fb_clear_parser@@Base+0x1bb0>
   2a92c:	str	r0, [r5, #64]	; 0x40
   2a930:	movw	r2, #52766	; 0xce1e
   2a934:	movt	r2, #4
   2a938:	mov	r0, r4
   2a93c:	mov	r1, #59	; 0x3b
   2a940:	mov	r3, #0
   2a944:	pop	{r4, r5, fp, lr}
   2a948:	b	2a610 <__flatcc_fb_clear_parser@@Base+0x1b60>
   2a94c:	mov	r0, r4
   2a950:	pop	{r4, r5, fp, lr}
   2a954:	b	2b1e8 <__flatcc_fb_clear_parser@@Base+0x2738>
   2a958:	push	{r4, sl, fp, lr}
   2a95c:	add	fp, sp, #8
   2a960:	mov	r4, r1
   2a964:	mov	r1, #24
   2a968:	bl	28c10 <__flatcc_fb_clear_parser@@Base+0x160>
   2a96c:	ldr	r1, [r4]
   2a970:	str	r1, [r0]
   2a974:	str	r0, [r4]
   2a978:	pop	{r4, sl, fp, pc}
   2a97c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2a980:	add	fp, sp, #24
   2a984:	mov	r8, r3
   2a988:	mov	r5, r2
   2a98c:	mov	r6, r1
   2a990:	mov	r4, r0
   2a994:	mov	r1, #45	; 0x2d
   2a998:	bl	299c8 <__flatcc_fb_clear_parser@@Base+0xf18>
   2a99c:	mov	r7, r0
   2a9a0:	ldr	r9, [r4, #40]	; 0x28
   2a9a4:	ldr	r0, [r9, #16]
   2a9a8:	sub	r1, r0, #9
   2a9ac:	cmp	r1, #10
   2a9b0:	bhi	2aa18 <__flatcc_fb_clear_parser@@Base+0x1f68>
   2a9b4:	add	r0, pc, #0
   2a9b8:	ldr	pc, [r0, r1, lsl #2]
   2a9bc:	andeq	sl, r2, r8, ror #19
   2a9c0:	andeq	sl, r2, r0, asr #20
   2a9c4:	andeq	sl, r2, r8, ror #20
   2a9c8:	ldrdeq	sl, [r2], -ip
   2a9cc:	ldrdeq	sl, [r2], -ip
   2a9d0:	muleq	r2, r0, sl
   2a9d4:	ldrdeq	sl, [r2], -ip
   2a9d8:	ldrdeq	sl, [r2], -ip
   2a9dc:	ldrdeq	sl, [r2], -ip
   2a9e0:	ldrdeq	sl, [r2], -ip
   2a9e4:			; <UNDEFINED> instruction: 0x0002aab8
   2a9e8:	mov	r0, r4
   2a9ec:	mov	r1, r6
   2a9f0:	bl	2a57c <__flatcc_fb_clear_parser@@Base+0x1acc>
   2a9f4:	mov	r0, #13
   2a9f8:	strh	r0, [r6, #8]
   2a9fc:	cmp	r7, #0
   2aa00:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   2aa04:	mov	r0, #1
   2aa08:	strh	r0, [r6, #8]
   2aa0c:	movw	r2, #52115	; 0xcb93
   2aa10:	movt	r2, #4
   2aa14:	b	2ab54 <__flatcc_fb_clear_parser@@Base+0x20a4>
   2aa18:	cmn	r0, #988	; 0x3dc
   2aa1c:	beq	2aaf0 <__flatcc_fb_clear_parser@@Base+0x2040>
   2aa20:	movw	r1, #64550	; 0xfc26
   2aa24:	movt	r1, #65535	; 0xffff
   2aa28:	cmp	r0, r1
   2aa2c:	bne	2aadc <__flatcc_fb_clear_parser@@Base+0x202c>
   2aa30:	mov	r0, #6
   2aa34:	strh	r0, [r6, #8]
   2aa38:	mov	r0, #0
   2aa3c:	b	2aafc <__flatcc_fb_clear_parser@@Base+0x204c>
   2aa40:	cmp	r7, #0
   2aa44:	mov	r3, r7
   2aa48:	movwne	r3, #1
   2aa4c:	mov	r0, r4
   2aa50:	mov	r1, r9
   2aa54:	mov	r2, r6
   2aa58:	bl	2ac20 <__flatcc_fb_clear_parser@@Base+0x2170>
   2aa5c:	cmp	r7, #0
   2aa60:	bne	2ab08 <__flatcc_fb_clear_parser@@Base+0x2058>
   2aa64:	b	2ab30 <__flatcc_fb_clear_parser@@Base+0x2080>
   2aa68:	cmp	r7, #0
   2aa6c:	mov	r3, r7
   2aa70:	movwne	r3, #1
   2aa74:	mov	r0, r4
   2aa78:	mov	r1, r9
   2aa7c:	mov	r2, r6
   2aa80:	bl	2aca0 <__flatcc_fb_clear_parser@@Base+0x21f0>
   2aa84:	cmp	r7, #0
   2aa88:	bne	2ab08 <__flatcc_fb_clear_parser@@Base+0x2058>
   2aa8c:	b	2ab30 <__flatcc_fb_clear_parser@@Base+0x2080>
   2aa90:	cmp	r7, #0
   2aa94:	mov	r3, r7
   2aa98:	movwne	r3, #1
   2aa9c:	mov	r0, r4
   2aaa0:	mov	r1, r9
   2aaa4:	mov	r2, r6
   2aaa8:	bl	2aba0 <__flatcc_fb_clear_parser@@Base+0x20f0>
   2aaac:	cmp	r7, #0
   2aab0:	bne	2ab08 <__flatcc_fb_clear_parser@@Base+0x2058>
   2aab4:	b	2ab30 <__flatcc_fb_clear_parser@@Base+0x2080>
   2aab8:	mov	r0, r4
   2aabc:	bl	289c4 <__flatcc_fb_parse@@Base+0x105c>
   2aac0:	mov	r0, r4
   2aac4:	mov	r1, r6
   2aac8:	bl	29a70 <__flatcc_fb_clear_parser@@Base+0xfc0>
   2aacc:	tst	r5, #1
   2aad0:	bne	2ab3c <__flatcc_fb_clear_parser@@Base+0x208c>
   2aad4:	mov	r0, #1
   2aad8:	strh	r0, [r6, #8]
   2aadc:	mov	r0, r4
   2aae0:	mov	r1, r9
   2aae4:	mov	r2, r8
   2aae8:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   2aaec:	b	28be4 <__flatcc_fb_clear_parser@@Base+0x134>
   2aaf0:	mov	r0, #6
   2aaf4:	strh	r0, [r6, #8]
   2aaf8:	mov	r0, #1
   2aafc:	strb	r0, [r6]
   2ab00:	cmp	r7, #0
   2ab04:	beq	2ab30 <__flatcc_fb_clear_parser@@Base+0x2080>
   2ab08:	ldrh	r0, [r6, #8]
   2ab0c:	cmp	r0, #6
   2ab10:	bne	2ab30 <__flatcc_fb_clear_parser@@Base+0x2080>
   2ab14:	mov	r0, #1
   2ab18:	strh	r0, [r6, #8]
   2ab1c:	movw	r2, #52145	; 0xcbb1
   2ab20:	movt	r2, #4
   2ab24:	mov	r0, r4
   2ab28:	mov	r1, r9
   2ab2c:	bl	28be4 <__flatcc_fb_clear_parser@@Base+0x134>
   2ab30:	mov	r0, r4
   2ab34:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   2ab38:	b	289c4 <__flatcc_fb_parse@@Base+0x105c>
   2ab3c:	cmp	r7, #0
   2ab40:	beq	2ab64 <__flatcc_fb_clear_parser@@Base+0x20b4>
   2ab44:	mov	r0, #1
   2ab48:	strh	r0, [r6, #8]
   2ab4c:	movw	r2, #52081	; 0xcb71
   2ab50:	movt	r2, #4
   2ab54:	mov	r0, r4
   2ab58:	mov	r1, r9
   2ab5c:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   2ab60:	b	28be4 <__flatcc_fb_clear_parser@@Base+0x134>
   2ab64:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2ab68:	ldr	r1, [r0]
   2ab6c:	cmp	r1, #0
   2ab70:	moveq	r2, #0
   2ab74:	streq	r2, [r0]
   2ab78:	bxeq	lr
   2ab7c:	mov	r3, #0
   2ab80:	mov	r2, r1
   2ab84:	ldr	r1, [r1]
   2ab88:	str	r3, [r2]
   2ab8c:	cmp	r1, #0
   2ab90:	mov	r3, r2
   2ab94:	bne	2ab80 <__flatcc_fb_clear_parser@@Base+0x20d0>
   2ab98:	str	r2, [r0]
   2ab9c:	bx	lr
   2aba0:	push	{r4, r5, r6, r7, fp, lr}
   2aba4:	add	fp, sp, #16
   2aba8:	sub	sp, sp, #8
   2abac:	mov	r5, r3
   2abb0:	mov	r4, r2
   2abb4:	mov	r6, r1
   2abb8:	mov	r7, r0
   2abbc:	mov	r0, #5
   2abc0:	strh	r0, [r2, #8]
   2abc4:	ldm	r1, {r0, r1}
   2abc8:	add	r3, sp, #4
   2abcc:	bl	2ad40 <__flatcc_fb_clear_parser@@Base+0x2290>
   2abd0:	ldr	r0, [sp, #4]
   2abd4:	cmp	r0, #0
   2abd8:	beq	2abf8 <__flatcc_fb_clear_parser@@Base+0x2148>
   2abdc:	mov	r0, #1
   2abe0:	strh	r0, [r4, #8]
   2abe4:	movw	r2, #52180	; 0xcbd4
   2abe8:	movt	r2, #4
   2abec:	mov	r0, r7
   2abf0:	mov	r1, r6
   2abf4:	bl	28be4 <__flatcc_fb_clear_parser@@Base+0x134>
   2abf8:	cmp	r5, #0
   2abfc:	beq	2ac18 <__flatcc_fb_clear_parser@@Base+0x2168>
   2ac00:	mov	r0, #4
   2ac04:	strh	r0, [r4, #8]
   2ac08:	ldrd	r0, [r4]
   2ac0c:	rsbs	r0, r0, #0
   2ac10:	rsc	r1, r1, #0
   2ac14:	strd	r0, [r4]
   2ac18:	sub	sp, fp, #16
   2ac1c:	pop	{r4, r5, r6, r7, fp, pc}
   2ac20:	push	{r4, r5, r6, r7, fp, lr}
   2ac24:	add	fp, sp, #16
   2ac28:	sub	sp, sp, #8
   2ac2c:	mov	r5, r3
   2ac30:	mov	r4, r2
   2ac34:	mov	r6, r1
   2ac38:	mov	r7, r0
   2ac3c:	mov	r0, #5
   2ac40:	strh	r0, [r2, #8]
   2ac44:	ldm	r1, {r0, r1}
   2ac48:	add	r3, sp, #4
   2ac4c:	bl	2aef4 <__flatcc_fb_clear_parser@@Base+0x2444>
   2ac50:	ldr	r0, [sp, #4]
   2ac54:	cmp	r0, #0
   2ac58:	beq	2ac78 <__flatcc_fb_clear_parser@@Base+0x21c8>
   2ac5c:	mov	r0, #1
   2ac60:	strh	r0, [r4, #8]
   2ac64:	movw	r2, #52207	; 0xcbef
   2ac68:	movt	r2, #4
   2ac6c:	mov	r0, r7
   2ac70:	mov	r1, r6
   2ac74:	bl	28be4 <__flatcc_fb_clear_parser@@Base+0x134>
   2ac78:	cmp	r5, #0
   2ac7c:	beq	2ac98 <__flatcc_fb_clear_parser@@Base+0x21e8>
   2ac80:	mov	r0, #4
   2ac84:	strh	r0, [r4, #8]
   2ac88:	ldrd	r0, [r4]
   2ac8c:	rsbs	r0, r0, #0
   2ac90:	rsc	r1, r1, #0
   2ac94:	strd	r0, [r4]
   2ac98:	sub	sp, fp, #16
   2ac9c:	pop	{r4, r5, r6, r7, fp, pc}
   2aca0:	push	{r4, r5, r6, r7, fp, lr}
   2aca4:	add	fp, sp, #16
   2aca8:	sub	sp, sp, #8
   2acac:	mov	r7, r3
   2acb0:	mov	r5, r2
   2acb4:	mov	r4, r1
   2acb8:	mov	r6, r0
   2acbc:	mov	r0, #3
   2acc0:	strh	r0, [r2, #8]
   2acc4:	ldr	r0, [r1]
   2acc8:	add	r1, sp, #4
   2accc:	bl	148c0 <strtod@plt>
   2acd0:	vstr	d0, [r5]
   2acd4:	ldm	r4, {r0, r1}
   2acd8:	add	r1, r0, r1
   2acdc:	ldr	r2, [sp, #4]
   2ace0:	cmp	r2, r1
   2ace4:	beq	2acfc <__flatcc_fb_clear_parser@@Base+0x224c>
   2ace8:	mov	r0, #1
   2acec:	strh	r0, [r5, #8]
   2acf0:	movw	r2, #52230	; 0xcc06
   2acf4:	movt	r2, #4
   2acf8:	b	2ad18 <__flatcc_fb_clear_parser@@Base+0x2268>
   2acfc:	ldrb	r0, [r0]
   2ad00:	cmp	r0, #46	; 0x2e
   2ad04:	bne	2ad2c <__flatcc_fb_clear_parser@@Base+0x227c>
   2ad08:	mov	r0, #1
   2ad0c:	strh	r0, [r5, #8]
   2ad10:	movw	r2, #52251	; 0xcc1b
   2ad14:	movt	r2, #4
   2ad18:	mov	r0, r6
   2ad1c:	mov	r1, r4
   2ad20:	bl	28be4 <__flatcc_fb_clear_parser@@Base+0x134>
   2ad24:	sub	sp, fp, #16
   2ad28:	pop	{r4, r5, r6, r7, fp, pc}
   2ad2c:	cmp	r7, #0
   2ad30:	vnegne.f64	d16, d0
   2ad34:	vstrne	d16, [r5]
   2ad38:	sub	sp, fp, #16
   2ad3c:	pop	{r4, r5, r6, r7, fp, pc}
   2ad40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ad44:	add	fp, sp, #28
   2ad48:	sub	sp, sp, #12
   2ad4c:	add	ip, sp, #8
   2ad50:	cmp	r3, #0
   2ad54:	movne	ip, r3
   2ad58:	cmp	r1, #0
   2ad5c:	beq	2ae50 <__flatcc_fb_clear_parser@@Base+0x23a0>
   2ad60:	add	lr, r0, r1
   2ad64:	ldrb	sl, [r0]
   2ad68:	sub	r1, sl, #45	; 0x2d
   2ad6c:	clz	r1, r1
   2ad70:	lsr	r5, r1, #5
   2ad74:	add	r4, r0, r5
   2ad78:	sub	r1, lr, r4
   2ad7c:	mvn	r6, #3
   2ad80:	cmp	r1, #2
   2ad84:	blt	2ae54 <__flatcc_fb_clear_parser@@Base+0x23a4>
   2ad88:	ldrb	r1, [r4]
   2ad8c:	cmp	r1, #48	; 0x30
   2ad90:	bne	2ae54 <__flatcc_fb_clear_parser@@Base+0x23a4>
   2ad94:	ldrb	r1, [r4, #1]
   2ad98:	orr	r1, r1, #32
   2ad9c:	cmp	r1, #120	; 0x78
   2ada0:	bne	2ae54 <__flatcc_fb_clear_parser@@Base+0x23a4>
   2ada4:	add	r3, r4, #2
   2ada8:	sub	r1, lr, r3
   2adac:	cmp	r1, #16
   2adb0:	mov	r1, lr
   2adb4:	addgt	r1, r4, #18
   2adb8:	cmp	r3, r1
   2adbc:	beq	2ae78 <__flatcc_fb_clear_parser@@Base+0x23c8>
   2adc0:	str	r2, [sp, #4]
   2adc4:	str	r5, [sp]
   2adc8:	rsb	r3, r5, #0
   2adcc:	sub	r0, r3, r0
   2add0:	add	r7, r1, r0
   2add4:	mov	r0, #0
   2add8:	mov	r6, #2
   2addc:	mov	r5, #0
   2ade0:	mvn	r1, #86	; 0x56
   2ade4:	adds	r8, r1, #39	; 0x27
   2ade8:	mvn	r1, #0
   2adec:	adc	r2, r1, #0
   2adf0:	ldrb	r3, [r4, r6]
   2adf4:	sub	r9, r3, #48	; 0x30
   2adf8:	uxtb	r1, r9
   2adfc:	cmp	r1, #10
   2ae00:	bcc	2ae20 <__flatcc_fb_clear_parser@@Base+0x2370>
   2ae04:	orr	r3, r3, #32
   2ae08:	sub	r1, r3, #97	; 0x61
   2ae0c:	uxtb	r1, r1
   2ae10:	cmp	r1, #5
   2ae14:	mvn	r8, #86	; 0x56
   2ae18:	mvn	r2, #0
   2ae1c:	bhi	2ae60 <__flatcc_fb_clear_parser@@Base+0x23b0>
   2ae20:	lsl	r1, r5, #4
   2ae24:	orr	r1, r1, r0, lsr #28
   2ae28:	adds	r0, r8, r0, lsl #4
   2ae2c:	adc	r1, r1, r2
   2ae30:	adds	r0, r0, r3
   2ae34:	adc	r5, r1, #0
   2ae38:	add	r6, r6, #1
   2ae3c:	cmp	r7, r6
   2ae40:	bne	2ade0 <__flatcc_fb_clear_parser@@Base+0x2330>
   2ae44:	add	r3, r4, r6
   2ae48:	mov	r7, #1
   2ae4c:	b	2ae68 <__flatcc_fb_clear_parser@@Base+0x23b8>
   2ae50:	mvn	r6, #4
   2ae54:	str	r6, [ip]
   2ae58:	sub	sp, fp, #28
   2ae5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ae60:	add	r3, r4, r6
   2ae64:	mov	r7, #0
   2ae68:	ldr	r8, [sp, #4]
   2ae6c:	ldr	r9, [sp]
   2ae70:	cmp	r6, #2
   2ae74:	bne	2ae88 <__flatcc_fb_clear_parser@@Base+0x23d8>
   2ae78:	mvn	r6, #3
   2ae7c:	cmp	sl, #45	; 0x2d
   2ae80:	mvneq	r6, #2
   2ae84:	b	2ae54 <__flatcc_fb_clear_parser@@Base+0x23a4>
   2ae88:	cmp	r3, lr
   2ae8c:	beq	2aee8 <__flatcc_fb_clear_parser@@Base+0x2438>
   2ae90:	ldrb	r1, [r4, r6]
   2ae94:	cmp	r7, #0
   2ae98:	beq	2aed0 <__flatcc_fb_clear_parser@@Base+0x2420>
   2ae9c:	sub	r2, r1, #48	; 0x30
   2aea0:	uxtb	r2, r2
   2aea4:	cmp	r2, #9
   2aea8:	bls	2aec0 <__flatcc_fb_clear_parser@@Base+0x2410>
   2aeac:	orr	r1, r1, #32
   2aeb0:	sub	r2, r1, #97	; 0x61
   2aeb4:	uxtb	r2, r2
   2aeb8:	cmp	r2, #5
   2aebc:	bhi	2aed0 <__flatcc_fb_clear_parser@@Base+0x2420>
   2aec0:	mvn	r6, #0
   2aec4:	cmp	sl, #45	; 0x2d
   2aec8:	mvneq	r6, #1
   2aecc:	b	2ae54 <__flatcc_fb_clear_parser@@Base+0x23a4>
   2aed0:	mvn	r6, #2
   2aed4:	cmp	r1, #46	; 0x2e
   2aed8:	beq	2ae54 <__flatcc_fb_clear_parser@@Base+0x23a4>
   2aedc:	cmp	r1, #80	; 0x50
   2aee0:	cmpne	r1, #112	; 0x70
   2aee4:	beq	2ae54 <__flatcc_fb_clear_parser@@Base+0x23a4>
   2aee8:	stm	r8, {r0, r5}
   2aeec:	mov	r6, r9
   2aef0:	b	2ae54 <__flatcc_fb_clear_parser@@Base+0x23a4>
   2aef4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2aef8:	add	fp, sp, #28
   2aefc:	sub	sp, sp, #4
   2af00:	mov	ip, sp
   2af04:	cmp	r3, #0
   2af08:	movne	ip, r3
   2af0c:	cmp	r1, #0
   2af10:	beq	2af80 <__flatcc_fb_clear_parser@@Base+0x24d0>
   2af14:	ldrb	r9, [r0]
   2af18:	sub	r3, r9, #45	; 0x2d
   2af1c:	clz	r3, r3
   2af20:	lsr	r8, r3, #5
   2af24:	add	lr, r0, r8
   2af28:	cmp	r8, r1
   2af2c:	bne	2af88 <__flatcc_fb_clear_parser@@Base+0x24d8>
   2af30:	mov	r6, #0
   2af34:	mov	r3, #0
   2af38:	mov	r1, lr
   2af3c:	mov	r7, #0
   2af40:	cmp	r1, r0
   2af44:	beq	2b008 <__flatcc_fb_clear_parser@@Base+0x2558>
   2af48:	mvn	r0, #2
   2af4c:	cmp	r1, lr
   2af50:	beq	2b03c <__flatcc_fb_clear_parser@@Base+0x258c>
   2af54:	cmp	r7, #0
   2af58:	beq	2b030 <__flatcc_fb_clear_parser@@Base+0x2580>
   2af5c:	ldrb	r1, [r1]
   2af60:	cmp	r1, #79	; 0x4f
   2af64:	ble	2b020 <__flatcc_fb_clear_parser@@Base+0x2570>
   2af68:	cmp	r1, #80	; 0x50
   2af6c:	beq	2b03c <__flatcc_fb_clear_parser@@Base+0x258c>
   2af70:	cmp	r1, #101	; 0x65
   2af74:	cmpne	r1, #112	; 0x70
   2af78:	beq	2b03c <__flatcc_fb_clear_parser@@Base+0x258c>
   2af7c:	b	2b030 <__flatcc_fb_clear_parser@@Base+0x2580>
   2af80:	mvn	r0, #4
   2af84:	b	2b03c <__flatcc_fb_clear_parser@@Base+0x258c>
   2af88:	sub	r7, r1, r8
   2af8c:	mov	r6, #0
   2af90:	mov	sl, #10
   2af94:	mov	r1, lr
   2af98:	mov	r3, #0
   2af9c:	ldrb	r4, [r1]
   2afa0:	sub	r5, r4, #48	; 0x30
   2afa4:	uxtb	r5, r5
   2afa8:	cmp	r5, #9
   2afac:	bhi	2affc <__flatcc_fb_clear_parser@@Base+0x254c>
   2afb0:	add	r5, r3, r3, lsl #2
   2afb4:	lsl	r5, r5, #1
   2afb8:	umlal	r4, r5, r6, sl
   2afbc:	subs	r4, r4, #48	; 0x30
   2afc0:	sbc	r5, r5, #0
   2afc4:	subs	r6, r4, r6
   2afc8:	sbcs	r3, r5, r3
   2afcc:	bcc	2b010 <__flatcc_fb_clear_parser@@Base+0x2560>
   2afd0:	subs	r7, r7, #1
   2afd4:	add	r1, r1, #1
   2afd8:	mov	r6, r4
   2afdc:	mov	r3, r5
   2afe0:	bne	2af9c <__flatcc_fb_clear_parser@@Base+0x24ec>
   2afe4:	mov	r7, #0
   2afe8:	mov	r6, r4
   2afec:	mov	r3, r5
   2aff0:	cmp	r1, r0
   2aff4:	bne	2af48 <__flatcc_fb_clear_parser@@Base+0x2498>
   2aff8:	b	2b008 <__flatcc_fb_clear_parser@@Base+0x2558>
   2affc:	mov	r7, #1
   2b000:	cmp	r1, r0
   2b004:	bne	2af48 <__flatcc_fb_clear_parser@@Base+0x2498>
   2b008:	mvn	r0, #3
   2b00c:	b	2b03c <__flatcc_fb_clear_parser@@Base+0x258c>
   2b010:	mvn	r0, #0
   2b014:	cmp	r9, #45	; 0x2d
   2b018:	mvneq	r0, #1
   2b01c:	b	2b03c <__flatcc_fb_clear_parser@@Base+0x258c>
   2b020:	cmp	r1, #46	; 0x2e
   2b024:	beq	2b03c <__flatcc_fb_clear_parser@@Base+0x258c>
   2b028:	cmp	r1, #69	; 0x45
   2b02c:	beq	2b03c <__flatcc_fb_clear_parser@@Base+0x258c>
   2b030:	str	r6, [r2]
   2b034:	str	r3, [r2, #4]
   2b038:	mov	r0, r8
   2b03c:	str	r0, [ip]
   2b040:	sub	sp, fp, #28
   2b044:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b048:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2b04c:	add	fp, sp, #24
   2b050:	mov	r7, r1
   2b054:	mov	r4, r0
   2b058:	ldr	r8, [r0, #40]	; 0x28
   2b05c:	mov	r5, #1
   2b060:	strh	r5, [r1, #8]
   2b064:	mov	r0, r4
   2b068:	mov	r1, #91	; 0x5b
   2b06c:	bl	299c8 <__flatcc_fb_clear_parser@@Base+0xf18>
   2b070:	sub	r5, r5, #1
   2b074:	cmp	r0, #0
   2b078:	bne	2b064 <__flatcc_fb_clear_parser@@Base+0x25b4>
   2b07c:	mov	r6, r0
   2b080:	rsb	r0, r5, #0
   2b084:	cmp	r0, #2
   2b088:	bcc	2b0a0 <__flatcc_fb_clear_parser@@Base+0x25f0>
   2b08c:	movw	r2, #52517	; 0xcd25
   2b090:	movt	r2, #4
   2b094:	mov	r0, r4
   2b098:	mov	r1, r8
   2b09c:	bl	28be4 <__flatcc_fb_clear_parser@@Base+0x134>
   2b0a0:	ldr	r1, [r4, #40]	; 0x28
   2b0a4:	ldr	r0, [r1, #16]
   2b0a8:	movw	r2, #999	; 0x3e7
   2b0ac:	add	r2, r0, r2
   2b0b0:	cmp	r2, #27
   2b0b4:	bhi	2b194 <__flatcc_fb_clear_parser@@Base+0x26e4>
   2b0b8:	mov	ip, #1
   2b0bc:	movw	r3, #55291	; 0xd7fb
   2b0c0:	movt	r3, #2430	; 0x97e
   2b0c4:	tst	r3, ip, lsl r2
   2b0c8:	beq	2b174 <__flatcc_fb_clear_parser@@Base+0x26c4>
   2b0cc:	mov	r0, #7
   2b0d0:	cmp	r5, #0
   2b0d4:	movweq	r0, #8
   2b0d8:	ldr	r1, [r4, #40]	; 0x28
   2b0dc:	strh	r0, [r7, #8]
   2b0e0:	str	r1, [r7]
   2b0e4:	mov	r0, r4
   2b0e8:	bl	289c4 <__flatcc_fb_parse@@Base+0x105c>
   2b0ec:	mov	r0, r4
   2b0f0:	mov	r1, #93	; 0x5d
   2b0f4:	bl	299c8 <__flatcc_fb_clear_parser@@Base+0xf18>
   2b0f8:	cmp	r0, #0
   2b0fc:	beq	2b110 <__flatcc_fb_clear_parser@@Base+0x2660>
   2b100:	add	r5, r5, #1
   2b104:	cmp	r5, #1
   2b108:	bne	2b0ec <__flatcc_fb_clear_parser@@Base+0x263c>
   2b10c:	b	2b118 <__flatcc_fb_clear_parser@@Base+0x2668>
   2b110:	cmp	r5, #0
   2b114:	beq	2b130 <__flatcc_fb_clear_parser@@Base+0x2680>
   2b118:	movw	r2, #52608	; 0xcd80
   2b11c:	movt	r2, #4
   2b120:	mov	r0, r4
   2b124:	mov	r1, r6
   2b128:	mov	r3, r8
   2b12c:	bl	28bec <__flatcc_fb_clear_parser@@Base+0x13c>
   2b130:	mov	r0, r4
   2b134:	mov	r1, #93	; 0x5d
   2b138:	bl	299c8 <__flatcc_fb_clear_parser@@Base+0xf18>
   2b13c:	cmp	r0, #0
   2b140:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   2b144:	mov	r1, r0
   2b148:	movw	r2, #52641	; 0xcda1
   2b14c:	movt	r2, #4
   2b150:	mov	r0, r4
   2b154:	mov	r3, r8
   2b158:	bl	28bec <__flatcc_fb_clear_parser@@Base+0x13c>
   2b15c:	mov	r0, r4
   2b160:	mov	r1, #93	; 0x5d
   2b164:	bl	299c8 <__flatcc_fb_clear_parser@@Base+0xf18>
   2b168:	cmp	r0, #0
   2b16c:	bne	2b15c <__flatcc_fb_clear_parser@@Base+0x26ac>
   2b170:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2b174:	cmp	r2, #25
   2b178:	bne	2b194 <__flatcc_fb_clear_parser@@Base+0x26e4>
   2b17c:	str	r1, [r7]
   2b180:	mov	r0, #9
   2b184:	cmp	r5, #0
   2b188:	movweq	r0, #10
   2b18c:	strh	r0, [r7, #8]
   2b190:	b	2b0e4 <__flatcc_fb_clear_parser@@Base+0x2634>
   2b194:	cmp	r0, #9
   2b198:	beq	2b1b0 <__flatcc_fb_clear_parser@@Base+0x2700>
   2b19c:	cmp	r0, #93	; 0x5d
   2b1a0:	bne	2b1d0 <__flatcc_fb_clear_parser@@Base+0x2720>
   2b1a4:	movw	r2, #52557	; 0xcd4d
   2b1a8:	movt	r2, #4
   2b1ac:	b	2b1d8 <__flatcc_fb_clear_parser@@Base+0x2728>
   2b1b0:	mov	r0, r4
   2b1b4:	mov	r1, r7
   2b1b8:	bl	2a57c <__flatcc_fb_clear_parser@@Base+0x1acc>
   2b1bc:	mov	r0, #11
   2b1c0:	cmp	r5, #0
   2b1c4:	movweq	r0, #12
   2b1c8:	strh	r0, [r7, #8]
   2b1cc:	b	2b0ec <__flatcc_fb_clear_parser@@Base+0x263c>
   2b1d0:	movw	r2, #52585	; 0xcd69
   2b1d4:	movt	r2, #4
   2b1d8:	mov	r0, r4
   2b1dc:	mov	r1, r6
   2b1e0:	bl	28be4 <__flatcc_fb_clear_parser@@Base+0x134>
   2b1e4:	b	2b0ec <__flatcc_fb_clear_parser@@Base+0x263c>
   2b1e8:	push	{r4, r5, fp, lr}
   2b1ec:	add	fp, sp, #8
   2b1f0:	mov	r4, r0
   2b1f4:	ldr	r5, [r0, #40]	; 0x28
   2b1f8:	b	2b208 <__flatcc_fb_clear_parser@@Base+0x2758>
   2b1fc:	mov	r0, r4
   2b200:	bl	289c4 <__flatcc_fb_parse@@Base+0x105c>
   2b204:	ldr	r5, [r4, #40]	; 0x28
   2b208:	mov	r0, r5
   2b20c:	bl	29694 <__flatcc_fb_clear_parser@@Base+0xbe4>
   2b210:	cmp	r0, #0
   2b214:	popne	{r4, r5, fp, pc}
   2b218:	ldr	r0, [r5, #16]
   2b21c:	cmp	r0, #125	; 0x7d
   2b220:	beq	2b234 <__flatcc_fb_clear_parser@@Base+0x2784>
   2b224:	cmp	r0, #59	; 0x3b
   2b228:	bne	2b1fc <__flatcc_fb_clear_parser@@Base+0x274c>
   2b22c:	mov	r0, r4
   2b230:	bl	289c4 <__flatcc_fb_parse@@Base+0x105c>
   2b234:	mov	r0, #0
   2b238:	str	r0, [r4, #36]	; 0x24
   2b23c:	pop	{r4, r5, fp, pc}

0002b240 <__flatcc_fb_build_schema@@Base>:
   2b240:	push	{r4, r5, r6, r7, fp, lr}
   2b244:	add	fp, sp, #16
   2b248:	mov	r4, r0
   2b24c:	add	r0, r0, #524	; 0x20c
   2b250:	add	r5, r4, #352	; 0x160
   2b254:	mov	r1, r5
   2b258:	bl	2b5f0 <__flatcc_fb_build_schema@@Base+0x3b0>
   2b25c:	cmp	r0, #0
   2b260:	beq	2b5d0 <__flatcc_fb_build_schema@@Base+0x390>
   2b264:	ldr	r6, [r4, #392]	; 0x188
   2b268:	cmp	r6, #0
   2b26c:	beq	2b2d0 <__flatcc_fb_build_schema@@Base+0x90>
   2b270:	movw	r7, #53594	; 0xd15a
   2b274:	movt	r7, #4
   2b278:	ldrh	r0, [r6, #8]
   2b27c:	cmp	r0, #4
   2b280:	bhi	2b2c4 <__flatcc_fb_build_schema@@Base+0x84>
   2b284:	mov	r0, r6
   2b288:	bl	2b608 <__flatcc_fb_build_schema@@Base+0x3c8>
   2b28c:	str	r5, [r6, #16]
   2b290:	ldr	r0, [r6, #12]
   2b294:	cmp	r0, #0
   2b298:	beq	2b2c4 <__flatcc_fb_build_schema@@Base+0x84>
   2b29c:	add	r0, r0, #4
   2b2a0:	mov	r1, r6
   2b2a4:	bl	2b688 <__flatcc_fb_build_schema@@Base+0x448>
   2b2a8:	cmp	r0, #0
   2b2ac:	beq	2b2c4 <__flatcc_fb_build_schema@@Base+0x84>
   2b2b0:	mov	r3, r0
   2b2b4:	mov	r0, r4
   2b2b8:	mov	r1, r6
   2b2bc:	mov	r2, r7
   2b2c0:	bl	2b690 <__flatcc_fb_build_schema@@Base+0x450>
   2b2c4:	ldr	r6, [r6]
   2b2c8:	cmp	r6, #0
   2b2cc:	bne	2b278 <__flatcc_fb_build_schema@@Base+0x38>
   2b2d0:	ldr	r5, [r4, #356]	; 0x164
   2b2d4:	cmp	r5, #0
   2b2d8:	bne	2b2ec <__flatcc_fb_build_schema@@Base+0xac>
   2b2dc:	b	2b314 <__flatcc_fb_build_schema@@Base+0xd4>
   2b2e0:	ldr	r5, [r5]
   2b2e4:	cmp	r5, #0
   2b2e8:	beq	2b314 <__flatcc_fb_build_schema@@Base+0xd4>
   2b2ec:	ldr	r0, [r4, #412]	; 0x19c
   2b2f0:	add	r0, r0, #16
   2b2f4:	mov	r1, r5
   2b2f8:	bl	2b69c <__flatcc_fb_build_schema@@Base+0x45c>
   2b2fc:	cmp	r0, #0
   2b300:	beq	2b2e0 <__flatcc_fb_build_schema@@Base+0xa0>
   2b304:	mov	r0, r4
   2b308:	mov	r1, r5
   2b30c:	bl	2b6a4 <__flatcc_fb_build_schema@@Base+0x464>
   2b310:	b	2b2e0 <__flatcc_fb_build_schema@@Base+0xa0>
   2b314:	mov	r0, r4
   2b318:	bl	2b6e8 <__flatcc_fb_build_schema@@Base+0x4a8>
   2b31c:	ldr	r0, [r4, #184]	; 0xb8
   2b320:	cmp	r0, #0
   2b324:	bne	2b364 <__flatcc_fb_build_schema@@Base+0x124>
   2b328:	ldr	r5, [r4, #392]	; 0x188
   2b32c:	cmp	r5, #0
   2b330:	beq	2b49c <__flatcc_fb_build_schema@@Base+0x25c>
   2b334:	mov	r6, #1
   2b338:	ldrh	r0, [r5, #8]
   2b33c:	cmp	r0, #3
   2b340:	bne	2b358 <__flatcc_fb_build_schema@@Base+0x118>
   2b344:	mov	r0, r4
   2b348:	mov	r1, r5
   2b34c:	bl	2b758 <__flatcc_fb_build_schema@@Base+0x518>
   2b350:	cmp	r0, #0
   2b354:	strhne	r6, [r5, #48]	; 0x30
   2b358:	ldr	r5, [r5]
   2b35c:	cmp	r5, #0
   2b360:	bne	2b338 <__flatcc_fb_build_schema@@Base+0xf8>
   2b364:	ldr	r5, [r4, #392]	; 0x188
   2b368:	cmp	r5, #0
   2b36c:	beq	2b49c <__flatcc_fb_build_schema@@Base+0x25c>
   2b370:	mov	r6, #1
   2b374:	ldrh	r0, [r5, #8]
   2b378:	cmp	r0, #4
   2b37c:	bhi	2b544 <__flatcc_fb_build_schema@@Base+0x304>
   2b380:	add	r1, pc, #0
   2b384:	ldr	pc, [r1, r0, lsl #2]
   2b388:	ldrdeq	fp, [r2], -ip
   2b38c:	muleq	r2, ip, r3
   2b390:	ldrdeq	fp, [r2], -ip
   2b394:			; <UNDEFINED> instruction: 0x0002b3bc
   2b398:	andeq	fp, r2, ip, lsr #7
   2b39c:	mov	r0, r4
   2b3a0:	mov	r1, r5
   2b3a4:	bl	2be84 <__flatcc_fb_build_schema@@Base+0xc44>
   2b3a8:	b	2b3d4 <__flatcc_fb_build_schema@@Base+0x194>
   2b3ac:	mov	r0, r4
   2b3b0:	mov	r1, r5
   2b3b4:	bl	2c130 <__flatcc_fb_build_schema@@Base+0xef0>
   2b3b8:	b	2b3d4 <__flatcc_fb_build_schema@@Base+0x194>
   2b3bc:	ldr	r0, [r4, #184]	; 0xb8
   2b3c0:	cmp	r0, #0
   2b3c4:	beq	2b3dc <__flatcc_fb_build_schema@@Base+0x19c>
   2b3c8:	mov	r0, r4
   2b3cc:	mov	r1, r5
   2b3d0:	bl	2b758 <__flatcc_fb_build_schema@@Base+0x518>
   2b3d4:	cmp	r0, #0
   2b3d8:	strhne	r6, [r5, #48]	; 0x30
   2b3dc:	ldr	r5, [r5]
   2b3e0:	cmp	r5, #0
   2b3e4:	bne	2b374 <__flatcc_fb_build_schema@@Base+0x134>
   2b3e8:	ldr	r5, [r4, #392]	; 0x188
   2b3ec:	cmp	r5, #0
   2b3f0:	beq	2b49c <__flatcc_fb_build_schema@@Base+0x25c>
   2b3f4:	mov	r6, #1
   2b3f8:	ldrh	r0, [r5, #8]
   2b3fc:	cmp	r0, #1
   2b400:	bne	2b424 <__flatcc_fb_build_schema@@Base+0x1e4>
   2b404:	ldrh	r0, [r5, #48]	; 0x30
   2b408:	cmp	r0, #1
   2b40c:	beq	2b424 <__flatcc_fb_build_schema@@Base+0x1e4>
   2b410:	mov	r0, r4
   2b414:	mov	r1, r5
   2b418:	bl	2c13c <__flatcc_fb_build_schema@@Base+0xefc>
   2b41c:	cmp	r0, #0
   2b420:	strhne	r6, [r5, #48]	; 0x30
   2b424:	ldr	r5, [r5]
   2b428:	cmp	r5, #0
   2b42c:	bne	2b3f8 <__flatcc_fb_build_schema@@Base+0x1b8>
   2b430:	ldr	r5, [r4, #392]	; 0x188
   2b434:	cmp	r5, #0
   2b438:	beq	2b49c <__flatcc_fb_build_schema@@Base+0x25c>
   2b43c:	mov	r6, #1
   2b440:	ldrh	r0, [r5, #8]
   2b444:	cmp	r0, #2
   2b448:	beq	2b470 <__flatcc_fb_build_schema@@Base+0x230>
   2b44c:	cmp	r0, #0
   2b450:	bne	2b490 <__flatcc_fb_build_schema@@Base+0x250>
   2b454:	ldrh	r0, [r5, #48]	; 0x30
   2b458:	cmp	r0, #1
   2b45c:	beq	2b490 <__flatcc_fb_build_schema@@Base+0x250>
   2b460:	mov	r0, r4
   2b464:	mov	r1, r5
   2b468:	bl	2c494 <__flatcc_fb_build_schema@@Base+0x1254>
   2b46c:	b	2b488 <__flatcc_fb_build_schema@@Base+0x248>
   2b470:	ldrh	r0, [r5, #48]	; 0x30
   2b474:	cmp	r0, #1
   2b478:	beq	2b490 <__flatcc_fb_build_schema@@Base+0x250>
   2b47c:	mov	r0, r4
   2b480:	mov	r1, r5
   2b484:	bl	2d108 <__flatcc_fb_build_schema@@Base+0x1ec8>
   2b488:	cmp	r0, #0
   2b48c:	strhne	r6, [r5, #48]	; 0x30
   2b490:	ldr	r5, [r5]
   2b494:	cmp	r5, #0
   2b498:	bne	2b440 <__flatcc_fb_build_schema@@Base+0x200>
   2b49c:	add	r0, r4, #396	; 0x18c
   2b4a0:	bl	2d360 <__flatcc_fb_build_schema@@Base+0x2120>
   2b4a4:	ldr	r5, [r4, #392]	; 0x188
   2b4a8:	cmp	r5, #0
   2b4ac:	bne	2b4c0 <__flatcc_fb_build_schema@@Base+0x280>
   2b4b0:	b	2b4f8 <__flatcc_fb_build_schema@@Base+0x2b8>
   2b4b4:	ldr	r5, [r5]
   2b4b8:	cmp	r5, #0
   2b4bc:	beq	2b4f8 <__flatcc_fb_build_schema@@Base+0x2b8>
   2b4c0:	ldrh	r0, [r5, #8]
   2b4c4:	cmp	r0, #0
   2b4c8:	bne	2b4b4 <__flatcc_fb_build_schema@@Base+0x274>
   2b4cc:	ldr	r1, [r5, #20]
   2b4d0:	ldrb	r0, [r5, #92]	; 0x5c
   2b4d4:	tst	r0, #8
   2b4d8:	bne	2b4e8 <__flatcc_fb_build_schema@@Base+0x2a8>
   2b4dc:	mov	r0, r4
   2b4e0:	bl	2d3d0 <__flatcc_fb_build_schema@@Base+0x2190>
   2b4e4:	b	2b4f0 <__flatcc_fb_build_schema@@Base+0x2b0>
   2b4e8:	mov	r0, r1
   2b4ec:	bl	2d398 <__flatcc_fb_build_schema@@Base+0x2158>
   2b4f0:	str	r0, [r5, #24]
   2b4f4:	b	2b4b4 <__flatcc_fb_build_schema@@Base+0x274>
   2b4f8:	ldr	r2, [r4, #400]	; 0x190
   2b4fc:	cmp	r2, #0
   2b500:	beq	2b560 <__flatcc_fb_build_schema@@Base+0x320>
   2b504:	ldr	r1, [r4, #408]	; 0x198
   2b508:	mov	r0, r4
   2b50c:	bl	2d57c <__flatcc_fb_build_schema@@Base+0x233c>
   2b510:	str	r0, [r4, #404]	; 0x194
   2b514:	cmp	r0, #0
   2b518:	beq	2b580 <__flatcc_fb_build_schema@@Base+0x340>
   2b51c:	ldrh	r1, [r0, #8]
   2b520:	ldr	r2, [r4, #176]	; 0xb0
   2b524:	cmp	r2, #0
   2b528:	beq	2b590 <__flatcc_fb_build_schema@@Base+0x350>
   2b52c:	cmp	r1, #2
   2b530:	bcc	2b5b0 <__flatcc_fb_build_schema@@Base+0x370>
   2b534:	ldr	r1, [r4, #400]	; 0x190
   2b538:	movw	r2, #53741	; 0xd1ed
   2b53c:	movt	r2, #4
   2b540:	b	2b5a4 <__flatcc_fb_build_schema@@Base+0x364>
   2b544:	movw	r2, #53648	; 0xd190
   2b548:	movt	r2, #4
   2b54c:	mov	r0, r4
   2b550:	mov	r1, r5
   2b554:	bl	2c134 <__flatcc_fb_build_schema@@Base+0xef4>
   2b558:	mvn	r0, #0
   2b55c:	pop	{r4, r5, r6, r7, fp, pc}
   2b560:	ldr	r0, [r4, #208]	; 0xd0
   2b564:	cmp	r0, #0
   2b568:	beq	2b5bc <__flatcc_fb_build_schema@@Base+0x37c>
   2b56c:	movw	r1, #53698	; 0xd1c2
   2b570:	movt	r1, #4
   2b574:	mov	r0, r4
   2b578:	bl	2d570 <__flatcc_fb_build_schema@@Base+0x2330>
   2b57c:	b	2b5bc <__flatcc_fb_build_schema@@Base+0x37c>
   2b580:	ldr	r1, [r4, #400]	; 0x190
   2b584:	movw	r2, #53721	; 0xd1d9
   2b588:	movt	r2, #4
   2b58c:	b	2b5a4 <__flatcc_fb_build_schema@@Base+0x364>
   2b590:	cmp	r1, #0
   2b594:	beq	2b5b0 <__flatcc_fb_build_schema@@Base+0x370>
   2b598:	ldr	r1, [r4, #400]	; 0x190
   2b59c:	movw	r2, #53779	; 0xd213
   2b5a0:	movt	r2, #4
   2b5a4:	mov	r0, r4
   2b5a8:	bl	2d584 <__flatcc_fb_build_schema@@Base+0x2344>
   2b5ac:	b	2b5b4 <__flatcc_fb_build_schema@@Base+0x374>
   2b5b0:	str	r0, [r4, #404]	; 0x194
   2b5b4:	mov	r0, #0
   2b5b8:	str	r0, [r4, #400]	; 0x190
   2b5bc:	ldr	r0, [r4, #108]	; 0x6c
   2b5c0:	clz	r1, r0
   2b5c4:	lsr	r1, r1, #5
   2b5c8:	str	r1, [r4, #120]	; 0x78
   2b5cc:	pop	{r4, r5, r6, r7, fp, pc}
   2b5d0:	movw	r0, #53423	; 0xd0af
   2b5d4:	movt	r0, #4
   2b5d8:	movw	r1, #53477	; 0xd0e5
   2b5dc:	movt	r1, #4
   2b5e0:	movw	r3, #53550	; 0xd12e
   2b5e4:	movt	r3, #4
   2b5e8:	movw	r2, #1558	; 0x616
   2b5ec:	bl	14950 <__assert_fail@plt>
   2b5f0:	push	{fp, lr}
   2b5f4:	mov	fp, sp
   2b5f8:	bl	2580c <ptr_set_find_item@@Base>
   2b5fc:	cmp	r0, #0
   2b600:	movwne	r0, #1
   2b604:	pop	{fp, pc}
   2b608:	push	{r4, r5, r6, r7, fp, lr}
   2b60c:	add	fp, sp, #16
   2b610:	mov	r4, r0
   2b614:	ldr	r1, [r0, #12]
   2b618:	movw	r6, #40389	; 0x9dc5
   2b61c:	movt	r6, #33052	; 0x811c
   2b620:	cmp	r1, #0
   2b624:	mov	r0, r6
   2b628:	beq	2b66c <__flatcc_fb_build_schema@@Base+0x42c>
   2b62c:	ldr	r7, [r1]
   2b630:	cmp	r7, #0
   2b634:	mov	r0, r6
   2b638:	beq	2b66c <__flatcc_fb_build_schema@@Base+0x42c>
   2b63c:	movw	r5, #31747	; 0x7c03
   2b640:	movt	r5, #4
   2b644:	mov	r0, r6
   2b648:	ldr	r2, [r7, #4]
   2b64c:	ldm	r2, {r1, r2}
   2b650:	bl	2d58c <__flatcc_fb_build_schema@@Base+0x234c>
   2b654:	mov	r1, r5
   2b658:	mov	r2, #1
   2b65c:	bl	2d58c <__flatcc_fb_build_schema@@Base+0x234c>
   2b660:	ldr	r7, [r7]
   2b664:	cmp	r7, #0
   2b668:	bne	2b648 <__flatcc_fb_build_schema@@Base+0x408>
   2b66c:	ldr	r2, [r4, #4]
   2b670:	ldm	r2, {r1, r2}
   2b674:	bl	2d58c <__flatcc_fb_build_schema@@Base+0x234c>
   2b678:	cmp	r0, #0
   2b67c:	movne	r6, r0
   2b680:	str	r6, [r4, #88]	; 0x58
   2b684:	pop	{r4, r5, r6, r7, fp, pc}
   2b688:	mov	r2, #1
   2b68c:	b	25d10 <fb_symbol_table_insert_item@@Base>
   2b690:	ldr	r3, [r3, #4]
   2b694:	ldr	r1, [r1, #4]
   2b698:	b	2d5b4 <__flatcc_fb_build_schema@@Base+0x2374>
   2b69c:	mov	r2, #1
   2b6a0:	b	32d64 <fb_name_table_insert_item@@Base>
   2b6a4:	cmp	r1, #0
   2b6a8:	beq	2b6dc <__flatcc_fb_build_schema@@Base+0x49c>
   2b6ac:	push	{fp, lr}
   2b6b0:	mov	fp, sp
   2b6b4:	sub	sp, sp, #8
   2b6b8:	ldrd	r2, [r1, #8]
   2b6bc:	stm	sp, {r2, r3}
   2b6c0:	movw	r2, #53622	; 0xd176
   2b6c4:	movt	r2, #4
   2b6c8:	mov	r1, #0
   2b6cc:	mov	r3, #0
   2b6d0:	bl	2742c <__flatcc_error_report@@Base>
   2b6d4:	mov	sp, fp
   2b6d8:	pop	{fp, pc}
   2b6dc:	movw	r1, #53622	; 0xd176
   2b6e0:	movt	r1, #4
   2b6e4:	b	2d570 <__flatcc_fb_build_schema@@Base+0x2330>
   2b6e8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2b6ec:	add	fp, sp, #24
   2b6f0:	mov	r4, r0
   2b6f4:	mov	r8, #0
   2b6f8:	movw	r9, #59280	; 0xe790
   2b6fc:	movt	r9, #4
   2b700:	mov	r6, #2
   2b704:	mov	r7, #0
   2b708:	mov	r0, r4
   2b70c:	bl	2d5d8 <__flatcc_fb_build_schema@@Base+0x2398>
   2b710:	mov	r5, r0
   2b714:	str	r7, [r0, #24]
   2b718:	ldr	r0, [r9, r7, lsl #2]
   2b71c:	str	r0, [r5, #8]
   2b720:	bl	14884 <strlen@plt>
   2b724:	str	r0, [r5, #12]
   2b728:	strh	r6, [r5, #16]
   2b72c:	str	r8, [r5]
   2b730:	ldr	r0, [r4, #412]	; 0x19c
   2b734:	add	r0, r0, #16
   2b738:	mov	r1, r5
   2b73c:	bl	2b69c <__flatcc_fb_build_schema@@Base+0x45c>
   2b740:	cmp	r0, #0
   2b744:	strne	r7, [r0, #24]
   2b748:	add	r7, r7, #1
   2b74c:	cmp	r7, #12
   2b750:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   2b754:	b	2b708 <__flatcc_fb_build_schema@@Base+0x4c8>
   2b758:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b75c:	add	fp, sp, #28
   2b760:	sub	sp, sp, #108	; 0x6c
   2b764:	mov	r8, r0
   2b768:	str	r1, [sp, #36]	; 0x24
   2b76c:	ldrh	r4, [r1, #8]
   2b770:	cmp	r4, #4
   2b774:	bne	2b794 <__flatcc_fb_build_schema@@Base+0x554>
   2b778:	ldr	r0, [sp, #36]	; 0x24
   2b77c:	ldrh	r0, [r0, #48]	; 0x30
   2b780:	cmp	r0, #0
   2b784:	beq	2b7d0 <__flatcc_fb_build_schema@@Base+0x590>
   2b788:	movw	r2, #54034	; 0xd312
   2b78c:	movt	r2, #4
   2b790:	b	2b914 <__flatcc_fb_build_schema@@Base+0x6d4>
   2b794:	cmp	r4, #3
   2b798:	bne	2be64 <__flatcc_fb_build_schema@@Base+0xc24>
   2b79c:	ldr	r0, [sp, #36]	; 0x24
   2b7a0:	ldrh	r0, [r0, #48]	; 0x30
   2b7a4:	cmp	r0, #8
   2b7a8:	beq	2b7e8 <__flatcc_fb_build_schema@@Base+0x5a8>
   2b7ac:	cmp	r0, #0
   2b7b0:	bne	2b90c <__flatcc_fb_build_schema@@Base+0x6cc>
   2b7b4:	mov	r0, #1
   2b7b8:	ldr	r1, [sp, #36]	; 0x24
   2b7bc:	strh	r0, [r1, #48]	; 0x30
   2b7c0:	movw	r2, #53963	; 0xd2cb
   2b7c4:	movt	r2, #4
   2b7c8:	mov	r0, r8
   2b7cc:	b	2b91c <__flatcc_fb_build_schema@@Base+0x6dc>
   2b7d0:	mov	r0, #4
   2b7d4:	ldr	r2, [sp, #36]	; 0x24
   2b7d8:	str	r0, [r2, #40]	; 0x28
   2b7dc:	mov	r1, #8
   2b7e0:	strh	r1, [r2, #48]	; 0x30
   2b7e4:	b	2b7f8 <__flatcc_fb_build_schema@@Base+0x5b8>
   2b7e8:	ldr	r5, [sp, #36]	; 0x24
   2b7ec:	ldr	r0, [r5, #40]	; 0x28
   2b7f0:	bl	2d674 <__flatcc_fb_build_schema@@Base+0x2434>
   2b7f4:	str	r0, [r5, #40]	; 0x28
   2b7f8:	bl	2d698 <__flatcc_fb_build_schema@@Base+0x2458>
   2b7fc:	mov	sl, #0
   2b800:	ldr	r5, [sp, #36]	; 0x24
   2b804:	str	r0, [r5, #112]	; 0x70
   2b808:	str	sl, [r5, #116]	; 0x74
   2b80c:	strh	r0, [r5, #104]	; 0x68
   2b810:	ldr	r1, [r5, #28]
   2b814:	add	r3, sp, #60	; 0x3c
   2b818:	mov	r0, r8
   2b81c:	mov	r2, #32
   2b820:	bl	2d6a8 <__flatcc_fb_build_schema@@Base+0x2468>
   2b824:	strh	r0, [r5, #92]	; 0x5c
   2b828:	tst	r0, #32
   2b82c:	beq	2b848 <__flatcc_fb_build_schema@@Base+0x608>
   2b830:	mov	r0, #0
   2b834:	str	r0, [sp, #44]	; 0x2c
   2b838:	str	r0, [sp, #40]	; 0x28
   2b83c:	mov	r0, #5
   2b840:	strh	r0, [sp, #48]	; 0x30
   2b844:	mov	sl, #1
   2b848:	ldr	r0, [sp, #36]	; 0x24
   2b84c:	ldr	r2, [r0, #40]	; 0x28
   2b850:	cmp	r2, #5
   2b854:	bne	2b86c <__flatcc_fb_build_schema@@Base+0x62c>
   2b858:	mov	r0, #6
   2b85c:	strh	r0, [sp, #48]	; 0x30
   2b860:	mov	r0, #0
   2b864:	strb	r0, [sp, #40]	; 0x28
   2b868:	b	2b8ac <__flatcc_fb_build_schema@@Base+0x66c>
   2b86c:	mov	r0, #0
   2b870:	str	r0, [sp, #44]	; 0x2c
   2b874:	str	r0, [sp, #40]	; 0x28
   2b878:	mov	r0, #4
   2b87c:	strh	r0, [sp, #48]	; 0x30
   2b880:	add	r3, sp, #40	; 0x28
   2b884:	mov	r0, r8
   2b888:	ldr	r1, [sp, #36]	; 0x24
   2b88c:	bl	2de7c <__flatcc_fb_coerce_scalar_type@@Base>
   2b890:	cmp	r0, #0
   2b894:	beq	2b8ac <__flatcc_fb_build_schema@@Base+0x66c>
   2b898:	movw	r1, #54097	; 0xd351
   2b89c:	movt	r1, #4
   2b8a0:	mov	r0, r8
   2b8a4:	bl	2d570 <__flatcc_fb_build_schema@@Base+0x2330>
   2b8a8:	b	2b920 <__flatcc_fb_build_schema@@Base+0x6e0>
   2b8ac:	ldr	r0, [sp, #36]	; 0x24
   2b8b0:	ldr	r6, [r0, #20]
   2b8b4:	cmp	r6, #0
   2b8b8:	beq	2b930 <__flatcc_fb_build_schema@@Base+0x6f0>
   2b8bc:	ldr	r2, [sp, #40]	; 0x28
   2b8c0:	ldr	r0, [sp, #44]	; 0x2c
   2b8c4:	mov	r1, r2
   2b8c8:	str	r2, [sp, #28]
   2b8cc:	lsr	r1, r2, #8
   2b8d0:	orr	r1, r1, r0, lsl #24
   2b8d4:	str	r1, [sp, #24]
   2b8d8:	ldr	r1, [sp, #36]	; 0x24
   2b8dc:	add	r2, r1, #72	; 0x48
   2b8e0:	str	r2, [sp, #12]
   2b8e4:	add	r2, r8, #68	; 0x44
   2b8e8:	str	r2, [sp, #32]
   2b8ec:	add	r5, r1, #56	; 0x38
   2b8f0:	lsr	r0, r0, #8
   2b8f4:	str	r0, [sp, #20]
   2b8f8:	add	r7, sp, #40	; 0x28
   2b8fc:	mov	r9, #1
   2b900:	str	r5, [sp, #8]
   2b904:	str	sl, [sp, #4]
   2b908:	b	2b96c <__flatcc_fb_build_schema@@Base+0x72c>
   2b90c:	movw	r2, #53985	; 0xd2e1
   2b910:	movt	r2, #4
   2b914:	mov	r0, r8
   2b918:	ldr	r1, [sp, #36]	; 0x24
   2b91c:	bl	2c134 <__flatcc_fb_build_schema@@Base+0xef4>
   2b920:	mvn	r9, #0
   2b924:	mov	r0, r9
   2b928:	sub	sp, fp, #28
   2b92c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b930:	mov	r9, #0
   2b934:	b	2b924 <__flatcc_fb_build_schema@@Base+0x6e4>
   2b938:	ldr	r1, [r6, #16]
   2b93c:	mov	r0, r8
   2b940:	movw	r2, #54349	; 0xd44d
   2b944:	movt	r2, #4
   2b948:	mov	r3, r6
   2b94c:	bl	275bc <error_ref_sym@@Base>
   2b950:	b	2ba1c <__flatcc_fb_build_schema@@Base+0x7dc>
   2b954:	mov	r0, r8
   2b958:	mov	r1, r6
   2b95c:	movw	r2, #54395	; 0xd47b
   2b960:	movt	r2, #4
   2b964:	bl	2b690 <__flatcc_fb_build_schema@@Base+0x450>
   2b968:	b	2ba1c <__flatcc_fb_build_schema@@Base+0x7dc>
   2b96c:	mov	r0, r5
   2b970:	mov	r1, r6
   2b974:	bl	2b688 <__flatcc_fb_build_schema@@Base+0x448>
   2b978:	cmp	r0, #0
   2b97c:	beq	2b9ac <__flatcc_fb_build_schema@@Base+0x76c>
   2b980:	mov	r3, r0
   2b984:	ldr	r0, [r0, #4]
   2b988:	ldr	r1, [sp, #32]
   2b98c:	cmp	r0, r1
   2b990:	beq	2ba08 <__flatcc_fb_build_schema@@Base+0x7c8>
   2b994:	mov	r0, r8
   2b998:	mov	r1, r6
   2b99c:	movw	r2, #54188	; 0xd3ac
   2b9a0:	movt	r2, #4
   2b9a4:	bl	2b690 <__flatcc_fb_build_schema@@Base+0x450>
   2b9a8:	b	2ba1c <__flatcc_fb_build_schema@@Base+0x7dc>
   2b9ac:	ldrh	r0, [r6, #8]
   2b9b0:	cmp	r0, #5
   2b9b4:	bne	2bd98 <__flatcc_fb_build_schema@@Base+0xb58>
   2b9b8:	ldr	r0, [r6, #64]	; 0x40
   2b9bc:	cmp	r0, #0
   2b9c0:	bne	2be44 <__flatcc_fb_build_schema@@Base+0xc04>
   2b9c4:	cmp	r4, #4
   2b9c8:	bne	2ba30 <__flatcc_fb_build_schema@@Base+0x7f0>
   2b9cc:	ldr	r0, [r6, #4]
   2b9d0:	ldr	r1, [sp, #32]
   2b9d4:	cmp	r0, r1
   2b9d8:	beq	2ba28 <__flatcc_fb_build_schema@@Base+0x7e8>
   2b9dc:	ldrh	r0, [r6, #24]
   2b9e0:	cmp	r0, #1
   2b9e4:	beq	2bd84 <__flatcc_fb_build_schema@@Base+0xb44>
   2b9e8:	cmp	r0, #12
   2b9ec:	beq	2ba90 <__flatcc_fb_build_schema@@Base+0x850>
   2b9f0:	cmp	r0, #10
   2b9f4:	bne	2bad4 <__flatcc_fb_build_schema@@Base+0x894>
   2b9f8:	mov	r0, #0
   2b9fc:	str	r0, [r6, #88]	; 0x58
   2ba00:	str	r0, [r6, #92]	; 0x5c
   2ba04:	b	2ba30 <__flatcc_fb_build_schema@@Base+0x7f0>
   2ba08:	mov	r0, r8
   2ba0c:	mov	r1, r6
   2ba10:	movw	r2, #54159	; 0xd38f
   2ba14:	movt	r2, #4
   2ba18:	bl	2c134 <__flatcc_fb_build_schema@@Base+0xef4>
   2ba1c:	mov	r0, #1
   2ba20:	strh	r0, [r6, #24]
   2ba24:	b	2bd84 <__flatcc_fb_build_schema@@Base+0xb44>
   2ba28:	mov	r0, #0
   2ba2c:	strh	r0, [r6, #24]
   2ba30:	ldrh	r0, [r6, #56]	; 0x38
   2ba34:	cmp	r9, #0
   2ba38:	cmpeq	r0, #0
   2ba3c:	bne	2bb6c <__flatcc_fb_build_schema@@Base+0x92c>
   2ba40:	ldrh	r0, [sp, #48]	; 0x30
   2ba44:	cmp	r0, #4
   2ba48:	beq	2bb14 <__flatcc_fb_build_schema@@Base+0x8d4>
   2ba4c:	cmp	r0, #6
   2ba50:	beq	2bae8 <__flatcc_fb_build_schema@@Base+0x8a8>
   2ba54:	cmp	r0, #5
   2ba58:	bne	2bb68 <__flatcc_fb_build_schema@@Base+0x928>
   2ba5c:	ldr	r0, [sp, #36]	; 0x24
   2ba60:	ldr	r0, [r0, #40]	; 0x28
   2ba64:	cmp	r0, #6
   2ba68:	ldreq	r0, [sp, #40]	; 0x28
   2ba6c:	ldreq	r1, [sp, #44]	; 0x2c
   2ba70:	andeq	r0, r0, r1
   2ba74:	cmneq	r0, #1
   2ba78:	bne	2bb50 <__flatcc_fb_build_schema@@Base+0x910>
   2ba7c:	mov	r0, r8
   2ba80:	mov	r1, r6
   2ba84:	movw	r2, #54465	; 0xd4c1
   2ba88:	movt	r2, #4
   2ba8c:	b	2bb4c <__flatcc_fb_build_schema@@Base+0x90c>
   2ba90:	ldr	r2, [r6, #16]
   2ba94:	ldr	r0, [sp, #36]	; 0x24
   2ba98:	ldr	r1, [r0, #12]
   2ba9c:	mov	r0, r8
   2baa0:	bl	2d57c <__flatcc_fb_build_schema@@Base+0x233c>
   2baa4:	cmp	r0, #0
   2baa8:	beq	2b938 <__flatcc_fb_build_schema@@Base+0x6f8>
   2baac:	mov	r3, r0
   2bab0:	ldrh	r0, [r0, #8]
   2bab4:	cmp	r0, #2
   2bab8:	bcs	2b954 <__flatcc_fb_build_schema@@Base+0x714>
   2babc:	mov	r0, #0
   2bac0:	str	r0, [r6, #88]	; 0x58
   2bac4:	str	r0, [r6, #92]	; 0x5c
   2bac8:	str	r3, [r6, #16]
   2bacc:	mov	r0, #14
   2bad0:	b	2ba2c <__flatcc_fb_build_schema@@Base+0x7ec>
   2bad4:	mov	r0, r8
   2bad8:	mov	r1, r6
   2badc:	movw	r2, #54278	; 0xd406
   2bae0:	movt	r2, #4
   2bae4:	b	2ba18 <__flatcc_fb_build_schema@@Base+0x7d8>
   2bae8:	ldrb	r0, [sp, #40]	; 0x28
   2baec:	cmp	r0, #1
   2baf0:	bne	2bb08 <__flatcc_fb_build_schema@@Base+0x8c8>
   2baf4:	mov	r0, r8
   2baf8:	mov	r1, r6
   2bafc:	movw	r2, #54521	; 0xd4f9
   2bb00:	movt	r2, #4
   2bb04:	bl	2c134 <__flatcc_fb_build_schema@@Base+0xef4>
   2bb08:	mov	r0, #1
   2bb0c:	strb	r0, [sp, #40]	; 0x28
   2bb10:	b	2bb68 <__flatcc_fb_build_schema@@Base+0x928>
   2bb14:	ldr	r0, [sp, #36]	; 0x24
   2bb18:	ldr	r0, [r0, #40]	; 0x28
   2bb1c:	cmp	r0, #6
   2bb20:	ldreq	r0, [sp, #40]	; 0x28
   2bb24:	ldreq	r1, [sp, #44]	; 0x2c
   2bb28:	mvneq	r2, #-2147483648	; 0x80000000
   2bb2c:	eoreq	r1, r1, r2
   2bb30:	mvneq	r0, r0
   2bb34:	orrseq	r0, r0, r1
   2bb38:	bne	2bb50 <__flatcc_fb_build_schema@@Base+0x910>
   2bb3c:	mov	r0, r8
   2bb40:	mov	r1, r6
   2bb44:	movw	r2, #54494	; 0xd4de
   2bb48:	movt	r2, #4
   2bb4c:	bl	2c134 <__flatcc_fb_build_schema@@Base+0xef4>
   2bb50:	ldr	r0, [sp, #40]	; 0x28
   2bb54:	ldr	r1, [sp, #44]	; 0x2c
   2bb58:	adds	r0, r0, #1
   2bb5c:	str	r0, [sp, #40]	; 0x28
   2bb60:	adc	r0, r1, #0
   2bb64:	str	r0, [sp, #44]	; 0x2c
   2bb68:	ldrh	r0, [r6, #56]	; 0x38
   2bb6c:	add	ip, r6, #48	; 0x30
   2bb70:	cmp	sl, #0
   2bb74:	beq	2bc28 <__flatcc_fb_build_schema@@Base+0x9e8>
   2bb78:	cmp	r0, #0
   2bb7c:	beq	2bb90 <__flatcc_fb_build_schema@@Base+0x950>
   2bb80:	cmp	r0, #5
   2bb84:	bne	2bde0 <__flatcc_fb_build_schema@@Base+0xba0>
   2bb88:	vld1.64	{d16-d17}, [ip]
   2bb8c:	vst1.64	{d16-d17}, [r7]
   2bb90:	mov	r0, r8
   2bb94:	mov	r8, ip
   2bb98:	mov	sl, r0
   2bb9c:	ldr	r5, [sp, #36]	; 0x24
   2bba0:	ldr	r0, [r5, #40]	; 0x28
   2bba4:	ldr	r7, [sp, #40]	; 0x28
   2bba8:	ldr	r1, [sp, #44]	; 0x2c
   2bbac:	str	r1, [sp, #16]
   2bbb0:	bl	2d698 <__flatcc_fb_build_schema@@Base+0x2458>
   2bbb4:	subs	r0, r7, r0, lsl #3
   2bbb8:	ldr	r0, [sp, #16]
   2bbbc:	sbcs	r0, r0, #0
   2bbc0:	bcs	2bda4 <__flatcc_fb_build_schema@@Base+0xb64>
   2bbc4:	mov	ip, #1
   2bbc8:	lsl	r0, ip, r7
   2bbcc:	sub	r1, r7, #32
   2bbd0:	cmp	r1, #0
   2bbd4:	movwge	r0, #0
   2bbd8:	rsb	r2, r7, #32
   2bbdc:	lsr	r3, ip, r2
   2bbe0:	lslge	r3, ip, r1
   2bbe4:	mov	r7, r8
   2bbe8:	stm	r7, {r0, r3}
   2bbec:	mov	r0, #5
   2bbf0:	strh	r0, [r6, #56]	; 0x38
   2bbf4:	ldr	r2, [r5, #40]	; 0x28
   2bbf8:	mov	r8, sl
   2bbfc:	mov	r0, sl
   2bc00:	mov	r1, r6
   2bc04:	mov	r3, r7
   2bc08:	bl	2de7c <__flatcc_fb_coerce_scalar_type@@Base>
   2bc0c:	mov	ip, r7
   2bc10:	cmp	r0, #0
   2bc14:	ldr	sl, [sp, #4]
   2bc18:	bne	2bdb4 <__flatcc_fb_build_schema@@Base+0xb74>
   2bc1c:	cmp	r9, #0
   2bc20:	bne	2bd14 <__flatcc_fb_build_schema@@Base+0xad4>
   2bc24:	b	2bc70 <__flatcc_fb_build_schema@@Base+0xa30>
   2bc28:	cmp	r0, #0
   2bc2c:	beq	2bc60 <__flatcc_fb_build_schema@@Base+0xa20>
   2bc30:	vld1.64	{d16-d17}, [ip]
   2bc34:	vst1.64	{d16-d17}, [r7]
   2bc38:	ldr	r0, [sp, #36]	; 0x24
   2bc3c:	ldr	r2, [r0, #40]	; 0x28
   2bc40:	mov	r0, r8
   2bc44:	mov	r1, r6
   2bc48:	mov	r3, r7
   2bc4c:	mov	r5, ip
   2bc50:	bl	2de7c <__flatcc_fb_coerce_scalar_type@@Base>
   2bc54:	mov	ip, r5
   2bc58:	cmp	r0, #0
   2bc5c:	bne	2b920 <__flatcc_fb_build_schema@@Base+0x6e0>
   2bc60:	vld1.64	{d16-d17}, [r7]
   2bc64:	vst1.64	{d16-d17}, [ip]
   2bc68:	cmp	r9, #0
   2bc6c:	bne	2bd14 <__flatcc_fb_build_schema@@Base+0xad4>
   2bc70:	ldr	r0, [r8, #180]	; 0xb4
   2bc74:	cmp	r0, #0
   2bc78:	beq	2bd14 <__flatcc_fb_build_schema@@Base+0xad4>
   2bc7c:	ldrh	r0, [sp, #48]	; 0x30
   2bc80:	cmp	r0, #4
   2bc84:	beq	2bccc <__flatcc_fb_build_schema@@Base+0xa8c>
   2bc88:	cmp	r0, #6
   2bc8c:	beq	2bd00 <__flatcc_fb_build_schema@@Base+0xac0>
   2bc90:	cmp	r0, #5
   2bc94:	bne	2bd14 <__flatcc_fb_build_schema@@Base+0xad4>
   2bc98:	ldr	r0, [sp, #20]
   2bc9c:	lsl	r0, r0, #8
   2bca0:	ldr	r2, [sp, #24]
   2bca4:	orr	r0, r0, r2, lsr #24
   2bca8:	ldr	r1, [sp, #28]
   2bcac:	uxtb	r1, r1
   2bcb0:	orr	r1, r1, r2, lsl #8
   2bcb4:	ldr	r2, [sp, #40]	; 0x28
   2bcb8:	ldr	r3, [sp, #44]	; 0x2c
   2bcbc:	subs	r1, r1, r2
   2bcc0:	sbcs	r0, r0, r3
   2bcc4:	bcc	2bd14 <__flatcc_fb_build_schema@@Base+0xad4>
   2bcc8:	b	2bdf4 <__flatcc_fb_build_schema@@Base+0xbb4>
   2bccc:	ldr	r0, [sp, #20]
   2bcd0:	lsl	r0, r0, #8
   2bcd4:	ldr	r2, [sp, #24]
   2bcd8:	orr	r0, r0, r2, lsr #24
   2bcdc:	ldr	r1, [sp, #28]
   2bce0:	uxtb	r1, r1
   2bce4:	orr	r1, r1, r2, lsl #8
   2bce8:	ldr	r2, [sp, #40]	; 0x28
   2bcec:	ldr	r3, [sp, #44]	; 0x2c
   2bcf0:	subs	r1, r1, r2
   2bcf4:	sbcs	r0, r0, r3
   2bcf8:	blt	2bd14 <__flatcc_fb_build_schema@@Base+0xad4>
   2bcfc:	b	2bdf4 <__flatcc_fb_build_schema@@Base+0xbb4>
   2bd00:	ldr	r0, [sp, #28]
   2bd04:	uxtb	r0, r0
   2bd08:	ldrb	r1, [sp, #40]	; 0x28
   2bd0c:	cmp	r1, r0
   2bd10:	bls	2be2c <__flatcc_fb_build_schema@@Base+0xbec>
   2bd14:	ldr	r5, [sp, #40]	; 0x28
   2bd18:	ldr	r7, [sp, #44]	; 0x2c
   2bd1c:	ldr	r0, [sp, #12]
   2bd20:	mov	r1, ip
   2bd24:	bl	2d85c <__flatcc_fb_build_schema@@Base+0x261c>
   2bd28:	cmp	r0, #0
   2bd2c:	beq	2bd44 <__flatcc_fb_build_schema@@Base+0xb04>
   2bd30:	cmp	r4, #4
   2bd34:	beq	2bdc0 <__flatcc_fb_build_schema@@Base+0xb80>
   2bd38:	ldrh	r0, [r6, #10]
   2bd3c:	orr	r0, r0, #4
   2bd40:	strh	r0, [r6, #10]
   2bd44:	lsr	r0, r5, #8
   2bd48:	orr	r0, r0, r7, lsl #24
   2bd4c:	str	r0, [sp, #24]
   2bd50:	lsr	r0, r7, #8
   2bd54:	str	r0, [sp, #20]
   2bd58:	ldr	r0, [r6, #64]	; 0x40
   2bd5c:	cmp	r0, #0
   2bd60:	str	r5, [sp, #28]
   2bd64:	beq	2bd7c <__flatcc_fb_build_schema@@Base+0xb3c>
   2bd68:	mov	r0, r8
   2bd6c:	mov	r1, r6
   2bd70:	movw	r2, #54918	; 0xd686
   2bd74:	movt	r2, #4
   2bd78:	bl	2c134 <__flatcc_fb_build_schema@@Base+0xef4>
   2bd7c:	ldr	r5, [sp, #8]
   2bd80:	add	r7, sp, #40	; 0x28
   2bd84:	ldr	r6, [r6]
   2bd88:	mov	r9, #0
   2bd8c:	cmp	r6, #0
   2bd90:	bne	2b96c <__flatcc_fb_build_schema@@Base+0x72c>
   2bd94:	b	2b924 <__flatcc_fb_build_schema@@Base+0x6e4>
   2bd98:	movw	r2, #54215	; 0xd3c7
   2bd9c:	movt	r2, #4
   2bda0:	b	2bde8 <__flatcc_fb_build_schema@@Base+0xba8>
   2bda4:	movw	r2, #54625	; 0xd561
   2bda8:	movt	r2, #4
   2bdac:	mov	r0, sl
   2bdb0:	b	2bdec <__flatcc_fb_build_schema@@Base+0xbac>
   2bdb4:	movw	r2, #54625	; 0xd561
   2bdb8:	movt	r2, #4
   2bdbc:	b	2bde8 <__flatcc_fb_build_schema@@Base+0xba8>
   2bdc0:	movw	r2, #54844	; 0xd63c
   2bdc4:	movt	r2, #4
   2bdc8:	mov	r0, r8
   2bdcc:	mov	r1, r6
   2bdd0:	bl	2c134 <__flatcc_fb_build_schema@@Base+0xef4>
   2bdd4:	mov	r0, #1
   2bdd8:	strh	r0, [r6, #56]	; 0x38
   2bddc:	b	2b920 <__flatcc_fb_build_schema@@Base+0x6e0>
   2bde0:	movw	r2, #54566	; 0xd526
   2bde4:	movt	r2, #4
   2bde8:	mov	r0, r8
   2bdec:	mov	r1, r6
   2bdf0:	b	2b91c <__flatcc_fb_build_schema@@Base+0x6dc>
   2bdf4:	cmp	r4, #4
   2bdf8:	bne	2be20 <__flatcc_fb_build_schema@@Base+0xbe0>
   2bdfc:	ldr	r0, [sp, #28]
   2be00:	uxtb	r0, r0
   2be04:	ldr	r2, [sp, #24]
   2be08:	orr	r0, r0, r2, lsl #8
   2be0c:	ldr	r1, [sp, #20]
   2be10:	lsl	r1, r1, #8
   2be14:	orr	r1, r1, r2, lsr #24
   2be18:	orrs	r0, r0, r1
   2be1c:	beq	2be38 <__flatcc_fb_build_schema@@Base+0xbf8>
   2be20:	movw	r2, #54741	; 0xd5d5
   2be24:	movt	r2, #4
   2be28:	b	2bdc8 <__flatcc_fb_build_schema@@Base+0xb88>
   2be2c:	movw	r2, #54780	; 0xd5fc
   2be30:	movt	r2, #4
   2be34:	b	2bdc8 <__flatcc_fb_build_schema@@Base+0xb88>
   2be38:	movw	r2, #54676	; 0xd594
   2be3c:	movt	r2, #4
   2be40:	b	2bdc8 <__flatcc_fb_build_schema@@Base+0xb88>
   2be44:	movw	r0, #54256	; 0xd3f0
   2be48:	movt	r0, #4
   2be4c:	movw	r1, #53477	; 0xd0e5
   2be50:	movt	r1, #4
   2be54:	movw	r3, #53909	; 0xd295
   2be58:	movt	r3, #4
   2be5c:	movw	r2, #1315	; 0x523
   2be60:	bl	14950 <__assert_fail@plt>
   2be64:	movw	r0, #58670	; 0xe52e
   2be68:	movt	r0, #4
   2be6c:	movw	r1, #53477	; 0xd0e5
   2be70:	movt	r1, #4
   2be74:	movw	r3, #53909	; 0xd295
   2be78:	movt	r3, #4
   2be7c:	movw	r2, #1229	; 0x4cd
   2be80:	bl	14950 <__assert_fail@plt>
   2be84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2be88:	add	fp, sp, #28
   2be8c:	sub	sp, sp, #52	; 0x34
   2be90:	mov	r5, r1
   2be94:	mov	r4, r0
   2be98:	ldrh	r0, [r1, #48]	; 0x30
   2be9c:	cmp	r0, #0
   2bea0:	beq	2bec4 <__flatcc_fb_build_schema@@Base+0xc84>
   2bea4:	movw	r2, #55204	; 0xd7a4
   2bea8:	movt	r2, #4
   2beac:	mov	r0, r4
   2beb0:	mov	r1, r5
   2beb4:	bl	2c134 <__flatcc_fb_build_schema@@Base+0xef4>
   2beb8:	mvn	r0, #0
   2bebc:	sub	sp, fp, #28
   2bec0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2bec4:	ldr	r1, [r5, #28]
   2bec8:	add	r3, sp, #4
   2becc:	mov	r0, r4
   2bed0:	mov	r2, #16
   2bed4:	bl	2d6a8 <__flatcc_fb_build_schema@@Base+0x2468>
   2bed8:	strh	r0, [r5, #92]	; 0x5c
   2bedc:	ldr	r0, [sp, #20]
   2bee0:	cmp	r0, #0
   2bee4:	beq	2bf1c <__flatcc_fb_build_schema@@Base+0xcdc>
   2bee8:	ldrd	r6, [r0, #8]
   2beec:	mov	r0, r6
   2bef0:	mov	r1, r7
   2bef4:	bl	2d890 <__flatcc_fb_build_schema@@Base+0x2650>
   2bef8:	cmp	r0, #0
   2befc:	beq	2bf08 <__flatcc_fb_build_schema@@Base+0xcc8>
   2bf00:	strh	r6, [r5, #104]	; 0x68
   2bf04:	b	2bf1c <__flatcc_fb_build_schema@@Base+0xcdc>
   2bf08:	movw	r2, #55246	; 0xd7ce
   2bf0c:	movt	r2, #4
   2bf10:	mov	r0, r4
   2bf14:	mov	r1, r5
   2bf18:	bl	2c134 <__flatcc_fb_build_schema@@Base+0xef4>
   2bf1c:	ldr	r6, [r5, #20]
   2bf20:	cmp	r6, #0
   2bf24:	moveq	r0, #0
   2bf28:	subeq	sp, fp, #28
   2bf2c:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2bf30:	add	r7, r5, #56	; 0x38
   2bf34:	mov	r9, #0
   2bf38:	add	r8, sp, #4
   2bf3c:	movw	sl, #55319	; 0xd817
   2bf40:	movt	sl, #4
   2bf44:	b	2bf7c <__flatcc_fb_build_schema@@Base+0xd3c>
   2bf48:	ldr	r1, [r4, #152]	; 0x98
   2bf4c:	cmp	r1, #0
   2bf50:	beq	2c104 <__flatcc_fb_build_schema@@Base+0xec4>
   2bf54:	cmp	r0, #3
   2bf58:	bne	2c110 <__flatcc_fb_build_schema@@Base+0xed0>
   2bf5c:	ldrb	r0, [r6, #72]	; 0x48
   2bf60:	tst	r0, #128	; 0x80
   2bf64:	beq	2c044 <__flatcc_fb_build_schema@@Base+0xe04>
   2bf68:	ldr	r0, [r4, #148]	; 0x94
   2bf6c:	cmp	r0, #0
   2bf70:	beq	2c0ec <__flatcc_fb_build_schema@@Base+0xeac>
   2bf74:	add	r9, r9, #1
   2bf78:	b	2c044 <__flatcc_fb_build_schema@@Base+0xe04>
   2bf7c:	mov	r0, r7
   2bf80:	mov	r1, r6
   2bf84:	bl	2b688 <__flatcc_fb_build_schema@@Base+0x448>
   2bf88:	cmp	r0, #0
   2bf8c:	beq	2bfa8 <__flatcc_fb_build_schema@@Base+0xd68>
   2bf90:	mov	r3, r0
   2bf94:	mov	r0, r4
   2bf98:	mov	r1, r6
   2bf9c:	mov	r2, sl
   2bfa0:	bl	2b690 <__flatcc_fb_build_schema@@Base+0x450>
   2bfa4:	b	2c088 <__flatcc_fb_build_schema@@Base+0xe48>
   2bfa8:	ldrh	r0, [r6, #8]
   2bfac:	cmp	r0, #5
   2bfb0:	bne	2c0cc <__flatcc_fb_build_schema@@Base+0xe8c>
   2bfb4:	ldr	r0, [r4, #168]	; 0xa8
   2bfb8:	ldr	r3, [r4, #172]	; 0xac
   2bfbc:	cmp	r3, #0
   2bfc0:	movwne	r3, #128	; 0x80
   2bfc4:	cmp	r0, #0
   2bfc8:	orrne	r3, r3, #4
   2bfcc:	ldr	r1, [r6, #64]	; 0x40
   2bfd0:	mov	r0, r4
   2bfd4:	mov	r2, r3
   2bfd8:	mov	r3, r8
   2bfdc:	bl	2d6a8 <__flatcc_fb_build_schema@@Base+0x2468>
   2bfe0:	strh	r0, [r6, #72]	; 0x48
   2bfe4:	ldrh	r1, [r6, #24]
   2bfe8:	cmp	r1, #8
   2bfec:	beq	2c03c <__flatcc_fb_build_schema@@Base+0xdfc>
   2bff0:	cmp	r1, #12
   2bff4:	bne	2c0d8 <__flatcc_fb_build_schema@@Base+0xe98>
   2bff8:	ldr	r2, [r6, #16]
   2bffc:	ldr	r1, [r5, #12]
   2c000:	mov	r0, r4
   2c004:	bl	2d57c <__flatcc_fb_build_schema@@Base+0x233c>
   2c008:	cmp	r0, #0
   2c00c:	beq	2c068 <__flatcc_fb_build_schema@@Base+0xe28>
   2c010:	mov	r3, r0
   2c014:	mov	r0, #14
   2c018:	strh	r0, [r6, #24]
   2c01c:	str	r3, [r6, #16]
   2c020:	ldrh	r0, [r3, #8]
   2c024:	cmp	r0, #1
   2c028:	bne	2bf48 <__flatcc_fb_build_schema@@Base+0xd08>
   2c02c:	ldrb	r0, [r6, #72]	; 0x48
   2c030:	tst	r0, #128	; 0x80
   2c034:	beq	2c044 <__flatcc_fb_build_schema@@Base+0xe04>
   2c038:	b	2c0ec <__flatcc_fb_build_schema@@Base+0xeac>
   2c03c:	ubfx	r0, r0, #7, #1
   2c040:	add	r9, r9, r0
   2c044:	ldrh	r0, [r6, #56]	; 0x38
   2c048:	cmp	r0, #0
   2c04c:	beq	2c088 <__flatcc_fb_build_schema@@Base+0xe48>
   2c050:	mov	r0, r4
   2c054:	mov	r1, r6
   2c058:	movw	r2, #55670	; 0xd976
   2c05c:	movt	r2, #4
   2c060:	bl	2c134 <__flatcc_fb_build_schema@@Base+0xef4>
   2c064:	b	2c088 <__flatcc_fb_build_schema@@Base+0xe48>
   2c068:	ldr	r1, [r6, #16]
   2c06c:	mov	r0, r4
   2c070:	movw	r2, #55389	; 0xd85d
   2c074:	movt	r2, #4
   2c078:	mov	r3, r6
   2c07c:	bl	275bc <error_ref_sym@@Base>
   2c080:	mov	r0, #1
   2c084:	strh	r0, [r6, #24]
   2c088:	ldr	r6, [r6]
   2c08c:	cmp	r6, #0
   2c090:	bne	2bf7c <__flatcc_fb_build_schema@@Base+0xd3c>
   2c094:	mov	r0, #0
   2c098:	cmp	r9, #0
   2c09c:	beq	2bebc <__flatcc_fb_build_schema@@Base+0xc7c>
   2c0a0:	ldrh	r1, [r5, #10]
   2c0a4:	orr	r1, r1, #8
   2c0a8:	strh	r1, [r5, #10]
   2c0ac:	cmp	r9, #2
   2c0b0:	blt	2bebc <__flatcc_fb_build_schema@@Base+0xc7c>
   2c0b4:	ldr	r1, [r4, #156]	; 0x9c
   2c0b8:	cmp	r1, #0
   2c0bc:	bne	2bebc <__flatcc_fb_build_schema@@Base+0xc7c>
   2c0c0:	movw	r2, #55719	; 0xd9a7
   2c0c4:	movt	r2, #4
   2c0c8:	b	2beac <__flatcc_fb_build_schema@@Base+0xc6c>
   2c0cc:	movw	r2, #55353	; 0xd839
   2c0d0:	movt	r2, #4
   2c0d4:	b	2c0e0 <__flatcc_fb_build_schema@@Base+0xea0>
   2c0d8:	movw	r2, #55612	; 0xd93c
   2c0dc:	movt	r2, #4
   2c0e0:	mov	r0, r4
   2c0e4:	mov	r1, r6
   2c0e8:	b	2beb4 <__flatcc_fb_build_schema@@Base+0xc74>
   2c0ec:	movw	r2, #55503	; 0xd8cf
   2c0f0:	movt	r2, #4
   2c0f4:	mov	r0, r4
   2c0f8:	mov	r1, r6
   2c0fc:	bl	2c134 <__flatcc_fb_build_schema@@Base+0xef4>
   2c100:	b	2c124 <__flatcc_fb_build_schema@@Base+0xee4>
   2c104:	movw	r2, #55552	; 0xd900
   2c108:	movt	r2, #4
   2c10c:	b	2c118 <__flatcc_fb_build_schema@@Base+0xed8>
   2c110:	movw	r2, #55435	; 0xd88b
   2c114:	movt	r2, #4
   2c118:	mov	r0, r4
   2c11c:	mov	r1, r6
   2c120:	bl	2b690 <__flatcc_fb_build_schema@@Base+0x450>
   2c124:	mov	r0, #1
   2c128:	strh	r0, [r6, #24]
   2c12c:	b	2beb8 <__flatcc_fb_build_schema@@Base+0xc78>
   2c130:	b	2b758 <__flatcc_fb_build_schema@@Base+0x518>
   2c134:	ldr	r1, [r1, #4]
   2c138:	b	2d888 <__flatcc_fb_build_schema@@Base+0x2648>
   2c13c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c140:	add	fp, sp, #28
   2c144:	sub	sp, sp, #4
   2c148:	mov	r4, r0
   2c14c:	ldrh	r0, [r1, #8]
   2c150:	cmp	r0, #1
   2c154:	bne	2c434 <__flatcc_fb_build_schema@@Base+0x11f4>
   2c158:	mov	r5, r1
   2c15c:	ldrh	r0, [r1, #10]
   2c160:	tst	r0, #1
   2c164:	bne	2c454 <__flatcc_fb_build_schema@@Base+0x1214>
   2c168:	mov	r7, #0
   2c16c:	tst	r0, #2
   2c170:	bne	2c428 <__flatcc_fb_build_schema@@Base+0x11e8>
   2c174:	ldr	r1, [r5, #120]	; 0x78
   2c178:	cmp	r1, #0
   2c17c:	bne	2c474 <__flatcc_fb_build_schema@@Base+0x1234>
   2c180:	orr	r0, r0, #1
   2c184:	strh	r0, [r5, #10]
   2c188:	ldr	sl, [r5, #20]
   2c18c:	cmp	sl, #0
   2c190:	beq	2c318 <__flatcc_fb_build_schema@@Base+0x10d8>
   2c194:	add	r8, r5, #112	; 0x70
   2c198:	mov	r9, #1
   2c19c:	ldr	r0, [r4, #116]	; 0x74
   2c1a0:	cmp	r0, #100	; 0x64
   2c1a4:	bge	2c3a8 <__flatcc_fb_build_schema@@Base+0x1168>
   2c1a8:	ldrh	r0, [sl, #24]
   2c1ac:	mvn	r7, #0
   2c1b0:	cmp	r0, #8
   2c1b4:	beq	2c1e4 <__flatcc_fb_build_schema@@Base+0xfa4>
   2c1b8:	cmp	r0, #14
   2c1bc:	bne	2c3c0 <__flatcc_fb_build_schema@@Base+0x1180>
   2c1c0:	ldr	r6, [sl, #16]
   2c1c4:	ldrh	r0, [r6, #8]
   2c1c8:	cmp	r0, #1
   2c1cc:	beq	2c20c <__flatcc_fb_build_schema@@Base+0xfcc>
   2c1d0:	cmp	r0, #3
   2c1d4:	bne	2c3d4 <__flatcc_fb_build_schema@@Base+0x1194>
   2c1d8:	ldrd	r0, [r6, #112]	; 0x70
   2c1dc:	strh	r0, [sl, #74]	; 0x4a
   2c1e0:	b	2c27c <__flatcc_fb_build_schema@@Base+0x103c>
   2c1e4:	ldr	r6, [sl, #16]
   2c1e8:	mov	r0, r6
   2c1ec:	bl	2d674 <__flatcc_fb_build_schema@@Base+0x2434>
   2c1f0:	str	r0, [sl, #16]
   2c1f4:	bl	2d698 <__flatcc_fb_build_schema@@Base+0x2458>
   2c1f8:	cmp	r0, #0
   2c1fc:	beq	2c3ec <__flatcc_fb_build_schema@@Base+0x11ac>
   2c200:	strh	r0, [sl, #74]	; 0x4a
   2c204:	mov	r1, #0
   2c208:	b	2c27c <__flatcc_fb_build_schema@@Base+0x103c>
   2c20c:	ldrh	r0, [r6, #10]
   2c210:	tst	r0, #1
   2c214:	bne	2c408 <__flatcc_fb_build_schema@@Base+0x11c8>
   2c218:	tst	r0, #2
   2c21c:	bne	2c270 <__flatcc_fb_build_schema@@Base+0x1030>
   2c220:	ldr	r0, [r4, #188]	; 0xbc
   2c224:	cmp	r0, #0
   2c228:	beq	2c244 <__flatcc_fb_build_schema@@Base+0x1004>
   2c22c:	mov	r0, r4
   2c230:	mov	r1, sl
   2c234:	movw	r2, #56006	; 0xdac6
   2c238:	movt	r2, #4
   2c23c:	mov	r3, r6
   2c240:	bl	2b690 <__flatcc_fb_build_schema@@Base+0x450>
   2c244:	ldr	r0, [r4, #116]	; 0x74
   2c248:	add	r0, r0, #1
   2c24c:	str	r0, [r4, #116]	; 0x74
   2c250:	mov	r0, r4
   2c254:	mov	r1, r6
   2c258:	bl	2c13c <__flatcc_fb_build_schema@@Base+0xefc>
   2c25c:	ldr	r1, [r4, #116]	; 0x74
   2c260:	sub	r1, r1, #1
   2c264:	str	r1, [r4, #116]	; 0x74
   2c268:	cmp	r0, #0
   2c26c:	bne	2c424 <__flatcc_fb_build_schema@@Base+0x11e4>
   2c270:	ldrh	r0, [r6, #104]	; 0x68
   2c274:	strh	r0, [sl, #74]	; 0x4a
   2c278:	ldrd	r0, [r6, #112]	; 0x70
   2c27c:	strd	r0, [sl, #88]	; 0x58
   2c280:	ldrh	r2, [sl, #74]	; 0x4a
   2c284:	ldrd	r0, [r8]
   2c288:	mov	r3, #0
   2c28c:	bl	2d900 <__flatcc_fb_build_schema@@Base+0x26c0>
   2c290:	mov	r2, r0
   2c294:	mov	r3, r1
   2c298:	strd	r2, [sl, #80]	; 0x50
   2c29c:	ldrd	r0, [r8]
   2c2a0:	subs	r7, r2, r0
   2c2a4:	sbcs	r7, r3, r1
   2c2a8:	bcc	2c38c <__flatcc_fb_build_schema@@Base+0x114c>
   2c2ac:	ldrd	r6, [sl, #88]	; 0x58
   2c2b0:	adds	r6, r6, r2
   2c2b4:	adcs	r7, r7, r3
   2c2b8:	mov	r2, #0
   2c2bc:	adc	r2, r2, #0
   2c2c0:	cmp	r2, #1
   2c2c4:	beq	2c38c <__flatcc_fb_build_schema@@Base+0x114c>
   2c2c8:	subs	r0, r6, r0
   2c2cc:	sbcs	r0, r7, r1
   2c2d0:	bcc	2c2e0 <__flatcc_fb_build_schema@@Base+0x10a0>
   2c2d4:	subs	r0, r6, #65536	; 0x10000
   2c2d8:	sbcs	r0, r7, #0
   2c2dc:	bcc	2c2f4 <__flatcc_fb_build_schema@@Base+0x10b4>
   2c2e0:	mov	r0, r4
   2c2e4:	mov	r1, sl
   2c2e8:	movw	r2, #56133	; 0xdb45
   2c2ec:	movt	r2, #4
   2c2f0:	bl	2c134 <__flatcc_fb_build_schema@@Base+0xef4>
   2c2f4:	strd	r6, [r8]
   2c2f8:	ldrh	r0, [sl, #74]	; 0x4a
   2c2fc:	uxth	r1, r9
   2c300:	cmp	r1, r0
   2c304:	movcc	r9, r0
   2c308:	ldr	sl, [sl]
   2c30c:	cmp	sl, #0
   2c310:	bne	2c19c <__flatcc_fb_build_schema@@Base+0xf5c>
   2c314:	b	2c31c <__flatcc_fb_build_schema@@Base+0x10dc>
   2c318:	mov	r9, #1
   2c31c:	ldrh	r0, [r5, #104]	; 0x68
   2c320:	cmp	r0, #0
   2c324:	beq	2c348 <__flatcc_fb_build_schema@@Base+0x1108>
   2c328:	uxth	r1, r9
   2c32c:	cmp	r1, r0
   2c330:	bls	2c34c <__flatcc_fb_build_schema@@Base+0x110c>
   2c334:	movw	r2, #56184	; 0xdb78
   2c338:	movt	r2, #4
   2c33c:	mov	r0, r4
   2c340:	mov	r1, r5
   2c344:	bl	2c134 <__flatcc_fb_build_schema@@Base+0xef4>
   2c348:	strh	r9, [r5, #104]	; 0x68
   2c34c:	ldrd	r0, [r5, #112]	; 0x70
   2c350:	ldrh	r2, [r5, #104]	; 0x68
   2c354:	mov	r7, #0
   2c358:	mov	r3, #0
   2c35c:	bl	2d900 <__flatcc_fb_build_schema@@Base+0x26c0>
   2c360:	str	r1, [r5, #116]	; 0x74
   2c364:	str	r0, [r5, #112]	; 0x70
   2c368:	ldrh	r0, [r5, #10]
   2c36c:	movw	r1, #65532	; 0xfffc
   2c370:	and	r0, r0, r1
   2c374:	orr	r0, r0, #2
   2c378:	strh	r0, [r5, #10]
   2c37c:	ldr	r0, [r4, #396]	; 0x18c
   2c380:	str	r0, [r5, #120]	; 0x78
   2c384:	str	r5, [r4, #396]	; 0x18c
   2c388:	b	2c428 <__flatcc_fb_build_schema@@Base+0x11e8>
   2c38c:	movw	r2, #56112	; 0xdb30
   2c390:	movt	r2, #4
   2c394:	mov	r0, r4
   2c398:	mov	r1, sl
   2c39c:	bl	2c134 <__flatcc_fb_build_schema@@Base+0xef4>
   2c3a0:	mvn	r7, #0
   2c3a4:	b	2c428 <__flatcc_fb_build_schema@@Base+0x11e8>
   2c3a8:	movw	r1, #55885	; 0xda4d
   2c3ac:	movt	r1, #4
   2c3b0:	mov	r0, r4
   2c3b4:	bl	2d570 <__flatcc_fb_build_schema@@Base+0x2330>
   2c3b8:	mvn	r7, #0
   2c3bc:	b	2c428 <__flatcc_fb_build_schema@@Base+0x11e8>
   2c3c0:	cmp	r0, #1
   2c3c4:	beq	2c428 <__flatcc_fb_build_schema@@Base+0x11e8>
   2c3c8:	movw	r2, #55958	; 0xda96
   2c3cc:	movt	r2, #4
   2c3d0:	b	2c3dc <__flatcc_fb_build_schema@@Base+0x119c>
   2c3d4:	movw	r2, #56077	; 0xdb0d
   2c3d8:	movt	r2, #4
   2c3dc:	mov	r0, r4
   2c3e0:	mov	r1, sl
   2c3e4:	bl	2c134 <__flatcc_fb_build_schema@@Base+0xef4>
   2c3e8:	b	2c428 <__flatcc_fb_build_schema@@Base+0x11e8>
   2c3ec:	movw	r2, #55958	; 0xda96
   2c3f0:	movt	r2, #4
   2c3f4:	mov	r0, r4
   2c3f8:	mov	r1, sl
   2c3fc:	mov	r3, r6
   2c400:	bl	2d8f8 <__flatcc_fb_build_schema@@Base+0x26b8>
   2c404:	b	2c428 <__flatcc_fb_build_schema@@Base+0x11e8>
   2c408:	movw	r2, #55974	; 0xdaa6
   2c40c:	movt	r2, #4
   2c410:	mov	r0, r4
   2c414:	mov	r1, sl
   2c418:	mov	r3, r6
   2c41c:	bl	2b690 <__flatcc_fb_build_schema@@Base+0x450>
   2c420:	b	2c428 <__flatcc_fb_build_schema@@Base+0x11e8>
   2c424:	mov	r7, r0
   2c428:	mov	r0, r7
   2c42c:	sub	sp, fp, #28
   2c430:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c434:	movw	r0, #47893	; 0xbb15
   2c438:	movt	r0, #3
   2c43c:	movw	r1, #53477	; 0xd0e5
   2c440:	movt	r1, #4
   2c444:	movw	r3, #55779	; 0xd9e3
   2c448:	movt	r3, #4
   2c44c:	movw	r2, #502	; 0x1f6
   2c450:	bl	14950 <__assert_fail@plt>
   2c454:	movw	r0, #55835	; 0xda1b
   2c458:	movt	r0, #4
   2c45c:	movw	r1, #53477	; 0xd0e5
   2c460:	movt	r1, #4
   2c464:	movw	r3, #55779	; 0xd9e3
   2c468:	movt	r3, #4
   2c46c:	mov	r2, #504	; 0x1f8
   2c470:	bl	14950 <__assert_fail@plt>
   2c474:	movw	r0, #55874	; 0xda42
   2c478:	movt	r0, #4
   2c47c:	movw	r1, #53477	; 0xd0e5
   2c480:	movt	r1, #4
   2c484:	movw	r3, #55779	; 0xd9e3
   2c488:	movt	r3, #4
   2c48c:	mov	r2, #508	; 0x1fc
   2c490:	bl	14950 <__assert_fail@plt>
   2c494:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c498:	add	fp, sp, #28
   2c49c:	sub	sp, sp, #196	; 0xc4
   2c4a0:	mov	r8, r0
   2c4a4:	ldrh	r0, [r1, #8]
   2c4a8:	cmp	r0, #0
   2c4ac:	bne	2d0c8 <__flatcc_fb_build_schema@@Base+0x1e88>
   2c4b0:	mov	sl, r1
   2c4b4:	ldrh	r0, [r1, #48]	; 0x30
   2c4b8:	cmp	r0, #0
   2c4bc:	bne	2d0e8 <__flatcc_fb_build_schema@@Base+0x1ea8>
   2c4c0:	ldr	r1, [sl, #28]
   2c4c4:	add	r3, sp, #48	; 0x30
   2c4c8:	mov	r0, r8
   2c4cc:	mov	r2, #8
   2c4d0:	bl	2d6a8 <__flatcc_fb_build_schema@@Base+0x2468>
   2c4d4:	strh	r0, [sl, #92]	; 0x5c
   2c4d8:	ldr	r7, [sl, #20]
   2c4dc:	cmp	r7, #0
   2c4e0:	beq	2c53c <__flatcc_fb_build_schema@@Base+0x12fc>
   2c4e4:	add	r0, r8, #216	; 0xd8
   2c4e8:	str	r0, [sp, #12]
   2c4ec:	add	r5, sl, #56	; 0x38
   2c4f0:	movw	r4, #56373	; 0xdc35
   2c4f4:	movt	r4, #4
   2c4f8:	mov	r0, #0
   2c4fc:	str	r0, [sp, #36]	; 0x24
   2c500:	mov	r0, #0
   2c504:	str	r0, [sp, #8]
   2c508:	mov	r0, #0
   2c50c:	str	r0, [sp, #20]
   2c510:	mov	r0, #0
   2c514:	str	r0, [sp, #40]	; 0x28
   2c518:	mov	r0, #0
   2c51c:	str	r0, [sp, #44]	; 0x2c
   2c520:	mov	r0, #0
   2c524:	str	r0, [sp, #24]
   2c528:	mov	r6, #0
   2c52c:	mov	r9, #0
   2c530:	str	sl, [sp, #32]
   2c534:	str	r5, [sp, #16]
   2c538:	b	2c708 <__flatcc_fb_build_schema@@Base+0x14c8>
   2c53c:	mov	r0, #0
   2c540:	str	r0, [sp, #36]	; 0x24
   2c544:	mov	r2, #0
   2c548:	mov	r0, #0
   2c54c:	str	r0, [sp, #20]
   2c550:	mov	r0, #0
   2c554:	str	r0, [sp, #40]	; 0x28
   2c558:	mov	r0, #0
   2c55c:	str	r0, [sp, #24]
   2c560:	mov	r6, #0
   2c564:	mov	r9, #0
   2c568:	b	2cf5c <__flatcc_fb_build_schema@@Base+0x1d1c>
   2c56c:	ldr	r2, [r5, #40]	; 0x28
   2c570:	mov	r0, r8
   2c574:	mov	r1, r7
   2c578:	mov	r3, r9
   2c57c:	bl	2de7c <__flatcc_fb_coerce_scalar_type@@Base>
   2c580:	cmp	r0, #0
   2c584:	bne	2cf24 <__flatcc_fb_build_schema@@Base+0x1ce4>
   2c588:	ldr	r0, [r8, #212]	; 0xd4
   2c58c:	cmp	r0, #0
   2c590:	beq	2c5ac <__flatcc_fb_build_schema@@Base+0x136c>
   2c594:	ldr	r0, [r7, #16]
   2c598:	add	r0, r0, #72	; 0x48
   2c59c:	mov	r1, r9
   2c5a0:	bl	2db2c <__flatcc_fb_build_schema@@Base+0x28ec>
   2c5a4:	cmp	r0, #0
   2c5a8:	beq	2c6a4 <__flatcc_fb_build_schema@@Base+0x1464>
   2c5ac:	ldr	r2, [sp, #36]	; 0x24
   2c5b0:	ldr	r3, [sp, #4]
   2c5b4:	b	2cc00 <__flatcc_fb_build_schema@@Base+0x19c0>
   2c5b8:	str	r3, [sp, #4]
   2c5bc:	ldr	r1, [r6, #4]
   2c5c0:	cmp	r0, #4
   2c5c4:	ldr	r9, [sp, #28]
   2c5c8:	mov	r0, r8
   2c5cc:	bne	2c5f0 <__flatcc_fb_build_schema@@Base+0x13b0>
   2c5d0:	movw	r2, #57585	; 0xe0f1
   2c5d4:	movt	r2, #4
   2c5d8:	b	2c6ec <__flatcc_fb_build_schema@@Base+0x14ac>
   2c5dc:	mov	r0, r8
   2c5e0:	mov	r1, r7
   2c5e4:	movw	r2, #57555	; 0xe0d3
   2c5e8:	movt	r2, #4
   2c5ec:	b	2cc60 <__flatcc_fb_build_schema@@Base+0x1a20>
   2c5f0:	movw	r2, #57617	; 0xe111
   2c5f4:	movt	r2, #4
   2c5f8:	b	2c6ec <__flatcc_fb_build_schema@@Base+0x14ac>
   2c5fc:	mov	r1, #1
   2c600:	strb	r1, [r2, r0]
   2c604:	cmp	r5, #0
   2c608:	bne	2c630 <__flatcc_fb_build_schema@@Base+0x13f0>
   2c60c:	b	2cc74 <__flatcc_fb_build_schema@@Base+0x1a34>
   2c610:	ldr	r1, [r6, #4]
   2c614:	mov	r0, r8
   2c618:	movw	r2, #57699	; 0xe163
   2c61c:	movt	r2, #4
   2c620:	bl	2d888 <__flatcc_fb_build_schema@@Base+0x2648>
   2c624:	ldr	r3, [sp, #4]
   2c628:	cmp	r5, #0
   2c62c:	beq	2cc74 <__flatcc_fb_build_schema@@Base+0x1a34>
   2c630:	ldrh	r0, [r5, #8]
   2c634:	cmp	r0, #4
   2c638:	bne	2cc74 <__flatcc_fb_build_schema@@Base+0x1a34>
   2c63c:	str	r3, [sp, #4]
   2c640:	ldrh	r0, [r7, #24]
   2c644:	ldrd	r2, [r9]
   2c648:	rsbs	r1, r2, #1
   2c64c:	rscs	r1, r3, #0
   2c650:	ldr	r9, [sp, #28]
   2c654:	bcc	2c670 <__flatcc_fb_build_schema@@Base+0x1430>
   2c658:	cmp	r0, #11
   2c65c:	movw	r2, #57827	; 0xe1e3
   2c660:	movt	r2, #4
   2c664:	movw	r0, #57747	; 0xe193
   2c668:	movt	r0, #4
   2c66c:	b	2c6e0 <__flatcc_fb_build_schema@@Base+0x14a0>
   2c670:	sub	r1, r2, #1
   2c674:	ldr	r2, [sp, #36]	; 0x24
   2c678:	ldrb	r2, [r2, r1]
   2c67c:	cmp	r2, #0
   2c680:	beq	2c6bc <__flatcc_fb_build_schema@@Base+0x147c>
   2c684:	cmp	r2, #2
   2c688:	bne	2c6cc <__flatcc_fb_build_schema@@Base+0x148c>
   2c68c:	cmp	r0, #11
   2c690:	movw	r2, #57997	; 0xe28d
   2c694:	movt	r2, #4
   2c698:	movw	r0, #57900	; 0xe22c
   2c69c:	movt	r0, #4
   2c6a0:	b	2c6e0 <__flatcc_fb_build_schema@@Base+0x14a0>
   2c6a4:	mov	r0, r8
   2c6a8:	mov	r1, r7
   2c6ac:	movw	r2, #57152	; 0xdf40
   2c6b0:	movt	r2, #4
   2c6b4:	bl	2c134 <__flatcc_fb_build_schema@@Base+0xef4>
   2c6b8:	b	2cf24 <__flatcc_fb_build_schema@@Base+0x1ce4>
   2c6bc:	ldr	r0, [sp, #36]	; 0x24
   2c6c0:	mov	r2, #2
   2c6c4:	strb	r2, [r0, r1]
   2c6c8:	b	2c6f8 <__flatcc_fb_build_schema@@Base+0x14b8>
   2c6cc:	cmp	r0, #11
   2c6d0:	movw	r2, #58172	; 0xe33c
   2c6d4:	movt	r2, #4
   2c6d8:	movw	r0, #58087	; 0xe2e7
   2c6dc:	movt	r0, #4
   2c6e0:	moveq	r2, r0
   2c6e4:	ldr	r1, [r6, #4]
   2c6e8:	mov	r0, r8
   2c6ec:	bl	2d888 <__flatcc_fb_build_schema@@Base+0x2648>
   2c6f0:	mov	r0, #1
   2c6f4:	str	r0, [sp, #44]	; 0x2c
   2c6f8:	mov	r6, sl
   2c6fc:	ldr	r5, [sp, #16]
   2c700:	ldr	r3, [sp, #4]
   2c704:	b	2cc80 <__flatcc_fb_build_schema@@Base+0x1a40>
   2c708:	mov	r0, r5
   2c70c:	mov	r1, r7
   2c710:	bl	2b688 <__flatcc_fb_build_schema@@Base+0x448>
   2c714:	cmp	r0, #0
   2c718:	beq	2c734 <__flatcc_fb_build_schema@@Base+0x14f4>
   2c71c:	mov	r3, r0
   2c720:	mov	r0, r8
   2c724:	mov	r1, r7
   2c728:	mov	r2, r4
   2c72c:	bl	2b690 <__flatcc_fb_build_schema@@Base+0x450>
   2c730:	b	2cf3c <__flatcc_fb_build_schema@@Base+0x1cfc>
   2c734:	ldrh	r0, [r7, #8]
   2c738:	cmp	r0, #5
   2c73c:	bne	2d038 <__flatcc_fb_build_schema@@Base+0x1df8>
   2c740:	ldrh	r0, [r7, #24]
   2c744:	sub	r1, r0, #7
   2c748:	cmp	r1, #2
   2c74c:	bcs	2c760 <__flatcc_fb_build_schema@@Base+0x1520>
   2c750:	ldr	r0, [r7, #16]
   2c754:	bl	2d674 <__flatcc_fb_build_schema@@Base+0x2434>
   2c758:	str	r0, [r7, #16]
   2c75c:	b	2c768 <__flatcc_fb_build_schema@@Base+0x1528>
   2c760:	cmp	r0, #1
   2c764:	beq	2cf3c <__flatcc_fb_build_schema@@Base+0x1cfc>
   2c768:	ldr	r1, [r7, #64]	; 0x40
   2c76c:	mov	r0, r8
   2c770:	movw	r2, #4038	; 0xfc6
   2c774:	add	r3, sp, #48	; 0x30
   2c778:	bl	2d6a8 <__flatcc_fb_build_schema@@Base+0x2468>
   2c77c:	strh	r0, [r7, #72]	; 0x48
   2c780:	ldr	r3, [sp, #72]	; 0x48
   2c784:	cmp	r3, #0
   2c788:	beq	2c79c <__flatcc_fb_build_schema@@Base+0x155c>
   2c78c:	ldr	r1, [sl, #12]
   2c790:	mov	r0, r8
   2c794:	mov	r2, r7
   2c798:	bl	2d970 <__flatcc_fb_build_schema@@Base+0x2730>
   2c79c:	ldrb	r0, [r7, #73]	; 0x49
   2c7a0:	tst	r0, #1
   2c7a4:	beq	2c7c8 <__flatcc_fb_build_schema@@Base+0x1588>
   2c7a8:	ldrh	r0, [r7, #24]
   2c7ac:	cmp	r0, #8
   2c7b0:	bne	2c7c8 <__flatcc_fb_build_schema@@Base+0x1588>
   2c7b4:	mov	r0, r8
   2c7b8:	mov	r1, r7
   2c7bc:	movw	r2, #56444	; 0xdc7c
   2c7c0:	movt	r2, #4
   2c7c4:	bl	2c134 <__flatcc_fb_build_schema@@Base+0xef4>
   2c7c8:	ldrb	r0, [r7, #73]	; 0x49
   2c7cc:	tst	r0, #4
   2c7d0:	beq	2c7fc <__flatcc_fb_build_schema@@Base+0x15bc>
   2c7d4:	ldrh	r0, [r7, #24]
   2c7d8:	cmp	r0, #7
   2c7dc:	ldreq	r0, [r7, #16]
   2c7e0:	cmpeq	r0, #4
   2c7e4:	beq	2c7fc <__flatcc_fb_build_schema@@Base+0x15bc>
   2c7e8:	mov	r0, r8
   2c7ec:	mov	r1, r7
   2c7f0:	movw	r2, #56500	; 0xdcb4
   2c7f4:	movt	r2, #4
   2c7f8:	bl	2c134 <__flatcc_fb_build_schema@@Base+0xef4>
   2c7fc:	ldrb	r0, [r7, #73]	; 0x49
   2c800:	tst	r0, #8
   2c804:	beq	2c830 <__flatcc_fb_build_schema@@Base+0x15f0>
   2c808:	ldrh	r0, [r7, #24]
   2c80c:	cmp	r0, #7
   2c810:	ldreq	r0, [r7, #16]
   2c814:	cmpeq	r0, #4
   2c818:	beq	2c830 <__flatcc_fb_build_schema@@Base+0x15f0>
   2c81c:	mov	r0, r8
   2c820:	mov	r1, r7
   2c824:	movw	r2, #56560	; 0xdcf0
   2c828:	movt	r2, #4
   2c82c:	bl	2c134 <__flatcc_fb_build_schema@@Base+0xef4>
   2c830:	ldrh	r0, [r7, #72]	; 0x48
   2c834:	and	r0, r0, #3072	; 0xc00
   2c838:	cmp	r0, #3072	; 0xc00
   2c83c:	bne	2c854 <__flatcc_fb_build_schema@@Base+0x1614>
   2c840:	mov	r0, r8
   2c844:	mov	r1, r7
   2c848:	movw	r2, #56623	; 0xdd2f
   2c84c:	movt	r2, #4
   2c850:	bl	2c134 <__flatcc_fb_build_schema@@Base+0xef4>
   2c854:	mov	sl, r6
   2c858:	orrs	r0, r6, r9
   2c85c:	ldr	r6, [sp, #52]	; 0x34
   2c860:	bne	2c88c <__flatcc_fb_build_schema@@Base+0x164c>
   2c864:	cmp	r6, #0
   2c868:	beq	2c88c <__flatcc_fb_build_schema@@Base+0x164c>
   2c86c:	ldr	r0, [sp, #12]
   2c870:	ldr	r2, [r0]
   2c874:	ldr	r0, [r8, #112]	; 0x70
   2c878:	str	r0, [sp, #36]	; 0x24
   2c87c:	mov	r1, #0
   2c880:	bl	148a8 <memset@plt>
   2c884:	mov	r0, #1
   2c888:	str	r0, [sp, #24]
   2c88c:	ldr	r0, [sp, #44]	; 0x2c
   2c890:	cmp	r0, #0
   2c894:	bne	2c900 <__flatcc_fb_build_schema@@Base+0x16c0>
   2c898:	ldr	r0, [sp, #12]
   2c89c:	ldrd	r0, [r0]
   2c8a0:	subs	r0, sl, r0
   2c8a4:	sbcs	r0, r9, r1
   2c8a8:	bcs	2c8dc <__flatcc_fb_build_schema@@Base+0x169c>
   2c8ac:	mov	r0, #0
   2c8b0:	str	r0, [sp, #44]	; 0x2c
   2c8b4:	ldr	r0, [sp, #24]
   2c8b8:	cmp	r0, #0
   2c8bc:	bne	2c8f8 <__flatcc_fb_build_schema@@Base+0x16b8>
   2c8c0:	mov	r2, #0
   2c8c4:	uxth	r0, sl
   2c8c8:	mov	r1, #0
   2c8cc:	str	r1, [sp, #44]	; 0x2c
   2c8d0:	str	r0, [r7, #96]	; 0x60
   2c8d4:	str	r2, [r7, #100]	; 0x64
   2c8d8:	b	2c8f8 <__flatcc_fb_build_schema@@Base+0x16b8>
   2c8dc:	mov	r0, r8
   2c8e0:	mov	r1, r7
   2c8e4:	movw	r2, #56678	; 0xdd66
   2c8e8:	movt	r2, #4
   2c8ec:	bl	2c134 <__flatcc_fb_build_schema@@Base+0xef4>
   2c8f0:	mov	r0, #1
   2c8f4:	str	r0, [sp, #44]	; 0x2c
   2c8f8:	adds	sl, sl, #1
   2c8fc:	adc	r9, r9, #0
   2c900:	ldrh	r0, [r7, #24]
   2c904:	sub	r0, r0, #7
   2c908:	cmp	r0, #5
   2c90c:	bhi	2cb14 <__flatcc_fb_build_schema@@Base+0x18d4>
   2c910:	add	r1, pc, #0
   2c914:	ldr	pc, [r1, r0, lsl #2]
   2c918:	andeq	ip, r2, r0, lsr r9
   2c91c:	andeq	ip, r2, r4, ror #20
   2c920:	andeq	ip, r2, r4, lsr #20
   2c924:	andeq	ip, r2, r4, asr #20
   2c928:	andeq	ip, r2, r0, ror r9
   2c92c:			; <UNDEFINED> instruction: 0x0002cab0
   2c930:	str	r9, [sp, #28]
   2c934:	ldr	r0, [r7, #16]
   2c938:	bl	2d698 <__flatcc_fb_build_schema@@Base+0x2458>
   2c93c:	mov	r5, #0
   2c940:	str	r0, [r7, #88]	; 0x58
   2c944:	str	r5, [r7, #92]	; 0x5c
   2c948:	strh	r0, [r7, #74]	; 0x4a
   2c94c:	ldrh	r0, [r7, #56]	; 0x38
   2c950:	cmp	r0, #0
   2c954:	beq	2cb70 <__flatcc_fb_build_schema@@Base+0x1930>
   2c958:	mov	r0, r8
   2c95c:	mov	r1, r7
   2c960:	movw	r2, #56760	; 0xddb8
   2c964:	movt	r2, #4
   2c968:	bl	2c134 <__flatcc_fb_build_schema@@Base+0xef4>
   2c96c:	b	2cf24 <__flatcc_fb_build_schema@@Base+0x1ce4>
   2c970:	str	r9, [sp, #28]
   2c974:	ldr	r2, [r7, #16]
   2c978:	ldr	r0, [sp, #32]
   2c97c:	ldr	r1, [r0, #12]
   2c980:	mov	r0, r8
   2c984:	bl	2d57c <__flatcc_fb_build_schema@@Base+0x233c>
   2c988:	cmp	r0, #0
   2c98c:	beq	2cb34 <__flatcc_fb_build_schema@@Base+0x18f4>
   2c990:	mov	r5, r0
   2c994:	ldrh	r0, [r0, #8]
   2c998:	cmp	r0, #4
   2c99c:	bhi	2cd80 <__flatcc_fb_build_schema@@Base+0x1b40>
   2c9a0:	cmp	r0, #2
   2c9a4:	beq	2cd80 <__flatcc_fb_build_schema@@Base+0x1b40>
   2c9a8:	ldrh	r0, [r7, #56]	; 0x38
   2c9ac:	cmp	r0, #0
   2c9b0:	bne	2ce80 <__flatcc_fb_build_schema@@Base+0x1c40>
   2c9b4:	str	r5, [r7, #16]
   2c9b8:	mov	r0, #15
   2c9bc:	strh	r0, [r7, #24]
   2c9c0:	ldrd	r0, [r5, #112]	; 0x70
   2c9c4:	strd	r0, [r7, #88]	; 0x58
   2c9c8:	ldrh	r0, [r5, #104]	; 0x68
   2c9cc:	strh	r0, [r7, #74]	; 0x4a
   2c9d0:	mov	r3, #0
   2c9d4:	ldr	r0, [sp, #44]	; 0x2c
   2c9d8:	cmp	r0, #0
   2c9dc:	bne	2cbfc <__flatcc_fb_build_schema@@Base+0x19bc>
   2c9e0:	ldrh	r0, [r5, #8]
   2c9e4:	cmp	r0, #4
   2c9e8:	ldr	r2, [sp, #36]	; 0x24
   2c9ec:	bne	2cc00 <__flatcc_fb_build_schema@@Base+0x19c0>
   2c9f0:	ldr	r0, [sp, #24]
   2c9f4:	cmp	r0, #0
   2c9f8:	uxtheq	r0, sl
   2c9fc:	moveq	r1, #0
   2ca00:	strdeq	r0, [r7, #96]	; 0x60
   2ca04:	adds	sl, sl, #1
   2ca08:	ldr	r0, [sp, #28]
   2ca0c:	adc	r0, r0, #0
   2ca10:	str	r0, [sp, #28]
   2ca14:	mov	r3, #0
   2ca18:	cmp	r6, #0
   2ca1c:	bne	2cc14 <__flatcc_fb_build_schema@@Base+0x19d4>
   2ca20:	b	2cc3c <__flatcc_fb_build_schema@@Base+0x19fc>
   2ca24:	ldrh	r0, [r7, #56]	; 0x38
   2ca28:	cmp	r0, #0
   2ca2c:	beq	2cb50 <__flatcc_fb_build_schema@@Base+0x1910>
   2ca30:	mov	r0, r8
   2ca34:	mov	r1, r7
   2ca38:	movw	r2, #56837	; 0xde05
   2ca3c:	movt	r2, #4
   2ca40:	b	2cb24 <__flatcc_fb_build_schema@@Base+0x18e4>
   2ca44:	ldrh	r0, [r7, #56]	; 0x38
   2ca48:	cmp	r0, #0
   2ca4c:	beq	2cb60 <__flatcc_fb_build_schema@@Base+0x1920>
   2ca50:	mov	r0, r8
   2ca54:	mov	r1, r7
   2ca58:	movw	r2, #56802	; 0xdde2
   2ca5c:	movt	r2, #4
   2ca60:	b	2cb24 <__flatcc_fb_build_schema@@Base+0x18e4>
   2ca64:	str	r9, [sp, #28]
   2ca68:	add	r5, r7, #48	; 0x30
   2ca6c:	ldrh	r0, [r7, #56]	; 0x38
   2ca70:	cmp	r0, #13
   2ca74:	bne	2cba8 <__flatcc_fb_build_schema@@Base+0x1968>
   2ca78:	ldr	r3, [r5]
   2ca7c:	ldr	r0, [sp, #32]
   2ca80:	ldr	r1, [r0, #12]
   2ca84:	str	r5, [sp]
   2ca88:	mov	r0, r8
   2ca8c:	mov	r2, #0
   2ca90:	bl	2da3c <__flatcc_fb_build_schema@@Base+0x27fc>
   2ca94:	cmp	r0, #0
   2ca98:	beq	2cba4 <__flatcc_fb_build_schema@@Base+0x1964>
   2ca9c:	ldr	r1, [r7, #48]	; 0x30
   2caa0:	mov	r0, r8
   2caa4:	movw	r2, #56710	; 0xdd86
   2caa8:	movt	r2, #4
   2caac:	b	2cb44 <__flatcc_fb_build_schema@@Base+0x1904>
   2cab0:	str	r9, [sp, #28]
   2cab4:	ldr	r2, [r7, #16]
   2cab8:	ldr	r0, [sp, #32]
   2cabc:	ldr	r1, [r0, #12]
   2cac0:	mov	r0, r8
   2cac4:	bl	2d57c <__flatcc_fb_build_schema@@Base+0x233c>
   2cac8:	cmp	r0, #0
   2cacc:	beq	2cb78 <__flatcc_fb_build_schema@@Base+0x1938>
   2cad0:	mov	r5, r0
   2cad4:	ldrh	r0, [r0, #8]
   2cad8:	cmp	r0, #4
   2cadc:	bhi	2cf0c <__flatcc_fb_build_schema@@Base+0x1ccc>
   2cae0:	mov	r3, #0
   2cae4:	add	r1, pc, #0
   2cae8:	ldr	pc, [r1, r0, lsl #2]
   2caec:	andeq	ip, r2, r0, asr #27
   2caf0:	andeq	ip, r2, r0, asr #27
   2caf4:	andeq	ip, r2, r0, lsl #22
   2caf8:	muleq	r2, ip, sp
   2cafc:	andeq	ip, r2, r0, asr #27
   2cb00:	mov	r0, r8
   2cb04:	mov	r1, r7
   2cb08:	movw	r2, #56978	; 0xde92
   2cb0c:	movt	r2, #4
   2cb10:	b	2cf1c <__flatcc_fb_build_schema@@Base+0x1cdc>
   2cb14:	mov	r0, r8
   2cb18:	mov	r1, r7
   2cb1c:	movw	r2, #57396	; 0xe034
   2cb20:	movt	r2, #4
   2cb24:	bl	2c134 <__flatcc_fb_build_schema@@Base+0xef4>
   2cb28:	mov	r0, #1
   2cb2c:	strh	r0, [r7, #24]
   2cb30:	b	2cf30 <__flatcc_fb_build_schema@@Base+0x1cf0>
   2cb34:	ldr	r1, [r7, #16]
   2cb38:	mov	r0, r8
   2cb3c:	movw	r2, #57269	; 0xdfb5
   2cb40:	movt	r2, #4
   2cb44:	mov	r3, r7
   2cb48:	bl	275bc <error_ref_sym@@Base>
   2cb4c:	b	2cf24 <__flatcc_fb_build_schema@@Base+0x1ce4>
   2cb50:	str	r9, [sp, #28]
   2cb54:	mov	r5, #0
   2cb58:	mov	r3, #0
   2cb5c:	b	2cbfc <__flatcc_fb_build_schema@@Base+0x19bc>
   2cb60:	str	r9, [sp, #28]
   2cb64:	ldr	r3, [r8, #164]	; 0xa4
   2cb68:	mov	r5, #0
   2cb6c:	b	2cbfc <__flatcc_fb_build_schema@@Base+0x19bc>
   2cb70:	mov	r3, #0
   2cb74:	b	2cbfc <__flatcc_fb_build_schema@@Base+0x19bc>
   2cb78:	ldr	r1, [r7, #16]
   2cb7c:	mov	r0, r8
   2cb80:	movw	r2, #56879	; 0xde2f
   2cb84:	movt	r2, #4
   2cb88:	mov	r3, r7
   2cb8c:	bl	275bc <error_ref_sym@@Base>
   2cb90:	mov	r1, #1
   2cb94:	mov	r0, #1
   2cb98:	str	r0, [sp, #44]	; 0x2c
   2cb9c:	strh	r1, [r7, #24]
   2cba0:	b	2cf2c <__flatcc_fb_build_schema@@Base+0x1cec>
   2cba4:	ldrh	r0, [r7, #56]	; 0x38
   2cba8:	cmp	r0, #0
   2cbac:	bne	2cbc4 <__flatcc_fb_build_schema@@Base+0x1984>
   2cbb0:	mov	r0, #5
   2cbb4:	strh	r0, [r7, #56]	; 0x38
   2cbb8:	mov	r0, #0
   2cbbc:	str	r0, [r5]
   2cbc0:	str	r0, [r5, #4]
   2cbc4:	ldr	r2, [r7, #16]
   2cbc8:	mov	r0, r8
   2cbcc:	mov	r1, r7
   2cbd0:	mov	r3, r5
   2cbd4:	bl	2de7c <__flatcc_fb_coerce_scalar_type@@Base>
   2cbd8:	cmp	r0, #0
   2cbdc:	bne	2cf24 <__flatcc_fb_build_schema@@Base+0x1ce4>
   2cbe0:	ldr	r0, [r7, #16]
   2cbe4:	bl	2d698 <__flatcc_fb_build_schema@@Base+0x2458>
   2cbe8:	mov	r5, #0
   2cbec:	str	r0, [r7, #88]	; 0x58
   2cbf0:	str	r5, [r7, #92]	; 0x5c
   2cbf4:	strh	r0, [r7, #74]	; 0x4a
   2cbf8:	mov	r3, #1
   2cbfc:	ldr	r2, [sp, #36]	; 0x24
   2cc00:	ldr	r0, [sp, #44]	; 0x2c
   2cc04:	cmp	r0, #0
   2cc08:	bne	2cc74 <__flatcc_fb_build_schema@@Base+0x1a34>
   2cc0c:	cmp	r6, #0
   2cc10:	beq	2cc3c <__flatcc_fb_build_schema@@Base+0x19fc>
   2cc14:	ldr	r0, [sp, #24]
   2cc18:	cmp	r0, #0
   2cc1c:	bne	2cc3c <__flatcc_fb_build_schema@@Base+0x19fc>
   2cc20:	ldr	r1, [r6, #4]
   2cc24:	mov	r0, r8
   2cc28:	movw	r2, #57436	; 0xe05c
   2cc2c:	movt	r2, #4
   2cc30:	mov	r5, r3
   2cc34:	bl	2d888 <__flatcc_fb_build_schema@@Base+0x2648>
   2cc38:	b	2cc68 <__flatcc_fb_build_schema@@Base+0x1a28>
   2cc3c:	cmp	r6, #0
   2cc40:	bne	2ccbc <__flatcc_fb_build_schema@@Base+0x1a7c>
   2cc44:	ldr	r0, [sp, #24]
   2cc48:	cmp	r0, #0
   2cc4c:	beq	2ccbc <__flatcc_fb_build_schema@@Base+0x1a7c>
   2cc50:	mov	r0, r8
   2cc54:	mov	r1, r7
   2cc58:	movw	r2, #57497	; 0xe099
   2cc5c:	movt	r2, #4
   2cc60:	mov	r5, r3
   2cc64:	bl	2c134 <__flatcc_fb_build_schema@@Base+0xef4>
   2cc68:	mov	r3, r5
   2cc6c:	mov	r0, #1
   2cc70:	str	r0, [sp, #44]	; 0x2c
   2cc74:	ldr	r9, [sp, #28]
   2cc78:	mov	r6, sl
   2cc7c:	ldr	r5, [sp, #16]
   2cc80:	ldrb	r0, [r7, #72]	; 0x48
   2cc84:	tst	r0, #128	; 0x80
   2cc88:	ldr	sl, [sp, #32]
   2cc8c:	beq	2cf3c <__flatcc_fb_build_schema@@Base+0x1cfc>
   2cc90:	ldr	r0, [sp, #8]
   2cc94:	add	r0, r0, #1
   2cc98:	str	r0, [sp, #8]
   2cc9c:	cmp	r3, #0
   2cca0:	bne	2cf3c <__flatcc_fb_build_schema@@Base+0x1cfc>
   2cca4:	mov	r0, r8
   2cca8:	mov	r1, r7
   2ccac:	movw	r2, #58250	; 0xe38a
   2ccb0:	movt	r2, #4
   2ccb4:	bl	2c134 <__flatcc_fb_build_schema@@Base+0xef4>
   2ccb8:	b	2cf3c <__flatcc_fb_build_schema@@Base+0x1cfc>
   2ccbc:	cmp	r6, #0
   2ccc0:	beq	2cd28 <__flatcc_fb_build_schema@@Base+0x1ae8>
   2ccc4:	ldrh	r0, [r6, #16]
   2ccc8:	cmp	r0, #5
   2cccc:	bne	2c5b8 <__flatcc_fb_build_schema@@Base+0x1378>
   2ccd0:	ldrd	r0, [r6, #8]
   2ccd4:	ldr	r2, [sp, #12]
   2ccd8:	ldm	r2, {r2, r9}
   2ccdc:	subs	r2, r0, r2
   2cce0:	sbcs	r1, r1, r9
   2cce4:	bcs	2c5dc <__flatcc_fb_build_schema@@Base+0x139c>
   2cce8:	uxth	ip, r0
   2ccec:	mov	r1, #0
   2ccf0:	str	ip, [r7, #96]	; 0x60
   2ccf4:	str	r1, [r7, #100]	; 0x64
   2ccf8:	ldr	r2, [sp, #20]
   2ccfc:	subs	r1, r2, ip
   2cd00:	ldr	r0, [sp, #40]	; 0x28
   2cd04:	sbcs	r1, r0, #0
   2cd08:	mov	r1, #0
   2cd0c:	movwcc	r1, #1
   2cd10:	cmp	r1, #0
   2cd14:	movne	r2, ip
   2cd18:	str	r2, [sp, #20]
   2cd1c:	movwne	r0, #0
   2cd20:	str	r0, [sp, #40]	; 0x28
   2cd24:	ldr	r2, [sp, #36]	; 0x24
   2cd28:	mov	r0, #0
   2cd2c:	str	r0, [sp, #44]	; 0x2c
   2cd30:	ldr	r0, [sp, #24]
   2cd34:	cmp	r0, #0
   2cd38:	beq	2cc74 <__flatcc_fb_build_schema@@Base+0x1a34>
   2cd3c:	mov	r9, r7
   2cd40:	ldr	r0, [r9, #96]!	; 0x60
   2cd44:	ldrb	r1, [r2, r0]
   2cd48:	cmp	r1, #0
   2cd4c:	beq	2c5fc <__flatcc_fb_build_schema@@Base+0x13bc>
   2cd50:	str	r3, [sp, #4]
   2cd54:	cmp	r1, #2
   2cd58:	bne	2c610 <__flatcc_fb_build_schema@@Base+0x13d0>
   2cd5c:	ldr	r1, [r6, #4]
   2cd60:	mov	r0, r8
   2cd64:	movw	r2, #57645	; 0xe12d
   2cd68:	movt	r2, #4
   2cd6c:	bl	2d888 <__flatcc_fb_build_schema@@Base+0x2648>
   2cd70:	mov	r0, #1
   2cd74:	str	r0, [sp, #44]	; 0x2c
   2cd78:	ldr	r9, [sp, #28]
   2cd7c:	b	2c6f8 <__flatcc_fb_build_schema@@Base+0x14b8>
   2cd80:	ldr	r3, [r7, #16]
   2cd84:	mov	r0, r8
   2cd88:	mov	r1, r7
   2cd8c:	movw	r2, #57321	; 0xdfe9
   2cd90:	movt	r2, #4
   2cd94:	bl	2d8f8 <__flatcc_fb_build_schema@@Base+0x26b8>
   2cd98:	b	2cf24 <__flatcc_fb_build_schema@@Base+0x1ce4>
   2cd9c:	ldrb	r0, [r7, #73]	; 0x49
   2cda0:	tst	r0, #1
   2cda4:	beq	2cdbc <__flatcc_fb_build_schema@@Base+0x1b7c>
   2cda8:	mov	r0, r8
   2cdac:	mov	r1, r7
   2cdb0:	movw	r2, #56924	; 0xde5c
   2cdb4:	movt	r2, #4
   2cdb8:	bl	2c134 <__flatcc_fb_build_schema@@Base+0xef4>
   2cdbc:	ldr	r3, [r8, #148]	; 0x94
   2cdc0:	str	r5, [r7, #16]
   2cdc4:	mov	r0, #14
   2cdc8:	strh	r0, [r7, #24]
   2cdcc:	ldrd	r0, [r5, #112]	; 0x70
   2cdd0:	strd	r0, [r7, #88]	; 0x58
   2cdd4:	ldrh	r0, [r5, #104]	; 0x68
   2cdd8:	strh	r0, [r7, #74]	; 0x4a
   2cddc:	ldrh	r0, [r5, #8]
   2cde0:	ldr	r1, [sp, #44]	; 0x2c
   2cde4:	cmp	r1, #0
   2cde8:	ldr	r2, [sp, #36]	; 0x24
   2cdec:	cmpeq	r0, #4
   2cdf0:	bne	2ce24 <__flatcc_fb_build_schema@@Base+0x1be4>
   2cdf4:	ldr	r1, [sp, #24]
   2cdf8:	cmp	r1, #0
   2cdfc:	bne	2ce14 <__flatcc_fb_build_schema@@Base+0x1bd4>
   2ce00:	uxth	r2, sl
   2ce04:	mov	r1, #0
   2ce08:	str	r2, [r7, #96]	; 0x60
   2ce0c:	str	r1, [r7, #100]	; 0x64
   2ce10:	ldr	r2, [sp, #36]	; 0x24
   2ce14:	adds	sl, sl, #1
   2ce18:	ldr	r1, [sp, #28]
   2ce1c:	adc	r1, r1, #0
   2ce20:	str	r1, [sp, #28]
   2ce24:	add	r9, r7, #48	; 0x30
   2ce28:	ldrh	r1, [r7, #56]	; 0x38
   2ce2c:	cmp	r1, #0
   2ce30:	beq	2ce98 <__flatcc_fb_build_schema@@Base+0x1c58>
   2ce34:	cmp	r0, #3
   2ce38:	bne	2ce80 <__flatcc_fb_build_schema@@Base+0x1c40>
   2ce3c:	str	r3, [sp, #4]
   2ce40:	cmp	r1, #13
   2ce44:	bne	2c56c <__flatcc_fb_build_schema@@Base+0x132c>
   2ce48:	ldr	r3, [r9]
   2ce4c:	ldr	r0, [sp, #32]
   2ce50:	ldr	r1, [r0, #12]
   2ce54:	str	r9, [sp]
   2ce58:	mov	r0, r8
   2ce5c:	mov	r2, r5
   2ce60:	bl	2da3c <__flatcc_fb_build_schema@@Base+0x27fc>
   2ce64:	cmp	r0, #0
   2ce68:	beq	2c5ac <__flatcc_fb_build_schema@@Base+0x136c>
   2ce6c:	ldr	r1, [r7, #48]	; 0x30
   2ce70:	mov	r0, r8
   2ce74:	movw	r2, #57104	; 0xdf10
   2ce78:	movt	r2, #4
   2ce7c:	b	2cb44 <__flatcc_fb_build_schema@@Base+0x1904>
   2ce80:	mov	r0, r8
   2ce84:	mov	r1, r7
   2ce88:	movw	r2, #57060	; 0xdee4
   2ce8c:	movt	r2, #4
   2ce90:	bl	2c134 <__flatcc_fb_build_schema@@Base+0xef4>
   2ce94:	b	2cf24 <__flatcc_fb_build_schema@@Base+0x1ce4>
   2ce98:	cmp	r0, #3
   2ce9c:	bne	2cc00 <__flatcc_fb_build_schema@@Base+0x19c0>
   2cea0:	str	r3, [sp, #4]
   2cea4:	mov	r0, #5
   2cea8:	strh	r0, [r7, #56]	; 0x38
   2ceac:	mov	r0, #0
   2ceb0:	str	r0, [r9]
   2ceb4:	str	r0, [r9, #4]
   2ceb8:	ldr	r2, [r5, #40]	; 0x28
   2cebc:	mov	r0, r8
   2cec0:	mov	r1, r5
   2cec4:	mov	r3, r9
   2cec8:	bl	2de7c <__flatcc_fb_coerce_scalar_type@@Base>
   2cecc:	cmp	r0, #0
   2ced0:	bne	2cf24 <__flatcc_fb_build_schema@@Base+0x1ce4>
   2ced4:	ldr	r0, [r8, #212]	; 0xd4
   2ced8:	cmp	r0, #0
   2cedc:	beq	2c5ac <__flatcc_fb_build_schema@@Base+0x136c>
   2cee0:	ldr	r0, [r7, #16]
   2cee4:	add	r0, r0, #72	; 0x48
   2cee8:	mov	r1, r9
   2ceec:	bl	2db2c <__flatcc_fb_build_schema@@Base+0x28ec>
   2cef0:	cmp	r0, #0
   2cef4:	bne	2c5ac <__flatcc_fb_build_schema@@Base+0x136c>
   2cef8:	mov	r0, r8
   2cefc:	mov	r1, r7
   2cf00:	movw	r2, #57200	; 0xdf70
   2cf04:	movt	r2, #4
   2cf08:	b	2cf1c <__flatcc_fb_build_schema@@Base+0x1cdc>
   2cf0c:	mov	r0, r8
   2cf10:	mov	r1, r7
   2cf14:	movw	r2, #57022	; 0xdebe
   2cf18:	movt	r2, #4
   2cf1c:	mov	r3, r5
   2cf20:	bl	2b690 <__flatcc_fb_build_schema@@Base+0x450>
   2cf24:	mov	r0, #1
   2cf28:	strh	r0, [r7, #24]
   2cf2c:	ldr	r9, [sp, #28]
   2cf30:	mov	r6, sl
   2cf34:	ldr	sl, [sp, #32]
   2cf38:	ldr	r5, [sp, #16]
   2cf3c:	ldr	r7, [r7]
   2cf40:	cmp	r7, #0
   2cf44:	bne	2c708 <__flatcc_fb_build_schema@@Base+0x14c8>
   2cf48:	mov	r0, #0
   2cf4c:	ldr	r1, [sp, #44]	; 0x2c
   2cf50:	cmp	r1, #0
   2cf54:	ldr	r2, [sp, #8]
   2cf58:	bne	2cf70 <__flatcc_fb_build_schema@@Base+0x1d30>
   2cf5c:	str	r6, [sl, #96]	; 0x60
   2cf60:	str	r9, [sl, #100]	; 0x64
   2cf64:	mov	r0, #1
   2cf68:	mov	r1, #0
   2cf6c:	str	r1, [sp, #44]	; 0x2c
   2cf70:	ldr	r1, [sp, #20]
   2cf74:	subs	r1, r1, r6
   2cf78:	ldr	r1, [sp, #40]	; 0x28
   2cf7c:	sbcs	r1, r1, r9
   2cf80:	bcc	2d070 <__flatcc_fb_build_schema@@Base+0x1e30>
   2cf84:	orrs	r1, r6, r9
   2cf88:	beq	2d070 <__flatcc_fb_build_schema@@Base+0x1e30>
   2cf8c:	ldr	r1, [sp, #24]
   2cf90:	cmp	r1, #0
   2cf94:	cmpne	r0, #0
   2cf98:	beq	2d070 <__flatcc_fb_build_schema@@Base+0x1e30>
   2cf9c:	ldr	r0, [sp, #20]
   2cfa0:	ldr	r1, [sp, #40]	; 0x28
   2cfa4:	orrs	r0, r0, r1
   2cfa8:	mov	r0, #1
   2cfac:	str	r0, [sp, #44]	; 0x2c
   2cfb0:	beq	2d070 <__flatcc_fb_build_schema@@Base+0x1e30>
   2cfb4:	str	r2, [sp, #8]
   2cfb8:	mov	r6, #0
   2cfbc:	mov	r4, #10
   2cfc0:	add	r7, sp, #96	; 0x60
   2cfc4:	movw	r9, #58321	; 0xe3d1
   2cfc8:	movt	r9, #4
   2cfcc:	mov	r5, #0
   2cfd0:	ldr	r1, [sp, #36]	; 0x24
   2cfd4:	ldr	r2, [sp, #20]
   2cfd8:	ldrb	r0, [r1, r6]
   2cfdc:	cmp	r0, #0
   2cfe0:	bne	2d01c <__flatcc_fb_build_schema@@Base+0x1ddc>
   2cfe4:	cmp	r4, #0
   2cfe8:	beq	2d058 <__flatcc_fb_build_schema@@Base+0x1e18>
   2cfec:	mov	r0, r7
   2cff0:	mov	r1, r9
   2cff4:	mov	r2, r6
   2cff8:	mov	r3, r5
   2cffc:	bl	148fc <sprintf@plt>
   2d000:	mov	r0, r8
   2d004:	mov	r1, sl
   2d008:	mov	r2, r7
   2d00c:	bl	2c134 <__flatcc_fb_build_schema@@Base+0xef4>
   2d010:	ldr	r2, [sp, #20]
   2d014:	ldr	r1, [sp, #36]	; 0x24
   2d018:	sub	r4, r4, #1
   2d01c:	adds	r6, r6, #1
   2d020:	adc	r5, r5, #0
   2d024:	subs	r0, r6, r2
   2d028:	ldr	r0, [sp, #40]	; 0x28
   2d02c:	sbcs	r0, r5, r0
   2d030:	bcc	2cfd8 <__flatcc_fb_build_schema@@Base+0x1d98>
   2d034:	b	2d06c <__flatcc_fb_build_schema@@Base+0x1e2c>
   2d038:	movw	r2, #56407	; 0xdc57
   2d03c:	movt	r2, #4
   2d040:	mov	r0, r8
   2d044:	mov	r1, r7
   2d048:	bl	2c134 <__flatcc_fb_build_schema@@Base+0xef4>
   2d04c:	mvn	r0, #0
   2d050:	sub	sp, fp, #28
   2d054:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d058:	movw	r2, #58299	; 0xe3bb
   2d05c:	movt	r2, #4
   2d060:	mov	r0, r8
   2d064:	mov	r1, sl
   2d068:	bl	2c134 <__flatcc_fb_build_schema@@Base+0xef4>
   2d06c:	ldr	r2, [sp, #8]
   2d070:	mov	r0, #0
   2d074:	cmp	r2, #0
   2d078:	beq	2d0b4 <__flatcc_fb_build_schema@@Base+0x1e74>
   2d07c:	ldrh	r1, [sl, #10]
   2d080:	orr	r1, r1, #8
   2d084:	strh	r1, [sl, #10]
   2d088:	cmp	r2, #2
   2d08c:	blt	2d0b4 <__flatcc_fb_build_schema@@Base+0x1e74>
   2d090:	ldr	r1, [r8, #156]	; 0x9c
   2d094:	cmp	r1, #0
   2d098:	bne	2d0b4 <__flatcc_fb_build_schema@@Base+0x1e74>
   2d09c:	movw	r2, #55719	; 0xd9a7
   2d0a0:	movt	r2, #4
   2d0a4:	mov	r0, r8
   2d0a8:	mov	r1, sl
   2d0ac:	bl	2c134 <__flatcc_fb_build_schema@@Base+0xef4>
   2d0b0:	mvn	r0, #0
   2d0b4:	ldr	r1, [sp, #44]	; 0x2c
   2d0b8:	cmp	r1, #0
   2d0bc:	mvnne	r0, #0
   2d0c0:	sub	sp, fp, #28
   2d0c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d0c8:	movw	r0, #46160	; 0xb450
   2d0cc:	movt	r0, #3
   2d0d0:	movw	r1, #53477	; 0xd0e5
   2d0d4:	movt	r1, #4
   2d0d8:	movw	r3, #56303	; 0xdbef
   2d0dc:	movt	r3, #4
   2d0e0:	movw	r2, #769	; 0x301
   2d0e4:	bl	14950 <__assert_fail@plt>
   2d0e8:	movw	r0, #56358	; 0xdc26
   2d0ec:	movt	r0, #4
   2d0f0:	movw	r1, #53477	; 0xd0e5
   2d0f4:	movt	r1, #4
   2d0f8:	movw	r3, #56303	; 0xdbef
   2d0fc:	movt	r3, #4
   2d100:	movw	r2, #770	; 0x302
   2d104:	bl	14950 <__assert_fail@plt>
   2d108:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d10c:	add	fp, sp, #28
   2d110:	sub	sp, sp, #52	; 0x34
   2d114:	mov	r4, r0
   2d118:	ldrh	r0, [r1, #8]
   2d11c:	cmp	r0, #2
   2d120:	bne	2d320 <__flatcc_fb_build_schema@@Base+0x20e0>
   2d124:	mov	r5, r1
   2d128:	ldrh	r0, [r1, #48]	; 0x30
   2d12c:	cmp	r0, #0
   2d130:	bne	2d340 <__flatcc_fb_build_schema@@Base+0x2100>
   2d134:	ldr	r0, [r5, #28]
   2d138:	cmp	r0, #0
   2d13c:	beq	2d154 <__flatcc_fb_build_schema@@Base+0x1f14>
   2d140:	movw	r2, #58798	; 0xe5ae
   2d144:	movt	r2, #4
   2d148:	mov	r0, r4
   2d14c:	mov	r1, r5
   2d150:	bl	2c134 <__flatcc_fb_build_schema@@Base+0xef4>
   2d154:	ldr	r6, [r5, #20]
   2d158:	cmp	r6, #0
   2d15c:	beq	2d2f4 <__flatcc_fb_build_schema@@Base+0x20b4>
   2d160:	add	r7, r5, #56	; 0x38
   2d164:	mov	sl, #1
   2d168:	movw	r8, #58866	; 0xe5f2
   2d16c:	movt	r8, #4
   2d170:	movw	r9, #58834	; 0xe5d2
   2d174:	movt	r9, #4
   2d178:	b	2d2c0 <__flatcc_fb_build_schema@@Base+0x2080>
   2d17c:	ldrh	r0, [r6, #8]
   2d180:	cmp	r0, #5
   2d184:	bne	2d300 <__flatcc_fb_build_schema@@Base+0x20c0>
   2d188:	ldrh	r0, [r6, #56]	; 0x38
   2d18c:	cmp	r0, #0
   2d190:	beq	2d1a4 <__flatcc_fb_build_schema@@Base+0x1f64>
   2d194:	mov	r0, r4
   2d198:	mov	r1, r6
   2d19c:	mov	r2, r8
   2d1a0:	bl	2c134 <__flatcc_fb_build_schema@@Base+0xef4>
   2d1a4:	ldrh	r0, [r6, #24]
   2d1a8:	cmp	r0, #1
   2d1ac:	beq	2d2e8 <__flatcc_fb_build_schema@@Base+0x20a8>
   2d1b0:	cmp	r0, #12
   2d1b4:	beq	2d1cc <__flatcc_fb_build_schema@@Base+0x1f8c>
   2d1b8:	mov	r0, r4
   2d1bc:	mov	r1, r6
   2d1c0:	movw	r2, #58930	; 0xe632
   2d1c4:	movt	r2, #4
   2d1c8:	bl	2c134 <__flatcc_fb_build_schema@@Base+0xef4>
   2d1cc:	ldr	r2, [r6, #32]
   2d1d0:	ldr	r1, [r5, #12]
   2d1d4:	mov	r0, r4
   2d1d8:	bl	2d57c <__flatcc_fb_build_schema@@Base+0x233c>
   2d1dc:	cmp	r0, #0
   2d1e0:	beq	2d210 <__flatcc_fb_build_schema@@Base+0x1fd0>
   2d1e4:	mov	r3, r0
   2d1e8:	ldrh	r0, [r0, #8]
   2d1ec:	cmp	r0, #0
   2d1f0:	beq	2d230 <__flatcc_fb_build_schema@@Base+0x1ff0>
   2d1f4:	mov	r0, r4
   2d1f8:	mov	r1, r6
   2d1fc:	movw	r2, #59041	; 0xe6a1
   2d200:	movt	r2, #4
   2d204:	bl	2b690 <__flatcc_fb_build_schema@@Base+0x450>
   2d208:	strh	sl, [r6, #24]
   2d20c:	b	2d2e8 <__flatcc_fb_build_schema@@Base+0x20a8>
   2d210:	ldr	r1, [r6, #32]
   2d214:	mov	r0, r4
   2d218:	movw	r2, #58991	; 0xe66f
   2d21c:	movt	r2, #4
   2d220:	mov	r3, r6
   2d224:	bl	275bc <error_ref_sym@@Base>
   2d228:	strh	sl, [r6, #24]
   2d22c:	b	2d2e8 <__flatcc_fb_build_schema@@Base+0x20a8>
   2d230:	str	r3, [r6, #32]
   2d234:	mov	r0, #14
   2d238:	strh	r0, [r6, #40]	; 0x28
   2d23c:	ldr	r2, [r6, #16]
   2d240:	ldr	r1, [r5, #12]
   2d244:	mov	r0, r4
   2d248:	bl	2d57c <__flatcc_fb_build_schema@@Base+0x233c>
   2d24c:	cmp	r0, #0
   2d250:	beq	2d278 <__flatcc_fb_build_schema@@Base+0x2038>
   2d254:	mov	r3, r0
   2d258:	ldrh	r0, [r0, #8]
   2d25c:	cmp	r0, #0
   2d260:	beq	2d28c <__flatcc_fb_build_schema@@Base+0x204c>
   2d264:	mov	r0, r4
   2d268:	mov	r1, r6
   2d26c:	movw	r2, #59146	; 0xe70a
   2d270:	movt	r2, #4
   2d274:	b	2d204 <__flatcc_fb_build_schema@@Base+0x1fc4>
   2d278:	ldr	r1, [r6, #16]
   2d27c:	mov	r0, r4
   2d280:	movw	r2, #59095	; 0xe6d7
   2d284:	movt	r2, #4
   2d288:	b	2d220 <__flatcc_fb_build_schema@@Base+0x1fe0>
   2d28c:	mov	r0, #0
   2d290:	str	r0, [r6, #88]	; 0x58
   2d294:	str	r0, [r6, #92]	; 0x5c
   2d298:	str	r3, [r6, #16]
   2d29c:	mov	r0, #14
   2d2a0:	strh	r0, [r6, #24]
   2d2a4:	ldr	r1, [r6, #64]	; 0x40
   2d2a8:	mov	r0, r4
   2d2ac:	mov	r2, #4
   2d2b0:	add	r3, sp, #4
   2d2b4:	bl	2d6a8 <__flatcc_fb_build_schema@@Base+0x2468>
   2d2b8:	strh	r0, [r6, #72]	; 0x48
   2d2bc:	b	2d2e8 <__flatcc_fb_build_schema@@Base+0x20a8>
   2d2c0:	mov	r0, r7
   2d2c4:	mov	r1, r6
   2d2c8:	bl	2b688 <__flatcc_fb_build_schema@@Base+0x448>
   2d2cc:	cmp	r0, #0
   2d2d0:	beq	2d17c <__flatcc_fb_build_schema@@Base+0x1f3c>
   2d2d4:	mov	r3, r0
   2d2d8:	mov	r0, r4
   2d2dc:	mov	r1, r6
   2d2e0:	mov	r2, r9
   2d2e4:	bl	2b690 <__flatcc_fb_build_schema@@Base+0x450>
   2d2e8:	ldr	r6, [r6]
   2d2ec:	cmp	r6, #0
   2d2f0:	bne	2d2c0 <__flatcc_fb_build_schema@@Base+0x2080>
   2d2f4:	mov	r0, #0
   2d2f8:	sub	sp, fp, #28
   2d2fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d300:	movw	r2, #56407	; 0xdc57
   2d304:	movt	r2, #4
   2d308:	mov	r0, r4
   2d30c:	mov	r1, r6
   2d310:	bl	2c134 <__flatcc_fb_build_schema@@Base+0xef4>
   2d314:	mvn	r0, #0
   2d318:	sub	sp, fp, #28
   2d31c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d320:	movw	r0, #58700	; 0xe54c
   2d324:	movt	r0, #4
   2d328:	movw	r1, #53477	; 0xd0e5
   2d32c:	movt	r1, #4
   2d330:	movw	r3, #58737	; 0xe571
   2d334:	movt	r3, #4
   2d338:	movw	r2, #1128	; 0x468
   2d33c:	bl	14950 <__assert_fail@plt>
   2d340:	movw	r0, #56358	; 0xdc26
   2d344:	movt	r0, #4
   2d348:	movw	r1, #53477	; 0xd0e5
   2d34c:	movt	r1, #4
   2d350:	movw	r3, #58737	; 0xe571
   2d354:	movt	r3, #4
   2d358:	movw	r2, #1129	; 0x469
   2d35c:	bl	14950 <__assert_fail@plt>
   2d360:	ldr	r1, [r0]
   2d364:	cmp	r1, #0
   2d368:	moveq	r2, #0
   2d36c:	streq	r2, [r0]
   2d370:	bxeq	lr
   2d374:	mov	r3, #0
   2d378:	mov	r2, r1
   2d37c:	ldr	r1, [r1, #120]	; 0x78
   2d380:	str	r3, [r2, #120]	; 0x78
   2d384:	cmp	r1, #0
   2d388:	mov	r3, r2
   2d38c:	bne	2d378 <__flatcc_fb_build_schema@@Base+0x2138>
   2d390:	str	r2, [r0]
   2d394:	bx	lr
   2d398:	sub	sp, sp, #4
   2d39c:	mov	r1, #0
   2d3a0:	str	r1, [sp]
   2d3a4:	mov	r2, sp
   2d3a8:	cmp	r0, #0
   2d3ac:	beq	2d3c4 <__flatcc_fb_build_schema@@Base+0x2184>
   2d3b0:	str	r0, [r2]
   2d3b4:	mov	r2, r0
   2d3b8:	ldr	r0, [r2], #108	; 0x6c
   2d3bc:	cmp	r0, #0
   2d3c0:	bne	2d3b0 <__flatcc_fb_build_schema@@Base+0x2170>
   2d3c4:	str	r1, [r2]
   2d3c8:	pop	{r0}		; (ldr r0, [sp], #4)
   2d3cc:	bx	lr
   2d3d0:	push	{r4, r5, r6, r7, fp, lr}
   2d3d4:	add	fp, sp, #16
   2d3d8:	sub	sp, sp, #80	; 0x50
   2d3dc:	vmov.i32	q8, #0	; 0x00000000
   2d3e0:	mov	r7, #32
   2d3e4:	add	r2, sp, #40	; 0x28
   2d3e8:	mov	r3, r2
   2d3ec:	vst1.64	{d16-d17}, [r3], r7
   2d3f0:	mov	r6, #0
   2d3f4:	str	r6, [r3]
   2d3f8:	add	r3, r2, #16
   2d3fc:	vst1.64	{d16-d17}, [r3]
   2d400:	mov	r4, sp
   2d404:	add	r5, r4, #16
   2d408:	vst1.64	{d16-d17}, [r5]
   2d40c:	mov	r3, r4
   2d410:	vst1.64	{d16-d17}, [r3], r7
   2d414:	str	r6, [r3]
   2d418:	cmp	r1, #0
   2d41c:	beq	2d504 <__flatcc_fb_build_schema@@Base+0x22c4>
   2d420:	movw	ip, #65535	; 0xffff
   2d424:	mov	lr, #1
   2d428:	movw	r3, #34432	; 0x8680
   2d42c:	mov	r5, r1
   2d430:	ldrh	r6, [r5, #24]
   2d434:	cmp	r6, #15
   2d438:	bhi	2d4d8 <__flatcc_fb_build_schema@@Base+0x2298>
   2d43c:	tst	r3, lr, lsl r6
   2d440:	beq	2d498 <__flatcc_fb_build_schema@@Base+0x2258>
   2d444:	ldr	r6, [r0, #192]	; 0xc0
   2d448:	tst	r6, ip
   2d44c:	beq	2d4e4 <__flatcc_fb_build_schema@@Base+0x22a4>
   2d450:	ubfx	r6, r6, #1, #15
   2d454:	clz	r6, r6
   2d458:	rsb	r6, r6, #32
   2d45c:	uxth	r7, r6
   2d460:	cmp	r7, #7
   2d464:	movcs	r6, #7
   2d468:	uxth	r6, r6
   2d46c:	ldr	r7, [r2, r6, lsl #2]
   2d470:	cmp	r7, #0
   2d474:	ldrne	r7, [r4, r6, lsl #2]
   2d478:	addeq	r7, r2, r6, lsl #2
   2d47c:	str	r5, [r7]
   2d480:	add	r7, r5, #108	; 0x6c
   2d484:	str	r7, [r4, r6, lsl #2]
   2d488:	ldr	r5, [r5]
   2d48c:	cmp	r5, #0
   2d490:	bne	2d430 <__flatcc_fb_build_schema@@Base+0x21f0>
   2d494:	b	2d504 <__flatcc_fb_build_schema@@Base+0x22c4>
   2d498:	cmp	r6, #14
   2d49c:	bne	2d4d0 <__flatcc_fb_build_schema@@Base+0x2290>
   2d4a0:	ldr	r6, [r5, #16]
   2d4a4:	ldrh	r7, [r6, #8]
   2d4a8:	cmp	r7, #1
   2d4ac:	beq	2d4c0 <__flatcc_fb_build_schema@@Base+0x2280>
   2d4b0:	cmp	r7, #4
   2d4b4:	beq	2d444 <__flatcc_fb_build_schema@@Base+0x2204>
   2d4b8:	cmp	r7, #3
   2d4bc:	bne	2d444 <__flatcc_fb_build_schema@@Base+0x2204>
   2d4c0:	ldrh	r6, [r6, #104]	; 0x68
   2d4c4:	tst	r6, ip
   2d4c8:	bne	2d450 <__flatcc_fb_build_schema@@Base+0x2210>
   2d4cc:	b	2d4e4 <__flatcc_fb_build_schema@@Base+0x22a4>
   2d4d0:	cmp	r6, #1
   2d4d4:	beq	2d560 <__flatcc_fb_build_schema@@Base+0x2320>
   2d4d8:	ldrh	r6, [r5, #74]	; 0x4a
   2d4dc:	tst	r6, ip
   2d4e0:	bne	2d450 <__flatcc_fb_build_schema@@Base+0x2210>
   2d4e4:	movw	r0, #59201	; 0xe741
   2d4e8:	movt	r0, #4
   2d4ec:	movw	r1, #53477	; 0xd0e5
   2d4f0:	movt	r1, #4
   2d4f4:	movw	r3, #59207	; 0xe747
   2d4f8:	movt	r3, #4
   2d4fc:	movw	r2, #1521	; 0x5f1
   2d500:	bl	14950 <__assert_fail@plt>
   2d504:	add	r0, r2, #32
   2d508:	str	r0, [sp, #32]
   2d50c:	mov	r0, #8
   2d510:	uxth	r1, r0
   2d514:	mov	r0, r1
   2d518:	cmp	r0, #0
   2d51c:	beq	2d538 <__flatcc_fb_build_schema@@Base+0x22f8>
   2d520:	sub	r0, r0, #1
   2d524:	uxth	r3, r0
   2d528:	ldr	r3, [r2, r3, lsl #2]
   2d52c:	cmp	r3, #0
   2d530:	beq	2d518 <__flatcc_fb_build_schema@@Base+0x22d8>
   2d534:	b	2d53c <__flatcc_fb_build_schema@@Base+0x22fc>
   2d538:	mov	r0, #0
   2d53c:	ldr	r1, [r4, r1, lsl #2]
   2d540:	uxth	r3, r0
   2d544:	ldr	r7, [r2, r3, lsl #2]
   2d548:	str	r7, [r1]
   2d54c:	cmp	r3, #0
   2d550:	bne	2d510 <__flatcc_fb_build_schema@@Base+0x22d0>
   2d554:	ldr	r0, [sp, #72]	; 0x48
   2d558:	sub	sp, fp, #16
   2d55c:	pop	{r4, r5, r6, r7, fp, pc}
   2d560:	mov	r0, r1
   2d564:	bl	2d398 <__flatcc_fb_build_schema@@Base+0x2158>
   2d568:	sub	sp, fp, #16
   2d56c:	pop	{r4, r5, r6, r7, fp, pc}
   2d570:	mov	r2, r1
   2d574:	mov	r1, #0
   2d578:	b	2d888 <__flatcc_fb_build_schema@@Base+0x2648>
   2d57c:	mov	r3, #0
   2d580:	b	2dd48 <__flatcc_fb_build_schema@@Base+0x2b08>
   2d584:	mov	r3, #0
   2d588:	b	275bc <error_ref_sym@@Base>
   2d58c:	cmp	r2, #0
   2d590:	bxeq	lr
   2d594:	movw	ip, #403	; 0x193
   2d598:	movt	ip, #256	; 0x100
   2d59c:	ldrb	r3, [r1], #1
   2d5a0:	eor	r0, r0, r3
   2d5a4:	mul	r0, r0, ip
   2d5a8:	subs	r2, r2, #1
   2d5ac:	bne	2d59c <__flatcc_fb_build_schema@@Base+0x235c>
   2d5b0:	bx	lr
   2d5b4:	push	{fp, lr}
   2d5b8:	mov	fp, sp
   2d5bc:	sub	sp, sp, #8
   2d5c0:	mov	ip, #0
   2d5c4:	str	ip, [sp]
   2d5c8:	str	ip, [sp, #4]
   2d5cc:	bl	2742c <__flatcc_error_report@@Base>
   2d5d0:	mov	sp, fp
   2d5d4:	pop	{fp, pc}
   2d5d8:	push	{r4, r5, r6, sl, fp, lr}
   2d5dc:	add	fp, sp, #16
   2d5e0:	mov	r4, r0
   2d5e4:	ldr	r1, [r0, #44]	; 0x2c
   2d5e8:	ldr	r0, [r0, #52]	; 0x34
   2d5ec:	add	r2, r0, #32
   2d5f0:	cmp	r2, r1
   2d5f4:	bls	2d62c <__flatcc_fb_build_schema@@Base+0x23ec>
   2d5f8:	mov	r6, #65536	; 0x10000
   2d5fc:	mov	r0, #65536	; 0x10000
   2d600:	mov	r1, #1
   2d604:	bl	147ac <calloc@plt>
   2d608:	mov	r5, r0
   2d60c:	bl	2d63c <__flatcc_fb_build_schema@@Base+0x23fc>
   2d610:	ldr	r0, [r4, #48]	; 0x30
   2d614:	mov	r1, r5
   2d618:	str	r0, [r1], r6
   2d61c:	add	r0, r5, #16
   2d620:	str	r1, [r4, #44]	; 0x2c
   2d624:	str	r5, [r4, #48]	; 0x30
   2d628:	str	r0, [r4, #52]	; 0x34
   2d62c:	ldr	r1, [r4, #52]	; 0x34
   2d630:	add	r1, r1, #32
   2d634:	str	r1, [r4, #52]	; 0x34
   2d638:	pop	{r4, r5, r6, sl, fp, pc}
   2d63c:	cmp	r0, #0
   2d640:	bxne	lr
   2d644:	push	{fp, lr}
   2d648:	mov	fp, sp
   2d64c:	movw	r0, #4264	; 0x10a8
   2d650:	movt	r0, #6
   2d654:	ldr	r3, [r0]
   2d658:	movw	r0, #20071	; 0x4e67
   2d65c:	movt	r0, #3
   2d660:	mov	r1, #34	; 0x22
   2d664:	mov	r2, #1
   2d668:	bl	14830 <fwrite@plt>
   2d66c:	mov	r0, #1
   2d670:	bl	14878 <exit@plt>
   2d674:	ldr	r0, [r0, #16]
   2d678:	movw	r1, #999	; 0x3e7
   2d67c:	add	r0, r0, r1
   2d680:	cmp	r0, #27
   2d684:	movhi	r0, #0
   2d688:	movwls	r1, #59376	; 0xe7f0
   2d68c:	movtls	r1, #4
   2d690:	ldrls	r0, [r1, r0, lsl #2]
   2d694:	bx	lr
   2d698:	movw	r1, #59328	; 0xe7c0
   2d69c:	movt	r1, #4
   2d6a0:	ldr	r0, [r1, r0, lsl #2]
   2d6a4:	bx	lr
   2d6a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d6ac:	add	fp, sp, #28
   2d6b0:	sub	sp, sp, #4
   2d6b4:	mov	r5, r1
   2d6b8:	mov	r4, r0
   2d6bc:	vmov.i32	q8, #0	; 0x00000000
   2d6c0:	mov	r0, #32
   2d6c4:	mov	r1, r3
   2d6c8:	vst1.32	{d16-d17}, [r1], r0
   2d6cc:	vst1.32	{d16-d17}, [r1]
   2d6d0:	add	r0, r3, #16
   2d6d4:	vst1.32	{d16-d17}, [r0]
   2d6d8:	cmp	r5, #0
   2d6dc:	beq	2d84c <__flatcc_fb_build_schema@@Base+0x260c>
   2d6e0:	mov	r6, r3
   2d6e4:	mov	r7, r2
   2d6e8:	mov	r9, #0
   2d6ec:	mvn	sl, #98	; 0x62
   2d6f0:	mov	r8, #1
   2d6f4:	b	2d79c <__flatcc_fb_build_schema@@Base+0x255c>
   2d6f8:	str	r5, [r6, r0, lsl #2]
   2d6fc:	movw	r1, #3500	; 0xdac
   2d700:	tst	r8, r1, lsr r0
   2d704:	ldrhne	r1, [r5, #16]
   2d708:	cmpne	r1, #0
   2d70c:	bne	2d788 <__flatcc_fb_build_schema@@Base+0x2548>
   2d710:	sub	r0, r0, #1
   2d714:	cmp	r0, #8
   2d718:	bhi	2d818 <__flatcc_fb_build_schema@@Base+0x25d8>
   2d71c:	add	r1, pc, #0
   2d720:	ldr	pc, [r1, r0, lsl #2]
   2d724:	andeq	sp, r2, r8, asr #14
   2d728:	andeq	sp, r2, r8, lsl r8
   2d72c:	andeq	sp, r2, r8, lsl r8
   2d730:	andeq	sp, r2, r8, asr #14
   2d734:	andeq	sp, r2, r8, lsl r8
   2d738:	andeq	sp, r2, r8, ror #14
   2d73c:	andeq	sp, r2, r8, lsl r8
   2d740:	andeq	sp, r2, r8, lsl r8
   2d744:	andeq	sp, r2, r8, ror #14
   2d748:	ldrh	r0, [r5, #16]
   2d74c:	cmp	r0, #5
   2d750:	beq	2d818 <__flatcc_fb_build_schema@@Base+0x25d8>
   2d754:	ldr	r1, [r5, #4]
   2d758:	mov	r0, r4
   2d75c:	movw	r2, #55140	; 0xd764
   2d760:	movt	r2, #4
   2d764:	b	2d814 <__flatcc_fb_build_schema@@Base+0x25d4>
   2d768:	ldrh	r0, [r5, #16]
   2d76c:	cmp	r0, #2
   2d770:	beq	2d818 <__flatcc_fb_build_schema@@Base+0x25d8>
   2d774:	ldr	r1, [r5, #4]
   2d778:	mov	r0, r4
   2d77c:	movw	r2, #55107	; 0xd743
   2d780:	movt	r2, #4
   2d784:	b	2d814 <__flatcc_fb_build_schema@@Base+0x25d4>
   2d788:	ldr	r1, [r5, #4]
   2d78c:	mov	r0, r4
   2d790:	movw	r2, #55067	; 0xd71b
   2d794:	movt	r2, #4
   2d798:	b	2d814 <__flatcc_fb_build_schema@@Base+0x25d4>
   2d79c:	ldr	r1, [r5, #4]
   2d7a0:	ldr	r0, [r4, #412]	; 0x19c
   2d7a4:	add	r0, r0, #16
   2d7a8:	bl	2d878 <__flatcc_fb_build_schema@@Base+0x2638>
   2d7ac:	cmp	r0, #0
   2d7b0:	beq	2d7f0 <__flatcc_fb_build_schema@@Base+0x25b0>
   2d7b4:	ldr	r0, [r0, #24]
   2d7b8:	cmp	r0, #0
   2d7bc:	beq	2d818 <__flatcc_fb_build_schema@@Base+0x25d8>
   2d7c0:	tst	r7, r8, lsl r0
   2d7c4:	beq	2d804 <__flatcc_fb_build_schema@@Base+0x25c4>
   2d7c8:	lsl	r1, r8, r0
   2d7cc:	ldr	r2, [r6, r0, lsl #2]
   2d7d0:	orr	r9, r9, r1
   2d7d4:	cmp	r2, #0
   2d7d8:	beq	2d6f8 <__flatcc_fb_build_schema@@Base+0x24b8>
   2d7dc:	ldr	r1, [r5, #4]
   2d7e0:	mov	r0, r4
   2d7e4:	movw	r2, #55029	; 0xd6f5
   2d7e8:	movt	r2, #4
   2d7ec:	b	2d814 <__flatcc_fb_build_schema@@Base+0x25d4>
   2d7f0:	ldr	r1, [r5, #4]
   2d7f4:	mov	r0, r4
   2d7f8:	movw	r2, #54953	; 0xd6a9
   2d7fc:	movt	r2, #4
   2d800:	b	2d814 <__flatcc_fb_build_schema@@Base+0x25d4>
   2d804:	ldr	r1, [r5, #4]
   2d808:	mov	r0, r4
   2d80c:	movw	r2, #54984	; 0xd6c8
   2d810:	movt	r2, #4
   2d814:	bl	2d888 <__flatcc_fb_build_schema@@Base+0x2648>
   2d818:	ldr	r5, [r5]
   2d81c:	cmp	sl, #0
   2d820:	addne	sl, sl, #1
   2d824:	cmpne	r5, #0
   2d828:	bne	2d79c <__flatcc_fb_build_schema@@Base+0x255c>
   2d82c:	cmp	r5, #0
   2d830:	beq	2d850 <__flatcc_fb_build_schema@@Base+0x2610>
   2d834:	ldr	r1, [r5, #4]
   2d838:	movw	r2, #55184	; 0xd790
   2d83c:	movt	r2, #4
   2d840:	mov	r0, r4
   2d844:	bl	2d888 <__flatcc_fb_build_schema@@Base+0x2648>
   2d848:	b	2d850 <__flatcc_fb_build_schema@@Base+0x2610>
   2d84c:	mov	r9, #0
   2d850:	uxth	r0, r9
   2d854:	sub	sp, fp, #28
   2d858:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d85c:	push	{fp, lr}
   2d860:	mov	fp, sp
   2d864:	mov	r2, #1
   2d868:	bl	33370 <fb_value_set_insert_item@@Base>
   2d86c:	cmp	r0, #0
   2d870:	movwne	r0, #1
   2d874:	pop	{fp, pc}
   2d878:	ldr	r3, [r1]
   2d87c:	ldr	r2, [r1, #4]
   2d880:	mov	r1, r3
   2d884:	b	32dc0 <fb_name_table_find@@Base>
   2d888:	mov	r3, #0
   2d88c:	b	2d5b4 <__flatcc_fb_build_schema@@Base+0x2374>
   2d890:	push	{r4, sl, fp, lr}
   2d894:	add	fp, sp, #8
   2d898:	mov	ip, r0
   2d89c:	subs	r2, r0, #1
   2d8a0:	sbc	r3, r1, #0
   2d8a4:	mov	r0, #0
   2d8a8:	rsbs	r2, r2, #255	; 0xff
   2d8ac:	rscs	r2, r3, #0
   2d8b0:	bcc	2d8f4 <__flatcc_fb_build_schema@@Base+0x26b4>
   2d8b4:	orrs	r2, ip, r1
   2d8b8:	beq	2d8f4 <__flatcc_fb_build_schema@@Base+0x26b4>
   2d8bc:	mov	lr, #0
   2d8c0:	mov	r0, #1
   2d8c4:	mov	r2, #1
   2d8c8:	eor	r3, r2, ip
   2d8cc:	eor	r4, lr, r1
   2d8d0:	orrs	r3, r3, r4
   2d8d4:	popeq	{r4, sl, fp, pc}
   2d8d8:	lsl	r3, lr, #1
   2d8dc:	orr	lr, r3, r2, lsr #31
   2d8e0:	lsl	r2, r2, #1
   2d8e4:	subs	r3, ip, r2
   2d8e8:	sbcs	r3, r1, lr
   2d8ec:	bcs	2d8c8 <__flatcc_fb_build_schema@@Base+0x2688>
   2d8f0:	mov	r0, #0
   2d8f4:	pop	{r4, sl, fp, pc}
   2d8f8:	ldr	r1, [r1, #4]
   2d8fc:	b	2d5b4 <__flatcc_fb_build_schema@@Base+0x2374>
   2d900:	push	{r4, r5, r6, r7, fp, lr}
   2d904:	add	fp, sp, #16
   2d908:	mov	r4, r3
   2d90c:	mov	r5, r2
   2d910:	mov	r6, r1
   2d914:	mov	r7, r0
   2d918:	mov	r0, r2
   2d91c:	mov	r1, r3
   2d920:	bl	2d890 <__flatcc_fb_build_schema@@Base+0x2650>
   2d924:	cmp	r0, #0
   2d928:	beq	2d950 <__flatcc_fb_build_schema@@Base+0x2710>
   2d92c:	adds	r0, r7, r5
   2d930:	adc	r1, r6, r4
   2d934:	subs	r0, r0, #1
   2d938:	sbc	r1, r1, #0
   2d93c:	rsbs	r2, r5, #0
   2d940:	rsc	r3, r4, #0
   2d944:	and	r1, r1, r3
   2d948:	and	r0, r0, r2
   2d94c:	pop	{r4, r5, r6, r7, fp, pc}
   2d950:	movw	r0, #56243	; 0xdbb3
   2d954:	movt	r0, #4
   2d958:	movw	r1, #53477	; 0xd0e5
   2d95c:	movt	r1, #4
   2d960:	movw	r3, #56265	; 0xdbc9
   2d964:	movt	r3, #4
   2d968:	mov	r2, #108	; 0x6c
   2d96c:	bl	14950 <__assert_fail@plt>
   2d970:	push	{r4, r5, r6, sl, fp, lr}
   2d974:	add	fp, sp, #16
   2d978:	mov	r5, r3
   2d97c:	mov	r4, r0
   2d980:	ldrh	r0, [r2, #24]
   2d984:	cmp	r0, #7
   2d988:	bne	2d9e4 <__flatcc_fb_build_schema@@Base+0x27a4>
   2d98c:	mov	r6, r2
   2d990:	ldr	r0, [r2, #16]
   2d994:	cmp	r0, #4
   2d998:	bne	2d9e4 <__flatcc_fb_build_schema@@Base+0x27a4>
   2d99c:	ldrh	r0, [r5, #16]
   2d9a0:	cmp	r0, #2
   2d9a4:	popne	{r4, r5, r6, sl, fp, pc}
   2d9a8:	ldrd	r2, [r5, #8]
   2d9ac:	mov	r0, r4
   2d9b0:	bl	2db44 <__flatcc_fb_build_schema@@Base+0x2904>
   2d9b4:	cmp	r0, #0
   2d9b8:	beq	2d9fc <__flatcc_fb_build_schema@@Base+0x27bc>
   2d9bc:	ldrh	r1, [r0, #8]
   2d9c0:	cmp	r1, #0
   2d9c4:	beq	2d9dc <__flatcc_fb_build_schema@@Base+0x279c>
   2d9c8:	ldr	r2, [r4, #176]	; 0xb0
   2d9cc:	cmp	r2, #0
   2d9d0:	beq	2da0c <__flatcc_fb_build_schema@@Base+0x27cc>
   2d9d4:	cmp	r1, #1
   2d9d8:	bne	2da20 <__flatcc_fb_build_schema@@Base+0x27e0>
   2d9dc:	str	r0, [r6, #104]	; 0x68
   2d9e0:	pop	{r4, r5, r6, sl, fp, pc}
   2d9e4:	ldr	r1, [r5, #4]
   2d9e8:	movw	r2, #58371	; 0xe403
   2d9ec:	movt	r2, #4
   2d9f0:	mov	r0, r4
   2d9f4:	pop	{r4, r5, r6, sl, fp, lr}
   2d9f8:	b	2d888 <__flatcc_fb_build_schema@@Base+0x2648>
   2d9fc:	ldmib	r5, {r1, r2, r3}
   2da00:	mov	r0, r4
   2da04:	pop	{r4, r5, r6, sl, fp, lr}
   2da08:	b	2dc28 <__flatcc_fb_build_schema@@Base+0x29e8>
   2da0c:	ldr	r3, [r0, #4]
   2da10:	ldr	r1, [r5, #4]
   2da14:	movw	r2, #58459	; 0xe45b
   2da18:	movt	r2, #4
   2da1c:	b	2da30 <__flatcc_fb_build_schema@@Base+0x27f0>
   2da20:	ldr	r3, [r0, #4]
   2da24:	ldr	r1, [r5, #4]
   2da28:	movw	r2, #58502	; 0xe486
   2da2c:	movt	r2, #4
   2da30:	mov	r0, r4
   2da34:	pop	{r4, r5, r6, sl, fp, lr}
   2da38:	b	2d5b4 <__flatcc_fb_build_schema@@Base+0x2374>
   2da3c:	push	{r4, r5, fp, lr}
   2da40:	add	fp, sp, #8
   2da44:	sub	sp, sp, #8
   2da48:	mov	r4, r2
   2da4c:	mov	r2, #0
   2da50:	str	r2, [sp, #4]
   2da54:	cmp	r3, #0
   2da58:	beq	2daec <__flatcc_fb_build_schema@@Base+0x28ac>
   2da5c:	mov	r5, r3
   2da60:	cmp	r4, #0
   2da64:	ldrhne	r2, [r4, #8]
   2da68:	cmpne	r2, #3
   2da6c:	bne	2db0c <__flatcc_fb_build_schema@@Base+0x28cc>
   2da70:	add	r3, sp, #4
   2da74:	mov	r2, r5
   2da78:	bl	2dd48 <__flatcc_fb_build_schema@@Base+0x2b08>
   2da7c:	cmp	r0, #0
   2da80:	beq	2da98 <__flatcc_fb_build_schema@@Base+0x2858>
   2da84:	ldrh	r1, [r0, #8]
   2da88:	cmp	r1, #3
   2da8c:	bne	2da98 <__flatcc_fb_build_schema@@Base+0x2858>
   2da90:	mov	r4, r0
   2da94:	b	2daa8 <__flatcc_fb_build_schema@@Base+0x2868>
   2da98:	ldr	r0, [r5]
   2da9c:	mvn	r5, #0
   2daa0:	cmp	r0, #0
   2daa4:	bne	2dae0 <__flatcc_fb_build_schema@@Base+0x28a0>
   2daa8:	mvn	r5, #0
   2daac:	cmp	r4, #0
   2dab0:	beq	2dae0 <__flatcc_fb_build_schema@@Base+0x28a0>
   2dab4:	ldr	r0, [sp, #4]
   2dab8:	ldr	r1, [r0, #4]
   2dabc:	add	r0, r4, #56	; 0x38
   2dac0:	bl	2de6c <__flatcc_fb_build_schema@@Base+0x2c2c>
   2dac4:	cmp	r0, #0
   2dac8:	beq	2dae0 <__flatcc_fb_build_schema@@Base+0x28a0>
   2dacc:	ldr	r1, [fp, #8]
   2dad0:	add	r0, r0, #48	; 0x30
   2dad4:	vld1.64	{d16-d17}, [r0]
   2dad8:	vst1.64	{d16-d17}, [r1]
   2dadc:	mov	r5, #0
   2dae0:	mov	r0, r5
   2dae4:	sub	sp, fp, #8
   2dae8:	pop	{r4, r5, fp, pc}
   2daec:	movw	r0, #58557	; 0xe4bd
   2daf0:	movt	r0, #4
   2daf4:	movw	r1, #53477	; 0xd0e5
   2daf8:	movt	r1, #4
   2dafc:	movw	r3, #58561	; 0xe4c1
   2db00:	movt	r3, #4
   2db04:	movw	r2, #347	; 0x15b
   2db08:	bl	14950 <__assert_fail@plt>
   2db0c:	movw	r0, #58659	; 0xe523
   2db10:	movt	r0, #4
   2db14:	movw	r1, #53477	; 0xd0e5
   2db18:	movt	r1, #4
   2db1c:	movw	r3, #58561	; 0xe4c1
   2db20:	movt	r3, #4
   2db24:	mov	r2, #348	; 0x15c
   2db28:	bl	14950 <__assert_fail@plt>
   2db2c:	push	{fp, lr}
   2db30:	mov	fp, sp
   2db34:	bl	33420 <fb_value_set_find_item@@Base>
   2db38:	cmp	r0, #0
   2db3c:	movwne	r0, #1
   2db40:	pop	{fp, pc}
   2db44:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2db48:	add	fp, sp, #24
   2db4c:	mov	r5, r1
   2db50:	mov	r9, r0
   2db54:	sub	r0, r3, #1
   2db58:	add	r4, r0, #1
   2db5c:	cmp	r4, #1
   2db60:	blt	2db88 <__flatcc_fb_build_schema@@Base+0x2948>
   2db64:	ldrb	r1, [r2, r0]
   2db68:	sub	r0, r0, #1
   2db6c:	cmp	r1, #46	; 0x2e
   2db70:	bne	2db58 <__flatcc_fb_build_schema@@Base+0x2918>
   2db74:	add	r1, r2, r0
   2db78:	add	r6, r1, #2
   2db7c:	add	r4, r0, #1
   2db80:	sub	r3, r3, #1
   2db84:	b	2db8c <__flatcc_fb_build_schema@@Base+0x294c>
   2db88:	mov	r6, r2
   2db8c:	sub	r7, r3, r4
   2db90:	add	r8, r9, #352	; 0x160
   2db94:	cmp	r5, #0
   2db98:	beq	2dbf0 <__flatcc_fb_build_schema@@Base+0x29b0>
   2db9c:	cmp	r4, #0
   2dba0:	bne	2dbf0 <__flatcc_fb_build_schema@@Base+0x29b0>
   2dba4:	add	r0, r5, #4
   2dba8:	mov	r1, r6
   2dbac:	mov	r2, r7
   2dbb0:	bl	25d74 <fb_symbol_table_find@@Base>
   2dbb4:	cmp	r0, #0
   2dbb8:	beq	2dbd4 <__flatcc_fb_build_schema@@Base+0x2994>
   2dbbc:	mov	r4, r0
   2dbc0:	mov	r0, r8
   2dbc4:	mov	r1, r4
   2dbc8:	bl	2dc4c <__flatcc_fb_build_schema@@Base+0x2a0c>
   2dbcc:	cmp	r0, #0
   2dbd0:	bne	2dc20 <__flatcc_fb_build_schema@@Base+0x29e0>
   2dbd4:	mov	r0, r9
   2dbd8:	mov	r1, r5
   2dbdc:	bl	2dc80 <__flatcc_fb_build_schema@@Base+0x2a40>
   2dbe0:	mov	r5, r0
   2dbe4:	cmp	r0, #0
   2dbe8:	bne	2dba4 <__flatcc_fb_build_schema@@Base+0x2964>
   2dbec:	b	2dc1c <__flatcc_fb_build_schema@@Base+0x29dc>
   2dbf0:	mov	r0, r8
   2dbf4:	mov	r1, r2
   2dbf8:	mov	r2, r4
   2dbfc:	bl	2dd04 <__flatcc_fb_build_schema@@Base+0x2ac4>
   2dc00:	cmp	r0, #0
   2dc04:	beq	2dc1c <__flatcc_fb_build_schema@@Base+0x29dc>
   2dc08:	add	r0, r0, #4
   2dc0c:	mov	r1, r6
   2dc10:	mov	r2, r7
   2dc14:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   2dc18:	b	25d74 <fb_symbol_table_find@@Base>
   2dc1c:	mov	r4, #0
   2dc20:	mov	r0, r4
   2dc24:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2dc28:	push	{fp, lr}
   2dc2c:	mov	fp, sp
   2dc30:	push	{r2, r3}
   2dc34:	movw	r2, #58432	; 0xe440
   2dc38:	movt	r2, #4
   2dc3c:	mov	r3, #0
   2dc40:	bl	2742c <__flatcc_error_report@@Base>
   2dc44:	mov	sp, fp
   2dc48:	pop	{fp, pc}
   2dc4c:	push	{r4, sl, fp, lr}
   2dc50:	add	fp, sp, #8
   2dc54:	mov	r4, r1
   2dc58:	ldrh	r1, [r1, #8]
   2dc5c:	cmp	r1, #4
   2dc60:	movhi	r0, #0
   2dc64:	pophi	{r4, sl, fp, pc}
   2dc68:	ldr	r1, [r4, #16]
   2dc6c:	add	r0, r0, #172	; 0xac
   2dc70:	bl	2b5f0 <__flatcc_fb_build_schema@@Base+0x3b0>
   2dc74:	cmp	r0, #0
   2dc78:	movne	r0, r4
   2dc7c:	pop	{r4, sl, fp, pc}
   2dc80:	push	{r4, r5, r6, sl, fp, lr}
   2dc84:	add	fp, sp, #16
   2dc88:	mov	r4, r1
   2dc8c:	mov	r1, #0
   2dc90:	cmp	r4, #0
   2dc94:	ldrne	r2, [r4]
   2dc98:	cmpne	r2, #0
   2dc9c:	bne	2dca8 <__flatcc_fb_build_schema@@Base+0x2a68>
   2dca0:	mov	r0, r1
   2dca4:	pop	{r4, r5, r6, sl, fp, pc}
   2dca8:	mov	r5, #0
   2dcac:	add	r5, r5, #1
   2dcb0:	ldr	r2, [r2]
   2dcb4:	cmp	r2, #0
   2dcb8:	bne	2dcac <__flatcc_fb_build_schema@@Base+0x2a6c>
   2dcbc:	add	r6, r0, #352	; 0x160
   2dcc0:	cmp	r5, #2
   2dcc4:	blt	2dcf0 <__flatcc_fb_build_schema@@Base+0x2ab0>
   2dcc8:	sub	r5, r5, #1
   2dccc:	ldr	r1, [r4]
   2dcd0:	mov	r0, r6
   2dcd4:	mov	r2, r5
   2dcd8:	bl	2dd28 <__flatcc_fb_build_schema@@Base+0x2ae8>
   2dcdc:	cmp	r0, #0
   2dce0:	beq	2dcc0 <__flatcc_fb_build_schema@@Base+0x2a80>
   2dce4:	mov	r1, r0
   2dce8:	mov	r0, r1
   2dcec:	pop	{r4, r5, r6, sl, fp, pc}
   2dcf0:	mov	r0, r6
   2dcf4:	mov	r1, #0
   2dcf8:	mov	r2, #0
   2dcfc:	pop	{r4, r5, r6, sl, fp, lr}
   2dd00:	b	2dd28 <__flatcc_fb_build_schema@@Base+0x2ae8>
   2dd04:	cmp	r0, #0
   2dd08:	ldrne	r0, [r0, #60]	; 0x3c
   2dd0c:	cmpne	r0, #0
   2dd10:	bne	2dd1c <__flatcc_fb_build_schema@@Base+0x2adc>
   2dd14:	mov	r0, #0
   2dd18:	bx	lr
   2dd1c:	cmp	r2, #0
   2dd20:	moveq	r1, r2
   2dd24:	b	26388 <fb_scope_table_find@@Base>
   2dd28:	cmp	r0, #0
   2dd2c:	ldrne	r0, [r0, #60]	; 0x3c
   2dd30:	cmpne	r0, #0
   2dd34:	bne	2dd40 <__flatcc_fb_build_schema@@Base+0x2b00>
   2dd38:	mov	r0, #0
   2dd3c:	bx	lr
   2dd40:	rsb	r2, r2, #0
   2dd44:	b	26388 <fb_scope_table_find@@Base>
   2dd48:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2dd4c:	add	fp, sp, #24
   2dd50:	mov	r5, r1
   2dd54:	mov	r8, r0
   2dd58:	cmp	r2, #0
   2dd5c:	beq	2dd88 <__flatcc_fb_build_schema@@Base+0x2b48>
   2dd60:	mov	r0, #0
   2dd64:	mov	r1, r2
   2dd68:	mov	r4, #0
   2dd6c:	mov	r7, r4
   2dd70:	mov	r4, r1
   2dd74:	add	r0, r0, #1
   2dd78:	ldr	r1, [r1]
   2dd7c:	cmp	r1, #0
   2dd80:	bne	2dd6c <__flatcc_fb_build_schema@@Base+0x2b2c>
   2dd84:	b	2dd94 <__flatcc_fb_build_schema@@Base+0x2b54>
   2dd88:	mov	r7, #0
   2dd8c:	mov	r4, #0
   2dd90:	mov	r0, #0
   2dd94:	cmp	r3, #0
   2dd98:	strne	r4, [r3]
   2dd9c:	subne	r0, r0, #1
   2dda0:	moveq	r7, r4
   2dda4:	cmp	r7, #0
   2dda8:	beq	2de60 <__flatcc_fb_build_schema@@Base+0x2c20>
   2ddac:	cmp	r5, #0
   2ddb0:	beq	2de08 <__flatcc_fb_build_schema@@Base+0x2bc8>
   2ddb4:	cmp	r0, #1
   2ddb8:	bne	2de08 <__flatcc_fb_build_schema@@Base+0x2bc8>
   2ddbc:	add	r4, r8, #352	; 0x160
   2ddc0:	ldr	r1, [r7, #4]
   2ddc4:	add	r0, r5, #4
   2ddc8:	bl	2de6c <__flatcc_fb_build_schema@@Base+0x2c2c>
   2ddcc:	cmp	r0, #0
   2ddd0:	beq	2ddec <__flatcc_fb_build_schema@@Base+0x2bac>
   2ddd4:	mov	r6, r0
   2ddd8:	mov	r0, r4
   2dddc:	mov	r1, r6
   2dde0:	bl	2dc4c <__flatcc_fb_build_schema@@Base+0x2a0c>
   2dde4:	cmp	r0, #0
   2dde8:	bne	2de58 <__flatcc_fb_build_schema@@Base+0x2c18>
   2ddec:	mov	r0, r8
   2ddf0:	mov	r1, r5
   2ddf4:	bl	2dc80 <__flatcc_fb_build_schema@@Base+0x2a40>
   2ddf8:	mov	r5, r0
   2ddfc:	cmp	r0, #0
   2de00:	bne	2ddc0 <__flatcc_fb_build_schema@@Base+0x2b80>
   2de04:	b	2de60 <__flatcc_fb_build_schema@@Base+0x2c20>
   2de08:	subs	r3, r0, #1
   2de0c:	moveq	r2, r3
   2de10:	add	r5, r8, #352	; 0x160
   2de14:	mov	r0, r5
   2de18:	mov	r1, r2
   2de1c:	mov	r2, r3
   2de20:	bl	2dd28 <__flatcc_fb_build_schema@@Base+0x2ae8>
   2de24:	cmp	r0, #0
   2de28:	beq	2de60 <__flatcc_fb_build_schema@@Base+0x2c20>
   2de2c:	ldr	r1, [r7, #4]
   2de30:	add	r0, r0, #4
   2de34:	bl	2de6c <__flatcc_fb_build_schema@@Base+0x2c2c>
   2de38:	cmp	r0, #0
   2de3c:	beq	2de60 <__flatcc_fb_build_schema@@Base+0x2c20>
   2de40:	mov	r6, r0
   2de44:	mov	r0, r5
   2de48:	mov	r1, r6
   2de4c:	bl	2dc4c <__flatcc_fb_build_schema@@Base+0x2a0c>
   2de50:	cmp	r0, #0
   2de54:	moveq	r6, #0
   2de58:	mov	r0, r6
   2de5c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2de60:	mov	r6, #0
   2de64:	mov	r0, r6
   2de68:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2de6c:	ldr	r3, [r1]
   2de70:	ldr	r2, [r1, #4]
   2de74:	mov	r1, r3
   2de78:	b	25d74 <fb_symbol_table_find@@Base>

0002de7c <__flatcc_fb_coerce_scalar_type@@Base>:
   2de7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2de80:	add	fp, sp, #28
   2de84:	sub	sp, sp, #12
   2de88:	mov	r9, r0
   2de8c:	mov	r5, r3
   2de90:	ldrh	r0, [r5, #8]!
   2de94:	mov	r4, #0
   2de98:	cmp	r0, #2
   2de9c:	bcc	2e2f4 <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2dea0:	mov	r7, r3
   2dea4:	mov	sl, r1
   2dea8:	cmp	r0, #4
   2deac:	bne	2ded4 <__flatcc_fb_coerce_scalar_type@@Base+0x58>
   2deb0:	ldrd	r0, [r7]
   2deb4:	mvn	r3, #127	; 0x7f
   2deb8:	add	r3, r3, #127	; 0x7f
   2debc:	mvn	r6, #0
   2dec0:	subs	r0, r3, r0
   2dec4:	sbcs	r0, r6, r1
   2dec8:	movlt	r0, #5
   2decc:	strhlt	r0, [r5]
   2ded0:	b	2df10 <__flatcc_fb_coerce_scalar_type@@Base+0x94>
   2ded4:	cmp	r2, #5
   2ded8:	beq	2df10 <__flatcc_fb_coerce_scalar_type@@Base+0x94>
   2dedc:	cmp	r0, #6
   2dee0:	bne	2df10 <__flatcc_fb_coerce_scalar_type@@Base+0x94>
   2dee4:	ldr	r0, [r9, #144]	; 0x90
   2dee8:	cmp	r0, #0
   2deec:	beq	2df10 <__flatcc_fb_coerce_scalar_type@@Base+0x94>
   2def0:	mov	r0, #0
   2def4:	str	r0, [r7, #4]
   2def8:	mov	r0, #5
   2defc:	strh	r0, [r7, #8]
   2df00:	ldrb	r0, [r7]
   2df04:	str	r0, [r7]
   2df08:	cmp	r0, #2
   2df0c:	bcs	2e300 <__flatcc_fb_coerce_scalar_type@@Base+0x484>
   2df10:	sub	r0, r2, #1
   2df14:	cmp	r0, #10
   2df18:	bhi	2e160 <__flatcc_fb_coerce_scalar_type@@Base+0x2e4>
   2df1c:	add	r1, pc, #0
   2df20:	ldr	pc, [r1, r0, lsl #2]
   2df24:	andeq	sp, r2, r0, asr pc
   2df28:	andeq	lr, r2, r8, rrx
   2df2c:	andeq	sp, r2, r0, ror #31
   2df30:	andeq	lr, r2, r8
   2df34:	andeq	sp, r2, r8, ror #30
   2df38:	andeq	lr, r2, ip, lsl #1
   2df3c:	strheq	lr, [r2], -r8
   2df40:	andeq	lr, r2, r0, lsr r0
   2df44:	strdeq	lr, [r2], -r0
   2df48:	andeq	sp, r2, r4, lsr #31
   2df4c:	andeq	lr, r2, r8, lsr #2
   2df50:	ldrh	r0, [r5]
   2df54:	cmp	r0, #5
   2df58:	beq	2e2f4 <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2df5c:	movw	r2, #59686	; 0xe926
   2df60:	movt	r2, #4
   2df64:	b	2e2dc <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2df68:	ldrh	r0, [r5]
   2df6c:	cmp	r0, #6
   2df70:	beq	2e2f4 <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2df74:	cmp	r0, #5
   2df78:	bne	2e190 <__flatcc_fb_coerce_scalar_type@@Base+0x314>
   2df7c:	ldr	r0, [r9, #144]	; 0x90
   2df80:	cmp	r0, #0
   2df84:	beq	2e190 <__flatcc_fb_coerce_scalar_type@@Base+0x314>
   2df88:	ldrd	r0, [r7]
   2df8c:	subs	r0, r0, #2
   2df90:	sbcs	r0, r1, #0
   2df94:	bcc	2e2f4 <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2df98:	movw	r2, #60376	; 0xebd8
   2df9c:	movt	r2, #4
   2dfa0:	b	2e2dc <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2dfa4:	ldrh	r0, [r5]
   2dfa8:	cmp	r0, #3
   2dfac:	beq	2e2f4 <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2dfb0:	cmp	r0, #5
   2dfb4:	beq	2e22c <__flatcc_fb_coerce_scalar_type@@Base+0x3b0>
   2dfb8:	cmp	r0, #4
   2dfbc:	bne	2e278 <__flatcc_fb_coerce_scalar_type@@Base+0x3fc>
   2dfc0:	ldm	r7, {r6, r8}
   2dfc4:	mov	r0, r6
   2dfc8:	mov	r1, r8
   2dfcc:	bl	33910 <fb_value_set_visit@@Base+0x410>
   2dfd0:	str	r0, [sp, #8]
   2dfd4:	str	r1, [sp, #4]
   2dfd8:	bl	33c38 <fb_value_set_visit@@Base+0x738>
   2dfdc:	b	2e248 <__flatcc_fb_coerce_scalar_type@@Base+0x3cc>
   2dfe0:	ldrh	r0, [r5]
   2dfe4:	cmp	r0, #5
   2dfe8:	bne	2e16c <__flatcc_fb_coerce_scalar_type@@Base+0x2f0>
   2dfec:	ldrd	r0, [r7]
   2dff0:	subs	r0, r0, #65536	; 0x10000
   2dff4:	sbcs	r0, r1, #0
   2dff8:	bcc	2e2f4 <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2dffc:	movw	r2, #59881	; 0xe9e9
   2e000:	movt	r2, #4
   2e004:	b	2e2dc <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e008:	ldrh	r0, [r5]
   2e00c:	cmp	r0, #5
   2e010:	bne	2e178 <__flatcc_fb_coerce_scalar_type@@Base+0x2fc>
   2e014:	ldrd	r0, [r7]
   2e018:	subs	r0, r0, #256	; 0x100
   2e01c:	sbcs	r0, r1, #0
   2e020:	bcc	2e2f4 <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2e024:	movw	r2, #59968	; 0xea40
   2e028:	movt	r2, #4
   2e02c:	b	2e2dc <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e030:	ldrh	r0, [r5]
   2e034:	cmp	r0, #5
   2e038:	beq	2e19c <__flatcc_fb_coerce_scalar_type@@Base+0x320>
   2e03c:	cmp	r0, #4
   2e040:	bne	2e1fc <__flatcc_fb_coerce_scalar_type@@Base+0x380>
   2e044:	ldrd	r0, [r7]
   2e048:	mvn	r2, #0
   2e04c:	mvn	r3, #32768	; 0x8000
   2e050:	subs	r0, r3, r0
   2e054:	sbcs	r0, r2, r1
   2e058:	blt	2e2f4 <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2e05c:	movw	r2, #60170	; 0xeb0a
   2e060:	movt	r2, #4
   2e064:	b	2e2dc <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e068:	ldrh	r0, [r5]
   2e06c:	cmp	r0, #5
   2e070:	bne	2e184 <__flatcc_fb_coerce_scalar_type@@Base+0x308>
   2e074:	ldr	r0, [r7, #4]
   2e078:	cmp	r0, #0
   2e07c:	beq	2e2f4 <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2e080:	movw	r2, #59794	; 0xe992
   2e084:	movt	r2, #4
   2e088:	b	2e2dc <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e08c:	ldrh	r0, [r5]
   2e090:	cmp	r0, #4
   2e094:	beq	2e2f4 <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2e098:	cmp	r0, #5
   2e09c:	bne	2e208 <__flatcc_fb_coerce_scalar_type@@Base+0x38c>
   2e0a0:	ldr	r0, [r7, #4]
   2e0a4:	cmn	r0, #1
   2e0a8:	bgt	2e1f0 <__flatcc_fb_coerce_scalar_type@@Base+0x374>
   2e0ac:	movw	r2, #59997	; 0xea5d
   2e0b0:	movt	r2, #4
   2e0b4:	b	2e2dc <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e0b8:	ldrh	r0, [r5]
   2e0bc:	cmp	r0, #5
   2e0c0:	beq	2e1b8 <__flatcc_fb_coerce_scalar_type@@Base+0x33c>
   2e0c4:	cmp	r0, #4
   2e0c8:	bne	2e214 <__flatcc_fb_coerce_scalar_type@@Base+0x398>
   2e0cc:	ldrd	r0, [r7]
   2e0d0:	mvn	r2, #0
   2e0d4:	mvn	r3, #-2147483648	; 0x80000000
   2e0d8:	subs	r0, r3, r0
   2e0dc:	sbcs	r0, r2, r1
   2e0e0:	blt	2e2f4 <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2e0e4:	movw	r2, #60070	; 0xeaa6
   2e0e8:	movt	r2, #4
   2e0ec:	b	2e2dc <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e0f0:	ldrh	r0, [r5]
   2e0f4:	cmp	r0, #5
   2e0f8:	beq	2e1d4 <__flatcc_fb_coerce_scalar_type@@Base+0x358>
   2e0fc:	cmp	r0, #4
   2e100:	bne	2e220 <__flatcc_fb_coerce_scalar_type@@Base+0x3a4>
   2e104:	ldrd	r0, [r7]
   2e108:	mvn	r2, #0
   2e10c:	mvn	r3, #128	; 0x80
   2e110:	subs	r0, r3, r0
   2e114:	sbcs	r0, r2, r1
   2e118:	blt	2e2f4 <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2e11c:	movw	r2, #60276	; 0xeb74
   2e120:	movt	r2, #4
   2e124:	b	2e2dc <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e128:	ldrh	r0, [r5]
   2e12c:	cmp	r0, #3
   2e130:	beq	2e2f4 <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2e134:	cmp	r0, #5
   2e138:	beq	2e284 <__flatcc_fb_coerce_scalar_type@@Base+0x408>
   2e13c:	cmp	r0, #4
   2e140:	bne	2e2d4 <__flatcc_fb_coerce_scalar_type@@Base+0x458>
   2e144:	ldm	r7, {r6, r8}
   2e148:	mov	r0, r6
   2e14c:	mov	r1, r8
   2e150:	bl	33b44 <fb_value_set_visit@@Base+0x644>
   2e154:	str	r0, [sp, #8]
   2e158:	bl	33c0c <fb_value_set_visit@@Base+0x70c>
   2e15c:	b	2e29c <__flatcc_fb_coerce_scalar_type@@Base+0x420>
   2e160:	movw	r2, #60700	; 0xed1c
   2e164:	movt	r2, #4
   2e168:	b	2e2dc <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e16c:	movw	r2, #59823	; 0xe9af
   2e170:	movt	r2, #4
   2e174:	b	2e2dc <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e178:	movw	r2, #59912	; 0xea08
   2e17c:	movt	r2, #4
   2e180:	b	2e2dc <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e184:	movw	r2, #59738	; 0xe95a
   2e188:	movt	r2, #4
   2e18c:	b	2e2dc <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e190:	movw	r2, #60438	; 0xec16
   2e194:	movt	r2, #4
   2e198:	b	2e2dc <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e19c:	ldrd	r0, [r7]
   2e1a0:	subs	r0, r0, #32768	; 0x8000
   2e1a4:	sbcs	r0, r1, #0
   2e1a8:	blt	2e1f0 <__flatcc_fb_coerce_scalar_type@@Base+0x374>
   2e1ac:	movw	r2, #60200	; 0xeb28
   2e1b0:	movt	r2, #4
   2e1b4:	b	2e2dc <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e1b8:	ldrd	r0, [r7]
   2e1bc:	subs	r0, r0, #-2147483648	; 0x80000000
   2e1c0:	sbcs	r0, r1, #0
   2e1c4:	blt	2e1f0 <__flatcc_fb_coerce_scalar_type@@Base+0x374>
   2e1c8:	movw	r2, #60098	; 0xeac2
   2e1cc:	movt	r2, #4
   2e1d0:	b	2e2dc <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e1d4:	ldrd	r0, [r7]
   2e1d8:	subs	r0, r0, #128	; 0x80
   2e1dc:	sbcs	r0, r1, #0
   2e1e0:	blt	2e1f0 <__flatcc_fb_coerce_scalar_type@@Base+0x374>
   2e1e4:	movw	r2, #60304	; 0xeb90
   2e1e8:	movt	r2, #4
   2e1ec:	b	2e2dc <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e1f0:	mov	r0, #4
   2e1f4:	strh	r0, [r5]
   2e1f8:	b	2e2f4 <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2e1fc:	movw	r2, #60229	; 0xeb45
   2e200:	movt	r2, #4
   2e204:	b	2e2dc <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e208:	movw	r2, #60028	; 0xea7c
   2e20c:	movt	r2, #4
   2e210:	b	2e2dc <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e214:	movw	r2, #60125	; 0xeadd
   2e218:	movt	r2, #4
   2e21c:	b	2e2dc <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e220:	movw	r2, #60331	; 0xebab
   2e224:	movt	r2, #4
   2e228:	b	2e2dc <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e22c:	ldm	r7, {r6, r8}
   2e230:	mov	r0, r6
   2e234:	mov	r1, r8
   2e238:	bl	338fc <fb_value_set_visit@@Base+0x3fc>
   2e23c:	str	r0, [sp, #8]
   2e240:	str	r1, [sp, #4]
   2e244:	bl	33ca8 <fb_value_set_visit@@Base+0x7a8>
   2e248:	eor	r1, r8, r1
   2e24c:	eor	r0, r6, r0
   2e250:	orrs	r0, r0, r1
   2e254:	bne	2e26c <__flatcc_fb_coerce_scalar_type@@Base+0x3f0>
   2e258:	ldr	r0, [sp, #8]
   2e25c:	ldr	r1, [sp, #4]
   2e260:	vmov	d16, r0, r1
   2e264:	mov	r0, #3
   2e268:	b	2e2bc <__flatcc_fb_coerce_scalar_type@@Base+0x440>
   2e26c:	movw	r2, #60492	; 0xec4c
   2e270:	movt	r2, #4
   2e274:	b	2e2dc <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e278:	movw	r2, #60540	; 0xec7c
   2e27c:	movt	r2, #4
   2e280:	b	2e2dc <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e284:	ldm	r7, {r6, r8}
   2e288:	mov	r0, r6
   2e28c:	mov	r1, r8
   2e290:	bl	33b34 <fb_value_set_visit@@Base+0x634>
   2e294:	str	r0, [sp, #8]
   2e298:	bl	33c68 <fb_value_set_visit@@Base+0x768>
   2e29c:	eor	r1, r8, r1
   2e2a0:	eor	r0, r6, r0
   2e2a4:	orrs	r0, r0, r1
   2e2a8:	bne	2e2c8 <__flatcc_fb_coerce_scalar_type@@Base+0x44c>
   2e2ac:	ldr	r0, [sp, #8]
   2e2b0:	vmov	s0, r0
   2e2b4:	mov	r0, #3
   2e2b8:	vcvt.f64.f32	d16, s0
   2e2bc:	strh	r0, [r7, #8]
   2e2c0:	vstr	d16, [r7]
   2e2c4:	b	2e2f4 <__flatcc_fb_coerce_scalar_type@@Base+0x478>
   2e2c8:	movw	r2, #60597	; 0xecb5
   2e2cc:	movt	r2, #4
   2e2d0:	b	2e2dc <__flatcc_fb_coerce_scalar_type@@Base+0x460>
   2e2d4:	movw	r2, #60644	; 0xece4
   2e2d8:	movt	r2, #4
   2e2dc:	mov	r0, r9
   2e2e0:	mov	r1, sl
   2e2e4:	bl	2e320 <__flatcc_fb_coerce_scalar_type@@Base+0x4a4>
   2e2e8:	mov	r0, #1
   2e2ec:	strh	r0, [r5]
   2e2f0:	mvn	r4, #0
   2e2f4:	mov	r0, r4
   2e2f8:	sub	sp, fp, #28
   2e2fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e300:	movw	r0, #59488	; 0xe860
   2e304:	movt	r0, #4
   2e308:	movw	r1, #59519	; 0xe87f
   2e30c:	movt	r1, #4
   2e310:	movw	r3, #59589	; 0xe8c5
   2e314:	movt	r3, #4
   2e318:	mov	r2, #52	; 0x34
   2e31c:	bl	14950 <__assert_fail@plt>
   2e320:	ldr	r1, [r1, #4]
   2e324:	b	2e328 <__flatcc_fb_coerce_scalar_type@@Base+0x4ac>
   2e328:	b	2e32c <__flatcc_fb_coerce_scalar_type@@Base+0x4b0>
   2e32c:	push	{fp, lr}
   2e330:	mov	fp, sp
   2e334:	sub	sp, sp, #8
   2e338:	mov	r3, #0
   2e33c:	str	r3, [sp]
   2e340:	str	r3, [sp, #4]
   2e344:	mov	r3, #0
   2e348:	bl	2742c <__flatcc_error_report@@Base>
   2e34c:	mov	sp, fp
   2e350:	pop	{fp, pc}

0002e354 <flatcc_builder_default_alloc@@Base>:
   2e354:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2e358:	add	fp, sp, #24
   2e35c:	mov	r4, r1
   2e360:	cmp	r2, #0
   2e364:	beq	2e3ac <flatcc_builder_default_alloc@@Base+0x58>
   2e368:	mov	r8, r3
   2e36c:	ldr	r0, [fp, #8]
   2e370:	sub	r1, r0, #1
   2e374:	cmp	r1, #6
   2e378:	bhi	2e3d8 <flatcc_builder_default_alloc@@Base+0x84>
   2e37c:	mov	r0, #256	; 0x100
   2e380:	add	r3, pc, #0
   2e384:	ldr	pc, [r3, r1, lsl #2]
   2e388:	andeq	lr, r2, ip, ror #7
   2e38c:	ldrdeq	lr, [r2], -r8
   2e390:	ldrdeq	lr, [r2], -r8
   2e394:	andeq	lr, r2, r4, lsr #7
   2e398:	andeq	lr, r2, r0, ror #7
   2e39c:	ldrdeq	lr, [r2], -r8
   2e3a0:	andeq	lr, r2, r8, ror #7
   2e3a4:	mov	r0, #288	; 0x120
   2e3a8:	b	2e3ec <flatcc_builder_default_alloc@@Base+0x98>
   2e3ac:	ldr	r0, [r4]
   2e3b0:	cmp	r0, #0
   2e3b4:	moveq	r6, #0
   2e3b8:	moveq	r0, r6
   2e3bc:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   2e3c0:	bl	147dc <free@plt>
   2e3c4:	mov	r6, #0
   2e3c8:	str	r6, [r4]
   2e3cc:	str	r6, [r4, #4]
   2e3d0:	mov	r0, r6
   2e3d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2e3d8:	mov	r0, #32
   2e3dc:	b	2e3ec <flatcc_builder_default_alloc@@Base+0x98>
   2e3e0:	mov	r0, r2
   2e3e4:	b	2e3ec <flatcc_builder_default_alloc@@Base+0x98>
   2e3e8:	mov	r0, #64	; 0x40
   2e3ec:	mov	r7, r0
   2e3f0:	lsl	r0, r0, #1
   2e3f4:	cmp	r7, r2
   2e3f8:	bcc	2e3ec <flatcc_builder_default_alloc@@Base+0x98>
   2e3fc:	ldr	r0, [r4, #4]
   2e400:	mov	r6, #0
   2e404:	cmp	r0, r2
   2e408:	lsrcs	r0, r0, #1
   2e40c:	cmpcs	r0, r7
   2e410:	bcs	2e448 <flatcc_builder_default_alloc@@Base+0xf4>
   2e414:	ldr	r0, [r4]
   2e418:	mov	r1, r7
   2e41c:	bl	14824 <realloc@plt>
   2e420:	cmp	r0, #0
   2e424:	mvneq	r6, #0
   2e428:	moveq	r0, r6
   2e42c:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   2e430:	mov	r5, r0
   2e434:	cmp	r8, #0
   2e438:	ldrne	r1, [r4, #4]
   2e43c:	cmpne	r7, r1
   2e440:	bhi	2e450 <flatcc_builder_default_alloc@@Base+0xfc>
   2e444:	stm	r4, {r5, r7}
   2e448:	mov	r0, r6
   2e44c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2e450:	add	r0, r5, r1
   2e454:	sub	r2, r7, r1
   2e458:	mov	r1, #0
   2e45c:	bl	148a8 <memset@plt>
   2e460:	b	2e444 <flatcc_builder_default_alloc@@Base+0xf0>

0002e464 <flatcc_builder_flush_vtable_cache@@Base>:
   2e464:	push	{r4, r5, fp, lr}
   2e468:	add	fp, sp, #8
   2e46c:	mov	r4, r0
   2e470:	ldr	r0, [r0, #116]	; 0x74
   2e474:	cmp	r0, #0
   2e478:	popeq	{r4, r5, fp, pc}
   2e47c:	ldr	r0, [r4, #92]	; 0x5c
   2e480:	ldr	r2, [r4, #96]	; 0x60
   2e484:	mov	r5, #0
   2e488:	mov	r1, #0
   2e48c:	bl	148a8 <memset@plt>
   2e490:	mov	r0, #16
   2e494:	str	r5, [r4, #120]	; 0x78
   2e498:	str	r0, [r4, #124]	; 0x7c
   2e49c:	pop	{r4, r5, fp, pc}

0002e4a0 <flatcc_builder_custom_init@@Base>:
   2e4a0:	push	{r4, r5, r6, r7, fp, lr}
   2e4a4:	add	fp, sp, #16
   2e4a8:	mov	r5, r3
   2e4ac:	mov	r6, r2
   2e4b0:	mov	r7, r1
   2e4b4:	mov	r4, r0
   2e4b8:	mov	r1, #0
   2e4bc:	mov	r2, #232	; 0xe8
   2e4c0:	bl	148a8 <memset@plt>
   2e4c4:	ldr	r0, [fp, #8]
   2e4c8:	cmp	r7, #0
   2e4cc:	bne	2e4e4 <flatcc_builder_custom_init@@Base+0x44>
   2e4d0:	mov	r1, #1
   2e4d4:	str	r1, [r4, #184]	; 0xb8
   2e4d8:	add	r6, r4, #188	; 0xbc
   2e4dc:	movw	r7, #6264	; 0x1878
   2e4e0:	movt	r7, #3
   2e4e4:	movw	r1, #58196	; 0xe354
   2e4e8:	movt	r1, #2
   2e4ec:	cmp	r5, #0
   2e4f0:	movne	r1, r5
   2e4f4:	str	r6, [r4, #36]	; 0x24
   2e4f8:	str	r0, [r4, #40]	; 0x28
   2e4fc:	str	r7, [r4, #44]	; 0x2c
   2e500:	str	r1, [r4, #48]	; 0x30
   2e504:	mov	r0, #0
   2e508:	pop	{r4, r5, r6, r7, fp, pc}

0002e50c <flatcc_builder_init@@Base>:
   2e50c:	push	{fp, lr}
   2e510:	mov	fp, sp
   2e514:	sub	sp, sp, #8
   2e518:	mov	r1, #0
   2e51c:	str	r1, [sp]
   2e520:	mov	r1, #0
   2e524:	mov	r2, #0
   2e528:	mov	r3, #0
   2e52c:	bl	2e4a0 <flatcc_builder_custom_init@@Base>
   2e530:	mov	r0, #0
   2e534:	mov	sp, fp
   2e538:	pop	{fp, pc}

0002e53c <flatcc_builder_custom_reset@@Base>:
   2e53c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2e540:	add	fp, sp, #24
   2e544:	sub	sp, sp, #8
   2e548:	mov	r9, r2
   2e54c:	mov	r8, r1
   2e550:	mov	r4, r0
   2e554:	add	r7, r0, #52	; 0x34
   2e558:	mov	r5, #0
   2e55c:	ldr	r0, [r7]
   2e560:	cmp	r0, #0
   2e564:	beq	2e5a8 <flatcc_builder_custom_reset@@Base+0x6c>
   2e568:	cmp	r9, #0
   2e56c:	cmpne	r5, #5
   2e570:	beq	2e598 <flatcc_builder_custom_reset@@Base+0x5c>
   2e574:	ldr	r0, [r4, #40]	; 0x28
   2e578:	ldr	r6, [r4, #48]	; 0x30
   2e57c:	str	r5, [sp]
   2e580:	mov	r1, r7
   2e584:	mov	r2, #1
   2e588:	mov	r3, #1
   2e58c:	blx	r6
   2e590:	cmp	r0, #0
   2e594:	bne	2e648 <flatcc_builder_custom_reset@@Base+0x10c>
   2e598:	ldm	r7, {r0, r2}
   2e59c:	mov	r1, #0
   2e5a0:	bl	148a8 <memset@plt>
   2e5a4:	b	2e5b4 <flatcc_builder_custom_reset@@Base+0x78>
   2e5a8:	ldr	r0, [r7, #4]
   2e5ac:	cmp	r0, #0
   2e5b0:	bne	2e658 <flatcc_builder_custom_reset@@Base+0x11c>
   2e5b4:	add	r7, r7, #8
   2e5b8:	add	r5, r5, #1
   2e5bc:	cmp	r5, #8
   2e5c0:	bcc	2e55c <flatcc_builder_custom_reset@@Base+0x20>
   2e5c4:	mov	r0, #0
   2e5c8:	str	r0, [r4, #120]	; 0x78
   2e5cc:	ldr	r1, [r4, #124]	; 0x7c
   2e5d0:	cmp	r1, #0
   2e5d4:	movne	r1, #16
   2e5d8:	strne	r1, [r4, #124]	; 0x7c
   2e5dc:	vmov.i32	q8, #0	; 0x00000000
   2e5e0:	strh	r0, [r4, #128]	; 0x80
   2e5e4:	str	r0, [r4, #136]	; 0x88
   2e5e8:	str	r0, [r4, #140]	; 0x8c
   2e5ec:	str	r0, [r4, #32]
   2e5f0:	add	r1, r4, #148	; 0x94
   2e5f4:	vst1.32	{d16-d17}, [r1]
   2e5f8:	ldr	r1, [r4, #52]	; 0x34
   2e5fc:	ldr	r2, [r4, #60]	; 0x3c
   2e600:	ldr	r3, [r4, #76]	; 0x4c
   2e604:	str	r2, [r4, #16]
   2e608:	str	r0, [r4, #20]
   2e60c:	str	r0, [r4, #24]
   2e610:	str	r3, [r4]
   2e614:	str	r1, [r4, #4]
   2e618:	cmp	r8, #0
   2e61c:	movne	r0, #0
   2e620:	strne	r0, [r4, #172]	; 0xac
   2e624:	strne	r0, [r4, #176]	; 0xb0
   2e628:	strne	r0, [r4, #180]	; 0xb4
   2e62c:	ldr	r0, [r4, #184]	; 0xb8
   2e630:	mov	r5, #0
   2e634:	cmp	r0, #0
   2e638:	beq	2e64c <flatcc_builder_custom_reset@@Base+0x110>
   2e63c:	add	r0, r4, #188	; 0xbc
   2e640:	bl	31758 <flatcc_emitter_reset@@Base>
   2e644:	b	2e64c <flatcc_builder_custom_reset@@Base+0x110>
   2e648:	mvn	r5, #0
   2e64c:	mov	r0, r5
   2e650:	sub	sp, fp, #24
   2e654:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2e658:	movw	r0, #61233	; 0xef31
   2e65c:	movt	r0, #4
   2e660:	movw	r1, #61251	; 0xef43
   2e664:	movt	r1, #4
   2e668:	movw	r3, #61321	; 0xef89
   2e66c:	movt	r3, #4
   2e670:	movw	r2, #434	; 0x1b2
   2e674:	bl	14950 <__assert_fail@plt>

0002e678 <flatcc_builder_reset@@Base>:
   2e678:	mov	r1, #0
   2e67c:	mov	r2, #0
   2e680:	b	2e53c <flatcc_builder_custom_reset@@Base>

0002e684 <flatcc_builder_clear@@Base>:
   2e684:	push	{r4, r5, r6, r7, fp, lr}
   2e688:	add	fp, sp, #16
   2e68c:	sub	sp, sp, #8
   2e690:	mov	r7, r0
   2e694:	add	r5, r0, #52	; 0x34
   2e698:	mov	r6, #0
   2e69c:	ldr	r0, [r7, #40]	; 0x28
   2e6a0:	ldr	r4, [r7, #48]	; 0x30
   2e6a4:	str	r6, [sp]
   2e6a8:	mov	r1, r5
   2e6ac:	mov	r2, #0
   2e6b0:	mov	r3, #0
   2e6b4:	blx	r4
   2e6b8:	add	r5, r5, #8
   2e6bc:	add	r6, r6, #1
   2e6c0:	cmp	r6, #8
   2e6c4:	bne	2e69c <flatcc_builder_clear@@Base+0x18>
   2e6c8:	ldr	r0, [r7, #184]	; 0xb8
   2e6cc:	cmp	r0, #0
   2e6d0:	beq	2e6dc <flatcc_builder_clear@@Base+0x58>
   2e6d4:	add	r0, r7, #188	; 0xbc
   2e6d8:	bl	31814 <flatcc_emitter_clear@@Base>
   2e6dc:	mov	r0, r7
   2e6e0:	mov	r1, #0
   2e6e4:	mov	r2, #232	; 0xe8
   2e6e8:	sub	sp, fp, #16
   2e6ec:	pop	{r4, r5, r6, r7, fp, lr}
   2e6f0:	b	148a8 <memset@plt>

0002e6f4 <flatcc_builder_enter_user_frame_ptr@@Base>:
   2e6f4:	push	{r4, r5, r6, r7, fp, lr}
   2e6f8:	add	fp, sp, #16
   2e6fc:	sub	sp, sp, #8
   2e700:	mov	r4, r0
   2e704:	ldr	r2, [r0, #228]	; 0xe4
   2e708:	mov	r7, #0
   2e70c:	str	r7, [sp]
   2e710:	add	r0, r1, #7
   2e714:	bic	r5, r0, #3
   2e718:	mov	r0, r4
   2e71c:	mov	r1, #7
   2e720:	mov	r3, r5
   2e724:	bl	2e76c <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   2e728:	cmp	r0, #0
   2e72c:	beq	2e760 <flatcc_builder_enter_user_frame_ptr@@Base+0x6c>
   2e730:	mov	r6, r0
   2e734:	mov	r1, #0
   2e738:	mov	r2, r5
   2e73c:	bl	148a8 <memset@plt>
   2e740:	ldr	r0, [r4, #224]	; 0xe0
   2e744:	str	r0, [r6], #4
   2e748:	ldr	r0, [r4, #228]	; 0xe4
   2e74c:	add	r1, r0, #4
   2e750:	add	r0, r0, r5
   2e754:	str	r1, [r4, #224]	; 0xe0
   2e758:	str	r0, [r4, #228]	; 0xe4
   2e75c:	mov	r7, r6
   2e760:	mov	r0, r7
   2e764:	sub	sp, fp, #16
   2e768:	pop	{r4, r5, r6, r7, fp, pc}
   2e76c:	push	{r4, r5, fp, lr}
   2e770:	add	fp, sp, #8
   2e774:	sub	sp, sp, #8
   2e778:	mov	r4, r2
   2e77c:	add	r2, r3, r2
   2e780:	add	r3, r0, r1, lsl #3
   2e784:	add	r5, r3, #52	; 0x34
   2e788:	ldr	r3, [r3, #56]	; 0x38
   2e78c:	cmp	r2, r3
   2e790:	bls	2e7b8 <flatcc_builder_enter_user_frame_ptr@@Base+0xc4>
   2e794:	ldr	r3, [fp, #8]
   2e798:	ldr	ip, [r0, #40]	; 0x28
   2e79c:	ldr	lr, [r0, #48]	; 0x30
   2e7a0:	str	r1, [sp]
   2e7a4:	mov	r0, ip
   2e7a8:	mov	r1, r5
   2e7ac:	blx	lr
   2e7b0:	cmp	r0, #0
   2e7b4:	bne	2e7c8 <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   2e7b8:	ldr	r0, [r5]
   2e7bc:	add	r0, r0, r4
   2e7c0:	sub	sp, fp, #8
   2e7c4:	pop	{r4, r5, fp, pc}
   2e7c8:	movw	r0, #24925	; 0x615d
   2e7cc:	movt	r0, #4
   2e7d0:	movw	r1, #61251	; 0xef43
   2e7d4:	movt	r1, #4
   2e7d8:	movw	r3, #65315	; 0xff23
   2e7dc:	movt	r3, #4
   2e7e0:	mov	r2, #308	; 0x134
   2e7e4:	bl	14950 <__assert_fail@plt>

0002e7e8 <flatcc_builder_enter_user_frame@@Base>:
   2e7e8:	push	{r4, r5, r6, r7, fp, lr}
   2e7ec:	add	fp, sp, #16
   2e7f0:	sub	sp, sp, #8
   2e7f4:	mov	r4, r0
   2e7f8:	ldr	r2, [r0, #228]	; 0xe4
   2e7fc:	mov	r6, #0
   2e800:	str	r6, [sp]
   2e804:	add	r0, r1, #7
   2e808:	bic	r5, r0, #3
   2e80c:	mov	r0, r4
   2e810:	mov	r1, #7
   2e814:	mov	r3, r5
   2e818:	bl	2e76c <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   2e81c:	cmp	r0, #0
   2e820:	beq	2e850 <flatcc_builder_enter_user_frame@@Base+0x68>
   2e824:	mov	r7, r0
   2e828:	mov	r1, #0
   2e82c:	mov	r2, r5
   2e830:	bl	148a8 <memset@plt>
   2e834:	ldr	r0, [r4, #224]	; 0xe0
   2e838:	str	r0, [r7]
   2e83c:	ldr	r0, [r4, #228]	; 0xe4
   2e840:	add	r6, r0, #4
   2e844:	add	r0, r0, r5
   2e848:	str	r6, [r4, #224]	; 0xe0
   2e84c:	str	r0, [r4, #228]	; 0xe4
   2e850:	mov	r0, r6
   2e854:	sub	sp, fp, #16
   2e858:	pop	{r4, r5, r6, r7, fp, pc}

0002e85c <flatcc_builder_exit_user_frame@@Base>:
   2e85c:	ldr	r1, [r0, #224]	; 0xe0
   2e860:	cmp	r1, #0
   2e864:	subne	r2, r1, #4
   2e868:	strne	r2, [r0, #228]	; 0xe4
   2e86c:	ldrne	r2, [r0, #108]	; 0x6c
   2e870:	addne	r1, r2, r1
   2e874:	ldrne	r1, [r1, #-4]
   2e878:	strne	r1, [r0, #224]	; 0xe0
   2e87c:	movne	r0, r1
   2e880:	bxne	lr
   2e884:	push	{fp, lr}
   2e888:	mov	fp, sp
   2e88c:	movw	r0, #61383	; 0xefc7
   2e890:	movt	r0, #4
   2e894:	movw	r1, #61251	; 0xef43
   2e898:	movt	r1, #4
   2e89c:	movw	r3, #61408	; 0xefe0
   2e8a0:	movt	r3, #4
   2e8a4:	movw	r2, #542	; 0x21e
   2e8a8:	bl	14950 <__assert_fail@plt>

0002e8ac <flatcc_builder_exit_user_frame_at@@Base>:
   2e8ac:	ldr	r2, [r0, #224]	; 0xe0
   2e8b0:	cmp	r2, r1
   2e8b4:	bcc	2e8c0 <flatcc_builder_exit_user_frame_at@@Base+0x14>
   2e8b8:	str	r1, [r0, #224]	; 0xe0
   2e8bc:	b	2e85c <flatcc_builder_exit_user_frame@@Base>
   2e8c0:	push	{fp, lr}
   2e8c4:	mov	fp, sp
   2e8c8:	movw	r0, #61466	; 0xf01a
   2e8cc:	movt	r0, #4
   2e8d0:	movw	r1, #61251	; 0xef43
   2e8d4:	movt	r1, #4
   2e8d8:	movw	r3, #61497	; 0xf039
   2e8dc:	movt	r3, #4
   2e8e0:	movw	r2, #551	; 0x227
   2e8e4:	bl	14950 <__assert_fail@plt>

0002e8e8 <flatcc_builder_get_current_user_frame@@Base>:
   2e8e8:	ldr	r0, [r0, #224]	; 0xe0
   2e8ec:	bx	lr

0002e8f0 <flatcc_builder_get_user_frame_ptr@@Base>:
   2e8f0:	ldr	r0, [r0, #108]	; 0x6c
   2e8f4:	add	r0, r0, r1
   2e8f8:	bx	lr

0002e8fc <flatcc_builder_embed_buffer@@Base>:
   2e8fc:	push	{r4, r5, r6, r7, fp, lr}
   2e900:	add	fp, sp, #16
   2e904:	sub	sp, sp, #80	; 0x50
   2e908:	mov	r5, r3
   2e90c:	mov	r6, r2
   2e910:	mov	r2, r1
   2e914:	mov	r4, r0
   2e918:	ldr	r0, [fp, #8]
   2e91c:	strh	r0, [fp, #-18]	; 0xffffffee
   2e920:	ldr	r3, [r4, #152]	; 0x98
   2e924:	cmp	r3, #0
   2e928:	movwne	r3, #1
   2e92c:	sub	r1, fp, #18
   2e930:	mov	r0, r4
   2e934:	bl	2ea08 <flatcc_builder_embed_buffer@@Base+0x10c>
   2e938:	ldr	r0, [fp, #12]
   2e93c:	and	r0, r0, #2
   2e940:	add	r1, r5, r0, lsl #1
   2e944:	ldrh	r2, [fp, #-18]	; 0xffffffee
   2e948:	mov	r0, r4
   2e94c:	bl	2eac4 <flatcc_builder_embed_buffer@@Base+0x1c8>
   2e950:	mov	r7, r0
   2e954:	add	r0, r0, r5
   2e958:	bl	2ead8 <flatcc_builder_embed_buffer@@Base+0x1dc>
   2e95c:	mov	r1, #0
   2e960:	str	r1, [sp]
   2e964:	str	r0, [fp, #-24]	; 0xffffffe8
   2e968:	str	r1, [sp, #4]
   2e96c:	ldr	r0, [r4, #152]	; 0x98
   2e970:	cmp	r0, #0
   2e974:	beq	2e994 <flatcc_builder_embed_buffer@@Base+0x98>
   2e978:	sub	r0, fp, #24
   2e97c:	str	r0, [sp, #8]
   2e980:	mov	r0, #4
   2e984:	str	r0, [sp]
   2e988:	str	r0, [sp, #12]
   2e98c:	mov	r0, #1
   2e990:	str	r0, [sp, #4]
   2e994:	cmp	r5, #0
   2e998:	beq	2e9c0 <flatcc_builder_embed_buffer@@Base+0xc4>
   2e99c:	ldm	sp, {r0, r1}
   2e9a0:	add	r0, r0, r5
   2e9a4:	str	r0, [sp]
   2e9a8:	mov	r0, sp
   2e9ac:	add	r0, r0, r1, lsl #3
   2e9b0:	str	r6, [r0, #8]
   2e9b4:	str	r5, [r0, #12]
   2e9b8:	add	r0, r1, #1
   2e9bc:	str	r0, [sp, #4]
   2e9c0:	cmp	r7, #0
   2e9c4:	beq	2e9f4 <flatcc_builder_embed_buffer@@Base+0xf8>
   2e9c8:	ldm	sp, {r0, r1}
   2e9cc:	add	r0, r0, r7
   2e9d0:	str	r0, [sp]
   2e9d4:	mov	r0, sp
   2e9d8:	add	r0, r0, r1, lsl #3
   2e9dc:	movw	r2, #60721	; 0xed31
   2e9e0:	movt	r2, #4
   2e9e4:	str	r2, [r0, #8]
   2e9e8:	str	r7, [r0, #12]
   2e9ec:	add	r0, r1, #1
   2e9f0:	str	r0, [sp, #4]
   2e9f4:	mov	r1, sp
   2e9f8:	mov	r0, r4
   2e9fc:	bl	2eadc <flatcc_builder_embed_buffer@@Base+0x1e0>
   2ea00:	sub	sp, fp, #16
   2ea04:	pop	{r4, r5, r6, r7, fp, pc}
   2ea08:	push	{r4, r5, r6, r7, fp, lr}
   2ea0c:	add	fp, sp, #16
   2ea10:	sub	sp, sp, #72	; 0x48
   2ea14:	mov	r6, r3
   2ea18:	mov	r5, r2
   2ea1c:	mov	r7, r1
   2ea20:	mov	r4, r0
   2ea24:	cmp	r2, #0
   2ea28:	bne	2ea38 <flatcc_builder_embed_buffer@@Base+0x13c>
   2ea2c:	ldrh	r5, [r4, #132]	; 0x84
   2ea30:	cmp	r5, #0
   2ea34:	movweq	r5, #1
   2ea38:	mov	r0, r7
   2ea3c:	mov	r1, #4
   2ea40:	bl	2f8b0 <flatcc_builder_start_vector@@Base+0x80>
   2ea44:	mov	r0, r7
   2ea48:	mov	r1, r5
   2ea4c:	bl	2f8b0 <flatcc_builder_start_vector@@Base+0x80>
   2ea50:	cmp	r6, #0
   2ea54:	bne	2ea9c <flatcc_builder_embed_buffer@@Base+0x1a0>
   2ea58:	mov	r0, r4
   2ea5c:	mov	r1, r5
   2ea60:	bl	315ac <flatcc_builder_get_emit_context@@Base+0x8>
   2ea64:	cmp	r0, #0
   2ea68:	beq	2ea9c <flatcc_builder_embed_buffer@@Base+0x1a0>
   2ea6c:	movw	r1, #60721	; 0xed31
   2ea70:	movt	r1, #4
   2ea74:	str	r1, [sp, #8]
   2ea78:	str	r0, [sp]
   2ea7c:	str	r0, [sp, #12]
   2ea80:	mov	r0, #1
   2ea84:	str	r0, [sp, #4]
   2ea88:	mov	r1, sp
   2ea8c:	mov	r0, r4
   2ea90:	bl	2fc3c <flatcc_builder_create_vtable@@Base+0x80>
   2ea94:	cmp	r0, #0
   2ea98:	beq	2eaa4 <flatcc_builder_embed_buffer@@Base+0x1a8>
   2ea9c:	sub	sp, fp, #16
   2eaa0:	pop	{r4, r5, r6, r7, fp, pc}
   2eaa4:	movw	r0, #24925	; 0x615d
   2eaa8:	movt	r0, #4
   2eaac:	movw	r1, #61251	; 0xef43
   2eab0:	movt	r1, #4
   2eab4:	movw	r3, #65382	; 0xff66
   2eab8:	movt	r3, #4
   2eabc:	movw	r2, #702	; 0x2be
   2eac0:	bl	14950 <__assert_fail@plt>
   2eac4:	ldr	r0, [r0, #136]	; 0x88
   2eac8:	sub	r0, r0, r1
   2eacc:	sub	r1, r2, #1
   2ead0:	and	r0, r0, r1
   2ead4:	bx	lr
   2ead8:	bx	lr
   2eadc:	push	{r4, r5, fp, lr}
   2eae0:	add	fp, sp, #8
   2eae4:	sub	sp, sp, #8
   2eae8:	ldr	r3, [r1]
   2eaec:	cmp	r3, #0
   2eaf0:	ble	2eb50 <flatcc_builder_embed_buffer@@Base+0x254>
   2eaf4:	mov	r4, r0
   2eaf8:	ldr	r0, [r0, #136]	; 0x88
   2eafc:	sub	r5, r0, r3
   2eb00:	ldr	r2, [r1, #4]
   2eb04:	ldr	r0, [r4, #36]	; 0x24
   2eb08:	ldr	ip, [r4, #44]	; 0x2c
   2eb0c:	str	r3, [sp]
   2eb10:	add	r1, r1, #8
   2eb14:	mov	r3, r5
   2eb18:	blx	ip
   2eb1c:	cmp	r0, #0
   2eb20:	streq	r5, [r4, #136]	; 0x88
   2eb24:	moveq	r0, r5
   2eb28:	subeq	sp, fp, #8
   2eb2c:	popeq	{r4, r5, fp, pc}
   2eb30:	movw	r0, #24925	; 0x615d
   2eb34:	movt	r0, #4
   2eb38:	movw	r1, #61251	; 0xef43
   2eb3c:	movt	r1, #4
   2eb40:	movw	r3, #65448	; 0xffa8
   2eb44:	movt	r3, #4
   2eb48:	movw	r2, #651	; 0x28b
   2eb4c:	bl	14950 <__assert_fail@plt>
   2eb50:	movw	r0, #24925	; 0x615d
   2eb54:	movt	r0, #4
   2eb58:	movw	r1, #61251	; 0xef43
   2eb5c:	movt	r1, #4
   2eb60:	movw	r3, #65448	; 0xffa8
   2eb64:	movt	r3, #4
   2eb68:	movw	r2, #647	; 0x287
   2eb6c:	bl	14950 <__assert_fail@plt>

0002eb70 <flatcc_builder_create_buffer@@Base>:
   2eb70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2eb74:	add	fp, sp, #28
   2eb78:	sub	sp, sp, #92	; 0x5c
   2eb7c:	mov	r6, r3
   2eb80:	mov	r7, r1
   2eb84:	mov	r4, r0
   2eb88:	ldr	r0, [fp, #8]
   2eb8c:	strh	r0, [fp, #-30]	; 0xffffffe2
   2eb90:	mov	r0, #0
   2eb94:	str	r0, [sp, #4]
   2eb98:	ldr	sl, [fp, #12]
   2eb9c:	and	r9, sl, #1
   2eba0:	sub	r1, fp, #30
   2eba4:	mov	r0, r4
   2eba8:	mov	r3, r9
   2ebac:	bl	2ea08 <flatcc_builder_embed_buffer@@Base+0x10c>
   2ebb0:	ldrh	r5, [fp, #-30]	; 0xffffffe2
   2ebb4:	mov	r0, r4
   2ebb8:	mov	r1, r5
   2ebbc:	bl	2ed40 <flatcc_builder_create_buffer@@Base+0x1d0>
   2ebc0:	cmp	r7, #0
   2ebc4:	str	r6, [sp]
   2ebc8:	beq	2ebe4 <flatcc_builder_create_buffer@@Base+0x74>
   2ebcc:	ldr	r7, [r7]
   2ebd0:	mov	r0, r7
   2ebd4:	bl	2ed50 <flatcc_builder_create_buffer@@Base+0x1e0>
   2ebd8:	bl	2ead8 <flatcc_builder_embed_buffer@@Base+0x1dc>
   2ebdc:	str	r7, [sp, #4]
   2ebe0:	b	2ebe8 <flatcc_builder_create_buffer@@Base+0x78>
   2ebe4:	ldr	r7, [sp, #4]
   2ebe8:	mov	r8, #4
   2ebec:	and	r0, r8, sl, lsl #1
   2ebf0:	cmp	r7, #0
   2ebf4:	mov	r6, r7
   2ebf8:	movwne	r6, #1
   2ebfc:	add	r0, r0, r6, lsl #2
   2ec00:	add	r1, r0, #4
   2ec04:	mov	r0, r4
   2ec08:	mov	r2, r5
   2ec0c:	bl	2eac4 <flatcc_builder_embed_buffer@@Base+0x1c8>
   2ec10:	mov	r1, #0
   2ec14:	str	r1, [sp, #8]
   2ec18:	str	r1, [sp, #12]
   2ec1c:	ands	ip, sl, #3
   2ec20:	beq	2ec3c <flatcc_builder_create_buffer@@Base+0xcc>
   2ec24:	sub	r1, fp, #40	; 0x28
   2ec28:	str	r1, [sp, #16]
   2ec2c:	str	r8, [sp, #8]
   2ec30:	str	r8, [sp, #20]
   2ec34:	mov	r1, #1
   2ec38:	str	r1, [sp, #12]
   2ec3c:	ldr	r1, [sp, #8]
   2ec40:	ldr	r3, [sp, #12]
   2ec44:	add	r5, r1, #4
   2ec48:	str	r5, [sp, #8]
   2ec4c:	add	lr, sp, #8
   2ec50:	add	r1, lr, r3, lsl #3
   2ec54:	sub	r2, fp, #36	; 0x24
   2ec58:	str	r2, [r1, #8]
   2ec5c:	str	r8, [r1, #12]
   2ec60:	add	r1, r3, #1
   2ec64:	str	r1, [sp, #12]
   2ec68:	cmp	r7, #0
   2ec6c:	beq	2ec94 <flatcc_builder_create_buffer@@Base+0x124>
   2ec70:	lsl	r2, r6, #2
   2ec74:	add	r5, r5, r2
   2ec78:	str	r5, [sp, #8]
   2ec7c:	add	r1, lr, r1, lsl #3
   2ec80:	add	r5, sp, #4
   2ec84:	str	r5, [r1, #8]
   2ec88:	str	r2, [r1, #12]
   2ec8c:	add	r1, r3, #2
   2ec90:	str	r1, [sp, #12]
   2ec94:	cmp	r0, #0
   2ec98:	beq	2ecc8 <flatcc_builder_create_buffer@@Base+0x158>
   2ec9c:	ldr	r1, [sp, #8]
   2eca0:	ldr	r2, [sp, #12]
   2eca4:	add	r1, r1, r0
   2eca8:	str	r1, [sp, #8]
   2ecac:	add	r1, lr, r2, lsl #3
   2ecb0:	movw	r3, #60721	; 0xed31
   2ecb4:	movt	r3, #4
   2ecb8:	str	r3, [r1, #8]
   2ecbc:	str	r0, [r1, #12]
   2ecc0:	add	r0, r2, #1
   2ecc4:	str	r0, [sp, #12]
   2ecc8:	ldr	r0, [r4, #136]	; 0x88
   2eccc:	ldr	r1, [sp, #8]
   2ecd0:	sub	r5, r0, r1
   2ecd4:	cmp	ip, #0
   2ecd8:	addne	r5, r5, #4
   2ecdc:	mov	r0, #144	; 0x90
   2ece0:	cmp	r9, #0
   2ece4:	movweq	r0, #140	; 0x8c
   2ece8:	ldr	r0, [r4, r0]
   2ecec:	sub	r0, r0, r5
   2ecf0:	bl	2ead8 <flatcc_builder_embed_buffer@@Base+0x1dc>
   2ecf4:	str	r0, [fp, #-40]	; 0xffffffd8
   2ecf8:	ldr	r0, [sp]
   2ecfc:	sub	r0, r0, r5
   2ed00:	bl	2ead8 <flatcc_builder_embed_buffer@@Base+0x1dc>
   2ed04:	str	r0, [fp, #-36]	; 0xffffffdc
   2ed08:	add	r1, sp, #8
   2ed0c:	mov	r0, r4
   2ed10:	bl	2eadc <flatcc_builder_embed_buffer@@Base+0x1e0>
   2ed14:	cmp	r0, #0
   2ed18:	subne	sp, fp, #28
   2ed1c:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ed20:	movw	r0, #24925	; 0x615d
   2ed24:	movt	r0, #4
   2ed28:	movw	r1, #61251	; 0xef43
   2ed2c:	movt	r1, #4
   2ed30:	movw	r3, #61566	; 0xf07e
   2ed34:	movt	r3, #4
   2ed38:	mov	r2, #772	; 0x304
   2ed3c:	bl	14950 <__assert_fail@plt>
   2ed40:	ldrh	r2, [r0, #128]	; 0x80
   2ed44:	cmp	r2, r1
   2ed48:	strhcc	r1, [r0, #128]	; 0x80
   2ed4c:	bx	lr
   2ed50:	bx	lr

0002ed54 <flatcc_builder_create_struct@@Base>:
   2ed54:	push	{r4, r5, r6, r7, fp, lr}
   2ed58:	add	fp, sp, #16
   2ed5c:	sub	sp, sp, #72	; 0x48
   2ed60:	cmp	r3, #0
   2ed64:	beq	2edfc <flatcc_builder_create_struct@@Base+0xa8>
   2ed68:	mov	r7, r3
   2ed6c:	mov	r5, r2
   2ed70:	mov	r6, r1
   2ed74:	mov	r4, r0
   2ed78:	mov	r1, r3
   2ed7c:	bl	2ed40 <flatcc_builder_create_buffer@@Base+0x1d0>
   2ed80:	mov	r0, r4
   2ed84:	mov	r1, r5
   2ed88:	mov	r2, r7
   2ed8c:	bl	2eac4 <flatcc_builder_embed_buffer@@Base+0x1c8>
   2ed90:	mov	r1, #0
   2ed94:	str	r1, [sp]
   2ed98:	str	r1, [sp, #4]
   2ed9c:	cmp	r5, #0
   2eda0:	strne	r6, [sp, #8]
   2eda4:	strne	r5, [sp]
   2eda8:	strne	r5, [sp, #12]
   2edac:	movne	r1, #1
   2edb0:	strne	r1, [sp, #4]
   2edb4:	cmp	r0, #0
   2edb8:	beq	2ede8 <flatcc_builder_create_struct@@Base+0x94>
   2edbc:	ldm	sp, {r1, r2}
   2edc0:	add	r1, r1, r0
   2edc4:	str	r1, [sp]
   2edc8:	mov	r1, sp
   2edcc:	add	r1, r1, r2, lsl #3
   2edd0:	movw	r3, #60721	; 0xed31
   2edd4:	movt	r3, #4
   2edd8:	str	r3, [r1, #8]
   2eddc:	str	r0, [r1, #12]
   2ede0:	add	r0, r2, #1
   2ede4:	str	r0, [sp, #4]
   2ede8:	mov	r1, sp
   2edec:	mov	r0, r4
   2edf0:	bl	2eadc <flatcc_builder_embed_buffer@@Base+0x1e0>
   2edf4:	sub	sp, fp, #16
   2edf8:	pop	{r4, r5, r6, r7, fp, pc}
   2edfc:	movw	r0, #61697	; 0xf101
   2ee00:	movt	r0, #4
   2ee04:	movw	r1, #61251	; 0xef43
   2ee08:	movt	r1, #4
   2ee0c:	movw	r3, #61708	; 0xf10c
   2ee10:	movt	r3, #4
   2ee14:	movw	r2, #783	; 0x30f
   2ee18:	bl	14950 <__assert_fail@plt>

0002ee1c <flatcc_builder_start_buffer@@Base>:
   2ee1c:	push	{r4, r5, r6, r7, fp, lr}
   2ee20:	add	fp, sp, #16
   2ee24:	mov	r6, r3
   2ee28:	mov	r7, r2
   2ee2c:	mov	r5, r1
   2ee30:	mov	r4, r0
   2ee34:	ldrh	r1, [r0, #128]	; 0x80
   2ee38:	bl	2eed8 <flatcc_builder_start_buffer@@Base+0xbc>
   2ee3c:	mov	r1, r0
   2ee40:	mvn	r0, #0
   2ee44:	cmp	r1, #0
   2ee48:	popne	{r4, r5, r6, r7, fp, pc}
   2ee4c:	mov	r0, #1
   2ee50:	strh	r0, [r4, #128]	; 0x80
   2ee54:	ldrh	r1, [r4, #132]	; 0x84
   2ee58:	ldr	r2, [r4, #32]
   2ee5c:	strh	r1, [r2, #34]	; 0x22
   2ee60:	strh	r7, [r4, #132]	; 0x84
   2ee64:	ldrh	r1, [r4, #164]	; 0xa4
   2ee68:	ldr	r2, [r4, #32]
   2ee6c:	strh	r1, [r2, #32]
   2ee70:	strh	r6, [r4, #164]	; 0xa4
   2ee74:	ldr	r1, [r4, #32]
   2ee78:	ldr	r2, [r4, #144]	; 0x90
   2ee7c:	str	r2, [r1, #20]
   2ee80:	ldr	r1, [r4, #32]
   2ee84:	ldr	r2, [r4, #152]	; 0x98
   2ee88:	str	r2, [r1, #28]
   2ee8c:	ldr	r1, [r4, #32]
   2ee90:	ldr	r2, [r4, #136]	; 0x88
   2ee94:	ldr	r3, [r4, #148]	; 0x94
   2ee98:	ldr	r7, [r4, #168]	; 0xa8
   2ee9c:	add	r6, r3, #1
   2eea0:	str	r2, [r4, #144]	; 0x90
   2eea4:	str	r6, [r4, #148]	; 0x94
   2eea8:	str	r3, [r4, #152]	; 0x98
   2eeac:	str	r7, [r1, #16]
   2eeb0:	movw	r1, #60721	; 0xed31
   2eeb4:	movt	r1, #4
   2eeb8:	cmp	r5, #0
   2eebc:	movne	r1, r5
   2eec0:	ldr	r1, [r1]
   2eec4:	str	r1, [r4, #168]	; 0xa8
   2eec8:	ldr	r1, [r4, #32]
   2eecc:	strh	r0, [r1, #14]
   2eed0:	mov	r0, #0
   2eed4:	pop	{r4, r5, r6, r7, fp, pc}
   2eed8:	push	{r4, r5, r6, sl, fp, lr}
   2eedc:	add	fp, sp, #16
   2eee0:	sub	sp, sp, #8
   2eee4:	mov	r5, r1
   2eee8:	mov	r4, r0
   2eeec:	ldr	r1, [r0, #156]	; 0x9c
   2eef0:	ldr	r2, [r0, #160]	; 0xa0
   2eef4:	add	r0, r1, #1
   2eef8:	str	r0, [r4, #156]	; 0x9c
   2eefc:	cmp	r1, r2
   2ef00:	bge	2ef14 <flatcc_builder_start_buffer@@Base+0xf8>
   2ef04:	ldr	r0, [r4, #32]
   2ef08:	add	r0, r0, #36	; 0x24
   2ef0c:	str	r0, [r4, #32]
   2ef10:	b	2ef88 <flatcc_builder_start_buffer@@Base+0x16c>
   2ef14:	ldr	r2, [r4, #176]	; 0xb0
   2ef18:	mvn	r6, #0
   2ef1c:	cmp	r2, #1
   2ef20:	cmpge	r1, r2
   2ef24:	bge	2efc4 <flatcc_builder_start_buffer@@Base+0x1a8>
   2ef28:	mov	r1, #0
   2ef2c:	str	r1, [sp]
   2ef30:	add	r0, r0, r0, lsl #3
   2ef34:	mvn	r1, #35	; 0x23
   2ef38:	add	r2, r1, r0, lsl #2
   2ef3c:	mov	r0, r4
   2ef40:	mov	r1, #4
   2ef44:	mov	r3, #36	; 0x24
   2ef48:	bl	2e76c <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   2ef4c:	str	r0, [r4, #32]
   2ef50:	cmp	r0, #0
   2ef54:	beq	2efc4 <flatcc_builder_start_buffer@@Base+0x1a8>
   2ef58:	ldr	r0, [r4, #88]	; 0x58
   2ef5c:	ldr	r1, [r4, #176]	; 0xb0
   2ef60:	movw	r2, #36409	; 0x8e39
   2ef64:	movt	r2, #14563	; 0x38e3
   2ef68:	umull	r0, r2, r0, r2
   2ef6c:	lsr	r0, r2, #3
   2ef70:	cmp	r1, r2, lsr #3
   2ef74:	mov	r2, r0
   2ef78:	movlt	r2, r1
   2ef7c:	cmp	r1, #0
   2ef80:	movle	r2, r0
   2ef84:	str	r2, [r4, #160]	; 0xa0
   2ef88:	ldr	r0, [r4, #20]
   2ef8c:	ldr	r1, [r4, #32]
   2ef90:	str	r0, [r1, #8]
   2ef94:	ldrh	r2, [r4, #130]	; 0x82
   2ef98:	strh	r2, [r1, #12]
   2ef9c:	strh	r5, [r4, #130]	; 0x82
   2efa0:	ldr	r2, [r4, #28]
   2efa4:	mvn	r3, #3
   2efa8:	stm	r1, {r2, r3}
   2efac:	mov	r6, #0
   2efb0:	str	r6, [r4, #20]
   2efb4:	add	r0, r0, r2
   2efb8:	add	r0, r0, #7
   2efbc:	bic	r0, r0, #7
   2efc0:	str	r0, [r4, #28]
   2efc4:	mov	r0, r6
   2efc8:	sub	sp, fp, #16
   2efcc:	pop	{r4, r5, r6, sl, fp, pc}

0002efd0 <flatcc_builder_end_buffer@@Base>:
   2efd0:	push	{r4, r5, r6, r7, fp, lr}
   2efd4:	add	fp, sp, #16
   2efd8:	sub	sp, sp, #8
   2efdc:	mov	r4, r0
   2efe0:	ldr	r0, [r0, #32]
   2efe4:	ldrh	r0, [r0, #14]
   2efe8:	cmp	r0, #1
   2efec:	bne	2f078 <flatcc_builder_end_buffer@@Base+0xa8>
   2eff0:	mov	r5, r1
   2eff4:	ldr	r6, [r4, #152]	; 0x98
   2eff8:	ldrh	r7, [r4, #164]	; 0xa4
   2effc:	ldrh	r1, [r4, #132]	; 0x84
   2f000:	mov	r0, r4
   2f004:	bl	2ed40 <flatcc_builder_create_buffer@@Base+0x1d0>
   2f008:	and	r0, r7, #2
   2f00c:	cmp	r6, #0
   2f010:	orrne	r0, r0, #1
   2f014:	ldrh	r2, [r4, #132]	; 0x84
   2f018:	ldrh	r1, [r4, #128]	; 0x80
   2f01c:	str	r1, [sp]
   2f020:	str	r0, [sp, #4]
   2f024:	add	r1, r4, #168	; 0xa8
   2f028:	mov	r0, r4
   2f02c:	mov	r3, r5
   2f030:	bl	2eb70 <flatcc_builder_create_buffer@@Base>
   2f034:	mov	r5, r0
   2f038:	cmp	r0, #0
   2f03c:	beq	2f06c <flatcc_builder_end_buffer@@Base+0x9c>
   2f040:	ldr	r0, [r4, #32]
   2f044:	ldr	r1, [r0, #20]
   2f048:	str	r1, [r4, #144]	; 0x90
   2f04c:	ldr	r1, [r0, #28]
   2f050:	str	r1, [r4, #152]	; 0x98
   2f054:	ldr	r1, [r0, #16]
   2f058:	str	r1, [r4, #168]	; 0xa8
   2f05c:	ldrh	r0, [r0, #32]
   2f060:	strh	r0, [r4, #164]	; 0xa4
   2f064:	mov	r0, r4
   2f068:	bl	2f098 <flatcc_builder_end_buffer@@Base+0xc8>
   2f06c:	mov	r0, r5
   2f070:	sub	sp, fp, #16
   2f074:	pop	{r4, r5, r6, r7, fp, pc}
   2f078:	movw	r0, #61810	; 0xf172
   2f07c:	movt	r0, #4
   2f080:	movw	r1, #61251	; 0xef43
   2f084:	movt	r1, #4
   2f088:	movw	r3, #61854	; 0xf19e
   2f08c:	movt	r3, #4
   2f090:	movw	r2, #838	; 0x346
   2f094:	bl	14950 <__assert_fail@plt>
   2f098:	push	{r4, sl, fp, lr}
   2f09c:	add	fp, sp, #8
   2f0a0:	mov	r4, r0
   2f0a4:	ldr	r0, [r0, #16]
   2f0a8:	ldr	r2, [r4, #20]
   2f0ac:	mov	r1, #0
   2f0b0:	bl	148a8 <memset@plt>
   2f0b4:	ldr	r0, [r4, #32]
   2f0b8:	ldr	r1, [r0, #8]
   2f0bc:	str	r1, [r4, #20]
   2f0c0:	ldr	r1, [r0]
   2f0c4:	str	r1, [r4, #28]
   2f0c8:	ldr	r1, [r0, #4]
   2f0cc:	mov	r0, r4
   2f0d0:	bl	2f150 <flatcc_builder_start_struct@@Base+0x4c>
   2f0d4:	ldrh	r1, [r4, #130]	; 0x82
   2f0d8:	mov	r0, r4
   2f0dc:	bl	2ed40 <flatcc_builder_create_buffer@@Base+0x1d0>
   2f0e0:	ldr	r0, [r4, #32]
   2f0e4:	ldr	r1, [r4, #156]	; 0x9c
   2f0e8:	ldrh	r2, [r0, #12]
   2f0ec:	sub	r0, r0, #36	; 0x24
   2f0f0:	str	r0, [r4, #32]
   2f0f4:	sub	r0, r1, #1
   2f0f8:	str	r0, [r4, #156]	; 0x9c
   2f0fc:	strh	r2, [r4, #130]	; 0x82
   2f100:	pop	{r4, sl, fp, pc}

0002f104 <flatcc_builder_start_struct@@Base>:
   2f104:	push	{r4, r5, fp, lr}
   2f108:	add	fp, sp, #8
   2f10c:	mov	r4, r1
   2f110:	mov	r5, r0
   2f114:	mov	r1, r2
   2f118:	bl	2eed8 <flatcc_builder_start_buffer@@Base+0xbc>
   2f11c:	cmp	r0, #0
   2f120:	movne	r0, #0
   2f124:	popne	{r4, r5, fp, pc}
   2f128:	ldr	r0, [r5, #32]
   2f12c:	mov	r1, #2
   2f130:	strh	r1, [r0, #14]
   2f134:	mov	r0, r5
   2f138:	mvn	r1, #3
   2f13c:	bl	2f150 <flatcc_builder_start_struct@@Base+0x4c>
   2f140:	mov	r0, r5
   2f144:	mov	r1, r4
   2f148:	pop	{r4, r5, fp, lr}
   2f14c:	b	2f188 <flatcc_builder_start_struct@@Base+0x84>
   2f150:	push	{fp, lr}
   2f154:	mov	fp, sp
   2f158:	ldr	r2, [r0, #28]
   2f15c:	ldr	ip, [r0, #32]
   2f160:	ldr	r3, [r0, #60]	; 0x3c
   2f164:	ldr	lr, [r0, #64]	; 0x40
   2f168:	add	r3, r3, r2
   2f16c:	str	r3, [r0, #16]
   2f170:	sub	r2, lr, r2
   2f174:	cmp	r2, r1
   2f178:	movhi	r2, r1
   2f17c:	str	r2, [r0, #24]
   2f180:	str	r1, [ip, #4]
   2f184:	pop	{fp, pc}
   2f188:	push	{r4, r5, fp, lr}
   2f18c:	add	fp, sp, #8
   2f190:	mov	r4, r0
   2f194:	ldr	r5, [r0, #20]
   2f198:	ldr	r2, [r0, #24]
   2f19c:	add	r0, r5, r1
   2f1a0:	str	r0, [r4, #20]
   2f1a4:	cmp	r0, r2
   2f1a8:	bcc	2f1cc <flatcc_builder_start_struct@@Base+0xc8>
   2f1ac:	add	r1, r0, #1
   2f1b0:	mov	r0, r4
   2f1b4:	mvn	r2, #3
   2f1b8:	bl	315bc <flatcc_builder_get_emit_context@@Base+0x18>
   2f1bc:	mov	r1, r0
   2f1c0:	mov	r0, #0
   2f1c4:	cmp	r1, #0
   2f1c8:	popne	{r4, r5, fp, pc}
   2f1cc:	ldr	r0, [r4, #16]
   2f1d0:	add	r0, r0, r5
   2f1d4:	pop	{r4, r5, fp, pc}

0002f1d8 <flatcc_builder_struct_edit@@Base>:
   2f1d8:	ldr	r0, [r0, #16]
   2f1dc:	bx	lr

0002f1e0 <flatcc_builder_end_struct@@Base>:
   2f1e0:	push	{r4, r5, fp, lr}
   2f1e4:	add	fp, sp, #8
   2f1e8:	mov	r4, r0
   2f1ec:	ldr	r0, [r0, #32]
   2f1f0:	ldrh	r0, [r0, #14]
   2f1f4:	cmp	r0, #2
   2f1f8:	bne	2f228 <flatcc_builder_end_struct@@Base+0x48>
   2f1fc:	ldrh	r3, [r4, #130]	; 0x82
   2f200:	ldr	r1, [r4, #16]
   2f204:	ldr	r2, [r4, #20]
   2f208:	mov	r0, r4
   2f20c:	bl	2ed54 <flatcc_builder_create_struct@@Base>
   2f210:	mov	r5, r0
   2f214:	cmp	r0, #0
   2f218:	movne	r0, r4
   2f21c:	blne	2f098 <flatcc_builder_end_buffer@@Base+0xc8>
   2f220:	mov	r0, r5
   2f224:	pop	{r4, r5, fp, pc}
   2f228:	movw	r0, #61943	; 0xf1f7
   2f22c:	movt	r0, #4
   2f230:	movw	r1, #61251	; 0xef43
   2f234:	movt	r1, #4
   2f238:	movw	r3, #61987	; 0xf223
   2f23c:	movt	r3, #4
   2f240:	mov	r2, #872	; 0x368
   2f244:	bl	14950 <__assert_fail@plt>

0002f248 <flatcc_builder_extend_vector@@Base>:
   2f248:	push	{r4, r5, fp, lr}
   2f24c:	add	fp, sp, #8
   2f250:	mov	r5, r1
   2f254:	mov	r4, r0
   2f258:	ldr	r0, [r0, #32]
   2f25c:	ldr	r2, [r0, #24]
   2f260:	mov	r0, r4
   2f264:	bl	2f28c <flatcc_builder_extend_vector@@Base+0x44>
   2f268:	cmp	r0, #0
   2f26c:	movne	r0, #0
   2f270:	popne	{r4, r5, fp, pc}
   2f274:	ldr	r0, [r4, #32]
   2f278:	ldr	r0, [r0, #16]
   2f27c:	mul	r1, r0, r5
   2f280:	mov	r0, r4
   2f284:	pop	{r4, r5, fp, lr}
   2f288:	b	2f188 <flatcc_builder_start_struct@@Base+0x84>
   2f28c:	ldr	r0, [r0, #32]
   2f290:	ldr	r3, [r0, #20]
   2f294:	adds	r1, r3, r1
   2f298:	bcs	2f2ac <flatcc_builder_extend_vector@@Base+0x64>
   2f29c:	cmp	r1, r2
   2f2a0:	strls	r1, [r0, #20]
   2f2a4:	movls	r0, #0
   2f2a8:	bxls	lr
   2f2ac:	push	{fp, lr}
   2f2b0:	mov	fp, sp
   2f2b4:	movw	r0, #65522	; 0xfff2
   2f2b8:	movt	r0, #4
   2f2bc:	movw	r1, #61251	; 0xef43
   2f2c0:	movt	r1, #4
   2f2c4:	movw	r3, #13
   2f2c8:	movt	r3, #5
   2f2cc:	mov	r2, #892	; 0x37c
   2f2d0:	bl	14950 <__assert_fail@plt>

0002f2d4 <flatcc_builder_vector_push@@Base>:
   2f2d4:	push	{fp, lr}
   2f2d8:	mov	fp, sp
   2f2dc:	ldr	r2, [r0, #32]
   2f2e0:	ldrh	r3, [r2, #14]
   2f2e4:	cmp	r3, #4
   2f2e8:	bne	2f314 <flatcc_builder_vector_push@@Base+0x40>
   2f2ec:	ldr	ip, [r2, #20]
   2f2f0:	ldr	r3, [r2, #24]
   2f2f4:	cmp	ip, r3
   2f2f8:	bhi	2f334 <flatcc_builder_vector_push@@Base+0x60>
   2f2fc:	add	r3, ip, #1
   2f300:	str	r3, [r2, #20]
   2f304:	ldr	r2, [r0, #32]
   2f308:	ldr	r2, [r2, #16]
   2f30c:	pop	{fp, lr}
   2f310:	b	2f354 <flatcc_builder_vector_push@@Base+0x80>
   2f314:	movw	r0, #62054	; 0xf266
   2f318:	movt	r0, #4
   2f31c:	movw	r1, #61251	; 0xef43
   2f320:	movt	r1, #4
   2f324:	movw	r3, #62098	; 0xf292
   2f328:	movt	r3, #4
   2f32c:	movw	r2, #907	; 0x38b
   2f330:	bl	14950 <__assert_fail@plt>
   2f334:	movw	r0, #62165	; 0xf2d5
   2f338:	movt	r0, #4
   2f33c:	movw	r1, #61251	; 0xef43
   2f340:	movt	r1, #4
   2f344:	movw	r3, #62098	; 0xf292
   2f348:	movt	r3, #4
   2f34c:	mov	r2, #908	; 0x38c
   2f350:	bl	14950 <__assert_fail@plt>
   2f354:	push	{r4, r5, r6, sl, fp, lr}
   2f358:	add	fp, sp, #16
   2f35c:	mov	r4, r2
   2f360:	mov	r5, r1
   2f364:	mov	r1, r2
   2f368:	bl	2f188 <flatcc_builder_start_struct@@Base+0x84>
   2f36c:	mov	r6, r0
   2f370:	cmp	r0, #0
   2f374:	beq	2f388 <flatcc_builder_vector_push@@Base+0xb4>
   2f378:	mov	r0, r6
   2f37c:	mov	r1, r5
   2f380:	mov	r2, r4
   2f384:	bl	147e8 <memcpy@plt>
   2f388:	mov	r0, r6
   2f38c:	pop	{r4, r5, r6, sl, fp, pc}

0002f390 <flatcc_builder_append_vector@@Base>:
   2f390:	push	{r4, r5, r6, sl, fp, lr}
   2f394:	add	fp, sp, #16
   2f398:	mov	r4, r1
   2f39c:	mov	r6, r0
   2f3a0:	ldr	r0, [r0, #32]
   2f3a4:	ldrh	r1, [r0, #14]
   2f3a8:	cmp	r1, #4
   2f3ac:	bne	2f3ec <flatcc_builder_append_vector@@Base+0x5c>
   2f3b0:	mov	r5, r2
   2f3b4:	ldr	r2, [r0, #24]
   2f3b8:	mov	r0, r6
   2f3bc:	mov	r1, r5
   2f3c0:	bl	2f28c <flatcc_builder_extend_vector@@Base+0x44>
   2f3c4:	cmp	r0, #0
   2f3c8:	movne	r0, #0
   2f3cc:	popne	{r4, r5, r6, sl, fp, pc}
   2f3d0:	ldr	r0, [r6, #32]
   2f3d4:	ldr	r0, [r0, #16]
   2f3d8:	mul	r2, r0, r5
   2f3dc:	mov	r0, r6
   2f3e0:	mov	r1, r4
   2f3e4:	pop	{r4, r5, r6, sl, fp, lr}
   2f3e8:	b	2f354 <flatcc_builder_vector_push@@Base+0x80>
   2f3ec:	movw	r0, #62054	; 0xf266
   2f3f0:	movt	r0, #4
   2f3f4:	movw	r1, #61251	; 0xef43
   2f3f8:	movt	r1, #4
   2f3fc:	movw	r3, #62226	; 0xf312
   2f400:	movt	r3, #4
   2f404:	movw	r2, #915	; 0x393
   2f408:	bl	14950 <__assert_fail@plt>

0002f40c <flatcc_builder_extend_offset_vector@@Base>:
   2f40c:	push	{r4, r5, fp, lr}
   2f410:	add	fp, sp, #8
   2f414:	mov	r5, r1
   2f418:	mov	r4, r0
   2f41c:	mvn	r2, #-1073741824	; 0xc0000000
   2f420:	bl	2f28c <flatcc_builder_extend_vector@@Base+0x44>
   2f424:	mov	r1, r0
   2f428:	mov	r0, #0
   2f42c:	cmp	r1, #0
   2f430:	popne	{r4, r5, fp, pc}
   2f434:	lsl	r1, r5, #2
   2f438:	mov	r0, r4
   2f43c:	bl	2f188 <flatcc_builder_start_struct@@Base+0x84>
   2f440:	pop	{r4, r5, fp, pc}

0002f444 <flatcc_builder_offset_vector_push@@Base>:
   2f444:	push	{r4, r5, fp, lr}
   2f448:	add	fp, sp, #8
   2f44c:	mov	r4, r1
   2f450:	ldr	r1, [r0, #32]
   2f454:	ldrh	r2, [r1, #14]
   2f458:	cmp	r2, #5
   2f45c:	bne	2f494 <flatcc_builder_offset_vector_push@@Base+0x50>
   2f460:	ldr	r2, [r1, #20]
   2f464:	mov	r5, #0
   2f468:	cmn	r2, #-1073741823	; 0xc0000001
   2f46c:	beq	2f48c <flatcc_builder_offset_vector_push@@Base+0x48>
   2f470:	add	r2, r2, #1
   2f474:	str	r2, [r1, #20]
   2f478:	mov	r1, #4
   2f47c:	bl	2f188 <flatcc_builder_start_struct@@Base+0x84>
   2f480:	cmp	r0, #0
   2f484:	strne	r4, [r0]
   2f488:	movne	r5, r0
   2f48c:	mov	r0, r5
   2f490:	pop	{r4, r5, fp, pc}
   2f494:	movw	r0, #62303	; 0xf35f
   2f498:	movt	r0, #4
   2f49c:	movw	r1, #61251	; 0xef43
   2f4a0:	movt	r1, #4
   2f4a4:	movw	r3, #62354	; 0xf392
   2f4a8:	movt	r3, #4
   2f4ac:	movw	r2, #934	; 0x3a6
   2f4b0:	bl	14950 <__assert_fail@plt>

0002f4b4 <flatcc_builder_append_offset_vector@@Base>:
   2f4b4:	push	{r4, r5, r6, sl, fp, lr}
   2f4b8:	add	fp, sp, #16
   2f4bc:	mov	r6, r0
   2f4c0:	ldr	r0, [r0, #32]
   2f4c4:	ldrh	r0, [r0, #14]
   2f4c8:	cmp	r0, #5
   2f4cc:	bne	2f50c <flatcc_builder_append_offset_vector@@Base+0x58>
   2f4d0:	mov	r5, r2
   2f4d4:	mov	r4, r1
   2f4d8:	mov	r0, r6
   2f4dc:	mov	r1, r2
   2f4e0:	mvn	r2, #-1073741824	; 0xc0000000
   2f4e4:	bl	2f28c <flatcc_builder_extend_vector@@Base+0x44>
   2f4e8:	mov	r1, r0
   2f4ec:	mov	r0, #0
   2f4f0:	cmp	r1, #0
   2f4f4:	popne	{r4, r5, r6, sl, fp, pc}
   2f4f8:	lsl	r2, r5, #2
   2f4fc:	mov	r0, r6
   2f500:	mov	r1, r4
   2f504:	bl	2f354 <flatcc_builder_vector_push@@Base+0x80>
   2f508:	pop	{r4, r5, r6, sl, fp, pc}
   2f50c:	movw	r0, #62303	; 0xf35f
   2f510:	movt	r0, #4
   2f514:	movw	r1, #61251	; 0xef43
   2f518:	movt	r1, #4
   2f51c:	movw	r3, #62452	; 0xf3f4
   2f520:	movt	r3, #4
   2f524:	mov	r2, #948	; 0x3b4
   2f528:	bl	14950 <__assert_fail@plt>

0002f52c <flatcc_builder_extend_string@@Base>:
   2f52c:	push	{r4, r5, fp, lr}
   2f530:	add	fp, sp, #8
   2f534:	mov	r5, r0
   2f538:	ldr	r0, [r0, #32]
   2f53c:	ldrh	r0, [r0, #14]
   2f540:	cmp	r0, #6
   2f544:	bne	2f574 <flatcc_builder_extend_string@@Base+0x48>
   2f548:	mov	r4, r1
   2f54c:	mov	r0, r5
   2f550:	mvn	r2, #0
   2f554:	bl	2f28c <flatcc_builder_extend_vector@@Base+0x44>
   2f558:	cmp	r0, #0
   2f55c:	movne	r0, #0
   2f560:	popne	{r4, r5, fp, pc}
   2f564:	mov	r0, r5
   2f568:	mov	r1, r4
   2f56c:	pop	{r4, r5, fp, lr}
   2f570:	b	2f188 <flatcc_builder_start_struct@@Base+0x84>
   2f574:	movw	r0, #62568	; 0xf468
   2f578:	movt	r0, #4
   2f57c:	movw	r1, #61251	; 0xef43
   2f580:	movt	r1, #4
   2f584:	movw	r3, #62612	; 0xf494
   2f588:	movt	r3, #4
   2f58c:	movw	r2, #957	; 0x3bd
   2f590:	bl	14950 <__assert_fail@plt>

0002f594 <flatcc_builder_append_string@@Base>:
   2f594:	push	{r4, r5, r6, sl, fp, lr}
   2f598:	add	fp, sp, #16
   2f59c:	mov	r6, r0
   2f5a0:	ldr	r0, [r0, #32]
   2f5a4:	ldrh	r0, [r0, #14]
   2f5a8:	cmp	r0, #6
   2f5ac:	bne	2f5e8 <flatcc_builder_append_string@@Base+0x54>
   2f5b0:	mov	r4, r2
   2f5b4:	mov	r5, r1
   2f5b8:	mov	r0, r6
   2f5bc:	mov	r1, r2
   2f5c0:	mvn	r2, #0
   2f5c4:	bl	2f28c <flatcc_builder_extend_vector@@Base+0x44>
   2f5c8:	cmp	r0, #0
   2f5cc:	movne	r0, #0
   2f5d0:	popne	{r4, r5, r6, sl, fp, pc}
   2f5d4:	mov	r0, r6
   2f5d8:	mov	r1, r5
   2f5dc:	mov	r2, r4
   2f5e0:	pop	{r4, r5, r6, sl, fp, lr}
   2f5e4:	b	2f354 <flatcc_builder_vector_push@@Base+0x80>
   2f5e8:	movw	r0, #62568	; 0xf468
   2f5ec:	movt	r0, #4
   2f5f0:	movw	r1, #61251	; 0xef43
   2f5f4:	movt	r1, #4
   2f5f8:	movw	r3, #62675	; 0xf4d3
   2f5fc:	movt	r3, #4
   2f600:	movw	r2, #966	; 0x3c6
   2f604:	bl	14950 <__assert_fail@plt>

0002f608 <flatcc_builder_append_string_str@@Base>:
   2f608:	push	{r4, r5, fp, lr}
   2f60c:	add	fp, sp, #8
   2f610:	mov	r4, r1
   2f614:	mov	r5, r0
   2f618:	mov	r0, r1
   2f61c:	bl	14884 <strlen@plt>
   2f620:	mov	r2, r0
   2f624:	mov	r0, r5
   2f628:	mov	r1, r4
   2f62c:	pop	{r4, r5, fp, lr}
   2f630:	b	2f594 <flatcc_builder_append_string@@Base>

0002f634 <flatcc_builder_append_string_strn@@Base>:
   2f634:	push	{r4, r5, fp, lr}
   2f638:	add	fp, sp, #8
   2f63c:	mov	r4, r1
   2f640:	mov	r5, r0
   2f644:	mov	r0, r1
   2f648:	mov	r1, r2
   2f64c:	bl	2f664 <flatcc_builder_append_string_strn@@Base+0x30>
   2f650:	mov	r2, r0
   2f654:	mov	r0, r5
   2f658:	mov	r1, r4
   2f65c:	pop	{r4, r5, fp, lr}
   2f660:	b	2f594 <flatcc_builder_append_string@@Base>
   2f664:	push	{r4, r5, fp, lr}
   2f668:	add	fp, sp, #8
   2f66c:	mov	r4, r1
   2f670:	mov	r5, r0
   2f674:	mov	r1, #0
   2f678:	mov	r2, r4
   2f67c:	bl	148cc <memchr@plt>
   2f680:	cmp	r0, #0
   2f684:	subne	r4, r0, r5
   2f688:	mov	r0, r4
   2f68c:	pop	{r4, r5, fp, pc}

0002f690 <flatcc_builder_truncate_vector@@Base>:
   2f690:	push	{fp, lr}
   2f694:	mov	fp, sp
   2f698:	ldr	r2, [r0, #32]
   2f69c:	ldrh	r3, [r2, #14]
   2f6a0:	cmp	r3, #4
   2f6a4:	bne	2f6d4 <flatcc_builder_truncate_vector@@Base+0x44>
   2f6a8:	ldr	r3, [r2, #20]
   2f6ac:	cmp	r3, r1
   2f6b0:	bcc	2f6f4 <flatcc_builder_truncate_vector@@Base+0x64>
   2f6b4:	sub	r3, r3, r1
   2f6b8:	str	r3, [r2, #20]
   2f6bc:	ldr	r2, [r0, #32]
   2f6c0:	ldr	r2, [r2, #16]
   2f6c4:	mul	r1, r2, r1
   2f6c8:	bl	2f714 <flatcc_builder_truncate_vector@@Base+0x84>
   2f6cc:	mov	r0, #0
   2f6d0:	pop	{fp, pc}
   2f6d4:	movw	r0, #62054	; 0xf266
   2f6d8:	movt	r0, #4
   2f6dc:	movw	r1, #61251	; 0xef43
   2f6e0:	movt	r1, #4
   2f6e4:	movw	r3, #62752	; 0xf520
   2f6e8:	movt	r3, #4
   2f6ec:	movw	r2, #985	; 0x3d9
   2f6f0:	bl	14950 <__assert_fail@plt>
   2f6f4:	movw	r0, #62815	; 0xf55f
   2f6f8:	movt	r0, #4
   2f6fc:	movw	r1, #61251	; 0xef43
   2f700:	movt	r1, #4
   2f704:	movw	r3, #62752	; 0xf520
   2f708:	movt	r3, #4
   2f70c:	movw	r2, #986	; 0x3da
   2f710:	bl	14950 <__assert_fail@plt>
   2f714:	mov	r2, r1
   2f718:	ldr	r1, [r0, #16]
   2f71c:	ldr	r3, [r0, #20]
   2f720:	sub	r3, r3, r2
   2f724:	str	r3, [r0, #20]
   2f728:	add	r0, r1, r3
   2f72c:	mov	r1, #0
   2f730:	b	148a8 <memset@plt>

0002f734 <flatcc_builder_truncate_offset_vector@@Base>:
   2f734:	push	{fp, lr}
   2f738:	mov	fp, sp
   2f73c:	ldr	r2, [r0, #32]
   2f740:	ldrh	r3, [r2, #14]
   2f744:	cmp	r3, #5
   2f748:	bne	2f778 <flatcc_builder_truncate_offset_vector@@Base+0x44>
   2f74c:	ldr	r3, [r2, #20]
   2f750:	cmp	r3, r1
   2f754:	bcc	2f798 <flatcc_builder_truncate_offset_vector@@Base+0x64>
   2f758:	sub	r3, r3, r1
   2f75c:	str	r3, [r2, #20]
   2f760:	ldr	r2, [r0, #32]
   2f764:	ldr	r2, [r2, #16]
   2f768:	mul	r1, r2, r1
   2f76c:	bl	2f714 <flatcc_builder_truncate_vector@@Base+0x84>
   2f770:	mov	r0, #0
   2f774:	pop	{fp, pc}
   2f778:	movw	r0, #62303	; 0xf35f
   2f77c:	movt	r0, #4
   2f780:	movw	r1, #61251	; 0xef43
   2f784:	movt	r1, #4
   2f788:	movw	r3, #62851	; 0xf583
   2f78c:	movt	r3, #4
   2f790:	movw	r2, #994	; 0x3e2
   2f794:	bl	14950 <__assert_fail@plt>
   2f798:	movw	r0, #62921	; 0xf5c9
   2f79c:	movt	r0, #4
   2f7a0:	movw	r1, #61251	; 0xef43
   2f7a4:	movt	r1, #4
   2f7a8:	movw	r3, #62851	; 0xf583
   2f7ac:	movt	r3, #4
   2f7b0:	movw	r2, #995	; 0x3e3
   2f7b4:	bl	14950 <__assert_fail@plt>

0002f7b8 <flatcc_builder_truncate_string@@Base>:
   2f7b8:	push	{fp, lr}
   2f7bc:	mov	fp, sp
   2f7c0:	ldr	r2, [r0, #32]
   2f7c4:	ldrh	r3, [r2, #14]
   2f7c8:	cmp	r3, #6
   2f7cc:	bne	2f7f0 <flatcc_builder_truncate_string@@Base+0x38>
   2f7d0:	ldr	r3, [r2, #20]
   2f7d4:	cmp	r3, r1
   2f7d8:	bcc	2f810 <flatcc_builder_truncate_string@@Base+0x58>
   2f7dc:	sub	r3, r3, r1
   2f7e0:	str	r3, [r2, #20]
   2f7e4:	bl	2f714 <flatcc_builder_truncate_vector@@Base+0x84>
   2f7e8:	mov	r0, #0
   2f7ec:	pop	{fp, pc}
   2f7f0:	movw	r0, #62568	; 0xf468
   2f7f4:	movt	r0, #4
   2f7f8:	movw	r1, #61251	; 0xef43
   2f7fc:	movt	r1, #4
   2f800:	movw	r3, #62980	; 0xf604
   2f804:	movt	r3, #4
   2f808:	movw	r2, #1003	; 0x3eb
   2f80c:	bl	14950 <__assert_fail@plt>
   2f810:	movw	r0, #63043	; 0xf643
   2f814:	movt	r0, #4
   2f818:	movw	r1, #61251	; 0xef43
   2f81c:	movt	r1, #4
   2f820:	movw	r3, #62980	; 0xf604
   2f824:	movt	r3, #4
   2f828:	mov	r2, #1004	; 0x3ec
   2f82c:	bl	14950 <__assert_fail@plt>

0002f830 <flatcc_builder_start_vector@@Base>:
   2f830:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2f834:	add	fp, sp, #24
   2f838:	sub	sp, sp, #8
   2f83c:	mov	r5, r3
   2f840:	mov	r6, r1
   2f844:	mov	r4, r0
   2f848:	strh	r2, [sp, #6]
   2f84c:	add	r0, sp, #6
   2f850:	mov	r8, #4
   2f854:	mov	r1, #4
   2f858:	bl	2f8b0 <flatcc_builder_start_vector@@Base+0x80>
   2f85c:	ldrh	r1, [sp, #6]
   2f860:	mov	r0, r4
   2f864:	bl	2eed8 <flatcc_builder_start_buffer@@Base+0xbc>
   2f868:	mvn	r7, #0
   2f86c:	cmp	r0, #0
   2f870:	bne	2f8a4 <flatcc_builder_start_vector@@Base+0x74>
   2f874:	ldr	r0, [r4, #32]
   2f878:	str	r6, [r0, #16]
   2f87c:	ldr	r0, [r4, #32]
   2f880:	mov	r7, #0
   2f884:	str	r7, [r0, #20]
   2f888:	ldr	r0, [r4, #32]
   2f88c:	str	r5, [r0, #24]
   2f890:	ldr	r0, [r4, #32]
   2f894:	strh	r8, [r0, #14]
   2f898:	mov	r0, r4
   2f89c:	mvn	r1, #3
   2f8a0:	bl	2f150 <flatcc_builder_start_struct@@Base+0x4c>
   2f8a4:	mov	r0, r7
   2f8a8:	sub	sp, fp, #24
   2f8ac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f8b0:	ldrh	r2, [r0]
   2f8b4:	cmp	r2, r1
   2f8b8:	strhcc	r1, [r0]
   2f8bc:	bx	lr

0002f8c0 <flatcc_builder_start_offset_vector@@Base>:
   2f8c0:	push	{r4, r5, r6, sl, fp, lr}
   2f8c4:	add	fp, sp, #16
   2f8c8:	mov	r4, r0
   2f8cc:	mov	r6, #4
   2f8d0:	mov	r1, #4
   2f8d4:	bl	2eed8 <flatcc_builder_start_buffer@@Base+0xbc>
   2f8d8:	mvn	r5, #0
   2f8dc:	cmp	r0, #0
   2f8e0:	beq	2f8ec <flatcc_builder_start_offset_vector@@Base+0x2c>
   2f8e4:	mov	r0, r5
   2f8e8:	pop	{r4, r5, r6, sl, fp, pc}
   2f8ec:	ldr	r0, [r4, #32]
   2f8f0:	str	r6, [r0, #16]
   2f8f4:	ldr	r0, [r4, #32]
   2f8f8:	mov	r5, #0
   2f8fc:	str	r5, [r0, #20]
   2f900:	ldr	r0, [r4, #32]
   2f904:	mov	r1, #5
   2f908:	strh	r1, [r0, #14]
   2f90c:	mov	r0, r4
   2f910:	mvn	r1, #3
   2f914:	bl	2f150 <flatcc_builder_start_struct@@Base+0x4c>
   2f918:	mov	r0, r5
   2f91c:	pop	{r4, r5, r6, sl, fp, pc}

0002f920 <flatcc_builder_create_offset_vector@@Base>:
   2f920:	push	{r4, r5, r6, sl, fp, lr}
   2f924:	add	fp, sp, #16
   2f928:	mov	r6, r2
   2f92c:	mov	r5, r1
   2f930:	mov	r4, r0
   2f934:	bl	2f8c0 <flatcc_builder_start_offset_vector@@Base>
   2f938:	cmp	r0, #0
   2f93c:	beq	2f948 <flatcc_builder_create_offset_vector@@Base+0x28>
   2f940:	mov	r0, #0
   2f944:	pop	{r4, r5, r6, sl, fp, pc}
   2f948:	mov	r0, r4
   2f94c:	mov	r1, r6
   2f950:	bl	2f40c <flatcc_builder_extend_offset_vector@@Base>
   2f954:	cmp	r0, #0
   2f958:	beq	2f940 <flatcc_builder_create_offset_vector@@Base+0x20>
   2f95c:	lsl	r2, r6, #2
   2f960:	mov	r1, r5
   2f964:	bl	147e8 <memcpy@plt>
   2f968:	mov	r0, r4
   2f96c:	pop	{r4, r5, r6, sl, fp, lr}
   2f970:	b	2f974 <flatcc_builder_end_offset_vector@@Base>

0002f974 <flatcc_builder_end_offset_vector@@Base>:
   2f974:	push	{r4, r5, fp, lr}
   2f978:	add	fp, sp, #8
   2f97c:	mov	r4, r0
   2f980:	ldr	r0, [r0, #32]
   2f984:	ldrh	r1, [r0, #14]
   2f988:	cmp	r1, #5
   2f98c:	bne	2f9b8 <flatcc_builder_end_offset_vector@@Base+0x44>
   2f990:	ldr	r2, [r0, #20]
   2f994:	ldr	r1, [r4, #16]
   2f998:	mov	r0, r4
   2f99c:	bl	30514 <flatcc_builder_create_offset_vector_direct@@Base>
   2f9a0:	mov	r5, r0
   2f9a4:	cmp	r0, #0
   2f9a8:	movne	r0, r4
   2f9ac:	blne	2f098 <flatcc_builder_end_buffer@@Base+0xc8>
   2f9b0:	mov	r0, r5
   2f9b4:	pop	{r4, r5, fp, pc}
   2f9b8:	movw	r0, #62303	; 0xf35f
   2f9bc:	movt	r0, #4
   2f9c0:	movw	r1, #61251	; 0xef43
   2f9c4:	movt	r1, #4
   2f9c8:	movw	r3, #63886	; 0xf98e
   2f9cc:	movt	r3, #4
   2f9d0:	movw	r2, #1480	; 0x5c8
   2f9d4:	bl	14950 <__assert_fail@plt>

0002f9d8 <flatcc_builder_start_string@@Base>:
   2f9d8:	push	{r4, r5, r6, sl, fp, lr}
   2f9dc:	add	fp, sp, #16
   2f9e0:	mov	r4, r0
   2f9e4:	mov	r6, #1
   2f9e8:	mov	r1, #1
   2f9ec:	bl	2eed8 <flatcc_builder_start_buffer@@Base+0xbc>
   2f9f0:	mvn	r5, #0
   2f9f4:	cmp	r0, #0
   2f9f8:	beq	2fa04 <flatcc_builder_start_string@@Base+0x2c>
   2f9fc:	mov	r0, r5
   2fa00:	pop	{r4, r5, r6, sl, fp, pc}
   2fa04:	ldr	r0, [r4, #32]
   2fa08:	str	r6, [r0, #16]
   2fa0c:	ldr	r0, [r4, #32]
   2fa10:	mov	r5, #0
   2fa14:	str	r5, [r0, #20]
   2fa18:	ldr	r0, [r4, #32]
   2fa1c:	mov	r1, #6
   2fa20:	strh	r1, [r0, #14]
   2fa24:	mov	r0, r4
   2fa28:	mvn	r1, #3
   2fa2c:	bl	2f150 <flatcc_builder_start_struct@@Base+0x4c>
   2fa30:	mov	r0, r5
   2fa34:	pop	{r4, r5, r6, sl, fp, pc}

0002fa38 <flatcc_builder_reserve_table@@Base>:
   2fa38:	cmn	r1, #1
   2fa3c:	ble	2fa44 <flatcc_builder_reserve_table@@Base+0xc>
   2fa40:	b	2fa6c <flatcc_builder_reserve_table@@Base+0x34>
   2fa44:	push	{fp, lr}
   2fa48:	mov	fp, sp
   2fa4c:	movw	r0, #63142	; 0xf6a6
   2fa50:	movt	r0, #4
   2fa54:	movw	r1, #61251	; 0xef43
   2fa58:	movt	r1, #4
   2fa5c:	movw	r3, #63077	; 0xf665
   2fa60:	movt	r3, #4
   2fa64:	movw	r2, #1065	; 0x429
   2fa68:	bl	14950 <__assert_fail@plt>
   2fa6c:	push	{r4, r5, r6, sl, fp, lr}
   2fa70:	add	fp, sp, #16
   2fa74:	sub	sp, sp, #8
   2fa78:	mov	r6, r1
   2fa7c:	mov	r4, r0
   2fa80:	ldr	r0, [r0, #32]
   2fa84:	ldrh	r1, [r0, #28]
   2fa88:	ldr	r0, [r0, #16]
   2fa8c:	mov	r2, #1
   2fa90:	str	r2, [sp]
   2fa94:	mov	r2, #4
   2fa98:	add	r3, r2, r6, lsl #1
   2fa9c:	add	r2, r0, r1, lsl #1
   2faa0:	mov	r5, #0
   2faa4:	mov	r0, r4
   2faa8:	mov	r1, #0
   2faac:	bl	2e76c <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   2fab0:	str	r0, [r4, #4]
   2fab4:	cmp	r0, #0
   2fab8:	beq	2faf4 <flatcc_builder_reserve_table@@Base+0xbc>
   2fabc:	lsl	r1, r6, #1
   2fac0:	add	r0, r0, #4
   2fac4:	str	r0, [r4, #4]
   2fac8:	ldr	r0, [r4, #32]
   2facc:	ldr	r2, [r0, #20]
   2fad0:	str	r5, [sp]
   2fad4:	orr	r3, r1, #1
   2fad8:	mov	r0, r4
   2fadc:	mov	r1, #3
   2fae0:	bl	2e76c <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   2fae4:	str	r0, [r4]
   2fae8:	cmp	r0, #0
   2faec:	mvneq	r5, #0
   2faf0:	b	2faf8 <flatcc_builder_reserve_table@@Base+0xc0>
   2faf4:	mvn	r5, #0
   2faf8:	mov	r0, r5
   2fafc:	sub	sp, fp, #16
   2fb00:	pop	{r4, r5, r6, sl, fp, pc}

0002fb04 <flatcc_builder_start_table@@Base>:
   2fb04:	push	{r4, r5, r6, sl, fp, lr}
   2fb08:	add	fp, sp, #16
   2fb0c:	mov	r6, r1
   2fb10:	mov	r4, r0
   2fb14:	mov	r1, #4
   2fb18:	bl	2eed8 <flatcc_builder_start_buffer@@Base+0xbc>
   2fb1c:	mvn	r5, #0
   2fb20:	cmp	r0, #0
   2fb24:	bne	2fb9c <flatcc_builder_start_table@@Base+0x98>
   2fb28:	ldr	r0, [r4, #4]
   2fb2c:	ldr	r1, [r4, #32]
   2fb30:	ldr	r2, [r4, #52]	; 0x34
   2fb34:	sub	r0, r0, r2
   2fb38:	str	r0, [r1, #16]
   2fb3c:	ldr	r0, [r4]
   2fb40:	ldr	r1, [r4, #32]
   2fb44:	ldr	r2, [r4, #76]	; 0x4c
   2fb48:	sub	r0, r0, r2
   2fb4c:	str	r0, [r1, #20]
   2fb50:	ldr	r0, [r4, #12]
   2fb54:	ldr	r1, [r4, #32]
   2fb58:	str	r0, [r1, #24]
   2fb5c:	ldr	r0, [r4, #32]
   2fb60:	ldrh	r1, [r4, #8]
   2fb64:	strh	r1, [r0, #28]
   2fb68:	mov	r0, #0
   2fb6c:	strh	r0, [r4, #8]
   2fb70:	movw	r0, #15186	; 0x3b52
   2fb74:	movt	r0, #12137	; 0x2f69
   2fb78:	str	r0, [r4, #12]
   2fb7c:	ldr	r0, [r4, #32]
   2fb80:	mov	r1, #3
   2fb84:	strh	r1, [r0, #14]
   2fb88:	mov	r0, r4
   2fb8c:	mov	r1, r6
   2fb90:	bl	2fa6c <flatcc_builder_reserve_table@@Base+0x34>
   2fb94:	cmp	r0, #0
   2fb98:	beq	2fba4 <flatcc_builder_start_table@@Base+0xa0>
   2fb9c:	mov	r0, r5
   2fba0:	pop	{r4, r5, r6, sl, fp, pc}
   2fba4:	mov	r0, r4
   2fba8:	movw	r1, #65532	; 0xfffc
   2fbac:	bl	2f150 <flatcc_builder_start_struct@@Base+0x4c>
   2fbb0:	mov	r5, #0
   2fbb4:	mov	r0, r5
   2fbb8:	pop	{r4, r5, r6, sl, fp, pc}

0002fbbc <flatcc_builder_create_vtable@@Base>:
   2fbbc:	push	{fp, lr}
   2fbc0:	mov	fp, sp
   2fbc4:	sub	sp, sp, #72	; 0x48
   2fbc8:	mov	r3, #0
   2fbcc:	str	r3, [sp, #4]
   2fbd0:	str	r3, [sp]
   2fbd4:	cmp	r2, #0
   2fbd8:	strne	r1, [sp, #8]
   2fbdc:	strne	r2, [sp]
   2fbe0:	strne	r2, [sp, #12]
   2fbe4:	movne	r1, #1
   2fbe8:	strne	r1, [sp, #4]
   2fbec:	ldr	r1, [r0, #152]	; 0x98
   2fbf0:	cmp	r1, #0
   2fbf4:	bne	2fc04 <flatcc_builder_create_vtable@@Base+0x48>
   2fbf8:	ldr	r1, [r0, #180]	; 0xb4
   2fbfc:	cmp	r1, #0
   2fc00:	beq	2fc20 <flatcc_builder_create_vtable@@Base+0x64>
   2fc04:	mov	r1, sp
   2fc08:	bl	2eadc <flatcc_builder_embed_buffer@@Base+0x1e0>
   2fc0c:	cmp	r0, #0
   2fc10:	beq	2fc30 <flatcc_builder_create_vtable@@Base+0x74>
   2fc14:	add	r0, r0, #1
   2fc18:	mov	sp, fp
   2fc1c:	pop	{fp, pc}
   2fc20:	mov	r1, sp
   2fc24:	bl	2fc3c <flatcc_builder_create_vtable@@Base+0x80>
   2fc28:	cmp	r0, #0
   2fc2c:	bne	2fc18 <flatcc_builder_create_vtable@@Base+0x5c>
   2fc30:	mov	r0, #0
   2fc34:	mov	sp, fp
   2fc38:	pop	{fp, pc}
   2fc3c:	push	{r4, sl, fp, lr}
   2fc40:	add	fp, sp, #8
   2fc44:	sub	sp, sp, #8
   2fc48:	ldr	r4, [r0, #140]	; 0x8c
   2fc4c:	ldr	r3, [r1]
   2fc50:	add	r2, r3, r4
   2fc54:	str	r2, [r0, #140]	; 0x8c
   2fc58:	cmn	r3, #1
   2fc5c:	ble	2fcb0 <flatcc_builder_create_vtable@@Base+0xf4>
   2fc60:	ldr	r2, [r1, #4]
   2fc64:	ldr	ip, [r0, #36]	; 0x24
   2fc68:	ldr	lr, [r0, #44]	; 0x2c
   2fc6c:	str	r3, [sp]
   2fc70:	add	r1, r1, #8
   2fc74:	mov	r0, ip
   2fc78:	mov	r3, r4
   2fc7c:	blx	lr
   2fc80:	cmp	r0, #0
   2fc84:	addeq	r0, r4, #1
   2fc88:	subeq	sp, fp, #8
   2fc8c:	popeq	{r4, sl, fp, pc}
   2fc90:	movw	r0, #24925	; 0x615d
   2fc94:	movt	r0, #4
   2fc98:	movw	r1, #61251	; 0xef43
   2fc9c:	movt	r1, #4
   2fca0:	movw	r3, #100	; 0x64
   2fca4:	movt	r3, #5
   2fca8:	movw	r2, #677	; 0x2a5
   2fcac:	bl	14950 <__assert_fail@plt>
   2fcb0:	movw	r0, #24925	; 0x615d
   2fcb4:	movt	r0, #4
   2fcb8:	movw	r1, #61251	; 0xef43
   2fcbc:	movt	r1, #4
   2fcc0:	movw	r3, #100	; 0x64
   2fcc4:	movt	r3, #5
   2fcc8:	movw	r2, #673	; 0x2a1
   2fccc:	bl	14950 <__assert_fail@plt>

0002fcd0 <flatcc_builder_create_cached_vtable@@Base>:
   2fcd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2fcd4:	add	fp, sp, #28
   2fcd8:	sub	sp, sp, #20
   2fcdc:	mov	r4, r2
   2fce0:	mov	r9, r1
   2fce4:	mov	sl, r0
   2fce8:	mov	r1, r3
   2fcec:	bl	2fec4 <flatcc_builder_create_cached_vtable@@Base+0x1f4>
   2fcf0:	cmp	r0, #0
   2fcf4:	beq	2fe18 <flatcc_builder_create_cached_vtable@@Base+0x148>
   2fcf8:	mov	r7, r0
   2fcfc:	ldr	r6, [r0]
   2fd00:	mov	r5, #0
   2fd04:	cmp	r6, #0
   2fd08:	mov	r8, #0
   2fd0c:	beq	2fda4 <flatcc_builder_create_cached_vtable@@Base+0xd4>
   2fd10:	ldr	r5, [sl, #68]	; 0x44
   2fd14:	str	sl, [sp, #16]
   2fd18:	ldr	sl, [sl, #100]	; 0x64
   2fd1c:	mov	r0, #0
   2fd20:	str	r7, [sp, #8]
   2fd24:	str	r0, [sp, #12]
   2fd28:	add	r8, sl, r6
   2fd2c:	ldr	r0, [r8, #8]
   2fd30:	mov	r1, r5
   2fd34:	ldrh	r0, [r1, r0]!	; <UNPREDICTABLE>
   2fd38:	cmp	r0, r4
   2fd3c:	bne	2fd54 <flatcc_builder_create_cached_vtable@@Base+0x84>
   2fd40:	mov	r0, r9
   2fd44:	mov	r2, r4
   2fd48:	bl	14800 <memcmp@plt>
   2fd4c:	cmp	r0, #0
   2fd50:	beq	2fd68 <flatcc_builder_create_cached_vtable@@Base+0x98>
   2fd54:	ldr	r6, [r8, #12]!
   2fd58:	cmp	r6, #0
   2fd5c:	mov	r7, r8
   2fd60:	bne	2fd28 <flatcc_builder_create_cached_vtable@@Base+0x58>
   2fd64:	b	2fd94 <flatcc_builder_create_cached_vtable@@Base+0xc4>
   2fd68:	ldr	r0, [sp, #16]
   2fd6c:	ldr	r0, [r0, #152]	; 0x98
   2fd70:	ldr	r1, [r8, #4]
   2fd74:	cmp	r1, r0
   2fd78:	beq	2fea0 <flatcc_builder_create_cached_vtable@@Base+0x1d0>
   2fd7c:	mov	r7, r8
   2fd80:	ldr	r6, [r7, #12]!
   2fd84:	cmp	r6, #0
   2fd88:	mov	r0, r8
   2fd8c:	bne	2fd24 <flatcc_builder_create_cached_vtable@@Base+0x54>
   2fd90:	b	2fd98 <flatcc_builder_create_cached_vtable@@Base+0xc8>
   2fd94:	ldr	r8, [sp, #12]
   2fd98:	ldr	sl, [sp, #16]
   2fd9c:	mov	r5, #0
   2fda0:	ldr	r7, [sp, #8]
   2fda4:	ldr	r2, [sl, #124]	; 0x7c
   2fda8:	str	r5, [sp]
   2fdac:	mov	r0, sl
   2fdb0:	mov	r1, #6
   2fdb4:	mov	r3, #16
   2fdb8:	bl	2e76c <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   2fdbc:	cmp	r0, #0
   2fdc0:	beq	2fe8c <flatcc_builder_create_cached_vtable@@Base+0x1bc>
   2fdc4:	mov	r6, r0
   2fdc8:	ldr	r0, [sl, #124]	; 0x7c
   2fdcc:	ldr	r1, [sl, #152]	; 0x98
   2fdd0:	add	r2, r0, #16
   2fdd4:	str	r2, [sl, #124]	; 0x7c
   2fdd8:	str	r1, [r6, #4]
   2fddc:	ldr	r1, [r7]
   2fde0:	str	r1, [r6, #12]
   2fde4:	str	r0, [r7]
   2fde8:	mov	r0, sl
   2fdec:	mov	r1, r9
   2fdf0:	mov	r2, r4
   2fdf4:	bl	2fbbc <flatcc_builder_create_vtable@@Base>
   2fdf8:	str	r0, [r6]
   2fdfc:	cmp	r0, #0
   2fe00:	beq	2fe8c <flatcc_builder_create_cached_vtable@@Base+0x1bc>
   2fe04:	cmp	r8, #0
   2fe08:	beq	2fe20 <flatcc_builder_create_cached_vtable@@Base+0x150>
   2fe0c:	ldr	r0, [r8, #8]
   2fe10:	str	r0, [r6, #8]
   2fe14:	b	2fe88 <flatcc_builder_create_cached_vtable@@Base+0x1b8>
   2fe18:	mov	r5, #0
   2fe1c:	b	2fe8c <flatcc_builder_create_cached_vtable@@Base+0x1bc>
   2fe20:	ldr	r0, [sl, #172]	; 0xac
   2fe24:	cmp	r0, #0
   2fe28:	beq	2fe48 <flatcc_builder_create_cached_vtable@@Base+0x178>
   2fe2c:	ldr	r1, [sl, #120]	; 0x78
   2fe30:	add	r1, r1, r4
   2fe34:	cmp	r0, r1
   2fe38:	bcs	2fe48 <flatcc_builder_create_cached_vtable@@Base+0x178>
   2fe3c:	mov	r0, sl
   2fe40:	bl	2e464 <flatcc_builder_flush_vtable_cache@@Base>
   2fe44:	b	2fe88 <flatcc_builder_create_cached_vtable@@Base+0x1b8>
   2fe48:	ldr	r2, [sl, #120]	; 0x78
   2fe4c:	mov	r0, #0
   2fe50:	str	r0, [sp]
   2fe54:	mov	r0, sl
   2fe58:	mov	r1, #2
   2fe5c:	mov	r3, r4
   2fe60:	bl	2e76c <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   2fe64:	cmp	r0, #0
   2fe68:	beq	2fe98 <flatcc_builder_create_cached_vtable@@Base+0x1c8>
   2fe6c:	ldr	r1, [sl, #120]	; 0x78
   2fe70:	str	r1, [r6, #8]
   2fe74:	add	r1, r1, r4
   2fe78:	str	r1, [sl, #120]	; 0x78
   2fe7c:	mov	r1, r9
   2fe80:	mov	r2, r4
   2fe84:	bl	147e8 <memcpy@plt>
   2fe88:	ldr	r5, [r6]
   2fe8c:	mov	r0, r5
   2fe90:	sub	sp, fp, #28
   2fe94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2fe98:	mvn	r5, #0
   2fe9c:	b	2fe8c <flatcc_builder_create_cached_vtable@@Base+0x1bc>
   2fea0:	ldr	r1, [sp, #8]
   2fea4:	cmp	r7, r1
   2fea8:	ldrne	r0, [r8, #12]
   2feac:	strne	r0, [r7]
   2feb0:	ldrne	r0, [r1]
   2feb4:	strne	r0, [r8, #12]
   2feb8:	strne	r6, [r1]
   2febc:	ldr	r5, [r8]
   2fec0:	b	2fe8c <flatcc_builder_create_cached_vtable@@Base+0x1bc>
   2fec4:	push	{r4, r5, fp, lr}
   2fec8:	add	fp, sp, #8
   2fecc:	mov	r4, r1
   2fed0:	mov	r5, r0
   2fed4:	ldr	r0, [r0, #116]	; 0x74
   2fed8:	cmp	r0, #0
   2fedc:	bne	2fef8 <flatcc_builder_create_cached_vtable@@Base+0x228>
   2fee0:	mov	r0, r5
   2fee4:	bl	31624 <flatcc_builder_get_emit_context@@Base+0x80>
   2fee8:	mov	r1, r0
   2feec:	mov	r0, #0
   2fef0:	cmp	r1, #0
   2fef4:	popne	{r4, r5, fp, pc}
   2fef8:	ldr	r0, [r5, #92]	; 0x5c
   2fefc:	ldr	r1, [r5, #116]	; 0x74
   2ff00:	rsb	r1, r1, #32
   2ff04:	lsr	r1, r4, r1
   2ff08:	add	r0, r0, r1, lsl #2
   2ff0c:	pop	{r4, r5, fp, pc}

0002ff10 <flatcc_builder_create_table@@Base>:
   2ff10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ff14:	add	fp, sp, #28
   2ff18:	sub	sp, sp, #84	; 0x54
   2ff1c:	strh	r3, [fp, #-30]	; 0xffffffe2
   2ff20:	ldr	r4, [fp, #12]
   2ff24:	cmn	r4, #1
   2ff28:	ble	30058 <flatcc_builder_create_table@@Base+0x148>
   2ff2c:	ldr	r8, [fp, #16]
   2ff30:	tst	r8, #1
   2ff34:	beq	30078 <flatcc_builder_create_table@@Base+0x168>
   2ff38:	mov	sl, r2
   2ff3c:	mov	r6, r1
   2ff40:	mov	r5, r0
   2ff44:	sub	r0, fp, #30
   2ff48:	mov	r1, #4
   2ff4c:	bl	2f8b0 <flatcc_builder_start_vector@@Base+0x80>
   2ff50:	ldrh	r7, [fp, #-30]	; 0xffffffe2
   2ff54:	mov	r0, r5
   2ff58:	mov	r1, r7
   2ff5c:	bl	2ed40 <flatcc_builder_create_buffer@@Base+0x1d0>
   2ff60:	mov	r0, r5
   2ff64:	mov	r1, sl
   2ff68:	mov	r2, r7
   2ff6c:	bl	2eac4 <flatcc_builder_embed_buffer@@Base+0x1c8>
   2ff70:	mov	r9, r0
   2ff74:	mvn	r0, #3
   2ff78:	sub	r0, r0, sl
   2ff7c:	sub	r0, r0, r9
   2ff80:	str	r5, [sp]
   2ff84:	ldr	r1, [r5, #136]	; 0x88
   2ff88:	add	r5, r0, r1
   2ff8c:	rsb	r0, r8, #1
   2ff90:	add	r0, r0, r5
   2ff94:	bl	2ead8 <flatcc_builder_embed_buffer@@Base+0x1dc>
   2ff98:	str	r0, [fp, #-36]	; 0xffffffdc
   2ff9c:	cmp	r4, #1
   2ffa0:	blt	2ffd0 <flatcc_builder_create_table@@Base+0xc0>
   2ffa4:	mvn	r0, #3
   2ffa8:	ldr	r7, [fp, #8]
   2ffac:	sub	r5, r0, r5
   2ffb0:	ldrh	r8, [r7], #2
   2ffb4:	ldr	r0, [r8, r6]
   2ffb8:	add	r0, r5, r0
   2ffbc:	sub	r0, r0, r8
   2ffc0:	bl	2ead8 <flatcc_builder_embed_buffer@@Base+0x1dc>
   2ffc4:	str	r0, [r8, r6]
   2ffc8:	subs	r4, r4, #1
   2ffcc:	bne	2ffb0 <flatcc_builder_create_table@@Base+0xa0>
   2ffd0:	sub	r0, fp, #36	; 0x24
   2ffd4:	str	r0, [sp, #12]
   2ffd8:	mov	r0, #4
   2ffdc:	str	r0, [sp, #4]
   2ffe0:	str	r0, [sp, #16]
   2ffe4:	mov	r0, #1
   2ffe8:	str	r0, [sp, #8]
   2ffec:	cmp	sl, #0
   2fff0:	beq	3000c <flatcc_builder_create_table@@Base+0xfc>
   2fff4:	str	r6, [sp, #20]
   2fff8:	str	sl, [sp, #24]
   2fffc:	mov	r0, #2
   30000:	str	r0, [sp, #8]
   30004:	add	r0, sl, #4
   30008:	str	r0, [sp, #4]
   3000c:	cmp	r9, #0
   30010:	ldr	r0, [sp]
   30014:	beq	30048 <flatcc_builder_create_table@@Base+0x138>
   30018:	ldr	r2, [sp, #4]
   3001c:	ldr	r1, [sp, #8]
   30020:	add	r2, r2, r9
   30024:	str	r2, [sp, #4]
   30028:	add	r2, sp, #4
   3002c:	add	r3, r2, r1, lsl #3
   30030:	movw	r2, #60721	; 0xed31
   30034:	movt	r2, #4
   30038:	str	r2, [r3, #8]
   3003c:	str	r9, [r3, #12]
   30040:	add	r1, r1, #1
   30044:	str	r1, [sp, #8]
   30048:	add	r1, sp, #4
   3004c:	bl	2eadc <flatcc_builder_embed_buffer@@Base+0x1e0>
   30050:	sub	sp, fp, #28
   30054:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30058:	movw	r0, #63135	; 0xf69f
   3005c:	movt	r0, #4
   30060:	movw	r1, #61251	; 0xef43
   30064:	movt	r1, #4
   30068:	movw	r3, #63153	; 0xf6b1
   3006c:	movt	r3, #4
   30070:	movw	r2, #1237	; 0x4d5
   30074:	bl	14950 <__assert_fail@plt>
   30078:	movw	r0, #63309	; 0xf74d
   3007c:	movt	r0, #4
   30080:	movw	r1, #61251	; 0xef43
   30084:	movt	r1, #4
   30088:	movw	r3, #63153	; 0xf6b1
   3008c:	movt	r3, #4
   30090:	movw	r2, #1243	; 0x4db
   30094:	bl	14950 <__assert_fail@plt>

00030098 <flatcc_builder_check_required_field@@Base>:
   30098:	ldr	r2, [r0, #32]
   3009c:	ldrh	r2, [r2, #14]
   300a0:	cmp	r2, #3
   300a4:	bne	300d4 <flatcc_builder_check_required_field@@Base+0x3c>
   300a8:	ldrh	r3, [r0, #8]
   300ac:	mov	r2, #0
   300b0:	cmp	r3, r1
   300b4:	bls	300cc <flatcc_builder_check_required_field@@Base+0x34>
   300b8:	ldr	r0, [r0, #4]
   300bc:	add	r0, r0, r1, lsl #1
   300c0:	ldrh	r2, [r0]
   300c4:	cmp	r2, #0
   300c8:	movwne	r2, #1
   300cc:	mov	r0, r2
   300d0:	bx	lr
   300d4:	push	{fp, lr}
   300d8:	mov	fp, sp
   300dc:	movw	r0, #63320	; 0xf758
   300e0:	movt	r0, #4
   300e4:	movw	r1, #61251	; 0xef43
   300e8:	movt	r1, #4
   300ec:	movw	r3, #63363	; 0xf783
   300f0:	movt	r3, #4
   300f4:	movw	r2, #1272	; 0x4f8
   300f8:	bl	14950 <__assert_fail@plt>

000300fc <flatcc_builder_check_union_field@@Base>:
   300fc:	mov	r2, r0
   30100:	ldr	r0, [r0, #32]
   30104:	ldrh	r0, [r0, #14]
   30108:	cmp	r0, #3
   3010c:	bne	3016c <flatcc_builder_check_union_field@@Base+0x70>
   30110:	mov	r0, #0
   30114:	cmp	r1, #0
   30118:	ldrhne	r3, [r2, #8]
   3011c:	cmpne	r3, r1
   30120:	bhi	30128 <flatcc_builder_check_union_field@@Base+0x2c>
   30124:	bx	lr
   30128:	ldr	r0, [r2, #4]
   3012c:	add	r0, r0, r1, lsl #1
   30130:	ldrh	r1, [r0, #-2]
   30134:	cmp	r1, #0
   30138:	beq	3015c <flatcc_builder_check_union_field@@Base+0x60>
   3013c:	ldr	r2, [r2, #16]
   30140:	ldrb	r1, [r2, r1]
   30144:	ldrh	r0, [r0]
   30148:	cmp	r1, #0
   3014c:	beq	30160 <flatcc_builder_check_union_field@@Base+0x64>
   30150:	cmp	r0, #0
   30154:	movwne	r0, #1
   30158:	bx	lr
   3015c:	ldrh	r0, [r0]
   30160:	clz	r0, r0
   30164:	lsr	r0, r0, #5
   30168:	bx	lr
   3016c:	push	{fp, lr}
   30170:	mov	fp, sp
   30174:	movw	r0, #63320	; 0xf758
   30178:	movt	r0, #4
   3017c:	movw	r1, #61251	; 0xef43
   30180:	movt	r1, #4
   30184:	movw	r3, #63446	; 0xf7d6
   30188:	movt	r3, #4
   3018c:	movw	r2, #1279	; 0x4ff
   30190:	bl	14950 <__assert_fail@plt>

00030194 <flatcc_builder_check_required@@Base>:
   30194:	push	{fp, lr}
   30198:	mov	fp, sp
   3019c:	mov	r3, r0
   301a0:	ldr	r0, [r0, #32]
   301a4:	ldrh	r0, [r0, #14]
   301a8:	cmp	r0, #3
   301ac:	bne	30204 <flatcc_builder_check_required@@Base+0x70>
   301b0:	ldrh	ip, [r3, #8]
   301b4:	mov	r0, #0
   301b8:	cmp	ip, r2
   301bc:	movge	r0, #1
   301c0:	cmpge	r2, #1
   301c4:	bge	301cc <flatcc_builder_check_required@@Base+0x38>
   301c8:	pop	{fp, pc}
   301cc:	ldr	ip, [r3, #4]
   301d0:	mov	lr, #0
   301d4:	b	301e8 <flatcc_builder_check_required@@Base+0x54>
   301d8:	add	lr, lr, #1
   301dc:	add	r1, r1, #2
   301e0:	cmp	lr, r2
   301e4:	popge	{fp, pc}
   301e8:	ldrh	r3, [r1]
   301ec:	add	r3, ip, r3, lsl #1
   301f0:	ldrh	r3, [r3]
   301f4:	cmp	r3, #0
   301f8:	bne	301d8 <flatcc_builder_check_required@@Base+0x44>
   301fc:	mov	r0, #0
   30200:	pop	{fp, pc}
   30204:	movw	r0, #63320	; 0xf758
   30208:	movt	r0, #4
   3020c:	movw	r1, #61251	; 0xef43
   30210:	movt	r1, #4
   30214:	movw	r3, #63526	; 0xf826
   30218:	movt	r3, #4
   3021c:	movw	r2, #1297	; 0x511
   30220:	bl	14950 <__assert_fail@plt>

00030224 <flatcc_builder_end_table@@Base>:
   30224:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   30228:	add	fp, sp, #24
   3022c:	sub	sp, sp, #16
   30230:	mov	r4, r0
   30234:	ldr	r0, [r0, #32]
   30238:	ldrh	r0, [r0, #14]
   3023c:	cmp	r0, #3
   30240:	bne	30350 <flatcc_builder_end_table@@Base+0x12c>
   30244:	ldrh	r0, [r4, #8]
   30248:	mov	r1, #4
   3024c:	add	r0, r1, r0, lsl #1
   30250:	ldr	r6, [r4, #4]
   30254:	strh	r0, [r6, #-4]!
   30258:	ldrh	r1, [r4, #20]
   3025c:	add	r1, r1, #4
   30260:	strh	r1, [r6, #2]
   30264:	uxth	r5, r0
   30268:	ldr	r0, [r4, #12]
   3026c:	eor	r0, r0, r5
   30270:	movw	r2, #31153	; 0x79b1
   30274:	movt	r2, #40503	; 0x9e37
   30278:	mul	r0, r0, r2
   3027c:	uxth	r1, r1
   30280:	eor	r0, r0, r1
   30284:	mul	r3, r0, r2
   30288:	str	r3, [r4, #12]
   3028c:	mov	r0, r4
   30290:	mov	r1, r6
   30294:	mov	r2, r5
   30298:	bl	2fcd0 <flatcc_builder_create_cached_vtable@@Base>
   3029c:	cmp	r0, #0
   302a0:	beq	30340 <flatcc_builder_end_table@@Base+0x11c>
   302a4:	mov	r7, r0
   302a8:	mov	r8, #0
   302ac:	mov	r0, r6
   302b0:	mov	r1, #0
   302b4:	mov	r2, r5
   302b8:	bl	148a8 <memset@plt>
   302bc:	ldrh	r3, [r4, #130]	; 0x82
   302c0:	ldr	r0, [r4, #76]	; 0x4c
   302c4:	ldr	r6, [r4]
   302c8:	ldr	r1, [r4, #16]
   302cc:	ldr	r2, [r4, #20]
   302d0:	ldr	r5, [r4, #32]
   302d4:	ldr	r5, [r5, #20]
   302d8:	add	r0, r0, r5
   302dc:	sub	r6, r6, r0
   302e0:	asr	r6, r6, #1
   302e4:	stm	sp, {r0, r6, r7}
   302e8:	mov	r0, r4
   302ec:	bl	2ff10 <flatcc_builder_create_table@@Base>
   302f0:	cmp	r0, #0
   302f4:	beq	30344 <flatcc_builder_end_table@@Base+0x120>
   302f8:	mov	r5, r0
   302fc:	ldr	r0, [r4, #32]
   30300:	ldr	r1, [r4, #52]	; 0x34
   30304:	ldr	r2, [r4, #76]	; 0x4c
   30308:	ldr	r3, [r0, #24]
   3030c:	str	r3, [r4, #12]
   30310:	ldrh	r3, [r0, #28]
   30314:	strh	r3, [r4, #8]
   30318:	ldr	r3, [r0, #16]
   3031c:	add	r1, r1, r3
   30320:	str	r1, [r4, #4]
   30324:	ldr	r0, [r0, #20]
   30328:	add	r0, r2, r0
   3032c:	str	r0, [r4]
   30330:	mov	r0, r4
   30334:	bl	2f098 <flatcc_builder_end_buffer@@Base+0xc8>
   30338:	mov	r8, r5
   3033c:	b	30344 <flatcc_builder_end_table@@Base+0x120>
   30340:	mov	r8, #0
   30344:	mov	r0, r8
   30348:	sub	sp, fp, #24
   3034c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   30350:	movw	r0, #63320	; 0xf758
   30354:	movt	r0, #4
   30358:	movw	r1, #61251	; 0xef43
   3035c:	movt	r1, #4
   30360:	movw	r3, #63616	; 0xf880
   30364:	movt	r3, #4
   30368:	movw	r2, #1317	; 0x525
   3036c:	bl	14950 <__assert_fail@plt>

00030370 <flatcc_builder_create_vector@@Base>:
   30370:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   30374:	add	fp, sp, #24
   30378:	sub	sp, sp, #80	; 0x50
   3037c:	mov	r4, r0
   30380:	ldr	r0, [fp, #8]
   30384:	strh	r0, [fp, #-26]	; 0xffffffe6
   30388:	ldr	r0, [fp, #12]
   3038c:	cmp	r2, r0
   30390:	bhi	30460 <flatcc_builder_create_vector@@Base+0xf0>
   30394:	mov	r6, r3
   30398:	mov	r7, r2
   3039c:	mov	r8, r1
   303a0:	sub	r0, fp, #26
   303a4:	mov	r9, #4
   303a8:	mov	r1, #4
   303ac:	bl	2f8b0 <flatcc_builder_start_vector@@Base+0x80>
   303b0:	ldrh	r5, [fp, #-26]	; 0xffffffe6
   303b4:	mov	r0, r4
   303b8:	mov	r1, r5
   303bc:	bl	2ed40 <flatcc_builder_create_buffer@@Base+0x1d0>
   303c0:	mov	r0, r7
   303c4:	bl	2ead8 <flatcc_builder_embed_buffer@@Base+0x1dc>
   303c8:	str	r7, [fp, #-32]	; 0xffffffe0
   303cc:	mul	r6, r6, r7
   303d0:	mov	r0, r4
   303d4:	mov	r1, r6
   303d8:	mov	r2, r5
   303dc:	bl	2eac4 <flatcc_builder_embed_buffer@@Base+0x1c8>
   303e0:	str	r9, [sp]
   303e4:	sub	r1, fp, #32
   303e8:	str	r1, [sp, #8]
   303ec:	str	r9, [sp, #12]
   303f0:	mov	r1, #1
   303f4:	str	r1, [sp, #4]
   303f8:	cmp	r6, #0
   303fc:	beq	30418 <flatcc_builder_create_vector@@Base+0xa8>
   30400:	str	r8, [sp, #16]
   30404:	str	r6, [sp, #20]
   30408:	mov	r1, #2
   3040c:	str	r1, [sp, #4]
   30410:	add	r1, r6, #4
   30414:	str	r1, [sp]
   30418:	cmp	r0, #0
   3041c:	beq	3044c <flatcc_builder_create_vector@@Base+0xdc>
   30420:	ldm	sp, {r1, r2}
   30424:	add	r1, r1, r0
   30428:	str	r1, [sp]
   3042c:	mov	r1, sp
   30430:	add	r1, r1, r2, lsl #3
   30434:	movw	r3, #60721	; 0xed31
   30438:	movt	r3, #4
   3043c:	str	r3, [r1, #8]
   30440:	str	r0, [r1, #12]
   30444:	add	r0, r2, #1
   30448:	str	r0, [sp, #4]
   3044c:	mov	r1, sp
   30450:	mov	r0, r4
   30454:	bl	2eadc <flatcc_builder_embed_buffer@@Base+0x1e0>
   30458:	sub	sp, fp, #24
   3045c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   30460:	movw	r0, #63682	; 0xf8c2
   30464:	movt	r0, #4
   30468:	movw	r1, #61251	; 0xef43
   3046c:	movt	r1, #4
   30470:	movw	r3, #63701	; 0xf8d5
   30474:	movt	r3, #4
   30478:	movw	r2, #1365	; 0x555
   3047c:	bl	14950 <__assert_fail@plt>

00030480 <flatcc_builder_end_vector@@Base>:
   30480:	push	{r4, r5, fp, lr}
   30484:	add	fp, sp, #8
   30488:	sub	sp, sp, #8
   3048c:	mov	r4, r0
   30490:	ldr	r0, [r0, #32]
   30494:	ldrh	r1, [r0, #14]
   30498:	cmp	r1, #4
   3049c:	bne	304e0 <flatcc_builder_end_vector@@Base+0x60>
   304a0:	ldr	r1, [r4, #16]
   304a4:	ldrh	r5, [r4, #130]	; 0x82
   304a8:	ldr	r3, [r0, #16]
   304ac:	ldr	r2, [r0, #20]
   304b0:	ldr	r0, [r0, #24]
   304b4:	str	r5, [sp]
   304b8:	str	r0, [sp, #4]
   304bc:	mov	r0, r4
   304c0:	bl	30370 <flatcc_builder_create_vector@@Base>
   304c4:	mov	r5, r0
   304c8:	cmp	r0, #0
   304cc:	movne	r0, r4
   304d0:	blne	2f098 <flatcc_builder_end_buffer@@Base+0xc8>
   304d4:	mov	r0, r5
   304d8:	sub	sp, fp, #8
   304dc:	pop	{r4, r5, fp, pc}
   304e0:	movw	r0, #62054	; 0xf266
   304e4:	movt	r0, #4
   304e8:	movw	r1, #61251	; 0xef43
   304ec:	movt	r1, #4
   304f0:	movw	r3, #63819	; 0xf94b
   304f4:	movt	r3, #4
   304f8:	movw	r2, #1400	; 0x578
   304fc:	bl	14950 <__assert_fail@plt>

00030500 <flatcc_builder_vector_count@@Base>:
   30500:	ldr	r0, [r0, #32]
   30504:	ldr	r0, [r0, #20]
   30508:	bx	lr

0003050c <flatcc_builder_vector_edit@@Base>:
   3050c:	ldr	r0, [r0, #16]
   30510:	bx	lr

00030514 <flatcc_builder_create_offset_vector_direct@@Base>:
   30514:	mov	r3, #0
   30518:	b	3051c <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   3051c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   30520:	add	fp, sp, #24
   30524:	sub	sp, sp, #80	; 0x50
   30528:	mov	r8, r0
   3052c:	mov	r0, #0
   30530:	cmn	r2, #-1073741823	; 0xc0000001
   30534:	bhi	30664 <flatcc_builder_create_offset_vector_direct@@Base+0x150>
   30538:	mov	r5, r3
   3053c:	mov	r9, r2
   30540:	mov	r7, r1
   30544:	mov	r6, #4
   30548:	mov	r0, r8
   3054c:	mov	r1, #4
   30550:	bl	2ed40 <flatcc_builder_create_buffer@@Base+0x1d0>
   30554:	mov	r0, r9
   30558:	bl	2ead8 <flatcc_builder_embed_buffer@@Base+0x1dc>
   3055c:	str	r9, [fp, #-28]	; 0xffffffe4
   30560:	lsl	r4, r9, #2
   30564:	mov	r0, r8
   30568:	mov	r1, r4
   3056c:	mov	r2, #4
   30570:	bl	2eac4 <flatcc_builder_embed_buffer@@Base+0x1c8>
   30574:	str	r6, [sp, #4]
   30578:	sub	r1, fp, #28
   3057c:	str	r1, [sp, #12]
   30580:	str	r6, [sp, #16]
   30584:	mov	r1, #1
   30588:	str	r1, [sp, #8]
   3058c:	mov	r1, #0
   30590:	cmp	r1, r9, lsl #2
   30594:	beq	305b0 <flatcc_builder_create_offset_vector_direct@@Base+0x9c>
   30598:	str	r7, [sp, #20]
   3059c:	str	r4, [sp, #24]
   305a0:	mov	r1, #2
   305a4:	str	r1, [sp, #8]
   305a8:	add	r1, r4, #4
   305ac:	str	r1, [sp, #4]
   305b0:	cmp	r0, #0
   305b4:	beq	305e4 <flatcc_builder_create_offset_vector_direct@@Base+0xd0>
   305b8:	ldmib	sp, {r1, r2}
   305bc:	add	r1, r1, r0
   305c0:	str	r1, [sp, #4]
   305c4:	add	r1, sp, #4
   305c8:	add	r1, r1, r2, lsl #3
   305cc:	movw	r3, #60721	; 0xed31
   305d0:	movt	r3, #4
   305d4:	str	r3, [r1, #8]
   305d8:	str	r0, [r1, #12]
   305dc:	add	r0, r2, #1
   305e0:	str	r0, [sp, #8]
   305e4:	cmp	r9, #0
   305e8:	beq	30658 <flatcc_builder_create_offset_vector_direct@@Base+0x144>
   305ec:	ldr	r0, [r8, #136]	; 0x88
   305f0:	mvn	r1, #3
   305f4:	sub	r0, r1, r0
   305f8:	ldr	r1, [sp, #4]
   305fc:	add	r4, r0, r1
   30600:	mov	r6, #0
   30604:	ldr	r0, [r7, r6, lsl #2]
   30608:	cmp	r0, #0
   3060c:	beq	30634 <flatcc_builder_create_offset_vector_direct@@Base+0x120>
   30610:	add	r0, r4, r0
   30614:	bl	2ead8 <flatcc_builder_embed_buffer@@Base+0x1dc>
   30618:	str	r0, [r7, r6, lsl #2]
   3061c:	cmp	r5, #0
   30620:	beq	30648 <flatcc_builder_create_offset_vector_direct@@Base+0x134>
   30624:	ldrb	r0, [r5, r6]
   30628:	cmp	r0, #0
   3062c:	bne	30648 <flatcc_builder_create_offset_vector_direct@@Base+0x134>
   30630:	b	3066c <flatcc_builder_create_offset_vector_direct@@Base+0x158>
   30634:	cmp	r5, #0
   30638:	beq	3068c <flatcc_builder_create_offset_vector_direct@@Base+0x178>
   3063c:	ldrb	r0, [r5, r6]
   30640:	cmp	r0, #0
   30644:	bne	306ac <flatcc_builder_create_offset_vector_direct@@Base+0x198>
   30648:	sub	r4, r4, #4
   3064c:	add	r6, r6, #1
   30650:	cmp	r6, r9
   30654:	bcc	30604 <flatcc_builder_create_offset_vector_direct@@Base+0xf0>
   30658:	add	r1, sp, #4
   3065c:	mov	r0, r8
   30660:	bl	2eadc <flatcc_builder_embed_buffer@@Base+0x1e0>
   30664:	sub	sp, fp, #24
   30668:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3066c:	movw	r0, #221	; 0xdd
   30670:	movt	r0, #5
   30674:	movw	r1, #61251	; 0xef43
   30678:	movt	r1, #4
   3067c:	movw	r3, #235	; 0xeb
   30680:	movt	r3, #5
   30684:	movw	r2, #1457	; 0x5b1
   30688:	bl	14950 <__assert_fail@plt>
   3068c:	movw	r0, #24925	; 0x615d
   30690:	movt	r0, #4
   30694:	movw	r1, #61251	; 0xef43
   30698:	movt	r1, #4
   3069c:	movw	r3, #235	; 0xeb
   306a0:	movt	r3, #5
   306a4:	movw	r2, #1463	; 0x5b7
   306a8:	bl	14950 <__assert_fail@plt>
   306ac:	movw	r0, #366	; 0x16e
   306b0:	movt	r0, #5
   306b4:	movw	r1, #61251	; 0xef43
   306b8:	movt	r1, #4
   306bc:	movw	r3, #235	; 0xeb
   306c0:	movt	r3, #5
   306c4:	movw	r2, #1461	; 0x5b5
   306c8:	bl	14950 <__assert_fail@plt>

000306cc <flatcc_builder_end_offset_vector_for_unions@@Base>:
   306cc:	push	{r4, r5, fp, lr}
   306d0:	add	fp, sp, #8
   306d4:	mov	r3, r1
   306d8:	mov	r4, r0
   306dc:	ldr	r0, [r0, #32]
   306e0:	ldrh	r1, [r0, #14]
   306e4:	cmp	r1, #5
   306e8:	bne	30714 <flatcc_builder_end_offset_vector_for_unions@@Base+0x48>
   306ec:	ldr	r2, [r0, #20]
   306f0:	ldr	r1, [r4, #16]
   306f4:	mov	r0, r4
   306f8:	bl	3051c <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   306fc:	mov	r5, r0
   30700:	cmp	r0, #0
   30704:	movne	r0, r4
   30708:	blne	2f098 <flatcc_builder_end_buffer@@Base+0xc8>
   3070c:	mov	r0, r5
   30710:	pop	{r4, r5, fp, pc}
   30714:	movw	r0, #62303	; 0xf35f
   30718:	movt	r0, #4
   3071c:	movw	r1, #61251	; 0xef43
   30720:	movt	r1, #4
   30724:	movw	r3, #63960	; 0xf9d8
   30728:	movt	r3, #4
   3072c:	movw	r2, #1493	; 0x5d5
   30730:	bl	14950 <__assert_fail@plt>

00030734 <flatcc_builder_offset_vector_edit@@Base>:
   30734:	ldr	r0, [r0, #16]
   30738:	bx	lr

0003073c <flatcc_builder_offset_vector_count@@Base>:
   3073c:	ldr	r0, [r0, #32]
   30740:	ldr	r0, [r0, #20]
   30744:	bx	lr

00030748 <flatcc_builder_table_add_union@@Base>:
   30748:	push	{r4, r5, r6, r7, fp, lr}
   3074c:	add	fp, sp, #16
   30750:	mov	r5, r0
   30754:	ldr	r0, [r0, #32]
   30758:	ldrh	r0, [r0, #14]
   3075c:	cmp	r0, #3
   30760:	bne	307d4 <flatcc_builder_table_add_union@@Base+0x8c>
   30764:	mov	r7, r3
   30768:	mov	r6, r1
   3076c:	uxtb	r4, r2
   30770:	cmp	r3, #0
   30774:	beq	30780 <flatcc_builder_table_add_union@@Base+0x38>
   30778:	cmp	r4, #0
   3077c:	beq	307f4 <flatcc_builder_table_add_union@@Base+0xac>
   30780:	cmp	r7, #0
   30784:	beq	307a0 <flatcc_builder_table_add_union@@Base+0x58>
   30788:	mov	r0, r5
   3078c:	mov	r1, r6
   30790:	bl	30854 <flatcc_builder_table_add_offset@@Base>
   30794:	cmp	r0, #0
   30798:	beq	30834 <flatcc_builder_table_add_union@@Base+0xec>
   3079c:	str	r7, [r0]
   307a0:	sub	r1, r6, #1
   307a4:	mov	r0, r5
   307a8:	mov	r2, #1
   307ac:	mov	r3, #1
   307b0:	bl	30918 <flatcc_builder_table_add@@Base>
   307b4:	cmp	r0, #0
   307b8:	beq	30814 <flatcc_builder_table_add_union@@Base+0xcc>
   307bc:	mov	r5, r0
   307c0:	mov	r0, r4
   307c4:	bl	309f8 <flatcc_builder_table_add@@Base+0xe0>
   307c8:	strb	r4, [r5]
   307cc:	mov	r0, #0
   307d0:	pop	{r4, r5, r6, r7, fp, pc}
   307d4:	movw	r0, #63320	; 0xf758
   307d8:	movt	r0, #4
   307dc:	movw	r1, #61251	; 0xef43
   307e0:	movt	r1, #4
   307e4:	movw	r3, #64074	; 0xfa4a
   307e8:	movt	r3, #4
   307ec:	movw	r2, #1518	; 0x5ee
   307f0:	bl	14950 <__assert_fail@plt>
   307f4:	movw	r0, #64162	; 0xfaa2
   307f8:	movt	r0, #4
   307fc:	movw	r1, #61251	; 0xef43
   30800:	movt	r1, #4
   30804:	movw	r3, #64074	; 0xfa4a
   30808:	movt	r3, #4
   3080c:	movw	r2, #1519	; 0x5ef
   30810:	bl	14950 <__assert_fail@plt>
   30814:	movw	r0, #64206	; 0xface
   30818:	movt	r0, #4
   3081c:	movw	r1, #61251	; 0xef43
   30820:	movt	r1, #4
   30824:	movw	r3, #64074	; 0xfa4a
   30828:	movt	r3, #4
   3082c:	movw	r2, #1526	; 0x5f6
   30830:	bl	14950 <__assert_fail@plt>
   30834:	movw	r0, #64196	; 0xfac4
   30838:	movt	r0, #4
   3083c:	movw	r1, #61251	; 0xef43
   30840:	movt	r1, #4
   30844:	movw	r3, #64074	; 0xfa4a
   30848:	movt	r3, #4
   3084c:	movw	r2, #1522	; 0x5f2
   30850:	bl	14950 <__assert_fail@plt>

00030854 <flatcc_builder_table_add_offset@@Base>:
   30854:	push	{fp, lr}
   30858:	mov	fp, sp
   3085c:	ldr	r2, [r0, #32]
   30860:	ldrh	r2, [r2, #14]
   30864:	cmp	r2, #3
   30868:	bne	308b8 <flatcc_builder_table_add_offset@@Base+0x64>
   3086c:	movw	r2, #32765	; 0x7ffd
   30870:	cmp	r1, r2
   30874:	bcs	308d8 <flatcc_builder_table_add_offset@@Base+0x84>
   30878:	ldr	r2, [r0, #4]
   3087c:	add	r2, r2, r1, lsl #1
   30880:	ldrh	r2, [r2]
   30884:	cmp	r2, #0
   30888:	bne	308f8 <flatcc_builder_table_add_offset@@Base+0xa4>
   3088c:	ldr	r2, [r0, #12]
   30890:	eor	r2, r2, r1
   30894:	movw	r3, #31153	; 0x79b1
   30898:	movt	r3, #40503	; 0x9e37
   3089c:	mul	r2, r2, r3
   308a0:	eor	r2, r2, #4
   308a4:	mul	r2, r2, r3
   308a8:	str	r2, [r0, #12]
   308ac:	uxth	r1, r1
   308b0:	pop	{fp, lr}
   308b4:	b	31224 <flatcc_builder_table_add_copy@@Base+0x40>
   308b8:	movw	r0, #63320	; 0xf758
   308bc:	movt	r0, #4
   308c0:	movw	r1, #61251	; 0xef43
   308c4:	movt	r1, #4
   308c8:	movw	r3, #65100	; 0xfe4c
   308cc:	movt	r3, #4
   308d0:	movw	r2, #1811	; 0x713
   308d4:	bl	14950 <__assert_fail@plt>
   308d8:	movw	r0, #64972	; 0xfdcc
   308dc:	movt	r0, #4
   308e0:	movw	r1, #61251	; 0xef43
   308e4:	movt	r1, #4
   308e8:	movw	r3, #65100	; 0xfe4c
   308ec:	movt	r3, #4
   308f0:	movw	r2, #1812	; 0x714
   308f4:	bl	14950 <__assert_fail@plt>
   308f8:	movw	r0, #24925	; 0x615d
   308fc:	movt	r0, #4
   30900:	movw	r1, #61251	; 0xef43
   30904:	movt	r1, #4
   30908:	movw	r3, #65100	; 0xfe4c
   3090c:	movt	r3, #4
   30910:	movw	r2, #1819	; 0x71b
   30914:	bl	14950 <__assert_fail@plt>

00030918 <flatcc_builder_table_add@@Base>:
   30918:	push	{fp, lr}
   3091c:	mov	fp, sp
   30920:	mov	ip, r3
   30924:	ldr	r3, [r0, #32]
   30928:	ldrh	r3, [r3, #14]
   3092c:	cmp	r3, #3
   30930:	bne	30998 <flatcc_builder_table_add@@Base+0x80>
   30934:	movw	r3, #32765	; 0x7ffd
   30938:	cmp	r1, r3
   3093c:	bcs	309b8 <flatcc_builder_table_add@@Base+0xa0>
   30940:	mov	lr, r2
   30944:	ldrh	r3, [r0, #130]	; 0x82
   30948:	cmp	r3, ip
   3094c:	strhcc	ip, [r0, #130]	; 0x82
   30950:	ldr	r3, [r0, #4]
   30954:	add	r3, r3, r1, lsl #1
   30958:	ldrh	r3, [r3]
   3095c:	cmp	r3, #0
   30960:	bne	309d8 <flatcc_builder_table_add@@Base+0xc0>
   30964:	ldr	r3, [r0, #12]
   30968:	eor	r3, r3, r1
   3096c:	movw	r2, #31153	; 0x79b1
   30970:	movt	r2, #40503	; 0x9e37
   30974:	mul	r3, r3, r2
   30978:	eor	r3, r3, lr
   3097c:	mul	r2, r3, r2
   30980:	str	r2, [r0, #12]
   30984:	uxth	r3, r1
   30988:	mov	r1, lr
   3098c:	mov	r2, ip
   30990:	pop	{fp, lr}
   30994:	b	31118 <flatcc_builder_string_len@@Base+0xc>
   30998:	movw	r0, #63320	; 0xf758
   3099c:	movt	r0, #4
   309a0:	movw	r1, #61251	; 0xef43
   309a4:	movt	r1, #4
   309a8:	movw	r3, #64898	; 0xfd82
   309ac:	movt	r3, #4
   309b0:	movw	r2, #1773	; 0x6ed
   309b4:	bl	14950 <__assert_fail@plt>
   309b8:	movw	r0, #64972	; 0xfdcc
   309bc:	movt	r0, #4
   309c0:	movw	r1, #61251	; 0xef43
   309c4:	movt	r1, #4
   309c8:	movw	r3, #64898	; 0xfd82
   309cc:	movt	r3, #4
   309d0:	movw	r2, #1774	; 0x6ee
   309d4:	bl	14950 <__assert_fail@plt>
   309d8:	movw	r0, #24925	; 0x615d
   309dc:	movt	r0, #4
   309e0:	movw	r1, #61251	; 0xef43
   309e4:	movt	r1, #4
   309e8:	movw	r3, #64898	; 0xfd82
   309ec:	movt	r3, #4
   309f0:	movw	r2, #1784	; 0x6f8
   309f4:	bl	14950 <__assert_fail@plt>
   309f8:	bx	lr

000309fc <flatcc_builder_table_add_union_vector@@Base>:
   309fc:	push	{r4, r5, r6, r7, fp, lr}
   30a00:	add	fp, sp, #16
   30a04:	mov	r6, r0
   30a08:	ldr	r0, [r0, #32]
   30a0c:	ldrh	r0, [r0, #14]
   30a10:	cmp	r0, #3
   30a14:	bne	30a7c <flatcc_builder_table_add_union_vector@@Base+0x80>
   30a18:	mov	r4, r3
   30a1c:	mov	r7, r2
   30a20:	mov	r5, r1
   30a24:	clz	r0, r3
   30a28:	lsr	r0, r0, #5
   30a2c:	clz	r1, r2
   30a30:	lsr	r1, r1, #5
   30a34:	cmp	r1, r0
   30a38:	bne	30a9c <flatcc_builder_table_add_union_vector@@Base+0xa0>
   30a3c:	cmp	r7, #0
   30a40:	beq	30a74 <flatcc_builder_table_add_union_vector@@Base+0x78>
   30a44:	sub	r1, r5, #1
   30a48:	mov	r0, r6
   30a4c:	bl	30854 <flatcc_builder_table_add_offset@@Base>
   30a50:	cmp	r0, #0
   30a54:	beq	30abc <flatcc_builder_table_add_union_vector@@Base+0xc0>
   30a58:	str	r7, [r0]
   30a5c:	mov	r0, r6
   30a60:	mov	r1, r5
   30a64:	bl	30854 <flatcc_builder_table_add_offset@@Base>
   30a68:	cmp	r0, #0
   30a6c:	beq	30adc <flatcc_builder_table_add_union_vector@@Base+0xe0>
   30a70:	str	r4, [r0]
   30a74:	mov	r0, #0
   30a78:	pop	{r4, r5, r6, r7, fp, pc}
   30a7c:	movw	r0, #63320	; 0xf758
   30a80:	movt	r0, #4
   30a84:	movw	r1, #61251	; 0xef43
   30a88:	movt	r1, #4
   30a8c:	movw	r3, #64218	; 0xfada
   30a90:	movt	r3, #4
   30a94:	mov	r2, #1536	; 0x600
   30a98:	bl	14950 <__assert_fail@plt>
   30a9c:	movw	r0, #64317	; 0xfb3d
   30aa0:	movt	r0, #4
   30aa4:	movw	r1, #61251	; 0xef43
   30aa8:	movt	r1, #4
   30aac:	movw	r3, #64218	; 0xfada
   30ab0:	movt	r3, #4
   30ab4:	movw	r2, #1537	; 0x601
   30ab8:	bl	14950 <__assert_fail@plt>
   30abc:	movw	r0, #64196	; 0xfac4
   30ac0:	movt	r0, #4
   30ac4:	movw	r1, #61251	; 0xef43
   30ac8:	movt	r1, #4
   30acc:	movw	r3, #64218	; 0xfada
   30ad0:	movt	r3, #4
   30ad4:	movw	r2, #1540	; 0x604
   30ad8:	bl	14950 <__assert_fail@plt>
   30adc:	movw	r0, #64196	; 0xfac4
   30ae0:	movt	r0, #4
   30ae4:	movw	r1, #61251	; 0xef43
   30ae8:	movt	r1, #4
   30aec:	movw	r3, #64218	; 0xfada
   30af0:	movt	r3, #4
   30af4:	movw	r2, #1544	; 0x608
   30af8:	bl	14950 <__assert_fail@plt>

00030afc <flatcc_builder_create_union_vector@@Base>:
   30afc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   30b00:	add	fp, sp, #24
   30b04:	sub	sp, sp, #16
   30b08:	mov	r6, r3
   30b0c:	mov	r7, r2
   30b10:	mov	r4, r1
   30b14:	mov	r5, r0
   30b18:	mov	r0, #0
   30b1c:	str	r0, [r5]
   30b20:	str	r0, [r5, #4]
   30b24:	mov	r0, r1
   30b28:	bl	2f8c0 <flatcc_builder_start_offset_vector@@Base>
   30b2c:	cmp	r0, #0
   30b30:	beq	30b3c <flatcc_builder_create_union_vector@@Base+0x40>
   30b34:	sub	sp, fp, #24
   30b38:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   30b3c:	mov	r0, r4
   30b40:	mov	r1, r6
   30b44:	bl	2f40c <flatcc_builder_extend_offset_vector@@Base>
   30b48:	cmp	r0, #0
   30b4c:	beq	30b34 <flatcc_builder_create_union_vector@@Base+0x38>
   30b50:	mov	r0, r4
   30b54:	mov	r1, r6
   30b58:	bl	2f188 <flatcc_builder_start_struct@@Base+0x84>
   30b5c:	cmp	r0, #0
   30b60:	beq	30b34 <flatcc_builder_create_union_vector@@Base+0x38>
   30b64:	mov	r8, r0
   30b68:	mov	r0, r4
   30b6c:	bl	30734 <flatcc_builder_offset_vector_edit@@Base>
   30b70:	mov	ip, r0
   30b74:	cmp	r6, #0
   30b78:	beq	30ba8 <flatcc_builder_create_union_vector@@Base+0xac>
   30b7c:	add	r0, r7, #4
   30b80:	mov	r1, r6
   30b84:	mov	r2, ip
   30b88:	mov	r7, r8
   30b8c:	ldrb	r3, [r0, #-4]
   30b90:	strb	r3, [r7], #1
   30b94:	ldr	r3, [r0]
   30b98:	str	r3, [r2], #4
   30b9c:	add	r0, r0, #8
   30ba0:	subs	r1, r1, #1
   30ba4:	bne	30b8c <flatcc_builder_create_union_vector@@Base+0x90>
   30ba8:	str	r6, [sp]
   30bac:	add	r0, sp, #8
   30bb0:	mov	r1, r4
   30bb4:	mov	r2, r8
   30bb8:	mov	r3, ip
   30bbc:	bl	30bdc <flatcc_builder_create_union_vector_direct@@Base>
   30bc0:	ldr	r0, [sp, #8]
   30bc4:	ldr	r1, [sp, #12]
   30bc8:	stm	r5, {r0, r1}
   30bcc:	mov	r0, r4
   30bd0:	bl	2f098 <flatcc_builder_end_buffer@@Base+0xc8>
   30bd4:	sub	sp, fp, #24
   30bd8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00030bdc <flatcc_builder_create_union_vector_direct@@Base>:
   30bdc:	push	{r4, r5, r6, r7, fp, lr}
   30be0:	add	fp, sp, #16
   30be4:	sub	sp, sp, #8
   30be8:	mov	r5, r2
   30bec:	mov	r6, r1
   30bf0:	mov	r4, r0
   30bf4:	mov	r0, #0
   30bf8:	str	r0, [r4]
   30bfc:	str	r0, [r4, #4]
   30c00:	ldr	r7, [fp, #8]
   30c04:	mov	r0, r1
   30c08:	mov	r1, r3
   30c0c:	mov	r2, r7
   30c10:	mov	r3, r5
   30c14:	bl	3051c <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   30c18:	str	r0, [r4, #4]
   30c1c:	cmp	r0, #0
   30c20:	beq	30c4c <flatcc_builder_create_union_vector_direct@@Base+0x70>
   30c24:	mvn	r0, #0
   30c28:	mov	r1, #1
   30c2c:	str	r1, [sp]
   30c30:	str	r0, [sp, #4]
   30c34:	mov	r0, r6
   30c38:	mov	r1, r5
   30c3c:	mov	r2, r7
   30c40:	mov	r3, #1
   30c44:	bl	30370 <flatcc_builder_create_vector@@Base>
   30c48:	str	r0, [r4]
   30c4c:	sub	sp, fp, #16
   30c50:	pop	{r4, r5, r6, r7, fp, pc}

00030c54 <flatcc_builder_start_union_vector@@Base>:
   30c54:	push	{r4, r5, fp, lr}
   30c58:	add	fp, sp, #8
   30c5c:	mov	r4, r0
   30c60:	mov	r1, #4
   30c64:	bl	2eed8 <flatcc_builder_start_buffer@@Base+0xbc>
   30c68:	mvn	r5, #0
   30c6c:	cmp	r0, #0
   30c70:	beq	30c7c <flatcc_builder_start_union_vector@@Base+0x28>
   30c74:	mov	r0, r5
   30c78:	pop	{r4, r5, fp, pc}
   30c7c:	ldr	r0, [r4, #32]
   30c80:	mov	r1, #8
   30c84:	str	r1, [r0, #16]
   30c88:	ldr	r0, [r4, #32]
   30c8c:	mov	r5, #0
   30c90:	str	r5, [r0, #20]
   30c94:	ldr	r0, [r4, #32]
   30c98:	mov	r1, #7
   30c9c:	strh	r1, [r0, #14]
   30ca0:	mov	r0, r4
   30ca4:	mvn	r1, #3
   30ca8:	bl	2f150 <flatcc_builder_start_struct@@Base+0x4c>
   30cac:	mov	r0, r5
   30cb0:	pop	{r4, r5, fp, pc}

00030cb4 <flatcc_builder_end_union_vector@@Base>:
   30cb4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   30cb8:	add	fp, sp, #24
   30cbc:	sub	sp, sp, #16
   30cc0:	mov	r9, r0
   30cc4:	mov	r0, #0
   30cc8:	str	r0, [r9]
   30ccc:	str	r0, [r9, #4]
   30cd0:	ldr	r0, [r1, #32]
   30cd4:	ldrh	r0, [r0, #14]
   30cd8:	cmp	r0, #7
   30cdc:	bne	30d7c <flatcc_builder_end_union_vector@@Base+0xc8>
   30ce0:	mov	r4, r1
   30ce4:	mov	r0, r1
   30ce8:	bl	30d9c <flatcc_builder_union_vector_count@@Base>
   30cec:	mov	r6, r0
   30cf0:	add	r1, r0, r0, lsl #2
   30cf4:	mov	r0, r4
   30cf8:	bl	2f188 <flatcc_builder_start_struct@@Base+0x84>
   30cfc:	cmp	r0, #0
   30d00:	beq	30d74 <flatcc_builder_end_union_vector@@Base+0xc0>
   30d04:	mov	r7, r0
   30d08:	add	r8, r0, r6, lsl #2
   30d0c:	mov	r0, r4
   30d10:	bl	30da8 <flatcc_builder_union_vector_edit@@Base>
   30d14:	cmp	r6, #0
   30d18:	beq	30d48 <flatcc_builder_end_union_vector@@Base+0x94>
   30d1c:	add	r0, r0, #4
   30d20:	mov	r1, r6
   30d24:	mov	r2, r7
   30d28:	mov	r3, r8
   30d2c:	ldrb	r5, [r0, #-4]
   30d30:	strb	r5, [r3], #1
   30d34:	ldr	r5, [r0]
   30d38:	str	r5, [r2], #4
   30d3c:	add	r0, r0, #8
   30d40:	subs	r1, r1, #1
   30d44:	bne	30d2c <flatcc_builder_end_union_vector@@Base+0x78>
   30d48:	str	r6, [sp]
   30d4c:	add	r0, sp, #8
   30d50:	mov	r1, r4
   30d54:	mov	r2, r8
   30d58:	mov	r3, r7
   30d5c:	bl	30bdc <flatcc_builder_create_union_vector_direct@@Base>
   30d60:	ldr	r0, [sp, #8]
   30d64:	ldr	r1, [sp, #12]
   30d68:	stm	r9, {r0, r1}
   30d6c:	mov	r0, r4
   30d70:	bl	2f098 <flatcc_builder_end_buffer@@Base+0xc8>
   30d74:	sub	sp, fp, #24
   30d78:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   30d7c:	movw	r0, #64357	; 0xfb65
   30d80:	movt	r0, #4
   30d84:	movw	r1, #61251	; 0xef43
   30d88:	movt	r1, #4
   30d8c:	movw	r3, #64407	; 0xfb97
   30d90:	movt	r3, #4
   30d94:	movw	r2, #1617	; 0x651
   30d98:	bl	14950 <__assert_fail@plt>

00030d9c <flatcc_builder_union_vector_count@@Base>:
   30d9c:	ldr	r0, [r0, #32]
   30da0:	ldr	r0, [r0, #20]
   30da4:	bx	lr

00030da8 <flatcc_builder_union_vector_edit@@Base>:
   30da8:	ldr	r0, [r0, #16]
   30dac:	bx	lr

00030db0 <flatcc_builder_extend_union_vector@@Base>:
   30db0:	push	{r4, r5, fp, lr}
   30db4:	add	fp, sp, #8
   30db8:	mov	r5, r1
   30dbc:	mov	r4, r0
   30dc0:	mvn	r2, #-536870912	; 0xe0000000
   30dc4:	bl	2f28c <flatcc_builder_extend_vector@@Base+0x44>
   30dc8:	mov	r1, r0
   30dcc:	mov	r0, #0
   30dd0:	cmp	r1, #0
   30dd4:	popne	{r4, r5, fp, pc}
   30dd8:	lsl	r1, r5, #3
   30ddc:	mov	r0, r4
   30de0:	bl	2f188 <flatcc_builder_start_struct@@Base+0x84>
   30de4:	pop	{r4, r5, fp, pc}

00030de8 <flatcc_builder_truncate_union_vector@@Base>:
   30de8:	push	{fp, lr}
   30dec:	mov	fp, sp
   30df0:	ldr	r2, [r0, #32]
   30df4:	ldrh	r3, [r2, #14]
   30df8:	cmp	r3, #7
   30dfc:	bne	30e2c <flatcc_builder_truncate_union_vector@@Base+0x44>
   30e00:	ldr	r3, [r2, #20]
   30e04:	cmp	r3, r1
   30e08:	bcc	30e4c <flatcc_builder_truncate_union_vector@@Base+0x64>
   30e0c:	sub	r3, r3, r1
   30e10:	str	r3, [r2, #20]
   30e14:	ldr	r2, [r0, #32]
   30e18:	ldr	r2, [r2, #16]
   30e1c:	mul	r1, r2, r1
   30e20:	bl	2f714 <flatcc_builder_truncate_vector@@Base+0x84>
   30e24:	mov	r0, #0
   30e28:	pop	{fp, pc}
   30e2c:	movw	r0, #64357	; 0xfb65
   30e30:	movt	r0, #4
   30e34:	movw	r1, #61251	; 0xef43
   30e38:	movt	r1, #4
   30e3c:	movw	r3, #64490	; 0xfbea
   30e40:	movt	r3, #4
   30e44:	movw	r2, #1665	; 0x681
   30e48:	bl	14950 <__assert_fail@plt>
   30e4c:	movw	r0, #62921	; 0xf5c9
   30e50:	movt	r0, #4
   30e54:	movw	r1, #61251	; 0xef43
   30e58:	movt	r1, #4
   30e5c:	movw	r3, #64490	; 0xfbea
   30e60:	movt	r3, #4
   30e64:	movw	r2, #1666	; 0x682
   30e68:	bl	14950 <__assert_fail@plt>

00030e6c <flatcc_builder_union_vector_push@@Base>:
   30e6c:	push	{r4, r5, r6, sl, fp, lr}
   30e70:	add	fp, sp, #16
   30e74:	mov	r4, r2
   30e78:	mov	r5, r1
   30e7c:	ldr	r1, [r0, #32]
   30e80:	ldrh	r2, [r1, #14]
   30e84:	cmp	r2, #7
   30e88:	bne	30ec4 <flatcc_builder_union_vector_push@@Base+0x58>
   30e8c:	ldr	r2, [r1, #20]
   30e90:	mov	r6, #0
   30e94:	cmn	r2, #-536870911	; 0xe0000001
   30e98:	beq	30ebc <flatcc_builder_union_vector_push@@Base+0x50>
   30e9c:	add	r2, r2, #1
   30ea0:	str	r2, [r1, #20]
   30ea4:	mov	r1, #8
   30ea8:	bl	2f188 <flatcc_builder_start_struct@@Base+0x84>
   30eac:	cmp	r0, #0
   30eb0:	strne	r5, [r0]
   30eb4:	strne	r4, [r0, #4]
   30eb8:	movne	r6, r0
   30ebc:	mov	r0, r6
   30ec0:	pop	{r4, r5, r6, sl, fp, pc}
   30ec4:	movw	r0, #64357	; 0xfb65
   30ec8:	movt	r0, #4
   30ecc:	movw	r1, #61251	; 0xef43
   30ed0:	movt	r1, #4
   30ed4:	movw	r3, #64559	; 0xfc2f
   30ed8:	movt	r3, #4
   30edc:	movw	r2, #1677	; 0x68d
   30ee0:	bl	14950 <__assert_fail@plt>

00030ee4 <flatcc_builder_append_union_vector@@Base>:
   30ee4:	push	{r4, r5, r6, sl, fp, lr}
   30ee8:	add	fp, sp, #16
   30eec:	mov	r6, r0
   30ef0:	ldr	r0, [r0, #32]
   30ef4:	ldrh	r0, [r0, #14]
   30ef8:	cmp	r0, #7
   30efc:	bne	30f3c <flatcc_builder_append_union_vector@@Base+0x58>
   30f00:	mov	r5, r2
   30f04:	mov	r4, r1
   30f08:	mov	r0, r6
   30f0c:	mov	r1, r2
   30f10:	mvn	r2, #-536870912	; 0xe0000000
   30f14:	bl	2f28c <flatcc_builder_extend_vector@@Base+0x44>
   30f18:	mov	r1, r0
   30f1c:	mov	r0, #0
   30f20:	cmp	r1, #0
   30f24:	popne	{r4, r5, r6, sl, fp, pc}
   30f28:	lsl	r2, r5, #3
   30f2c:	mov	r0, r6
   30f30:	mov	r1, r4
   30f34:	bl	2f354 <flatcc_builder_vector_push@@Base+0x80>
   30f38:	pop	{r4, r5, r6, sl, fp, pc}
   30f3c:	movw	r0, #64357	; 0xfb65
   30f40:	movt	r0, #4
   30f44:	movw	r1, #61251	; 0xef43
   30f48:	movt	r1, #4
   30f4c:	movw	r3, #64668	; 0xfc9c
   30f50:	movt	r3, #4
   30f54:	movw	r2, #1692	; 0x69c
   30f58:	bl	14950 <__assert_fail@plt>

00030f5c <flatcc_builder_create_string@@Base>:
   30f5c:	push	{r4, r5, r6, r7, fp, lr}
   30f60:	add	fp, sp, #16
   30f64:	sub	sp, sp, #80	; 0x50
   30f68:	mov	r5, r2
   30f6c:	mov	r6, r1
   30f70:	mov	r4, r0
   30f74:	mov	r0, r2
   30f78:	bl	2ead8 <flatcc_builder_embed_buffer@@Base+0x1dc>
   30f7c:	str	r5, [fp, #-20]	; 0xffffffec
   30f80:	add	r1, r5, #1
   30f84:	mov	r7, #4
   30f88:	mov	r0, r4
   30f8c:	mov	r2, #4
   30f90:	bl	2eac4 <flatcc_builder_embed_buffer@@Base+0x1c8>
   30f94:	str	r7, [sp, #4]
   30f98:	sub	r1, fp, #20
   30f9c:	str	r1, [sp, #12]
   30fa0:	str	r7, [sp, #16]
   30fa4:	mov	r1, #1
   30fa8:	str	r1, [sp, #8]
   30fac:	add	r0, r0, #1
   30fb0:	cmp	r5, #0
   30fb4:	beq	30fd0 <flatcc_builder_create_string@@Base+0x74>
   30fb8:	str	r6, [sp, #20]
   30fbc:	str	r5, [sp, #24]
   30fc0:	mov	r1, #2
   30fc4:	str	r1, [sp, #8]
   30fc8:	add	r1, r5, #4
   30fcc:	str	r1, [sp, #4]
   30fd0:	cmp	r0, #0
   30fd4:	beq	31004 <flatcc_builder_create_string@@Base+0xa8>
   30fd8:	ldmib	sp, {r1, r2}
   30fdc:	add	r1, r1, r0
   30fe0:	str	r1, [sp, #4]
   30fe4:	add	r1, sp, #4
   30fe8:	add	r1, r1, r2, lsl #3
   30fec:	movw	r3, #60721	; 0xed31
   30ff0:	movt	r3, #4
   30ff4:	str	r3, [r1, #8]
   30ff8:	str	r0, [r1, #12]
   30ffc:	add	r0, r2, #1
   31000:	str	r0, [sp, #8]
   31004:	add	r1, sp, #4
   31008:	mov	r0, r4
   3100c:	bl	2eadc <flatcc_builder_embed_buffer@@Base+0x1e0>
   31010:	sub	sp, fp, #16
   31014:	pop	{r4, r5, r6, r7, fp, pc}

00031018 <flatcc_builder_create_string_str@@Base>:
   31018:	push	{r4, r5, fp, lr}
   3101c:	add	fp, sp, #8
   31020:	mov	r4, r1
   31024:	mov	r5, r0
   31028:	mov	r0, r1
   3102c:	bl	14884 <strlen@plt>
   31030:	mov	r2, r0
   31034:	mov	r0, r5
   31038:	mov	r1, r4
   3103c:	pop	{r4, r5, fp, lr}
   31040:	b	30f5c <flatcc_builder_create_string@@Base>

00031044 <flatcc_builder_create_string_strn@@Base>:
   31044:	push	{r4, r5, fp, lr}
   31048:	add	fp, sp, #8
   3104c:	mov	r4, r1
   31050:	mov	r5, r0
   31054:	mov	r0, r1
   31058:	mov	r1, r2
   3105c:	bl	2f664 <flatcc_builder_append_string_strn@@Base+0x30>
   31060:	mov	r2, r0
   31064:	mov	r0, r5
   31068:	mov	r1, r4
   3106c:	pop	{r4, r5, fp, lr}
   31070:	b	30f5c <flatcc_builder_create_string@@Base>

00031074 <flatcc_builder_end_string@@Base>:
   31074:	push	{r4, r5, fp, lr}
   31078:	add	fp, sp, #8
   3107c:	mov	r4, r0
   31080:	ldr	r0, [r0, #32]
   31084:	ldrh	r1, [r0, #14]
   31088:	cmp	r1, #6
   3108c:	bne	310c4 <flatcc_builder_end_string@@Base+0x50>
   31090:	ldr	r2, [r4, #20]
   31094:	ldr	r0, [r0, #20]
   31098:	cmp	r0, r2
   3109c:	bne	310e4 <flatcc_builder_end_string@@Base+0x70>
   310a0:	ldr	r1, [r4, #16]
   310a4:	mov	r0, r4
   310a8:	bl	30f5c <flatcc_builder_create_string@@Base>
   310ac:	mov	r5, r0
   310b0:	cmp	r0, #0
   310b4:	movne	r0, r4
   310b8:	blne	2f098 <flatcc_builder_end_buffer@@Base+0xc8>
   310bc:	mov	r0, r5
   310c0:	pop	{r4, r5, fp, pc}
   310c4:	movw	r0, #62568	; 0xf468
   310c8:	movt	r0, #4
   310cc:	movw	r1, #61251	; 0xef43
   310d0:	movt	r1, #4
   310d4:	movw	r3, #64795	; 0xfd1b
   310d8:	movt	r3, #4
   310dc:	movw	r2, #1732	; 0x6c4
   310e0:	bl	14950 <__assert_fail@plt>
   310e4:	movw	r0, #64862	; 0xfd5e
   310e8:	movt	r0, #4
   310ec:	movw	r1, #61251	; 0xef43
   310f0:	movt	r1, #4
   310f4:	movw	r3, #64795	; 0xfd1b
   310f8:	movt	r3, #4
   310fc:	movw	r2, #1733	; 0x6c5
   31100:	bl	14950 <__assert_fail@plt>

00031104 <flatcc_builder_string_edit@@Base>:
   31104:	ldr	r0, [r0, #16]
   31108:	bx	lr

0003110c <flatcc_builder_string_len@@Base>:
   3110c:	ldr	r0, [r0, #32]
   31110:	ldr	r0, [r0, #20]
   31114:	bx	lr
   31118:	push	{r4, r5, r6, sl, fp, lr}
   3111c:	add	fp, sp, #16
   31120:	mov	r5, r3
   31124:	mov	r4, r0
   31128:	ldr	r0, [r0, #20]
   3112c:	ldr	r3, [r4, #24]
   31130:	add	r0, r2, r0
   31134:	sub	r0, r0, #1
   31138:	rsb	r2, r2, #0
   3113c:	and	r6, r0, r2
   31140:	add	r0, r6, r1
   31144:	str	r0, [r4, #20]
   31148:	cmp	r0, r3
   3114c:	bcc	31170 <flatcc_builder_string_len@@Base+0x64>
   31150:	add	r1, r0, #1
   31154:	mov	r0, r4
   31158:	movw	r2, #65532	; 0xfffc
   3115c:	bl	315bc <flatcc_builder_get_emit_context@@Base+0x18>
   31160:	mov	r1, r0
   31164:	mov	r0, #0
   31168:	cmp	r1, #0
   3116c:	popne	{r4, r5, r6, sl, fp, pc}
   31170:	ldr	r0, [r4, #4]
   31174:	add	r0, r0, r5, lsl #1
   31178:	add	r1, r6, #4
   3117c:	strh	r1, [r0]
   31180:	ldrh	r0, [r4, #8]
   31184:	cmp	r0, r5
   31188:	addls	r0, r5, #1
   3118c:	strhls	r0, [r4, #8]
   31190:	ldr	r0, [r4, #16]
   31194:	add	r0, r0, r6
   31198:	pop	{r4, r5, r6, sl, fp, pc}

0003119c <flatcc_builder_table_edit@@Base>:
   3119c:	ldr	r2, [r0, #32]
   311a0:	ldrh	r2, [r2, #14]
   311a4:	cmp	r2, #3
   311a8:	ldreq	r2, [r0, #16]
   311ac:	ldreq	r0, [r0, #20]
   311b0:	addeq	r0, r2, r0
   311b4:	subeq	r0, r0, r1
   311b8:	bxeq	lr
   311bc:	push	{fp, lr}
   311c0:	mov	fp, sp
   311c4:	movw	r0, #63320	; 0xf758
   311c8:	movt	r0, #4
   311cc:	movw	r1, #61251	; 0xef43
   311d0:	movt	r1, #4
   311d4:	movw	r3, #65040	; 0xfe10
   311d8:	movt	r3, #4
   311dc:	movw	r2, #1794	; 0x702
   311e0:	bl	14950 <__assert_fail@plt>

000311e4 <flatcc_builder_table_add_copy@@Base>:
   311e4:	push	{r4, r5, r6, sl, fp, lr}
   311e8:	add	fp, sp, #16
   311ec:	mov	r4, r3
   311f0:	mov	r5, r2
   311f4:	ldr	r3, [fp, #8]
   311f8:	mov	r2, r4
   311fc:	bl	30918 <flatcc_builder_table_add@@Base>
   31200:	mov	r6, r0
   31204:	cmp	r0, #0
   31208:	beq	3121c <flatcc_builder_table_add_copy@@Base+0x38>
   3120c:	mov	r0, r6
   31210:	mov	r1, r5
   31214:	mov	r2, r4
   31218:	bl	147e8 <memcpy@plt>
   3121c:	mov	r0, r6
   31220:	pop	{r4, r5, r6, sl, fp, pc}
   31224:	push	{r4, r5, r6, r7, fp, lr}
   31228:	add	fp, sp, #16
   3122c:	mov	r5, r1
   31230:	mov	r4, r0
   31234:	ldr	r0, [r0, #20]
   31238:	ldr	r1, [r4, #24]
   3123c:	add	r0, r0, #3
   31240:	bic	r7, r0, #3
   31244:	add	r6, r7, #4
   31248:	str	r6, [r4, #20]
   3124c:	cmp	r6, r1
   31250:	bls	31274 <flatcc_builder_table_add_copy@@Base+0x90>
   31254:	mov	r0, r4
   31258:	mov	r1, r6
   3125c:	movw	r2, #65532	; 0xfffc
   31260:	bl	315bc <flatcc_builder_get_emit_context@@Base+0x18>
   31264:	mov	r1, r0
   31268:	mov	r0, #0
   3126c:	cmp	r1, #0
   31270:	popne	{r4, r5, r6, r7, fp, pc}
   31274:	ldr	r0, [r4, #4]
   31278:	add	r0, r0, r5, lsl #1
   3127c:	strh	r6, [r0]
   31280:	ldrh	r0, [r4, #8]
   31284:	cmp	r0, r5
   31288:	addls	r0, r5, #1
   3128c:	strhls	r0, [r4, #8]
   31290:	ldr	r0, [r4]
   31294:	add	r1, r0, #2
   31298:	str	r1, [r4]
   3129c:	strh	r7, [r0]
   312a0:	ldr	r0, [r4, #16]
   312a4:	add	r0, r0, r7
   312a8:	pop	{r4, r5, r6, r7, fp, pc}

000312ac <flatcc_builder_push_buffer_alignment@@Base>:
   312ac:	ldrh	r1, [r0, #128]	; 0x80
   312b0:	mov	r2, #4
   312b4:	strh	r2, [r0, #128]	; 0x80
   312b8:	mov	r0, r1
   312bc:	bx	lr

000312c0 <flatcc_builder_pop_buffer_alignment@@Base>:
   312c0:	b	2ed40 <flatcc_builder_create_buffer@@Base+0x1d0>

000312c4 <flatcc_builder_get_buffer_alignment@@Base>:
   312c4:	ldrh	r0, [r0, #128]	; 0x80
   312c8:	bx	lr

000312cc <flatcc_builder_set_vtable_clustering@@Base>:
   312cc:	clz	r1, r1
   312d0:	lsr	r1, r1, #5
   312d4:	str	r1, [r0, #180]	; 0xb4
   312d8:	bx	lr

000312dc <flatcc_builder_set_block_align@@Base>:
   312dc:	strh	r1, [r0, #132]	; 0x84
   312e0:	bx	lr

000312e4 <flatcc_builder_get_level@@Base>:
   312e4:	ldr	r0, [r0, #156]	; 0x9c
   312e8:	bx	lr

000312ec <flatcc_builder_set_max_level@@Base>:
   312ec:	str	r1, [r0, #176]	; 0xb0
   312f0:	ldr	r2, [r0, #160]	; 0xa0
   312f4:	cmp	r2, r1
   312f8:	strlt	r1, [r0, #160]	; 0xa0
   312fc:	bx	lr

00031300 <flatcc_builder_get_buffer_size@@Base>:
   31300:	ldr	r1, [r0, #136]	; 0x88
   31304:	ldr	r0, [r0, #140]	; 0x8c
   31308:	sub	r0, r0, r1
   3130c:	bx	lr

00031310 <flatcc_builder_get_buffer_start@@Base>:
   31310:	ldr	r0, [r0, #136]	; 0x88
   31314:	bx	lr

00031318 <flatcc_builder_get_buffer_end@@Base>:
   31318:	ldr	r0, [r0, #140]	; 0x8c
   3131c:	bx	lr

00031320 <flatcc_builder_set_vtable_cache_limit@@Base>:
   31320:	str	r1, [r0, #172]	; 0xac
   31324:	bx	lr

00031328 <flatcc_builder_set_identifier@@Base>:
   31328:	movw	r2, #60721	; 0xed31
   3132c:	movt	r2, #4
   31330:	cmp	r1, #0
   31334:	movne	r2, r1
   31338:	ldr	r1, [r2]
   3133c:	str	r1, [r0, #168]	; 0xa8
   31340:	bx	lr

00031344 <flatcc_builder_get_type@@Base>:
   31344:	ldr	r0, [r0, #32]
   31348:	cmp	r0, #0
   3134c:	ldrhne	r0, [r0, #14]
   31350:	moveq	r0, #0
   31354:	bx	lr

00031358 <flatcc_builder_get_type_at@@Base>:
   31358:	mov	r2, r0
   3135c:	mov	r0, #0
   31360:	cmp	r1, #1
   31364:	ldrge	r3, [r2, #156]	; 0x9c
   31368:	cmpge	r3, r1
   3136c:	bge	31374 <flatcc_builder_get_type_at@@Base+0x1c>
   31370:	bx	lr
   31374:	sub	r0, r1, r3
   31378:	add	r0, r0, r0, lsl #3
   3137c:	ldr	r1, [r2, #32]
   31380:	add	r0, r1, r0, lsl #2
   31384:	ldrh	r0, [r0, #14]
   31388:	bx	lr

0003138c <flatcc_builder_get_direct_buffer@@Base>:
   3138c:	ldr	r2, [r0, #184]	; 0xb8
   31390:	cmp	r2, #0
   31394:	beq	313a0 <flatcc_builder_get_direct_buffer@@Base+0x14>
   31398:	add	r0, r0, #188	; 0xbc
   3139c:	b	313b4 <flatcc_builder_get_direct_buffer@@Base+0x28>
   313a0:	cmp	r1, #0
   313a4:	movne	r0, #0
   313a8:	strne	r0, [r1]
   313ac:	mov	r0, #0
   313b0:	bx	lr
   313b4:	ldm	r0, {r2, r3}
   313b8:	cmp	r2, r3
   313bc:	beq	313d0 <flatcc_builder_get_direct_buffer@@Base+0x44>
   313c0:	mov	r0, #0
   313c4:	cmp	r1, #0
   313c8:	strne	r0, [r1]
   313cc:	bx	lr
   313d0:	cmp	r1, #0
   313d4:	ldrne	r2, [r0, #24]
   313d8:	strne	r2, [r1]
   313dc:	ldr	r0, [r0, #8]
   313e0:	bx	lr

000313e4 <flatcc_builder_copy_buffer@@Base>:
   313e4:	push	{fp, lr}
   313e8:	mov	fp, sp
   313ec:	ldr	r3, [r0, #184]	; 0xb8
   313f0:	cmp	r3, #0
   313f4:	beq	31428 <flatcc_builder_copy_buffer@@Base+0x44>
   313f8:	add	r0, r0, #188	; 0xbc
   313fc:	bl	31b00 <flatcc_emitter_copy_buffer@@Base>
   31400:	cmp	r0, #0
   31404:	popne	{fp, pc}
   31408:	movw	r0, #61847	; 0xf197
   3140c:	movt	r0, #4
   31410:	movw	r1, #61251	; 0xef43
   31414:	movt	r1, #4
   31418:	movw	r3, #65179	; 0xfe9b
   3141c:	movt	r3, #4
   31420:	movw	r2, #1926	; 0x786
   31424:	bl	14950 <__assert_fail@plt>
   31428:	mov	r0, #0
   3142c:	pop	{fp, pc}

00031430 <flatcc_builder_finalize_buffer@@Base>:
   31430:	push	{r4, r5, r6, sl, fp, lr}
   31434:	add	fp, sp, #16
   31438:	mov	r6, r1
   3143c:	mov	r4, r0
   31440:	bl	31300 <flatcc_builder_get_buffer_size@@Base>
   31444:	mov	r5, r0
   31448:	cmp	r6, #0
   3144c:	strne	r5, [r6]
   31450:	mov	r0, r5
   31454:	bl	14848 <malloc@plt>
   31458:	cmp	r0, #0
   3145c:	beq	314a0 <flatcc_builder_finalize_buffer@@Base+0x70>
   31460:	mov	r6, r0
   31464:	mov	r0, r4
   31468:	mov	r1, r6
   3146c:	mov	r2, r5
   31470:	bl	313e4 <flatcc_builder_copy_buffer@@Base>
   31474:	cmp	r0, #0
   31478:	movne	r0, r6
   3147c:	popne	{r4, r5, r6, sl, fp, pc}
   31480:	movw	r0, #24925	; 0x615d
   31484:	movt	r0, #4
   31488:	movw	r1, #61251	; 0xef43
   3148c:	movt	r1, #4
   31490:	movw	r3, #65248	; 0xfee0
   31494:	movt	r3, #4
   31498:	movw	r2, #1948	; 0x79c
   3149c:	bl	14950 <__assert_fail@plt>
   314a0:	movw	r0, #24925	; 0x615d
   314a4:	movt	r0, #4
   314a8:	movw	r1, #61251	; 0xef43
   314ac:	movt	r1, #4
   314b0:	movw	r3, #65248	; 0xfee0
   314b4:	movt	r3, #4
   314b8:	movw	r2, #1944	; 0x798
   314bc:	bl	14950 <__assert_fail@plt>

000314c0 <flatcc_builder_finalize_aligned_buffer@@Base>:
   314c0:	push	{r4, r5, r6, r7, fp, lr}
   314c4:	add	fp, sp, #16
   314c8:	mov	r4, r1
   314cc:	mov	r5, r0
   314d0:	bl	31300 <flatcc_builder_get_buffer_size@@Base>
   314d4:	mov	r6, r0
   314d8:	cmp	r4, #0
   314dc:	strne	r6, [r4]
   314e0:	mov	r0, r5
   314e4:	bl	312c4 <flatcc_builder_get_buffer_alignment@@Base>
   314e8:	add	r1, r6, r0
   314ec:	sub	r1, r1, #1
   314f0:	rsb	r2, r0, #0
   314f4:	and	r7, r1, r2
   314f8:	mov	r1, r7
   314fc:	bl	31548 <flatcc_builder_finalize_aligned_buffer@@Base+0x88>
   31500:	cmp	r0, #0
   31504:	beq	31534 <flatcc_builder_finalize_aligned_buffer@@Base+0x74>
   31508:	mov	r6, r0
   3150c:	mov	r0, r5
   31510:	mov	r1, r6
   31514:	mov	r2, r7
   31518:	bl	313e4 <flatcc_builder_copy_buffer@@Base>
   3151c:	cmp	r0, #0
   31520:	beq	3152c <flatcc_builder_finalize_aligned_buffer@@Base+0x6c>
   31524:	mov	r0, r6
   31528:	pop	{r4, r5, r6, r7, fp, pc}
   3152c:	mov	r0, r6
   31530:	bl	147dc <free@plt>
   31534:	mov	r6, #0
   31538:	cmp	r4, #0
   3153c:	strne	r6, [r4]
   31540:	mov	r0, r6
   31544:	pop	{r4, r5, r6, r7, fp, pc}
   31548:	push	{fp, lr}
   3154c:	mov	fp, sp
   31550:	sub	sp, sp, #8
   31554:	mov	r2, r1
   31558:	mov	r1, r0
   3155c:	mov	r0, #0
   31560:	str	r0, [sp, #4]
   31564:	cmp	r1, #4
   31568:	movls	r1, #4
   3156c:	add	r0, sp, #4
   31570:	bl	1489c <posix_memalign@plt>
   31574:	cmp	r0, #0
   31578:	ldrne	r0, [sp, #4]
   3157c:	cmpne	r0, #0
   31580:	beq	31590 <flatcc_builder_finalize_aligned_buffer@@Base+0xd0>
   31584:	bl	147dc <free@plt>
   31588:	mov	r0, #0
   3158c:	str	r0, [sp, #4]
   31590:	ldr	r0, [sp, #4]
   31594:	mov	sp, fp
   31598:	pop	{fp, pc}

0003159c <flatcc_builder_aligned_alloc@@Base>:
   3159c:	b	31548 <flatcc_builder_finalize_aligned_buffer@@Base+0x88>

000315a0 <flatcc_builder_aligned_free@@Base>:
   315a0:	b	147dc <free@plt>

000315a4 <flatcc_builder_get_emit_context@@Base>:
   315a4:	ldr	r0, [r0, #36]	; 0x24
   315a8:	bx	lr
   315ac:	ldr	r0, [r0, #140]	; 0x8c
   315b0:	sub	r1, r1, #1
   315b4:	and	r0, r0, r1
   315b8:	bx	lr
   315bc:	push	{r4, r5, r6, sl, fp, lr}
   315c0:	add	fp, sp, #16
   315c4:	sub	sp, sp, #8
   315c8:	mov	r6, r2
   315cc:	mov	r5, r0
   315d0:	ldr	r2, [r0, #28]
   315d4:	ldr	r0, [r0, #40]	; 0x28
   315d8:	ldr	r4, [r5, #48]	; 0x30
   315dc:	mov	r3, #1
   315e0:	str	r3, [sp]
   315e4:	add	r2, r2, r1
   315e8:	add	r1, r5, #60	; 0x3c
   315ec:	mov	r3, #1
   315f0:	blx	r4
   315f4:	mov	r1, r0
   315f8:	mvn	r0, #0
   315fc:	cmp	r1, #0
   31600:	beq	3160c <flatcc_builder_get_emit_context@@Base+0x68>
   31604:	sub	sp, fp, #16
   31608:	pop	{r4, r5, r6, sl, fp, pc}
   3160c:	mov	r0, r5
   31610:	mov	r1, r6
   31614:	bl	2f150 <flatcc_builder_start_struct@@Base+0x4c>
   31618:	mov	r0, #0
   3161c:	sub	sp, fp, #16
   31620:	pop	{r4, r5, r6, sl, fp, pc}
   31624:	push	{r4, r5, r6, sl, fp, lr}
   31628:	add	fp, sp, #16
   3162c:	sub	sp, sp, #8
   31630:	ldr	r2, [r0, #124]	; 0x7c
   31634:	cmp	r2, #0
   31638:	bne	316d8 <flatcc_builder_get_emit_context@@Base+0x134>
   3163c:	mov	r4, r0
   31640:	mov	r0, #0
   31644:	str	r0, [sp]
   31648:	mov	r6, #16
   3164c:	mov	r0, r4
   31650:	mov	r1, #6
   31654:	mov	r3, #16
   31658:	bl	2e76c <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   3165c:	mvn	r5, #0
   31660:	cmp	r0, #0
   31664:	beq	316cc <flatcc_builder_get_emit_context@@Base+0x128>
   31668:	add	r1, r4, #92	; 0x5c
   3166c:	str	r6, [r4, #124]	; 0x7c
   31670:	ldr	r0, [r4, #40]	; 0x28
   31674:	ldr	ip, [r4, #48]	; 0x30
   31678:	mov	r2, #5
   3167c:	str	r2, [sp]
   31680:	mov	r6, #256	; 0x100
   31684:	mov	r2, #256	; 0x100
   31688:	mov	r3, #1
   3168c:	blx	ip
   31690:	cmp	r0, #0
   31694:	bne	316cc <flatcc_builder_get_emit_context@@Base+0x128>
   31698:	ldr	r0, [r4, #96]	; 0x60
   3169c:	mov	r1, r6
   316a0:	lsl	r6, r6, #1
   316a4:	cmp	r0, r1, lsl #1
   316a8:	bcs	3169c <flatcc_builder_get_emit_context@@Base+0xf8>
   316ac:	lsr	r1, r1, #2
   316b0:	mvn	r0, #0
   316b4:	mov	r2, #1
   316b8:	add	r0, r0, #1
   316bc:	cmp	r1, r2, lsl r0
   316c0:	bhi	316b8 <flatcc_builder_get_emit_context@@Base+0x114>
   316c4:	str	r0, [r4, #116]	; 0x74
   316c8:	mov	r5, #0
   316cc:	mov	r0, r5
   316d0:	sub	sp, fp, #16
   316d4:	pop	{r4, r5, r6, sl, fp, pc}
   316d8:	movw	r0, #173	; 0xad
   316dc:	movt	r0, #5
   316e0:	movw	r1, #61251	; 0xef43
   316e4:	movt	r1, #4
   316e8:	movw	r3, #188	; 0xbc
   316ec:	movt	r3, #5
   316f0:	movw	r2, #342	; 0x156
   316f4:	bl	14950 <__assert_fail@plt>

000316f8 <flatcc_emitter_recycle_page@@Base>:
   316f8:	ldr	ip, [r0]
   316fc:	mvn	r2, #0
   31700:	cmp	ip, r1
   31704:	ldrne	r3, [r0, #4]
   31708:	cmpne	r3, r1
   3170c:	bne	31718 <flatcc_emitter_recycle_page@@Base+0x20>
   31710:	mov	r0, r2
   31714:	bx	lr
   31718:	ldr	r2, [r1, #2944]	; 0xb80
   3171c:	ldr	r3, [r1, #2948]	; 0xb84
   31720:	str	r3, [r2, #2948]	; 0xb84
   31724:	ldr	r2, [r1, #2944]	; 0xb80
   31728:	ldr	r3, [r1, #2948]	; 0xb84
   3172c:	str	r2, [r3, #2944]	; 0xb80
   31730:	ldr	r2, [ip, #2948]	; 0xb84
   31734:	str	r2, [r1, #2948]	; 0xb84
   31738:	ldr	r0, [r0]
   3173c:	str	r0, [r1, #2944]	; 0xb80
   31740:	str	r1, [r2, #2944]	; 0xb80
   31744:	ldr	r0, [r1, #2944]	; 0xb80
   31748:	str	r1, [r0, #2948]	; 0xb84
   3174c:	mov	r2, #0
   31750:	mov	r0, r2
   31754:	bx	lr

00031758 <flatcc_emitter_reset@@Base>:
   31758:	push	{r4, sl, fp, lr}
   3175c:	add	fp, sp, #8
   31760:	mov	r4, r0
   31764:	ldr	r0, [r0]
   31768:	cmp	r0, #0
   3176c:	beq	31810 <flatcc_emitter_reset@@Base+0xb8>
   31770:	mov	r1, #1472	; 0x5c0
   31774:	add	r2, r0, #1472	; 0x5c0
   31778:	stmib	r4, {r0, r2}
   3177c:	str	r1, [r4, #12]
   31780:	str	r2, [r4, #16]
   31784:	str	r1, [r4, #20]
   31788:	movw	r1, #64064	; 0xfa40
   3178c:	movt	r1, #65535	; 0xffff
   31790:	str	r1, [r0, #2952]	; 0xb88
   31794:	ldr	r0, [r4, #32]
   31798:	cmp	r0, #0
   3179c:	ldreq	r0, [r4, #24]
   317a0:	streq	r0, [r4, #32]
   317a4:	add	r2, r4, #24
   317a8:	ldm	r2, {r0, r1, r2}
   317ac:	mov	r3, #0
   317b0:	str	r3, [r4, #24]
   317b4:	add	r2, r2, r2, lsl #1
   317b8:	lsr	r2, r2, #2
   317bc:	add	r0, r2, r0, lsr #2
   317c0:	str	r0, [r4, #32]
   317c4:	cmp	r1, r0, lsl #1
   317c8:	bls	31810 <flatcc_emitter_reset@@Base+0xb8>
   317cc:	ldr	r2, [r4]
   317d0:	ldr	r1, [r4, #4]
   317d4:	ldr	r0, [r1, #2944]	; 0xb80
   317d8:	cmp	r0, r2
   317dc:	popeq	{r4, sl, fp, pc}
   317e0:	ldr	r2, [r0, #2944]	; 0xb80
   317e4:	str	r2, [r1, #2944]	; 0xb80
   317e8:	ldr	r1, [r0, #2944]	; 0xb80
   317ec:	ldr	r2, [r4, #4]
   317f0:	str	r2, [r1, #2948]	; 0xb84
   317f4:	bl	147dc <free@plt>
   317f8:	ldr	r0, [r4, #28]
   317fc:	ldr	r1, [r4, #32]
   31800:	sub	r0, r0, #2944	; 0xb80
   31804:	str	r0, [r4, #28]
   31808:	cmp	r0, r1, lsl #1
   3180c:	bhi	317cc <flatcc_emitter_reset@@Base+0x74>
   31810:	pop	{r4, sl, fp, pc}

00031814 <flatcc_emitter_clear@@Base>:
   31814:	push	{r4, r5, r6, sl, fp, lr}
   31818:	add	fp, sp, #16
   3181c:	ldr	r5, [r0]
   31820:	cmp	r5, #0
   31824:	popeq	{r4, r5, r6, sl, fp, pc}
   31828:	mov	r4, r0
   3182c:	ldr	r0, [r5, #2948]	; 0xb84
   31830:	mov	r6, #0
   31834:	str	r6, [r0, #2944]	; 0xb80
   31838:	b	31848 <flatcc_emitter_clear@@Base+0x34>
   3183c:	mov	r5, r0
   31840:	ldr	r0, [r0, #2948]	; 0xb84
   31844:	bl	147dc <free@plt>
   31848:	ldr	r0, [r5, #2944]	; 0xb80
   3184c:	cmp	r0, #0
   31850:	bne	3183c <flatcc_emitter_clear@@Base+0x28>
   31854:	mov	r0, r5
   31858:	bl	147dc <free@plt>
   3185c:	vmov.i32	q8, #0	; 0x00000000
   31860:	add	r0, r4, #16
   31864:	vst1.32	{d16-d17}, [r0]
   31868:	mov	r0, #32
   3186c:	vst1.32	{d16-d17}, [r4], r0
   31870:	str	r6, [r4]
   31874:	pop	{r4, r5, r6, sl, fp, pc}

00031878 <flatcc_emitter@@Base>:
   31878:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3187c:	add	fp, sp, #24
   31880:	mov	r4, r2
   31884:	mov	r5, r1
   31888:	mov	r6, r0
   3188c:	ldr	r1, [r0, #24]
   31890:	ldr	r0, [fp, #8]
   31894:	add	r1, r1, r0
   31898:	str	r1, [r6, #24]
   3189c:	mov	r1, r6
   318a0:	cmn	r3, #1
   318a4:	ble	318e4 <flatcc_emitter@@Base+0x6c>
   318a8:	ldr	r2, [r1, #20]!
   318ac:	cmp	r2, r0
   318b0:	bcs	3192c <flatcc_emitter@@Base+0xb4>
   318b4:	mov	r8, #0
   318b8:	cmp	r4, #0
   318bc:	beq	3197c <flatcc_emitter@@Base+0x104>
   318c0:	ldm	r5, {r1, r2}
   318c4:	mov	r0, r6
   318c8:	bl	31a48 <flatcc_emitter@@Base+0x1d0>
   318cc:	cmp	r0, #0
   318d0:	bne	31920 <flatcc_emitter@@Base+0xa8>
   318d4:	subs	r4, r4, #1
   318d8:	add	r5, r5, #8
   318dc:	bne	318c0 <flatcc_emitter@@Base+0x48>
   318e0:	b	3197c <flatcc_emitter@@Base+0x104>
   318e4:	ldr	r2, [r1, #12]!
   318e8:	cmp	r2, r0
   318ec:	bcs	3193c <flatcc_emitter@@Base+0xc4>
   318f0:	add	r0, r5, r4, lsl #3
   318f4:	sub	r5, r0, #4
   318f8:	rsb	r4, r4, #1
   318fc:	cmp	r4, #1
   31900:	beq	31984 <flatcc_emitter@@Base+0x10c>
   31904:	ldmda	r5, {r1, r2}
   31908:	mov	r0, r6
   3190c:	bl	31990 <flatcc_emitter@@Base+0x118>
   31910:	sub	r5, r5, #8
   31914:	add	r4, r4, #1
   31918:	cmp	r0, #0
   3191c:	beq	318fc <flatcc_emitter@@Base+0x84>
   31920:	mvn	r8, #0
   31924:	mov	r0, r8
   31928:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3192c:	ldr	r7, [r6, #16]
   31930:	add	r3, r7, r0
   31934:	str	r3, [r6, #16]
   31938:	b	31948 <flatcc_emitter@@Base+0xd0>
   3193c:	ldr	r3, [r6, #8]
   31940:	sub	r7, r3, r0
   31944:	str	r7, [r6, #8]
   31948:	sub	r0, r2, r0
   3194c:	str	r0, [r1]
   31950:	mov	r8, #0
   31954:	cmp	r4, #0
   31958:	beq	3197c <flatcc_emitter@@Base+0x104>
   3195c:	ldm	r5, {r1, r2}
   31960:	mov	r0, r7
   31964:	bl	147e8 <memcpy@plt>
   31968:	ldr	r0, [r5, #4]
   3196c:	add	r7, r7, r0
   31970:	add	r5, r5, #8
   31974:	subs	r4, r4, #1
   31978:	bne	3195c <flatcc_emitter@@Base+0xe4>
   3197c:	mov	r0, r8
   31980:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   31984:	mov	r8, #0
   31988:	mov	r0, r8
   3198c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   31990:	push	{r4, r5, r6, r7, fp, lr}
   31994:	add	fp, sp, #16
   31998:	cmp	r2, #0
   3199c:	moveq	r0, #0
   319a0:	popeq	{r4, r5, r6, r7, fp, pc}
   319a4:	mov	r4, r2
   319a8:	mov	r5, r0
   319ac:	clz	r0, r2
   319b0:	lsr	r7, r0, #5
   319b4:	add	r6, r1, r2
   319b8:	b	319f4 <flatcc_emitter@@Base+0x17c>
   319bc:	sub	r0, r0, r7
   319c0:	str	r0, [r5, #12]
   319c4:	ldr	r0, [r5, #8]
   319c8:	sub	r0, r0, r7
   319cc:	str	r0, [r5, #8]
   319d0:	sub	r6, r6, r7
   319d4:	mov	r1, r6
   319d8:	mov	r2, r7
   319dc:	bl	147e8 <memcpy@plt>
   319e0:	subs	r4, r4, r7
   319e4:	clz	r0, r4
   319e8:	lsr	r7, r0, #5
   319ec:	moveq	r0, #0
   319f0:	popeq	{r4, r5, r6, r7, fp, pc}
   319f4:	ldr	r0, [r5, #12]
   319f8:	cmp	r4, r0
   319fc:	bls	31a2c <flatcc_emitter@@Base+0x1b4>
   31a00:	cmp	r0, #0
   31a04:	bne	31a34 <flatcc_emitter@@Base+0x1bc>
   31a08:	mov	r0, r5
   31a0c:	bl	31bbc <flatcc_emitter_copy_buffer@@Base+0xbc>
   31a10:	cmp	r0, #0
   31a14:	mov	r1, r0
   31a18:	movwne	r1, #1
   31a1c:	orr	r1, r1, r7
   31a20:	tst	r1, #1
   31a24:	beq	319f4 <flatcc_emitter@@Base+0x17c>
   31a28:	b	31a3c <flatcc_emitter@@Base+0x1c4>
   31a2c:	mov	r7, r4
   31a30:	b	319bc <flatcc_emitter@@Base+0x144>
   31a34:	mov	r7, r0
   31a38:	b	319bc <flatcc_emitter@@Base+0x144>
   31a3c:	cmp	r0, #0
   31a40:	mvnne	r0, #0
   31a44:	pop	{r4, r5, r6, r7, fp, pc}
   31a48:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   31a4c:	add	fp, sp, #24
   31a50:	cmp	r2, #0
   31a54:	moveq	r0, #0
   31a58:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   31a5c:	mov	r4, r2
   31a60:	mov	r8, r1
   31a64:	mov	r6, r0
   31a68:	clz	r0, r2
   31a6c:	lsr	r5, r0, #5
   31a70:	b	31ab4 <flatcc_emitter@@Base+0x23c>
   31a74:	ldr	r0, [r6, #16]
   31a78:	mov	r1, r8
   31a7c:	mov	r2, r7
   31a80:	bl	147e8 <memcpy@plt>
   31a84:	ldr	r0, [r6, #16]
   31a88:	ldr	r1, [r6, #20]
   31a8c:	add	r0, r0, r7
   31a90:	sub	r1, r1, r7
   31a94:	str	r0, [r6, #16]
   31a98:	str	r1, [r6, #20]
   31a9c:	add	r8, r8, r7
   31aa0:	subs	r4, r4, r7
   31aa4:	clz	r0, r4
   31aa8:	lsr	r5, r0, #5
   31aac:	moveq	r0, #0
   31ab0:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   31ab4:	ldr	r7, [r6, #20]
   31ab8:	cmp	r4, r7
   31abc:	bls	31aec <flatcc_emitter@@Base+0x274>
   31ac0:	cmp	r7, #0
   31ac4:	bne	31a74 <flatcc_emitter@@Base+0x1fc>
   31ac8:	mov	r0, r6
   31acc:	bl	31ca8 <flatcc_emitter_copy_buffer@@Base+0x1a8>
   31ad0:	cmp	r0, #0
   31ad4:	mov	r1, r0
   31ad8:	movwne	r1, #1
   31adc:	orr	r1, r1, r5
   31ae0:	tst	r1, #1
   31ae4:	beq	31ab4 <flatcc_emitter@@Base+0x23c>
   31ae8:	b	31af4 <flatcc_emitter@@Base+0x27c>
   31aec:	mov	r7, r4
   31af0:	b	31a74 <flatcc_emitter@@Base+0x1fc>
   31af4:	cmp	r0, #0
   31af8:	mvnne	r0, #0
   31afc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00031b00 <flatcc_emitter_copy_buffer@@Base>:
   31b00:	push	{r4, r5, r6, sl, fp, lr}
   31b04:	add	fp, sp, #16
   31b08:	mov	r3, r2
   31b0c:	ldr	r2, [r0, #24]
   31b10:	mov	r5, #0
   31b14:	cmp	r2, r3
   31b18:	bhi	31ba0 <flatcc_emitter_copy_buffer@@Base+0xa0>
   31b1c:	mov	r4, r0
   31b20:	ldr	r0, [r0]
   31b24:	cmp	r0, #0
   31b28:	beq	31ba0 <flatcc_emitter_copy_buffer@@Base+0xa0>
   31b2c:	mov	r6, r1
   31b30:	ldr	r1, [r4, #4]
   31b34:	cmp	r0, r1
   31b38:	beq	31ba8 <flatcc_emitter_copy_buffer@@Base+0xa8>
   31b3c:	ldr	r1, [r4, #8]
   31b40:	ldr	r0, [r4, #12]
   31b44:	rsb	r5, r0, #2944	; 0xb80
   31b48:	mov	r0, r6
   31b4c:	mov	r2, r5
   31b50:	bl	147e8 <memcpy@plt>
   31b54:	add	r5, r6, r5
   31b58:	ldm	r4, {r0, r1}
   31b5c:	ldr	r6, [r0, #2944]	; 0xb80
   31b60:	cmp	r6, r1
   31b64:	beq	31b8c <flatcc_emitter_copy_buffer@@Base+0x8c>
   31b68:	mov	r0, r5
   31b6c:	mov	r1, r6
   31b70:	mov	r2, #2944	; 0xb80
   31b74:	bl	147e8 <memcpy@plt>
   31b78:	add	r5, r5, #2944	; 0xb80
   31b7c:	ldr	r6, [r6, #2944]	; 0xb80
   31b80:	ldr	r0, [r4, #4]
   31b84:	cmp	r6, r0
   31b88:	bne	31b68 <flatcc_emitter_copy_buffer@@Base+0x68>
   31b8c:	ldr	r0, [r4, #20]
   31b90:	rsb	r2, r0, #2944	; 0xb80
   31b94:	mov	r0, r5
   31b98:	mov	r1, r6
   31b9c:	bl	147e8 <memcpy@plt>
   31ba0:	mov	r0, r5
   31ba4:	pop	{r4, r5, r6, sl, fp, pc}
   31ba8:	ldr	r1, [r4, #8]
   31bac:	mov	r0, r6
   31bb0:	bl	147e8 <memcpy@plt>
   31bb4:	mov	r0, r6
   31bb8:	pop	{r4, r5, r6, sl, fp, pc}
   31bbc:	push	{r4, r5, fp, lr}
   31bc0:	add	fp, sp, #8
   31bc4:	mov	r4, r0
   31bc8:	ldr	r5, [r0]
   31bcc:	cmp	r5, #0
   31bd0:	beq	31bf8 <flatcc_emitter_copy_buffer@@Base+0xf8>
   31bd4:	ldr	r0, [r5, #2948]	; 0xb84
   31bd8:	ldr	r1, [r4, #4]
   31bdc:	cmp	r0, r1
   31be0:	beq	31bf8 <flatcc_emitter_copy_buffer@@Base+0xf8>
   31be4:	ldr	r1, [r5, #2952]	; 0xb88
   31be8:	sub	r1, r1, #2944	; 0xb80
   31bec:	str	r1, [r0, #2952]	; 0xb88
   31bf0:	ldr	r0, [r5, #2948]	; 0xb84
   31bf4:	b	31c38 <flatcc_emitter_copy_buffer@@Base+0x138>
   31bf8:	movw	r0, #2956	; 0xb8c
   31bfc:	bl	14848 <malloc@plt>
   31c00:	cmp	r0, #0
   31c04:	mvneq	r0, #0
   31c08:	popeq	{r4, r5, fp, pc}
   31c0c:	ldr	r1, [r4, #28]
   31c10:	add	r1, r1, #2944	; 0xb80
   31c14:	str	r1, [r4, #28]
   31c18:	cmp	r5, #0
   31c1c:	beq	31c68 <flatcc_emitter_copy_buffer@@Base+0x168>
   31c20:	ldm	r4, {r1, r2}
   31c24:	str	r1, [r0, #2944]	; 0xb80
   31c28:	str	r2, [r0, #2948]	; 0xb84
   31c2c:	str	r0, [r1, #2948]	; 0xb84
   31c30:	ldr	r1, [r4, #4]
   31c34:	str	r0, [r1, #2944]	; 0xb80
   31c38:	str	r0, [r4]
   31c3c:	mov	r0, #2944	; 0xb80
   31c40:	ldr	r1, [r4]
   31c44:	add	r2, r1, #2944	; 0xb80
   31c48:	str	r2, [r4, #8]
   31c4c:	str	r0, [r4, #12]
   31c50:	ldr	r0, [r1, #2944]	; 0xb80
   31c54:	ldr	r0, [r0, #2952]	; 0xb88
   31c58:	sub	r0, r0, #2944	; 0xb80
   31c5c:	str	r0, [r1, #2952]	; 0xb88
   31c60:	mov	r0, #0
   31c64:	pop	{r4, r5, fp, pc}
   31c68:	str	r0, [r4, #4]
   31c6c:	str	r0, [r4]
   31c70:	mov	r1, #1472	; 0x5c0
   31c74:	str	r1, [r4, #12]
   31c78:	str	r1, [r4, #20]
   31c7c:	ldr	r1, [r4]
   31c80:	add	r1, r1, #1472	; 0x5c0
   31c84:	str	r1, [r4, #8]
   31c88:	str	r1, [r4, #16]
   31c8c:	movw	r1, #64064	; 0xfa40
   31c90:	movt	r1, #65535	; 0xffff
   31c94:	str	r0, [r0, #2944]	; 0xb80
   31c98:	str	r0, [r0, #2948]	; 0xb84
   31c9c:	str	r1, [r0, #2952]	; 0xb88
   31ca0:	mov	r0, #0
   31ca4:	pop	{r4, r5, fp, pc}
   31ca8:	push	{r4, r5, fp, lr}
   31cac:	add	fp, sp, #8
   31cb0:	mov	r4, r0
   31cb4:	ldr	r5, [r0, #4]
   31cb8:	cmp	r5, #0
   31cbc:	beq	31cd0 <flatcc_emitter_copy_buffer@@Base+0x1d0>
   31cc0:	ldr	r0, [r5, #2944]	; 0xb80
   31cc4:	ldr	r1, [r4]
   31cc8:	cmp	r0, r1
   31ccc:	bne	31d0c <flatcc_emitter_copy_buffer@@Base+0x20c>
   31cd0:	movw	r0, #2956	; 0xb8c
   31cd4:	bl	14848 <malloc@plt>
   31cd8:	cmp	r0, #0
   31cdc:	mvneq	r0, #0
   31ce0:	popeq	{r4, r5, fp, pc}
   31ce4:	ldr	r1, [r4, #28]
   31ce8:	add	r1, r1, #2944	; 0xb80
   31cec:	str	r1, [r4, #28]
   31cf0:	cmp	r5, #0
   31cf4:	beq	31d38 <flatcc_emitter_copy_buffer@@Base+0x238>
   31cf8:	ldr	r1, [r4]
   31cfc:	str	r1, [r0, #2944]	; 0xb80
   31d00:	str	r5, [r0, #2948]	; 0xb84
   31d04:	str	r0, [r1, #2948]	; 0xb84
   31d08:	str	r0, [r5, #2944]	; 0xb80
   31d0c:	str	r0, [r4, #4]
   31d10:	mov	r0, #2944	; 0xb80
   31d14:	ldr	r1, [r4, #4]
   31d18:	str	r1, [r4, #16]
   31d1c:	str	r0, [r4, #20]
   31d20:	ldr	r0, [r1, #2948]	; 0xb84
   31d24:	ldr	r0, [r0, #2952]	; 0xb88
   31d28:	add	r0, r0, #2944	; 0xb80
   31d2c:	str	r0, [r1, #2952]	; 0xb88
   31d30:	mov	r0, #0
   31d34:	pop	{r4, r5, fp, pc}
   31d38:	str	r0, [r4, #4]
   31d3c:	str	r0, [r4]
   31d40:	mov	r1, #1472	; 0x5c0
   31d44:	str	r1, [r4, #12]
   31d48:	str	r1, [r4, #20]
   31d4c:	ldr	r1, [r4]
   31d50:	add	r1, r1, #1472	; 0x5c0
   31d54:	str	r1, [r4, #8]
   31d58:	str	r1, [r4, #16]
   31d5c:	movw	r1, #64064	; 0xfa40
   31d60:	movt	r1, #65535	; 0xffff
   31d64:	str	r0, [r0, #2944]	; 0xb80
   31d68:	str	r0, [r0, #2948]	; 0xb84
   31d6c:	str	r1, [r0, #2952]	; 0xb88
   31d70:	mov	r0, #0
   31d74:	pop	{r4, r5, fp, pc}

00031d78 <cmetrohash64_1@@Base>:
   31d78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31d7c:	add	fp, sp, #28
   31d80:	sub	sp, sp, #52	; 0x34
   31d84:	mov	r4, r0
   31d88:	ldr	r0, [fp, #8]
   31d8c:	movw	r5, #37345	; 0x91e1
   31d90:	movt	r5, #51258	; 0xc83a
   31d94:	mov	r1, r2
   31d98:	mov	r7, r3
   31d9c:	umlal	r1, r7, r0, r5
   31da0:	movw	r0, #23867	; 0x5d3b
   31da4:	movt	r0, #24802	; 0x60e2
   31da8:	movw	r6, #24283	; 0x5edb
   31dac:	movt	r6, #44806	; 0xaf06
   31db0:	adds	r9, r1, r6
   31db4:	adc	r6, r7, r0
   31db8:	add	sl, r4, r2
   31dbc:	movw	r7, #49211	; 0xc03b
   31dc0:	movt	r7, #31710	; 0x7bde
   31dc4:	movw	r8, #56283	; 0xdbdb
   31dc8:	movt	r8, #34376	; 0x8648
   31dcc:	subs	r0, r2, #32
   31dd0:	sbcs	r0, r3, #0
   31dd4:	bcc	32098 <cmetrohash64_1@@Base+0x320>
   31dd8:	str	sl, [sp, #12]
   31ddc:	sub	r0, sl, #32
   31de0:	str	r0, [sp, #24]
   31de4:	mov	r5, r6
   31de8:	mov	r3, r9
   31dec:	mov	r7, r6
   31df0:	mov	r6, r9
   31df4:	str	r5, [fp, #-36]	; 0xffffffdc
   31df8:	str	r9, [fp, #-32]	; 0xffffffe0
   31dfc:	mov	r8, r5
   31e00:	str	r9, [sp, #20]
   31e04:	str	r5, [sp, #8]
   31e08:	str	r3, [sp, #40]	; 0x28
   31e0c:	str	r7, [sp, #36]	; 0x24
   31e10:	mov	r0, r4
   31e14:	bl	32334 <cmetrohash64_1@@Base+0x5bc>
   31e18:	movw	r2, #37345	; 0x91e1
   31e1c:	movt	r2, #51258	; 0xc83a
   31e20:	mov	r3, r2
   31e24:	umull	r0, r2, r0, r2
   31e28:	mla	r1, r1, r3, r2
   31e2c:	adds	r0, r0, r9
   31e30:	adc	r1, r1, r5
   31e34:	mov	r2, #29
   31e38:	bl	32344 <cmetrohash64_1@@Base+0x5cc>
   31e3c:	mov	r5, r6
   31e40:	adds	r6, r0, r6
   31e44:	ldr	r7, [fp, #-36]	; 0xffffffdc
   31e48:	adc	r0, r1, r7
   31e4c:	str	r0, [sp, #32]
   31e50:	add	r0, r4, #8
   31e54:	bl	32334 <cmetrohash64_1@@Base+0x5bc>
   31e58:	movw	r2, #56283	; 0xdbdb
   31e5c:	movt	r2, #34376	; 0x8648
   31e60:	mov	r3, r2
   31e64:	umull	r0, r2, r0, r2
   31e68:	mla	r1, r1, r3, r2
   31e6c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   31e70:	adds	r0, r0, r2
   31e74:	adc	r1, r1, r8
   31e78:	mov	r2, #29
   31e7c:	bl	32344 <cmetrohash64_1@@Base+0x5cc>
   31e80:	str	r0, [fp, #-32]	; 0xffffffe0
   31e84:	mov	sl, r1
   31e88:	add	r0, r4, #16
   31e8c:	bl	32334 <cmetrohash64_1@@Base+0x5bc>
   31e90:	movw	r2, #49211	; 0xc03b
   31e94:	movt	r2, #31710	; 0x7bde
   31e98:	mov	r3, r2
   31e9c:	umull	r0, r2, r0, r2
   31ea0:	mla	r1, r1, r3, r2
   31ea4:	adds	r0, r0, r5
   31ea8:	adc	r1, r1, r7
   31eac:	mov	r2, #29
   31eb0:	bl	32344 <cmetrohash64_1@@Base+0x5cc>
   31eb4:	mov	r9, r6
   31eb8:	adds	r0, r0, r6
   31ebc:	str	r0, [sp, #28]
   31ec0:	ldr	r0, [sp, #32]
   31ec4:	mov	r5, r0
   31ec8:	adc	r0, r1, r0
   31ecc:	str	r0, [fp, #-36]	; 0xffffffdc
   31ed0:	ldr	r8, [sp, #40]	; 0x28
   31ed4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31ed8:	adds	r7, r0, r8
   31edc:	ldr	r6, [sp, #36]	; 0x24
   31ee0:	adc	sl, sl, r6
   31ee4:	add	r0, r4, #24
   31ee8:	bl	32334 <cmetrohash64_1@@Base+0x5bc>
   31eec:	movw	r2, #28837	; 0x70a5
   31ef0:	movt	r2, #12120	; 0x2f58
   31ef4:	mov	r3, r2
   31ef8:	umull	r0, r2, r0, r2
   31efc:	mla	r1, r1, r3, r2
   31f00:	adds	r0, r0, r8
   31f04:	adc	r1, r1, r6
   31f08:	mov	r2, #29
   31f0c:	bl	32344 <cmetrohash64_1@@Base+0x5cc>
   31f10:	str	r7, [fp, #-32]	; 0xffffffe0
   31f14:	adds	r3, r0, r7
   31f18:	mov	r8, sl
   31f1c:	adc	r7, r1, sl
   31f20:	ldr	r6, [sp, #28]
   31f24:	add	r4, r4, #32
   31f28:	ldr	r0, [sp, #24]
   31f2c:	cmp	r4, r0
   31f30:	bls	31e08 <cmetrohash64_1@@Base+0x90>
   31f34:	str	r9, [sp, #16]
   31f38:	adds	r0, r3, r9
   31f3c:	mov	sl, r5
   31f40:	adc	r1, r7, r5
   31f44:	movw	r2, #37345	; 0x91e1
   31f48:	movt	r2, #51258	; 0xc83a
   31f4c:	mov	r5, r2
   31f50:	umull	r0, r2, r0, r2
   31f54:	mla	r1, r1, r5, r2
   31f58:	ldr	r2, [fp, #-32]	; 0xffffffe0
   31f5c:	adds	r0, r0, r2
   31f60:	mov	r9, r2
   31f64:	adc	r1, r1, r8
   31f68:	mov	r5, r8
   31f6c:	str	r8, [sp, #4]
   31f70:	mov	r2, #33	; 0x21
   31f74:	str	r3, [sp, #40]	; 0x28
   31f78:	bl	32344 <cmetrohash64_1@@Base+0x5cc>
   31f7c:	movw	r2, #56283	; 0xdbdb
   31f80:	movt	r2, #34376	; 0x8648
   31f84:	mov	r3, r2
   31f88:	umull	r0, r2, r0, r2
   31f8c:	mla	r1, r1, r3, r2
   31f90:	ldr	r2, [fp, #-36]	; 0xffffffdc
   31f94:	eor	r2, r1, r2
   31f98:	eor	r8, r0, r6
   31f9c:	adds	r0, r8, r9
   31fa0:	adc	r1, r2, r5
   31fa4:	mov	r9, r2
   31fa8:	umull	r0, r2, r0, r3
   31fac:	mla	r1, r1, r3, r2
   31fb0:	ldr	r6, [sp, #16]
   31fb4:	adds	r0, r0, r6
   31fb8:	adc	r1, r1, sl
   31fbc:	mov	r2, #33	; 0x21
   31fc0:	bl	32344 <cmetrohash64_1@@Base+0x5cc>
   31fc4:	movw	r5, #37345	; 0x91e1
   31fc8:	movt	r5, #51258	; 0xc83a
   31fcc:	umull	r0, r2, r0, r5
   31fd0:	mla	r1, r1, r5, r2
   31fd4:	eor	r7, r1, r7
   31fd8:	adds	r1, r8, r6
   31fdc:	adc	r2, r9, sl
   31fe0:	umull	r1, r3, r1, r5
   31fe4:	mla	r2, r2, r5, r3
   31fe8:	ldr	r3, [sp, #40]	; 0x28
   31fec:	eor	r6, r0, r3
   31ff0:	adds	r0, r1, r6
   31ff4:	adc	r1, r2, r7
   31ff8:	mov	r2, #33	; 0x21
   31ffc:	bl	32344 <cmetrohash64_1@@Base+0x5cc>
   32000:	str	r0, [fp, #-36]	; 0xffffffdc
   32004:	str	r1, [sp, #40]	; 0x28
   32008:	ldr	r5, [fp, #-32]	; 0xffffffe0
   3200c:	adds	r0, r6, r5
   32010:	ldr	r6, [sp, #4]
   32014:	adc	r1, r7, r6
   32018:	movw	r7, #56283	; 0xdbdb
   3201c:	movt	r7, #34376	; 0x8648
   32020:	umull	r0, r2, r0, r7
   32024:	mla	r1, r1, r7, r2
   32028:	adds	r0, r0, r8
   3202c:	adc	r1, r1, r9
   32030:	mov	r2, #33	; 0x21
   32034:	bl	32344 <cmetrohash64_1@@Base+0x5cc>
   32038:	movw	ip, #37345	; 0x91e1
   3203c:	movt	ip, #51258	; 0xc83a
   32040:	umull	lr, r2, r0, ip
   32044:	mla	r1, r1, ip, r2
   32048:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3204c:	umull	r2, r3, r2, r7
   32050:	mov	r8, r7
   32054:	ldr	r0, [sp, #40]	; 0x28
   32058:	mla	r3, r0, r7, r3
   3205c:	eor	r6, r6, sl
   32060:	eor	r3, r6, r3
   32064:	eor	r1, r3, r1
   32068:	ldr	r3, [sp, #16]
   3206c:	eor	r3, r5, r3
   32070:	eor	r2, r3, r2
   32074:	eor	r0, r2, lr
   32078:	ldr	r9, [sp, #20]
   3207c:	adds	r9, r0, r9
   32080:	ldr	r6, [sp, #8]
   32084:	adc	r6, r1, r6
   32088:	mov	r5, ip
   3208c:	ldr	sl, [sp, #12]
   32090:	movw	r7, #49211	; 0xc03b
   32094:	movt	r7, #31710	; 0x7bde
   32098:	sub	r0, sl, r4
   3209c:	cmp	r0, #16
   320a0:	blt	321b8 <cmetrohash64_1@@Base+0x440>
   320a4:	mov	r0, r4
   320a8:	bl	32334 <cmetrohash64_1@@Base+0x5bc>
   320ac:	umull	r0, r2, r0, r5
   320b0:	mla	r1, r1, r5, r2
   320b4:	adds	r0, r0, r9
   320b8:	adc	r1, r1, r6
   320bc:	mov	r2, #33	; 0x21
   320c0:	bl	32344 <cmetrohash64_1@@Base+0x5cc>
   320c4:	str	r4, [fp, #-32]	; 0xffffffe0
   320c8:	str	r0, [fp, #-36]	; 0xffffffdc
   320cc:	str	r1, [sp, #40]	; 0x28
   320d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   320d4:	add	r0, r0, #8
   320d8:	bl	32334 <cmetrohash64_1@@Base+0x5bc>
   320dc:	umull	r0, r2, r0, r8
   320e0:	mla	r1, r1, r8, r2
   320e4:	adds	r0, r0, r9
   320e8:	adc	r1, r1, r6
   320ec:	mov	r2, #33	; 0x21
   320f0:	bl	32344 <cmetrohash64_1@@Base+0x5cc>
   320f4:	str	r9, [sp, #20]
   320f8:	mov	r5, r0
   320fc:	str	r1, [sp, #36]	; 0x24
   32100:	umull	r4, r0, r0, r7
   32104:	str	r4, [sp, #32]
   32108:	mla	r9, r1, r7, r0
   3210c:	movw	r1, #18043	; 0x467b
   32110:	movt	r1, #12846	; 0x322e
   32114:	ldr	r7, [fp, #-36]	; 0xffffffdc
   32118:	umull	r0, r2, r7, r1
   3211c:	movw	r3, #42186	; 0xa4ca
   32120:	movt	r3, #26887	; 0x6907
   32124:	mla	r2, r7, r3, r2
   32128:	ldr	r7, [sp, #40]	; 0x28
   3212c:	mla	r1, r7, r1, r2
   32130:	mov	r2, #35	; 0x23
   32134:	bl	32344 <cmetrohash64_1@@Base+0x5cc>
   32138:	adds	r0, r0, r4
   3213c:	adc	r1, r1, r9
   32140:	ldr	r2, [fp, #-36]	; 0xffffffdc
   32144:	umull	r2, r3, r2, r8
   32148:	mla	r3, r7, r8, r3
   3214c:	mov	r7, sl
   32150:	eor	sl, r1, r3
   32154:	eor	r4, r0, r2
   32158:	movw	r1, #46599	; 0xb607
   3215c:	movt	r1, #13299	; 0x33f3
   32160:	umull	r0, r2, r5, r1
   32164:	movw	r3, #45150	; 0xb05e
   32168:	movt	r3, #5864	; 0x16e8
   3216c:	mla	r2, r5, r3, r2
   32170:	ldr	r5, [sp, #20]
   32174:	ldr	r3, [sp, #36]	; 0x24
   32178:	mla	r1, r3, r1, r2
   3217c:	mov	r2, #35	; 0x23
   32180:	bl	32344 <cmetrohash64_1@@Base+0x5cc>
   32184:	adds	r0, r4, r0
   32188:	ldr	r4, [fp, #-32]	; 0xffffffe0
   3218c:	adc	r1, sl, r1
   32190:	mov	sl, r7
   32194:	eor	r1, r1, r9
   32198:	ldr	r2, [sp, #32]
   3219c:	eor	r0, r0, r2
   321a0:	adds	r5, r0, r5
   321a4:	adc	r6, r1, r6
   321a8:	add	r4, r4, #16
   321ac:	movw	r7, #28837	; 0x70a5
   321b0:	movt	r7, #12120	; 0x2f58
   321b4:	b	321c4 <cmetrohash64_1@@Base+0x44c>
   321b8:	movw	r7, #28837	; 0x70a5
   321bc:	movt	r7, #12120	; 0x2f58
   321c0:	mov	r5, r9
   321c4:	sub	r0, sl, r4
   321c8:	cmp	r0, #8
   321cc:	blt	3220c <cmetrohash64_1@@Base+0x494>
   321d0:	mov	r0, r4
   321d4:	bl	32334 <cmetrohash64_1@@Base+0x5bc>
   321d8:	umull	r0, r2, r0, r7
   321dc:	mla	r1, r1, r7, r2
   321e0:	adds	r5, r0, r5
   321e4:	adc	r6, r1, r6
   321e8:	mov	r0, r5
   321ec:	mov	r1, r6
   321f0:	mov	r2, #33	; 0x21
   321f4:	bl	32344 <cmetrohash64_1@@Base+0x5cc>
   321f8:	umull	r0, r2, r0, r8
   321fc:	mla	r1, r1, r8, r2
   32200:	eor	r6, r6, r1
   32204:	eor	r5, r5, r0
   32208:	add	r4, r4, #8
   3220c:	sub	r0, sl, r4
   32210:	cmp	r0, #4
   32214:	blt	32254 <cmetrohash64_1@@Base+0x4dc>
   32218:	mov	r0, r4
   3221c:	bl	323a4 <cmetrohash64_1@@Base+0x62c>
   32220:	umull	r0, r2, r0, r7
   32224:	mla	r1, r1, r7, r2
   32228:	adds	r5, r0, r5
   3222c:	adc	r6, r1, r6
   32230:	mov	r0, r5
   32234:	mov	r1, r6
   32238:	mov	r2, #15
   3223c:	bl	32344 <cmetrohash64_1@@Base+0x5cc>
   32240:	umull	r0, r2, r0, r8
   32244:	mla	r1, r1, r8, r2
   32248:	eor	r6, r6, r1
   3224c:	eor	r5, r5, r0
   32250:	add	r4, r4, #4
   32254:	sub	r0, sl, r4
   32258:	cmp	r0, #2
   3225c:	blt	3229c <cmetrohash64_1@@Base+0x524>
   32260:	mov	r0, r4
   32264:	bl	323b0 <cmetrohash64_1@@Base+0x638>
   32268:	umull	r0, r2, r0, r7
   3226c:	mla	r1, r1, r7, r2
   32270:	adds	r5, r0, r5
   32274:	adc	r6, r1, r6
   32278:	mov	r0, r5
   3227c:	mov	r1, r6
   32280:	mov	r2, #13
   32284:	bl	32344 <cmetrohash64_1@@Base+0x5cc>
   32288:	umull	r0, r2, r0, r8
   3228c:	mla	r1, r1, r8, r2
   32290:	eor	r6, r6, r1
   32294:	eor	r5, r5, r0
   32298:	add	r4, r4, #2
   3229c:	ldr	r9, [fp, #12]
   322a0:	sub	r0, sl, r4
   322a4:	cmp	r0, #1
   322a8:	blt	322e4 <cmetrohash64_1@@Base+0x56c>
   322ac:	mov	r0, r4
   322b0:	bl	323c4 <cmetrohash64_1@@Base+0x64c>
   322b4:	umull	r0, r2, r0, r7
   322b8:	mla	r1, r1, r7, r2
   322bc:	adds	r4, r0, r5
   322c0:	adc	r5, r1, r6
   322c4:	mov	r0, r4
   322c8:	mov	r1, r5
   322cc:	mov	r2, #25
   322d0:	bl	32344 <cmetrohash64_1@@Base+0x5cc>
   322d4:	umull	r0, r2, r0, r8
   322d8:	mla	r1, r1, r8, r2
   322dc:	eor	r6, r5, r1
   322e0:	eor	r5, r4, r0
   322e4:	mov	r0, r5
   322e8:	mov	r1, r6
   322ec:	mov	r2, #33	; 0x21
   322f0:	bl	32344 <cmetrohash64_1@@Base+0x5cc>
   322f4:	eor	r1, r1, r6
   322f8:	eor	r0, r0, r5
   322fc:	movw	r2, #37345	; 0x91e1
   32300:	movt	r2, #51258	; 0xc83a
   32304:	umull	r4, r0, r0, r2
   32308:	mla	r5, r1, r2, r0
   3230c:	mov	r0, r4
   32310:	mov	r1, r5
   32314:	mov	r2, #33	; 0x21
   32318:	bl	32344 <cmetrohash64_1@@Base+0x5cc>
   3231c:	eor	r1, r5, r1
   32320:	str	r1, [r9, #4]
   32324:	eor	r0, r4, r0
   32328:	str	r0, [r9]
   3232c:	sub	sp, fp, #28
   32330:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32334:	ldr	r2, [r0]
   32338:	ldr	r1, [r0, #4]
   3233c:	mov	r0, r2
   32340:	bx	lr
   32344:	push	{r4, r5, fp, lr}
   32348:	add	fp, sp, #8
   3234c:	lsr	ip, r0, r2
   32350:	rsb	r3, r2, #32
   32354:	orr	ip, ip, r1, lsl r3
   32358:	sub	lr, r2, #32
   3235c:	cmp	lr, #0
   32360:	lsrge	ip, r1, lr
   32364:	rsb	r4, r2, #64	; 0x40
   32368:	lsl	r5, r0, r4
   3236c:	cmp	r3, #0
   32370:	movwge	r5, #0
   32374:	orr	ip, r5, ip
   32378:	rsb	r5, r4, #32
   3237c:	lsr	r5, r0, r5
   32380:	orr	r4, r5, r1, lsl r4
   32384:	cmp	r3, #0
   32388:	lslge	r4, r0, r3
   3238c:	lsr	r0, r1, r2
   32390:	cmp	lr, #0
   32394:	movwge	r0, #0
   32398:	orr	r1, r4, r0
   3239c:	mov	r0, ip
   323a0:	pop	{r4, r5, fp, pc}
   323a4:	ldr	r0, [r0]
   323a8:	mov	r1, #0
   323ac:	bx	lr
   323b0:	ldrb	r1, [r0]
   323b4:	ldrb	r0, [r0, #1]
   323b8:	orr	r0, r1, r0, lsl #8
   323bc:	mov	r1, #0
   323c0:	bx	lr
   323c4:	ldrb	r0, [r0]
   323c8:	mov	r1, #0
   323cc:	bx	lr

000323d0 <cmetrohash64_2@@Base>:
   323d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   323d4:	add	fp, sp, #28
   323d8:	sub	sp, sp, #44	; 0x2c
   323dc:	mov	r4, r0
   323e0:	ldr	r0, [fp, #8]
   323e4:	movw	r6, #6389	; 0x18f5
   323e8:	movt	r6, #54992	; 0xd6d0
   323ec:	mov	r1, r2
   323f0:	mov	r7, r3
   323f4:	umlal	r1, r7, r0, r6
   323f8:	movw	r0, #13310	; 0x33fe
   323fc:	movt	r0, #21180	; 0x52bc
   32400:	movw	r6, #52149	; 0xcbb5
   32404:	movt	r6, #56292	; 0xdbe4
   32408:	adds	r5, r1, r6
   3240c:	adc	sl, r7, r0
   32410:	add	r6, r4, r2
   32414:	movw	r8, #23337	; 0x5b29
   32418:	movt	r8, #12476	; 0x30bc
   3241c:	movw	r7, #12225	; 0x2fc1
   32420:	movt	r7, #25241	; 0x6299
   32424:	movw	r1, #827	; 0x33b
   32428:	movt	r1, #41642	; 0xa2aa
   3242c:	subs	r0, r2, #32
   32430:	sbcs	r0, r3, #0
   32434:	str	r6, [sp, #12]
   32438:	bcc	326f8 <cmetrohash64_2@@Base+0x328>
   3243c:	sub	r0, r6, #32
   32440:	str	r0, [sp, #24]
   32444:	mov	r2, r5
   32448:	mov	r3, sl
   3244c:	mov	r0, sl
   32450:	mov	r6, r5
   32454:	mov	r8, sl
   32458:	mov	sl, r5
   3245c:	mov	r7, r0
   32460:	str	r5, [sp, #16]
   32464:	str	r5, [sp, #36]	; 0x24
   32468:	str	r0, [sp, #20]
   3246c:	str	r0, [fp, #-32]	; 0xffffffe0
   32470:	str	r3, [sp, #32]
   32474:	mov	r0, r4
   32478:	mov	r9, r2
   3247c:	bl	32334 <cmetrohash64_1@@Base+0x5bc>
   32480:	movw	r2, #6389	; 0x18f5
   32484:	movt	r2, #54992	; 0xd6d0
   32488:	mov	r3, r2
   3248c:	umull	r0, r2, r0, r2
   32490:	mla	r1, r1, r3, r2
   32494:	ldr	r2, [sp, #36]	; 0x24
   32498:	adds	r0, r0, r2
   3249c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   324a0:	adc	r1, r1, r2
   324a4:	mov	r2, #29
   324a8:	bl	32344 <cmetrohash64_1@@Base+0x5cc>
   324ac:	mov	r5, r6
   324b0:	adds	r6, r0, r6
   324b4:	adc	r0, r1, r8
   324b8:	str	r0, [fp, #-32]	; 0xffffffe0
   324bc:	add	r0, r4, #8
   324c0:	bl	32334 <cmetrohash64_1@@Base+0x5bc>
   324c4:	movw	r2, #827	; 0x33b
   324c8:	movt	r2, #41642	; 0xa2aa
   324cc:	mov	r3, r2
   324d0:	umull	r0, r2, r0, r2
   324d4:	mla	r1, r1, r3, r2
   324d8:	adds	r0, r0, sl
   324dc:	adc	r1, r1, r7
   324e0:	mov	r2, #29
   324e4:	bl	32344 <cmetrohash64_1@@Base+0x5cc>
   324e8:	mov	r7, r0
   324ec:	str	r1, [sp, #28]
   324f0:	add	r0, r4, #16
   324f4:	bl	32334 <cmetrohash64_1@@Base+0x5bc>
   324f8:	movw	r2, #12225	; 0x2fc1
   324fc:	movt	r2, #25241	; 0x6299
   32500:	mov	r3, r2
   32504:	umull	r0, r2, r0, r2
   32508:	mla	r1, r1, r3, r2
   3250c:	adds	r0, r0, r5
   32510:	adc	r1, r1, r8
   32514:	mov	r2, #29
   32518:	bl	32344 <cmetrohash64_1@@Base+0x5cc>
   3251c:	str	r6, [sp, #36]	; 0x24
   32520:	adds	r6, r0, r6
   32524:	ldr	r0, [fp, #-32]	; 0xffffffe0
   32528:	adc	r8, r1, r0
   3252c:	adds	sl, r7, r9
   32530:	ldr	r7, [sp, #32]
   32534:	ldr	r0, [sp, #28]
   32538:	adc	r5, r0, r7
   3253c:	add	r0, r4, #24
   32540:	bl	32334 <cmetrohash64_1@@Base+0x5bc>
   32544:	movw	r2, #23337	; 0x5b29
   32548:	movt	r2, #12476	; 0x30bc
   3254c:	mov	r3, r2
   32550:	umull	r0, r2, r0, r2
   32554:	mla	r1, r1, r3, r2
   32558:	adds	r0, r0, r9
   3255c:	adc	r1, r1, r7
   32560:	mov	r7, sl
   32564:	mov	r2, #29
   32568:	bl	32344 <cmetrohash64_1@@Base+0x5cc>
   3256c:	adds	r2, r0, sl
   32570:	mov	r7, r5
   32574:	adc	r3, r1, r5
   32578:	add	r4, r4, #32
   3257c:	ldr	r0, [sp, #24]
   32580:	cmp	r4, r0
   32584:	bls	32470 <cmetrohash64_2@@Base+0xa0>
   32588:	ldr	r0, [sp, #36]	; 0x24
   3258c:	adds	r0, r2, r0
   32590:	ldr	r9, [fp, #-32]	; 0xffffffe0
   32594:	adc	r1, r3, r9
   32598:	str	r2, [sp, #28]
   3259c:	movw	r2, #6389	; 0x18f5
   325a0:	movt	r2, #54992	; 0xd6d0
   325a4:	mov	r5, r2
   325a8:	umull	r0, r2, r0, r2
   325ac:	mla	r1, r1, r5, r2
   325b0:	adds	r0, r0, sl
   325b4:	str	sl, [sp, #4]
   325b8:	adc	r1, r1, r7
   325bc:	mov	r5, r7
   325c0:	str	r7, [sp, #8]
   325c4:	mov	r2, #30
   325c8:	str	r3, [sp, #32]
   325cc:	bl	32344 <cmetrohash64_1@@Base+0x5cc>
   325d0:	movw	r2, #827	; 0x33b
   325d4:	movt	r2, #41642	; 0xa2aa
   325d8:	mov	r3, r2
   325dc:	umull	r0, r2, r0, r2
   325e0:	mla	r1, r1, r3, r2
   325e4:	eor	r8, r1, r8
   325e8:	eor	r1, r0, r6
   325ec:	adds	r0, r1, sl
   325f0:	mov	r7, r1
   325f4:	str	r1, [sp, #24]
   325f8:	adc	r1, r8, r5
   325fc:	umull	r0, r2, r0, r3
   32600:	mla	r1, r1, r3, r2
   32604:	ldr	r6, [sp, #36]	; 0x24
   32608:	adds	r0, r0, r6
   3260c:	adc	r1, r1, r9
   32610:	mov	r2, #30
   32614:	bl	32344 <cmetrohash64_1@@Base+0x5cc>
   32618:	movw	r5, #6389	; 0x18f5
   3261c:	movt	r5, #54992	; 0xd6d0
   32620:	umull	r0, r2, r0, r5
   32624:	mla	r1, r1, r5, r2
   32628:	ldr	r2, [sp, #32]
   3262c:	eor	sl, r1, r2
   32630:	adds	r1, r7, r6
   32634:	adc	r2, r8, r9
   32638:	umull	r1, r3, r1, r5
   3263c:	mla	r2, r2, r5, r3
   32640:	ldr	r3, [sp, #28]
   32644:	eor	r6, r0, r3
   32648:	adds	r0, r1, r6
   3264c:	adc	r1, r2, sl
   32650:	mov	r2, #30
   32654:	bl	32344 <cmetrohash64_1@@Base+0x5cc>
   32658:	str	r0, [sp, #32]
   3265c:	str	r1, [sp, #28]
   32660:	ldr	r9, [sp, #4]
   32664:	adds	r0, r6, r9
   32668:	ldr	r7, [sp, #8]
   3266c:	adc	r1, sl, r7
   32670:	movw	r6, #827	; 0x33b
   32674:	movt	r6, #41642	; 0xa2aa
   32678:	umull	r0, r2, r0, r6
   3267c:	mla	r1, r1, r6, r2
   32680:	ldr	r2, [sp, #24]
   32684:	adds	r0, r0, r2
   32688:	adc	r1, r1, r8
   3268c:	mov	r2, #30
   32690:	bl	32344 <cmetrohash64_1@@Base+0x5cc>
   32694:	umull	r0, r2, r0, r5
   32698:	mla	r1, r1, r5, r2
   3269c:	ldr	r2, [sp, #32]
   326a0:	umull	r2, r3, r2, r6
   326a4:	ldr	r5, [sp, #28]
   326a8:	mla	r3, r5, r6, r3
   326ac:	mov	ip, r6
   326b0:	ldr	r6, [fp, #-32]	; 0xffffffe0
   326b4:	eor	r6, r7, r6
   326b8:	eor	r3, r6, r3
   326bc:	eor	r1, r3, r1
   326c0:	ldr	r3, [sp, #36]	; 0x24
   326c4:	eor	r3, r9, r3
   326c8:	eor	r2, r3, r2
   326cc:	eor	r0, r2, r0
   326d0:	ldr	r5, [sp, #16]
   326d4:	adds	r5, r0, r5
   326d8:	ldr	sl, [sp, #20]
   326dc:	adc	sl, r1, sl
   326e0:	mov	r1, ip
   326e4:	movw	r8, #23337	; 0x5b29
   326e8:	movt	r8, #12476	; 0x30bc
   326ec:	ldr	r6, [sp, #12]
   326f0:	movw	r7, #12225	; 0x2fc1
   326f4:	movt	r7, #25241	; 0x6299
   326f8:	sub	r0, r6, r4
   326fc:	cmp	r0, #16
   32700:	blt	3283c <cmetrohash64_2@@Base+0x46c>
   32704:	mov	r0, r4
   32708:	bl	32334 <cmetrohash64_1@@Base+0x5bc>
   3270c:	umull	r0, r2, r0, r7
   32710:	mla	r1, r1, r7, r2
   32714:	adds	r0, r0, r5
   32718:	adc	r1, r1, sl
   3271c:	mov	r2, #29
   32720:	bl	32344 <cmetrohash64_1@@Base+0x5cc>
   32724:	str	r4, [fp, #-32]	; 0xffffffe0
   32728:	mov	r9, r0
   3272c:	mov	r4, r1
   32730:	movw	r0, #5693	; 0x163d
   32734:	movt	r0, #42015	; 0xa41f
   32738:	umull	r1, r0, r9, r0
   3273c:	str	r1, [sp, #36]	; 0x24
   32740:	movw	r1, #4606	; 0x11fe
   32744:	movt	r1, #10469	; 0x28e5
   32748:	str	sl, [sp, #20]
   3274c:	str	r5, [sp, #16]
   32750:	mla	r0, r9, r1, r0
   32754:	str	r0, [sp, #32]
   32758:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3275c:	add	r0, r0, #8
   32760:	bl	32334 <cmetrohash64_1@@Base+0x5bc>
   32764:	umull	r0, r2, r0, r7
   32768:	mla	r1, r1, r7, r2
   3276c:	ldr	r2, [sp, #16]
   32770:	adds	r0, r0, r2
   32774:	ldr	r2, [sp, #20]
   32778:	adc	r1, r1, r2
   3277c:	mov	r2, #29
   32780:	bl	32344 <cmetrohash64_1@@Base+0x5cc>
   32784:	mov	r5, r0
   32788:	mov	r6, r1
   3278c:	mov	sl, r4
   32790:	movw	r0, #5693	; 0x163d
   32794:	movt	r0, #42015	; 0xa41f
   32798:	ldr	r1, [sp, #32]
   3279c:	mla	r1, r4, r0, r1
   327a0:	umull	r4, r0, r5, r8
   327a4:	str	r4, [sp, #32]
   327a8:	mov	r7, r8
   327ac:	mla	r8, r6, r8, r0
   327b0:	ldr	r0, [sp, #36]	; 0x24
   327b4:	mov	r2, #34	; 0x22
   327b8:	bl	32344 <cmetrohash64_1@@Base+0x5cc>
   327bc:	adds	r0, r0, r4
   327c0:	adc	r1, r1, r8
   327c4:	umull	r2, r3, r9, r7
   327c8:	ldr	r4, [fp, #-32]	; 0xffffffe0
   327cc:	mov	r9, r7
   327d0:	mla	r3, sl, r7, r3
   327d4:	eor	sl, r1, r3
   327d8:	eor	r7, r0, r2
   327dc:	movw	r1, #11409	; 0x2c91
   327e0:	movt	r1, #25774	; 0x64ae
   327e4:	umull	r0, r2, r5, r1
   327e8:	movw	r3, #11461	; 0x2cc5
   327ec:	movt	r3, #2375	; 0x947
   327f0:	mla	r2, r5, r3, r2
   327f4:	mla	r1, r6, r1, r2
   327f8:	mov	r2, #34	; 0x22
   327fc:	bl	32344 <cmetrohash64_1@@Base+0x5cc>
   32800:	adds	r0, r7, r0
   32804:	adc	r1, sl, r1
   32808:	eor	r1, r1, r8
   3280c:	ldr	r5, [sp, #16]
   32810:	ldr	sl, [sp, #20]
   32814:	ldr	r6, [sp, #12]
   32818:	ldr	r2, [sp, #32]
   3281c:	eor	r0, r0, r2
   32820:	movw	r7, #827	; 0x33b
   32824:	movt	r7, #41642	; 0xa2aa
   32828:	mov	r8, r7
   3282c:	adds	r5, r0, r5
   32830:	adc	sl, r1, sl
   32834:	add	r4, r4, #16
   32838:	b	32844 <cmetrohash64_2@@Base+0x474>
   3283c:	mov	r9, r8
   32840:	mov	r8, r1
   32844:	sub	r0, r6, r4
   32848:	cmp	r0, #8
   3284c:	blt	3288c <cmetrohash64_2@@Base+0x4bc>
   32850:	mov	r0, r4
   32854:	bl	32334 <cmetrohash64_1@@Base+0x5bc>
   32858:	umull	r0, r2, r0, r9
   3285c:	mla	r1, r1, r9, r2
   32860:	adds	r7, r0, r5
   32864:	adc	r5, r1, sl
   32868:	mov	r0, r7
   3286c:	mov	r1, r5
   32870:	mov	r2, #36	; 0x24
   32874:	bl	32344 <cmetrohash64_1@@Base+0x5cc>
   32878:	umull	r0, r2, r0, r8
   3287c:	mla	r1, r1, r8, r2
   32880:	eor	sl, r5, r1
   32884:	eor	r5, r7, r0
   32888:	add	r4, r4, #8
   3288c:	sub	r0, r6, r4
   32890:	cmp	r0, #4
   32894:	blt	328d4 <cmetrohash64_2@@Base+0x504>
   32898:	mov	r0, r4
   3289c:	bl	323a4 <cmetrohash64_1@@Base+0x62c>
   328a0:	umull	r0, r2, r0, r9
   328a4:	mla	r1, r1, r9, r2
   328a8:	adds	r7, r0, r5
   328ac:	adc	r5, r1, sl
   328b0:	mov	r0, r7
   328b4:	mov	r1, r5
   328b8:	mov	r2, #15
   328bc:	bl	32344 <cmetrohash64_1@@Base+0x5cc>
   328c0:	umull	r0, r2, r0, r8
   328c4:	mla	r1, r1, r8, r2
   328c8:	eor	sl, r5, r1
   328cc:	eor	r5, r7, r0
   328d0:	add	r4, r4, #4
   328d4:	sub	r0, r6, r4
   328d8:	cmp	r0, #2
   328dc:	blt	3291c <cmetrohash64_2@@Base+0x54c>
   328e0:	mov	r0, r4
   328e4:	bl	323b0 <cmetrohash64_1@@Base+0x638>
   328e8:	umull	r0, r2, r0, r9
   328ec:	mla	r1, r1, r9, r2
   328f0:	adds	r7, r0, r5
   328f4:	adc	r5, r1, sl
   328f8:	mov	r0, r7
   328fc:	mov	r1, r5
   32900:	mov	r2, #15
   32904:	bl	32344 <cmetrohash64_1@@Base+0x5cc>
   32908:	umull	r0, r2, r0, r8
   3290c:	mla	r1, r1, r8, r2
   32910:	eor	sl, r5, r1
   32914:	eor	r5, r7, r0
   32918:	add	r4, r4, #2
   3291c:	ldr	r7, [fp, #12]
   32920:	sub	r0, r6, r4
   32924:	cmp	r0, #1
   32928:	blt	32964 <cmetrohash64_2@@Base+0x594>
   3292c:	mov	r0, r4
   32930:	bl	323c4 <cmetrohash64_1@@Base+0x64c>
   32934:	umull	r0, r2, r0, r9
   32938:	mla	r1, r1, r9, r2
   3293c:	adds	r4, r0, r5
   32940:	adc	r5, r1, sl
   32944:	mov	r0, r4
   32948:	mov	r1, r5
   3294c:	mov	r2, #23
   32950:	bl	32344 <cmetrohash64_1@@Base+0x5cc>
   32954:	umull	r0, r2, r0, r8
   32958:	mla	r1, r1, r8, r2
   3295c:	eor	sl, r5, r1
   32960:	eor	r5, r4, r0
   32964:	mov	r0, r5
   32968:	mov	r1, sl
   3296c:	mov	r2, #28
   32970:	bl	32344 <cmetrohash64_1@@Base+0x5cc>
   32974:	eor	r1, r1, sl
   32978:	eor	r0, r0, r5
   3297c:	movw	r2, #6389	; 0x18f5
   32980:	movt	r2, #54992	; 0xd6d0
   32984:	umull	r4, r0, r0, r2
   32988:	mla	r5, r1, r2, r0
   3298c:	mov	r0, r4
   32990:	mov	r1, r5
   32994:	mov	r2, #29
   32998:	bl	32344 <cmetrohash64_1@@Base+0x5cc>
   3299c:	eor	r1, r5, r1
   329a0:	str	r1, [r7, #4]
   329a4:	eor	r0, r4, r0
   329a8:	str	r0, [r7]
   329ac:	sub	sp, fp, #28
   329b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000329b4 <fb_name_table_clear@@Base>:
   329b4:	b	329b8 <fb_name_table_clear@@Base+0x4>
   329b8:	push	{r4, sl, fp, lr}
   329bc:	add	fp, sp, #8
   329c0:	mov	r4, r0
   329c4:	ldr	r0, [r0]
   329c8:	cmp	r0, #0
   329cc:	beq	329d4 <fb_name_table_clear@@Base+0x20>
   329d0:	bl	147dc <free@plt>
   329d4:	vmov.i32	q8, #0	; 0x00000000
   329d8:	vst1.32	{d16-d17}, [r4]
   329dc:	pop	{r4, sl, fp, pc}

000329e0 <fb_name_table_destroy@@Base>:
   329e0:	push	{r4, sl, fp, lr}
   329e4:	add	fp, sp, #8
   329e8:	mov	r4, r0
   329ec:	cmp	r1, #0
   329f0:	movne	r0, r4
   329f4:	blne	32a04 <fb_name_table_destroy@@Base+0x24>
   329f8:	mov	r0, r4
   329fc:	pop	{r4, sl, fp, lr}
   32a00:	b	329b8 <fb_name_table_clear@@Base+0x4>
   32a04:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   32a08:	add	fp, sp, #24
   32a0c:	mov	r6, r0
   32a10:	ldr	r0, [r0, #12]
   32a14:	cmp	r0, #0
   32a18:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   32a1c:	mov	r8, r2
   32a20:	mov	r5, r1
   32a24:	ldr	r7, [r6]
   32a28:	mov	r4, #0
   32a2c:	ldr	r1, [r7, r4, lsl #2]
   32a30:	orr	r0, r1, #2
   32a34:	cmp	r0, #2
   32a38:	beq	32a44 <fb_name_table_destroy@@Base+0x64>
   32a3c:	mov	r0, r8
   32a40:	blx	r5
   32a44:	ldr	r0, [r6, #12]
   32a48:	add	r4, r4, #1
   32a4c:	cmp	r4, r0
   32a50:	bcc	32a2c <fb_name_table_destroy@@Base+0x4c>
   32a54:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00032a58 <fb_name_table_init@@Base>:
   32a58:	b	32a5c <fb_name_table_init@@Base+0x4>
   32a5c:	push	{r4, r5, fp, lr}
   32a60:	add	fp, sp, #8
   32a64:	mov	r4, r0
   32a68:	mov	r2, #4
   32a6c:	mov	r0, #179	; 0xb3
   32a70:	mov	r5, r2
   32a74:	mul	r3, r2, r0
   32a78:	lsl	r2, r2, #1
   32a7c:	cmp	r1, r3, lsr #8
   32a80:	bhi	32a70 <fb_name_table_init@@Base+0x18>
   32a84:	mov	r0, r5
   32a88:	mov	r1, #4
   32a8c:	bl	147ac <calloc@plt>
   32a90:	str	r0, [r4]
   32a94:	cmp	r0, #0
   32a98:	movne	r0, #0
   32a9c:	strne	r0, [r4, #4]
   32aa0:	strne	r0, [r4, #8]
   32aa4:	strne	r5, [r4, #12]
   32aa8:	popne	{r4, r5, fp, pc}
   32aac:	mvn	r0, #0
   32ab0:	pop	{r4, r5, fp, pc}

00032ab4 <fb_name_table_resize@@Base>:
   32ab4:	b	32ab8 <fb_name_table_resize@@Base+0x4>
   32ab8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32abc:	add	fp, sp, #28
   32ac0:	sub	sp, sp, #28
   32ac4:	mov	r4, r0
   32ac8:	ldr	sl, [r0]
   32acc:	ldr	r0, [r0, #8]
   32ad0:	cmp	r0, r1
   32ad4:	movhi	r1, r0
   32ad8:	add	r0, sp, #8
   32adc:	bl	32a5c <fb_name_table_init@@Base+0x4>
   32ae0:	mov	r1, r0
   32ae4:	mvn	r0, #0
   32ae8:	cmp	r1, #0
   32aec:	beq	32af8 <fb_name_table_resize@@Base+0x44>
   32af0:	sub	sp, fp, #28
   32af4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32af8:	ldr	r0, [r4, #12]
   32afc:	cmp	r0, #0
   32b00:	beq	32b5c <fb_name_table_resize@@Base+0xa8>
   32b04:	mov	r6, #0
   32b08:	mov	r8, #3
   32b0c:	add	r9, sp, #8
   32b10:	ldr	r7, [sl, r6, lsl #2]
   32b14:	orr	r0, r7, #2
   32b18:	cmp	r0, #2
   32b1c:	beq	32b4c <fb_name_table_resize@@Base+0x98>
   32b20:	mov	r0, r7
   32b24:	bl	32db0 <fb_name_table_insert_item@@Base+0x4c>
   32b28:	mov	r5, r0
   32b2c:	mov	r0, r7
   32b30:	bl	32db8 <fb_name_table_insert_item@@Base+0x54>
   32b34:	mov	r2, r0
   32b38:	str	r8, [sp]
   32b3c:	mov	r0, r9
   32b40:	mov	r1, r5
   32b44:	mov	r3, r7
   32b48:	bl	32b80 <fb_name_table_insert@@Base+0x4>
   32b4c:	ldr	r0, [r4, #12]
   32b50:	add	r6, r6, #1
   32b54:	cmp	r6, r0
   32b58:	bcc	32b10 <fb_name_table_resize@@Base+0x5c>
   32b5c:	mov	r0, r4
   32b60:	bl	329b8 <fb_name_table_clear@@Base+0x4>
   32b64:	add	r0, sp, #8
   32b68:	vld1.64	{d16-d17}, [r0]
   32b6c:	vst1.32	{d16-d17}, [r4]
   32b70:	mov	r0, #0
   32b74:	sub	sp, fp, #28
   32b78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00032b7c <fb_name_table_insert@@Base>:
   32b7c:	b	32b80 <fb_name_table_insert@@Base+0x4>
   32b80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32b84:	add	fp, sp, #28
   32b88:	sub	sp, sp, #12
   32b8c:	str	r2, [sp, #8]
   32b90:	cmp	r3, #2
   32b94:	beq	32cdc <fb_name_table_insert@@Base+0x160>
   32b98:	mov	r9, r3
   32b9c:	cmp	r3, #1
   32ba0:	beq	32cfc <fb_name_table_insert@@Base+0x180>
   32ba4:	cmp	r9, #0
   32ba8:	beq	32d1c <fb_name_table_insert@@Base+0x1a0>
   32bac:	mov	r7, r1
   32bb0:	mov	r5, r0
   32bb4:	ldr	r0, [r0, #8]
   32bb8:	ldr	r1, [r5, #12]
   32bbc:	mov	r2, #179	; 0xb3
   32bc0:	mul	r1, r1, r2
   32bc4:	cmp	r0, r1, lsr #8
   32bc8:	bcc	32be0 <fb_name_table_insert@@Base+0x64>
   32bcc:	lsl	r1, r0, #1
   32bd0:	mov	r0, r5
   32bd4:	bl	32ab8 <fb_name_table_resize@@Base+0x4>
   32bd8:	cmp	r0, #0
   32bdc:	bne	32d3c <fb_name_table_insert@@Base+0x1c0>
   32be0:	ldr	sl, [fp, #8]
   32be4:	ldr	r8, [r5]
   32be8:	ldr	r4, [r5, #12]
   32bec:	mov	r0, r7
   32bf0:	ldr	r1, [sp, #8]
   32bf4:	bl	32f60 <fb_name_table_visit@@Base+0x4>
   32bf8:	sub	r6, r4, #1
   32bfc:	and	r1, r0, r6
   32c00:	orr	r2, sl, #1
   32c04:	cmp	r2, #3
   32c08:	bne	32c40 <fb_name_table_insert@@Base+0xc4>
   32c0c:	ldr	r2, [r5, #8]
   32c10:	add	r2, r2, #1
   32c14:	str	r2, [r5, #8]
   32c18:	b	32c20 <fb_name_table_insert@@Base+0xa4>
   32c1c:	and	r1, r0, r6
   32c20:	add	r0, r0, #1
   32c24:	mov	r5, r8
   32c28:	ldr	r1, [r5, r1, lsl #2]!
   32c2c:	orr	r1, r1, #2
   32c30:	cmp	r1, #2
   32c34:	bne	32c1c <fb_name_table_insert@@Base+0xa0>
   32c38:	mov	r4, #0
   32c3c:	b	32cb8 <fb_name_table_insert@@Base+0x13c>
   32c40:	stm	sp, {r5, r9}
   32c44:	add	sl, r0, #1
   32c48:	mov	r9, #0
   32c4c:	b	32c58 <fb_name_table_insert@@Base+0xdc>
   32c50:	and	r1, sl, r6
   32c54:	add	sl, sl, #1
   32c58:	mov	r5, r8
   32c5c:	ldr	r4, [r5, r1, lsl #2]!
   32c60:	cmp	r4, #2
   32c64:	beq	32c8c <fb_name_table_insert@@Base+0x110>
   32c68:	cmp	r4, #0
   32c6c:	beq	32c98 <fb_name_table_insert@@Base+0x11c>
   32c70:	mov	r0, r7
   32c74:	ldr	r1, [sp, #8]
   32c78:	mov	r2, r4
   32c7c:	bl	32f98 <fb_name_table_visit@@Base+0x3c>
   32c80:	cmp	r0, #0
   32c84:	beq	32c50 <fb_name_table_insert@@Base+0xd4>
   32c88:	b	32cc8 <fb_name_table_insert@@Base+0x14c>
   32c8c:	cmp	r9, #0
   32c90:	moveq	r9, r5
   32c94:	b	32c50 <fb_name_table_insert@@Base+0xd4>
   32c98:	ldr	r1, [sp]
   32c9c:	ldr	r0, [r1, #8]
   32ca0:	add	r0, r0, #1
   32ca4:	str	r0, [r1, #8]
   32ca8:	cmp	r9, #0
   32cac:	movne	r5, r9
   32cb0:	mov	r4, #0
   32cb4:	ldr	r9, [sp, #4]
   32cb8:	str	r9, [r5]
   32cbc:	mov	r0, r4
   32cc0:	sub	sp, fp, #28
   32cc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32cc8:	ldr	r0, [fp, #8]
   32ccc:	cmp	r0, #0
   32cd0:	ldr	r9, [sp, #4]
   32cd4:	streq	r9, [r5]
   32cd8:	b	32cbc <fb_name_table_insert@@Base+0x140>
   32cdc:	movw	r0, #49901	; 0xc2ed
   32ce0:	movt	r0, #4
   32ce4:	movw	r1, #49747	; 0xc253
   32ce8:	movt	r1, #4
   32cec:	movw	r3, #49827	; 0xc2a3
   32cf0:	movt	r3, #4
   32cf4:	mov	r2, #115	; 0x73
   32cf8:	bl	14950 <__assert_fail@plt>
   32cfc:	movw	r0, #49924	; 0xc304
   32d00:	movt	r0, #4
   32d04:	movw	r1, #49747	; 0xc253
   32d08:	movt	r1, #4
   32d0c:	movw	r3, #49827	; 0xc2a3
   32d10:	movt	r3, #4
   32d14:	mov	r2, #116	; 0x74
   32d18:	bl	14950 <__assert_fail@plt>
   32d1c:	movw	r0, #49724	; 0xc23c
   32d20:	movt	r0, #4
   32d24:	movw	r1, #49747	; 0xc253
   32d28:	movt	r1, #4
   32d2c:	movw	r3, #49827	; 0xc2a3
   32d30:	movt	r3, #4
   32d34:	mov	r2, #114	; 0x72
   32d38:	bl	14950 <__assert_fail@plt>
   32d3c:	movw	r0, #4264	; 0x10a8
   32d40:	movt	r0, #6
   32d44:	ldr	r0, [r0]
   32d48:	movw	r1, #49945	; 0xc319
   32d4c:	movt	r1, #4
   32d50:	movw	r2, #49968	; 0xc330
   32d54:	movt	r2, #4
   32d58:	bl	14890 <fprintf@plt>
   32d5c:	mov	r0, #1
   32d60:	bl	14878 <exit@plt>

00032d64 <fb_name_table_insert_item@@Base>:
   32d64:	push	{r4, r5, r6, r7, fp, lr}
   32d68:	add	fp, sp, #16
   32d6c:	sub	sp, sp, #8
   32d70:	mov	r4, r2
   32d74:	mov	r5, r1
   32d78:	mov	r6, r0
   32d7c:	mov	r0, r1
   32d80:	bl	32db0 <fb_name_table_insert_item@@Base+0x4c>
   32d84:	mov	r7, r0
   32d88:	mov	r0, r5
   32d8c:	bl	32db8 <fb_name_table_insert_item@@Base+0x54>
   32d90:	mov	r2, r0
   32d94:	str	r4, [sp]
   32d98:	mov	r0, r6
   32d9c:	mov	r1, r7
   32da0:	mov	r3, r5
   32da4:	bl	32b80 <fb_name_table_insert@@Base+0x4>
   32da8:	sub	sp, fp, #16
   32dac:	pop	{r4, r5, r6, r7, fp, pc}
   32db0:	ldr	r0, [r0, #8]
   32db4:	bx	lr
   32db8:	ldr	r0, [r0, #12]
   32dbc:	bx	lr

00032dc0 <fb_name_table_find@@Base>:
   32dc0:	b	32dc4 <fb_name_table_find@@Base+0x4>
   32dc4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   32dc8:	add	fp, sp, #24
   32dcc:	ldr	r4, [r0]
   32dd0:	cmp	r4, #0
   32dd4:	beq	32e38 <fb_name_table_find@@Base+0x78>
   32dd8:	mov	r8, r2
   32ddc:	mov	r9, r1
   32de0:	ldr	r5, [r0, #12]
   32de4:	mov	r0, r1
   32de8:	mov	r1, r2
   32dec:	bl	32f60 <fb_name_table_visit@@Base+0x4>
   32df0:	mov	r6, r0
   32df4:	sub	r5, r5, #1
   32df8:	b	32e00 <fb_name_table_find@@Base+0x40>
   32dfc:	add	r6, r6, #1
   32e00:	and	r0, r6, r5
   32e04:	ldr	r7, [r4, r0, lsl #2]
   32e08:	cmp	r7, #2
   32e0c:	beq	32dfc <fb_name_table_find@@Base+0x3c>
   32e10:	cmp	r7, #0
   32e14:	beq	32e38 <fb_name_table_find@@Base+0x78>
   32e18:	mov	r0, r9
   32e1c:	mov	r1, r8
   32e20:	mov	r2, r7
   32e24:	bl	32f98 <fb_name_table_visit@@Base+0x3c>
   32e28:	cmp	r0, #0
   32e2c:	beq	32dfc <fb_name_table_find@@Base+0x3c>
   32e30:	mov	r0, r7
   32e34:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   32e38:	mov	r7, #0
   32e3c:	mov	r0, r7
   32e40:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00032e44 <fb_name_table_find_item@@Base>:
   32e44:	push	{r4, r5, r6, sl, fp, lr}
   32e48:	add	fp, sp, #16
   32e4c:	mov	r4, r1
   32e50:	mov	r5, r0
   32e54:	mov	r0, r1
   32e58:	bl	32db0 <fb_name_table_insert_item@@Base+0x4c>
   32e5c:	mov	r6, r0
   32e60:	mov	r0, r4
   32e64:	bl	32db8 <fb_name_table_insert_item@@Base+0x54>
   32e68:	mov	r2, r0
   32e6c:	mov	r0, r5
   32e70:	mov	r1, r6
   32e74:	pop	{r4, r5, r6, sl, fp, lr}
   32e78:	b	32dc4 <fb_name_table_find@@Base+0x4>

00032e7c <fb_name_table_remove@@Base>:
   32e7c:	b	32e80 <fb_name_table_remove@@Base+0x4>
   32e80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32e84:	add	fp, sp, #28
   32e88:	sub	sp, sp, #4
   32e8c:	ldr	r5, [r0]
   32e90:	mov	r7, #0
   32e94:	cmp	r5, #0
   32e98:	beq	32f18 <fb_name_table_remove@@Base+0x9c>
   32e9c:	mov	r9, r2
   32ea0:	mov	sl, r1
   32ea4:	str	r0, [sp]
   32ea8:	ldr	r6, [r0, #12]
   32eac:	mov	r0, r1
   32eb0:	mov	r1, r2
   32eb4:	bl	32f60 <fb_name_table_visit@@Base+0x4>
   32eb8:	mov	r4, r0
   32ebc:	sub	r6, r6, #1
   32ec0:	b	32ec8 <fb_name_table_remove@@Base+0x4c>
   32ec4:	add	r4, r4, #1
   32ec8:	and	r8, r4, r6
   32ecc:	ldr	r7, [r5, r8, lsl #2]
   32ed0:	cmp	r7, #2
   32ed4:	beq	32ec4 <fb_name_table_remove@@Base+0x48>
   32ed8:	cmp	r7, #0
   32edc:	beq	32f14 <fb_name_table_remove@@Base+0x98>
   32ee0:	mov	r0, sl
   32ee4:	mov	r1, r9
   32ee8:	mov	r2, r7
   32eec:	bl	32f98 <fb_name_table_visit@@Base+0x3c>
   32ef0:	cmp	r0, #0
   32ef4:	beq	32ec4 <fb_name_table_remove@@Base+0x48>
   32ef8:	mov	r0, #2
   32efc:	str	r0, [r5, r8, lsl #2]
   32f00:	ldr	r1, [sp]
   32f04:	ldr	r0, [r1, #8]
   32f08:	sub	r0, r0, #1
   32f0c:	str	r0, [r1, #8]
   32f10:	b	32f18 <fb_name_table_remove@@Base+0x9c>
   32f14:	mov	r7, #0
   32f18:	mov	r0, r7
   32f1c:	sub	sp, fp, #28
   32f20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00032f24 <fb_name_table_remove_item@@Base>:
   32f24:	push	{r4, r5, r6, sl, fp, lr}
   32f28:	add	fp, sp, #16
   32f2c:	mov	r4, r1
   32f30:	mov	r5, r0
   32f34:	mov	r0, r1
   32f38:	bl	32db0 <fb_name_table_insert_item@@Base+0x4c>
   32f3c:	mov	r6, r0
   32f40:	mov	r0, r4
   32f44:	bl	32db8 <fb_name_table_insert_item@@Base+0x54>
   32f48:	mov	r2, r0
   32f4c:	mov	r0, r5
   32f50:	mov	r1, r6
   32f54:	pop	{r4, r5, r6, sl, fp, lr}
   32f58:	b	32e80 <fb_name_table_remove@@Base+0x4>

00032f5c <fb_name_table_visit@@Base>:
   32f5c:	b	32a04 <fb_name_table_destroy@@Base+0x24>
   32f60:	push	{fp, lr}
   32f64:	mov	fp, sp
   32f68:	sub	sp, sp, #16
   32f6c:	add	r2, sp, #8
   32f70:	movw	r3, #15186	; 0x3b52
   32f74:	movt	r3, #12137	; 0x2f69
   32f78:	str	r3, [sp]
   32f7c:	str	r2, [sp, #4]
   32f80:	mov	r2, r1
   32f84:	mov	r3, #0
   32f88:	bl	31d78 <cmetrohash64_1@@Base>
   32f8c:	ldr	r0, [sp, #8]
   32f90:	mov	sp, fp
   32f94:	pop	{fp, pc}
   32f98:	mov	ip, r1
   32f9c:	ldr	r3, [r2, #12]
   32fa0:	mov	r1, #0
   32fa4:	cmp	r3, ip
   32fa8:	bne	32fcc <fb_name_table_visit@@Base+0x70>
   32fac:	push	{fp, lr}
   32fb0:	mov	fp, sp
   32fb4:	ldr	r1, [r2, #8]
   32fb8:	mov	r2, ip
   32fbc:	bl	14800 <memcmp@plt>
   32fc0:	clz	r0, r0
   32fc4:	lsr	r1, r0, #5
   32fc8:	pop	{fp, lr}
   32fcc:	mov	r0, r1
   32fd0:	bx	lr

00032fd4 <fb_value_set_clear@@Base>:
   32fd4:	b	32fd8 <fb_value_set_clear@@Base+0x4>
   32fd8:	push	{r4, sl, fp, lr}
   32fdc:	add	fp, sp, #8
   32fe0:	mov	r4, r0
   32fe4:	ldr	r0, [r0]
   32fe8:	cmp	r0, #0
   32fec:	beq	32ff4 <fb_value_set_clear@@Base+0x20>
   32ff0:	bl	147dc <free@plt>
   32ff4:	vmov.i32	q8, #0	; 0x00000000
   32ff8:	vst1.32	{d16-d17}, [r4]
   32ffc:	pop	{r4, sl, fp, pc}

00033000 <fb_value_set_destroy@@Base>:
   33000:	push	{r4, sl, fp, lr}
   33004:	add	fp, sp, #8
   33008:	mov	r4, r0
   3300c:	cmp	r1, #0
   33010:	movne	r0, r4
   33014:	blne	33024 <fb_value_set_destroy@@Base+0x24>
   33018:	mov	r0, r4
   3301c:	pop	{r4, sl, fp, lr}
   33020:	b	32fd8 <fb_value_set_clear@@Base+0x4>
   33024:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   33028:	add	fp, sp, #24
   3302c:	mov	r6, r0
   33030:	ldr	r0, [r0, #12]
   33034:	cmp	r0, #0
   33038:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   3303c:	mov	r8, r2
   33040:	mov	r5, r1
   33044:	ldr	r7, [r6]
   33048:	mov	r4, #0
   3304c:	ldr	r1, [r7, r4, lsl #2]
   33050:	orr	r0, r1, #2
   33054:	cmp	r0, #2
   33058:	beq	33064 <fb_value_set_destroy@@Base+0x64>
   3305c:	mov	r0, r8
   33060:	blx	r5
   33064:	ldr	r0, [r6, #12]
   33068:	add	r4, r4, #1
   3306c:	cmp	r4, r0
   33070:	bcc	3304c <fb_value_set_destroy@@Base+0x4c>
   33074:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00033078 <fb_value_set_init@@Base>:
   33078:	b	3307c <fb_value_set_init@@Base+0x4>
   3307c:	push	{r4, r5, fp, lr}
   33080:	add	fp, sp, #8
   33084:	mov	r4, r0
   33088:	mov	r2, #4
   3308c:	mov	r0, #179	; 0xb3
   33090:	mov	r5, r2
   33094:	mul	r3, r2, r0
   33098:	lsl	r2, r2, #1
   3309c:	cmp	r1, r3, lsr #8
   330a0:	bhi	33090 <fb_value_set_init@@Base+0x18>
   330a4:	mov	r0, r5
   330a8:	mov	r1, #4
   330ac:	bl	147ac <calloc@plt>
   330b0:	str	r0, [r4]
   330b4:	cmp	r0, #0
   330b8:	movne	r0, #0
   330bc:	strne	r0, [r4, #4]
   330c0:	strne	r0, [r4, #8]
   330c4:	strne	r5, [r4, #12]
   330c8:	popne	{r4, r5, fp, pc}
   330cc:	mvn	r0, #0
   330d0:	pop	{r4, r5, fp, pc}

000330d4 <fb_value_set_resize@@Base>:
   330d4:	b	330d8 <fb_value_set_resize@@Base+0x4>
   330d8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   330dc:	add	fp, sp, #24
   330e0:	sub	sp, sp, #16
   330e4:	mov	r4, r0
   330e8:	ldr	r5, [r0]
   330ec:	ldr	r0, [r0, #8]
   330f0:	cmp	r0, r1
   330f4:	movhi	r1, r0
   330f8:	mov	r8, sp
   330fc:	mov	r0, r8
   33100:	bl	3307c <fb_value_set_init@@Base+0x4>
   33104:	mov	r1, r0
   33108:	mvn	r0, #0
   3310c:	cmp	r1, #0
   33110:	beq	3311c <fb_value_set_resize@@Base+0x48>
   33114:	sub	sp, fp, #24
   33118:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3311c:	ldr	r0, [r4, #12]
   33120:	cmp	r0, #0
   33124:	beq	3316c <fb_value_set_resize@@Base+0x98>
   33128:	mov	r6, #0
   3312c:	mov	r9, sp
   33130:	ldr	r7, [r5, r6, lsl #2]
   33134:	orr	r0, r7, #2
   33138:	cmp	r0, #2
   3313c:	beq	3315c <fb_value_set_resize@@Base+0x88>
   33140:	mov	r0, r7
   33144:	bl	333a4 <fb_value_set_insert_item@@Base+0x34>
   33148:	mov	r1, r0
   3314c:	mov	r0, r9
   33150:	mov	r2, r7
   33154:	mov	r3, #3
   33158:	bl	33194 <fb_value_set_insert@@Base+0xc>
   3315c:	ldr	r0, [r4, #12]
   33160:	add	r6, r6, #1
   33164:	cmp	r6, r0
   33168:	bcc	33130 <fb_value_set_resize@@Base+0x5c>
   3316c:	mov	r0, r4
   33170:	bl	32fd8 <fb_value_set_clear@@Base+0x4>
   33174:	vld1.64	{d16-d17}, [r8]
   33178:	vst1.32	{d16-d17}, [r4]
   3317c:	mov	r0, #0
   33180:	sub	sp, fp, #24
   33184:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00033188 <fb_value_set_insert@@Base>:
   33188:	mov	r2, r3
   3318c:	ldr	r3, [sp]
   33190:	b	33194 <fb_value_set_insert@@Base+0xc>
   33194:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33198:	add	fp, sp, #28
   3319c:	sub	sp, sp, #12
   331a0:	cmp	r2, #2
   331a4:	beq	332e8 <fb_value_set_insert@@Base+0x160>
   331a8:	mov	r9, r2
   331ac:	cmp	r2, #1
   331b0:	beq	33308 <fb_value_set_insert@@Base+0x180>
   331b4:	cmp	r9, #0
   331b8:	beq	33328 <fb_value_set_insert@@Base+0x1a0>
   331bc:	mov	r6, r3
   331c0:	mov	r7, r1
   331c4:	mov	r4, r0
   331c8:	ldr	r0, [r0, #8]
   331cc:	ldr	r1, [r4, #12]
   331d0:	mov	r2, #179	; 0xb3
   331d4:	mul	r1, r1, r2
   331d8:	cmp	r0, r1, lsr #8
   331dc:	bcc	331f4 <fb_value_set_insert@@Base+0x6c>
   331e0:	lsl	r1, r0, #1
   331e4:	mov	r0, r4
   331e8:	bl	330d8 <fb_value_set_resize@@Base+0x4>
   331ec:	cmp	r0, #0
   331f0:	bne	33348 <fb_value_set_insert@@Base+0x1c0>
   331f4:	ldr	r8, [r4]
   331f8:	ldr	r0, [r4, #12]
   331fc:	sub	r5, r0, #1
   33200:	mov	r0, r7
   33204:	bl	33504 <fb_value_set_visit@@Base+0x4>
   33208:	and	r1, r0, r5
   3320c:	orr	r2, r6, #1
   33210:	cmp	r2, #3
   33214:	bne	3324c <fb_value_set_insert@@Base+0xc4>
   33218:	ldr	r2, [r4, #8]
   3321c:	add	r2, r2, #1
   33220:	str	r2, [r4, #8]
   33224:	b	3322c <fb_value_set_insert@@Base+0xa4>
   33228:	and	r1, r0, r5
   3322c:	add	r0, r0, #1
   33230:	mov	r4, r8
   33234:	ldr	r1, [r4, r1, lsl #2]!
   33238:	orr	r1, r1, #2
   3323c:	cmp	r1, #2
   33240:	bne	33228 <fb_value_set_insert@@Base+0xa0>
   33244:	mov	r6, #0
   33248:	b	332c4 <fb_value_set_insert@@Base+0x13c>
   3324c:	str	r6, [sp]
   33250:	stmib	sp, {r4, r9}
   33254:	add	sl, r0, #1
   33258:	mov	r9, #0
   3325c:	b	33268 <fb_value_set_insert@@Base+0xe0>
   33260:	and	r1, sl, r5
   33264:	add	sl, sl, #1
   33268:	mov	r4, r8
   3326c:	ldr	r6, [r4, r1, lsl #2]!
   33270:	cmp	r6, #2
   33274:	beq	33298 <fb_value_set_insert@@Base+0x110>
   33278:	cmp	r6, #0
   3327c:	beq	332a4 <fb_value_set_insert@@Base+0x11c>
   33280:	mov	r0, r7
   33284:	mov	r1, r6
   33288:	bl	33538 <fb_value_set_visit@@Base+0x38>
   3328c:	cmp	r0, #0
   33290:	beq	33260 <fb_value_set_insert@@Base+0xd8>
   33294:	b	332d4 <fb_value_set_insert@@Base+0x14c>
   33298:	cmp	r9, #0
   3329c:	moveq	r9, r4
   332a0:	b	33260 <fb_value_set_insert@@Base+0xd8>
   332a4:	ldr	r1, [sp, #4]
   332a8:	ldr	r0, [r1, #8]
   332ac:	add	r0, r0, #1
   332b0:	str	r0, [r1, #8]
   332b4:	cmp	r9, #0
   332b8:	movne	r4, r9
   332bc:	mov	r6, #0
   332c0:	ldr	r9, [sp, #8]
   332c4:	str	r9, [r4]
   332c8:	mov	r0, r6
   332cc:	sub	sp, fp, #28
   332d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   332d4:	ldr	r0, [sp]
   332d8:	cmp	r0, #0
   332dc:	ldr	r9, [sp, #8]
   332e0:	streq	r9, [r4]
   332e4:	b	332c8 <fb_value_set_insert@@Base+0x140>
   332e8:	movw	r0, #49901	; 0xc2ed
   332ec:	movt	r0, #4
   332f0:	movw	r1, #49747	; 0xc253
   332f4:	movt	r1, #4
   332f8:	movw	r3, #49827	; 0xc2a3
   332fc:	movt	r3, #4
   33300:	mov	r2, #115	; 0x73
   33304:	bl	14950 <__assert_fail@plt>
   33308:	movw	r0, #49924	; 0xc304
   3330c:	movt	r0, #4
   33310:	movw	r1, #49747	; 0xc253
   33314:	movt	r1, #4
   33318:	movw	r3, #49827	; 0xc2a3
   3331c:	movt	r3, #4
   33320:	mov	r2, #116	; 0x74
   33324:	bl	14950 <__assert_fail@plt>
   33328:	movw	r0, #49724	; 0xc23c
   3332c:	movt	r0, #4
   33330:	movw	r1, #49747	; 0xc253
   33334:	movt	r1, #4
   33338:	movw	r3, #49827	; 0xc2a3
   3333c:	movt	r3, #4
   33340:	mov	r2, #114	; 0x72
   33344:	bl	14950 <__assert_fail@plt>
   33348:	movw	r0, #4264	; 0x10a8
   3334c:	movt	r0, #6
   33350:	ldr	r0, [r0]
   33354:	movw	r1, #49945	; 0xc319
   33358:	movt	r1, #4
   3335c:	movw	r2, #49968	; 0xc330
   33360:	movt	r2, #4
   33364:	bl	14890 <fprintf@plt>
   33368:	mov	r0, #1
   3336c:	bl	14878 <exit@plt>

00033370 <fb_value_set_insert_item@@Base>:
   33370:	push	{r4, r5, r6, sl, fp, lr}
   33374:	add	fp, sp, #16
   33378:	mov	r4, r2
   3337c:	mov	r5, r1
   33380:	mov	r6, r0
   33384:	mov	r0, r1
   33388:	bl	333a4 <fb_value_set_insert_item@@Base+0x34>
   3338c:	mov	r1, r0
   33390:	mov	r0, r6
   33394:	mov	r2, r5
   33398:	mov	r3, r4
   3339c:	pop	{r4, r5, r6, sl, fp, lr}
   333a0:	b	33194 <fb_value_set_insert@@Base+0xc>
   333a4:	bx	lr

000333a8 <fb_value_set_find@@Base>:
   333a8:	b	333ac <fb_value_set_find@@Base+0x4>
   333ac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   333b0:	add	fp, sp, #24
   333b4:	ldr	r7, [r0]
   333b8:	cmp	r7, #0
   333bc:	beq	33414 <fb_value_set_find@@Base+0x6c>
   333c0:	mov	r8, r1
   333c4:	ldr	r0, [r0, #12]
   333c8:	sub	r4, r0, #1
   333cc:	mov	r0, r1
   333d0:	bl	33504 <fb_value_set_visit@@Base+0x4>
   333d4:	mov	r5, r0
   333d8:	b	333e0 <fb_value_set_find@@Base+0x38>
   333dc:	add	r5, r5, #1
   333e0:	and	r0, r5, r4
   333e4:	ldr	r6, [r7, r0, lsl #2]
   333e8:	cmp	r6, #2
   333ec:	beq	333dc <fb_value_set_find@@Base+0x34>
   333f0:	cmp	r6, #0
   333f4:	beq	33414 <fb_value_set_find@@Base+0x6c>
   333f8:	mov	r0, r8
   333fc:	mov	r1, r6
   33400:	bl	33538 <fb_value_set_visit@@Base+0x38>
   33404:	cmp	r0, #0
   33408:	beq	333dc <fb_value_set_find@@Base+0x34>
   3340c:	mov	r0, r6
   33410:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   33414:	mov	r6, #0
   33418:	mov	r0, r6
   3341c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00033420 <fb_value_set_find_item@@Base>:
   33420:	push	{r4, sl, fp, lr}
   33424:	add	fp, sp, #8
   33428:	mov	r4, r0
   3342c:	mov	r0, r1
   33430:	bl	333a4 <fb_value_set_insert_item@@Base+0x34>
   33434:	mov	r1, r0
   33438:	mov	r0, r4
   3343c:	pop	{r4, sl, fp, lr}
   33440:	b	333ac <fb_value_set_find@@Base+0x4>

00033444 <fb_value_set_remove@@Base>:
   33444:	b	33448 <fb_value_set_remove@@Base+0x4>
   33448:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3344c:	add	fp, sp, #28
   33450:	sub	sp, sp, #4
   33454:	ldr	sl, [r0]
   33458:	mov	r6, #0
   3345c:	cmp	sl, #0
   33460:	beq	334d0 <fb_value_set_remove@@Base+0x8c>
   33464:	mov	r9, r1
   33468:	mov	r8, r0
   3346c:	ldr	r0, [r0, #12]
   33470:	sub	r5, r0, #1
   33474:	mov	r0, r1
   33478:	bl	33504 <fb_value_set_visit@@Base+0x4>
   3347c:	mov	r7, r0
   33480:	b	33488 <fb_value_set_remove@@Base+0x44>
   33484:	add	r7, r7, #1
   33488:	and	r4, r7, r5
   3348c:	ldr	r6, [sl, r4, lsl #2]
   33490:	cmp	r6, #2
   33494:	beq	33484 <fb_value_set_remove@@Base+0x40>
   33498:	cmp	r6, #0
   3349c:	beq	334cc <fb_value_set_remove@@Base+0x88>
   334a0:	mov	r0, r9
   334a4:	mov	r1, r6
   334a8:	bl	33538 <fb_value_set_visit@@Base+0x38>
   334ac:	cmp	r0, #0
   334b0:	beq	33484 <fb_value_set_remove@@Base+0x40>
   334b4:	mov	r0, #2
   334b8:	str	r0, [sl, r4, lsl #2]
   334bc:	ldr	r0, [r8, #8]
   334c0:	sub	r0, r0, #1
   334c4:	str	r0, [r8, #8]
   334c8:	b	334d0 <fb_value_set_remove@@Base+0x8c>
   334cc:	mov	r6, #0
   334d0:	mov	r0, r6
   334d4:	sub	sp, fp, #28
   334d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000334dc <fb_value_set_remove_item@@Base>:
   334dc:	push	{r4, sl, fp, lr}
   334e0:	add	fp, sp, #8
   334e4:	mov	r4, r0
   334e8:	mov	r0, r1
   334ec:	bl	333a4 <fb_value_set_insert_item@@Base+0x34>
   334f0:	mov	r1, r0
   334f4:	mov	r0, r4
   334f8:	pop	{r4, sl, fp, lr}
   334fc:	b	33448 <fb_value_set_remove@@Base+0x4>

00033500 <fb_value_set_visit@@Base>:
   33500:	b	33024 <fb_value_set_destroy@@Base+0x24>
   33504:	ldrh	r1, [r0, #8]
   33508:	cmp	r1, #6
   3350c:	beq	3352c <fb_value_set_visit@@Base+0x2c>
   33510:	cmp	r1, #5
   33514:	cmpne	r1, #4
   33518:	movne	r0, #0
   3351c:	bxne	lr
   33520:	ldr	r0, [r0]
   33524:	eor	r0, r0, r1
   33528:	b	33594 <fb_value_set_visit@@Base+0x94>
   3352c:	ldrb	r0, [r0]
   33530:	eor	r0, r0, r1
   33534:	b	33594 <fb_value_set_visit@@Base+0x94>
   33538:	mov	ip, r0
   3353c:	ldrh	r3, [r0, #8]
   33540:	ldrh	r2, [r1, #8]
   33544:	mov	r0, #0
   33548:	cmp	r3, r2
   3354c:	bxne	lr
   33550:	cmp	r3, #6
   33554:	beq	3357c <fb_value_set_visit@@Base+0x7c>
   33558:	cmp	r3, #5
   3355c:	cmpne	r3, #4
   33560:	bne	33590 <fb_value_set_visit@@Base+0x90>
   33564:	ldrd	r0, [r1]
   33568:	ldrd	r2, [ip]
   3356c:	eor	r1, r3, r1
   33570:	eor	r0, r2, r0
   33574:	orr	r0, r0, r1
   33578:	b	33588 <fb_value_set_visit@@Base+0x88>
   3357c:	ldrb	r0, [r1]
   33580:	ldrb	r1, [ip]
   33584:	sub	r0, r1, r0
   33588:	clz	r0, r0
   3358c:	lsr	r0, r0, #5
   33590:	bx	lr
   33594:	movw	r1, #15186	; 0x3b52
   33598:	movt	r1, #12137	; 0x2f69
   3359c:	eor	r0, r0, r1
   335a0:	movw	r1, #31153	; 0x79b1
   335a4:	movt	r1, #40503	; 0x9e37
   335a8:	mul	r0, r0, r1
   335ac:	bx	lr
   335b0:	eor	r1, r1, #-2147483648	; 0x80000000
   335b4:	b	335bc <fb_value_set_visit@@Base+0xbc>
   335b8:	eor	r3, r3, #-2147483648	; 0x80000000
   335bc:	push	{r4, r5, lr}
   335c0:	lsl	r4, r1, #1
   335c4:	lsl	r5, r3, #1
   335c8:	teq	r4, r5
   335cc:	teqeq	r0, r2
   335d0:	orrsne	ip, r4, r0
   335d4:	orrsne	ip, r5, r2
   335d8:	mvnsne	ip, r4, asr #21
   335dc:	mvnsne	ip, r5, asr #21
   335e0:	beq	337cc <fb_value_set_visit@@Base+0x2cc>
   335e4:	lsr	r4, r4, #21
   335e8:	rsbs	r5, r4, r5, lsr #21
   335ec:	rsblt	r5, r5, #0
   335f0:	ble	33610 <fb_value_set_visit@@Base+0x110>
   335f4:	add	r4, r4, r5
   335f8:	eor	r2, r0, r2
   335fc:	eor	r3, r1, r3
   33600:	eor	r0, r2, r0
   33604:	eor	r1, r3, r1
   33608:	eor	r2, r0, r2
   3360c:	eor	r3, r1, r3
   33610:	cmp	r5, #54	; 0x36
   33614:	pophi	{r4, r5, pc}
   33618:	tst	r1, #-2147483648	; 0x80000000
   3361c:	lsl	r1, r1, #12
   33620:	mov	ip, #1048576	; 0x100000
   33624:	orr	r1, ip, r1, lsr #12
   33628:	beq	33634 <fb_value_set_visit@@Base+0x134>
   3362c:	rsbs	r0, r0, #0
   33630:	rsc	r1, r1, #0
   33634:	tst	r3, #-2147483648	; 0x80000000
   33638:	lsl	r3, r3, #12
   3363c:	orr	r3, ip, r3, lsr #12
   33640:	beq	3364c <fb_value_set_visit@@Base+0x14c>
   33644:	rsbs	r2, r2, #0
   33648:	rsc	r3, r3, #0
   3364c:	teq	r4, r5
   33650:	beq	337b4 <fb_value_set_visit@@Base+0x2b4>
   33654:	sub	r4, r4, #1
   33658:	rsbs	lr, r5, #32
   3365c:	blt	33678 <fb_value_set_visit@@Base+0x178>
   33660:	lsl	ip, r2, lr
   33664:	adds	r0, r0, r2, lsr r5
   33668:	adc	r1, r1, #0
   3366c:	adds	r0, r0, r3, lsl lr
   33670:	adcs	r1, r1, r3, asr r5
   33674:	b	33694 <fb_value_set_visit@@Base+0x194>
   33678:	sub	r5, r5, #32
   3367c:	add	lr, lr, #32
   33680:	cmp	r2, #1
   33684:	lsl	ip, r3, lr
   33688:	orrcs	ip, ip, #2
   3368c:	adds	r0, r0, r3, asr r5
   33690:	adcs	r1, r1, r3, asr #31
   33694:	and	r5, r1, #-2147483648	; 0x80000000
   33698:	bpl	336a8 <fb_value_set_visit@@Base+0x1a8>
   3369c:	rsbs	ip, ip, #0
   336a0:	rscs	r0, r0, #0
   336a4:	rsc	r1, r1, #0
   336a8:	cmp	r1, #1048576	; 0x100000
   336ac:	bcc	336ec <fb_value_set_visit@@Base+0x1ec>
   336b0:	cmp	r1, #2097152	; 0x200000
   336b4:	bcc	336d4 <fb_value_set_visit@@Base+0x1d4>
   336b8:	lsrs	r1, r1, #1
   336bc:	rrxs	r0, r0
   336c0:	rrx	ip, ip
   336c4:	add	r4, r4, #1
   336c8:	lsl	r2, r4, #21
   336cc:	cmn	r2, #4194304	; 0x400000
   336d0:	bcs	3382c <fb_value_set_visit@@Base+0x32c>
   336d4:	cmp	ip, #-2147483648	; 0x80000000
   336d8:	lsrseq	ip, r0, #1
   336dc:	adcs	r0, r0, #0
   336e0:	adc	r1, r1, r4, lsl #20
   336e4:	orr	r1, r1, r5
   336e8:	pop	{r4, r5, pc}
   336ec:	lsls	ip, ip, #1
   336f0:	adcs	r0, r0, r0
   336f4:	adc	r1, r1, r1
   336f8:	tst	r1, #1048576	; 0x100000
   336fc:	sub	r4, r4, #1
   33700:	bne	336d4 <fb_value_set_visit@@Base+0x1d4>
   33704:	teq	r1, #0
   33708:	moveq	r1, r0
   3370c:	moveq	r0, #0
   33710:	clz	r3, r1
   33714:	addeq	r3, r3, #32
   33718:	sub	r3, r3, #11
   3371c:	subs	r2, r3, #32
   33720:	bge	33744 <fb_value_set_visit@@Base+0x244>
   33724:	adds	r2, r2, #12
   33728:	ble	33740 <fb_value_set_visit@@Base+0x240>
   3372c:	add	ip, r2, #20
   33730:	rsb	r2, r2, #12
   33734:	lsl	r0, r1, ip
   33738:	lsr	r1, r1, r2
   3373c:	b	33754 <fb_value_set_visit@@Base+0x254>
   33740:	add	r2, r2, #20
   33744:	rsble	ip, r2, #32
   33748:	lsl	r1, r1, r2
   3374c:	orrle	r1, r1, r0, lsr ip
   33750:	lslle	r0, r0, r2
   33754:	subs	r4, r4, r3
   33758:	addge	r1, r1, r4, lsl #20
   3375c:	orrge	r1, r1, r5
   33760:	popge	{r4, r5, pc}
   33764:	mvn	r4, r4
   33768:	subs	r4, r4, #31
   3376c:	bge	337a8 <fb_value_set_visit@@Base+0x2a8>
   33770:	adds	r4, r4, #12
   33774:	bgt	33790 <fb_value_set_visit@@Base+0x290>
   33778:	add	r4, r4, #20
   3377c:	rsb	r2, r4, #32
   33780:	lsr	r0, r0, r4
   33784:	orr	r0, r0, r1, lsl r2
   33788:	orr	r1, r5, r1, lsr r4
   3378c:	pop	{r4, r5, pc}
   33790:	rsb	r4, r4, #12
   33794:	rsb	r2, r4, #32
   33798:	lsr	r0, r0, r2
   3379c:	orr	r0, r0, r1, lsl r4
   337a0:	mov	r1, r5
   337a4:	pop	{r4, r5, pc}
   337a8:	lsr	r0, r1, r4
   337ac:	mov	r1, r5
   337b0:	pop	{r4, r5, pc}
   337b4:	teq	r4, #0
   337b8:	eor	r3, r3, #1048576	; 0x100000
   337bc:	eoreq	r1, r1, #1048576	; 0x100000
   337c0:	addeq	r4, r4, #1
   337c4:	subne	r5, r5, #1
   337c8:	b	33654 <fb_value_set_visit@@Base+0x154>
   337cc:	mvns	ip, r4, asr #21
   337d0:	mvnsne	ip, r5, asr #21
   337d4:	beq	3383c <fb_value_set_visit@@Base+0x33c>
   337d8:	teq	r4, r5
   337dc:	teqeq	r0, r2
   337e0:	beq	337f4 <fb_value_set_visit@@Base+0x2f4>
   337e4:	orrs	ip, r4, r0
   337e8:	moveq	r1, r3
   337ec:	moveq	r0, r2
   337f0:	pop	{r4, r5, pc}
   337f4:	teq	r1, r3
   337f8:	movne	r1, #0
   337fc:	movne	r0, #0
   33800:	popne	{r4, r5, pc}
   33804:	lsrs	ip, r4, #21
   33808:	bne	3381c <fb_value_set_visit@@Base+0x31c>
   3380c:	lsls	r0, r0, #1
   33810:	adcs	r1, r1, r1
   33814:	orrcs	r1, r1, #-2147483648	; 0x80000000
   33818:	pop	{r4, r5, pc}
   3381c:	adds	r4, r4, #4194304	; 0x400000
   33820:	addcc	r1, r1, #1048576	; 0x100000
   33824:	popcc	{r4, r5, pc}
   33828:	and	r5, r1, #-2147483648	; 0x80000000
   3382c:	orr	r1, r5, #2130706432	; 0x7f000000
   33830:	orr	r1, r1, #15728640	; 0xf00000
   33834:	mov	r0, #0
   33838:	pop	{r4, r5, pc}
   3383c:	mvns	ip, r4, asr #21
   33840:	movne	r1, r3
   33844:	movne	r0, r2
   33848:	mvnseq	ip, r5, asr #21
   3384c:	movne	r3, r1
   33850:	movne	r2, r0
   33854:	orrs	r4, r0, r1, lsl #12
   33858:	orrseq	r5, r2, r3, lsl #12
   3385c:	teqeq	r1, r3
   33860:	orrne	r1, r1, #524288	; 0x80000
   33864:	pop	{r4, r5, pc}
   33868:	teq	r0, #0
   3386c:	moveq	r1, #0
   33870:	bxeq	lr
   33874:	push	{r4, r5, lr}
   33878:	mov	r4, #1024	; 0x400
   3387c:	add	r4, r4, #50	; 0x32
   33880:	mov	r5, #0
   33884:	mov	r1, #0
   33888:	b	33704 <fb_value_set_visit@@Base+0x204>
   3388c:	teq	r0, #0
   33890:	moveq	r1, #0
   33894:	bxeq	lr
   33898:	push	{r4, r5, lr}
   3389c:	mov	r4, #1024	; 0x400
   338a0:	add	r4, r4, #50	; 0x32
   338a4:	ands	r5, r0, #-2147483648	; 0x80000000
   338a8:	rsbmi	r0, r0, #0
   338ac:	mov	r1, #0
   338b0:	b	33704 <fb_value_set_visit@@Base+0x204>
   338b4:	lsls	r2, r0, #1
   338b8:	asr	r1, r2, #3
   338bc:	rrx	r1, r1
   338c0:	lsl	r0, r2, #28
   338c4:	andsne	r3, r2, #-16777216	; 0xff000000
   338c8:	teqne	r3, #-16777216	; 0xff000000
   338cc:	eorne	r1, r1, #939524096	; 0x38000000
   338d0:	bxne	lr
   338d4:	bics	r2, r2, #-16777216	; 0xff000000
   338d8:	bxeq	lr
   338dc:	teq	r3, #-16777216	; 0xff000000
   338e0:	orreq	r1, r1, #524288	; 0x80000
   338e4:	bxeq	lr
   338e8:	push	{r4, r5, lr}
   338ec:	mov	r4, #896	; 0x380
   338f0:	and	r5, r1, #-2147483648	; 0x80000000
   338f4:	bic	r1, r1, #-2147483648	; 0x80000000
   338f8:	b	33704 <fb_value_set_visit@@Base+0x204>
   338fc:	orrs	r2, r0, r1
   33900:	bxeq	lr
   33904:	push	{r4, r5, lr}
   33908:	mov	r5, #0
   3390c:	b	3392c <fb_value_set_visit@@Base+0x42c>
   33910:	orrs	r2, r0, r1
   33914:	bxeq	lr
   33918:	push	{r4, r5, lr}
   3391c:	ands	r5, r1, #-2147483648	; 0x80000000
   33920:	bpl	3392c <fb_value_set_visit@@Base+0x42c>
   33924:	rsbs	r0, r0, #0
   33928:	rsc	r1, r1, #0
   3392c:	mov	r4, #1024	; 0x400
   33930:	add	r4, r4, #50	; 0x32
   33934:	lsrs	ip, r1, #22
   33938:	beq	336a8 <fb_value_set_visit@@Base+0x1a8>
   3393c:	mov	r2, #3
   33940:	lsrs	ip, ip, #3
   33944:	addne	r2, r2, #3
   33948:	lsrs	ip, ip, #3
   3394c:	addne	r2, r2, #3
   33950:	add	r2, r2, ip, lsr #3
   33954:	rsb	r3, r2, #32
   33958:	lsl	ip, r0, r3
   3395c:	lsr	r0, r0, r2
   33960:	orr	r0, r0, r1, lsl r3
   33964:	lsr	r1, r1, r2
   33968:	add	r4, r4, r2
   3396c:	b	336a8 <fb_value_set_visit@@Base+0x1a8>
   33970:	eor	r0, r0, #-2147483648	; 0x80000000
   33974:	b	3397c <fb_value_set_visit@@Base+0x47c>
   33978:	eor	r1, r1, #-2147483648	; 0x80000000
   3397c:	lsls	r2, r0, #1
   33980:	lslsne	r3, r1, #1
   33984:	teqne	r2, r3
   33988:	mvnsne	ip, r2, asr #24
   3398c:	mvnsne	ip, r3, asr #24
   33990:	beq	33a88 <fb_value_set_visit@@Base+0x588>
   33994:	lsr	r2, r2, #24
   33998:	rsbs	r3, r2, r3, lsr #24
   3399c:	addgt	r2, r2, r3
   339a0:	eorgt	r1, r0, r1
   339a4:	eorgt	r0, r1, r0
   339a8:	eorgt	r1, r0, r1
   339ac:	rsblt	r3, r3, #0
   339b0:	cmp	r3, #25
   339b4:	bxhi	lr
   339b8:	tst	r0, #-2147483648	; 0x80000000
   339bc:	orr	r0, r0, #8388608	; 0x800000
   339c0:	bic	r0, r0, #-16777216	; 0xff000000
   339c4:	rsbne	r0, r0, #0
   339c8:	tst	r1, #-2147483648	; 0x80000000
   339cc:	orr	r1, r1, #8388608	; 0x800000
   339d0:	bic	r1, r1, #-16777216	; 0xff000000
   339d4:	rsbne	r1, r1, #0
   339d8:	teq	r2, r3
   339dc:	beq	33a70 <fb_value_set_visit@@Base+0x570>
   339e0:	sub	r2, r2, #1
   339e4:	adds	r0, r0, r1, asr r3
   339e8:	rsb	r3, r3, #32
   339ec:	lsl	r1, r1, r3
   339f0:	and	r3, r0, #-2147483648	; 0x80000000
   339f4:	bpl	33a00 <fb_value_set_visit@@Base+0x500>
   339f8:	rsbs	r1, r1, #0
   339fc:	rsc	r0, r0, #0
   33a00:	cmp	r0, #8388608	; 0x800000
   33a04:	bcc	33a38 <fb_value_set_visit@@Base+0x538>
   33a08:	cmp	r0, #16777216	; 0x1000000
   33a0c:	bcc	33a24 <fb_value_set_visit@@Base+0x524>
   33a10:	lsrs	r0, r0, #1
   33a14:	rrx	r1, r1
   33a18:	add	r2, r2, #1
   33a1c:	cmp	r2, #254	; 0xfe
   33a20:	bcs	33adc <fb_value_set_visit@@Base+0x5dc>
   33a24:	cmp	r1, #-2147483648	; 0x80000000
   33a28:	adc	r0, r0, r2, lsl #23
   33a2c:	biceq	r0, r0, #1
   33a30:	orr	r0, r0, r3
   33a34:	bx	lr
   33a38:	lsls	r1, r1, #1
   33a3c:	adc	r0, r0, r0
   33a40:	tst	r0, #8388608	; 0x800000
   33a44:	sub	r2, r2, #1
   33a48:	bne	33a24 <fb_value_set_visit@@Base+0x524>
   33a4c:	clz	ip, r0
   33a50:	sub	ip, ip, #8
   33a54:	subs	r2, r2, ip
   33a58:	lsl	r0, r0, ip
   33a5c:	addge	r0, r0, r2, lsl #23
   33a60:	rsblt	r2, r2, #0
   33a64:	orrge	r0, r0, r3
   33a68:	orrlt	r0, r3, r0, lsr r2
   33a6c:	bx	lr
   33a70:	teq	r2, #0
   33a74:	eor	r1, r1, #8388608	; 0x800000
   33a78:	eoreq	r0, r0, #8388608	; 0x800000
   33a7c:	addeq	r2, r2, #1
   33a80:	subne	r3, r3, #1
   33a84:	b	339e0 <fb_value_set_visit@@Base+0x4e0>
   33a88:	lsl	r3, r1, #1
   33a8c:	mvns	ip, r2, asr #24
   33a90:	mvnsne	ip, r3, asr #24
   33a94:	beq	33ae8 <fb_value_set_visit@@Base+0x5e8>
   33a98:	teq	r2, r3
   33a9c:	beq	33aac <fb_value_set_visit@@Base+0x5ac>
   33aa0:	teq	r2, #0
   33aa4:	moveq	r0, r1
   33aa8:	bx	lr
   33aac:	teq	r0, r1
   33ab0:	movne	r0, #0
   33ab4:	bxne	lr
   33ab8:	tst	r2, #-16777216	; 0xff000000
   33abc:	bne	33acc <fb_value_set_visit@@Base+0x5cc>
   33ac0:	lsls	r0, r0, #1
   33ac4:	orrcs	r0, r0, #-2147483648	; 0x80000000
   33ac8:	bx	lr
   33acc:	adds	r2, r2, #33554432	; 0x2000000
   33ad0:	addcc	r0, r0, #8388608	; 0x800000
   33ad4:	bxcc	lr
   33ad8:	and	r3, r0, #-2147483648	; 0x80000000
   33adc:	orr	r0, r3, #2130706432	; 0x7f000000
   33ae0:	orr	r0, r0, #8388608	; 0x800000
   33ae4:	bx	lr
   33ae8:	mvns	r2, r2, asr #24
   33aec:	movne	r0, r1
   33af0:	mvnseq	r3, r3, asr #24
   33af4:	movne	r1, r0
   33af8:	lsls	r2, r0, #9
   33afc:	lslseq	r3, r1, #9
   33b00:	teqeq	r0, r1
   33b04:	orrne	r0, r0, #4194304	; 0x400000
   33b08:	bx	lr
   33b0c:	mov	r3, #0
   33b10:	b	33b1c <fb_value_set_visit@@Base+0x61c>
   33b14:	ands	r3, r0, #-2147483648	; 0x80000000
   33b18:	rsbmi	r0, r0, #0
   33b1c:	movs	ip, r0
   33b20:	bxeq	lr
   33b24:	orr	r3, r3, #1258291200	; 0x4b000000
   33b28:	mov	r1, r0
   33b2c:	mov	r0, #0
   33b30:	b	33b74 <fb_value_set_visit@@Base+0x674>
   33b34:	orrs	r2, r0, r1
   33b38:	bxeq	lr
   33b3c:	mov	r3, #0
   33b40:	b	33b5c <fb_value_set_visit@@Base+0x65c>
   33b44:	orrs	r2, r0, r1
   33b48:	bxeq	lr
   33b4c:	ands	r3, r1, #-2147483648	; 0x80000000
   33b50:	bpl	33b5c <fb_value_set_visit@@Base+0x65c>
   33b54:	rsbs	r0, r0, #0
   33b58:	rsc	r1, r1, #0
   33b5c:	movs	ip, r1
   33b60:	moveq	ip, r0
   33b64:	moveq	r1, r0
   33b68:	moveq	r0, #0
   33b6c:	orr	r3, r3, #1526726656	; 0x5b000000
   33b70:	subeq	r3, r3, #268435456	; 0x10000000
   33b74:	sub	r3, r3, #8388608	; 0x800000
   33b78:	clz	r2, ip
   33b7c:	subs	r2, r2, #8
   33b80:	sub	r3, r3, r2, lsl #23
   33b84:	blt	33ba4 <fb_value_set_visit@@Base+0x6a4>
   33b88:	add	r3, r3, r1, lsl r2
   33b8c:	lsl	ip, r0, r2
   33b90:	rsb	r2, r2, #32
   33b94:	cmp	ip, #-2147483648	; 0x80000000
   33b98:	adc	r0, r3, r0, lsr r2
   33b9c:	biceq	r0, r0, #1
   33ba0:	bx	lr
   33ba4:	add	r2, r2, #32
   33ba8:	lsl	ip, r1, r2
   33bac:	rsb	r2, r2, #32
   33bb0:	orrs	r0, r0, ip, lsl #1
   33bb4:	adc	r0, r3, r1, lsr r2
   33bb8:	biceq	r0, r0, ip, lsr #31
   33bbc:	bx	lr
   33bc0:	cmp	r3, #0
   33bc4:	cmpeq	r2, #0
   33bc8:	bne	33be0 <fb_value_set_visit@@Base+0x6e0>
   33bcc:	cmp	r1, #0
   33bd0:	cmpeq	r0, #0
   33bd4:	mvnne	r1, #0
   33bd8:	mvnne	r0, #0
   33bdc:	b	33bfc <fb_value_set_visit@@Base+0x6fc>
   33be0:	sub	sp, sp, #8
   33be4:	push	{sp, lr}
   33be8:	bl	33ce8 <fb_value_set_visit@@Base+0x7e8>
   33bec:	ldr	lr, [sp, #4]
   33bf0:	add	sp, sp, #8
   33bf4:	pop	{r2, r3}
   33bf8:	bx	lr
   33bfc:	push	{r1, lr}
   33c00:	mov	r0, #8
   33c04:	bl	147b8 <raise@plt>
   33c08:	pop	{r1, pc}
   33c0c:	vmov	s15, r0
   33c10:	vcmpe.f32	s15, #0.0
   33c14:	vmrs	APSR_nzcv, fpscr
   33c18:	bmi	33c20 <fb_value_set_visit@@Base+0x720>
   33c1c:	b	33c68 <fb_value_set_visit@@Base+0x768>
   33c20:	push	{r4, lr}
   33c24:	eor	r0, r0, #-2147483648	; 0x80000000
   33c28:	bl	33c68 <fb_value_set_visit@@Base+0x768>
   33c2c:	rsbs	r0, r0, #0
   33c30:	rsc	r1, r1, #0
   33c34:	pop	{r4, pc}
   33c38:	vmov	d7, r0, r1
   33c3c:	vcmpe.f64	d7, #0.0
   33c40:	vmrs	APSR_nzcv, fpscr
   33c44:	bmi	33c4c <fb_value_set_visit@@Base+0x74c>
   33c48:	b	33ca8 <fb_value_set_visit@@Base+0x7a8>
   33c4c:	push	{r4, lr}
   33c50:	eor	r1, r1, #-2147483648	; 0x80000000
   33c54:	bl	33ca8 <fb_value_set_visit@@Base+0x7a8>
   33c58:	rsbs	r0, r0, #0
   33c5c:	rsc	r1, r1, #0
   33c60:	pop	{r4, pc}
   33c64:	andeq	r0, r0, r0
   33c68:	vmov	s15, r0
   33c6c:	vldr	d5, [pc, #36]	; 33c98 <fb_value_set_visit@@Base+0x798>
   33c70:	vcvt.f64.f32	d6, s15
   33c74:	vldr	d7, [pc, #36]	; 33ca0 <fb_value_set_visit@@Base+0x7a0>
   33c78:	vmul.f64	d7, d6, d7
   33c7c:	vcvt.u32.f64	s14, d7
   33c80:	vcvt.f64.u32	d4, s14
   33c84:	vmov	r1, s14
   33c88:	vmls.f64	d6, d4, d5
   33c8c:	vcvt.u32.f64	s15, d6
   33c90:	vmov	r0, s15
   33c94:	bx	lr
   33c98:	andeq	r0, r0, r0
   33c9c:	mvnsmi	r0, r0
   33ca0:	andeq	r0, r0, r0
   33ca4:	ldclcc	0, cr0, [r0]
   33ca8:	vmov	d6, r0, r1
   33cac:	vldr	d7, [pc, #36]	; 33cd8 <fb_value_set_visit@@Base+0x7d8>
   33cb0:	vldr	d5, [pc, #40]	; 33ce0 <fb_value_set_visit@@Base+0x7e0>
   33cb4:	vmul.f64	d7, d6, d7
   33cb8:	vcvt.u32.f64	s14, d7
   33cbc:	vcvt.f64.u32	d4, s14
   33cc0:	vmov	r1, s14
   33cc4:	vmls.f64	d6, d4, d5
   33cc8:	vcvt.u32.f64	s15, d6
   33ccc:	vmov	r0, s15
   33cd0:	bx	lr
   33cd4:	nop			; (mov r0, r0)
   33cd8:	andeq	r0, r0, r0
   33cdc:	ldclcc	0, cr0, [r0]
   33ce0:	andeq	r0, r0, r0
   33ce4:	mvnsmi	r0, r0
   33ce8:	cmp	r1, r3
   33cec:	cmpeq	r0, r2
   33cf0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33cf4:	mov	r4, r0
   33cf8:	movcc	r0, #0
   33cfc:	mov	r5, r1
   33d00:	ldr	lr, [sp, #36]	; 0x24
   33d04:	movcc	r1, r0
   33d08:	bcc	33e04 <fb_value_set_visit@@Base+0x904>
   33d0c:	cmp	r3, #0
   33d10:	clzeq	ip, r2
   33d14:	clzne	ip, r3
   33d18:	addeq	ip, ip, #32
   33d1c:	cmp	r5, #0
   33d20:	clzeq	r1, r4
   33d24:	addeq	r1, r1, #32
   33d28:	clzne	r1, r5
   33d2c:	sub	ip, ip, r1
   33d30:	sub	sl, ip, #32
   33d34:	lsl	r9, r3, ip
   33d38:	rsb	fp, ip, #32
   33d3c:	orr	r9, r9, r2, lsl sl
   33d40:	orr	r9, r9, r2, lsr fp
   33d44:	lsl	r8, r2, ip
   33d48:	cmp	r5, r9
   33d4c:	cmpeq	r4, r8
   33d50:	movcc	r0, #0
   33d54:	movcc	r1, r0
   33d58:	bcc	33d74 <fb_value_set_visit@@Base+0x874>
   33d5c:	mov	r0, #1
   33d60:	subs	r4, r4, r8
   33d64:	lsl	r1, r0, sl
   33d68:	orr	r1, r1, r0, lsr fp
   33d6c:	lsl	r0, r0, ip
   33d70:	sbc	r5, r5, r9
   33d74:	cmp	ip, #0
   33d78:	beq	33e04 <fb_value_set_visit@@Base+0x904>
   33d7c:	lsr	r6, r8, #1
   33d80:	orr	r6, r6, r9, lsl #31
   33d84:	lsr	r7, r9, #1
   33d88:	mov	r2, ip
   33d8c:	b	33db0 <fb_value_set_visit@@Base+0x8b0>
   33d90:	subs	r3, r4, r6
   33d94:	sbc	r8, r5, r7
   33d98:	adds	r3, r3, r3
   33d9c:	adc	r8, r8, r8
   33da0:	adds	r4, r3, #1
   33da4:	adc	r5, r8, #0
   33da8:	subs	r2, r2, #1
   33dac:	beq	33dcc <fb_value_set_visit@@Base+0x8cc>
   33db0:	cmp	r5, r7
   33db4:	cmpeq	r4, r6
   33db8:	bcs	33d90 <fb_value_set_visit@@Base+0x890>
   33dbc:	adds	r4, r4, r4
   33dc0:	adc	r5, r5, r5
   33dc4:	subs	r2, r2, #1
   33dc8:	bne	33db0 <fb_value_set_visit@@Base+0x8b0>
   33dcc:	lsr	r3, r4, ip
   33dd0:	orr	r3, r3, r5, lsl fp
   33dd4:	lsr	r2, r5, ip
   33dd8:	orr	r3, r3, r5, lsr sl
   33ddc:	adds	r0, r0, r4
   33de0:	mov	r4, r3
   33de4:	lsl	r3, r2, ip
   33de8:	orr	r3, r3, r4, lsl sl
   33dec:	lsl	ip, r4, ip
   33df0:	orr	r3, r3, r4, lsr fp
   33df4:	adc	r1, r1, r5
   33df8:	subs	r0, r0, ip
   33dfc:	mov	r5, r2
   33e00:	sbc	r1, r1, r3
   33e04:	cmp	lr, #0
   33e08:	strdne	r4, [lr]
   33e0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00033e10 <__libc_csu_init@@Base>:
   33e10:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   33e14:	mov	r7, r0
   33e18:	ldr	r6, [pc, #72]	; 33e68 <__libc_csu_init@@Base+0x58>
   33e1c:	ldr	r5, [pc, #72]	; 33e6c <__libc_csu_init@@Base+0x5c>
   33e20:	add	r6, pc, r6
   33e24:	add	r5, pc, r5
   33e28:	sub	r6, r6, r5
   33e2c:	mov	r8, r1
   33e30:	mov	r9, r2
   33e34:	bl	1478c <calloc@plt-0x20>
   33e38:	asrs	r6, r6, #2
   33e3c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   33e40:	mov	r4, #0
   33e44:	add	r4, r4, #1
   33e48:	ldr	r3, [r5], #4
   33e4c:	mov	r2, r9
   33e50:	mov	r1, r8
   33e54:	mov	r0, r7
   33e58:	blx	r3
   33e5c:	cmp	r6, r4
   33e60:	bne	33e44 <__libc_csu_init@@Base+0x34>
   33e64:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   33e68:	andeq	sp, r2, r4, ror #1
   33e6c:	ldrdeq	sp, [r2], -ip

00033e70 <__libc_csu_fini@@Base>:
   33e70:	bx	lr

Disassembly of section .fini:

00033e74 <.fini>:
   33e74:	push	{r3, lr}
   33e78:	pop	{r3, pc}
