
../repos/sgerbino-table-2fdd8d0/bin/table_version_test:     file format elf32-littlearm


Disassembly of section .init:

00011e70 <.init>:
   11e70:	push	{r3, lr}
   11e74:	bl	11f5c <_start@@Base+0x3c>
   11e78:	pop	{r3, pc}

Disassembly of section .plt:

00011e7c <strcmp@plt-0x14>:
   11e7c:	push	{lr}		; (str lr, [sp, #-4]!)
   11e80:	ldr	lr, [pc, #4]	; 11e8c <strcmp@plt-0x4>
   11e84:	add	lr, pc, lr
   11e88:	ldr	pc, [lr, #8]!
   11e8c:	andeq	r3, r1, r4, ror r1

00011e90 <strcmp@plt>:
   11e90:	add	ip, pc, #0, 12
   11e94:	add	ip, ip, #77824	; 0x13000
   11e98:	ldr	pc, [ip, #372]!	; 0x174

00011e9c <printf@plt>:
   11e9c:	add	ip, pc, #0, 12
   11ea0:	add	ip, ip, #77824	; 0x13000
   11ea4:	ldr	pc, [ip, #364]!	; 0x16c

00011ea8 <free@plt>:
   11ea8:	add	ip, pc, #0, 12
   11eac:	add	ip, ip, #77824	; 0x13000
   11eb0:	ldr	pc, [ip, #356]!	; 0x164

00011eb4 <realloc@plt>:
   11eb4:	add	ip, pc, #0, 12
   11eb8:	add	ip, ip, #77824	; 0x13000
   11ebc:	ldr	pc, [ip, #348]!	; 0x15c

00011ec0 <strcpy@plt>:
   11ec0:	add	ip, pc, #0, 12
   11ec4:	add	ip, ip, #77824	; 0x13000
   11ec8:	ldr	pc, [ip, #340]!	; 0x154

00011ecc <malloc@plt>:
   11ecc:	add	ip, pc, #0, 12
   11ed0:	add	ip, ip, #77824	; 0x13000
   11ed4:	ldr	pc, [ip, #332]!	; 0x14c

00011ed8 <__libc_start_main@plt>:
   11ed8:	add	ip, pc, #0, 12
   11edc:	add	ip, ip, #77824	; 0x13000
   11ee0:	ldr	pc, [ip, #324]!	; 0x144

00011ee4 <__gmon_start__@plt>:
   11ee4:	add	ip, pc, #0, 12
   11ee8:	add	ip, ip, #77824	; 0x13000
   11eec:	ldr	pc, [ip, #316]!	; 0x13c

00011ef0 <strlen@plt>:
   11ef0:	add	ip, pc, #0, 12
   11ef4:	add	ip, ip, #77824	; 0x13000
   11ef8:	ldr	pc, [ip, #308]!	; 0x134

00011efc <snprintf@plt>:
   11efc:	add	ip, pc, #0, 12
   11f00:	add	ip, ip, #77824	; 0x13000
   11f04:	ldr	pc, [ip, #300]!	; 0x12c

00011f08 <__isoc99_sscanf@plt>:
   11f08:	add	ip, pc, #0, 12
   11f0c:	add	ip, ip, #77824	; 0x13000
   11f10:	ldr	pc, [ip, #292]!	; 0x124

00011f14 <abort@plt>:
   11f14:	add	ip, pc, #0, 12
   11f18:	add	ip, ip, #77824	; 0x13000
   11f1c:	ldr	pc, [ip, #284]!	; 0x11c

Disassembly of section .text:

00011f20 <_start@@Base>:
   11f20:	mov	fp, #0
   11f24:	mov	lr, #0
   11f28:	pop	{r1}		; (ldr r1, [sp], #4)
   11f2c:	mov	r2, sp
   11f30:	push	{r2}		; (str r2, [sp, #-4]!)
   11f34:	push	{r0}		; (str r0, [sp, #-4]!)
   11f38:	ldr	ip, [pc, #16]	; 11f50 <_start@@Base+0x30>
   11f3c:	push	{ip}		; (str ip, [sp, #-4]!)
   11f40:	ldr	r0, [pc, #12]	; 11f54 <_start@@Base+0x34>
   11f44:	ldr	r3, [pc, #12]	; 11f58 <_start@@Base+0x38>
   11f48:	bl	11ed8 <__libc_start_main@plt>
   11f4c:	bl	11f14 <abort@plt>
   11f50:	andeq	r4, r1, r0, lsl #21
   11f54:	andeq	r2, r1, r0, lsl r0
   11f58:	andeq	r4, r1, r0, lsr #20
   11f5c:	ldr	r3, [pc, #20]	; 11f78 <_start@@Base+0x58>
   11f60:	ldr	r2, [pc, #20]	; 11f7c <_start@@Base+0x5c>
   11f64:	add	r3, pc, r3
   11f68:	ldr	r2, [r3, r2]
   11f6c:	cmp	r2, #0
   11f70:	bxeq	lr
   11f74:	b	11ee4 <__gmon_start__@plt>
   11f78:	muleq	r1, r4, r0
   11f7c:	andeq	r0, r0, ip, lsr r0
   11f80:	ldr	r0, [pc, #24]	; 11fa0 <_start@@Base+0x80>
   11f84:	ldr	r3, [pc, #24]	; 11fa4 <_start@@Base+0x84>
   11f88:	cmp	r3, r0
   11f8c:	bxeq	lr
   11f90:	ldr	r3, [pc, #16]	; 11fa8 <_start@@Base+0x88>
   11f94:	cmp	r3, #0
   11f98:	bxeq	lr
   11f9c:	bx	r3
   11fa0:	andeq	r5, r2, r8, asr #32
   11fa4:	andeq	r5, r2, r8, asr #32
   11fa8:	andeq	r0, r0, r0
   11fac:	ldr	r0, [pc, #36]	; 11fd8 <_start@@Base+0xb8>
   11fb0:	ldr	r1, [pc, #36]	; 11fdc <_start@@Base+0xbc>
   11fb4:	sub	r1, r1, r0
   11fb8:	asr	r1, r1, #2
   11fbc:	add	r1, r1, r1, lsr #31
   11fc0:	asrs	r1, r1, #1
   11fc4:	bxeq	lr
   11fc8:	ldr	r3, [pc, #16]	; 11fe0 <_start@@Base+0xc0>
   11fcc:	cmp	r3, #0
   11fd0:	bxeq	lr
   11fd4:	bx	r3
   11fd8:	andeq	r5, r2, r8, asr #32
   11fdc:	andeq	r5, r2, r8, asr #32
   11fe0:	andeq	r0, r0, r0
   11fe4:	push	{r4, lr}
   11fe8:	ldr	r4, [pc, #24]	; 12008 <_start@@Base+0xe8>
   11fec:	ldrb	r3, [r4]
   11ff0:	cmp	r3, #0
   11ff4:	popne	{r4, pc}
   11ff8:	bl	11f80 <_start@@Base+0x60>
   11ffc:	mov	r3, #1
   12000:	strb	r3, [r4]
   12004:	pop	{r4, pc}
   12008:	andeq	r5, r2, r8, asr #32
   1200c:	b	11fac <_start@@Base+0x8c>

00012010 <main@@Base>:
   12010:	push	{fp, lr}
   12014:	mov	fp, sp
   12018:	bl	12724 <table_get_major_version@@Base>
   1201c:	mov	r1, r0
   12020:	movw	r0, #19092	; 0x4a94
   12024:	movt	r0, #1
   12028:	bl	11e9c <printf@plt>
   1202c:	bl	1272c <table_get_minor_version@@Base>
   12030:	mov	r1, r0
   12034:	movw	r0, #19117	; 0x4aad
   12038:	movt	r0, #1
   1203c:	bl	11e9c <printf@plt>
   12040:	bl	12734 <table_get_patch_version@@Base>
   12044:	mov	r1, r0
   12048:	movw	r0, #19142	; 0x4ac6
   1204c:	movt	r0, #1
   12050:	bl	11e9c <printf@plt>
   12054:	bl	1273c <table_get_version@@Base>
   12058:	mov	r1, r0
   1205c:	movw	r0, #19167	; 0x4adf
   12060:	movt	r0, #1
   12064:	bl	11e9c <printf@plt>
   12068:	mov	r0, #0
   1206c:	pop	{fp, pc}

00012070 <table_new@@Base>:
   12070:	push	{r4, sl, fp, lr}
   12074:	add	fp, sp, #8
   12078:	mov	r0, #56	; 0x38
   1207c:	bl	11ecc <malloc@plt>
   12080:	mov	r4, r0
   12084:	bl	12090 <table_init@@Base>
   12088:	mov	r0, r4
   1208c:	pop	{r4, sl, fp, pc}

00012090 <table_init@@Base>:
   12090:	push	{r4, sl, fp, lr}
   12094:	add	fp, sp, #8
   12098:	mov	r4, r0
   1209c:	bl	12110 <table_destroy@@Base+0x40>
   120a0:	mov	r0, r4
   120a4:	bl	12128 <table_destroy@@Base+0x58>
   120a8:	mov	r0, r4
   120ac:	pop	{r4, sl, fp, lr}
   120b0:	b	12144 <table_destroy@@Base+0x74>

000120b4 <table_delete@@Base>:
   120b4:	push	{r4, sl, fp, lr}
   120b8:	add	fp, sp, #8
   120bc:	mov	r4, r0
   120c0:	bl	120d0 <table_destroy@@Base>
   120c4:	mov	r0, r4
   120c8:	pop	{r4, sl, fp, lr}
   120cc:	b	11ea8 <free@plt>

000120d0 <table_destroy@@Base>:
   120d0:	cmp	r0, #0
   120d4:	bxeq	lr
   120d8:	push	{r4, sl, fp, lr}
   120dc:	add	fp, sp, #8
   120e0:	mov	r4, r0
   120e4:	mvn	r1, #0
   120e8:	mvn	r2, #0
   120ec:	mov	r3, #64	; 0x40
   120f0:	bl	129cc <table_notify@@Base>
   120f4:	mov	r0, r4
   120f8:	bl	12164 <table_destroy@@Base+0x94>
   120fc:	mov	r0, r4
   12100:	bl	121b0 <table_destroy@@Base+0xe0>
   12104:	mov	r0, r4
   12108:	pop	{r4, sl, fp, lr}
   1210c:	b	121fc <table_destroy@@Base+0x12c>
   12110:	mov	r1, #0
   12114:	mov	r2, #10
   12118:	str	r1, [r0]
   1211c:	stmib	r0, {r1, r2}
   12120:	str	r1, [r0, #12]
   12124:	bx	lr
   12128:	mov	r1, #0
   1212c:	mov	r2, #20
   12130:	str	r1, [r0, #16]
   12134:	str	r1, [r0, #20]
   12138:	str	r2, [r0, #24]
   1213c:	str	r1, [r0, #28]
   12140:	bx	lr
   12144:	mov	r1, #0
   12148:	vmov.i32	q8, #0	; 0x00000000
   1214c:	mov	r2, #10
   12150:	str	r2, [r0, #48]	; 0x30
   12154:	str	r1, [r0, #52]	; 0x34
   12158:	add	r0, r0, #32
   1215c:	vst1.32	{d16-d17}, [r0]
   12160:	bx	lr
   12164:	push	{r4, r5, r6, sl, fp, lr}
   12168:	add	fp, sp, #16
   1216c:	mov	r4, r0
   12170:	bl	137e4 <table_get_row_length@@Base>
   12174:	cmp	r0, #1
   12178:	blt	1219c <table_destroy@@Base+0xcc>
   1217c:	mov	r5, r0
   12180:	mov	r6, #0
   12184:	mov	r0, r4
   12188:	mov	r1, r6
   1218c:	bl	13780 <table_row_destroy@@Base>
   12190:	add	r6, r6, #1
   12194:	cmp	r5, r6
   12198:	bne	12184 <table_destroy@@Base+0xb4>
   1219c:	ldr	r0, [r4, #16]
   121a0:	cmp	r0, #0
   121a4:	popeq	{r4, r5, r6, sl, fp, pc}
   121a8:	pop	{r4, r5, r6, sl, fp, lr}
   121ac:	b	11ea8 <free@plt>
   121b0:	push	{r4, r5, r6, sl, fp, lr}
   121b4:	add	fp, sp, #16
   121b8:	mov	r4, r0
   121bc:	bl	12ac0 <table_get_column_length@@Base>
   121c0:	cmp	r0, #1
   121c4:	blt	121e8 <table_destroy@@Base+0x118>
   121c8:	mov	r5, r0
   121cc:	mov	r6, #0
   121d0:	mov	r0, r4
   121d4:	mov	r1, r6
   121d8:	bl	12aa0 <table_column_destroy@@Base>
   121dc:	add	r6, r6, #1
   121e0:	cmp	r5, r6
   121e4:	bne	121d0 <table_destroy@@Base+0x100>
   121e8:	ldr	r0, [r4]
   121ec:	cmp	r0, #0
   121f0:	popeq	{r4, r5, r6, sl, fp, pc}
   121f4:	pop	{r4, r5, r6, sl, fp, lr}
   121f8:	b	11ea8 <free@plt>
   121fc:	push	{r4, sl, fp, lr}
   12200:	add	fp, sp, #8
   12204:	mov	r4, r0
   12208:	ldr	r0, [r0, #36]	; 0x24
   1220c:	cmp	r0, #0
   12210:	beq	12218 <table_destroy@@Base+0x148>
   12214:	bl	11ea8 <free@plt>
   12218:	ldr	r0, [r4, #40]	; 0x28
   1221c:	cmp	r0, #0
   12220:	beq	12228 <table_destroy@@Base+0x158>
   12224:	bl	11ea8 <free@plt>
   12228:	ldr	r0, [r4, #44]	; 0x2c
   1222c:	cmp	r0, #0
   12230:	popeq	{r4, sl, fp, pc}
   12234:	pop	{r4, sl, fp, lr}
   12238:	b	11ea8 <free@plt>

0001223c <table_dupe@@Base>:
   1223c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12240:	add	fp, sp, #28
   12244:	sub	sp, sp, #12
   12248:	mov	r4, r0
   1224c:	bl	137e4 <table_get_row_length@@Base>
   12250:	mov	r8, r0
   12254:	mov	r0, r4
   12258:	bl	12ac0 <table_get_column_length@@Base>
   1225c:	mov	r6, r0
   12260:	bl	12070 <table_new@@Base>
   12264:	mov	sl, r0
   12268:	cmp	r6, #1
   1226c:	blt	122ac <table_dupe@@Base+0x70>
   12270:	mov	r5, #0
   12274:	mov	r0, r4
   12278:	mov	r1, r5
   1227c:	bl	12b24 <table_get_column_name@@Base>
   12280:	mov	r7, r0
   12284:	mov	r0, r4
   12288:	mov	r1, r5
   1228c:	bl	12b38 <table_get_column_data_type@@Base>
   12290:	mov	r2, r0
   12294:	mov	r0, sl
   12298:	mov	r1, r7
   1229c:	bl	12b4c <table_add_column@@Base>
   122a0:	add	r5, r5, #1
   122a4:	cmp	r6, r5
   122a8:	bne	12274 <table_dupe@@Base+0x38>
   122ac:	cmp	r8, #1
   122b0:	blt	12718 <table_dupe@@Base+0x4dc>
   122b4:	mov	r5, #0
   122b8:	add	r9, sp, #8
   122bc:	mov	r0, sl
   122c0:	bl	137ec <table_add_row@@Base>
   122c4:	cmp	r6, #1
   122c8:	blt	1270c <table_dupe@@Base+0x4d0>
   122cc:	mov	r7, #0
   122d0:	mov	r0, r4
   122d4:	mov	r1, r7
   122d8:	bl	12b38 <table_get_column_data_type@@Base>
   122dc:	cmp	r0, #23
   122e0:	bhi	12700 <table_dupe@@Base+0x4c4>
   122e4:	add	r1, pc, #0
   122e8:	ldr	pc, [r1, r0, lsl #2]
   122ec:	andeq	r2, r1, ip, asr #6
   122f0:	andeq	r2, r1, r4, ror r3
   122f4:	muleq	r1, ip, r3
   122f8:	andeq	r2, r1, r4, asr #7
   122fc:	andeq	r2, r1, ip, ror #7
   12300:	andeq	r2, r1, r4, lsl r4
   12304:	andeq	r2, r1, ip, lsr r4
   12308:	andeq	r2, r1, r4, ror #8
   1230c:	andeq	r2, r1, ip, lsl #9
   12310:			; <UNDEFINED> instruction: 0x000124b4
   12314:	ldrdeq	r2, [r1], -ip
   12318:	andeq	r2, r1, r4, lsl #10
   1231c:	andeq	r2, r1, ip, lsr #10
   12320:	andeq	r2, r1, r4, asr r5
   12324:	andeq	r2, r1, ip, ror r5
   12328:	andeq	r2, r1, r4, lsr #11
   1232c:	andeq	r2, r1, ip, asr #11
   12330:	strdeq	r2, [r1], -r0
   12334:	andeq	r2, r1, r4, lsl r6
   12338:	andeq	r2, r1, r8, lsr r6
   1233c:	andeq	r2, r1, r0, ror #12
   12340:	andeq	r2, r1, r8, lsl #13
   12344:			; <UNDEFINED> instruction: 0x000126b0
   12348:	ldrdeq	r2, [r1], -r8
   1234c:	mov	r0, r4
   12350:	mov	r1, r5
   12354:	mov	r2, r7
   12358:	bl	135a0 <table_get_int@@Base>
   1235c:	mov	r3, r0
   12360:	mov	r0, sl
   12364:	mov	r1, r5
   12368:	mov	r2, r7
   1236c:	bl	13c4c <table_set_int@@Base>
   12370:	b	12700 <table_dupe@@Base+0x4c4>
   12374:	mov	r0, r4
   12378:	mov	r1, r5
   1237c:	mov	r2, r7
   12380:	bl	135b4 <table_get_uint@@Base>
   12384:	mov	r3, r0
   12388:	mov	r0, sl
   1238c:	mov	r1, r5
   12390:	mov	r2, r7
   12394:	bl	13c74 <table_set_uint@@Base>
   12398:	b	12700 <table_dupe@@Base+0x4c4>
   1239c:	mov	r0, r4
   123a0:	mov	r1, r5
   123a4:	mov	r2, r7
   123a8:	bl	135c8 <table_get_int8@@Base>
   123ac:	mov	r3, r0
   123b0:	mov	r0, sl
   123b4:	mov	r1, r5
   123b8:	mov	r2, r7
   123bc:	bl	13c9c <table_set_int8@@Base>
   123c0:	b	12700 <table_dupe@@Base+0x4c4>
   123c4:	mov	r0, r4
   123c8:	mov	r1, r5
   123cc:	mov	r2, r7
   123d0:	bl	135dc <table_get_uint8@@Base>
   123d4:	mov	r3, r0
   123d8:	mov	r0, sl
   123dc:	mov	r1, r5
   123e0:	mov	r2, r7
   123e4:	bl	13cc4 <table_set_uint8@@Base>
   123e8:	b	12700 <table_dupe@@Base+0x4c4>
   123ec:	mov	r0, r4
   123f0:	mov	r1, r5
   123f4:	mov	r2, r7
   123f8:	bl	135f0 <table_get_int16@@Base>
   123fc:	mov	r3, r0
   12400:	mov	r0, sl
   12404:	mov	r1, r5
   12408:	mov	r2, r7
   1240c:	bl	13cec <table_set_int16@@Base>
   12410:	b	12700 <table_dupe@@Base+0x4c4>
   12414:	mov	r0, r4
   12418:	mov	r1, r5
   1241c:	mov	r2, r7
   12420:	bl	13604 <table_get_uint16@@Base>
   12424:	mov	r3, r0
   12428:	mov	r0, sl
   1242c:	mov	r1, r5
   12430:	mov	r2, r7
   12434:	bl	13d14 <table_set_uint16@@Base>
   12438:	b	12700 <table_dupe@@Base+0x4c4>
   1243c:	mov	r0, r4
   12440:	mov	r1, r5
   12444:	mov	r2, r7
   12448:	bl	13618 <table_get_int32@@Base>
   1244c:	mov	r3, r0
   12450:	mov	r0, sl
   12454:	mov	r1, r5
   12458:	mov	r2, r7
   1245c:	bl	13d3c <table_set_int32@@Base>
   12460:	b	12700 <table_dupe@@Base+0x4c4>
   12464:	mov	r0, r4
   12468:	mov	r1, r5
   1246c:	mov	r2, r7
   12470:	bl	1362c <table_get_uint32@@Base>
   12474:	mov	r3, r0
   12478:	mov	r0, sl
   1247c:	mov	r1, r5
   12480:	mov	r2, r7
   12484:	bl	13d64 <table_set_uint32@@Base>
   12488:	b	12700 <table_dupe@@Base+0x4c4>
   1248c:	mov	r0, r4
   12490:	mov	r1, r5
   12494:	mov	r2, r7
   12498:	bl	13640 <table_get_int64@@Base>
   1249c:	stm	sp, {r0, r1}
   124a0:	mov	r0, sl
   124a4:	mov	r1, r5
   124a8:	mov	r2, r7
   124ac:	bl	13d8c <table_set_int64@@Base>
   124b0:	b	12700 <table_dupe@@Base+0x4c4>
   124b4:	mov	r0, r4
   124b8:	mov	r1, r5
   124bc:	mov	r2, r7
   124c0:	bl	13654 <table_get_uint64@@Base>
   124c4:	stm	sp, {r0, r1}
   124c8:	mov	r0, sl
   124cc:	mov	r1, r5
   124d0:	mov	r2, r7
   124d4:	bl	13dc0 <table_set_uint64@@Base>
   124d8:	b	12700 <table_dupe@@Base+0x4c4>
   124dc:	mov	r0, r4
   124e0:	mov	r1, r5
   124e4:	mov	r2, r7
   124e8:	bl	13668 <table_get_short@@Base>
   124ec:	mov	r3, r0
   124f0:	mov	r0, sl
   124f4:	mov	r1, r5
   124f8:	mov	r2, r7
   124fc:	bl	13df4 <table_set_short@@Base>
   12500:	b	12700 <table_dupe@@Base+0x4c4>
   12504:	mov	r0, r4
   12508:	mov	r1, r5
   1250c:	mov	r2, r7
   12510:	bl	1367c <table_get_ushort@@Base>
   12514:	mov	r3, r0
   12518:	mov	r0, sl
   1251c:	mov	r1, r5
   12520:	mov	r2, r7
   12524:	bl	13e1c <table_set_ushort@@Base>
   12528:	b	12700 <table_dupe@@Base+0x4c4>
   1252c:	mov	r0, r4
   12530:	mov	r1, r5
   12534:	mov	r2, r7
   12538:	bl	13690 <table_get_long@@Base>
   1253c:	mov	r3, r0
   12540:	mov	r0, sl
   12544:	mov	r1, r5
   12548:	mov	r2, r7
   1254c:	bl	13e44 <table_set_long@@Base>
   12550:	b	12700 <table_dupe@@Base+0x4c4>
   12554:	mov	r0, r4
   12558:	mov	r1, r5
   1255c:	mov	r2, r7
   12560:	bl	136a4 <table_get_ulong@@Base>
   12564:	mov	r3, r0
   12568:	mov	r0, sl
   1256c:	mov	r1, r5
   12570:	mov	r2, r7
   12574:	bl	13e6c <table_set_ulong@@Base>
   12578:	b	12700 <table_dupe@@Base+0x4c4>
   1257c:	mov	r0, r4
   12580:	mov	r1, r5
   12584:	mov	r2, r7
   12588:	bl	136b8 <table_get_llong@@Base>
   1258c:	stm	sp, {r0, r1}
   12590:	mov	r0, sl
   12594:	mov	r1, r5
   12598:	mov	r2, r7
   1259c:	bl	13e94 <table_set_llong@@Base>
   125a0:	b	12700 <table_dupe@@Base+0x4c4>
   125a4:	mov	r0, r4
   125a8:	mov	r1, r5
   125ac:	mov	r2, r7
   125b0:	bl	136cc <table_get_ullong@@Base>
   125b4:	stm	sp, {r0, r1}
   125b8:	mov	r0, sl
   125bc:	mov	r1, r5
   125c0:	mov	r2, r7
   125c4:	bl	13ec8 <table_set_ullong@@Base>
   125c8:	b	12700 <table_dupe@@Base+0x4c4>
   125cc:	mov	r0, r4
   125d0:	mov	r1, r5
   125d4:	mov	r2, r7
   125d8:	bl	136e0 <table_get_float@@Base>
   125dc:	mov	r0, sl
   125e0:	mov	r1, r5
   125e4:	mov	r2, r7
   125e8:	bl	13efc <table_set_float@@Base>
   125ec:	b	12700 <table_dupe@@Base+0x4c4>
   125f0:	mov	r0, r4
   125f4:	mov	r1, r5
   125f8:	mov	r2, r7
   125fc:	bl	136f4 <table_get_double@@Base>
   12600:	mov	r0, sl
   12604:	mov	r1, r5
   12608:	mov	r2, r7
   1260c:	bl	13f24 <table_set_double@@Base>
   12610:	b	12700 <table_dupe@@Base+0x4c4>
   12614:	mov	r0, r4
   12618:	mov	r1, r5
   1261c:	mov	r2, r7
   12620:	bl	13708 <table_get_ldouble@@Base>
   12624:	mov	r0, sl
   12628:	mov	r1, r5
   1262c:	mov	r2, r7
   12630:	bl	13f4c <table_set_ldouble@@Base>
   12634:	b	12700 <table_dupe@@Base+0x4c4>
   12638:	mov	r0, r4
   1263c:	mov	r1, r5
   12640:	mov	r2, r7
   12644:	bl	1371c <table_get_char@@Base>
   12648:	mov	r3, r0
   1264c:	mov	r0, sl
   12650:	mov	r1, r5
   12654:	mov	r2, r7
   12658:	bl	13f94 <table_set_char@@Base>
   1265c:	b	12700 <table_dupe@@Base+0x4c4>
   12660:	mov	r0, r4
   12664:	mov	r1, r5
   12668:	mov	r2, r7
   1266c:	bl	13730 <table_get_uchar@@Base>
   12670:	mov	r3, r0
   12674:	mov	r0, sl
   12678:	mov	r1, r5
   1267c:	mov	r2, r7
   12680:	bl	13fbc <table_set_uchar@@Base>
   12684:	b	12700 <table_dupe@@Base+0x4c4>
   12688:	mov	r0, r4
   1268c:	mov	r1, r5
   12690:	mov	r2, r7
   12694:	bl	13744 <table_get_string@@Base>
   12698:	mov	r3, r0
   1269c:	mov	r0, sl
   126a0:	mov	r1, r5
   126a4:	mov	r2, r7
   126a8:	bl	13f74 <table_set_string@@Base>
   126ac:	b	12700 <table_dupe@@Base+0x4c4>
   126b0:	mov	r0, r4
   126b4:	mov	r1, r5
   126b8:	mov	r2, r7
   126bc:	bl	1358c <table_get_bool@@Base>
   126c0:	mov	r3, r0
   126c4:	mov	r0, sl
   126c8:	mov	r1, r5
   126cc:	mov	r2, r7
   126d0:	bl	13c24 <table_set_bool@@Base>
   126d4:	b	12700 <table_dupe@@Base+0x4c4>
   126d8:	mov	r0, r4
   126dc:	mov	r1, r5
   126e0:	mov	r2, r7
   126e4:	bl	13748 <table_get_ptr@@Base>
   126e8:	str	r0, [sp, #8]
   126ec:	mov	r0, sl
   126f0:	mov	r1, r5
   126f4:	mov	r2, r7
   126f8:	mov	r3, r9
   126fc:	bl	13fe4 <table_set_ptr@@Base>
   12700:	add	r7, r7, #1
   12704:	cmp	r6, r7
   12708:	bne	122d0 <table_dupe@@Base+0x94>
   1270c:	add	r5, r5, #1
   12710:	cmp	r5, r8
   12714:	bne	122bc <table_dupe@@Base+0x80>
   12718:	mov	r0, sl
   1271c:	sub	sp, fp, #28
   12720:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012724 <table_get_major_version@@Base>:
   12724:	mov	r0, #0
   12728:	bx	lr

0001272c <table_get_minor_version@@Base>:
   1272c:	mov	r0, #0
   12730:	bx	lr

00012734 <table_get_patch_version@@Base>:
   12734:	mov	r0, #0
   12738:	bx	lr

0001273c <table_get_version@@Base>:
   1273c:	movw	r0, #19166	; 0x4ade
   12740:	movt	r0, #1
   12744:	bx	lr

00012748 <table_get_callback_length@@Base>:
   12748:	ldr	r0, [r0, #32]
   1274c:	bx	lr

00012750 <table_register_callback@@Base>:
   12750:	push	{r4, r5, r6, r7, fp, lr}
   12754:	add	fp, sp, #16
   12758:	sub	sp, sp, #8
   1275c:	mov	r5, r3
   12760:	mov	r6, r2
   12764:	mov	r7, r1
   12768:	mov	r4, r0
   1276c:	bl	127e4 <table_register_callback@@Base+0x94>
   12770:	cmp	r0, #1
   12774:	blt	12790 <table_register_callback@@Base+0x40>
   12778:	ldr	r1, [r4, #44]	; 0x2c
   1277c:	ldr	r2, [r1, r0, lsl #2]
   12780:	orr	r2, r2, r5
   12784:	str	r2, [r1, r0, lsl #2]
   12788:	sub	sp, fp, #16
   1278c:	pop	{r4, r5, r6, r7, fp, pc}
   12790:	ldr	r0, [r4, #32]
   12794:	ldr	r1, [r4, #48]	; 0x30
   12798:	udiv	r2, r0, r1
   1279c:	mls	r0, r2, r1, r0
   127a0:	cmp	r0, #0
   127a4:	bne	127b0 <table_register_callback@@Base+0x60>
   127a8:	mov	r0, r4
   127ac:	bl	1283c <table_register_callback@@Base+0xec>
   127b0:	mov	r0, r4
   127b4:	bl	12748 <table_get_callback_length@@Base>
   127b8:	mov	r1, r0
   127bc:	str	r5, [sp]
   127c0:	mov	r0, r4
   127c4:	mov	r2, r7
   127c8:	mov	r3, r6
   127cc:	bl	12894 <table_register_callback@@Base+0x144>
   127d0:	ldr	r0, [r4, #32]
   127d4:	add	r0, r0, #1
   127d8:	str	r0, [r4, #32]
   127dc:	sub	sp, fp, #16
   127e0:	pop	{r4, r5, r6, r7, fp, pc}
   127e4:	push	{r4, sl, fp, lr}
   127e8:	add	fp, sp, #8
   127ec:	mov	ip, r0
   127f0:	ldr	r3, [r0, #32]
   127f4:	mvn	r0, #0
   127f8:	cmp	r3, #1
   127fc:	poplt	{r4, sl, fp, pc}
   12800:	ldr	lr, [ip, #36]	; 0x24
   12804:	mov	r3, #0
   12808:	ldr	r4, [lr, r3, lsl #2]
   1280c:	cmp	r4, r1
   12810:	bne	12828 <table_register_callback@@Base+0xd8>
   12814:	ldr	r4, [ip, #40]	; 0x28
   12818:	ldr	r4, [r4, r3, lsl #2]
   1281c:	cmp	r4, r2
   12820:	moveq	r0, r3
   12824:	popeq	{r4, sl, fp, pc}
   12828:	add	r3, r3, #1
   1282c:	ldr	r4, [ip, #32]
   12830:	cmp	r3, r4
   12834:	blt	12808 <table_register_callback@@Base+0xb8>
   12838:	pop	{r4, sl, fp, pc}
   1283c:	push	{r4, sl, fp, lr}
   12840:	add	fp, sp, #8
   12844:	mov	r4, r0
   12848:	ldr	r0, [r0, #36]	; 0x24
   1284c:	ldr	r1, [r4, #48]	; 0x30
   12850:	ldr	r2, [r4, #52]	; 0x34
   12854:	add	r1, r2, r1
   12858:	str	r1, [r4, #52]	; 0x34
   1285c:	lsl	r1, r1, #2
   12860:	bl	11eb4 <realloc@plt>
   12864:	str	r0, [r4, #36]	; 0x24
   12868:	ldr	r0, [r4, #40]	; 0x28
   1286c:	ldr	r1, [r4, #52]	; 0x34
   12870:	lsl	r1, r1, #2
   12874:	bl	11eb4 <realloc@plt>
   12878:	str	r0, [r4, #40]	; 0x28
   1287c:	ldr	r0, [r4, #44]	; 0x2c
   12880:	ldr	r1, [r4, #52]	; 0x34
   12884:	lsl	r1, r1, #2
   12888:	bl	11eb4 <realloc@plt>
   1288c:	str	r0, [r4, #44]	; 0x2c
   12890:	pop	{r4, sl, fp, pc}
   12894:	ldr	ip, [r0, #36]	; 0x24
   12898:	str	r2, [ip, r1, lsl #2]
   1289c:	ldr	r2, [r0, #40]	; 0x28
   128a0:	str	r3, [r2, r1, lsl #2]
   128a4:	ldr	r0, [r0, #44]	; 0x2c
   128a8:	ldr	r2, [sp]
   128ac:	str	r2, [r0, r1, lsl #2]
   128b0:	bx	lr

000128b4 <table_unregister_callback@@Base>:
   128b4:	push	{r4, sl, fp, lr}
   128b8:	add	fp, sp, #8
   128bc:	mov	r4, r0
   128c0:	bl	127e4 <table_register_callback@@Base+0x94>
   128c4:	cmn	r0, #1
   128c8:	popeq	{r4, sl, fp, pc}
   128cc:	ldr	r1, [r4, #32]
   128d0:	sub	r2, r1, #1
   128d4:	cmp	r0, r2
   128d8:	bge	12920 <table_unregister_callback@@Base+0x6c>
   128dc:	mov	r1, #4
   128e0:	add	r1, r1, r0, lsl #2
   128e4:	ldr	r2, [r4, #36]	; 0x24
   128e8:	ldr	r3, [r2, r1]!
   128ec:	str	r3, [r2, #-4]
   128f0:	ldr	r2, [r4, #40]	; 0x28
   128f4:	ldr	r3, [r2, r1]!
   128f8:	str	r3, [r2, #-4]
   128fc:	ldr	r2, [r4, #44]	; 0x2c
   12900:	ldr	r3, [r2, r1]!
   12904:	str	r3, [r2, #-4]
   12908:	add	r1, r1, #4
   1290c:	add	r0, r0, #1
   12910:	ldr	r2, [r4, #32]
   12914:	sub	r2, r2, #1
   12918:	cmp	r0, r2
   1291c:	blt	128e4 <table_unregister_callback@@Base+0x30>
   12920:	str	r2, [r4, #32]
   12924:	ldr	r0, [r4, #48]	; 0x30
   12928:	udiv	r1, r2, r0
   1292c:	mls	r0, r1, r0, r2
   12930:	cmp	r0, #0
   12934:	beq	1293c <table_unregister_callback@@Base+0x88>
   12938:	pop	{r4, sl, fp, pc}
   1293c:	mov	r0, r4
   12940:	pop	{r4, sl, fp, lr}
   12944:	b	12948 <table_unregister_callback@@Base+0x94>
   12948:	push	{r4, sl, fp, lr}
   1294c:	add	fp, sp, #8
   12950:	mov	r4, r0
   12954:	ldr	r0, [r0, #36]	; 0x24
   12958:	ldr	r1, [r4, #48]	; 0x30
   1295c:	ldr	r2, [r4, #52]	; 0x34
   12960:	subs	r1, r2, r1
   12964:	str	r1, [r4, #52]	; 0x34
   12968:	beq	129a4 <table_unregister_callback@@Base+0xf0>
   1296c:	lsl	r1, r1, #2
   12970:	bl	11eb4 <realloc@plt>
   12974:	str	r0, [r4, #36]	; 0x24
   12978:	ldr	r0, [r4, #40]	; 0x28
   1297c:	ldr	r1, [r4, #52]	; 0x34
   12980:	lsl	r1, r1, #2
   12984:	bl	11eb4 <realloc@plt>
   12988:	str	r0, [r4, #40]	; 0x28
   1298c:	ldr	r0, [r4, #44]	; 0x2c
   12990:	ldr	r1, [r4, #52]	; 0x34
   12994:	lsl	r1, r1, #2
   12998:	bl	11eb4 <realloc@plt>
   1299c:	str	r0, [r4, #44]	; 0x2c
   129a0:	pop	{r4, sl, fp, pc}
   129a4:	bl	11ea8 <free@plt>
   129a8:	ldr	r0, [r4, #40]	; 0x28
   129ac:	bl	11ea8 <free@plt>
   129b0:	ldr	r0, [r4, #44]	; 0x2c
   129b4:	bl	11ea8 <free@plt>
   129b8:	mov	r0, #0
   129bc:	str	r0, [r4, #36]	; 0x24
   129c0:	str	r0, [r4, #40]	; 0x28
   129c4:	str	r0, [r4, #44]	; 0x2c
   129c8:	pop	{r4, sl, fp, pc}

000129cc <table_notify@@Base>:
   129cc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   129d0:	add	fp, sp, #24
   129d4:	sub	sp, sp, #8
   129d8:	mov	r7, r0
   129dc:	ldr	r0, [r0, #32]
   129e0:	cmp	r0, #1
   129e4:	blt	12a40 <table_notify@@Base+0x74>
   129e8:	mov	r4, r3
   129ec:	mov	r8, r2
   129f0:	mov	r9, r1
   129f4:	mov	r5, #0
   129f8:	ldr	r0, [r7, #44]	; 0x2c
   129fc:	ldr	r0, [r0, r5, lsl #2]
   12a00:	tst	r0, r4
   12a04:	beq	12a30 <table_notify@@Base+0x64>
   12a08:	ldr	r0, [r7, #36]	; 0x24
   12a0c:	ldr	r1, [r7, #40]	; 0x28
   12a10:	ldr	r6, [r0, r5, lsl #2]
   12a14:	ldr	r0, [r1, r5, lsl #2]
   12a18:	str	r0, [sp]
   12a1c:	mov	r0, r7
   12a20:	mov	r1, r9
   12a24:	mov	r2, r8
   12a28:	mov	r3, r4
   12a2c:	blx	r6
   12a30:	ldr	r0, [r7, #32]
   12a34:	add	r5, r5, #1
   12a38:	cmp	r5, r0
   12a3c:	blt	129f8 <table_notify@@Base+0x2c>
   12a40:	sub	sp, fp, #24
   12a44:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012a48 <table_column_init@@Base>:
   12a48:	push	{r4, r5, r6, r7, fp, lr}
   12a4c:	add	fp, sp, #16
   12a50:	mov	r4, r3
   12a54:	mov	r5, r2
   12a58:	bl	12a90 <table_get_col_ptr@@Base>
   12a5c:	mov	r6, r0
   12a60:	mov	r0, r5
   12a64:	bl	11ef0 <strlen@plt>
   12a68:	add	r0, r0, #1
   12a6c:	bl	11ecc <malloc@plt>
   12a70:	str	r0, [r6]
   12a74:	ldr	r7, [fp, #8]
   12a78:	cmp	r0, #0
   12a7c:	beq	12a88 <table_column_init@@Base+0x40>
   12a80:	mov	r1, r5
   12a84:	bl	11ec0 <strcpy@plt>
   12a88:	stmib	r6, {r4, r7}
   12a8c:	pop	{r4, r5, r6, r7, fp, pc}

00012a90 <table_get_col_ptr@@Base>:
   12a90:	ldr	r0, [r0]
   12a94:	add	r1, r1, r1, lsl #1
   12a98:	add	r0, r0, r1, lsl #2
   12a9c:	bx	lr

00012aa0 <table_column_destroy@@Base>:
   12aa0:	push	{fp, lr}
   12aa4:	mov	fp, sp
   12aa8:	bl	12a90 <table_get_col_ptr@@Base>
   12aac:	ldr	r0, [r0]
   12ab0:	cmp	r0, #0
   12ab4:	popeq	{fp, pc}
   12ab8:	pop	{fp, lr}
   12abc:	b	11ea8 <free@plt>

00012ac0 <table_get_column_length@@Base>:
   12ac0:	ldr	r0, [r0, #4]
   12ac4:	bx	lr

00012ac8 <table_get_column@@Base>:
   12ac8:	push	{r4, r5, r6, r7, fp, lr}
   12acc:	add	fp, sp, #16
   12ad0:	mov	r6, r1
   12ad4:	mov	r7, r0
   12ad8:	bl	12ac0 <table_get_column_length@@Base>
   12adc:	mov	r4, r0
   12ae0:	mov	r5, #0
   12ae4:	cmp	r0, #1
   12ae8:	blt	12b14 <table_get_column@@Base+0x4c>
   12aec:	mov	r0, r7
   12af0:	mov	r1, r5
   12af4:	bl	12b24 <table_get_column_name@@Base>
   12af8:	mov	r1, r6
   12afc:	bl	11e90 <strcmp@plt>
   12b00:	cmp	r0, #0
   12b04:	beq	12b14 <table_get_column@@Base+0x4c>
   12b08:	add	r5, r5, #1
   12b0c:	cmp	r5, r4
   12b10:	blt	12aec <table_get_column@@Base+0x24>
   12b14:	cmp	r5, r4
   12b18:	mvneq	r5, #0
   12b1c:	mov	r0, r5
   12b20:	pop	{r4, r5, r6, r7, fp, pc}

00012b24 <table_get_column_name@@Base>:
   12b24:	push	{fp, lr}
   12b28:	mov	fp, sp
   12b2c:	bl	12a90 <table_get_col_ptr@@Base>
   12b30:	ldr	r0, [r0]
   12b34:	pop	{fp, pc}

00012b38 <table_get_column_data_type@@Base>:
   12b38:	push	{fp, lr}
   12b3c:	mov	fp, sp
   12b40:	bl	12a90 <table_get_col_ptr@@Base>
   12b44:	ldr	r0, [r0, #4]
   12b48:	pop	{fp, pc}

00012b4c <table_add_column@@Base>:
   12b4c:	push	{r4, r5, r6, sl, fp, lr}
   12b50:	add	fp, sp, #16
   12b54:	mov	r5, r2
   12b58:	mov	r6, r1
   12b5c:	mov	r4, r0
   12b60:	bl	12ac0 <table_get_column_length@@Base>
   12b64:	ldr	r1, [r4, #8]
   12b68:	udiv	r2, r0, r1
   12b6c:	mls	r0, r2, r1, r0
   12b70:	cmp	r0, #0
   12b74:	bne	12b80 <table_add_column@@Base+0x34>
   12b78:	mov	r0, r4
   12b7c:	bl	12bbc <table_add_column@@Base+0x70>
   12b80:	mov	r0, r4
   12b84:	mov	r1, r6
   12b88:	mov	r2, r5
   12b8c:	bl	12c38 <table_add_column@@Base+0xec>
   12b90:	mov	r0, r4
   12b94:	bl	12ac0 <table_get_column_length@@Base>
   12b98:	mov	r2, r0
   12b9c:	mov	r0, r4
   12ba0:	mvn	r1, #0
   12ba4:	mov	r3, #8
   12ba8:	bl	129cc <table_notify@@Base>
   12bac:	ldr	r0, [r4, #4]
   12bb0:	add	r1, r0, #1
   12bb4:	str	r1, [r4, #4]
   12bb8:	pop	{r4, r5, r6, sl, fp, pc}
   12bbc:	push	{r4, r5, r6, r7, fp, lr}
   12bc0:	add	fp, sp, #16
   12bc4:	mov	r4, r0
   12bc8:	ldr	r0, [r0]
   12bcc:	ldr	r1, [r4, #8]
   12bd0:	ldr	r2, [r4, #12]
   12bd4:	add	r1, r2, r1
   12bd8:	str	r1, [r4, #12]
   12bdc:	add	r1, r1, r1, lsl #1
   12be0:	lsl	r1, r1, #2
   12be4:	bl	11eb4 <realloc@plt>
   12be8:	str	r0, [r4]
   12bec:	mov	r0, r4
   12bf0:	bl	137e4 <table_get_row_length@@Base>
   12bf4:	cmp	r0, #1
   12bf8:	poplt	{r4, r5, r6, r7, fp, pc}
   12bfc:	mov	r5, r0
   12c00:	mov	r6, #0
   12c04:	mov	r0, r4
   12c08:	mov	r1, r6
   12c0c:	bl	13774 <table_get_row_ptr@@Base>
   12c10:	mov	r7, r0
   12c14:	ldr	r0, [r0]
   12c18:	ldr	r1, [r4, #12]
   12c1c:	lsl	r1, r1, #2
   12c20:	bl	11eb4 <realloc@plt>
   12c24:	str	r0, [r7]
   12c28:	add	r6, r6, #1
   12c2c:	cmp	r5, r6
   12c30:	bne	12c04 <table_add_column@@Base+0xb8>
   12c34:	pop	{r4, r5, r6, r7, fp, pc}
   12c38:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12c3c:	add	fp, sp, #24
   12c40:	sub	sp, sp, #8
   12c44:	mov	r7, r2
   12c48:	mov	r8, r1
   12c4c:	mov	r4, r0
   12c50:	bl	137e4 <table_get_row_length@@Base>
   12c54:	mov	r5, r0
   12c58:	mov	r0, r4
   12c5c:	bl	12ac0 <table_get_column_length@@Base>
   12c60:	mov	r6, r0
   12c64:	mov	r0, r7
   12c68:	bl	13560 <table_get_default_compare_function_for_data_type@@Base>
   12c6c:	str	r0, [sp]
   12c70:	mov	r0, r4
   12c74:	mov	r1, r6
   12c78:	mov	r2, r8
   12c7c:	mov	r3, r7
   12c80:	bl	12a48 <table_column_init@@Base>
   12c84:	cmp	r5, #1
   12c88:	blt	12cac <table_add_column@@Base+0x160>
   12c8c:	mov	r7, #0
   12c90:	mov	r0, r4
   12c94:	mov	r1, r7
   12c98:	mov	r2, r6
   12c9c:	bl	14004 <table_cell_init@@Base>
   12ca0:	add	r7, r7, #1
   12ca4:	cmp	r5, r7
   12ca8:	bne	12c90 <table_add_column@@Base+0x144>
   12cac:	sub	sp, fp, #24
   12cb0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012cb4 <table_remove_column@@Base>:
   12cb4:	push	{r4, r5, fp, lr}
   12cb8:	add	fp, sp, #8
   12cbc:	mov	r4, r1
   12cc0:	mov	r5, r0
   12cc4:	bl	12d14 <table_remove_column@@Base+0x60>
   12cc8:	ldr	r0, [r5, #4]
   12ccc:	sub	r0, r0, #1
   12cd0:	str	r0, [r5, #4]
   12cd4:	mov	r0, r5
   12cd8:	bl	12ac0 <table_get_column_length@@Base>
   12cdc:	ldr	r1, [r5, #8]
   12ce0:	udiv	r2, r0, r1
   12ce4:	mls	r0, r2, r1, r0
   12ce8:	cmp	r0, #0
   12cec:	bne	12cf8 <table_remove_column@@Base+0x44>
   12cf0:	mov	r0, r5
   12cf4:	bl	12dd8 <table_remove_column@@Base+0x124>
   12cf8:	mov	r0, r5
   12cfc:	mvn	r1, #0
   12d00:	mov	r2, r4
   12d04:	mov	r3, #16
   12d08:	bl	129cc <table_notify@@Base>
   12d0c:	mov	r0, #0
   12d10:	pop	{r4, r5, fp, pc}
   12d14:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12d18:	add	fp, sp, #24
   12d1c:	mov	r4, r1
   12d20:	mov	r5, r0
   12d24:	bl	12aa0 <table_column_destroy@@Base>
   12d28:	mov	r0, r5
   12d2c:	bl	12ac0 <table_get_column_length@@Base>
   12d30:	sub	r6, r0, #1
   12d34:	cmp	r6, r4
   12d38:	ble	12d6c <table_remove_column@@Base+0xb8>
   12d3c:	sub	r0, r6, r4
   12d40:	add	r1, r4, r4, lsl #1
   12d44:	lsl	r1, r1, #2
   12d48:	ldr	r2, [r5]
   12d4c:	add	r2, r2, r1
   12d50:	vldr	d16, [r2, #12]
   12d54:	ldr	r3, [r2, #20]
   12d58:	str	r3, [r2, #8]
   12d5c:	vstr	d16, [r2]
   12d60:	subs	r0, r0, #1
   12d64:	add	r1, r1, #12
   12d68:	bne	12d48 <table_remove_column@@Base+0x94>
   12d6c:	mov	r0, r5
   12d70:	bl	137e4 <table_get_row_length@@Base>
   12d74:	cmp	r0, #1
   12d78:	poplt	{r4, r5, r6, r7, r8, sl, fp, pc}
   12d7c:	mov	r8, r0
   12d80:	mov	r7, #0
   12d84:	mov	r0, r5
   12d88:	mov	r1, r7
   12d8c:	mov	r2, r4
   12d90:	bl	14038 <table_cell_destroy@@Base>
   12d94:	mov	r0, r5
   12d98:	mov	r1, r7
   12d9c:	bl	13774 <table_get_row_ptr@@Base>
   12da0:	cmp	r6, r4
   12da4:	ble	12dc8 <table_remove_column@@Base+0x114>
   12da8:	mov	r1, r4
   12dac:	ldr	r2, [r0]
   12db0:	add	r3, r2, r1, lsl #2
   12db4:	ldr	r3, [r3, #4]
   12db8:	str	r3, [r2, r1, lsl #2]
   12dbc:	add	r1, r1, #1
   12dc0:	cmp	r6, r1
   12dc4:	bne	12dac <table_remove_column@@Base+0xf8>
   12dc8:	add	r7, r7, #1
   12dcc:	cmp	r7, r8
   12dd0:	bne	12d84 <table_remove_column@@Base+0xd0>
   12dd4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12dd8:	push	{r4, r5, r6, r7, fp, lr}
   12ddc:	add	fp, sp, #16
   12de0:	mov	r4, r0
   12de4:	ldr	r0, [r0]
   12de8:	ldr	r1, [r4, #8]
   12dec:	ldr	r2, [r4, #12]
   12df0:	sub	r1, r2, r1
   12df4:	str	r1, [r4, #12]
   12df8:	add	r1, r1, r1, lsl #1
   12dfc:	lsl	r1, r1, #2
   12e00:	bl	11eb4 <realloc@plt>
   12e04:	str	r0, [r4]
   12e08:	mov	r0, r4
   12e0c:	bl	137e4 <table_get_row_length@@Base>
   12e10:	cmp	r0, #1
   12e14:	poplt	{r4, r5, r6, r7, fp, pc}
   12e18:	mov	r5, r0
   12e1c:	mov	r6, #0
   12e20:	mov	r0, r4
   12e24:	mov	r1, r6
   12e28:	bl	13774 <table_get_row_ptr@@Base>
   12e2c:	mov	r7, r0
   12e30:	ldr	r0, [r0]
   12e34:	ldr	r1, [r4, #12]
   12e38:	lsl	r1, r1, #2
   12e3c:	bl	11eb4 <realloc@plt>
   12e40:	str	r0, [r7]
   12e44:	add	r6, r6, #1
   12e48:	cmp	r5, r6
   12e4c:	bne	12e20 <table_remove_column@@Base+0x16c>
   12e50:	pop	{r4, r5, r6, r7, fp, pc}

00012e54 <table_get_column_compare_function@@Base>:
   12e54:	push	{fp, lr}
   12e58:	mov	fp, sp
   12e5c:	bl	12a90 <table_get_col_ptr@@Base>
   12e60:	ldr	r0, [r0, #8]
   12e64:	pop	{fp, pc}

00012e68 <table_set_column_compare_function@@Base>:
   12e68:	push	{r4, sl, fp, lr}
   12e6c:	add	fp, sp, #8
   12e70:	mov	r4, r2
   12e74:	bl	12a90 <table_get_col_ptr@@Base>
   12e78:	str	r4, [r0, #8]
   12e7c:	pop	{r4, sl, fp, pc}

00012e80 <table_compare_bool@@Base>:
   12e80:	cmp	r0, #0
   12e84:	beq	12eb8 <table_compare_bool@@Base+0x38>
   12e88:	cmp	r1, #0
   12e8c:	moveq	r1, #1
   12e90:	moveq	r0, r1
   12e94:	bxeq	lr
   12e98:	ldrb	r2, [r1]
   12e9c:	ldrb	r0, [r0]
   12ea0:	mov	r1, #0
   12ea4:	cmp	r0, r2
   12ea8:	mvncc	r1, #0
   12eac:	movwhi	r1, #1
   12eb0:	mov	r0, r1
   12eb4:	bx	lr
   12eb8:	cmp	r1, #0
   12ebc:	mvnne	r1, #0
   12ec0:	mov	r0, r1
   12ec4:	bx	lr

00012ec8 <table_compare_int@@Base>:
   12ec8:	cmp	r0, #0
   12ecc:	beq	12f00 <table_compare_int@@Base+0x38>
   12ed0:	cmp	r1, #0
   12ed4:	moveq	r1, #1
   12ed8:	moveq	r0, r1
   12edc:	bxeq	lr
   12ee0:	ldr	r2, [r1]
   12ee4:	ldr	r0, [r0]
   12ee8:	mov	r1, #0
   12eec:	cmp	r0, r2
   12ef0:	mvnlt	r1, #0
   12ef4:	movwgt	r1, #1
   12ef8:	mov	r0, r1
   12efc:	bx	lr
   12f00:	cmp	r1, #0
   12f04:	mvnne	r1, #0
   12f08:	mov	r0, r1
   12f0c:	bx	lr

00012f10 <table_compare_uint@@Base>:
   12f10:	cmp	r0, #0
   12f14:	beq	12f48 <table_compare_uint@@Base+0x38>
   12f18:	cmp	r1, #0
   12f1c:	moveq	r1, #1
   12f20:	moveq	r0, r1
   12f24:	bxeq	lr
   12f28:	ldr	r2, [r1]
   12f2c:	ldr	r0, [r0]
   12f30:	mov	r1, #0
   12f34:	cmp	r0, r2
   12f38:	mvncc	r1, #0
   12f3c:	movwhi	r1, #1
   12f40:	mov	r0, r1
   12f44:	bx	lr
   12f48:	cmp	r1, #0
   12f4c:	mvnne	r1, #0
   12f50:	mov	r0, r1
   12f54:	bx	lr

00012f58 <table_compare_int8@@Base>:
   12f58:	cmp	r0, #0
   12f5c:	beq	12f90 <table_compare_int8@@Base+0x38>
   12f60:	cmp	r1, #0
   12f64:	moveq	r1, #1
   12f68:	moveq	r0, r1
   12f6c:	bxeq	lr
   12f70:	ldrsb	r2, [r1]
   12f74:	ldrsb	r0, [r0]
   12f78:	mov	r1, #0
   12f7c:	cmp	r0, r2
   12f80:	mvnlt	r1, #0
   12f84:	movwgt	r1, #1
   12f88:	mov	r0, r1
   12f8c:	bx	lr
   12f90:	cmp	r1, #0
   12f94:	mvnne	r1, #0
   12f98:	mov	r0, r1
   12f9c:	bx	lr

00012fa0 <table_compare_uint8@@Base>:
   12fa0:	cmp	r0, #0
   12fa4:	beq	12fd8 <table_compare_uint8@@Base+0x38>
   12fa8:	cmp	r1, #0
   12fac:	moveq	r1, #1
   12fb0:	moveq	r0, r1
   12fb4:	bxeq	lr
   12fb8:	ldrb	r2, [r1]
   12fbc:	ldrb	r0, [r0]
   12fc0:	mov	r1, #0
   12fc4:	cmp	r0, r2
   12fc8:	mvncc	r1, #0
   12fcc:	movwhi	r1, #1
   12fd0:	mov	r0, r1
   12fd4:	bx	lr
   12fd8:	cmp	r1, #0
   12fdc:	mvnne	r1, #0
   12fe0:	mov	r0, r1
   12fe4:	bx	lr

00012fe8 <table_compare_int16@@Base>:
   12fe8:	cmp	r0, #0
   12fec:	beq	13020 <table_compare_int16@@Base+0x38>
   12ff0:	cmp	r1, #0
   12ff4:	moveq	r1, #1
   12ff8:	moveq	r0, r1
   12ffc:	bxeq	lr
   13000:	ldrsh	r2, [r1]
   13004:	ldrsh	r0, [r0]
   13008:	mov	r1, #0
   1300c:	cmp	r0, r2
   13010:	mvnlt	r1, #0
   13014:	movwgt	r1, #1
   13018:	mov	r0, r1
   1301c:	bx	lr
   13020:	cmp	r1, #0
   13024:	mvnne	r1, #0
   13028:	mov	r0, r1
   1302c:	bx	lr

00013030 <table_compare_uint16@@Base>:
   13030:	cmp	r0, #0
   13034:	beq	13068 <table_compare_uint16@@Base+0x38>
   13038:	cmp	r1, #0
   1303c:	moveq	r1, #1
   13040:	moveq	r0, r1
   13044:	bxeq	lr
   13048:	ldrh	r2, [r1]
   1304c:	ldrh	r0, [r0]
   13050:	mov	r1, #0
   13054:	cmp	r0, r2
   13058:	mvncc	r1, #0
   1305c:	movwhi	r1, #1
   13060:	mov	r0, r1
   13064:	bx	lr
   13068:	cmp	r1, #0
   1306c:	mvnne	r1, #0
   13070:	mov	r0, r1
   13074:	bx	lr

00013078 <table_compare_int32@@Base>:
   13078:	cmp	r0, #0
   1307c:	beq	130b0 <table_compare_int32@@Base+0x38>
   13080:	cmp	r1, #0
   13084:	moveq	r1, #1
   13088:	moveq	r0, r1
   1308c:	bxeq	lr
   13090:	ldr	r2, [r1]
   13094:	ldr	r0, [r0]
   13098:	mov	r1, #0
   1309c:	cmp	r0, r2
   130a0:	mvnlt	r1, #0
   130a4:	movwgt	r1, #1
   130a8:	mov	r0, r1
   130ac:	bx	lr
   130b0:	cmp	r1, #0
   130b4:	mvnne	r1, #0
   130b8:	mov	r0, r1
   130bc:	bx	lr

000130c0 <table_compare_uint32@@Base>:
   130c0:	cmp	r0, #0
   130c4:	beq	130f8 <table_compare_uint32@@Base+0x38>
   130c8:	cmp	r1, #0
   130cc:	moveq	r1, #1
   130d0:	moveq	r0, r1
   130d4:	bxeq	lr
   130d8:	ldr	r2, [r1]
   130dc:	ldr	r0, [r0]
   130e0:	mov	r1, #0
   130e4:	cmp	r0, r2
   130e8:	mvncc	r1, #0
   130ec:	movwhi	r1, #1
   130f0:	mov	r0, r1
   130f4:	bx	lr
   130f8:	cmp	r1, #0
   130fc:	mvnne	r1, #0
   13100:	mov	r0, r1
   13104:	bx	lr

00013108 <table_compare_int64@@Base>:
   13108:	cmp	r0, #0
   1310c:	beq	13160 <table_compare_int64@@Base+0x58>
   13110:	cmp	r1, #0
   13114:	moveq	r1, #1
   13118:	moveq	r0, r1
   1311c:	bxeq	lr
   13120:	push	{r5, r7, fp, lr}
   13124:	add	fp, sp, #8
   13128:	ldm	r1, {r2, r7}
   1312c:	ldm	r0, {r0, r5}
   13130:	mov	r1, #0
   13134:	subs	r3, r0, r2
   13138:	sbcs	r3, r5, r7
   1313c:	movwlt	r1, #1
   13140:	cmp	r1, #0
   13144:	mvnne	r1, #0
   13148:	subs	r0, r2, r0
   1314c:	sbcs	r0, r7, r5
   13150:	movwlt	r1, #1
   13154:	pop	{r5, r7, fp, lr}
   13158:	mov	r0, r1
   1315c:	bx	lr
   13160:	cmp	r1, #0
   13164:	mvnne	r1, #0
   13168:	mov	r0, r1
   1316c:	bx	lr

00013170 <table_compare_uint64@@Base>:
   13170:	cmp	r0, #0
   13174:	beq	131c8 <table_compare_uint64@@Base+0x58>
   13178:	cmp	r1, #0
   1317c:	moveq	r1, #1
   13180:	moveq	r0, r1
   13184:	bxeq	lr
   13188:	push	{r5, r7, fp, lr}
   1318c:	add	fp, sp, #8
   13190:	ldm	r1, {r2, r7}
   13194:	ldm	r0, {r0, r5}
   13198:	mov	r1, #0
   1319c:	subs	r3, r0, r2
   131a0:	sbcs	r3, r5, r7
   131a4:	movwcc	r1, #1
   131a8:	cmp	r1, #0
   131ac:	mvnne	r1, #0
   131b0:	subs	r0, r2, r0
   131b4:	sbcs	r0, r7, r5
   131b8:	movwcc	r1, #1
   131bc:	pop	{r5, r7, fp, lr}
   131c0:	mov	r0, r1
   131c4:	bx	lr
   131c8:	cmp	r1, #0
   131cc:	mvnne	r1, #0
   131d0:	mov	r0, r1
   131d4:	bx	lr

000131d8 <table_compare_short@@Base>:
   131d8:	cmp	r0, #0
   131dc:	beq	13210 <table_compare_short@@Base+0x38>
   131e0:	cmp	r1, #0
   131e4:	moveq	r1, #1
   131e8:	moveq	r0, r1
   131ec:	bxeq	lr
   131f0:	ldrsh	r2, [r1]
   131f4:	ldrsh	r0, [r0]
   131f8:	mov	r1, #0
   131fc:	cmp	r0, r2
   13200:	mvnlt	r1, #0
   13204:	movwgt	r1, #1
   13208:	mov	r0, r1
   1320c:	bx	lr
   13210:	cmp	r1, #0
   13214:	mvnne	r1, #0
   13218:	mov	r0, r1
   1321c:	bx	lr

00013220 <table_compare_ushort@@Base>:
   13220:	cmp	r0, #0
   13224:	beq	13258 <table_compare_ushort@@Base+0x38>
   13228:	cmp	r1, #0
   1322c:	moveq	r1, #1
   13230:	moveq	r0, r1
   13234:	bxeq	lr
   13238:	ldrh	r2, [r1]
   1323c:	ldrh	r0, [r0]
   13240:	mov	r1, #0
   13244:	cmp	r0, r2
   13248:	mvncc	r1, #0
   1324c:	movwhi	r1, #1
   13250:	mov	r0, r1
   13254:	bx	lr
   13258:	cmp	r1, #0
   1325c:	mvnne	r1, #0
   13260:	mov	r0, r1
   13264:	bx	lr

00013268 <table_compare_long@@Base>:
   13268:	cmp	r0, #0
   1326c:	beq	132a0 <table_compare_long@@Base+0x38>
   13270:	cmp	r1, #0
   13274:	moveq	r1, #1
   13278:	moveq	r0, r1
   1327c:	bxeq	lr
   13280:	ldr	r2, [r1]
   13284:	ldr	r0, [r0]
   13288:	mov	r1, #0
   1328c:	cmp	r0, r2
   13290:	mvnlt	r1, #0
   13294:	movwgt	r1, #1
   13298:	mov	r0, r1
   1329c:	bx	lr
   132a0:	cmp	r1, #0
   132a4:	mvnne	r1, #0
   132a8:	mov	r0, r1
   132ac:	bx	lr

000132b0 <table_compare_ulong@@Base>:
   132b0:	cmp	r0, #0
   132b4:	beq	132e8 <table_compare_ulong@@Base+0x38>
   132b8:	cmp	r1, #0
   132bc:	moveq	r1, #1
   132c0:	moveq	r0, r1
   132c4:	bxeq	lr
   132c8:	ldr	r2, [r1]
   132cc:	ldr	r0, [r0]
   132d0:	mov	r1, #0
   132d4:	cmp	r0, r2
   132d8:	mvncc	r1, #0
   132dc:	movwhi	r1, #1
   132e0:	mov	r0, r1
   132e4:	bx	lr
   132e8:	cmp	r1, #0
   132ec:	mvnne	r1, #0
   132f0:	mov	r0, r1
   132f4:	bx	lr

000132f8 <table_compare_llong@@Base>:
   132f8:	cmp	r0, #0
   132fc:	beq	13350 <table_compare_llong@@Base+0x58>
   13300:	cmp	r1, #0
   13304:	moveq	r1, #1
   13308:	moveq	r0, r1
   1330c:	bxeq	lr
   13310:	push	{r5, r7, fp, lr}
   13314:	add	fp, sp, #8
   13318:	ldm	r1, {r2, r7}
   1331c:	ldm	r0, {r0, r5}
   13320:	mov	r1, #0
   13324:	subs	r3, r0, r2
   13328:	sbcs	r3, r5, r7
   1332c:	movwlt	r1, #1
   13330:	cmp	r1, #0
   13334:	mvnne	r1, #0
   13338:	subs	r0, r2, r0
   1333c:	sbcs	r0, r7, r5
   13340:	movwlt	r1, #1
   13344:	pop	{r5, r7, fp, lr}
   13348:	mov	r0, r1
   1334c:	bx	lr
   13350:	cmp	r1, #0
   13354:	mvnne	r1, #0
   13358:	mov	r0, r1
   1335c:	bx	lr

00013360 <table_compare_ullong@@Base>:
   13360:	cmp	r0, #0
   13364:	beq	13398 <table_compare_ullong@@Base+0x38>
   13368:	cmp	r1, #0
   1336c:	moveq	r1, #1
   13370:	moveq	r0, r1
   13374:	bxeq	lr
   13378:	ldr	r2, [r1]
   1337c:	ldr	r0, [r0]
   13380:	mov	r1, #0
   13384:	cmp	r0, r2
   13388:	mvncc	r1, #0
   1338c:	movwhi	r1, #1
   13390:	mov	r0, r1
   13394:	bx	lr
   13398:	cmp	r1, #0
   1339c:	mvnne	r1, #0
   133a0:	mov	r0, r1
   133a4:	bx	lr

000133a8 <table_compare_float@@Base>:
   133a8:	cmp	r0, #0
   133ac:	beq	133e4 <table_compare_float@@Base+0x3c>
   133b0:	cmp	r1, #0
   133b4:	moveq	r1, #1
   133b8:	moveq	r0, r1
   133bc:	bxeq	lr
   133c0:	vldr	s0, [r1]
   133c4:	vldr	s2, [r0]
   133c8:	mov	r1, #0
   133cc:	vcmpe.f32	s2, s0
   133d0:	vmrs	APSR_nzcv, fpscr
   133d4:	mvnmi	r1, #0
   133d8:	movwgt	r1, #1
   133dc:	mov	r0, r1
   133e0:	bx	lr
   133e4:	cmp	r1, #0
   133e8:	mvnne	r1, #0
   133ec:	mov	r0, r1
   133f0:	bx	lr

000133f4 <table_compare_double@@Base>:
   133f4:	cmp	r0, #0
   133f8:	beq	13430 <table_compare_double@@Base+0x3c>
   133fc:	cmp	r1, #0
   13400:	moveq	r1, #1
   13404:	moveq	r0, r1
   13408:	bxeq	lr
   1340c:	vldr	d16, [r1]
   13410:	vldr	d17, [r0]
   13414:	mov	r1, #0
   13418:	vcmpe.f64	d17, d16
   1341c:	vmrs	APSR_nzcv, fpscr
   13420:	mvnmi	r1, #0
   13424:	movwgt	r1, #1
   13428:	mov	r0, r1
   1342c:	bx	lr
   13430:	cmp	r1, #0
   13434:	mvnne	r1, #0
   13438:	mov	r0, r1
   1343c:	bx	lr

00013440 <table_compare_ldouble@@Base>:
   13440:	cmp	r0, #0
   13444:	beq	1347c <table_compare_ldouble@@Base+0x3c>
   13448:	cmp	r1, #0
   1344c:	moveq	r1, #1
   13450:	moveq	r0, r1
   13454:	bxeq	lr
   13458:	vldr	d16, [r1]
   1345c:	vldr	d17, [r0]
   13460:	mov	r1, #0
   13464:	vcmpe.f64	d17, d16
   13468:	vmrs	APSR_nzcv, fpscr
   1346c:	mvnmi	r1, #0
   13470:	movwgt	r1, #1
   13474:	mov	r0, r1
   13478:	bx	lr
   1347c:	cmp	r1, #0
   13480:	mvnne	r1, #0
   13484:	mov	r0, r1
   13488:	bx	lr

0001348c <table_compare_char@@Base>:
   1348c:	cmp	r0, #0
   13490:	beq	134c4 <table_compare_char@@Base+0x38>
   13494:	cmp	r1, #0
   13498:	moveq	r1, #1
   1349c:	moveq	r0, r1
   134a0:	bxeq	lr
   134a4:	ldrb	r2, [r1]
   134a8:	ldrb	r0, [r0]
   134ac:	mov	r1, #0
   134b0:	cmp	r0, r2
   134b4:	mvncc	r1, #0
   134b8:	movwhi	r1, #1
   134bc:	mov	r0, r1
   134c0:	bx	lr
   134c4:	cmp	r1, #0
   134c8:	mvnne	r1, #0
   134cc:	mov	r0, r1
   134d0:	bx	lr

000134d4 <table_compare_uchar@@Base>:
   134d4:	cmp	r0, #0
   134d8:	beq	1350c <table_compare_uchar@@Base+0x38>
   134dc:	cmp	r1, #0
   134e0:	moveq	r1, #1
   134e4:	moveq	r0, r1
   134e8:	bxeq	lr
   134ec:	ldrb	r2, [r1]
   134f0:	ldrb	r0, [r0]
   134f4:	mov	r1, #0
   134f8:	cmp	r0, r2
   134fc:	mvncc	r1, #0
   13500:	movwhi	r1, #1
   13504:	mov	r0, r1
   13508:	bx	lr
   1350c:	cmp	r1, #0
   13510:	mvnne	r1, #0
   13514:	mov	r0, r1
   13518:	bx	lr

0001351c <table_compare_string@@Base>:
   1351c:	cmp	r0, #0
   13520:	beq	13538 <table_compare_string@@Base+0x1c>
   13524:	cmp	r1, #0
   13528:	moveq	r1, #1
   1352c:	moveq	r0, r1
   13530:	bxeq	lr
   13534:	b	11e90 <strcmp@plt>
   13538:	cmp	r1, #0
   1353c:	mvnne	r1, #0
   13540:	mov	r0, r1
   13544:	bx	lr

00013548 <table_compare_ptr@@Base>:
   13548:	mov	r2, #0
   1354c:	cmp	r0, r1
   13550:	mvncc	r2, #0
   13554:	movwhi	r2, #1
   13558:	mov	r0, r2
   1355c:	bx	lr

00013560 <table_get_default_compare_function_for_data_type@@Base>:
   13560:	cmp	r0, #23
   13564:	movhi	r0, #0
   13568:	movwls	r1, #19200	; 0x4b00
   1356c:	movtls	r1, #1
   13570:	ldrls	r0, [r1, r0, lsl #2]
   13574:	bx	lr

00013578 <table_get@@Base>:
   13578:	push	{fp, lr}
   1357c:	mov	fp, sp
   13580:	bl	1401c <table_get_cell_ptr@@Base>
   13584:	ldr	r0, [r0]
   13588:	pop	{fp, pc}

0001358c <table_get_bool@@Base>:
   1358c:	push	{fp, lr}
   13590:	mov	fp, sp
   13594:	bl	13578 <table_get@@Base>
   13598:	ldrb	r0, [r0]
   1359c:	pop	{fp, pc}

000135a0 <table_get_int@@Base>:
   135a0:	push	{fp, lr}
   135a4:	mov	fp, sp
   135a8:	bl	13578 <table_get@@Base>
   135ac:	ldr	r0, [r0]
   135b0:	pop	{fp, pc}

000135b4 <table_get_uint@@Base>:
   135b4:	push	{fp, lr}
   135b8:	mov	fp, sp
   135bc:	bl	13578 <table_get@@Base>
   135c0:	ldr	r0, [r0]
   135c4:	pop	{fp, pc}

000135c8 <table_get_int8@@Base>:
   135c8:	push	{fp, lr}
   135cc:	mov	fp, sp
   135d0:	bl	13578 <table_get@@Base>
   135d4:	ldrsb	r0, [r0]
   135d8:	pop	{fp, pc}

000135dc <table_get_uint8@@Base>:
   135dc:	push	{fp, lr}
   135e0:	mov	fp, sp
   135e4:	bl	13578 <table_get@@Base>
   135e8:	ldrb	r0, [r0]
   135ec:	pop	{fp, pc}

000135f0 <table_get_int16@@Base>:
   135f0:	push	{fp, lr}
   135f4:	mov	fp, sp
   135f8:	bl	13578 <table_get@@Base>
   135fc:	ldrsh	r0, [r0]
   13600:	pop	{fp, pc}

00013604 <table_get_uint16@@Base>:
   13604:	push	{fp, lr}
   13608:	mov	fp, sp
   1360c:	bl	13578 <table_get@@Base>
   13610:	ldrh	r0, [r0]
   13614:	pop	{fp, pc}

00013618 <table_get_int32@@Base>:
   13618:	push	{fp, lr}
   1361c:	mov	fp, sp
   13620:	bl	13578 <table_get@@Base>
   13624:	ldr	r0, [r0]
   13628:	pop	{fp, pc}

0001362c <table_get_uint32@@Base>:
   1362c:	push	{fp, lr}
   13630:	mov	fp, sp
   13634:	bl	13578 <table_get@@Base>
   13638:	ldr	r0, [r0]
   1363c:	pop	{fp, pc}

00013640 <table_get_int64@@Base>:
   13640:	push	{fp, lr}
   13644:	mov	fp, sp
   13648:	bl	13578 <table_get@@Base>
   1364c:	ldrd	r0, [r0]
   13650:	pop	{fp, pc}

00013654 <table_get_uint64@@Base>:
   13654:	push	{fp, lr}
   13658:	mov	fp, sp
   1365c:	bl	13578 <table_get@@Base>
   13660:	ldrd	r0, [r0]
   13664:	pop	{fp, pc}

00013668 <table_get_short@@Base>:
   13668:	push	{fp, lr}
   1366c:	mov	fp, sp
   13670:	bl	13578 <table_get@@Base>
   13674:	ldrsh	r0, [r0]
   13678:	pop	{fp, pc}

0001367c <table_get_ushort@@Base>:
   1367c:	push	{fp, lr}
   13680:	mov	fp, sp
   13684:	bl	13578 <table_get@@Base>
   13688:	ldrh	r0, [r0]
   1368c:	pop	{fp, pc}

00013690 <table_get_long@@Base>:
   13690:	push	{fp, lr}
   13694:	mov	fp, sp
   13698:	bl	13578 <table_get@@Base>
   1369c:	ldr	r0, [r0]
   136a0:	pop	{fp, pc}

000136a4 <table_get_ulong@@Base>:
   136a4:	push	{fp, lr}
   136a8:	mov	fp, sp
   136ac:	bl	13578 <table_get@@Base>
   136b0:	ldr	r0, [r0]
   136b4:	pop	{fp, pc}

000136b8 <table_get_llong@@Base>:
   136b8:	push	{fp, lr}
   136bc:	mov	fp, sp
   136c0:	bl	13578 <table_get@@Base>
   136c4:	ldrd	r0, [r0]
   136c8:	pop	{fp, pc}

000136cc <table_get_ullong@@Base>:
   136cc:	push	{fp, lr}
   136d0:	mov	fp, sp
   136d4:	bl	13578 <table_get@@Base>
   136d8:	ldrd	r0, [r0]
   136dc:	pop	{fp, pc}

000136e0 <table_get_float@@Base>:
   136e0:	push	{fp, lr}
   136e4:	mov	fp, sp
   136e8:	bl	13578 <table_get@@Base>
   136ec:	vldr	s0, [r0]
   136f0:	pop	{fp, pc}

000136f4 <table_get_double@@Base>:
   136f4:	push	{fp, lr}
   136f8:	mov	fp, sp
   136fc:	bl	13578 <table_get@@Base>
   13700:	vldr	d0, [r0]
   13704:	pop	{fp, pc}

00013708 <table_get_ldouble@@Base>:
   13708:	push	{fp, lr}
   1370c:	mov	fp, sp
   13710:	bl	13578 <table_get@@Base>
   13714:	vldr	d0, [r0]
   13718:	pop	{fp, pc}

0001371c <table_get_char@@Base>:
   1371c:	push	{fp, lr}
   13720:	mov	fp, sp
   13724:	bl	13578 <table_get@@Base>
   13728:	ldrb	r0, [r0]
   1372c:	pop	{fp, pc}

00013730 <table_get_uchar@@Base>:
   13730:	push	{fp, lr}
   13734:	mov	fp, sp
   13738:	bl	13578 <table_get@@Base>
   1373c:	ldrb	r0, [r0]
   13740:	pop	{fp, pc}

00013744 <table_get_string@@Base>:
   13744:	b	13578 <table_get@@Base>

00013748 <table_get_ptr@@Base>:
   13748:	b	13578 <table_get@@Base>

0001374c <table_row_init@@Base>:
   1374c:	push	{r4, r5, fp, lr}
   13750:	add	fp, sp, #8
   13754:	mov	r4, r0
   13758:	bl	13774 <table_get_row_ptr@@Base>
   1375c:	mov	r5, r0
   13760:	ldr	r0, [r4, #12]
   13764:	lsl	r0, r0, #2
   13768:	bl	11ecc <malloc@plt>
   1376c:	str	r0, [r5]
   13770:	pop	{r4, r5, fp, pc}

00013774 <table_get_row_ptr@@Base>:
   13774:	ldr	r0, [r0, #16]
   13778:	add	r0, r0, r1, lsl #2
   1377c:	bx	lr

00013780 <table_row_destroy@@Base>:
   13780:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13784:	add	fp, sp, #24
   13788:	mov	r4, r1
   1378c:	mov	r5, r0
   13790:	bl	12ac0 <table_get_column_length@@Base>
   13794:	mov	r6, r0
   13798:	mov	r0, r5
   1379c:	mov	r1, r4
   137a0:	bl	13774 <table_get_row_ptr@@Base>
   137a4:	mov	r8, r0
   137a8:	cmp	r6, #1
   137ac:	blt	137d0 <table_row_destroy@@Base+0x50>
   137b0:	mov	r7, #0
   137b4:	mov	r0, r5
   137b8:	mov	r1, r4
   137bc:	mov	r2, r7
   137c0:	bl	14038 <table_cell_destroy@@Base>
   137c4:	add	r7, r7, #1
   137c8:	cmp	r6, r7
   137cc:	bne	137b4 <table_row_destroy@@Base+0x34>
   137d0:	ldr	r0, [r8]
   137d4:	cmp	r0, #0
   137d8:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   137dc:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   137e0:	b	11ea8 <free@plt>

000137e4 <table_get_row_length@@Base>:
   137e4:	ldr	r0, [r0, #20]
   137e8:	bx	lr

000137ec <table_add_row@@Base>:
   137ec:	push	{r4, sl, fp, lr}
   137f0:	add	fp, sp, #8
   137f4:	mov	r4, r0
   137f8:	bl	137e4 <table_get_row_length@@Base>
   137fc:	ldr	r1, [r4, #24]
   13800:	udiv	r2, r0, r1
   13804:	mls	r0, r2, r1, r0
   13808:	cmp	r0, #0
   1380c:	bne	13818 <table_add_row@@Base+0x2c>
   13810:	mov	r0, r4
   13814:	bl	1384c <table_add_row@@Base+0x60>
   13818:	mov	r0, r4
   1381c:	bl	1387c <table_add_row@@Base+0x90>
   13820:	mov	r0, r4
   13824:	bl	137e4 <table_get_row_length@@Base>
   13828:	mov	r1, r0
   1382c:	mov	r0, r4
   13830:	mvn	r2, #0
   13834:	mov	r3, #2
   13838:	bl	129cc <table_notify@@Base>
   1383c:	ldr	r0, [r4, #20]
   13840:	add	r1, r0, #1
   13844:	str	r1, [r4, #20]
   13848:	pop	{r4, sl, fp, pc}
   1384c:	push	{r4, sl, fp, lr}
   13850:	add	fp, sp, #8
   13854:	mov	r4, r0
   13858:	ldr	r0, [r0, #16]
   1385c:	ldr	r1, [r4, #24]
   13860:	ldr	r2, [r4, #28]
   13864:	add	r1, r2, r1
   13868:	str	r1, [r4, #28]
   1386c:	lsl	r1, r1, #2
   13870:	bl	11eb4 <realloc@plt>
   13874:	str	r0, [r4, #16]
   13878:	pop	{r4, sl, fp, pc}
   1387c:	push	{r4, r5, r6, r7, fp, lr}
   13880:	add	fp, sp, #16
   13884:	mov	r4, r0
   13888:	bl	137e4 <table_get_row_length@@Base>
   1388c:	mov	r5, r0
   13890:	mov	r0, r4
   13894:	bl	12ac0 <table_get_column_length@@Base>
   13898:	mov	r6, r0
   1389c:	mov	r0, r4
   138a0:	mov	r1, r5
   138a4:	bl	1374c <table_row_init@@Base>
   138a8:	cmp	r6, #1
   138ac:	poplt	{r4, r5, r6, r7, fp, pc}
   138b0:	mov	r7, #0
   138b4:	mov	r0, r4
   138b8:	mov	r1, r5
   138bc:	mov	r2, r7
   138c0:	bl	14004 <table_cell_init@@Base>
   138c4:	add	r7, r7, #1
   138c8:	cmp	r6, r7
   138cc:	bne	138b4 <table_add_row@@Base+0xc8>
   138d0:	pop	{r4, r5, r6, r7, fp, pc}

000138d4 <table_remove_row@@Base>:
   138d4:	push	{r4, r5, fp, lr}
   138d8:	add	fp, sp, #8
   138dc:	mov	r4, r1
   138e0:	mov	r5, r0
   138e4:	bl	13934 <table_remove_row@@Base+0x60>
   138e8:	ldr	r0, [r5, #20]
   138ec:	sub	r0, r0, #1
   138f0:	str	r0, [r5, #20]
   138f4:	mov	r0, r5
   138f8:	bl	137e4 <table_get_row_length@@Base>
   138fc:	ldr	r1, [r5, #24]
   13900:	udiv	r2, r0, r1
   13904:	mls	r0, r2, r1, r0
   13908:	cmp	r0, #0
   1390c:	bne	13918 <table_remove_row@@Base+0x44>
   13910:	mov	r0, r5
   13914:	bl	139ec <table_remove_row@@Base+0x118>
   13918:	mov	r0, r5
   1391c:	mov	r1, r4
   13920:	mvn	r2, #0
   13924:	mov	r3, #4
   13928:	bl	129cc <table_notify@@Base>
   1392c:	mov	r0, #0
   13930:	pop	{r4, r5, fp, pc}
   13934:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13938:	add	fp, sp, #24
   1393c:	mov	r4, r1
   13940:	mov	r5, r0
   13944:	bl	137e4 <table_get_row_length@@Base>
   13948:	mov	r8, r0
   1394c:	mov	r0, r5
   13950:	bl	12ac0 <table_get_column_length@@Base>
   13954:	cmp	r0, #1
   13958:	blt	139a4 <table_remove_row@@Base+0xd0>
   1395c:	mov	r7, r0
   13960:	mov	r6, #0
   13964:	mov	r0, r5
   13968:	mov	r1, r6
   1396c:	bl	12b38 <table_get_column_data_type@@Base>
   13970:	cmp	r0, #23
   13974:	beq	13998 <table_remove_row@@Base+0xc4>
   13978:	mov	r0, r5
   1397c:	mov	r1, r4
   13980:	mov	r2, r6
   13984:	bl	1401c <table_get_cell_ptr@@Base>
   13988:	ldr	r0, [r0]
   1398c:	cmp	r0, #0
   13990:	beq	13998 <table_remove_row@@Base+0xc4>
   13994:	bl	11ea8 <free@plt>
   13998:	add	r6, r6, #1
   1399c:	cmp	r7, r6
   139a0:	bne	13964 <table_remove_row@@Base+0x90>
   139a4:	mov	r0, r5
   139a8:	mov	r1, r4
   139ac:	bl	13774 <table_get_row_ptr@@Base>
   139b0:	ldr	r0, [r0]
   139b4:	cmp	r0, #0
   139b8:	beq	139c0 <table_remove_row@@Base+0xec>
   139bc:	bl	11ea8 <free@plt>
   139c0:	sub	r0, r8, #1
   139c4:	cmp	r0, r4
   139c8:	pople	{r4, r5, r6, r7, r8, sl, fp, pc}
   139cc:	ldr	r1, [r5, #16]
   139d0:	add	r2, r1, r4, lsl #2
   139d4:	ldr	r2, [r2, #4]
   139d8:	str	r2, [r1, r4, lsl #2]
   139dc:	add	r4, r4, #1
   139e0:	cmp	r0, r4
   139e4:	bne	139cc <table_remove_row@@Base+0xf8>
   139e8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   139ec:	push	{r4, sl, fp, lr}
   139f0:	add	fp, sp, #8
   139f4:	mov	r4, r0
   139f8:	ldr	r0, [r0, #16]
   139fc:	ldr	r1, [r4, #24]
   13a00:	ldr	r2, [r4, #28]
   13a04:	sub	r1, r2, r1
   13a08:	str	r1, [r4, #28]
   13a0c:	lsl	r1, r1, #2
   13a10:	bl	11eb4 <realloc@plt>
   13a14:	str	r0, [r4, #16]
   13a18:	pop	{r4, sl, fp, pc}

00013a1c <table_set_row_ptr@@Base>:
   13a1c:	ldr	r2, [r2]
   13a20:	ldr	r0, [r0, #16]
   13a24:	str	r2, [r0, r1, lsl #2]
   13a28:	bx	lr

00013a2c <table_set@@Base>:
   13a2c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13a30:	add	fp, sp, #24
   13a34:	mov	r8, r3
   13a38:	mov	r4, r2
   13a3c:	mov	r9, r1
   13a40:	mov	r6, r0
   13a44:	bl	1401c <table_get_cell_ptr@@Base>
   13a48:	mov	r5, r0
   13a4c:	mov	r0, r6
   13a50:	mov	r1, r4
   13a54:	bl	12a90 <table_get_col_ptr@@Base>
   13a58:	mvn	r7, #0
   13a5c:	ldr	r1, [fp, #8]
   13a60:	cmp	r1, #23
   13a64:	bhi	13c1c <table_set@@Base+0x1f0>
   13a68:	add	r2, pc, #0
   13a6c:	ldr	pc, [r2, r1, lsl #2]
   13a70:	ldrdeq	r3, [r1], -r0
   13a74:	ldrdeq	r3, [r1], -r0
   13a78:	andeq	r3, r1, r8, asr #22
   13a7c:	andeq	r3, r1, r8, asr #22
   13a80:	andeq	r3, r1, r0, lsl #23
   13a84:	andeq	r3, r1, r0, lsl #23
   13a88:	ldrdeq	r3, [r1], -r0
   13a8c:	ldrdeq	r3, [r1], -r0
   13a90:	andeq	r3, r1, r8, lsl #22
   13a94:	andeq	r3, r1, r8, lsl #22
   13a98:	andeq	r3, r1, r0, lsl #23
   13a9c:	andeq	r3, r1, r0, lsl #23
   13aa0:	ldrdeq	r3, [r1], -r0
   13aa4:	ldrdeq	r3, [r1], -r0
   13aa8:	andeq	r3, r1, r8, lsl #22
   13aac:	andeq	r3, r1, r8, lsl #22
   13ab0:	ldrdeq	r3, [r1], -r0
   13ab4:	andeq	r3, r1, r8, lsl #22
   13ab8:	andeq	r3, r1, r8, lsl #22
   13abc:	andeq	r3, r1, r8, asr #22
   13ac0:	andeq	r3, r1, r8, asr #22
   13ac4:			; <UNDEFINED> instruction: 0x00013bb8
   13ac8:	andeq	r3, r1, r8, asr #22
   13acc:	strdeq	r3, [r1], -r4
   13ad0:	ldr	r0, [r0, #4]
   13ad4:	cmp	r0, r1
   13ad8:	bne	13c1c <table_set@@Base+0x1f0>
   13adc:	ldr	r0, [r5]
   13ae0:	cmp	r0, #0
   13ae4:	bne	13afc <table_set@@Base+0xd0>
   13ae8:	mov	r0, #4
   13aec:	bl	11ecc <malloc@plt>
   13af0:	str	r0, [r5]
   13af4:	cmp	r0, #0
   13af8:	beq	13c1c <table_set@@Base+0x1f0>
   13afc:	ldr	r1, [r8]
   13b00:	str	r1, [r0]
   13b04:	b	13c04 <table_set@@Base+0x1d8>
   13b08:	ldr	r0, [r0, #4]
   13b0c:	cmp	r0, r1
   13b10:	bne	13c1c <table_set@@Base+0x1f0>
   13b14:	ldr	r0, [r5]
   13b18:	cmp	r0, #0
   13b1c:	bne	13b34 <table_set@@Base+0x108>
   13b20:	mov	r0, #8
   13b24:	bl	11ecc <malloc@plt>
   13b28:	str	r0, [r5]
   13b2c:	cmp	r0, #0
   13b30:	beq	13c1c <table_set@@Base+0x1f0>
   13b34:	ldr	r1, [r8]
   13b38:	ldr	r2, [r8, #4]
   13b3c:	str	r2, [r0, #4]
   13b40:	str	r1, [r0]
   13b44:	b	13c04 <table_set@@Base+0x1d8>
   13b48:	ldr	r0, [r0, #4]
   13b4c:	cmp	r0, r1
   13b50:	bne	13c1c <table_set@@Base+0x1f0>
   13b54:	ldr	r0, [r5]
   13b58:	cmp	r0, #0
   13b5c:	bne	13b74 <table_set@@Base+0x148>
   13b60:	mov	r0, #1
   13b64:	bl	11ecc <malloc@plt>
   13b68:	str	r0, [r5]
   13b6c:	cmp	r0, #0
   13b70:	beq	13c1c <table_set@@Base+0x1f0>
   13b74:	ldrb	r1, [r8]
   13b78:	strb	r1, [r0]
   13b7c:	b	13c04 <table_set@@Base+0x1d8>
   13b80:	ldr	r0, [r0, #4]
   13b84:	cmp	r0, r1
   13b88:	bne	13c1c <table_set@@Base+0x1f0>
   13b8c:	ldr	r0, [r5]
   13b90:	cmp	r0, #0
   13b94:	bne	13bac <table_set@@Base+0x180>
   13b98:	mov	r0, #2
   13b9c:	bl	11ecc <malloc@plt>
   13ba0:	str	r0, [r5]
   13ba4:	cmp	r0, #0
   13ba8:	beq	13c1c <table_set@@Base+0x1f0>
   13bac:	ldrh	r1, [r8]
   13bb0:	strh	r1, [r0]
   13bb4:	b	13c04 <table_set@@Base+0x1d8>
   13bb8:	ldr	r0, [r0, #4]
   13bbc:	cmp	r0, r1
   13bc0:	bne	13c1c <table_set@@Base+0x1f0>
   13bc4:	mov	r0, r8
   13bc8:	bl	11ef0 <strlen@plt>
   13bcc:	ldr	r2, [r5]
   13bd0:	add	r1, r0, #1
   13bd4:	mov	r0, r2
   13bd8:	bl	11eb4 <realloc@plt>
   13bdc:	str	r0, [r5]
   13be0:	cmp	r0, #0
   13be4:	beq	13c1c <table_set@@Base+0x1f0>
   13be8:	mov	r1, r8
   13bec:	bl	11ec0 <strcpy@plt>
   13bf0:	b	13c04 <table_set@@Base+0x1d8>
   13bf4:	ldr	r0, [r0, #4]
   13bf8:	cmp	r0, r1
   13bfc:	bne	13c1c <table_set@@Base+0x1f0>
   13c00:	str	r8, [r5]
   13c04:	mov	r0, r6
   13c08:	mov	r1, r9
   13c0c:	mov	r2, r4
   13c10:	mov	r3, #1
   13c14:	bl	129cc <table_notify@@Base>
   13c18:	mov	r7, #0
   13c1c:	mov	r0, r7
   13c20:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013c24 <table_set_bool@@Base>:
   13c24:	push	{fp, lr}
   13c28:	mov	fp, sp
   13c2c:	sub	sp, sp, #8
   13c30:	strb	r3, [fp, #-1]
   13c34:	mov	r3, #22
   13c38:	str	r3, [sp]
   13c3c:	sub	r3, fp, #1
   13c40:	bl	13a2c <table_set@@Base>
   13c44:	mov	sp, fp
   13c48:	pop	{fp, pc}

00013c4c <table_set_int@@Base>:
   13c4c:	push	{fp, lr}
   13c50:	mov	fp, sp
   13c54:	sub	sp, sp, #8
   13c58:	str	r3, [sp, #4]
   13c5c:	mov	r3, #0
   13c60:	str	r3, [sp]
   13c64:	add	r3, sp, #4
   13c68:	bl	13a2c <table_set@@Base>
   13c6c:	mov	sp, fp
   13c70:	pop	{fp, pc}

00013c74 <table_set_uint@@Base>:
   13c74:	push	{fp, lr}
   13c78:	mov	fp, sp
   13c7c:	sub	sp, sp, #8
   13c80:	str	r3, [sp, #4]
   13c84:	mov	r3, #1
   13c88:	str	r3, [sp]
   13c8c:	add	r3, sp, #4
   13c90:	bl	13a2c <table_set@@Base>
   13c94:	mov	sp, fp
   13c98:	pop	{fp, pc}

00013c9c <table_set_int8@@Base>:
   13c9c:	push	{fp, lr}
   13ca0:	mov	fp, sp
   13ca4:	sub	sp, sp, #8
   13ca8:	strb	r3, [fp, #-1]
   13cac:	mov	r3, #2
   13cb0:	str	r3, [sp]
   13cb4:	sub	r3, fp, #1
   13cb8:	bl	13a2c <table_set@@Base>
   13cbc:	mov	sp, fp
   13cc0:	pop	{fp, pc}

00013cc4 <table_set_uint8@@Base>:
   13cc4:	push	{fp, lr}
   13cc8:	mov	fp, sp
   13ccc:	sub	sp, sp, #8
   13cd0:	strb	r3, [fp, #-1]
   13cd4:	mov	r3, #3
   13cd8:	str	r3, [sp]
   13cdc:	sub	r3, fp, #1
   13ce0:	bl	13a2c <table_set@@Base>
   13ce4:	mov	sp, fp
   13ce8:	pop	{fp, pc}

00013cec <table_set_int16@@Base>:
   13cec:	push	{fp, lr}
   13cf0:	mov	fp, sp
   13cf4:	sub	sp, sp, #8
   13cf8:	strh	r3, [fp, #-2]
   13cfc:	mov	r3, #4
   13d00:	str	r3, [sp]
   13d04:	sub	r3, fp, #2
   13d08:	bl	13a2c <table_set@@Base>
   13d0c:	mov	sp, fp
   13d10:	pop	{fp, pc}

00013d14 <table_set_uint16@@Base>:
   13d14:	push	{fp, lr}
   13d18:	mov	fp, sp
   13d1c:	sub	sp, sp, #8
   13d20:	strh	r3, [fp, #-2]
   13d24:	mov	r3, #5
   13d28:	str	r3, [sp]
   13d2c:	sub	r3, fp, #2
   13d30:	bl	13a2c <table_set@@Base>
   13d34:	mov	sp, fp
   13d38:	pop	{fp, pc}

00013d3c <table_set_int32@@Base>:
   13d3c:	push	{fp, lr}
   13d40:	mov	fp, sp
   13d44:	sub	sp, sp, #8
   13d48:	str	r3, [sp, #4]
   13d4c:	mov	r3, #6
   13d50:	str	r3, [sp]
   13d54:	add	r3, sp, #4
   13d58:	bl	13a2c <table_set@@Base>
   13d5c:	mov	sp, fp
   13d60:	pop	{fp, pc}

00013d64 <table_set_uint32@@Base>:
   13d64:	push	{fp, lr}
   13d68:	mov	fp, sp
   13d6c:	sub	sp, sp, #8
   13d70:	str	r3, [sp, #4]
   13d74:	mov	r3, #7
   13d78:	str	r3, [sp]
   13d7c:	add	r3, sp, #4
   13d80:	bl	13a2c <table_set@@Base>
   13d84:	mov	sp, fp
   13d88:	pop	{fp, pc}

00013d8c <table_set_int64@@Base>:
   13d8c:	push	{fp, lr}
   13d90:	mov	fp, sp
   13d94:	sub	sp, sp, #16
   13d98:	ldr	r3, [fp, #12]
   13d9c:	str	r3, [sp, #12]
   13da0:	ldr	r3, [fp, #8]
   13da4:	str	r3, [sp, #8]
   13da8:	mov	r3, #8
   13dac:	str	r3, [sp]
   13db0:	add	r3, sp, #8
   13db4:	bl	13a2c <table_set@@Base>
   13db8:	mov	sp, fp
   13dbc:	pop	{fp, pc}

00013dc0 <table_set_uint64@@Base>:
   13dc0:	push	{fp, lr}
   13dc4:	mov	fp, sp
   13dc8:	sub	sp, sp, #16
   13dcc:	ldr	r3, [fp, #12]
   13dd0:	str	r3, [sp, #12]
   13dd4:	ldr	r3, [fp, #8]
   13dd8:	str	r3, [sp, #8]
   13ddc:	mov	r3, #9
   13de0:	str	r3, [sp]
   13de4:	add	r3, sp, #8
   13de8:	bl	13a2c <table_set@@Base>
   13dec:	mov	sp, fp
   13df0:	pop	{fp, pc}

00013df4 <table_set_short@@Base>:
   13df4:	push	{fp, lr}
   13df8:	mov	fp, sp
   13dfc:	sub	sp, sp, #8
   13e00:	strh	r3, [fp, #-2]
   13e04:	mov	r3, #10
   13e08:	str	r3, [sp]
   13e0c:	sub	r3, fp, #2
   13e10:	bl	13a2c <table_set@@Base>
   13e14:	mov	sp, fp
   13e18:	pop	{fp, pc}

00013e1c <table_set_ushort@@Base>:
   13e1c:	push	{fp, lr}
   13e20:	mov	fp, sp
   13e24:	sub	sp, sp, #8
   13e28:	strh	r3, [fp, #-2]
   13e2c:	mov	r3, #11
   13e30:	str	r3, [sp]
   13e34:	sub	r3, fp, #2
   13e38:	bl	13a2c <table_set@@Base>
   13e3c:	mov	sp, fp
   13e40:	pop	{fp, pc}

00013e44 <table_set_long@@Base>:
   13e44:	push	{fp, lr}
   13e48:	mov	fp, sp
   13e4c:	sub	sp, sp, #8
   13e50:	str	r3, [sp, #4]
   13e54:	mov	r3, #12
   13e58:	str	r3, [sp]
   13e5c:	add	r3, sp, #4
   13e60:	bl	13a2c <table_set@@Base>
   13e64:	mov	sp, fp
   13e68:	pop	{fp, pc}

00013e6c <table_set_ulong@@Base>:
   13e6c:	push	{fp, lr}
   13e70:	mov	fp, sp
   13e74:	sub	sp, sp, #8
   13e78:	str	r3, [sp, #4]
   13e7c:	mov	r3, #13
   13e80:	str	r3, [sp]
   13e84:	add	r3, sp, #4
   13e88:	bl	13a2c <table_set@@Base>
   13e8c:	mov	sp, fp
   13e90:	pop	{fp, pc}

00013e94 <table_set_llong@@Base>:
   13e94:	push	{fp, lr}
   13e98:	mov	fp, sp
   13e9c:	sub	sp, sp, #16
   13ea0:	ldr	r3, [fp, #12]
   13ea4:	str	r3, [sp, #12]
   13ea8:	ldr	r3, [fp, #8]
   13eac:	str	r3, [sp, #8]
   13eb0:	mov	r3, #14
   13eb4:	str	r3, [sp]
   13eb8:	add	r3, sp, #8
   13ebc:	bl	13a2c <table_set@@Base>
   13ec0:	mov	sp, fp
   13ec4:	pop	{fp, pc}

00013ec8 <table_set_ullong@@Base>:
   13ec8:	push	{fp, lr}
   13ecc:	mov	fp, sp
   13ed0:	sub	sp, sp, #16
   13ed4:	ldr	r3, [fp, #12]
   13ed8:	str	r3, [sp, #12]
   13edc:	ldr	r3, [fp, #8]
   13ee0:	str	r3, [sp, #8]
   13ee4:	mov	r3, #15
   13ee8:	str	r3, [sp]
   13eec:	add	r3, sp, #8
   13ef0:	bl	13a2c <table_set@@Base>
   13ef4:	mov	sp, fp
   13ef8:	pop	{fp, pc}

00013efc <table_set_float@@Base>:
   13efc:	push	{fp, lr}
   13f00:	mov	fp, sp
   13f04:	sub	sp, sp, #8
   13f08:	vstr	s0, [sp, #4]
   13f0c:	mov	r3, #16
   13f10:	str	r3, [sp]
   13f14:	add	r3, sp, #4
   13f18:	bl	13a2c <table_set@@Base>
   13f1c:	mov	sp, fp
   13f20:	pop	{fp, pc}

00013f24 <table_set_double@@Base>:
   13f24:	push	{fp, lr}
   13f28:	mov	fp, sp
   13f2c:	sub	sp, sp, #16
   13f30:	vstr	d0, [sp, #8]
   13f34:	mov	r3, #17
   13f38:	str	r3, [sp]
   13f3c:	add	r3, sp, #8
   13f40:	bl	13a2c <table_set@@Base>
   13f44:	mov	sp, fp
   13f48:	pop	{fp, pc}

00013f4c <table_set_ldouble@@Base>:
   13f4c:	push	{fp, lr}
   13f50:	mov	fp, sp
   13f54:	sub	sp, sp, #16
   13f58:	vstr	d0, [sp, #8]
   13f5c:	mov	r3, #18
   13f60:	str	r3, [sp]
   13f64:	add	r3, sp, #8
   13f68:	bl	13a2c <table_set@@Base>
   13f6c:	mov	sp, fp
   13f70:	pop	{fp, pc}

00013f74 <table_set_string@@Base>:
   13f74:	push	{fp, lr}
   13f78:	mov	fp, sp
   13f7c:	sub	sp, sp, #8
   13f80:	mov	ip, #21
   13f84:	str	ip, [sp]
   13f88:	bl	13a2c <table_set@@Base>
   13f8c:	mov	sp, fp
   13f90:	pop	{fp, pc}

00013f94 <table_set_char@@Base>:
   13f94:	push	{fp, lr}
   13f98:	mov	fp, sp
   13f9c:	sub	sp, sp, #8
   13fa0:	strb	r3, [fp, #-1]
   13fa4:	mov	r3, #19
   13fa8:	str	r3, [sp]
   13fac:	sub	r3, fp, #1
   13fb0:	bl	13a2c <table_set@@Base>
   13fb4:	mov	sp, fp
   13fb8:	pop	{fp, pc}

00013fbc <table_set_uchar@@Base>:
   13fbc:	push	{fp, lr}
   13fc0:	mov	fp, sp
   13fc4:	sub	sp, sp, #8
   13fc8:	strb	r3, [fp, #-1]
   13fcc:	mov	r3, #20
   13fd0:	str	r3, [sp]
   13fd4:	sub	r3, fp, #1
   13fd8:	bl	13a2c <table_set@@Base>
   13fdc:	mov	sp, fp
   13fe0:	pop	{fp, pc}

00013fe4 <table_set_ptr@@Base>:
   13fe4:	push	{fp, lr}
   13fe8:	mov	fp, sp
   13fec:	sub	sp, sp, #8
   13ff0:	mov	ip, #23
   13ff4:	str	ip, [sp]
   13ff8:	bl	13a2c <table_set@@Base>
   13ffc:	mov	sp, fp
   14000:	pop	{fp, pc}

00014004 <table_cell_init@@Base>:
   14004:	push	{fp, lr}
   14008:	mov	fp, sp
   1400c:	bl	1401c <table_get_cell_ptr@@Base>
   14010:	mov	r1, #0
   14014:	str	r1, [r0]
   14018:	pop	{fp, pc}

0001401c <table_get_cell_ptr@@Base>:
   1401c:	push	{r4, sl, fp, lr}
   14020:	add	fp, sp, #8
   14024:	mov	r4, r2
   14028:	bl	13774 <table_get_row_ptr@@Base>
   1402c:	ldr	r0, [r0]
   14030:	add	r0, r0, r4, lsl #2
   14034:	pop	{r4, sl, fp, pc}

00014038 <table_cell_destroy@@Base>:
   14038:	push	{r4, r5, r6, sl, fp, lr}
   1403c:	add	fp, sp, #16
   14040:	mov	r4, r2
   14044:	mov	r5, r1
   14048:	mov	r6, r0
   1404c:	mov	r1, r2
   14050:	bl	12b38 <table_get_column_data_type@@Base>
   14054:	cmp	r0, #23
   14058:	popeq	{r4, r5, r6, sl, fp, pc}
   1405c:	mov	r0, r6
   14060:	mov	r1, r5
   14064:	mov	r2, r4
   14068:	bl	1401c <table_get_cell_ptr@@Base>
   1406c:	ldr	r0, [r0]
   14070:	cmp	r0, #0
   14074:	beq	14080 <table_cell_destroy@@Base+0x48>
   14078:	pop	{r4, r5, r6, sl, fp, lr}
   1407c:	b	11ea8 <free@plt>
   14080:	pop	{r4, r5, r6, sl, fp, pc}

00014084 <table_cell_to_buffer@@Base>:
   14084:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14088:	add	fp, sp, #24
   1408c:	sub	sp, sp, #8
   14090:	mov	r5, r3
   14094:	mov	r6, r2
   14098:	mov	r7, r1
   1409c:	mov	r4, r0
   140a0:	mov	r1, r2
   140a4:	bl	12b38 <table_get_column_data_type@@Base>
   140a8:	cmp	r0, #23
   140ac:	bhi	1439c <table_cell_to_buffer@@Base+0x318>
   140b0:	ldr	r8, [fp, #8]
   140b4:	add	r1, pc, #0
   140b8:	ldr	pc, [r1, r0, lsl #2]
   140bc:	andeq	r4, r1, ip, lsl r1
   140c0:	andeq	r4, r1, r0, lsr r1
   140c4:	andeq	r4, r1, r4, asr #2
   140c8:	andeq	r4, r1, r8, asr r1
   140cc:	andeq	r4, r1, ip, ror #2
   140d0:	andeq	r4, r1, r0, lsl #3
   140d4:	muleq	r1, r4, r1
   140d8:	andeq	r4, r1, r8, lsr #3
   140dc:	andeq	r4, r1, r8, asr #3
   140e0:	ldrdeq	r4, [r1], -ip
   140e4:	strdeq	r4, [r1], -r0
   140e8:	andeq	r4, r1, r0, lsl r2
   140ec:	andeq	r4, r1, r0, lsr r2
   140f0:	andeq	r4, r1, r0, asr r2
   140f4:	andeq	r4, r1, r0, ror r2
   140f8:	muleq	r1, r0, r2
   140fc:			; <UNDEFINED> instruction: 0x000142b0
   14100:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14104:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14108:	andeq	r4, r1, r0, lsr #6
   1410c:	andeq	r4, r1, r4, lsr r3
   14110:	andeq	r4, r1, r4, asr r3
   14114:	andeq	r4, r1, r4, ror r3
   14118:	andeq	r4, r1, r8, lsr #7
   1411c:	mov	r0, r4
   14120:	mov	r1, r7
   14124:	mov	r2, r6
   14128:	bl	135a0 <table_get_int@@Base>
   1412c:	b	14384 <table_cell_to_buffer@@Base+0x300>
   14130:	mov	r0, r4
   14134:	mov	r1, r7
   14138:	mov	r2, r6
   1413c:	bl	135b4 <table_get_uint@@Base>
   14140:	b	141b8 <table_cell_to_buffer@@Base+0x134>
   14144:	mov	r0, r4
   14148:	mov	r1, r7
   1414c:	mov	r2, r6
   14150:	bl	135c8 <table_get_int8@@Base>
   14154:	b	14384 <table_cell_to_buffer@@Base+0x300>
   14158:	mov	r0, r4
   1415c:	mov	r1, r7
   14160:	mov	r2, r6
   14164:	bl	135dc <table_get_uint8@@Base>
   14168:	b	141b8 <table_cell_to_buffer@@Base+0x134>
   1416c:	mov	r0, r4
   14170:	mov	r1, r7
   14174:	mov	r2, r6
   14178:	bl	135f0 <table_get_int16@@Base>
   1417c:	b	14384 <table_cell_to_buffer@@Base+0x300>
   14180:	mov	r0, r4
   14184:	mov	r1, r7
   14188:	mov	r2, r6
   1418c:	bl	13604 <table_get_uint16@@Base>
   14190:	b	141b8 <table_cell_to_buffer@@Base+0x134>
   14194:	mov	r0, r4
   14198:	mov	r1, r7
   1419c:	mov	r2, r6
   141a0:	bl	13618 <table_get_int32@@Base>
   141a4:	b	14384 <table_cell_to_buffer@@Base+0x300>
   141a8:	mov	r0, r4
   141ac:	mov	r1, r7
   141b0:	mov	r2, r6
   141b4:	bl	1362c <table_get_uint32@@Base>
   141b8:	mov	r3, r0
   141bc:	movw	r2, #19299	; 0x4b63
   141c0:	movt	r2, #1
   141c4:	b	14390 <table_cell_to_buffer@@Base+0x30c>
   141c8:	mov	r0, r4
   141cc:	mov	r1, r7
   141d0:	mov	r2, r6
   141d4:	bl	13640 <table_get_int64@@Base>
   141d8:	b	14280 <table_cell_to_buffer@@Base+0x1fc>
   141dc:	mov	r0, r4
   141e0:	mov	r1, r7
   141e4:	mov	r2, r6
   141e8:	bl	13654 <table_get_uint64@@Base>
   141ec:	b	142a0 <table_cell_to_buffer@@Base+0x21c>
   141f0:	mov	r0, r4
   141f4:	mov	r1, r7
   141f8:	mov	r2, r6
   141fc:	bl	13668 <table_get_short@@Base>
   14200:	mov	r3, r0
   14204:	movw	r2, #19312	; 0x4b70
   14208:	movt	r2, #1
   1420c:	b	14390 <table_cell_to_buffer@@Base+0x30c>
   14210:	mov	r0, r4
   14214:	mov	r1, r7
   14218:	mov	r2, r6
   1421c:	bl	1367c <table_get_ushort@@Base>
   14220:	mov	r3, r0
   14224:	movw	r2, #19316	; 0x4b74
   14228:	movt	r2, #1
   1422c:	b	14390 <table_cell_to_buffer@@Base+0x30c>
   14230:	mov	r0, r4
   14234:	mov	r1, r7
   14238:	mov	r2, r6
   1423c:	bl	13690 <table_get_long@@Base>
   14240:	mov	r3, r0
   14244:	movw	r2, #19320	; 0x4b78
   14248:	movt	r2, #1
   1424c:	b	14390 <table_cell_to_buffer@@Base+0x30c>
   14250:	mov	r0, r4
   14254:	mov	r1, r7
   14258:	mov	r2, r6
   1425c:	bl	136a4 <table_get_ulong@@Base>
   14260:	mov	r3, r0
   14264:	movw	r2, #19324	; 0x4b7c
   14268:	movt	r2, #1
   1426c:	b	14390 <table_cell_to_buffer@@Base+0x30c>
   14270:	mov	r0, r4
   14274:	mov	r1, r7
   14278:	mov	r2, r6
   1427c:	bl	136b8 <table_get_llong@@Base>
   14280:	stm	sp, {r0, r1}
   14284:	movw	r2, #19302	; 0x4b66
   14288:	movt	r2, #1
   1428c:	b	14310 <table_cell_to_buffer@@Base+0x28c>
   14290:	mov	r0, r4
   14294:	mov	r1, r7
   14298:	mov	r2, r6
   1429c:	bl	136cc <table_get_ullong@@Base>
   142a0:	stm	sp, {r0, r1}
   142a4:	movw	r2, #19307	; 0x4b6b
   142a8:	movt	r2, #1
   142ac:	b	14310 <table_cell_to_buffer@@Base+0x28c>
   142b0:	mov	r0, r4
   142b4:	mov	r1, r7
   142b8:	mov	r2, r6
   142bc:	bl	136e0 <table_get_float@@Base>
   142c0:	vcvt.f64.f32	d16, s0
   142c4:	vstr	d16, [sp]
   142c8:	movw	r2, #19331	; 0x4b83
   142cc:	movt	r2, #1
   142d0:	b	14310 <table_cell_to_buffer@@Base+0x28c>
   142d4:	mov	r0, r4
   142d8:	mov	r1, r7
   142dc:	mov	r2, r6
   142e0:	bl	136f4 <table_get_double@@Base>
   142e4:	vstr	d0, [sp]
   142e8:	movw	r2, #19334	; 0x4b86
   142ec:	movt	r2, #1
   142f0:	b	14310 <table_cell_to_buffer@@Base+0x28c>
   142f4:	mov	r0, r4
   142f8:	mov	r1, r7
   142fc:	mov	r2, r6
   14300:	bl	13708 <table_get_ldouble@@Base>
   14304:	vstr	d0, [sp]
   14308:	movw	r2, #19338	; 0x4b8a
   1430c:	movt	r2, #1
   14310:	mov	r0, r5
   14314:	mov	r1, r8
   14318:	bl	11efc <snprintf@plt>
   1431c:	b	1439c <table_cell_to_buffer@@Base+0x318>
   14320:	mov	r0, r4
   14324:	mov	r1, r7
   14328:	mov	r2, r6
   1432c:	bl	1371c <table_get_char@@Base>
   14330:	b	14344 <table_cell_to_buffer@@Base+0x2c0>
   14334:	mov	r0, r4
   14338:	mov	r1, r7
   1433c:	mov	r2, r6
   14340:	bl	13730 <table_get_uchar@@Base>
   14344:	mov	r3, r0
   14348:	movw	r2, #19342	; 0x4b8e
   1434c:	movt	r2, #1
   14350:	b	14390 <table_cell_to_buffer@@Base+0x30c>
   14354:	mov	r0, r4
   14358:	mov	r1, r7
   1435c:	mov	r2, r6
   14360:	bl	13744 <table_get_string@@Base>
   14364:	mov	r3, r0
   14368:	movw	r2, #19328	; 0x4b80
   1436c:	movt	r2, #1
   14370:	b	14390 <table_cell_to_buffer@@Base+0x30c>
   14374:	mov	r0, r4
   14378:	mov	r1, r7
   1437c:	mov	r2, r6
   14380:	bl	1358c <table_get_bool@@Base>
   14384:	mov	r3, r0
   14388:	movw	r2, #19296	; 0x4b60
   1438c:	movt	r2, #1
   14390:	mov	r0, r5
   14394:	mov	r1, r8
   14398:	bl	11efc <snprintf@plt>
   1439c:	mov	r0, #0
   143a0:	sub	sp, fp, #24
   143a4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   143a8:	mov	r0, r4
   143ac:	mov	r1, r7
   143b0:	mov	r2, r6
   143b4:	bl	13748 <table_get_ptr@@Base>
   143b8:	mov	r3, r0
   143bc:	movw	r2, #19345	; 0x4b91
   143c0:	movt	r2, #1
   143c4:	b	14390 <table_cell_to_buffer@@Base+0x30c>

000143c8 <table_cell_from_buffer@@Base>:
   143c8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   143cc:	add	fp, sp, #24
   143d0:	sub	sp, sp, #264	; 0x108
   143d4:	mov	r7, r3
   143d8:	mov	r4, r2
   143dc:	mov	r5, r1
   143e0:	mov	r6, r0
   143e4:	mov	r1, r2
   143e8:	bl	12b38 <table_get_column_data_type@@Base>
   143ec:	cmp	r0, #23
   143f0:	bhi	149c4 <table_cell_from_buffer@@Base+0x5fc>
   143f4:	add	r1, pc, #0
   143f8:	ldr	pc, [r1, r0, lsl #2]
   143fc:	andeq	r4, r1, ip, asr r4
   14400:	muleq	r1, r4, r4
   14404:	andeq	r4, r1, ip, asr #9
   14408:	andeq	r4, r1, r4, lsl #10
   1440c:	andeq	r4, r1, ip, lsr r5
   14410:	andeq	r4, r1, r4, ror r5
   14414:	andeq	r4, r1, ip, lsr #11
   14418:	andeq	r4, r1, r4, ror #11
   1441c:	andeq	r4, r1, ip, lsl r6
   14420:	andeq	r4, r1, ip, asr r6
   14424:	muleq	r1, ip, r6
   14428:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1442c:	andeq	r4, r1, ip, lsl #14
   14430:	andeq	r4, r1, r4, asr #14
   14434:	andeq	r4, r1, ip, ror r7
   14438:			; <UNDEFINED> instruction: 0x000147bc
   1443c:	strdeq	r4, [r1], -ip
   14440:	andeq	r4, r1, r4, lsr r8
   14444:	andeq	r4, r1, ip, ror #16
   14448:	andeq	r4, r1, r4, lsr #17
   1444c:	ldrdeq	r4, [r1], -ip
   14450:	andeq	r4, r1, r4, lsl r9
   14454:	andeq	r4, r1, ip, asr #18
   14458:	muleq	r1, r0, r9
   1445c:	movw	r1, #19296	; 0x4b60
   14460:	movt	r1, #1
   14464:	add	r2, sp, #8
   14468:	mov	r0, r7
   1446c:	bl	11f08 <__isoc99_sscanf@plt>
   14470:	mvn	r7, #0
   14474:	cmp	r0, #1
   14478:	bne	149c8 <table_cell_from_buffer@@Base+0x600>
   1447c:	ldr	r3, [sp, #8]
   14480:	mov	r0, r6
   14484:	mov	r1, r5
   14488:	mov	r2, r4
   1448c:	bl	13c4c <table_set_int@@Base>
   14490:	b	149c4 <table_cell_from_buffer@@Base+0x5fc>
   14494:	movw	r1, #19299	; 0x4b63
   14498:	movt	r1, #1
   1449c:	add	r2, sp, #8
   144a0:	mov	r0, r7
   144a4:	bl	11f08 <__isoc99_sscanf@plt>
   144a8:	mvn	r7, #0
   144ac:	cmp	r0, #1
   144b0:	bne	149c8 <table_cell_from_buffer@@Base+0x600>
   144b4:	ldr	r3, [sp, #8]
   144b8:	mov	r0, r6
   144bc:	mov	r1, r5
   144c0:	mov	r2, r4
   144c4:	bl	13c74 <table_set_uint@@Base>
   144c8:	b	149c4 <table_cell_from_buffer@@Base+0x5fc>
   144cc:	movw	r1, #19348	; 0x4b94
   144d0:	movt	r1, #1
   144d4:	add	r2, sp, #8
   144d8:	mov	r0, r7
   144dc:	bl	11f08 <__isoc99_sscanf@plt>
   144e0:	mvn	r7, #0
   144e4:	cmp	r0, #1
   144e8:	bne	149c8 <table_cell_from_buffer@@Base+0x600>
   144ec:	ldrsb	r3, [sp, #8]
   144f0:	mov	r0, r6
   144f4:	mov	r1, r5
   144f8:	mov	r2, r4
   144fc:	bl	13c9c <table_set_int8@@Base>
   14500:	b	149c4 <table_cell_from_buffer@@Base+0x5fc>
   14504:	movw	r1, #19353	; 0x4b99
   14508:	movt	r1, #1
   1450c:	add	r2, sp, #8
   14510:	mov	r0, r7
   14514:	bl	11f08 <__isoc99_sscanf@plt>
   14518:	mvn	r7, #0
   1451c:	cmp	r0, #1
   14520:	bne	149c8 <table_cell_from_buffer@@Base+0x600>
   14524:	ldrb	r3, [sp, #8]
   14528:	mov	r0, r6
   1452c:	mov	r1, r5
   14530:	mov	r2, r4
   14534:	bl	13cc4 <table_set_uint8@@Base>
   14538:	b	149c4 <table_cell_from_buffer@@Base+0x5fc>
   1453c:	movw	r1, #19312	; 0x4b70
   14540:	movt	r1, #1
   14544:	add	r2, sp, #8
   14548:	mov	r0, r7
   1454c:	bl	11f08 <__isoc99_sscanf@plt>
   14550:	mvn	r7, #0
   14554:	cmp	r0, #1
   14558:	bne	149c8 <table_cell_from_buffer@@Base+0x600>
   1455c:	ldrsh	r3, [sp, #8]
   14560:	mov	r0, r6
   14564:	mov	r1, r5
   14568:	mov	r2, r4
   1456c:	bl	13cec <table_set_int16@@Base>
   14570:	b	149c4 <table_cell_from_buffer@@Base+0x5fc>
   14574:	movw	r1, #19316	; 0x4b74
   14578:	movt	r1, #1
   1457c:	add	r2, sp, #8
   14580:	mov	r0, r7
   14584:	bl	11f08 <__isoc99_sscanf@plt>
   14588:	mvn	r7, #0
   1458c:	cmp	r0, #1
   14590:	bne	149c8 <table_cell_from_buffer@@Base+0x600>
   14594:	ldrh	r3, [sp, #8]
   14598:	mov	r0, r6
   1459c:	mov	r1, r5
   145a0:	mov	r2, r4
   145a4:	bl	13d14 <table_set_uint16@@Base>
   145a8:	b	149c4 <table_cell_from_buffer@@Base+0x5fc>
   145ac:	movw	r1, #19296	; 0x4b60
   145b0:	movt	r1, #1
   145b4:	add	r2, sp, #8
   145b8:	mov	r0, r7
   145bc:	bl	11f08 <__isoc99_sscanf@plt>
   145c0:	mvn	r7, #0
   145c4:	cmp	r0, #1
   145c8:	bne	149c8 <table_cell_from_buffer@@Base+0x600>
   145cc:	ldr	r3, [sp, #8]
   145d0:	mov	r0, r6
   145d4:	mov	r1, r5
   145d8:	mov	r2, r4
   145dc:	bl	13d3c <table_set_int32@@Base>
   145e0:	b	149c4 <table_cell_from_buffer@@Base+0x5fc>
   145e4:	movw	r1, #19299	; 0x4b63
   145e8:	movt	r1, #1
   145ec:	add	r2, sp, #8
   145f0:	mov	r0, r7
   145f4:	bl	11f08 <__isoc99_sscanf@plt>
   145f8:	mvn	r7, #0
   145fc:	cmp	r0, #1
   14600:	bne	149c8 <table_cell_from_buffer@@Base+0x600>
   14604:	ldr	r3, [sp, #8]
   14608:	mov	r0, r6
   1460c:	mov	r1, r5
   14610:	mov	r2, r4
   14614:	bl	13d64 <table_set_uint32@@Base>
   14618:	b	149c4 <table_cell_from_buffer@@Base+0x5fc>
   1461c:	movw	r1, #19302	; 0x4b66
   14620:	movt	r1, #1
   14624:	add	r2, sp, #8
   14628:	mov	r0, r7
   1462c:	bl	11f08 <__isoc99_sscanf@plt>
   14630:	mvn	r7, #0
   14634:	cmp	r0, #1
   14638:	bne	149c8 <table_cell_from_buffer@@Base+0x600>
   1463c:	ldr	r0, [sp, #8]
   14640:	ldr	r1, [sp, #12]
   14644:	stm	sp, {r0, r1}
   14648:	mov	r0, r6
   1464c:	mov	r1, r5
   14650:	mov	r2, r4
   14654:	bl	13d8c <table_set_int64@@Base>
   14658:	b	149c4 <table_cell_from_buffer@@Base+0x5fc>
   1465c:	movw	r1, #19307	; 0x4b6b
   14660:	movt	r1, #1
   14664:	add	r2, sp, #8
   14668:	mov	r0, r7
   1466c:	bl	11f08 <__isoc99_sscanf@plt>
   14670:	mvn	r7, #0
   14674:	cmp	r0, #1
   14678:	bne	149c8 <table_cell_from_buffer@@Base+0x600>
   1467c:	ldr	r0, [sp, #8]
   14680:	ldr	r1, [sp, #12]
   14684:	stm	sp, {r0, r1}
   14688:	mov	r0, r6
   1468c:	mov	r1, r5
   14690:	mov	r2, r4
   14694:	bl	13dc0 <table_set_uint64@@Base>
   14698:	b	149c4 <table_cell_from_buffer@@Base+0x5fc>
   1469c:	movw	r1, #19312	; 0x4b70
   146a0:	movt	r1, #1
   146a4:	add	r2, sp, #8
   146a8:	mov	r0, r7
   146ac:	bl	11f08 <__isoc99_sscanf@plt>
   146b0:	mvn	r7, #0
   146b4:	cmp	r0, #1
   146b8:	bne	149c8 <table_cell_from_buffer@@Base+0x600>
   146bc:	ldrsh	r3, [sp, #8]
   146c0:	mov	r0, r6
   146c4:	mov	r1, r5
   146c8:	mov	r2, r4
   146cc:	bl	13df4 <table_set_short@@Base>
   146d0:	b	149c4 <table_cell_from_buffer@@Base+0x5fc>
   146d4:	movw	r1, #19316	; 0x4b74
   146d8:	movt	r1, #1
   146dc:	add	r2, sp, #8
   146e0:	mov	r0, r7
   146e4:	bl	11f08 <__isoc99_sscanf@plt>
   146e8:	mvn	r7, #0
   146ec:	cmp	r0, #1
   146f0:	bne	149c8 <table_cell_from_buffer@@Base+0x600>
   146f4:	ldrh	r3, [sp, #8]
   146f8:	mov	r0, r6
   146fc:	mov	r1, r5
   14700:	mov	r2, r4
   14704:	bl	13e1c <table_set_ushort@@Base>
   14708:	b	149c4 <table_cell_from_buffer@@Base+0x5fc>
   1470c:	movw	r1, #19320	; 0x4b78
   14710:	movt	r1, #1
   14714:	add	r2, sp, #8
   14718:	mov	r0, r7
   1471c:	bl	11f08 <__isoc99_sscanf@plt>
   14720:	mvn	r7, #0
   14724:	cmp	r0, #1
   14728:	bne	149c8 <table_cell_from_buffer@@Base+0x600>
   1472c:	ldr	r3, [sp, #8]
   14730:	mov	r0, r6
   14734:	mov	r1, r5
   14738:	mov	r2, r4
   1473c:	bl	13e44 <table_set_long@@Base>
   14740:	b	149c4 <table_cell_from_buffer@@Base+0x5fc>
   14744:	movw	r1, #19324	; 0x4b7c
   14748:	movt	r1, #1
   1474c:	add	r2, sp, #8
   14750:	mov	r0, r7
   14754:	bl	11f08 <__isoc99_sscanf@plt>
   14758:	mvn	r7, #0
   1475c:	cmp	r0, #1
   14760:	bne	149c8 <table_cell_from_buffer@@Base+0x600>
   14764:	ldr	r3, [sp, #8]
   14768:	mov	r0, r6
   1476c:	mov	r1, r5
   14770:	mov	r2, r4
   14774:	bl	13e6c <table_set_ulong@@Base>
   14778:	b	149c4 <table_cell_from_buffer@@Base+0x5fc>
   1477c:	movw	r1, #19302	; 0x4b66
   14780:	movt	r1, #1
   14784:	add	r2, sp, #8
   14788:	mov	r0, r7
   1478c:	bl	11f08 <__isoc99_sscanf@plt>
   14790:	mvn	r7, #0
   14794:	cmp	r0, #1
   14798:	bne	149c8 <table_cell_from_buffer@@Base+0x600>
   1479c:	ldr	r0, [sp, #8]
   147a0:	ldr	r1, [sp, #12]
   147a4:	stm	sp, {r0, r1}
   147a8:	mov	r0, r6
   147ac:	mov	r1, r5
   147b0:	mov	r2, r4
   147b4:	bl	13e94 <table_set_llong@@Base>
   147b8:	b	149c4 <table_cell_from_buffer@@Base+0x5fc>
   147bc:	movw	r1, #19307	; 0x4b6b
   147c0:	movt	r1, #1
   147c4:	add	r2, sp, #8
   147c8:	mov	r0, r7
   147cc:	bl	11f08 <__isoc99_sscanf@plt>
   147d0:	mvn	r7, #0
   147d4:	cmp	r0, #1
   147d8:	bne	149c8 <table_cell_from_buffer@@Base+0x600>
   147dc:	ldr	r0, [sp, #8]
   147e0:	ldr	r1, [sp, #12]
   147e4:	stm	sp, {r0, r1}
   147e8:	mov	r0, r6
   147ec:	mov	r1, r5
   147f0:	mov	r2, r4
   147f4:	bl	13ec8 <table_set_ullong@@Base>
   147f8:	b	149c4 <table_cell_from_buffer@@Base+0x5fc>
   147fc:	movw	r1, #19331	; 0x4b83
   14800:	movt	r1, #1
   14804:	add	r2, sp, #8
   14808:	mov	r0, r7
   1480c:	bl	11f08 <__isoc99_sscanf@plt>
   14810:	mvn	r7, #0
   14814:	cmp	r0, #1
   14818:	bne	149c8 <table_cell_from_buffer@@Base+0x600>
   1481c:	vldr	s0, [sp, #8]
   14820:	mov	r0, r6
   14824:	mov	r1, r5
   14828:	mov	r2, r4
   1482c:	bl	13efc <table_set_float@@Base>
   14830:	b	149c4 <table_cell_from_buffer@@Base+0x5fc>
   14834:	movw	r1, #19334	; 0x4b86
   14838:	movt	r1, #1
   1483c:	add	r2, sp, #8
   14840:	mov	r0, r7
   14844:	bl	11f08 <__isoc99_sscanf@plt>
   14848:	mvn	r7, #0
   1484c:	cmp	r0, #1
   14850:	bne	149c8 <table_cell_from_buffer@@Base+0x600>
   14854:	vldr	d0, [sp, #8]
   14858:	mov	r0, r6
   1485c:	mov	r1, r5
   14860:	mov	r2, r4
   14864:	bl	13f24 <table_set_double@@Base>
   14868:	b	149c4 <table_cell_from_buffer@@Base+0x5fc>
   1486c:	movw	r1, #19338	; 0x4b8a
   14870:	movt	r1, #1
   14874:	add	r2, sp, #8
   14878:	mov	r0, r7
   1487c:	bl	11f08 <__isoc99_sscanf@plt>
   14880:	mvn	r7, #0
   14884:	cmp	r0, #1
   14888:	bne	149c8 <table_cell_from_buffer@@Base+0x600>
   1488c:	vldr	d0, [sp, #8]
   14890:	mov	r0, r6
   14894:	mov	r1, r5
   14898:	mov	r2, r4
   1489c:	bl	13f4c <table_set_ldouble@@Base>
   148a0:	b	149c4 <table_cell_from_buffer@@Base+0x5fc>
   148a4:	movw	r1, #19342	; 0x4b8e
   148a8:	movt	r1, #1
   148ac:	add	r2, sp, #8
   148b0:	mov	r0, r7
   148b4:	bl	11f08 <__isoc99_sscanf@plt>
   148b8:	mvn	r7, #0
   148bc:	cmp	r0, #1
   148c0:	bne	149c8 <table_cell_from_buffer@@Base+0x600>
   148c4:	ldrb	r3, [sp, #8]
   148c8:	mov	r0, r6
   148cc:	mov	r1, r5
   148d0:	mov	r2, r4
   148d4:	bl	13f94 <table_set_char@@Base>
   148d8:	b	149c4 <table_cell_from_buffer@@Base+0x5fc>
   148dc:	movw	r1, #19342	; 0x4b8e
   148e0:	movt	r1, #1
   148e4:	add	r2, sp, #8
   148e8:	mov	r0, r7
   148ec:	bl	11f08 <__isoc99_sscanf@plt>
   148f0:	mvn	r7, #0
   148f4:	cmp	r0, #1
   148f8:	bne	149c8 <table_cell_from_buffer@@Base+0x600>
   148fc:	ldrb	r3, [sp, #8]
   14900:	mov	r0, r6
   14904:	mov	r1, r5
   14908:	mov	r2, r4
   1490c:	bl	13fbc <table_set_uchar@@Base>
   14910:	b	149c4 <table_cell_from_buffer@@Base+0x5fc>
   14914:	movw	r1, #19328	; 0x4b80
   14918:	movt	r1, #1
   1491c:	add	r2, sp, #8
   14920:	mov	r0, r7
   14924:	bl	11f08 <__isoc99_sscanf@plt>
   14928:	mvn	r7, #0
   1492c:	cmp	r0, #1
   14930:	bne	149c8 <table_cell_from_buffer@@Base+0x600>
   14934:	add	r3, sp, #8
   14938:	mov	r0, r6
   1493c:	mov	r1, r5
   14940:	mov	r2, r4
   14944:	bl	13f74 <table_set_string@@Base>
   14948:	b	149c4 <table_cell_from_buffer@@Base+0x5fc>
   1494c:	movw	r1, #19296	; 0x4b60
   14950:	movt	r1, #1
   14954:	add	r2, sp, #8
   14958:	mov	r0, r7
   1495c:	bl	11f08 <__isoc99_sscanf@plt>
   14960:	mvn	r7, #0
   14964:	cmp	r0, #1
   14968:	bne	149c8 <table_cell_from_buffer@@Base+0x600>
   1496c:	ldr	r0, [sp, #8]
   14970:	cmp	r0, #0
   14974:	beq	149d4 <table_cell_from_buffer@@Base+0x60c>
   14978:	mov	r0, r6
   1497c:	mov	r1, r5
   14980:	mov	r2, r4
   14984:	mov	r3, #1
   14988:	bl	13c24 <table_set_bool@@Base>
   1498c:	b	149c4 <table_cell_from_buffer@@Base+0x5fc>
   14990:	movw	r1, #19345	; 0x4b91
   14994:	movt	r1, #1
   14998:	add	r2, sp, #8
   1499c:	mov	r0, r7
   149a0:	bl	11f08 <__isoc99_sscanf@plt>
   149a4:	mvn	r7, #0
   149a8:	cmp	r0, #1
   149ac:	bne	149c8 <table_cell_from_buffer@@Base+0x600>
   149b0:	ldr	r3, [sp, #8]
   149b4:	mov	r0, r6
   149b8:	mov	r1, r5
   149bc:	mov	r2, r4
   149c0:	bl	13fe4 <table_set_ptr@@Base>
   149c4:	mov	r7, #0
   149c8:	mov	r0, r7
   149cc:	sub	sp, fp, #24
   149d0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   149d4:	mov	r7, #0
   149d8:	mov	r0, r6
   149dc:	mov	r1, r5
   149e0:	mov	r2, r4
   149e4:	mov	r3, #0
   149e8:	bl	13c24 <table_set_bool@@Base>
   149ec:	b	149c8 <table_cell_from_buffer@@Base+0x600>

000149f0 <table_cell_nullify@@Base>:
   149f0:	push	{r4, sl, fp, lr}
   149f4:	add	fp, sp, #8
   149f8:	bl	1401c <table_get_cell_ptr@@Base>
   149fc:	mov	r4, r0
   14a00:	ldr	r0, [r0]
   14a04:	cmp	r0, #0
   14a08:	beq	14a18 <table_cell_nullify@@Base+0x28>
   14a0c:	bl	11ea8 <free@plt>
   14a10:	mov	r0, #0
   14a14:	str	r0, [r4]
   14a18:	mov	r0, #0
   14a1c:	pop	{r4, sl, fp, pc}

00014a20 <__libc_csu_init@@Base>:
   14a20:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14a24:	mov	r7, r0
   14a28:	ldr	r6, [pc, #72]	; 14a78 <__libc_csu_init@@Base+0x58>
   14a2c:	ldr	r5, [pc, #72]	; 14a7c <__libc_csu_init@@Base+0x5c>
   14a30:	add	r6, pc, r6
   14a34:	add	r5, pc, r5
   14a38:	sub	r6, r6, r5
   14a3c:	mov	r8, r1
   14a40:	mov	r9, r2
   14a44:	bl	11e70 <strcmp@plt-0x20>
   14a48:	asrs	r6, r6, #2
   14a4c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14a50:	mov	r4, #0
   14a54:	add	r4, r4, #1
   14a58:	ldr	r3, [r5], #4
   14a5c:	mov	r2, r9
   14a60:	mov	r1, r8
   14a64:	mov	r0, r7
   14a68:	blx	r3
   14a6c:	cmp	r6, r4
   14a70:	bne	14a54 <__libc_csu_init@@Base+0x34>
   14a74:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14a78:	ldrdeq	r0, [r1], -r4
   14a7c:	andeq	r0, r1, ip, asr #9

00014a80 <__libc_csu_fini@@Base>:
   14a80:	bx	lr

Disassembly of section .fini:

00014a84 <.fini>:
   14a84:	push	{r3, lr}
   14a88:	pop	{r3, pc}
