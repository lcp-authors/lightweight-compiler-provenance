
../repos/inetutils/whois/whois:     file format elf32-littlearm


Disassembly of section .init:

00011078 <.init>:
   11078:	push	{r3, lr}
   1107c:	bl	11828 <putc_unlocked@plt+0x4a8>
   11080:	pop	{r3, pc}

Disassembly of section .plt:

00011084 <fdopen@plt-0x14>:
   11084:	push	{lr}		; (str lr, [sp, #-4]!)
   11088:	ldr	lr, [pc, #4]	; 11094 <fdopen@plt-0x4>
   1108c:	add	lr, pc, lr
   11090:	ldr	pc, [lr, #8]!
   11094:	andeq	r8, r1, ip, ror #30

00011098 <fdopen@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #24, 20	; 0x18000
   110a0:	ldr	pc, [ip, #3948]!	; 0xf6c

000110a4 <calloc@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #24, 20	; 0x18000
   110ac:	ldr	pc, [ip, #3940]!	; 0xf64

000110b0 <fputs_unlocked@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #24, 20	; 0x18000
   110b8:	ldr	pc, [ip, #3932]!	; 0xf5c

000110bc <inet_aton@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #24, 20	; 0x18000
   110c4:	ldr	pc, [ip, #3924]!	; 0xf54

000110c8 <strcmp@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #24, 20	; 0x18000
   110d0:	ldr	pc, [ip, #3916]!	; 0xf4c

000110d4 <printf@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #24, 20	; 0x18000
   110dc:	ldr	pc, [ip, #3908]!	; 0xf44

000110e0 <memmove@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #24, 20	; 0x18000
   110e8:	ldr	pc, [ip, #3900]!	; 0xf3c

000110ec <strchrnul@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #24, 20	; 0x18000
   110f4:	ldr	pc, [ip, #3892]!	; 0xf34

000110f8 <free@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #24, 20	; 0x18000
   11100:	ldr	pc, [ip, #3884]!	; 0xf2c

00011104 <gai_strerror@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #24, 20	; 0x18000
   1110c:	ldr	pc, [ip, #3876]!	; 0xf24

00011110 <fgets@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #24, 20	; 0x18000
   11118:	ldr	pc, [ip, #3868]!	; 0xf1c

0001111c <ferror@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #24, 20	; 0x18000
   11124:	ldr	pc, [ip, #3860]!	; 0xf14

00011128 <strndup@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #24, 20	; 0x18000
   11130:	ldr	pc, [ip, #3852]!	; 0xf0c

00011134 <memcpy@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #24, 20	; 0x18000
   1113c:	ldr	pc, [ip, #3844]!	; 0xf04

00011140 <signal@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #24, 20	; 0x18000
   11148:	ldr	pc, [ip, #3836]!	; 0xefc

0001114c <fwrite_unlocked@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #24, 20	; 0x18000
   11154:	ldr	pc, [ip, #3828]!	; 0xef4

00011158 <sleep@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #24, 20	; 0x18000
   11160:	ldr	pc, [ip, #3820]!	; 0xeec

00011164 <realloc@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #24, 20	; 0x18000
   1116c:	ldr	pc, [ip, #3812]!	; 0xee4

00011170 <strcasecmp@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #24, 20	; 0x18000
   11178:	ldr	pc, [ip, #3804]!	; 0xedc

0001117c <funlockfile@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #24, 20	; 0x18000
   11184:	ldr	pc, [ip, #3796]!	; 0xed4

00011188 <strcat@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #24, 20	; 0x18000
   11190:	ldr	pc, [ip, #3788]!	; 0xecc

00011194 <strcpy@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #24, 20	; 0x18000
   1119c:	ldr	pc, [ip, #3780]!	; 0xec4

000111a0 <error@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #24, 20	; 0x18000
   111a8:	ldr	pc, [ip, #3772]!	; 0xebc

000111ac <getenv@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #24, 20	; 0x18000
   111b4:	ldr	pc, [ip, #3764]!	; 0xeb4

000111b8 <puts@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #24, 20	; 0x18000
   111c0:	ldr	pc, [ip, #3756]!	; 0xeac

000111c4 <malloc@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #24, 20	; 0x18000
   111cc:	ldr	pc, [ip, #3748]!	; 0xea4

000111d0 <__libc_start_main@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #24, 20	; 0x18000
   111d8:	ldr	pc, [ip, #3740]!	; 0xe9c

000111dc <strerror@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #24, 20	; 0x18000
   111e4:	ldr	pc, [ip, #3732]!	; 0xe94

000111e8 <__ctype_tolower_loc@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #24, 20	; 0x18000
   111f0:	ldr	pc, [ip, #3724]!	; 0xe8c

000111f4 <__gmon_start__@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #24, 20	; 0x18000
   111fc:	ldr	pc, [ip, #3716]!	; 0xe84

00011200 <mempcpy@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #24, 20	; 0x18000
   11208:	ldr	pc, [ip, #3708]!	; 0xe7c

0001120c <__ctype_b_loc@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #24, 20	; 0x18000
   11214:	ldr	pc, [ip, #3700]!	; 0xe74

00011218 <exit@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #24, 20	; 0x18000
   11220:	ldr	pc, [ip, #3692]!	; 0xe6c

00011224 <strlen@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #24, 20	; 0x18000
   1122c:	ldr	pc, [ip, #3684]!	; 0xe64

00011230 <strchr@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #24, 20	; 0x18000
   11238:	ldr	pc, [ip, #3676]!	; 0xe5c

0001123c <fprintf@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #24, 20	; 0x18000
   11244:	ldr	pc, [ip, #3668]!	; 0xe54

00011248 <__errno_location@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #24, 20	; 0x18000
   11250:	ldr	pc, [ip, #3660]!	; 0xe4c

00011254 <strncasecmp@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #24, 20	; 0x18000
   1125c:	ldr	pc, [ip, #3652]!	; 0xe44

00011260 <strerror_r@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #24, 20	; 0x18000
   11268:	ldr	pc, [ip, #3644]!	; 0xe3c

0001126c <memset@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #24, 20	; 0x18000
   11274:	ldr	pc, [ip, #3636]!	; 0xe34

00011278 <write@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #24, 20	; 0x18000
   11280:	ldr	pc, [ip, #3628]!	; 0xe2c

00011284 <memchr@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #24, 20	; 0x18000
   1128c:	ldr	pc, [ip, #3620]!	; 0xe24

00011290 <strrchr@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #24, 20	; 0x18000
   11298:	ldr	pc, [ip, #3612]!	; 0xe1c

0001129c <vfprintf@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #24, 20	; 0x18000
   112a4:	ldr	pc, [ip, #3604]!	; 0xe14

000112a8 <fputc@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #24, 20	; 0x18000
   112b0:	ldr	pc, [ip, #3596]!	; 0xe0c

000112b4 <sscanf@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #24, 20	; 0x18000
   112bc:	ldr	pc, [ip, #3588]!	; 0xe04

000112c0 <sprintf@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #24, 20	; 0x18000
   112c8:	ldr	pc, [ip, #3580]!	; 0xdfc

000112cc <flockfile@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #24, 20	; 0x18000
   112d4:	ldr	pc, [ip, #3572]!	; 0xdf4

000112d8 <vsnprintf@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #24, 20	; 0x18000
   112e0:	ldr	pc, [ip, #3564]!	; 0xdec

000112e4 <atoi@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #24, 20	; 0x18000
   112ec:	ldr	pc, [ip, #3556]!	; 0xde4

000112f0 <qsort@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #24, 20	; 0x18000
   112f8:	ldr	pc, [ip, #3548]!	; 0xddc

000112fc <strpbrk@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #24, 20	; 0x18000
   11304:	ldr	pc, [ip, #3540]!	; 0xdd4

00011308 <freeaddrinfo@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #24, 20	; 0x18000
   11310:	ldr	pc, [ip, #3532]!	; 0xdcc

00011314 <getaddrinfo@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #24, 20	; 0x18000
   1131c:	ldr	pc, [ip, #3524]!	; 0xdc4

00011320 <socket@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #24, 20	; 0x18000
   11328:	ldr	pc, [ip, #3516]!	; 0xdbc

0001132c <gethostbyname@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #24, 20	; 0x18000
   11334:	ldr	pc, [ip, #3508]!	; 0xdb4

00011338 <fputs@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #24, 20	; 0x18000
   11340:	ldr	pc, [ip, #3500]!	; 0xdac

00011344 <strncmp@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #24, 20	; 0x18000
   1134c:	ldr	pc, [ip, #3492]!	; 0xda4

00011350 <abort@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #24, 20	; 0x18000
   11358:	ldr	pc, [ip, #3484]!	; 0xd9c

0001135c <close@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #24, 20	; 0x18000
   11364:	ldr	pc, [ip, #3476]!	; 0xd94

00011368 <connect@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #24, 20	; 0x18000
   11370:	ldr	pc, [ip, #3468]!	; 0xd8c

00011374 <__assert_fail@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #24, 20	; 0x18000
   1137c:	ldr	pc, [ip, #3460]!	; 0xd84

00011380 <putc_unlocked@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #24, 20	; 0x18000
   11388:	ldr	pc, [ip, #3452]!	; 0xd7c

Disassembly of section .text:

0001138c <argp_parse@@Base-0x1828>:
   1138c:	push	{r4, lr}
   11390:	bl	11248 <__errno_location@plt>
   11394:	mov	r3, #12
   11398:	str	r3, [r0]
   1139c:	mov	r0, #0
   113a0:	pop	{r4, pc}
   113a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   113a8:	mov	r8, r0
   113ac:	sub	sp, sp, #28
   113b0:	mov	r7, r1
   113b4:	ldr	r0, [r1]
   113b8:	bl	13a98 <_obstack_memory_used@@Base+0x24>
   113bc:	ldr	r4, [pc, #964]	; 11788 <putc_unlocked@plt+0x408>
   113c0:	mov	r2, #0
   113c4:	mov	r1, r2
   113c8:	ldr	r3, [pc, #956]	; 1178c <putc_unlocked@plt+0x40c>
   113cc:	mov	r0, r4
   113d0:	str	r3, [sp]
   113d4:	ldr	r3, [pc, #948]	; 11790 <putc_unlocked@plt+0x410>
   113d8:	bl	13894 <_obstack_begin@@Base>
   113dc:	ldr	r3, [pc, #944]	; 11794 <putc_unlocked@plt+0x414>
   113e0:	ldr	r2, [pc, #944]	; 11798 <putc_unlocked@plt+0x418>
   113e4:	ldr	r1, [pc, #944]	; 1179c <putc_unlocked@plt+0x41c>
   113e8:	ldr	r0, [pc, #944]	; 117a0 <putc_unlocked@plt+0x420>
   113ec:	str	r2, [r3]
   113f0:	bl	135f4 <argp_usage@@Base+0xc8>
   113f4:	mov	r3, #0
   113f8:	mov	r2, r7
   113fc:	ldr	r0, [pc, #928]	; 117a4 <putc_unlocked@plt+0x424>
   11400:	mov	r1, r8
   11404:	str	r3, [sp, #4]
   11408:	add	r3, sp, #20
   1140c:	str	r3, [sp]
   11410:	mov	r3, #8
   11414:	bl	12bb4 <argp_parse@@Base>
   11418:	ldr	r3, [r4, #12]
   1141c:	ldr	r2, [r4, #16]
   11420:	cmp	r2, r3
   11424:	bne	11434 <putc_unlocked@plt+0xb4>
   11428:	mov	r1, #1
   1142c:	mov	r0, r4
   11430:	bl	138d4 <_obstack_newchunk@@Base>
   11434:	ldr	r3, [r4, #12]
   11438:	ldr	r5, [pc, #872]	; 117a8 <putc_unlocked@plt+0x428>
   1143c:	add	r2, r3, #1
   11440:	str	r2, [r4, #12]
   11444:	mov	r2, #0
   11448:	strb	r2, [r3]
   1144c:	ldr	r6, [r4, #8]
   11450:	ldr	r3, [r4, #12]
   11454:	ldr	r1, [r4, #16]
   11458:	ldr	r9, [sp, #20]
   1145c:	cmp	r3, r6
   11460:	ldrbeq	r2, [r4, #40]	; 0x28
   11464:	orreq	r2, r2, #2
   11468:	strbeq	r2, [r4, #40]	; 0x28
   1146c:	ldr	r2, [r4, #24]
   11470:	add	r3, r3, r2
   11474:	bic	r3, r3, r2
   11478:	ldr	r2, [r4, #4]
   1147c:	sub	r0, r3, r2
   11480:	sub	r2, r1, r2
   11484:	cmp	r0, r2
   11488:	movhi	r3, r1
   1148c:	subs	r8, r8, r9
   11490:	str	r3, [r4, #8]
   11494:	str	r3, [r4, #12]
   11498:	bne	11580 <putc_unlocked@plt+0x200>
   1149c:	ldr	r3, [r5]
   114a0:	cmp	r3, #0
   114a4:	beq	11570 <putc_unlocked@plt+0x1f0>
   114a8:	ldr	r3, [r4, #12]
   114ac:	ldr	r2, [r4, #16]
   114b0:	cmp	r2, r3
   114b4:	bne	114c4 <putc_unlocked@plt+0x144>
   114b8:	mov	r1, #1
   114bc:	ldr	r0, [pc, #708]	; 11788 <putc_unlocked@plt+0x408>
   114c0:	bl	138d4 <_obstack_newchunk@@Base>
   114c4:	ldr	r3, [r4, #12]
   114c8:	add	r2, r3, #1
   114cc:	str	r2, [r4, #12]
   114d0:	mov	r2, #0
   114d4:	strb	r2, [r3]
   114d8:	ldr	r7, [r4, #8]
   114dc:	ldr	r3, [r4, #12]
   114e0:	ldr	r1, [r4, #16]
   114e4:	cmp	r3, r7
   114e8:	ldrbeq	r2, [r4, #40]	; 0x28
   114ec:	orreq	r2, r2, #2
   114f0:	strbeq	r2, [r4, #40]	; 0x28
   114f4:	ldr	r2, [r4, #24]
   114f8:	add	r3, r3, r2
   114fc:	bic	r3, r3, r2
   11500:	ldr	r2, [r4, #4]
   11504:	sub	r0, r3, r2
   11508:	sub	r2, r1, r2
   1150c:	cmp	r0, r2
   11510:	movhi	r3, r1
   11514:	str	r3, [r4, #8]
   11518:	str	r3, [r4, #12]
   1151c:	ldr	r3, [r5, #4]
   11520:	ldr	r4, [pc, #644]	; 117ac <putc_unlocked@plt+0x42c>
   11524:	cmp	r3, #0
   11528:	bne	11698 <putc_unlocked@plt+0x318>
   1152c:	ldr	r1, [pc, #636]	; 117b0 <putc_unlocked@plt+0x430>
   11530:	mov	r0, r7
   11534:	bl	11e54 <putc_unlocked@plt+0xad4>
   11538:	cmp	r0, #0
   1153c:	bne	11638 <putc_unlocked@plt+0x2b8>
   11540:	mov	r0, r7
   11544:	bl	11ef4 <putc_unlocked@plt+0xb74>
   11548:	str	r0, [r5, #4]
   1154c:	mov	r1, r0
   11550:	ldrb	r3, [r0]
   11554:	cmp	r3, #3
   11558:	ldrls	pc, [pc, r3, lsl #2]
   1155c:	b	11774 <putc_unlocked@plt+0x3f4>
   11560:	andeq	r1, r1, r0, lsr #14
   11564:	andeq	r1, r1, r4, asr r7
   11568:	andeq	r1, r1, ip, asr r7
   1156c:	andeq	r1, r1, ip, ror #14
   11570:	ldr	r2, [pc, #572]	; 117b4 <putc_unlocked@plt+0x434>
   11574:	mov	r1, r8
   11578:	mov	r0, #1
   1157c:	bl	111a0 <error@plt>
   11580:	ldr	r3, [r5]
   11584:	cmp	r3, #0
   11588:	addeq	r7, r7, r9, lsl #2
   1158c:	ldreq	sl, [pc, #500]	; 11788 <putc_unlocked@plt+0x408>
   11590:	bne	114a8 <putc_unlocked@plt+0x128>
   11594:	cmp	r8, #0
   11598:	sub	r9, r8, #1
   1159c:	ldr	r1, [r4, #12]
   115a0:	ldr	r2, [r4, #16]
   115a4:	beq	114a8 <putc_unlocked@plt+0x128>
   115a8:	str	r2, [sp, #8]
   115ac:	ldr	r8, [r7], #4
   115b0:	str	r1, [sp, #12]
   115b4:	mov	r0, r8
   115b8:	bl	11224 <strlen@plt>
   115bc:	ldr	r2, [sp, #8]
   115c0:	mov	fp, r0
   115c4:	ldr	r1, [sp, #12]
   115c8:	sub	r2, r2, r1
   115cc:	cmp	r0, r2
   115d0:	bls	115e0 <putc_unlocked@plt+0x260>
   115d4:	mov	r1, r0
   115d8:	mov	r0, sl
   115dc:	bl	138d4 <_obstack_newchunk@@Base>
   115e0:	mov	r2, fp
   115e4:	mov	r1, r8
   115e8:	ldr	r0, [r4, #12]
   115ec:	bl	11134 <memcpy@plt>
   115f0:	ldr	r0, [r4, #12]
   115f4:	cmp	r9, #0
   115f8:	add	r0, r0, fp
   115fc:	str	r0, [r4, #12]
   11600:	beq	11630 <putc_unlocked@plt+0x2b0>
   11604:	ldr	r3, [r4, #16]
   11608:	cmp	r0, r3
   1160c:	bne	1161c <putc_unlocked@plt+0x29c>
   11610:	mov	r1, #1
   11614:	mov	r0, sl
   11618:	bl	138d4 <_obstack_newchunk@@Base>
   1161c:	ldr	r3, [r4, #12]
   11620:	add	r2, r3, #1
   11624:	str	r2, [r4, #12]
   11628:	mov	r2, #32
   1162c:	strb	r2, [r3]
   11630:	mov	r8, r9
   11634:	b	11594 <putc_unlocked@plt+0x214>
   11638:	ldr	r3, [r5, #12]
   1163c:	cmp	r3, #0
   11640:	beq	1164c <putc_unlocked@plt+0x2cc>
   11644:	ldr	r0, [pc, #364]	; 117b8 <putc_unlocked@plt+0x438>
   11648:	bl	111b8 <puts@plt>
   1164c:	mov	r1, #0
   11650:	ldr	r0, [pc, #356]	; 117bc <putc_unlocked@plt+0x43c>
   11654:	bl	123a4 <putc_unlocked@plt+0x1024>
   11658:	mov	r1, r7
   1165c:	str	r0, [r4]
   11660:	bl	12204 <putc_unlocked@plt+0xe84>
   11664:	str	r0, [r5, #4]
   11668:	ldr	r0, [r4]
   1166c:	bl	1135c <close@plt>
   11670:	ldr	r1, [r5, #4]
   11674:	cmp	r1, #0
   11678:	bne	11684 <putc_unlocked@plt+0x304>
   1167c:	mov	r0, #0
   11680:	bl	11218 <exit@plt>
   11684:	ldr	r0, [pc, #308]	; 117c0 <putc_unlocked@plt+0x440>
   11688:	bl	110d4 <printf@plt>
   1168c:	ldr	r3, [r5, #4]
   11690:	cmp	r3, #0
   11694:	beq	11540 <putc_unlocked@plt+0x1c0>
   11698:	ldr	r0, [pc, #292]	; 117c4 <putc_unlocked@plt+0x444>
   1169c:	bl	111ac <getenv@plt>
   116a0:	cmp	r0, #0
   116a4:	mov	r1, r6
   116a8:	ldr	r0, [r5, #4]
   116ac:	movne	r2, #0
   116b0:	ldrne	r3, [pc, #272]	; 117c8 <putc_unlocked@plt+0x448>
   116b4:	strne	r2, [r3]
   116b8:	mov	r2, r7
   116bc:	bl	11bbc <putc_unlocked@plt+0x83c>
   116c0:	ldr	r3, [r5, #12]
   116c4:	mov	r6, r0
   116c8:	cmp	r3, #0
   116cc:	beq	116dc <putc_unlocked@plt+0x35c>
   116d0:	mov	r1, r0
   116d4:	ldr	r0, [pc, #240]	; 117cc <putc_unlocked@plt+0x44c>
   116d8:	bl	110d4 <printf@plt>
   116dc:	ldr	r1, [pc, #236]	; 117d0 <putc_unlocked@plt+0x450>
   116e0:	mov	r0, r6
   116e4:	bl	11188 <strcat@plt>
   116e8:	ldr	r1, [pc, #228]	; 117d4 <putc_unlocked@plt+0x454>
   116ec:	mov	r0, #15
   116f0:	bl	11140 <signal@plt>
   116f4:	ldr	r1, [pc, #216]	; 117d4 <putc_unlocked@plt+0x454>
   116f8:	mov	r0, #2
   116fc:	bl	11140 <signal@plt>
   11700:	ldrd	r0, [r5, #4]
   11704:	bl	123a4 <putc_unlocked@plt+0x1024>
   11708:	mov	r1, r6
   1170c:	str	r0, [r4]
   11710:	bl	124b0 <putc_unlocked@plt+0x1130>
   11714:	ldr	r0, [r4]
   11718:	bl	1135c <close@plt>
   1171c:	b	1167c <putc_unlocked@plt+0x2fc>
   11720:	ldr	r0, [pc, #176]	; 117d8 <putc_unlocked@plt+0x458>
   11724:	bl	111ac <getenv@plt>
   11728:	cmp	r0, #0
   1172c:	ldreq	r3, [pc, #136]	; 117bc <putc_unlocked@plt+0x43c>
   11730:	strne	r0, [r5, #4]
   11734:	streq	r3, [r5, #4]
   11738:	ldr	r3, [r5, #12]
   1173c:	cmp	r3, #0
   11740:	ldrne	r0, [pc, #148]	; 117dc <putc_unlocked@plt+0x45c>
   11744:	ldrne	r1, [r5, #4]
   11748:	beq	11698 <putc_unlocked@plt+0x318>
   1174c:	bl	110d4 <printf@plt>
   11750:	b	11698 <putc_unlocked@plt+0x318>
   11754:	ldr	r0, [pc, #132]	; 117e0 <putc_unlocked@plt+0x460>
   11758:	bl	111b8 <puts@plt>
   1175c:	ldr	r0, [r5, #4]
   11760:	add	r0, r0, #1
   11764:	bl	111b8 <puts@plt>
   11768:	b	1167c <putc_unlocked@plt+0x2fc>
   1176c:	ldr	r0, [pc, #112]	; 117e4 <putc_unlocked@plt+0x464>
   11770:	b	11764 <putc_unlocked@plt+0x3e4>
   11774:	ldr	r3, [r5, #12]
   11778:	cmp	r3, #0
   1177c:	beq	11698 <putc_unlocked@plt+0x318>
   11780:	ldr	r0, [pc, #96]	; 117e8 <putc_unlocked@plt+0x468>
   11784:	b	1174c <putc_unlocked@plt+0x3cc>
   11788:	andeq	sp, r2, r4, lsl #18
   1178c:	muleq	r1, ip, r6
   11790:	andeq	r4, r1, ip, asr r2
   11794:	andeq	sp, r2, r4, lsr r9
   11798:	andeq	r7, r1, r0, ror r9
   1179c:	andeq	sl, r2, ip, ror #23
   117a0:	andeq	r8, r1, r8, asr #23
   117a4:	strdeq	sl, [r2], -r4
   117a8:			; <UNDEFINED> instruction: 0x0002d8bc
   117ac:	andeq	sp, r2, r0, lsr r9
   117b0:	andeq	sl, r2, r0, lsl ip
   117b4:	andeq	r7, r1, r8, lsl #19
   117b8:	muleq	r1, sp, r9
   117bc:			; <UNDEFINED> instruction: 0x000179bf
   117c0:	ldrdeq	r7, [r1], -r2
   117c4:	muleq	r1, r2, sl
   117c8:	andeq	sl, r2, r4, lsl r1
   117cc:	muleq	r1, sp, sl
   117d0:	andeq	r7, r1, r3, lsl #17
   117d4:	ldrdeq	r2, [r1], -r0
   117d8:	strdeq	r7, [r1], -r4
   117dc:	andeq	r7, r1, r1, lsl #20
   117e0:	andeq	r7, r1, fp, lsl sl
   117e4:	andeq	r7, r1, r2, ror #20
   117e8:	andeq	r7, r1, r0, lsl #21
   117ec:	mov	fp, #0
   117f0:	mov	lr, #0
   117f4:	pop	{r1}		; (ldr r1, [sp], #4)
   117f8:	mov	r2, sp
   117fc:	push	{r2}		; (str r2, [sp, #-4]!)
   11800:	push	{r0}		; (str r0, [sp, #-4]!)
   11804:	ldr	ip, [pc, #16]	; 1181c <putc_unlocked@plt+0x49c>
   11808:	push	{ip}		; (str ip, [sp, #-4]!)
   1180c:	ldr	r0, [pc, #12]	; 11820 <putc_unlocked@plt+0x4a0>
   11810:	ldr	r3, [pc, #12]	; 11824 <putc_unlocked@plt+0x4a4>
   11814:	bl	111d0 <__libc_start_main@plt>
   11818:	bl	11350 <abort@plt>
   1181c:	andeq	r7, r1, r0, lsr r6
   11820:	andeq	r1, r1, r4, lsr #7
   11824:	ldrdeq	r7, [r1], -r0
   11828:	ldr	r3, [pc, #20]	; 11844 <putc_unlocked@plt+0x4c4>
   1182c:	ldr	r2, [pc, #20]	; 11848 <putc_unlocked@plt+0x4c8>
   11830:	add	r3, pc, r3
   11834:	ldr	r2, [r3, r2]
   11838:	cmp	r2, #0
   1183c:	bxeq	lr
   11840:	b	111f4 <__gmon_start__@plt>
   11844:	andeq	r8, r1, r8, asr #15
   11848:	andeq	r0, r0, r8, lsl #2
   1184c:	ldr	r0, [pc, #24]	; 1186c <putc_unlocked@plt+0x4ec>
   11850:	ldr	r3, [pc, #24]	; 11870 <putc_unlocked@plt+0x4f0>
   11854:	cmp	r3, r0
   11858:	bxeq	lr
   1185c:	ldr	r3, [pc, #16]	; 11874 <putc_unlocked@plt+0x4f4>
   11860:	cmp	r3, #0
   11864:	bxeq	lr
   11868:	bx	r3
   1186c:	andeq	sp, r2, r8, lsr #17
   11870:	andeq	sp, r2, r8, lsr #17
   11874:	andeq	r0, r0, r0
   11878:	ldr	r0, [pc, #36]	; 118a4 <putc_unlocked@plt+0x524>
   1187c:	ldr	r1, [pc, #36]	; 118a8 <putc_unlocked@plt+0x528>
   11880:	sub	r1, r1, r0
   11884:	asr	r1, r1, #2
   11888:	add	r1, r1, r1, lsr #31
   1188c:	asrs	r1, r1, #1
   11890:	bxeq	lr
   11894:	ldr	r3, [pc, #16]	; 118ac <putc_unlocked@plt+0x52c>
   11898:	cmp	r3, #0
   1189c:	bxeq	lr
   118a0:	bx	r3
   118a4:	andeq	sp, r2, r8, lsr #17
   118a8:	andeq	sp, r2, r8, lsr #17
   118ac:	andeq	r0, r0, r0
   118b0:	push	{r4, lr}
   118b4:	ldr	r4, [pc, #24]	; 118d4 <putc_unlocked@plt+0x554>
   118b8:	ldrb	r3, [r4]
   118bc:	cmp	r3, #0
   118c0:	popne	{r4, pc}
   118c4:	bl	1184c <putc_unlocked@plt+0x4cc>
   118c8:	mov	r3, #1
   118cc:	strb	r3, [r4]
   118d0:	pop	{r4, pc}
   118d4:			; <UNDEFINED> instruction: 0x0002d8b8
   118d8:	b	11878 <putc_unlocked@plt+0x4f8>
   118dc:	sub	r3, r0, #1
   118e0:	cmp	r3, #126	; 0x7e
   118e4:	bhi	119f0 <putc_unlocked@plt+0x670>
   118e8:	bic	r3, r0, #2
   118ec:	push	{r4, r5, r6, lr}
   118f0:	mov	r6, r1
   118f4:	cmp	r0, #113	; 0x71
   118f8:	cmpne	r3, #116	; 0x74
   118fc:	mov	r5, r0
   11900:	moveq	r2, #1
   11904:	ldreq	r3, [pc, #236]	; 119f8 <putc_unlocked@plt+0x678>
   11908:	ldr	r4, [pc, #236]	; 119fc <putc_unlocked@plt+0x67c>
   1190c:	streq	r2, [r3]
   11910:	ldr	r3, [r4, #12]
   11914:	ldr	r2, [r4, #16]
   11918:	cmp	r2, r3
   1191c:	bne	1192c <putc_unlocked@plt+0x5ac>
   11920:	mov	r1, #1
   11924:	mov	r0, r4
   11928:	bl	138d4 <_obstack_newchunk@@Base>
   1192c:	ldr	r3, [r4, #12]
   11930:	add	r2, r3, #1
   11934:	str	r2, [r4, #12]
   11938:	mov	r2, #45	; 0x2d
   1193c:	strb	r2, [r3]
   11940:	ldr	r3, [r4, #12]
   11944:	ldr	r2, [r4, #16]
   11948:	cmp	r2, r3
   1194c:	bne	1195c <putc_unlocked@plt+0x5dc>
   11950:	mov	r1, #1
   11954:	ldr	r0, [pc, #160]	; 119fc <putc_unlocked@plt+0x67c>
   11958:	bl	138d4 <_obstack_newchunk@@Base>
   1195c:	ldr	r3, [r4, #12]
   11960:	cmp	r6, #0
   11964:	add	r2, r3, #1
   11968:	str	r2, [r4, #12]
   1196c:	strb	r5, [r3]
   11970:	beq	119e8 <putc_unlocked@plt+0x668>
   11974:	ldr	r3, [r4, #12]
   11978:	ldr	r2, [r4, #16]
   1197c:	cmp	r2, r3
   11980:	bne	11990 <putc_unlocked@plt+0x610>
   11984:	mov	r1, #1
   11988:	ldr	r0, [pc, #108]	; 119fc <putc_unlocked@plt+0x67c>
   1198c:	bl	138d4 <_obstack_newchunk@@Base>
   11990:	ldr	r3, [r4, #12]
   11994:	mov	r0, r6
   11998:	add	r2, r3, #1
   1199c:	str	r2, [r4, #12]
   119a0:	mov	r2, #32
   119a4:	strb	r2, [r3]
   119a8:	bl	11224 <strlen@plt>
   119ac:	ldrd	r2, [r4, #12]
   119b0:	mov	r5, r0
   119b4:	sub	r3, r3, r2
   119b8:	cmp	r0, r3
   119bc:	bls	119cc <putc_unlocked@plt+0x64c>
   119c0:	mov	r1, r0
   119c4:	ldr	r0, [pc, #48]	; 119fc <putc_unlocked@plt+0x67c>
   119c8:	bl	138d4 <_obstack_newchunk@@Base>
   119cc:	mov	r2, r5
   119d0:	mov	r1, r6
   119d4:	ldr	r0, [r4, #12]
   119d8:	bl	11134 <memcpy@plt>
   119dc:	ldr	r3, [r4, #12]
   119e0:	add	r5, r3, r5
   119e4:	str	r5, [r4, #12]
   119e8:	mov	r0, #0
   119ec:	pop	{r4, r5, r6, pc}
   119f0:	mov	r0, #7
   119f4:	bx	lr
   119f8:			; <UNDEFINED> instruction: 0x0002d8bc
   119fc:	andeq	sp, r2, r4, lsl #18
   11a00:	cmp	r0, #86	; 0x56
   11a04:	beq	11ab0 <putc_unlocked@plt+0x730>
   11a08:	bgt	11a1c <putc_unlocked@plt+0x69c>
   11a0c:	cmp	r0, #72	; 0x48
   11a10:	beq	11aa0 <putc_unlocked@plt+0x720>
   11a14:	mov	r0, #7
   11a18:	bx	lr
   11a1c:	cmp	r0, #104	; 0x68
   11a20:	beq	11a3c <putc_unlocked@plt+0x6bc>
   11a24:	cmp	r0, #112	; 0x70
   11a28:	ldreq	r3, [pc, #144]	; 11ac0 <putc_unlocked@plt+0x740>
   11a2c:	streq	r1, [r3, #8]
   11a30:	bne	11a14 <putc_unlocked@plt+0x694>
   11a34:	mov	r0, #0
   11a38:	bx	lr
   11a3c:	push	{r4, r5, r6, r7, r8, lr}
   11a40:	mov	r0, r1
   11a44:	mov	r4, r1
   11a48:	bl	11224 <strlen@plt>
   11a4c:	add	r0, r0, #1
   11a50:	bl	13f24 <_obstack_memory_used@@Base+0x4b0>
   11a54:	ldr	r3, [pc, #100]	; 11ac0 <putc_unlocked@plt+0x740>
   11a58:	mov	r5, r0
   11a5c:	mov	r6, r3
   11a60:	str	r0, [r3, #4]
   11a64:	ldrb	r7, [r4], #1
   11a68:	cmp	r7, #0
   11a6c:	cmpne	r7, #58	; 0x3a
   11a70:	bne	11a8c <putc_unlocked@plt+0x70c>
   11a74:	cmp	r7, #58	; 0x3a
   11a78:	mov	r0, #0
   11a7c:	moveq	r3, r4
   11a80:	strb	r0, [r5]
   11a84:	streq	r3, [r6, #8]
   11a88:	pop	{r4, r5, r6, r7, r8, pc}
   11a8c:	bl	111e8 <__ctype_tolower_loc@plt>
   11a90:	ldr	r3, [r0]
   11a94:	ldr	r3, [r3, r7, lsl #2]
   11a98:	strb	r3, [r5], #1
   11a9c:	b	11a64 <putc_unlocked@plt+0x6e4>
   11aa0:	ldr	r3, [pc, #28]	; 11ac4 <putc_unlocked@plt+0x744>
   11aa4:	mov	r0, #0
   11aa8:	str	r0, [r3]
   11aac:	bx	lr
   11ab0:	ldr	r3, [pc, #8]	; 11ac0 <putc_unlocked@plt+0x740>
   11ab4:	mov	r2, #1
   11ab8:	str	r2, [r3, #12]
   11abc:	b	11a34 <putc_unlocked@plt+0x6b4>
   11ac0:			; <UNDEFINED> instruction: 0x0002d8bc
   11ac4:	andeq	sl, r2, r4, lsl r1
   11ac8:	ldr	r3, [pc, #80]	; 11b20 <putc_unlocked@plt+0x7a0>
   11acc:	push	{r4, r5, r6, lr}
   11ad0:	mov	r5, r0
   11ad4:	mov	r4, r1
   11ad8:	cmp	r0, r3
   11adc:	ble	11ae8 <putc_unlocked@plt+0x768>
   11ae0:	ldr	r0, [pc, #60]	; 11b24 <putc_unlocked@plt+0x7a4>
   11ae4:	bl	111b8 <puts@plt>
   11ae8:	mov	r1, r4
   11aec:	ldr	r0, [r1, #4]
   11af0:	cmp	r0, #0
   11af4:	bne	11b00 <putc_unlocked@plt+0x780>
   11af8:	ldr	r0, [pc, #40]	; 11b28 <putc_unlocked@plt+0x7a8>
   11afc:	pop	{r4, r5, r6, pc}
   11b00:	ldrh	r3, [r1]
   11b04:	cmp	r3, r5
   11b08:	bgt	11b18 <putc_unlocked@plt+0x798>
   11b0c:	ldrh	r3, [r1, #2]
   11b10:	cmp	r3, r5
   11b14:	popge	{r4, r5, r6, pc}
   11b18:	add	r1, r1, #8
   11b1c:	b	11aec <putc_unlocked@plt+0x76c>
   11b20:	andeq	r1, r6, pc, asr #7
   11b24:	andeq	r7, r1, pc, asr #12
   11b28:	andeq	r7, r1, r0, asr #12
   11b2c:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   11b30:	mov	r6, r1
   11b34:	mov	r5, r0
   11b38:	add	r1, sp, #4
   11b3c:	mov	r0, r6
   11b40:	sub	r5, r5, #4
   11b44:	bl	110bc <inet_aton@plt>
   11b48:	mov	r7, r0
   11b4c:	ldr	r4, [r5, #4]!
   11b50:	cmp	r4, #0
   11b54:	moveq	r0, r4
   11b58:	beq	11b74 <putc_unlocked@plt+0x7f4>
   11b5c:	mov	r1, r6
   11b60:	mov	r0, r4
   11b64:	bl	110c8 <strcmp@plt>
   11b68:	cmp	r0, #0
   11b6c:	bne	11b7c <putc_unlocked@plt+0x7fc>
   11b70:	mov	r0, #1
   11b74:	add	sp, sp, #12
   11b78:	pop	{r4, r5, r6, r7, pc}
   11b7c:	cmp	r7, #0
   11b80:	beq	11b4c <putc_unlocked@plt+0x7cc>
   11b84:	mov	r0, r4
   11b88:	bl	1132c <gethostbyname@plt>
   11b8c:	cmp	r0, #0
   11b90:	ldrne	r3, [r0, #16]
   11b94:	ldrne	r1, [sp, #4]
   11b98:	subne	r3, r3, #4
   11b9c:	beq	11b4c <putc_unlocked@plt+0x7cc>
   11ba0:	ldr	r2, [r3, #4]!
   11ba4:	cmp	r2, #0
   11ba8:	beq	11b4c <putc_unlocked@plt+0x7cc>
   11bac:	ldr	r2, [r2]
   11bb0:	cmp	r2, r1
   11bb4:	bne	11ba0 <putc_unlocked@plt+0x820>
   11bb8:	b	11b70 <putc_unlocked@plt+0x7f0>
   11bbc:	push	{r4, r5, r6, r7, r8, lr}
   11bc0:	mov	r6, r0
   11bc4:	mov	r0, r1
   11bc8:	mov	r5, r2
   11bcc:	mov	r8, r1
   11bd0:	bl	11224 <strlen@plt>
   11bd4:	mov	r4, r0
   11bd8:	mov	r0, r5
   11bdc:	bl	11224 <strlen@plt>
   11be0:	add	r0, r4, r0
   11be4:	add	r0, r0, #13
   11be8:	bl	13f24 <_obstack_memory_used@@Base+0x4b0>
   11bec:	mov	r3, #0
   11bf0:	mov	r4, r0
   11bf4:	mov	r1, r6
   11bf8:	strb	r3, [r0]
   11bfc:	ldr	r0, [pc, #376]	; 11d7c <putc_unlocked@plt+0x9fc>
   11c00:	bl	11b2c <putc_unlocked@plt+0x7ac>
   11c04:	cmp	r0, #0
   11c08:	beq	11d40 <putc_unlocked@plt+0x9c0>
   11c0c:	ldr	r1, [pc, #364]	; 11d80 <putc_unlocked@plt+0xa00>
   11c10:	mov	r0, r4
   11c14:	mov	r7, #1
   11c18:	bl	11188 <strcat@plt>
   11c1c:	ldrb	r3, [r8]
   11c20:	cmp	r3, #0
   11c24:	beq	11d64 <putc_unlocked@plt+0x9e4>
   11c28:	cmp	r7, #0
   11c2c:	bne	11d58 <putc_unlocked@plt+0x9d8>
   11c30:	ldr	r1, [pc, #332]	; 11d84 <putc_unlocked@plt+0xa04>
   11c34:	mov	r0, r6
   11c38:	bl	110c8 <strcmp@plt>
   11c3c:	cmp	r0, #0
   11c40:	beq	11d58 <putc_unlocked@plt+0x9d8>
   11c44:	ldr	r0, [pc, #316]	; 11d88 <putc_unlocked@plt+0xa08>
   11c48:	bl	111b8 <puts@plt>
   11c4c:	ldr	r1, [pc, #312]	; 11d8c <putc_unlocked@plt+0xa0c>
   11c50:	mov	r0, r6
   11c54:	bl	110c8 <strcmp@plt>
   11c58:	cmp	r0, #0
   11c5c:	beq	11c74 <putc_unlocked@plt+0x8f4>
   11c60:	ldr	r1, [pc, #296]	; 11d90 <putc_unlocked@plt+0xa10>
   11c64:	mov	r0, r6
   11c68:	bl	110c8 <strcmp@plt>
   11c6c:	cmp	r0, #0
   11c70:	bne	11ca4 <putc_unlocked@plt+0x924>
   11c74:	mov	r2, #2
   11c78:	ldr	r1, [pc, #276]	; 11d94 <putc_unlocked@plt+0xa14>
   11c7c:	mov	r0, r5
   11c80:	bl	11254 <strncasecmp@plt>
   11c84:	cmp	r0, #0
   11c88:	bne	11ca4 <putc_unlocked@plt+0x924>
   11c8c:	ldrb	r3, [r5, #2]
   11c90:	sub	r3, r3, #48	; 0x30
   11c94:	cmp	r3, #9
   11c98:	addls	r2, r5, #2
   11c9c:	ldrls	r1, [pc, #244]	; 11d98 <putc_unlocked@plt+0xa18>
   11ca0:	bls	11d30 <putc_unlocked@plt+0x9b0>
   11ca4:	mov	r0, r6
   11ca8:	ldr	r1, [pc, #212]	; 11d84 <putc_unlocked@plt+0xa04>
   11cac:	bl	110c8 <strcmp@plt>
   11cb0:	cmp	r0, #0
   11cb4:	moveq	r2, r5
   11cb8:	ldreq	r1, [pc, #220]	; 11d9c <putc_unlocked@plt+0xa1c>
   11cbc:	beq	11d30 <putc_unlocked@plt+0x9b0>
   11cc0:	mov	r0, r6
   11cc4:	ldr	r1, [pc, #212]	; 11da0 <putc_unlocked@plt+0xa20>
   11cc8:	bl	110c8 <strcmp@plt>
   11ccc:	cmp	r0, #0
   11cd0:	bne	11cf0 <putc_unlocked@plt+0x970>
   11cd4:	mov	r1, #32
   11cd8:	mov	r0, r5
   11cdc:	bl	11230 <strchr@plt>
   11ce0:	cmp	r0, #0
   11ce4:	moveq	r2, r5
   11ce8:	ldreq	r1, [pc, #180]	; 11da4 <putc_unlocked@plt+0xa24>
   11cec:	beq	11d30 <putc_unlocked@plt+0x9b0>
   11cf0:	mov	r0, r6
   11cf4:	ldr	r1, [pc, #172]	; 11da8 <putc_unlocked@plt+0xa28>
   11cf8:	bl	110c8 <strcmp@plt>
   11cfc:	cmp	r0, #0
   11d00:	bne	11d6c <putc_unlocked@plt+0x9ec>
   11d04:	ldr	r0, [pc, #160]	; 11dac <putc_unlocked@plt+0xa2c>
   11d08:	bl	111ac <getenv@plt>
   11d0c:	cmp	r0, #0
   11d10:	beq	11d28 <putc_unlocked@plt+0x9a8>
   11d14:	mov	r2, #2
   11d18:	ldr	r1, [pc, #144]	; 11db0 <putc_unlocked@plt+0xa30>
   11d1c:	bl	11344 <strncmp@plt>
   11d20:	cmp	r0, #0
   11d24:	beq	11d6c <putc_unlocked@plt+0x9ec>
   11d28:	ldr	r1, [pc, #132]	; 11db4 <putc_unlocked@plt+0xa34>
   11d2c:	mov	r2, r5
   11d30:	mov	r0, r4
   11d34:	bl	112c0 <sprintf@plt>
   11d38:	mov	r0, r4
   11d3c:	pop	{r4, r5, r6, r7, r8, pc}
   11d40:	mov	r1, r6
   11d44:	ldr	r0, [pc, #108]	; 11db8 <putc_unlocked@plt+0xa38>
   11d48:	bl	11b2c <putc_unlocked@plt+0x7ac>
   11d4c:	subs	r7, r0, #0
   11d50:	bne	11c0c <putc_unlocked@plt+0x88c>
   11d54:	b	11c1c <putc_unlocked@plt+0x89c>
   11d58:	mov	r1, r8
   11d5c:	mov	r0, r4
   11d60:	bl	11188 <strcat@plt>
   11d64:	cmp	r7, #0
   11d68:	beq	11c4c <putc_unlocked@plt+0x8cc>
   11d6c:	mov	r1, r5
   11d70:	mov	r0, r4
   11d74:	bl	11188 <strcat@plt>
   11d78:	b	11d38 <putc_unlocked@plt+0x9b8>
   11d7c:	andeq	sl, r2, r8, lsl r1
   11d80:	andeq	r7, r1, pc, ror r6
   11d84:	andeq	r7, r1, r8, lsl #13
   11d88:	muleq	r1, sl, r6
   11d8c:	andeq	r7, r1, r0, asr #12
   11d90:	ldrdeq	r7, [r1], -r0
   11d94:	ldrdeq	r7, [r1], -lr
   11d98:	andeq	r7, r1, r1, ror #13
   11d9c:	andeq	r7, r1, r6, ror #13
   11da0:	strdeq	r7, [r1], -r3
   11da4:	andeq	r7, r1, r7, lsl #14
   11da8:	andeq	r7, r1, r1, lsl r7
   11dac:	andeq	r7, r1, r1, lsr #14
   11db0:	andeq	r7, r1, r6, lsr #14
   11db4:	andeq	r7, r1, r9, lsr #14
   11db8:	andeq	sl, r2, r4, asr r1
   11dbc:	b	1135c <close@plt>
   11dc0:	push	{r4, r5, r6, r7, r8, lr}
   11dc4:	mov	r3, r0
   11dc8:	mov	r7, r0
   11dcc:	mov	r6, r1
   11dd0:	mov	r4, r3
   11dd4:	add	r3, r3, #1
   11dd8:	ldrb	r2, [r4]
   11ddc:	cmp	r2, #0
   11de0:	bne	11dd0 <putc_unlocked@plt+0xa50>
   11de4:	sub	r4, r4, #1
   11de8:	mov	r3, r6
   11dec:	mov	r5, r3
   11df0:	add	r3, r3, #1
   11df4:	ldrb	r2, [r5]
   11df8:	cmp	r2, #0
   11dfc:	bne	11dec <putc_unlocked@plt+0xa6c>
   11e00:	sub	r5, r5, #1
   11e04:	mov	r8, r4
   11e08:	cmp	r7, r4
   11e0c:	cmpls	r6, r5
   11e10:	movls	r0, #1
   11e14:	movhi	r0, #0
   11e18:	pophi	{r4, r5, r6, r7, r8, pc}
   11e1c:	bl	111e8 <__ctype_tolower_loc@plt>
   11e20:	ldrb	r1, [r8]
   11e24:	sub	r4, r4, #1
   11e28:	ldr	r3, [r0]
   11e2c:	ldrb	r2, [r5]
   11e30:	ldr	r3, [r3, r1, lsl #2]
   11e34:	cmp	r2, r3
   11e38:	beq	11e44 <putc_unlocked@plt+0xac4>
   11e3c:	mov	r0, #0
   11e40:	pop	{r4, r5, r6, r7, r8, pc}
   11e44:	cmp	r6, r5
   11e48:	bne	11e00 <putc_unlocked@plt+0xa80>
   11e4c:	mov	r0, #1
   11e50:	pop	{r4, r5, r6, r7, r8, pc}
   11e54:	push	{r4, r5, r6, lr}
   11e58:	mov	r5, r0
   11e5c:	sub	r4, r1, #4
   11e60:	ldr	r1, [r4, #4]!
   11e64:	cmp	r1, #0
   11e68:	bne	11e74 <putc_unlocked@plt+0xaf4>
   11e6c:	mov	r0, r1
   11e70:	pop	{r4, r5, r6, pc}
   11e74:	mov	r0, r5
   11e78:	bl	11dc0 <putc_unlocked@plt+0xa40>
   11e7c:	cmp	r0, #0
   11e80:	beq	11e60 <putc_unlocked@plt+0xae0>
   11e84:	mov	r0, #1
   11e88:	pop	{r4, r5, r6, pc}
   11e8c:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   11e90:	subs	r3, r0, #0
   11e94:	moveq	r0, r3
   11e98:	beq	11ee8 <putc_unlocked@plt+0xb68>
   11e9c:	add	r3, sp, #20
   11ea0:	add	r2, sp, #8
   11ea4:	ldr	r1, [pc, #68]	; 11ef0 <putc_unlocked@plt+0xb70>
   11ea8:	str	r3, [sp, #4]
   11eac:	add	r3, sp, #16
   11eb0:	str	r3, [sp]
   11eb4:	add	r3, sp, #12
   11eb8:	bl	112b4 <sscanf@plt>
   11ebc:	cmp	r0, #4
   11ec0:	movne	r0, #0
   11ec4:	bne	11ee8 <putc_unlocked@plt+0xb68>
   11ec8:	ldr	r3, [sp, #8]
   11ecc:	ldr	r0, [sp, #12]
   11ed0:	lsl	r0, r0, #16
   11ed4:	add	r0, r0, r3, lsl #24
   11ed8:	ldr	r3, [sp, #16]
   11edc:	add	r0, r0, r3, lsl #8
   11ee0:	ldr	r3, [sp, #20]
   11ee4:	add	r0, r0, r3
   11ee8:	add	sp, sp, #28
   11eec:	pop	{pc}		; (ldr pc, [sp], #4)
   11ef0:	andeq	r7, r1, lr, lsr #14
   11ef4:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   11ef8:	mov	r4, r0
   11efc:	ldrb	r3, [r4]
   11f00:	cmp	r3, #0
   11f04:	beq	12164 <putc_unlocked@plt+0xde4>
   11f08:	ldrb	r3, [r4, #1]
   11f0c:	cmp	r3, #32
   11f10:	beq	11fb4 <putc_unlocked@plt+0xc34>
   11f14:	mov	r1, #64	; 0x40
   11f18:	mov	r0, r4
   11f1c:	bl	11230 <strchr@plt>
   11f20:	subs	r5, r0, #0
   11f24:	bne	12030 <putc_unlocked@plt+0xcb0>
   11f28:	ldr	r1, [pc, #572]	; 1216c <putc_unlocked@plt+0xdec>
   11f2c:	mov	r0, r4
   11f30:	bl	112fc <strpbrk@plt>
   11f34:	cmp	r0, #0
   11f38:	moveq	r5, r4
   11f3c:	beq	11fc0 <putc_unlocked@plt+0xc40>
   11f40:	mov	r1, #58	; 0x3a
   11f44:	mov	r0, r4
   11f48:	bl	11230 <strchr@plt>
   11f4c:	cmp	r0, #0
   11f50:	beq	12050 <putc_unlocked@plt+0xcd0>
   11f54:	add	r3, sp, #4
   11f58:	mov	r2, sp
   11f5c:	ldr	r1, [pc, #524]	; 12170 <putc_unlocked@plt+0xdf0>
   11f60:	mov	r0, r4
   11f64:	str	r5, [sp]
   11f68:	str	r5, [sp, #4]
   11f6c:	bl	112b4 <sscanf@plt>
   11f70:	cmp	r0, #0
   11f74:	beq	12030 <putc_unlocked@plt+0xcb0>
   11f78:	ldrh	r2, [sp, #4]
   11f7c:	ldr	r3, [sp]
   11f80:	orr	r2, r2, r3, lsl #16
   11f84:	ldr	r3, [pc, #488]	; 12174 <putc_unlocked@plt+0xdf4>
   11f88:	mov	r1, r3
   11f8c:	ldr	r0, [r3, #8]
   11f90:	cmp	r0, #0
   11f94:	bne	12038 <putc_unlocked@plt+0xcb8>
   11f98:	ldr	r3, [pc, #472]	; 12178 <putc_unlocked@plt+0xdf8>
   11f9c:	ldr	r3, [r3, #12]
   11fa0:	cmp	r3, #0
   11fa4:	ldrne	r0, [pc, #464]	; 1217c <putc_unlocked@plt+0xdfc>
   11fa8:	bne	120b0 <putc_unlocked@plt+0xd30>
   11fac:	ldr	r0, [pc, #460]	; 12180 <putc_unlocked@plt+0xe00>
   11fb0:	b	1200c <putc_unlocked@plt+0xc8c>
   11fb4:	add	r4, r4, #2
   11fb8:	b	11efc <putc_unlocked@plt+0xb7c>
   11fbc:	mov	r5, r2
   11fc0:	ldrb	r3, [r5, #1]
   11fc4:	add	r2, r5, #1
   11fc8:	cmp	r3, #0
   11fcc:	bne	11fbc <putc_unlocked@plt+0xc3c>
   11fd0:	mov	r2, #2
   11fd4:	ldr	r1, [pc, #424]	; 12184 <putc_unlocked@plt+0xe04>
   11fd8:	mov	r0, r4
   11fdc:	bl	11254 <strncasecmp@plt>
   11fe0:	cmp	r0, #0
   11fe4:	bne	12014 <putc_unlocked@plt+0xc94>
   11fe8:	ldrb	r3, [r4, #2]
   11fec:	sub	r2, r3, #48	; 0x30
   11ff0:	cmp	r3, #32
   11ff4:	cmpne	r2, #9
   11ff8:	bhi	12014 <putc_unlocked@plt+0xc94>
   11ffc:	add	r0, r4, #2
   12000:	bl	112e4 <atoi@plt>
   12004:	ldr	r1, [pc, #380]	; 12188 <putc_unlocked@plt+0xe08>
   12008:	bl	11ac8 <putc_unlocked@plt+0x748>
   1200c:	add	sp, sp, #12
   12010:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12014:	mov	r2, #2
   12018:	ldr	r1, [pc, #364]	; 1218c <putc_unlocked@plt+0xe0c>
   1201c:	sub	r0, r5, #1
   12020:	bl	11254 <strncasecmp@plt>
   12024:	cmp	r0, #0
   12028:	ldreq	r0, [pc, #352]	; 12190 <putc_unlocked@plt+0xe10>
   1202c:	beq	1200c <putc_unlocked@plt+0xc8c>
   12030:	ldr	r0, [pc, #348]	; 12194 <putc_unlocked@plt+0xe14>
   12034:	b	1200c <putc_unlocked@plt+0xc8c>
   12038:	ldr	r1, [r1, #4]
   1203c:	ldr	ip, [r3], #12
   12040:	and	r1, r1, r2
   12044:	cmp	r1, ip
   12048:	bne	11f88 <putc_unlocked@plt+0xc08>
   1204c:	b	1200c <putc_unlocked@plt+0xc8c>
   12050:	mov	r0, r4
   12054:	bl	11e8c <putc_unlocked@plt+0xb0c>
   12058:	subs	r5, r0, #0
   1205c:	ldrne	r3, [pc, #308]	; 12198 <putc_unlocked@plt+0xe18>
   12060:	bne	1208c <putc_unlocked@plt+0xd0c>
   12064:	mov	r7, r5
   12068:	ldr	r6, [pc, #300]	; 1219c <putc_unlocked@plt+0xe1c>
   1206c:	add	r9, r6, #608	; 0x260
   12070:	mov	r8, r6
   12074:	b	120d4 <putc_unlocked@plt+0xd54>
   12078:	ldr	r2, [r2, #4]
   1207c:	ldr	r1, [r3], #12
   12080:	and	r2, r2, r5
   12084:	cmp	r2, r1
   12088:	beq	1200c <putc_unlocked@plt+0xc8c>
   1208c:	ldr	r0, [r3, #8]
   12090:	mov	r2, r3
   12094:	cmp	r0, #0
   12098:	bne	12078 <putc_unlocked@plt+0xcf8>
   1209c:	ldr	r3, [pc, #212]	; 12178 <putc_unlocked@plt+0xdf8>
   120a0:	ldr	r3, [r3, #12]
   120a4:	cmp	r3, #0
   120a8:	ldrne	r0, [pc, #240]	; 121a0 <putc_unlocked@plt+0xe20>
   120ac:	beq	11fac <putc_unlocked@plt+0xc2c>
   120b0:	bl	111b8 <puts@plt>
   120b4:	b	11fac <putc_unlocked@plt+0xc2c>
   120b8:	mov	r0, r4
   120bc:	bl	11dc0 <putc_unlocked@plt+0xa40>
   120c0:	cmp	r0, #0
   120c4:	addne	r6, r6, r7, lsl #2
   120c8:	ldrne	r0, [r6, #612]	; 0x264
   120cc:	bne	1200c <putc_unlocked@plt+0xc8c>
   120d0:	add	r7, r7, #2
   120d4:	ldr	r1, [r9, r7, lsl #2]
   120d8:	cmp	r1, #0
   120dc:	bne	120b8 <putc_unlocked@plt+0xd38>
   120e0:	mov	r1, #46	; 0x2e
   120e4:	mov	r0, r4
   120e8:	bl	11230 <strchr@plt>
   120ec:	cmp	r0, #0
   120f0:	ldreq	r7, [pc, #172]	; 121a4 <putc_unlocked@plt+0xe24>
   120f4:	beq	12140 <putc_unlocked@plt+0xdc0>
   120f8:	ldr	r3, [pc, #120]	; 12178 <putc_unlocked@plt+0xdf8>
   120fc:	ldr	r3, [r3, #12]
   12100:	cmp	r3, #0
   12104:	beq	12030 <putc_unlocked@plt+0xcb0>
   12108:	ldr	r0, [pc, #152]	; 121a8 <putc_unlocked@plt+0xe28>
   1210c:	bl	111b8 <puts@plt>
   12110:	b	12030 <putc_unlocked@plt+0xcb0>
   12114:	mov	r0, r6
   12118:	bl	11224 <strlen@plt>
   1211c:	mov	r2, r0
   12120:	mov	r1, r6
   12124:	mov	r0, r4
   12128:	bl	11254 <strncasecmp@plt>
   1212c:	cmp	r0, #0
   12130:	addeq	r5, r8, r5, lsl #2
   12134:	ldreq	r0, [r5, #2604]	; 0xa2c
   12138:	beq	1200c <putc_unlocked@plt+0xc8c>
   1213c:	add	r5, r5, #2
   12140:	ldr	r6, [r7, r5, lsl #2]
   12144:	cmp	r6, #0
   12148:	bne	12114 <putc_unlocked@plt+0xd94>
   1214c:	ldr	r3, [pc, #36]	; 12178 <putc_unlocked@plt+0xdf8>
   12150:	ldr	r3, [r3, #12]
   12154:	cmp	r3, #0
   12158:	beq	11fac <putc_unlocked@plt+0xc2c>
   1215c:	ldr	r0, [pc, #72]	; 121ac <putc_unlocked@plt+0xe2c>
   12160:	b	120b0 <putc_unlocked@plt+0xd30>
   12164:	ldr	r0, [pc, #68]	; 121b0 <putc_unlocked@plt+0xe30>
   12168:	b	1200c <putc_unlocked@plt+0xc8c>
   1216c:	andeq	r7, r1, r9, asr #14
   12170:	andeq	r7, r1, sp, asr #14
   12174:	andeq	sl, r2, r4, asr r2
   12178:			; <UNDEFINED> instruction: 0x0002d8bc
   1217c:	andeq	r7, r1, r4, asr r7
   12180:	andeq	r7, r1, r0, asr #12
   12184:	andeq	r8, r1, fp, asr #32
   12188:	andeq	sl, r2, r4, ror r1
   1218c:	andeq	r7, r1, lr, lsl r7
   12190:	andeq	r7, r1, r1, lsl r7
   12194:	andeq	r7, r1, fp, lsr pc
   12198:	andeq	sl, r2, ip, lsl #29
   1219c:	andeq	sl, r2, r4, lsl r1
   121a0:	andeq	r7, r1, lr, lsr #15
   121a4:	andeq	sl, r2, ip, lsr fp
   121a8:	andeq	r7, r1, r7, asr #16
   121ac:	andeq	r7, r1, r4, lsl #16
   121b0:	andeq	r7, r1, sl, lsr r7
   121b4:	ldr	r4, [pc, #64]	; 121fc <putc_unlocked@plt+0xe7c>
   121b8:	push	{r0, r1, r2, r3}
   121bc:	push	{r0, r1, r2, lr}
   121c0:	add	r2, sp, #20
   121c4:	ldr	r0, [r4]
   121c8:	str	r2, [sp, #4]
   121cc:	ldr	r1, [sp, #16]
   121d0:	bl	1129c <vfprintf@plt>
   121d4:	bl	11248 <__errno_location@plt>
   121d8:	ldr	r4, [r4]
   121dc:	ldr	r0, [r0]
   121e0:	bl	111dc <strerror@plt>
   121e4:	mov	r2, r0
   121e8:	ldr	r1, [pc, #16]	; 12200 <putc_unlocked@plt+0xe80>
   121ec:	mov	r0, r4
   121f0:	bl	1123c <fprintf@plt>
   121f4:	mov	r0, #1
   121f8:	bl	11218 <exit@plt>
   121fc:			; <UNDEFINED> instruction: 0x0002d8b0
   12200:	andeq	r9, r1, r6, ror #9
   12204:	push	{r4, r5, r6, r7, r8, r9, lr}
   12208:	mov	r4, r0
   1220c:	sub	sp, sp, #108	; 0x6c
   12210:	mov	r0, r1
   12214:	mov	r6, r1
   12218:	bl	11224 <strlen@plt>
   1221c:	add	r0, r0, #4
   12220:	bl	13f24 <_obstack_memory_used@@Base+0x4b0>
   12224:	mov	r3, #61	; 0x3d
   12228:	mov	r5, r0
   1222c:	mov	r1, r6
   12230:	strb	r3, [r0], #1
   12234:	bl	11194 <strcpy@plt>
   12238:	ldr	r1, [pc, #276]	; 12354 <putc_unlocked@plt+0xfd4>
   1223c:	mov	r0, r5
   12240:	bl	11188 <strcat@plt>
   12244:	ldr	r1, [pc, #268]	; 12358 <putc_unlocked@plt+0xfd8>
   12248:	mov	r0, r4
   1224c:	bl	11098 <fdopen@plt>
   12250:	mov	r6, r0
   12254:	mov	r0, r5
   12258:	bl	11224 <strlen@plt>
   1225c:	mov	r2, r0
   12260:	mov	r1, r5
   12264:	mov	r0, r4
   12268:	bl	11278 <write@plt>
   1226c:	cmp	r0, #0
   12270:	ldrlt	r0, [pc, #228]	; 1235c <putc_unlocked@plt+0xfdc>
   12274:	blt	12334 <putc_unlocked@plt+0xfb4>
   12278:	mov	r9, #0
   1227c:	ldr	r7, [pc, #220]	; 12360 <putc_unlocked@plt+0xfe0>
   12280:	ldr	r8, [pc, #220]	; 12364 <putc_unlocked@plt+0xfe4>
   12284:	b	12308 <putc_unlocked@plt+0xf88>
   12288:	mov	r2, #16
   1228c:	mov	r1, r7
   12290:	add	r0, sp, #4
   12294:	bl	11344 <strncmp@plt>
   12298:	orrs	r3, r9, r0
   1229c:	bne	122fc <putc_unlocked@plt+0xf7c>
   122a0:	add	r3, sp, #4
   122a4:	ldrb	r2, [r3], #1
   122a8:	cmp	r2, #58	; 0x3a
   122ac:	bne	122a4 <putc_unlocked@plt+0xf24>
   122b0:	mov	r4, r3
   122b4:	add	r3, r3, #1
   122b8:	ldrb	r2, [r4]
   122bc:	cmp	r2, #32
   122c0:	beq	122b0 <putc_unlocked@plt+0xf30>
   122c4:	mov	r0, r4
   122c8:	sub	r4, r4, #1
   122cc:	bl	11224 <strlen@plt>
   122d0:	add	r0, r0, #1
   122d4:	bl	13f24 <_obstack_memory_used@@Base+0x4b0>
   122d8:	mov	r9, r0
   122dc:	mov	r2, r0
   122e0:	ldrb	r3, [r4, #1]!
   122e4:	cmp	r3, #10
   122e8:	cmpne	r3, #13
   122ec:	movne	r1, #1
   122f0:	moveq	r1, #0
   122f4:	bne	12338 <putc_unlocked@plt+0xfb8>
   122f8:	strb	r1, [r2]
   122fc:	add	r0, sp, #4
   12300:	ldr	r1, [r8]
   12304:	bl	11338 <fputs@plt>
   12308:	mov	r2, r6
   1230c:	mov	r1, #100	; 0x64
   12310:	add	r0, sp, #4
   12314:	bl	11110 <fgets@plt>
   12318:	cmp	r0, #0
   1231c:	bne	12288 <putc_unlocked@plt+0xf08>
   12320:	mov	r0, r6
   12324:	bl	1111c <ferror@plt>
   12328:	cmp	r0, #0
   1232c:	beq	12340 <putc_unlocked@plt+0xfc0>
   12330:	ldr	r0, [pc, #48]	; 12368 <putc_unlocked@plt+0xfe8>
   12334:	bl	121b4 <putc_unlocked@plt+0xe34>
   12338:	strb	r3, [r2], #1
   1233c:	b	122e0 <putc_unlocked@plt+0xf60>
   12340:	mov	r0, r5
   12344:	bl	1369c <argp_usage@@Base+0x170>
   12348:	mov	r0, r9
   1234c:	add	sp, sp, #108	; 0x6c
   12350:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12354:	andeq	r7, r1, r3, lsl #17
   12358:	andeq	r8, r1, r6, lsl r0
   1235c:	andeq	r7, r1, r6, lsl #17
   12360:	andeq	r7, r1, ip, lsl #17
   12364:			; <UNDEFINED> instruction: 0x0002d8b4
   12368:	muleq	r1, sp, r8
   1236c:	ldr	r4, [pc, #44]	; 123a0 <putc_unlocked@plt+0x1020>
   12370:	push	{r0, r1, r2, r3}
   12374:	push	{r0, r1, r2, lr}
   12378:	add	r2, sp, #20
   1237c:	ldr	r0, [r4]
   12380:	str	r2, [sp, #4]
   12384:	ldr	r1, [sp, #16]
   12388:	bl	1129c <vfprintf@plt>
   1238c:	mov	r0, #10
   12390:	ldr	r1, [r4]
   12394:	bl	112a8 <fputc@plt>
   12398:	mov	r0, #1
   1239c:	bl	11218 <exit@plt>
   123a0:			; <UNDEFINED> instruction: 0x0002d8b0
   123a4:	push	{r4, r5, lr}
   123a8:	sub	sp, sp, #44	; 0x2c
   123ac:	mov	r4, r1
   123b0:	mov	r5, r0
   123b4:	mov	r2, #32
   123b8:	mov	r1, #0
   123bc:	add	r0, sp, #8
   123c0:	bl	1126c <memset@plt>
   123c4:	mov	r3, #1
   123c8:	cmp	r4, #0
   123cc:	ldr	r1, [pc, #204]	; 124a0 <putc_unlocked@plt+0x1120>
   123d0:	add	r2, sp, #8
   123d4:	movne	r1, r4
   123d8:	mov	r0, r5
   123dc:	str	r3, [sp, #16]
   123e0:	add	r3, sp, #4
   123e4:	bl	11314 <getaddrinfo@plt>
   123e8:	cmp	r0, #0
   123ec:	beq	12424 <putc_unlocked@plt+0x10a4>
   123f0:	cmp	r4, #0
   123f4:	ldr	r1, [pc, #168]	; 124a4 <putc_unlocked@plt+0x1124>
   123f8:	add	r3, sp, #4
   123fc:	movne	r1, r4
   12400:	add	r2, sp, #8
   12404:	mov	r0, r5
   12408:	bl	11314 <getaddrinfo@plt>
   1240c:	cmp	r0, #0
   12410:	beq	12424 <putc_unlocked@plt+0x10a4>
   12414:	bl	11104 <gai_strerror@plt>
   12418:	mov	r1, r0
   1241c:	ldr	r0, [pc, #132]	; 124a8 <putc_unlocked@plt+0x1128>
   12420:	bl	1236c <putc_unlocked@plt+0xfec>
   12424:	ldr	r5, [sp, #4]
   12428:	ldr	r3, [sp, #4]
   1242c:	cmp	r3, #0
   12430:	bne	1243c <putc_unlocked@plt+0x10bc>
   12434:	ldr	r0, [pc, #112]	; 124ac <putc_unlocked@plt+0x112c>
   12438:	bl	121b4 <putc_unlocked@plt+0xe34>
   1243c:	ldrd	r0, [r3, #4]
   12440:	ldr	r2, [r3, #12]
   12444:	bl	11320 <socket@plt>
   12448:	subs	r4, r0, #0
   1244c:	blt	12470 <putc_unlocked@plt+0x10f0>
   12450:	ldr	r3, [sp, #4]
   12454:	ldr	r2, [r3, #16]
   12458:	ldr	r1, [r3, #20]
   1245c:	bl	11368 <connect@plt>
   12460:	cmp	r0, #0
   12464:	beq	12480 <putc_unlocked@plt+0x1100>
   12468:	mov	r0, r4
   1246c:	bl	1135c <close@plt>
   12470:	ldr	r3, [sp, #4]
   12474:	ldr	r3, [r3, #28]
   12478:	str	r3, [sp, #4]
   1247c:	b	12428 <putc_unlocked@plt+0x10a8>
   12480:	ldr	r3, [sp, #4]
   12484:	cmp	r3, #0
   12488:	beq	12434 <putc_unlocked@plt+0x10b4>
   1248c:	mov	r0, r5
   12490:	bl	11308 <freeaddrinfo@plt>
   12494:	mov	r0, r4
   12498:	add	sp, sp, #44	; 0x2c
   1249c:	pop	{r4, r5, pc}
   124a0:	andeq	r8, r1, r8, asr #23
   124a4:	andeq	r7, r1, r3, lsr #17
   124a8:	andeq	r7, r1, fp, lsr #17
   124ac:			; <UNDEFINED> instruction: 0x000178bb
   124b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   124b4:	sub	sp, sp, #1504	; 0x5e0
   124b8:	mov	r5, r1
   124bc:	sub	sp, sp, #4
   124c0:	mov	r8, r0
   124c4:	ldr	r6, [pc, #464]	; 1269c <putc_unlocked@plt+0x131c>
   124c8:	ldr	r1, [pc, #464]	; 126a0 <putc_unlocked@plt+0x1320>
   124cc:	ldr	r4, [r6]
   124d0:	bl	11098 <fdopen@plt>
   124d4:	mov	r7, r0
   124d8:	mov	r0, r5
   124dc:	bl	11224 <strlen@plt>
   124e0:	mov	r2, r0
   124e4:	mov	r1, r5
   124e8:	mov	r0, r8
   124ec:	bl	11278 <write@plt>
   124f0:	cmp	r0, #0
   124f4:	ldrlt	r0, [pc, #424]	; 126a4 <putc_unlocked@plt+0x1324>
   124f8:	blt	12568 <putc_unlocked@plt+0x11e8>
   124fc:	mov	r5, #0
   12500:	ldr	r8, [pc, #416]	; 126a8 <putc_unlocked@plt+0x1328>
   12504:	ldr	r9, [pc, #416]	; 126ac <putc_unlocked@plt+0x132c>
   12508:	b	1253c <putc_unlocked@plt+0x11bc>
   1250c:	cmp	r4, #1
   12510:	bne	1256c <putc_unlocked@plt+0x11ec>
   12514:	add	r3, r6, r5, lsl #2
   12518:	ldr	r4, [r3, #2676]	; 0xa74
   1251c:	mov	r0, r4
   12520:	bl	11224 <strlen@plt>
   12524:	mov	r2, r0
   12528:	mov	r1, r4
   1252c:	add	r0, sp, #24
   12530:	bl	11344 <strncmp@plt>
   12534:	adds	r4, r0, #0
   12538:	movne	r4, #1
   1253c:	mov	r2, r7
   12540:	mov	r1, #200	; 0xc8
   12544:	add	r0, sp, #24
   12548:	bl	11110 <fgets@plt>
   1254c:	cmp	r0, #0
   12550:	bne	1250c <putc_unlocked@plt+0x118c>
   12554:	mov	r0, r7
   12558:	bl	1111c <ferror@plt>
   1255c:	cmp	r0, #0
   12560:	beq	12680 <putc_unlocked@plt+0x1300>
   12564:	ldr	r0, [pc, #324]	; 126b0 <putc_unlocked@plt+0x1330>
   12568:	bl	121b4 <putc_unlocked@plt+0xe34>
   1256c:	cmp	r4, #0
   12570:	bne	125b0 <putc_unlocked@plt+0x1230>
   12574:	mov	r5, r4
   12578:	ldr	fp, [pc, #308]	; 126b4 <putc_unlocked@plt+0x1334>
   1257c:	b	125a4 <putc_unlocked@plt+0x1224>
   12580:	mov	r0, sl
   12584:	bl	11224 <strlen@plt>
   12588:	mov	r2, r0
   1258c:	mov	r1, sl
   12590:	add	r0, sp, #24
   12594:	bl	11344 <strncmp@plt>
   12598:	cmp	r0, #0
   1259c:	beq	12678 <putc_unlocked@plt+0x12f8>
   125a0:	add	r5, r5, #2
   125a4:	ldr	sl, [fp, r5, lsl #2]
   125a8:	cmp	sl, #0
   125ac:	bne	12580 <putc_unlocked@plt+0x1200>
   125b0:	mov	r2, #10
   125b4:	mov	r1, r8
   125b8:	add	r0, sp, #24
   125bc:	bl	11344 <strncmp@plt>
   125c0:	cmp	r0, #0
   125c4:	bne	1263c <putc_unlocked@plt+0x12bc>
   125c8:	add	sl, sp, #480	; 0x1e0
   125cc:	add	r3, sp, #8
   125d0:	ldr	r1, [pc, #224]	; 126b8 <putc_unlocked@plt+0x1338>
   125d4:	add	r2, sp, #224	; 0xe0
   125d8:	add	r0, sp, #24
   125dc:	str	sl, [sp]
   125e0:	bl	112b4 <sscanf@plt>
   125e4:	cmp	r0, #3
   125e8:	bne	1263c <putc_unlocked@plt+0x12bc>
   125ec:	ldr	r3, [pc, #200]	; 126bc <putc_unlocked@plt+0x133c>
   125f0:	ldr	r3, [r3, #12]
   125f4:	cmp	r3, #0
   125f8:	beq	1260c <putc_unlocked@plt+0x128c>
   125fc:	add	r2, sp, #224	; 0xe0
   12600:	mov	r1, sl
   12604:	ldr	r0, [pc, #180]	; 126c0 <putc_unlocked@plt+0x1340>
   12608:	bl	110d4 <printf@plt>
   1260c:	ldr	r1, [pc, #176]	; 126c4 <putc_unlocked@plt+0x1344>
   12610:	mov	r0, sl
   12614:	bl	11188 <strcat@plt>
   12618:	add	r1, sp, #8
   1261c:	add	r0, sp, #224	; 0xe0
   12620:	bl	123a4 <putc_unlocked@plt+0x1024>
   12624:	mov	fp, r0
   12628:	mov	r1, sl
   1262c:	bl	124b0 <putc_unlocked@plt+0x1130>
   12630:	mov	r0, fp
   12634:	bl	1135c <close@plt>
   12638:	b	1253c <putc_unlocked@plt+0x11bc>
   1263c:	add	r2, sp, #24
   12640:	movw	r0, #9217	; 0x2401
   12644:	mov	r1, r2
   12648:	ldrb	r3, [r2], #1
   1264c:	cmp	r3, #13
   12650:	bhi	12644 <putc_unlocked@plt+0x12c4>
   12654:	mvn	r3, r0, lsr r3
   12658:	ands	r3, r3, #1
   1265c:	bne	12644 <putc_unlocked@plt+0x12c4>
   12660:	add	r2, sp, #24
   12664:	strb	r3, [r1]
   12668:	ldr	r1, [pc, #88]	; 126c8 <putc_unlocked@plt+0x1348>
   1266c:	ldr	r0, [r9]
   12670:	bl	1123c <fprintf@plt>
   12674:	b	1253c <putc_unlocked@plt+0x11bc>
   12678:	mov	r4, #1
   1267c:	b	1253c <putc_unlocked@plt+0x11bc>
   12680:	cmp	r4, #1
   12684:	bne	12690 <putc_unlocked@plt+0x1310>
   12688:	ldr	r0, [pc, #60]	; 126cc <putc_unlocked@plt+0x134c>
   1268c:	bl	1236c <putc_unlocked@plt+0xfec>
   12690:	add	sp, sp, #1504	; 0x5e0
   12694:	add	sp, sp, #4
   12698:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1269c:	andeq	sl, r2, r4, lsl r1
   126a0:	andeq	r8, r1, r6, lsl r0
   126a4:	andeq	r7, r1, r6, lsl #17
   126a8:	andeq	r7, r1, r3, asr #17
   126ac:			; <UNDEFINED> instruction: 0x0002d8b4
   126b0:	muleq	r1, sp, r8
   126b4:	andeq	sl, r2, r4, lsl #23
   126b8:	andeq	r7, r1, lr, asr #17
   126bc:			; <UNDEFINED> instruction: 0x0002d8bc
   126c0:	strdeq	r7, [r1], -ip
   126c4:	andeq	r7, r1, r3, lsl #17
   126c8:	andeq	r9, r1, fp, ror #4
   126cc:	andeq	r7, r1, ip, lsl r9
   126d0:	ldr	r3, [pc, #24]	; 126f0 <putc_unlocked@plt+0x1370>
   126d4:	push	{r4, lr}
   126d8:	mov	r4, r0
   126dc:	ldr	r0, [r3]
   126e0:	bl	1135c <close@plt>
   126e4:	mov	r1, r4
   126e8:	ldr	r0, [pc, #4]	; 126f4 <putc_unlocked@plt+0x1374>
   126ec:	bl	1236c <putc_unlocked@plt+0xfec>
   126f0:	andeq	sp, r2, r0, lsr r9
   126f4:			; <UNDEFINED> instruction: 0x00017ab2
   126f8:	push	{r4, r5, r6, lr}
   126fc:	ldr	r6, [r0]
   12700:	cmp	r6, #0
   12704:	beq	1274c <putc_unlocked@plt+0x13cc>
   12708:	mov	r4, r0
   1270c:	mov	r0, r2
   12710:	ldr	r2, [r4, #32]
   12714:	mov	r5, r1
   12718:	mov	r1, r3
   1271c:	str	r2, [r5, #36]	; 0x24
   12720:	ldr	r2, [r4, #24]
   12724:	str	r2, [r5, #28]
   12728:	ldr	r2, [r4, #28]
   1272c:	str	r2, [r5, #32]
   12730:	ldr	r2, [r4, #12]
   12734:	str	r2, [r5, #20]
   12738:	mov	r2, r5
   1273c:	blx	r6
   12740:	ldr	r3, [r5, #36]	; 0x24
   12744:	str	r3, [r4, #32]
   12748:	pop	{r4, r5, r6, pc}
   1274c:	mov	r0, #7
   12750:	pop	{r4, r5, r6, pc}
   12754:	push	{r4, r5, r6, r7, r8, lr}
   12758:	mov	r4, r1
   1275c:	ldr	r7, [r0]
   12760:	ldr	r5, [r0, #16]
   12764:	cmp	r7, #0
   12768:	bne	12778 <putc_unlocked@plt+0x13f8>
   1276c:	ldr	r3, [r0, #4]
   12770:	cmp	r3, #0
   12774:	beq	12794 <putc_unlocked@plt+0x1414>
   12778:	ldr	r3, [r4, #8]
   1277c:	cmp	r7, #0
   12780:	movne	r6, #0
   12784:	movne	r8, #24
   12788:	add	r3, r3, #1
   1278c:	str	r3, [r4, #8]
   12790:	bne	127cc <putc_unlocked@plt+0x144c>
   12794:	cmp	r5, #0
   12798:	addne	r5, r5, #16
   1279c:	popeq	{r4, r5, r6, r7, r8, pc}
   127a0:	add	r5, r5, #16
   127a4:	ldr	r0, [r5, #-32]	; 0xffffffe0
   127a8:	cmp	r0, #0
   127ac:	popeq	{r4, r5, r6, r7, r8, pc}
   127b0:	mov	r1, r4
   127b4:	bl	12754 <putc_unlocked@plt+0x13d4>
   127b8:	ldr	r3, [r4, #12]
   127bc:	add	r3, r3, #1
   127c0:	str	r3, [r4, #12]
   127c4:	b	127a0 <putc_unlocked@plt+0x1420>
   127c8:	add	r6, r6, #1
   127cc:	mla	r0, r8, r6, r7
   127d0:	bl	13588 <argp_usage@@Base+0x5c>
   127d4:	cmp	r0, #0
   127d8:	beq	127c8 <putc_unlocked@plt+0x1448>
   127dc:	ldr	r3, [r4]
   127e0:	add	r2, r6, r6, lsl #1
   127e4:	add	r3, r3, r2
   127e8:	str	r3, [r4]
   127ec:	ldr	r3, [r4, #4]
   127f0:	add	r6, r3, r6
   127f4:	str	r6, [r4, #4]
   127f8:	b	12794 <putc_unlocked@plt+0x1414>
   127fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12800:	sub	sp, sp, #36	; 0x24
   12804:	mov	r9, r0
   12808:	mov	r4, r3
   1280c:	ldr	r6, [r0]
   12810:	str	r1, [sp, #16]
   12814:	str	r2, [sp, #20]
   12818:	ldr	sl, [r0, #16]
   1281c:	cmp	r6, #0
   12820:	ldr	r5, [sp, #72]	; 0x48
   12824:	movne	r7, r6
   12828:	movne	fp, #0
   1282c:	bne	129dc <putc_unlocked@plt+0x165c>
   12830:	ldr	r3, [r0, #4]
   12834:	cmp	r3, #0
   12838:	beq	1287c <putc_unlocked@plt+0x14fc>
   1283c:	ldr	r3, [r9, #4]
   12840:	ldr	r2, [sp, #16]
   12844:	stm	r4, {r3, r9}
   12848:	ldr	r3, [r5, #4]
   1284c:	str	r2, [r4, #16]
   12850:	ldr	r2, [sp, #20]
   12854:	str	r3, [r4, #8]
   12858:	mov	r3, #0
   1285c:	cmp	sl, r3
   12860:	str	r3, [r4, #12]
   12864:	strd	r2, [r4, #20]
   12868:	str	r3, [r4, #28]
   1286c:	str	r3, [r4, #32]
   12870:	bne	129fc <putc_unlocked@plt+0x167c>
   12874:	mov	r6, r4
   12878:	add	r4, r4, #36	; 0x24
   1287c:	cmp	sl, #0
   12880:	movne	r2, #0
   12884:	bne	12a38 <putc_unlocked@plt+0x16b8>
   12888:	mov	r0, r4
   1288c:	add	sp, sp, #36	; 0x24
   12890:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12894:	ldr	r3, [r7, #12]
   12898:	tst	r3, #4
   1289c:	moveq	r6, r7
   128a0:	ldr	r3, [r6, #12]
   128a4:	ands	r3, r3, #8
   128a8:	str	r3, [sp, #8]
   128ac:	bne	129d8 <putc_unlocked@plt+0x1658>
   128b0:	mov	r0, r7
   128b4:	bl	13540 <argp_usage@@Base+0x14>
   128b8:	cmp	r0, #0
   128bc:	beq	12914 <putc_unlocked@plt+0x1594>
   128c0:	ldr	r3, [r5, #4]
   128c4:	ldr	r2, [r7, #4]
   128c8:	add	r1, r3, #1
   128cc:	str	r1, [r5, #4]
   128d0:	strb	r2, [r3]
   128d4:	ldr	r3, [r6, #8]
   128d8:	cmp	r3, #0
   128dc:	beq	1290c <putc_unlocked@plt+0x158c>
   128e0:	ldr	r3, [r5, #4]
   128e4:	mov	r1, #58	; 0x3a
   128e8:	add	r2, r3, #1
   128ec:	str	r2, [r5, #4]
   128f0:	strb	r1, [r3]
   128f4:	ldr	r3, [r6, #12]
   128f8:	tst	r3, #1
   128fc:	ldrne	r3, [r5, #4]
   12900:	addne	r2, r3, #1
   12904:	strne	r2, [r5, #4]
   12908:	strbne	r1, [r3]
   1290c:	ldr	r3, [r5, #4]
   12910:	strb	fp, [r3]
   12914:	ldr	r3, [r7]
   12918:	cmp	r3, #0
   1291c:	beq	129d8 <putc_unlocked@plt+0x1658>
   12920:	ldr	r2, [r5]
   12924:	str	r2, [sp, #12]
   12928:	ldr	r2, [r2, #8]
   1292c:	mov	r8, r2
   12930:	ldr	r0, [r8]
   12934:	cmp	r0, #0
   12938:	beq	12968 <putc_unlocked@plt+0x15e8>
   1293c:	mov	r1, r3
   12940:	str	r3, [sp, #24]
   12944:	str	r2, [sp, #28]
   12948:	bl	110c8 <strcmp@plt>
   1294c:	cmp	r0, #0
   12950:	ldr	r3, [sp, #24]
   12954:	ldr	r2, [sp, #28]
   12958:	bne	129f0 <putc_unlocked@plt+0x1670>
   1295c:	sub	r8, r8, r2
   12960:	cmp	r8, #0
   12964:	bge	129d8 <putc_unlocked@plt+0x1658>
   12968:	ldr	r1, [r5, #8]
   1296c:	str	r3, [r1]
   12970:	ldr	r3, [r6, #8]
   12974:	cmp	r3, #0
   12978:	beq	12990 <putc_unlocked@plt+0x1610>
   1297c:	ldr	r3, [r6, #12]
   12980:	tst	r3, #1
   12984:	movne	r3, #2
   12988:	moveq	r3, #1
   1298c:	str	r3, [sp, #8]
   12990:	ldr	r3, [sp, #8]
   12994:	ldr	r2, [sp, #12]
   12998:	ldr	r0, [pc, #168]	; 12a48 <putc_unlocked@plt+0x16c8>
   1299c:	stmib	r1, {r3, fp}
   129a0:	ldr	r3, [r7, #4]
   129a4:	ldr	r2, [r2, #48]	; 0x30
   129a8:	cmp	r3, #0
   129ac:	ldreq	r3, [r6, #4]
   129b0:	sub	r2, r4, r2
   129b4:	asr	r2, r2, #2
   129b8:	mul	r2, r0, r2
   129bc:	bic	r3, r3, #-16777216	; 0xff000000
   129c0:	add	r2, r2, #1
   129c4:	add	r3, r3, r2, lsl #24
   129c8:	str	r3, [r1, #12]
   129cc:	add	r3, r1, #16
   129d0:	str	r3, [r5, #8]
   129d4:	str	fp, [r1, #16]
   129d8:	add	r7, r7, #24
   129dc:	mov	r0, r7
   129e0:	bl	13588 <argp_usage@@Base+0x5c>
   129e4:	cmp	r0, #0
   129e8:	beq	12894 <putc_unlocked@plt+0x1514>
   129ec:	b	1283c <putc_unlocked@plt+0x14bc>
   129f0:	add	r8, r8, #16
   129f4:	b	12930 <putc_unlocked@plt+0x15b0>
   129f8:	add	r3, r3, #1
   129fc:	ldr	r2, [sl, r3, lsl #4]
   12a00:	cmp	r2, #0
   12a04:	bne	129f8 <putc_unlocked@plt+0x1678>
   12a08:	ldr	r2, [r5, #12]
   12a0c:	add	r3, r2, r3, lsl #2
   12a10:	str	r2, [r4, #28]
   12a14:	str	r3, [r5, #12]
   12a18:	b	12874 <putc_unlocked@plt+0x14f4>
   12a1c:	mov	r3, r4
   12a20:	mov	r1, r6
   12a24:	str	r5, [sp]
   12a28:	add	r7, r2, #1
   12a2c:	bl	127fc <putc_unlocked@plt+0x147c>
   12a30:	mov	r4, r0
   12a34:	mov	r2, r7
   12a38:	ldr	r0, [sl, r2, lsl #4]
   12a3c:	cmp	r0, #0
   12a40:	bne	12a1c <putc_unlocked@plt+0x169c>
   12a44:	b	12888 <putc_unlocked@plt+0x1508>
   12a48:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^
   12a4c:	cmp	r0, #86	; 0x56
   12a50:	bne	12abc <putc_unlocked@plt+0x173c>
   12a54:	ldr	r3, [pc, #112]	; 12acc <putc_unlocked@plt+0x174c>
   12a58:	push	{r4, lr}
   12a5c:	mov	r4, r2
   12a60:	ldr	r3, [r3]
   12a64:	cmp	r3, #0
   12a68:	beq	12a88 <putc_unlocked@plt+0x1708>
   12a6c:	mov	r1, r2
   12a70:	ldr	r0, [r2, #48]	; 0x30
   12a74:	blx	r3
   12a78:	ldr	r0, [r4, #16]
   12a7c:	ands	r0, r0, #32
   12a80:	bne	12ac4 <putc_unlocked@plt+0x1744>
   12a84:	bl	11218 <exit@plt>
   12a88:	ldr	r3, [pc, #64]	; 12ad0 <putc_unlocked@plt+0x1750>
   12a8c:	ldr	r2, [r3]
   12a90:	cmp	r2, #0
   12a94:	beq	12aa8 <putc_unlocked@plt+0x1728>
   12a98:	ldr	r1, [pc, #52]	; 12ad4 <putc_unlocked@plt+0x1754>
   12a9c:	ldr	r0, [r4, #48]	; 0x30
   12aa0:	bl	1123c <fprintf@plt>
   12aa4:	b	12a78 <putc_unlocked@plt+0x16f8>
   12aa8:	ldr	r2, [pc, #40]	; 12ad8 <putc_unlocked@plt+0x1758>
   12aac:	mov	r0, r4
   12ab0:	ldr	r1, [pc, #36]	; 12adc <putc_unlocked@plt+0x175c>
   12ab4:	bl	16270 <argp_error@@Base>
   12ab8:	b	12a78 <putc_unlocked@plt+0x16f8>
   12abc:	mov	r0, #7
   12ac0:	bx	lr
   12ac4:	mov	r0, #0
   12ac8:	pop	{r4, pc}
   12acc:	ldrdeq	sp, [r2], -r0
   12ad0:	andeq	sp, r2, r8, lsr r9
   12ad4:	andeq	r9, r1, fp, ror #4
   12ad8:	strdeq	r9, [r1], -r0
   12adc:	andeq	r9, r1, r3, lsr #15
   12ae0:	cmn	r0, #3
   12ae4:	push	{r4, r5, r6, lr}
   12ae8:	mov	r4, r2
   12aec:	beq	12b30 <putc_unlocked@plt+0x17b0>
   12af0:	mov	r5, r1
   12af4:	bgt	12b08 <putc_unlocked@plt+0x1788>
   12af8:	cmn	r0, #4
   12afc:	beq	12b6c <putc_unlocked@plt+0x17ec>
   12b00:	mov	r0, #7
   12b04:	pop	{r4, r5, r6, pc}
   12b08:	cmn	r0, #2
   12b0c:	beq	12b38 <putc_unlocked@plt+0x17b8>
   12b10:	cmp	r0, #63	; 0x3f
   12b14:	movweq	r2, #634	; 0x27a
   12b18:	bne	12b00 <putc_unlocked@plt+0x1780>
   12b1c:	mov	r0, r4
   12b20:	ldr	r1, [r4, #48]	; 0x30
   12b24:	bl	161cc <argp_state_help@@Base>
   12b28:	mov	r0, #0
   12b2c:	pop	{r4, r5, r6, pc}
   12b30:	movw	r2, #513	; 0x201
   12b34:	b	12b1c <putc_unlocked@plt+0x179c>
   12b38:	ldr	r3, [pc, #100]	; 12ba4 <putc_unlocked@plt+0x1824>
   12b3c:	mov	r0, r1
   12b40:	str	r1, [r3]
   12b44:	bl	13618 <argp_usage@@Base+0xec>
   12b48:	ldr	r3, [pc, #88]	; 12ba8 <putc_unlocked@plt+0x1828>
   12b4c:	str	r0, [r4, #40]	; 0x28
   12b50:	str	r0, [r3]
   12b54:	ldr	r3, [r4, #16]
   12b58:	and	r3, r3, #3
   12b5c:	cmp	r3, #1
   12b60:	ldreq	r3, [r4, #8]
   12b64:	streq	r5, [r3]
   12b68:	b	12b28 <putc_unlocked@plt+0x17a8>
   12b6c:	ldr	r4, [pc, #56]	; 12bac <putc_unlocked@plt+0x182c>
   12b70:	cmp	r1, #0
   12b74:	ldr	r0, [pc, #52]	; 12bb0 <putc_unlocked@plt+0x1830>
   12b78:	movne	r0, r1
   12b7c:	bl	112e4 <atoi@plt>
   12b80:	str	r0, [r4]
   12b84:	ldr	r3, [r4]
   12b88:	sub	r2, r3, #1
   12b8c:	cmp	r3, #0
   12b90:	str	r2, [r4]
   12b94:	ble	12b28 <putc_unlocked@plt+0x17a8>
   12b98:	mov	r0, #1
   12b9c:	bl	11158 <sleep@plt>
   12ba0:	b	12b84 <putc_unlocked@plt+0x1804>
   12ba4:	andeq	sp, r2, ip, lsr #17
   12ba8:	andeq	sp, r2, r8, lsr #17
   12bac:	andeq	sp, r2, ip, asr #17
   12bb0:	andeq	r9, r1, r3, lsl r1

00012bb4 <argp_parse@@Base>:
   12bb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12bb8:	add	fp, sp, #32
   12bbc:	sub	sp, sp, #220	; 0xdc
   12bc0:	tst	r3, #1
   12bc4:	mov	r4, r0
   12bc8:	mov	r8, r2
   12bcc:	mov	r7, r3
   12bd0:	str	r1, [fp, #-240]	; 0xffffff10
   12bd4:	bne	12c08 <argp_parse@@Base+0x54>
   12bd8:	ldr	r3, [pc, #2232]	; 13498 <argp_parse@@Base+0x8e4>
   12bdc:	ldr	r5, [pc, #2232]	; 1349c <argp_parse@@Base+0x8e8>
   12be0:	ldr	r2, [r3]
   12be4:	cmp	r2, #0
   12be8:	ldreq	r2, [r8]
   12bec:	streq	r2, [r3]
   12bf0:	ldr	r3, [r5]
   12bf4:	cmp	r3, #0
   12bf8:	bne	12c08 <argp_parse@@Base+0x54>
   12bfc:	ldr	r0, [r8]
   12c00:	bl	13618 <argp_usage@@Base+0xec>
   12c04:	str	r0, [r5]
   12c08:	ands	r9, r7, #16
   12c0c:	bne	12c90 <argp_parse@@Base+0xdc>
   12c10:	sub	sp, sp, #64	; 0x40
   12c14:	mov	r2, #28
   12c18:	add	r5, sp, #8
   12c1c:	sub	sp, sp, #32
   12c20:	add	r6, sp, #8
   12c24:	mov	r1, r9
   12c28:	mov	r0, r6
   12c2c:	bl	1126c <memset@plt>
   12c30:	mov	r0, r5
   12c34:	mov	r2, #64	; 0x40
   12c38:	str	r5, [r6, #16]
   12c3c:	mov	r1, r9
   12c40:	bl	1126c <memset@plt>
   12c44:	ldr	r3, [pc, #2132]	; 134a0 <argp_parse@@Base+0x8ec>
   12c48:	cmp	r4, #0
   12c4c:	strne	r4, [r5], #16
   12c50:	str	r3, [r5]
   12c54:	ldr	r3, [pc, #2120]	; 134a4 <argp_parse@@Base+0x8f0>
   12c58:	ldr	r3, [r3]
   12c5c:	cmp	r3, #0
   12c60:	bne	12c78 <argp_parse@@Base+0xc4>
   12c64:	ldr	r3, [pc, #2108]	; 134a8 <argp_parse@@Base+0x8f4>
   12c68:	ldr	r3, [r3]
   12c6c:	cmp	r3, #0
   12c70:	addeq	r3, r5, #16
   12c74:	beq	12c84 <argp_parse@@Base+0xd0>
   12c78:	ldr	r2, [pc, #2092]	; 134ac <argp_parse@@Base+0x8f8>
   12c7c:	add	r3, r5, #32
   12c80:	str	r2, [r5, #16]
   12c84:	mov	r2, #0
   12c88:	mov	r4, r6
   12c8c:	str	r2, [r3]
   12c90:	mov	r2, #36	; 0x24
   12c94:	mov	r1, #0
   12c98:	sub	r0, fp, #196	; 0xc4
   12c9c:	bl	1126c <memset@plt>
   12ca0:	ands	r3, r7, #4
   12ca4:	moveq	r3, #1
   12ca8:	movne	r3, #0
   12cac:	str	r3, [fp, #-228]	; 0xffffff1c
   12cb0:	mov	r3, #0
   12cb4:	cmp	r4, r3
   12cb8:	str	r3, [fp, #-224]	; 0xffffff20
   12cbc:	str	r3, [fp, #-220]	; 0xffffff24
   12cc0:	str	r3, [fp, #-216]	; 0xffffff28
   12cc4:	beq	12cd4 <argp_parse@@Base+0x120>
   12cc8:	sub	r1, fp, #228	; 0xe4
   12ccc:	mov	r0, r4
   12cd0:	bl	12754 <putc_unlocked@plt+0x13d4>
   12cd4:	mov	r9, #36	; 0x24
   12cd8:	ldr	r0, [fp, #-228]	; 0xffffff1c
   12cdc:	ldr	r3, [fp, #-220]	; 0xffffff24
   12ce0:	ldr	sl, [fp, #-216]	; 0xffffff28
   12ce4:	add	r0, r0, #1
   12ce8:	mla	r9, r3, r9, r9
   12cec:	ldr	r3, [fp, #-224]	; 0xffffff20
   12cf0:	lsl	sl, sl, #2
   12cf4:	add	r6, r9, sl
   12cf8:	add	r3, r3, #1
   12cfc:	add	r3, r6, r3, lsl #4
   12d00:	add	r0, r0, r3
   12d04:	str	r3, [fp, #-232]	; 0xffffff18
   12d08:	bl	1425c <_obstack_memory_used@@Base+0x7e8>
   12d0c:	cmp	r0, #0
   12d10:	mov	r5, r0
   12d14:	str	r0, [fp, #-40]	; 0xffffffd8
   12d18:	moveq	r4, #12
   12d1c:	beq	12e9c <argp_parse@@Base+0x2e8>
   12d20:	add	r3, r0, r6
   12d24:	sub	lr, fp, #196	; 0xc4
   12d28:	add	r9, r0, r9
   12d2c:	sub	ip, fp, #148	; 0x94
   12d30:	str	r3, [fp, #-236]	; 0xffffff14
   12d34:	str	r3, [fp, #-152]	; 0xffffff68
   12d38:	ldr	r3, [fp, #-232]	; 0xffffff18
   12d3c:	str	r0, [fp, #-112]	; 0xffffff90
   12d40:	str	r9, [fp, #-104]	; 0xffffff98
   12d44:	add	r6, r0, r3
   12d48:	mov	r3, #1
   12d4c:	str	r3, [fp, #-196]	; 0xffffff3c
   12d50:	str	r3, [fp, #-192]	; 0xffffff40
   12d54:	ldm	lr!, {r0, r1, r2, r3}
   12d58:	str	r6, [fp, #-156]	; 0xffffff64
   12d5c:	stmia	ip!, {r0, r1, r2, r3}
   12d60:	ldm	lr!, {r0, r1, r2, r3}
   12d64:	stmia	ip!, {r0, r1, r2, r3}
   12d68:	mov	r2, sl
   12d6c:	mov	r0, r9
   12d70:	mov	r1, #0
   12d74:	sub	sl, fp, #160	; 0xa0
   12d78:	ldr	r3, [lr]
   12d7c:	str	r3, [ip]
   12d80:	bl	1126c <memset@plt>
   12d84:	ldr	r3, [fp, #-236]	; 0xffffff14
   12d88:	tst	r7, #8
   12d8c:	str	sl, [fp, #-212]	; 0xffffff2c
   12d90:	str	r6, [fp, #-208]	; 0xffffff30
   12d94:	addne	r6, r6, #1
   12d98:	strne	r6, [fp, #-208]	; 0xffffff30
   12d9c:	str	r3, [fp, #-204]	; 0xffffff34
   12da0:	movne	r3, #45	; 0x2d
   12da4:	str	r9, [fp, #-200]	; 0xffffff38
   12da8:	sub	r9, fp, #148	; 0x94
   12dac:	bne	12dc8 <argp_parse@@Base+0x214>
   12db0:	ands	r3, r7, #4
   12db4:	cmp	r3, #0
   12db8:	beq	12dd0 <argp_parse@@Base+0x21c>
   12dbc:	add	r6, r6, #1
   12dc0:	mov	r3, #43	; 0x2b
   12dc4:	str	r6, [fp, #-208]	; 0xffffff30
   12dc8:	ldr	r2, [fp, #-232]	; 0xffffff18
   12dcc:	strb	r3, [r5, r2]
   12dd0:	ldr	r3, [fp, #-208]	; 0xffffff30
   12dd4:	mov	r2, #0
   12dd8:	cmp	r4, r2
   12ddc:	strb	r2, [r3]
   12de0:	ldr	r3, [fp, #-204]	; 0xffffff34
   12de4:	str	r2, [r3]
   12de8:	ldreq	r3, [fp, #-112]	; 0xffffff90
   12dec:	str	r4, [fp, #-160]	; 0xffffff60
   12df0:	streq	r3, [fp, #-108]	; 0xffffff94
   12df4:	beq	12e14 <argp_parse@@Base+0x260>
   12df8:	sub	r3, fp, #212	; 0xd4
   12dfc:	mov	r1, r2
   12e00:	mov	r0, r4
   12e04:	str	r3, [sp]
   12e08:	ldr	r3, [fp, #-112]	; 0xffffff90
   12e0c:	bl	127fc <putc_unlocked@plt+0x147c>
   12e10:	str	r0, [fp, #-108]	; 0xffffff94
   12e14:	mov	r2, #24
   12e18:	mov	r1, #0
   12e1c:	ldr	r6, [pc, #1676]	; 134b0 <argp_parse@@Base+0x8fc>
   12e20:	sub	r0, fp, #76	; 0x4c
   12e24:	mov	r4, #0
   12e28:	bl	1126c <memset@plt>
   12e2c:	ldr	r3, [fp, #-160]	; 0xffffff60
   12e30:	ldr	r5, [fp, #-112]	; 0xffffff90
   12e34:	str	r3, [fp, #-96]	; 0xffffffa0
   12e38:	ldr	r3, [fp, #-240]	; 0xffffff10
   12e3c:	str	r8, [fp, #-88]	; 0xffffffa8
   12e40:	str	r7, [fp, #-80]	; 0xffffffb0
   12e44:	str	sl, [fp, #-44]	; 0xffffffd4
   12e48:	str	r3, [fp, #-92]	; 0xffffffa4
   12e4c:	ldr	r3, [pc, #1632]	; 134b4 <argp_parse@@Base+0x900>
   12e50:	ldr	r3, [r3]
   12e54:	str	r3, [fp, #-52]	; 0xffffffcc
   12e58:	ldr	r3, [pc, #1624]	; 134b8 <argp_parse@@Base+0x904>
   12e5c:	ldr	r3, [r3]
   12e60:	str	r3, [fp, #-48]	; 0xffffffd0
   12e64:	mov	r3, #0
   12e68:	str	r3, [fp, #-84]	; 0xffffffac
   12e6c:	mov	r3, #1
   12e70:	str	r3, [fp, #-100]	; 0xffffff9c
   12e74:	ldr	r3, [fp, #-108]	; 0xffffff94
   12e78:	cmp	r5, r3
   12e7c:	ldrcc	r3, [fp, #8]
   12e80:	strcc	r3, [r5, #24]
   12e84:	ldr	r3, [fp, #-108]	; 0xffffff94
   12e88:	cmp	r5, r3
   12e8c:	bcs	12f0c <argp_parse@@Base+0x358>
   12e90:	cmp	r4, #7
   12e94:	cmpne	r4, #0
   12e98:	beq	12ea8 <argp_parse@@Base+0x2f4>
   12e9c:	mov	r0, r4
   12ea0:	sub	sp, fp, #32
   12ea4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ea8:	ldr	r3, [r5, #16]
   12eac:	cmp	r3, #0
   12eb0:	ldrne	r3, [r3, #28]
   12eb4:	ldrne	r2, [r5, #20]
   12eb8:	ldrne	r3, [r3, r2, lsl #2]
   12ebc:	strne	r3, [r5, #24]
   12ec0:	ldr	r3, [r5]
   12ec4:	cmp	r3, #0
   12ec8:	bne	12eec <argp_parse@@Base+0x338>
   12ecc:	ldr	r3, [r5, #4]
   12ed0:	ldr	r3, [r3, #16]
   12ed4:	cmp	r3, #0
   12ed8:	beq	12eec <argp_parse@@Base+0x338>
   12edc:	ldr	r3, [r3]
   12ee0:	cmp	r3, #0
   12ee4:	ldrdne	r2, [r5, #24]
   12ee8:	strne	r2, [r3]
   12eec:	mov	r0, r5
   12ef0:	mov	r3, #0
   12ef4:	mov	r2, r6
   12ef8:	sub	r1, fp, #96	; 0x60
   12efc:	bl	126f8 <putc_unlocked@plt+0x1378>
   12f00:	mov	r4, r0
   12f04:	add	r5, r5, #36	; 0x24
   12f08:	b	12e84 <argp_parse@@Base+0x2d0>
   12f0c:	cmp	r4, #7
   12f10:	beq	12f1c <argp_parse@@Base+0x368>
   12f14:	cmp	r4, #0
   12f18:	bne	12e9c <argp_parse@@Base+0x2e8>
   12f1c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   12f20:	tst	r2, #2
   12f24:	moveq	r3, #1
   12f28:	streq	r3, [fp, #-144]	; 0xffffff70
   12f2c:	beq	12f58 <argp_parse@@Base+0x3a4>
   12f30:	mov	r1, #0
   12f34:	tst	r2, #1
   12f38:	ldr	r3, [fp, #-88]	; 0xffffffa8
   12f3c:	str	r1, [fp, #-144]	; 0xffffff70
   12f40:	beq	12f58 <argp_parse@@Base+0x3a4>
   12f44:	sub	r3, r3, #4
   12f48:	str	r3, [fp, #-88]	; 0xffffffa8
   12f4c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12f50:	add	r3, r3, #1
   12f54:	str	r3, [fp, #-92]	; 0xffffffa4
   12f58:	ldr	r3, [fp, #-88]	; 0xffffffa8
   12f5c:	cmp	r8, r3
   12f60:	bne	130c0 <argp_parse@@Base+0x50c>
   12f64:	ldr	r0, [r8]
   12f68:	cmp	r0, #0
   12f6c:	beq	130c0 <argp_parse@@Base+0x50c>
   12f70:	bl	13618 <argp_usage@@Base+0xec>
   12f74:	str	r0, [fp, #-56]	; 0xffffffc8
   12f78:	ldr	r7, [pc, #1340]	; 134bc <argp_parse@@Base+0x908>
   12f7c:	ldr	r3, [fp, #-84]	; 0xffffffac
   12f80:	ldr	r2, [fp, #-72]	; 0xffffffb8
   12f84:	cmp	r2, #0
   12f88:	beq	12f98 <argp_parse@@Base+0x3e4>
   12f8c:	cmp	r2, r3
   12f90:	movgt	r2, #0
   12f94:	strgt	r2, [fp, #-72]	; 0xffffffb8
   12f98:	ldr	r2, [fp, #-100]	; 0xffffff9c
   12f9c:	cmp	r2, #0
   12fa0:	beq	1301c <argp_parse@@Base+0x468>
   12fa4:	ldr	r6, [fp, #-72]	; 0xffffffb8
   12fa8:	cmp	r6, #0
   12fac:	bne	1301c <argp_parse@@Base+0x468>
   12fb0:	str	r3, [fp, #-148]	; 0xffffff6c
   12fb4:	mvn	r3, #0
   12fb8:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12fbc:	str	r3, [fp, #-140]	; 0xffffff74
   12fc0:	stm	sp, {r6, r9}
   12fc4:	ldr	r2, [fp, #-156]	; 0xffffff64
   12fc8:	tst	ip, #64	; 0x40
   12fcc:	ldr	r3, [fp, #-152]	; 0xffffff68
   12fd0:	ldrd	r0, [fp, #-92]	; 0xffffffa4
   12fd4:	beq	130d0 <argp_parse@@Base+0x51c>
   12fd8:	bl	1375c <argp_usage@@Base+0x230>
   12fdc:	ldr	r4, [fp, #-148]	; 0xffffff6c
   12fe0:	cmn	r0, #1
   12fe4:	mov	r5, r0
   12fe8:	str	r4, [fp, #-84]	; 0xffffffac
   12fec:	bne	130d8 <argp_parse@@Base+0x524>
   12ff0:	mov	r3, #0
   12ff4:	cmp	r4, #1
   12ff8:	str	r3, [fp, #-100]	; 0xffffff9c
   12ffc:	ble	1301c <argp_parse@@Base+0x468>
   13000:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13004:	sub	r3, r4, #-1073741823	; 0xc0000001
   13008:	ldr	r1, [pc, #1200]	; 134c0 <argp_parse@@Base+0x90c>
   1300c:	ldr	r0, [r2, r3, lsl #2]
   13010:	bl	110c8 <strcmp@plt>
   13014:	cmp	r0, #0
   13018:	streq	r4, [fp, #-72]	; 0xffffffb8
   1301c:	ldr	r2, [fp, #-92]	; 0xffffffa4
   13020:	ldr	r3, [fp, #-84]	; 0xffffffac
   13024:	cmp	r3, r2
   13028:	bge	132a4 <argp_parse@@Base+0x6f0>
   1302c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   13030:	tst	r2, #4
   13034:	bne	132a4 <argp_parse@@Base+0x6f0>
   13038:	add	r2, r3, #1
   1303c:	str	r2, [fp, #-84]	; 0xffffffac
   13040:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13044:	ldr	r3, [r2, r3, lsl #2]
   13048:	str	r3, [fp, #-136]	; 0xffffff78
   1304c:	ldr	sl, [fp, #-136]	; 0xffffff78
   13050:	mov	r3, #0
   13054:	mov	r4, #7
   13058:	ldr	r8, [fp, #-84]	; 0xffffffac
   1305c:	ldr	r5, [fp, #-112]	; 0xffffff90
   13060:	sub	r8, r8, #1
   13064:	str	r8, [fp, #-84]	; 0xffffffac
   13068:	ldr	r6, [fp, #-108]	; 0xffffff94
   1306c:	cmp	r5, r6
   13070:	movcs	r2, #0
   13074:	movcc	r2, #1
   13078:	cmp	r4, #7
   1307c:	movne	r2, #0
   13080:	cmp	r2, #0
   13084:	bne	130f4 <argp_parse@@Base+0x540>
   13088:	cmp	r4, #0
   1308c:	bne	13210 <argp_parse@@Base+0x65c>
   13090:	cmp	r3, r7
   13094:	ldreq	r3, [fp, #-92]	; 0xffffffa4
   13098:	streq	r3, [fp, #-84]	; 0xffffffac
   1309c:	ldr	r3, [fp, #-84]	; 0xffffffac
   130a0:	cmp	r8, r3
   130a4:	sublt	r8, r3, r8
   130a8:	ldrlt	r3, [r5, #-24]	; 0xffffffe8
   130ac:	movge	r3, #1
   130b0:	strge	r3, [fp, #-100]	; 0xffffff9c
   130b4:	addlt	r8, r3, r8
   130b8:	strlt	r8, [r5, #-24]	; 0xffffffe8
   130bc:	b	12f7c <argp_parse@@Base+0x3c8>
   130c0:	ldr	r3, [pc, #980]	; 1349c <argp_parse@@Base+0x8e8>
   130c4:	ldr	r3, [r3]
   130c8:	str	r3, [fp, #-56]	; 0xffffffc8
   130cc:	b	12f78 <argp_parse@@Base+0x3c4>
   130d0:	bl	13710 <argp_usage@@Base+0x1e4>
   130d4:	b	12fdc <argp_parse@@Base+0x428>
   130d8:	cmp	r0, #63	; 0x3f
   130dc:	bne	1344c <argp_parse@@Base+0x898>
   130e0:	ldr	r3, [fp, #-140]	; 0xffffff74
   130e4:	cmn	r3, #1
   130e8:	beq	13454 <argp_parse@@Base+0x8a0>
   130ec:	mov	r4, #7
   130f0:	b	1322c <argp_parse@@Base+0x678>
   130f4:	ldr	r3, [fp, #-84]	; 0xffffffac
   130f8:	mov	r2, #0
   130fc:	sub	r1, fp, #96	; 0x60
   13100:	mov	r0, r5
   13104:	add	r3, r3, #1
   13108:	str	r3, [fp, #-84]	; 0xffffffac
   1310c:	mov	r3, sl
   13110:	bl	126f8 <putc_unlocked@plt+0x1378>
   13114:	cmp	r0, #7
   13118:	mov	r4, r0
   1311c:	movne	r3, #0
   13120:	bne	1314c <argp_parse@@Base+0x598>
   13124:	ldr	r3, [fp, #-84]	; 0xffffffac
   13128:	mov	r2, r7
   1312c:	sub	r1, fp, #96	; 0x60
   13130:	mov	r0, r5
   13134:	sub	r3, r3, #1
   13138:	str	r3, [fp, #-84]	; 0xffffffac
   1313c:	mov	r3, #0
   13140:	bl	126f8 <putc_unlocked@plt+0x1378>
   13144:	mov	r4, r0
   13148:	mov	r3, r7
   1314c:	add	r5, r5, #36	; 0x24
   13150:	b	13068 <argp_parse@@Base+0x4b4>
   13154:	ldr	r0, [fp, #-112]	; 0xffffff90
   13158:	ldr	r3, [fp, #-108]	; 0xffffff94
   1315c:	cmp	r0, r3
   13160:	bcs	13470 <argp_parse@@Base+0x8bc>
   13164:	ldr	r1, [r0, #8]
   13168:	cmp	r2, r1
   1316c:	bcs	131c4 <argp_parse@@Base+0x610>
   13170:	ldr	r3, [fp, #-136]	; 0xffffff78
   13174:	mov	r2, r5
   13178:	sub	r1, fp, #96	; 0x60
   1317c:	bl	126f8 <putc_unlocked@plt+0x1378>
   13180:	cmp	r0, #7
   13184:	mov	r4, r0
   13188:	bne	13224 <argp_parse@@Base+0x670>
   1318c:	cmp	r8, #0
   13190:	beq	13470 <argp_parse@@Base+0x8bc>
   13194:	ldr	r3, [fp, #-152]	; 0xffffff68
   13198:	add	r3, r3, #16
   1319c:	ldr	r2, [r3, #-16]
   131a0:	ldr	r1, [r3, #-4]
   131a4:	cmp	r5, r1
   131a8:	bne	131fc <argp_parse@@Base+0x648>
   131ac:	ldr	r3, [pc, #784]	; 134c4 <argp_parse@@Base+0x910>
   131b0:	cmp	r2, #0
   131b4:	moveq	r2, r3
   131b8:	ldr	r3, [pc, #776]	; 134c8 <argp_parse@@Base+0x914>
   131bc:	ldr	r1, [pc, #776]	; 134cc <argp_parse@@Base+0x918>
   131c0:	b	1347c <argp_parse@@Base+0x8c8>
   131c4:	add	r0, r0, #36	; 0x24
   131c8:	b	1315c <argp_parse@@Base+0x5a8>
   131cc:	mov	r0, #36	; 0x24
   131d0:	ands	r1, r5, #8388608	; 0x800000
   131d4:	ldr	r3, [fp, #-136]	; 0xffffff78
   131d8:	movne	r1, #-16777216	; 0xff000000
   131dc:	bic	r2, r5, #-16777216	; 0xff000000
   131e0:	ldr	ip, [fp, #-112]	; 0xffffff90
   131e4:	mul	r0, r0, r8
   131e8:	orr	r2, r2, r1
   131ec:	sub	r1, fp, #96	; 0x60
   131f0:	sub	r0, r0, #36	; 0x24
   131f4:	add	r0, ip, r0
   131f8:	b	1317c <argp_parse@@Base+0x5c8>
   131fc:	cmp	r2, #0
   13200:	add	r3, r3, #16
   13204:	bne	1319c <argp_parse@@Base+0x5e8>
   13208:	ldr	r2, [pc, #692]	; 134c4 <argp_parse@@Base+0x910>
   1320c:	b	131b8 <argp_parse@@Base+0x604>
   13210:	cmp	r4, #7
   13214:	movne	r6, r2
   13218:	bne	1322c <argp_parse@@Base+0x678>
   1321c:	mov	r5, #1
   13220:	b	13484 <argp_parse@@Base+0x8d0>
   13224:	cmp	r0, #0
   13228:	beq	12f7c <argp_parse@@Base+0x3c8>
   1322c:	cmp	r4, #7
   13230:	movne	r6, #0
   13234:	andeq	r6, r6, #1
   13238:	cmp	r6, #0
   1323c:	beq	133a8 <argp_parse@@Base+0x7f4>
   13240:	ldr	r2, [fp, #-92]	; 0xffffffa4
   13244:	ldr	r3, [fp, #-84]	; 0xffffffac
   13248:	cmp	r3, r2
   1324c:	bne	1335c <argp_parse@@Base+0x7a8>
   13250:	ldr	r7, [pc, #632]	; 134d0 <argp_parse@@Base+0x91c>
   13254:	mov	r4, #0
   13258:	ldr	r6, [fp, #-112]	; 0xffffff90
   1325c:	ldr	r5, [fp, #-108]	; 0xffffff94
   13260:	cmp	r6, r5
   13264:	bcs	13274 <argp_parse@@Base+0x6c0>
   13268:	cmp	r4, #7
   1326c:	cmpne	r4, #0
   13270:	beq	132ac <argp_parse@@Base+0x6f8>
   13274:	ldr	r6, [pc, #600]	; 134d4 <argp_parse@@Base+0x920>
   13278:	sub	r5, r5, #36	; 0x24
   1327c:	ldr	r3, [fp, #-112]	; 0xffffff90
   13280:	cmp	r5, r3
   13284:	bcc	132f4 <argp_parse@@Base+0x740>
   13288:	cmp	r4, #7
   1328c:	cmpne	r4, #0
   13290:	beq	132d4 <argp_parse@@Base+0x720>
   13294:	ldr	r3, [fp, #4]
   13298:	cmp	r3, #0
   1329c:	bne	13308 <argp_parse@@Base+0x754>
   132a0:	b	1331c <argp_parse@@Base+0x768>
   132a4:	mov	r6, #1
   132a8:	b	130ec <argp_parse@@Base+0x538>
   132ac:	ldr	r3, [r6, #12]
   132b0:	cmp	r3, #0
   132b4:	bne	132cc <argp_parse@@Base+0x718>
   132b8:	mov	r2, r7
   132bc:	sub	r1, fp, #96	; 0x60
   132c0:	mov	r0, r6
   132c4:	bl	126f8 <putc_unlocked@plt+0x1378>
   132c8:	mov	r4, r0
   132cc:	add	r6, r6, #36	; 0x24
   132d0:	b	1325c <argp_parse@@Base+0x6a8>
   132d4:	mov	r0, r5
   132d8:	mov	r3, #0
   132dc:	mov	r2, r6
   132e0:	sub	r1, fp, #96	; 0x60
   132e4:	bl	126f8 <putc_unlocked@plt+0x1378>
   132e8:	mov	r4, r0
   132ec:	sub	r5, r5, #36	; 0x24
   132f0:	b	1327c <argp_parse@@Base+0x6c8>
   132f4:	cmp	r4, #7
   132f8:	ldr	r3, [fp, #4]
   132fc:	beq	133f8 <argp_parse@@Base+0x844>
   13300:	cmp	r3, #0
   13304:	beq	13314 <argp_parse@@Base+0x760>
   13308:	ldr	r3, [fp, #-84]	; 0xffffffac
   1330c:	ldr	r2, [fp, #4]
   13310:	str	r3, [r2]
   13314:	cmp	r4, #0
   13318:	beq	13404 <argp_parse@@Base+0x850>
   1331c:	ldr	r6, [pc, #436]	; 134d8 <argp_parse@@Base+0x924>
   13320:	ldr	r5, [fp, #-112]	; 0xffffff90
   13324:	ldr	r3, [fp, #-108]	; 0xffffff94
   13328:	cmp	r5, r3
   1332c:	bcc	133b4 <argp_parse@@Base+0x800>
   13330:	ldr	r5, [fp, #-108]	; 0xffffff94
   13334:	ldr	r6, [pc, #416]	; 134dc <argp_parse@@Base+0x928>
   13338:	sub	r5, r5, #36	; 0x24
   1333c:	ldr	r3, [fp, #-112]	; 0xffffff90
   13340:	cmp	r5, r3
   13344:	bcs	133dc <argp_parse@@Base+0x828>
   13348:	cmp	r4, #7
   1334c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13350:	moveq	r4, #22
   13354:	bl	1369c <argp_usage@@Base+0x170>
   13358:	b	12e9c <argp_parse@@Base+0x2e8>
   1335c:	ldr	r2, [fp, #4]
   13360:	cmp	r2, #0
   13364:	strne	r3, [r2]
   13368:	bne	13404 <argp_parse@@Base+0x850>
   1336c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13370:	tst	r3, #2
   13374:	bne	13390 <argp_parse@@Base+0x7dc>
   13378:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1337c:	cmp	r0, #0
   13380:	beq	13390 <argp_parse@@Base+0x7dc>
   13384:	ldr	r1, [pc, #340]	; 134e0 <argp_parse@@Base+0x92c>
   13388:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1338c:	bl	1123c <fprintf@plt>
   13390:	mov	r2, #260	; 0x104
   13394:	sub	r0, fp, #96	; 0x60
   13398:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1339c:	mov	r4, #7
   133a0:	bl	161cc <argp_state_help@@Base>
   133a4:	b	1331c <argp_parse@@Base+0x768>
   133a8:	cmp	r4, #7
   133ac:	bne	1331c <argp_parse@@Base+0x768>
   133b0:	b	13390 <argp_parse@@Base+0x7dc>
   133b4:	mov	r0, r5
   133b8:	mov	r3, #0
   133bc:	mov	r2, r6
   133c0:	sub	r1, fp, #96	; 0x60
   133c4:	bl	126f8 <putc_unlocked@plt+0x1378>
   133c8:	add	r5, r5, #36	; 0x24
   133cc:	b	13324 <argp_parse@@Base+0x770>
   133d0:	cmp	r4, #7
   133d4:	moveq	r4, #0
   133d8:	b	13330 <argp_parse@@Base+0x77c>
   133dc:	mov	r0, r5
   133e0:	mov	r3, #0
   133e4:	mov	r2, r6
   133e8:	sub	r1, fp, #96	; 0x60
   133ec:	bl	126f8 <putc_unlocked@plt+0x1378>
   133f0:	sub	r5, r5, #36	; 0x24
   133f4:	b	1333c <argp_parse@@Base+0x788>
   133f8:	cmp	r3, #0
   133fc:	movne	r4, #0
   13400:	bne	13308 <argp_parse@@Base+0x754>
   13404:	ldr	r5, [fp, #-108]	; 0xffffff94
   13408:	mov	r4, #0
   1340c:	ldr	r6, [pc, #208]	; 134e4 <argp_parse@@Base+0x930>
   13410:	sub	r5, r5, #36	; 0x24
   13414:	ldr	r3, [fp, #-112]	; 0xffffff90
   13418:	cmp	r5, r3
   1341c:	bcc	133d0 <argp_parse@@Base+0x81c>
   13420:	cmp	r4, #7
   13424:	cmpne	r4, #0
   13428:	bne	13330 <argp_parse@@Base+0x77c>
   1342c:	mov	r0, r5
   13430:	mov	r3, #0
   13434:	mov	r2, r6
   13438:	sub	r1, fp, #96	; 0x60
   1343c:	bl	126f8 <putc_unlocked@plt+0x1378>
   13440:	mov	r4, r0
   13444:	sub	r5, r5, #36	; 0x24
   13448:	b	13414 <argp_parse@@Base+0x860>
   1344c:	cmp	r0, #1
   13450:	beq	1304c <argp_parse@@Base+0x498>
   13454:	asrs	r8, r5, #24
   13458:	bne	131cc <argp_parse@@Base+0x618>
   1345c:	mov	r1, r5
   13460:	ldr	r0, [fp, #-156]	; 0xffffff64
   13464:	bl	11230 <strchr@plt>
   13468:	subs	r2, r0, #0
   1346c:	bne	13154 <argp_parse@@Base+0x5a0>
   13470:	ldr	r3, [pc, #80]	; 134c8 <argp_parse@@Base+0x914>
   13474:	mov	r2, r5
   13478:	ldr	r1, [pc, #104]	; 134e8 <argp_parse@@Base+0x934>
   1347c:	sub	r0, fp, #96	; 0x60
   13480:	bl	16270 <argp_error@@Base>
   13484:	add	r5, r5, #1
   13488:	bics	r3, r5, #2
   1348c:	moveq	r6, #1
   13490:	movne	r6, #0
   13494:	b	130ec <argp_parse@@Base+0x538>
   13498:	andeq	sp, r2, ip, lsr #17
   1349c:	andeq	sp, r2, r8, lsr #17
   134a0:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   134a4:	andeq	sp, r2, r8, lsr r9
   134a8:	ldrdeq	sp, [r2], -r0
   134ac:	strdeq	r8, [r1], -r4
   134b0:	tsteq	r0, r3
   134b4:			; <UNDEFINED> instruction: 0x0002d8b0
   134b8:			; <UNDEFINED> instruction: 0x0002d8b4
   134bc:	tsteq	r0, r6
   134c0:	andeq	r9, r1, ip, lsl r1
   134c4:	andeq	r9, r1, r8, lsl r1
   134c8:	andeq	r9, r1, r0, lsl r0
   134cc:	andeq	r9, r1, r7, lsr #2
   134d0:	tsteq	r0, r2
   134d4:	tsteq	r0, r1
   134d8:	tsteq	r0, r5
   134dc:	tsteq	r0, r7
   134e0:	andeq	r9, r1, r0, lsr r1
   134e4:	tsteq	r0, r4
   134e8:	andeq	r9, r1, pc, lsl r1
   134ec:	cmp	r1, #0
   134f0:	ldrne	r2, [r1, #52]	; 0x34
   134f4:	ldrne	r3, [r2, #48]	; 0x30
   134f8:	ldrne	r2, [r2, #52]	; 0x34
   134fc:	bne	1351c <argp_parse@@Base+0x968>
   13500:	mov	r0, r1
   13504:	bx	lr
   13508:	ldr	r1, [r3, #4]
   1350c:	cmp	r1, r0
   13510:	ldreq	r1, [r3, #24]
   13514:	beq	13500 <argp_parse@@Base+0x94c>
   13518:	add	r3, r3, #36	; 0x24
   1351c:	cmp	r2, r3
   13520:	bhi	13508 <argp_parse@@Base+0x954>
   13524:	mov	r1, #0
   13528:	b	13500 <argp_parse@@Base+0x94c>

0001352c <argp_usage@@Base>:
   1352c:	ldr	r3, [pc, #8]	; 1353c <argp_usage@@Base+0x10>
   13530:	movw	r2, #262	; 0x106
   13534:	ldr	r1, [r3]
   13538:	b	161cc <argp_state_help@@Base>
   1353c:			; <UNDEFINED> instruction: 0x0002d8b0
   13540:	ldr	r3, [r0, #12]
   13544:	ands	r3, r3, #8
   13548:	bne	1357c <argp_usage@@Base+0x50>
   1354c:	push	{r4, lr}
   13550:	ldr	r4, [r0, #4]
   13554:	sub	r2, r4, #1
   13558:	cmp	r2, #254	; 0xfe
   1355c:	bhi	13574 <argp_usage@@Base+0x48>
   13560:	bl	1120c <__ctype_b_loc@plt>
   13564:	ldr	r3, [r0]
   13568:	lsl	r4, r4, #1
   1356c:	ldrh	r3, [r3, r4]
   13570:	ubfx	r3, r3, #14, #1
   13574:	mov	r0, r3
   13578:	pop	{r4, pc}
   1357c:	mov	r3, #0
   13580:	mov	r0, r3
   13584:	bx	lr
   13588:	ldr	r3, [r0, #4]
   1358c:	cmp	r3, #0
   13590:	movne	r3, #0
   13594:	bne	135b8 <argp_usage@@Base+0x8c>
   13598:	ldr	r2, [r0]
   1359c:	cmp	r2, #0
   135a0:	bne	135b8 <argp_usage@@Base+0x8c>
   135a4:	ldr	r2, [r0, #16]
   135a8:	cmp	r2, #0
   135ac:	ldreq	r3, [r0, #20]
   135b0:	clzeq	r3, r3
   135b4:	lsreq	r3, r3, #5
   135b8:	mov	r0, r3
   135bc:	bx	lr
   135c0:	push	{r0, r1, r2, lr}
   135c4:	ldr	r1, [pc, #28]	; 135e8 <argp_usage@@Base+0xbc>
   135c8:	ldr	r2, [pc, #28]	; 135ec <argp_usage@@Base+0xc0>
   135cc:	ldr	r3, [r1, #4]
   135d0:	str	r3, [sp]
   135d4:	ldr	r3, [pc, #20]	; 135f0 <argp_usage@@Base+0xc4>
   135d8:	ldr	r1, [r1]
   135dc:	bl	13e20 <_obstack_memory_used@@Base+0x3ac>
   135e0:	add	sp, sp, #12
   135e4:	pop	{pc}		; (ldr pc, [sp], #4)
   135e8:	ldrdeq	sp, [r2], -r4
   135ec:	andeq	r9, r1, r0, lsl #4
   135f0:	strdeq	r9, [r1], -r3
   135f4:	ldr	r3, [pc, #16]	; 1360c <argp_usage@@Base+0xe0>
   135f8:	ldr	r2, [pc, #16]	; 13610 <argp_usage@@Base+0xe4>
   135fc:	str	r2, [r3]
   13600:	ldr	r3, [pc, #12]	; 13614 <argp_usage@@Base+0xe8>
   13604:	strd	r0, [r3]
   13608:	bx	lr
   1360c:	ldrdeq	sp, [r2], -r0
   13610:	andeq	r3, r1, r0, asr #11
   13614:	ldrdeq	sp, [r2], -r4
   13618:	mov	r3, r0
   1361c:	mov	r2, r3
   13620:	mov	r0, r3
   13624:	ldrb	r1, [r2], #1
   13628:	cmp	r1, #47	; 0x2f
   1362c:	beq	13638 <argp_usage@@Base+0x10c>
   13630:	mov	r2, #0
   13634:	b	13654 <argp_usage@@Base+0x128>
   13638:	mov	r3, r2
   1363c:	b	1361c <argp_usage@@Base+0xf0>
   13640:	cmp	r1, #47	; 0x2f
   13644:	moveq	r2, #1
   13648:	beq	13654 <argp_usage@@Base+0x128>
   1364c:	cmp	r2, #0
   13650:	bne	13668 <argp_usage@@Base+0x13c>
   13654:	mov	ip, r3
   13658:	ldrb	r1, [r3], #1
   1365c:	cmp	r1, #0
   13660:	bne	13640 <argp_usage@@Base+0x114>
   13664:	bx	lr
   13668:	mov	r0, ip
   1366c:	b	13630 <argp_usage@@Base+0x104>
   13670:	push	{r4, lr}
   13674:	mov	r4, r0
   13678:	bl	11224 <strlen@plt>
   1367c:	cmp	r0, #1
   13680:	popls	{r4, pc}
   13684:	sub	r3, r0, #1
   13688:	ldrb	r2, [r4, r3]
   1368c:	cmp	r2, #47	; 0x2f
   13690:	popne	{r4, pc}
   13694:	mov	r0, r3
   13698:	b	1367c <argp_usage@@Base+0x150>
   1369c:	push	{r0, r1, r2, r4, r5, lr}
   136a0:	mov	r5, r0
   136a4:	bl	11248 <__errno_location@plt>
   136a8:	mov	r4, r0
   136ac:	mov	r0, r5
   136b0:	ldr	r3, [r4]
   136b4:	str	r3, [sp]
   136b8:	str	r3, [sp, #4]
   136bc:	mov	r3, #0
   136c0:	str	r3, [r4]
   136c4:	bl	110f8 <free@plt>
   136c8:	ldr	r3, [r4]
   136cc:	add	r2, sp, #8
   136d0:	clz	r3, r3
   136d4:	lsr	r3, r3, #5
   136d8:	add	r3, r2, r3, lsl #2
   136dc:	ldr	r3, [r3, #-8]
   136e0:	str	r3, [r4]
   136e4:	add	sp, sp, #12
   136e8:	pop	{r4, r5, pc}
   136ec:	mov	ip, #0
   136f0:	push	{r0, r1, r2, r3, r4, lr}
   136f4:	str	ip, [sp, #4]
   136f8:	str	ip, [sp, #8]
   136fc:	ldr	ip, [sp, #24]
   13700:	str	ip, [sp]
   13704:	bl	16d30 <argp_error@@Base+0xac0>
   13708:	add	sp, sp, #20
   1370c:	pop	{pc}		; (ldr pc, [sp], #4)
   13710:	push	{r0, r1, r2, r3, r4, lr}
   13714:	mov	ip, #0
   13718:	ldr	lr, [sp, #28]
   1371c:	stmib	sp, {ip, lr}
   13720:	str	ip, [sp, #12]
   13724:	ldr	ip, [sp, #24]
   13728:	str	ip, [sp]
   1372c:	bl	1683c <argp_error@@Base+0x5cc>
   13730:	add	sp, sp, #20
   13734:	pop	{pc}		; (ldr pc, [sp], #4)
   13738:	push	{r0, r1, r2, r3, r4, lr}
   1373c:	mov	ip, #1
   13740:	mov	lr, #0
   13744:	stmib	sp, {ip, lr}
   13748:	ldr	ip, [sp, #24]
   1374c:	str	ip, [sp]
   13750:	bl	16d30 <argp_error@@Base+0xac0>
   13754:	add	sp, sp, #20
   13758:	pop	{pc}		; (ldr pc, [sp], #4)
   1375c:	mov	ip, #0
   13760:	push	{r0, r1, r2, r3, r4, lr}
   13764:	str	ip, [sp, #12]
   13768:	ldr	ip, [sp, #28]
   1376c:	str	ip, [sp, #8]
   13770:	mov	ip, #1
   13774:	str	ip, [sp, #4]
   13778:	ldr	ip, [sp, #24]
   1377c:	str	ip, [sp]
   13780:	bl	1683c <argp_error@@Base+0x5cc>
   13784:	add	sp, sp, #20
   13788:	pop	{pc}		; (ldr pc, [sp], #4)
   1378c:	ldr	r3, [pc, #28]	; 137b0 <argp_usage@@Base+0x284>
   13790:	push	{r4, lr}
   13794:	ldr	r2, [pc, #24]	; 137b4 <argp_usage@@Base+0x288>
   13798:	ldr	r1, [pc, #24]	; 137b8 <argp_usage@@Base+0x28c>
   1379c:	ldr	r0, [r3]
   137a0:	bl	1123c <fprintf@plt>
   137a4:	ldr	r3, [pc, #16]	; 137bc <argp_usage@@Base+0x290>
   137a8:	ldr	r0, [r3]
   137ac:	bl	11218 <exit@plt>
   137b0:			; <UNDEFINED> instruction: 0x0002d8b0
   137b4:	andeq	r9, r1, lr, lsl #4
   137b8:	andeq	r9, r1, fp, ror #4
   137bc:	muleq	r2, r4, r8
   137c0:	mov	r3, r0
   137c4:	mov	r0, r1
   137c8:	ldrb	ip, [r3, #40]	; 0x28
   137cc:	ldr	r2, [r3, #28]
   137d0:	tst	ip, #1
   137d4:	beq	137e0 <argp_usage@@Base+0x2b4>
   137d8:	ldr	r0, [r3, #36]	; 0x24
   137dc:	bx	r2
   137e0:	bx	r2
   137e4:	mov	r3, r0
   137e8:	mov	r0, r1
   137ec:	ldrb	ip, [r3, #40]	; 0x28
   137f0:	ldr	r2, [r3, #32]
   137f4:	tst	ip, #1
   137f8:	beq	13804 <argp_usage@@Base+0x2d8>
   137fc:	ldr	r0, [r3, #36]	; 0x24
   13800:	bx	r2
   13804:	bx	r2
   13808:	push	{r4, r5, r6, lr}
   1380c:	subs	r5, r2, #0
   13810:	movw	r3, #4072	; 0xfe8
   13814:	moveq	r5, #8
   13818:	cmp	r1, #0
   1381c:	moveq	r1, r3
   13820:	sub	r6, r5, #1
   13824:	mov	r4, r0
   13828:	str	r1, [r0]
   1382c:	str	r6, [r0, #24]
   13830:	bl	137c0 <argp_usage@@Base+0x294>
   13834:	cmp	r0, #0
   13838:	str	r0, [r4, #4]
   1383c:	bne	1384c <argp_usage@@Base+0x320>
   13840:	ldr	r3, [pc, #72]	; 13890 <argp_usage@@Base+0x364>
   13844:	ldr	r3, [r3]
   13848:	blx	r3
   1384c:	add	r3, r0, #8
   13850:	rsb	r2, r5, #0
   13854:	add	r3, r3, r6
   13858:	and	r2, r2, r3
   1385c:	ldr	r3, [r4]
   13860:	str	r2, [r4, #8]
   13864:	str	r2, [r4, #12]
   13868:	add	r3, r0, r3
   1386c:	str	r3, [r0]
   13870:	str	r3, [r4, #16]
   13874:	mov	r3, #0
   13878:	str	r3, [r0, #4]
   1387c:	mov	r0, #1
   13880:	ldrb	r3, [r4, #40]	; 0x28
   13884:	bic	r3, r3, #6
   13888:	strb	r3, [r4, #40]	; 0x28
   1388c:	pop	{r4, r5, r6, pc}
   13890:	andeq	sp, r2, r8, ror #16

00013894 <_obstack_begin@@Base>:
   13894:	str	r3, [r0, #28]
   13898:	ldr	r3, [sp]
   1389c:	str	r3, [r0, #32]
   138a0:	ldrb	r3, [r0, #40]	; 0x28
   138a4:	bfc	r3, #0, #1
   138a8:	strb	r3, [r0, #40]	; 0x28
   138ac:	b	13808 <argp_usage@@Base+0x2dc>

000138b0 <_obstack_begin_1@@Base>:
   138b0:	str	r3, [r0, #28]
   138b4:	ldr	r3, [sp]
   138b8:	str	r3, [r0, #32]
   138bc:	ldr	r3, [sp, #4]
   138c0:	str	r3, [r0, #36]	; 0x24
   138c4:	ldrb	r3, [r0, #40]	; 0x28
   138c8:	orr	r3, r3, #1
   138cc:	strb	r3, [r0, #40]	; 0x28
   138d0:	b	13808 <argp_usage@@Base+0x2dc>

000138d4 <_obstack_newchunk@@Base>:
   138d4:	push	{r4, r5, r6, r7, r8, lr}
   138d8:	ldr	r7, [r0, #4]
   138dc:	ldr	r3, [r0, #8]
   138e0:	ldr	r5, [r0, #12]
   138e4:	sub	r6, r5, r3
   138e8:	ldr	r3, [r0, #24]
   138ec:	adds	r1, r6, r1
   138f0:	movcs	ip, #1
   138f4:	movcc	ip, #0
   138f8:	eor	ip, ip, #1
   138fc:	adds	r3, r3, r1
   13900:	ldr	r1, [r0]
   13904:	add	r5, r3, r6, lsr #3
   13908:	movcs	r2, #1
   1390c:	movcc	r2, #0
   13910:	add	r5, r5, #100	; 0x64
   13914:	cmp	r3, r1
   13918:	movcc	r3, r1
   1391c:	cmp	r3, r5
   13920:	movcs	r5, r3
   13924:	eor	r3, r2, #1
   13928:	tst	ip, r3
   1392c:	bne	1393c <_obstack_newchunk@@Base+0x68>
   13930:	ldr	r3, [pc, #164]	; 139dc <_obstack_newchunk@@Base+0x108>
   13934:	ldr	r3, [r3]
   13938:	blx	r3
   1393c:	mov	r1, r5
   13940:	mov	r4, r0
   13944:	bl	137c0 <argp_usage@@Base+0x294>
   13948:	subs	r8, r0, #0
   1394c:	beq	13930 <_obstack_newchunk@@Base+0x5c>
   13950:	add	r5, r8, r5
   13954:	mov	r3, r8
   13958:	str	r8, [r4, #4]
   1395c:	ldr	r1, [r4, #8]
   13960:	mov	r2, r6
   13964:	str	r7, [r8, #4]
   13968:	str	r5, [r4, #16]
   1396c:	str	r5, [r3], #8
   13970:	ldr	r5, [r4, #24]
   13974:	add	r3, r3, r5
   13978:	bic	r5, r3, r5
   1397c:	mov	r0, r5
   13980:	bl	11134 <memcpy@plt>
   13984:	ldrb	r3, [r4, #40]	; 0x28
   13988:	tst	r3, #2
   1398c:	bne	139c0 <_obstack_newchunk@@Base+0xec>
   13990:	ldr	r2, [r4, #24]
   13994:	add	r3, r7, #8
   13998:	add	r3, r3, r2
   1399c:	bic	r3, r3, r2
   139a0:	ldr	r2, [r4, #8]
   139a4:	cmp	r2, r3
   139a8:	bne	139c0 <_obstack_newchunk@@Base+0xec>
   139ac:	ldr	r3, [r7, #4]
   139b0:	mov	r1, r7
   139b4:	mov	r0, r4
   139b8:	str	r3, [r8, #4]
   139bc:	bl	137e4 <argp_usage@@Base+0x2b8>
   139c0:	ldrb	r3, [r4, #40]	; 0x28
   139c4:	str	r5, [r4, #8]
   139c8:	add	r5, r5, r6
   139cc:	str	r5, [r4, #12]
   139d0:	bfc	r3, #1, #1
   139d4:	strb	r3, [r4, #40]	; 0x28
   139d8:	pop	{r4, r5, r6, r7, r8, pc}
   139dc:	andeq	sp, r2, r8, ror #16

000139e0 <_obstack_allocated_p@@Base>:
   139e0:	ldr	r0, [r0, #4]
   139e4:	cmp	r0, #0
   139e8:	beq	13a00 <_obstack_allocated_p@@Base+0x20>
   139ec:	cmp	r0, r1
   139f0:	bcs	139e0 <_obstack_allocated_p@@Base>
   139f4:	ldr	r3, [r0]
   139f8:	cmp	r3, r1
   139fc:	bcc	139e0 <_obstack_allocated_p@@Base>
   13a00:	adds	r0, r0, #0
   13a04:	movne	r0, #1
   13a08:	bx	lr

00013a0c <_obstack_free@@Base>:
   13a0c:	push	{r4, r5, r6, lr}
   13a10:	mov	r5, r1
   13a14:	mov	r4, r0
   13a18:	ldr	r1, [r0, #4]
   13a1c:	cmp	r1, #0
   13a20:	beq	13a68 <_obstack_free@@Base+0x5c>
   13a24:	cmp	r1, r5
   13a28:	bcs	13a48 <_obstack_free@@Base+0x3c>
   13a2c:	ldr	r3, [r1]
   13a30:	cmp	r3, r5
   13a34:	bcc	13a48 <_obstack_free@@Base+0x3c>
   13a38:	stmib	r4, {r1, r5}
   13a3c:	str	r5, [r4, #12]
   13a40:	str	r3, [r4, #16]
   13a44:	pop	{r4, r5, r6, pc}
   13a48:	mov	r0, r4
   13a4c:	ldr	r6, [r1, #4]
   13a50:	bl	137e4 <argp_usage@@Base+0x2b8>
   13a54:	ldrb	r3, [r4, #40]	; 0x28
   13a58:	mov	r1, r6
   13a5c:	orr	r3, r3, #2
   13a60:	strb	r3, [r4, #40]	; 0x28
   13a64:	b	13a1c <_obstack_free@@Base+0x10>
   13a68:	cmp	r5, #0
   13a6c:	popeq	{r4, r5, r6, pc}
   13a70:	bl	11350 <abort@plt>

00013a74 <_obstack_memory_used@@Base>:
   13a74:	ldr	r3, [r0, #4]
   13a78:	mov	r0, #0
   13a7c:	cmp	r3, #0
   13a80:	bxeq	lr
   13a84:	ldr	r2, [r3]
   13a88:	sub	r2, r2, r3
   13a8c:	ldr	r3, [r3, #4]
   13a90:	add	r0, r0, r2
   13a94:	b	13a7c <_obstack_memory_used@@Base+0x8>
   13a98:	push	{r4, r5, r6, lr}
   13a9c:	subs	r4, r0, #0
   13aa0:	bne	13ab8 <_obstack_memory_used@@Base+0x44>
   13aa4:	ldr	r3, [pc, #124]	; 13b28 <_obstack_memory_used@@Base+0xb4>
   13aa8:	ldr	r0, [pc, #124]	; 13b2c <_obstack_memory_used@@Base+0xb8>
   13aac:	ldr	r1, [r3]
   13ab0:	bl	11338 <fputs@plt>
   13ab4:	bl	11350 <abort@plt>
   13ab8:	mov	r1, #47	; 0x2f
   13abc:	bl	11290 <strrchr@plt>
   13ac0:	subs	r6, r0, #0
   13ac4:	beq	13b14 <_obstack_memory_used@@Base+0xa0>
   13ac8:	add	r5, r6, #1
   13acc:	sub	r3, r5, r4
   13ad0:	cmp	r3, #6
   13ad4:	ble	13b14 <_obstack_memory_used@@Base+0xa0>
   13ad8:	mov	r2, #7
   13adc:	ldr	r1, [pc, #76]	; 13b30 <_obstack_memory_used@@Base+0xbc>
   13ae0:	sub	r0, r6, #6
   13ae4:	bl	11344 <strncmp@plt>
   13ae8:	cmp	r0, #0
   13aec:	bne	13b14 <_obstack_memory_used@@Base+0xa0>
   13af0:	mov	r2, #3
   13af4:	ldr	r1, [pc, #56]	; 13b34 <_obstack_memory_used@@Base+0xc0>
   13af8:	mov	r0, r5
   13afc:	bl	11344 <strncmp@plt>
   13b00:	cmp	r0, #0
   13b04:	ldreq	r3, [pc, #44]	; 13b38 <_obstack_memory_used@@Base+0xc4>
   13b08:	addeq	r4, r6, #4
   13b0c:	movne	r4, r5
   13b10:	streq	r4, [r3]
   13b14:	ldr	r3, [pc, #32]	; 13b3c <_obstack_memory_used@@Base+0xc8>
   13b18:	str	r4, [r3]
   13b1c:	ldr	r3, [pc, #28]	; 13b40 <_obstack_memory_used@@Base+0xcc>
   13b20:	str	r4, [r3]
   13b24:	pop	{r4, r5, r6, pc}
   13b28:			; <UNDEFINED> instruction: 0x0002d8b0
   13b2c:	andeq	r9, r1, pc, lsl r2
   13b30:	andeq	r9, r1, r7, asr r2
   13b34:	andeq	r9, r1, pc, asr r2
   13b38:	andeq	sp, r2, r8, lsr #17
   13b3c:	ldrdeq	sp, [r2], -ip
   13b40:	andeq	sp, r2, ip, lsr #17
   13b44:	push	{r4, r5, r6, lr}
   13b48:	cmp	r1, #0
   13b4c:	sub	sp, sp, #32
   13b50:	mov	r5, r0
   13b54:	ldr	r4, [sp, #48]	; 0x30
   13b58:	ldr	r6, [sp, #52]	; 0x34
   13b5c:	beq	13be8 <_obstack_memory_used@@Base+0x174>
   13b60:	mov	lr, r3
   13b64:	mov	r3, r2
   13b68:	mov	r2, r1
   13b6c:	ldr	r1, [pc, #620]	; 13de0 <_obstack_memory_used@@Base+0x36c>
   13b70:	str	lr, [sp]
   13b74:	bl	1123c <fprintf@plt>
   13b78:	movw	r3, #2022	; 0x7e6
   13b7c:	ldr	r2, [pc, #608]	; 13de4 <_obstack_memory_used@@Base+0x370>
   13b80:	mov	r0, r5
   13b84:	ldr	r1, [pc, #604]	; 13de8 <_obstack_memory_used@@Base+0x374>
   13b88:	bl	1123c <fprintf@plt>
   13b8c:	mov	r1, r5
   13b90:	mov	r0, #10
   13b94:	bl	112a8 <fputc@plt>
   13b98:	ldr	r1, [pc, #588]	; 13dec <_obstack_memory_used@@Base+0x378>
   13b9c:	mov	r0, r5
   13ba0:	ldr	r2, [pc, #584]	; 13df0 <_obstack_memory_used@@Base+0x37c>
   13ba4:	bl	1123c <fprintf@plt>
   13ba8:	mov	r1, r5
   13bac:	mov	r0, #10
   13bb0:	bl	112a8 <fputc@plt>
   13bb4:	cmp	r6, #9
   13bb8:	ldrls	pc, [pc, r6, lsl #2]
   13bbc:	b	13d9c <_obstack_memory_used@@Base+0x328>
   13bc0:	muleq	r1, r4, ip
   13bc4:	strdeq	r3, [r1], -r4
   13bc8:	andeq	r3, r1, ip, lsl #24
   13bcc:	andeq	r3, r1, r4, lsr #24
   13bd0:	andeq	r3, r1, r4, asr #24
   13bd4:	andeq	r3, r1, ip, ror #24
   13bd8:	muleq	r1, ip, ip
   13bdc:	ldrdeq	r3, [r1], -r0
   13be0:	andeq	r3, r1, ip, lsl #26
   13be4:	andeq	r3, r1, r0, asr sp
   13be8:	ldr	r1, [pc, #516]	; 13df4 <_obstack_memory_used@@Base+0x380>
   13bec:	bl	1123c <fprintf@plt>
   13bf0:	b	13b78 <_obstack_memory_used@@Base+0x104>
   13bf4:	ldr	r1, [pc, #508]	; 13df8 <_obstack_memory_used@@Base+0x384>
   13bf8:	mov	r0, r5
   13bfc:	ldr	r2, [r4]
   13c00:	add	sp, sp, #32
   13c04:	pop	{r4, r5, r6, lr}
   13c08:	b	1123c <fprintf@plt>
   13c0c:	ldr	r1, [pc, #488]	; 13dfc <_obstack_memory_used@@Base+0x388>
   13c10:	mov	r0, r5
   13c14:	ldrd	r2, [r4]
   13c18:	add	sp, sp, #32
   13c1c:	pop	{r4, r5, r6, lr}
   13c20:	b	1123c <fprintf@plt>
   13c24:	ldr	r3, [r4, #8]
   13c28:	mov	r0, r5
   13c2c:	ldr	r1, [pc, #460]	; 13e00 <_obstack_memory_used@@Base+0x38c>
   13c30:	str	r3, [sp, #48]	; 0x30
   13c34:	ldrd	r2, [r4]
   13c38:	add	sp, sp, #32
   13c3c:	pop	{r4, r5, r6, lr}
   13c40:	b	1123c <fprintf@plt>
   13c44:	ldr	r3, [r4, #12]
   13c48:	mov	r0, r5
   13c4c:	ldr	r1, [pc, #432]	; 13e04 <_obstack_memory_used@@Base+0x390>
   13c50:	str	r3, [sp, #52]	; 0x34
   13c54:	ldr	r3, [r4, #8]
   13c58:	str	r3, [sp, #48]	; 0x30
   13c5c:	ldrd	r2, [r4]
   13c60:	add	sp, sp, #32
   13c64:	pop	{r4, r5, r6, lr}
   13c68:	b	1123c <fprintf@plt>
   13c6c:	ldr	r3, [r4, #16]
   13c70:	mov	r0, r5
   13c74:	ldr	r1, [pc, #396]	; 13e08 <_obstack_memory_used@@Base+0x394>
   13c78:	str	r3, [sp, #8]
   13c7c:	ldr	r3, [r4, #12]
   13c80:	str	r3, [sp, #4]
   13c84:	ldr	r3, [r4, #8]
   13c88:	str	r3, [sp]
   13c8c:	ldrd	r2, [r4]
   13c90:	bl	1123c <fprintf@plt>
   13c94:	add	sp, sp, #32
   13c98:	pop	{r4, r5, r6, pc}
   13c9c:	ldr	r3, [r4, #20]
   13ca0:	mov	r0, r5
   13ca4:	ldr	r1, [pc, #352]	; 13e0c <_obstack_memory_used@@Base+0x398>
   13ca8:	str	r3, [sp, #12]
   13cac:	ldr	r3, [r4, #16]
   13cb0:	str	r3, [sp, #8]
   13cb4:	ldr	r3, [r4, #12]
   13cb8:	str	r3, [sp, #4]
   13cbc:	ldr	r3, [r4, #8]
   13cc0:	str	r3, [sp]
   13cc4:	ldrd	r2, [r4]
   13cc8:	bl	1123c <fprintf@plt>
   13ccc:	b	13c94 <_obstack_memory_used@@Base+0x220>
   13cd0:	ldr	r3, [r4, #24]
   13cd4:	mov	r0, r5
   13cd8:	ldr	r1, [pc, #304]	; 13e10 <_obstack_memory_used@@Base+0x39c>
   13cdc:	str	r3, [sp, #16]
   13ce0:	ldr	r3, [r4, #20]
   13ce4:	str	r3, [sp, #12]
   13ce8:	ldr	r3, [r4, #16]
   13cec:	str	r3, [sp, #8]
   13cf0:	ldr	r3, [r4, #12]
   13cf4:	str	r3, [sp, #4]
   13cf8:	ldr	r3, [r4, #8]
   13cfc:	str	r3, [sp]
   13d00:	ldrd	r2, [r4]
   13d04:	bl	1123c <fprintf@plt>
   13d08:	b	13c94 <_obstack_memory_used@@Base+0x220>
   13d0c:	ldr	r3, [r4, #28]
   13d10:	mov	r0, r5
   13d14:	ldr	r1, [pc, #248]	; 13e14 <_obstack_memory_used@@Base+0x3a0>
   13d18:	str	r3, [sp, #20]
   13d1c:	ldr	r3, [r4, #24]
   13d20:	str	r3, [sp, #16]
   13d24:	ldr	r3, [r4, #20]
   13d28:	str	r3, [sp, #12]
   13d2c:	ldr	r3, [r4, #16]
   13d30:	str	r3, [sp, #8]
   13d34:	ldr	r3, [r4, #12]
   13d38:	str	r3, [sp, #4]
   13d3c:	ldr	r3, [r4, #8]
   13d40:	str	r3, [sp]
   13d44:	ldrd	r2, [r4]
   13d48:	bl	1123c <fprintf@plt>
   13d4c:	b	13c94 <_obstack_memory_used@@Base+0x220>
   13d50:	ldr	r3, [r4, #32]
   13d54:	ldr	r1, [pc, #188]	; 13e18 <_obstack_memory_used@@Base+0x3a4>
   13d58:	str	r3, [sp, #24]
   13d5c:	ldr	r3, [r4, #28]
   13d60:	str	r3, [sp, #20]
   13d64:	ldr	r3, [r4, #24]
   13d68:	str	r3, [sp, #16]
   13d6c:	ldr	r3, [r4, #20]
   13d70:	str	r3, [sp, #12]
   13d74:	ldr	r3, [r4, #16]
   13d78:	str	r3, [sp, #8]
   13d7c:	ldr	r3, [r4, #12]
   13d80:	str	r3, [sp, #4]
   13d84:	ldr	r3, [r4, #8]
   13d88:	str	r3, [sp]
   13d8c:	ldrd	r2, [r4]
   13d90:	mov	r0, r5
   13d94:	bl	1123c <fprintf@plt>
   13d98:	b	13c94 <_obstack_memory_used@@Base+0x220>
   13d9c:	ldr	r3, [r4, #32]
   13da0:	ldr	r1, [pc, #116]	; 13e1c <_obstack_memory_used@@Base+0x3a8>
   13da4:	str	r3, [sp, #24]
   13da8:	ldr	r3, [r4, #28]
   13dac:	str	r3, [sp, #20]
   13db0:	ldr	r3, [r4, #24]
   13db4:	str	r3, [sp, #16]
   13db8:	ldr	r3, [r4, #20]
   13dbc:	str	r3, [sp, #12]
   13dc0:	ldr	r3, [r4, #16]
   13dc4:	str	r3, [sp, #8]
   13dc8:	ldr	r3, [r4, #12]
   13dcc:	str	r3, [sp, #4]
   13dd0:	ldr	r3, [r4, #8]
   13dd4:	str	r3, [sp]
   13dd8:	ldrd	r2, [r4]
   13ddc:	b	13d90 <_obstack_memory_used@@Base+0x31c>
   13de0:	andeq	r9, r1, r3, ror #4
   13de4:	andeq	r9, r1, r6, ror r2
   13de8:	andeq	r9, r1, fp, ror #10
   13dec:	muleq	r1, ip, r2
   13df0:	andeq	r9, r1, sl, ror r2
   13df4:	andeq	r9, r1, pc, ror #4
   13df8:	andeq	r9, r1, r7, asr #6
   13dfc:	andeq	r9, r1, r7, asr r3
   13e00:	andeq	r9, r1, lr, ror #6
   13e04:	andeq	r9, r1, sl, lsl #7
   13e08:	andeq	r9, r1, sl, lsr #7
   13e0c:	andeq	r9, r1, lr, asr #7
   13e10:	strdeq	r9, [r1], -r6
   13e14:	andeq	r9, r1, r2, lsr #8
   13e18:	andeq	r9, r1, r2, asr r4
   13e1c:	andeq	r9, r1, r6, lsl #9
   13e20:	push	{r0, r1, r4, lr}
   13e24:	mov	ip, #0
   13e28:	ldr	lr, [sp, #16]
   13e2c:	ldr	r4, [lr, ip, lsl #2]
   13e30:	cmp	r4, #0
   13e34:	bne	13e4c <_obstack_memory_used@@Base+0x3d8>
   13e38:	str	lr, [sp]
   13e3c:	str	ip, [sp, #4]
   13e40:	bl	13b44 <_obstack_memory_used@@Base+0xd0>
   13e44:	add	sp, sp, #8
   13e48:	pop	{r4, pc}
   13e4c:	add	ip, ip, #1
   13e50:	b	13e2c <_obstack_memory_used@@Base+0x3b8>
   13e54:	push	{r4, r5, r6, lr}
   13e58:	sub	sp, sp, #48	; 0x30
   13e5c:	mov	ip, #0
   13e60:	add	lr, sp, #8
   13e64:	mov	r5, lr
   13e68:	ldr	r6, [sp, #64]	; 0x40
   13e6c:	ldr	r4, [r6, ip, lsl #2]
   13e70:	cmp	r4, #0
   13e74:	str	r4, [lr], #4
   13e78:	beq	13e88 <_obstack_memory_used@@Base+0x414>
   13e7c:	add	ip, ip, #1
   13e80:	cmp	ip, #10
   13e84:	bne	13e6c <_obstack_memory_used@@Base+0x3f8>
   13e88:	stm	sp, {r5, ip}
   13e8c:	bl	13b44 <_obstack_memory_used@@Base+0xd0>
   13e90:	add	sp, sp, #48	; 0x30
   13e94:	pop	{r4, r5, r6, pc}
   13e98:	push	{r3}		; (str r3, [sp, #-4]!)
   13e9c:	push	{r0, r1, r2, r3, lr}
   13ea0:	add	r3, sp, #24
   13ea4:	str	r3, [sp]
   13ea8:	str	r3, [sp, #12]
   13eac:	ldr	r3, [sp, #20]
   13eb0:	bl	13e54 <_obstack_memory_used@@Base+0x3e0>
   13eb4:	add	sp, sp, #16
   13eb8:	pop	{lr}		; (ldr lr, [sp], #4)
   13ebc:	add	sp, sp, #4
   13ec0:	bx	lr
   13ec4:	ldr	r3, [pc, #56]	; 13f04 <_obstack_memory_used@@Base+0x490>
   13ec8:	mov	r0, #10
   13ecc:	push	{r4, lr}
   13ed0:	ldr	r1, [r3]
   13ed4:	bl	112a8 <fputc@plt>
   13ed8:	ldr	r1, [pc, #40]	; 13f08 <_obstack_memory_used@@Base+0x494>
   13edc:	ldr	r0, [pc, #40]	; 13f0c <_obstack_memory_used@@Base+0x498>
   13ee0:	bl	110d4 <printf@plt>
   13ee4:	ldr	r1, [pc, #36]	; 13f10 <_obstack_memory_used@@Base+0x49c>
   13ee8:	ldr	r2, [pc, #36]	; 13f14 <_obstack_memory_used@@Base+0x4a0>
   13eec:	ldr	r0, [pc, #36]	; 13f18 <_obstack_memory_used@@Base+0x4a4>
   13ef0:	bl	110d4 <printf@plt>
   13ef4:	ldr	r1, [pc, #32]	; 13f1c <_obstack_memory_used@@Base+0x4a8>
   13ef8:	pop	{r4, lr}
   13efc:	ldr	r0, [pc, #28]	; 13f20 <_obstack_memory_used@@Base+0x4ac>
   13f00:	b	110d4 <printf@plt>
   13f04:			; <UNDEFINED> instruction: 0x0002d8b4
   13f08:	andeq	r9, r1, r2, asr #9
   13f0c:	ldrdeq	r9, [r1], -r8
   13f10:	andeq	r9, r1, r0, lsl #4
   13f14:	andeq	r9, r1, ip, ror #9
   13f18:	andeq	r9, r1, r3, lsl r5
   13f1c:	andeq	r9, r1, r7, lsr #10
   13f20:	andeq	r9, r1, r4, asr #10
   13f24:	push	{r4, lr}
   13f28:	bl	1425c <_obstack_memory_used@@Base+0x7e8>
   13f2c:	cmp	r0, #0
   13f30:	popne	{r4, pc}
   13f34:	bl	141dc <_obstack_memory_used@@Base+0x768>
   13f38:	push	{r4, lr}
   13f3c:	bl	1425c <_obstack_memory_used@@Base+0x7e8>
   13f40:	cmp	r0, #0
   13f44:	popne	{r4, pc}
   13f48:	bl	141dc <_obstack_memory_used@@Base+0x768>
   13f4c:	b	13f24 <_obstack_memory_used@@Base+0x4b0>
   13f50:	push	{r4, r5, r6, lr}
   13f54:	mov	r5, r0
   13f58:	mov	r4, r1
   13f5c:	bl	14288 <_obstack_memory_used@@Base+0x814>
   13f60:	cmp	r0, #0
   13f64:	popne	{r4, r5, r6, pc}
   13f68:	adds	r4, r4, #0
   13f6c:	movne	r4, #1
   13f70:	cmp	r5, #0
   13f74:	moveq	r4, #1
   13f78:	cmp	r4, #0
   13f7c:	popeq	{r4, r5, r6, pc}
   13f80:	bl	141dc <_obstack_memory_used@@Base+0x768>
   13f84:	push	{r4, lr}
   13f88:	bl	16dc8 <argp_error@@Base+0xb58>
   13f8c:	cmp	r0, #0
   13f90:	popne	{r4, pc}
   13f94:	bl	141dc <_obstack_memory_used@@Base+0x768>
   13f98:	push	{r4, r5, r6, lr}
   13f9c:	mov	r6, r0
   13fa0:	mov	r5, r1
   13fa4:	mov	r4, r2
   13fa8:	bl	16dec <argp_error@@Base+0xb7c>
   13fac:	cmp	r0, #0
   13fb0:	popne	{r4, r5, r6, pc}
   13fb4:	cmp	r6, #0
   13fb8:	beq	13fc8 <_obstack_memory_used@@Base+0x554>
   13fbc:	cmp	r5, #0
   13fc0:	cmpne	r4, #0
   13fc4:	popeq	{r4, r5, r6, pc}
   13fc8:	bl	141dc <_obstack_memory_used@@Base+0x768>
   13fcc:	b	13f98 <_obstack_memory_used@@Base+0x524>
   13fd0:	push	{r4, lr}
   13fd4:	bl	16dd8 <argp_error@@Base+0xb68>
   13fd8:	cmp	r0, #0
   13fdc:	popne	{r4, pc}
   13fe0:	bl	141dc <_obstack_memory_used@@Base+0x768>
   13fe4:	mov	r2, r1
   13fe8:	mov	r1, r0
   13fec:	mov	r0, #0
   13ff0:	b	13f98 <_obstack_memory_used@@Base+0x524>
   13ff4:	mov	r2, r1
   13ff8:	mov	r1, r0
   13ffc:	mov	r0, #0
   14000:	b	13fd0 <_obstack_memory_used@@Base+0x55c>
   14004:	cmp	r0, #0
   14008:	push	{r4, r5, r6, lr}
   1400c:	mov	r5, r1
   14010:	ldr	r4, [r1]
   14014:	bne	14040 <_obstack_memory_used@@Base+0x5cc>
   14018:	cmp	r4, #0
   1401c:	bne	14030 <_obstack_memory_used@@Base+0x5bc>
   14020:	mov	r4, #64	; 0x40
   14024:	udiv	r4, r4, r2
   14028:	cmp	r2, #64	; 0x40
   1402c:	addhi	r4, r4, #1
   14030:	mov	r1, r4
   14034:	bl	13f98 <_obstack_memory_used@@Base+0x524>
   14038:	str	r4, [r5]
   1403c:	pop	{r4, r5, r6, pc}
   14040:	lsr	r3, r4, #1
   14044:	add	r3, r3, #1
   14048:	adds	r4, r4, r3
   1404c:	bcc	14030 <_obstack_memory_used@@Base+0x5bc>
   14050:	bl	141dc <_obstack_memory_used@@Base+0x768>
   14054:	mov	r2, #1
   14058:	b	14004 <_obstack_memory_used@@Base+0x590>
   1405c:	ldr	ip, [r1]
   14060:	push	{r4, r5, r6, r7, r8, lr}
   14064:	mov	r5, r1
   14068:	mvn	r8, r3
   1406c:	lsr	r8, r8, #31
   14070:	ldr	lr, [sp, #24]
   14074:	asr	r1, ip, #1
   14078:	adds	r4, ip, r1
   1407c:	mvnvs	r4, #-2147483648	; 0x80000000
   14080:	cmp	r3, r4
   14084:	movge	r1, #0
   14088:	andlt	r1, r8, #1
   1408c:	cmp	r1, #0
   14090:	movne	r4, r3
   14094:	smull	r6, r7, r4, lr
   14098:	cmp	r7, r6, asr #31
   1409c:	bne	140b4 <_obstack_memory_used@@Base+0x640>
   140a0:	cmp	r6, #63	; 0x3f
   140a4:	mov	r1, r6
   140a8:	bgt	140c4 <_obstack_memory_used@@Base+0x650>
   140ac:	mov	r1, #64	; 0x40
   140b0:	b	140b8 <_obstack_memory_used@@Base+0x644>
   140b4:	mvn	r1, #-2147483648	; 0x80000000
   140b8:	sdiv	r4, r1, lr
   140bc:	mls	r6, lr, r4, r1
   140c0:	sub	r1, r1, r6
   140c4:	cmp	r0, #0
   140c8:	sub	r6, r4, ip
   140cc:	streq	r0, [r5]
   140d0:	cmp	r6, r2
   140d4:	bge	14108 <_obstack_memory_used@@Base+0x694>
   140d8:	adds	r4, ip, r2
   140dc:	bvs	14104 <_obstack_memory_used@@Base+0x690>
   140e0:	cmp	r4, r3
   140e4:	movle	r3, #0
   140e8:	andgt	r3, r8, #1
   140ec:	cmp	r3, #0
   140f0:	bne	14104 <_obstack_memory_used@@Base+0x690>
   140f4:	smull	r2, r3, r4, lr
   140f8:	cmp	r3, r2, asr #31
   140fc:	mov	r1, r2
   14100:	beq	14108 <_obstack_memory_used@@Base+0x694>
   14104:	bl	141dc <_obstack_memory_used@@Base+0x768>
   14108:	bl	13f50 <_obstack_memory_used@@Base+0x4dc>
   1410c:	str	r4, [r5]
   14110:	pop	{r4, r5, r6, r7, r8, pc}
   14114:	push	{r4, lr}
   14118:	bl	14208 <_obstack_memory_used@@Base+0x794>
   1411c:	cmp	r0, #0
   14120:	popne	{r4, pc}
   14124:	bl	141dc <_obstack_memory_used@@Base+0x768>
   14128:	mov	r1, #1
   1412c:	b	14114 <_obstack_memory_used@@Base+0x6a0>
   14130:	push	{r4, lr}
   14134:	bl	14208 <_obstack_memory_used@@Base+0x794>
   14138:	cmp	r0, #0
   1413c:	popne	{r4, pc}
   14140:	bl	141dc <_obstack_memory_used@@Base+0x768>
   14144:	mov	r1, #1
   14148:	b	14130 <_obstack_memory_used@@Base+0x6bc>
   1414c:	push	{r4, r5, r6, lr}
   14150:	mov	r4, r1
   14154:	mov	r5, r0
   14158:	mov	r0, r1
   1415c:	bl	13f24 <_obstack_memory_used@@Base+0x4b0>
   14160:	mov	r2, r4
   14164:	mov	r1, r5
   14168:	pop	{r4, r5, r6, lr}
   1416c:	b	11134 <memcpy@plt>
   14170:	push	{r4, r5, r6, lr}
   14174:	mov	r4, r1
   14178:	mov	r5, r0
   1417c:	mov	r0, r1
   14180:	bl	13f38 <_obstack_memory_used@@Base+0x4c4>
   14184:	mov	r2, r4
   14188:	mov	r1, r5
   1418c:	pop	{r4, r5, r6, lr}
   14190:	b	11134 <memcpy@plt>
   14194:	push	{r4, r5, r6, lr}
   14198:	mov	r5, r0
   1419c:	add	r0, r1, #1
   141a0:	mov	r4, r1
   141a4:	bl	13f38 <_obstack_memory_used@@Base+0x4c4>
   141a8:	mov	r2, #0
   141ac:	mov	r1, r5
   141b0:	strb	r2, [r0, r4]
   141b4:	mov	r2, r4
   141b8:	pop	{r4, r5, r6, lr}
   141bc:	b	11134 <memcpy@plt>
   141c0:	push	{r4, lr}
   141c4:	mov	r4, r0
   141c8:	bl	11224 <strlen@plt>
   141cc:	add	r1, r0, #1
   141d0:	mov	r0, r4
   141d4:	pop	{r4, lr}
   141d8:	b	1414c <_obstack_memory_used@@Base+0x6d8>
   141dc:	ldr	r3, [pc, #24]	; 141fc <_obstack_memory_used@@Base+0x788>
   141e0:	mov	r1, #0
   141e4:	push	{r4, lr}
   141e8:	ldr	r2, [pc, #16]	; 14200 <_obstack_memory_used@@Base+0x78c>
   141ec:	ldr	r0, [r3]
   141f0:	ldr	r3, [pc, #12]	; 14204 <_obstack_memory_used@@Base+0x790>
   141f4:	bl	111a0 <error@plt>
   141f8:	bl	11350 <abort@plt>
   141fc:	muleq	r2, r4, r8
   14200:	andeq	r9, r1, r3, lsr #15
   14204:	andeq	r9, r1, lr, lsl #4
   14208:	cmp	r1, #0
   1420c:	cmpne	r0, #0
   14210:	beq	14248 <_obstack_memory_used@@Base+0x7d4>
   14214:	push	{r4, r5, r6, lr}
   14218:	umull	r4, r5, r0, r1
   1421c:	adds	r3, r5, #0
   14220:	movne	r3, #1
   14224:	cmp	r4, #0
   14228:	blt	14234 <_obstack_memory_used@@Base+0x7c0>
   1422c:	cmp	r3, #0
   14230:	beq	14254 <_obstack_memory_used@@Base+0x7e0>
   14234:	bl	11248 <__errno_location@plt>
   14238:	mov	r3, #12
   1423c:	str	r3, [r0]
   14240:	mov	r0, #0
   14244:	pop	{r4, r5, r6, pc}
   14248:	mov	r1, #1
   1424c:	mov	r0, r1
   14250:	b	110a4 <calloc@plt>
   14254:	pop	{r4, r5, r6, lr}
   14258:	b	14250 <_obstack_memory_used@@Base+0x7dc>
   1425c:	cmp	r0, #0
   14260:	beq	14280 <_obstack_memory_used@@Base+0x80c>
   14264:	bge	14284 <_obstack_memory_used@@Base+0x810>
   14268:	push	{r4, lr}
   1426c:	bl	11248 <__errno_location@plt>
   14270:	mov	r3, #12
   14274:	str	r3, [r0]
   14278:	mov	r0, #0
   1427c:	pop	{r4, pc}
   14280:	mov	r0, #1
   14284:	b	111c4 <malloc@plt>
   14288:	cmp	r0, #0
   1428c:	bne	14298 <_obstack_memory_used@@Base+0x824>
   14290:	mov	r0, r1
   14294:	b	1425c <_obstack_memory_used@@Base+0x7e8>
   14298:	cmp	r1, #0
   1429c:	push	{r4, lr}
   142a0:	bne	142b0 <_obstack_memory_used@@Base+0x83c>
   142a4:	bl	1369c <argp_usage@@Base+0x170>
   142a8:	mov	r0, #0
   142ac:	pop	{r4, pc}
   142b0:	blt	142bc <_obstack_memory_used@@Base+0x848>
   142b4:	pop	{r4, lr}
   142b8:	b	11164 <realloc@plt>
   142bc:	bl	11248 <__errno_location@plt>
   142c0:	mov	r3, #12
   142c4:	str	r3, [r0]
   142c8:	b	142a8 <_obstack_memory_used@@Base+0x834>
   142cc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   142d0:	mov	r8, r1
   142d4:	mov	r9, r2
   142d8:	mov	sl, r3
   142dc:	ldm	r0, {r5, r6, r7}
   142e0:	mov	r0, #0
   142e4:	mov	r4, r5
   142e8:	clz	r3, r0
   142ec:	cmp	r6, #0
   142f0:	lsr	r3, r3, #5
   142f4:	moveq	r3, #0
   142f8:	cmp	r3, #0
   142fc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14300:	mov	r0, r4
   14304:	bl	13540 <argp_usage@@Base+0x14>
   14308:	cmp	r0, #0
   1430c:	beq	14354 <_obstack_memory_used@@Base+0x8e0>
   14310:	ldrb	r2, [r7]
   14314:	ldr	r3, [r4, #4]
   14318:	cmp	r2, r3
   1431c:	movne	r0, #0
   14320:	bne	14354 <_obstack_memory_used@@Base+0x8e0>
   14324:	ldr	r3, [r4, #12]
   14328:	tst	r3, #4
   1432c:	moveq	r5, r4
   14330:	tst	r3, #2
   14334:	movne	r0, #0
   14338:	bne	14350 <_obstack_memory_used@@Base+0x8dc>
   1433c:	mov	r3, sl
   14340:	mov	r2, r9
   14344:	mov	r1, r5
   14348:	mov	r0, r4
   1434c:	blx	r8
   14350:	add	r7, r7, #1
   14354:	add	r4, r4, #24
   14358:	sub	r6, r6, #1
   1435c:	b	142e8 <_obstack_memory_used@@Base+0x874>
   14360:	push	{r4, lr}
   14364:	mov	r4, r0
   14368:	bl	13540 <argp_usage@@Base+0x14>
   1436c:	cmp	r0, #0
   14370:	ldrne	r0, [r4, #4]
   14374:	pop	{r4, pc}
   14378:	ldr	r3, [r0]
   1437c:	ldr	r2, [r0, #4]
   14380:	cmp	r2, #0
   14384:	add	r3, r3, #24
   14388:	bne	14394 <_obstack_memory_used@@Base+0x920>
   1438c:	mov	r0, r2
   14390:	bx	lr
   14394:	ldr	r0, [r3, #-24]	; 0xffffffe8
   14398:	cmp	r0, #0
   1439c:	beq	143ac <_obstack_memory_used@@Base+0x938>
   143a0:	ldr	r1, [r3, #-12]
   143a4:	tst	r1, #2
   143a8:	bxeq	lr
   143ac:	sub	r2, r2, #1
   143b0:	b	14380 <_obstack_memory_used@@Base+0x90c>
   143b4:	push	{r4, r5, r6, lr}
   143b8:	mov	r4, r1
   143bc:	mov	r5, r0
   143c0:	bl	175a4 <argp_error@@Base+0x1334>
   143c4:	sub	r4, r4, r0
   143c8:	cmp	r4, #0
   143cc:	pople	{r4, r5, r6, pc}
   143d0:	mov	r1, #32
   143d4:	mov	r0, r5
   143d8:	bl	174cc <argp_error@@Base+0x125c>
   143dc:	sub	r4, r4, #1
   143e0:	b	143c8 <_obstack_memory_used@@Base+0x954>
   143e4:	push	{r4, r5, r6, lr}
   143e8:	mov	r4, r0
   143ec:	mov	r5, r1
   143f0:	bl	175a4 <argp_error@@Base+0x1334>
   143f4:	ldr	r3, [r4, #8]
   143f8:	add	r0, r0, r5
   143fc:	cmp	r0, r3
   14400:	mov	r0, r4
   14404:	pop	{r4, r5, r6, lr}
   14408:	movcs	r1, #10
   1440c:	movcc	r1, #32
   14410:	b	174cc <argp_error@@Base+0x125c>
   14414:	push	{r4, r5, r6, lr}
   14418:	ldr	r5, [r0, #8]
   1441c:	cmp	r5, #0
   14420:	bne	14430 <_obstack_memory_used@@Base+0x9bc>
   14424:	ldr	r5, [r1, #8]
   14428:	cmp	r5, #0
   1442c:	beq	14468 <_obstack_memory_used@@Base+0x9f4>
   14430:	ldr	r2, [r0, #12]
   14434:	ldr	r1, [r1, #12]
   14438:	orr	r2, r2, r1
   1443c:	tst	r2, #16
   14440:	bne	14468 <_obstack_memory_used@@Base+0x9f4>
   14444:	tst	r2, #1
   14448:	mov	r6, r3
   1444c:	mov	r4, r0
   14450:	beq	14470 <_obstack_memory_used@@Base+0x9fc>
   14454:	ldr	r1, [pc, #56]	; 14494 <_obstack_memory_used@@Base+0xa20>
   14458:	mov	r3, r5
   1445c:	ldr	r2, [r0, #4]
   14460:	mov	r0, r6
   14464:	bl	173b8 <argp_error@@Base+0x1148>
   14468:	mov	r0, #0
   1446c:	pop	{r4, r5, r6, pc}
   14470:	mov	r0, r5
   14474:	bl	11224 <strlen@plt>
   14478:	add	r1, r0, #6
   1447c:	mov	r0, r6
   14480:	bl	143e4 <_obstack_memory_used@@Base+0x970>
   14484:	mov	r3, r5
   14488:	ldr	r1, [pc, #8]	; 14498 <_obstack_memory_used@@Base+0xa24>
   1448c:	ldr	r2, [r4, #4]
   14490:	b	14460 <_obstack_memory_used@@Base+0x9ec>
   14494:	andeq	r9, r1, lr, lsr r6
   14498:	andeq	r9, r1, r9, asr #12
   1449c:	push	{r4, r5, r6, lr}
   144a0:	mov	r4, r0
   144a4:	ldr	r0, [r0, #12]
   144a8:	cmp	r0, #0
   144ac:	bne	144d8 <_obstack_memory_used@@Base+0xa64>
   144b0:	ldr	r3, [r4, #4]
   144b4:	cmp	r3, #0
   144b8:	beq	144cc <_obstack_memory_used@@Base+0xa58>
   144bc:	ldr	r0, [r4]
   144c0:	bl	1369c <argp_usage@@Base+0x170>
   144c4:	ldr	r0, [r4, #8]
   144c8:	bl	1369c <argp_usage@@Base+0x170>
   144cc:	mov	r0, r4
   144d0:	pop	{r4, r5, r6, lr}
   144d4:	b	1369c <argp_usage@@Base+0x170>
   144d8:	ldr	r5, [r0, #24]
   144dc:	bl	1369c <argp_usage@@Base+0x170>
   144e0:	mov	r0, r5
   144e4:	b	144a8 <_obstack_memory_used@@Base+0xa34>
   144e8:	push	{r4, r5, r6, lr}
   144ec:	ldr	r5, [r0, #16]
   144f0:	ldr	r0, [r0, #8]
   144f4:	cmp	r0, #0
   144f8:	moveq	r4, r0
   144fc:	beq	14510 <_obstack_memory_used@@Base+0xa9c>
   14500:	mov	r1, #10
   14504:	bl	11230 <strchr@plt>
   14508:	adds	r4, r0, #0
   1450c:	movne	r4, #1
   14510:	cmp	r5, #0
   14514:	addne	r5, r5, #16
   14518:	bne	1452c <_obstack_memory_used@@Base+0xab8>
   1451c:	mov	r0, r4
   14520:	pop	{r4, r5, r6, pc}
   14524:	bl	144e8 <_obstack_memory_used@@Base+0xa74>
   14528:	add	r4, r4, r0
   1452c:	add	r5, r5, #16
   14530:	ldr	r0, [r5, #-32]	; 0xffffffe0
   14534:	cmp	r0, #0
   14538:	bne	14524 <_obstack_memory_used@@Base+0xab0>
   1453c:	b	1451c <_obstack_memory_used@@Base+0xaa8>
   14540:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14544:	sub	sp, sp, #28
   14548:	mov	r8, r0
   1454c:	mov	r7, r2
   14550:	ldr	r6, [r0, #12]
   14554:	str	r3, [sp, #12]
   14558:	ldr	r3, [r0, #16]
   1455c:	ldr	r4, [sp, #68]	; 0x44
   14560:	cmp	r6, #0
   14564:	moveq	fp, r6
   14568:	moveq	r5, fp
   1456c:	str	r3, [sp, #16]
   14570:	str	r1, [sp, #20]
   14574:	beq	145b4 <_obstack_memory_used@@Base+0xb40>
   14578:	mov	r1, #11
   1457c:	mov	r0, r6
   14580:	bl	11230 <strchr@plt>
   14584:	cmp	r7, #0
   14588:	moveq	fp, r6
   1458c:	beq	1459c <_obstack_memory_used@@Base+0xb28>
   14590:	cmp	r0, #0
   14594:	addne	fp, r0, #1
   14598:	moveq	fp, r0
   1459c:	eor	r5, r7, #1
   145a0:	cmp	r0, #0
   145a4:	moveq	r5, #0
   145a8:	andne	r5, r5, #1
   145ac:	cmp	r5, #0
   145b0:	subne	r5, r0, r6
   145b4:	ldr	r9, [r8, #20]
   145b8:	cmp	r9, #0
   145bc:	moveq	sl, fp
   145c0:	beq	14614 <_obstack_memory_used@@Base+0xba0>
   145c4:	cmp	r5, #0
   145c8:	beq	145dc <_obstack_memory_used@@Base+0xb68>
   145cc:	mov	r0, fp
   145d0:	mov	r1, r5
   145d4:	bl	11128 <strndup@plt>
   145d8:	mov	fp, r0
   145dc:	mov	r0, r8
   145e0:	ldr	r1, [sp, #20]
   145e4:	mov	sl, fp
   145e8:	bl	134ec <argp_parse@@Base+0x938>
   145ec:	ldr	ip, [pc, #460]	; 147c0 <_obstack_memory_used@@Base+0xd4c>
   145f0:	cmp	r7, #0
   145f4:	mov	r2, r0
   145f8:	mov	r1, fp
   145fc:	mov	r9, r0
   14600:	ldr	r0, [pc, #444]	; 147c4 <_obstack_memory_used@@Base+0xd50>
   14604:	ldr	r6, [r8, #20]
   14608:	movne	r0, ip
   1460c:	blx	r6
   14610:	mov	fp, r0
   14614:	cmp	fp, #0
   14618:	moveq	r6, fp
   1461c:	beq	14688 <_obstack_memory_used@@Base+0xc14>
   14620:	ldr	r3, [sp, #12]
   14624:	cmp	r3, #0
   14628:	beq	14638 <_obstack_memory_used@@Base+0xbc4>
   1462c:	mov	r1, #10
   14630:	mov	r0, r4
   14634:	bl	174cc <argp_error@@Base+0x125c>
   14638:	sub	r2, fp, sl
   1463c:	cmp	r5, #0
   14640:	clz	r2, r2
   14644:	lsr	r2, r2, #5
   14648:	moveq	r2, #0
   1464c:	cmp	r2, #0
   14650:	beq	14784 <_obstack_memory_used@@Base+0xd10>
   14654:	mov	r2, r5
   14658:	mov	r1, sl
   1465c:	mov	r0, r4
   14660:	bl	1742c <argp_error@@Base+0x11bc>
   14664:	mov	r0, r4
   14668:	bl	175a4 <argp_error@@Base+0x1334>
   1466c:	ldr	r2, [r4, #4]
   14670:	cmp	r0, r2
   14674:	bls	14684 <_obstack_memory_used@@Base+0xc10>
   14678:	mov	r1, #10
   1467c:	mov	r0, r4
   14680:	bl	174cc <argp_error@@Base+0x125c>
   14684:	mov	r6, #1
   14688:	cmp	fp, #0
   1468c:	cmpne	fp, sl
   14690:	beq	1469c <_obstack_memory_used@@Base+0xc28>
   14694:	mov	r0, fp
   14698:	bl	1369c <argp_usage@@Base+0x170>
   1469c:	cmp	sl, #0
   146a0:	cmpne	r5, #0
   146a4:	beq	146bc <_obstack_memory_used@@Base+0xc48>
   146a8:	ldr	r3, [r8, #20]
   146ac:	cmp	r3, #0
   146b0:	beq	146bc <_obstack_memory_used@@Base+0xc48>
   146b4:	mov	r0, sl
   146b8:	bl	1369c <argp_usage@@Base+0x170>
   146bc:	cmp	r7, #0
   146c0:	beq	14738 <_obstack_memory_used@@Base+0xcc4>
   146c4:	ldr	r3, [r8, #20]
   146c8:	cmp	r3, #0
   146cc:	beq	14738 <_obstack_memory_used@@Base+0xcc4>
   146d0:	mov	r2, r9
   146d4:	mov	r1, #0
   146d8:	ldr	r0, [pc, #232]	; 147c8 <_obstack_memory_used@@Base+0xd54>
   146dc:	blx	r3
   146e0:	subs	r5, r0, #0
   146e4:	beq	14738 <_obstack_memory_used@@Base+0xcc4>
   146e8:	ldr	r3, [sp, #12]
   146ec:	orrs	r3, r6, r3
   146f0:	beq	14700 <_obstack_memory_used@@Base+0xc8c>
   146f4:	mov	r1, #10
   146f8:	mov	r0, r4
   146fc:	bl	174cc <argp_error@@Base+0x125c>
   14700:	mov	r1, r5
   14704:	mov	r0, r4
   14708:	bl	1748c <argp_error@@Base+0x121c>
   1470c:	mov	r0, r5
   14710:	bl	1369c <argp_usage@@Base+0x170>
   14714:	mov	r0, r4
   14718:	bl	175a4 <argp_error@@Base+0x1334>
   1471c:	ldr	r3, [r4, #4]
   14720:	cmp	r0, r3
   14724:	bls	14734 <_obstack_memory_used@@Base+0xcc0>
   14728:	mov	r1, #10
   1472c:	mov	r0, r4
   14730:	bl	174cc <argp_error@@Base+0x125c>
   14734:	mov	r6, r7
   14738:	ldr	r3, [sp, #16]
   1473c:	cmp	r3, #0
   14740:	beq	14778 <_obstack_memory_used@@Base+0xd04>
   14744:	add	r8, r3, #16
   14748:	ldr	r3, [sp, #64]	; 0x40
   1474c:	eor	r5, r3, #1
   14750:	and	r5, r5, #1
   14754:	ldr	r0, [r8, #-16]
   14758:	cmp	r0, #0
   1475c:	beq	14778 <_obstack_memory_used@@Base+0xd04>
   14760:	cmp	r6, #0
   14764:	add	r8, r8, #16
   14768:	movne	r3, r5
   1476c:	moveq	r3, #1
   14770:	cmp	r3, #0
   14774:	bne	14794 <_obstack_memory_used@@Base+0xd20>
   14778:	mov	r0, r6
   1477c:	add	sp, sp, #28
   14780:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14784:	mov	r1, fp
   14788:	mov	r0, r4
   1478c:	bl	1748c <argp_error@@Base+0x121c>
   14790:	b	14664 <_obstack_memory_used@@Base+0xbf0>
   14794:	ldr	r3, [sp, #12]
   14798:	mov	r2, r7
   1479c:	ldr	r1, [sp, #20]
   147a0:	orrs	r3, r6, r3
   147a4:	ldr	r3, [sp, #64]	; 0x40
   147a8:	stm	sp, {r3, r4}
   147ac:	movne	r3, #1
   147b0:	moveq	r3, #0
   147b4:	bl	14540 <_obstack_memory_used@@Base+0xacc>
   147b8:	orr	r6, r6, r0
   147bc:	b	14754 <_obstack_memory_used@@Base+0xce0>
   147c0:	andeq	r0, r0, #2
   147c4:	andeq	r0, r0, #1
   147c8:	andeq	r0, r0, #4
   147cc:	ldr	r2, [r0, #8]
   147d0:	cmp	r2, #0
   147d4:	bne	1480c <_obstack_memory_used@@Base+0xd98>
   147d8:	ldr	r2, [r1, #8]
   147dc:	cmp	r2, #0
   147e0:	bne	1480c <_obstack_memory_used@@Base+0xd98>
   147e4:	ldr	r2, [r0, #12]
   147e8:	ldr	r1, [r1, #12]
   147ec:	orr	r2, r2, r1
   147f0:	tst	r2, #16
   147f4:	bne	1480c <_obstack_memory_used@@Base+0xd98>
   147f8:	ldr	r2, [r3]
   147fc:	ldr	r1, [r0, #4]
   14800:	add	r0, r2, #1
   14804:	str	r0, [r3]
   14808:	strb	r1, [r2]
   1480c:	mov	r0, #0
   14810:	bx	lr
   14814:	push	{r4, lr}
   14818:	mov	r4, r0
   1481c:	bl	1120c <__ctype_b_loc@plt>
   14820:	ldr	r1, [r0]
   14824:	ldr	r3, [r4]
   14828:	ldrb	r0, [r3]
   1482c:	lsl	r2, r0, #1
   14830:	ldrh	r2, [r1, r2]
   14834:	tst	r2, #8192	; 0x2000
   14838:	bne	14870 <_obstack_memory_used@@Base+0xdfc>
   1483c:	subs	r0, r0, #45	; 0x2d
   14840:	movne	r0, #1
   14844:	ldr	r2, [r4]
   14848:	ldrb	r3, [r2]
   1484c:	cmp	r3, #0
   14850:	popeq	{r4, pc}
   14854:	lsl	r3, r3, #1
   14858:	ldrh	r3, [r1, r3]
   1485c:	tst	r3, #8
   14860:	popne	{r4, pc}
   14864:	add	r2, r2, #1
   14868:	str	r2, [r4]
   1486c:	b	14844 <_obstack_memory_used@@Base+0xdd0>
   14870:	add	r3, r3, #1
   14874:	str	r3, [r4]
   14878:	b	14824 <_obstack_memory_used@@Base+0xdb0>
   1487c:	push	{r4, r5, r6, lr}
   14880:	subs	r4, r2, #0
   14884:	popeq	{r4, r5, r6, pc}
   14888:	ldr	r2, [r4, #20]
   1488c:	cmp	r2, #0
   14890:	popeq	{r4, r5, r6, pc}
   14894:	mov	r6, r1
   14898:	mov	r5, r0
   1489c:	mov	r1, r3
   148a0:	mov	r0, r4
   148a4:	bl	134ec <argp_parse@@Base+0x938>
   148a8:	mov	r2, r0
   148ac:	mov	r1, r5
   148b0:	ldr	r3, [r4, #20]
   148b4:	mov	r0, r6
   148b8:	pop	{r4, r5, r6, lr}
   148bc:	bx	r3
   148c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   148c4:	mov	r4, r3
   148c8:	sub	sp, sp, #28
   148cc:	mov	fp, r2
   148d0:	ldr	r3, [r0, #8]
   148d4:	ldr	sl, [r2]
   148d8:	mov	r2, r0
   148dc:	ldr	r7, [r0, #16]
   148e0:	str	r3, [sp, #8]
   148e4:	mov	r3, r1
   148e8:	str	r1, [sp, #12]
   148ec:	ldr	r1, [pc, #324]	; 14a38 <_obstack_memory_used@@Base+0xfc4>
   148f0:	ldr	r0, [sp, #8]
   148f4:	bl	1487c <_obstack_memory_used@@Base+0xe08>
   148f8:	subs	r8, r0, #0
   148fc:	beq	149f0 <_obstack_memory_used@@Base+0xf7c>
   14900:	mov	r1, #10
   14904:	bl	110ec <strchrnul@plt>
   14908:	ldrb	r6, [r0]
   1490c:	mov	r5, r0
   14910:	cmp	r6, #0
   14914:	ldrbne	r2, [sl]
   14918:	movne	r9, r8
   1491c:	movne	r6, #0
   14920:	bne	14954 <_obstack_memory_used@@Base+0xee0>
   14924:	mov	r9, r8
   14928:	b	14970 <_obstack_memory_used@@Base+0xefc>
   1492c:	mov	r0, r3
   14930:	mov	r1, #10
   14934:	str	r3, [sp, #16]
   14938:	str	r2, [sp, #20]
   1493c:	add	r6, r6, #1
   14940:	bl	110ec <strchrnul@plt>
   14944:	ldr	r3, [sp, #16]
   14948:	mov	r5, r0
   1494c:	ldr	r2, [sp, #20]
   14950:	mov	r9, r3
   14954:	cmp	r2, r6
   14958:	add	r3, r5, #1
   1495c:	bgt	1492c <_obstack_memory_used@@Base+0xeb8>
   14960:	ldr	r3, [fp]
   14964:	mov	r6, #1
   14968:	add	r3, r3, #1
   1496c:	str	r3, [fp]
   14970:	add	r1, r5, #1
   14974:	ldr	r0, [sp, #64]	; 0x40
   14978:	sub	r1, r1, r9
   1497c:	bl	143e4 <_obstack_memory_used@@Base+0x970>
   14980:	sub	r2, r5, r9
   14984:	mov	r1, r9
   14988:	ldr	r0, [sp, #64]	; 0x40
   1498c:	bl	1742c <argp_error@@Base+0x11bc>
   14990:	ldr	r3, [sp, #8]
   14994:	cmp	r3, r8
   14998:	beq	149a4 <_obstack_memory_used@@Base+0xf30>
   1499c:	mov	r0, r8
   149a0:	bl	1369c <argp_usage@@Base+0x170>
   149a4:	cmp	r7, #0
   149a8:	bne	14a00 <_obstack_memory_used@@Base+0xf8c>
   149ac:	cmp	r4, #0
   149b0:	moveq	r6, #0
   149b4:	cmp	r6, #0
   149b8:	beq	149e0 <_obstack_memory_used@@Base+0xf6c>
   149bc:	ldrb	r2, [r5]
   149c0:	ldrb	r3, [sl]
   149c4:	cmp	r2, #0
   149c8:	movne	r4, #0
   149cc:	addne	r3, r3, #1
   149d0:	strbne	r3, [sl]
   149d4:	bne	149e0 <_obstack_memory_used@@Base+0xf6c>
   149d8:	cmp	r3, #0
   149dc:	strbne	r2, [sl]
   149e0:	clz	r0, r4
   149e4:	lsr	r0, r0, #5
   149e8:	add	sp, sp, #28
   149ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   149f0:	cmp	r7, #0
   149f4:	movne	r5, r8
   149f8:	movne	r6, r5
   149fc:	beq	149e0 <_obstack_memory_used@@Base+0xf6c>
   14a00:	add	r7, r7, #16
   14a04:	add	r7, r7, #16
   14a08:	ldr	r0, [r7, #-32]	; 0xffffffe0
   14a0c:	cmp	r0, #0
   14a10:	beq	149ac <_obstack_memory_used@@Base+0xf38>
   14a14:	mov	r2, fp
   14a18:	ldr	r1, [sp, #12]
   14a1c:	ldr	r3, [sp, #64]	; 0x40
   14a20:	str	r3, [sp]
   14a24:	mov	r3, r4
   14a28:	bl	148c0 <_obstack_memory_used@@Base+0xe4c>
   14a2c:	clz	r4, r0
   14a30:	lsr	r4, r4, #5
   14a34:	b	14a04 <_obstack_memory_used@@Base+0xf90>
   14a38:	andeq	r0, r0, #6
   14a3c:	push	{r4, r5, r6, r7, r8, lr}
   14a40:	mov	r4, r2
   14a44:	mov	r7, r0
   14a48:	ldr	r3, [r2, #16]
   14a4c:	mov	r2, r1
   14a50:	ldr	r1, [pc, #156]	; 14af4 <_obstack_memory_used@@Base+0x1080>
   14a54:	bl	1487c <_obstack_memory_used@@Base+0xe08>
   14a58:	subs	r5, r0, #0
   14a5c:	beq	14ae0 <_obstack_memory_used@@Base+0x106c>
   14a60:	ldrb	r3, [r5]
   14a64:	cmp	r3, #0
   14a68:	beq	14ad4 <_obstack_memory_used@@Base+0x1060>
   14a6c:	ldr	r3, [r4, #8]
   14a70:	ldr	r3, [r3]
   14a74:	cmp	r3, #0
   14a78:	beq	14a88 <_obstack_memory_used@@Base+0x1014>
   14a7c:	mov	r1, #10
   14a80:	ldr	r0, [r4, #4]
   14a84:	bl	174cc <argp_error@@Base+0x125c>
   14a88:	ldr	r6, [pc, #104]	; 14af8 <_obstack_memory_used@@Base+0x1084>
   14a8c:	ldr	r0, [r4, #4]
   14a90:	ldr	r1, [r6, #24]
   14a94:	bl	143b4 <_obstack_memory_used@@Base+0x940>
   14a98:	ldr	r0, [r4, #4]
   14a9c:	ldr	r1, [r6, #24]
   14aa0:	bl	17514 <argp_error@@Base+0x12a4>
   14aa4:	ldr	r0, [r4, #4]
   14aa8:	ldr	r1, [r6, #24]
   14aac:	bl	17574 <argp_error@@Base+0x1304>
   14ab0:	mov	r1, r5
   14ab4:	ldr	r0, [r4, #4]
   14ab8:	bl	1748c <argp_error@@Base+0x121c>
   14abc:	mov	r1, #0
   14ac0:	ldr	r0, [r4, #4]
   14ac4:	bl	17514 <argp_error@@Base+0x12a4>
   14ac8:	mov	r1, #10
   14acc:	ldr	r0, [r4, #4]
   14ad0:	bl	174cc <argp_error@@Base+0x125c>
   14ad4:	ldr	r3, [r4, #8]
   14ad8:	mov	r2, #1
   14adc:	str	r2, [r3, #4]
   14ae0:	cmp	r7, r5
   14ae4:	popeq	{r4, r5, r6, r7, r8, pc}
   14ae8:	mov	r0, r5
   14aec:	pop	{r4, r5, r6, r7, r8, lr}
   14af0:	b	1369c <argp_usage@@Base+0x170>
   14af4:	andeq	r0, r0, #3
   14af8:	andeq	sp, r2, ip, ror #16
   14afc:	ldr	r3, [r1, #12]
   14b00:	push	{r4, r5, r6, r7, r8, lr}
   14b04:	mov	r7, r0
   14b08:	mov	r4, r1
   14b0c:	ldr	r0, [r1, #4]
   14b10:	cmp	r3, #0
   14b14:	beq	14bd8 <_obstack_memory_used@@Base+0x1164>
   14b18:	ldr	r3, [r1]
   14b1c:	ldr	r2, [r1, #8]
   14b20:	ldr	r5, [r3, #16]
   14b24:	ldr	r6, [r2]
   14b28:	ldr	r2, [r2, #4]
   14b2c:	cmp	r2, #0
   14b30:	cmpne	r6, #0
   14b34:	beq	14b50 <_obstack_memory_used@@Base+0x10dc>
   14b38:	ldr	r2, [r3, #12]
   14b3c:	ldr	r3, [r6, #12]
   14b40:	cmp	r2, r3
   14b44:	beq	14b50 <_obstack_memory_used@@Base+0x10dc>
   14b48:	mov	r1, #10
   14b4c:	bl	174cc <argp_error@@Base+0x125c>
   14b50:	cmp	r5, #0
   14b54:	beq	14b84 <_obstack_memory_used@@Base+0x1110>
   14b58:	ldr	r0, [r5]
   14b5c:	cmp	r0, #0
   14b60:	beq	14b84 <_obstack_memory_used@@Base+0x1110>
   14b64:	ldrb	r3, [r0]
   14b68:	cmp	r3, #0
   14b6c:	beq	14b84 <_obstack_memory_used@@Base+0x1110>
   14b70:	cmp	r6, #0
   14b74:	beq	14bb4 <_obstack_memory_used@@Base+0x1140>
   14b78:	ldr	r3, [r6, #16]
   14b7c:	cmp	r3, r5
   14b80:	bne	14ba0 <_obstack_memory_used@@Base+0x112c>
   14b84:	mov	r3, #0
   14b88:	str	r3, [r4, #12]
   14b8c:	mov	r1, r7
   14b90:	ldr	r0, [r4, #4]
   14b94:	pop	{r4, r5, r6, r7, r8, lr}
   14b98:	b	143b4 <_obstack_memory_used@@Base+0x940>
   14b9c:	ldr	r3, [r3, #12]
   14ba0:	cmp	r3, #0
   14ba4:	cmpne	r5, r3
   14ba8:	bne	14b9c <_obstack_memory_used@@Base+0x1128>
   14bac:	cmp	r5, r3
   14bb0:	beq	14b84 <_obstack_memory_used@@Base+0x1110>
   14bb4:	ldr	r3, [r4, #4]
   14bb8:	mov	r2, r4
   14bbc:	ldr	r1, [r5, #16]
   14bc0:	ldr	r6, [r3, #12]
   14bc4:	bl	14a3c <_obstack_memory_used@@Base+0xfc8>
   14bc8:	ldr	r0, [r4, #4]
   14bcc:	mov	r1, r6
   14bd0:	bl	17574 <argp_error@@Base+0x1304>
   14bd4:	b	14b84 <_obstack_memory_used@@Base+0x1110>
   14bd8:	ldr	r1, [pc, #4]	; 14be4 <_obstack_memory_used@@Base+0x1170>
   14bdc:	bl	1748c <argp_error@@Base+0x121c>
   14be0:	b	14b8c <_obstack_memory_used@@Base+0x1118>
   14be4:	andeq	r9, r1, r2, asr r6
   14be8:	push	{r4, r5, r6, r7, r8, lr}
   14bec:	mov	r8, r1
   14bf0:	ldm	r0, {r5, r6}
   14bf4:	cmp	r6, #0
   14bf8:	popeq	{r4, r5, r6, r7, r8, pc}
   14bfc:	ldm	r5, {r4, r7}
   14c00:	add	r4, r4, #24
   14c04:	cmp	r7, #0
   14c08:	subeq	r6, r6, #1
   14c0c:	addeq	r5, r5, #28
   14c10:	beq	14bf4 <_obstack_memory_used@@Base+0x1180>
   14c14:	ldr	r0, [r4, #-24]	; 0xffffffe8
   14c18:	cmp	r0, #0
   14c1c:	beq	14c3c <_obstack_memory_used@@Base+0x11c8>
   14c20:	ldr	r3, [r4, #-12]
   14c24:	tst	r3, #2
   14c28:	bne	14c3c <_obstack_memory_used@@Base+0x11c8>
   14c2c:	mov	r1, r8
   14c30:	bl	110c8 <strcmp@plt>
   14c34:	cmp	r0, #0
   14c38:	beq	14c48 <_obstack_memory_used@@Base+0x11d4>
   14c3c:	add	r4, r4, #24
   14c40:	sub	r7, r7, #1
   14c44:	b	14c04 <_obstack_memory_used@@Base+0x1190>
   14c48:	mvn	r3, #0
   14c4c:	str	r3, [r5, #12]
   14c50:	pop	{r4, r5, r6, r7, r8, pc}
   14c54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14c58:	add	fp, sp, #32
   14c5c:	sub	sp, sp, #12
   14c60:	ldr	r6, [r0, #4]
   14c64:	cmp	r6, #0
   14c68:	beq	14d08 <_obstack_memory_used@@Base+0x1294>
   14c6c:	mov	r5, r0
   14c70:	ldr	r0, [r0, #8]
   14c74:	mov	r4, r1
   14c78:	bl	11224 <strlen@plt>
   14c7c:	add	r0, r0, #8
   14c80:	ldr	r9, [pc, #316]	; 14dc4 <_obstack_memory_used@@Base+0x1350>
   14c84:	bic	r0, r0, #7
   14c88:	ldr	r7, [r5]
   14c8c:	sub	sp, sp, r0
   14c90:	mov	r8, sp
   14c94:	str	r8, [fp, #-40]	; 0xffffffd8
   14c98:	ldr	r2, [r7, #20]
   14c9c:	mov	r0, r7
   14ca0:	sub	r3, fp, #40	; 0x28
   14ca4:	mov	r1, r9
   14ca8:	add	r7, r7, #28
   14cac:	ldr	r2, [r2, #24]
   14cb0:	bl	142cc <_obstack_memory_used@@Base+0x858>
   14cb4:	subs	r6, r6, #1
   14cb8:	bne	14c98 <_obstack_memory_used@@Base+0x1224>
   14cbc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14cc0:	cmp	r3, r8
   14cc4:	bls	14ce4 <_obstack_memory_used@@Base+0x1270>
   14cc8:	add	r2, r3, #1
   14ccc:	ldr	r1, [pc, #244]	; 14dc8 <_obstack_memory_used@@Base+0x1354>
   14cd0:	mov	r0, r4
   14cd4:	str	r2, [fp, #-40]	; 0xffffffd8
   14cd8:	mov	r2, r8
   14cdc:	strb	r6, [r3]
   14ce0:	bl	173b8 <argp_error@@Base+0x1148>
   14ce4:	ldr	r8, [pc, #224]	; 14dcc <_obstack_memory_used@@Base+0x1358>
   14ce8:	ldrd	r6, [r5]
   14cec:	cmp	r7, #0
   14cf0:	bne	14d10 <_obstack_memory_used@@Base+0x129c>
   14cf4:	ldm	r5, {r5, r8}
   14cf8:	ldr	sl, [pc, #208]	; 14dd0 <_obstack_memory_used@@Base+0x135c>
   14cfc:	add	r5, r5, #28
   14d00:	cmp	r8, #0
   14d04:	bne	14d34 <_obstack_memory_used@@Base+0x12c0>
   14d08:	sub	sp, fp, #32
   14d0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d10:	ldr	r2, [r6, #20]
   14d14:	mov	r0, r6
   14d18:	mov	r3, r4
   14d1c:	mov	r1, r8
   14d20:	sub	r7, r7, #1
   14d24:	add	r6, r6, #28
   14d28:	ldr	r2, [r2, #24]
   14d2c:	bl	142cc <_obstack_memory_used@@Base+0x858>
   14d30:	b	14cec <_obstack_memory_used@@Base+0x1278>
   14d34:	ldr	r7, [r5, #-28]	; 0xffffffe4
   14d38:	ldr	r9, [r5, #-24]	; 0xffffffe8
   14d3c:	mov	r6, r7
   14d40:	cmp	r9, #0
   14d44:	subeq	r8, r8, #1
   14d48:	addeq	r5, r5, #28
   14d4c:	beq	14d00 <_obstack_memory_used@@Base+0x128c>
   14d50:	ldr	r2, [r6]
   14d54:	cmp	r2, #0
   14d58:	beq	14da8 <_obstack_memory_used@@Base+0x1334>
   14d5c:	ldr	r1, [r6, #12]
   14d60:	tst	r1, #4
   14d64:	moveq	r7, r6
   14d68:	tst	r1, #2
   14d6c:	bne	14da8 <_obstack_memory_used@@Base+0x1334>
   14d70:	ldr	r3, [r6, #8]
   14d74:	ldr	r0, [r7, #12]
   14d78:	cmp	r3, #0
   14d7c:	ldreq	r3, [r7, #8]
   14d80:	orr	r1, r1, r0
   14d84:	tst	r1, #16
   14d88:	bne	14da8 <_obstack_memory_used@@Base+0x1334>
   14d8c:	cmp	r3, #0
   14d90:	beq	14db4 <_obstack_memory_used@@Base+0x1340>
   14d94:	tst	r1, #1
   14d98:	mov	r0, r4
   14d9c:	movne	r1, sl
   14da0:	ldreq	r1, [pc, #44]	; 14dd4 <_obstack_memory_used@@Base+0x1360>
   14da4:	bl	173b8 <argp_error@@Base+0x1148>
   14da8:	add	r6, r6, #24
   14dac:	sub	r9, r9, #1
   14db0:	b	14d40 <_obstack_memory_used@@Base+0x12cc>
   14db4:	ldr	r1, [pc, #28]	; 14dd8 <_obstack_memory_used@@Base+0x1364>
   14db8:	mov	r0, r4
   14dbc:	bl	173b8 <argp_error@@Base+0x1148>
   14dc0:	b	14da8 <_obstack_memory_used@@Base+0x1334>
   14dc4:	andeq	r4, r1, ip, asr #15
   14dc8:	andeq	r9, r1, r5, asr r6
   14dcc:	andeq	r4, r1, r4, lsl r4
   14dd0:	andeq	r9, r1, ip, asr r6
   14dd4:	andeq	r9, r1, r9, ror #12
   14dd8:	andeq	r9, r1, r4, ror r6
   14ddc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14de0:	sub	sp, sp, #36	; 0x24
   14de4:	mov	r9, r1
   14de8:	str	r0, [sp, #8]
   14dec:	ldr	r5, [r0]
   14df0:	ldr	r6, [r0, #16]
   14df4:	mov	r0, #16
   14df8:	bl	1425c <_obstack_memory_used@@Base+0x7e8>
   14dfc:	subs	r4, r0, #0
   14e00:	bne	14e18 <_obstack_memory_used@@Base+0x13a4>
   14e04:	ldr	r3, [pc, #1172]	; 152a0 <_obstack_memory_used@@Base+0x182c>
   14e08:	movw	r2, #450	; 0x1c2
   14e0c:	ldr	r1, [pc, #1168]	; 152a4 <_obstack_memory_used@@Base+0x1830>
   14e10:	ldr	r0, [pc, #1168]	; 152a8 <_obstack_memory_used@@Base+0x1834>
   14e14:	bl	11374 <__assert_fail@plt>
   14e18:	mov	r3, #0
   14e1c:	cmp	r5, r3
   14e20:	str	r3, [r4, #4]
   14e24:	str	r3, [r4, #12]
   14e28:	beq	14f9c <_obstack_memory_used@@Base+0x1528>
   14e2c:	ldr	r8, [r5, #12]
   14e30:	ands	r8, r8, #4
   14e34:	moveq	r7, r5
   14e38:	moveq	sl, r8
   14e3c:	beq	14e78 <_obstack_memory_used@@Base+0x1404>
   14e40:	ldr	r3, [pc, #1112]	; 152a0 <_obstack_memory_used@@Base+0x182c>
   14e44:	mov	r2, #460	; 0x1cc
   14e48:	ldr	r1, [pc, #1108]	; 152a4 <_obstack_memory_used@@Base+0x1830>
   14e4c:	ldr	r0, [pc, #1112]	; 152ac <_obstack_memory_used@@Base+0x1838>
   14e50:	b	14e14 <_obstack_memory_used@@Base+0x13a0>
   14e54:	ldr	r2, [r7, #12]
   14e58:	mov	r0, r7
   14e5c:	add	r7, r7, #24
   14e60:	tst	r2, #4
   14e64:	addeq	r3, r3, #1
   14e68:	streq	r3, [r4, #4]
   14e6c:	bl	13540 <argp_usage@@Base+0x14>
   14e70:	cmp	r0, #0
   14e74:	addne	sl, sl, #1
   14e78:	mov	r0, r7
   14e7c:	bl	13588 <argp_usage@@Base+0x5c>
   14e80:	cmp	r0, #0
   14e84:	ldr	r3, [r4, #4]
   14e88:	beq	14e54 <_obstack_memory_used@@Base+0x13e0>
   14e8c:	mov	r0, #28
   14e90:	mul	r0, r0, r3
   14e94:	bl	1425c <_obstack_memory_used@@Base+0x7e8>
   14e98:	str	r0, [r4]
   14e9c:	add	r0, sl, #1
   14ea0:	bl	1425c <_obstack_memory_used@@Base+0x7e8>
   14ea4:	ldr	r7, [r4]
   14ea8:	mov	sl, r0
   14eac:	str	r0, [r4, #8]
   14eb0:	cmp	r7, #0
   14eb4:	cmpne	r0, #0
   14eb8:	bne	14ed0 <_obstack_memory_used@@Base+0x145c>
   14ebc:	ldr	r3, [pc, #988]	; 152a0 <_obstack_memory_used@@Base+0x182c>
   14ec0:	movw	r2, #474	; 0x1da
   14ec4:	ldr	r1, [pc, #984]	; 152a4 <_obstack_memory_used@@Base+0x1830>
   14ec8:	ldr	r0, [pc, #992]	; 152b0 <_obstack_memory_used@@Base+0x183c>
   14ecc:	b	14e14 <_obstack_memory_used@@Base+0x13a0>
   14ed0:	ldr	r3, [pc, #988]	; 152b4 <_obstack_memory_used@@Base+0x1840>
   14ed4:	ldr	r2, [r4, #4]
   14ed8:	cmp	r2, r3
   14edc:	addls	r7, r7, #28
   14ee0:	movls	fp, r0
   14ee4:	bls	14f84 <_obstack_memory_used@@Base+0x1510>
   14ee8:	ldr	r3, [pc, #944]	; 152a0 <_obstack_memory_used@@Base+0x182c>
   14eec:	mov	r2, #476	; 0x1dc
   14ef0:	ldr	r1, [pc, #940]	; 152a4 <_obstack_memory_used@@Base+0x1830>
   14ef4:	ldr	r0, [pc, #956]	; 152b8 <_obstack_memory_used@@Base+0x1844>
   14ef8:	b	14e14 <_obstack_memory_used@@Base+0x13a0>
   14efc:	str	r5, [r7, #-28]	; 0xffffffe4
   14f00:	str	r0, [r7, #-24]	; 0xffffffe8
   14f04:	ldr	r3, [r5, #20]
   14f08:	str	fp, [r7, #-20]	; 0xffffffec
   14f0c:	cmp	r3, #0
   14f10:	movne	r8, r3
   14f14:	bne	14f30 <_obstack_memory_used@@Base+0x14bc>
   14f18:	ldr	r3, [r5]
   14f1c:	cmp	r3, #0
   14f20:	bne	14f30 <_obstack_memory_used@@Base+0x14bc>
   14f24:	ldr	r3, [r5, #4]
   14f28:	cmp	r3, #0
   14f2c:	addeq	r8, r8, #1
   14f30:	ldr	r3, [sp, #8]
   14f34:	strd	r8, [r7, #-16]
   14f38:	str	r3, [r7, #-8]
   14f3c:	ldr	r3, [r7, #-24]	; 0xffffffe8
   14f40:	mov	r0, r5
   14f44:	add	r3, r3, #1
   14f48:	str	r3, [r7, #-24]	; 0xffffffe8
   14f4c:	bl	13540 <argp_usage@@Base+0x14>
   14f50:	cmp	r0, #0
   14f54:	ldrbne	r2, [r5, #4]
   14f58:	movne	r3, sl
   14f5c:	bne	14fd4 <_obstack_memory_used@@Base+0x1560>
   14f60:	add	r5, r5, #24
   14f64:	mov	r0, r5
   14f68:	bl	13588 <argp_usage@@Base+0x5c>
   14f6c:	cmp	r0, #0
   14f70:	bne	14f80 <_obstack_memory_used@@Base+0x150c>
   14f74:	ldr	r3, [r5, #12]
   14f78:	tst	r3, #4
   14f7c:	bne	14f3c <_obstack_memory_used@@Base+0x14c8>
   14f80:	add	r7, r7, #28
   14f84:	mov	r0, r5
   14f88:	bl	13588 <argp_usage@@Base+0x5c>
   14f8c:	cmp	r0, #0
   14f90:	beq	14efc <_obstack_memory_used@@Base+0x1488>
   14f94:	mov	r3, #0
   14f98:	strb	r3, [fp]
   14f9c:	cmp	r6, #0
   14fa0:	beq	14fb8 <_obstack_memory_used@@Base+0x1544>
   14fa4:	add	r6, r6, #16
   14fa8:	ldr	r3, [r6, #-16]
   14fac:	sub	sl, r6, #16
   14fb0:	cmp	r3, #0
   14fb4:	bne	14fe8 <_obstack_memory_used@@Base+0x1574>
   14fb8:	mov	r0, r4
   14fbc:	add	sp, sp, #36	; 0x24
   14fc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14fc4:	ldrb	r1, [r1]
   14fc8:	add	r3, r3, #1
   14fcc:	cmp	r1, r2
   14fd0:	beq	14f60 <_obstack_memory_used@@Base+0x14ec>
   14fd4:	cmp	r3, fp
   14fd8:	mov	r1, r3
   14fdc:	bcc	14fc4 <_obstack_memory_used@@Base+0x1550>
   14fe0:	strb	r2, [fp], #1
   14fe4:	b	14f60 <_obstack_memory_used@@Base+0x14ec>
   14fe8:	ldmdb	r6, {r7, r8}
   14fec:	cmp	r8, #0
   14ff0:	bne	15000 <_obstack_memory_used@@Base+0x158c>
   14ff4:	cmp	r7, #0
   14ff8:	moveq	r1, r9
   14ffc:	beq	15050 <_obstack_memory_used@@Base+0x15dc>
   15000:	ldr	r3, [sp, #8]
   15004:	mov	r0, #28
   15008:	ldr	r5, [r3, #16]
   1500c:	bl	1425c <_obstack_memory_used@@Base+0x7e8>
   15010:	subs	r1, r0, #0
   15014:	beq	15050 <_obstack_memory_used@@Base+0x15dc>
   15018:	ldr	r3, [sp, #8]
   1501c:	cmp	r9, #0
   15020:	sub	r5, sl, r5
   15024:	asr	r5, r5, #4
   15028:	str	r7, [r1]
   1502c:	stmib	r1, {r5, r8, r9}
   15030:	str	r3, [r1, #16]
   15034:	moveq	r3, r9
   15038:	ldrne	r3, [r9, #20]
   1503c:	addne	r3, r3, #1
   15040:	str	r3, [r1, #20]
   15044:	ldr	r3, [r4, #12]
   15048:	str	r1, [r4, #12]
   1504c:	str	r3, [r1, #24]
   15050:	ldr	r0, [r6, #-16]
   15054:	bl	14ddc <_obstack_memory_used@@Base+0x1368>
   15058:	ldr	r3, [r4, #12]
   1505c:	mov	r5, r0
   15060:	add	r2, r4, #12
   15064:	cmp	r3, #0
   15068:	bne	150b4 <_obstack_memory_used@@Base+0x1640>
   1506c:	ldr	r1, [r5, #12]
   15070:	str	r1, [r2]
   15074:	ldr	r2, [r5, #4]
   15078:	str	r3, [r5, #12]
   1507c:	cmp	r2, #0
   15080:	beq	150a8 <_obstack_memory_used@@Base+0x1634>
   15084:	ldr	r1, [r4, #4]
   15088:	cmp	r1, #0
   1508c:	bne	150c0 <_obstack_memory_used@@Base+0x164c>
   15090:	str	r2, [r4, #4]
   15094:	ldr	r2, [r5]
   15098:	str	r2, [r4]
   1509c:	ldr	r2, [r5, #8]
   150a0:	str	r2, [r4, #8]
   150a4:	str	r3, [r5, #4]
   150a8:	mov	r0, r5
   150ac:	bl	1449c <_obstack_memory_used@@Base+0xa28>
   150b0:	b	14fa4 <_obstack_memory_used@@Base+0x1530>
   150b4:	add	r2, r3, #24
   150b8:	ldr	r3, [r3, #24]
   150bc:	b	15064 <_obstack_memory_used@@Base+0x15f0>
   150c0:	add	r3, r2, r1
   150c4:	str	r3, [sp, #12]
   150c8:	mov	r3, #28
   150cc:	ldr	r2, [sp, #12]
   150d0:	mul	r0, r3, r2
   150d4:	bl	1425c <_obstack_memory_used@@Base+0x7e8>
   150d8:	str	r0, [sp]
   150dc:	ldr	r0, [r4, #8]
   150e0:	bl	11224 <strlen@plt>
   150e4:	mov	fp, r0
   150e8:	ldr	r0, [r5, #8]
   150ec:	bl	11224 <strlen@plt>
   150f0:	add	r0, fp, r0
   150f4:	add	r0, r0, #1
   150f8:	bl	1425c <_obstack_memory_used@@Base+0x7e8>
   150fc:	ldr	r3, [sp]
   15100:	mov	r8, r0
   15104:	cmp	r3, #0
   15108:	cmpne	r0, #0
   1510c:	bne	15124 <_obstack_memory_used@@Base+0x16b0>
   15110:	ldr	r3, [pc, #420]	; 152bc <_obstack_memory_used@@Base+0x1848>
   15114:	movw	r2, #970	; 0x3ca
   15118:	ldr	r1, [pc, #388]	; 152a4 <_obstack_memory_used@@Base+0x1830>
   1511c:	ldr	r0, [pc, #412]	; 152c0 <_obstack_memory_used@@Base+0x184c>
   15120:	b	14e14 <_obstack_memory_used@@Base+0x13a0>
   15124:	ldr	r2, [pc, #392]	; 152b4 <_obstack_memory_used@@Base+0x1840>
   15128:	ldr	r3, [sp, #12]
   1512c:	cmp	r3, r2
   15130:	bls	15148 <_obstack_memory_used@@Base+0x16d4>
   15134:	ldr	r3, [pc, #384]	; 152bc <_obstack_memory_used@@Base+0x1848>
   15138:	mov	r2, #972	; 0x3cc
   1513c:	ldr	r1, [pc, #352]	; 152a4 <_obstack_memory_used@@Base+0x1830>
   15140:	ldr	r0, [pc, #380]	; 152c4 <_obstack_memory_used@@Base+0x1850>
   15144:	b	14e14 <_obstack_memory_used@@Base+0x13a0>
   15148:	ldm	r4, {r3, sl}
   1514c:	ldr	r0, [sp]
   15150:	str	r3, [sp, #16]
   15154:	mov	r3, #28
   15158:	ldr	r1, [sp, #16]
   1515c:	mul	r7, r3, sl
   15160:	mov	r2, r7
   15164:	bl	11200 <mempcpy@plt>
   15168:	ldm	r5, {r1, r2}
   1516c:	mov	r3, #28
   15170:	str	r2, [sp, #4]
   15174:	mul	r2, r3, r2
   15178:	bl	11134 <memcpy@plt>
   1517c:	ldr	r3, [r4, #8]
   15180:	mov	r2, fp
   15184:	mov	r0, r8
   15188:	mov	r1, r3
   1518c:	str	r3, [sp, #20]
   15190:	bl	11134 <memcpy@plt>
   15194:	ldr	r1, [sp]
   15198:	ldr	r3, [sp, #20]
   1519c:	cmp	sl, #0
   151a0:	bne	151f4 <_obstack_memory_used@@Base+0x1780>
   151a4:	ldr	r3, [sp]
   151a8:	add	r1, r8, fp
   151ac:	add	r7, r7, #28
   151b0:	mov	sl, r1
   151b4:	ldr	r2, [r5, #8]
   151b8:	add	r7, r3, r7
   151bc:	ldr	r3, [sp, #4]
   151c0:	cmp	r3, #0
   151c4:	bne	15210 <_obstack_memory_used@@Base+0x179c>
   151c8:	strb	r3, [sl]
   151cc:	ldr	r0, [sp, #16]
   151d0:	bl	1369c <argp_usage@@Base+0x170>
   151d4:	ldr	r0, [r4, #8]
   151d8:	bl	1369c <argp_usage@@Base+0x170>
   151dc:	ldr	r3, [sp]
   151e0:	str	r3, [r4]
   151e4:	ldr	r3, [sp, #12]
   151e8:	str	r8, [r4, #8]
   151ec:	str	r3, [r4, #4]
   151f0:	b	150a8 <_obstack_memory_used@@Base+0x1634>
   151f4:	ldr	r2, [r1, #8]
   151f8:	sub	sl, sl, #1
   151fc:	add	r1, r1, #28
   15200:	sub	r2, r2, r3
   15204:	add	r2, r8, r2
   15208:	str	r2, [r1, #-20]	; 0xffffffec
   1520c:	b	1519c <_obstack_memory_used@@Base+0x1728>
   15210:	ldr	fp, [r7, #-28]	; 0xffffffe4
   15214:	str	sl, [r7, #-20]	; 0xffffffec
   15218:	ldr	r3, [r7, #-24]	; 0xffffffe8
   1521c:	cmp	r3, #0
   15220:	bne	15238 <_obstack_memory_used@@Base+0x17c4>
   15224:	ldr	r3, [sp, #4]
   15228:	add	r7, r7, #28
   1522c:	sub	r3, r3, #1
   15230:	str	r3, [sp, #4]
   15234:	b	151bc <_obstack_memory_used@@Base+0x1748>
   15238:	mov	r0, fp
   1523c:	str	r1, [sp, #20]
   15240:	strd	r2, [sp, #24]
   15244:	bl	13540 <argp_usage@@Base+0x14>
   15248:	cmp	r0, #0
   1524c:	add	r1, sp, #20
   15250:	ldm	r1, {r1, r2, r3}
   15254:	beq	1526c <_obstack_memory_used@@Base+0x17f8>
   15258:	ldrb	ip, [r2]
   1525c:	ldr	r0, [fp, #4]
   15260:	cmp	ip, r0
   15264:	moveq	r0, r8
   15268:	beq	15288 <_obstack_memory_used@@Base+0x1814>
   1526c:	add	fp, fp, #24
   15270:	sub	r3, r3, #1
   15274:	b	1521c <_obstack_memory_used@@Base+0x17a8>
   15278:	ldrb	lr, [lr]
   1527c:	add	r0, r0, #1
   15280:	cmp	lr, ip
   15284:	beq	15298 <_obstack_memory_used@@Base+0x1824>
   15288:	cmp	r1, r0
   1528c:	mov	lr, r0
   15290:	bhi	15278 <_obstack_memory_used@@Base+0x1804>
   15294:	strb	ip, [sl], #1
   15298:	add	r2, r2, #1
   1529c:	b	1526c <_obstack_memory_used@@Base+0x17f8>
   152a0:	muleq	r1, sl, r5
   152a4:	andeq	r9, r1, ip, ror r6
   152a8:	andeq	r9, r1, r8, lsl #13
   152ac:	andeq	r9, r1, ip, lsl #13
   152b0:	muleq	r1, ip, r6
   152b4:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   152b8:			; <UNDEFINED> instruction: 0x000196bf
   152bc:	andeq	r9, r1, r3, lsr #11
   152c0:	strdeq	r9, [r1], -r8
   152c4:	andeq	r9, r1, r4, asr #13
   152c8:	push	{r4, r5, r6, lr}
   152cc:	mov	r4, r0
   152d0:	mov	r5, r1
   152d4:	ldr	r0, [r0, #12]
   152d8:	ldr	r1, [r1, #12]
   152dc:	cmp	r0, r1
   152e0:	bne	15314 <_obstack_memory_used@@Base+0x18a0>
   152e4:	ldr	r0, [r5, #8]
   152e8:	ldr	r3, [r4, #8]
   152ec:	mvn	r2, r0
   152f0:	lsr	r2, r2, #31
   152f4:	cmp	r2, r3, lsr #31
   152f8:	subne	r0, r3, r0
   152fc:	subeq	r0, r0, r3
   15300:	cmp	r0, #0
   15304:	ldreq	r3, [r4, #4]
   15308:	ldreq	r0, [r5, #4]
   1530c:	subeq	r0, r0, r3
   15310:	pop	{r4, r5, r6, pc}
   15314:	bl	152c8 <_obstack_memory_used@@Base+0x1854>
   15318:	cmp	r0, #0
   1531c:	beq	152e4 <_obstack_memory_used@@Base+0x1870>
   15320:	pop	{r4, r5, r6, pc}
   15324:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   15328:	mov	r6, r0
   1532c:	mov	r5, r1
   15330:	ldr	r0, [r0, #16]
   15334:	cmp	r0, #0
   15338:	movne	r3, r0
   1533c:	bne	1534c <_obstack_memory_used@@Base+0x18d8>
   15340:	ldr	r3, [r6, #12]
   15344:	b	1535c <_obstack_memory_used@@Base+0x18e8>
   15348:	mov	r3, r2
   1534c:	ldr	r2, [r3, #12]
   15350:	cmp	r2, #0
   15354:	bne	15348 <_obstack_memory_used@@Base+0x18d4>
   15358:	ldr	r3, [r3, #8]
   1535c:	ldr	r1, [r5, #16]
   15360:	cmp	r1, #0
   15364:	movne	r2, r1
   15368:	bne	15378 <_obstack_memory_used@@Base+0x1904>
   1536c:	ldr	r4, [r5, #12]
   15370:	b	15388 <_obstack_memory_used@@Base+0x1914>
   15374:	mov	r2, ip
   15378:	ldr	ip, [r2, #12]
   1537c:	cmp	ip, #0
   15380:	bne	15374 <_obstack_memory_used@@Base+0x1900>
   15384:	ldr	r4, [r2, #8]
   15388:	mvn	r2, r4
   1538c:	lsr	r2, r2, #31
   15390:	cmp	r2, r3, lsr #31
   15394:	subne	r4, r3, r4
   15398:	subeq	r4, r4, r3
   1539c:	cmp	r4, #0
   153a0:	bne	153f4 <_obstack_memory_used@@Base+0x1980>
   153a4:	adds	r4, r1, #0
   153a8:	movne	r4, #1
   153ac:	cmp	r0, #0
   153b0:	rsbeq	r4, r4, #0
   153b4:	rsbne	r4, r4, #1
   153b8:	cmp	r4, #0
   153bc:	bne	153f4 <_obstack_memory_used@@Base+0x1980>
   153c0:	cmp	r0, #0
   153c4:	beq	15430 <_obstack_memory_used@@Base+0x19bc>
   153c8:	ldr	r3, [r0, #20]
   153cc:	ldr	r2, [r1, #20]
   153d0:	cmp	r3, r2
   153d4:	ble	15400 <_obstack_memory_used@@Base+0x198c>
   153d8:	ldr	r0, [r0, #12]
   153dc:	ldr	r3, [r0, #20]
   153e0:	cmp	r2, r3
   153e4:	blt	153d8 <_obstack_memory_used@@Base+0x1964>
   153e8:	bl	152c8 <_obstack_memory_used@@Base+0x1854>
   153ec:	subs	r4, r0, #0
   153f0:	moveq	r4, #1
   153f4:	mov	r0, r4
   153f8:	add	sp, sp, #8
   153fc:	pop	{r4, r5, r6, r7, r8, pc}
   15400:	bge	15424 <_obstack_memory_used@@Base+0x19b0>
   15404:	ldr	r1, [r1, #12]
   15408:	ldr	r2, [r1, #20]
   1540c:	cmp	r3, r2
   15410:	blt	15404 <_obstack_memory_used@@Base+0x1990>
   15414:	bl	152c8 <_obstack_memory_used@@Base+0x1854>
   15418:	subs	r4, r0, #0
   1541c:	mvneq	r4, #0
   15420:	b	153f4 <_obstack_memory_used@@Base+0x1980>
   15424:	bl	152c8 <_obstack_memory_used@@Base+0x1854>
   15428:	subs	r4, r0, #0
   1542c:	bne	153f4 <_obstack_memory_used@@Base+0x1980>
   15430:	ldr	r4, [r5, #12]
   15434:	ldr	r0, [r6, #12]
   15438:	mvn	r3, r4
   1543c:	lsr	r3, r3, #31
   15440:	cmp	r3, r0, lsr #31
   15444:	subne	r4, r0, r4
   15448:	subeq	r4, r4, r0
   1544c:	cmp	r4, #0
   15450:	bne	153f4 <_obstack_memory_used@@Base+0x1980>
   15454:	mov	r0, r6
   15458:	bl	14378 <_obstack_memory_used@@Base+0x904>
   1545c:	mov	r7, r0
   15460:	mov	r0, r5
   15464:	str	r7, [sp]
   15468:	bl	14378 <_obstack_memory_used@@Base+0x904>
   1546c:	ldr	r3, [r6]
   15470:	adds	r7, r7, #0
   15474:	movne	r7, #1
   15478:	str	r0, [sp, #4]
   1547c:	ldr	r3, [r3, #12]
   15480:	ands	r3, r7, r3, lsr #3
   15484:	beq	15498 <_obstack_memory_used@@Base+0x1a24>
   15488:	mov	r0, sp
   1548c:	bl	14814 <_obstack_memory_used@@Base+0xda0>
   15490:	adds	r4, r0, #0
   15494:	movne	r4, #1
   15498:	ldr	r3, [r5]
   1549c:	ldr	r0, [r3, #12]
   154a0:	ands	r0, r0, #8
   154a4:	beq	154c4 <_obstack_memory_used@@Base+0x1a50>
   154a8:	ldr	r0, [sp, #4]
   154ac:	cmp	r0, #0
   154b0:	beq	154c4 <_obstack_memory_used@@Base+0x1a50>
   154b4:	add	r0, sp, #4
   154b8:	bl	14814 <_obstack_memory_used@@Base+0xda0>
   154bc:	adds	r0, r0, #0
   154c0:	movne	r0, #1
   154c4:	subs	r4, r4, r0
   154c8:	bne	153f4 <_obstack_memory_used@@Base+0x1980>
   154cc:	ldr	r2, [r6, #20]
   154d0:	mov	r3, r4
   154d4:	mov	r0, r6
   154d8:	ldr	r1, [pc, #220]	; 155bc <_obstack_memory_used@@Base+0x1b48>
   154dc:	ldr	r2, [r2, #24]
   154e0:	bl	142cc <_obstack_memory_used@@Base+0x858>
   154e4:	ldr	r2, [r5, #20]
   154e8:	uxtb	r6, r0
   154ec:	mov	r3, r4
   154f0:	mov	r0, r5
   154f4:	ldr	r1, [pc, #192]	; 155bc <_obstack_memory_used@@Base+0x1b48>
   154f8:	ldr	r2, [r2, #24]
   154fc:	bl	142cc <_obstack_memory_used@@Base+0x858>
   15500:	cmp	r6, #0
   15504:	uxtb	r5, r0
   15508:	beq	15514 <_obstack_memory_used@@Base+0x1aa0>
   1550c:	mov	r7, r6
   15510:	b	15524 <_obstack_memory_used@@Base+0x1ab0>
   15514:	ldr	r3, [sp]
   15518:	cmp	r3, #0
   1551c:	ldrbne	r7, [r3]
   15520:	beq	1550c <_obstack_memory_used@@Base+0x1a98>
   15524:	cmp	r5, #0
   15528:	beq	15534 <_obstack_memory_used@@Base+0x1ac0>
   1552c:	mov	r8, r5
   15530:	b	15544 <_obstack_memory_used@@Base+0x1ad0>
   15534:	ldr	r3, [sp, #4]
   15538:	cmp	r3, #0
   1553c:	ldrbne	r8, [r3]
   15540:	beq	1552c <_obstack_memory_used@@Base+0x1ab8>
   15544:	bl	111e8 <__ctype_tolower_loc@plt>
   15548:	ldr	r3, [r0]
   1554c:	ldr	r4, [r3, r7, lsl #2]
   15550:	ldr	r0, [r3, r8, lsl #2]
   15554:	subs	r4, r4, r0
   15558:	bne	153f4 <_obstack_memory_used@@Base+0x1980>
   1555c:	subs	r4, r8, r7
   15560:	bne	153f4 <_obstack_memory_used@@Base+0x1980>
   15564:	adds	r4, r5, #0
   15568:	movne	r4, #1
   1556c:	cmp	r6, #0
   15570:	rsbeq	r4, r4, #0
   15574:	rsbne	r4, r4, #1
   15578:	cmp	r4, #0
   1557c:	bne	153f4 <_obstack_memory_used@@Base+0x1980>
   15580:	cmp	r6, #0
   15584:	bne	153f4 <_obstack_memory_used@@Base+0x1980>
   15588:	ldrd	r0, [sp]
   1558c:	adds	r4, r1, #0
   15590:	movne	r4, #1
   15594:	cmp	r0, #0
   15598:	rsbeq	r4, r4, #0
   1559c:	rsbne	r4, r4, #1
   155a0:	cmp	r4, #0
   155a4:	bne	153f4 <_obstack_memory_used@@Base+0x1980>
   155a8:	cmp	r0, #0
   155ac:	beq	153f4 <_obstack_memory_used@@Base+0x1980>
   155b0:	bl	11170 <strcasecmp@plt>
   155b4:	mov	r4, r0
   155b8:	b	153f4 <_obstack_memory_used@@Base+0x1980>
   155bc:	andeq	r4, r1, r0, ror #6

000155c0 <argp_failure@@Base>:
   155c0:	push	{r3}		; (str r3, [sp, #-4]!)
   155c4:	push	{r4, r5, r6, r7, r8, lr}
   155c8:	subs	r5, r0, #0
   155cc:	sub	sp, sp, #204	; 0xcc
   155d0:	ldr	r8, [sp, #228]	; 0xe4
   155d4:	beq	155f8 <argp_failure@@Base+0x38>
   155d8:	ldr	r3, [r5, #16]
   155dc:	tst	r3, #2
   155e0:	ldreq	r4, [r5, #44]	; 0x2c
   155e4:	beq	15600 <argp_failure@@Base+0x40>
   155e8:	add	sp, sp, #204	; 0xcc
   155ec:	pop	{r4, r5, r6, r7, r8, lr}
   155f0:	add	sp, sp, #4
   155f4:	bx	lr
   155f8:	ldr	r3, [pc, #244]	; 156f4 <argp_failure@@Base+0x134>
   155fc:	ldr	r4, [r3]
   15600:	cmp	r4, #0
   15604:	beq	155e8 <argp_failure@@Base+0x28>
   15608:	mov	r0, r4
   1560c:	mov	r6, r2
   15610:	mov	r7, r1
   15614:	bl	112cc <flockfile@plt>
   15618:	cmp	r5, #0
   1561c:	mov	r1, r4
   15620:	ldreq	r3, [pc, #208]	; 156f8 <argp_failure@@Base+0x138>
   15624:	ldrne	r0, [r5, #40]	; 0x28
   15628:	ldreq	r0, [r3]
   1562c:	bl	110b0 <fputs_unlocked@plt>
   15630:	cmp	r8, #0
   15634:	beq	15668 <argp_failure@@Base+0xa8>
   15638:	add	r3, sp, #232	; 0xe8
   1563c:	mov	r1, r4
   15640:	mov	r0, #58	; 0x3a
   15644:	str	r3, [sp]
   15648:	bl	11380 <putc_unlocked@plt>
   1564c:	mov	r1, r4
   15650:	mov	r0, #32
   15654:	bl	11380 <putc_unlocked@plt>
   15658:	mov	r1, r8
   1565c:	mov	r0, r4
   15660:	ldr	r2, [sp]
   15664:	bl	1129c <vfprintf@plt>
   15668:	cmp	r6, #0
   1566c:	beq	156bc <argp_failure@@Base+0xfc>
   15670:	mov	r1, r4
   15674:	mov	r0, #58	; 0x3a
   15678:	bl	11380 <putc_unlocked@plt>
   1567c:	mov	r1, r4
   15680:	mov	r0, #32
   15684:	bl	11380 <putc_unlocked@plt>
   15688:	mov	r2, #200	; 0xc8
   1568c:	mov	r1, sp
   15690:	mov	r0, r6
   15694:	bl	11260 <strerror_r@plt>
   15698:	cmp	r0, #0
   1569c:	bne	156b4 <argp_failure@@Base+0xf4>
   156a0:	mov	r0, r6
   156a4:	bl	111dc <strerror@plt>
   156a8:	ldr	r3, [pc, #76]	; 156fc <argp_failure@@Base+0x13c>
   156ac:	cmp	r0, #0
   156b0:	moveq	r0, r3
   156b4:	mov	r1, r4
   156b8:	bl	110b0 <fputs_unlocked@plt>
   156bc:	mov	r1, r4
   156c0:	mov	r0, #10
   156c4:	bl	11380 <putc_unlocked@plt>
   156c8:	mov	r0, r4
   156cc:	bl	1117c <funlockfile@plt>
   156d0:	cmp	r7, #0
   156d4:	beq	155e8 <argp_failure@@Base+0x28>
   156d8:	cmp	r5, #0
   156dc:	beq	156ec <argp_failure@@Base+0x12c>
   156e0:	ldr	r3, [r5, #16]
   156e4:	tst	r3, #32
   156e8:	bne	155e8 <argp_failure@@Base+0x28>
   156ec:	mov	r0, r7
   156f0:	bl	11218 <exit@plt>
   156f4:			; <UNDEFINED> instruction: 0x0002d8b0
   156f8:	andeq	sp, r2, r8, lsr #17
   156fc:	andeq	r9, r1, r1, lsl r7
   15700:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15704:	add	fp, sp, #32
   15708:	sub	sp, sp, #108	; 0x6c
   1570c:	str	r0, [fp, #-104]	; 0xffffff98
   15710:	str	r3, [fp, #-100]	; 0xffffff9c
   15714:	subs	r3, r2, #0
   15718:	str	r3, [fp, #-108]	; 0xffffff94
   1571c:	str	r1, [fp, #-96]	; 0xffffffa0
   15720:	beq	15a60 <argp_failure@@Base+0x4a0>
   15724:	ldr	r5, [pc, #2580]	; 16140 <argp_failure@@Base+0xb80>
   15728:	mov	r0, r3
   1572c:	bl	112cc <flockfile@plt>
   15730:	ldr	r3, [r5, #36]	; 0x24
   15734:	cmp	r3, #0
   15738:	bne	15a3c <argp_failure@@Base+0x47c>
   1573c:	ldr	r0, [pc, #2560]	; 16144 <argp_failure@@Base+0xb84>
   15740:	bl	111ac <getenv@plt>
   15744:	mov	lr, r5
   15748:	mov	r6, r0
   1574c:	ldm	lr!, {r0, r1, r2, r3}
   15750:	sub	ip, fp, #76	; 0x4c
   15754:	cmp	r6, #0
   15758:	stmia	ip!, {r0, r1, r2, r3}
   1575c:	ldm	lr!, {r0, r1, r2, r3}
   15760:	stmia	ip!, {r0, r1, r2, r3}
   15764:	ldm	lr, {r0, r1}
   15768:	stm	ip, {r0, r1}
   1576c:	beq	15a3c <argp_failure@@Base+0x47c>
   15770:	ldrb	r3, [r6]
   15774:	cmp	r3, #0
   15778:	beq	159a8 <argp_failure@@Base+0x3e8>
   1577c:	bl	1120c <__ctype_b_loc@plt>
   15780:	mov	r1, r6
   15784:	ldr	r8, [r0]
   15788:	b	15790 <argp_failure@@Base+0x1d0>
   1578c:	mov	r1, r3
   15790:	mov	r3, r1
   15794:	mov	r7, r1
   15798:	ldrb	r0, [r3], #1
   1579c:	lsl	r2, r0, #1
   157a0:	ldrh	r2, [r8, r2]
   157a4:	tst	r2, #8192	; 0x2000
   157a8:	bne	1578c <argp_failure@@Base+0x1cc>
   157ac:	ands	r2, r2, #1024	; 0x400
   157b0:	beq	1598c <argp_failure@@Base+0x3cc>
   157b4:	mov	ip, r1
   157b8:	ldrb	r3, [ip], #1
   157bc:	lsl	r2, r3, #1
   157c0:	cmp	r3, #45	; 0x2d
   157c4:	cmpne	r3, #95	; 0x5f
   157c8:	moveq	r3, #1
   157cc:	movne	r3, #0
   157d0:	ldrh	r2, [r8, r2]
   157d4:	ubfx	r2, r2, #3, #1
   157d8:	orrs	r3, r2, r3
   157dc:	bne	15884 <argp_failure@@Base+0x2c4>
   157e0:	sub	r9, r1, r7
   157e4:	mov	r6, r1
   157e8:	ldrb	r2, [r1], #1
   157ec:	lsl	r3, r2, #1
   157f0:	ldrh	r3, [r8, r3]
   157f4:	ands	r3, r3, #8192	; 0x2000
   157f8:	bne	157e4 <argp_failure@@Base+0x224>
   157fc:	cmp	r2, #44	; 0x2c
   15800:	cmpne	r2, #0
   15804:	beq	1588c <argp_failure@@Base+0x2cc>
   15808:	cmp	r2, #61	; 0x3d
   1580c:	bne	15830 <argp_failure@@Base+0x270>
   15810:	mov	r2, r1
   15814:	mov	r6, r2
   15818:	add	r2, r2, #1
   1581c:	ldrb	r3, [r6]
   15820:	lsl	r3, r3, #1
   15824:	ldrh	r3, [r8, r3]
   15828:	tst	r3, #8192	; 0x2000
   1582c:	bne	15814 <argp_failure@@Base+0x254>
   15830:	ldrb	r3, [r6]
   15834:	lsl	r3, r3, #1
   15838:	ldrh	r4, [r8, r3]
   1583c:	ands	r4, r4, #2048	; 0x800
   15840:	beq	15958 <argp_failure@@Base+0x398>
   15844:	mov	r0, r6
   15848:	bl	112e4 <atoi@plt>
   1584c:	mov	sl, r0
   15850:	ldrb	r2, [r6, #1]!
   15854:	lsl	r2, r2, #1
   15858:	ldrh	r2, [r8, r2]
   1585c:	tst	r2, #2048	; 0x800
   15860:	bne	15850 <argp_failure@@Base+0x290>
   15864:	mov	r2, r6
   15868:	mov	r6, r2
   1586c:	ldrb	r1, [r2], #1
   15870:	lsl	r1, r1, #1
   15874:	ldrh	r4, [r8, r1]
   15878:	ands	r4, r4, #8192	; 0x2000
   1587c:	bne	15868 <argp_failure@@Base+0x2a8>
   15880:	b	158bc <argp_failure@@Base+0x2fc>
   15884:	mov	r1, ip
   15888:	b	157b4 <argp_failure@@Base+0x1f4>
   1588c:	cmp	r0, #110	; 0x6e
   15890:	bne	15954 <argp_failure@@Base+0x394>
   15894:	ldrb	r2, [r7, #1]
   15898:	cmp	r2, #111	; 0x6f
   1589c:	bne	15954 <argp_failure@@Base+0x394>
   158a0:	ldrb	r2, [r7, #2]
   158a4:	cmp	r2, #45	; 0x2d
   158a8:	bne	15954 <argp_failure@@Base+0x394>
   158ac:	add	r7, r7, #3
   158b0:	sub	r9, r9, #3
   158b4:	mov	sl, r3
   158b8:	mov	r4, #1
   158bc:	ldr	r8, [pc, #2180]	; 16148 <argp_failure@@Base+0xb88>
   158c0:	mov	r3, #9
   158c4:	str	r3, [fp, #-112]	; 0xffffff90
   158c8:	mov	r0, r8
   158cc:	bl	11224 <strlen@plt>
   158d0:	cmp	r0, r9
   158d4:	bne	15974 <argp_failure@@Base+0x3b4>
   158d8:	mov	r2, r9
   158dc:	mov	r1, r8
   158e0:	mov	r0, r7
   158e4:	bl	11344 <strncmp@plt>
   158e8:	cmp	r0, #0
   158ec:	bne	15974 <argp_failure@@Base+0x3b4>
   158f0:	cmp	r4, #0
   158f4:	beq	15960 <argp_failure@@Base+0x3a0>
   158f8:	ldrb	r2, [r8, #14]
   158fc:	cmp	r2, #0
   15900:	bne	15960 <argp_failure@@Base+0x3a0>
   15904:	ldr	r3, [pc, #2112]	; 1614c <argp_failure@@Base+0xb8c>
   15908:	mov	r1, r2
   1590c:	str	r9, [sp]
   15910:	str	r7, [sp, #4]
   15914:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15918:	bl	155c0 <argp_failure@@Base>
   1591c:	ldr	r3, [pc, #2092]	; 16150 <argp_failure@@Base+0xb90>
   15920:	cmp	r8, r3
   15924:	bne	15944 <argp_failure@@Base+0x384>
   15928:	mov	r2, #0
   1592c:	ldr	r3, [pc, #2080]	; 16154 <argp_failure@@Base+0xb94>
   15930:	mov	r1, r2
   15934:	str	r9, [sp]
   15938:	str	r7, [sp, #4]
   1593c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15940:	bl	155c0 <argp_failure@@Base>
   15944:	ldrb	r3, [r6]
   15948:	cmp	r3, #44	; 0x2c
   1594c:	addeq	r6, r6, #1
   15950:	b	15770 <argp_failure@@Base+0x1b0>
   15954:	mov	r4, #1
   15958:	mov	sl, r4
   1595c:	b	158bc <argp_failure@@Base+0x2fc>
   15960:	ldrb	r2, [r8, #15]
   15964:	sub	r3, fp, #36	; 0x24
   15968:	add	r2, r3, r2
   1596c:	str	sl, [r2, #-40]	; 0xffffffd8
   15970:	b	1591c <argp_failure@@Base+0x35c>
   15974:	ldr	r3, [fp, #-112]	; 0xffffff90
   15978:	add	r8, r8, #16
   1597c:	subs	r3, r3, #1
   15980:	str	r3, [fp, #-112]	; 0xffffff90
   15984:	bne	158c8 <argp_failure@@Base+0x308>
   15988:	b	1591c <argp_failure@@Base+0x35c>
   1598c:	cmp	r0, #0
   15990:	beq	159ec <argp_failure@@Base+0x42c>
   15994:	ldr	r3, [pc, #1980]	; 16158 <argp_failure@@Base+0xb98>
   15998:	str	r1, [sp]
   1599c:	mov	r1, r2
   159a0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   159a4:	bl	155c0 <argp_failure@@Base>
   159a8:	ldr	r3, [pc, #1944]	; 16148 <argp_failure@@Base+0xb88>
   159ac:	mov	r0, #9
   159b0:	ldr	ip, [fp, #-44]	; 0xffffffd4
   159b4:	subs	r0, r0, #1
   159b8:	add	r3, r3, #16
   159bc:	bne	159f4 <argp_failure@@Base+0x434>
   159c0:	sub	lr, fp, #76	; 0x4c
   159c4:	ldr	ip, [pc, #1908]	; 16140 <argp_failure@@Base+0xb80>
   159c8:	ldm	lr!, {r0, r1, r2, r3}
   159cc:	stmia	ip!, {r0, r1, r2, r3}
   159d0:	ldm	lr!, {r0, r1, r2, r3}
   159d4:	stmia	ip!, {r0, r1, r2, r3}
   159d8:	mov	r3, #1
   159dc:	ldm	lr, {r0, r1}
   159e0:	stm	ip, {r0, r1}
   159e4:	str	r3, [r5, #36]	; 0x24
   159e8:	b	15a3c <argp_failure@@Base+0x47c>
   159ec:	mov	r6, r1
   159f0:	b	15770 <argp_failure@@Base+0x1b0>
   159f4:	ldrb	r2, [r3, #14]
   159f8:	cmp	r2, #0
   159fc:	bne	159b4 <argp_failure@@Base+0x3f4>
   15a00:	ldrb	r1, [r3, #15]
   15a04:	cmp	r1, #32
   15a08:	beq	159b4 <argp_failure@@Base+0x3f4>
   15a0c:	sub	lr, fp, #36	; 0x24
   15a10:	add	r1, lr, r1
   15a14:	ldr	r1, [r1, #-40]	; 0xffffffd8
   15a18:	cmp	r1, ip
   15a1c:	blt	159b4 <argp_failure@@Base+0x3f4>
   15a20:	str	r3, [sp, #4]
   15a24:	mov	r1, r2
   15a28:	ldr	r3, [pc, #1836]	; 1615c <argp_failure@@Base+0xb9c>
   15a2c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15a30:	str	r3, [sp]
   15a34:	ldr	r3, [pc, #1828]	; 16160 <argp_failure@@Base+0xba0>
   15a38:	bl	155c0 <argp_failure@@Base>
   15a3c:	mov	r3, #0
   15a40:	ldr	r0, [fp, #-108]	; 0xffffff94
   15a44:	mov	r1, r3
   15a48:	ldr	r2, [r5, #32]
   15a4c:	bl	16e18 <argp_error@@Base+0xba8>
   15a50:	subs	r4, r0, #0
   15a54:	bne	15a68 <argp_failure@@Base+0x4a8>
   15a58:	ldr	r0, [fp, #-108]	; 0xffffff94
   15a5c:	bl	1117c <funlockfile@plt>
   15a60:	sub	sp, fp, #32
   15a64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15a68:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15a6c:	ands	r3, r3, #11
   15a70:	moveq	sl, r3
   15a74:	beq	15ad4 <argp_failure@@Base+0x514>
   15a78:	mov	r1, #0
   15a7c:	ldr	r0, [fp, #-104]	; 0xffffff98
   15a80:	bl	14ddc <_obstack_memory_used@@Base+0x1368>
   15a84:	mov	sl, r0
   15a88:	ldr	r1, [pc, #1748]	; 16164 <argp_failure@@Base+0xba4>
   15a8c:	bl	14be8 <_obstack_memory_used@@Base+0x1174>
   15a90:	ldr	r1, [pc, #1744]	; 16168 <argp_failure@@Base+0xba8>
   15a94:	mov	r0, sl
   15a98:	bl	14be8 <_obstack_memory_used@@Base+0x1174>
   15a9c:	ldr	r1, [sl, #4]
   15aa0:	cmp	r1, #0
   15aa4:	beq	15ad4 <argp_failure@@Base+0x514>
   15aa8:	ldr	r0, [sl]
   15aac:	mov	r3, #0
   15ab0:	mov	r2, r0
   15ab4:	str	r3, [r2, #24]
   15ab8:	add	r3, r3, #1
   15abc:	add	r2, r2, #28
   15ac0:	cmp	r1, r3
   15ac4:	bne	15ab4 <argp_failure@@Base+0x4f4>
   15ac8:	ldr	r3, [pc, #1692]	; 1616c <argp_failure@@Base+0xbac>
   15acc:	mov	r2, #28
   15ad0:	bl	112f0 <qsort@plt>
   15ad4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15ad8:	ands	r3, r3, #3
   15adc:	moveq	r5, r3
   15ae0:	beq	15bd0 <argp_failure@@Base+0x610>
   15ae4:	ldr	r0, [fp, #-104]	; 0xffffff98
   15ae8:	mov	r8, #1
   15aec:	bl	144e8 <_obstack_memory_used@@Base+0xa74>
   15af0:	add	r3, r0, #7
   15af4:	mov	r2, r0
   15af8:	ldr	r7, [pc, #1648]	; 16170 <argp_failure@@Base+0xbb0>
   15afc:	bic	r3, r3, #7
   15b00:	mov	r1, #0
   15b04:	sub	sp, sp, r3
   15b08:	add	r6, sp, #8
   15b0c:	mov	r0, r6
   15b10:	bl	1126c <memset@plt>
   15b14:	mov	r0, r4
   15b18:	ldr	r1, [r5, #28]
   15b1c:	bl	17574 <argp_error@@Base+0x1304>
   15b20:	cmp	r8, #0
   15b24:	mov	r1, r7
   15b28:	ldr	r3, [fp, #4]
   15b2c:	mov	r9, r0
   15b30:	mov	r0, r4
   15b34:	str	r6, [fp, #-76]	; 0xffffffb4
   15b38:	ldrne	r2, [pc, #1588]	; 16174 <argp_failure@@Base+0xbb4>
   15b3c:	ldreq	r2, [pc, #1588]	; 16178 <argp_failure@@Base+0xbb8>
   15b40:	bl	173b8 <argp_error@@Base+0x1148>
   15b44:	mov	r0, r4
   15b48:	ldr	r1, [r5, #28]
   15b4c:	bl	17514 <argp_error@@Base+0x12a4>
   15b50:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15b54:	mov	r8, r0
   15b58:	tst	r3, #2
   15b5c:	beq	15d98 <argp_failure@@Base+0x7d8>
   15b60:	ldr	r3, [sl, #4]
   15b64:	cmp	r3, #0
   15b68:	beq	15b78 <argp_failure@@Base+0x5b8>
   15b6c:	ldr	r1, [pc, #1544]	; 1617c <argp_failure@@Base+0xbbc>
   15b70:	mov	r0, r4
   15b74:	bl	1748c <argp_error@@Base+0x121c>
   15b78:	sub	r2, fp, #76	; 0x4c
   15b7c:	mov	r3, #1
   15b80:	str	r4, [sp]
   15b84:	ldr	r0, [fp, #-104]	; 0xffffff98
   15b88:	ldr	r1, [fp, #-96]	; 0xffffffa0
   15b8c:	bl	148c0 <_obstack_memory_used@@Base+0xe4c>
   15b90:	mov	r3, r0
   15b94:	mov	r1, r9
   15b98:	mov	r0, r4
   15b9c:	str	r3, [fp, #-112]	; 0xffffff90
   15ba0:	bl	17574 <argp_error@@Base+0x1304>
   15ba4:	mov	r1, r8
   15ba8:	mov	r0, r4
   15bac:	bl	17514 <argp_error@@Base+0x12a4>
   15bb0:	mov	r1, #10
   15bb4:	mov	r0, r4
   15bb8:	bl	174cc <argp_error@@Base+0x125c>
   15bbc:	ldr	r3, [fp, #-112]	; 0xffffff90
   15bc0:	mov	r8, #0
   15bc4:	cmp	r3, r8
   15bc8:	bne	15b14 <argp_failure@@Base+0x554>
   15bcc:	mov	r5, #1
   15bd0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15bd4:	tst	r3, #16
   15bd8:	beq	15bfc <argp_failure@@Base+0x63c>
   15bdc:	mov	r3, #1
   15be0:	ldr	r0, [fp, #-104]	; 0xffffff98
   15be4:	stm	sp, {r3, r4}
   15be8:	mov	r3, #0
   15bec:	mov	r2, r3
   15bf0:	ldr	r1, [fp, #-96]	; 0xffffffa0
   15bf4:	bl	14540 <_obstack_memory_used@@Base+0xacc>
   15bf8:	orr	r5, r5, r0
   15bfc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15c00:	tst	r3, #4
   15c04:	beq	15c20 <argp_failure@@Base+0x660>
   15c08:	ldr	r3, [fp, #4]
   15c0c:	mov	r0, r4
   15c10:	mov	r5, #1
   15c14:	ldr	r1, [pc, #1380]	; 16180 <argp_failure@@Base+0xbc0>
   15c18:	mov	r2, r3
   15c1c:	bl	173b8 <argp_error@@Base+0x1148>
   15c20:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15c24:	tst	r3, #8
   15c28:	beq	15d04 <argp_failure@@Base+0x744>
   15c2c:	ldr	r3, [sl, #4]
   15c30:	cmp	r3, #0
   15c34:	beq	15d04 <argp_failure@@Base+0x744>
   15c38:	cmp	r5, #0
   15c3c:	beq	15c4c <argp_failure@@Base+0x68c>
   15c40:	mov	r1, #10
   15c44:	mov	r0, r4
   15c48:	bl	174cc <argp_error@@Base+0x125c>
   15c4c:	mov	r3, #0
   15c50:	ldr	r7, [pc, #1256]	; 16140 <argp_failure@@Base+0xb80>
   15c54:	ldr	r6, [sl]
   15c58:	str	r3, [fp, #-88]	; 0xffffffa8
   15c5c:	str	r3, [fp, #-84]	; 0xffffffac
   15c60:	str	r3, [fp, #-80]	; 0xffffffb0
   15c64:	ldr	r3, [sl, #4]
   15c68:	str	r3, [fp, #-112]	; 0xffffff90
   15c6c:	ldr	r3, [fp, #-112]	; 0xffffff90
   15c70:	cmp	r3, #0
   15c74:	bne	15db4 <argp_failure@@Base+0x7f4>
   15c78:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15c7c:	cmp	r3, #0
   15c80:	beq	15d00 <argp_failure@@Base+0x740>
   15c84:	ldr	r3, [pc, #1204]	; 16140 <argp_failure@@Base+0xb80>
   15c88:	ldr	r3, [r3, #4]
   15c8c:	cmp	r3, #0
   15c90:	beq	15d00 <argp_failure@@Base+0x740>
   15c94:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15c98:	ldr	r1, [pc, #1252]	; 16184 <argp_failure@@Base+0xbc4>
   15c9c:	ldr	r0, [pc, #1252]	; 16188 <argp_failure@@Base+0xbc8>
   15ca0:	cmp	r3, #0
   15ca4:	ldrne	r2, [r3]
   15ca8:	ldreq	r2, [fp, #-96]	; 0xffffffa0
   15cac:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15cb0:	bl	1487c <_obstack_memory_used@@Base+0xe08>
   15cb4:	subs	r5, r0, #0
   15cb8:	beq	15d00 <argp_failure@@Base+0x740>
   15cbc:	ldrb	r3, [r5]
   15cc0:	cmp	r3, #0
   15cc4:	beq	15cec <argp_failure@@Base+0x72c>
   15cc8:	mov	r1, #10
   15ccc:	mov	r0, r4
   15cd0:	bl	174cc <argp_error@@Base+0x125c>
   15cd4:	mov	r1, r5
   15cd8:	mov	r0, r4
   15cdc:	bl	1748c <argp_error@@Base+0x121c>
   15ce0:	mov	r1, #10
   15ce4:	mov	r0, r4
   15ce8:	bl	174cc <argp_error@@Base+0x125c>
   15cec:	ldr	r3, [pc, #1172]	; 16188 <argp_failure@@Base+0xbc8>
   15cf0:	cmp	r5, r3
   15cf4:	beq	15d00 <argp_failure@@Base+0x740>
   15cf8:	mov	r0, r5
   15cfc:	bl	1369c <argp_usage@@Base+0x170>
   15d00:	mov	r5, #1
   15d04:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15d08:	tst	r3, #32
   15d0c:	beq	15d30 <argp_failure@@Base+0x770>
   15d10:	mov	r3, #0
   15d14:	mov	r2, #1
   15d18:	ldr	r0, [fp, #-104]	; 0xffffff98
   15d1c:	stm	sp, {r3, r4}
   15d20:	mov	r3, r5
   15d24:	ldr	r1, [fp, #-96]	; 0xffffffa0
   15d28:	bl	14540 <_obstack_memory_used@@Base+0xacc>
   15d2c:	orr	r5, r5, r0
   15d30:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15d34:	tst	r3, #64	; 0x40
   15d38:	beq	15d74 <argp_failure@@Base+0x7b4>
   15d3c:	ldr	r3, [pc, #1096]	; 1618c <argp_failure@@Base+0xbcc>
   15d40:	ldr	r2, [r3]
   15d44:	mov	r6, r3
   15d48:	cmp	r2, #0
   15d4c:	beq	15d74 <argp_failure@@Base+0x7b4>
   15d50:	cmp	r5, #0
   15d54:	beq	15d64 <argp_failure@@Base+0x7a4>
   15d58:	mov	r1, #10
   15d5c:	mov	r0, r4
   15d60:	bl	174cc <argp_error@@Base+0x125c>
   15d64:	ldr	r1, [pc, #1060]	; 16190 <argp_failure@@Base+0xbd0>
   15d68:	mov	r0, r4
   15d6c:	ldr	r2, [r6]
   15d70:	bl	173b8 <argp_error@@Base+0x1148>
   15d74:	ldr	r0, [fp, #-108]	; 0xffffff94
   15d78:	bl	1117c <funlockfile@plt>
   15d7c:	cmp	sl, #0
   15d80:	beq	15d8c <argp_failure@@Base+0x7cc>
   15d84:	mov	r0, sl
   15d88:	bl	1449c <_obstack_memory_used@@Base+0xa28>
   15d8c:	mov	r0, r4
   15d90:	bl	17298 <argp_error@@Base+0x1028>
   15d94:	b	15a60 <argp_failure@@Base+0x4a0>
   15d98:	mov	r1, r4
   15d9c:	mov	r0, sl
   15da0:	bl	14c54 <_obstack_memory_used@@Base+0x11e0>
   15da4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15da8:	orr	r3, r3, #2
   15dac:	str	r3, [fp, #-100]	; 0xffffff9c
   15db0:	b	15b78 <argp_failure@@Base+0x5b8>
   15db4:	mov	r1, #0
   15db8:	mov	r0, r4
   15dbc:	ldr	r5, [r6]
   15dc0:	ldr	r9, [r6, #8]
   15dc4:	bl	17514 <argp_error@@Base+0x12a4>
   15dc8:	ldr	r3, [r4, #12]
   15dcc:	str	r3, [fp, #-128]	; 0xffffff80
   15dd0:	sub	r3, fp, #88	; 0x58
   15dd4:	str	r0, [fp, #-124]	; 0xffffff84
   15dd8:	str	r6, [fp, #-76]	; 0xffffffb4
   15ddc:	str	r3, [fp, #-68]	; 0xffffffbc
   15de0:	mov	r3, #1
   15de4:	str	r4, [fp, #-72]	; 0xffffffb8
   15de8:	str	r3, [fp, #-64]	; 0xffffffc0
   15dec:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15df0:	str	r3, [fp, #-60]	; 0xffffffc4
   15df4:	ldr	r3, [r5, #12]
   15df8:	ands	r3, r3, #8
   15dfc:	ldreq	r2, [r6, #4]
   15e00:	str	r3, [fp, #-116]	; 0xffffff8c
   15e04:	addeq	r3, r5, #24
   15e08:	beq	15e38 <argp_failure@@Base+0x878>
   15e0c:	mov	r3, #0
   15e10:	str	r3, [fp, #-116]	; 0xffffff8c
   15e14:	b	15e40 <argp_failure@@Base+0x880>
   15e18:	ldr	r1, [r3, #-24]	; 0xffffffe8
   15e1c:	cmp	r1, #0
   15e20:	beq	15e30 <argp_failure@@Base+0x870>
   15e24:	ldr	r1, [r3, #-12]
   15e28:	tst	r1, #2
   15e2c:	beq	15f48 <argp_failure@@Base+0x988>
   15e30:	sub	r2, r2, #1
   15e34:	add	r3, r3, #24
   15e38:	cmp	r2, #0
   15e3c:	bne	15e18 <argp_failure@@Base+0x858>
   15e40:	mov	r0, r4
   15e44:	ldr	r1, [r7, #8]
   15e48:	mov	r8, r5
   15e4c:	bl	17574 <argp_error@@Base+0x1304>
   15e50:	ldr	r3, [r6, #4]
   15e54:	str	r3, [fp, #-120]	; 0xffffff88
   15e58:	ldr	r3, [fp, #-120]	; 0xffffff88
   15e5c:	cmp	r3, #0
   15e60:	bne	15f50 <argp_failure@@Base+0x990>
   15e64:	ldr	r3, [r5, #12]
   15e68:	tst	r3, #8
   15e6c:	beq	16040 <argp_failure@@Base+0xa80>
   15e70:	mov	r0, r4
   15e74:	ldr	r1, [r7, #16]
   15e78:	add	r8, r5, #24
   15e7c:	bl	17574 <argp_error@@Base+0x1304>
   15e80:	ldr	r9, [r6, #4]
   15e84:	cmp	r9, #0
   15e88:	bne	16004 <argp_failure@@Base+0xa44>
   15e8c:	mov	r1, #0
   15e90:	mov	r0, r4
   15e94:	bl	17514 <argp_error@@Base+0x12a4>
   15e98:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15e9c:	cmp	r3, #0
   15ea0:	bne	160c0 <argp_failure@@Base+0xb00>
   15ea4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15ea8:	ldr	r8, [r5, #16]
   15eac:	ldr	r1, [r5, #4]
   15eb0:	ldr	r2, [r6, #20]
   15eb4:	mov	r0, r8
   15eb8:	bl	1487c <_obstack_memory_used@@Base+0xe08>
   15ebc:	subs	r5, r0, #0
   15ec0:	beq	15f2c <argp_failure@@Base+0x96c>
   15ec4:	ldrb	r3, [r5]
   15ec8:	cmp	r3, #0
   15ecc:	beq	15f1c <argp_failure@@Base+0x95c>
   15ed0:	mov	r0, r4
   15ed4:	bl	175a4 <argp_error@@Base+0x1334>
   15ed8:	mov	r9, r0
   15edc:	mov	r0, r4
   15ee0:	ldr	r1, [r7, #20]
   15ee4:	bl	17514 <argp_error@@Base+0x12a4>
   15ee8:	mov	r0, r4
   15eec:	ldr	r1, [r7, #20]
   15ef0:	bl	17574 <argp_error@@Base+0x1304>
   15ef4:	ldr	r1, [r7, #20]
   15ef8:	add	r3, r1, #3
   15efc:	cmp	r9, r3
   15f00:	bls	1611c <argp_failure@@Base+0xb5c>
   15f04:	mov	r1, #10
   15f08:	mov	r0, r4
   15f0c:	bl	174cc <argp_error@@Base+0x125c>
   15f10:	mov	r1, r5
   15f14:	mov	r0, r4
   15f18:	bl	1748c <argp_error@@Base+0x121c>
   15f1c:	cmp	r8, r5
   15f20:	beq	15f2c <argp_failure@@Base+0x96c>
   15f24:	mov	r0, r5
   15f28:	bl	1369c <argp_usage@@Base+0x170>
   15f2c:	mov	r1, #0
   15f30:	mov	r0, r4
   15f34:	bl	17514 <argp_error@@Base+0x12a4>
   15f38:	mov	r1, #10
   15f3c:	mov	r0, r4
   15f40:	bl	174cc <argp_error@@Base+0x125c>
   15f44:	b	160ec <argp_failure@@Base+0xb2c>
   15f48:	mov	r3, #1
   15f4c:	b	15e10 <argp_failure@@Base+0x850>
   15f50:	mov	r0, r8
   15f54:	bl	13540 <argp_usage@@Base+0x14>
   15f58:	cmp	r0, #0
   15f5c:	beq	15fe0 <argp_failure@@Base+0xa20>
   15f60:	ldrb	r2, [r9]
   15f64:	ldr	r1, [r8, #4]
   15f68:	cmp	r1, r2
   15f6c:	bne	15fe0 <argp_failure@@Base+0xa20>
   15f70:	ldr	r2, [r8, #12]
   15f74:	tst	r2, #2
   15f78:	bne	15fdc <argp_failure@@Base+0xa1c>
   15f7c:	sub	r1, fp, #76	; 0x4c
   15f80:	ldr	r0, [r7, #8]
   15f84:	bl	14afc <_obstack_memory_used@@Base+0x1088>
   15f88:	mov	r1, #45	; 0x2d
   15f8c:	mov	r0, r4
   15f90:	bl	174cc <argp_error@@Base+0x125c>
   15f94:	ldrb	r1, [r9]
   15f98:	mov	r0, r4
   15f9c:	bl	174cc <argp_error@@Base+0x125c>
   15fa0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   15fa4:	ldr	r2, [r5, #8]
   15fa8:	cmp	r3, #0
   15fac:	beq	15fbc <argp_failure@@Base+0x9fc>
   15fb0:	ldr	r1, [r7]
   15fb4:	cmp	r1, #0
   15fb8:	beq	15ff4 <argp_failure@@Base+0xa34>
   15fbc:	cmp	r2, #0
   15fc0:	beq	15fdc <argp_failure@@Base+0xa1c>
   15fc4:	ldr	r1, [r5, #12]
   15fc8:	mov	r0, r4
   15fcc:	tst	r1, #1
   15fd0:	ldrne	r1, [pc, #444]	; 16194 <argp_failure@@Base+0xbd4>
   15fd4:	ldreq	r1, [pc, #444]	; 16198 <argp_failure@@Base+0xbd8>
   15fd8:	bl	173b8 <argp_error@@Base+0x1148>
   15fdc:	add	r9, r9, #1
   15fe0:	ldr	r3, [fp, #-120]	; 0xffffff88
   15fe4:	add	r8, r8, #24
   15fe8:	sub	r3, r3, #1
   15fec:	str	r3, [fp, #-120]	; 0xffffff88
   15ff0:	b	15e58 <argp_failure@@Base+0x898>
   15ff4:	cmp	r2, #0
   15ff8:	movne	r2, #1
   15ffc:	strne	r2, [fp, #-80]	; 0xffffffb0
   16000:	b	15fdc <argp_failure@@Base+0xa1c>
   16004:	ldr	r3, [r8, #-24]	; 0xffffffe8
   16008:	cmp	r3, #0
   1600c:	beq	16034 <argp_failure@@Base+0xa74>
   16010:	ldr	r3, [r8, #-12]
   16014:	tst	r3, #2
   16018:	bne	16034 <argp_failure@@Base+0xa74>
   1601c:	sub	r1, fp, #76	; 0x4c
   16020:	ldr	r0, [r7, #16]
   16024:	bl	14afc <_obstack_memory_used@@Base+0x1088>
   16028:	mov	r0, r4
   1602c:	ldr	r1, [r8, #-24]	; 0xffffffe8
   16030:	bl	1748c <argp_error@@Base+0x121c>
   16034:	sub	r9, r9, #1
   16038:	add	r8, r8, #24
   1603c:	b	15e84 <argp_failure@@Base+0x8c4>
   16040:	mov	r0, r4
   16044:	ldr	r1, [r7, #12]
   16048:	add	r9, r5, #24
   1604c:	bl	17574 <argp_error@@Base+0x1304>
   16050:	ldr	r8, [r6, #4]
   16054:	cmp	r8, #0
   16058:	beq	15e8c <argp_failure@@Base+0x8cc>
   1605c:	ldr	r2, [r9, #-24]	; 0xffffffe8
   16060:	cmp	r2, #0
   16064:	beq	160b4 <argp_failure@@Base+0xaf4>
   16068:	ldr	r2, [r9, #-12]
   1606c:	tst	r2, #2
   16070:	bne	160b4 <argp_failure@@Base+0xaf4>
   16074:	sub	r1, fp, #76	; 0x4c
   16078:	ldr	r0, [r7, #12]
   1607c:	bl	14afc <_obstack_memory_used@@Base+0x1088>
   16080:	ldr	r1, [pc, #276]	; 1619c <argp_failure@@Base+0xbdc>
   16084:	mov	r0, r4
   16088:	ldr	r2, [r9, #-24]	; 0xffffffe8
   1608c:	bl	173b8 <argp_error@@Base+0x1148>
   16090:	ldr	r2, [r5, #8]
   16094:	cmp	r2, #0
   16098:	beq	160b4 <argp_failure@@Base+0xaf4>
   1609c:	ldr	r1, [r5, #12]
   160a0:	mov	r0, r4
   160a4:	tst	r1, #1
   160a8:	ldrne	r1, [pc, #240]	; 161a0 <argp_failure@@Base+0xbe0>
   160ac:	ldreq	r1, [pc, #240]	; 161a4 <argp_failure@@Base+0xbe4>
   160b0:	bl	173b8 <argp_error@@Base+0x1148>
   160b4:	sub	r8, r8, #1
   160b8:	add	r9, r9, #24
   160bc:	b	16054 <argp_failure@@Base+0xa94>
   160c0:	mov	r0, r5
   160c4:	bl	13540 <argp_usage@@Base+0x14>
   160c8:	cmp	r0, #0
   160cc:	bne	160f0 <argp_failure@@Base+0xb30>
   160d0:	ldr	r3, [r5]
   160d4:	cmp	r3, #0
   160d8:	bne	160f0 <argp_failure@@Base+0xb30>
   160dc:	sub	r2, fp, #76	; 0x4c
   160e0:	ldr	r0, [r5, #16]
   160e4:	ldr	r1, [r6, #20]
   160e8:	bl	14a3c <_obstack_memory_used@@Base+0xfc8>
   160ec:	str	r6, [fp, #-88]	; 0xffffffa8
   160f0:	mov	r0, r4
   160f4:	ldr	r1, [fp, #-124]	; 0xffffff84
   160f8:	add	r6, r6, #28
   160fc:	bl	17514 <argp_error@@Base+0x12a4>
   16100:	mov	r0, r4
   16104:	ldr	r1, [fp, #-128]	; 0xffffff80
   16108:	bl	17574 <argp_error@@Base+0x1304>
   1610c:	ldr	r3, [fp, #-112]	; 0xffffff90
   16110:	sub	r3, r3, #1
   16114:	str	r3, [fp, #-112]	; 0xffffff90
   16118:	b	15c6c <argp_failure@@Base+0x6ac>
   1611c:	cmp	r9, r1
   16120:	bcc	16134 <argp_failure@@Base+0xb74>
   16124:	ldr	r1, [pc, #124]	; 161a8 <argp_failure@@Base+0xbe8>
   16128:	mov	r0, r4
   1612c:	bl	1748c <argp_error@@Base+0x121c>
   16130:	b	15f10 <argp_failure@@Base+0x950>
   16134:	mov	r0, r4
   16138:	bl	143b4 <_obstack_memory_used@@Base+0x940>
   1613c:	b	15f10 <argp_failure@@Base+0x950>
   16140:	andeq	sp, r2, ip, ror #16
   16144:	andeq	r9, r1, r6, lsr #14
   16148:	andeq	r9, r1, lr, lsr #11
   1614c:	andeq	r9, r1, r4, lsr r7
   16150:	andeq	r9, r1, lr, lsr r6
   16154:	andeq	r9, r1, r3, ror #14
   16158:	andeq	r9, r1, r9, lsl #15
   1615c:	ldrdeq	r9, [r1], -sl
   16160:	andeq	r9, r1, r6, lsr #15
   16164:	andeq	r9, r1, r3, ror #2
   16168:	andeq	r9, r1, fp, asr r1
   1616c:	andeq	r5, r1, r4, lsr #6
   16170:	andeq	r9, r1, r9, ror #15
   16174:	andeq	r9, r1, r2, ror #15
   16178:	andeq	r9, r1, pc, ror #15
   1617c:	strdeq	r9, [r1], -r6
   16180:	andeq	r9, r1, r3, lsl #16
   16184:	andeq	r0, r0, #5
   16188:	andeq	r9, r1, r2, asr r8
   1618c:	andeq	sp, r2, r4, lsr r9
   16190:	andeq	r9, r1, r6, asr #17
   16194:	andeq	r9, r1, sl, lsr r8
   16198:	andeq	r9, r1, r2, lsr #15
   1619c:	andeq	r9, r1, pc, lsr r8
   161a0:	andeq	r9, r1, r4, asr #16
   161a4:	andeq	r9, r1, sl, asr #16
   161a8:	andeq	r9, r1, lr, asr #16

000161ac <argp_help@@Base>:
   161ac:	push	{r0, r1, r2, lr}
   161b0:	str	r3, [sp]
   161b4:	mov	r3, r2
   161b8:	mov	r2, r1
   161bc:	mov	r1, #0
   161c0:	bl	15700 <argp_failure@@Base+0x140>
   161c4:	add	sp, sp, #12
   161c8:	pop	{pc}		; (ldr pc, [sp], #4)

000161cc <argp_state_help@@Base>:
   161cc:	push	{r0, r1, r2, r4, r5, lr}
   161d0:	subs	r4, r0, #0
   161d4:	mov	r5, r2
   161d8:	beq	16258 <argp_state_help@@Base+0x8c>
   161dc:	adds	r2, r1, #0
   161e0:	ldr	r3, [r4, #16]
   161e4:	movne	r2, #1
   161e8:	eor	r0, r3, #2
   161ec:	ands	r2, r2, r0, lsr #1
   161f0:	beq	16260 <argp_state_help@@Base+0x94>
   161f4:	tst	r3, #64	; 0x40
   161f8:	ldr	r0, [r4]
   161fc:	orrne	r5, r5, #128	; 0x80
   16200:	ldr	r3, [r4, #40]	; 0x28
   16204:	mov	r2, r1
   16208:	mov	r1, r4
   1620c:	str	r3, [sp]
   16210:	mov	r3, r5
   16214:	bl	15700 <argp_failure@@Base+0x140>
   16218:	cmp	r4, #0
   1621c:	beq	1622c <argp_state_help@@Base+0x60>
   16220:	ldr	r3, [r4, #16]
   16224:	tst	r3, #32
   16228:	bne	16260 <argp_state_help@@Base+0x94>
   1622c:	ands	r0, r5, #256	; 0x100
   16230:	ldrne	r3, [pc, #48]	; 16268 <argp_state_help@@Base+0x9c>
   16234:	ldrne	r0, [r3]
   16238:	bne	16244 <argp_state_help@@Base+0x78>
   1623c:	tst	r5, #512	; 0x200
   16240:	beq	16260 <argp_state_help@@Base+0x94>
   16244:	bl	11218 <exit@plt>
   16248:	ldr	r3, [pc, #28]	; 1626c <argp_state_help@@Base+0xa0>
   1624c:	mov	r0, r4
   16250:	ldr	r3, [r3]
   16254:	b	16204 <argp_state_help@@Base+0x38>
   16258:	cmp	r1, #0
   1625c:	bne	16248 <argp_state_help@@Base+0x7c>
   16260:	add	sp, sp, #12
   16264:	pop	{r4, r5, pc}
   16268:	andeq	sp, r2, r4, lsr #17
   1626c:	andeq	sp, r2, r8, lsr #17

00016270 <argp_error@@Base>:
   16270:	push	{r1, r2, r3}
   16274:	push	{r0, r1, r4, r5, lr}
   16278:	subs	r5, r0, #0
   1627c:	beq	162a0 <argp_error@@Base+0x30>
   16280:	ldr	r3, [r5, #16]
   16284:	tst	r3, #2
   16288:	ldreq	r4, [r5, #44]	; 0x2c
   1628c:	beq	162a8 <argp_error@@Base+0x38>
   16290:	add	sp, sp, #8
   16294:	pop	{r4, r5, lr}
   16298:	add	sp, sp, #12
   1629c:	bx	lr
   162a0:	ldr	r3, [pc, #128]	; 16328 <argp_error@@Base+0xb8>
   162a4:	ldr	r4, [r3]
   162a8:	cmp	r4, #0
   162ac:	beq	16290 <argp_error@@Base+0x20>
   162b0:	mov	r0, r4
   162b4:	bl	112cc <flockfile@plt>
   162b8:	add	r3, sp, #24
   162bc:	cmp	r5, #0
   162c0:	ldrne	r0, [r5, #40]	; 0x28
   162c4:	mov	r1, r4
   162c8:	str	r3, [sp, #4]
   162cc:	ldreq	r3, [pc, #88]	; 1632c <argp_error@@Base+0xbc>
   162d0:	ldreq	r0, [r3]
   162d4:	bl	110b0 <fputs_unlocked@plt>
   162d8:	mov	r1, r4
   162dc:	mov	r0, #58	; 0x3a
   162e0:	bl	11380 <putc_unlocked@plt>
   162e4:	mov	r1, r4
   162e8:	mov	r0, #32
   162ec:	bl	11380 <putc_unlocked@plt>
   162f0:	mov	r0, r4
   162f4:	ldr	r2, [sp, #4]
   162f8:	ldr	r1, [sp, #20]
   162fc:	bl	1129c <vfprintf@plt>
   16300:	mov	r1, r4
   16304:	mov	r0, #10
   16308:	bl	11380 <putc_unlocked@plt>
   1630c:	mov	r0, r5
   16310:	mov	r2, #260	; 0x104
   16314:	mov	r1, r4
   16318:	bl	161cc <argp_state_help@@Base>
   1631c:	mov	r0, r4
   16320:	bl	1117c <funlockfile@plt>
   16324:	b	16290 <argp_error@@Base+0x20>
   16328:			; <UNDEFINED> instruction: 0x0002d8b0
   1632c:	andeq	sp, r2, r8, lsr #17
   16330:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16334:	ldr	r7, [r1]
   16338:	ldr	lr, [r1, #32]
   1633c:	ldr	r8, [r1, #28]
   16340:	mov	r4, r7
   16344:	add	r9, r0, lr, lsl #2
   16348:	mov	r5, r8
   1634c:	cmp	r4, lr
   16350:	movle	r3, #0
   16354:	movgt	r3, #1
   16358:	cmp	r5, lr
   1635c:	movge	r3, #0
   16360:	cmp	r3, #0
   16364:	bne	1637c <argp_error@@Base+0x10c>
   16368:	sub	r3, r7, lr
   1636c:	str	r7, [r1, #32]
   16370:	add	r3, r3, r8
   16374:	str	r3, [r1, #28]
   16378:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1637c:	sub	r6, r4, lr
   16380:	sub	r2, lr, r5
   16384:	lsl	ip, r5, #2
   16388:	cmp	r6, r2
   1638c:	ble	163c0 <argp_error@@Base+0x150>
   16390:	sub	r2, r4, r2
   16394:	add	r4, r0, r4, lsl #2
   16398:	add	ip, r0, ip
   1639c:	add	r6, r0, r2, lsl #2
   163a0:	ldr	sl, [r6]
   163a4:	ldr	r3, [ip]
   163a8:	str	sl, [ip], #4
   163ac:	str	r3, [r6], #4
   163b0:	cmp	r4, r6
   163b4:	bne	163a0 <argp_error@@Base+0x130>
   163b8:	mov	r4, r2
   163bc:	b	1634c <argp_error@@Base+0xdc>
   163c0:	add	r2, r6, r5
   163c4:	add	r3, r0, ip
   163c8:	add	r2, r0, r2, lsl #2
   163cc:	mov	ip, r9
   163d0:	ldr	fp, [ip]
   163d4:	ldr	sl, [r3]
   163d8:	str	fp, [r3], #4
   163dc:	cmp	r3, r2
   163e0:	str	sl, [ip], #4
   163e4:	bne	163d0 <argp_error@@Base+0x160>
   163e8:	add	r5, r5, r6
   163ec:	mov	r2, r4
   163f0:	b	163b8 <argp_error@@Base+0x148>
   163f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   163f8:	sub	sp, sp, #44	; 0x2c
   163fc:	mov	sl, r1
   16400:	ldr	r4, [sp, #88]	; 0x58
   16404:	str	r3, [sp, #20]
   16408:	str	r2, [sp, #32]
   1640c:	str	r0, [sp, #36]	; 0x24
   16410:	ldr	r8, [r4, #20]
   16414:	mov	r2, r8
   16418:	ldrb	r3, [r2]
   1641c:	mov	r9, r2
   16420:	add	r2, r2, #1
   16424:	subs	r7, r3, #61	; 0x3d
   16428:	movne	r7, #1
   1642c:	cmp	r3, #0
   16430:	moveq	r7, #0
   16434:	cmp	r7, #0
   16438:	bne	16418 <argp_error@@Base+0x1a8>
   1643c:	sub	r3, r9, r8
   16440:	str	r3, [sp, #24]
   16444:	ldr	r3, [sp, #20]
   16448:	ldr	r5, [r3, r7, lsl #4]
   1644c:	add	r6, r3, r7, lsl #4
   16450:	cmp	r5, #0
   16454:	bne	164fc <argp_error@@Base+0x28c>
   16458:	mov	fp, r3
   1645c:	mov	r6, r5
   16460:	str	r5, [sp, #12]
   16464:	mvn	r3, #0
   16468:	mov	r8, r5
   1646c:	str	r3, [sp, #16]
   16470:	str	r5, [sp, #28]
   16474:	ldr	r0, [fp]
   16478:	cmp	r0, #0
   1647c:	bne	16530 <argp_error@@Base+0x2c0>
   16480:	orrs	r3, r5, r8
   16484:	beq	16664 <argp_error@@Base+0x3f4>
   16488:	ldr	r3, [sp, #92]	; 0x5c
   1648c:	cmp	r3, #0
   16490:	beq	164bc <argp_error@@Base+0x24c>
   16494:	ldr	r6, [pc, #900]	; 16820 <argp_error@@Base+0x5b0>
   16498:	cmp	r8, #0
   1649c:	ldr	r0, [r6]
   164a0:	beq	165f4 <argp_error@@Base+0x384>
   164a4:	ldr	r3, [r4, #20]
   164a8:	ldr	r1, [pc, #884]	; 16824 <argp_error@@Base+0x5b4>
   164ac:	ldr	r2, [sl]
   164b0:	str	r3, [sp]
   164b4:	ldr	r3, [sp, #96]	; 0x60
   164b8:	bl	1123c <fprintf@plt>
   164bc:	ldr	r3, [sp, #28]
   164c0:	cmp	r3, #0
   164c4:	beq	164d0 <argp_error@@Base+0x260>
   164c8:	mov	r0, r5
   164cc:	bl	1369c <argp_usage@@Base+0x170>
   164d0:	ldr	r5, [r4, #20]
   164d4:	mov	r0, r5
   164d8:	bl	11224 <strlen@plt>
   164dc:	ldr	r3, [r4]
   164e0:	add	r0, r5, r0
   164e4:	str	r0, [r4, #20]
   164e8:	add	r3, r3, #1
   164ec:	str	r3, [r4]
   164f0:	mov	r3, #0
   164f4:	str	r3, [r4, #8]
   164f8:	b	166ec <argp_error@@Base+0x47c>
   164fc:	mov	r1, r8
   16500:	mov	r0, r5
   16504:	ldr	r2, [sp, #24]
   16508:	bl	11344 <strncmp@plt>
   1650c:	cmp	r0, #0
   16510:	bne	16528 <argp_error@@Base+0x2b8>
   16514:	mov	r0, r5
   16518:	bl	11224 <strlen@plt>
   1651c:	ldr	r3, [sp, #24]
   16520:	cmp	r0, r3
   16524:	beq	166f8 <argp_error@@Base+0x488>
   16528:	add	r7, r7, #1
   1652c:	b	16444 <argp_error@@Base+0x1d4>
   16530:	ldr	r1, [r4, #20]
   16534:	ldr	r2, [sp, #24]
   16538:	bl	11344 <strncmp@plt>
   1653c:	cmp	r0, #0
   16540:	bne	165e0 <argp_error@@Base+0x370>
   16544:	cmp	r6, #0
   16548:	ldreq	r3, [sp, #12]
   1654c:	moveq	r6, fp
   16550:	streq	r3, [sp, #16]
   16554:	beq	165e0 <argp_error@@Base+0x370>
   16558:	ldr	r3, [sp, #84]	; 0x54
   1655c:	cmp	r3, #0
   16560:	bne	16594 <argp_error@@Base+0x324>
   16564:	ldr	r1, [r6, #4]
   16568:	ldr	r2, [fp, #4]
   1656c:	cmp	r1, r2
   16570:	bne	16594 <argp_error@@Base+0x324>
   16574:	ldr	r1, [r6, #8]
   16578:	ldr	r2, [fp, #8]
   1657c:	cmp	r1, r2
   16580:	bne	16594 <argp_error@@Base+0x324>
   16584:	ldr	r1, [r6, #12]
   16588:	ldr	r2, [fp, #12]
   1658c:	cmp	r1, r2
   16590:	beq	165e0 <argp_error@@Base+0x370>
   16594:	cmp	r8, #0
   16598:	bne	165e0 <argp_error@@Base+0x370>
   1659c:	ldr	r3, [sp, #92]	; 0x5c
   165a0:	cmp	r3, #0
   165a4:	beq	165c8 <argp_error@@Base+0x358>
   165a8:	cmp	r5, #0
   165ac:	bne	165d4 <argp_error@@Base+0x364>
   165b0:	mov	r0, r7
   165b4:	bl	1425c <_obstack_memory_used@@Base+0x7e8>
   165b8:	subs	r5, r0, #0
   165bc:	bne	167fc <argp_error@@Base+0x58c>
   165c0:	mov	r8, #1
   165c4:	b	165e0 <argp_error@@Base+0x370>
   165c8:	cmp	r5, #0
   165cc:	mov	r8, #1
   165d0:	beq	165e0 <argp_error@@Base+0x370>
   165d4:	ldr	r3, [sp, #12]
   165d8:	mov	r2, #1
   165dc:	strb	r2, [r5, r3]
   165e0:	ldr	r3, [sp, #12]
   165e4:	add	fp, fp, #16
   165e8:	add	r3, r3, #1
   165ec:	str	r3, [sp, #12]
   165f0:	b	16474 <argp_error@@Base+0x204>
   165f4:	bl	112cc <flockfile@plt>
   165f8:	ldr	r3, [r4, #20]
   165fc:	ldr	r1, [pc, #548]	; 16828 <argp_error@@Base+0x5b8>
   16600:	ldr	r2, [sl]
   16604:	str	r3, [sp]
   16608:	ldr	r0, [r6]
   1660c:	ldr	r3, [sp, #96]	; 0x60
   16610:	ldr	r9, [pc, #532]	; 1682c <argp_error@@Base+0x5bc>
   16614:	bl	1123c <fprintf@plt>
   16618:	cmp	r7, r8
   1661c:	ldr	r0, [r6]
   16620:	bne	1663c <argp_error@@Base+0x3cc>
   16624:	mov	r1, r0
   16628:	mov	r0, #10
   1662c:	bl	112a8 <fputc@plt>
   16630:	ldr	r0, [r6]
   16634:	bl	1117c <funlockfile@plt>
   16638:	b	164bc <argp_error@@Base+0x24c>
   1663c:	ldrb	r3, [r5, r8]
   16640:	cmp	r3, #0
   16644:	beq	1665c <argp_error@@Base+0x3ec>
   16648:	ldr	r3, [sp, #20]
   1664c:	mov	r1, r9
   16650:	ldr	r2, [sp, #96]	; 0x60
   16654:	ldr	r3, [r3, r8, lsl #4]
   16658:	bl	1123c <fprintf@plt>
   1665c:	add	r8, r8, #1
   16660:	b	16618 <argp_error@@Base+0x3a8>
   16664:	cmp	r6, #0
   16668:	bne	166fc <argp_error@@Base+0x48c>
   1666c:	ldr	r3, [sp, #84]	; 0x54
   16670:	cmp	r3, #0
   16674:	beq	166a8 <argp_error@@Base+0x438>
   16678:	ldr	r3, [r4]
   1667c:	ldr	r3, [sl, r3, lsl #2]
   16680:	ldrb	r3, [r3, #1]
   16684:	cmp	r3, #45	; 0x2d
   16688:	beq	166a8 <argp_error@@Base+0x438>
   1668c:	ldr	r3, [r4, #20]
   16690:	ldr	r0, [sp, #32]
   16694:	ldrb	r1, [r3]
   16698:	bl	11230 <strchr@plt>
   1669c:	cmp	r0, #0
   166a0:	mvnne	r0, #0
   166a4:	bne	166f0 <argp_error@@Base+0x480>
   166a8:	ldr	r3, [sp, #92]	; 0x5c
   166ac:	cmp	r3, #0
   166b0:	beq	166d4 <argp_error@@Base+0x464>
   166b4:	ldr	r0, [pc, #356]	; 16820 <argp_error@@Base+0x5b0>
   166b8:	ldr	r3, [r4, #20]
   166bc:	ldr	r1, [pc, #364]	; 16830 <argp_error@@Base+0x5c0>
   166c0:	ldr	r2, [sl]
   166c4:	str	r3, [sp]
   166c8:	ldr	r0, [r0]
   166cc:	ldr	r3, [sp, #96]	; 0x60
   166d0:	bl	1123c <fprintf@plt>
   166d4:	ldr	r3, [r4]
   166d8:	mov	r2, #0
   166dc:	str	r2, [r4, #8]
   166e0:	str	r2, [r4, #20]
   166e4:	add	r3, r3, #1
   166e8:	str	r3, [r4]
   166ec:	mov	r0, #63	; 0x3f
   166f0:	add	sp, sp, #44	; 0x2c
   166f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   166f8:	str	r7, [sp, #16]
   166fc:	ldr	r3, [r4]
   16700:	mov	r1, #0
   16704:	str	r1, [r4, #20]
   16708:	ldr	r1, [r6, #4]
   1670c:	add	r2, r3, #1
   16710:	str	r2, [r4]
   16714:	ldrb	r0, [r9]
   16718:	cmp	r0, #0
   1671c:	beq	16764 <argp_error@@Base+0x4f4>
   16720:	cmp	r1, #0
   16724:	addne	r9, r9, #1
   16728:	strne	r9, [r4, #12]
   1672c:	bne	16788 <argp_error@@Base+0x518>
   16730:	ldr	r3, [sp, #92]	; 0x5c
   16734:	cmp	r3, #0
   16738:	beq	1675c <argp_error@@Base+0x4ec>
   1673c:	ldr	r0, [pc, #220]	; 16820 <argp_error@@Base+0x5b0>
   16740:	ldr	r3, [r6]
   16744:	ldr	r1, [pc, #232]	; 16834 <argp_error@@Base+0x5c4>
   16748:	ldr	r2, [sl]
   1674c:	str	r3, [sp]
   16750:	ldr	r0, [r0]
   16754:	ldr	r3, [sp, #96]	; 0x60
   16758:	bl	1123c <fprintf@plt>
   1675c:	ldr	r3, [r6, #12]
   16760:	b	164f4 <argp_error@@Base+0x284>
   16764:	cmp	r1, #1
   16768:	bne	16788 <argp_error@@Base+0x518>
   1676c:	ldr	r1, [sp, #36]	; 0x24
   16770:	cmp	r2, r1
   16774:	bge	167b0 <argp_error@@Base+0x540>
   16778:	add	r3, r3, #2
   1677c:	str	r3, [r4]
   16780:	ldr	r3, [sl, r2, lsl #2]
   16784:	str	r3, [r4, #12]
   16788:	ldr	r3, [sp, #80]	; 0x50
   1678c:	cmp	r3, #0
   16790:	ldrne	r2, [sp, #16]
   16794:	strne	r2, [r3]
   16798:	ldr	r3, [r6, #8]
   1679c:	ldr	r0, [r6, #12]
   167a0:	cmp	r3, #0
   167a4:	strne	r0, [r3]
   167a8:	movne	r0, #0
   167ac:	b	166f0 <argp_error@@Base+0x480>
   167b0:	ldr	r3, [sp, #92]	; 0x5c
   167b4:	cmp	r3, #0
   167b8:	beq	167dc <argp_error@@Base+0x56c>
   167bc:	ldr	r0, [pc, #92]	; 16820 <argp_error@@Base+0x5b0>
   167c0:	ldr	r3, [r6]
   167c4:	ldr	r1, [pc, #108]	; 16838 <argp_error@@Base+0x5c8>
   167c8:	ldr	r2, [sl]
   167cc:	str	r3, [sp]
   167d0:	ldr	r0, [r0]
   167d4:	ldr	r3, [sp, #96]	; 0x60
   167d8:	bl	1123c <fprintf@plt>
   167dc:	ldr	r3, [r6, #12]
   167e0:	str	r3, [r4, #8]
   167e4:	ldr	r3, [sp, #32]
   167e8:	ldrb	r3, [r3]
   167ec:	cmp	r3, #58	; 0x3a
   167f0:	moveq	r0, #58	; 0x3a
   167f4:	movne	r0, #63	; 0x3f
   167f8:	b	166f0 <argp_error@@Base+0x480>
   167fc:	mov	r2, r7
   16800:	mov	r1, r8
   16804:	bl	1126c <memset@plt>
   16808:	ldr	r3, [sp, #16]
   1680c:	mov	r2, #1
   16810:	strb	r2, [r5, r3]
   16814:	mov	r3, #1
   16818:	str	r3, [sp, #28]
   1681c:	b	165d4 <argp_error@@Base+0x364>
   16820:			; <UNDEFINED> instruction: 0x0002d8b0
   16824:	ldrdeq	r9, [r1], -sl
   16828:	strdeq	r9, [r1], -sl
   1682c:	andeq	r9, r1, r9, lsr #18
   16830:	andeq	r9, r1, r1, lsr r9
   16834:	andeq	r9, r1, r1, asr r9
   16838:	andeq	r9, r1, lr, ror r9
   1683c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16840:	sub	sp, sp, #36	; 0x24
   16844:	subs	r8, r0, #0
   16848:	ldr	fp, [sp, #72]	; 0x48
   1684c:	ldr	r4, [sp, #80]	; 0x50
   16850:	ldr	r5, [sp, #76]	; 0x4c
   16854:	ldr	r9, [r4, #4]
   16858:	bgt	16868 <argp_error@@Base+0x5f8>
   1685c:	mvn	r0, #0
   16860:	add	sp, sp, #36	; 0x24
   16864:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16868:	mov	sl, r3
   1686c:	mov	r3, #0
   16870:	mov	r7, r1
   16874:	mov	r6, r2
   16878:	str	r3, [r4, #12]
   1687c:	ldr	r3, [r4]
   16880:	cmp	r3, #0
   16884:	beq	168a8 <argp_error@@Base+0x638>
   16888:	ldr	r3, [r4, #16]
   1688c:	cmp	r3, #0
   16890:	beq	168b0 <argp_error@@Base+0x640>
   16894:	ldrb	r3, [r2]
   16898:	sub	r3, r3, #43	; 0x2b
   1689c:	tst	r3, #253	; 0xfd
   168a0:	addeq	r6, r2, #1
   168a4:	b	168ec <argp_error@@Base+0x67c>
   168a8:	mov	r3, #1
   168ac:	str	r3, [r4]
   168b0:	ldr	r3, [r4]
   168b4:	str	r3, [r4, #28]
   168b8:	str	r3, [r4, #32]
   168bc:	mov	r3, #0
   168c0:	str	r3, [r4, #20]
   168c4:	ldrb	r2, [r6]
   168c8:	cmp	r2, #45	; 0x2d
   168cc:	moveq	r3, #2
   168d0:	beq	168dc <argp_error@@Base+0x66c>
   168d4:	cmp	r2, #43	; 0x2b
   168d8:	bne	16a08 <argp_error@@Base+0x798>
   168dc:	add	r6, r6, #1
   168e0:	str	r3, [r4, #24]
   168e4:	mov	r3, #1
   168e8:	str	r3, [r4, #16]
   168ec:	ldrb	r3, [r6]
   168f0:	cmp	r3, #58	; 0x3a
   168f4:	ldr	r3, [r4, #20]
   168f8:	moveq	r9, #0
   168fc:	cmp	r3, #0
   16900:	beq	16910 <argp_error@@Base+0x6a0>
   16904:	ldrb	r3, [r3]
   16908:	cmp	r3, #0
   1690c:	bne	16aa4 <argp_error@@Base+0x834>
   16910:	ldr	r3, [r4]
   16914:	ldr	r2, [r4, #32]
   16918:	cmp	r2, r3
   1691c:	ldr	r2, [r4, #28]
   16920:	strgt	r3, [r4, #32]
   16924:	cmp	r3, r2
   16928:	ldr	r2, [r4, #24]
   1692c:	strlt	r3, [r4, #28]
   16930:	cmp	r2, #1
   16934:	bne	16988 <argp_error@@Base+0x718>
   16938:	ldr	r2, [r4, #28]
   1693c:	ldr	r1, [r4, #32]
   16940:	cmp	r2, r1
   16944:	beq	16a38 <argp_error@@Base+0x7c8>
   16948:	cmp	r3, r1
   1694c:	beq	1695c <argp_error@@Base+0x6ec>
   16950:	mov	r1, r4
   16954:	mov	r0, r7
   16958:	bl	16330 <argp_error@@Base+0xc0>
   1695c:	ldr	r3, [r4]
   16960:	cmp	r3, r8
   16964:	bge	16984 <argp_error@@Base+0x714>
   16968:	ldr	r2, [r7, r3, lsl #2]
   1696c:	ldrb	r1, [r2]
   16970:	cmp	r1, #45	; 0x2d
   16974:	bne	16a44 <argp_error@@Base+0x7d4>
   16978:	ldrb	r2, [r2, #1]
   1697c:	cmp	r2, #0
   16980:	beq	16a44 <argp_error@@Base+0x7d4>
   16984:	str	r3, [r4, #32]
   16988:	ldr	r3, [r4]
   1698c:	cmp	r3, r8
   16990:	beq	169e8 <argp_error@@Base+0x778>
   16994:	ldr	r1, [pc, #888]	; 16d14 <argp_error@@Base+0xaa4>
   16998:	str	r3, [sp, #24]
   1699c:	ldr	r0, [r7, r3, lsl #2]
   169a0:	bl	110c8 <strcmp@plt>
   169a4:	cmp	r0, #0
   169a8:	bne	169e8 <argp_error@@Base+0x778>
   169ac:	ldr	r3, [sp, #24]
   169b0:	ldr	r1, [r4, #28]
   169b4:	ldr	r2, [r4, #32]
   169b8:	add	r3, r3, #1
   169bc:	str	r3, [r4]
   169c0:	cmp	r1, r2
   169c4:	streq	r3, [r4, #28]
   169c8:	beq	169e0 <argp_error@@Base+0x770>
   169cc:	cmp	r3, r2
   169d0:	beq	169e0 <argp_error@@Base+0x770>
   169d4:	mov	r1, r4
   169d8:	mov	r0, r7
   169dc:	bl	16330 <argp_error@@Base+0xc0>
   169e0:	str	r8, [r4]
   169e4:	str	r8, [r4, #32]
   169e8:	ldr	r2, [r4]
   169ec:	cmp	r2, r8
   169f0:	bne	16a50 <argp_error@@Base+0x7e0>
   169f4:	ldr	r3, [r4, #28]
   169f8:	ldr	r2, [r4, #32]
   169fc:	cmp	r3, r2
   16a00:	strne	r3, [r4]
   16a04:	b	1685c <argp_error@@Base+0x5ec>
   16a08:	ldr	r3, [sp, #84]	; 0x54
   16a0c:	cmp	r3, #0
   16a10:	beq	16a20 <argp_error@@Base+0x7b0>
   16a14:	mov	r3, #0
   16a18:	str	r3, [r4, #24]
   16a1c:	b	168e4 <argp_error@@Base+0x674>
   16a20:	ldr	r0, [pc, #752]	; 16d18 <argp_error@@Base+0xaa8>
   16a24:	bl	111ac <getenv@plt>
   16a28:	cmp	r0, #0
   16a2c:	bne	16a14 <argp_error@@Base+0x7a4>
   16a30:	mov	r3, #1
   16a34:	b	16a18 <argp_error@@Base+0x7a8>
   16a38:	cmp	r3, r2
   16a3c:	strne	r3, [r4, #28]
   16a40:	b	1695c <argp_error@@Base+0x6ec>
   16a44:	add	r3, r3, #1
   16a48:	str	r3, [r4]
   16a4c:	b	1695c <argp_error@@Base+0x6ec>
   16a50:	ldr	r3, [r7, r2, lsl #2]
   16a54:	ldrb	r1, [r3]
   16a58:	cmp	r1, #45	; 0x2d
   16a5c:	bne	16a6c <argp_error@@Base+0x7fc>
   16a60:	ldrb	r1, [r3, #1]
   16a64:	cmp	r1, #0
   16a68:	bne	16a8c <argp_error@@Base+0x81c>
   16a6c:	ldr	r1, [r4, #24]
   16a70:	cmp	r1, #0
   16a74:	beq	1685c <argp_error@@Base+0x5ec>
   16a78:	add	r2, r2, #1
   16a7c:	mov	r0, #1
   16a80:	str	r2, [r4]
   16a84:	str	r3, [r4, #12]
   16a88:	b	16860 <argp_error@@Base+0x5f0>
   16a8c:	cmp	sl, #0
   16a90:	bne	16b20 <argp_error@@Base+0x8b0>
   16a94:	ldr	r3, [r4]
   16a98:	ldr	r3, [r7, r3, lsl #2]
   16a9c:	add	r3, r3, #1
   16aa0:	str	r3, [r4, #20]
   16aa4:	ldr	r3, [r4, #20]
   16aa8:	mov	r0, r6
   16aac:	add	r2, r3, #1
   16ab0:	str	r3, [sp, #24]
   16ab4:	str	r2, [r4, #20]
   16ab8:	ldrb	r5, [r3]
   16abc:	str	r2, [sp, #28]
   16ac0:	mov	r1, r5
   16ac4:	bl	11230 <strchr@plt>
   16ac8:	ldr	r3, [sp, #24]
   16acc:	ldr	r2, [sp, #28]
   16ad0:	ldrb	r1, [r3, #1]
   16ad4:	cmp	r1, #0
   16ad8:	ldreq	r1, [r4]
   16adc:	addeq	r1, r1, #1
   16ae0:	streq	r1, [r4]
   16ae4:	sub	r1, r5, #58	; 0x3a
   16ae8:	cmp	r0, #0
   16aec:	cmpne	r1, #1
   16af0:	bhi	16bcc <argp_error@@Base+0x95c>
   16af4:	cmp	r9, #0
   16af8:	beq	16b14 <argp_error@@Base+0x8a4>
   16afc:	ldr	r0, [pc, #536]	; 16d1c <argp_error@@Base+0xaac>
   16b00:	mov	r3, r5
   16b04:	ldr	r1, [pc, #532]	; 16d20 <argp_error@@Base+0xab0>
   16b08:	ldr	r2, [r7]
   16b0c:	ldr	r0, [r0]
   16b10:	bl	1123c <fprintf@plt>
   16b14:	mov	r0, #63	; 0x3f
   16b18:	str	r5, [r4, #8]
   16b1c:	b	16860 <argp_error@@Base+0x5f0>
   16b20:	cmp	r1, #45	; 0x2d
   16b24:	bne	16b60 <argp_error@@Base+0x8f0>
   16b28:	add	r3, r3, #2
   16b2c:	str	r3, [r4, #20]
   16b30:	ldr	r3, [pc, #476]	; 16d14 <argp_error@@Base+0xaa4>
   16b34:	str	r5, [sp, #4]
   16b38:	str	r4, [sp, #8]
   16b3c:	str	r9, [sp, #12]
   16b40:	str	r3, [sp, #16]
   16b44:	mov	r3, sl
   16b48:	mov	r2, r6
   16b4c:	str	fp, [sp]
   16b50:	mov	r1, r7
   16b54:	mov	r0, r8
   16b58:	bl	163f4 <argp_error@@Base+0x184>
   16b5c:	b	16860 <argp_error@@Base+0x5f0>
   16b60:	cmp	r5, #0
   16b64:	beq	16a94 <argp_error@@Base+0x824>
   16b68:	ldrb	r2, [r3, #2]
   16b6c:	cmp	r2, #0
   16b70:	bne	16b8c <argp_error@@Base+0x91c>
   16b74:	mov	r0, r6
   16b78:	str	r3, [sp, #24]
   16b7c:	bl	11230 <strchr@plt>
   16b80:	cmp	r0, #0
   16b84:	ldr	r3, [sp, #24]
   16b88:	bne	16a94 <argp_error@@Base+0x824>
   16b8c:	add	r3, r3, #1
   16b90:	mov	r2, r6
   16b94:	mov	r1, r7
   16b98:	mov	r0, r8
   16b9c:	str	r3, [r4, #20]
   16ba0:	ldr	r3, [pc, #380]	; 16d24 <argp_error@@Base+0xab4>
   16ba4:	str	fp, [sp]
   16ba8:	str	r5, [sp, #4]
   16bac:	str	r4, [sp, #8]
   16bb0:	str	r9, [sp, #12]
   16bb4:	str	r3, [sp, #16]
   16bb8:	mov	r3, sl
   16bbc:	bl	163f4 <argp_error@@Base+0x184>
   16bc0:	cmn	r0, #1
   16bc4:	bne	16860 <argp_error@@Base+0x5f0>
   16bc8:	b	16a94 <argp_error@@Base+0x824>
   16bcc:	ldrb	r1, [r0]
   16bd0:	ldrb	ip, [r0, #1]
   16bd4:	cmp	r1, #87	; 0x57
   16bd8:	bne	16c70 <argp_error@@Base+0xa00>
   16bdc:	sub	r1, ip, #59	; 0x3b
   16be0:	cmp	sl, #0
   16be4:	clz	r1, r1
   16be8:	lsr	r1, r1, #5
   16bec:	moveq	r1, #0
   16bf0:	cmp	r1, #0
   16bf4:	beq	16c70 <argp_error@@Base+0xa00>
   16bf8:	ldrb	r3, [r3, #1]
   16bfc:	cmp	r3, #0
   16c00:	strne	r2, [r4, #12]
   16c04:	bne	16c50 <argp_error@@Base+0x9e0>
   16c08:	ldr	r3, [r4]
   16c0c:	cmp	r3, r8
   16c10:	ldrne	r3, [r7, r3, lsl #2]
   16c14:	strne	r3, [r4, #12]
   16c18:	bne	16c50 <argp_error@@Base+0x9e0>
   16c1c:	cmp	r9, #0
   16c20:	beq	16c3c <argp_error@@Base+0x9cc>
   16c24:	ldr	r0, [pc, #240]	; 16d1c <argp_error@@Base+0xaac>
   16c28:	mov	r3, r5
   16c2c:	ldr	r1, [pc, #244]	; 16d28 <argp_error@@Base+0xab8>
   16c30:	ldr	r2, [r7]
   16c34:	ldr	r0, [r0]
   16c38:	bl	1123c <fprintf@plt>
   16c3c:	str	r5, [r4, #8]
   16c40:	ldrb	r0, [r6]
   16c44:	cmp	r0, #58	; 0x3a
   16c48:	movne	r0, #63	; 0x3f
   16c4c:	b	16860 <argp_error@@Base+0x5f0>
   16c50:	ldr	r3, [r4, #12]
   16c54:	ldr	r2, [pc, #208]	; 16d2c <argp_error@@Base+0xabc>
   16c58:	str	r3, [r4, #20]
   16c5c:	mov	r3, #0
   16c60:	str	r3, [r4, #12]
   16c64:	stmib	sp, {r3, r4, r9}
   16c68:	str	r2, [sp, #16]
   16c6c:	b	16b44 <argp_error@@Base+0x8d4>
   16c70:	cmp	ip, #58	; 0x3a
   16c74:	bne	16cac <argp_error@@Base+0xa3c>
   16c78:	ldrb	r1, [r3, #1]
   16c7c:	ldrb	r3, [r0, #2]
   16c80:	cmp	r3, #58	; 0x3a
   16c84:	bne	16cb4 <argp_error@@Base+0xa44>
   16c88:	cmp	r1, #0
   16c8c:	ldrne	r3, [r4]
   16c90:	strne	r2, [r4, #12]
   16c94:	streq	r1, [r4, #12]
   16c98:	beq	16ca4 <argp_error@@Base+0xa34>
   16c9c:	add	r3, r3, #1
   16ca0:	str	r3, [r4]
   16ca4:	mov	r3, #0
   16ca8:	str	r3, [r4, #20]
   16cac:	mov	r0, r5
   16cb0:	b	16860 <argp_error@@Base+0x5f0>
   16cb4:	cmp	r1, #0
   16cb8:	ldr	r3, [r4]
   16cbc:	strne	r2, [r4, #12]
   16cc0:	bne	16c9c <argp_error@@Base+0xa2c>
   16cc4:	cmp	r8, r3
   16cc8:	bne	16d00 <argp_error@@Base+0xa90>
   16ccc:	cmp	r9, #0
   16cd0:	beq	16cec <argp_error@@Base+0xa7c>
   16cd4:	ldr	r0, [pc, #64]	; 16d1c <argp_error@@Base+0xaac>
   16cd8:	mov	r3, r5
   16cdc:	ldr	r1, [pc, #68]	; 16d28 <argp_error@@Base+0xab8>
   16ce0:	ldr	r2, [r7]
   16ce4:	ldr	r0, [r0]
   16ce8:	bl	1123c <fprintf@plt>
   16cec:	str	r5, [r4, #8]
   16cf0:	ldrb	r5, [r6]
   16cf4:	cmp	r5, #58	; 0x3a
   16cf8:	movne	r5, #63	; 0x3f
   16cfc:	b	16ca4 <argp_error@@Base+0xa34>
   16d00:	add	r2, r3, #1
   16d04:	ldr	r3, [r7, r3, lsl #2]
   16d08:	str	r2, [r4]
   16d0c:	str	r3, [r4, #12]
   16d10:	b	16ca4 <argp_error@@Base+0xa34>
   16d14:	andeq	r9, r1, ip, lsl r1
   16d18:	andeq	r9, r1, r6, lsr #19
   16d1c:			; <UNDEFINED> instruction: 0x0002d8b0
   16d20:			; <UNDEFINED> instruction: 0x000199b6
   16d24:	andeq	r9, r1, sp, lsl r1
   16d28:	ldrdeq	r9, [r1], -r2
   16d2c:	strdeq	r9, [r1], -fp
   16d30:	push	{r4, r5, lr}
   16d34:	sub	sp, sp, #20
   16d38:	ldr	r5, [pc, #84]	; 16d94 <argp_error@@Base+0xb24>
   16d3c:	ldr	r4, [pc, #84]	; 16d98 <argp_error@@Base+0xb28>
   16d40:	ldr	ip, [r5]
   16d44:	str	r4, [sp, #8]
   16d48:	str	ip, [r4]
   16d4c:	ldr	ip, [r5, #4]
   16d50:	str	ip, [r4, #4]
   16d54:	ldr	ip, [sp, #40]	; 0x28
   16d58:	str	ip, [sp, #12]
   16d5c:	ldr	ip, [sp, #36]	; 0x24
   16d60:	str	ip, [sp, #4]
   16d64:	ldr	ip, [sp, #32]
   16d68:	str	ip, [sp]
   16d6c:	bl	1683c <argp_error@@Base+0x5cc>
   16d70:	ldr	r3, [r4]
   16d74:	ldr	r2, [r4, #12]
   16d78:	str	r3, [r5]
   16d7c:	ldr	r3, [pc, #24]	; 16d9c <argp_error@@Base+0xb2c>
   16d80:	str	r2, [r3]
   16d84:	ldr	r3, [r4, #8]
   16d88:	str	r3, [r5, #8]
   16d8c:	add	sp, sp, #20
   16d90:	pop	{r4, r5, pc}
   16d94:	muleq	r2, r8, r8
   16d98:	andeq	sp, r2, r0, ror #17
   16d9c:	andeq	sp, r2, ip, lsr r9
   16da0:	push	{r0, r1, r2, r3, r4, lr}
   16da4:	mov	r3, #1
   16da8:	str	r3, [sp, #8]
   16dac:	mov	r3, #0
   16db0:	str	r3, [sp]
   16db4:	str	r3, [sp, #4]
   16db8:	bl	16d30 <argp_error@@Base+0xac0>
   16dbc:	add	sp, sp, #20
   16dc0:	pop	{pc}		; (ldr pc, [sp], #4)
   16dc4:	b	1425c <_obstack_memory_used@@Base+0x7e8>
   16dc8:	cmp	r1, #0
   16dcc:	orreq	r1, r1, #1
   16dd0:	b	14288 <_obstack_memory_used@@Base+0x814>
   16dd4:	b	14208 <_obstack_memory_used@@Base+0x794>
   16dd8:	cmp	r2, #0
   16ddc:	cmpne	r1, #0
   16de0:	moveq	r2, #1
   16de4:	moveq	r1, r2
   16de8:	b	16dec <argp_error@@Base+0xb7c>
   16dec:	umull	r2, r3, r1, r2
   16df0:	cmp	r3, #0
   16df4:	bne	16e00 <argp_error@@Base+0xb90>
   16df8:	mov	r1, r2
   16dfc:	b	14288 <_obstack_memory_used@@Base+0x814>
   16e00:	push	{r4, lr}
   16e04:	bl	11248 <__errno_location@plt>
   16e08:	mov	r3, #12
   16e0c:	str	r3, [r0]
   16e10:	mov	r0, #0
   16e14:	pop	{r4, pc}
   16e18:	push	{r4, r5, r6, r7, r8, lr}
   16e1c:	mov	r8, r0
   16e20:	mov	r0, #36	; 0x24
   16e24:	mov	r7, r1
   16e28:	mov	r6, r2
   16e2c:	mov	r5, r3
   16e30:	bl	1425c <_obstack_memory_used@@Base+0x7e8>
   16e34:	subs	r4, r0, #0
   16e38:	beq	16e88 <argp_error@@Base+0xc18>
   16e3c:	mov	r3, #0
   16e40:	mov	r0, #200	; 0xc8
   16e44:	str	r8, [r4]
   16e48:	str	r7, [r4, #4]
   16e4c:	str	r6, [r4, #8]
   16e50:	str	r5, [r4, #12]
   16e54:	str	r3, [r4, #16]
   16e58:	str	r3, [r4, #20]
   16e5c:	bl	1425c <_obstack_memory_used@@Base+0x7e8>
   16e60:	cmp	r0, #0
   16e64:	mov	r5, r0
   16e68:	str	r0, [r4, #24]
   16e6c:	addne	r5, r0, #200	; 0xc8
   16e70:	strne	r0, [r4, #28]
   16e74:	strne	r5, [r4, #32]
   16e78:	bne	16e88 <argp_error@@Base+0xc18>
   16e7c:	mov	r0, r4
   16e80:	mov	r4, r5
   16e84:	bl	1369c <argp_usage@@Base+0x170>
   16e88:	mov	r0, r4
   16e8c:	pop	{r4, r5, r6, r7, r8, pc}
   16e90:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16e94:	mov	r4, r0
   16e98:	ldr	r3, [r0, #16]
   16e9c:	ldr	r6, [r0, #24]
   16ea0:	add	r6, r6, r3
   16ea4:	ldr	r2, [r4, #28]
   16ea8:	cmp	r2, r6
   16eac:	bls	16f5c <argp_error@@Base+0xcec>
   16eb0:	ldr	r7, [r4, #20]
   16eb4:	cmp	r7, #0
   16eb8:	bne	16f10 <argp_error@@Base+0xca0>
   16ebc:	ldr	r5, [r4, #4]
   16ec0:	cmp	r5, #0
   16ec4:	beq	16f10 <argp_error@@Base+0xca0>
   16ec8:	ldr	r1, [r4, #32]
   16ecc:	add	r3, r2, r5
   16ed0:	cmp	r1, r3
   16ed4:	bls	16f70 <argp_error@@Base+0xd00>
   16ed8:	add	r7, r6, r5
   16edc:	sub	r2, r2, r6
   16ee0:	mov	r1, r6
   16ee4:	mov	r0, r7
   16ee8:	bl	110e0 <memmove@plt>
   16eec:	ldr	r3, [r4, #28]
   16ef0:	mov	r0, r6
   16ef4:	mov	r2, r5
   16ef8:	mov	r1, #32
   16efc:	mov	r6, r7
   16f00:	add	r3, r3, r5
   16f04:	str	r3, [r4, #28]
   16f08:	bl	1126c <memset@plt>
   16f0c:	str	r5, [r4, #20]
   16f10:	ldr	r9, [r4, #28]
   16f14:	mov	r1, #10
   16f18:	mov	r0, r6
   16f1c:	sub	r8, r9, r6
   16f20:	mov	r2, r8
   16f24:	bl	11284 <memchr@plt>
   16f28:	mov	fp, r0
   16f2c:	ldr	r5, [r4, #8]
   16f30:	ldr	r2, [r4, #20]
   16f34:	cmp	r2, #0
   16f38:	movlt	r3, #0
   16f3c:	strlt	r3, [r4, #20]
   16f40:	cmp	r0, #0
   16f44:	ldr	r0, [r4, #20]
   16f48:	bne	16f8c <argp_error@@Base+0xd1c>
   16f4c:	add	r3, r0, r8
   16f50:	cmp	r3, r5
   16f54:	bcs	16fac <argp_error@@Base+0xd3c>
   16f58:	str	r3, [r4, #20]
   16f5c:	ldrd	r2, [r4, #24]
   16f60:	sub	r3, r3, r2
   16f64:	str	r3, [r4, #16]
   16f68:	add	sp, sp, #12
   16f6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16f70:	mov	r0, #32
   16f74:	add	r7, r7, #1
   16f78:	ldr	r1, [r4]
   16f7c:	bl	11380 <putc_unlocked@plt>
   16f80:	cmp	r5, r7
   16f84:	bne	16f70 <argp_error@@Base+0xd00>
   16f88:	b	16f0c <argp_error@@Base+0xc9c>
   16f8c:	sub	r2, fp, r6
   16f90:	add	r2, r2, r0
   16f94:	cmp	r2, r5
   16f98:	bge	16fb0 <argp_error@@Base+0xd40>
   16f9c:	mov	r3, #0
   16fa0:	str	r3, [r4, #20]
   16fa4:	add	r3, fp, #1
   16fa8:	b	17004 <argp_error@@Base+0xd94>
   16fac:	mov	fp, r9
   16fb0:	ldr	sl, [r4, #12]
   16fb4:	cmp	sl, #0
   16fb8:	bge	17024 <argp_error@@Base+0xdb4>
   16fbc:	cmp	r9, fp
   16fc0:	sub	sl, r5, #1
   16fc4:	bls	1700c <argp_error@@Base+0xd9c>
   16fc8:	sub	r0, sl, r0
   16fcc:	sub	r2, r9, fp
   16fd0:	mov	r1, fp
   16fd4:	add	r0, r6, r0
   16fd8:	bl	110e0 <memmove@plt>
   16fdc:	ldr	r8, [r4, #20]
   16fe0:	sub	sl, sl, r8
   16fe4:	add	sl, r6, sl
   16fe8:	sub	r3, sl, fp
   16fec:	ldr	sl, [r4, #28]
   16ff0:	sub	r3, sl, r3
   16ff4:	str	r3, [r4, #28]
   16ff8:	mov	r3, #0
   16ffc:	str	r3, [r4, #20]
   17000:	add	r3, r6, r5
   17004:	mov	r6, r3
   17008:	b	16ea4 <argp_error@@Base+0xc34>
   1700c:	add	r0, r8, r0
   17010:	str	r0, [r4, #20]
   17014:	sub	r0, sl, r0
   17018:	add	r9, r9, r0
   1701c:	str	r9, [r4, #28]
   17020:	b	16f5c <argp_error@@Base+0xcec>
   17024:	sub	r5, r5, r0
   17028:	add	r5, r6, r5
   1702c:	mov	r7, r5
   17030:	cmp	r6, r7
   17034:	mov	r2, r7
   17038:	bhi	17064 <argp_error@@Base+0xdf4>
   1703c:	str	r2, [sp, #4]
   17040:	sub	r7, r7, #1
   17044:	bl	1120c <__ctype_b_loc@plt>
   17048:	ldr	r2, [sp, #4]
   1704c:	ldr	r0, [r0]
   17050:	ldrb	r1, [r2]
   17054:	lsl	r1, r1, #1
   17058:	ldrh	r1, [r0, r1]
   1705c:	tst	r1, #1
   17060:	beq	17030 <argp_error@@Base+0xdc0>
   17064:	add	r7, r2, #1
   17068:	cmp	r6, r7
   1706c:	bcs	170e0 <argp_error@@Base+0xe70>
   17070:	cmp	r6, r2
   17074:	bhi	170b0 <argp_error@@Base+0xe40>
   17078:	sub	r5, r2, #1
   1707c:	cmp	r6, r5
   17080:	mov	r2, r5
   17084:	bhi	170b0 <argp_error@@Base+0xe40>
   17088:	str	r2, [sp, #4]
   1708c:	sub	r5, r5, #1
   17090:	bl	1120c <__ctype_b_loc@plt>
   17094:	ldr	r2, [sp, #4]
   17098:	ldr	r1, [r0]
   1709c:	ldrb	r3, [r2]
   170a0:	lsl	r3, r3, #1
   170a4:	ldrh	r3, [r1, r3]
   170a8:	tst	r3, #1
   170ac:	bne	1707c <argp_error@@Base+0xe0c>
   170b0:	add	r5, r2, #1
   170b4:	add	r3, r8, #1
   170b8:	add	r3, r6, r3
   170bc:	cmp	r7, r3
   170c0:	bne	17148 <argp_error@@Base+0xed8>
   170c4:	ldr	r3, [r4, #32]
   170c8:	sub	r3, r3, r5
   170cc:	cmp	sl, r3
   170d0:	bge	17158 <argp_error@@Base+0xee8>
   170d4:	mov	r3, #10
   170d8:	strb	r3, [r5], #1
   170dc:	b	171d8 <argp_error@@Base+0xf68>
   170e0:	cmp	fp, r5
   170e4:	bls	1713c <argp_error@@Base+0xecc>
   170e8:	add	r7, r5, #1
   170ec:	cmp	fp, r7
   170f0:	mov	r5, r7
   170f4:	beq	1713c <argp_error@@Base+0xecc>
   170f8:	bl	1120c <__ctype_b_loc@plt>
   170fc:	ldrb	r2, [r5]
   17100:	add	r7, r7, #1
   17104:	ldr	r1, [r0]
   17108:	lsl	r2, r2, #1
   1710c:	ldrh	r2, [r1, r2]
   17110:	tst	r2, #1
   17114:	beq	170ec <argp_error@@Base+0xe7c>
   17118:	bl	1120c <__ctype_b_loc@plt>
   1711c:	ldr	r2, [r0]
   17120:	mov	r7, r5
   17124:	ldrb	r3, [r7, #1]!
   17128:	lsl	r3, r3, #1
   1712c:	ldrh	r3, [r2, r3]
   17130:	tst	r3, #1
   17134:	bne	17124 <argp_error@@Base+0xeb4>
   17138:	b	170b4 <argp_error@@Base+0xe44>
   1713c:	cmp	fp, r5
   17140:	bne	17118 <argp_error@@Base+0xea8>
   17144:	b	16f9c <argp_error@@Base+0xd2c>
   17148:	add	r3, r5, #1
   1714c:	sub	r3, r7, r3
   17150:	cmp	sl, r3
   17154:	ble	170d4 <argp_error@@Base+0xe64>
   17158:	cmp	r9, r7
   1715c:	bls	170d4 <argp_error@@Base+0xe64>
   17160:	ldr	r3, [r4, #32]
   17164:	add	r0, sl, #1
   17168:	sub	r3, r3, r9
   1716c:	cmp	r3, r0
   17170:	ble	171a0 <argp_error@@Base+0xf30>
   17174:	sub	r9, r9, r7
   17178:	mov	r1, r7
   1717c:	mov	r2, r9
   17180:	add	r0, r5, r0
   17184:	bl	110e0 <memmove@plt>
   17188:	ldr	r7, [r4, #12]
   1718c:	add	r7, r7, #1
   17190:	add	r7, r5, r7
   17194:	add	r9, r7, r9
   17198:	sub	r8, r9, r6
   1719c:	b	170d4 <argp_error@@Base+0xe64>
   171a0:	ldr	r0, [r4, #24]
   171a4:	cmp	r0, r5
   171a8:	bcs	171bc <argp_error@@Base+0xf4c>
   171ac:	sub	r2, r5, r0
   171b0:	mov	r1, #1
   171b4:	ldr	r3, [r4]
   171b8:	bl	1114c <fwrite_unlocked@plt>
   171bc:	mov	r0, #10
   171c0:	ldr	r1, [r4]
   171c4:	bl	11380 <putc_unlocked@plt>
   171c8:	ldr	r5, [r4, #24]
   171cc:	sub	r6, r6, r5
   171d0:	add	r8, r8, r6
   171d4:	mov	r6, r5
   171d8:	ldr	r2, [r4, #12]
   171dc:	sub	r3, r7, r5
   171e0:	cmp	r3, r2
   171e4:	bge	1726c <argp_error@@Base+0xffc>
   171e8:	add	r3, r8, #1
   171ec:	add	r3, r6, r3
   171f0:	cmp	r7, r3
   171f4:	bne	17208 <argp_error@@Base+0xf98>
   171f8:	ldr	r3, [r4, #32]
   171fc:	sub	r3, r3, r7
   17200:	cmp	r2, r3
   17204:	ble	1726c <argp_error@@Base+0xffc>
   17208:	mov	r9, #0
   1720c:	b	17284 <argp_error@@Base+0x1014>
   17210:	mov	r2, #32
   17214:	strb	r2, [r3], #1
   17218:	ldr	r1, [r4, #12]
   1721c:	sub	r2, r3, r5
   17220:	cmp	r1, r2
   17224:	bgt	17210 <argp_error@@Base+0xfa0>
   17228:	cmp	r3, r7
   1722c:	bcs	17248 <argp_error@@Base+0xfd8>
   17230:	add	r2, r6, r8
   17234:	mov	r0, r3
   17238:	sub	r2, r2, r7
   1723c:	mov	r1, r7
   17240:	bl	110e0 <memmove@plt>
   17244:	mov	r3, r0
   17248:	ldr	r2, [r4, #12]
   1724c:	sub	r6, r7, r6
   17250:	sub	r6, r8, r6
   17254:	add	r6, r3, r6
   17258:	str	r6, [r4, #28]
   1725c:	cmp	r2, #0
   17260:	mvneq	r2, #0
   17264:	str	r2, [r4, #20]
   17268:	b	17004 <argp_error@@Base+0xd94>
   1726c:	mov	r3, r5
   17270:	b	17218 <argp_error@@Base+0xfa8>
   17274:	mov	r0, #32
   17278:	ldr	r1, [r4]
   1727c:	add	r9, r9, #1
   17280:	bl	11380 <putc_unlocked@plt>
   17284:	ldr	r3, [r4, #12]
   17288:	cmp	r3, r9
   1728c:	bgt	17274 <argp_error@@Base+0x1004>
   17290:	mov	r3, r5
   17294:	b	17228 <argp_error@@Base+0xfb8>
   17298:	push	{r4, lr}
   1729c:	mov	r4, r0
   172a0:	bl	16e90 <argp_error@@Base+0xc20>
   172a4:	ldr	r0, [r4, #24]
   172a8:	ldr	r2, [r4, #28]
   172ac:	cmp	r2, r0
   172b0:	bls	172c4 <argp_error@@Base+0x1054>
   172b4:	sub	r2, r2, r0
   172b8:	mov	r1, #1
   172bc:	ldr	r3, [r4]
   172c0:	bl	1114c <fwrite_unlocked@plt>
   172c4:	ldr	r0, [r4, #24]
   172c8:	bl	1369c <argp_usage@@Base+0x170>
   172cc:	mov	r0, r4
   172d0:	pop	{r4, lr}
   172d4:	b	1369c <argp_usage@@Base+0x170>
   172d8:	ldrd	r2, [r0, #28]
   172dc:	sub	r3, r3, r2
   172e0:	cmp	r3, r1
   172e4:	bcc	172f0 <argp_error@@Base+0x1080>
   172e8:	mov	r0, #1
   172ec:	bx	lr
   172f0:	push	{r4, r5, r6, lr}
   172f4:	mov	r4, r0
   172f8:	mov	r5, r1
   172fc:	bl	16e90 <argp_error@@Base+0xc20>
   17300:	mov	r1, #1
   17304:	ldr	r3, [r4]
   17308:	ldr	r0, [r4, #24]
   1730c:	ldr	r2, [r4, #28]
   17310:	sub	r2, r2, r0
   17314:	bl	1114c <fwrite_unlocked@plt>
   17318:	mov	r1, r0
   1731c:	ldr	r0, [r4, #24]
   17320:	ldr	r2, [r4, #28]
   17324:	sub	r3, r2, r0
   17328:	cmp	r1, r3
   1732c:	bne	17354 <argp_error@@Base+0x10e4>
   17330:	ldr	r1, [r4, #32]
   17334:	mov	r3, #0
   17338:	str	r3, [r4, #16]
   1733c:	str	r0, [r4, #28]
   17340:	sub	r1, r1, r0
   17344:	cmp	r5, r1
   17348:	bhi	1737c <argp_error@@Base+0x110c>
   1734c:	mov	r0, #1
   17350:	pop	{r4, r5, r6, pc}
   17354:	ldr	r3, [r4, #16]
   17358:	sub	r2, r2, r1
   1735c:	str	r2, [r4, #28]
   17360:	sub	r2, r2, r0
   17364:	sub	r3, r3, r1
   17368:	add	r1, r0, r1
   1736c:	str	r3, [r4, #16]
   17370:	bl	110e0 <memmove@plt>
   17374:	mov	r0, #0
   17378:	pop	{r4, r5, r6, pc}
   1737c:	adds	r5, r5, r1
   17380:	bcs	17394 <argp_error@@Base+0x1124>
   17384:	mov	r1, r5
   17388:	bl	14288 <_obstack_memory_used@@Base+0x814>
   1738c:	cmp	r0, #0
   17390:	bne	173a4 <argp_error@@Base+0x1134>
   17394:	bl	11248 <__errno_location@plt>
   17398:	mov	r3, #12
   1739c:	str	r3, [r0]
   173a0:	b	17374 <argp_error@@Base+0x1104>
   173a4:	add	r5, r0, r5
   173a8:	str	r0, [r4, #24]
   173ac:	str	r0, [r4, #28]
   173b0:	str	r5, [r4, #32]
   173b4:	b	1734c <argp_error@@Base+0x10dc>
   173b8:	push	{r1, r2, r3}
   173bc:	push	{r0, r1, r2, r4, r5, r6, lr}
   173c0:	mov	r4, r0
   173c4:	mov	r1, #150	; 0x96
   173c8:	add	r6, sp, #32
   173cc:	mov	r0, r4
   173d0:	bl	172d8 <argp_error@@Base+0x1068>
   173d4:	cmp	r0, #0
   173d8:	bne	173f0 <argp_error@@Base+0x1180>
   173dc:	mvn	r0, #0
   173e0:	add	sp, sp, #12
   173e4:	pop	{r4, r5, r6, lr}
   173e8:	add	sp, sp, #12
   173ec:	bx	lr
   173f0:	ldr	r0, [r4, #28]
   173f4:	mov	r3, r6
   173f8:	str	r6, [sp, #4]
   173fc:	ldr	r5, [r4, #32]
   17400:	ldr	r2, [sp, #28]
   17404:	sub	r5, r5, r0
   17408:	mov	r1, r5
   1740c:	bl	112d8 <vsnprintf@plt>
   17410:	cmp	r0, r5
   17414:	addcs	r1, r0, #1
   17418:	bcs	173cc <argp_error@@Base+0x115c>
   1741c:	ldr	r3, [r4, #28]
   17420:	add	r3, r3, r0
   17424:	str	r3, [r4, #28]
   17428:	b	173e0 <argp_error@@Base+0x1170>
   1742c:	ldr	r3, [r0, #28]
   17430:	push	{r4, r5, r6, lr}
   17434:	mov	r4, r2
   17438:	mov	r5, r0
   1743c:	mov	r6, r1
   17440:	add	r3, r3, r2
   17444:	ldr	r2, [r0, #32]
   17448:	cmp	r2, r3
   1744c:	bcc	17474 <argp_error@@Base+0x1204>
   17450:	mov	r2, r4
   17454:	mov	r1, r6
   17458:	ldr	r0, [r5, #28]
   1745c:	bl	11134 <memcpy@plt>
   17460:	ldr	r3, [r5, #28]
   17464:	add	r3, r3, r4
   17468:	str	r3, [r5, #28]
   1746c:	mov	r0, r4
   17470:	pop	{r4, r5, r6, pc}
   17474:	mov	r1, r4
   17478:	bl	172d8 <argp_error@@Base+0x1068>
   1747c:	cmp	r0, #0
   17480:	bne	17450 <argp_error@@Base+0x11e0>
   17484:	mov	r4, r0
   17488:	b	1746c <argp_error@@Base+0x11fc>
   1748c:	push	{r4, r5, r6, lr}
   17490:	mov	r6, r0
   17494:	mov	r0, r1
   17498:	mov	r5, r1
   1749c:	bl	11224 <strlen@plt>
   174a0:	subs	r4, r0, #0
   174a4:	beq	174c4 <argp_error@@Base+0x1254>
   174a8:	mov	r2, r4
   174ac:	mov	r1, r5
   174b0:	mov	r0, r6
   174b4:	bl	1742c <argp_error@@Base+0x11bc>
   174b8:	subs	r0, r4, r0
   174bc:	mvnne	r0, #0
   174c0:	pop	{r4, r5, r6, pc}
   174c4:	mov	r0, r4
   174c8:	pop	{r4, r5, r6, pc}
   174cc:	ldrd	r2, [r0, #28]
   174d0:	push	{r4, r5, r6, lr}
   174d4:	mov	r5, r0
   174d8:	mov	r4, r1
   174dc:	cmp	r2, r3
   174e0:	bcs	174fc <argp_error@@Base+0x128c>
   174e4:	ldr	r3, [r5, #28]
   174e8:	uxtb	r0, r4
   174ec:	add	r2, r3, #1
   174f0:	str	r2, [r5, #28]
   174f4:	strb	r4, [r3]
   174f8:	pop	{r4, r5, r6, pc}
   174fc:	mov	r1, #1
   17500:	bl	172d8 <argp_error@@Base+0x1068>
   17504:	cmp	r0, #0
   17508:	bne	174e4 <argp_error@@Base+0x1274>
   1750c:	mvn	r0, #0
   17510:	pop	{r4, r5, r6, pc}
   17514:	ldrd	r2, [r0, #24]
   17518:	push	{r4, r5, r6, lr}
   1751c:	mov	r4, r0
   17520:	mov	r5, r1
   17524:	sub	r3, r3, r2
   17528:	ldr	r2, [r0, #16]
   1752c:	cmp	r3, r2
   17530:	bls	17538 <argp_error@@Base+0x12c8>
   17534:	bl	16e90 <argp_error@@Base+0xc20>
   17538:	ldr	r0, [r4, #4]
   1753c:	str	r5, [r4, #4]
   17540:	pop	{r4, r5, r6, pc}
   17544:	ldrd	r2, [r0, #24]
   17548:	push	{r4, r5, r6, lr}
   1754c:	mov	r4, r0
   17550:	mov	r5, r1
   17554:	sub	r3, r3, r2
   17558:	ldr	r2, [r0, #16]
   1755c:	cmp	r3, r2
   17560:	bls	17568 <argp_error@@Base+0x12f8>
   17564:	bl	16e90 <argp_error@@Base+0xc20>
   17568:	ldr	r0, [r4, #8]
   1756c:	str	r5, [r4, #8]
   17570:	pop	{r4, r5, r6, pc}
   17574:	ldrd	r2, [r0, #24]
   17578:	push	{r4, r5, r6, lr}
   1757c:	mov	r4, r0
   17580:	mov	r5, r1
   17584:	sub	r3, r3, r2
   17588:	ldr	r2, [r0, #16]
   1758c:	cmp	r3, r2
   17590:	bls	17598 <argp_error@@Base+0x1328>
   17594:	bl	16e90 <argp_error@@Base+0xc20>
   17598:	ldr	r0, [r4, #12]
   1759c:	str	r5, [r4, #12]
   175a0:	pop	{r4, r5, r6, pc}
   175a4:	ldrd	r2, [r0, #24]
   175a8:	push	{r4, lr}
   175ac:	mov	r4, r0
   175b0:	sub	r3, r3, r2
   175b4:	ldr	r2, [r0, #16]
   175b8:	cmp	r3, r2
   175bc:	bls	175c4 <argp_error@@Base+0x1354>
   175c0:	bl	16e90 <argp_error@@Base+0xc20>
   175c4:	ldr	r0, [r4, #20]
   175c8:	bic	r0, r0, r0, asr #31
   175cc:	pop	{r4, pc}
   175d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   175d4:	mov	r7, r0
   175d8:	ldr	r6, [pc, #72]	; 17628 <argp_error@@Base+0x13b8>
   175dc:	ldr	r5, [pc, #72]	; 1762c <argp_error@@Base+0x13bc>
   175e0:	add	r6, pc, r6
   175e4:	add	r5, pc, r5
   175e8:	sub	r6, r6, r5
   175ec:	mov	r8, r1
   175f0:	mov	r9, r2
   175f4:	bl	11078 <fdopen@plt-0x20>
   175f8:	asrs	r6, r6, #2
   175fc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   17600:	mov	r4, #0
   17604:	add	r4, r4, #1
   17608:	ldr	r3, [r5], #4
   1760c:	mov	r2, r9
   17610:	mov	r1, r8
   17614:	mov	r0, r7
   17618:	blx	r3
   1761c:	cmp	r6, r4
   17620:	bne	17604 <argp_error@@Base+0x1394>
   17624:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17628:	andeq	r2, r1, ip, lsr #18
   1762c:	andeq	r2, r1, r4, lsr #18
   17630:	bx	lr

Disassembly of section .fini:

00017634 <.fini>:
   17634:	push	{r3, lr}
   17638:	pop	{r3, pc}
