
../repos/myhtml/libmyhtml.so.4.0.6:     file format elf32-littlearm


Disassembly of section .init:

0000fba0 <.init>:
    fba0:	push	{r3, lr}
    fba4:	bl	110b4 <mythread_init@plt+0xc>
    fba8:	pop	{r3, pc}

Disassembly of section .plt:

0000fbac <pthread_mutex_unlock@plt-0x14>:
    fbac:	push	{lr}		; (str lr, [sp, #-4]!)
    fbb0:	ldr	lr, [pc, #4]	; fbbc <pthread_mutex_unlock@plt-0x4>
    fbb4:	add	lr, pc, lr
    fbb8:	ldr	pc, [lr, #8]!
    fbbc:	andseq	r7, r0, r4, asr #8

0000fbc0 <pthread_mutex_unlock@plt>:
    fbc0:	add	ip, pc, #1048576	; 0x100000
    fbc4:	add	ip, ip, #28672	; 0x7000
    fbc8:	ldr	pc, [ip, #1092]!	; 0x444

0000fbcc <myhtml_get_nodes_by_attribute_value_recursion@plt>:
    fbcc:	add	ip, pc, #1048576	; 0x100000
    fbd0:	add	ip, ip, #28672	; 0x7000
    fbd4:	ldr	pc, [ip, #1084]!	; 0x43c

0000fbd8 <mycore_realloc@plt>:
    fbd8:	add	ip, pc, #1048576	; 0x100000
    fbdc:	add	ip, ip, #28672	; 0x7000
    fbe0:	ldr	pc, [ip, #1076]!	; 0x434

0000fbe4 <calloc@plt>:
    fbe4:	add	ip, pc, #1048576	; 0x100000
    fbe8:	add	ip, ip, #28672	; 0x7000
    fbec:	ldr	pc, [ip, #1068]!	; 0x42c

0000fbf0 <mycore_strcmp@plt>:
    fbf0:	add	ip, pc, #1048576	; 0x100000
    fbf4:	add	ip, ip, #28672	; 0x7000
    fbf8:	ldr	pc, [ip, #1060]!	; 0x424

0000fbfc <myhtml_tree_node_insert_root@plt>:
    fbfc:	add	ip, pc, #1048576	; 0x100000
    fc00:	add	ip, ip, #28672	; 0x7000
    fc04:	ldr	pc, [ip, #1052]!	; 0x41c

0000fc08 <mythread_queue_list_entry_delete@plt>:
    fc08:	add	ip, pc, #1048576	; 0x100000
    fc0c:	add	ip, ip, #28672	; 0x7000
    fc10:	ldr	pc, [ip, #1044]!	; 0x414

0000fc14 <myencoding_string_append_chunk@plt>:
    fc14:	add	ip, pc, #1048576	; 0x100000
    fc18:	add	ip, ip, #28672	; 0x7000
    fc1c:	ldr	pc, [ip, #1036]!	; 0x40c

0000fc20 <myhtml_token_release_and_check_doctype_attributes@plt>:
    fc20:	add	ip, pc, #1048576	; 0x100000
    fc24:	add	ip, ip, #28672	; 0x7000
    fc28:	ldr	pc, [ip, #1028]!	; 0x404

0000fc2c <raise@plt>:
    fc2c:	add	ip, pc, #1048576	; 0x100000
    fc30:	add	ip, ip, #28672	; 0x7000
    fc34:	ldr	pc, [ip, #1020]!	; 0x3fc

0000fc38 <myhtml_token_doctype_check_xhtml_1_1@plt>:
    fc38:	add	ip, pc, #1048576	; 0x100000
    fc3c:	add	ip, ip, #28672	; 0x7000
    fc40:	ldr	pc, [ip, #1012]!	; 0x3f4

0000fc44 <myencoding_detect_unicode@plt>:
    fc44:	add	ip, pc, #1048576	; 0x100000
    fc48:	add	ip, ip, #28672	; 0x7000
    fc4c:	ldr	pc, [ip, #1004]!	; 0x3ec

0000fc50 <myhtml_tree_element_in_scope_by_node@plt>:
    fc50:	add	ip, pc, #1048576	; 0x100000
    fc54:	add	ip, ip, #28672	; 0x7000
    fc58:	ldr	pc, [ip, #996]!	; 0x3e4

0000fc5c <mythread_nanosleep_clean@plt>:
    fc5c:	add	ip, pc, #1048576	; 0x100000
    fc60:	add	ip, ip, #28672	; 0x7000
    fc64:	ldr	pc, [ip, #988]!	; 0x3dc

0000fc68 <myhtml_tree_node_insert_html_element@plt>:
    fc68:	add	ip, pc, #1048576	; 0x100000
    fc6c:	add	ip, ip, #28672	; 0x7000
    fc70:	ldr	pc, [ip, #980]!	; 0x3d4

0000fc74 <myhtml_tree_token_list_destroy@plt>:
    fc74:	add	ip, pc, #1048576	; 0x100000
    fc78:	add	ip, ip, #28672	; 0x7000
    fc7c:	ldr	pc, [ip, #972]!	; 0x3cc

0000fc80 <mcobject_async_init@plt>:
    fc80:	add	ip, pc, #1048576	; 0x100000
    fc84:	add	ip, ip, #28672	; 0x7000
    fc88:	ldr	pc, [ip, #964]!	; 0x3c4

0000fc8c <myhtml_tree_temp_tag_name_append@plt>:
    fc8c:	add	ip, pc, #1048576	; 0x100000
    fc90:	add	ip, ip, #28672	; 0x7000
    fc94:	ldr	pc, [ip, #956]!	; 0x3bc

0000fc98 <myhtml_tokenizer_fragment_init@plt>:
    fc98:	add	ip, pc, #1048576	; 0x100000
    fc9c:	add	ip, ip, #28672	; 0x7000
    fca0:	ldr	pc, [ip, #948]!	; 0x3b4

0000fca4 <mythread_nanosleep_create@plt>:
    fca4:	add	ip, pc, #1048576	; 0x100000
    fca8:	add	ip, ip, #28672	; 0x7000
    fcac:	ldr	pc, [ip, #940]!	; 0x3ac

0000fcb0 <myhtml_tree_open_elements_find_by_tag_idx_reverse@plt>:
    fcb0:	add	ip, pc, #1048576	; 0x100000
    fcb4:	add	ip, ip, #28672	; 0x7000
    fcb8:	ldr	pc, [ip, #932]!	; 0x3a4

0000fcbc <myhtml_tokenizer_state_init@plt>:
    fcbc:	add	ip, pc, #1048576	; 0x100000
    fcc0:	add	ip, ip, #28672	; 0x7000
    fcc4:	ldr	pc, [ip, #924]!	; 0x39c

0000fcc8 <myencoding_codepoint_to_lowercase_ascii_utf_8@plt>:
    fcc8:	add	ip, pc, #1048576	; 0x100000
    fccc:	add	ip, ip, #28672	; 0x7000
    fcd0:	ldr	pc, [ip, #916]!	; 0x394

0000fcd4 <mycore_ustrcasecmp_without_checks_by_secondary@plt>:
    fcd4:	add	ip, pc, #1048576	; 0x100000
    fcd8:	add	ip, ip, #28672	; 0x7000
    fcdc:	ldr	pc, [ip, #908]!	; 0x38c

0000fce0 <myhtml_tree_wait_for_last_done_token@plt>:
    fce0:	add	ip, pc, #1048576	; 0x100000
    fce4:	add	ip, ip, #28672	; 0x7000
    fce8:	ldr	pc, [ip, #900]!	; 0x384

0000fcec <mythread_queue_get_prev_node@plt>:
    fcec:	add	ip, pc, #1048576	; 0x100000
    fcf0:	add	ip, ip, #28672	; 0x7000
    fcf4:	ldr	pc, [ip, #892]!	; 0x37c

0000fcf8 <myhtml_insertion_mode_in_foreign_content_end_other@plt>:
    fcf8:	add	ip, pc, #1048576	; 0x100000
    fcfc:	add	ip, ip, #28672	; 0x7000
    fd00:	ldr	pc, [ip, #884]!	; 0x374

0000fd04 <setbuf@plt>:
    fd04:	add	ip, pc, #1048576	; 0x100000
    fd08:	add	ip, ip, #28672	; 0x7000
    fd0c:	ldr	pc, [ip, #876]!	; 0x36c

0000fd10 <mycore_utils_avl_tree_find_min@plt>:
    fd10:	add	ip, pc, #1048576	; 0x100000
    fd14:	add	ip, ip, #28672	; 0x7000
    fd18:	ldr	pc, [ip, #868]!	; 0x364

0000fd1c <myhtml_insertion_mode_in_body_other_end_tag@plt>:
    fd1c:	add	ip, pc, #1048576	; 0x100000
    fd20:	add	ip, ip, #28672	; 0x7000
    fd24:	ldr	pc, [ip, #860]!	; 0x35c

0000fd28 <myhtml_stream_buffer_destroy@plt>:
    fd28:	add	ip, pc, #1048576	; 0x100000
    fd2c:	add	ip, ip, #28672	; 0x7000
    fd30:	ldr	pc, [ip, #852]!	; 0x354

0000fd34 <myhtml_token_attr_match_case@plt>:
    fd34:	add	ip, pc, #1048576	; 0x100000
    fd38:	add	ip, ip, #28672	; 0x7000
    fd3c:	ldr	pc, [ip, #844]!	; 0x34c

0000fd40 <__cxa_finalize@plt>:
    fd40:	add	ip, pc, #1048576	; 0x100000
    fd44:	add	ip, ip, #28672	; 0x7000
    fd48:	ldr	pc, [ip, #836]!	; 0x344

0000fd4c <mycore_utils_avl_tree_node_rotate_right@plt>:
    fd4c:	add	ip, pc, #1048576	; 0x100000
    fd50:	add	ip, ip, #28672	; 0x7000
    fd54:	ldr	pc, [ip, #828]!	; 0x33c

0000fd58 <mcobject_async_create@plt>:
    fd58:	add	ip, pc, #1048576	; 0x100000
    fd5c:	add	ip, ip, #28672	; 0x7000
    fd60:	ldr	pc, [ip, #820]!	; 0x334

0000fd64 <mythread_queue_clean@plt>:
    fd64:	add	ip, pc, #1048576	; 0x100000
    fd68:	add	ip, ip, #28672	; 0x7000
    fd6c:	ldr	pc, [ip, #812]!	; 0x32c

0000fd70 <mcsync_mutex_destroy@plt>:
    fd70:	add	ip, pc, #1048576	; 0x100000
    fd74:	add	ip, ip, #28672	; 0x7000
    fd78:	ldr	pc, [ip, #804]!	; 0x324

0000fd7c <myhtml_parser_worker@plt>:
    fd7c:	add	ip, pc, #1048576	; 0x100000
    fd80:	add	ip, ip, #28672	; 0x7000
    fd84:	ldr	pc, [ip, #796]!	; 0x31c

0000fd88 <mythread_thread_create@plt>:
    fd88:	add	ip, pc, #1048576	; 0x100000
    fd8c:	add	ip, ip, #28672	; 0x7000
    fd90:	ldr	pc, [ip, #788]!	; 0x314

0000fd94 <mcsync_create@plt>:
    fd94:	add	ip, pc, #1048576	; 0x100000
    fd98:	add	ip, ip, #28672	; 0x7000
    fd9c:	ldr	pc, [ip, #780]!	; 0x30c

0000fda0 <myhtml_insertion_mode_in_template@plt>:
    fda0:	add	ip, pc, #1048576	; 0x100000
    fda4:	add	ip, ip, #28672	; 0x7000
    fda8:	ldr	pc, [ip, #772]!	; 0x304

0000fdac <mycore_utils_avl_tree_node_balance_factor@plt>:
    fdac:	add	ip, pc, #1048576	; 0x100000
    fdb0:	add	ip, ip, #28672	; 0x7000
    fdb4:	ldr	pc, [ip, #764]!	; 0x2fc

0000fdb8 <fopen@plt>:
    fdb8:	add	ip, pc, #1048576	; 0x100000
    fdbc:	add	ip, ip, #28672	; 0x7000
    fdc0:	ldr	pc, [ip, #756]!	; 0x2f4

0000fdc4 <mcobject_async_mem_malloc@plt>:
    fdc4:	add	ip, pc, #1048576	; 0x100000
    fdc8:	add	ip, ip, #28672	; 0x7000
    fdcc:	ldr	pc, [ip, #748]!	; 0x2ec

0000fdd0 <mcobject_destroy@plt>:
    fdd0:	add	ip, pc, #1048576	; 0x100000
    fdd4:	add	ip, ip, #28672	; 0x7000
    fdd8:	ldr	pc, [ip, #740]!	; 0x2e4

0000fddc <pthread_attr_destroy@plt>:
    fddc:	add	ip, pc, #1048576	; 0x100000
    fde0:	add	ip, ip, #28672	; 0x7000
    fde4:	ldr	pc, [ip, #732]!	; 0x2dc

0000fde8 <myhtml_clean@plt>:
    fde8:	add	ip, pc, #1048576	; 0x100000
    fdec:	add	ip, ip, #28672	; 0x7000
    fdf0:	ldr	pc, [ip, #724]!	; 0x2d4

0000fdf4 <myhtml_get_nodes_by_attribute_value_recursion_by_key@plt>:
    fdf4:	add	ip, pc, #1048576	; 0x100000
    fdf8:	add	ip, ip, #28672	; 0x7000
    fdfc:	ldr	pc, [ip, #716]!	; 0x2cc

0000fe00 <pthread_mutex_destroy@plt>:
    fe00:	add	ip, pc, #1048576	; 0x100000
    fe04:	add	ip, ip, #28672	; 0x7000
    fe08:	ldr	pc, [ip, #708]!	; 0x2c4

0000fe0c <fflush@plt>:
    fe0c:	add	ip, pc, #1048576	; 0x100000
    fe10:	add	ip, ip, #28672	; 0x7000
    fe14:	ldr	pc, [ip, #700]!	; 0x2bc

0000fe18 <mythread_create@plt>:
    fe18:	add	ip, pc, #1048576	; 0x100000
    fe1c:	add	ip, ip, #28672	; 0x7000
    fe20:	ldr	pc, [ip, #692]!	; 0x2b4

0000fe24 <myhtml_insertion_mode_in_foreign_content@plt>:
    fe24:	add	ip, pc, #1048576	; 0x100000
    fe28:	add	ip, ip, #28672	; 0x7000
    fe2c:	ldr	pc, [ip, #684]!	; 0x2ac

0000fe30 <myhtml_tree_generate_all_implied_end_tags@plt>:
    fe30:	add	ip, pc, #1048576	; 0x100000
    fe34:	add	ip, ip, #28672	; 0x7000
    fe38:	ldr	pc, [ip, #676]!	; 0x2a4

0000fe3c <myencoding_string_append_lowercase_ascii@plt>:
    fe3c:	add	ip, pc, #1048576	; 0x100000
    fe40:	add	ip, ip, #28672	; 0x7000
    fe44:	ldr	pc, [ip, #668]!	; 0x29c

0000fe48 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@plt>:
    fe48:	add	ip, pc, #1048576	; 0x100000
    fe4c:	add	ip, ip, #28672	; 0x7000
    fe50:	ldr	pc, [ip, #660]!	; 0x294

0000fe54 <myhread_increase_id_by_entry_id@plt>:
    fe54:	add	ip, pc, #1048576	; 0x100000
    fe58:	add	ip, ip, #28672	; 0x7000
    fe5c:	ldr	pc, [ip, #652]!	; 0x28c

0000fe60 <myhtml_tree_incomming_buffer_make_data@plt>:
    fe60:	add	ip, pc, #1048576	; 0x100000
    fe64:	add	ip, ip, #28672	; 0x7000
    fe68:	ldr	pc, [ip, #644]!	; 0x284

0000fe6c <_myhtml_token_create_copy_srt@plt>:
    fe6c:	add	ip, pc, #1048576	; 0x100000
    fe70:	add	ip, ip, #28672	; 0x7000
    fe74:	ldr	pc, [ip, #636]!	; 0x27c

0000fe78 <memmove@plt>:
    fe78:	add	ip, pc, #1048576	; 0x100000
    fe7c:	add	ip, ip, #28672	; 0x7000
    fe80:	ldr	pc, [ip, #628]!	; 0x274

0000fe84 <mythread_thread_attr_init@plt>:
    fe84:	add	ip, pc, #1048576	; 0x100000
    fe88:	add	ip, ip, #28672	; 0x7000
    fe8c:	ldr	pc, [ip, #620]!	; 0x26c

0000fe90 <myhtml_insertion_mode_in_foreign_content_start_other@plt>:
    fe90:	add	ip, pc, #1048576	; 0x100000
    fe94:	add	ip, ip, #28672	; 0x7000
    fe98:	ldr	pc, [ip, #612]!	; 0x264

0000fe9c <myhtml_rules_tree_dispatcher@plt>:
    fe9c:	add	ip, pc, #1048576	; 0x100000
    fea0:	add	ip, ip, #28672	; 0x7000
    fea4:	ldr	pc, [ip, #604]!	; 0x25c

0000fea8 <myhtml_get_nodes_by_attribute_key_recursion@plt>:
    fea8:	add	ip, pc, #1048576	; 0x100000
    feac:	add	ip, ip, #28672	; 0x7000
    feb0:	ldr	pc, [ip, #596]!	; 0x254

0000feb4 <free@plt>:
    feb4:	add	ip, pc, #1048576	; 0x100000
    feb8:	add	ip, ip, #28672	; 0x7000
    febc:	ldr	pc, [ip, #588]!	; 0x24c

0000fec0 <mchar_async_cache_malloc@plt>:
    fec0:	add	ip, pc, #1048576	; 0x100000
    fec4:	add	ip, ip, #28672	; 0x7000
    fec8:	ldr	pc, [ip, #580]!	; 0x244

0000fecc <mythread_function_see_opt@plt>:
    fecc:	add	ip, pc, #1048576	; 0x100000
    fed0:	add	ip, ip, #28672	; 0x7000
    fed4:	ldr	pc, [ip, #572]!	; 0x23c

0000fed8 <myencoding_detect_utf_16@plt>:
    fed8:	add	ip, pc, #1048576	; 0x100000
    fedc:	add	ip, ip, #28672	; 0x7000
    fee0:	ldr	pc, [ip, #564]!	; 0x234

0000fee4 <mcobject_chunk_malloc@plt>:
    fee4:	add	ip, pc, #1048576	; 0x100000
    fee8:	add	ip, ip, #28672	; 0x7000
    feec:	ldr	pc, [ip, #556]!	; 0x22c

0000fef0 <myhtml_insertion_fix_split_for_text_begin_ws@plt>:
    fef0:	add	ip, pc, #1048576	; 0x100000
    fef4:	add	ip, ip, #28672	; 0x7000
    fef8:	ldr	pc, [ip, #548]!	; 0x224

0000fefc <mcsync_mutex_unlock@plt>:
    fefc:	add	ip, pc, #1048576	; 0x100000
    ff00:	add	ip, ip, #28672	; 0x7000
    ff04:	ldr	pc, [ip, #540]!	; 0x21c

0000ff08 <pthread_mutex_lock@plt>:
    ff08:	add	ip, pc, #1048576	; 0x100000
    ff0c:	add	ip, ip, #28672	; 0x7000
    ff10:	ldr	pc, [ip, #532]!	; 0x214

0000ff14 <mycore_calloc@plt>:
    ff14:	add	ip, pc, #1048576	; 0x100000
    ff18:	add	ip, ip, #28672	; 0x7000
    ff1c:	ldr	pc, [ip, #524]!	; 0x20c

0000ff20 <nanosleep@plt>:
    ff20:	add	ip, pc, #1048576	; 0x100000
    ff24:	add	ip, ip, #28672	; 0x7000
    ff28:	ldr	pc, [ip, #516]!	; 0x204

0000ff2c <myhtml_token_node_clone@plt>:
    ff2c:	add	ip, pc, #1048576	; 0x100000
    ff30:	add	ip, ip, #28672	; 0x7000
    ff34:	ldr	pc, [ip, #508]!	; 0x1fc

0000ff38 <myhtml_get_nodes_by_tag_id_in_scope@plt>:
    ff38:	add	ip, pc, #1048576	; 0x100000
    ff3c:	add	ip, ip, #28672	; 0x7000
    ff40:	ldr	pc, [ip, #500]!	; 0x1f4

0000ff44 <mchar_sync_chunk_insert_after@plt>:
    ff44:	add	ip, pc, #1048576	; 0x100000
    ff48:	add	ip, ip, #28672	; 0x7000
    ff4c:	ldr	pc, [ip, #492]!	; 0x1ec

0000ff50 <ferror@plt>:
    ff50:	add	ip, pc, #1048576	; 0x100000
    ff54:	add	ip, ip, #28672	; 0x7000
    ff58:	ldr	pc, [ip, #484]!	; 0x1e4

0000ff5c <memcpy@plt>:
    ff5c:	add	ip, pc, #1048576	; 0x100000
    ff60:	add	ip, ip, #28672	; 0x7000
    ff64:	ldr	pc, [ip, #476]!	; 0x1dc

0000ff68 <myencoding_name_entry_by_name@plt>:
    ff68:	add	ip, pc, #1048576	; 0x100000
    ff6c:	add	ip, ip, #28672	; 0x7000
    ff70:	ldr	pc, [ip, #468]!	; 0x1d4

0000ff74 <myhtml_token_adjust_mathml_attributes@plt>:
    ff74:	add	ip, pc, #1048576	; 0x100000
    ff78:	add	ip, ip, #28672	; 0x7000
    ff7c:	ldr	pc, [ip, #460]!	; 0x1cc

0000ff80 <mcobject_free@plt>:
    ff80:	add	ip, pc, #1048576	; 0x100000
    ff84:	add	ip, ip, #28672	; 0x7000
    ff88:	ldr	pc, [ip, #452]!	; 0x1c4

0000ff8c <myhtml_tree_node_insert_text@plt>:
    ff8c:	add	ip, pc, #1048576	; 0x100000
    ff90:	add	ip, ip, #28672	; 0x7000
    ff94:	ldr	pc, [ip, #444]!	; 0x1bc

0000ff98 <myhtml_tag_set_category@plt>:
    ff98:	add	ip, pc, #1048576	; 0x100000
    ff9c:	add	ip, ip, #28672	; 0x7000
    ffa0:	ldr	pc, [ip, #436]!	; 0x1b4

0000ffa4 <mcsync_spin_destroy@plt>:
    ffa4:	add	ip, pc, #1048576	; 0x100000
    ffa8:	add	ip, ip, #28672	; 0x7000
    ffac:	ldr	pc, [ip, #428]!	; 0x1ac

0000ffb0 <myhtml_tree_template_insertion_append@plt>:
    ffb0:	add	ip, pc, #1048576	; 0x100000
    ffb4:	add	ip, ip, #28672	; 0x7000
    ffb8:	ldr	pc, [ip, #420]!	; 0x1a4

0000ffbc <mchar_async_realloc@plt>:
    ffbc:	add	ip, pc, #1048576	; 0x100000
    ffc0:	add	ip, ip, #28672	; 0x7000
    ffc4:	ldr	pc, [ip, #412]!	; 0x19c

0000ffc8 <pthread_mutex_init@plt>:
    ffc8:	add	ip, pc, #1048576	; 0x100000
    ffcc:	add	ip, ip, #28672	; 0x7000
    ffd0:	ldr	pc, [ip, #404]!	; 0x194

0000ffd4 <myhtml_tokenizer_state_bogus_comment@plt>:
    ffd4:	add	ip, pc, #1048576	; 0x100000
    ffd8:	add	ip, ip, #28672	; 0x7000
    ffdc:	ldr	pc, [ip, #396]!	; 0x18c

0000ffe0 <myhtml_tree_node_create@plt>:
    ffe0:	add	ip, pc, #1048576	; 0x100000
    ffe4:	add	ip, ip, #28672	; 0x7000
    ffe8:	ldr	pc, [ip, #388]!	; 0x184

0000ffec <myhtml_tree_node_delete_recursive@plt>:
    ffec:	add	ip, pc, #1048576	; 0x100000
    fff0:	add	ip, ip, #28672	; 0x7000
    fff4:	ldr	pc, [ip, #380]!	; 0x17c

0000fff8 <myhtml_tag_static_get_by_id@plt>:
    fff8:	add	ip, pc, #1048576	; 0x100000
    fffc:	add	ip, ip, #28672	; 0x7000
   10000:	ldr	pc, [ip, #372]!	; 0x174

00010004 <myhtml_token_attr_clean@plt>:
   10004:	add	ip, pc, #1048576	; 0x100000
   10008:	add	ip, ip, #28672	; 0x7000
   1000c:	ldr	pc, [ip, #364]!	; 0x16c

00010010 <myhtml_tag_add@plt>:
   10010:	add	ip, pc, #1048576	; 0x100000
   10014:	add	ip, ip, #28672	; 0x7000
   10018:	ldr	pc, [ip, #356]!	; 0x164

0001001c <mcobject_create@plt>:
   1001c:	add	ip, pc, #1048576	; 0x100000
   10020:	add	ip, ip, #28672	; 0x7000
   10024:	ldr	pc, [ip, #348]!	; 0x15c

00010028 <myhtml_queue_add@plt>:
   10028:	add	ip, pc, #1048576	; 0x100000
   1002c:	add	ip, ip, #28672	; 0x7000
   10030:	ldr	pc, [ip, #340]!	; 0x154

00010034 <pthread_mutex_trylock@plt>:
   10034:	add	ip, pc, #1048576	; 0x100000
   10038:	add	ip, ip, #28672	; 0x7000
   1003c:	ldr	pc, [ip, #332]!	; 0x14c

00010040 <myhtml_tree_is_mathml_integration_point@plt>:
   10040:	add	ip, pc, #1048576	; 0x100000
   10044:	add	ip, ip, #28672	; 0x7000
   10048:	ldr	pc, [ip, #324]!	; 0x144

0001004c <mcobject_async_free@plt>:
   1004c:	add	ip, pc, #1048576	; 0x100000
   10050:	add	ip, ip, #28672	; 0x7000
   10054:	ldr	pc, [ip, #316]!	; 0x13c

00010058 <myhtml_insertion_mode_in_head@plt>:
   10058:	add	ip, pc, #1048576	; 0x100000
   1005c:	add	ip, ip, #28672	; 0x7000
   10060:	ldr	pc, [ip, #308]!	; 0x134

00010064 <ftell@plt>:
   10064:	add	ip, pc, #1048576	; 0x100000
   10068:	add	ip, ip, #28672	; 0x7000
   1006c:	ldr	pc, [ip, #300]!	; 0x12c

00010070 <memcmp@plt>:
   10070:	add	ip, pc, #1048576	; 0x100000
   10074:	add	ip, ip, #28672	; 0x7000
   10078:	ldr	pc, [ip, #292]!	; 0x124

0001007c <mycore_utils_mhash_hash@plt>:
   1007c:	add	ip, pc, #1048576	; 0x100000
   10080:	add	ip, ip, #28672	; 0x7000
   10084:	ldr	pc, [ip, #284]!	; 0x11c

00010088 <myencoding_prescan_stream_to_determine_encoding_skip_name@plt>:
   10088:	add	ip, pc, #1048576	; 0x100000
   1008c:	add	ip, ip, #28672	; 0x7000
   10090:	ldr	pc, [ip, #276]!	; 0x114

00010094 <mycore_incoming_buffer_add@plt>:
   10094:	add	ip, pc, #1048576	; 0x100000
   10098:	add	ip, ip, #28672	; 0x7000
   1009c:	ldr	pc, [ip, #268]!	; 0x10c

000100a0 <mythread_nanosleep_sleep@plt>:
   100a0:	add	ip, pc, #1048576	; 0x100000
   100a4:	add	ip, ip, #28672	; 0x7000
   100a8:	ldr	pc, [ip, #260]!	; 0x104

000100ac <mctree_insert_before@plt>:
   100ac:	add	ip, pc, #1048576	; 0x100000
   100b0:	add	ip, ip, #28672	; 0x7000
   100b4:	ldr	pc, [ip, #252]!	; 0xfc

000100b8 <mctree_destroy@plt>:
   100b8:	add	ip, pc, #1048576	; 0x100000
   100bc:	add	ip, ip, #28672	; 0x7000
   100c0:	ldr	pc, [ip, #244]!	; 0xf4

000100c4 <myhtml_tokenizer_chunk@plt>:
   100c4:	add	ip, pc, #1048576	; 0x100000
   100c8:	add	ip, ip, #28672	; 0x7000
   100cc:	ldr	pc, [ip, #236]!	; 0xec

000100d0 <myhtml_tree_active_formatting_append@plt>:
   100d0:	add	ip, pc, #1048576	; 0x100000
   100d4:	add	ip, ip, #28672	; 0x7000
   100d8:	ldr	pc, [ip, #228]!	; 0xe4

000100dc <myhtml_tree_active_formatting_destroy@plt>:
   100dc:	add	ip, pc, #1048576	; 0x100000
   100e0:	add	ip, ip, #28672	; 0x7000
   100e4:	ldr	pc, [ip, #220]!	; 0xdc

000100e8 <mythread_suspend@plt>:
   100e8:	add	ip, pc, #1048576	; 0x100000
   100ec:	add	ip, ip, #28672	; 0x7000
   100f0:	ldr	pc, [ip, #212]!	; 0xd4

000100f4 <myhtml_tokenizer_state_destroy@plt>:
   100f4:	add	ip, pc, #1048576	; 0x100000
   100f8:	add	ip, ip, #28672	; 0x7000
   100fc:	ldr	pc, [ip, #204]!	; 0xcc

00010100 <mycore_incoming_buffer_find_by_position@plt>:
   10100:	add	ip, pc, #1048576	; 0x100000
   10104:	add	ip, ip, #28672	; 0x7000
   10108:	ldr	pc, [ip, #196]!	; 0xc4

0001010c <mcobject_async_chunk_malloc@plt>:
   1010c:	add	ip, pc, #1048576	; 0x100000
   10110:	add	ip, ip, #28672	; 0x7000
   10114:	ldr	pc, [ip, #188]!	; 0xbc

00010118 <myhtml_insertion_fix_emit_for_text_begin_ws@plt>:
   10118:	add	ip, pc, #1048576	; 0x100000
   1011c:	add	ip, ip, #28672	; 0x7000
   10120:	ldr	pc, [ip, #180]!	; 0xb4

00010124 <myhtml_tree_active_formatting_find@plt>:
   10124:	add	ip, pc, #1048576	; 0x100000
   10128:	add	ip, ip, #28672	; 0x7000
   1012c:	ldr	pc, [ip, #172]!	; 0xac

00010130 <mythread_queue_list_destroy@plt>:
   10130:	add	ip, pc, #1048576	; 0x100000
   10134:	add	ip, ip, #28672	; 0x7000
   10138:	ldr	pc, [ip, #164]!	; 0xa4

0001013c <myhtml_tree_open_elements_pop_until_by_node@plt>:
   1013c:	add	ip, pc, #1048576	; 0x100000
   10140:	add	ip, ip, #28672	; 0x7000
   10144:	ldr	pc, [ip, #156]!	; 0x9c

00010148 <myhtml_stream_buffer_entry_destroy@plt>:
   10148:	add	ip, pc, #1048576	; 0x100000
   1014c:	add	ip, ip, #28672	; 0x7000
   10150:	ldr	pc, [ip, #148]!	; 0x94

00010154 <myhtml_tokenizer_begin@plt>:
   10154:	add	ip, pc, #1048576	; 0x100000
   10158:	add	ip, ip, #28672	; 0x7000
   1015c:	ldr	pc, [ip, #140]!	; 0x8c

00010160 <mchar_async_create@plt>:
   10160:	add	ip, pc, #1048576	; 0x100000
   10164:	add	ip, ip, #28672	; 0x7000
   10168:	ldr	pc, [ip, #132]!	; 0x84

0001016c <mycore_string_copy@plt>:
   1016c:	add	ip, pc, #1048576	; 0x100000
   10170:	add	ip, ip, #28672	; 0x7000
   10174:	ldr	pc, [ip, #124]!	; 0x7c

00010178 <myhtml_insertion_mode_in_table@plt>:
   10178:	add	ip, pc, #1048576	; 0x100000
   1017c:	add	ip, ip, #28672	; 0x7000
   10180:	ldr	pc, [ip, #116]!	; 0x74

00010184 <mythread_queue_list_entry_push@plt>:
   10184:	add	ip, pc, #1048576	; 0x100000
   10188:	add	ip, ip, #28672	; 0x7000
   1018c:	ldr	pc, [ip, #108]!	; 0x6c

00010190 <mythread_queue_get_current_node@plt>:
   10190:	add	ip, pc, #1048576	; 0x100000
   10194:	add	ip, ip, #28672	; 0x7000
   10198:	ldr	pc, [ip, #100]!	; 0x64

0001019c <mcobject_async_chunk_up@plt>:
   1019c:	add	ip, pc, #1048576	; 0x100000
   101a0:	add	ip, ip, #28672	; 0x7000
   101a4:	ldr	pc, [ip, #92]!	; 0x5c

000101a8 <myhtml_tree_open_elements_pop@plt>:
   101a8:	add	ip, pc, #1048576	; 0x100000
   101ac:	add	ip, ip, #28672	; 0x7000
   101b0:	ldr	pc, [ip, #84]!	; 0x54

000101b4 <mcsync_destroy@plt>:
   101b4:	add	ip, pc, #1048576	; 0x100000
   101b8:	add	ip, ip, #28672	; 0x7000
   101bc:	ldr	pc, [ip, #76]!	; 0x4c

000101c0 <myencoding_result_clean@plt>:
   101c0:	add	ip, pc, #1048576	; 0x100000
   101c4:	add	ip, ip, #28672	; 0x7000
   101c8:	ldr	pc, [ip, #68]!	; 0x44

000101cc <myhtml_string_append_with_preprocessing@plt>:
   101cc:	add	ip, pc, #1048576	; 0x100000
   101d0:	add	ip, ip, #28672	; 0x7000
   101d4:	ldr	pc, [ip, #60]!	; 0x3c

000101d8 <myhtml_token_adjust_svg_attributes@plt>:
   101d8:	add	ip, pc, #1048576	; 0x100000
   101dc:	add	ip, ip, #28672	; 0x7000
   101e0:	ldr	pc, [ip, #52]!	; 0x34

000101e4 <realloc@plt>:
   101e4:	add	ip, pc, #1048576	; 0x100000
   101e8:	add	ip, ip, #28672	; 0x7000
   101ec:	ldr	pc, [ip, #44]!	; 0x2c

000101f0 <mycore_incoming_buffer_convert_one_escaped_to_code_point@plt>:
   101f0:	add	ip, pc, #1048576	; 0x100000
   101f4:	add	ip, ip, #28672	; 0x7000
   101f8:	ldr	pc, [ip, #36]!	; 0x24

000101fc <myhtml_tree_is_html_integration_point@plt>:
   101fc:	add	ip, pc, #1048576	; 0x100000
   10200:	add	ip, ip, #28672	; 0x7000
   10204:	ldr	pc, [ip, #28]!

00010208 <myhtml_namespace_name_entry_by_name@plt>:
   10208:	add	ip, pc, #1048576	; 0x100000
   1020c:	add	ip, ip, #28672	; 0x7000
   10210:	ldr	pc, [ip, #20]!

00010214 <myencoding_detect_bom@plt>:
   10214:	add	ip, pc, #1048576	; 0x100000
   10218:	add	ip, ip, #28672	; 0x7000
   1021c:	ldr	pc, [ip, #12]!

00010220 <myhtml_tree_list_append@plt>:
   10220:	add	ip, pc, #1048576	; 0x100000
   10224:	add	ip, ip, #28672	; 0x7000
   10228:	ldr	pc, [ip, #4]!

0001022c <myhtml_tokenizer_calc_current_namespace@plt>:
   1022c:	add	ip, pc, #1048576	; 0x100000
   10230:	add	ip, ip, #24576	; 0x6000
   10234:	ldr	pc, [ip, #4092]!	; 0xffc

00010238 <myhtml_tree_open_elements_remove@plt>:
   10238:	add	ip, pc, #1048576	; 0x100000
   1023c:	add	ip, ip, #24576	; 0x6000
   10240:	ldr	pc, [ip, #4084]!	; 0xff4

00010244 <mctree_insert_child@plt>:
   10244:	add	ip, pc, #1048576	; 0x100000
   10248:	add	ip, ip, #24576	; 0x6000
   1024c:	ldr	pc, [ip, #4076]!	; 0xfec

00010250 <mcsimple_clean@plt>:
   10250:	add	ip, pc, #1048576	; 0x100000
   10254:	add	ip, ip, #24576	; 0x6000
   10258:	ldr	pc, [ip, #4068]!	; 0xfe4

0001025c <myhtml_tree_node_insert_comment@plt>:
   1025c:	add	ip, pc, #1048576	; 0x100000
   10260:	add	ip, ip, #24576	; 0x6000
   10264:	ldr	pc, [ip, #4060]!	; 0xfdc

00010268 <myhtml_tokenizer_end@plt>:
   10268:	add	ip, pc, #1048576	; 0x100000
   1026c:	add	ip, ip, #24576	; 0x6000
   10270:	ldr	pc, [ip, #4052]!	; 0xfd4

00010274 <mycore_utils_avl_tree_list_all_nodes@plt>:
   10274:	add	ip, pc, #1048576	; 0x100000
   10278:	add	ip, ip, #24576	; 0x6000
   1027c:	ldr	pc, [ip, #4044]!	; 0xfcc

00010280 <myhtml_tree_temp_tag_name_clean@plt>:
   10280:	add	ip, pc, #1048576	; 0x100000
   10284:	add	ip, ip, #24576	; 0x6000
   10288:	ldr	pc, [ip, #4036]!	; 0xfc4

0001028c <myhtml_tree_list_clean@plt>:
   1028c:	add	ip, pc, #1048576	; 0x100000
   10290:	add	ip, ip, #24576	; 0x6000
   10294:	ldr	pc, [ip, #4028]!	; 0xfbc

00010298 <mchar_async_node_add@plt>:
   10298:	add	ip, pc, #1048576	; 0x100000
   1029c:	add	ip, ip, #24576	; 0x6000
   102a0:	ldr	pc, [ip, #4020]!	; 0xfb4

000102a4 <mycore_strncasecmp@plt>:
   102a4:	add	ip, pc, #1048576	; 0x100000
   102a8:	add	ip, ip, #24576	; 0x6000
   102ac:	ldr	pc, [ip, #4012]!	; 0xfac

000102b0 <myhtml_tokenizer_post@plt>:
   102b0:	add	ip, pc, #1048576	; 0x100000
   102b4:	add	ip, ip, #24576	; 0x6000
   102b8:	ldr	pc, [ip, #4004]!	; 0xfa4

000102bc <myhtml_tree_list_insert_by_index@plt>:
   102bc:	add	ip, pc, #1048576	; 0x100000
   102c0:	add	ip, ip, #24576	; 0x6000
   102c4:	ldr	pc, [ip, #3996]!	; 0xf9c

000102c8 <mcsimple_create@plt>:
   102c8:	add	ip, pc, #1048576	; 0x100000
   102cc:	add	ip, ip, #24576	; 0x6000
   102d0:	ldr	pc, [ip, #3988]!	; 0xf94

000102d4 <mythread_queue_destroy@plt>:
   102d4:	add	ip, pc, #1048576	; 0x100000
   102d8:	add	ip, ip, #24576	; 0x6000
   102dc:	ldr	pc, [ip, #3980]!	; 0xf8c

000102e0 <mycore_string_raw_copy@plt>:
   102e0:	add	ip, pc, #1048576	; 0x100000
   102e4:	add	ip, ip, #24576	; 0x6000
   102e8:	ldr	pc, [ip, #3972]!	; 0xf84

000102ec <mycore_string_stay_only_whitespace@plt>:
   102ec:	add	ip, pc, #1048576	; 0x100000
   102f0:	add	ip, ip, #24576	; 0x6000
   102f4:	ldr	pc, [ip, #3964]!	; 0xf7c

000102f8 <mctree_clean@plt>:
   102f8:	add	ip, pc, #1048576	; 0x100000
   102fc:	add	ip, ip, #24576	; 0x6000
   10300:	ldr	pc, [ip, #3956]!	; 0xf74

00010304 <myhtml_collection_create@plt>:
   10304:	add	ip, pc, #1048576	; 0x100000
   10308:	add	ip, ip, #24576	; 0x6000
   1030c:	ldr	pc, [ip, #3948]!	; 0xf6c

00010310 <myhtml_rules_stop_parsing@plt>:
   10310:	add	ip, pc, #1048576	; 0x100000
   10314:	add	ip, ip, #24576	; 0x6000
   10318:	ldr	pc, [ip, #3940]!	; 0xf64

0001031c <myhtml_get_nodes_by_tag_id@plt>:
   1031c:	add	ip, pc, #1048576	; 0x100000
   10320:	add	ip, ip, #24576	; 0x6000
   10324:	ldr	pc, [ip, #3932]!	; 0xf5c

00010328 <myhtml_serialization_tree_buffer@plt>:
   10328:	add	ip, pc, #1048576	; 0x100000
   1032c:	add	ip, ip, #24576	; 0x6000
   10330:	ldr	pc, [ip, #3924]!	; 0xf54

00010334 <myhtml_token_set_replacement_character_for_null_token@plt>:
   10334:	add	ip, pc, #1048576	; 0x100000
   10338:	add	ip, ip, #24576	; 0x6000
   1033c:	ldr	pc, [ip, #3916]!	; 0xf4c

00010340 <fwrite@plt>:
   10340:	add	ip, pc, #1048576	; 0x100000
   10344:	add	ip, ip, #24576	; 0x6000
   10348:	ldr	pc, [ip, #3908]!	; 0xf44

0001034c <myencoding_prescan_stream_to_determine_encoding_skip_other@plt>:
   1034c:	add	ip, pc, #1048576	; 0x100000
   10350:	add	ip, ip, #24576	; 0x6000
   10354:	ldr	pc, [ip, #3900]!	; 0xf3c

00010358 <myhtml_tree_node_insert_by_mode@plt>:
   10358:	add	ip, pc, #1048576	; 0x100000
   1035c:	add	ip, ip, #24576	; 0x6000
   10360:	ldr	pc, [ip, #3892]!	; 0xf34

00010364 <myhtml_tree_node_insert_after@plt>:
   10364:	add	ip, pc, #1048576	; 0x100000
   10368:	add	ip, ip, #24576	; 0x6000
   1036c:	ldr	pc, [ip, #3884]!	; 0xf2c

00010370 <myhtml_data_process_state_end@plt>:
   10370:	add	ip, pc, #1048576	; 0x100000
   10374:	add	ip, ip, #24576	; 0x6000
   10378:	ldr	pc, [ip, #3876]!	; 0xf24

0001037c <myhtml_serialization_reallocate@plt>:
   1037c:	add	ip, pc, #1048576	; 0x100000
   10380:	add	ip, ip, #24576	; 0x6000
   10384:	ldr	pc, [ip, #3868]!	; 0xf1c

00010388 <mycore_string_append_with_replacement_null_characters@plt>:
   10388:	add	ip, pc, #1048576	; 0x100000
   1038c:	add	ip, ip, #24576	; 0x6000
   10390:	ldr	pc, [ip, #3860]!	; 0xf14

00010394 <myhtml_tree_clear_stack_back_table_body_context@plt>:
   10394:	add	ip, pc, #1048576	; 0x100000
   10398:	add	ip, ip, #24576	; 0x6000
   1039c:	ldr	pc, [ip, #3852]!	; 0xf0c

000103a0 <mcsimple_destroy@plt>:
   103a0:	add	ip, pc, #1048576	; 0x100000
   103a4:	add	ip, ip, #24576	; 0x6000
   103a8:	ldr	pc, [ip, #3844]!	; 0xf04

000103ac <myhtml_token_doctype_check_html_4_01@plt>:
   103ac:	add	ip, pc, #1048576	; 0x100000
   103b0:	add	ip, ip, #24576	; 0x6000
   103b4:	ldr	pc, [ip, #3836]!	; 0xefc

000103b8 <__mtree_insert_to_start@plt>:
   103b8:	add	ip, pc, #1048576	; 0x100000
   103bc:	add	ip, ip, #24576	; 0x6000
   103c0:	ldr	pc, [ip, #3828]!	; 0xef4

000103c4 <myhtml_insertion_mode_in_select@plt>:
   103c4:	add	ip, pc, #1048576	; 0x100000
   103c8:	add	ip, ip, #24576	; 0x6000
   103cc:	ldr	pc, [ip, #3820]!	; 0xeec

000103d0 <fread@plt>:
   103d0:	add	ip, pc, #1048576	; 0x100000
   103d4:	add	ip, ip, #24576	; 0x6000
   103d8:	ldr	pc, [ip, #3812]!	; 0xee4

000103dc <pthread_create@plt>:
   103dc:	add	ip, pc, #1048576	; 0x100000
   103e0:	add	ip, ip, #24576	; 0x6000
   103e4:	ldr	pc, [ip, #3804]!	; 0xedc

000103e8 <myencoding_prescan_stream_to_determine_encoding_check_meta@plt>:
   103e8:	add	ip, pc, #1048576	; 0x100000
   103ec:	add	ip, ip, #24576	; 0x6000
   103f0:	ldr	pc, [ip, #3796]!	; 0xed4

000103f4 <myhtml_tree_node_insert_before@plt>:
   103f4:	add	ip, pc, #1048576	; 0x100000
   103f8:	add	ip, ip, #24576	; 0x6000
   103fc:	ldr	pc, [ip, #3788]!	; 0xecc

00010400 <myhtml_parser_token_data_to_string_charef@plt>:
   10400:	add	ip, pc, #1048576	; 0x100000
   10404:	add	ip, ip, #24576	; 0x6000
   10408:	ldr	pc, [ip, #3780]!	; 0xec4

0001040c <mythread_thread_attr_clean@plt>:
   1040c:	add	ip, pc, #1048576	; 0x100000
   10410:	add	ip, ip, #24576	; 0x6000
   10414:	ldr	pc, [ip, #3772]!	; 0xebc

00010418 <myhtml_tree_clear_stack_back_table_row_context@plt>:
   10418:	add	ip, pc, #1048576	; 0x100000
   1041c:	add	ip, ip, #24576	; 0x6000
   10420:	ldr	pc, [ip, #3764]!	; 0xeb4

00010424 <myhtml_tree_template_insertion_clean@plt>:
   10424:	add	ip, pc, #1048576	; 0x100000
   10428:	add	ip, ip, #24576	; 0x6000
   1042c:	ldr	pc, [ip, #3756]!	; 0xeac

00010430 <myhtml_tokenizer_chunk_process@plt>:
   10430:	add	ip, pc, #1048576	; 0x100000
   10434:	add	ip, ip, #24576	; 0x6000
   10438:	ldr	pc, [ip, #3748]!	; 0xea4

0001043c <myhtml_stream_create@plt>:
   1043c:	add	ip, pc, #1048576	; 0x100000
   10440:	add	ip, ip, #24576	; 0x6000
   10444:	ldr	pc, [ip, #3740]!	; 0xe9c

00010448 <myhtml_tree_tags_close_p@plt>:
   10448:	add	ip, pc, #1048576	; 0x100000
   1044c:	add	ip, ip, #24576	; 0x6000
   10450:	ldr	pc, [ip, #3732]!	; 0xe94

00010454 <mcsimple_init@plt>:
   10454:	add	ip, pc, #1048576	; 0x100000
   10458:	add	ip, ip, #24576	; 0x6000
   1045c:	ldr	pc, [ip, #3724]!	; 0xe8c

00010460 <myencoding_string_append@plt>:
   10460:	add	ip, pc, #1048576	; 0x100000
   10464:	add	ip, ip, #24576	; 0x6000
   10468:	ldr	pc, [ip, #3716]!	; 0xe84

0001046c <myhtml_stream_buffer_clean@plt>:
   1046c:	add	ip, pc, #1048576	; 0x100000
   10470:	add	ip, ip, #24576	; 0x6000
   10474:	ldr	pc, [ip, #3708]!	; 0xe7c

00010478 <mycore_utils_avl_tree_rotate_for_delete@plt>:
   10478:	add	ip, pc, #1048576	; 0x100000
   1047c:	add	ip, ip, #24576	; 0x6000
   10480:	ldr	pc, [ip, #3700]!	; 0xe74

00010484 <myhtml_token_merged_two_token_string@plt>:
   10484:	add	ip, pc, #1048576	; 0x100000
   10488:	add	ip, ip, #24576	; 0x6000
   1048c:	ldr	pc, [ip, #3692]!	; 0xe6c

00010490 <myhtml_attribute_value@plt>:
   10490:	add	ip, pc, #1048576	; 0x100000
   10494:	add	ip, ip, #24576	; 0x6000
   10498:	ldr	pc, [ip, #3684]!	; 0xe64

0001049c <myhtml_token_strict_doctype_by_token@plt>:
   1049c:	add	ip, pc, #1048576	; 0x100000
   104a0:	add	ip, ip, #24576	; 0x6000
   104a4:	ldr	pc, [ip, #3676]!	; 0xe5c

000104a8 <mchar_async_init@plt>:
   104a8:	add	ip, pc, #1048576	; 0x100000
   104ac:	add	ip, ip, #24576	; 0x6000
   104b0:	ldr	pc, [ip, #3668]!	; 0xe54

000104b4 <mycore_string_crop_whitespace_from_begin@plt>:
   104b4:	add	ip, pc, #1048576	; 0x100000
   104b8:	add	ip, ip, #24576	; 0x6000
   104bc:	ldr	pc, [ip, #3660]!	; 0xe4c

000104c0 <mythread_resume@plt>:
   104c0:	add	ip, pc, #1048576	; 0x100000
   104c4:	add	ip, ip, #24576	; 0x6000
   104c8:	ldr	pc, [ip, #3652]!	; 0xe44

000104cc <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@plt>:
   104cc:	add	ip, pc, #1048576	; 0x100000
   104d0:	add	ip, ip, #24576	; 0x6000
   104d4:	ldr	pc, [ip, #3644]!	; 0xe3c

000104d8 <myhtml_tokenizer_doctype_public_identifier_dsq@plt>:
   104d8:	add	ip, pc, #1048576	; 0x100000
   104dc:	add	ip, ip, #24576	; 0x6000
   104e0:	ldr	pc, [ip, #3636]!	; 0xe34

000104e4 <myhtml_create_stream_and_batch@plt>:
   104e4:	add	ip, pc, #1048576	; 0x100000
   104e8:	add	ip, ip, #24576	; 0x6000
   104ec:	ldr	pc, [ip, #3628]!	; 0xe2c

000104f0 <myhtml_data_process_entry_clean@plt>:
   104f0:	add	ip, pc, #1048576	; 0x100000
   104f4:	add	ip, ip, #24576	; 0x6000
   104f8:	ldr	pc, [ip, #3620]!	; 0xe24

000104fc <mcsync_spin_init@plt>:
   104fc:	add	ip, pc, #1048576	; 0x100000
   10500:	add	ip, ip, #24576	; 0x6000
   10504:	ldr	pc, [ip, #3612]!	; 0xe1c

00010508 <malloc@plt>:
   10508:	add	ip, pc, #1048576	; 0x100000
   1050c:	add	ip, ip, #24576	; 0x6000
   10510:	ldr	pc, [ip, #3604]!	; 0xe14

00010514 <mythread_check_status@plt>:
   10514:	add	ip, pc, #1048576	; 0x100000
   10518:	add	ip, ip, #24576	; 0x6000
   1051c:	ldr	pc, [ip, #3596]!	; 0xe0c

00010520 <myhtml_token_doctype_check_html_4_0@plt>:
   10520:	add	ip, pc, #1048576	; 0x100000
   10524:	add	ip, ip, #24576	; 0x6000
   10528:	ldr	pc, [ip, #3588]!	; 0xe04

0001052c <mycore_strcasecmp@plt>:
   1052c:	add	ip, pc, #1048576	; 0x100000
   10530:	add	ip, ip, #24576	; 0x6000
   10534:	ldr	pc, [ip, #3580]!	; 0xdfc

00010538 <mythread_queue_node_malloc_round@plt>:
   10538:	add	ip, pc, #1048576	; 0x100000
   1053c:	add	ip, ip, #24576	; 0x6000
   10540:	ldr	pc, [ip, #3572]!	; 0xdf4

00010544 <myhtml_tree_active_formatting_reconstruction@plt>:
   10544:	add	ip, pc, #1048576	; 0x100000
   10548:	add	ip, ip, #24576	; 0x6000
   1054c:	ldr	pc, [ip, #3564]!	; 0xdec

00010550 <myhtml_token_set_done@plt>:
   10550:	add	ip, pc, #1048576	; 0x100000
   10554:	add	ip, ip, #24576	; 0x6000
   10558:	ldr	pc, [ip, #3556]!	; 0xde4

0001055c <mcsync_spin_create@plt>:
   1055c:	add	ip, pc, #1048576	; 0x100000
   10560:	add	ip, ip, #24576	; 0x6000
   10564:	ldr	pc, [ip, #3548]!	; 0xddc

00010568 <mythread_thread_join@plt>:
   10568:	add	ip, pc, #1048576	; 0x100000
   1056c:	add	ip, ip, #24576	; 0x6000
   10570:	ldr	pc, [ip, #3540]!	; 0xdd4

00010574 <myhtml_token_attr_remove@plt>:
   10574:	add	ip, pc, #1048576	; 0x100000
   10578:	add	ip, ip, #24576	; 0x6000
   1057c:	ldr	pc, [ip, #3532]!	; 0xdcc

00010580 <myhtml_token_node_attr_copy@plt>:
   10580:	add	ip, pc, #1048576	; 0x100000
   10584:	add	ip, ip, #24576	; 0x6000
   10588:	ldr	pc, [ip, #3524]!	; 0xdc4

0001058c <mythread_quit@plt>:
   1058c:	add	ip, pc, #1048576	; 0x100000
   10590:	add	ip, ip, #24576	; 0x6000
   10594:	ldr	pc, [ip, #3516]!	; 0xdbc

00010598 <myhtml_batch_create@plt>:
   10598:	add	ip, pc, #1048576	; 0x100000
   1059c:	add	ip, ip, #24576	; 0x6000
   105a0:	ldr	pc, [ip, #3508]!	; 0xdb4

000105a4 <myhtml_parse_chunk_fragment@plt>:
   105a4:	add	ip, pc, #1048576	; 0x100000
   105a8:	add	ip, ip, #24576	; 0x6000
   105ac:	ldr	pc, [ip, #3500]!	; 0xdac

000105b0 <mcsync_spin_lock@plt>:
   105b0:	add	ip, pc, #1048576	; 0x100000
   105b4:	add	ip, ip, #24576	; 0x6000
   105b8:	ldr	pc, [ip, #3492]!	; 0xda4

000105bc <myhtml_token_clean@plt>:
   105bc:	add	ip, pc, #1048576	; 0x100000
   105c0:	add	ip, ip, #24576	; 0x6000
   105c4:	ldr	pc, [ip, #3484]!	; 0xd9c

000105c8 <mythread_queue_list_get_count@plt>:
   105c8:	add	ip, pc, #1048576	; 0x100000
   105cc:	add	ip, ip, #24576	; 0x6000
   105d0:	ldr	pc, [ip, #3476]!	; 0xd94

000105d4 <mythread_queue_list_see_for_done_by_thread@plt>:
   105d4:	add	ip, pc, #1048576	; 0x100000
   105d8:	add	ip, ip, #24576	; 0x6000
   105dc:	ldr	pc, [ip, #3468]!	; 0xd8c

000105e0 <__gmon_start__@plt>:
   105e0:	add	ip, pc, #1048576	; 0x100000
   105e4:	add	ip, ip, #24576	; 0x6000
   105e8:	ldr	pc, [ip, #3460]!	; 0xd84

000105ec <myhtml_tokenizer_pause@plt>:
   105ec:	add	ip, pc, #1048576	; 0x100000
   105f0:	add	ip, ip, #24576	; 0x6000
   105f4:	ldr	pc, [ip, #3452]!	; 0xd7c

000105f8 <myhtml_tokenizer_set_first_settings@plt>:
   105f8:	add	ip, pc, #1048576	; 0x100000
   105fc:	add	ip, ip, #24576	; 0x6000
   10600:	ldr	pc, [ip, #3444]!	; 0xd74

00010604 <myhtml_tree_temp_tag_name_init@plt>:
   10604:	add	ip, pc, #1048576	; 0x100000
   10608:	add	ip, ip, #24576	; 0x6000
   1060c:	ldr	pc, [ip, #3436]!	; 0xd6c

00010610 <mycore_string_init@plt>:
   10610:	add	ip, pc, #1048576	; 0x100000
   10614:	add	ip, ip, #24576	; 0x6000
   10618:	ldr	pc, [ip, #3428]!	; 0xd64

0001061c <myhtml_tree_node_find_parent_by_tag_id@plt>:
   1061c:	add	ip, pc, #1048576	; 0x100000
   10620:	add	ip, ip, #24576	; 0x6000
   10624:	ldr	pc, [ip, #3420]!	; 0xd5c

00010628 <myhtml_tree_current_node@plt>:
   10628:	add	ip, pc, #1048576	; 0x100000
   1062c:	add	ip, ip, #24576	; 0x6000
   10630:	ldr	pc, [ip, #3412]!	; 0xd54

00010634 <mythread_mutex_close@plt>:
   10634:	add	ip, pc, #1048576	; 0x100000
   10638:	add	ip, ip, #24576	; 0x6000
   1063c:	ldr	pc, [ip, #3404]!	; 0xd4c

00010640 <myhtml_insertion_mode_in_body@plt>:
   10640:	add	ip, pc, #1048576	; 0x100000
   10644:	add	ip, ip, #24576	; 0x6000
   10648:	ldr	pc, [ip, #3396]!	; 0xd44

0001064c <myhtml_tree_active_formatting_between_last_marker@plt>:
   1064c:	add	ip, pc, #1048576	; 0x100000
   10650:	add	ip, ip, #24576	; 0x6000
   10654:	ldr	pc, [ip, #3388]!	; 0xd3c

00010658 <mctree_create@plt>:
   10658:	add	ip, pc, #1048576	; 0x100000
   1065c:	add	ip, ip, #24576	; 0x6000
   10660:	ldr	pc, [ip, #3380]!	; 0xd34

00010664 <myhtml_token_doctype_check_xhtml_1_0@plt>:
   10664:	add	ip, pc, #1048576	; 0x100000
   10668:	add	ip, ip, #24576	; 0x6000
   1066c:	ldr	pc, [ip, #3372]!	; 0xd2c

00010670 <strlen@plt>:
   10670:	add	ip, pc, #1048576	; 0x100000
   10674:	add	ip, ip, #24576	; 0x6000
   10678:	ldr	pc, [ip, #3364]!	; 0xd24

0001067c <myhtml_token_node_wait_for_done@plt>:
   1067c:	add	ip, pc, #1048576	; 0x100000
   10680:	add	ip, ip, #24576	; 0x6000
   10684:	ldr	pc, [ip, #3356]!	; 0xd1c

00010688 <mycore_string_append_lowercase@plt>:
   10688:	add	ip, pc, #1048576	; 0x100000
   1068c:	add	ip, ip, #24576	; 0x6000
   10690:	ldr	pc, [ip, #3348]!	; 0xd14

00010694 <myhtml_token_node_attr_copy_with_check@plt>:
   10694:	add	ip, pc, #1048576	; 0x100000
   10698:	add	ip, ip, #24576	; 0x6000
   1069c:	ldr	pc, [ip, #3340]!	; 0xd0c

000106a0 <myhtml_encoding_set@plt>:
   106a0:	add	ip, pc, #1048576	; 0x100000
   106a4:	add	ip, ip, #24576	; 0x6000
   106a8:	ldr	pc, [ip, #3332]!	; 0xd04

000106ac <mythread_queue_init@plt>:
   106ac:	add	ip, pc, #1048576	; 0x100000
   106b0:	add	ip, ip, #24576	; 0x6000
   106b4:	ldr	pc, [ip, #3324]!	; 0xcfc

000106b8 <myhtml_tree_node_add_child@plt>:
   106b8:	add	ip, pc, #1048576	; 0x100000
   106bc:	add	ip, ip, #24576	; 0x6000
   106c0:	ldr	pc, [ip, #3316]!	; 0xcf4

000106c4 <mycore_utils_avl_tree_node_set_height@plt>:
   106c4:	add	ip, pc, #1048576	; 0x100000
   106c8:	add	ip, ip, #24576	; 0x6000
   106cc:	ldr	pc, [ip, #3308]!	; 0xcec

000106d0 <myhtml_tree_clean@plt>:
   106d0:	add	ip, pc, #1048576	; 0x100000
   106d4:	add	ip, ip, #24576	; 0x6000
   106d8:	ldr	pc, [ip, #3300]!	; 0xce4

000106dc <myhtml_tree_generate_implied_end_tags@plt>:
   106dc:	add	ip, pc, #1048576	; 0x100000
   106e0:	add	ip, ip, #24576	; 0x6000
   106e4:	ldr	pc, [ip, #3292]!	; 0xcdc

000106e8 <mchar_async_node_clean@plt>:
   106e8:	add	ip, pc, #1048576	; 0x100000
   106ec:	add	ip, ip, #24576	; 0x6000
   106f0:	ldr	pc, [ip, #3284]!	; 0xcd4

000106f4 <myhtml_tree_list_destroy@plt>:
   106f4:	add	ip, pc, #1048576	; 0x100000
   106f8:	add	ip, ip, #24576	; 0x6000
   106fc:	ldr	pc, [ip, #3276]!	; 0xccc

00010700 <myhtml_serialization_node_callback@plt>:
   10700:	add	ip, pc, #1048576	; 0x100000
   10704:	add	ip, ip, #24576	; 0x6000
   10708:	ldr	pc, [ip, #3268]!	; 0xcc4

0001070c <myencoding_detect_by_trigram@plt>:
   1070c:	add	ip, pc, #1048576	; 0x100000
   10710:	add	ip, ip, #24576	; 0x6000
   10714:	ldr	pc, [ip, #3260]!	; 0xcbc

00010718 <mchar_async_free@plt>:
   10718:	add	ip, pc, #1048576	; 0x100000
   1071c:	add	ip, ip, #24576	; 0x6000
   10720:	ldr	pc, [ip, #3252]!	; 0xcb4

00010724 <mchar_async_cache_clean@plt>:
   10724:	add	ip, pc, #1048576	; 0x100000
   10728:	add	ip, ip, #24576	; 0x6000
   1072c:	ldr	pc, [ip, #3244]!	; 0xcac

00010730 <myhtml_tree_reset_insertion_mode_appropriately@plt>:
   10730:	add	ip, pc, #1048576	; 0x100000
   10734:	add	ip, ip, #24576	; 0x6000
   10738:	ldr	pc, [ip, #3236]!	; 0xca4

0001073c <mcsimple_malloc@plt>:
   1073c:	add	ip, pc, #1048576	; 0x100000
   10740:	add	ip, ip, #24576	; 0x6000
   10744:	ldr	pc, [ip, #3228]!	; 0xc9c

00010748 <mctree_search_lowercase@plt>:
   10748:	add	ip, pc, #1048576	; 0x100000
   1074c:	add	ip, ip, #24576	; 0x6000
   10750:	ldr	pc, [ip, #3220]!	; 0xc94

00010754 <myhtml_data_process@plt>:
   10754:	add	ip, pc, #1048576	; 0x100000
   10758:	add	ip, ip, #24576	; 0x6000
   1075c:	ldr	pc, [ip, #3212]!	; 0xc8c

00010760 <myhtml_token_attr_copy@plt>:
   10760:	add	ip, pc, #1048576	; 0x100000
   10764:	add	ip, ip, #24576	; 0x6000
   10768:	ldr	pc, [ip, #3204]!	; 0xc84

0001076c <myhtml_tree_node_insert_by_node@plt>:
   1076c:	add	ip, pc, #1048576	; 0x100000
   10770:	add	ip, ip, #24576	; 0x6000
   10774:	ldr	pc, [ip, #3196]!	; 0xc7c

00010778 <mcobject_init@plt>:
   10778:	add	ip, pc, #1048576	; 0x100000
   1077c:	add	ip, ip, #24576	; 0x6000
   10780:	ldr	pc, [ip, #3188]!	; 0xc74

00010784 <myhtml_token_destroy@plt>:
   10784:	add	ip, pc, #1048576	; 0x100000
   10788:	add	ip, ip, #24576	; 0x6000
   1078c:	ldr	pc, [ip, #3180]!	; 0xc6c

00010790 <myhtml_destroy_marker@plt>:
   10790:	add	ip, pc, #1048576	; 0x100000
   10794:	add	ip, ip, #24576	; 0x6000
   10798:	ldr	pc, [ip, #3172]!	; 0xc64

0001079c <pthread_attr_init@plt>:
   1079c:	add	ip, pc, #1048576	; 0x100000
   107a0:	add	ip, ip, #24576	; 0x6000
   107a4:	ldr	pc, [ip, #3164]!	; 0xc5c

000107a8 <myhtml_attribute_free@plt>:
   107a8:	add	ip, pc, #1048576	; 0x100000
   107ac:	add	ip, ip, #24576	; 0x6000
   107b0:	ldr	pc, [ip, #3156]!	; 0xc54

000107b4 <myhtml_serialization_node_buffer@plt>:
   107b4:	add	ip, pc, #1048576	; 0x100000
   107b8:	add	ip, ip, #24576	; 0x6000
   107bc:	ldr	pc, [ip, #3148]!	; 0xc4c

000107c0 <myhtml_charef_find_by_pos@plt>:
   107c0:	add	ip, pc, #1048576	; 0x100000
   107c4:	add	ip, ip, #24576	; 0x6000
   107c8:	ldr	pc, [ip, #3140]!	; 0xc44

000107cc <myhtml_insertion_fix_for_null_char_drop_all@plt>:
   107cc:	add	ip, pc, #1048576	; 0x100000
   107d0:	add	ip, ip, #24576	; 0x6000
   107d4:	ldr	pc, [ip, #3132]!	; 0xc3c

000107d8 <mythread_queue_list_create@plt>:
   107d8:	add	ip, pc, #1048576	; 0x100000
   107dc:	add	ip, ip, #24576	; 0x6000
   107e0:	ldr	pc, [ip, #3124]!	; 0xc34

000107e4 <myhtml_token_attr_delete_all@plt>:
   107e4:	add	ip, pc, #1048576	; 0x100000
   107e8:	add	ip, ip, #24576	; 0x6000
   107ec:	ldr	pc, [ip, #3116]!	; 0xc2c

000107f0 <myhtml_token_node_attr_append_with_convert_encoding@plt>:
   107f0:	add	ip, pc, #1048576	; 0x100000
   107f4:	add	ip, ip, #24576	; 0x6000
   107f8:	ldr	pc, [ip, #3108]!	; 0xc24

000107fc <myhtml_tree_open_elements_find_by_tag_idx@plt>:
   107fc:	add	ip, pc, #1048576	; 0x100000
   10800:	add	ip, ip, #24576	; 0x6000
   10804:	ldr	pc, [ip, #3100]!	; 0xc1c

00010808 <myhtml_stream_buffer_entry_init@plt>:
   10808:	add	ip, pc, #1048576	; 0x100000
   1080c:	add	ip, ip, #24576	; 0x6000
   10810:	ldr	pc, [ip, #3092]!	; 0xc14

00010814 <myhtml_tree_active_formatting_append_with_check@plt>:
   10814:	add	ip, pc, #1048576	; 0x100000
   10818:	add	ip, ip, #24576	; 0x6000
   1081c:	ldr	pc, [ip, #3084]!	; 0xc0c

00010820 <myhtml_tree_active_formatting_clean@plt>:
   10820:	add	ip, pc, #1048576	; 0x100000
   10824:	add	ip, ip, #24576	; 0x6000
   10828:	ldr	pc, [ip, #3076]!	; 0xc04

0001082c <myencoding_get_function_by_id@plt>:
   1082c:	add	ip, pc, #1048576	; 0x100000
   10830:	add	ip, ip, #24576	; 0x6000
   10834:	ldr	pc, [ip, #3068]!	; 0xbfc

00010838 <myencoding_extracting_character_encoding_from_charset_with_found@plt>:
   10838:	add	ip, pc, #1048576	; 0x100000
   1083c:	add	ip, ip, #24576	; 0x6000
   10840:	ldr	pc, [ip, #3060]!	; 0xbf4

00010844 <myhtml_tree_active_formatting_remove_by_index@plt>:
   10844:	add	ip, pc, #1048576	; 0x100000
   10848:	add	ip, ip, #24576	; 0x6000
   1084c:	ldr	pc, [ip, #3052]!	; 0xbec

00010850 <mcsync_lock@plt>:
   10850:	add	ip, pc, #1048576	; 0x100000
   10854:	add	ip, ip, #24576	; 0x6000
   10858:	ldr	pc, [ip, #3044]!	; 0xbe4

0001085c <myhtml_tree_list_init@plt>:
   1085c:	add	ip, pc, #1048576	; 0x100000
   10860:	add	ip, ip, #24576	; 0x6000
   10864:	ldr	pc, [ip, #3036]!	; 0xbdc

00010868 <mcsync_init@plt>:
   10868:	add	ip, pc, #1048576	; 0x100000
   1086c:	add	ip, ip, #24576	; 0x6000
   10870:	ldr	pc, [ip, #3028]!	; 0xbd4

00010874 <myhtml_tree_active_formatting_is_marker@plt>:
   10874:	add	ip, pc, #1048576	; 0x100000
   10878:	add	ip, ip, #24576	; 0x6000
   1087c:	ldr	pc, [ip, #3020]!	; 0xbcc

00010880 <mcobject_async_node_clean@plt>:
   10880:	add	ip, pc, #1048576	; 0x100000
   10884:	add	ip, ip, #24576	; 0x6000
   10888:	ldr	pc, [ip, #3012]!	; 0xbc4

0001088c <mchar_async_cache_destroy@plt>:
   1088c:	add	ip, pc, #1048576	; 0x100000
   10890:	add	ip, ip, #24576	; 0x6000
   10894:	ldr	pc, [ip, #3004]!	; 0xbbc

00010898 <myhtml_tree_adoption_agency_algorithm@plt>:
   10898:	add	ip, pc, #1048576	; 0x100000
   1089c:	add	ip, ip, #24576	; 0x6000
   108a0:	ldr	pc, [ip, #2996]!	; 0xbb4

000108a4 <myhtml_tree_active_formatting_remove@plt>:
   108a4:	add	ip, pc, #1048576	; 0x100000
   108a8:	add	ip, ip, #24576	; 0x6000
   108ac:	ldr	pc, [ip, #2988]!	; 0xbac

000108b0 <memset@plt>:
   108b0:	add	ip, pc, #1048576	; 0x100000
   108b4:	add	ip, ip, #24576	; 0x6000
   108b8:	ldr	pc, [ip, #2980]!	; 0xba4

000108bc <myhread_entry_create@plt>:
   108bc:	add	ip, pc, #1048576	; 0x100000
   108c0:	add	ip, ip, #24576	; 0x6000
   108c4:	ldr	pc, [ip, #2972]!	; 0xb9c

000108c8 <mcsync_mutex_create@plt>:
   108c8:	add	ip, pc, #1048576	; 0x100000
   108cc:	add	ip, ip, #24576	; 0x6000
   108d0:	ldr	pc, [ip, #2964]!	; 0xb94

000108d4 <mycore_string_append@plt>:
   108d4:	add	ip, pc, #1048576	; 0x100000
   108d8:	add	ip, ip, #24576	; 0x6000
   108dc:	ldr	pc, [ip, #2956]!	; 0xb8c

000108e0 <mcobject_async_chunk_malloc_without_lock@plt>:
   108e0:	add	ip, pc, #1048576	; 0x100000
   108e4:	add	ip, ip, #24576	; 0x6000
   108e8:	ldr	pc, [ip, #2948]!	; 0xb84

000108ec <strncpy@plt>:
   108ec:	add	ip, pc, #1048576	; 0x100000
   108f0:	add	ip, ip, #24576	; 0x6000
   108f4:	ldr	pc, [ip, #2940]!	; 0xb7c

000108f8 <pthread_cancel@plt>:
   108f8:	add	ip, pc, #1048576	; 0x100000
   108fc:	add	ip, ip, #24576	; 0x6000
   10900:	ldr	pc, [ip, #2932]!	; 0xb74

00010904 <myhtml_token_attr_create@plt>:
   10904:	add	ip, pc, #1048576	; 0x100000
   10908:	add	ip, ip, #24576	; 0x6000
   1090c:	ldr	pc, [ip, #2924]!	; 0xb6c

00010910 <mchar_async_malloc@plt>:
   10910:	add	ip, pc, #1048576	; 0x100000
   10914:	add	ip, ip, #24576	; 0x6000
   10918:	ldr	pc, [ip, #2916]!	; 0xb64

0001091c <myhtml_tag_static_search@plt>:
   1091c:	add	ip, pc, #1048576	; 0x100000
   10920:	add	ip, ip, #24576	; 0x6000
   10924:	ldr	pc, [ip, #2908]!	; 0xb5c

00010928 <myhtml_data_process_end@plt>:
   10928:	add	ip, pc, #1048576	; 0x100000
   1092c:	add	ip, ip, #24576	; 0x6000
   10930:	ldr	pc, [ip, #2900]!	; 0xb54

00010934 <myhtml_stream_buffer_add_entry@plt>:
   10934:	add	ip, pc, #1048576	; 0x100000
   10938:	add	ip, ip, #24576	; 0x6000
   1093c:	ldr	pc, [ip, #2892]!	; 0xb4c

00010940 <myhtml_tree_temp_tag_name_destroy@plt>:
   10940:	add	ip, pc, #1048576	; 0x100000
   10944:	add	ip, ip, #24576	; 0x6000
   10948:	ldr	pc, [ip, #2884]!	; 0xb44

0001094c <myhtml_tree_open_elements_pop_until@plt>:
   1094c:	add	ip, pc, #1048576	; 0x100000
   10950:	add	ip, ip, #24576	; 0x6000
   10954:	ldr	pc, [ip, #2876]!	; 0xb3c

00010958 <mctree_insert@plt>:
   10958:	add	ip, pc, #1048576	; 0x100000
   1095c:	add	ip, ip, #24576	; 0x6000
   10960:	ldr	pc, [ip, #2868]!	; 0xb34

00010964 <mycore_string_realloc@plt>:
   10964:	add	ip, pc, #1048576	; 0x100000
   10968:	add	ip, ip, #24576	; 0x6000
   1096c:	ldr	pc, [ip, #2860]!	; 0xb2c

00010970 <myhtml_tree_node_insert@plt>:
   10970:	add	ip, pc, #1048576	; 0x100000
   10974:	add	ip, ip, #24576	; 0x6000
   10978:	ldr	pc, [ip, #2852]!	; 0xb24

0001097c <mythread_queue_list_entry_wait_for_done@plt>:
   1097c:	add	ip, pc, #1048576	; 0x100000
   10980:	add	ip, ip, #24576	; 0x6000
   10984:	ldr	pc, [ip, #2844]!	; 0xb1c

00010988 <myhtml_tree_open_elements_append@plt>:
   10988:	add	ip, pc, #1048576	; 0x100000
   1098c:	add	ip, ip, #24576	; 0x6000
   10990:	ldr	pc, [ip, #2836]!	; 0xb14

00010994 <mcsimple_init_list_entries@plt>:
   10994:	add	ip, pc, #1048576	; 0x100000
   10998:	add	ip, ip, #24576	; 0x6000
   1099c:	ldr	pc, [ip, #2828]!	; 0xb0c

000109a0 <mythread_queue_list_entry_clean@plt>:
   109a0:	add	ip, pc, #1048576	; 0x100000
   109a4:	add	ip, ip, #24576	; 0x6000
   109a8:	ldr	pc, [ip, #2820]!	; 0xb04

000109ac <mythread_destroy@plt>:
   109ac:	add	ip, pc, #1048576	; 0x100000
   109b0:	add	ip, ip, #24576	; 0x6000
   109b4:	ldr	pc, [ip, #2812]!	; 0xafc

000109b8 <myhtml_tree_token_list_init@plt>:
   109b8:	add	ip, pc, #1048576	; 0x100000
   109bc:	add	ip, ip, #24576	; 0x6000
   109c0:	ldr	pc, [ip, #2804]!	; 0xaf4

000109c4 <myhtml_tree_list_append_after_index@plt>:
   109c4:	add	ip, pc, #1048576	; 0x100000
   109c8:	add	ip, ip, #24576	; 0x6000
   109cc:	ldr	pc, [ip, #2796]!	; 0xaec

000109d0 <mchar_async_chunk_malloc@plt>:
   109d0:	add	ip, pc, #1048576	; 0x100000
   109d4:	add	ip, ip, #24576	; 0x6000
   109d8:	ldr	pc, [ip, #2788]!	; 0xae4

000109dc <myhtml_tree_template_insertion_pop@plt>:
   109dc:	add	ip, pc, #1048576	; 0x100000
   109e0:	add	ip, ip, #24576	; 0x6000
   109e4:	ldr	pc, [ip, #2780]!	; 0xadc

000109e8 <__mtree_search_to_start@plt>:
   109e8:	add	ip, pc, #1048576	; 0x100000
   109ec:	add	ip, ip, #24576	; 0x6000
   109f0:	ldr	pc, [ip, #2772]!	; 0xad4

000109f4 <mythread_thread_destroy@plt>:
   109f4:	add	ip, pc, #1048576	; 0x100000
   109f8:	add	ip, ip, #24576	; 0x6000
   109fc:	ldr	pc, [ip, #2764]!	; 0xacc

00010a00 <fclose@plt>:
   10a00:	add	ip, pc, #1048576	; 0x100000
   10a04:	add	ip, ip, #24576	; 0x6000
   10a08:	ldr	pc, [ip, #2756]!	; 0xac4

00010a0c <myhtml_token_node_create@plt>:
   10a0c:	add	ip, pc, #1048576	; 0x100000
   10a10:	add	ip, ip, #24576	; 0x6000
   10a14:	ldr	pc, [ip, #2748]!	; 0xabc

00010a18 <mycore_utils_avl_tree_node_balance@plt>:
   10a18:	add	ip, pc, #1048576	; 0x100000
   10a1c:	add	ip, ip, #24576	; 0x6000
   10a20:	ldr	pc, [ip, #2740]!	; 0xab4

00010a24 <myhtml_tag_get_by_id@plt>:
   10a24:	add	ip, pc, #1048576	; 0x100000
   10a28:	add	ip, ip, #24576	; 0x6000
   10a2c:	ldr	pc, [ip, #2732]!	; 0xaac

00010a30 <myhtml_tree_appropriate_place_inserting_in_tree@plt>:
   10a30:	add	ip, pc, #1048576	; 0x100000
   10a34:	add	ip, ip, #24576	; 0x6000
   10a38:	ldr	pc, [ip, #2724]!	; 0xaa4

00010a3c <myhtml_parse_chunk@plt>:
   10a3c:	add	ip, pc, #1048576	; 0x100000
   10a40:	add	ip, ip, #24576	; 0x6000
   10a44:	ldr	pc, [ip, #2716]!	; 0xa9c

00010a48 <mycore_utils_mhash_rebuld@plt>:
   10a48:	add	ip, pc, #1048576	; 0x100000
   10a4c:	add	ip, ip, #24576	; 0x6000
   10a50:	ldr	pc, [ip, #2708]!	; 0xa94

00010a54 <myhtml_charef_get_first_position@plt>:
   10a54:	add	ip, pc, #1048576	; 0x100000
   10a58:	add	ip, ip, #24576	; 0x6000
   10a5c:	ldr	pc, [ip, #2700]!	; 0xa8c

00010a60 <mcobject_malloc@plt>:
   10a60:	add	ip, pc, #1048576	; 0x100000
   10a64:	add	ip, ip, #24576	; 0x6000
   10a68:	ldr	pc, [ip, #2692]!	; 0xa84

00010a6c <myencoding_detect_unicode_has_end@plt>:
   10a6c:	add	ip, pc, #1048576	; 0x100000
   10a70:	add	ip, ip, #24576	; 0x6000
   10a74:	ldr	pc, [ip, #2684]!	; 0xa7c

00010a78 <mcsync_spin_clean@plt>:
   10a78:	add	ip, pc, #1048576	; 0x100000
   10a7c:	add	ip, ip, #24576	; 0x6000
   10a80:	ldr	pc, [ip, #2676]!	; 0xa74

00010a84 <mythread_queue_create@plt>:
   10a84:	add	ip, pc, #1048576	; 0x100000
   10a88:	add	ip, ip, #24576	; 0x6000
   10a8c:	ldr	pc, [ip, #2668]!	; 0xa6c

00010a90 <mcobject_async_node_add@plt>:
   10a90:	add	ip, pc, #1048576	; 0x100000
   10a94:	add	ip, ip, #24576	; 0x6000
   10a98:	ldr	pc, [ip, #2660]!	; 0xa64

00010a9c <myhtml_tokenizer_doctype_system_identifier_dsq@plt>:
   10a9c:	add	ip, pc, #1048576	; 0x100000
   10aa0:	add	ip, ip, #24576	; 0x6000
   10aa4:	ldr	pc, [ip, #2652]!	; 0xa5c

00010aa8 <myhtml_is_html_node@plt>:
   10aa8:	add	ip, pc, #1048576	; 0x100000
   10aac:	add	ip, ip, #24576	; 0x6000
   10ab0:	ldr	pc, [ip, #2644]!	; 0xa54

00010ab4 <myhtml_init_marker@plt>:
   10ab4:	add	ip, pc, #1048576	; 0x100000
   10ab8:	add	ip, ip, #24576	; 0x6000
   10abc:	ldr	pc, [ip, #2636]!	; 0xa4c

00010ac0 <myhtml_tree_active_formatting_init@plt>:
   10ac0:	add	ip, pc, #1048576	; 0x100000
   10ac4:	add	ip, ip, #24576	; 0x6000
   10ac8:	ldr	pc, [ip, #2628]!	; 0xa44

00010acc <myhtml_parser_token_data_to_string@plt>:
   10acc:	add	ip, pc, #1048576	; 0x100000
   10ad0:	add	ip, ip, #24576	; 0x6000
   10ad4:	ldr	pc, [ip, #2620]!	; 0xa3c

00010ad8 <mythread_stop@plt>:
   10ad8:	add	ip, pc, #1048576	; 0x100000
   10adc:	add	ip, ip, #24576	; 0x6000
   10ae0:	ldr	pc, [ip, #2612]!	; 0xa34

00010ae4 <mythread_option_set@plt>:
   10ae4:	add	ip, pc, #1048576	; 0x100000
   10ae8:	add	ip, ip, #24576	; 0x6000
   10aec:	ldr	pc, [ip, #2604]!	; 0xa2c

00010af0 <myhtml_tag_name_by_id@plt>:
   10af0:	add	ip, pc, #1048576	; 0x100000
   10af4:	add	ip, ip, #24576	; 0x6000
   10af8:	ldr	pc, [ip, #2596]!	; 0xa24

00010afc <mythread_mutex_create@plt>:
   10afc:	add	ip, pc, #1048576	; 0x100000
   10b00:	add	ip, ip, #24576	; 0x6000
   10b04:	ldr	pc, [ip, #2588]!	; 0xa1c

00010b08 <myhtml_attribute_key@plt>:
   10b08:	add	ip, pc, #1048576	; 0x100000
   10b0c:	add	ip, ip, #24576	; 0x6000
   10b10:	ldr	pc, [ip, #2580]!	; 0xa14

00010b14 <mchar_sync_chunk_find_by_size@plt>:
   10b14:	add	ip, pc, #1048576	; 0x100000
   10b18:	add	ip, ip, #24576	; 0x6000
   10b1c:	ldr	pc, [ip, #2572]!	; 0xa0c

00010b20 <mcobject_async_destroy@plt>:
   10b20:	add	ip, pc, #1048576	; 0x100000
   10b24:	add	ip, ip, #24576	; 0x6000
   10b28:	ldr	pc, [ip, #2564]!	; 0xa04

00010b2c <myhtml_token_attr_compare@plt>:
   10b2c:	add	ip, pc, #1048576	; 0x100000
   10b30:	add	ip, ip, #24576	; 0x6000
   10b34:	ldr	pc, [ip, #2556]!	; 0x9fc

00010b38 <_myhtml_get_nodes_by_attribute_value@plt>:
   10b38:	add	ip, pc, #1048576	; 0x100000
   10b3c:	add	ip, ip, #24576	; 0x6000
   10b40:	ldr	pc, [ip, #2548]!	; 0x9f4

00010b44 <myhtml_tokenizer_set_state@plt>:
   10b44:	add	ip, pc, #1048576	; 0x100000
   10b48:	add	ip, ip, #24576	; 0x6000
   10b4c:	ldr	pc, [ip, #2540]!	; 0x9ec

00010b50 <mcsync_mutex_init@plt>:
   10b50:	add	ip, pc, #1048576	; 0x100000
   10b54:	add	ip, ip, #24576	; 0x6000
   10b58:	ldr	pc, [ip, #2532]!	; 0x9e4

00010b5c <myhtml_tag_init@plt>:
   10b5c:	add	ip, pc, #1048576	; 0x100000
   10b60:	add	ip, ip, #24576	; 0x6000
   10b64:	ldr	pc, [ip, #2524]!	; 0x9dc

00010b68 <pthread_join@plt>:
   10b68:	add	ip, pc, #1048576	; 0x100000
   10b6c:	add	ip, ip, #24576	; 0x6000
   10b70:	ldr	pc, [ip, #2516]!	; 0x9d4

00010b74 <myhtml_tag_get_by_name@plt>:
   10b74:	add	ip, pc, #1048576	; 0x100000
   10b78:	add	ip, ip, #24576	; 0x6000
   10b7c:	ldr	pc, [ip, #2508]!	; 0x9cc

00010b80 <myhtml_stream_buffer_current_entry@plt>:
   10b80:	add	ip, pc, #1048576	; 0x100000
   10b84:	add	ip, ip, #24576	; 0x6000
   10b88:	ldr	pc, [ip, #2500]!	; 0x9c4

00010b8c <myencoding_prescan_stream_to_determine_encoding_with_found@plt>:
   10b8c:	add	ip, pc, #1048576	; 0x100000
   10b90:	add	ip, ip, #24576	; 0x6000
   10b94:	ldr	pc, [ip, #2492]!	; 0x9bc

00010b98 <myhtml_tokenizer_chunk_with_stream_buffer@plt>:
   10b98:	add	ip, pc, #1048576	; 0x100000
   10b9c:	add	ip, ip, #24576	; 0x6000
   10ba0:	ldr	pc, [ip, #2484]!	; 0x9b4

00010ba4 <mchar_async_chunk_malloc_without_lock@plt>:
   10ba4:	add	ip, pc, #1048576	; 0x100000
   10ba8:	add	ip, ip, #24576	; 0x6000
   10bac:	ldr	pc, [ip, #2476]!	; 0x9ac

00010bb0 <myhtml_tree_open_elements_init@plt>:
   10bb0:	add	ip, pc, #1048576	; 0x100000
   10bb4:	add	ip, ip, #24576	; 0x6000
   10bb8:	ldr	pc, [ip, #2468]!	; 0x9a4

00010bbc <mcobject_async_malloc@plt>:
   10bbc:	add	ip, pc, #1048576	; 0x100000
   10bc0:	add	ip, ip, #24576	; 0x6000
   10bc4:	ldr	pc, [ip, #2460]!	; 0x99c

00010bc8 <mchar_async_clean@plt>:
   10bc8:	add	ip, pc, #1048576	; 0x100000
   10bcc:	add	ip, ip, #24576	; 0x6000
   10bd0:	ldr	pc, [ip, #2452]!	; 0x994

00010bd4 <myencoding_decode_shared_utf_16@plt>:
   10bd4:	add	ip, pc, #1048576	; 0x100000
   10bd8:	add	ip, ip, #24576	; 0x6000
   10bdc:	ldr	pc, [ip, #2444]!	; 0x98c

00010be0 <myhtml_token_adjust_foreign_attributes@plt>:
   10be0:	add	ip, pc, #1048576	; 0x100000
   10be4:	add	ip, ip, #24576	; 0x6000
   10be8:	ldr	pc, [ip, #2436]!	; 0x984

00010bec <myhtml_rules_init@plt>:
   10bec:	add	ip, pc, #1048576	; 0x100000
   10bf0:	add	ip, ip, #24576	; 0x6000
   10bf4:	ldr	pc, [ip, #2428]!	; 0x97c

00010bf8 <myencoding_decode_gb18030@plt>:
   10bf8:	add	ip, pc, #1048576	; 0x100000
   10bfc:	add	ip, ip, #24576	; 0x6000
   10c00:	ldr	pc, [ip, #2420]!	; 0x974

00010c04 <mythread_nanosleep_destroy@plt>:
   10c04:	add	ip, pc, #1048576	; 0x100000
   10c08:	add	ip, ip, #24576	; 0x6000
   10c0c:	ldr	pc, [ip, #2412]!	; 0x96c

00010c10 <mycore_utils_avl_tree_node_rotate_left@plt>:
   10c10:	add	ip, pc, #1048576	; 0x100000
   10c14:	add	ip, ip, #24576	; 0x6000
   10c18:	ldr	pc, [ip, #2404]!	; 0x964

00010c1c <myhtml_string_before_append_any_preprocessing@plt>:
   10c1c:	add	ip, pc, #1048576	; 0x100000
   10c20:	add	ip, ip, #24576	; 0x6000
   10c24:	ldr	pc, [ip, #2396]!	; 0x95c

00010c28 <myhtml_tokenizer_end_state_doctype_public_identifier_double_quoted@plt>:
   10c28:	add	ip, pc, #1048576	; 0x100000
   10c2c:	add	ip, ip, #24576	; 0x6000
   10c30:	ldr	pc, [ip, #2388]!	; 0x954

00010c34 <mchar_async_cache_init@plt>:
   10c34:	add	ip, pc, #1048576	; 0x100000
   10c38:	add	ip, ip, #24576	; 0x6000
   10c3c:	ldr	pc, [ip, #2380]!	; 0x94c

00010c40 <myhtml_check_tag_parser@plt>:
   10c40:	add	ip, pc, #1048576	; 0x100000
   10c44:	add	ip, ip, #24576	; 0x6000
   10c48:	ldr	pc, [ip, #2372]!	; 0x944

00010c4c <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@plt>:
   10c4c:	add	ip, pc, #1048576	; 0x100000
   10c50:	add	ip, ip, #24576	; 0x6000
   10c54:	ldr	pc, [ip, #2364]!	; 0x93c

00010c58 <mchar_async_node_delete@plt>:
   10c58:	add	ip, pc, #1048576	; 0x100000
   10c5c:	add	ip, ip, #24576	; 0x6000
   10c60:	ldr	pc, [ip, #2356]!	; 0x934

00010c64 <mchar_async_crop_first_chars_without_cache@plt>:
   10c64:	add	ip, pc, #1048576	; 0x100000
   10c68:	add	ip, ip, #24576	; 0x6000
   10c6c:	ldr	pc, [ip, #2348]!	; 0x92c

00010c70 <_myhtml_tokenizer_state_andata_end_tag_name@plt>:
   10c70:	add	ip, pc, #1048576	; 0x100000
   10c74:	add	ip, ip, #24576	; 0x6000
   10c78:	ldr	pc, [ip, #2340]!	; 0x924

00010c7c <mchar_async_cache_add@plt>:
   10c7c:	add	ip, pc, #1048576	; 0x100000
   10c80:	add	ip, ip, #24576	; 0x6000
   10c84:	ldr	pc, [ip, #2332]!	; 0x91c

00010c88 <myencoding_string_append_chunk_lowercase_ascii@plt>:
   10c88:	add	ip, pc, #1048576	; 0x100000
   10c8c:	add	ip, ip, #24576	; 0x6000
   10c90:	ldr	pc, [ip, #2324]!	; 0x914

00010c94 <mycore_malloc@plt>:
   10c94:	add	ip, pc, #1048576	; 0x100000
   10c98:	add	ip, ip, #24576	; 0x6000
   10c9c:	ldr	pc, [ip, #2316]!	; 0x90c

00010ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>:
   10ca0:	add	ip, pc, #1048576	; 0x100000
   10ca4:	add	ip, ip, #24576	; 0x6000
   10ca8:	ldr	pc, [ip, #2308]!	; 0x904

00010cac <mythread_queue_node_malloc_limit@plt>:
   10cac:	add	ip, pc, #1048576	; 0x100000
   10cb0:	add	ip, ip, #24576	; 0x6000
   10cb4:	ldr	pc, [ip, #2300]!	; 0x8fc

00010cb8 <myhtml_tree_node_insert_by_token@plt>:
   10cb8:	add	ip, pc, #1048576	; 0x100000
   10cbc:	add	ip, ip, #24576	; 0x6000
   10cc0:	ldr	pc, [ip, #2292]!	; 0x8f4

00010cc4 <mctree_insert_after@plt>:
   10cc4:	add	ip, pc, #1048576	; 0x100000
   10cc8:	add	ip, ip, #24576	; 0x6000
   10ccc:	ldr	pc, [ip, #2284]!	; 0x8ec

00010cd0 <myencoding_by_name@plt>:
   10cd0:	add	ip, pc, #1048576	; 0x100000
   10cd4:	add	ip, ip, #24576	; 0x6000
   10cd8:	ldr	pc, [ip, #2276]!	; 0x8e4

00010cdc <myhtml_tree_template_insertion_init@plt>:
   10cdc:	add	ip, pc, #1048576	; 0x100000
   10ce0:	add	ip, ip, #24576	; 0x6000
   10ce4:	ldr	pc, [ip, #2268]!	; 0x8dc

00010ce8 <myhtml_tree_open_elements_destroy@plt>:
   10ce8:	add	ip, pc, #1048576	; 0x100000
   10cec:	add	ip, ip, #24576	; 0x6000
   10cf0:	ldr	pc, [ip, #2260]!	; 0x8d4

00010cf4 <myencoding_prescan_stream_to_determine_encoding_get_attr@plt>:
   10cf4:	add	ip, pc, #1048576	; 0x100000
   10cf8:	add	ip, ip, #24576	; 0x6000
   10cfc:	ldr	pc, [ip, #2252]!	; 0x8cc

00010d00 <myhtml_tree_node_free@plt>:
   10d00:	add	ip, pc, #1048576	; 0x100000
   10d04:	add	ip, ip, #24576	; 0x6000
   10d08:	ldr	pc, [ip, #2244]!	; 0x8c4

00010d0c <mythread_mutex_post@plt>:
   10d0c:	add	ip, pc, #1048576	; 0x100000
   10d10:	add	ip, ip, #24576	; 0x6000
   10d14:	ldr	pc, [ip, #2236]!	; 0x8bc

00010d18 <mycore_string_clean@plt>:
   10d18:	add	ip, pc, #1048576	; 0x100000
   10d1c:	add	ip, ip, #24576	; 0x6000
   10d20:	ldr	pc, [ip, #2228]!	; 0x8b4

00010d24 <mythread_queue_list_entry_make_batch@plt>:
   10d24:	add	ip, pc, #1048576	; 0x100000
   10d28:	add	ip, ip, #24576	; 0x6000
   10d2c:	ldr	pc, [ip, #2220]!	; 0x8ac

00010d30 <myhtml_tag_create@plt>:
   10d30:	add	ip, pc, #1048576	; 0x100000
   10d34:	add	ip, ip, #24576	; 0x6000
   10d38:	ldr	pc, [ip, #2212]!	; 0x8a4

00010d3c <myhtml_tree_close_cell@plt>:
   10d3c:	add	ip, pc, #1048576	; 0x100000
   10d40:	add	ip, ip, #24576	; 0x6000
   10d44:	ldr	pc, [ip, #2204]!	; 0x89c

00010d48 <myhtml_tree_adjusted_current_node@plt>:
   10d48:	add	ip, pc, #1048576	; 0x100000
   10d4c:	add	ip, ip, #24576	; 0x6000
   10d50:	ldr	pc, [ip, #2196]!	; 0x894

00010d54 <myencoding_detect_russian_has_end@plt>:
   10d54:	add	ip, pc, #1048576	; 0x100000
   10d58:	add	ip, ip, #24576	; 0x6000
   10d5c:	ldr	pc, [ip, #2188]!	; 0x88c

00010d60 <myhtml_rules_check_for_first_newline@plt>:
   10d60:	add	ip, pc, #1048576	; 0x100000
   10d64:	add	ip, ip, #24576	; 0x6000
   10d68:	ldr	pc, [ip, #2180]!	; 0x884

00010d6c <myhtml_stream_buffer_init@plt>:
   10d6c:	add	ip, pc, #1048576	; 0x100000
   10d70:	add	ip, ip, #24576	; 0x6000
   10d74:	ldr	pc, [ip, #2172]!	; 0x87c

00010d78 <mythread_queue_node_clean@plt>:
   10d78:	add	ip, pc, #1048576	; 0x100000
   10d7c:	add	ip, ip, #24576	; 0x6000
   10d80:	ldr	pc, [ip, #2164]!	; 0x874

00010d84 <myhtml_tree_node_insert_foreign_element@plt>:
   10d84:	add	ip, pc, #1048576	; 0x100000
   10d88:	add	ip, ip, #24576	; 0x6000
   10d8c:	ldr	pc, [ip, #2156]!	; 0x86c

00010d90 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>:
   10d90:	add	ip, pc, #1048576	; 0x100000
   10d94:	add	ip, ip, #24576	; 0x6000
   10d98:	ldr	pc, [ip, #2148]!	; 0x864

00010d9c <mythread_mutex_wait@plt>:
   10d9c:	add	ip, pc, #1048576	; 0x100000
   10da0:	add	ip, ip, #24576	; 0x6000
   10da4:	ldr	pc, [ip, #2140]!	; 0x85c

00010da8 <mchar_async_destroy@plt>:
   10da8:	add	ip, pc, #1048576	; 0x100000
   10dac:	add	ip, ip, #24576	; 0x6000
   10db0:	ldr	pc, [ip, #2132]!	; 0x854

00010db4 <mycore_utils_mhash_add_with_choice@plt>:
   10db4:	add	ip, pc, #1048576	; 0x100000
   10db8:	add	ip, ip, #24576	; 0x6000
   10dbc:	ldr	pc, [ip, #2124]!	; 0x84c

00010dc0 <myhtml_tree_node_delete@plt>:
   10dc0:	add	ip, pc, #1048576	; 0x100000
   10dc4:	add	ip, ip, #24576	; 0x6000
   10dc8:	ldr	pc, [ip, #2116]!	; 0x844

00010dcc <mycore_free@plt>:
   10dcc:	add	ip, pc, #1048576	; 0x100000
   10dd0:	add	ip, ip, #24576	; 0x6000
   10dd4:	ldr	pc, [ip, #2108]!	; 0x83c

00010dd8 <mythread_queue_list_wait_for_done@plt>:
   10dd8:	add	ip, pc, #1048576	; 0x100000
   10ddc:	add	ip, ip, #24576	; 0x6000
   10de0:	ldr	pc, [ip, #2100]!	; 0x834

00010de4 <mycore_string_whitespace_from_begin@plt>:
   10de4:	add	ip, pc, #1048576	; 0x100000
   10de8:	add	ip, ip, #24576	; 0x6000
   10dec:	ldr	pc, [ip, #2092]!	; 0x82c

00010df0 <myhtml_tree_node_remove@plt>:
   10df0:	add	ip, pc, #1048576	; 0x100000
   10df4:	add	ip, ip, #24576	; 0x6000
   10df8:	ldr	pc, [ip, #2084]!	; 0x824

00010dfc <myhtml_collection_check_size@plt>:
   10dfc:	add	ip, pc, #1048576	; 0x100000
   10e00:	add	ip, ip, #24576	; 0x6000
   10e04:	ldr	pc, [ip, #2076]!	; 0x81c

00010e08 <myhtml_tokenizer_end_state_doctype_system_identifier_double_quoted@plt>:
   10e08:	add	ip, pc, #1048576	; 0x100000
   10e0c:	add	ip, ip, #24576	; 0x6000
   10e10:	ldr	pc, [ip, #2068]!	; 0x814

00010e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>:
   10e14:	add	ip, pc, #1048576	; 0x100000
   10e18:	add	ip, ip, #24576	; 0x6000
   10e1c:	ldr	pc, [ip, #2060]!	; 0x80c

00010e20 <myhtml_tree_open_elements_clean@plt>:
   10e20:	add	ip, pc, #1048576	; 0x100000
   10e24:	add	ip, ip, #24576	; 0x6000
   10e28:	ldr	pc, [ip, #2052]!	; 0x804

00010e2c <myhtml_tree_node_insert_doctype@plt>:
   10e2c:	add	ip, pc, #1048576	; 0x100000
   10e30:	add	ip, ip, #24576	; 0x6000
   10e34:	ldr	pc, [ip, #2044]!	; 0x7fc

00010e38 <myhtml_tree_template_insertion_destroy@plt>:
   10e38:	add	ip, pc, #1048576	; 0x100000
   10e3c:	add	ip, ip, #24576	; 0x6000
   10e40:	ldr	pc, [ip, #2036]!	; 0x7f4

00010e44 <myhtml_tag_destroy@plt>:
   10e44:	add	ip, pc, #1048576	; 0x100000
   10e48:	add	ip, ip, #24576	; 0x6000
   10e4c:	ldr	pc, [ip, #2028]!	; 0x7ec

00010e50 <mcsync_mutex_clean@plt>:
   10e50:	add	ip, pc, #1048576	; 0x100000
   10e54:	add	ip, ip, #24576	; 0x6000
   10e58:	ldr	pc, [ip, #2020]!	; 0x7e4

00010e5c <myhtml_tree_active_formatting_up_to_last_marker@plt>:
   10e5c:	add	ip, pc, #1048576	; 0x100000
   10e60:	add	ip, ip, #24576	; 0x6000
   10e64:	ldr	pc, [ip, #2012]!	; 0x7dc

00010e68 <myhtml_serialization_tree_callback@plt>:
   10e68:	add	ip, pc, #1048576	; 0x100000
   10e6c:	add	ip, ip, #24576	; 0x6000
   10e70:	ldr	pc, [ip, #2004]!	; 0x7d4

00010e74 <myhtml_stream_buffer_create@plt>:
   10e74:	add	ip, pc, #1048576	; 0x100000
   10e78:	add	ip, ip, #24576	; 0x6000
   10e7c:	ldr	pc, [ip, #1996]!	; 0x7cc

00010e80 <myhtml_tree_appropriate_place_inserting@plt>:
   10e80:	add	ip, pc, #1048576	; 0x100000
   10e84:	add	ip, ip, #24576	; 0x6000
   10e88:	ldr	pc, [ip, #1988]!	; 0x7c4

00010e8c <myencoding_codepoint_to_ascii_utf_8@plt>:
   10e8c:	add	ip, pc, #1048576	; 0x100000
   10e90:	add	ip, ip, #24576	; 0x6000
   10e94:	ldr	pc, [ip, #1980]!	; 0x7bc

00010e98 <myhtml_token_attr_remove_by_name@plt>:
   10e98:	add	ip, pc, #1048576	; 0x100000
   10e9c:	add	ip, ip, #24576	; 0x6000
   10ea0:	ldr	pc, [ip, #1972]!	; 0x7b4

00010ea4 <mycore_utils_mhash_rebuild_add_entry@plt>:
   10ea4:	add	ip, pc, #1048576	; 0x100000
   10ea8:	add	ip, ip, #24576	; 0x6000
   10eac:	ldr	pc, [ip, #1964]!	; 0x7ac

00010eb0 <myhtml_token_attr_by_name@plt>:
   10eb0:	add	ip, pc, #1048576	; 0x100000
   10eb4:	add	ip, ip, #24576	; 0x6000
   10eb8:	ldr	pc, [ip, #1956]!	; 0x7a4

00010ebc <mcsync_unlock@plt>:
   10ebc:	add	ip, pc, #1048576	; 0x100000
   10ec0:	add	ip, ip, #24576	; 0x6000
   10ec4:	ldr	pc, [ip, #1948]!	; 0x79c

00010ec8 <myhtml_tree_token_list_append@plt>:
   10ec8:	add	ip, pc, #1048576	; 0x100000
   10ecc:	add	ip, ip, #24576	; 0x6000
   10ed0:	ldr	pc, [ip, #1940]!	; 0x794

00010ed4 <mycore_utils_avl_tree_node_create_root@plt>:
   10ed4:	add	ip, pc, #1048576	; 0x100000
   10ed8:	add	ip, ip, #24576	; 0x6000
   10edc:	ldr	pc, [ip, #1932]!	; 0x78c

00010ee0 <mythread_queue_list_entry_make_stream@plt>:
   10ee0:	add	ip, pc, #1048576	; 0x100000
   10ee4:	add	ip, ip, #24576	; 0x6000
   10ee8:	ldr	pc, [ip, #1924]!	; 0x784

00010eec <mycore_strncmp@plt>:
   10eec:	add	ip, pc, #1048576	; 0x100000
   10ef0:	add	ip, ip, #24576	; 0x6000
   10ef4:	ldr	pc, [ip, #1916]!	; 0x77c

00010ef8 <mycore_utils_mhash_create_entry@plt>:
   10ef8:	add	ip, pc, #1048576	; 0x100000
   10efc:	add	ip, ip, #24576	; 0x6000
   10f00:	ldr	pc, [ip, #1908]!	; 0x774

00010f04 <myhtml_tree_element_in_scope@plt>:
   10f04:	add	ip, pc, #1048576	; 0x100000
   10f08:	add	ip, ip, #24576	; 0x6000
   10f0c:	ldr	pc, [ip, #1900]!	; 0x76c

00010f10 <myencoding_index_gb18030_ranges_code_point@plt>:
   10f10:	add	ip, pc, #1048576	; 0x100000
   10f14:	add	ip, ip, #24576	; 0x6000
   10f18:	ldr	pc, [ip, #1892]!	; 0x764

00010f1c <__mtree_search_lowercase_to_start@plt>:
   10f1c:	add	ip, pc, #1048576	; 0x100000
   10f20:	add	ip, ip, #24576	; 0x6000
   10f24:	ldr	pc, [ip, #1884]!	; 0x75c

00010f28 <fseek@plt>:
   10f28:	add	ip, pc, #1048576	; 0x100000
   10f2c:	add	ip, ip, #24576	; 0x6000
   10f30:	ldr	pc, [ip, #1876]!	; 0x754

00010f34 <myhtml_node_clone@plt>:
   10f34:	add	ip, pc, #1048576	; 0x100000
   10f38:	add	ip, ip, #24576	; 0x6000
   10f3c:	ldr	pc, [ip, #1868]!	; 0x74c

00010f40 <myhtml_tree_generic_raw_text_element_parsing_algorithm@plt>:
   10f40:	add	ip, pc, #1048576	; 0x100000
   10f44:	add	ip, ip, #24576	; 0x6000
   10f48:	ldr	pc, [ip, #1860]!	; 0x744

00010f4c <myencoding_detect_russian@plt>:
   10f4c:	add	ip, pc, #1048576	; 0x100000
   10f50:	add	ip, ip, #24576	; 0x6000
   10f54:	ldr	pc, [ip, #1852]!	; 0x73c

00010f58 <pthread_attr_setdetachstate@plt>:
   10f58:	add	ip, pc, #1048576	; 0x100000
   10f5c:	add	ip, ip, #24576	; 0x6000
   10f60:	ldr	pc, [ip, #1844]!	; 0x734

00010f64 <mchar_async_cache_delete@plt>:
   10f64:	add	ip, pc, #1048576	; 0x100000
   10f68:	add	ip, ip, #24576	; 0x6000
   10f6c:	ldr	pc, [ip, #1836]!	; 0x72c

00010f70 <mcobject_clean@plt>:
   10f70:	add	ip, pc, #1048576	; 0x100000
   10f74:	add	ip, ip, #24576	; 0x6000
   10f78:	ldr	pc, [ip, #1828]!	; 0x724

00010f7c <myhtml_token_node_clean@plt>:
   10f7c:	add	ip, pc, #1048576	; 0x100000
   10f80:	add	ip, ip, #24576	; 0x6000
   10f84:	ldr	pc, [ip, #1820]!	; 0x71c

00010f88 <myhtml_token_delete@plt>:
   10f88:	add	ip, pc, #1048576	; 0x100000
   10f8c:	add	ip, ip, #24576	; 0x6000
   10f90:	ldr	pc, [ip, #1812]!	; 0x714

00010f94 <strncmp@plt>:
   10f94:	add	ip, pc, #1048576	; 0x100000
   10f98:	add	ip, ip, #24576	; 0x6000
   10f9c:	ldr	pc, [ip, #1804]!	; 0x70c

00010fa0 <mcsimple_get_by_absolute_position@plt>:
   10fa0:	add	ip, pc, #1048576	; 0x100000
   10fa4:	add	ip, ip, #24576	; 0x6000
   10fa8:	ldr	pc, [ip, #1796]!	; 0x704

00010fac <mcsync_mutex_try_lock@plt>:
   10fac:	add	ip, pc, #1048576	; 0x100000
   10fb0:	add	ip, ip, #24576	; 0x6000
   10fb4:	ldr	pc, [ip, #1788]!	; 0x6fc

00010fb8 <mycore_utils_avl_tree_node_height@plt>:
   10fb8:	add	ip, pc, #1048576	; 0x100000
   10fbc:	add	ip, ip, #24576	; 0x6000
   10fc0:	ldr	pc, [ip, #1780]!	; 0x6f4

00010fc4 <mycore_utils_avl_tree_node_clean@plt>:
   10fc4:	add	ip, pc, #1048576	; 0x100000
   10fc8:	add	ip, ip, #24576	; 0x6000
   10fcc:	ldr	pc, [ip, #1772]!	; 0x6ec

00010fd0 <myhtml_tree_clear_stack_back_table_context@plt>:
   10fd0:	add	ip, pc, #1048576	; 0x100000
   10fd4:	add	ip, ip, #24576	; 0x6000
   10fd8:	ldr	pc, [ip, #1764]!	; 0x6e4

00010fdc <myhtml_tree_node_clone@plt>:
   10fdc:	add	ip, pc, #1048576	; 0x100000
   10fe0:	add	ip, ip, #24576	; 0x6000
   10fe4:	ldr	pc, [ip, #1756]!	; 0x6dc

00010fe8 <myhtml_tree_token_list_clean@plt>:
   10fe8:	add	ip, pc, #1048576	; 0x100000
   10fec:	add	ip, ip, #24576	; 0x6000
   10ff0:	ldr	pc, [ip, #1748]!	; 0x6d4

00010ff4 <myhtml_parser_stream@plt>:
   10ff4:	add	ip, pc, #1048576	; 0x100000
   10ff8:	add	ip, ip, #24576	; 0x6000
   10ffc:	ldr	pc, [ip, #1740]!	; 0x6cc

00011000 <myhtml_token_create@plt>:
   11000:	add	ip, pc, #1048576	; 0x100000
   11004:	add	ip, ip, #24576	; 0x6000
   11008:	ldr	pc, [ip, #1732]!	; 0x6c4

0001100c <myhtml_parser_token_data_to_string_lowercase@plt>:
   1100c:	add	ip, pc, #1048576	; 0x100000
   11010:	add	ip, ip, #24576	; 0x6000
   11014:	ldr	pc, [ip, #1724]!	; 0x6bc

00011018 <myencoding_detect_utf_8@plt>:
   11018:	add	ip, pc, #1048576	; 0x100000
   1101c:	add	ip, ip, #24576	; 0x6000
   11020:	ldr	pc, [ip, #1716]!	; 0x6b4

00011024 <mcsync_spin_unlock@plt>:
   11024:	add	ip, pc, #1048576	; 0x100000
   11028:	add	ip, ip, #24576	; 0x6000
   1102c:	ldr	pc, [ip, #1708]!	; 0x6ac

00011030 <myhtml_string_append_lowercase_with_preprocessing@plt>:
   11030:	add	ip, pc, #1048576	; 0x100000
   11034:	add	ip, ip, #24576	; 0x6000
   11038:	ldr	pc, [ip, #1700]!	; 0x6a4

0001103c <mcsync_mutex_lock@plt>:
   1103c:	add	ip, pc, #1048576	; 0x100000
   11040:	add	ip, ip, #24576	; 0x6000
   11044:	ldr	pc, [ip, #1692]!	; 0x69c

00011048 <myhtml_tree_open_elements_find@plt>:
   11048:	add	ip, pc, #1048576	; 0x100000
   1104c:	add	ip, ip, #24576	; 0x6000
   11050:	ldr	pc, [ip, #1684]!	; 0x694

00011054 <mcobject_async_clean@plt>:
   11054:	add	ip, pc, #1048576	; 0x100000
   11058:	add	ip, ip, #24576	; 0x6000
   1105c:	ldr	pc, [ip, #1676]!	; 0x68c

00011060 <mchar_async_mem_malloc@plt>:
   11060:	add	ip, pc, #1048576	; 0x100000
   11064:	add	ip, ip, #24576	; 0x6000
   11068:	ldr	pc, [ip, #1668]!	; 0x684

0001106c <myhtml_data_process_string_append_char@plt>:
   1106c:	add	ip, pc, #1048576	; 0x100000
   11070:	add	ip, ip, #24576	; 0x6000
   11074:	ldr	pc, [ip, #1660]!	; 0x67c

00011078 <myhtml_tag_clean@plt>:
   11078:	add	ip, pc, #1048576	; 0x100000
   1107c:	add	ip, ip, #24576	; 0x6000
   11080:	ldr	pc, [ip, #1652]!	; 0x674

00011084 <mythread_thread_attr_destroy@plt>:
   11084:	add	ip, pc, #1048576	; 0x100000
   11088:	add	ip, ip, #24576	; 0x6000
   1108c:	ldr	pc, [ip, #1644]!	; 0x66c

00011090 <mycore_string_clean_all@plt>:
   11090:	add	ip, pc, #1048576	; 0x100000
   11094:	add	ip, ip, #24576	; 0x6000
   11098:	ldr	pc, [ip, #1636]!	; 0x664

0001109c <myhtml_tree_node_clean@plt>:
   1109c:	add	ip, pc, #1048576	; 0x100000
   110a0:	add	ip, ip, #24576	; 0x6000
   110a4:	ldr	pc, [ip, #1628]!	; 0x65c

000110a8 <mythread_init@plt>:
   110a8:	add	ip, pc, #1048576	; 0x100000
   110ac:	add	ip, ip, #24576	; 0x6000
   110b0:	ldr	pc, [ip, #1620]!	; 0x654

Disassembly of section .text:

000110b4 <mycore_incoming_buffer_add@@Base-0x174>:
   110b4:	ldr	r3, [pc, #20]	; 110d0 <mythread_init@plt+0x28>
   110b8:	ldr	r2, [pc, #20]	; 110d4 <mythread_init@plt+0x2c>
   110bc:	add	r3, pc, r3
   110c0:	ldr	r2, [r3, r2]
   110c4:	cmp	r2, #0
   110c8:	bxeq	lr
   110cc:	b	105e0 <__gmon_start__@plt>
   110d0:	andseq	r5, r0, ip, lsr pc
   110d4:	andeq	r0, r0, r8, ror r8
   110d8:	ldr	r3, [pc, #52]	; 11114 <mythread_init@plt+0x6c>
   110dc:	ldr	r0, [pc, #52]	; 11118 <mythread_init@plt+0x70>
   110e0:	add	r3, pc, r3
   110e4:	add	r0, pc, r0
   110e8:	add	r3, r3, #3
   110ec:	sub	r3, r3, r0
   110f0:	cmp	r3, #6
   110f4:	ldr	r3, [pc, #32]	; 1111c <mythread_init@plt+0x74>
   110f8:	add	r3, pc, r3
   110fc:	bxls	lr
   11100:	ldr	r2, [pc, #24]	; 11120 <mythread_init@plt+0x78>
   11104:	ldr	r3, [r3, r2]
   11108:	cmp	r3, #0
   1110c:	bxeq	lr
   11110:	bx	r3
   11114:			; <UNDEFINED> instruction: 0x001068f0
   11118:	andseq	r6, r0, ip, ror #17
   1111c:	andseq	r5, r0, r0, lsl #30
   11120:	andeq	r0, r0, r4, asr #14
   11124:	ldr	r1, [pc, #56]	; 11164 <mythread_init@plt+0xbc>
   11128:	ldr	r0, [pc, #56]	; 11168 <mythread_init@plt+0xc0>
   1112c:	add	r1, pc, r1
   11130:	add	r0, pc, r0
   11134:	sub	r1, r1, r0
   11138:	ldr	r3, [pc, #44]	; 1116c <mythread_init@plt+0xc4>
   1113c:	asr	r1, r1, #2
   11140:	add	r3, pc, r3
   11144:	add	r1, r1, r1, lsr #31
   11148:	asrs	r1, r1, #1
   1114c:	bxeq	lr
   11150:	ldr	r2, [pc, #24]	; 11170 <mythread_init@plt+0xc8>
   11154:	ldr	r3, [r3, r2]
   11158:	cmp	r3, #0
   1115c:	bxeq	lr
   11160:	bx	r3
   11164:	andseq	r6, r0, r4, lsr #17
   11168:	andseq	r6, r0, r0, lsr #17
   1116c:			; <UNDEFINED> instruction: 0x00105eb8
   11170:	andeq	r0, r0, ip, lsl #19
   11174:	ldr	r3, [pc, #76]	; 111c8 <mythread_init@plt+0x120>
   11178:	ldr	r2, [pc, #76]	; 111cc <mythread_init@plt+0x124>
   1117c:	add	r3, pc, r3
   11180:	add	r2, pc, r2
   11184:	ldrb	r3, [r3]
   11188:	cmp	r3, #0
   1118c:	bxne	lr
   11190:	ldr	r3, [pc, #56]	; 111d0 <mythread_init@plt+0x128>
   11194:	push	{r4, lr}
   11198:	ldr	r3, [r2, r3]
   1119c:	cmp	r3, #0
   111a0:	beq	111b0 <mythread_init@plt+0x108>
   111a4:	ldr	r3, [pc, #40]	; 111d4 <mythread_init@plt+0x12c>
   111a8:	ldr	r0, [pc, r3]
   111ac:	bl	fd40 <__cxa_finalize@plt>
   111b0:	bl	110d8 <mythread_init@plt+0x30>
   111b4:	ldr	r3, [pc, #28]	; 111d8 <mythread_init@plt+0x130>
   111b8:	mov	r2, #1
   111bc:	add	r3, pc, r3
   111c0:	strb	r2, [r3]
   111c4:	pop	{r4, pc}
   111c8:	andseq	r6, r0, r4, asr r8
   111cc:	andseq	r5, r0, r8, ror lr
   111d0:	andeq	r0, r0, r0, lsr r7
   111d4:	andseq	r6, r0, r4, lsr #16
   111d8:	andseq	r6, r0, r4, lsl r8
   111dc:	ldr	r0, [pc, #56]	; 1121c <mythread_init@plt+0x174>
   111e0:	ldr	r3, [pc, #56]	; 11220 <mythread_init@plt+0x178>
   111e4:	add	r0, pc, r0
   111e8:	ldr	r2, [r0]
   111ec:	add	r3, pc, r3
   111f0:	cmp	r2, #0
   111f4:	bne	111fc <mythread_init@plt+0x154>
   111f8:	b	11124 <mythread_init@plt+0x7c>
   111fc:	ldr	r2, [pc, #32]	; 11224 <mythread_init@plt+0x17c>
   11200:	ldr	r3, [r3, r2]
   11204:	cmp	r3, #0
   11208:	beq	111f8 <mythread_init@plt+0x150>
   1120c:	push	{r4, lr}
   11210:	blx	r3
   11214:	pop	{r4, lr}
   11218:	b	11124 <mythread_init@plt+0x7c>
   1121c:	strdeq	sp, [pc], -ip
   11220:	andseq	r5, r0, ip, lsl #28
   11224:	andeq	r0, r0, ip, lsr r9

00011228 <mycore_incoming_buffer_add@@Base>:
   11228:	push	{r4, r5, r6, lr}
   1122c:	mov	r4, r0
   11230:	mov	r0, r1
   11234:	mov	r5, r2
   11238:	mov	r6, r3
   1123c:	mov	r1, #0
   11240:	bl	10a60 <mcobject_malloc@plt>
   11244:	str	r6, [r0, #8]
   11248:	mov	r3, #0
   1124c:	str	r3, [r0, #4]
   11250:	str	r5, [r0]
   11254:	cmp	r4, r3
   11258:	ldrne	r3, [r4, #12]
   1125c:	ldrne	r2, [r4, #8]
   11260:	addne	r3, r3, r2
   11264:	strne	r3, [r0, #12]
   11268:	strne	r0, [r4, #20]
   1126c:	moveq	r3, #0
   11270:	streq	r3, [r0, #12]
   11274:	str	r4, [r0, #16]
   11278:	mov	r3, #0
   1127c:	str	r3, [r0, #20]
   11280:	pop	{r4, r5, r6, pc}

00011284 <mycore_incoming_buffer_clean@@Base>:
   11284:	mov	r3, #0
   11288:	str	r3, [r0]
   1128c:	str	r3, [r0, #4]
   11290:	str	r3, [r0, #8]
   11294:	str	r3, [r0, #12]
   11298:	str	r3, [r0, #16]
   1129c:	str	r3, [r0, #20]
   112a0:	bx	lr

000112a4 <mycore_incoming_buffer_split@@Base>:
   112a4:	push	{r4, r5, r6, lr}
   112a8:	mov	r4, r0
   112ac:	mov	r0, r1
   112b0:	ldr	r5, [r4, #12]
   112b4:	sub	r5, r2, r5
   112b8:	mov	r1, #0
   112bc:	bl	10a60 <mcobject_malloc@plt>
   112c0:	ldr	r2, [r4, #8]
   112c4:	sub	r2, r2, r5
   112c8:	str	r2, [r0, #8]
   112cc:	str	r2, [r0, #4]
   112d0:	ldr	r2, [r4]
   112d4:	add	r2, r2, r5
   112d8:	str	r2, [r0]
   112dc:	ldr	r2, [r4, #12]
   112e0:	add	r2, r2, r5
   112e4:	str	r2, [r0, #12]
   112e8:	mov	r2, #0
   112ec:	str	r2, [r0, #20]
   112f0:	str	r4, [r0, #16]
   112f4:	str	r0, [r4, #20]
   112f8:	str	r5, [r4, #8]
   112fc:	str	r5, [r4, #4]
   11300:	pop	{r4, r5, r6, pc}

00011304 <mycore_incoming_buffer_find_by_position@@Base>:
   11304:	ldr	r3, [r0, #12]
   11308:	cmp	r3, r1
   1130c:	bcc	11340 <mycore_incoming_buffer_find_by_position@@Base+0x3c>
   11310:	cmp	r0, #0
   11314:	bxeq	lr
   11318:	cmp	r3, r1
   1131c:	bls	1133c <mycore_incoming_buffer_find_by_position@@Base+0x38>
   11320:	ldr	r0, [r0, #16]
   11324:	cmp	r0, #0
   11328:	bxeq	lr
   1132c:	ldr	r3, [r0, #12]
   11330:	cmp	r1, r3
   11334:	bcc	11320 <mycore_incoming_buffer_find_by_position@@Base+0x1c>
   11338:	bx	lr
   1133c:	bx	lr
   11340:	cmp	r0, #0
   11344:	bxeq	lr
   11348:	ldr	r2, [r0, #8]
   1134c:	add	r3, r3, r2
   11350:	cmp	r1, r3
   11354:	bxls	lr
   11358:	ldr	r0, [r0, #20]
   1135c:	cmp	r0, #0
   11360:	bxeq	lr
   11364:	ldr	r3, [r0, #12]
   11368:	ldr	r2, [r0, #8]
   1136c:	add	r3, r3, r2
   11370:	cmp	r1, r3
   11374:	bhi	11358 <mycore_incoming_buffer_find_by_position@@Base+0x54>
   11378:	bx	lr

0001137c <mycore_incoming_buffer_data@@Base>:
   1137c:	ldr	r0, [r0]
   11380:	bx	lr

00011384 <mycore_incoming_buffer_length@@Base>:
   11384:	ldr	r0, [r0, #4]
   11388:	bx	lr

0001138c <mycore_incoming_buffer_size@@Base>:
   1138c:	ldr	r0, [r0, #8]
   11390:	bx	lr

00011394 <mycore_incoming_buffer_offset@@Base>:
   11394:	ldr	r0, [r0, #12]
   11398:	bx	lr

0001139c <mycore_incoming_buffer_relative_begin@@Base>:
   1139c:	ldr	r0, [r0, #12]
   113a0:	sub	r0, r1, r0
   113a4:	bx	lr

000113a8 <mycore_incoming_buffer_available_length@@Base>:
   113a8:	ldr	r0, [r0, #8]
   113ac:	add	r3, r1, r2
   113b0:	cmp	r3, r0
   113b4:	subhi	r0, r0, r1
   113b8:	movls	r0, r2
   113bc:	bx	lr

000113c0 <mycore_incoming_buffer_next@@Base>:
   113c0:	ldr	r0, [r0, #20]
   113c4:	bx	lr

000113c8 <mycore_incoming_buffer_prev@@Base>:
   113c8:	ldr	r0, [r0, #16]
   113cc:	bx	lr

000113d0 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base>:
   113d0:	push	{r4, r5, r6, r7, r8, r9, lr}
   113d4:	mov	r8, r0
   113d8:	ldr	lr, [r0]
   113dc:	ldr	r2, [r1]
   113e0:	ldr	r3, [lr, #8]
   113e4:	cmp	r2, r3
   113e8:	movcs	r3, #0
   113ec:	strcs	r3, [r1]
   113f0:	ldrcs	lr, [lr, #20]
   113f4:	ldr	r5, [lr]
   113f8:	cmp	lr, #0
   113fc:	beq	114ac <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0xdc>
   11400:	ldr	r3, [r1]
   11404:	ldrb	r2, [r5, r3]
   11408:	ldr	r0, [pc, #168]	; 114b8 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0xe8>
   1140c:	add	r0, pc, r0
   11410:	ldrb	r0, [r0, r2]
   11414:	cmp	r0, #255	; 0xff
   11418:	moveq	r0, #0
   1141c:	beq	114b0 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0xe0>
   11420:	mov	r0, #0
   11424:	mov	r4, r0
   11428:	ldr	r6, [pc, #140]	; 114bc <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0xec>
   1142c:	add	r6, pc, r6
   11430:	mov	r9, r0
   11434:	ldr	r7, [pc, #132]	; 114c0 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0xf0>
   11438:	add	r7, pc, r7
   1143c:	b	1146c <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x9c>
   11440:	cmp	lr, #0
   11444:	beq	114b0 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0xe0>
   11448:	ldr	r3, [r1]
   1144c:	ldrb	r2, [r5, r3]
   11450:	ldrb	ip, [r7, r2]
   11454:	subs	ip, ip, #255	; 0xff
   11458:	movne	ip, #1
   1145c:	cmp	r4, #5
   11460:	movhi	ip, #0
   11464:	cmp	ip, #0
   11468:	beq	114b0 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0xe0>
   1146c:	add	r2, r6, r2
   11470:	ldrb	r2, [r2, #256]	; 0x100
   11474:	orr	r0, r2, r0, lsl #4
   11478:	add	r4, r4, #1
   1147c:	add	r3, r3, #1
   11480:	str	r3, [r1]
   11484:	ldr	r2, [lr, #8]
   11488:	cmp	r3, r2
   1148c:	bcc	11440 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x70>
   11490:	ldr	r3, [lr, #20]
   11494:	cmp	r3, #0
   11498:	beq	114b0 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0xe0>
   1149c:	str	r9, [r1]
   114a0:	ldr	r5, [lr]
   114a4:	ldr	lr, [lr, #20]
   114a8:	b	11440 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x70>
   114ac:	mov	r0, #0
   114b0:	str	lr, [r8]
   114b4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   114b8:	andeq	lr, r1, r8, lsr #15
   114bc:	andeq	lr, r1, r8, lsl #15
   114c0:	andeq	lr, r1, ip, ror r7

000114c4 <mycore_incoming_buffer_escaped_case_cmp@@Base>:
   114c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   114c8:	sub	sp, sp, #20
   114cc:	ldr	ip, [r0]
   114d0:	str	ip, [sp, #12]
   114d4:	ldr	r4, [r3]
   114d8:	ldr	lr, [ip, #8]
   114dc:	cmp	r4, lr
   114e0:	bcc	11500 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x3c>
   114e4:	ldr	lr, [ip, #20]
   114e8:	cmp	lr, #0
   114ec:	beq	11614 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x150>
   114f0:	mov	lr, #0
   114f4:	str	lr, [r3]
   114f8:	ldr	ip, [ip, #20]
   114fc:	str	ip, [sp, #12]
   11500:	mov	r4, r3
   11504:	mov	r8, r2
   11508:	str	r0, [sp, #4]
   1150c:	ldr	r3, [sp, #12]
   11510:	ldr	r0, [r3]
   11514:	cmp	r2, #0
   11518:	beq	115f8 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x134>
   1151c:	mov	r5, r1
   11520:	mov	r6, #0
   11524:	ldr	r7, [pc, #240]	; 1161c <mycore_incoming_buffer_escaped_case_cmp@@Base+0x158>
   11528:	add	r7, pc, r7
   1152c:	add	fp, sp, #12
   11530:	ldr	sl, [pc, #232]	; 11620 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x15c>
   11534:	add	sl, pc, sl
   11538:	mov	r9, r6
   1153c:	b	11590 <mycore_incoming_buffer_escaped_case_cmp@@Base+0xcc>
   11540:	add	r3, r3, #1
   11544:	str	r3, [r4]
   11548:	mov	r1, r4
   1154c:	mov	r0, fp
   11550:	bl	101f0 <mycore_incoming_buffer_convert_one_escaped_to_code_point@plt>
   11554:	cmp	r0, #255	; 0xff
   11558:	bhi	115fc <mycore_incoming_buffer_escaped_case_cmp@@Base+0x138>
   1155c:	add	r0, sl, r0
   11560:	ldrb	r3, [r5]
   11564:	add	r3, sl, r3
   11568:	ldrb	r2, [r0, #512]	; 0x200
   1156c:	ldrb	r3, [r3, #512]	; 0x200
   11570:	cmp	r2, r3
   11574:	bne	115fc <mycore_incoming_buffer_escaped_case_cmp@@Base+0x138>
   11578:	ldr	r3, [sp, #12]
   1157c:	ldr	r0, [r3]
   11580:	b	115c4 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x100>
   11584:	add	r5, r5, #1
   11588:	cmp	r8, r6
   1158c:	beq	115fc <mycore_incoming_buffer_escaped_case_cmp@@Base+0x138>
   11590:	ldr	r3, [r4]
   11594:	ldrb	r2, [r0, r3]
   11598:	cmp	r2, #92	; 0x5c
   1159c:	beq	11540 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x7c>
   115a0:	add	r2, r7, r2
   115a4:	ldrb	r1, [r5]
   115a8:	add	r1, r7, r1
   115ac:	ldrb	ip, [r2, #512]	; 0x200
   115b0:	ldrb	r2, [r1, #512]	; 0x200
   115b4:	cmp	ip, r2
   115b8:	bne	115fc <mycore_incoming_buffer_escaped_case_cmp@@Base+0x138>
   115bc:	add	r3, r3, #1
   115c0:	str	r3, [r4]
   115c4:	add	r6, r6, #1
   115c8:	ldr	r3, [sp, #12]
   115cc:	ldr	r1, [r4]
   115d0:	ldr	r2, [r3, #8]
   115d4:	cmp	r1, r2
   115d8:	bcc	11584 <mycore_incoming_buffer_escaped_case_cmp@@Base+0xc0>
   115dc:	ldr	r3, [r3, #20]
   115e0:	cmp	r3, #0
   115e4:	beq	115fc <mycore_incoming_buffer_escaped_case_cmp@@Base+0x138>
   115e8:	str	r3, [sp, #12]
   115ec:	ldr	r0, [r3]
   115f0:	str	r9, [r4]
   115f4:	b	11584 <mycore_incoming_buffer_escaped_case_cmp@@Base+0xc0>
   115f8:	mov	r6, r2
   115fc:	ldr	r3, [sp, #12]
   11600:	ldr	r2, [sp, #4]
   11604:	str	r3, [r2]
   11608:	sub	r0, r8, r6
   1160c:	add	sp, sp, #20
   11610:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11614:	mov	r0, r2
   11618:	b	1160c <mycore_incoming_buffer_escaped_case_cmp@@Base+0x148>
   1161c:	andeq	lr, r1, ip, lsl #13
   11620:	andeq	lr, r1, r0, lsl #13

00011624 <mycore_string_clean@@Base>:
   11624:	mov	r3, #0
   11628:	str	r3, [r0, #8]
   1162c:	bx	lr

00011630 <mycore_string_init@@Base>:
   11630:	push	{r4, r5, r6, r7, r8, lr}
   11634:	mov	r6, r0
   11638:	mov	r7, r1
   1163c:	mov	r4, r2
   11640:	mov	r5, r3
   11644:	mov	r2, r3
   11648:	bl	10910 <mchar_async_malloc@plt>
   1164c:	str	r0, [r4]
   11650:	str	r5, [r4, #4]
   11654:	str	r7, [r4, #16]
   11658:	str	r6, [r4, #12]
   1165c:	mov	r0, r4
   11660:	bl	10d18 <mycore_string_clean@plt>
   11664:	ldr	r0, [r4]
   11668:	pop	{r4, r5, r6, r7, r8, pc}

0001166c <mycore_string_clean_all@@Base>:
   1166c:	mov	r3, #0
   11670:	str	r3, [r0]
   11674:	str	r3, [r0, #4]
   11678:	str	r3, [r0, #8]
   1167c:	str	r3, [r0, #12]
   11680:	str	r3, [r0, #16]
   11684:	bx	lr

00011688 <mycore_string_destroy@@Base>:
   11688:	push	{r4, r5, r6, lr}
   1168c:	subs	r4, r0, #0
   11690:	beq	116c0 <mycore_string_destroy@@Base+0x38>
   11694:	mov	r5, r1
   11698:	ldr	r2, [r4]
   1169c:	cmp	r2, #0
   116a0:	beq	116b8 <mycore_string_destroy@@Base+0x30>
   116a4:	ldr	r0, [r4, #12]
   116a8:	cmp	r0, #0
   116ac:	beq	116b8 <mycore_string_destroy@@Base+0x30>
   116b0:	ldr	r1, [r4, #16]
   116b4:	bl	10718 <mchar_async_free@plt>
   116b8:	cmp	r5, #0
   116bc:	bne	116c8 <mycore_string_destroy@@Base+0x40>
   116c0:	mov	r0, r4
   116c4:	pop	{r4, r5, r6, pc}
   116c8:	mov	r0, r4
   116cc:	bl	10dcc <mycore_free@plt>
   116d0:	mov	r4, #0
   116d4:	b	116c0 <mycore_string_destroy@@Base+0x38>

000116d8 <mycore_string_raw_clean@@Base>:
   116d8:	mov	r3, #0
   116dc:	str	r3, [r0, #8]
   116e0:	bx	lr

000116e4 <mycore_string_raw_clean_all@@Base>:
   116e4:	mov	r3, #0
   116e8:	str	r3, [r0]
   116ec:	str	r3, [r0, #4]
   116f0:	str	r3, [r0, #8]
   116f4:	bx	lr

000116f8 <mycore_string_raw_destroy@@Base>:
   116f8:	push	{r4, r5, r6, lr}
   116fc:	subs	r4, r0, #0
   11700:	beq	11728 <mycore_string_raw_destroy@@Base+0x30>
   11704:	mov	r5, r1
   11708:	ldr	r0, [r4]
   1170c:	cmp	r0, #0
   11710:	beq	11720 <mycore_string_raw_destroy@@Base+0x28>
   11714:	bl	10dcc <mycore_free@plt>
   11718:	mov	r3, #0
   1171c:	str	r3, [r4]
   11720:	cmp	r5, #0
   11724:	bne	11730 <mycore_string_raw_destroy@@Base+0x38>
   11728:	mov	r0, r4
   1172c:	pop	{r4, r5, r6, pc}
   11730:	mov	r0, r4
   11734:	bl	10dcc <mycore_free@plt>
   11738:	mov	r4, #0
   1173c:	b	11728 <mycore_string_raw_destroy@@Base+0x30>

00011740 <mycore_string_realloc@@Base>:
   11740:	push	{r4, r5, lr}
   11744:	sub	sp, sp, #12
   11748:	subs	r4, r0, #0
   1174c:	beq	11780 <mycore_string_realloc@@Base+0x40>
   11750:	mov	r5, r1
   11754:	ldr	r3, [r4, #8]
   11758:	ldr	r2, [r4]
   1175c:	ldr	r1, [r4, #16]
   11760:	ldr	r0, [r4, #12]
   11764:	str	r5, [sp]
   11768:	bl	ffbc <mchar_async_realloc@plt>
   1176c:	cmp	r0, #0
   11770:	strne	r5, [r4, #4]
   11774:	strne	r0, [r4]
   11778:	add	sp, sp, #12
   1177c:	pop	{r4, r5, pc}
   11780:	mov	r0, #0
   11784:	b	11778 <mycore_string_realloc@@Base+0x38>

00011788 <mycore_string_data_alloc@@Base>:
   11788:	push	{r4, lr}
   1178c:	bl	10910 <mchar_async_malloc@plt>
   11790:	pop	{r4, pc}

00011794 <mycore_string_data_realloc@@Base>:
   11794:	push	{lr}		; (str lr, [sp, #-4]!)
   11798:	sub	sp, sp, #12
   1179c:	ldr	ip, [sp, #16]
   117a0:	str	ip, [sp]
   117a4:	bl	ffbc <mchar_async_realloc@plt>
   117a8:	add	sp, sp, #12
   117ac:	pop	{pc}		; (ldr pc, [sp], #4)

000117b0 <mycore_string_data_free@@Base>:
   117b0:	push	{r4, lr}
   117b4:	bl	10718 <mchar_async_free@plt>
   117b8:	pop	{r4, pc}

000117bc <mycore_string_data@@Base>:
   117bc:	cmp	r0, #0
   117c0:	ldrne	r0, [r0]
   117c4:	moveq	r0, #0
   117c8:	bx	lr

000117cc <mycore_string_length@@Base>:
   117cc:	cmp	r0, #0
   117d0:	ldrne	r0, [r0, #8]
   117d4:	moveq	r0, #0
   117d8:	bx	lr

000117dc <mycore_string_size@@Base>:
   117dc:	cmp	r0, #0
   117e0:	ldrne	r0, [r0, #4]
   117e4:	moveq	r0, #0
   117e8:	bx	lr

000117ec <mycore_string_data_set@@Base>:
   117ec:	cmp	r0, #0
   117f0:	strne	r1, [r0]
   117f4:	movne	r0, r1
   117f8:	moveq	r0, #0
   117fc:	bx	lr

00011800 <mycore_string_size_set@@Base>:
   11800:	cmp	r0, #0
   11804:	strne	r1, [r0, #4]
   11808:	movne	r0, r1
   1180c:	moveq	r0, #0
   11810:	bx	lr

00011814 <mycore_string_length_set@@Base>:
   11814:	cmp	r0, #0
   11818:	strne	r1, [r0, #8]
   1181c:	movne	r0, r1
   11820:	moveq	r0, #0
   11824:	bx	lr

00011828 <mycore_string_append@@Base>:
   11828:	push	{r4, r5, r6, lr}
   1182c:	mov	r4, r0
   11830:	mov	r6, r1
   11834:	mov	r5, r2
   11838:	add	r1, r2, #1
   1183c:	ldr	r3, [r0, #8]
   11840:	add	r1, r1, r3
   11844:	ldr	r3, [r0, #4]
   11848:	cmp	r1, r3
   1184c:	bcs	11884 <mycore_string_append@@Base+0x5c>
   11850:	ldr	r0, [r4]
   11854:	ldr	r3, [r4, #8]
   11858:	mov	r2, r5
   1185c:	mov	r1, r6
   11860:	add	r0, r0, r3
   11864:	bl	ff5c <memcpy@plt>
   11868:	ldr	r3, [r4, #8]
   1186c:	add	r5, r5, r3
   11870:	str	r5, [r4, #8]
   11874:	ldr	r3, [r4]
   11878:	mov	r2, #0
   1187c:	strb	r2, [r3, r5]
   11880:	pop	{r4, r5, r6, pc}
   11884:	bl	10964 <mycore_string_realloc@plt>
   11888:	b	11850 <mycore_string_append@@Base+0x28>

0001188c <mycore_string_append_one@@Base>:
   1188c:	push	{r4, r5, r6, lr}
   11890:	mov	r4, r0
   11894:	mov	r5, r1
   11898:	ldr	r1, [r0, #8]
   1189c:	add	r2, r1, #2
   118a0:	ldr	r3, [r0, #4]
   118a4:	cmp	r2, r3
   118a8:	bcs	118d4 <mycore_string_append_one@@Base+0x48>
   118ac:	ldr	r2, [r4]
   118b0:	ldr	r3, [r4, #8]
   118b4:	strb	r5, [r2, r3]
   118b8:	ldr	r3, [r4, #8]
   118bc:	add	r3, r3, #1
   118c0:	str	r3, [r4, #8]
   118c4:	ldr	r2, [r4]
   118c8:	mov	r1, #0
   118cc:	strb	r1, [r2, r3]
   118d0:	pop	{r4, r5, r6, pc}
   118d4:	add	r1, r1, #3
   118d8:	bl	10964 <mycore_string_realloc@plt>
   118dc:	b	118ac <mycore_string_append_one@@Base+0x20>

000118e0 <mycore_string_append_lowercase@@Base>:
   118e0:	push	{r4, r5, r6, lr}
   118e4:	mov	r5, r0
   118e8:	mov	r4, r1
   118ec:	mov	r6, r2
   118f0:	add	r1, r2, #1
   118f4:	ldr	r3, [r0, #8]
   118f8:	add	r1, r1, r3
   118fc:	ldr	r3, [r0, #4]
   11900:	cmp	r1, r3
   11904:	bcs	11960 <mycore_string_append_lowercase@@Base+0x80>
   11908:	ldr	lr, [r5]
   1190c:	ldr	r3, [r5, #8]
   11910:	add	lr, lr, r3
   11914:	cmp	r6, #0
   11918:	beq	11968 <mycore_string_append_lowercase@@Base+0x88>
   1191c:	mov	r3, r4
   11920:	sub	r2, lr, #1
   11924:	add	r1, r4, r6
   11928:	ldr	ip, [pc, #64]	; 11970 <mycore_string_append_lowercase@@Base+0x90>
   1192c:	add	ip, pc, ip
   11930:	ldrb	r0, [r3], #1
   11934:	ldrb	r0, [ip, r0]
   11938:	strb	r0, [r2, #1]!
   1193c:	cmp	r3, r1
   11940:	bne	11930 <mycore_string_append_lowercase@@Base+0x50>
   11944:	mov	r2, r6
   11948:	mov	r3, #0
   1194c:	strb	r3, [lr, r2]
   11950:	ldr	r3, [r5, #8]
   11954:	add	r6, r3, r6
   11958:	str	r6, [r5, #8]
   1195c:	pop	{r4, r5, r6, pc}
   11960:	bl	10964 <mycore_string_realloc@plt>
   11964:	b	11908 <mycore_string_append_lowercase@@Base+0x28>
   11968:	mov	r2, r6
   1196c:	b	11948 <mycore_string_append_lowercase@@Base+0x68>
   11970:	andeq	lr, r1, r8, lsl #11

00011974 <mycore_string_copy@@Base>:
   11974:	push	{r4, lr}
   11978:	ldr	r2, [r1, #8]
   1197c:	ldr	r1, [r1]
   11980:	bl	108d4 <mycore_string_append@plt>
   11984:	pop	{r4, pc}

00011988 <mycore_string_raw_copy@@Base>:
   11988:	add	r3, r0, r2
   1198c:	mov	ip, #0
   11990:	strb	ip, [r0, r2]
   11994:	cmp	r2, ip
   11998:	beq	119b0 <mycore_string_raw_copy@@Base+0x28>
   1199c:	add	r2, r1, r2
   119a0:	ldrb	r0, [r2, #-1]!
   119a4:	strb	r0, [r3, #-1]!
   119a8:	cmp	r2, r1
   119ac:	bne	119a0 <mycore_string_raw_copy@@Base+0x18>
   119b0:	mov	r0, #0
   119b4:	bx	lr

000119b8 <mycore_string_raw_set_replacement_character@@Base>:
   119b8:	ldr	r3, [r0]
   119bc:	mvn	r2, #16
   119c0:	strb	r2, [r3, r1]
   119c4:	ldr	r3, [r0]
   119c8:	add	r3, r3, r1
   119cc:	mvn	r2, #64	; 0x40
   119d0:	strb	r2, [r3, #1]
   119d4:	ldr	r3, [r0]
   119d8:	add	r1, r3, r1
   119dc:	mvn	r3, #66	; 0x42
   119e0:	strb	r3, [r1, #2]
   119e4:	mov	r0, #3
   119e8:	bx	lr

000119ec <mycore_string_append_with_replacement_null_characters@@Base>:
   119ec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   119f0:	mov	r4, r0
   119f4:	mov	r7, r1
   119f8:	mov	r6, r2
   119fc:	add	r1, r2, #1
   11a00:	ldr	r3, [r0, #8]
   11a04:	add	r1, r1, r3
   11a08:	ldr	r3, [r0, #4]
   11a0c:	cmp	r1, r3
   11a10:	bcs	11a38 <mycore_string_append_with_replacement_null_characters@@Base+0x4c>
   11a14:	ldr	r2, [r4]
   11a18:	cmp	r6, #0
   11a1c:	beq	11aa8 <mycore_string_append_with_replacement_null_characters@@Base+0xbc>
   11a20:	mov	r5, r7
   11a24:	add	r6, r7, r6
   11a28:	mvn	r9, #16
   11a2c:	mvn	r8, #64	; 0x40
   11a30:	mvn	r7, #66	; 0x42
   11a34:	b	11a90 <mycore_string_append_with_replacement_null_characters@@Base+0xa4>
   11a38:	bl	10964 <mycore_string_realloc@plt>
   11a3c:	b	11a14 <mycore_string_append_with_replacement_null_characters@@Base+0x28>
   11a40:	ldr	r1, [r4, #4]
   11a44:	add	r1, r1, #5
   11a48:	mov	r0, r4
   11a4c:	bl	10964 <mycore_string_realloc@plt>
   11a50:	ldr	r2, [r4]
   11a54:	ldr	r3, [r4, #8]
   11a58:	strb	r9, [r2, r3]
   11a5c:	ldr	r3, [r4, #8]
   11a60:	add	r3, r3, #1
   11a64:	str	r3, [r4, #8]
   11a68:	strb	r8, [r2, r3]
   11a6c:	ldr	r3, [r4, #8]
   11a70:	add	r3, r3, #1
   11a74:	str	r3, [r4, #8]
   11a78:	strb	r7, [r2, r3]
   11a7c:	ldr	r3, [r4, #8]
   11a80:	add	r3, r3, #1
   11a84:	str	r3, [r4, #8]
   11a88:	cmp	r5, r6
   11a8c:	beq	11aa8 <mycore_string_append_with_replacement_null_characters@@Base+0xbc>
   11a90:	ldrb	r3, [r5], #1
   11a94:	cmp	r3, #0
   11a98:	beq	11a40 <mycore_string_append_with_replacement_null_characters@@Base+0x54>
   11a9c:	ldr	r1, [r4, #8]
   11aa0:	strb	r3, [r2, r1]
   11aa4:	b	11a7c <mycore_string_append_with_replacement_null_characters@@Base+0x90>
   11aa8:	ldr	r2, [r4]
   11aac:	ldr	r3, [r4, #8]
   11ab0:	mov	r1, #0
   11ab4:	strb	r1, [r2, r3]
   11ab8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00011abc <mycore_string_stay_only_whitespace@@Base>:
   11abc:	push	{r4, r5, lr}
   11ac0:	ldr	r5, [r0]
   11ac4:	ldr	r1, [r0, #8]
   11ac8:	cmp	r1, #0
   11acc:	beq	11b1c <mycore_string_stay_only_whitespace@@Base+0x60>
   11ad0:	sub	lr, r5, #1
   11ad4:	mov	r2, #0
   11ad8:	mov	r1, r2
   11adc:	ldr	r4, [pc, #64]	; 11b24 <mycore_string_stay_only_whitespace@@Base+0x68>
   11ae0:	b	11b04 <mycore_string_stay_only_whitespace@@Base+0x48>
   11ae4:	lsr	r3, r4, r3
   11ae8:	tst	r3, #1
   11aec:	strbne	ip, [r5, r1]
   11af0:	addne	r1, r1, #1
   11af4:	add	r2, r2, #1
   11af8:	ldr	r3, [r0, #8]
   11afc:	cmp	r3, r2
   11b00:	bls	11b1c <mycore_string_stay_only_whitespace@@Base+0x60>
   11b04:	ldrb	ip, [lr, #1]!
   11b08:	sub	r3, ip, #9
   11b0c:	uxtb	r3, r3
   11b10:	cmp	r3, #23
   11b14:	bhi	11af4 <mycore_string_stay_only_whitespace@@Base+0x38>
   11b18:	b	11ae4 <mycore_string_stay_only_whitespace@@Base+0x28>
   11b1c:	str	r1, [r0, #8]
   11b20:	pop	{r4, r5, pc}
   11b24:	addeq	r0, r0, fp, lsl r0

00011b28 <mycore_string_crop_whitespace_from_begin@@Base>:
   11b28:	push	{r4, r5, r6, lr}
   11b2c:	mov	r5, r0
   11b30:	ldr	r0, [r0]
   11b34:	ldr	r1, [r5, #8]
   11b38:	cmp	r1, #0
   11b3c:	beq	11bd4 <mycore_string_crop_whitespace_from_begin@@Base+0xac>
   11b40:	ldrb	r3, [r0]
   11b44:	sub	r3, r3, #9
   11b48:	uxtb	r3, r3
   11b4c:	cmp	r3, #23
   11b50:	movhi	r4, #0
   11b54:	bhi	11bb0 <mycore_string_crop_whitespace_from_begin@@Base+0x88>
   11b58:	ldr	r2, [pc, #124]	; 11bdc <mycore_string_crop_whitespace_from_begin@@Base+0xb4>
   11b5c:	lsr	r3, r2, r3
   11b60:	tst	r3, #1
   11b64:	moveq	r4, #0
   11b68:	beq	11bb0 <mycore_string_crop_whitespace_from_begin@@Base+0x88>
   11b6c:	mov	r2, r0
   11b70:	mov	r4, #0
   11b74:	ldr	ip, [pc, #96]	; 11bdc <mycore_string_crop_whitespace_from_begin@@Base+0xb4>
   11b78:	b	11b88 <mycore_string_crop_whitespace_from_begin@@Base+0x60>
   11b7c:	lsr	r3, ip, r3
   11b80:	tst	r3, #1
   11b84:	beq	11ba8 <mycore_string_crop_whitespace_from_begin@@Base+0x80>
   11b88:	add	r4, r4, #1
   11b8c:	cmp	r4, r1
   11b90:	beq	11ba8 <mycore_string_crop_whitespace_from_begin@@Base+0x80>
   11b94:	ldrb	r3, [r2, #1]!
   11b98:	sub	r3, r3, #9
   11b9c:	uxtb	r3, r3
   11ba0:	cmp	r3, #23
   11ba4:	bls	11b7c <mycore_string_crop_whitespace_from_begin@@Base+0x54>
   11ba8:	cmp	r4, #0
   11bac:	bne	11bc4 <mycore_string_crop_whitespace_from_begin@@Base+0x9c>
   11bb0:	ldr	r3, [r5, #8]
   11bb4:	sub	r3, r3, r4
   11bb8:	str	r3, [r5, #8]
   11bbc:	mov	r0, r4
   11bc0:	pop	{r4, r5, r6, pc}
   11bc4:	mov	r1, r4
   11bc8:	bl	10c64 <mchar_async_crop_first_chars_without_cache@plt>
   11bcc:	str	r0, [r5]
   11bd0:	b	11bb0 <mycore_string_crop_whitespace_from_begin@@Base+0x88>
   11bd4:	mov	r4, r1
   11bd8:	b	11bb0 <mycore_string_crop_whitespace_from_begin@@Base+0x88>
   11bdc:	addeq	r0, r0, fp, lsl r0

00011be0 <mycore_string_whitespace_from_begin@@Base>:
   11be0:	ldr	r2, [r0]
   11be4:	ldr	r1, [r0, #8]
   11be8:	cmp	r1, #0
   11bec:	beq	11c54 <mycore_string_whitespace_from_begin@@Base+0x74>
   11bf0:	ldrb	r3, [r2]
   11bf4:	sub	r3, r3, #9
   11bf8:	uxtb	r3, r3
   11bfc:	cmp	r3, #23
   11c00:	bhi	11c5c <mycore_string_whitespace_from_begin@@Base+0x7c>
   11c04:	ldr	r0, [pc, #96]	; 11c6c <mycore_string_whitespace_from_begin@@Base+0x8c>
   11c08:	lsr	r3, r0, r3
   11c0c:	tst	r3, #1
   11c10:	beq	11c64 <mycore_string_whitespace_from_begin@@Base+0x84>
   11c14:	mov	r0, #0
   11c18:	ldr	ip, [pc, #76]	; 11c6c <mycore_string_whitespace_from_begin@@Base+0x8c>
   11c1c:	b	11c2c <mycore_string_whitespace_from_begin@@Base+0x4c>
   11c20:	lsr	r3, ip, r3
   11c24:	tst	r3, #1
   11c28:	bxeq	lr
   11c2c:	add	r0, r0, #1
   11c30:	cmp	r0, r1
   11c34:	beq	11c50 <mycore_string_whitespace_from_begin@@Base+0x70>
   11c38:	ldrb	r3, [r2, #1]!
   11c3c:	sub	r3, r3, #9
   11c40:	uxtb	r3, r3
   11c44:	cmp	r3, #23
   11c48:	bxhi	lr
   11c4c:	b	11c20 <mycore_string_whitespace_from_begin@@Base+0x40>
   11c50:	bx	lr
   11c54:	mov	r0, r1
   11c58:	bx	lr
   11c5c:	mov	r0, #0
   11c60:	bx	lr
   11c64:	mov	r0, #0
   11c68:	bx	lr
   11c6c:	addeq	r0, r0, fp, lsl r0

00011c70 <mythread_create@@Base>:
   11c70:	push	{r4, lr}
   11c74:	mov	r1, #40	; 0x28
   11c78:	mov	r0, #1
   11c7c:	bl	ff14 <mycore_calloc@plt>
   11c80:	pop	{r4, pc}

00011c84 <mythread_init@@Base>:
   11c84:	cmp	r2, #0
   11c88:	bne	11c94 <mythread_init@@Base+0x10>
   11c8c:	mov	r0, #1
   11c90:	bx	lr
   11c94:	push	{r4, lr}
   11c98:	mov	r4, r0
   11c9c:	str	r2, [r0, #8]
   11ca0:	mov	r0, #0
   11ca4:	str	r0, [r4, #4]
   11ca8:	str	r3, [r4, #12]
   11cac:	str	r1, [r4, #32]
   11cb0:	mov	r1, #40	; 0x28
   11cb4:	mov	r0, r2
   11cb8:	bl	ff14 <mycore_calloc@plt>
   11cbc:	str	r0, [r4]
   11cc0:	cmp	r0, #0
   11cc4:	beq	11cf0 <mythread_init@@Base+0x6c>
   11cc8:	mov	r0, r4
   11ccc:	bl	fe84 <mythread_thread_attr_init@plt>
   11cd0:	str	r0, [r4, #20]
   11cd4:	cmp	r0, #0
   11cd8:	beq	11cf8 <mythread_init@@Base+0x74>
   11cdc:	mov	r0, r4
   11ce0:	bl	fca4 <mythread_nanosleep_create@plt>
   11ce4:	str	r0, [r4, #24]
   11ce8:	mov	r0, #0
   11cec:	pop	{r4, pc}
   11cf0:	mov	r0, #2
   11cf4:	pop	{r4, pc}
   11cf8:	mov	r0, #12
   11cfc:	pop	{r4, pc}

00011d00 <mythread_clean@@Base>:
   11d00:	push	{r4, lr}
   11d04:	mov	r4, r0
   11d08:	ldr	r1, [r0, #20]
   11d0c:	bl	1040c <mythread_thread_attr_clean@plt>
   11d10:	ldr	r0, [r4, #24]
   11d14:	bl	fc5c <mythread_nanosleep_clean@plt>
   11d18:	mov	r3, #0
   11d1c:	str	r3, [r4, #28]
   11d20:	pop	{r4, pc}

00011d24 <myhread_entry_create@@Base>:
   11d24:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11d28:	mov	ip, #0
   11d2c:	str	ip, [r0, #28]
   11d30:	ldr	ip, [r0, #4]
   11d34:	ldr	lr, [r0, #8]
   11d38:	cmp	ip, lr
   11d3c:	movcs	r6, #15
   11d40:	bcc	11d4c <myhread_entry_create@@Base+0x28>
   11d44:	mov	r0, r6
   11d48:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11d4c:	mov	r8, r1
   11d50:	mov	r4, r0
   11d54:	add	ip, ip, ip, lsl #2
   11d58:	lsl	r5, ip, #3
   11d5c:	ldr	r9, [r0]
   11d60:	add	r7, r9, r5
   11d64:	str	r0, [r7, #32]
   11d68:	str	r2, [r7, #8]
   11d6c:	ldr	r2, [r0, #4]
   11d70:	str	r2, [r7, #4]
   11d74:	ldr	r2, [r0, #8]
   11d78:	str	r2, [r7, #12]
   11d7c:	str	r3, [r7, #16]
   11d80:	mov	r3, #0
   11d84:	str	r3, [r7, #20]
   11d88:	bl	fca4 <mythread_nanosleep_create@plt>
   11d8c:	str	r0, [r7, #28]
   11d90:	mov	r0, r4
   11d94:	bl	10afc <mythread_mutex_create@plt>
   11d98:	str	r0, [r7, #24]
   11d9c:	cmp	r0, #0
   11da0:	moveq	r6, #71	; 0x47
   11da4:	beq	11d44 <myhread_entry_create@@Base+0x20>
   11da8:	mov	r1, r0
   11dac:	mov	r0, r4
   11db0:	bl	10d9c <mythread_mutex_wait@plt>
   11db4:	subs	r6, r0, #0
   11db8:	beq	11dd0 <myhread_entry_create@@Base+0xac>
   11dbc:	ldr	r1, [r7, #24]
   11dc0:	mov	r0, r4
   11dc4:	bl	10634 <mythread_mutex_close@plt>
   11dc8:	mov	r6, #72	; 0x48
   11dcc:	b	11d44 <myhread_entry_create@@Base+0x20>
   11dd0:	add	r2, r7, #4
   11dd4:	mov	r1, r8
   11dd8:	mov	r0, r4
   11ddc:	bl	fd88 <mythread_thread_create@plt>
   11de0:	str	r0, [r9, r5]
   11de4:	cmp	r0, #0
   11de8:	ldrne	r3, [r4, #4]
   11dec:	addne	r3, r3, #1
   11df0:	strne	r3, [r4, #4]
   11df4:	bne	11d44 <myhread_entry_create@@Base+0x20>
   11df8:	ldr	r1, [r7, #24]
   11dfc:	mov	r0, r4
   11e00:	bl	10634 <mythread_mutex_close@plt>
   11e04:	mov	r6, #1
   11e08:	b	11d44 <myhread_entry_create@@Base+0x20>

00011e0c <myhread_increase_id_by_entry_id@@Base>:
   11e0c:	ldr	r0, [r0, #12]
   11e10:	add	r0, r1, r0
   11e14:	bx	lr

00011e18 <mythread_join@@Base>:
   11e18:	ldr	r3, [r0, #4]
   11e1c:	cmp	r3, #0
   11e20:	beq	11e90 <mythread_join@@Base+0x78>
   11e24:	push	{r4, r5, r6, r7, r8, lr}
   11e28:	mov	r8, r2
   11e2c:	mov	r7, r1
   11e30:	mov	r4, r0
   11e34:	mov	r5, #0
   11e38:	mov	r6, r5
   11e3c:	b	11e6c <mythread_join@@Base+0x54>
   11e40:	ldr	r3, [r4]
   11e44:	ldr	r1, [r3, r5]
   11e48:	mov	r0, r4
   11e4c:	bl	10568 <mythread_thread_join@plt>
   11e50:	cmp	r0, #0
   11e54:	bne	11e98 <mythread_join@@Base+0x80>
   11e58:	add	r6, r6, #1
   11e5c:	add	r5, r5, #40	; 0x28
   11e60:	ldr	r3, [r4, #4]
   11e64:	cmp	r3, r6
   11e68:	bls	11e8c <mythread_join@@Base+0x74>
   11e6c:	cmp	r7, #0
   11e70:	beq	11e40 <mythread_join@@Base+0x28>
   11e74:	ldr	r1, [r4]
   11e78:	mov	r2, r8
   11e7c:	add	r1, r1, r5
   11e80:	mov	r0, r4
   11e84:	blx	r7
   11e88:	b	11e40 <mythread_join@@Base+0x28>
   11e8c:	pop	{r4, r5, r6, r7, r8, pc}
   11e90:	mov	r0, #0
   11e94:	bx	lr
   11e98:	mov	r0, #1
   11e9c:	pop	{r4, r5, r6, r7, r8, pc}

00011ea0 <mythread_check_status@@Base>:
   11ea0:	ldr	ip, [r0, #4]
   11ea4:	cmp	ip, #0
   11ea8:	beq	11ee8 <mythread_check_status@@Base+0x48>
   11eac:	ldr	r3, [r0]
   11eb0:	ldr	r0, [r3, #20]
   11eb4:	cmp	r0, #0
   11eb8:	bxne	lr
   11ebc:	mov	r2, #0
   11ec0:	add	r2, r2, #1
   11ec4:	cmp	r2, ip
   11ec8:	beq	11ee4 <mythread_check_status@@Base+0x44>
   11ecc:	add	r3, r3, #40	; 0x28
   11ed0:	ldr	r1, [r3, #20]
   11ed4:	cmp	r1, #0
   11ed8:	beq	11ec0 <mythread_check_status@@Base+0x20>
   11edc:	mov	r0, r1
   11ee0:	bx	lr
   11ee4:	bx	lr
   11ee8:	mov	r0, #0
   11eec:	bx	lr

00011ef0 <mythread_option@@Base>:
   11ef0:	ldr	r0, [r0, #36]	; 0x24
   11ef4:	bx	lr

00011ef8 <mythread_option_set@@Base>:
   11ef8:	str	r1, [r0, #36]	; 0x24
   11efc:	bx	lr

00011f00 <mythread_quit@@Base>:
   11f00:	push	{r4, r5, r6, r7, r8, lr}
   11f04:	mov	r4, r0
   11f08:	mov	r7, r1
   11f0c:	mov	r8, r2
   11f10:	mov	r1, #2
   11f14:	bl	10ae4 <mythread_option_set@plt>
   11f18:	ldr	r3, [r4, #4]
   11f1c:	cmp	r3, #0
   11f20:	beq	11f98 <mythread_quit@@Base+0x98>
   11f24:	mov	r5, #0
   11f28:	mov	r6, r5
   11f2c:	b	11f74 <mythread_quit@@Base+0x74>
   11f30:	ldr	r3, [r4]
   11f34:	ldr	r1, [r3, r5]
   11f38:	mov	r0, r4
   11f3c:	bl	10568 <mythread_thread_join@plt>
   11f40:	cmp	r0, #0
   11f44:	bne	11fa0 <mythread_quit@@Base+0xa0>
   11f48:	ldr	r3, [r4]
   11f4c:	ldr	r1, [r3, r5]
   11f50:	mov	r0, r4
   11f54:	bl	109f4 <mythread_thread_destroy@plt>
   11f58:	cmp	r0, #0
   11f5c:	bne	11fa8 <mythread_quit@@Base+0xa8>
   11f60:	add	r6, r6, #1
   11f64:	add	r5, r5, #40	; 0x28
   11f68:	ldr	r3, [r4, #4]
   11f6c:	cmp	r3, r6
   11f70:	bls	11f94 <mythread_quit@@Base+0x94>
   11f74:	cmp	r7, #0
   11f78:	beq	11f30 <mythread_quit@@Base+0x30>
   11f7c:	ldr	r1, [r4]
   11f80:	mov	r2, r8
   11f84:	add	r1, r1, r5
   11f88:	mov	r0, r4
   11f8c:	blx	r7
   11f90:	b	11f30 <mythread_quit@@Base+0x30>
   11f94:	pop	{r4, r5, r6, r7, r8, pc}
   11f98:	mov	r0, #0
   11f9c:	pop	{r4, r5, r6, r7, r8, pc}
   11fa0:	mov	r0, #1
   11fa4:	pop	{r4, r5, r6, r7, r8, pc}
   11fa8:	mov	r0, #1
   11fac:	pop	{r4, r5, r6, r7, r8, pc}

00011fb0 <mythread_stop@@Base>:
   11fb0:	ldr	r3, [r0, #36]	; 0x24
   11fb4:	tst	r3, #4
   11fb8:	beq	11fc4 <mythread_stop@@Base+0x14>
   11fbc:	mov	r0, #0
   11fc0:	bx	lr
   11fc4:	push	{r4, r5, r6, lr}
   11fc8:	mov	r4, r0
   11fcc:	mov	r1, #4
   11fd0:	bl	10ae4 <mythread_option_set@plt>
   11fd4:	ldr	r3, [r4, #4]
   11fd8:	cmp	r3, #0
   11fdc:	movne	r5, #0
   11fe0:	movne	r6, r5
   11fe4:	bne	12020 <mythread_stop@@Base+0x70>
   11fe8:	mov	r0, #0
   11fec:	pop	{r4, r5, r6, pc}
   11ff0:	ldr	r0, [r4, #24]
   11ff4:	bl	100a0 <mythread_nanosleep_sleep@plt>
   11ff8:	ldr	r3, [r4]
   11ffc:	add	r3, r3, r5
   12000:	ldr	r3, [r3, #16]
   12004:	tst	r3, #4
   12008:	beq	11ff0 <mythread_stop@@Base+0x40>
   1200c:	add	r6, r6, #1
   12010:	add	r5, r5, #40	; 0x28
   12014:	ldr	r3, [r4, #4]
   12018:	cmp	r3, r6
   1201c:	bls	11fe8 <mythread_stop@@Base+0x38>
   12020:	ldr	r3, [r4]
   12024:	add	r3, r3, r5
   12028:	ldr	r3, [r3, #16]
   1202c:	tst	r3, #4
   12030:	beq	11ff0 <mythread_stop@@Base+0x40>
   12034:	b	1200c <mythread_stop@@Base+0x5c>

00012038 <mythread_suspend@@Base>:
   12038:	ldr	r3, [r0, #36]	; 0x24
   1203c:	tst	r3, #1
   12040:	beq	1204c <mythread_suspend@@Base+0x14>
   12044:	mov	r0, #0
   12048:	bx	lr
   1204c:	push	{r4, r5, r6, lr}
   12050:	mov	r4, r0
   12054:	mov	r1, #1
   12058:	bl	10ae4 <mythread_option_set@plt>
   1205c:	ldr	r3, [r4, #4]
   12060:	cmp	r3, #0
   12064:	movne	r5, #0
   12068:	movne	r6, r5
   1206c:	bne	1208c <mythread_suspend@@Base+0x54>
   12070:	mov	r0, #0
   12074:	pop	{r4, r5, r6, pc}
   12078:	add	r6, r6, #1
   1207c:	add	r5, r5, #40	; 0x28
   12080:	ldr	r3, [r4, #4]
   12084:	cmp	r3, r6
   12088:	bls	12070 <mythread_suspend@@Base+0x38>
   1208c:	ldr	r3, [r4]
   12090:	add	r3, r3, r5
   12094:	ldr	r2, [r3, #16]
   12098:	tst	r2, #4
   1209c:	bne	12078 <mythread_suspend@@Base+0x40>
   120a0:	ldr	r3, [r3, #16]
   120a4:	tst	r3, #1
   120a8:	bne	12078 <mythread_suspend@@Base+0x40>
   120ac:	ldr	r0, [r4, #24]
   120b0:	bl	100a0 <mythread_nanosleep_sleep@plt>
   120b4:	ldr	r3, [r4]
   120b8:	add	r3, r3, r5
   120bc:	ldr	r2, [r3, #16]
   120c0:	tst	r2, #4
   120c4:	bne	12078 <mythread_suspend@@Base+0x40>
   120c8:	ldr	r3, [r3, #16]
   120cc:	tst	r3, #1
   120d0:	beq	120ac <mythread_suspend@@Base+0x74>
   120d4:	b	12078 <mythread_suspend@@Base+0x40>

000120d8 <mythread_resume@@Base>:
   120d8:	push	{r4, r5, r6, r7, r8, lr}
   120dc:	mov	r6, r0
   120e0:	mov	r7, r1
   120e4:	ldr	r3, [r0, #36]	; 0x24
   120e8:	tst	r3, #1
   120ec:	bne	1210c <mythread_resume@@Base+0x34>
   120f0:	bl	10ae4 <mythread_option_set@plt>
   120f4:	ldr	r3, [r6, #4]
   120f8:	cmp	r3, #0
   120fc:	beq	12170 <mythread_resume@@Base+0x98>
   12100:	mov	r4, #0
   12104:	mov	r5, r4
   12108:	b	1212c <mythread_resume@@Base+0x54>
   1210c:	bl	10ae4 <mythread_option_set@plt>
   12110:	mov	r0, #0
   12114:	pop	{r4, r5, r6, r7, r8, pc}
   12118:	add	r5, r5, #1
   1211c:	add	r4, r4, #40	; 0x28
   12120:	ldr	r3, [r6, #4]
   12124:	cmp	r3, r5
   12128:	bls	12168 <mythread_resume@@Base+0x90>
   1212c:	ldr	r3, [r6]
   12130:	add	r3, r3, r4
   12134:	ldr	r2, [r3, #16]
   12138:	tst	r2, #4
   1213c:	beq	12118 <mythread_resume@@Base+0x40>
   12140:	str	r7, [r3, #16]
   12144:	ldr	r3, [r6]
   12148:	add	r3, r3, r4
   1214c:	ldr	r1, [r3, #24]
   12150:	mov	r0, r6
   12154:	bl	10d0c <mythread_mutex_post@plt>
   12158:	cmp	r0, #0
   1215c:	beq	12118 <mythread_resume@@Base+0x40>
   12160:	mov	r0, #1
   12164:	pop	{r4, r5, r6, r7, r8, pc}
   12168:	mov	r0, #0
   1216c:	pop	{r4, r5, r6, r7, r8, pc}
   12170:	mov	r0, #0
   12174:	pop	{r4, r5, r6, r7, r8, pc}

00012178 <mythread_destroy@@Base>:
   12178:	push	{r4, r5, r6, r7, r8, lr}
   1217c:	subs	r4, r0, #0
   12180:	beq	121dc <mythread_destroy@@Base+0x64>
   12184:	mov	r6, r1
   12188:	mov	r7, r2
   1218c:	mov	r5, r3
   12190:	ldr	r3, [r4]
   12194:	cmp	r3, #0
   12198:	beq	121c0 <mythread_destroy@@Base+0x48>
   1219c:	mov	r1, #2
   121a0:	mov	r0, r4
   121a4:	bl	104c0 <mythread_resume@plt>
   121a8:	mov	r2, r7
   121ac:	mov	r1, r6
   121b0:	mov	r0, r4
   121b4:	bl	1058c <mythread_quit@plt>
   121b8:	ldr	r0, [r4]
   121bc:	bl	10dcc <mycore_free@plt>
   121c0:	ldr	r1, [r4, #20]
   121c4:	mov	r0, r4
   121c8:	bl	11084 <mythread_thread_attr_destroy@plt>
   121cc:	ldr	r0, [r4, #24]
   121d0:	bl	10c04 <mythread_nanosleep_destroy@plt>
   121d4:	cmp	r5, #0
   121d8:	bne	121e4 <mythread_destroy@@Base+0x6c>
   121dc:	mov	r0, r4
   121e0:	pop	{r4, r5, r6, r7, r8, pc}
   121e4:	mov	r0, r4
   121e8:	bl	10dcc <mycore_free@plt>
   121ec:	mov	r4, #0
   121f0:	b	121dc <mythread_destroy@@Base+0x64>

000121f4 <mythread_entry_join@@Base>:
   121f4:	push	{r4, lr}
   121f8:	mov	r4, r0
   121fc:	subs	r3, r1, #0
   12200:	beq	12210 <mythread_entry_join@@Base+0x1c>
   12204:	mov	r1, r0
   12208:	ldr	r0, [r0, #32]
   1220c:	blx	r3
   12210:	ldr	r1, [r4]
   12214:	ldr	r0, [r4, #32]
   12218:	bl	10568 <mythread_thread_join@plt>
   1221c:	adds	r0, r0, #0
   12220:	movne	r0, #1
   12224:	pop	{r4, pc}

00012228 <mythread_entry_quit@@Base>:
   12228:	push	{r4, lr}
   1222c:	mov	r4, r0
   12230:	subs	r3, r1, #0
   12234:	beq	12244 <mythread_entry_quit@@Base+0x1c>
   12238:	mov	r1, r0
   1223c:	ldr	r0, [r0, #32]
   12240:	blx	r3
   12244:	ldr	r1, [r4]
   12248:	ldr	r0, [r4, #32]
   1224c:	bl	10568 <mythread_thread_join@plt>
   12250:	cmp	r0, #0
   12254:	beq	12260 <mythread_entry_quit@@Base+0x38>
   12258:	mov	r0, #1
   1225c:	pop	{r4, pc}
   12260:	ldr	r1, [r4]
   12264:	ldr	r0, [r4, #32]
   12268:	bl	109f4 <mythread_thread_destroy@plt>
   1226c:	adds	r0, r0, #0
   12270:	movne	r0, #1
   12274:	pop	{r4, pc}

00012278 <mythread_entry_stop@@Base>:
   12278:	ldr	r3, [r0, #16]
   1227c:	tst	r3, #4
   12280:	bne	122c0 <mythread_entry_stop@@Base+0x48>
   12284:	push	{r4, lr}
   12288:	mov	r4, r0
   1228c:	mov	r3, #4
   12290:	str	r3, [r0, #16]
   12294:	ldr	r3, [r0, #16]
   12298:	tst	r3, #4
   1229c:	bne	122b8 <mythread_entry_stop@@Base+0x40>
   122a0:	ldr	r3, [r4, #32]
   122a4:	ldr	r0, [r3, #24]
   122a8:	bl	100a0 <mythread_nanosleep_sleep@plt>
   122ac:	ldr	r3, [r4, #16]
   122b0:	tst	r3, #4
   122b4:	beq	122a0 <mythread_entry_stop@@Base+0x28>
   122b8:	mov	r0, #0
   122bc:	pop	{r4, pc}
   122c0:	mov	r0, #0
   122c4:	bx	lr

000122c8 <mythread_entry_suspend@@Base>:
   122c8:	ldr	r3, [r0, #16]
   122cc:	tst	r3, #1
   122d0:	bne	12328 <mythread_entry_suspend@@Base+0x60>
   122d4:	mov	r3, #1
   122d8:	str	r3, [r0, #16]
   122dc:	ldr	r3, [r0, #16]
   122e0:	tst	r3, #4
   122e4:	bne	12328 <mythread_entry_suspend@@Base+0x60>
   122e8:	push	{r4, lr}
   122ec:	mov	r4, r0
   122f0:	ldr	r3, [r0, #16]
   122f4:	tst	r3, #1
   122f8:	bne	12320 <mythread_entry_suspend@@Base+0x58>
   122fc:	ldr	r3, [r4, #32]
   12300:	ldr	r0, [r3, #24]
   12304:	bl	100a0 <mythread_nanosleep_sleep@plt>
   12308:	ldr	r3, [r4, #16]
   1230c:	tst	r3, #4
   12310:	bne	12320 <mythread_entry_suspend@@Base+0x58>
   12314:	ldr	r3, [r4, #16]
   12318:	tst	r3, #1
   1231c:	beq	122fc <mythread_entry_suspend@@Base+0x34>
   12320:	mov	r0, #0
   12324:	pop	{r4, pc}
   12328:	mov	r0, #0
   1232c:	bx	lr

00012330 <mythread_entry_resume@@Base>:
   12330:	ldr	r3, [r0, #16]
   12334:	tst	r3, #1
   12338:	bne	12354 <mythread_entry_resume@@Base+0x24>
   1233c:	ldr	r3, [r0, #16]
   12340:	tst	r3, #4
   12344:	bne	12360 <mythread_entry_resume@@Base+0x30>
   12348:	str	r1, [r0, #16]
   1234c:	mov	r0, #0
   12350:	bx	lr
   12354:	str	r1, [r0, #16]
   12358:	mov	r0, #0
   1235c:	bx	lr
   12360:	push	{r4, lr}
   12364:	str	r1, [r0, #16]
   12368:	ldr	r1, [r0, #24]
   1236c:	ldr	r0, [r0, #32]
   12370:	bl	10d0c <mythread_mutex_post@plt>
   12374:	adds	r0, r0, #0
   12378:	movne	r0, #1
   1237c:	pop	{r4, pc}

00012380 <mythread_entry_status@@Base>:
   12380:	ldr	r0, [r0, #20]
   12384:	bx	lr

00012388 <mythread_entry_mythread@@Base>:
   12388:	ldr	r0, [r0, #32]
   1238c:	bx	lr

00012390 <mythread_callback_quit@@Base>:
   12390:	push	{r4, r5, r6, lr}
   12394:	mov	r5, r0
   12398:	mov	r4, r1
   1239c:	ldr	r3, [r1, #16]
   123a0:	tst	r3, #2
   123a4:	popne	{r4, r5, r6, pc}
   123a8:	ldr	r0, [r5, #24]
   123ac:	bl	100a0 <mythread_nanosleep_sleep@plt>
   123b0:	ldr	r3, [r4, #16]
   123b4:	tst	r3, #2
   123b8:	beq	123a8 <mythread_callback_quit@@Base+0x18>
   123bc:	pop	{r4, r5, r6, pc}

000123c0 <mythread_queue_create@@Base>:
   123c0:	push	{r4, lr}
   123c4:	mov	r1, #28
   123c8:	mov	r0, #1
   123cc:	bl	ff14 <mycore_calloc@plt>
   123d0:	pop	{r4, pc}

000123d4 <mythread_queue_init@@Base>:
   123d4:	push	{r4, r5, r6, lr}
   123d8:	mov	r4, r0
   123dc:	cmp	r1, #32
   123e0:	movcc	r1, #32
   123e4:	mov	r0, #512	; 0x200
   123e8:	str	r0, [r4, #8]
   123ec:	str	r1, [r4, #20]
   123f0:	mov	r1, #4
   123f4:	bl	ff14 <mycore_calloc@plt>
   123f8:	str	r0, [r4]
   123fc:	cmp	r0, #0
   12400:	beq	1244c <mythread_queue_init@@Base+0x78>
   12404:	mov	r5, r0
   12408:	ldr	r6, [r4, #4]
   1240c:	ldr	r0, [r4, #20]
   12410:	add	r0, r0, r0, lsl #1
   12414:	lsl	r0, r0, #2
   12418:	bl	10c94 <mycore_malloc@plt>
   1241c:	str	r0, [r5, r6, lsl #2]
   12420:	ldr	r0, [r4]
   12424:	ldr	r3, [r4, #4]
   12428:	ldr	r3, [r0, r3, lsl #2]
   1242c:	cmp	r3, #0
   12430:	beq	1243c <mythread_queue_init@@Base+0x68>
   12434:	mov	r0, #0
   12438:	pop	{r4, r5, r6, pc}
   1243c:	bl	10dcc <mycore_free@plt>
   12440:	str	r0, [r4]
   12444:	mov	r0, #62	; 0x3e
   12448:	pop	{r4, r5, r6, pc}
   1244c:	mov	r0, #61	; 0x3d
   12450:	pop	{r4, r5, r6, pc}

00012454 <mythread_queue_clean@@Base>:
   12454:	mov	r3, #0
   12458:	str	r3, [r0, #12]
   1245c:	str	r3, [r0, #4]
   12460:	str	r3, [r0, #24]
   12464:	str	r3, [r0, #16]
   12468:	bx	lr

0001246c <mythread_queue_destroy@@Base>:
   1246c:	push	{r4, r5, r6, lr}
   12470:	subs	r5, r0, #0
   12474:	beq	124b4 <mythread_queue_destroy@@Base+0x48>
   12478:	ldr	r3, [r5]
   1247c:	cmp	r3, #0
   12480:	beq	124ac <mythread_queue_destroy@@Base+0x40>
   12484:	mov	r4, #0
   12488:	ldr	r3, [r5]
   1248c:	ldr	r0, [r3, r4, lsl #2]
   12490:	bl	10dcc <mycore_free@plt>
   12494:	add	r4, r4, #1
   12498:	ldr	r3, [r5, #4]
   1249c:	cmp	r3, r4
   124a0:	bcs	12488 <mythread_queue_destroy@@Base+0x1c>
   124a4:	ldr	r0, [r5]
   124a8:	bl	10dcc <mycore_free@plt>
   124ac:	mov	r0, r5
   124b0:	bl	10dcc <mycore_free@plt>
   124b4:	mov	r0, #0
   124b8:	pop	{r4, r5, r6, pc}

000124bc <mythread_queue_node_clean@@Base>:
   124bc:	mov	r3, #0
   124c0:	str	r3, [r0]
   124c4:	str	r3, [r0, #4]
   124c8:	str	r3, [r0, #8]
   124cc:	bx	lr

000124d0 <mythread_queue_get_prev_node@@Base>:
   124d0:	ldr	r0, [r0, #8]
   124d4:	bx	lr

000124d8 <mythread_queue_get_current_node@@Base>:
   124d8:	ldr	r2, [r0, #4]
   124dc:	ldr	r3, [r0]
   124e0:	ldr	r0, [r0, #12]
   124e4:	add	r0, r0, r0, lsl #1
   124e8:	ldr	r3, [r3, r2, lsl #2]
   124ec:	add	r0, r3, r0, lsl #2
   124f0:	bx	lr

000124f4 <mythread_queue_get_first_node@@Base>:
   124f4:	ldr	r3, [r0]
   124f8:	ldr	r0, [r3]
   124fc:	bx	lr

00012500 <mythread_queue_count_used_node@@Base>:
   12500:	ldr	r0, [r0, #16]
   12504:	bx	lr

00012508 <mythread_queue_list_create@@Base>:
   12508:	push	{r4, lr}
   1250c:	mov	r1, #12
   12510:	mov	r0, #1
   12514:	bl	ff14 <mycore_calloc@plt>
   12518:	pop	{r4, pc}

0001251c <mythread_queue_list_destroy@@Base>:
   1251c:	cmp	r0, #0
   12520:	bxeq	lr
   12524:	push	{r4, lr}
   12528:	bl	10dcc <mycore_free@plt>
   1252c:	pop	{r4, pc}

00012530 <mythread_queue_list_get_count@@Base>:
   12530:	ldr	r0, [r0, #8]
   12534:	bx	lr

00012538 <mythread_queue_list_wait_for_done@@Base>:
   12538:	subs	r3, r1, #0
   1253c:	bxeq	lr
   12540:	push	{r4, r5, r6, r7, r8, lr}
   12544:	mov	r5, r0
   12548:	ldr	r4, [r3]
   1254c:	cmp	r4, #0
   12550:	bne	125b4 <mythread_queue_list_wait_for_done@@Base+0x7c>
   12554:	pop	{r4, r5, r6, r7, r8, pc}
   12558:	ldr	r0, [r5, #24]
   1255c:	bl	100a0 <mythread_nanosleep_sleep@plt>
   12560:	ldr	r3, [r4, #4]
   12564:	ldr	r2, [r3, r6]
   12568:	ldr	r3, [r4]
   1256c:	ldr	r3, [r3, #16]
   12570:	cmp	r2, r3
   12574:	bcc	12558 <mythread_queue_list_wait_for_done@@Base+0x20>
   12578:	add	r7, r7, #1
   1257c:	ldr	r3, [r5, #4]
   12580:	cmp	r3, r7
   12584:	bls	125a8 <mythread_queue_list_wait_for_done@@Base+0x70>
   12588:	lsl	r6, r7, #2
   1258c:	ldr	r3, [r4, #4]
   12590:	ldr	r2, [r3, r7, lsl #2]
   12594:	ldr	r3, [r4]
   12598:	ldr	r3, [r3, #16]
   1259c:	cmp	r2, r3
   125a0:	bcc	12558 <mythread_queue_list_wait_for_done@@Base+0x20>
   125a4:	b	12578 <mythread_queue_list_wait_for_done@@Base+0x40>
   125a8:	ldr	r4, [r4, #12]
   125ac:	cmp	r4, #0
   125b0:	popeq	{r4, r5, r6, r7, r8, pc}
   125b4:	ldr	r3, [r5, #4]
   125b8:	cmp	r3, #0
   125bc:	movne	r7, #0
   125c0:	bne	12588 <mythread_queue_list_wait_for_done@@Base+0x50>
   125c4:	b	125a8 <mythread_queue_list_wait_for_done@@Base+0x70>

000125c8 <mythread_queue_node_malloc@@Base>:
   125c8:	push	{r4, r5, r6, r7, r8, lr}
   125cc:	mov	r4, r1
   125d0:	mov	r5, r2
   125d4:	ldr	r3, [r1, #12]
   125d8:	add	r3, r3, #1
   125dc:	str	r3, [r1, #12]
   125e0:	ldr	r2, [r1, #20]
   125e4:	cmp	r3, r2
   125e8:	bcc	1266c <mythread_queue_node_malloc@@Base+0xa4>
   125ec:	ldr	r3, [r1, #4]
   125f0:	add	r3, r3, #1
   125f4:	str	r3, [r1, #4]
   125f8:	ldr	r2, [r1, #8]
   125fc:	cmp	r3, r2
   12600:	bcc	12650 <mythread_queue_node_malloc@@Base+0x88>
   12604:	cmp	r0, #0
   12608:	beq	12614 <mythread_queue_node_malloc@@Base+0x4c>
   1260c:	ldr	r1, [r0, #16]
   12610:	bl	10dd8 <mythread_queue_list_wait_for_done@plt>
   12614:	ldr	r6, [r4, #8]
   12618:	add	r6, r6, #512	; 0x200
   1261c:	lsl	r1, r6, #2
   12620:	ldr	r0, [r4]
   12624:	bl	fbd8 <mycore_realloc@plt>
   12628:	subs	r7, r0, #0
   1262c:	beq	12694 <mythread_queue_node_malloc@@Base+0xcc>
   12630:	ldr	r0, [r4, #4]
   12634:	sub	r2, r6, r0
   12638:	lsl	r2, r2, #2
   1263c:	mov	r1, #0
   12640:	add	r0, r7, r0, lsl #2
   12644:	bl	108b0 <memset@plt>
   12648:	str	r7, [r4]
   1264c:	str	r6, [r4, #8]
   12650:	ldr	r7, [r4, #4]
   12654:	ldr	r6, [r4]
   12658:	ldr	r3, [r6, r7, lsl #2]
   1265c:	cmp	r3, #0
   12660:	beq	126ac <mythread_queue_node_malloc@@Base+0xe4>
   12664:	mov	r3, #0
   12668:	str	r3, [r4, #12]
   1266c:	ldr	r3, [r4, #16]
   12670:	add	r3, r3, #1
   12674:	str	r3, [r4, #16]
   12678:	ldr	r2, [r4, #4]
   1267c:	ldr	r3, [r4]
   12680:	ldr	r0, [r4, #12]
   12684:	add	r0, r0, r0, lsl #1
   12688:	ldr	r3, [r3, r2, lsl #2]
   1268c:	add	r0, r3, r0, lsl #2
   12690:	pop	{r4, r5, r6, r7, r8, pc}
   12694:	cmp	r5, #0
   12698:	beq	126e4 <mythread_queue_node_malloc@@Base+0x11c>
   1269c:	mov	r3, #61	; 0x3d
   126a0:	str	r3, [r5]
   126a4:	mov	r0, #0
   126a8:	pop	{r4, r5, r6, r7, r8, pc}
   126ac:	ldr	r0, [r4, #20]
   126b0:	add	r0, r0, r0, lsl #1
   126b4:	lsl	r0, r0, #2
   126b8:	bl	10c94 <mycore_malloc@plt>
   126bc:	str	r0, [r6, r7, lsl #2]
   126c0:	ldr	r2, [r4, #4]
   126c4:	ldr	r3, [r4]
   126c8:	ldr	r0, [r3, r2, lsl #2]
   126cc:	cmp	r0, #0
   126d0:	bne	12664 <mythread_queue_node_malloc@@Base+0x9c>
   126d4:	cmp	r5, #0
   126d8:	movne	r3, #62	; 0x3e
   126dc:	strne	r3, [r5]
   126e0:	pop	{r4, r5, r6, r7, r8, pc}
   126e4:	mov	r0, #0
   126e8:	pop	{r4, r5, r6, r7, r8, pc}

000126ec <mythread_queue_node_malloc_limit@@Base>:
   126ec:	push	{r4, r5, r6, r7, r8, lr}
   126f0:	mov	r4, r1
   126f4:	mov	r5, r3
   126f8:	ldr	r3, [r1, #12]
   126fc:	add	r3, r3, #1
   12700:	str	r3, [r1, #12]
   12704:	ldr	r1, [r1, #16]
   12708:	cmp	r1, r2
   1270c:	bcc	12768 <mythread_queue_node_malloc_limit@@Base+0x7c>
   12710:	ldr	r3, [r4, #16]
   12714:	add	r3, r3, #1
   12718:	str	r3, [r4, #16]
   1271c:	cmp	r0, #0
   12720:	beq	1272c <mythread_queue_node_malloc_limit@@Base+0x40>
   12724:	ldr	r1, [r0, #16]
   12728:	bl	10dd8 <mythread_queue_list_wait_for_done@plt>
   1272c:	mov	r3, #0
   12730:	str	r3, [r4, #12]
   12734:	str	r3, [r4, #4]
   12738:	str	r3, [r4, #24]
   1273c:	str	r3, [r4, #16]
   12740:	ldr	r3, [r4, #16]
   12744:	add	r3, r3, #1
   12748:	str	r3, [r4, #16]
   1274c:	ldr	r2, [r4, #4]
   12750:	ldr	r3, [r4]
   12754:	ldr	r0, [r4, #12]
   12758:	add	r0, r0, r0, lsl #1
   1275c:	ldr	r3, [r3, r2, lsl #2]
   12760:	add	r0, r3, r0, lsl #2
   12764:	pop	{r4, r5, r6, r7, r8, pc}
   12768:	ldr	r2, [r4, #20]
   1276c:	cmp	r3, r2
   12770:	bcc	12740 <mythread_queue_node_malloc_limit@@Base+0x54>
   12774:	ldr	r3, [r4, #4]
   12778:	add	r3, r3, #1
   1277c:	str	r3, [r4, #4]
   12780:	ldr	r2, [r4, #8]
   12784:	cmp	r3, r2
   12788:	bcc	127d8 <mythread_queue_node_malloc_limit@@Base+0xec>
   1278c:	cmp	r0, #0
   12790:	beq	1279c <mythread_queue_node_malloc_limit@@Base+0xb0>
   12794:	ldr	r1, [r0, #16]
   12798:	bl	10dd8 <mythread_queue_list_wait_for_done@plt>
   1279c:	ldr	r6, [r4, #8]
   127a0:	add	r6, r6, #512	; 0x200
   127a4:	lsl	r1, r6, #2
   127a8:	ldr	r0, [r4]
   127ac:	bl	fbd8 <mycore_realloc@plt>
   127b0:	subs	r7, r0, #0
   127b4:	beq	127f8 <mythread_queue_node_malloc_limit@@Base+0x10c>
   127b8:	ldr	r0, [r4, #4]
   127bc:	sub	r2, r6, r0
   127c0:	lsl	r2, r2, #2
   127c4:	mov	r1, #0
   127c8:	add	r0, r7, r0, lsl #2
   127cc:	bl	108b0 <memset@plt>
   127d0:	str	r7, [r4]
   127d4:	str	r6, [r4, #8]
   127d8:	ldr	r7, [r4, #4]
   127dc:	ldr	r6, [r4]
   127e0:	ldr	r3, [r6, r7, lsl #2]
   127e4:	cmp	r3, #0
   127e8:	beq	12810 <mythread_queue_node_malloc_limit@@Base+0x124>
   127ec:	mov	r3, #0
   127f0:	str	r3, [r4, #12]
   127f4:	b	12740 <mythread_queue_node_malloc_limit@@Base+0x54>
   127f8:	cmp	r5, #0
   127fc:	beq	12848 <mythread_queue_node_malloc_limit@@Base+0x15c>
   12800:	mov	r3, #61	; 0x3d
   12804:	str	r3, [r5]
   12808:	mov	r0, #0
   1280c:	pop	{r4, r5, r6, r7, r8, pc}
   12810:	ldr	r0, [r4, #20]
   12814:	add	r0, r0, r0, lsl #1
   12818:	lsl	r0, r0, #2
   1281c:	bl	10c94 <mycore_malloc@plt>
   12820:	str	r0, [r6, r7, lsl #2]
   12824:	ldr	r2, [r4, #4]
   12828:	ldr	r3, [r4]
   1282c:	ldr	r0, [r3, r2, lsl #2]
   12830:	cmp	r0, #0
   12834:	bne	127ec <mythread_queue_node_malloc_limit@@Base+0x100>
   12838:	cmp	r5, #0
   1283c:	movne	r3, #62	; 0x3e
   12840:	strne	r3, [r5]
   12844:	pop	{r4, r5, r6, r7, r8, pc}
   12848:	mov	r0, #0
   1284c:	pop	{r4, r5, r6, r7, r8, pc}

00012850 <mythread_queue_list_see_for_done@@Base>:
   12850:	cmp	r1, #0
   12854:	beq	128cc <mythread_queue_list_see_for_done@@Base+0x7c>
   12858:	push	{r4, lr}
   1285c:	ldr	r4, [r1]
   12860:	cmp	r4, #0
   12864:	beq	128d4 <mythread_queue_list_see_for_done@@Base+0x84>
   12868:	ldr	ip, [r0, #4]
   1286c:	cmp	ip, #0
   12870:	beq	128b8 <mythread_queue_list_see_for_done@@Base+0x68>
   12874:	ldr	r2, [r4, #4]
   12878:	ldr	r1, [r2]
   1287c:	ldr	lr, [r4]
   12880:	ldr	r3, [lr, #16]
   12884:	cmp	r1, r3
   12888:	bcc	128dc <mythread_queue_list_see_for_done@@Base+0x8c>
   1288c:	add	r2, r2, #4
   12890:	mov	r3, #0
   12894:	add	r3, r3, #1
   12898:	cmp	r3, ip
   1289c:	beq	128b8 <mythread_queue_list_see_for_done@@Base+0x68>
   128a0:	ldr	r0, [r2], #4
   128a4:	ldr	r1, [lr, #16]
   128a8:	cmp	r0, r1
   128ac:	bcs	12894 <mythread_queue_list_see_for_done@@Base+0x44>
   128b0:	mov	r0, #0
   128b4:	pop	{r4, pc}
   128b8:	ldr	r4, [r4, #12]
   128bc:	cmp	r4, #0
   128c0:	bne	1286c <mythread_queue_list_see_for_done@@Base+0x1c>
   128c4:	mov	r0, #1
   128c8:	pop	{r4, pc}
   128cc:	mov	r0, #1
   128d0:	bx	lr
   128d4:	mov	r0, #1
   128d8:	pop	{r4, pc}
   128dc:	mov	r0, #0
   128e0:	pop	{r4, pc}

000128e4 <mythread_queue_list_see_for_done_by_thread@@Base>:
   128e4:	cmp	r1, #0
   128e8:	beq	12948 <mythread_queue_list_see_for_done_by_thread@@Base+0x64>
   128ec:	ldr	r3, [r1]
   128f0:	cmp	r3, #0
   128f4:	beq	12950 <mythread_queue_list_see_for_done_by_thread@@Base+0x6c>
   128f8:	lsl	r0, r2, #2
   128fc:	ldr	r1, [r3, #4]
   12900:	ldr	r1, [r1, r2, lsl #2]
   12904:	ldr	r2, [r3]
   12908:	ldr	r2, [r2, #16]
   1290c:	cmp	r1, r2
   12910:	bcc	12958 <mythread_queue_list_see_for_done_by_thread@@Base+0x74>
   12914:	ldr	r3, [r3, #12]
   12918:	cmp	r3, #0
   1291c:	beq	12940 <mythread_queue_list_see_for_done_by_thread@@Base+0x5c>
   12920:	ldr	r2, [r3, #4]
   12924:	ldr	r1, [r2, r0]
   12928:	ldr	r2, [r3]
   1292c:	ldr	r2, [r2, #16]
   12930:	cmp	r1, r2
   12934:	bcs	12914 <mythread_queue_list_see_for_done_by_thread@@Base+0x30>
   12938:	mov	r0, #0
   1293c:	bx	lr
   12940:	mov	r0, #1
   12944:	bx	lr
   12948:	mov	r0, #1
   1294c:	bx	lr
   12950:	mov	r0, #1
   12954:	bx	lr
   12958:	mov	r0, #0
   1295c:	bx	lr

00012960 <mythread_queue_list_entry_delete@@Base>:
   12960:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12964:	mov	r5, r0
   12968:	mov	r9, r2
   1296c:	mov	r7, r3
   12970:	subs	r6, r1, #0
   12974:	beq	129a4 <mythread_queue_list_entry_delete@@Base+0x44>
   12978:	sub	r8, r0, #4
   1297c:	mov	r4, #0
   12980:	b	12990 <mythread_queue_list_entry_delete@@Base+0x30>
   12984:	add	r4, r4, #1
   12988:	cmp	r6, r4
   1298c:	beq	129a4 <mythread_queue_list_entry_delete@@Base+0x44>
   12990:	ldr	r0, [r8, #4]!
   12994:	cmp	r0, #0
   12998:	beq	12984 <mythread_queue_list_entry_delete@@Base+0x24>
   1299c:	bl	100e8 <mythread_suspend@plt>
   129a0:	b	12984 <mythread_queue_list_entry_delete@@Base+0x24>
   129a4:	ldr	r2, [r7, #12]
   129a8:	ldr	r3, [r7, #16]
   129ac:	cmp	r3, #0
   129b0:	strne	r2, [r3, #12]
   129b4:	cmp	r2, #0
   129b8:	strne	r3, [r2, #16]
   129bc:	ldr	r1, [r9]
   129c0:	cmp	r7, r1
   129c4:	streq	r2, [r9]
   129c8:	ldr	r2, [r9, #4]
   129cc:	cmp	r7, r2
   129d0:	streq	r3, [r9, #4]
   129d4:	ldr	r3, [r9, #8]
   129d8:	sub	r3, r3, #1
   129dc:	str	r3, [r9, #8]
   129e0:	cmp	r6, #0
   129e4:	beq	12a1c <mythread_queue_list_entry_delete@@Base+0xbc>
   129e8:	sub	r5, r5, #4
   129ec:	mov	r4, #0
   129f0:	mov	r8, r4
   129f4:	b	12a04 <mythread_queue_list_entry_delete@@Base+0xa4>
   129f8:	add	r4, r4, #1
   129fc:	cmp	r6, r4
   12a00:	beq	12a1c <mythread_queue_list_entry_delete@@Base+0xbc>
   12a04:	ldr	r0, [r5, #4]!
   12a08:	cmp	r0, #0
   12a0c:	beq	129f8 <mythread_queue_list_entry_delete@@Base+0x98>
   12a10:	mov	r1, r8
   12a14:	bl	104c0 <mythread_resume@plt>
   12a18:	b	129f8 <mythread_queue_list_entry_delete@@Base+0x98>
   12a1c:	ldrb	r3, [sp, #32]
   12a20:	cmp	r3, #0
   12a24:	beq	12a38 <mythread_queue_list_entry_delete@@Base+0xd8>
   12a28:	ldr	r0, [r7]
   12a2c:	cmp	r0, #0
   12a30:	beq	12a38 <mythread_queue_list_entry_delete@@Base+0xd8>
   12a34:	bl	102d4 <mythread_queue_destroy@plt>
   12a38:	ldr	r0, [r7, #4]
   12a3c:	cmp	r0, #0
   12a40:	beq	12a48 <mythread_queue_list_entry_delete@@Base+0xe8>
   12a44:	bl	10dcc <mycore_free@plt>
   12a48:	mov	r0, r7
   12a4c:	bl	10dcc <mycore_free@plt>
   12a50:	mov	r0, #0
   12a54:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00012a58 <mythread_queue_list_entry_clean@@Base>:
   12a58:	cmp	r0, #0
   12a5c:	bxeq	lr
   12a60:	push	{r4, lr}
   12a64:	ldr	r0, [r0]
   12a68:	bl	fd64 <mythread_queue_clean@plt>
   12a6c:	pop	{r4, pc}

00012a70 <mythread_queue_list_entry_wait_for_done@@Base>:
   12a70:	push	{r4, r5, r6, r7, r8, lr}
   12a74:	subs	r4, r1, #0
   12a78:	popeq	{r4, r5, r6, r7, r8, pc}
   12a7c:	ldr	r3, [r4, #8]
   12a80:	cmp	r3, #0
   12a84:	movne	r6, r0
   12a88:	movne	r7, #0
   12a8c:	bne	12ac4 <mythread_queue_list_entry_wait_for_done@@Base+0x54>
   12a90:	pop	{r4, r5, r6, r7, r8, pc}
   12a94:	ldr	r0, [r6, #24]
   12a98:	bl	100a0 <mythread_nanosleep_sleep@plt>
   12a9c:	ldr	r3, [r4, #4]
   12aa0:	ldr	r2, [r3, r5]
   12aa4:	ldr	r3, [r4]
   12aa8:	ldr	r3, [r3, #16]
   12aac:	cmp	r2, r3
   12ab0:	bcc	12a94 <mythread_queue_list_entry_wait_for_done@@Base+0x24>
   12ab4:	add	r7, r7, #1
   12ab8:	ldr	r3, [r4, #8]
   12abc:	cmp	r3, r7
   12ac0:	bls	12ae4 <mythread_queue_list_entry_wait_for_done@@Base+0x74>
   12ac4:	lsl	r5, r7, #2
   12ac8:	ldr	r3, [r4, #4]
   12acc:	ldr	r2, [r3, r7, lsl #2]
   12ad0:	ldr	r3, [r4]
   12ad4:	ldr	r3, [r3, #16]
   12ad8:	cmp	r2, r3
   12adc:	bcc	12a94 <mythread_queue_list_entry_wait_for_done@@Base+0x24>
   12ae0:	b	12ab4 <mythread_queue_list_entry_wait_for_done@@Base+0x44>
   12ae4:	pop	{r4, r5, r6, r7, r8, pc}

00012ae8 <mythread_queue_node_malloc_round@@Base>:
   12ae8:	push	{r4, r5, r6, lr}
   12aec:	ldr	r4, [r1]
   12af0:	ldr	r3, [r4, #12]
   12af4:	add	r3, r3, #1
   12af8:	str	r3, [r4, #12]
   12afc:	ldr	r2, [r4, #20]
   12b00:	cmp	r3, r2
   12b04:	bcc	12b48 <mythread_queue_node_malloc_round@@Base+0x60>
   12b08:	mov	r5, r1
   12b0c:	ldr	r3, [r4, #16]
   12b10:	add	r3, r3, #1
   12b14:	str	r3, [r4, #16]
   12b18:	cmp	r0, #0
   12b1c:	beq	12b24 <mythread_queue_node_malloc_round@@Base+0x3c>
   12b20:	bl	1097c <mythread_queue_list_entry_wait_for_done@plt>
   12b24:	mov	r0, r5
   12b28:	bl	109a0 <mythread_queue_list_entry_clean@plt>
   12b2c:	ldr	r2, [r4, #4]
   12b30:	ldr	r3, [r4]
   12b34:	ldr	r0, [r4, #12]
   12b38:	add	r0, r0, r0, lsl #1
   12b3c:	ldr	r3, [r3, r2, lsl #2]
   12b40:	add	r0, r3, r0, lsl #2
   12b44:	pop	{r4, r5, r6, pc}
   12b48:	ldr	r3, [r4, #16]
   12b4c:	add	r3, r3, #1
   12b50:	str	r3, [r4, #16]
   12b54:	b	12b2c <mythread_queue_node_malloc_round@@Base+0x44>

00012b58 <mythread_queue_list_entry_see_for_done@@Base>:
   12b58:	cmp	r0, #0
   12b5c:	beq	12bbc <mythread_queue_list_entry_see_for_done@@Base+0x64>
   12b60:	ldr	ip, [r0, #8]
   12b64:	cmp	ip, #0
   12b68:	beq	12bc4 <mythread_queue_list_entry_see_for_done@@Base+0x6c>
   12b6c:	push	{lr}		; (str lr, [sp, #-4]!)
   12b70:	ldr	r2, [r0, #4]
   12b74:	ldr	r1, [r2]
   12b78:	ldr	lr, [r0]
   12b7c:	ldr	r3, [lr, #16]
   12b80:	cmp	r1, r3
   12b84:	bcc	12bcc <mythread_queue_list_entry_see_for_done@@Base+0x74>
   12b88:	add	r2, r2, #4
   12b8c:	mov	r3, #0
   12b90:	add	r3, r3, #1
   12b94:	cmp	r3, ip
   12b98:	beq	12bb4 <mythread_queue_list_entry_see_for_done@@Base+0x5c>
   12b9c:	ldr	r0, [r2], #4
   12ba0:	ldr	r1, [lr, #16]
   12ba4:	cmp	r0, r1
   12ba8:	bcs	12b90 <mythread_queue_list_entry_see_for_done@@Base+0x38>
   12bac:	mov	r0, #0
   12bb0:	pop	{pc}		; (ldr pc, [sp], #4)
   12bb4:	mov	r0, #1
   12bb8:	pop	{pc}		; (ldr pc, [sp], #4)
   12bbc:	mov	r0, #1
   12bc0:	bx	lr
   12bc4:	mov	r0, #1
   12bc8:	bx	lr
   12bcc:	mov	r0, #0
   12bd0:	pop	{pc}		; (ldr pc, [sp], #4)

00012bd4 <mythread_queue_list_entry_make_batch@@Base>:
   12bd4:	cmp	r1, #0
   12bd8:	bxeq	lr
   12bdc:	push	{r4, lr}
   12be0:	ldr	r4, [r0, #12]
   12be4:	ldr	r3, [r0, #4]
   12be8:	cmp	r4, r3
   12bec:	pophi	{r4, pc}
   12bf0:	lsl	r2, r4, #2
   12bf4:	mov	r3, #0
   12bf8:	ldr	ip, [r1, #4]
   12bfc:	str	r3, [ip, r2]
   12c00:	add	r3, r3, #1
   12c04:	add	r2, r2, #4
   12c08:	add	ip, r4, r3
   12c0c:	ldr	lr, [r0, #4]
   12c10:	cmp	lr, ip
   12c14:	bcs	12bf8 <mythread_queue_list_entry_make_batch@@Base+0x24>
   12c18:	pop	{r4, pc}

00012c1c <mythread_queue_list_entry_make_stream@@Base>:
   12c1c:	cmp	r1, #0
   12c20:	bxeq	lr
   12c24:	ldr	r3, [r0, #12]
   12c28:	ldr	r2, [r0, #4]
   12c2c:	cmp	r3, r2
   12c30:	bxhi	lr
   12c34:	push	{lr}		; (str lr, [sp, #-4]!)
   12c38:	lsl	r2, r3, #2
   12c3c:	mov	lr, #0
   12c40:	ldr	ip, [r1, #4]
   12c44:	str	lr, [ip, r2]
   12c48:	add	r3, r3, #1
   12c4c:	add	r2, r2, #4
   12c50:	ldr	ip, [r0, #4]
   12c54:	cmp	ip, r3
   12c58:	bcs	12c40 <mythread_queue_list_entry_make_stream@@Base+0x24>
   12c5c:	pop	{pc}		; (ldr pc, [sp], #4)

00012c60 <mythread_queue_list_entry_push@@Base>:
   12c60:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12c64:	mov	r8, r0
   12c68:	mov	r6, r1
   12c6c:	mov	r9, r2
   12c70:	mov	sl, r3
   12c74:	ldr	r5, [sp, #32]
   12c78:	ldr	r4, [sp, #36]	; 0x24
   12c7c:	cmp	r4, #0
   12c80:	beq	12db8 <mythread_queue_list_entry_push@@Base+0x158>
   12c84:	mov	r3, #0
   12c88:	str	r3, [r4]
   12c8c:	mov	r1, #20
   12c90:	mov	r0, #1
   12c94:	bl	ff14 <mycore_calloc@plt>
   12c98:	subs	r7, r0, #0
   12c9c:	moveq	r3, #60	; 0x3c
   12ca0:	streq	r3, [r4]
   12ca4:	beq	12dcc <mythread_queue_list_entry_push@@Base+0x16c>
   12ca8:	str	r5, [r7, #8]
   12cac:	cmp	r5, #0
   12cb0:	moveq	r3, #0
   12cb4:	streq	r3, [r7, #4]
   12cb8:	bne	12cd4 <mythread_queue_list_entry_push@@Base+0x74>
   12cbc:	str	sl, [r7]
   12cc0:	cmp	r6, #0
   12cc4:	beq	12d50 <mythread_queue_list_entry_push@@Base+0xf0>
   12cc8:	sub	r5, r8, #4
   12ccc:	mov	r4, #0
   12cd0:	b	12d24 <mythread_queue_list_entry_push@@Base+0xc4>
   12cd4:	mov	r1, #4
   12cd8:	mov	r0, r5
   12cdc:	bl	ff14 <mycore_calloc@plt>
   12ce0:	str	r0, [r7, #4]
   12ce4:	cmp	r0, #0
   12ce8:	bne	12cbc <mythread_queue_list_entry_push@@Base+0x5c>
   12cec:	mov	r0, r7
   12cf0:	bl	10dcc <mycore_free@plt>
   12cf4:	cmp	r4, #0
   12cf8:	moveq	r7, #0
   12cfc:	movne	r3, #60	; 0x3c
   12d00:	strne	r3, [r4]
   12d04:	movne	r7, #0
   12d08:	b	12dcc <mythread_queue_list_entry_push@@Base+0x16c>
   12d0c:	mov	r1, r7
   12d10:	bl	10d24 <mythread_queue_list_entry_make_batch@plt>
   12d14:	b	12d3c <mythread_queue_list_entry_push@@Base+0xdc>
   12d18:	add	r4, r4, #1
   12d1c:	cmp	r6, r4
   12d20:	beq	12d50 <mythread_queue_list_entry_push@@Base+0xf0>
   12d24:	ldr	r0, [r5, #4]
   12d28:	ldr	r3, [r0, #32]
   12d2c:	cmp	r3, #1
   12d30:	beq	12d0c <mythread_queue_list_entry_push@@Base+0xac>
   12d34:	mov	r1, r7
   12d38:	bl	10ee0 <mythread_queue_list_entry_make_stream@plt>
   12d3c:	ldr	r0, [r5, #4]!
   12d40:	cmp	r0, #0
   12d44:	beq	12d18 <mythread_queue_list_entry_push@@Base+0xb8>
   12d48:	bl	100e8 <mythread_suspend@plt>
   12d4c:	b	12d18 <mythread_queue_list_entry_push@@Base+0xb8>
   12d50:	ldr	r3, [r9]
   12d54:	cmp	r3, #0
   12d58:	ldrne	r3, [r9, #4]
   12d5c:	strne	r7, [r3, #12]
   12d60:	ldrne	r3, [r9, #4]
   12d64:	strne	r3, [r7, #16]
   12d68:	streq	r7, [r9]
   12d6c:	str	r7, [r9, #4]
   12d70:	ldr	r3, [r9, #8]
   12d74:	add	r3, r3, #1
   12d78:	str	r3, [r9, #8]
   12d7c:	cmp	r6, #0
   12d80:	beq	12dcc <mythread_queue_list_entry_push@@Base+0x16c>
   12d84:	sub	r5, r8, #4
   12d88:	mov	r4, #0
   12d8c:	mov	r8, r4
   12d90:	b	12da0 <mythread_queue_list_entry_push@@Base+0x140>
   12d94:	add	r4, r4, #1
   12d98:	cmp	r6, r4
   12d9c:	beq	12dcc <mythread_queue_list_entry_push@@Base+0x16c>
   12da0:	ldr	r0, [r5, #4]!
   12da4:	cmp	r0, #0
   12da8:	beq	12d94 <mythread_queue_list_entry_push@@Base+0x134>
   12dac:	mov	r1, r8
   12db0:	bl	104c0 <mythread_resume@plt>
   12db4:	b	12d94 <mythread_queue_list_entry_push@@Base+0x134>
   12db8:	mov	r1, #20
   12dbc:	mov	r0, #1
   12dc0:	bl	ff14 <mycore_calloc@plt>
   12dc4:	subs	r7, r0, #0
   12dc8:	bne	12ca8 <mythread_queue_list_entry_push@@Base+0x48>
   12dcc:	mov	r0, r7
   12dd0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00012dd4 <mythread_function_see_opt@@Base>:
   12dd4:	push	{r4, r5, r6, lr}
   12dd8:	sub	sp, sp, #8
   12ddc:	str	r1, [sp, #4]
   12de0:	ldr	r5, [r0, #28]
   12de4:	ldr	r1, [r5, #16]
   12de8:	ldr	ip, [r1, #8]
   12dec:	cmp	ip, r3
   12df0:	movne	r6, #0
   12df4:	beq	12e04 <mythread_function_see_opt@@Base+0x30>
   12df8:	mov	r0, r6
   12dfc:	add	sp, sp, #8
   12e00:	pop	{r4, r5, r6, pc}
   12e04:	mov	r4, r0
   12e08:	ldr	r3, [sp, #4]
   12e0c:	tst	r3, #4
   12e10:	bne	12e30 <mythread_function_see_opt@@Base+0x5c>
   12e14:	ldr	r3, [sp, #4]
   12e18:	tst	r3, #2
   12e1c:	bne	12e60 <mythread_function_see_opt@@Base+0x8c>
   12e20:	ldr	r0, [sp, #24]
   12e24:	bl	100a0 <mythread_nanosleep_sleep@plt>
   12e28:	mov	r6, #0
   12e2c:	b	12df8 <mythread_function_see_opt@@Base+0x24>
   12e30:	mov	r0, r5
   12e34:	bl	105d4 <mythread_queue_list_see_for_done_by_thread@plt>
   12e38:	cmp	r0, #0
   12e3c:	beq	12e20 <mythread_function_see_opt@@Base+0x4c>
   12e40:	mov	r3, #4
   12e44:	str	r3, [r4, #12]
   12e48:	ldr	r1, [r4, #20]
   12e4c:	mov	r0, r5
   12e50:	bl	10d9c <mythread_mutex_wait@plt>
   12e54:	mov	r6, #0
   12e58:	str	r6, [r4, #12]
   12e5c:	b	12df8 <mythread_function_see_opt@@Base+0x24>
   12e60:	mov	r0, r5
   12e64:	bl	105d4 <mythread_queue_list_see_for_done_by_thread@plt>
   12e68:	subs	r6, r0, #0
   12e6c:	beq	12e20 <mythread_function_see_opt@@Base+0x4c>
   12e70:	ldr	r1, [r4, #20]
   12e74:	mov	r0, r5
   12e78:	bl	10634 <mythread_mutex_close@plt>
   12e7c:	ldr	r0, [r4, #24]
   12e80:	bl	10c04 <mythread_nanosleep_destroy@plt>
   12e84:	mov	r3, #2
   12e88:	str	r3, [r4, #12]
   12e8c:	b	12df8 <mythread_function_see_opt@@Base+0x24>

00012e90 <mythread_function_queue_batch@@Base>:
   12e90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e94:	sub	sp, sp, #28
   12e98:	mov	sl, r0
   12e9c:	ldr	r9, [r0, #28]
   12ea0:	ldr	r3, [r9, #16]
   12ea4:	str	r3, [sp, #16]
   12ea8:	ldr	r1, [r0]
   12eac:	mov	r0, r9
   12eb0:	bl	fe54 <myhread_increase_id_by_entry_id@plt>
   12eb4:	mov	r4, r0
   12eb8:	str	r0, [sp, #20]
   12ebc:	ldr	r1, [sl, #20]
   12ec0:	mov	r0, r9
   12ec4:	bl	10d9c <mythread_mutex_wait@plt>
   12ec8:	lsl	r7, r4, #2
   12ecc:	mov	r8, r9
   12ed0:	b	12f6c <mythread_function_queue_batch@@Base+0xdc>
   12ed4:	ldr	r4, [r4, #12]
   12ed8:	cmp	r4, #0
   12edc:	beq	12f5c <mythread_function_queue_batch@@Base+0xcc>
   12ee0:	ldr	r5, [r4, #4]
   12ee4:	ldr	r2, [r5, r7]
   12ee8:	ldr	r6, [r4]
   12eec:	ldr	r3, [r6, #16]
   12ef0:	cmp	r2, r3
   12ef4:	addcs	r9, r9, #1
   12ef8:	bcs	12ed4 <mythread_function_queue_batch@@Base+0x44>
   12efc:	ldr	r0, [r5, r7]
   12f00:	ldr	r1, [r6, #20]
   12f04:	ldr	r3, [r5, r7]
   12f08:	str	r3, [sp, #8]
   12f0c:	ldr	r2, [r6, #20]
   12f10:	str	r2, [sp, #12]
   12f14:	bl	2f998 <mcsync_mutex_unlock@@Base+0x14>
   12f18:	mov	fp, r0
   12f1c:	ldr	r6, [r6]
   12f20:	ldr	r1, [sp, #12]
   12f24:	ldr	r0, [sp, #8]
   12f28:	bl	2fb84 <mcsync_mutex_unlock@@Base+0x200>
   12f2c:	add	r1, r1, r1, lsl #1
   12f30:	ldr	r2, [r6, fp, lsl #2]
   12f34:	ldr	r3, [sl, #4]
   12f38:	add	r1, r2, r1, lsl #2
   12f3c:	ldr	r0, [sl]
   12f40:	blx	r3
   12f44:	ldr	r3, [r5, r7]
   12f48:	ldr	r2, [r8, #4]
   12f4c:	add	r3, r3, r2
   12f50:	str	r3, [r5, r7]
   12f54:	b	12ed4 <mythread_function_queue_batch@@Base+0x44>
   12f58:	mov	r9, #0
   12f5c:	ldr	r3, [sp, #16]
   12f60:	ldr	r3, [r3, #8]
   12f64:	cmp	r3, r9
   12f68:	beq	12fc0 <mythread_function_queue_batch@@Base+0x130>
   12f6c:	ldr	r3, [r8, #36]	; 0x24
   12f70:	tst	r3, #1
   12f74:	beq	12fa8 <mythread_function_queue_batch@@Base+0x118>
   12f78:	mov	r3, #1
   12f7c:	str	r3, [sl, #12]
   12f80:	ldr	r3, [r8, #36]	; 0x24
   12f84:	tst	r3, #1
   12f88:	beq	12fa0 <mythread_function_queue_batch@@Base+0x110>
   12f8c:	ldr	r0, [sl, #24]
   12f90:	bl	100a0 <mythread_nanosleep_sleep@plt>
   12f94:	ldr	r3, [r8, #36]	; 0x24
   12f98:	tst	r3, #1
   12f9c:	bne	12f8c <mythread_function_queue_batch@@Base+0xfc>
   12fa0:	mov	r3, #0
   12fa4:	str	r3, [sl, #12]
   12fa8:	ldr	r3, [sp, #16]
   12fac:	ldr	r4, [r3]
   12fb0:	cmp	r4, #0
   12fb4:	beq	12f58 <mythread_function_queue_batch@@Base+0xc8>
   12fb8:	mov	r9, #0
   12fbc:	b	12ee0 <mythread_function_queue_batch@@Base+0x50>
   12fc0:	ldr	r1, [r8, #36]	; 0x24
   12fc4:	ldr	r2, [sl, #24]
   12fc8:	str	r2, [sp]
   12fcc:	ldr	r2, [sp, #20]
   12fd0:	mov	r0, sl
   12fd4:	bl	fecc <mythread_function_see_opt@plt>
   12fd8:	cmp	r0, #0
   12fdc:	beq	12f6c <mythread_function_queue_batch@@Base+0xdc>
   12fe0:	mov	r0, #0
   12fe4:	add	sp, sp, #28
   12fe8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012fec <mythread_function_queue_stream@@Base>:
   12fec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ff0:	sub	sp, sp, #28
   12ff4:	mov	sl, r0
   12ff8:	ldr	r9, [r0, #28]
   12ffc:	ldr	r3, [r9, #16]
   13000:	str	r3, [sp, #12]
   13004:	ldr	r1, [r0]
   13008:	mov	r0, r9
   1300c:	bl	fe54 <myhread_increase_id_by_entry_id@plt>
   13010:	mov	r4, r0
   13014:	str	r0, [sp, #20]
   13018:	ldr	r1, [sl, #20]
   1301c:	mov	r0, r9
   13020:	bl	10d9c <mythread_mutex_wait@plt>
   13024:	lsl	r7, r4, #2
   13028:	mov	r8, r9
   1302c:	b	130c0 <mythread_function_queue_stream@@Base+0xd4>
   13030:	ldr	r4, [r4, #12]
   13034:	cmp	r4, #0
   13038:	beq	130ac <mythread_function_queue_stream@@Base+0xc0>
   1303c:	ldr	r5, [r4, #4]
   13040:	ldr	r2, [r5, r7]
   13044:	ldr	r6, [r4]
   13048:	ldr	r3, [r6, #16]
   1304c:	cmp	r2, r3
   13050:	addcs	r9, r9, #1
   13054:	bcs	13030 <mythread_function_queue_stream@@Base+0x44>
   13058:	ldr	r0, [r5, r7]
   1305c:	ldr	r1, [r6, #20]
   13060:	ldr	r3, [r5, r7]
   13064:	str	r3, [sp, #8]
   13068:	ldr	fp, [r6, #20]
   1306c:	bl	2f998 <mcsync_mutex_unlock@@Base+0x14>
   13070:	mov	r8, r0
   13074:	ldr	r6, [r6]
   13078:	mov	r1, fp
   1307c:	ldr	r0, [sp, #8]
   13080:	bl	2fb84 <mcsync_mutex_unlock@@Base+0x200>
   13084:	add	r1, r1, r1, lsl #1
   13088:	ldr	r2, [r6, r8, lsl #2]
   1308c:	ldr	r3, [sl, #4]
   13090:	add	r1, r2, r1, lsl #2
   13094:	ldr	r0, [sl]
   13098:	blx	r3
   1309c:	ldr	r3, [r5, r7]
   130a0:	add	r3, r3, #1
   130a4:	str	r3, [r5, r7]
   130a8:	b	13030 <mythread_function_queue_stream@@Base+0x44>
   130ac:	ldr	r8, [sp, #16]
   130b0:	ldr	r3, [sp, #12]
   130b4:	ldr	r3, [r3, #8]
   130b8:	cmp	r3, r9
   130bc:	beq	1311c <mythread_function_queue_stream@@Base+0x130>
   130c0:	ldr	r3, [r8, #36]	; 0x24
   130c4:	tst	r3, #1
   130c8:	beq	130fc <mythread_function_queue_stream@@Base+0x110>
   130cc:	mov	r3, #1
   130d0:	str	r3, [sl, #12]
   130d4:	ldr	r3, [r8, #36]	; 0x24
   130d8:	tst	r3, #1
   130dc:	beq	130f4 <mythread_function_queue_stream@@Base+0x108>
   130e0:	ldr	r0, [sl, #24]
   130e4:	bl	100a0 <mythread_nanosleep_sleep@plt>
   130e8:	ldr	r3, [r8, #36]	; 0x24
   130ec:	tst	r3, #1
   130f0:	bne	130e0 <mythread_function_queue_stream@@Base+0xf4>
   130f4:	mov	r3, #0
   130f8:	str	r3, [sl, #12]
   130fc:	ldr	r3, [sp, #12]
   13100:	ldr	r4, [r3]
   13104:	cmp	r4, #0
   13108:	movne	r9, #0
   1310c:	strne	r8, [sp, #16]
   13110:	bne	1303c <mythread_function_queue_stream@@Base+0x50>
   13114:	mov	r9, #0
   13118:	b	130b0 <mythread_function_queue_stream@@Base+0xc4>
   1311c:	ldr	r1, [r8, #36]	; 0x24
   13120:	ldr	r2, [sl, #24]
   13124:	str	r2, [sp]
   13128:	ldr	r2, [sp, #20]
   1312c:	mov	r0, sl
   13130:	bl	fecc <mythread_function_see_opt@plt>
   13134:	cmp	r0, #0
   13138:	beq	130c0 <mythread_function_queue_stream@@Base+0xd4>
   1313c:	mov	r0, #0
   13140:	add	sp, sp, #28
   13144:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013148 <mythread_function@@Base>:
   13148:	push	{r4, r5, r6, lr}
   1314c:	mov	r4, r0
   13150:	ldr	r5, [r0, #28]
   13154:	ldr	r1, [r0, #20]
   13158:	mov	r0, r5
   1315c:	bl	10d9c <mythread_mutex_wait@plt>
   13160:	mov	r6, #0
   13164:	b	1319c <mythread_function@@Base+0x54>
   13168:	ldr	r3, [r4, #12]
   1316c:	orr	r3, r3, #4
   13170:	str	r3, [r4, #12]
   13174:	ldr	r1, [r4, #20]
   13178:	mov	r0, r5
   1317c:	bl	10d9c <mythread_mutex_wait@plt>
   13180:	ldr	r3, [r5, #36]	; 0x24
   13184:	tst	r3, #2
   13188:	bne	131e8 <mythread_function@@Base+0xa0>
   1318c:	ldr	r3, [r4, #12]
   13190:	tst	r3, #2
   13194:	bne	131e8 <mythread_function@@Base+0xa0>
   13198:	str	r6, [r4, #12]
   1319c:	ldr	r3, [r4, #4]
   131a0:	mov	r1, r4
   131a4:	ldr	r0, [r4]
   131a8:	blx	r3
   131ac:	ldr	r3, [r4, #12]
   131b0:	orr	r3, r3, #8
   131b4:	str	r3, [r4, #12]
   131b8:	ldr	r3, [r4, #12]
   131bc:	tst	r3, #1
   131c0:	beq	13168 <mythread_function@@Base+0x20>
   131c4:	ldr	r3, [r4, #12]
   131c8:	tst	r3, #1
   131cc:	beq	13180 <mythread_function@@Base+0x38>
   131d0:	ldr	r0, [r4, #24]
   131d4:	bl	100a0 <mythread_nanosleep_sleep@plt>
   131d8:	ldr	r3, [r4, #12]
   131dc:	tst	r3, #1
   131e0:	bne	131d0 <mythread_function@@Base+0x88>
   131e4:	b	13180 <mythread_function@@Base+0x38>
   131e8:	ldr	r1, [r4, #20]
   131ec:	mov	r0, r5
   131f0:	bl	10634 <mythread_mutex_close@plt>
   131f4:	ldr	r0, [r4, #24]
   131f8:	bl	10c04 <mythread_nanosleep_destroy@plt>
   131fc:	mov	r3, #2
   13200:	str	r3, [r4, #12]
   13204:	mov	r0, #0
   13208:	pop	{r4, r5, r6, pc}

0001320c <mycore_power@@Base>:
   1320c:	mov	r3, r0
   13210:	cmp	r1, #0
   13214:	beq	13234 <mycore_power@@Base+0x28>
   13218:	mov	r0, #1
   1321c:	tst	r1, #1
   13220:	mulne	r0, r3, r0
   13224:	mul	r3, r3, r3
   13228:	lsrs	r1, r1, #1
   1322c:	bne	1321c <mycore_power@@Base+0x10>
   13230:	bx	lr
   13234:	mov	r0, #1
   13238:	bx	lr

0001323c <mycore_strncasecmp@@Base>:
   1323c:	push	{r4, r5, r6, r7, lr}
   13240:	mov	r4, r0
   13244:	mov	ip, r1
   13248:	cmp	r1, #0
   1324c:	cmpne	r0, #0
   13250:	beq	132bc <mycore_strncasecmp@@Base+0x80>
   13254:	cmp	r2, #0
   13258:	beq	132d8 <mycore_strncasecmp@@Base+0x9c>
   1325c:	ldr	r3, [pc, #124]	; 132e0 <mycore_strncasecmp@@Base+0xa4>
   13260:	add	r3, pc, r3
   13264:	ldrb	r1, [r0]
   13268:	ldrb	r0, [ip]
   1326c:	ldrb	r1, [r3, r1]
   13270:	ldrb	r3, [r3, r0]
   13274:	cmp	r1, r3
   13278:	bne	132c8 <mycore_strncasecmp@@Base+0x8c>
   1327c:	add	r3, r4, #1
   13280:	mov	r1, ip
   13284:	add	r7, r4, r2
   13288:	ldr	lr, [pc, #84]	; 132e4 <mycore_strncasecmp@@Base+0xa8>
   1328c:	add	lr, pc, lr
   13290:	sub	r0, r3, r4
   13294:	cmp	r3, r7
   13298:	beq	132d0 <mycore_strncasecmp@@Base+0x94>
   1329c:	ldrb	r6, [r3], #1
   132a0:	ldrb	r5, [r1, #1]!
   132a4:	ldrb	r6, [lr, r6]
   132a8:	ldrb	r5, [lr, r5]
   132ac:	cmp	r6, r5
   132b0:	beq	13290 <mycore_strncasecmp@@Base+0x54>
   132b4:	sub	r0, r2, r0
   132b8:	pop	{r4, r5, r6, r7, pc}
   132bc:	subs	r0, r0, r1
   132c0:	movne	r0, #1
   132c4:	pop	{r4, r5, r6, r7, pc}
   132c8:	mov	r0, #0
   132cc:	b	132b4 <mycore_strncasecmp@@Base+0x78>
   132d0:	mov	r0, #0
   132d4:	pop	{r4, r5, r6, r7, pc}
   132d8:	mov	r0, r2
   132dc:	pop	{r4, r5, r6, r7, pc}
   132e0:	andeq	ip, r1, r4, asr sp
   132e4:	andeq	ip, r1, r8, lsr #26

000132e8 <mycore_strcasecmp@@Base>:
   132e8:	mov	r3, r0
   132ec:	mov	r2, r1
   132f0:	cmp	r1, #0
   132f4:	cmpne	r0, #0
   132f8:	beq	13368 <mycore_strcasecmp@@Base+0x80>
   132fc:	push	{r4, lr}
   13300:	ldrb	r0, [r0]
   13304:	ldr	r1, [pc, #124]	; 13388 <mycore_strcasecmp@@Base+0xa0>
   13308:	add	r1, pc, r1
   1330c:	ldrb	lr, [r2]
   13310:	ldrb	ip, [r1, r0]
   13314:	ldrb	r1, [r1, lr]
   13318:	cmp	ip, r1
   1331c:	bne	13374 <mycore_strcasecmp@@Base+0x8c>
   13320:	cmp	r0, #0
   13324:	beq	13380 <mycore_strcasecmp@@Base+0x98>
   13328:	mov	r0, r3
   1332c:	mov	r1, r2
   13330:	mov	r2, #0
   13334:	ldr	ip, [pc, #80]	; 1338c <mycore_strcasecmp@@Base+0xa4>
   13338:	add	ip, pc, ip
   1333c:	add	r2, r2, #1
   13340:	ldrb	r3, [r0, #1]!
   13344:	ldrb	lr, [r1, #1]!
   13348:	ldrb	r4, [ip, r3]
   1334c:	ldrb	lr, [ip, lr]
   13350:	cmp	r4, lr
   13354:	bne	13378 <mycore_strcasecmp@@Base+0x90>
   13358:	cmp	r3, #0
   1335c:	bne	1333c <mycore_strcasecmp@@Base+0x54>
   13360:	mov	r0, #0
   13364:	pop	{r4, pc}
   13368:	subs	r0, r0, r1
   1336c:	movne	r0, #1
   13370:	bx	lr
   13374:	mov	r2, #0
   13378:	add	r0, r2, #1
   1337c:	pop	{r4, pc}
   13380:	mov	r0, #0
   13384:	pop	{r4, pc}
   13388:	andeq	ip, r1, ip, lsr #25
   1338c:	andeq	ip, r1, ip, ror ip

00013390 <mycore_strncmp@@Base>:
   13390:	push	{r4, r5, r6, lr}
   13394:	mov	lr, r0
   13398:	mov	ip, r1
   1339c:	cmp	r1, #0
   133a0:	cmpne	r0, #0
   133a4:	beq	133f0 <mycore_strncmp@@Base+0x60>
   133a8:	cmp	r2, #0
   133ac:	beq	1340c <mycore_strncmp@@Base+0x7c>
   133b0:	ldrb	r1, [r0]
   133b4:	ldrb	r3, [ip]
   133b8:	cmp	r1, r3
   133bc:	addeq	r3, r0, #1
   133c0:	moveq	r1, ip
   133c4:	addeq	r6, r0, r2
   133c8:	bne	133fc <mycore_strncmp@@Base+0x6c>
   133cc:	sub	r0, r3, lr
   133d0:	cmp	r3, r6
   133d4:	beq	13404 <mycore_strncmp@@Base+0x74>
   133d8:	ldrb	r4, [r3], #1
   133dc:	ldrb	r5, [r1, #1]!
   133e0:	cmp	r5, r4
   133e4:	beq	133cc <mycore_strncmp@@Base+0x3c>
   133e8:	sub	r0, r2, r0
   133ec:	pop	{r4, r5, r6, pc}
   133f0:	subs	r0, r0, r1
   133f4:	movne	r0, #1
   133f8:	pop	{r4, r5, r6, pc}
   133fc:	mov	r0, #0
   13400:	b	133e8 <mycore_strncmp@@Base+0x58>
   13404:	mov	r0, #0
   13408:	pop	{r4, r5, r6, pc}
   1340c:	mov	r0, r2
   13410:	pop	{r4, r5, r6, pc}

00013414 <mycore_strcmp@@Base>:
   13414:	mov	r3, r0
   13418:	mov	r2, r1
   1341c:	cmp	r1, #0
   13420:	cmpne	r0, #0
   13424:	beq	13470 <mycore_strcmp@@Base+0x5c>
   13428:	ldrb	r1, [r0]
   1342c:	ldrb	r0, [r2]
   13430:	cmp	r0, r1
   13434:	bne	1347c <mycore_strcmp@@Base+0x68>
   13438:	cmp	r1, #0
   1343c:	beq	13488 <mycore_strcmp@@Base+0x74>
   13440:	mov	r0, r3
   13444:	mov	r1, r2
   13448:	mov	r2, #0
   1344c:	add	r2, r2, #1
   13450:	ldrb	r3, [r0, #1]!
   13454:	ldrb	ip, [r1, #1]!
   13458:	cmp	ip, r3
   1345c:	bne	13480 <mycore_strcmp@@Base+0x6c>
   13460:	cmp	r3, #0
   13464:	bne	1344c <mycore_strcmp@@Base+0x38>
   13468:	mov	r0, #0
   1346c:	bx	lr
   13470:	subs	r0, r0, r1
   13474:	movne	r0, #1
   13478:	bx	lr
   1347c:	mov	r2, #0
   13480:	add	r0, r2, #1
   13484:	bx	lr
   13488:	mov	r0, #0
   1348c:	bx	lr

00013490 <mycore_strcmp_ws@@Base>:
   13490:	mov	r3, r0
   13494:	mov	r2, r1
   13498:	cmp	r1, #0
   1349c:	cmpne	r0, #0
   134a0:	beq	13540 <mycore_strcmp_ws@@Base+0xb0>
   134a4:	push	{lr}		; (str lr, [sp, #-4]!)
   134a8:	ldrb	r0, [r0]
   134ac:	ldrb	r1, [r1]
   134b0:	cmp	r1, r0
   134b4:	bne	1354c <mycore_strcmp_ws@@Base+0xbc>
   134b8:	sub	r1, r0, #9
   134bc:	uxtb	r1, r1
   134c0:	sub	ip, r0, #12
   134c4:	uxtb	ip, ip
   134c8:	cmp	ip, #1
   134cc:	cmphi	r1, #1
   134d0:	movls	r1, #1
   134d4:	movhi	r1, #0
   134d8:	tst	r0, #223	; 0xdf
   134dc:	orreq	r1, r1, #1
   134e0:	cmp	r1, #0
   134e4:	bne	13558 <mycore_strcmp_ws@@Base+0xc8>
   134e8:	mov	r0, r3
   134ec:	mov	r1, r2
   134f0:	mov	lr, #0
   134f4:	add	lr, lr, #1
   134f8:	ldrb	r2, [r0, #1]!
   134fc:	ldrb	r3, [r1, #1]!
   13500:	cmp	r3, r2
   13504:	bne	13550 <mycore_strcmp_ws@@Base+0xc0>
   13508:	sub	r3, r2, #9
   1350c:	uxtb	r3, r3
   13510:	sub	ip, r2, #12
   13514:	uxtb	ip, ip
   13518:	cmp	ip, #1
   1351c:	cmphi	r3, #1
   13520:	movls	r3, #1
   13524:	movhi	r3, #0
   13528:	tst	r2, #223	; 0xdf
   1352c:	orreq	r3, r3, #1
   13530:	cmp	r3, #0
   13534:	beq	134f4 <mycore_strcmp_ws@@Base+0x64>
   13538:	mov	r0, #0
   1353c:	pop	{pc}		; (ldr pc, [sp], #4)
   13540:	subs	r0, r0, r1
   13544:	movne	r0, #1
   13548:	bx	lr
   1354c:	mov	lr, #0
   13550:	add	r0, lr, #1
   13554:	pop	{pc}		; (ldr pc, [sp], #4)
   13558:	mov	r0, #0
   1355c:	pop	{pc}		; (ldr pc, [sp], #4)

00013560 <mycore_ustrcasecmp_without_checks_by_secondary@@Base>:
   13560:	ldrb	r2, [r0]
   13564:	cmp	r2, #0
   13568:	beq	135c8 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x68>
   1356c:	ldr	r3, [pc, #116]	; 135e8 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x88>
   13570:	add	r3, pc, r3
   13574:	ldrb	ip, [r1]
   13578:	ldrb	r2, [r3, r2]
   1357c:	ldrb	r3, [r3, ip]
   13580:	cmp	r2, r3
   13584:	bne	135d0 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x70>
   13588:	ldr	r2, [pc, #92]	; 135ec <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x8c>
   1358c:	add	r2, pc, r2
   13590:	ldrb	r3, [r0, #1]!
   13594:	cmp	r3, #0
   13598:	beq	135e0 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x80>
   1359c:	push	{lr}		; (str lr, [sp, #-4]!)
   135a0:	ldrb	lr, [r1, #1]!
   135a4:	ldrb	ip, [r2, r3]
   135a8:	ldrb	r3, [r2, lr]
   135ac:	cmp	ip, r3
   135b0:	bne	135d8 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x78>
   135b4:	ldrb	r3, [r0, #1]!
   135b8:	cmp	r3, #0
   135bc:	bne	135a0 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x40>
   135c0:	mov	r0, #1
   135c4:	pop	{pc}		; (ldr pc, [sp], #4)
   135c8:	mov	r0, #1
   135cc:	bx	lr
   135d0:	mov	r0, #0
   135d4:	bx	lr
   135d8:	mov	r0, #0
   135dc:	pop	{pc}		; (ldr pc, [sp], #4)
   135e0:	mov	r0, #1
   135e4:	bx	lr
   135e8:	andeq	ip, r1, r4, asr #20
   135ec:	andeq	ip, r1, r8, lsr #20

000135f0 <mycore_utils_avl_tree_create@@Base>:
   135f0:	push	{r4, lr}
   135f4:	mov	r1, #4
   135f8:	mov	r0, #1
   135fc:	bl	ff14 <mycore_calloc@plt>
   13600:	pop	{r4, pc}

00013604 <mycore_utils_avl_tree_init@@Base>:
   13604:	push	{r4, lr}
   13608:	mov	r4, r0
   1360c:	bl	1001c <mcobject_create@plt>
   13610:	str	r0, [r4]
   13614:	cmp	r0, #0
   13618:	beq	13634 <mycore_utils_avl_tree_init@@Base+0x30>
   1361c:	mov	r2, #24
   13620:	mov	r1, #256	; 0x100
   13624:	bl	10778 <mcobject_init@plt>
   13628:	adds	r0, r0, #0
   1362c:	movne	r0, #1
   13630:	pop	{r4, pc}
   13634:	mov	r0, #2
   13638:	pop	{r4, pc}

0001363c <mycore_utils_avl_tree_clean@@Base>:
   1363c:	push	{r4, lr}
   13640:	ldr	r0, [r0]
   13644:	bl	10f70 <mcobject_clean@plt>
   13648:	pop	{r4, pc}

0001364c <mycore_utils_avl_tree_destroy@@Base>:
   1364c:	push	{r4, r5, r6, lr}
   13650:	subs	r4, r0, #0
   13654:	beq	13670 <mycore_utils_avl_tree_destroy@@Base+0x24>
   13658:	mov	r5, r1
   1365c:	mov	r1, #1
   13660:	ldr	r0, [r4]
   13664:	bl	fdd0 <mcobject_destroy@plt>
   13668:	cmp	r5, #0
   1366c:	bne	13678 <mycore_utils_avl_tree_destroy@@Base+0x2c>
   13670:	mov	r0, r4
   13674:	pop	{r4, r5, r6, pc}
   13678:	mov	r0, r4
   1367c:	bl	10dcc <mycore_free@plt>
   13680:	mov	r4, #0
   13684:	b	13670 <mycore_utils_avl_tree_destroy@@Base+0x24>

00013688 <mycore_utils_avl_tree_node_create_root@@Base>:
   13688:	push	{r4, r5, r6, lr}
   1368c:	mov	r5, r1
   13690:	mov	r4, r2
   13694:	mov	r1, #0
   13698:	ldr	r0, [r0]
   1369c:	bl	10a60 <mcobject_malloc@plt>
   136a0:	mov	r2, #0
   136a4:	str	r2, [r0, #8]
   136a8:	str	r2, [r0, #12]
   136ac:	str	r2, [r0, #16]
   136b0:	str	r2, [r0, #20]
   136b4:	str	r5, [r0, #4]
   136b8:	str	r4, [r0]
   136bc:	pop	{r4, r5, r6, pc}

000136c0 <mycore_utils_avl_tree_node_clean@@Base>:
   136c0:	mov	r3, #0
   136c4:	str	r3, [r0]
   136c8:	str	r3, [r0, #4]
   136cc:	str	r3, [r0, #8]
   136d0:	str	r3, [r0, #12]
   136d4:	str	r3, [r0, #16]
   136d8:	str	r3, [r0, #20]
   136dc:	bx	lr

000136e0 <mycore_utils_avl_tree_node_height@@Base>:
   136e0:	cmp	r0, #0
   136e4:	ldrshne	r0, [r0, #20]
   136e8:	moveq	r0, #0
   136ec:	bx	lr

000136f0 <mycore_utils_avl_tree_node_balance_factor@@Base>:
   136f0:	push	{r4, r5, r6, lr}
   136f4:	mov	r5, r0
   136f8:	ldr	r0, [r0, #12]
   136fc:	bl	10fb8 <mycore_utils_avl_tree_node_height@plt>
   13700:	mov	r4, r0
   13704:	ldr	r0, [r5, #8]
   13708:	bl	10fb8 <mycore_utils_avl_tree_node_height@plt>
   1370c:	sub	r0, r4, r0
   13710:	sxth	r0, r0
   13714:	pop	{r4, r5, r6, pc}

00013718 <mycore_utils_avl_tree_node_set_height@@Base>:
   13718:	push	{r4, r5, r6, lr}
   1371c:	mov	r5, r0
   13720:	ldr	r0, [r0, #8]
   13724:	bl	10fb8 <mycore_utils_avl_tree_node_height@plt>
   13728:	mov	r4, r0
   1372c:	ldr	r0, [r5, #12]
   13730:	bl	10fb8 <mycore_utils_avl_tree_node_height@plt>
   13734:	cmp	r4, r0
   13738:	movge	r0, r4
   1373c:	add	r0, r0, #1
   13740:	strh	r0, [r5, #20]
   13744:	pop	{r4, r5, r6, pc}

00013748 <mycore_utils_avl_tree_node_rotate_right@@Base>:
   13748:	push	{r4, lr}
   1374c:	ldr	r4, [r0, #8]
   13750:	ldr	r3, [r0, #16]
   13754:	str	r3, [r4, #16]
   13758:	ldr	r3, [r4, #12]
   1375c:	cmp	r3, #0
   13760:	strne	r0, [r3, #16]
   13764:	ldr	r3, [r4, #12]
   13768:	str	r3, [r0, #8]
   1376c:	str	r4, [r0, #16]
   13770:	str	r0, [r4, #12]
   13774:	bl	106c4 <mycore_utils_avl_tree_node_set_height@plt>
   13778:	mov	r0, r4
   1377c:	bl	106c4 <mycore_utils_avl_tree_node_set_height@plt>
   13780:	mov	r0, r4
   13784:	pop	{r4, pc}

00013788 <mycore_utils_avl_tree_node_rotate_left@@Base>:
   13788:	push	{r4, lr}
   1378c:	ldr	r4, [r0, #12]
   13790:	ldr	r3, [r0, #16]
   13794:	str	r3, [r4, #16]
   13798:	ldr	r3, [r4, #8]
   1379c:	cmp	r3, #0
   137a0:	strne	r0, [r3, #16]
   137a4:	ldr	r3, [r4, #8]
   137a8:	str	r3, [r0, #12]
   137ac:	str	r4, [r0, #16]
   137b0:	str	r0, [r4, #8]
   137b4:	bl	106c4 <mycore_utils_avl_tree_node_set_height@plt>
   137b8:	mov	r0, r4
   137bc:	bl	106c4 <mycore_utils_avl_tree_node_set_height@plt>
   137c0:	mov	r0, r4
   137c4:	pop	{r4, pc}

000137c8 <mycore_utils_avl_tree_node_balance@@Base>:
   137c8:	push	{r4, r5, r6, lr}
   137cc:	mov	r4, r0
   137d0:	mov	r6, r1
   137d4:	ldr	r0, [r0, #8]
   137d8:	bl	10fb8 <mycore_utils_avl_tree_node_height@plt>
   137dc:	mov	r5, r0
   137e0:	ldr	r0, [r4, #12]
   137e4:	bl	10fb8 <mycore_utils_avl_tree_node_height@plt>
   137e8:	cmp	r5, r0
   137ec:	movge	r3, r5
   137f0:	movlt	r3, r0
   137f4:	add	r3, r3, #1
   137f8:	strh	r3, [r4, #20]
   137fc:	sub	r0, r0, r5
   13800:	cmn	r0, #2
   13804:	beq	13874 <mycore_utils_avl_tree_node_balance@@Base+0xac>
   13808:	cmp	r0, #2
   1380c:	bne	138d4 <mycore_utils_avl_tree_node_balance@@Base+0x10c>
   13810:	ldr	r0, [r4, #12]
   13814:	bl	fdac <mycore_utils_avl_tree_node_balance_factor@plt>
   13818:	cmp	r0, #0
   1381c:	blt	13848 <mycore_utils_avl_tree_node_balance@@Base+0x80>
   13820:	ldr	r5, [r4, #16]
   13824:	cmp	r5, #0
   13828:	beq	13868 <mycore_utils_avl_tree_node_balance@@Base+0xa0>
   1382c:	ldr	r3, [r5, #12]
   13830:	cmp	r4, r3
   13834:	beq	13858 <mycore_utils_avl_tree_node_balance@@Base+0x90>
   13838:	mov	r0, r4
   1383c:	bl	10c10 <mycore_utils_avl_tree_node_rotate_left@plt>
   13840:	str	r0, [r5, #8]
   13844:	pop	{r4, r5, r6, pc}
   13848:	ldr	r0, [r4, #12]
   1384c:	bl	fd4c <mycore_utils_avl_tree_node_rotate_right@plt>
   13850:	str	r0, [r4, #12]
   13854:	b	13820 <mycore_utils_avl_tree_node_balance@@Base+0x58>
   13858:	mov	r0, r4
   1385c:	bl	10c10 <mycore_utils_avl_tree_node_rotate_left@plt>
   13860:	str	r0, [r5, #12]
   13864:	pop	{r4, r5, r6, pc}
   13868:	mov	r0, r4
   1386c:	bl	10c10 <mycore_utils_avl_tree_node_rotate_left@plt>
   13870:	pop	{r4, r5, r6, pc}
   13874:	ldr	r0, [r4, #8]
   13878:	bl	fdac <mycore_utils_avl_tree_node_balance_factor@plt>
   1387c:	cmp	r0, #0
   13880:	ble	13890 <mycore_utils_avl_tree_node_balance@@Base+0xc8>
   13884:	ldr	r0, [r4, #8]
   13888:	bl	10c10 <mycore_utils_avl_tree_node_rotate_left@plt>
   1388c:	str	r0, [r4, #8]
   13890:	ldr	r5, [r4, #16]
   13894:	cmp	r5, #0
   13898:	beq	138c8 <mycore_utils_avl_tree_node_balance@@Base+0x100>
   1389c:	ldr	r3, [r5, #12]
   138a0:	cmp	r4, r3
   138a4:	beq	138b8 <mycore_utils_avl_tree_node_balance@@Base+0xf0>
   138a8:	mov	r0, r4
   138ac:	bl	fd4c <mycore_utils_avl_tree_node_rotate_right@plt>
   138b0:	str	r0, [r5, #8]
   138b4:	pop	{r4, r5, r6, pc}
   138b8:	mov	r0, r4
   138bc:	bl	fd4c <mycore_utils_avl_tree_node_rotate_right@plt>
   138c0:	str	r0, [r5, #12]
   138c4:	pop	{r4, r5, r6, pc}
   138c8:	mov	r0, r4
   138cc:	bl	fd4c <mycore_utils_avl_tree_node_rotate_right@plt>
   138d0:	pop	{r4, r5, r6, pc}
   138d4:	ldr	r3, [r4, #16]
   138d8:	cmp	r3, #0
   138dc:	streq	r4, [r6]
   138e0:	ldr	r0, [r4, #16]
   138e4:	pop	{r4, r5, r6, pc}

000138e8 <mycore_utils_avl_tree_add@@Base>:
   138e8:	push	{r4, r5, r6, r7, r8, lr}
   138ec:	mov	r7, r1
   138f0:	mov	r5, r2
   138f4:	mov	r8, r3
   138f8:	ldr	r4, [r1]
   138fc:	cmp	r4, #0
   13900:	beq	1391c <mycore_utils_avl_tree_add@@Base+0x34>
   13904:	mov	r1, #0
   13908:	ldr	r0, [r0]
   1390c:	bl	10a60 <mcobject_malloc@plt>
   13910:	mov	r6, r0
   13914:	bl	10fc4 <mycore_utils_avl_tree_node_clean@plt>
   13918:	b	1394c <mycore_utils_avl_tree_add@@Base+0x64>
   1391c:	mov	r2, r3
   13920:	mov	r1, r5
   13924:	bl	10ed4 <mycore_utils_avl_tree_node_create_root@plt>
   13928:	str	r0, [r7]
   1392c:	pop	{r4, r5, r6, r7, r8, pc}
   13930:	str	r8, [r4]
   13934:	pop	{r4, r5, r6, r7, r8, pc}
   13938:	pop	{r4, r5, r6, r7, r8, pc}
   1393c:	ldr	r3, [r4, #12]
   13940:	cmp	r3, #0
   13944:	beq	1399c <mycore_utils_avl_tree_add@@Base+0xb4>
   13948:	mov	r4, r3
   1394c:	ldr	r3, [r4, #4]
   13950:	cmp	r5, r3
   13954:	beq	13930 <mycore_utils_avl_tree_add@@Base+0x48>
   13958:	cmp	r5, r3
   1395c:	bcs	1393c <mycore_utils_avl_tree_add@@Base+0x54>
   13960:	ldr	r3, [r4, #8]
   13964:	cmp	r3, #0
   13968:	bne	13948 <mycore_utils_avl_tree_add@@Base+0x60>
   1396c:	str	r6, [r4, #8]
   13970:	str	r4, [r6, #16]
   13974:	str	r5, [r6, #4]
   13978:	str	r8, [r6]
   1397c:	cmp	r6, #0
   13980:	beq	13938 <mycore_utils_avl_tree_add@@Base+0x50>
   13984:	mov	r1, r7
   13988:	mov	r0, r6
   1398c:	bl	10a18 <mycore_utils_avl_tree_node_balance@plt>
   13990:	subs	r6, r0, #0
   13994:	bne	13984 <mycore_utils_avl_tree_add@@Base+0x9c>
   13998:	pop	{r4, r5, r6, r7, r8, pc}
   1399c:	str	r6, [r4, #12]
   139a0:	str	r4, [r6, #16]
   139a4:	str	r5, [r6, #4]
   139a8:	str	r8, [r6]
   139ac:	b	1397c <mycore_utils_avl_tree_add@@Base+0x94>

000139b0 <mycore_utils_avl_tree_find_min@@Base>:
   139b0:	cmp	r0, #0
   139b4:	bne	139c0 <mycore_utils_avl_tree_find_min@@Base+0x10>
   139b8:	bx	lr
   139bc:	mov	r0, r3
   139c0:	ldr	r3, [r0, #12]
   139c4:	cmp	r3, #0
   139c8:	bne	139bc <mycore_utils_avl_tree_find_min@@Base+0xc>
   139cc:	bx	lr

000139d0 <mycore_utils_avl_tree_rotate_for_delete@@Base>:
   139d0:	push	{r4, lr}
   139d4:	mov	r3, r0
   139d8:	mov	r4, r2
   139dc:	cmp	r1, #0
   139e0:	beq	13a98 <mycore_utils_avl_tree_rotate_for_delete@@Base+0xc8>
   139e4:	ldr	r2, [r0, #8]
   139e8:	cmp	r1, r2
   139ec:	beq	13a6c <mycore_utils_avl_tree_rotate_for_delete@@Base+0x9c>
   139f0:	ldr	r2, [r1, #16]
   139f4:	mov	r0, #0
   139f8:	str	r0, [r2, #12]
   139fc:	ldr	r2, [r3, #16]
   13a00:	str	r2, [r1, #16]
   13a04:	ldr	r2, [r3, #12]
   13a08:	str	r2, [r1, #12]
   13a0c:	ldr	r2, [r3, #8]
   13a10:	str	r2, [r1, #8]
   13a14:	ldr	r2, [r3, #8]
   13a18:	cmp	r2, r0
   13a1c:	strne	r1, [r2, #16]
   13a20:	ldr	r2, [r3, #12]
   13a24:	cmp	r2, #0
   13a28:	strne	r1, [r2, #16]
   13a2c:	mov	r0, r1
   13a30:	ldr	r2, [r3, #16]
   13a34:	cmp	r2, #0
   13a38:	streq	r1, [r4]
   13a3c:	beq	13a50 <mycore_utils_avl_tree_rotate_for_delete@@Base+0x80>
   13a40:	ldr	ip, [r2, #8]
   13a44:	cmp	r3, ip
   13a48:	streq	r1, [r2, #8]
   13a4c:	strne	r1, [r2, #12]
   13a50:	cmp	r0, #0
   13a54:	beq	13abc <mycore_utils_avl_tree_rotate_for_delete@@Base+0xec>
   13a58:	mov	r1, r4
   13a5c:	bl	10a18 <mycore_utils_avl_tree_node_balance@plt>
   13a60:	cmp	r0, #0
   13a64:	bne	13a58 <mycore_utils_avl_tree_rotate_for_delete@@Base+0x88>
   13a68:	pop	{r4, pc}
   13a6c:	ldr	r0, [r1, #8]
   13a70:	cmp	r0, #0
   13a74:	moveq	r0, r1
   13a78:	ldr	r2, [r3, #16]
   13a7c:	str	r2, [r1, #16]
   13a80:	ldr	r2, [r3, #12]
   13a84:	str	r2, [r1, #12]
   13a88:	ldr	r2, [r3, #12]
   13a8c:	cmp	r2, #0
   13a90:	strne	r1, [r2, #16]
   13a94:	b	13a30 <mycore_utils_avl_tree_rotate_for_delete@@Base+0x60>
   13a98:	ldr	r0, [r0, #16]
   13a9c:	cmp	r0, #0
   13aa0:	beq	13ac0 <mycore_utils_avl_tree_rotate_for_delete@@Base+0xf0>
   13aa4:	ldr	r2, [r0, #8]
   13aa8:	cmp	r3, r2
   13aac:	ldr	r3, [r3, #12]
   13ab0:	streq	r3, [r0, #8]
   13ab4:	strne	r3, [r0, #12]
   13ab8:	b	13a58 <mycore_utils_avl_tree_rotate_for_delete@@Base+0x88>
   13abc:	pop	{r4, pc}
   13ac0:	ldr	r3, [r3, #12]
   13ac4:	str	r3, [r2]
   13ac8:	pop	{r4, pc}

00013acc <mycore_utils_avl_tree_delete@@Base>:
   13acc:	push	{r4, r5, r6, lr}
   13ad0:	ldr	r4, [r1]
   13ad4:	cmp	r4, #0
   13ad8:	beq	13b48 <mycore_utils_avl_tree_delete@@Base+0x7c>
   13adc:	ldr	r3, [r4, #4]
   13ae0:	cmp	r2, r3
   13ae4:	beq	13b08 <mycore_utils_avl_tree_delete@@Base+0x3c>
   13ae8:	cmp	r2, r3
   13aec:	ldrcc	r4, [r4, #8]
   13af0:	ldrcs	r4, [r4, #12]
   13af4:	cmp	r4, #0
   13af8:	beq	13b40 <mycore_utils_avl_tree_delete@@Base+0x74>
   13afc:	ldr	r3, [r4, #4]
   13b00:	cmp	r3, r2
   13b04:	bne	13ae8 <mycore_utils_avl_tree_delete@@Base+0x1c>
   13b08:	mov	r5, r1
   13b0c:	mov	r6, r0
   13b10:	ldr	r0, [r4, #8]
   13b14:	bl	fd10 <mycore_utils_avl_tree_find_min@plt>
   13b18:	mov	r2, r5
   13b1c:	mov	r1, r0
   13b20:	mov	r0, r4
   13b24:	bl	10478 <mycore_utils_avl_tree_rotate_for_delete@plt>
   13b28:	ldr	r5, [r4]
   13b2c:	mov	r1, r4
   13b30:	ldr	r0, [r6]
   13b34:	bl	ff80 <mcobject_free@plt>
   13b38:	mov	r0, r5
   13b3c:	pop	{r4, r5, r6, pc}
   13b40:	mov	r5, #0
   13b44:	b	13b38 <mycore_utils_avl_tree_delete@@Base+0x6c>
   13b48:	mov	r5, #0
   13b4c:	b	13b38 <mycore_utils_avl_tree_delete@@Base+0x6c>

00013b50 <mycore_utils_avl_tree_search_by_type@@Base>:
   13b50:	subs	r0, r1, #0
   13b54:	bxeq	lr
   13b58:	ldr	r3, [r0, #4]
   13b5c:	cmp	r2, r3
   13b60:	beq	13b88 <mycore_utils_avl_tree_search_by_type@@Base+0x38>
   13b64:	cmp	r2, r3
   13b68:	ldrcc	r0, [r0, #8]
   13b6c:	ldrcs	r0, [r0, #12]
   13b70:	cmp	r0, #0
   13b74:	beq	13b8c <mycore_utils_avl_tree_search_by_type@@Base+0x3c>
   13b78:	ldr	r3, [r0, #4]
   13b7c:	cmp	r3, r2
   13b80:	bne	13b64 <mycore_utils_avl_tree_search_by_type@@Base+0x14>
   13b84:	bx	lr
   13b88:	bx	lr
   13b8c:	bx	lr

00013b90 <mycore_utils_avl_tree_list_all_nodes@@Base>:
   13b90:	push	{r4, r5, r6, r7, r8, lr}
   13b94:	subs	r4, r1, #0
   13b98:	popeq	{r4, r5, r6, r7, r8, pc}
   13b9c:	mov	r6, r3
   13ba0:	mov	r5, r2
   13ba4:	mov	r7, r0
   13ba8:	mov	r1, r3
   13bac:	mov	r0, r4
   13bb0:	blx	r2
   13bb4:	mov	r3, r6
   13bb8:	mov	r2, r5
   13bbc:	ldr	r1, [r4, #8]
   13bc0:	mov	r0, r7
   13bc4:	bl	10274 <mycore_utils_avl_tree_list_all_nodes@plt>
   13bc8:	mov	r3, r6
   13bcc:	mov	r2, r5
   13bd0:	ldr	r1, [r4, #12]
   13bd4:	mov	r0, r7
   13bd8:	bl	10274 <mycore_utils_avl_tree_list_all_nodes@plt>
   13bdc:	pop	{r4, r5, r6, r7, r8, pc}

00013be0 <mchar_async_create@@Base>:
   13be0:	push	{r4, lr}
   13be4:	mov	r1, #84	; 0x54
   13be8:	mov	r0, #1
   13bec:	bl	ff14 <mycore_calloc@plt>
   13bf0:	pop	{r4, pc}

00013bf4 <mchar_async_mem_malloc@@Base>:
   13bf4:	push	{r4, r5, r6, lr}
   13bf8:	subs	r4, r2, #0
   13bfc:	popeq	{r4, r5, r6, pc}
   13c00:	mov	r5, r3
   13c04:	mov	r6, r0
   13c08:	ldr	r0, [r4]
   13c0c:	cmp	r0, #0
   13c10:	beq	13c48 <mchar_async_mem_malloc@@Base+0x54>
   13c14:	ldr	r3, [r4, #8]
   13c18:	cmp	r3, r5
   13c1c:	bcc	13c2c <mchar_async_mem_malloc@@Base+0x38>
   13c20:	mov	r3, #0
   13c24:	str	r3, [r4, #4]
   13c28:	pop	{r4, r5, r6, pc}
   13c2c:	bl	10dcc <mycore_free@plt>
   13c30:	ldr	r0, [r6]
   13c34:	add	r0, r5, r0
   13c38:	str	r0, [r4, #8]
   13c3c:	bl	10c94 <mycore_malloc@plt>
   13c40:	str	r0, [r4]
   13c44:	b	13c20 <mchar_async_mem_malloc@@Base+0x2c>
   13c48:	ldr	r0, [r6]
   13c4c:	cmp	r0, r3
   13c50:	movcc	r0, r3
   13c54:	str	r0, [r4, #8]
   13c58:	bl	10c94 <mycore_malloc@plt>
   13c5c:	str	r0, [r4]
   13c60:	b	13c20 <mchar_async_mem_malloc@@Base+0x2c>

00013c64 <mchar_sync_chunk_find_by_size@@Base>:
   13c64:	ldr	r3, [r0]
   13c68:	ldr	r0, [r3, #12]
   13c6c:	cmp	r0, #0
   13c70:	bxeq	lr
   13c74:	ldr	r3, [r0, #8]
   13c78:	cmp	r1, r3
   13c7c:	bls	13c9c <mchar_sync_chunk_find_by_size@@Base+0x38>
   13c80:	ldr	r0, [r0, #12]
   13c84:	cmp	r0, #0
   13c88:	beq	13ca0 <mchar_sync_chunk_find_by_size@@Base+0x3c>
   13c8c:	ldr	r3, [r0, #8]
   13c90:	cmp	r3, r1
   13c94:	bcc	13c80 <mchar_sync_chunk_find_by_size@@Base+0x1c>
   13c98:	bx	lr
   13c9c:	bx	lr
   13ca0:	bx	lr

00013ca4 <mchar_sync_chunk_insert_after@@Base>:
   13ca4:	ldr	r3, [r0, #12]
   13ca8:	cmp	r3, r1
   13cac:	bxeq	lr
   13cb0:	ldr	r3, [r1, #16]
   13cb4:	cmp	r3, #0
   13cb8:	ldrne	r2, [r1, #12]
   13cbc:	strne	r2, [r3, #12]
   13cc0:	ldr	r3, [r1, #12]
   13cc4:	cmp	r3, #0
   13cc8:	ldrne	r2, [r1, #16]
   13ccc:	strne	r2, [r3, #16]
   13cd0:	ldr	r3, [r0, #12]
   13cd4:	cmp	r3, #0
   13cd8:	strne	r1, [r3, #16]
   13cdc:	ldr	r3, [r0, #12]
   13ce0:	str	r3, [r1, #12]
   13ce4:	str	r0, [r1, #16]
   13ce8:	str	r1, [r0, #12]
   13cec:	bx	lr

00013cf0 <mchar_async_crop_first_chars_without_cache@@Base>:
   13cf0:	subs	r3, r0, #0
   13cf4:	addne	r0, r3, r1
   13cf8:	ldrne	r3, [r3, #-4]
   13cfc:	subne	r1, r3, r1
   13d00:	strne	r1, [r0, #-4]
   13d04:	moveq	r0, r3
   13d08:	bx	lr

00013d0c <mchar_async_get_size_by_data@@Base>:
   13d0c:	cmp	r0, #0
   13d10:	ldrne	r0, [r0, #-4]
   13d14:	moveq	r0, #0
   13d18:	bx	lr

00013d1c <mchar_async_cache_init@@Base>:
   13d1c:	push	{r4, lr}
   13d20:	mov	r4, r0
   13d24:	mov	r3, #0
   13d28:	str	r3, [r0, #16]
   13d2c:	str	r3, [r0, #12]
   13d30:	mov	r3, #1
   13d34:	str	r3, [r0, #8]
   13d38:	mov	r3, #1024	; 0x400
   13d3c:	str	r3, [r0, #4]
   13d40:	mov	r0, #20480	; 0x5000
   13d44:	bl	10c94 <mycore_malloc@plt>
   13d48:	str	r0, [r4]
   13d4c:	cmp	r0, #0
   13d50:	beq	13db0 <mchar_async_cache_init@@Base+0x94>
   13d54:	mov	r3, #0
   13d58:	str	r3, [r0, #8]
   13d5c:	ldr	r2, [r4]
   13d60:	str	r3, [r2, #12]
   13d64:	ldr	r2, [r4]
   13d68:	str	r3, [r2, #4]
   13d6c:	ldr	r2, [r4]
   13d70:	str	r3, [r2]
   13d74:	str	r3, [r4, #24]
   13d78:	ldr	r0, [r4, #4]
   13d7c:	str	r0, [r4, #28]
   13d80:	lsl	r0, r0, #2
   13d84:	bl	10c94 <mycore_malloc@plt>
   13d88:	str	r0, [r4, #20]
   13d8c:	cmp	r0, #0
   13d90:	beq	13d9c <mchar_async_cache_init@@Base+0x80>
   13d94:	mov	r0, #0
   13d98:	pop	{r4, pc}
   13d9c:	ldr	r0, [r4]
   13da0:	bl	10dcc <mycore_free@plt>
   13da4:	str	r0, [r4]
   13da8:	mov	r0, #2
   13dac:	pop	{r4, pc}
   13db0:	mov	r0, #2
   13db4:	pop	{r4, pc}

00013db8 <mchar_async_cache_clean@@Base>:
   13db8:	mov	r3, #0
   13dbc:	str	r3, [r0, #16]
   13dc0:	str	r3, [r0, #12]
   13dc4:	mov	r2, #1
   13dc8:	str	r2, [r0, #8]
   13dcc:	str	r3, [r0, #24]
   13dd0:	ldr	r2, [r0]
   13dd4:	cmp	r2, r3
   13dd8:	bxeq	lr
   13ddc:	str	r3, [r2, #8]
   13de0:	ldr	r2, [r0]
   13de4:	str	r3, [r2, #12]
   13de8:	ldr	r2, [r0]
   13dec:	str	r3, [r2, #4]
   13df0:	ldr	r2, [r0]
   13df4:	str	r3, [r2]
   13df8:	bx	lr

00013dfc <mchar_async_node_clean@@Base>:
   13dfc:	ldr	r3, [r0, #60]	; 0x3c
   13e00:	cmp	r3, r1
   13e04:	bxls	lr
   13e08:	push	{r4, lr}
   13e0c:	add	r1, r1, r1, lsl #3
   13e10:	lsl	r1, r1, #2
   13e14:	ldr	r3, [r0, #56]	; 0x38
   13e18:	add	r0, r3, r1
   13e1c:	ldr	r2, [r3, r1]
   13e20:	ldr	r3, [r2, #16]
   13e24:	cmp	r3, #0
   13e28:	bne	13e38 <mchar_async_node_clean@@Base+0x3c>
   13e2c:	mov	r3, r2
   13e30:	b	13e48 <mchar_async_node_clean@@Base+0x4c>
   13e34:	mov	r3, r2
   13e38:	str	r3, [r0]
   13e3c:	ldr	r2, [r3, #16]
   13e40:	cmp	r2, #0
   13e44:	bne	13e34 <mchar_async_node_clean@@Base+0x38>
   13e48:	mov	r2, #0
   13e4c:	str	r2, [r3, #4]
   13e50:	add	r0, r0, #4
   13e54:	bl	10724 <mchar_async_cache_clean@plt>
   13e58:	pop	{r4, pc}

00013e5c <mchar_async_cache_destroy@@Base>:
   13e5c:	push	{r4, r5, r6, lr}
   13e60:	subs	r4, r0, #0
   13e64:	beq	13e94 <mchar_async_cache_destroy@@Base+0x38>
   13e68:	mov	r5, r1
   13e6c:	ldr	r0, [r4]
   13e70:	cmp	r0, #0
   13e74:	beq	13e7c <mchar_async_cache_destroy@@Base+0x20>
   13e78:	bl	10dcc <mycore_free@plt>
   13e7c:	ldr	r0, [r4, #20]
   13e80:	cmp	r0, #0
   13e84:	beq	13e8c <mchar_async_cache_destroy@@Base+0x30>
   13e88:	bl	10dcc <mycore_free@plt>
   13e8c:	cmp	r5, #0
   13e90:	bne	13e9c <mchar_async_cache_destroy@@Base+0x40>
   13e94:	mov	r0, r4
   13e98:	pop	{r4, r5, r6, pc}
   13e9c:	mov	r0, r4
   13ea0:	bl	10dcc <mycore_free@plt>
   13ea4:	mov	r4, #0
   13ea8:	b	13e94 <mchar_async_cache_destroy@@Base+0x38>

00013eac <mchar_async_destroy@@Base>:
   13eac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13eb0:	subs	r6, r0, #0
   13eb4:	beq	14000 <mchar_async_destroy@@Base+0x154>
   13eb8:	mov	r9, r1
   13ebc:	ldr	r3, [r6, #56]	; 0x38
   13ec0:	cmp	r3, #0
   13ec4:	beq	13f18 <mchar_async_destroy@@Base+0x6c>
   13ec8:	ldr	r3, [r6, #60]	; 0x3c
   13ecc:	cmp	r3, #0
   13ed0:	beq	13f08 <mchar_async_destroy@@Base+0x5c>
   13ed4:	mov	r4, #0
   13ed8:	mov	r5, r4
   13edc:	mov	r7, r4
   13ee0:	ldr	r0, [r6, #56]	; 0x38
   13ee4:	add	r0, r0, r4
   13ee8:	mov	r1, r7
   13eec:	add	r0, r0, #4
   13ef0:	bl	1088c <mchar_async_cache_destroy@plt>
   13ef4:	add	r5, r5, #1
   13ef8:	add	r4, r4, #36	; 0x24
   13efc:	ldr	r3, [r6, #60]	; 0x3c
   13f00:	cmp	r3, r5
   13f04:	bhi	13ee0 <mchar_async_destroy@@Base+0x34>
   13f08:	ldr	r0, [r6, #56]	; 0x38
   13f0c:	bl	10dcc <mycore_free@plt>
   13f10:	mov	r3, #0
   13f14:	str	r3, [r6, #56]	; 0x38
   13f18:	ldr	r0, [r6, #68]	; 0x44
   13f1c:	cmp	r0, #0
   13f20:	beq	13f28 <mchar_async_destroy@@Base+0x7c>
   13f24:	bl	10dcc <mycore_free@plt>
   13f28:	ldr	r3, [r6, #4]
   13f2c:	cmp	r3, #0
   13f30:	beq	13fd0 <mchar_async_destroy@@Base+0x124>
   13f34:	ldr	r3, [r6, #12]
   13f38:	cmp	r3, #0
   13f3c:	beq	13fc0 <mchar_async_destroy@@Base+0x114>
   13f40:	mov	r8, #0
   13f44:	b	13f94 <mchar_async_destroy@@Base+0xe8>
   13f48:	add	r5, r5, #1
   13f4c:	add	r4, r4, #20
   13f50:	ldr	r3, [r6, #16]
   13f54:	cmp	r3, r5
   13f58:	bls	13f78 <mchar_async_destroy@@Base+0xcc>
   13f5c:	ldr	r3, [r6, #4]
   13f60:	ldr	r3, [r3, r7]
   13f64:	ldr	r0, [r3, r4]
   13f68:	cmp	r0, #0
   13f6c:	beq	13f48 <mchar_async_destroy@@Base+0x9c>
   13f70:	bl	10dcc <mycore_free@plt>
   13f74:	b	13f48 <mchar_async_destroy@@Base+0x9c>
   13f78:	ldr	r3, [r6, #4]
   13f7c:	ldr	r0, [r3, r7]
   13f80:	bl	10dcc <mycore_free@plt>
   13f84:	add	r8, r8, #1
   13f88:	ldr	r3, [r6, #12]
   13f8c:	cmp	r3, r8
   13f90:	bls	13fc0 <mchar_async_destroy@@Base+0x114>
   13f94:	lsl	r7, r8, #2
   13f98:	ldr	r3, [r6, #4]
   13f9c:	ldr	r3, [r3, r8, lsl #2]
   13fa0:	cmp	r3, #0
   13fa4:	beq	13f84 <mchar_async_destroy@@Base+0xd8>
   13fa8:	ldr	r3, [r6, #16]
   13fac:	cmp	r3, #0
   13fb0:	beq	13f78 <mchar_async_destroy@@Base+0xcc>
   13fb4:	mov	r4, #0
   13fb8:	mov	r5, r4
   13fbc:	b	13f5c <mchar_async_destroy@@Base+0xb0>
   13fc0:	ldr	r0, [r6, #4]
   13fc4:	bl	10dcc <mycore_free@plt>
   13fc8:	mov	r3, #0
   13fcc:	str	r3, [r6, #4]
   13fd0:	mov	r1, #0
   13fd4:	add	r0, r6, #24
   13fd8:	bl	1088c <mchar_async_cache_destroy@plt>
   13fdc:	mov	r1, #1
   13fe0:	ldr	r0, [r6, #80]	; 0x50
   13fe4:	bl	101b4 <mcsync_destroy@plt>
   13fe8:	mov	r2, #84	; 0x54
   13fec:	mov	r1, #0
   13ff0:	mov	r0, r6
   13ff4:	bl	108b0 <memset@plt>
   13ff8:	cmp	r9, #0
   13ffc:	bne	14008 <mchar_async_destroy@@Base+0x15c>
   14000:	mov	r0, r6
   14004:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14008:	mov	r0, r6
   1400c:	bl	10dcc <mycore_free@plt>
   14010:	mov	r6, #0
   14014:	b	14000 <mchar_async_destroy@@Base+0x154>

00014018 <mchar_async_cache_malloc@@Base>:
   14018:	ldr	r3, [r0, #24]
   1401c:	cmp	r3, #0
   14020:	bne	14050 <mchar_async_cache_malloc@@Base+0x38>
   14024:	push	{r4, lr}
   14028:	mov	r4, r0
   1402c:	ldr	r3, [r0, #8]
   14030:	add	r3, r3, #1
   14034:	str	r3, [r0, #8]
   14038:	ldr	r1, [r0, #4]
   1403c:	cmp	r3, r1
   14040:	bcs	14064 <mchar_async_cache_malloc@@Base+0x4c>
   14044:	ldr	r0, [r4, #8]
   14048:	sub	r0, r0, #1
   1404c:	pop	{r4, pc}
   14050:	sub	r3, r3, #1
   14054:	str	r3, [r0, #24]
   14058:	ldr	r2, [r0, #20]
   1405c:	ldr	r0, [r2, r3, lsl #2]
   14060:	bx	lr
   14064:	lsl	r3, r1, #1
   14068:	str	r3, [r0, #4]
   1406c:	add	r1, r3, r1, lsl #3
   14070:	lsl	r1, r1, #2
   14074:	ldr	r0, [r0]
   14078:	bl	fbd8 <mycore_realloc@plt>
   1407c:	cmp	r0, #0
   14080:	strne	r0, [r4]
   14084:	b	14044 <mchar_async_cache_malloc@@Base+0x2c>

00014088 <mchar_async_cache_delete@@Base>:
   14088:	push	{r4, r5, r6, r7, r8, lr}
   1408c:	ldr	r2, [r0]
   14090:	ldr	r4, [r0, #12]
   14094:	cmp	r4, #0
   14098:	beq	142d4 <mchar_async_cache_delete@@Base+0x24c>
   1409c:	add	r3, r4, r4, lsl #2
   140a0:	add	r3, r2, r3, lsl #2
   140a4:	ldr	ip, [r3, #4]
   140a8:	cmp	r1, ip
   140ac:	bls	140d8 <mchar_async_cache_delete@@Base+0x50>
   140b0:	ldr	r4, [r3, #12]
   140b4:	cmp	r4, #0
   140b8:	beq	142d4 <mchar_async_cache_delete@@Base+0x24c>
   140bc:	add	r3, r4, r4, lsl #2
   140c0:	add	r3, r2, r3, lsl #2
   140c4:	ldr	ip, [r3, #4]
   140c8:	cmp	ip, r1
   140cc:	bcc	140b0 <mchar_async_cache_delete@@Base+0x28>
   140d0:	b	140d8 <mchar_async_cache_delete@@Base+0x50>
   140d4:	mov	r4, r5
   140d8:	add	r3, r4, r4, lsl #2
   140dc:	add	r3, r2, r3, lsl #2
   140e0:	ldr	r5, [r3, #12]
   140e4:	add	ip, r5, r5, lsl #2
   140e8:	add	ip, r2, ip, lsl #2
   140ec:	ldr	lr, [ip, #4]
   140f0:	cmp	r1, lr
   140f4:	beq	140d4 <mchar_async_cache_delete@@Base+0x4c>
   140f8:	ldr	lr, [r3, #16]
   140fc:	cmp	lr, #0
   14100:	beq	1422c <mchar_async_cache_delete@@Base+0x1a4>
   14104:	add	r7, lr, lr, lsl #2
   14108:	add	r7, r2, r7, lsl #2
   1410c:	ldr	r1, [r7, #8]
   14110:	cmp	r4, r1
   14114:	beq	1413c <mchar_async_cache_delete@@Base+0xb4>
   14118:	ldr	r1, [r3, #8]
   1411c:	cmp	r1, #0
   14120:	beq	14214 <mchar_async_cache_delete@@Base+0x18c>
   14124:	cmp	r5, #0
   14128:	beq	141f8 <mchar_async_cache_delete@@Base+0x170>
   1412c:	add	r1, r1, r1, lsl #2
   14130:	add	r8, r2, r1, lsl #2
   14134:	ldr	ip, [r8, #12]
   14138:	b	141c8 <mchar_async_cache_delete@@Base+0x140>
   1413c:	cmp	r5, #0
   14140:	beq	141a8 <mchar_async_cache_delete@@Base+0x120>
   14144:	ldr	r8, [r3, #8]
   14148:	cmp	r8, #0
   1414c:	beq	1418c <mchar_async_cache_delete@@Base+0x104>
   14150:	ldr	r5, [ip, #8]
   14154:	b	1415c <mchar_async_cache_delete@@Base+0xd4>
   14158:	mov	r5, r6
   1415c:	add	r1, r5, r5, lsl #2
   14160:	add	r1, r2, r1, lsl #2
   14164:	ldr	r6, [r1, #8]
   14168:	cmp	r6, #0
   1416c:	bne	14158 <mchar_async_cache_delete@@Base+0xd0>
   14170:	cmp	r5, #0
   14174:	strne	r8, [r1, #8]
   14178:	ldrne	r1, [r3, #8]
   1417c:	addne	r1, r1, r1, lsl #2
   14180:	addne	r1, r2, r1, lsl #2
   14184:	strne	r5, [r1, #16]
   14188:	streq	r8, [ip, #8]
   1418c:	ldr	r1, [r3, #12]
   14190:	str	r1, [r7, #8]
   14194:	ldr	r3, [r3, #12]
   14198:	add	r3, r3, r3, lsl #2
   1419c:	add	r2, r2, r3, lsl #2
   141a0:	str	lr, [r2, #16]
   141a4:	b	142a0 <mchar_async_cache_delete@@Base+0x218>
   141a8:	ldr	r1, [r3, #8]
   141ac:	str	r1, [r7, #8]
   141b0:	ldr	r3, [r3, #8]
   141b4:	add	r3, r3, r3, lsl #2
   141b8:	add	r2, r2, r3, lsl #2
   141bc:	str	lr, [r2, #16]
   141c0:	b	142a0 <mchar_async_cache_delete@@Base+0x218>
   141c4:	mov	ip, r6
   141c8:	add	r1, ip, ip, lsl #2
   141cc:	add	r1, r2, r1, lsl #2
   141d0:	ldr	r6, [r1, #12]
   141d4:	cmp	r6, #0
   141d8:	bne	141c4 <mchar_async_cache_delete@@Base+0x13c>
   141dc:	cmp	ip, #0
   141e0:	strne	r5, [r1, #12]
   141e4:	ldrne	r1, [r3, #12]
   141e8:	addne	r1, r1, r1, lsl #2
   141ec:	addne	r1, r2, r1, lsl #2
   141f0:	strne	ip, [r1, #16]
   141f4:	streq	r5, [r8, #12]
   141f8:	ldr	r1, [r3, #8]
   141fc:	str	r1, [r7, #12]
   14200:	ldr	r3, [r3, #8]
   14204:	add	r3, r3, r3, lsl #2
   14208:	add	r2, r2, r3, lsl #2
   1420c:	str	lr, [r2, #16]
   14210:	b	142a0 <mchar_async_cache_delete@@Base+0x218>
   14214:	str	r5, [r7, #12]
   14218:	ldr	r3, [r3, #12]
   1421c:	add	r3, r3, r3, lsl #2
   14220:	add	r2, r2, r3, lsl #2
   14224:	str	lr, [r2, #16]
   14228:	b	142a0 <mchar_async_cache_delete@@Base+0x218>
   1422c:	ldr	r1, [r3, #8]
   14230:	cmp	r1, #0
   14234:	beq	142dc <mchar_async_cache_delete@@Base+0x254>
   14238:	cmp	r5, #0
   1423c:	beq	14284 <mchar_async_cache_delete@@Base+0x1fc>
   14240:	add	r1, r1, r1, lsl #2
   14244:	add	r6, r2, r1, lsl #2
   14248:	ldr	ip, [r6, #12]
   1424c:	b	14254 <mchar_async_cache_delete@@Base+0x1cc>
   14250:	mov	ip, lr
   14254:	add	r1, ip, ip, lsl #2
   14258:	add	r1, r2, r1, lsl #2
   1425c:	ldr	lr, [r1, #12]
   14260:	cmp	lr, #0
   14264:	bne	14250 <mchar_async_cache_delete@@Base+0x1c8>
   14268:	cmp	ip, #0
   1426c:	strne	r5, [r1, #12]
   14270:	ldrne	r1, [r3, #12]
   14274:	addne	r1, r1, r1, lsl #2
   14278:	addne	r1, r2, r1, lsl #2
   1427c:	strne	ip, [r1, #16]
   14280:	streq	r5, [r6, #12]
   14284:	ldr	r1, [r3, #8]
   14288:	str	r1, [r0, #12]
   1428c:	ldr	r3, [r3, #8]
   14290:	add	r3, r3, r3, lsl #2
   14294:	add	r2, r2, r3, lsl #2
   14298:	mov	r3, #0
   1429c:	str	r3, [r2, #16]
   142a0:	mov	r5, r0
   142a4:	ldr	r2, [r0, #24]
   142a8:	ldr	r3, [r0, #20]
   142ac:	str	r4, [r3, r2, lsl #2]
   142b0:	ldr	r3, [r0, #24]
   142b4:	add	r3, r3, #1
   142b8:	str	r3, [r0, #24]
   142bc:	ldr	r1, [r0, #28]
   142c0:	cmp	r3, r1
   142c4:	bcs	142f8 <mchar_async_cache_delete@@Base+0x270>
   142c8:	ldr	r3, [r5, #16]
   142cc:	sub	r3, r3, #1
   142d0:	str	r3, [r5, #16]
   142d4:	mov	r0, r4
   142d8:	pop	{r4, r5, r6, r7, r8, pc}
   142dc:	str	r5, [r0, #12]
   142e0:	ldr	r3, [r3, #12]
   142e4:	add	r3, r3, r3, lsl #2
   142e8:	add	r2, r2, r3, lsl #2
   142ec:	mov	r3, #0
   142f0:	str	r3, [r2, #16]
   142f4:	b	142a0 <mchar_async_cache_delete@@Base+0x218>
   142f8:	lsl	r6, r1, #1
   142fc:	lsl	r1, r1, #3
   14300:	ldr	r0, [r0, #20]
   14304:	bl	fbd8 <mycore_realloc@plt>
   14308:	cmp	r0, #0
   1430c:	strne	r0, [r5, #20]
   14310:	strne	r6, [r5, #28]
   14314:	bne	142c8 <mchar_async_cache_delete@@Base+0x240>
   14318:	mov	r4, #0
   1431c:	b	142d4 <mchar_async_cache_delete@@Base+0x24c>

00014320 <mchar_async_chunk_malloc_without_lock@@Base>:
   14320:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14324:	mov	r4, r0
   14328:	mov	r7, r2
   1432c:	ldr	r3, [r0, #40]	; 0x28
   14330:	cmp	r3, #0
   14334:	bne	143cc <mchar_async_chunk_malloc_without_lock@@Base+0xac>
   14338:	mov	r8, r1
   1433c:	ldr	r2, [r0, #20]
   14340:	ldr	r3, [r0, #16]
   14344:	cmp	r2, r3
   14348:	bcc	1437c <mchar_async_chunk_malloc_without_lock@@Base+0x5c>
   1434c:	ldr	r6, [r0, #12]
   14350:	add	r3, r6, #1
   14354:	str	r3, [r0, #12]
   14358:	ldr	r1, [r0, #8]
   1435c:	cmp	r3, r1
   14360:	bcs	143f0 <mchar_async_chunk_malloc_without_lock@@Base+0xd0>
   14364:	ldr	r3, [r4, #4]
   14368:	ldr	r3, [r3, r6, lsl #2]
   1436c:	cmp	r3, #0
   14370:	beq	14430 <mchar_async_chunk_malloc_without_lock@@Base+0x110>
   14374:	mov	r3, #0
   14378:	str	r3, [r4, #20]
   1437c:	ldr	r3, [r4, #20]
   14380:	ldr	r2, [r4, #12]
   14384:	sub	r2, r2, #-1073741823	; 0xc0000001
   14388:	ldr	r1, [r4, #4]
   1438c:	add	r6, r3, r3, lsl #2
   14390:	lsl	r6, r6, #2
   14394:	ldr	r9, [r1, r2, lsl #2]
   14398:	add	r5, r9, r6
   1439c:	add	r3, r3, #1
   143a0:	str	r3, [r4, #20]
   143a4:	mov	r3, r7
   143a8:	mov	r2, r5
   143ac:	mov	r1, r8
   143b0:	mov	r0, r4
   143b4:	bl	11060 <mchar_async_mem_malloc@plt>
   143b8:	ldr	r3, [r9, r6]
   143bc:	cmp	r3, #0
   143c0:	moveq	r5, #0
   143c4:	mov	r0, r5
   143c8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   143cc:	mov	r1, r2
   143d0:	add	r0, r0, #24
   143d4:	bl	10f64 <mchar_async_cache_delete@plt>
   143d8:	cmp	r0, #0
   143dc:	beq	14450 <mchar_async_chunk_malloc_without_lock@@Base+0x130>
   143e0:	ldr	r3, [r4, #24]
   143e4:	add	r0, r0, r0, lsl #2
   143e8:	ldr	r5, [r3, r0, lsl #2]
   143ec:	b	143c4 <mchar_async_chunk_malloc_without_lock@@Base+0xa4>
   143f0:	lsl	r3, r1, #1
   143f4:	str	r3, [r0, #8]
   143f8:	lsl	r1, r1, #3
   143fc:	ldr	r0, [r0, #4]
   14400:	bl	fbd8 <mycore_realloc@plt>
   14404:	subs	r5, r0, #0
   14408:	beq	14458 <mchar_async_chunk_malloc_without_lock@@Base+0x138>
   1440c:	ldr	r0, [r4, #12]
   14410:	ldr	r2, [r4, #8]
   14414:	sub	r2, r2, r0
   14418:	lsl	r2, r2, #2
   1441c:	mov	r1, #0
   14420:	add	r0, r5, r0, lsl #2
   14424:	bl	108b0 <memset@plt>
   14428:	str	r5, [r4, #4]
   1442c:	b	14364 <mchar_async_chunk_malloc_without_lock@@Base+0x44>
   14430:	mov	r1, #20
   14434:	ldr	r0, [r4, #16]
   14438:	bl	ff14 <mycore_calloc@plt>
   1443c:	subs	r5, r0, #0
   14440:	beq	143c4 <mchar_async_chunk_malloc_without_lock@@Base+0xa4>
   14444:	ldr	r3, [r4, #4]
   14448:	str	r5, [r3, r6, lsl #2]
   1444c:	b	14374 <mchar_async_chunk_malloc_without_lock@@Base+0x54>
   14450:	mov	r5, #0
   14454:	b	143c4 <mchar_async_chunk_malloc_without_lock@@Base+0xa4>
   14458:	mov	r5, #0
   1445c:	b	143c4 <mchar_async_chunk_malloc_without_lock@@Base+0xa4>

00014460 <mchar_async_chunk_malloc@@Base>:
   14460:	push	{r4, r5, r6, lr}
   14464:	mov	r4, r0
   14468:	mov	r5, r1
   1446c:	mov	r6, r2
   14470:	ldr	r0, [r0, #80]	; 0x50
   14474:	bl	10850 <mcsync_lock@plt>
   14478:	mov	r2, r6
   1447c:	mov	r1, r5
   14480:	mov	r0, r4
   14484:	bl	10ba4 <mchar_async_chunk_malloc_without_lock@plt>
   14488:	mov	r5, r0
   1448c:	ldr	r0, [r4, #80]	; 0x50
   14490:	bl	10ebc <mcsync_unlock@plt>
   14494:	mov	r0, r5
   14498:	pop	{r4, r5, r6, pc}

0001449c <mchar_async_clean@@Base>:
   1449c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   144a0:	mov	r4, r0
   144a4:	mov	r3, #0
   144a8:	str	r3, [r0, #20]
   144ac:	mov	r3, #1
   144b0:	str	r3, [r0, #12]
   144b4:	add	r0, r0, #24
   144b8:	bl	10724 <mchar_async_cache_clean@plt>
   144bc:	ldr	r3, [r4, #60]	; 0x3c
   144c0:	cmp	r3, #0
   144c4:	beq	14520 <mchar_async_clean@@Base+0x84>
   144c8:	mov	r5, #0
   144cc:	mov	r8, r5
   144d0:	mov	r9, r5
   144d4:	ldr	r6, [r4, #56]	; 0x38
   144d8:	add	r7, r6, r5
   144dc:	add	r0, r7, #4
   144e0:	bl	10724 <mchar_async_cache_clean@plt>
   144e4:	ldr	r2, [r4]
   144e8:	mov	r1, r7
   144ec:	mov	r0, r4
   144f0:	bl	109d0 <mchar_async_chunk_malloc@plt>
   144f4:	str	r0, [r6, r5]
   144f8:	cmp	r0, #0
   144fc:	beq	14528 <mchar_async_clean@@Base+0x8c>
   14500:	str	r9, [r0, #16]
   14504:	add	r8, r8, #1
   14508:	add	r5, r5, #36	; 0x24
   1450c:	ldr	r3, [r4, #60]	; 0x3c
   14510:	cmp	r3, r8
   14514:	bhi	144d4 <mchar_async_clean@@Base+0x38>
   14518:	mov	r0, #0
   1451c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14520:	mov	r0, #0
   14524:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14528:	mov	r0, #2
   1452c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00014530 <mchar_async_init@@Base>:
   14530:	push	{r4, r5, r6, lr}
   14534:	mov	r4, r0
   14538:	cmp	r2, #4096	; 0x1000
   1453c:	movcc	r2, #4096	; 0x1000
   14540:	str	r2, [r0]
   14544:	str	r1, [r0, #16]
   14548:	mov	r0, #1024	; 0x400
   1454c:	str	r0, [r4, #8]
   14550:	mov	r1, #4
   14554:	bl	ff14 <mycore_calloc@plt>
   14558:	str	r0, [r4, #4]
   1455c:	cmp	r0, #0
   14560:	moveq	r5, #2
   14564:	beq	14634 <mchar_async_init@@Base+0x104>
   14568:	mov	r5, r0
   1456c:	mov	r1, #20
   14570:	ldr	r0, [r4, #16]
   14574:	bl	ff14 <mycore_calloc@plt>
   14578:	str	r0, [r5]
   1457c:	ldr	r0, [r4, #4]
   14580:	ldr	r3, [r0]
   14584:	cmp	r3, #0
   14588:	beq	1460c <mchar_async_init@@Base+0xdc>
   1458c:	add	r0, r4, #24
   14590:	bl	10c34 <mchar_async_cache_init@plt>
   14594:	subs	r5, r0, #0
   14598:	bne	1461c <mchar_async_init@@Base+0xec>
   1459c:	mov	r3, #0
   145a0:	str	r3, [r4, #60]	; 0x3c
   145a4:	mov	r0, #64	; 0x40
   145a8:	str	r0, [r4, #64]	; 0x40
   145ac:	mov	r1, #36	; 0x24
   145b0:	bl	ff14 <mycore_calloc@plt>
   145b4:	str	r0, [r4, #56]	; 0x38
   145b8:	cmp	r0, #0
   145bc:	beq	14634 <mchar_async_init@@Base+0x104>
   145c0:	mov	r3, #0
   145c4:	str	r3, [r4, #72]	; 0x48
   145c8:	ldr	r0, [r4, #64]	; 0x40
   145cc:	str	r0, [r4, #76]	; 0x4c
   145d0:	lsl	r0, r0, #2
   145d4:	bl	10c94 <mycore_malloc@plt>
   145d8:	str	r0, [r4, #68]	; 0x44
   145dc:	cmp	r0, #0
   145e0:	beq	14634 <mchar_async_init@@Base+0x104>
   145e4:	mov	r0, r4
   145e8:	bl	10bc8 <mchar_async_clean@plt>
   145ec:	bl	fd94 <mcsync_create@plt>
   145f0:	str	r0, [r4, #80]	; 0x50
   145f4:	cmp	r0, #0
   145f8:	moveq	r5, #2
   145fc:	beq	14634 <mchar_async_init@@Base+0x104>
   14600:	bl	10868 <mcsync_init@plt>
   14604:	mov	r5, r0
   14608:	b	14634 <mchar_async_init@@Base+0x104>
   1460c:	bl	10dcc <mycore_free@plt>
   14610:	str	r0, [r4, #4]
   14614:	mov	r5, #2
   14618:	b	14634 <mchar_async_init@@Base+0x104>
   1461c:	ldr	r3, [r4, #4]
   14620:	ldr	r0, [r3]
   14624:	bl	10dcc <mycore_free@plt>
   14628:	ldr	r0, [r4, #4]
   1462c:	bl	10dcc <mycore_free@plt>
   14630:	str	r0, [r4, #4]
   14634:	mov	r0, r5
   14638:	pop	{r4, r5, r6, pc}

0001463c <mchar_async_node_add@@Base>:
   1463c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14640:	mov	r4, r0
   14644:	mov	r6, r1
   14648:	ldr	r0, [r0, #80]	; 0x50
   1464c:	bl	10850 <mcsync_lock@plt>
   14650:	cmp	r0, #0
   14654:	beq	14674 <mchar_async_node_add@@Base+0x38>
   14658:	cmp	r6, #0
   1465c:	moveq	r5, #0
   14660:	movne	r3, #96	; 0x60
   14664:	strne	r3, [r6]
   14668:	movne	r5, #0
   1466c:	mov	r0, r5
   14670:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14674:	ldr	r5, [r4, #72]	; 0x48
   14678:	cmp	r5, #0
   1467c:	beq	146cc <mchar_async_node_add@@Base+0x90>
   14680:	sub	r5, r5, #1
   14684:	str	r5, [r4, #72]	; 0x48
   14688:	ldr	r3, [r4, #68]	; 0x44
   1468c:	ldr	r7, [r3, r5, lsl #2]
   14690:	add	r5, r7, r7, lsl #3
   14694:	lsl	r5, r5, #2
   14698:	ldr	r8, [r4, #56]	; 0x38
   1469c:	add	r9, r8, r5
   146a0:	add	r0, r9, #4
   146a4:	bl	10c34 <mchar_async_cache_init@plt>
   146a8:	cmp	r0, #0
   146ac:	beq	14700 <mchar_async_node_add@@Base+0xc4>
   146b0:	cmp	r6, #0
   146b4:	movne	r3, #2
   146b8:	strne	r3, [r6]
   146bc:	ldr	r0, [r4, #80]	; 0x50
   146c0:	bl	10ebc <mcsync_unlock@plt>
   146c4:	mov	r5, #0
   146c8:	b	1466c <mchar_async_node_add@@Base+0x30>
   146cc:	ldr	r7, [r4, #60]	; 0x3c
   146d0:	ldr	r3, [r4, #64]	; 0x40
   146d4:	cmp	r7, r3
   146d8:	bcc	146f4 <mchar_async_node_add@@Base+0xb8>
   146dc:	cmp	r6, #0
   146e0:	movne	r3, #98	; 0x62
   146e4:	strne	r3, [r6]
   146e8:	ldr	r0, [r4, #80]	; 0x50
   146ec:	bl	10ebc <mcsync_unlock@plt>
   146f0:	b	1466c <mchar_async_node_add@@Base+0x30>
   146f4:	add	r3, r7, #1
   146f8:	str	r3, [r4, #60]	; 0x3c
   146fc:	b	14690 <mchar_async_node_add@@Base+0x54>
   14700:	ldr	r2, [r4]
   14704:	mov	r1, r9
   14708:	mov	r0, r4
   1470c:	bl	10ba4 <mchar_async_chunk_malloc_without_lock@plt>
   14710:	str	r0, [r8, r5]
   14714:	cmp	r0, #0
   14718:	beq	14748 <mchar_async_node_add@@Base+0x10c>
   1471c:	mov	r3, #0
   14720:	str	r3, [r0, #12]
   14724:	ldr	r2, [r8, r5]
   14728:	str	r3, [r2, #16]
   1472c:	ldr	r0, [r4, #80]	; 0x50
   14730:	bl	10ebc <mcsync_unlock@plt>
   14734:	cmp	r6, #0
   14738:	movne	r3, #0
   1473c:	strne	r3, [r6]
   14740:	mov	r5, r7
   14744:	b	1466c <mchar_async_node_add@@Base+0x30>
   14748:	cmp	r6, #0
   1474c:	movne	r3, #2
   14750:	strne	r3, [r6]
   14754:	ldr	r0, [r4, #80]	; 0x50
   14758:	bl	10ebc <mcsync_unlock@plt>
   1475c:	mov	r5, #0
   14760:	b	1466c <mchar_async_node_add@@Base+0x30>

00014764 <mchar_async_cache_add@@Base>:
   14764:	push	{r4, r5, r6, r7, r8, lr}
   14768:	mov	r5, r0
   1476c:	mov	r6, r1
   14770:	mov	r4, r2
   14774:	ldr	r3, [r0, #16]
   14778:	add	r3, r3, #1
   1477c:	str	r3, [r0, #16]
   14780:	ldr	r7, [r0, #12]
   14784:	cmp	r7, #0
   14788:	beq	147c0 <mchar_async_cache_add@@Base+0x5c>
   1478c:	bl	fec0 <mchar_async_cache_malloc@plt>
   14790:	ldr	ip, [r5]
   14794:	add	r3, r7, r7, lsl #2
   14798:	add	r3, ip, r3, lsl #2
   1479c:	ldr	r2, [r3, #4]
   147a0:	cmp	r4, r2
   147a4:	beq	14874 <mchar_async_cache_add@@Base+0x110>
   147a8:	bcc	148dc <mchar_async_cache_add@@Base+0x178>
   147ac:	ldr	r1, [r3, #12]
   147b0:	cmp	r1, #0
   147b4:	bne	14820 <mchar_async_cache_add@@Base+0xbc>
   147b8:	mov	r1, r7
   147bc:	b	14848 <mchar_async_cache_add@@Base+0xe4>
   147c0:	ldr	r7, [r0]
   147c4:	bl	fec0 <mchar_async_cache_malloc@plt>
   147c8:	str	r0, [r5, #12]
   147cc:	add	r0, r0, r0, lsl #2
   147d0:	add	r0, r7, r0, lsl #2
   147d4:	mov	r2, #0
   147d8:	str	r2, [r0, #16]
   147dc:	ldr	r3, [r5, #12]
   147e0:	add	r3, r3, r3, lsl #2
   147e4:	add	r3, r7, r3, lsl #2
   147e8:	str	r2, [r3, #8]
   147ec:	ldr	r3, [r5, #12]
   147f0:	add	r3, r3, r3, lsl #2
   147f4:	add	r3, r7, r3, lsl #2
   147f8:	str	r2, [r3, #12]
   147fc:	ldr	r3, [r5, #12]
   14800:	add	r3, r3, r3, lsl #2
   14804:	add	r3, r7, r3, lsl #2
   14808:	str	r4, [r3, #4]
   1480c:	ldr	r3, [r5, #12]
   14810:	add	r3, r3, r3, lsl #2
   14814:	str	r6, [r7, r3, lsl #2]
   14818:	pop	{r4, r5, r6, r7, r8, pc}
   1481c:	mov	r1, r2
   14820:	add	r3, r1, r1, lsl #2
   14824:	add	r3, ip, r3, lsl #2
   14828:	ldr	r2, [r3, #4]
   1482c:	cmp	r4, r2
   14830:	beq	14878 <mchar_async_cache_add@@Base+0x114>
   14834:	cmp	r4, r2
   14838:	bcc	148e0 <mchar_async_cache_add@@Base+0x17c>
   1483c:	ldr	r2, [r3, #12]
   14840:	cmp	r2, #0
   14844:	bne	1481c <mchar_async_cache_add@@Base+0xb8>
   14848:	str	r0, [r3, #12]
   1484c:	add	r3, r0, r0, lsl #2
   14850:	lsl	r3, r3, #2
   14854:	add	r2, ip, r3
   14858:	mov	r0, #0
   1485c:	str	r0, [r2, #12]
   14860:	str	r0, [r2, #8]
   14864:	str	r1, [r2, #16]
   14868:	str	r4, [r2, #4]
   1486c:	str	r6, [ip, r3]
   14870:	pop	{r4, r5, r6, r7, r8, pc}
   14874:	mov	r1, r7
   14878:	ldr	r2, [r3, #12]
   1487c:	cmp	r2, #0
   14880:	beq	148c8 <mchar_async_cache_add@@Base+0x164>
   14884:	add	lr, r0, r0, lsl #2
   14888:	add	lr, ip, lr, lsl #2
   1488c:	str	r2, [lr, #12]
   14890:	ldr	r2, [r3, #12]
   14894:	add	r2, r2, r2, lsl #2
   14898:	add	r2, ip, r2, lsl #2
   1489c:	str	r0, [r2, #16]
   148a0:	str	r0, [r3, #12]
   148a4:	add	r3, r0, r0, lsl #2
   148a8:	lsl	r3, r3, #2
   148ac:	add	r2, ip, r3
   148b0:	str	r1, [r2, #16]
   148b4:	mov	r1, #0
   148b8:	str	r1, [r2, #8]
   148bc:	str	r4, [r2, #4]
   148c0:	str	r6, [ip, r3]
   148c4:	pop	{r4, r5, r6, r7, r8, pc}
   148c8:	add	r2, r0, r0, lsl #2
   148cc:	add	r2, ip, r2, lsl #2
   148d0:	mov	lr, #0
   148d4:	str	lr, [r2, #12]
   148d8:	b	148a0 <mchar_async_cache_add@@Base+0x13c>
   148dc:	mov	r1, r7
   148e0:	ldr	r2, [r3, #16]
   148e4:	cmp	r2, #0
   148e8:	beq	14938 <mchar_async_cache_add@@Base+0x1d4>
   148ec:	add	lr, r2, r2, lsl #2
   148f0:	add	lr, ip, lr, lsl #2
   148f4:	ldr	r5, [lr, #8]
   148f8:	cmp	r5, r1
   148fc:	streq	r0, [lr, #8]
   14900:	strne	r0, [lr, #12]
   14904:	add	lr, r0, r0, lsl #2
   14908:	add	lr, ip, lr, lsl #2
   1490c:	str	r2, [lr, #16]
   14910:	str	r0, [r3, #16]
   14914:	add	r3, r0, r0, lsl #2
   14918:	lsl	r3, r3, #2
   1491c:	add	r2, ip, r3
   14920:	str	r1, [r2, #12]
   14924:	mov	r1, #0
   14928:	str	r1, [r2, #8]
   1492c:	str	r4, [r2, #4]
   14930:	str	r6, [ip, r3]
   14934:	pop	{r4, r5, r6, r7, r8, pc}
   14938:	str	r0, [r5, #12]
   1493c:	add	r2, r0, r0, lsl #2
   14940:	add	r2, ip, r2, lsl #2
   14944:	mov	lr, #0
   14948:	str	lr, [r2, #16]
   1494c:	b	14910 <mchar_async_cache_add@@Base+0x1ac>

00014950 <mchar_async_node_delete@@Base>:
   14950:	push	{r4, r5, r6, r7, r8, lr}
   14954:	mov	r5, r0
   14958:	mov	r7, r1
   1495c:	ldr	r0, [r0, #80]	; 0x50
   14960:	bl	10850 <mcsync_lock@plt>
   14964:	ldr	r3, [r5, #60]	; 0x3c
   14968:	cmp	r3, r7
   1496c:	bls	14988 <mchar_async_node_delete@@Base+0x38>
   14970:	add	r3, r7, r7, lsl #3
   14974:	lsl	r3, r3, #2
   14978:	ldr	r2, [r5, #56]	; 0x38
   1497c:	add	r8, r2, r3
   14980:	ldr	r4, [r2, r3]
   14984:	b	14998 <mchar_async_node_delete@@Base+0x48>
   14988:	ldr	r0, [r5, #80]	; 0x50
   1498c:	bl	10ebc <mcsync_unlock@plt>
   14990:	pop	{r4, r5, r6, r7, r8, pc}
   14994:	mov	r4, r3
   14998:	ldr	r3, [r4, #12]
   1499c:	cmp	r3, #0
   149a0:	bne	14994 <mchar_async_node_delete@@Base+0x44>
   149a4:	cmp	r4, #0
   149a8:	beq	149cc <mchar_async_node_delete@@Base+0x7c>
   149ac:	add	r6, r5, #24
   149b0:	ldr	r2, [r4, #8]
   149b4:	mov	r1, r4
   149b8:	mov	r0, r6
   149bc:	bl	10c7c <mchar_async_cache_add@plt>
   149c0:	ldr	r4, [r4, #16]
   149c4:	cmp	r4, #0
   149c8:	bne	149b0 <mchar_async_node_delete@@Base+0x60>
   149cc:	ldr	r3, [r8, #4]
   149d0:	cmp	r3, #0
   149d4:	beq	149e4 <mchar_async_node_delete@@Base+0x94>
   149d8:	mov	r1, #0
   149dc:	add	r0, r8, #4
   149e0:	bl	1088c <mchar_async_cache_destroy@plt>
   149e4:	mov	r2, #36	; 0x24
   149e8:	mov	r1, #0
   149ec:	mov	r0, r8
   149f0:	bl	108b0 <memset@plt>
   149f4:	ldr	r1, [r5, #76]	; 0x4c
   149f8:	ldr	r3, [r5, #72]	; 0x48
   149fc:	cmp	r3, r1
   14a00:	bcs	14a28 <mchar_async_node_delete@@Base+0xd8>
   14a04:	ldr	r2, [r5, #72]	; 0x48
   14a08:	ldr	r3, [r5, #68]	; 0x44
   14a0c:	str	r7, [r3, r2, lsl #2]
   14a10:	ldr	r3, [r5, #72]	; 0x48
   14a14:	add	r3, r3, #1
   14a18:	str	r3, [r5, #72]	; 0x48
   14a1c:	ldr	r0, [r5, #80]	; 0x50
   14a20:	bl	10ebc <mcsync_unlock@plt>
   14a24:	pop	{r4, r5, r6, r7, r8, pc}
   14a28:	lsl	r4, r1, #1
   14a2c:	lsl	r1, r1, #2
   14a30:	ldr	r0, [r5, #68]	; 0x44
   14a34:	bl	fbd8 <mycore_realloc@plt>
   14a38:	cmp	r0, #0
   14a3c:	strne	r0, [r5, #68]	; 0x44
   14a40:	strne	r4, [r5, #76]	; 0x4c
   14a44:	b	14a04 <mchar_async_node_delete@@Base+0xb4>

00014a48 <mchar_async_malloc@@Base>:
   14a48:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14a4c:	subs	r6, r2, #0
   14a50:	beq	14b5c <mchar_async_malloc@@Base+0x114>
   14a54:	mov	r7, r0
   14a58:	add	r1, r1, r1, lsl #3
   14a5c:	lsl	r4, r1, #2
   14a60:	ldr	r8, [r0, #56]	; 0x38
   14a64:	add	sl, r8, r4
   14a68:	ldr	r5, [r8, r4]
   14a6c:	ldr	r3, [sl, #20]
   14a70:	cmp	r3, #0
   14a74:	bne	14af8 <mchar_async_malloc@@Base+0xb0>
   14a78:	ldr	r3, [r5, #4]
   14a7c:	add	r9, r6, #4
   14a80:	ldr	r2, [r5, #8]
   14a84:	add	r1, r3, r9
   14a88:	cmp	r1, r2
   14a8c:	bls	14ad4 <mchar_async_malloc@@Base+0x8c>
   14a90:	add	r1, r3, #4
   14a94:	cmp	r2, r1
   14a98:	bls	14aa8 <mchar_async_malloc@@Base+0x60>
   14a9c:	sub	r2, r2, #4
   14aa0:	subs	r2, r2, r3
   14aa4:	bne	14b1c <mchar_async_malloc@@Base+0xd4>
   14aa8:	mov	r1, r9
   14aac:	mov	r0, sl
   14ab0:	bl	10b14 <mchar_sync_chunk_find_by_size@plt>
   14ab4:	subs	r5, r0, #0
   14ab8:	beq	14b3c <mchar_async_malloc@@Base+0xf4>
   14abc:	mov	r3, #0
   14ac0:	str	r3, [r5, #4]
   14ac4:	mov	r1, r5
   14ac8:	ldr	r0, [r8, r4]
   14acc:	bl	ff44 <mchar_sync_chunk_insert_after@plt>
   14ad0:	str	r5, [r8, r4]
   14ad4:	ldr	r2, [r5]
   14ad8:	ldr	r3, [r5, #4]
   14adc:	add	r0, r3, #4
   14ae0:	add	r0, r2, r0
   14ae4:	str	r6, [r2, r3]
   14ae8:	ldr	r1, [r5, #4]
   14aec:	add	r1, r1, r9
   14af0:	str	r1, [r5, #4]
   14af4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14af8:	mov	r1, r6
   14afc:	add	r0, sl, #4
   14b00:	bl	10f64 <mchar_async_cache_delete@plt>
   14b04:	cmp	r0, #0
   14b08:	beq	14a78 <mchar_async_malloc@@Base+0x30>
   14b0c:	ldr	r3, [sl, #4]
   14b10:	add	r0, r0, r0, lsl #2
   14b14:	ldr	r0, [r3, r0, lsl #2]
   14b18:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14b1c:	ldr	r0, [r5]
   14b20:	str	r2, [r0, r3]
   14b24:	ldr	r3, [r5, #8]
   14b28:	str	r3, [r5, #4]
   14b2c:	add	r1, r0, r1
   14b30:	add	r0, sl, #4
   14b34:	bl	10c7c <mchar_async_cache_add@plt>
   14b38:	b	14aa8 <mchar_async_malloc@@Base+0x60>
   14b3c:	ldr	r2, [r7]
   14b40:	cmp	r2, r9
   14b44:	addcc	r2, r2, r9
   14b48:	mov	r1, sl
   14b4c:	mov	r0, r7
   14b50:	bl	109d0 <mchar_async_chunk_malloc@plt>
   14b54:	mov	r5, r0
   14b58:	b	14ac4 <mchar_async_malloc@@Base+0x7c>
   14b5c:	mov	r0, #0
   14b60:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00014b64 <mchar_async_realloc@@Base>:
   14b64:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14b68:	ldr	lr, [sp, #32]
   14b6c:	cmp	r2, #0
   14b70:	beq	14c20 <mchar_async_realloc@@Base+0xbc>
   14b74:	ldr	r5, [r2, #-4]
   14b78:	cmp	r5, lr
   14b7c:	movcs	r4, r2
   14b80:	bcs	14bf0 <mchar_async_realloc@@Base+0x8c>
   14b84:	add	ip, r1, r1, lsl #3
   14b88:	lsl	ip, ip, #2
   14b8c:	ldr	r6, [r0, #56]	; 0x38
   14b90:	add	r7, r6, ip
   14b94:	ldr	r8, [r6, ip]
   14b98:	ldr	r4, [r8, #4]
   14b9c:	cmp	r5, r4
   14ba0:	bhi	14bb8 <mchar_async_realloc@@Base+0x54>
   14ba4:	ldr	r9, [r8]
   14ba8:	sub	r4, r4, r5
   14bac:	add	sl, r9, r4
   14bb0:	cmp	r2, sl
   14bb4:	beq	14bf8 <mchar_async_realloc@@Base+0x94>
   14bb8:	mov	r8, r2
   14bbc:	mov	r6, r3
   14bc0:	mov	r2, lr
   14bc4:	bl	10910 <mchar_async_malloc@plt>
   14bc8:	subs	r4, r0, #0
   14bcc:	beq	14bf0 <mchar_async_realloc@@Base+0x8c>
   14bd0:	mov	r2, r6
   14bd4:	mov	r1, r8
   14bd8:	mov	r0, r4
   14bdc:	bl	ff5c <memcpy@plt>
   14be0:	mov	r2, r5
   14be4:	mov	r1, r8
   14be8:	add	r0, r7, #4
   14bec:	bl	10c7c <mchar_async_cache_add@plt>
   14bf0:	mov	r0, r4
   14bf4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14bf8:	add	sl, r4, lr
   14bfc:	ldr	r8, [r8, #8]
   14c00:	cmp	sl, r8
   14c04:	bhi	14bb8 <mchar_async_realloc@@Base+0x54>
   14c08:	add	r4, r9, r4
   14c0c:	str	lr, [r4, #-4]
   14c10:	ldr	r3, [r6, ip]
   14c14:	str	sl, [r3, #4]
   14c18:	mov	r4, r2
   14c1c:	b	14bf0 <mchar_async_realloc@@Base+0x8c>
   14c20:	mov	r4, r2
   14c24:	b	14bf0 <mchar_async_realloc@@Base+0x8c>

00014c28 <mchar_async_crop_first_chars@@Base>:
   14c28:	push	{r4, lr}
   14c2c:	cmp	r2, #0
   14c30:	beq	14c80 <mchar_async_crop_first_chars@@Base+0x58>
   14c34:	add	r4, r2, r3
   14c38:	ldr	ip, [r2, #-4]
   14c3c:	sub	ip, ip, r3
   14c40:	str	ip, [r4, #-4]
   14c44:	add	ip, r3, #4
   14c48:	cmp	ip, #4
   14c4c:	bhi	14c58 <mchar_async_crop_first_chars@@Base+0x30>
   14c50:	mov	r0, r4
   14c54:	pop	{r4, pc}
   14c58:	mov	ip, r2
   14c5c:	sub	r2, r3, #4
   14c60:	str	r2, [ip, #-4]
   14c64:	add	r1, r1, r1, lsl #3
   14c68:	ldr	r0, [r0, #56]	; 0x38
   14c6c:	add	r0, r0, r1, lsl #2
   14c70:	mov	r1, ip
   14c74:	add	r0, r0, #4
   14c78:	bl	10c7c <mchar_async_cache_add@plt>
   14c7c:	b	14c50 <mchar_async_crop_first_chars@@Base+0x28>
   14c80:	mov	r4, r2
   14c84:	b	14c50 <mchar_async_crop_first_chars@@Base+0x28>

00014c88 <mchar_async_free@@Base>:
   14c88:	mov	r3, r1
   14c8c:	subs	r1, r2, #0
   14c90:	bxeq	lr
   14c94:	push	{r4, lr}
   14c98:	add	r3, r3, r3, lsl #3
   14c9c:	ldr	r0, [r0, #56]	; 0x38
   14ca0:	add	r0, r0, r3, lsl #2
   14ca4:	ldr	r2, [r1, #-4]
   14ca8:	add	r0, r0, #4
   14cac:	bl	10c7c <mchar_async_cache_add@plt>
   14cb0:	pop	{r4, pc}

00014cb4 <mcobject_create@@Base>:
   14cb4:	push	{r4, lr}
   14cb8:	mov	r1, #24
   14cbc:	mov	r0, #1
   14cc0:	bl	ff14 <mycore_calloc@plt>
   14cc4:	pop	{r4, pc}

00014cc8 <mcobject_init@@Base>:
   14cc8:	push	{r4, lr}
   14ccc:	mov	r4, r0
   14cd0:	str	r2, [r0, #16]
   14cd4:	str	r1, [r0, #20]
   14cd8:	mov	r3, #0
   14cdc:	str	r3, [r0]
   14ce0:	str	r3, [r0, #12]
   14ce4:	str	r1, [r0, #8]
   14ce8:	lsl	r0, r1, #2
   14cec:	bl	10c94 <mycore_malloc@plt>
   14cf0:	str	r0, [r4, #4]
   14cf4:	cmp	r0, #0
   14cf8:	moveq	r0, #85	; 0x55
   14cfc:	movne	r0, #0
   14d00:	pop	{r4, pc}

00014d04 <mcobject_clean@@Base>:
   14d04:	push	{r4, r5, r6, lr}
   14d08:	ldr	r4, [r0]
   14d0c:	cmp	r4, #0
   14d10:	bne	14d1c <mcobject_clean@@Base+0x18>
   14d14:	pop	{r4, r5, r6, pc}
   14d18:	mov	r4, r3
   14d1c:	ldr	r3, [r4, #12]
   14d20:	cmp	r3, #0
   14d24:	bne	14d18 <mcobject_clean@@Base+0x14>
   14d28:	mov	r6, r0
   14d2c:	cmp	r4, #0
   14d30:	bne	14d58 <mcobject_clean@@Base+0x54>
   14d34:	mov	r3, #0
   14d38:	str	r3, [r6]
   14d3c:	str	r3, [r6, #12]
   14d40:	pop	{r4, r5, r6, pc}
   14d44:	mov	r0, r4
   14d48:	bl	10dcc <mycore_free@plt>
   14d4c:	mov	r4, r5
   14d50:	cmp	r5, #0
   14d54:	beq	14d34 <mcobject_clean@@Base+0x30>
   14d58:	ldr	r5, [r4, #16]
   14d5c:	ldr	r0, [r4]
   14d60:	cmp	r0, #0
   14d64:	beq	14d44 <mcobject_clean@@Base+0x40>
   14d68:	bl	10dcc <mycore_free@plt>
   14d6c:	b	14d44 <mcobject_clean@@Base+0x40>

00014d70 <mcobject_destroy@@Base>:
   14d70:	push	{r4, r5, r6, lr}
   14d74:	subs	r4, r0, #0
   14d78:	beq	14da8 <mcobject_destroy@@Base+0x38>
   14d7c:	mov	r5, r1
   14d80:	mov	r0, r4
   14d84:	bl	10f70 <mcobject_clean@plt>
   14d88:	ldr	r0, [r4, #4]
   14d8c:	cmp	r0, #0
   14d90:	beq	14da0 <mcobject_destroy@@Base+0x30>
   14d94:	bl	10dcc <mycore_free@plt>
   14d98:	mov	r3, #0
   14d9c:	str	r3, [r4, #4]
   14da0:	cmp	r5, #0
   14da4:	bne	14db0 <mcobject_destroy@@Base+0x40>
   14da8:	mov	r0, r4
   14dac:	pop	{r4, r5, r6, pc}
   14db0:	mov	r0, r4
   14db4:	bl	10dcc <mycore_free@plt>
   14db8:	mov	r4, #0
   14dbc:	b	14da8 <mcobject_destroy@@Base+0x38>

00014dc0 <mcobject_chunk_malloc@@Base>:
   14dc0:	push	{r4, r5, r6, lr}
   14dc4:	subs	r5, r1, #0
   14dc8:	movne	r3, #0
   14dcc:	strne	r3, [r5]
   14dd0:	ldr	r3, [r0]
   14dd4:	cmp	r3, #0
   14dd8:	beq	14df8 <mcobject_chunk_malloc@@Base+0x38>
   14ddc:	ldr	r3, [r3, #12]
   14de0:	cmp	r3, #0
   14de4:	beq	14df8 <mcobject_chunk_malloc@@Base+0x38>
   14de8:	str	r3, [r0]
   14dec:	mov	r2, #0
   14df0:	str	r2, [r3, #4]
   14df4:	pop	{r4, r5, r6, pc}
   14df8:	mov	r4, r0
   14dfc:	mov	r1, #20
   14e00:	mov	r0, #1
   14e04:	bl	ff14 <mycore_calloc@plt>
   14e08:	subs	r6, r0, #0
   14e0c:	beq	14e50 <mcobject_chunk_malloc@@Base+0x90>
   14e10:	ldr	r3, [r4, #16]
   14e14:	ldr	r0, [r4, #20]
   14e18:	mul	r0, r0, r3
   14e1c:	bl	10c94 <mycore_malloc@plt>
   14e20:	str	r0, [r6]
   14e24:	cmp	r0, #0
   14e28:	beq	14e60 <mcobject_chunk_malloc@@Base+0xa0>
   14e2c:	ldr	r3, [r4, #20]
   14e30:	str	r3, [r6, #8]
   14e34:	ldr	r3, [r4]
   14e38:	cmp	r3, #0
   14e3c:	strne	r3, [r6, #16]
   14e40:	ldrne	r3, [r4]
   14e44:	strne	r6, [r3, #12]
   14e48:	str	r6, [r4]
   14e4c:	pop	{r4, r5, r6, pc}
   14e50:	cmp	r5, #0
   14e54:	movne	r3, #86	; 0x56
   14e58:	strne	r3, [r5]
   14e5c:	pop	{r4, r5, r6, pc}
   14e60:	cmp	r5, #0
   14e64:	movne	r3, #87	; 0x57
   14e68:	strne	r3, [r5]
   14e6c:	mov	r0, r6
   14e70:	bl	10dcc <mycore_free@plt>
   14e74:	pop	{r4, r5, r6, pc}

00014e78 <mcobject_malloc@@Base>:
   14e78:	ldr	r3, [r0, #12]
   14e7c:	cmp	r3, #0
   14e80:	beq	14ea8 <mcobject_malloc@@Base+0x30>
   14e84:	cmp	r1, #0
   14e88:	movne	r3, #0
   14e8c:	strne	r3, [r1]
   14e90:	ldr	r3, [r0, #12]
   14e94:	sub	r3, r3, #1
   14e98:	str	r3, [r0, #12]
   14e9c:	ldr	r2, [r0, #4]
   14ea0:	ldr	r0, [r2, r3, lsl #2]
   14ea4:	bx	lr
   14ea8:	push	{r4, r5, lr}
   14eac:	sub	sp, sp, #12
   14eb0:	mov	r5, r1
   14eb4:	mov	r4, r0
   14eb8:	ldr	r3, [r0]
   14ebc:	cmp	r3, #0
   14ec0:	beq	14ed4 <mcobject_malloc@@Base+0x5c>
   14ec4:	ldr	r1, [r3, #4]
   14ec8:	ldr	r2, [r3, #8]
   14ecc:	cmp	r1, r2
   14ed0:	bcc	14ef0 <mcobject_malloc@@Base+0x78>
   14ed4:	add	r1, sp, #4
   14ed8:	mov	r0, r4
   14edc:	bl	fee4 <mcobject_chunk_malloc@plt>
   14ee0:	ldr	r3, [sp, #4]
   14ee4:	cmp	r3, #0
   14ee8:	ldreq	r3, [r4]
   14eec:	bne	14f1c <mcobject_malloc@@Base+0xa4>
   14ef0:	cmp	r5, #0
   14ef4:	movne	r2, #0
   14ef8:	strne	r2, [r5]
   14efc:	ldr	r0, [r3, #4]
   14f00:	add	r2, r0, #1
   14f04:	str	r2, [r3, #4]
   14f08:	ldr	r2, [r4, #16]
   14f0c:	ldr	r3, [r3]
   14f10:	mla	r0, r2, r0, r3
   14f14:	add	sp, sp, #12
   14f18:	pop	{r4, r5, pc}
   14f1c:	cmp	r5, #0
   14f20:	strne	r3, [r5]
   14f24:	mov	r0, #0
   14f28:	b	14f14 <mcobject_malloc@@Base+0x9c>

00014f2c <mcobject_free@@Base>:
   14f2c:	push	{r4, r5, r6, lr}
   14f30:	mov	r4, r0
   14f34:	mov	r5, r1
   14f38:	ldr	r1, [r0, #8]
   14f3c:	ldr	r3, [r0, #12]
   14f40:	cmp	r3, r1
   14f44:	bcs	14f68 <mcobject_free@@Base+0x3c>
   14f48:	ldr	r2, [r4, #12]
   14f4c:	ldr	r3, [r4, #4]
   14f50:	str	r5, [r3, r2, lsl #2]
   14f54:	ldr	r3, [r4, #12]
   14f58:	add	r3, r3, #1
   14f5c:	str	r3, [r4, #12]
   14f60:	mov	r0, #0
   14f64:	pop	{r4, r5, r6, pc}
   14f68:	lsl	r6, r1, #1
   14f6c:	lsl	r1, r1, #3
   14f70:	ldr	r0, [r0, #4]
   14f74:	bl	fbd8 <mycore_realloc@plt>
   14f78:	cmp	r0, #0
   14f7c:	strne	r0, [r4, #4]
   14f80:	strne	r6, [r4, #8]
   14f84:	bne	14f48 <mcobject_free@@Base+0x1c>
   14f88:	mov	r0, #88	; 0x58
   14f8c:	pop	{r4, r5, r6, pc}

00014f90 <mcobject_async_create@@Base>:
   14f90:	push	{r4, lr}
   14f94:	mov	r1, #72	; 0x48
   14f98:	mov	r0, #1
   14f9c:	bl	ff14 <mycore_calloc@plt>
   14fa0:	pop	{r4, pc}

00014fa4 <mcobject_async_chunk_up@@Base>:
   14fa4:	push	{r4, r5, r6, lr}
   14fa8:	mov	r3, #0
   14fac:	str	r3, [r0, #40]	; 0x28
   14fb0:	ldr	r6, [r0, #32]
   14fb4:	ldr	r5, [r0, #24]
   14fb8:	ldr	r3, [r5, r6, lsl #2]
   14fbc:	cmp	r3, #0
   14fc0:	beq	14fcc <mcobject_async_chunk_up@@Base+0x28>
   14fc4:	mov	r0, #0
   14fc8:	pop	{r4, r5, r6, pc}
   14fcc:	mov	r4, r0
   14fd0:	mov	r1, #20
   14fd4:	ldr	r0, [r0, #36]	; 0x24
   14fd8:	bl	ff14 <mycore_calloc@plt>
   14fdc:	str	r0, [r5, r6, lsl #2]
   14fe0:	ldr	r2, [r4, #32]
   14fe4:	ldr	r3, [r4, #24]
   14fe8:	ldr	r0, [r3, r2, lsl #2]
   14fec:	cmp	r0, #0
   14ff0:	moveq	r0, #2
   14ff4:	movne	r0, #0
   14ff8:	pop	{r4, r5, r6, pc}

00014ffc <mcobject_async_destroy@@Base>:
   14ffc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15000:	subs	r6, r0, #0
   15004:	beq	15144 <mcobject_async_destroy@@Base+0x148>
   15008:	mov	r9, r1
   1500c:	ldr	r3, [r6, #44]	; 0x2c
   15010:	cmp	r3, #0
   15014:	beq	15060 <mcobject_async_destroy@@Base+0x64>
   15018:	ldr	r3, [r6, #48]	; 0x30
   1501c:	cmp	r3, #0
   15020:	beq	15058 <mcobject_async_destroy@@Base+0x5c>
   15024:	mov	r4, #0
   15028:	b	1503c <mcobject_async_destroy@@Base+0x40>
   1502c:	add	r4, r4, #1
   15030:	ldr	r3, [r6, #48]	; 0x30
   15034:	cmp	r3, r4
   15038:	bls	15058 <mcobject_async_destroy@@Base+0x5c>
   1503c:	ldr	r3, [r6, #44]	; 0x2c
   15040:	add	r3, r3, r4, lsl #4
   15044:	ldr	r0, [r3, #4]
   15048:	cmp	r0, #0
   1504c:	beq	1502c <mcobject_async_destroy@@Base+0x30>
   15050:	bl	10dcc <mycore_free@plt>
   15054:	b	1502c <mcobject_async_destroy@@Base+0x30>
   15058:	ldr	r0, [r6, #44]	; 0x2c
   1505c:	bl	10dcc <mycore_free@plt>
   15060:	ldr	r0, [r6, #56]	; 0x38
   15064:	cmp	r0, #0
   15068:	beq	15070 <mcobject_async_destroy@@Base+0x74>
   1506c:	bl	10dcc <mycore_free@plt>
   15070:	ldr	r3, [r6, #24]
   15074:	cmp	r3, #0
   15078:	beq	15110 <mcobject_async_destroy@@Base+0x114>
   1507c:	ldr	r3, [r6, #32]
   15080:	cmp	r3, #0
   15084:	beq	15108 <mcobject_async_destroy@@Base+0x10c>
   15088:	mov	r8, #0
   1508c:	b	150dc <mcobject_async_destroy@@Base+0xe0>
   15090:	add	r5, r5, #1
   15094:	add	r4, r4, #20
   15098:	ldr	r3, [r6, #36]	; 0x24
   1509c:	cmp	r3, r5
   150a0:	bls	150c0 <mcobject_async_destroy@@Base+0xc4>
   150a4:	ldr	r3, [r6, #24]
   150a8:	ldr	r3, [r3, r7]
   150ac:	ldr	r0, [r3, r4]
   150b0:	cmp	r0, #0
   150b4:	beq	15090 <mcobject_async_destroy@@Base+0x94>
   150b8:	bl	10dcc <mycore_free@plt>
   150bc:	b	15090 <mcobject_async_destroy@@Base+0x94>
   150c0:	ldr	r3, [r6, #24]
   150c4:	ldr	r0, [r3, r7]
   150c8:	bl	10dcc <mycore_free@plt>
   150cc:	add	r8, r8, #1
   150d0:	ldr	r3, [r6, #32]
   150d4:	cmp	r3, r8
   150d8:	bls	15108 <mcobject_async_destroy@@Base+0x10c>
   150dc:	lsl	r7, r8, #2
   150e0:	ldr	r3, [r6, #24]
   150e4:	ldr	r3, [r3, r8, lsl #2]
   150e8:	cmp	r3, #0
   150ec:	beq	150cc <mcobject_async_destroy@@Base+0xd0>
   150f0:	ldr	r3, [r6, #36]	; 0x24
   150f4:	cmp	r3, #0
   150f8:	beq	150c0 <mcobject_async_destroy@@Base+0xc4>
   150fc:	mov	r4, #0
   15100:	mov	r5, r4
   15104:	b	150a4 <mcobject_async_destroy@@Base+0xa8>
   15108:	ldr	r0, [r6, #24]
   1510c:	bl	10dcc <mycore_free@plt>
   15110:	ldr	r0, [r6, #12]
   15114:	cmp	r0, #0
   15118:	beq	15120 <mcobject_async_destroy@@Base+0x124>
   1511c:	bl	10dcc <mycore_free@plt>
   15120:	mov	r1, #1
   15124:	ldr	r0, [r6, #68]	; 0x44
   15128:	bl	101b4 <mcsync_destroy@plt>
   1512c:	mov	r2, #72	; 0x48
   15130:	mov	r1, #0
   15134:	mov	r0, r6
   15138:	bl	108b0 <memset@plt>
   1513c:	cmp	r9, #0
   15140:	bne	1514c <mcobject_async_destroy@@Base+0x150>
   15144:	mov	r0, r6
   15148:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1514c:	mov	r0, r6
   15150:	bl	10dcc <mycore_free@plt>
   15154:	mov	r6, #0
   15158:	b	15144 <mcobject_async_destroy@@Base+0x148>

0001515c <mcobject_async_mem_malloc@@Base>:
   1515c:	push	{r4, r5, r6, lr}
   15160:	mov	r6, r0
   15164:	mov	r4, r1
   15168:	mov	r5, r2
   1516c:	ldr	r0, [r1]
   15170:	cmp	r0, #0
   15174:	beq	151c4 <mcobject_async_mem_malloc@@Base+0x68>
   15178:	ldr	r3, [r1, #8]
   1517c:	cmp	r3, r2
   15180:	bcc	151a0 <mcobject_async_mem_malloc@@Base+0x44>
   15184:	mov	r3, #0
   15188:	str	r3, [r4, #4]
   1518c:	ldr	r0, [r4]
   15190:	cmp	r0, r3
   15194:	moveq	r0, #2
   15198:	movne	r0, r3
   1519c:	pop	{r4, r5, r6, pc}
   151a0:	bl	10dcc <mycore_free@plt>
   151a4:	ldr	r0, [r6]
   151a8:	add	r5, r5, r0
   151ac:	str	r5, [r4, #8]
   151b0:	ldr	r0, [r6, #8]
   151b4:	mul	r0, r0, r5
   151b8:	bl	10c94 <mycore_malloc@plt>
   151bc:	str	r0, [r4]
   151c0:	b	15184 <mcobject_async_mem_malloc@@Base+0x28>
   151c4:	ldr	r0, [r6]
   151c8:	cmp	r2, r0
   151cc:	strls	r0, [r1, #8]
   151d0:	addhi	r5, r2, r0
   151d4:	strhi	r5, [r1, #8]
   151d8:	ldr	r3, [r1, #8]
   151dc:	ldr	r0, [r6, #8]
   151e0:	mul	r0, r0, r3
   151e4:	bl	10c94 <mycore_malloc@plt>
   151e8:	str	r0, [r4]
   151ec:	b	15184 <mcobject_async_mem_malloc@@Base+0x28>

000151f0 <mcobject_async_chunk_malloc_without_lock@@Base>:
   151f0:	push	{r4, r5, r6, r7, r8, lr}
   151f4:	subs	r7, r2, #0
   151f8:	movne	r3, #0
   151fc:	strne	r3, [r7]
   15200:	ldr	r3, [r0, #20]
   15204:	cmp	r3, #0
   15208:	bne	15294 <mcobject_async_chunk_malloc_without_lock@@Base+0xa4>
   1520c:	mov	r6, r1
   15210:	mov	r4, r0
   15214:	ldr	r2, [r0, #40]	; 0x28
   15218:	ldr	r3, [r0, #36]	; 0x24
   1521c:	cmp	r2, r3
   15220:	bcc	15304 <mcobject_async_chunk_malloc_without_lock@@Base+0x114>
   15224:	ldr	r1, [r0, #28]
   15228:	ldr	r3, [r0, #32]
   1522c:	cmp	r3, r1
   15230:	bcc	1526c <mcobject_async_chunk_malloc_without_lock@@Base+0x7c>
   15234:	lsl	r8, r1, #1
   15238:	lsl	r1, r1, #3
   1523c:	ldr	r0, [r0, #24]
   15240:	bl	fbd8 <mycore_realloc@plt>
   15244:	subs	r5, r0, #0
   15248:	beq	152e0 <mcobject_async_chunk_malloc_without_lock@@Base+0xf0>
   1524c:	ldr	r0, [r4, #32]
   15250:	sub	r2, r8, r0
   15254:	lsl	r2, r2, #2
   15258:	mov	r1, #0
   1525c:	add	r0, r5, r0, lsl #2
   15260:	bl	108b0 <memset@plt>
   15264:	str	r8, [r4, #28]
   15268:	str	r5, [r4, #24]
   1526c:	mov	r0, r4
   15270:	bl	1019c <mcobject_async_chunk_up@plt>
   15274:	cmp	r0, #0
   15278:	beq	152f8 <mcobject_async_chunk_malloc_without_lock@@Base+0x108>
   1527c:	cmp	r7, #0
   15280:	moveq	r5, #0
   15284:	movne	r3, #2
   15288:	strne	r3, [r7]
   1528c:	movne	r5, #0
   15290:	b	152d8 <mcobject_async_chunk_malloc_without_lock@@Base+0xe8>
   15294:	sub	r3, r3, #1
   15298:	str	r3, [r0, #20]
   1529c:	ldr	r2, [r0, #12]
   152a0:	ldr	r2, [r2, r3, lsl #2]
   152a4:	mov	r3, #0
   152a8:	str	r3, [r2, #4]
   152ac:	ldr	r1, [r0, #20]
   152b0:	ldr	r2, [r0, #12]
   152b4:	ldr	r2, [r2, r1, lsl #2]
   152b8:	str	r3, [r2, #12]
   152bc:	ldr	r1, [r0, #20]
   152c0:	ldr	r2, [r0, #12]
   152c4:	ldr	r2, [r2, r1, lsl #2]
   152c8:	str	r3, [r2, #16]
   152cc:	ldr	r2, [r0, #20]
   152d0:	ldr	r3, [r0, #12]
   152d4:	ldr	r5, [r3, r2, lsl #2]
   152d8:	mov	r0, r5
   152dc:	pop	{r4, r5, r6, r7, r8, pc}
   152e0:	cmp	r7, #0
   152e4:	moveq	r5, #0
   152e8:	movne	r3, #2
   152ec:	strne	r3, [r7]
   152f0:	movne	r5, #0
   152f4:	b	152d8 <mcobject_async_chunk_malloc_without_lock@@Base+0xe8>
   152f8:	ldr	r3, [r4, #32]
   152fc:	add	r3, r3, #1
   15300:	str	r3, [r4, #32]
   15304:	ldr	r3, [r4, #40]	; 0x28
   15308:	ldr	r2, [r4, #32]
   1530c:	sub	r2, r2, #-1073741823	; 0xc0000001
   15310:	ldr	r0, [r4, #24]
   15314:	add	r1, r3, r3, lsl #2
   15318:	ldr	r5, [r0, r2, lsl #2]
   1531c:	add	r5, r5, r1, lsl #2
   15320:	add	r3, r3, #1
   15324:	str	r3, [r4, #40]	; 0x28
   15328:	mov	r3, #0
   1532c:	str	r3, [r5, #12]
   15330:	str	r3, [r5, #16]
   15334:	cmp	r7, r3
   15338:	beq	15354 <mcobject_async_chunk_malloc_without_lock@@Base+0x164>
   1533c:	mov	r2, r6
   15340:	mov	r1, r5
   15344:	mov	r0, r4
   15348:	bl	fdc4 <mcobject_async_mem_malloc@plt>
   1534c:	str	r0, [r7]
   15350:	b	152d8 <mcobject_async_chunk_malloc_without_lock@@Base+0xe8>
   15354:	mov	r2, r6
   15358:	mov	r1, r5
   1535c:	mov	r0, r4
   15360:	bl	fdc4 <mcobject_async_mem_malloc@plt>
   15364:	b	152d8 <mcobject_async_chunk_malloc_without_lock@@Base+0xe8>

00015368 <mcobject_async_chunk_malloc@@Base>:
   15368:	push	{r4, r5, r6, lr}
   1536c:	mov	r5, r0
   15370:	mov	r6, r1
   15374:	mov	r4, r2
   15378:	ldr	r0, [r0, #68]	; 0x44
   1537c:	bl	10850 <mcsync_lock@plt>
   15380:	cmp	r0, #0
   15384:	beq	153a4 <mcobject_async_chunk_malloc@@Base+0x3c>
   15388:	cmp	r4, #0
   1538c:	moveq	r4, #0
   15390:	movne	r3, #1
   15394:	strne	r3, [r4]
   15398:	movne	r4, #0
   1539c:	mov	r0, r4
   153a0:	pop	{r4, r5, r6, pc}
   153a4:	mov	r2, r4
   153a8:	mov	r1, r6
   153ac:	mov	r0, r5
   153b0:	bl	108e0 <mcobject_async_chunk_malloc_without_lock@plt>
   153b4:	mov	r4, r0
   153b8:	ldr	r0, [r5, #68]	; 0x44
   153bc:	bl	10ebc <mcsync_unlock@plt>
   153c0:	b	1539c <mcobject_async_chunk_malloc@@Base+0x34>

000153c4 <mcobject_async_clean@@Base>:
   153c4:	ldr	r3, [r0, #24]
   153c8:	ldr	r3, [r3]
   153cc:	cmp	r3, #0
   153d0:	movne	r3, #1
   153d4:	moveq	r3, #0
   153d8:	str	r3, [r0, #32]
   153dc:	mov	r3, #0
   153e0:	str	r3, [r0, #40]	; 0x28
   153e4:	str	r3, [r0, #20]
   153e8:	ldr	r3, [r0, #48]	; 0x30
   153ec:	cmp	r3, #0
   153f0:	bxeq	lr
   153f4:	push	{r4, r5, r6, r7, r8, lr}
   153f8:	mov	r5, r0
   153fc:	mov	r4, #0
   15400:	mov	r7, r4
   15404:	b	15418 <mcobject_async_clean@@Base+0x54>
   15408:	add	r4, r4, #1
   1540c:	ldr	r3, [r5, #48]	; 0x30
   15410:	cmp	r3, r4
   15414:	bls	15448 <mcobject_async_clean@@Base+0x84>
   15418:	ldr	r6, [r5, #44]	; 0x2c
   1541c:	add	r3, r6, r4, lsl #4
   15420:	str	r7, [r3, #12]
   15424:	ldr	r3, [r6, r4, lsl #4]
   15428:	cmp	r3, #0
   1542c:	beq	15408 <mcobject_async_clean@@Base+0x44>
   15430:	mov	r2, r7
   15434:	ldr	r1, [r5]
   15438:	mov	r0, r5
   1543c:	bl	1010c <mcobject_async_chunk_malloc@plt>
   15440:	str	r0, [r6, r4, lsl #4]
   15444:	b	15408 <mcobject_async_clean@@Base+0x44>
   15448:	pop	{r4, r5, r6, r7, r8, pc}

0001544c <mcobject_async_init@@Base>:
   1544c:	push	{r4, lr}
   15450:	mov	r4, r0
   15454:	str	r2, [r0]
   15458:	str	r3, [r0, #4]
   1545c:	add	r3, r3, #4
   15460:	str	r3, [r0, #8]
   15464:	mov	r3, #0
   15468:	str	r3, [r0, #32]
   1546c:	mov	r0, #128	; 0x80
   15470:	str	r0, [r4, #28]
   15474:	str	r1, [r4, #36]	; 0x24
   15478:	mov	r1, #4
   1547c:	bl	ff14 <mycore_calloc@plt>
   15480:	str	r0, [r4, #24]
   15484:	cmp	r0, #0
   15488:	beq	15520 <mcobject_async_init@@Base+0xd4>
   1548c:	mov	r0, r4
   15490:	bl	1019c <mcobject_async_chunk_up@plt>
   15494:	ldr	r0, [r4, #36]	; 0x24
   15498:	str	r0, [r4, #16]
   1549c:	mov	r1, #4
   154a0:	bl	ff14 <mycore_calloc@plt>
   154a4:	str	r0, [r4, #12]
   154a8:	cmp	r0, #0
   154ac:	beq	15528 <mcobject_async_init@@Base+0xdc>
   154b0:	mov	r3, #0
   154b4:	str	r3, [r4, #48]	; 0x30
   154b8:	mov	r0, #64	; 0x40
   154bc:	str	r0, [r4, #52]	; 0x34
   154c0:	mov	r1, #16
   154c4:	bl	ff14 <mycore_calloc@plt>
   154c8:	str	r0, [r4, #44]	; 0x2c
   154cc:	cmp	r0, #0
   154d0:	beq	15530 <mcobject_async_init@@Base+0xe4>
   154d4:	mov	r3, #0
   154d8:	str	r3, [r4, #60]	; 0x3c
   154dc:	ldr	r0, [r4, #52]	; 0x34
   154e0:	str	r0, [r4, #64]	; 0x40
   154e4:	lsl	r0, r0, #2
   154e8:	bl	10c94 <mycore_malloc@plt>
   154ec:	str	r0, [r4, #56]	; 0x38
   154f0:	cmp	r0, #0
   154f4:	beq	15538 <mcobject_async_init@@Base+0xec>
   154f8:	mov	r0, r4
   154fc:	bl	11054 <mcobject_async_clean@plt>
   15500:	bl	fd94 <mcsync_create@plt>
   15504:	str	r0, [r4, #68]	; 0x44
   15508:	cmp	r0, #0
   1550c:	beq	15540 <mcobject_async_init@@Base+0xf4>
   15510:	bl	10868 <mcsync_init@plt>
   15514:	adds	r0, r0, #0
   15518:	movne	r0, #1
   1551c:	pop	{r4, pc}
   15520:	mov	r0, #2
   15524:	pop	{r4, pc}
   15528:	mov	r0, #3
   1552c:	pop	{r4, pc}
   15530:	mov	r0, #4
   15534:	pop	{r4, pc}
   15538:	mov	r0, #4
   1553c:	pop	{r4, pc}
   15540:	mov	r0, #1
   15544:	pop	{r4, pc}

00015548 <mcobject_async_node_add@@Base>:
   15548:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1554c:	mov	r4, r0
   15550:	mov	r5, r1
   15554:	ldr	r0, [r0, #68]	; 0x44
   15558:	bl	10850 <mcsync_lock@plt>
   1555c:	cmp	r5, #0
   15560:	movne	r3, #0
   15564:	strne	r3, [r5]
   15568:	ldr	r7, [r4, #60]	; 0x3c
   1556c:	cmp	r7, #0
   15570:	beq	155f8 <mcobject_async_node_add@@Base+0xb0>
   15574:	sub	r7, r7, #1
   15578:	str	r7, [r4, #60]	; 0x3c
   1557c:	ldr	r3, [r4, #56]	; 0x38
   15580:	ldr	r6, [r3, r7, lsl #2]
   15584:	lsl	r9, r6, #4
   15588:	ldr	r7, [r4, #44]	; 0x2c
   1558c:	add	r8, r7, r9
   15590:	mov	r2, r5
   15594:	ldr	r1, [r4]
   15598:	mov	r0, r4
   1559c:	bl	108e0 <mcobject_async_chunk_malloc_without_lock@plt>
   155a0:	str	r0, [r7, r6, lsl #4]
   155a4:	cmp	r5, #0
   155a8:	beq	15648 <mcobject_async_node_add@@Base+0x100>
   155ac:	ldr	r3, [r5]
   155b0:	cmp	r3, #0
   155b4:	bne	15620 <mcobject_async_node_add@@Base+0xd8>
   155b8:	mov	r3, #0
   155bc:	str	r3, [r0, #12]
   155c0:	ldr	r2, [r7, r9]
   155c4:	str	r3, [r2, #16]
   155c8:	str	r3, [r8, #12]
   155cc:	ldr	r0, [r4]
   155d0:	str	r0, [r8, #8]
   155d4:	lsl	r0, r0, #2
   155d8:	bl	10c94 <mycore_malloc@plt>
   155dc:	str	r0, [r8, #4]
   155e0:	cmp	r0, #0
   155e4:	beq	15630 <mcobject_async_node_add@@Base+0xe8>
   155e8:	ldr	r0, [r4, #68]	; 0x44
   155ec:	bl	10ebc <mcsync_unlock@plt>
   155f0:	mov	r0, r6
   155f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   155f8:	ldr	r6, [r4, #48]	; 0x30
   155fc:	ldr	r3, [r4, #52]	; 0x34
   15600:	cmp	r6, r3
   15604:	addcc	r3, r6, #1
   15608:	strcc	r3, [r4, #48]	; 0x30
   1560c:	bcc	15584 <mcobject_async_node_add@@Base+0x3c>
   15610:	ldr	r0, [r4, #68]	; 0x44
   15614:	bl	10ebc <mcsync_unlock@plt>
   15618:	mov	r6, r7
   1561c:	b	155f0 <mcobject_async_node_add@@Base+0xa8>
   15620:	ldr	r0, [r4, #68]	; 0x44
   15624:	bl	10ebc <mcsync_unlock@plt>
   15628:	mov	r6, #0
   1562c:	b	155f0 <mcobject_async_node_add@@Base+0xa8>
   15630:	mov	r3, #3
   15634:	str	r3, [r5]
   15638:	ldr	r0, [r4, #68]	; 0x44
   1563c:	bl	10ebc <mcsync_unlock@plt>
   15640:	mov	r6, #0
   15644:	b	155f0 <mcobject_async_node_add@@Base+0xa8>
   15648:	mov	r3, #0
   1564c:	str	r3, [r0, #12]
   15650:	ldr	r2, [r7, r6, lsl #4]
   15654:	str	r3, [r2, #16]
   15658:	str	r3, [r8, #12]
   1565c:	ldr	r0, [r4]
   15660:	str	r0, [r8, #8]
   15664:	lsl	r0, r0, #2
   15668:	bl	10c94 <mycore_malloc@plt>
   1566c:	str	r0, [r8, #4]
   15670:	cmp	r0, #0
   15674:	bne	155e8 <mcobject_async_node_add@@Base+0xa0>
   15678:	b	15638 <mcobject_async_node_add@@Base+0xf0>

0001567c <mcobject_async_node_clean@@Base>:
   1567c:	ldr	r3, [r0, #48]	; 0x30
   15680:	cmp	r3, r1
   15684:	bxls	lr
   15688:	ldr	r3, [r0, #44]	; 0x2c
   1568c:	add	r0, r3, r1, lsl #4
   15690:	mov	r2, #0
   15694:	str	r2, [r0, #12]
   15698:	ldr	r2, [r3, r1, lsl #4]
   1569c:	cmp	r2, #0
   156a0:	bxeq	lr
   156a4:	ldr	r3, [r2, #16]
   156a8:	cmp	r3, #0
   156ac:	bne	156bc <mcobject_async_node_clean@@Base+0x40>
   156b0:	mov	r3, r2
   156b4:	b	156cc <mcobject_async_node_clean@@Base+0x50>
   156b8:	mov	r3, r2
   156bc:	str	r3, [r0]
   156c0:	ldr	r2, [r3, #16]
   156c4:	cmp	r2, #0
   156c8:	bne	156b8 <mcobject_async_node_clean@@Base+0x3c>
   156cc:	mov	r2, #0
   156d0:	str	r2, [r3, #4]
   156d4:	str	r2, [r0, #12]
   156d8:	bx	lr

000156dc <mcobject_async_node_all_clean@@Base>:
   156dc:	ldr	r3, [r0, #48]	; 0x30
   156e0:	cmp	r3, #0
   156e4:	bxeq	lr
   156e8:	push	{r4, r5, r6, lr}
   156ec:	mov	r5, r0
   156f0:	mov	r4, #0
   156f4:	mov	r1, r4
   156f8:	mov	r0, r5
   156fc:	bl	10880 <mcobject_async_node_clean@plt>
   15700:	add	r4, r4, #1
   15704:	ldr	r3, [r5, #48]	; 0x30
   15708:	cmp	r3, r4
   1570c:	bhi	156f4 <mcobject_async_node_all_clean@@Base+0x18>
   15710:	pop	{r4, r5, r6, pc}

00015714 <mcobject_async_node_delete@@Base>:
   15714:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15718:	mov	r4, r0
   1571c:	mov	r6, r1
   15720:	ldr	r0, [r0, #68]	; 0x44
   15724:	bl	10850 <mcsync_lock@plt>
   15728:	ldr	r3, [r4, #48]	; 0x30
   1572c:	cmp	r3, r6
   15730:	ldrhi	r8, [r4, #44]	; 0x2c
   15734:	addhi	r7, r8, r6, lsl #4
   15738:	ldrhi	r5, [r8, r6, lsl #4]
   1573c:	bhi	15750 <mcobject_async_node_delete@@Base+0x3c>
   15740:	ldr	r0, [r4, #68]	; 0x44
   15744:	bl	10ebc <mcsync_unlock@plt>
   15748:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1574c:	mov	r5, r3
   15750:	ldr	r3, [r5, #12]
   15754:	cmp	r3, #0
   15758:	bne	1574c <mcobject_async_node_delete@@Base+0x38>
   1575c:	cmp	r5, #0
   15760:	bne	157e8 <mcobject_async_node_delete@@Base+0xd4>
   15764:	ldr	r0, [r7, #4]
   15768:	cmp	r0, #0
   1576c:	beq	15774 <mcobject_async_node_delete@@Base+0x60>
   15770:	bl	10dcc <mycore_free@plt>
   15774:	mov	r3, #0
   15778:	str	r3, [r8, r6, lsl #4]
   1577c:	str	r3, [r7, #4]
   15780:	str	r3, [r7, #8]
   15784:	str	r3, [r7, #12]
   15788:	ldr	r1, [r4, #64]	; 0x40
   1578c:	ldr	r3, [r4, #60]	; 0x3c
   15790:	cmp	r3, r1
   15794:	bcs	1581c <mcobject_async_node_delete@@Base+0x108>
   15798:	ldr	r2, [r4, #60]	; 0x3c
   1579c:	ldr	r3, [r4, #56]	; 0x38
   157a0:	str	r6, [r3, r2, lsl #2]
   157a4:	ldr	r3, [r4, #60]	; 0x3c
   157a8:	add	r3, r3, #1
   157ac:	str	r3, [r4, #60]	; 0x3c
   157b0:	ldr	r0, [r4, #68]	; 0x44
   157b4:	bl	10ebc <mcsync_unlock@plt>
   157b8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   157bc:	str	r9, [r4, #16]
   157c0:	str	r0, [r4, #12]
   157c4:	ldr	r2, [r4, #20]
   157c8:	ldr	r3, [r4, #12]
   157cc:	str	r5, [r3, r2, lsl #2]
   157d0:	ldr	r3, [r4, #20]
   157d4:	add	r3, r3, #1
   157d8:	str	r3, [r4, #20]
   157dc:	ldr	r5, [r5, #16]
   157e0:	cmp	r5, #0
   157e4:	beq	15764 <mcobject_async_node_delete@@Base+0x50>
   157e8:	ldr	r1, [r4, #16]
   157ec:	ldr	r3, [r4, #20]
   157f0:	cmp	r3, r1
   157f4:	bcc	157c4 <mcobject_async_node_delete@@Base+0xb0>
   157f8:	lsl	r9, r1, #1
   157fc:	lsl	r1, r1, #3
   15800:	ldr	r0, [r4, #12]
   15804:	bl	fbd8 <mycore_realloc@plt>
   15808:	cmp	r0, #0
   1580c:	bne	157bc <mcobject_async_node_delete@@Base+0xa8>
   15810:	ldr	r0, [r4, #68]	; 0x44
   15814:	bl	10ebc <mcsync_unlock@plt>
   15818:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1581c:	lsl	r5, r1, #1
   15820:	lsl	r1, r1, #2
   15824:	ldr	r0, [r4, #56]	; 0x38
   15828:	bl	fbd8 <mycore_realloc@plt>
   1582c:	cmp	r0, #0
   15830:	strne	r0, [r4, #56]	; 0x38
   15834:	strne	r5, [r4, #64]	; 0x40
   15838:	b	15798 <mcobject_async_node_delete@@Base+0x84>

0001583c <mcobject_async_malloc@@Base>:
   1583c:	push	{r4, r5, r6, r7, lr}
   15840:	sub	sp, sp, #12
   15844:	ldr	r6, [r0, #44]	; 0x2c
   15848:	add	r3, r6, r1, lsl #4
   1584c:	ldr	ip, [r3, #12]
   15850:	cmp	ip, #0
   15854:	beq	15880 <mcobject_async_malloc@@Base+0x44>
   15858:	cmp	r2, #0
   1585c:	movne	r1, #0
   15860:	strne	r1, [r2]
   15864:	ldr	r2, [r3, #12]
   15868:	sub	r2, r2, #1
   1586c:	str	r2, [r3, #12]
   15870:	ldr	r3, [r3, #4]
   15874:	ldr	r0, [r3, r2, lsl #2]
   15878:	add	sp, sp, #12
   1587c:	pop	{r4, r5, r6, r7, pc}
   15880:	mov	r7, r2
   15884:	mov	r4, r1
   15888:	mov	r5, r0
   1588c:	ldr	r3, [r6, r1, lsl #4]
   15890:	ldr	r1, [r3, #4]
   15894:	ldr	r2, [r3, #8]
   15898:	cmp	r1, r2
   1589c:	bcc	158b8 <mcobject_async_malloc@@Base+0x7c>
   158a0:	ldr	r3, [r3, #12]
   158a4:	cmp	r3, #0
   158a8:	beq	15900 <mcobject_async_malloc@@Base+0xc4>
   158ac:	str	r3, [r6, r4, lsl #4]
   158b0:	mov	r2, #0
   158b4:	str	r2, [r3, #4]
   158b8:	cmp	r7, #0
   158bc:	movne	r3, #0
   158c0:	strne	r3, [r7]
   158c4:	ldr	r3, [r6, r4, lsl #4]
   158c8:	ldr	r2, [r3, #4]
   158cc:	ldr	r0, [r5, #8]
   158d0:	mul	r0, r0, r2
   158d4:	ldr	r3, [r3]
   158d8:	str	r4, [r3, r0]
   158dc:	ldr	r2, [r6, r4, lsl #4]
   158e0:	ldr	r3, [r2, #4]
   158e4:	add	r3, r3, #1
   158e8:	str	r3, [r2, #4]
   158ec:	ldr	r3, [r6, r4, lsl #4]
   158f0:	add	r0, r0, #4
   158f4:	ldr	r3, [r3]
   158f8:	add	r0, r3, r0
   158fc:	b	15878 <mcobject_async_malloc@@Base+0x3c>
   15900:	add	r2, sp, #4
   15904:	ldr	r1, [r0]
   15908:	bl	1010c <mcobject_async_chunk_malloc@plt>
   1590c:	ldr	r3, [sp, #4]
   15910:	cmp	r3, #0
   15914:	bne	15930 <mcobject_async_malloc@@Base+0xf4>
   15918:	ldr	r3, [r6, r4, lsl #4]
   1591c:	str	r3, [r0, #16]
   15920:	ldr	r3, [r6, r4, lsl #4]
   15924:	str	r0, [r3, #12]
   15928:	str	r0, [r6, r4, lsl #4]
   1592c:	b	158b8 <mcobject_async_malloc@@Base+0x7c>
   15930:	cmp	r7, #0
   15934:	strne	r3, [r7]
   15938:	mov	r0, #0
   1593c:	b	15878 <mcobject_async_malloc@@Base+0x3c>

00015940 <mcobject_async_free@@Base>:
   15940:	ldr	r3, [r1, #-4]
   15944:	ldr	r2, [r0, #48]	; 0x30
   15948:	cmp	r3, r2
   1594c:	bcc	15958 <mcobject_async_free@@Base+0x18>
   15950:	mov	r0, #5
   15954:	bx	lr
   15958:	push	{r4, r5, r6, lr}
   1595c:	mov	r5, r1
   15960:	ldr	r4, [r0, #44]	; 0x2c
   15964:	add	r4, r4, r3, lsl #4
   15968:	ldr	r1, [r4, #8]
   1596c:	ldr	r3, [r4, #12]
   15970:	cmp	r3, r1
   15974:	bcs	15998 <mcobject_async_free@@Base+0x58>
   15978:	ldr	r2, [r4, #12]
   1597c:	ldr	r3, [r4, #4]
   15980:	str	r5, [r3, r2, lsl #2]
   15984:	ldr	r3, [r4, #12]
   15988:	add	r3, r3, #1
   1598c:	str	r3, [r4, #12]
   15990:	mov	r0, #0
   15994:	pop	{r4, r5, r6, pc}
   15998:	lsl	r6, r1, #1
   1599c:	lsl	r1, r1, #3
   159a0:	ldr	r0, [r4, #4]
   159a4:	bl	fbd8 <mycore_realloc@plt>
   159a8:	cmp	r0, #0
   159ac:	strne	r0, [r4, #4]
   159b0:	strne	r6, [r4, #8]
   159b4:	bne	15978 <mcobject_async_free@@Base+0x38>
   159b8:	mov	r0, #6
   159bc:	pop	{r4, r5, r6, pc}

000159c0 <mcsimple_create@@Base>:
   159c0:	push	{r4, lr}
   159c4:	mov	r1, #28
   159c8:	mov	r0, #1
   159cc:	bl	ff14 <mycore_calloc@plt>
   159d0:	pop	{r4, pc}

000159d4 <mcsimple_clean@@Base>:
   159d4:	mov	r3, #0
   159d8:	str	r3, [r0, #24]
   159dc:	str	r3, [r0, #12]
   159e0:	bx	lr

000159e4 <mcsimple_destroy@@Base>:
   159e4:	push	{r4, r5, r6, lr}
   159e8:	subs	r5, r0, #0
   159ec:	beq	15a4c <mcsimple_destroy@@Base+0x68>
   159f0:	mov	r6, r1
   159f4:	ldr	r3, [r5, #4]
   159f8:	cmp	r3, #0
   159fc:	beq	15a44 <mcsimple_destroy@@Base+0x60>
   15a00:	ldr	r3, [r5, #16]
   15a04:	cmp	r3, #0
   15a08:	beq	15a3c <mcsimple_destroy@@Base+0x58>
   15a0c:	mov	r4, #0
   15a10:	b	15a24 <mcsimple_destroy@@Base+0x40>
   15a14:	add	r4, r4, #1
   15a18:	ldr	r3, [r5, #16]
   15a1c:	cmp	r3, r4
   15a20:	bls	15a3c <mcsimple_destroy@@Base+0x58>
   15a24:	ldr	r3, [r5, #4]
   15a28:	ldr	r0, [r3, r4, lsl #2]
   15a2c:	cmp	r0, #0
   15a30:	beq	15a14 <mcsimple_destroy@@Base+0x30>
   15a34:	bl	10dcc <mycore_free@plt>
   15a38:	b	15a14 <mcsimple_destroy@@Base+0x30>
   15a3c:	ldr	r0, [r5, #4]
   15a40:	bl	10dcc <mycore_free@plt>
   15a44:	cmp	r6, #0
   15a48:	bne	15a54 <mcsimple_destroy@@Base+0x70>
   15a4c:	mov	r0, r5
   15a50:	pop	{r4, r5, r6, pc}
   15a54:	mov	r0, r5
   15a58:	bl	10dcc <mycore_free@plt>
   15a5c:	mov	r5, #0
   15a60:	b	15a4c <mcsimple_destroy@@Base+0x68>

00015a64 <mcsimple_init_list_entries@@Base>:
   15a64:	push	{r4, r5, r6, lr}
   15a68:	mov	r4, r0
   15a6c:	mov	r5, r1
   15a70:	ldr	r1, [r0, #8]
   15a74:	ldr	r3, [r0, #12]
   15a78:	cmp	r3, r1
   15a7c:	bcs	15aa4 <mcsimple_init_list_entries@@Base+0x40>
   15a80:	mov	r3, #0
   15a84:	str	r3, [r4, #24]
   15a88:	ldr	r6, [r4, #4]
   15a8c:	ldr	r3, [r6, r5, lsl #2]
   15a90:	cmp	r3, #0
   15a94:	beq	15ae0 <mcsimple_init_list_entries@@Base+0x7c>
   15a98:	ldr	r3, [r4, #4]
   15a9c:	ldr	r0, [r3, r5, lsl #2]
   15aa0:	pop	{r4, r5, r6, pc}
   15aa4:	add	r6, r1, #128	; 0x80
   15aa8:	lsl	r1, r1, #2
   15aac:	ldr	r0, [r0, #4]
   15ab0:	bl	fbd8 <mycore_realloc@plt>
   15ab4:	cmp	r0, #0
   15ab8:	beq	15afc <mcsimple_init_list_entries@@Base+0x98>
   15abc:	str	r0, [r4, #4]
   15ac0:	ldr	r2, [r4, #8]
   15ac4:	sub	r2, r6, r2
   15ac8:	lsl	r2, r2, #2
   15acc:	mov	r1, #0
   15ad0:	add	r0, r0, r5, lsl #2
   15ad4:	bl	108b0 <memset@plt>
   15ad8:	str	r6, [r4, #8]
   15adc:	b	15a80 <mcsimple_init_list_entries@@Base+0x1c>
   15ae0:	ldr	r3, [r4, #16]
   15ae4:	add	r3, r3, #1
   15ae8:	str	r3, [r4, #16]
   15aec:	ldr	r0, [r4, #20]
   15af0:	bl	10c94 <mycore_malloc@plt>
   15af4:	str	r0, [r6, r5, lsl #2]
   15af8:	b	15a98 <mcsimple_init_list_entries@@Base+0x34>
   15afc:	mov	r0, #0
   15b00:	pop	{r4, r5, r6, pc}

00015b04 <mcsimple_init@@Base>:
   15b04:	push	{r4, r5, r6, lr}
   15b08:	mov	r4, r0
   15b0c:	mov	r0, r1
   15b10:	mov	r5, r2
   15b14:	mov	r6, r3
   15b18:	str	r3, [r4]
   15b1c:	mov	r3, #0
   15b20:	str	r3, [r4, #16]
   15b24:	str	r3, [r4, #12]
   15b28:	str	r1, [r4, #8]
   15b2c:	mov	r1, #4
   15b30:	bl	ff14 <mycore_calloc@plt>
   15b34:	str	r0, [r4, #4]
   15b38:	cmp	r0, #0
   15b3c:	popeq	{r4, r5, r6, pc}
   15b40:	mul	r5, r5, r6
   15b44:	str	r5, [r4, #20]
   15b48:	ldr	r1, [r4, #12]
   15b4c:	mov	r0, r4
   15b50:	bl	10994 <mcsimple_init_list_entries@plt>
   15b54:	pop	{r4, r5, r6, pc}

00015b58 <mcsimple_malloc@@Base>:
   15b58:	push	{r4, lr}
   15b5c:	mov	r4, r0
   15b60:	ldr	r2, [r0, #24]
   15b64:	ldr	r3, [r0, #20]
   15b68:	cmp	r2, r3
   15b6c:	bcs	15b94 <mcsimple_malloc@@Base+0x3c>
   15b70:	ldr	r2, [r4, #24]
   15b74:	ldr	r3, [r4]
   15b78:	add	r3, r3, r2
   15b7c:	str	r3, [r4, #24]
   15b80:	ldr	r1, [r4, #12]
   15b84:	ldr	r3, [r4, #4]
   15b88:	ldr	r0, [r3, r1, lsl #2]
   15b8c:	add	r0, r0, r2
   15b90:	pop	{r4, pc}
   15b94:	ldr	r1, [r0, #12]
   15b98:	add	r1, r1, #1
   15b9c:	str	r1, [r0, #12]
   15ba0:	bl	10994 <mcsimple_init_list_entries@plt>
   15ba4:	cmp	r0, #0
   15ba8:	bne	15b70 <mcsimple_malloc@@Base+0x18>
   15bac:	mov	r0, #0
   15bb0:	pop	{r4, pc}

00015bb4 <mcsimple_get_by_absolute_position@@Base>:
   15bb4:	push	{r4, r5, r6, r7, r8, lr}
   15bb8:	mov	r5, r0
   15bbc:	ldr	r4, [r0]
   15bc0:	mul	r4, r4, r1
   15bc4:	ldr	r7, [r0, #20]
   15bc8:	mov	r1, r7
   15bcc:	mov	r0, r4
   15bd0:	bl	2f998 <mcsync_mutex_unlock@@Base+0x14>
   15bd4:	ldr	r3, [r5, #16]
   15bd8:	cmp	r0, r3
   15bdc:	bcs	15c00 <mcsimple_get_by_absolute_position@@Base+0x4c>
   15be0:	mov	r6, r0
   15be4:	ldr	r5, [r5, #4]
   15be8:	mov	r1, r7
   15bec:	mov	r0, r4
   15bf0:	bl	2fb84 <mcsync_mutex_unlock@@Base+0x200>
   15bf4:	ldr	r0, [r5, r6, lsl #2]
   15bf8:	add	r0, r0, r1
   15bfc:	pop	{r4, r5, r6, r7, r8, pc}
   15c00:	mov	r0, #0
   15c04:	pop	{r4, r5, r6, r7, r8, pc}

00015c08 <mcsync_create@@Base>:
   15c08:	push	{r4, lr}
   15c0c:	mov	r1, #8
   15c10:	mov	r0, #1
   15c14:	bl	ff14 <mycore_calloc@plt>
   15c18:	pop	{r4, pc}

00015c1c <mcsync_init@@Base>:
   15c1c:	push	{r4, r5, r6, lr}
   15c20:	mov	r4, r0
   15c24:	bl	1055c <mcsync_spin_create@plt>
   15c28:	str	r0, [r4]
   15c2c:	cmp	r0, #0
   15c30:	moveq	r5, #1
   15c34:	beq	15c80 <mcsync_init@@Base+0x64>
   15c38:	bl	104fc <mcsync_spin_init@plt>
   15c3c:	subs	r5, r0, #0
   15c40:	bne	15c78 <mcsync_init@@Base+0x5c>
   15c44:	bl	108c8 <mcsync_mutex_create@plt>
   15c48:	str	r0, [r4, #4]
   15c4c:	cmp	r0, #0
   15c50:	moveq	r5, #1
   15c54:	beq	15c80 <mcsync_init@@Base+0x64>
   15c58:	bl	10b50 <mcsync_mutex_init@plt>
   15c5c:	subs	r5, r0, #0
   15c60:	beq	15c80 <mcsync_init@@Base+0x64>
   15c64:	ldr	r0, [r4]
   15c68:	bl	ffa4 <mcsync_spin_destroy@plt>
   15c6c:	ldr	r0, [r4, #4]
   15c70:	bl	fd70 <mcsync_mutex_destroy@plt>
   15c74:	b	15c80 <mcsync_init@@Base+0x64>
   15c78:	ldr	r0, [r4]
   15c7c:	bl	ffa4 <mcsync_spin_destroy@plt>
   15c80:	mov	r0, r5
   15c84:	pop	{r4, r5, r6, pc}

00015c88 <mcsync_clean@@Base>:
   15c88:	push	{r4, lr}
   15c8c:	mov	r4, r0
   15c90:	ldr	r0, [r0]
   15c94:	bl	10a78 <mcsync_spin_clean@plt>
   15c98:	ldr	r0, [r4, #4]
   15c9c:	bl	10e50 <mcsync_mutex_clean@plt>
   15ca0:	pop	{r4, pc}

00015ca4 <mcsync_destroy@@Base>:
   15ca4:	push	{r4, r5, r6, lr}
   15ca8:	subs	r4, r0, #0
   15cac:	beq	15ccc <mcsync_destroy@@Base+0x28>
   15cb0:	mov	r5, r1
   15cb4:	ldr	r0, [r4]
   15cb8:	bl	ffa4 <mcsync_spin_destroy@plt>
   15cbc:	ldr	r0, [r4, #4]
   15cc0:	bl	fd70 <mcsync_mutex_destroy@plt>
   15cc4:	cmp	r5, #0
   15cc8:	bne	15cd4 <mcsync_destroy@@Base+0x30>
   15ccc:	mov	r0, r4
   15cd0:	pop	{r4, r5, r6, pc}
   15cd4:	mov	r0, r4
   15cd8:	bl	10dcc <mycore_free@plt>
   15cdc:	mov	r4, #0
   15ce0:	b	15ccc <mcsync_destroy@@Base+0x28>

00015ce4 <mcsync_lock@@Base>:
   15ce4:	push	{r4, lr}
   15ce8:	ldr	r0, [r0]
   15cec:	bl	105b0 <mcsync_spin_lock@plt>
   15cf0:	pop	{r4, pc}

00015cf4 <mcsync_unlock@@Base>:
   15cf4:	push	{r4, lr}
   15cf8:	ldr	r0, [r0]
   15cfc:	bl	11024 <mcsync_spin_unlock@plt>
   15d00:	pop	{r4, pc}

00015d04 <mctree_create@@Base>:
   15d04:	push	{r4, r5, r6, lr}
   15d08:	mov	r5, r0
   15d0c:	mov	r0, #16
   15d10:	bl	10c94 <mycore_malloc@plt>
   15d14:	subs	r4, r0, #0
   15d18:	beq	15d44 <mctree_create@@Base+0x40>
   15d1c:	add	r0, r5, #512	; 0x200
   15d20:	str	r0, [r4, #8]
   15d24:	add	r3, r5, #1
   15d28:	str	r3, [r4, #4]
   15d2c:	mov	r1, #28
   15d30:	bl	ff14 <mycore_calloc@plt>
   15d34:	str	r0, [r4]
   15d38:	cmp	r0, #0
   15d3c:	strne	r5, [r4, #12]
   15d40:	beq	15d4c <mctree_create@@Base+0x48>
   15d44:	mov	r0, r4
   15d48:	pop	{r4, r5, r6, pc}
   15d4c:	mov	r0, r4
   15d50:	bl	10dcc <mycore_free@plt>
   15d54:	mov	r4, #0
   15d58:	b	15d44 <mctree_create@@Base+0x40>

00015d5c <mctree_clean@@Base>:
   15d5c:	push	{r4, lr}
   15d60:	ldr	r3, [r0, #12]
   15d64:	add	r3, r3, #1
   15d68:	str	r3, [r0, #4]
   15d6c:	ldr	r2, [r0, #8]
   15d70:	rsb	r2, r2, r2, lsl #3
   15d74:	lsl	r2, r2, #2
   15d78:	mov	r1, #0
   15d7c:	ldr	r0, [r0]
   15d80:	bl	108b0 <memset@plt>
   15d84:	pop	{r4, pc}

00015d88 <mctree_destroy@@Base>:
   15d88:	push	{r4, lr}
   15d8c:	subs	r4, r0, #0
   15d90:	beq	15dac <mctree_destroy@@Base+0x24>
   15d94:	ldr	r0, [r4]
   15d98:	cmp	r0, #0
   15d9c:	beq	15da4 <mctree_destroy@@Base+0x1c>
   15da0:	bl	10dcc <mycore_free@plt>
   15da4:	mov	r0, r4
   15da8:	bl	10dcc <mycore_free@plt>
   15dac:	mov	r0, #0
   15db0:	pop	{r4, pc}

00015db4 <__mtree_search_lowercase_to_start@@Base>:
   15db4:	push	{r4, r5, r6, r7, r8, lr}
   15db8:	mov	r8, r2
   15dbc:	mov	r6, r3
   15dc0:	ldr	r7, [r0]
   15dc4:	subs	r4, r1, #0
   15dc8:	bne	15e14 <__mtree_search_lowercase_to_start@@Base+0x60>
   15dcc:	mov	r0, r4
   15dd0:	pop	{r4, r5, r6, r7, r8, pc}
   15dd4:	mov	r2, r6
   15dd8:	ldr	r1, [r7, r1, lsl #2]
   15ddc:	mov	r0, r8
   15de0:	bl	102a4 <mycore_strncasecmp@plt>
   15de4:	cmp	r0, #0
   15de8:	beq	15e58 <__mtree_search_lowercase_to_start@@Base+0xa4>
   15dec:	ldr	r4, [r5, #24]
   15df0:	b	15e0c <__mtree_search_lowercase_to_start@@Base+0x58>
   15df4:	ldr	r4, [r5, #16]
   15df8:	rsb	r3, r4, r4, lsl #3
   15dfc:	add	r3, r7, r3, lsl #2
   15e00:	ldr	r3, [r3, #4]
   15e04:	cmp	r6, r3
   15e08:	bhi	15e60 <__mtree_search_lowercase_to_start@@Base+0xac>
   15e0c:	cmp	r4, #0
   15e10:	beq	15e50 <__mtree_search_lowercase_to_start@@Base+0x9c>
   15e14:	rsb	r1, r4, r4, lsl #3
   15e18:	add	r5, r7, r1, lsl #2
   15e1c:	ldr	r3, [r5, #4]
   15e20:	cmp	r3, r6
   15e24:	beq	15dd4 <__mtree_search_lowercase_to_start@@Base+0x20>
   15e28:	cmp	r3, r6
   15e2c:	bcs	15df4 <__mtree_search_lowercase_to_start@@Base+0x40>
   15e30:	ldr	r4, [r5, #20]
   15e34:	rsb	r3, r4, r4, lsl #3
   15e38:	add	r3, r7, r3, lsl #2
   15e3c:	ldr	r3, [r3, #4]
   15e40:	cmp	r6, r3
   15e44:	bcs	15e0c <__mtree_search_lowercase_to_start@@Base+0x58>
   15e48:	mov	r0, #0
   15e4c:	pop	{r4, r5, r6, r7, r8, pc}
   15e50:	mov	r0, r4
   15e54:	pop	{r4, r5, r6, r7, r8, pc}
   15e58:	mov	r0, r4
   15e5c:	pop	{r4, r5, r6, r7, r8, pc}
   15e60:	mov	r0, #0
   15e64:	pop	{r4, r5, r6, r7, r8, pc}

00015e68 <__mtree_search_to_start@@Base>:
   15e68:	push	{r4, r5, r6, r7, r8, lr}
   15e6c:	mov	r8, r2
   15e70:	mov	r6, r3
   15e74:	ldr	r7, [r0]
   15e78:	subs	r4, r1, #0
   15e7c:	bne	15ec8 <__mtree_search_to_start@@Base+0x60>
   15e80:	mov	r0, r4
   15e84:	pop	{r4, r5, r6, r7, r8, pc}
   15e88:	mov	r2, r6
   15e8c:	ldr	r1, [r7, r1, lsl #2]
   15e90:	mov	r0, r8
   15e94:	bl	10070 <memcmp@plt>
   15e98:	cmp	r0, #0
   15e9c:	beq	15f0c <__mtree_search_to_start@@Base+0xa4>
   15ea0:	ldr	r4, [r5, #24]
   15ea4:	b	15ec0 <__mtree_search_to_start@@Base+0x58>
   15ea8:	ldr	r4, [r5, #16]
   15eac:	rsb	r3, r4, r4, lsl #3
   15eb0:	add	r3, r7, r3, lsl #2
   15eb4:	ldr	r3, [r3, #4]
   15eb8:	cmp	r6, r3
   15ebc:	bhi	15f14 <__mtree_search_to_start@@Base+0xac>
   15ec0:	cmp	r4, #0
   15ec4:	beq	15f04 <__mtree_search_to_start@@Base+0x9c>
   15ec8:	rsb	r1, r4, r4, lsl #3
   15ecc:	add	r5, r7, r1, lsl #2
   15ed0:	ldr	r3, [r5, #4]
   15ed4:	cmp	r3, r6
   15ed8:	beq	15e88 <__mtree_search_to_start@@Base+0x20>
   15edc:	cmp	r3, r6
   15ee0:	bcs	15ea8 <__mtree_search_to_start@@Base+0x40>
   15ee4:	ldr	r4, [r5, #20]
   15ee8:	rsb	r3, r4, r4, lsl #3
   15eec:	add	r3, r7, r3, lsl #2
   15ef0:	ldr	r3, [r3, #4]
   15ef4:	cmp	r6, r3
   15ef8:	bcs	15ec0 <__mtree_search_to_start@@Base+0x58>
   15efc:	mov	r0, #0
   15f00:	pop	{r4, r5, r6, r7, r8, pc}
   15f04:	mov	r0, r4
   15f08:	pop	{r4, r5, r6, r7, r8, pc}
   15f0c:	mov	r0, r4
   15f10:	pop	{r4, r5, r6, r7, r8, pc}
   15f14:	mov	r0, #0
   15f18:	pop	{r4, r5, r6, r7, r8, pc}

00015f1c <mctree_insert_child@@Base>:
   15f1c:	push	{r4, r5, r6, lr}
   15f20:	mov	r4, r0
   15f24:	ldr	r0, [r0]
   15f28:	ldr	r5, [r4, #4]
   15f2c:	rsb	r1, r1, r1, lsl #3
   15f30:	add	r1, r0, r1, lsl #2
   15f34:	str	r5, [r1, #24]
   15f38:	rsb	r1, r5, r5, lsl #3
   15f3c:	lsl	r1, r1, #2
   15f40:	add	ip, r0, r1
   15f44:	str	r2, [r0, r1]
   15f48:	str	r3, [ip, #4]
   15f4c:	ldr	r3, [sp, #16]
   15f50:	str	r3, [ip, #8]
   15f54:	ldr	r1, [r4, #4]
   15f58:	add	r3, r1, #1
   15f5c:	str	r3, [r4, #4]
   15f60:	ldr	r2, [r4, #8]
   15f64:	cmp	r3, r2
   15f68:	bcs	15ff0 <mctree_insert_child@@Base+0xd4>
   15f6c:	ldr	r3, [r4, #4]
   15f70:	ldr	r1, [r4]
   15f74:	rsb	r3, r3, r3, lsl #3
   15f78:	lsl	r2, r3, #2
   15f7c:	mov	r3, #0
   15f80:	str	r3, [r1, r2]
   15f84:	ldr	r2, [r4, #4]
   15f88:	ldr	r1, [r4]
   15f8c:	rsb	r2, r2, r2, lsl #3
   15f90:	add	r2, r1, r2, lsl #2
   15f94:	str	r3, [r2, #8]
   15f98:	ldr	r2, [r4, #4]
   15f9c:	ldr	r1, [r4]
   15fa0:	rsb	r2, r2, r2, lsl #3
   15fa4:	add	r2, r1, r2, lsl #2
   15fa8:	str	r3, [r2, #12]
   15fac:	ldr	r2, [r4, #4]
   15fb0:	ldr	r1, [r4]
   15fb4:	rsb	r2, r2, r2, lsl #3
   15fb8:	add	r2, r1, r2, lsl #2
   15fbc:	str	r3, [r2, #16]
   15fc0:	ldr	r2, [r4, #4]
   15fc4:	ldr	r1, [r4]
   15fc8:	rsb	r2, r2, r2, lsl #3
   15fcc:	add	r2, r1, r2, lsl #2
   15fd0:	str	r3, [r2, #20]
   15fd4:	ldr	r2, [r4, #4]
   15fd8:	ldr	r1, [r4]
   15fdc:	rsb	r2, r2, r2, lsl #3
   15fe0:	add	r2, r1, r2, lsl #2
   15fe4:	str	r3, [r2, #24]
   15fe8:	mov	r0, r5
   15fec:	pop	{r4, r5, r6, pc}
   15ff0:	add	r1, r1, #4096	; 0x1000
   15ff4:	add	r1, r1, #1
   15ff8:	str	r1, [r4, #8]
   15ffc:	rsb	r1, r1, r1, lsl #3
   16000:	lsl	r1, r1, #2
   16004:	ldr	r0, [r4]
   16008:	bl	fbd8 <mycore_realloc@plt>
   1600c:	str	r0, [r4]
   16010:	b	15f6c <mctree_insert_child@@Base+0x50>

00016014 <mctree_insert_after@@Base>:
   16014:	push	{r4, r5, r6, lr}
   16018:	mov	r4, r0
   1601c:	ldr	ip, [r0]
   16020:	ldr	r5, [r0, #4]
   16024:	rsb	r0, r1, r1, lsl #3
   16028:	add	r0, ip, r0, lsl #2
   1602c:	ldr	lr, [r0, #20]
   16030:	cmp	lr, #0
   16034:	beq	16054 <mctree_insert_after@@Base+0x40>
   16038:	rsb	lr, lr, lr, lsl #3
   1603c:	add	lr, ip, lr, lsl #2
   16040:	str	r5, [lr, #16]
   16044:	ldr	r6, [r0, #20]
   16048:	rsb	lr, r5, r5, lsl #3
   1604c:	add	lr, ip, lr, lsl #2
   16050:	str	r6, [lr, #20]
   16054:	str	r5, [r0, #20]
   16058:	rsb	r0, r5, r5, lsl #3
   1605c:	lsl	r0, r0, #2
   16060:	add	lr, ip, r0
   16064:	str	r1, [lr, #16]
   16068:	str	r2, [ip, r0]
   1606c:	str	r3, [lr, #4]
   16070:	ldr	r3, [sp, #16]
   16074:	str	r3, [lr, #8]
   16078:	ldr	r1, [r4, #4]
   1607c:	add	r3, r1, #1
   16080:	str	r3, [r4, #4]
   16084:	ldr	r2, [r4, #8]
   16088:	cmp	r3, r2
   1608c:	bcs	16114 <mctree_insert_after@@Base+0x100>
   16090:	ldr	r3, [r4, #4]
   16094:	ldr	r1, [r4]
   16098:	rsb	r3, r3, r3, lsl #3
   1609c:	lsl	r2, r3, #2
   160a0:	mov	r3, #0
   160a4:	str	r3, [r1, r2]
   160a8:	ldr	r2, [r4, #4]
   160ac:	ldr	r1, [r4]
   160b0:	rsb	r2, r2, r2, lsl #3
   160b4:	add	r2, r1, r2, lsl #2
   160b8:	str	r3, [r2, #8]
   160bc:	ldr	r2, [r4, #4]
   160c0:	ldr	r1, [r4]
   160c4:	rsb	r2, r2, r2, lsl #3
   160c8:	add	r2, r1, r2, lsl #2
   160cc:	str	r3, [r2, #12]
   160d0:	ldr	r2, [r4, #4]
   160d4:	ldr	r1, [r4]
   160d8:	rsb	r2, r2, r2, lsl #3
   160dc:	add	r2, r1, r2, lsl #2
   160e0:	str	r3, [r2, #16]
   160e4:	ldr	r2, [r4, #4]
   160e8:	ldr	r1, [r4]
   160ec:	rsb	r2, r2, r2, lsl #3
   160f0:	add	r2, r1, r2, lsl #2
   160f4:	str	r3, [r2, #20]
   160f8:	ldr	r2, [r4, #4]
   160fc:	ldr	r1, [r4]
   16100:	rsb	r2, r2, r2, lsl #3
   16104:	add	r2, r1, r2, lsl #2
   16108:	str	r3, [r2, #24]
   1610c:	mov	r0, r5
   16110:	pop	{r4, r5, r6, pc}
   16114:	add	r1, r1, #4096	; 0x1000
   16118:	add	r1, r1, #1
   1611c:	str	r1, [r4, #8]
   16120:	rsb	r1, r1, r1, lsl #3
   16124:	lsl	r1, r1, #2
   16128:	ldr	r0, [r4]
   1612c:	bl	fbd8 <mycore_realloc@plt>
   16130:	str	r0, [r4]
   16134:	b	16090 <mctree_insert_after@@Base+0x7c>

00016138 <mctree_insert_before@@Base>:
   16138:	push	{r4, r5, r6, lr}
   1613c:	mov	r4, r0
   16140:	ldr	ip, [r0]
   16144:	ldr	r5, [r0, #4]
   16148:	rsb	r0, r1, r1, lsl #3
   1614c:	add	r0, ip, r0, lsl #2
   16150:	ldr	lr, [r0, #16]
   16154:	cmp	lr, #0
   16158:	beq	16178 <mctree_insert_before@@Base+0x40>
   1615c:	rsb	lr, lr, lr, lsl #3
   16160:	add	lr, ip, lr, lsl #2
   16164:	str	r5, [lr, #20]
   16168:	ldr	r6, [r0, #16]
   1616c:	rsb	lr, r5, r5, lsl #3
   16170:	add	lr, ip, lr, lsl #2
   16174:	str	r6, [lr, #16]
   16178:	str	r5, [r0, #16]
   1617c:	rsb	r0, r5, r5, lsl #3
   16180:	lsl	r0, r0, #2
   16184:	add	lr, ip, r0
   16188:	str	r1, [lr, #20]
   1618c:	str	r2, [ip, r0]
   16190:	str	r3, [lr, #4]
   16194:	ldr	r3, [sp, #16]
   16198:	str	r3, [lr, #8]
   1619c:	ldr	r1, [r4, #4]
   161a0:	add	r3, r1, #1
   161a4:	str	r3, [r4, #4]
   161a8:	ldr	r2, [r4, #8]
   161ac:	cmp	r3, r2
   161b0:	bcs	16238 <mctree_insert_before@@Base+0x100>
   161b4:	ldr	r3, [r4, #4]
   161b8:	ldr	r1, [r4]
   161bc:	rsb	r3, r3, r3, lsl #3
   161c0:	lsl	r2, r3, #2
   161c4:	mov	r3, #0
   161c8:	str	r3, [r1, r2]
   161cc:	ldr	r2, [r4, #4]
   161d0:	ldr	r1, [r4]
   161d4:	rsb	r2, r2, r2, lsl #3
   161d8:	add	r2, r1, r2, lsl #2
   161dc:	str	r3, [r2, #8]
   161e0:	ldr	r2, [r4, #4]
   161e4:	ldr	r1, [r4]
   161e8:	rsb	r2, r2, r2, lsl #3
   161ec:	add	r2, r1, r2, lsl #2
   161f0:	str	r3, [r2, #12]
   161f4:	ldr	r2, [r4, #4]
   161f8:	ldr	r1, [r4]
   161fc:	rsb	r2, r2, r2, lsl #3
   16200:	add	r2, r1, r2, lsl #2
   16204:	str	r3, [r2, #16]
   16208:	ldr	r2, [r4, #4]
   1620c:	ldr	r1, [r4]
   16210:	rsb	r2, r2, r2, lsl #3
   16214:	add	r2, r1, r2, lsl #2
   16218:	str	r3, [r2, #20]
   1621c:	ldr	r2, [r4, #4]
   16220:	ldr	r1, [r4]
   16224:	rsb	r2, r2, r2, lsl #3
   16228:	add	r2, r1, r2, lsl #2
   1622c:	str	r3, [r2, #24]
   16230:	mov	r0, r5
   16234:	pop	{r4, r5, r6, pc}
   16238:	add	r1, r1, #4096	; 0x1000
   1623c:	add	r1, r1, #1
   16240:	str	r1, [r4, #8]
   16244:	rsb	r1, r1, r1, lsl #3
   16248:	lsl	r1, r1, #2
   1624c:	ldr	r0, [r4]
   16250:	bl	fbd8 <mycore_realloc@plt>
   16254:	str	r0, [r4]
   16258:	b	161b4 <mctree_insert_before@@Base+0x7c>

0001625c <__mtree_insert_to_start@@Base>:
   1625c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16260:	sub	sp, sp, #8
   16264:	mov	sl, r0
   16268:	mov	r9, r2
   1626c:	mov	r6, r3
   16270:	ldr	r8, [r0]
   16274:	subs	r4, r1, #0
   16278:	bne	16368 <__mtree_insert_to_start@@Base+0x10c>
   1627c:	mov	r0, r4
   16280:	b	1633c <__mtree_insert_to_start@@Base+0xe0>
   16284:	mov	r2, r6
   16288:	ldr	r1, [r8, r3, lsl #2]
   1628c:	mov	r0, r9
   16290:	bl	10070 <memcmp@plt>
   16294:	cmp	r0, #0
   16298:	beq	162b0 <__mtree_insert_to_start@@Base+0x54>
   1629c:	ldr	r3, [r5, #24]
   162a0:	cmp	r3, #0
   162a4:	beq	162c8 <__mtree_insert_to_start@@Base+0x6c>
   162a8:	mov	r4, r3
   162ac:	b	16368 <__mtree_insert_to_start@@Base+0x10c>
   162b0:	ldr	r3, [sp, #40]	; 0x28
   162b4:	cmp	r3, #0
   162b8:	moveq	r0, r4
   162bc:	strne	r3, [r5, #8]
   162c0:	movne	r0, r4
   162c4:	b	1633c <__mtree_insert_to_start@@Base+0xe0>
   162c8:	ldr	r3, [sp, #44]	; 0x2c
   162cc:	cmp	r3, #0
   162d0:	beq	162e4 <__mtree_insert_to_start@@Base+0x88>
   162d4:	add	r2, sp, #40	; 0x28
   162d8:	mov	r1, r7
   162dc:	mov	r0, r9
   162e0:	blx	r3
   162e4:	ldr	r3, [sp, #40]	; 0x28
   162e8:	str	r3, [sp]
   162ec:	mov	r3, r7
   162f0:	mov	r2, r9
   162f4:	mov	r1, r4
   162f8:	mov	r0, sl
   162fc:	bl	10244 <mctree_insert_child@plt>
   16300:	b	1633c <__mtree_insert_to_start@@Base+0xe0>
   16304:	ldr	r3, [sp, #44]	; 0x2c
   16308:	cmp	r3, #0
   1630c:	beq	16320 <__mtree_insert_to_start@@Base+0xc4>
   16310:	add	r2, sp, #40	; 0x28
   16314:	mov	r1, r6
   16318:	mov	r0, r9
   1631c:	blx	r3
   16320:	ldr	r3, [sp, #40]	; 0x28
   16324:	str	r3, [sp]
   16328:	mov	r3, r6
   1632c:	mov	r2, r9
   16330:	mov	r1, r4
   16334:	mov	r0, sl
   16338:	bl	10cc4 <mctree_insert_after@plt>
   1633c:	add	sp, sp, #8
   16340:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16344:	ldr	r3, [r5, #16]
   16348:	cmp	r3, #0
   1634c:	beq	163ac <__mtree_insert_to_start@@Base+0x150>
   16350:	rsb	r2, r3, r3, lsl #3
   16354:	add	r2, r8, r2, lsl #2
   16358:	ldr	r2, [r2, #4]
   1635c:	cmp	r6, r2
   16360:	bhi	163ac <__mtree_insert_to_start@@Base+0x150>
   16364:	mov	r4, r3
   16368:	rsb	r3, r4, r4, lsl #3
   1636c:	add	r5, r8, r3, lsl #2
   16370:	ldr	r7, [r5, #4]
   16374:	cmp	r7, r6
   16378:	beq	16284 <__mtree_insert_to_start@@Base+0x28>
   1637c:	cmp	r7, r6
   16380:	bcs	16344 <__mtree_insert_to_start@@Base+0xe8>
   16384:	ldr	r3, [r5, #20]
   16388:	cmp	r3, #0
   1638c:	beq	16304 <__mtree_insert_to_start@@Base+0xa8>
   16390:	rsb	r2, r3, r3, lsl #3
   16394:	add	r2, r8, r2, lsl #2
   16398:	ldr	r2, [r2, #4]
   1639c:	cmp	r6, r2
   163a0:	bcc	16304 <__mtree_insert_to_start@@Base+0xa8>
   163a4:	mov	r4, r3
   163a8:	b	16368 <__mtree_insert_to_start@@Base+0x10c>
   163ac:	ldr	r3, [sp, #44]	; 0x2c
   163b0:	cmp	r3, #0
   163b4:	beq	163c8 <__mtree_insert_to_start@@Base+0x16c>
   163b8:	add	r2, sp, #40	; 0x28
   163bc:	mov	r1, r6
   163c0:	mov	r0, r9
   163c4:	blx	r3
   163c8:	ldr	r3, [sp, #40]	; 0x28
   163cc:	str	r3, [sp]
   163d0:	mov	r3, r6
   163d4:	mov	r2, r9
   163d8:	mov	r1, r4
   163dc:	mov	r0, sl
   163e0:	bl	100ac <mctree_insert_before@plt>
   163e4:	b	1633c <__mtree_insert_to_start@@Base+0xe0>

000163e8 <mctree_insert@@Base>:
   163e8:	push	{r4, r5, r6, r7, lr}
   163ec:	sub	sp, sp, #20
   163f0:	str	r3, [sp, #12]
   163f4:	subs	r6, r2, #0
   163f8:	moveq	r0, #0
   163fc:	beq	16484 <mctree_insert@@Base+0x9c>
   16400:	mov	r4, r1
   16404:	mov	r5, r0
   16408:	ldr	r3, [pc, #160]	; 164b0 <mctree_insert@@Base+0xc8>
   1640c:	add	r3, pc, r3
   16410:	add	r2, r1, r6
   16414:	ldrb	r2, [r2, #-1]
   16418:	ldrb	r0, [r3, r2]
   1641c:	ldrb	r2, [r1]
   16420:	ldrb	r3, [r3, r2]
   16424:	ldr	r1, [r5, #12]
   16428:	add	r0, r0, r3
   1642c:	bl	2fb84 <mcsync_mutex_unlock@@Base+0x200>
   16430:	add	r7, r1, #1
   16434:	ldr	r3, [r5]
   16438:	rsb	r2, r7, r7, lsl #3
   1643c:	add	r3, r3, r2, lsl #2
   16440:	ldr	r1, [r3, #24]
   16444:	cmp	r1, #0
   16448:	bne	1648c <mctree_insert@@Base+0xa4>
   1644c:	ldr	r3, [sp, #40]	; 0x28
   16450:	cmp	r3, #0
   16454:	beq	16468 <mctree_insert@@Base+0x80>
   16458:	add	r2, sp, #12
   1645c:	mov	r1, r6
   16460:	mov	r0, r4
   16464:	blx	r3
   16468:	ldr	r3, [sp, #12]
   1646c:	str	r3, [sp]
   16470:	mov	r3, r6
   16474:	mov	r2, r4
   16478:	mov	r1, r7
   1647c:	mov	r0, r5
   16480:	bl	10244 <mctree_insert_child@plt>
   16484:	add	sp, sp, #20
   16488:	pop	{r4, r5, r6, r7, pc}
   1648c:	ldr	r3, [sp, #40]	; 0x28
   16490:	str	r3, [sp, #4]
   16494:	ldr	r3, [sp, #12]
   16498:	str	r3, [sp]
   1649c:	mov	r3, r6
   164a0:	mov	r2, r4
   164a4:	mov	r0, r5
   164a8:	bl	103b8 <__mtree_insert_to_start@plt>
   164ac:	b	16484 <mctree_insert@@Base+0x9c>
   164b0:	andeq	r9, r1, r8, lsr #25

000164b4 <mctree_search@@Base>:
   164b4:	push	{r4, r5, r6, lr}
   164b8:	subs	r6, r2, #0
   164bc:	beq	16524 <mctree_search@@Base+0x70>
   164c0:	mov	r5, r1
   164c4:	mov	r4, r0
   164c8:	ldr	r3, [pc, #92]	; 1652c <mctree_search@@Base+0x78>
   164cc:	add	r3, pc, r3
   164d0:	add	r2, r1, r6
   164d4:	ldrb	r2, [r2, #-1]
   164d8:	ldrb	r0, [r3, r2]
   164dc:	ldrb	r2, [r1]
   164e0:	ldrb	r3, [r3, r2]
   164e4:	ldr	r1, [r4, #12]
   164e8:	add	r0, r0, r3
   164ec:	bl	2fb84 <mcsync_mutex_unlock@@Base+0x200>
   164f0:	add	r1, r1, #1
   164f4:	ldr	r3, [r4]
   164f8:	rsb	r1, r1, r1, lsl #3
   164fc:	add	r1, r3, r1, lsl #2
   16500:	ldr	r0, [r1, #24]
   16504:	cmp	r0, #0
   16508:	popeq	{r4, r5, r6, pc}
   1650c:	mov	r3, r6
   16510:	mov	r2, r5
   16514:	mov	r1, r0
   16518:	mov	r0, r4
   1651c:	bl	109e8 <__mtree_search_to_start@plt>
   16520:	pop	{r4, r5, r6, pc}
   16524:	mov	r0, #0
   16528:	pop	{r4, r5, r6, pc}
   1652c:	andeq	r9, r1, r8, ror #23

00016530 <mctree_search_lowercase@@Base>:
   16530:	push	{r4, r5, r6, lr}
   16534:	subs	r6, r2, #0
   16538:	beq	165a0 <mctree_search_lowercase@@Base+0x70>
   1653c:	mov	r5, r1
   16540:	mov	r4, r0
   16544:	ldr	r3, [pc, #92]	; 165a8 <mctree_search_lowercase@@Base+0x78>
   16548:	add	r3, pc, r3
   1654c:	add	r2, r1, r6
   16550:	ldrb	r2, [r2, #-1]
   16554:	ldrb	r0, [r3, r2]
   16558:	ldrb	r2, [r1]
   1655c:	ldrb	r3, [r3, r2]
   16560:	ldr	r1, [r4, #12]
   16564:	add	r0, r0, r3
   16568:	bl	2fb84 <mcsync_mutex_unlock@@Base+0x200>
   1656c:	add	r1, r1, #1
   16570:	ldr	r3, [r4]
   16574:	rsb	r1, r1, r1, lsl #3
   16578:	add	r1, r3, r1, lsl #2
   1657c:	ldr	r0, [r1, #24]
   16580:	cmp	r0, #0
   16584:	popeq	{r4, r5, r6, pc}
   16588:	mov	r3, r6
   1658c:	mov	r2, r5
   16590:	mov	r1, r0
   16594:	mov	r0, r4
   16598:	bl	10f1c <__mtree_search_lowercase_to_start@plt>
   1659c:	pop	{r4, r5, r6, pc}
   165a0:	mov	r0, #0
   165a4:	pop	{r4, r5, r6, pc}
   165a8:	andeq	r9, r1, ip, ror #22

000165ac <mycore_utils_mhash_hash@@Base>:
   165ac:	push	{r4, lr}
   165b0:	cmp	r1, #0
   165b4:	beq	165dc <mycore_utils_mhash_hash@@Base+0x30>
   165b8:	mov	r3, r0
   165bc:	add	r0, r0, r1
   165c0:	mov	r1, #0
   165c4:	ldrb	ip, [r3], #1
   165c8:	add	r1, ip, r1
   165cc:	add	r1, r1, r1, lsl #10
   165d0:	eor	r1, r1, r1, lsr #6
   165d4:	cmp	r3, r0
   165d8:	bne	165c4 <mycore_utils_mhash_hash@@Base+0x18>
   165dc:	add	r1, r1, r1, lsl #3
   165e0:	eor	r0, r1, r1, lsr #11
   165e4:	mov	r1, r2
   165e8:	add	r0, r0, r0, lsl #15
   165ec:	bl	2fb84 <mcsync_mutex_unlock@@Base+0x200>
   165f0:	mov	r0, r1
   165f4:	pop	{r4, pc}

000165f8 <mycore_utils_mhash_create@@Base>:
   165f8:	push	{r4, lr}
   165fc:	mov	r1, #24
   16600:	mov	r0, #1
   16604:	bl	ff14 <mycore_calloc@plt>
   16608:	pop	{r4, pc}

0001660c <mycore_utils_mhash_init@@Base>:
   1660c:	push	{r4, r5, r6, r7, lr}
   16610:	sub	sp, sp, #12
   16614:	mov	r5, r0
   16618:	mov	r6, r1
   1661c:	mov	r7, r2
   16620:	bl	10160 <mchar_async_create@plt>
   16624:	str	r0, [r5]
   16628:	cmp	r0, #0
   1662c:	moveq	r4, #2
   16630:	beq	16650 <mycore_utils_mhash_init@@Base+0x44>
   16634:	mov	r2, #4096	; 0x1000
   16638:	mov	r1, #128	; 0x80
   1663c:	bl	104a8 <mchar_async_init@plt>
   16640:	mov	r4, r0
   16644:	str	r0, [sp, #4]
   16648:	cmp	r0, #0
   1664c:	beq	1665c <mycore_utils_mhash_init@@Base+0x50>
   16650:	mov	r0, r4
   16654:	add	sp, sp, #12
   16658:	pop	{r4, r5, r6, r7, pc}
   1665c:	add	r1, sp, #4
   16660:	ldr	r0, [r5]
   16664:	bl	10298 <mchar_async_node_add@plt>
   16668:	str	r0, [r5, #4]
   1666c:	ldr	r4, [sp, #4]
   16670:	cmp	r4, #0
   16674:	bne	16650 <mycore_utils_mhash_init@@Base+0x44>
   16678:	cmp	r6, #128	; 0x80
   1667c:	movcc	r6, #128	; 0x80
   16680:	mov	r1, #4
   16684:	mov	r0, r6
   16688:	bl	ff14 <mycore_calloc@plt>
   1668c:	str	r0, [r5, #8]
   16690:	cmp	r0, #0
   16694:	moveq	r4, #2
   16698:	beq	16650 <mycore_utils_mhash_init@@Base+0x44>
   1669c:	cmp	r7, #0
   166a0:	moveq	r7, #1
   166a4:	str	r7, [r5, #20]
   166a8:	str	r6, [r5, #12]
   166ac:	b	16650 <mycore_utils_mhash_init@@Base+0x44>

000166b0 <mycore_utils_mhash_clean@@Base>:
   166b0:	push	{r4, lr}
   166b4:	mov	r4, r0
   166b8:	ldr	r0, [r0]
   166bc:	bl	10bc8 <mchar_async_clean@plt>
   166c0:	ldr	r2, [r4, #12]
   166c4:	lsl	r2, r2, #2
   166c8:	mov	r1, #0
   166cc:	ldr	r0, [r4, #8]
   166d0:	bl	108b0 <memset@plt>
   166d4:	pop	{r4, pc}

000166d8 <mycore_utils_mhash_destroy@@Base>:
   166d8:	push	{r4, r5, r6, lr}
   166dc:	subs	r4, r0, #0
   166e0:	beq	16708 <mycore_utils_mhash_destroy@@Base+0x30>
   166e4:	mov	r5, r1
   166e8:	ldr	r0, [r4, #8]
   166ec:	cmp	r0, #0
   166f0:	beq	16700 <mycore_utils_mhash_destroy@@Base+0x28>
   166f4:	bl	10dcc <mycore_free@plt>
   166f8:	mov	r3, #0
   166fc:	str	r3, [r4, #8]
   16700:	cmp	r5, #0
   16704:	bne	16710 <mycore_utils_mhash_destroy@@Base+0x38>
   16708:	mov	r0, r4
   1670c:	pop	{r4, r5, r6, pc}
   16710:	ldr	r0, [r4, #8]
   16714:	bl	10dcc <mycore_free@plt>
   16718:	mov	r4, #0
   1671c:	b	16708 <mycore_utils_mhash_destroy@@Base+0x30>

00016720 <mycore_utils_mhash_create_entry@@Base>:
   16720:	push	{r4, r5, r6, r7, r8, lr}
   16724:	mov	r5, r0
   16728:	mov	r8, r1
   1672c:	mov	r6, r2
   16730:	mov	r7, r3
   16734:	mov	r2, #16
   16738:	ldr	r1, [r0, #4]
   1673c:	ldr	r0, [r0]
   16740:	bl	10910 <mchar_async_malloc@plt>
   16744:	mov	r4, r0
   16748:	add	r2, r6, #1
   1674c:	ldr	r1, [r5, #4]
   16750:	ldr	r0, [r5]
   16754:	bl	10910 <mchar_async_malloc@plt>
   16758:	str	r0, [r4]
   1675c:	cmp	r0, #0
   16760:	beq	16790 <mycore_utils_mhash_create_entry@@Base+0x70>
   16764:	mov	r2, r6
   16768:	mov	r1, r8
   1676c:	bl	ff5c <memcpy@plt>
   16770:	ldr	r2, [r4]
   16774:	mov	r3, #0
   16778:	strb	r3, [r2, r6]
   1677c:	str	r6, [r4, #4]
   16780:	str	r7, [r4, #8]
   16784:	str	r3, [r4, #12]
   16788:	mov	r0, r4
   1678c:	pop	{r4, r5, r6, r7, r8, pc}
   16790:	mov	r2, r4
   16794:	ldr	r1, [r5, #4]
   16798:	ldr	r0, [r5]
   1679c:	bl	10718 <mchar_async_free@plt>
   167a0:	mov	r4, #0
   167a4:	b	16788 <mycore_utils_mhash_create_entry@@Base+0x68>

000167a8 <mycore_utils_mhash_search@@Base>:
   167a8:	push	{r4, r5, r6, lr}
   167ac:	cmp	r2, #0
   167b0:	cmpne	r1, #0
   167b4:	moveq	r4, #0
   167b8:	beq	1681c <mycore_utils_mhash_search@@Base+0x74>
   167bc:	mov	r6, r1
   167c0:	mov	r5, r2
   167c4:	mov	r4, r0
   167c8:	ldr	r2, [r0, #12]
   167cc:	mov	r1, r5
   167d0:	mov	r0, r6
   167d4:	bl	1007c <mycore_utils_mhash_hash@plt>
   167d8:	ldr	r3, [r4, #8]
   167dc:	ldr	r4, [r3, r0, lsl #2]
   167e0:	cmp	r4, #0
   167e4:	bne	167f8 <mycore_utils_mhash_search@@Base+0x50>
   167e8:	b	1681c <mycore_utils_mhash_search@@Base+0x74>
   167ec:	ldr	r4, [r4, #12]
   167f0:	cmp	r4, #0
   167f4:	beq	1681c <mycore_utils_mhash_search@@Base+0x74>
   167f8:	ldr	r3, [r4, #4]
   167fc:	cmp	r5, r3
   16800:	bne	167ec <mycore_utils_mhash_search@@Base+0x44>
   16804:	mov	r2, r5
   16808:	mov	r1, r6
   1680c:	ldr	r0, [r4]
   16810:	bl	10f94 <strncmp@plt>
   16814:	cmp	r0, #0
   16818:	bne	167ec <mycore_utils_mhash_search@@Base+0x44>
   1681c:	mov	r0, r4
   16820:	pop	{r4, r5, r6, pc}

00016824 <mycore_utils_mhash_entry_by_id@@Base>:
   16824:	ldr	r3, [r0, #12]
   16828:	cmp	r3, r1
   1682c:	ldrhi	r3, [r0, #8]
   16830:	ldrhi	r0, [r3, r1, lsl #2]
   16834:	movls	r0, #0
   16838:	bx	lr

0001683c <mycore_utils_mhash_get_table_size@@Base>:
   1683c:	ldr	r0, [r0, #12]
   16840:	bx	lr

00016844 <mycore_utils_mhash_rebuild_add_entry@@Base>:
   16844:	cmp	r2, #0
   16848:	cmpne	r1, #0
   1684c:	beq	168ac <mycore_utils_mhash_rebuild_add_entry@@Base+0x68>
   16850:	push	{r4, r5, r6, lr}
   16854:	mov	r5, r0
   16858:	mov	r0, r1
   1685c:	mov	r1, r2
   16860:	mov	r4, r3
   16864:	mov	r3, #0
   16868:	str	r3, [r4, #12]
   1686c:	ldr	r2, [r5, #12]
   16870:	bl	1007c <mycore_utils_mhash_hash@plt>
   16874:	ldr	r3, [r5, #8]
   16878:	ldr	r1, [r3, r0, lsl #2]
   1687c:	cmp	r1, #0
   16880:	bne	16894 <mycore_utils_mhash_rebuild_add_entry@@Base+0x50>
   16884:	str	r4, [r3, r0, lsl #2]
   16888:	mov	r0, r4
   1688c:	pop	{r4, r5, r6, pc}
   16890:	mov	r1, r2
   16894:	ldr	r2, [r1, #12]
   16898:	cmp	r2, #0
   1689c:	bne	16890 <mycore_utils_mhash_rebuild_add_entry@@Base+0x4c>
   168a0:	str	r4, [r1, #12]
   168a4:	mov	r0, r4
   168a8:	pop	{r4, r5, r6, pc}
   168ac:	mov	r0, #0
   168b0:	bx	lr

000168b4 <mycore_utils_mhash_rebuld@@Base>:
   168b4:	push	{r4, r5, r6, r7, r8, lr}
   168b8:	mov	r5, r0
   168bc:	ldr	r8, [r0, #8]
   168c0:	ldr	r4, [r0, #12]
   168c4:	lsl	r0, r4, #1
   168c8:	str	r0, [r5, #12]
   168cc:	mov	r1, #4
   168d0:	bl	ff14 <mycore_calloc@plt>
   168d4:	str	r0, [r5, #8]
   168d8:	cmp	r0, #0
   168dc:	beq	16940 <mycore_utils_mhash_rebuld@@Base+0x8c>
   168e0:	ldr	r3, [r5, #12]
   168e4:	cmp	r3, #0
   168e8:	subne	r7, r8, #4
   168ec:	movne	r6, #0
   168f0:	beq	16930 <mycore_utils_mhash_rebuld@@Base+0x7c>
   168f4:	ldr	r4, [r7, #4]!
   168f8:	cmp	r4, #0
   168fc:	beq	16920 <mycore_utils_mhash_rebuld@@Base+0x6c>
   16900:	mov	r3, r4
   16904:	ldr	r2, [r4, #4]
   16908:	ldr	r1, [r4]
   1690c:	mov	r0, r5
   16910:	bl	10ea4 <mycore_utils_mhash_rebuild_add_entry@plt>
   16914:	ldr	r4, [r4, #12]
   16918:	cmp	r4, #0
   1691c:	bne	16900 <mycore_utils_mhash_rebuld@@Base+0x4c>
   16920:	add	r6, r6, #1
   16924:	ldr	r3, [r5, #12]
   16928:	cmp	r3, r6
   1692c:	bhi	168f4 <mycore_utils_mhash_rebuld@@Base+0x40>
   16930:	mov	r0, r8
   16934:	bl	10dcc <mycore_free@plt>
   16938:	ldr	r0, [r5, #8]
   1693c:	pop	{r4, r5, r6, r7, r8, pc}
   16940:	str	r8, [r5, #8]
   16944:	str	r4, [r5, #12]
   16948:	mov	r0, #0
   1694c:	pop	{r4, r5, r6, r7, r8, pc}

00016950 <mycore_utils_mhash_add_with_choice@@Base>:
   16950:	push	{r4, r5, r6, r7, r8, lr}
   16954:	cmp	r2, #0
   16958:	cmpne	r1, #0
   1695c:	moveq	r6, #0
   16960:	beq	16a44 <mycore_utils_mhash_add_with_choice@@Base+0xf4>
   16964:	mov	r7, r1
   16968:	mov	r6, r2
   1696c:	mov	r8, r0
   16970:	ldr	r2, [r0, #12]
   16974:	mov	r1, r6
   16978:	mov	r0, r7
   1697c:	bl	1007c <mycore_utils_mhash_hash@plt>
   16980:	mov	r5, r0
   16984:	ldr	r3, [r8, #8]
   16988:	ldr	r4, [r3, r0, lsl #2]
   1698c:	cmp	r4, #0
   16990:	movne	r5, #0
   16994:	bne	169f4 <mycore_utils_mhash_add_with_choice@@Base+0xa4>
   16998:	ldr	r3, [r8, #12]
   1699c:	sub	r3, r3, r3, lsr #2
   169a0:	ldr	r2, [r8, #16]
   169a4:	cmp	r2, r3
   169a8:	bcs	169d4 <mycore_utils_mhash_add_with_choice@@Base+0x84>
   169ac:	ldr	r4, [r8, #8]
   169b0:	mov	r3, #0
   169b4:	mov	r2, r6
   169b8:	mov	r1, r7
   169bc:	mov	r0, r8
   169c0:	bl	10ef8 <mycore_utils_mhash_create_entry@plt>
   169c4:	str	r0, [r4, r5, lsl #2]
   169c8:	ldr	r3, [r8, #8]
   169cc:	ldr	r6, [r3, r5, lsl #2]
   169d0:	b	16a44 <mycore_utils_mhash_add_with_choice@@Base+0xf4>
   169d4:	mov	r0, r8
   169d8:	bl	10a48 <mycore_utils_mhash_rebuld@plt>
   169dc:	b	169ac <mycore_utils_mhash_add_with_choice@@Base+0x5c>
   169e0:	ldr	r3, [r4, #12]
   169e4:	cmp	r3, #0
   169e8:	beq	16a20 <mycore_utils_mhash_add_with_choice@@Base+0xd0>
   169ec:	add	r5, r5, #1
   169f0:	mov	r4, r3
   169f4:	ldr	r3, [r4, #4]
   169f8:	cmp	r6, r3
   169fc:	bne	169e0 <mycore_utils_mhash_add_with_choice@@Base+0x90>
   16a00:	mov	r2, r6
   16a04:	mov	r1, r7
   16a08:	ldr	r0, [r4]
   16a0c:	bl	10f94 <strncmp@plt>
   16a10:	cmp	r0, #0
   16a14:	bne	169e0 <mycore_utils_mhash_add_with_choice@@Base+0x90>
   16a18:	mov	r6, r4
   16a1c:	b	16a44 <mycore_utils_mhash_add_with_choice@@Base+0xf4>
   16a20:	mov	r2, r6
   16a24:	mov	r1, r7
   16a28:	mov	r0, r8
   16a2c:	bl	10ef8 <mycore_utils_mhash_create_entry@plt>
   16a30:	mov	r6, r0
   16a34:	str	r0, [r4, #12]
   16a38:	ldr	r3, [r8, #20]
   16a3c:	cmp	r5, r3
   16a40:	bhi	16a4c <mycore_utils_mhash_add_with_choice@@Base+0xfc>
   16a44:	mov	r0, r6
   16a48:	pop	{r4, r5, r6, r7, r8, pc}
   16a4c:	mov	r0, r8
   16a50:	bl	10a48 <mycore_utils_mhash_rebuld@plt>
   16a54:	b	16a44 <mycore_utils_mhash_add_with_choice@@Base+0xf4>

00016a58 <mycore_utils_mhash_add@@Base>:
   16a58:	push	{r4, lr}
   16a5c:	mov	r4, r3
   16a60:	bl	10db4 <mycore_utils_mhash_add_with_choice@plt>
   16a64:	cmp	r0, #0
   16a68:	strne	r4, [r0, #8]
   16a6c:	pop	{r4, pc}

00016a70 <myencoding_detect_by_trigram@@Base>:
   16a70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16a74:	sub	sp, sp, #28
   16a78:	str	r0, [sp, #20]
   16a7c:	str	r2, [sp, #16]
   16a80:	str	r3, [sp, #12]
   16a84:	ldr	r8, [sp, #64]	; 0x40
   16a88:	subs	fp, r2, #3
   16a8c:	beq	16b28 <myencoding_detect_by_trigram@@Base+0xb8>
   16a90:	mov	sl, r1
   16a94:	mov	r9, #0
   16a98:	str	r9, [sp, #8]
   16a9c:	mov	r6, r9
   16aa0:	b	16ad8 <myencoding_detect_by_trigram@@Base+0x68>
   16aa4:	ldr	r3, [sp, #4]
   16aa8:	ldr	r3, [r3, #4]
   16aac:	add	r9, r9, r3
   16ab0:	ldr	r3, [sp, #8]
   16ab4:	add	r3, r3, #1
   16ab8:	str	r3, [sp, #8]
   16abc:	ldr	r3, [sp, #16]
   16ac0:	ldr	r2, [sp, #68]	; 0x44
   16ac4:	cmp	r9, r2
   16ac8:	movcs	r6, r3
   16acc:	add	r6, r6, #1
   16ad0:	cmp	r6, fp
   16ad4:	bcs	16b30 <myencoding_detect_by_trigram@@Base+0xc0>
   16ad8:	add	r7, sl, r6
   16adc:	ldrsb	r3, [sl, r6]
   16ae0:	cmp	r3, #0
   16ae4:	bge	16acc <myencoding_detect_by_trigram@@Base+0x5c>
   16ae8:	cmp	r8, #0
   16aec:	beq	16acc <myencoding_detect_by_trigram@@Base+0x5c>
   16af0:	ldr	r4, [sp, #12]
   16af4:	mov	r5, #0
   16af8:	str	r4, [sp, #4]
   16afc:	mov	r2, #3
   16b00:	mov	r1, r7
   16b04:	mov	r0, r4
   16b08:	bl	10070 <memcmp@plt>
   16b0c:	cmp	r0, #0
   16b10:	beq	16aa4 <myencoding_detect_by_trigram@@Base+0x34>
   16b14:	add	r5, r5, #1
   16b18:	add	r4, r4, #8
   16b1c:	cmp	r8, r5
   16b20:	bne	16af8 <myencoding_detect_by_trigram@@Base+0x88>
   16b24:	b	16acc <myencoding_detect_by_trigram@@Base+0x5c>
   16b28:	mov	r9, #0
   16b2c:	str	r9, [sp, #8]
   16b30:	ldr	r3, [sp, #20]
   16b34:	ldr	r2, [sp, #8]
   16b38:	str	r2, [r3]
   16b3c:	str	r9, [r3, #4]
   16b40:	mov	r0, r3
   16b44:	add	sp, sp, #28
   16b48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00016b4c <myencoding_detect_russian_has_end@@Base>:
   16b4c:	ldr	r3, [r0, #4]
   16b50:	cmp	r3, r2
   16b54:	bcs	16b6c <myencoding_detect_russian_has_end@@Base+0x20>
   16b58:	ldr	r0, [r0]
   16b5c:	cmp	r0, r1
   16b60:	movcc	r0, #0
   16b64:	movcs	r0, #1
   16b68:	bx	lr
   16b6c:	mov	r0, #1
   16b70:	bx	lr

00016b74 <myencoding_detect_unicode_has_end@@Base>:
   16b74:	ldr	r3, [r0, #4]
   16b78:	cmp	r3, #0
   16b7c:	bne	16b90 <myencoding_detect_unicode_has_end@@Base+0x1c>
   16b80:	ldr	r0, [r0, #8]
   16b84:	clz	r0, r0
   16b88:	lsr	r0, r0, #5
   16b8c:	bx	lr
   16b90:	ldr	r2, [r0, #8]
   16b94:	cmp	r2, #0
   16b98:	beq	16bc4 <myencoding_detect_unicode_has_end@@Base+0x50>
   16b9c:	push	{r4, lr}
   16ba0:	mov	r4, r1
   16ba4:	mov	r1, r3
   16ba8:	mov	r0, #100	; 0x64
   16bac:	mul	r0, r0, r2
   16bb0:	bl	2f998 <mcsync_mutex_unlock@@Base+0x14>
   16bb4:	cmp	r0, r4
   16bb8:	movcs	r0, #0
   16bbc:	movcc	r0, #1
   16bc0:	pop	{r4, pc}
   16bc4:	mov	r0, #1
   16bc8:	bx	lr

00016bcc <myencoding_detect_utf_8@@Base>:
   16bcc:	push	{r4, r5, r6, lr}
   16bd0:	cmp	r2, #0
   16bd4:	moveq	r4, #0
   16bd8:	moveq	r6, r4
   16bdc:	moveq	lr, r4
   16be0:	beq	16d40 <myencoding_detect_utf_8@@Base+0x174>
   16be4:	mov	r4, #0
   16be8:	mov	r6, r4
   16bec:	mov	lr, r4
   16bf0:	mov	r3, r4
   16bf4:	b	16c2c <myencoding_detect_utf_8@@Base+0x60>
   16bf8:	and	r5, ip, #224	; 0xe0
   16bfc:	cmp	r5, #192	; 0xc0
   16c00:	beq	16c44 <myencoding_detect_utf_8@@Base+0x78>
   16c04:	and	r5, ip, #240	; 0xf0
   16c08:	cmp	r5, #224	; 0xe0
   16c0c:	beq	16c80 <myencoding_detect_utf_8@@Base+0xb4>
   16c10:	and	ip, ip, #248	; 0xf8
   16c14:	cmp	ip, #240	; 0xf0
   16c18:	addne	r3, r3, #1
   16c1c:	addne	r4, r4, #1
   16c20:	beq	16cd4 <myencoding_detect_utf_8@@Base+0x108>
   16c24:	cmp	r2, r3
   16c28:	bls	16d40 <myencoding_detect_utf_8@@Base+0x174>
   16c2c:	ldrb	ip, [r1, r3]
   16c30:	tst	ip, #128	; 0x80
   16c34:	bne	16bf8 <myencoding_detect_utf_8@@Base+0x2c>
   16c38:	add	r3, r3, #1
   16c3c:	add	lr, lr, #1
   16c40:	b	16c24 <myencoding_detect_utf_8@@Base+0x58>
   16c44:	add	ip, r3, #2
   16c48:	cmp	r2, ip
   16c4c:	bls	16d40 <myencoding_detect_utf_8@@Base+0x174>
   16c50:	add	r3, r1, r3
   16c54:	ldrb	r3, [r3, #1]
   16c58:	tst	r3, #128	; 0x80
   16c5c:	bne	16c6c <myencoding_detect_utf_8@@Base+0xa0>
   16c60:	add	r4, r4, #1
   16c64:	mov	r3, ip
   16c68:	b	16c2c <myencoding_detect_utf_8@@Base+0x60>
   16c6c:	tst	r3, #64	; 0x40
   16c70:	addeq	r6, r6, #1
   16c74:	moveq	r3, ip
   16c78:	beq	16c2c <myencoding_detect_utf_8@@Base+0x60>
   16c7c:	b	16c60 <myencoding_detect_utf_8@@Base+0x94>
   16c80:	add	ip, r3, #3
   16c84:	cmp	r2, ip
   16c88:	bls	16d40 <myencoding_detect_utf_8@@Base+0x174>
   16c8c:	add	r5, r1, r3
   16c90:	ldrb	r5, [r5, #2]
   16c94:	tst	r5, #128	; 0x80
   16c98:	bne	16ca8 <myencoding_detect_utf_8@@Base+0xdc>
   16c9c:	add	r4, r4, #1
   16ca0:	mov	r3, ip
   16ca4:	b	16c2c <myencoding_detect_utf_8@@Base+0x60>
   16ca8:	tst	r5, #64	; 0x40
   16cac:	bne	16c9c <myencoding_detect_utf_8@@Base+0xd0>
   16cb0:	add	r3, r1, r3
   16cb4:	ldrb	r3, [r3, #1]
   16cb8:	tst	r3, #128	; 0x80
   16cbc:	beq	16c9c <myencoding_detect_utf_8@@Base+0xd0>
   16cc0:	tst	r3, #64	; 0x40
   16cc4:	addeq	r6, r6, #1
   16cc8:	moveq	r3, ip
   16ccc:	beq	16c2c <myencoding_detect_utf_8@@Base+0x60>
   16cd0:	b	16c9c <myencoding_detect_utf_8@@Base+0xd0>
   16cd4:	add	ip, r3, #4
   16cd8:	cmp	r2, ip
   16cdc:	bls	16d40 <myencoding_detect_utf_8@@Base+0x174>
   16ce0:	add	r5, r1, r3
   16ce4:	ldrb	r5, [r5, #3]
   16ce8:	tst	r5, #128	; 0x80
   16cec:	bne	16cfc <myencoding_detect_utf_8@@Base+0x130>
   16cf0:	add	r4, r4, #1
   16cf4:	mov	r3, ip
   16cf8:	b	16c2c <myencoding_detect_utf_8@@Base+0x60>
   16cfc:	tst	r5, #64	; 0x40
   16d00:	bne	16cf0 <myencoding_detect_utf_8@@Base+0x124>
   16d04:	add	r5, r1, r3
   16d08:	ldrb	r5, [r5, #2]
   16d0c:	tst	r5, #128	; 0x80
   16d10:	beq	16cf0 <myencoding_detect_utf_8@@Base+0x124>
   16d14:	tst	r5, #64	; 0x40
   16d18:	bne	16cf0 <myencoding_detect_utf_8@@Base+0x124>
   16d1c:	add	r3, r1, r3
   16d20:	ldrb	r3, [r3, #1]
   16d24:	tst	r3, #128	; 0x80
   16d28:	beq	16cf0 <myencoding_detect_utf_8@@Base+0x124>
   16d2c:	tst	r3, #64	; 0x40
   16d30:	addeq	r6, r6, #1
   16d34:	moveq	r3, ip
   16d38:	beq	16c2c <myencoding_detect_utf_8@@Base+0x60>
   16d3c:	b	16cf0 <myencoding_detect_utf_8@@Base+0x124>
   16d40:	str	lr, [r0]
   16d44:	str	r6, [r0, #4]
   16d48:	str	r4, [r0, #8]
   16d4c:	pop	{r4, r5, r6, pc}

00016d50 <myencoding_detect_utf_16@@Base>:
   16d50:	push	{r4, r5, lr}
   16d54:	cmp	r2, #0
   16d58:	beq	16dc0 <myencoding_detect_utf_16@@Base+0x70>
   16d5c:	mov	r3, #1
   16d60:	mov	r4, #0
   16d64:	mov	r5, r4
   16d68:	b	16d90 <myencoding_detect_utf_16@@Base+0x40>
   16d6c:	ldrb	ip, [r1, #-2]
   16d70:	sub	ip, ip, #32
   16d74:	uxtb	ip, ip
   16d78:	cmp	ip, #94	; 0x5e
   16d7c:	addls	r5, r5, #1
   16d80:	add	ip, r3, #1
   16d84:	cmp	r2, r3
   16d88:	bls	16dc8 <myencoding_detect_utf_16@@Base+0x78>
   16d8c:	mov	r3, ip
   16d90:	sub	lr, r3, #1
   16d94:	ldrb	ip, [r1], #1
   16d98:	cmp	ip, #0
   16d9c:	bne	16d80 <myencoding_detect_utf_16@@Base+0x30>
   16da0:	tst	lr, #1
   16da4:	bne	16d6c <myencoding_detect_utf_16@@Base+0x1c>
   16da8:	ldrb	ip, [r1]
   16dac:	sub	ip, ip, #32
   16db0:	uxtb	ip, ip
   16db4:	cmp	ip, #94	; 0x5e
   16db8:	addls	r4, r4, #1
   16dbc:	b	16d80 <myencoding_detect_utf_16@@Base+0x30>
   16dc0:	mov	r4, #0
   16dc4:	mov	r5, r4
   16dc8:	mov	r3, #0
   16dcc:	str	r3, [r0]
   16dd0:	str	r5, [r0, #4]
   16dd4:	str	r4, [r0, #8]
   16dd8:	pop	{r4, r5, pc}

00016ddc <myencoding_detect_bom@@Base>:
   16ddc:	cmp	r1, #2
   16de0:	bls	16df0 <myencoding_detect_bom@@Base+0x14>
   16de4:	ldrb	r3, [r0]
   16de8:	cmp	r3, #239	; 0xef
   16dec:	beq	16e20 <myencoding_detect_bom@@Base+0x44>
   16df0:	cmp	r1, #1
   16df4:	bls	16e8c <myencoding_detect_bom@@Base+0xb0>
   16df8:	ldrb	r3, [r0]
   16dfc:	cmp	r3, #254	; 0xfe
   16e00:	beq	16e58 <myencoding_detect_bom@@Base+0x7c>
   16e04:	cmp	r3, #255	; 0xff
   16e08:	bne	16e94 <myencoding_detect_bom@@Base+0xb8>
   16e0c:	ldrb	r3, [r0, #1]
   16e10:	cmp	r3, #254	; 0xfe
   16e14:	beq	16e7c <myencoding_detect_bom@@Base+0xa0>
   16e18:	mov	r0, #0
   16e1c:	bx	lr
   16e20:	ldrb	r3, [r0, #1]
   16e24:	cmp	r3, #187	; 0xbb
   16e28:	beq	16e34 <myencoding_detect_bom@@Base+0x58>
   16e2c:	mov	r0, #0
   16e30:	bx	lr
   16e34:	ldrb	r3, [r0, #2]
   16e38:	cmp	r3, #191	; 0xbf
   16e3c:	beq	16e48 <myencoding_detect_bom@@Base+0x6c>
   16e40:	mov	r0, #0
   16e44:	bx	lr
   16e48:	mov	r3, #0
   16e4c:	str	r3, [r2]
   16e50:	mov	r0, #1
   16e54:	bx	lr
   16e58:	ldrb	r3, [r0, #1]
   16e5c:	cmp	r3, #255	; 0xff
   16e60:	beq	16e6c <myencoding_detect_bom@@Base+0x90>
   16e64:	mov	r0, #0
   16e68:	bx	lr
   16e6c:	mov	r3, #5
   16e70:	str	r3, [r2]
   16e74:	mov	r0, #1
   16e78:	bx	lr
   16e7c:	mov	r3, #4
   16e80:	str	r3, [r2]
   16e84:	mov	r0, #1
   16e88:	bx	lr
   16e8c:	mov	r0, #0
   16e90:	bx	lr
   16e94:	mov	r0, #0
   16e98:	bx	lr

00016e9c <myencoding_detect_and_cut_bom@@Base>:
   16e9c:	push	{r4, r5, r6, r7, r8, lr}
   16ea0:	mov	r5, r0
   16ea4:	mov	r4, r1
   16ea8:	mov	r6, r2
   16eac:	mov	r7, r3
   16eb0:	bl	10214 <myencoding_detect_bom@plt>
   16eb4:	cmp	r0, #0
   16eb8:	popeq	{r4, r5, r6, r7, r8, pc}
   16ebc:	ldr	r3, [r6]
   16ec0:	cmp	r3, #0
   16ec4:	addeq	r5, r5, #3
   16ec8:	streq	r5, [r7]
   16ecc:	subeq	r4, r4, #3
   16ed0:	addne	r5, r5, #2
   16ed4:	strne	r5, [r7]
   16ed8:	subne	r4, r4, #2
   16edc:	ldr	r3, [sp, #24]
   16ee0:	str	r4, [r3]
   16ee4:	pop	{r4, r5, r6, r7, r8, pc}

00016ee8 <myencoding_detect_unicode@@Base>:
   16ee8:	push	{r4, r5, r6, lr}
   16eec:	sub	sp, sp, #32
   16ef0:	mov	r4, r0
   16ef4:	mov	r6, r1
   16ef8:	mov	r5, r2
   16efc:	mov	r3, #0
   16f00:	str	r3, [r2]
   16f04:	mov	r2, r1
   16f08:	mov	r1, r0
   16f0c:	add	r0, sp, #20
   16f10:	bl	fed8 <myencoding_detect_utf_16@plt>
   16f14:	ldr	r3, [sp, #28]
   16f18:	cmp	r3, #0
   16f1c:	bne	16f3c <myencoding_detect_unicode@@Base+0x54>
   16f20:	ldr	r3, [sp, #24]
   16f24:	cmp	r3, #2
   16f28:	bls	16f50 <myencoding_detect_unicode@@Base+0x68>
   16f2c:	mov	r3, #4
   16f30:	str	r3, [r5]
   16f34:	mov	r0, #1
   16f38:	b	16f84 <myencoding_detect_unicode@@Base+0x9c>
   16f3c:	cmp	r3, #2
   16f40:	bls	16f50 <myencoding_detect_unicode@@Base+0x68>
   16f44:	ldr	r3, [sp, #24]
   16f48:	cmp	r3, #0
   16f4c:	beq	16f8c <myencoding_detect_unicode@@Base+0xa4>
   16f50:	mov	r2, r6
   16f54:	mov	r1, r4
   16f58:	mov	r0, sp
   16f5c:	bl	11018 <myencoding_detect_utf_8@plt>
   16f60:	ldm	sp, {r0, r1, r2}
   16f64:	add	r3, sp, #20
   16f68:	stm	r3, {r0, r1, r2}
   16f6c:	mov	r1, #10
   16f70:	mov	r0, r3
   16f74:	bl	10a6c <myencoding_detect_unicode_has_end@plt>
   16f78:	cmp	r0, #0
   16f7c:	movne	r3, #0
   16f80:	strne	r3, [r5]
   16f84:	add	sp, sp, #32
   16f88:	pop	{r4, r5, r6, pc}
   16f8c:	mov	r3, #5
   16f90:	str	r3, [r5]
   16f94:	mov	r0, #1
   16f98:	b	16f84 <myencoding_detect_unicode@@Base+0x9c>

00016f9c <myencoding_detect_russian@@Base>:
   16f9c:	push	{r4, r5, r6, r7, r8, r9, lr}
   16fa0:	sub	sp, sp, #28
   16fa4:	mov	r6, r0
   16fa8:	mov	r7, r1
   16fac:	mov	r5, r2
   16fb0:	mov	r3, #0
   16fb4:	str	r3, [r2]
   16fb8:	ldr	r8, [pc, #536]	; 171d8 <myencoding_detect_russian@@Base+0x23c>
   16fbc:	str	r8, [sp, #4]
   16fc0:	mov	r3, #1000	; 0x3e8
   16fc4:	str	r3, [sp]
   16fc8:	ldr	r3, [pc, #524]	; 171dc <myencoding_detect_russian@@Base+0x240>
   16fcc:	add	r3, pc, r3
   16fd0:	mov	r2, r1
   16fd4:	mov	r1, r0
   16fd8:	add	r4, sp, #16
   16fdc:	mov	r0, r4
   16fe0:	bl	1070c <myencoding_detect_by_trigram@plt>
   16fe4:	mov	r2, r8
   16fe8:	mov	r1, #50	; 0x32
   16fec:	mov	r0, r4
   16ff0:	bl	10d54 <myencoding_detect_russian_has_end@plt>
   16ff4:	cmp	r0, #0
   16ff8:	movne	r3, #32
   16ffc:	strne	r3, [r5]
   17000:	bne	171d0 <myencoding_detect_russian@@Base+0x234>
   17004:	ldr	r8, [sp, #20]
   17008:	cmp	r8, #0
   1700c:	movne	r3, #32
   17010:	strne	r3, [r5]
   17014:	ldr	r9, [pc, #444]	; 171d8 <myencoding_detect_russian@@Base+0x23c>
   17018:	str	r9, [sp, #4]
   1701c:	mov	r3, #1000	; 0x3e8
   17020:	str	r3, [sp]
   17024:	ldr	r3, [pc, #436]	; 171e0 <myencoding_detect_russian@@Base+0x244>
   17028:	add	r3, pc, r3
   1702c:	sub	r3, r3, #136	; 0x88
   17030:	mov	r2, r7
   17034:	mov	r1, r6
   17038:	add	r4, sp, #8
   1703c:	mov	r0, r4
   17040:	bl	1070c <myencoding_detect_by_trigram@plt>
   17044:	ldm	r4, {r0, r1}
   17048:	add	r3, sp, #16
   1704c:	stm	r3, {r0, r1}
   17050:	mov	r2, r9
   17054:	mov	r1, #50	; 0x32
   17058:	mov	r0, r3
   1705c:	bl	10d54 <myencoding_detect_russian_has_end@plt>
   17060:	cmp	r0, #0
   17064:	movne	r3, #27
   17068:	strne	r3, [r5]
   1706c:	bne	171d0 <myencoding_detect_russian@@Base+0x234>
   17070:	ldr	r3, [sp, #20]
   17074:	cmp	r8, r3
   17078:	movcc	r2, #27
   1707c:	strcc	r2, [r5]
   17080:	movcc	r8, r3
   17084:	ldr	r9, [pc, #332]	; 171d8 <myencoding_detect_russian@@Base+0x23c>
   17088:	str	r9, [sp, #4]
   1708c:	mov	r3, #1000	; 0x3e8
   17090:	str	r3, [sp]
   17094:	ldr	r3, [pc, #328]	; 171e4 <myencoding_detect_russian@@Base+0x248>
   17098:	add	r3, pc, r3
   1709c:	sub	r3, r3, #272	; 0x110
   170a0:	mov	r2, r7
   170a4:	mov	r1, r6
   170a8:	add	r4, sp, #8
   170ac:	mov	r0, r4
   170b0:	bl	1070c <myencoding_detect_by_trigram@plt>
   170b4:	ldm	r4, {r0, r1}
   170b8:	add	r3, sp, #16
   170bc:	stm	r3, {r0, r1}
   170c0:	mov	r2, r9
   170c4:	mov	r1, #50	; 0x32
   170c8:	mov	r0, r3
   170cc:	bl	10d54 <myencoding_detect_russian_has_end@plt>
   170d0:	cmp	r0, #0
   170d4:	movne	r3, #22
   170d8:	strne	r3, [r5]
   170dc:	bne	171d0 <myencoding_detect_russian@@Base+0x234>
   170e0:	ldr	r3, [sp, #20]
   170e4:	cmp	r8, r3
   170e8:	movcc	r2, #22
   170ec:	strcc	r2, [r5]
   170f0:	movcc	r8, r3
   170f4:	ldr	r9, [pc, #220]	; 171d8 <myencoding_detect_russian@@Base+0x23c>
   170f8:	str	r9, [sp, #4]
   170fc:	mov	r3, #1000	; 0x3e8
   17100:	str	r3, [sp]
   17104:	ldr	r3, [pc, #220]	; 171e8 <myencoding_detect_russian@@Base+0x24c>
   17108:	add	r3, pc, r3
   1710c:	sub	r3, r3, #408	; 0x198
   17110:	mov	r2, r7
   17114:	mov	r1, r6
   17118:	add	r4, sp, #8
   1711c:	mov	r0, r4
   17120:	bl	1070c <myencoding_detect_by_trigram@plt>
   17124:	ldm	r4, {r0, r1}
   17128:	add	r3, sp, #16
   1712c:	stm	r3, {r0, r1}
   17130:	mov	r2, r9
   17134:	mov	r1, #50	; 0x32
   17138:	mov	r0, r3
   1713c:	bl	10d54 <myencoding_detect_russian_has_end@plt>
   17140:	cmp	r0, #0
   17144:	movne	r3, #41	; 0x29
   17148:	strne	r3, [r5]
   1714c:	bne	171d0 <myencoding_detect_russian@@Base+0x234>
   17150:	ldr	r3, [sp, #20]
   17154:	cmp	r8, r3
   17158:	movcc	r2, #41	; 0x29
   1715c:	strcc	r2, [r5]
   17160:	movcc	r8, r3
   17164:	ldr	r9, [pc, #108]	; 171d8 <myencoding_detect_russian@@Base+0x23c>
   17168:	str	r9, [sp, #4]
   1716c:	mov	r3, #1000	; 0x3e8
   17170:	str	r3, [sp]
   17174:	ldr	r3, [pc, #112]	; 171ec <myencoding_detect_russian@@Base+0x250>
   17178:	add	r3, pc, r3
   1717c:	sub	r3, r3, #544	; 0x220
   17180:	mov	r2, r7
   17184:	mov	r1, r6
   17188:	add	r4, sp, #8
   1718c:	mov	r0, r4
   17190:	bl	1070c <myencoding_detect_by_trigram@plt>
   17194:	ldm	r4, {r0, r1}
   17198:	add	r3, sp, #16
   1719c:	stm	r3, {r0, r1}
   171a0:	mov	r2, r9
   171a4:	mov	r1, #50	; 0x32
   171a8:	mov	r0, r3
   171ac:	bl	10d54 <myencoding_detect_russian_has_end@plt>
   171b0:	cmp	r0, #0
   171b4:	movne	r3, #12
   171b8:	strne	r3, [r5]
   171bc:	bne	171d0 <myencoding_detect_russian@@Base+0x234>
   171c0:	ldr	r3, [sp, #20]
   171c4:	cmp	r8, r3
   171c8:	movcc	r3, #12
   171cc:	strcc	r3, [r5]
   171d0:	add	sp, sp, #28
   171d4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   171d8:	andeq	r8, r1, r0, lsr #13
   171dc:	andeq	r9, r1, r8, ror #3
   171e0:	andeq	fp, r1, r4, lsl #3
   171e4:	andeq	sp, r1, ip, lsl #2
   171e8:	muleq	r1, r4, r0
   171ec:	andeq	r1, r2, ip, lsl r0

000171f0 <myencoding_detect@@Base>:
   171f0:	push	{r4, r5, r6, lr}
   171f4:	mov	r5, r0
   171f8:	mov	r6, r1
   171fc:	mov	r4, r2
   17200:	mov	r3, #0
   17204:	str	r3, [r2]
   17208:	bl	fc44 <myencoding_detect_unicode@plt>
   1720c:	cmp	r0, #0
   17210:	popne	{r4, r5, r6, pc}
   17214:	mov	r2, r4
   17218:	mov	r1, r6
   1721c:	mov	r0, r5
   17220:	bl	10f4c <myencoding_detect_russian@plt>
   17224:	pop	{r4, r5, r6, pc}

00017228 <myencoding_name_entry_by_name@@Base>:
   17228:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1722c:	mov	r9, r0
   17230:	mov	r5, r1
   17234:	ldr	r3, [pc, #256]	; 1733c <myencoding_name_entry_by_name@@Base+0x114>
   17238:	add	r3, pc, r3
   1723c:	add	r2, r0, r1
   17240:	ldrb	r2, [r2, #-1]
   17244:	add	r2, r3, r2
   17248:	ldrb	r2, [r2, #-680]	; 0xfffffd58
   1724c:	ldrb	r1, [r0]
   17250:	add	r3, r3, r1
   17254:	ldrb	r4, [r3, #-680]	; 0xfffffd58
   17258:	mul	r4, r4, r2
   1725c:	mul	r4, r5, r4
   17260:	ldr	r3, [pc, #216]	; 17340 <myencoding_name_entry_by_name@@Base+0x118>
   17264:	umull	r2, r3, r3, r4
   17268:	sub	r2, r4, r3
   1726c:	add	r3, r3, r2, lsr #1
   17270:	lsr	r3, r3, #8
   17274:	rsb	r2, r3, r3, lsl #3
   17278:	rsb	r2, r2, r2, lsl #4
   1727c:	rsb	r3, r3, r2, lsl #2
   17280:	sub	r3, r4, r3
   17284:	add	r4, r3, #1
   17288:	ldr	r6, [pc, #180]	; 17344 <myencoding_name_entry_by_name@@Base+0x11c>
   1728c:	add	r6, pc, r6
   17290:	ldr	r7, [pc, #176]	; 17348 <myencoding_name_entry_by_name@@Base+0x120>
   17294:	add	r7, pc, r7
   17298:	ldr	r8, [pc, #172]	; 1734c <myencoding_name_entry_by_name@@Base+0x124>
   1729c:	add	r8, pc, r8
   172a0:	ldr	sl, [pc, #168]	; 17350 <myencoding_name_entry_by_name@@Base+0x128>
   172a4:	add	sl, pc, sl
   172a8:	b	172d4 <myencoding_name_entry_by_name@@Base+0xac>
   172ac:	mov	r2, r5
   172b0:	mov	r1, r9
   172b4:	bl	102a4 <mycore_strncasecmp@plt>
   172b8:	cmp	r0, #0
   172bc:	beq	17314 <myencoding_name_entry_by_name@@Base+0xec>
   172c0:	rsb	r4, r4, r4, lsl #3
   172c4:	add	r4, sl, r4, lsl #2
   172c8:	ldr	r4, [r4, #20]
   172cc:	cmp	r4, #0
   172d0:	beq	17328 <myencoding_name_entry_by_name@@Base+0x100>
   172d4:	rsb	r3, r4, r4, lsl #3
   172d8:	add	r3, r6, r3, lsl #2
   172dc:	ldr	r0, [r3, #8]
   172e0:	cmp	r0, #0
   172e4:	beq	17330 <myencoding_name_entry_by_name@@Base+0x108>
   172e8:	rsb	r3, r4, r4, lsl #3
   172ec:	add	r3, r7, r3, lsl #2
   172f0:	ldr	r3, [r3, #12]
   172f4:	cmp	r5, r3
   172f8:	beq	172ac <myencoding_name_entry_by_name@@Base+0x84>
   172fc:	cmp	r5, r3
   17300:	bcc	17334 <myencoding_name_entry_by_name@@Base+0x10c>
   17304:	rsb	r4, r4, r4, lsl #3
   17308:	add	r4, r8, r4, lsl #2
   1730c:	ldr	r4, [r4, #20]
   17310:	b	172d4 <myencoding_name_entry_by_name@@Base+0xac>
   17314:	rsb	r4, r4, r4, lsl #3
   17318:	ldr	r0, [pc, #52]	; 17354 <myencoding_name_entry_by_name@@Base+0x12c>
   1731c:	add	r0, pc, r0
   17320:	add	r0, r0, r4, lsl #2
   17324:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17328:	mov	r0, #0
   1732c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17330:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17334:	mov	r0, #0
   17338:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1733c:	andeq	r2, r2, r4, asr pc
   17340:	ldmcc	r2, {r0, r1, r2, r4, r5, r8, sl, fp, sp}^
   17344:	andeq	r7, pc, r8, asr r9	; <UNPREDICTABLE>
   17348:	andeq	r7, pc, r0, asr r9	; <UNPREDICTABLE>
   1734c:	andeq	r7, pc, r8, asr #18
   17350:	andeq	r7, pc, r0, asr #18
   17354:	andeq	r7, pc, r8, asr #17

00017358 <myencoding_by_name@@Base>:
   17358:	push	{r4, lr}
   1735c:	mov	r4, r2
   17360:	bl	ff68 <myencoding_name_entry_by_name@plt>
   17364:	cmp	r0, #0
   17368:	beq	17384 <myencoding_by_name@@Base+0x2c>
   1736c:	cmp	r4, #0
   17370:	beq	1738c <myencoding_by_name@@Base+0x34>
   17374:	ldr	r3, [r0, #16]
   17378:	str	r3, [r4]
   1737c:	mov	r0, #1
   17380:	pop	{r4, pc}
   17384:	mov	r0, #0
   17388:	pop	{r4, pc}
   1738c:	mov	r0, #1
   17390:	pop	{r4, pc}

00017394 <myencoding_name_by_id@@Base>:
   17394:	cmp	r0, #41	; 0x29
   17398:	bls	173b0 <myencoding_name_by_id@@Base+0x1c>
   1739c:	cmp	r1, #0
   173a0:	beq	173e0 <myencoding_name_by_id@@Base+0x4c>
   173a4:	mov	r0, #0
   173a8:	str	r0, [r1]
   173ac:	bx	lr
   173b0:	cmp	r1, #0
   173b4:	beq	173cc <myencoding_name_by_id@@Base+0x38>
   173b8:	ldr	r3, [pc, #40]	; 173e8 <myencoding_name_by_id@@Base+0x54>
   173bc:	add	r3, pc, r3
   173c0:	add	r3, r3, r0, lsl #3
   173c4:	ldr	r3, [r3, #-2532]	; 0xfffff61c
   173c8:	str	r3, [r1]
   173cc:	ldr	r3, [pc, #24]	; 173ec <myencoding_name_by_id@@Base+0x58>
   173d0:	add	r3, pc, r3
   173d4:	add	r0, r3, r0, lsl #3
   173d8:	ldr	r0, [r0, #-2536]	; 0xfffff618
   173dc:	bx	lr
   173e0:	mov	r0, #0
   173e4:	bx	lr
   173e8:	andeq	fp, pc, r8, lsl r8	; <UNPREDICTABLE>
   173ec:	andeq	fp, pc, r4, lsl #16

000173f0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base>:
   173f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   173f4:	sub	sp, sp, #12
   173f8:	ldr	fp, [sp, #48]	; 0x30
   173fc:	mov	ip, #2
   17400:	str	ip, [r2]
   17404:	subs	sl, r3, #0
   17408:	movne	r3, #0
   1740c:	strne	r3, [sl]
   17410:	cmp	fp, #0
   17414:	movne	r3, #0
   17418:	strne	r3, [fp]
   1741c:	cmp	r1, #7
   17420:	bls	1773c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x34c>
   17424:	str	r2, [sp, #4]
   17428:	mov	r5, r1
   1742c:	mov	r7, r0
   17430:	mov	r4, #7
   17434:	mov	r8, #0
   17438:	ldr	r9, [pc, #776]	; 17748 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x358>
   1743c:	add	r9, pc, r9
   17440:	ldr	r6, [pc, #772]	; 1774c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x35c>
   17444:	b	174d4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xe4>
   17448:	lsr	r3, r6, r3
   1744c:	tst	r3, #1
   17450:	beq	17474 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x84>
   17454:	add	r4, r4, #1
   17458:	cmp	r5, r4
   1745c:	bls	17474 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x84>
   17460:	ldrb	r3, [r2, #1]!
   17464:	sub	r3, r3, #9
   17468:	uxtb	r3, r3
   1746c:	cmp	r3, #23
   17470:	bls	17448 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x58>
   17474:	ldrb	r3, [r7, r4]
   17478:	cmp	r3, #61	; 0x3d
   1747c:	bne	174c4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xd4>
   17480:	add	r4, r4, #1
   17484:	cmp	r5, r4
   17488:	bls	17724 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x334>
   1748c:	add	r2, r7, r4
   17490:	ldrb	r3, [r7, r4]
   17494:	sub	r3, r3, #9
   17498:	uxtb	r3, r3
   1749c:	cmp	r3, #23
   174a0:	ldrls	r0, [pc, #676]	; 1774c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x35c>
   174a4:	lsrls	r0, r0, r3
   174a8:	eorls	r0, r0, #1
   174ac:	andls	r0, r0, #1
   174b0:	cmp	r0, #0
   174b4:	bne	17544 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x154>
   174b8:	ldr	r1, [pc, #652]	; 1774c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x35c>
   174bc:	b	17524 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x134>
   174c0:	mov	r4, r8
   174c4:	add	r8, r4, #1
   174c8:	add	r4, r4, #8
   174cc:	cmp	r4, r5
   174d0:	bcs	1773c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x34c>
   174d4:	add	r1, r7, r8
   174d8:	mov	r0, r9
   174dc:	bl	fcd4 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   174e0:	cmp	r0, #0
   174e4:	beq	174c0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xd0>
   174e8:	cmp	r5, r4
   174ec:	bls	17474 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x84>
   174f0:	add	r2, r7, r4
   174f4:	ldrb	r3, [r7, r4]
   174f8:	sub	r3, r3, #9
   174fc:	uxtb	r3, r3
   17500:	cmp	r3, #23
   17504:	bhi	17474 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x84>
   17508:	lsr	r3, r6, r3
   1750c:	tst	r3, #1
   17510:	bne	17454 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x64>
   17514:	b	17474 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x84>
   17518:	lsr	r3, r1, r3
   1751c:	tst	r3, #1
   17520:	beq	17544 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x154>
   17524:	add	r4, r4, #1
   17528:	cmp	r5, r4
   1752c:	bls	17740 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x350>
   17530:	ldrb	r3, [r2, #1]!
   17534:	sub	r3, r3, #9
   17538:	uxtb	r3, r3
   1753c:	cmp	r3, #23
   17540:	bls	17518 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x128>
   17544:	add	r0, r7, r4
   17548:	ldrb	r3, [r7, r4]
   1754c:	cmp	r3, #34	; 0x22
   17550:	beq	1758c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x19c>
   17554:	cmp	r3, #39	; 0x27
   17558:	beq	175fc <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x20c>
   1755c:	sub	r3, r3, #9
   17560:	uxtb	r3, r3
   17564:	cmp	r3, #23
   17568:	bhi	176a0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x2b0>
   1756c:	ldr	r2, [pc, #472]	; 1774c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x35c>
   17570:	lsr	r3, r2, r3
   17574:	tst	r3, #1
   17578:	addne	r2, r4, #1
   1757c:	addne	r2, r7, r2
   17580:	ldrne	r1, [pc, #452]	; 1774c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x35c>
   17584:	bne	17678 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x288>
   17588:	b	176a0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x2b0>
   1758c:	add	r4, r4, #1
   17590:	cmp	r5, r4
   17594:	bls	1772c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x33c>
   17598:	add	r0, r7, r4
   1759c:	ldrb	r3, [r7, r4]
   175a0:	cmp	r3, #34	; 0x22
   175a4:	movne	r2, r0
   175a8:	movne	r1, r4
   175ac:	beq	175ec <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1fc>
   175b0:	add	r1, r1, #1
   175b4:	cmp	r5, r1
   175b8:	bls	175f4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x204>
   175bc:	ldrb	ip, [r2, #1]!
   175c0:	cmp	ip, #34	; 0x22
   175c4:	bne	175b0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1c0>
   175c8:	cmp	sl, #0
   175cc:	strne	r0, [sl]
   175d0:	cmp	fp, #0
   175d4:	subne	r2, r1, r4
   175d8:	strne	r2, [fp]
   175dc:	ldr	r2, [sp, #4]
   175e0:	sub	r1, r1, r4
   175e4:	bl	10cd0 <myencoding_by_name@plt>
   175e8:	b	17740 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x350>
   175ec:	mov	r1, r4
   175f0:	b	175c8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1d8>
   175f4:	mov	r0, #0
   175f8:	b	17740 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x350>
   175fc:	add	r4, r4, #1
   17600:	cmp	r5, r4
   17604:	bls	17734 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x344>
   17608:	add	r0, r7, r4
   1760c:	ldrb	r3, [r7, r4]
   17610:	cmp	r3, #39	; 0x27
   17614:	movne	r2, r0
   17618:	movne	r1, r4
   1761c:	beq	1765c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x26c>
   17620:	add	r1, r1, #1
   17624:	cmp	r5, r1
   17628:	bls	17664 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x274>
   1762c:	ldrb	ip, [r2, #1]!
   17630:	cmp	ip, #39	; 0x27
   17634:	bne	17620 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x230>
   17638:	cmp	sl, #0
   1763c:	strne	r0, [sl]
   17640:	cmp	fp, #0
   17644:	subne	r2, r1, r4
   17648:	strne	r2, [fp]
   1764c:	ldr	r2, [sp, #4]
   17650:	sub	r1, r1, r4
   17654:	bl	10cd0 <myencoding_by_name@plt>
   17658:	b	17740 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x350>
   1765c:	mov	r1, r4
   17660:	b	17638 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x248>
   17664:	mov	r0, #0
   17668:	b	17740 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x350>
   1766c:	lsr	r3, r1, r3
   17670:	tst	r3, #1
   17674:	beq	176a0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x2b0>
   17678:	add	r4, r4, #1
   1767c:	cmp	r5, r4
   17680:	bls	1771c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x32c>
   17684:	mov	r0, r2
   17688:	add	r2, r2, #1
   1768c:	ldrb	r3, [r0]
   17690:	sub	r3, r3, #9
   17694:	uxtb	r3, r3
   17698:	cmp	r3, #23
   1769c:	bls	1766c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x27c>
   176a0:	add	r3, r7, r4
   176a4:	ldrb	r2, [r7, r4]
   176a8:	cmp	r2, #59	; 0x3b
   176ac:	beq	176f0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x300>
   176b0:	mov	r1, r4
   176b4:	add	r1, r1, #1
   176b8:	cmp	r5, r1
   176bc:	bls	176f8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x308>
   176c0:	ldrb	r2, [r3, #1]!
   176c4:	cmp	r2, #59	; 0x3b
   176c8:	bne	176b4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x2c4>
   176cc:	cmp	sl, #0
   176d0:	strne	r0, [sl]
   176d4:	cmp	fp, #0
   176d8:	subne	r3, r1, r4
   176dc:	strne	r3, [fp]
   176e0:	ldr	r2, [sp, #4]
   176e4:	sub	r1, r1, r4
   176e8:	bl	10cd0 <myencoding_by_name@plt>
   176ec:	b	17740 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x350>
   176f0:	mov	r1, r4
   176f4:	b	176cc <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x2dc>
   176f8:	cmp	sl, #0
   176fc:	strne	r0, [sl]
   17700:	cmp	fp, #0
   17704:	subne	r3, r1, r4
   17708:	strne	r3, [fp]
   1770c:	ldr	r2, [sp, #4]
   17710:	sub	r1, r1, r4
   17714:	bl	10cd0 <myencoding_by_name@plt>
   17718:	b	17740 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x350>
   1771c:	mov	r0, #0
   17720:	b	17740 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x350>
   17724:	mov	r0, #0
   17728:	b	17740 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x350>
   1772c:	mov	r0, #0
   17730:	b	17740 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x350>
   17734:	mov	r0, #0
   17738:	b	17740 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x350>
   1773c:	mov	r0, #0
   17740:	add	sp, sp, #12
   17744:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17748:	andeq	r2, r2, r8, lsr #25
   1774c:	addeq	r0, r0, fp, lsl r0

00017750 <myencoding_extracting_character_encoding_from_charset@@Base>:
   17750:	push	{lr}		; (str lr, [sp, #-4]!)
   17754:	sub	sp, sp, #12
   17758:	mov	r3, #0
   1775c:	str	r3, [sp]
   17760:	bl	10838 <myencoding_extracting_character_encoding_from_charset_with_found@plt>
   17764:	add	sp, sp, #12
   17768:	pop	{pc}		; (ldr pc, [sp], #4)

0001776c <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base>:
   1776c:	push	{r4, r5, r6, lr}
   17770:	ldr	ip, [r1]
   17774:	ldr	lr, [r3]
   17778:	sub	lr, ip, lr
   1777c:	str	lr, [r3, #4]
   17780:	cmp	ip, r2
   17784:	bcs	17834 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0xc8>
   17788:	add	r4, r0, ip
   1778c:	ldrb	r5, [r0, ip]
   17790:	sub	r3, r5, #9
   17794:	uxtb	lr, r3
   17798:	cmp	lr, #23
   1779c:	ldrls	r3, [pc, #156]	; 17840 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0xd4>
   177a0:	lsrls	r3, r3, lr
   177a4:	eorls	r3, r3, #1
   177a8:	andls	r3, r3, #1
   177ac:	movhi	r3, #1
   177b0:	cmp	r5, #47	; 0x2f
   177b4:	moveq	r3, #0
   177b8:	andne	r3, r3, #1
   177bc:	cmp	r3, #0
   177c0:	bne	1780c <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0xa0>
   177c4:	mov	r6, #1
   177c8:	ldr	r5, [pc, #112]	; 17840 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0xd4>
   177cc:	add	ip, ip, #1
   177d0:	cmp	r2, ip
   177d4:	beq	17834 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0xc8>
   177d8:	ldrb	lr, [r4, #1]!
   177dc:	sub	r3, lr, #9
   177e0:	uxtb	r3, r3
   177e4:	cmp	r3, #23
   177e8:	lsrls	r3, r5, r3
   177ec:	eorls	r3, r3, #1
   177f0:	andls	r3, r3, #1
   177f4:	movhi	r3, r6
   177f8:	cmp	lr, #47	; 0x2f
   177fc:	moveq	r3, #0
   17800:	andne	r3, r3, #1
   17804:	cmp	r3, #0
   17808:	beq	177cc <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0x60>
   1780c:	ldrb	r3, [r0, ip]
   17810:	cmp	r3, #61	; 0x3d
   17814:	beq	17824 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0xb8>
   17818:	str	ip, [r1]
   1781c:	mov	r0, #0
   17820:	pop	{r4, r5, r6, pc}
   17824:	add	ip, ip, #1
   17828:	str	ip, [r1]
   1782c:	mov	r0, #1
   17830:	pop	{r4, r5, r6, pc}
   17834:	str	ip, [r1]
   17838:	mov	r0, #0
   1783c:	pop	{r4, r5, r6, pc}
   17840:	addeq	r0, r0, fp, lsl r0

00017844 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base>:
   17844:	push	{r4, r5, r6, lr}
   17848:	cmp	r1, r2
   1784c:	bcs	17a40 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x1fc>
   17850:	add	lr, r0, r1
   17854:	ldrb	ip, [r0, r1]
   17858:	sub	ip, ip, #9
   1785c:	uxtb	ip, ip
   17860:	cmp	ip, #23
   17864:	bhi	178a8 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x64>
   17868:	ldr	r4, [pc, #484]	; 17a54 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x210>
   1786c:	lsr	ip, r4, ip
   17870:	tst	ip, #1
   17874:	bne	17888 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x44>
   17878:	b	178a8 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x64>
   1787c:	lsr	ip, r4, ip
   17880:	tst	ip, #1
   17884:	beq	178a8 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x64>
   17888:	add	r1, r1, #1
   1788c:	cmp	r2, r1
   17890:	beq	17a40 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x1fc>
   17894:	ldrb	ip, [lr, #1]!
   17898:	sub	ip, ip, #9
   1789c:	uxtb	ip, ip
   178a0:	cmp	ip, #23
   178a4:	bls	1787c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x38>
   178a8:	add	lr, r0, r1
   178ac:	ldrb	ip, [r0, r1]
   178b0:	cmp	ip, #39	; 0x27
   178b4:	beq	179b4 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x170>
   178b8:	cmp	ip, #62	; 0x3e
   178bc:	beq	17a08 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x1c4>
   178c0:	cmp	ip, #34	; 0x22
   178c4:	beq	17960 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x11c>
   178c8:	str	r1, [r3, #8]
   178cc:	ldrb	r4, [lr]
   178d0:	sub	r0, r4, #9
   178d4:	uxtb	ip, r0
   178d8:	cmp	ip, #23
   178dc:	ldrls	r0, [pc, #368]	; 17a54 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x210>
   178e0:	lsrls	r0, r0, ip
   178e4:	eorls	r0, r0, #1
   178e8:	andls	r0, r0, #1
   178ec:	movhi	r0, #1
   178f0:	eor	r0, r0, #1
   178f4:	cmp	r4, #62	; 0x3e
   178f8:	orreq	r0, r0, #1
   178fc:	cmp	r0, #0
   17900:	moveq	r0, r1
   17904:	moveq	r5, #1
   17908:	ldreq	r4, [pc, #324]	; 17a54 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x210>
   1790c:	bne	17a1c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x1d8>
   17910:	add	r0, r0, #1
   17914:	cmp	r2, r0
   17918:	bls	17a28 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x1e4>
   1791c:	ldrb	r6, [lr, #1]!
   17920:	sub	ip, r6, #9
   17924:	uxtb	ip, ip
   17928:	cmp	ip, #23
   1792c:	lsrls	ip, r4, ip
   17930:	eorls	ip, ip, #1
   17934:	andls	ip, ip, #1
   17938:	movhi	ip, r5
   1793c:	eor	ip, ip, #1
   17940:	cmp	r6, #62	; 0x3e
   17944:	orreq	ip, ip, #1
   17948:	tst	ip, #255	; 0xff
   1794c:	beq	17910 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xcc>
   17950:	sub	r1, r0, r1
   17954:	str	r1, [r3, #12]
   17958:	add	r0, r0, #1
   1795c:	pop	{r4, r5, r6, pc}
   17960:	add	r1, r1, #1
   17964:	str	r1, [r3, #8]
   17968:	cmp	r2, r1
   1796c:	bls	17a24 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x1e0>
   17970:	add	ip, r0, r1
   17974:	ldrb	r0, [r0, r1]
   17978:	cmp	r0, #34	; 0x22
   1797c:	movne	r0, r1
   17980:	beq	179ac <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x168>
   17984:	add	r0, r0, #1
   17988:	cmp	r2, r0
   1798c:	bls	17a28 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x1e4>
   17990:	ldrb	lr, [ip, #1]!
   17994:	cmp	lr, #34	; 0x22
   17998:	bne	17984 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x140>
   1799c:	sub	r1, r0, r1
   179a0:	str	r1, [r3, #12]
   179a4:	add	r0, r0, #1
   179a8:	pop	{r4, r5, r6, pc}
   179ac:	mov	r0, r1
   179b0:	b	1799c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x158>
   179b4:	add	r1, r1, #1
   179b8:	str	r1, [r3, #8]
   179bc:	cmp	r2, r1
   179c0:	bls	17a38 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x1f4>
   179c4:	add	ip, r0, r1
   179c8:	ldrb	r0, [r0, r1]
   179cc:	cmp	r0, #39	; 0x27
   179d0:	movne	r0, r1
   179d4:	beq	17a00 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x1bc>
   179d8:	add	r0, r0, #1
   179dc:	cmp	r2, r0
   179e0:	bls	17a28 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x1e4>
   179e4:	ldrb	lr, [ip, #1]!
   179e8:	cmp	lr, #39	; 0x27
   179ec:	bne	179d8 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x194>
   179f0:	sub	r1, r0, r1
   179f4:	str	r1, [r3, #12]
   179f8:	add	r0, r0, #1
   179fc:	pop	{r4, r5, r6, pc}
   17a00:	mov	r0, r1
   17a04:	b	179f0 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x1ac>
   17a08:	mov	r3, #1
   17a0c:	ldr	r2, [sp, #16]
   17a10:	strb	r3, [r2]
   17a14:	add	r0, r1, r3
   17a18:	pop	{r4, r5, r6, pc}
   17a1c:	mov	r0, r1
   17a20:	b	17950 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x10c>
   17a24:	mov	r0, r1
   17a28:	ldr	r2, [r3, #8]
   17a2c:	sub	r2, r0, r2
   17a30:	str	r2, [r3, #12]
   17a34:	pop	{r4, r5, r6, pc}
   17a38:	mov	r0, r1
   17a3c:	b	17a28 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x1e4>
   17a40:	mov	r3, #1
   17a44:	ldr	r2, [sp, #16]
   17a48:	strb	r3, [r2]
   17a4c:	mov	r0, r1
   17a50:	pop	{r4, r5, r6, pc}
   17a54:	addeq	r0, r0, fp, lsl r0

00017a58 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base>:
   17a58:	push	{r4, r5, r6, r7, r8, lr}
   17a5c:	sub	sp, sp, #16
   17a60:	mov	r6, r0
   17a64:	str	r1, [sp, #12]
   17a68:	mov	r5, r3
   17a6c:	ldr	r7, [sp, #40]	; 0x28
   17a70:	mov	r3, #0
   17a74:	str	r3, [r5]
   17a78:	str	r3, [r5, #4]
   17a7c:	str	r3, [r5, #8]
   17a80:	str	r3, [r5, #12]
   17a84:	str	r3, [r5, #16]
   17a88:	mov	r0, r1
   17a8c:	cmp	r2, r1
   17a90:	bls	17d38 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2e0>
   17a94:	mov	r4, r2
   17a98:	add	r2, r6, r1
   17a9c:	ldrb	ip, [r6, r1]
   17aa0:	sub	r3, ip, #9
   17aa4:	uxtb	r1, r3
   17aa8:	cmp	r1, #23
   17aac:	ldrls	r3, [pc, #660]	; 17d48 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   17ab0:	lsrls	r3, r3, r1
   17ab4:	eorls	r3, r3, #1
   17ab8:	andls	r3, r3, #1
   17abc:	movhi	r3, #1
   17ac0:	cmp	ip, #47	; 0x2f
   17ac4:	moveq	r3, #0
   17ac8:	andne	r3, r3, #1
   17acc:	cmp	r3, #0
   17ad0:	bne	17b28 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0xd0>
   17ad4:	add	r0, r0, #1
   17ad8:	mov	ip, #1
   17adc:	ldr	r1, [pc, #612]	; 17d48 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   17ae0:	cmp	r4, r0
   17ae4:	beq	17d38 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2e0>
   17ae8:	ldrb	lr, [r2, #1]!
   17aec:	sub	r3, lr, #9
   17af0:	uxtb	r3, r3
   17af4:	cmp	r3, #23
   17af8:	lsrls	r3, r1, r3
   17afc:	eorls	r3, r3, #1
   17b00:	andls	r3, r3, #1
   17b04:	movhi	r3, ip
   17b08:	add	r8, r0, #1
   17b0c:	cmp	lr, #47	; 0x2f
   17b10:	moveq	r3, #0
   17b14:	andne	r3, r3, #1
   17b18:	cmp	r3, #0
   17b1c:	moveq	r0, r8
   17b20:	beq	17ae0 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x88>
   17b24:	str	r0, [sp, #12]
   17b28:	ldrb	r3, [r6, r0]
   17b2c:	cmp	r3, #62	; 0x3e
   17b30:	beq	17c34 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x1dc>
   17b34:	str	r0, [r5]
   17b38:	ldr	r3, [sp, #12]
   17b3c:	cmp	r4, r3
   17b40:	bls	17cf4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x29c>
   17b44:	add	r1, r6, r3
   17b48:	ldrb	r2, [r1], #1
   17b4c:	sub	r2, r2, #9
   17b50:	cmp	r2, #53	; 0x35
   17b54:	addls	pc, pc, r2, lsl #2
   17b58:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17b5c:	b	17c50 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x1f8>
   17b60:	b	17c50 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x1f8>
   17b64:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17b68:	b	17c50 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x1f8>
   17b6c:	b	17c50 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x1f8>
   17b70:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17b74:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17b78:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17b7c:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17b80:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17b84:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17b88:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17b8c:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17b90:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17b94:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17b98:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17b9c:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17ba0:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17ba4:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17ba8:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17bac:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17bb0:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17bb4:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17bb8:	b	17c50 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x1f8>
   17bbc:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17bc0:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17bc4:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17bc8:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17bcc:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17bd0:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17bd4:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17bd8:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17bdc:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17be0:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17be4:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17be8:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17bec:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17bf0:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17bf4:	b	17cc8 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x270>
   17bf8:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17bfc:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17c00:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17c04:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17c08:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17c0c:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17c10:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17c14:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17c18:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17c1c:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17c20:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17c24:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17c28:	b	17ce4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x28c>
   17c2c:	b	17c44 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x1ec>
   17c30:	b	17cc8 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x270>
   17c34:	mov	r3, #1
   17c38:	strb	r3, [r7]
   17c3c:	add	r0, r0, r3
   17c40:	b	17d40 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2e8>
   17c44:	sub	r2, r3, #1
   17c48:	cmp	r2, r0
   17c4c:	bne	17c84 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x22c>
   17c50:	add	r3, r3, #1
   17c54:	add	r1, sp, #16
   17c58:	str	r3, [r1, #-4]!
   17c5c:	mov	r3, r5
   17c60:	mov	r2, r4
   17c64:	mov	r0, r6
   17c68:	bl	104cc <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@plt>
   17c6c:	cmp	r0, #0
   17c70:	bne	17cac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x254>
   17c74:	mov	r3, #1
   17c78:	strb	r3, [r7]
   17c7c:	ldr	r0, [sp, #12]
   17c80:	b	17d40 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2e8>
   17c84:	sub	r0, r3, r0
   17c88:	str	r0, [r5, #4]
   17c8c:	add	r1, r3, #1
   17c90:	str	r1, [sp, #12]
   17c94:	str	r7, [sp]
   17c98:	mov	r3, r5
   17c9c:	mov	r2, r4
   17ca0:	mov	r0, r6
   17ca4:	bl	fe48 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@plt>
   17ca8:	b	17d40 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2e8>
   17cac:	str	r7, [sp]
   17cb0:	mov	r3, r5
   17cb4:	mov	r2, r4
   17cb8:	ldr	r1, [sp, #12]
   17cbc:	mov	r0, r6
   17cc0:	bl	fe48 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@plt>
   17cc4:	b	17d40 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2e8>
   17cc8:	mov	r2, #1
   17ccc:	strb	r2, [r7]
   17cd0:	ldr	r2, [r5]
   17cd4:	sub	r2, r3, r2
   17cd8:	str	r2, [r5, #4]
   17cdc:	add	r0, r3, #1
   17ce0:	b	17d40 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2e8>
   17ce4:	add	r3, r3, #1
   17ce8:	cmp	r4, r3
   17cec:	bne	17b48 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0xf0>
   17cf0:	str	r3, [sp, #12]
   17cf4:	mov	r3, r5
   17cf8:	mov	r2, r4
   17cfc:	add	r1, sp, #12
   17d00:	mov	r0, r6
   17d04:	bl	104cc <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@plt>
   17d08:	cmp	r0, #0
   17d0c:	moveq	r3, #1
   17d10:	strbeq	r3, [r7]
   17d14:	ldreq	r0, [sp, #12]
   17d18:	beq	17d40 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2e8>
   17d1c:	str	r7, [sp]
   17d20:	mov	r3, r5
   17d24:	mov	r2, r4
   17d28:	ldr	r1, [sp, #12]
   17d2c:	mov	r0, r6
   17d30:	bl	fe48 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@plt>
   17d34:	b	17d40 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2e8>
   17d38:	mov	r3, #1
   17d3c:	strb	r3, [r7]
   17d40:	add	sp, sp, #16
   17d44:	pop	{r4, r5, r6, r7, r8, pc}
   17d48:	addeq	r0, r0, fp, lsl r0

00017d4c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base>:
   17d4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17d50:	sub	sp, sp, #60	; 0x3c
   17d54:	mov	r6, r0
   17d58:	mov	r5, r1
   17d5c:	mov	r4, r2
   17d60:	mov	fp, r3
   17d64:	mov	r3, #0
   17d68:	strb	r3, [sp, #35]	; 0x23
   17d6c:	mov	r9, r3
   17d70:	mov	sl, r3
   17d74:	str	r3, [sp, #24]
   17d78:	add	r8, sp, #36	; 0x24
   17d7c:	add	r7, sp, #35	; 0x23
   17d80:	ldr	r3, [pc, #500]	; 17f7c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x230>
   17d84:	add	r3, pc, r3
   17d88:	str	r3, [sp, #16]
   17d8c:	ldr	r3, [pc, #492]	; 17f80 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x234>
   17d90:	add	r3, pc, r3
   17d94:	str	r3, [sp, #20]
   17d98:	ldr	r3, [pc, #484]	; 17f84 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x238>
   17d9c:	add	r3, pc, r3
   17da0:	str	r3, [sp, #12]
   17da4:	ldr	r3, [pc, #476]	; 17f88 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x23c>
   17da8:	add	r3, pc, r3
   17dac:	str	r3, [sp, #28]
   17db0:	b	17e88 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x13c>
   17db4:	ldr	r1, [sp, #36]	; 0x24
   17db8:	add	r1, r6, r1
   17dbc:	ldr	r0, [sp, #12]
   17dc0:	bl	fcd4 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   17dc4:	cmp	r0, #0
   17dc8:	beq	17eb8 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x16c>
   17dcc:	tst	r9, #1
   17dd0:	bne	17e7c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x130>
   17dd4:	orr	r9, r9, #1
   17dd8:	ldr	r3, [sp, #48]	; 0x30
   17ddc:	cmp	r3, #12
   17de0:	bne	17e7c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x130>
   17de4:	ldr	r1, [sp, #44]	; 0x2c
   17de8:	add	r1, r6, r1
   17dec:	ldr	r0, [sp, #28]
   17df0:	bl	fcd4 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   17df4:	ldr	r3, [sp, #24]
   17df8:	cmp	r0, #0
   17dfc:	movne	r3, r0
   17e00:	str	r3, [sp, #24]
   17e04:	b	17e7c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x130>
   17e08:	ldr	r3, [sp, #40]	; 0x28
   17e0c:	cmp	r3, #7
   17e10:	bne	17e7c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x130>
   17e14:	ldr	r1, [sp, #36]	; 0x24
   17e18:	add	r1, r6, r1
   17e1c:	ldr	r0, [sp, #20]
   17e20:	bl	fcd4 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   17e24:	cmp	r0, #0
   17e28:	beq	17e7c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x130>
   17e2c:	tst	r9, #4
   17e30:	bne	17e7c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x130>
   17e34:	orr	r9, r9, #4
   17e38:	ldr	r3, [sp, #96]	; 0x60
   17e3c:	cmp	r3, #0
   17e40:	ldrne	r3, [sp, #44]	; 0x2c
   17e44:	addne	r3, r6, r3
   17e48:	ldrne	r2, [sp, #96]	; 0x60
   17e4c:	strne	r3, [r2]
   17e50:	ldr	r3, [sp, #100]	; 0x64
   17e54:	cmp	r3, #0
   17e58:	ldrne	r3, [sp, #48]	; 0x30
   17e5c:	ldrne	r2, [sp, #100]	; 0x64
   17e60:	strne	r3, [r2]
   17e64:	mov	r2, fp
   17e68:	ldr	r1, [sp, #48]	; 0x30
   17e6c:	ldr	r0, [sp, #44]	; 0x2c
   17e70:	add	r0, r6, r0
   17e74:	bl	10cd0 <myencoding_by_name@plt>
   17e78:	mov	sl, #1
   17e7c:	ldrb	r3, [sp, #35]	; 0x23
   17e80:	cmp	r3, #0
   17e84:	bne	17f14 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1c8>
   17e88:	ldr	r1, [r5]
   17e8c:	cmp	r1, r4
   17e90:	bcs	17f14 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1c8>
   17e94:	str	r7, [sp]
   17e98:	mov	r3, r8
   17e9c:	mov	r2, r4
   17ea0:	mov	r0, r6
   17ea4:	bl	10cf4 <myencoding_prescan_stream_to_determine_encoding_get_attr@plt>
   17ea8:	str	r0, [r5]
   17eac:	ldr	r3, [sp, #40]	; 0x28
   17eb0:	cmp	r3, #10
   17eb4:	beq	17db4 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x68>
   17eb8:	ldr	r3, [sp, #40]	; 0x28
   17ebc:	cmp	r3, #7
   17ec0:	bne	17e7c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x130>
   17ec4:	ldr	r1, [sp, #36]	; 0x24
   17ec8:	add	r1, r6, r1
   17ecc:	ldr	r0, [sp, #16]
   17ed0:	bl	fcd4 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   17ed4:	cmp	r0, #0
   17ed8:	beq	17e08 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0xbc>
   17edc:	tst	r9, #2
   17ee0:	bne	17e7c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x130>
   17ee4:	orr	r9, r9, #2
   17ee8:	ldr	r3, [sp, #100]	; 0x64
   17eec:	str	r3, [sp]
   17ef0:	ldr	r3, [sp, #96]	; 0x60
   17ef4:	mov	r2, fp
   17ef8:	ldr	r1, [sp, #48]	; 0x30
   17efc:	ldr	r0, [sp, #44]	; 0x2c
   17f00:	add	r0, r6, r0
   17f04:	bl	10838 <myencoding_extracting_character_encoding_from_charset_with_found@plt>
   17f08:	cmp	r0, #0
   17f0c:	movne	sl, #2
   17f10:	b	17e7c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x130>
   17f14:	cmp	sl, #0
   17f18:	beq	17f68 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x21c>
   17f1c:	ldr	r3, [sp, #24]
   17f20:	eor	r3, r3, #1
   17f24:	cmp	sl, #2
   17f28:	movne	sl, #0
   17f2c:	andeq	sl, r3, #1
   17f30:	cmp	sl, #0
   17f34:	bne	17f68 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x21c>
   17f38:	ldr	r3, [fp]
   17f3c:	sub	r2, r3, #4
   17f40:	cmp	r2, #1
   17f44:	movls	r3, #0
   17f48:	strls	r3, [fp]
   17f4c:	movls	r0, #1
   17f50:	bls	17f74 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x228>
   17f54:	cmp	r3, #6
   17f58:	moveq	r3, #33	; 0x21
   17f5c:	streq	r3, [fp]
   17f60:	mov	r0, #1
   17f64:	b	17f74 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x228>
   17f68:	mov	r3, #2
   17f6c:	str	r3, [fp]
   17f70:	mov	r0, #0
   17f74:	add	sp, sp, #60	; 0x3c
   17f78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17f7c:	andeq	r2, r2, r4, lsl #7
   17f80:	andeq	r2, r2, r4, asr r3
   17f84:	andeq	r2, r2, r0, asr r3
   17f88:	andeq	r2, r2, r0, asr r3

00017f8c <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base>:
   17f8c:	cmp	r1, r2
   17f90:	bcs	18060 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0xd4>
   17f94:	push	{r4, r5, r6, r7, lr}
   17f98:	sub	sp, sp, #36	; 0x24
   17f9c:	mov	r5, r0
   17fa0:	mov	r4, r2
   17fa4:	add	r2, r0, r1
   17fa8:	ldrb	r3, [r0, r1]
   17fac:	sub	r3, r3, #9
   17fb0:	uxtb	r3, r3
   17fb4:	cmp	r3, #23
   17fb8:	bhi	17ffc <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x70>
   17fbc:	ldr	r0, [pc, #164]	; 18068 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0xdc>
   17fc0:	lsr	r3, r0, r3
   17fc4:	tst	r3, #1
   17fc8:	bne	17fdc <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x50>
   17fcc:	b	17ffc <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x70>
   17fd0:	lsr	r3, r0, r3
   17fd4:	tst	r3, #1
   17fd8:	beq	17ffc <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x70>
   17fdc:	add	r1, r1, #1
   17fe0:	cmp	r4, r1
   17fe4:	beq	18054 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0xc8>
   17fe8:	ldrb	r3, [r2, #1]!
   17fec:	sub	r3, r3, #9
   17ff0:	uxtb	r3, r3
   17ff4:	cmp	r3, #23
   17ff8:	bls	17fd0 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x44>
   17ffc:	ldrb	r3, [r5, r1]
   18000:	cmp	r3, #62	; 0x3e
   18004:	beq	1804c <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0xc0>
   18008:	mov	r3, #0
   1800c:	strb	r3, [sp, #11]
   18010:	mov	r0, r1
   18014:	add	r7, sp, #12
   18018:	add	r6, sp, #11
   1801c:	str	r6, [sp]
   18020:	mov	r3, r7
   18024:	mov	r2, r4
   18028:	mov	r1, r0
   1802c:	mov	r0, r5
   18030:	bl	10cf4 <myencoding_prescan_stream_to_determine_encoding_get_attr@plt>
   18034:	ldrb	r3, [sp, #11]
   18038:	cmp	r3, #0
   1803c:	bne	18058 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0xcc>
   18040:	cmp	r4, r0
   18044:	bhi	1801c <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x90>
   18048:	b	18058 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0xcc>
   1804c:	add	r0, r1, #1
   18050:	b	18058 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0xcc>
   18054:	mov	r0, r1
   18058:	add	sp, sp, #36	; 0x24
   1805c:	pop	{r4, r5, r6, r7, pc}
   18060:	mov	r0, r1
   18064:	bx	lr
   18068:	addeq	r0, r0, fp, lsl r0

0001806c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base>:
   1806c:	push	{r4, lr}
   18070:	add	ip, r0, r1
   18074:	ldrb	r3, [r0, r1]
   18078:	cmp	r3, #47	; 0x2f
   1807c:	beq	180a0 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x34>
   18080:	cmp	r3, #33	; 0x21
   18084:	beq	18104 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x98>
   18088:	cmp	r3, #63	; 0x3f
   1808c:	beq	181bc <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x150>
   18090:	bl	10088 <myencoding_prescan_stream_to_determine_encoding_skip_name@plt>
   18094:	mov	r3, r0
   18098:	mov	r0, r3
   1809c:	pop	{r4, pc}
   180a0:	add	r3, r1, #1
   180a4:	cmp	r3, r2
   180a8:	bcs	18098 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x2c>
   180ac:	add	r1, r0, r3
   180b0:	ldrb	lr, [r0, r3]
   180b4:	ldr	ip, [pc, #316]	; 181f8 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x18c>
   180b8:	add	ip, pc, ip
   180bc:	add	ip, ip, lr
   180c0:	ldrb	ip, [ip, #-424]	; 0xfffffe58
   180c4:	cmp	ip, #1
   180c8:	beq	180f4 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x88>
   180cc:	cmp	lr, #62	; 0x3e
   180d0:	bne	180ec <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x80>
   180d4:	add	r3, r3, #1
   180d8:	cmp	r2, r3
   180dc:	bls	18098 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x2c>
   180e0:	ldrb	r0, [r1, #1]!
   180e4:	cmp	r0, #62	; 0x3e
   180e8:	beq	180d4 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x68>
   180ec:	add	r3, r3, #1
   180f0:	b	18098 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x2c>
   180f4:	mov	r1, r3
   180f8:	bl	10088 <myencoding_prescan_stream_to_determine_encoding_skip_name@plt>
   180fc:	mov	r3, r0
   18100:	b	18098 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x2c>
   18104:	add	r3, r1, #1
   18108:	add	lr, r1, #3
   1810c:	cmp	r2, lr
   18110:	bhi	1814c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xe0>
   18114:	cmp	r2, r3
   18118:	bls	18098 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x2c>
   1811c:	add	r1, r0, r3
   18120:	ldrb	r0, [r0, r3]
   18124:	cmp	r0, #62	; 0x3e
   18128:	bne	18144 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xd8>
   1812c:	add	r3, r3, #1
   18130:	cmp	r2, r3
   18134:	bls	18098 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x2c>
   18138:	ldrb	r0, [r1, #1]!
   1813c:	cmp	r0, #62	; 0x3e
   18140:	beq	1812c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xc0>
   18144:	add	r3, r3, #1
   18148:	b	18098 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x2c>
   1814c:	ldrb	lr, [r0, r3]
   18150:	cmp	lr, #45	; 0x2d
   18154:	bne	18114 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xa8>
   18158:	add	r1, r0, r1
   1815c:	ldrb	r1, [r1, #2]
   18160:	cmp	r1, #45	; 0x2d
   18164:	beq	18174 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x108>
   18168:	cmp	r2, r3
   1816c:	bls	18098 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x2c>
   18170:	b	18144 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xd8>
   18174:	cmp	r2, r3
   18178:	bhi	18190 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x124>
   1817c:	b	18098 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x2c>
   18180:	add	r3, r3, #1
   18184:	add	ip, ip, #1
   18188:	cmp	r2, r3
   1818c:	bls	18098 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x2c>
   18190:	ldrb	r1, [ip, #1]
   18194:	cmp	r1, #62	; 0x3e
   18198:	beq	18180 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x114>
   1819c:	ldrb	r1, [ip]
   181a0:	cmp	r1, #45	; 0x2d
   181a4:	bne	18180 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x114>
   181a8:	ldrb	r1, [ip, #-1]
   181ac:	cmp	r1, #45	; 0x2d
   181b0:	bne	18180 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x114>
   181b4:	add	r3, r3, #1
   181b8:	b	18098 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x2c>
   181bc:	add	r3, r1, #1
   181c0:	cmp	r2, r3
   181c4:	bls	18098 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x2c>
   181c8:	add	r1, r0, r3
   181cc:	ldrb	r0, [r0, r3]
   181d0:	cmp	r0, #62	; 0x3e
   181d4:	bne	181f0 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x184>
   181d8:	add	r3, r3, #1
   181dc:	cmp	r2, r3
   181e0:	bls	18098 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x2c>
   181e4:	ldrb	r0, [r1, #1]!
   181e8:	cmp	r0, #62	; 0x3e
   181ec:	beq	181d8 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x16c>
   181f0:	add	r3, r3, #1
   181f4:	b	18098 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x2c>
   181f8:	ldrdeq	r2, [r2], -r4

000181fc <myencoding_prescan_stream_to_determine_encoding_with_found@@Base>:
   181fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18200:	sub	sp, sp, #20
   18204:	mov	r4, r0
   18208:	mov	r5, r1
   1820c:	mov	r7, r3
   18210:	mov	r3, #2
   18214:	str	r3, [sp, #12]
   18218:	subs	r8, r2, #0
   1821c:	movne	r3, #0
   18220:	strne	r3, [r8]
   18224:	cmp	r7, #0
   18228:	movne	r3, #0
   1822c:	strne	r3, [r7]
   18230:	mov	r3, #0
   18234:	str	r3, [sp, #8]
   18238:	ldr	r6, [pc, #268]	; 1834c <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x150>
   1823c:	add	r6, pc, r6
   18240:	add	fp, sp, #12
   18244:	add	sl, sp, #8
   18248:	ldr	r9, [pc, #256]	; 18350 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x154>
   1824c:	b	182ac <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0xb0>
   18250:	ldr	r0, [sp, #12]
   18254:	b	18344 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x148>
   18258:	mov	r1, r2
   1825c:	mov	r0, r6
   18260:	bl	fcd4 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   18264:	cmp	r0, #0
   18268:	beq	182ac <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0xb0>
   1826c:	ldr	r2, [sp, #8]
   18270:	add	r3, r2, #4
   18274:	str	r3, [sp, #8]
   18278:	ldrb	r1, [r4, r3]
   1827c:	sub	r3, r1, #9
   18280:	uxtb	r3, r3
   18284:	cmp	r3, #23
   18288:	lsrls	r3, r9, r3
   1828c:	eorls	r3, r3, #1
   18290:	andls	r0, r3, #1
   18294:	eor	r0, r0, #1
   18298:	cmp	r1, #47	; 0x2f
   1829c:	movne	r1, r0
   182a0:	orreq	r1, r0, #1
   182a4:	tst	r1, #255	; 0xff
   182a8:	bne	1830c <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x110>
   182ac:	ldr	r1, [sp, #8]
   182b0:	cmp	r1, r5
   182b4:	bcs	18340 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x144>
   182b8:	ldrb	r3, [r4, r1]
   182bc:	cmp	r3, #60	; 0x3c
   182c0:	addne	r1, r1, #1
   182c4:	strne	r1, [sp, #8]
   182c8:	bne	182ac <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0xb0>
   182cc:	add	r3, r1, #5
   182d0:	cmp	r5, r3
   182d4:	bls	18250 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x54>
   182d8:	add	r1, r1, #1
   182dc:	str	r1, [sp, #8]
   182e0:	add	r2, r4, r1
   182e4:	ldrb	r3, [r4, r1]
   182e8:	cmp	r3, #77	; 0x4d
   182ec:	beq	18258 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x5c>
   182f0:	cmp	r3, #109	; 0x6d
   182f4:	beq	18258 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x5c>
   182f8:	mov	r2, r5
   182fc:	mov	r0, r4
   18300:	bl	1034c <myencoding_prescan_stream_to_determine_encoding_skip_other@plt>
   18304:	str	r0, [sp, #8]
   18308:	b	182ac <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0xb0>
   1830c:	add	r2, r2, #5
   18310:	str	r2, [sp, #8]
   18314:	str	r7, [sp, #4]
   18318:	str	r8, [sp]
   1831c:	mov	r3, fp
   18320:	mov	r2, r5
   18324:	mov	r1, sl
   18328:	mov	r0, r4
   1832c:	bl	103e8 <myencoding_prescan_stream_to_determine_encoding_check_meta@plt>
   18330:	cmp	r0, #0
   18334:	beq	182ac <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0xb0>
   18338:	ldr	r0, [sp, #12]
   1833c:	b	18344 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x148>
   18340:	ldr	r0, [sp, #12]
   18344:	add	sp, sp, #20
   18348:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1834c:	ldrdeq	r1, [r2], -r4
   18350:	addeq	r0, r0, fp, lsl r0

00018354 <myencoding_prescan_stream_to_determine_encoding@@Base>:
   18354:	push	{r4, lr}
   18358:	mov	r3, #0
   1835c:	mov	r2, r3
   18360:	bl	10b8c <myencoding_prescan_stream_to_determine_encoding_with_found@plt>
   18364:	pop	{r4, pc}

00018368 <myencoding_decode_utf_8@@Base>:
   18368:	ldr	r3, [r1, #20]
   1836c:	cmp	r3, #0
   18370:	bne	18448 <myencoding_decode_utf_8@@Base+0xe0>
   18374:	tst	r0, #128	; 0x80
   18378:	bne	18388 <myencoding_decode_utf_8@@Base+0x20>
   1837c:	str	r0, [r1, #12]
   18380:	mov	r0, #0
   18384:	bx	lr
   18388:	add	r3, r0, #62	; 0x3e
   1838c:	uxtb	r3, r3
   18390:	cmp	r3, #29
   18394:	bhi	183c8 <myencoding_decode_utf_8@@Base+0x60>
   18398:	mov	r3, #1
   1839c:	str	r3, [r1, #20]
   183a0:	sub	r0, r0, #192	; 0xc0
   183a4:	str	r0, [r1, #12]
   183a8:	ldr	r3, [r1, #20]
   183ac:	add	r3, r3, r3, lsl #1
   183b0:	lsl	r3, r3, #1
   183b4:	ldr	r2, [r1, #12]
   183b8:	lsl	r3, r2, r3
   183bc:	str	r3, [r1, #12]
   183c0:	mov	r0, #2
   183c4:	bx	lr
   183c8:	add	r3, r0, #32
   183cc:	uxtb	r3, r3
   183d0:	cmp	r3, #15
   183d4:	bhi	18408 <myencoding_decode_utf_8@@Base+0xa0>
   183d8:	cmp	r0, #224	; 0xe0
   183dc:	moveq	r3, #160	; 0xa0
   183e0:	streq	r3, [r1]
   183e4:	beq	183f4 <myencoding_decode_utf_8@@Base+0x8c>
   183e8:	cmp	r0, #237	; 0xed
   183ec:	moveq	r3, #159	; 0x9f
   183f0:	streq	r3, [r1, #4]
   183f4:	mov	r3, #2
   183f8:	str	r3, [r1, #20]
   183fc:	sub	r0, r0, #224	; 0xe0
   18400:	str	r0, [r1, #12]
   18404:	b	183a8 <myencoding_decode_utf_8@@Base+0x40>
   18408:	add	r3, r0, #16
   1840c:	uxtb	r3, r3
   18410:	cmp	r3, #4
   18414:	bhi	184e4 <myencoding_decode_utf_8@@Base+0x17c>
   18418:	cmp	r0, #240	; 0xf0
   1841c:	moveq	r3, #144	; 0x90
   18420:	streq	r3, [r1]
   18424:	beq	18434 <myencoding_decode_utf_8@@Base+0xcc>
   18428:	cmp	r0, #244	; 0xf4
   1842c:	moveq	r3, #143	; 0x8f
   18430:	streq	r3, [r1, #4]
   18434:	mov	r3, #2
   18438:	str	r3, [r1, #20]
   1843c:	sub	r0, r0, #240	; 0xf0
   18440:	str	r0, [r1, #12]
   18444:	b	183a8 <myencoding_decode_utf_8@@Base+0x40>
   18448:	ldr	r2, [r1]
   1844c:	cmp	r0, r2
   18450:	bcs	18488 <myencoding_decode_utf_8@@Base+0x120>
   18454:	ldr	r2, [r1, #4]
   18458:	cmp	r0, r2
   1845c:	bls	18488 <myencoding_decode_utf_8@@Base+0x120>
   18460:	mov	r3, #0
   18464:	str	r3, [r1, #12]
   18468:	str	r3, [r1, #20]
   1846c:	str	r3, [r1, #8]
   18470:	mov	r3, #128	; 0x80
   18474:	str	r3, [r1]
   18478:	mov	r3, #191	; 0xbf
   1847c:	str	r3, [r1, #4]
   18480:	mov	r0, #5
   18484:	bx	lr
   18488:	push	{lr}		; (str lr, [sp, #-4]!)
   1848c:	mov	r2, #128	; 0x80
   18490:	str	r2, [r1]
   18494:	mov	r2, #191	; 0xbf
   18498:	str	r2, [r1, #4]
   1849c:	ldr	ip, [r1, #8]
   184a0:	add	ip, ip, #1
   184a4:	str	ip, [r1, #8]
   184a8:	sub	r0, r0, #128	; 0x80
   184ac:	sub	r2, r3, ip
   184b0:	add	r2, r2, r2, lsl #1
   184b4:	lsl	r2, r2, #1
   184b8:	ldr	lr, [r1, #12]
   184bc:	add	r0, lr, r0, lsl r2
   184c0:	str	r0, [r1, #12]
   184c4:	cmp	r3, ip
   184c8:	beq	184d4 <myencoding_decode_utf_8@@Base+0x16c>
   184cc:	mov	r0, #2
   184d0:	pop	{pc}		; (ldr pc, [sp], #4)
   184d4:	mov	r0, #0
   184d8:	str	r0, [r1, #20]
   184dc:	str	r0, [r1, #8]
   184e0:	pop	{pc}		; (ldr pc, [sp], #4)
   184e4:	mov	r0, #1
   184e8:	bx	lr

000184ec <myencoding_decode_ibm866@@Base>:
   184ec:	tst	r0, #128	; 0x80
   184f0:	streq	r0, [r1, #12]
   184f4:	bne	18500 <myencoding_decode_ibm866@@Base+0x14>
   184f8:	mov	r0, #0
   184fc:	bx	lr
   18500:	sub	r0, r0, #128	; 0x80
   18504:	ldr	r3, [pc, #12]	; 18518 <myencoding_decode_ibm866@@Base+0x2c>
   18508:	add	r3, pc, r3
   1850c:	ldr	r3, [r3, r0, lsl #2]
   18510:	str	r3, [r1, #12]
   18514:	b	184f8 <myencoding_decode_ibm866@@Base+0xc>
   18518:	andeq	r2, r2, ip, ror #14

0001851c <myencoding_decode_iso_8859_2@@Base>:
   1851c:	tst	r0, #128	; 0x80
   18520:	streq	r0, [r1, #12]
   18524:	bne	18530 <myencoding_decode_iso_8859_2@@Base+0x14>
   18528:	mov	r0, #0
   1852c:	bx	lr
   18530:	ldr	r3, [pc, #12]	; 18544 <myencoding_decode_iso_8859_2@@Base+0x28>
   18534:	add	r3, pc, r3
   18538:	ldr	r3, [r3, r0, lsl #2]
   1853c:	str	r3, [r1, #12]
   18540:	b	18528 <myencoding_decode_iso_8859_2@@Base+0xc>
   18544:	andeq	r2, r2, r0, asr #14

00018548 <myencoding_decode_iso_8859_3@@Base>:
   18548:	tst	r0, #128	; 0x80
   1854c:	streq	r0, [r1, #12]
   18550:	bne	1855c <myencoding_decode_iso_8859_3@@Base+0x14>
   18554:	mov	r0, #0
   18558:	bx	lr
   1855c:	ldr	r3, [pc, #16]	; 18574 <myencoding_decode_iso_8859_3@@Base+0x2c>
   18560:	add	r3, pc, r3
   18564:	add	r0, r3, r0, lsl #2
   18568:	ldr	r3, [r0, #512]	; 0x200
   1856c:	str	r3, [r1, #12]
   18570:	b	18554 <myencoding_decode_iso_8859_3@@Base+0xc>
   18574:	andeq	r2, r2, r4, lsl r7

00018578 <myencoding_decode_iso_8859_4@@Base>:
   18578:	tst	r0, #128	; 0x80
   1857c:	streq	r0, [r1, #12]
   18580:	bne	1858c <myencoding_decode_iso_8859_4@@Base+0x14>
   18584:	mov	r0, #0
   18588:	bx	lr
   1858c:	ldr	r3, [pc, #16]	; 185a4 <myencoding_decode_iso_8859_4@@Base+0x2c>
   18590:	add	r3, pc, r3
   18594:	add	r0, r3, r0, lsl #2
   18598:	ldr	r3, [r0, #1024]	; 0x400
   1859c:	str	r3, [r1, #12]
   185a0:	b	18584 <myencoding_decode_iso_8859_4@@Base+0xc>
   185a4:	andeq	r2, r2, r4, ror #13

000185a8 <myencoding_decode_iso_8859_5@@Base>:
   185a8:	tst	r0, #128	; 0x80
   185ac:	streq	r0, [r1, #12]
   185b0:	bne	185bc <myencoding_decode_iso_8859_5@@Base+0x14>
   185b4:	mov	r0, #0
   185b8:	bx	lr
   185bc:	ldr	r3, [pc, #16]	; 185d4 <myencoding_decode_iso_8859_5@@Base+0x2c>
   185c0:	add	r3, pc, r3
   185c4:	add	r0, r3, r0, lsl #2
   185c8:	ldr	r3, [r0, #1536]	; 0x600
   185cc:	str	r3, [r1, #12]
   185d0:	b	185b4 <myencoding_decode_iso_8859_5@@Base+0xc>
   185d4:			; <UNDEFINED> instruction: 0x000226b4

000185d8 <myencoding_decode_iso_8859_6@@Base>:
   185d8:	tst	r0, #128	; 0x80
   185dc:	streq	r0, [r1, #12]
   185e0:	bne	185ec <myencoding_decode_iso_8859_6@@Base+0x14>
   185e4:	mov	r0, #0
   185e8:	bx	lr
   185ec:	ldr	r3, [pc, #16]	; 18604 <myencoding_decode_iso_8859_6@@Base+0x2c>
   185f0:	add	r3, pc, r3
   185f4:	add	r0, r3, r0, lsl #2
   185f8:	ldr	r3, [r0, #2048]	; 0x800
   185fc:	str	r3, [r1, #12]
   18600:	b	185e4 <myencoding_decode_iso_8859_6@@Base+0xc>
   18604:	andeq	r2, r2, r4, lsl #13

00018608 <myencoding_decode_iso_8859_7@@Base>:
   18608:	tst	r0, #128	; 0x80
   1860c:	streq	r0, [r1, #12]
   18610:	bne	1861c <myencoding_decode_iso_8859_7@@Base+0x14>
   18614:	mov	r0, #0
   18618:	bx	lr
   1861c:	ldr	r3, [pc, #16]	; 18634 <myencoding_decode_iso_8859_7@@Base+0x2c>
   18620:	add	r3, pc, r3
   18624:	add	r0, r3, r0, lsl #2
   18628:	ldr	r3, [r0, #2560]	; 0xa00
   1862c:	str	r3, [r1, #12]
   18630:	b	18614 <myencoding_decode_iso_8859_7@@Base+0xc>
   18634:	andeq	r2, r2, r4, asr r6

00018638 <myencoding_decode_iso_8859_8@@Base>:
   18638:	tst	r0, #128	; 0x80
   1863c:	streq	r0, [r1, #12]
   18640:	bne	1864c <myencoding_decode_iso_8859_8@@Base+0x14>
   18644:	mov	r0, #0
   18648:	bx	lr
   1864c:	ldr	r3, [pc, #16]	; 18664 <myencoding_decode_iso_8859_8@@Base+0x2c>
   18650:	add	r3, pc, r3
   18654:	add	r0, r3, r0, lsl #2
   18658:	ldr	r3, [r0, #3072]	; 0xc00
   1865c:	str	r3, [r1, #12]
   18660:	b	18644 <myencoding_decode_iso_8859_8@@Base+0xc>
   18664:	andeq	r2, r2, r4, lsr #12

00018668 <myencoding_decode_iso_8859_8_i@@Base>:
   18668:	tst	r0, #128	; 0x80
   1866c:	streq	r0, [r1, #12]
   18670:	bne	1867c <myencoding_decode_iso_8859_8_i@@Base+0x14>
   18674:	mov	r0, #0
   18678:	bx	lr
   1867c:	ldr	r3, [pc, #16]	; 18694 <myencoding_decode_iso_8859_8_i@@Base+0x2c>
   18680:	add	r3, pc, r3
   18684:	add	r0, r3, r0, lsl #2
   18688:	ldr	r3, [r0, #3072]	; 0xc00
   1868c:	str	r3, [r1, #12]
   18690:	b	18674 <myencoding_decode_iso_8859_8_i@@Base+0xc>
   18694:	strdeq	r2, [r2], -r4

00018698 <myencoding_decode_iso_8859_10@@Base>:
   18698:	tst	r0, #128	; 0x80
   1869c:	streq	r0, [r1, #12]
   186a0:	bne	186ac <myencoding_decode_iso_8859_10@@Base+0x14>
   186a4:	mov	r0, #0
   186a8:	bx	lr
   186ac:	sub	r0, r0, #128	; 0x80
   186b0:	ldr	r3, [pc, #16]	; 186c8 <myencoding_decode_iso_8859_10@@Base+0x30>
   186b4:	add	r3, pc, r3
   186b8:	add	r0, r3, r0, lsl #2
   186bc:	ldr	r3, [r0, #-4088]	; 0xfffff008
   186c0:	str	r3, [r1, #12]
   186c4:	b	186a4 <myencoding_decode_iso_8859_10@@Base+0xc>
   186c8:			; <UNDEFINED> instruction: 0x000245b8

000186cc <myencoding_decode_iso_8859_13@@Base>:
   186cc:	tst	r0, #128	; 0x80
   186d0:	streq	r0, [r1, #12]
   186d4:	bne	186e0 <myencoding_decode_iso_8859_13@@Base+0x14>
   186d8:	mov	r0, #0
   186dc:	bx	lr
   186e0:	ldr	r3, [pc, #16]	; 186f8 <myencoding_decode_iso_8859_13@@Base+0x2c>
   186e4:	add	r3, pc, r3
   186e8:	add	r0, r3, r0, lsl #2
   186ec:	ldr	r3, [r0, #-4088]	; 0xfffff008
   186f0:	str	r3, [r1, #12]
   186f4:	b	186d8 <myencoding_decode_iso_8859_13@@Base+0xc>
   186f8:	andeq	r4, r2, r8, lsl #11

000186fc <myencoding_decode_iso_8859_14@@Base>:
   186fc:	tst	r0, #128	; 0x80
   18700:	streq	r0, [r1, #12]
   18704:	bne	18710 <myencoding_decode_iso_8859_14@@Base+0x14>
   18708:	mov	r0, #0
   1870c:	bx	lr
   18710:	ldr	r3, [pc, #16]	; 18728 <myencoding_decode_iso_8859_14@@Base+0x2c>
   18714:	add	r3, pc, r3
   18718:	add	r0, r3, r0, lsl #2
   1871c:	ldr	r3, [r0, #-3576]	; 0xfffff208
   18720:	str	r3, [r1, #12]
   18724:	b	18708 <myencoding_decode_iso_8859_14@@Base+0xc>
   18728:	andeq	r4, r2, r8, asr r5

0001872c <myencoding_decode_iso_8859_15@@Base>:
   1872c:	tst	r0, #128	; 0x80
   18730:	streq	r0, [r1, #12]
   18734:	bne	18740 <myencoding_decode_iso_8859_15@@Base+0x14>
   18738:	mov	r0, #0
   1873c:	bx	lr
   18740:	ldr	r3, [pc, #16]	; 18758 <myencoding_decode_iso_8859_15@@Base+0x2c>
   18744:	add	r3, pc, r3
   18748:	add	r0, r3, r0, lsl #2
   1874c:	ldr	r3, [r0, #-3064]	; 0xfffff408
   18750:	str	r3, [r1, #12]
   18754:	b	18738 <myencoding_decode_iso_8859_15@@Base+0xc>
   18758:	andeq	r4, r2, r8, lsr #10

0001875c <myencoding_decode_iso_8859_16@@Base>:
   1875c:	tst	r0, #128	; 0x80
   18760:	streq	r0, [r1, #12]
   18764:	bne	18770 <myencoding_decode_iso_8859_16@@Base+0x14>
   18768:	mov	r0, #0
   1876c:	bx	lr
   18770:	ldr	r3, [pc, #16]	; 18788 <myencoding_decode_iso_8859_16@@Base+0x2c>
   18774:	add	r3, pc, r3
   18778:	add	r0, r3, r0, lsl #2
   1877c:	ldr	r3, [r0, #-2552]	; 0xfffff608
   18780:	str	r3, [r1, #12]
   18784:	b	18768 <myencoding_decode_iso_8859_16@@Base+0xc>
   18788:	strdeq	r4, [r2], -r8

0001878c <myencoding_decode_koi8_r@@Base>:
   1878c:	tst	r0, #128	; 0x80
   18790:	streq	r0, [r1, #12]
   18794:	bne	187a0 <myencoding_decode_koi8_r@@Base+0x14>
   18798:	mov	r0, #0
   1879c:	bx	lr
   187a0:	ldr	r3, [pc, #16]	; 187b8 <myencoding_decode_koi8_r@@Base+0x2c>
   187a4:	add	r3, pc, r3
   187a8:	add	r0, r3, r0, lsl #2
   187ac:	ldr	r3, [r0, #-2040]	; 0xfffff808
   187b0:	str	r3, [r1, #12]
   187b4:	b	18798 <myencoding_decode_koi8_r@@Base+0xc>
   187b8:	andeq	r4, r2, r8, asr #9

000187bc <myencoding_decode_koi8_u@@Base>:
   187bc:	tst	r0, #128	; 0x80
   187c0:	streq	r0, [r1, #12]
   187c4:	bne	187d0 <myencoding_decode_koi8_u@@Base+0x14>
   187c8:	mov	r0, #0
   187cc:	bx	lr
   187d0:	ldr	r3, [pc, #16]	; 187e8 <myencoding_decode_koi8_u@@Base+0x2c>
   187d4:	add	r3, pc, r3
   187d8:	add	r0, r3, r0, lsl #2
   187dc:	ldr	r3, [r0, #-1528]	; 0xfffffa08
   187e0:	str	r3, [r1, #12]
   187e4:	b	187c8 <myencoding_decode_koi8_u@@Base+0xc>
   187e8:	muleq	r2, r8, r4

000187ec <myencoding_decode_macintosh@@Base>:
   187ec:	tst	r0, #128	; 0x80
   187f0:	streq	r0, [r1, #12]
   187f4:	bne	18800 <myencoding_decode_macintosh@@Base+0x14>
   187f8:	mov	r0, #0
   187fc:	bx	lr
   18800:	ldr	r3, [pc, #16]	; 18818 <myencoding_decode_macintosh@@Base+0x2c>
   18804:	add	r3, pc, r3
   18808:	add	r0, r3, r0, lsl #2
   1880c:	ldr	r3, [r0, #-1016]	; 0xfffffc08
   18810:	str	r3, [r1, #12]
   18814:	b	187f8 <myencoding_decode_macintosh@@Base+0xc>
   18818:	andeq	r4, r2, r8, ror #8

0001881c <myencoding_decode_windows_874@@Base>:
   1881c:	tst	r0, #128	; 0x80
   18820:	streq	r0, [r1, #12]
   18824:	bne	18830 <myencoding_decode_windows_874@@Base+0x14>
   18828:	mov	r0, #0
   1882c:	bx	lr
   18830:	ldr	r3, [pc, #16]	; 18848 <myencoding_decode_windows_874@@Base+0x2c>
   18834:	add	r3, pc, r3
   18838:	add	r0, r3, r0, lsl #2
   1883c:	ldr	r3, [r0, #-504]	; 0xfffffe08
   18840:	str	r3, [r1, #12]
   18844:	b	18828 <myencoding_decode_windows_874@@Base+0xc>
   18848:	andeq	r4, r2, r8, lsr r4

0001884c <myencoding_decode_windows_1250@@Base>:
   1884c:	tst	r0, #128	; 0x80
   18850:	streq	r0, [r1, #12]
   18854:	bne	18860 <myencoding_decode_windows_1250@@Base+0x14>
   18858:	mov	r0, #0
   1885c:	bx	lr
   18860:	ldr	r3, [pc, #16]	; 18878 <myencoding_decode_windows_1250@@Base+0x2c>
   18864:	add	r3, pc, r3
   18868:	add	r0, r3, r0, lsl #2
   1886c:	ldr	r3, [r0, #8]
   18870:	str	r3, [r1, #12]
   18874:	b	18858 <myencoding_decode_windows_1250@@Base+0xc>
   18878:	andeq	r4, r2, r8, lsl #8

0001887c <myencoding_decode_windows_1251@@Base>:
   1887c:	tst	r0, #128	; 0x80
   18880:	streq	r0, [r1, #12]
   18884:	bne	18890 <myencoding_decode_windows_1251@@Base+0x14>
   18888:	mov	r0, #0
   1888c:	bx	lr
   18890:	ldr	r3, [pc, #16]	; 188a8 <myencoding_decode_windows_1251@@Base+0x2c>
   18894:	add	r3, pc, r3
   18898:	add	r0, r3, r0, lsl #2
   1889c:	ldr	r3, [r0, #520]	; 0x208
   188a0:	str	r3, [r1, #12]
   188a4:	b	18888 <myencoding_decode_windows_1251@@Base+0xc>
   188a8:	ldrdeq	r4, [r2], -r8

000188ac <myencoding_decode_windows_1252@@Base>:
   188ac:	tst	r0, #128	; 0x80
   188b0:	streq	r0, [r1, #12]
   188b4:	bne	188c0 <myencoding_decode_windows_1252@@Base+0x14>
   188b8:	mov	r0, #0
   188bc:	bx	lr
   188c0:	ldr	r3, [pc, #16]	; 188d8 <myencoding_decode_windows_1252@@Base+0x2c>
   188c4:	add	r3, pc, r3
   188c8:	add	r0, r3, r0, lsl #2
   188cc:	ldr	r3, [r0, #1032]	; 0x408
   188d0:	str	r3, [r1, #12]
   188d4:	b	188b8 <myencoding_decode_windows_1252@@Base+0xc>
   188d8:	andeq	r4, r2, r8, lsr #7

000188dc <myencoding_decode_windows_1253@@Base>:
   188dc:	tst	r0, #128	; 0x80
   188e0:	streq	r0, [r1, #12]
   188e4:	bne	188f0 <myencoding_decode_windows_1253@@Base+0x14>
   188e8:	mov	r0, #0
   188ec:	bx	lr
   188f0:	ldr	r3, [pc, #16]	; 18908 <myencoding_decode_windows_1253@@Base+0x2c>
   188f4:	add	r3, pc, r3
   188f8:	add	r0, r3, r0, lsl #2
   188fc:	ldr	r3, [r0, #1544]	; 0x608
   18900:	str	r3, [r1, #12]
   18904:	b	188e8 <myencoding_decode_windows_1253@@Base+0xc>
   18908:	andeq	r4, r2, r8, ror r3

0001890c <myencoding_decode_windows_1254@@Base>:
   1890c:	tst	r0, #128	; 0x80
   18910:	streq	r0, [r1, #12]
   18914:	bne	18920 <myencoding_decode_windows_1254@@Base+0x14>
   18918:	mov	r0, #0
   1891c:	bx	lr
   18920:	ldr	r3, [pc, #16]	; 18938 <myencoding_decode_windows_1254@@Base+0x2c>
   18924:	add	r3, pc, r3
   18928:	add	r0, r3, r0, lsl #2
   1892c:	ldr	r3, [r0, #2056]	; 0x808
   18930:	str	r3, [r1, #12]
   18934:	b	18918 <myencoding_decode_windows_1254@@Base+0xc>
   18938:	andeq	r4, r2, r8, asr #6

0001893c <myencoding_decode_windows_1255@@Base>:
   1893c:	tst	r0, #128	; 0x80
   18940:	streq	r0, [r1, #12]
   18944:	bne	18950 <myencoding_decode_windows_1255@@Base+0x14>
   18948:	mov	r0, #0
   1894c:	bx	lr
   18950:	ldr	r3, [pc, #16]	; 18968 <myencoding_decode_windows_1255@@Base+0x2c>
   18954:	add	r3, pc, r3
   18958:	add	r0, r3, r0, lsl #2
   1895c:	ldr	r3, [r0, #2568]	; 0xa08
   18960:	str	r3, [r1, #12]
   18964:	b	18948 <myencoding_decode_windows_1255@@Base+0xc>
   18968:	andeq	r4, r2, r8, lsl r3

0001896c <myencoding_decode_windows_1256@@Base>:
   1896c:	tst	r0, #128	; 0x80
   18970:	streq	r0, [r1, #12]
   18974:	bne	18980 <myencoding_decode_windows_1256@@Base+0x14>
   18978:	mov	r0, #0
   1897c:	bx	lr
   18980:	ldr	r3, [pc, #16]	; 18998 <myencoding_decode_windows_1256@@Base+0x2c>
   18984:	add	r3, pc, r3
   18988:	add	r0, r3, r0, lsl #2
   1898c:	ldr	r3, [r0, #3080]	; 0xc08
   18990:	str	r3, [r1, #12]
   18994:	b	18978 <myencoding_decode_windows_1256@@Base+0xc>
   18998:	andeq	r4, r2, r8, ror #5

0001899c <myencoding_decode_windows_1257@@Base>:
   1899c:	tst	r0, #128	; 0x80
   189a0:	streq	r0, [r1, #12]
   189a4:	bne	189b0 <myencoding_decode_windows_1257@@Base+0x14>
   189a8:	mov	r0, #0
   189ac:	bx	lr
   189b0:	sub	r0, r0, #128	; 0x80
   189b4:	ldr	r3, [pc, #16]	; 189cc <myencoding_decode_windows_1257@@Base+0x30>
   189b8:	add	r3, pc, r3
   189bc:	add	r0, r3, r0, lsl #2
   189c0:	ldr	r3, [r0, #-4080]	; 0xfffff010
   189c4:	str	r3, [r1, #12]
   189c8:	b	189a8 <myencoding_decode_windows_1257@@Base+0xc>
   189cc:	andeq	r6, r2, ip, lsr #5

000189d0 <myencoding_decode_windows_1258@@Base>:
   189d0:	tst	r0, #128	; 0x80
   189d4:	streq	r0, [r1, #12]
   189d8:	bne	189e4 <myencoding_decode_windows_1258@@Base+0x14>
   189dc:	mov	r0, #0
   189e0:	bx	lr
   189e4:	ldr	r3, [pc, #16]	; 189fc <myencoding_decode_windows_1258@@Base+0x2c>
   189e8:	add	r3, pc, r3
   189ec:	add	r0, r3, r0, lsl #2
   189f0:	ldr	r3, [r0, #-4080]	; 0xfffff010
   189f4:	str	r3, [r1, #12]
   189f8:	b	189dc <myencoding_decode_windows_1258@@Base+0xc>
   189fc:	andeq	r6, r2, ip, ror r2

00018a00 <myencoding_decode_x_mac_cyrillic@@Base>:
   18a00:	tst	r0, #128	; 0x80
   18a04:	streq	r0, [r1, #12]
   18a08:	bne	18a14 <myencoding_decode_x_mac_cyrillic@@Base+0x14>
   18a0c:	mov	r0, #0
   18a10:	bx	lr
   18a14:	ldr	r3, [pc, #16]	; 18a2c <myencoding_decode_x_mac_cyrillic@@Base+0x2c>
   18a18:	add	r3, pc, r3
   18a1c:	add	r0, r3, r0, lsl #2
   18a20:	ldr	r3, [r0, #-3568]	; 0xfffff210
   18a24:	str	r3, [r1, #12]
   18a28:	b	18a0c <myencoding_decode_x_mac_cyrillic@@Base+0xc>
   18a2c:	andeq	r6, r2, ip, asr #4

00018a30 <myencoding_decode_big5@@Base>:
   18a30:	ldr	r3, [r1]
   18a34:	cmp	r3, #0
   18a38:	beq	18ba8 <myencoding_decode_big5@@Base+0x178>
   18a3c:	push	{lr}		; (str lr, [sp, #-4]!)
   18a40:	mov	r2, #0
   18a44:	str	r2, [r1]
   18a48:	cmp	r0, #126	; 0x7e
   18a4c:	movls	lr, #64	; 0x40
   18a50:	movhi	lr, #98	; 0x62
   18a54:	sub	ip, r0, #64	; 0x40
   18a58:	uxtb	ip, ip
   18a5c:	add	r2, r0, #95	; 0x5f
   18a60:	uxtb	r2, r2
   18a64:	cmp	r2, #93	; 0x5d
   18a68:	cmphi	ip, #62	; 0x3e
   18a6c:	bhi	18bd8 <myencoding_decode_big5@@Base+0x1a8>
   18a70:	sub	r0, r0, #20224	; 0x4f00
   18a74:	sub	r0, r0, #29
   18a78:	mov	r2, #157	; 0x9d
   18a7c:	mla	r0, r2, r3, r0
   18a80:	sub	r0, r0, lr
   18a84:	sub	r3, r0, #1120	; 0x460
   18a88:	sub	r3, r3, #13
   18a8c:	cmp	r3, #33	; 0x21
   18a90:	addls	pc, pc, r3, lsl #2
   18a94:	b	18b80 <myencoding_decode_big5@@Base+0x150>
   18a98:	b	18b20 <myencoding_decode_big5@@Base+0xf0>
   18a9c:	b	18b80 <myencoding_decode_big5@@Base+0x150>
   18aa0:	b	18b38 <myencoding_decode_big5@@Base+0x108>
   18aa4:	b	18b80 <myencoding_decode_big5@@Base+0x150>
   18aa8:	b	18b80 <myencoding_decode_big5@@Base+0x150>
   18aac:	b	18b80 <myencoding_decode_big5@@Base+0x150>
   18ab0:	b	18b80 <myencoding_decode_big5@@Base+0x150>
   18ab4:	b	18b80 <myencoding_decode_big5@@Base+0x150>
   18ab8:	b	18b80 <myencoding_decode_big5@@Base+0x150>
   18abc:	b	18b80 <myencoding_decode_big5@@Base+0x150>
   18ac0:	b	18b80 <myencoding_decode_big5@@Base+0x150>
   18ac4:	b	18b80 <myencoding_decode_big5@@Base+0x150>
   18ac8:	b	18b80 <myencoding_decode_big5@@Base+0x150>
   18acc:	b	18b80 <myencoding_decode_big5@@Base+0x150>
   18ad0:	b	18b80 <myencoding_decode_big5@@Base+0x150>
   18ad4:	b	18b80 <myencoding_decode_big5@@Base+0x150>
   18ad8:	b	18b80 <myencoding_decode_big5@@Base+0x150>
   18adc:	b	18b80 <myencoding_decode_big5@@Base+0x150>
   18ae0:	b	18b80 <myencoding_decode_big5@@Base+0x150>
   18ae4:	b	18b80 <myencoding_decode_big5@@Base+0x150>
   18ae8:	b	18b80 <myencoding_decode_big5@@Base+0x150>
   18aec:	b	18b80 <myencoding_decode_big5@@Base+0x150>
   18af0:	b	18b80 <myencoding_decode_big5@@Base+0x150>
   18af4:	b	18b80 <myencoding_decode_big5@@Base+0x150>
   18af8:	b	18b80 <myencoding_decode_big5@@Base+0x150>
   18afc:	b	18b80 <myencoding_decode_big5@@Base+0x150>
   18b00:	b	18b80 <myencoding_decode_big5@@Base+0x150>
   18b04:	b	18b80 <myencoding_decode_big5@@Base+0x150>
   18b08:	b	18b80 <myencoding_decode_big5@@Base+0x150>
   18b0c:	b	18b80 <myencoding_decode_big5@@Base+0x150>
   18b10:	b	18b80 <myencoding_decode_big5@@Base+0x150>
   18b14:	b	18b50 <myencoding_decode_big5@@Base+0x120>
   18b18:	b	18b80 <myencoding_decode_big5@@Base+0x150>
   18b1c:	b	18b68 <myencoding_decode_big5@@Base+0x138>
   18b20:	mov	r3, #202	; 0xca
   18b24:	str	r3, [r1, #12]
   18b28:	mov	r3, #772	; 0x304
   18b2c:	str	r3, [r1, #16]
   18b30:	mov	r0, #0
   18b34:	pop	{pc}		; (ldr pc, [sp], #4)
   18b38:	mov	r3, #202	; 0xca
   18b3c:	str	r3, [r1, #12]
   18b40:	mov	r3, #780	; 0x30c
   18b44:	str	r3, [r1, #16]
   18b48:	mov	r0, #0
   18b4c:	pop	{pc}		; (ldr pc, [sp], #4)
   18b50:	mov	r3, #234	; 0xea
   18b54:	str	r3, [r1, #12]
   18b58:	mov	r3, #772	; 0x304
   18b5c:	str	r3, [r1, #16]
   18b60:	mov	r0, #0
   18b64:	pop	{pc}		; (ldr pc, [sp], #4)
   18b68:	mov	r3, #234	; 0xea
   18b6c:	str	r3, [r1, #12]
   18b70:	mov	r3, #780	; 0x30c
   18b74:	str	r3, [r1, #16]
   18b78:	mov	r0, #0
   18b7c:	pop	{pc}		; (ldr pc, [sp], #4)
   18b80:	cmp	r0, #0
   18b84:	beq	18be0 <myencoding_decode_big5@@Base+0x1b0>
   18b88:	ldr	r3, [pc, #96]	; 18bf0 <myencoding_decode_big5@@Base+0x1c0>
   18b8c:	add	r3, pc, r3
   18b90:	add	r0, r3, r0, lsl #2
   18b94:	ldr	r3, [r0, #-2544]	; 0xfffff610
   18b98:	str	r3, [r1, #12]
   18b9c:	mov	r0, #0
   18ba0:	str	r0, [r1, #16]
   18ba4:	pop	{pc}		; (ldr pc, [sp], #4)
   18ba8:	tst	r0, #128	; 0x80
   18bac:	bne	18bbc <myencoding_decode_big5@@Base+0x18c>
   18bb0:	str	r0, [r1, #12]
   18bb4:	mov	r0, #0
   18bb8:	bx	lr
   18bbc:	add	r3, r0, #127	; 0x7f
   18bc0:	uxtb	r3, r3
   18bc4:	cmp	r3, #125	; 0x7d
   18bc8:	bhi	18be8 <myencoding_decode_big5@@Base+0x1b8>
   18bcc:	str	r0, [r1]
   18bd0:	mov	r0, #2
   18bd4:	bx	lr
   18bd8:	mov	r0, #1
   18bdc:	pop	{pc}		; (ldr pc, [sp], #4)
   18be0:	mov	r0, #1
   18be4:	pop	{pc}		; (ldr pc, [sp], #4)
   18be8:	mov	r0, #1
   18bec:	bx	lr
   18bf0:	ldrdeq	r6, [r2], -r8

00018bf4 <myencoding_decode_euc_jp@@Base>:
   18bf4:	ldr	r3, [r1]
   18bf8:	cmp	r3, #142	; 0x8e
   18bfc:	beq	18c24 <myencoding_decode_euc_jp@@Base+0x30>
   18c00:	cmp	r3, #143	; 0x8f
   18c04:	beq	18c5c <myencoding_decode_euc_jp@@Base+0x68>
   18c08:	cmp	r3, #0
   18c0c:	bne	18c80 <myencoding_decode_euc_jp@@Base+0x8c>
   18c10:	tst	r0, #128	; 0x80
   18c14:	bne	18d04 <myencoding_decode_euc_jp@@Base+0x110>
   18c18:	str	r0, [r1, #12]
   18c1c:	mov	r0, #0
   18c20:	bx	lr
   18c24:	add	r3, r0, #95	; 0x5f
   18c28:	uxtb	r3, r3
   18c2c:	cmp	r3, #62	; 0x3e
   18c30:	bls	18c40 <myencoding_decode_euc_jp@@Base+0x4c>
   18c34:	mov	r3, #0
   18c38:	str	r3, [r1]
   18c3c:	b	18c10 <myencoding_decode_euc_jp@@Base+0x1c>
   18c40:	mov	r3, #0
   18c44:	str	r3, [r1]
   18c48:	add	r0, r0, #65024	; 0xfe00
   18c4c:	add	r0, r0, #192	; 0xc0
   18c50:	str	r0, [r1, #12]
   18c54:	mov	r0, r3
   18c58:	bx	lr
   18c5c:	add	r3, r0, #95	; 0x5f
   18c60:	uxtb	r3, r3
   18c64:	cmp	r3, #93	; 0x5d
   18c68:	bhi	18c34 <myencoding_decode_euc_jp@@Base+0x40>
   18c6c:	mov	r3, #1
   18c70:	str	r3, [r1, #20]
   18c74:	str	r0, [r1]
   18c78:	mov	r0, #2
   18c7c:	bx	lr
   18c80:	mov	r2, #0
   18c84:	str	r2, [r1]
   18c88:	sub	r2, r3, #161	; 0xa1
   18c8c:	cmp	r2, #93	; 0x5d
   18c90:	bhi	18c10 <myencoding_decode_euc_jp@@Base+0x1c>
   18c94:	add	r2, r0, #95	; 0x5f
   18c98:	uxtb	r2, r2
   18c9c:	cmp	r2, #93	; 0x5d
   18ca0:	bhi	18c10 <myencoding_decode_euc_jp@@Base+0x1c>
   18ca4:	sub	r0, r0, #15232	; 0x3b80
   18ca8:	sub	r0, r0, #63	; 0x3f
   18cac:	mov	r2, #94	; 0x5e
   18cb0:	mla	r3, r2, r3, r0
   18cb4:	ldr	r2, [r1, #20]
   18cb8:	cmp	r2, #0
   18cbc:	beq	18cec <myencoding_decode_euc_jp@@Base+0xf8>
   18cc0:	ldr	r2, [pc, #100]	; 18d2c <myencoding_decode_euc_jp@@Base+0x138>
   18cc4:	add	r2, pc, r2
   18cc8:	add	r3, r2, r3, lsl #2
   18ccc:	ldr	r3, [r3, #2928]	; 0xb70
   18cd0:	str	r3, [r1, #12]
   18cd4:	mov	r3, #0
   18cd8:	str	r3, [r1, #20]
   18cdc:	ldr	r0, [r1, #12]
   18ce0:	clz	r0, r0
   18ce4:	lsr	r0, r0, #5
   18ce8:	bx	lr
   18cec:	ldr	r2, [pc, #60]	; 18d30 <myencoding_decode_euc_jp@@Base+0x13c>
   18cf0:	add	r2, pc, r2
   18cf4:	add	r3, r2, r3, lsl #2
   18cf8:	ldr	r3, [r3, #-2648]	; 0xfffff5a8
   18cfc:	str	r3, [r1, #12]
   18d00:	b	18cd4 <myencoding_decode_euc_jp@@Base+0xe0>
   18d04:	add	r2, r0, #114	; 0x72
   18d08:	uxtb	r2, r2
   18d0c:	add	r3, r0, #95	; 0x5f
   18d10:	uxtb	r3, r3
   18d14:	cmp	r3, #93	; 0x5d
   18d18:	cmphi	r2, #1
   18d1c:	strls	r0, [r1]
   18d20:	movls	r0, #2
   18d24:	movhi	r0, #1
   18d28:	bx	lr
   18d2c:	andeq	r7, r3, r8, asr pc
   18d30:	andeq	r1, r4, r4, lsl #30

00018d34 <myencoding_decode_iso_2022_jp@@Base>:
   18d34:	ldr	r3, [r1, #4]
   18d38:	cmp	r3, #7
   18d3c:	addls	pc, pc, r3, lsl #2
   18d40:	b	19020 <myencoding_decode_iso_2022_jp@@Base+0x2ec>
   18d44:	b	18d64 <myencoding_decode_iso_2022_jp@@Base+0x30>
   18d48:	b	18db4 <myencoding_decode_iso_2022_jp@@Base+0x80>
   18d4c:	b	19020 <myencoding_decode_iso_2022_jp@@Base+0x2ec>
   18d50:	b	18e3c <myencoding_decode_iso_2022_jp@@Base+0x108>
   18d54:	b	18e80 <myencoding_decode_iso_2022_jp@@Base+0x14c>
   18d58:	b	18ec4 <myencoding_decode_iso_2022_jp@@Base+0x190>
   18d5c:	b	18f38 <myencoding_decode_iso_2022_jp@@Base+0x204>
   18d60:	b	18f68 <myencoding_decode_iso_2022_jp@@Base+0x234>
   18d64:	cmp	r0, #27
   18d68:	beq	18da4 <myencoding_decode_iso_2022_jp@@Base+0x70>
   18d6c:	sub	r3, r0, #14
   18d70:	uxtb	r2, r3
   18d74:	eor	r3, r0, #128	; 0x80
   18d78:	lsr	r3, r3, #7
   18d7c:	cmp	r2, #1
   18d80:	movls	r3, #0
   18d84:	andhi	r3, r3, #1
   18d88:	cmp	r3, #0
   18d8c:	mov	r3, #0
   18d90:	str	r3, [r1, #20]
   18d94:	strne	r0, [r1, #12]
   18d98:	movne	r0, r3
   18d9c:	moveq	r0, #1
   18da0:	bx	lr
   18da4:	mov	r3, #6
   18da8:	str	r3, [r1, #4]
   18dac:	mov	r0, #2
   18db0:	bx	lr
   18db4:	cmp	r0, #27
   18db8:	beq	18e04 <myencoding_decode_iso_2022_jp@@Base+0xd0>
   18dbc:	cmp	r0, #92	; 0x5c
   18dc0:	beq	18e14 <myencoding_decode_iso_2022_jp@@Base+0xe0>
   18dc4:	cmp	r0, #126	; 0x7e
   18dc8:	beq	18e28 <myencoding_decode_iso_2022_jp@@Base+0xf4>
   18dcc:	sub	r3, r0, #14
   18dd0:	uxtb	r2, r3
   18dd4:	eor	r3, r0, #128	; 0x80
   18dd8:	lsr	r3, r3, #7
   18ddc:	cmp	r2, #1
   18de0:	movls	r3, #0
   18de4:	andhi	r3, r3, #1
   18de8:	cmp	r3, #0
   18dec:	mov	r3, #0
   18df0:	str	r3, [r1, #20]
   18df4:	strne	r0, [r1, #12]
   18df8:	movne	r0, r3
   18dfc:	moveq	r0, #1
   18e00:	bx	lr
   18e04:	mov	r3, #6
   18e08:	str	r3, [r1, #4]
   18e0c:	mov	r0, #2
   18e10:	bx	lr
   18e14:	mov	r0, #0
   18e18:	str	r0, [r1, #20]
   18e1c:	mov	r3, #165	; 0xa5
   18e20:	str	r3, [r1, #12]
   18e24:	bx	lr
   18e28:	mov	r0, #0
   18e2c:	str	r0, [r1, #20]
   18e30:	ldr	r3, [pc, #496]	; 19028 <myencoding_decode_iso_2022_jp@@Base+0x2f4>
   18e34:	str	r3, [r1, #12]
   18e38:	bx	lr
   18e3c:	cmp	r0, #27
   18e40:	beq	18e70 <myencoding_decode_iso_2022_jp@@Base+0x13c>
   18e44:	sub	r3, r0, #33	; 0x21
   18e48:	uxtb	r3, r3
   18e4c:	cmp	r3, #62	; 0x3e
   18e50:	mov	r3, #0
   18e54:	str	r3, [r1, #20]
   18e58:	addls	r0, r0, #65280	; 0xff00
   18e5c:	addls	r0, r0, #64	; 0x40
   18e60:	strls	r0, [r1, #12]
   18e64:	movls	r0, r3
   18e68:	movhi	r0, #1
   18e6c:	bx	lr
   18e70:	mov	r3, #6
   18e74:	str	r3, [r1, #4]
   18e78:	mov	r0, #2
   18e7c:	bx	lr
   18e80:	cmp	r0, #27
   18e84:	beq	18eb4 <myencoding_decode_iso_2022_jp@@Base+0x180>
   18e88:	sub	r3, r0, #33	; 0x21
   18e8c:	uxtb	r3, r3
   18e90:	cmp	r3, #93	; 0x5d
   18e94:	mov	r3, #0
   18e98:	str	r3, [r1, #20]
   18e9c:	strls	r0, [r1]
   18ea0:	movls	r3, #5
   18ea4:	strls	r3, [r1, #4]
   18ea8:	movls	r0, #2
   18eac:	movhi	r0, #1
   18eb0:	bx	lr
   18eb4:	mov	r3, #6
   18eb8:	str	r3, [r1, #4]
   18ebc:	mov	r0, #2
   18ec0:	bx	lr
   18ec4:	cmp	r0, #27
   18ec8:	beq	18f18 <myencoding_decode_iso_2022_jp@@Base+0x1e4>
   18ecc:	sub	r3, r0, #33	; 0x21
   18ed0:	uxtb	r3, r3
   18ed4:	cmp	r3, #93	; 0x5d
   18ed8:	bhi	18f28 <myencoding_decode_iso_2022_jp@@Base+0x1f4>
   18edc:	mov	r3, #4
   18ee0:	str	r3, [r1, #4]
   18ee4:	ldr	r3, [r1]
   18ee8:	sub	r2, r0, #3120	; 0xc30
   18eec:	sub	r2, r2, #15
   18ef0:	mov	r0, #94	; 0x5e
   18ef4:	mla	r2, r0, r3, r2
   18ef8:	ldr	r3, [pc, #300]	; 1902c <myencoding_decode_iso_2022_jp@@Base+0x2f8>
   18efc:	add	r3, pc, r3
   18f00:	add	r3, r3, r2, lsl #2
   18f04:	ldr	r0, [r3, #-2648]	; 0xfffff5a8
   18f08:	str	r0, [r1, #12]
   18f0c:	clz	r0, r0
   18f10:	lsr	r0, r0, #5
   18f14:	bx	lr
   18f18:	mov	r3, #6
   18f1c:	str	r3, [r1, #4]
   18f20:	mov	r0, #3
   18f24:	bx	lr
   18f28:	mov	r3, #4
   18f2c:	str	r3, [r1, #4]
   18f30:	mov	r0, #1
   18f34:	bx	lr
   18f38:	sub	r3, r0, #36	; 0x24
   18f3c:	tst	r3, #251	; 0xfb
   18f40:	streq	r0, [r1]
   18f44:	moveq	r3, #7
   18f48:	streq	r3, [r1, #4]
   18f4c:	moveq	r0, #2
   18f50:	movne	r3, #0
   18f54:	strne	r3, [r1, #20]
   18f58:	ldrne	r3, [r1, #8]
   18f5c:	strne	r3, [r1, #4]
   18f60:	movne	r0, #1
   18f64:	bx	lr
   18f68:	ldr	r3, [r1]
   18f6c:	mov	r2, #0
   18f70:	str	r2, [r1]
   18f74:	str	r2, [r1, #4]
   18f78:	cmp	r3, #40	; 0x28
   18f7c:	movne	r2, #0
   18f80:	moveq	r2, #1
   18f84:	cmp	r0, #66	; 0x42
   18f88:	cmpeq	r3, #40	; 0x28
   18f8c:	beq	18fd0 <myencoding_decode_iso_2022_jp@@Base+0x29c>
   18f90:	cmp	r0, #74	; 0x4a
   18f94:	movne	ip, #0
   18f98:	andeq	ip, r2, #1
   18f9c:	cmp	ip, #0
   18fa0:	movne	r3, #1
   18fa4:	strne	r3, [r1, #4]
   18fa8:	bne	18ffc <myencoding_decode_iso_2022_jp@@Base+0x2c8>
   18fac:	cmp	r0, #73	; 0x49
   18fb0:	movne	r2, #0
   18fb4:	andeq	r2, r2, #1
   18fb8:	cmp	r2, #0
   18fbc:	movne	r3, #2
   18fc0:	strne	r3, [r1, #4]
   18fc4:	bne	18ffc <myencoding_decode_iso_2022_jp@@Base+0x2c8>
   18fc8:	cmp	r3, #36	; 0x24
   18fcc:	beq	18fe8 <myencoding_decode_iso_2022_jp@@Base+0x2b4>
   18fd0:	mov	r3, #0
   18fd4:	str	r3, [r1, #20]
   18fd8:	ldr	r3, [r1, #8]
   18fdc:	str	r3, [r1, #4]
   18fe0:	mov	r0, #1
   18fe4:	bx	lr
   18fe8:	and	r0, r0, #253	; 0xfd
   18fec:	cmp	r0, #64	; 0x40
   18ff0:	moveq	r3, #4
   18ff4:	streq	r3, [r1, #4]
   18ff8:	bne	18fd0 <myencoding_decode_iso_2022_jp@@Base+0x29c>
   18ffc:	ldr	r3, [r1, #4]
   19000:	str	r3, [r1, #8]
   19004:	ldr	r0, [r1, #20]
   19008:	mov	r3, #1
   1900c:	str	r3, [r1, #20]
   19010:	cmp	r0, #0
   19014:	movne	r0, r3
   19018:	moveq	r0, #2
   1901c:	bx	lr
   19020:	mov	r0, #0
   19024:	bx	lr
   19028:	andeq	r2, r0, lr, lsr r0
   1902c:	strdeq	r1, [r4], -r8

00019030 <myencoding_decode_shift_jis@@Base>:
   19030:	ldr	r3, [r1]
   19034:	cmp	r3, #0
   19038:	beq	190dc <myencoding_decode_shift_jis@@Base+0xac>
   1903c:	push	{r4, lr}
   19040:	cmp	r0, #126	; 0x7e
   19044:	movls	ip, #64	; 0x40
   19048:	movhi	ip, #65	; 0x41
   1904c:	cmp	r3, #159	; 0x9f
   19050:	movls	r4, #129	; 0x81
   19054:	movhi	r4, #193	; 0xc1
   19058:	sub	r2, r0, #64	; 0x40
   1905c:	uxtb	r2, r2
   19060:	eor	lr, r0, #128	; 0x80
   19064:	cmp	lr, #124	; 0x7c
   19068:	cmphi	r2, #62	; 0x3e
   1906c:	bhi	190b0 <myencoding_decode_shift_jis@@Base+0x80>
   19070:	sub	r3, r3, r4
   19074:	mov	r2, #188	; 0xbc
   19078:	sub	r0, r0, ip
   1907c:	mlas	r3, r2, r3, r0
   19080:	beq	190b0 <myencoding_decode_shift_jis@@Base+0x80>
   19084:	ldr	r2, [pc, #176]	; 1913c <myencoding_decode_shift_jis@@Base+0x10c>
   19088:	add	r2, pc, r2
   1908c:	add	r2, r2, r3, lsl #2
   19090:	ldr	r2, [r2, #-2648]	; 0xfffff5a8
   19094:	str	r2, [r1, #12]
   19098:	cmp	r2, #0
   1909c:	beq	190bc <myencoding_decode_shift_jis@@Base+0x8c>
   190a0:	ldr	r0, [r1, #12]
   190a4:	clz	r0, r0
   190a8:	lsr	r0, r0, #5
   190ac:	pop	{r4, pc}
   190b0:	mov	r3, #0
   190b4:	str	r3, [r1, #12]
   190b8:	b	190a0 <myencoding_decode_shift_jis@@Base+0x70>
   190bc:	sub	r2, r3, #8832	; 0x2280
   190c0:	sub	r2, r2, #4
   190c4:	ldr	r0, [pc, #116]	; 19140 <myencoding_decode_shift_jis@@Base+0x110>
   190c8:	cmp	r2, r0
   190cc:	addls	r3, r3, #48384	; 0xbd00
   190d0:	addls	r3, r3, #124	; 0x7c
   190d4:	strls	r3, [r1, #12]
   190d8:	b	190a0 <myencoding_decode_shift_jis@@Base+0x70>
   190dc:	cmp	r0, #128	; 0x80
   190e0:	bls	1911c <myencoding_decode_shift_jis@@Base+0xec>
   190e4:	add	r3, r0, #95	; 0x5f
   190e8:	uxtb	r3, r3
   190ec:	cmp	r3, #62	; 0x3e
   190f0:	bls	19128 <myencoding_decode_shift_jis@@Base+0xf8>
   190f4:	add	r2, r0, #127	; 0x7f
   190f8:	uxtb	r2, r2
   190fc:	add	r3, r0, #32
   19100:	uxtb	r3, r3
   19104:	cmp	r3, #28
   19108:	cmphi	r2, #30
   1910c:	strls	r0, [r1]
   19110:	movls	r0, #2
   19114:	movhi	r0, #1
   19118:	bx	lr
   1911c:	str	r0, [r1, #12]
   19120:	mov	r0, #0
   19124:	bx	lr
   19128:	add	r0, r0, #65024	; 0xfe00
   1912c:	add	r0, r0, #192	; 0xc0
   19130:	str	r0, [r1, #12]
   19134:	mov	r0, #0
   19138:	bx	lr
   1913c:	andeq	r1, r4, ip, ror #22
   19140:	muleq	r0, ip, r6

00019144 <myencoding_decode_euc_kr@@Base>:
   19144:	ldr	r3, [r1]
   19148:	cmp	r3, #0
   1914c:	beq	191a0 <myencoding_decode_euc_kr@@Base+0x5c>
   19150:	mov	r2, #0
   19154:	str	r2, [r1]
   19158:	sub	r2, r0, #65	; 0x41
   1915c:	uxtb	r2, r2
   19160:	cmp	r2, #189	; 0xbd
   19164:	bhi	19190 <myencoding_decode_euc_kr@@Base+0x4c>
   19168:	sub	r0, r0, #24320	; 0x5f00
   1916c:	sub	r0, r0, #255	; 0xff
   19170:	mov	r2, #190	; 0xbe
   19174:	mlas	r0, r2, r3, r0
   19178:	beq	19190 <myencoding_decode_euc_kr@@Base+0x4c>
   1917c:	ldr	r3, [pc, #76]	; 191d0 <myencoding_decode_euc_kr@@Base+0x8c>
   19180:	add	r3, pc, r3
   19184:	add	r0, r3, r0, lsl #2
   19188:	ldr	r3, [r0, #1552]	; 0x610
   1918c:	str	r3, [r1, #12]
   19190:	ldr	r0, [r1, #12]
   19194:	clz	r0, r0
   19198:	lsr	r0, r0, #5
   1919c:	bx	lr
   191a0:	tst	r0, #128	; 0x80
   191a4:	bne	191b4 <myencoding_decode_euc_kr@@Base+0x70>
   191a8:	str	r0, [r1, #12]
   191ac:	mov	r0, #0
   191b0:	bx	lr
   191b4:	add	r3, r0, #127	; 0x7f
   191b8:	uxtb	r3, r3
   191bc:	cmp	r3, #125	; 0x7d
   191c0:	strls	r0, [r1]
   191c4:	movls	r0, #2
   191c8:	movhi	r0, #1
   191cc:	bx	lr
   191d0:	andeq	fp, r4, ip, asr #20

000191d4 <myencoding_decode_x_user_defined@@Base>:
   191d4:	tst	r0, #128	; 0x80
   191d8:	addne	r0, r0, #63232	; 0xf700
   191dc:	str	r0, [r1, #12]
   191e0:	mov	r0, #0
   191e4:	bx	lr

000191e8 <myencoding_get_function_by_id@@Base>:
   191e8:	ldr	r3, [pc, #8]	; 191f8 <myencoding_get_function_by_id@@Base+0x10>
   191ec:	add	r3, pc, r3
   191f0:	ldr	r0, [r3, r0, lsl #2]
   191f4:	bx	lr
   191f8:	andeq	sp, pc, r0, ror ip	; <UNPREDICTABLE>

000191fc <myencoding_index_gb18030_ranges_code_point@@Base>:
   191fc:	sub	r3, r0, #39168	; 0x9900
   19200:	sub	r2, r3, #252	; 0xfc
   19204:	ldr	r3, [pc, #148]	; 192a0 <myencoding_index_gb18030_ranges_code_point@@Base+0xa4>
   19208:	cmp	r0, r3
   1920c:	movls	r3, #0
   19210:	movhi	r3, #1
   19214:	ldr	r1, [pc, #136]	; 192a4 <myencoding_index_gb18030_ranges_code_point@@Base+0xa8>
   19218:	cmp	r2, r1
   1921c:	orrls	r3, r3, #1
   19220:	cmp	r3, #0
   19224:	bne	19290 <myencoding_index_gb18030_ranges_code_point@@Base+0x94>
   19228:	ldr	r3, [pc, #120]	; 192a8 <myencoding_index_gb18030_ranges_code_point@@Base+0xac>
   1922c:	cmp	r0, r3
   19230:	beq	19298 <myencoding_index_gb18030_ranges_code_point@@Base+0x9c>
   19234:	ldr	r3, [pc, #112]	; 192ac <myencoding_index_gb18030_ranges_code_point@@Base+0xb0>
   19238:	cmp	r0, r3
   1923c:	bhi	19270 <myencoding_index_gb18030_ranges_code_point@@Base+0x74>
   19240:	mov	r3, #206	; 0xce
   19244:	ldr	r1, [pc, #100]	; 192b0 <myencoding_index_gb18030_ranges_code_point@@Base+0xb4>
   19248:	add	r1, pc, r1
   1924c:	sub	r1, r1, #896	; 0x380
   19250:	sub	r3, r3, #1
   19254:	ldr	r2, [r1, r3, lsl #3]
   19258:	cmp	r0, r2
   1925c:	bcs	19274 <myencoding_index_gb18030_ranges_code_point@@Base+0x78>
   19260:	cmp	r3, #0
   19264:	bne	19250 <myencoding_index_gb18030_ranges_code_point@@Base+0x54>
   19268:	mov	r2, r3
   1926c:	b	19284 <myencoding_index_gb18030_ranges_code_point@@Base+0x88>
   19270:	mov	r3, #206	; 0xce
   19274:	ldr	r2, [pc, #56]	; 192b4 <myencoding_index_gb18030_ranges_code_point@@Base+0xb8>
   19278:	add	r2, pc, r2
   1927c:	add	r2, r2, r3, lsl #3
   19280:	ldr	r2, [r2, #-892]	; 0xfffffc84
   19284:	add	r0, r2, r0
   19288:	sub	r0, r0, r3
   1928c:	bx	lr
   19290:	mov	r0, #0
   19294:	bx	lr
   19298:	ldr	r0, [pc, #24]	; 192b8 <myencoding_index_gb18030_ranges_code_point@@Base+0xbc>
   1929c:	bx	lr
   192a0:	andseq	lr, r2, r7, asr #4
   192a4:	andeq	r4, r2, fp, asr #16
   192a8:	andeq	r1, r0, r1, lsr #26
   192ac:	andeq	lr, r2, r7, asr #4
   192b0:	andeq	r3, r6, r4, lsr #18
   192b4:	strdeq	r3, [r6], -r4
   192b8:	andeq	lr, r0, r7, asr #15

000192bc <myencoding_decode_gb18030@@Base>:
   192bc:	push	{r4, lr}
   192c0:	ldr	r3, [r1, #8]
   192c4:	cmp	r3, #0
   192c8:	beq	19334 <myencoding_decode_gb18030@@Base+0x78>
   192cc:	mov	r4, r1
   192d0:	sub	r2, r0, #48	; 0x30
   192d4:	uxtb	r2, r2
   192d8:	cmp	r2, #9
   192dc:	bls	19300 <myencoding_decode_gb18030@@Base+0x44>
   192e0:	mov	r3, #0
   192e4:	str	r3, [r4]
   192e8:	str	r3, [r4, #4]
   192ec:	str	r3, [r4, #8]
   192f0:	ldr	r0, [r4, #12]
   192f4:	clz	r0, r0
   192f8:	lsr	r0, r0, #5
   192fc:	pop	{r4, pc}
   19300:	ldr	r2, [r1]
   19304:	add	r1, r2, r2, lsl #2
   19308:	ldr	r2, [r4, #4]
   1930c:	add	r2, r2, r1, lsl #1
   19310:	rsb	r2, r2, r2, lsl #6
   19314:	add	r3, r3, r2, lsl #1
   19318:	add	r3, r3, r3, lsl #2
   1931c:	ldr	r2, [pc, #280]	; 1943c <myencoding_decode_gb18030@@Base+0x180>
   19320:	add	r2, r0, r2
   19324:	add	r0, r2, r3, lsl #1
   19328:	bl	10f10 <myencoding_index_gb18030_ranges_code_point@plt>
   1932c:	str	r0, [r4, #12]
   19330:	b	192e0 <myencoding_decode_gb18030@@Base+0x24>
   19334:	ldr	r3, [r1, #4]
   19338:	cmp	r3, #0
   1933c:	beq	19368 <myencoding_decode_gb18030@@Base+0xac>
   19340:	add	r3, r0, #127	; 0x7f
   19344:	uxtb	r3, r3
   19348:	cmp	r3, #125	; 0x7d
   1934c:	strls	r0, [r1, #8]
   19350:	movls	r0, #2
   19354:	movhi	r3, #0
   19358:	strhi	r3, [r1]
   1935c:	strhi	r3, [r1, #4]
   19360:	movhi	r0, #1
   19364:	pop	{r4, pc}
   19368:	ldr	r3, [r1]
   1936c:	cmp	r3, #0
   19370:	beq	193e4 <myencoding_decode_gb18030@@Base+0x128>
   19374:	sub	r2, r0, #48	; 0x30
   19378:	uxtb	r2, r2
   1937c:	cmp	r2, #9
   19380:	bhi	19390 <myencoding_decode_gb18030@@Base+0xd4>
   19384:	str	r0, [r1, #4]
   19388:	mov	r0, #2
   1938c:	pop	{r4, pc}
   19390:	mov	r2, #0
   19394:	str	r2, [r1]
   19398:	cmp	r0, #126	; 0x7e
   1939c:	movls	ip, #64	; 0x40
   193a0:	movhi	ip, #65	; 0x41
   193a4:	sub	r2, r0, #64	; 0x40
   193a8:	uxtb	r2, r2
   193ac:	eor	lr, r0, #128	; 0x80
   193b0:	cmp	lr, #126	; 0x7e
   193b4:	cmphi	r2, #62	; 0x3e
   193b8:	bhi	1942c <myencoding_decode_gb18030@@Base+0x170>
   193bc:	sub	r0, r0, ip
   193c0:	mov	r2, #190	; 0xbe
   193c4:	mla	r3, r2, r3, r0
   193c8:	sub	r3, r3, #24320	; 0x5f00
   193cc:	ldr	r2, [pc, #108]	; 19440 <myencoding_decode_gb18030@@Base+0x184>
   193d0:	add	r2, pc, r2
   193d4:	ldr	r3, [r2, r3, lsl #2]
   193d8:	str	r3, [r1, #12]
   193dc:	mov	r0, #0
   193e0:	pop	{r4, pc}
   193e4:	tst	r0, #128	; 0x80
   193e8:	bne	193f8 <myencoding_decode_gb18030@@Base+0x13c>
   193ec:	str	r0, [r1, #12]
   193f0:	mov	r0, #0
   193f4:	pop	{r4, pc}
   193f8:	cmp	r0, #128	; 0x80
   193fc:	beq	1941c <myencoding_decode_gb18030@@Base+0x160>
   19400:	add	r3, r0, #127	; 0x7f
   19404:	uxtb	r3, r3
   19408:	cmp	r3, #125	; 0x7d
   1940c:	bhi	19434 <myencoding_decode_gb18030@@Base+0x178>
   19410:	str	r0, [r1]
   19414:	mov	r0, #2
   19418:	pop	{r4, pc}
   1941c:	ldr	r3, [pc, #32]	; 19444 <myencoding_decode_gb18030@@Base+0x188>
   19420:	str	r3, [r1, #12]
   19424:	mov	r0, #0
   19428:	pop	{r4, pc}
   1942c:	mov	r0, #1
   19430:	pop	{r4, pc}
   19434:	mov	r0, #1
   19438:	pop	{r4, pc}
   1943c:			; <UNDEFINED> instruction: 0xffe6414e
   19440:	muleq	r6, ip, r7
   19444:	andeq	r2, r0, ip, lsr #1

00019448 <myencoding_decode_gbk@@Base>:
   19448:	push	{r4, lr}
   1944c:	bl	10bf8 <myencoding_decode_gb18030@plt>
   19450:	pop	{r4, pc}

00019454 <myencoding_decode_shared_utf_16@@Base>:
   19454:	ldr	r3, [r1]
   19458:	cmp	r3, #0
   1945c:	bne	1946c <myencoding_decode_shared_utf_16@@Base+0x18>
   19460:	str	r0, [r1]
   19464:	mov	r0, #2
   19468:	bx	lr
   1946c:	ldr	ip, [r1, #20]
   19470:	cmp	ip, #0
   19474:	addne	r3, r0, r3, lsl #8
   19478:	addeq	r3, r3, r0, lsl #8
   1947c:	mov	r2, #0
   19480:	str	r2, [r1]
   19484:	ldr	r2, [r1, #4]
   19488:	cmp	r2, #0
   1948c:	beq	194ec <myencoding_decode_shared_utf_16@@Base+0x98>
   19490:	mov	r0, #0
   19494:	str	r0, [r1, #4]
   19498:	sub	r0, r3, #56320	; 0xdc00
   1949c:	cmp	r0, #1024	; 0x400
   194a0:	bcc	194d4 <myencoding_decode_shared_utf_16@@Base+0x80>
   194a4:	lsr	r2, r3, #8
   194a8:	cmp	ip, #0
   194ac:	uxtbne	r2, r2
   194b0:	strne	r2, [r1, #12]
   194b4:	uxtbne	r3, r3
   194b8:	strne	r3, [r1, #16]
   194bc:	uxtbeq	r3, r3
   194c0:	streq	r3, [r1, #12]
   194c4:	uxtbeq	r2, r2
   194c8:	streq	r2, [r1, #16]
   194cc:	mov	r0, #5
   194d0:	bx	lr
   194d4:	sub	r2, r2, #55296	; 0xd800
   194d8:	add	r3, r3, r2, lsl #10
   194dc:	add	r3, r3, #9216	; 0x2400
   194e0:	str	r3, [r1, #12]
   194e4:	mov	r0, #0
   194e8:	bx	lr
   194ec:	sub	r2, r3, #55296	; 0xd800
   194f0:	cmp	r2, #1024	; 0x400
   194f4:	bcs	19504 <myencoding_decode_shared_utf_16@@Base+0xb0>
   194f8:	str	r3, [r1, #4]
   194fc:	mov	r0, #2
   19500:	bx	lr
   19504:	sub	r2, r3, #56320	; 0xdc00
   19508:	cmp	r2, #1024	; 0x400
   1950c:	strcs	r3, [r1, #12]
   19510:	movcs	r0, #0
   19514:	movcc	r0, #1
   19518:	bx	lr

0001951c <myencoding_decode_utf_16be@@Base>:
   1951c:	push	{r4, lr}
   19520:	ldr	r3, [r1, #20]
   19524:	cmp	r3, #0
   19528:	moveq	r3, #1
   1952c:	streq	r3, [r1, #20]
   19530:	bl	10bd4 <myencoding_decode_shared_utf_16@plt>
   19534:	pop	{r4, pc}

00019538 <myencoding_decode_utf_16le@@Base>:
   19538:	push	{r4, lr}
   1953c:	ldr	r3, [r1, #20]
   19540:	cmp	r3, #0
   19544:	movne	r3, #0
   19548:	strne	r3, [r1, #20]
   1954c:	bl	10bd4 <myencoding_decode_shared_utf_16@plt>
   19550:	pop	{r4, pc}

00019554 <myencoding_result_clean@@Base>:
   19554:	mov	r3, #0
   19558:	str	r3, [r0]
   1955c:	str	r3, [r0, #4]
   19560:	str	r3, [r0, #8]
   19564:	str	r3, [r0, #12]
   19568:	str	r3, [r0, #16]
   1956c:	str	r3, [r0, #20]
   19570:	bx	lr

00019574 <myencoding_codepoint_ascii_length@@Base>:
   19574:	cmp	r0, #127	; 0x7f
   19578:	bls	195cc <myencoding_codepoint_ascii_length@@Base+0x58>
   1957c:	cmp	r0, #2048	; 0x800
   19580:	bcs	1958c <myencoding_codepoint_ascii_length@@Base+0x18>
   19584:	mov	r0, #2
   19588:	bx	lr
   1958c:	cmp	r0, #65536	; 0x10000
   19590:	bcs	1959c <myencoding_codepoint_ascii_length@@Base+0x28>
   19594:	mov	r0, #3
   19598:	bx	lr
   1959c:	cmp	r0, #2097152	; 0x200000
   195a0:	bcs	195ac <myencoding_codepoint_ascii_length@@Base+0x38>
   195a4:	mov	r0, #4
   195a8:	bx	lr
   195ac:	cmn	r0, #-67108863	; 0xfc000001
   195b0:	bhi	195bc <myencoding_codepoint_ascii_length@@Base+0x48>
   195b4:	mov	r0, #5
   195b8:	bx	lr
   195bc:	cmp	r0, #0
   195c0:	movge	r0, #6
   195c4:	movlt	r0, #0
   195c8:	bx	lr
   195cc:	mov	r0, #1
   195d0:	bx	lr

000195d4 <myencoding_ascii_utf_8_length@@Base>:
   195d4:	tst	r0, #128	; 0x80
   195d8:	bne	195e4 <myencoding_ascii_utf_8_length@@Base+0x10>
   195dc:	mov	r0, #1
   195e0:	bx	lr
   195e4:	and	r3, r0, #224	; 0xe0
   195e8:	cmp	r3, #192	; 0xc0
   195ec:	beq	19624 <myencoding_ascii_utf_8_length@@Base+0x50>
   195f0:	and	r3, r0, #240	; 0xf0
   195f4:	cmp	r3, #224	; 0xe0
   195f8:	beq	1962c <myencoding_ascii_utf_8_length@@Base+0x58>
   195fc:	and	r3, r0, #248	; 0xf8
   19600:	cmp	r3, #240	; 0xf0
   19604:	beq	19634 <myencoding_ascii_utf_8_length@@Base+0x60>
   19608:	and	r3, r0, #252	; 0xfc
   1960c:	cmp	r3, #248	; 0xf8
   19610:	beq	1963c <myencoding_ascii_utf_8_length@@Base+0x68>
   19614:	cmp	r0, #252	; 0xfc
   19618:	moveq	r0, #6
   1961c:	movne	r0, #0
   19620:	bx	lr
   19624:	mov	r0, #2
   19628:	bx	lr
   1962c:	mov	r0, #3
   19630:	bx	lr
   19634:	mov	r0, #4
   19638:	bx	lr
   1963c:	mov	r0, #5
   19640:	bx	lr

00019644 <myencoding_codepoint_to_ascii_utf_8@@Base>:
   19644:	cmp	r0, #127	; 0x7f
   19648:	bls	19678 <myencoding_codepoint_to_ascii_utf_8@@Base+0x34>
   1964c:	cmp	r0, #2048	; 0x800
   19650:	bcs	19684 <myencoding_codepoint_to_ascii_utf_8@@Base+0x40>
   19654:	mvn	r3, #63	; 0x3f
   19658:	orr	r3, r3, r0, lsr #6
   1965c:	strb	r3, [r1]
   19660:	and	r0, r0, #63	; 0x3f
   19664:	mvn	r0, r0, lsl #25
   19668:	mvn	r0, r0, lsr #25
   1966c:	strb	r0, [r1, #1]
   19670:	mov	r0, #2
   19674:	bx	lr
   19678:	strb	r0, [r1]
   1967c:	mov	r0, #1
   19680:	bx	lr
   19684:	cmp	r0, #65536	; 0x10000
   19688:	bcs	196bc <myencoding_codepoint_to_ascii_utf_8@@Base+0x78>
   1968c:	mvn	r3, #31
   19690:	orr	r3, r3, r0, lsr #12
   19694:	strb	r3, [r1]
   19698:	lsl	r3, r0, #20
   1969c:	mvn	r2, #127	; 0x7f
   196a0:	orr	r3, r2, r3, lsr #26
   196a4:	strb	r3, [r1, #1]
   196a8:	and	r0, r0, #63	; 0x3f
   196ac:	orr	r0, r0, r2
   196b0:	strb	r0, [r1, #2]
   196b4:	mov	r0, #3
   196b8:	bx	lr
   196bc:	cmp	r0, #2097152	; 0x200000
   196c0:	bcs	19700 <myencoding_codepoint_to_ascii_utf_8@@Base+0xbc>
   196c4:	mvn	r3, #15
   196c8:	orr	r3, r3, r0, lsr #18
   196cc:	strb	r3, [r1]
   196d0:	lsl	r2, r0, #14
   196d4:	mvn	r3, #127	; 0x7f
   196d8:	orr	r2, r3, r2, lsr #26
   196dc:	strb	r2, [r1, #1]
   196e0:	lsl	r2, r0, #20
   196e4:	orr	r2, r3, r2, lsr #26
   196e8:	strb	r2, [r1, #2]
   196ec:	and	r0, r0, #63	; 0x3f
   196f0:	orr	r0, r0, r3
   196f4:	strb	r0, [r1, #3]
   196f8:	mov	r0, #4
   196fc:	bx	lr
   19700:	mov	r0, #0
   19704:	bx	lr

00019708 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base>:
   19708:	cmp	r0, #127	; 0x7f
   1970c:	bls	1973c <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0x34>
   19710:	cmp	r0, #2048	; 0x800
   19714:	bcs	19758 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0x50>
   19718:	mvn	r3, #63	; 0x3f
   1971c:	orr	r3, r3, r0, lsr #6
   19720:	strb	r3, [r1]
   19724:	and	r0, r0, #63	; 0x3f
   19728:	mvn	r0, r0, lsl #25
   1972c:	mvn	r0, r0, lsr #25
   19730:	strb	r0, [r1, #1]
   19734:	mov	r0, #2
   19738:	bx	lr
   1973c:	ldr	r3, [pc, #152]	; 197dc <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0xd4>
   19740:	add	r3, pc, r3
   19744:	add	r0, r3, r0
   19748:	ldrb	r3, [r0, #-1688]	; 0xfffff968
   1974c:	strb	r3, [r1]
   19750:	mov	r0, #1
   19754:	bx	lr
   19758:	cmp	r0, #65536	; 0x10000
   1975c:	bcs	19790 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0x88>
   19760:	mvn	r3, #31
   19764:	orr	r3, r3, r0, lsr #12
   19768:	strb	r3, [r1]
   1976c:	lsl	r3, r0, #20
   19770:	mvn	r2, #127	; 0x7f
   19774:	orr	r3, r2, r3, lsr #26
   19778:	strb	r3, [r1, #1]
   1977c:	and	r0, r0, #63	; 0x3f
   19780:	orr	r0, r0, r2
   19784:	strb	r0, [r1, #2]
   19788:	mov	r0, #3
   1978c:	bx	lr
   19790:	cmp	r0, #2097152	; 0x200000
   19794:	bcs	197d4 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0xcc>
   19798:	mvn	r3, #15
   1979c:	orr	r3, r3, r0, lsr #18
   197a0:	strb	r3, [r1]
   197a4:	lsl	r2, r0, #14
   197a8:	mvn	r3, #127	; 0x7f
   197ac:	orr	r2, r3, r2, lsr #26
   197b0:	strb	r2, [r1, #1]
   197b4:	lsl	r2, r0, #20
   197b8:	orr	r2, r3, r2, lsr #26
   197bc:	strb	r2, [r1, #2]
   197c0:	and	r0, r0, #63	; 0x3f
   197c4:	orr	r0, r0, r3
   197c8:	strb	r0, [r1, #3]
   197cc:	mov	r0, #4
   197d0:	bx	lr
   197d4:	mov	r0, #0
   197d8:	bx	lr
   197dc:	andeq	fp, r7, ip, asr #7

000197e0 <myencoding_ascii_utf_8_to_codepoint@@Base>:
   197e0:	ldrb	r3, [r0]
   197e4:	tst	r3, #128	; 0x80
   197e8:	bne	197f8 <myencoding_ascii_utf_8_to_codepoint@@Base+0x18>
   197ec:	str	r3, [r1]
   197f0:	mov	r0, #1
   197f4:	bx	lr
   197f8:	and	r2, r3, #224	; 0xe0
   197fc:	cmp	r2, #192	; 0xc0
   19800:	beq	19824 <myencoding_ascii_utf_8_to_codepoint@@Base+0x44>
   19804:	and	r2, r3, #240	; 0xf0
   19808:	cmp	r2, #224	; 0xe0
   1980c:	beq	19848 <myencoding_ascii_utf_8_to_codepoint@@Base+0x68>
   19810:	and	r2, r3, #248	; 0xf8
   19814:	cmp	r2, #240	; 0xf0
   19818:	beq	19880 <myencoding_ascii_utf_8_to_codepoint@@Base+0xa0>
   1981c:	mov	r0, #0
   19820:	bx	lr
   19824:	lsl	r3, r3, #6
   19828:	and	r3, r3, #4032	; 0xfc0
   1982c:	str	r3, [r1]
   19830:	ldrb	r2, [r0, #1]
   19834:	and	r2, r2, #127	; 0x7f
   19838:	orr	r3, r2, r3
   1983c:	str	r3, [r1]
   19840:	mov	r0, #2
   19844:	bx	lr
   19848:	lsl	r3, r3, #12
   1984c:	and	r3, r3, #126976	; 0x1f000
   19850:	str	r3, [r1]
   19854:	ldrb	r2, [r0, #1]
   19858:	lsl	r2, r2, #6
   1985c:	and	r2, r2, #8128	; 0x1fc0
   19860:	orr	r3, r2, r3
   19864:	str	r3, [r1]
   19868:	ldrb	r2, [r0, #2]
   1986c:	and	r2, r2, #127	; 0x7f
   19870:	orr	r3, r2, r3
   19874:	str	r3, [r1]
   19878:	mov	r0, #3
   1987c:	bx	lr
   19880:	lsl	r3, r3, #18
   19884:	and	r3, r3, #3932160	; 0x3c0000
   19888:	str	r3, [r1]
   1988c:	ldrb	r2, [r0, #1]
   19890:	lsl	r2, r2, #12
   19894:	and	r2, r2, #520192	; 0x7f000
   19898:	orr	r2, r2, r3
   1989c:	str	r2, [r1]
   198a0:	ldrb	r3, [r0, #2]
   198a4:	lsl	r3, r3, #6
   198a8:	and	r3, r3, #8128	; 0x1fc0
   198ac:	orr	r3, r3, r2
   198b0:	str	r3, [r1]
   198b4:	ldrb	r2, [r0, #3]
   198b8:	and	r2, r2, #127	; 0x7f
   198bc:	orr	r3, r2, r3
   198c0:	str	r3, [r1]
   198c4:	mov	r0, #4
   198c8:	bx	lr

000198cc <myencoding_codepoint_to_ascii_utf_16@@Base>:
   198cc:	lsrs	r3, r0, #16
   198d0:	bne	198e8 <myencoding_codepoint_to_ascii_utf_16@@Base+0x1c>
   198d4:	lsr	r3, r0, #8
   198d8:	strb	r3, [r1]
   198dc:	strb	r0, [r1, #1]
   198e0:	mov	r0, #2
   198e4:	bx	lr
   198e8:	sub	r0, r0, #65536	; 0x10000
   198ec:	lsr	r3, r0, #10
   198f0:	orr	r3, r3, #55296	; 0xd800
   198f4:	lsl	r0, r0, #22
   198f8:	lsr	r0, r0, #22
   198fc:	orr	r0, r0, #56320	; 0xdc00
   19900:	lsr	r2, r3, #8
   19904:	strb	r2, [r1]
   19908:	strb	r3, [r1, #1]
   1990c:	lsr	r3, r0, #8
   19910:	strb	r3, [r1, #2]
   19914:	strb	r0, [r1, #3]
   19918:	mov	r0, #4
   1991c:	bx	lr

00019920 <myencoding_convert_to_ascii_utf_8@@Base>:
   19920:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19924:	sub	sp, sp, #28
   19928:	mov	r5, r0
   1992c:	mov	r4, r1
   19930:	mov	r8, r2
   19934:	mov	r6, r3
   19938:	ldr	r3, [r0]
   1993c:	cmp	r3, #0
   19940:	beq	1998c <myencoding_convert_to_ascii_utf_8@@Base+0x6c>
   19944:	mov	r2, #0
   19948:	str	r2, [sp]
   1994c:	str	r2, [sp, #4]
   19950:	str	r2, [sp, #8]
   19954:	str	r2, [sp, #12]
   19958:	str	r2, [sp, #16]
   1995c:	str	r2, [sp, #20]
   19960:	mov	r0, r6
   19964:	bl	1082c <myencoding_get_function_by_id@plt>
   19968:	mov	r6, r0
   1996c:	cmp	r8, #0
   19970:	beq	19a28 <myencoding_convert_to_ascii_utf_8@@Base+0x108>
   19974:	lsr	sl, r8, #1
   19978:	add	sl, sl, #6
   1997c:	mov	r9, r4
   19980:	add	r8, r4, r8
   19984:	mov	r7, sp
   19988:	b	199dc <myencoding_convert_to_ascii_utf_8@@Base+0xbc>
   1998c:	add	r0, r2, #1
   19990:	str	r0, [r5, #4]
   19994:	str	r3, [r5, #8]
   19998:	bl	10c94 <mycore_malloc@plt>
   1999c:	str	r0, [r5]
   199a0:	cmp	r0, #0
   199a4:	bne	19944 <myencoding_convert_to_ascii_utf_8@@Base+0x24>
   199a8:	mov	r0, #0
   199ac:	b	19a34 <myencoding_convert_to_ascii_utf_8@@Base+0x114>
   199b0:	ldr	r1, [r5]
   199b4:	ldr	r3, [r5, #8]
   199b8:	add	r1, r1, r3
   199bc:	ldr	r0, [sp, #12]
   199c0:	bl	10e8c <myencoding_codepoint_to_ascii_utf_8@plt>
   199c4:	ldr	r3, [r5, #8]
   199c8:	add	r0, r3, r0
   199cc:	str	r0, [r5, #8]
   199d0:	sub	r0, r4, r9
   199d4:	cmp	r4, r8
   199d8:	beq	19a34 <myencoding_convert_to_ascii_utf_8@@Base+0x114>
   199dc:	mov	r1, r7
   199e0:	ldrb	r0, [r4], #1
   199e4:	blx	r6
   199e8:	cmp	r0, #0
   199ec:	bne	199d0 <myencoding_convert_to_ascii_utf_8@@Base+0xb0>
   199f0:	ldr	r1, [r5, #8]
   199f4:	add	r2, r1, #6
   199f8:	ldr	r3, [r5, #4]
   199fc:	cmp	r2, r3
   19a00:	bcc	199b0 <myencoding_convert_to_ascii_utf_8@@Base+0x90>
   19a04:	add	fp, sl, r1
   19a08:	mov	r1, fp
   19a0c:	ldr	r0, [r5]
   19a10:	bl	fbd8 <mycore_realloc@plt>
   19a14:	cmp	r0, #0
   19a18:	beq	19a30 <myencoding_convert_to_ascii_utf_8@@Base+0x110>
   19a1c:	str	r0, [r5]
   19a20:	str	fp, [r5, #4]
   19a24:	b	199b0 <myencoding_convert_to_ascii_utf_8@@Base+0x90>
   19a28:	mov	r0, r8
   19a2c:	b	19a34 <myencoding_convert_to_ascii_utf_8@@Base+0x114>
   19a30:	mov	r0, #0
   19a34:	add	sp, sp, #28
   19a38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00019a3c <myencoding_string_append_chunk@@Base>:
   19a3c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19a40:	mov	r4, r0
   19a44:	mov	r6, r1
   19a48:	mov	r9, r2
   19a4c:	mov	r7, r3
   19a50:	ldr	r0, [sp, #32]
   19a54:	bl	1082c <myencoding_get_function_by_id@plt>
   19a58:	cmp	r7, #0
   19a5c:	beq	19acc <myencoding_string_append_chunk@@Base+0x90>
   19a60:	mov	r8, r0
   19a64:	mov	r5, r9
   19a68:	add	r7, r9, r7
   19a6c:	b	19a98 <myencoding_string_append_chunk@@Base+0x5c>
   19a70:	ldr	r1, [r4]
   19a74:	ldr	r3, [r4, #8]
   19a78:	add	r1, r1, r3
   19a7c:	ldr	r0, [r6, #12]
   19a80:	bl	10e8c <myencoding_codepoint_to_ascii_utf_8@plt>
   19a84:	ldr	r1, [r4, #8]
   19a88:	add	r0, r1, r0
   19a8c:	str	r0, [r4, #8]
   19a90:	cmp	r5, r7
   19a94:	beq	19acc <myencoding_string_append_chunk@@Base+0x90>
   19a98:	mov	r1, r6
   19a9c:	ldrb	r0, [r5], #1
   19aa0:	blx	r8
   19aa4:	cmp	r0, #0
   19aa8:	bne	19a90 <myencoding_string_append_chunk@@Base+0x54>
   19aac:	ldr	r1, [r4, #8]
   19ab0:	add	r1, r1, #5
   19ab4:	ldr	r3, [r4, #4]
   19ab8:	cmp	r1, r3
   19abc:	bcc	19a70 <myencoding_string_append_chunk@@Base+0x34>
   19ac0:	mov	r0, r4
   19ac4:	bl	10964 <mycore_string_realloc@plt>
   19ac8:	b	19a70 <myencoding_string_append_chunk@@Base+0x34>
   19acc:	ldr	r1, [r4, #8]
   19ad0:	ldr	r3, [r4, #4]
   19ad4:	cmp	r1, r3
   19ad8:	bcs	19af0 <myencoding_string_append_chunk@@Base+0xb4>
   19adc:	ldr	r2, [r4]
   19ae0:	ldr	r3, [r4, #8]
   19ae4:	mov	r1, #0
   19ae8:	strb	r1, [r2, r3]
   19aec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19af0:	add	r1, r1, #1
   19af4:	mov	r0, r4
   19af8:	bl	10964 <mycore_string_realloc@plt>
   19afc:	b	19adc <myencoding_string_append_chunk@@Base+0xa0>

00019b00 <myencoding_string_append@@Base>:
   19b00:	push	{r4, r5, r6, r7, r8, lr}
   19b04:	sub	sp, sp, #32
   19b08:	mov	r5, r0
   19b0c:	mov	r6, r1
   19b10:	mov	r7, r2
   19b14:	mov	r8, r3
   19b18:	add	r4, sp, #8
   19b1c:	mov	r0, r4
   19b20:	bl	101c0 <myencoding_result_clean@plt>
   19b24:	str	r8, [sp]
   19b28:	mov	r3, r7
   19b2c:	mov	r2, r6
   19b30:	mov	r1, r4
   19b34:	mov	r0, r5
   19b38:	bl	fc14 <myencoding_string_append_chunk@plt>
   19b3c:	add	sp, sp, #32
   19b40:	pop	{r4, r5, r6, r7, r8, pc}

00019b44 <myencoding_string_append_one@@Base>:
   19b44:	push	{r4, r5, r6, lr}
   19b48:	mov	r4, r0
   19b4c:	mov	r5, r1
   19b50:	mov	r6, r2
   19b54:	mov	r0, r3
   19b58:	bl	1082c <myencoding_get_function_by_id@plt>
   19b5c:	mov	r3, r0
   19b60:	mov	r1, r5
   19b64:	mov	r0, r6
   19b68:	blx	r3
   19b6c:	cmp	r0, #0
   19b70:	popne	{r4, r5, r6, pc}
   19b74:	ldr	r1, [r4, #8]
   19b78:	add	r1, r1, #5
   19b7c:	ldr	r3, [r4, #4]
   19b80:	cmp	r1, r3
   19b84:	bcs	19bb8 <myencoding_string_append_one@@Base+0x74>
   19b88:	ldr	r1, [r4]
   19b8c:	ldr	r3, [r4, #8]
   19b90:	add	r1, r1, r3
   19b94:	ldr	r0, [r5, #12]
   19b98:	bl	10e8c <myencoding_codepoint_to_ascii_utf_8@plt>
   19b9c:	ldr	r3, [r4, #8]
   19ba0:	add	r0, r0, r3
   19ba4:	str	r0, [r4, #8]
   19ba8:	ldr	r3, [r4]
   19bac:	mov	r2, #0
   19bb0:	strb	r2, [r3, r0]
   19bb4:	pop	{r4, r5, r6, pc}
   19bb8:	mov	r0, r4
   19bbc:	bl	10964 <mycore_string_realloc@plt>
   19bc0:	b	19b88 <myencoding_string_append_one@@Base+0x44>

00019bc4 <myencoding_string_append_chunk_lowercase_ascii@@Base>:
   19bc4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19bc8:	mov	r5, r0
   19bcc:	mov	r6, r1
   19bd0:	mov	r9, r2
   19bd4:	mov	r7, r3
   19bd8:	ldr	r0, [sp, #32]
   19bdc:	bl	1082c <myencoding_get_function_by_id@plt>
   19be0:	cmp	r7, #0
   19be4:	beq	19c80 <myencoding_string_append_chunk_lowercase_ascii@@Base+0xbc>
   19be8:	mov	r8, r0
   19bec:	mov	r4, r9
   19bf0:	add	r7, r9, r7
   19bf4:	ldr	r9, [pc, #184]	; 19cb4 <myencoding_string_append_chunk_lowercase_ascii@@Base+0xf0>
   19bf8:	add	r9, pc, r9
   19bfc:	b	19c44 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x80>
   19c00:	ldr	r1, [r5]
   19c04:	ldr	r3, [r5, #8]
   19c08:	add	r1, r1, r3
   19c0c:	ldr	r0, [r6, #12]
   19c10:	bl	10e8c <myencoding_codepoint_to_ascii_utf_8@plt>
   19c14:	cmp	r0, #1
   19c18:	ldreq	r2, [r5]
   19c1c:	ldreq	r3, [r5, #8]
   19c20:	ldrbeq	r1, [sl]
   19c24:	ldrbeq	r1, [r9, r1]
   19c28:	strbeq	r1, [r2, r3]
   19c2c:	ldr	r1, [r5, #8]
   19c30:	add	r0, r1, r0
   19c34:	str	r0, [r5, #8]
   19c38:	add	r4, r4, #1
   19c3c:	cmp	r4, r7
   19c40:	beq	19c80 <myencoding_string_append_chunk_lowercase_ascii@@Base+0xbc>
   19c44:	mov	sl, r4
   19c48:	mov	r1, r6
   19c4c:	ldrb	r0, [r4]
   19c50:	blx	r8
   19c54:	cmp	r0, #0
   19c58:	bne	19c38 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x74>
   19c5c:	ldr	r1, [r5, #8]
   19c60:	add	r2, r1, #5
   19c64:	ldr	r3, [r5, #4]
   19c68:	cmp	r2, r3
   19c6c:	bcc	19c00 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x3c>
   19c70:	add	r1, r1, #6
   19c74:	mov	r0, r5
   19c78:	bl	10964 <mycore_string_realloc@plt>
   19c7c:	b	19c00 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x3c>
   19c80:	ldr	r1, [r5, #8]
   19c84:	ldr	r3, [r5, #4]
   19c88:	cmp	r1, r3
   19c8c:	bcs	19ca4 <myencoding_string_append_chunk_lowercase_ascii@@Base+0xe0>
   19c90:	ldr	r2, [r5]
   19c94:	ldr	r3, [r5, #8]
   19c98:	mov	r1, #0
   19c9c:	strb	r1, [r2, r3]
   19ca0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19ca4:	add	r1, r1, #1
   19ca8:	mov	r0, r5
   19cac:	bl	10964 <mycore_string_realloc@plt>
   19cb0:	b	19c90 <myencoding_string_append_chunk_lowercase_ascii@@Base+0xcc>
   19cb4:	andeq	sl, r7, ip, ror r9

00019cb8 <myencoding_string_append_lowercase_ascii@@Base>:
   19cb8:	push	{r4, r5, r6, r7, r8, lr}
   19cbc:	sub	sp, sp, #32
   19cc0:	mov	r5, r0
   19cc4:	mov	r6, r1
   19cc8:	mov	r7, r2
   19ccc:	mov	r8, r3
   19cd0:	add	r4, sp, #8
   19cd4:	mov	r0, r4
   19cd8:	bl	101c0 <myencoding_result_clean@plt>
   19cdc:	str	r8, [sp]
   19ce0:	mov	r3, r7
   19ce4:	mov	r2, r6
   19ce8:	mov	r1, r4
   19cec:	mov	r0, r5
   19cf0:	bl	10c88 <myencoding_string_append_chunk_lowercase_ascii@plt>
   19cf4:	add	sp, sp, #32
   19cf8:	pop	{r4, r5, r6, r7, r8, pc}

00019cfc <myhtml_callback_before_token_done@@Base>:
   19cfc:	ldr	r0, [r0, #220]	; 0xdc
   19d00:	bx	lr

00019d04 <myhtml_callback_after_token_done@@Base>:
   19d04:	ldr	r0, [r0, #224]	; 0xe0
   19d08:	bx	lr

00019d0c <myhtml_callback_before_token_done_set@@Base>:
   19d0c:	str	r1, [r0, #220]	; 0xdc
   19d10:	str	r2, [r0, #228]	; 0xe4
   19d14:	bx	lr

00019d18 <myhtml_callback_after_token_done_set@@Base>:
   19d18:	str	r1, [r0, #224]	; 0xe0
   19d1c:	str	r2, [r0, #232]	; 0xe8
   19d20:	bx	lr

00019d24 <myhtml_callback_tree_node_insert@@Base>:
   19d24:	ldr	r0, [r0, #236]	; 0xec
   19d28:	bx	lr

00019d2c <myhtml_callback_tree_node_remove@@Base>:
   19d2c:	ldr	r0, [r0, #240]	; 0xf0
   19d30:	bx	lr

00019d34 <myhtml_callback_tree_node_insert_set@@Base>:
   19d34:	str	r1, [r0, #236]	; 0xec
   19d38:	str	r2, [r0, #244]	; 0xf4
   19d3c:	bx	lr

00019d40 <myhtml_callback_tree_node_remove_set@@Base>:
   19d40:	str	r1, [r0, #240]	; 0xf0
   19d44:	str	r2, [r0, #248]	; 0xf8
   19d48:	bx	lr

00019d4c <myhtml_charef_find@@Base>:
   19d4c:	push	{r4, r5, r6, r7, lr}
   19d50:	ldrb	ip, [r0]
   19d54:	ldr	r6, [pc, #200]	; 19e24 <myhtml_charef_find@@Base+0xd8>
   19d58:	add	r6, pc, r6
   19d5c:	ldr	r7, [pc, #196]	; 19e28 <myhtml_charef_find@@Base+0xdc>
   19d60:	add	r7, pc, r7
   19d64:	b	19d8c <myhtml_charef_find@@Base+0x40>
   19d68:	add	r4, r4, #1
   19d6c:	str	r4, [r1]
   19d70:	add	lr, ip, ip, lsl #1
   19d74:	add	lr, r7, lr, lsl #3
   19d78:	ldr	lr, [lr, #4]
   19d7c:	cmp	lr, #0
   19d80:	cmpne	r4, r2
   19d84:	bcs	19dbc <myhtml_charef_find@@Base+0x70>
   19d88:	mov	ip, lr
   19d8c:	add	lr, ip, ip, lsl #1
   19d90:	ldrb	lr, [r6, lr, lsl #3]
   19d94:	cmp	lr, #0
   19d98:	beq	19df0 <myhtml_charef_find@@Base+0xa4>
   19d9c:	ldr	r4, [r1]
   19da0:	ldrb	r5, [r0, r4]
   19da4:	cmp	lr, r5
   19da8:	beq	19d68 <myhtml_charef_find@@Base+0x1c>
   19dac:	cmp	lr, r5
   19db0:	bcs	19df0 <myhtml_charef_find@@Base+0xa4>
   19db4:	add	ip, ip, #1
   19db8:	b	19d8c <myhtml_charef_find@@Base+0x40>
   19dbc:	cmp	r3, #0
   19dc0:	beq	19ddc <myhtml_charef_find@@Base+0x90>
   19dc4:	add	r2, ip, ip, lsl #1
   19dc8:	ldr	r1, [pc, #92]	; 19e2c <myhtml_charef_find@@Base+0xe0>
   19dcc:	add	r1, pc, r1
   19dd0:	add	r2, r1, r2, lsl #3
   19dd4:	ldr	r2, [r2, #20]
   19dd8:	str	r2, [r3]
   19ddc:	add	ip, ip, ip, lsl #1
   19de0:	ldr	r0, [pc, #72]	; 19e30 <myhtml_charef_find@@Base+0xe4>
   19de4:	add	r0, pc, r0
   19de8:	add	r0, r0, ip, lsl #3
   19dec:	pop	{r4, r5, r6, r7, pc}
   19df0:	cmp	r3, #0
   19df4:	beq	19e10 <myhtml_charef_find@@Base+0xc4>
   19df8:	add	r2, ip, ip, lsl #1
   19dfc:	ldr	r1, [pc, #48]	; 19e34 <myhtml_charef_find@@Base+0xe8>
   19e00:	add	r1, pc, r1
   19e04:	add	r2, r1, r2, lsl #3
   19e08:	ldr	r2, [r2, #20]
   19e0c:	str	r2, [r3]
   19e10:	add	ip, ip, ip, lsl #1
   19e14:	ldr	r0, [pc, #28]	; 19e38 <myhtml_charef_find@@Base+0xec>
   19e18:	add	r0, pc, r0
   19e1c:	add	r0, r0, ip, lsl #3
   19e20:	pop	{r4, r5, r6, r7, pc}
   19e24:	andeq	sl, r7, ip, lsl r9
   19e28:	andeq	sl, r7, r4, lsl r9
   19e2c:	andeq	sl, r7, r8, lsr #17
   19e30:	muleq	r7, r0, r8
   19e34:	andeq	sl, r7, r4, ror r8
   19e38:	andeq	sl, r7, ip, asr r8

00019e3c <myhtml_charef_get_first_position@@Base>:
   19e3c:	add	r0, r0, r0, lsl #1
   19e40:	ldr	r3, [pc, #8]	; 19e50 <myhtml_charef_get_first_position@@Base+0x14>
   19e44:	add	r3, pc, r3
   19e48:	add	r0, r3, r0, lsl #3
   19e4c:	bx	lr
   19e50:	andeq	sl, r7, r0, lsr r8

00019e54 <myhtml_charef_find_by_pos@@Base>:
   19e54:	push	{r4, r5, r6, r7, r8, r9, lr}
   19e58:	ldr	r6, [sp, #28]
   19e5c:	ldr	ip, [r2]
   19e60:	ldrb	ip, [r1, ip]
   19e64:	cmp	ip, #38	; 0x26
   19e68:	beq	19e98 <myhtml_charef_find_by_pos@@Base+0x44>
   19e6c:	mov	ip, #0
   19e70:	str	ip, [r6, #12]
   19e74:	ldr	r5, [pc, #484]	; 1a060 <myhtml_charef_find_by_pos@@Base+0x20c>
   19e78:	add	r5, pc, r5
   19e7c:	ldr	r7, [pc, #480]	; 1a064 <myhtml_charef_find_by_pos@@Base+0x210>
   19e80:	add	r7, pc, r7
   19e84:	ldr	r8, [pc, #476]	; 1a068 <myhtml_charef_find_by_pos@@Base+0x214>
   19e88:	add	r8, pc, r8
   19e8c:	ldr	r9, [pc, #472]	; 1a06c <myhtml_charef_find_by_pos@@Base+0x218>
   19e90:	add	r9, pc, r9
   19e94:	b	19f30 <myhtml_charef_find_by_pos@@Base+0xdc>
   19e98:	mov	r3, #1
   19e9c:	str	r3, [r6, #12]
   19ea0:	ldr	r3, [r6]
   19ea4:	ldr	r1, [r3, #20]
   19ea8:	cmp	r1, #0
   19eac:	bne	1a034 <myhtml_charef_find_by_pos@@Base+0x1e0>
   19eb0:	ldr	r3, [r6, #4]
   19eb4:	cmp	r3, #0
   19eb8:	beq	1a03c <myhtml_charef_find_by_pos@@Base+0x1e8>
   19ebc:	ldr	r3, [r6, #8]
   19ec0:	str	r3, [r2]
   19ec4:	ldr	r3, [r6, #4]
   19ec8:	b	1a034 <myhtml_charef_find_by_pos@@Base+0x1e0>
   19ecc:	cmp	lr, #59	; 0x3b
   19ed0:	beq	19f60 <myhtml_charef_find_by_pos@@Base+0x10c>
   19ed4:	add	r4, r4, #1
   19ed8:	str	r4, [r2]
   19edc:	add	ip, r0, r0, lsl #1
   19ee0:	add	ip, r7, ip, lsl #3
   19ee4:	ldr	lr, [ip, #4]
   19ee8:	cmp	lr, #0
   19eec:	beq	19f80 <myhtml_charef_find_by_pos@@Base+0x12c>
   19ef0:	cmp	r4, r3
   19ef4:	bcs	19f9c <myhtml_charef_find_by_pos@@Base+0x148>
   19ef8:	ldrb	ip, [r1, r4]
   19efc:	cmp	ip, #38	; 0x26
   19f00:	beq	19fcc <myhtml_charef_find_by_pos@@Base+0x178>
   19f04:	add	ip, r0, r0, lsl #1
   19f08:	add	ip, r8, ip, lsl #3
   19f0c:	ldr	ip, [ip, #20]
   19f10:	cmp	ip, #0
   19f14:	moveq	r0, lr
   19f18:	beq	19f30 <myhtml_charef_find_by_pos@@Base+0xdc>
   19f1c:	str	r4, [r6, #8]
   19f20:	add	r0, r0, r0, lsl #1
   19f24:	add	r0, r9, r0, lsl #3
   19f28:	str	r0, [r6, #4]
   19f2c:	mov	r0, lr
   19f30:	add	ip, r0, r0, lsl #1
   19f34:	ldrb	ip, [r5, ip, lsl #3]
   19f38:	cmp	ip, #0
   19f3c:	beq	1a014 <myhtml_charef_find_by_pos@@Base+0x1c0>
   19f40:	ldr	r4, [r2]
   19f44:	ldrb	lr, [r1, r4]
   19f48:	cmp	ip, lr
   19f4c:	beq	19ecc <myhtml_charef_find_by_pos@@Base+0x78>
   19f50:	cmp	ip, lr
   19f54:	bcs	1a014 <myhtml_charef_find_by_pos@@Base+0x1c0>
   19f58:	add	r0, r0, #1
   19f5c:	b	19f30 <myhtml_charef_find_by_pos@@Base+0xdc>
   19f60:	mov	r3, #1
   19f64:	str	r3, [r6, #12]
   19f68:	add	r0, r0, r0, lsl r3
   19f6c:	ldr	r3, [pc, #252]	; 1a070 <myhtml_charef_find_by_pos@@Base+0x21c>
   19f70:	add	r3, pc, r3
   19f74:	add	r3, r3, r0, lsl #3
   19f78:	str	r3, [r6]
   19f7c:	b	1a034 <myhtml_charef_find_by_pos@@Base+0x1e0>
   19f80:	mov	r3, #1
   19f84:	str	r3, [r6, #12]
   19f88:	add	r0, r0, r0, lsl r3
   19f8c:	ldr	r3, [pc, #224]	; 1a074 <myhtml_charef_find_by_pos@@Base+0x220>
   19f90:	add	r3, pc, r3
   19f94:	add	r3, r3, r0, lsl #3
   19f98:	b	1a034 <myhtml_charef_find_by_pos@@Base+0x1e0>
   19f9c:	ldr	r1, [pc, #212]	; 1a078 <myhtml_charef_find_by_pos@@Base+0x224>
   19fa0:	add	r1, pc, r1
   19fa4:	lsl	ip, r0, #1
   19fa8:	add	r3, ip, r0
   19fac:	add	r3, r1, r3, lsl #3
   19fb0:	str	r3, [r6]
   19fb4:	ldr	r1, [r3, #20]
   19fb8:	cmp	r1, #0
   19fbc:	ldrne	r2, [r2]
   19fc0:	strne	r2, [r6, #8]
   19fc4:	strne	r3, [r6, #4]
   19fc8:	b	1a034 <myhtml_charef_find_by_pos@@Base+0x1e0>
   19fcc:	mov	r3, #1
   19fd0:	str	r3, [r6, #12]
   19fd4:	ldr	r1, [pc, #160]	; 1a07c <myhtml_charef_find_by_pos@@Base+0x228>
   19fd8:	add	r1, pc, r1
   19fdc:	lsl	ip, r0, r3
   19fe0:	add	r3, ip, r0
   19fe4:	add	r3, r1, r3, lsl #3
   19fe8:	str	r3, [r6]
   19fec:	ldr	r1, [r3, #20]
   19ff0:	cmp	r1, #0
   19ff4:	bne	1a034 <myhtml_charef_find_by_pos@@Base+0x1e0>
   19ff8:	ldr	r3, [r6, #4]
   19ffc:	cmp	r3, #0
   1a000:	beq	1a048 <myhtml_charef_find_by_pos@@Base+0x1f4>
   1a004:	ldr	r3, [r6, #8]
   1a008:	str	r3, [r2]
   1a00c:	ldr	r3, [r6, #4]
   1a010:	b	1a034 <myhtml_charef_find_by_pos@@Base+0x1e0>
   1a014:	mov	r3, #1
   1a018:	str	r3, [r6, #12]
   1a01c:	ldr	r3, [r6, #4]
   1a020:	cmp	r3, #0
   1a024:	beq	1a054 <myhtml_charef_find_by_pos@@Base+0x200>
   1a028:	ldr	r3, [r6, #8]
   1a02c:	str	r3, [r2]
   1a030:	ldr	r3, [r6, #4]
   1a034:	mov	r0, r3
   1a038:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1a03c:	ldr	r3, [pc, #60]	; 1a080 <myhtml_charef_find_by_pos@@Base+0x22c>
   1a040:	add	r3, pc, r3
   1a044:	b	1a034 <myhtml_charef_find_by_pos@@Base+0x1e0>
   1a048:	ldr	r3, [pc, #52]	; 1a084 <myhtml_charef_find_by_pos@@Base+0x230>
   1a04c:	add	r3, pc, r3
   1a050:	b	1a034 <myhtml_charef_find_by_pos@@Base+0x1e0>
   1a054:	ldr	r3, [pc, #44]	; 1a088 <myhtml_charef_find_by_pos@@Base+0x234>
   1a058:	add	r3, pc, r3
   1a05c:	b	1a034 <myhtml_charef_find_by_pos@@Base+0x1e0>
   1a060:	strdeq	sl, [r7], -ip
   1a064:	strdeq	sl, [r7], -r4
   1a068:	andeq	sl, r7, ip, ror #15
   1a06c:	andeq	sl, r7, r4, ror #15
   1a070:	andeq	sl, r7, r4, lsl #14
   1a074:	andeq	sl, r7, r4, ror #13
   1a078:	ldrdeq	sl, [r7], -r4
   1a07c:	muleq	r7, ip, r6
   1a080:	andeq	sl, r7, r4, lsr r6
   1a084:	andeq	sl, r7, r8, lsr #12
   1a088:	andeq	sl, r7, ip, lsl r6

0001a08c <myhtml_data_process_state_ampersand_data@@Base>:
   1a08c:	push	{r4, r5, r6, r7, r8, r9, lr}
   1a090:	sub	sp, sp, #20
   1a094:	mov	r4, r0
   1a098:	mov	r5, r1
   1a09c:	mov	r7, r2
   1a0a0:	add	r2, sp, #16
   1a0a4:	str	r3, [r2, #-4]!
   1a0a8:	ldr	r9, [pc, #620]	; 1a31c <myhtml_data_process_state_ampersand_data@@Base+0x290>
   1a0ac:	add	r9, pc, r9
   1a0b0:	mov	r6, r3
   1a0b4:	mov	r3, r0
   1a0b8:	ldr	r1, [r3, #44]!	; 0x2c
   1a0bc:	ldr	r0, [r1, #4]
   1a0c0:	str	r3, [sp]
   1a0c4:	ldr	r3, [sp, #48]	; 0x30
   1a0c8:	mov	r1, r7
   1a0cc:	bl	107c0 <myhtml_charef_find_by_pos@plt>
   1a0d0:	ldr	r3, [r4, #56]	; 0x38
   1a0d4:	cmp	r3, #0
   1a0d8:	beq	1a2a4 <myhtml_data_process_state_ampersand_data@@Base+0x218>
   1a0dc:	mov	r8, r0
   1a0e0:	ldr	r3, [pc, #568]	; 1a320 <myhtml_data_process_state_ampersand_data@@Base+0x294>
   1a0e4:	ldr	r3, [r9, r3]
   1a0e8:	str	r3, [r4]
   1a0ec:	ldr	r2, [sp, #12]
   1a0f0:	ldrb	r3, [r7, r2]
   1a0f4:	cmp	r3, #59	; 0x3b
   1a0f8:	addeq	r2, r2, #1
   1a0fc:	streq	r2, [sp, #12]
   1a100:	beq	1a1a4 <myhtml_data_process_state_ampersand_data@@Base+0x118>
   1a104:	ldrb	r1, [r4, #60]	; 0x3c
   1a108:	cmp	r1, #0
   1a10c:	beq	1a1a4 <myhtml_data_process_state_ampersand_data@@Base+0x118>
   1a110:	cmp	r3, #61	; 0x3d
   1a114:	beq	1a12c <myhtml_data_process_state_ampersand_data@@Base+0xa0>
   1a118:	ldr	r1, [pc, #516]	; 1a324 <myhtml_data_process_state_ampersand_data@@Base+0x298>
   1a11c:	add	r1, pc, r1
   1a120:	ldr	r3, [r1, r3, lsl #2]
   1a124:	cmp	r3, #255	; 0xff
   1a128:	beq	1a1a4 <myhtml_data_process_state_ampersand_data@@Base+0x118>
   1a12c:	ldr	r3, [r4, #32]
   1a130:	sub	r2, r2, r6
   1a134:	add	r1, r7, r6
   1a138:	mov	r0, r5
   1a13c:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   1a140:	add	r0, r6, r0
   1a144:	ldr	r2, [sp, #12]
   1a148:	cmp	r0, r2
   1a14c:	beq	1a174 <myhtml_data_process_state_ampersand_data@@Base+0xe8>
   1a150:	ldr	r3, [r4, #4]
   1a154:	cmp	r3, #0
   1a158:	bne	1a17c <myhtml_data_process_state_ampersand_data@@Base+0xf0>
   1a15c:	ldrb	r3, [r4, #61]	; 0x3d
   1a160:	sub	r2, r2, r0
   1a164:	add	r1, r7, r0
   1a168:	mov	r0, r5
   1a16c:	bl	101cc <myhtml_string_append_with_preprocessing@plt>
   1a170:	str	r0, [r4, #32]
   1a174:	ldr	r0, [sp, #12]
   1a178:	b	1a218 <myhtml_data_process_state_ampersand_data@@Base+0x18c>
   1a17c:	ldrb	r1, [r4, #61]	; 0x3d
   1a180:	str	r1, [sp, #4]
   1a184:	str	r3, [sp]
   1a188:	sub	r3, r2, r0
   1a18c:	add	r2, r7, r0
   1a190:	add	r1, r4, #8
   1a194:	mov	r0, r5
   1a198:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1a19c:	str	r0, [r4, #32]
   1a1a0:	b	1a174 <myhtml_data_process_state_ampersand_data@@Base+0xe8>
   1a1a4:	ldr	r3, [r8, #20]
   1a1a8:	cmp	r3, #0
   1a1ac:	beq	1a22c <myhtml_data_process_state_ampersand_data@@Base+0x1a0>
   1a1b0:	add	r7, r8, #12
   1a1b4:	mov	r6, #0
   1a1b8:	ldr	r1, [r5, #8]
   1a1bc:	add	r1, r1, #5
   1a1c0:	ldr	r3, [r5, #4]
   1a1c4:	cmp	r1, r3
   1a1c8:	bcs	1a220 <myhtml_data_process_state_ampersand_data@@Base+0x194>
   1a1cc:	ldr	r1, [r5]
   1a1d0:	ldr	r3, [r4, #36]	; 0x24
   1a1d4:	add	r1, r1, r3
   1a1d8:	ldr	r0, [r7], #4
   1a1dc:	bl	10e8c <myencoding_codepoint_to_ascii_utf_8@plt>
   1a1e0:	ldr	r3, [r4, #36]	; 0x24
   1a1e4:	add	r0, r0, r3
   1a1e8:	str	r0, [r4, #36]	; 0x24
   1a1ec:	add	r6, r6, #1
   1a1f0:	ldr	r3, [r8, #20]
   1a1f4:	cmp	r3, r6
   1a1f8:	bhi	1a1b8 <myhtml_data_process_state_ampersand_data@@Base+0x12c>
   1a1fc:	str	r0, [r5, #8]
   1a200:	ldr	r3, [r5]
   1a204:	mov	r2, #0
   1a208:	strb	r2, [r3, r0]
   1a20c:	mov	r3, #0
   1a210:	str	r3, [r4, #48]	; 0x30
   1a214:	ldr	r0, [sp, #12]
   1a218:	add	sp, sp, #20
   1a21c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1a220:	mov	r0, r5
   1a224:	bl	10964 <mycore_string_realloc@plt>
   1a228:	b	1a1cc <myhtml_data_process_state_ampersand_data@@Base+0x140>
   1a22c:	ldr	r3, [r4, #32]
   1a230:	ldr	r2, [sp, #12]
   1a234:	sub	r2, r2, r6
   1a238:	add	r1, r7, r6
   1a23c:	mov	r0, r5
   1a240:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   1a244:	add	r0, r6, r0
   1a248:	ldr	r2, [sp, #12]
   1a24c:	cmp	r0, r2
   1a250:	beq	1a20c <myhtml_data_process_state_ampersand_data@@Base+0x180>
   1a254:	ldr	r3, [r4, #4]
   1a258:	cmp	r3, #0
   1a25c:	bne	1a27c <myhtml_data_process_state_ampersand_data@@Base+0x1f0>
   1a260:	ldrb	r3, [r4, #61]	; 0x3d
   1a264:	sub	r2, r2, r0
   1a268:	add	r1, r7, r0
   1a26c:	mov	r0, r5
   1a270:	bl	101cc <myhtml_string_append_with_preprocessing@plt>
   1a274:	str	r0, [r4, #32]
   1a278:	b	1a20c <myhtml_data_process_state_ampersand_data@@Base+0x180>
   1a27c:	ldrb	r1, [r4, #61]	; 0x3d
   1a280:	str	r1, [sp, #4]
   1a284:	str	r3, [sp]
   1a288:	sub	r3, r2, r0
   1a28c:	add	r2, r7, r0
   1a290:	add	r1, r4, #8
   1a294:	mov	r0, r5
   1a298:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1a29c:	str	r0, [r4, #32]
   1a2a0:	b	1a20c <myhtml_data_process_state_ampersand_data@@Base+0x180>
   1a2a4:	ldr	r3, [r4, #32]
   1a2a8:	ldr	r2, [sp, #12]
   1a2ac:	sub	r2, r2, r6
   1a2b0:	add	r1, r7, r6
   1a2b4:	mov	r0, r5
   1a2b8:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   1a2bc:	add	r0, r6, r0
   1a2c0:	ldr	r2, [sp, #12]
   1a2c4:	cmp	r0, r2
   1a2c8:	beq	1a214 <myhtml_data_process_state_ampersand_data@@Base+0x188>
   1a2cc:	ldr	r3, [r4, #4]
   1a2d0:	cmp	r3, #0
   1a2d4:	bne	1a2f4 <myhtml_data_process_state_ampersand_data@@Base+0x268>
   1a2d8:	ldrb	r3, [r4, #61]	; 0x3d
   1a2dc:	sub	r2, r2, r0
   1a2e0:	add	r1, r7, r0
   1a2e4:	mov	r0, r5
   1a2e8:	bl	101cc <myhtml_string_append_with_preprocessing@plt>
   1a2ec:	str	r0, [r4, #32]
   1a2f0:	b	1a214 <myhtml_data_process_state_ampersand_data@@Base+0x188>
   1a2f4:	ldrb	r1, [r4, #61]	; 0x3d
   1a2f8:	str	r1, [sp, #4]
   1a2fc:	str	r3, [sp]
   1a300:	sub	r3, r2, r0
   1a304:	add	r2, r7, r0
   1a308:	add	r1, r4, #8
   1a30c:	mov	r0, r5
   1a310:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1a314:	str	r0, [r4, #32]
   1a318:	b	1a214 <myhtml_data_process_state_ampersand_data@@Base+0x188>
   1a31c:	andeq	ip, pc, ip, asr #30
   1a320:			; <UNDEFINED> instruction: 0x000009b8
   1a324:	andeq	r2, lr, r8, asr #17

0001a328 <myhtml_data_process_entry_clean@@Base>:
   1a328:	push	{r4, r5, r6, lr}
   1a32c:	mov	r5, r0
   1a330:	ldr	r4, [pc, #28]	; 1a354 <myhtml_data_process_entry_clean@@Base+0x2c>
   1a334:	add	r4, pc, r4
   1a338:	mov	r2, #64	; 0x40
   1a33c:	mov	r1, #0
   1a340:	bl	108b0 <memset@plt>
   1a344:	ldr	r3, [pc, #12]	; 1a358 <myhtml_data_process_entry_clean@@Base+0x30>
   1a348:	ldr	r3, [r4, r3]
   1a34c:	str	r3, [r5]
   1a350:	pop	{r4, r5, r6, pc}
   1a354:	andeq	ip, pc, r4, asr #25
   1a358:			; <UNDEFINED> instruction: 0x000009b8

0001a35c <myhtml_data_process_string_append_char@@Base>:
   1a35c:	push	{r4, r5, r6, lr}
   1a360:	mov	r4, r0
   1a364:	mov	r5, r1
   1a368:	ldr	r1, [r0, #8]
   1a36c:	add	r1, r1, #2
   1a370:	ldr	r3, [r0, #4]
   1a374:	cmp	r1, r3
   1a378:	bcs	1a3a4 <myhtml_data_process_string_append_char@@Base+0x48>
   1a37c:	ldr	r2, [r4]
   1a380:	ldr	r3, [r4, #8]
   1a384:	strb	r5, [r2, r3]
   1a388:	ldr	r3, [r4, #8]
   1a38c:	add	r3, r3, #1
   1a390:	str	r3, [r4, #8]
   1a394:	ldr	r2, [r4]
   1a398:	mov	r1, #0
   1a39c:	strb	r1, [r2, r3]
   1a3a0:	pop	{r4, r5, r6, pc}
   1a3a4:	bl	10964 <mycore_string_realloc@plt>
   1a3a8:	b	1a37c <myhtml_data_process_string_append_char@@Base+0x20>

0001a3ac <myhtml_data_process_state_data@@Base>:
   1a3ac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a3b0:	sub	sp, sp, #8
   1a3b4:	mov	r6, r0
   1a3b8:	mov	r8, r1
   1a3bc:	mov	r7, r2
   1a3c0:	mov	r5, r3
   1a3c4:	ldr	r0, [sp, #40]	; 0x28
   1a3c8:	ldr	r9, [pc, #360]	; 1a538 <myhtml_data_process_state_data@@Base+0x18c>
   1a3cc:	add	r9, pc, r9
   1a3d0:	cmp	r3, r0
   1a3d4:	bcs	1a4c4 <myhtml_data_process_state_data@@Base+0x118>
   1a3d8:	add	r1, r2, r3
   1a3dc:	ldrb	r3, [r2, r3]
   1a3e0:	cmp	r3, #38	; 0x26
   1a3e4:	addne	r3, r5, #1
   1a3e8:	addne	r3, r2, r3
   1a3ec:	movne	r4, r5
   1a3f0:	beq	1a484 <myhtml_data_process_state_data@@Base+0xd8>
   1a3f4:	add	r4, r4, #1
   1a3f8:	cmp	r0, r4
   1a3fc:	beq	1a4c8 <myhtml_data_process_state_data@@Base+0x11c>
   1a400:	mov	sl, r3
   1a404:	add	r3, r3, #1
   1a408:	ldrb	r2, [sl]
   1a40c:	cmp	r2, #38	; 0x26
   1a410:	bne	1a3f4 <myhtml_data_process_state_data@@Base+0x48>
   1a414:	ldr	r3, [r6, #32]
   1a418:	sub	r2, r4, r5
   1a41c:	mov	r0, r8
   1a420:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   1a424:	add	r5, r5, r0
   1a428:	cmp	r5, r4
   1a42c:	beq	1a454 <myhtml_data_process_state_data@@Base+0xa8>
   1a430:	ldr	r3, [r6, #4]
   1a434:	cmp	r3, #0
   1a438:	bne	1a490 <myhtml_data_process_state_data@@Base+0xe4>
   1a43c:	ldrb	r3, [r6, #61]	; 0x3d
   1a440:	sub	r2, r4, r5
   1a444:	add	r1, r7, r5
   1a448:	mov	r0, r8
   1a44c:	bl	101cc <myhtml_string_append_with_preprocessing@plt>
   1a450:	str	r0, [r6, #32]
   1a454:	ldr	r3, [r8, #8]
   1a458:	str	r3, [r6, #36]	; 0x24
   1a45c:	ldr	r3, [pc, #216]	; 1a53c <myhtml_data_process_state_data@@Base+0x190>
   1a460:	ldr	r3, [r9, r3]
   1a464:	str	r3, [r6]
   1a468:	ldrb	r1, [sl]
   1a46c:	mov	r0, r8
   1a470:	bl	1106c <myhtml_data_process_string_append_char@plt>
   1a474:	add	r4, r4, #1
   1a478:	mov	r0, r4
   1a47c:	add	sp, sp, #8
   1a480:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a484:	mov	sl, r1
   1a488:	mov	r4, r5
   1a48c:	b	1a414 <myhtml_data_process_state_data@@Base+0x68>
   1a490:	add	r1, r6, #8
   1a494:	ldrb	r2, [r6, #61]	; 0x3d
   1a498:	str	r2, [sp, #4]
   1a49c:	str	r3, [sp]
   1a4a0:	sub	r3, r4, r5
   1a4a4:	add	r2, r7, r5
   1a4a8:	mov	r5, r1
   1a4ac:	mov	r0, r8
   1a4b0:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1a4b4:	str	r0, [r6, #32]
   1a4b8:	mov	r0, r5
   1a4bc:	bl	101c0 <myencoding_result_clean@plt>
   1a4c0:	b	1a454 <myhtml_data_process_state_data@@Base+0xa8>
   1a4c4:	mov	r4, r3
   1a4c8:	ldr	r3, [r6, #32]
   1a4cc:	sub	r2, r4, r5
   1a4d0:	add	r1, r7, r5
   1a4d4:	mov	r0, r8
   1a4d8:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   1a4dc:	add	r0, r5, r0
   1a4e0:	cmp	r0, r4
   1a4e4:	beq	1a478 <myhtml_data_process_state_data@@Base+0xcc>
   1a4e8:	ldr	r3, [r6, #4]
   1a4ec:	cmp	r3, #0
   1a4f0:	beq	1a51c <myhtml_data_process_state_data@@Base+0x170>
   1a4f4:	ldrb	r2, [r6, #61]	; 0x3d
   1a4f8:	str	r2, [sp, #4]
   1a4fc:	str	r3, [sp]
   1a500:	sub	r3, r4, r0
   1a504:	add	r2, r7, r0
   1a508:	add	r1, r6, #8
   1a50c:	mov	r0, r8
   1a510:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1a514:	str	r0, [r6, #32]
   1a518:	b	1a478 <myhtml_data_process_state_data@@Base+0xcc>
   1a51c:	ldrb	r3, [r6, #61]	; 0x3d
   1a520:	sub	r2, r4, r0
   1a524:	add	r1, r7, r0
   1a528:	mov	r0, r8
   1a52c:	bl	101cc <myhtml_string_append_with_preprocessing@plt>
   1a530:	str	r0, [r6, #32]
   1a534:	b	1a478 <myhtml_data_process_state_data@@Base+0xcc>
   1a538:	andeq	ip, pc, ip, lsr #24
   1a53c:	andeq	r0, r0, ip, ror r9

0001a540 <myhtml_data_process_state_ampersand@@Base>:
   1a540:	push	{r4, r5, r6, r7, r8, lr}
   1a544:	mov	r5, r0
   1a548:	mov	r8, r1
   1a54c:	mov	r6, r2
   1a550:	mov	r4, r3
   1a554:	ldr	r7, [pc, #208]	; 1a62c <myhtml_data_process_state_ampersand@@Base+0xec>
   1a558:	add	r7, pc, r7
   1a55c:	ldrb	r3, [r2, r3]
   1a560:	cmp	r3, #35	; 0x23
   1a564:	beq	1a59c <myhtml_data_process_state_ampersand@@Base+0x5c>
   1a568:	mov	r3, #0
   1a56c:	str	r3, [r0, #48]	; 0x30
   1a570:	ldrb	r0, [r2, r4]
   1a574:	bl	10a54 <myhtml_charef_get_first_position@plt>
   1a578:	str	r0, [r5, #44]	; 0x2c
   1a57c:	ldrb	r3, [r0]
   1a580:	cmp	r3, #0
   1a584:	bne	1a60c <myhtml_data_process_state_ampersand@@Base+0xcc>
   1a588:	ldr	r3, [pc, #160]	; 1a630 <myhtml_data_process_state_ampersand@@Base+0xf0>
   1a58c:	ldr	r3, [r7, r3]
   1a590:	str	r3, [r5]
   1a594:	mov	r0, r4
   1a598:	pop	{r4, r5, r6, r7, r8, pc}
   1a59c:	mov	r1, #35	; 0x23
   1a5a0:	mov	r0, r8
   1a5a4:	bl	1106c <myhtml_data_process_string_append_char@plt>
   1a5a8:	add	r0, r4, #1
   1a5ac:	mov	r3, #0
   1a5b0:	str	r3, [r5, #40]	; 0x28
   1a5b4:	ldr	r3, [sp, #24]
   1a5b8:	cmp	r0, r3
   1a5bc:	bcs	1a5e0 <myhtml_data_process_state_ampersand@@Base+0xa0>
   1a5c0:	ldrb	r1, [r6, r0]
   1a5c4:	and	r3, r1, #223	; 0xdf
   1a5c8:	cmp	r3, #88	; 0x58
   1a5cc:	beq	1a5f0 <myhtml_data_process_state_ampersand@@Base+0xb0>
   1a5d0:	ldr	r3, [pc, #92]	; 1a634 <myhtml_data_process_state_ampersand@@Base+0xf4>
   1a5d4:	ldr	r3, [r7, r3]
   1a5d8:	str	r3, [r5]
   1a5dc:	pop	{r4, r5, r6, r7, r8, pc}
   1a5e0:	ldr	r3, [pc, #80]	; 1a638 <myhtml_data_process_state_ampersand@@Base+0xf8>
   1a5e4:	ldr	r3, [r7, r3]
   1a5e8:	str	r3, [r5]
   1a5ec:	pop	{r4, r5, r6, r7, r8, pc}
   1a5f0:	mov	r0, r8
   1a5f4:	bl	1106c <myhtml_data_process_string_append_char@plt>
   1a5f8:	add	r0, r4, #2
   1a5fc:	ldr	r3, [pc, #56]	; 1a63c <myhtml_data_process_state_ampersand@@Base+0xfc>
   1a600:	ldr	r3, [r7, r3]
   1a604:	str	r3, [r5]
   1a608:	pop	{r4, r5, r6, r7, r8, pc}
   1a60c:	ldr	r3, [pc, #44]	; 1a640 <myhtml_data_process_state_ampersand@@Base+0x100>
   1a610:	ldr	r3, [r7, r3]
   1a614:	str	r3, [r5]
   1a618:	ldrb	r1, [r6, r4]
   1a61c:	mov	r0, r8
   1a620:	bl	1106c <myhtml_data_process_string_append_char@plt>
   1a624:	add	r0, r4, #1
   1a628:	pop	{r4, r5, r6, r7, r8, pc}
   1a62c:	andeq	ip, pc, r0, lsr #21
   1a630:			; <UNDEFINED> instruction: 0x000009b8
   1a634:	andeq	r0, r0, r0, lsr #19
   1a638:	andeq	r0, r0, r0, ror r7
   1a63c:	andeq	r0, r0, r8, ror r7
   1a640:	andeq	r0, r0, ip, asr #16

0001a644 <myhtml_data_process_state_ampersand_hash@@Base>:
   1a644:	push	{r4, r5, r6, lr}
   1a648:	ldr	r5, [pc, #80]	; 1a6a0 <myhtml_data_process_state_ampersand_hash@@Base+0x5c>
   1a64c:	add	r5, pc, r5
   1a650:	ldrb	r2, [r2, r3]
   1a654:	and	ip, r2, #223	; 0xdf
   1a658:	cmp	ip, #88	; 0x58
   1a65c:	beq	1a674 <myhtml_data_process_state_ampersand_hash@@Base+0x30>
   1a660:	ldr	r2, [pc, #60]	; 1a6a4 <myhtml_data_process_state_ampersand_hash@@Base+0x60>
   1a664:	ldr	r2, [r5, r2]
   1a668:	str	r2, [r0]
   1a66c:	mov	r0, r3
   1a670:	pop	{r4, r5, r6, pc}
   1a674:	mov	r4, r3
   1a678:	mov	r3, r1
   1a67c:	mov	r6, r0
   1a680:	mov	r1, r2
   1a684:	mov	r0, r3
   1a688:	bl	1106c <myhtml_data_process_string_append_char@plt>
   1a68c:	add	r0, r4, #1
   1a690:	ldr	r3, [pc, #16]	; 1a6a8 <myhtml_data_process_state_ampersand_hash@@Base+0x64>
   1a694:	ldr	r3, [r5, r3]
   1a698:	str	r3, [r6]
   1a69c:	pop	{r4, r5, r6, pc}
   1a6a0:	andeq	ip, pc, ip, lsr #19
   1a6a4:	andeq	r0, r0, r0, lsr #19
   1a6a8:	andeq	r0, r0, r8, ror r7

0001a6ac <myhtml_data_process_state_end@@Base>:
   1a6ac:	push	{r4, r5, r6, lr}
   1a6b0:	mov	r6, r0
   1a6b4:	mov	r4, r1
   1a6b8:	ldr	r1, [r1, #8]
   1a6bc:	add	r1, r1, #5
   1a6c0:	ldr	r3, [r4, #4]
   1a6c4:	cmp	r1, r3
   1a6c8:	bcs	1a6f4 <myhtml_data_process_state_end@@Base+0x48>
   1a6cc:	ldr	r3, [r6, #40]	; 0x28
   1a6d0:	cmp	r3, #159	; 0x9f
   1a6d4:	bls	1a700 <myhtml_data_process_state_end@@Base+0x54>
   1a6d8:	sub	r2, r3, #55296	; 0xd800
   1a6dc:	cmp	r2, #2048	; 0x800
   1a6e0:	bcc	1a740 <myhtml_data_process_state_end@@Base+0x94>
   1a6e4:	cmp	r3, #1114112	; 0x110000
   1a6e8:	ldrcs	r3, [pc, #92]	; 1a74c <myhtml_data_process_state_end@@Base+0xa0>
   1a6ec:	strcs	r3, [r6, #40]	; 0x28
   1a6f0:	b	1a714 <myhtml_data_process_state_end@@Base+0x68>
   1a6f4:	mov	r0, r4
   1a6f8:	bl	10964 <mycore_string_realloc@plt>
   1a6fc:	b	1a6cc <myhtml_data_process_state_end@@Base+0x20>
   1a700:	ldr	r2, [pc, #72]	; 1a750 <myhtml_data_process_state_end@@Base+0xa4>
   1a704:	add	r2, pc, r2
   1a708:	add	r3, r2, r3, lsl #2
   1a70c:	ldr	r3, [r3, #1024]	; 0x400
   1a710:	str	r3, [r6, #40]	; 0x28
   1a714:	ldr	r5, [r6, #36]	; 0x24
   1a718:	ldr	r1, [r4]
   1a71c:	add	r1, r1, r5
   1a720:	ldr	r0, [r6, #40]	; 0x28
   1a724:	bl	10e8c <myencoding_codepoint_to_ascii_utf_8@plt>
   1a728:	add	r0, r5, r0
   1a72c:	str	r0, [r4, #8]
   1a730:	ldr	r3, [r4]
   1a734:	mov	r2, #0
   1a738:	strb	r2, [r3, r0]
   1a73c:	pop	{r4, r5, r6, pc}
   1a740:	ldr	r3, [pc, #4]	; 1a74c <myhtml_data_process_state_end@@Base+0xa0>
   1a744:	str	r3, [r6, #40]	; 0x28
   1a748:	b	1a714 <myhtml_data_process_state_end@@Base+0x68>
   1a74c:	strdeq	pc, [r0], -sp
   1a750:	andeq	r2, lr, r0, ror #5

0001a754 <myhtml_data_process_state_ampersand_hash_data@@Base>:
   1a754:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a758:	sub	sp, sp, #12
   1a75c:	mov	r5, r0
   1a760:	mov	r8, r1
   1a764:	mov	r7, r2
   1a768:	mov	r6, r3
   1a76c:	ldr	r0, [sp, #48]	; 0x30
   1a770:	ldr	r9, [pc, #424]	; 1a920 <myhtml_data_process_state_ampersand_hash_data@@Base+0x1cc>
   1a774:	add	r9, pc, r9
   1a778:	cmp	r3, r0
   1a77c:	bcs	1a854 <myhtml_data_process_state_ampersand_hash_data@@Base+0x100>
   1a780:	ldrb	r2, [r2, r3]
   1a784:	ldr	r3, [pc, #408]	; 1a924 <myhtml_data_process_state_ampersand_hash_data@@Base+0x1d0>
   1a788:	add	r3, pc, r3
   1a78c:	add	r3, r3, r2
   1a790:	ldrb	sl, [r3, #1664]	; 0x680
   1a794:	cmp	sl, #255	; 0xff
   1a798:	beq	1a8c8 <myhtml_data_process_state_ampersand_hash_data@@Base+0x174>
   1a79c:	add	r2, r6, #1
   1a7a0:	add	r2, r7, r2
   1a7a4:	mov	r1, r6
   1a7a8:	ldr	ip, [pc, #376]	; 1a928 <myhtml_data_process_state_ampersand_hash_data@@Base+0x1d4>
   1a7ac:	ldr	lr, [pc, #376]	; 1a92c <myhtml_data_process_state_ampersand_hash_data@@Base+0x1d8>
   1a7b0:	add	lr, pc, lr
   1a7b4:	ldr	r3, [r5, #40]	; 0x28
   1a7b8:	cmp	r3, ip
   1a7bc:	addls	r3, r3, r3, lsl #2
   1a7c0:	addls	r3, sl, r3, lsl #1
   1a7c4:	strls	r3, [r5, #40]	; 0x28
   1a7c8:	add	r4, r1, #1
   1a7cc:	cmp	r0, r4
   1a7d0:	beq	1a858 <myhtml_data_process_state_ampersand_hash_data@@Base+0x104>
   1a7d4:	mov	fp, r2
   1a7d8:	add	r2, r2, #1
   1a7dc:	ldrb	r3, [fp]
   1a7e0:	add	r3, lr, r3
   1a7e4:	ldrb	sl, [r3, #1664]	; 0x680
   1a7e8:	cmp	sl, #255	; 0xff
   1a7ec:	movne	r1, r4
   1a7f0:	bne	1a7b4 <myhtml_data_process_state_ampersand_hash_data@@Base+0x60>
   1a7f4:	ldr	r3, [pc, #308]	; 1a930 <myhtml_data_process_state_ampersand_hash_data@@Base+0x1dc>
   1a7f8:	ldr	r3, [r9, r3]
   1a7fc:	str	r3, [r5]
   1a800:	cmp	r6, r4
   1a804:	beq	1a8d8 <myhtml_data_process_state_ampersand_hash_data@@Base+0x184>
   1a808:	ldrb	r3, [fp]
   1a80c:	cmp	r3, #59	; 0x3b
   1a810:	addeq	r4, r1, #2
   1a814:	mov	r1, r8
   1a818:	mov	r0, r5
   1a81c:	bl	10370 <myhtml_data_process_state_end@plt>
   1a820:	mov	r0, r4
   1a824:	add	sp, sp, #12
   1a828:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a82c:	ldrb	r2, [r5, #61]	; 0x3d
   1a830:	str	r2, [sp, #4]
   1a834:	str	r3, [sp]
   1a838:	rsb	r3, r0, #0
   1a83c:	add	r2, r7, r1
   1a840:	add	r1, r5, #8
   1a844:	mov	r0, r8
   1a848:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1a84c:	str	r0, [r5, #32]
   1a850:	b	1a820 <myhtml_data_process_state_ampersand_hash_data@@Base+0xcc>
   1a854:	mov	r4, r3
   1a858:	ldr	r3, [r5, #32]
   1a85c:	sub	r2, r4, r6
   1a860:	add	r1, r7, r6
   1a864:	mov	r0, r8
   1a868:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   1a86c:	add	r0, r6, r0
   1a870:	cmp	r0, r4
   1a874:	beq	1a820 <myhtml_data_process_state_ampersand_hash_data@@Base+0xcc>
   1a878:	ldr	r3, [r5, #4]
   1a87c:	cmp	r3, #0
   1a880:	beq	1a8ac <myhtml_data_process_state_ampersand_hash_data@@Base+0x158>
   1a884:	ldrb	r2, [r5, #61]	; 0x3d
   1a888:	str	r2, [sp, #4]
   1a88c:	str	r3, [sp]
   1a890:	sub	r3, r4, r0
   1a894:	add	r2, r7, r0
   1a898:	add	r1, r5, #8
   1a89c:	mov	r0, r8
   1a8a0:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1a8a4:	str	r0, [r5, #32]
   1a8a8:	b	1a820 <myhtml_data_process_state_ampersand_hash_data@@Base+0xcc>
   1a8ac:	ldrb	r3, [r5, #61]	; 0x3d
   1a8b0:	sub	r2, r4, r0
   1a8b4:	add	r1, r7, r0
   1a8b8:	mov	r0, r8
   1a8bc:	bl	101cc <myhtml_string_append_with_preprocessing@plt>
   1a8c0:	str	r0, [r5, #32]
   1a8c4:	b	1a820 <myhtml_data_process_state_ampersand_hash_data@@Base+0xcc>
   1a8c8:	ldr	r3, [pc, #96]	; 1a930 <myhtml_data_process_state_ampersand_hash_data@@Base+0x1dc>
   1a8cc:	ldr	r3, [r9, r3]
   1a8d0:	str	r3, [r5]
   1a8d4:	mov	r4, r6
   1a8d8:	ldr	r3, [r5, #32]
   1a8dc:	mov	r2, #0
   1a8e0:	add	r1, r7, r4
   1a8e4:	mov	r0, r8
   1a8e8:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   1a8ec:	add	r1, r0, r4
   1a8f0:	cmp	r1, r4
   1a8f4:	beq	1a820 <myhtml_data_process_state_ampersand_hash_data@@Base+0xcc>
   1a8f8:	ldr	r3, [r5, #4]
   1a8fc:	cmp	r3, #0
   1a900:	bne	1a82c <myhtml_data_process_state_ampersand_hash_data@@Base+0xd8>
   1a904:	ldrb	r3, [r5, #61]	; 0x3d
   1a908:	rsb	r2, r0, #0
   1a90c:	add	r1, r7, r1
   1a910:	mov	r0, r8
   1a914:	bl	101cc <myhtml_string_append_with_preprocessing@plt>
   1a918:	str	r0, [r5, #32]
   1a91c:	b	1a820 <myhtml_data_process_state_ampersand_hash_data@@Base+0xcc>
   1a920:	andeq	ip, pc, r4, lsl #17
   1a924:	andeq	r2, lr, ip, asr r2
   1a928:			; <UNDEFINED> instruction: 0x0010ffff
   1a92c:	andeq	r2, lr, r4, lsr r2
   1a930:			; <UNDEFINED> instruction: 0x000009b8

0001a934 <myhtml_data_process_state_ampersand_hash_x_data@@Base>:
   1a934:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a938:	sub	sp, sp, #20
   1a93c:	mov	r5, r0
   1a940:	str	r1, [sp, #12]
   1a944:	mov	r6, r2
   1a948:	mov	r7, r3
   1a94c:	ldr	lr, [sp, #56]	; 0x38
   1a950:	ldr	fp, [pc, #468]	; 1ab2c <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x1f8>
   1a954:	add	fp, pc, fp
   1a958:	cmp	r3, lr
   1a95c:	bcs	1aa60 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x12c>
   1a960:	add	r2, r2, r3
   1a964:	ldrb	r1, [r6, r3]
   1a968:	ldr	r3, [pc, #448]	; 1ab30 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x1fc>
   1a96c:	add	r3, pc, r3
   1a970:	add	r3, r3, r1
   1a974:	ldrb	r3, [r3, #1920]	; 0x780
   1a978:	cmp	r3, #255	; 0xff
   1a97c:	beq	1aad4 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x1a0>
   1a980:	mov	r0, r2
   1a984:	mov	r1, r7
   1a988:	ldr	r8, [pc, #420]	; 1ab34 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x200>
   1a98c:	ldr	sl, [pc, #420]	; 1ab38 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x204>
   1a990:	add	sl, pc, sl
   1a994:	add	ip, r7, #1
   1a998:	sub	ip, ip, r2
   1a99c:	ldr	r9, [pc, #408]	; 1ab3c <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x208>
   1a9a0:	add	r9, pc, r9
   1a9a4:	b	1aa34 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x100>
   1a9a8:	ldr	r3, [pc, #400]	; 1ab40 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x20c>
   1a9ac:	ldr	r3, [fp, r3]
   1a9b0:	str	r3, [r5]
   1a9b4:	cmp	r7, r4
   1a9b8:	beq	1aae4 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x1b0>
   1a9bc:	ldrb	r3, [r2]
   1a9c0:	cmp	r3, #59	; 0x3b
   1a9c4:	addeq	r4, r1, #2
   1a9c8:	ldr	r1, [sp, #12]
   1a9cc:	mov	r0, r5
   1a9d0:	bl	10370 <myhtml_data_process_state_end@plt>
   1a9d4:	mov	r0, r4
   1a9d8:	add	sp, sp, #20
   1a9dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a9e0:	ldrb	r2, [r5, #61]	; 0x3d
   1a9e4:	str	r2, [sp, #4]
   1a9e8:	str	r3, [sp]
   1a9ec:	rsb	r3, r0, #0
   1a9f0:	add	r2, r6, r1
   1a9f4:	add	r1, r5, #8
   1a9f8:	ldr	r0, [sp, #12]
   1a9fc:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1aa00:	str	r0, [r5, #32]
   1aa04:	b	1a9d4 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xa0>
   1aa08:	add	r4, r1, #1
   1aa0c:	cmp	lr, r4
   1aa10:	beq	1aa64 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x130>
   1aa14:	add	r2, r2, ip
   1aa18:	add	r2, r6, r2
   1aa1c:	ldrb	r3, [r0, #1]!
   1aa20:	add	r3, r9, r3
   1aa24:	ldrb	r3, [r3, #1920]	; 0x780
   1aa28:	cmp	r3, #255	; 0xff
   1aa2c:	beq	1a9a8 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x74>
   1aa30:	mov	r1, r4
   1aa34:	ldr	r3, [r5, #40]	; 0x28
   1aa38:	cmp	r3, r8
   1aa3c:	bhi	1aa08 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xd4>
   1aa40:	lsl	r3, r3, #4
   1aa44:	str	r3, [r5, #40]	; 0x28
   1aa48:	ldrb	r4, [r2]
   1aa4c:	add	r4, sl, r4
   1aa50:	ldrb	r4, [r4, #1920]	; 0x780
   1aa54:	orr	r3, r4, r3
   1aa58:	str	r3, [r5, #40]	; 0x28
   1aa5c:	b	1aa08 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xd4>
   1aa60:	mov	r4, r3
   1aa64:	ldr	r3, [r5, #32]
   1aa68:	sub	r2, r4, r7
   1aa6c:	add	r1, r6, r7
   1aa70:	ldr	r0, [sp, #12]
   1aa74:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   1aa78:	add	r0, r7, r0
   1aa7c:	cmp	r0, r4
   1aa80:	beq	1a9d4 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xa0>
   1aa84:	ldr	r3, [r5, #4]
   1aa88:	cmp	r3, #0
   1aa8c:	beq	1aab8 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x184>
   1aa90:	ldrb	r2, [r5, #61]	; 0x3d
   1aa94:	str	r2, [sp, #4]
   1aa98:	str	r3, [sp]
   1aa9c:	sub	r3, r4, r0
   1aaa0:	add	r2, r6, r0
   1aaa4:	add	r1, r5, #8
   1aaa8:	ldr	r0, [sp, #12]
   1aaac:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1aab0:	str	r0, [r5, #32]
   1aab4:	b	1a9d4 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xa0>
   1aab8:	ldrb	r3, [r5, #61]	; 0x3d
   1aabc:	sub	r2, r4, r0
   1aac0:	add	r1, r6, r0
   1aac4:	ldr	r0, [sp, #12]
   1aac8:	bl	101cc <myhtml_string_append_with_preprocessing@plt>
   1aacc:	str	r0, [r5, #32]
   1aad0:	b	1a9d4 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xa0>
   1aad4:	ldr	r3, [pc, #100]	; 1ab40 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x20c>
   1aad8:	ldr	r3, [fp, r3]
   1aadc:	str	r3, [r0]
   1aae0:	mov	r4, r7
   1aae4:	ldr	r3, [r5, #32]
   1aae8:	mov	r2, #0
   1aaec:	add	r1, r6, r4
   1aaf0:	ldr	r0, [sp, #12]
   1aaf4:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   1aaf8:	add	r1, r0, r4
   1aafc:	cmp	r1, r4
   1ab00:	beq	1a9d4 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xa0>
   1ab04:	ldr	r3, [r5, #4]
   1ab08:	cmp	r3, #0
   1ab0c:	bne	1a9e0 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xac>
   1ab10:	ldrb	r3, [r5, #61]	; 0x3d
   1ab14:	rsb	r2, r0, #0
   1ab18:	add	r1, r6, r1
   1ab1c:	ldr	r0, [sp, #12]
   1ab20:	bl	101cc <myhtml_string_append_with_preprocessing@plt>
   1ab24:	str	r0, [r5, #32]
   1ab28:	b	1a9d4 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xa0>
   1ab2c:	andeq	ip, pc, r4, lsr #13
   1ab30:	andeq	r2, lr, r8, ror r0
   1ab34:			; <UNDEFINED> instruction: 0x0010ffff
   1ab38:	andeq	r2, lr, r4, asr r0
   1ab3c:	andeq	r2, lr, r4, asr #32
   1ab40:			; <UNDEFINED> instruction: 0x000009b8

0001ab44 <myhtml_data_process@@Base>:
   1ab44:	push	{r4, r5, r6, r7, r8, lr}
   1ab48:	sub	sp, sp, #8
   1ab4c:	subs	r5, r3, #0
   1ab50:	beq	1ab88 <myhtml_data_process@@Base+0x44>
   1ab54:	mov	r8, r2
   1ab58:	mov	r7, r1
   1ab5c:	mov	r4, r0
   1ab60:	mov	r3, #0
   1ab64:	str	r5, [sp]
   1ab68:	ldr	r6, [r4]
   1ab6c:	mov	r2, r8
   1ab70:	mov	r1, r7
   1ab74:	mov	r0, r4
   1ab78:	blx	r6
   1ab7c:	mov	r3, r0
   1ab80:	cmp	r5, r0
   1ab84:	bhi	1ab64 <myhtml_data_process@@Base+0x20>
   1ab88:	add	sp, sp, #8
   1ab8c:	pop	{r4, r5, r6, r7, r8, pc}

0001ab90 <myhtml_data_process_end@@Base>:
   1ab90:	push	{r4, r5, r6, r7, r8, lr}
   1ab94:	mov	r4, r0
   1ab98:	mov	r5, r1
   1ab9c:	ldr	r3, [pc, #260]	; 1aca8 <myhtml_data_process_end@@Base+0x118>
   1aba0:	add	r3, pc, r3
   1aba4:	ldr	r2, [r0]
   1aba8:	ldr	r1, [pc, #252]	; 1acac <myhtml_data_process_end@@Base+0x11c>
   1abac:	ldr	r1, [r3, r1]
   1abb0:	cmp	r2, r1
   1abb4:	beq	1abfc <myhtml_data_process_end@@Base+0x6c>
   1abb8:	ldr	r1, [pc, #240]	; 1acb0 <myhtml_data_process_end@@Base+0x120>
   1abbc:	ldr	r1, [r3, r1]
   1abc0:	cmp	r2, r1
   1abc4:	beq	1ac84 <myhtml_data_process_end@@Base+0xf4>
   1abc8:	ldr	r1, [pc, #228]	; 1acb4 <myhtml_data_process_end@@Base+0x124>
   1abcc:	ldr	r3, [r3, r1]
   1abd0:	cmp	r2, r3
   1abd4:	popne	{r4, r5, r6, r7, r8, pc}
   1abd8:	ldr	r3, [r5, #8]
   1abdc:	ldr	r2, [r4, #36]	; 0x24
   1abe0:	sub	r3, r3, r2
   1abe4:	cmp	r3, #3
   1abe8:	popeq	{r4, r5, r6, r7, r8, pc}
   1abec:	mov	r1, r5
   1abf0:	mov	r0, r4
   1abf4:	bl	10370 <myhtml_data_process_state_end@plt>
   1abf8:	pop	{r4, r5, r6, r7, r8, pc}
   1abfc:	ldr	r6, [r0, #48]	; 0x30
   1ac00:	cmp	r6, #0
   1ac04:	beq	1abb8 <myhtml_data_process_end@@Base+0x28>
   1ac08:	ldr	r3, [r6, #20]
   1ac0c:	cmp	r3, #0
   1ac10:	beq	1ac60 <myhtml_data_process_end@@Base+0xd0>
   1ac14:	add	r8, r6, #12
   1ac18:	mov	r7, #0
   1ac1c:	ldr	r1, [r5, #8]
   1ac20:	add	r1, r1, #5
   1ac24:	ldr	r3, [r5, #4]
   1ac28:	cmp	r1, r3
   1ac2c:	bcs	1ac78 <myhtml_data_process_end@@Base+0xe8>
   1ac30:	ldr	r1, [r5]
   1ac34:	ldr	r3, [r4, #36]	; 0x24
   1ac38:	add	r1, r1, r3
   1ac3c:	ldr	r0, [r8], #4
   1ac40:	bl	10e8c <myencoding_codepoint_to_ascii_utf_8@plt>
   1ac44:	ldr	r3, [r4, #36]	; 0x24
   1ac48:	add	r0, r3, r0
   1ac4c:	str	r0, [r4, #36]	; 0x24
   1ac50:	add	r7, r7, #1
   1ac54:	ldr	r3, [r6, #20]
   1ac58:	cmp	r3, r7
   1ac5c:	bhi	1ac1c <myhtml_data_process_end@@Base+0x8c>
   1ac60:	ldr	r3, [r4, #36]	; 0x24
   1ac64:	str	r3, [r5, #8]
   1ac68:	ldr	r2, [r5]
   1ac6c:	mov	r1, #0
   1ac70:	strb	r1, [r2, r3]
   1ac74:	pop	{r4, r5, r6, r7, r8, pc}
   1ac78:	mov	r0, r5
   1ac7c:	bl	10964 <mycore_string_realloc@plt>
   1ac80:	b	1ac30 <myhtml_data_process_end@@Base+0xa0>
   1ac84:	ldr	r3, [r5, #8]
   1ac88:	ldr	r2, [r4, #36]	; 0x24
   1ac8c:	sub	r3, r3, r2
   1ac90:	cmp	r3, #2
   1ac94:	popeq	{r4, r5, r6, r7, r8, pc}
   1ac98:	mov	r1, r5
   1ac9c:	mov	r0, r4
   1aca0:	bl	10370 <myhtml_data_process_state_end@plt>
   1aca4:	pop	{r4, r5, r6, r7, r8, pc}
   1aca8:	andeq	ip, pc, r8, asr r4	; <UNPREDICTABLE>
   1acac:	andeq	r0, r0, ip, asr #16
   1acb0:	andeq	r0, r0, r0, lsr #19
   1acb4:	andeq	r0, r0, r8, ror r7

0001acb8 <myhtml_get_nodes_by_attribute_value_recursion_eq_i@@Base>:
   1acb8:	ldr	r3, [r0, #8]
   1acbc:	cmp	r3, r2
   1acc0:	beq	1accc <myhtml_get_nodes_by_attribute_value_recursion_eq_i@@Base+0x14>
   1acc4:	mov	r0, #0
   1acc8:	bx	lr
   1accc:	push	{r4, lr}
   1acd0:	mov	r2, r3
   1acd4:	ldr	r0, [r0]
   1acd8:	bl	102a4 <mycore_strncasecmp@plt>
   1acdc:	clz	r0, r0
   1ace0:	lsr	r0, r0, #5
   1ace4:	pop	{r4, pc}

0001ace8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base>:
   1ace8:	ldr	r3, [r0, #8]
   1acec:	cmp	r3, r2
   1acf0:	bcs	1acfc <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x14>
   1acf4:	mov	r0, #0
   1acf8:	bx	lr
   1acfc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1ad00:	mov	r5, r2
   1ad04:	mov	r9, r1
   1ad08:	mov	r7, r0
   1ad0c:	ldr	sl, [r0]
   1ad10:	mov	r0, sl
   1ad14:	bl	102a4 <mycore_strncasecmp@plt>
   1ad18:	cmp	r0, #0
   1ad1c:	bne	1ad50 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x68>
   1ad20:	ldr	r3, [r7, #8]
   1ad24:	cmp	r5, r3
   1ad28:	bcs	1ad7c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x94>
   1ad2c:	ldrb	r3, [sl, r5]
   1ad30:	sub	r3, r3, #9
   1ad34:	uxtb	r3, r3
   1ad38:	cmp	r3, #23
   1ad3c:	bhi	1ad50 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x68>
   1ad40:	ldr	r2, [pc, #236]	; 1ae34 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x14c>
   1ad44:	lsr	r3, r2, r3
   1ad48:	tst	r3, #1
   1ad4c:	bne	1ad74 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x8c>
   1ad50:	ldr	r3, [r7, #8]
   1ad54:	sub	r3, r3, #1
   1ad58:	cmp	r5, r3
   1ad5c:	bhi	1ae1c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x134>
   1ad60:	mov	r6, sl
   1ad64:	mov	r4, #1
   1ad68:	ldr	r8, [pc, #196]	; 1ae34 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x14c>
   1ad6c:	add	sl, sl, r5
   1ad70:	b	1adbc <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xd4>
   1ad74:	mov	r0, #1
   1ad78:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ad7c:	cmp	r5, r3
   1ad80:	bne	1ad50 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x68>
   1ad84:	mov	r0, #1
   1ad88:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ad8c:	lsr	r3, r8, r3
   1ad90:	tst	r3, #1
   1ad94:	bne	1ae24 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x13c>
   1ad98:	ldr	r3, [r7, #8]
   1ad9c:	sub	r3, r3, r4
   1ada0:	cmp	r5, r3
   1ada4:	beq	1ae2c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x144>
   1ada8:	add	r4, r4, #1
   1adac:	ldr	r3, [r7, #8]
   1adb0:	sub	r3, r3, r4
   1adb4:	cmp	r5, r3
   1adb8:	bhi	1ae14 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x12c>
   1adbc:	ldrb	r3, [r6], #1
   1adc0:	sub	r3, r3, #9
   1adc4:	uxtb	r3, r3
   1adc8:	cmp	r3, #23
   1adcc:	bhi	1ada8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xc0>
   1add0:	lsr	r3, r8, r3
   1add4:	tst	r3, #1
   1add8:	beq	1ada8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xc0>
   1addc:	mov	r2, r5
   1ade0:	mov	r1, r9
   1ade4:	mov	r0, r6
   1ade8:	bl	102a4 <mycore_strncasecmp@plt>
   1adec:	cmp	r0, #0
   1adf0:	bne	1ada8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xc0>
   1adf4:	cmp	r5, r4
   1adf8:	bcs	1ad98 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xb0>
   1adfc:	ldrb	r3, [sl, r4]
   1ae00:	sub	r3, r3, #9
   1ae04:	uxtb	r3, r3
   1ae08:	cmp	r3, #23
   1ae0c:	bhi	1ad98 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xb0>
   1ae10:	b	1ad8c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xa4>
   1ae14:	mov	r0, #0
   1ae18:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ae1c:	mov	r0, #0
   1ae20:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ae24:	mov	r0, #1
   1ae28:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ae2c:	mov	r0, #1
   1ae30:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ae34:	addeq	r0, r0, fp, lsl r0

0001ae38 <myhtml_get_nodes_by_attribute_value_recursion_begin_i@@Base>:
   1ae38:	ldr	r3, [r0, #8]
   1ae3c:	cmp	r3, r2
   1ae40:	bcs	1ae4c <myhtml_get_nodes_by_attribute_value_recursion_begin_i@@Base+0x14>
   1ae44:	mov	r0, #0
   1ae48:	bx	lr
   1ae4c:	push	{r4, lr}
   1ae50:	ldr	r0, [r0]
   1ae54:	bl	102a4 <mycore_strncasecmp@plt>
   1ae58:	clz	r0, r0
   1ae5c:	lsr	r0, r0, #5
   1ae60:	pop	{r4, pc}

0001ae64 <myhtml_get_nodes_by_attribute_value_recursion_end_i@@Base>:
   1ae64:	ldr	r3, [r0, #8]
   1ae68:	cmp	r3, r2
   1ae6c:	bcs	1ae78 <myhtml_get_nodes_by_attribute_value_recursion_end_i@@Base+0x14>
   1ae70:	mov	r0, #0
   1ae74:	bx	lr
   1ae78:	push	{r4, lr}
   1ae7c:	sub	r3, r3, r2
   1ae80:	ldr	r0, [r0]
   1ae84:	add	r0, r0, r3
   1ae88:	bl	102a4 <mycore_strncasecmp@plt>
   1ae8c:	clz	r0, r0
   1ae90:	lsr	r0, r0, #5
   1ae94:	pop	{r4, pc}

0001ae98 <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base>:
   1ae98:	ldr	r3, [r0, #8]
   1ae9c:	cmp	r3, r2
   1aea0:	bcc	1aef0 <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base+0x58>
   1aea4:	push	{r4, r5, r6, r7, r8, lr}
   1aea8:	mov	r5, r2
   1aeac:	mov	r7, r1
   1aeb0:	mov	r6, r0
   1aeb4:	ldr	r8, [r0]
   1aeb8:	mov	r4, #0
   1aebc:	mov	r2, r5
   1aec0:	mov	r1, r7
   1aec4:	add	r0, r8, r4
   1aec8:	bl	102a4 <mycore_strncasecmp@plt>
   1aecc:	cmp	r0, #0
   1aed0:	beq	1aef8 <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base+0x60>
   1aed4:	add	r4, r4, #1
   1aed8:	ldr	r3, [r6, #8]
   1aedc:	sub	r3, r3, r4
   1aee0:	cmp	r5, r3
   1aee4:	bls	1aebc <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base+0x24>
   1aee8:	mov	r0, #0
   1aeec:	pop	{r4, r5, r6, r7, r8, pc}
   1aef0:	mov	r0, #0
   1aef4:	bx	lr
   1aef8:	mov	r0, #1
   1aefc:	pop	{r4, r5, r6, r7, r8, pc}

0001af00 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base>:
   1af00:	ldr	r3, [r0, #8]
   1af04:	cmp	r3, r2
   1af08:	bcc	1af64 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x64>
   1af0c:	push	{r4, r5, r6, lr}
   1af10:	mov	r4, r2
   1af14:	mov	r5, r1
   1af18:	ldr	r6, [r0]
   1af1c:	beq	1af4c <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x4c>
   1af20:	mov	r2, r4
   1af24:	mov	r1, r5
   1af28:	mov	r0, r6
   1af2c:	bl	102a4 <mycore_strncasecmp@plt>
   1af30:	cmp	r0, #0
   1af34:	bne	1af6c <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x6c>
   1af38:	ldrb	r0, [r6, r4]
   1af3c:	cmp	r0, #45	; 0x2d
   1af40:	movne	r0, #0
   1af44:	moveq	r0, #1
   1af48:	pop	{r4, r5, r6, pc}
   1af4c:	mov	r0, r6
   1af50:	bl	102a4 <mycore_strncasecmp@plt>
   1af54:	cmp	r0, #0
   1af58:	bne	1af20 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x20>
   1af5c:	mov	r0, #1
   1af60:	pop	{r4, r5, r6, pc}
   1af64:	mov	r0, #0
   1af68:	bx	lr
   1af6c:	mov	r0, #0
   1af70:	pop	{r4, r5, r6, pc}

0001af74 <myhtml_get_nodes_by_attribute_value_recursion_eq@@Base>:
   1af74:	ldr	r3, [r0, #8]
   1af78:	cmp	r3, r2
   1af7c:	beq	1af88 <myhtml_get_nodes_by_attribute_value_recursion_eq@@Base+0x14>
   1af80:	mov	r0, #0
   1af84:	bx	lr
   1af88:	push	{r4, lr}
   1af8c:	mov	r2, r3
   1af90:	ldr	r0, [r0]
   1af94:	bl	10eec <mycore_strncmp@plt>
   1af98:	clz	r0, r0
   1af9c:	lsr	r0, r0, #5
   1afa0:	pop	{r4, pc}

0001afa4 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base>:
   1afa4:	ldr	r3, [r0, #8]
   1afa8:	cmp	r3, r2
   1afac:	bcs	1afb8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x14>
   1afb0:	mov	r0, #0
   1afb4:	bx	lr
   1afb8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1afbc:	mov	r5, r2
   1afc0:	mov	r9, r1
   1afc4:	mov	r7, r0
   1afc8:	ldr	sl, [r0]
   1afcc:	mov	r0, sl
   1afd0:	bl	10eec <mycore_strncmp@plt>
   1afd4:	cmp	r0, #0
   1afd8:	bne	1b00c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x68>
   1afdc:	ldr	r3, [r7, #8]
   1afe0:	cmp	r5, r3
   1afe4:	bcs	1b038 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x94>
   1afe8:	ldrb	r3, [sl, r5]
   1afec:	sub	r3, r3, #9
   1aff0:	uxtb	r3, r3
   1aff4:	cmp	r3, #23
   1aff8:	bhi	1b00c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x68>
   1affc:	ldr	r2, [pc, #236]	; 1b0f0 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x14c>
   1b000:	lsr	r3, r2, r3
   1b004:	tst	r3, #1
   1b008:	bne	1b030 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x8c>
   1b00c:	ldr	r3, [r7, #8]
   1b010:	sub	r3, r3, #1
   1b014:	cmp	r5, r3
   1b018:	bhi	1b0d8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x134>
   1b01c:	mov	r6, sl
   1b020:	mov	r4, #1
   1b024:	ldr	r8, [pc, #196]	; 1b0f0 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x14c>
   1b028:	add	sl, sl, r5
   1b02c:	b	1b078 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xd4>
   1b030:	mov	r0, #1
   1b034:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b038:	cmp	r5, r3
   1b03c:	bne	1b00c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x68>
   1b040:	mov	r0, #1
   1b044:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b048:	lsr	r3, r8, r3
   1b04c:	tst	r3, #1
   1b050:	bne	1b0e0 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x13c>
   1b054:	ldr	r3, [r7, #8]
   1b058:	sub	r3, r3, r4
   1b05c:	cmp	r5, r3
   1b060:	beq	1b0e8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x144>
   1b064:	add	r4, r4, #1
   1b068:	ldr	r3, [r7, #8]
   1b06c:	sub	r3, r3, r4
   1b070:	cmp	r5, r3
   1b074:	bhi	1b0d0 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x12c>
   1b078:	ldrb	r3, [r6], #1
   1b07c:	sub	r3, r3, #9
   1b080:	uxtb	r3, r3
   1b084:	cmp	r3, #23
   1b088:	bhi	1b064 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xc0>
   1b08c:	lsr	r3, r8, r3
   1b090:	tst	r3, #1
   1b094:	beq	1b064 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xc0>
   1b098:	mov	r2, r5
   1b09c:	mov	r1, r9
   1b0a0:	mov	r0, r6
   1b0a4:	bl	10eec <mycore_strncmp@plt>
   1b0a8:	cmp	r0, #0
   1b0ac:	bne	1b064 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xc0>
   1b0b0:	cmp	r5, r4
   1b0b4:	bcs	1b054 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xb0>
   1b0b8:	ldrb	r3, [sl, r4]
   1b0bc:	sub	r3, r3, #9
   1b0c0:	uxtb	r3, r3
   1b0c4:	cmp	r3, #23
   1b0c8:	bhi	1b054 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xb0>
   1b0cc:	b	1b048 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xa4>
   1b0d0:	mov	r0, #0
   1b0d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b0d8:	mov	r0, #0
   1b0dc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b0e0:	mov	r0, #1
   1b0e4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b0e8:	mov	r0, #1
   1b0ec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b0f0:	addeq	r0, r0, fp, lsl r0

0001b0f4 <myhtml_get_nodes_by_attribute_value_recursion_begin@@Base>:
   1b0f4:	ldr	r3, [r0, #8]
   1b0f8:	cmp	r3, r2
   1b0fc:	bcs	1b108 <myhtml_get_nodes_by_attribute_value_recursion_begin@@Base+0x14>
   1b100:	mov	r0, #0
   1b104:	bx	lr
   1b108:	push	{r4, lr}
   1b10c:	ldr	r0, [r0]
   1b110:	bl	10eec <mycore_strncmp@plt>
   1b114:	clz	r0, r0
   1b118:	lsr	r0, r0, #5
   1b11c:	pop	{r4, pc}

0001b120 <myhtml_get_nodes_by_attribute_value_recursion_end@@Base>:
   1b120:	ldr	r3, [r0, #8]
   1b124:	cmp	r3, r2
   1b128:	bcs	1b134 <myhtml_get_nodes_by_attribute_value_recursion_end@@Base+0x14>
   1b12c:	mov	r0, #0
   1b130:	bx	lr
   1b134:	push	{r4, lr}
   1b138:	sub	r3, r3, r2
   1b13c:	ldr	r0, [r0]
   1b140:	add	r0, r0, r3
   1b144:	bl	10eec <mycore_strncmp@plt>
   1b148:	clz	r0, r0
   1b14c:	lsr	r0, r0, #5
   1b150:	pop	{r4, pc}

0001b154 <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base>:
   1b154:	ldr	r3, [r0, #8]
   1b158:	cmp	r3, r2
   1b15c:	bcc	1b1ac <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base+0x58>
   1b160:	push	{r4, r5, r6, r7, r8, lr}
   1b164:	mov	r5, r2
   1b168:	mov	r7, r1
   1b16c:	mov	r6, r0
   1b170:	ldr	r8, [r0]
   1b174:	mov	r4, #0
   1b178:	mov	r2, r5
   1b17c:	mov	r1, r7
   1b180:	add	r0, r8, r4
   1b184:	bl	10eec <mycore_strncmp@plt>
   1b188:	cmp	r0, #0
   1b18c:	beq	1b1b4 <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base+0x60>
   1b190:	add	r4, r4, #1
   1b194:	ldr	r3, [r6, #8]
   1b198:	sub	r3, r3, r4
   1b19c:	cmp	r5, r3
   1b1a0:	bls	1b178 <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base+0x24>
   1b1a4:	mov	r0, #0
   1b1a8:	pop	{r4, r5, r6, r7, r8, pc}
   1b1ac:	mov	r0, #0
   1b1b0:	bx	lr
   1b1b4:	mov	r0, #1
   1b1b8:	pop	{r4, r5, r6, r7, r8, pc}

0001b1bc <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base>:
   1b1bc:	ldr	r3, [r0, #8]
   1b1c0:	cmp	r3, r2
   1b1c4:	bcc	1b220 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x64>
   1b1c8:	push	{r4, r5, r6, lr}
   1b1cc:	mov	r4, r2
   1b1d0:	mov	r5, r1
   1b1d4:	ldr	r6, [r0]
   1b1d8:	beq	1b208 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x4c>
   1b1dc:	mov	r2, r4
   1b1e0:	mov	r1, r5
   1b1e4:	mov	r0, r6
   1b1e8:	bl	10eec <mycore_strncmp@plt>
   1b1ec:	cmp	r0, #0
   1b1f0:	bne	1b228 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x6c>
   1b1f4:	ldrb	r0, [r6, r4]
   1b1f8:	cmp	r0, #45	; 0x2d
   1b1fc:	movne	r0, #0
   1b200:	moveq	r0, #1
   1b204:	pop	{r4, r5, r6, pc}
   1b208:	mov	r0, r6
   1b20c:	bl	10eec <mycore_strncmp@plt>
   1b210:	cmp	r0, #0
   1b214:	bne	1b1dc <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x20>
   1b218:	mov	r0, #1
   1b21c:	pop	{r4, r5, r6, pc}
   1b220:	mov	r0, #0
   1b224:	bx	lr
   1b228:	mov	r0, #0
   1b22c:	pop	{r4, r5, r6, pc}

0001b230 <myhtml_init_marker@@Base>:
   1b230:	push	{r4, lr}
   1b234:	mov	r4, r0
   1b238:	mov	r0, #44	; 0x2c
   1b23c:	bl	10c94 <mycore_malloc@plt>
   1b240:	str	r0, [r4, #36]	; 0x24
   1b244:	cmp	r0, #0
   1b248:	popeq	{r4, pc}
   1b24c:	bl	1109c <myhtml_tree_node_clean@plt>
   1b250:	pop	{r4, pc}

0001b254 <myhtml_destroy_marker@@Base>:
   1b254:	ldr	r0, [r0, #36]	; 0x24
   1b258:	cmp	r0, #0
   1b25c:	bxeq	lr
   1b260:	push	{r4, lr}
   1b264:	bl	10dcc <mycore_free@plt>
   1b268:	pop	{r4, pc}

0001b26c <myhtml_stream_create@@Base>:
   1b26c:	push	{r4, r5, r6, r7, r8, lr}
   1b270:	subs	r7, r2, #0
   1b274:	bne	1b28c <myhtml_stream_create@@Base+0x20>
   1b278:	mov	r3, #0
   1b27c:	str	r3, [r0]
   1b280:	str	r3, [r1]
   1b284:	mov	r0, r3
   1b288:	pop	{r4, r5, r6, r7, r8, pc}
   1b28c:	mov	r6, r3
   1b290:	mov	r5, r1
   1b294:	mov	r4, r0
   1b298:	bl	fe18 <mythread_create@plt>
   1b29c:	str	r0, [r4]
   1b2a0:	cmp	r0, #0
   1b2a4:	moveq	r3, #9
   1b2a8:	streq	r3, [r5]
   1b2ac:	mov	r3, r6
   1b2b0:	mov	r2, r7
   1b2b4:	mov	r1, #0
   1b2b8:	ldr	r0, [r4]
   1b2bc:	bl	110a8 <mythread_init@plt>
   1b2c0:	str	r0, [r5]
   1b2c4:	cmp	r0, #0
   1b2c8:	bne	1b2d4 <myhtml_stream_create@@Base+0x68>
   1b2cc:	ldr	r0, [r5]
   1b2d0:	pop	{r4, r5, r6, r7, r8, pc}
   1b2d4:	mov	r3, #1
   1b2d8:	mov	r2, #0
   1b2dc:	mov	r1, r2
   1b2e0:	ldr	r0, [r4]
   1b2e4:	bl	109ac <mythread_destroy@plt>
   1b2e8:	str	r0, [r4]
   1b2ec:	b	1b2cc <myhtml_stream_create@@Base+0x60>

0001b2f0 <myhtml_batch_create@@Base>:
   1b2f0:	push	{r4, r5, r6, r7, r8, lr}
   1b2f4:	subs	r7, r2, #0
   1b2f8:	bne	1b310 <myhtml_batch_create@@Base+0x20>
   1b2fc:	mov	r3, #0
   1b300:	str	r3, [r0, #4]
   1b304:	str	r3, [r1]
   1b308:	mov	r0, r3
   1b30c:	pop	{r4, r5, r6, r7, r8, pc}
   1b310:	mov	r6, r3
   1b314:	mov	r5, r1
   1b318:	mov	r4, r0
   1b31c:	bl	fe18 <mythread_create@plt>
   1b320:	str	r0, [r4, #4]
   1b324:	ldr	r3, [r4]
   1b328:	cmp	r3, #0
   1b32c:	beq	1b358 <myhtml_batch_create@@Base+0x68>
   1b330:	mov	r3, r6
   1b334:	mov	r2, r7
   1b338:	mov	r1, #1
   1b33c:	ldr	r0, [r4, #4]
   1b340:	bl	110a8 <mythread_init@plt>
   1b344:	str	r0, [r5]
   1b348:	cmp	r0, #0
   1b34c:	bne	1b37c <myhtml_batch_create@@Base+0x8c>
   1b350:	ldr	r0, [r5]
   1b354:	pop	{r4, r5, r6, r7, r8, pc}
   1b358:	mov	r3, #1
   1b35c:	mov	r2, #0
   1b360:	mov	r1, r2
   1b364:	mov	r0, r2
   1b368:	bl	109ac <mythread_destroy@plt>
   1b36c:	str	r0, [r4]
   1b370:	mov	r3, #9
   1b374:	str	r3, [r5]
   1b378:	b	1b330 <myhtml_batch_create@@Base+0x40>
   1b37c:	mov	r3, #1
   1b380:	mov	r2, #0
   1b384:	mov	r1, r2
   1b388:	ldr	r0, [r4, #4]
   1b38c:	bl	109ac <mythread_destroy@plt>
   1b390:	str	r0, [r4, #4]
   1b394:	b	1b350 <myhtml_batch_create@@Base+0x60>

0001b398 <myhtml_create_stream_and_batch@@Base>:
   1b398:	push	{r4, r5, r6, lr}
   1b39c:	sub	sp, sp, #8
   1b3a0:	mov	r5, r0
   1b3a4:	mov	r4, r1
   1b3a8:	mov	r6, r2
   1b3ac:	mov	r3, #0
   1b3b0:	mov	r2, r1
   1b3b4:	add	r1, sp, #4
   1b3b8:	bl	1043c <myhtml_stream_create@plt>
   1b3bc:	cmp	r0, #0
   1b3c0:	beq	1b3d0 <myhtml_create_stream_and_batch@@Base+0x38>
   1b3c4:	ldr	r0, [sp, #4]
   1b3c8:	add	sp, sp, #8
   1b3cc:	pop	{r4, r5, r6, pc}
   1b3d0:	mov	r3, r4
   1b3d4:	mov	r2, r6
   1b3d8:	add	r1, sp, #4
   1b3dc:	mov	r0, r5
   1b3e0:	bl	10598 <myhtml_batch_create@plt>
   1b3e4:	cmp	r0, #0
   1b3e8:	ldreq	r0, [sp, #4]
   1b3ec:	beq	1b3c8 <myhtml_create_stream_and_batch@@Base+0x30>
   1b3f0:	mov	r3, #1
   1b3f4:	mov	r2, #0
   1b3f8:	mov	r1, r2
   1b3fc:	ldr	r0, [r5]
   1b400:	bl	109ac <mythread_destroy@plt>
   1b404:	str	r0, [r5]
   1b408:	ldr	r0, [sp, #4]
   1b40c:	b	1b3c8 <myhtml_create_stream_and_batch@@Base+0x30>

0001b410 <myhtml_create@@Base>:
   1b410:	push	{r4, lr}
   1b414:	mov	r1, #40	; 0x28
   1b418:	mov	r0, #1
   1b41c:	bl	ff14 <mycore_calloc@plt>
   1b420:	pop	{r4, pc}

0001b424 <myhtml_clean@@Base>:
   1b424:	bx	lr

0001b428 <myhtml_init@@Base>:
   1b428:	push	{r4, r5, r6, r7, r8, r9, lr}
   1b42c:	sub	sp, sp, #20
   1b430:	mov	r4, r0
   1b434:	mov	r5, r1
   1b438:	mov	r7, r2
   1b43c:	ldr	r6, [pc, #476]	; 1b620 <myhtml_init@@Base+0x1f8>
   1b440:	add	r6, pc, r6
   1b444:	str	r1, [r0, #32]
   1b448:	bl	10ab4 <myhtml_init_marker@plt>
   1b44c:	mov	r0, r4
   1b450:	bl	fcbc <myhtml_tokenizer_state_init@plt>
   1b454:	str	r0, [sp, #12]
   1b458:	cmp	r0, #0
   1b45c:	beq	1b468 <myhtml_init@@Base+0x40>
   1b460:	add	sp, sp, #20
   1b464:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1b468:	mov	r0, r4
   1b46c:	bl	10bec <myhtml_rules_init@plt>
   1b470:	str	r0, [sp, #12]
   1b474:	cmp	r0, #0
   1b478:	bne	1b460 <myhtml_init@@Base+0x38>
   1b47c:	cmp	r7, #0
   1b480:	moveq	r7, #1
   1b484:	cmp	r5, #1
   1b488:	beq	1b56c <myhtml_init@@Base+0x144>
   1b48c:	cmp	r5, #2
   1b490:	beq	1b5c0 <myhtml_init@@Base+0x198>
   1b494:	cmp	r7, #2
   1b498:	movcc	r7, #2
   1b49c:	sub	r2, r7, #1
   1b4a0:	mov	r1, #1
   1b4a4:	mov	r0, r4
   1b4a8:	bl	104e4 <myhtml_create_stream_and_batch@plt>
   1b4ac:	str	r0, [sp, #12]
   1b4b0:	cmp	r0, #0
   1b4b4:	bne	1b460 <myhtml_init@@Base+0x38>
   1b4b8:	ldr	r5, [r4]
   1b4bc:	add	r0, sp, #12
   1b4c0:	bl	107d8 <mythread_queue_list_create@plt>
   1b4c4:	str	r0, [r5, #16]
   1b4c8:	ldr	r3, [r4, #4]
   1b4cc:	ldr	r2, [r4]
   1b4d0:	ldr	r2, [r2, #16]
   1b4d4:	str	r2, [r3, #16]
   1b4d8:	ldr	r3, [pc, #324]	; 1b624 <myhtml_init@@Base+0x1fc>
   1b4dc:	ldr	r3, [r6, r3]
   1b4e0:	str	r3, [sp]
   1b4e4:	ldr	r3, [pc, #316]	; 1b628 <myhtml_init@@Base+0x200>
   1b4e8:	ldr	r3, [r6, r3]
   1b4ec:	str	r3, [sp, #4]
   1b4f0:	mov	r3, #4
   1b4f4:	ldr	r2, [sp]
   1b4f8:	ldr	r1, [sp, #4]
   1b4fc:	ldr	r0, [r4]
   1b500:	bl	108bc <myhread_entry_create@plt>
   1b504:	str	r0, [sp, #12]
   1b508:	cmp	r0, #0
   1b50c:	bne	1b460 <myhtml_init@@Base+0x38>
   1b510:	ldr	r0, [r4, #4]
   1b514:	ldr	r3, [r0, #8]
   1b518:	cmp	r3, #0
   1b51c:	beq	1b588 <myhtml_init@@Base+0x160>
   1b520:	mov	r5, #0
   1b524:	ldr	r3, [pc, #256]	; 1b62c <myhtml_init@@Base+0x204>
   1b528:	ldr	r8, [r6, r3]
   1b52c:	ldr	r3, [pc, #252]	; 1b630 <myhtml_init@@Base+0x208>
   1b530:	ldr	r9, [r6, r3]
   1b534:	mov	r6, #4
   1b538:	mov	r3, r6
   1b53c:	mov	r2, r8
   1b540:	mov	r1, r9
   1b544:	bl	108bc <myhread_entry_create@plt>
   1b548:	str	r0, [sp, #12]
   1b54c:	cmp	r0, #0
   1b550:	bne	1b460 <myhtml_init@@Base+0x38>
   1b554:	add	r5, r5, #1
   1b558:	ldr	r0, [r4, #4]
   1b55c:	ldr	r3, [r0, #8]
   1b560:	cmp	r3, r5
   1b564:	bhi	1b538 <myhtml_init@@Base+0x110>
   1b568:	b	1b588 <myhtml_init@@Base+0x160>
   1b56c:	mov	r2, #0
   1b570:	mov	r1, r2
   1b574:	mov	r0, r4
   1b578:	bl	104e4 <myhtml_create_stream_and_batch@plt>
   1b57c:	str	r0, [sp, #12]
   1b580:	cmp	r0, #0
   1b584:	bne	1b460 <myhtml_init@@Base+0x38>
   1b588:	str	r7, [r4, #20]
   1b58c:	ldr	r3, [r4]
   1b590:	str	r3, [r4, #8]
   1b594:	ldr	r3, [r4, #4]
   1b598:	str	r3, [r4, #12]
   1b59c:	mov	r3, #0
   1b5a0:	str	r3, [r4, #16]
   1b5a4:	ldr	r0, [sp, #12]
   1b5a8:	cmp	r0, r3
   1b5ac:	bne	1b460 <myhtml_init@@Base+0x38>
   1b5b0:	mov	r0, r4
   1b5b4:	bl	fde8 <myhtml_clean@plt>
   1b5b8:	ldr	r0, [sp, #12]
   1b5bc:	b	1b460 <myhtml_init@@Base+0x38>
   1b5c0:	mov	r2, #0
   1b5c4:	mov	r1, #1
   1b5c8:	mov	r0, r4
   1b5cc:	bl	104e4 <myhtml_create_stream_and_batch@plt>
   1b5d0:	str	r0, [sp, #12]
   1b5d4:	cmp	r0, #0
   1b5d8:	bne	1b460 <myhtml_init@@Base+0x38>
   1b5dc:	ldr	r5, [r4]
   1b5e0:	add	r0, sp, #12
   1b5e4:	bl	107d8 <mythread_queue_list_create@plt>
   1b5e8:	str	r0, [r5, #16]
   1b5ec:	ldr	r3, [pc, #64]	; 1b634 <myhtml_init@@Base+0x20c>
   1b5f0:	ldr	r3, [r6, r3]
   1b5f4:	str	r3, [sp]
   1b5f8:	ldr	r3, [pc, #40]	; 1b628 <myhtml_init@@Base+0x200>
   1b5fc:	ldr	r3, [r6, r3]
   1b600:	str	r3, [sp, #4]
   1b604:	mov	r3, #4
   1b608:	ldr	r2, [sp]
   1b60c:	ldr	r1, [sp, #4]
   1b610:	ldr	r0, [r4]
   1b614:	bl	108bc <myhread_entry_create@plt>
   1b618:	str	r0, [sp, #12]
   1b61c:	b	1b588 <myhtml_init@@Base+0x160>
   1b620:			; <UNDEFINED> instruction: 0x000fbbb8
   1b624:	andeq	r0, r0, ip, asr #19
   1b628:	andeq	r0, r0, r0, asr #14
   1b62c:	andeq	r0, r0, r4, asr r7
   1b630:	andeq	r0, r0, r4, lsr r7
   1b634:	andeq	r0, r0, ip, asr #14

0001b638 <myhtml_destroy@@Base>:
   1b638:	push	{r4, r5, r6, lr}
   1b63c:	sub	sp, sp, #8
   1b640:	ldr	r6, [pc, #260]	; 1b74c <myhtml_destroy@@Base+0x114>
   1b644:	add	r6, pc, r6
   1b648:	subs	r4, r0, #0
   1b64c:	beq	1b6f0 <myhtml_destroy@@Base+0xb8>
   1b650:	mov	r0, r4
   1b654:	bl	10790 <myhtml_destroy_marker@plt>
   1b658:	ldr	r0, [r4]
   1b65c:	cmp	r0, #0
   1b660:	beq	1b6d0 <myhtml_destroy@@Base+0x98>
   1b664:	ldr	r5, [r0, #16]
   1b668:	cmp	r5, #0
   1b66c:	beq	1b6fc <myhtml_destroy@@Base+0xc4>
   1b670:	mov	r1, r5
   1b674:	bl	10dd8 <mythread_queue_list_wait_for_done@plt>
   1b678:	ldr	r3, [pc, #208]	; 1b750 <myhtml_destroy@@Base+0x118>
   1b67c:	ldr	r3, [r6, r3]
   1b680:	str	r3, [sp, #4]
   1b684:	mov	r3, #1
   1b688:	mov	r2, #0
   1b68c:	ldr	r1, [sp, #4]
   1b690:	ldr	r0, [r4]
   1b694:	bl	109ac <mythread_destroy@plt>
   1b698:	str	r0, [r4]
   1b69c:	ldr	r0, [r4, #4]
   1b6a0:	cmp	r0, #0
   1b6a4:	beq	1b6c8 <myhtml_destroy@@Base+0x90>
   1b6a8:	ldr	r3, [pc, #160]	; 1b750 <myhtml_destroy@@Base+0x118>
   1b6ac:	ldr	r3, [r6, r3]
   1b6b0:	str	r3, [sp, #4]
   1b6b4:	mov	r3, #1
   1b6b8:	mov	r2, #0
   1b6bc:	ldr	r1, [sp, #4]
   1b6c0:	bl	109ac <mythread_destroy@plt>
   1b6c4:	str	r0, [r4, #4]
   1b6c8:	mov	r0, r5
   1b6cc:	bl	10130 <mythread_queue_list_destroy@plt>
   1b6d0:	mov	r0, r4
   1b6d4:	bl	100f4 <myhtml_tokenizer_state_destroy@plt>
   1b6d8:	ldr	r0, [r4, #28]
   1b6dc:	cmp	r0, #0
   1b6e0:	beq	1b6e8 <myhtml_destroy@@Base+0xb0>
   1b6e4:	bl	10dcc <mycore_free@plt>
   1b6e8:	mov	r0, r4
   1b6ec:	bl	10dcc <mycore_free@plt>
   1b6f0:	mov	r0, #0
   1b6f4:	add	sp, sp, #8
   1b6f8:	pop	{r4, r5, r6, pc}
   1b6fc:	ldr	r3, [pc, #76]	; 1b750 <myhtml_destroy@@Base+0x118>
   1b700:	ldr	r3, [r6, r3]
   1b704:	str	r3, [sp, #4]
   1b708:	mov	r3, #1
   1b70c:	mov	r2, #0
   1b710:	ldr	r1, [sp, #4]
   1b714:	bl	109ac <mythread_destroy@plt>
   1b718:	str	r0, [r4]
   1b71c:	ldr	r0, [r4, #4]
   1b720:	cmp	r0, #0
   1b724:	beq	1b6d0 <myhtml_destroy@@Base+0x98>
   1b728:	ldr	r3, [pc, #32]	; 1b750 <myhtml_destroy@@Base+0x118>
   1b72c:	ldr	r3, [r6, r3]
   1b730:	str	r3, [sp, #4]
   1b734:	mov	r3, #1
   1b738:	mov	r2, #0
   1b73c:	ldr	r1, [sp, #4]
   1b740:	bl	109ac <mythread_destroy@plt>
   1b744:	str	r0, [r4, #4]
   1b748:	b	1b6d0 <myhtml_destroy@@Base+0x98>
   1b74c:			; <UNDEFINED> instruction: 0x000fb9b4
   1b750:	andeq	r0, r0, r8, ror #16

0001b754 <myhtml_parse_chunk@@Base>:
   1b754:	push	{r4, r5, r6, lr}
   1b758:	mov	r4, r0
   1b75c:	mov	r5, r1
   1b760:	mov	r6, r2
   1b764:	ldr	r3, [r0, #180]	; 0xb4
   1b768:	tst	r3, #32
   1b76c:	bne	1b784 <myhtml_parse_chunk@@Base+0x30>
   1b770:	mov	r2, r6
   1b774:	mov	r1, r5
   1b778:	mov	r0, r4
   1b77c:	bl	100c4 <myhtml_tokenizer_chunk@plt>
   1b780:	pop	{r4, r5, r6, pc}
   1b784:	bl	106d0 <myhtml_tree_clean@plt>
   1b788:	b	1b770 <myhtml_parse_chunk@@Base+0x1c>

0001b78c <myhtml_parse_chunk_fragment@@Base>:
   1b78c:	push	{r4, r5, r6, r7, r8, lr}
   1b790:	mov	r4, r0
   1b794:	mov	r7, r1
   1b798:	mov	r8, r2
   1b79c:	mov	r5, r3
   1b7a0:	ldr	r6, [sp, #24]
   1b7a4:	ldr	r3, [r0, #180]	; 0xb4
   1b7a8:	tst	r3, #32
   1b7ac:	bne	1b7ec <myhtml_parse_chunk_fragment@@Base+0x60>
   1b7b0:	cmp	r6, #0
   1b7b4:	movne	r2, r6
   1b7b8:	moveq	r2, #1
   1b7bc:	cmp	r5, #0
   1b7c0:	movne	r1, r5
   1b7c4:	moveq	r1, #42	; 0x2a
   1b7c8:	mov	r0, r4
   1b7cc:	bl	fc98 <myhtml_tokenizer_fragment_init@plt>
   1b7d0:	cmp	r0, #0
   1b7d4:	beq	1b7f4 <myhtml_parse_chunk_fragment@@Base+0x68>
   1b7d8:	mov	r2, r8
   1b7dc:	mov	r1, r7
   1b7e0:	mov	r0, r4
   1b7e4:	bl	100c4 <myhtml_tokenizer_chunk@plt>
   1b7e8:	pop	{r4, r5, r6, r7, r8, pc}
   1b7ec:	bl	106d0 <myhtml_tree_clean@plt>
   1b7f0:	b	1b7b0 <myhtml_parse_chunk_fragment@@Base+0x24>
   1b7f4:	ldr	r0, [pc]	; 1b7fc <myhtml_parse_chunk_fragment@@Base+0x70>
   1b7f8:	pop	{r4, r5, r6, r7, r8, pc}
   1b7fc:	andeq	r9, r0, sp, lsr #2

0001b800 <myhtml_parse_chunk_single@@Base>:
   1b800:	push	{r4, lr}
   1b804:	ldr	r3, [r0, #180]	; 0xb4
   1b808:	tst	r3, #16
   1b80c:	ldreq	r3, [r0, #180]	; 0xb4
   1b810:	orreq	r3, r3, #16
   1b814:	streq	r3, [r0, #180]	; 0xb4
   1b818:	bl	10a3c <myhtml_parse_chunk@plt>
   1b81c:	pop	{r4, pc}

0001b820 <myhtml_parse_chunk_fragment_single@@Base>:
   1b820:	push	{lr}		; (str lr, [sp, #-4]!)
   1b824:	sub	sp, sp, #12
   1b828:	ldr	ip, [r0, #180]	; 0xb4
   1b82c:	tst	ip, #16
   1b830:	ldreq	ip, [r0, #180]	; 0xb4
   1b834:	orreq	ip, ip, #16
   1b838:	streq	ip, [r0, #180]	; 0xb4
   1b83c:	ldr	ip, [sp, #16]
   1b840:	str	ip, [sp]
   1b844:	bl	105a4 <myhtml_parse_chunk_fragment@plt>
   1b848:	add	sp, sp, #12
   1b84c:	pop	{pc}		; (ldr pc, [sp], #4)

0001b850 <myhtml_parse_chunk_end@@Base>:
   1b850:	push	{r4, lr}
   1b854:	bl	10268 <myhtml_tokenizer_end@plt>
   1b858:	pop	{r4, pc}

0001b85c <myhtml_encoding_set@@Base>:
   1b85c:	cmp	r1, #41	; 0x29
   1b860:	strls	r1, [r0, #204]	; 0xcc
   1b864:	strls	r1, [r0, #200]	; 0xc8
   1b868:	bx	lr

0001b86c <myhtml_parse@@Base>:
   1b86c:	push	{r4, r5, r6, r7, r8, lr}
   1b870:	mov	r4, r0
   1b874:	mov	r7, r1
   1b878:	mov	r5, r2
   1b87c:	mov	r6, r3
   1b880:	ldr	r3, [r0, #180]	; 0xb4
   1b884:	tst	r3, #32
   1b888:	bne	1b8bc <myhtml_parse@@Base+0x50>
   1b88c:	mov	r1, r7
   1b890:	mov	r0, r4
   1b894:	bl	106a0 <myhtml_encoding_set@plt>
   1b898:	mov	r2, r6
   1b89c:	mov	r1, r5
   1b8a0:	mov	r0, r4
   1b8a4:	bl	10154 <myhtml_tokenizer_begin@plt>
   1b8a8:	cmp	r0, #0
   1b8ac:	popne	{r4, r5, r6, r7, r8, pc}
   1b8b0:	mov	r0, r4
   1b8b4:	bl	10268 <myhtml_tokenizer_end@plt>
   1b8b8:	pop	{r4, r5, r6, r7, r8, pc}
   1b8bc:	bl	106d0 <myhtml_tree_clean@plt>
   1b8c0:	b	1b88c <myhtml_parse@@Base+0x20>

0001b8c4 <myhtml_parse_fragment@@Base>:
   1b8c4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b8c8:	mov	r4, r0
   1b8cc:	mov	r9, r1
   1b8d0:	mov	r7, r2
   1b8d4:	mov	r8, r3
   1b8d8:	ldr	r5, [sp, #32]
   1b8dc:	ldr	r6, [sp, #36]	; 0x24
   1b8e0:	ldr	r3, [r0, #180]	; 0xb4
   1b8e4:	tst	r3, #32
   1b8e8:	bne	1b944 <myhtml_parse_fragment@@Base+0x80>
   1b8ec:	cmp	r6, #0
   1b8f0:	movne	r2, r6
   1b8f4:	moveq	r2, #1
   1b8f8:	cmp	r5, #0
   1b8fc:	movne	r1, r5
   1b900:	moveq	r1, #42	; 0x2a
   1b904:	mov	r0, r4
   1b908:	bl	fc98 <myhtml_tokenizer_fragment_init@plt>
   1b90c:	cmp	r0, #0
   1b910:	beq	1b94c <myhtml_parse_fragment@@Base+0x88>
   1b914:	mov	r1, r9
   1b918:	mov	r0, r4
   1b91c:	bl	106a0 <myhtml_encoding_set@plt>
   1b920:	mov	r2, r8
   1b924:	mov	r1, r7
   1b928:	mov	r0, r4
   1b92c:	bl	10154 <myhtml_tokenizer_begin@plt>
   1b930:	cmp	r0, #0
   1b934:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b938:	mov	r0, r4
   1b93c:	bl	10268 <myhtml_tokenizer_end@plt>
   1b940:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b944:	bl	106d0 <myhtml_tree_clean@plt>
   1b948:	b	1b8ec <myhtml_parse_fragment@@Base+0x28>
   1b94c:	ldr	r0, [pc]	; 1b954 <myhtml_parse_fragment@@Base+0x90>
   1b950:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b954:	andeq	r9, r0, sp, lsr #2

0001b958 <myhtml_parse_single@@Base>:
   1b958:	push	{r4, r5, r6, r7, r8, lr}
   1b95c:	mov	r4, r0
   1b960:	mov	r7, r1
   1b964:	mov	r5, r2
   1b968:	mov	r6, r3
   1b96c:	ldr	r3, [r0, #180]	; 0xb4
   1b970:	tst	r3, #32
   1b974:	bne	1b9b4 <myhtml_parse_single@@Base+0x5c>
   1b978:	ldr	r3, [r4, #180]	; 0xb4
   1b97c:	orr	r3, r3, #16
   1b980:	str	r3, [r4, #180]	; 0xb4
   1b984:	mov	r1, r7
   1b988:	mov	r0, r4
   1b98c:	bl	106a0 <myhtml_encoding_set@plt>
   1b990:	mov	r2, r6
   1b994:	mov	r1, r5
   1b998:	mov	r0, r4
   1b99c:	bl	10154 <myhtml_tokenizer_begin@plt>
   1b9a0:	cmp	r0, #0
   1b9a4:	popne	{r4, r5, r6, r7, r8, pc}
   1b9a8:	mov	r0, r4
   1b9ac:	bl	10268 <myhtml_tokenizer_end@plt>
   1b9b0:	pop	{r4, r5, r6, r7, r8, pc}
   1b9b4:	bl	106d0 <myhtml_tree_clean@plt>
   1b9b8:	b	1b978 <myhtml_parse_single@@Base+0x20>

0001b9bc <myhtml_parse_fragment_single@@Base>:
   1b9bc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b9c0:	mov	r4, r0
   1b9c4:	mov	r9, r1
   1b9c8:	mov	r7, r2
   1b9cc:	mov	r8, r3
   1b9d0:	ldr	r5, [sp, #32]
   1b9d4:	ldr	r6, [sp, #36]	; 0x24
   1b9d8:	ldr	r3, [r0, #180]	; 0xb4
   1b9dc:	tst	r3, #32
   1b9e0:	bne	1ba48 <myhtml_parse_fragment_single@@Base+0x8c>
   1b9e4:	ldr	r3, [r4, #180]	; 0xb4
   1b9e8:	orr	r3, r3, #16
   1b9ec:	str	r3, [r4, #180]	; 0xb4
   1b9f0:	cmp	r6, #0
   1b9f4:	movne	r2, r6
   1b9f8:	moveq	r2, #1
   1b9fc:	cmp	r5, #0
   1ba00:	movne	r1, r5
   1ba04:	moveq	r1, #42	; 0x2a
   1ba08:	mov	r0, r4
   1ba0c:	bl	fc98 <myhtml_tokenizer_fragment_init@plt>
   1ba10:	cmp	r0, #0
   1ba14:	beq	1ba50 <myhtml_parse_fragment_single@@Base+0x94>
   1ba18:	mov	r1, r9
   1ba1c:	mov	r0, r4
   1ba20:	bl	106a0 <myhtml_encoding_set@plt>
   1ba24:	mov	r2, r8
   1ba28:	mov	r1, r7
   1ba2c:	mov	r0, r4
   1ba30:	bl	10154 <myhtml_tokenizer_begin@plt>
   1ba34:	cmp	r0, #0
   1ba38:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ba3c:	mov	r0, r4
   1ba40:	bl	10268 <myhtml_tokenizer_end@plt>
   1ba44:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ba48:	bl	106d0 <myhtml_tree_clean@plt>
   1ba4c:	b	1b9e4 <myhtml_parse_fragment_single@@Base+0x28>
   1ba50:	ldr	r0, [pc]	; 1ba58 <myhtml_parse_fragment_single@@Base+0x9c>
   1ba54:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ba58:	andeq	r9, r0, sp, lsr #2

0001ba5c <myhtml_encoding_get@@Base>:
   1ba5c:	ldr	r0, [r0, #200]	; 0xc8
   1ba60:	bx	lr

0001ba64 <myhtml_node_first@@Base>:
   1ba64:	ldr	r3, [r0, #88]	; 0x58
   1ba68:	cmp	r3, #0
   1ba6c:	beq	1ba8c <myhtml_node_first@@Base+0x28>
   1ba70:	ldr	r0, [r0, #84]	; 0x54
   1ba74:	cmp	r0, #0
   1ba78:	bxeq	lr
   1ba7c:	ldr	r0, [r0, #20]
   1ba80:	cmp	r0, #0
   1ba84:	ldrne	r0, [r0, #20]
   1ba88:	bx	lr
   1ba8c:	ldr	r0, [r0, #84]	; 0x54
   1ba90:	cmp	r0, #0
   1ba94:	ldrne	r0, [r0, #20]
   1ba98:	bx	lr

0001ba9c <myhtml_node_next@@Base>:
   1ba9c:	ldr	r0, [r0, #16]
   1baa0:	bx	lr

0001baa4 <myhtml_node_prev@@Base>:
   1baa4:	ldr	r0, [r0, #12]
   1baa8:	bx	lr

0001baac <myhtml_node_parent@@Base>:
   1baac:	ldr	r0, [r0, #24]
   1bab0:	bx	lr

0001bab4 <myhtml_node_child@@Base>:
   1bab4:	ldr	r0, [r0, #20]
   1bab8:	bx	lr

0001babc <myhtml_node_last_child@@Base>:
   1babc:	ldr	r0, [r0, #28]
   1bac0:	bx	lr

0001bac4 <myhtml_node_create@@Base>:
   1bac4:	push	{r4, r5, r6, lr}
   1bac8:	mov	r5, r1
   1bacc:	mov	r4, r2
   1bad0:	bl	ffe0 <myhtml_tree_node_create@plt>
   1bad4:	str	r5, [r0, #4]
   1bad8:	str	r4, [r0, #8]
   1badc:	pop	{r4, r5, r6, pc}

0001bae0 <myhtml_node_remove@@Base>:
   1bae0:	push	{r4, lr}
   1bae4:	bl	10df0 <myhtml_tree_node_remove@plt>
   1bae8:	pop	{r4, pc}

0001baec <myhtml_node_delete@@Base>:
   1baec:	push	{r4, lr}
   1baf0:	bl	10dc0 <myhtml_tree_node_delete@plt>
   1baf4:	pop	{r4, pc}

0001baf8 <myhtml_node_delete_recursive@@Base>:
   1baf8:	push	{r4, lr}
   1bafc:	bl	ffec <myhtml_tree_node_delete_recursive@plt>
   1bb00:	pop	{r4, pc}

0001bb04 <myhtml_node_free@@Base>:
   1bb04:	push	{r4, lr}
   1bb08:	bl	10d00 <myhtml_tree_node_free@plt>
   1bb0c:	pop	{r4, pc}

0001bb10 <myhtml_node_insert_before@@Base>:
   1bb10:	cmp	r1, #0
   1bb14:	cmpne	r0, #0
   1bb18:	beq	1bb30 <myhtml_node_insert_before@@Base+0x20>
   1bb1c:	push	{r4, lr}
   1bb20:	mov	r4, r1
   1bb24:	bl	103f4 <myhtml_tree_node_insert_before@plt>
   1bb28:	mov	r0, r4
   1bb2c:	pop	{r4, pc}
   1bb30:	mov	r0, #0
   1bb34:	bx	lr

0001bb38 <myhtml_node_insert_after@@Base>:
   1bb38:	cmp	r1, #0
   1bb3c:	cmpne	r0, #0
   1bb40:	beq	1bb58 <myhtml_node_insert_after@@Base+0x20>
   1bb44:	push	{r4, lr}
   1bb48:	mov	r4, r1
   1bb4c:	bl	10364 <myhtml_tree_node_insert_after@plt>
   1bb50:	mov	r0, r4
   1bb54:	pop	{r4, pc}
   1bb58:	mov	r0, #0
   1bb5c:	bx	lr

0001bb60 <myhtml_node_append_child@@Base>:
   1bb60:	cmp	r1, #0
   1bb64:	cmpne	r0, #0
   1bb68:	beq	1bb80 <myhtml_node_append_child@@Base+0x20>
   1bb6c:	push	{r4, lr}
   1bb70:	mov	r4, r1
   1bb74:	bl	106b8 <myhtml_tree_node_add_child@plt>
   1bb78:	mov	r0, r4
   1bb7c:	pop	{r4, pc}
   1bb80:	mov	r0, #0
   1bb84:	bx	lr

0001bb88 <myhtml_node_insert_to_appropriate_place@@Base>:
   1bb88:	cmp	r1, #0
   1bb8c:	cmpne	r0, #0
   1bb90:	beq	1bbd8 <myhtml_node_insert_to_appropriate_place@@Base+0x50>
   1bb94:	push	{r4, lr}
   1bb98:	sub	sp, sp, #8
   1bb9c:	mov	r4, r1
   1bba0:	ldr	r3, [r0, #40]	; 0x28
   1bba4:	mov	r2, #1
   1bba8:	strb	r2, [r3, #188]	; 0xbc
   1bbac:	add	r1, sp, #4
   1bbb0:	bl	10a30 <myhtml_tree_appropriate_place_inserting_in_tree@plt>
   1bbb4:	ldr	r3, [r0, #40]	; 0x28
   1bbb8:	mov	r2, #0
   1bbbc:	strb	r2, [r3, #188]	; 0xbc
   1bbc0:	ldr	r2, [sp, #4]
   1bbc4:	mov	r1, r4
   1bbc8:	bl	10358 <myhtml_tree_node_insert_by_mode@plt>
   1bbcc:	mov	r0, r4
   1bbd0:	add	sp, sp, #8
   1bbd4:	pop	{r4, pc}
   1bbd8:	mov	r0, #0
   1bbdc:	bx	lr

0001bbe0 <myhtml_node_text_set@@Base>:
   1bbe0:	push	{r4, r5, r6, r7, r8, lr}
   1bbe4:	mov	r4, r0
   1bbe8:	clz	r0, r0
   1bbec:	lsr	r0, r0, #5
   1bbf0:	cmp	r3, #41	; 0x29
   1bbf4:	orrhi	r0, r0, #1
   1bbf8:	cmp	r0, #0
   1bbfc:	bne	1bd00 <myhtml_node_text_set@@Base+0x120>
   1bc00:	mov	r6, r3
   1bc04:	mov	r5, r2
   1bc08:	mov	r7, r1
   1bc0c:	ldr	r8, [r4, #40]	; 0x28
   1bc10:	ldr	r3, [r4, #32]
   1bc14:	cmp	r3, #0
   1bc18:	beq	1bc80 <myhtml_node_text_set@@Base+0xa0>
   1bc1c:	ldr	r0, [r4, #32]
   1bc20:	ldr	r2, [r0, #4]
   1bc24:	cmp	r2, #0
   1bc28:	beq	1bca8 <myhtml_node_text_set@@Base+0xc8>
   1bc2c:	ldr	r3, [r0, #8]
   1bc30:	cmp	r5, r3
   1bc34:	movls	r3, #0
   1bc38:	strls	r3, [r0, #12]
   1bc3c:	bhi	1bcc0 <myhtml_node_text_set@@Base+0xe0>
   1bc40:	cmp	r6, #0
   1bc44:	beq	1bce8 <myhtml_node_text_set@@Base+0x108>
   1bc48:	ldr	r0, [r4, #32]
   1bc4c:	mov	r3, r6
   1bc50:	mov	r2, r5
   1bc54:	mov	r1, r7
   1bc58:	add	r0, r0, #4
   1bc5c:	bl	10460 <myencoding_string_append@plt>
   1bc60:	ldr	r2, [r4, #32]
   1bc64:	mov	r3, #0
   1bc68:	str	r3, [r2, #24]
   1bc6c:	ldr	r2, [r4, #32]
   1bc70:	str	r3, [r2, #28]
   1bc74:	ldr	r0, [r4, #32]
   1bc78:	add	r0, r0, #4
   1bc7c:	pop	{r4, r5, r6, r7, r8, pc}
   1bc80:	ldr	r1, [r8, #40]	; 0x28
   1bc84:	ldr	r0, [r8, #8]
   1bc88:	bl	10a0c <myhtml_token_node_create@plt>
   1bc8c:	str	r0, [r4, #32]
   1bc90:	cmp	r0, #0
   1bc94:	beq	1bd08 <myhtml_node_text_set@@Base+0x128>
   1bc98:	ldr	r3, [r0, #48]	; 0x30
   1bc9c:	orr	r3, r3, #4
   1bca0:	str	r3, [r0, #48]	; 0x30
   1bca4:	b	1bc1c <myhtml_node_text_set@@Base+0x3c>
   1bca8:	add	r3, r5, #2
   1bcac:	add	r2, r0, #4
   1bcb0:	ldr	r1, [r8, #52]	; 0x34
   1bcb4:	ldr	r0, [r8, #4]
   1bcb8:	bl	10610 <mycore_string_init@plt>
   1bcbc:	b	1bc40 <myhtml_node_text_set@@Base+0x60>
   1bcc0:	ldr	r1, [r0, #20]
   1bcc4:	ldr	r0, [r8, #4]
   1bcc8:	bl	10718 <mchar_async_free@plt>
   1bccc:	ldr	r2, [r4, #32]
   1bcd0:	mov	r3, r5
   1bcd4:	add	r2, r2, #4
   1bcd8:	ldr	r1, [r8, #52]	; 0x34
   1bcdc:	ldr	r0, [r8, #4]
   1bce0:	bl	10610 <mycore_string_init@plt>
   1bce4:	b	1bc40 <myhtml_node_text_set@@Base+0x60>
   1bce8:	ldr	r0, [r4, #32]
   1bcec:	mov	r2, r5
   1bcf0:	mov	r1, r7
   1bcf4:	add	r0, r0, #4
   1bcf8:	bl	108d4 <mycore_string_append@plt>
   1bcfc:	b	1bc60 <myhtml_node_text_set@@Base+0x80>
   1bd00:	mov	r0, #0
   1bd04:	pop	{r4, r5, r6, r7, r8, pc}
   1bd08:	mov	r0, #0
   1bd0c:	pop	{r4, r5, r6, r7, r8, pc}

0001bd10 <myhtml_node_text_set_with_charef@@Base>:
   1bd10:	push	{r4, r5, r6, r7, r8, lr}
   1bd14:	sub	sp, sp, #64	; 0x40
   1bd18:	mov	r4, r0
   1bd1c:	clz	r0, r0
   1bd20:	lsr	r0, r0, #5
   1bd24:	cmp	r3, #41	; 0x29
   1bd28:	orrhi	r0, r0, #1
   1bd2c:	cmp	r0, #0
   1bd30:	bne	1be3c <myhtml_node_text_set_with_charef@@Base+0x12c>
   1bd34:	mov	r7, r3
   1bd38:	mov	r5, r2
   1bd3c:	mov	r8, r1
   1bd40:	ldr	r6, [r4, #40]	; 0x28
   1bd44:	ldr	r3, [r4, #32]
   1bd48:	cmp	r3, #0
   1bd4c:	beq	1bdd4 <myhtml_node_text_set_with_charef@@Base+0xc4>
   1bd50:	ldr	r0, [r4, #32]
   1bd54:	ldr	r2, [r0, #4]
   1bd58:	cmp	r2, #0
   1bd5c:	beq	1bdfc <myhtml_node_text_set_with_charef@@Base+0xec>
   1bd60:	ldr	r3, [r0, #8]
   1bd64:	cmp	r5, r3
   1bd68:	movls	r3, #0
   1bd6c:	strls	r3, [r0, #12]
   1bd70:	bhi	1be14 <myhtml_node_text_set_with_charef@@Base+0x104>
   1bd74:	mov	r0, sp
   1bd78:	bl	104f0 <myhtml_data_process_entry_clean@plt>
   1bd7c:	str	r7, [sp, #4]
   1bd80:	add	r0, sp, #8
   1bd84:	bl	101c0 <myencoding_result_clean@plt>
   1bd88:	ldr	r1, [r4, #32]
   1bd8c:	mov	r3, r5
   1bd90:	mov	r2, r8
   1bd94:	add	r1, r1, #4
   1bd98:	mov	r0, sp
   1bd9c:	bl	10754 <myhtml_data_process@plt>
   1bda0:	ldr	r1, [r4, #32]
   1bda4:	add	r1, r1, #4
   1bda8:	mov	r0, sp
   1bdac:	bl	10928 <myhtml_data_process_end@plt>
   1bdb0:	ldr	r2, [r4, #32]
   1bdb4:	mov	r3, #0
   1bdb8:	str	r3, [r2, #24]
   1bdbc:	ldr	r2, [r4, #32]
   1bdc0:	str	r3, [r2, #28]
   1bdc4:	ldr	r0, [r4, #32]
   1bdc8:	add	r0, r0, #4
   1bdcc:	add	sp, sp, #64	; 0x40
   1bdd0:	pop	{r4, r5, r6, r7, r8, pc}
   1bdd4:	ldr	r1, [r6, #40]	; 0x28
   1bdd8:	ldr	r0, [r6, #8]
   1bddc:	bl	10a0c <myhtml_token_node_create@plt>
   1bde0:	str	r0, [r4, #32]
   1bde4:	cmp	r0, #0
   1bde8:	beq	1be44 <myhtml_node_text_set_with_charef@@Base+0x134>
   1bdec:	ldr	r3, [r0, #48]	; 0x30
   1bdf0:	orr	r3, r3, #4
   1bdf4:	str	r3, [r0, #48]	; 0x30
   1bdf8:	b	1bd50 <myhtml_node_text_set_with_charef@@Base+0x40>
   1bdfc:	add	r3, r5, #2
   1be00:	add	r2, r0, #4
   1be04:	ldr	r1, [r6, #52]	; 0x34
   1be08:	ldr	r0, [r6, #4]
   1be0c:	bl	10610 <mycore_string_init@plt>
   1be10:	b	1bd74 <myhtml_node_text_set_with_charef@@Base+0x64>
   1be14:	ldr	r1, [r0, #20]
   1be18:	ldr	r0, [r6, #4]
   1be1c:	bl	10718 <mchar_async_free@plt>
   1be20:	ldr	r2, [r4, #32]
   1be24:	mov	r3, r5
   1be28:	add	r2, r2, #4
   1be2c:	ldr	r1, [r6, #52]	; 0x34
   1be30:	ldr	r0, [r6, #4]
   1be34:	bl	10610 <mycore_string_init@plt>
   1be38:	b	1bd74 <myhtml_node_text_set_with_charef@@Base+0x64>
   1be3c:	mov	r0, #0
   1be40:	b	1bdcc <myhtml_node_text_set_with_charef@@Base+0xbc>
   1be44:	mov	r0, #0
   1be48:	b	1bdcc <myhtml_node_text_set_with_charef@@Base+0xbc>

0001be4c <myhtml_node_token@@Base>:
   1be4c:	ldr	r0, [r0, #32]
   1be50:	bx	lr

0001be54 <myhtml_node_namespace@@Base>:
   1be54:	ldr	r0, [r0, #8]
   1be58:	bx	lr

0001be5c <myhtml_node_namespace_set@@Base>:
   1be5c:	str	r1, [r0, #8]
   1be60:	bx	lr

0001be64 <myhtml_node_tag_id@@Base>:
   1be64:	ldr	r0, [r0, #4]
   1be68:	bx	lr

0001be6c <myhtml_tag_name_by_id@@Base>:
   1be6c:	push	{r4, lr}
   1be70:	subs	r4, r2, #0
   1be74:	movne	r3, #0
   1be78:	strne	r3, [r4]
   1be7c:	cmp	r0, #0
   1be80:	beq	1beb0 <myhtml_tag_name_by_id@@Base+0x44>
   1be84:	ldr	r0, [r0, #28]
   1be88:	cmp	r0, #0
   1be8c:	beq	1beb8 <myhtml_tag_name_by_id@@Base+0x4c>
   1be90:	bl	10a24 <myhtml_tag_get_by_id@plt>
   1be94:	cmp	r0, #0
   1be98:	beq	1bec0 <myhtml_tag_name_by_id@@Base+0x54>
   1be9c:	cmp	r4, #0
   1bea0:	ldrne	r3, [r0, #8]
   1bea4:	strne	r3, [r4]
   1bea8:	ldr	r0, [r0, #4]
   1beac:	pop	{r4, pc}
   1beb0:	mov	r0, #0
   1beb4:	pop	{r4, pc}
   1beb8:	mov	r0, #0
   1bebc:	pop	{r4, pc}
   1bec0:	mov	r0, #0
   1bec4:	pop	{r4, pc}

0001bec8 <myhtml_tag_id_by_name@@Base>:
   1bec8:	cmp	r0, #0
   1becc:	beq	1bef4 <myhtml_tag_id_by_name@@Base+0x2c>
   1bed0:	ldr	r0, [r0, #28]
   1bed4:	cmp	r0, #0
   1bed8:	beq	1befc <myhtml_tag_id_by_name@@Base+0x34>
   1bedc:	push	{r4, lr}
   1bee0:	bl	10b74 <myhtml_tag_get_by_name@plt>
   1bee4:	cmp	r0, #0
   1bee8:	beq	1bf04 <myhtml_tag_id_by_name@@Base+0x3c>
   1beec:	ldr	r0, [r0]
   1bef0:	pop	{r4, pc}
   1bef4:	mov	r0, #0
   1bef8:	bx	lr
   1befc:	mov	r0, #0
   1bf00:	bx	lr
   1bf04:	mov	r0, #0
   1bf08:	pop	{r4, pc}

0001bf0c <myhtml_node_is_close_self@@Base>:
   1bf0c:	ldr	r3, [r0, #32]
   1bf10:	cmp	r3, #0
   1bf14:	ldrne	r0, [r3, #48]	; 0x30
   1bf18:	lsrne	r0, r0, #1
   1bf1c:	andne	r0, r0, #1
   1bf20:	moveq	r0, #0
   1bf24:	bx	lr

0001bf28 <myhtml_node_is_void_element@@Base>:
   1bf28:	ldr	r3, [r0, #4]
   1bf2c:	sub	r3, r3, #10
   1bf30:	cmp	r3, #132	; 0x84
   1bf34:	addls	pc, pc, r3, lsl #2
   1bf38:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1bf3c:	b	1c158 <myhtml_node_is_void_element@@Base+0x230>
   1bf40:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1bf44:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1bf48:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1bf4c:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1bf50:	b	1c158 <myhtml_node_is_void_element@@Base+0x230>
   1bf54:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1bf58:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1bf5c:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1bf60:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1bf64:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1bf68:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1bf6c:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1bf70:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1bf74:	b	1c158 <myhtml_node_is_void_element@@Base+0x230>
   1bf78:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1bf7c:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1bf80:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1bf84:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1bf88:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1bf8c:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1bf90:	b	1c158 <myhtml_node_is_void_element@@Base+0x230>
   1bf94:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1bf98:	b	1c158 <myhtml_node_is_void_element@@Base+0x230>
   1bf9c:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1bfa0:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1bfa4:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1bfa8:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1bfac:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1bfb0:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1bfb4:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1bfb8:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1bfbc:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1bfc0:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1bfc4:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1bfc8:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1bfcc:	b	1c158 <myhtml_node_is_void_element@@Base+0x230>
   1bfd0:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1bfd4:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1bfd8:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1bfdc:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1bfe0:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1bfe4:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1bfe8:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1bfec:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1bff0:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1bff4:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1bff8:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1bffc:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c000:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c004:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c008:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c00c:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c010:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c014:	b	1c158 <myhtml_node_is_void_element@@Base+0x230>
   1c018:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c01c:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c020:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c024:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c028:	b	1c158 <myhtml_node_is_void_element@@Base+0x230>
   1c02c:	b	1c158 <myhtml_node_is_void_element@@Base+0x230>
   1c030:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c034:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c038:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c03c:	b	1c158 <myhtml_node_is_void_element@@Base+0x230>
   1c040:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c044:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c048:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c04c:	b	1c158 <myhtml_node_is_void_element@@Base+0x230>
   1c050:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c054:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c058:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c05c:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c060:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c064:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c068:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c06c:	b	1c158 <myhtml_node_is_void_element@@Base+0x230>
   1c070:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c074:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c078:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c07c:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c080:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c084:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c088:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c08c:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c090:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c094:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c098:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c09c:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c0a0:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c0a4:	b	1c158 <myhtml_node_is_void_element@@Base+0x230>
   1c0a8:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c0ac:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c0b0:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c0b4:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c0b8:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c0bc:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c0c0:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c0c4:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c0c8:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c0cc:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c0d0:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c0d4:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c0d8:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c0dc:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c0e0:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c0e4:	b	1c158 <myhtml_node_is_void_element@@Base+0x230>
   1c0e8:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c0ec:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c0f0:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c0f4:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c0f8:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c0fc:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c100:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c104:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c108:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c10c:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c110:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c114:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c118:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c11c:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c120:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c124:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c128:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c12c:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c130:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c134:	b	1c158 <myhtml_node_is_void_element@@Base+0x230>
   1c138:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c13c:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c140:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c144:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c148:	b	1c150 <myhtml_node_is_void_element@@Base+0x228>
   1c14c:	b	1c158 <myhtml_node_is_void_element@@Base+0x230>
   1c150:	mov	r0, #0
   1c154:	bx	lr
   1c158:	mov	r0, #1
   1c15c:	bx	lr

0001c160 <myhtml_node_attribute_first@@Base>:
   1c160:	ldr	r3, [r0, #32]
   1c164:	cmp	r3, #0
   1c168:	ldrne	r0, [r3, #40]	; 0x28
   1c16c:	moveq	r0, #0
   1c170:	bx	lr

0001c174 <myhtml_node_attribute_last@@Base>:
   1c174:	ldr	r3, [r0, #32]
   1c178:	cmp	r3, #0
   1c17c:	ldrne	r0, [r3, #44]	; 0x2c
   1c180:	moveq	r0, #0
   1c184:	bx	lr

0001c188 <myhtml_node_text@@Base>:
   1c188:	ldr	r3, [r0, #32]
   1c18c:	cmp	r3, #0
   1c190:	beq	1c1c0 <myhtml_node_text@@Base+0x38>
   1c194:	ldr	r2, [r3, #12]
   1c198:	cmp	r2, #0
   1c19c:	beq	1c1c0 <myhtml_node_text@@Base+0x38>
   1c1a0:	ldr	r3, [r3, #4]
   1c1a4:	cmp	r3, #0
   1c1a8:	beq	1c1c0 <myhtml_node_text@@Base+0x38>
   1c1ac:	cmp	r1, #0
   1c1b0:	strne	r2, [r1]
   1c1b4:	ldr	r3, [r0, #32]
   1c1b8:	ldr	r0, [r3, #4]
   1c1bc:	bx	lr
   1c1c0:	cmp	r1, #0
   1c1c4:	mov	r0, #0
   1c1c8:	strne	r0, [r1]
   1c1cc:	bx	lr

0001c1d0 <myhtml_node_string@@Base>:
   1c1d0:	cmp	r0, #0
   1c1d4:	beq	1c1ec <myhtml_node_string@@Base+0x1c>
   1c1d8:	ldr	r0, [r0, #32]
   1c1dc:	cmp	r0, #0
   1c1e0:	beq	1c1f4 <myhtml_node_string@@Base+0x24>
   1c1e4:	add	r0, r0, #4
   1c1e8:	bx	lr
   1c1ec:	mov	r0, #0
   1c1f0:	bx	lr
   1c1f4:	mov	r0, #0
   1c1f8:	bx	lr

0001c1fc <myhtml_node_raw_position@@Base>:
   1c1fc:	cmp	r1, #0
   1c200:	beq	1c224 <myhtml_node_raw_position@@Base+0x28>
   1c204:	ldr	r3, [r1, #32]
   1c208:	cmp	r3, #0
   1c20c:	beq	1c224 <myhtml_node_raw_position@@Base+0x28>
   1c210:	ldr	r2, [r3, #28]
   1c214:	ldr	r3, [r3, #24]
   1c218:	str	r3, [r0]
   1c21c:	str	r2, [r0, #4]
   1c220:	bx	lr
   1c224:	mov	r3, #0
   1c228:	str	r3, [r0]
   1c22c:	str	r3, [r0, #4]
   1c230:	bx	lr

0001c234 <myhtml_node_element_position@@Base>:
   1c234:	cmp	r1, #0
   1c238:	beq	1c25c <myhtml_node_element_position@@Base+0x28>
   1c23c:	ldr	r3, [r1, #32]
   1c240:	cmp	r3, #0
   1c244:	beq	1c25c <myhtml_node_element_position@@Base+0x28>
   1c248:	ldr	r2, [r3, #36]	; 0x24
   1c24c:	ldr	r3, [r3, #32]
   1c250:	str	r3, [r0]
   1c254:	str	r2, [r0, #4]
   1c258:	bx	lr
   1c25c:	mov	r3, #0
   1c260:	str	r3, [r0]
   1c264:	str	r3, [r0, #4]
   1c268:	bx	lr

0001c26c <myhtml_node_set_data@@Base>:
   1c26c:	str	r1, [r0, #36]	; 0x24
   1c270:	bx	lr

0001c274 <myhtml_node_get_data@@Base>:
   1c274:	ldr	r0, [r0, #36]	; 0x24
   1c278:	bx	lr

0001c27c <myhtml_node_tree@@Base>:
   1c27c:	ldr	r0, [r0, #40]	; 0x28
   1c280:	bx	lr

0001c284 <myhtml_attribute_next@@Base>:
   1c284:	ldr	r0, [r0]
   1c288:	bx	lr

0001c28c <myhtml_attribute_prev@@Base>:
   1c28c:	ldr	r0, [r0, #4]
   1c290:	bx	lr

0001c294 <myhtml_attribute_namespace@@Base>:
   1c294:	ldr	r0, [r0, #64]	; 0x40
   1c298:	bx	lr

0001c29c <myhtml_attribute_namespace_set@@Base>:
   1c29c:	str	r1, [r0, #64]	; 0x40
   1c2a0:	bx	lr

0001c2a4 <myhtml_attribute_key@@Base>:
   1c2a4:	ldr	r3, [r0, #8]
   1c2a8:	cmp	r3, #0
   1c2ac:	beq	1c2cc <myhtml_attribute_key@@Base+0x28>
   1c2b0:	ldr	r3, [r0, #16]
   1c2b4:	cmp	r3, #0
   1c2b8:	beq	1c2cc <myhtml_attribute_key@@Base+0x28>
   1c2bc:	cmp	r1, #0
   1c2c0:	strne	r3, [r1]
   1c2c4:	ldr	r0, [r0, #8]
   1c2c8:	bx	lr
   1c2cc:	cmp	r1, #0
   1c2d0:	mov	r0, #0
   1c2d4:	strne	r0, [r1]
   1c2d8:	bx	lr

0001c2dc <myhtml_attribute_value@@Base>:
   1c2dc:	ldr	r3, [r0, #28]
   1c2e0:	cmp	r3, #0
   1c2e4:	beq	1c304 <myhtml_attribute_value@@Base+0x28>
   1c2e8:	ldr	r3, [r0, #36]	; 0x24
   1c2ec:	cmp	r3, #0
   1c2f0:	beq	1c304 <myhtml_attribute_value@@Base+0x28>
   1c2f4:	cmp	r1, #0
   1c2f8:	strne	r3, [r1]
   1c2fc:	ldr	r0, [r0, #28]
   1c300:	bx	lr
   1c304:	cmp	r1, #0
   1c308:	mov	r0, #0
   1c30c:	strne	r0, [r1]
   1c310:	bx	lr

0001c314 <myhtml_attribute_key_string@@Base>:
   1c314:	cmp	r0, #0
   1c318:	addne	r0, r0, #8
   1c31c:	moveq	r0, #0
   1c320:	bx	lr

0001c324 <myhtml_attribute_value_string@@Base>:
   1c324:	cmp	r0, #0
   1c328:	addne	r0, r0, #28
   1c32c:	moveq	r0, #0
   1c330:	bx	lr

0001c334 <myhtml_attribute_by_key@@Base>:
   1c334:	cmp	r0, #0
   1c338:	beq	1c354 <myhtml_attribute_by_key@@Base+0x20>
   1c33c:	ldr	r0, [r0, #32]
   1c340:	cmp	r0, #0
   1c344:	beq	1c35c <myhtml_attribute_by_key@@Base+0x28>
   1c348:	push	{r4, lr}
   1c34c:	bl	10eb0 <myhtml_token_attr_by_name@plt>
   1c350:	pop	{r4, pc}
   1c354:	mov	r0, #0
   1c358:	bx	lr
   1c35c:	mov	r0, #0
   1c360:	bx	lr

0001c364 <myhtml_attribute_add@@Base>:
   1c364:	push	{r4, r5, r6, r7, r8, lr}
   1c368:	sub	sp, sp, #16
   1c36c:	subs	r4, r0, #0
   1c370:	beq	1c3f0 <myhtml_attribute_add@@Base+0x8c>
   1c374:	mov	r8, r3
   1c378:	mov	r7, r2
   1c37c:	mov	r6, r1
   1c380:	ldr	r5, [r4, #40]	; 0x28
   1c384:	ldr	r3, [r4, #32]
   1c388:	cmp	r3, #0
   1c38c:	beq	1c3c8 <myhtml_attribute_add@@Base+0x64>
   1c390:	ldr	r1, [r4, #32]
   1c394:	ldr	r0, [r5, #8]
   1c398:	ldr	r3, [sp, #44]	; 0x2c
   1c39c:	str	r3, [sp, #12]
   1c3a0:	ldr	r3, [r5, #40]	; 0x28
   1c3a4:	str	r3, [sp, #8]
   1c3a8:	ldr	r3, [sp, #40]	; 0x28
   1c3ac:	str	r3, [sp, #4]
   1c3b0:	str	r8, [sp]
   1c3b4:	mov	r3, r7
   1c3b8:	mov	r2, r6
   1c3bc:	bl	107f0 <myhtml_token_node_attr_append_with_convert_encoding@plt>
   1c3c0:	add	sp, sp, #16
   1c3c4:	pop	{r4, r5, r6, r7, r8, pc}
   1c3c8:	ldr	r1, [r5, #40]	; 0x28
   1c3cc:	ldr	r0, [r5, #8]
   1c3d0:	bl	10a0c <myhtml_token_node_create@plt>
   1c3d4:	str	r0, [r4, #32]
   1c3d8:	cmp	r0, #0
   1c3dc:	beq	1c3f8 <myhtml_attribute_add@@Base+0x94>
   1c3e0:	ldr	r3, [r0, #48]	; 0x30
   1c3e4:	orr	r3, r3, #4
   1c3e8:	str	r3, [r0, #48]	; 0x30
   1c3ec:	b	1c390 <myhtml_attribute_add@@Base+0x2c>
   1c3f0:	mov	r0, #0
   1c3f4:	b	1c3c0 <myhtml_attribute_add@@Base+0x5c>
   1c3f8:	mov	r0, #0
   1c3fc:	b	1c3c0 <myhtml_attribute_add@@Base+0x5c>

0001c400 <myhtml_attribute_remove@@Base>:
   1c400:	cmp	r0, #0
   1c404:	beq	1c420 <myhtml_attribute_remove@@Base+0x20>
   1c408:	ldr	r0, [r0, #32]
   1c40c:	cmp	r0, #0
   1c410:	beq	1c428 <myhtml_attribute_remove@@Base+0x28>
   1c414:	push	{r4, lr}
   1c418:	bl	10574 <myhtml_token_attr_remove@plt>
   1c41c:	pop	{r4, pc}
   1c420:	mov	r0, #0
   1c424:	bx	lr
   1c428:	mov	r0, #0
   1c42c:	bx	lr

0001c430 <myhtml_attribute_remove_by_key@@Base>:
   1c430:	cmp	r0, #0
   1c434:	beq	1c450 <myhtml_attribute_remove_by_key@@Base+0x20>
   1c438:	ldr	r0, [r0, #32]
   1c43c:	cmp	r0, #0
   1c440:	beq	1c458 <myhtml_attribute_remove_by_key@@Base+0x28>
   1c444:	push	{r4, lr}
   1c448:	bl	10e98 <myhtml_token_attr_remove_by_name@plt>
   1c44c:	pop	{r4, pc}
   1c450:	mov	r0, #0
   1c454:	bx	lr
   1c458:	mov	r0, #0
   1c45c:	bx	lr

0001c460 <myhtml_attribute_free@@Base>:
   1c460:	push	{r4, r5, r6, lr}
   1c464:	mov	r5, r0
   1c468:	mov	r4, r1
   1c46c:	ldr	r2, [r1, #8]
   1c470:	cmp	r2, #0
   1c474:	beq	1c484 <myhtml_attribute_free@@Base+0x24>
   1c478:	ldr	r1, [r1, #24]
   1c47c:	ldr	r0, [r4, #20]
   1c480:	bl	10718 <mchar_async_free@plt>
   1c484:	ldr	r2, [r4, #28]
   1c488:	cmp	r2, #0
   1c48c:	beq	1c49c <myhtml_attribute_free@@Base+0x3c>
   1c490:	ldr	r1, [r4, #44]	; 0x2c
   1c494:	ldr	r0, [r4, #40]	; 0x28
   1c498:	bl	10718 <mchar_async_free@plt>
   1c49c:	ldr	r3, [r5, #8]
   1c4a0:	mov	r1, r4
   1c4a4:	ldr	r0, [r3, #8]
   1c4a8:	bl	1004c <mcobject_async_free@plt>
   1c4ac:	pop	{r4, r5, r6, pc}

0001c4b0 <myhtml_attribute_delete@@Base>:
   1c4b0:	cmp	r1, #0
   1c4b4:	bxeq	lr
   1c4b8:	ldr	r3, [r1, #32]
   1c4bc:	cmp	r3, #0
   1c4c0:	bxeq	lr
   1c4c4:	push	{r4, r5, r6, lr}
   1c4c8:	mov	r4, r2
   1c4cc:	mov	r5, r0
   1c4d0:	mov	r1, r2
   1c4d4:	mov	r0, r3
   1c4d8:	bl	10574 <myhtml_token_attr_remove@plt>
   1c4dc:	mov	r1, r4
   1c4e0:	mov	r0, r5
   1c4e4:	bl	107a8 <myhtml_attribute_free@plt>
   1c4e8:	pop	{r4, r5, r6, pc}

0001c4ec <myhtml_attribute_key_raw_position@@Base>:
   1c4ec:	cmp	r1, #0
   1c4f0:	ldrne	r3, [r1, #52]	; 0x34
   1c4f4:	ldrne	r2, [r1, #48]	; 0x30
   1c4f8:	strne	r2, [r0]
   1c4fc:	moveq	r3, #0
   1c500:	streq	r3, [r0]
   1c504:	str	r3, [r0, #4]
   1c508:	bx	lr

0001c50c <myhtml_attribute_value_raw_position@@Base>:
   1c50c:	cmp	r1, #0
   1c510:	ldrne	r3, [r1, #60]	; 0x3c
   1c514:	ldrne	r2, [r1, #56]	; 0x38
   1c518:	strne	r2, [r0]
   1c51c:	moveq	r3, #0
   1c520:	streq	r3, [r0]
   1c524:	str	r3, [r0, #4]
   1c528:	bx	lr

0001c52c <myhtml_collection_create@@Base>:
   1c52c:	push	{r4, r5, r6, lr}
   1c530:	mov	r6, r0
   1c534:	mov	r5, r1
   1c538:	mov	r0, #12
   1c53c:	bl	10c94 <mycore_malloc@plt>
   1c540:	subs	r4, r0, #0
   1c544:	beq	1c57c <myhtml_collection_create@@Base+0x50>
   1c548:	str	r6, [r4, #4]
   1c54c:	mov	r3, #0
   1c550:	str	r3, [r4, #8]
   1c554:	lsl	r0, r6, #2
   1c558:	bl	10c94 <mycore_malloc@plt>
   1c55c:	str	r0, [r4]
   1c560:	cmp	r0, #0
   1c564:	beq	1c58c <myhtml_collection_create@@Base+0x60>
   1c568:	cmp	r5, #0
   1c56c:	movne	r3, #0
   1c570:	strne	r3, [r5]
   1c574:	mov	r0, r4
   1c578:	pop	{r4, r5, r6, pc}
   1c57c:	cmp	r5, #0
   1c580:	movne	r3, #2
   1c584:	strne	r3, [r5]
   1c588:	b	1c574 <myhtml_collection_create@@Base+0x48>
   1c58c:	mov	r0, r4
   1c590:	bl	10dcc <mycore_free@plt>
   1c594:	cmp	r5, #0
   1c598:	moveq	r4, #0
   1c59c:	movne	r3, #2
   1c5a0:	strne	r3, [r5]
   1c5a4:	movne	r4, #0
   1c5a8:	b	1c574 <myhtml_collection_create@@Base+0x48>

0001c5ac <myhtml_collection_check_size@@Base>:
   1c5ac:	ldr	r3, [r0, #8]
   1c5b0:	add	r1, r1, r3
   1c5b4:	ldr	r3, [r0, #4]
   1c5b8:	cmp	r1, r3
   1c5bc:	bcs	1c5c8 <myhtml_collection_check_size@@Base+0x1c>
   1c5c0:	mov	r0, #0
   1c5c4:	bx	lr
   1c5c8:	push	{r4, r5, r6, lr}
   1c5cc:	mov	r4, r0
   1c5d0:	add	r5, r2, #1
   1c5d4:	add	r5, r5, r1
   1c5d8:	lsl	r1, r5, #2
   1c5dc:	ldr	r0, [r0]
   1c5e0:	bl	fbd8 <mycore_realloc@plt>
   1c5e4:	cmp	r0, #0
   1c5e8:	beq	1c5fc <myhtml_collection_check_size@@Base+0x50>
   1c5ec:	str	r5, [r4, #4]
   1c5f0:	str	r0, [r4]
   1c5f4:	mov	r0, #0
   1c5f8:	pop	{r4, r5, r6, pc}
   1c5fc:	mov	r0, #2
   1c600:	pop	{r4, r5, r6, pc}

0001c604 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base>:
   1c604:	push	{r4, r5, r6, r7, r8, lr}
   1c608:	subs	r4, r0, #0
   1c60c:	beq	1c6a0 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x9c>
   1c610:	mov	r5, r1
   1c614:	mov	r6, r2
   1c618:	mov	r8, #0
   1c61c:	mov	r7, #1024	; 0x400
   1c620:	b	1c670 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x6c>
   1c624:	ldr	r2, [r5, #8]
   1c628:	ldr	r3, [r5]
   1c62c:	str	r4, [r3, r2, lsl #2]
   1c630:	ldr	r3, [r5, #8]
   1c634:	add	r3, r3, #1
   1c638:	str	r3, [r5, #8]
   1c63c:	ldr	r2, [r5, #4]
   1c640:	cmp	r3, r2
   1c644:	bcc	1c67c <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x78>
   1c648:	mov	r2, r8
   1c64c:	mov	r1, r7
   1c650:	mov	r0, r5
   1c654:	bl	10dfc <myhtml_collection_check_size@plt>
   1c658:	cmp	r0, #0
   1c65c:	beq	1c67c <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x78>
   1c660:	pop	{r4, r5, r6, r7, r8, pc}
   1c664:	ldr	r4, [r4, #16]
   1c668:	cmp	r4, #0
   1c66c:	beq	1c698 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x94>
   1c670:	ldr	r3, [r4, #4]
   1c674:	cmp	r3, r6
   1c678:	beq	1c624 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x20>
   1c67c:	ldr	r0, [r4, #20]
   1c680:	cmp	r0, #0
   1c684:	beq	1c664 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x60>
   1c688:	mov	r2, r6
   1c68c:	mov	r1, r5
   1c690:	bl	10c4c <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@plt>
   1c694:	b	1c664 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x60>
   1c698:	mov	r0, #0
   1c69c:	pop	{r4, r5, r6, r7, r8, pc}
   1c6a0:	mov	r0, #0
   1c6a4:	pop	{r4, r5, r6, r7, r8, pc}

0001c6a8 <myhtml_get_nodes_by_tag_id_in_scope@@Base>:
   1c6a8:	push	{r4, r5, r6, r7, lr}
   1c6ac:	sub	sp, sp, #12
   1c6b0:	ldr	r5, [sp, #32]
   1c6b4:	subs	r6, r2, #0
   1c6b8:	beq	1c748 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0xa0>
   1c6bc:	mov	r4, r1
   1c6c0:	mov	r7, r3
   1c6c4:	mov	r3, #0
   1c6c8:	str	r3, [sp, #4]
   1c6cc:	cmp	r1, r3
   1c6d0:	beq	1c718 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x70>
   1c6d4:	ldr	r0, [r6, #20]
   1c6d8:	cmp	r0, #0
   1c6dc:	beq	1c6f0 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x48>
   1c6e0:	mov	r2, r7
   1c6e4:	mov	r1, r4
   1c6e8:	bl	10c4c <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@plt>
   1c6ec:	str	r0, [sp, #4]
   1c6f0:	ldr	r2, [r4, #8]
   1c6f4:	ldr	r3, [r4]
   1c6f8:	mov	r1, #0
   1c6fc:	str	r1, [r3, r2, lsl #2]
   1c700:	cmp	r5, r1
   1c704:	beq	1c750 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0xa8>
   1c708:	ldr	r3, [sp, #4]
   1c70c:	str	r3, [r5]
   1c710:	mov	r0, r4
   1c714:	b	1c738 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x90>
   1c718:	add	r1, sp, #4
   1c71c:	mov	r0, #1024	; 0x400
   1c720:	bl	10304 <myhtml_collection_create@plt>
   1c724:	ldr	r3, [sp, #4]
   1c728:	cmp	r3, #0
   1c72c:	beq	1c740 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x98>
   1c730:	cmp	r5, #0
   1c734:	strne	r3, [r5]
   1c738:	add	sp, sp, #12
   1c73c:	pop	{r4, r5, r6, r7, pc}
   1c740:	mov	r4, r0
   1c744:	b	1c6d4 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x2c>
   1c748:	mov	r0, #0
   1c74c:	b	1c738 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x90>
   1c750:	mov	r0, r4
   1c754:	b	1c738 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x90>

0001c758 <myhtml_get_nodes_by_name_in_scope@@Base>:
   1c758:	push	{r4, r5, r6, lr}
   1c75c:	sub	sp, sp, #8
   1c760:	mov	r4, r0
   1c764:	mov	r5, r1
   1c768:	mov	r6, r2
   1c76c:	ldr	r2, [sp, #24]
   1c770:	mov	r1, r3
   1c774:	ldr	r0, [r0, #28]
   1c778:	bl	10b74 <myhtml_tag_get_by_name@plt>
   1c77c:	cmp	r0, #0
   1c780:	beq	1c7a8 <myhtml_get_nodes_by_name_in_scope@@Base+0x50>
   1c784:	ldr	r3, [r0]
   1c788:	ldr	r2, [sp, #28]
   1c78c:	str	r2, [sp]
   1c790:	mov	r2, r6
   1c794:	mov	r1, r5
   1c798:	mov	r0, r4
   1c79c:	bl	ff38 <myhtml_get_nodes_by_tag_id_in_scope@plt>
   1c7a0:	add	sp, sp, #8
   1c7a4:	pop	{r4, r5, r6, pc}
   1c7a8:	mov	r0, #0
   1c7ac:	b	1c7a0 <myhtml_get_nodes_by_name_in_scope@@Base+0x48>

0001c7b0 <myhtml_get_nodes_by_tag_id@@Base>:
   1c7b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c7b4:	mov	r7, r0
   1c7b8:	mov	r5, r2
   1c7bc:	mov	sl, r3
   1c7c0:	subs	r6, r1, #0
   1c7c4:	beq	1c808 <myhtml_get_nodes_by_tag_id@@Base+0x58>
   1c7c8:	ldr	r4, [r7, #96]	; 0x60
   1c7cc:	cmp	r4, #0
   1c7d0:	movne	r9, #1024	; 0x400
   1c7d4:	movne	r8, #1
   1c7d8:	bne	1c87c <myhtml_get_nodes_by_tag_id@@Base+0xcc>
   1c7dc:	mov	r2, #1024	; 0x400
   1c7e0:	mov	r1, #1
   1c7e4:	mov	r0, r6
   1c7e8:	bl	10dfc <myhtml_collection_check_size@plt>
   1c7ec:	cmp	r0, #0
   1c7f0:	beq	1c860 <myhtml_get_nodes_by_tag_id@@Base+0xb0>
   1c7f4:	cmp	sl, #0
   1c7f8:	movne	r3, #2
   1c7fc:	strne	r3, [sl]
   1c800:	mov	r0, r6
   1c804:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c808:	mov	r0, #1024	; 0x400
   1c80c:	bl	10304 <myhtml_collection_create@plt>
   1c810:	subs	r6, r0, #0
   1c814:	bne	1c7c8 <myhtml_get_nodes_by_tag_id@@Base+0x18>
   1c818:	b	1c800 <myhtml_get_nodes_by_tag_id@@Base+0x50>
   1c81c:	mov	r2, r9
   1c820:	mov	r1, r8
   1c824:	mov	r0, r6
   1c828:	bl	10dfc <myhtml_collection_check_size@plt>
   1c82c:	cmp	r0, #0
   1c830:	bne	1c850 <myhtml_get_nodes_by_tag_id@@Base+0xa0>
   1c834:	ldr	r2, [r6, #8]
   1c838:	ldr	r3, [r6]
   1c83c:	str	r4, [r3, r2, lsl #2]
   1c840:	ldr	r3, [r6, #8]
   1c844:	add	r3, r3, #1
   1c848:	str	r3, [r6, #8]
   1c84c:	b	1c888 <myhtml_get_nodes_by_tag_id@@Base+0xd8>
   1c850:	cmp	sl, #0
   1c854:	movne	r3, #2
   1c858:	strne	r3, [sl]
   1c85c:	b	1c800 <myhtml_get_nodes_by_tag_id@@Base+0x50>
   1c860:	ldr	r2, [r6, #8]
   1c864:	ldr	r3, [r6]
   1c868:	mov	r1, #0
   1c86c:	str	r1, [r3, r2, lsl #2]
   1c870:	b	1c800 <myhtml_get_nodes_by_tag_id@@Base+0x50>
   1c874:	ldr	r3, [r4, #16]
   1c878:	mov	r4, r3
   1c87c:	ldr	r3, [r4, #4]
   1c880:	cmp	r3, r5
   1c884:	beq	1c81c <myhtml_get_nodes_by_tag_id@@Base+0x6c>
   1c888:	ldr	r3, [r4, #20]
   1c88c:	cmp	r3, #0
   1c890:	bne	1c878 <myhtml_get_nodes_by_tag_id@@Base+0xc8>
   1c894:	ldr	r2, [r7, #96]	; 0x60
   1c898:	cmp	r2, r4
   1c89c:	beq	1c7dc <myhtml_get_nodes_by_tag_id@@Base+0x2c>
   1c8a0:	ldr	r3, [r4, #16]
   1c8a4:	cmp	r3, #0
   1c8a8:	bne	1c874 <myhtml_get_nodes_by_tag_id@@Base+0xc4>
   1c8ac:	ldr	r4, [r4, #24]
   1c8b0:	cmp	r4, r2
   1c8b4:	beq	1c7dc <myhtml_get_nodes_by_tag_id@@Base+0x2c>
   1c8b8:	ldr	r3, [r4, #16]
   1c8bc:	cmp	r3, #0
   1c8c0:	beq	1c8ac <myhtml_get_nodes_by_tag_id@@Base+0xfc>
   1c8c4:	b	1c874 <myhtml_get_nodes_by_tag_id@@Base+0xc4>

0001c8c8 <myhtml_get_nodes_by_name@@Base>:
   1c8c8:	push	{r4, r5, r6, lr}
   1c8cc:	mov	r4, r0
   1c8d0:	mov	r5, r1
   1c8d4:	mov	r1, r2
   1c8d8:	mov	r2, r3
   1c8dc:	ldr	r0, [r0, #28]
   1c8e0:	bl	10b74 <myhtml_tag_get_by_name@plt>
   1c8e4:	cmp	r0, #0
   1c8e8:	beq	1c904 <myhtml_get_nodes_by_name@@Base+0x3c>
   1c8ec:	ldr	r3, [sp, #16]
   1c8f0:	ldr	r2, [r0]
   1c8f4:	mov	r1, r5
   1c8f8:	mov	r0, r4
   1c8fc:	bl	1031c <myhtml_get_nodes_by_tag_id@plt>
   1c900:	pop	{r4, r5, r6, pc}
   1c904:	mov	r0, #0
   1c908:	pop	{r4, r5, r6, pc}

0001c90c <myhtml_get_nodes_by_attribute_key_recursion@@Base>:
   1c90c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c910:	subs	r9, r0, #0
   1c914:	beq	1c9ec <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xe0>
   1c918:	mov	r5, r3
   1c91c:	mov	r8, r2
   1c920:	mov	r7, r1
   1c924:	mov	r6, r9
   1c928:	mov	fp, #0
   1c92c:	mov	sl, #1024	; 0x400
   1c930:	b	1c9b0 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xa4>
   1c934:	ldr	r4, [r4]
   1c938:	cmp	r4, #0
   1c93c:	beq	1c9a0 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x94>
   1c940:	ldr	r2, [r4, #16]
   1c944:	cmp	r2, r5
   1c948:	bne	1c934 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x28>
   1c94c:	mov	r1, r8
   1c950:	ldr	r0, [r4, #8]
   1c954:	bl	102a4 <mycore_strncasecmp@plt>
   1c958:	cmp	r0, #0
   1c95c:	bne	1c934 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x28>
   1c960:	ldr	r2, [r7, #8]
   1c964:	ldr	r3, [r7]
   1c968:	str	r6, [r3, r2, lsl #2]
   1c96c:	ldr	r3, [r7, #8]
   1c970:	add	r3, r3, #1
   1c974:	str	r3, [r7, #8]
   1c978:	ldr	r2, [r7, #4]
   1c97c:	cmp	r3, r2
   1c980:	bcc	1c934 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x28>
   1c984:	mov	r2, fp
   1c988:	mov	r1, sl
   1c98c:	mov	r0, r7
   1c990:	bl	10dfc <myhtml_collection_check_size@plt>
   1c994:	cmp	r0, #0
   1c998:	beq	1c934 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x28>
   1c99c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c9a0:	ldr	r3, [r6, #20]
   1c9a4:	cmp	r3, #0
   1c9a8:	beq	1c9cc <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xc0>
   1c9ac:	mov	r6, r3
   1c9b0:	ldr	r3, [r6, #32]
   1c9b4:	cmp	r3, #0
   1c9b8:	beq	1c9a0 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x94>
   1c9bc:	ldr	r4, [r3, #40]	; 0x28
   1c9c0:	cmp	r4, #0
   1c9c4:	bne	1c940 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x34>
   1c9c8:	b	1c9a0 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x94>
   1c9cc:	ldr	r3, [r6, #16]
   1c9d0:	cmp	r3, #0
   1c9d4:	bne	1c9ac <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xa0>
   1c9d8:	ldr	r6, [r6, #24]
   1c9dc:	cmp	r9, r6
   1c9e0:	bne	1c9cc <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xc0>
   1c9e4:	mov	r0, #0
   1c9e8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c9ec:	mov	r0, #0
   1c9f0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001c9f4 <myhtml_get_nodes_by_attribute_key@@Base>:
   1c9f4:	push	{r4, r5, r6, r7, r8, lr}
   1c9f8:	mov	r8, r0
   1c9fc:	mov	r4, r2
   1ca00:	mov	r7, r3
   1ca04:	ldr	r6, [sp, #28]
   1ca08:	subs	r5, r1, #0
   1ca0c:	beq	1ca40 <myhtml_get_nodes_by_attribute_key@@Base+0x4c>
   1ca10:	cmp	r4, #0
   1ca14:	ldreq	r4, [r8, #96]	; 0x60
   1ca18:	ldr	r3, [sp, #24]
   1ca1c:	mov	r2, r7
   1ca20:	mov	r1, r5
   1ca24:	mov	r0, r4
   1ca28:	bl	fea8 <myhtml_get_nodes_by_attribute_key_recursion@plt>
   1ca2c:	cmp	r0, #0
   1ca30:	cmpne	r6, #0
   1ca34:	strne	r0, [r6]
   1ca38:	mov	r0, r5
   1ca3c:	pop	{r4, r5, r6, r7, r8, pc}
   1ca40:	mov	r1, r6
   1ca44:	mov	r0, #1024	; 0x400
   1ca48:	bl	10304 <myhtml_collection_create@plt>
   1ca4c:	cmp	r6, #0
   1ca50:	beq	1ca60 <myhtml_get_nodes_by_attribute_key@@Base+0x6c>
   1ca54:	ldr	r3, [r6]
   1ca58:	cmp	r3, #0
   1ca5c:	bne	1ca38 <myhtml_get_nodes_by_attribute_key@@Base+0x44>
   1ca60:	cmp	r0, #0
   1ca64:	movne	r5, r0
   1ca68:	bne	1ca10 <myhtml_get_nodes_by_attribute_key@@Base+0x1c>
   1ca6c:	mov	r5, r0
   1ca70:	b	1ca38 <myhtml_get_nodes_by_attribute_key@@Base+0x44>

0001ca74 <myhtml_get_nodes_by_attribute_value_recursion@@Base>:
   1ca74:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ca78:	ldr	r9, [sp, #40]	; 0x28
   1ca7c:	subs	sl, r0, #0
   1ca80:	beq	1cb4c <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xd8>
   1ca84:	mov	r8, r3
   1ca88:	mov	r7, r2
   1ca8c:	mov	r5, r1
   1ca90:	mov	r6, sl
   1ca94:	mov	fp, #0
   1ca98:	b	1cb10 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x9c>
   1ca9c:	ldr	r4, [r4]
   1caa0:	cmp	r4, #0
   1caa4:	beq	1cb00 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x8c>
   1caa8:	mov	r2, r9
   1caac:	mov	r1, r8
   1cab0:	add	r0, r4, #28
   1cab4:	blx	r7
   1cab8:	cmp	r0, #0
   1cabc:	beq	1ca9c <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x28>
   1cac0:	ldr	r2, [r5, #8]
   1cac4:	ldr	r3, [r5]
   1cac8:	str	r6, [r3, r2, lsl #2]
   1cacc:	ldr	r3, [r5, #8]
   1cad0:	add	r3, r3, #1
   1cad4:	str	r3, [r5, #8]
   1cad8:	ldr	r2, [r5, #4]
   1cadc:	cmp	r3, r2
   1cae0:	bcc	1ca9c <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x28>
   1cae4:	mov	r2, fp
   1cae8:	mov	r1, #1024	; 0x400
   1caec:	mov	r0, r5
   1caf0:	bl	10dfc <myhtml_collection_check_size@plt>
   1caf4:	cmp	r0, #0
   1caf8:	beq	1ca9c <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x28>
   1cafc:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cb00:	ldr	r3, [r6, #20]
   1cb04:	cmp	r3, #0
   1cb08:	beq	1cb2c <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xb8>
   1cb0c:	mov	r6, r3
   1cb10:	ldr	r3, [r6, #32]
   1cb14:	cmp	r3, #0
   1cb18:	beq	1cb00 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x8c>
   1cb1c:	ldr	r4, [r3, #40]	; 0x28
   1cb20:	cmp	r4, #0
   1cb24:	bne	1caa8 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x34>
   1cb28:	b	1cb00 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x8c>
   1cb2c:	ldr	r3, [r6, #16]
   1cb30:	cmp	r3, #0
   1cb34:	bne	1cb0c <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x98>
   1cb38:	ldr	r6, [r6, #24]
   1cb3c:	cmp	sl, r6
   1cb40:	bne	1cb2c <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xb8>
   1cb44:	mov	r0, #0
   1cb48:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cb4c:	mov	r0, #0
   1cb50:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001cb54 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base>:
   1cb54:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cb58:	ldr	r5, [sp, #40]	; 0x28
   1cb5c:	subs	r8, r0, #0
   1cb60:	beq	1cc4c <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xf8>
   1cb64:	mov	r7, r3
   1cb68:	mov	sl, r2
   1cb6c:	mov	r9, r1
   1cb70:	mov	r6, r8
   1cb74:	mov	fp, #0
   1cb78:	b	1cc10 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xbc>
   1cb7c:	ldr	r4, [r4]
   1cb80:	cmp	r4, #0
   1cb84:	beq	1cc00 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xac>
   1cb88:	ldr	r2, [r4, #16]
   1cb8c:	cmp	r2, r5
   1cb90:	bne	1cb7c <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x28>
   1cb94:	mov	r1, r7
   1cb98:	ldr	r0, [r4, #8]
   1cb9c:	bl	102a4 <mycore_strncasecmp@plt>
   1cba0:	cmp	r0, #0
   1cba4:	bne	1cb7c <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x28>
   1cba8:	ldr	r2, [sp, #48]	; 0x30
   1cbac:	ldr	r1, [sp, #44]	; 0x2c
   1cbb0:	add	r0, r4, #28
   1cbb4:	blx	sl
   1cbb8:	cmp	r0, #0
   1cbbc:	beq	1cb7c <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x28>
   1cbc0:	ldr	r2, [r9, #8]
   1cbc4:	ldr	r3, [r9]
   1cbc8:	str	r6, [r3, r2, lsl #2]
   1cbcc:	ldr	r3, [r9, #8]
   1cbd0:	add	r3, r3, #1
   1cbd4:	str	r3, [r9, #8]
   1cbd8:	ldr	r2, [r9, #4]
   1cbdc:	cmp	r3, r2
   1cbe0:	bcc	1cb7c <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x28>
   1cbe4:	mov	r2, fp
   1cbe8:	mov	r1, #1024	; 0x400
   1cbec:	mov	r0, r9
   1cbf0:	bl	10dfc <myhtml_collection_check_size@plt>
   1cbf4:	cmp	r0, #0
   1cbf8:	beq	1cb7c <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x28>
   1cbfc:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cc00:	ldr	r3, [r6, #20]
   1cc04:	cmp	r3, #0
   1cc08:	beq	1cc2c <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xd8>
   1cc0c:	mov	r6, r3
   1cc10:	ldr	r3, [r6, #32]
   1cc14:	cmp	r3, #0
   1cc18:	beq	1cc00 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xac>
   1cc1c:	ldr	r4, [r3, #40]	; 0x28
   1cc20:	cmp	r4, #0
   1cc24:	bne	1cb88 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x34>
   1cc28:	b	1cc00 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xac>
   1cc2c:	ldr	r3, [r6, #16]
   1cc30:	cmp	r3, #0
   1cc34:	bne	1cc0c <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xb8>
   1cc38:	ldr	r6, [r6, #24]
   1cc3c:	cmp	r8, r6
   1cc40:	bne	1cc2c <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xd8>
   1cc44:	mov	r0, #0
   1cc48:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cc4c:	mov	r0, #0
   1cc50:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001cc54 <_myhtml_get_nodes_by_attribute_value@@Base>:
   1cc54:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1cc58:	sub	sp, sp, #16
   1cc5c:	mov	sl, r0
   1cc60:	mov	r4, r2
   1cc64:	mov	r9, r3
   1cc68:	ldr	r7, [sp, #48]	; 0x30
   1cc6c:	ldr	r8, [sp, #52]	; 0x34
   1cc70:	ldr	r6, [sp, #64]	; 0x40
   1cc74:	subs	r5, r1, #0
   1cc78:	beq	1ccd0 <_myhtml_get_nodes_by_attribute_value@@Base+0x7c>
   1cc7c:	cmp	r4, #0
   1cc80:	ldreq	r4, [sl, #96]	; 0x60
   1cc84:	cmp	r7, #0
   1cc88:	cmpne	r8, #0
   1cc8c:	beq	1cd00 <_myhtml_get_nodes_by_attribute_value@@Base+0xac>
   1cc90:	ldr	r3, [sp, #60]	; 0x3c
   1cc94:	str	r3, [sp, #8]
   1cc98:	ldr	r3, [sp, #56]	; 0x38
   1cc9c:	str	r3, [sp, #4]
   1cca0:	str	r8, [sp]
   1cca4:	mov	r3, r7
   1cca8:	mov	r2, r9
   1ccac:	mov	r1, r5
   1ccb0:	mov	r0, r4
   1ccb4:	bl	fdf4 <myhtml_get_nodes_by_attribute_value_recursion_by_key@plt>
   1ccb8:	cmp	r0, #0
   1ccbc:	cmpne	r6, #0
   1ccc0:	strne	r0, [r6]
   1ccc4:	mov	r0, r5
   1ccc8:	add	sp, sp, #16
   1cccc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ccd0:	mov	r1, r6
   1ccd4:	mov	r0, #1024	; 0x400
   1ccd8:	bl	10304 <myhtml_collection_create@plt>
   1ccdc:	cmp	r6, #0
   1cce0:	beq	1ccf0 <_myhtml_get_nodes_by_attribute_value@@Base+0x9c>
   1cce4:	ldr	r3, [r6]
   1cce8:	cmp	r3, #0
   1ccec:	bne	1ccc4 <_myhtml_get_nodes_by_attribute_value@@Base+0x70>
   1ccf0:	cmp	r0, #0
   1ccf4:	beq	1cd20 <_myhtml_get_nodes_by_attribute_value@@Base+0xcc>
   1ccf8:	mov	r5, r0
   1ccfc:	b	1cc7c <_myhtml_get_nodes_by_attribute_value@@Base+0x28>
   1cd00:	ldr	r3, [sp, #60]	; 0x3c
   1cd04:	str	r3, [sp]
   1cd08:	ldr	r3, [sp, #56]	; 0x38
   1cd0c:	mov	r2, r9
   1cd10:	mov	r1, r5
   1cd14:	mov	r0, r4
   1cd18:	bl	fbcc <myhtml_get_nodes_by_attribute_value_recursion@plt>
   1cd1c:	b	1ccb8 <_myhtml_get_nodes_by_attribute_value@@Base+0x64>
   1cd20:	mov	r5, r0
   1cd24:	b	1ccc4 <_myhtml_get_nodes_by_attribute_value@@Base+0x70>

0001cd28 <myhtml_get_nodes_by_attribute_value@@Base>:
   1cd28:	push	{r4, r5, r6, r7, lr}
   1cd2c:	sub	sp, sp, #36	; 0x24
   1cd30:	ldr	lr, [sp, #56]	; 0x38
   1cd34:	ldr	r4, [sp, #60]	; 0x3c
   1cd38:	ldr	r5, [sp, #64]	; 0x40
   1cd3c:	ldr	r6, [sp, #68]	; 0x44
   1cd40:	ldr	r7, [sp, #72]	; 0x48
   1cd44:	ldr	ip, [pc, #92]	; 1cda8 <myhtml_get_nodes_by_attribute_value@@Base+0x80>
   1cd48:	add	ip, pc, ip
   1cd4c:	cmp	r3, #0
   1cd50:	bne	1cd80 <myhtml_get_nodes_by_attribute_value@@Base+0x58>
   1cd54:	ldr	r3, [pc, #80]	; 1cdac <myhtml_get_nodes_by_attribute_value@@Base+0x84>
   1cd58:	ldr	r3, [ip, r3]
   1cd5c:	str	r3, [sp, #28]
   1cd60:	str	r7, [sp, #16]
   1cd64:	str	r6, [sp, #12]
   1cd68:	str	r5, [sp, #8]
   1cd6c:	str	r4, [sp, #4]
   1cd70:	str	lr, [sp]
   1cd74:	bl	10b38 <_myhtml_get_nodes_by_attribute_value@plt>
   1cd78:	add	sp, sp, #36	; 0x24
   1cd7c:	pop	{r4, r5, r6, r7, pc}
   1cd80:	ldr	r3, [pc, #40]	; 1cdb0 <myhtml_get_nodes_by_attribute_value@@Base+0x88>
   1cd84:	ldr	r3, [ip, r3]
   1cd88:	str	r3, [sp, #28]
   1cd8c:	str	r7, [sp, #16]
   1cd90:	str	r6, [sp, #12]
   1cd94:	str	r5, [sp, #8]
   1cd98:	str	r4, [sp, #4]
   1cd9c:	str	lr, [sp]
   1cda0:	bl	10b38 <_myhtml_get_nodes_by_attribute_value@plt>
   1cda4:	b	1cd78 <myhtml_get_nodes_by_attribute_value@@Base+0x50>
   1cda8:			; <UNDEFINED> instruction: 0x000fa2b0
   1cdac:	andeq	r0, r0, ip, lsr #17
   1cdb0:	andeq	r0, r0, r4, lsl #17

0001cdb4 <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base>:
   1cdb4:	push	{r4, r5, r6, r7, lr}
   1cdb8:	sub	sp, sp, #36	; 0x24
   1cdbc:	ldr	lr, [sp, #56]	; 0x38
   1cdc0:	ldr	r4, [sp, #60]	; 0x3c
   1cdc4:	ldr	r5, [sp, #64]	; 0x40
   1cdc8:	ldr	r6, [sp, #68]	; 0x44
   1cdcc:	ldr	r7, [sp, #72]	; 0x48
   1cdd0:	ldr	ip, [pc, #92]	; 1ce34 <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base+0x80>
   1cdd4:	add	ip, pc, ip
   1cdd8:	cmp	r3, #0
   1cddc:	bne	1ce0c <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base+0x58>
   1cde0:	ldr	r3, [pc, #80]	; 1ce38 <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base+0x84>
   1cde4:	ldr	r3, [ip, r3]
   1cde8:	str	r3, [sp, #28]
   1cdec:	str	r7, [sp, #16]
   1cdf0:	str	r6, [sp, #12]
   1cdf4:	str	r5, [sp, #8]
   1cdf8:	str	r4, [sp, #4]
   1cdfc:	str	lr, [sp]
   1ce00:	bl	10b38 <_myhtml_get_nodes_by_attribute_value@plt>
   1ce04:	add	sp, sp, #36	; 0x24
   1ce08:	pop	{r4, r5, r6, r7, pc}
   1ce0c:	ldr	r3, [pc, #40]	; 1ce3c <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base+0x88>
   1ce10:	ldr	r3, [ip, r3]
   1ce14:	str	r3, [sp, #28]
   1ce18:	str	r7, [sp, #16]
   1ce1c:	str	r6, [sp, #12]
   1ce20:	str	r5, [sp, #8]
   1ce24:	str	r4, [sp, #4]
   1ce28:	str	lr, [sp]
   1ce2c:	bl	10b38 <_myhtml_get_nodes_by_attribute_value@plt>
   1ce30:	b	1ce04 <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base+0x50>
   1ce34:	andeq	sl, pc, r4, lsr #4
   1ce38:	andeq	r0, r0, r8, lsr #18
   1ce3c:	andeq	r0, r0, r8, lsl r7

0001ce40 <myhtml_get_nodes_by_attribute_value_begin@@Base>:
   1ce40:	push	{r4, r5, r6, r7, lr}
   1ce44:	sub	sp, sp, #36	; 0x24
   1ce48:	ldr	lr, [sp, #56]	; 0x38
   1ce4c:	ldr	r4, [sp, #60]	; 0x3c
   1ce50:	ldr	r5, [sp, #64]	; 0x40
   1ce54:	ldr	r6, [sp, #68]	; 0x44
   1ce58:	ldr	r7, [sp, #72]	; 0x48
   1ce5c:	ldr	ip, [pc, #92]	; 1cec0 <myhtml_get_nodes_by_attribute_value_begin@@Base+0x80>
   1ce60:	add	ip, pc, ip
   1ce64:	cmp	r3, #0
   1ce68:	bne	1ce98 <myhtml_get_nodes_by_attribute_value_begin@@Base+0x58>
   1ce6c:	ldr	r3, [pc, #80]	; 1cec4 <myhtml_get_nodes_by_attribute_value_begin@@Base+0x84>
   1ce70:	ldr	r3, [ip, r3]
   1ce74:	str	r3, [sp, #28]
   1ce78:	str	r7, [sp, #16]
   1ce7c:	str	r6, [sp, #12]
   1ce80:	str	r5, [sp, #8]
   1ce84:	str	r4, [sp, #4]
   1ce88:	str	lr, [sp]
   1ce8c:	bl	10b38 <_myhtml_get_nodes_by_attribute_value@plt>
   1ce90:	add	sp, sp, #36	; 0x24
   1ce94:	pop	{r4, r5, r6, r7, pc}
   1ce98:	ldr	r3, [pc, #40]	; 1cec8 <myhtml_get_nodes_by_attribute_value_begin@@Base+0x88>
   1ce9c:	ldr	r3, [ip, r3]
   1cea0:	str	r3, [sp, #28]
   1cea4:	str	r7, [sp, #16]
   1cea8:	str	r6, [sp, #12]
   1ceac:	str	r5, [sp, #8]
   1ceb0:	str	r4, [sp, #4]
   1ceb4:	str	lr, [sp]
   1ceb8:	bl	10b38 <_myhtml_get_nodes_by_attribute_value@plt>
   1cebc:	b	1ce90 <myhtml_get_nodes_by_attribute_value_begin@@Base+0x50>
   1cec0:	muleq	pc, r8, r1	; <UNPREDICTABLE>
   1cec4:	andeq	r0, r0, r4, ror #14
   1cec8:	andeq	r0, r0, r4, ror r7

0001cecc <myhtml_get_nodes_by_attribute_value_end@@Base>:
   1cecc:	push	{r4, r5, r6, r7, lr}
   1ced0:	sub	sp, sp, #36	; 0x24
   1ced4:	ldr	lr, [sp, #56]	; 0x38
   1ced8:	ldr	r4, [sp, #60]	; 0x3c
   1cedc:	ldr	r5, [sp, #64]	; 0x40
   1cee0:	ldr	r6, [sp, #68]	; 0x44
   1cee4:	ldr	r7, [sp, #72]	; 0x48
   1cee8:	ldr	ip, [pc, #92]	; 1cf4c <myhtml_get_nodes_by_attribute_value_end@@Base+0x80>
   1ceec:	add	ip, pc, ip
   1cef0:	cmp	r3, #0
   1cef4:	bne	1cf24 <myhtml_get_nodes_by_attribute_value_end@@Base+0x58>
   1cef8:	ldr	r3, [pc, #80]	; 1cf50 <myhtml_get_nodes_by_attribute_value_end@@Base+0x84>
   1cefc:	ldr	r3, [ip, r3]
   1cf00:	str	r3, [sp, #28]
   1cf04:	str	r7, [sp, #16]
   1cf08:	str	r6, [sp, #12]
   1cf0c:	str	r5, [sp, #8]
   1cf10:	str	r4, [sp, #4]
   1cf14:	str	lr, [sp]
   1cf18:	bl	10b38 <_myhtml_get_nodes_by_attribute_value@plt>
   1cf1c:	add	sp, sp, #36	; 0x24
   1cf20:	pop	{r4, r5, r6, r7, pc}
   1cf24:	ldr	r3, [pc, #40]	; 1cf54 <myhtml_get_nodes_by_attribute_value_end@@Base+0x88>
   1cf28:	ldr	r3, [ip, r3]
   1cf2c:	str	r3, [sp, #28]
   1cf30:	str	r7, [sp, #16]
   1cf34:	str	r6, [sp, #12]
   1cf38:	str	r5, [sp, #8]
   1cf3c:	str	r4, [sp, #4]
   1cf40:	str	lr, [sp]
   1cf44:	bl	10b38 <_myhtml_get_nodes_by_attribute_value@plt>
   1cf48:	b	1cf1c <myhtml_get_nodes_by_attribute_value_end@@Base+0x50>
   1cf4c:	andeq	sl, pc, ip, lsl #2
   1cf50:	strdeq	r0, [r0], -r4
   1cf54:	andeq	r0, r0, r4, lsl #19

0001cf58 <myhtml_get_nodes_by_attribute_value_contain@@Base>:
   1cf58:	push	{r4, r5, r6, r7, lr}
   1cf5c:	sub	sp, sp, #36	; 0x24
   1cf60:	ldr	lr, [sp, #56]	; 0x38
   1cf64:	ldr	r4, [sp, #60]	; 0x3c
   1cf68:	ldr	r5, [sp, #64]	; 0x40
   1cf6c:	ldr	r6, [sp, #68]	; 0x44
   1cf70:	ldr	r7, [sp, #72]	; 0x48
   1cf74:	ldr	ip, [pc, #92]	; 1cfd8 <myhtml_get_nodes_by_attribute_value_contain@@Base+0x80>
   1cf78:	add	ip, pc, ip
   1cf7c:	cmp	r3, #0
   1cf80:	bne	1cfb0 <myhtml_get_nodes_by_attribute_value_contain@@Base+0x58>
   1cf84:	ldr	r3, [pc, #80]	; 1cfdc <myhtml_get_nodes_by_attribute_value_contain@@Base+0x84>
   1cf88:	ldr	r3, [ip, r3]
   1cf8c:	str	r3, [sp, #28]
   1cf90:	str	r7, [sp, #16]
   1cf94:	str	r6, [sp, #12]
   1cf98:	str	r5, [sp, #8]
   1cf9c:	str	r4, [sp, #4]
   1cfa0:	str	lr, [sp]
   1cfa4:	bl	10b38 <_myhtml_get_nodes_by_attribute_value@plt>
   1cfa8:	add	sp, sp, #36	; 0x24
   1cfac:	pop	{r4, r5, r6, r7, pc}
   1cfb0:	ldr	r3, [pc, #40]	; 1cfe0 <myhtml_get_nodes_by_attribute_value_contain@@Base+0x88>
   1cfb4:	ldr	r3, [ip, r3]
   1cfb8:	str	r3, [sp, #28]
   1cfbc:	str	r7, [sp, #16]
   1cfc0:	str	r6, [sp, #12]
   1cfc4:	str	r5, [sp, #8]
   1cfc8:	str	r4, [sp, #4]
   1cfcc:	str	lr, [sp]
   1cfd0:	bl	10b38 <_myhtml_get_nodes_by_attribute_value@plt>
   1cfd4:	b	1cfa8 <myhtml_get_nodes_by_attribute_value_contain@@Base+0x50>
   1cfd8:	andeq	sl, pc, r0, lsl #1
   1cfdc:	andeq	r0, r0, r8, lsl #17
   1cfe0:	andeq	r0, r0, r8, ror #14

0001cfe4 <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base>:
   1cfe4:	push	{r4, r5, r6, r7, lr}
   1cfe8:	sub	sp, sp, #36	; 0x24
   1cfec:	ldr	lr, [sp, #56]	; 0x38
   1cff0:	ldr	r4, [sp, #60]	; 0x3c
   1cff4:	ldr	r5, [sp, #64]	; 0x40
   1cff8:	ldr	r6, [sp, #68]	; 0x44
   1cffc:	ldr	r7, [sp, #72]	; 0x48
   1d000:	ldr	ip, [pc, #92]	; 1d064 <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base+0x80>
   1d004:	add	ip, pc, ip
   1d008:	cmp	r3, #0
   1d00c:	bne	1d03c <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base+0x58>
   1d010:	ldr	r3, [pc, #80]	; 1d068 <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base+0x84>
   1d014:	ldr	r3, [ip, r3]
   1d018:	str	r3, [sp, #28]
   1d01c:	str	r7, [sp, #16]
   1d020:	str	r6, [sp, #12]
   1d024:	str	r5, [sp, #8]
   1d028:	str	r4, [sp, #4]
   1d02c:	str	lr, [sp]
   1d030:	bl	10b38 <_myhtml_get_nodes_by_attribute_value@plt>
   1d034:	add	sp, sp, #36	; 0x24
   1d038:	pop	{r4, r5, r6, r7, pc}
   1d03c:	ldr	r3, [pc, #40]	; 1d06c <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base+0x88>
   1d040:	ldr	r3, [ip, r3]
   1d044:	str	r3, [sp, #28]
   1d048:	str	r7, [sp, #16]
   1d04c:	str	r6, [sp, #12]
   1d050:	str	r5, [sp, #8]
   1d054:	str	r4, [sp, #4]
   1d058:	str	lr, [sp]
   1d05c:	bl	10b38 <_myhtml_get_nodes_by_attribute_value@plt>
   1d060:	b	1d034 <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base+0x50>
   1d064:	strdeq	r9, [pc], -r4
   1d068:	andeq	r0, r0, r0, ror r8
   1d06c:	andeq	r0, r0, r4, lsl #16

0001d070 <myhtml_collection_clean@@Base>:
   1d070:	cmp	r0, #0
   1d074:	movne	r3, #0
   1d078:	strne	r3, [r0, #8]
   1d07c:	bx	lr

0001d080 <myhtml_collection_destroy@@Base>:
   1d080:	push	{r4, lr}
   1d084:	subs	r4, r0, #0
   1d088:	beq	1d0a4 <myhtml_collection_destroy@@Base+0x24>
   1d08c:	ldr	r0, [r4]
   1d090:	cmp	r0, #0
   1d094:	beq	1d09c <myhtml_collection_destroy@@Base+0x1c>
   1d098:	bl	10dcc <mycore_free@plt>
   1d09c:	mov	r0, r4
   1d0a0:	bl	10dcc <mycore_free@plt>
   1d0a4:	mov	r0, #0
   1d0a8:	pop	{r4, pc}

0001d0ac <myhtml_queue_add@@Base>:
   1d0ac:	push	{r4, r5, r6, r7, r8, lr}
   1d0b0:	mov	r4, r0
   1d0b4:	mov	r7, r1
   1d0b8:	ldr	r6, [r0, #68]	; 0x44
   1d0bc:	ldr	r3, [r0, #184]	; 0xb8
   1d0c0:	mov	r8, r2
   1d0c4:	adds	r5, r2, #0
   1d0c8:	movne	r5, #1
   1d0cc:	ands	r3, r5, r3, lsr #2
   1d0d0:	beq	1d0e0 <myhtml_queue_add@@Base+0x34>
   1d0d4:	ldr	r3, [r2]
   1d0d8:	cmp	r3, #1
   1d0dc:	beq	1d178 <myhtml_queue_add@@Base+0xcc>
   1d0e0:	ldr	r3, [r4, #180]	; 0xb4
   1d0e4:	tst	r3, #16
   1d0e8:	beq	1d1c4 <myhtml_queue_add@@Base+0x118>
   1d0ec:	cmp	r6, #0
   1d0f0:	moveq	r3, #0
   1d0f4:	andne	r3, r5, #1
   1d0f8:	cmp	r3, #0
   1d0fc:	bne	1d1a4 <myhtml_queue_add@@Base+0xf8>
   1d100:	ldr	r0, [r4]
   1d104:	mov	r3, #0
   1d108:	mov	r2, #4
   1d10c:	ldr	r1, [r4, #24]
   1d110:	ldr	r0, [r0]
   1d114:	bl	10cac <mythread_queue_node_malloc_limit@plt>
   1d118:	str	r0, [r4, #68]	; 0x44
   1d11c:	ldr	r3, [r4, #68]	; 0x44
   1d120:	cmp	r3, #0
   1d124:	beq	1d224 <myhtml_queue_add@@Base+0x178>
   1d128:	str	r4, [r3]
   1d12c:	ldr	r3, [r4, #68]	; 0x44
   1d130:	str	r6, [r3, #8]
   1d134:	cmp	r6, #0
   1d138:	moveq	r5, #0
   1d13c:	andne	r5, r5, #1
   1d140:	cmp	r5, #0
   1d144:	bne	1d214 <myhtml_queue_add@@Base+0x168>
   1d148:	ldr	r0, [r4, #8]
   1d14c:	ldr	r1, [r0, #12]
   1d150:	bl	10a0c <myhtml_token_node_create@plt>
   1d154:	str	r0, [r4, #64]	; 0x40
   1d158:	cmp	r0, #0
   1d15c:	beq	1d22c <myhtml_queue_add@@Base+0x180>
   1d160:	ldr	r1, [r4, #192]	; 0xc0
   1d164:	add	r1, r7, r1
   1d168:	str	r1, [r0, #32]
   1d16c:	str	r1, [r0, #24]
   1d170:	mov	r0, #0
   1d174:	pop	{r4, r5, r6, r7, r8, pc}
   1d178:	ldr	r3, [r2, #48]	; 0x30
   1d17c:	tst	r3, #8
   1d180:	beq	1d0e0 <myhtml_queue_add@@Base+0x34>
   1d184:	mov	r0, r2
   1d188:	bl	10f7c <myhtml_token_node_clean@plt>
   1d18c:	ldr	r1, [r4, #192]	; 0xc0
   1d190:	add	r1, r7, r1
   1d194:	str	r1, [r8, #32]
   1d198:	str	r1, [r8, #24]
   1d19c:	mov	r0, #0
   1d1a0:	pop	{r4, r5, r6, r7, r8, pc}
   1d1a4:	str	r8, [r6, #4]
   1d1a8:	mov	r1, r6
   1d1ac:	mov	r0, #0
   1d1b0:	bl	fd7c <myhtml_parser_worker@plt>
   1d1b4:	mov	r1, r6
   1d1b8:	mov	r0, #0
   1d1bc:	bl	10ff4 <myhtml_parser_stream@plt>
   1d1c0:	b	1d100 <myhtml_queue_add@@Base+0x54>
   1d1c4:	cmp	r6, #0
   1d1c8:	strne	r8, [r6, #4]
   1d1cc:	ldr	r3, [r4]
   1d1d0:	ldr	r1, [r4, #20]
   1d1d4:	ldr	r0, [r3]
   1d1d8:	bl	10538 <mythread_queue_node_malloc_round@plt>
   1d1dc:	str	r0, [r4, #68]	; 0x44
   1d1e0:	ldr	r1, [r4, #20]
   1d1e4:	ldr	r3, [r1]
   1d1e8:	ldr	r3, [r3, #12]
   1d1ec:	cmp	r3, #0
   1d1f0:	bne	1d11c <myhtml_queue_add@@Base+0x70>
   1d1f4:	ldr	r3, [r4]
   1d1f8:	ldr	r0, [r3, #4]
   1d1fc:	bl	10d24 <mythread_queue_list_entry_make_batch@plt>
   1d200:	ldr	r3, [r4]
   1d204:	ldr	r1, [r4, #20]
   1d208:	ldr	r0, [r3]
   1d20c:	bl	10ee0 <mythread_queue_list_entry_make_stream@plt>
   1d210:	b	1d11c <myhtml_queue_add@@Base+0x70>
   1d214:	mov	r1, r8
   1d218:	mov	r0, r4
   1d21c:	bl	1022c <myhtml_tokenizer_calc_current_namespace@plt>
   1d220:	b	1d148 <myhtml_queue_add@@Base+0x9c>
   1d224:	mov	r0, #2
   1d228:	pop	{r4, r5, r6, r7, r8, pc}
   1d22c:	mov	r0, #2
   1d230:	pop	{r4, r5, r6, r7, r8, pc}

0001d234 <myhtml_utils_strcmp@@Base>:
   1d234:	cmp	r2, #0
   1d238:	beq	1d27c <myhtml_utils_strcmp@@Base+0x48>
   1d23c:	push	{lr}		; (str lr, [sp, #-4]!)
   1d240:	mov	lr, r1
   1d244:	sub	r0, r0, #1
   1d248:	add	r1, r1, r2
   1d24c:	ldrb	r3, [lr], #1
   1d250:	sub	ip, r3, #65	; 0x41
   1d254:	uxtb	ip, ip
   1d258:	cmp	ip, #25
   1d25c:	orrls	r3, r3, #96	; 0x60
   1d260:	ldrb	ip, [r0, #1]!
   1d264:	cmp	r3, ip
   1d268:	bne	1d284 <myhtml_utils_strcmp@@Base+0x50>
   1d26c:	cmp	lr, r1
   1d270:	bne	1d24c <myhtml_utils_strcmp@@Base+0x18>
   1d274:	mov	r0, #1
   1d278:	pop	{pc}		; (ldr pc, [sp], #4)
   1d27c:	mov	r0, #1
   1d280:	bx	lr
   1d284:	mov	r0, #0
   1d288:	pop	{pc}		; (ldr pc, [sp], #4)

0001d28c <myhtml_is_html_node@@Base>:
   1d28c:	cmp	r0, #0
   1d290:	beq	1d2bc <myhtml_is_html_node@@Base+0x30>
   1d294:	ldr	r3, [r0, #4]
   1d298:	cmp	r3, r1
   1d29c:	beq	1d2a8 <myhtml_is_html_node@@Base+0x1c>
   1d2a0:	mov	r0, #0
   1d2a4:	bx	lr
   1d2a8:	ldr	r0, [r0, #8]
   1d2ac:	cmp	r0, #1
   1d2b0:	movne	r0, #0
   1d2b4:	moveq	r0, #1
   1d2b8:	bx	lr
   1d2bc:	mov	r0, #0
   1d2c0:	bx	lr

0001d2c4 <myhtml_version@@Base>:
   1d2c4:	mov	r3, r0
   1d2c8:	ldr	r2, [pc, #16]	; 1d2e0 <myhtml_version@@Base+0x1c>
   1d2cc:	add	r2, pc, r2
   1d2d0:	ldm	r2, {r0, r1, r2}
   1d2d4:	stm	r3, {r0, r1, r2}
   1d2d8:	mov	r0, r3
   1d2dc:	bx	lr
   1d2e0:	muleq	sp, r8, pc	; <UNPREDICTABLE>

0001d2e4 <myhtml_node_clone@@Base>:
   1d2e4:	push	{r4, r5, r6, r7, r8, r9, lr}
   1d2e8:	sub	sp, sp, #12
   1d2ec:	mov	r6, r0
   1d2f0:	mov	r5, r1
   1d2f4:	bl	ffe0 <myhtml_tree_node_create@plt>
   1d2f8:	mov	r4, r0
   1d2fc:	ldr	r7, [r5, #4]
   1d300:	cmp	r7, #251	; 0xfb
   1d304:	bhi	1d350 <myhtml_node_clone@@Base+0x6c>
   1d308:	ldr	r3, [r6, #44]	; 0x2c
   1d30c:	ldr	r2, [r6, #40]	; 0x28
   1d310:	ldr	r1, [r5, #32]
   1d314:	ldr	r0, [r6, #8]
   1d318:	bl	ff2c <myhtml_token_node_clone@plt>
   1d31c:	str	r0, [r4, #32]
   1d320:	str	r7, [r4, #4]
   1d324:	ldr	r3, [r5, #8]
   1d328:	str	r3, [r4, #8]
   1d32c:	cmp	r0, #0
   1d330:	strne	r7, [r0]
   1d334:	ldrne	r2, [r4, #32]
   1d338:	ldrne	r3, [r2, #48]	; 0x30
   1d33c:	orrne	r3, r3, #4
   1d340:	strne	r3, [r2, #48]	; 0x30
   1d344:	mov	r0, r4
   1d348:	add	sp, sp, #12
   1d34c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1d350:	mov	r1, r7
   1d354:	ldr	r0, [r6, #28]
   1d358:	bl	10a24 <myhtml_tag_get_by_id@plt>
   1d35c:	mov	r9, r0
   1d360:	ldr	r3, [r5, #40]	; 0x28
   1d364:	ldr	r1, [r5, #4]
   1d368:	ldr	r0, [r3, #28]
   1d36c:	bl	10a24 <myhtml_tag_get_by_id@plt>
   1d370:	mov	r8, r0
   1d374:	cmp	r9, #0
   1d378:	beq	1d38c <myhtml_node_clone@@Base+0xa8>
   1d37c:	ldr	r2, [r9, #8]
   1d380:	ldr	r3, [r0, #8]
   1d384:	cmp	r2, r3
   1d388:	beq	1d3b0 <myhtml_node_clone@@Base+0xcc>
   1d38c:	ldr	r2, [r8, #8]
   1d390:	ldr	r1, [r8, #4]
   1d394:	mov	r3, #1
   1d398:	str	r3, [sp]
   1d39c:	mov	r3, #0
   1d3a0:	ldr	r0, [r6, #28]
   1d3a4:	bl	10010 <myhtml_tag_add@plt>
   1d3a8:	mov	r7, r0
   1d3ac:	b	1d308 <myhtml_node_clone@@Base+0x24>
   1d3b0:	ldr	r1, [r0, #4]
   1d3b4:	ldr	r0, [r9, #4]
   1d3b8:	bl	10eec <mycore_strncmp@plt>
   1d3bc:	cmp	r0, #0
   1d3c0:	beq	1d308 <myhtml_node_clone@@Base+0x24>
   1d3c4:	b	1d38c <myhtml_node_clone@@Base+0xa8>

0001d3c8 <myhtml_node_clone_deep@@Base>:
   1d3c8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d3cc:	mov	r8, r0
   1d3d0:	subs	r7, r1, #0
   1d3d4:	moveq	r4, r7
   1d3d8:	beq	1d3fc <myhtml_node_clone_deep@@Base+0x34>
   1d3dc:	ldr	r3, [r7, #40]	; 0x28
   1d3e0:	cmp	r3, #0
   1d3e4:	moveq	r4, r7
   1d3e8:	beq	1d3fc <myhtml_node_clone_deep@@Base+0x34>
   1d3ec:	ldr	r3, [r3, #84]	; 0x54
   1d3f0:	cmp	r7, r3
   1d3f4:	ldreq	r4, [r7, #20]
   1d3f8:	movne	r4, r7
   1d3fc:	mov	r1, r4
   1d400:	mov	r0, r8
   1d404:	bl	10f34 <myhtml_node_clone@plt>
   1d408:	subs	r9, r0, #0
   1d40c:	beq	1d428 <myhtml_node_clone_deep@@Base+0x60>
   1d410:	ldr	r4, [r4, #20]
   1d414:	cmp	r4, #0
   1d418:	movne	r5, r9
   1d41c:	bne	1d440 <myhtml_node_clone_deep@@Base+0x78>
   1d420:	b	1d428 <myhtml_node_clone_deep@@Base+0x60>
   1d424:	mov	r9, r6
   1d428:	mov	r0, r9
   1d42c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d430:	ldr	r3, [r4, #16]
   1d434:	mov	r6, r5
   1d438:	mov	r5, r6
   1d43c:	mov	r4, r3
   1d440:	mov	r1, r4
   1d444:	mov	r0, r8
   1d448:	bl	10f34 <myhtml_node_clone@plt>
   1d44c:	subs	r6, r0, #0
   1d450:	beq	1d424 <myhtml_node_clone_deep@@Base+0x5c>
   1d454:	mov	r1, r6
   1d458:	mov	r0, r5
   1d45c:	bl	106b8 <myhtml_tree_node_add_child@plt>
   1d460:	ldr	r3, [r4, #20]
   1d464:	cmp	r3, #0
   1d468:	bne	1d438 <myhtml_node_clone_deep@@Base+0x70>
   1d46c:	cmp	r7, r4
   1d470:	beq	1d428 <myhtml_node_clone_deep@@Base+0x60>
   1d474:	ldr	r3, [r4, #16]
   1d478:	cmp	r3, #0
   1d47c:	bne	1d430 <myhtml_node_clone_deep@@Base+0x68>
   1d480:	ldr	r5, [r5, #24]
   1d484:	ldr	r4, [r4, #24]
   1d488:	cmp	r7, r4
   1d48c:	beq	1d428 <myhtml_node_clone_deep@@Base+0x60>
   1d490:	ldr	r3, [r4, #16]
   1d494:	cmp	r3, #0
   1d498:	beq	1d480 <myhtml_node_clone_deep@@Base+0xb8>
   1d49c:	b	1d430 <myhtml_node_clone_deep@@Base+0x68>

0001d4a0 <myhtml_namespace_name_entry_by_name@@Base>:
   1d4a0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d4a4:	mov	r9, r0
   1d4a8:	mov	r5, r1
   1d4ac:	ldr	r3, [pc, #240]	; 1d5a4 <myhtml_namespace_name_entry_by_name@@Base+0x104>
   1d4b0:	add	r3, pc, r3
   1d4b4:	add	r2, r0, r1
   1d4b8:	ldrb	r2, [r2, #-1]
   1d4bc:	ldrb	r2, [r3, r2]
   1d4c0:	ldrb	r1, [r0]
   1d4c4:	ldrb	r4, [r3, r1]
   1d4c8:	mul	r4, r4, r2
   1d4cc:	mul	r4, r5, r4
   1d4d0:	ldr	r3, [pc, #208]	; 1d5a8 <myhtml_namespace_name_entry_by_name@@Base+0x108>
   1d4d4:	umull	r2, r3, r3, r4
   1d4d8:	sub	r2, r4, r3
   1d4dc:	add	r3, r3, r2, lsr #1
   1d4e0:	lsr	r3, r3, #4
   1d4e4:	add	r2, r3, r3, lsl #3
   1d4e8:	add	r3, r3, r2, lsl #1
   1d4ec:	sub	r3, r4, r3
   1d4f0:	add	r4, r3, #1
   1d4f4:	ldr	r6, [pc, #176]	; 1d5ac <myhtml_namespace_name_entry_by_name@@Base+0x10c>
   1d4f8:	add	r6, pc, r6
   1d4fc:	ldr	r7, [pc, #172]	; 1d5b0 <myhtml_namespace_name_entry_by_name@@Base+0x110>
   1d500:	add	r7, pc, r7
   1d504:	ldr	r8, [pc, #168]	; 1d5b4 <myhtml_namespace_name_entry_by_name@@Base+0x114>
   1d508:	add	r8, pc, r8
   1d50c:	ldr	sl, [pc, #164]	; 1d5b8 <myhtml_namespace_name_entry_by_name@@Base+0x118>
   1d510:	add	sl, pc, sl
   1d514:	b	1d540 <myhtml_namespace_name_entry_by_name@@Base+0xa0>
   1d518:	mov	r2, r5
   1d51c:	mov	r1, r9
   1d520:	bl	102a4 <mycore_strncasecmp@plt>
   1d524:	cmp	r0, #0
   1d528:	beq	1d57c <myhtml_namespace_name_entry_by_name@@Base+0xdc>
   1d52c:	add	r4, r4, r4, lsl #2
   1d530:	add	r4, sl, r4, lsl #2
   1d534:	ldr	r4, [r4, #12]
   1d538:	cmp	r4, #0
   1d53c:	beq	1d590 <myhtml_namespace_name_entry_by_name@@Base+0xf0>
   1d540:	add	r3, r4, r4, lsl #2
   1d544:	ldr	r0, [r6, r3, lsl #2]
   1d548:	cmp	r0, #0
   1d54c:	beq	1d598 <myhtml_namespace_name_entry_by_name@@Base+0xf8>
   1d550:	add	r3, r4, r4, lsl #2
   1d554:	add	r3, r7, r3, lsl #2
   1d558:	ldr	r3, [r3, #4]
   1d55c:	cmp	r5, r3
   1d560:	beq	1d518 <myhtml_namespace_name_entry_by_name@@Base+0x78>
   1d564:	cmp	r5, r3
   1d568:	bcc	1d59c <myhtml_namespace_name_entry_by_name@@Base+0xfc>
   1d56c:	add	r4, r4, r4, lsl #2
   1d570:	add	r4, r8, r4, lsl #2
   1d574:	ldr	r4, [r4, #12]
   1d578:	b	1d540 <myhtml_namespace_name_entry_by_name@@Base+0xa0>
   1d57c:	add	r4, r4, r4, lsl #2
   1d580:	ldr	r0, [pc, #52]	; 1d5bc <myhtml_namespace_name_entry_by_name@@Base+0x11c>
   1d584:	add	r0, pc, r0
   1d588:	add	r0, r0, r4, lsl #2
   1d58c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d590:	mov	r0, #0
   1d594:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d598:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d59c:	mov	r0, #0
   1d5a0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d5a4:	andeq	pc, sp, r0, asr #27
   1d5a8:	svcge	0x00286bcb
   1d5ac:	andeq	r4, pc, ip, asr #28
   1d5b0:	andeq	r4, pc, r4, asr #28
   1d5b4:	andeq	r4, pc, ip, lsr lr	; <UNPREDICTABLE>
   1d5b8:	andeq	r4, pc, r4, lsr lr	; <UNPREDICTABLE>
   1d5bc:	andeq	r4, pc, r0, asr #27

0001d5c0 <myhtml_namespace_id_by_name@@Base>:
   1d5c0:	push	{r4, lr}
   1d5c4:	mov	r4, r2
   1d5c8:	bl	10208 <myhtml_namespace_name_entry_by_name@plt>
   1d5cc:	cmp	r0, #0
   1d5d0:	beq	1d5ec <myhtml_namespace_id_by_name@@Base+0x2c>
   1d5d4:	cmp	r4, #0
   1d5d8:	beq	1d5f4 <myhtml_namespace_id_by_name@@Base+0x34>
   1d5dc:	ldr	r3, [r0, #8]
   1d5e0:	str	r3, [r4]
   1d5e4:	mov	r0, #1
   1d5e8:	pop	{r4, pc}
   1d5ec:	mov	r0, #0
   1d5f0:	pop	{r4, pc}
   1d5f4:	mov	r0, #1
   1d5f8:	pop	{r4, pc}

0001d5fc <myhtml_namespace_name_by_id@@Base>:
   1d5fc:	push	{r4, r5, r6, lr}
   1d600:	cmp	r0, #7
   1d604:	bls	1d61c <myhtml_namespace_name_by_id@@Base+0x20>
   1d608:	cmp	r1, #0
   1d60c:	moveq	r4, #0
   1d610:	movne	r4, #0
   1d614:	strne	r4, [r1]
   1d618:	b	1d644 <myhtml_namespace_name_by_id@@Base+0x48>
   1d61c:	ldr	r4, [pc, #40]	; 1d64c <myhtml_namespace_name_by_id@@Base+0x50>
   1d620:	add	r4, pc, r4
   1d624:	add	r4, r4, #256	; 0x100
   1d628:	add	r4, r4, r0, lsl #3
   1d62c:	cmp	r1, #0
   1d630:	beq	1d644 <myhtml_namespace_name_by_id@@Base+0x48>
   1d634:	mov	r5, r1
   1d638:	mov	r0, r4
   1d63c:	bl	10670 <strlen@plt>
   1d640:	str	r0, [r5]
   1d644:	mov	r0, r4
   1d648:	pop	{r4, r5, r6, pc}
   1d64c:	andeq	pc, sp, r0, asr ip	; <UNPREDICTABLE>

0001d650 <myhtml_namespace_url_by_id@@Base>:
   1d650:	cmp	r0, #7
   1d654:	bls	1d66c <myhtml_namespace_url_by_id@@Base+0x1c>
   1d658:	cmp	r1, #0
   1d65c:	beq	1d6a4 <myhtml_namespace_url_by_id@@Base+0x54>
   1d660:	mov	r0, #0
   1d664:	str	r0, [r1]
   1d668:	bx	lr
   1d66c:	cmp	r1, #0
   1d670:	beq	1d68c <myhtml_namespace_url_by_id@@Base+0x3c>
   1d674:	add	r3, r0, r0, lsl #1
   1d678:	ldr	r2, [pc, #44]	; 1d6ac <myhtml_namespace_url_by_id@@Base+0x5c>
   1d67c:	add	r2, pc, r2
   1d680:	add	r3, r2, r3, lsl #2
   1d684:	ldr	r3, [r3, #404]	; 0x194
   1d688:	str	r3, [r1]
   1d68c:	add	r0, r0, r0, lsl #1
   1d690:	ldr	r3, [pc, #24]	; 1d6b0 <myhtml_namespace_url_by_id@@Base+0x60>
   1d694:	add	r3, pc, r3
   1d698:	add	r0, r3, r0, lsl #2
   1d69c:	ldr	r0, [r0, #400]	; 0x190
   1d6a0:	bx	lr
   1d6a4:	mov	r0, #0
   1d6a8:	bx	lr
   1d6ac:	andeq	r4, pc, r8, asr #25
   1d6b0:			; <UNDEFINED> instruction: 0x000f4cb0

0001d6b4 <myhtml_namespace_id_by_url@@Base>:
   1d6b4:	mov	r0, #0
   1d6b8:	bx	lr

0001d6bc <myhtml_string_append_with_preprocessing@@Base>:
   1d6bc:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d6c0:	mov	r5, r0
   1d6c4:	mov	r6, r1
   1d6c8:	mov	r7, r2
   1d6cc:	mov	r8, r3
   1d6d0:	add	r1, r2, #1
   1d6d4:	ldr	r3, [r0, #8]
   1d6d8:	add	r1, r1, r3
   1d6dc:	ldr	r3, [r0, #4]
   1d6e0:	cmp	r1, r3
   1d6e4:	bcs	1d708 <myhtml_string_append_with_preprocessing@@Base+0x4c>
   1d6e8:	ldr	r2, [r5]
   1d6ec:	cmp	r7, #0
   1d6f0:	beq	1d804 <myhtml_string_append_with_preprocessing@@Base+0x148>
   1d6f4:	mov	r4, #0
   1d6f8:	mvn	fp, #16
   1d6fc:	mvn	sl, #64	; 0x40
   1d700:	mov	r9, #10
   1d704:	b	1d7a0 <myhtml_string_append_with_preprocessing@@Base+0xe4>
   1d708:	bl	10964 <mycore_string_realloc@plt>
   1d70c:	b	1d6e8 <myhtml_string_append_with_preprocessing@@Base+0x2c>
   1d710:	ldr	r3, [r5, #8]
   1d714:	strb	r9, [r2, r3]
   1d718:	add	r4, r4, #1
   1d71c:	cmp	r7, r4
   1d720:	bls	1d740 <myhtml_string_append_with_preprocessing@@Base+0x84>
   1d724:	ldrb	r3, [r6, r4]
   1d728:	cmp	r3, #10
   1d72c:	beq	1d788 <myhtml_string_append_with_preprocessing@@Base+0xcc>
   1d730:	ldr	r3, [r5, #8]
   1d734:	add	r3, r3, #1
   1d738:	str	r3, [r5, #8]
   1d73c:	b	1d7a0 <myhtml_string_append_with_preprocessing@@Base+0xe4>
   1d740:	ldr	r1, [r5, #8]
   1d744:	add	r3, r1, #1
   1d748:	str	r3, [r5, #8]
   1d74c:	ldr	r2, [r5, #4]
   1d750:	cmp	r3, r2
   1d754:	bcs	1d770 <myhtml_string_append_with_preprocessing@@Base+0xb4>
   1d758:	ldr	r2, [r5]
   1d75c:	ldr	r3, [r5, #8]
   1d760:	mov	r1, #0
   1d764:	strb	r1, [r2, r3]
   1d768:	ldr	r0, [r5, #8]
   1d76c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d770:	add	r1, r1, #3
   1d774:	mov	r0, r5
   1d778:	bl	10964 <mycore_string_realloc@plt>
   1d77c:	b	1d758 <myhtml_string_append_with_preprocessing@@Base+0x9c>
   1d780:	ldr	r1, [r5, #8]
   1d784:	strb	r3, [r2, r1]
   1d788:	ldr	r3, [r5, #8]
   1d78c:	add	r3, r3, #1
   1d790:	str	r3, [r5, #8]
   1d794:	add	r4, r4, #1
   1d798:	cmp	r7, r4
   1d79c:	bls	1d804 <myhtml_string_append_with_preprocessing@@Base+0x148>
   1d7a0:	ldrb	r3, [r6, r4]
   1d7a4:	cmp	r3, #13
   1d7a8:	beq	1d710 <myhtml_string_append_with_preprocessing@@Base+0x54>
   1d7ac:	cmp	r3, #0
   1d7b0:	moveq	r1, r8
   1d7b4:	orrne	r1, r8, #1
   1d7b8:	cmp	r1, #0
   1d7bc:	bne	1d780 <myhtml_string_append_with_preprocessing@@Base+0xc4>
   1d7c0:	ldr	r1, [r5, #4]
   1d7c4:	add	r1, r1, #5
   1d7c8:	mov	r0, r5
   1d7cc:	bl	10964 <mycore_string_realloc@plt>
   1d7d0:	ldr	r2, [r5]
   1d7d4:	ldr	r3, [r5, #8]
   1d7d8:	strb	fp, [r2, r3]
   1d7dc:	ldr	r3, [r5, #8]
   1d7e0:	add	r3, r3, #1
   1d7e4:	str	r3, [r5, #8]
   1d7e8:	strb	sl, [r2, r3]
   1d7ec:	ldr	r3, [r5, #8]
   1d7f0:	add	r3, r3, #1
   1d7f4:	str	r3, [r5, #8]
   1d7f8:	mvn	r1, #66	; 0x42
   1d7fc:	strb	r1, [r2, r3]
   1d800:	b	1d788 <myhtml_string_append_with_preprocessing@@Base+0xcc>
   1d804:	ldr	r2, [r5]
   1d808:	ldr	r3, [r5, #8]
   1d80c:	mov	r0, #0
   1d810:	strb	r0, [r2, r3]
   1d814:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001d818 <myhtml_string_append_lowercase_with_preprocessing@@Base>:
   1d818:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d81c:	mov	r5, r0
   1d820:	mov	r6, r1
   1d824:	mov	r7, r2
   1d828:	mov	r9, r3
   1d82c:	add	r1, r2, #1
   1d830:	ldr	r3, [r0, #8]
   1d834:	add	r1, r1, r3
   1d838:	ldr	r3, [r0, #4]
   1d83c:	cmp	r1, r3
   1d840:	bcs	1d868 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x50>
   1d844:	ldr	r2, [r5]
   1d848:	cmp	r7, #0
   1d84c:	beq	1d96c <myhtml_string_append_lowercase_with_preprocessing@@Base+0x154>
   1d850:	mov	r4, #0
   1d854:	ldr	r8, [pc, #292]	; 1d980 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x168>
   1d858:	add	r8, pc, r8
   1d85c:	mvn	fp, #16
   1d860:	mov	sl, #10
   1d864:	b	1d904 <myhtml_string_append_lowercase_with_preprocessing@@Base+0xec>
   1d868:	bl	10964 <mycore_string_realloc@plt>
   1d86c:	b	1d844 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x2c>
   1d870:	ldr	r3, [r5, #8]
   1d874:	strb	sl, [r2, r3]
   1d878:	add	r4, r4, #1
   1d87c:	cmp	r7, r4
   1d880:	bls	1d8a0 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x88>
   1d884:	ldrb	r3, [r6, r4]
   1d888:	cmp	r3, #10
   1d88c:	beq	1d8ec <myhtml_string_append_lowercase_with_preprocessing@@Base+0xd4>
   1d890:	ldr	r3, [r5, #8]
   1d894:	add	r3, r3, #1
   1d898:	str	r3, [r5, #8]
   1d89c:	b	1d904 <myhtml_string_append_lowercase_with_preprocessing@@Base+0xec>
   1d8a0:	ldr	r1, [r5, #8]
   1d8a4:	add	r3, r1, #1
   1d8a8:	str	r3, [r5, #8]
   1d8ac:	ldr	r2, [r5, #4]
   1d8b0:	cmp	r3, r2
   1d8b4:	bcs	1d8d0 <myhtml_string_append_lowercase_with_preprocessing@@Base+0xb8>
   1d8b8:	ldr	r2, [r5]
   1d8bc:	ldr	r3, [r5, #8]
   1d8c0:	mov	r1, #0
   1d8c4:	strb	r1, [r2, r3]
   1d8c8:	ldr	r0, [r5, #8]
   1d8cc:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d8d0:	add	r1, r1, #3
   1d8d4:	mov	r0, r5
   1d8d8:	bl	10964 <mycore_string_realloc@plt>
   1d8dc:	b	1d8b8 <myhtml_string_append_lowercase_with_preprocessing@@Base+0xa0>
   1d8e0:	ldr	r1, [r5, #8]
   1d8e4:	ldrb	r3, [r8, r3]
   1d8e8:	strb	r3, [r2, r1]
   1d8ec:	ldr	r3, [r5, #8]
   1d8f0:	add	r3, r3, #1
   1d8f4:	str	r3, [r5, #8]
   1d8f8:	add	r4, r4, #1
   1d8fc:	cmp	r7, r4
   1d900:	bls	1d96c <myhtml_string_append_lowercase_with_preprocessing@@Base+0x154>
   1d904:	ldrb	r3, [r6, r4]
   1d908:	cmp	r3, #13
   1d90c:	beq	1d870 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x58>
   1d910:	cmp	r3, #0
   1d914:	moveq	r1, r9
   1d918:	orrne	r1, r9, #1
   1d91c:	cmp	r1, #0
   1d920:	bne	1d8e0 <myhtml_string_append_lowercase_with_preprocessing@@Base+0xc8>
   1d924:	ldr	r1, [r5, #4]
   1d928:	add	r1, r1, #5
   1d92c:	mov	r0, r5
   1d930:	bl	10964 <mycore_string_realloc@plt>
   1d934:	ldr	r2, [r5]
   1d938:	ldr	r3, [r5, #8]
   1d93c:	strb	fp, [r2, r3]
   1d940:	ldr	r3, [r5, #8]
   1d944:	add	r3, r3, #1
   1d948:	str	r3, [r5, #8]
   1d94c:	mvn	r1, #64	; 0x40
   1d950:	strb	r1, [r2, r3]
   1d954:	ldr	r3, [r5, #8]
   1d958:	add	r3, r3, #1
   1d95c:	str	r3, [r5, #8]
   1d960:	mvn	r1, #66	; 0x42
   1d964:	strb	r1, [r2, r3]
   1d968:	b	1d8ec <myhtml_string_append_lowercase_with_preprocessing@@Base+0xd4>
   1d96c:	ldr	r2, [r5]
   1d970:	ldr	r3, [r5, #8]
   1d974:	mov	r0, #0
   1d978:	strb	r0, [r2, r3]
   1d97c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d980:	andeq	pc, sp, r0, asr ip	; <UNPREDICTABLE>

0001d984 <myhtml_string_before_append_any_preprocessing@@Base>:
   1d984:	cmp	r2, #0
   1d988:	cmpne	r3, #0
   1d98c:	beq	1d9a4 <myhtml_string_before_append_any_preprocessing@@Base+0x20>
   1d990:	ldrb	r0, [r1]
   1d994:	cmp	r0, #10
   1d998:	movne	r0, #0
   1d99c:	moveq	r0, #1
   1d9a0:	bx	lr
   1d9a4:	mov	r0, #0
   1d9a8:	bx	lr

0001d9ac <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base>:
   1d9ac:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d9b0:	mov	r5, r0
   1d9b4:	mov	r7, r1
   1d9b8:	mov	r9, r2
   1d9bc:	mov	r8, r3
   1d9c0:	ldrb	fp, [sp, #44]	; 0x2c
   1d9c4:	add	r1, r3, #1
   1d9c8:	ldr	r3, [r0, #8]
   1d9cc:	add	r1, r1, r3
   1d9d0:	ldr	r3, [r0, #4]
   1d9d4:	cmp	r1, r3
   1d9d8:	bcs	1d9f8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x4c>
   1d9dc:	ldr	r0, [sp, #40]	; 0x28
   1d9e0:	bl	1082c <myencoding_get_function_by_id@plt>
   1d9e4:	mov	sl, r0
   1d9e8:	cmp	r8, #0
   1d9ec:	beq	1db50 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x1a4>
   1d9f0:	mov	r4, #0
   1d9f4:	b	1da38 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x8c>
   1d9f8:	bl	10964 <mycore_string_realloc@plt>
   1d9fc:	b	1d9dc <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x30>
   1da00:	ldr	r1, [r5]
   1da04:	ldr	r3, [r5, #8]
   1da08:	add	r1, r1, r3
   1da0c:	ldr	r0, [r7, #12]
   1da10:	bl	10e8c <myencoding_codepoint_to_ascii_utf_8@plt>
   1da14:	mov	r6, r0
   1da18:	cmp	r0, #1
   1da1c:	beq	1da70 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0xc4>
   1da20:	ldr	r0, [r5, #8]
   1da24:	add	r0, r0, r6
   1da28:	str	r0, [r5, #8]
   1da2c:	add	r4, r4, #1
   1da30:	cmp	r8, r4
   1da34:	bls	1db50 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x1a4>
   1da38:	mov	r1, r7
   1da3c:	ldrb	r0, [r9, r4]
   1da40:	blx	sl
   1da44:	cmp	r0, #0
   1da48:	bne	1da2c <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x80>
   1da4c:	ldr	r1, [r5, #8]
   1da50:	add	r2, r1, #5
   1da54:	ldr	r3, [r5, #4]
   1da58:	cmp	r2, r3
   1da5c:	bcc	1da00 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x54>
   1da60:	add	r1, r1, #6
   1da64:	mov	r0, r5
   1da68:	bl	10964 <mycore_string_realloc@plt>
   1da6c:	b	1da00 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x54>
   1da70:	ldr	r1, [r5]
   1da74:	ldr	r2, [r5, #8]
   1da78:	ldrb	r3, [r1, r2]
   1da7c:	cmp	r3, #13
   1da80:	beq	1daec <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x140>
   1da84:	cmp	r3, #0
   1da88:	moveq	r3, fp
   1da8c:	orrne	r3, fp, #1
   1da90:	cmp	r3, #0
   1da94:	bne	1da20 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x74>
   1da98:	ldr	r1, [r5, #4]
   1da9c:	add	r1, r1, #5
   1daa0:	mov	r0, r5
   1daa4:	bl	10964 <mycore_string_realloc@plt>
   1daa8:	ldr	r2, [r5]
   1daac:	ldr	r3, [r5, #8]
   1dab0:	mvn	r1, #16
   1dab4:	strb	r1, [r2, r3]
   1dab8:	ldr	r3, [r5, #8]
   1dabc:	add	r3, r3, #1
   1dac0:	str	r3, [r5, #8]
   1dac4:	ldr	r2, [r5]
   1dac8:	mvn	r1, #64	; 0x40
   1dacc:	strb	r1, [r2, r3]
   1dad0:	ldr	r3, [r5, #8]
   1dad4:	add	r3, r3, #1
   1dad8:	str	r3, [r5, #8]
   1dadc:	ldr	r2, [r5]
   1dae0:	mvn	r1, #66	; 0x42
   1dae4:	strb	r1, [r2, r3]
   1dae8:	b	1da20 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x74>
   1daec:	mov	r3, #10
   1daf0:	strb	r3, [r1, r2]
   1daf4:	add	r3, r4, #1
   1daf8:	cmp	r8, r3
   1dafc:	bls	1db10 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x164>
   1db00:	ldrb	r2, [r9, r3]
   1db04:	cmp	r2, #10
   1db08:	moveq	r4, r3
   1db0c:	b	1da20 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x74>
   1db10:	ldr	r1, [r5, #8]
   1db14:	add	r3, r1, #1
   1db18:	str	r3, [r5, #8]
   1db1c:	ldr	r2, [r5, #4]
   1db20:	cmp	r3, r2
   1db24:	bcs	1db40 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x194>
   1db28:	ldr	r2, [r5]
   1db2c:	ldr	r3, [r5, #8]
   1db30:	mov	r1, #0
   1db34:	strb	r1, [r2, r3]
   1db38:	ldr	r0, [r5, #8]
   1db3c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1db40:	add	r1, r1, #3
   1db44:	mov	r0, r5
   1db48:	bl	10964 <mycore_string_realloc@plt>
   1db4c:	b	1db28 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x17c>
   1db50:	ldr	r1, [r5, #8]
   1db54:	ldr	r3, [r5, #4]
   1db58:	cmp	r1, r3
   1db5c:	bcs	1db74 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x1c8>
   1db60:	ldr	r2, [r5]
   1db64:	ldr	r3, [r5, #8]
   1db68:	mov	r0, #0
   1db6c:	strb	r0, [r2, r3]
   1db70:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1db74:	add	r1, r1, #1
   1db78:	mov	r0, r5
   1db7c:	bl	10964 <mycore_string_realloc@plt>
   1db80:	b	1db60 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x1b4>

0001db84 <myhtml_string_append_with_convert_encoding_with_preprocessing@@Base>:
   1db84:	push	{r4, r5, r6, r7, r8, lr}
   1db88:	sub	sp, sp, #32
   1db8c:	mov	r5, r0
   1db90:	mov	r6, r1
   1db94:	mov	r7, r2
   1db98:	mov	r8, r3
   1db9c:	add	r4, sp, #8
   1dba0:	mov	r0, r4
   1dba4:	bl	101c0 <myencoding_result_clean@plt>
   1dba8:	ldrb	r3, [sp, #56]	; 0x38
   1dbac:	str	r3, [sp, #4]
   1dbb0:	str	r8, [sp]
   1dbb4:	mov	r3, r7
   1dbb8:	mov	r2, r6
   1dbbc:	mov	r1, r4
   1dbc0:	mov	r0, r5
   1dbc4:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1dbc8:	add	sp, sp, #32
   1dbcc:	pop	{r4, r5, r6, r7, r8, pc}

0001dbd0 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base>:
   1dbd0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dbd4:	mov	r5, r0
   1dbd8:	mov	r7, r1
   1dbdc:	mov	r9, r2
   1dbe0:	mov	r8, r3
   1dbe4:	ldrb	fp, [sp, #44]	; 0x2c
   1dbe8:	add	r1, r3, #1
   1dbec:	ldr	r3, [r0, #8]
   1dbf0:	add	r1, r1, r3
   1dbf4:	ldr	r3, [r0, #4]
   1dbf8:	cmp	r1, r3
   1dbfc:	bcs	1dc1c <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x4c>
   1dc00:	ldr	r0, [sp, #40]	; 0x28
   1dc04:	bl	1082c <myencoding_get_function_by_id@plt>
   1dc08:	mov	sl, r0
   1dc0c:	cmp	r8, #0
   1dc10:	beq	1dd74 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x1a4>
   1dc14:	mov	r4, #0
   1dc18:	b	1dc5c <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x8c>
   1dc1c:	bl	10964 <mycore_string_realloc@plt>
   1dc20:	b	1dc00 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x30>
   1dc24:	ldr	r1, [r5]
   1dc28:	ldr	r3, [r5, #8]
   1dc2c:	add	r1, r1, r3
   1dc30:	ldr	r0, [r7, #12]
   1dc34:	bl	fcc8 <myencoding_codepoint_to_lowercase_ascii_utf_8@plt>
   1dc38:	mov	r6, r0
   1dc3c:	cmp	r0, #1
   1dc40:	beq	1dc94 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0xc4>
   1dc44:	ldr	r0, [r5, #8]
   1dc48:	add	r0, r0, r6
   1dc4c:	str	r0, [r5, #8]
   1dc50:	add	r4, r4, #1
   1dc54:	cmp	r8, r4
   1dc58:	bls	1dd74 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x1a4>
   1dc5c:	mov	r1, r7
   1dc60:	ldrb	r0, [r9, r4]
   1dc64:	blx	sl
   1dc68:	cmp	r0, #0
   1dc6c:	bne	1dc50 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x80>
   1dc70:	ldr	r1, [r5, #8]
   1dc74:	add	r2, r1, #5
   1dc78:	ldr	r3, [r5, #4]
   1dc7c:	cmp	r2, r3
   1dc80:	bcc	1dc24 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x54>
   1dc84:	add	r1, r1, #6
   1dc88:	mov	r0, r5
   1dc8c:	bl	10964 <mycore_string_realloc@plt>
   1dc90:	b	1dc24 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x54>
   1dc94:	ldr	r1, [r5]
   1dc98:	ldr	r2, [r5, #8]
   1dc9c:	ldrb	r3, [r1, r2]
   1dca0:	cmp	r3, #13
   1dca4:	beq	1dd10 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x140>
   1dca8:	cmp	r3, #0
   1dcac:	moveq	r3, fp
   1dcb0:	orrne	r3, fp, #1
   1dcb4:	cmp	r3, #0
   1dcb8:	bne	1dc44 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x74>
   1dcbc:	ldr	r1, [r5, #4]
   1dcc0:	add	r1, r1, #5
   1dcc4:	mov	r0, r5
   1dcc8:	bl	10964 <mycore_string_realloc@plt>
   1dccc:	ldr	r2, [r5]
   1dcd0:	ldr	r3, [r5, #8]
   1dcd4:	mvn	r1, #16
   1dcd8:	strb	r1, [r2, r3]
   1dcdc:	ldr	r3, [r5, #8]
   1dce0:	add	r3, r3, #1
   1dce4:	str	r3, [r5, #8]
   1dce8:	ldr	r2, [r5]
   1dcec:	mvn	r1, #64	; 0x40
   1dcf0:	strb	r1, [r2, r3]
   1dcf4:	ldr	r3, [r5, #8]
   1dcf8:	add	r3, r3, #1
   1dcfc:	str	r3, [r5, #8]
   1dd00:	ldr	r2, [r5]
   1dd04:	mvn	r1, #66	; 0x42
   1dd08:	strb	r1, [r2, r3]
   1dd0c:	b	1dc44 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x74>
   1dd10:	mov	r3, #10
   1dd14:	strb	r3, [r1, r2]
   1dd18:	add	r3, r4, #1
   1dd1c:	cmp	r8, r3
   1dd20:	bls	1dd34 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x164>
   1dd24:	ldrb	r2, [r9, r3]
   1dd28:	cmp	r2, #10
   1dd2c:	moveq	r4, r3
   1dd30:	b	1dc44 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x74>
   1dd34:	ldr	r1, [r5, #8]
   1dd38:	add	r3, r1, #1
   1dd3c:	str	r3, [r5, #8]
   1dd40:	ldr	r2, [r5, #4]
   1dd44:	cmp	r3, r2
   1dd48:	bcs	1dd64 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x194>
   1dd4c:	ldr	r2, [r5]
   1dd50:	ldr	r3, [r5, #8]
   1dd54:	mov	r1, #0
   1dd58:	strb	r1, [r2, r3]
   1dd5c:	ldr	r0, [r5, #8]
   1dd60:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dd64:	add	r1, r1, #3
   1dd68:	mov	r0, r5
   1dd6c:	bl	10964 <mycore_string_realloc@plt>
   1dd70:	b	1dd4c <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x17c>
   1dd74:	ldr	r1, [r5, #8]
   1dd78:	ldr	r3, [r5, #4]
   1dd7c:	cmp	r1, r3
   1dd80:	bcs	1dd98 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x1c8>
   1dd84:	ldr	r2, [r5]
   1dd88:	ldr	r3, [r5, #8]
   1dd8c:	mov	r0, #0
   1dd90:	strb	r0, [r2, r3]
   1dd94:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dd98:	add	r1, r1, #1
   1dd9c:	mov	r0, r5
   1dda0:	bl	10964 <mycore_string_realloc@plt>
   1dda4:	b	1dd84 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x1b4>

0001dda8 <myhtml_string_append_lowercase_with_convert_encoding_with_preprocessing@@Base>:
   1dda8:	push	{r4, r5, r6, r7, r8, lr}
   1ddac:	sub	sp, sp, #32
   1ddb0:	mov	r5, r0
   1ddb4:	mov	r6, r1
   1ddb8:	mov	r7, r2
   1ddbc:	mov	r8, r3
   1ddc0:	add	r4, sp, #8
   1ddc4:	mov	r0, r4
   1ddc8:	bl	101c0 <myencoding_result_clean@plt>
   1ddcc:	ldrb	r3, [sp, #56]	; 0x38
   1ddd0:	str	r3, [sp, #4]
   1ddd4:	str	r8, [sp]
   1ddd8:	mov	r3, r7
   1dddc:	mov	r2, r6
   1dde0:	mov	r1, r4
   1dde4:	mov	r0, r5
   1dde8:	bl	10d90 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>
   1ddec:	add	sp, sp, #32
   1ddf0:	pop	{r4, r5, r6, r7, r8, pc}

0001ddf4 <myhtml_parser_stream@@Base>:
   1ddf4:	push	{r4, lr}
   1ddf8:	mov	r4, r1
   1ddfc:	ldr	r3, [r1]
   1de00:	ldr	r3, [r3, #184]	; 0xb8
   1de04:	tst	r3, #1
   1de08:	popne	{r4, pc}
   1de0c:	ldr	r1, [r4, #4]
   1de10:	ldr	r0, [r4]
   1de14:	bl	fe9c <myhtml_rules_tree_dispatcher@plt>
   1de18:	cmp	r0, #0
   1de1c:	bne	1de0c <myhtml_parser_stream@@Base+0x18>
   1de20:	pop	{r4, pc}

0001de24 <myhtml_parser_token_data_to_string_lowercase@@Base>:
   1de24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1de28:	sub	sp, sp, #20
   1de2c:	mov	fp, r0
   1de30:	mov	r8, r1
   1de34:	mov	sl, r2
   1de38:	mov	r6, r3
   1de3c:	ldr	r7, [sp, #56]	; 0x38
   1de40:	mov	r1, r3
   1de44:	ldr	r0, [r0, #80]	; 0x50
   1de48:	bl	10100 <mycore_incoming_buffer_find_by_position@plt>
   1de4c:	mov	r5, r0
   1de50:	ldr	r2, [r0, #12]
   1de54:	sub	r6, r6, r2
   1de58:	ldr	r4, [r0, #8]
   1de5c:	add	r3, r6, r7
   1de60:	cmp	r3, r4
   1de64:	bls	1de80 <myhtml_parser_token_data_to_string_lowercase@@Base+0x5c>
   1de68:	cmp	r0, #0
   1de6c:	movne	r9, #0
   1de70:	addne	r3, sl, #8
   1de74:	strne	r3, [sp, #12]
   1de78:	bne	1df28 <myhtml_parser_token_data_to_string_lowercase@@Base+0x104>
   1de7c:	b	1dfc0 <myhtml_parser_token_data_to_string_lowercase@@Base+0x19c>
   1de80:	ldr	r3, [fp, #200]	; 0xc8
   1de84:	cmp	r3, #0
   1de88:	bne	1deb0 <myhtml_parser_token_data_to_string_lowercase@@Base+0x8c>
   1de8c:	ldr	r1, [r0]
   1de90:	ldrb	r3, [sl, #61]	; 0x3d
   1de94:	mov	r2, r7
   1de98:	add	r1, r1, r6
   1de9c:	mov	r0, r8
   1dea0:	bl	11030 <myhtml_string_append_lowercase_with_preprocessing@plt>
   1dea4:	ldr	r0, [r8, #8]
   1dea8:	add	sp, sp, #20
   1deac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1deb0:	ldr	r2, [r0]
   1deb4:	ldrb	r3, [sl, #61]	; 0x3d
   1deb8:	str	r3, [sp, #4]
   1debc:	ldr	r3, [sl, #4]
   1dec0:	str	r3, [sp]
   1dec4:	mov	r3, r7
   1dec8:	add	r2, r2, r6
   1decc:	add	r1, sl, #8
   1ded0:	mov	r0, r8
   1ded4:	bl	10d90 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>
   1ded8:	b	1dea4 <myhtml_parser_token_data_to_string_lowercase@@Base+0x80>
   1dedc:	add	r6, r0, r6
   1dee0:	ldr	r2, [r5]
   1dee4:	ldrb	r3, [sl, #61]	; 0x3d
   1dee8:	str	r3, [sp, #4]
   1deec:	ldr	r3, [sl, #4]
   1def0:	str	r3, [sp]
   1def4:	sub	r3, r4, r0
   1def8:	add	r2, r2, r6
   1defc:	ldr	r1, [sp, #12]
   1df00:	mov	r0, r8
   1df04:	bl	10d90 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>
   1df08:	mov	r9, r0
   1df0c:	ldr	r5, [r5, #20]
   1df10:	cmp	r5, #0
   1df14:	beq	1dfc0 <myhtml_parser_token_data_to_string_lowercase@@Base+0x19c>
   1df18:	ldr	r4, [r5, #8]
   1df1c:	mov	r6, #0
   1df20:	cmp	r4, r7
   1df24:	bcs	1df80 <myhtml_parser_token_data_to_string_lowercase@@Base+0x15c>
   1df28:	sub	r4, r4, r6
   1df2c:	sub	r7, r7, r4
   1df30:	ldr	r1, [r5]
   1df34:	mov	r3, r9
   1df38:	mov	r2, r4
   1df3c:	add	r1, r1, r6
   1df40:	mov	r0, r8
   1df44:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   1df48:	cmp	r4, #0
   1df4c:	beq	1df0c <myhtml_parser_token_data_to_string_lowercase@@Base+0xe8>
   1df50:	ldr	r3, [fp, #200]	; 0xc8
   1df54:	cmp	r3, #0
   1df58:	bne	1dedc <myhtml_parser_token_data_to_string_lowercase@@Base+0xb8>
   1df5c:	add	r6, r0, r6
   1df60:	ldr	r1, [r5]
   1df64:	ldrb	r3, [sl, #61]	; 0x3d
   1df68:	sub	r2, r4, r0
   1df6c:	add	r1, r1, r6
   1df70:	mov	r0, r8
   1df74:	bl	11030 <myhtml_string_append_lowercase_with_preprocessing@plt>
   1df78:	mov	r9, r0
   1df7c:	b	1df0c <myhtml_parser_token_data_to_string_lowercase@@Base+0xe8>
   1df80:	mov	r3, r9
   1df84:	mov	r2, r7
   1df88:	ldr	r1, [r5]
   1df8c:	mov	r0, r8
   1df90:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   1df94:	cmp	r7, #0
   1df98:	beq	1dfc0 <myhtml_parser_token_data_to_string_lowercase@@Base+0x19c>
   1df9c:	ldr	r3, [fp, #200]	; 0xc8
   1dfa0:	cmp	r3, #0
   1dfa4:	bne	1dfc8 <myhtml_parser_token_data_to_string_lowercase@@Base+0x1a4>
   1dfa8:	ldr	r1, [r5]
   1dfac:	ldrb	r3, [sl, #61]	; 0x3d
   1dfb0:	sub	r2, r7, r0
   1dfb4:	add	r1, r1, r0
   1dfb8:	mov	r0, r8
   1dfbc:	bl	11030 <myhtml_string_append_lowercase_with_preprocessing@plt>
   1dfc0:	ldr	r0, [r8, #8]
   1dfc4:	b	1dea8 <myhtml_parser_token_data_to_string_lowercase@@Base+0x84>
   1dfc8:	ldr	r2, [r5]
   1dfcc:	ldrb	r3, [sl, #61]	; 0x3d
   1dfd0:	str	r3, [sp, #4]
   1dfd4:	ldr	r3, [sl, #4]
   1dfd8:	str	r3, [sp]
   1dfdc:	sub	r3, r7, r0
   1dfe0:	add	r2, r2, r0
   1dfe4:	add	r1, sl, #8
   1dfe8:	mov	r0, r8
   1dfec:	bl	10d90 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>
   1dff0:	b	1dfc0 <myhtml_parser_token_data_to_string_lowercase@@Base+0x19c>

0001dff4 <myhtml_parser_token_data_to_string@@Base>:
   1dff4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dff8:	sub	sp, sp, #20
   1dffc:	mov	fp, r0
   1e000:	mov	r8, r1
   1e004:	mov	sl, r2
   1e008:	mov	r6, r3
   1e00c:	ldr	r7, [sp, #56]	; 0x38
   1e010:	mov	r1, r3
   1e014:	ldr	r0, [r0, #80]	; 0x50
   1e018:	bl	10100 <mycore_incoming_buffer_find_by_position@plt>
   1e01c:	mov	r5, r0
   1e020:	ldr	r2, [r0, #12]
   1e024:	sub	r6, r6, r2
   1e028:	ldr	r4, [r0, #8]
   1e02c:	add	r3, r6, r7
   1e030:	cmp	r3, r4
   1e034:	bls	1e050 <myhtml_parser_token_data_to_string@@Base+0x5c>
   1e038:	cmp	r0, #0
   1e03c:	movne	r9, #0
   1e040:	addne	r3, sl, #8
   1e044:	strne	r3, [sp, #12]
   1e048:	bne	1e0f8 <myhtml_parser_token_data_to_string@@Base+0x104>
   1e04c:	b	1e190 <myhtml_parser_token_data_to_string@@Base+0x19c>
   1e050:	ldr	r3, [fp, #200]	; 0xc8
   1e054:	cmp	r3, #0
   1e058:	bne	1e080 <myhtml_parser_token_data_to_string@@Base+0x8c>
   1e05c:	ldr	r1, [r0]
   1e060:	ldrb	r3, [sl, #61]	; 0x3d
   1e064:	mov	r2, r7
   1e068:	add	r1, r1, r6
   1e06c:	mov	r0, r8
   1e070:	bl	101cc <myhtml_string_append_with_preprocessing@plt>
   1e074:	ldr	r0, [r8, #8]
   1e078:	add	sp, sp, #20
   1e07c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e080:	ldr	r2, [r0]
   1e084:	ldrb	r3, [sl, #61]	; 0x3d
   1e088:	str	r3, [sp, #4]
   1e08c:	ldr	r3, [sl, #4]
   1e090:	str	r3, [sp]
   1e094:	mov	r3, r7
   1e098:	add	r2, r2, r6
   1e09c:	add	r1, sl, #8
   1e0a0:	mov	r0, r8
   1e0a4:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1e0a8:	b	1e074 <myhtml_parser_token_data_to_string@@Base+0x80>
   1e0ac:	add	r6, r0, r6
   1e0b0:	ldr	r2, [r5]
   1e0b4:	ldrb	r3, [sl, #61]	; 0x3d
   1e0b8:	str	r3, [sp, #4]
   1e0bc:	ldr	r3, [sl, #4]
   1e0c0:	str	r3, [sp]
   1e0c4:	sub	r3, r4, r0
   1e0c8:	add	r2, r2, r6
   1e0cc:	ldr	r1, [sp, #12]
   1e0d0:	mov	r0, r8
   1e0d4:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1e0d8:	mov	r9, r0
   1e0dc:	ldr	r5, [r5, #20]
   1e0e0:	cmp	r5, #0
   1e0e4:	beq	1e190 <myhtml_parser_token_data_to_string@@Base+0x19c>
   1e0e8:	ldr	r4, [r5, #8]
   1e0ec:	mov	r6, #0
   1e0f0:	cmp	r4, r7
   1e0f4:	bcs	1e150 <myhtml_parser_token_data_to_string@@Base+0x15c>
   1e0f8:	sub	r4, r4, r6
   1e0fc:	sub	r7, r7, r4
   1e100:	ldr	r1, [r5]
   1e104:	mov	r3, r9
   1e108:	mov	r2, r4
   1e10c:	add	r1, r1, r6
   1e110:	mov	r0, r8
   1e114:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   1e118:	cmp	r4, #0
   1e11c:	beq	1e0dc <myhtml_parser_token_data_to_string@@Base+0xe8>
   1e120:	ldr	r3, [fp, #200]	; 0xc8
   1e124:	cmp	r3, #0
   1e128:	bne	1e0ac <myhtml_parser_token_data_to_string@@Base+0xb8>
   1e12c:	add	r6, r0, r6
   1e130:	ldr	r1, [r5]
   1e134:	ldrb	r3, [sl, #61]	; 0x3d
   1e138:	sub	r2, r4, r0
   1e13c:	add	r1, r1, r6
   1e140:	mov	r0, r8
   1e144:	bl	101cc <myhtml_string_append_with_preprocessing@plt>
   1e148:	mov	r9, r0
   1e14c:	b	1e0dc <myhtml_parser_token_data_to_string@@Base+0xe8>
   1e150:	mov	r3, r9
   1e154:	mov	r2, r7
   1e158:	ldr	r1, [r5]
   1e15c:	mov	r0, r8
   1e160:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   1e164:	cmp	r7, #0
   1e168:	beq	1e190 <myhtml_parser_token_data_to_string@@Base+0x19c>
   1e16c:	ldr	r3, [fp, #200]	; 0xc8
   1e170:	cmp	r3, #0
   1e174:	bne	1e198 <myhtml_parser_token_data_to_string@@Base+0x1a4>
   1e178:	ldr	r1, [r5]
   1e17c:	ldrb	r3, [sl, #61]	; 0x3d
   1e180:	sub	r2, r7, r0
   1e184:	add	r1, r1, r0
   1e188:	mov	r0, r8
   1e18c:	bl	101cc <myhtml_string_append_with_preprocessing@plt>
   1e190:	ldr	r0, [r8, #8]
   1e194:	b	1e078 <myhtml_parser_token_data_to_string@@Base+0x84>
   1e198:	ldr	r2, [r5]
   1e19c:	ldrb	r3, [sl, #61]	; 0x3d
   1e1a0:	str	r3, [sp, #4]
   1e1a4:	ldr	r3, [sl, #4]
   1e1a8:	str	r3, [sp]
   1e1ac:	sub	r3, r7, r0
   1e1b0:	add	r2, r2, r0
   1e1b4:	add	r1, sl, #8
   1e1b8:	mov	r0, r8
   1e1bc:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1e1c0:	b	1e190 <myhtml_parser_token_data_to_string@@Base+0x19c>

0001e1c4 <myhtml_parser_token_data_to_string_charef@@Base>:
   1e1c4:	push	{r4, r5, r6, r7, r8, lr}
   1e1c8:	mov	r7, r1
   1e1cc:	mov	r8, r2
   1e1d0:	mov	r5, r3
   1e1d4:	ldr	r6, [sp, #24]
   1e1d8:	mov	r1, r3
   1e1dc:	ldr	r0, [r0, #80]	; 0x50
   1e1e0:	bl	10100 <mycore_incoming_buffer_find_by_position@plt>
   1e1e4:	mov	r4, r0
   1e1e8:	ldr	r1, [r0, #12]
   1e1ec:	sub	r1, r5, r1
   1e1f0:	ldr	r3, [r0, #8]
   1e1f4:	add	r2, r1, r6
   1e1f8:	cmp	r2, r3
   1e1fc:	bls	1e26c <myhtml_parser_token_data_to_string_charef@@Base+0xa8>
   1e200:	cmp	r0, #0
   1e204:	movne	r5, #0
   1e208:	beq	1e258 <myhtml_parser_token_data_to_string_charef@@Base+0x94>
   1e20c:	sub	r3, r3, r1
   1e210:	sub	r6, r6, r3
   1e214:	ldr	r2, [r4]
   1e218:	add	r2, r2, r1
   1e21c:	mov	r1, r7
   1e220:	mov	r0, r8
   1e224:	bl	10754 <myhtml_data_process@plt>
   1e228:	ldr	r4, [r4, #20]
   1e22c:	cmp	r4, #0
   1e230:	beq	1e258 <myhtml_parser_token_data_to_string_charef@@Base+0x94>
   1e234:	ldr	r3, [r4, #8]
   1e238:	mov	r1, r5
   1e23c:	cmp	r3, r6
   1e240:	bcc	1e20c <myhtml_parser_token_data_to_string_charef@@Base+0x48>
   1e244:	mov	r3, r6
   1e248:	ldr	r2, [r4]
   1e24c:	mov	r1, r7
   1e250:	mov	r0, r8
   1e254:	bl	10754 <myhtml_data_process@plt>
   1e258:	mov	r1, r7
   1e25c:	mov	r0, r8
   1e260:	bl	10928 <myhtml_data_process_end@plt>
   1e264:	ldr	r0, [r7, #8]
   1e268:	pop	{r4, r5, r6, r7, r8, pc}
   1e26c:	ldr	r2, [r0]
   1e270:	mov	r3, r6
   1e274:	add	r2, r2, r1
   1e278:	mov	r1, r7
   1e27c:	mov	r0, r8
   1e280:	bl	10754 <myhtml_data_process@plt>
   1e284:	mov	r1, r7
   1e288:	mov	r0, r8
   1e28c:	bl	10928 <myhtml_data_process_end@plt>
   1e290:	ldr	r0, [r7, #8]
   1e294:	pop	{r4, r5, r6, r7, r8, pc}

0001e298 <myhtml_parser_worker@@Base>:
   1e298:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1e29c:	sub	sp, sp, #72	; 0x48
   1e2a0:	ldr	r5, [r1]
   1e2a4:	ldr	r8, [r1, #4]
   1e2a8:	ldr	r3, [r5, #184]	; 0xb8
   1e2ac:	tst	r3, #3
   1e2b0:	beq	1e310 <myhtml_parser_worker@@Base+0x78>
   1e2b4:	ldr	r3, [r5, #184]	; 0xb8
   1e2b8:	tst	r3, #2
   1e2bc:	beq	1e310 <myhtml_parser_worker@@Base+0x78>
   1e2c0:	ldr	r3, [r5, #220]	; 0xdc
   1e2c4:	cmp	r3, #0
   1e2c8:	beq	1e2e0 <myhtml_parser_worker@@Base+0x48>
   1e2cc:	ldr	r2, [r5, #228]	; 0xe4
   1e2d0:	mov	r1, r8
   1e2d4:	mov	r0, r5
   1e2d8:	blx	r3
   1e2dc:	str	r0, [r5, #228]	; 0xe4
   1e2e0:	ldr	r3, [r8, #48]	; 0x30
   1e2e4:	orr	r3, r3, #4
   1e2e8:	str	r3, [r8, #48]	; 0x30
   1e2ec:	ldr	r3, [r5, #224]	; 0xe0
   1e2f0:	cmp	r3, #0
   1e2f4:	beq	1e558 <myhtml_parser_worker@@Base+0x2c0>
   1e2f8:	ldr	r2, [r5, #232]	; 0xe8
   1e2fc:	mov	r1, r8
   1e300:	mov	r0, r5
   1e304:	blx	r3
   1e308:	str	r0, [r5, #232]	; 0xe8
   1e30c:	b	1e558 <myhtml_parser_worker@@Base+0x2c0>
   1e310:	ldr	r3, [r5]
   1e314:	ldr	r3, [r3, #4]
   1e318:	cmp	r3, #0
   1e31c:	ldrne	r3, [r3, #12]
   1e320:	addne	r0, r0, r3
   1e324:	ldr	r3, [r5, #144]	; 0x90
   1e328:	ldr	r9, [r3, r0, lsl #2]
   1e32c:	ldr	r3, [r5, #220]	; 0xdc
   1e330:	cmp	r3, #0
   1e334:	beq	1e34c <myhtml_parser_worker@@Base+0xb4>
   1e338:	ldr	r2, [r5, #228]	; 0xe4
   1e33c:	mov	r1, r8
   1e340:	mov	r0, r5
   1e344:	blx	r3
   1e348:	str	r0, [r5, #228]	; 0xe4
   1e34c:	ldr	r3, [r8]
   1e350:	sub	r3, r3, #1
   1e354:	cmp	r3, #1
   1e358:	bls	1e388 <myhtml_parser_worker@@Base+0xf0>
   1e35c:	ldr	r3, [r8, #40]	; 0x28
   1e360:	cmp	r3, #0
   1e364:	beq	1e51c <myhtml_parser_worker@@Base+0x284>
   1e368:	add	r0, r8, #4
   1e36c:	bl	11090 <mycore_string_clean_all@plt>
   1e370:	ldr	r4, [r8, #40]	; 0x28
   1e374:	cmp	r4, #0
   1e378:	beq	1e52c <myhtml_parser_worker@@Base+0x294>
   1e37c:	add	r7, sp, #8
   1e380:	mov	sl, #1
   1e384:	b	1e46c <myhtml_parser_worker@@Base+0x1d4>
   1e388:	add	r4, r8, #4
   1e38c:	ldr	r3, [r8, #28]
   1e390:	add	r3, r3, #1
   1e394:	mov	r2, r4
   1e398:	mov	r1, r9
   1e39c:	ldr	r0, [r5, #4]
   1e3a0:	bl	10610 <mycore_string_init@plt>
   1e3a4:	mov	r3, #0
   1e3a8:	str	r3, [r8, #40]	; 0x28
   1e3ac:	str	r3, [r8, #44]	; 0x2c
   1e3b0:	add	r0, sp, #8
   1e3b4:	bl	104f0 <myhtml_data_process_entry_clean@plt>
   1e3b8:	ldr	r3, [r5, #200]	; 0xc8
   1e3bc:	str	r3, [sp, #12]
   1e3c0:	ldr	r3, [r8, #48]	; 0x30
   1e3c4:	tst	r3, #512	; 0x200
   1e3c8:	bne	1e404 <myhtml_parser_worker@@Base+0x16c>
   1e3cc:	ldr	r3, [r8, #48]	; 0x30
   1e3d0:	tst	r3, #16
   1e3d4:	bne	1e3e4 <myhtml_parser_worker@@Base+0x14c>
   1e3d8:	ldr	r3, [r8, #48]	; 0x30
   1e3dc:	tst	r3, #256	; 0x100
   1e3e0:	beq	1e42c <myhtml_parser_worker@@Base+0x194>
   1e3e4:	ldr	r3, [r8, #24]
   1e3e8:	ldr	r2, [r8, #28]
   1e3ec:	str	r2, [sp]
   1e3f0:	add	r2, sp, #8
   1e3f4:	mov	r1, r4
   1e3f8:	mov	r0, r5
   1e3fc:	bl	10400 <myhtml_parser_token_data_to_string_charef@plt>
   1e400:	b	1e52c <myhtml_parser_worker@@Base+0x294>
   1e404:	mov	r3, #1
   1e408:	strb	r3, [sp, #69]	; 0x45
   1e40c:	ldr	r3, [r8, #24]
   1e410:	ldr	r2, [r8, #28]
   1e414:	str	r2, [sp]
   1e418:	add	r2, sp, #8
   1e41c:	mov	r1, r4
   1e420:	mov	r0, r5
   1e424:	bl	10400 <myhtml_parser_token_data_to_string_charef@plt>
   1e428:	b	1e52c <myhtml_parser_worker@@Base+0x294>
   1e42c:	ldr	r3, [r8, #24]
   1e430:	ldr	r2, [r8, #28]
   1e434:	str	r2, [sp]
   1e438:	add	r2, sp, #8
   1e43c:	mov	r1, r4
   1e440:	mov	r0, r5
   1e444:	bl	10acc <myhtml_parser_token_data_to_string@plt>
   1e448:	b	1e52c <myhtml_parser_worker@@Base+0x294>
   1e44c:	add	r0, r4, #8
   1e450:	bl	11090 <mycore_string_clean_all@plt>
   1e454:	b	1e4c0 <myhtml_parser_worker@@Base+0x228>
   1e458:	add	r0, r4, #28
   1e45c:	bl	11090 <mycore_string_clean_all@plt>
   1e460:	ldr	r4, [r4]
   1e464:	cmp	r4, #0
   1e468:	beq	1e52c <myhtml_parser_worker@@Base+0x294>
   1e46c:	ldr	r3, [r4, #52]	; 0x34
   1e470:	cmp	r3, #0
   1e474:	beq	1e44c <myhtml_parser_worker@@Base+0x1b4>
   1e478:	mov	r0, r7
   1e47c:	bl	104f0 <myhtml_data_process_entry_clean@plt>
   1e480:	ldr	r3, [r5, #200]	; 0xc8
   1e484:	str	r3, [sp, #12]
   1e488:	add	r6, r4, #8
   1e48c:	ldr	r3, [r4, #52]	; 0x34
   1e490:	add	r3, r3, #1
   1e494:	mov	r2, r6
   1e498:	mov	r1, r9
   1e49c:	ldr	r0, [r5, #4]
   1e4a0:	bl	10610 <mycore_string_init@plt>
   1e4a4:	ldr	r3, [r4, #48]	; 0x30
   1e4a8:	ldr	r2, [r4, #52]	; 0x34
   1e4ac:	str	r2, [sp]
   1e4b0:	mov	r2, r7
   1e4b4:	mov	r1, r6
   1e4b8:	mov	r0, r5
   1e4bc:	bl	1100c <myhtml_parser_token_data_to_string_lowercase@plt>
   1e4c0:	ldr	r3, [r4, #60]	; 0x3c
   1e4c4:	cmp	r3, #0
   1e4c8:	beq	1e458 <myhtml_parser_worker@@Base+0x1c0>
   1e4cc:	mov	r0, r7
   1e4d0:	bl	104f0 <myhtml_data_process_entry_clean@plt>
   1e4d4:	ldr	r3, [r5, #200]	; 0xc8
   1e4d8:	str	r3, [sp, #12]
   1e4dc:	strb	sl, [sp, #68]	; 0x44
   1e4e0:	add	r6, r4, #28
   1e4e4:	ldr	r3, [r4, #60]	; 0x3c
   1e4e8:	add	r3, r3, #1
   1e4ec:	mov	r2, r6
   1e4f0:	mov	r1, r9
   1e4f4:	ldr	r0, [r5, #4]
   1e4f8:	bl	10610 <mycore_string_init@plt>
   1e4fc:	ldr	r3, [r4, #56]	; 0x38
   1e500:	ldr	r2, [r4, #60]	; 0x3c
   1e504:	str	r2, [sp]
   1e508:	mov	r2, r7
   1e50c:	mov	r1, r6
   1e510:	mov	r0, r5
   1e514:	bl	10400 <myhtml_parser_token_data_to_string_charef@plt>
   1e518:	b	1e460 <myhtml_parser_worker@@Base+0x1c8>
   1e51c:	mov	r3, #0
   1e520:	str	r3, [r8, #44]	; 0x2c
   1e524:	add	r0, r8, #4
   1e528:	bl	11090 <mycore_string_clean_all@plt>
   1e52c:	ldr	r3, [r8, #48]	; 0x30
   1e530:	orr	r3, r3, #4
   1e534:	str	r3, [r8, #48]	; 0x30
   1e538:	ldr	r3, [r5, #224]	; 0xe0
   1e53c:	cmp	r3, #0
   1e540:	beq	1e558 <myhtml_parser_worker@@Base+0x2c0>
   1e544:	ldr	r2, [r5, #232]	; 0xe8
   1e548:	mov	r1, r8
   1e54c:	mov	r0, r5
   1e550:	blx	r3
   1e554:	str	r0, [r5, #232]	; 0xe8
   1e558:	add	sp, sp, #72	; 0x48
   1e55c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

0001e560 <myhtml_parser_worker_stream@@Base>:
   1e560:	push	{r4, r5, r6, lr}
   1e564:	mov	r4, r0
   1e568:	mov	r5, r1
   1e56c:	bl	fd7c <myhtml_parser_worker@plt>
   1e570:	mov	r1, r5
   1e574:	mov	r0, r4
   1e578:	bl	10ff4 <myhtml_parser_stream@plt>
   1e57c:	pop	{r4, r5, r6, pc}

0001e580 <myhtml_insertion_mode_text@@Base>:
   1e580:	push	{r4, lr}
   1e584:	mov	r4, r0
   1e588:	ldr	r3, [r1, #48]	; 0x30
   1e58c:	tst	r3, #1
   1e590:	beq	1e5a8 <myhtml_insertion_mode_text@@Base+0x28>
   1e594:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1e598:	ldr	r3, [r4, #172]	; 0xac
   1e59c:	str	r3, [r4, #168]	; 0xa8
   1e5a0:	mov	r0, #0
   1e5a4:	pop	{r4, pc}
   1e5a8:	ldr	r3, [r1]
   1e5ac:	cmp	r3, #251	; 0xfb
   1e5b0:	beq	1e5c0 <myhtml_insertion_mode_text@@Base+0x40>
   1e5b4:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   1e5b8:	mov	r0, #0
   1e5bc:	pop	{r4, pc}
   1e5c0:	bl	10628 <myhtml_tree_current_node@plt>
   1e5c4:	ldr	r3, [r0, #4]
   1e5c8:	cmp	r3, #112	; 0x70
   1e5cc:	ldreq	r3, [r0]
   1e5d0:	orreq	r3, r3, #8
   1e5d4:	streq	r3, [r0]
   1e5d8:	mov	r0, r4
   1e5dc:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1e5e0:	ldr	r3, [r4, #172]	; 0xac
   1e5e4:	str	r3, [r4, #168]	; 0xa8
   1e5e8:	mov	r0, #1
   1e5ec:	pop	{r4, pc}

0001e5f0 <myhtml_insertion_fix_emit_for_text_begin_ws@@Base>:
   1e5f0:	push	{r4, lr}
   1e5f4:	mov	r4, r1
   1e5f8:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1e5fc:	add	r0, r4, #4
   1e600:	bl	104b4 <mycore_string_crop_whitespace_from_begin@plt>
   1e604:	pop	{r4, pc}

0001e608 <myhtml_insertion_mode_initial@@Base>:
   1e608:	push	{r4, r5, r6, lr}
   1e60c:	mov	r4, r0
   1e610:	mov	r5, r1
   1e614:	ldr	r3, [r1]
   1e618:	cmp	r3, #2
   1e61c:	beq	1e66c <myhtml_insertion_mode_initial@@Base+0x64>
   1e620:	cmp	r3, #3
   1e624:	beq	1e67c <myhtml_insertion_mode_initial@@Base+0x74>
   1e628:	cmp	r3, #1
   1e62c:	beq	1e640 <myhtml_insertion_mode_initial@@Base+0x38>
   1e630:	mov	r0, #1
   1e634:	str	r0, [r4, #176]	; 0xb0
   1e638:	str	r0, [r4, #168]	; 0xa8
   1e63c:	pop	{r4, r5, r6, pc}
   1e640:	ldr	r3, [r1, #48]	; 0x30
   1e644:	tst	r3, #8
   1e648:	beq	1e654 <myhtml_insertion_mode_initial@@Base+0x4c>
   1e64c:	mov	r0, #0
   1e650:	pop	{r4, r5, r6, pc}
   1e654:	ldr	r0, [r0, #8]
   1e658:	bl	10118 <myhtml_insertion_fix_emit_for_text_begin_ws@plt>
   1e65c:	mov	r0, #1
   1e660:	str	r0, [r4, #176]	; 0xb0
   1e664:	str	r0, [r4, #168]	; 0xa8
   1e668:	pop	{r4, r5, r6, pc}
   1e66c:	ldr	r2, [r0, #84]	; 0x54
   1e670:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   1e674:	mov	r0, #0
   1e678:	pop	{r4, r5, r6, pc}
   1e67c:	ldr	r0, [r0, #8]
   1e680:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1e684:	add	r2, r4, #108	; 0x6c
   1e688:	mov	r1, r5
   1e68c:	ldr	r0, [r4, #8]
   1e690:	bl	fc20 <myhtml_token_release_and_check_doctype_attributes@plt>
   1e694:	ldr	r3, [r4, #184]	; 0xb8
   1e698:	tst	r3, #8
   1e69c:	beq	1e6d4 <myhtml_insertion_mode_initial@@Base+0xcc>
   1e6a0:	ldrb	r3, [r4, #108]	; 0x6c
   1e6a4:	cmp	r3, #0
   1e6a8:	bne	1e6c4 <myhtml_insertion_mode_initial@@Base+0xbc>
   1e6ac:	ldr	r3, [r4, #116]	; 0x74
   1e6b0:	cmp	r3, #0
   1e6b4:	beq	1e6e4 <myhtml_insertion_mode_initial@@Base+0xdc>
   1e6b8:	ldr	r3, [r4, #120]	; 0x78
   1e6bc:	cmp	r3, #0
   1e6c0:	beq	1e6e4 <myhtml_insertion_mode_initial@@Base+0xdc>
   1e6c4:	mov	r3, #1
   1e6c8:	str	r3, [r4, #168]	; 0xa8
   1e6cc:	mov	r0, #0
   1e6d0:	pop	{r4, r5, r6, pc}
   1e6d4:	mov	r1, r5
   1e6d8:	mov	r0, r4
   1e6dc:	bl	10e2c <myhtml_tree_node_insert_doctype@plt>
   1e6e0:	b	1e6a0 <myhtml_insertion_mode_initial@@Base+0x98>
   1e6e4:	mov	r3, #1
   1e6e8:	str	r3, [r4, #176]	; 0xb0
   1e6ec:	b	1e6c4 <myhtml_insertion_mode_initial@@Base+0xbc>

0001e6f0 <myhtml_insertion_mode_before_html@@Base>:
   1e6f0:	push	{r4, lr}
   1e6f4:	mov	r4, r0
   1e6f8:	ldr	r3, [r1, #48]	; 0x30
   1e6fc:	tst	r3, #1
   1e700:	beq	1e750 <myhtml_insertion_mode_before_html@@Base+0x60>
   1e704:	ldr	r3, [r1]
   1e708:	cmp	r3, #61	; 0x3d
   1e70c:	beq	1e730 <myhtml_insertion_mode_before_html@@Base+0x40>
   1e710:	bhi	1e728 <myhtml_insertion_mode_before_html@@Base+0x38>
   1e714:	sub	r3, r3, #23
   1e718:	cmp	r3, #1
   1e71c:	bls	1e730 <myhtml_insertion_mode_before_html@@Base+0x40>
   1e720:	mov	r0, #0
   1e724:	pop	{r4, pc}
   1e728:	cmp	r3, #65	; 0x41
   1e72c:	bne	1e720 <myhtml_insertion_mode_before_html@@Base+0x30>
   1e730:	mov	r2, #1
   1e734:	mov	r1, #0
   1e738:	mov	r0, r4
   1e73c:	bl	fbfc <myhtml_tree_node_insert_root@plt>
   1e740:	mov	r3, #2
   1e744:	str	r3, [r4, #168]	; 0xa8
   1e748:	mov	r0, #1
   1e74c:	pop	{r4, pc}
   1e750:	ldr	r3, [r1]
   1e754:	cmp	r3, #2
   1e758:	beq	1e7a4 <myhtml_insertion_mode_before_html@@Base+0xb4>
   1e75c:	bls	1e788 <myhtml_insertion_mode_before_html@@Base+0x98>
   1e760:	cmp	r3, #3
   1e764:	beq	1e7fc <myhtml_insertion_mode_before_html@@Base+0x10c>
   1e768:	cmp	r3, #65	; 0x41
   1e76c:	bne	1e7dc <myhtml_insertion_mode_before_html@@Base+0xec>
   1e770:	mov	r2, #1
   1e774:	bl	fbfc <myhtml_tree_node_insert_root@plt>
   1e778:	mov	r3, #2
   1e77c:	str	r3, [r4, #168]	; 0xa8
   1e780:	mov	r0, #0
   1e784:	pop	{r4, pc}
   1e788:	cmp	r3, #1
   1e78c:	bne	1e7dc <myhtml_insertion_mode_before_html@@Base+0xec>
   1e790:	ldr	r3, [r1, #48]	; 0x30
   1e794:	tst	r3, #8
   1e798:	beq	1e7b4 <myhtml_insertion_mode_before_html@@Base+0xc4>
   1e79c:	mov	r0, #0
   1e7a0:	pop	{r4, pc}
   1e7a4:	ldr	r2, [r0, #84]	; 0x54
   1e7a8:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   1e7ac:	mov	r0, #0
   1e7b0:	pop	{r4, pc}
   1e7b4:	ldr	r0, [r0, #8]
   1e7b8:	bl	10118 <myhtml_insertion_fix_emit_for_text_begin_ws@plt>
   1e7bc:	mov	r2, #1
   1e7c0:	mov	r1, #0
   1e7c4:	mov	r0, r4
   1e7c8:	bl	fbfc <myhtml_tree_node_insert_root@plt>
   1e7cc:	mov	r3, #2
   1e7d0:	str	r3, [r4, #168]	; 0xa8
   1e7d4:	mov	r0, #1
   1e7d8:	pop	{r4, pc}
   1e7dc:	mov	r2, #1
   1e7e0:	mov	r1, #0
   1e7e4:	mov	r0, r4
   1e7e8:	bl	fbfc <myhtml_tree_node_insert_root@plt>
   1e7ec:	mov	r3, #2
   1e7f0:	str	r3, [r4, #168]	; 0xa8
   1e7f4:	mov	r0, #1
   1e7f8:	pop	{r4, pc}
   1e7fc:	mov	r0, #0
   1e800:	pop	{r4, pc}

0001e804 <myhtml_insertion_fix_split_for_text_begin_ws@@Base>:
   1e804:	push	{r4, r5, r6, r7, r8, lr}
   1e808:	mov	r5, r0
   1e80c:	mov	r4, r1
   1e810:	ldr	r0, [r0, #8]
   1e814:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1e818:	add	r0, r4, #4
   1e81c:	bl	10de4 <mycore_string_whitespace_from_begin@plt>
   1e820:	subs	r7, r0, #0
   1e824:	moveq	r6, #0
   1e828:	beq	1e890 <myhtml_insertion_fix_split_for_text_begin_ws@@Base+0x8c>
   1e82c:	ldr	r1, [r5, #40]	; 0x28
   1e830:	ldr	r0, [r5, #8]
   1e834:	bl	10a0c <myhtml_token_node_create@plt>
   1e838:	subs	r6, r0, #0
   1e83c:	beq	1e890 <myhtml_insertion_fix_split_for_text_begin_ws@@Base+0x8c>
   1e840:	add	r8, r6, #4
   1e844:	add	r3, r7, #2
   1e848:	mov	r2, r8
   1e84c:	ldr	r1, [r5, #52]	; 0x34
   1e850:	ldr	r0, [r5, #4]
   1e854:	bl	10610 <mycore_string_init@plt>
   1e858:	mov	r2, r7
   1e85c:	ldr	r1, [r4, #4]
   1e860:	mov	r0, r8
   1e864:	bl	108d4 <mycore_string_append@plt>
   1e868:	ldr	r3, [r6, #48]	; 0x30
   1e86c:	orr	r3, r3, #4
   1e870:	str	r3, [r6, #48]	; 0x30
   1e874:	mov	r1, r7
   1e878:	ldr	r0, [r4, #4]
   1e87c:	bl	10c64 <mchar_async_crop_first_chars_without_cache@plt>
   1e880:	str	r0, [r4, #4]
   1e884:	ldr	r3, [r4, #12]
   1e888:	sub	r7, r3, r7
   1e88c:	str	r7, [r4, #12]
   1e890:	mov	r0, r6
   1e894:	pop	{r4, r5, r6, r7, r8, pc}

0001e898 <myhtml_insertion_fix_for_null_char_drop_all@@Base>:
   1e898:	push	{r4, r5, r6, r7, r8, lr}
   1e89c:	mov	r6, r1
   1e8a0:	ldr	r0, [r0, #8]
   1e8a4:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1e8a8:	ldr	r5, [r6, #12]
   1e8ac:	cmp	r5, #0
   1e8b0:	popeq	{r4, r5, r6, r7, r8, pc}
   1e8b4:	mov	r0, #0
   1e8b8:	mov	r7, r0
   1e8bc:	b	1e90c <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x74>
   1e8c0:	mov	r4, r1
   1e8c4:	b	1e8e4 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x4c>
   1e8c8:	pop	{r4, r5, r6, r7, r8, pc}
   1e8cc:	mov	r1, r0
   1e8d0:	ldr	r3, [r6, #12]
   1e8d4:	add	r3, r0, r3
   1e8d8:	sub	r3, r3, r1
   1e8dc:	str	r3, [r6, #12]
   1e8e0:	mov	r4, r1
   1e8e4:	sub	r0, r0, r7
   1e8e8:	sub	r2, r4, r1
   1e8ec:	add	r1, ip, r1
   1e8f0:	add	r0, ip, r0
   1e8f4:	bl	fe78 <memmove@plt>
   1e8f8:	sub	r0, r4, #1
   1e8fc:	add	r7, r7, #1
   1e900:	add	r0, r0, #1
   1e904:	cmp	r5, r0
   1e908:	bls	1e8c8 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x30>
   1e90c:	ldr	ip, [r6, #4]
   1e910:	add	r3, ip, r0
   1e914:	ldrb	r2, [ip, r0]
   1e918:	cmp	r2, #0
   1e91c:	bne	1e900 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x68>
   1e920:	cmp	r5, r0
   1e924:	bls	1e8cc <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x34>
   1e928:	mov	r1, r0
   1e92c:	add	r1, r1, #1
   1e930:	cmp	r5, r1
   1e934:	beq	1e8d0 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x38>
   1e938:	ldrb	r2, [r3, #1]!
   1e93c:	cmp	r2, #0
   1e940:	beq	1e92c <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x94>
   1e944:	ldr	r3, [r6, #12]
   1e948:	add	r3, r0, r3
   1e94c:	sub	r3, r3, r1
   1e950:	str	r3, [r6, #12]
   1e954:	add	r3, ip, r1
   1e958:	ldrb	r2, [ip, r1]
   1e95c:	cmp	r2, #0
   1e960:	beq	1e8c0 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x28>
   1e964:	mov	r4, r1
   1e968:	add	r4, r4, #1
   1e96c:	cmp	r5, r4
   1e970:	bls	1e8e4 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x4c>
   1e974:	ldrb	r2, [r3, #1]!
   1e978:	cmp	r2, #0
   1e97c:	bne	1e968 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0xd0>
   1e980:	b	1e8e4 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x4c>

0001e984 <myhtml_insertion_mode_in_body_other_end_tag@@Base>:
   1e984:	push	{r4, r5, r6, r7, r8, lr}
   1e988:	ldr	r3, [r0, #128]	; 0x80
   1e98c:	ldr	r5, [r3, #4]
   1e990:	cmp	r5, #0
   1e994:	beq	1ea24 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0xa0>
   1e998:	mov	r8, r1
   1e99c:	mov	r7, r0
   1e9a0:	sub	r6, r5, #-1073741823	; 0xc0000001
   1e9a4:	lsl	r6, r6, #2
   1e9a8:	b	1e9d4 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x50>
   1e9ac:	ldr	r0, [r7, #28]
   1e9b0:	bl	10a24 <myhtml_tag_get_by_id@plt>
   1e9b4:	ldr	r3, [r4, #8]
   1e9b8:	add	r3, r3, #4
   1e9bc:	ldr	r3, [r0, r3, lsl #2]
   1e9c0:	tst	r3, #2
   1e9c4:	bne	1ea24 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0xa0>
   1e9c8:	sub	r6, r6, #4
   1e9cc:	cmp	r5, #0
   1e9d0:	beq	1ea24 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0xa0>
   1e9d4:	sub	r5, r5, #1
   1e9d8:	ldr	r3, [r7, #128]	; 0x80
   1e9dc:	ldr	r3, [r3]
   1e9e0:	ldr	r4, [r3, r6]
   1e9e4:	ldr	r1, [r4, #4]
   1e9e8:	ldr	r3, [r8]
   1e9ec:	cmp	r1, r3
   1e9f0:	bne	1e9ac <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x28>
   1e9f4:	ldr	r3, [r4, #8]
   1e9f8:	cmp	r3, #1
   1e9fc:	bne	1e9ac <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x28>
   1ea00:	mov	r2, #1
   1ea04:	mov	r0, r7
   1ea08:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1ea0c:	mov	r0, r7
   1ea10:	bl	10628 <myhtml_tree_current_node@plt>
   1ea14:	mov	r2, #0
   1ea18:	mov	r1, r4
   1ea1c:	mov	r0, r7
   1ea20:	bl	1013c <myhtml_tree_open_elements_pop_until_by_node@plt>
   1ea24:	mov	r0, #0
   1ea28:	pop	{r4, r5, r6, r7, r8, pc}

0001ea2c <myhtml_insertion_mode_in_foreign_content_end_other@@Base>:
   1ea2c:	push	{r4, r5, r6, lr}
   1ea30:	ldr	ip, [r0, #128]	; 0x80
   1ea34:	ldr	r3, [ip, #4]
   1ea38:	cmp	r3, #0
   1ea3c:	beq	1eab4 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x88>
   1ea40:	ldr	r3, [ip]
   1ea44:	ldr	r4, [ip, #4]
   1ea48:	subs	r1, r4, #1
   1ea4c:	beq	1eab4 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x88>
   1ea50:	ldr	r5, [r2]
   1ea54:	lsl	r6, r1, #2
   1ea58:	ldr	r1, [r3, r1, lsl #2]
   1ea5c:	ldr	ip, [r1, #4]
   1ea60:	cmp	r5, ip
   1ea64:	beq	1ead0 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0xa4>
   1ea68:	sub	ip, r4, #2
   1ea6c:	add	r6, r3, r6
   1ea70:	ldr	r1, [r6, #-4]
   1ea74:	ldr	r1, [r1, #8]
   1ea78:	cmp	r1, #1
   1ea7c:	beq	1eab4 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x88>
   1ea80:	sub	r4, r4, #-1073741822	; 0xc0000002
   1ea84:	add	r3, r3, r4, lsl #2
   1ea88:	cmp	ip, #0
   1ea8c:	beq	1eab4 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x88>
   1ea90:	ldr	r1, [r3]
   1ea94:	ldr	r4, [r1, #4]
   1ea98:	cmp	r5, r4
   1ea9c:	beq	1ead0 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0xa4>
   1eaa0:	sub	ip, ip, #1
   1eaa4:	ldr	lr, [r3, #-4]!
   1eaa8:	ldr	lr, [lr, #8]
   1eaac:	cmp	lr, #1
   1eab0:	bne	1ea88 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x5c>
   1eab4:	ldr	r3, [r0]
   1eab8:	ldr	r1, [r0, #168]	; 0xa8
   1eabc:	ldr	r3, [r3, #28]
   1eac0:	ldr	r3, [r3, r1, lsl #2]
   1eac4:	mov	r1, r2
   1eac8:	blx	r3
   1eacc:	pop	{r4, r5, r6, pc}
   1ead0:	mov	r2, #0
   1ead4:	bl	1013c <myhtml_tree_open_elements_pop_until_by_node@plt>
   1ead8:	mov	r0, #0
   1eadc:	pop	{r4, r5, r6, pc}

0001eae0 <myhtml_insertion_mode_in_foreign_content_start_other@@Base>:
   1eae0:	push	{r4, r5, r6, lr}
   1eae4:	mov	r6, r0
   1eae8:	mov	r4, r1
   1eaec:	bl	10d48 <myhtml_tree_adjusted_current_node@plt>
   1eaf0:	mov	r5, r0
   1eaf4:	mov	r1, r4
   1eaf8:	ldr	r0, [r6, #8]
   1eafc:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1eb00:	ldr	r3, [r5, #8]
   1eb04:	cmp	r3, #2
   1eb08:	beq	1eb68 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x88>
   1eb0c:	cmp	r3, #3
   1eb10:	beq	1eb74 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x94>
   1eb14:	mov	r0, r4
   1eb18:	bl	10be0 <myhtml_token_adjust_foreign_attributes@plt>
   1eb1c:	mov	r1, r4
   1eb20:	mov	r0, r6
   1eb24:	bl	10d84 <myhtml_tree_node_insert_foreign_element@plt>
   1eb28:	ldr	r3, [r5, #8]
   1eb2c:	str	r3, [r0, #8]
   1eb30:	ldr	r2, [r4, #48]	; 0x30
   1eb34:	tst	r2, #2
   1eb38:	moveq	r5, #0
   1eb3c:	beq	1eb60 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x80>
   1eb40:	ldr	r5, [r4]
   1eb44:	cmp	r5, #112	; 0x70
   1eb48:	cmpeq	r3, #3
   1eb4c:	moveq	r5, #1
   1eb50:	movne	r5, #0
   1eb54:	beq	1eb80 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0xa0>
   1eb58:	mov	r0, r6
   1eb5c:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1eb60:	mov	r0, r5
   1eb64:	pop	{r4, r5, r6, pc}
   1eb68:	mov	r0, r4
   1eb6c:	bl	ff74 <myhtml_token_adjust_mathml_attributes@plt>
   1eb70:	b	1eb14 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x34>
   1eb74:	mov	r0, r4
   1eb78:	bl	101d8 <myhtml_token_adjust_svg_attributes@plt>
   1eb7c:	b	1eb14 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x34>
   1eb80:	mov	r0, r6
   1eb84:	bl	10628 <myhtml_tree_current_node@plt>
   1eb88:	mov	r2, r4
   1eb8c:	mov	r1, r0
   1eb90:	mov	r0, r6
   1eb94:	bl	fcf8 <myhtml_insertion_mode_in_foreign_content_end_other@plt>
   1eb98:	mov	r5, r0
   1eb9c:	b	1eb60 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x80>

0001eba0 <myhtml_insertion_mode_in_foreign_content@@Base>:
   1eba0:	push	{r4, r5, r6, lr}
   1eba4:	mov	r5, r0
   1eba8:	mov	r4, r1
   1ebac:	ldr	r3, [r1, #48]	; 0x30
   1ebb0:	tst	r3, #1
   1ebb4:	bne	1edfc <myhtml_insertion_mode_in_foreign_content@@Base+0x25c>
   1ebb8:	ldr	r2, [r1]
   1ebbc:	sub	r3, r2, #1
   1ebc0:	cmp	r3, #139	; 0x8b
   1ebc4:	addls	pc, pc, r3, lsl #2
   1ebc8:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ebcc:	b	1ee48 <myhtml_insertion_mode_in_foreign_content@@Base+0x2a8>
   1ebd0:	b	1eea0 <myhtml_insertion_mode_in_foreign_content@@Base+0x300>
   1ebd4:	b	1ef94 <myhtml_insertion_mode_in_foreign_content@@Base+0x3f4>
   1ebd8:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ebdc:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ebe0:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ebe4:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ebe8:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ebec:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ebf0:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ebf4:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ebf8:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ebfc:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ec00:	b	1eeb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1ec04:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ec08:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ec0c:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ec10:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ec14:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ec18:	b	1eeb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1ec1c:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ec20:	b	1eeb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1ec24:	b	1eeb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1ec28:	b	1eeb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1ec2c:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ec30:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ec34:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ec38:	b	1eeb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1ec3c:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ec40:	b	1eeb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1ec44:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ec48:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ec4c:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ec50:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ec54:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ec58:	b	1eeb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1ec5c:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ec60:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ec64:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ec68:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ec6c:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ec70:	b	1eeb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1ec74:	b	1eeb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1ec78:	b	1eeb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1ec7c:	b	1eeb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1ec80:	b	1eeb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1ec84:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ec88:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ec8c:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ec90:	b	1eeb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1ec94:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ec98:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ec9c:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1eca0:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1eca4:	b	1eeb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1eca8:	b	1eeb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1ecac:	b	1eeb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1ecb0:	b	1eeb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1ecb4:	b	1eeb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1ecb8:	b	1eeb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1ecbc:	b	1eeb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1ecc0:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ecc4:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ecc8:	b	1eeb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1eccc:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ecd0:	b	1eeb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1ecd4:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ecd8:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ecdc:	b	1eeb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1ece0:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ece4:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ece8:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ecec:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ecf0:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ecf4:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ecf8:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ecfc:	b	1eeb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1ed00:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ed04:	b	1eeb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1ed08:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ed0c:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ed10:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ed14:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ed18:	b	1eeb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1ed1c:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ed20:	b	1eeb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1ed24:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ed28:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ed2c:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ed30:	b	1eeb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1ed34:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ed38:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ed3c:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ed40:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ed44:	b	1eeb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1ed48:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ed4c:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ed50:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ed54:	b	1eeb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1ed58:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ed5c:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ed60:	b	1eeb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1ed64:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ed68:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ed6c:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ed70:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ed74:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ed78:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ed7c:	b	1eeb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1ed80:	b	1eeb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1ed84:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ed88:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ed8c:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ed90:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ed94:	b	1eeb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1ed98:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ed9c:	b	1eeb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1eda0:	b	1eeb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1eda4:	b	1eeb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1eda8:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1edac:	b	1eeb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1edb0:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1edb4:	b	1eeb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1edb8:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1edbc:	b	1eeb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1edc0:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1edc4:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1edc8:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1edcc:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1edd0:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1edd4:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1edd8:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1eddc:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ede0:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ede4:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1ede8:	b	1eec4 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1edec:	b	1eeb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1edf0:	b	1eeb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1edf4:	b	1eeb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1edf8:	b	1eeb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1edfc:	bl	10628 <myhtml_tree_current_node@plt>
   1ee00:	ldr	r3, [r4]
   1ee04:	cmp	r3, #112	; 0x70
   1ee08:	bne	1ee18 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1ee0c:	ldr	r3, [r0, #4]
   1ee10:	cmp	r3, #112	; 0x70
   1ee14:	beq	1ee2c <myhtml_insertion_mode_in_foreign_content@@Base+0x28c>
   1ee18:	mov	r2, r4
   1ee1c:	mov	r1, r0
   1ee20:	mov	r0, r5
   1ee24:	bl	fcf8 <myhtml_insertion_mode_in_foreign_content_end_other@plt>
   1ee28:	pop	{r4, r5, r6, pc}
   1ee2c:	ldr	r3, [r0, #8]
   1ee30:	cmp	r3, #3
   1ee34:	bne	1ee18 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1ee38:	mov	r0, r5
   1ee3c:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1ee40:	mov	r0, #0
   1ee44:	pop	{r4, r5, r6, pc}
   1ee48:	ldr	r3, [r1, #48]	; 0x30
   1ee4c:	tst	r3, #2048	; 0x800
   1ee50:	bne	1ee88 <myhtml_insertion_mode_in_foreign_content@@Base+0x2e8>
   1ee54:	mov	r1, r4
   1ee58:	mov	r0, r5
   1ee5c:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   1ee60:	ldr	r3, [r4, #48]	; 0x30
   1ee64:	tst	r3, #8
   1ee68:	bne	1ef9c <myhtml_insertion_mode_in_foreign_content@@Base+0x3fc>
   1ee6c:	ldr	r3, [r5, #180]	; 0xb4
   1ee70:	ldr	r2, [r5, #180]	; 0xb4
   1ee74:	and	r3, r3, #2
   1ee78:	eor	r3, r3, r2
   1ee7c:	str	r3, [r5, #180]	; 0xb4
   1ee80:	mov	r0, #0
   1ee84:	pop	{r4, r5, r6, pc}
   1ee88:	ldr	r0, [r0, #8]
   1ee8c:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1ee90:	mov	r1, r4
   1ee94:	mov	r0, r5
   1ee98:	bl	10334 <myhtml_token_set_replacement_character_for_null_token@plt>
   1ee9c:	b	1ee54 <myhtml_insertion_mode_in_foreign_content@@Base+0x2b4>
   1eea0:	mov	r2, #0
   1eea4:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   1eea8:	mov	r0, #0
   1eeac:	pop	{r4, r5, r6, pc}
   1eeb0:	cmp	r2, #50	; 0x32
   1eeb4:	beq	1eed4 <myhtml_insertion_mode_in_foreign_content@@Base+0x334>
   1eeb8:	ldr	r3, [r5, #88]	; 0x58
   1eebc:	cmp	r3, #0
   1eec0:	beq	1ef40 <myhtml_insertion_mode_in_foreign_content@@Base+0x3a0>
   1eec4:	mov	r1, r4
   1eec8:	mov	r0, r5
   1eecc:	bl	fe90 <myhtml_insertion_mode_in_foreign_content_start_other@plt>
   1eed0:	pop	{r4, r5, r6, pc}
   1eed4:	ldr	r0, [r0, #8]
   1eed8:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1eedc:	mov	r2, #5
   1eee0:	ldr	r1, [pc, #196]	; 1efac <myhtml_insertion_mode_in_foreign_content@@Base+0x40c>
   1eee4:	add	r1, pc, r1
   1eee8:	mov	r0, r4
   1eeec:	bl	10eb0 <myhtml_token_attr_by_name@plt>
   1eef0:	cmp	r0, #0
   1eef4:	bne	1eeb8 <myhtml_insertion_mode_in_foreign_content@@Base+0x318>
   1eef8:	mov	r2, #4
   1eefc:	ldr	r1, [pc, #172]	; 1efb0 <myhtml_insertion_mode_in_foreign_content@@Base+0x410>
   1ef00:	add	r1, pc, r1
   1ef04:	mov	r0, r4
   1ef08:	bl	10eb0 <myhtml_token_attr_by_name@plt>
   1ef0c:	cmp	r0, #0
   1ef10:	bne	1eeb8 <myhtml_insertion_mode_in_foreign_content@@Base+0x318>
   1ef14:	mov	r2, #4
   1ef18:	ldr	r1, [pc, #148]	; 1efb4 <myhtml_insertion_mode_in_foreign_content@@Base+0x414>
   1ef1c:	add	r1, pc, r1
   1ef20:	mov	r0, r4
   1ef24:	bl	10eb0 <myhtml_token_attr_by_name@plt>
   1ef28:	cmp	r0, #0
   1ef2c:	bne	1eeb8 <myhtml_insertion_mode_in_foreign_content@@Base+0x318>
   1ef30:	mov	r1, r4
   1ef34:	mov	r0, r5
   1ef38:	bl	fe90 <myhtml_insertion_mode_in_foreign_content_start_other@plt>
   1ef3c:	pop	{r4, r5, r6, pc}
   1ef40:	mov	r0, r5
   1ef44:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1ef48:	mov	r0, r5
   1ef4c:	bl	10628 <myhtml_tree_current_node@plt>
   1ef50:	subs	r4, r0, #0
   1ef54:	beq	1efa4 <myhtml_insertion_mode_in_foreign_content@@Base+0x404>
   1ef58:	mov	r1, r4
   1ef5c:	mov	r0, r5
   1ef60:	bl	10040 <myhtml_tree_is_mathml_integration_point@plt>
   1ef64:	cmp	r0, #0
   1ef68:	popne	{r4, r5, r6, pc}
   1ef6c:	mov	r1, r4
   1ef70:	mov	r0, r5
   1ef74:	bl	101fc <myhtml_tree_is_html_integration_point@plt>
   1ef78:	cmp	r0, #0
   1ef7c:	popne	{r4, r5, r6, pc}
   1ef80:	ldr	r3, [r4, #8]
   1ef84:	cmp	r3, #1
   1ef88:	bne	1ef40 <myhtml_insertion_mode_in_foreign_content@@Base+0x3a0>
   1ef8c:	mov	r0, #1
   1ef90:	pop	{r4, r5, r6, pc}
   1ef94:	mov	r0, #0
   1ef98:	pop	{r4, r5, r6, pc}
   1ef9c:	mov	r0, #0
   1efa0:	pop	{r4, r5, r6, pc}
   1efa4:	mov	r0, #1
   1efa8:	pop	{r4, r5, r6, pc}
   1efac:	andeq	lr, sp, r4, asr #13
   1efb0:			; <UNDEFINED> instruction: 0x000de6b0
   1efb4:	muleq	sp, ip, r6

0001efb8 <myhtml_rules_stop_parsing@@Base>:
   1efb8:	bx	lr

0001efbc <myhtml_insertion_mode_in_body@@Base>:
   1efbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1efc0:	sub	sp, sp, #12
   1efc4:	mov	r4, r0
   1efc8:	mov	r5, r1
   1efcc:	ldr	r3, [r1, #48]	; 0x30
   1efd0:	tst	r3, #1
   1efd4:	beq	1f6f8 <myhtml_insertion_mode_in_body@@Base+0x73c>
   1efd8:	ldr	r1, [r1]
   1efdc:	sub	r3, r1, #4
   1efe0:	cmp	r3, #135	; 0x87
   1efe4:	addls	pc, pc, r3, lsl #2
   1efe8:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1efec:	b	1f61c <myhtml_insertion_mode_in_body@@Base+0x660>
   1eff0:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1eff4:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1eff8:	b	1f2bc <myhtml_insertion_mode_in_body@@Base+0x300>
   1effc:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f000:	b	1f630 <myhtml_insertion_mode_in_body@@Base+0x674>
   1f004:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f008:	b	1f2bc <myhtml_insertion_mode_in_body@@Base+0x300>
   1f00c:	b	1f2bc <myhtml_insertion_mode_in_body@@Base+0x300>
   1f010:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f014:	b	1f61c <myhtml_insertion_mode_in_body@@Base+0x660>
   1f018:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f01c:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f020:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f024:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f028:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f02c:	b	1f61c <myhtml_insertion_mode_in_body@@Base+0x660>
   1f030:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f034:	b	1f2bc <myhtml_insertion_mode_in_body@@Base+0x300>
   1f038:	b	1f224 <myhtml_insertion_mode_in_body@@Base+0x268>
   1f03c:	b	1f68c <myhtml_insertion_mode_in_body@@Base+0x6d0>
   1f040:	b	1f2bc <myhtml_insertion_mode_in_body@@Base+0x300>
   1f044:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f048:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f04c:	b	1f2bc <myhtml_insertion_mode_in_body@@Base+0x300>
   1f050:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f054:	b	1f61c <myhtml_insertion_mode_in_body@@Base+0x660>
   1f058:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f05c:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f060:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f064:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f068:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f06c:	b	1f474 <myhtml_insertion_mode_in_body@@Base+0x4b8>
   1f070:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f074:	b	1f2bc <myhtml_insertion_mode_in_body@@Base+0x300>
   1f078:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f07c:	b	1f2bc <myhtml_insertion_mode_in_body@@Base+0x300>
   1f080:	b	1f2bc <myhtml_insertion_mode_in_body@@Base+0x300>
   1f084:	b	1f2bc <myhtml_insertion_mode_in_body@@Base+0x300>
   1f088:	b	1f2bc <myhtml_insertion_mode_in_body@@Base+0x300>
   1f08c:	b	1f474 <myhtml_insertion_mode_in_body@@Base+0x4b8>
   1f090:	b	1f61c <myhtml_insertion_mode_in_body@@Base+0x660>
   1f094:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f098:	b	1f2bc <myhtml_insertion_mode_in_body@@Base+0x300>
   1f09c:	b	1f2bc <myhtml_insertion_mode_in_body@@Base+0x300>
   1f0a0:	b	1f2bc <myhtml_insertion_mode_in_body@@Base+0x300>
   1f0a4:	b	1f61c <myhtml_insertion_mode_in_body@@Base+0x660>
   1f0a8:	b	1f2bc <myhtml_insertion_mode_in_body@@Base+0x300>
   1f0ac:	b	1f310 <myhtml_insertion_mode_in_body@@Base+0x354>
   1f0b0:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f0b4:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f0b8:	b	1f4c8 <myhtml_insertion_mode_in_body@@Base+0x50c>
   1f0bc:	b	1f4c8 <myhtml_insertion_mode_in_body@@Base+0x50c>
   1f0c0:	b	1f4c8 <myhtml_insertion_mode_in_body@@Base+0x50c>
   1f0c4:	b	1f4c8 <myhtml_insertion_mode_in_body@@Base+0x50c>
   1f0c8:	b	1f4c8 <myhtml_insertion_mode_in_body@@Base+0x50c>
   1f0cc:	b	1f4c8 <myhtml_insertion_mode_in_body@@Base+0x50c>
   1f0d0:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f0d4:	b	1f2bc <myhtml_insertion_mode_in_body@@Base+0x300>
   1f0d8:	b	1f2bc <myhtml_insertion_mode_in_body@@Base+0x300>
   1f0dc:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f0e0:	b	1f270 <myhtml_insertion_mode_in_body@@Base+0x2b4>
   1f0e4:	b	1f61c <myhtml_insertion_mode_in_body@@Base+0x660>
   1f0e8:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f0ec:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f0f0:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f0f4:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f0f8:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f0fc:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f100:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f104:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f108:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f10c:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f110:	b	1f41c <myhtml_insertion_mode_in_body@@Base+0x460>
   1f114:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f118:	b	1f2bc <myhtml_insertion_mode_in_body@@Base+0x300>
   1f11c:	b	1f2bc <myhtml_insertion_mode_in_body@@Base+0x300>
   1f120:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f124:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f128:	b	1f630 <myhtml_insertion_mode_in_body@@Base+0x674>
   1f12c:	b	1f2bc <myhtml_insertion_mode_in_body@@Base+0x300>
   1f130:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f134:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f138:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f13c:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f140:	b	1f2bc <myhtml_insertion_mode_in_body@@Base+0x300>
   1f144:	b	1f61c <myhtml_insertion_mode_in_body@@Base+0x660>
   1f148:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f14c:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f150:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f154:	b	1f630 <myhtml_insertion_mode_in_body@@Base+0x674>
   1f158:	b	1f2bc <myhtml_insertion_mode_in_body@@Base+0x300>
   1f15c:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f160:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f164:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f168:	b	1f3dc <myhtml_insertion_mode_in_body@@Base+0x420>
   1f16c:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f170:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f174:	b	1f2bc <myhtml_insertion_mode_in_body@@Base+0x300>
   1f178:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f17c:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f180:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f184:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f188:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f18c:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f190:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f194:	b	1f61c <myhtml_insertion_mode_in_body@@Base+0x660>
   1f198:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f19c:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f1a0:	b	1f2bc <myhtml_insertion_mode_in_body@@Base+0x300>
   1f1a4:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f1a8:	b	1f61c <myhtml_insertion_mode_in_body@@Base+0x660>
   1f1ac:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f1b0:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f1b4:	b	1f61c <myhtml_insertion_mode_in_body@@Base+0x660>
   1f1b8:	b	1f61c <myhtml_insertion_mode_in_body@@Base+0x660>
   1f1bc:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f1c0:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f1c4:	b	1f2bc <myhtml_insertion_mode_in_body@@Base+0x300>
   1f1c8:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f1cc:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f1d0:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f1d4:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f1d8:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f1dc:	b	1f20c <myhtml_insertion_mode_in_body@@Base+0x250>
   1f1e0:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f1e4:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f1e8:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f1ec:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f1f0:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f1f4:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f1f8:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f1fc:	b	1f6e8 <myhtml_insertion_mode_in_body@@Base+0x72c>
   1f200:	b	1f61c <myhtml_insertion_mode_in_body@@Base+0x660>
   1f204:	b	1f61c <myhtml_insertion_mode_in_body@@Base+0x660>
   1f208:	b	1f2bc <myhtml_insertion_mode_in_body@@Base+0x300>
   1f20c:	mov	r1, r5
   1f210:	bl	10058 <myhtml_insertion_mode_in_head@plt>
   1f214:	mov	r8, r0
   1f218:	mov	r0, r8
   1f21c:	add	sp, sp, #12
   1f220:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f224:	mov	r3, #8
   1f228:	mov	r2, #1
   1f22c:	mov	r1, #23
   1f230:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1f234:	cmp	r0, #0
   1f238:	beq	208f8 <myhtml_insertion_mode_in_body@@Base+0x193c>
   1f23c:	ldr	r1, [r4, #128]	; 0x80
   1f240:	ldr	r3, [r1, #4]
   1f244:	cmp	r3, #0
   1f248:	beq	1f260 <myhtml_insertion_mode_in_body@@Base+0x2a4>
   1f24c:	mov	r3, #0
   1f250:	add	r3, r3, #1
   1f254:	ldr	r2, [r1, #4]
   1f258:	cmp	r2, r3
   1f25c:	bhi	1f250 <myhtml_insertion_mode_in_body@@Base+0x294>
   1f260:	mov	r3, #18
   1f264:	str	r3, [r4, #168]	; 0xa8
   1f268:	mov	r8, #0
   1f26c:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1f270:	mov	r3, #8
   1f274:	mov	r2, #1
   1f278:	mov	r1, #23
   1f27c:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1f280:	cmp	r0, #0
   1f284:	beq	20900 <myhtml_insertion_mode_in_body@@Base+0x1944>
   1f288:	ldr	r1, [r4, #128]	; 0x80
   1f28c:	ldr	r3, [r1, #4]
   1f290:	cmp	r3, #0
   1f294:	beq	1f2ac <myhtml_insertion_mode_in_body@@Base+0x2f0>
   1f298:	mov	r3, #0
   1f29c:	add	r3, r3, #1
   1f2a0:	ldr	r2, [r1, #4]
   1f2a4:	cmp	r2, r3
   1f2a8:	bhi	1f29c <myhtml_insertion_mode_in_body@@Base+0x2e0>
   1f2ac:	mov	r3, #18
   1f2b0:	str	r3, [r4, #168]	; 0xa8
   1f2b4:	mov	r8, #1
   1f2b8:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1f2bc:	mov	r3, #8
   1f2c0:	mov	r2, #1
   1f2c4:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1f2c8:	cmp	r0, #0
   1f2cc:	moveq	r8, #0
   1f2d0:	beq	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1f2d4:	mov	r2, #0
   1f2d8:	mov	r1, r2
   1f2dc:	mov	r0, r4
   1f2e0:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1f2e4:	mov	r0, r4
   1f2e8:	bl	10628 <myhtml_tree_current_node@plt>
   1f2ec:	ldr	r1, [r5]
   1f2f0:	bl	10aa8 <myhtml_is_html_node@plt>
   1f2f4:	mov	r3, #0
   1f2f8:	mov	r2, #1
   1f2fc:	ldr	r1, [r5]
   1f300:	mov	r0, r4
   1f304:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   1f308:	mov	r8, #0
   1f30c:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1f310:	mov	r3, #0
   1f314:	mov	r2, #1
   1f318:	mov	r1, #128	; 0x80
   1f31c:	bl	107fc <myhtml_tree_open_elements_find_by_tag_idx@plt>
   1f320:	cmp	r0, #0
   1f324:	beq	1f384 <myhtml_insertion_mode_in_body@@Base+0x3c8>
   1f328:	mov	r3, #8
   1f32c:	mov	r2, #1
   1f330:	mov	r1, #52	; 0x34
   1f334:	mov	r0, r4
   1f338:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1f33c:	cmp	r0, #0
   1f340:	moveq	r8, #0
   1f344:	beq	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1f348:	mov	r2, #0
   1f34c:	mov	r1, r2
   1f350:	mov	r0, r4
   1f354:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1f358:	mov	r0, r4
   1f35c:	bl	10628 <myhtml_tree_current_node@plt>
   1f360:	mov	r1, #52	; 0x34
   1f364:	bl	10aa8 <myhtml_is_html_node@plt>
   1f368:	mov	r3, #0
   1f36c:	mov	r2, #1
   1f370:	mov	r1, #52	; 0x34
   1f374:	mov	r0, r4
   1f378:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   1f37c:	mov	r8, #0
   1f380:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1f384:	ldr	r5, [r4, #104]	; 0x68
   1f388:	mov	r3, #0
   1f38c:	str	r3, [r4, #104]	; 0x68
   1f390:	cmp	r5, r3
   1f394:	moveq	r8, #0
   1f398:	beq	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1f39c:	mov	r1, #8
   1f3a0:	mov	r0, r5
   1f3a4:	bl	fc50 <myhtml_tree_element_in_scope_by_node@plt>
   1f3a8:	subs	r8, r0, #0
   1f3ac:	beq	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1f3b0:	mov	r2, #0
   1f3b4:	mov	r1, r2
   1f3b8:	mov	r0, r4
   1f3bc:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1f3c0:	mov	r0, r4
   1f3c4:	bl	10628 <myhtml_tree_current_node@plt>
   1f3c8:	mov	r1, r5
   1f3cc:	mov	r0, r4
   1f3d0:	bl	10238 <myhtml_tree_open_elements_remove@plt>
   1f3d4:	mov	r8, #0
   1f3d8:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1f3dc:	mov	r3, #32
   1f3e0:	mov	r2, #1
   1f3e4:	mov	r1, #99	; 0x63
   1f3e8:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1f3ec:	cmp	r0, #0
   1f3f0:	beq	1f408 <myhtml_insertion_mode_in_body@@Base+0x44c>
   1f3f4:	mov	r1, r5
   1f3f8:	mov	r0, r4
   1f3fc:	bl	10448 <myhtml_tree_tags_close_p@plt>
   1f400:	mov	r8, #0
   1f404:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1f408:	mov	r2, #1
   1f40c:	mov	r1, #99	; 0x63
   1f410:	mov	r0, r4
   1f414:	bl	10970 <myhtml_tree_node_insert@plt>
   1f418:	b	1f3f4 <myhtml_insertion_mode_in_body@@Base+0x438>
   1f41c:	mov	r3, #16
   1f420:	mov	r2, #1
   1f424:	mov	r1, #77	; 0x4d
   1f428:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1f42c:	cmp	r0, #0
   1f430:	moveq	r8, #0
   1f434:	beq	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1f438:	mov	r2, #1
   1f43c:	mov	r1, #77	; 0x4d
   1f440:	mov	r0, r4
   1f444:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1f448:	mov	r0, r4
   1f44c:	bl	10628 <myhtml_tree_current_node@plt>
   1f450:	mov	r1, #77	; 0x4d
   1f454:	bl	10aa8 <myhtml_is_html_node@plt>
   1f458:	mov	r3, #0
   1f45c:	mov	r2, #1
   1f460:	mov	r1, #77	; 0x4d
   1f464:	mov	r0, r4
   1f468:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   1f46c:	mov	r8, #0
   1f470:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1f474:	mov	r3, #8
   1f478:	mov	r2, #1
   1f47c:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1f480:	cmp	r0, #0
   1f484:	moveq	r8, #0
   1f488:	beq	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1f48c:	mov	r2, #1
   1f490:	ldr	r1, [r5]
   1f494:	mov	r0, r4
   1f498:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1f49c:	mov	r0, r4
   1f4a0:	bl	10628 <myhtml_tree_current_node@plt>
   1f4a4:	ldr	r1, [r5]
   1f4a8:	bl	10aa8 <myhtml_is_html_node@plt>
   1f4ac:	mov	r3, #0
   1f4b0:	mov	r2, #1
   1f4b4:	ldr	r1, [r5]
   1f4b8:	mov	r0, r4
   1f4bc:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   1f4c0:	mov	r8, #0
   1f4c4:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1f4c8:	ldr	r3, [r0, #128]	; 0x80
   1f4cc:	ldr	r8, [r3]
   1f4d0:	ldr	r6, [r3, #4]
   1f4d4:	cmp	r6, #0
   1f4d8:	beq	20920 <myhtml_insertion_mode_in_body@@Base+0x1964>
   1f4dc:	add	r7, r8, r6, lsl #2
   1f4e0:	b	1f500 <myhtml_insertion_mode_in_body@@Base+0x544>
   1f4e4:	ldr	r3, [r2, #8]
   1f4e8:	add	r3, r3, #4
   1f4ec:	ldr	r3, [r0, r3, lsl #2]
   1f4f0:	tst	r3, #8
   1f4f4:	bne	20920 <myhtml_insertion_mode_in_body@@Base+0x1964>
   1f4f8:	cmp	r6, #0
   1f4fc:	beq	20920 <myhtml_insertion_mode_in_body@@Base+0x1964>
   1f500:	sub	r6, r6, #1
   1f504:	ldr	r3, [r7, #-4]
   1f508:	ldr	r1, [r3, #4]
   1f50c:	ldr	r0, [r4, #28]
   1f510:	bl	10a24 <myhtml_tag_get_by_id@plt>
   1f514:	ldr	r2, [r7, #-4]!
   1f518:	ldr	r3, [r2, #4]
   1f51c:	sub	r3, r3, #55	; 0x37
   1f520:	cmp	r3, #5
   1f524:	bhi	1f4e4 <myhtml_insertion_mode_in_body@@Base+0x528>
   1f528:	ldr	r3, [r2, #8]
   1f52c:	cmp	r3, #1
   1f530:	bne	1f4e4 <myhtml_insertion_mode_in_body@@Base+0x528>
   1f534:	cmp	r2, #0
   1f538:	moveq	r8, #0
   1f53c:	beq	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1f540:	mov	r2, #0
   1f544:	mov	r1, r2
   1f548:	mov	r0, r4
   1f54c:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1f550:	mov	r0, r4
   1f554:	bl	10628 <myhtml_tree_current_node@plt>
   1f558:	ldr	r1, [r5]
   1f55c:	bl	10aa8 <myhtml_is_html_node@plt>
   1f560:	b	1f578 <myhtml_insertion_mode_in_body@@Base+0x5bc>
   1f564:	ldr	r3, [r3, #4]
   1f568:	ldr	r3, [r8, r3, lsl #2]
   1f56c:	ldr	r3, [r3, #8]
   1f570:	cmp	r3, #1
   1f574:	beq	20908 <myhtml_insertion_mode_in_body@@Base+0x194c>
   1f578:	ldr	r3, [r4, #128]	; 0x80
   1f57c:	ldr	r2, [r3, #4]
   1f580:	cmp	r2, #0
   1f584:	beq	1f614 <myhtml_insertion_mode_in_body@@Base+0x658>
   1f588:	ldr	r2, [r3, #4]
   1f58c:	sub	r2, r2, #1
   1f590:	str	r2, [r3, #4]
   1f594:	ldr	r3, [r4, #128]	; 0x80
   1f598:	ldr	r2, [r3, #4]
   1f59c:	ldr	r2, [r8, r2, lsl #2]
   1f5a0:	ldr	r2, [r2, #4]
   1f5a4:	cmp	r2, #55	; 0x37
   1f5a8:	beq	1f564 <myhtml_insertion_mode_in_body@@Base+0x5a8>
   1f5ac:	ldr	r2, [r3, #4]
   1f5b0:	ldr	r2, [r8, r2, lsl #2]
   1f5b4:	ldr	r2, [r2, #4]
   1f5b8:	cmp	r2, #56	; 0x38
   1f5bc:	beq	1f564 <myhtml_insertion_mode_in_body@@Base+0x5a8>
   1f5c0:	ldr	r2, [r3, #4]
   1f5c4:	ldr	r2, [r8, r2, lsl #2]
   1f5c8:	ldr	r2, [r2, #4]
   1f5cc:	cmp	r2, #57	; 0x39
   1f5d0:	beq	1f564 <myhtml_insertion_mode_in_body@@Base+0x5a8>
   1f5d4:	ldr	r2, [r3, #4]
   1f5d8:	ldr	r2, [r8, r2, lsl #2]
   1f5dc:	ldr	r2, [r2, #4]
   1f5e0:	cmp	r2, #58	; 0x3a
   1f5e4:	beq	1f564 <myhtml_insertion_mode_in_body@@Base+0x5a8>
   1f5e8:	ldr	r2, [r3, #4]
   1f5ec:	ldr	r2, [r8, r2, lsl #2]
   1f5f0:	ldr	r2, [r2, #4]
   1f5f4:	cmp	r2, #59	; 0x3b
   1f5f8:	beq	1f564 <myhtml_insertion_mode_in_body@@Base+0x5a8>
   1f5fc:	ldr	r2, [r3, #4]
   1f600:	ldr	r2, [r8, r2, lsl #2]
   1f604:	ldr	r2, [r2, #4]
   1f608:	cmp	r2, #60	; 0x3c
   1f60c:	bne	1f578 <myhtml_insertion_mode_in_body@@Base+0x5bc>
   1f610:	b	1f564 <myhtml_insertion_mode_in_body@@Base+0x5a8>
   1f614:	mov	r8, #0
   1f618:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1f61c:	mov	r2, r1
   1f620:	mov	r1, r5
   1f624:	bl	10898 <myhtml_tree_adoption_agency_algorithm@plt>
   1f628:	mov	r8, #0
   1f62c:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1f630:	mov	r3, #8
   1f634:	mov	r2, #1
   1f638:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1f63c:	cmp	r0, #0
   1f640:	moveq	r8, #0
   1f644:	beq	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1f648:	mov	r2, #0
   1f64c:	mov	r1, r2
   1f650:	mov	r0, r4
   1f654:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1f658:	mov	r0, r4
   1f65c:	bl	10628 <myhtml_tree_current_node@plt>
   1f660:	ldr	r1, [r5]
   1f664:	bl	10aa8 <myhtml_is_html_node@plt>
   1f668:	mov	r3, #0
   1f66c:	mov	r2, #1
   1f670:	ldr	r1, [r5]
   1f674:	mov	r0, r4
   1f678:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   1f67c:	mov	r0, r4
   1f680:	bl	10e5c <myhtml_tree_active_formatting_up_to_last_marker@plt>
   1f684:	mov	r8, #0
   1f688:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1f68c:	ldr	r3, [r5, #40]	; 0x28
   1f690:	cmp	r3, #0
   1f694:	movne	r3, #0
   1f698:	strne	r3, [r5, #40]	; 0x28
   1f69c:	ldr	r3, [r5, #44]	; 0x2c
   1f6a0:	cmp	r3, #0
   1f6a4:	movne	r3, #0
   1f6a8:	strne	r3, [r5, #44]	; 0x2c
   1f6ac:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1f6b0:	mov	r6, #0
   1f6b4:	str	r6, [r5, #48]	; 0x30
   1f6b8:	mov	r1, r5
   1f6bc:	mov	r0, r4
   1f6c0:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1f6c4:	mov	r0, r4
   1f6c8:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1f6cc:	ldr	r3, [r4, #180]	; 0xb4
   1f6d0:	ldr	r2, [r4, #180]	; 0xb4
   1f6d4:	and	r3, r3, #2
   1f6d8:	eor	r3, r3, r2
   1f6dc:	str	r3, [r4, #180]	; 0xb4
   1f6e0:	mov	r8, r6
   1f6e4:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1f6e8:	mov	r1, r5
   1f6ec:	bl	fd1c <myhtml_insertion_mode_in_body_other_end_tag@plt>
   1f6f0:	mov	r8, r0
   1f6f4:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1f6f8:	ldr	r3, [r1]
   1f6fc:	sub	r3, r3, #1
   1f700:	cmp	r3, #250	; 0xfa
   1f704:	addls	pc, pc, r3, lsl #2
   1f708:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f70c:	b	1faf8 <myhtml_insertion_mode_in_body@@Base+0xb3c>
   1f710:	b	1fb94 <myhtml_insertion_mode_in_body@@Base+0xbd8>
   1f714:	b	20910 <myhtml_insertion_mode_in_body@@Base+0x1954>
   1f718:	b	202ec <myhtml_insertion_mode_in_body@@Base+0x1330>
   1f71c:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f720:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f724:	b	1fdd4 <myhtml_insertion_mode_in_body@@Base+0xe18>
   1f728:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f72c:	b	203e4 <myhtml_insertion_mode_in_body@@Base+0x1428>
   1f730:	b	20484 <myhtml_insertion_mode_in_body@@Base+0x14c8>
   1f734:	b	1fdd4 <myhtml_insertion_mode_in_body@@Base+0xe18>
   1f738:	b	1fdd4 <myhtml_insertion_mode_in_body@@Base+0xe18>
   1f73c:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f740:	b	20368 <myhtml_insertion_mode_in_body@@Base+0x13ac>
   1f744:	b	1fc28 <myhtml_insertion_mode_in_body@@Base+0xc6c>
   1f748:	b	1fc28 <myhtml_insertion_mode_in_body@@Base+0xc6c>
   1f74c:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f750:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f754:	b	1fc28 <myhtml_insertion_mode_in_body@@Base+0xc6c>
   1f758:	b	20368 <myhtml_insertion_mode_in_body@@Base+0x13ac>
   1f75c:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f760:	b	1fdd4 <myhtml_insertion_mode_in_body@@Base+0xe18>
   1f764:	b	1fc34 <myhtml_insertion_mode_in_body@@Base+0xc78>
   1f768:	b	20484 <myhtml_insertion_mode_in_body@@Base+0x14c8>
   1f76c:	b	20280 <myhtml_insertion_mode_in_body@@Base+0x12c4>
   1f770:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f774:	b	20910 <myhtml_insertion_mode_in_body@@Base+0x1954>
   1f778:	b	1fdd4 <myhtml_insertion_mode_in_body@@Base+0xe18>
   1f77c:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f780:	b	20368 <myhtml_insertion_mode_in_body@@Base+0x13ac>
   1f784:	b	20910 <myhtml_insertion_mode_in_body@@Base+0x1954>
   1f788:	b	20910 <myhtml_insertion_mode_in_body@@Base+0x1954>
   1f78c:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f790:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f794:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f798:	b	200c4 <myhtml_insertion_mode_in_body@@Base+0x1108>
   1f79c:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f7a0:	b	1fdd4 <myhtml_insertion_mode_in_body@@Base+0xe18>
   1f7a4:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f7a8:	b	1fdd4 <myhtml_insertion_mode_in_body@@Base+0xe18>
   1f7ac:	b	1fdd4 <myhtml_insertion_mode_in_body@@Base+0xe18>
   1f7b0:	b	1fdd4 <myhtml_insertion_mode_in_body@@Base+0xe18>
   1f7b4:	b	1fdd4 <myhtml_insertion_mode_in_body@@Base+0xe18>
   1f7b8:	b	200c4 <myhtml_insertion_mode_in_body@@Base+0x1108>
   1f7bc:	b	20368 <myhtml_insertion_mode_in_body@@Base+0x13ac>
   1f7c0:	b	20484 <myhtml_insertion_mode_in_body@@Base+0x14c8>
   1f7c4:	b	1fdd4 <myhtml_insertion_mode_in_body@@Base+0xe18>
   1f7c8:	b	1fdd4 <myhtml_insertion_mode_in_body@@Base+0xe18>
   1f7cc:	b	1fdd4 <myhtml_insertion_mode_in_body@@Base+0xe18>
   1f7d0:	b	20368 <myhtml_insertion_mode_in_body@@Base+0x13ac>
   1f7d4:	b	1fdd4 <myhtml_insertion_mode_in_body@@Base+0xe18>
   1f7d8:	b	1ff28 <myhtml_insertion_mode_in_body@@Base+0xf6c>
   1f7dc:	b	20910 <myhtml_insertion_mode_in_body@@Base+0x1954>
   1f7e0:	b	1fd08 <myhtml_insertion_mode_in_body@@Base+0xd4c>
   1f7e4:	b	1fe68 <myhtml_insertion_mode_in_body@@Base+0xeac>
   1f7e8:	b	1fe68 <myhtml_insertion_mode_in_body@@Base+0xeac>
   1f7ec:	b	1fe68 <myhtml_insertion_mode_in_body@@Base+0xeac>
   1f7f0:	b	1fe68 <myhtml_insertion_mode_in_body@@Base+0xeac>
   1f7f4:	b	1fe68 <myhtml_insertion_mode_in_body@@Base+0xeac>
   1f7f8:	b	1fe68 <myhtml_insertion_mode_in_body@@Base+0xeac>
   1f7fc:	b	20910 <myhtml_insertion_mode_in_body@@Base+0x1954>
   1f800:	b	1fdd4 <myhtml_insertion_mode_in_body@@Base+0xe18>
   1f804:	b	1fdd4 <myhtml_insertion_mode_in_body@@Base+0xe18>
   1f808:	b	20544 <myhtml_insertion_mode_in_body@@Base+0x1588>
   1f80c:	b	1fba4 <myhtml_insertion_mode_in_body@@Base+0xbe8>
   1f810:	b	20368 <myhtml_insertion_mode_in_body@@Base+0x13ac>
   1f814:	b	2066c <myhtml_insertion_mode_in_body@@Base+0x16b0>
   1f818:	b	205bc <myhtml_insertion_mode_in_body@@Base+0x1600>
   1f81c:	b	20484 <myhtml_insertion_mode_in_body@@Base+0x14c8>
   1f820:	b	204b8 <myhtml_insertion_mode_in_body@@Base+0x14fc>
   1f824:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f828:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f82c:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f830:	b	20484 <myhtml_insertion_mode_in_body@@Base+0x14c8>
   1f834:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f838:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f83c:	b	1ff98 <myhtml_insertion_mode_in_body@@Base+0xfdc>
   1f840:	b	1fc28 <myhtml_insertion_mode_in_body@@Base+0xc6c>
   1f844:	b	1fed0 <myhtml_insertion_mode_in_body@@Base+0xf14>
   1f848:	b	1fdd4 <myhtml_insertion_mode_in_body@@Base+0xe18>
   1f84c:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f850:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f854:	b	203e4 <myhtml_insertion_mode_in_body@@Base+0x1428>
   1f858:	b	1fe0c <myhtml_insertion_mode_in_body@@Base+0xe50>
   1f85c:	b	20774 <myhtml_insertion_mode_in_body@@Base+0x17b8>
   1f860:	b	1fc28 <myhtml_insertion_mode_in_body@@Base+0xc6c>
   1f864:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f868:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f86c:	b	1fdd4 <myhtml_insertion_mode_in_body@@Base+0xe18>
   1f870:	b	2038c <myhtml_insertion_mode_in_body@@Base+0x13d0>
   1f874:	b	20694 <myhtml_insertion_mode_in_body@@Base+0x16d8>
   1f878:	b	1fc28 <myhtml_insertion_mode_in_body@@Base+0xc6c>
   1f87c:	b	206a8 <myhtml_insertion_mode_in_body@@Base+0x16ec>
   1f880:	b	203e4 <myhtml_insertion_mode_in_body@@Base+0x1428>
   1f884:	b	1fdd4 <myhtml_insertion_mode_in_body@@Base+0xe18>
   1f888:	b	20738 <myhtml_insertion_mode_in_body@@Base+0x177c>
   1f88c:	b	20738 <myhtml_insertion_mode_in_body@@Base+0x177c>
   1f890:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f894:	b	1fdd4 <myhtml_insertion_mode_in_body@@Base+0xe18>
   1f898:	b	20530 <myhtml_insertion_mode_in_body@@Base+0x1574>
   1f89c:	b	20240 <myhtml_insertion_mode_in_body@@Base+0x1284>
   1f8a0:	b	1fed0 <myhtml_insertion_mode_in_body@@Base+0xf14>
   1f8a4:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f8a8:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f8ac:	b	207b0 <myhtml_insertion_mode_in_body@@Base+0x17f4>
   1f8b0:	b	207f4 <myhtml_insertion_mode_in_body@@Base+0x1838>
   1f8b4:	b	207f4 <myhtml_insertion_mode_in_body@@Base+0x1838>
   1f8b8:	b	207b0 <myhtml_insertion_mode_in_body@@Base+0x17f4>
   1f8bc:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f8c0:	b	20368 <myhtml_insertion_mode_in_body@@Base+0x13ac>
   1f8c4:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f8c8:	b	1fc28 <myhtml_insertion_mode_in_body@@Base+0xc6c>
   1f8cc:	b	1fdd4 <myhtml_insertion_mode_in_body@@Base+0xe18>
   1f8d0:	b	206e0 <myhtml_insertion_mode_in_body@@Base+0x1724>
   1f8d4:	b	20368 <myhtml_insertion_mode_in_body@@Base+0x13ac>
   1f8d8:	b	20530 <myhtml_insertion_mode_in_body@@Base+0x1574>
   1f8dc:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f8e0:	b	20368 <myhtml_insertion_mode_in_body@@Base+0x13ac>
   1f8e4:	b	20368 <myhtml_insertion_mode_in_body@@Base+0x13ac>
   1f8e8:	b	1fc28 <myhtml_insertion_mode_in_body@@Base+0xc6c>
   1f8ec:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f8f0:	b	1fdd4 <myhtml_insertion_mode_in_body@@Base+0xe18>
   1f8f4:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f8f8:	b	2088c <myhtml_insertion_mode_in_body@@Base+0x18d0>
   1f8fc:	b	20420 <myhtml_insertion_mode_in_body@@Base+0x1464>
   1f900:	b	20910 <myhtml_insertion_mode_in_body@@Base+0x1954>
   1f904:	b	20910 <myhtml_insertion_mode_in_body@@Base+0x1954>
   1f908:	b	1fc28 <myhtml_insertion_mode_in_body@@Base+0xc6c>
   1f90c:	b	205cc <myhtml_insertion_mode_in_body@@Base+0x1610>
   1f910:	b	20910 <myhtml_insertion_mode_in_body@@Base+0x1954>
   1f914:	b	20910 <myhtml_insertion_mode_in_body@@Base+0x1954>
   1f918:	b	20910 <myhtml_insertion_mode_in_body@@Base+0x1954>
   1f91c:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f920:	b	1fc28 <myhtml_insertion_mode_in_body@@Base+0xc6c>
   1f924:	b	20910 <myhtml_insertion_mode_in_body@@Base+0x1954>
   1f928:	b	20530 <myhtml_insertion_mode_in_body@@Base+0x1574>
   1f92c:	b	20368 <myhtml_insertion_mode_in_body@@Base+0x13ac>
   1f930:	b	20368 <myhtml_insertion_mode_in_body@@Base+0x13ac>
   1f934:	b	1fdd4 <myhtml_insertion_mode_in_body@@Base+0xe18>
   1f938:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f93c:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f940:	b	20484 <myhtml_insertion_mode_in_body@@Base+0x14c8>
   1f944:	b	20610 <myhtml_insertion_mode_in_body@@Base+0x1654>
   1f948:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f94c:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f950:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f954:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f958:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f95c:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f960:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f964:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f968:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f96c:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f970:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f974:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f978:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f97c:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f980:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f984:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f988:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f98c:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f990:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f994:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f998:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f99c:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f9a0:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f9a4:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f9a8:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f9ac:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f9b0:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f9b4:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f9b8:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f9bc:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f9c0:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f9c4:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f9c8:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f9cc:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f9d0:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f9d4:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f9d8:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f9dc:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f9e0:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f9e4:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f9e8:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f9ec:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f9f0:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f9f4:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f9f8:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1f9fc:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fa00:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fa04:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fa08:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fa0c:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fa10:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fa14:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fa18:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fa1c:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fa20:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fa24:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fa28:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fa2c:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fa30:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fa34:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fa38:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fa3c:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fa40:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fa44:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fa48:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fa4c:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fa50:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fa54:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fa58:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fa5c:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fa60:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fa64:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fa68:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fa6c:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fa70:	b	20838 <myhtml_insertion_mode_in_body@@Base+0x187c>
   1fa74:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fa78:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fa7c:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fa80:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fa84:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fa88:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fa8c:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fa90:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fa94:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fa98:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fa9c:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1faa0:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1faa4:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1faa8:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1faac:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fab0:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fab4:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fab8:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fabc:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fac0:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fac4:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fac8:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1facc:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fad0:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fad4:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fad8:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fadc:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fae0:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fae4:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1fae8:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1faec:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1faf0:	b	208e0 <myhtml_insertion_mode_in_body@@Base+0x1924>
   1faf4:	b	1fd88 <myhtml_insertion_mode_in_body@@Base+0xdcc>
   1faf8:	ldr	r3, [r1, #48]	; 0x30
   1fafc:	tst	r3, #2048	; 0x800
   1fb00:	beq	1fb58 <myhtml_insertion_mode_in_body@@Base+0xb9c>
   1fb04:	bl	107cc <myhtml_insertion_fix_for_null_char_drop_all@plt>
   1fb08:	ldr	r3, [r5, #12]
   1fb0c:	cmp	r3, #0
   1fb10:	moveq	r8, #0
   1fb14:	beq	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1fb18:	mov	r0, r4
   1fb1c:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1fb20:	mov	r1, r5
   1fb24:	mov	r0, r4
   1fb28:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   1fb2c:	ldr	r3, [r5, #48]	; 0x30
   1fb30:	tst	r3, #8
   1fb34:	movne	r8, #0
   1fb38:	bne	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1fb3c:	ldr	r3, [r4, #180]	; 0xb4
   1fb40:	ldr	r2, [r4, #180]	; 0xb4
   1fb44:	and	r3, r3, #2
   1fb48:	eor	r3, r3, r2
   1fb4c:	str	r3, [r4, #180]	; 0xb4
   1fb50:	mov	r8, #0
   1fb54:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1fb58:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1fb5c:	mov	r1, r5
   1fb60:	mov	r0, r4
   1fb64:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   1fb68:	ldr	r3, [r5, #48]	; 0x30
   1fb6c:	tst	r3, #8
   1fb70:	movne	r8, #0
   1fb74:	bne	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1fb78:	ldr	r3, [r4, #180]	; 0xb4
   1fb7c:	ldr	r2, [r4, #180]	; 0xb4
   1fb80:	and	r3, r3, #2
   1fb84:	eor	r3, r3, r2
   1fb88:	str	r3, [r4, #180]	; 0xb4
   1fb8c:	mov	r8, #0
   1fb90:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1fb94:	mov	r2, #0
   1fb98:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   1fb9c:	mov	r8, #0
   1fba0:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1fba4:	mov	r3, #0
   1fba8:	mov	r2, #1
   1fbac:	mov	r1, #128	; 0x80
   1fbb0:	bl	107fc <myhtml_tree_open_elements_find_by_tag_idx@plt>
   1fbb4:	cmp	r0, #0
   1fbb8:	movne	r8, #0
   1fbbc:	bne	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1fbc0:	ldr	r3, [r4, #128]	; 0x80
   1fbc4:	ldr	r2, [r3, #4]
   1fbc8:	cmp	r2, #0
   1fbcc:	moveq	r8, #0
   1fbd0:	beq	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1fbd4:	ldr	r3, [r3]
   1fbd8:	ldr	r6, [r3]
   1fbdc:	ldr	r3, [r6, #32]
   1fbe0:	cmp	r3, #0
   1fbe4:	beq	1fc1c <myhtml_insertion_mode_in_body@@Base+0xc60>
   1fbe8:	mov	r1, r5
   1fbec:	ldr	r0, [r4, #8]
   1fbf0:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1fbf4:	ldr	r1, [r6, #32]
   1fbf8:	ldr	r0, [r4, #8]
   1fbfc:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1fc00:	ldr	r3, [r4, #44]	; 0x2c
   1fc04:	ldr	r2, [r6, #32]
   1fc08:	mov	r1, r5
   1fc0c:	ldr	r0, [r4, #8]
   1fc10:	bl	10694 <myhtml_token_node_attr_copy_with_check@plt>
   1fc14:	mov	r8, #0
   1fc18:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1fc1c:	str	r5, [r6, #32]
   1fc20:	mov	r8, #0
   1fc24:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1fc28:	bl	10058 <myhtml_insertion_mode_in_head@plt>
   1fc2c:	mov	r8, r0
   1fc30:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1fc34:	ldr	r3, [r0, #128]	; 0x80
   1fc38:	ldr	r2, [r3, #4]
   1fc3c:	cmp	r2, #1
   1fc40:	movls	r8, #0
   1fc44:	bls	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1fc48:	ldr	r3, [r3]
   1fc4c:	ldr	r3, [r3, #4]
   1fc50:	ldr	r2, [r3, #4]
   1fc54:	cmp	r2, #23
   1fc58:	movne	r8, #0
   1fc5c:	bne	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1fc60:	ldr	r3, [r3, #8]
   1fc64:	cmp	r3, #1
   1fc68:	movne	r8, #0
   1fc6c:	bne	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1fc70:	mov	r3, #0
   1fc74:	mov	r2, #1
   1fc78:	mov	r1, #128	; 0x80
   1fc7c:	bl	107fc <myhtml_tree_open_elements_find_by_tag_idx@plt>
   1fc80:	cmp	r0, #0
   1fc84:	movne	r8, #0
   1fc88:	bne	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1fc8c:	ldr	r3, [r4, #180]	; 0xb4
   1fc90:	ldr	r2, [r4, #180]	; 0xb4
   1fc94:	and	r3, r3, #2
   1fc98:	eor	r3, r3, r2
   1fc9c:	str	r3, [r4, #180]	; 0xb4
   1fca0:	ldr	r3, [r4, #128]	; 0x80
   1fca4:	ldr	r2, [r3, #4]
   1fca8:	cmp	r2, #1
   1fcac:	movls	r8, #0
   1fcb0:	bls	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1fcb4:	ldr	r3, [r3]
   1fcb8:	ldr	r6, [r3, #4]
   1fcbc:	ldr	r3, [r6, #32]
   1fcc0:	cmp	r3, #0
   1fcc4:	beq	1fcfc <myhtml_insertion_mode_in_body@@Base+0xd40>
   1fcc8:	mov	r1, r5
   1fccc:	ldr	r0, [r4, #8]
   1fcd0:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1fcd4:	ldr	r1, [r6, #32]
   1fcd8:	ldr	r0, [r4, #8]
   1fcdc:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1fce0:	ldr	r3, [r4, #44]	; 0x2c
   1fce4:	ldr	r2, [r6, #32]
   1fce8:	mov	r1, r5
   1fcec:	ldr	r0, [r4, #8]
   1fcf0:	bl	10694 <myhtml_token_node_attr_copy_with_check@plt>
   1fcf4:	mov	r8, #0
   1fcf8:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1fcfc:	str	r5, [r6, #32]
   1fd00:	mov	r8, #0
   1fd04:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1fd08:	ldr	r3, [r0, #128]	; 0x80
   1fd0c:	ldr	r2, [r3, #4]
   1fd10:	cmp	r2, #1
   1fd14:	movls	r8, #0
   1fd18:	bls	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1fd1c:	ldr	r3, [r3]
   1fd20:	ldr	r0, [r3, #4]
   1fd24:	ldr	r3, [r0, #4]
   1fd28:	cmp	r3, #23
   1fd2c:	movne	r8, #0
   1fd30:	bne	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1fd34:	ldr	r3, [r0, #8]
   1fd38:	cmp	r3, #1
   1fd3c:	movne	r8, #0
   1fd40:	bne	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1fd44:	ldr	r3, [r4, #180]	; 0xb4
   1fd48:	tst	r3, #2
   1fd4c:	moveq	r8, #0
   1fd50:	beq	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1fd54:	bl	10df0 <myhtml_tree_node_remove@plt>
   1fd58:	mov	r3, #1
   1fd5c:	mov	r2, r3
   1fd60:	mov	r1, #65	; 0x41
   1fd64:	mov	r0, r4
   1fd68:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   1fd6c:	mov	r1, r5
   1fd70:	mov	r0, r4
   1fd74:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1fd78:	mov	r3, #19
   1fd7c:	str	r3, [r4, #168]	; 0xa8
   1fd80:	mov	r8, #0
   1fd84:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1fd88:	ldr	r3, [r0, #140]	; 0x8c
   1fd8c:	ldr	r3, [r3, #4]
   1fd90:	cmp	r3, #0
   1fd94:	bne	1fdc8 <myhtml_insertion_mode_in_body@@Base+0xe0c>
   1fd98:	ldr	r1, [r0, #128]	; 0x80
   1fd9c:	ldr	r2, [r1, #4]
   1fda0:	cmp	r2, #0
   1fda4:	beq	1fdb8 <myhtml_insertion_mode_in_body@@Base+0xdfc>
   1fda8:	add	r3, r3, #1
   1fdac:	ldr	r2, [r1, #4]
   1fdb0:	cmp	r2, r3
   1fdb4:	bhi	1fda8 <myhtml_insertion_mode_in_body@@Base+0xdec>
   1fdb8:	mov	r0, r4
   1fdbc:	bl	10310 <myhtml_rules_stop_parsing@plt>
   1fdc0:	mov	r8, #0
   1fdc4:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1fdc8:	bl	fda0 <myhtml_insertion_mode_in_template@plt>
   1fdcc:	mov	r8, r0
   1fdd0:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1fdd4:	mov	r3, #32
   1fdd8:	mov	r2, #1
   1fddc:	mov	r1, #99	; 0x63
   1fde0:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1fde4:	cmp	r0, #0
   1fde8:	beq	1fdf8 <myhtml_insertion_mode_in_body@@Base+0xe3c>
   1fdec:	mov	r1, r5
   1fdf0:	mov	r0, r4
   1fdf4:	bl	10448 <myhtml_tree_tags_close_p@plt>
   1fdf8:	mov	r1, r5
   1fdfc:	mov	r0, r4
   1fe00:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1fe04:	mov	r8, #0
   1fe08:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1fe0c:	mov	r3, #32
   1fe10:	mov	r2, #1
   1fe14:	mov	r1, #99	; 0x63
   1fe18:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1fe1c:	cmp	r0, #0
   1fe20:	beq	1fe30 <myhtml_insertion_mode_in_body@@Base+0xe74>
   1fe24:	mov	r1, r5
   1fe28:	mov	r0, r4
   1fe2c:	bl	10448 <myhtml_tree_tags_close_p@plt>
   1fe30:	mov	r0, r4
   1fe34:	bl	10628 <myhtml_tree_current_node@plt>
   1fe38:	mov	r1, #85	; 0x55
   1fe3c:	bl	10aa8 <myhtml_is_html_node@plt>
   1fe40:	cmp	r0, #0
   1fe44:	bne	1fe5c <myhtml_insertion_mode_in_body@@Base+0xea0>
   1fe48:	mov	r1, r5
   1fe4c:	mov	r0, r4
   1fe50:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1fe54:	mov	r8, #0
   1fe58:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1fe5c:	mov	r0, r4
   1fe60:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1fe64:	b	1fe48 <myhtml_insertion_mode_in_body@@Base+0xe8c>
   1fe68:	mov	r3, #32
   1fe6c:	mov	r2, #1
   1fe70:	mov	r1, #99	; 0x63
   1fe74:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1fe78:	cmp	r0, #0
   1fe7c:	beq	1fe8c <myhtml_insertion_mode_in_body@@Base+0xed0>
   1fe80:	mov	r1, r5
   1fe84:	mov	r0, r4
   1fe88:	bl	10448 <myhtml_tree_tags_close_p@plt>
   1fe8c:	mov	r0, r4
   1fe90:	bl	10628 <myhtml_tree_current_node@plt>
   1fe94:	ldr	r3, [r0, #4]
   1fe98:	sub	r3, r3, #55	; 0x37
   1fe9c:	cmp	r3, #5
   1fea0:	bhi	1feb0 <myhtml_insertion_mode_in_body@@Base+0xef4>
   1fea4:	ldr	r3, [r0, #8]
   1fea8:	cmp	r3, #1
   1feac:	beq	1fec4 <myhtml_insertion_mode_in_body@@Base+0xf08>
   1feb0:	mov	r1, r5
   1feb4:	mov	r0, r4
   1feb8:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1febc:	mov	r8, #0
   1fec0:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1fec4:	mov	r0, r4
   1fec8:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1fecc:	b	1feb0 <myhtml_insertion_mode_in_body@@Base+0xef4>
   1fed0:	mov	r3, #32
   1fed4:	mov	r2, #1
   1fed8:	mov	r1, #99	; 0x63
   1fedc:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1fee0:	cmp	r0, #0
   1fee4:	beq	1fef4 <myhtml_insertion_mode_in_body@@Base+0xf38>
   1fee8:	mov	r1, r5
   1feec:	mov	r0, r4
   1fef0:	bl	10448 <myhtml_tree_tags_close_p@plt>
   1fef4:	mov	r1, r5
   1fef8:	mov	r0, r4
   1fefc:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1ff00:	ldr	r3, [r4, #180]	; 0xb4
   1ff04:	orr	r3, r3, #192	; 0xc0
   1ff08:	str	r3, [r4, #180]	; 0xb4
   1ff0c:	ldr	r3, [r4, #180]	; 0xb4
   1ff10:	ldr	r2, [r4, #180]	; 0xb4
   1ff14:	and	r3, r3, #2
   1ff18:	eor	r3, r3, r2
   1ff1c:	str	r3, [r4, #180]	; 0xb4
   1ff20:	mov	r8, #0
   1ff24:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1ff28:	mov	r3, #0
   1ff2c:	mov	r2, #1
   1ff30:	mov	r1, #128	; 0x80
   1ff34:	bl	107fc <myhtml_tree_open_elements_find_by_tag_idx@plt>
   1ff38:	ldr	r6, [r4, #104]	; 0x68
   1ff3c:	mov	r7, r0
   1ff40:	adds	r8, r6, #0
   1ff44:	movne	r8, #1
   1ff48:	cmp	r0, #0
   1ff4c:	movne	r8, #0
   1ff50:	cmp	r8, #0
   1ff54:	bne	20918 <myhtml_insertion_mode_in_body@@Base+0x195c>
   1ff58:	mov	r3, #32
   1ff5c:	mov	r2, #1
   1ff60:	mov	r1, #99	; 0x63
   1ff64:	mov	r0, r4
   1ff68:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1ff6c:	cmp	r0, #0
   1ff70:	beq	1ff80 <myhtml_insertion_mode_in_body@@Base+0xfc4>
   1ff74:	mov	r1, r5
   1ff78:	mov	r0, r4
   1ff7c:	bl	10448 <myhtml_tree_tags_close_p@plt>
   1ff80:	mov	r1, r5
   1ff84:	mov	r0, r4
   1ff88:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1ff8c:	cmp	r7, #0
   1ff90:	streq	r0, [r4, #104]	; 0x68
   1ff94:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   1ff98:	ldr	r3, [r0, #180]	; 0xb4
   1ff9c:	ldr	r2, [r0, #180]	; 0xb4
   1ffa0:	and	r3, r3, #2
   1ffa4:	eor	r3, r3, r2
   1ffa8:	str	r3, [r0, #180]	; 0xb4
   1ffac:	ldr	r3, [r0, #128]	; 0x80
   1ffb0:	ldr	r7, [r3, #4]
   1ffb4:	cmp	r7, #0
   1ffb8:	beq	20000 <myhtml_insertion_mode_in_body@@Base+0x1044>
   1ffbc:	sub	r8, r7, #-1073741823	; 0xc0000001
   1ffc0:	lsl	r8, r8, #2
   1ffc4:	mov	r9, #77	; 0x4d
   1ffc8:	b	20048 <myhtml_insertion_mode_in_body@@Base+0x108c>
   1ffcc:	mov	r2, #1
   1ffd0:	mov	r1, #77	; 0x4d
   1ffd4:	mov	r0, r4
   1ffd8:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1ffdc:	mov	r0, r4
   1ffe0:	bl	10628 <myhtml_tree_current_node@plt>
   1ffe4:	mov	r1, #77	; 0x4d
   1ffe8:	bl	10aa8 <myhtml_is_html_node@plt>
   1ffec:	mov	r3, #0
   1fff0:	mov	r2, #1
   1fff4:	mov	r1, #77	; 0x4d
   1fff8:	mov	r0, r4
   1fffc:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   20000:	mov	r3, #32
   20004:	mov	r2, #1
   20008:	mov	r1, #99	; 0x63
   2000c:	mov	r0, r4
   20010:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   20014:	cmp	r0, #0
   20018:	beq	20028 <myhtml_insertion_mode_in_body@@Base+0x106c>
   2001c:	mov	r1, r5
   20020:	mov	r0, r4
   20024:	bl	10448 <myhtml_tree_tags_close_p@plt>
   20028:	mov	r1, r5
   2002c:	mov	r0, r4
   20030:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   20034:	mov	r8, #0
   20038:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   2003c:	sub	r8, r8, #4
   20040:	cmp	r7, #0
   20044:	beq	20000 <myhtml_insertion_mode_in_body@@Base+0x1044>
   20048:	sub	r7, r7, #1
   2004c:	ldr	r3, [r4, #128]	; 0x80
   20050:	ldr	r3, [r3]
   20054:	ldr	r6, [r3, r8]
   20058:	ldr	r1, [r6, #4]
   2005c:	ldr	r0, [r4, #28]
   20060:	bl	10a24 <myhtml_tag_get_by_id@plt>
   20064:	mov	sl, r0
   20068:	mov	r1, r9
   2006c:	mov	r0, r6
   20070:	bl	10aa8 <myhtml_is_html_node@plt>
   20074:	cmp	r0, #0
   20078:	bne	1ffcc <myhtml_insertion_mode_in_body@@Base+0x1010>
   2007c:	ldr	r3, [r6, #8]
   20080:	add	r2, r3, #4
   20084:	ldr	r2, [sl, r2, lsl #2]
   20088:	tst	r2, #2
   2008c:	beq	2003c <myhtml_insertion_mode_in_body@@Base+0x1080>
   20090:	ldr	r1, [r6, #4]
   20094:	cmp	r1, #7
   20098:	cmpne	r1, #42	; 0x2a
   2009c:	movne	r2, #1
   200a0:	moveq	r2, #0
   200a4:	cmp	r1, #99	; 0x63
   200a8:	moveq	r2, #0
   200ac:	andne	r2, r2, #1
   200b0:	cmp	r2, #0
   200b4:	bne	20000 <myhtml_insertion_mode_in_body@@Base+0x1044>
   200b8:	cmp	r3, #1
   200bc:	beq	2003c <myhtml_insertion_mode_in_body@@Base+0x1080>
   200c0:	b	20000 <myhtml_insertion_mode_in_body@@Base+0x1044>
   200c4:	ldr	r3, [r0, #180]	; 0xb4
   200c8:	ldr	r2, [r0, #180]	; 0xb4
   200cc:	and	r3, r3, #2
   200d0:	eor	r3, r3, r2
   200d4:	str	r3, [r0, #180]	; 0xb4
   200d8:	ldr	r3, [r0, #128]	; 0x80
   200dc:	ldr	r7, [r3, #4]
   200e0:	cmp	r7, #0
   200e4:	beq	20130 <myhtml_insertion_mode_in_body@@Base+0x1174>
   200e8:	sub	r8, r7, #-1073741823	; 0xc0000001
   200ec:	lsl	r8, r8, #2
   200f0:	mov	sl, #36	; 0x24
   200f4:	mov	fp, #44	; 0x2c
   200f8:	b	201b0 <myhtml_insertion_mode_in_body@@Base+0x11f4>
   200fc:	mov	r2, #1
   20100:	mov	r1, #36	; 0x24
   20104:	mov	r0, r4
   20108:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   2010c:	mov	r0, r4
   20110:	bl	10628 <myhtml_tree_current_node@plt>
   20114:	mov	r1, #36	; 0x24
   20118:	bl	10aa8 <myhtml_is_html_node@plt>
   2011c:	mov	r3, #0
   20120:	mov	r2, #1
   20124:	mov	r1, #36	; 0x24
   20128:	mov	r0, r4
   2012c:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   20130:	mov	r3, #32
   20134:	mov	r2, #1
   20138:	mov	r1, #99	; 0x63
   2013c:	mov	r0, r4
   20140:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   20144:	cmp	r0, #0
   20148:	beq	20158 <myhtml_insertion_mode_in_body@@Base+0x119c>
   2014c:	mov	r1, r5
   20150:	mov	r0, r4
   20154:	bl	10448 <myhtml_tree_tags_close_p@plt>
   20158:	mov	r1, r5
   2015c:	mov	r0, r4
   20160:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   20164:	mov	r8, #0
   20168:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   2016c:	mov	r2, #1
   20170:	mov	r1, #44	; 0x2c
   20174:	mov	r0, r4
   20178:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   2017c:	mov	r0, r4
   20180:	bl	10628 <myhtml_tree_current_node@plt>
   20184:	mov	r1, #44	; 0x2c
   20188:	bl	10aa8 <myhtml_is_html_node@plt>
   2018c:	mov	r3, #0
   20190:	mov	r2, #1
   20194:	mov	r1, #44	; 0x2c
   20198:	mov	r0, r4
   2019c:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   201a0:	b	20130 <myhtml_insertion_mode_in_body@@Base+0x1174>
   201a4:	sub	r8, r8, #4
   201a8:	cmp	r7, #0
   201ac:	beq	20130 <myhtml_insertion_mode_in_body@@Base+0x1174>
   201b0:	sub	r7, r7, #1
   201b4:	ldr	r3, [r4, #128]	; 0x80
   201b8:	ldr	r3, [r3]
   201bc:	ldr	r6, [r3, r8]
   201c0:	ldr	r1, [r6, #4]
   201c4:	ldr	r0, [r4, #28]
   201c8:	bl	10a24 <myhtml_tag_get_by_id@plt>
   201cc:	mov	r9, r0
   201d0:	mov	r1, sl
   201d4:	mov	r0, r6
   201d8:	bl	10aa8 <myhtml_is_html_node@plt>
   201dc:	cmp	r0, #0
   201e0:	bne	200fc <myhtml_insertion_mode_in_body@@Base+0x1140>
   201e4:	mov	r1, fp
   201e8:	mov	r0, r6
   201ec:	bl	10aa8 <myhtml_is_html_node@plt>
   201f0:	cmp	r0, #0
   201f4:	bne	2016c <myhtml_insertion_mode_in_body@@Base+0x11b0>
   201f8:	ldr	r3, [r6, #8]
   201fc:	add	r2, r3, #4
   20200:	ldr	r2, [r9, r2, lsl #2]
   20204:	tst	r2, #2
   20208:	beq	201a4 <myhtml_insertion_mode_in_body@@Base+0x11e8>
   2020c:	ldr	r1, [r6, #4]
   20210:	cmp	r1, #7
   20214:	cmpne	r1, #42	; 0x2a
   20218:	movne	r2, #1
   2021c:	moveq	r2, #0
   20220:	cmp	r1, #99	; 0x63
   20224:	moveq	r2, #0
   20228:	andne	r2, r2, #1
   2022c:	cmp	r2, #0
   20230:	bne	20130 <myhtml_insertion_mode_in_body@@Base+0x1174>
   20234:	cmp	r3, #1
   20238:	beq	201a4 <myhtml_insertion_mode_in_body@@Base+0x11e8>
   2023c:	b	20130 <myhtml_insertion_mode_in_body@@Base+0x1174>
   20240:	mov	r3, #32
   20244:	mov	r2, #1
   20248:	mov	r1, #99	; 0x63
   2024c:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   20250:	cmp	r0, #0
   20254:	beq	20264 <myhtml_insertion_mode_in_body@@Base+0x12a8>
   20258:	mov	r1, r5
   2025c:	mov	r0, r4
   20260:	bl	10448 <myhtml_tree_tags_close_p@plt>
   20264:	mov	r1, r5
   20268:	mov	r0, r4
   2026c:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   20270:	mov	r3, #6
   20274:	str	r3, [r4, #164]	; 0xa4
   20278:	mov	r8, #0
   2027c:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   20280:	mov	r3, #8
   20284:	mov	r2, #1
   20288:	mov	r1, #25
   2028c:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   20290:	cmp	r0, #0
   20294:	beq	202bc <myhtml_insertion_mode_in_body@@Base+0x1300>
   20298:	mov	r2, #0
   2029c:	mov	r1, r2
   202a0:	mov	r0, r4
   202a4:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   202a8:	mov	r3, #0
   202ac:	mov	r2, #1
   202b0:	mov	r1, #25
   202b4:	mov	r0, r4
   202b8:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   202bc:	mov	r0, r4
   202c0:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   202c4:	mov	r1, r5
   202c8:	mov	r0, r4
   202cc:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   202d0:	ldr	r3, [r4, #180]	; 0xb4
   202d4:	ldr	r2, [r4, #180]	; 0xb4
   202d8:	and	r3, r3, #2
   202dc:	eor	r3, r3, r2
   202e0:	str	r3, [r4, #180]	; 0xb4
   202e4:	mov	r8, #0
   202e8:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   202ec:	mov	r2, #0
   202f0:	mov	r1, #4
   202f4:	bl	1064c <myhtml_tree_active_formatting_between_last_marker@plt>
   202f8:	cmp	r0, #0
   202fc:	beq	20340 <myhtml_insertion_mode_in_body@@Base+0x1384>
   20300:	mov	r2, #4
   20304:	mov	r1, r5
   20308:	mov	r0, r4
   2030c:	bl	10898 <myhtml_tree_adoption_agency_algorithm@plt>
   20310:	mov	r2, #0
   20314:	mov	r1, #4
   20318:	mov	r0, r4
   2031c:	bl	1064c <myhtml_tree_active_formatting_between_last_marker@plt>
   20320:	subs	r6, r0, #0
   20324:	beq	20340 <myhtml_insertion_mode_in_body@@Base+0x1384>
   20328:	mov	r1, r6
   2032c:	mov	r0, r4
   20330:	bl	10238 <myhtml_tree_open_elements_remove@plt>
   20334:	mov	r1, r6
   20338:	mov	r0, r4
   2033c:	bl	108a4 <myhtml_tree_active_formatting_remove@plt>
   20340:	mov	r0, r4
   20344:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   20348:	mov	r1, r5
   2034c:	mov	r0, r4
   20350:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   20354:	mov	r1, r0
   20358:	mov	r0, r4
   2035c:	bl	10814 <myhtml_tree_active_formatting_append_with_check@plt>
   20360:	mov	r8, #0
   20364:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   20368:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   2036c:	mov	r1, r5
   20370:	mov	r0, r4
   20374:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   20378:	mov	r1, r0
   2037c:	mov	r0, r4
   20380:	bl	10814 <myhtml_tree_active_formatting_append_with_check@plt>
   20384:	mov	r8, #0
   20388:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   2038c:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   20390:	mov	r3, #8
   20394:	mov	r2, #1
   20398:	mov	r1, #90	; 0x5a
   2039c:	mov	r0, r4
   203a0:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   203a4:	cmp	r0, #0
   203a8:	beq	203c4 <myhtml_insertion_mode_in_body@@Base+0x1408>
   203ac:	mov	r2, #90	; 0x5a
   203b0:	mov	r1, r5
   203b4:	mov	r0, r4
   203b8:	bl	10898 <myhtml_tree_adoption_agency_algorithm@plt>
   203bc:	mov	r0, r4
   203c0:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   203c4:	mov	r1, r5
   203c8:	mov	r0, r4
   203cc:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   203d0:	mov	r1, r0
   203d4:	mov	r0, r4
   203d8:	bl	10814 <myhtml_tree_active_formatting_append_with_check@plt>
   203dc:	mov	r8, #0
   203e0:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   203e4:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   203e8:	mov	r1, r5
   203ec:	mov	r0, r4
   203f0:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   203f4:	ldr	r3, [r4]
   203f8:	ldr	r1, [r3, #36]	; 0x24
   203fc:	mov	r0, r4
   20400:	bl	100d0 <myhtml_tree_active_formatting_append@plt>
   20404:	ldr	r3, [r4, #180]	; 0xb4
   20408:	ldr	r2, [r4, #180]	; 0xb4
   2040c:	and	r3, r3, #2
   20410:	eor	r3, r3, r2
   20414:	str	r3, [r4, #180]	; 0xb4
   20418:	mov	r8, #0
   2041c:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   20420:	ldr	r3, [r0, #176]	; 0xb0
   20424:	tst	r3, #1
   20428:	beq	2045c <myhtml_insertion_mode_in_body@@Base+0x14a0>
   2042c:	mov	r1, r5
   20430:	mov	r0, r4
   20434:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   20438:	ldr	r3, [r4, #180]	; 0xb4
   2043c:	ldr	r2, [r4, #180]	; 0xb4
   20440:	and	r3, r3, #2
   20444:	eor	r3, r3, r2
   20448:	str	r3, [r4, #180]	; 0xb4
   2044c:	mov	r3, #8
   20450:	str	r3, [r4, #168]	; 0xa8
   20454:	mov	r8, #0
   20458:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   2045c:	mov	r3, #32
   20460:	mov	r2, #1
   20464:	mov	r1, #99	; 0x63
   20468:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   2046c:	cmp	r0, #0
   20470:	beq	2042c <myhtml_insertion_mode_in_body@@Base+0x1470>
   20474:	mov	r1, r5
   20478:	mov	r0, r4
   2047c:	bl	10448 <myhtml_tree_tags_close_p@plt>
   20480:	b	2042c <myhtml_insertion_mode_in_body@@Base+0x1470>
   20484:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   20488:	mov	r1, r5
   2048c:	mov	r0, r4
   20490:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   20494:	mov	r0, r4
   20498:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   2049c:	ldr	r3, [r4, #180]	; 0xb4
   204a0:	ldr	r2, [r4, #180]	; 0xb4
   204a4:	and	r3, r3, #2
   204a8:	eor	r3, r3, r2
   204ac:	str	r3, [r4, #180]	; 0xb4
   204b0:	mov	r8, #0
   204b4:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   204b8:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   204bc:	mov	r1, r5
   204c0:	mov	r0, r4
   204c4:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   204c8:	mov	r0, r4
   204cc:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   204d0:	mov	r1, r5
   204d4:	ldr	r0, [r4, #8]
   204d8:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   204dc:	mov	r3, #6
   204e0:	str	r3, [sp, #4]
   204e4:	ldr	r3, [pc, #1084]	; 20928 <myhtml_insertion_mode_in_body@@Base+0x196c>
   204e8:	add	r3, pc, r3
   204ec:	str	r3, [sp]
   204f0:	mov	r3, #4
   204f4:	ldr	r2, [pc, #1072]	; 2092c <myhtml_insertion_mode_in_body@@Base+0x1970>
   204f8:	add	r2, pc, r2
   204fc:	mov	r1, r5
   20500:	ldr	r0, [r4, #8]
   20504:	bl	fd34 <myhtml_token_attr_match_case@plt>
   20508:	cmp	r0, #0
   2050c:	movne	r8, #0
   20510:	bne	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   20514:	ldr	r3, [r4, #180]	; 0xb4
   20518:	ldr	r2, [r4, #180]	; 0xb4
   2051c:	and	r3, r3, #2
   20520:	eor	r3, r3, r2
   20524:	str	r3, [r4, #180]	; 0xb4
   20528:	mov	r8, #0
   2052c:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   20530:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   20534:	mov	r0, r4
   20538:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   2053c:	mov	r8, #0
   20540:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   20544:	mov	r3, #32
   20548:	mov	r2, #1
   2054c:	mov	r1, #99	; 0x63
   20550:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   20554:	cmp	r0, #0
   20558:	beq	20568 <myhtml_insertion_mode_in_body@@Base+0x15ac>
   2055c:	mov	r1, r5
   20560:	mov	r0, r4
   20564:	bl	10448 <myhtml_tree_tags_close_p@plt>
   20568:	mov	r0, r4
   2056c:	bl	10628 <myhtml_tree_current_node@plt>
   20570:	mov	r1, #85	; 0x55
   20574:	bl	10aa8 <myhtml_is_html_node@plt>
   20578:	cmp	r0, #0
   2057c:	bne	205b0 <myhtml_insertion_mode_in_body@@Base+0x15f4>
   20580:	mov	r1, r5
   20584:	mov	r0, r4
   20588:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   2058c:	mov	r0, r4
   20590:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   20594:	ldr	r3, [r4, #180]	; 0xb4
   20598:	ldr	r2, [r4, #180]	; 0xb4
   2059c:	and	r3, r3, #2
   205a0:	eor	r3, r3, r2
   205a4:	str	r3, [r4, #180]	; 0xb4
   205a8:	mov	r8, #0
   205ac:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   205b0:	mov	r0, r4
   205b4:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   205b8:	b	20580 <myhtml_insertion_mode_in_body@@Base+0x15c4>
   205bc:	mov	r3, #69	; 0x45
   205c0:	str	r3, [r1]
   205c4:	mov	r8, #1
   205c8:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   205cc:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   205d0:	ldr	r3, [r4, #180]	; 0xb4
   205d4:	orr	r3, r3, #192	; 0xc0
   205d8:	str	r3, [r4, #180]	; 0xb4
   205dc:	ldr	r3, [r4, #168]	; 0xa8
   205e0:	str	r3, [r4, #172]	; 0xac
   205e4:	ldr	r3, [r4, #180]	; 0xb4
   205e8:	ldr	r2, [r4, #180]	; 0xb4
   205ec:	and	r3, r3, #2
   205f0:	eor	r3, r3, r2
   205f4:	str	r3, [r4, #180]	; 0xb4
   205f8:	mov	r3, #7
   205fc:	str	r3, [r4, #168]	; 0xa8
   20600:	mov	r3, #2
   20604:	str	r3, [r4, #164]	; 0xa4
   20608:	mov	r8, #0
   2060c:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   20610:	mov	r3, #32
   20614:	mov	r2, #1
   20618:	mov	r1, #99	; 0x63
   2061c:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   20620:	cmp	r0, #0
   20624:	beq	20634 <myhtml_insertion_mode_in_body@@Base+0x1678>
   20628:	mov	r1, r5
   2062c:	mov	r0, r4
   20630:	bl	10448 <myhtml_tree_tags_close_p@plt>
   20634:	mov	r0, r4
   20638:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   2063c:	ldr	r3, [r4, #180]	; 0xb4
   20640:	ldr	r2, [r4, #180]	; 0xb4
   20644:	and	r3, r3, #2
   20648:	eor	r3, r3, r2
   2064c:	str	r3, [r4, #180]	; 0xb4
   20650:	mov	r3, #4
   20654:	str	r3, [r4, #164]	; 0xa4
   20658:	mov	r1, r5
   2065c:	mov	r0, r4
   20660:	bl	10f40 <myhtml_tree_generic_raw_text_element_parsing_algorithm@plt>
   20664:	mov	r8, #0
   20668:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   2066c:	ldr	r3, [r0, #180]	; 0xb4
   20670:	ldr	r2, [r0, #180]	; 0xb4
   20674:	and	r3, r3, #2
   20678:	eor	r3, r3, r2
   2067c:	str	r3, [r0, #180]	; 0xb4
   20680:	mov	r3, #4
   20684:	str	r3, [r0, #164]	; 0xa4
   20688:	bl	10f40 <myhtml_tree_generic_raw_text_element_parsing_algorithm@plt>
   2068c:	mov	r8, #0
   20690:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   20694:	mov	r3, #4
   20698:	str	r3, [r0, #164]	; 0xa4
   2069c:	bl	10f40 <myhtml_tree_generic_raw_text_element_parsing_algorithm@plt>
   206a0:	mov	r8, #0
   206a4:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   206a8:	ldr	r3, [r0, #180]	; 0xb4
   206ac:	tst	r3, #1
   206b0:	beq	206c8 <myhtml_insertion_mode_in_body@@Base+0x170c>
   206b4:	mov	r3, #4
   206b8:	str	r3, [r0, #164]	; 0xa4
   206bc:	bl	10f40 <myhtml_tree_generic_raw_text_element_parsing_algorithm@plt>
   206c0:	mov	r8, #0
   206c4:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   206c8:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   206cc:	mov	r1, r5
   206d0:	mov	r0, r4
   206d4:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   206d8:	mov	r8, #0
   206dc:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   206e0:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   206e4:	mov	r1, r5
   206e8:	mov	r0, r4
   206ec:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   206f0:	ldr	r3, [r4, #180]	; 0xb4
   206f4:	ldr	r2, [r4, #180]	; 0xb4
   206f8:	and	r3, r3, #2
   206fc:	eor	r3, r3, r2
   20700:	str	r3, [r4, #180]	; 0xb4
   20704:	ldr	r3, [r4, #168]	; 0xa8
   20708:	sub	r6, r3, #12
   2070c:	bic	r3, r3, #2
   20710:	cmp	r3, #8
   20714:	cmpne	r6, #2
   20718:	movls	r8, #1
   2071c:	movhi	r8, #0
   20720:	movls	r3, #16
   20724:	strls	r3, [r4, #168]	; 0xa8
   20728:	movls	r8, #0
   2072c:	movhi	r3, #15
   20730:	strhi	r3, [r4, #168]	; 0xa8
   20734:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   20738:	bl	10628 <myhtml_tree_current_node@plt>
   2073c:	mov	r1, #97	; 0x61
   20740:	bl	10aa8 <myhtml_is_html_node@plt>
   20744:	cmp	r0, #0
   20748:	bne	20768 <myhtml_insertion_mode_in_body@@Base+0x17ac>
   2074c:	mov	r0, r4
   20750:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   20754:	mov	r1, r5
   20758:	mov	r0, r4
   2075c:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   20760:	mov	r8, #0
   20764:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   20768:	mov	r0, r4
   2076c:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   20770:	b	2074c <myhtml_insertion_mode_in_body@@Base+0x1790>
   20774:	bl	10628 <myhtml_tree_current_node@plt>
   20778:	mov	r1, #85	; 0x55
   2077c:	bl	10aa8 <myhtml_is_html_node@plt>
   20780:	cmp	r0, #0
   20784:	bne	207a4 <myhtml_insertion_mode_in_body@@Base+0x17e8>
   20788:	mov	r0, r4
   2078c:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   20790:	mov	r1, r5
   20794:	mov	r0, r4
   20798:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   2079c:	mov	r8, #0
   207a0:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   207a4:	mov	r0, r4
   207a8:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   207ac:	b	20788 <myhtml_insertion_mode_in_body@@Base+0x17cc>
   207b0:	mov	r3, #8
   207b4:	mov	r2, #1
   207b8:	mov	r1, #109	; 0x6d
   207bc:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   207c0:	cmp	r0, #0
   207c4:	beq	207d8 <myhtml_insertion_mode_in_body@@Base+0x181c>
   207c8:	mov	r2, #0
   207cc:	mov	r1, r2
   207d0:	mov	r0, r4
   207d4:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   207d8:	mov	r0, r4
   207dc:	bl	10628 <myhtml_tree_current_node@plt>
   207e0:	mov	r1, r5
   207e4:	mov	r0, r4
   207e8:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   207ec:	mov	r8, #0
   207f0:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   207f4:	mov	r3, #8
   207f8:	mov	r2, #1
   207fc:	mov	r1, #109	; 0x6d
   20800:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   20804:	cmp	r0, #0
   20808:	beq	2081c <myhtml_insertion_mode_in_body@@Base+0x1860>
   2080c:	mov	r2, #1
   20810:	mov	r1, #108	; 0x6c
   20814:	mov	r0, r4
   20818:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   2081c:	mov	r0, r4
   20820:	bl	10628 <myhtml_tree_current_node@plt>
   20824:	mov	r1, r5
   20828:	mov	r0, r4
   2082c:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   20830:	mov	r8, #0
   20834:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   20838:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   2083c:	mov	r1, r5
   20840:	ldr	r0, [r4, #8]
   20844:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   20848:	mov	r0, r5
   2084c:	bl	ff74 <myhtml_token_adjust_mathml_attributes@plt>
   20850:	mov	r0, r5
   20854:	bl	10be0 <myhtml_token_adjust_foreign_attributes@plt>
   20858:	mov	r1, r5
   2085c:	mov	r0, r4
   20860:	bl	10d84 <myhtml_tree_node_insert_foreign_element@plt>
   20864:	mov	r3, #2
   20868:	str	r3, [r0, #8]
   2086c:	ldr	r3, [r5, #48]	; 0x30
   20870:	tst	r3, #2
   20874:	moveq	r8, #0
   20878:	beq	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   2087c:	mov	r0, r4
   20880:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   20884:	mov	r8, #0
   20888:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   2088c:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   20890:	mov	r1, r5
   20894:	ldr	r0, [r4, #8]
   20898:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   2089c:	mov	r0, r5
   208a0:	bl	101d8 <myhtml_token_adjust_svg_attributes@plt>
   208a4:	mov	r0, r5
   208a8:	bl	10be0 <myhtml_token_adjust_foreign_attributes@plt>
   208ac:	mov	r1, r5
   208b0:	mov	r0, r4
   208b4:	bl	10d84 <myhtml_tree_node_insert_foreign_element@plt>
   208b8:	mov	r3, #3
   208bc:	str	r3, [r0, #8]
   208c0:	ldr	r3, [r5, #48]	; 0x30
   208c4:	tst	r3, #2
   208c8:	moveq	r8, #0
   208cc:	beq	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   208d0:	mov	r0, r4
   208d4:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   208d8:	mov	r8, #0
   208dc:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   208e0:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   208e4:	mov	r1, r5
   208e8:	mov	r0, r4
   208ec:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   208f0:	mov	r8, #0
   208f4:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   208f8:	mov	r8, #0
   208fc:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   20900:	mov	r8, #0
   20904:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   20908:	mov	r8, #0
   2090c:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   20910:	mov	r8, #0
   20914:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   20918:	mov	r8, #0
   2091c:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   20920:	mov	r8, #0
   20924:	b	1f218 <myhtml_insertion_mode_in_body@@Base+0x25c>
   20928:	ldrdeq	sp, [sp], -r8
   2092c:	andeq	r9, r1, r8, lsl #24

00020930 <myhtml_insertion_mode_before_head@@Base>:
   20930:	push	{r4, lr}
   20934:	mov	r4, r0
   20938:	ldr	r3, [r1, #48]	; 0x30
   2093c:	tst	r3, #1
   20940:	beq	20994 <myhtml_insertion_mode_before_head@@Base+0x64>
   20944:	ldr	r3, [r1]
   20948:	cmp	r3, #61	; 0x3d
   2094c:	beq	20970 <myhtml_insertion_mode_before_head@@Base+0x40>
   20950:	bhi	20968 <myhtml_insertion_mode_before_head@@Base+0x38>
   20954:	sub	r3, r3, #23
   20958:	cmp	r3, #1
   2095c:	bls	20970 <myhtml_insertion_mode_before_head@@Base+0x40>
   20960:	mov	r0, #0
   20964:	pop	{r4, pc}
   20968:	cmp	r3, #65	; 0x41
   2096c:	bne	20960 <myhtml_insertion_mode_before_head@@Base+0x30>
   20970:	mov	r2, #1
   20974:	mov	r1, #61	; 0x3d
   20978:	mov	r0, r4
   2097c:	bl	10970 <myhtml_tree_node_insert@plt>
   20980:	str	r0, [r4, #92]	; 0x5c
   20984:	mov	r3, #3
   20988:	str	r3, [r4, #168]	; 0xa8
   2098c:	mov	r0, #1
   20990:	pop	{r4, pc}
   20994:	ldr	r3, [r1]
   20998:	cmp	r3, #3
   2099c:	beq	20a58 <myhtml_insertion_mode_before_head@@Base+0x128>
   209a0:	bhi	209c4 <myhtml_insertion_mode_before_head@@Base+0x94>
   209a4:	cmp	r3, #1
   209a8:	beq	209dc <myhtml_insertion_mode_before_head@@Base+0xac>
   209ac:	cmp	r3, #2
   209b0:	bne	20a34 <myhtml_insertion_mode_before_head@@Base+0x104>
   209b4:	mov	r2, #0
   209b8:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   209bc:	mov	r0, #0
   209c0:	pop	{r4, pc}
   209c4:	cmp	r3, #61	; 0x3d
   209c8:	beq	20a1c <myhtml_insertion_mode_before_head@@Base+0xec>
   209cc:	cmp	r3, #65	; 0x41
   209d0:	bne	20a34 <myhtml_insertion_mode_before_head@@Base+0x104>
   209d4:	bl	10640 <myhtml_insertion_mode_in_body@plt>
   209d8:	pop	{r4, pc}
   209dc:	ldr	r3, [r1, #48]	; 0x30
   209e0:	tst	r3, #8
   209e4:	beq	209f0 <myhtml_insertion_mode_before_head@@Base+0xc0>
   209e8:	mov	r0, #0
   209ec:	pop	{r4, pc}
   209f0:	ldr	r0, [r0, #8]
   209f4:	bl	10118 <myhtml_insertion_fix_emit_for_text_begin_ws@plt>
   209f8:	mov	r2, #1
   209fc:	mov	r1, #61	; 0x3d
   20a00:	mov	r0, r4
   20a04:	bl	10970 <myhtml_tree_node_insert@plt>
   20a08:	str	r0, [r4, #92]	; 0x5c
   20a0c:	mov	r3, #3
   20a10:	str	r3, [r4, #168]	; 0xa8
   20a14:	mov	r0, #1
   20a18:	pop	{r4, pc}
   20a1c:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   20a20:	str	r0, [r4, #92]	; 0x5c
   20a24:	mov	r3, #3
   20a28:	str	r3, [r4, #168]	; 0xa8
   20a2c:	mov	r0, #0
   20a30:	pop	{r4, pc}
   20a34:	mov	r2, #1
   20a38:	mov	r1, #61	; 0x3d
   20a3c:	mov	r0, r4
   20a40:	bl	10970 <myhtml_tree_node_insert@plt>
   20a44:	str	r0, [r4, #92]	; 0x5c
   20a48:	mov	r3, #3
   20a4c:	str	r3, [r4, #168]	; 0xa8
   20a50:	mov	r0, #1
   20a54:	pop	{r4, pc}
   20a58:	mov	r0, #0
   20a5c:	pop	{r4, pc}

00020a60 <myhtml_insertion_mode_in_head@@Base>:
   20a60:	push	{r4, r5, r6, r7, lr}
   20a64:	sub	sp, sp, #12
   20a68:	mov	r4, r0
   20a6c:	mov	r5, r1
   20a70:	ldr	r3, [r1, #48]	; 0x30
   20a74:	tst	r3, #1
   20a78:	beq	20b40 <myhtml_insertion_mode_in_head@@Base+0xe0>
   20a7c:	ldr	r3, [r1]
   20a80:	cmp	r3, #61	; 0x3d
   20a84:	beq	20b28 <myhtml_insertion_mode_in_head@@Base+0xc8>
   20a88:	bls	20b04 <myhtml_insertion_mode_in_head@@Base+0xa4>
   20a8c:	cmp	r3, #65	; 0x41
   20a90:	beq	20b10 <myhtml_insertion_mode_in_head@@Base+0xb0>
   20a94:	cmp	r3, #128	; 0x80
   20a98:	bne	20f44 <myhtml_insertion_mode_in_head@@Base+0x4e4>
   20a9c:	mov	r3, #0
   20aa0:	mov	r2, #1
   20aa4:	mov	r1, #128	; 0x80
   20aa8:	bl	fcb0 <myhtml_tree_open_elements_find_by_tag_idx_reverse@plt>
   20aac:	cmp	r0, #0
   20ab0:	moveq	r0, #0
   20ab4:	beq	20b38 <myhtml_insertion_mode_in_head@@Base+0xd8>
   20ab8:	mov	r2, #0
   20abc:	mov	r1, r2
   20ac0:	mov	r0, r4
   20ac4:	bl	fe30 <myhtml_tree_generate_all_implied_end_tags@plt>
   20ac8:	mov	r0, r4
   20acc:	bl	10628 <myhtml_tree_current_node@plt>
   20ad0:	mov	r3, #0
   20ad4:	mov	r2, #1
   20ad8:	mov	r1, #128	; 0x80
   20adc:	mov	r0, r4
   20ae0:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   20ae4:	mov	r0, r4
   20ae8:	bl	10e5c <myhtml_tree_active_formatting_up_to_last_marker@plt>
   20aec:	mov	r0, r4
   20af0:	bl	109dc <myhtml_tree_template_insertion_pop@plt>
   20af4:	mov	r0, r4
   20af8:	bl	10730 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   20afc:	mov	r0, #0
   20b00:	b	20b38 <myhtml_insertion_mode_in_head@@Base+0xd8>
   20b04:	sub	r3, r3, #23
   20b08:	cmp	r3, #1
   20b0c:	bhi	20f44 <myhtml_insertion_mode_in_head@@Base+0x4e4>
   20b10:	mov	r0, r4
   20b14:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   20b18:	mov	r3, #5
   20b1c:	str	r3, [r4, #168]	; 0xa8
   20b20:	mov	r0, #1
   20b24:	b	20b38 <myhtml_insertion_mode_in_head@@Base+0xd8>
   20b28:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   20b2c:	mov	r3, #5
   20b30:	str	r3, [r4, #168]	; 0xa8
   20b34:	mov	r0, #0
   20b38:	add	sp, sp, #12
   20b3c:	pop	{r4, r5, r6, r7, pc}
   20b40:	ldr	r3, [r1]
   20b44:	sub	r3, r3, #1
   20b48:	cmp	r3, #133	; 0x85
   20b4c:	addls	pc, pc, r3, lsl #2
   20b50:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20b54:	b	20d6c <myhtml_insertion_mode_in_head@@Base+0x30c>
   20b58:	b	20db0 <myhtml_insertion_mode_in_head@@Base+0x350>
   20b5c:	b	20f4c <myhtml_insertion_mode_in_head@@Base+0x4ec>
   20b60:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20b64:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20b68:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20b6c:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20b70:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20b74:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20b78:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20b7c:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20b80:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20b84:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20b88:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20b8c:	b	20dc8 <myhtml_insertion_mode_in_head@@Base+0x368>
   20b90:	b	20dc8 <myhtml_insertion_mode_in_head@@Base+0x368>
   20b94:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20b98:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20b9c:	b	20dc8 <myhtml_insertion_mode_in_head@@Base+0x368>
   20ba0:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20ba4:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20ba8:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20bac:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20bb0:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20bb4:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20bb8:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20bbc:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20bc0:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20bc4:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20bc8:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20bcc:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20bd0:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20bd4:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20bd8:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20bdc:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20be0:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20be4:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20be8:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20bec:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20bf0:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20bf4:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20bf8:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20bfc:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20c00:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20c04:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20c08:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20c0c:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20c10:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20c14:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20c18:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20c1c:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20c20:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20c24:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20c28:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20c2c:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20c30:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20c34:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20c38:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20c3c:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20c40:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20c44:	b	20f4c <myhtml_insertion_mode_in_head@@Base+0x4ec>
   20c48:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20c4c:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20c50:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20c54:	b	20dc0 <myhtml_insertion_mode_in_head@@Base+0x360>
   20c58:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20c5c:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20c60:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20c64:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20c68:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20c6c:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20c70:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20c74:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20c78:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20c7c:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20c80:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20c84:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20c88:	b	20dc8 <myhtml_insertion_mode_in_head@@Base+0x368>
   20c8c:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20c90:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20c94:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20c98:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20c9c:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20ca0:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20ca4:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20ca8:	b	20ddc <myhtml_insertion_mode_in_head@@Base+0x37c>
   20cac:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20cb0:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20cb4:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20cb8:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20cbc:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20cc0:	b	20e58 <myhtml_insertion_mode_in_head@@Base+0x3f8>
   20cc4:	b	20e14 <myhtml_insertion_mode_in_head@@Base+0x3b4>
   20cc8:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20ccc:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20cd0:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20cd4:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20cd8:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20cdc:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20ce0:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20ce4:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20ce8:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20cec:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20cf0:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20cf4:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20cf8:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20cfc:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20d00:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20d04:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20d08:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20d0c:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20d10:	b	20e7c <myhtml_insertion_mode_in_head@@Base+0x41c>
   20d14:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20d18:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20d1c:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20d20:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20d24:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20d28:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20d2c:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20d30:	b	20e58 <myhtml_insertion_mode_in_head@@Base+0x3f8>
   20d34:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20d38:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20d3c:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20d40:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20d44:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20d48:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20d4c:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20d50:	b	20ef0 <myhtml_insertion_mode_in_head@@Base+0x490>
   20d54:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20d58:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20d5c:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20d60:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20d64:	b	20f30 <myhtml_insertion_mode_in_head@@Base+0x4d0>
   20d68:	b	20df0 <myhtml_insertion_mode_in_head@@Base+0x390>
   20d6c:	ldr	r3, [r1, #48]	; 0x30
   20d70:	tst	r3, #8
   20d74:	bne	20da4 <myhtml_insertion_mode_in_head@@Base+0x344>
   20d78:	bl	fef0 <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   20d7c:	subs	r1, r0, #0
   20d80:	beq	20d8c <myhtml_insertion_mode_in_head@@Base+0x32c>
   20d84:	mov	r0, r4
   20d88:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   20d8c:	mov	r0, r4
   20d90:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   20d94:	mov	r3, #5
   20d98:	str	r3, [r4, #168]	; 0xa8
   20d9c:	mov	r0, #1
   20da0:	b	20b38 <myhtml_insertion_mode_in_head@@Base+0xd8>
   20da4:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   20da8:	mov	r0, #0
   20dac:	b	20b38 <myhtml_insertion_mode_in_head@@Base+0xd8>
   20db0:	mov	r2, #0
   20db4:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   20db8:	mov	r0, #0
   20dbc:	b	20b38 <myhtml_insertion_mode_in_head@@Base+0xd8>
   20dc0:	bl	10640 <myhtml_insertion_mode_in_body@plt>
   20dc4:	b	20b38 <myhtml_insertion_mode_in_head@@Base+0xd8>
   20dc8:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   20dcc:	mov	r0, r4
   20dd0:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   20dd4:	mov	r0, #0
   20dd8:	b	20b38 <myhtml_insertion_mode_in_head@@Base+0xd8>
   20ddc:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   20de0:	mov	r0, r4
   20de4:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   20de8:	mov	r0, #0
   20dec:	b	20b38 <myhtml_insertion_mode_in_head@@Base+0xd8>
   20df0:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   20df4:	ldr	r3, [r4, #168]	; 0xa8
   20df8:	str	r3, [r4, #172]	; 0xac
   20dfc:	mov	r3, #7
   20e00:	str	r3, [r4, #168]	; 0xa8
   20e04:	mov	r3, #2
   20e08:	str	r3, [r4, #164]	; 0xa4
   20e0c:	mov	r0, #0
   20e10:	b	20b38 <myhtml_insertion_mode_in_head@@Base+0xd8>
   20e14:	ldr	r3, [r0, #180]	; 0xb4
   20e18:	tst	r3, #1
   20e1c:	beq	20e44 <myhtml_insertion_mode_in_head@@Base+0x3e4>
   20e20:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   20e24:	ldr	r3, [r4, #168]	; 0xa8
   20e28:	str	r3, [r4, #172]	; 0xac
   20e2c:	mov	r3, #7
   20e30:	str	r3, [r4, #168]	; 0xa8
   20e34:	mov	r3, #4
   20e38:	str	r3, [r4, #164]	; 0xa4
   20e3c:	mov	r0, #0
   20e40:	b	20b38 <myhtml_insertion_mode_in_head@@Base+0xd8>
   20e44:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   20e48:	mov	r3, #4
   20e4c:	str	r3, [r4, #168]	; 0xa8
   20e50:	mov	r0, #0
   20e54:	b	20b38 <myhtml_insertion_mode_in_head@@Base+0xd8>
   20e58:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   20e5c:	ldr	r3, [r4, #168]	; 0xa8
   20e60:	str	r3, [r4, #172]	; 0xac
   20e64:	mov	r3, #7
   20e68:	str	r3, [r4, #168]	; 0xa8
   20e6c:	mov	r3, #4
   20e70:	str	r3, [r4, #164]	; 0xa4
   20e74:	mov	r0, #0
   20e78:	b	20b38 <myhtml_insertion_mode_in_head@@Base+0xd8>
   20e7c:	add	r2, sp, #4
   20e80:	mov	r1, #0
   20e84:	bl	10e80 <myhtml_tree_appropriate_place_inserting@plt>
   20e88:	mov	r7, r0
   20e8c:	mov	r0, r4
   20e90:	bl	ffe0 <myhtml_tree_node_create@plt>
   20e94:	mov	r6, r0
   20e98:	mov	r3, #112	; 0x70
   20e9c:	str	r3, [r0, #4]
   20ea0:	str	r5, [r0, #32]
   20ea4:	mov	r3, #1
   20ea8:	str	r3, [r0, #8]
   20eac:	mov	r3, #3
   20eb0:	str	r3, [r0]
   20eb4:	ldr	r2, [sp, #4]
   20eb8:	mov	r1, r0
   20ebc:	mov	r0, r7
   20ec0:	bl	10358 <myhtml_tree_node_insert_by_mode@plt>
   20ec4:	mov	r1, r6
   20ec8:	mov	r0, r4
   20ecc:	bl	10988 <myhtml_tree_open_elements_append@plt>
   20ed0:	ldr	r3, [r4, #168]	; 0xa8
   20ed4:	str	r3, [r4, #172]	; 0xac
   20ed8:	mov	r3, #7
   20edc:	str	r3, [r4, #168]	; 0xa8
   20ee0:	mov	r3, #5
   20ee4:	str	r3, [r4, #164]	; 0xa4
   20ee8:	mov	r0, #0
   20eec:	b	20b38 <myhtml_insertion_mode_in_head@@Base+0xd8>
   20ef0:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   20ef4:	ldr	r3, [r4]
   20ef8:	ldr	r1, [r3, #36]	; 0x24
   20efc:	mov	r0, r4
   20f00:	bl	100d0 <myhtml_tree_active_formatting_append@plt>
   20f04:	ldr	r3, [r4, #180]	; 0xb4
   20f08:	ldr	r2, [r4, #180]	; 0xb4
   20f0c:	and	r3, r3, #2
   20f10:	eor	r3, r3, r2
   20f14:	str	r3, [r4, #180]	; 0xb4
   20f18:	mov	r1, #17
   20f1c:	str	r1, [r4, #168]	; 0xa8
   20f20:	mov	r0, r4
   20f24:	bl	ffb0 <myhtml_tree_template_insertion_append@plt>
   20f28:	mov	r0, #0
   20f2c:	b	20b38 <myhtml_insertion_mode_in_head@@Base+0xd8>
   20f30:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   20f34:	mov	r3, #5
   20f38:	str	r3, [r4, #168]	; 0xa8
   20f3c:	mov	r0, #1
   20f40:	b	20b38 <myhtml_insertion_mode_in_head@@Base+0xd8>
   20f44:	mov	r0, #0
   20f48:	b	20b38 <myhtml_insertion_mode_in_head@@Base+0xd8>
   20f4c:	mov	r0, #0
   20f50:	b	20b38 <myhtml_insertion_mode_in_head@@Base+0xd8>

00020f54 <myhtml_insertion_mode_in_template@@Base>:
   20f54:	push	{r4, lr}
   20f58:	mov	r4, r0
   20f5c:	ldr	r3, [r1, #48]	; 0x30
   20f60:	tst	r3, #1
   20f64:	beq	20f84 <myhtml_insertion_mode_in_template@@Base+0x30>
   20f68:	ldr	r3, [r1]
   20f6c:	cmp	r3, #128	; 0x80
   20f70:	beq	20f7c <myhtml_insertion_mode_in_template@@Base+0x28>
   20f74:	mov	r0, #0
   20f78:	pop	{r4, pc}
   20f7c:	bl	10640 <myhtml_insertion_mode_in_body@plt>
   20f80:	pop	{r4, pc}
   20f84:	ldr	r3, [r1]
   20f88:	cmp	r3, #92	; 0x5c
   20f8c:	beq	2106c <myhtml_insertion_mode_in_template@@Base+0x118>
   20f90:	bls	21000 <myhtml_insertion_mode_in_template@@Base+0xac>
   20f94:	cmp	r3, #130	; 0x82
   20f98:	beq	21114 <myhtml_insertion_mode_in_template@@Base+0x1c0>
   20f9c:	bls	2108c <myhtml_insertion_mode_in_template@@Base+0x138>
   20fa0:	cmp	r3, #134	; 0x86
   20fa4:	beq	2106c <myhtml_insertion_mode_in_template@@Base+0x118>
   20fa8:	bls	21104 <myhtml_insertion_mode_in_template@@Base+0x1b0>
   20fac:	cmp	r3, #135	; 0x87
   20fb0:	beq	21138 <myhtml_insertion_mode_in_template@@Base+0x1e4>
   20fb4:	cmp	r3, #251	; 0xfb
   20fb8:	bne	210d4 <myhtml_insertion_mode_in_template@@Base+0x180>
   20fbc:	mov	r3, #0
   20fc0:	mov	r2, #1
   20fc4:	mov	r1, #128	; 0x80
   20fc8:	bl	107fc <myhtml_tree_open_elements_find_by_tag_idx@plt>
   20fcc:	subs	r1, r0, #0
   20fd0:	beq	21158 <myhtml_insertion_mode_in_template@@Base+0x204>
   20fd4:	mov	r2, #0
   20fd8:	mov	r0, r4
   20fdc:	bl	1013c <myhtml_tree_open_elements_pop_until_by_node@plt>
   20fe0:	mov	r0, r4
   20fe4:	bl	10e5c <myhtml_tree_active_formatting_up_to_last_marker@plt>
   20fe8:	mov	r0, r4
   20fec:	bl	109dc <myhtml_tree_template_insertion_pop@plt>
   20ff0:	mov	r0, r4
   20ff4:	bl	10730 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   20ff8:	mov	r0, #1
   20ffc:	pop	{r4, pc}
   21000:	cmp	r3, #19
   21004:	beq	2106c <myhtml_insertion_mode_in_template@@Base+0x118>
   21008:	bls	21048 <myhtml_insertion_mode_in_template@@Base+0xf4>
   2100c:	cmp	r3, #32
   21010:	beq	21114 <myhtml_insertion_mode_in_template@@Base+0x1c0>
   21014:	bhi	21078 <myhtml_insertion_mode_in_template@@Base+0x124>
   21018:	cmp	r3, #27
   2101c:	beq	21114 <myhtml_insertion_mode_in_template@@Base+0x1c0>
   21020:	cmp	r3, #31
   21024:	bne	210d4 <myhtml_insertion_mode_in_template@@Base+0x180>
   21028:	bl	109dc <myhtml_tree_template_insertion_pop@plt>
   2102c:	mov	r1, #11
   21030:	mov	r0, r4
   21034:	bl	ffb0 <myhtml_tree_template_insertion_append@plt>
   21038:	mov	r3, #11
   2103c:	str	r3, [r4, #168]	; 0xa8
   21040:	mov	r0, #1
   21044:	pop	{r4, pc}
   21048:	cmp	r3, #1
   2104c:	bcc	210d4 <myhtml_insertion_mode_in_template@@Base+0x180>
   21050:	cmp	r3, #3
   21054:	bhi	21060 <myhtml_insertion_mode_in_template@@Base+0x10c>
   21058:	bl	10640 <myhtml_insertion_mode_in_body@plt>
   2105c:	pop	{r4, pc}
   21060:	sub	r3, r3, #15
   21064:	cmp	r3, #1
   21068:	bhi	210d4 <myhtml_insertion_mode_in_template@@Base+0x180>
   2106c:	mov	r0, r4
   21070:	bl	10058 <myhtml_insertion_mode_in_head@plt>
   21074:	pop	{r4, pc}
   21078:	cmp	r3, #78	; 0x4e
   2107c:	beq	2106c <myhtml_insertion_mode_in_template@@Base+0x118>
   21080:	cmp	r3, #86	; 0x56
   21084:	bne	210d4 <myhtml_insertion_mode_in_template@@Base+0x180>
   21088:	b	2106c <myhtml_insertion_mode_in_template@@Base+0x118>
   2108c:	cmp	r3, #126	; 0x7e
   21090:	beq	21114 <myhtml_insertion_mode_in_template@@Base+0x1c0>
   21094:	bls	210c4 <myhtml_insertion_mode_in_template@@Base+0x170>
   21098:	cmp	r3, #127	; 0x7f
   2109c:	bne	210f8 <myhtml_insertion_mode_in_template@@Base+0x1a4>
   210a0:	mov	r0, r4
   210a4:	bl	109dc <myhtml_tree_template_insertion_pop@plt>
   210a8:	mov	r1, #13
   210ac:	mov	r0, r4
   210b0:	bl	ffb0 <myhtml_tree_template_insertion_append@plt>
   210b4:	mov	r3, #13
   210b8:	str	r3, [r4, #168]	; 0xa8
   210bc:	mov	r0, #1
   210c0:	pop	{r4, pc}
   210c4:	cmp	r3, #112	; 0x70
   210c8:	beq	2106c <myhtml_insertion_mode_in_template@@Base+0x118>
   210cc:	cmp	r3, #120	; 0x78
   210d0:	beq	2106c <myhtml_insertion_mode_in_template@@Base+0x118>
   210d4:	mov	r0, r4
   210d8:	bl	109dc <myhtml_tree_template_insertion_pop@plt>
   210dc:	mov	r1, #6
   210e0:	mov	r0, r4
   210e4:	bl	ffb0 <myhtml_tree_template_insertion_append@plt>
   210e8:	mov	r3, #6
   210ec:	str	r3, [r4, #168]	; 0xa8
   210f0:	mov	r0, #1
   210f4:	pop	{r4, pc}
   210f8:	cmp	r3, #128	; 0x80
   210fc:	bne	210d4 <myhtml_insertion_mode_in_template@@Base+0x180>
   21100:	b	2106c <myhtml_insertion_mode_in_template@@Base+0x118>
   21104:	cmp	r3, #131	; 0x83
   21108:	beq	210a0 <myhtml_insertion_mode_in_template@@Base+0x14c>
   2110c:	cmp	r3, #132	; 0x84
   21110:	bne	210d4 <myhtml_insertion_mode_in_template@@Base+0x180>
   21114:	mov	r0, r4
   21118:	bl	109dc <myhtml_tree_template_insertion_pop@plt>
   2111c:	mov	r1, #8
   21120:	mov	r0, r4
   21124:	bl	ffb0 <myhtml_tree_template_insertion_append@plt>
   21128:	mov	r3, #8
   2112c:	str	r3, [r4, #168]	; 0xa8
   21130:	mov	r0, #1
   21134:	pop	{r4, pc}
   21138:	bl	109dc <myhtml_tree_template_insertion_pop@plt>
   2113c:	mov	r1, #12
   21140:	mov	r0, r4
   21144:	bl	ffb0 <myhtml_tree_template_insertion_append@plt>
   21148:	mov	r3, #12
   2114c:	str	r3, [r4, #168]	; 0xa8
   21150:	mov	r0, #1
   21154:	pop	{r4, pc}
   21158:	mov	r0, r4
   2115c:	bl	10310 <myhtml_rules_stop_parsing@plt>
   21160:	mov	r0, #0
   21164:	pop	{r4, pc}

00021168 <myhtml_insertion_mode_in_head_noscript@@Base>:
   21168:	push	{r4, lr}
   2116c:	mov	r4, r0
   21170:	ldr	r3, [r1, #48]	; 0x30
   21174:	tst	r3, #1
   21178:	beq	211b8 <myhtml_insertion_mode_in_head_noscript@@Base+0x50>
   2117c:	ldr	r3, [r1]
   21180:	cmp	r3, #24
   21184:	beq	211a4 <myhtml_insertion_mode_in_head_noscript@@Base+0x3c>
   21188:	cmp	r3, #93	; 0x5d
   2118c:	bne	213f8 <myhtml_insertion_mode_in_head_noscript@@Base+0x290>
   21190:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   21194:	mov	r3, #3
   21198:	str	r3, [r4, #168]	; 0xa8
   2119c:	mov	r0, #0
   211a0:	pop	{r4, pc}
   211a4:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   211a8:	mov	r3, #3
   211ac:	str	r3, [r4, #168]	; 0xa8
   211b0:	mov	r0, #1
   211b4:	pop	{r4, pc}
   211b8:	ldr	r3, [r1]
   211bc:	sub	r3, r3, #1
   211c0:	cmp	r3, #119	; 0x77
   211c4:	addls	pc, pc, r3, lsl #2
   211c8:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   211cc:	b	213b4 <myhtml_insertion_mode_in_head_noscript@@Base+0x24c>
   211d0:	b	213dc <myhtml_insertion_mode_in_head_noscript@@Base+0x274>
   211d4:	b	21400 <myhtml_insertion_mode_in_head_noscript@@Base+0x298>
   211d8:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   211dc:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   211e0:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   211e4:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   211e8:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   211ec:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   211f0:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   211f4:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   211f8:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   211fc:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21200:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21204:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21208:	b	213dc <myhtml_insertion_mode_in_head_noscript@@Base+0x274>
   2120c:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21210:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21214:	b	213dc <myhtml_insertion_mode_in_head_noscript@@Base+0x274>
   21218:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   2121c:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21220:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21224:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21228:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   2122c:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21230:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21234:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21238:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   2123c:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21240:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21244:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21248:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   2124c:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21250:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21254:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21258:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   2125c:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21260:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21264:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21268:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   2126c:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21270:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21274:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21278:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   2127c:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21280:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21284:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21288:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   2128c:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21290:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21294:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21298:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   2129c:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   212a0:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   212a4:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   212a8:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   212ac:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   212b0:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   212b4:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   212b8:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   212bc:	b	21400 <myhtml_insertion_mode_in_head_noscript@@Base+0x298>
   212c0:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   212c4:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   212c8:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   212cc:	b	213ac <myhtml_insertion_mode_in_head_noscript@@Base+0x244>
   212d0:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   212d4:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   212d8:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   212dc:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   212e0:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   212e4:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   212e8:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   212ec:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   212f0:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   212f4:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   212f8:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   212fc:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21300:	b	213dc <myhtml_insertion_mode_in_head_noscript@@Base+0x274>
   21304:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21308:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   2130c:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21310:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21314:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21318:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   2131c:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21320:	b	213dc <myhtml_insertion_mode_in_head_noscript@@Base+0x274>
   21324:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21328:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   2132c:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21330:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21334:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21338:	b	213dc <myhtml_insertion_mode_in_head_noscript@@Base+0x274>
   2133c:	b	21400 <myhtml_insertion_mode_in_head_noscript@@Base+0x298>
   21340:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21344:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21348:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   2134c:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21350:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21354:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21358:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   2135c:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21360:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21364:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21368:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   2136c:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21370:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21374:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21378:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   2137c:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21380:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21384:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21388:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   2138c:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21390:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21394:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   21398:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   2139c:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   213a0:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   213a4:	b	213e4 <myhtml_insertion_mode_in_head_noscript@@Base+0x27c>
   213a8:	b	213dc <myhtml_insertion_mode_in_head_noscript@@Base+0x274>
   213ac:	bl	10640 <myhtml_insertion_mode_in_body@plt>
   213b0:	pop	{r4, pc}
   213b4:	ldr	r3, [r1, #48]	; 0x30
   213b8:	tst	r3, #8
   213bc:	beq	213c8 <myhtml_insertion_mode_in_head_noscript@@Base+0x260>
   213c0:	bl	10058 <myhtml_insertion_mode_in_head@plt>
   213c4:	pop	{r4, pc}
   213c8:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   213cc:	mov	r3, #3
   213d0:	str	r3, [r4, #168]	; 0xa8
   213d4:	mov	r0, #1
   213d8:	pop	{r4, pc}
   213dc:	bl	10058 <myhtml_insertion_mode_in_head@plt>
   213e0:	pop	{r4, pc}
   213e4:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   213e8:	mov	r3, #3
   213ec:	str	r3, [r4, #168]	; 0xa8
   213f0:	mov	r0, #1
   213f4:	pop	{r4, pc}
   213f8:	mov	r0, #0
   213fc:	pop	{r4, pc}
   21400:	mov	r0, #0
   21404:	pop	{r4, pc}

00021408 <myhtml_insertion_mode_after_head@@Base>:
   21408:	push	{r4, r5, r6, lr}
   2140c:	mov	r5, r0
   21410:	mov	r4, r1
   21414:	ldr	r3, [r1, #48]	; 0x30
   21418:	tst	r3, #1
   2141c:	beq	21470 <myhtml_insertion_mode_after_head@@Base+0x68>
   21420:	ldr	r3, [r1]
   21424:	cmp	r3, #65	; 0x41
   21428:	beq	2144c <myhtml_insertion_mode_after_head@@Base+0x44>
   2142c:	bls	21440 <myhtml_insertion_mode_after_head@@Base+0x38>
   21430:	cmp	r3, #128	; 0x80
   21434:	bne	2178c <myhtml_insertion_mode_after_head@@Base+0x384>
   21438:	bl	10058 <myhtml_insertion_mode_in_head@plt>
   2143c:	pop	{r4, r5, r6, pc}
   21440:	sub	r3, r3, #23
   21444:	cmp	r3, #1
   21448:	bhi	2178c <myhtml_insertion_mode_after_head@@Base+0x384>
   2144c:	mov	r2, #1
   21450:	mov	r1, #23
   21454:	mov	r0, r5
   21458:	bl	10970 <myhtml_tree_node_insert@plt>
   2145c:	str	r0, [r5, #100]	; 0x64
   21460:	mov	r3, #6
   21464:	str	r3, [r5, #168]	; 0xa8
   21468:	mov	r0, #1
   2146c:	pop	{r4, r5, r6, pc}
   21470:	ldr	r3, [r1]
   21474:	sub	r3, r3, #1
   21478:	cmp	r3, #133	; 0x85
   2147c:	addls	pc, pc, r3, lsl #2
   21480:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21484:	b	2169c <myhtml_insertion_mode_after_head@@Base+0x294>
   21488:	b	216ec <myhtml_insertion_mode_after_head@@Base+0x2e4>
   2148c:	b	21794 <myhtml_insertion_mode_after_head@@Base+0x38c>
   21490:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21494:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21498:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   2149c:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   214a0:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   214a4:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   214a8:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   214ac:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   214b0:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   214b4:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   214b8:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   214bc:	b	21744 <myhtml_insertion_mode_after_head@@Base+0x33c>
   214c0:	b	21744 <myhtml_insertion_mode_after_head@@Base+0x33c>
   214c4:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   214c8:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   214cc:	b	21744 <myhtml_insertion_mode_after_head@@Base+0x33c>
   214d0:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   214d4:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   214d8:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   214dc:	b	21704 <myhtml_insertion_mode_after_head@@Base+0x2fc>
   214e0:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   214e4:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   214e8:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   214ec:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   214f0:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   214f4:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   214f8:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   214fc:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21500:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21504:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21508:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   2150c:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21510:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21514:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21518:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   2151c:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21520:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21524:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21528:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   2152c:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21530:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21534:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21538:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   2153c:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21540:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21544:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21548:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   2154c:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21550:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21554:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21558:	b	21730 <myhtml_insertion_mode_after_head@@Base+0x328>
   2155c:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21560:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21564:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21568:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   2156c:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21570:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21574:	b	21794 <myhtml_insertion_mode_after_head@@Base+0x38c>
   21578:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   2157c:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21580:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21584:	b	216fc <myhtml_insertion_mode_after_head@@Base+0x2f4>
   21588:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   2158c:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21590:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21594:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21598:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   2159c:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   215a0:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   215a4:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   215a8:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   215ac:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   215b0:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   215b4:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   215b8:	b	21744 <myhtml_insertion_mode_after_head@@Base+0x33c>
   215bc:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   215c0:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   215c4:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   215c8:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   215cc:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   215d0:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   215d4:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   215d8:	b	21744 <myhtml_insertion_mode_after_head@@Base+0x33c>
   215dc:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   215e0:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   215e4:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   215e8:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   215ec:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   215f0:	b	21744 <myhtml_insertion_mode_after_head@@Base+0x33c>
   215f4:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   215f8:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   215fc:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21600:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21604:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21608:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   2160c:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21610:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21614:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21618:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   2161c:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21620:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21624:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21628:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   2162c:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21630:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21634:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21638:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   2163c:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21640:	b	21744 <myhtml_insertion_mode_after_head@@Base+0x33c>
   21644:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21648:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   2164c:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21650:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21654:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21658:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   2165c:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21660:	b	21744 <myhtml_insertion_mode_after_head@@Base+0x33c>
   21664:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21668:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   2166c:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21670:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21674:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21678:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   2167c:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21680:	b	21744 <myhtml_insertion_mode_after_head@@Base+0x33c>
   21684:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21688:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   2168c:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21690:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21694:	b	2176c <myhtml_insertion_mode_after_head@@Base+0x364>
   21698:	b	21744 <myhtml_insertion_mode_after_head@@Base+0x33c>
   2169c:	ldr	r3, [r1, #48]	; 0x30
   216a0:	tst	r3, #8
   216a4:	bne	216e0 <myhtml_insertion_mode_after_head@@Base+0x2d8>
   216a8:	bl	fef0 <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   216ac:	subs	r1, r0, #0
   216b0:	beq	216bc <myhtml_insertion_mode_after_head@@Base+0x2b4>
   216b4:	mov	r0, r5
   216b8:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   216bc:	mov	r2, #1
   216c0:	mov	r1, #23
   216c4:	mov	r0, r5
   216c8:	bl	10970 <myhtml_tree_node_insert@plt>
   216cc:	str	r0, [r5, #100]	; 0x64
   216d0:	mov	r3, #6
   216d4:	str	r3, [r5, #168]	; 0xa8
   216d8:	mov	r0, #1
   216dc:	pop	{r4, r5, r6, pc}
   216e0:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   216e4:	mov	r0, #0
   216e8:	pop	{r4, r5, r6, pc}
   216ec:	mov	r2, #0
   216f0:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   216f4:	mov	r0, #0
   216f8:	pop	{r4, r5, r6, pc}
   216fc:	bl	10640 <myhtml_insertion_mode_in_body@plt>
   21700:	pop	{r4, r5, r6, pc}
   21704:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   21708:	str	r0, [r5, #100]	; 0x64
   2170c:	ldr	r3, [r5, #180]	; 0xb4
   21710:	ldr	r2, [r5, #180]	; 0xb4
   21714:	and	r3, r3, #2
   21718:	eor	r3, r3, r2
   2171c:	str	r3, [r5, #180]	; 0xb4
   21720:	mov	r3, #6
   21724:	str	r3, [r5, #168]	; 0xa8
   21728:	mov	r0, #0
   2172c:	pop	{r4, r5, r6, pc}
   21730:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   21734:	mov	r3, #19
   21738:	str	r3, [r5, #168]	; 0xa8
   2173c:	mov	r0, #0
   21740:	pop	{r4, r5, r6, pc}
   21744:	ldr	r1, [r0, #92]	; 0x5c
   21748:	bl	10988 <myhtml_tree_open_elements_append@plt>
   2174c:	mov	r1, r4
   21750:	mov	r0, r5
   21754:	bl	10058 <myhtml_insertion_mode_in_head@plt>
   21758:	ldr	r1, [r5, #92]	; 0x5c
   2175c:	mov	r0, r5
   21760:	bl	10238 <myhtml_tree_open_elements_remove@plt>
   21764:	mov	r0, #0
   21768:	pop	{r4, r5, r6, pc}
   2176c:	mov	r2, #1
   21770:	mov	r1, #23
   21774:	bl	10970 <myhtml_tree_node_insert@plt>
   21778:	str	r0, [r5, #100]	; 0x64
   2177c:	mov	r3, #6
   21780:	str	r3, [r5, #168]	; 0xa8
   21784:	mov	r0, #1
   21788:	pop	{r4, r5, r6, pc}
   2178c:	mov	r0, #0
   21790:	pop	{r4, r5, r6, pc}
   21794:	mov	r0, #0
   21798:	pop	{r4, r5, r6, pc}

0002179c <myhtml_insertion_mode_in_table@@Base>:
   2179c:	push	{r4, r5, lr}
   217a0:	sub	sp, sp, #12
   217a4:	mov	r5, r0
   217a8:	mov	r4, r1
   217ac:	ldr	r3, [r1, #48]	; 0x30
   217b0:	tst	r3, #1
   217b4:	beq	219e8 <myhtml_insertion_mode_in_table@@Base+0x24c>
   217b8:	ldr	r3, [r1]
   217bc:	sub	r3, r3, #23
   217c0:	cmp	r3, #112	; 0x70
   217c4:	addls	pc, pc, r3, lsl #2
   217c8:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   217cc:	b	21d24 <myhtml_insertion_mode_in_table@@Base+0x588>
   217d0:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   217d4:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   217d8:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   217dc:	b	21d24 <myhtml_insertion_mode_in_table@@Base+0x588>
   217e0:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   217e4:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   217e8:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   217ec:	b	21d24 <myhtml_insertion_mode_in_table@@Base+0x588>
   217f0:	b	21d24 <myhtml_insertion_mode_in_table@@Base+0x588>
   217f4:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   217f8:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   217fc:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21800:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21804:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21808:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   2180c:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21810:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21814:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21818:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   2181c:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21820:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21824:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21828:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   2182c:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21830:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21834:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21838:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   2183c:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21840:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21844:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21848:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   2184c:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21850:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21854:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21858:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   2185c:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21860:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21864:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21868:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   2186c:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21870:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21874:	b	21d24 <myhtml_insertion_mode_in_table@@Base+0x588>
   21878:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   2187c:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21880:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21884:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21888:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   2188c:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21890:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21894:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21898:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   2189c:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   218a0:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   218a4:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   218a8:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   218ac:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   218b0:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   218b4:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   218b8:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   218bc:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   218c0:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   218c4:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   218c8:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   218cc:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   218d0:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   218d4:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   218d8:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   218dc:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   218e0:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   218e4:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   218e8:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   218ec:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   218f0:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   218f4:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   218f8:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   218fc:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21900:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21904:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21908:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   2190c:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21910:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21914:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21918:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   2191c:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21920:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21924:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21928:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   2192c:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21930:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21934:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21938:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   2193c:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21940:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21944:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21948:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   2194c:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21950:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21954:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21958:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   2195c:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21960:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21964:	b	21990 <myhtml_insertion_mode_in_table@@Base+0x1f4>
   21968:	b	21d24 <myhtml_insertion_mode_in_table@@Base+0x588>
   2196c:	b	21d24 <myhtml_insertion_mode_in_table@@Base+0x588>
   21970:	b	219c8 <myhtml_insertion_mode_in_table@@Base+0x22c>
   21974:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21978:	b	21d24 <myhtml_insertion_mode_in_table@@Base+0x588>
   2197c:	b	21d24 <myhtml_insertion_mode_in_table@@Base+0x588>
   21980:	b	21d24 <myhtml_insertion_mode_in_table@@Base+0x588>
   21984:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   21988:	b	219d0 <myhtml_insertion_mode_in_table@@Base+0x234>
   2198c:	b	21d24 <myhtml_insertion_mode_in_table@@Base+0x588>
   21990:	mov	r3, #64	; 0x40
   21994:	mov	r2, #1
   21998:	mov	r1, #125	; 0x7d
   2199c:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   219a0:	subs	r1, r0, #0
   219a4:	moveq	r0, #0
   219a8:	beq	21d28 <myhtml_insertion_mode_in_table@@Base+0x58c>
   219ac:	mov	r2, #0
   219b0:	mov	r0, r5
   219b4:	bl	1013c <myhtml_tree_open_elements_pop_until_by_node@plt>
   219b8:	mov	r0, r5
   219bc:	bl	10730 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   219c0:	mov	r0, #0
   219c4:	b	21d28 <myhtml_insertion_mode_in_table@@Base+0x58c>
   219c8:	bl	10058 <myhtml_insertion_mode_in_head@plt>
   219cc:	b	21d28 <myhtml_insertion_mode_in_table@@Base+0x58c>
   219d0:	mov	r3, #1
   219d4:	strb	r3, [r0, #188]	; 0xbc
   219d8:	bl	10640 <myhtml_insertion_mode_in_body@plt>
   219dc:	mov	r0, #0
   219e0:	strb	r0, [r5, #188]	; 0xbc
   219e4:	b	21d28 <myhtml_insertion_mode_in_table@@Base+0x58c>
   219e8:	ldr	r3, [r1]
   219ec:	cmp	r3, #120	; 0x78
   219f0:	beq	21b58 <myhtml_insertion_mode_in_table@@Base+0x3bc>
   219f4:	bhi	21b68 <myhtml_insertion_mode_in_table@@Base+0x3cc>
   219f8:	cmp	r3, #31
   219fc:	beq	21c54 <myhtml_insertion_mode_in_table@@Base+0x4b8>
   21a00:	bhi	21ab0 <myhtml_insertion_mode_in_table@@Base+0x314>
   21a04:	cmp	r3, #2
   21a08:	beq	21c44 <myhtml_insertion_mode_in_table@@Base+0x4a8>
   21a0c:	bls	21a58 <myhtml_insertion_mode_in_table@@Base+0x2bc>
   21a10:	cmp	r3, #3
   21a14:	moveq	r0, #0
   21a18:	beq	21d28 <myhtml_insertion_mode_in_table@@Base+0x58c>
   21a1c:	cmp	r3, #27
   21a20:	bne	21bd8 <myhtml_insertion_mode_in_table@@Base+0x43c>
   21a24:	mov	r0, r5
   21a28:	bl	10fd0 <myhtml_tree_clear_stack_back_table_context@plt>
   21a2c:	mov	r1, r4
   21a30:	mov	r0, r5
   21a34:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   21a38:	ldr	r3, [r5]
   21a3c:	ldr	r1, [r3, #36]	; 0x24
   21a40:	mov	r0, r5
   21a44:	bl	100d0 <myhtml_tree_active_formatting_append@plt>
   21a48:	mov	r3, #10
   21a4c:	str	r3, [r5, #168]	; 0xa8
   21a50:	mov	r0, #0
   21a54:	b	21d28 <myhtml_insertion_mode_in_table@@Base+0x58c>
   21a58:	cmp	r3, #1
   21a5c:	bne	21bd8 <myhtml_insertion_mode_in_table@@Base+0x43c>
   21a60:	bl	10628 <myhtml_tree_current_node@plt>
   21a64:	ldr	r3, [r0, #4]
   21a68:	sub	r3, r3, #125	; 0x7d
   21a6c:	cmp	r3, #10
   21a70:	bhi	21a90 <myhtml_insertion_mode_in_table@@Base+0x2f4>
   21a74:	ldr	r2, [pc, #692]	; 21d30 <myhtml_insertion_mode_in_table@@Base+0x594>
   21a78:	lsr	r3, r2, r3
   21a7c:	tst	r3, #1
   21a80:	beq	21a90 <myhtml_insertion_mode_in_table@@Base+0x2f4>
   21a84:	ldr	r3, [r0, #8]
   21a88:	cmp	r3, #1
   21a8c:	beq	21c24 <myhtml_insertion_mode_in_table@@Base+0x488>
   21a90:	mov	r3, #1
   21a94:	strb	r3, [r5, #188]	; 0xbc
   21a98:	mov	r1, r4
   21a9c:	mov	r0, r5
   21aa0:	bl	10640 <myhtml_insertion_mode_in_body@plt>
   21aa4:	mov	r0, #0
   21aa8:	strb	r0, [r5, #188]	; 0xbc
   21aac:	b	21d28 <myhtml_insertion_mode_in_table@@Base+0x58c>
   21ab0:	cmp	r3, #52	; 0x34
   21ab4:	beq	21ce4 <myhtml_insertion_mode_in_table@@Base+0x548>
   21ab8:	bls	21b28 <myhtml_insertion_mode_in_table@@Base+0x38c>
   21abc:	cmp	r3, #70	; 0x46
   21ac0:	bne	21b50 <myhtml_insertion_mode_in_table@@Base+0x3b4>
   21ac4:	ldr	r0, [r0, #8]
   21ac8:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   21acc:	mov	r3, #6
   21ad0:	str	r3, [sp, #4]
   21ad4:	ldr	r3, [pc, #600]	; 21d34 <myhtml_insertion_mode_in_table@@Base+0x598>
   21ad8:	add	r3, pc, r3
   21adc:	str	r3, [sp]
   21ae0:	mov	r3, #4
   21ae4:	ldr	r2, [pc, #588]	; 21d38 <myhtml_insertion_mode_in_table@@Base+0x59c>
   21ae8:	add	r2, pc, r2
   21aec:	mov	r1, r4
   21af0:	ldr	r0, [r5, #8]
   21af4:	bl	fd34 <myhtml_token_attr_match_case@plt>
   21af8:	cmp	r0, #0
   21afc:	beq	21cc4 <myhtml_insertion_mode_in_table@@Base+0x528>
   21b00:	mov	r1, r4
   21b04:	mov	r0, r5
   21b08:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   21b0c:	mov	r0, r5
   21b10:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   21b14:	ldr	r3, [r4, #48]	; 0x30
   21b18:	orr	r3, r3, #2
   21b1c:	str	r3, [r4, #48]	; 0x30
   21b20:	mov	r0, #0
   21b24:	b	21d28 <myhtml_insertion_mode_in_table@@Base+0x58c>
   21b28:	cmp	r3, #32
   21b2c:	bne	21bd8 <myhtml_insertion_mode_in_table@@Base+0x43c>
   21b30:	bl	10fd0 <myhtml_tree_clear_stack_back_table_context@plt>
   21b34:	mov	r1, r4
   21b38:	mov	r0, r5
   21b3c:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   21b40:	mov	r3, #11
   21b44:	str	r3, [r5, #168]	; 0xa8
   21b48:	mov	r0, #0
   21b4c:	b	21d28 <myhtml_insertion_mode_in_table@@Base+0x58c>
   21b50:	cmp	r3, #112	; 0x70
   21b54:	bne	21bd8 <myhtml_insertion_mode_in_table@@Base+0x43c>
   21b58:	mov	r1, r4
   21b5c:	mov	r0, r5
   21b60:	bl	10058 <myhtml_insertion_mode_in_head@plt>
   21b64:	b	21d28 <myhtml_insertion_mode_in_table@@Base+0x58c>
   21b68:	cmp	r3, #130	; 0x82
   21b6c:	beq	21c78 <myhtml_insertion_mode_in_table@@Base+0x4dc>
   21b70:	bhi	21bf8 <myhtml_insertion_mode_in_table@@Base+0x45c>
   21b74:	cmp	r3, #126	; 0x7e
   21b78:	beq	21c78 <myhtml_insertion_mode_in_table@@Base+0x4dc>
   21b7c:	bhi	21bc8 <myhtml_insertion_mode_in_table@@Base+0x42c>
   21b80:	cmp	r3, #125	; 0x7d
   21b84:	bne	21bd8 <myhtml_insertion_mode_in_table@@Base+0x43c>
   21b88:	mov	r3, #64	; 0x40
   21b8c:	mov	r2, #1
   21b90:	mov	r1, #125	; 0x7d
   21b94:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   21b98:	cmp	r0, #0
   21b9c:	moveq	r0, #0
   21ba0:	beq	21d28 <myhtml_insertion_mode_in_table@@Base+0x58c>
   21ba4:	mov	r3, #0
   21ba8:	mov	r2, #1
   21bac:	mov	r1, #125	; 0x7d
   21bb0:	mov	r0, r5
   21bb4:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   21bb8:	mov	r0, r5
   21bbc:	bl	10730 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   21bc0:	mov	r0, #1
   21bc4:	b	21d28 <myhtml_insertion_mode_in_table@@Base+0x58c>
   21bc8:	cmp	r3, #127	; 0x7f
   21bcc:	beq	21c9c <myhtml_insertion_mode_in_table@@Base+0x500>
   21bd0:	cmp	r3, #128	; 0x80
   21bd4:	beq	21b58 <myhtml_insertion_mode_in_table@@Base+0x3bc>
   21bd8:	mov	r3, #1
   21bdc:	strb	r3, [r5, #188]	; 0xbc
   21be0:	mov	r1, r4
   21be4:	mov	r0, r5
   21be8:	bl	10640 <myhtml_insertion_mode_in_body@plt>
   21bec:	mov	r0, #0
   21bf0:	strb	r0, [r5, #188]	; 0xbc
   21bf4:	b	21d28 <myhtml_insertion_mode_in_table@@Base+0x58c>
   21bf8:	cmp	r3, #132	; 0x84
   21bfc:	beq	21c78 <myhtml_insertion_mode_in_table@@Base+0x4dc>
   21c00:	bcc	21c9c <myhtml_insertion_mode_in_table@@Base+0x500>
   21c04:	cmp	r3, #135	; 0x87
   21c08:	beq	21c9c <myhtml_insertion_mode_in_table@@Base+0x500>
   21c0c:	cmp	r3, #251	; 0xfb
   21c10:	bne	21bd8 <myhtml_insertion_mode_in_table@@Base+0x43c>
   21c14:	mov	r1, r4
   21c18:	mov	r0, r5
   21c1c:	bl	10640 <myhtml_insertion_mode_in_body@plt>
   21c20:	b	21d28 <myhtml_insertion_mode_in_table@@Base+0x58c>
   21c24:	ldr	r0, [r5, #136]	; 0x88
   21c28:	bl	10fe8 <myhtml_tree_token_list_clean@plt>
   21c2c:	ldr	r3, [r5, #168]	; 0xa8
   21c30:	str	r3, [r5, #172]	; 0xac
   21c34:	mov	r3, #9
   21c38:	str	r3, [r5, #168]	; 0xa8
   21c3c:	mov	r0, #1
   21c40:	b	21d28 <myhtml_insertion_mode_in_table@@Base+0x58c>
   21c44:	mov	r2, #0
   21c48:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   21c4c:	mov	r0, #0
   21c50:	b	21d28 <myhtml_insertion_mode_in_table@@Base+0x58c>
   21c54:	bl	10fd0 <myhtml_tree_clear_stack_back_table_context@plt>
   21c58:	mov	r2, #1
   21c5c:	mov	r1, #32
   21c60:	mov	r0, r5
   21c64:	bl	10970 <myhtml_tree_node_insert@plt>
   21c68:	mov	r3, #11
   21c6c:	str	r3, [r5, #168]	; 0xa8
   21c70:	mov	r0, #1
   21c74:	b	21d28 <myhtml_insertion_mode_in_table@@Base+0x58c>
   21c78:	mov	r0, r5
   21c7c:	bl	10fd0 <myhtml_tree_clear_stack_back_table_context@plt>
   21c80:	mov	r1, r4
   21c84:	mov	r0, r5
   21c88:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   21c8c:	mov	r3, #12
   21c90:	str	r3, [r5, #168]	; 0xa8
   21c94:	mov	r0, #0
   21c98:	b	21d28 <myhtml_insertion_mode_in_table@@Base+0x58c>
   21c9c:	mov	r0, r5
   21ca0:	bl	10fd0 <myhtml_tree_clear_stack_back_table_context@plt>
   21ca4:	mov	r2, #1
   21ca8:	mov	r1, #126	; 0x7e
   21cac:	mov	r0, r5
   21cb0:	bl	10970 <myhtml_tree_node_insert@plt>
   21cb4:	mov	r3, #12
   21cb8:	str	r3, [r5, #168]	; 0xa8
   21cbc:	mov	r0, #1
   21cc0:	b	21d28 <myhtml_insertion_mode_in_table@@Base+0x58c>
   21cc4:	mov	r3, #1
   21cc8:	strb	r3, [r5, #188]	; 0xbc
   21ccc:	mov	r1, r4
   21cd0:	mov	r0, r5
   21cd4:	bl	10640 <myhtml_insertion_mode_in_body@plt>
   21cd8:	mov	r0, #0
   21cdc:	strb	r0, [r5, #188]	; 0xbc
   21ce0:	b	21d28 <myhtml_insertion_mode_in_table@@Base+0x58c>
   21ce4:	mov	r3, #0
   21ce8:	mov	r2, #1
   21cec:	mov	r1, #128	; 0x80
   21cf0:	bl	107fc <myhtml_tree_open_elements_find_by_tag_idx@plt>
   21cf4:	ldr	r3, [r5, #104]	; 0x68
   21cf8:	cmp	r0, #0
   21cfc:	cmpeq	r3, #0
   21d00:	movne	r0, #0
   21d04:	bne	21d28 <myhtml_insertion_mode_in_table@@Base+0x58c>
   21d08:	mov	r1, r4
   21d0c:	mov	r0, r5
   21d10:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   21d14:	str	r0, [r5, #104]	; 0x68
   21d18:	mov	r0, r5
   21d1c:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   21d20:	b	21c14 <myhtml_insertion_mode_in_table@@Base+0x478>
   21d24:	mov	r0, #0
   21d28:	add	sp, sp, #12
   21d2c:	pop	{r4, r5, pc}
   21d30:	andeq	r0, r0, r3, lsr #9
   21d34:	andeq	fp, sp, r8, ror #21
   21d38:	andeq	r8, r1, r8, lsl r6

00021d3c <myhtml_insertion_mode_in_table_body@@Base>:
   21d3c:	push	{r4, r5, r6, lr}
   21d40:	mov	r4, r0
   21d44:	mov	r5, r1
   21d48:	ldr	r3, [r1, #48]	; 0x30
   21d4c:	tst	r3, #1
   21d50:	beq	21ff0 <myhtml_insertion_mode_in_table_body@@Base+0x2b4>
   21d54:	ldr	r1, [r1]
   21d58:	sub	r3, r1, #23
   21d5c:	cmp	r3, #112	; 0x70
   21d60:	addls	pc, pc, r3, lsl #2
   21d64:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21d68:	b	22128 <myhtml_insertion_mode_in_table_body@@Base+0x3ec>
   21d6c:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21d70:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21d74:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21d78:	b	22128 <myhtml_insertion_mode_in_table_body@@Base+0x3ec>
   21d7c:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21d80:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21d84:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21d88:	b	22128 <myhtml_insertion_mode_in_table_body@@Base+0x3ec>
   21d8c:	b	22128 <myhtml_insertion_mode_in_table_body@@Base+0x3ec>
   21d90:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21d94:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21d98:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21d9c:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21da0:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21da4:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21da8:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21dac:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21db0:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21db4:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21db8:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21dbc:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21dc0:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21dc4:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21dc8:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21dcc:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21dd0:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21dd4:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21dd8:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21ddc:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21de0:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21de4:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21de8:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21dec:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21df0:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21df4:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21df8:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21dfc:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21e00:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21e04:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21e08:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21e0c:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21e10:	b	22128 <myhtml_insertion_mode_in_table_body@@Base+0x3ec>
   21e14:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21e18:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21e1c:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21e20:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21e24:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21e28:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21e2c:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21e30:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21e34:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21e38:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21e3c:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21e40:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21e44:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21e48:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21e4c:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21e50:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21e54:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21e58:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21e5c:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21e60:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21e64:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21e68:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21e6c:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21e70:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21e74:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21e78:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21e7c:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21e80:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21e84:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21e88:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21e8c:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21e90:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21e94:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21e98:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21e9c:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21ea0:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21ea4:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21ea8:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21eac:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21eb0:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21eb4:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21eb8:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21ebc:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21ec0:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21ec4:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21ec8:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21ecc:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21ed0:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21ed4:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21ed8:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21edc:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21ee0:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21ee4:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21ee8:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21eec:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21ef0:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21ef4:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21ef8:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21efc:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21f00:	b	21f60 <myhtml_insertion_mode_in_table_body@@Base+0x224>
   21f04:	b	21f2c <myhtml_insertion_mode_in_table_body@@Base+0x1f0>
   21f08:	b	22128 <myhtml_insertion_mode_in_table_body@@Base+0x3ec>
   21f0c:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21f10:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21f14:	b	21f2c <myhtml_insertion_mode_in_table_body@@Base+0x1f0>
   21f18:	b	22128 <myhtml_insertion_mode_in_table_body@@Base+0x3ec>
   21f1c:	b	21f2c <myhtml_insertion_mode_in_table_body@@Base+0x1f0>
   21f20:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21f24:	b	21fe4 <myhtml_insertion_mode_in_table_body@@Base+0x2a8>
   21f28:	b	22128 <myhtml_insertion_mode_in_table_body@@Base+0x3ec>
   21f2c:	mov	r3, #64	; 0x40
   21f30:	mov	r2, #1
   21f34:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   21f38:	cmp	r0, #0
   21f3c:	beq	22130 <myhtml_insertion_mode_in_table_body@@Base+0x3f4>
   21f40:	mov	r0, r4
   21f44:	bl	10394 <myhtml_tree_clear_stack_back_table_body_context@plt>
   21f48:	mov	r0, r4
   21f4c:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   21f50:	mov	r3, #8
   21f54:	str	r3, [r4, #168]	; 0xa8
   21f58:	mov	r0, #0
   21f5c:	pop	{r4, r5, r6, pc}
   21f60:	mov	r3, #64	; 0x40
   21f64:	mov	r2, #1
   21f68:	mov	r1, #126	; 0x7e
   21f6c:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   21f70:	mov	r5, r0
   21f74:	mov	r3, #64	; 0x40
   21f78:	mov	r2, #1
   21f7c:	mov	r1, #130	; 0x82
   21f80:	mov	r0, r4
   21f84:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   21f88:	mov	r6, r0
   21f8c:	mov	r3, #64	; 0x40
   21f90:	mov	r2, #1
   21f94:	mov	r1, #132	; 0x84
   21f98:	mov	r0, r4
   21f9c:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   21fa0:	cmp	r5, #0
   21fa4:	cmpeq	r6, #0
   21fa8:	moveq	r5, #1
   21fac:	movne	r5, #0
   21fb0:	cmp	r0, #0
   21fb4:	movne	r5, #0
   21fb8:	andeq	r5, r5, #1
   21fbc:	cmp	r5, #0
   21fc0:	bne	22138 <myhtml_insertion_mode_in_table_body@@Base+0x3fc>
   21fc4:	mov	r0, r4
   21fc8:	bl	10394 <myhtml_tree_clear_stack_back_table_body_context@plt>
   21fcc:	mov	r0, r4
   21fd0:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   21fd4:	mov	r3, #8
   21fd8:	str	r3, [r4, #168]	; 0xa8
   21fdc:	mov	r0, #1
   21fe0:	pop	{r4, r5, r6, pc}
   21fe4:	mov	r1, r5
   21fe8:	bl	10178 <myhtml_insertion_mode_in_table@plt>
   21fec:	pop	{r4, r5, r6, pc}
   21ff0:	ldr	r3, [r1]
   21ff4:	cmp	r3, #127	; 0x7f
   21ff8:	beq	22100 <myhtml_insertion_mode_in_table_body@@Base+0x3c4>
   21ffc:	bls	2203c <myhtml_insertion_mode_in_table_body@@Base+0x300>
   22000:	cmp	r3, #131	; 0x83
   22004:	beq	22100 <myhtml_insertion_mode_in_table_body@@Base+0x3c4>
   22008:	bls	220f4 <myhtml_insertion_mode_in_table_body@@Base+0x3b8>
   2200c:	cmp	r3, #132	; 0x84
   22010:	beq	2206c <myhtml_insertion_mode_in_table_body@@Base+0x330>
   22014:	cmp	r3, #135	; 0x87
   22018:	bne	22054 <myhtml_insertion_mode_in_table_body@@Base+0x318>
   2201c:	bl	10394 <myhtml_tree_clear_stack_back_table_body_context@plt>
   22020:	mov	r1, r5
   22024:	mov	r0, r4
   22028:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   2202c:	mov	r3, #13
   22030:	str	r3, [r4, #168]	; 0xa8
   22034:	mov	r0, #0
   22038:	pop	{r4, r5, r6, pc}
   2203c:	cmp	r3, #32
   22040:	bhi	22064 <myhtml_insertion_mode_in_table_body@@Base+0x328>
   22044:	cmp	r3, #31
   22048:	bcs	2206c <myhtml_insertion_mode_in_table_body@@Base+0x330>
   2204c:	cmp	r3, #27
   22050:	beq	2206c <myhtml_insertion_mode_in_table_body@@Base+0x330>
   22054:	mov	r1, r5
   22058:	mov	r0, r4
   2205c:	bl	10178 <myhtml_insertion_mode_in_table@plt>
   22060:	pop	{r4, r5, r6, pc}
   22064:	cmp	r3, #126	; 0x7e
   22068:	bne	22054 <myhtml_insertion_mode_in_table_body@@Base+0x318>
   2206c:	mov	r3, #64	; 0x40
   22070:	mov	r2, #1
   22074:	mov	r1, #126	; 0x7e
   22078:	mov	r0, r4
   2207c:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   22080:	mov	r5, r0
   22084:	mov	r3, #64	; 0x40
   22088:	mov	r2, #1
   2208c:	mov	r1, #130	; 0x82
   22090:	mov	r0, r4
   22094:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   22098:	mov	r6, r0
   2209c:	mov	r3, #64	; 0x40
   220a0:	mov	r2, #1
   220a4:	mov	r1, #132	; 0x84
   220a8:	mov	r0, r4
   220ac:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   220b0:	cmp	r5, #0
   220b4:	cmpeq	r6, #0
   220b8:	moveq	r5, #1
   220bc:	movne	r5, #0
   220c0:	cmp	r0, #0
   220c4:	movne	r5, #0
   220c8:	andeq	r5, r5, #1
   220cc:	cmp	r5, #0
   220d0:	bne	22140 <myhtml_insertion_mode_in_table_body@@Base+0x404>
   220d4:	mov	r0, r4
   220d8:	bl	10394 <myhtml_tree_clear_stack_back_table_body_context@plt>
   220dc:	mov	r0, r4
   220e0:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   220e4:	mov	r3, #8
   220e8:	str	r3, [r4, #168]	; 0xa8
   220ec:	mov	r0, #1
   220f0:	pop	{r4, r5, r6, pc}
   220f4:	cmp	r3, #130	; 0x82
   220f8:	bne	22054 <myhtml_insertion_mode_in_table_body@@Base+0x318>
   220fc:	b	2206c <myhtml_insertion_mode_in_table_body@@Base+0x330>
   22100:	mov	r0, r4
   22104:	bl	10394 <myhtml_tree_clear_stack_back_table_body_context@plt>
   22108:	mov	r2, #1
   2210c:	mov	r1, #135	; 0x87
   22110:	mov	r0, r4
   22114:	bl	10970 <myhtml_tree_node_insert@plt>
   22118:	mov	r3, #13
   2211c:	str	r3, [r4, #168]	; 0xa8
   22120:	mov	r0, #1
   22124:	pop	{r4, r5, r6, pc}
   22128:	mov	r0, #0
   2212c:	pop	{r4, r5, r6, pc}
   22130:	mov	r0, #0
   22134:	pop	{r4, r5, r6, pc}
   22138:	mov	r0, #0
   2213c:	pop	{r4, r5, r6, pc}
   22140:	mov	r0, #0
   22144:	pop	{r4, r5, r6, pc}

00022148 <myhtml_insertion_mode_in_row@@Base>:
   22148:	push	{r4, r5, r6, lr}
   2214c:	mov	r4, r0
   22150:	mov	r5, r1
   22154:	ldr	r3, [r1, #48]	; 0x30
   22158:	tst	r3, #1
   2215c:	beq	22404 <myhtml_insertion_mode_in_row@@Base+0x2bc>
   22160:	ldr	r1, [r1]
   22164:	sub	r3, r1, #23
   22168:	cmp	r3, #112	; 0x70
   2216c:	addls	pc, pc, r3, lsl #2
   22170:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   22174:	b	224e0 <myhtml_insertion_mode_in_row@@Base+0x398>
   22178:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   2217c:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   22180:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   22184:	b	224e0 <myhtml_insertion_mode_in_row@@Base+0x398>
   22188:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   2218c:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   22190:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   22194:	b	224e0 <myhtml_insertion_mode_in_row@@Base+0x398>
   22198:	b	224e0 <myhtml_insertion_mode_in_row@@Base+0x398>
   2219c:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   221a0:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   221a4:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   221a8:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   221ac:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   221b0:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   221b4:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   221b8:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   221bc:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   221c0:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   221c4:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   221c8:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   221cc:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   221d0:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   221d4:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   221d8:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   221dc:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   221e0:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   221e4:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   221e8:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   221ec:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   221f0:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   221f4:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   221f8:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   221fc:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   22200:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   22204:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   22208:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   2220c:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   22210:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   22214:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   22218:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   2221c:	b	224e0 <myhtml_insertion_mode_in_row@@Base+0x398>
   22220:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   22224:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   22228:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   2222c:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   22230:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   22234:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   22238:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   2223c:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   22240:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   22244:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   22248:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   2224c:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   22250:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   22254:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   22258:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   2225c:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   22260:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   22264:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   22268:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   2226c:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   22270:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   22274:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   22278:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   2227c:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   22280:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   22284:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   22288:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   2228c:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   22290:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   22294:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   22298:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   2229c:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   222a0:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   222a4:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   222a8:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   222ac:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   222b0:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   222b4:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   222b8:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   222bc:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   222c0:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   222c4:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   222c8:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   222cc:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   222d0:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   222d4:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   222d8:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   222dc:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   222e0:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   222e4:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   222e8:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   222ec:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   222f0:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   222f4:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   222f8:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   222fc:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   22300:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   22304:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   22308:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   2230c:	b	22370 <myhtml_insertion_mode_in_row@@Base+0x228>
   22310:	b	223a8 <myhtml_insertion_mode_in_row@@Base+0x260>
   22314:	b	224e0 <myhtml_insertion_mode_in_row@@Base+0x398>
   22318:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   2231c:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   22320:	b	223a8 <myhtml_insertion_mode_in_row@@Base+0x260>
   22324:	b	224e0 <myhtml_insertion_mode_in_row@@Base+0x398>
   22328:	b	223a8 <myhtml_insertion_mode_in_row@@Base+0x260>
   2232c:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   22330:	b	223f8 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   22334:	b	22338 <myhtml_insertion_mode_in_row@@Base+0x1f0>
   22338:	mov	r3, #64	; 0x40
   2233c:	mov	r2, #1
   22340:	mov	r1, #135	; 0x87
   22344:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   22348:	cmp	r0, #0
   2234c:	beq	224e8 <myhtml_insertion_mode_in_row@@Base+0x3a0>
   22350:	mov	r0, r4
   22354:	bl	10418 <myhtml_tree_clear_stack_back_table_row_context@plt>
   22358:	mov	r0, r4
   2235c:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   22360:	mov	r3, #12
   22364:	str	r3, [r4, #168]	; 0xa8
   22368:	mov	r0, #0
   2236c:	pop	{r4, r5, r6, pc}
   22370:	mov	r3, #64	; 0x40
   22374:	mov	r2, #1
   22378:	mov	r1, #135	; 0x87
   2237c:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   22380:	cmp	r0, #0
   22384:	beq	224f0 <myhtml_insertion_mode_in_row@@Base+0x3a8>
   22388:	mov	r0, r4
   2238c:	bl	10418 <myhtml_tree_clear_stack_back_table_row_context@plt>
   22390:	mov	r0, r4
   22394:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   22398:	mov	r3, #12
   2239c:	str	r3, [r4, #168]	; 0xa8
   223a0:	mov	r0, #1
   223a4:	pop	{r4, r5, r6, pc}
   223a8:	mov	r3, #64	; 0x40
   223ac:	mov	r2, #1
   223b0:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   223b4:	cmp	r0, #0
   223b8:	beq	224f8 <myhtml_insertion_mode_in_row@@Base+0x3b0>
   223bc:	mov	r3, #64	; 0x40
   223c0:	mov	r2, #1
   223c4:	mov	r1, #135	; 0x87
   223c8:	mov	r0, r4
   223cc:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   223d0:	cmp	r0, #0
   223d4:	beq	22500 <myhtml_insertion_mode_in_row@@Base+0x3b8>
   223d8:	mov	r0, r4
   223dc:	bl	10418 <myhtml_tree_clear_stack_back_table_row_context@plt>
   223e0:	mov	r0, r4
   223e4:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   223e8:	mov	r3, #12
   223ec:	str	r3, [r4, #168]	; 0xa8
   223f0:	mov	r0, #1
   223f4:	pop	{r4, r5, r6, pc}
   223f8:	mov	r1, r5
   223fc:	bl	10178 <myhtml_insertion_mode_in_table@plt>
   22400:	pop	{r4, r5, r6, pc}
   22404:	ldr	r3, [r1]
   22408:	cmp	r3, #127	; 0x7f
   2240c:	beq	224ac <myhtml_insertion_mode_in_row@@Base+0x364>
   22410:	bls	22434 <myhtml_insertion_mode_in_row@@Base+0x2ec>
   22414:	cmp	r3, #131	; 0x83
   22418:	beq	224ac <myhtml_insertion_mode_in_row@@Base+0x364>
   2241c:	bls	224a0 <myhtml_insertion_mode_in_row@@Base+0x358>
   22420:	cmp	r3, #132	; 0x84
   22424:	beq	22464 <myhtml_insertion_mode_in_row@@Base+0x31c>
   22428:	cmp	r3, #135	; 0x87
   2242c:	bne	2244c <myhtml_insertion_mode_in_row@@Base+0x304>
   22430:	b	22464 <myhtml_insertion_mode_in_row@@Base+0x31c>
   22434:	cmp	r3, #32
   22438:	bhi	2245c <myhtml_insertion_mode_in_row@@Base+0x314>
   2243c:	cmp	r3, #31
   22440:	bcs	22464 <myhtml_insertion_mode_in_row@@Base+0x31c>
   22444:	cmp	r3, #27
   22448:	beq	22464 <myhtml_insertion_mode_in_row@@Base+0x31c>
   2244c:	mov	r1, r5
   22450:	mov	r0, r4
   22454:	bl	10178 <myhtml_insertion_mode_in_table@plt>
   22458:	pop	{r4, r5, r6, pc}
   2245c:	cmp	r3, #126	; 0x7e
   22460:	bne	2244c <myhtml_insertion_mode_in_row@@Base+0x304>
   22464:	mov	r3, #64	; 0x40
   22468:	mov	r2, #1
   2246c:	mov	r1, #135	; 0x87
   22470:	mov	r0, r4
   22474:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   22478:	cmp	r0, #0
   2247c:	beq	22508 <myhtml_insertion_mode_in_row@@Base+0x3c0>
   22480:	mov	r0, r4
   22484:	bl	10418 <myhtml_tree_clear_stack_back_table_row_context@plt>
   22488:	mov	r0, r4
   2248c:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   22490:	mov	r3, #12
   22494:	str	r3, [r4, #168]	; 0xa8
   22498:	mov	r0, #1
   2249c:	pop	{r4, r5, r6, pc}
   224a0:	cmp	r3, #130	; 0x82
   224a4:	bne	2244c <myhtml_insertion_mode_in_row@@Base+0x304>
   224a8:	b	22464 <myhtml_insertion_mode_in_row@@Base+0x31c>
   224ac:	mov	r0, r4
   224b0:	bl	10418 <myhtml_tree_clear_stack_back_table_row_context@plt>
   224b4:	mov	r1, r5
   224b8:	mov	r0, r4
   224bc:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   224c0:	ldr	r3, [r4]
   224c4:	ldr	r1, [r3, #36]	; 0x24
   224c8:	mov	r0, r4
   224cc:	bl	100d0 <myhtml_tree_active_formatting_append@plt>
   224d0:	mov	r3, #14
   224d4:	str	r3, [r4, #168]	; 0xa8
   224d8:	mov	r0, #0
   224dc:	pop	{r4, r5, r6, pc}
   224e0:	mov	r0, #0
   224e4:	pop	{r4, r5, r6, pc}
   224e8:	mov	r0, #0
   224ec:	pop	{r4, r5, r6, pc}
   224f0:	mov	r0, #0
   224f4:	pop	{r4, r5, r6, pc}
   224f8:	mov	r0, #0
   224fc:	pop	{r4, r5, r6, pc}
   22500:	mov	r0, #0
   22504:	pop	{r4, r5, r6, pc}
   22508:	mov	r0, #0
   2250c:	pop	{r4, r5, r6, pc}

00022510 <myhtml_insertion_mode_in_table_text@@Base>:
   22510:	push	{r4, r5, r6, r7, r8, lr}
   22514:	mov	r4, r0
   22518:	ldr	r3, [r1]
   2251c:	cmp	r3, #1
   22520:	beq	225ac <myhtml_insertion_mode_in_table_text@@Base+0x9c>
   22524:	ldr	r5, [r0, #136]	; 0x88
   22528:	ldr	r0, [r5, #4]
   2252c:	cmp	r0, #0
   22530:	beq	2259c <myhtml_insertion_mode_in_table_text@@Base+0x8c>
   22534:	ldr	r2, [r5]
   22538:	ldr	r3, [r2]
   2253c:	ldr	r3, [r3, #48]	; 0x30
   22540:	tst	r3, #8
   22544:	beq	22620 <myhtml_insertion_mode_in_table_text@@Base+0x110>
   22548:	mov	r3, #0
   2254c:	add	r3, r3, #1
   22550:	cmp	r3, r0
   22554:	beq	225f8 <myhtml_insertion_mode_in_table_text@@Base+0xe8>
   22558:	ldr	r1, [r2, #4]!
   2255c:	ldr	r1, [r1, #48]	; 0x30
   22560:	tst	r1, #8
   22564:	bne	2254c <myhtml_insertion_mode_in_table_text@@Base+0x3c>
   22568:	mov	r6, #0
   2256c:	mov	r8, #1
   22570:	mov	r7, #0
   22574:	strb	r8, [r4, #188]	; 0xbc
   22578:	ldr	r3, [r5]
   2257c:	ldr	r1, [r3, r6, lsl #2]
   22580:	mov	r0, r4
   22584:	bl	10640 <myhtml_insertion_mode_in_body@plt>
   22588:	strb	r7, [r4, #188]	; 0xbc
   2258c:	add	r6, r6, #1
   22590:	ldr	r3, [r5, #4]
   22594:	cmp	r3, r6
   22598:	bhi	22574 <myhtml_insertion_mode_in_table_text@@Base+0x64>
   2259c:	ldr	r3, [r4, #172]	; 0xac
   225a0:	str	r3, [r4, #168]	; 0xa8
   225a4:	mov	r0, #1
   225a8:	pop	{r4, r5, r6, r7, r8, pc}
   225ac:	mov	r5, r1
   225b0:	ldr	r3, [r1, #48]	; 0x30
   225b4:	tst	r3, #2048	; 0x800
   225b8:	beq	225e8 <myhtml_insertion_mode_in_table_text@@Base+0xd8>
   225bc:	bl	107cc <myhtml_insertion_fix_for_null_char_drop_all@plt>
   225c0:	ldr	r3, [r5, #12]
   225c4:	cmp	r3, #0
   225c8:	bne	225d4 <myhtml_insertion_mode_in_table_text@@Base+0xc4>
   225cc:	mov	r0, #0
   225d0:	pop	{r4, r5, r6, r7, r8, pc}
   225d4:	mov	r1, r5
   225d8:	ldr	r0, [r4, #136]	; 0x88
   225dc:	bl	10ec8 <myhtml_tree_token_list_append@plt>
   225e0:	mov	r0, #0
   225e4:	pop	{r4, r5, r6, r7, r8, pc}
   225e8:	ldr	r0, [r0, #136]	; 0x88
   225ec:	bl	10ec8 <myhtml_tree_token_list_append@plt>
   225f0:	mov	r0, #0
   225f4:	pop	{r4, r5, r6, r7, r8, pc}
   225f8:	mov	r6, #0
   225fc:	ldr	r3, [r5]
   22600:	ldr	r1, [r3, r6, lsl #2]
   22604:	mov	r0, r4
   22608:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   2260c:	add	r6, r6, #1
   22610:	ldr	r3, [r5, #4]
   22614:	cmp	r3, r6
   22618:	bhi	225fc <myhtml_insertion_mode_in_table_text@@Base+0xec>
   2261c:	b	2259c <myhtml_insertion_mode_in_table_text@@Base+0x8c>
   22620:	mov	r6, #0
   22624:	b	2256c <myhtml_insertion_mode_in_table_text@@Base+0x5c>

00022628 <myhtml_insertion_mode_in_caption@@Base>:
   22628:	push	{r4, lr}
   2262c:	mov	r4, r0
   22630:	ldr	r3, [r1, #48]	; 0x30
   22634:	tst	r3, #1
   22638:	beq	22774 <myhtml_insertion_mode_in_caption@@Base+0x14c>
   2263c:	ldr	r3, [r1]
   22640:	cmp	r3, #125	; 0x7d
   22644:	beq	22710 <myhtml_insertion_mode_in_caption@@Base+0xe8>
   22648:	bhi	226e0 <myhtml_insertion_mode_in_caption@@Base+0xb8>
   2264c:	cmp	r3, #32
   22650:	bhi	226d0 <myhtml_insertion_mode_in_caption@@Base+0xa8>
   22654:	cmp	r3, #31
   22658:	bcs	226d8 <myhtml_insertion_mode_in_caption@@Base+0xb0>
   2265c:	cmp	r3, #23
   22660:	beq	226d8 <myhtml_insertion_mode_in_caption@@Base+0xb0>
   22664:	cmp	r3, #27
   22668:	bne	226f8 <myhtml_insertion_mode_in_caption@@Base+0xd0>
   2266c:	mov	r3, #64	; 0x40
   22670:	mov	r2, #1
   22674:	mov	r1, #27
   22678:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   2267c:	cmp	r0, #0
   22680:	beq	2282c <myhtml_insertion_mode_in_caption@@Base+0x204>
   22684:	mov	r2, #0
   22688:	mov	r1, r2
   2268c:	mov	r0, r4
   22690:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   22694:	mov	r0, r4
   22698:	bl	10628 <myhtml_tree_current_node@plt>
   2269c:	mov	r1, #27
   226a0:	bl	10aa8 <myhtml_is_html_node@plt>
   226a4:	mov	r3, #0
   226a8:	mov	r2, #1
   226ac:	mov	r1, #27
   226b0:	mov	r0, r4
   226b4:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   226b8:	mov	r0, r4
   226bc:	bl	10e5c <myhtml_tree_active_formatting_up_to_last_marker@plt>
   226c0:	mov	r3, #8
   226c4:	str	r3, [r4, #168]	; 0xa8
   226c8:	mov	r0, #0
   226cc:	pop	{r4, pc}
   226d0:	cmp	r3, #65	; 0x41
   226d4:	bne	226f8 <myhtml_insertion_mode_in_caption@@Base+0xd0>
   226d8:	mov	r0, #0
   226dc:	pop	{r4, pc}
   226e0:	cmp	r3, #132	; 0x84
   226e4:	bhi	22704 <myhtml_insertion_mode_in_caption@@Base+0xdc>
   226e8:	cmp	r3, #130	; 0x82
   226ec:	bcs	226d8 <myhtml_insertion_mode_in_caption@@Base+0xb0>
   226f0:	cmp	r3, #127	; 0x7f
   226f4:	bls	226d8 <myhtml_insertion_mode_in_caption@@Base+0xb0>
   226f8:	mov	r0, r4
   226fc:	bl	10640 <myhtml_insertion_mode_in_body@plt>
   22700:	pop	{r4, pc}
   22704:	cmp	r3, #135	; 0x87
   22708:	bne	226f8 <myhtml_insertion_mode_in_caption@@Base+0xd0>
   2270c:	b	226d8 <myhtml_insertion_mode_in_caption@@Base+0xb0>
   22710:	mov	r3, #64	; 0x40
   22714:	mov	r2, #1
   22718:	mov	r1, #27
   2271c:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   22720:	cmp	r0, #0
   22724:	beq	22834 <myhtml_insertion_mode_in_caption@@Base+0x20c>
   22728:	mov	r2, #0
   2272c:	mov	r1, r2
   22730:	mov	r0, r4
   22734:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   22738:	mov	r0, r4
   2273c:	bl	10628 <myhtml_tree_current_node@plt>
   22740:	mov	r1, #27
   22744:	bl	10aa8 <myhtml_is_html_node@plt>
   22748:	mov	r3, #0
   2274c:	mov	r2, #1
   22750:	mov	r1, #27
   22754:	mov	r0, r4
   22758:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   2275c:	mov	r0, r4
   22760:	bl	10e5c <myhtml_tree_active_formatting_up_to_last_marker@plt>
   22764:	mov	r3, #8
   22768:	str	r3, [r4, #168]	; 0xa8
   2276c:	mov	r0, #1
   22770:	pop	{r4, pc}
   22774:	ldr	r3, [r1]
   22778:	cmp	r3, #127	; 0x7f
   2277c:	bhi	227ac <myhtml_insertion_mode_in_caption@@Base+0x184>
   22780:	cmp	r3, #126	; 0x7e
   22784:	bcs	227c4 <myhtml_insertion_mode_in_caption@@Base+0x19c>
   22788:	cmp	r3, #27
   2278c:	beq	227c4 <myhtml_insertion_mode_in_caption@@Base+0x19c>
   22790:	bcc	227a0 <myhtml_insertion_mode_in_caption@@Base+0x178>
   22794:	sub	r3, r3, #31
   22798:	cmp	r3, #1
   2279c:	bls	227c4 <myhtml_insertion_mode_in_caption@@Base+0x19c>
   227a0:	mov	r0, r4
   227a4:	bl	10640 <myhtml_insertion_mode_in_body@plt>
   227a8:	pop	{r4, pc}
   227ac:	cmp	r3, #130	; 0x82
   227b0:	bcc	227a0 <myhtml_insertion_mode_in_caption@@Base+0x178>
   227b4:	cmp	r3, #132	; 0x84
   227b8:	bls	227c4 <myhtml_insertion_mode_in_caption@@Base+0x19c>
   227bc:	cmp	r3, #135	; 0x87
   227c0:	bne	227a0 <myhtml_insertion_mode_in_caption@@Base+0x178>
   227c4:	mov	r3, #64	; 0x40
   227c8:	mov	r2, #1
   227cc:	mov	r1, #27
   227d0:	mov	r0, r4
   227d4:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   227d8:	cmp	r0, #0
   227dc:	beq	2283c <myhtml_insertion_mode_in_caption@@Base+0x214>
   227e0:	mov	r2, #0
   227e4:	mov	r1, r2
   227e8:	mov	r0, r4
   227ec:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   227f0:	mov	r0, r4
   227f4:	bl	10628 <myhtml_tree_current_node@plt>
   227f8:	mov	r1, #27
   227fc:	bl	10aa8 <myhtml_is_html_node@plt>
   22800:	mov	r3, #0
   22804:	mov	r2, #1
   22808:	mov	r1, #27
   2280c:	mov	r0, r4
   22810:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   22814:	mov	r0, r4
   22818:	bl	10e5c <myhtml_tree_active_formatting_up_to_last_marker@plt>
   2281c:	mov	r3, #8
   22820:	str	r3, [r4, #168]	; 0xa8
   22824:	mov	r0, #1
   22828:	pop	{r4, pc}
   2282c:	mov	r0, #0
   22830:	pop	{r4, pc}
   22834:	mov	r0, #0
   22838:	pop	{r4, pc}
   2283c:	mov	r0, #0
   22840:	pop	{r4, pc}

00022844 <myhtml_insertion_mode_in_column_group@@Base>:
   22844:	push	{r4, r5, r6, lr}
   22848:	mov	r4, r0
   2284c:	ldr	r3, [r1, #48]	; 0x30
   22850:	tst	r3, #1
   22854:	beq	228f0 <myhtml_insertion_mode_in_column_group@@Base+0xac>
   22858:	ldr	r3, [r1]
   2285c:	cmp	r3, #32
   22860:	beq	228a8 <myhtml_insertion_mode_in_column_group@@Base+0x64>
   22864:	cmp	r3, #128	; 0x80
   22868:	beq	228e0 <myhtml_insertion_mode_in_column_group@@Base+0x9c>
   2286c:	cmp	r3, #31
   22870:	beq	22a18 <myhtml_insertion_mode_in_column_group@@Base+0x1d4>
   22874:	bl	10628 <myhtml_tree_current_node@plt>
   22878:	cmp	r0, #0
   2287c:	moveq	r5, #0
   22880:	beq	228e8 <myhtml_insertion_mode_in_column_group@@Base+0xa4>
   22884:	mov	r1, #32
   22888:	bl	10aa8 <myhtml_is_html_node@plt>
   2288c:	subs	r5, r0, #0
   22890:	beq	228e8 <myhtml_insertion_mode_in_column_group@@Base+0xa4>
   22894:	mov	r0, r4
   22898:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   2289c:	mov	r3, #8
   228a0:	str	r3, [r4, #168]	; 0xa8
   228a4:	b	228e8 <myhtml_insertion_mode_in_column_group@@Base+0xa4>
   228a8:	bl	10628 <myhtml_tree_current_node@plt>
   228ac:	cmp	r0, #0
   228b0:	moveq	r5, #0
   228b4:	beq	228e8 <myhtml_insertion_mode_in_column_group@@Base+0xa4>
   228b8:	mov	r1, #32
   228bc:	bl	10aa8 <myhtml_is_html_node@plt>
   228c0:	subs	r5, r0, #0
   228c4:	beq	228e8 <myhtml_insertion_mode_in_column_group@@Base+0xa4>
   228c8:	mov	r0, r4
   228cc:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   228d0:	mov	r3, #8
   228d4:	str	r3, [r4, #168]	; 0xa8
   228d8:	mov	r5, #0
   228dc:	b	228e8 <myhtml_insertion_mode_in_column_group@@Base+0xa4>
   228e0:	bl	10058 <myhtml_insertion_mode_in_head@plt>
   228e4:	mov	r5, r0
   228e8:	mov	r0, r5
   228ec:	pop	{r4, r5, r6, pc}
   228f0:	ldr	r3, [r1]
   228f4:	cmp	r3, #31
   228f8:	beq	229ec <myhtml_insertion_mode_in_column_group@@Base+0x1a8>
   228fc:	bhi	22954 <myhtml_insertion_mode_in_column_group@@Base+0x110>
   22900:	cmp	r3, #2
   22904:	beq	229dc <myhtml_insertion_mode_in_column_group@@Base+0x198>
   22908:	cmp	r3, #3
   2290c:	moveq	r5, #0
   22910:	beq	228e8 <myhtml_insertion_mode_in_column_group@@Base+0xa4>
   22914:	cmp	r3, #1
   22918:	beq	22978 <myhtml_insertion_mode_in_column_group@@Base+0x134>
   2291c:	mov	r0, r4
   22920:	bl	10628 <myhtml_tree_current_node@plt>
   22924:	cmp	r0, #0
   22928:	moveq	r5, #0
   2292c:	beq	228e8 <myhtml_insertion_mode_in_column_group@@Base+0xa4>
   22930:	mov	r1, #32
   22934:	bl	10aa8 <myhtml_is_html_node@plt>
   22938:	subs	r5, r0, #0
   2293c:	beq	228e8 <myhtml_insertion_mode_in_column_group@@Base+0xa4>
   22940:	mov	r0, r4
   22944:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   22948:	mov	r3, #8
   2294c:	str	r3, [r4, #168]	; 0xa8
   22950:	b	228e8 <myhtml_insertion_mode_in_column_group@@Base+0xa4>
   22954:	cmp	r3, #128	; 0x80
   22958:	beq	22a00 <myhtml_insertion_mode_in_column_group@@Base+0x1bc>
   2295c:	cmp	r3, #251	; 0xfb
   22960:	beq	22a0c <myhtml_insertion_mode_in_column_group@@Base+0x1c8>
   22964:	cmp	r3, #65	; 0x41
   22968:	bne	2291c <myhtml_insertion_mode_in_column_group@@Base+0xd8>
   2296c:	bl	10640 <myhtml_insertion_mode_in_body@plt>
   22970:	mov	r5, r0
   22974:	b	228e8 <myhtml_insertion_mode_in_column_group@@Base+0xa4>
   22978:	ldr	r3, [r1, #48]	; 0x30
   2297c:	tst	r3, #8
   22980:	bne	229d0 <myhtml_insertion_mode_in_column_group@@Base+0x18c>
   22984:	bl	fef0 <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   22988:	subs	r1, r0, #0
   2298c:	beq	22998 <myhtml_insertion_mode_in_column_group@@Base+0x154>
   22990:	mov	r0, r4
   22994:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   22998:	mov	r0, r4
   2299c:	bl	10628 <myhtml_tree_current_node@plt>
   229a0:	cmp	r0, #0
   229a4:	moveq	r5, #0
   229a8:	beq	228e8 <myhtml_insertion_mode_in_column_group@@Base+0xa4>
   229ac:	mov	r1, #32
   229b0:	bl	10aa8 <myhtml_is_html_node@plt>
   229b4:	subs	r5, r0, #0
   229b8:	beq	228e8 <myhtml_insertion_mode_in_column_group@@Base+0xa4>
   229bc:	mov	r0, r4
   229c0:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   229c4:	mov	r3, #8
   229c8:	str	r3, [r4, #168]	; 0xa8
   229cc:	b	228e8 <myhtml_insertion_mode_in_column_group@@Base+0xa4>
   229d0:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   229d4:	mov	r5, #0
   229d8:	b	228e8 <myhtml_insertion_mode_in_column_group@@Base+0xa4>
   229dc:	mov	r2, #0
   229e0:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   229e4:	mov	r5, #0
   229e8:	b	228e8 <myhtml_insertion_mode_in_column_group@@Base+0xa4>
   229ec:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   229f0:	mov	r0, r4
   229f4:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   229f8:	mov	r5, #0
   229fc:	b	228e8 <myhtml_insertion_mode_in_column_group@@Base+0xa4>
   22a00:	bl	10058 <myhtml_insertion_mode_in_head@plt>
   22a04:	mov	r5, r0
   22a08:	b	228e8 <myhtml_insertion_mode_in_column_group@@Base+0xa4>
   22a0c:	bl	10640 <myhtml_insertion_mode_in_body@plt>
   22a10:	mov	r5, r0
   22a14:	b	228e8 <myhtml_insertion_mode_in_column_group@@Base+0xa4>
   22a18:	mov	r5, #0
   22a1c:	b	228e8 <myhtml_insertion_mode_in_column_group@@Base+0xa4>

00022a20 <myhtml_insertion_mode_in_cell@@Base>:
   22a20:	push	{r4, r5, r6, lr}
   22a24:	mov	r5, r0
   22a28:	mov	r4, r1
   22a2c:	ldr	r3, [r1, #48]	; 0x30
   22a30:	tst	r3, #1
   22a34:	beq	22cf0 <myhtml_insertion_mode_in_cell@@Base+0x2d0>
   22a38:	ldr	r1, [r1]
   22a3c:	sub	r3, r1, #23
   22a40:	cmp	r3, #112	; 0x70
   22a44:	addls	pc, pc, r3, lsl #2
   22a48:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22a4c:	b	22d9c <myhtml_insertion_mode_in_cell@@Base+0x37c>
   22a50:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22a54:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22a58:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22a5c:	b	22d9c <myhtml_insertion_mode_in_cell@@Base+0x37c>
   22a60:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22a64:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22a68:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22a6c:	b	22d9c <myhtml_insertion_mode_in_cell@@Base+0x37c>
   22a70:	b	22d9c <myhtml_insertion_mode_in_cell@@Base+0x37c>
   22a74:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22a78:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22a7c:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22a80:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22a84:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22a88:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22a8c:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22a90:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22a94:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22a98:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22a9c:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22aa0:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22aa4:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22aa8:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22aac:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22ab0:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22ab4:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22ab8:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22abc:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22ac0:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22ac4:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22ac8:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22acc:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22ad0:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22ad4:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22ad8:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22adc:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22ae0:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22ae4:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22ae8:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22aec:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22af0:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22af4:	b	22d9c <myhtml_insertion_mode_in_cell@@Base+0x37c>
   22af8:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22afc:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22b00:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22b04:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22b08:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22b0c:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22b10:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22b14:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22b18:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22b1c:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22b20:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22b24:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22b28:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22b2c:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22b30:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22b34:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22b38:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22b3c:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22b40:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22b44:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22b48:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22b4c:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22b50:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22b54:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22b58:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22b5c:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22b60:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22b64:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22b68:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22b6c:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22b70:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22b74:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22b78:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22b7c:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22b80:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22b84:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22b88:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22b8c:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22b90:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22b94:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22b98:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22b9c:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22ba0:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22ba4:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22ba8:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22bac:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22bb0:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22bb4:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22bb8:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22bbc:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22bc0:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22bc4:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22bc8:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22bcc:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22bd0:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22bd4:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22bd8:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22bdc:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22be0:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22be4:	b	22c70 <myhtml_insertion_mode_in_cell@@Base+0x250>
   22be8:	b	22c70 <myhtml_insertion_mode_in_cell@@Base+0x250>
   22bec:	b	22c10 <myhtml_insertion_mode_in_cell@@Base+0x1f0>
   22bf0:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22bf4:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22bf8:	b	22c70 <myhtml_insertion_mode_in_cell@@Base+0x250>
   22bfc:	b	22c10 <myhtml_insertion_mode_in_cell@@Base+0x1f0>
   22c00:	b	22c70 <myhtml_insertion_mode_in_cell@@Base+0x250>
   22c04:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22c08:	b	22ce4 <myhtml_insertion_mode_in_cell@@Base+0x2c4>
   22c0c:	b	22c70 <myhtml_insertion_mode_in_cell@@Base+0x250>
   22c10:	mov	r3, #64	; 0x40
   22c14:	mov	r2, #1
   22c18:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   22c1c:	cmp	r0, #0
   22c20:	beq	22da4 <myhtml_insertion_mode_in_cell@@Base+0x384>
   22c24:	mov	r2, #0
   22c28:	mov	r1, r2
   22c2c:	mov	r0, r5
   22c30:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   22c34:	mov	r0, r5
   22c38:	bl	10628 <myhtml_tree_current_node@plt>
   22c3c:	ldr	r1, [r4]
   22c40:	bl	10aa8 <myhtml_is_html_node@plt>
   22c44:	mov	r3, #0
   22c48:	mov	r2, #1
   22c4c:	ldr	r1, [r4]
   22c50:	mov	r0, r5
   22c54:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   22c58:	mov	r0, r5
   22c5c:	bl	10e5c <myhtml_tree_active_formatting_up_to_last_marker@plt>
   22c60:	mov	r3, #13
   22c64:	str	r3, [r5, #168]	; 0xa8
   22c68:	mov	r0, #0
   22c6c:	pop	{r4, r5, r6, pc}
   22c70:	mov	r3, #64	; 0x40
   22c74:	mov	r2, #1
   22c78:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   22c7c:	cmp	r0, #0
   22c80:	beq	22dac <myhtml_insertion_mode_in_cell@@Base+0x38c>
   22c84:	mov	r3, #64	; 0x40
   22c88:	mov	r2, #1
   22c8c:	mov	r1, #127	; 0x7f
   22c90:	mov	r0, r5
   22c94:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   22c98:	subs	r1, r0, #0
   22c9c:	beq	22cb4 <myhtml_insertion_mode_in_cell@@Base+0x294>
   22ca0:	mov	r2, r4
   22ca4:	mov	r0, r5
   22ca8:	bl	10d3c <myhtml_tree_close_cell@plt>
   22cac:	mov	r0, #1
   22cb0:	pop	{r4, r5, r6, pc}
   22cb4:	mov	r3, #64	; 0x40
   22cb8:	mov	r2, #1
   22cbc:	mov	r1, #131	; 0x83
   22cc0:	mov	r0, r5
   22cc4:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   22cc8:	subs	r1, r0, #0
   22ccc:	beq	22db4 <myhtml_insertion_mode_in_cell@@Base+0x394>
   22cd0:	mov	r2, r4
   22cd4:	mov	r0, r5
   22cd8:	bl	10d3c <myhtml_tree_close_cell@plt>
   22cdc:	mov	r0, #1
   22ce0:	pop	{r4, r5, r6, pc}
   22ce4:	mov	r1, r4
   22ce8:	bl	10178 <myhtml_insertion_mode_in_table@plt>
   22cec:	pop	{r4, r5, r6, pc}
   22cf0:	ldr	r3, [r1]
   22cf4:	cmp	r3, #127	; 0x7f
   22cf8:	bhi	22d2c <myhtml_insertion_mode_in_cell@@Base+0x30c>
   22cfc:	cmp	r3, #126	; 0x7e
   22d00:	bcs	22d44 <myhtml_insertion_mode_in_cell@@Base+0x324>
   22d04:	cmp	r3, #27
   22d08:	beq	22d44 <myhtml_insertion_mode_in_cell@@Base+0x324>
   22d0c:	bcc	22d1c <myhtml_insertion_mode_in_cell@@Base+0x2fc>
   22d10:	sub	r3, r3, #31
   22d14:	cmp	r3, #1
   22d18:	bls	22d44 <myhtml_insertion_mode_in_cell@@Base+0x324>
   22d1c:	mov	r1, r4
   22d20:	mov	r0, r5
   22d24:	bl	10640 <myhtml_insertion_mode_in_body@plt>
   22d28:	pop	{r4, r5, r6, pc}
   22d2c:	cmp	r3, #130	; 0x82
   22d30:	bcc	22d1c <myhtml_insertion_mode_in_cell@@Base+0x2fc>
   22d34:	cmp	r3, #132	; 0x84
   22d38:	bls	22d44 <myhtml_insertion_mode_in_cell@@Base+0x324>
   22d3c:	cmp	r3, #135	; 0x87
   22d40:	bne	22d1c <myhtml_insertion_mode_in_cell@@Base+0x2fc>
   22d44:	mov	r3, #64	; 0x40
   22d48:	mov	r2, #1
   22d4c:	mov	r1, #127	; 0x7f
   22d50:	mov	r0, r5
   22d54:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   22d58:	mov	r6, r0
   22d5c:	mov	r3, #64	; 0x40
   22d60:	mov	r2, #1
   22d64:	mov	r1, #131	; 0x83
   22d68:	mov	r0, r5
   22d6c:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   22d70:	mov	r1, r0
   22d74:	cmp	r6, #0
   22d78:	cmpeq	r0, #0
   22d7c:	beq	22dbc <myhtml_insertion_mode_in_cell@@Base+0x39c>
   22d80:	mov	r2, r4
   22d84:	cmp	r6, #0
   22d88:	movne	r1, r6
   22d8c:	mov	r0, r5
   22d90:	bl	10d3c <myhtml_tree_close_cell@plt>
   22d94:	mov	r0, #1
   22d98:	pop	{r4, r5, r6, pc}
   22d9c:	mov	r0, #0
   22da0:	pop	{r4, r5, r6, pc}
   22da4:	mov	r0, #0
   22da8:	pop	{r4, r5, r6, pc}
   22dac:	mov	r0, #0
   22db0:	pop	{r4, r5, r6, pc}
   22db4:	mov	r0, #1
   22db8:	pop	{r4, r5, r6, pc}
   22dbc:	mov	r0, #0
   22dc0:	pop	{r4, r5, r6, pc}

00022dc4 <myhtml_insertion_mode_in_select@@Base>:
   22dc4:	push	{r4, r5, r6, lr}
   22dc8:	mov	r5, r0
   22dcc:	mov	r4, r1
   22dd0:	ldr	r3, [r1, #48]	; 0x30
   22dd4:	tst	r3, #1
   22dd8:	beq	22f4c <myhtml_insertion_mode_in_select@@Base+0x188>
   22ddc:	ldr	r3, [r1]
   22de0:	sub	r3, r3, #96	; 0x60
   22de4:	cmp	r3, #32
   22de8:	addls	pc, pc, r3, lsl #2
   22dec:	b	23144 <myhtml_insertion_mode_in_select@@Base+0x380>
   22df0:	b	22e74 <myhtml_insertion_mode_in_select@@Base+0xb0>
   22df4:	b	22eec <myhtml_insertion_mode_in_select@@Base+0x128>
   22df8:	b	23144 <myhtml_insertion_mode_in_select@@Base+0x380>
   22dfc:	b	23144 <myhtml_insertion_mode_in_select@@Base+0x380>
   22e00:	b	23144 <myhtml_insertion_mode_in_select@@Base+0x380>
   22e04:	b	23144 <myhtml_insertion_mode_in_select@@Base+0x380>
   22e08:	b	23144 <myhtml_insertion_mode_in_select@@Base+0x380>
   22e0c:	b	23144 <myhtml_insertion_mode_in_select@@Base+0x380>
   22e10:	b	23144 <myhtml_insertion_mode_in_select@@Base+0x380>
   22e14:	b	23144 <myhtml_insertion_mode_in_select@@Base+0x380>
   22e18:	b	23144 <myhtml_insertion_mode_in_select@@Base+0x380>
   22e1c:	b	23144 <myhtml_insertion_mode_in_select@@Base+0x380>
   22e20:	b	23144 <myhtml_insertion_mode_in_select@@Base+0x380>
   22e24:	b	23144 <myhtml_insertion_mode_in_select@@Base+0x380>
   22e28:	b	23144 <myhtml_insertion_mode_in_select@@Base+0x380>
   22e2c:	b	23144 <myhtml_insertion_mode_in_select@@Base+0x380>
   22e30:	b	23144 <myhtml_insertion_mode_in_select@@Base+0x380>
   22e34:	b	23144 <myhtml_insertion_mode_in_select@@Base+0x380>
   22e38:	b	22f10 <myhtml_insertion_mode_in_select@@Base+0x14c>
   22e3c:	b	23144 <myhtml_insertion_mode_in_select@@Base+0x380>
   22e40:	b	23144 <myhtml_insertion_mode_in_select@@Base+0x380>
   22e44:	b	23144 <myhtml_insertion_mode_in_select@@Base+0x380>
   22e48:	b	23144 <myhtml_insertion_mode_in_select@@Base+0x380>
   22e4c:	b	23144 <myhtml_insertion_mode_in_select@@Base+0x380>
   22e50:	b	23144 <myhtml_insertion_mode_in_select@@Base+0x380>
   22e54:	b	23144 <myhtml_insertion_mode_in_select@@Base+0x380>
   22e58:	b	23144 <myhtml_insertion_mode_in_select@@Base+0x380>
   22e5c:	b	23144 <myhtml_insertion_mode_in_select@@Base+0x380>
   22e60:	b	23144 <myhtml_insertion_mode_in_select@@Base+0x380>
   22e64:	b	23144 <myhtml_insertion_mode_in_select@@Base+0x380>
   22e68:	b	23144 <myhtml_insertion_mode_in_select@@Base+0x380>
   22e6c:	b	23144 <myhtml_insertion_mode_in_select@@Base+0x380>
   22e70:	b	22f44 <myhtml_insertion_mode_in_select@@Base+0x180>
   22e74:	bl	10628 <myhtml_tree_current_node@plt>
   22e78:	mov	r1, #97	; 0x61
   22e7c:	bl	10aa8 <myhtml_is_html_node@plt>
   22e80:	cmp	r0, #0
   22e84:	beq	22eb8 <myhtml_insertion_mode_in_select@@Base+0xf4>
   22e88:	ldr	r3, [r5, #128]	; 0x80
   22e8c:	ldr	r2, [r3, #4]
   22e90:	cmp	r2, #1
   22e94:	bls	22eb8 <myhtml_insertion_mode_in_select@@Base+0xf4>
   22e98:	ldr	r2, [r3, #4]
   22e9c:	sub	r2, r2, #-1073741822	; 0xc0000002
   22ea0:	ldr	r3, [r3]
   22ea4:	mov	r1, #96	; 0x60
   22ea8:	ldr	r0, [r3, r2, lsl #2]
   22eac:	bl	10aa8 <myhtml_is_html_node@plt>
   22eb0:	cmp	r0, #0
   22eb4:	bne	22ee0 <myhtml_insertion_mode_in_select@@Base+0x11c>
   22eb8:	mov	r0, r5
   22ebc:	bl	10628 <myhtml_tree_current_node@plt>
   22ec0:	mov	r1, #96	; 0x60
   22ec4:	bl	10aa8 <myhtml_is_html_node@plt>
   22ec8:	cmp	r0, #0
   22ecc:	popeq	{r4, r5, r6, pc}
   22ed0:	mov	r0, r5
   22ed4:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   22ed8:	mov	r0, #0
   22edc:	pop	{r4, r5, r6, pc}
   22ee0:	mov	r0, r5
   22ee4:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   22ee8:	b	22eb8 <myhtml_insertion_mode_in_select@@Base+0xf4>
   22eec:	bl	10628 <myhtml_tree_current_node@plt>
   22ef0:	mov	r1, #97	; 0x61
   22ef4:	bl	10aa8 <myhtml_is_html_node@plt>
   22ef8:	cmp	r0, #0
   22efc:	popeq	{r4, r5, r6, pc}
   22f00:	mov	r0, r5
   22f04:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   22f08:	mov	r0, #0
   22f0c:	pop	{r4, r5, r6, pc}
   22f10:	mov	r3, #128	; 0x80
   22f14:	mov	r2, #1
   22f18:	mov	r1, #114	; 0x72
   22f1c:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   22f20:	subs	r1, r0, #0
   22f24:	beq	2314c <myhtml_insertion_mode_in_select@@Base+0x388>
   22f28:	mov	r2, #0
   22f2c:	mov	r0, r5
   22f30:	bl	1013c <myhtml_tree_open_elements_pop_until_by_node@plt>
   22f34:	mov	r0, r5
   22f38:	bl	10730 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   22f3c:	mov	r0, #0
   22f40:	pop	{r4, r5, r6, pc}
   22f44:	bl	10058 <myhtml_insertion_mode_in_head@plt>
   22f48:	pop	{r4, r5, r6, pc}
   22f4c:	ldr	r3, [r1]
   22f50:	cmp	r3, #96	; 0x60
   22f54:	beq	230a4 <myhtml_insertion_mode_in_select@@Base+0x2e0>
   22f58:	bls	22f80 <myhtml_insertion_mode_in_select@@Base+0x1bc>
   22f5c:	cmp	r3, #114	; 0x72
   22f60:	beq	23110 <myhtml_insertion_mode_in_select@@Base+0x34c>
   22f64:	bls	22ff4 <myhtml_insertion_mode_in_select@@Base+0x230>
   22f68:	cmp	r3, #129	; 0x81
   22f6c:	beq	22fbc <myhtml_insertion_mode_in_select@@Base+0x1f8>
   22f70:	cmp	r3, #251	; 0xfb
   22f74:	bne	2303c <myhtml_insertion_mode_in_select@@Base+0x278>
   22f78:	bl	10640 <myhtml_insertion_mode_in_body@plt>
   22f7c:	pop	{r4, r5, r6, pc}
   22f80:	cmp	r3, #65	; 0x41
   22f84:	beq	23090 <myhtml_insertion_mode_in_select@@Base+0x2cc>
   22f88:	bhi	22fac <myhtml_insertion_mode_in_select@@Base+0x1e8>
   22f8c:	cmp	r3, #1
   22f90:	beq	2304c <myhtml_insertion_mode_in_select@@Base+0x288>
   22f94:	cmp	r3, #2
   22f98:	bne	23044 <myhtml_insertion_mode_in_select@@Base+0x280>
   22f9c:	mov	r2, #0
   22fa0:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   22fa4:	mov	r0, #0
   22fa8:	pop	{r4, r5, r6, pc}
   22fac:	cmp	r3, #70	; 0x46
   22fb0:	beq	22fbc <myhtml_insertion_mode_in_select@@Base+0x1f8>
   22fb4:	cmp	r3, #74	; 0x4a
   22fb8:	bne	23044 <myhtml_insertion_mode_in_select@@Base+0x280>
   22fbc:	mov	r3, #128	; 0x80
   22fc0:	mov	r2, #1
   22fc4:	mov	r1, #114	; 0x72
   22fc8:	mov	r0, r5
   22fcc:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   22fd0:	subs	r1, r0, #0
   22fd4:	beq	2315c <myhtml_insertion_mode_in_select@@Base+0x398>
   22fd8:	mov	r2, #0
   22fdc:	mov	r0, r5
   22fe0:	bl	1013c <myhtml_tree_open_elements_pop_until_by_node@plt>
   22fe4:	mov	r0, r5
   22fe8:	bl	10730 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   22fec:	mov	r0, #1
   22ff0:	pop	{r4, r5, r6, pc}
   22ff4:	cmp	r3, #97	; 0x61
   22ff8:	bne	23024 <myhtml_insertion_mode_in_select@@Base+0x260>
   22ffc:	bl	10628 <myhtml_tree_current_node@plt>
   23000:	ldr	r1, [r4]
   23004:	bl	10aa8 <myhtml_is_html_node@plt>
   23008:	cmp	r0, #0
   2300c:	bne	23098 <myhtml_insertion_mode_in_select@@Base+0x2d4>
   23010:	mov	r1, r4
   23014:	mov	r0, r5
   23018:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   2301c:	mov	r0, #0
   23020:	pop	{r4, r5, r6, pc}
   23024:	cmp	r3, #112	; 0x70
   23028:	bne	23044 <myhtml_insertion_mode_in_select@@Base+0x280>
   2302c:	mov	r1, r4
   23030:	mov	r0, r5
   23034:	bl	10058 <myhtml_insertion_mode_in_head@plt>
   23038:	pop	{r4, r5, r6, pc}
   2303c:	cmp	r3, #128	; 0x80
   23040:	beq	2302c <myhtml_insertion_mode_in_select@@Base+0x268>
   23044:	mov	r0, #0
   23048:	pop	{r4, r5, r6, pc}
   2304c:	ldr	r3, [r1, #48]	; 0x30
   23050:	tst	r3, #2048	; 0x800
   23054:	beq	23084 <myhtml_insertion_mode_in_select@@Base+0x2c0>
   23058:	bl	107cc <myhtml_insertion_fix_for_null_char_drop_all@plt>
   2305c:	ldr	r3, [r4, #12]
   23060:	cmp	r3, #0
   23064:	bne	23070 <myhtml_insertion_mode_in_select@@Base+0x2ac>
   23068:	mov	r0, #0
   2306c:	pop	{r4, r5, r6, pc}
   23070:	mov	r1, r4
   23074:	mov	r0, r5
   23078:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   2307c:	mov	r0, #0
   23080:	pop	{r4, r5, r6, pc}
   23084:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   23088:	mov	r0, #0
   2308c:	pop	{r4, r5, r6, pc}
   23090:	bl	10640 <myhtml_insertion_mode_in_body@plt>
   23094:	pop	{r4, r5, r6, pc}
   23098:	mov	r0, r5
   2309c:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   230a0:	b	23010 <myhtml_insertion_mode_in_select@@Base+0x24c>
   230a4:	bl	10628 <myhtml_tree_current_node@plt>
   230a8:	ldr	r3, [r0, #4]
   230ac:	cmp	r3, #97	; 0x61
   230b0:	beq	230e0 <myhtml_insertion_mode_in_select@@Base+0x31c>
   230b4:	mov	r0, r5
   230b8:	bl	10628 <myhtml_tree_current_node@plt>
   230bc:	ldr	r2, [r0, #4]
   230c0:	ldr	r3, [r4]
   230c4:	cmp	r2, r3
   230c8:	beq	230f8 <myhtml_insertion_mode_in_select@@Base+0x334>
   230cc:	mov	r1, r4
   230d0:	mov	r0, r5
   230d4:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   230d8:	mov	r0, #0
   230dc:	pop	{r4, r5, r6, pc}
   230e0:	ldr	r3, [r0, #8]
   230e4:	cmp	r3, #1
   230e8:	bne	230b4 <myhtml_insertion_mode_in_select@@Base+0x2f0>
   230ec:	mov	r0, r5
   230f0:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   230f4:	b	230b4 <myhtml_insertion_mode_in_select@@Base+0x2f0>
   230f8:	ldr	r3, [r0, #8]
   230fc:	cmp	r3, #1
   23100:	bne	230cc <myhtml_insertion_mode_in_select@@Base+0x308>
   23104:	mov	r0, r5
   23108:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   2310c:	b	230cc <myhtml_insertion_mode_in_select@@Base+0x308>
   23110:	mov	r3, #128	; 0x80
   23114:	mov	r2, #1
   23118:	mov	r1, #114	; 0x72
   2311c:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   23120:	subs	r1, r0, #0
   23124:	beq	23154 <myhtml_insertion_mode_in_select@@Base+0x390>
   23128:	mov	r2, #0
   2312c:	mov	r0, r5
   23130:	bl	1013c <myhtml_tree_open_elements_pop_until_by_node@plt>
   23134:	mov	r0, r5
   23138:	bl	10730 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   2313c:	mov	r0, #0
   23140:	pop	{r4, r5, r6, pc}
   23144:	mov	r0, #0
   23148:	pop	{r4, r5, r6, pc}
   2314c:	mov	r0, #0
   23150:	pop	{r4, r5, r6, pc}
   23154:	mov	r0, #0
   23158:	pop	{r4, r5, r6, pc}
   2315c:	mov	r0, #0
   23160:	pop	{r4, r5, r6, pc}

00023164 <myhtml_insertion_mode_in_select_in_table@@Base>:
   23164:	push	{r4, lr}
   23168:	mov	r4, r0
   2316c:	ldr	r3, [r1, #48]	; 0x30
   23170:	tst	r3, #1
   23174:	beq	231f8 <myhtml_insertion_mode_in_select_in_table@@Base+0x94>
   23178:	ldr	r0, [r1]
   2317c:	cmp	r0, #127	; 0x7f
   23180:	bhi	231a0 <myhtml_insertion_mode_in_select_in_table@@Base+0x3c>
   23184:	cmp	r0, #125	; 0x7d
   23188:	bcs	231b8 <myhtml_insertion_mode_in_select_in_table@@Base+0x54>
   2318c:	cmp	r0, #27
   23190:	beq	231b8 <myhtml_insertion_mode_in_select_in_table@@Base+0x54>
   23194:	mov	r0, r4
   23198:	bl	103c4 <myhtml_insertion_mode_in_select@plt>
   2319c:	pop	{r4, pc}
   231a0:	cmp	r0, #130	; 0x82
   231a4:	bcc	23194 <myhtml_insertion_mode_in_select_in_table@@Base+0x30>
   231a8:	cmp	r0, #132	; 0x84
   231ac:	bls	231b8 <myhtml_insertion_mode_in_select_in_table@@Base+0x54>
   231b0:	cmp	r0, #135	; 0x87
   231b4:	bne	23194 <myhtml_insertion_mode_in_select_in_table@@Base+0x30>
   231b8:	mov	r3, #64	; 0x40
   231bc:	mov	r2, #1
   231c0:	mov	r1, r0
   231c4:	mov	r0, r4
   231c8:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   231cc:	cmp	r0, #0
   231d0:	beq	2325c <myhtml_insertion_mode_in_select_in_table@@Base+0xf8>
   231d4:	mov	r3, #0
   231d8:	mov	r2, #1
   231dc:	mov	r1, #114	; 0x72
   231e0:	mov	r0, r4
   231e4:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   231e8:	mov	r0, r4
   231ec:	bl	10730 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   231f0:	mov	r0, #1
   231f4:	pop	{r4, pc}
   231f8:	ldr	r3, [r1]
   231fc:	cmp	r3, #127	; 0x7f
   23200:	bhi	23220 <myhtml_insertion_mode_in_select_in_table@@Base+0xbc>
   23204:	cmp	r3, #125	; 0x7d
   23208:	bcs	23238 <myhtml_insertion_mode_in_select_in_table@@Base+0xd4>
   2320c:	cmp	r3, #27
   23210:	beq	23238 <myhtml_insertion_mode_in_select_in_table@@Base+0xd4>
   23214:	mov	r0, r4
   23218:	bl	103c4 <myhtml_insertion_mode_in_select@plt>
   2321c:	pop	{r4, pc}
   23220:	cmp	r3, #130	; 0x82
   23224:	bcc	23214 <myhtml_insertion_mode_in_select_in_table@@Base+0xb0>
   23228:	cmp	r3, #132	; 0x84
   2322c:	bls	23238 <myhtml_insertion_mode_in_select_in_table@@Base+0xd4>
   23230:	cmp	r3, #135	; 0x87
   23234:	bne	23214 <myhtml_insertion_mode_in_select_in_table@@Base+0xb0>
   23238:	mov	r3, #0
   2323c:	mov	r2, #1
   23240:	mov	r1, #114	; 0x72
   23244:	mov	r0, r4
   23248:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   2324c:	mov	r0, r4
   23250:	bl	10730 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   23254:	mov	r0, #1
   23258:	pop	{r4, pc}
   2325c:	mov	r0, #0
   23260:	pop	{r4, pc}

00023264 <myhtml_insertion_mode_after_body@@Base>:
   23264:	ldr	r3, [r1, #48]	; 0x30
   23268:	tst	r3, #1
   2326c:	beq	232b0 <myhtml_insertion_mode_after_body@@Base+0x4c>
   23270:	ldr	r3, [r1]
   23274:	cmp	r3, #65	; 0x41
   23278:	bne	232a0 <myhtml_insertion_mode_after_body@@Base+0x3c>
   2327c:	ldr	r3, [r0, #88]	; 0x58
   23280:	cmp	r3, #0
   23284:	beq	23290 <myhtml_insertion_mode_after_body@@Base+0x2c>
   23288:	mov	r0, #0
   2328c:	bx	lr
   23290:	mov	r3, #21
   23294:	str	r3, [r0, #168]	; 0xa8
   23298:	mov	r0, #0
   2329c:	bx	lr
   232a0:	mov	r3, #6
   232a4:	str	r3, [r0, #168]	; 0xa8
   232a8:	mov	r0, #1
   232ac:	bx	lr
   232b0:	ldr	r3, [r1]
   232b4:	cmp	r3, #3
   232b8:	beq	2337c <myhtml_insertion_mode_after_body@@Base+0x118>
   232bc:	push	{r4, r5, r6, lr}
   232c0:	mov	r4, r1
   232c4:	bhi	232f0 <myhtml_insertion_mode_after_body@@Base+0x8c>
   232c8:	cmp	r3, #1
   232cc:	beq	2330c <myhtml_insertion_mode_after_body@@Base+0xa8>
   232d0:	cmp	r3, #2
   232d4:	bne	2336c <myhtml_insertion_mode_after_body@@Base+0x108>
   232d8:	ldr	r3, [r0, #128]	; 0x80
   232dc:	ldr	r2, [r3, #4]
   232e0:	cmp	r2, #0
   232e4:	bne	23330 <myhtml_insertion_mode_after_body@@Base+0xcc>
   232e8:	mov	r0, #0
   232ec:	pop	{r4, r5, r6, pc}
   232f0:	cmp	r3, #65	; 0x41
   232f4:	beq	23364 <myhtml_insertion_mode_after_body@@Base+0x100>
   232f8:	cmp	r3, #251	; 0xfb
   232fc:	bne	2336c <myhtml_insertion_mode_after_body@@Base+0x108>
   23300:	bl	10310 <myhtml_rules_stop_parsing@plt>
   23304:	mov	r0, #0
   23308:	pop	{r4, r5, r6, pc}
   2330c:	ldr	r3, [r1, #48]	; 0x30
   23310:	tst	r3, #8
   23314:	bne	23328 <myhtml_insertion_mode_after_body@@Base+0xc4>
   23318:	mov	r3, #6
   2331c:	str	r3, [r0, #168]	; 0xa8
   23320:	mov	r0, #1
   23324:	pop	{r4, r5, r6, pc}
   23328:	bl	10640 <myhtml_insertion_mode_in_body@plt>
   2332c:	pop	{r4, r5, r6, pc}
   23330:	ldr	r3, [r3]
   23334:	ldr	r5, [r3]
   23338:	bl	ffe0 <myhtml_tree_node_create@plt>
   2333c:	mov	r1, r0
   23340:	mov	r3, #2
   23344:	str	r3, [r0, #4]
   23348:	str	r4, [r0, #32]
   2334c:	ldr	r3, [r5, #8]
   23350:	str	r3, [r0, #8]
   23354:	mov	r0, r5
   23358:	bl	106b8 <myhtml_tree_node_add_child@plt>
   2335c:	mov	r0, #0
   23360:	pop	{r4, r5, r6, pc}
   23364:	bl	10640 <myhtml_insertion_mode_in_body@plt>
   23368:	pop	{r4, r5, r6, pc}
   2336c:	mov	r3, #6
   23370:	str	r3, [r0, #168]	; 0xa8
   23374:	mov	r0, #1
   23378:	pop	{r4, r5, r6, pc}
   2337c:	mov	r0, #0
   23380:	bx	lr

00023384 <myhtml_insertion_mode_in_frameset@@Base>:
   23384:	push	{r4, r5, r6, lr}
   23388:	mov	r5, r0
   2338c:	mov	r4, r1
   23390:	ldr	r3, [r1, #48]	; 0x30
   23394:	tst	r3, #1
   23398:	beq	23418 <myhtml_insertion_mode_in_frameset@@Base+0x94>
   2339c:	ldr	r3, [r1]
   233a0:	cmp	r3, #54	; 0x36
   233a4:	beq	233b0 <myhtml_insertion_mode_in_frameset@@Base+0x2c>
   233a8:	mov	r0, #0
   233ac:	pop	{r4, r5, r6, pc}
   233b0:	bl	10628 <myhtml_tree_current_node@plt>
   233b4:	ldr	r3, [r5, #84]	; 0x54
   233b8:	ldr	r3, [r3, #20]
   233bc:	cmp	r3, r0
   233c0:	beq	23504 <myhtml_insertion_mode_in_frameset@@Base+0x180>
   233c4:	mov	r0, r5
   233c8:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   233cc:	mov	r0, r5
   233d0:	bl	10628 <myhtml_tree_current_node@plt>
   233d4:	ldr	r3, [r5, #88]	; 0x58
   233d8:	cmp	r3, #0
   233dc:	beq	233e8 <myhtml_insertion_mode_in_frameset@@Base+0x64>
   233e0:	mov	r0, #0
   233e4:	pop	{r4, r5, r6, pc}
   233e8:	ldr	r3, [r0, #4]
   233ec:	cmp	r3, #54	; 0x36
   233f0:	beq	23404 <myhtml_insertion_mode_in_frameset@@Base+0x80>
   233f4:	mov	r3, #20
   233f8:	str	r3, [r5, #168]	; 0xa8
   233fc:	mov	r0, #0
   23400:	pop	{r4, r5, r6, pc}
   23404:	ldr	r3, [r0, #8]
   23408:	cmp	r3, #1
   2340c:	bne	233f4 <myhtml_insertion_mode_in_frameset@@Base+0x70>
   23410:	mov	r0, #0
   23414:	pop	{r4, r5, r6, pc}
   23418:	ldr	r3, [r1]
   2341c:	cmp	r3, #54	; 0x36
   23420:	beq	234c8 <myhtml_insertion_mode_in_frameset@@Base+0x144>
   23424:	bhi	23448 <myhtml_insertion_mode_in_frameset@@Base+0xc4>
   23428:	cmp	r3, #2
   2342c:	beq	234b8 <myhtml_insertion_mode_in_frameset@@Base+0x134>
   23430:	cmp	r3, #53	; 0x35
   23434:	beq	234d4 <myhtml_insertion_mode_in_frameset@@Base+0x150>
   23438:	cmp	r3, #1
   2343c:	beq	23468 <myhtml_insertion_mode_in_frameset@@Base+0xe4>
   23440:	mov	r0, #0
   23444:	pop	{r4, r5, r6, pc}
   23448:	cmp	r3, #92	; 0x5c
   2344c:	beq	234e8 <myhtml_insertion_mode_in_frameset@@Base+0x164>
   23450:	cmp	r3, #251	; 0xfb
   23454:	beq	234f0 <myhtml_insertion_mode_in_frameset@@Base+0x16c>
   23458:	cmp	r3, #65	; 0x41
   2345c:	bne	23440 <myhtml_insertion_mode_in_frameset@@Base+0xbc>
   23460:	bl	10640 <myhtml_insertion_mode_in_body@plt>
   23464:	pop	{r4, r5, r6, pc}
   23468:	ldr	r3, [r1, #48]	; 0x30
   2346c:	tst	r3, #8
   23470:	bne	23498 <myhtml_insertion_mode_in_frameset@@Base+0x114>
   23474:	ldr	r0, [r0, #8]
   23478:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   2347c:	add	r0, r4, #4
   23480:	bl	102ec <mycore_string_stay_only_whitespace@plt>
   23484:	ldr	r3, [r4, #12]
   23488:	cmp	r3, #0
   2348c:	bne	234a4 <myhtml_insertion_mode_in_frameset@@Base+0x120>
   23490:	mov	r0, #0
   23494:	pop	{r4, r5, r6, pc}
   23498:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   2349c:	mov	r0, #0
   234a0:	pop	{r4, r5, r6, pc}
   234a4:	mov	r1, r4
   234a8:	mov	r0, r5
   234ac:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   234b0:	mov	r0, #0
   234b4:	pop	{r4, r5, r6, pc}
   234b8:	mov	r2, #0
   234bc:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   234c0:	mov	r0, #0
   234c4:	pop	{r4, r5, r6, pc}
   234c8:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   234cc:	mov	r0, #0
   234d0:	pop	{r4, r5, r6, pc}
   234d4:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   234d8:	mov	r0, r5
   234dc:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   234e0:	mov	r0, #0
   234e4:	pop	{r4, r5, r6, pc}
   234e8:	bl	10058 <myhtml_insertion_mode_in_head@plt>
   234ec:	pop	{r4, r5, r6, pc}
   234f0:	bl	10628 <myhtml_tree_current_node@plt>
   234f4:	mov	r0, r5
   234f8:	bl	10310 <myhtml_rules_stop_parsing@plt>
   234fc:	mov	r0, #0
   23500:	pop	{r4, r5, r6, pc}
   23504:	mov	r0, #0
   23508:	pop	{r4, r5, r6, pc}

0002350c <myhtml_insertion_mode_after_frameset@@Base>:
   2350c:	ldr	r3, [r1, #48]	; 0x30
   23510:	tst	r3, #1
   23514:	beq	23534 <myhtml_insertion_mode_after_frameset@@Base+0x28>
   23518:	ldr	r3, [r1]
   2351c:	cmp	r3, #65	; 0x41
   23520:	bne	235ec <myhtml_insertion_mode_after_frameset@@Base+0xe0>
   23524:	mov	r3, #22
   23528:	str	r3, [r0, #168]	; 0xa8
   2352c:	mov	r0, #0
   23530:	bx	lr
   23534:	push	{r4, r5, r6, lr}
   23538:	mov	r4, r1
   2353c:	mov	r5, r0
   23540:	ldr	r3, [r1]
   23544:	cmp	r3, #65	; 0x41
   23548:	beq	235dc <myhtml_insertion_mode_after_frameset@@Base+0xd0>
   2354c:	bhi	23570 <myhtml_insertion_mode_after_frameset@@Base+0x64>
   23550:	cmp	r3, #1
   23554:	beq	2358c <myhtml_insertion_mode_after_frameset@@Base+0x80>
   23558:	cmp	r3, #2
   2355c:	bne	235f4 <myhtml_insertion_mode_after_frameset@@Base+0xe8>
   23560:	mov	r2, #0
   23564:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   23568:	mov	r0, #0
   2356c:	pop	{r4, r5, r6, pc}
   23570:	cmp	r3, #92	; 0x5c
   23574:	beq	235e4 <myhtml_insertion_mode_after_frameset@@Base+0xd8>
   23578:	cmp	r3, #251	; 0xfb
   2357c:	bne	235f4 <myhtml_insertion_mode_after_frameset@@Base+0xe8>
   23580:	bl	10310 <myhtml_rules_stop_parsing@plt>
   23584:	mov	r0, #0
   23588:	pop	{r4, r5, r6, pc}
   2358c:	ldr	r3, [r1, #48]	; 0x30
   23590:	tst	r3, #8
   23594:	bne	235bc <myhtml_insertion_mode_after_frameset@@Base+0xb0>
   23598:	ldr	r0, [r0, #8]
   2359c:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   235a0:	add	r0, r4, #4
   235a4:	bl	102ec <mycore_string_stay_only_whitespace@plt>
   235a8:	ldr	r3, [r4, #12]
   235ac:	cmp	r3, #0
   235b0:	bne	235c8 <myhtml_insertion_mode_after_frameset@@Base+0xbc>
   235b4:	mov	r0, #0
   235b8:	pop	{r4, r5, r6, pc}
   235bc:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   235c0:	mov	r0, #0
   235c4:	pop	{r4, r5, r6, pc}
   235c8:	mov	r1, r4
   235cc:	mov	r0, r5
   235d0:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   235d4:	mov	r0, #0
   235d8:	pop	{r4, r5, r6, pc}
   235dc:	bl	10640 <myhtml_insertion_mode_in_body@plt>
   235e0:	pop	{r4, r5, r6, pc}
   235e4:	bl	10058 <myhtml_insertion_mode_in_head@plt>
   235e8:	pop	{r4, r5, r6, pc}
   235ec:	mov	r0, #0
   235f0:	bx	lr
   235f4:	mov	r0, #0
   235f8:	pop	{r4, r5, r6, pc}

000235fc <myhtml_insertion_mode_after_after_body@@Base>:
   235fc:	ldr	r3, [r1, #48]	; 0x30
   23600:	tst	r3, #1
   23604:	bne	23660 <myhtml_insertion_mode_after_after_body@@Base+0x64>
   23608:	push	{r4, r5, r6, lr}
   2360c:	mov	r4, r1
   23610:	ldr	r3, [r1]
   23614:	cmp	r3, #3
   23618:	beq	236b0 <myhtml_insertion_mode_after_after_body@@Base+0xb4>
   2361c:	bhi	23670 <myhtml_insertion_mode_after_after_body@@Base+0x74>
   23620:	cmp	r3, #1
   23624:	beq	2368c <myhtml_insertion_mode_after_after_body@@Base+0x90>
   23628:	cmp	r3, #2
   2362c:	bne	236bc <myhtml_insertion_mode_after_after_body@@Base+0xc0>
   23630:	ldr	r5, [r0, #84]	; 0x54
   23634:	bl	ffe0 <myhtml_tree_node_create@plt>
   23638:	mov	r1, r0
   2363c:	mov	r3, #2
   23640:	str	r3, [r0, #4]
   23644:	str	r4, [r0, #32]
   23648:	ldr	r3, [r5, #8]
   2364c:	str	r3, [r0, #8]
   23650:	mov	r0, r5
   23654:	bl	106b8 <myhtml_tree_node_add_child@plt>
   23658:	mov	r0, #0
   2365c:	pop	{r4, r5, r6, pc}
   23660:	mov	r3, #6
   23664:	str	r3, [r0, #168]	; 0xa8
   23668:	mov	r0, #1
   2366c:	bx	lr
   23670:	cmp	r3, #65	; 0x41
   23674:	beq	236b0 <myhtml_insertion_mode_after_after_body@@Base+0xb4>
   23678:	cmp	r3, #251	; 0xfb
   2367c:	bne	236bc <myhtml_insertion_mode_after_after_body@@Base+0xc0>
   23680:	bl	10310 <myhtml_rules_stop_parsing@plt>
   23684:	mov	r0, #0
   23688:	pop	{r4, r5, r6, pc}
   2368c:	ldr	r3, [r1, #48]	; 0x30
   23690:	tst	r3, #8
   23694:	bne	236a8 <myhtml_insertion_mode_after_after_body@@Base+0xac>
   23698:	mov	r3, #6
   2369c:	str	r3, [r0, #168]	; 0xa8
   236a0:	mov	r0, #1
   236a4:	pop	{r4, r5, r6, pc}
   236a8:	bl	10640 <myhtml_insertion_mode_in_body@plt>
   236ac:	pop	{r4, r5, r6, pc}
   236b0:	mov	r1, r4
   236b4:	bl	10640 <myhtml_insertion_mode_in_body@plt>
   236b8:	pop	{r4, r5, r6, pc}
   236bc:	mov	r3, #6
   236c0:	str	r3, [r0, #168]	; 0xa8
   236c4:	mov	r0, #1
   236c8:	pop	{r4, r5, r6, pc}

000236cc <myhtml_insertion_mode_after_after_frameset@@Base>:
   236cc:	ldr	r3, [r1, #48]	; 0x30
   236d0:	tst	r3, #1
   236d4:	bne	237a4 <myhtml_insertion_mode_after_after_frameset@@Base+0xd8>
   236d8:	push	{r4, r5, r6, lr}
   236dc:	mov	r4, r1
   236e0:	mov	r5, r0
   236e4:	ldr	r3, [r1]
   236e8:	cmp	r3, #3
   236ec:	beq	23780 <myhtml_insertion_mode_after_after_frameset@@Base+0xb4>
   236f0:	bls	23714 <myhtml_insertion_mode_after_after_frameset@@Base+0x48>
   236f4:	cmp	r3, #92	; 0x5c
   236f8:	beq	2379c <myhtml_insertion_mode_after_after_frameset@@Base+0xd0>
   236fc:	cmp	r3, #251	; 0xfb
   23700:	beq	23790 <myhtml_insertion_mode_after_after_frameset@@Base+0xc4>
   23704:	cmp	r3, #65	; 0x41
   23708:	beq	23780 <myhtml_insertion_mode_after_after_frameset@@Base+0xb4>
   2370c:	mov	r0, #0
   23710:	pop	{r4, r5, r6, pc}
   23714:	cmp	r3, #1
   23718:	beq	23754 <myhtml_insertion_mode_after_after_frameset@@Base+0x88>
   2371c:	cmp	r3, #2
   23720:	bne	2370c <myhtml_insertion_mode_after_after_frameset@@Base+0x40>
   23724:	ldr	r6, [r0, #84]	; 0x54
   23728:	bl	ffe0 <myhtml_tree_node_create@plt>
   2372c:	mov	r1, r0
   23730:	mov	r3, #2
   23734:	str	r3, [r0, #4]
   23738:	str	r4, [r0, #32]
   2373c:	ldr	r3, [r6, #8]
   23740:	str	r3, [r0, #8]
   23744:	mov	r0, r6
   23748:	bl	106b8 <myhtml_tree_node_add_child@plt>
   2374c:	mov	r0, #0
   23750:	pop	{r4, r5, r6, pc}
   23754:	ldr	r3, [r1, #48]	; 0x30
   23758:	tst	r3, #8
   2375c:	bne	23778 <myhtml_insertion_mode_after_after_frameset@@Base+0xac>
   23760:	bl	fef0 <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   23764:	subs	r1, r0, #0
   23768:	beq	237ac <myhtml_insertion_mode_after_after_frameset@@Base+0xe0>
   2376c:	mov	r0, r5
   23770:	bl	10640 <myhtml_insertion_mode_in_body@plt>
   23774:	pop	{r4, r5, r6, pc}
   23778:	bl	10640 <myhtml_insertion_mode_in_body@plt>
   2377c:	pop	{r4, r5, r6, pc}
   23780:	mov	r1, r4
   23784:	mov	r0, r5
   23788:	bl	10640 <myhtml_insertion_mode_in_body@plt>
   2378c:	pop	{r4, r5, r6, pc}
   23790:	bl	10310 <myhtml_rules_stop_parsing@plt>
   23794:	mov	r0, #0
   23798:	pop	{r4, r5, r6, pc}
   2379c:	bl	10058 <myhtml_insertion_mode_in_head@plt>
   237a0:	pop	{r4, r5, r6, pc}
   237a4:	mov	r0, #0
   237a8:	bx	lr
   237ac:	mov	r0, #0
   237b0:	pop	{r4, r5, r6, pc}

000237b4 <myhtml_rules_check_for_first_newline@@Base>:
   237b4:	ldr	r3, [r0, #180]	; 0xb4
   237b8:	tst	r3, #64	; 0x40
   237bc:	beq	23860 <myhtml_rules_check_for_first_newline@@Base+0xac>
   237c0:	push	{r4, r5, r6, lr}
   237c4:	mov	r5, r1
   237c8:	mov	r4, r0
   237cc:	ldr	r3, [r0, #180]	; 0xb4
   237d0:	tst	r3, #128	; 0x80
   237d4:	beq	237e4 <myhtml_rules_check_for_first_newline@@Base+0x30>
   237d8:	ldr	r3, [r1]
   237dc:	cmp	r3, #1
   237e0:	beq	23800 <myhtml_rules_check_for_first_newline@@Base+0x4c>
   237e4:	ldr	r3, [r4, #180]	; 0xb4
   237e8:	ldr	r2, [r4, #180]	; 0xb4
   237ec:	and	r3, r3, #64	; 0x40
   237f0:	eor	r3, r3, r2
   237f4:	str	r3, [r4, #180]	; 0xb4
   237f8:	mov	r0, #0
   237fc:	pop	{r4, r5, r6, pc}
   23800:	ldr	r0, [r0, #8]
   23804:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   23808:	ldr	r3, [r5, #12]
   2380c:	cmp	r3, #0
   23810:	beq	23868 <myhtml_rules_check_for_first_newline@@Base+0xb4>
   23814:	ldr	r0, [r5, #4]
   23818:	ldrb	r3, [r0]
   2381c:	cmp	r3, #10
   23820:	bne	237e4 <myhtml_rules_check_for_first_newline@@Base+0x30>
   23824:	mov	r1, #1
   23828:	bl	10c64 <mchar_async_crop_first_chars_without_cache@plt>
   2382c:	str	r0, [r5, #4]
   23830:	ldr	r3, [r5, #12]
   23834:	sub	r3, r3, #1
   23838:	str	r3, [r5, #12]
   2383c:	cmp	r3, #0
   23840:	bne	237e4 <myhtml_rules_check_for_first_newline@@Base+0x30>
   23844:	ldr	r3, [r4, #180]	; 0xb4
   23848:	ldr	r2, [r4, #180]	; 0xb4
   2384c:	and	r3, r3, #64	; 0x40
   23850:	eor	r3, r3, r2
   23854:	str	r3, [r4, #180]	; 0xb4
   23858:	mov	r0, #1
   2385c:	pop	{r4, r5, r6, pc}
   23860:	mov	r0, #0
   23864:	bx	lr
   23868:	mov	r0, #1
   2386c:	pop	{r4, r5, r6, pc}

00023870 <myhtml_rules_tree_dispatcher@@Base>:
   23870:	push	{r4, r5, r6, lr}
   23874:	mov	r4, r0
   23878:	mov	r5, r1
   2387c:	bl	10d60 <myhtml_rules_check_for_first_newline@plt>
   23880:	cmp	r0, #0
   23884:	bne	2394c <myhtml_rules_tree_dispatcher@@Base+0xdc>
   23888:	ldr	r3, [r4, #164]	; 0xa4
   2388c:	cmp	r3, #0
   23890:	movne	r3, #0
   23894:	strne	r3, [r4, #164]	; 0xa4
   23898:	mov	r0, r4
   2389c:	bl	10d48 <myhtml_tree_adjusted_current_node@plt>
   238a0:	mov	r6, r0
   238a4:	ldr	r3, [r4, #128]	; 0x80
   238a8:	ldr	r3, [r3, #4]
   238ac:	cmp	r3, #0
   238b0:	beq	23958 <myhtml_rules_tree_dispatcher@@Base+0xe8>
   238b4:	ldr	r3, [r0, #8]
   238b8:	cmp	r3, #1
   238bc:	beq	23958 <myhtml_rules_tree_dispatcher@@Base+0xe8>
   238c0:	mov	r1, r0
   238c4:	mov	r0, r4
   238c8:	bl	10040 <myhtml_tree_is_mathml_integration_point@plt>
   238cc:	cmp	r0, #0
   238d0:	beq	238f8 <myhtml_rules_tree_dispatcher@@Base+0x88>
   238d4:	ldr	r3, [r5]
   238d8:	cmp	r3, #1
   238dc:	beq	238ec <myhtml_rules_tree_dispatcher@@Base+0x7c>
   238e0:	cmp	r3, #226	; 0xe2
   238e4:	cmpne	r3, #221	; 0xdd
   238e8:	beq	238f8 <myhtml_rules_tree_dispatcher@@Base+0x88>
   238ec:	ldr	r3, [r5, #48]	; 0x30
   238f0:	tst	r3, #1
   238f4:	beq	23980 <myhtml_rules_tree_dispatcher@@Base+0x110>
   238f8:	ldr	r3, [r6, #4]
   238fc:	cmp	r3, #8
   23900:	beq	239a0 <myhtml_rules_tree_dispatcher@@Base+0x130>
   23904:	mov	r1, r6
   23908:	mov	r0, r4
   2390c:	bl	101fc <myhtml_tree_is_html_integration_point@plt>
   23910:	cmp	r0, #0
   23914:	beq	23930 <myhtml_rules_tree_dispatcher@@Base+0xc0>
   23918:	ldr	r3, [r5, #48]	; 0x30
   2391c:	tst	r3, #1
   23920:	beq	239e4 <myhtml_rules_tree_dispatcher@@Base+0x174>
   23924:	ldr	r3, [r5]
   23928:	cmp	r3, #1
   2392c:	beq	239e4 <myhtml_rules_tree_dispatcher@@Base+0x174>
   23930:	ldr	r3, [r5]
   23934:	cmp	r3, #251	; 0xfb
   23938:	beq	23a04 <myhtml_rules_tree_dispatcher@@Base+0x194>
   2393c:	mov	r1, r5
   23940:	mov	r0, r4
   23944:	bl	fe24 <myhtml_insertion_mode_in_foreign_content@plt>
   23948:	b	23974 <myhtml_rules_tree_dispatcher@@Base+0x104>
   2394c:	str	r5, [r4, #152]	; 0x98
   23950:	mov	r0, #0
   23954:	pop	{r4, r5, r6, pc}
   23958:	ldr	r3, [r4]
   2395c:	ldr	r2, [r4, #168]	; 0xa8
   23960:	ldr	r3, [r3, #28]
   23964:	ldr	r3, [r3, r2, lsl #2]
   23968:	mov	r1, r5
   2396c:	mov	r0, r4
   23970:	blx	r3
   23974:	cmp	r0, #0
   23978:	streq	r5, [r4, #152]	; 0x98
   2397c:	pop	{r4, r5, r6, pc}
   23980:	ldr	r3, [r4]
   23984:	ldr	r2, [r4, #168]	; 0xa8
   23988:	ldr	r3, [r3, #28]
   2398c:	ldr	r3, [r3, r2, lsl #2]
   23990:	mov	r1, r5
   23994:	mov	r0, r4
   23998:	blx	r3
   2399c:	b	23974 <myhtml_rules_tree_dispatcher@@Base+0x104>
   239a0:	ldr	r3, [r6, #8]
   239a4:	cmp	r3, #2
   239a8:	bne	23904 <myhtml_rules_tree_dispatcher@@Base+0x94>
   239ac:	ldr	r3, [r5]
   239b0:	cmp	r3, #124	; 0x7c
   239b4:	bne	23904 <myhtml_rules_tree_dispatcher@@Base+0x94>
   239b8:	ldr	r3, [r5, #48]	; 0x30
   239bc:	tst	r3, #1
   239c0:	bne	23904 <myhtml_rules_tree_dispatcher@@Base+0x94>
   239c4:	ldr	r3, [r4]
   239c8:	ldr	r2, [r4, #168]	; 0xa8
   239cc:	ldr	r3, [r3, #28]
   239d0:	ldr	r3, [r3, r2, lsl #2]
   239d4:	mov	r1, r5
   239d8:	mov	r0, r4
   239dc:	blx	r3
   239e0:	b	23974 <myhtml_rules_tree_dispatcher@@Base+0x104>
   239e4:	ldr	r3, [r4]
   239e8:	ldr	r2, [r4, #168]	; 0xa8
   239ec:	ldr	r3, [r3, #28]
   239f0:	ldr	r3, [r3, r2, lsl #2]
   239f4:	mov	r1, r5
   239f8:	mov	r0, r4
   239fc:	blx	r3
   23a00:	b	23974 <myhtml_rules_tree_dispatcher@@Base+0x104>
   23a04:	ldr	r3, [r4]
   23a08:	ldr	r2, [r4, #168]	; 0xa8
   23a0c:	ldr	r3, [r3, #28]
   23a10:	ldr	r3, [r3, r2, lsl #2]
   23a14:	mov	r1, r5
   23a18:	mov	r0, r4
   23a1c:	blx	r3
   23a20:	b	23974 <myhtml_rules_tree_dispatcher@@Base+0x104>

00023a24 <myhtml_rules_init@@Base>:
   23a24:	push	{r4, r5, r6, lr}
   23a28:	mov	r5, r0
   23a2c:	ldr	r4, [pc, #400]	; 23bc4 <myhtml_rules_init@@Base+0x1a0>
   23a30:	add	r4, pc, r4
   23a34:	mov	r0, #92	; 0x5c
   23a38:	bl	10c94 <mycore_malloc@plt>
   23a3c:	str	r0, [r5, #28]
   23a40:	cmp	r0, #0
   23a44:	beq	23bbc <myhtml_rules_init@@Base+0x198>
   23a48:	ldr	r3, [pc, #376]	; 23bc8 <myhtml_rules_init@@Base+0x1a4>
   23a4c:	ldr	r3, [r4, r3]
   23a50:	str	r3, [r0]
   23a54:	ldr	r3, [r5, #28]
   23a58:	ldr	r2, [pc, #364]	; 23bcc <myhtml_rules_init@@Base+0x1a8>
   23a5c:	ldr	r2, [r4, r2]
   23a60:	str	r2, [r3, #4]
   23a64:	ldr	r3, [r5, #28]
   23a68:	ldr	r2, [pc, #352]	; 23bd0 <myhtml_rules_init@@Base+0x1ac>
   23a6c:	ldr	r2, [r4, r2]
   23a70:	str	r2, [r3, #8]
   23a74:	ldr	r3, [r5, #28]
   23a78:	ldr	r2, [pc, #340]	; 23bd4 <myhtml_rules_init@@Base+0x1b0>
   23a7c:	ldr	r2, [r4, r2]
   23a80:	str	r2, [r3, #12]
   23a84:	ldr	r3, [r5, #28]
   23a88:	ldr	r2, [pc, #328]	; 23bd8 <myhtml_rules_init@@Base+0x1b4>
   23a8c:	ldr	r2, [r4, r2]
   23a90:	str	r2, [r3, #16]
   23a94:	ldr	r3, [r5, #28]
   23a98:	ldr	r2, [pc, #316]	; 23bdc <myhtml_rules_init@@Base+0x1b8>
   23a9c:	ldr	r2, [r4, r2]
   23aa0:	str	r2, [r3, #20]
   23aa4:	ldr	r3, [r5, #28]
   23aa8:	ldr	r2, [pc, #304]	; 23be0 <myhtml_rules_init@@Base+0x1bc>
   23aac:	ldr	r2, [r4, r2]
   23ab0:	str	r2, [r3, #24]
   23ab4:	ldr	r3, [r5, #28]
   23ab8:	ldr	r2, [pc, #292]	; 23be4 <myhtml_rules_init@@Base+0x1c0>
   23abc:	ldr	r2, [r4, r2]
   23ac0:	str	r2, [r3, #28]
   23ac4:	ldr	r3, [r5, #28]
   23ac8:	ldr	r2, [pc, #280]	; 23be8 <myhtml_rules_init@@Base+0x1c4>
   23acc:	ldr	r2, [r4, r2]
   23ad0:	str	r2, [r3, #32]
   23ad4:	ldr	r3, [r5, #28]
   23ad8:	ldr	r2, [pc, #268]	; 23bec <myhtml_rules_init@@Base+0x1c8>
   23adc:	ldr	r2, [r4, r2]
   23ae0:	str	r2, [r3, #36]	; 0x24
   23ae4:	ldr	r3, [r5, #28]
   23ae8:	ldr	r2, [pc, #256]	; 23bf0 <myhtml_rules_init@@Base+0x1cc>
   23aec:	ldr	r2, [r4, r2]
   23af0:	str	r2, [r3, #40]	; 0x28
   23af4:	ldr	r3, [r5, #28]
   23af8:	ldr	r2, [pc, #244]	; 23bf4 <myhtml_rules_init@@Base+0x1d0>
   23afc:	ldr	r2, [r4, r2]
   23b00:	str	r2, [r3, #44]	; 0x2c
   23b04:	ldr	r3, [r5, #28]
   23b08:	ldr	r2, [pc, #232]	; 23bf8 <myhtml_rules_init@@Base+0x1d4>
   23b0c:	ldr	r2, [r4, r2]
   23b10:	str	r2, [r3, #48]	; 0x30
   23b14:	ldr	r3, [r5, #28]
   23b18:	ldr	r2, [pc, #220]	; 23bfc <myhtml_rules_init@@Base+0x1d8>
   23b1c:	ldr	r2, [r4, r2]
   23b20:	str	r2, [r3, #52]	; 0x34
   23b24:	ldr	r3, [r5, #28]
   23b28:	ldr	r2, [pc, #208]	; 23c00 <myhtml_rules_init@@Base+0x1dc>
   23b2c:	ldr	r2, [r4, r2]
   23b30:	str	r2, [r3, #56]	; 0x38
   23b34:	ldr	r3, [r5, #28]
   23b38:	ldr	r2, [pc, #196]	; 23c04 <myhtml_rules_init@@Base+0x1e0>
   23b3c:	ldr	r2, [r4, r2]
   23b40:	str	r2, [r3, #60]	; 0x3c
   23b44:	ldr	r3, [r5, #28]
   23b48:	ldr	r2, [pc, #184]	; 23c08 <myhtml_rules_init@@Base+0x1e4>
   23b4c:	ldr	r2, [r4, r2]
   23b50:	str	r2, [r3, #64]	; 0x40
   23b54:	ldr	r3, [r5, #28]
   23b58:	ldr	r2, [pc, #172]	; 23c0c <myhtml_rules_init@@Base+0x1e8>
   23b5c:	ldr	r2, [r4, r2]
   23b60:	str	r2, [r3, #68]	; 0x44
   23b64:	ldr	r3, [r5, #28]
   23b68:	ldr	r2, [pc, #160]	; 23c10 <myhtml_rules_init@@Base+0x1ec>
   23b6c:	ldr	r2, [r4, r2]
   23b70:	str	r2, [r3, #72]	; 0x48
   23b74:	ldr	r3, [r5, #28]
   23b78:	ldr	r2, [pc, #148]	; 23c14 <myhtml_rules_init@@Base+0x1f0>
   23b7c:	ldr	r2, [r4, r2]
   23b80:	str	r2, [r3, #76]	; 0x4c
   23b84:	ldr	r3, [r5, #28]
   23b88:	ldr	r2, [pc, #136]	; 23c18 <myhtml_rules_init@@Base+0x1f4>
   23b8c:	ldr	r2, [r4, r2]
   23b90:	str	r2, [r3, #80]	; 0x50
   23b94:	ldr	r3, [r5, #28]
   23b98:	ldr	r2, [pc, #124]	; 23c1c <myhtml_rules_init@@Base+0x1f8>
   23b9c:	ldr	r2, [r4, r2]
   23ba0:	str	r2, [r3, #84]	; 0x54
   23ba4:	ldr	r3, [r5, #28]
   23ba8:	ldr	r2, [pc, #112]	; 23c20 <myhtml_rules_init@@Base+0x1fc>
   23bac:	ldr	r2, [r4, r2]
   23bb0:	str	r2, [r3, #88]	; 0x58
   23bb4:	mov	r0, #0
   23bb8:	pop	{r4, r5, r6, pc}
   23bbc:	ldr	r0, [pc, #96]	; 23c24 <myhtml_rules_init@@Base+0x200>
   23bc0:	pop	{r4, r5, r6, pc}
   23bc4:	andeq	r3, pc, r8, asr #11
   23bc8:	andeq	r0, r0, r8, lsr #16
   23bcc:	andeq	r0, r0, r8, asr r9
   23bd0:	andeq	r0, r0, r4, ror #18
   23bd4:	andeq	r0, r0, ip, lsr #15
   23bd8:	andeq	r0, r0, r0, lsl #18
   23bdc:	andeq	r0, r0, ip, lsr #18
   23be0:	muleq	r0, r8, r8
   23be4:	andeq	r0, r0, r0, lsl #16
   23be8:	ldrdeq	r0, [r0], -ip
   23bec:	andeq	r0, r0, r4, ror #17
   23bf0:	andeq	r0, r0, r4, lsr #18
   23bf4:	andeq	r0, r0, r4, lsl r9
   23bf8:	andeq	r0, r0, ip, lsl r9
   23bfc:	andeq	r0, r0, r8, lsr #15
   23c00:	andeq	r0, r0, r8, lsr #19
   23c04:	andeq	r0, r0, r8, lsr r8
   23c08:	muleq	r0, ip, r8
   23c0c:	andeq	r0, r0, r0, ror #14
   23c10:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   23c14:	andeq	r0, r0, r4, ror r9
   23c18:	andeq	r0, r0, r4, lsr #14
   23c1c:	andeq	r0, r0, r0, lsr #14
   23c20:	andeq	r0, r0, r0, lsr #16
   23c24:	andeq	r9, r0, r4, rrx
   23c28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23c2c:	sub	sp, sp, #20
   23c30:	subs	r8, r1, #0
   23c34:	beq	23e10 <myhtml_rules_init@@Base+0x3ec>
   23c38:	mov	r7, r3
   23c3c:	mov	r6, r2
   23c40:	mov	r9, r0
   23c44:	sub	r4, r0, #1
   23c48:	mov	r5, #0
   23c4c:	mov	r1, r5
   23c50:	ldr	fp, [pc, #512]	; 23e58 <myhtml_rules_init@@Base+0x434>
   23c54:	add	fp, pc, fp
   23c58:	mov	sl, #4
   23c5c:	ldr	r3, [pc, #504]	; 23e5c <myhtml_rules_init@@Base+0x438>
   23c60:	add	r3, pc, r3
   23c64:	str	r3, [sp, #4]
   23c68:	ldr	r3, [pc, #496]	; 23e60 <myhtml_rules_init@@Base+0x43c>
   23c6c:	add	r3, pc, r3
   23c70:	str	r3, [sp, #12]
   23c74:	ldr	r3, [pc, #488]	; 23e64 <myhtml_rules_init@@Base+0x440>
   23c78:	add	r3, pc, r3
   23c7c:	str	r3, [sp, #8]
   23c80:	b	23da0 <myhtml_rules_init@@Base+0x37c>
   23c84:	cmp	r3, #38	; 0x26
   23c88:	bne	23d90 <myhtml_rules_init@@Base+0x36c>
   23c8c:	cmp	r1, #0
   23c90:	beq	23cac <myhtml_rules_init@@Base+0x288>
   23c94:	sub	r0, r5, r1
   23c98:	mov	r2, r7
   23c9c:	add	r0, r9, r0
   23ca0:	blx	r6
   23ca4:	cmp	r0, #0
   23ca8:	bne	23e18 <myhtml_rules_init@@Base+0x3f4>
   23cac:	mov	r2, r7
   23cb0:	mov	r1, #5
   23cb4:	ldr	r0, [sp, #8]
   23cb8:	blx	r6
   23cbc:	cmp	r0, #0
   23cc0:	bne	23e20 <myhtml_rules_init@@Base+0x3fc>
   23cc4:	mov	r1, #0
   23cc8:	b	23d94 <myhtml_rules_init@@Base+0x370>
   23ccc:	cmp	r1, #0
   23cd0:	beq	23cec <myhtml_rules_init@@Base+0x2c8>
   23cd4:	sub	r0, r5, r1
   23cd8:	mov	r2, r7
   23cdc:	add	r0, r9, r0
   23ce0:	blx	r6
   23ce4:	cmp	r0, #0
   23ce8:	bne	23e28 <myhtml_rules_init@@Base+0x404>
   23cec:	mov	r2, r7
   23cf0:	mov	r1, sl
   23cf4:	mov	r0, fp
   23cf8:	blx	r6
   23cfc:	cmp	r0, #0
   23d00:	bne	23e30 <myhtml_rules_init@@Base+0x40c>
   23d04:	mov	r1, #0
   23d08:	b	23d94 <myhtml_rules_init@@Base+0x370>
   23d0c:	cmp	r1, #0
   23d10:	beq	23d2c <myhtml_rules_init@@Base+0x308>
   23d14:	sub	r0, r5, r1
   23d18:	mov	r2, r7
   23d1c:	add	r0, r9, r0
   23d20:	blx	r6
   23d24:	cmp	r0, #0
   23d28:	bne	23e38 <myhtml_rules_init@@Base+0x414>
   23d2c:	mov	r2, r7
   23d30:	mov	r1, sl
   23d34:	ldr	r0, [sp, #4]
   23d38:	blx	r6
   23d3c:	cmp	r0, #0
   23d40:	bne	23e40 <myhtml_rules_init@@Base+0x41c>
   23d44:	mov	r1, #0
   23d48:	b	23d94 <myhtml_rules_init@@Base+0x370>
   23d4c:	cmp	r1, #0
   23d50:	beq	23d70 <myhtml_rules_init@@Base+0x34c>
   23d54:	sub	r0, r5, r1
   23d58:	mov	r2, r7
   23d5c:	sub	r1, r1, #1
   23d60:	add	r0, r9, r0
   23d64:	blx	r6
   23d68:	cmp	r0, #0
   23d6c:	bne	23e48 <myhtml_rules_init@@Base+0x424>
   23d70:	mov	r2, r7
   23d74:	mov	r1, #6
   23d78:	ldr	r0, [sp, #12]
   23d7c:	blx	r6
   23d80:	cmp	r0, #0
   23d84:	bne	23e50 <myhtml_rules_init@@Base+0x42c>
   23d88:	mov	r1, #0
   23d8c:	b	23d94 <myhtml_rules_init@@Base+0x370>
   23d90:	add	r1, r1, #1
   23d94:	add	r5, r5, #1
   23d98:	cmp	r8, r5
   23d9c:	beq	23de0 <myhtml_rules_init@@Base+0x3bc>
   23da0:	add	r4, r4, #1
   23da4:	ldrb	r3, [r4]
   23da8:	cmp	r3, #60	; 0x3c
   23dac:	beq	23ccc <myhtml_rules_init@@Base+0x2a8>
   23db0:	bls	23c84 <myhtml_rules_init@@Base+0x260>
   23db4:	cmp	r3, #62	; 0x3e
   23db8:	beq	23d0c <myhtml_rules_init@@Base+0x2e8>
   23dbc:	cmp	r3, #160	; 0xa0
   23dc0:	bne	23d90 <myhtml_rules_init@@Base+0x36c>
   23dc4:	cmp	r5, #0
   23dc8:	beq	23dd8 <myhtml_rules_init@@Base+0x3b4>
   23dcc:	ldrb	r3, [r4, #-1]
   23dd0:	cmp	r3, #194	; 0xc2
   23dd4:	beq	23d4c <myhtml_rules_init@@Base+0x328>
   23dd8:	add	r1, r1, #1
   23ddc:	b	23d94 <myhtml_rules_init@@Base+0x370>
   23de0:	cmp	r1, #0
   23de4:	moveq	r0, #0
   23de8:	bne	23df4 <myhtml_rules_init@@Base+0x3d0>
   23dec:	add	sp, sp, #20
   23df0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23df4:	sub	r0, r5, r1
   23df8:	mov	r2, r7
   23dfc:	add	r0, r9, r0
   23e00:	blx	r6
   23e04:	cmp	r0, #0
   23e08:	movne	r0, #2
   23e0c:	b	23dec <myhtml_rules_init@@Base+0x3c8>
   23e10:	mov	r0, #0
   23e14:	b	23dec <myhtml_rules_init@@Base+0x3c8>
   23e18:	mov	r0, #2
   23e1c:	b	23dec <myhtml_rules_init@@Base+0x3c8>
   23e20:	mov	r0, #2
   23e24:	b	23dec <myhtml_rules_init@@Base+0x3c8>
   23e28:	mov	r0, #2
   23e2c:	b	23dec <myhtml_rules_init@@Base+0x3c8>
   23e30:	mov	r0, #2
   23e34:	b	23dec <myhtml_rules_init@@Base+0x3c8>
   23e38:	mov	r0, #2
   23e3c:	b	23dec <myhtml_rules_init@@Base+0x3c8>
   23e40:	mov	r0, #2
   23e44:	b	23dec <myhtml_rules_init@@Base+0x3c8>
   23e48:	mov	r0, #2
   23e4c:	b	23dec <myhtml_rules_init@@Base+0x3c8>
   23e50:	mov	r0, #2
   23e54:	b	23dec <myhtml_rules_init@@Base+0x3c8>
   23e58:	andeq	r9, sp, ip, ror r9
   23e5c:	andeq	r9, sp, r8, ror r9
   23e60:	andeq	r9, sp, r4, ror r9
   23e64:	andeq	r9, sp, r0, asr r9
   23e68:	ldr	ip, [r0, #4]
   23e6c:	sub	r3, ip, #1
   23e70:	cmp	r3, #141	; 0x8d
   23e74:	addls	pc, pc, r3, lsl #2
   23e78:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23e7c:	b	24148 <myhtml_rules_init@@Base+0x724>
   23e80:	b	24148 <myhtml_rules_init@@Base+0x724>
   23e84:	b	24148 <myhtml_rules_init@@Base+0x724>
   23e88:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23e8c:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23e90:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23e94:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23e98:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23e9c:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23ea0:	b	240b4 <myhtml_rules_init@@Base+0x690>
   23ea4:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23ea8:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23eac:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23eb0:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23eb4:	b	240b4 <myhtml_rules_init@@Base+0x690>
   23eb8:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23ebc:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23ec0:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23ec4:	b	240b4 <myhtml_rules_init@@Base+0x690>
   23ec8:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23ecc:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23ed0:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23ed4:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23ed8:	b	240b4 <myhtml_rules_init@@Base+0x690>
   23edc:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23ee0:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23ee4:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23ee8:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23eec:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23ef0:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23ef4:	b	240b4 <myhtml_rules_init@@Base+0x690>
   23ef8:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23efc:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23f00:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23f04:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23f08:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23f0c:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23f10:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23f14:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23f18:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23f1c:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23f20:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23f24:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23f28:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23f2c:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23f30:	b	240b4 <myhtml_rules_init@@Base+0x690>
   23f34:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23f38:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23f3c:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23f40:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23f44:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23f48:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23f4c:	b	240b4 <myhtml_rules_init@@Base+0x690>
   23f50:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23f54:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23f58:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23f5c:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23f60:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23f64:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23f68:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23f6c:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23f70:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23f74:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23f78:	b	240b4 <myhtml_rules_init@@Base+0x690>
   23f7c:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23f80:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23f84:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23f88:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23f8c:	b	240b4 <myhtml_rules_init@@Base+0x690>
   23f90:	b	240b4 <myhtml_rules_init@@Base+0x690>
   23f94:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23f98:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23f9c:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23fa0:	b	240b4 <myhtml_rules_init@@Base+0x690>
   23fa4:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23fa8:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23fac:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23fb0:	b	240b4 <myhtml_rules_init@@Base+0x690>
   23fb4:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23fb8:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23fbc:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23fc0:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23fc4:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23fc8:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23fcc:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23fd0:	b	240b4 <myhtml_rules_init@@Base+0x690>
   23fd4:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23fd8:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23fdc:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23fe0:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23fe4:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23fe8:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23fec:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23ff0:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23ff4:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23ff8:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   23ffc:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   24000:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   24004:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   24008:	b	240b4 <myhtml_rules_init@@Base+0x690>
   2400c:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   24010:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   24014:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   24018:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   2401c:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   24020:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   24024:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   24028:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   2402c:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   24030:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   24034:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   24038:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   2403c:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   24040:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   24044:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   24048:	b	240b4 <myhtml_rules_init@@Base+0x690>
   2404c:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   24050:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   24054:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   24058:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   2405c:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   24060:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   24064:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   24068:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   2406c:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   24070:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   24074:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   24078:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   2407c:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   24080:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   24084:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   24088:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   2408c:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   24090:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   24094:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   24098:	b	240b4 <myhtml_rules_init@@Base+0x690>
   2409c:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   240a0:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   240a4:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   240a8:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   240ac:	b	240c0 <myhtml_rules_init@@Base+0x69c>
   240b0:	b	240b4 <myhtml_rules_init@@Base+0x690>
   240b4:	ldr	r3, [r0, #8]
   240b8:	cmp	r3, #1
   240bc:	beq	24150 <myhtml_rules_init@@Base+0x72c>
   240c0:	push	{r4, r5, r6, lr}
   240c4:	sub	sp, sp, #8
   240c8:	mov	r5, r2
   240cc:	mov	r4, r1
   240d0:	add	r2, sp, #4
   240d4:	mov	r1, ip
   240d8:	ldr	r0, [r0, #40]	; 0x28
   240dc:	bl	10af0 <myhtml_tag_name_by_id@plt>
   240e0:	mov	r6, r0
   240e4:	mov	r2, r5
   240e8:	mov	r1, #2
   240ec:	ldr	r0, [pc, #100]	; 24158 <myhtml_rules_init@@Base+0x734>
   240f0:	add	r0, pc, r0
   240f4:	blx	r4
   240f8:	cmp	r0, #0
   240fc:	movne	r0, #2
   24100:	beq	2410c <myhtml_rules_init@@Base+0x6e8>
   24104:	add	sp, sp, #8
   24108:	pop	{r4, r5, r6, pc}
   2410c:	mov	r2, r5
   24110:	ldr	r1, [sp, #4]
   24114:	mov	r0, r6
   24118:	blx	r4
   2411c:	cmp	r0, #0
   24120:	movne	r0, #2
   24124:	bne	24104 <myhtml_rules_init@@Base+0x6e0>
   24128:	mov	r2, r5
   2412c:	mov	r1, #1
   24130:	ldr	r0, [pc, #36]	; 2415c <myhtml_rules_init@@Base+0x738>
   24134:	add	r0, pc, r0
   24138:	blx	r4
   2413c:	cmp	r0, #0
   24140:	movne	r0, #2
   24144:	b	24104 <myhtml_rules_init@@Base+0x6e0>
   24148:	mov	r0, #0
   2414c:	bx	lr
   24150:	mov	r0, #0
   24154:	bx	lr
   24158:	strdeq	r9, [sp], -r8
   2415c:			; <UNDEFINED> instruction: 0x000d94b8

00024160 <myhtml_serialization_node_callback@@Base>:
   24160:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24164:	sub	sp, sp, #44	; 0x2c
   24168:	mov	r4, r0
   2416c:	mov	fp, r1
   24170:	mov	r8, r2
   24174:	ldr	r1, [r0, #4]
   24178:	cmp	r1, #2
   2417c:	beq	24284 <myhtml_serialization_node_callback@@Base+0x124>
   24180:	cmp	r1, #3
   24184:	beq	242f0 <myhtml_serialization_node_callback@@Base+0x190>
   24188:	cmp	r1, #1
   2418c:	beq	241c8 <myhtml_serialization_node_callback@@Base+0x68>
   24190:	add	r2, sp, #32
   24194:	ldr	r0, [r0, #40]	; 0x28
   24198:	bl	10af0 <myhtml_tag_name_by_id@plt>
   2419c:	mov	r5, r0
   241a0:	mov	r2, r8
   241a4:	mov	r1, #1
   241a8:	ldr	r0, [pc, #1688]	; 24848 <myhtml_serialization_node_callback@@Base+0x6e8>
   241ac:	add	r0, pc, r0
   241b0:	blx	fp
   241b4:	cmp	r0, #0
   241b8:	beq	24514 <myhtml_serialization_node_callback@@Base+0x3b4>
   241bc:	mov	r0, #2
   241c0:	add	sp, sp, #44	; 0x2c
   241c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   241c8:	ldr	r1, [r0, #32]
   241cc:	cmp	r1, #0
   241d0:	beq	2422c <myhtml_serialization_node_callback@@Base+0xcc>
   241d4:	ldr	r0, [r1, #4]
   241d8:	cmp	r0, #0
   241dc:	beq	2422c <myhtml_serialization_node_callback@@Base+0xcc>
   241e0:	ldr	r3, [r4, #24]
   241e4:	cmp	r3, #0
   241e8:	beq	24234 <myhtml_serialization_node_callback@@Base+0xd4>
   241ec:	ldr	r3, [r3, #4]
   241f0:	cmp	r3, #101	; 0x65
   241f4:	beq	24268 <myhtml_serialization_node_callback@@Base+0x108>
   241f8:	bls	24250 <myhtml_serialization_node_callback@@Base+0xf0>
   241fc:	cmp	r3, #120	; 0x78
   24200:	beq	24268 <myhtml_serialization_node_callback@@Base+0x108>
   24204:	cmp	r3, #143	; 0x8f
   24208:	beq	24268 <myhtml_serialization_node_callback@@Base+0x108>
   2420c:	cmp	r3, #112	; 0x70
   24210:	beq	24268 <myhtml_serialization_node_callback@@Base+0x108>
   24214:	mov	r3, r8
   24218:	mov	r2, fp
   2421c:	ldr	r1, [r1, #12]
   24220:	bl	23c28 <myhtml_rules_init@@Base+0x204>
   24224:	cmp	r0, #0
   24228:	bne	2427c <myhtml_serialization_node_callback@@Base+0x11c>
   2422c:	mov	r0, #0
   24230:	b	241c0 <myhtml_serialization_node_callback@@Base+0x60>
   24234:	mov	r3, r2
   24238:	mov	r2, fp
   2423c:	ldr	r1, [r1, #12]
   24240:	bl	23c28 <myhtml_rules_init@@Base+0x204>
   24244:	cmp	r0, #0
   24248:	bne	2427c <myhtml_serialization_node_callback@@Base+0x11c>
   2424c:	b	2422c <myhtml_serialization_node_callback@@Base+0xcc>
   24250:	cmp	r3, #67	; 0x43
   24254:	beq	24268 <myhtml_serialization_node_callback@@Base+0x108>
   24258:	bcc	24214 <myhtml_serialization_node_callback@@Base+0xb4>
   2425c:	sub	r3, r3, #91	; 0x5b
   24260:	cmp	r3, #1
   24264:	bhi	24214 <myhtml_serialization_node_callback@@Base+0xb4>
   24268:	mov	r2, r8
   2426c:	ldr	r1, [r1, #12]
   24270:	blx	fp
   24274:	cmp	r0, #0
   24278:	beq	2422c <myhtml_serialization_node_callback@@Base+0xcc>
   2427c:	mov	r0, #2
   24280:	b	241c0 <myhtml_serialization_node_callback@@Base+0x60>
   24284:	mov	r1, #4
   24288:	ldr	r0, [pc, #1468]	; 2484c <myhtml_serialization_node_callback@@Base+0x6ec>
   2428c:	add	r0, pc, r0
   24290:	blx	fp
   24294:	cmp	r0, #0
   24298:	movne	r0, #2
   2429c:	bne	241c0 <myhtml_serialization_node_callback@@Base+0x60>
   242a0:	ldr	r3, [r4, #32]
   242a4:	cmp	r3, #0
   242a8:	beq	242d0 <myhtml_serialization_node_callback@@Base+0x170>
   242ac:	ldr	r0, [r3, #4]
   242b0:	cmp	r0, #0
   242b4:	beq	242d0 <myhtml_serialization_node_callback@@Base+0x170>
   242b8:	mov	r2, r8
   242bc:	ldr	r1, [r3, #12]
   242c0:	blx	fp
   242c4:	cmp	r0, #0
   242c8:	movne	r0, #2
   242cc:	bne	241c0 <myhtml_serialization_node_callback@@Base+0x60>
   242d0:	mov	r2, r8
   242d4:	mov	r1, #3
   242d8:	ldr	r0, [pc, #1392]	; 24850 <myhtml_serialization_node_callback@@Base+0x6f0>
   242dc:	add	r0, pc, r0
   242e0:	blx	fp
   242e4:	cmp	r0, #0
   242e8:	movne	r0, #2
   242ec:	b	241c0 <myhtml_serialization_node_callback@@Base+0x60>
   242f0:	mov	r1, #9
   242f4:	ldr	r0, [pc, #1368]	; 24854 <myhtml_serialization_node_callback@@Base+0x6f4>
   242f8:	add	r0, pc, r0
   242fc:	blx	fp
   24300:	cmp	r0, #0
   24304:	movne	r0, #2
   24308:	bne	241c0 <myhtml_serialization_node_callback@@Base+0x60>
   2430c:	mov	r2, r8
   24310:	mov	r1, #1
   24314:	ldr	r0, [pc, #1340]	; 24858 <myhtml_serialization_node_callback@@Base+0x6f8>
   24318:	add	r0, pc, r0
   2431c:	blx	fp
   24320:	cmp	r0, #0
   24324:	movne	r0, #2
   24328:	bne	241c0 <myhtml_serialization_node_callback@@Base+0x60>
   2432c:	ldr	r3, [r4, #32]
   24330:	cmp	r3, #0
   24334:	beq	2435c <myhtml_serialization_node_callback@@Base+0x1fc>
   24338:	ldr	r4, [r3, #40]	; 0x28
   2433c:	cmp	r4, #0
   24340:	beq	2435c <myhtml_serialization_node_callback@@Base+0x1fc>
   24344:	ldr	r0, [r4, #8]
   24348:	cmp	r0, #0
   2434c:	beq	2435c <myhtml_serialization_node_callback@@Base+0x1fc>
   24350:	ldr	r1, [r4, #16]
   24354:	cmp	r1, #0
   24358:	bne	2437c <myhtml_serialization_node_callback@@Base+0x21c>
   2435c:	mov	r2, r8
   24360:	mov	r1, #1
   24364:	ldr	r0, [pc, #1264]	; 2485c <myhtml_serialization_node_callback@@Base+0x6fc>
   24368:	add	r0, pc, r0
   2436c:	blx	fp
   24370:	cmp	r0, #0
   24374:	movne	r0, #2
   24378:	b	241c0 <myhtml_serialization_node_callback@@Base+0x60>
   2437c:	mov	r2, r8
   24380:	blx	fp
   24384:	cmp	r0, #0
   24388:	movne	r0, #2
   2438c:	bne	241c0 <myhtml_serialization_node_callback@@Base+0x60>
   24390:	ldr	r4, [r4]
   24394:	cmp	r4, #0
   24398:	beq	2435c <myhtml_serialization_node_callback@@Base+0x1fc>
   2439c:	ldr	r3, [r4, #36]	; 0x24
   243a0:	cmp	r3, #6
   243a4:	bne	2435c <myhtml_serialization_node_callback@@Base+0x1fc>
   243a8:	ldr	r1, [pc, #1200]	; 24860 <myhtml_serialization_node_callback@@Base+0x700>
   243ac:	add	r1, pc, r1
   243b0:	ldr	r0, [r4, #28]
   243b4:	bl	1052c <mycore_strcasecmp@plt>
   243b8:	cmp	r0, #0
   243bc:	ldreq	r5, [r4]
   243c0:	moveq	r4, #0
   243c4:	beq	243fc <myhtml_serialization_node_callback@@Base+0x29c>
   243c8:	ldr	r1, [pc, #1172]	; 24864 <myhtml_serialization_node_callback@@Base+0x704>
   243cc:	add	r1, pc, r1
   243d0:	ldr	r0, [r4, #28]
   243d4:	bl	1052c <mycore_strcasecmp@plt>
   243d8:	cmp	r0, #0
   243dc:	bne	2435c <myhtml_serialization_node_callback@@Base+0x1fc>
   243e0:	ldr	r4, [r4]
   243e4:	cmp	r4, #0
   243e8:	beq	2435c <myhtml_serialization_node_callback@@Base+0x1fc>
   243ec:	ldr	r5, [r4]
   243f0:	ldr	r3, [r4, #36]	; 0x24
   243f4:	cmp	r3, #0
   243f8:	bne	244b4 <myhtml_serialization_node_callback@@Base+0x354>
   243fc:	cmp	r5, #0
   24400:	beq	2435c <myhtml_serialization_node_callback@@Base+0x1fc>
   24404:	ldr	r3, [r5, #36]	; 0x24
   24408:	cmp	r3, #0
   2440c:	beq	2435c <myhtml_serialization_node_callback@@Base+0x1fc>
   24410:	cmp	r4, #0
   24414:	beq	24424 <myhtml_serialization_node_callback@@Base+0x2c4>
   24418:	ldr	r3, [r4, #36]	; 0x24
   2441c:	cmp	r3, #0
   24420:	bne	24444 <myhtml_serialization_node_callback@@Base+0x2e4>
   24424:	mov	r2, r8
   24428:	mov	r1, #7
   2442c:	ldr	r0, [pc, #1076]	; 24868 <myhtml_serialization_node_callback@@Base+0x708>
   24430:	add	r0, pc, r0
   24434:	blx	fp
   24438:	cmp	r0, #0
   2443c:	movne	r0, #2
   24440:	bne	241c0 <myhtml_serialization_node_callback@@Base+0x60>
   24444:	mov	r2, r8
   24448:	mov	r1, #2
   2444c:	ldr	r0, [pc, #1048]	; 2486c <myhtml_serialization_node_callback@@Base+0x70c>
   24450:	add	r0, pc, r0
   24454:	blx	fp
   24458:	cmp	r0, #0
   2445c:	movne	r0, #2
   24460:	bne	241c0 <myhtml_serialization_node_callback@@Base+0x60>
   24464:	ldr	r0, [r5, #28]
   24468:	cmp	r0, #0
   2446c:	beq	24490 <myhtml_serialization_node_callback@@Base+0x330>
   24470:	ldr	r1, [r5, #36]	; 0x24
   24474:	cmp	r1, #0
   24478:	beq	24490 <myhtml_serialization_node_callback@@Base+0x330>
   2447c:	mov	r2, r8
   24480:	blx	fp
   24484:	cmp	r0, #0
   24488:	movne	r0, #2
   2448c:	bne	241c0 <myhtml_serialization_node_callback@@Base+0x60>
   24490:	mov	r2, r8
   24494:	mov	r1, #1
   24498:	ldr	r0, [pc, #976]	; 24870 <myhtml_serialization_node_callback@@Base+0x710>
   2449c:	add	r0, pc, r0
   244a0:	blx	fp
   244a4:	cmp	r0, #0
   244a8:	movne	r0, #2
   244ac:	bne	241c0 <myhtml_serialization_node_callback@@Base+0x60>
   244b0:	b	2435c <myhtml_serialization_node_callback@@Base+0x1fc>
   244b4:	mov	r2, r8
   244b8:	mov	r1, #9
   244bc:	ldr	r0, [pc, #944]	; 24874 <myhtml_serialization_node_callback@@Base+0x714>
   244c0:	add	r0, pc, r0
   244c4:	blx	fp
   244c8:	cmp	r0, #0
   244cc:	movne	r0, #2
   244d0:	bne	241c0 <myhtml_serialization_node_callback@@Base+0x60>
   244d4:	mov	r2, r8
   244d8:	ldr	r1, [r4, #36]	; 0x24
   244dc:	ldr	r0, [r4, #28]
   244e0:	blx	fp
   244e4:	cmp	r0, #0
   244e8:	movne	r0, #2
   244ec:	bne	241c0 <myhtml_serialization_node_callback@@Base+0x60>
   244f0:	mov	r2, r8
   244f4:	mov	r1, #1
   244f8:	ldr	r0, [pc, #888]	; 24878 <myhtml_serialization_node_callback@@Base+0x718>
   244fc:	add	r0, pc, r0
   24500:	blx	fp
   24504:	cmp	r0, #0
   24508:	movne	r0, #2
   2450c:	bne	241c0 <myhtml_serialization_node_callback@@Base+0x60>
   24510:	b	243fc <myhtml_serialization_node_callback@@Base+0x29c>
   24514:	mov	r2, r8
   24518:	ldr	r1, [sp, #32]
   2451c:	mov	r0, r5
   24520:	blx	fp
   24524:	cmp	r0, #0
   24528:	bne	241bc <myhtml_serialization_node_callback@@Base+0x5c>
   2452c:	ldr	r3, [r4, #32]
   24530:	cmp	r3, #0
   24534:	beq	24828 <myhtml_serialization_node_callback@@Base+0x6c8>
   24538:	ldr	r9, [r3, #40]	; 0x28
   2453c:	cmp	r9, #0
   24540:	beq	24828 <myhtml_serialization_node_callback@@Base+0x6c8>
   24544:	ldr	r3, [pc, #816]	; 2487c <myhtml_serialization_node_callback@@Base+0x71c>
   24548:	add	r3, pc, r3
   2454c:	str	r3, [sp, #8]
   24550:	ldr	r3, [pc, #808]	; 24880 <myhtml_serialization_node_callback@@Base+0x720>
   24554:	add	r3, pc, r3
   24558:	str	r3, [sp, #16]
   2455c:	ldr	r3, [pc, #800]	; 24884 <myhtml_serialization_node_callback@@Base+0x724>
   24560:	add	r3, pc, r3
   24564:	str	r3, [sp, #24]
   24568:	ldr	r3, [pc, #792]	; 24888 <myhtml_serialization_node_callback@@Base+0x728>
   2456c:	add	r3, pc, r3
   24570:	str	r3, [sp, #28]
   24574:	ldr	r3, [pc, #784]	; 2488c <myhtml_serialization_node_callback@@Base+0x72c>
   24578:	add	r3, pc, r3
   2457c:	str	r3, [sp, #20]
   24580:	ldr	r3, [pc, #776]	; 24890 <myhtml_serialization_node_callback@@Base+0x730>
   24584:	add	r3, pc, r3
   24588:	str	r3, [sp, #12]
   2458c:	b	24748 <myhtml_serialization_node_callback@@Base+0x5e8>
   24590:	mov	r2, r8
   24594:	mov	r1, #4
   24598:	ldr	r0, [sp, #16]
   2459c:	blx	fp
   245a0:	cmp	r0, #0
   245a4:	beq	2477c <myhtml_serialization_node_callback@@Base+0x61c>
   245a8:	b	241bc <myhtml_serialization_node_callback@@Base+0x5c>
   245ac:	ldr	r0, [r9, #8]
   245b0:	cmp	r0, #0
   245b4:	beq	2477c <myhtml_serialization_node_callback@@Base+0x61c>
   245b8:	ldr	r3, [r9, #16]
   245bc:	cmp	r3, #5
   245c0:	bne	2477c <myhtml_serialization_node_callback@@Base+0x61c>
   245c4:	ldr	r1, [sp, #24]
   245c8:	bl	fbf0 <mycore_strcmp@plt>
   245cc:	cmp	r0, #0
   245d0:	beq	2477c <myhtml_serialization_node_callback@@Base+0x61c>
   245d4:	mov	r2, r8
   245d8:	mov	r1, #6
   245dc:	ldr	r0, [sp, #28]
   245e0:	blx	fp
   245e4:	cmp	r0, #0
   245e8:	beq	2477c <myhtml_serialization_node_callback@@Base+0x61c>
   245ec:	b	241bc <myhtml_serialization_node_callback@@Base+0x5c>
   245f0:	mov	r2, r8
   245f4:	mov	r1, #6
   245f8:	ldr	r0, [sp, #20]
   245fc:	blx	fp
   24600:	cmp	r0, #0
   24604:	beq	2477c <myhtml_serialization_node_callback@@Base+0x61c>
   24608:	b	241bc <myhtml_serialization_node_callback@@Base+0x5c>
   2460c:	cmp	r1, #0
   24610:	beq	2462c <myhtml_serialization_node_callback@@Base+0x4cc>
   24614:	sub	r0, r5, r1
   24618:	mov	r2, r8
   2461c:	add	r0, r7, r0
   24620:	blx	fp
   24624:	cmp	r0, #0
   24628:	bne	241bc <myhtml_serialization_node_callback@@Base+0x5c>
   2462c:	mov	r2, r8
   24630:	mov	r1, #5
   24634:	mov	r0, sl
   24638:	blx	fp
   2463c:	cmp	r0, #0
   24640:	bne	241bc <myhtml_serialization_node_callback@@Base+0x5c>
   24644:	mov	r1, #0
   24648:	add	r5, r5, #1
   2464c:	cmp	r6, r5
   24650:	beq	24718 <myhtml_serialization_node_callback@@Base+0x5b8>
   24654:	add	r4, r4, #1
   24658:	ldrb	r3, [r4]
   2465c:	cmp	r3, #38	; 0x26
   24660:	beq	2460c <myhtml_serialization_node_callback@@Base+0x4ac>
   24664:	cmp	r3, #160	; 0xa0
   24668:	beq	246b8 <myhtml_serialization_node_callback@@Base+0x558>
   2466c:	cmp	r3, #34	; 0x22
   24670:	addne	r1, r1, #1
   24674:	bne	24648 <myhtml_serialization_node_callback@@Base+0x4e8>
   24678:	cmp	r1, #0
   2467c:	beq	24698 <myhtml_serialization_node_callback@@Base+0x538>
   24680:	sub	r0, r5, r1
   24684:	mov	r2, r8
   24688:	add	r0, r7, r0
   2468c:	blx	fp
   24690:	cmp	r0, #0
   24694:	bne	241bc <myhtml_serialization_node_callback@@Base+0x5c>
   24698:	mov	r2, r8
   2469c:	mov	r1, #6
   246a0:	ldr	r0, [sp]
   246a4:	blx	fp
   246a8:	cmp	r0, #0
   246ac:	bne	241bc <myhtml_serialization_node_callback@@Base+0x5c>
   246b0:	mov	r1, #0
   246b4:	b	24648 <myhtml_serialization_node_callback@@Base+0x4e8>
   246b8:	cmp	r5, #0
   246bc:	beq	246cc <myhtml_serialization_node_callback@@Base+0x56c>
   246c0:	ldrb	r3, [r4, #-1]
   246c4:	cmp	r3, #194	; 0xc2
   246c8:	beq	246d4 <myhtml_serialization_node_callback@@Base+0x574>
   246cc:	add	r1, r1, #1
   246d0:	b	24648 <myhtml_serialization_node_callback@@Base+0x4e8>
   246d4:	cmp	r1, #0
   246d8:	beq	246f8 <myhtml_serialization_node_callback@@Base+0x598>
   246dc:	sub	r0, r5, r1
   246e0:	mov	r2, r8
   246e4:	sub	r1, r1, #1
   246e8:	add	r0, r7, r0
   246ec:	blx	fp
   246f0:	cmp	r0, #0
   246f4:	bne	241bc <myhtml_serialization_node_callback@@Base+0x5c>
   246f8:	mov	r2, r8
   246fc:	mov	r1, #6
   24700:	ldr	r0, [sp, #4]
   24704:	blx	fp
   24708:	cmp	r0, #0
   2470c:	bne	241bc <myhtml_serialization_node_callback@@Base+0x5c>
   24710:	mov	r1, #0
   24714:	b	24648 <myhtml_serialization_node_callback@@Base+0x4e8>
   24718:	cmp	r1, #0
   2471c:	bne	2480c <myhtml_serialization_node_callback@@Base+0x6ac>
   24720:	mov	r2, r8
   24724:	mov	r1, #1
   24728:	ldr	r0, [pc, #356]	; 24894 <myhtml_serialization_node_callback@@Base+0x734>
   2472c:	add	r0, pc, r0
   24730:	blx	fp
   24734:	cmp	r0, #0
   24738:	bne	241bc <myhtml_serialization_node_callback@@Base+0x5c>
   2473c:	ldr	r9, [r9]
   24740:	cmp	r9, #0
   24744:	beq	24828 <myhtml_serialization_node_callback@@Base+0x6c8>
   24748:	mov	r2, r8
   2474c:	mov	r1, #1
   24750:	ldr	r0, [sp, #8]
   24754:	blx	fp
   24758:	cmp	r0, #0
   2475c:	bne	241bc <myhtml_serialization_node_callback@@Base+0x5c>
   24760:	ldr	r3, [r9, #64]	; 0x40
   24764:	cmp	r3, #5
   24768:	beq	24590 <myhtml_serialization_node_callback@@Base+0x430>
   2476c:	cmp	r3, #6
   24770:	beq	245ac <myhtml_serialization_node_callback@@Base+0x44c>
   24774:	cmp	r3, #4
   24778:	beq	245f0 <myhtml_serialization_node_callback@@Base+0x490>
   2477c:	add	r1, sp, #36	; 0x24
   24780:	mov	r0, r9
   24784:	bl	10b08 <myhtml_attribute_key@plt>
   24788:	cmp	r0, #0
   2478c:	beq	247a4 <myhtml_serialization_node_callback@@Base+0x644>
   24790:	mov	r2, r8
   24794:	ldr	r1, [sp, #36]	; 0x24
   24798:	blx	fp
   2479c:	cmp	r0, #0
   247a0:	bne	241bc <myhtml_serialization_node_callback@@Base+0x5c>
   247a4:	mov	r2, r8
   247a8:	mov	r1, #2
   247ac:	ldr	r0, [sp, #12]
   247b0:	blx	fp
   247b4:	cmp	r0, #0
   247b8:	bne	241bc <myhtml_serialization_node_callback@@Base+0x5c>
   247bc:	add	r1, sp, #36	; 0x24
   247c0:	mov	r0, r9
   247c4:	bl	10490 <myhtml_attribute_value@plt>
   247c8:	subs	r7, r0, #0
   247cc:	beq	24720 <myhtml_serialization_node_callback@@Base+0x5c0>
   247d0:	ldr	r6, [sp, #36]	; 0x24
   247d4:	cmp	r6, #0
   247d8:	beq	24720 <myhtml_serialization_node_callback@@Base+0x5c0>
   247dc:	sub	r4, r7, #1
   247e0:	mov	r1, #0
   247e4:	mov	r5, r1
   247e8:	ldr	sl, [pc, #168]	; 24898 <myhtml_serialization_node_callback@@Base+0x738>
   247ec:	add	sl, pc, sl
   247f0:	ldr	r3, [pc, #164]	; 2489c <myhtml_serialization_node_callback@@Base+0x73c>
   247f4:	add	r3, pc, r3
   247f8:	str	r3, [sp, #4]
   247fc:	ldr	r3, [pc, #156]	; 248a0 <myhtml_serialization_node_callback@@Base+0x740>
   24800:	add	r3, pc, r3
   24804:	str	r3, [sp]
   24808:	b	24654 <myhtml_serialization_node_callback@@Base+0x4f4>
   2480c:	sub	r0, r5, r1
   24810:	mov	r2, r8
   24814:	add	r0, r7, r0
   24818:	blx	fp
   2481c:	cmp	r0, #0
   24820:	bne	241bc <myhtml_serialization_node_callback@@Base+0x5c>
   24824:	b	24720 <myhtml_serialization_node_callback@@Base+0x5c0>
   24828:	mov	r2, r8
   2482c:	mov	r1, #1
   24830:	ldr	r0, [pc, #108]	; 248a4 <myhtml_serialization_node_callback@@Base+0x744>
   24834:	add	r0, pc, r0
   24838:	blx	fp
   2483c:	cmp	r0, #0
   24840:	bne	241bc <myhtml_serialization_node_callback@@Base+0x5c>
   24844:	b	241c0 <myhtml_serialization_node_callback@@Base+0x60>
   24848:	andeq	r9, sp, r8, lsl #9
   2484c:	andeq	r9, sp, r4, ror #6
   24850:	andeq	r9, sp, ip, lsl r3
   24854:	andeq	r9, sp, r4, lsl #6
   24858:	strdeq	r9, [sp], -r0
   2485c:	andeq	r9, sp, r4, lsl #5
   24860:	andeq	r9, sp, r0, ror #4
   24864:	andeq	r9, sp, r8, asr #4
   24868:	strdeq	r9, [sp], -r8
   2486c:	andeq	r9, sp, r0, ror #3
   24870:	andeq	r9, sp, r8, lsl #3
   24874:	andeq	r9, sp, ip, asr r1
   24878:	andeq	r9, sp, r8, lsr #2
   2487c:	andeq	r9, sp, r0, asr #1
   24880:	andeq	r9, sp, r4, ror #1
   24884:	andeq	r9, sp, r0, ror #1
   24888:	ldrdeq	r9, [sp], -ip
   2488c:	ldrdeq	r9, [sp], -r8
   24890:	ldrdeq	r9, [sp], -r4
   24894:	strdeq	r8, [sp], -r8	; <UNPREDICTABLE>
   24898:	ldrdeq	r8, [sp], -ip
   2489c:	andeq	r8, sp, ip, ror #27
   248a0:	andeq	r8, sp, ip, asr lr
   248a4:			; <UNDEFINED> instruction: 0x000d8db8

000248a8 <myhtml_serialization_tree_callback@@Base>:
   248a8:	push	{r4, r5, r6, r7, r8, lr}
   248ac:	subs	r8, r0, #0
   248b0:	moveq	r7, #0
   248b4:	beq	24980 <myhtml_serialization_tree_callback@@Base+0xd8>
   248b8:	mov	r6, r2
   248bc:	mov	r5, r1
   248c0:	ldr	r3, [r8, #40]	; 0x28
   248c4:	cmp	r3, #0
   248c8:	moveq	r4, r8
   248cc:	beq	248e0 <myhtml_serialization_tree_callback@@Base+0x38>
   248d0:	ldr	r3, [r3, #84]	; 0x54
   248d4:	cmp	r8, r3
   248d8:	ldreq	r4, [r8, #20]
   248dc:	movne	r4, r8
   248e0:	cmp	r4, #0
   248e4:	bne	248f4 <myhtml_serialization_tree_callback@@Base+0x4c>
   248e8:	mov	r7, #0
   248ec:	b	24980 <myhtml_serialization_tree_callback@@Base+0xd8>
   248f0:	mov	r4, r3
   248f4:	mov	r2, r6
   248f8:	mov	r1, r5
   248fc:	mov	r0, r4
   24900:	bl	10700 <myhtml_serialization_node_callback@plt>
   24904:	subs	r7, r0, #0
   24908:	bne	2497c <myhtml_serialization_tree_callback@@Base+0xd4>
   2490c:	ldr	r3, [r4, #20]
   24910:	cmp	r3, #0
   24914:	bne	248f0 <myhtml_serialization_tree_callback@@Base+0x48>
   24918:	cmp	r8, r4
   2491c:	beq	24998 <myhtml_serialization_tree_callback@@Base+0xf0>
   24920:	ldr	r3, [r4, #16]
   24924:	cmp	r3, #0
   24928:	bne	2495c <myhtml_serialization_tree_callback@@Base+0xb4>
   2492c:	mov	r2, r6
   24930:	mov	r1, r5
   24934:	mov	r0, r4
   24938:	bl	23e68 <myhtml_rules_init@@Base+0x444>
   2493c:	cmp	r0, #0
   24940:	bne	24988 <myhtml_serialization_tree_callback@@Base+0xe0>
   24944:	ldr	r4, [r4, #24]
   24948:	cmp	r8, r4
   2494c:	beq	24998 <myhtml_serialization_tree_callback@@Base+0xf0>
   24950:	ldr	r3, [r4, #16]
   24954:	cmp	r3, #0
   24958:	beq	2492c <myhtml_serialization_tree_callback@@Base+0x84>
   2495c:	mov	r2, r6
   24960:	mov	r1, r5
   24964:	mov	r0, r4
   24968:	bl	23e68 <myhtml_rules_init@@Base+0x444>
   2496c:	cmp	r0, #0
   24970:	bne	24990 <myhtml_serialization_tree_callback@@Base+0xe8>
   24974:	ldr	r4, [r4, #16]
   24978:	b	248e0 <myhtml_serialization_tree_callback@@Base+0x38>
   2497c:	mov	r7, #2
   24980:	mov	r0, r7
   24984:	pop	{r4, r5, r6, r7, r8, pc}
   24988:	mov	r7, #2
   2498c:	b	24980 <myhtml_serialization_tree_callback@@Base+0xd8>
   24990:	mov	r7, #2
   24994:	b	24980 <myhtml_serialization_tree_callback@@Base+0xd8>
   24998:	ldr	r3, [r8, #40]	; 0x28
   2499c:	ldr	r3, [r3, #84]	; 0x54
   249a0:	cmp	r8, r3
   249a4:	beq	24980 <myhtml_serialization_tree_callback@@Base+0xd8>
   249a8:	mov	r2, r6
   249ac:	mov	r1, r5
   249b0:	mov	r0, r8
   249b4:	bl	23e68 <myhtml_rules_init@@Base+0x444>
   249b8:	subs	r7, r0, #0
   249bc:	movne	r7, #2
   249c0:	b	24980 <myhtml_serialization_tree_callback@@Base+0xd8>

000249c4 <myhtml_serialization_reallocate@@Base>:
   249c4:	push	{r4, r5, r6, lr}
   249c8:	mov	r4, r0
   249cc:	mov	r5, r1
   249d0:	ldr	r0, [r0]
   249d4:	bl	fbd8 <mycore_realloc@plt>
   249d8:	cmp	r0, #0
   249dc:	moveq	r3, #0
   249e0:	streq	r3, [r4]
   249e4:	streq	r3, [r4, #4]
   249e8:	streq	r3, [r4, #8]
   249ec:	moveq	r0, #2
   249f0:	strne	r0, [r4]
   249f4:	strne	r5, [r4, #4]
   249f8:	movne	r0, #0
   249fc:	pop	{r4, r5, r6, pc}

00024a00 <myhtml_serialization_concatenate@@Base>:
   24a00:	push	{r4, r5, r6, lr}
   24a04:	mov	r6, r0
   24a08:	mov	r5, r1
   24a0c:	mov	r4, r2
   24a10:	ldr	r1, [r2, #8]
   24a14:	add	r1, r5, r1
   24a18:	ldr	r3, [r2, #4]
   24a1c:	cmp	r1, r3
   24a20:	bcc	24a40 <myhtml_serialization_concatenate@@Base+0x40>
   24a24:	add	r1, r1, #4096	; 0x1000
   24a28:	mov	r0, r2
   24a2c:	bl	1037c <myhtml_serialization_reallocate@plt>
   24a30:	cmp	r0, #0
   24a34:	beq	24a40 <myhtml_serialization_concatenate@@Base+0x40>
   24a38:	mov	r0, #2
   24a3c:	pop	{r4, r5, r6, pc}
   24a40:	ldr	r0, [r4]
   24a44:	ldr	r3, [r4, #8]
   24a48:	mov	r2, r5
   24a4c:	mov	r1, r6
   24a50:	add	r0, r0, r3
   24a54:	bl	108ec <strncpy@plt>
   24a58:	ldr	r3, [r4, #8]
   24a5c:	add	r5, r5, r3
   24a60:	str	r5, [r4, #8]
   24a64:	ldr	r3, [r4]
   24a68:	mov	r0, #0
   24a6c:	strb	r0, [r3, r5]
   24a70:	pop	{r4, r5, r6, pc}

00024a74 <myhtml_serialization_tree_buffer@@Base>:
   24a74:	push	{r4, r5, r6, lr}
   24a78:	sub	sp, sp, #8
   24a7c:	ldr	r6, [pc, #112]	; 24af4 <myhtml_serialization_tree_buffer@@Base+0x80>
   24a80:	add	r6, pc, r6
   24a84:	subs	r4, r1, #0
   24a88:	beq	24aec <myhtml_serialization_tree_buffer@@Base+0x78>
   24a8c:	mov	r5, r0
   24a90:	ldr	r3, [r4]
   24a94:	cmp	r3, #0
   24a98:	beq	24ac0 <myhtml_serialization_tree_buffer@@Base+0x4c>
   24a9c:	ldr	r3, [pc, #84]	; 24af8 <myhtml_serialization_tree_buffer@@Base+0x84>
   24aa0:	ldr	r3, [r6, r3]
   24aa4:	str	r3, [sp, #4]
   24aa8:	mov	r2, r4
   24aac:	mov	r1, r3
   24ab0:	mov	r0, r5
   24ab4:	bl	10e68 <myhtml_serialization_tree_callback@plt>
   24ab8:	add	sp, sp, #8
   24abc:	pop	{r4, r5, r6, pc}
   24ac0:	ldr	r0, [pc, #52]	; 24afc <myhtml_serialization_tree_buffer@@Base+0x88>
   24ac4:	str	r0, [r4, #4]
   24ac8:	str	r3, [r4, #8]
   24acc:	bl	10c94 <mycore_malloc@plt>
   24ad0:	str	r0, [r4]
   24ad4:	cmp	r0, #0
   24ad8:	moveq	r3, #0
   24adc:	streq	r3, [r4, #4]
   24ae0:	moveq	r0, #2
   24ae4:	bne	24a9c <myhtml_serialization_tree_buffer@@Base+0x28>
   24ae8:	b	24ab8 <myhtml_serialization_tree_buffer@@Base+0x44>
   24aec:	mov	r0, #0
   24af0:	b	24ab8 <myhtml_serialization_tree_buffer@@Base+0x44>
   24af4:	andeq	r2, pc, r8, ror r5	; <UNPREDICTABLE>
   24af8:	andeq	r0, r0, r8, lsr #17
   24afc:	andeq	r5, r0, sl

00024b00 <myhtml_serialization@@Base>:
   24b00:	push	{r4, lr}
   24b04:	bl	10328 <myhtml_serialization_tree_buffer@plt>
   24b08:	pop	{r4, pc}

00024b0c <myhtml_serialization_node_buffer@@Base>:
   24b0c:	push	{r4, r5, r6, lr}
   24b10:	sub	sp, sp, #8
   24b14:	ldr	r6, [pc, #104]	; 24b84 <myhtml_serialization_node_buffer@@Base+0x78>
   24b18:	add	r6, pc, r6
   24b1c:	subs	r4, r1, #0
   24b20:	beq	24b7c <myhtml_serialization_node_buffer@@Base+0x70>
   24b24:	mov	r5, r0
   24b28:	ldr	r3, [r4]
   24b2c:	cmp	r3, #0
   24b30:	beq	24b58 <myhtml_serialization_node_buffer@@Base+0x4c>
   24b34:	ldr	r3, [pc, #76]	; 24b88 <myhtml_serialization_node_buffer@@Base+0x7c>
   24b38:	ldr	r3, [r6, r3]
   24b3c:	str	r3, [sp, #4]
   24b40:	mov	r2, r4
   24b44:	mov	r1, r3
   24b48:	mov	r0, r5
   24b4c:	bl	10700 <myhtml_serialization_node_callback@plt>
   24b50:	add	sp, sp, #8
   24b54:	pop	{r4, r5, r6, pc}
   24b58:	mov	r0, #2048	; 0x800
   24b5c:	str	r0, [r4, #4]
   24b60:	str	r3, [r4, #8]
   24b64:	bl	10c94 <mycore_malloc@plt>
   24b68:	str	r0, [r4]
   24b6c:	cmp	r0, #0
   24b70:	streq	r0, [r4, #4]
   24b74:	bne	24b34 <myhtml_serialization_node_buffer@@Base+0x28>
   24b78:	b	24b50 <myhtml_serialization_node_buffer@@Base+0x44>
   24b7c:	mov	r0, #0
   24b80:	b	24b50 <myhtml_serialization_node_buffer@@Base+0x44>
   24b84:	andeq	r2, pc, r0, ror #9
   24b88:	andeq	r0, r0, r8, lsr #17

00024b8c <myhtml_serialization_node@@Base>:
   24b8c:	push	{r4, lr}
   24b90:	bl	107b4 <myhtml_serialization_node_buffer@plt>
   24b94:	pop	{r4, pc}

00024b98 <myhtml_stream_buffer_create@@Base>:
   24b98:	push	{r4, lr}
   24b9c:	mov	r1, #36	; 0x24
   24ba0:	mov	r0, #1
   24ba4:	bl	ff14 <mycore_calloc@plt>
   24ba8:	pop	{r4, pc}

00024bac <myhtml_stream_buffer_init@@Base>:
   24bac:	push	{r4, lr}
   24bb0:	mov	r4, r0
   24bb4:	mov	r0, r1
   24bb8:	mov	r3, #0
   24bbc:	str	r3, [r4, #4]
   24bc0:	str	r1, [r4, #8]
   24bc4:	mov	r1, #12
   24bc8:	bl	ff14 <mycore_calloc@plt>
   24bcc:	str	r0, [r4]
   24bd0:	ldr	r3, [pc, #12]	; 24be4 <myhtml_stream_buffer_init@@Base+0x38>
   24bd4:	cmp	r0, #0
   24bd8:	moveq	r0, r3
   24bdc:	movne	r0, #0
   24be0:	pop	{r4, pc}
   24be4:	andeq	r9, r0, r1, lsl #6

00024be8 <myhtml_stream_buffer_entry_init@@Base>:
   24be8:	push	{r4, r5, r6, lr}
   24bec:	mov	r4, r0
   24bf0:	mov	r5, r1
   24bf4:	ldr	r0, [r0]
   24bf8:	cmp	r0, #0
   24bfc:	beq	24c18 <myhtml_stream_buffer_entry_init@@Base+0x30>
   24c00:	ldr	r3, [r4, #8]
   24c04:	cmp	r3, r1
   24c08:	bcc	24c14 <myhtml_stream_buffer_entry_init@@Base+0x2c>
   24c0c:	mov	r0, #0
   24c10:	pop	{r4, r5, r6, pc}
   24c14:	bl	10dcc <mycore_free@plt>
   24c18:	mov	r3, #0
   24c1c:	str	r3, [r4, #4]
   24c20:	str	r5, [r4, #8]
   24c24:	mov	r0, r5
   24c28:	bl	10c94 <mycore_malloc@plt>
   24c2c:	str	r0, [r4]
   24c30:	ldr	r3, [pc, #12]	; 24c44 <myhtml_stream_buffer_entry_init@@Base+0x5c>
   24c34:	cmp	r0, #0
   24c38:	moveq	r0, r3
   24c3c:	movne	r0, #0
   24c40:	pop	{r4, r5, r6, pc}
   24c44:	andeq	r9, r0, r3, lsl #6

00024c48 <myhtml_stream_buffer_entry_clean@@Base>:
   24c48:	cmp	r0, #0
   24c4c:	movne	r3, #0
   24c50:	strne	r3, [r0, #4]
   24c54:	bx	lr

00024c58 <myhtml_stream_buffer_entry_destroy@@Base>:
   24c58:	push	{r4, r5, r6, lr}
   24c5c:	subs	r4, r0, #0
   24c60:	beq	24c80 <myhtml_stream_buffer_entry_destroy@@Base+0x28>
   24c64:	mov	r5, r1
   24c68:	ldr	r0, [r4]
   24c6c:	cmp	r0, #0
   24c70:	beq	24c78 <myhtml_stream_buffer_entry_destroy@@Base+0x20>
   24c74:	bl	10dcc <mycore_free@plt>
   24c78:	cmp	r5, #0
   24c7c:	bne	24c88 <myhtml_stream_buffer_entry_destroy@@Base+0x30>
   24c80:	mov	r0, r4
   24c84:	pop	{r4, r5, r6, pc}
   24c88:	mov	r0, r4
   24c8c:	bl	10dcc <mycore_free@plt>
   24c90:	mov	r4, #0
   24c94:	b	24c80 <myhtml_stream_buffer_entry_destroy@@Base+0x28>

00024c98 <myhtml_stream_buffer_clean@@Base>:
   24c98:	cmp	r0, #0
   24c9c:	movne	r3, #0
   24ca0:	strne	r3, [r0, #4]
   24ca4:	bx	lr

00024ca8 <myhtml_stream_buffer_destroy@@Base>:
   24ca8:	push	{r4, r5, r6, r7, r8, lr}
   24cac:	subs	r6, r0, #0
   24cb0:	beq	24d10 <myhtml_stream_buffer_destroy@@Base+0x68>
   24cb4:	mov	r8, r1
   24cb8:	ldr	r3, [r6]
   24cbc:	cmp	r3, #0
   24cc0:	beq	24d08 <myhtml_stream_buffer_destroy@@Base+0x60>
   24cc4:	ldr	r3, [r6, #4]
   24cc8:	cmp	r3, #0
   24ccc:	beq	24d00 <myhtml_stream_buffer_destroy@@Base+0x58>
   24cd0:	mov	r4, #0
   24cd4:	mov	r5, r4
   24cd8:	mov	r7, r4
   24cdc:	ldr	r0, [r6]
   24ce0:	mov	r1, r7
   24ce4:	add	r0, r0, r4
   24ce8:	bl	10148 <myhtml_stream_buffer_entry_destroy@plt>
   24cec:	add	r5, r5, #1
   24cf0:	add	r4, r4, #12
   24cf4:	ldr	r3, [r6, #4]
   24cf8:	cmp	r3, r5
   24cfc:	bhi	24cdc <myhtml_stream_buffer_destroy@@Base+0x34>
   24d00:	ldr	r0, [r6]
   24d04:	bl	10dcc <mycore_free@plt>
   24d08:	cmp	r8, #0
   24d0c:	bne	24d18 <myhtml_stream_buffer_destroy@@Base+0x70>
   24d10:	mov	r0, r6
   24d14:	pop	{r4, r5, r6, r7, r8, pc}
   24d18:	mov	r0, r6
   24d1c:	bl	10dcc <mycore_free@plt>
   24d20:	mov	r6, #0
   24d24:	b	24d10 <myhtml_stream_buffer_destroy@@Base+0x68>

00024d28 <myhtml_stream_buffer_add_entry@@Base>:
   24d28:	push	{r4, r5, r6, r7, r8, lr}
   24d2c:	mov	r4, r0
   24d30:	mov	r6, r1
   24d34:	ldr	r1, [r0, #8]
   24d38:	ldr	r3, [r0, #4]
   24d3c:	cmp	r3, r1
   24d40:	bcc	24d7c <myhtml_stream_buffer_add_entry@@Base+0x54>
   24d44:	lsl	r7, r1, #1
   24d48:	add	r1, r7, r1, lsl #2
   24d4c:	lsl	r1, r1, #2
   24d50:	bl	fbd8 <mycore_realloc@plt>
   24d54:	subs	r5, r0, #0
   24d58:	beq	24dac <myhtml_stream_buffer_add_entry@@Base+0x84>
   24d5c:	ldr	r2, [r4, #8]
   24d60:	add	r0, r2, r2, lsl #1
   24d64:	sub	r2, r7, r2
   24d68:	mov	r1, #0
   24d6c:	add	r0, r5, r0, lsl #2
   24d70:	bl	108b0 <memset@plt>
   24d74:	str	r5, [r4]
   24d78:	str	r7, [r4, #8]
   24d7c:	ldr	r5, [r4, #4]
   24d80:	add	r3, r5, r5, lsl #1
   24d84:	ldr	r5, [r4]
   24d88:	add	r5, r5, r3, lsl #2
   24d8c:	mov	r1, r6
   24d90:	mov	r0, r5
   24d94:	bl	10808 <myhtml_stream_buffer_entry_init@plt>
   24d98:	cmp	r0, #0
   24d9c:	ldreq	r3, [r4, #4]
   24da0:	addeq	r3, r3, #1
   24da4:	streq	r3, [r4, #4]
   24da8:	movne	r5, #0
   24dac:	mov	r0, r5
   24db0:	pop	{r4, r5, r6, r7, r8, pc}

00024db4 <myhtml_stream_buffer_current_entry@@Base>:
   24db4:	ldr	r3, [r0, #4]
   24db8:	cmp	r3, #0
   24dbc:	addne	r3, r3, r3, lsl #1
   24dc0:	lslne	r3, r3, #2
   24dc4:	subne	r3, r3, #12
   24dc8:	ldrne	r0, [r0]
   24dcc:	addne	r0, r0, r3
   24dd0:	moveq	r0, #0
   24dd4:	bx	lr

00024dd8 <myhtml_tag_create@@Base>:
   24dd8:	push	{r4, lr}
   24ddc:	mov	r0, #20
   24de0:	bl	10c94 <mycore_malloc@plt>
   24de4:	pop	{r4, pc}

00024de8 <myhtml_tag_clean@@Base>:
   24de8:	push	{r4, lr}
   24dec:	mov	r4, r0
   24df0:	mov	r3, #252	; 0xfc
   24df4:	str	r3, [r0, #8]
   24df8:	ldr	r0, [r0, #4]
   24dfc:	bl	10250 <mcsimple_clean@plt>
   24e00:	ldr	r1, [r4, #12]
   24e04:	ldr	r0, [r4, #16]
   24e08:	bl	106e8 <mchar_async_node_clean@plt>
   24e0c:	ldr	r0, [r4]
   24e10:	bl	102f8 <mctree_clean@plt>
   24e14:	pop	{r4, pc}

00024e18 <myhtml_tag_init@@Base>:
   24e18:	push	{r4, r5, lr}
   24e1c:	sub	sp, sp, #12
   24e20:	mov	r5, r0
   24e24:	mov	r4, r1
   24e28:	bl	102c8 <mcsimple_create@plt>
   24e2c:	str	r0, [r4, #4]
   24e30:	cmp	r0, #0
   24e34:	ldreq	r5, [pc, #104]	; 24ea4 <myhtml_tag_init@@Base+0x8c>
   24e38:	beq	24e98 <myhtml_tag_init@@Base+0x80>
   24e3c:	mov	r3, #44	; 0x2c
   24e40:	mov	r2, #1024	; 0x400
   24e44:	mov	r1, #128	; 0x80
   24e48:	bl	10454 <mcsimple_init@plt>
   24e4c:	add	r1, sp, #4
   24e50:	ldr	r0, [r5, #4]
   24e54:	bl	10298 <mchar_async_node_add@plt>
   24e58:	str	r0, [r4, #12]
   24e5c:	mov	r0, #2
   24e60:	bl	10658 <mctree_create@plt>
   24e64:	str	r0, [r4]
   24e68:	ldr	r3, [r5, #4]
   24e6c:	str	r3, [r4, #16]
   24e70:	mov	r3, #252	; 0xfc
   24e74:	str	r3, [r4, #8]
   24e78:	ldr	r5, [sp, #4]
   24e7c:	cmp	r5, #0
   24e80:	bne	24e98 <myhtml_tag_init@@Base+0x80>
   24e84:	cmp	r0, #0
   24e88:	moveq	r5, #2
   24e8c:	beq	24e98 <myhtml_tag_init@@Base+0x80>
   24e90:	mov	r0, r4
   24e94:	bl	11078 <myhtml_tag_clean@plt>
   24e98:	mov	r0, r5
   24e9c:	add	sp, sp, #12
   24ea0:	pop	{r4, r5, pc}
   24ea4:	muleq	r0, r0, r1

00024ea8 <myhtml_tag_destroy@@Base>:
   24ea8:	push	{r4, lr}
   24eac:	subs	r4, r0, #0
   24eb0:	beq	24ee4 <myhtml_tag_destroy@@Base+0x3c>
   24eb4:	ldr	r0, [r4]
   24eb8:	bl	100b8 <mctree_destroy@plt>
   24ebc:	str	r0, [r4]
   24ec0:	mov	r1, #1
   24ec4:	ldr	r0, [r4, #4]
   24ec8:	bl	103a0 <mcsimple_destroy@plt>
   24ecc:	str	r0, [r4, #4]
   24ed0:	ldr	r1, [r4, #12]
   24ed4:	ldr	r0, [r4, #16]
   24ed8:	bl	10c58 <mchar_async_node_delete@plt>
   24edc:	mov	r0, r4
   24ee0:	bl	10dcc <mycore_free@plt>
   24ee4:	mov	r0, #0
   24ee8:	pop	{r4, pc}

00024eec <myhtml_tag_add@@Base>:
   24eec:	push	{r4, r5, r6, r7, r8, r9, lr}
   24ef0:	sub	sp, sp, #12
   24ef4:	mov	r4, r0
   24ef8:	mov	r8, r1
   24efc:	mov	r5, r2
   24f00:	mov	r7, r3
   24f04:	add	r2, r2, #1
   24f08:	ldr	r1, [r0, #12]
   24f0c:	ldr	r0, [r0, #16]
   24f10:	bl	10910 <mchar_async_malloc@plt>
   24f14:	mov	r6, r0
   24f18:	ldrb	r3, [sp, #40]	; 0x28
   24f1c:	cmp	r3, #0
   24f20:	beq	24fdc <myhtml_tag_add@@Base+0xf0>
   24f24:	cmp	r5, #0
   24f28:	beq	24fd4 <myhtml_tag_add@@Base+0xe8>
   24f2c:	mov	r0, r8
   24f30:	sub	ip, r6, #1
   24f34:	add	r1, r8, r5
   24f38:	ldrb	r3, [r0], #1
   24f3c:	sub	r2, r3, #65	; 0x41
   24f40:	uxtb	r2, r2
   24f44:	cmp	r2, #25
   24f48:	orrls	r3, r3, #96	; 0x60
   24f4c:	strb	r3, [ip, #1]!
   24f50:	cmp	r0, r1
   24f54:	bne	24f38 <myhtml_tag_add@@Base+0x4c>
   24f58:	mov	r2, r5
   24f5c:	mov	r3, #0
   24f60:	strb	r3, [r6, r2]
   24f64:	ldr	r0, [r4, #4]
   24f68:	bl	1073c <mcsimple_malloc@plt>
   24f6c:	mov	r8, r0
   24f70:	mov	r9, #0
   24f74:	str	r9, [sp]
   24f78:	mov	r3, r0
   24f7c:	mov	r2, r5
   24f80:	mov	r1, r6
   24f84:	ldr	r0, [r4]
   24f88:	bl	10958 <mctree_insert@plt>
   24f8c:	ldr	r3, [r4, #8]
   24f90:	str	r3, [r8]
   24f94:	str	r6, [r8, #4]
   24f98:	str	r5, [r8, #8]
   24f9c:	str	r7, [r8, #12]
   24fa0:	ldr	r3, [r4, #8]
   24fa4:	add	r3, r3, #1
   24fa8:	str	r3, [r4, #8]
   24fac:	str	r9, [r8, #16]
   24fb0:	str	r9, [r8, #20]
   24fb4:	str	r9, [r8, #24]
   24fb8:	str	r9, [r8, #28]
   24fbc:	str	r9, [r8, #32]
   24fc0:	str	r9, [r8, #36]	; 0x24
   24fc4:	str	r9, [r8, #40]	; 0x28
   24fc8:	ldr	r0, [r8]
   24fcc:	add	sp, sp, #12
   24fd0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   24fd4:	mov	r2, r5
   24fd8:	b	24f5c <myhtml_tag_add@@Base+0x70>
   24fdc:	mov	r2, r5
   24fe0:	mov	r1, r8
   24fe4:	bl	108ec <strncpy@plt>
   24fe8:	mov	r3, #0
   24fec:	strb	r3, [r6, r5]
   24ff0:	b	24f64 <myhtml_tag_add@@Base+0x78>

00024ff4 <myhtml_tag_set_category@@Base>:
   24ff4:	cmp	r1, #251	; 0xfb
   24ff8:	bxls	lr
   24ffc:	push	{r4, r5, r6, lr}
   25000:	mov	r5, r3
   25004:	mov	r4, r2
   25008:	sub	r1, r1, #252	; 0xfc
   2500c:	ldr	r0, [r0, #4]
   25010:	bl	10fa0 <mcsimple_get_by_absolute_position@plt>
   25014:	add	r2, r4, #4
   25018:	str	r5, [r0, r2, lsl #2]
   2501c:	pop	{r4, r5, r6, pc}

00025020 <myhtml_tag_get_by_id@@Base>:
   25020:	push	{r4, lr}
   25024:	cmp	r1, #251	; 0xfb
   25028:	bhi	25038 <myhtml_tag_get_by_id@@Base+0x18>
   2502c:	mov	r0, r1
   25030:	bl	fff8 <myhtml_tag_static_get_by_id@plt>
   25034:	pop	{r4, pc}
   25038:	sub	r1, r1, #252	; 0xfc
   2503c:	ldr	r0, [r0, #4]
   25040:	bl	10fa0 <mcsimple_get_by_absolute_position@plt>
   25044:	pop	{r4, pc}

00025048 <myhtml_tag_get_by_name@@Base>:
   25048:	push	{r4, r5, r6, lr}
   2504c:	mov	r6, r0
   25050:	mov	r4, r1
   25054:	mov	r5, r2
   25058:	mov	r1, r2
   2505c:	mov	r0, r4
   25060:	bl	1091c <myhtml_tag_static_search@plt>
   25064:	cmp	r0, #0
   25068:	popne	{r4, r5, r6, pc}
   2506c:	mov	r2, r5
   25070:	mov	r1, r4
   25074:	ldr	r0, [r6]
   25078:	bl	10748 <mctree_search_lowercase@plt>
   2507c:	ldr	r3, [r6]
   25080:	ldr	r3, [r3]
   25084:	rsb	r0, r0, r0, lsl #3
   25088:	add	r3, r3, r0, lsl #2
   2508c:	ldr	r0, [r3, #8]
   25090:	pop	{r4, r5, r6, pc}

00025094 <myhtml_tag_static_search@@Base>:
   25094:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   25098:	mov	r8, r0
   2509c:	mov	r5, r1
   250a0:	ldr	r3, [pc, #208]	; 25178 <myhtml_tag_static_search@@Base+0xe4>
   250a4:	add	r3, pc, r3
   250a8:	add	r2, r0, r1
   250ac:	ldrb	r2, [r2, #-1]
   250b0:	ldrb	r2, [r3, r2]
   250b4:	ldrb	r1, [r0]
   250b8:	ldrb	r4, [r3, r1]
   250bc:	mul	r4, r4, r2
   250c0:	mul	r4, r5, r4
   250c4:	ldr	r3, [pc, #176]	; 2517c <myhtml_tag_static_search@@Base+0xe8>
   250c8:	umull	r2, r3, r3, r4
   250cc:	sub	r2, r4, r3
   250d0:	add	r3, r3, r2, lsr #1
   250d4:	lsr	r3, r3, #8
   250d8:	rsb	r2, r3, r3, lsl #4
   250dc:	rsb	r3, r3, r2, lsl #5
   250e0:	sub	r3, r4, r3
   250e4:	add	r4, r3, #1
   250e8:	ldr	r6, [pc, #144]	; 25180 <myhtml_tag_static_search@@Base+0xec>
   250ec:	add	r6, pc, r6
   250f0:	ldr	r7, [pc, #140]	; 25184 <myhtml_tag_static_search@@Base+0xf0>
   250f4:	add	r7, pc, r7
   250f8:	ldr	r9, [pc, #136]	; 25188 <myhtml_tag_static_search@@Base+0xf4>
   250fc:	add	r9, pc, r9
   25100:	b	25130 <myhtml_tag_static_search@@Base+0x9c>
   25104:	mov	r2, r5
   25108:	mov	r1, r8
   2510c:	ldr	r0, [sl, #4]
   25110:	bl	102a4 <mycore_strncasecmp@plt>
   25114:	cmp	r0, #0
   25118:	beq	25170 <myhtml_tag_static_search@@Base+0xdc>
   2511c:	add	r4, r4, r4, lsl #1
   25120:	add	r4, r9, r4, lsl #2
   25124:	ldr	r4, [r4, #4]
   25128:	cmp	r4, #0
   2512c:	beq	25164 <myhtml_tag_static_search@@Base+0xd0>
   25130:	add	r3, r4, r4, lsl #1
   25134:	ldr	sl, [r6, r3, lsl #2]
   25138:	cmp	sl, #0
   2513c:	beq	25170 <myhtml_tag_static_search@@Base+0xdc>
   25140:	ldr	r3, [sl, #8]
   25144:	cmp	r5, r3
   25148:	beq	25104 <myhtml_tag_static_search@@Base+0x70>
   2514c:	cmp	r5, r3
   25150:	bcc	2516c <myhtml_tag_static_search@@Base+0xd8>
   25154:	add	r4, r4, r4, lsl #1
   25158:	add	r4, r7, r4, lsl #2
   2515c:	ldr	r4, [r4, #4]
   25160:	b	25130 <myhtml_tag_static_search@@Base+0x9c>
   25164:	mov	sl, #0
   25168:	b	25170 <myhtml_tag_static_search@@Base+0xdc>
   2516c:	mov	sl, #0
   25170:	mov	r0, sl
   25174:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   25178:	andeq	r8, sp, r0, asr #11
   2517c:			; <UNDEFINED> instruction: 0x11a3019b
   25180:	andeq	sp, lr, r8, asr #8
   25184:	andeq	sp, lr, r0, asr #8
   25188:	andeq	sp, lr, r8, lsr r4

0002518c <myhtml_tag_static_get_by_id@@Base>:
   2518c:	ldr	r3, [pc, #20]	; 251a8 <myhtml_tag_static_get_by_id@@Base+0x1c>
   25190:	add	r3, pc, r3
   25194:	sub	r3, r3, #1680	; 0x690
   25198:	sub	r3, r3, #12
   2519c:	mov	r2, #44	; 0x2c
   251a0:	mla	r0, r2, r0, r3
   251a4:	bx	lr
   251a8:	muleq	lr, ip, r3

000251ac <myhtml_token_create@@Base>:
   251ac:	push	{r4, r5, r6, lr}
   251b0:	mov	r6, r0
   251b4:	subs	r5, r1, #0
   251b8:	cmp	r1, #0
   251bc:	moveq	r5, #4096	; 0x1000
   251c0:	mov	r0, #24
   251c4:	bl	10c94 <mycore_malloc@plt>
   251c8:	subs	r4, r0, #0
   251cc:	beq	2523c <myhtml_token_create@@Base+0x90>
   251d0:	bl	fd58 <mcobject_async_create@plt>
   251d4:	str	r0, [r4, #4]
   251d8:	cmp	r0, #0
   251dc:	beq	25244 <myhtml_token_create@@Base+0x98>
   251e0:	bl	fd58 <mcobject_async_create@plt>
   251e4:	str	r0, [r4, #8]
   251e8:	cmp	r0, #0
   251ec:	beq	25254 <myhtml_token_create@@Base+0xa8>
   251f0:	mov	r3, #52	; 0x34
   251f4:	mov	r2, r5
   251f8:	mov	r1, #128	; 0x80
   251fc:	ldr	r0, [r4, #4]
   25200:	bl	fc80 <mcobject_async_init@plt>
   25204:	mov	r3, #68	; 0x44
   25208:	mov	r2, r5
   2520c:	mov	r1, #128	; 0x80
   25210:	ldr	r0, [r4, #8]
   25214:	bl	fc80 <mcobject_async_init@plt>
   25218:	mov	r1, #0
   2521c:	ldr	r0, [r4, #4]
   25220:	bl	10a90 <mcobject_async_node_add@plt>
   25224:	str	r0, [r4, #12]
   25228:	mov	r1, #0
   2522c:	ldr	r0, [r4, #8]
   25230:	bl	10a90 <mcobject_async_node_add@plt>
   25234:	str	r0, [r4, #16]
   25238:	str	r6, [r4]
   2523c:	mov	r0, r4
   25240:	pop	{r4, r5, r6, pc}
   25244:	mov	r0, r4
   25248:	bl	10dcc <mycore_free@plt>
   2524c:	mov	r4, #0
   25250:	b	2523c <myhtml_token_create@@Base+0x90>
   25254:	ldr	r0, [r4, #4]
   25258:	bl	10dcc <mycore_free@plt>
   2525c:	mov	r0, r4
   25260:	bl	10dcc <mycore_free@plt>
   25264:	mov	r4, #0
   25268:	b	2523c <myhtml_token_create@@Base+0x90>

0002526c <myhtml_token_clean@@Base>:
   2526c:	push	{r4, lr}
   25270:	mov	r4, r0
   25274:	ldr	r1, [r0, #12]
   25278:	ldr	r0, [r0, #4]
   2527c:	bl	10880 <mcobject_async_node_clean@plt>
   25280:	ldr	r1, [r4, #16]
   25284:	ldr	r0, [r4, #8]
   25288:	bl	10880 <mcobject_async_node_clean@plt>
   2528c:	pop	{r4, pc}

00025290 <myhtml_token_clean_all@@Base>:
   25290:	push	{r4, lr}
   25294:	mov	r4, r0
   25298:	ldr	r0, [r0, #4]
   2529c:	bl	11054 <mcobject_async_clean@plt>
   252a0:	ldr	r0, [r4, #8]
   252a4:	bl	11054 <mcobject_async_clean@plt>
   252a8:	pop	{r4, pc}

000252ac <myhtml_token_destroy@@Base>:
   252ac:	push	{r4, lr}
   252b0:	subs	r4, r0, #0
   252b4:	beq	252f0 <myhtml_token_destroy@@Base+0x44>
   252b8:	ldr	r0, [r4, #4]
   252bc:	cmp	r0, #0
   252c0:	beq	252d0 <myhtml_token_destroy@@Base+0x24>
   252c4:	mov	r1, #1
   252c8:	bl	10b20 <mcobject_async_destroy@plt>
   252cc:	str	r0, [r4, #4]
   252d0:	ldr	r0, [r4, #8]
   252d4:	cmp	r0, #0
   252d8:	beq	252e8 <myhtml_token_destroy@@Base+0x3c>
   252dc:	mov	r1, #1
   252e0:	bl	10b20 <mcobject_async_destroy@plt>
   252e4:	str	r0, [r4, #8]
   252e8:	mov	r0, r4
   252ec:	bl	10dcc <mycore_free@plt>
   252f0:	mov	r0, #0
   252f4:	pop	{r4, pc}

000252f8 <myhtml_token_node_clean@@Base>:
   252f8:	push	{r4, lr}
   252fc:	mov	r4, r0
   25300:	mov	r2, #52	; 0x34
   25304:	mov	r1, #0
   25308:	bl	108b0 <memset@plt>
   2530c:	mov	r3, #8
   25310:	str	r3, [r4, #48]	; 0x30
   25314:	add	r0, r4, #4
   25318:	bl	11090 <mycore_string_clean_all@plt>
   2531c:	pop	{r4, pc}

00025320 <myhtml_token_node_create@@Base>:
   25320:	push	{r4, lr}
   25324:	mov	r2, #0
   25328:	ldr	r0, [r0, #4]
   2532c:	bl	10bbc <mcobject_async_malloc@plt>
   25330:	subs	r4, r0, #0
   25334:	beq	25340 <myhtml_token_node_create@@Base+0x20>
   25338:	mov	r0, r4
   2533c:	bl	10f7c <myhtml_token_node_clean@plt>
   25340:	mov	r0, r4
   25344:	pop	{r4, pc}

00025348 <myhtml_token_attr_clean@@Base>:
   25348:	push	{r4, lr}
   2534c:	mov	r4, r0
   25350:	mov	r2, #68	; 0x44
   25354:	mov	r1, #0
   25358:	bl	108b0 <memset@plt>
   2535c:	mov	r3, #1
   25360:	str	r3, [r4, #64]	; 0x40
   25364:	add	r0, r4, #8
   25368:	bl	11090 <mycore_string_clean_all@plt>
   2536c:	add	r0, r4, #28
   25370:	bl	11090 <mycore_string_clean_all@plt>
   25374:	pop	{r4, pc}

00025378 <myhtml_token_attr_create@@Base>:
   25378:	push	{r4, lr}
   2537c:	mov	r2, #0
   25380:	ldr	r0, [r0, #8]
   25384:	bl	10bbc <mcobject_async_malloc@plt>
   25388:	subs	r4, r0, #0
   2538c:	beq	25398 <myhtml_token_attr_create@@Base+0x20>
   25390:	mov	r0, r4
   25394:	bl	10004 <myhtml_token_attr_clean@plt>
   25398:	mov	r0, r4
   2539c:	pop	{r4, pc}

000253a0 <myhtml_token_node_tag_id@@Base>:
   253a0:	ldr	r0, [r0]
   253a4:	bx	lr

000253a8 <myhtml_token_node_raw_position@@Base>:
   253a8:	cmp	r1, #0
   253ac:	ldrne	r3, [r1, #28]
   253b0:	ldrne	r2, [r1, #24]
   253b4:	strne	r2, [r0]
   253b8:	moveq	r3, #0
   253bc:	streq	r3, [r0]
   253c0:	str	r3, [r0, #4]
   253c4:	bx	lr

000253c8 <myhtml_token_node_element_position@@Base>:
   253c8:	cmp	r1, #0
   253cc:	ldrne	r3, [r1, #36]	; 0x24
   253d0:	ldrne	r2, [r1, #32]
   253d4:	strne	r2, [r0]
   253d8:	moveq	r3, #0
   253dc:	streq	r3, [r0]
   253e0:	str	r3, [r0, #4]
   253e4:	bx	lr

000253e8 <myhtml_token_node_attribute_first@@Base>:
   253e8:	ldr	r0, [r0, #40]	; 0x28
   253ec:	bx	lr

000253f0 <myhtml_token_node_attribute_last@@Base>:
   253f0:	ldr	r0, [r0, #44]	; 0x2c
   253f4:	bx	lr

000253f8 <myhtml_token_node_text@@Base>:
   253f8:	cmp	r1, #0
   253fc:	ldrne	r3, [r0, #12]
   25400:	strne	r3, [r1]
   25404:	ldr	r0, [r0, #4]
   25408:	bx	lr

0002540c <myhtml_token_node_string@@Base>:
   2540c:	add	r0, r0, #4
   25410:	bx	lr

00025414 <myhtml_token_node_is_close@@Base>:
   25414:	ldr	r0, [r0, #48]	; 0x30
   25418:	and	r0, r0, #1
   2541c:	bx	lr

00025420 <myhtml_token_node_is_close_self@@Base>:
   25420:	ldr	r0, [r0, #48]	; 0x30
   25424:	lsr	r0, r0, #1
   25428:	and	r0, r0, #1
   2542c:	bx	lr

00025430 <myhtml_token_node_wait_for_done@@Base>:
   25430:	push	{r4, r5, r6, lr}
   25434:	mov	r5, r0
   25438:	mov	r4, r1
   2543c:	ldr	r3, [r1, #48]	; 0x30
   25440:	tst	r3, #4
   25444:	popne	{r4, r5, r6, pc}
   25448:	ldr	r3, [r5]
   2544c:	ldr	r3, [r3]
   25450:	ldr	r3, [r3]
   25454:	ldr	r0, [r3, #24]
   25458:	bl	100a0 <mythread_nanosleep_sleep@plt>
   2545c:	ldr	r3, [r4, #48]	; 0x30
   25460:	tst	r3, #4
   25464:	beq	25448 <myhtml_token_node_wait_for_done@@Base+0x18>
   25468:	pop	{r4, r5, r6, pc}

0002546c <myhtml_token_set_done@@Base>:
   2546c:	ldr	r3, [r0, #48]	; 0x30
   25470:	orr	r3, r3, #4
   25474:	str	r3, [r0, #48]	; 0x30
   25478:	bx	lr

0002547c <myhtml_token_node_text_append@@Base>:
   2547c:	push	{r4, r5, r6, lr}
   25480:	mov	r6, r2
   25484:	mov	r5, r3
   25488:	ldr	r0, [r0]
   2548c:	add	r4, r1, #4
   25490:	add	r3, r3, #2
   25494:	mov	r2, r4
   25498:	ldr	r1, [r0, #52]	; 0x34
   2549c:	ldr	r0, [r0, #4]
   254a0:	bl	10610 <mycore_string_init@plt>
   254a4:	mov	r2, r5
   254a8:	mov	r1, r6
   254ac:	mov	r0, r4
   254b0:	bl	108d4 <mycore_string_append@plt>
   254b4:	pop	{r4, r5, r6, pc}

000254b8 <myhtml_token_node_attr_append@@Base>:
   254b8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   254bc:	mov	r7, r0
   254c0:	mov	r5, r1
   254c4:	mov	sl, r2
   254c8:	mov	r8, r3
   254cc:	ldr	r6, [sp, #36]	; 0x24
   254d0:	mov	r2, #0
   254d4:	ldr	r1, [sp, #40]	; 0x28
   254d8:	ldr	r0, [r0, #8]
   254dc:	bl	10bbc <mcobject_async_malloc@plt>
   254e0:	mov	r4, r0
   254e4:	mov	r3, #0
   254e8:	str	r3, [r0]
   254ec:	cmp	r8, r3
   254f0:	beq	25588 <myhtml_token_node_attr_append@@Base+0xd0>
   254f4:	ldr	r0, [r7]
   254f8:	add	r9, r4, #8
   254fc:	add	r3, r8, #1
   25500:	mov	r2, r9
   25504:	ldr	r1, [r0, #52]	; 0x34
   25508:	ldr	r0, [r0, #4]
   2550c:	bl	10610 <mycore_string_init@plt>
   25510:	mov	r2, r8
   25514:	mov	r1, sl
   25518:	mov	r0, r9
   2551c:	bl	10688 <mycore_string_append_lowercase@plt>
   25520:	cmp	r6, #0
   25524:	beq	25594 <myhtml_token_node_attr_append@@Base+0xdc>
   25528:	ldr	r0, [r7]
   2552c:	add	r7, r4, #28
   25530:	add	r3, r6, #1
   25534:	mov	r2, r7
   25538:	ldr	r1, [r0, #52]	; 0x34
   2553c:	ldr	r0, [r0, #4]
   25540:	bl	10610 <mycore_string_init@plt>
   25544:	mov	r2, r6
   25548:	ldr	r1, [sp, #32]
   2554c:	mov	r0, r7
   25550:	bl	108d4 <mycore_string_append@plt>
   25554:	ldr	r3, [r5, #40]	; 0x28
   25558:	cmp	r3, #0
   2555c:	streq	r3, [r4, #4]
   25560:	streq	r4, [r5, #40]	; 0x28
   25564:	ldrne	r3, [r5, #44]	; 0x2c
   25568:	strne	r4, [r3]
   2556c:	ldrne	r3, [r5, #44]	; 0x2c
   25570:	strne	r3, [r4, #4]
   25574:	str	r4, [r5, #44]	; 0x2c
   25578:	mov	r3, #1
   2557c:	str	r3, [r4, #64]	; 0x40
   25580:	mov	r0, r4
   25584:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   25588:	add	r0, r0, #8
   2558c:	bl	11090 <mycore_string_clean_all@plt>
   25590:	b	25520 <myhtml_token_node_attr_append@@Base+0x68>
   25594:	add	r0, r4, #28
   25598:	bl	11090 <mycore_string_clean_all@plt>
   2559c:	b	25554 <myhtml_token_node_attr_append@@Base+0x9c>

000255a0 <myhtml_token_node_attr_append_with_convert_encoding@@Base>:
   255a0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   255a4:	mov	r7, r0
   255a8:	mov	r5, r1
   255ac:	mov	sl, r2
   255b0:	mov	r8, r3
   255b4:	ldr	r6, [sp, #36]	; 0x24
   255b8:	mov	r2, #0
   255bc:	ldr	r1, [sp, #40]	; 0x28
   255c0:	ldr	r0, [r0, #8]
   255c4:	bl	10bbc <mcobject_async_malloc@plt>
   255c8:	mov	r4, r0
   255cc:	mov	r3, #0
   255d0:	str	r3, [r0]
   255d4:	cmp	r8, r3
   255d8:	beq	256a8 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x108>
   255dc:	ldr	r0, [r7]
   255e0:	add	r9, r4, #8
   255e4:	add	r3, r8, #1
   255e8:	mov	r2, r9
   255ec:	ldr	r1, [r0, #52]	; 0x34
   255f0:	ldr	r0, [r0, #4]
   255f4:	bl	10610 <mycore_string_init@plt>
   255f8:	ldr	r3, [sp, #44]	; 0x2c
   255fc:	cmp	r3, #0
   25600:	bne	25658 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xb8>
   25604:	mov	r2, r8
   25608:	mov	r1, sl
   2560c:	mov	r0, r9
   25610:	bl	10688 <mycore_string_append_lowercase@plt>
   25614:	cmp	r6, #0
   25618:	bne	256f4 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x154>
   2561c:	add	r0, r4, #28
   25620:	bl	11090 <mycore_string_clean_all@plt>
   25624:	ldr	r3, [r5, #40]	; 0x28
   25628:	cmp	r3, #0
   2562c:	streq	r3, [r4, #4]
   25630:	streq	r4, [r5, #40]	; 0x28
   25634:	ldrne	r3, [r5, #44]	; 0x2c
   25638:	strne	r4, [r3]
   2563c:	ldrne	r3, [r5, #44]	; 0x2c
   25640:	strne	r3, [r4, #4]
   25644:	str	r4, [r5, #44]	; 0x2c
   25648:	mov	r3, #1
   2564c:	str	r3, [r4, #64]	; 0x40
   25650:	mov	r0, r4
   25654:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   25658:	ldr	r3, [sp, #44]	; 0x2c
   2565c:	mov	r2, r8
   25660:	mov	r1, sl
   25664:	mov	r0, r9
   25668:	bl	fe3c <myencoding_string_append_lowercase_ascii@plt>
   2566c:	cmp	r6, #0
   25670:	beq	2561c <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x7c>
   25674:	ldr	r0, [r7]
   25678:	add	r7, r4, #28
   2567c:	add	r3, r6, #1
   25680:	mov	r2, r7
   25684:	ldr	r1, [r0, #52]	; 0x34
   25688:	ldr	r0, [r0, #4]
   2568c:	bl	10610 <mycore_string_init@plt>
   25690:	ldr	r3, [sp, #44]	; 0x2c
   25694:	mov	r2, r6
   25698:	ldr	r1, [sp, #32]
   2569c:	mov	r0, r7
   256a0:	bl	10460 <myencoding_string_append@plt>
   256a4:	b	25624 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x84>
   256a8:	add	r0, r0, #8
   256ac:	bl	11090 <mycore_string_clean_all@plt>
   256b0:	cmp	r6, #0
   256b4:	beq	2561c <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x7c>
   256b8:	ldr	r0, [r7]
   256bc:	add	r7, r4, #28
   256c0:	add	r3, r6, #1
   256c4:	mov	r2, r7
   256c8:	ldr	r1, [r0, #52]	; 0x34
   256cc:	ldr	r0, [r0, #4]
   256d0:	bl	10610 <mycore_string_init@plt>
   256d4:	ldr	r3, [sp, #44]	; 0x2c
   256d8:	cmp	r3, #0
   256dc:	bne	25690 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xf0>
   256e0:	mov	r2, r6
   256e4:	ldr	r1, [sp, #32]
   256e8:	mov	r0, r7
   256ec:	bl	108d4 <mycore_string_append@plt>
   256f0:	b	25624 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x84>
   256f4:	ldr	r0, [r7]
   256f8:	add	r7, r4, #28
   256fc:	add	r3, r6, #1
   25700:	mov	r2, r7
   25704:	ldr	r1, [r0, #52]	; 0x34
   25708:	ldr	r0, [r0, #4]
   2570c:	bl	10610 <mycore_string_init@plt>
   25710:	b	256e0 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x140>

00025714 <myhtml_token_attr_copy@@Base>:
   25714:	push	{r4, r5, r6, r7, r8, lr}
   25718:	mov	r7, r0
   2571c:	mov	r5, r1
   25720:	mov	r6, r2
   25724:	mov	r2, #0
   25728:	mov	r1, r3
   2572c:	ldr	r0, [r0, #8]
   25730:	bl	10bbc <mcobject_async_malloc@plt>
   25734:	mov	r4, r0
   25738:	mov	r3, #0
   2573c:	str	r3, [r0]
   25740:	ldr	r3, [r5, #16]
   25744:	cmp	r3, #0
   25748:	beq	257e4 <myhtml_token_attr_copy@@Base+0xd0>
   2574c:	ldr	r0, [r7]
   25750:	add	r8, r4, #8
   25754:	add	r3, r3, #1
   25758:	mov	r2, r8
   2575c:	ldr	r1, [r0, #52]	; 0x34
   25760:	ldr	r0, [r0, #4]
   25764:	bl	10610 <mycore_string_init@plt>
   25768:	ldr	r2, [r5, #16]
   2576c:	ldr	r1, [r5, #8]
   25770:	mov	r0, r8
   25774:	bl	10688 <mycore_string_append_lowercase@plt>
   25778:	ldr	r3, [r5, #36]	; 0x24
   2577c:	cmp	r3, #0
   25780:	beq	257f0 <myhtml_token_attr_copy@@Base+0xdc>
   25784:	ldr	r0, [r7]
   25788:	add	r7, r4, #28
   2578c:	add	r3, r3, #1
   25790:	mov	r2, r7
   25794:	ldr	r1, [r0, #52]	; 0x34
   25798:	ldr	r0, [r0, #4]
   2579c:	bl	10610 <mycore_string_init@plt>
   257a0:	ldr	r2, [r5, #36]	; 0x24
   257a4:	ldr	r1, [r5, #28]
   257a8:	mov	r0, r7
   257ac:	bl	108d4 <mycore_string_append@plt>
   257b0:	ldr	r3, [r6, #40]	; 0x28
   257b4:	cmp	r3, #0
   257b8:	streq	r3, [r4, #4]
   257bc:	streq	r4, [r6, #40]	; 0x28
   257c0:	ldrne	r3, [r6, #44]	; 0x2c
   257c4:	strne	r4, [r3]
   257c8:	ldrne	r3, [r6, #44]	; 0x2c
   257cc:	strne	r3, [r4, #4]
   257d0:	str	r4, [r6, #44]	; 0x2c
   257d4:	ldr	r3, [r5, #64]	; 0x40
   257d8:	str	r3, [r4, #64]	; 0x40
   257dc:	mov	r0, #1
   257e0:	pop	{r4, r5, r6, r7, r8, pc}
   257e4:	add	r0, r0, #8
   257e8:	bl	11090 <mycore_string_clean_all@plt>
   257ec:	b	25778 <myhtml_token_attr_copy@@Base+0x64>
   257f0:	add	r0, r4, #28
   257f4:	bl	11090 <mycore_string_clean_all@plt>
   257f8:	b	257b0 <myhtml_token_attr_copy@@Base+0x9c>

000257fc <myhtml_token_node_attr_copy@@Base>:
   257fc:	push	{r4, r5, r6, r7, r8, lr}
   25800:	mov	r7, r0
   25804:	mov	r6, r2
   25808:	mov	r5, r3
   2580c:	ldr	r4, [r1, #40]	; 0x28
   25810:	cmp	r4, #0
   25814:	popeq	{r4, r5, r6, r7, r8, pc}
   25818:	mov	r3, r5
   2581c:	mov	r2, r6
   25820:	mov	r1, r4
   25824:	mov	r0, r7
   25828:	bl	10760 <myhtml_token_attr_copy@plt>
   2582c:	ldr	r4, [r4]
   25830:	cmp	r4, #0
   25834:	bne	25818 <myhtml_token_node_attr_copy@@Base+0x1c>
   25838:	pop	{r4, r5, r6, r7, r8, pc}

0002583c <myhtml_token_node_clone@@Base>:
   2583c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   25840:	subs	r4, r1, #0
   25844:	beq	258fc <myhtml_token_node_clone@@Base+0xc0>
   25848:	mov	r7, r3
   2584c:	mov	r1, r2
   25850:	mov	r6, r0
   25854:	ldr	r8, [r0]
   25858:	bl	10a0c <myhtml_token_node_create@plt>
   2585c:	subs	r5, r0, #0
   25860:	beq	258e8 <myhtml_token_node_clone@@Base+0xac>
   25864:	ldr	r3, [r4]
   25868:	str	r3, [r5]
   2586c:	ldr	r3, [r4, #48]	; 0x30
   25870:	str	r3, [r5, #48]	; 0x30
   25874:	mov	r3, #0
   25878:	str	r3, [r5, #40]	; 0x28
   2587c:	str	r3, [r5, #44]	; 0x2c
   25880:	ldr	r3, [r4, #24]
   25884:	str	r3, [r5, #24]
   25888:	ldr	r3, [r4, #28]
   2588c:	str	r3, [r5, #28]
   25890:	ldr	r3, [r4, #32]
   25894:	str	r3, [r5, #32]
   25898:	ldr	r3, [r4, #36]	; 0x24
   2589c:	str	r3, [r5, #36]	; 0x24
   258a0:	ldr	r3, [r4, #12]
   258a4:	cmp	r3, #0
   258a8:	beq	258f0 <myhtml_token_node_clone@@Base+0xb4>
   258ac:	add	r9, r5, #4
   258b0:	add	r3, r3, #1
   258b4:	mov	r2, r9
   258b8:	ldr	r1, [r8, #52]	; 0x34
   258bc:	ldr	r0, [r8, #4]
   258c0:	bl	10610 <mycore_string_init@plt>
   258c4:	ldr	r2, [r4, #12]
   258c8:	ldr	r1, [r4, #4]
   258cc:	mov	r0, r9
   258d0:	bl	108d4 <mycore_string_append@plt>
   258d4:	mov	r3, r7
   258d8:	mov	r2, r5
   258dc:	mov	r1, r4
   258e0:	mov	r0, r6
   258e4:	bl	10580 <myhtml_token_node_attr_copy@plt>
   258e8:	mov	r0, r5
   258ec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   258f0:	add	r0, r5, #4
   258f4:	bl	11090 <mycore_string_clean_all@plt>
   258f8:	b	258d4 <myhtml_token_node_clone@@Base+0x98>
   258fc:	mov	r5, r4
   25900:	b	258e8 <myhtml_token_node_clone@@Base+0xac>

00025904 <myhtml_token_attr_match@@Base>:
   25904:	push	{r4, r5, r6, r7, r8, lr}
   25908:	mov	r7, r2
   2590c:	mov	r5, r3
   25910:	ldr	r6, [sp, #28]
   25914:	ldr	r4, [r1, #40]	; 0x28
   25918:	cmp	r4, #0
   2591c:	bne	25934 <myhtml_token_attr_match@@Base+0x30>
   25920:	mov	r0, r4
   25924:	pop	{r4, r5, r6, r7, r8, pc}
   25928:	ldr	r4, [r4]
   2592c:	cmp	r4, #0
   25930:	beq	25920 <myhtml_token_attr_match@@Base+0x1c>
   25934:	ldr	r3, [r4, #16]
   25938:	cmp	r3, r5
   2593c:	bne	25928 <myhtml_token_attr_match@@Base+0x24>
   25940:	ldr	r3, [r4, #36]	; 0x24
   25944:	cmp	r3, r6
   25948:	bne	25928 <myhtml_token_attr_match@@Base+0x24>
   2594c:	mov	r1, r7
   25950:	ldr	r0, [r4, #8]
   25954:	bl	fbf0 <mycore_strcmp@plt>
   25958:	cmp	r0, #0
   2595c:	bne	25928 <myhtml_token_attr_match@@Base+0x24>
   25960:	ldr	r1, [sp, #24]
   25964:	ldr	r0, [r4, #28]
   25968:	bl	fbf0 <mycore_strcmp@plt>
   2596c:	cmp	r0, #0
   25970:	movne	r4, #0
   25974:	b	25920 <myhtml_token_attr_match@@Base+0x1c>

00025978 <myhtml_token_attr_match_case@@Base>:
   25978:	push	{r4, r5, r6, r7, r8, lr}
   2597c:	mov	r7, r2
   25980:	mov	r5, r3
   25984:	ldr	r6, [sp, #28]
   25988:	ldr	r4, [r1, #40]	; 0x28
   2598c:	cmp	r4, #0
   25990:	bne	259a8 <myhtml_token_attr_match_case@@Base+0x30>
   25994:	mov	r0, r4
   25998:	pop	{r4, r5, r6, r7, r8, pc}
   2599c:	ldr	r4, [r4]
   259a0:	cmp	r4, #0
   259a4:	beq	25994 <myhtml_token_attr_match_case@@Base+0x1c>
   259a8:	ldr	r3, [r4, #16]
   259ac:	cmp	r3, r5
   259b0:	bne	2599c <myhtml_token_attr_match_case@@Base+0x24>
   259b4:	ldr	r3, [r4, #36]	; 0x24
   259b8:	cmp	r3, r6
   259bc:	bne	2599c <myhtml_token_attr_match_case@@Base+0x24>
   259c0:	mov	r1, r7
   259c4:	ldr	r0, [r4, #8]
   259c8:	bl	fbf0 <mycore_strcmp@plt>
   259cc:	cmp	r0, #0
   259d0:	bne	2599c <myhtml_token_attr_match_case@@Base+0x24>
   259d4:	ldr	r1, [sp, #24]
   259d8:	ldr	r0, [r4, #28]
   259dc:	bl	1052c <mycore_strcasecmp@plt>
   259e0:	cmp	r0, #0
   259e4:	movne	r4, #0
   259e8:	b	25994 <myhtml_token_attr_match_case@@Base+0x1c>

000259ec <_myhtml_token_create_copy_srt@@Base>:
   259ec:	push	{r4, r5, r6, lr}
   259f0:	mov	r5, r1
   259f4:	mov	r4, r2
   259f8:	mov	r6, r3
   259fc:	ldr	r3, [r0]
   25a00:	add	r2, r2, #2
   25a04:	ldr	r1, [r3, #52]	; 0x34
   25a08:	ldr	r0, [r3, #4]
   25a0c:	bl	10910 <mchar_async_malloc@plt>
   25a10:	str	r0, [r6]
   25a14:	mov	r2, r4
   25a18:	mov	r1, r5
   25a1c:	bl	102e0 <mycore_string_raw_copy@plt>
   25a20:	pop	{r4, r5, r6, pc}

00025a24 <myhtml_token_strict_doctype_by_token@@Base>:
   25a24:	push	{r4, r5, r6, lr}
   25a28:	mov	r6, r0
   25a2c:	mov	r4, r2
   25a30:	ldr	r5, [r1, #40]	; 0x28
   25a34:	cmp	r5, #0
   25a38:	beq	25a48 <myhtml_token_strict_doctype_by_token@@Base+0x24>
   25a3c:	ldr	r2, [r5, #16]
   25a40:	cmp	r2, #0
   25a44:	bne	25a9c <myhtml_token_strict_doctype_by_token@@Base+0x78>
   25a48:	mov	r3, r4
   25a4c:	mov	r2, #0
   25a50:	strb	r2, [r3], #4
   25a54:	mov	r2, #1
   25a58:	ldr	r1, [pc, #536]	; 25c78 <myhtml_token_strict_doctype_by_token@@Base+0x254>
   25a5c:	add	r1, pc, r1
   25a60:	mov	r0, r6
   25a64:	bl	fe6c <_myhtml_token_create_copy_srt@plt>
   25a68:	ldr	r0, [r4, #8]
   25a6c:	cmp	r0, #0
   25a70:	beq	25a78 <myhtml_token_strict_doctype_by_token@@Base+0x54>
   25a74:	bl	10dcc <mycore_free@plt>
   25a78:	mov	r3, #0
   25a7c:	str	r3, [r4, #8]
   25a80:	ldr	r0, [r4, #12]
   25a84:	cmp	r0, r3
   25a88:	beq	25a90 <myhtml_token_strict_doctype_by_token@@Base+0x6c>
   25a8c:	bl	10dcc <mycore_free@plt>
   25a90:	mov	r3, #0
   25a94:	str	r3, [r4, #12]
   25a98:	pop	{r4, r5, r6, pc}
   25a9c:	add	r3, r4, #4
   25aa0:	ldr	r1, [r5, #8]
   25aa4:	bl	fe6c <_myhtml_token_create_copy_srt@plt>
   25aa8:	ldr	r1, [r4, #4]
   25aac:	ldr	r0, [pc, #456]	; 25c7c <myhtml_token_strict_doctype_by_token@@Base+0x258>
   25ab0:	add	r0, pc, r0
   25ab4:	bl	fbf0 <mycore_strcmp@plt>
   25ab8:	cmp	r0, #0
   25abc:	movne	r3, #0
   25ac0:	moveq	r3, #1
   25ac4:	strb	r3, [r4]
   25ac8:	ldr	r5, [r5]
   25acc:	cmp	r5, #0
   25ad0:	popeq	{r4, r5, r6, pc}
   25ad4:	ldr	r3, [r5, #36]	; 0x24
   25ad8:	cmp	r3, #0
   25adc:	popeq	{r4, r5, r6, pc}
   25ae0:	ldr	r1, [pc, #408]	; 25c80 <myhtml_token_strict_doctype_by_token@@Base+0x25c>
   25ae4:	add	r1, pc, r1
   25ae8:	ldr	r0, [r5, #28]
   25aec:	bl	1052c <mycore_strcasecmp@plt>
   25af0:	cmp	r0, #0
   25af4:	bne	25bac <myhtml_token_strict_doctype_by_token@@Base+0x188>
   25af8:	ldr	r5, [r5]
   25afc:	cmp	r5, #0
   25b00:	beq	25b10 <myhtml_token_strict_doctype_by_token@@Base+0xec>
   25b04:	ldr	r2, [r5, #36]	; 0x24
   25b08:	cmp	r2, #0
   25b0c:	bne	25b44 <myhtml_token_strict_doctype_by_token@@Base+0x120>
   25b10:	ldr	r0, [r4, #8]
   25b14:	cmp	r0, #0
   25b18:	beq	25b20 <myhtml_token_strict_doctype_by_token@@Base+0xfc>
   25b1c:	bl	10dcc <mycore_free@plt>
   25b20:	mov	r3, #0
   25b24:	str	r3, [r4, #8]
   25b28:	ldr	r0, [r4, #12]
   25b2c:	cmp	r0, r3
   25b30:	beq	25b38 <myhtml_token_strict_doctype_by_token@@Base+0x114>
   25b34:	bl	10dcc <mycore_free@plt>
   25b38:	mov	r3, #0
   25b3c:	str	r3, [r4, #12]
   25b40:	pop	{r4, r5, r6, pc}
   25b44:	add	r3, r4, #8
   25b48:	ldr	r1, [r5, #28]
   25b4c:	mov	r0, r6
   25b50:	bl	fe6c <_myhtml_token_create_copy_srt@plt>
   25b54:	ldr	r1, [r5]
   25b58:	cmp	r1, #0
   25b5c:	beq	25b6c <myhtml_token_strict_doctype_by_token@@Base+0x148>
   25b60:	ldr	r2, [r1, #36]	; 0x24
   25b64:	cmp	r2, #0
   25b68:	bne	25b98 <myhtml_token_strict_doctype_by_token@@Base+0x174>
   25b6c:	ldr	r0, [r4, #12]
   25b70:	cmp	r0, #0
   25b74:	beq	25b7c <myhtml_token_strict_doctype_by_token@@Base+0x158>
   25b78:	bl	10dcc <mycore_free@plt>
   25b7c:	add	r3, r4, #12
   25b80:	mov	r2, #1
   25b84:	ldr	r1, [pc, #248]	; 25c84 <myhtml_token_strict_doctype_by_token@@Base+0x260>
   25b88:	add	r1, pc, r1
   25b8c:	mov	r0, r6
   25b90:	bl	fe6c <_myhtml_token_create_copy_srt@plt>
   25b94:	pop	{r4, r5, r6, pc}
   25b98:	add	r3, r4, #12
   25b9c:	ldr	r1, [r1, #28]
   25ba0:	mov	r0, r6
   25ba4:	bl	fe6c <_myhtml_token_create_copy_srt@plt>
   25ba8:	pop	{r4, r5, r6, pc}
   25bac:	ldr	r2, [r5, #36]	; 0x24
   25bb0:	ldr	r1, [pc, #208]	; 25c88 <myhtml_token_strict_doctype_by_token@@Base+0x264>
   25bb4:	add	r1, pc, r1
   25bb8:	ldr	r0, [r5, #28]
   25bbc:	bl	102a4 <mycore_strncasecmp@plt>
   25bc0:	cmp	r0, #0
   25bc4:	bne	25c44 <myhtml_token_strict_doctype_by_token@@Base+0x220>
   25bc8:	ldr	r5, [r5]
   25bcc:	cmp	r5, #0
   25bd0:	beq	25be0 <myhtml_token_strict_doctype_by_token@@Base+0x1bc>
   25bd4:	ldr	r3, [r5, #36]	; 0x24
   25bd8:	cmp	r3, #0
   25bdc:	bne	25c14 <myhtml_token_strict_doctype_by_token@@Base+0x1f0>
   25be0:	ldr	r0, [r4, #8]
   25be4:	cmp	r0, #0
   25be8:	beq	25bf0 <myhtml_token_strict_doctype_by_token@@Base+0x1cc>
   25bec:	bl	10dcc <mycore_free@plt>
   25bf0:	mov	r3, #0
   25bf4:	str	r3, [r4, #8]
   25bf8:	ldr	r0, [r4, #12]
   25bfc:	cmp	r0, r3
   25c00:	beq	25c08 <myhtml_token_strict_doctype_by_token@@Base+0x1e4>
   25c04:	bl	10dcc <mycore_free@plt>
   25c08:	mov	r3, #0
   25c0c:	str	r3, [r4, #12]
   25c10:	pop	{r4, r5, r6, pc}
   25c14:	add	r3, r4, #8
   25c18:	mov	r2, #1
   25c1c:	ldr	r1, [pc, #104]	; 25c8c <myhtml_token_strict_doctype_by_token@@Base+0x268>
   25c20:	add	r1, pc, r1
   25c24:	mov	r0, r6
   25c28:	bl	fe6c <_myhtml_token_create_copy_srt@plt>
   25c2c:	add	r3, r4, #12
   25c30:	ldr	r2, [r5, #36]	; 0x24
   25c34:	ldr	r1, [r5, #28]
   25c38:	mov	r0, r6
   25c3c:	bl	fe6c <_myhtml_token_create_copy_srt@plt>
   25c40:	pop	{r4, r5, r6, pc}
   25c44:	ldr	r0, [r4, #8]
   25c48:	cmp	r0, #0
   25c4c:	beq	25c54 <myhtml_token_strict_doctype_by_token@@Base+0x230>
   25c50:	bl	10dcc <mycore_free@plt>
   25c54:	mov	r3, #0
   25c58:	str	r3, [r4, #8]
   25c5c:	ldr	r0, [r4, #12]
   25c60:	cmp	r0, r3
   25c64:	beq	25c6c <myhtml_token_strict_doctype_by_token@@Base+0x248>
   25c68:	bl	10dcc <mycore_free@plt>
   25c6c:	mov	r3, #0
   25c70:	str	r3, [r4, #12]
   25c74:	pop	{r4, r5, r6, pc}
   25c78:	andeq	r8, sp, r4, lsr #10
   25c7c:	andeq	r7, sp, r0, lsr #18
   25c80:	andeq	r7, sp, r0, lsr fp
   25c84:	strdeq	r8, [sp], -r8	; <UNPREDICTABLE>
   25c88:	andeq	r7, sp, r8, asr sl
   25c8c:	andeq	r8, sp, r0, ror #6

00025c90 <myhtml_token_doctype_check_html_4_0@@Base>:
   25c90:	push	{r4, lr}
   25c94:	mov	r4, r0
   25c98:	ldr	r1, [pc, #68]	; 25ce4 <myhtml_token_doctype_check_html_4_0@@Base+0x54>
   25c9c:	add	r1, pc, r1
   25ca0:	ldr	r0, [r0, #8]
   25ca4:	bl	fbf0 <mycore_strcmp@plt>
   25ca8:	cmp	r0, #0
   25cac:	beq	25cd4 <myhtml_token_doctype_check_html_4_0@@Base+0x44>
   25cb0:	ldr	r0, [r4, #12]
   25cb4:	cmp	r0, #0
   25cb8:	beq	25cdc <myhtml_token_doctype_check_html_4_0@@Base+0x4c>
   25cbc:	ldr	r1, [pc, #36]	; 25ce8 <myhtml_token_doctype_check_html_4_0@@Base+0x58>
   25cc0:	add	r1, pc, r1
   25cc4:	bl	fbf0 <mycore_strcmp@plt>
   25cc8:	adds	r0, r0, #0
   25ccc:	movne	r0, #1
   25cd0:	pop	{r4, pc}
   25cd4:	mov	r0, #0
   25cd8:	pop	{r4, pc}
   25cdc:	mov	r0, #1
   25ce0:	pop	{r4, pc}
   25ce4:	andeq	r8, sp, r8, ror #5
   25ce8:	andeq	r8, sp, r0, ror #5

00025cec <myhtml_token_doctype_check_html_4_01@@Base>:
   25cec:	push	{r4, lr}
   25cf0:	mov	r4, r0
   25cf4:	ldr	r1, [pc, #68]	; 25d40 <myhtml_token_doctype_check_html_4_01@@Base+0x54>
   25cf8:	add	r1, pc, r1
   25cfc:	ldr	r0, [r0, #8]
   25d00:	bl	fbf0 <mycore_strcmp@plt>
   25d04:	cmp	r0, #0
   25d08:	beq	25d30 <myhtml_token_doctype_check_html_4_01@@Base+0x44>
   25d0c:	ldr	r0, [r4, #12]
   25d10:	cmp	r0, #0
   25d14:	beq	25d38 <myhtml_token_doctype_check_html_4_01@@Base+0x4c>
   25d18:	ldr	r1, [pc, #36]	; 25d44 <myhtml_token_doctype_check_html_4_01@@Base+0x58>
   25d1c:	add	r1, pc, r1
   25d20:	bl	fbf0 <mycore_strcmp@plt>
   25d24:	adds	r0, r0, #0
   25d28:	movne	r0, #1
   25d2c:	pop	{r4, pc}
   25d30:	mov	r0, #0
   25d34:	pop	{r4, pc}
   25d38:	mov	r0, #1
   25d3c:	pop	{r4, pc}
   25d40:	ldrdeq	r8, [sp], -r4
   25d44:	andeq	r8, sp, ip, asr #5

00025d48 <myhtml_token_doctype_check_xhtml_1_0@@Base>:
   25d48:	ldr	r3, [r0, #12]
   25d4c:	cmp	r3, #0
   25d50:	beq	25d98 <myhtml_token_doctype_check_xhtml_1_0@@Base+0x50>
   25d54:	push	{r4, lr}
   25d58:	mov	r4, r0
   25d5c:	ldr	r1, [pc, #60]	; 25da0 <myhtml_token_doctype_check_xhtml_1_0@@Base+0x58>
   25d60:	add	r1, pc, r1
   25d64:	ldr	r0, [r0, #8]
   25d68:	bl	fbf0 <mycore_strcmp@plt>
   25d6c:	cmp	r0, #0
   25d70:	bne	25d7c <myhtml_token_doctype_check_xhtml_1_0@@Base+0x34>
   25d74:	mov	r0, #0
   25d78:	pop	{r4, pc}
   25d7c:	ldr	r1, [pc, #32]	; 25da4 <myhtml_token_doctype_check_xhtml_1_0@@Base+0x5c>
   25d80:	add	r1, pc, r1
   25d84:	ldr	r0, [r4, #12]
   25d88:	bl	fbf0 <mycore_strcmp@plt>
   25d8c:	adds	r0, r0, #0
   25d90:	movne	r0, #1
   25d94:	pop	{r4, pc}
   25d98:	mov	r0, #1
   25d9c:	bx	lr
   25da0:			; <UNDEFINED> instruction: 0x000d82b0
   25da4:			; <UNDEFINED> instruction: 0x000d82b4

00025da8 <myhtml_token_doctype_check_xhtml_1_1@@Base>:
   25da8:	ldr	r3, [r0, #12]
   25dac:	cmp	r3, #0
   25db0:	beq	25df8 <myhtml_token_doctype_check_xhtml_1_1@@Base+0x50>
   25db4:	push	{r4, lr}
   25db8:	mov	r4, r0
   25dbc:	ldr	r1, [pc, #60]	; 25e00 <myhtml_token_doctype_check_xhtml_1_1@@Base+0x58>
   25dc0:	add	r1, pc, r1
   25dc4:	ldr	r0, [r0, #8]
   25dc8:	bl	fbf0 <mycore_strcmp@plt>
   25dcc:	cmp	r0, #0
   25dd0:	bne	25ddc <myhtml_token_doctype_check_xhtml_1_1@@Base+0x34>
   25dd4:	mov	r0, #0
   25dd8:	pop	{r4, pc}
   25ddc:	ldr	r1, [pc, #32]	; 25e04 <myhtml_token_doctype_check_xhtml_1_1@@Base+0x5c>
   25de0:	add	r1, pc, r1
   25de4:	ldr	r0, [r4, #12]
   25de8:	bl	fbf0 <mycore_strcmp@plt>
   25dec:	adds	r0, r0, #0
   25df0:	movne	r0, #1
   25df4:	pop	{r4, pc}
   25df8:	mov	r0, #1
   25dfc:	bx	lr
   25e00:	andeq	r8, sp, r8, lsr #5
   25e04:	andeq	r8, sp, r4, lsr #5

00025e08 <myhtml_token_release_and_check_doctype_attributes@@Base>:
   25e08:	push	{r4, r5, r6, lr}
   25e0c:	subs	r4, r2, #0
   25e10:	moveq	r5, #0
   25e14:	beq	25e48 <myhtml_token_release_and_check_doctype_attributes@@Base+0x40>
   25e18:	mov	r2, r4
   25e1c:	bl	1049c <myhtml_token_strict_doctype_by_token@plt>
   25e20:	ldr	r3, [r4, #4]
   25e24:	cmp	r3, #0
   25e28:	beq	25e98 <myhtml_token_release_and_check_doctype_attributes@@Base+0x90>
   25e2c:	ldrb	r5, [r4]
   25e30:	cmp	r5, #0
   25e34:	bne	25ea8 <myhtml_token_release_and_check_doctype_attributes@@Base+0xa0>
   25e38:	ldr	r3, [r4, #8]
   25e3c:	cmp	r3, #0
   25e40:	movne	r5, #1
   25e44:	beq	25e50 <myhtml_token_release_and_check_doctype_attributes@@Base+0x48>
   25e48:	mov	r0, r5
   25e4c:	pop	{r4, r5, r6, pc}
   25e50:	ldr	r0, [r4, #12]
   25e54:	cmp	r0, #0
   25e58:	moveq	r5, #1
   25e5c:	beq	25e48 <myhtml_token_release_and_check_doctype_attributes@@Base+0x40>
   25e60:	ldr	r1, [pc, #152]	; 25f00 <myhtml_token_release_and_check_doctype_attributes@@Base+0xf8>
   25e64:	add	r1, pc, r1
   25e68:	bl	fbf0 <mycore_strcmp@plt>
   25e6c:	cmp	r0, #0
   25e70:	moveq	r5, #1
   25e74:	beq	25e48 <myhtml_token_release_and_check_doctype_attributes@@Base+0x40>
   25e78:	ldr	r3, [r4, #8]
   25e7c:	cmp	r3, #0
   25e80:	beq	25e48 <myhtml_token_release_and_check_doctype_attributes@@Base+0x40>
   25e84:	ldrb	r3, [r4]
   25e88:	cmp	r3, #0
   25e8c:	moveq	r5, #1
   25e90:	beq	25e48 <myhtml_token_release_and_check_doctype_attributes@@Base+0x40>
   25e94:	b	25eb4 <myhtml_token_release_and_check_doctype_attributes@@Base+0xac>
   25e98:	mov	r5, #0
   25e9c:	b	25e48 <myhtml_token_release_and_check_doctype_attributes@@Base+0x40>
   25ea0:	mov	r5, #0
   25ea4:	b	25e48 <myhtml_token_release_and_check_doctype_attributes@@Base+0x40>
   25ea8:	ldr	r3, [r4, #8]
   25eac:	cmp	r3, #0
   25eb0:	beq	25ea0 <myhtml_token_release_and_check_doctype_attributes@@Base+0x98>
   25eb4:	mov	r0, r4
   25eb8:	bl	10520 <myhtml_token_doctype_check_html_4_0@plt>
   25ebc:	subs	r5, r0, #0
   25ec0:	moveq	r5, #1
   25ec4:	beq	25e48 <myhtml_token_release_and_check_doctype_attributes@@Base+0x40>
   25ec8:	mov	r0, r4
   25ecc:	bl	103ac <myhtml_token_doctype_check_html_4_01@plt>
   25ed0:	subs	r6, r0, #0
   25ed4:	beq	25e48 <myhtml_token_release_and_check_doctype_attributes@@Base+0x40>
   25ed8:	mov	r0, r4
   25edc:	bl	10664 <myhtml_token_doctype_check_xhtml_1_0@plt>
   25ee0:	cmp	r0, #0
   25ee4:	moveq	r5, r6
   25ee8:	beq	25e48 <myhtml_token_release_and_check_doctype_attributes@@Base+0x40>
   25eec:	mov	r0, r4
   25ef0:	bl	fc38 <myhtml_token_doctype_check_xhtml_1_1@plt>
   25ef4:	eor	r0, r0, #1
   25ef8:	uxtb	r5, r0
   25efc:	b	25e48 <myhtml_token_release_and_check_doctype_attributes@@Base+0x40>
   25f00:	andeq	r8, sp, r0, asr r2

00025f04 <myhtml_token_attr_compare@@Base>:
   25f04:	cmp	r1, #0
   25f08:	cmpne	r0, #0
   25f0c:	beq	25fb8 <myhtml_token_attr_compare@@Base+0xb4>
   25f10:	push	{r4, r5, r6, lr}
   25f14:	ldr	r4, [r0, #40]	; 0x28
   25f18:	ldr	r5, [r1, #40]	; 0x28
   25f1c:	cmp	r4, #0
   25f20:	cmpne	r5, #0
   25f24:	beq	25fa4 <myhtml_token_attr_compare@@Base+0xa0>
   25f28:	ldr	r2, [r4, #16]
   25f2c:	ldr	r3, [r5, #16]
   25f30:	cmp	r2, r3
   25f34:	bne	25fa4 <myhtml_token_attr_compare@@Base+0xa0>
   25f38:	ldr	r2, [r4, #36]	; 0x24
   25f3c:	ldr	r3, [r5, #36]	; 0x24
   25f40:	cmp	r2, r3
   25f44:	bne	25fa4 <myhtml_token_attr_compare@@Base+0xa0>
   25f48:	ldr	r1, [r5, #8]
   25f4c:	ldr	r0, [r4, #8]
   25f50:	bl	fbf0 <mycore_strcmp@plt>
   25f54:	cmp	r0, #0
   25f58:	bne	25fa4 <myhtml_token_attr_compare@@Base+0xa0>
   25f5c:	ldr	r1, [r5, #28]
   25f60:	ldr	r0, [r4, #28]
   25f64:	bl	1052c <mycore_strcasecmp@plt>
   25f68:	cmp	r0, #0
   25f6c:	bne	25fa4 <myhtml_token_attr_compare@@Base+0xa0>
   25f70:	ldr	r4, [r4]
   25f74:	ldr	r5, [r5]
   25f78:	cmp	r4, #0
   25f7c:	cmpne	r5, #0
   25f80:	beq	25fa4 <myhtml_token_attr_compare@@Base+0xa0>
   25f84:	ldr	r2, [r4, #16]
   25f88:	ldr	r3, [r5, #16]
   25f8c:	cmp	r2, r3
   25f90:	bne	25fa4 <myhtml_token_attr_compare@@Base+0xa0>
   25f94:	ldr	r2, [r4, #36]	; 0x24
   25f98:	ldr	r3, [r5, #36]	; 0x24
   25f9c:	cmp	r2, r3
   25fa0:	beq	25f48 <myhtml_token_attr_compare@@Base+0x44>
   25fa4:	cmp	r4, #0
   25fa8:	cmpeq	r5, #0
   25fac:	moveq	r0, #1
   25fb0:	movne	r0, #0
   25fb4:	pop	{r4, r5, r6, pc}
   25fb8:	mov	r0, #0
   25fbc:	bx	lr

00025fc0 <myhtml_token_attr_by_name@@Base>:
   25fc0:	push	{r4, r5, r6, lr}
   25fc4:	mov	r6, r1
   25fc8:	mov	r5, r2
   25fcc:	ldr	r4, [r0, #40]	; 0x28
   25fd0:	cmp	r4, #0
   25fd4:	bne	25fe8 <myhtml_token_attr_by_name@@Base+0x28>
   25fd8:	b	26008 <myhtml_token_attr_by_name@@Base+0x48>
   25fdc:	ldr	r4, [r4]
   25fe0:	cmp	r4, #0
   25fe4:	beq	26008 <myhtml_token_attr_by_name@@Base+0x48>
   25fe8:	ldr	r3, [r4, #16]
   25fec:	cmp	r3, r5
   25ff0:	bne	25fdc <myhtml_token_attr_by_name@@Base+0x1c>
   25ff4:	mov	r1, r6
   25ff8:	ldr	r0, [r4, #8]
   25ffc:	bl	fbf0 <mycore_strcmp@plt>
   26000:	cmp	r0, #0
   26004:	bne	25fdc <myhtml_token_attr_by_name@@Base+0x1c>
   26008:	mov	r0, r4
   2600c:	pop	{r4, r5, r6, pc}

00026010 <myhtml_token_node_attr_copy_with_check@@Base>:
   26010:	push	{r4, r5, r6, r7, r8, lr}
   26014:	mov	r7, r0
   26018:	mov	r5, r2
   2601c:	mov	r6, r3
   26020:	ldr	r4, [r1, #40]	; 0x28
   26024:	cmp	r4, #0
   26028:	bne	2603c <myhtml_token_node_attr_copy_with_check@@Base+0x2c>
   2602c:	pop	{r4, r5, r6, r7, r8, pc}
   26030:	ldr	r4, [r4]
   26034:	cmp	r4, #0
   26038:	beq	26074 <myhtml_token_node_attr_copy_with_check@@Base+0x64>
   2603c:	ldr	r2, [r4, #16]
   26040:	cmp	r2, #0
   26044:	beq	26030 <myhtml_token_node_attr_copy_with_check@@Base+0x20>
   26048:	ldr	r1, [r4, #8]
   2604c:	mov	r0, r5
   26050:	bl	10eb0 <myhtml_token_attr_by_name@plt>
   26054:	cmp	r0, #0
   26058:	bne	26030 <myhtml_token_node_attr_copy_with_check@@Base+0x20>
   2605c:	mov	r3, r6
   26060:	mov	r2, r5
   26064:	mov	r1, r4
   26068:	mov	r0, r7
   2606c:	bl	10760 <myhtml_token_attr_copy@plt>
   26070:	b	26030 <myhtml_token_node_attr_copy_with_check@@Base+0x20>
   26074:	pop	{r4, r5, r6, r7, r8, pc}

00026078 <myhtml_token_adjust_mathml_attributes@@Base>:
   26078:	push	{r4, lr}
   2607c:	mov	r2, #13
   26080:	ldr	r1, [pc, #52]	; 260bc <myhtml_token_adjust_mathml_attributes@@Base+0x44>
   26084:	add	r1, pc, r1
   26088:	bl	10eb0 <myhtml_token_attr_by_name@plt>
   2608c:	cmp	r0, #0
   26090:	popeq	{r4, pc}
   26094:	ldr	ip, [r0, #8]
   26098:	ldr	r3, [pc, #32]	; 260c0 <myhtml_token_adjust_mathml_attributes@@Base+0x48>
   2609c:	add	r3, pc, r3
   260a0:	ldm	r3!, {r0, r1, r2}
   260a4:	str	r0, [ip]
   260a8:	str	r1, [ip, #4]
   260ac:	str	r2, [ip, #8]
   260b0:	ldrb	r3, [r3]
   260b4:	strb	r3, [ip, #12]
   260b8:	pop	{r4, pc}
   260bc:	andeq	r8, sp, r4, asr #32
   260c0:	andeq	r8, sp, ip, lsr r0

000260c4 <myhtml_token_adjust_svg_attributes@@Base>:
   260c4:	push	{r4, r5, r6, r7, r8, lr}
   260c8:	mov	r7, r0
   260cc:	ldr	r6, [pc, #84]	; 26128 <myhtml_token_adjust_svg_attributes@@Base+0x64>
   260d0:	add	r6, pc, r6
   260d4:	mov	r4, r6
   260d8:	add	r6, r6, #928	; 0x3a0
   260dc:	b	260ec <myhtml_token_adjust_svg_attributes@@Base+0x28>
   260e0:	add	r4, r4, #16
   260e4:	cmp	r4, r6
   260e8:	beq	26124 <myhtml_token_adjust_svg_attributes@@Base+0x60>
   260ec:	ldr	r2, [r4, #4]
   260f0:	ldr	r1, [r4]
   260f4:	mov	r0, r7
   260f8:	bl	10eb0 <myhtml_token_attr_by_name@plt>
   260fc:	cmp	r0, #0
   26100:	beq	260e0 <myhtml_token_adjust_svg_attributes@@Base+0x1c>
   26104:	add	r5, r0, #8
   26108:	mov	r0, r5
   2610c:	bl	10d18 <mycore_string_clean@plt>
   26110:	ldr	r2, [r4, #12]
   26114:	ldr	r1, [r4, #8]
   26118:	mov	r0, r5
   2611c:	bl	108d4 <mycore_string_append@plt>
   26120:	b	260e0 <myhtml_token_adjust_svg_attributes@@Base+0x1c>
   26124:	pop	{r4, r5, r6, r7, r8, pc}
   26128:	andeq	r0, pc, r0, lsl r9	; <UNPREDICTABLE>

0002612c <myhtml_token_adjust_foreign_attributes@@Base>:
   2612c:	push	{r4, r5, r6, r7, r8, lr}
   26130:	mov	r8, r0
   26134:	ldr	r4, [pc, #92]	; 26198 <myhtml_token_adjust_foreign_attributes@@Base+0x6c>
   26138:	add	r4, pc, r4
   2613c:	add	r4, r4, #928	; 0x3a0
   26140:	add	r7, r4, #220	; 0xdc
   26144:	b	26154 <myhtml_token_adjust_foreign_attributes@@Base+0x28>
   26148:	add	r4, r4, #20
   2614c:	cmp	r4, r7
   26150:	beq	26194 <myhtml_token_adjust_foreign_attributes@@Base+0x68>
   26154:	ldr	r2, [r4, #4]
   26158:	ldr	r1, [r4]
   2615c:	mov	r0, r8
   26160:	bl	10eb0 <myhtml_token_attr_by_name@plt>
   26164:	subs	r5, r0, #0
   26168:	beq	26148 <myhtml_token_adjust_foreign_attributes@@Base+0x1c>
   2616c:	add	r6, r5, #8
   26170:	mov	r0, r6
   26174:	bl	10d18 <mycore_string_clean@plt>
   26178:	ldr	r2, [r4, #12]
   2617c:	ldr	r1, [r4, #8]
   26180:	mov	r0, r6
   26184:	bl	108d4 <mycore_string_append@plt>
   26188:	ldr	r3, [r4, #16]
   2618c:	str	r3, [r5, #64]	; 0x40
   26190:	b	26148 <myhtml_token_adjust_foreign_attributes@@Base+0x1c>
   26194:	pop	{r4, r5, r6, r7, r8, pc}
   26198:	andeq	r0, pc, r8, lsr #17

0002619c <myhtml_token_delete@@Base>:
   2619c:	push	{r4, r5, r6, lr}
   261a0:	mov	r5, r0
   261a4:	mov	r4, r1
   261a8:	ldr	r2, [r1, #4]
   261ac:	cmp	r2, #0
   261b0:	beq	261c8 <myhtml_token_delete@@Base+0x2c>
   261b4:	ldr	r0, [r1, #16]
   261b8:	cmp	r0, #0
   261bc:	beq	261c8 <myhtml_token_delete@@Base+0x2c>
   261c0:	ldr	r1, [r1, #20]
   261c4:	bl	10718 <mchar_async_free@plt>
   261c8:	mov	r1, r4
   261cc:	ldr	r0, [r5, #4]
   261d0:	bl	1004c <mcobject_async_free@plt>
   261d4:	pop	{r4, r5, r6, pc}

000261d8 <myhtml_token_attr_delete_all@@Base>:
   261d8:	push	{r4, lr}
   261dc:	ldr	r4, [r1, #40]	; 0x28
   261e0:	cmp	r4, #0
   261e4:	bne	261f8 <myhtml_token_attr_delete_all@@Base+0x20>
   261e8:	pop	{r4, pc}
   261ec:	ldr	r4, [r4]
   261f0:	cmp	r4, #0
   261f4:	beq	2623c <myhtml_token_attr_delete_all@@Base+0x64>
   261f8:	ldr	r2, [r4, #8]
   261fc:	cmp	r2, #0
   26200:	beq	26218 <myhtml_token_attr_delete_all@@Base+0x40>
   26204:	ldr	r0, [r4, #20]
   26208:	cmp	r0, #0
   2620c:	beq	26218 <myhtml_token_attr_delete_all@@Base+0x40>
   26210:	ldr	r1, [r4, #24]
   26214:	bl	10718 <mchar_async_free@plt>
   26218:	ldr	r2, [r4, #28]
   2621c:	cmp	r2, #0
   26220:	beq	261ec <myhtml_token_attr_delete_all@@Base+0x14>
   26224:	ldr	r0, [r4, #40]	; 0x28
   26228:	cmp	r0, #0
   2622c:	beq	261ec <myhtml_token_attr_delete_all@@Base+0x14>
   26230:	ldr	r1, [r4, #44]	; 0x2c
   26234:	bl	10718 <mchar_async_free@plt>
   26238:	b	261ec <myhtml_token_attr_delete_all@@Base+0x14>
   2623c:	pop	{r4, pc}

00026240 <myhtml_token_attr_remove@@Base>:
   26240:	cmp	r1, #0
   26244:	beq	26284 <myhtml_token_attr_remove@@Base+0x44>
   26248:	ldr	r3, [r1, #4]
   2624c:	cmp	r3, #0
   26250:	ldrne	r2, [r1]
   26254:	strne	r2, [r3]
   26258:	ldreq	r3, [r1]
   2625c:	streq	r3, [r0, #40]	; 0x28
   26260:	ldr	r3, [r1]
   26264:	cmp	r3, #0
   26268:	ldrne	r2, [r1, #4]
   2626c:	strne	r2, [r3, #4]
   26270:	ldreq	r3, [r1, #4]
   26274:	streq	r3, [r0, #44]	; 0x2c
   26278:	mov	r3, #0
   2627c:	str	r3, [r1]
   26280:	str	r3, [r1, #4]
   26284:	mov	r0, r1
   26288:	bx	lr

0002628c <myhtml_token_attr_remove_by_name@@Base>:
   2628c:	push	{r4, lr}
   26290:	mov	r4, r0
   26294:	bl	10eb0 <myhtml_token_attr_by_name@plt>
   26298:	mov	r1, r0
   2629c:	mov	r0, r4
   262a0:	bl	10574 <myhtml_token_attr_remove@plt>
   262a4:	pop	{r4, pc}

000262a8 <myhtml_token_merged_two_token_string@@Base>:
   262a8:	push	{r4, r5, r6, r7, r8, r9, lr}
   262ac:	sub	sp, sp, #28
   262b0:	mov	r6, r0
   262b4:	mov	r4, r1
   262b8:	mov	r5, r2
   262bc:	mov	r7, r3
   262c0:	ldr	r0, [r0, #8]
   262c4:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   262c8:	mov	r1, r5
   262cc:	ldr	r0, [r6, #8]
   262d0:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   262d4:	add	r9, r4, #4
   262d8:	add	r8, r5, #4
   262dc:	mov	r3, #0
   262e0:	str	r3, [r4, #24]
   262e4:	str	r3, [r4, #28]
   262e8:	ldr	r1, [r6, #52]	; 0x34
   262ec:	ldr	r3, [r4, #20]
   262f0:	cmp	r3, r1
   262f4:	beq	26368 <myhtml_token_merged_two_token_string@@Base+0xc0>
   262f8:	ldr	r3, [r5, #20]
   262fc:	cmp	r1, r3
   26300:	beq	26388 <myhtml_token_merged_two_token_string@@Base+0xe0>
   26304:	ldr	r3, [r5, #12]
   26308:	add	r3, r3, #2
   2630c:	ldr	r2, [r4, #12]
   26310:	add	r3, r3, r2
   26314:	add	r2, sp, #4
   26318:	ldr	r0, [r6, #4]
   2631c:	bl	10610 <mycore_string_init@plt>
   26320:	cmp	r7, #0
   26324:	beq	263a8 <myhtml_token_merged_two_token_string@@Base+0x100>
   26328:	mov	r1, r8
   2632c:	add	r5, sp, #4
   26330:	mov	r0, r5
   26334:	bl	1016c <mycore_string_copy@plt>
   26338:	mov	r1, r9
   2633c:	mov	r0, r5
   26340:	bl	1016c <mycore_string_copy@plt>
   26344:	add	ip, r4, #4
   26348:	add	lr, sp, #4
   2634c:	ldm	lr!, {r0, r1, r2, r3}
   26350:	stmia	ip!, {r0, r1, r2, r3}
   26354:	ldr	r3, [lr]
   26358:	str	r3, [ip]
   2635c:	mov	r0, r4
   26360:	add	sp, sp, #28
   26364:	pop	{r4, r5, r6, r7, r8, r9, pc}
   26368:	cmp	r7, #0
   2636c:	movne	r0, r4
   26370:	bne	26360 <myhtml_token_merged_two_token_string@@Base+0xb8>
   26374:	mov	r1, r8
   26378:	mov	r0, r9
   2637c:	bl	1016c <mycore_string_copy@plt>
   26380:	mov	r0, r4
   26384:	b	26360 <myhtml_token_merged_two_token_string@@Base+0xb8>
   26388:	cmp	r7, #0
   2638c:	movne	r1, r9
   26390:	movne	r0, r8
   26394:	moveq	r1, r8
   26398:	moveq	r0, r9
   2639c:	bl	1016c <mycore_string_copy@plt>
   263a0:	mov	r0, r5
   263a4:	b	26360 <myhtml_token_merged_two_token_string@@Base+0xb8>
   263a8:	mov	r1, r9
   263ac:	add	r5, sp, #4
   263b0:	mov	r0, r5
   263b4:	bl	1016c <mycore_string_copy@plt>
   263b8:	mov	r1, r8
   263bc:	mov	r0, r5
   263c0:	bl	1016c <mycore_string_copy@plt>
   263c4:	b	26344 <myhtml_token_merged_two_token_string@@Base+0x9c>

000263c8 <myhtml_token_set_replacement_character_for_null_token@@Base>:
   263c8:	push	{r4, r5, r6, lr}
   263cc:	sub	sp, sp, #24
   263d0:	mov	r5, r0
   263d4:	mov	r6, r1
   263d8:	ldr	r0, [r0, #8]
   263dc:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   263e0:	ldr	r3, [r6, #12]
   263e4:	add	r3, r3, #2
   263e8:	add	r4, sp, #4
   263ec:	mov	r2, r4
   263f0:	ldr	r1, [r5, #52]	; 0x34
   263f4:	ldr	r0, [r5, #4]
   263f8:	bl	10610 <mycore_string_init@plt>
   263fc:	mov	r5, r6
   26400:	ldr	r2, [r6, #12]
   26404:	ldr	r1, [r5, #4]!
   26408:	mov	r0, r4
   2640c:	bl	10388 <mycore_string_append_with_replacement_null_characters@plt>
   26410:	mov	ip, r4
   26414:	ldm	ip!, {r0, r1, r2, r3}
   26418:	stmia	r5!, {r0, r1, r2, r3}
   2641c:	ldr	r3, [ip]
   26420:	str	r3, [r5]
   26424:	add	sp, sp, #24
   26428:	pop	{r4, r5, r6, pc}

0002642c <myhtml_tokenizer_state_rcdata_less_than_sign@@Base>:
   2642c:	ldrb	r2, [r2, r3]
   26430:	cmp	r2, #47	; 0x2f
   26434:	addeq	r3, r3, #1
   26438:	moveq	r2, #11
   2643c:	movne	r2, #2
   26440:	str	r2, [r0, #160]	; 0xa0
   26444:	mov	r0, r3
   26448:	bx	lr

0002644c <myhtml_tokenizer_state_rcdata_end_tag_open@@Base>:
   2644c:	ldrb	r2, [r2, r3]
   26450:	ldr	r1, [pc, #28]	; 26474 <myhtml_tokenizer_state_rcdata_end_tag_open@@Base+0x28>
   26454:	add	r1, pc, r1
   26458:	ldrb	r2, [r1, r2]
   2645c:	cmp	r2, #1
   26460:	moveq	r2, #12
   26464:	movne	r2, #2
   26468:	str	r2, [r0, #160]	; 0xa0
   2646c:	mov	r0, r3
   26470:	bx	lr
   26474:	andeq	r8, sp, r8, asr #7

00026478 <myhtml_tokenizer_state_rawtext_less_than_sign@@Base>:
   26478:	ldrb	r2, [r2, r3]
   2647c:	cmp	r2, #47	; 0x2f
   26480:	addeq	r3, r3, #1
   26484:	moveq	r2, #14
   26488:	movne	r2, #4
   2648c:	str	r2, [r0, #160]	; 0xa0
   26490:	mov	r0, r3
   26494:	bx	lr

00026498 <myhtml_tokenizer_state_rawtext_end_tag_open@@Base>:
   26498:	ldrb	r2, [r2, r3]
   2649c:	ldr	r1, [pc, #28]	; 264c0 <myhtml_tokenizer_state_rawtext_end_tag_open@@Base+0x28>
   264a0:	add	r1, pc, r1
   264a4:	ldrb	r2, [r1, r2]
   264a8:	cmp	r2, #1
   264ac:	moveq	r2, #15
   264b0:	movne	r2, #4
   264b4:	str	r2, [r0, #160]	; 0xa0
   264b8:	mov	r0, r3
   264bc:	bx	lr
   264c0:	andeq	r8, sp, ip, ror r3

000264c4 <myhtml_tokenizer_state_data@@Base>:
   264c4:	push	{r4, r5, lr}
   264c8:	ldr	lr, [sp, #12]
   264cc:	cmp	r3, lr
   264d0:	bcs	26504 <myhtml_tokenizer_state_data@@Base+0x40>
   264d4:	add	ip, r2, r3
   264d8:	ldrb	r2, [r2, r3]
   264dc:	cmp	r2, #60	; 0x3c
   264e0:	ldrne	r5, [pc, #164]	; 2658c <myhtml_tokenizer_state_data@@Base+0xc8>
   264e4:	addne	r5, pc, r5
   264e8:	bne	2655c <myhtml_tokenizer_state_data@@Base+0x98>
   264ec:	ldr	r2, [r0, #192]	; 0xc0
   264f0:	add	r2, r2, r3
   264f4:	str	r2, [r1, #32]
   264f8:	add	r3, r3, #1
   264fc:	mov	r2, #7
   26500:	str	r2, [r0, #160]	; 0xa0
   26504:	mov	r0, r3
   26508:	pop	{r4, r5, pc}
   2650c:	ldr	r4, [r1, #48]	; 0x30
   26510:	tst	r4, #8
   26514:	beq	26544 <myhtml_tokenizer_state_data@@Base+0x80>
   26518:	ldrb	r2, [r5, r2]
   2651c:	cmp	r2, #2
   26520:	beq	26544 <myhtml_tokenizer_state_data@@Base+0x80>
   26524:	ldr	r2, [r1, #48]	; 0x30
   26528:	ldr	r4, [r1, #48]	; 0x30
   2652c:	and	r2, r2, #8
   26530:	eor	r2, r2, r4
   26534:	str	r2, [r1, #48]	; 0x30
   26538:	ldr	r2, [r1, #48]	; 0x30
   2653c:	orr	r2, r2, #512	; 0x200
   26540:	str	r2, [r1, #48]	; 0x30
   26544:	add	r3, r3, #1
   26548:	cmp	lr, r3
   2654c:	beq	26504 <myhtml_tokenizer_state_data@@Base+0x40>
   26550:	ldrb	r2, [ip, #1]!
   26554:	cmp	r2, #60	; 0x3c
   26558:	beq	264ec <myhtml_tokenizer_state_data@@Base+0x28>
   2655c:	cmp	r2, #0
   26560:	bne	2650c <myhtml_tokenizer_state_data@@Base+0x48>
   26564:	ldr	r2, [r1, #48]	; 0x30
   26568:	tst	r2, #2048	; 0x800
   2656c:	ldreq	r2, [r1, #48]	; 0x30
   26570:	orreq	r2, r2, #2048	; 0x800
   26574:	streq	r2, [r1, #48]	; 0x30
   26578:	beq	26544 <myhtml_tokenizer_state_data@@Base+0x80>
   2657c:	ldr	r2, [r1, #48]	; 0x30
   26580:	tst	r2, #8
   26584:	bne	26524 <myhtml_tokenizer_state_data@@Base+0x60>
   26588:	b	26544 <myhtml_tokenizer_state_data@@Base+0x80>
   2658c:	andeq	r8, sp, r8, lsr r3

00026590 <myhtml_tokenizer_state_comment@@Base>:
   26590:	push	{lr}		; (str lr, [sp, #-4]!)
   26594:	ldr	ip, [sp, #4]
   26598:	mov	lr, #2
   2659c:	str	lr, [r1]
   265a0:	cmp	r3, ip
   265a4:	bcs	265e0 <myhtml_tokenizer_state_comment@@Base+0x50>
   265a8:	add	r1, r2, r3
   265ac:	ldrb	r2, [r2, r3]
   265b0:	cmp	r2, #45	; 0x2d
   265b4:	movne	r2, r1
   265b8:	beq	265d4 <myhtml_tokenizer_state_comment@@Base+0x44>
   265bc:	add	r3, r3, #1
   265c0:	cmp	ip, r3
   265c4:	beq	265e0 <myhtml_tokenizer_state_comment@@Base+0x50>
   265c8:	ldrb	r1, [r2, #1]!
   265cc:	cmp	r1, #45	; 0x2d
   265d0:	bne	265bc <myhtml_tokenizer_state_comment@@Base+0x2c>
   265d4:	mov	r2, #48	; 0x30
   265d8:	str	r2, [r0, #160]	; 0xa0
   265dc:	add	r3, r3, #1
   265e0:	mov	r0, r3
   265e4:	pop	{pc}		; (ldr pc, [sp], #4)

000265e8 <myhtml_tokenizer_state_comment_end_dash@@Base>:
   265e8:	ldrb	r2, [r2, r3]
   265ec:	cmp	r2, #45	; 0x2d
   265f0:	add	r3, r3, #1
   265f4:	moveq	r2, #49	; 0x31
   265f8:	movne	r2, #47	; 0x2f
   265fc:	str	r2, [r0, #160]	; 0xa0
   26600:	mov	r0, r3
   26604:	bx	lr

00026608 <myhtml_tokenizer_state_parse_error_stop@@Base>:
   26608:	ldr	r3, [pc, #8]	; 26618 <myhtml_tokenizer_state_parse_error_stop@@Base+0x10>
   2660c:	str	r3, [r0, #196]	; 0xc4
   26610:	ldr	r0, [sp]
   26614:	bx	lr
   26618:	andeq	r9, r0, ip, lsr #2

0002661c <myhtml_tokenizer_state_plaintext@@Base>:
   2661c:	push	{r4, r5, r6, lr}
   26620:	mov	r4, r0
   26624:	mov	r2, r1
   26628:	ldr	r5, [sp, #16]
   2662c:	ldr	r1, [r1, #48]	; 0x30
   26630:	tst	r1, #128	; 0x80
   26634:	ldreq	r1, [r2, #48]	; 0x30
   26638:	orreq	r1, r1, #128	; 0x80
   2663c:	streq	r1, [r2, #48]	; 0x30
   26640:	ldr	r1, [r2, #48]	; 0x30
   26644:	ldr	r0, [r2, #48]	; 0x30
   26648:	and	r1, r1, #8
   2664c:	eor	r1, r1, r0
   26650:	str	r1, [r2, #48]	; 0x30
   26654:	ldr	r1, [r4, #192]	; 0xc0
   26658:	add	r1, r3, r1
   2665c:	str	r1, [r2, #24]
   26660:	ldr	r3, [r4, #192]	; 0xc0
   26664:	add	r3, r5, r3
   26668:	sub	r3, r3, r1
   2666c:	str	r3, [r2, #36]	; 0x24
   26670:	str	r3, [r2, #28]
   26674:	mov	r3, #1
   26678:	str	r3, [r2]
   2667c:	mov	r3, #0
   26680:	str	r3, [r4, #160]	; 0xa0
   26684:	mov	r1, r5
   26688:	mov	r0, r4
   2668c:	bl	10028 <myhtml_queue_add@plt>
   26690:	cmp	r0, #0
   26694:	movne	r3, #69	; 0x45
   26698:	strne	r3, [r4, #160]	; 0xa0
   2669c:	movne	r0, #0
   266a0:	moveq	r0, r5
   266a4:	pop	{r4, r5, r6, pc}

000266a8 <myhtml_tokenizer_state_comment_start@@Base>:
   266a8:	push	{r4, r5, r6, lr}
   266ac:	mov	ip, #2
   266b0:	str	ip, [r1]
   266b4:	ldrb	ip, [r2, r3]
   266b8:	cmp	ip, #45	; 0x2d
   266bc:	moveq	r2, #46	; 0x2e
   266c0:	streq	r2, [r0, #160]	; 0xa0
   266c4:	beq	266d8 <myhtml_tokenizer_state_comment_start@@Base+0x30>
   266c8:	cmp	ip, #62	; 0x3e
   266cc:	movne	r2, #47	; 0x2f
   266d0:	strne	r2, [r0, #160]	; 0xa0
   266d4:	beq	266e4 <myhtml_tokenizer_state_comment_start@@Base+0x3c>
   266d8:	add	r4, r3, #1
   266dc:	mov	r0, r4
   266e0:	pop	{r4, r5, r6, pc}
   266e4:	mov	r2, r1
   266e8:	mov	r5, r0
   266ec:	add	r4, r3, #1
   266f0:	ldr	r3, [r0, #192]	; 0xc0
   266f4:	add	r3, r4, r3
   266f8:	ldr	r1, [r1, #32]
   266fc:	sub	r3, r3, r1
   26700:	str	r3, [r2, #36]	; 0x24
   26704:	mov	r3, #0
   26708:	str	r3, [r2, #28]
   2670c:	mov	r1, r4
   26710:	bl	10028 <myhtml_queue_add@plt>
   26714:	cmp	r0, #0
   26718:	movne	r3, #69	; 0x45
   2671c:	strne	r3, [r5, #160]	; 0xa0
   26720:	movne	r4, #0
   26724:	moveq	r3, #0
   26728:	streq	r3, [r5, #160]	; 0xa0
   2672c:	b	266dc <myhtml_tokenizer_state_comment_start@@Base+0x34>

00026730 <myhtml_tokenizer_state_comment_start_dash@@Base>:
   26730:	push	{r4, r5, r6, lr}
   26734:	mov	ip, #2
   26738:	str	ip, [r1]
   2673c:	ldrb	ip, [r2, r3]
   26740:	cmp	ip, #45	; 0x2d
   26744:	moveq	r2, #49	; 0x31
   26748:	streq	r2, [r0, #160]	; 0xa0
   2674c:	beq	26760 <myhtml_tokenizer_state_comment_start_dash@@Base+0x30>
   26750:	cmp	ip, #62	; 0x3e
   26754:	movne	r2, #47	; 0x2f
   26758:	strne	r2, [r0, #160]	; 0xa0
   2675c:	beq	2676c <myhtml_tokenizer_state_comment_start_dash@@Base+0x3c>
   26760:	add	r4, r3, #1
   26764:	mov	r0, r4
   26768:	pop	{r4, r5, r6, pc}
   2676c:	mov	r2, r1
   26770:	mov	r5, r0
   26774:	add	r4, r3, #1
   26778:	ldr	r3, [r0, #192]	; 0xc0
   2677c:	add	r3, r4, r3
   26780:	ldr	r1, [r1, #32]
   26784:	sub	r3, r3, r1
   26788:	str	r3, [r2, #36]	; 0x24
   2678c:	mov	r3, #0
   26790:	str	r3, [r2, #28]
   26794:	mov	r1, r4
   26798:	bl	10028 <myhtml_queue_add@plt>
   2679c:	cmp	r0, #0
   267a0:	movne	r3, #69	; 0x45
   267a4:	strne	r3, [r5, #160]	; 0xa0
   267a8:	movne	r4, #0
   267ac:	moveq	r3, #0
   267b0:	streq	r3, [r5, #160]	; 0xa0
   267b4:	b	26764 <myhtml_tokenizer_state_comment_start_dash@@Base+0x34>

000267b8 <myhtml_tokenizer_state_comment_end@@Base>:
   267b8:	push	{r4, r5, r6, lr}
   267bc:	ldrb	ip, [r2, r3]
   267c0:	cmp	ip, #62	; 0x3e
   267c4:	beq	267f4 <myhtml_tokenizer_state_comment_end@@Base+0x3c>
   267c8:	cmp	ip, #33	; 0x21
   267cc:	addeq	r4, r3, #1
   267d0:	moveq	r3, #50	; 0x32
   267d4:	streq	r3, [r0, #160]	; 0xa0
   267d8:	beq	267ec <myhtml_tokenizer_state_comment_end@@Base+0x34>
   267dc:	cmp	ip, #45	; 0x2d
   267e0:	add	r4, r3, #1
   267e4:	movne	r3, #47	; 0x2f
   267e8:	strne	r3, [r0, #160]	; 0xa0
   267ec:	mov	r0, r4
   267f0:	pop	{r4, r5, r6, pc}
   267f4:	ldr	r2, [r0, #192]	; 0xc0
   267f8:	ldr	ip, [r1, #24]
   267fc:	sub	r2, r2, ip
   26800:	add	r2, r2, r3
   26804:	str	r2, [r1, #28]
   26808:	cmp	r2, #1
   2680c:	subhi	r2, r2, #2
   26810:	movls	r2, #0
   26814:	str	r2, [r1, #28]
   26818:	mov	r2, r1
   2681c:	mov	r5, r0
   26820:	add	r4, r3, #1
   26824:	ldr	r3, [r0, #192]	; 0xc0
   26828:	ldr	r1, [r1, #32]
   2682c:	sub	r3, r3, r1
   26830:	add	r3, r3, r4
   26834:	str	r3, [r2, #36]	; 0x24
   26838:	mov	r1, r4
   2683c:	bl	10028 <myhtml_queue_add@plt>
   26840:	cmp	r0, #0
   26844:	movne	r3, #69	; 0x45
   26848:	strne	r3, [r5, #160]	; 0xa0
   2684c:	movne	r4, #0
   26850:	moveq	r3, #0
   26854:	streq	r3, [r5, #160]	; 0xa0
   26858:	b	267ec <myhtml_tokenizer_state_comment_end@@Base+0x34>

0002685c <myhtml_tokenizer_state_comment_end_bang@@Base>:
   2685c:	push	{r4, r5, r6, lr}
   26860:	ldrb	r2, [r2, r3]
   26864:	cmp	r2, #62	; 0x3e
   26868:	beq	26888 <myhtml_tokenizer_state_comment_end_bang@@Base+0x2c>
   2686c:	cmp	r2, #45	; 0x2d
   26870:	add	r4, r3, #1
   26874:	moveq	r3, #48	; 0x30
   26878:	movne	r3, #47	; 0x2f
   2687c:	str	r3, [r0, #160]	; 0xa0
   26880:	mov	r0, r4
   26884:	pop	{r4, r5, r6, pc}
   26888:	mov	r2, r1
   2688c:	mov	r5, r0
   26890:	ldr	r1, [r0, #192]	; 0xc0
   26894:	add	r0, r3, r1
   26898:	ldr	ip, [r2, #24]
   2689c:	sub	lr, r0, #3
   268a0:	cmp	lr, ip
   268a4:	bcc	268f4 <myhtml_tokenizer_state_comment_end_bang@@Base+0x98>
   268a8:	mvn	r1, #2
   268ac:	sub	r1, r1, ip
   268b0:	add	r1, r1, r0
   268b4:	str	r1, [r2, #28]
   268b8:	add	r4, r3, #1
   268bc:	ldr	r3, [r5, #192]	; 0xc0
   268c0:	ldr	r1, [r2, #32]
   268c4:	sub	r3, r3, r1
   268c8:	add	r3, r3, r4
   268cc:	str	r3, [r2, #36]	; 0x24
   268d0:	mov	r1, r4
   268d4:	mov	r0, r5
   268d8:	bl	10028 <myhtml_queue_add@plt>
   268dc:	cmp	r0, #0
   268e0:	beq	26930 <myhtml_tokenizer_state_comment_end_bang@@Base+0xd4>
   268e4:	mov	r3, #69	; 0x45
   268e8:	str	r3, [r5, #160]	; 0xa0
   268ec:	mov	r4, #0
   268f0:	b	26880 <myhtml_tokenizer_state_comment_end_bang@@Base+0x24>
   268f4:	add	r4, r3, #1
   268f8:	ldr	r3, [r2, #32]
   268fc:	sub	r1, r1, r3
   26900:	add	r1, r1, r4
   26904:	str	r1, [r2, #36]	; 0x24
   26908:	mov	r3, #0
   2690c:	str	r3, [r2, #28]
   26910:	mov	r1, r4
   26914:	mov	r0, r5
   26918:	bl	10028 <myhtml_queue_add@plt>
   2691c:	cmp	r0, #0
   26920:	movne	r3, #69	; 0x45
   26924:	strne	r3, [r5, #160]	; 0xa0
   26928:	movne	r4, #0
   2692c:	bne	26880 <myhtml_tokenizer_state_comment_end_bang@@Base+0x24>
   26930:	mov	r3, #0
   26934:	str	r3, [r5, #160]	; 0xa0
   26938:	b	26880 <myhtml_tokenizer_state_comment_end_bang@@Base+0x24>

0002693c <myhtml_tokenizer_state_bogus_comment@@Base>:
   2693c:	push	{r4, r5, r6, lr}
   26940:	ldr	lr, [sp, #16]
   26944:	mov	ip, #2
   26948:	str	ip, [r1]
   2694c:	ldr	ip, [r1, #48]	; 0x30
   26950:	orr	ip, ip, #1024	; 0x400
   26954:	str	ip, [r1, #48]	; 0x30
   26958:	cmp	r3, lr
   2695c:	bcs	269f0 <myhtml_tokenizer_state_bogus_comment@@Base+0xb4>
   26960:	add	ip, r2, r3
   26964:	ldrb	r2, [r2, r3]
   26968:	cmp	r2, #62	; 0x3e
   2696c:	movne	r4, r3
   26970:	beq	269e8 <myhtml_tokenizer_state_bogus_comment@@Base+0xac>
   26974:	add	r4, r4, #1
   26978:	cmp	lr, r4
   2697c:	beq	269e0 <myhtml_tokenizer_state_bogus_comment@@Base+0xa4>
   26980:	ldrb	r3, [ip, #1]!
   26984:	cmp	r3, #62	; 0x3e
   26988:	bne	26974 <myhtml_tokenizer_state_bogus_comment@@Base+0x38>
   2698c:	mov	r2, r1
   26990:	mov	r5, r0
   26994:	ldr	r3, [r0, #192]	; 0xc0
   26998:	ldr	r1, [r1, #24]
   2699c:	sub	r3, r3, r1
   269a0:	add	r3, r3, r4
   269a4:	str	r3, [r2, #28]
   269a8:	add	r4, r4, #1
   269ac:	ldr	r3, [r0, #192]	; 0xc0
   269b0:	ldr	r1, [r2, #32]
   269b4:	sub	r3, r3, r1
   269b8:	add	r3, r3, r4
   269bc:	str	r3, [r2, #36]	; 0x24
   269c0:	mov	r1, r4
   269c4:	bl	10028 <myhtml_queue_add@plt>
   269c8:	cmp	r0, #0
   269cc:	movne	r3, #69	; 0x45
   269d0:	strne	r3, [r5, #160]	; 0xa0
   269d4:	movne	r4, #0
   269d8:	moveq	r3, #0
   269dc:	streq	r3, [r5, #160]	; 0xa0
   269e0:	mov	r0, r4
   269e4:	pop	{r4, r5, r6, pc}
   269e8:	mov	r4, r3
   269ec:	b	2698c <myhtml_tokenizer_state_bogus_comment@@Base+0x50>
   269f0:	mov	r4, r3
   269f4:	b	269e0 <myhtml_tokenizer_state_bogus_comment@@Base+0xa4>

000269f8 <myhtml_tokenizer_state_cdata_section@@Base>:
   269f8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   269fc:	ldr	r6, [sp, #32]
   26a00:	ldr	ip, [r1, #48]	; 0x30
   26a04:	tst	ip, #256	; 0x100
   26a08:	ldreq	ip, [r1, #48]	; 0x30
   26a0c:	orreq	ip, ip, #256	; 0x100
   26a10:	streq	ip, [r1, #48]	; 0x30
   26a14:	cmp	r3, r6
   26a18:	bcs	26b10 <myhtml_tokenizer_state_cdata_section@@Base+0x118>
   26a1c:	mov	r4, r3
   26a20:	mov	r7, r1
   26a24:	mov	r8, r0
   26a28:	add	r2, r2, r3
   26a2c:	mov	r9, #2
   26a30:	b	26a9c <myhtml_tokenizer_state_cdata_section@@Base+0xa4>
   26a34:	ldr	r1, [r8, #192]	; 0xc0
   26a38:	sub	r1, r1, #2
   26a3c:	mov	r2, r9
   26a40:	add	r1, r1, r4
   26a44:	mov	r0, r8
   26a48:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   26a4c:	b	26ab8 <myhtml_tokenizer_state_cdata_section@@Base+0xc0>
   26a50:	ldr	r3, [r8, #192]	; 0xc0
   26a54:	ldr	r2, [r7, #32]
   26a58:	sub	r3, r3, r2
   26a5c:	add	r3, r3, r4
   26a60:	str	r3, [r7, #36]	; 0x24
   26a64:	mov	r2, r7
   26a68:	mov	r1, r4
   26a6c:	mov	r0, r8
   26a70:	bl	10028 <myhtml_queue_add@plt>
   26a74:	cmp	r0, #0
   26a78:	beq	26b00 <myhtml_tokenizer_state_cdata_section@@Base+0x108>
   26a7c:	mov	r3, #69	; 0x45
   26a80:	str	r3, [r8, #160]	; 0xa0
   26a84:	mov	r4, #0
   26a88:	b	26b08 <myhtml_tokenizer_state_cdata_section@@Base+0x110>
   26a8c:	add	r4, r4, #1
   26a90:	mov	r2, r5
   26a94:	cmp	r6, r4
   26a98:	beq	26b08 <myhtml_tokenizer_state_cdata_section@@Base+0x110>
   26a9c:	add	r5, r2, #1
   26aa0:	ldrb	r3, [r2]
   26aa4:	cmp	r3, #62	; 0x3e
   26aa8:	bne	26a8c <myhtml_tokenizer_state_cdata_section@@Base+0x94>
   26aac:	cmp	r4, #1
   26ab0:	subhi	r0, r2, #2
   26ab4:	bls	26a34 <myhtml_tokenizer_state_cdata_section@@Base+0x3c>
   26ab8:	ldrb	r3, [r0]
   26abc:	cmp	r3, #93	; 0x5d
   26ac0:	bne	26a8c <myhtml_tokenizer_state_cdata_section@@Base+0x94>
   26ac4:	ldrb	r3, [r0, #1]
   26ac8:	cmp	r3, #93	; 0x5d
   26acc:	bne	26a8c <myhtml_tokenizer_state_cdata_section@@Base+0x94>
   26ad0:	ldr	r3, [r8, #192]	; 0xc0
   26ad4:	sub	r3, r3, #2
   26ad8:	ldr	r2, [r7, #24]
   26adc:	sub	r3, r3, r2
   26ae0:	add	r3, r3, r4
   26ae4:	str	r3, [r7, #28]
   26ae8:	add	r4, r4, #1
   26aec:	cmp	r3, #0
   26af0:	bne	26a50 <myhtml_tokenizer_state_cdata_section@@Base+0x58>
   26af4:	ldr	r3, [r8, #192]	; 0xc0
   26af8:	add	r3, r3, r4
   26afc:	str	r3, [r7, #24]
   26b00:	mov	r3, #0
   26b04:	str	r3, [r8, #160]	; 0xa0
   26b08:	mov	r0, r4
   26b0c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   26b10:	mov	r4, r3
   26b14:	b	26b08 <myhtml_tokenizer_state_cdata_section@@Base+0x110>

00026b18 <myhtml_tokenizer_state_rcdata@@Base>:
   26b18:	push	{r4, r5, r6, r7, r8, lr}
   26b1c:	mov	r6, r0
   26b20:	mov	r7, r1
   26b24:	mov	r8, r2
   26b28:	mov	r4, r3
   26b2c:	ldr	r5, [sp, #24]
   26b30:	ldr	r3, [r0, #60]	; 0x3c
   26b34:	cmp	r3, #0
   26b38:	beq	26b8c <myhtml_tokenizer_state_rcdata@@Base+0x74>
   26b3c:	cmp	r4, r5
   26b40:	bcs	26bdc <myhtml_tokenizer_state_rcdata@@Base+0xc4>
   26b44:	add	r3, r8, r4
   26b48:	ldrb	r2, [r8, r4]
   26b4c:	cmp	r2, #60	; 0x3c
   26b50:	movne	r0, r4
   26b54:	beq	26bd0 <myhtml_tokenizer_state_rcdata@@Base+0xb8>
   26b58:	add	r0, r0, #1
   26b5c:	cmp	r5, r0
   26b60:	beq	26bd8 <myhtml_tokenizer_state_rcdata@@Base+0xc0>
   26b64:	ldrb	r2, [r3, #1]!
   26b68:	cmp	r2, #60	; 0x3c
   26b6c:	bne	26b58 <myhtml_tokenizer_state_rcdata@@Base+0x40>
   26b70:	ldr	r3, [r6, #192]	; 0xc0
   26b74:	add	r3, r3, r0
   26b78:	str	r3, [r7, #32]
   26b7c:	add	r0, r0, #1
   26b80:	mov	r3, #10
   26b84:	str	r3, [r6, #160]	; 0xa0
   26b88:	pop	{r4, r5, r6, r7, r8, pc}
   26b8c:	ldr	r3, [r0, #192]	; 0xc0
   26b90:	add	r3, r3, r4
   26b94:	str	r3, [r1, #24]
   26b98:	ldr	r0, [r0, #68]	; 0x44
   26b9c:	bl	fcec <mythread_queue_get_prev_node@plt>
   26ba0:	cmp	r0, #0
   26ba4:	beq	26bbc <myhtml_tokenizer_state_rcdata@@Base+0xa4>
   26ba8:	ldr	r3, [r0, #4]
   26bac:	cmp	r3, #0
   26bb0:	ldrne	r3, [r3]
   26bb4:	strne	r3, [r6, #60]	; 0x3c
   26bb8:	bne	26b3c <myhtml_tokenizer_state_rcdata@@Base+0x24>
   26bbc:	ldr	r3, [r6, #88]	; 0x58
   26bc0:	cmp	r3, #0
   26bc4:	ldrne	r3, [r3, #4]
   26bc8:	strne	r3, [r6, #60]	; 0x3c
   26bcc:	b	26b3c <myhtml_tokenizer_state_rcdata@@Base+0x24>
   26bd0:	mov	r0, r4
   26bd4:	b	26b70 <myhtml_tokenizer_state_rcdata@@Base+0x58>
   26bd8:	pop	{r4, r5, r6, r7, r8, pc}
   26bdc:	mov	r0, r4
   26be0:	pop	{r4, r5, r6, r7, r8, pc}

00026be4 <myhtml_tokenizer_state_rawtext@@Base>:
   26be4:	push	{r4, r5, r6, r7, r8, lr}
   26be8:	mov	r6, r0
   26bec:	mov	r7, r1
   26bf0:	mov	r8, r2
   26bf4:	mov	r4, r3
   26bf8:	ldr	r5, [sp, #24]
   26bfc:	ldr	r3, [r0, #60]	; 0x3c
   26c00:	cmp	r3, #0
   26c04:	beq	26c58 <myhtml_tokenizer_state_rawtext@@Base+0x74>
   26c08:	cmp	r4, r5
   26c0c:	bcs	26ca8 <myhtml_tokenizer_state_rawtext@@Base+0xc4>
   26c10:	add	r3, r8, r4
   26c14:	ldrb	r2, [r8, r4]
   26c18:	cmp	r2, #60	; 0x3c
   26c1c:	movne	r0, r4
   26c20:	beq	26c9c <myhtml_tokenizer_state_rawtext@@Base+0xb8>
   26c24:	add	r0, r0, #1
   26c28:	cmp	r5, r0
   26c2c:	beq	26ca4 <myhtml_tokenizer_state_rawtext@@Base+0xc0>
   26c30:	ldrb	r2, [r3, #1]!
   26c34:	cmp	r2, #60	; 0x3c
   26c38:	bne	26c24 <myhtml_tokenizer_state_rawtext@@Base+0x40>
   26c3c:	ldr	r3, [r6, #192]	; 0xc0
   26c40:	add	r3, r3, r0
   26c44:	str	r3, [r7, #32]
   26c48:	add	r0, r0, #1
   26c4c:	mov	r3, #13
   26c50:	str	r3, [r6, #160]	; 0xa0
   26c54:	pop	{r4, r5, r6, r7, r8, pc}
   26c58:	ldr	r3, [r0, #192]	; 0xc0
   26c5c:	add	r3, r3, r4
   26c60:	str	r3, [r1, #24]
   26c64:	ldr	r0, [r0, #68]	; 0x44
   26c68:	bl	fcec <mythread_queue_get_prev_node@plt>
   26c6c:	cmp	r0, #0
   26c70:	beq	26c88 <myhtml_tokenizer_state_rawtext@@Base+0xa4>
   26c74:	ldr	r3, [r0, #4]
   26c78:	cmp	r3, #0
   26c7c:	ldrne	r3, [r3]
   26c80:	strne	r3, [r6, #60]	; 0x3c
   26c84:	bne	26c08 <myhtml_tokenizer_state_rawtext@@Base+0x24>
   26c88:	ldr	r3, [r6, #88]	; 0x58
   26c8c:	cmp	r3, #0
   26c90:	ldrne	r3, [r3, #4]
   26c94:	strne	r3, [r6, #60]	; 0x3c
   26c98:	b	26c08 <myhtml_tokenizer_state_rawtext@@Base+0x24>
   26c9c:	mov	r0, r4
   26ca0:	b	26c3c <myhtml_tokenizer_state_rawtext@@Base+0x58>
   26ca4:	pop	{r4, r5, r6, r7, r8, pc}
   26ca8:	mov	r0, r4
   26cac:	pop	{r4, r5, r6, r7, r8, pc}

00026cb0 <myhtml_tokenizer_state_markup_declaration_open@@Base>:
   26cb0:	push	{r4, r5, r6, r7, r8, lr}
   26cb4:	ldr	r5, [sp, #24]
   26cb8:	ldr	ip, [r1, #24]
   26cbc:	add	lr, ip, #2
   26cc0:	ldr	r2, [r0, #192]	; 0xc0
   26cc4:	add	r2, r5, r2
   26cc8:	cmp	lr, r2
   26ccc:	bls	26ce0 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x30>
   26cd0:	ldr	r2, [r0, #76]	; 0x4c
   26cd4:	str	r3, [r2, #4]
   26cd8:	mov	r0, r5
   26cdc:	pop	{r4, r5, r6, r7, r8, pc}
   26ce0:	mov	r6, r3
   26ce4:	mov	r7, r1
   26ce8:	mov	r4, r0
   26cec:	mov	r2, #2
   26cf0:	mov	r1, ip
   26cf4:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   26cf8:	ldrb	r3, [r0]
   26cfc:	cmp	r3, #45	; 0x2d
   26d00:	beq	26d2c <myhtml_tokenizer_state_markup_declaration_open@@Base+0x7c>
   26d04:	ldr	r1, [r7, #24]
   26d08:	add	r2, r1, #7
   26d0c:	ldr	r3, [r4, #192]	; 0xc0
   26d10:	add	r3, r5, r3
   26d14:	cmp	r2, r3
   26d18:	bls	26d58 <myhtml_tokenizer_state_markup_declaration_open@@Base+0xa8>
   26d1c:	ldr	r3, [r4, #76]	; 0x4c
   26d20:	str	r6, [r3, #4]
   26d24:	mov	r0, r5
   26d28:	pop	{r4, r5, r6, r7, r8, pc}
   26d2c:	ldrb	r3, [r0, #1]
   26d30:	cmp	r3, #45	; 0x2d
   26d34:	bne	26d04 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x54>
   26d38:	str	r3, [r4, #160]	; 0xa0
   26d3c:	add	r0, r6, #2
   26d40:	ldr	r3, [r4, #192]	; 0xc0
   26d44:	add	r3, r3, r0
   26d48:	str	r3, [r7, #24]
   26d4c:	mov	r3, #0
   26d50:	str	r3, [r7, #28]
   26d54:	pop	{r4, r5, r6, r7, r8, pc}
   26d58:	mov	r2, #7
   26d5c:	mov	r0, r4
   26d60:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   26d64:	mov	r5, r0
   26d68:	mov	r2, #7
   26d6c:	ldr	r1, [pc, #248]	; 26e6c <myhtml_tokenizer_state_markup_declaration_open@@Base+0x1bc>
   26d70:	add	r1, pc, r1
   26d74:	bl	102a4 <mycore_strncasecmp@plt>
   26d78:	cmp	r0, #0
   26d7c:	beq	26e24 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x174>
   26d80:	mov	r2, #7
   26d84:	ldr	r1, [pc, #228]	; 26e70 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x1c0>
   26d88:	add	r1, pc, r1
   26d8c:	mov	r0, r5
   26d90:	bl	10f94 <strncmp@plt>
   26d94:	cmp	r0, #0
   26d98:	bne	26e54 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x1a4>
   26d9c:	ldr	r3, [r4, #68]	; 0x44
   26da0:	ldr	r3, [r3, #8]
   26da4:	cmp	r3, #0
   26da8:	beq	26e54 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x1a4>
   26dac:	ldr	r1, [r3, #4]
   26db0:	cmp	r1, #0
   26db4:	beq	26e54 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x1a4>
   26db8:	mov	r0, r4
   26dbc:	bl	fce0 <myhtml_tree_wait_for_last_done_token@plt>
   26dc0:	mov	r0, r4
   26dc4:	bl	10d48 <myhtml_tree_adjusted_current_node@plt>
   26dc8:	cmp	r0, #0
   26dcc:	beq	26e54 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x1a4>
   26dd0:	ldr	r3, [r0, #8]
   26dd4:	cmp	r3, #1
   26dd8:	beq	26e54 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x1a4>
   26ddc:	mov	r3, #67	; 0x43
   26de0:	str	r3, [r4, #160]	; 0xa0
   26de4:	ldr	r3, [r7, #24]
   26de8:	add	r3, r3, #7
   26dec:	ldr	r2, [r4, #76]	; 0x4c
   26df0:	ldr	r0, [r2, #12]
   26df4:	sub	r0, r3, r0
   26df8:	str	r3, [r7, #24]
   26dfc:	mov	r3, #0
   26e00:	str	r3, [r7, #28]
   26e04:	mov	r3, #1
   26e08:	str	r3, [r7]
   26e0c:	ldr	r3, [r7, #48]	; 0x30
   26e10:	ldr	r2, [r7, #48]	; 0x30
   26e14:	and	r3, r3, #8
   26e18:	eor	r3, r3, r2
   26e1c:	str	r3, [r7, #48]	; 0x30
   26e20:	pop	{r4, r5, r6, r7, r8, pc}
   26e24:	mov	r3, #51	; 0x33
   26e28:	str	r3, [r4, #160]	; 0xa0
   26e2c:	ldr	r0, [r7, #24]
   26e30:	add	r0, r0, #7
   26e34:	ldr	r3, [r4, #76]	; 0x4c
   26e38:	ldr	r3, [r3, #12]
   26e3c:	sub	r0, r0, r3
   26e40:	mov	r3, #7
   26e44:	str	r3, [r7, #28]
   26e48:	mov	r3, #3
   26e4c:	str	r3, [r7]
   26e50:	pop	{r4, r5, r6, r7, r8, pc}
   26e54:	mov	r3, #0
   26e58:	str	r3, [r7, #28]
   26e5c:	mov	r3, #43	; 0x2b
   26e60:	str	r3, [r4, #160]	; 0xa0
   26e64:	mov	r0, r6
   26e68:	pop	{r4, r5, r6, r7, r8, pc}
   26e6c:	andeq	r7, sp, ip, lsr #23
   26e70:	muleq	sp, ip, fp

00026e74 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base>:
   26e74:	push	{r4, r5, r6, lr}
   26e78:	ldr	ip, [sp, #16]
   26e7c:	cmp	r3, ip
   26e80:	bcs	26f0c <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x98>
   26e84:	add	r1, r2, r3
   26e88:	ldrb	r2, [r2, r3]
   26e8c:	cmp	r2, #34	; 0x22
   26e90:	movne	r2, r1
   26e94:	movne	r4, r3
   26e98:	beq	26f04 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x90>
   26e9c:	add	r4, r4, #1
   26ea0:	cmp	ip, r4
   26ea4:	beq	26efc <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x88>
   26ea8:	ldrb	r3, [r2, #1]!
   26eac:	cmp	r3, #34	; 0x22
   26eb0:	bne	26e9c <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x28>
   26eb4:	mov	r5, r0
   26eb8:	ldr	r2, [r0, #56]	; 0x38
   26ebc:	ldr	r3, [r0, #192]	; 0xc0
   26ec0:	ldr	r1, [r2, #56]	; 0x38
   26ec4:	sub	r3, r3, r1
   26ec8:	add	r3, r3, r4
   26ecc:	str	r3, [r2, #60]	; 0x3c
   26ed0:	ldr	r0, [r0, #8]
   26ed4:	ldr	r1, [r0, #16]
   26ed8:	bl	10904 <myhtml_token_attr_create@plt>
   26edc:	str	r0, [r5, #56]	; 0x38
   26ee0:	cmp	r0, #0
   26ee4:	moveq	r3, #69	; 0x45
   26ee8:	streq	r3, [r5, #160]	; 0xa0
   26eec:	moveq	r4, #0
   26ef0:	movne	r3, #41	; 0x29
   26ef4:	strne	r3, [r5, #160]	; 0xa0
   26ef8:	addne	r4, r4, #1
   26efc:	mov	r0, r4
   26f00:	pop	{r4, r5, r6, pc}
   26f04:	mov	r4, r3
   26f08:	b	26eb4 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x40>
   26f0c:	mov	r4, r3
   26f10:	b	26efc <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x88>

00026f14 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base>:
   26f14:	push	{r4, r5, r6, lr}
   26f18:	ldr	ip, [sp, #16]
   26f1c:	cmp	r3, ip
   26f20:	bcs	26fac <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x98>
   26f24:	add	r1, r2, r3
   26f28:	ldrb	r2, [r2, r3]
   26f2c:	cmp	r2, #39	; 0x27
   26f30:	movne	r2, r1
   26f34:	movne	r4, r3
   26f38:	beq	26fa4 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x90>
   26f3c:	add	r4, r4, #1
   26f40:	cmp	ip, r4
   26f44:	beq	26f9c <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x88>
   26f48:	ldrb	r3, [r2, #1]!
   26f4c:	cmp	r3, #39	; 0x27
   26f50:	bne	26f3c <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x28>
   26f54:	mov	r5, r0
   26f58:	ldr	r2, [r0, #56]	; 0x38
   26f5c:	ldr	r3, [r0, #192]	; 0xc0
   26f60:	ldr	r1, [r2, #56]	; 0x38
   26f64:	sub	r3, r3, r1
   26f68:	add	r3, r3, r4
   26f6c:	str	r3, [r2, #60]	; 0x3c
   26f70:	ldr	r0, [r0, #8]
   26f74:	ldr	r1, [r0, #16]
   26f78:	bl	10904 <myhtml_token_attr_create@plt>
   26f7c:	str	r0, [r5, #56]	; 0x38
   26f80:	cmp	r0, #0
   26f84:	moveq	r3, #69	; 0x45
   26f88:	streq	r3, [r5, #160]	; 0xa0
   26f8c:	moveq	r4, #0
   26f90:	movne	r3, #41	; 0x29
   26f94:	strne	r3, [r5, #160]	; 0xa0
   26f98:	addne	r4, r4, #1
   26f9c:	mov	r0, r4
   26fa0:	pop	{r4, r5, r6, pc}
   26fa4:	mov	r4, r3
   26fa8:	b	26f54 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x40>
   26fac:	mov	r4, r3
   26fb0:	b	26f9c <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x88>

00026fb4 <myhtml_tokenizer_set_first_settings@@Base>:
   26fb4:	push	{r4, lr}
   26fb8:	mov	r4, r0
   26fbc:	ldr	r0, [r0, #24]
   26fc0:	bl	10190 <mythread_queue_get_current_node@plt>
   26fc4:	str	r0, [r4, #68]	; 0x44
   26fc8:	bl	10d78 <mythread_queue_node_clean@plt>
   26fcc:	ldr	r3, [r4, #68]	; 0x44
   26fd0:	str	r4, [r3]
   26fd4:	ldr	r0, [r4, #8]
   26fd8:	ldr	r1, [r0, #12]
   26fdc:	bl	10a0c <myhtml_token_node_create@plt>
   26fe0:	str	r0, [r4, #64]	; 0x40
   26fe4:	cmp	r0, #0
   26fe8:	ldrne	r3, [r4, #76]	; 0x4c
   26fec:	strne	r3, [r4, #80]	; 0x50
   26ff0:	movne	r0, #0
   26ff4:	moveq	r0, #2
   26ff8:	pop	{r4, pc}

00026ffc <myhtml_tokenizer_fragment_init@@Base>:
   26ffc:	push	{r4, r5, r6, lr}
   27000:	mov	r4, r0
   27004:	mov	r5, r1
   27008:	mov	r6, r2
   2700c:	bl	ffe0 <myhtml_tree_node_create@plt>
   27010:	str	r0, [r4, #88]	; 0x58
   27014:	str	r6, [r0, #8]
   27018:	ldr	r3, [r4, #88]	; 0x58
   2701c:	str	r5, [r3, #4]
   27020:	cmp	r6, #1
   27024:	beq	27088 <myhtml_tokenizer_fragment_init@@Base+0x8c>
   27028:	ldr	r6, [r4, #88]	; 0x58
   2702c:	ldr	r0, [r4, #8]
   27030:	ldr	r1, [r0, #12]
   27034:	bl	10a0c <myhtml_token_node_create@plt>
   27038:	str	r0, [r6, #32]
   2703c:	ldr	r3, [r4, #88]	; 0x58
   27040:	ldr	r0, [r3, #32]
   27044:	cmp	r0, #0
   27048:	beq	270d0 <myhtml_tokenizer_fragment_init@@Base+0xd4>
   2704c:	bl	10550 <myhtml_token_set_done@plt>
   27050:	ldr	r3, [r4, #88]	; 0x58
   27054:	ldr	r3, [r3, #32]
   27058:	str	r3, [r4, #156]	; 0x9c
   2705c:	mov	r2, #1
   27060:	mov	r1, #0
   27064:	mov	r0, r4
   27068:	bl	fbfc <myhtml_tree_node_insert_root@plt>
   2706c:	mov	r6, r0
   27070:	cmp	r5, #128	; 0x80
   27074:	beq	270c0 <myhtml_tokenizer_fragment_init@@Base+0xc4>
   27078:	mov	r0, r4
   2707c:	bl	10730 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   27080:	mov	r0, r6
   27084:	pop	{r4, r5, r6, pc}
   27088:	cmp	r5, #93	; 0x5d
   2708c:	beq	270a8 <myhtml_tokenizer_fragment_init@@Base+0xac>
   27090:	mov	r1, r5
   27094:	ldr	r0, [r4, #28]
   27098:	bl	10a24 <myhtml_tag_get_by_id@plt>
   2709c:	ldr	r3, [r0, #12]
   270a0:	str	r3, [r4, #160]	; 0xa0
   270a4:	b	27028 <myhtml_tokenizer_fragment_init@@Base+0x2c>
   270a8:	ldr	r3, [r4, #180]	; 0xb4
   270ac:	tst	r3, #1
   270b0:	movne	r3, #4
   270b4:	moveq	r3, #0
   270b8:	str	r3, [r4, #160]	; 0xa0
   270bc:	b	27028 <myhtml_tokenizer_fragment_init@@Base+0x2c>
   270c0:	mov	r1, #17
   270c4:	mov	r0, r4
   270c8:	bl	ffb0 <myhtml_tree_template_insertion_append@plt>
   270cc:	b	27078 <myhtml_tokenizer_fragment_init@@Base+0x7c>
   270d0:	mov	r6, #0
   270d4:	b	27080 <myhtml_tokenizer_fragment_init@@Base+0x84>

000270d8 <myhtml_tokenizer_wait@@Base>:
   270d8:	ldr	r3, [r0]
   270dc:	ldr	r2, [r3]
   270e0:	cmp	r2, #0
   270e4:	bxeq	lr
   270e8:	push	{r4, lr}
   270ec:	ldr	r1, [r0, #20]
   270f0:	mov	r0, r2
   270f4:	bl	1097c <mythread_queue_list_entry_wait_for_done@plt>
   270f8:	pop	{r4, pc}

000270fc <myhtml_tokenizer_post@@Base>:
   270fc:	push	{r4, lr}
   27100:	mov	r4, r0
   27104:	ldr	r3, [r0]
   27108:	ldr	r0, [r3]
   2710c:	cmp	r0, #0
   27110:	beq	2711c <myhtml_tokenizer_post@@Base+0x20>
   27114:	mov	r1, #0
   27118:	bl	104c0 <mythread_resume@plt>
   2711c:	ldr	r3, [r4]
   27120:	ldr	r0, [r3, #4]
   27124:	cmp	r0, #0
   27128:	popeq	{r4, pc}
   2712c:	mov	r1, #0
   27130:	bl	104c0 <mythread_resume@plt>
   27134:	pop	{r4, pc}

00027138 <myhtml_tokenizer_chunk_process@@Base>:
   27138:	push	{r4, r5, r6, r7, r8, lr}
   2713c:	sub	sp, sp, #16
   27140:	mov	r4, r0
   27144:	mov	r7, r1
   27148:	mov	r5, r2
   2714c:	ldr	r6, [r0]
   27150:	ldr	r8, [r6, #24]
   27154:	mov	r3, r2
   27158:	mov	r2, r1
   2715c:	ldr	r1, [r0, #72]	; 0x48
   27160:	ldr	r0, [r0, #76]	; 0x4c
   27164:	bl	10094 <mycore_incoming_buffer_add@plt>
   27168:	str	r0, [r4, #76]	; 0x4c
   2716c:	ldr	r3, [r6, #32]
   27170:	tst	r3, #1
   27174:	ldrne	r3, [r4, #180]	; 0xb4
   27178:	orrne	r3, r3, #16
   2717c:	strne	r3, [r4, #180]	; 0xb4
   27180:	ldr	r3, [r4, #180]	; 0xb4
   27184:	tst	r3, #16
   27188:	bne	271a0 <myhtml_tokenizer_chunk_process@@Base+0x68>
   2718c:	ldr	r3, [r4, #20]
   27190:	cmp	r3, #0
   27194:	beq	271f8 <myhtml_tokenizer_chunk_process@@Base+0xc0>
   27198:	mov	r0, r4
   2719c:	bl	102b0 <myhtml_tokenizer_post@plt>
   271a0:	ldr	r3, [r4, #68]	; 0x44
   271a4:	cmp	r3, #0
   271a8:	beq	2723c <myhtml_tokenizer_chunk_process@@Base+0x104>
   271ac:	cmp	r5, #0
   271b0:	beq	271e0 <myhtml_tokenizer_chunk_process@@Base+0xa8>
   271b4:	mov	r3, #0
   271b8:	ldr	r2, [r4, #160]	; 0xa0
   271bc:	str	r5, [sp]
   271c0:	ldr	r6, [r8, r2, lsl #2]
   271c4:	mov	r2, r7
   271c8:	ldr	r1, [r4, #64]	; 0x40
   271cc:	mov	r0, r4
   271d0:	blx	r6
   271d4:	mov	r3, r0
   271d8:	cmp	r5, r0
   271dc:	bhi	271b8 <myhtml_tokenizer_chunk_process@@Base+0x80>
   271e0:	ldr	r3, [r4, #192]	; 0xc0
   271e4:	add	r5, r3, r5
   271e8:	str	r5, [r4, #192]	; 0xc0
   271ec:	mov	r0, #0
   271f0:	add	sp, sp, #16
   271f4:	pop	{r4, r5, r6, r7, r8, pc}
   271f8:	add	r3, sp, #16
   271fc:	mov	r2, #0
   27200:	str	r2, [r3, #-4]!
   27204:	mov	r0, r6
   27208:	ldr	r2, [r0], #8
   2720c:	ldr	r2, [r2, #16]
   27210:	str	r3, [sp, #4]
   27214:	ldr	r3, [r6, #20]
   27218:	str	r3, [sp]
   2721c:	ldr	r3, [r4, #24]
   27220:	mov	r1, #2
   27224:	bl	10184 <mythread_queue_list_entry_push@plt>
   27228:	str	r0, [r4, #20]
   2722c:	ldr	r0, [sp, #12]
   27230:	cmp	r0, #0
   27234:	beq	27198 <myhtml_tokenizer_chunk_process@@Base+0x60>
   27238:	b	271f0 <myhtml_tokenizer_chunk_process@@Base+0xb8>
   2723c:	mov	r2, r5
   27240:	mov	r1, r7
   27244:	mov	r0, r4
   27248:	bl	105f8 <myhtml_tokenizer_set_first_settings@plt>
   2724c:	cmp	r0, #0
   27250:	beq	271ac <myhtml_tokenizer_chunk_process@@Base+0x74>
   27254:	b	271f0 <myhtml_tokenizer_chunk_process@@Base+0xb8>

00027258 <myhtml_tokenizer_chunk_with_stream_buffer@@Base>:
   27258:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2725c:	sub	sp, sp, #12
   27260:	mov	sl, r0
   27264:	mov	fp, r1
   27268:	mov	r6, r2
   2726c:	ldr	r0, [r0, #200]	; 0xc8
   27270:	bl	1082c <myencoding_get_function_by_id@plt>
   27274:	mov	r7, r0
   27278:	ldr	r3, [sl, #148]	; 0x94
   2727c:	cmp	r3, #0
   27280:	beq	272b8 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x60>
   27284:	ldr	r8, [sl, #148]	; 0x94
   27288:	mov	r0, r8
   2728c:	bl	10b80 <myhtml_stream_buffer_current_entry@plt>
   27290:	mov	r4, r0
   27294:	ldr	r9, [r0, #4]
   27298:	cmp	r6, #0
   2729c:	beq	273bc <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x164>
   272a0:	mov	r5, fp
   272a4:	add	r6, fp, r6
   272a8:	add	r3, r8, #12
   272ac:	str	r3, [sp, #4]
   272b0:	mov	fp, #0
   272b4:	b	27320 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0xc8>
   272b8:	bl	10e74 <myhtml_stream_buffer_create@plt>
   272bc:	str	r0, [sl, #148]	; 0x94
   272c0:	cmp	r0, #0
   272c4:	moveq	r0, #37632	; 0x9300
   272c8:	beq	273b4 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x15c>
   272cc:	mov	r1, #1024	; 0x400
   272d0:	bl	10d6c <myhtml_stream_buffer_init@plt>
   272d4:	cmp	r0, #0
   272d8:	bne	273b4 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x15c>
   272dc:	mov	r1, #16384	; 0x4000
   272e0:	ldr	r0, [sl, #148]	; 0x94
   272e4:	bl	10934 <myhtml_stream_buffer_add_entry@plt>
   272e8:	cmp	r0, #0
   272ec:	bne	27284 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x2c>
   272f0:	ldr	r0, [pc, #212]	; 273cc <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x174>
   272f4:	b	273b4 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x15c>
   272f8:	ldr	r1, [r4]
   272fc:	ldr	r3, [r4, #4]
   27300:	add	r1, r1, r3
   27304:	ldr	r0, [r8, #24]
   27308:	bl	10e8c <myencoding_codepoint_to_ascii_utf_8@plt>
   2730c:	ldr	r3, [r4, #4]
   27310:	add	r0, r3, r0
   27314:	str	r0, [r4, #4]
   27318:	cmp	r6, r5
   2731c:	beq	27380 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x128>
   27320:	ldr	r1, [sp, #4]
   27324:	ldrb	r0, [r5], #1
   27328:	blx	r7
   2732c:	cmp	r0, #0
   27330:	bne	27318 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0xc0>
   27334:	ldr	r3, [r4, #4]
   27338:	add	r3, r3, #4
   2733c:	ldr	r2, [r4, #8]
   27340:	cmp	r3, r2
   27344:	bcc	272f8 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0xa0>
   27348:	str	fp, [sl, #200]	; 0xc8
   2734c:	ldr	r2, [r4, #4]
   27350:	ldr	r1, [r4]
   27354:	sub	r2, r2, r9
   27358:	add	r1, r1, r9
   2735c:	mov	r0, sl
   27360:	bl	10430 <myhtml_tokenizer_chunk_process@plt>
   27364:	mov	r1, #16384	; 0x4000
   27368:	mov	r0, r8
   2736c:	bl	10934 <myhtml_stream_buffer_add_entry@plt>
   27370:	subs	r4, r0, #0
   27374:	beq	273c4 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x16c>
   27378:	ldr	r9, [r4, #4]
   2737c:	b	272f8 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0xa0>
   27380:	ldr	r3, [r4, #4]
   27384:	cmp	r9, r3
   27388:	moveq	r0, #0
   2738c:	beq	273b4 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x15c>
   27390:	mov	r5, #0
   27394:	str	r5, [sl, #200]	; 0xc8
   27398:	ldr	r2, [r4, #4]
   2739c:	ldr	r1, [r4]
   273a0:	sub	r2, r2, r9
   273a4:	add	r1, r1, r9
   273a8:	mov	r0, sl
   273ac:	bl	10430 <myhtml_tokenizer_chunk_process@plt>
   273b0:	mov	r0, r5
   273b4:	add	sp, sp, #12
   273b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   273bc:	mov	r0, #0
   273c0:	b	273b4 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x15c>
   273c4:	ldr	r0, [pc]	; 273cc <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x174>
   273c8:	b	273b4 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x15c>
   273cc:	andeq	r9, r0, r4, lsl #6

000273d0 <myhtml_tokenizer_chunk@@Base>:
   273d0:	push	{r4, lr}
   273d4:	ldr	r3, [r0, #204]	; 0xcc
   273d8:	sub	r3, r3, #4
   273dc:	cmp	r3, #1
   273e0:	bls	273ec <myhtml_tokenizer_chunk@@Base+0x1c>
   273e4:	bl	10430 <myhtml_tokenizer_chunk_process@plt>
   273e8:	pop	{r4, pc}
   273ec:	bl	10b98 <myhtml_tokenizer_chunk_with_stream_buffer@plt>
   273f0:	pop	{r4, pc}

000273f4 <myhtml_tokenizer_begin@@Base>:
   273f4:	push	{r4, lr}
   273f8:	bl	100c4 <myhtml_tokenizer_chunk@plt>
   273fc:	pop	{r4, pc}

00027400 <myhtml_tokenizer_pause@@Base>:
   27400:	push	{r4, lr}
   27404:	mov	r4, r0
   27408:	ldr	r3, [r0]
   2740c:	ldr	r0, [r3]
   27410:	cmp	r0, #0
   27414:	beq	2741c <myhtml_tokenizer_pause@@Base+0x1c>
   27418:	bl	10ad8 <mythread_stop@plt>
   2741c:	ldr	r3, [r4]
   27420:	ldr	r0, [r3, #4]
   27424:	cmp	r0, #0
   27428:	popeq	{r4, pc}
   2742c:	bl	10ad8 <mythread_stop@plt>
   27430:	pop	{r4, pc}

00027434 <myhtml_tokenizer_end@@Base>:
   27434:	push	{r4, r5, lr}
   27438:	sub	sp, sp, #12
   2743c:	mov	r4, r0
   27440:	ldr	r2, [r0, #76]	; 0x4c
   27444:	cmp	r2, #0
   27448:	beq	27488 <myhtml_tokenizer_end@@Base+0x54>
   2744c:	ldr	r3, [r0, #192]	; 0xc0
   27450:	ldr	r1, [r2, #8]
   27454:	sub	r3, r3, r1
   27458:	str	r3, [r0, #192]	; 0xc0
   2745c:	ldr	r3, [r2, #8]
   27460:	ldr	r2, [r2]
   27464:	ldr	r0, [r0]
   27468:	ldr	r1, [r4, #160]	; 0xa0
   2746c:	add	r1, r1, #70	; 0x46
   27470:	ldr	r0, [r0, #24]
   27474:	str	r3, [sp]
   27478:	ldr	r5, [r0, r1, lsl #2]
   2747c:	ldr	r1, [r4, #64]	; 0x40
   27480:	mov	r0, r4
   27484:	blx	r5
   27488:	ldr	r3, [r4, #64]	; 0x40
   2748c:	mov	r2, #251	; 0xfb
   27490:	str	r2, [r3]
   27494:	ldr	r2, [r4, #64]	; 0x40
   27498:	mov	r1, #0
   2749c:	mov	r0, r4
   274a0:	bl	10028 <myhtml_queue_add@plt>
   274a4:	cmp	r0, #0
   274a8:	movne	r3, #2
   274ac:	strne	r3, [r4, #196]	; 0xc4
   274b0:	ldr	r5, [r4, #196]	; 0xc4
   274b4:	ldr	r3, [r4, #180]	; 0xb4
   274b8:	tst	r3, #16
   274bc:	beq	274d8 <myhtml_tokenizer_end@@Base+0xa4>
   274c0:	ldr	r3, [r4, #180]	; 0xb4
   274c4:	orr	r3, r3, #32
   274c8:	str	r3, [r4, #180]	; 0xb4
   274cc:	mov	r0, r5
   274d0:	add	sp, sp, #12
   274d4:	pop	{r4, r5, pc}
   274d8:	ldr	r3, [r4]
   274dc:	ldr	r1, [r4, #20]
   274e0:	ldr	r0, [r3]
   274e4:	bl	1097c <mythread_queue_list_entry_wait_for_done@plt>
   274e8:	ldr	r0, [r4]
   274ec:	ldr	r3, [r0], #8
   274f0:	ldr	r2, [r3, #16]
   274f4:	mov	r3, #0
   274f8:	str	r3, [sp]
   274fc:	ldr	r3, [r4, #20]
   27500:	mov	r1, #2
   27504:	bl	fc08 <mythread_queue_list_entry_delete@plt>
   27508:	str	r0, [r4, #20]
   2750c:	ldr	r3, [r4]
   27510:	ldr	r3, [r3]
   27514:	ldr	r0, [r3, #16]
   27518:	bl	105c8 <mythread_queue_list_get_count@plt>
   2751c:	cmp	r0, #0
   27520:	beq	27540 <myhtml_tokenizer_end@@Base+0x10c>
   27524:	cmp	r5, #0
   27528:	bne	274c0 <myhtml_tokenizer_end@@Base+0x8c>
   2752c:	ldr	r3, [r4]
   27530:	ldr	r0, [r3]
   27534:	bl	10514 <mythread_check_status@plt>
   27538:	mov	r5, r0
   2753c:	b	274c0 <myhtml_tokenizer_end@@Base+0x8c>
   27540:	mov	r0, r4
   27544:	bl	105ec <myhtml_tokenizer_pause@plt>
   27548:	b	27524 <myhtml_tokenizer_end@@Base+0xf0>

0002754c <myhtml_tokenizer_calc_current_namespace@@Base>:
   2754c:	ldr	r3, [r0, #184]	; 0xb8
   27550:	tst	r3, #1
   27554:	bxne	lr
   27558:	ldr	r3, [r0, #180]	; 0xb4
   2755c:	tst	r3, #16
   27560:	bne	275dc <myhtml_tokenizer_calc_current_namespace@@Base+0x90>
   27564:	ldr	r3, [r1]
   27568:	cmp	r3, #124	; 0x7c
   2756c:	cmpne	r3, #218	; 0xda
   27570:	moveq	r2, #1
   27574:	movne	r2, #0
   27578:	cmp	r3, #54	; 0x36
   2757c:	orreq	r2, r2, #1
   27580:	cmp	r2, #0
   27584:	bne	275e8 <myhtml_tokenizer_calc_current_namespace@@Base+0x9c>
   27588:	ldr	r2, [r0, #156]	; 0x9c
   2758c:	cmp	r2, #0
   27590:	bxeq	lr
   27594:	ldr	r2, [r1, #48]	; 0x30
   27598:	tst	r2, #1
   2759c:	bxne	lr
   275a0:	push	{r4, r5, r6, lr}
   275a4:	mov	r5, r1
   275a8:	mov	r4, r0
   275ac:	mov	r1, r3
   275b0:	ldr	r0, [r0, #28]
   275b4:	bl	10a24 <myhtml_tag_get_by_id@plt>
   275b8:	ldr	r3, [r0, #12]
   275bc:	cmp	r3, #0
   275c0:	popeq	{r4, r5, r6, pc}
   275c4:	mov	r1, r5
   275c8:	mov	r0, r4
   275cc:	bl	fce0 <myhtml_tree_wait_for_last_done_token@plt>
   275d0:	ldr	r3, [r4, #164]	; 0xa4
   275d4:	str	r3, [r4, #160]	; 0xa0
   275d8:	pop	{r4, r5, r6, pc}
   275dc:	ldr	r3, [r0, #164]	; 0xa4
   275e0:	str	r3, [r0, #160]	; 0xa0
   275e4:	bx	lr
   275e8:	str	r1, [r0, #156]	; 0x9c
   275ec:	bx	lr

000275f0 <myhtml_check_tag_parser@@Base>:
   275f0:	push	{r4, r5, r6, r7, r8, lr}
   275f4:	sub	sp, sp, #8
   275f8:	mov	r5, r0
   275fc:	mov	r4, r1
   27600:	mov	r8, r2
   27604:	mov	r7, r3
   27608:	ldr	r6, [r0, #28]
   2760c:	ldr	r2, [r1, #28]
   27610:	cmp	r2, r3
   27614:	bls	27648 <myhtml_check_tag_parser@@Base+0x58>
   27618:	ldr	r1, [r1, #24]
   2761c:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   27620:	ldr	r2, [r4, #28]
   27624:	mov	r1, r0
   27628:	mov	r0, r6
   2762c:	bl	10b74 <myhtml_tag_get_by_name@plt>
   27630:	cmp	r0, #0
   27634:	beq	27664 <myhtml_check_tag_parser@@Base+0x74>
   27638:	ldr	r3, [r0]
   2763c:	str	r3, [r4]
   27640:	add	sp, sp, #8
   27644:	pop	{r4, r5, r6, r7, r8, pc}
   27648:	ldr	r1, [r1, #24]
   2764c:	ldr	r3, [r0, #192]	; 0xc0
   27650:	sub	r1, r1, r3
   27654:	add	r1, r8, r1
   27658:	mov	r0, r6
   2765c:	bl	10b74 <myhtml_tag_get_by_name@plt>
   27660:	b	27630 <myhtml_check_tag_parser@@Base+0x40>
   27664:	ldr	r2, [r4, #28]
   27668:	cmp	r7, r2
   2766c:	bcs	276b4 <myhtml_check_tag_parser@@Base+0xc4>
   27670:	ldr	r1, [r4, #24]
   27674:	mov	r0, r5
   27678:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   2767c:	mov	r3, #1
   27680:	str	r3, [sp]
   27684:	mov	r3, #0
   27688:	ldr	r2, [r4, #28]
   2768c:	mov	r1, r0
   27690:	mov	r0, r6
   27694:	bl	10010 <myhtml_tag_add@plt>
   27698:	str	r0, [r4]
   2769c:	mov	r3, #1
   276a0:	mov	r2, r3
   276a4:	ldr	r1, [r4]
   276a8:	mov	r0, r6
   276ac:	bl	ff98 <myhtml_tag_set_category@plt>
   276b0:	b	27640 <myhtml_check_tag_parser@@Base+0x50>
   276b4:	ldr	r1, [r4, #24]
   276b8:	ldr	r3, [r5, #192]	; 0xc0
   276bc:	sub	r1, r1, r3
   276c0:	mov	r3, #1
   276c4:	str	r3, [sp]
   276c8:	mov	r3, #0
   276cc:	add	r1, r8, r1
   276d0:	mov	r0, r6
   276d4:	bl	10010 <myhtml_tag_add@plt>
   276d8:	str	r0, [r4]
   276dc:	b	2769c <myhtml_check_tag_parser@@Base+0xac>

000276e0 <myhtml_tokenizer_queue_create_text_node_if_need@@Base>:
   276e0:	push	{r4, lr}
   276e4:	mov	r4, r0
   276e8:	mov	r0, r1
   276ec:	ldr	r2, [r1]
   276f0:	cmp	r2, #0
   276f4:	popne	{r4, pc}
   276f8:	ldr	r2, [r1, #24]
   276fc:	cmp	r2, r3
   27700:	popcs	{r4, pc}
   27704:	ldr	r1, [r1, #32]
   27708:	ldr	ip, [r0, #48]	; 0x30
   2770c:	ldr	lr, [sp, #8]
   27710:	orr	ip, ip, lr
   27714:	str	ip, [r0, #48]	; 0x30
   27718:	mov	ip, #1
   2771c:	str	ip, [r0]
   27720:	str	r2, [r0, #32]
   27724:	sub	r3, r3, r2
   27728:	str	r3, [r0, #36]	; 0x24
   2772c:	str	r3, [r0, #28]
   27730:	mov	r2, r0
   27734:	mov	r0, r4
   27738:	bl	10028 <myhtml_queue_add@plt>
   2773c:	cmp	r0, #0
   27740:	ldreq	r0, [r4, #64]	; 0x40
   27744:	movne	r0, #0
   27748:	pop	{r4, pc}

0002774c <myhtml_tokenizer_state_tag_open@@Base>:
   2774c:	push	{r4, r5, lr}
   27750:	sub	sp, sp, #12
   27754:	mov	r5, r0
   27758:	mov	r4, r3
   2775c:	ldrb	r3, [r2, r3]
   27760:	ldr	r0, [pc, #296]	; 27890 <myhtml_tokenizer_state_tag_open@@Base+0x144>
   27764:	add	r0, pc, r0
   27768:	ldrb	r0, [r0, r3]
   2776c:	cmp	r0, #1
   27770:	beq	277c0 <myhtml_tokenizer_state_tag_open@@Base+0x74>
   27774:	cmp	r3, #33	; 0x21
   27778:	beq	27808 <myhtml_tokenizer_state_tag_open@@Base+0xbc>
   2777c:	cmp	r3, #47	; 0x2f
   27780:	addeq	r0, r4, #1
   27784:	moveq	r3, #8
   27788:	streq	r3, [r5, #160]	; 0xa0
   2778c:	beq	277b8 <myhtml_tokenizer_state_tag_open@@Base+0x6c>
   27790:	cmp	r3, #63	; 0x3f
   27794:	beq	27848 <myhtml_tokenizer_state_tag_open@@Base+0xfc>
   27798:	ldr	r3, [r1, #48]	; 0x30
   2779c:	ldr	r2, [r1, #48]	; 0x30
   277a0:	and	r3, r3, #8
   277a4:	eor	r3, r3, r2
   277a8:	str	r3, [r1, #48]	; 0x30
   277ac:	mov	r3, #0
   277b0:	str	r3, [r5, #160]	; 0xa0
   277b4:	mov	r0, r4
   277b8:	add	sp, sp, #12
   277bc:	pop	{r4, r5, pc}
   277c0:	ldr	r3, [r5, #192]	; 0xc0
   277c4:	sub	r3, r3, #1
   277c8:	mov	r0, #512	; 0x200
   277cc:	str	r0, [sp]
   277d0:	add	r3, r3, r4
   277d4:	mov	r0, r5
   277d8:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   277dc:	cmp	r0, #0
   277e0:	moveq	r3, #69	; 0x45
   277e4:	streq	r3, [r5, #160]	; 0xa0
   277e8:	moveq	r0, #0
   277ec:	ldrne	r3, [r5, #192]	; 0xc0
   277f0:	addne	r3, r3, r4
   277f4:	strne	r3, [r0, #24]
   277f8:	movne	r3, #9
   277fc:	strne	r3, [r5, #160]	; 0xa0
   27800:	movne	r0, r4
   27804:	b	277b8 <myhtml_tokenizer_state_tag_open@@Base+0x6c>
   27808:	ldr	r3, [r5, #192]	; 0xc0
   2780c:	sub	r3, r3, #1
   27810:	mov	r0, #512	; 0x200
   27814:	str	r0, [sp]
   27818:	add	r3, r3, r4
   2781c:	mov	r0, r5
   27820:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   27824:	subs	r2, r0, #0
   27828:	moveq	r3, #69	; 0x45
   2782c:	addne	r0, r4, #1
   27830:	ldrne	r3, [r5, #192]	; 0xc0
   27834:	addne	r3, r3, r0
   27838:	strne	r3, [r2, #24]
   2783c:	movne	r3, #44	; 0x2c
   27840:	str	r3, [r5, #160]	; 0xa0
   27844:	b	277b8 <myhtml_tokenizer_state_tag_open@@Base+0x6c>
   27848:	ldr	r3, [r5, #192]	; 0xc0
   2784c:	sub	r3, r3, #1
   27850:	mov	r0, #512	; 0x200
   27854:	str	r0, [sp]
   27858:	add	r3, r3, r4
   2785c:	mov	r0, r5
   27860:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   27864:	cmp	r0, #0
   27868:	moveq	r3, #69	; 0x45
   2786c:	streq	r3, [r5, #160]	; 0xa0
   27870:	moveq	r0, #0
   27874:	ldrne	r3, [r5, #192]	; 0xc0
   27878:	addne	r3, r3, r4
   2787c:	strne	r3, [r0, #24]
   27880:	movne	r3, #43	; 0x2b
   27884:	strne	r3, [r5, #160]	; 0xa0
   27888:	movne	r0, r4
   2788c:	b	277b8 <myhtml_tokenizer_state_tag_open@@Base+0x6c>
   27890:	strheq	r7, [sp], -r8

00027894 <myhtml_tokenizer_state_end_tag_open@@Base>:
   27894:	push	{r4, r5, lr}
   27898:	sub	sp, sp, #12
   2789c:	mov	r5, r0
   278a0:	mov	r4, r3
   278a4:	ldrb	r3, [r2, r3]
   278a8:	ldr	r0, [pc, #196]	; 27974 <myhtml_tokenizer_state_end_tag_open@@Base+0xe0>
   278ac:	add	r0, pc, r0
   278b0:	ldrb	r0, [r0, r3]
   278b4:	cmp	r0, #1
   278b8:	beq	27910 <myhtml_tokenizer_state_end_tag_open@@Base+0x7c>
   278bc:	cmp	r3, #62	; 0x3e
   278c0:	beq	27964 <myhtml_tokenizer_state_end_tag_open@@Base+0xd0>
   278c4:	ldr	r3, [r5, #192]	; 0xc0
   278c8:	sub	r3, r3, #2
   278cc:	mov	r0, #512	; 0x200
   278d0:	str	r0, [sp]
   278d4:	add	r3, r3, r4
   278d8:	mov	r0, r5
   278dc:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   278e0:	cmp	r0, #0
   278e4:	moveq	r3, #69	; 0x45
   278e8:	streq	r3, [r5, #160]	; 0xa0
   278ec:	moveq	r0, #0
   278f0:	ldrne	r3, [r5, #192]	; 0xc0
   278f4:	addne	r3, r3, r4
   278f8:	strne	r3, [r0, #24]
   278fc:	movne	r3, #43	; 0x2b
   27900:	strne	r3, [r5, #160]	; 0xa0
   27904:	movne	r0, r4
   27908:	add	sp, sp, #12
   2790c:	pop	{r4, r5, pc}
   27910:	ldr	r3, [r5, #192]	; 0xc0
   27914:	sub	r3, r3, #2
   27918:	mov	r0, #512	; 0x200
   2791c:	str	r0, [sp]
   27920:	add	r3, r3, r4
   27924:	mov	r0, r5
   27928:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2792c:	cmp	r0, #0
   27930:	moveq	r3, #69	; 0x45
   27934:	streq	r3, [r5, #160]	; 0xa0
   27938:	moveq	r0, #0
   2793c:	beq	27908 <myhtml_tokenizer_state_end_tag_open@@Base+0x74>
   27940:	ldr	r3, [r5, #192]	; 0xc0
   27944:	add	r3, r3, r4
   27948:	str	r3, [r0, #24]
   2794c:	mov	r3, #1
   27950:	str	r3, [r0, #48]	; 0x30
   27954:	mov	r3, #9
   27958:	str	r3, [r5, #160]	; 0xa0
   2795c:	mov	r0, r4
   27960:	b	27908 <myhtml_tokenizer_state_end_tag_open@@Base+0x74>
   27964:	add	r0, r4, #1
   27968:	mov	r3, #0
   2796c:	str	r3, [r5, #160]	; 0xa0
   27970:	b	27908 <myhtml_tokenizer_state_end_tag_open@@Base+0x74>
   27974:	andeq	r6, sp, r0, ror pc

00027978 <myhtml_tokenizer_set_state@@Base>:
   27978:	ldr	r3, [r1, #48]	; 0x30
   2797c:	tst	r3, #1
   27980:	bne	279c4 <myhtml_tokenizer_set_state@@Base+0x4c>
   27984:	ldr	r1, [r1]
   27988:	cmp	r1, #93	; 0x5d
   2798c:	bne	279a8 <myhtml_tokenizer_set_state@@Base+0x30>
   27990:	ldr	r3, [r0, #180]	; 0xb4
   27994:	tst	r3, #1
   27998:	bne	279a8 <myhtml_tokenizer_set_state@@Base+0x30>
   2799c:	mov	r3, #0
   279a0:	str	r3, [r0, #160]	; 0xa0
   279a4:	bx	lr
   279a8:	push	{r4, lr}
   279ac:	mov	r4, r0
   279b0:	ldr	r0, [r0, #28]
   279b4:	bl	10a24 <myhtml_tag_get_by_id@plt>
   279b8:	ldr	r3, [r0, #12]
   279bc:	str	r3, [r4, #160]	; 0xa0
   279c0:	pop	{r4, pc}
   279c4:	mov	r3, #0
   279c8:	str	r3, [r0, #160]	; 0xa0
   279cc:	bx	lr

000279d0 <myhtml_tokenizer_state_tag_name@@Base>:
   279d0:	push	{r4, r5, r6, lr}
   279d4:	mov	r4, r3
   279d8:	ldr	ip, [sp, #16]
   279dc:	cmp	r3, ip
   279e0:	bcs	27ae8 <myhtml_tokenizer_state_tag_name@@Base+0x118>
   279e4:	mov	r6, r0
   279e8:	mov	r5, r1
   279ec:	add	r1, r2, r3
   279f0:	ldrb	r3, [r2, r3]
   279f4:	ldr	r0, [pc, #296]	; 27b24 <myhtml_tokenizer_state_tag_name@@Base+0x154>
   279f8:	add	r0, pc, r0
   279fc:	ldrb	r0, [r0, r3]
   27a00:	cmp	r0, #2
   27a04:	beq	27ab8 <myhtml_tokenizer_state_tag_name@@Base+0xe8>
   27a08:	cmp	r3, #47	; 0x2f
   27a0c:	beq	27af0 <myhtml_tokenizer_state_tag_name@@Base+0x120>
   27a10:	ldr	lr, [pc, #272]	; 27b28 <myhtml_tokenizer_state_tag_name@@Base+0x158>
   27a14:	add	lr, pc, lr
   27a18:	cmp	r3, #62	; 0x3e
   27a1c:	beq	27a4c <myhtml_tokenizer_state_tag_name@@Base+0x7c>
   27a20:	add	r4, r4, #1
   27a24:	cmp	ip, r4
   27a28:	beq	27ae8 <myhtml_tokenizer_state_tag_name@@Base+0x118>
   27a2c:	ldrb	r3, [r1, #1]!
   27a30:	ldrb	r0, [lr, r3]
   27a34:	cmp	r0, #2
   27a38:	beq	27ab8 <myhtml_tokenizer_state_tag_name@@Base+0xe8>
   27a3c:	cmp	r3, #47	; 0x2f
   27a40:	beq	27af0 <myhtml_tokenizer_state_tag_name@@Base+0x120>
   27a44:	cmp	r3, #62	; 0x3e
   27a48:	bne	27a20 <myhtml_tokenizer_state_tag_name@@Base+0x50>
   27a4c:	ldr	r3, [r6, #192]	; 0xc0
   27a50:	ldr	r1, [r5, #24]
   27a54:	sub	r3, r3, r1
   27a58:	add	r3, r3, r4
   27a5c:	str	r3, [r5, #28]
   27a60:	mov	r3, r4
   27a64:	mov	r1, r5
   27a68:	mov	r0, r6
   27a6c:	bl	10c40 <myhtml_check_tag_parser@plt>
   27a70:	mov	r1, r5
   27a74:	mov	r0, r6
   27a78:	bl	10b44 <myhtml_tokenizer_set_state@plt>
   27a7c:	add	r4, r4, #1
   27a80:	ldr	r3, [r6, #192]	; 0xc0
   27a84:	ldr	r2, [r5, #32]
   27a88:	sub	r3, r3, r2
   27a8c:	add	r3, r3, r4
   27a90:	str	r3, [r5, #36]	; 0x24
   27a94:	mov	r2, r5
   27a98:	mov	r1, r4
   27a9c:	mov	r0, r6
   27aa0:	bl	10028 <myhtml_queue_add@plt>
   27aa4:	cmp	r0, #0
   27aa8:	movne	r3, #69	; 0x45
   27aac:	strne	r3, [r6, #160]	; 0xa0
   27ab0:	movne	r4, #0
   27ab4:	b	27ae8 <myhtml_tokenizer_state_tag_name@@Base+0x118>
   27ab8:	ldr	r3, [r6, #192]	; 0xc0
   27abc:	ldr	r1, [r5, #24]
   27ac0:	sub	r3, r3, r1
   27ac4:	add	r3, r3, r4
   27ac8:	str	r3, [r5, #28]
   27acc:	mov	r3, r4
   27ad0:	mov	r1, r5
   27ad4:	mov	r0, r6
   27ad8:	bl	10c40 <myhtml_check_tag_parser@plt>
   27adc:	add	r4, r4, #1
   27ae0:	mov	r3, #33	; 0x21
   27ae4:	str	r3, [r6, #160]	; 0xa0
   27ae8:	mov	r0, r4
   27aec:	pop	{r4, r5, r6, pc}
   27af0:	ldr	r3, [r6, #192]	; 0xc0
   27af4:	ldr	r1, [r5, #24]
   27af8:	sub	r3, r3, r1
   27afc:	add	r3, r3, r4
   27b00:	str	r3, [r5, #28]
   27b04:	mov	r3, r4
   27b08:	mov	r1, r5
   27b0c:	mov	r0, r6
   27b10:	bl	10c40 <myhtml_check_tag_parser@plt>
   27b14:	add	r4, r4, #1
   27b18:	mov	r3, #42	; 0x2a
   27b1c:	str	r3, [r6, #160]	; 0xa0
   27b20:	b	27ae8 <myhtml_tokenizer_state_tag_name@@Base+0x118>
   27b24:	andeq	r6, sp, r4, lsr #28
   27b28:	andeq	r6, sp, r8, lsl #28

00027b2c <myhtml_tokenizer_state_self_closing_start_tag@@Base>:
   27b2c:	push	{r4, r5, r6, lr}
   27b30:	ldrb	ip, [r2, r3]
   27b34:	cmp	ip, #62	; 0x3e
   27b38:	movne	r2, #33	; 0x21
   27b3c:	strne	r2, [r0, #160]	; 0xa0
   27b40:	movne	r4, r3
   27b44:	beq	27b50 <myhtml_tokenizer_state_self_closing_start_tag@@Base+0x24>
   27b48:	mov	r0, r4
   27b4c:	pop	{r4, r5, r6, pc}
   27b50:	mov	r4, r3
   27b54:	mov	r6, r1
   27b58:	mov	r5, r0
   27b5c:	ldr	r3, [r1, #48]	; 0x30
   27b60:	orr	r3, r3, #2
   27b64:	str	r3, [r1, #48]	; 0x30
   27b68:	bl	10b44 <myhtml_tokenizer_set_state@plt>
   27b6c:	add	r4, r4, #1
   27b70:	ldr	r3, [r5, #192]	; 0xc0
   27b74:	ldr	r2, [r6, #32]
   27b78:	sub	r3, r3, r2
   27b7c:	add	r3, r3, r4
   27b80:	str	r3, [r6, #36]	; 0x24
   27b84:	mov	r2, r6
   27b88:	mov	r1, r4
   27b8c:	mov	r0, r5
   27b90:	bl	10028 <myhtml_queue_add@plt>
   27b94:	cmp	r0, #0
   27b98:	movne	r3, #69	; 0x45
   27b9c:	strne	r3, [r5, #160]	; 0xa0
   27ba0:	movne	r4, #0
   27ba4:	b	27b48 <myhtml_tokenizer_state_self_closing_start_tag@@Base+0x1c>

00027ba8 <myhtml_tokenizer_state_before_attribute_name@@Base>:
   27ba8:	push	{r4, r5, r6, lr}
   27bac:	ldr	r5, [sp, #16]
   27bb0:	add	lr, r2, r3
   27bb4:	ldrb	ip, [r2, r3]
   27bb8:	sub	ip, ip, #9
   27bbc:	uxtb	ip, ip
   27bc0:	cmp	ip, #23
   27bc4:	bhi	27cb8 <myhtml_tokenizer_state_before_attribute_name@@Base+0x110>
   27bc8:	ldr	r6, [pc, #388]	; 27d54 <myhtml_tokenizer_state_before_attribute_name@@Base+0x1ac>
   27bcc:	lsr	ip, r6, ip
   27bd0:	tst	ip, #1
   27bd4:	beq	27cb8 <myhtml_tokenizer_state_before_attribute_name@@Base+0x110>
   27bd8:	cmp	r3, r5
   27bdc:	bcs	27d4c <myhtml_tokenizer_state_before_attribute_name@@Base+0x1a4>
   27be0:	mov	r4, r3
   27be4:	mov	r3, r6
   27be8:	b	27bf8 <myhtml_tokenizer_state_before_attribute_name@@Base+0x50>
   27bec:	lsr	ip, r3, ip
   27bf0:	tst	ip, #1
   27bf4:	beq	27c18 <myhtml_tokenizer_state_before_attribute_name@@Base+0x70>
   27bf8:	add	r4, r4, #1
   27bfc:	cmp	r5, r4
   27c00:	beq	27cb0 <myhtml_tokenizer_state_before_attribute_name@@Base+0x108>
   27c04:	ldrb	ip, [lr, #1]!
   27c08:	sub	ip, ip, #9
   27c0c:	uxtb	ip, ip
   27c10:	cmp	ip, #23
   27c14:	bls	27bec <myhtml_tokenizer_state_before_attribute_name@@Base+0x44>
   27c18:	add	ip, r2, r4
   27c1c:	ldrb	r3, [r2, r4]
   27c20:	cmp	r3, #62	; 0x3e
   27c24:	beq	27ccc <myhtml_tokenizer_state_before_attribute_name@@Base+0x124>
   27c28:	cmp	r3, #47	; 0x2f
   27c2c:	beq	27d14 <myhtml_tokenizer_state_before_attribute_name@@Base+0x16c>
   27c30:	ldr	r3, [r1, #40]	; 0x28
   27c34:	cmp	r3, #0
   27c38:	beq	27d28 <myhtml_tokenizer_state_before_attribute_name@@Base+0x180>
   27c3c:	ldr	r3, [r1, #44]	; 0x2c
   27c40:	ldr	r2, [r0, #56]	; 0x38
   27c44:	str	r2, [r3]
   27c48:	ldr	r3, [r1, #44]	; 0x2c
   27c4c:	ldr	r2, [r3]
   27c50:	str	r3, [r2, #4]
   27c54:	ldr	r3, [r1, #44]	; 0x2c
   27c58:	ldr	r3, [r3]
   27c5c:	str	r3, [r1, #44]	; 0x2c
   27c60:	mov	r2, #0
   27c64:	str	r2, [r3]
   27c68:	ldr	r3, [r1, #44]	; 0x2c
   27c6c:	str	r3, [r0, #56]	; 0x38
   27c70:	ldr	r2, [r0, #56]	; 0x38
   27c74:	ldr	r3, [r0, #192]	; 0xc0
   27c78:	add	r3, r3, r4
   27c7c:	str	r3, [r2, #48]	; 0x30
   27c80:	ldr	r2, [r0, #56]	; 0x38
   27c84:	mov	r3, #0
   27c88:	str	r3, [r2, #52]	; 0x34
   27c8c:	ldr	r2, [r0, #56]	; 0x38
   27c90:	str	r3, [r2, #56]	; 0x38
   27c94:	ldr	r2, [r0, #56]	; 0x38
   27c98:	str	r3, [r2, #60]	; 0x3c
   27c9c:	ldrb	r3, [ip]
   27ca0:	cmp	r3, #61	; 0x3d
   27ca4:	addeq	r4, r4, #1
   27ca8:	mov	r3, #34	; 0x22
   27cac:	str	r3, [r0, #160]	; 0xa0
   27cb0:	mov	r0, r4
   27cb4:	pop	{r4, r5, r6, pc}
   27cb8:	cmp	r3, r5
   27cbc:	movcs	r4, r3
   27cc0:	bcs	27cb0 <myhtml_tokenizer_state_before_attribute_name@@Base+0x108>
   27cc4:	mov	r4, r3
   27cc8:	b	27c18 <myhtml_tokenizer_state_before_attribute_name@@Base+0x70>
   27ccc:	mov	r5, r1
   27cd0:	mov	r6, r0
   27cd4:	bl	10b44 <myhtml_tokenizer_set_state@plt>
   27cd8:	add	r4, r4, #1
   27cdc:	ldr	r3, [r6, #192]	; 0xc0
   27ce0:	ldr	r2, [r5, #32]
   27ce4:	sub	r3, r3, r2
   27ce8:	add	r3, r3, r4
   27cec:	str	r3, [r5, #36]	; 0x24
   27cf0:	mov	r2, r5
   27cf4:	mov	r1, r4
   27cf8:	mov	r0, r6
   27cfc:	bl	10028 <myhtml_queue_add@plt>
   27d00:	cmp	r0, #0
   27d04:	movne	r3, #69	; 0x45
   27d08:	strne	r3, [r6, #160]	; 0xa0
   27d0c:	movne	r4, #0
   27d10:	b	27cb0 <myhtml_tokenizer_state_before_attribute_name@@Base+0x108>
   27d14:	ldr	r3, [r1, #48]	; 0x30
   27d18:	orr	r3, r3, #2
   27d1c:	str	r3, [r1, #48]	; 0x30
   27d20:	add	r4, r4, #1
   27d24:	b	27cb0 <myhtml_tokenizer_state_before_attribute_name@@Base+0x108>
   27d28:	ldr	r3, [r0, #56]	; 0x38
   27d2c:	str	r3, [r1, #40]	; 0x28
   27d30:	str	r3, [r1, #44]	; 0x2c
   27d34:	str	r3, [r0, #56]	; 0x38
   27d38:	mov	r2, #0
   27d3c:	str	r2, [r3]
   27d40:	ldr	r3, [r0, #56]	; 0x38
   27d44:	str	r2, [r3, #4]
   27d48:	b	27c70 <myhtml_tokenizer_state_before_attribute_name@@Base+0xc8>
   27d4c:	mov	r4, r3
   27d50:	b	27cb0 <myhtml_tokenizer_state_before_attribute_name@@Base+0x108>
   27d54:	addeq	r0, r0, fp, lsl r0

00027d58 <myhtml_tokenizer_state_attribute_name@@Base>:
   27d58:	push	{r4, r5, r6, lr}
   27d5c:	mov	r5, r0
   27d60:	mov	r4, r3
   27d64:	ldr	r0, [sp, #16]
   27d68:	cmp	r3, r0
   27d6c:	bcs	27e80 <myhtml_tokenizer_state_attribute_name@@Base+0x128>
   27d70:	mov	r6, r1
   27d74:	add	r1, r2, r3
   27d78:	ldrb	r2, [r2, r3]
   27d7c:	sub	r3, r2, #9
   27d80:	uxtb	r3, r3
   27d84:	cmp	r3, #23
   27d88:	bhi	27d9c <myhtml_tokenizer_state_attribute_name@@Base+0x44>
   27d8c:	ldr	ip, [pc, #404]	; 27f28 <myhtml_tokenizer_state_attribute_name@@Base+0x1d0>
   27d90:	lsr	r3, ip, r3
   27d94:	tst	r3, #1
   27d98:	bne	27e5c <myhtml_tokenizer_state_attribute_name@@Base+0x104>
   27d9c:	cmp	r2, #61	; 0x3d
   27da0:	beq	27e88 <myhtml_tokenizer_state_attribute_name@@Base+0x130>
   27da4:	cmp	r2, #62	; 0x3e
   27da8:	ldrne	ip, [pc, #376]	; 27f28 <myhtml_tokenizer_state_attribute_name@@Base+0x1d0>
   27dac:	bne	27e30 <myhtml_tokenizer_state_attribute_name@@Base+0xd8>
   27db0:	ldr	r2, [r5, #56]	; 0x38
   27db4:	ldr	r3, [r5, #192]	; 0xc0
   27db8:	ldr	r1, [r2, #48]	; 0x30
   27dbc:	sub	r3, r3, r1
   27dc0:	add	r3, r3, r4
   27dc4:	str	r3, [r2, #52]	; 0x34
   27dc8:	mov	r1, r6
   27dcc:	mov	r0, r5
   27dd0:	bl	10b44 <myhtml_tokenizer_set_state@plt>
   27dd4:	add	r4, r4, #1
   27dd8:	ldr	r3, [r5, #192]	; 0xc0
   27ddc:	ldr	r2, [r6, #32]
   27de0:	sub	r3, r3, r2
   27de4:	add	r3, r3, r4
   27de8:	str	r3, [r6, #36]	; 0x24
   27dec:	mov	r2, r6
   27df0:	mov	r1, r4
   27df4:	mov	r0, r5
   27df8:	bl	10028 <myhtml_queue_add@plt>
   27dfc:	cmp	r0, #0
   27e00:	beq	27eb0 <myhtml_tokenizer_state_attribute_name@@Base+0x158>
   27e04:	mov	r3, #69	; 0x45
   27e08:	str	r3, [r5, #160]	; 0xa0
   27e0c:	mov	r4, #0
   27e10:	b	27e80 <myhtml_tokenizer_state_attribute_name@@Base+0x128>
   27e14:	lsr	r3, ip, r3
   27e18:	tst	r3, #1
   27e1c:	bne	27e5c <myhtml_tokenizer_state_attribute_name@@Base+0x104>
   27e20:	cmp	r2, #61	; 0x3d
   27e24:	beq	27e88 <myhtml_tokenizer_state_attribute_name@@Base+0x130>
   27e28:	cmp	r2, #62	; 0x3e
   27e2c:	beq	27db0 <myhtml_tokenizer_state_attribute_name@@Base+0x58>
   27e30:	cmp	r2, #47	; 0x2f
   27e34:	beq	27ed4 <myhtml_tokenizer_state_attribute_name@@Base+0x17c>
   27e38:	add	r4, r4, #1
   27e3c:	cmp	r0, r4
   27e40:	beq	27e80 <myhtml_tokenizer_state_attribute_name@@Base+0x128>
   27e44:	ldrb	r2, [r1, #1]!
   27e48:	sub	r3, r2, #9
   27e4c:	uxtb	r3, r3
   27e50:	cmp	r3, #23
   27e54:	bhi	27e20 <myhtml_tokenizer_state_attribute_name@@Base+0xc8>
   27e58:	b	27e14 <myhtml_tokenizer_state_attribute_name@@Base+0xbc>
   27e5c:	ldr	r2, [r5, #56]	; 0x38
   27e60:	ldr	r3, [r5, #192]	; 0xc0
   27e64:	ldr	r1, [r2, #48]	; 0x30
   27e68:	sub	r3, r3, r1
   27e6c:	add	r3, r3, r4
   27e70:	str	r3, [r2, #52]	; 0x34
   27e74:	mov	r3, #35	; 0x23
   27e78:	str	r3, [r5, #160]	; 0xa0
   27e7c:	add	r4, r4, #1
   27e80:	mov	r0, r4
   27e84:	pop	{r4, r5, r6, pc}
   27e88:	ldr	r2, [r5, #56]	; 0x38
   27e8c:	ldr	r3, [r5, #192]	; 0xc0
   27e90:	ldr	r1, [r2, #48]	; 0x30
   27e94:	sub	r3, r3, r1
   27e98:	add	r3, r3, r4
   27e9c:	str	r3, [r2, #52]	; 0x34
   27ea0:	mov	r3, #36	; 0x24
   27ea4:	str	r3, [r5, #160]	; 0xa0
   27ea8:	add	r4, r4, #1
   27eac:	b	27e80 <myhtml_tokenizer_state_attribute_name@@Base+0x128>
   27eb0:	ldr	r0, [r5, #8]
   27eb4:	ldr	r1, [r0, #16]
   27eb8:	bl	10904 <myhtml_token_attr_create@plt>
   27ebc:	str	r0, [r5, #56]	; 0x38
   27ec0:	cmp	r0, #0
   27ec4:	moveq	r3, #69	; 0x45
   27ec8:	streq	r3, [r5, #160]	; 0xa0
   27ecc:	moveq	r4, #0
   27ed0:	b	27e80 <myhtml_tokenizer_state_attribute_name@@Base+0x128>
   27ed4:	ldr	r2, [r5, #56]	; 0x38
   27ed8:	ldr	r3, [r5, #192]	; 0xc0
   27edc:	ldr	r1, [r2, #48]	; 0x30
   27ee0:	sub	r3, r3, r1
   27ee4:	add	r3, r3, r4
   27ee8:	str	r3, [r2, #52]	; 0x34
   27eec:	ldr	r3, [r6, #48]	; 0x30
   27ef0:	orr	r3, r3, #2
   27ef4:	str	r3, [r6, #48]	; 0x30
   27ef8:	mov	r3, #33	; 0x21
   27efc:	str	r3, [r5, #160]	; 0xa0
   27f00:	ldr	r0, [r5, #8]
   27f04:	ldr	r1, [r0, #16]
   27f08:	bl	10904 <myhtml_token_attr_create@plt>
   27f0c:	str	r0, [r5, #56]	; 0x38
   27f10:	cmp	r0, #0
   27f14:	moveq	r3, #69	; 0x45
   27f18:	streq	r3, [r5, #160]	; 0xa0
   27f1c:	moveq	r4, #0
   27f20:	addne	r4, r4, #1
   27f24:	b	27e80 <myhtml_tokenizer_state_attribute_name@@Base+0x128>
   27f28:	addeq	r0, r0, fp, lsl r0

00027f2c <myhtml_tokenizer_state_after_attribute_name@@Base>:
   27f2c:	push	{r4, r5, r6, lr}
   27f30:	mov	r5, r0
   27f34:	mov	r4, r3
   27f38:	ldr	r0, [sp, #16]
   27f3c:	cmp	r3, r0
   27f40:	bcs	280f8 <myhtml_tokenizer_state_after_attribute_name@@Base+0x1cc>
   27f44:	mov	r6, r1
   27f48:	add	r1, r2, r3
   27f4c:	ldrb	r3, [r2, r3]
   27f50:	cmp	r3, #61	; 0x3d
   27f54:	beq	27f8c <myhtml_tokenizer_state_after_attribute_name@@Base+0x60>
   27f58:	cmp	r3, #62	; 0x3e
   27f5c:	beq	27f9c <myhtml_tokenizer_state_after_attribute_name@@Base+0x70>
   27f60:	sub	r2, r3, #34	; 0x22
   27f64:	uxtb	r2, r2
   27f68:	cmp	r2, #26
   27f6c:	bhi	27f80 <myhtml_tokenizer_state_after_attribute_name@@Base+0x54>
   27f70:	ldr	ip, [pc, #600]	; 281d0 <myhtml_tokenizer_state_after_attribute_name@@Base+0x2a4>
   27f74:	lsr	r2, ip, r2
   27f78:	tst	r2, #1
   27f7c:	bne	28064 <myhtml_tokenizer_state_after_attribute_name@@Base+0x138>
   27f80:	ldr	ip, [pc, #588]	; 281d4 <myhtml_tokenizer_state_after_attribute_name@@Base+0x2a8>
   27f84:	ldr	lr, [pc, #580]	; 281d0 <myhtml_tokenizer_state_after_attribute_name@@Base+0x2a4>
   27f88:	b	28014 <myhtml_tokenizer_state_after_attribute_name@@Base+0xe8>
   27f8c:	mov	r3, #36	; 0x24
   27f90:	str	r3, [r5, #160]	; 0xa0
   27f94:	add	r4, r4, #1
   27f98:	b	280f8 <myhtml_tokenizer_state_after_attribute_name@@Base+0x1cc>
   27f9c:	mov	r1, r6
   27fa0:	mov	r0, r5
   27fa4:	bl	10b44 <myhtml_tokenizer_set_state@plt>
   27fa8:	add	r4, r4, #1
   27fac:	ldr	r3, [r5, #192]	; 0xc0
   27fb0:	ldr	r2, [r6, #32]
   27fb4:	sub	r3, r3, r2
   27fb8:	add	r3, r3, r4
   27fbc:	str	r3, [r6, #36]	; 0x24
   27fc0:	mov	r2, r6
   27fc4:	mov	r1, r4
   27fc8:	mov	r0, r5
   27fcc:	bl	10028 <myhtml_queue_add@plt>
   27fd0:	cmp	r0, #0
   27fd4:	movne	r3, #69	; 0x45
   27fd8:	strne	r3, [r5, #160]	; 0xa0
   27fdc:	movne	r4, #0
   27fe0:	bne	280f8 <myhtml_tokenizer_state_after_attribute_name@@Base+0x1cc>
   27fe4:	ldr	r0, [r5, #8]
   27fe8:	ldr	r1, [r0, #16]
   27fec:	bl	10904 <myhtml_token_attr_create@plt>
   27ff0:	str	r0, [r5, #56]	; 0x38
   27ff4:	cmp	r0, #0
   27ff8:	moveq	r3, #69	; 0x45
   27ffc:	streq	r3, [r5, #160]	; 0xa0
   28000:	moveq	r4, #0
   28004:	b	280f8 <myhtml_tokenizer_state_after_attribute_name@@Base+0x1cc>
   28008:	lsr	r2, lr, r2
   2800c:	tst	r2, #1
   28010:	bne	28064 <myhtml_tokenizer_state_after_attribute_name@@Base+0x138>
   28014:	sub	r3, r3, #9
   28018:	uxtb	r3, r3
   2801c:	cmp	r3, #23
   28020:	bhi	2811c <myhtml_tokenizer_state_after_attribute_name@@Base+0x1f0>
   28024:	lsr	r3, ip, r3
   28028:	tst	r3, #1
   2802c:	beq	2811c <myhtml_tokenizer_state_after_attribute_name@@Base+0x1f0>
   28030:	add	r4, r4, #1
   28034:	cmp	r0, r4
   28038:	beq	280f8 <myhtml_tokenizer_state_after_attribute_name@@Base+0x1cc>
   2803c:	ldrb	r3, [r1, #1]!
   28040:	cmp	r3, #61	; 0x3d
   28044:	beq	27f8c <myhtml_tokenizer_state_after_attribute_name@@Base+0x60>
   28048:	cmp	r3, #62	; 0x3e
   2804c:	beq	27f9c <myhtml_tokenizer_state_after_attribute_name@@Base+0x70>
   28050:	sub	r2, r3, #34	; 0x22
   28054:	uxtb	r2, r2
   28058:	cmp	r2, #26
   2805c:	bhi	28014 <myhtml_tokenizer_state_after_attribute_name@@Base+0xe8>
   28060:	b	28008 <myhtml_tokenizer_state_after_attribute_name@@Base+0xdc>
   28064:	ldr	r0, [r5, #8]
   28068:	ldr	r1, [r0, #16]
   2806c:	bl	10904 <myhtml_token_attr_create@plt>
   28070:	str	r0, [r5, #56]	; 0x38
   28074:	cmp	r0, #0
   28078:	moveq	r3, #69	; 0x45
   2807c:	streq	r3, [r5, #160]	; 0xa0
   28080:	moveq	r4, #0
   28084:	beq	280f8 <myhtml_tokenizer_state_after_attribute_name@@Base+0x1cc>
   28088:	ldr	r3, [r6, #40]	; 0x28
   2808c:	cmp	r3, #0
   28090:	beq	28100 <myhtml_tokenizer_state_after_attribute_name@@Base+0x1d4>
   28094:	ldr	r3, [r6, #44]	; 0x2c
   28098:	str	r0, [r3]
   2809c:	ldr	r3, [r6, #44]	; 0x2c
   280a0:	ldr	r2, [r3]
   280a4:	str	r3, [r2, #4]
   280a8:	ldr	r3, [r6, #44]	; 0x2c
   280ac:	ldr	r3, [r3]
   280b0:	str	r3, [r6, #44]	; 0x2c
   280b4:	mov	r2, #0
   280b8:	str	r2, [r3]
   280bc:	ldr	r3, [r6, #44]	; 0x2c
   280c0:	str	r3, [r5, #56]	; 0x38
   280c4:	ldr	r2, [r5, #56]	; 0x38
   280c8:	ldr	r3, [r5, #192]	; 0xc0
   280cc:	add	r3, r3, r4
   280d0:	str	r3, [r2, #48]	; 0x30
   280d4:	ldr	r2, [r5, #56]	; 0x38
   280d8:	mov	r3, #0
   280dc:	str	r3, [r2, #52]	; 0x34
   280e0:	ldr	r2, [r5, #56]	; 0x38
   280e4:	str	r3, [r2, #56]	; 0x38
   280e8:	ldr	r2, [r5, #56]	; 0x38
   280ec:	str	r3, [r2, #60]	; 0x3c
   280f0:	mov	r3, #34	; 0x22
   280f4:	str	r3, [r5, #160]	; 0xa0
   280f8:	mov	r0, r4
   280fc:	pop	{r4, r5, r6, pc}
   28100:	str	r0, [r6, #40]	; 0x28
   28104:	str	r0, [r6, #44]	; 0x2c
   28108:	str	r0, [r5, #56]	; 0x38
   2810c:	str	r3, [r0]
   28110:	ldr	r2, [r5, #56]	; 0x38
   28114:	str	r3, [r2, #4]
   28118:	b	280c4 <myhtml_tokenizer_state_after_attribute_name@@Base+0x198>
   2811c:	ldr	r0, [r5, #8]
   28120:	ldr	r1, [r0, #16]
   28124:	bl	10904 <myhtml_token_attr_create@plt>
   28128:	str	r0, [r5, #56]	; 0x38
   2812c:	cmp	r0, #0
   28130:	moveq	r3, #69	; 0x45
   28134:	streq	r3, [r5, #160]	; 0xa0
   28138:	moveq	r4, #0
   2813c:	beq	280f8 <myhtml_tokenizer_state_after_attribute_name@@Base+0x1cc>
   28140:	ldr	r3, [r6, #40]	; 0x28
   28144:	cmp	r3, #0
   28148:	beq	281b4 <myhtml_tokenizer_state_after_attribute_name@@Base+0x288>
   2814c:	ldr	r3, [r6, #44]	; 0x2c
   28150:	str	r0, [r3]
   28154:	ldr	r3, [r6, #44]	; 0x2c
   28158:	ldr	r2, [r3]
   2815c:	str	r3, [r2, #4]
   28160:	ldr	r3, [r6, #44]	; 0x2c
   28164:	ldr	r3, [r3]
   28168:	str	r3, [r6, #44]	; 0x2c
   2816c:	mov	r2, #0
   28170:	str	r2, [r3]
   28174:	ldr	r3, [r6, #44]	; 0x2c
   28178:	str	r3, [r5, #56]	; 0x38
   2817c:	ldr	r2, [r5, #56]	; 0x38
   28180:	ldr	r3, [r5, #192]	; 0xc0
   28184:	add	r3, r3, r4
   28188:	str	r3, [r2, #48]	; 0x30
   2818c:	ldr	r2, [r5, #56]	; 0x38
   28190:	mov	r3, #0
   28194:	str	r3, [r2, #52]	; 0x34
   28198:	ldr	r2, [r5, #56]	; 0x38
   2819c:	str	r3, [r2, #56]	; 0x38
   281a0:	ldr	r2, [r5, #56]	; 0x38
   281a4:	str	r3, [r2, #60]	; 0x3c
   281a8:	mov	r3, #34	; 0x22
   281ac:	str	r3, [r5, #160]	; 0xa0
   281b0:	b	280f8 <myhtml_tokenizer_state_after_attribute_name@@Base+0x1cc>
   281b4:	str	r0, [r6, #40]	; 0x28
   281b8:	str	r0, [r6, #44]	; 0x2c
   281bc:	str	r0, [r5, #56]	; 0x38
   281c0:	str	r3, [r0]
   281c4:	ldr	r2, [r5, #56]	; 0x38
   281c8:	str	r3, [r2, #4]
   281cc:	b	2817c <myhtml_tokenizer_state_after_attribute_name@@Base+0x250>
   281d0:	streq	r0, [r0], #-33	; 0xffffffdf
   281d4:	addeq	r0, r0, fp, lsl r0

000281d8 <myhtml_tokenizer_state_before_attribute_value@@Base>:
   281d8:	push	{r4, r5, r6, lr}
   281dc:	mov	r5, r0
   281e0:	mov	r4, r3
   281e4:	ldr	r0, [sp, #16]
   281e8:	cmp	r3, r0
   281ec:	bcs	28274 <myhtml_tokenizer_state_before_attribute_value@@Base+0x9c>
   281f0:	mov	r6, r1
   281f4:	add	r1, r2, r3
   281f8:	ldrb	r2, [r2, r3]
   281fc:	cmp	r2, #62	; 0x3e
   28200:	beq	2822c <myhtml_tokenizer_state_before_attribute_value@@Base+0x54>
   28204:	sub	r3, r2, #9
   28208:	uxtb	r3, r3
   2820c:	cmp	r3, #23
   28210:	bhi	282d4 <myhtml_tokenizer_state_before_attribute_value@@Base+0xfc>
   28214:	ldr	ip, [pc, #244]	; 28310 <myhtml_tokenizer_state_before_attribute_value@@Base+0x138>
   28218:	lsr	r3, ip, r3
   2821c:	tst	r3, #1
   28220:	ldrne	ip, [pc, #232]	; 28310 <myhtml_tokenizer_state_before_attribute_value@@Base+0x138>
   28224:	bne	282ac <myhtml_tokenizer_state_before_attribute_value@@Base+0xd4>
   28228:	b	282d4 <myhtml_tokenizer_state_before_attribute_value@@Base+0xfc>
   2822c:	mov	r1, r6
   28230:	mov	r0, r5
   28234:	bl	10b44 <myhtml_tokenizer_set_state@plt>
   28238:	add	r4, r4, #1
   2823c:	ldr	r3, [r5, #192]	; 0xc0
   28240:	ldr	r2, [r6, #32]
   28244:	sub	r3, r3, r2
   28248:	add	r3, r3, r4
   2824c:	str	r3, [r6, #36]	; 0x24
   28250:	mov	r2, r6
   28254:	mov	r1, r4
   28258:	mov	r0, r5
   2825c:	bl	10028 <myhtml_queue_add@plt>
   28260:	cmp	r0, #0
   28264:	beq	2827c <myhtml_tokenizer_state_before_attribute_value@@Base+0xa4>
   28268:	mov	r3, #69	; 0x45
   2826c:	str	r3, [r5, #160]	; 0xa0
   28270:	mov	r4, #0
   28274:	mov	r0, r4
   28278:	pop	{r4, r5, r6, pc}
   2827c:	ldr	r0, [r5, #8]
   28280:	ldr	r1, [r0, #16]
   28284:	bl	10904 <myhtml_token_attr_create@plt>
   28288:	str	r0, [r5, #56]	; 0x38
   2828c:	cmp	r0, #0
   28290:	moveq	r3, #69	; 0x45
   28294:	streq	r3, [r5, #160]	; 0xa0
   28298:	moveq	r4, #0
   2829c:	b	28274 <myhtml_tokenizer_state_before_attribute_value@@Base+0x9c>
   282a0:	lsr	r3, ip, r3
   282a4:	tst	r3, #1
   282a8:	beq	282d4 <myhtml_tokenizer_state_before_attribute_value@@Base+0xfc>
   282ac:	add	r4, r4, #1
   282b0:	cmp	r0, r4
   282b4:	beq	28274 <myhtml_tokenizer_state_before_attribute_value@@Base+0x9c>
   282b8:	ldrb	r2, [r1, #1]!
   282bc:	cmp	r2, #62	; 0x3e
   282c0:	beq	2822c <myhtml_tokenizer_state_before_attribute_value@@Base+0x54>
   282c4:	sub	r3, r2, #9
   282c8:	uxtb	r3, r3
   282cc:	cmp	r3, #23
   282d0:	bls	282a0 <myhtml_tokenizer_state_before_attribute_value@@Base+0xc8>
   282d4:	cmp	r2, #34	; 0x22
   282d8:	addeq	r4, r4, #1
   282dc:	moveq	r3, #37	; 0x25
   282e0:	streq	r3, [r5, #160]	; 0xa0
   282e4:	beq	282fc <myhtml_tokenizer_state_before_attribute_value@@Base+0x124>
   282e8:	cmp	r2, #39	; 0x27
   282ec:	addeq	r4, r4, #1
   282f0:	moveq	r3, #38	; 0x26
   282f4:	movne	r3, #39	; 0x27
   282f8:	str	r3, [r5, #160]	; 0xa0
   282fc:	ldr	r2, [r5, #56]	; 0x38
   28300:	ldr	r3, [r5, #192]	; 0xc0
   28304:	add	r3, r3, r4
   28308:	str	r3, [r2, #56]	; 0x38
   2830c:	b	28274 <myhtml_tokenizer_state_before_attribute_value@@Base+0x9c>
   28310:	addeq	r0, r0, fp, lsl r0

00028314 <myhtml_tokenizer_state_attribute_value_unquoted@@Base>:
   28314:	push	{r4, r5, r6, lr}
   28318:	mov	r5, r0
   2831c:	mov	r4, r3
   28320:	ldr	r0, [sp, #16]
   28324:	cmp	r3, r0
   28328:	bcs	28444 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x130>
   2832c:	mov	r6, r1
   28330:	add	r1, r2, r3
   28334:	ldrb	ip, [r2, r3]
   28338:	sub	r3, ip, #9
   2833c:	uxtb	r3, r3
   28340:	cmp	r3, #23
   28344:	bhi	28358 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x44>
   28348:	ldr	r2, [pc, #288]	; 28470 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x15c>
   2834c:	lsr	r3, r2, r3
   28350:	tst	r3, #1
   28354:	bne	28400 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0xec>
   28358:	cmp	ip, #62	; 0x3e
   2835c:	ldrne	ip, [pc, #268]	; 28470 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x15c>
   28360:	bne	283dc <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0xc8>
   28364:	ldr	r2, [r5, #56]	; 0x38
   28368:	ldr	r3, [r5, #192]	; 0xc0
   2836c:	ldr	r1, [r2, #56]	; 0x38
   28370:	sub	r3, r3, r1
   28374:	add	r3, r3, r4
   28378:	str	r3, [r2, #60]	; 0x3c
   2837c:	mov	r1, r6
   28380:	mov	r0, r5
   28384:	bl	10b44 <myhtml_tokenizer_set_state@plt>
   28388:	add	r4, r4, #1
   2838c:	ldr	r3, [r5, #192]	; 0xc0
   28390:	ldr	r2, [r6, #32]
   28394:	sub	r3, r3, r2
   28398:	add	r3, r3, r4
   2839c:	str	r3, [r6, #36]	; 0x24
   283a0:	mov	r2, r6
   283a4:	mov	r1, r4
   283a8:	mov	r0, r5
   283ac:	bl	10028 <myhtml_queue_add@plt>
   283b0:	cmp	r0, #0
   283b4:	beq	2844c <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x138>
   283b8:	mov	r3, #69	; 0x45
   283bc:	str	r3, [r5, #160]	; 0xa0
   283c0:	mov	r4, #0
   283c4:	b	28444 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x130>
   283c8:	lsr	r3, ip, r3
   283cc:	tst	r3, #1
   283d0:	bne	28400 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0xec>
   283d4:	cmp	r2, #62	; 0x3e
   283d8:	beq	28364 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x50>
   283dc:	add	r4, r4, #1
   283e0:	cmp	r0, r4
   283e4:	beq	28444 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x130>
   283e8:	ldrb	r2, [r1, #1]!
   283ec:	sub	r3, r2, #9
   283f0:	uxtb	r3, r3
   283f4:	cmp	r3, #23
   283f8:	bhi	283d4 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0xc0>
   283fc:	b	283c8 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0xb4>
   28400:	mov	r3, #33	; 0x21
   28404:	str	r3, [r5, #160]	; 0xa0
   28408:	ldr	r2, [r5, #56]	; 0x38
   2840c:	ldr	r3, [r5, #192]	; 0xc0
   28410:	ldr	r1, [r2, #56]	; 0x38
   28414:	sub	r3, r3, r1
   28418:	add	r3, r3, r4
   2841c:	str	r3, [r2, #60]	; 0x3c
   28420:	ldr	r0, [r5, #8]
   28424:	ldr	r1, [r0, #16]
   28428:	bl	10904 <myhtml_token_attr_create@plt>
   2842c:	str	r0, [r5, #56]	; 0x38
   28430:	cmp	r0, #0
   28434:	moveq	r3, #69	; 0x45
   28438:	streq	r3, [r5, #160]	; 0xa0
   2843c:	moveq	r4, #0
   28440:	addne	r4, r4, #1
   28444:	mov	r0, r4
   28448:	pop	{r4, r5, r6, pc}
   2844c:	ldr	r0, [r5, #8]
   28450:	ldr	r1, [r0, #16]
   28454:	bl	10904 <myhtml_token_attr_create@plt>
   28458:	str	r0, [r5, #56]	; 0x38
   2845c:	cmp	r0, #0
   28460:	moveq	r3, #69	; 0x45
   28464:	streq	r3, [r5, #160]	; 0xa0
   28468:	moveq	r4, #0
   2846c:	b	28444 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x130>
   28470:	addeq	r0, r0, fp, lsl r0

00028474 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base>:
   28474:	push	{r4, r5, r6, lr}
   28478:	ldrb	r4, [r2, r3]
   2847c:	sub	ip, r4, #9
   28480:	uxtb	ip, ip
   28484:	cmp	ip, #23
   28488:	bhi	2849c <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x28>
   2848c:	ldr	lr, [pc, #144]	; 28524 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0xb0>
   28490:	lsr	ip, lr, ip
   28494:	tst	ip, #1
   28498:	bne	28510 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x9c>
   2849c:	cmp	r4, #47	; 0x2f
   284a0:	moveq	r2, #42	; 0x2a
   284a4:	streq	r2, [r0, #160]	; 0xa0
   284a8:	addeq	r4, r3, #1
   284ac:	beq	2851c <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0xa8>
   284b0:	cmp	r4, #62	; 0x3e
   284b4:	movne	r2, #33	; 0x21
   284b8:	strne	r2, [r0, #160]	; 0xa0
   284bc:	movne	r4, r3
   284c0:	bne	2851c <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0xa8>
   284c4:	mov	r4, r3
   284c8:	mov	r5, r1
   284cc:	mov	r6, r0
   284d0:	bl	10b44 <myhtml_tokenizer_set_state@plt>
   284d4:	add	r4, r4, #1
   284d8:	ldr	r3, [r6, #192]	; 0xc0
   284dc:	ldr	r2, [r5, #32]
   284e0:	sub	r3, r3, r2
   284e4:	add	r3, r3, r4
   284e8:	str	r3, [r5, #36]	; 0x24
   284ec:	mov	r2, r5
   284f0:	mov	r1, r4
   284f4:	mov	r0, r6
   284f8:	bl	10028 <myhtml_queue_add@plt>
   284fc:	cmp	r0, #0
   28500:	movne	r3, #69	; 0x45
   28504:	strne	r3, [r6, #160]	; 0xa0
   28508:	movne	r4, #0
   2850c:	b	2851c <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0xa8>
   28510:	mov	r2, #33	; 0x21
   28514:	str	r2, [r0, #160]	; 0xa0
   28518:	add	r4, r3, #1
   2851c:	mov	r0, r4
   28520:	pop	{r4, r5, r6, pc}
   28524:	addeq	r0, r0, fp, lsl r0

00028528 <_myhtml_tokenizer_state_andata_end_tag_name@@Base>:
   28528:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2852c:	mov	r6, r0
   28530:	mov	r4, r1
   28534:	mov	r5, r3
   28538:	ldr	r7, [sp, #32]
   2853c:	ldr	r3, [r0, #192]	; 0xc0
   28540:	ldr	ip, [r1, #24]
   28544:	sub	r3, r3, ip
   28548:	ldr	ip, [r5]
   2854c:	add	r3, r3, ip
   28550:	str	r3, [r1, #28]
   28554:	ldr	r3, [r5]
   28558:	bl	10c40 <myhtml_check_tag_parser@plt>
   2855c:	ldr	r2, [r4]
   28560:	ldr	r3, [r6, #60]	; 0x3c
   28564:	cmp	r2, r3
   28568:	beq	28590 <_myhtml_tokenizer_state_andata_end_tag_name@@Base+0x68>
   2856c:	str	r7, [r4, #24]
   28570:	mov	r0, #0
   28574:	str	r0, [r4, #28]
   28578:	mov	r3, #2
   2857c:	str	r3, [r6, #160]	; 0xa0
   28580:	ldr	r3, [r5]
   28584:	add	r3, r3, #1
   28588:	str	r3, [r5]
   2858c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   28590:	ldr	r8, [r4, #24]
   28594:	sub	r3, r8, #2
   28598:	cmp	r7, r3
   2859c:	bcc	285d4 <_myhtml_tokenizer_state_andata_end_tag_name@@Base+0xac>
   285a0:	ldr	r3, [r6, #60]	; 0x3c
   285a4:	str	r3, [r4]
   285a8:	ldr	r3, [r4, #48]	; 0x30
   285ac:	orr	r3, r3, #1
   285b0:	str	r3, [r4, #48]	; 0x30
   285b4:	ldr	r3, [r6, #192]	; 0xc0
   285b8:	ldr	r2, [r5]
   285bc:	add	r3, r3, r2
   285c0:	ldr	r2, [r4, #24]
   285c4:	sub	r3, r3, r2
   285c8:	str	r3, [r4, #28]
   285cc:	mov	r0, #1
   285d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   285d4:	ldr	r9, [r4, #32]
   285d8:	mvn	r3, #1
   285dc:	sub	r3, r3, r7
   285e0:	add	r3, r3, r8
   285e4:	str	r3, [r4, #28]
   285e8:	str	r7, [r4, #24]
   285ec:	str	r7, [r4, #32]
   285f0:	str	r3, [r4, #36]	; 0x24
   285f4:	ldr	r3, [r4, #48]	; 0x30
   285f8:	ldr	r2, [sp, #36]	; 0x24
   285fc:	orr	r3, r3, r2
   28600:	str	r3, [r4, #48]	; 0x30
   28604:	ldr	r3, [r4, #48]	; 0x30
   28608:	ldr	r2, [r4, #48]	; 0x30
   2860c:	and	r3, r3, #8
   28610:	eor	r3, r3, r2
   28614:	str	r3, [r4, #48]	; 0x30
   28618:	mov	r3, #1
   2861c:	str	r3, [r4]
   28620:	mov	r2, r4
   28624:	ldr	r1, [r5]
   28628:	mov	r0, r6
   2862c:	bl	10028 <myhtml_queue_add@plt>
   28630:	ldr	r4, [r6, #64]	; 0x40
   28634:	str	r9, [r4, #32]
   28638:	str	r8, [r4, #24]
   2863c:	b	285a0 <_myhtml_tokenizer_state_andata_end_tag_name@@Base+0x78>

00028640 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base>:
   28640:	push	{r4, r5, r6, r7, lr}
   28644:	sub	sp, sp, #20
   28648:	mov	r4, r1
   2864c:	str	r3, [sp, #12]
   28650:	ldr	lr, [sp, #40]	; 0x28
   28654:	ldr	r6, [r1, #24]
   28658:	ldr	r1, [r0, #192]	; 0xc0
   2865c:	add	r1, r1, r3
   28660:	str	r1, [r4, #24]
   28664:	cmp	r3, lr
   28668:	bcs	287f8 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x1b8>
   2866c:	mov	r5, r0
   28670:	add	ip, r2, r3
   28674:	ldrb	r1, [r2, r3]
   28678:	ldr	r0, [pc, #400]	; 28810 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x1d0>
   2867c:	add	r0, pc, r0
   28680:	ldrb	r0, [r0, r1]
   28684:	cmp	r0, #2
   28688:	beq	286f0 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xb0>
   2868c:	cmp	r1, #62	; 0x3e
   28690:	beq	28734 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xf4>
   28694:	cmp	r1, #47	; 0x2f
   28698:	beq	287ac <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x16c>
   2869c:	add	r3, r3, #1
   286a0:	ldr	r7, [pc, #364]	; 28814 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x1d4>
   286a4:	add	r7, pc, r7
   286a8:	cmp	r0, #1
   286ac:	bne	287f0 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x1b0>
   286b0:	cmp	lr, r3
   286b4:	beq	28808 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x1c8>
   286b8:	ldrb	r1, [ip, #1]!
   286bc:	ldrb	r0, [r7, r1]
   286c0:	cmp	r0, #2
   286c4:	beq	286ec <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xac>
   286c8:	cmp	r1, #62	; 0x3e
   286cc:	beq	28730 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xf0>
   286d0:	cmp	r1, #47	; 0x2f
   286d4:	beq	287a8 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x168>
   286d8:	add	r1, r3, #1
   286dc:	cmp	r0, #1
   286e0:	bne	287ec <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x1ac>
   286e4:	mov	r3, r1
   286e8:	b	286b0 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x70>
   286ec:	str	r3, [sp, #12]
   286f0:	mov	r3, #16
   286f4:	str	r3, [sp, #4]
   286f8:	str	r6, [sp]
   286fc:	add	r3, sp, #12
   28700:	mov	r1, r4
   28704:	mov	r0, r5
   28708:	bl	10c70 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   2870c:	cmp	r0, #0
   28710:	beq	287f8 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x1b8>
   28714:	mov	r3, #33	; 0x21
   28718:	str	r3, [r5, #160]	; 0xa0
   2871c:	mov	r3, #0
   28720:	str	r3, [r5, #60]	; 0x3c
   28724:	ldr	r0, [sp, #12]
   28728:	add	r0, r0, #1
   2872c:	b	28800 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x1c0>
   28730:	str	r3, [sp, #12]
   28734:	mov	r3, #16
   28738:	str	r3, [sp, #4]
   2873c:	str	r6, [sp]
   28740:	add	r3, sp, #12
   28744:	mov	r1, r4
   28748:	mov	r0, r5
   2874c:	bl	10c70 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   28750:	cmp	r0, #0
   28754:	beq	287f8 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x1b8>
   28758:	ldr	r1, [sp, #12]
   2875c:	add	r1, r1, #1
   28760:	str	r1, [sp, #12]
   28764:	ldr	r2, [r5, #64]	; 0x40
   28768:	ldr	r3, [r5, #192]	; 0xc0
   2876c:	add	r3, r1, r3
   28770:	ldr	r0, [r2, #32]
   28774:	sub	r3, r3, r0
   28778:	str	r3, [r2, #36]	; 0x24
   2877c:	mov	r0, r5
   28780:	bl	10028 <myhtml_queue_add@plt>
   28784:	cmp	r0, #0
   28788:	movne	r3, #69	; 0x45
   2878c:	strne	r3, [r5, #160]	; 0xa0
   28790:	movne	r0, #0
   28794:	moveq	r3, #0
   28798:	streq	r3, [r5, #60]	; 0x3c
   2879c:	streq	r3, [r5, #160]	; 0xa0
   287a0:	ldreq	r0, [sp, #12]
   287a4:	b	28800 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x1c0>
   287a8:	str	r3, [sp, #12]
   287ac:	mov	r3, #16
   287b0:	str	r3, [sp, #4]
   287b4:	str	r6, [sp]
   287b8:	add	r3, sp, #12
   287bc:	mov	r1, r4
   287c0:	mov	r0, r5
   287c4:	bl	10c70 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   287c8:	cmp	r0, #0
   287cc:	beq	287f8 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x1b8>
   287d0:	mov	r3, #33	; 0x21
   287d4:	str	r3, [r5, #160]	; 0xa0
   287d8:	mov	r3, #0
   287dc:	str	r3, [r5, #60]	; 0x3c
   287e0:	ldr	r0, [sp, #12]
   287e4:	add	r0, r0, #1
   287e8:	b	28800 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x1c0>
   287ec:	str	r3, [sp, #12]
   287f0:	mov	r3, #2
   287f4:	str	r3, [r5, #160]	; 0xa0
   287f8:	str	r6, [r4, #24]
   287fc:	ldr	r0, [sp, #12]
   28800:	add	sp, sp, #20
   28804:	pop	{r4, r5, r6, r7, pc}
   28808:	str	r3, [sp, #12]
   2880c:	b	287f8 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x1b8>
   28810:	andeq	r6, sp, r0, lsr #3
   28814:	andeq	r6, sp, r8, ror r1

00028818 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base>:
   28818:	push	{r4, r5, r6, r7, lr}
   2881c:	sub	sp, sp, #20
   28820:	mov	r5, r0
   28824:	str	r3, [sp, #12]
   28828:	ldr	r4, [sp, #40]	; 0x28
   2882c:	ldr	r7, [r1, #24]
   28830:	ldr	r0, [r0, #192]	; 0xc0
   28834:	add	r0, r0, r3
   28838:	str	r0, [r1, #24]
   2883c:	cmp	r3, r4
   28840:	bcs	289dc <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x1c4>
   28844:	add	lr, r2, r3
   28848:	ldrb	r0, [r2, r3]
   2884c:	ldr	ip, [pc, #408]	; 289ec <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x1d4>
   28850:	add	ip, pc, ip
   28854:	ldrb	ip, [ip, r0]
   28858:	cmp	ip, #2
   2885c:	beq	288c4 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xac>
   28860:	cmp	r0, #62	; 0x3e
   28864:	beq	2890c <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xf4>
   28868:	cmp	r0, #47	; 0x2f
   2886c:	beq	28988 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x170>
   28870:	cmp	ip, #1
   28874:	bne	289cc <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x1b4>
   28878:	add	r3, r3, #1
   2887c:	ldr	r6, [pc, #364]	; 289f0 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x1d8>
   28880:	add	r6, pc, r6
   28884:	cmp	r4, r3
   28888:	beq	289dc <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x1c4>
   2888c:	ldrb	ip, [lr, #1]!
   28890:	ldrb	r0, [r6, ip]
   28894:	cmp	r0, #2
   28898:	beq	288c0 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xa8>
   2889c:	cmp	ip, #62	; 0x3e
   288a0:	beq	28908 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xf0>
   288a4:	cmp	ip, #47	; 0x2f
   288a8:	beq	28984 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x16c>
   288ac:	add	ip, r3, #1
   288b0:	cmp	r0, #1
   288b4:	bne	289cc <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x1b4>
   288b8:	mov	r3, ip
   288bc:	b	28884 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x6c>
   288c0:	str	r3, [sp, #12]
   288c4:	mov	r3, #32
   288c8:	str	r3, [sp, #4]
   288cc:	str	r7, [sp]
   288d0:	add	r3, sp, #12
   288d4:	mov	r0, r5
   288d8:	bl	10c70 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   288dc:	cmp	r0, #0
   288e0:	beq	28900 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xe8>
   288e4:	mov	r3, #33	; 0x21
   288e8:	str	r3, [r5, #160]	; 0xa0
   288ec:	mov	r3, #0
   288f0:	str	r3, [r5, #60]	; 0x3c
   288f4:	ldr	r3, [sp, #12]
   288f8:	add	r3, r3, #1
   288fc:	str	r3, [sp, #12]
   28900:	ldr	r3, [sp, #12]
   28904:	b	289e0 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x1c8>
   28908:	str	r3, [sp, #12]
   2890c:	mov	r3, #32
   28910:	str	r3, [sp, #4]
   28914:	str	r7, [sp]
   28918:	add	r3, sp, #12
   2891c:	mov	r0, r5
   28920:	bl	10c70 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   28924:	cmp	r0, #0
   28928:	bne	28934 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x11c>
   2892c:	ldr	r3, [sp, #12]
   28930:	b	289e0 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x1c8>
   28934:	ldr	r1, [sp, #12]
   28938:	add	r1, r1, #1
   2893c:	str	r1, [sp, #12]
   28940:	ldr	r2, [r5, #64]	; 0x40
   28944:	ldr	r3, [r5, #192]	; 0xc0
   28948:	add	r3, r1, r3
   2894c:	ldr	r0, [r2, #32]
   28950:	sub	r3, r3, r0
   28954:	str	r3, [r2, #36]	; 0x24
   28958:	mov	r0, r5
   2895c:	bl	10028 <myhtml_queue_add@plt>
   28960:	cmp	r0, #0
   28964:	moveq	r3, #0
   28968:	streq	r3, [r5, #60]	; 0x3c
   2896c:	streq	r3, [r5, #160]	; 0xa0
   28970:	beq	2892c <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x114>
   28974:	mov	r3, #69	; 0x45
   28978:	str	r3, [r5, #160]	; 0xa0
   2897c:	mov	r3, #0
   28980:	b	289e0 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x1c8>
   28984:	str	r3, [sp, #12]
   28988:	mov	r3, #32
   2898c:	str	r3, [sp, #4]
   28990:	str	r7, [sp]
   28994:	add	r3, sp, #12
   28998:	mov	r0, r5
   2899c:	bl	10c70 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   289a0:	cmp	r0, #0
   289a4:	beq	289c4 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x1ac>
   289a8:	mov	r3, #33	; 0x21
   289ac:	str	r3, [r5, #160]	; 0xa0
   289b0:	mov	r3, #0
   289b4:	str	r3, [r5, #60]	; 0x3c
   289b8:	ldr	r3, [sp, #12]
   289bc:	add	r3, r3, #1
   289c0:	str	r3, [sp, #12]
   289c4:	ldr	r3, [sp, #12]
   289c8:	b	289e0 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x1c8>
   289cc:	str	r7, [r1, #24]
   289d0:	mov	r2, #4
   289d4:	str	r2, [r5, #160]	; 0xa0
   289d8:	b	289e0 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x1c8>
   289dc:	str	r7, [r1, #24]
   289e0:	mov	r0, r3
   289e4:	add	sp, sp, #20
   289e8:	pop	{r4, r5, r6, r7, pc}
   289ec:	andeq	r5, sp, ip, asr #31
   289f0:	muleq	sp, ip, pc	; <UNPREDICTABLE>

000289f4 <myhtml_tokenizer_state_init@@Base>:
   289f4:	push	{r4, r5, r6, lr}
   289f8:	mov	r5, r0
   289fc:	ldr	r4, [pc, #2048]	; 29204 <myhtml_tokenizer_state_init@@Base+0x810>
   28a00:	add	r4, pc, r4
   28a04:	ldr	r0, [pc, #2044]	; 29208 <myhtml_tokenizer_state_init@@Base+0x814>
   28a08:	bl	10c94 <mycore_malloc@plt>
   28a0c:	str	r0, [r5, #24]
   28a10:	cmp	r0, #0
   28a14:	beq	291fc <myhtml_tokenizer_state_init@@Base+0x808>
   28a18:	ldr	r3, [pc, #2028]	; 2920c <myhtml_tokenizer_state_init@@Base+0x818>
   28a1c:	ldr	r3, [r4, r3]
   28a20:	str	r3, [r0]
   28a24:	ldr	r3, [r5, #24]
   28a28:	ldr	r2, [pc, #2016]	; 29210 <myhtml_tokenizer_state_init@@Base+0x81c>
   28a2c:	ldr	r2, [r4, r2]
   28a30:	str	r2, [r3, #28]
   28a34:	ldr	r3, [r5, #24]
   28a38:	ldr	r2, [pc, #2004]	; 29214 <myhtml_tokenizer_state_init@@Base+0x820>
   28a3c:	ldr	r2, [r4, r2]
   28a40:	str	r2, [r3, #36]	; 0x24
   28a44:	ldr	r3, [r5, #24]
   28a48:	ldr	r2, [pc, #1992]	; 29218 <myhtml_tokenizer_state_init@@Base+0x824>
   28a4c:	ldr	r2, [r4, r2]
   28a50:	str	r2, [r3, #32]
   28a54:	ldr	r3, [r5, #24]
   28a58:	ldr	r2, [pc, #1980]	; 2921c <myhtml_tokenizer_state_init@@Base+0x828>
   28a5c:	ldr	r2, [r4, r2]
   28a60:	str	r2, [r3, #168]	; 0xa8
   28a64:	ldr	r3, [r5, #24]
   28a68:	ldr	r2, [pc, #1968]	; 29220 <myhtml_tokenizer_state_init@@Base+0x82c>
   28a6c:	ldr	r2, [r4, r2]
   28a70:	str	r2, [r3, #176]	; 0xb0
   28a74:	ldr	r3, [r5, #24]
   28a78:	ldr	r2, [pc, #1956]	; 29224 <myhtml_tokenizer_state_init@@Base+0x830>
   28a7c:	ldr	r2, [r4, r2]
   28a80:	str	r2, [r3, #132]	; 0x84
   28a84:	ldr	r3, [r5, #24]
   28a88:	ldr	r2, [pc, #1944]	; 29228 <myhtml_tokenizer_state_init@@Base+0x834>
   28a8c:	ldr	r2, [r4, r2]
   28a90:	str	r2, [r3, #136]	; 0x88
   28a94:	ldr	r3, [r5, #24]
   28a98:	ldr	r2, [pc, #1932]	; 2922c <myhtml_tokenizer_state_init@@Base+0x838>
   28a9c:	ldr	r2, [r4, r2]
   28aa0:	str	r2, [r3, #140]	; 0x8c
   28aa4:	ldr	r3, [r5, #24]
   28aa8:	ldr	r2, [pc, #1920]	; 29230 <myhtml_tokenizer_state_init@@Base+0x83c>
   28aac:	ldr	r2, [r4, r2]
   28ab0:	str	r2, [r3, #144]	; 0x90
   28ab4:	ldr	r3, [r5, #24]
   28ab8:	ldr	r2, [pc, #1908]	; 29234 <myhtml_tokenizer_state_init@@Base+0x840>
   28abc:	ldr	r2, [r4, r2]
   28ac0:	str	r2, [r3, #164]	; 0xa4
   28ac4:	ldr	r3, [r5, #24]
   28ac8:	ldr	r2, [pc, #1896]	; 29238 <myhtml_tokenizer_state_init@@Base+0x844>
   28acc:	ldr	r2, [r4, r2]
   28ad0:	str	r2, [r3, #148]	; 0x94
   28ad4:	ldr	r3, [r5, #24]
   28ad8:	ldr	r2, [pc, #1884]	; 2923c <myhtml_tokenizer_state_init@@Base+0x848>
   28adc:	ldr	r2, [r4, r2]
   28ae0:	str	r2, [r3, #152]	; 0x98
   28ae4:	ldr	r3, [r5, #24]
   28ae8:	ldr	r2, [pc, #1872]	; 29240 <myhtml_tokenizer_state_init@@Base+0x84c>
   28aec:	ldr	r2, [r4, r2]
   28af0:	str	r2, [r3, #156]	; 0x9c
   28af4:	ldr	r3, [r5, #24]
   28af8:	ldr	r2, [pc, #1860]	; 29244 <myhtml_tokenizer_state_init@@Base+0x850>
   28afc:	ldr	r2, [r4, r2]
   28b00:	str	r2, [r3, #180]	; 0xb4
   28b04:	ldr	r3, [r5, #24]
   28b08:	ldr	r2, [pc, #1848]	; 29248 <myhtml_tokenizer_state_init@@Base+0x854>
   28b0c:	ldr	r2, [r4, r2]
   28b10:	str	r2, [r3, #184]	; 0xb8
   28b14:	ldr	r3, [r5, #24]
   28b18:	ldr	r2, [pc, #1836]	; 2924c <myhtml_tokenizer_state_init@@Base+0x858>
   28b1c:	ldr	r2, [r4, r2]
   28b20:	str	r2, [r3, #188]	; 0xbc
   28b24:	ldr	r3, [r5, #24]
   28b28:	ldr	r2, [pc, #1824]	; 29250 <myhtml_tokenizer_state_init@@Base+0x85c>
   28b2c:	ldr	r2, [r4, r2]
   28b30:	str	r2, [r3, #196]	; 0xc4
   28b34:	ldr	r3, [r5, #24]
   28b38:	ldr	r2, [pc, #1812]	; 29254 <myhtml_tokenizer_state_init@@Base+0x860>
   28b3c:	ldr	r2, [r4, r2]
   28b40:	str	r2, [r3, #192]	; 0xc0
   28b44:	ldr	r3, [r5, #24]
   28b48:	ldr	r2, [pc, #1800]	; 29258 <myhtml_tokenizer_state_init@@Base+0x864>
   28b4c:	ldr	r2, [r4, r2]
   28b50:	str	r2, [r3, #200]	; 0xc8
   28b54:	ldr	r3, [r5, #24]
   28b58:	ldr	r2, [pc, #1788]	; 2925c <myhtml_tokenizer_state_init@@Base+0x868>
   28b5c:	ldr	r2, [r4, r2]
   28b60:	str	r2, [r3, #172]	; 0xac
   28b64:	ldr	r3, [r5, #24]
   28b68:	ldr	r2, [pc, #1776]	; 29260 <myhtml_tokenizer_state_init@@Base+0x86c>
   28b6c:	ldr	r2, [r4, r2]
   28b70:	str	r2, [r3, #268]	; 0x10c
   28b74:	ldr	r3, [r5, #24]
   28b78:	ldr	r2, [pc, #1764]	; 29264 <myhtml_tokenizer_state_init@@Base+0x870>
   28b7c:	ldr	r2, [r4, r2]
   28b80:	str	r2, [r3, #8]
   28b84:	ldr	r3, [r5, #24]
   28b88:	ldr	r2, [pc, #1752]	; 29268 <myhtml_tokenizer_state_init@@Base+0x874>
   28b8c:	ldr	r2, [r4, r2]
   28b90:	str	r2, [r3, #40]	; 0x28
   28b94:	ldr	r3, [r5, #24]
   28b98:	ldr	r2, [pc, #1740]	; 2926c <myhtml_tokenizer_state_init@@Base+0x878>
   28b9c:	ldr	r2, [r4, r2]
   28ba0:	str	r2, [r3, #44]	; 0x2c
   28ba4:	ldr	r3, [r5, #24]
   28ba8:	ldr	r2, [pc, #1728]	; 29270 <myhtml_tokenizer_state_init@@Base+0x87c>
   28bac:	ldr	r2, [r4, r2]
   28bb0:	str	r2, [r3, #48]	; 0x30
   28bb4:	ldr	r3, [r5, #24]
   28bb8:	ldr	r2, [pc, #1716]	; 29274 <myhtml_tokenizer_state_init@@Base+0x880>
   28bbc:	ldr	r2, [r4, r2]
   28bc0:	str	r2, [r3, #16]
   28bc4:	ldr	r3, [r5, #24]
   28bc8:	ldr	r2, [pc, #1704]	; 29278 <myhtml_tokenizer_state_init@@Base+0x884>
   28bcc:	ldr	r2, [r4, r2]
   28bd0:	str	r2, [r3, #52]	; 0x34
   28bd4:	ldr	r3, [r5, #24]
   28bd8:	ldr	r2, [pc, #1692]	; 2927c <myhtml_tokenizer_state_init@@Base+0x888>
   28bdc:	ldr	r2, [r4, r2]
   28be0:	str	r2, [r3, #56]	; 0x38
   28be4:	ldr	r3, [r5, #24]
   28be8:	ldr	r2, [pc, #1680]	; 29280 <myhtml_tokenizer_state_init@@Base+0x88c>
   28bec:	ldr	r2, [r4, r2]
   28bf0:	str	r2, [r3, #60]	; 0x3c
   28bf4:	ldr	r3, [r5, #24]
   28bf8:	ldr	r2, [pc, #1668]	; 29284 <myhtml_tokenizer_state_init@@Base+0x890>
   28bfc:	ldr	r2, [r4, r2]
   28c00:	str	r2, [r3, #24]
   28c04:	ldr	r3, [r5, #24]
   28c08:	ldr	r2, [pc, #1656]	; 29288 <myhtml_tokenizer_state_init@@Base+0x894>
   28c0c:	ldr	r2, [r4, r2]
   28c10:	str	r2, [r3, #204]	; 0xcc
   28c14:	ldr	r3, [r5, #24]
   28c18:	ldr	r2, [pc, #1644]	; 2928c <myhtml_tokenizer_state_init@@Base+0x898>
   28c1c:	ldr	r2, [r4, r2]
   28c20:	str	r2, [r3, #208]	; 0xd0
   28c24:	ldr	r3, [r5, #24]
   28c28:	ldr	r2, [pc, #1632]	; 29290 <myhtml_tokenizer_state_init@@Base+0x89c>
   28c2c:	ldr	r2, [r4, r2]
   28c30:	str	r2, [r3, #212]	; 0xd4
   28c34:	ldr	r3, [r5, #24]
   28c38:	ldr	r2, [pc, #1620]	; 29294 <myhtml_tokenizer_state_init@@Base+0x8a0>
   28c3c:	ldr	r2, [r4, r2]
   28c40:	str	r2, [r3, #216]	; 0xd8
   28c44:	ldr	r3, [r5, #24]
   28c48:	ldr	r2, [pc, #1608]	; 29298 <myhtml_tokenizer_state_init@@Base+0x8a4>
   28c4c:	ldr	r2, [r4, r2]
   28c50:	str	r2, [r3, #272]	; 0x110
   28c54:	ldr	r3, [r5, #24]
   28c58:	ldr	r2, [pc, #1596]	; 2929c <myhtml_tokenizer_state_init@@Base+0x8a8>
   28c5c:	ldr	r2, [r4, r2]
   28c60:	str	r2, [r3, #224]	; 0xe0
   28c64:	ldr	r3, [r5, #24]
   28c68:	ldr	r2, [pc, #1584]	; 292a0 <myhtml_tokenizer_state_init@@Base+0x8ac>
   28c6c:	ldr	r2, [r4, r2]
   28c70:	str	r2, [r3, #228]	; 0xe4
   28c74:	ldr	r3, [r5, #24]
   28c78:	ldr	r2, [pc, #1572]	; 292a4 <myhtml_tokenizer_state_init@@Base+0x8b0>
   28c7c:	ldr	r2, [r4, r2]
   28c80:	str	r2, [r3, #232]	; 0xe8
   28c84:	ldr	r3, [r5, #24]
   28c88:	ldr	r2, [pc, #1560]	; 292a8 <myhtml_tokenizer_state_init@@Base+0x8b4>
   28c8c:	ldr	r2, [r4, r2]
   28c90:	str	r2, [r3, #236]	; 0xec
   28c94:	ldr	r3, [r5, #24]
   28c98:	ldr	r2, [pc, #1548]	; 292ac <myhtml_tokenizer_state_init@@Base+0x8b8>
   28c9c:	ldr	r2, [r4, r2]
   28ca0:	str	r2, [r3, #252]	; 0xfc
   28ca4:	ldr	r3, [r5, #24]
   28ca8:	ldr	r2, [pc, #1536]	; 292b0 <myhtml_tokenizer_state_init@@Base+0x8bc>
   28cac:	ldr	r2, [r4, r2]
   28cb0:	str	r2, [r3, #256]	; 0x100
   28cb4:	ldr	r3, [r5, #24]
   28cb8:	ldr	r2, [pc, #1524]	; 292b4 <myhtml_tokenizer_state_init@@Base+0x8c0>
   28cbc:	ldr	r2, [r4, r2]
   28cc0:	str	r2, [r3, #260]	; 0x104
   28cc4:	ldr	r3, [r5, #24]
   28cc8:	ldr	r2, [pc, #1512]	; 292b8 <myhtml_tokenizer_state_init@@Base+0x8c4>
   28ccc:	ldr	r2, [r4, r2]
   28cd0:	str	r2, [r3, #264]	; 0x108
   28cd4:	ldr	r3, [r5, #24]
   28cd8:	ldr	r2, [pc, #1500]	; 292bc <myhtml_tokenizer_state_init@@Base+0x8c8>
   28cdc:	ldr	r2, [r4, r2]
   28ce0:	str	r2, [r3, #20]
   28ce4:	ldr	r3, [r5, #24]
   28ce8:	ldr	r2, [pc, #1488]	; 292c0 <myhtml_tokenizer_state_init@@Base+0x8cc>
   28cec:	ldr	r2, [r4, r2]
   28cf0:	str	r2, [r3, #64]	; 0x40
   28cf4:	ldr	r3, [r5, #24]
   28cf8:	ldr	r2, [pc, #1476]	; 292c4 <myhtml_tokenizer_state_init@@Base+0x8d0>
   28cfc:	ldr	r2, [r4, r2]
   28d00:	str	r2, [r3, #68]	; 0x44
   28d04:	ldr	r3, [r5, #24]
   28d08:	ldr	r2, [pc, #1464]	; 292c8 <myhtml_tokenizer_state_init@@Base+0x8d4>
   28d0c:	ldr	r2, [r4, r2]
   28d10:	str	r2, [r3, #72]	; 0x48
   28d14:	ldr	r3, [r5, #24]
   28d18:	ldr	r2, [pc, #1452]	; 292cc <myhtml_tokenizer_state_init@@Base+0x8d8>
   28d1c:	ldr	r2, [r4, r2]
   28d20:	str	r2, [r3, #76]	; 0x4c
   28d24:	ldr	r3, [r5, #24]
   28d28:	ldr	r2, [pc, #1440]	; 292d0 <myhtml_tokenizer_state_init@@Base+0x8dc>
   28d2c:	ldr	r2, [r4, r2]
   28d30:	str	r2, [r3, #80]	; 0x50
   28d34:	ldr	r3, [r5, #24]
   28d38:	ldr	r2, [pc, #1428]	; 292d4 <myhtml_tokenizer_state_init@@Base+0x8e0>
   28d3c:	ldr	r2, [r4, r2]
   28d40:	str	r2, [r3, #84]	; 0x54
   28d44:	ldr	r3, [r5, #24]
   28d48:	ldr	r2, [pc, #1416]	; 292d8 <myhtml_tokenizer_state_init@@Base+0x8e4>
   28d4c:	ldr	r2, [r4, r2]
   28d50:	str	r2, [r3, #88]	; 0x58
   28d54:	ldr	r3, [r5, #24]
   28d58:	ldr	r2, [pc, #1404]	; 292dc <myhtml_tokenizer_state_init@@Base+0x8e8>
   28d5c:	ldr	r2, [r4, r2]
   28d60:	str	r2, [r3, #92]	; 0x5c
   28d64:	ldr	r3, [r5, #24]
   28d68:	ldr	r2, [pc, #1392]	; 292e0 <myhtml_tokenizer_state_init@@Base+0x8ec>
   28d6c:	ldr	r2, [r4, r2]
   28d70:	str	r2, [r3, #96]	; 0x60
   28d74:	ldr	r3, [r5, #24]
   28d78:	ldr	r2, [pc, #1380]	; 292e4 <myhtml_tokenizer_state_init@@Base+0x8f0>
   28d7c:	ldr	r2, [r4, r2]
   28d80:	str	r2, [r3, #100]	; 0x64
   28d84:	ldr	r3, [r5, #24]
   28d88:	ldr	r2, [pc, #1368]	; 292e8 <myhtml_tokenizer_state_init@@Base+0x8f4>
   28d8c:	ldr	r2, [r4, r2]
   28d90:	str	r2, [r3, #104]	; 0x68
   28d94:	ldr	r3, [r5, #24]
   28d98:	ldr	r2, [pc, #1356]	; 292ec <myhtml_tokenizer_state_init@@Base+0x8f8>
   28d9c:	ldr	r2, [r4, r2]
   28da0:	str	r2, [r3, #108]	; 0x6c
   28da4:	ldr	r3, [r5, #24]
   28da8:	ldr	r2, [pc, #1344]	; 292f0 <myhtml_tokenizer_state_init@@Base+0x8fc>
   28dac:	ldr	r2, [r4, r2]
   28db0:	str	r2, [r3, #112]	; 0x70
   28db4:	ldr	r3, [r5, #24]
   28db8:	ldr	r2, [pc, #1332]	; 292f4 <myhtml_tokenizer_state_init@@Base+0x900>
   28dbc:	ldr	r2, [r4, r2]
   28dc0:	str	r2, [r3, #116]	; 0x74
   28dc4:	ldr	r3, [r5, #24]
   28dc8:	ldr	r2, [pc, #1320]	; 292f8 <myhtml_tokenizer_state_init@@Base+0x904>
   28dcc:	ldr	r2, [r4, r2]
   28dd0:	str	r2, [r3, #120]	; 0x78
   28dd4:	ldr	r3, [r5, #24]
   28dd8:	ldr	r2, [pc, #1308]	; 292fc <myhtml_tokenizer_state_init@@Base+0x908>
   28ddc:	ldr	r2, [r4, r2]
   28de0:	str	r2, [r3, #124]	; 0x7c
   28de4:	ldr	r3, [r5, #24]
   28de8:	ldr	r2, [pc, #1296]	; 29300 <myhtml_tokenizer_state_init@@Base+0x90c>
   28dec:	ldr	r2, [r4, r2]
   28df0:	str	r2, [r3, #128]	; 0x80
   28df4:	ldr	r3, [r5, #24]
   28df8:	ldr	r2, [pc, #1284]	; 29304 <myhtml_tokenizer_state_init@@Base+0x910>
   28dfc:	ldr	r2, [r4, r2]
   28e00:	str	r2, [r3, #276]	; 0x114
   28e04:	ldr	r3, [r5, #24]
   28e08:	ldr	r2, [pc, #1272]	; 29308 <myhtml_tokenizer_state_init@@Base+0x914>
   28e0c:	ldr	r2, [r4, r2]
   28e10:	str	r2, [r3, #280]	; 0x118
   28e14:	ldr	r3, [r5, #24]
   28e18:	ldr	r2, [pc, #1260]	; 2930c <myhtml_tokenizer_state_init@@Base+0x918>
   28e1c:	ldr	r2, [r4, r2]
   28e20:	str	r2, [r3, #308]	; 0x134
   28e24:	ldr	r3, [r5, #24]
   28e28:	ldr	r2, [pc, #1248]	; 29310 <myhtml_tokenizer_state_init@@Base+0x91c>
   28e2c:	ldr	r2, [r4, r2]
   28e30:	str	r2, [r3, #316]	; 0x13c
   28e34:	ldr	r3, [r5, #24]
   28e38:	ldr	r2, [pc, #1236]	; 29314 <myhtml_tokenizer_state_init@@Base+0x920>
   28e3c:	ldr	r2, [r4, r2]
   28e40:	str	r2, [r3, #312]	; 0x138
   28e44:	ldr	r3, [r5, #24]
   28e48:	ldr	r2, [pc, #1224]	; 29318 <myhtml_tokenizer_state_init@@Base+0x924>
   28e4c:	ldr	r2, [r4, r2]
   28e50:	str	r2, [r3, #448]	; 0x1c0
   28e54:	ldr	r3, [r5, #24]
   28e58:	ldr	r2, [pc, #1212]	; 2931c <myhtml_tokenizer_state_init@@Base+0x928>
   28e5c:	ldr	r2, [r4, r2]
   28e60:	str	r2, [r3, #456]	; 0x1c8
   28e64:	ldr	r3, [r5, #24]
   28e68:	ldr	r2, [pc, #1200]	; 29320 <myhtml_tokenizer_state_init@@Base+0x92c>
   28e6c:	ldr	r2, [r4, r2]
   28e70:	str	r2, [r3, #412]	; 0x19c
   28e74:	ldr	r3, [r5, #24]
   28e78:	ldr	r2, [pc, #1188]	; 29324 <myhtml_tokenizer_state_init@@Base+0x930>
   28e7c:	ldr	r2, [r4, r2]
   28e80:	str	r2, [r3, #416]	; 0x1a0
   28e84:	ldr	r3, [r5, #24]
   28e88:	ldr	r2, [pc, #1176]	; 29328 <myhtml_tokenizer_state_init@@Base+0x934>
   28e8c:	ldr	r2, [r4, r2]
   28e90:	str	r2, [r3, #420]	; 0x1a4
   28e94:	ldr	r3, [r5, #24]
   28e98:	ldr	r2, [pc, #1164]	; 2932c <myhtml_tokenizer_state_init@@Base+0x938>
   28e9c:	ldr	r2, [r4, r2]
   28ea0:	str	r2, [r3, #424]	; 0x1a8
   28ea4:	ldr	r3, [r5, #24]
   28ea8:	ldr	r2, [pc, #1152]	; 29330 <myhtml_tokenizer_state_init@@Base+0x93c>
   28eac:	ldr	r2, [r4, r2]
   28eb0:	str	r2, [r3, #428]	; 0x1ac
   28eb4:	ldr	r3, [r5, #24]
   28eb8:	ldr	r2, [pc, #1140]	; 29334 <myhtml_tokenizer_state_init@@Base+0x940>
   28ebc:	ldr	r2, [r4, r2]
   28ec0:	str	r2, [r3, #432]	; 0x1b0
   28ec4:	ldr	r3, [r5, #24]
   28ec8:	ldr	r2, [pc, #1128]	; 29338 <myhtml_tokenizer_state_init@@Base+0x944>
   28ecc:	ldr	r2, [r4, r2]
   28ed0:	str	r2, [r3, #436]	; 0x1b4
   28ed4:	ldr	r3, [r5, #24]
   28ed8:	ldr	r2, [pc, #1116]	; 2933c <myhtml_tokenizer_state_init@@Base+0x948>
   28edc:	ldr	r2, [r4, r2]
   28ee0:	str	r2, [r3, #444]	; 0x1bc
   28ee4:	ldr	r3, [r5, #24]
   28ee8:	ldr	r2, [pc, #1104]	; 29340 <myhtml_tokenizer_state_init@@Base+0x94c>
   28eec:	ldr	r2, [r4, r2]
   28ef0:	str	r2, [r3, #460]	; 0x1cc
   28ef4:	ldr	r3, [r5, #24]
   28ef8:	ldr	r2, [pc, #1092]	; 29344 <myhtml_tokenizer_state_init@@Base+0x950>
   28efc:	ldr	r2, [r4, r2]
   28f00:	str	r2, [r3, #464]	; 0x1d0
   28f04:	ldr	r3, [r5, #24]
   28f08:	ldr	r2, [pc, #1080]	; 29348 <myhtml_tokenizer_state_init@@Base+0x954>
   28f0c:	ldr	r2, [r4, r2]
   28f10:	str	r2, [r3, #468]	; 0x1d4
   28f14:	ldr	r3, [r5, #24]
   28f18:	ldr	r2, [pc, #1068]	; 2934c <myhtml_tokenizer_state_init@@Base+0x958>
   28f1c:	ldr	r2, [r4, r2]
   28f20:	str	r2, [r3, #476]	; 0x1dc
   28f24:	ldr	r3, [r5, #24]
   28f28:	ldr	r2, [pc, #1056]	; 29350 <myhtml_tokenizer_state_init@@Base+0x95c>
   28f2c:	ldr	r2, [r4, r2]
   28f30:	str	r2, [r3, #472]	; 0x1d8
   28f34:	ldr	r3, [r5, #24]
   28f38:	ldr	r2, [pc, #1044]	; 29354 <myhtml_tokenizer_state_init@@Base+0x960>
   28f3c:	ldr	r2, [r4, r2]
   28f40:	str	r2, [r3, #480]	; 0x1e0
   28f44:	ldr	r3, [r5, #24]
   28f48:	ldr	r2, [pc, #1032]	; 29358 <myhtml_tokenizer_state_init@@Base+0x964>
   28f4c:	ldr	r2, [r4, r2]
   28f50:	str	r2, [r3, #452]	; 0x1c4
   28f54:	ldr	r3, [r5, #24]
   28f58:	ldr	r2, [pc, #1020]	; 2935c <myhtml_tokenizer_state_init@@Base+0x968>
   28f5c:	ldr	r2, [r4, r2]
   28f60:	str	r2, [r3, #548]	; 0x224
   28f64:	ldr	r3, [r5, #24]
   28f68:	ldr	r2, [pc, #1008]	; 29360 <myhtml_tokenizer_state_init@@Base+0x96c>
   28f6c:	ldr	r2, [r4, r2]
   28f70:	str	r2, [r3, #288]	; 0x120
   28f74:	ldr	r3, [r5, #24]
   28f78:	ldr	r2, [pc, #996]	; 29364 <myhtml_tokenizer_state_init@@Base+0x970>
   28f7c:	ldr	r2, [r4, r2]
   28f80:	str	r2, [r3, #320]	; 0x140
   28f84:	ldr	r3, [r5, #24]
   28f88:	ldr	r2, [pc, #984]	; 29368 <myhtml_tokenizer_state_init@@Base+0x974>
   28f8c:	ldr	r2, [r4, r2]
   28f90:	str	r2, [r3, #324]	; 0x144
   28f94:	ldr	r3, [r5, #24]
   28f98:	ldr	r2, [pc, #972]	; 2936c <myhtml_tokenizer_state_init@@Base+0x978>
   28f9c:	ldr	r2, [r4, r2]
   28fa0:	str	r2, [r3, #328]	; 0x148
   28fa4:	ldr	r3, [r5, #24]
   28fa8:	ldr	r2, [pc, #960]	; 29370 <myhtml_tokenizer_state_init@@Base+0x97c>
   28fac:	ldr	r2, [r4, r2]
   28fb0:	str	r2, [r3, #296]	; 0x128
   28fb4:	ldr	r3, [r5, #24]
   28fb8:	ldr	r2, [pc, #948]	; 29374 <myhtml_tokenizer_state_init@@Base+0x980>
   28fbc:	ldr	r2, [r4, r2]
   28fc0:	str	r2, [r3, #332]	; 0x14c
   28fc4:	ldr	r3, [r5, #24]
   28fc8:	ldr	r2, [pc, #936]	; 29378 <myhtml_tokenizer_state_init@@Base+0x984>
   28fcc:	ldr	r2, [r4, r2]
   28fd0:	str	r2, [r3, #336]	; 0x150
   28fd4:	ldr	r3, [r5, #24]
   28fd8:	ldr	r2, [pc, #924]	; 2937c <myhtml_tokenizer_state_init@@Base+0x988>
   28fdc:	ldr	r2, [r4, r2]
   28fe0:	str	r2, [r3, #340]	; 0x154
   28fe4:	ldr	r3, [r5, #24]
   28fe8:	ldr	r2, [pc, #912]	; 29380 <myhtml_tokenizer_state_init@@Base+0x98c>
   28fec:	ldr	r2, [r4, r2]
   28ff0:	str	r2, [r3, #304]	; 0x130
   28ff4:	ldr	r3, [r5, #24]
   28ff8:	ldr	r2, [pc, #900]	; 29384 <myhtml_tokenizer_state_init@@Base+0x990>
   28ffc:	ldr	r2, [r4, r2]
   29000:	str	r2, [r3, #484]	; 0x1e4
   29004:	ldr	r3, [r5, #24]
   29008:	ldr	r2, [pc, #888]	; 29388 <myhtml_tokenizer_state_init@@Base+0x994>
   2900c:	ldr	r2, [r4, r2]
   29010:	str	r2, [r3, #488]	; 0x1e8
   29014:	ldr	r3, [r5, #24]
   29018:	ldr	r2, [pc, #876]	; 2938c <myhtml_tokenizer_state_init@@Base+0x998>
   2901c:	ldr	r2, [r4, r2]
   29020:	str	r2, [r3, #492]	; 0x1ec
   29024:	ldr	r3, [r5, #24]
   29028:	ldr	r2, [pc, #864]	; 29390 <myhtml_tokenizer_state_init@@Base+0x99c>
   2902c:	ldr	r2, [r4, r2]
   29030:	str	r2, [r3, #496]	; 0x1f0
   29034:	ldr	r3, [r5, #24]
   29038:	ldr	r2, [pc, #852]	; 29394 <myhtml_tokenizer_state_init@@Base+0x9a0>
   2903c:	ldr	r2, [r4, r2]
   29040:	str	r2, [r3, #552]	; 0x228
   29044:	ldr	r3, [r5, #24]
   29048:	ldr	r2, [pc, #840]	; 29398 <myhtml_tokenizer_state_init@@Base+0x9a4>
   2904c:	ldr	r2, [r4, r2]
   29050:	str	r2, [r3, #504]	; 0x1f8
   29054:	ldr	r3, [r5, #24]
   29058:	ldr	r2, [pc, #828]	; 2939c <myhtml_tokenizer_state_init@@Base+0x9a8>
   2905c:	ldr	r2, [r4, r2]
   29060:	str	r2, [r3, #508]	; 0x1fc
   29064:	ldr	r3, [r5, #24]
   29068:	ldr	r2, [pc, #816]	; 293a0 <myhtml_tokenizer_state_init@@Base+0x9ac>
   2906c:	ldr	r2, [r4, r2]
   29070:	str	r2, [r3, #512]	; 0x200
   29074:	ldr	r3, [r5, #24]
   29078:	ldr	r2, [pc, #804]	; 293a4 <myhtml_tokenizer_state_init@@Base+0x9b0>
   2907c:	ldr	r2, [r4, r2]
   29080:	str	r2, [r3, #516]	; 0x204
   29084:	ldr	r3, [r5, #24]
   29088:	ldr	r2, [pc, #792]	; 293a8 <myhtml_tokenizer_state_init@@Base+0x9b4>
   2908c:	ldr	r2, [r4, r2]
   29090:	str	r2, [r3, #532]	; 0x214
   29094:	ldr	r3, [r5, #24]
   29098:	ldr	r2, [pc, #780]	; 293ac <myhtml_tokenizer_state_init@@Base+0x9b8>
   2909c:	ldr	r2, [r4, r2]
   290a0:	str	r2, [r3, #536]	; 0x218
   290a4:	ldr	r3, [r5, #24]
   290a8:	ldr	r2, [pc, #768]	; 293b0 <myhtml_tokenizer_state_init@@Base+0x9bc>
   290ac:	ldr	r2, [r4, r2]
   290b0:	str	r2, [r3, #540]	; 0x21c
   290b4:	ldr	r3, [r5, #24]
   290b8:	ldr	r2, [pc, #756]	; 293b4 <myhtml_tokenizer_state_init@@Base+0x9c0>
   290bc:	ldr	r2, [r4, r2]
   290c0:	str	r2, [r3, #544]	; 0x220
   290c4:	ldr	r3, [r5, #24]
   290c8:	ldr	r2, [pc, #744]	; 293b8 <myhtml_tokenizer_state_init@@Base+0x9c4>
   290cc:	ldr	r2, [r4, r2]
   290d0:	str	r2, [r3, #300]	; 0x12c
   290d4:	ldr	r3, [r5, #24]
   290d8:	ldr	r2, [pc, #732]	; 293bc <myhtml_tokenizer_state_init@@Base+0x9c8>
   290dc:	ldr	r2, [r4, r2]
   290e0:	str	r2, [r3, #344]	; 0x158
   290e4:	ldr	r3, [r5, #24]
   290e8:	ldr	r2, [pc, #720]	; 293c0 <myhtml_tokenizer_state_init@@Base+0x9cc>
   290ec:	ldr	r2, [r4, r2]
   290f0:	str	r2, [r3, #348]	; 0x15c
   290f4:	ldr	r3, [r5, #24]
   290f8:	ldr	r2, [pc, #708]	; 293c4 <myhtml_tokenizer_state_init@@Base+0x9d0>
   290fc:	ldr	r2, [r4, r2]
   29100:	str	r2, [r3, #352]	; 0x160
   29104:	ldr	r3, [r5, #24]
   29108:	ldr	r2, [pc, #696]	; 293c8 <myhtml_tokenizer_state_init@@Base+0x9d4>
   2910c:	ldr	r2, [r4, r2]
   29110:	str	r2, [r3, #356]	; 0x164
   29114:	ldr	r3, [r5, #24]
   29118:	ldr	r2, [pc, #684]	; 293cc <myhtml_tokenizer_state_init@@Base+0x9d8>
   2911c:	ldr	r2, [r4, r2]
   29120:	str	r2, [r3, #360]	; 0x168
   29124:	ldr	r3, [r5, #24]
   29128:	ldr	r2, [pc, #672]	; 293d0 <myhtml_tokenizer_state_init@@Base+0x9dc>
   2912c:	ldr	r2, [r4, r2]
   29130:	str	r2, [r3, #364]	; 0x16c
   29134:	ldr	r3, [r5, #24]
   29138:	ldr	r2, [pc, #660]	; 293d4 <myhtml_tokenizer_state_init@@Base+0x9e0>
   2913c:	ldr	r2, [r4, r2]
   29140:	str	r2, [r3, #368]	; 0x170
   29144:	ldr	r3, [r5, #24]
   29148:	ldr	r2, [pc, #648]	; 293d8 <myhtml_tokenizer_state_init@@Base+0x9e4>
   2914c:	ldr	r2, [r4, r2]
   29150:	str	r2, [r3, #372]	; 0x174
   29154:	ldr	r3, [r5, #24]
   29158:	ldr	r2, [pc, #636]	; 293dc <myhtml_tokenizer_state_init@@Base+0x9e8>
   2915c:	ldr	r2, [r4, r2]
   29160:	str	r2, [r3, #376]	; 0x178
   29164:	ldr	r3, [r5, #24]
   29168:	ldr	r2, [pc, #624]	; 293e0 <myhtml_tokenizer_state_init@@Base+0x9ec>
   2916c:	ldr	r2, [r4, r2]
   29170:	str	r2, [r3, #380]	; 0x17c
   29174:	ldr	r3, [r5, #24]
   29178:	ldr	r2, [pc, #612]	; 293e4 <myhtml_tokenizer_state_init@@Base+0x9f0>
   2917c:	ldr	r2, [r4, r2]
   29180:	str	r2, [r3, #384]	; 0x180
   29184:	ldr	r3, [r5, #24]
   29188:	ldr	r2, [pc, #600]	; 293e8 <myhtml_tokenizer_state_init@@Base+0x9f4>
   2918c:	ldr	r2, [r4, r2]
   29190:	str	r2, [r3, #388]	; 0x184
   29194:	ldr	r3, [r5, #24]
   29198:	ldr	r2, [pc, #588]	; 293ec <myhtml_tokenizer_state_init@@Base+0x9f8>
   2919c:	ldr	r2, [r4, r2]
   291a0:	str	r2, [r3, #392]	; 0x188
   291a4:	ldr	r3, [r5, #24]
   291a8:	ldr	r2, [pc, #576]	; 293f0 <myhtml_tokenizer_state_init@@Base+0x9fc>
   291ac:	ldr	r2, [r4, r2]
   291b0:	str	r2, [r3, #396]	; 0x18c
   291b4:	ldr	r3, [r5, #24]
   291b8:	ldr	r2, [pc, #564]	; 293f4 <myhtml_tokenizer_state_init@@Base+0xa00>
   291bc:	ldr	r2, [r4, r2]
   291c0:	str	r2, [r3, #400]	; 0x190
   291c4:	ldr	r3, [r5, #24]
   291c8:	ldr	r2, [pc, #552]	; 293f8 <myhtml_tokenizer_state_init@@Base+0xa04>
   291cc:	ldr	r2, [r4, r2]
   291d0:	str	r2, [r3, #404]	; 0x194
   291d4:	ldr	r3, [r5, #24]
   291d8:	ldr	r2, [pc, #540]	; 293fc <myhtml_tokenizer_state_init@@Base+0xa08>
   291dc:	ldr	r2, [r4, r2]
   291e0:	str	r2, [r3, #408]	; 0x198
   291e4:	ldr	r3, [r5, #24]
   291e8:	ldr	r2, [pc, #528]	; 29400 <myhtml_tokenizer_state_init@@Base+0xa0c>
   291ec:	ldr	r2, [r4, r2]
   291f0:	str	r2, [r3, #556]	; 0x22c
   291f4:	mov	r0, #0
   291f8:	pop	{r4, r5, r6, pc}
   291fc:	ldr	r0, [pc, #512]	; 29404 <myhtml_tokenizer_state_init@@Base+0xa10>
   29200:	pop	{r4, r5, r6, pc}
   29204:	strdeq	lr, [lr], -r8
   29208:	muleq	r0, r4, ip
   2920c:	muleq	r0, r0, r7
   29210:	andeq	r0, r0, r0, lsr r9
   29214:	andeq	r0, r0, ip, ror #17
   29218:	andeq	r0, r0, ip, asr r9
   2921c:	andeq	r0, r0, r0, lsl #15
   29220:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   29224:	andeq	r0, r0, ip, asr #17
   29228:	andeq	r0, r0, r8, lsl #14
   2922c:	andeq	r0, r0, r8, lsr r9
   29230:	andeq	r0, r0, r8, ror r9
   29234:	andeq	r0, r0, r0, lsr #18
   29238:	andeq	r0, r0, ip, lsl #18
   2923c:	andeq	r0, r0, r4, asr r9
   29240:	andeq	r0, r0, ip, lsr r8
   29244:	andeq	r0, r0, ip, ror #18
   29248:	andeq	r0, r0, ip, asr r8
   2924c:	andeq	r0, r0, r8, lsl #18
   29250:	andeq	r0, r0, ip, lsl #14
   29254:			; <UNDEFINED> instruction: 0x000007b0
   29258:	muleq	r0, r4, r8
   2925c:	muleq	r0, r8, r7
   29260:	andeq	r0, r0, r8, asr #19
   29264:	andeq	r0, r0, r4, lsr #17
   29268:	andeq	r0, r0, r8, asr #15
   2926c:	andeq	r0, r0, ip, lsr #14
   29270:	andeq	r0, r0, ip, asr #15
   29274:	andeq	r0, r0, ip, ror r7
   29278:	andeq	r0, r0, ip, ror #15
   2927c:	andeq	r0, r0, r8, asr r7
   29280:	andeq	r0, r0, r0, ror #18
   29284:			; <UNDEFINED> instruction: 0x000009b0
   29288:	andeq	r0, r0, ip, lsl #16
   2928c:	andeq	r0, r0, r4, lsl r7
   29290:	andeq	r0, r0, r4, asr r8
   29294:	muleq	r0, r0, r9
   29298:	andeq	r0, r0, ip, ror r8
   2929c:			; <UNDEFINED> instruction: 0x000007b4
   292a0:	andeq	r0, r0, ip, ror #16
   292a4:	andeq	r0, r0, r0, lsl #17
   292a8:	andeq	r0, r0, r0, asr #19
   292ac:	andeq	r0, r0, ip, ror #14
   292b0:	andeq	r0, r0, ip, lsl r8
   292b4:	andeq	r0, r0, r0, asr #15
   292b8:	andeq	r0, r0, ip, lsr #16
   292bc:			; <UNDEFINED> instruction: 0x000007bc
   292c0:	andeq	r0, r0, r4, lsr #16
   292c4:	andeq	r0, r0, r0, ror #15
   292c8:	andeq	r0, r0, r8, ror #18
   292cc:	strdeq	r0, [r0], -ip
   292d0:	andeq	r0, r0, r8, asr r8
   292d4:	andeq	r0, r0, r4, lsl #18
   292d8:	andeq	r0, r0, r0, lsr r8
   292dc:	andeq	r0, r0, r0, asr r8
   292e0:	muleq	r0, ip, r9
   292e4:	muleq	r0, r4, r7
   292e8:	andeq	r0, r0, r0, lsr #15
   292ec:	andeq	r0, r0, r8, lsl r8
   292f0:	andeq	r0, r0, ip, asr #18
   292f4:	andeq	r0, r0, r8, lsr r7
   292f8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   292fc:	andeq	r0, r0, r4, asr #15
   29300:	andeq	r0, r0, r0, lsl r9
   29304:	andeq	r0, r0, r4, lsr #15
   29308:	andeq	r0, r0, r8, ror #15
   2930c:	andeq	r0, r0, r0, lsl r8
   29310:	muleq	r0, r4, r9
   29314:	muleq	r0, r8, r9
   29318:	ldrdeq	r0, [r0], -r4
   2931c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   29320:	strdeq	r0, [r0], -r4
   29324:	andeq	r0, r0, r0, asr #18
   29328:	andeq	r0, r0, ip, asr r7
   2932c:			; <UNDEFINED> instruction: 0x000008b0
   29330:	andeq	r0, r0, r4, lsr r8
   29334:	strdeq	r0, [r0], -ip
   29338:	andeq	r0, r0, r4, ror #15
   2933c:	andeq	r0, r0, r4, asr #17
   29340:	andeq	r0, r0, r0, ror r9
   29344:	ldrdeq	r0, [r0], -r8
   29348:	andeq	r0, r0, r0, lsr #17
   2934c:	andeq	r0, r0, ip, lsl #15
   29350:	andeq	r0, r0, ip, lsr #19
   29354:	andeq	r0, r0, r4, lsl #15
   29358:	andeq	r0, r0, r4, ror #16
   2935c:	strdeq	r0, [r0], -r8
   29360:	andeq	r0, r0, r0, asr r9
   29364:	muleq	r0, ip, r7
   29368:	andeq	r0, r0, r0, ror #17
   2936c:			; <UNDEFINED> instruction: 0x000008bc
   29370:	andeq	r0, r0, r4, ror r8
   29374:	andeq	r0, r0, r4, asr #19
   29378:	andeq	r0, r0, r8, ror #17
   2937c:			; <UNDEFINED> instruction: 0x000008b4
   29380:	andeq	r0, r0, r8, asr #16
   29384:	andeq	r0, r0, ip, lsl r7
   29388:	andeq	r0, r0, r8, lsl r9
   2938c:	andeq	r0, r0, r8, lsr #14
   29390:	andeq	r0, r0, ip, lsr r7
   29394:	andeq	r0, r0, r8, asr #14
   29398:	andeq	r0, r0, ip, lsl #17
   2939c:	andeq	r0, r0, r8, asr #18
   293a0:	andeq	r0, r0, r8, lsl #15
   293a4:			; <UNDEFINED> instruction: 0x000009b4
   293a8:	andeq	r0, r0, r8, lsl #19
   293ac:			; <UNDEFINED> instruction: 0x000008b8
   293b0:	andeq	r0, r0, r0, lsl #19
   293b4:	andeq	r0, r0, r0, ror #16
   293b8:			; <UNDEFINED> instruction: 0x000007b8
   293bc:	muleq	r0, r0, r8
   293c0:	ldrdeq	r0, [r0], -ip
   293c4:	ldrdeq	r0, [r0], -r8
   293c8:	andeq	r0, r0, r4, lsr r9
   293cc:	andeq	r0, r0, r4, lsl r8
   293d0:	andeq	r0, r0, r0, lsl r7
   293d4:	andeq	r0, r0, r4, lsr #19
   293d8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   293dc:			; <UNDEFINED> instruction: 0x000009bc
   293e0:	andeq	r0, r0, r0, asr r7
   293e4:	andeq	r0, r0, r8, asr #17
   293e8:	strdeq	r0, [r0], -r8
   293ec:	andeq	r0, r0, r4, asr #16
   293f0:	andeq	r0, r0, r4, asr #18
   293f4:	andeq	r0, r0, r0, asr #16
   293f8:	andeq	r0, r0, r0, asr #17
   293fc:	ldrdeq	r0, [r0], -r4
   29400:	andeq	r0, r0, r8, lsl #16
   29404:	andeq	r9, r0, ip, lsr #2

00029408 <myhtml_tokenizer_state_destroy@@Base>:
   29408:	ldr	r0, [r0, #24]
   2940c:	cmp	r0, #0
   29410:	bxeq	lr
   29414:	push	{r4, lr}
   29418:	bl	10dcc <mycore_free@plt>
   2941c:	pop	{r4, pc}

00029420 <myhtml_tokenizer_state_doctype@@Base>:
   29420:	mov	r2, #52	; 0x34
   29424:	str	r2, [r0, #160]	; 0xa0
   29428:	mov	r0, r3
   2942c:	bx	lr

00029430 <myhtml_tokenizer_state_before_doctype_name@@Base>:
   29430:	push	{r4, r5, r6, lr}
   29434:	ldr	r5, [sp, #16]
   29438:	add	lr, r2, r3
   2943c:	ldrb	ip, [r2, r3]
   29440:	sub	ip, ip, #9
   29444:	uxtb	ip, ip
   29448:	cmp	ip, #23
   2944c:	bhi	2950c <myhtml_tokenizer_state_before_doctype_name@@Base+0xdc>
   29450:	ldr	r6, [pc, #356]	; 295bc <myhtml_tokenizer_state_before_doctype_name@@Base+0x18c>
   29454:	lsr	ip, r6, ip
   29458:	tst	ip, #1
   2945c:	beq	2950c <myhtml_tokenizer_state_before_doctype_name@@Base+0xdc>
   29460:	cmp	r3, r5
   29464:	bcs	295b4 <myhtml_tokenizer_state_before_doctype_name@@Base+0x184>
   29468:	mov	r4, r3
   2946c:	mov	r3, r6
   29470:	b	29480 <myhtml_tokenizer_state_before_doctype_name@@Base+0x50>
   29474:	lsr	ip, r3, ip
   29478:	tst	ip, #1
   2947c:	beq	294a0 <myhtml_tokenizer_state_before_doctype_name@@Base+0x70>
   29480:	add	r4, r4, #1
   29484:	cmp	r5, r4
   29488:	beq	29504 <myhtml_tokenizer_state_before_doctype_name@@Base+0xd4>
   2948c:	ldrb	ip, [lr, #1]!
   29490:	sub	ip, ip, #9
   29494:	uxtb	ip, ip
   29498:	cmp	ip, #23
   2949c:	bls	29474 <myhtml_tokenizer_state_before_doctype_name@@Base+0x44>
   294a0:	ldrb	r3, [r2, r4]
   294a4:	cmp	r3, #62	; 0x3e
   294a8:	beq	29520 <myhtml_tokenizer_state_before_doctype_name@@Base+0xf0>
   294ac:	ldr	r3, [r1, #40]	; 0x28
   294b0:	cmp	r3, #0
   294b4:	beq	29590 <myhtml_tokenizer_state_before_doctype_name@@Base+0x160>
   294b8:	ldr	r3, [r1, #44]	; 0x2c
   294bc:	ldr	r2, [r0, #56]	; 0x38
   294c0:	str	r2, [r3]
   294c4:	ldr	r3, [r1, #44]	; 0x2c
   294c8:	ldr	r2, [r3]
   294cc:	str	r3, [r2, #4]
   294d0:	ldr	r3, [r1, #44]	; 0x2c
   294d4:	ldr	r3, [r3]
   294d8:	str	r3, [r1, #44]	; 0x2c
   294dc:	mov	r2, #0
   294e0:	str	r2, [r3]
   294e4:	ldr	r3, [r1, #44]	; 0x2c
   294e8:	str	r3, [r0, #56]	; 0x38
   294ec:	ldr	r2, [r0, #56]	; 0x38
   294f0:	ldr	r3, [r0, #192]	; 0xc0
   294f4:	add	r3, r3, r4
   294f8:	str	r3, [r2, #48]	; 0x30
   294fc:	mov	r3, #53	; 0x35
   29500:	str	r3, [r0, #160]	; 0xa0
   29504:	mov	r0, r4
   29508:	pop	{r4, r5, r6, pc}
   2950c:	cmp	r3, r5
   29510:	movcs	r4, r3
   29514:	bcs	29504 <myhtml_tokenizer_state_before_doctype_name@@Base+0xd4>
   29518:	mov	r4, r3
   2951c:	b	294a0 <myhtml_tokenizer_state_before_doctype_name@@Base+0x70>
   29520:	mov	r2, r1
   29524:	mov	r5, r0
   29528:	mov	r3, #1
   2952c:	str	r3, [r0, #176]	; 0xb0
   29530:	add	r4, r4, r3
   29534:	ldr	r3, [r0, #192]	; 0xc0
   29538:	ldr	r1, [r1, #32]
   2953c:	sub	r3, r3, r1
   29540:	add	r3, r3, r4
   29544:	str	r3, [r2, #36]	; 0x24
   29548:	mov	r1, r4
   2954c:	bl	10028 <myhtml_queue_add@plt>
   29550:	cmp	r0, #0
   29554:	movne	r3, #69	; 0x45
   29558:	strne	r3, [r5, #160]	; 0xa0
   2955c:	movne	r4, #0
   29560:	bne	29504 <myhtml_tokenizer_state_before_doctype_name@@Base+0xd4>
   29564:	ldr	r0, [r5, #8]
   29568:	ldr	r1, [r0, #16]
   2956c:	bl	10904 <myhtml_token_attr_create@plt>
   29570:	str	r0, [r5, #56]	; 0x38
   29574:	cmp	r0, #0
   29578:	moveq	r3, #69	; 0x45
   2957c:	streq	r3, [r5, #160]	; 0xa0
   29580:	moveq	r4, #0
   29584:	movne	r3, #0
   29588:	strne	r3, [r5, #160]	; 0xa0
   2958c:	b	29504 <myhtml_tokenizer_state_before_doctype_name@@Base+0xd4>
   29590:	ldr	r3, [r0, #56]	; 0x38
   29594:	str	r3, [r1, #40]	; 0x28
   29598:	str	r3, [r1, #44]	; 0x2c
   2959c:	str	r3, [r0, #56]	; 0x38
   295a0:	mov	r2, #0
   295a4:	str	r2, [r3]
   295a8:	ldr	r3, [r0, #56]	; 0x38
   295ac:	str	r2, [r3, #4]
   295b0:	b	294ec <myhtml_tokenizer_state_before_doctype_name@@Base+0xbc>
   295b4:	mov	r4, r3
   295b8:	b	29504 <myhtml_tokenizer_state_before_doctype_name@@Base+0xd4>
   295bc:	addeq	r0, r0, fp, lsl r0

000295c0 <myhtml_tokenizer_state_doctype_name@@Base>:
   295c0:	push	{r4, r5, r6, lr}
   295c4:	mov	r5, r0
   295c8:	mov	r4, r3
   295cc:	ldr	r0, [sp, #16]
   295d0:	cmp	r3, r0
   295d4:	bcs	29710 <myhtml_tokenizer_state_doctype_name@@Base+0x150>
   295d8:	add	r3, r2, r3
   295dc:	ldrb	r2, [r2, r4]
   295e0:	cmp	r2, #62	; 0x3e
   295e4:	beq	29614 <myhtml_tokenizer_state_doctype_name@@Base+0x54>
   295e8:	sub	r2, r2, #9
   295ec:	uxtb	r2, r2
   295f0:	cmp	r2, #23
   295f4:	bhi	29608 <myhtml_tokenizer_state_doctype_name@@Base+0x48>
   295f8:	ldr	ip, [pc, #280]	; 29718 <myhtml_tokenizer_state_doctype_name@@Base+0x158>
   295fc:	lsr	r2, ip, r2
   29600:	tst	r2, #1
   29604:	bne	296cc <myhtml_tokenizer_state_doctype_name@@Base+0x10c>
   29608:	mov	r2, r3
   2960c:	ldr	ip, [pc, #260]	; 29718 <myhtml_tokenizer_state_doctype_name@@Base+0x158>
   29610:	b	296a0 <myhtml_tokenizer_state_doctype_name@@Base+0xe0>
   29614:	ldr	r2, [r5, #56]	; 0x38
   29618:	ldr	r3, [r5, #192]	; 0xc0
   2961c:	ldr	r0, [r2, #48]	; 0x30
   29620:	sub	r3, r3, r0
   29624:	add	r3, r3, r4
   29628:	str	r3, [r2, #52]	; 0x34
   2962c:	add	r4, r4, #1
   29630:	ldr	r3, [r5, #192]	; 0xc0
   29634:	ldr	r2, [r1, #32]
   29638:	sub	r3, r3, r2
   2963c:	add	r3, r3, r4
   29640:	str	r3, [r1, #36]	; 0x24
   29644:	mov	r2, r1
   29648:	mov	r1, r4
   2964c:	mov	r0, r5
   29650:	bl	10028 <myhtml_queue_add@plt>
   29654:	cmp	r0, #0
   29658:	movne	r3, #69	; 0x45
   2965c:	strne	r3, [r5, #160]	; 0xa0
   29660:	movne	r4, #0
   29664:	bne	29710 <myhtml_tokenizer_state_doctype_name@@Base+0x150>
   29668:	ldr	r0, [r5, #8]
   2966c:	ldr	r1, [r0, #16]
   29670:	bl	10904 <myhtml_token_attr_create@plt>
   29674:	str	r0, [r5, #56]	; 0x38
   29678:	cmp	r0, #0
   2967c:	moveq	r3, #69	; 0x45
   29680:	streq	r3, [r5, #160]	; 0xa0
   29684:	moveq	r4, #0
   29688:	movne	r3, #0
   2968c:	strne	r3, [r5, #160]	; 0xa0
   29690:	b	29710 <myhtml_tokenizer_state_doctype_name@@Base+0x150>
   29694:	lsr	r3, ip, r3
   29698:	tst	r3, #1
   2969c:	bne	296cc <myhtml_tokenizer_state_doctype_name@@Base+0x10c>
   296a0:	add	r4, r4, #1
   296a4:	cmp	r0, r4
   296a8:	beq	29710 <myhtml_tokenizer_state_doctype_name@@Base+0x150>
   296ac:	ldrb	r3, [r2, #1]!
   296b0:	cmp	r3, #62	; 0x3e
   296b4:	beq	29614 <myhtml_tokenizer_state_doctype_name@@Base+0x54>
   296b8:	sub	r3, r3, #9
   296bc:	uxtb	r3, r3
   296c0:	cmp	r3, #23
   296c4:	bhi	296a0 <myhtml_tokenizer_state_doctype_name@@Base+0xe0>
   296c8:	b	29694 <myhtml_tokenizer_state_doctype_name@@Base+0xd4>
   296cc:	ldr	r2, [r5, #56]	; 0x38
   296d0:	ldr	r3, [r5, #192]	; 0xc0
   296d4:	ldr	r1, [r2, #48]	; 0x30
   296d8:	sub	r3, r3, r1
   296dc:	add	r3, r3, r4
   296e0:	str	r3, [r2, #52]	; 0x34
   296e4:	ldr	r0, [r5, #8]
   296e8:	ldr	r1, [r0, #16]
   296ec:	bl	10904 <myhtml_token_attr_create@plt>
   296f0:	str	r0, [r5, #56]	; 0x38
   296f4:	cmp	r0, #0
   296f8:	moveq	r3, #69	; 0x45
   296fc:	streq	r3, [r5, #160]	; 0xa0
   29700:	moveq	r4, #0
   29704:	movne	r3, #54	; 0x36
   29708:	strne	r3, [r5, #160]	; 0xa0
   2970c:	addne	r4, r4, #1
   29710:	mov	r0, r4
   29714:	pop	{r4, r5, r6, pc}
   29718:	addeq	r0, r0, fp, lsl r0

0002971c <myhtml_tokenizer_state_after_doctype_name@@Base>:
   2971c:	push	{r4, r5, r6, lr}
   29720:	ldr	r5, [sp, #16]
   29724:	add	lr, r2, r3
   29728:	ldrb	ip, [r2, r3]
   2972c:	sub	ip, ip, #9
   29730:	uxtb	ip, ip
   29734:	cmp	ip, #23
   29738:	bhi	297b4 <myhtml_tokenizer_state_after_doctype_name@@Base+0x98>
   2973c:	ldr	r6, [pc, #208]	; 29814 <myhtml_tokenizer_state_after_doctype_name@@Base+0xf8>
   29740:	lsr	ip, r6, ip
   29744:	tst	ip, #1
   29748:	beq	297b4 <myhtml_tokenizer_state_after_doctype_name@@Base+0x98>
   2974c:	cmp	r3, r5
   29750:	bcs	2980c <myhtml_tokenizer_state_after_doctype_name@@Base+0xf0>
   29754:	mov	r4, r3
   29758:	mov	r3, r6
   2975c:	b	2976c <myhtml_tokenizer_state_after_doctype_name@@Base+0x50>
   29760:	lsr	ip, r3, ip
   29764:	tst	ip, #1
   29768:	beq	2978c <myhtml_tokenizer_state_after_doctype_name@@Base+0x70>
   2976c:	add	r4, r4, #1
   29770:	cmp	r5, r4
   29774:	beq	297ac <myhtml_tokenizer_state_after_doctype_name@@Base+0x90>
   29778:	ldrb	ip, [lr, #1]!
   2977c:	sub	ip, ip, #9
   29780:	uxtb	ip, ip
   29784:	cmp	ip, #23
   29788:	bls	29760 <myhtml_tokenizer_state_after_doctype_name@@Base+0x44>
   2978c:	ldrb	r3, [r2, r4]
   29790:	cmp	r3, #62	; 0x3e
   29794:	beq	297c8 <myhtml_tokenizer_state_after_doctype_name@@Base+0xac>
   29798:	ldr	r3, [r0, #192]	; 0xc0
   2979c:	add	r3, r3, r4
   297a0:	str	r3, [r1, #12]
   297a4:	mov	r3, #68	; 0x44
   297a8:	str	r3, [r0, #160]	; 0xa0
   297ac:	mov	r0, r4
   297b0:	pop	{r4, r5, r6, pc}
   297b4:	cmp	r3, r5
   297b8:	movcs	r4, r3
   297bc:	bcs	297ac <myhtml_tokenizer_state_after_doctype_name@@Base+0x90>
   297c0:	mov	r4, r3
   297c4:	b	2978c <myhtml_tokenizer_state_after_doctype_name@@Base+0x70>
   297c8:	mov	r2, r1
   297cc:	mov	r5, r0
   297d0:	add	r4, r4, #1
   297d4:	ldr	r3, [r0, #192]	; 0xc0
   297d8:	ldr	r1, [r1, #32]
   297dc:	sub	r3, r3, r1
   297e0:	add	r3, r3, r4
   297e4:	str	r3, [r2, #36]	; 0x24
   297e8:	mov	r1, r4
   297ec:	bl	10028 <myhtml_queue_add@plt>
   297f0:	cmp	r0, #0
   297f4:	movne	r3, #69	; 0x45
   297f8:	strne	r3, [r5, #160]	; 0xa0
   297fc:	movne	r4, #0
   29800:	moveq	r3, #0
   29804:	streq	r3, [r5, #160]	; 0xa0
   29808:	b	297ac <myhtml_tokenizer_state_after_doctype_name@@Base+0x90>
   2980c:	mov	r4, r3
   29810:	b	297ac <myhtml_tokenizer_state_after_doctype_name@@Base+0x90>
   29814:	addeq	r0, r0, fp, lsl r0

00029818 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base>:
   29818:	push	{r4, r5, r6, r7, r8, lr}
   2981c:	ldr	r6, [sp, #24]
   29820:	ldr	ip, [r1, #12]
   29824:	add	lr, ip, #6
   29828:	ldr	r2, [r0, #192]	; 0xc0
   2982c:	add	r2, r6, r2
   29830:	cmp	lr, r2
   29834:	bls	29840 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x28>
   29838:	mov	r0, r6
   2983c:	pop	{r4, r5, r6, r7, r8, pc}
   29840:	mov	r7, r3
   29844:	mov	r5, r1
   29848:	mov	r4, r0
   2984c:	mov	r2, #6
   29850:	mov	r1, ip
   29854:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   29858:	mov	r8, r0
   2985c:	mov	r2, #6
   29860:	ldr	r1, [pc, #432]	; 29a18 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x200>
   29864:	add	r1, pc, r1
   29868:	bl	102a4 <mycore_strncasecmp@plt>
   2986c:	subs	r6, r0, #0
   29870:	bne	2992c <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x114>
   29874:	ldr	r3, [r5, #40]	; 0x28
   29878:	cmp	r3, #0
   2987c:	beq	29908 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0xf0>
   29880:	ldr	r3, [r5, #44]	; 0x2c
   29884:	ldr	r2, [r4, #56]	; 0x38
   29888:	str	r2, [r3]
   2988c:	ldr	r3, [r5, #44]	; 0x2c
   29890:	ldr	r2, [r3]
   29894:	str	r3, [r2, #4]
   29898:	ldr	r3, [r5, #44]	; 0x2c
   2989c:	ldr	r3, [r3]
   298a0:	str	r3, [r5, #44]	; 0x2c
   298a4:	mov	r2, #0
   298a8:	str	r2, [r3]
   298ac:	ldr	r3, [r5, #44]	; 0x2c
   298b0:	str	r3, [r4, #56]	; 0x38
   298b4:	ldr	r3, [r4, #56]	; 0x38
   298b8:	ldr	r2, [r5, #12]
   298bc:	str	r2, [r3, #56]	; 0x38
   298c0:	ldr	r3, [r4, #56]	; 0x38
   298c4:	mov	r2, #6
   298c8:	str	r2, [r3, #60]	; 0x3c
   298cc:	ldr	r0, [r4, #8]
   298d0:	ldr	r1, [r0, #16]
   298d4:	bl	10904 <myhtml_token_attr_create@plt>
   298d8:	str	r0, [r4, #56]	; 0x38
   298dc:	cmp	r0, #0
   298e0:	moveq	r3, #69	; 0x45
   298e4:	streq	r3, [r4, #160]	; 0xa0
   298e8:	movne	r3, #56	; 0x38
   298ec:	strne	r3, [r4, #160]	; 0xa0
   298f0:	ldrne	r6, [r5, #12]
   298f4:	addne	r6, r6, #6
   298f8:	ldrne	r3, [r4, #76]	; 0x4c
   298fc:	ldrne	r3, [r3, #12]
   29900:	subne	r6, r6, r3
   29904:	b	29838 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x20>
   29908:	ldr	r3, [r4, #56]	; 0x38
   2990c:	str	r3, [r5, #40]	; 0x28
   29910:	str	r3, [r5, #44]	; 0x2c
   29914:	str	r3, [r4, #56]	; 0x38
   29918:	mov	r2, #0
   2991c:	str	r2, [r3]
   29920:	ldr	r3, [r4, #56]	; 0x38
   29924:	str	r2, [r3, #4]
   29928:	b	298b4 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x9c>
   2992c:	mov	r2, #6
   29930:	ldr	r1, [pc, #228]	; 29a1c <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x204>
   29934:	add	r1, pc, r1
   29938:	mov	r0, r8
   2993c:	bl	102a4 <mycore_strncasecmp@plt>
   29940:	subs	r6, r0, #0
   29944:	bne	29a00 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x1e8>
   29948:	ldr	r3, [r5, #40]	; 0x28
   2994c:	cmp	r3, #0
   29950:	beq	299dc <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x1c4>
   29954:	ldr	r3, [r5, #44]	; 0x2c
   29958:	ldr	r2, [r4, #56]	; 0x38
   2995c:	str	r2, [r3]
   29960:	ldr	r3, [r5, #44]	; 0x2c
   29964:	ldr	r2, [r3]
   29968:	str	r3, [r2, #4]
   2996c:	ldr	r3, [r5, #44]	; 0x2c
   29970:	ldr	r3, [r3]
   29974:	str	r3, [r5, #44]	; 0x2c
   29978:	mov	r2, #0
   2997c:	str	r2, [r3]
   29980:	ldr	r3, [r5, #44]	; 0x2c
   29984:	str	r3, [r4, #56]	; 0x38
   29988:	ldr	r3, [r4, #56]	; 0x38
   2998c:	ldr	r2, [r5, #12]
   29990:	str	r2, [r3, #56]	; 0x38
   29994:	ldr	r3, [r4, #56]	; 0x38
   29998:	mov	r2, #6
   2999c:	str	r2, [r3, #60]	; 0x3c
   299a0:	ldr	r0, [r4, #8]
   299a4:	ldr	r1, [r0, #16]
   299a8:	bl	10904 <myhtml_token_attr_create@plt>
   299ac:	str	r0, [r4, #56]	; 0x38
   299b0:	cmp	r0, #0
   299b4:	moveq	r3, #69	; 0x45
   299b8:	streq	r3, [r4, #160]	; 0xa0
   299bc:	movne	r3, #59	; 0x3b
   299c0:	strne	r3, [r4, #160]	; 0xa0
   299c4:	ldrne	r6, [r5, #12]
   299c8:	addne	r6, r6, #6
   299cc:	ldrne	r3, [r4, #76]	; 0x4c
   299d0:	ldrne	r3, [r3, #12]
   299d4:	subne	r6, r6, r3
   299d8:	b	29838 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x20>
   299dc:	ldr	r3, [r4, #56]	; 0x38
   299e0:	str	r3, [r5, #40]	; 0x28
   299e4:	str	r3, [r5, #44]	; 0x2c
   299e8:	str	r3, [r4, #56]	; 0x38
   299ec:	mov	r2, #0
   299f0:	str	r2, [r3]
   299f4:	ldr	r3, [r4, #56]	; 0x38
   299f8:	str	r2, [r3, #4]
   299fc:	b	29988 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x170>
   29a00:	mov	r3, #1
   29a04:	str	r3, [r4, #176]	; 0xb0
   29a08:	mov	r3, #66	; 0x42
   29a0c:	str	r3, [r4, #160]	; 0xa0
   29a10:	mov	r6, r7
   29a14:	b	29838 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x20>
   29a18:			; <UNDEFINED> instruction: 0x000d3db0
   29a1c:	ldrdeq	r3, [sp], -r8

00029a20 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base>:
   29a20:	push	{r4, r5, r6, lr}
   29a24:	ldr	r5, [sp, #16]
   29a28:	add	lr, r2, r3
   29a2c:	ldrb	ip, [r2, r3]
   29a30:	sub	ip, ip, #9
   29a34:	uxtb	ip, ip
   29a38:	cmp	ip, #23
   29a3c:	bhi	29ac8 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xa8>
   29a40:	ldr	r6, [pc, #320]	; 29b88 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x168>
   29a44:	lsr	ip, r6, ip
   29a48:	tst	ip, #1
   29a4c:	beq	29ac8 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xa8>
   29a50:	cmp	r3, r5
   29a54:	bcs	29b80 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x160>
   29a58:	mov	r4, r3
   29a5c:	mov	r3, r6
   29a60:	b	29a70 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x50>
   29a64:	lsr	ip, r3, ip
   29a68:	tst	ip, #1
   29a6c:	beq	29a90 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x70>
   29a70:	add	r4, r4, #1
   29a74:	cmp	r5, r4
   29a78:	beq	29ac0 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xa0>
   29a7c:	ldrb	ip, [lr, #1]!
   29a80:	sub	ip, ip, #9
   29a84:	uxtb	ip, ip
   29a88:	cmp	ip, #23
   29a8c:	bls	29a64 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x44>
   29a90:	ldrb	r3, [r2, r4]
   29a94:	cmp	r3, #34	; 0x22
   29a98:	beq	29adc <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xbc>
   29a9c:	cmp	r3, #39	; 0x27
   29aa0:	beq	29b08 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xe8>
   29aa4:	cmp	r3, #62	; 0x3e
   29aa8:	beq	29b34 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x114>
   29aac:	mov	r3, #1
   29ab0:	str	r3, [r0, #176]	; 0xb0
   29ab4:	mov	r3, #66	; 0x42
   29ab8:	str	r3, [r0, #160]	; 0xa0
   29abc:	add	r4, r4, #1
   29ac0:	mov	r0, r4
   29ac4:	pop	{r4, r5, r6, pc}
   29ac8:	cmp	r3, r5
   29acc:	movcs	r4, r3
   29ad0:	bcs	29ac0 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xa0>
   29ad4:	mov	r4, r3
   29ad8:	b	29a90 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x70>
   29adc:	ldr	r2, [r0, #56]	; 0x38
   29ae0:	ldr	r3, [r0, #192]	; 0xc0
   29ae4:	add	r3, r3, #1
   29ae8:	add	r3, r3, r4
   29aec:	str	r3, [r2, #56]	; 0x38
   29af0:	ldr	r3, [r0, #56]	; 0x38
   29af4:	mov	r2, #0
   29af8:	str	r2, [r3, #60]	; 0x3c
   29afc:	mov	r3, #57	; 0x39
   29b00:	str	r3, [r0, #160]	; 0xa0
   29b04:	b	29abc <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x9c>
   29b08:	ldr	r2, [r0, #56]	; 0x38
   29b0c:	ldr	r3, [r0, #192]	; 0xc0
   29b10:	add	r3, r3, #1
   29b14:	add	r3, r3, r4
   29b18:	str	r3, [r2, #56]	; 0x38
   29b1c:	ldr	r3, [r0, #56]	; 0x38
   29b20:	mov	r2, #0
   29b24:	str	r2, [r3, #60]	; 0x3c
   29b28:	mov	r3, #58	; 0x3a
   29b2c:	str	r3, [r0, #160]	; 0xa0
   29b30:	b	29abc <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x9c>
   29b34:	mov	r2, r1
   29b38:	mov	r5, r0
   29b3c:	mov	r3, #1
   29b40:	str	r3, [r0, #176]	; 0xb0
   29b44:	add	r4, r4, r3
   29b48:	ldr	r3, [r0, #192]	; 0xc0
   29b4c:	ldr	r1, [r1, #32]
   29b50:	sub	r3, r3, r1
   29b54:	add	r3, r3, r4
   29b58:	str	r3, [r2, #36]	; 0x24
   29b5c:	mov	r1, r4
   29b60:	bl	10028 <myhtml_queue_add@plt>
   29b64:	cmp	r0, #0
   29b68:	movne	r3, #69	; 0x45
   29b6c:	strne	r3, [r5, #160]	; 0xa0
   29b70:	movne	r4, #0
   29b74:	moveq	r3, #0
   29b78:	streq	r3, [r5, #160]	; 0xa0
   29b7c:	b	29ac0 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xa0>
   29b80:	mov	r4, r3
   29b84:	b	29ac0 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xa0>
   29b88:	addeq	r0, r0, fp, lsl r0

00029b8c <myhtml_tokenizer_doctype_public_identifier_dsq@@Base>:
   29b8c:	push	{r4, r5, r6, lr}
   29b90:	mov	r5, r0
   29b94:	mov	r6, r1
   29b98:	mov	r4, r3
   29b9c:	ldr	r1, [sp, #16]
   29ba0:	ldrb	r0, [sp, #20]
   29ba4:	cmp	r3, r1
   29ba8:	bcs	29d3c <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x1b0>
   29bac:	add	r3, r2, r3
   29bb0:	ldrb	r2, [r2, r4]
   29bb4:	cmp	r0, r2
   29bb8:	beq	29cb8 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x12c>
   29bbc:	cmp	r2, #62	; 0x3e
   29bc0:	movne	r2, r3
   29bc4:	beq	29be8 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x5c>
   29bc8:	add	r4, r4, #1
   29bcc:	cmp	r1, r4
   29bd0:	beq	29d3c <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x1b0>
   29bd4:	ldrb	r3, [r2, #1]!
   29bd8:	cmp	r3, r0
   29bdc:	beq	29cb8 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x12c>
   29be0:	cmp	r3, #62	; 0x3e
   29be4:	bne	29bc8 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x3c>
   29be8:	mov	r3, #1
   29bec:	str	r3, [r5, #176]	; 0xb0
   29bf0:	ldr	r2, [r5, #56]	; 0x38
   29bf4:	ldr	r1, [r2, #56]	; 0x38
   29bf8:	ldr	r3, [r5, #192]	; 0xc0
   29bfc:	add	r3, r4, r3
   29c00:	cmp	r1, r3
   29c04:	bcs	29c74 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0xe8>
   29c08:	sub	r3, r3, r1
   29c0c:	str	r3, [r2, #60]	; 0x3c
   29c10:	ldr	r3, [r6, #40]	; 0x28
   29c14:	cmp	r3, #0
   29c18:	beq	29d68 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x1dc>
   29c1c:	ldr	r3, [r6, #44]	; 0x2c
   29c20:	ldr	r2, [r5, #56]	; 0x38
   29c24:	str	r2, [r3]
   29c28:	ldr	r3, [r6, #44]	; 0x2c
   29c2c:	ldr	r2, [r3]
   29c30:	str	r3, [r2, #4]
   29c34:	ldr	r3, [r6, #44]	; 0x2c
   29c38:	ldr	r3, [r3]
   29c3c:	str	r3, [r6, #44]	; 0x2c
   29c40:	mov	r2, #0
   29c44:	str	r2, [r3]
   29c48:	ldr	r3, [r6, #44]	; 0x2c
   29c4c:	str	r3, [r5, #56]	; 0x38
   29c50:	ldr	r0, [r5, #8]
   29c54:	ldr	r1, [r0, #16]
   29c58:	bl	10904 <myhtml_token_attr_create@plt>
   29c5c:	str	r0, [r5, #56]	; 0x38
   29c60:	cmp	r0, #0
   29c64:	moveq	r3, #69	; 0x45
   29c68:	streq	r3, [r5, #160]	; 0xa0
   29c6c:	moveq	r4, #0
   29c70:	beq	29d3c <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x1b0>
   29c74:	add	r4, r4, #1
   29c78:	ldr	r3, [r5, #192]	; 0xc0
   29c7c:	ldr	r2, [r6, #32]
   29c80:	sub	r3, r3, r2
   29c84:	add	r3, r3, r4
   29c88:	str	r3, [r6, #36]	; 0x24
   29c8c:	mov	r2, r6
   29c90:	mov	r1, r4
   29c94:	mov	r0, r5
   29c98:	bl	10028 <myhtml_queue_add@plt>
   29c9c:	cmp	r0, #0
   29ca0:	movne	r3, #69	; 0x45
   29ca4:	strne	r3, [r5, #160]	; 0xa0
   29ca8:	movne	r4, #0
   29cac:	moveq	r3, #0
   29cb0:	streq	r3, [r5, #160]	; 0xa0
   29cb4:	b	29d3c <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x1b0>
   29cb8:	ldr	r2, [r5, #56]	; 0x38
   29cbc:	ldr	r3, [r5, #192]	; 0xc0
   29cc0:	ldr	r1, [r2, #56]	; 0x38
   29cc4:	sub	r3, r3, r1
   29cc8:	add	r3, r3, r4
   29ccc:	str	r3, [r2, #60]	; 0x3c
   29cd0:	ldr	r3, [r6, #40]	; 0x28
   29cd4:	cmp	r3, #0
   29cd8:	beq	29d44 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x1b8>
   29cdc:	ldr	r3, [r6, #44]	; 0x2c
   29ce0:	ldr	r2, [r5, #56]	; 0x38
   29ce4:	str	r2, [r3]
   29ce8:	ldr	r3, [r6, #44]	; 0x2c
   29cec:	ldr	r2, [r3]
   29cf0:	str	r3, [r2, #4]
   29cf4:	ldr	r3, [r6, #44]	; 0x2c
   29cf8:	ldr	r3, [r3]
   29cfc:	str	r3, [r6, #44]	; 0x2c
   29d00:	mov	r2, #0
   29d04:	str	r2, [r3]
   29d08:	ldr	r3, [r6, #44]	; 0x2c
   29d0c:	str	r3, [r5, #56]	; 0x38
   29d10:	ldr	r0, [r5, #8]
   29d14:	ldr	r1, [r0, #16]
   29d18:	bl	10904 <myhtml_token_attr_create@plt>
   29d1c:	str	r0, [r5, #56]	; 0x38
   29d20:	cmp	r0, #0
   29d24:	moveq	r3, #69	; 0x45
   29d28:	streq	r3, [r5, #160]	; 0xa0
   29d2c:	moveq	r4, #0
   29d30:	movne	r3, #59	; 0x3b
   29d34:	strne	r3, [r5, #160]	; 0xa0
   29d38:	addne	r4, r4, #1
   29d3c:	mov	r0, r4
   29d40:	pop	{r4, r5, r6, pc}
   29d44:	ldr	r3, [r5, #56]	; 0x38
   29d48:	str	r3, [r6, #40]	; 0x28
   29d4c:	str	r3, [r6, #44]	; 0x2c
   29d50:	str	r3, [r5, #56]	; 0x38
   29d54:	mov	r2, #0
   29d58:	str	r2, [r3]
   29d5c:	ldr	r3, [r5, #56]	; 0x38
   29d60:	str	r2, [r3, #4]
   29d64:	b	29d10 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x184>
   29d68:	ldr	r3, [r5, #56]	; 0x38
   29d6c:	str	r3, [r6, #40]	; 0x28
   29d70:	str	r3, [r6, #44]	; 0x2c
   29d74:	str	r3, [r5, #56]	; 0x38
   29d78:	mov	r2, #0
   29d7c:	str	r2, [r3]
   29d80:	ldr	r3, [r5, #56]	; 0x38
   29d84:	str	r2, [r3, #4]
   29d88:	b	29c50 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0xc4>

00029d8c <myhtml_tokenizer_state_doctype_public_identifier_double_quoted@@Base>:
   29d8c:	push	{lr}		; (str lr, [sp, #-4]!)
   29d90:	sub	sp, sp, #12
   29d94:	mov	ip, #34	; 0x22
   29d98:	str	ip, [sp, #4]
   29d9c:	ldr	ip, [sp, #16]
   29da0:	str	ip, [sp]
   29da4:	bl	104d8 <myhtml_tokenizer_doctype_public_identifier_dsq@plt>
   29da8:	add	sp, sp, #12
   29dac:	pop	{pc}		; (ldr pc, [sp], #4)

00029db0 <myhtml_tokenizer_state_doctype_public_identifier_single_quoted@@Base>:
   29db0:	push	{lr}		; (str lr, [sp, #-4]!)
   29db4:	sub	sp, sp, #12
   29db8:	mov	ip, #39	; 0x27
   29dbc:	str	ip, [sp, #4]
   29dc0:	ldr	ip, [sp, #16]
   29dc4:	str	ip, [sp]
   29dc8:	bl	104d8 <myhtml_tokenizer_doctype_public_identifier_dsq@plt>
   29dcc:	add	sp, sp, #12
   29dd0:	pop	{pc}		; (ldr pc, [sp], #4)

00029dd4 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base>:
   29dd4:	push	{r4, r5, r6, lr}
   29dd8:	ldr	r5, [sp, #16]
   29ddc:	add	lr, r2, r3
   29de0:	ldrb	ip, [r2, r3]
   29de4:	sub	ip, ip, #9
   29de8:	uxtb	ip, ip
   29dec:	cmp	ip, #23
   29df0:	bhi	29e74 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0xa0>
   29df4:	ldr	r6, [pc, #312]	; 29f34 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x160>
   29df8:	lsr	ip, r6, ip
   29dfc:	tst	ip, #1
   29e00:	beq	29e74 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0xa0>
   29e04:	cmp	r3, r5
   29e08:	bcs	29f2c <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x158>
   29e0c:	mov	r4, r3
   29e10:	mov	r3, r6
   29e14:	b	29e24 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x50>
   29e18:	lsr	ip, r3, ip
   29e1c:	tst	ip, #1
   29e20:	beq	29e44 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x70>
   29e24:	add	r4, r4, #1
   29e28:	cmp	r5, r4
   29e2c:	beq	29eb4 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0xe0>
   29e30:	ldrb	ip, [lr, #1]!
   29e34:	sub	ip, ip, #9
   29e38:	uxtb	ip, ip
   29e3c:	cmp	ip, #23
   29e40:	bls	29e18 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x44>
   29e44:	ldrb	r3, [r2, r4]
   29e48:	cmp	r3, #34	; 0x22
   29e4c:	beq	29e88 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0xb4>
   29e50:	cmp	r3, #39	; 0x27
   29e54:	beq	29ebc <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0xe8>
   29e58:	cmp	r3, #62	; 0x3e
   29e5c:	beq	29ee8 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x114>
   29e60:	mov	r3, #1
   29e64:	str	r3, [r0, #176]	; 0xb0
   29e68:	mov	r3, #66	; 0x42
   29e6c:	str	r3, [r0, #160]	; 0xa0
   29e70:	b	29eb4 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0xe0>
   29e74:	cmp	r3, r5
   29e78:	movcs	r4, r3
   29e7c:	bcs	29eb4 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0xe0>
   29e80:	mov	r4, r3
   29e84:	b	29e44 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x70>
   29e88:	ldr	r2, [r0, #56]	; 0x38
   29e8c:	ldr	r3, [r0, #192]	; 0xc0
   29e90:	add	r3, r3, #1
   29e94:	add	r3, r3, r4
   29e98:	str	r3, [r2, #56]	; 0x38
   29e9c:	ldr	r3, [r0, #56]	; 0x38
   29ea0:	mov	r2, #0
   29ea4:	str	r2, [r3, #60]	; 0x3c
   29ea8:	mov	r3, #63	; 0x3f
   29eac:	str	r3, [r0, #160]	; 0xa0
   29eb0:	add	r4, r4, #1
   29eb4:	mov	r0, r4
   29eb8:	pop	{r4, r5, r6, pc}
   29ebc:	ldr	r2, [r0, #56]	; 0x38
   29ec0:	ldr	r3, [r0, #192]	; 0xc0
   29ec4:	add	r3, r3, #1
   29ec8:	add	r3, r3, r4
   29ecc:	str	r3, [r2, #56]	; 0x38
   29ed0:	ldr	r3, [r0, #56]	; 0x38
   29ed4:	mov	r2, #0
   29ed8:	str	r2, [r3, #60]	; 0x3c
   29edc:	mov	r3, #64	; 0x40
   29ee0:	str	r3, [r0, #160]	; 0xa0
   29ee4:	b	29eb0 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0xdc>
   29ee8:	mov	r2, r1
   29eec:	mov	r5, r0
   29ef0:	add	r4, r4, #1
   29ef4:	ldr	r3, [r0, #192]	; 0xc0
   29ef8:	ldr	r1, [r1, #32]
   29efc:	sub	r3, r3, r1
   29f00:	add	r3, r3, r4
   29f04:	str	r3, [r2, #36]	; 0x24
   29f08:	mov	r1, r4
   29f0c:	bl	10028 <myhtml_queue_add@plt>
   29f10:	cmp	r0, #0
   29f14:	movne	r3, #69	; 0x45
   29f18:	strne	r3, [r5, #160]	; 0xa0
   29f1c:	movne	r4, #0
   29f20:	moveq	r3, #0
   29f24:	streq	r3, [r5, #160]	; 0xa0
   29f28:	b	29eb4 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0xe0>
   29f2c:	mov	r4, r3
   29f30:	b	29eb4 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0xe0>
   29f34:	addeq	r0, r0, fp, lsl r0

00029f38 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base>:
   29f38:	push	{r4, r5, r6, lr}
   29f3c:	mov	r5, r0
   29f40:	mov	r6, r1
   29f44:	mov	r4, r3
   29f48:	ldr	r1, [sp, #16]
   29f4c:	ldrb	r0, [sp, #20]
   29f50:	cmp	r3, r1
   29f54:	bcs	2a0e8 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x1b0>
   29f58:	add	r3, r2, r3
   29f5c:	ldrb	r2, [r2, r4]
   29f60:	cmp	r0, r2
   29f64:	beq	2a064 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x12c>
   29f68:	cmp	r2, #62	; 0x3e
   29f6c:	movne	r2, r3
   29f70:	beq	29f94 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x5c>
   29f74:	add	r4, r4, #1
   29f78:	cmp	r1, r4
   29f7c:	beq	2a0e8 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x1b0>
   29f80:	ldrb	r3, [r2, #1]!
   29f84:	cmp	r3, r0
   29f88:	beq	2a064 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x12c>
   29f8c:	cmp	r3, #62	; 0x3e
   29f90:	bne	29f74 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x3c>
   29f94:	mov	r3, #1
   29f98:	str	r3, [r5, #176]	; 0xb0
   29f9c:	ldr	r2, [r5, #56]	; 0x38
   29fa0:	ldr	r1, [r2, #56]	; 0x38
   29fa4:	ldr	r3, [r5, #192]	; 0xc0
   29fa8:	add	r3, r4, r3
   29fac:	cmp	r1, r3
   29fb0:	bcs	2a020 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0xe8>
   29fb4:	sub	r3, r3, r1
   29fb8:	str	r3, [r2, #60]	; 0x3c
   29fbc:	ldr	r3, [r6, #40]	; 0x28
   29fc0:	cmp	r3, #0
   29fc4:	beq	2a114 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x1dc>
   29fc8:	ldr	r3, [r6, #44]	; 0x2c
   29fcc:	ldr	r2, [r5, #56]	; 0x38
   29fd0:	str	r2, [r3]
   29fd4:	ldr	r3, [r6, #44]	; 0x2c
   29fd8:	ldr	r2, [r3]
   29fdc:	str	r3, [r2, #4]
   29fe0:	ldr	r3, [r6, #44]	; 0x2c
   29fe4:	ldr	r3, [r3]
   29fe8:	str	r3, [r6, #44]	; 0x2c
   29fec:	mov	r2, #0
   29ff0:	str	r2, [r3]
   29ff4:	ldr	r3, [r6, #44]	; 0x2c
   29ff8:	str	r3, [r5, #56]	; 0x38
   29ffc:	ldr	r0, [r5, #8]
   2a000:	ldr	r1, [r0, #16]
   2a004:	bl	10904 <myhtml_token_attr_create@plt>
   2a008:	str	r0, [r5, #56]	; 0x38
   2a00c:	cmp	r0, #0
   2a010:	moveq	r3, #69	; 0x45
   2a014:	streq	r3, [r5, #160]	; 0xa0
   2a018:	moveq	r4, #0
   2a01c:	beq	2a0e8 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x1b0>
   2a020:	add	r4, r4, #1
   2a024:	ldr	r3, [r5, #192]	; 0xc0
   2a028:	ldr	r2, [r6, #32]
   2a02c:	sub	r3, r3, r2
   2a030:	add	r3, r3, r4
   2a034:	str	r3, [r6, #36]	; 0x24
   2a038:	mov	r2, r6
   2a03c:	mov	r1, r4
   2a040:	mov	r0, r5
   2a044:	bl	10028 <myhtml_queue_add@plt>
   2a048:	cmp	r0, #0
   2a04c:	movne	r3, #69	; 0x45
   2a050:	strne	r3, [r5, #160]	; 0xa0
   2a054:	movne	r4, #0
   2a058:	moveq	r3, #0
   2a05c:	streq	r3, [r5, #160]	; 0xa0
   2a060:	b	2a0e8 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x1b0>
   2a064:	ldr	r2, [r5, #56]	; 0x38
   2a068:	ldr	r3, [r5, #192]	; 0xc0
   2a06c:	ldr	r1, [r2, #56]	; 0x38
   2a070:	sub	r3, r3, r1
   2a074:	add	r3, r3, r4
   2a078:	str	r3, [r2, #60]	; 0x3c
   2a07c:	ldr	r3, [r6, #40]	; 0x28
   2a080:	cmp	r3, #0
   2a084:	beq	2a0f0 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x1b8>
   2a088:	ldr	r3, [r6, #44]	; 0x2c
   2a08c:	ldr	r2, [r5, #56]	; 0x38
   2a090:	str	r2, [r3]
   2a094:	ldr	r3, [r6, #44]	; 0x2c
   2a098:	ldr	r2, [r3]
   2a09c:	str	r3, [r2, #4]
   2a0a0:	ldr	r3, [r6, #44]	; 0x2c
   2a0a4:	ldr	r3, [r3]
   2a0a8:	str	r3, [r6, #44]	; 0x2c
   2a0ac:	mov	r2, #0
   2a0b0:	str	r2, [r3]
   2a0b4:	ldr	r3, [r6, #44]	; 0x2c
   2a0b8:	str	r3, [r5, #56]	; 0x38
   2a0bc:	ldr	r0, [r5, #8]
   2a0c0:	ldr	r1, [r0, #16]
   2a0c4:	bl	10904 <myhtml_token_attr_create@plt>
   2a0c8:	str	r0, [r5, #56]	; 0x38
   2a0cc:	cmp	r0, #0
   2a0d0:	moveq	r3, #69	; 0x45
   2a0d4:	streq	r3, [r5, #160]	; 0xa0
   2a0d8:	moveq	r4, #0
   2a0dc:	movne	r3, #65	; 0x41
   2a0e0:	strne	r3, [r5, #160]	; 0xa0
   2a0e4:	addne	r4, r4, #1
   2a0e8:	mov	r0, r4
   2a0ec:	pop	{r4, r5, r6, pc}
   2a0f0:	ldr	r3, [r5, #56]	; 0x38
   2a0f4:	str	r3, [r6, #40]	; 0x28
   2a0f8:	str	r3, [r6, #44]	; 0x2c
   2a0fc:	str	r3, [r5, #56]	; 0x38
   2a100:	mov	r2, #0
   2a104:	str	r2, [r3]
   2a108:	ldr	r3, [r5, #56]	; 0x38
   2a10c:	str	r2, [r3, #4]
   2a110:	b	2a0bc <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x184>
   2a114:	ldr	r3, [r5, #56]	; 0x38
   2a118:	str	r3, [r6, #40]	; 0x28
   2a11c:	str	r3, [r6, #44]	; 0x2c
   2a120:	str	r3, [r5, #56]	; 0x38
   2a124:	mov	r2, #0
   2a128:	str	r2, [r3]
   2a12c:	ldr	r3, [r5, #56]	; 0x38
   2a130:	str	r2, [r3, #4]
   2a134:	b	29ffc <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0xc4>

0002a138 <myhtml_tokenizer_state_doctype_system_identifier_double_quoted@@Base>:
   2a138:	push	{lr}		; (str lr, [sp, #-4]!)
   2a13c:	sub	sp, sp, #12
   2a140:	mov	ip, #34	; 0x22
   2a144:	str	ip, [sp, #4]
   2a148:	ldr	ip, [sp, #16]
   2a14c:	str	ip, [sp]
   2a150:	bl	10a9c <myhtml_tokenizer_doctype_system_identifier_dsq@plt>
   2a154:	add	sp, sp, #12
   2a158:	pop	{pc}		; (ldr pc, [sp], #4)

0002a15c <myhtml_tokenizer_state_doctype_system_identifier_single_quoted@@Base>:
   2a15c:	push	{lr}		; (str lr, [sp, #-4]!)
   2a160:	sub	sp, sp, #12
   2a164:	mov	ip, #39	; 0x27
   2a168:	str	ip, [sp, #4]
   2a16c:	ldr	ip, [sp, #16]
   2a170:	str	ip, [sp]
   2a174:	bl	10a9c <myhtml_tokenizer_doctype_system_identifier_dsq@plt>
   2a178:	add	sp, sp, #12
   2a17c:	pop	{pc}		; (ldr pc, [sp], #4)

0002a180 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base>:
   2a180:	push	{r4, r5, r6, lr}
   2a184:	ldr	r5, [sp, #16]
   2a188:	add	lr, r2, r3
   2a18c:	ldrb	ip, [r2, r3]
   2a190:	sub	ip, ip, #9
   2a194:	uxtb	ip, ip
   2a198:	cmp	ip, #23
   2a19c:	bhi	2a20c <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x8c>
   2a1a0:	ldr	r6, [pc, #196]	; 2a26c <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xec>
   2a1a4:	lsr	ip, r6, ip
   2a1a8:	tst	ip, #1
   2a1ac:	beq	2a20c <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x8c>
   2a1b0:	cmp	r3, r5
   2a1b4:	bcs	2a264 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xe4>
   2a1b8:	mov	r4, r3
   2a1bc:	mov	r3, r6
   2a1c0:	b	2a1d0 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x50>
   2a1c4:	lsr	ip, r3, ip
   2a1c8:	tst	ip, #1
   2a1cc:	beq	2a1f0 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x70>
   2a1d0:	add	r4, r4, #1
   2a1d4:	cmp	r5, r4
   2a1d8:	beq	2a204 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x84>
   2a1dc:	ldrb	ip, [lr, #1]!
   2a1e0:	sub	ip, ip, #9
   2a1e4:	uxtb	ip, ip
   2a1e8:	cmp	ip, #23
   2a1ec:	bls	2a1c4 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x44>
   2a1f0:	ldrb	r3, [r2, r4]
   2a1f4:	cmp	r3, #62	; 0x3e
   2a1f8:	movne	r3, #66	; 0x42
   2a1fc:	strne	r3, [r0, #160]	; 0xa0
   2a200:	beq	2a220 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xa0>
   2a204:	mov	r0, r4
   2a208:	pop	{r4, r5, r6, pc}
   2a20c:	cmp	r3, r5
   2a210:	movcs	r4, r3
   2a214:	bcs	2a204 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x84>
   2a218:	mov	r4, r3
   2a21c:	b	2a1f0 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x70>
   2a220:	mov	r2, r1
   2a224:	mov	r5, r0
   2a228:	add	r4, r4, #1
   2a22c:	ldr	r3, [r0, #192]	; 0xc0
   2a230:	ldr	r1, [r1, #32]
   2a234:	sub	r3, r3, r1
   2a238:	add	r3, r3, r4
   2a23c:	str	r3, [r2, #36]	; 0x24
   2a240:	mov	r1, r4
   2a244:	bl	10028 <myhtml_queue_add@plt>
   2a248:	cmp	r0, #0
   2a24c:	movne	r3, #69	; 0x45
   2a250:	strne	r3, [r5, #160]	; 0xa0
   2a254:	movne	r4, #0
   2a258:	moveq	r3, #0
   2a25c:	streq	r3, [r5, #160]	; 0xa0
   2a260:	b	2a204 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x84>
   2a264:	mov	r4, r3
   2a268:	b	2a204 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x84>
   2a26c:	addeq	r0, r0, fp, lsl r0

0002a270 <myhtml_tokenizer_state_bogus_doctype@@Base>:
   2a270:	push	{r4, r5, r6, lr}
   2a274:	ldr	lr, [sp, #16]
   2a278:	cmp	r3, lr
   2a27c:	bcs	2a2fc <myhtml_tokenizer_state_bogus_doctype@@Base+0x8c>
   2a280:	add	ip, r2, r3
   2a284:	ldrb	r2, [r2, r3]
   2a288:	cmp	r2, #62	; 0x3e
   2a28c:	movne	r4, r3
   2a290:	beq	2a2f4 <myhtml_tokenizer_state_bogus_doctype@@Base+0x84>
   2a294:	add	r4, r4, #1
   2a298:	cmp	lr, r4
   2a29c:	beq	2a2ec <myhtml_tokenizer_state_bogus_doctype@@Base+0x7c>
   2a2a0:	ldrb	r3, [ip, #1]!
   2a2a4:	cmp	r3, #62	; 0x3e
   2a2a8:	bne	2a294 <myhtml_tokenizer_state_bogus_doctype@@Base+0x24>
   2a2ac:	mov	r2, r1
   2a2b0:	mov	r5, r0
   2a2b4:	add	r4, r4, #1
   2a2b8:	ldr	r3, [r0, #192]	; 0xc0
   2a2bc:	ldr	r1, [r1, #32]
   2a2c0:	sub	r3, r3, r1
   2a2c4:	add	r3, r3, r4
   2a2c8:	str	r3, [r2, #36]	; 0x24
   2a2cc:	mov	r1, r4
   2a2d0:	bl	10028 <myhtml_queue_add@plt>
   2a2d4:	cmp	r0, #0
   2a2d8:	movne	r3, #69	; 0x45
   2a2dc:	strne	r3, [r5, #160]	; 0xa0
   2a2e0:	movne	r4, #0
   2a2e4:	moveq	r3, #0
   2a2e8:	streq	r3, [r5, #160]	; 0xa0
   2a2ec:	mov	r0, r4
   2a2f0:	pop	{r4, r5, r6, pc}
   2a2f4:	mov	r4, r3
   2a2f8:	b	2a2ac <myhtml_tokenizer_state_bogus_doctype@@Base+0x3c>
   2a2fc:	mov	r4, r3
   2a300:	b	2a2ec <myhtml_tokenizer_state_bogus_doctype@@Base+0x7c>

0002a304 <myhtml_tokenizer_end_state_data@@Base>:
   2a304:	push	{r4, r5, r6, lr}
   2a308:	sub	sp, sp, #8
   2a30c:	mov	r5, r3
   2a310:	ldr	r3, [sp, #24]
   2a314:	ldr	ip, [r1, #32]
   2a318:	sub	ip, r3, ip
   2a31c:	ldr	r6, [r0, #192]	; 0xc0
   2a320:	add	ip, ip, r6
   2a324:	str	ip, [r1, #36]	; 0x24
   2a328:	ldr	ip, [r0, #192]	; 0xc0
   2a32c:	mov	lr, #512	; 0x200
   2a330:	str	lr, [sp]
   2a334:	add	r3, r3, ip
   2a338:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2a33c:	mov	r0, r5
   2a340:	add	sp, sp, #8
   2a344:	pop	{r4, r5, r6, pc}

0002a348 <myhtml_tokenizer_end_state_tag_open@@Base>:
   2a348:	push	{r4, r5, r6, lr}
   2a34c:	sub	sp, sp, #8
   2a350:	mov	r5, r0
   2a354:	mov	r4, r1
   2a358:	mov	r6, r3
   2a35c:	ldr	r3, [sp, #24]
   2a360:	ldr	r1, [r1, #32]
   2a364:	sub	r1, r3, r1
   2a368:	ldr	r0, [r0, #192]	; 0xc0
   2a36c:	add	r1, r1, r0
   2a370:	str	r1, [r4, #36]	; 0x24
   2a374:	ldr	r1, [r4, #24]
   2a378:	ldr	r0, [r5, #192]	; 0xc0
   2a37c:	add	ip, r3, r0
   2a380:	cmp	r1, ip
   2a384:	bcs	2a400 <myhtml_tokenizer_end_state_tag_open@@Base+0xb8>
   2a388:	cmp	r1, #0
   2a38c:	beq	2a3d0 <myhtml_tokenizer_end_state_tag_open@@Base+0x88>
   2a390:	sub	r1, r6, r1
   2a394:	add	r1, r1, r0
   2a398:	str	r1, [r4, #28]
   2a39c:	mov	r3, r6
   2a3a0:	mov	r1, r4
   2a3a4:	mov	r0, r5
   2a3a8:	bl	10c40 <myhtml_check_tag_parser@plt>
   2a3ac:	mov	r2, r4
   2a3b0:	mov	r1, r6
   2a3b4:	mov	r0, r5
   2a3b8:	bl	10028 <myhtml_queue_add@plt>
   2a3bc:	cmp	r0, #0
   2a3c0:	movne	r3, #69	; 0x45
   2a3c4:	strne	r3, [r5, #160]	; 0xa0
   2a3c8:	movne	r6, #0
   2a3cc:	b	2a400 <myhtml_tokenizer_end_state_tag_open@@Base+0xb8>
   2a3d0:	ldr	r1, [r4, #48]	; 0x30
   2a3d4:	ldr	r0, [r4, #48]	; 0x30
   2a3d8:	and	r1, r1, #8
   2a3dc:	eor	r1, r1, r0
   2a3e0:	str	r1, [r4, #48]	; 0x30
   2a3e4:	ldr	r1, [r5, #192]	; 0xc0
   2a3e8:	mov	r0, #512	; 0x200
   2a3ec:	str	r0, [sp]
   2a3f0:	add	r3, r3, r1
   2a3f4:	mov	r1, r4
   2a3f8:	mov	r0, r5
   2a3fc:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2a400:	mov	r0, r6
   2a404:	add	sp, sp, #8
   2a408:	pop	{r4, r5, r6, pc}

0002a40c <myhtml_tokenizer_end_state_tag_name@@Base>:
   2a40c:	push	{r4, r5, r6, lr}
   2a410:	sub	sp, sp, #8
   2a414:	mov	r5, r3
   2a418:	ldr	r3, [sp, #24]
   2a41c:	ldr	ip, [r1, #32]
   2a420:	sub	ip, r3, ip
   2a424:	ldr	r6, [r0, #192]	; 0xc0
   2a428:	add	ip, ip, r6
   2a42c:	str	ip, [r1, #36]	; 0x24
   2a430:	ldr	ip, [r0, #192]	; 0xc0
   2a434:	mov	lr, #512	; 0x200
   2a438:	str	lr, [sp]
   2a43c:	add	r3, r3, ip
   2a440:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2a444:	mov	r0, r5
   2a448:	add	sp, sp, #8
   2a44c:	pop	{r4, r5, r6, pc}

0002a450 <myhtml_tokenizer_end_state_end_tag_open@@Base>:
   2a450:	push	{r4, r5, lr}
   2a454:	sub	sp, sp, #12
   2a458:	mov	r4, r3
   2a45c:	ldr	r3, [sp, #24]
   2a460:	ldr	ip, [r1, #32]
   2a464:	sub	ip, r3, ip
   2a468:	ldr	lr, [r0, #192]	; 0xc0
   2a46c:	add	ip, ip, lr
   2a470:	str	ip, [r1, #36]	; 0x24
   2a474:	ldr	ip, [r1, #24]
   2a478:	ldr	lr, [r0, #192]	; 0xc0
   2a47c:	add	r5, r3, lr
   2a480:	cmp	ip, r5
   2a484:	bcc	2a494 <myhtml_tokenizer_end_state_end_tag_open@@Base+0x44>
   2a488:	mov	r0, r4
   2a48c:	add	sp, sp, #12
   2a490:	pop	{r4, r5, pc}
   2a494:	sub	ip, r4, ip
   2a498:	add	ip, ip, lr
   2a49c:	str	ip, [r1, #28]
   2a4a0:	ldr	ip, [r1, #48]	; 0x30
   2a4a4:	ldr	lr, [r1, #48]	; 0x30
   2a4a8:	and	ip, ip, #8
   2a4ac:	eor	ip, ip, lr
   2a4b0:	str	ip, [r1, #48]	; 0x30
   2a4b4:	ldr	ip, [r0, #192]	; 0xc0
   2a4b8:	mov	lr, #512	; 0x200
   2a4bc:	str	lr, [sp]
   2a4c0:	add	r3, r3, ip
   2a4c4:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2a4c8:	b	2a488 <myhtml_tokenizer_end_state_end_tag_open@@Base+0x38>

0002a4cc <myhtml_tokenizer_end_state_self_closing_start_tag@@Base>:
   2a4cc:	push	{r4, r5, r6, lr}
   2a4d0:	sub	sp, sp, #8
   2a4d4:	mov	r5, r3
   2a4d8:	ldr	r3, [sp, #24]
   2a4dc:	ldr	ip, [r1, #32]
   2a4e0:	sub	ip, r3, ip
   2a4e4:	ldr	r6, [r0, #192]	; 0xc0
   2a4e8:	add	ip, ip, r6
   2a4ec:	str	ip, [r1, #36]	; 0x24
   2a4f0:	ldr	ip, [r0, #192]	; 0xc0
   2a4f4:	mov	lr, #512	; 0x200
   2a4f8:	str	lr, [sp]
   2a4fc:	add	r3, r3, ip
   2a500:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2a504:	mov	r0, r5
   2a508:	add	sp, sp, #8
   2a50c:	pop	{r4, r5, r6, pc}

0002a510 <myhtml_tokenizer_end_state_markup_declaration_open@@Base>:
   2a510:	push	{r4, r5, r6, r7, r8, lr}
   2a514:	sub	sp, sp, #8
   2a518:	mov	r4, r1
   2a51c:	mov	r7, r3
   2a520:	ldr	r6, [sp, #32]
   2a524:	ldr	r3, [r1, #32]
   2a528:	sub	r3, r6, r3
   2a52c:	ldr	r1, [r0, #192]	; 0xc0
   2a530:	add	r3, r3, r1
   2a534:	str	r3, [r4, #36]	; 0x24
   2a538:	ldr	r3, [r4, #24]
   2a53c:	cmp	r3, #1
   2a540:	bls	2a584 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0x74>
   2a544:	mov	r5, r0
   2a548:	ldr	r8, [r0, #76]	; 0x4c
   2a54c:	str	r6, [sp]
   2a550:	mov	r1, r4
   2a554:	bl	ffd4 <myhtml_tokenizer_state_bogus_comment@plt>
   2a558:	str	r0, [r8, #4]
   2a55c:	ldr	r2, [r5, #64]	; 0x40
   2a560:	cmp	r4, r2
   2a564:	beq	2a5e8 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0xd8>
   2a568:	ldr	r1, [r2, #24]
   2a56c:	ldr	r3, [r5, #192]	; 0xc0
   2a570:	add	r3, r6, r3
   2a574:	sub	r3, r3, r1
   2a578:	str	r3, [r2, #28]
   2a57c:	cmp	r3, #0
   2a580:	bne	2a590 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0x80>
   2a584:	mov	r0, r7
   2a588:	add	sp, sp, #8
   2a58c:	pop	{r4, r5, r6, r7, r8, pc}
   2a590:	ldr	r3, [r2, #48]	; 0x30
   2a594:	ldr	r0, [r2, #48]	; 0x30
   2a598:	and	r3, r3, #8
   2a59c:	eor	r3, r3, r0
   2a5a0:	str	r3, [r2, #48]	; 0x30
   2a5a4:	mov	r3, #1
   2a5a8:	str	r3, [r2]
   2a5ac:	ldr	r3, [r2, #48]	; 0x30
   2a5b0:	orr	r3, r3, #512	; 0x200
   2a5b4:	str	r3, [r2, #48]	; 0x30
   2a5b8:	ldr	r3, [r5, #192]	; 0xc0
   2a5bc:	add	r6, r6, r3
   2a5c0:	sub	r1, r6, r1
   2a5c4:	str	r1, [r2, #28]
   2a5c8:	mov	r1, r7
   2a5cc:	mov	r0, r5
   2a5d0:	bl	10028 <myhtml_queue_add@plt>
   2a5d4:	cmp	r0, #0
   2a5d8:	movne	r3, #69	; 0x45
   2a5dc:	strne	r3, [r5, #160]	; 0xa0
   2a5e0:	movne	r7, #0
   2a5e4:	b	2a584 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0x74>
   2a5e8:	ldr	r3, [r4, #48]	; 0x30
   2a5ec:	ldr	r2, [r4, #48]	; 0x30
   2a5f0:	and	r3, r3, #8
   2a5f4:	eor	r3, r3, r2
   2a5f8:	str	r3, [r4, #48]	; 0x30
   2a5fc:	mov	r3, #2
   2a600:	str	r3, [r4]
   2a604:	ldr	r3, [r4, #48]	; 0x30
   2a608:	orr	r3, r3, #1024	; 0x400
   2a60c:	str	r3, [r4, #48]	; 0x30
   2a610:	ldr	r3, [r5, #192]	; 0xc0
   2a614:	add	r6, r6, r3
   2a618:	ldr	r3, [r4, #24]
   2a61c:	sub	r6, r6, r3
   2a620:	str	r6, [r4, #28]
   2a624:	mov	r2, r4
   2a628:	mov	r1, r7
   2a62c:	mov	r0, r5
   2a630:	bl	10028 <myhtml_queue_add@plt>
   2a634:	cmp	r0, #0
   2a638:	movne	r3, #69	; 0x45
   2a63c:	strne	r3, [r5, #160]	; 0xa0
   2a640:	movne	r7, #0
   2a644:	b	2a584 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0x74>

0002a648 <myhtml_tokenizer_end_state_before_attribute_name@@Base>:
   2a648:	push	{r4, r5, r6, lr}
   2a64c:	mov	r5, r0
   2a650:	mov	r2, r1
   2a654:	mov	r4, r3
   2a658:	ldr	r1, [r1, #32]
   2a65c:	ldr	r3, [sp, #16]
   2a660:	sub	r3, r3, r1
   2a664:	ldr	r1, [r0, #192]	; 0xc0
   2a668:	add	r3, r3, r1
   2a66c:	str	r3, [r2, #36]	; 0x24
   2a670:	mov	r1, r4
   2a674:	bl	10028 <myhtml_queue_add@plt>
   2a678:	cmp	r0, #0
   2a67c:	movne	r3, #69	; 0x45
   2a680:	strne	r3, [r5, #160]	; 0xa0
   2a684:	movne	r0, #0
   2a688:	moveq	r0, r4
   2a68c:	pop	{r4, r5, r6, pc}

0002a690 <myhtml_tokenizer_end_state_attribute_name@@Base>:
   2a690:	push	{r4, r5, r6, lr}
   2a694:	mov	r5, r0
   2a698:	mov	r2, r1
   2a69c:	mov	r4, r3
   2a6a0:	ldr	r1, [r1, #32]
   2a6a4:	ldr	r3, [sp, #16]
   2a6a8:	sub	r3, r3, r1
   2a6ac:	ldr	r1, [r0, #192]	; 0xc0
   2a6b0:	add	r3, r3, r1
   2a6b4:	str	r3, [r2, #36]	; 0x24
   2a6b8:	ldr	r1, [r0, #56]	; 0x38
   2a6bc:	ldr	r3, [r0, #192]	; 0xc0
   2a6c0:	add	r3, r4, r3
   2a6c4:	ldr	ip, [r1, #48]	; 0x30
   2a6c8:	sub	r3, r3, ip
   2a6cc:	str	r3, [r1, #52]	; 0x34
   2a6d0:	mov	r1, r4
   2a6d4:	bl	10028 <myhtml_queue_add@plt>
   2a6d8:	cmp	r0, #0
   2a6dc:	movne	r3, #69	; 0x45
   2a6e0:	strne	r3, [r5, #160]	; 0xa0
   2a6e4:	movne	r0, #0
   2a6e8:	moveq	r0, r4
   2a6ec:	pop	{r4, r5, r6, pc}

0002a6f0 <myhtml_tokenizer_end_state_after_attribute_name@@Base>:
   2a6f0:	push	{r4, r5, r6, lr}
   2a6f4:	mov	r5, r0
   2a6f8:	mov	r2, r1
   2a6fc:	mov	r4, r3
   2a700:	ldr	r1, [r1, #32]
   2a704:	ldr	r3, [sp, #16]
   2a708:	sub	r3, r3, r1
   2a70c:	ldr	r1, [r0, #192]	; 0xc0
   2a710:	add	r3, r3, r1
   2a714:	str	r3, [r2, #36]	; 0x24
   2a718:	mov	r1, r4
   2a71c:	bl	10028 <myhtml_queue_add@plt>
   2a720:	cmp	r0, #0
   2a724:	movne	r3, #69	; 0x45
   2a728:	strne	r3, [r5, #160]	; 0xa0
   2a72c:	movne	r0, #0
   2a730:	moveq	r0, r4
   2a734:	pop	{r4, r5, r6, pc}

0002a738 <myhtml_tokenizer_end_state_before_attribute_value@@Base>:
   2a738:	push	{r4, r5, r6, lr}
   2a73c:	mov	r5, r0
   2a740:	mov	r2, r1
   2a744:	mov	r4, r3
   2a748:	ldr	r1, [r1, #32]
   2a74c:	ldr	r3, [sp, #16]
   2a750:	sub	r3, r3, r1
   2a754:	ldr	r1, [r0, #192]	; 0xc0
   2a758:	add	r3, r3, r1
   2a75c:	str	r3, [r2, #36]	; 0x24
   2a760:	mov	r1, r4
   2a764:	bl	10028 <myhtml_queue_add@plt>
   2a768:	cmp	r0, #0
   2a76c:	beq	2a780 <myhtml_tokenizer_end_state_before_attribute_value@@Base+0x48>
   2a770:	mov	r3, #69	; 0x45
   2a774:	str	r3, [r5, #160]	; 0xa0
   2a778:	mov	r0, #0
   2a77c:	pop	{r4, r5, r6, pc}
   2a780:	ldr	r0, [r5, #8]
   2a784:	ldr	r1, [r0, #16]
   2a788:	bl	10904 <myhtml_token_attr_create@plt>
   2a78c:	str	r0, [r5, #56]	; 0x38
   2a790:	cmp	r0, #0
   2a794:	moveq	r3, #69	; 0x45
   2a798:	streq	r3, [r5, #160]	; 0xa0
   2a79c:	movne	r0, r4
   2a7a0:	pop	{r4, r5, r6, pc}

0002a7a4 <myhtml_tokenizer_end_state_attribute_value_double_quoted@@Base>:
   2a7a4:	ldr	ip, [r1, #32]
   2a7a8:	ldr	r2, [sp]
   2a7ac:	sub	r2, r2, ip
   2a7b0:	ldr	r0, [r0, #192]	; 0xc0
   2a7b4:	add	r2, r2, r0
   2a7b8:	str	r2, [r1, #36]	; 0x24
   2a7bc:	mov	r0, r3
   2a7c0:	bx	lr

0002a7c4 <myhtml_tokenizer_end_state_attribute_value_single_quoted@@Base>:
   2a7c4:	ldr	ip, [r1, #32]
   2a7c8:	ldr	r2, [sp]
   2a7cc:	sub	r2, r2, ip
   2a7d0:	ldr	r0, [r0, #192]	; 0xc0
   2a7d4:	add	r2, r2, r0
   2a7d8:	str	r2, [r1, #36]	; 0x24
   2a7dc:	mov	r0, r3
   2a7e0:	bx	lr

0002a7e4 <myhtml_tokenizer_end_state_attribute_value_unquoted@@Base>:
   2a7e4:	push	{r4, r5, r6, lr}
   2a7e8:	mov	r4, r0
   2a7ec:	mov	r2, r1
   2a7f0:	mov	r5, r3
   2a7f4:	ldr	r1, [r1, #32]
   2a7f8:	ldr	r3, [sp, #16]
   2a7fc:	sub	r3, r3, r1
   2a800:	ldr	r1, [r0, #192]	; 0xc0
   2a804:	add	r3, r3, r1
   2a808:	str	r3, [r2, #36]	; 0x24
   2a80c:	ldr	r1, [r0, #56]	; 0x38
   2a810:	ldr	r3, [r0, #192]	; 0xc0
   2a814:	add	r3, r5, r3
   2a818:	ldr	ip, [r1, #56]	; 0x38
   2a81c:	sub	r3, r3, ip
   2a820:	str	r3, [r1, #60]	; 0x3c
   2a824:	mov	r1, r5
   2a828:	bl	10028 <myhtml_queue_add@plt>
   2a82c:	cmp	r0, #0
   2a830:	beq	2a844 <myhtml_tokenizer_end_state_attribute_value_unquoted@@Base+0x60>
   2a834:	mov	r3, #69	; 0x45
   2a838:	str	r3, [r4, #160]	; 0xa0
   2a83c:	mov	r0, #0
   2a840:	pop	{r4, r5, r6, pc}
   2a844:	ldr	r0, [r4, #8]
   2a848:	ldr	r1, [r0, #16]
   2a84c:	bl	10904 <myhtml_token_attr_create@plt>
   2a850:	str	r0, [r4, #56]	; 0x38
   2a854:	cmp	r0, #0
   2a858:	moveq	r3, #69	; 0x45
   2a85c:	streq	r3, [r4, #160]	; 0xa0
   2a860:	movne	r0, r5
   2a864:	pop	{r4, r5, r6, pc}

0002a868 <myhtml_tokenizer_end_state_after_attribute_value_quoted@@Base>:
   2a868:	push	{r4, r5, r6, lr}
   2a86c:	mov	r5, r0
   2a870:	mov	r2, r1
   2a874:	mov	r4, r3
   2a878:	ldr	r1, [r1, #32]
   2a87c:	ldr	r3, [sp, #16]
   2a880:	sub	r3, r3, r1
   2a884:	ldr	r1, [r0, #192]	; 0xc0
   2a888:	add	r3, r3, r1
   2a88c:	str	r3, [r2, #36]	; 0x24
   2a890:	ldr	r3, [r2, #24]
   2a894:	sub	r3, r4, r3
   2a898:	ldr	r1, [r0, #192]	; 0xc0
   2a89c:	add	r3, r3, r1
   2a8a0:	str	r3, [r2, #28]
   2a8a4:	mov	r1, r4
   2a8a8:	bl	10028 <myhtml_queue_add@plt>
   2a8ac:	cmp	r0, #0
   2a8b0:	movne	r3, #69	; 0x45
   2a8b4:	strne	r3, [r5, #160]	; 0xa0
   2a8b8:	movne	r0, #0
   2a8bc:	moveq	r0, r4
   2a8c0:	pop	{r4, r5, r6, pc}

0002a8c4 <myhtml_tokenizer_end_state_comment_start@@Base>:
   2a8c4:	push	{r4, r5, r6, lr}
   2a8c8:	mov	r5, r0
   2a8cc:	mov	r2, r1
   2a8d0:	mov	r4, r3
   2a8d4:	ldr	r1, [r1, #32]
   2a8d8:	ldr	r3, [sp, #16]
   2a8dc:	sub	r3, r3, r1
   2a8e0:	ldr	r1, [r0, #192]	; 0xc0
   2a8e4:	add	r3, r3, r1
   2a8e8:	str	r3, [r2, #36]	; 0x24
   2a8ec:	ldr	r3, [r2, #24]
   2a8f0:	sub	r3, r4, r3
   2a8f4:	ldr	r1, [r0, #192]	; 0xc0
   2a8f8:	add	r3, r3, r1
   2a8fc:	str	r3, [r2, #28]
   2a900:	mov	r1, r4
   2a904:	bl	10028 <myhtml_queue_add@plt>
   2a908:	cmp	r0, #0
   2a90c:	movne	r3, #69	; 0x45
   2a910:	strne	r3, [r5, #160]	; 0xa0
   2a914:	movne	r0, #0
   2a918:	moveq	r0, r4
   2a91c:	pop	{r4, r5, r6, pc}

0002a920 <myhtml_tokenizer_end_state_comment_start_dash@@Base>:
   2a920:	push	{r4, r5, r6, lr}
   2a924:	mov	r5, r0
   2a928:	mov	r2, r1
   2a92c:	mov	r4, r3
   2a930:	ldr	r1, [r1, #32]
   2a934:	ldr	r3, [sp, #16]
   2a938:	sub	r3, r3, r1
   2a93c:	ldr	r1, [r0, #192]	; 0xc0
   2a940:	add	r3, r3, r1
   2a944:	str	r3, [r2, #36]	; 0x24
   2a948:	ldr	r3, [r2, #24]
   2a94c:	sub	r3, r4, r3
   2a950:	ldr	r1, [r0, #192]	; 0xc0
   2a954:	add	r3, r3, r1
   2a958:	str	r3, [r2, #28]
   2a95c:	mov	r1, r4
   2a960:	bl	10028 <myhtml_queue_add@plt>
   2a964:	cmp	r0, #0
   2a968:	movne	r3, #69	; 0x45
   2a96c:	strne	r3, [r5, #160]	; 0xa0
   2a970:	movne	r0, #0
   2a974:	moveq	r0, r4
   2a978:	pop	{r4, r5, r6, pc}

0002a97c <myhtml_tokenizer_end_state_comment@@Base>:
   2a97c:	push	{r4, r5, r6, lr}
   2a980:	mov	r5, r0
   2a984:	mov	r2, r1
   2a988:	mov	r4, r3
   2a98c:	ldr	r1, [r1, #32]
   2a990:	ldr	r3, [sp, #16]
   2a994:	sub	r3, r3, r1
   2a998:	ldr	r1, [r0, #192]	; 0xc0
   2a99c:	add	r3, r3, r1
   2a9a0:	str	r3, [r2, #36]	; 0x24
   2a9a4:	ldr	r3, [r2, #24]
   2a9a8:	sub	r3, r4, r3
   2a9ac:	ldr	r1, [r0, #192]	; 0xc0
   2a9b0:	add	r3, r3, r1
   2a9b4:	str	r3, [r2, #28]
   2a9b8:	mov	r1, r4
   2a9bc:	bl	10028 <myhtml_queue_add@plt>
   2a9c0:	cmp	r0, #0
   2a9c4:	movne	r3, #69	; 0x45
   2a9c8:	strne	r3, [r5, #160]	; 0xa0
   2a9cc:	movne	r0, #0
   2a9d0:	moveq	r0, r4
   2a9d4:	pop	{r4, r5, r6, pc}

0002a9d8 <myhtml_tokenizer_end_state_comment_end@@Base>:
   2a9d8:	push	{r4, r5, r6, lr}
   2a9dc:	ldr	ip, [r1, #32]
   2a9e0:	ldr	r2, [sp, #16]
   2a9e4:	sub	r2, r2, ip
   2a9e8:	ldr	ip, [r0, #192]	; 0xc0
   2a9ec:	add	r2, r2, ip
   2a9f0:	str	r2, [r1, #36]	; 0x24
   2a9f4:	ldr	ip, [r1, #24]
   2a9f8:	sub	ip, r3, ip
   2a9fc:	ldr	r2, [r0, #192]	; 0xc0
   2aa00:	add	ip, ip, r2
   2aa04:	cmp	ip, #2
   2aa08:	bhi	2aa18 <myhtml_tokenizer_end_state_comment_end@@Base+0x40>
   2aa0c:	str	ip, [r1, #28]
   2aa10:	mov	r0, r3
   2aa14:	pop	{r4, r5, r6, pc}
   2aa18:	mov	r4, r3
   2aa1c:	mov	r2, r1
   2aa20:	mov	r5, r0
   2aa24:	sub	ip, ip, #2
   2aa28:	str	ip, [r1, #28]
   2aa2c:	mov	r1, r3
   2aa30:	bl	10028 <myhtml_queue_add@plt>
   2aa34:	cmp	r0, #0
   2aa38:	movne	r3, #69	; 0x45
   2aa3c:	strne	r3, [r5, #160]	; 0xa0
   2aa40:	movne	r0, #0
   2aa44:	moveq	r0, r4
   2aa48:	pop	{r4, r5, r6, pc}

0002aa4c <myhtml_tokenizer_end_state_comment_end_dash@@Base>:
   2aa4c:	push	{r4, r5, r6, lr}
   2aa50:	mov	r5, r0
   2aa54:	mov	r2, r1
   2aa58:	mov	r4, r3
   2aa5c:	ldr	r1, [r1, #32]
   2aa60:	ldr	r3, [sp, #16]
   2aa64:	sub	r3, r3, r1
   2aa68:	ldr	r1, [r0, #192]	; 0xc0
   2aa6c:	add	r3, r3, r1
   2aa70:	str	r3, [r2, #36]	; 0x24
   2aa74:	ldr	r3, [r2, #24]
   2aa78:	sub	r3, r4, r3
   2aa7c:	ldr	r1, [r0, #192]	; 0xc0
   2aa80:	add	r3, r3, r1
   2aa84:	str	r3, [r2, #28]
   2aa88:	mov	r1, r4
   2aa8c:	bl	10028 <myhtml_queue_add@plt>
   2aa90:	cmp	r0, #0
   2aa94:	movne	r3, #69	; 0x45
   2aa98:	strne	r3, [r5, #160]	; 0xa0
   2aa9c:	movne	r0, #0
   2aaa0:	moveq	r0, r4
   2aaa4:	pop	{r4, r5, r6, pc}

0002aaa8 <myhtml_tokenizer_end_state_comment_end_bang@@Base>:
   2aaa8:	push	{r4, r5, r6, lr}
   2aaac:	mov	r5, r0
   2aab0:	mov	r2, r1
   2aab4:	mov	r4, r3
   2aab8:	ldr	r1, [r1, #32]
   2aabc:	ldr	r3, [sp, #16]
   2aac0:	sub	r3, r3, r1
   2aac4:	ldr	r1, [r0, #192]	; 0xc0
   2aac8:	add	r3, r3, r1
   2aacc:	str	r3, [r2, #36]	; 0x24
   2aad0:	ldr	r3, [r2, #24]
   2aad4:	sub	r3, r4, r3
   2aad8:	ldr	r1, [r0, #192]	; 0xc0
   2aadc:	add	r3, r3, r1
   2aae0:	str	r3, [r2, #28]
   2aae4:	mov	r1, r4
   2aae8:	bl	10028 <myhtml_queue_add@plt>
   2aaec:	cmp	r0, #0
   2aaf0:	movne	r3, #69	; 0x45
   2aaf4:	strne	r3, [r5, #160]	; 0xa0
   2aaf8:	movne	r0, #0
   2aafc:	moveq	r0, r4
   2ab00:	pop	{r4, r5, r6, pc}

0002ab04 <myhtml_tokenizer_end_state_bogus_comment@@Base>:
   2ab04:	push	{r4, r5, r6, lr}
   2ab08:	mov	r5, r0
   2ab0c:	mov	r2, r1
   2ab10:	mov	r4, r3
   2ab14:	ldr	r1, [r1, #32]
   2ab18:	ldr	r3, [sp, #16]
   2ab1c:	sub	r3, r3, r1
   2ab20:	ldr	r1, [r0, #192]	; 0xc0
   2ab24:	add	r3, r3, r1
   2ab28:	str	r3, [r2, #36]	; 0x24
   2ab2c:	ldr	r3, [r2, #24]
   2ab30:	sub	r3, r4, r3
   2ab34:	ldr	r1, [r0, #192]	; 0xc0
   2ab38:	add	r3, r3, r1
   2ab3c:	str	r3, [r2, #28]
   2ab40:	mov	r1, r4
   2ab44:	bl	10028 <myhtml_queue_add@plt>
   2ab48:	cmp	r0, #0
   2ab4c:	movne	r3, #69	; 0x45
   2ab50:	strne	r3, [r5, #160]	; 0xa0
   2ab54:	movne	r0, #0
   2ab58:	moveq	r0, r4
   2ab5c:	pop	{r4, r5, r6, pc}

0002ab60 <myhtml_tokenizer_end_state_cdata_section@@Base>:
   2ab60:	push	{r4, r5, r6, lr}
   2ab64:	mov	r4, r3
   2ab68:	ldr	r2, [r1, #32]
   2ab6c:	ldr	r3, [sp, #16]
   2ab70:	sub	r3, r3, r2
   2ab74:	ldr	r2, [r0, #192]	; 0xc0
   2ab78:	add	r3, r3, r2
   2ab7c:	str	r3, [r1, #36]	; 0x24
   2ab80:	ldr	r3, [r1, #24]
   2ab84:	sub	r3, r4, r3
   2ab88:	ldr	r2, [r0, #192]	; 0xc0
   2ab8c:	add	r3, r3, r2
   2ab90:	str	r3, [r1, #28]
   2ab94:	cmp	r3, #0
   2ab98:	bne	2aba4 <myhtml_tokenizer_end_state_cdata_section@@Base+0x44>
   2ab9c:	mov	r0, r4
   2aba0:	pop	{r4, r5, r6, pc}
   2aba4:	mov	r5, r0
   2aba8:	mov	r2, r1
   2abac:	mov	r1, r4
   2abb0:	bl	10028 <myhtml_queue_add@plt>
   2abb4:	cmp	r0, #0
   2abb8:	movne	r3, #69	; 0x45
   2abbc:	strne	r3, [r5, #160]	; 0xa0
   2abc0:	movne	r4, #0
   2abc4:	b	2ab9c <myhtml_tokenizer_end_state_cdata_section@@Base+0x3c>

0002abc8 <myhtml_tokenizer_end_state_rcdata@@Base>:
   2abc8:	push	{r4, r5, r6, lr}
   2abcc:	mov	r4, r0
   2abd0:	mov	r5, r3
   2abd4:	ldr	r2, [sp, #16]
   2abd8:	ldr	r3, [r1, #32]
   2abdc:	sub	r3, r2, r3
   2abe0:	ldr	r0, [r0, #192]	; 0xc0
   2abe4:	add	r3, r3, r0
   2abe8:	str	r3, [r1, #36]	; 0x24
   2abec:	ldr	r0, [r1, #24]
   2abf0:	ldr	r3, [r4, #192]	; 0xc0
   2abf4:	add	r3, r2, r3
   2abf8:	cmp	r0, r3
   2abfc:	bcc	2ac08 <myhtml_tokenizer_end_state_rcdata@@Base+0x40>
   2ac00:	mov	r0, r5
   2ac04:	pop	{r4, r5, r6, pc}
   2ac08:	ldr	r3, [r1, #48]	; 0x30
   2ac0c:	orr	r3, r3, #16
   2ac10:	str	r3, [r1, #48]	; 0x30
   2ac14:	mov	r3, #1
   2ac18:	str	r3, [r1]
   2ac1c:	sub	r2, r2, r0
   2ac20:	ldr	r3, [r4, #192]	; 0xc0
   2ac24:	add	r2, r3, r2
   2ac28:	str	r2, [r1, #28]
   2ac2c:	mov	r2, r1
   2ac30:	mov	r1, #0
   2ac34:	mov	r0, r4
   2ac38:	bl	10028 <myhtml_queue_add@plt>
   2ac3c:	cmp	r0, #0
   2ac40:	movne	r3, #69	; 0x45
   2ac44:	strne	r3, [r4, #160]	; 0xa0
   2ac48:	movne	r5, #0
   2ac4c:	b	2ac00 <myhtml_tokenizer_end_state_rcdata@@Base+0x38>

0002ac50 <myhtml_tokenizer_end_state_rcdata_less_than_sign@@Base>:
   2ac50:	push	{r4, r5, lr}
   2ac54:	sub	sp, sp, #12
   2ac58:	mov	r4, r3
   2ac5c:	ldr	r5, [r1, #32]
   2ac60:	ldr	r3, [sp, #24]
   2ac64:	sub	r3, r3, r5
   2ac68:	ldr	r5, [r0, #192]	; 0xc0
   2ac6c:	add	r3, r3, r5
   2ac70:	str	r3, [r1, #36]	; 0x24
   2ac74:	ldr	r3, [r0, #192]	; 0xc0
   2ac78:	mov	ip, #16
   2ac7c:	str	ip, [sp]
   2ac80:	add	r3, r4, r3
   2ac84:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2ac88:	mov	r0, r4
   2ac8c:	add	sp, sp, #12
   2ac90:	pop	{r4, r5, pc}

0002ac94 <myhtml_tokenizer_end_state_rcdata_end_tag_open@@Base>:
   2ac94:	push	{r4, r5, lr}
   2ac98:	sub	sp, sp, #12
   2ac9c:	mov	r4, r3
   2aca0:	ldr	r5, [r1, #32]
   2aca4:	ldr	r3, [sp, #24]
   2aca8:	sub	r3, r3, r5
   2acac:	ldr	r5, [r0, #192]	; 0xc0
   2acb0:	add	r3, r3, r5
   2acb4:	str	r3, [r1, #36]	; 0x24
   2acb8:	ldr	r3, [r0, #192]	; 0xc0
   2acbc:	mov	ip, #16
   2acc0:	str	ip, [sp]
   2acc4:	add	r3, r4, r3
   2acc8:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2accc:	mov	r0, r4
   2acd0:	add	sp, sp, #12
   2acd4:	pop	{r4, r5, pc}

0002acd8 <myhtml_tokenizer_end_state_rcdata_end_tag_name@@Base>:
   2acd8:	push	{r4, r5, lr}
   2acdc:	sub	sp, sp, #12
   2ace0:	mov	r4, r3
   2ace4:	ldr	r5, [r1, #32]
   2ace8:	ldr	r3, [sp, #24]
   2acec:	sub	r3, r3, r5
   2acf0:	ldr	r5, [r0, #192]	; 0xc0
   2acf4:	add	r3, r3, r5
   2acf8:	str	r3, [r1, #36]	; 0x24
   2acfc:	ldr	r3, [r0, #192]	; 0xc0
   2ad00:	mov	ip, #16
   2ad04:	str	ip, [sp]
   2ad08:	add	r3, r4, r3
   2ad0c:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2ad10:	mov	r0, r4
   2ad14:	add	sp, sp, #12
   2ad18:	pop	{r4, r5, pc}

0002ad1c <myhtml_tokenizer_end_state_rawtext@@Base>:
   2ad1c:	push	{r4, r5, lr}
   2ad20:	sub	sp, sp, #12
   2ad24:	mov	r4, r3
   2ad28:	ldr	r5, [r1, #32]
   2ad2c:	ldr	r3, [sp, #24]
   2ad30:	sub	r3, r3, r5
   2ad34:	ldr	r5, [r0, #192]	; 0xc0
   2ad38:	add	r3, r3, r5
   2ad3c:	str	r3, [r1, #36]	; 0x24
   2ad40:	ldr	r3, [r0, #192]	; 0xc0
   2ad44:	mov	ip, #32
   2ad48:	str	ip, [sp]
   2ad4c:	add	r3, r4, r3
   2ad50:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2ad54:	mov	r0, r4
   2ad58:	add	sp, sp, #12
   2ad5c:	pop	{r4, r5, pc}

0002ad60 <myhtml_tokenizer_end_state_rawtext_less_than_sign@@Base>:
   2ad60:	push	{r4, r5, lr}
   2ad64:	sub	sp, sp, #12
   2ad68:	mov	r4, r3
   2ad6c:	ldr	r5, [r1, #32]
   2ad70:	ldr	r3, [sp, #24]
   2ad74:	sub	r3, r3, r5
   2ad78:	ldr	r5, [r0, #192]	; 0xc0
   2ad7c:	add	r3, r3, r5
   2ad80:	str	r3, [r1, #36]	; 0x24
   2ad84:	ldr	r3, [r0, #192]	; 0xc0
   2ad88:	mov	ip, #32
   2ad8c:	str	ip, [sp]
   2ad90:	add	r3, r4, r3
   2ad94:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2ad98:	mov	r0, r4
   2ad9c:	add	sp, sp, #12
   2ada0:	pop	{r4, r5, pc}

0002ada4 <myhtml_tokenizer_end_state_rawtext_end_tag_open@@Base>:
   2ada4:	push	{r4, r5, lr}
   2ada8:	sub	sp, sp, #12
   2adac:	mov	r4, r3
   2adb0:	ldr	r5, [r1, #32]
   2adb4:	ldr	r3, [sp, #24]
   2adb8:	sub	r3, r3, r5
   2adbc:	ldr	r5, [r0, #192]	; 0xc0
   2adc0:	add	r3, r3, r5
   2adc4:	str	r3, [r1, #36]	; 0x24
   2adc8:	ldr	r3, [r0, #192]	; 0xc0
   2adcc:	mov	ip, #32
   2add0:	str	ip, [sp]
   2add4:	add	r3, r4, r3
   2add8:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2addc:	mov	r0, r4
   2ade0:	add	sp, sp, #12
   2ade4:	pop	{r4, r5, pc}

0002ade8 <myhtml_tokenizer_end_state_rawtext_end_tag_name@@Base>:
   2ade8:	push	{r4, r5, lr}
   2adec:	sub	sp, sp, #12
   2adf0:	mov	r4, r3
   2adf4:	ldr	r5, [r1, #32]
   2adf8:	ldr	r3, [sp, #24]
   2adfc:	sub	r3, r3, r5
   2ae00:	ldr	r5, [r0, #192]	; 0xc0
   2ae04:	add	r3, r3, r5
   2ae08:	str	r3, [r1, #36]	; 0x24
   2ae0c:	ldr	r3, [r0, #192]	; 0xc0
   2ae10:	mov	ip, #32
   2ae14:	str	ip, [sp]
   2ae18:	add	r3, r4, r3
   2ae1c:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2ae20:	mov	r0, r4
   2ae24:	add	sp, sp, #12
   2ae28:	pop	{r4, r5, pc}

0002ae2c <myhtml_tokenizer_end_state_plaintext@@Base>:
   2ae2c:	ldr	ip, [r1, #32]
   2ae30:	ldr	r2, [sp]
   2ae34:	sub	r2, r2, ip
   2ae38:	ldr	r0, [r0, #192]	; 0xc0
   2ae3c:	add	r2, r2, r0
   2ae40:	str	r2, [r1, #36]	; 0x24
   2ae44:	mov	r0, r3
   2ae48:	bx	lr

0002ae4c <myhtml_tokenizer_end_state_doctype@@Base>:
   2ae4c:	push	{r4, r5, lr}
   2ae50:	sub	sp, sp, #12
   2ae54:	mov	r4, r3
   2ae58:	ldr	r5, [r1, #32]
   2ae5c:	ldr	r3, [sp, #24]
   2ae60:	sub	r3, r3, r5
   2ae64:	ldr	r5, [r0, #192]	; 0xc0
   2ae68:	add	r3, r3, r5
   2ae6c:	str	r3, [r1, #36]	; 0x24
   2ae70:	ldr	r3, [r0, #192]	; 0xc0
   2ae74:	mov	ip, #32
   2ae78:	str	ip, [sp]
   2ae7c:	add	r3, r4, r3
   2ae80:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2ae84:	mov	r0, r4
   2ae88:	add	sp, sp, #12
   2ae8c:	pop	{r4, r5, pc}

0002ae90 <myhtml_tokenizer_end_state_before_doctype_name@@Base>:
   2ae90:	push	{r4, r5, r6, lr}
   2ae94:	mov	r5, r0
   2ae98:	mov	r2, r1
   2ae9c:	mov	r4, r3
   2aea0:	ldr	r1, [r1, #32]
   2aea4:	ldr	r3, [sp, #16]
   2aea8:	sub	r3, r3, r1
   2aeac:	ldr	r1, [r0, #192]	; 0xc0
   2aeb0:	add	r3, r3, r1
   2aeb4:	str	r3, [r2, #36]	; 0x24
   2aeb8:	mov	r3, #1
   2aebc:	str	r3, [r0, #176]	; 0xb0
   2aec0:	mov	r1, r4
   2aec4:	bl	10028 <myhtml_queue_add@plt>
   2aec8:	cmp	r0, #0
   2aecc:	movne	r3, #69	; 0x45
   2aed0:	strne	r3, [r5, #160]	; 0xa0
   2aed4:	movne	r0, #0
   2aed8:	moveq	r0, r4
   2aedc:	pop	{r4, r5, r6, pc}

0002aee0 <myhtml_tokenizer_end_state_doctype_name@@Base>:
   2aee0:	push	{r4, r5, r6, lr}
   2aee4:	mov	r5, r0
   2aee8:	mov	r2, r1
   2aeec:	mov	r4, r3
   2aef0:	ldr	r1, [r1, #32]
   2aef4:	ldr	r3, [sp, #16]
   2aef8:	sub	r3, r3, r1
   2aefc:	ldr	r1, [r0, #192]	; 0xc0
   2af00:	add	r3, r3, r1
   2af04:	str	r3, [r2, #36]	; 0x24
   2af08:	ldr	r1, [r0, #56]	; 0x38
   2af0c:	ldr	r3, [r0, #192]	; 0xc0
   2af10:	add	r3, r4, r3
   2af14:	ldr	ip, [r1, #48]	; 0x30
   2af18:	sub	r3, r3, ip
   2af1c:	str	r3, [r1, #52]	; 0x34
   2af20:	mov	r1, r4
   2af24:	bl	10028 <myhtml_queue_add@plt>
   2af28:	cmp	r0, #0
   2af2c:	movne	r3, #69	; 0x45
   2af30:	strne	r3, [r5, #160]	; 0xa0
   2af34:	movne	r0, #0
   2af38:	moveq	r0, r4
   2af3c:	pop	{r4, r5, r6, pc}

0002af40 <myhtml_tokenizer_end_state_after_doctype_name@@Base>:
   2af40:	push	{r4, r5, r6, lr}
   2af44:	mov	r5, r0
   2af48:	mov	r2, r1
   2af4c:	mov	r4, r3
   2af50:	ldr	r1, [r1, #32]
   2af54:	ldr	r3, [sp, #16]
   2af58:	sub	r3, r3, r1
   2af5c:	ldr	r1, [r0, #192]	; 0xc0
   2af60:	add	r3, r3, r1
   2af64:	str	r3, [r2, #36]	; 0x24
   2af68:	mov	r1, r4
   2af6c:	bl	10028 <myhtml_queue_add@plt>
   2af70:	cmp	r0, #0
   2af74:	movne	r3, #69	; 0x45
   2af78:	strne	r3, [r5, #160]	; 0xa0
   2af7c:	movne	r0, #0
   2af80:	moveq	r0, r4
   2af84:	pop	{r4, r5, r6, pc}

0002af88 <myhtml_tokenizer_end_state_custom_after_doctype_name_a_z@@Base>:
   2af88:	push	{r4, r5, r6, lr}
   2af8c:	mov	r5, r0
   2af90:	mov	r2, r1
   2af94:	mov	r4, r3
   2af98:	ldr	r1, [r1, #32]
   2af9c:	ldr	r3, [sp, #16]
   2afa0:	sub	r3, r3, r1
   2afa4:	ldr	r1, [r0, #192]	; 0xc0
   2afa8:	add	r3, r3, r1
   2afac:	str	r3, [r2, #36]	; 0x24
   2afb0:	mov	r1, r4
   2afb4:	bl	10028 <myhtml_queue_add@plt>
   2afb8:	cmp	r0, #0
   2afbc:	movne	r3, #69	; 0x45
   2afc0:	strne	r3, [r5, #160]	; 0xa0
   2afc4:	movne	r0, #0
   2afc8:	moveq	r0, r4
   2afcc:	pop	{r4, r5, r6, pc}

0002afd0 <myhtml_tokenizer_end_state_before_doctype_public_identifier@@Base>:
   2afd0:	push	{r4, r5, r6, lr}
   2afd4:	mov	r5, r0
   2afd8:	mov	r2, r1
   2afdc:	mov	r4, r3
   2afe0:	ldr	r1, [r1, #32]
   2afe4:	ldr	r3, [sp, #16]
   2afe8:	sub	r3, r3, r1
   2afec:	ldr	r1, [r0, #192]	; 0xc0
   2aff0:	add	r3, r3, r1
   2aff4:	str	r3, [r2, #36]	; 0x24
   2aff8:	mov	r3, #1
   2affc:	str	r3, [r0, #176]	; 0xb0
   2b000:	mov	r1, r4
   2b004:	bl	10028 <myhtml_queue_add@plt>
   2b008:	cmp	r0, #0
   2b00c:	movne	r3, #69	; 0x45
   2b010:	strne	r3, [r5, #160]	; 0xa0
   2b014:	movne	r0, #0
   2b018:	moveq	r0, r4
   2b01c:	pop	{r4, r5, r6, pc}

0002b020 <myhtml_tokenizer_end_state_doctype_public_identifier_double_quoted@@Base>:
   2b020:	push	{r4, r5, r6, lr}
   2b024:	mov	r4, r0
   2b028:	mov	r2, r1
   2b02c:	mov	r5, r3
   2b030:	ldr	r1, [sp, #16]
   2b034:	ldr	r3, [r2, #32]
   2b038:	sub	r3, r1, r3
   2b03c:	ldr	r0, [r0, #192]	; 0xc0
   2b040:	add	r3, r3, r0
   2b044:	str	r3, [r2, #36]	; 0x24
   2b048:	mov	r3, #1
   2b04c:	str	r3, [r4, #176]	; 0xb0
   2b050:	ldr	r3, [r4, #56]	; 0x38
   2b054:	ldr	r0, [r3, #48]	; 0x30
   2b058:	cmp	r1, #0
   2b05c:	cmpne	r0, #0
   2b060:	ldrne	r1, [r4, #192]	; 0xc0
   2b064:	addne	r1, r5, r1
   2b068:	subne	r0, r1, r0
   2b06c:	strne	r0, [r3, #52]	; 0x34
   2b070:	mov	r1, r5
   2b074:	mov	r0, r4
   2b078:	bl	10028 <myhtml_queue_add@plt>
   2b07c:	cmp	r0, #0
   2b080:	movne	r3, #69	; 0x45
   2b084:	strne	r3, [r4, #160]	; 0xa0
   2b088:	movne	r0, #0
   2b08c:	moveq	r0, r5
   2b090:	pop	{r4, r5, r6, pc}

0002b094 <myhtml_tokenizer_end_state_doctype_public_identifier_single_quoted@@Base>:
   2b094:	push	{r4, r5, r6, lr}
   2b098:	sub	sp, sp, #8
   2b09c:	mov	r4, r3
   2b0a0:	ldr	ip, [sp, #24]
   2b0a4:	ldr	r3, [r1, #32]
   2b0a8:	sub	r3, ip, r3
   2b0ac:	ldr	r6, [r0, #192]	; 0xc0
   2b0b0:	add	r3, r3, r6
   2b0b4:	str	r3, [r1, #36]	; 0x24
   2b0b8:	ldr	r3, [r0, #192]	; 0xc0
   2b0bc:	str	ip, [sp]
   2b0c0:	add	r3, r4, r3
   2b0c4:	bl	10c28 <myhtml_tokenizer_end_state_doctype_public_identifier_double_quoted@plt>
   2b0c8:	mov	r0, r4
   2b0cc:	add	sp, sp, #8
   2b0d0:	pop	{r4, r5, r6, pc}

0002b0d4 <myhtml_tokenizer_end_state_after_doctype_public_identifier@@Base>:
   2b0d4:	push	{r4, r5, r6, lr}
   2b0d8:	mov	r5, r0
   2b0dc:	mov	r2, r1
   2b0e0:	mov	r4, r3
   2b0e4:	ldr	r1, [r1, #32]
   2b0e8:	ldr	r3, [sp, #16]
   2b0ec:	sub	r3, r3, r1
   2b0f0:	ldr	r1, [r0, #192]	; 0xc0
   2b0f4:	add	r3, r3, r1
   2b0f8:	str	r3, [r2, #36]	; 0x24
   2b0fc:	mov	r1, r4
   2b100:	bl	10028 <myhtml_queue_add@plt>
   2b104:	cmp	r0, #0
   2b108:	movne	r3, #69	; 0x45
   2b10c:	strne	r3, [r5, #160]	; 0xa0
   2b110:	movne	r0, #0
   2b114:	moveq	r0, r4
   2b118:	pop	{r4, r5, r6, pc}

0002b11c <myhtml_tokenizer_end_state_doctype_system_identifier_double_quoted@@Base>:
   2b11c:	push	{r4, r5, r6, lr}
   2b120:	mov	r4, r0
   2b124:	mov	r2, r1
   2b128:	mov	r5, r3
   2b12c:	ldr	r1, [sp, #16]
   2b130:	ldr	r3, [r2, #32]
   2b134:	sub	r3, r1, r3
   2b138:	ldr	r0, [r0, #192]	; 0xc0
   2b13c:	add	r3, r3, r0
   2b140:	str	r3, [r2, #36]	; 0x24
   2b144:	mov	r3, #1
   2b148:	str	r3, [r4, #176]	; 0xb0
   2b14c:	ldr	r3, [r4, #56]	; 0x38
   2b150:	ldr	r0, [r3, #48]	; 0x30
   2b154:	cmp	r1, #0
   2b158:	cmpne	r0, #0
   2b15c:	ldrne	r1, [r4, #192]	; 0xc0
   2b160:	addne	r1, r5, r1
   2b164:	subne	r0, r1, r0
   2b168:	strne	r0, [r3, #52]	; 0x34
   2b16c:	mov	r1, r5
   2b170:	mov	r0, r4
   2b174:	bl	10028 <myhtml_queue_add@plt>
   2b178:	cmp	r0, #0
   2b17c:	movne	r3, #69	; 0x45
   2b180:	strne	r3, [r4, #160]	; 0xa0
   2b184:	movne	r0, #0
   2b188:	moveq	r0, r5
   2b18c:	pop	{r4, r5, r6, pc}

0002b190 <myhtml_tokenizer_end_state_doctype_system_identifier_single_quoted@@Base>:
   2b190:	push	{r4, r5, r6, lr}
   2b194:	sub	sp, sp, #8
   2b198:	mov	r4, r3
   2b19c:	ldr	ip, [sp, #24]
   2b1a0:	ldr	r3, [r1, #32]
   2b1a4:	sub	r3, ip, r3
   2b1a8:	ldr	r6, [r0, #192]	; 0xc0
   2b1ac:	add	r3, r3, r6
   2b1b0:	str	r3, [r1, #36]	; 0x24
   2b1b4:	ldr	r3, [r0, #192]	; 0xc0
   2b1b8:	str	ip, [sp]
   2b1bc:	add	r3, r4, r3
   2b1c0:	bl	10e08 <myhtml_tokenizer_end_state_doctype_system_identifier_double_quoted@plt>
   2b1c4:	mov	r0, r4
   2b1c8:	add	sp, sp, #8
   2b1cc:	pop	{r4, r5, r6, pc}

0002b1d0 <myhtml_tokenizer_end_state_after_doctype_system_identifier@@Base>:
   2b1d0:	push	{r4, r5, r6, lr}
   2b1d4:	mov	r5, r0
   2b1d8:	mov	r2, r1
   2b1dc:	mov	r4, r3
   2b1e0:	ldr	r1, [r1, #32]
   2b1e4:	ldr	r3, [sp, #16]
   2b1e8:	sub	r3, r3, r1
   2b1ec:	ldr	r1, [r0, #192]	; 0xc0
   2b1f0:	add	r3, r3, r1
   2b1f4:	str	r3, [r2, #36]	; 0x24
   2b1f8:	mov	r1, r4
   2b1fc:	bl	10028 <myhtml_queue_add@plt>
   2b200:	cmp	r0, #0
   2b204:	movne	r3, #69	; 0x45
   2b208:	strne	r3, [r5, #160]	; 0xa0
   2b20c:	movne	r0, #0
   2b210:	moveq	r0, r4
   2b214:	pop	{r4, r5, r6, pc}

0002b218 <myhtml_tokenizer_end_state_bogus_doctype@@Base>:
   2b218:	push	{r4, r5, r6, lr}
   2b21c:	mov	r5, r0
   2b220:	mov	r2, r1
   2b224:	mov	r4, r3
   2b228:	ldr	r1, [r1, #32]
   2b22c:	ldr	r3, [sp, #16]
   2b230:	sub	r3, r3, r1
   2b234:	ldr	r1, [r0, #192]	; 0xc0
   2b238:	add	r3, r3, r1
   2b23c:	str	r3, [r2, #36]	; 0x24
   2b240:	mov	r1, r4
   2b244:	bl	10028 <myhtml_queue_add@plt>
   2b248:	cmp	r0, #0
   2b24c:	movne	r3, #69	; 0x45
   2b250:	strne	r3, [r5, #160]	; 0xa0
   2b254:	movne	r0, #0
   2b258:	moveq	r0, r4
   2b25c:	pop	{r4, r5, r6, pc}

0002b260 <myhtml_tokenizer_end_state_script_data@@Base>:
   2b260:	push	{r4, r5, lr}
   2b264:	sub	sp, sp, #12
   2b268:	mov	r4, r3
   2b26c:	ldr	r5, [r1, #32]
   2b270:	ldr	r3, [sp, #24]
   2b274:	sub	r3, r3, r5
   2b278:	ldr	r5, [r0, #192]	; 0xc0
   2b27c:	add	r3, r3, r5
   2b280:	str	r3, [r1, #36]	; 0x24
   2b284:	ldr	r3, [r0, #192]	; 0xc0
   2b288:	mov	ip, #64	; 0x40
   2b28c:	str	ip, [sp]
   2b290:	add	r3, r4, r3
   2b294:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b298:	mov	r0, r4
   2b29c:	add	sp, sp, #12
   2b2a0:	pop	{r4, r5, pc}

0002b2a4 <myhtml_tokenizer_end_state_script_data_less_than_sign@@Base>:
   2b2a4:	push	{r4, r5, lr}
   2b2a8:	sub	sp, sp, #12
   2b2ac:	mov	r4, r3
   2b2b0:	ldr	r5, [r1, #32]
   2b2b4:	ldr	r3, [sp, #24]
   2b2b8:	sub	r3, r3, r5
   2b2bc:	ldr	r5, [r0, #192]	; 0xc0
   2b2c0:	add	r3, r3, r5
   2b2c4:	str	r3, [r1, #36]	; 0x24
   2b2c8:	ldr	r3, [r0, #192]	; 0xc0
   2b2cc:	mov	ip, #64	; 0x40
   2b2d0:	str	ip, [sp]
   2b2d4:	add	r3, r4, r3
   2b2d8:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b2dc:	mov	r0, r4
   2b2e0:	add	sp, sp, #12
   2b2e4:	pop	{r4, r5, pc}

0002b2e8 <myhtml_tokenizer_end_state_script_data_end_tag_open@@Base>:
   2b2e8:	push	{r4, r5, lr}
   2b2ec:	sub	sp, sp, #12
   2b2f0:	mov	r4, r3
   2b2f4:	ldr	r5, [r1, #32]
   2b2f8:	ldr	r3, [sp, #24]
   2b2fc:	sub	r3, r3, r5
   2b300:	ldr	r5, [r0, #192]	; 0xc0
   2b304:	add	r3, r3, r5
   2b308:	str	r3, [r1, #36]	; 0x24
   2b30c:	ldr	r3, [r0, #192]	; 0xc0
   2b310:	mov	ip, #64	; 0x40
   2b314:	str	ip, [sp]
   2b318:	add	r3, r4, r3
   2b31c:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b320:	mov	r0, r4
   2b324:	add	sp, sp, #12
   2b328:	pop	{r4, r5, pc}

0002b32c <myhtml_tokenizer_end_state_script_data_end_tag_name@@Base>:
   2b32c:	push	{r4, r5, lr}
   2b330:	sub	sp, sp, #12
   2b334:	mov	r4, r3
   2b338:	ldr	r5, [r1, #32]
   2b33c:	ldr	r3, [sp, #24]
   2b340:	sub	r3, r3, r5
   2b344:	ldr	r5, [r0, #192]	; 0xc0
   2b348:	add	r3, r3, r5
   2b34c:	str	r3, [r1, #36]	; 0x24
   2b350:	ldr	r3, [r0, #192]	; 0xc0
   2b354:	mov	ip, #64	; 0x40
   2b358:	str	ip, [sp]
   2b35c:	add	r3, r4, r3
   2b360:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b364:	mov	r0, r4
   2b368:	add	sp, sp, #12
   2b36c:	pop	{r4, r5, pc}

0002b370 <myhtml_tokenizer_end_state_script_data_escape_start@@Base>:
   2b370:	push	{r4, r5, lr}
   2b374:	sub	sp, sp, #12
   2b378:	mov	r4, r3
   2b37c:	ldr	r5, [r1, #32]
   2b380:	ldr	r3, [sp, #24]
   2b384:	sub	r3, r3, r5
   2b388:	ldr	r5, [r0, #192]	; 0xc0
   2b38c:	add	r3, r3, r5
   2b390:	str	r3, [r1, #36]	; 0x24
   2b394:	ldr	r3, [r0, #192]	; 0xc0
   2b398:	mov	ip, #64	; 0x40
   2b39c:	str	ip, [sp]
   2b3a0:	add	r3, r4, r3
   2b3a4:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b3a8:	mov	r0, r4
   2b3ac:	add	sp, sp, #12
   2b3b0:	pop	{r4, r5, pc}

0002b3b4 <myhtml_tokenizer_end_state_script_data_escape_start_dash@@Base>:
   2b3b4:	push	{r4, r5, lr}
   2b3b8:	sub	sp, sp, #12
   2b3bc:	mov	r4, r3
   2b3c0:	ldr	r5, [r1, #32]
   2b3c4:	ldr	r3, [sp, #24]
   2b3c8:	sub	r3, r3, r5
   2b3cc:	ldr	r5, [r0, #192]	; 0xc0
   2b3d0:	add	r3, r3, r5
   2b3d4:	str	r3, [r1, #36]	; 0x24
   2b3d8:	ldr	r3, [r0, #192]	; 0xc0
   2b3dc:	mov	ip, #64	; 0x40
   2b3e0:	str	ip, [sp]
   2b3e4:	add	r3, r4, r3
   2b3e8:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b3ec:	mov	r0, r4
   2b3f0:	add	sp, sp, #12
   2b3f4:	pop	{r4, r5, pc}

0002b3f8 <myhtml_tokenizer_end_state_script_data_escaped@@Base>:
   2b3f8:	push	{r4, r5, lr}
   2b3fc:	sub	sp, sp, #12
   2b400:	mov	r4, r3
   2b404:	ldr	r5, [r1, #32]
   2b408:	ldr	r3, [sp, #24]
   2b40c:	sub	r3, r3, r5
   2b410:	ldr	r5, [r0, #192]	; 0xc0
   2b414:	add	r3, r3, r5
   2b418:	str	r3, [r1, #36]	; 0x24
   2b41c:	ldr	r3, [r0, #192]	; 0xc0
   2b420:	mov	ip, #64	; 0x40
   2b424:	str	ip, [sp]
   2b428:	add	r3, r4, r3
   2b42c:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b430:	mov	r0, r4
   2b434:	add	sp, sp, #12
   2b438:	pop	{r4, r5, pc}

0002b43c <myhtml_tokenizer_end_state_script_data_escaped_dash@@Base>:
   2b43c:	push	{r4, r5, lr}
   2b440:	sub	sp, sp, #12
   2b444:	mov	r4, r3
   2b448:	ldr	r5, [r1, #32]
   2b44c:	ldr	r3, [sp, #24]
   2b450:	sub	r3, r3, r5
   2b454:	ldr	r5, [r0, #192]	; 0xc0
   2b458:	add	r3, r3, r5
   2b45c:	str	r3, [r1, #36]	; 0x24
   2b460:	ldr	r3, [r0, #192]	; 0xc0
   2b464:	mov	ip, #64	; 0x40
   2b468:	str	ip, [sp]
   2b46c:	add	r3, r4, r3
   2b470:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b474:	mov	r0, r4
   2b478:	add	sp, sp, #12
   2b47c:	pop	{r4, r5, pc}

0002b480 <myhtml_tokenizer_end_state_script_data_escaped_dash_dash@@Base>:
   2b480:	push	{r4, r5, lr}
   2b484:	sub	sp, sp, #12
   2b488:	mov	r4, r3
   2b48c:	ldr	r5, [r1, #32]
   2b490:	ldr	r3, [sp, #24]
   2b494:	sub	r3, r3, r5
   2b498:	ldr	r5, [r0, #192]	; 0xc0
   2b49c:	add	r3, r3, r5
   2b4a0:	str	r3, [r1, #36]	; 0x24
   2b4a4:	ldr	r3, [r0, #192]	; 0xc0
   2b4a8:	mov	ip, #64	; 0x40
   2b4ac:	str	ip, [sp]
   2b4b0:	add	r3, r4, r3
   2b4b4:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b4b8:	mov	r0, r4
   2b4bc:	add	sp, sp, #12
   2b4c0:	pop	{r4, r5, pc}

0002b4c4 <myhtml_tokenizer_end_state_script_data_escaped_less_than_sign@@Base>:
   2b4c4:	push	{r4, r5, lr}
   2b4c8:	sub	sp, sp, #12
   2b4cc:	mov	r4, r3
   2b4d0:	ldr	r5, [r1, #32]
   2b4d4:	ldr	r3, [sp, #24]
   2b4d8:	sub	r3, r3, r5
   2b4dc:	ldr	r5, [r0, #192]	; 0xc0
   2b4e0:	add	r3, r3, r5
   2b4e4:	str	r3, [r1, #36]	; 0x24
   2b4e8:	ldr	r3, [r0, #192]	; 0xc0
   2b4ec:	mov	ip, #64	; 0x40
   2b4f0:	str	ip, [sp]
   2b4f4:	add	r3, r4, r3
   2b4f8:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b4fc:	mov	r0, r4
   2b500:	add	sp, sp, #12
   2b504:	pop	{r4, r5, pc}

0002b508 <myhtml_tokenizer_end_state_script_data_escaped_end_tag_open@@Base>:
   2b508:	push	{r4, r5, lr}
   2b50c:	sub	sp, sp, #12
   2b510:	mov	r4, r3
   2b514:	ldr	r5, [r1, #32]
   2b518:	ldr	r3, [sp, #24]
   2b51c:	sub	r3, r3, r5
   2b520:	ldr	r5, [r0, #192]	; 0xc0
   2b524:	add	r3, r3, r5
   2b528:	str	r3, [r1, #36]	; 0x24
   2b52c:	ldr	r3, [r0, #192]	; 0xc0
   2b530:	mov	ip, #64	; 0x40
   2b534:	str	ip, [sp]
   2b538:	add	r3, r4, r3
   2b53c:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b540:	mov	r0, r4
   2b544:	add	sp, sp, #12
   2b548:	pop	{r4, r5, pc}

0002b54c <myhtml_tokenizer_end_state_script_data_escaped_end_tag_name@@Base>:
   2b54c:	push	{r4, r5, lr}
   2b550:	sub	sp, sp, #12
   2b554:	mov	r4, r3
   2b558:	ldr	r5, [r1, #32]
   2b55c:	ldr	r3, [sp, #24]
   2b560:	sub	r3, r3, r5
   2b564:	ldr	r5, [r0, #192]	; 0xc0
   2b568:	add	r3, r3, r5
   2b56c:	str	r3, [r1, #36]	; 0x24
   2b570:	ldr	r3, [r0, #192]	; 0xc0
   2b574:	mov	ip, #64	; 0x40
   2b578:	str	ip, [sp]
   2b57c:	add	r3, r4, r3
   2b580:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b584:	mov	r0, r4
   2b588:	add	sp, sp, #12
   2b58c:	pop	{r4, r5, pc}

0002b590 <myhtml_tokenizer_end_state_script_data_double_escape_start@@Base>:
   2b590:	push	{r4, r5, lr}
   2b594:	sub	sp, sp, #12
   2b598:	mov	r4, r3
   2b59c:	ldr	r5, [r1, #32]
   2b5a0:	ldr	r3, [sp, #24]
   2b5a4:	sub	r3, r3, r5
   2b5a8:	ldr	r5, [r0, #192]	; 0xc0
   2b5ac:	add	r3, r3, r5
   2b5b0:	str	r3, [r1, #36]	; 0x24
   2b5b4:	ldr	r3, [r0, #192]	; 0xc0
   2b5b8:	mov	ip, #64	; 0x40
   2b5bc:	str	ip, [sp]
   2b5c0:	add	r3, r4, r3
   2b5c4:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b5c8:	mov	r0, r4
   2b5cc:	add	sp, sp, #12
   2b5d0:	pop	{r4, r5, pc}

0002b5d4 <myhtml_tokenizer_end_state_script_data_double_escaped@@Base>:
   2b5d4:	push	{r4, r5, lr}
   2b5d8:	sub	sp, sp, #12
   2b5dc:	mov	r4, r3
   2b5e0:	ldr	r5, [r1, #32]
   2b5e4:	ldr	r3, [sp, #24]
   2b5e8:	sub	r3, r3, r5
   2b5ec:	ldr	r5, [r0, #192]	; 0xc0
   2b5f0:	add	r3, r3, r5
   2b5f4:	str	r3, [r1, #36]	; 0x24
   2b5f8:	ldr	r3, [r0, #192]	; 0xc0
   2b5fc:	mov	ip, #64	; 0x40
   2b600:	str	ip, [sp]
   2b604:	add	r3, r4, r3
   2b608:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b60c:	mov	r0, r4
   2b610:	add	sp, sp, #12
   2b614:	pop	{r4, r5, pc}

0002b618 <myhtml_tokenizer_end_state_script_data_double_escaped_dash@@Base>:
   2b618:	push	{r4, r5, lr}
   2b61c:	sub	sp, sp, #12
   2b620:	mov	r4, r3
   2b624:	ldr	r5, [r1, #32]
   2b628:	ldr	r3, [sp, #24]
   2b62c:	sub	r3, r3, r5
   2b630:	ldr	r5, [r0, #192]	; 0xc0
   2b634:	add	r3, r3, r5
   2b638:	str	r3, [r1, #36]	; 0x24
   2b63c:	ldr	r3, [r0, #192]	; 0xc0
   2b640:	mov	ip, #64	; 0x40
   2b644:	str	ip, [sp]
   2b648:	add	r3, r4, r3
   2b64c:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b650:	mov	r0, r4
   2b654:	add	sp, sp, #12
   2b658:	pop	{r4, r5, pc}

0002b65c <myhtml_tokenizer_end_state_script_data_double_escaped_dash_dash@@Base>:
   2b65c:	push	{r4, r5, lr}
   2b660:	sub	sp, sp, #12
   2b664:	mov	r4, r3
   2b668:	ldr	r5, [r1, #32]
   2b66c:	ldr	r3, [sp, #24]
   2b670:	sub	r3, r3, r5
   2b674:	ldr	r5, [r0, #192]	; 0xc0
   2b678:	add	r3, r3, r5
   2b67c:	str	r3, [r1, #36]	; 0x24
   2b680:	ldr	r3, [r0, #192]	; 0xc0
   2b684:	mov	ip, #64	; 0x40
   2b688:	str	ip, [sp]
   2b68c:	add	r3, r4, r3
   2b690:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b694:	mov	r0, r4
   2b698:	add	sp, sp, #12
   2b69c:	pop	{r4, r5, pc}

0002b6a0 <myhtml_tokenizer_end_state_script_data_double_escaped_less_than_sign@@Base>:
   2b6a0:	push	{r4, r5, lr}
   2b6a4:	sub	sp, sp, #12
   2b6a8:	mov	r4, r3
   2b6ac:	ldr	r5, [r1, #32]
   2b6b0:	ldr	r3, [sp, #24]
   2b6b4:	sub	r3, r3, r5
   2b6b8:	ldr	r5, [r0, #192]	; 0xc0
   2b6bc:	add	r3, r3, r5
   2b6c0:	str	r3, [r1, #36]	; 0x24
   2b6c4:	ldr	r3, [r0, #192]	; 0xc0
   2b6c8:	mov	ip, #64	; 0x40
   2b6cc:	str	ip, [sp]
   2b6d0:	add	r3, r4, r3
   2b6d4:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b6d8:	mov	r0, r4
   2b6dc:	add	sp, sp, #12
   2b6e0:	pop	{r4, r5, pc}

0002b6e4 <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>:
   2b6e4:	push	{r4, r5, lr}
   2b6e8:	sub	sp, sp, #12
   2b6ec:	mov	r4, r3
   2b6f0:	ldr	r5, [r1, #32]
   2b6f4:	ldr	r3, [sp, #24]
   2b6f8:	sub	r3, r3, r5
   2b6fc:	ldr	r5, [r0, #192]	; 0xc0
   2b700:	add	r3, r3, r5
   2b704:	str	r3, [r1, #36]	; 0x24
   2b708:	ldr	r3, [r0, #192]	; 0xc0
   2b70c:	mov	ip, #64	; 0x40
   2b710:	str	ip, [sp]
   2b714:	add	r3, r4, r3
   2b718:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b71c:	mov	r0, r4
   2b720:	add	sp, sp, #12
   2b724:	pop	{r4, r5, pc}

0002b728 <myhtml_tokenizer_end_state_parse_error_stop@@Base>:
   2b728:	ldr	r0, [sp]
   2b72c:	bx	lr

0002b730 <myhtml_tokenizer_state_script_data@@Base>:
   2b730:	push	{lr}		; (str lr, [sp, #-4]!)
   2b734:	ldr	lr, [sp, #4]
   2b738:	cmp	r3, lr
   2b73c:	bcs	2b784 <myhtml_tokenizer_state_script_data@@Base+0x54>
   2b740:	add	ip, r2, r3
   2b744:	ldrb	r2, [r2, r3]
   2b748:	cmp	r2, #60	; 0x3c
   2b74c:	movne	r2, ip
   2b750:	beq	2b76c <myhtml_tokenizer_state_script_data@@Base+0x3c>
   2b754:	add	r3, r3, #1
   2b758:	cmp	lr, r3
   2b75c:	beq	2b784 <myhtml_tokenizer_state_script_data@@Base+0x54>
   2b760:	ldrb	ip, [r2, #1]!
   2b764:	cmp	ip, #60	; 0x3c
   2b768:	bne	2b754 <myhtml_tokenizer_state_script_data@@Base+0x24>
   2b76c:	ldr	r2, [r0, #192]	; 0xc0
   2b770:	add	r2, r2, r3
   2b774:	str	r2, [r1, #32]
   2b778:	add	r3, r3, #1
   2b77c:	mov	r2, #16
   2b780:	str	r2, [r0, #160]	; 0xa0
   2b784:	mov	r0, r3
   2b788:	pop	{pc}		; (ldr pc, [sp], #4)

0002b78c <myhtml_tokenizer_state_script_data_less_than_sign@@Base>:
   2b78c:	ldrb	r2, [r2, r3]
   2b790:	cmp	r2, #47	; 0x2f
   2b794:	addeq	r3, r3, #1
   2b798:	moveq	r2, #17
   2b79c:	streq	r2, [r0, #160]	; 0xa0
   2b7a0:	beq	2b7b8 <myhtml_tokenizer_state_script_data_less_than_sign@@Base+0x2c>
   2b7a4:	cmp	r2, #33	; 0x21
   2b7a8:	addeq	r3, r3, #1
   2b7ac:	moveq	r2, #19
   2b7b0:	movne	r2, #5
   2b7b4:	str	r2, [r0, #160]	; 0xa0
   2b7b8:	mov	r0, r3
   2b7bc:	bx	lr

0002b7c0 <myhtml_tokenizer_state_script_data_escape_start@@Base>:
   2b7c0:	ldrb	r2, [r2, r3]
   2b7c4:	cmp	r2, #45	; 0x2d
   2b7c8:	addeq	r3, r3, #1
   2b7cc:	moveq	r2, #20
   2b7d0:	movne	r2, #5
   2b7d4:	str	r2, [r0, #160]	; 0xa0
   2b7d8:	mov	r0, r3
   2b7dc:	bx	lr

0002b7e0 <myhtml_tokenizer_state_script_data_escape_start_dash@@Base>:
   2b7e0:	ldrb	r2, [r2, r3]
   2b7e4:	cmp	r2, #45	; 0x2d
   2b7e8:	addeq	r3, r3, #1
   2b7ec:	moveq	r2, #23
   2b7f0:	movne	r2, #5
   2b7f4:	str	r2, [r0, #160]	; 0xa0
   2b7f8:	mov	r0, r3
   2b7fc:	bx	lr

0002b800 <myhtml_tokenizer_state_script_data_end_tag_open@@Base>:
   2b800:	ldrb	r2, [r2, r3]
   2b804:	bic	r2, r2, #32
   2b808:	sub	r2, r2, #65	; 0x41
   2b80c:	uxtb	r2, r2
   2b810:	cmp	r2, #25
   2b814:	ldrls	r2, [r0, #192]	; 0xc0
   2b818:	addls	r2, r2, r3
   2b81c:	strls	r2, [r1, #12]
   2b820:	movls	r2, #18
   2b824:	movhi	r2, #5
   2b828:	str	r2, [r0, #160]	; 0xa0
   2b82c:	mov	r0, r3
   2b830:	bx	lr

0002b834 <myhtml_tokenizer_state_script_data_end_tag_name@@Base>:
   2b834:	push	{r4, r5, r6, r7, r8, r9, lr}
   2b838:	sub	sp, sp, #12
   2b83c:	mov	r6, r0
   2b840:	mov	r4, r3
   2b844:	ldr	r0, [sp, #40]	; 0x28
   2b848:	cmp	r3, r0
   2b84c:	bcs	2bb68 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x334>
   2b850:	mov	r7, r1
   2b854:	mov	r5, r2
   2b858:	add	r1, r2, r3
   2b85c:	ldrb	r3, [r2, r3]
   2b860:	sub	r2, r3, #9
   2b864:	uxtb	r2, r2
   2b868:	cmp	r2, #23
   2b86c:	bhi	2b880 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x4c>
   2b870:	ldr	ip, [pc, #760]	; 2bb70 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x33c>
   2b874:	lsr	r2, ip, r2
   2b878:	tst	r2, #1
   2b87c:	bne	2b910 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xdc>
   2b880:	cmp	r3, #47	; 0x2f
   2b884:	beq	2b9d4 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x1a0>
   2b888:	cmp	r3, #62	; 0x3e
   2b88c:	ldrne	ip, [pc, #732]	; 2bb70 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x33c>
   2b890:	bne	2b8d8 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xa4>
   2b894:	ldr	r8, [r7, #12]
   2b898:	ldr	r3, [r6, #192]	; 0xc0
   2b89c:	sub	r3, r3, r8
   2b8a0:	add	r3, r3, r4
   2b8a4:	cmp	r3, #6
   2b8a8:	beq	2ba8c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x258>
   2b8ac:	mov	r3, #5
   2b8b0:	str	r3, [r6, #160]	; 0xa0
   2b8b4:	add	r9, r4, #1
   2b8b8:	b	2b934 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x100>
   2b8bc:	lsr	r2, ip, r2
   2b8c0:	tst	r2, #1
   2b8c4:	bne	2b910 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xdc>
   2b8c8:	cmp	r3, #47	; 0x2f
   2b8cc:	beq	2b9d4 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x1a0>
   2b8d0:	cmp	r3, #62	; 0x3e
   2b8d4:	beq	2b894 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x60>
   2b8d8:	bic	r3, r3, #32
   2b8dc:	sub	r3, r3, #65	; 0x41
   2b8e0:	uxtb	r3, r3
   2b8e4:	cmp	r3, #25
   2b8e8:	bhi	2bb50 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x31c>
   2b8ec:	add	r4, r4, #1
   2b8f0:	cmp	r0, r4
   2b8f4:	beq	2bb60 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x32c>
   2b8f8:	ldrb	r3, [r1, #1]!
   2b8fc:	sub	r2, r3, #9
   2b900:	uxtb	r2, r2
   2b904:	cmp	r2, #23
   2b908:	bhi	2b8c8 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x94>
   2b90c:	b	2b8bc <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x88>
   2b910:	ldr	r8, [r7, #12]
   2b914:	ldr	r3, [r6, #192]	; 0xc0
   2b918:	sub	r3, r3, r8
   2b91c:	add	r3, r3, r4
   2b920:	cmp	r3, #6
   2b924:	beq	2b940 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x10c>
   2b928:	mov	r3, #5
   2b92c:	str	r3, [r6, #160]	; 0xa0
   2b930:	add	r9, r4, #1
   2b934:	mov	r0, r9
   2b938:	add	sp, sp, #12
   2b93c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2b940:	mov	r2, #6
   2b944:	mov	r1, r8
   2b948:	mov	r0, r6
   2b94c:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   2b950:	mov	r2, #6
   2b954:	ldr	r1, [pc, #536]	; 2bb74 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x340>
   2b958:	add	r1, pc, r1
   2b95c:	bl	102a4 <mycore_strncasecmp@plt>
   2b960:	subs	r9, r0, #0
   2b964:	movne	r3, #5
   2b968:	strne	r3, [r6, #160]	; 0xa0
   2b96c:	beq	2b978 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x144>
   2b970:	add	r9, r4, #1
   2b974:	b	2b934 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x100>
   2b978:	ldr	r3, [r6, #192]	; 0xc0
   2b97c:	sub	r3, r3, #8
   2b980:	mov	r2, #64	; 0x40
   2b984:	str	r2, [sp]
   2b988:	add	r3, r3, r4
   2b98c:	mov	r2, r5
   2b990:	mov	r1, r7
   2b994:	mov	r0, r6
   2b998:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b99c:	cmp	r0, #0
   2b9a0:	moveq	r3, #69	; 0x45
   2b9a4:	streq	r3, [r6, #160]	; 0xa0
   2b9a8:	beq	2b934 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x100>
   2b9ac:	str	r8, [r0, #24]
   2b9b0:	mov	r3, #6
   2b9b4:	str	r3, [r0, #28]
   2b9b8:	mov	r3, #112	; 0x70
   2b9bc:	str	r3, [r0]
   2b9c0:	mov	r3, #1
   2b9c4:	str	r3, [r0, #48]	; 0x30
   2b9c8:	mov	r3, #33	; 0x21
   2b9cc:	str	r3, [r6, #160]	; 0xa0
   2b9d0:	b	2b970 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x13c>
   2b9d4:	ldr	r8, [r7, #12]
   2b9d8:	ldr	r3, [r6, #192]	; 0xc0
   2b9dc:	sub	r3, r3, r8
   2b9e0:	add	r3, r3, r4
   2b9e4:	cmp	r3, #6
   2b9e8:	movne	r3, #5
   2b9ec:	strne	r3, [r6, #160]	; 0xa0
   2b9f0:	addne	r9, r4, #1
   2b9f4:	bne	2b934 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x100>
   2b9f8:	mov	r2, #6
   2b9fc:	mov	r1, r8
   2ba00:	mov	r0, r6
   2ba04:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   2ba08:	mov	r2, #6
   2ba0c:	ldr	r1, [pc, #356]	; 2bb78 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x344>
   2ba10:	add	r1, pc, r1
   2ba14:	bl	102a4 <mycore_strncasecmp@plt>
   2ba18:	subs	r9, r0, #0
   2ba1c:	movne	r3, #5
   2ba20:	strne	r3, [r6, #160]	; 0xa0
   2ba24:	beq	2ba30 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x1fc>
   2ba28:	add	r9, r4, #1
   2ba2c:	b	2b934 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x100>
   2ba30:	ldr	r3, [r6, #192]	; 0xc0
   2ba34:	sub	r3, r3, #8
   2ba38:	mov	r2, #64	; 0x40
   2ba3c:	str	r2, [sp]
   2ba40:	add	r3, r3, r4
   2ba44:	mov	r2, r5
   2ba48:	mov	r1, r7
   2ba4c:	mov	r0, r6
   2ba50:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2ba54:	cmp	r0, #0
   2ba58:	moveq	r3, #69	; 0x45
   2ba5c:	streq	r3, [r6, #160]	; 0xa0
   2ba60:	beq	2b934 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x100>
   2ba64:	str	r8, [r0, #24]
   2ba68:	mov	r3, #6
   2ba6c:	str	r3, [r0, #28]
   2ba70:	mov	r3, #112	; 0x70
   2ba74:	str	r3, [r0]
   2ba78:	mov	r3, #3
   2ba7c:	str	r3, [r0, #48]	; 0x30
   2ba80:	mov	r3, #33	; 0x21
   2ba84:	str	r3, [r6, #160]	; 0xa0
   2ba88:	b	2ba28 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x1f4>
   2ba8c:	mov	r2, #6
   2ba90:	mov	r1, r8
   2ba94:	mov	r0, r6
   2ba98:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   2ba9c:	mov	r2, #6
   2baa0:	ldr	r1, [pc, #212]	; 2bb7c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x348>
   2baa4:	add	r1, pc, r1
   2baa8:	bl	102a4 <mycore_strncasecmp@plt>
   2baac:	subs	r9, r0, #0
   2bab0:	movne	r3, #5
   2bab4:	strne	r3, [r6, #160]	; 0xa0
   2bab8:	addne	r9, r4, #1
   2babc:	bne	2b934 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x100>
   2bac0:	ldr	r3, [r6, #192]	; 0xc0
   2bac4:	sub	r3, r3, #8
   2bac8:	mov	r2, #64	; 0x40
   2bacc:	str	r2, [sp]
   2bad0:	add	r3, r3, r4
   2bad4:	mov	r2, r5
   2bad8:	mov	r1, r7
   2badc:	mov	r0, r6
   2bae0:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2bae4:	subs	r2, r0, #0
   2bae8:	moveq	r3, #69	; 0x45
   2baec:	streq	r3, [r6, #160]	; 0xa0
   2baf0:	beq	2b934 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x100>
   2baf4:	str	r8, [r2, #24]
   2baf8:	mov	r3, #6
   2bafc:	str	r3, [r2, #28]
   2bb00:	mov	r3, #112	; 0x70
   2bb04:	str	r3, [r2]
   2bb08:	mov	r3, #1
   2bb0c:	str	r3, [r2, #48]	; 0x30
   2bb10:	add	r4, r4, r3
   2bb14:	ldr	r3, [r6, #192]	; 0xc0
   2bb18:	add	r3, r4, r3
   2bb1c:	ldr	r1, [r2, #32]
   2bb20:	sub	r3, r3, r1
   2bb24:	str	r3, [r2, #36]	; 0x24
   2bb28:	mov	r1, r4
   2bb2c:	mov	r0, r6
   2bb30:	bl	10028 <myhtml_queue_add@plt>
   2bb34:	cmp	r0, #0
   2bb38:	movne	r3, #69	; 0x45
   2bb3c:	strne	r3, [r6, #160]	; 0xa0
   2bb40:	moveq	r3, #0
   2bb44:	streq	r3, [r6, #160]	; 0xa0
   2bb48:	moveq	r9, r4
   2bb4c:	b	2b934 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x100>
   2bb50:	mov	r3, #5
   2bb54:	str	r3, [r6, #160]	; 0xa0
   2bb58:	mov	r9, r4
   2bb5c:	b	2b934 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x100>
   2bb60:	mov	r9, r4
   2bb64:	b	2b934 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x100>
   2bb68:	mov	r9, r3
   2bb6c:	b	2b934 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x100>
   2bb70:	addeq	r0, r0, fp, lsl r0
   2bb74:	strdeq	r2, [sp], -r4
   2bb78:	andeq	r2, sp, ip, lsr r0
   2bb7c:	andeq	r1, sp, r8, lsr #31

0002bb80 <myhtml_tokenizer_state_script_data_escaped_dash_dash@@Base>:
   2bb80:	ldrb	r2, [r2, r3]
   2bb84:	cmp	r2, #45	; 0x2d
   2bb88:	beq	2bbb4 <myhtml_tokenizer_state_script_data_escaped_dash_dash@@Base+0x34>
   2bb8c:	cmp	r2, #60	; 0x3c
   2bb90:	moveq	r2, #24
   2bb94:	streq	r2, [r0, #160]	; 0xa0
   2bb98:	beq	2bbac <myhtml_tokenizer_state_script_data_escaped_dash_dash@@Base+0x2c>
   2bb9c:	cmp	r2, #62	; 0x3e
   2bba0:	moveq	r2, #5
   2bba4:	movne	r2, #21
   2bba8:	str	r2, [r0, #160]	; 0xa0
   2bbac:	add	r0, r3, #1
   2bbb0:	bx	lr
   2bbb4:	add	r0, r3, #1
   2bbb8:	bx	lr

0002bbbc <myhtml_tokenizer_state_script_data_escaped_less_than_sign@@Base>:
   2bbbc:	ldrb	r2, [r2, r3]
   2bbc0:	cmp	r2, #47	; 0x2f
   2bbc4:	beq	2bbf8 <myhtml_tokenizer_state_script_data_escaped_less_than_sign@@Base+0x3c>
   2bbc8:	bic	r2, r2, #32
   2bbcc:	sub	r2, r2, #65	; 0x41
   2bbd0:	uxtb	r2, r2
   2bbd4:	cmp	r2, #25
   2bbd8:	ldrls	r2, [r0, #192]	; 0xc0
   2bbdc:	addls	r2, r2, r3
   2bbe0:	strls	r2, [r1, #12]
   2bbe4:	movls	r2, #27
   2bbe8:	movhi	r2, #21
   2bbec:	str	r2, [r0, #160]	; 0xa0
   2bbf0:	mov	r0, r3
   2bbf4:	bx	lr
   2bbf8:	mov	r2, #25
   2bbfc:	str	r2, [r0, #160]	; 0xa0
   2bc00:	add	r0, r3, #1
   2bc04:	bx	lr

0002bc08 <myhtml_tokenizer_state_script_data_escaped_end_tag_open@@Base>:
   2bc08:	ldrb	r2, [r2, r3]
   2bc0c:	bic	r2, r2, #32
   2bc10:	sub	r2, r2, #65	; 0x41
   2bc14:	uxtb	r2, r2
   2bc18:	cmp	r2, #25
   2bc1c:	ldrls	r2, [r0, #192]	; 0xc0
   2bc20:	addls	r2, r2, r3
   2bc24:	strls	r2, [r1, #12]
   2bc28:	movls	r2, #26
   2bc2c:	movhi	r2, #21
   2bc30:	str	r2, [r0, #160]	; 0xa0
   2bc34:	mov	r0, r3
   2bc38:	bx	lr

0002bc3c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base>:
   2bc3c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2bc40:	sub	sp, sp, #8
   2bc44:	mov	r6, r0
   2bc48:	mov	r4, r3
   2bc4c:	ldr	r0, [sp, #40]	; 0x28
   2bc50:	cmp	r3, r0
   2bc54:	bcs	2bf74 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x338>
   2bc58:	mov	r7, r1
   2bc5c:	mov	r5, r2
   2bc60:	add	r1, r2, r3
   2bc64:	ldrb	r3, [r2, r3]
   2bc68:	sub	r2, r3, #9
   2bc6c:	uxtb	r2, r2
   2bc70:	cmp	r2, #23
   2bc74:	bhi	2bc88 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x4c>
   2bc78:	ldr	ip, [pc, #764]	; 2bf7c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x340>
   2bc7c:	lsr	r2, ip, r2
   2bc80:	tst	r2, #1
   2bc84:	bne	2bd18 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xdc>
   2bc88:	cmp	r3, #47	; 0x2f
   2bc8c:	beq	2bddc <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x1a0>
   2bc90:	cmp	r3, #62	; 0x3e
   2bc94:	ldrne	ip, [pc, #736]	; 2bf7c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x340>
   2bc98:	bne	2bce0 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xa4>
   2bc9c:	ldr	r8, [r7, #12]
   2bca0:	ldr	r3, [r6, #192]	; 0xc0
   2bca4:	sub	r3, r3, r8
   2bca8:	add	r3, r3, r4
   2bcac:	cmp	r3, #6
   2bcb0:	beq	2be94 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x258>
   2bcb4:	mov	r3, #21
   2bcb8:	str	r3, [r6, #160]	; 0xa0
   2bcbc:	add	r9, r4, #1
   2bcc0:	b	2bd3c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x100>
   2bcc4:	lsr	r2, ip, r2
   2bcc8:	tst	r2, #1
   2bccc:	bne	2bd18 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xdc>
   2bcd0:	cmp	r3, #47	; 0x2f
   2bcd4:	beq	2bddc <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x1a0>
   2bcd8:	cmp	r3, #62	; 0x3e
   2bcdc:	beq	2bc9c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x60>
   2bce0:	bic	r3, r3, #32
   2bce4:	sub	r3, r3, #65	; 0x41
   2bce8:	uxtb	r3, r3
   2bcec:	cmp	r3, #25
   2bcf0:	bhi	2bf5c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x320>
   2bcf4:	add	r4, r4, #1
   2bcf8:	cmp	r0, r4
   2bcfc:	beq	2bf6c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x330>
   2bd00:	ldrb	r3, [r1, #1]!
   2bd04:	sub	r2, r3, #9
   2bd08:	uxtb	r2, r2
   2bd0c:	cmp	r2, #23
   2bd10:	bhi	2bcd0 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x94>
   2bd14:	b	2bcc4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x88>
   2bd18:	ldr	r8, [r7, #12]
   2bd1c:	ldr	r3, [r6, #192]	; 0xc0
   2bd20:	sub	r3, r3, r8
   2bd24:	add	r3, r3, r4
   2bd28:	cmp	r3, #6
   2bd2c:	beq	2bd48 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x10c>
   2bd30:	mov	r3, #21
   2bd34:	str	r3, [r6, #160]	; 0xa0
   2bd38:	add	r9, r4, #1
   2bd3c:	mov	r0, r9
   2bd40:	add	sp, sp, #8
   2bd44:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2bd48:	mov	r2, #6
   2bd4c:	mov	r1, r8
   2bd50:	mov	r0, r6
   2bd54:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   2bd58:	mov	r2, #6
   2bd5c:	ldr	r1, [pc, #540]	; 2bf80 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x344>
   2bd60:	add	r1, pc, r1
   2bd64:	bl	102a4 <mycore_strncasecmp@plt>
   2bd68:	subs	r9, r0, #0
   2bd6c:	movne	r3, #21
   2bd70:	strne	r3, [r6, #160]	; 0xa0
   2bd74:	beq	2bd80 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x144>
   2bd78:	add	r9, r4, #1
   2bd7c:	b	2bd3c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x100>
   2bd80:	ldr	r3, [r6, #192]	; 0xc0
   2bd84:	sub	r3, r3, #8
   2bd88:	mov	r2, #64	; 0x40
   2bd8c:	str	r2, [sp]
   2bd90:	add	r3, r3, r4
   2bd94:	mov	r2, r5
   2bd98:	mov	r1, r7
   2bd9c:	mov	r0, r6
   2bda0:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2bda4:	cmp	r0, #0
   2bda8:	moveq	r3, #69	; 0x45
   2bdac:	streq	r3, [r6, #160]	; 0xa0
   2bdb0:	beq	2bd3c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x100>
   2bdb4:	str	r8, [r0, #24]
   2bdb8:	mov	r3, #6
   2bdbc:	str	r3, [r0, #28]
   2bdc0:	mov	r3, #112	; 0x70
   2bdc4:	str	r3, [r0]
   2bdc8:	mov	r3, #1
   2bdcc:	str	r3, [r0, #48]	; 0x30
   2bdd0:	mov	r3, #33	; 0x21
   2bdd4:	str	r3, [r6, #160]	; 0xa0
   2bdd8:	b	2bd78 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x13c>
   2bddc:	ldr	r8, [r7, #12]
   2bde0:	ldr	r3, [r6, #192]	; 0xc0
   2bde4:	sub	r3, r3, r8
   2bde8:	add	r3, r3, r4
   2bdec:	cmp	r3, #6
   2bdf0:	movne	r3, #21
   2bdf4:	strne	r3, [r6, #160]	; 0xa0
   2bdf8:	addne	r9, r4, #1
   2bdfc:	bne	2bd3c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x100>
   2be00:	mov	r2, #6
   2be04:	mov	r1, r8
   2be08:	mov	r0, r6
   2be0c:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   2be10:	mov	r2, #6
   2be14:	ldr	r1, [pc, #360]	; 2bf84 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x348>
   2be18:	add	r1, pc, r1
   2be1c:	bl	102a4 <mycore_strncasecmp@plt>
   2be20:	subs	r9, r0, #0
   2be24:	movne	r3, #21
   2be28:	strne	r3, [r6, #160]	; 0xa0
   2be2c:	beq	2be38 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x1fc>
   2be30:	add	r9, r4, #1
   2be34:	b	2bd3c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x100>
   2be38:	ldr	r3, [r6, #192]	; 0xc0
   2be3c:	sub	r3, r3, #8
   2be40:	mov	r2, #64	; 0x40
   2be44:	str	r2, [sp]
   2be48:	add	r3, r3, r4
   2be4c:	mov	r2, r5
   2be50:	mov	r1, r7
   2be54:	mov	r0, r6
   2be58:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2be5c:	cmp	r0, #0
   2be60:	moveq	r3, #69	; 0x45
   2be64:	streq	r3, [r6, #160]	; 0xa0
   2be68:	beq	2bd3c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x100>
   2be6c:	str	r8, [r0, #24]
   2be70:	mov	r3, #6
   2be74:	str	r3, [r0, #28]
   2be78:	mov	r3, #112	; 0x70
   2be7c:	str	r3, [r0]
   2be80:	mov	r3, #3
   2be84:	str	r3, [r0, #48]	; 0x30
   2be88:	mov	r3, #33	; 0x21
   2be8c:	str	r3, [r6, #160]	; 0xa0
   2be90:	b	2be30 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x1f4>
   2be94:	mov	r2, #6
   2be98:	mov	r1, r8
   2be9c:	mov	r0, r6
   2bea0:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   2bea4:	mov	r2, #6
   2bea8:	ldr	r1, [pc, #216]	; 2bf88 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x34c>
   2beac:	add	r1, pc, r1
   2beb0:	bl	102a4 <mycore_strncasecmp@plt>
   2beb4:	subs	sl, r0, #0
   2beb8:	movne	r3, #21
   2bebc:	strne	r3, [r6, #160]	; 0xa0
   2bec0:	addne	r9, r4, #1
   2bec4:	bne	2bd3c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x100>
   2bec8:	ldr	r3, [r6, #192]	; 0xc0
   2becc:	sub	r3, r3, #8
   2bed0:	mov	r2, #64	; 0x40
   2bed4:	str	r2, [sp]
   2bed8:	add	r3, r3, r4
   2bedc:	mov	r2, r5
   2bee0:	mov	r1, r7
   2bee4:	mov	r0, r6
   2bee8:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2beec:	subs	r2, r0, #0
   2bef0:	moveq	r3, #69	; 0x45
   2bef4:	streq	r3, [r6, #160]	; 0xa0
   2bef8:	moveq	r9, sl
   2befc:	beq	2bd3c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x100>
   2bf00:	str	r8, [r2, #24]
   2bf04:	mov	r3, #6
   2bf08:	str	r3, [r2, #28]
   2bf0c:	mov	r3, #112	; 0x70
   2bf10:	str	r3, [r2]
   2bf14:	mov	r3, #1
   2bf18:	str	r3, [r2, #48]	; 0x30
   2bf1c:	mov	r3, #0
   2bf20:	str	r3, [r6, #160]	; 0xa0
   2bf24:	add	r9, r4, #1
   2bf28:	ldr	r3, [r6, #192]	; 0xc0
   2bf2c:	add	r3, r9, r3
   2bf30:	ldr	r1, [r2, #32]
   2bf34:	sub	r3, r3, r1
   2bf38:	str	r3, [r2, #36]	; 0x24
   2bf3c:	mov	r1, r9
   2bf40:	mov	r0, r6
   2bf44:	bl	10028 <myhtml_queue_add@plt>
   2bf48:	cmp	r0, #0
   2bf4c:	movne	r3, #69	; 0x45
   2bf50:	strne	r3, [r6, #160]	; 0xa0
   2bf54:	movne	r9, sl
   2bf58:	b	2bd3c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x100>
   2bf5c:	mov	r3, #21
   2bf60:	str	r3, [r6, #160]	; 0xa0
   2bf64:	mov	r9, r4
   2bf68:	b	2bd3c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x100>
   2bf6c:	mov	r9, r4
   2bf70:	b	2bd3c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x100>
   2bf74:	mov	r9, r3
   2bf78:	b	2bd3c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x100>
   2bf7c:	addeq	r0, r0, fp, lsl r0
   2bf80:	andeq	r1, sp, ip, ror #25
   2bf84:	andeq	r1, sp, r4, lsr ip
   2bf88:	andeq	r1, sp, r0, lsr #23

0002bf8c <myhtml_tokenizer_state_script_data_escaped@@Base>:
   2bf8c:	ldr	ip, [sp]
   2bf90:	cmp	r3, ip
   2bf94:	bcs	2bff8 <myhtml_tokenizer_state_script_data_escaped@@Base+0x6c>
   2bf98:	add	r1, r2, r3
   2bf9c:	ldrb	r2, [r2, r3]
   2bfa0:	cmp	r2, #45	; 0x2d
   2bfa4:	beq	2bfe0 <myhtml_tokenizer_state_script_data_escaped@@Base+0x54>
   2bfa8:	cmp	r2, #60	; 0x3c
   2bfac:	beq	2bfd0 <myhtml_tokenizer_state_script_data_escaped@@Base+0x44>
   2bfb0:	add	r3, r3, #1
   2bfb4:	cmp	ip, r3
   2bfb8:	beq	2bff0 <myhtml_tokenizer_state_script_data_escaped@@Base+0x64>
   2bfbc:	ldrb	r2, [r1, #1]!
   2bfc0:	cmp	r2, #45	; 0x2d
   2bfc4:	beq	2bfe0 <myhtml_tokenizer_state_script_data_escaped@@Base+0x54>
   2bfc8:	cmp	r2, #60	; 0x3c
   2bfcc:	bne	2bfb0 <myhtml_tokenizer_state_script_data_escaped@@Base+0x24>
   2bfd0:	mov	r2, #24
   2bfd4:	str	r2, [r0, #160]	; 0xa0
   2bfd8:	add	r0, r3, #1
   2bfdc:	bx	lr
   2bfe0:	mov	r2, #22
   2bfe4:	str	r2, [r0, #160]	; 0xa0
   2bfe8:	add	r0, r3, #1
   2bfec:	bx	lr
   2bff0:	mov	r0, r3
   2bff4:	bx	lr
   2bff8:	mov	r0, r3
   2bffc:	bx	lr

0002c000 <myhtml_tokenizer_state_script_data_escaped_dash@@Base>:
   2c000:	ldrb	r2, [r2, r3]
   2c004:	cmp	r2, #45	; 0x2d
   2c008:	beq	2c02c <myhtml_tokenizer_state_script_data_escaped_dash@@Base+0x2c>
   2c00c:	cmp	r2, #60	; 0x3c
   2c010:	beq	2c03c <myhtml_tokenizer_state_script_data_escaped_dash@@Base+0x3c>
   2c014:	cmp	r2, #0
   2c018:	mov	r2, #21
   2c01c:	str	r2, [r0, #160]	; 0xa0
   2c020:	moveq	r0, r3
   2c024:	addne	r0, r3, #1
   2c028:	bx	lr
   2c02c:	mov	r2, #23
   2c030:	str	r2, [r0, #160]	; 0xa0
   2c034:	add	r0, r3, #1
   2c038:	bx	lr
   2c03c:	mov	r2, #24
   2c040:	str	r2, [r0, #160]	; 0xa0
   2c044:	mov	r0, r3
   2c048:	bx	lr

0002c04c <myhtml_tokenizer_state_script_data_double_escape_start@@Base>:
   2c04c:	push	{r4, r5, r6, r7, r8, lr}
   2c050:	mov	r4, r3
   2c054:	ldr	ip, [sp, #24]
   2c058:	cmp	r3, ip
   2c05c:	bcs	2c184 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x138>
   2c060:	mov	r5, r0
   2c064:	add	r0, r2, r3
   2c068:	ldrb	r2, [r2, r3]
   2c06c:	sub	r3, r2, #9
   2c070:	uxtb	lr, r3
   2c074:	cmp	lr, #23
   2c078:	ldrls	r3, [pc, #268]	; 2c18c <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x140>
   2c07c:	lsrls	r3, r3, lr
   2c080:	eorls	r3, r3, #1
   2c084:	andls	r3, r3, #1
   2c088:	movhi	r3, #1
   2c08c:	cmp	r2, #62	; 0x3e
   2c090:	cmpne	r2, #47	; 0x2f
   2c094:	moveq	lr, #1
   2c098:	movne	lr, #0
   2c09c:	eor	r3, r3, #1
   2c0a0:	orrs	r3, lr, r3
   2c0a4:	moveq	r6, #1
   2c0a8:	ldreq	lr, [pc, #220]	; 2c18c <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x140>
   2c0ac:	bne	2c110 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0xc4>
   2c0b0:	bic	r2, r2, #32
   2c0b4:	sub	r2, r2, #65	; 0x41
   2c0b8:	uxtb	r2, r2
   2c0bc:	cmp	r2, #25
   2c0c0:	bhi	2c16c <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x120>
   2c0c4:	add	r4, r4, #1
   2c0c8:	cmp	ip, r4
   2c0cc:	beq	2c17c <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x130>
   2c0d0:	ldrb	r2, [r0, #1]!
   2c0d4:	sub	r3, r2, #9
   2c0d8:	uxtb	r3, r3
   2c0dc:	cmp	r3, #23
   2c0e0:	lsrls	r3, lr, r3
   2c0e4:	eorls	r3, r3, #1
   2c0e8:	andls	r3, r3, #1
   2c0ec:	movhi	r3, r6
   2c0f0:	cmp	r2, #62	; 0x3e
   2c0f4:	cmpne	r2, #47	; 0x2f
   2c0f8:	moveq	r7, #1
   2c0fc:	movne	r7, #0
   2c100:	eor	r3, r3, #1
   2c104:	orr	r3, r7, r3
   2c108:	tst	r3, #255	; 0xff
   2c10c:	beq	2c0b0 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x64>
   2c110:	ldr	r1, [r1, #12]
   2c114:	ldr	r3, [r5, #192]	; 0xc0
   2c118:	sub	r3, r3, r1
   2c11c:	add	r3, r3, r4
   2c120:	cmp	r3, #6
   2c124:	beq	2c138 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0xec>
   2c128:	mov	r3, #21
   2c12c:	str	r3, [r5, #160]	; 0xa0
   2c130:	add	r0, r4, #1
   2c134:	pop	{r4, r5, r6, r7, r8, pc}
   2c138:	mov	r2, #6
   2c13c:	mov	r0, r5
   2c140:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   2c144:	mov	r2, #6
   2c148:	ldr	r1, [pc, #64]	; 2c190 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x144>
   2c14c:	add	r1, pc, r1
   2c150:	bl	102a4 <mycore_strncasecmp@plt>
   2c154:	cmp	r0, #0
   2c158:	moveq	r3, #28
   2c15c:	movne	r3, #21
   2c160:	str	r3, [r5, #160]	; 0xa0
   2c164:	add	r0, r4, #1
   2c168:	pop	{r4, r5, r6, r7, r8, pc}
   2c16c:	mov	r3, #21
   2c170:	str	r3, [r5, #160]	; 0xa0
   2c174:	mov	r0, r4
   2c178:	pop	{r4, r5, r6, r7, r8, pc}
   2c17c:	mov	r0, r4
   2c180:	pop	{r4, r5, r6, r7, r8, pc}
   2c184:	mov	r0, r3
   2c188:	pop	{r4, r5, r6, r7, r8, pc}
   2c18c:	addeq	r0, r0, fp, lsl r0
   2c190:	andeq	r1, sp, r0, lsl #18

0002c194 <myhtml_tokenizer_state_script_data_double_escaped@@Base>:
   2c194:	ldr	ip, [sp]
   2c198:	cmp	r3, ip
   2c19c:	bcs	2c200 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x6c>
   2c1a0:	add	r1, r2, r3
   2c1a4:	ldrb	r2, [r2, r3]
   2c1a8:	cmp	r2, #45	; 0x2d
   2c1ac:	beq	2c1e8 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x54>
   2c1b0:	cmp	r2, #60	; 0x3c
   2c1b4:	beq	2c1d8 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x44>
   2c1b8:	add	r3, r3, #1
   2c1bc:	cmp	ip, r3
   2c1c0:	beq	2c1f8 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x64>
   2c1c4:	ldrb	r2, [r1, #1]!
   2c1c8:	cmp	r2, #45	; 0x2d
   2c1cc:	beq	2c1e8 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x54>
   2c1d0:	cmp	r2, #60	; 0x3c
   2c1d4:	bne	2c1b8 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x24>
   2c1d8:	mov	r2, #31
   2c1dc:	str	r2, [r0, #160]	; 0xa0
   2c1e0:	add	r0, r3, #1
   2c1e4:	bx	lr
   2c1e8:	mov	r2, #29
   2c1ec:	str	r2, [r0, #160]	; 0xa0
   2c1f0:	add	r0, r3, #1
   2c1f4:	bx	lr
   2c1f8:	mov	r0, r3
   2c1fc:	bx	lr
   2c200:	mov	r0, r3
   2c204:	bx	lr

0002c208 <myhtml_tokenizer_state_script_data_double_escaped_dash@@Base>:
   2c208:	ldrb	r2, [r2, r3]
   2c20c:	cmp	r2, #45	; 0x2d
   2c210:	moveq	r2, #30
   2c214:	streq	r2, [r0, #160]	; 0xa0
   2c218:	beq	2c22c <myhtml_tokenizer_state_script_data_double_escaped_dash@@Base+0x24>
   2c21c:	cmp	r2, #60	; 0x3c
   2c220:	moveq	r2, #31
   2c224:	movne	r2, #28
   2c228:	str	r2, [r0, #160]	; 0xa0
   2c22c:	add	r0, r3, #1
   2c230:	bx	lr

0002c234 <myhtml_tokenizer_state_script_data_double_escaped_dash_dash@@Base>:
   2c234:	ldrb	r2, [r2, r3]
   2c238:	cmp	r2, #45	; 0x2d
   2c23c:	beq	2c268 <myhtml_tokenizer_state_script_data_double_escaped_dash_dash@@Base+0x34>
   2c240:	cmp	r2, #60	; 0x3c
   2c244:	moveq	r2, #31
   2c248:	streq	r2, [r0, #160]	; 0xa0
   2c24c:	beq	2c260 <myhtml_tokenizer_state_script_data_double_escaped_dash_dash@@Base+0x2c>
   2c250:	cmp	r2, #62	; 0x3e
   2c254:	moveq	r2, #5
   2c258:	movne	r2, #28
   2c25c:	str	r2, [r0, #160]	; 0xa0
   2c260:	add	r0, r3, #1
   2c264:	bx	lr
   2c268:	add	r0, r3, #1
   2c26c:	bx	lr

0002c270 <myhtml_tokenizer_state_script_data_double_escaped_less_than_sign@@Base>:
   2c270:	ldrb	r2, [r2, r3]
   2c274:	cmp	r2, #47	; 0x2f
   2c278:	moveq	r2, #32
   2c27c:	streq	r2, [r0, #160]	; 0xa0
   2c280:	addeq	r3, r3, #1
   2c284:	ldreq	r2, [r0, #192]	; 0xc0
   2c288:	addeq	r2, r2, r3
   2c28c:	streq	r2, [r1, #12]
   2c290:	movne	r2, #28
   2c294:	strne	r2, [r0, #160]	; 0xa0
   2c298:	mov	r0, r3
   2c29c:	bx	lr

0002c2a0 <myhtml_tokenizer_state_script_data_double_escape_end@@Base>:
   2c2a0:	push	{r4, r5, r6, r7, r8, lr}
   2c2a4:	mov	r4, r3
   2c2a8:	ldr	ip, [sp, #24]
   2c2ac:	cmp	r3, ip
   2c2b0:	bcs	2c3d8 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x138>
   2c2b4:	mov	r5, r0
   2c2b8:	add	r0, r2, r3
   2c2bc:	ldrb	r2, [r2, r3]
   2c2c0:	sub	r3, r2, #9
   2c2c4:	uxtb	lr, r3
   2c2c8:	cmp	lr, #23
   2c2cc:	ldrls	r3, [pc, #268]	; 2c3e0 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x140>
   2c2d0:	lsrls	r3, r3, lr
   2c2d4:	eorls	r3, r3, #1
   2c2d8:	andls	r3, r3, #1
   2c2dc:	movhi	r3, #1
   2c2e0:	cmp	r2, #62	; 0x3e
   2c2e4:	cmpne	r2, #47	; 0x2f
   2c2e8:	moveq	lr, #1
   2c2ec:	movne	lr, #0
   2c2f0:	eor	r3, r3, #1
   2c2f4:	orrs	r3, lr, r3
   2c2f8:	moveq	r6, #1
   2c2fc:	ldreq	lr, [pc, #220]	; 2c3e0 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x140>
   2c300:	bne	2c364 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0xc4>
   2c304:	bic	r2, r2, #32
   2c308:	sub	r2, r2, #65	; 0x41
   2c30c:	uxtb	r2, r2
   2c310:	cmp	r2, #25
   2c314:	bhi	2c3c0 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x120>
   2c318:	add	r4, r4, #1
   2c31c:	cmp	ip, r4
   2c320:	beq	2c3d0 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x130>
   2c324:	ldrb	r2, [r0, #1]!
   2c328:	sub	r3, r2, #9
   2c32c:	uxtb	r3, r3
   2c330:	cmp	r3, #23
   2c334:	lsrls	r3, lr, r3
   2c338:	eorls	r3, r3, #1
   2c33c:	andls	r3, r3, #1
   2c340:	movhi	r3, r6
   2c344:	cmp	r2, #62	; 0x3e
   2c348:	cmpne	r2, #47	; 0x2f
   2c34c:	moveq	r7, #1
   2c350:	movne	r7, #0
   2c354:	eor	r3, r3, #1
   2c358:	orr	r3, r7, r3
   2c35c:	tst	r3, #255	; 0xff
   2c360:	beq	2c304 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x64>
   2c364:	ldr	r1, [r1, #12]
   2c368:	ldr	r3, [r5, #192]	; 0xc0
   2c36c:	sub	r3, r3, r1
   2c370:	add	r3, r3, r4
   2c374:	cmp	r3, #6
   2c378:	beq	2c38c <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0xec>
   2c37c:	mov	r3, #28
   2c380:	str	r3, [r5, #160]	; 0xa0
   2c384:	add	r0, r4, #1
   2c388:	pop	{r4, r5, r6, r7, r8, pc}
   2c38c:	mov	r2, #6
   2c390:	mov	r0, r5
   2c394:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   2c398:	mov	r2, #6
   2c39c:	ldr	r1, [pc, #64]	; 2c3e4 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x144>
   2c3a0:	add	r1, pc, r1
   2c3a4:	bl	102a4 <mycore_strncasecmp@plt>
   2c3a8:	cmp	r0, #0
   2c3ac:	moveq	r3, #21
   2c3b0:	movne	r3, #28
   2c3b4:	str	r3, [r5, #160]	; 0xa0
   2c3b8:	add	r0, r4, #1
   2c3bc:	pop	{r4, r5, r6, r7, r8, pc}
   2c3c0:	mov	r3, #28
   2c3c4:	str	r3, [r5, #160]	; 0xa0
   2c3c8:	mov	r0, r4
   2c3cc:	pop	{r4, r5, r6, r7, r8, pc}
   2c3d0:	mov	r0, r4
   2c3d4:	pop	{r4, r5, r6, r7, r8, pc}
   2c3d8:	mov	r0, r3
   2c3dc:	pop	{r4, r5, r6, r7, r8, pc}
   2c3e0:	addeq	r0, r0, fp, lsl r0
   2c3e4:	andeq	r1, sp, ip, lsr #13

0002c3e8 <myhtml_tree_create@@Base>:
   2c3e8:	push	{r4, lr}
   2c3ec:	mov	r1, #252	; 0xfc
   2c3f0:	mov	r0, #1
   2c3f4:	bl	ff14 <mycore_calloc@plt>
   2c3f8:	pop	{r4, pc}

0002c3fc <myhtml_tree_node_clean@@Base>:
   2c3fc:	push	{r4, lr}
   2c400:	mov	r4, r0
   2c404:	mov	r2, #44	; 0x2c
   2c408:	mov	r1, #0
   2c40c:	bl	108b0 <memset@plt>
   2c410:	mov	r3, #1
   2c414:	str	r3, [r4, #8]
   2c418:	pop	{r4, pc}

0002c41c <myhtml_tree_parse_flags@@Base>:
   2c41c:	ldr	r0, [r0, #184]	; 0xb8
   2c420:	bx	lr

0002c424 <myhtml_tree_parse_flags_set@@Base>:
   2c424:	str	r1, [r0, #184]	; 0xb8
   2c428:	bx	lr

0002c42c <myhtml_tree_get_myhtml@@Base>:
   2c42c:	cmp	r0, #0
   2c430:	ldrne	r0, [r0]
   2c434:	moveq	r0, #0
   2c438:	bx	lr

0002c43c <myhtml_tree_get_tag@@Base>:
   2c43c:	cmp	r0, #0
   2c440:	ldrne	r0, [r0, #28]
   2c444:	moveq	r0, #0
   2c448:	bx	lr

0002c44c <myhtml_tree_get_document@@Base>:
   2c44c:	ldr	r0, [r0, #84]	; 0x54
   2c450:	bx	lr

0002c454 <myhtml_tree_get_node_html@@Base>:
   2c454:	ldr	r0, [r0, #96]	; 0x60
   2c458:	bx	lr

0002c45c <myhtml_tree_get_node_body@@Base>:
   2c45c:	ldr	r0, [r0, #100]	; 0x64
   2c460:	bx	lr

0002c464 <myhtml_tree_get_node_head@@Base>:
   2c464:	ldr	r0, [r0, #92]	; 0x5c
   2c468:	bx	lr

0002c46c <myhtml_tree_get_mchar@@Base>:
   2c46c:	ldr	r0, [r0, #4]
   2c470:	bx	lr

0002c474 <myhtml_tree_get_mchar_node_id@@Base>:
   2c474:	ldr	r0, [r0, #52]	; 0x34
   2c478:	bx	lr

0002c47c <myhtml_tree_node_create@@Base>:
   2c47c:	push	{r4, r5, r6, lr}
   2c480:	mov	r4, r0
   2c484:	mov	r2, #0
   2c488:	ldr	r1, [r0, #48]	; 0x30
   2c48c:	ldr	r0, [r0, #12]
   2c490:	bl	10bbc <mcobject_async_malloc@plt>
   2c494:	mov	r5, r0
   2c498:	bl	1109c <myhtml_tree_node_clean@plt>
   2c49c:	str	r4, [r5, #40]	; 0x28
   2c4a0:	mov	r0, r5
   2c4a4:	pop	{r4, r5, r6, pc}

0002c4a8 <myhtml_tree_node_add_child@@Base>:
   2c4a8:	ldr	r3, [r0, #28]
   2c4ac:	cmp	r3, #0
   2c4b0:	strne	r1, [r3, #16]
   2c4b4:	ldrne	r3, [r0, #28]
   2c4b8:	strne	r3, [r1, #12]
   2c4bc:	streq	r1, [r0, #20]
   2c4c0:	str	r0, [r1, #24]
   2c4c4:	str	r1, [r0, #28]
   2c4c8:	ldr	r0, [r1, #40]	; 0x28
   2c4cc:	ldr	r3, [r0, #236]	; 0xec
   2c4d0:	cmp	r3, #0
   2c4d4:	bxeq	lr
   2c4d8:	push	{r4, lr}
   2c4dc:	ldr	r2, [r0, #244]	; 0xf4
   2c4e0:	blx	r3
   2c4e4:	pop	{r4, pc}

0002c4e8 <myhtml_tree_node_insert_before@@Base>:
   2c4e8:	ldr	r3, [r0, #12]
   2c4ec:	cmp	r3, #0
   2c4f0:	strne	r1, [r3, #16]
   2c4f4:	ldrne	r3, [r0, #12]
   2c4f8:	strne	r3, [r1, #12]
   2c4fc:	ldreq	r3, [r0, #24]
   2c500:	streq	r1, [r3, #20]
   2c504:	ldr	r3, [r0, #24]
   2c508:	str	r3, [r1, #24]
   2c50c:	str	r0, [r1, #16]
   2c510:	str	r1, [r0, #12]
   2c514:	ldr	r0, [r1, #40]	; 0x28
   2c518:	ldr	r3, [r0, #236]	; 0xec
   2c51c:	cmp	r3, #0
   2c520:	bxeq	lr
   2c524:	push	{r4, lr}
   2c528:	ldr	r2, [r0, #244]	; 0xf4
   2c52c:	blx	r3
   2c530:	pop	{r4, pc}

0002c534 <myhtml_tree_node_insert_after@@Base>:
   2c534:	ldr	r3, [r0, #16]
   2c538:	cmp	r3, #0
   2c53c:	strne	r1, [r3, #12]
   2c540:	ldrne	r3, [r0, #16]
   2c544:	strne	r3, [r1, #16]
   2c548:	ldreq	r3, [r0, #24]
   2c54c:	streq	r1, [r3, #28]
   2c550:	ldr	r3, [r0, #24]
   2c554:	str	r3, [r1, #24]
   2c558:	str	r0, [r1, #12]
   2c55c:	str	r1, [r0, #16]
   2c560:	ldr	r0, [r1, #40]	; 0x28
   2c564:	ldr	r3, [r0, #236]	; 0xec
   2c568:	cmp	r3, #0
   2c56c:	bxeq	lr
   2c570:	push	{r4, lr}
   2c574:	ldr	r2, [r0, #244]	; 0xf4
   2c578:	blx	r3
   2c57c:	pop	{r4, pc}

0002c580 <myhtml_tree_node_find_parent_by_tag_id@@Base>:
   2c580:	ldr	r0, [r0, #24]
   2c584:	cmp	r0, #0
   2c588:	bxeq	lr
   2c58c:	ldr	r3, [r0, #4]
   2c590:	cmp	r1, r3
   2c594:	bxeq	lr
   2c598:	ldr	r0, [r0, #24]
   2c59c:	cmp	r0, #0
   2c5a0:	bxeq	lr
   2c5a4:	ldr	r3, [r0, #4]
   2c5a8:	cmp	r3, r1
   2c5ac:	bne	2c598 <myhtml_tree_node_find_parent_by_tag_id@@Base+0x18>
   2c5b0:	bx	lr

0002c5b4 <myhtml_tree_node_remove@@Base>:
   2c5b4:	push	{r4, lr}
   2c5b8:	mov	r4, r0
   2c5bc:	ldr	r3, [r0, #16]
   2c5c0:	cmp	r3, #0
   2c5c4:	beq	2c618 <myhtml_tree_node_remove@@Base+0x64>
   2c5c8:	ldr	r2, [r0, #12]
   2c5cc:	str	r2, [r3, #12]
   2c5d0:	ldr	r3, [r4, #12]
   2c5d4:	cmp	r3, #0
   2c5d8:	beq	2c630 <myhtml_tree_node_remove@@Base+0x7c>
   2c5dc:	ldr	r2, [r4, #16]
   2c5e0:	str	r2, [r3, #16]
   2c5e4:	ldr	r0, [r4, #40]	; 0x28
   2c5e8:	ldr	r3, [r0, #240]	; 0xf0
   2c5ec:	cmp	r3, #0
   2c5f0:	beq	2c600 <myhtml_tree_node_remove@@Base+0x4c>
   2c5f4:	ldr	r2, [r0, #248]	; 0xf8
   2c5f8:	mov	r1, r4
   2c5fc:	blx	r3
   2c600:	mov	r3, #0
   2c604:	str	r3, [r4, #16]
   2c608:	str	r3, [r4, #12]
   2c60c:	str	r3, [r4, #24]
   2c610:	mov	r0, r4
   2c614:	pop	{r4, pc}
   2c618:	ldr	r3, [r0, #24]
   2c61c:	cmp	r3, #0
   2c620:	beq	2c644 <myhtml_tree_node_remove@@Base+0x90>
   2c624:	ldr	r2, [r0, #12]
   2c628:	str	r2, [r3, #28]
   2c62c:	b	2c5d0 <myhtml_tree_node_remove@@Base+0x1c>
   2c630:	ldr	r3, [r4, #24]
   2c634:	cmp	r3, #0
   2c638:	ldrne	r2, [r4, #16]
   2c63c:	strne	r2, [r3, #20]
   2c640:	b	2c5e4 <myhtml_tree_node_remove@@Base+0x30>
   2c644:	ldr	r3, [r0, #12]
   2c648:	cmp	r3, #0
   2c64c:	bne	2c5dc <myhtml_tree_node_remove@@Base+0x28>
   2c650:	b	2c5e4 <myhtml_tree_node_remove@@Base+0x30>

0002c654 <myhtml_tree_node_free@@Base>:
   2c654:	push	{r4, lr}
   2c658:	subs	r4, r0, #0
   2c65c:	popeq	{r4, pc}
   2c660:	ldr	r1, [r4, #32]
   2c664:	cmp	r1, #0
   2c668:	beq	2c688 <myhtml_tree_node_free@@Base+0x34>
   2c66c:	ldr	r3, [r4, #40]	; 0x28
   2c670:	ldr	r0, [r3, #8]
   2c674:	bl	107e4 <myhtml_token_attr_delete_all@plt>
   2c678:	ldr	r3, [r4, #40]	; 0x28
   2c67c:	ldr	r1, [r4, #32]
   2c680:	ldr	r0, [r3, #8]
   2c684:	bl	10f88 <myhtml_token_delete@plt>
   2c688:	ldr	r3, [r4, #40]	; 0x28
   2c68c:	mov	r1, r4
   2c690:	ldr	r0, [r3, #12]
   2c694:	bl	1004c <mcobject_async_free@plt>
   2c698:	pop	{r4, pc}

0002c69c <myhtml_tree_node_delete@@Base>:
   2c69c:	push	{r4, lr}
   2c6a0:	subs	r4, r0, #0
   2c6a4:	popeq	{r4, pc}
   2c6a8:	mov	r0, r4
   2c6ac:	bl	10df0 <myhtml_tree_node_remove@plt>
   2c6b0:	mov	r0, r4
   2c6b4:	bl	10d00 <myhtml_tree_node_free@plt>
   2c6b8:	pop	{r4, pc}
   2c6bc:	push	{r4, lr}
   2c6c0:	subs	r4, r0, #0
   2c6c4:	bne	2c6e0 <myhtml_tree_node_delete@@Base+0x44>
   2c6c8:	pop	{r4, pc}
   2c6cc:	ldr	r4, [r4, #16]
   2c6d0:	mov	r0, r4
   2c6d4:	bl	10dc0 <myhtml_tree_node_delete@plt>
   2c6d8:	cmp	r4, #0
   2c6dc:	beq	2c6f4 <myhtml_tree_node_delete@@Base+0x58>
   2c6e0:	ldr	r0, [r4, #20]
   2c6e4:	cmp	r0, #0
   2c6e8:	beq	2c6cc <myhtml_tree_node_delete@@Base+0x30>
   2c6ec:	bl	2c6bc <myhtml_tree_node_delete@@Base+0x20>
   2c6f0:	b	2c6cc <myhtml_tree_node_delete@@Base+0x30>
   2c6f4:	pop	{r4, pc}

0002c6f8 <myhtml_tree_node_delete_recursive@@Base>:
   2c6f8:	push	{r4, lr}
   2c6fc:	subs	r4, r0, #0
   2c700:	popeq	{r4, pc}
   2c704:	ldr	r0, [r4, #20]
   2c708:	cmp	r0, #0
   2c70c:	beq	2c714 <myhtml_tree_node_delete_recursive@@Base+0x1c>
   2c710:	bl	2c6bc <myhtml_tree_node_delete@@Base+0x20>
   2c714:	mov	r0, r4
   2c718:	bl	10dc0 <myhtml_tree_node_delete@plt>
   2c71c:	pop	{r4, pc}

0002c720 <myhtml_tree_node_clone@@Base>:
   2c720:	push	{r4, r5, r6, lr}
   2c724:	mov	r4, r0
   2c728:	ldr	r0, [r0, #40]	; 0x28
   2c72c:	bl	ffe0 <myhtml_tree_node_create@plt>
   2c730:	mov	r5, r0
   2c734:	ldr	r1, [r4, #32]
   2c738:	cmp	r1, #0
   2c73c:	beq	2c74c <myhtml_tree_node_clone@@Base+0x2c>
   2c740:	ldr	r3, [r4, #40]	; 0x28
   2c744:	ldr	r0, [r3, #8]
   2c748:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   2c74c:	ldr	r0, [r4, #40]	; 0x28
   2c750:	ldr	r3, [r0, #44]	; 0x2c
   2c754:	ldr	r2, [r0, #40]	; 0x28
   2c758:	ldr	r1, [r4, #32]
   2c75c:	ldr	r0, [r0, #8]
   2c760:	bl	ff2c <myhtml_token_node_clone@plt>
   2c764:	str	r0, [r5, #32]
   2c768:	ldr	r3, [r4, #4]
   2c76c:	str	r3, [r5, #4]
   2c770:	ldr	r3, [r4, #8]
   2c774:	str	r3, [r5, #8]
   2c778:	cmp	r0, #0
   2c77c:	ldrne	r3, [r0, #48]	; 0x30
   2c780:	orrne	r3, r3, #4
   2c784:	strne	r3, [r0, #48]	; 0x30
   2c788:	mov	r0, r5
   2c78c:	pop	{r4, r5, r6, pc}

0002c790 <myhtml_tree_node_insert_by_mode@@Base>:
   2c790:	push	{r4, lr}
   2c794:	cmp	r2, #0
   2c798:	beq	2c7ac <myhtml_tree_node_insert_by_mode@@Base+0x1c>
   2c79c:	cmp	r2, #1
   2c7a0:	beq	2c7b4 <myhtml_tree_node_insert_by_mode@@Base+0x24>
   2c7a4:	bl	10364 <myhtml_tree_node_insert_after@plt>
   2c7a8:	pop	{r4, pc}
   2c7ac:	bl	106b8 <myhtml_tree_node_add_child@plt>
   2c7b0:	pop	{r4, pc}
   2c7b4:	bl	103f4 <myhtml_tree_node_insert_before@plt>
   2c7b8:	pop	{r4, pc}

0002c7bc <myhtml_tree_node_insert_doctype@@Base>:
   2c7bc:	push	{r4, r5, r6, lr}
   2c7c0:	mov	r5, r0
   2c7c4:	mov	r6, r1
   2c7c8:	bl	ffe0 <myhtml_tree_node_create@plt>
   2c7cc:	mov	r4, r0
   2c7d0:	str	r6, [r0, #32]
   2c7d4:	mov	r3, #1
   2c7d8:	str	r3, [r0, #8]
   2c7dc:	mov	r3, #3
   2c7e0:	str	r3, [r0, #4]
   2c7e4:	mov	r1, r0
   2c7e8:	ldr	r0, [r5, #84]	; 0x54
   2c7ec:	bl	106b8 <myhtml_tree_node_add_child@plt>
   2c7f0:	mov	r0, r4
   2c7f4:	pop	{r4, r5, r6, pc}

0002c7f8 <myhtml_tree_element_in_scope@@Base>:
   2c7f8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2c7fc:	ldr	ip, [r0, #128]	; 0x80
   2c800:	ldr	r4, [ip]
   2c804:	ldr	r5, [ip, #4]
   2c808:	cmp	r5, #0
   2c80c:	beq	2c8b0 <myhtml_tree_element_in_scope@@Base+0xb8>
   2c810:	mov	r6, r3
   2c814:	mov	r9, r2
   2c818:	mov	r8, r1
   2c81c:	mov	r7, r0
   2c820:	add	r4, r4, r5, lsl #2
   2c824:	b	2c85c <myhtml_tree_element_in_scope@@Base+0x64>
   2c828:	cmp	r9, #0
   2c82c:	beq	2c8a8 <myhtml_tree_element_in_scope@@Base+0xb0>
   2c830:	ldr	r3, [ip, #8]
   2c834:	cmp	r9, r3
   2c838:	bne	2c880 <myhtml_tree_element_in_scope@@Base+0x88>
   2c83c:	b	2c8a8 <myhtml_tree_element_in_scope@@Base+0xb0>
   2c840:	ldr	r3, [ip, #8]
   2c844:	add	r3, r3, #4
   2c848:	ldr	r3, [r0, r3, lsl #2]
   2c84c:	tst	r3, #128	; 0x80
   2c850:	beq	2c8b8 <myhtml_tree_element_in_scope@@Base+0xc0>
   2c854:	cmp	r5, #0
   2c858:	beq	2c8a4 <myhtml_tree_element_in_scope@@Base+0xac>
   2c85c:	sub	r5, r5, #1
   2c860:	ldr	r3, [r4, #-4]
   2c864:	ldr	r1, [r3, #4]
   2c868:	ldr	r0, [r7, #28]
   2c86c:	bl	10a24 <myhtml_tag_get_by_id@plt>
   2c870:	ldr	ip, [r4, #-4]!
   2c874:	ldr	r3, [ip, #4]
   2c878:	cmp	r3, r8
   2c87c:	beq	2c828 <myhtml_tree_element_in_scope@@Base+0x30>
   2c880:	cmp	r6, #128	; 0x80
   2c884:	beq	2c840 <myhtml_tree_element_in_scope@@Base+0x48>
   2c888:	ldr	ip, [ip, #8]
   2c88c:	add	ip, ip, #4
   2c890:	ldr	r3, [r0, ip, lsl #2]
   2c894:	tst	r6, r3
   2c898:	beq	2c854 <myhtml_tree_element_in_scope@@Base+0x5c>
   2c89c:	mov	ip, #0
   2c8a0:	b	2c8a8 <myhtml_tree_element_in_scope@@Base+0xb0>
   2c8a4:	mov	ip, #0
   2c8a8:	mov	r0, ip
   2c8ac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2c8b0:	mov	ip, #0
   2c8b4:	b	2c8a8 <myhtml_tree_element_in_scope@@Base+0xb0>
   2c8b8:	mov	ip, #0
   2c8bc:	b	2c8a8 <myhtml_tree_element_in_scope@@Base+0xb0>

0002c8c0 <myhtml_tree_element_in_scope_by_node@@Base>:
   2c8c0:	push	{r4, r5, r6, r7, r8, lr}
   2c8c4:	ldr	r8, [r0, #40]	; 0x28
   2c8c8:	ldr	r3, [r8, #128]	; 0x80
   2c8cc:	ldr	r4, [r3]
   2c8d0:	ldr	r5, [r3, #4]
   2c8d4:	cmp	r5, #0
   2c8d8:	beq	2c954 <myhtml_tree_element_in_scope_by_node@@Base+0x94>
   2c8dc:	mov	r6, r1
   2c8e0:	mov	r7, r0
   2c8e4:	add	r4, r4, r5, lsl #2
   2c8e8:	b	2c908 <myhtml_tree_element_in_scope_by_node@@Base+0x48>
   2c8ec:	ldr	r3, [r3, #8]
   2c8f0:	add	r3, r3, #4
   2c8f4:	ldr	r3, [r0, r3, lsl #2]
   2c8f8:	tst	r3, #128	; 0x80
   2c8fc:	beq	2c964 <myhtml_tree_element_in_scope_by_node@@Base+0xa4>
   2c900:	cmp	r5, #0
   2c904:	beq	2c94c <myhtml_tree_element_in_scope_by_node@@Base+0x8c>
   2c908:	sub	r5, r5, #1
   2c90c:	ldr	r3, [r4, #-4]
   2c910:	ldr	r1, [r3, #4]
   2c914:	ldr	r0, [r8, #28]
   2c918:	bl	10a24 <myhtml_tag_get_by_id@plt>
   2c91c:	ldr	r3, [r4, #-4]!
   2c920:	cmp	r7, r3
   2c924:	beq	2c95c <myhtml_tree_element_in_scope_by_node@@Base+0x9c>
   2c928:	cmp	r6, #128	; 0x80
   2c92c:	beq	2c8ec <myhtml_tree_element_in_scope_by_node@@Base+0x2c>
   2c930:	ldr	r3, [r3, #8]
   2c934:	add	r3, r3, #4
   2c938:	ldr	r3, [r0, r3, lsl #2]
   2c93c:	tst	r6, r3
   2c940:	beq	2c900 <myhtml_tree_element_in_scope_by_node@@Base+0x40>
   2c944:	mov	r0, #0
   2c948:	pop	{r4, r5, r6, r7, r8, pc}
   2c94c:	mov	r0, #0
   2c950:	pop	{r4, r5, r6, r7, r8, pc}
   2c954:	mov	r0, #0
   2c958:	pop	{r4, r5, r6, r7, r8, pc}
   2c95c:	mov	r0, #1
   2c960:	pop	{r4, r5, r6, r7, r8, pc}
   2c964:	mov	r0, #0
   2c968:	pop	{r4, r5, r6, r7, r8, pc}

0002c96c <myhtml_tree_list_init@@Base>:
   2c96c:	push	{r4, lr}
   2c970:	mov	r0, #12
   2c974:	bl	10c94 <mycore_malloc@plt>
   2c978:	mov	r4, r0
   2c97c:	mov	r3, #0
   2c980:	str	r3, [r0, #4]
   2c984:	mov	r3, #4096	; 0x1000
   2c988:	str	r3, [r0, #8]
   2c98c:	mov	r0, #16384	; 0x4000
   2c990:	bl	10c94 <mycore_malloc@plt>
   2c994:	str	r0, [r4]
   2c998:	mov	r0, r4
   2c99c:	pop	{r4, pc}

0002c9a0 <myhtml_tree_list_clean@@Base>:
   2c9a0:	mov	r3, #0
   2c9a4:	str	r3, [r0, #4]
   2c9a8:	bx	lr

0002c9ac <myhtml_tree_list_destroy@@Base>:
   2c9ac:	push	{r4, r5, r6, lr}
   2c9b0:	subs	r4, r0, #0
   2c9b4:	beq	2c9d4 <myhtml_tree_list_destroy@@Base+0x28>
   2c9b8:	mov	r5, r1
   2c9bc:	ldr	r0, [r4]
   2c9c0:	cmp	r0, #0
   2c9c4:	beq	2c9cc <myhtml_tree_list_destroy@@Base+0x20>
   2c9c8:	bl	10dcc <mycore_free@plt>
   2c9cc:	cmp	r5, #0
   2c9d0:	bne	2c9dc <myhtml_tree_list_destroy@@Base+0x30>
   2c9d4:	mov	r0, r4
   2c9d8:	pop	{r4, r5, r6, pc}
   2c9dc:	mov	r0, r4
   2c9e0:	bl	10dcc <mycore_free@plt>
   2c9e4:	mov	r4, #0
   2c9e8:	b	2c9d4 <myhtml_tree_list_destroy@@Base+0x28>

0002c9ec <myhtml_tree_list_append@@Base>:
   2c9ec:	push	{r4, r5, r6, lr}
   2c9f0:	mov	r4, r0
   2c9f4:	mov	r5, r1
   2c9f8:	ldr	r3, [r0, #4]
   2c9fc:	ldr	r1, [r0, #8]
   2ca00:	cmp	r3, r1
   2ca04:	bcs	2ca24 <myhtml_tree_list_append@@Base+0x38>
   2ca08:	ldr	r2, [r4, #4]
   2ca0c:	ldr	r3, [r4]
   2ca10:	str	r5, [r3, r2, lsl #2]
   2ca14:	ldr	r3, [r4, #4]
   2ca18:	add	r3, r3, #1
   2ca1c:	str	r3, [r4, #4]
   2ca20:	pop	{r4, r5, r6, pc}
   2ca24:	lsl	r3, r1, #1
   2ca28:	str	r3, [r0, #8]
   2ca2c:	lsl	r1, r1, #3
   2ca30:	ldr	r0, [r0]
   2ca34:	bl	fbd8 <mycore_realloc@plt>
   2ca38:	cmp	r0, #0
   2ca3c:	strne	r0, [r4]
   2ca40:	b	2ca08 <myhtml_tree_list_append@@Base+0x1c>

0002ca44 <myhtml_tree_list_insert_by_index@@Base>:
   2ca44:	push	{r4, r5, r6, r7, r8, lr}
   2ca48:	mov	r4, r0
   2ca4c:	mov	r6, r1
   2ca50:	mov	r7, r2
   2ca54:	ldr	r3, [r0, #4]
   2ca58:	ldr	r1, [r0, #8]
   2ca5c:	cmp	r3, r1
   2ca60:	bcs	2caa4 <myhtml_tree_list_insert_by_index@@Base+0x60>
   2ca64:	ldr	r0, [r4]
   2ca68:	add	r3, r7, #1
   2ca6c:	lsl	r3, r3, #2
   2ca70:	sub	r5, r3, #4
   2ca74:	ldr	r2, [r4, #4]
   2ca78:	sub	r2, r2, r7
   2ca7c:	lsl	r2, r2, #2
   2ca80:	add	r1, r0, r5
   2ca84:	add	r0, r0, r3
   2ca88:	bl	fe78 <memmove@plt>
   2ca8c:	ldr	r3, [r4]
   2ca90:	str	r6, [r3, r5]
   2ca94:	ldr	r3, [r4, #4]
   2ca98:	add	r3, r3, #1
   2ca9c:	str	r3, [r4, #4]
   2caa0:	pop	{r4, r5, r6, r7, r8, pc}
   2caa4:	lsl	r3, r1, #1
   2caa8:	str	r3, [r0, #8]
   2caac:	lsl	r1, r1, #3
   2cab0:	ldr	r0, [r0]
   2cab4:	bl	fbd8 <mycore_realloc@plt>
   2cab8:	cmp	r0, #0
   2cabc:	strne	r0, [r4]
   2cac0:	b	2ca64 <myhtml_tree_list_insert_by_index@@Base+0x20>

0002cac4 <myhtml_tree_list_append_after_index@@Base>:
   2cac4:	push	{r4, lr}
   2cac8:	add	r2, r2, #1
   2cacc:	bl	102bc <myhtml_tree_list_insert_by_index@plt>
   2cad0:	pop	{r4, pc}

0002cad4 <myhtml_tree_list_current_node@@Base>:
   2cad4:	ldr	r3, [r0, #4]
   2cad8:	cmp	r3, #0
   2cadc:	ldrne	r3, [r0, #4]
   2cae0:	subne	r3, r3, #-1073741823	; 0xc0000001
   2cae4:	ldrne	r2, [r0]
   2cae8:	ldrne	r0, [r2, r3, lsl #2]
   2caec:	moveq	r0, #0
   2caf0:	bx	lr

0002caf4 <myhtml_tree_open_elements_init@@Base>:
   2caf4:	push	{r4, lr}
   2caf8:	bl	1085c <myhtml_tree_list_init@plt>
   2cafc:	pop	{r4, pc}

0002cb00 <myhtml_tree_open_elements_clean@@Base>:
   2cb00:	ldr	r3, [r0, #128]	; 0x80
   2cb04:	mov	r2, #0
   2cb08:	str	r2, [r3, #4]
   2cb0c:	bx	lr

0002cb10 <myhtml_tree_open_elements_destroy@@Base>:
   2cb10:	push	{r4, lr}
   2cb14:	mov	r1, #1
   2cb18:	ldr	r0, [r0, #128]	; 0x80
   2cb1c:	bl	106f4 <myhtml_tree_list_destroy@plt>
   2cb20:	pop	{r4, pc}

0002cb24 <myhtml_tree_current_node@@Base>:
   2cb24:	ldr	r3, [r0, #128]	; 0x80
   2cb28:	ldr	r2, [r3, #4]
   2cb2c:	cmp	r2, #0
   2cb30:	ldrne	r2, [r3, #4]
   2cb34:	subne	r2, r2, #-1073741823	; 0xc0000001
   2cb38:	ldrne	r3, [r3]
   2cb3c:	ldrne	r0, [r3, r2, lsl #2]
   2cb40:	moveq	r0, #0
   2cb44:	bx	lr

0002cb48 <myhtml_tree_adjusted_current_node@@Base>:
   2cb48:	mov	r3, r0
   2cb4c:	ldr	r2, [r0, #128]	; 0x80
   2cb50:	ldr	r2, [r2, #4]
   2cb54:	cmp	r2, #1
   2cb58:	beq	2cb6c <myhtml_tree_adjusted_current_node@@Base+0x24>
   2cb5c:	push	{r4, lr}
   2cb60:	mov	r0, r3
   2cb64:	bl	10628 <myhtml_tree_current_node@plt>
   2cb68:	pop	{r4, pc}
   2cb6c:	ldr	r0, [r0, #88]	; 0x58
   2cb70:	cmp	r0, #0
   2cb74:	bxne	lr
   2cb78:	b	2cb5c <myhtml_tree_adjusted_current_node@@Base+0x14>

0002cb7c <myhtml_tree_open_elements_append@@Base>:
   2cb7c:	push	{r4, lr}
   2cb80:	ldr	r0, [r0, #128]	; 0x80
   2cb84:	bl	10220 <myhtml_tree_list_append@plt>
   2cb88:	pop	{r4, pc}

0002cb8c <myhtml_tree_node_insert_root@@Base>:
   2cb8c:	push	{r4, r5, r6, r7, r8, lr}
   2cb90:	mov	r5, r0
   2cb94:	mov	r6, r1
   2cb98:	mov	r7, r2
   2cb9c:	bl	ffe0 <myhtml_tree_node_create@plt>
   2cba0:	mov	r4, r0
   2cba4:	cmp	r6, #0
   2cba8:	ldrne	r3, [r6]
   2cbac:	moveq	r3, #65	; 0x41
   2cbb0:	str	r3, [r0, #4]
   2cbb4:	str	r6, [r0, #32]
   2cbb8:	str	r7, [r0, #8]
   2cbbc:	mov	r1, r0
   2cbc0:	ldr	r0, [r5, #84]	; 0x54
   2cbc4:	bl	106b8 <myhtml_tree_node_add_child@plt>
   2cbc8:	mov	r1, r4
   2cbcc:	mov	r0, r5
   2cbd0:	bl	10988 <myhtml_tree_open_elements_append@plt>
   2cbd4:	str	r4, [r5, #96]	; 0x60
   2cbd8:	mov	r0, r4
   2cbdc:	pop	{r4, r5, r6, r7, r8, pc}

0002cbe0 <myhtml_tree_open_elements_append_after_index@@Base>:
   2cbe0:	push	{r4, lr}
   2cbe4:	ldr	r0, [r0, #128]	; 0x80
   2cbe8:	bl	109c4 <myhtml_tree_list_append_after_index@plt>
   2cbec:	pop	{r4, pc}

0002cbf0 <myhtml_tree_open_elements_pop@@Base>:
   2cbf0:	ldr	r3, [r0, #128]	; 0x80
   2cbf4:	ldr	r2, [r3, #4]
   2cbf8:	cmp	r2, #0
   2cbfc:	ldrne	r2, [r3, #4]
   2cc00:	subne	r2, r2, #1
   2cc04:	strne	r2, [r3, #4]
   2cc08:	bx	lr

0002cc0c <myhtml_tree_open_elements_remove@@Base>:
   2cc0c:	push	{r4, r5, r6, lr}
   2cc10:	ldr	r6, [r0, #128]	; 0x80
   2cc14:	ldr	r5, [r6]
   2cc18:	ldr	r3, [r6, #4]
   2cc1c:	cmp	r3, #0
   2cc20:	popeq	{r4, r5, r6, pc}
   2cc24:	sub	ip, r3, #1
   2cc28:	add	lr, r5, ip, lsl #2
   2cc2c:	ldr	r2, [r5, ip, lsl #2]
   2cc30:	cmp	r1, r2
   2cc34:	subne	r3, r3, #-1073741822	; 0xc0000002
   2cc38:	addne	r3, r5, r3, lsl #2
   2cc3c:	beq	2cc68 <myhtml_tree_open_elements_remove@@Base+0x5c>
   2cc40:	cmp	ip, #0
   2cc44:	beq	2cca0 <myhtml_tree_open_elements_remove@@Base+0x94>
   2cc48:	sub	r2, ip, #1
   2cc4c:	mov	lr, r3
   2cc50:	sub	r3, r3, #4
   2cc54:	ldr	r4, [lr]
   2cc58:	cmp	r4, r1
   2cc5c:	beq	2cc70 <myhtml_tree_open_elements_remove@@Base+0x64>
   2cc60:	mov	ip, r2
   2cc64:	b	2cc40 <myhtml_tree_open_elements_remove@@Base+0x34>
   2cc68:	mov	r2, ip
   2cc6c:	mov	ip, r3
   2cc70:	mov	r4, r0
   2cc74:	ldr	r3, [r6, #4]
   2cc78:	sub	r2, r3, r2
   2cc7c:	lsl	r2, r2, #2
   2cc80:	add	r1, r5, ip, lsl #2
   2cc84:	mov	r0, lr
   2cc88:	bl	fe78 <memmove@plt>
   2cc8c:	ldr	r2, [r4, #128]	; 0x80
   2cc90:	ldr	r3, [r2, #4]
   2cc94:	sub	r3, r3, #1
   2cc98:	str	r3, [r2, #4]
   2cc9c:	pop	{r4, r5, r6, pc}
   2cca0:	pop	{r4, r5, r6, pc}

0002cca4 <myhtml_tree_open_elements_pop_until@@Base>:
   2cca4:	push	{r4, lr}
   2cca8:	ldr	ip, [r0, #128]	; 0x80
   2ccac:	ldr	r4, [ip]
   2ccb0:	ldr	ip, [r0, #128]	; 0x80
   2ccb4:	ldr	lr, [ip, #4]
   2ccb8:	cmp	lr, #0
   2ccbc:	beq	2cd14 <myhtml_tree_open_elements_pop_until@@Base+0x70>
   2ccc0:	ldr	lr, [ip, #4]
   2ccc4:	sub	lr, lr, #1
   2ccc8:	str	lr, [ip, #4]
   2cccc:	ldr	ip, [r0, #128]	; 0x80
   2ccd0:	ldr	lr, [ip, #4]
   2ccd4:	ldr	lr, [r4, lr, lsl #2]
   2ccd8:	ldr	lr, [lr, #4]
   2ccdc:	cmp	lr, r1
   2cce0:	bne	2ccb0 <myhtml_tree_open_elements_pop_until@@Base+0xc>
   2cce4:	cmp	r2, #0
   2cce8:	beq	2cd00 <myhtml_tree_open_elements_pop_until@@Base+0x5c>
   2ccec:	ldr	lr, [ip, #4]
   2ccf0:	ldr	lr, [r4, lr, lsl #2]
   2ccf4:	ldr	lr, [lr, #8]
   2ccf8:	cmp	r2, lr
   2ccfc:	bne	2ccb0 <myhtml_tree_open_elements_pop_until@@Base+0xc>
   2cd00:	cmp	r3, #0
   2cd04:	ldrne	r3, [ip, #4]
   2cd08:	addne	r3, r3, #1
   2cd0c:	strne	r3, [ip, #4]
   2cd10:	pop	{r4, pc}
   2cd14:	pop	{r4, pc}

0002cd18 <myhtml_tree_open_elements_pop_until_by_node@@Base>:
   2cd18:	push	{lr}		; (str lr, [sp, #-4]!)
   2cd1c:	ldr	r3, [r0, #128]	; 0x80
   2cd20:	ldr	lr, [r3]
   2cd24:	ldr	r3, [r0, #128]	; 0x80
   2cd28:	ldr	ip, [r3, #4]
   2cd2c:	cmp	ip, #0
   2cd30:	beq	2cd68 <myhtml_tree_open_elements_pop_until_by_node@@Base+0x50>
   2cd34:	ldr	ip, [r3, #4]
   2cd38:	sub	ip, ip, #1
   2cd3c:	str	ip, [r3, #4]
   2cd40:	ldr	r3, [r0, #128]	; 0x80
   2cd44:	ldr	ip, [r3, #4]
   2cd48:	ldr	ip, [lr, ip, lsl #2]
   2cd4c:	cmp	ip, r1
   2cd50:	bne	2cd24 <myhtml_tree_open_elements_pop_until_by_node@@Base+0xc>
   2cd54:	cmp	r2, #0
   2cd58:	ldrne	r2, [r3, #4]
   2cd5c:	addne	r2, r2, #1
   2cd60:	strne	r2, [r3, #4]
   2cd64:	pop	{pc}		; (ldr pc, [sp], #4)
   2cd68:	pop	{pc}		; (ldr pc, [sp], #4)

0002cd6c <myhtml_tree_open_elements_pop_until_by_index@@Base>:
   2cd6c:	ldr	r3, [r0, #128]	; 0x80
   2cd70:	ldr	ip, [r3, #4]
   2cd74:	cmp	ip, #0
   2cd78:	beq	2cdac <myhtml_tree_open_elements_pop_until_by_index@@Base+0x40>
   2cd7c:	ldr	ip, [r3, #4]
   2cd80:	sub	ip, ip, #1
   2cd84:	str	ip, [r3, #4]
   2cd88:	ldr	r3, [r0, #128]	; 0x80
   2cd8c:	ldr	ip, [r3, #4]
   2cd90:	cmp	ip, r1
   2cd94:	bne	2cd6c <myhtml_tree_open_elements_pop_until_by_index@@Base>
   2cd98:	cmp	r2, #0
   2cd9c:	ldrne	r2, [r3, #4]
   2cda0:	addne	r2, r2, #1
   2cda4:	strne	r2, [r3, #4]
   2cda8:	bx	lr
   2cdac:	bx	lr

0002cdb0 <myhtml_tree_open_elements_find_reverse@@Base>:
   2cdb0:	ldr	r3, [r0, #128]	; 0x80
   2cdb4:	ldr	r0, [r3]
   2cdb8:	ldr	ip, [r3, #4]
   2cdbc:	cmp	ip, #0
   2cdc0:	beq	2ce14 <myhtml_tree_open_elements_find_reverse@@Base+0x64>
   2cdc4:	push	{lr}		; (str lr, [sp, #-4]!)
   2cdc8:	sub	r3, ip, #1
   2cdcc:	ldr	lr, [r0, r3, lsl #2]
   2cdd0:	cmp	r1, lr
   2cdd4:	subne	ip, ip, #-1073741823	; 0xc0000001
   2cdd8:	addne	r0, r0, ip, lsl #2
   2cddc:	beq	2cdf8 <myhtml_tree_open_elements_find_reverse@@Base+0x48>
   2cde0:	cmp	r3, #0
   2cde4:	beq	2ce0c <myhtml_tree_open_elements_find_reverse@@Base+0x5c>
   2cde8:	sub	r3, r3, #1
   2cdec:	ldr	ip, [r0, #-4]!
   2cdf0:	cmp	ip, r1
   2cdf4:	bne	2cde0 <myhtml_tree_open_elements_find_reverse@@Base+0x30>
   2cdf8:	cmp	r2, #0
   2cdfc:	beq	2ce1c <myhtml_tree_open_elements_find_reverse@@Base+0x6c>
   2ce00:	str	r3, [r2]
   2ce04:	mov	r0, #1
   2ce08:	pop	{pc}		; (ldr pc, [sp], #4)
   2ce0c:	mov	r0, #0
   2ce10:	pop	{pc}		; (ldr pc, [sp], #4)
   2ce14:	mov	r0, #0
   2ce18:	bx	lr
   2ce1c:	mov	r0, #1
   2ce20:	pop	{pc}		; (ldr pc, [sp], #4)

0002ce24 <myhtml_tree_open_elements_find@@Base>:
   2ce24:	push	{lr}		; (str lr, [sp, #-4]!)
   2ce28:	ldr	lr, [r0, #128]	; 0x80
   2ce2c:	ldr	r0, [lr]
   2ce30:	ldr	r3, [lr, #4]
   2ce34:	cmp	r3, #0
   2ce38:	beq	2ce8c <myhtml_tree_open_elements_find@@Base+0x68>
   2ce3c:	ldr	r3, [r0]
   2ce40:	cmp	r1, r3
   2ce44:	movne	r3, #0
   2ce48:	beq	2ce7c <myhtml_tree_open_elements_find@@Base+0x58>
   2ce4c:	add	r3, r3, #1
   2ce50:	ldr	ip, [lr, #4]
   2ce54:	cmp	ip, r3
   2ce58:	bls	2ce84 <myhtml_tree_open_elements_find@@Base+0x60>
   2ce5c:	ldr	ip, [r0, #4]!
   2ce60:	cmp	ip, r1
   2ce64:	bne	2ce4c <myhtml_tree_open_elements_find@@Base+0x28>
   2ce68:	cmp	r2, #0
   2ce6c:	beq	2ce94 <myhtml_tree_open_elements_find@@Base+0x70>
   2ce70:	str	r3, [r2]
   2ce74:	mov	r0, #1
   2ce78:	pop	{pc}		; (ldr pc, [sp], #4)
   2ce7c:	mov	r3, #0
   2ce80:	b	2ce68 <myhtml_tree_open_elements_find@@Base+0x44>
   2ce84:	mov	r0, #0
   2ce88:	pop	{pc}		; (ldr pc, [sp], #4)
   2ce8c:	mov	r0, #0
   2ce90:	pop	{pc}		; (ldr pc, [sp], #4)
   2ce94:	mov	r0, #1
   2ce98:	pop	{pc}		; (ldr pc, [sp], #4)

0002ce9c <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base>:
   2ce9c:	ldr	r0, [r0, #128]	; 0x80
   2cea0:	ldr	ip, [r0]
   2cea4:	ldr	r0, [r0, #4]
   2cea8:	cmp	r0, #0
   2ceac:	beq	2cf08 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x6c>
   2ceb0:	push	{r4, r5, lr}
   2ceb4:	sub	lr, r0, #-1073741823	; 0xc0000001
   2ceb8:	add	ip, ip, lr, lsl #2
   2cebc:	b	2cec8 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x2c>
   2cec0:	cmp	r0, #0
   2cec4:	beq	2cf04 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x68>
   2cec8:	sub	r0, r0, #1
   2cecc:	mov	r5, ip
   2ced0:	ldr	lr, [ip], #-4
   2ced4:	ldr	r4, [lr, #4]
   2ced8:	cmp	r4, r1
   2cedc:	bne	2cec0 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x24>
   2cee0:	cmp	r2, #0
   2cee4:	beq	2cef4 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x58>
   2cee8:	ldr	lr, [lr, #8]
   2ceec:	cmp	r2, lr
   2cef0:	bne	2cec0 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x24>
   2cef4:	cmp	r3, #0
   2cef8:	strne	r0, [r3]
   2cefc:	ldr	r0, [r5]
   2cf00:	pop	{r4, r5, pc}
   2cf04:	pop	{r4, r5, pc}
   2cf08:	mov	r0, #0
   2cf0c:	bx	lr

0002cf10 <myhtml_tree_open_elements_find_by_tag_idx@@Base>:
   2cf10:	push	{r4, r5, r6, lr}
   2cf14:	ldr	r5, [r0, #128]	; 0x80
   2cf18:	ldr	r0, [r5]
   2cf1c:	ldr	ip, [r5, #4]
   2cf20:	cmp	ip, #0
   2cf24:	beq	2cf80 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x70>
   2cf28:	mov	ip, #0
   2cf2c:	b	2cf40 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x30>
   2cf30:	add	ip, ip, #1
   2cf34:	ldr	lr, [r5, #4]
   2cf38:	cmp	lr, ip
   2cf3c:	bls	2cf78 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x68>
   2cf40:	mov	r6, r0
   2cf44:	ldr	lr, [r0], #4
   2cf48:	ldr	r4, [lr, #4]
   2cf4c:	cmp	r4, r1
   2cf50:	bne	2cf30 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x20>
   2cf54:	cmp	r2, #0
   2cf58:	beq	2cf68 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x58>
   2cf5c:	ldr	lr, [lr, #8]
   2cf60:	cmp	r2, lr
   2cf64:	bne	2cf30 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x20>
   2cf68:	cmp	r3, #0
   2cf6c:	strne	ip, [r3]
   2cf70:	ldr	r0, [r6]
   2cf74:	pop	{r4, r5, r6, pc}
   2cf78:	mov	r0, #0
   2cf7c:	pop	{r4, r5, r6, pc}
   2cf80:	mov	r0, #0
   2cf84:	pop	{r4, r5, r6, pc}

0002cf88 <myhtml_tree_generate_implied_end_tags@@Base>:
   2cf88:	ldr	r3, [r0, #128]	; 0x80
   2cf8c:	ldr	ip, [r3, #4]
   2cf90:	cmp	ip, #0
   2cf94:	bxeq	lr
   2cf98:	push	{r4, r5, r6, lr}
   2cf9c:	mov	r6, r2
   2cfa0:	mov	r5, r1
   2cfa4:	mov	r4, r0
   2cfa8:	ldr	r3, [r3, #4]
   2cfac:	cmp	r3, #0
   2cfb0:	bne	2cfd8 <myhtml_tree_generate_implied_end_tags@@Base+0x50>
   2cfb4:	pop	{r4, r5, r6, pc}
   2cfb8:	cmp	ip, r5
   2cfbc:	beq	2d118 <myhtml_tree_generate_implied_end_tags@@Base+0x190>
   2cfc0:	mov	r0, r4
   2cfc4:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   2cfc8:	ldr	r3, [r4, #128]	; 0x80
   2cfcc:	ldr	r3, [r3, #4]
   2cfd0:	cmp	r3, #0
   2cfd4:	beq	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2cfd8:	mov	r0, r4
   2cfdc:	bl	10628 <myhtml_tree_current_node@plt>
   2cfe0:	ldr	ip, [r0, #4]
   2cfe4:	sub	r3, ip, #36	; 0x24
   2cfe8:	cmp	r3, #72	; 0x48
   2cfec:	addls	pc, pc, r3, lsl #2
   2cff0:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2cff4:	b	2cfb8 <myhtml_tree_generate_implied_end_tags@@Base+0x30>
   2cff8:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2cffc:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d000:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d004:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d008:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d00c:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d010:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d014:	b	2cfb8 <myhtml_tree_generate_implied_end_tags@@Base+0x30>
   2d018:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d01c:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d020:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d024:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d028:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d02c:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d030:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d034:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d038:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d03c:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d040:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d044:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d048:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d04c:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d050:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d054:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d058:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d05c:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d060:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d064:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d068:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d06c:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d070:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d074:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d078:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d07c:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d080:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d084:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d088:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d08c:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d090:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d094:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d098:	b	2cfb8 <myhtml_tree_generate_implied_end_tags@@Base+0x30>
   2d09c:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d0a0:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d0a4:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d0a8:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d0ac:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d0b0:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d0b4:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d0b8:	b	2cfb8 <myhtml_tree_generate_implied_end_tags@@Base+0x30>
   2d0bc:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d0c0:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d0c4:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d0c8:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d0cc:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d0d0:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d0d4:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d0d8:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d0dc:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d0e0:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d0e4:	b	2cfb8 <myhtml_tree_generate_implied_end_tags@@Base+0x30>
   2d0e8:	b	2cfb8 <myhtml_tree_generate_implied_end_tags@@Base+0x30>
   2d0ec:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d0f0:	b	2cfb8 <myhtml_tree_generate_implied_end_tags@@Base+0x30>
   2d0f4:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d0f8:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d0fc:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d100:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d104:	b	2d130 <myhtml_tree_generate_implied_end_tags@@Base+0x1a8>
   2d108:	b	2cfb8 <myhtml_tree_generate_implied_end_tags@@Base+0x30>
   2d10c:	b	2cfb8 <myhtml_tree_generate_implied_end_tags@@Base+0x30>
   2d110:	b	2cfb8 <myhtml_tree_generate_implied_end_tags@@Base+0x30>
   2d114:	b	2cfb8 <myhtml_tree_generate_implied_end_tags@@Base+0x30>
   2d118:	cmp	r6, #0
   2d11c:	popeq	{r4, r5, r6, pc}
   2d120:	ldr	r3, [r0, #8]
   2d124:	cmp	r6, r3
   2d128:	bne	2cfc0 <myhtml_tree_generate_implied_end_tags@@Base+0x38>
   2d12c:	pop	{r4, r5, r6, pc}
   2d130:	pop	{r4, r5, r6, pc}

0002d134 <myhtml_tree_generate_all_implied_end_tags@@Base>:
   2d134:	ldr	r3, [r0, #128]	; 0x80
   2d138:	ldr	ip, [r3, #4]
   2d13c:	cmp	ip, #0
   2d140:	bxeq	lr
   2d144:	push	{r4, r5, r6, lr}
   2d148:	mov	r6, r2
   2d14c:	mov	r5, r1
   2d150:	mov	r4, r0
   2d154:	ldr	r3, [r3, #4]
   2d158:	cmp	r3, #0
   2d15c:	bne	2d184 <myhtml_tree_generate_all_implied_end_tags@@Base+0x50>
   2d160:	pop	{r4, r5, r6, pc}
   2d164:	cmp	ip, r5
   2d168:	beq	2d354 <myhtml_tree_generate_all_implied_end_tags@@Base+0x220>
   2d16c:	mov	r0, r4
   2d170:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   2d174:	ldr	r3, [r4, #128]	; 0x80
   2d178:	ldr	r3, [r3, #4]
   2d17c:	cmp	r3, #0
   2d180:	beq	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d184:	mov	r0, r4
   2d188:	bl	10628 <myhtml_tree_current_node@plt>
   2d18c:	ldr	ip, [r0, #4]
   2d190:	sub	r3, ip, #27
   2d194:	cmp	r3, #108	; 0x6c
   2d198:	addls	pc, pc, r3, lsl #2
   2d19c:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d1a0:	b	2d164 <myhtml_tree_generate_all_implied_end_tags@@Base+0x30>
   2d1a4:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d1a8:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d1ac:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d1b0:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d1b4:	b	2d164 <myhtml_tree_generate_all_implied_end_tags@@Base+0x30>
   2d1b8:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d1bc:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d1c0:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d1c4:	b	2d164 <myhtml_tree_generate_all_implied_end_tags@@Base+0x30>
   2d1c8:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d1cc:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d1d0:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d1d4:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d1d8:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d1dc:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d1e0:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d1e4:	b	2d164 <myhtml_tree_generate_all_implied_end_tags@@Base+0x30>
   2d1e8:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d1ec:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d1f0:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d1f4:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d1f8:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d1fc:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d200:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d204:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d208:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d20c:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d210:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d214:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d218:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d21c:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d220:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d224:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d228:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d22c:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d230:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d234:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d238:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d23c:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d240:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d244:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d248:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d24c:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d250:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d254:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d258:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d25c:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d260:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d264:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d268:	b	2d164 <myhtml_tree_generate_all_implied_end_tags@@Base+0x30>
   2d26c:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d270:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d274:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d278:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d27c:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d280:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d284:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d288:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d28c:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d290:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d294:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d298:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d29c:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d2a0:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d2a4:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d2a8:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d2ac:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d2b0:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d2b4:	b	2d164 <myhtml_tree_generate_all_implied_end_tags@@Base+0x30>
   2d2b8:	b	2d164 <myhtml_tree_generate_all_implied_end_tags@@Base+0x30>
   2d2bc:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d2c0:	b	2d164 <myhtml_tree_generate_all_implied_end_tags@@Base+0x30>
   2d2c4:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d2c8:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d2cc:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d2d0:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d2d4:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d2d8:	b	2d164 <myhtml_tree_generate_all_implied_end_tags@@Base+0x30>
   2d2dc:	b	2d164 <myhtml_tree_generate_all_implied_end_tags@@Base+0x30>
   2d2e0:	b	2d164 <myhtml_tree_generate_all_implied_end_tags@@Base+0x30>
   2d2e4:	b	2d164 <myhtml_tree_generate_all_implied_end_tags@@Base+0x30>
   2d2e8:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d2ec:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d2f0:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d2f4:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d2f8:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d2fc:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d300:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d304:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d308:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d30c:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d310:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d314:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d318:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d31c:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d320:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d324:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d328:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d32c:	b	2d164 <myhtml_tree_generate_all_implied_end_tags@@Base+0x30>
   2d330:	b	2d164 <myhtml_tree_generate_all_implied_end_tags@@Base+0x30>
   2d334:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d338:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d33c:	b	2d164 <myhtml_tree_generate_all_implied_end_tags@@Base+0x30>
   2d340:	b	2d164 <myhtml_tree_generate_all_implied_end_tags@@Base+0x30>
   2d344:	b	2d164 <myhtml_tree_generate_all_implied_end_tags@@Base+0x30>
   2d348:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d34c:	b	2d36c <myhtml_tree_generate_all_implied_end_tags@@Base+0x238>
   2d350:	b	2d164 <myhtml_tree_generate_all_implied_end_tags@@Base+0x30>
   2d354:	cmp	r6, #0
   2d358:	popeq	{r4, r5, r6, pc}
   2d35c:	ldr	r3, [r0, #8]
   2d360:	cmp	r6, r3
   2d364:	bne	2d16c <myhtml_tree_generate_all_implied_end_tags@@Base+0x38>
   2d368:	pop	{r4, r5, r6, pc}
   2d36c:	pop	{r4, r5, r6, pc}

0002d370 <myhtml_tree_reset_insertion_mode_appropriately@@Base>:
   2d370:	ldr	r2, [r0, #128]	; 0x80
   2d374:	ldr	r3, [r2, #4]
   2d378:	cmp	r3, #0
   2d37c:	bxeq	lr
   2d380:	push	{r4, r5, r6, lr}
   2d384:	ldr	r3, [r2, #4]
   2d388:	ldr	r4, [r2]
   2d38c:	cmp	r3, #0
   2d390:	beq	2d720 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x3b0>
   2d394:	add	r2, r4, r3, lsl #2
   2d398:	mov	r6, #1
   2d39c:	mov	r5, #0
   2d3a0:	b	2d3a8 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x38>
   2d3a4:	mov	r3, lr
   2d3a8:	ldr	r1, [r2, #-4]!
   2d3ac:	subs	lr, r3, #1
   2d3b0:	beq	2d5a4 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x234>
   2d3b4:	ldr	ip, [r1, #8]
   2d3b8:	cmp	ip, #1
   2d3bc:	moveq	ip, r5
   2d3c0:	bne	2d3a4 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x34>
   2d3c4:	ldr	r1, [r1, #4]
   2d3c8:	cmp	r1, #114	; 0x72
   2d3cc:	beq	2d5c8 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x258>
   2d3d0:	sub	r1, r1, #23
   2d3d4:	cmp	r1, #112	; 0x70
   2d3d8:	addls	pc, pc, r1, lsl #2
   2d3dc:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d3e0:	b	2d6dc <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x36c>
   2d3e4:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d3e8:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d3ec:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d3f0:	b	2d688 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x318>
   2d3f4:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d3f8:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d3fc:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d400:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d404:	b	2d694 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x324>
   2d408:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d40c:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d410:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d414:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d418:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d41c:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d420:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d424:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d428:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d42c:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d430:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d434:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d438:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d43c:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d440:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d444:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d448:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d44c:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d450:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d454:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d458:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d45c:	b	2d6e8 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x378>
   2d460:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d464:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d468:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d46c:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d470:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d474:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d478:	b	2d6c8 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x358>
   2d47c:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d480:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d484:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d488:	b	2d6f4 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x384>
   2d48c:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d490:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d494:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d498:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d49c:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d4a0:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d4a4:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d4a8:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d4ac:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d4b0:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d4b4:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d4b8:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d4bc:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d4c0:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d4c4:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d4c8:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d4cc:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d4d0:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d4d4:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d4d8:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d4dc:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d4e0:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d4e4:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d4e8:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d4ec:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d4f0:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d4f4:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d4f8:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d4fc:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d500:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d504:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d508:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d50c:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d510:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d514:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d518:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d51c:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d520:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d524:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d528:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d52c:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d530:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d534:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d538:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d53c:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d540:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d544:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d548:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d54c:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d550:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d554:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d558:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d55c:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d560:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d564:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d568:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d56c:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d570:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d574:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d578:	b	2d6a0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x330>
   2d57c:	b	2d67c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x30c>
   2d580:	b	2d650 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2e0>
   2d584:	b	2d6ac <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x33c>
   2d588:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d58c:	b	2d67c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x30c>
   2d590:	b	2d650 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2e0>
   2d594:	b	2d67c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x30c>
   2d598:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d59c:	b	2d70c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x39c>
   2d5a0:	b	2d670 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2d5a4:	ldr	ip, [r0, #88]	; 0x58
   2d5a8:	cmp	ip, #0
   2d5ac:	moveq	ip, r1
   2d5b0:	ldr	r1, [ip, #8]
   2d5b4:	cmp	r1, #1
   2d5b8:	beq	2d72c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x3bc>
   2d5bc:	mov	r3, #6
   2d5c0:	str	r3, [r0, #168]	; 0xa8
   2d5c4:	pop	{r4, r5, r6, pc}
   2d5c8:	cmp	ip, #0
   2d5cc:	bne	2d62c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2bc>
   2d5d0:	cmp	lr, #0
   2d5d4:	beq	2d638 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2c8>
   2d5d8:	sub	r2, r3, #2
   2d5dc:	ldr	r1, [r4, r2, lsl #2]
   2d5e0:	ldr	r1, [r1, #4]
   2d5e4:	cmp	r1, #128	; 0x80
   2d5e8:	beq	2d644 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2d4>
   2d5ec:	cmp	r1, #125	; 0x7d
   2d5f0:	beq	2d620 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2b0>
   2d5f4:	sub	r3, r3, #-1073741822	; 0xc0000002
   2d5f8:	add	r3, r4, r3, lsl #2
   2d5fc:	cmp	r2, #0
   2d600:	beq	2d638 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2c8>
   2d604:	sub	r2, r2, #1
   2d608:	ldr	r1, [r3, #-4]!
   2d60c:	ldr	r1, [r1, #4]
   2d610:	cmp	r1, #128	; 0x80
   2d614:	beq	2d644 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2d4>
   2d618:	cmp	r1, #125	; 0x7d
   2d61c:	bne	2d5fc <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x28c>
   2d620:	mov	r3, #16
   2d624:	str	r3, [r0, #168]	; 0xa8
   2d628:	pop	{r4, r5, r6, pc}
   2d62c:	mov	r3, #15
   2d630:	str	r3, [r0, #168]	; 0xa8
   2d634:	pop	{r4, r5, r6, pc}
   2d638:	mov	r3, #15
   2d63c:	str	r3, [r0, #168]	; 0xa8
   2d640:	pop	{r4, r5, r6, pc}
   2d644:	mov	r3, #15
   2d648:	str	r3, [r0, #168]	; 0xa8
   2d64c:	pop	{r4, r5, r6, pc}
   2d650:	cmp	ip, #0
   2d654:	beq	2d664 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2f4>
   2d658:	mov	r3, #6
   2d65c:	str	r3, [r0, #168]	; 0xa8
   2d660:	pop	{r4, r5, r6, pc}
   2d664:	mov	r3, #14
   2d668:	str	r3, [r0, #168]	; 0xa8
   2d66c:	pop	{r4, r5, r6, pc}
   2d670:	mov	r3, #13
   2d674:	str	r3, [r0, #168]	; 0xa8
   2d678:	pop	{r4, r5, r6, pc}
   2d67c:	mov	r3, #12
   2d680:	str	r3, [r0, #168]	; 0xa8
   2d684:	pop	{r4, r5, r6, pc}
   2d688:	mov	r3, #10
   2d68c:	str	r3, [r0, #168]	; 0xa8
   2d690:	pop	{r4, r5, r6, pc}
   2d694:	mov	r3, #11
   2d698:	str	r3, [r0, #168]	; 0xa8
   2d69c:	pop	{r4, r5, r6, pc}
   2d6a0:	mov	r3, #8
   2d6a4:	str	r3, [r0, #168]	; 0xa8
   2d6a8:	pop	{r4, r5, r6, pc}
   2d6ac:	ldr	r2, [r0, #140]	; 0x8c
   2d6b0:	ldr	r3, [r2, #4]
   2d6b4:	sub	r3, r3, #-1073741823	; 0xc0000001
   2d6b8:	ldr	r2, [r2]
   2d6bc:	ldr	r3, [r2, r3, lsl #2]
   2d6c0:	str	r3, [r0, #168]	; 0xa8
   2d6c4:	pop	{r4, r5, r6, pc}
   2d6c8:	cmp	ip, #0
   2d6cc:	bne	2d658 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2e8>
   2d6d0:	mov	r3, #3
   2d6d4:	str	r3, [r0, #168]	; 0xa8
   2d6d8:	pop	{r4, r5, r6, pc}
   2d6dc:	mov	r3, #6
   2d6e0:	str	r3, [r0, #168]	; 0xa8
   2d6e4:	pop	{r4, r5, r6, pc}
   2d6e8:	mov	r3, #19
   2d6ec:	str	r3, [r0, #168]	; 0xa8
   2d6f0:	pop	{r4, r5, r6, pc}
   2d6f4:	ldr	r3, [r0, #92]	; 0x5c
   2d6f8:	cmp	r3, #0
   2d6fc:	movne	r3, #5
   2d700:	moveq	r3, #2
   2d704:	str	r3, [r0, #168]	; 0xa8
   2d708:	pop	{r4, r5, r6, pc}
   2d70c:	cmp	ip, #0
   2d710:	bne	2d658 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2e8>
   2d714:	mov	r3, lr
   2d718:	cmp	lr, #0
   2d71c:	bne	2d3a8 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x38>
   2d720:	mov	r3, #0
   2d724:	str	r3, [r0, #168]	; 0xa8
   2d728:	pop	{r4, r5, r6, pc}
   2d72c:	mov	r1, ip
   2d730:	mov	ip, r6
   2d734:	b	2d3c4 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x54>

0002d738 <myhtml_tree_active_formatting_init@@Base>:
   2d738:	push	{r4, lr}
   2d73c:	bl	1085c <myhtml_tree_list_init@plt>
   2d740:	pop	{r4, pc}

0002d744 <myhtml_tree_active_formatting_clean@@Base>:
   2d744:	ldr	r3, [r0, #124]	; 0x7c
   2d748:	mov	r2, #0
   2d74c:	str	r2, [r3, #4]
   2d750:	bx	lr

0002d754 <myhtml_tree_active_formatting_destroy@@Base>:
   2d754:	push	{r4, lr}
   2d758:	mov	r1, #1
   2d75c:	ldr	r0, [r0, #124]	; 0x7c
   2d760:	bl	106f4 <myhtml_tree_list_destroy@plt>
   2d764:	pop	{r4, pc}

0002d768 <myhtml_tree_active_formatting_is_marker@@Base>:
   2d768:	ldr	r3, [r0]
   2d76c:	ldr	r3, [r3, #36]	; 0x24
   2d770:	cmp	r3, r1
   2d774:	beq	2d7c8 <myhtml_tree_active_formatting_is_marker@@Base+0x60>
   2d778:	ldr	r3, [r1, #4]
   2d77c:	cmp	r3, #83	; 0x53
   2d780:	beq	2d7c0 <myhtml_tree_active_formatting_is_marker@@Base+0x58>
   2d784:	bhi	2d7a8 <myhtml_tree_active_formatting_is_marker@@Base+0x40>
   2d788:	cmp	r3, #25
   2d78c:	beq	2d7c0 <myhtml_tree_active_formatting_is_marker@@Base+0x58>
   2d790:	cmp	r3, #27
   2d794:	beq	2d7c0 <myhtml_tree_active_formatting_is_marker@@Base+0x58>
   2d798:	cmp	r3, #9
   2d79c:	beq	2d7c0 <myhtml_tree_active_formatting_is_marker@@Base+0x58>
   2d7a0:	mov	r0, #0
   2d7a4:	bx	lr
   2d7a8:	cmp	r3, #127	; 0x7f
   2d7ac:	beq	2d7c0 <myhtml_tree_active_formatting_is_marker@@Base+0x58>
   2d7b0:	cmp	r3, #131	; 0x83
   2d7b4:	beq	2d7c0 <myhtml_tree_active_formatting_is_marker@@Base+0x58>
   2d7b8:	cmp	r3, #94	; 0x5e
   2d7bc:	bne	2d7a0 <myhtml_tree_active_formatting_is_marker@@Base+0x38>
   2d7c0:	mov	r0, #1
   2d7c4:	bx	lr
   2d7c8:	mov	r0, #1
   2d7cc:	bx	lr

0002d7d0 <myhtml_tree_active_formatting_append@@Base>:
   2d7d0:	push	{r4, lr}
   2d7d4:	ldr	r0, [r0, #124]	; 0x7c
   2d7d8:	bl	10220 <myhtml_tree_list_append@plt>
   2d7dc:	pop	{r4, pc}

0002d7e0 <myhtml_tree_active_formatting_pop@@Base>:
   2d7e0:	ldr	r3, [r0, #124]	; 0x7c
   2d7e4:	ldr	r2, [r3, #4]
   2d7e8:	cmp	r2, #0
   2d7ec:	ldrne	r2, [r3, #4]
   2d7f0:	subne	r2, r2, #1
   2d7f4:	strne	r2, [r3, #4]
   2d7f8:	bx	lr

0002d7fc <myhtml_tree_active_formatting_remove@@Base>:
   2d7fc:	push	{r4, r5, r6, lr}
   2d800:	ldr	r6, [r0, #124]	; 0x7c
   2d804:	ldr	r5, [r6]
   2d808:	ldr	r3, [r6, #4]
   2d80c:	cmp	r3, #0
   2d810:	popeq	{r4, r5, r6, pc}
   2d814:	sub	ip, r3, #1
   2d818:	add	lr, r5, ip, lsl #2
   2d81c:	ldr	r2, [r5, ip, lsl #2]
   2d820:	cmp	r1, r2
   2d824:	subne	r3, r3, #-1073741822	; 0xc0000002
   2d828:	addne	r3, r5, r3, lsl #2
   2d82c:	beq	2d858 <myhtml_tree_active_formatting_remove@@Base+0x5c>
   2d830:	cmp	ip, #0
   2d834:	beq	2d890 <myhtml_tree_active_formatting_remove@@Base+0x94>
   2d838:	sub	r2, ip, #1
   2d83c:	mov	lr, r3
   2d840:	sub	r3, r3, #4
   2d844:	ldr	r4, [lr]
   2d848:	cmp	r4, r1
   2d84c:	beq	2d860 <myhtml_tree_active_formatting_remove@@Base+0x64>
   2d850:	mov	ip, r2
   2d854:	b	2d830 <myhtml_tree_active_formatting_remove@@Base+0x34>
   2d858:	mov	r2, ip
   2d85c:	mov	ip, r3
   2d860:	mov	r4, r0
   2d864:	ldr	r3, [r6, #4]
   2d868:	sub	r2, r3, r2
   2d86c:	lsl	r2, r2, #2
   2d870:	add	r1, r5, ip, lsl #2
   2d874:	mov	r0, lr
   2d878:	bl	fe78 <memmove@plt>
   2d87c:	ldr	r2, [r4, #124]	; 0x7c
   2d880:	ldr	r3, [r2, #4]
   2d884:	sub	r3, r3, #1
   2d888:	str	r3, [r2, #4]
   2d88c:	pop	{r4, r5, r6, pc}
   2d890:	pop	{r4, r5, r6, pc}

0002d894 <myhtml_tree_active_formatting_remove_by_index@@Base>:
   2d894:	push	{r4, lr}
   2d898:	mov	r4, r0
   2d89c:	ldr	r2, [r0, #124]	; 0x7c
   2d8a0:	ldr	r0, [r2]
   2d8a4:	lsl	r3, r1, #2
   2d8a8:	ldr	r2, [r2, #4]
   2d8ac:	sub	r2, r2, r1
   2d8b0:	add	r1, r3, #4
   2d8b4:	lsl	r2, r2, #2
   2d8b8:	add	r1, r0, r1
   2d8bc:	add	r0, r0, r3
   2d8c0:	bl	fe78 <memmove@plt>
   2d8c4:	ldr	r2, [r4, #124]	; 0x7c
   2d8c8:	ldr	r3, [r2, #4]
   2d8cc:	sub	r3, r3, #1
   2d8d0:	str	r3, [r2, #4]
   2d8d4:	pop	{r4, pc}

0002d8d8 <myhtml_tree_active_formatting_append_with_check@@Base>:
   2d8d8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2d8dc:	mov	r6, r0
   2d8e0:	mov	r7, r1
   2d8e4:	ldr	r3, [r0, #124]	; 0x7c
   2d8e8:	ldr	r4, [r3]
   2d8ec:	ldr	r5, [r3, #4]
   2d8f0:	cmp	r5, #0
   2d8f4:	beq	2d9b4 <myhtml_tree_active_formatting_append_with_check@@Base+0xdc>
   2d8f8:	sub	sl, r5, #1
   2d8fc:	add	r4, r4, r5, lsl #2
   2d900:	mov	r9, #0
   2d904:	b	2d914 <myhtml_tree_active_formatting_append_with_check@@Base+0x3c>
   2d908:	sub	r4, r4, #4
   2d90c:	cmp	r5, #0
   2d910:	beq	2d9a0 <myhtml_tree_active_formatting_append_with_check@@Base+0xc8>
   2d914:	sub	r5, r5, #1
   2d918:	mov	r8, r4
   2d91c:	ldr	r1, [r4, #-4]
   2d920:	mov	r0, r6
   2d924:	bl	10874 <myhtml_tree_active_formatting_is_marker@plt>
   2d928:	cmp	r0, #0
   2d92c:	bne	2d9a0 <myhtml_tree_active_formatting_append_with_check@@Base+0xc8>
   2d930:	ldr	r3, [r4, #-4]
   2d934:	ldr	r1, [r3, #32]
   2d938:	cmp	r1, #0
   2d93c:	beq	2d908 <myhtml_tree_active_formatting_append_with_check@@Base+0x30>
   2d940:	ldr	r3, [r7, #32]
   2d944:	cmp	r3, #0
   2d948:	beq	2d908 <myhtml_tree_active_formatting_append_with_check@@Base+0x30>
   2d94c:	ldr	r0, [r6, #8]
   2d950:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   2d954:	ldr	r1, [r7, #32]
   2d958:	ldr	r0, [r6, #8]
   2d95c:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   2d960:	ldr	r3, [r4, #-4]
   2d964:	ldr	r1, [r3, #8]
   2d968:	ldr	r2, [r7, #8]
   2d96c:	cmp	r1, r2
   2d970:	bne	2d908 <myhtml_tree_active_formatting_append_with_check@@Base+0x30>
   2d974:	ldr	r1, [r3, #4]
   2d978:	ldr	r2, [r7, #4]
   2d97c:	cmp	r1, r2
   2d980:	bne	2d908 <myhtml_tree_active_formatting_append_with_check@@Base+0x30>
   2d984:	ldr	r1, [r7, #32]
   2d988:	ldr	r0, [r3, #32]
   2d98c:	bl	10b2c <myhtml_token_attr_compare@plt>
   2d990:	cmp	r0, #0
   2d994:	addne	r9, r9, #1
   2d998:	movne	sl, r5
   2d99c:	b	2d908 <myhtml_tree_active_formatting_append_with_check@@Base+0x30>
   2d9a0:	cmp	r9, #2
   2d9a4:	bls	2d9b4 <myhtml_tree_active_formatting_append_with_check@@Base+0xdc>
   2d9a8:	mov	r1, sl
   2d9ac:	mov	r0, r6
   2d9b0:	bl	10844 <myhtml_tree_active_formatting_remove_by_index@plt>
   2d9b4:	mov	r1, r7
   2d9b8:	mov	r0, r6
   2d9bc:	bl	100d0 <myhtml_tree_active_formatting_append@plt>
   2d9c0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

0002d9c4 <myhtml_tree_active_formatting_current_node@@Base>:
   2d9c4:	ldr	r3, [r0, #124]	; 0x7c
   2d9c8:	ldr	r2, [r3, #4]
   2d9cc:	cmp	r2, #0
   2d9d0:	ldrne	r2, [r3, #4]
   2d9d4:	subne	r2, r2, #-1073741823	; 0xc0000001
   2d9d8:	ldrne	r3, [r3]
   2d9dc:	ldrne	r0, [r3, r2, lsl #2]
   2d9e0:	moveq	r0, #0
   2d9e4:	bx	lr

0002d9e8 <myhtml_tree_active_formatting_find@@Base>:
   2d9e8:	ldr	r3, [r0, #124]	; 0x7c
   2d9ec:	ldr	r0, [r3]
   2d9f0:	ldr	ip, [r3, #4]
   2d9f4:	cmp	ip, #0
   2d9f8:	beq	2da4c <myhtml_tree_active_formatting_find@@Base+0x64>
   2d9fc:	push	{lr}		; (str lr, [sp, #-4]!)
   2da00:	sub	r3, ip, #1
   2da04:	ldr	lr, [r0, r3, lsl #2]
   2da08:	cmp	r1, lr
   2da0c:	subne	ip, ip, #-1073741823	; 0xc0000001
   2da10:	addne	r0, r0, ip, lsl #2
   2da14:	beq	2da30 <myhtml_tree_active_formatting_find@@Base+0x48>
   2da18:	cmp	r3, #0
   2da1c:	beq	2da44 <myhtml_tree_active_formatting_find@@Base+0x5c>
   2da20:	sub	r3, r3, #1
   2da24:	ldr	ip, [r0, #-4]!
   2da28:	cmp	ip, r1
   2da2c:	bne	2da18 <myhtml_tree_active_formatting_find@@Base+0x30>
   2da30:	cmp	r2, #0
   2da34:	beq	2da54 <myhtml_tree_active_formatting_find@@Base+0x6c>
   2da38:	str	r3, [r2]
   2da3c:	mov	r0, #1
   2da40:	pop	{pc}		; (ldr pc, [sp], #4)
   2da44:	mov	r0, #0
   2da48:	pop	{pc}		; (ldr pc, [sp], #4)
   2da4c:	mov	r0, #0
   2da50:	bx	lr
   2da54:	mov	r0, #1
   2da58:	pop	{pc}		; (ldr pc, [sp], #4)

0002da5c <myhtml_tree_active_formatting_up_to_last_marker@@Base>:
   2da5c:	ldr	r3, [r0, #124]	; 0x7c
   2da60:	ldr	r2, [r3, #4]
   2da64:	cmp	r2, #0
   2da68:	bxeq	lr
   2da6c:	push	{r4, r5, r6, lr}
   2da70:	mov	r4, r0
   2da74:	ldr	r5, [r3]
   2da78:	ldr	r3, [r4, #124]	; 0x7c
   2da7c:	ldr	r2, [r3, #4]
   2da80:	cmp	r2, #0
   2da84:	beq	2dab4 <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x58>
   2da88:	ldr	r2, [r3, #4]
   2da8c:	sub	r2, r2, #1
   2da90:	str	r2, [r3, #4]
   2da94:	ldr	r3, [r4, #124]	; 0x7c
   2da98:	ldr	r3, [r3, #4]
   2da9c:	ldr	r1, [r5, r3, lsl #2]
   2daa0:	mov	r0, r4
   2daa4:	bl	10874 <myhtml_tree_active_formatting_is_marker@plt>
   2daa8:	cmp	r0, #0
   2daac:	beq	2da78 <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x1c>
   2dab0:	pop	{r4, r5, r6, pc}
   2dab4:	pop	{r4, r5, r6, pc}

0002dab8 <myhtml_tree_active_formatting_between_last_marker@@Base>:
   2dab8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2dabc:	ldr	r3, [r0, #124]	; 0x7c
   2dac0:	ldr	r4, [r3]
   2dac4:	ldr	r5, [r3, #4]
   2dac8:	cmp	r5, #0
   2dacc:	beq	2db40 <myhtml_tree_active_formatting_between_last_marker@@Base+0x88>
   2dad0:	mov	r9, r2
   2dad4:	mov	r7, r1
   2dad8:	mov	r6, r0
   2dadc:	sub	r3, r5, #-1073741823	; 0xc0000001
   2dae0:	add	r4, r4, r3, lsl #2
   2dae4:	b	2daf0 <myhtml_tree_active_formatting_between_last_marker@@Base+0x38>
   2dae8:	cmp	r5, #0
   2daec:	beq	2db38 <myhtml_tree_active_formatting_between_last_marker@@Base+0x80>
   2daf0:	sub	r5, r5, #1
   2daf4:	mov	r8, r4
   2daf8:	ldr	r1, [r4]
   2dafc:	mov	r0, r6
   2db00:	bl	10874 <myhtml_tree_active_formatting_is_marker@plt>
   2db04:	cmp	r0, #0
   2db08:	bne	2db48 <myhtml_tree_active_formatting_between_last_marker@@Base+0x90>
   2db0c:	ldr	r3, [r4], #-4
   2db10:	ldr	ip, [r3, #4]
   2db14:	cmp	ip, r7
   2db18:	bne	2dae8 <myhtml_tree_active_formatting_between_last_marker@@Base+0x30>
   2db1c:	ldr	r3, [r3, #8]
   2db20:	cmp	r3, #1
   2db24:	bne	2dae8 <myhtml_tree_active_formatting_between_last_marker@@Base+0x30>
   2db28:	cmp	r9, #0
   2db2c:	strne	r5, [r9]
   2db30:	ldr	r0, [r8]
   2db34:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2db38:	mov	r0, #0
   2db3c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2db40:	mov	r0, #0
   2db44:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2db48:	mov	r0, #0
   2db4c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

0002db50 <myhtml_tree_appropriate_place_inserting@@Base>:
   2db50:	push	{r4, r5, r6, lr}
   2db54:	sub	sp, sp, #8
   2db58:	mov	r5, r0
   2db5c:	mov	r6, r2
   2db60:	mov	r3, #0
   2db64:	str	r3, [r2]
   2db68:	subs	r4, r1, #0
   2db6c:	beq	2db94 <myhtml_tree_appropriate_place_inserting@@Base+0x44>
   2db70:	ldrb	r3, [r5, #188]	; 0xbc
   2db74:	cmp	r3, #0
   2db78:	beq	2db88 <myhtml_tree_appropriate_place_inserting@@Base+0x38>
   2db7c:	ldr	r3, [r4, #8]
   2db80:	cmp	r3, #1
   2db84:	beq	2dba0 <myhtml_tree_appropriate_place_inserting@@Base+0x50>
   2db88:	mov	r0, r4
   2db8c:	add	sp, sp, #8
   2db90:	pop	{r4, r5, r6, pc}
   2db94:	bl	10628 <myhtml_tree_current_node@plt>
   2db98:	mov	r4, r0
   2db9c:	b	2db70 <myhtml_tree_appropriate_place_inserting@@Base+0x20>
   2dba0:	ldr	r3, [r4, #4]
   2dba4:	sub	r3, r3, #125	; 0x7d
   2dba8:	cmp	r3, #10
   2dbac:	addls	pc, pc, r3, lsl #2
   2dbb0:	b	2db88 <myhtml_tree_appropriate_place_inserting@@Base+0x38>
   2dbb4:	b	2dbe0 <myhtml_tree_appropriate_place_inserting@@Base+0x90>
   2dbb8:	b	2dbe0 <myhtml_tree_appropriate_place_inserting@@Base+0x90>
   2dbbc:	b	2db88 <myhtml_tree_appropriate_place_inserting@@Base+0x38>
   2dbc0:	b	2db88 <myhtml_tree_appropriate_place_inserting@@Base+0x38>
   2dbc4:	b	2db88 <myhtml_tree_appropriate_place_inserting@@Base+0x38>
   2dbc8:	b	2dbe0 <myhtml_tree_appropriate_place_inserting@@Base+0x90>
   2dbcc:	b	2db88 <myhtml_tree_appropriate_place_inserting@@Base+0x38>
   2dbd0:	b	2dbe0 <myhtml_tree_appropriate_place_inserting@@Base+0x90>
   2dbd4:	b	2db88 <myhtml_tree_appropriate_place_inserting@@Base+0x38>
   2dbd8:	b	2db88 <myhtml_tree_appropriate_place_inserting@@Base+0x38>
   2dbdc:	b	2dbe0 <myhtml_tree_appropriate_place_inserting@@Base+0x90>
   2dbe0:	mov	r3, sp
   2dbe4:	mov	r2, #1
   2dbe8:	mov	r1, #128	; 0x80
   2dbec:	mov	r0, r5
   2dbf0:	bl	fcb0 <myhtml_tree_open_elements_find_by_tag_idx_reverse@plt>
   2dbf4:	mov	r4, r0
   2dbf8:	add	r3, sp, #4
   2dbfc:	mov	r2, #1
   2dc00:	mov	r1, #125	; 0x7d
   2dc04:	mov	r0, r5
   2dc08:	bl	fcb0 <myhtml_tree_open_elements_find_by_tag_idx_reverse@plt>
   2dc0c:	cmp	r4, #0
   2dc10:	beq	2dc58 <myhtml_tree_appropriate_place_inserting@@Base+0x108>
   2dc14:	cmp	r0, #0
   2dc18:	beq	2db88 <myhtml_tree_appropriate_place_inserting@@Base+0x38>
   2dc1c:	ldr	r3, [sp, #4]
   2dc20:	ldr	r2, [sp]
   2dc24:	cmp	r2, r3
   2dc28:	bhi	2db88 <myhtml_tree_appropriate_place_inserting@@Base+0x38>
   2dc2c:	ldr	r3, [r0, #24]
   2dc30:	cmp	r3, #0
   2dc34:	beq	2dc70 <myhtml_tree_appropriate_place_inserting@@Base+0x120>
   2dc38:	ldr	r4, [r0, #12]
   2dc3c:	cmp	r4, #0
   2dc40:	movne	r3, #2
   2dc44:	strne	r3, [r6]
   2dc48:	moveq	r3, #1
   2dc4c:	streq	r3, [r6]
   2dc50:	moveq	r4, r0
   2dc54:	b	2db88 <myhtml_tree_appropriate_place_inserting@@Base+0x38>
   2dc58:	cmp	r0, #0
   2dc5c:	bne	2dc2c <myhtml_tree_appropriate_place_inserting@@Base+0xdc>
   2dc60:	ldr	r3, [r5, #128]	; 0x80
   2dc64:	ldr	r3, [r3]
   2dc68:	ldr	r4, [r3]
   2dc6c:	b	2db88 <myhtml_tree_appropriate_place_inserting@@Base+0x38>
   2dc70:	ldr	r2, [r5, #128]	; 0x80
   2dc74:	ldr	r3, [sp, #4]
   2dc78:	sub	r3, r3, #-1073741823	; 0xc0000001
   2dc7c:	ldr	r2, [r2]
   2dc80:	ldr	r4, [r2, r3, lsl #2]
   2dc84:	b	2db88 <myhtml_tree_appropriate_place_inserting@@Base+0x38>

0002dc88 <myhtml_tree_node_insert_by_token@@Base>:
   2dc88:	push	{r4, r5, r6, r7, lr}
   2dc8c:	sub	sp, sp, #12
   2dc90:	mov	r5, r0
   2dc94:	mov	r6, r1
   2dc98:	mov	r7, r2
   2dc9c:	bl	ffe0 <myhtml_tree_node_create@plt>
   2dca0:	mov	r4, r0
   2dca4:	ldr	r3, [r6]
   2dca8:	str	r3, [r0, #4]
   2dcac:	str	r6, [r0, #32]
   2dcb0:	str	r7, [r0, #8]
   2dcb4:	add	r2, sp, #4
   2dcb8:	mov	r1, #0
   2dcbc:	mov	r0, r5
   2dcc0:	bl	10e80 <myhtml_tree_appropriate_place_inserting@plt>
   2dcc4:	ldr	r2, [sp, #4]
   2dcc8:	mov	r1, r4
   2dccc:	bl	10358 <myhtml_tree_node_insert_by_mode@plt>
   2dcd0:	mov	r1, r4
   2dcd4:	mov	r0, r5
   2dcd8:	bl	10988 <myhtml_tree_open_elements_append@plt>
   2dcdc:	mov	r0, r4
   2dce0:	add	sp, sp, #12
   2dce4:	pop	{r4, r5, r6, r7, pc}

0002dce8 <myhtml_tree_node_insert@@Base>:
   2dce8:	push	{r4, r5, r6, r7, lr}
   2dcec:	sub	sp, sp, #12
   2dcf0:	mov	r5, r0
   2dcf4:	mov	r7, r1
   2dcf8:	mov	r6, r2
   2dcfc:	bl	ffe0 <myhtml_tree_node_create@plt>
   2dd00:	mov	r4, r0
   2dd04:	mov	r1, #0
   2dd08:	str	r1, [r0, #32]
   2dd0c:	str	r7, [r0, #4]
   2dd10:	str	r6, [r0, #8]
   2dd14:	add	r2, sp, #4
   2dd18:	mov	r0, r5
   2dd1c:	bl	10e80 <myhtml_tree_appropriate_place_inserting@plt>
   2dd20:	ldr	r2, [sp, #4]
   2dd24:	mov	r1, r4
   2dd28:	bl	10358 <myhtml_tree_node_insert_by_mode@plt>
   2dd2c:	mov	r1, r4
   2dd30:	mov	r0, r5
   2dd34:	bl	10988 <myhtml_tree_open_elements_append@plt>
   2dd38:	mov	r0, r4
   2dd3c:	add	sp, sp, #12
   2dd40:	pop	{r4, r5, r6, r7, pc}

0002dd44 <myhtml_tree_node_insert_comment@@Base>:
   2dd44:	push	{r4, r5, r6, r7, lr}
   2dd48:	sub	sp, sp, #12
   2dd4c:	mov	r7, r0
   2dd50:	mov	r6, r1
   2dd54:	mov	r5, r2
   2dd58:	bl	ffe0 <myhtml_tree_node_create@plt>
   2dd5c:	mov	r4, r0
   2dd60:	str	r6, [r0, #32]
   2dd64:	mov	r3, #2
   2dd68:	str	r3, [r0, #4]
   2dd6c:	mov	r3, #0
   2dd70:	str	r3, [sp, #4]
   2dd74:	cmp	r5, r3
   2dd78:	beq	2dda0 <myhtml_tree_node_insert_comment@@Base+0x5c>
   2dd7c:	ldr	r2, [sp, #4]
   2dd80:	mov	r1, r4
   2dd84:	mov	r0, r5
   2dd88:	bl	10358 <myhtml_tree_node_insert_by_mode@plt>
   2dd8c:	ldr	r3, [r5, #8]
   2dd90:	str	r3, [r4, #8]
   2dd94:	mov	r0, r4
   2dd98:	add	sp, sp, #12
   2dd9c:	pop	{r4, r5, r6, r7, pc}
   2dda0:	add	r2, sp, #4
   2dda4:	mov	r1, r3
   2dda8:	mov	r0, r7
   2ddac:	bl	10e80 <myhtml_tree_appropriate_place_inserting@plt>
   2ddb0:	mov	r5, r0
   2ddb4:	b	2dd7c <myhtml_tree_node_insert_comment@@Base+0x38>

0002ddb8 <myhtml_tree_node_insert_text@@Base>:
   2ddb8:	push	{r4, r5, r6, lr}
   2ddbc:	sub	sp, sp, #8
   2ddc0:	mov	r4, r0
   2ddc4:	mov	r6, r1
   2ddc8:	add	r2, sp, #4
   2ddcc:	mov	r1, #0
   2ddd0:	bl	10e80 <myhtml_tree_appropriate_place_inserting@plt>
   2ddd4:	ldr	r3, [r4, #84]	; 0x54
   2ddd8:	cmp	r0, r3
   2dddc:	beq	2decc <myhtml_tree_node_insert_text@@Base+0x114>
   2dde0:	mov	r5, r0
   2dde4:	ldr	r3, [sp, #4]
   2dde8:	cmp	r3, #2
   2ddec:	beq	2de4c <myhtml_tree_node_insert_text@@Base+0x94>
   2ddf0:	cmp	r3, #1
   2ddf4:	beq	2de7c <myhtml_tree_node_insert_text@@Base+0xc4>
   2ddf8:	ldr	r3, [r0, #28]
   2ddfc:	cmp	r3, #0
   2de00:	beq	2de10 <myhtml_tree_node_insert_text@@Base+0x58>
   2de04:	ldr	r2, [r3, #4]
   2de08:	cmp	r2, #1
   2de0c:	beq	2dea8 <myhtml_tree_node_insert_text@@Base+0xf0>
   2de10:	mov	r0, r4
   2de14:	bl	ffe0 <myhtml_tree_node_create@plt>
   2de18:	mov	r4, r0
   2de1c:	mov	r3, #1
   2de20:	str	r3, [r0, #4]
   2de24:	str	r6, [r0, #32]
   2de28:	ldr	r3, [r5, #8]
   2de2c:	str	r3, [r0, #8]
   2de30:	ldr	r2, [sp, #4]
   2de34:	mov	r1, r0
   2de38:	mov	r0, r5
   2de3c:	bl	10358 <myhtml_tree_node_insert_by_mode@plt>
   2de40:	mov	r0, r4
   2de44:	add	sp, sp, #8
   2de48:	pop	{r4, r5, r6, pc}
   2de4c:	ldr	r3, [r0, #4]
   2de50:	cmp	r3, #1
   2de54:	bne	2de10 <myhtml_tree_node_insert_text@@Base+0x58>
   2de58:	ldr	r1, [r0, #32]
   2de5c:	cmp	r1, #0
   2de60:	beq	2de10 <myhtml_tree_node_insert_text@@Base+0x58>
   2de64:	mov	r3, #0
   2de68:	mov	r2, r6
   2de6c:	mov	r0, r4
   2de70:	bl	10484 <myhtml_token_merged_two_token_string@plt>
   2de74:	mov	r4, r5
   2de78:	b	2de40 <myhtml_tree_node_insert_text@@Base+0x88>
   2de7c:	ldr	r3, [r0, #4]
   2de80:	cmp	r3, #1
   2de84:	bne	2de10 <myhtml_tree_node_insert_text@@Base+0x58>
   2de88:	ldr	r2, [r0, #32]
   2de8c:	cmp	r2, #0
   2de90:	beq	2de10 <myhtml_tree_node_insert_text@@Base+0x58>
   2de94:	mov	r1, r6
   2de98:	mov	r0, r4
   2de9c:	bl	10484 <myhtml_token_merged_two_token_string@plt>
   2dea0:	mov	r4, r5
   2dea4:	b	2de40 <myhtml_tree_node_insert_text@@Base+0x88>
   2dea8:	ldr	r1, [r3, #32]
   2deac:	cmp	r1, #0
   2deb0:	beq	2de10 <myhtml_tree_node_insert_text@@Base+0x58>
   2deb4:	mov	r3, #0
   2deb8:	mov	r2, r6
   2debc:	mov	r0, r4
   2dec0:	bl	10484 <myhtml_token_merged_two_token_string@plt>
   2dec4:	ldr	r4, [r5, #28]
   2dec8:	b	2de40 <myhtml_tree_node_insert_text@@Base+0x88>
   2decc:	mov	r4, #0
   2ded0:	b	2de40 <myhtml_tree_node_insert_text@@Base+0x88>

0002ded4 <myhtml_tree_node_insert_by_node@@Base>:
   2ded4:	push	{r4, r5, lr}
   2ded8:	sub	sp, sp, #12
   2dedc:	mov	r5, r0
   2dee0:	mov	r4, r1
   2dee4:	add	r2, sp, #4
   2dee8:	mov	r1, #0
   2deec:	bl	10e80 <myhtml_tree_appropriate_place_inserting@plt>
   2def0:	ldr	r2, [sp, #4]
   2def4:	mov	r1, r4
   2def8:	bl	10358 <myhtml_tree_node_insert_by_mode@plt>
   2defc:	mov	r1, r4
   2df00:	mov	r0, r5
   2df04:	bl	10988 <myhtml_tree_open_elements_append@plt>
   2df08:	mov	r0, r4
   2df0c:	add	sp, sp, #12
   2df10:	pop	{r4, r5, pc}

0002df14 <myhtml_tree_active_formatting_reconstruction@@Base>:
   2df14:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2df18:	ldr	r8, [r0, #124]	; 0x7c
   2df1c:	ldr	r3, [r8, #4]
   2df20:	cmp	r3, #0
   2df24:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   2df28:	mov	r4, r0
   2df2c:	ldr	r7, [r8]
   2df30:	ldr	r6, [r8, #4]
   2df34:	sub	r5, r6, #1
   2df38:	ldr	r1, [r7, r5, lsl #2]
   2df3c:	bl	10874 <myhtml_tree_active_formatting_is_marker@plt>
   2df40:	cmp	r0, #0
   2df44:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   2df48:	mov	r2, #0
   2df4c:	ldr	r1, [r7, r5, lsl #2]
   2df50:	mov	r0, r4
   2df54:	bl	11048 <myhtml_tree_open_elements_find@plt>
   2df58:	cmp	r0, #0
   2df5c:	bne	2dff0 <myhtml_tree_active_formatting_reconstruction@@Base+0xdc>
   2df60:	cmp	r5, #0
   2df64:	subne	r6, r6, #-1073741823	; 0xc0000001
   2df68:	addne	r6, r7, r6, lsl #2
   2df6c:	movne	sl, #0
   2df70:	beq	2dfb0 <myhtml_tree_active_formatting_reconstruction@@Base+0x9c>
   2df74:	sub	r9, r5, #1
   2df78:	ldr	r1, [r6, #-4]
   2df7c:	mov	r0, r4
   2df80:	bl	10874 <myhtml_tree_active_formatting_is_marker@plt>
   2df84:	cmp	r0, #0
   2df88:	bne	2dfb0 <myhtml_tree_active_formatting_reconstruction@@Base+0x9c>
   2df8c:	mov	r2, sl
   2df90:	ldr	r1, [r6, #-4]!
   2df94:	mov	r0, r4
   2df98:	bl	11048 <myhtml_tree_open_elements_find@plt>
   2df9c:	cmp	r0, #0
   2dfa0:	bne	2dfb0 <myhtml_tree_active_formatting_reconstruction@@Base+0x9c>
   2dfa4:	mov	r5, r9
   2dfa8:	cmp	r9, #0
   2dfac:	bne	2df74 <myhtml_tree_active_formatting_reconstruction@@Base+0x60>
   2dfb0:	ldr	r3, [r8, #4]
   2dfb4:	cmp	r5, r3
   2dfb8:	addcc	r6, r7, r5, lsl #2
   2dfbc:	bcs	2dff4 <myhtml_tree_active_formatting_reconstruction@@Base+0xe0>
   2dfc0:	ldr	r0, [r6]
   2dfc4:	bl	10fdc <myhtml_tree_node_clone@plt>
   2dfc8:	mov	r7, r0
   2dfcc:	mov	r1, r0
   2dfd0:	mov	r0, r4
   2dfd4:	bl	1076c <myhtml_tree_node_insert_by_node@plt>
   2dfd8:	str	r7, [r6], #4
   2dfdc:	add	r5, r5, #1
   2dfe0:	ldr	r3, [r8, #4]
   2dfe4:	cmp	r3, r5
   2dfe8:	bhi	2dfc0 <myhtml_tree_active_formatting_reconstruction@@Base+0xac>
   2dfec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2dff0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2dff4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

0002dff8 <myhtml_tree_node_insert_foreign_element@@Base>:
   2dff8:	push	{r4, r5, r6, r7, lr}
   2dffc:	sub	sp, sp, #12
   2e000:	mov	r5, r0
   2e004:	mov	r7, r1
   2e008:	add	r2, sp, #4
   2e00c:	mov	r1, #0
   2e010:	bl	10e80 <myhtml_tree_appropriate_place_inserting@plt>
   2e014:	mov	r6, r0
   2e018:	mov	r0, r5
   2e01c:	bl	ffe0 <myhtml_tree_node_create@plt>
   2e020:	mov	r4, r0
   2e024:	ldr	r3, [r7]
   2e028:	str	r3, [r0, #4]
   2e02c:	str	r7, [r0, #32]
   2e030:	ldr	r3, [r6, #8]
   2e034:	str	r3, [r0, #8]
   2e038:	ldr	r2, [sp, #4]
   2e03c:	mov	r1, r0
   2e040:	mov	r0, r6
   2e044:	bl	10358 <myhtml_tree_node_insert_by_mode@plt>
   2e048:	mov	r1, r4
   2e04c:	mov	r0, r5
   2e050:	bl	10988 <myhtml_tree_open_elements_append@plt>
   2e054:	mov	r0, r4
   2e058:	add	sp, sp, #12
   2e05c:	pop	{r4, r5, r6, r7, pc}

0002e060 <myhtml_tree_node_insert_html_element@@Base>:
   2e060:	push	{r4, r5, r6, r7, lr}
   2e064:	sub	sp, sp, #12
   2e068:	mov	r5, r0
   2e06c:	mov	r6, r1
   2e070:	add	r2, sp, #4
   2e074:	mov	r1, #0
   2e078:	bl	10e80 <myhtml_tree_appropriate_place_inserting@plt>
   2e07c:	mov	r7, r0
   2e080:	mov	r0, r5
   2e084:	bl	ffe0 <myhtml_tree_node_create@plt>
   2e088:	mov	r4, r0
   2e08c:	ldr	r3, [r6]
   2e090:	str	r3, [r0, #4]
   2e094:	str	r6, [r0, #32]
   2e098:	mov	r3, #1
   2e09c:	str	r3, [r0, #8]
   2e0a0:	ldr	r2, [sp, #4]
   2e0a4:	mov	r1, r0
   2e0a8:	mov	r0, r7
   2e0ac:	bl	10358 <myhtml_tree_node_insert_by_mode@plt>
   2e0b0:	mov	r1, r4
   2e0b4:	mov	r0, r5
   2e0b8:	bl	10988 <myhtml_tree_open_elements_append@plt>
   2e0bc:	mov	r0, r4
   2e0c0:	add	sp, sp, #12
   2e0c4:	pop	{r4, r5, r6, r7, pc}

0002e0c8 <myhtml_tree_adoption_agency_algorithm@@Base>:
   2e0c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e0cc:	sub	sp, sp, #68	; 0x44
   2e0d0:	ldr	r3, [r0, #128]	; 0x80
   2e0d4:	ldr	r1, [r3, #4]
   2e0d8:	cmp	r1, #0
   2e0dc:	moveq	fp, #0
   2e0e0:	beq	2e194 <myhtml_tree_adoption_agency_algorithm@@Base+0xcc>
   2e0e4:	mov	r9, r2
   2e0e8:	mov	r5, r0
   2e0ec:	ldr	r2, [r3, #4]
   2e0f0:	ldr	sl, [r3]
   2e0f4:	ldr	r3, [r0, #124]	; 0x7c
   2e0f8:	ldr	r3, [r3]
   2e0fc:	str	r3, [sp, #24]
   2e100:	sub	r3, r2, #1
   2e104:	ldr	r1, [sl, r3, lsl #2]
   2e108:	ldr	r3, [r1, #8]
   2e10c:	cmp	r3, #1
   2e110:	beq	2e1a0 <myhtml_tree_adoption_agency_algorithm@@Base+0xd8>
   2e114:	mov	r3, #8
   2e118:	str	r3, [sp, #32]
   2e11c:	add	r3, sp, #48	; 0x30
   2e120:	str	r3, [sp, #28]
   2e124:	add	r3, sp, #56	; 0x38
   2e128:	str	r3, [sp, #12]
   2e12c:	add	r3, sp, #60	; 0x3c
   2e130:	str	r3, [sp, #16]
   2e134:	mov	r3, #0
   2e138:	str	r3, [sp, #44]	; 0x2c
   2e13c:	ldr	r3, [r5, #124]	; 0x7c
   2e140:	ldr	r4, [r3]
   2e144:	ldr	r6, [r3, #4]
   2e148:	cmp	r6, #0
   2e14c:	beq	2e190 <myhtml_tree_adoption_agency_algorithm@@Base+0xc8>
   2e150:	sub	r3, r6, #-1073741823	; 0xc0000001
   2e154:	add	r4, r4, r3, lsl #2
   2e158:	sub	r6, r6, #1
   2e15c:	mov	r7, r4
   2e160:	ldr	r1, [r4]
   2e164:	mov	r0, r5
   2e168:	bl	10874 <myhtml_tree_active_formatting_is_marker@plt>
   2e16c:	cmp	r0, #0
   2e170:	bne	2e508 <myhtml_tree_adoption_agency_algorithm@@Base+0x440>
   2e174:	sub	r4, r4, #4
   2e178:	ldr	r3, [r7]
   2e17c:	ldr	r3, [r3, #4]
   2e180:	cmp	r9, r3
   2e184:	beq	2e1c8 <myhtml_tree_adoption_agency_algorithm@@Base+0x100>
   2e188:	cmp	r6, #0
   2e18c:	bne	2e158 <myhtml_tree_adoption_agency_algorithm@@Base+0x90>
   2e190:	mov	fp, #1
   2e194:	mov	r0, fp
   2e198:	add	sp, sp, #68	; 0x44
   2e19c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e1a0:	ldr	r3, [r1, #4]
   2e1a4:	cmp	r3, r9
   2e1a8:	bne	2e114 <myhtml_tree_adoption_agency_algorithm@@Base+0x4c>
   2e1ac:	mov	r2, #0
   2e1b0:	bl	10124 <myhtml_tree_active_formatting_find@plt>
   2e1b4:	subs	fp, r0, #0
   2e1b8:	bne	2e114 <myhtml_tree_adoption_agency_algorithm@@Base+0x4c>
   2e1bc:	mov	r0, r5
   2e1c0:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   2e1c4:	b	2e194 <myhtml_tree_adoption_agency_algorithm@@Base+0xcc>
   2e1c8:	mov	fp, r0
   2e1cc:	str	r6, [sp, #44]	; 0x2c
   2e1d0:	ldr	r3, [r7]
   2e1d4:	str	r3, [sp, #8]
   2e1d8:	cmp	r3, #0
   2e1dc:	beq	2e510 <myhtml_tree_adoption_agency_algorithm@@Base+0x448>
   2e1e0:	ldr	r2, [sp, #28]
   2e1e4:	ldr	r1, [sp, #8]
   2e1e8:	mov	r0, r5
   2e1ec:	bl	11048 <myhtml_tree_open_elements_find@plt>
   2e1f0:	cmp	r0, #0
   2e1f4:	beq	2e290 <myhtml_tree_adoption_agency_algorithm@@Base+0x1c8>
   2e1f8:	mov	r1, #8
   2e1fc:	ldr	r0, [sp, #8]
   2e200:	bl	fc50 <myhtml_tree_element_in_scope_by_node@plt>
   2e204:	cmp	r0, #0
   2e208:	beq	2e518 <myhtml_tree_adoption_agency_algorithm@@Base+0x450>
   2e20c:	mov	r0, r5
   2e210:	bl	10628 <myhtml_tree_current_node@plt>
   2e214:	ldr	r4, [sp, #48]	; 0x30
   2e218:	str	r4, [sp, #52]	; 0x34
   2e21c:	ldr	r3, [r5, #128]	; 0x80
   2e220:	ldr	r3, [r3, #4]
   2e224:	cmp	r4, r3
   2e228:	bcs	2e270 <myhtml_tree_adoption_agency_algorithm@@Base+0x1a8>
   2e22c:	ldr	r3, [sl, r4, lsl #2]
   2e230:	ldr	r1, [r3, #4]
   2e234:	ldr	r0, [r5, #28]
   2e238:	bl	10a24 <myhtml_tag_get_by_id@plt>
   2e23c:	ldr	r4, [sp, #52]	; 0x34
   2e240:	ldr	r8, [sl, r4, lsl #2]
   2e244:	ldr	r3, [r8, #8]
   2e248:	add	r3, r3, #4
   2e24c:	ldr	r3, [r0, r3, lsl #2]
   2e250:	tst	r3, #2
   2e254:	bne	2e2a8 <myhtml_tree_adoption_agency_algorithm@@Base+0x1e0>
   2e258:	add	r4, r4, #1
   2e25c:	str	r4, [sp, #52]	; 0x34
   2e260:	ldr	r3, [r5, #128]	; 0x80
   2e264:	ldr	r3, [r3, #4]
   2e268:	cmp	r3, r4
   2e26c:	bhi	2e22c <myhtml_tree_adoption_agency_algorithm@@Base+0x164>
   2e270:	mov	r0, r5
   2e274:	bl	10628 <myhtml_tree_current_node@plt>
   2e278:	ldr	r3, [sp, #8]
   2e27c:	cmp	r3, r0
   2e280:	beq	2e2dc <myhtml_tree_adoption_agency_algorithm@@Base+0x214>
   2e284:	mov	r0, r5
   2e288:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   2e28c:	b	2e270 <myhtml_tree_adoption_agency_algorithm@@Base+0x1a8>
   2e290:	mov	r4, r0
   2e294:	ldr	r1, [sp, #8]
   2e298:	mov	r0, r5
   2e29c:	bl	108a4 <myhtml_tree_active_formatting_remove@plt>
   2e2a0:	mov	fp, r4
   2e2a4:	b	2e194 <myhtml_tree_adoption_agency_algorithm@@Base+0xcc>
   2e2a8:	cmp	r8, #0
   2e2ac:	beq	2e270 <myhtml_tree_adoption_agency_algorithm@@Base+0x1a8>
   2e2b0:	ldr	r3, [sp, #48]	; 0x30
   2e2b4:	sub	r3, r3, #-1073741823	; 0xc0000001
   2e2b8:	ldr	r3, [sl, r3, lsl #2]
   2e2bc:	str	r3, [sp, #36]	; 0x24
   2e2c0:	ldr	r3, [sp, #44]	; 0x2c
   2e2c4:	add	r3, r3, #1
   2e2c8:	str	r3, [sp, #20]
   2e2cc:	str	r8, [sp, #4]
   2e2d0:	mov	r6, r8
   2e2d4:	mov	r7, #0
   2e2d8:	b	2e378 <myhtml_tree_adoption_agency_algorithm@@Base+0x2b0>
   2e2dc:	mov	r0, r5
   2e2e0:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   2e2e4:	ldr	r1, [sp, #8]
   2e2e8:	mov	r0, r5
   2e2ec:	bl	108a4 <myhtml_tree_active_formatting_remove@plt>
   2e2f0:	b	2e194 <myhtml_tree_adoption_agency_algorithm@@Base+0xcc>
   2e2f4:	ldr	r1, [sp, #60]	; 0x3c
   2e2f8:	mov	r0, r5
   2e2fc:	bl	10844 <myhtml_tree_active_formatting_remove_by_index@plt>
   2e300:	ldr	r3, [sp, #60]	; 0x3c
   2e304:	ldr	r2, [sp, #20]
   2e308:	cmp	r2, r3
   2e30c:	subhi	r3, r2, #1
   2e310:	strhi	r3, [sp, #20]
   2e314:	b	2e378 <myhtml_tree_adoption_agency_algorithm@@Base+0x2b0>
   2e318:	mov	r0, r6
   2e31c:	bl	10fdc <myhtml_tree_node_clone@plt>
   2e320:	mov	r6, r0
   2e324:	mov	r3, #1
   2e328:	str	r3, [r0, #8]
   2e32c:	ldr	r3, [sp, #60]	; 0x3c
   2e330:	ldr	r2, [sp, #24]
   2e334:	str	r0, [r2, r3, lsl #2]
   2e338:	ldr	r3, [sp, #56]	; 0x38
   2e33c:	str	r0, [sl, r3, lsl #2]
   2e340:	ldr	r3, [sp, #4]
   2e344:	cmp	r3, r8
   2e348:	ldreq	r3, [sp, #60]	; 0x3c
   2e34c:	addeq	r3, r3, #1
   2e350:	streq	r3, [sp, #20]
   2e354:	ldr	r0, [sp, #4]
   2e358:	ldr	r3, [r0, #24]
   2e35c:	cmp	r3, #0
   2e360:	beq	2e368 <myhtml_tree_adoption_agency_algorithm@@Base+0x2a0>
   2e364:	bl	10df0 <myhtml_tree_node_remove@plt>
   2e368:	ldr	r1, [sp, #4]
   2e36c:	mov	r0, r6
   2e370:	bl	106b8 <myhtml_tree_node_add_child@plt>
   2e374:	str	r6, [sp, #4]
   2e378:	add	r7, r7, #1
   2e37c:	ldr	r2, [sp, #12]
   2e380:	mov	r1, r6
   2e384:	mov	r0, r5
   2e388:	bl	11048 <myhtml_tree_open_elements_find@plt>
   2e38c:	cmp	r0, #0
   2e390:	streq	r4, [sp, #56]	; 0x38
   2e394:	ldr	r4, [sp, #56]	; 0x38
   2e398:	cmp	r4, #0
   2e39c:	beq	2e194 <myhtml_tree_adoption_agency_algorithm@@Base+0xcc>
   2e3a0:	sub	r4, r4, #1
   2e3a4:	str	r4, [sp, #56]	; 0x38
   2e3a8:	ldr	r6, [sl, r4, lsl #2]
   2e3ac:	ldr	r3, [sp, #8]
   2e3b0:	cmp	r6, r3
   2e3b4:	beq	2e3f4 <myhtml_tree_adoption_agency_algorithm@@Base+0x32c>
   2e3b8:	ldr	r2, [sp, #16]
   2e3bc:	mov	r1, r6
   2e3c0:	mov	r0, r5
   2e3c4:	bl	10124 <myhtml_tree_active_formatting_find@plt>
   2e3c8:	cmp	r7, #3
   2e3cc:	movle	r3, #0
   2e3d0:	andgt	r3, r0, #1
   2e3d4:	cmp	r3, #0
   2e3d8:	bne	2e2f4 <myhtml_tree_adoption_agency_algorithm@@Base+0x22c>
   2e3dc:	cmp	r0, #0
   2e3e0:	bne	2e318 <myhtml_tree_adoption_agency_algorithm@@Base+0x250>
   2e3e4:	mov	r1, r6
   2e3e8:	mov	r0, r5
   2e3ec:	bl	10238 <myhtml_tree_open_elements_remove@plt>
   2e3f0:	b	2e378 <myhtml_tree_adoption_agency_algorithm@@Base+0x2b0>
   2e3f4:	ldr	r0, [sp, #4]
   2e3f8:	ldr	r3, [r0, #24]
   2e3fc:	cmp	r3, #0
   2e400:	beq	2e408 <myhtml_tree_adoption_agency_algorithm@@Base+0x340>
   2e404:	bl	10df0 <myhtml_tree_node_remove@plt>
   2e408:	ldr	r2, [sp, #16]
   2e40c:	ldr	r1, [sp, #36]	; 0x24
   2e410:	mov	r0, r5
   2e414:	bl	10e80 <myhtml_tree_appropriate_place_inserting@plt>
   2e418:	ldr	r2, [sp, #60]	; 0x3c
   2e41c:	ldr	r1, [sp, #4]
   2e420:	bl	10358 <myhtml_tree_node_insert_by_mode@plt>
   2e424:	mov	r0, r6
   2e428:	bl	10fdc <myhtml_tree_node_clone@plt>
   2e42c:	str	r0, [sp, #4]
   2e430:	mov	r2, #1
   2e434:	str	r2, [r0, #8]
   2e438:	ldr	r4, [r8, #20]
   2e43c:	cmp	r4, #0
   2e440:	beq	2e468 <myhtml_tree_adoption_agency_algorithm@@Base+0x3a0>
   2e444:	ldr	r7, [r4, #16]
   2e448:	mov	r0, r4
   2e44c:	bl	10df0 <myhtml_tree_node_remove@plt>
   2e450:	mov	r1, r4
   2e454:	ldr	r0, [sp, #4]
   2e458:	bl	106b8 <myhtml_tree_node_add_child@plt>
   2e45c:	mov	r4, r7
   2e460:	cmp	r7, #0
   2e464:	bne	2e444 <myhtml_tree_adoption_agency_algorithm@@Base+0x37c>
   2e468:	ldr	r1, [sp, #4]
   2e46c:	mov	r0, r8
   2e470:	bl	106b8 <myhtml_tree_node_add_child@plt>
   2e474:	add	r2, sp, #44	; 0x2c
   2e478:	mov	r1, r6
   2e47c:	mov	r0, r5
   2e480:	bl	10124 <myhtml_tree_active_formatting_find@plt>
   2e484:	cmp	r0, #0
   2e488:	beq	2e520 <myhtml_tree_adoption_agency_algorithm@@Base+0x458>
   2e48c:	ldr	r1, [sp, #44]	; 0x2c
   2e490:	ldr	r3, [sp, #20]
   2e494:	cmp	r3, r1
   2e498:	subhi	r3, r3, #1
   2e49c:	strhi	r3, [sp, #20]
   2e4a0:	mov	r0, r5
   2e4a4:	bl	10844 <myhtml_tree_active_formatting_remove_by_index@plt>
   2e4a8:	ldr	r2, [sp, #20]
   2e4ac:	ldr	r1, [sp, #4]
   2e4b0:	ldr	r0, [r5, #124]	; 0x7c
   2e4b4:	bl	102bc <myhtml_tree_list_insert_by_index@plt>
   2e4b8:	mov	r1, r6
   2e4bc:	mov	r0, r5
   2e4c0:	bl	10238 <myhtml_tree_open_elements_remove@plt>
   2e4c4:	add	r2, sp, #52	; 0x34
   2e4c8:	mov	r1, r8
   2e4cc:	mov	r0, r5
   2e4d0:	bl	11048 <myhtml_tree_open_elements_find@plt>
   2e4d4:	cmp	r0, #0
   2e4d8:	bne	2e4f0 <myhtml_tree_adoption_agency_algorithm@@Base+0x428>
   2e4dc:	ldr	r3, [sp, #32]
   2e4e0:	subs	r3, r3, #1
   2e4e4:	str	r3, [sp, #32]
   2e4e8:	bne	2e134 <myhtml_tree_adoption_agency_algorithm@@Base+0x6c>
   2e4ec:	b	2e194 <myhtml_tree_adoption_agency_algorithm@@Base+0xcc>
   2e4f0:	ldr	r2, [sp, #52]	; 0x34
   2e4f4:	add	r2, r2, #1
   2e4f8:	ldr	r1, [sp, #4]
   2e4fc:	ldr	r0, [r5, #128]	; 0x80
   2e500:	bl	102bc <myhtml_tree_list_insert_by_index@plt>
   2e504:	b	2e4dc <myhtml_tree_adoption_agency_algorithm@@Base+0x414>
   2e508:	mov	fp, #0
   2e50c:	b	2e194 <myhtml_tree_adoption_agency_algorithm@@Base+0xcc>
   2e510:	mov	fp, #1
   2e514:	b	2e194 <myhtml_tree_adoption_agency_algorithm@@Base+0xcc>
   2e518:	mov	fp, r0
   2e51c:	b	2e194 <myhtml_tree_adoption_agency_algorithm@@Base+0xcc>
   2e520:	mov	fp, r0
   2e524:	b	2e194 <myhtml_tree_adoption_agency_algorithm@@Base+0xcc>

0002e528 <myhtml_tree_appropriate_place_inserting_in_tree@@Base>:
   2e528:	push	{r4, r5, r6, r7, r8, lr}
   2e52c:	mov	r4, r0
   2e530:	mov	r5, r1
   2e534:	mov	r3, #1
   2e538:	str	r3, [r1]
   2e53c:	ldr	r3, [r0, #40]	; 0x28
   2e540:	ldrb	r3, [r3, #188]	; 0xbc
   2e544:	cmp	r3, #0
   2e548:	moveq	r3, #0
   2e54c:	streq	r3, [r1]
   2e550:	beq	2e560 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x38>
   2e554:	ldr	r3, [r0, #8]
   2e558:	cmp	r3, #1
   2e55c:	beq	2e568 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x40>
   2e560:	mov	r0, r4
   2e564:	pop	{r4, r5, r6, r7, r8, pc}
   2e568:	ldr	r3, [r0, #4]
   2e56c:	sub	r3, r3, #125	; 0x7d
   2e570:	cmp	r3, #10
   2e574:	addls	pc, pc, r3, lsl #2
   2e578:	b	2e62c <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x104>
   2e57c:	b	2e5a8 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x80>
   2e580:	b	2e5a8 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x80>
   2e584:	b	2e62c <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x104>
   2e588:	b	2e62c <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x104>
   2e58c:	b	2e62c <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x104>
   2e590:	b	2e5a8 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x80>
   2e594:	b	2e62c <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x104>
   2e598:	b	2e5a8 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x80>
   2e59c:	b	2e62c <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x104>
   2e5a0:	b	2e62c <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x104>
   2e5a4:	b	2e5a8 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x80>
   2e5a8:	mov	r1, #128	; 0x80
   2e5ac:	bl	1061c <myhtml_tree_node_find_parent_by_tag_id@plt>
   2e5b0:	mov	r7, r0
   2e5b4:	mov	r1, #125	; 0x7d
   2e5b8:	mov	r0, r4
   2e5bc:	bl	1061c <myhtml_tree_node_find_parent_by_tag_id@plt>
   2e5c0:	mov	r6, r0
   2e5c4:	cmp	r7, #0
   2e5c8:	beq	2e5f0 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xc8>
   2e5cc:	mov	r1, #125	; 0x7d
   2e5d0:	mov	r0, r7
   2e5d4:	bl	1061c <myhtml_tree_node_find_parent_by_tag_id@plt>
   2e5d8:	subs	r0, r6, r0
   2e5dc:	movne	r0, #1
   2e5e0:	cmp	r6, #0
   2e5e4:	orreq	r0, r0, #1
   2e5e8:	cmp	r0, #0
   2e5ec:	bne	2e61c <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xf4>
   2e5f0:	cmp	r6, #0
   2e5f4:	beq	2e560 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x38>
   2e5f8:	ldr	r3, [r6, #24]
   2e5fc:	cmp	r3, #0
   2e600:	beq	2e560 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x38>
   2e604:	ldr	r4, [r6, #12]
   2e608:	cmp	r4, #0
   2e60c:	moveq	r4, r6
   2e610:	movne	r3, #2
   2e614:	strne	r3, [r5]
   2e618:	b	2e560 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x38>
   2e61c:	mov	r3, #0
   2e620:	str	r3, [r5]
   2e624:	mov	r4, r7
   2e628:	b	2e560 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x38>
   2e62c:	mov	r3, #0
   2e630:	str	r3, [r1]
   2e634:	b	2e560 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x38>

0002e638 <myhtml_tree_template_insertion_init@@Base>:
   2e638:	push	{r4, r5, r6, lr}
   2e63c:	mov	r5, r0
   2e640:	mov	r0, #12
   2e644:	bl	10c94 <mycore_malloc@plt>
   2e648:	mov	r4, r0
   2e64c:	mov	r3, #0
   2e650:	str	r3, [r0, #4]
   2e654:	mov	r3, #1024	; 0x400
   2e658:	str	r3, [r0, #8]
   2e65c:	mov	r0, #4096	; 0x1000
   2e660:	bl	10c94 <mycore_malloc@plt>
   2e664:	str	r0, [r4]
   2e668:	str	r4, [r5, #140]	; 0x8c
   2e66c:	mov	r0, r4
   2e670:	pop	{r4, r5, r6, pc}

0002e674 <myhtml_tree_template_insertion_clean@@Base>:
   2e674:	ldr	r3, [r0, #140]	; 0x8c
   2e678:	mov	r2, #0
   2e67c:	str	r2, [r3, #4]
   2e680:	bx	lr

0002e684 <myhtml_tree_template_insertion_destroy@@Base>:
   2e684:	ldr	r3, [r0, #140]	; 0x8c
   2e688:	cmp	r3, #0
   2e68c:	beq	2e6c4 <myhtml_tree_template_insertion_destroy@@Base+0x40>
   2e690:	push	{r4, lr}
   2e694:	mov	r4, r0
   2e698:	ldr	r0, [r3]
   2e69c:	cmp	r0, #0
   2e6a0:	beq	2e6b4 <myhtml_tree_template_insertion_destroy@@Base+0x30>
   2e6a4:	bl	10dcc <mycore_free@plt>
   2e6a8:	ldr	r3, [r4, #140]	; 0x8c
   2e6ac:	cmp	r3, #0
   2e6b0:	beq	2e6bc <myhtml_tree_template_insertion_destroy@@Base+0x38>
   2e6b4:	mov	r0, r3
   2e6b8:	bl	10dcc <mycore_free@plt>
   2e6bc:	mov	r0, #0
   2e6c0:	pop	{r4, pc}
   2e6c4:	mov	r0, #0
   2e6c8:	bx	lr

0002e6cc <myhtml_tree_template_insertion_append@@Base>:
   2e6cc:	push	{r4, r5, r6, lr}
   2e6d0:	mov	r5, r1
   2e6d4:	ldr	r4, [r0, #140]	; 0x8c
   2e6d8:	ldr	r1, [r4, #8]
   2e6dc:	ldr	r3, [r4, #4]
   2e6e0:	cmp	r3, r1
   2e6e4:	bcs	2e704 <myhtml_tree_template_insertion_append@@Base+0x38>
   2e6e8:	ldr	r2, [r4, #4]
   2e6ec:	ldr	r3, [r4]
   2e6f0:	str	r5, [r3, r2, lsl #2]
   2e6f4:	ldr	r3, [r4, #4]
   2e6f8:	add	r3, r3, #1
   2e6fc:	str	r3, [r4, #4]
   2e700:	pop	{r4, r5, r6, pc}
   2e704:	lsl	r3, r1, #1
   2e708:	str	r3, [r4, #8]
   2e70c:	lsl	r1, r1, #3
   2e710:	ldr	r0, [r4]
   2e714:	bl	fbd8 <mycore_realloc@plt>
   2e718:	cmp	r0, #0
   2e71c:	strne	r0, [r4]
   2e720:	b	2e6e8 <myhtml_tree_template_insertion_append@@Base+0x1c>

0002e724 <myhtml_tree_template_insertion_pop@@Base>:
   2e724:	ldr	r2, [r0, #140]	; 0x8c
   2e728:	ldr	r3, [r2, #4]
   2e72c:	cmp	r3, #0
   2e730:	subne	r3, r3, #1
   2e734:	strne	r3, [r2, #4]
   2e738:	bx	lr

0002e73c <myhtml_tree_template_insertion_length@@Base>:
   2e73c:	ldr	r3, [r0, #140]	; 0x8c
   2e740:	ldr	r0, [r3, #4]
   2e744:	bx	lr

0002e748 <myhtml_tree_token_list_init@@Base>:
   2e748:	push	{r4, lr}
   2e74c:	mov	r0, #12
   2e750:	bl	10c94 <mycore_malloc@plt>
   2e754:	mov	r4, r0
   2e758:	mov	r3, #0
   2e75c:	str	r3, [r0, #4]
   2e760:	mov	r3, #4096	; 0x1000
   2e764:	str	r3, [r0, #8]
   2e768:	mov	r0, #16384	; 0x4000
   2e76c:	bl	10c94 <mycore_malloc@plt>
   2e770:	str	r0, [r4]
   2e774:	mov	r0, r4
   2e778:	pop	{r4, pc}

0002e77c <myhtml_tree_token_list_clean@@Base>:
   2e77c:	mov	r3, #0
   2e780:	str	r3, [r0, #4]
   2e784:	bx	lr

0002e788 <myhtml_tree_clean@@Base>:
   2e788:	push	{r4, r5, r6, lr}
   2e78c:	mov	r4, r0
   2e790:	ldr	r6, [r0]
   2e794:	ldr	r3, [r6, #20]
   2e798:	cmp	r3, #0
   2e79c:	beq	2e7c4 <myhtml_tree_clean@@Base+0x3c>
   2e7a0:	mov	r5, #0
   2e7a4:	ldr	r3, [r4, #144]	; 0x90
   2e7a8:	ldr	r1, [r3, r5, lsl #2]
   2e7ac:	ldr	r0, [r4, #4]
   2e7b0:	bl	106e8 <mchar_async_node_clean@plt>
   2e7b4:	add	r5, r5, #1
   2e7b8:	ldr	r3, [r6, #20]
   2e7bc:	cmp	r3, r5
   2e7c0:	bhi	2e7a4 <myhtml_tree_clean@@Base+0x1c>
   2e7c4:	ldr	r1, [r4, #48]	; 0x30
   2e7c8:	ldr	r0, [r4, #12]
   2e7cc:	bl	10880 <mcobject_async_node_clean@plt>
   2e7d0:	ldr	r3, [r4, #8]
   2e7d4:	ldr	r1, [r4, #40]	; 0x28
   2e7d8:	ldr	r0, [r3, #4]
   2e7dc:	bl	10880 <mcobject_async_node_clean@plt>
   2e7e0:	ldr	r3, [r4, #8]
   2e7e4:	ldr	r1, [r4, #44]	; 0x2c
   2e7e8:	ldr	r0, [r3, #8]
   2e7ec:	bl	10880 <mcobject_async_node_clean@plt>
   2e7f0:	ldr	r0, [r4, #20]
   2e7f4:	bl	109a0 <mythread_queue_list_entry_clean@plt>
   2e7f8:	ldr	r3, [r4]
   2e7fc:	ldr	r1, [r4, #20]
   2e800:	ldr	r0, [r3, #4]
   2e804:	bl	10d24 <mythread_queue_list_entry_make_batch@plt>
   2e808:	ldr	r3, [r4]
   2e80c:	ldr	r1, [r4, #20]
   2e810:	ldr	r0, [r3]
   2e814:	bl	10ee0 <mythread_queue_list_entry_make_stream@plt>
   2e818:	ldr	r0, [r4, #8]
   2e81c:	bl	105bc <myhtml_token_clean@plt>
   2e820:	mov	r0, r4
   2e824:	bl	ffe0 <myhtml_tree_node_create@plt>
   2e828:	mov	r0, r4
   2e82c:	bl	ffe0 <myhtml_tree_node_create@plt>
   2e830:	str	r0, [r4, #84]	; 0x54
   2e834:	mov	r3, #0
   2e838:	str	r3, [r4, #88]	; 0x58
   2e83c:	strb	r3, [r4, #108]	; 0x6c
   2e840:	str	r3, [r4, #112]	; 0x70
   2e844:	str	r3, [r4, #116]	; 0x74
   2e848:	str	r3, [r4, #120]	; 0x78
   2e84c:	str	r3, [r4, #96]	; 0x60
   2e850:	str	r3, [r4, #100]	; 0x64
   2e854:	str	r3, [r4, #92]	; 0x5c
   2e858:	str	r3, [r4, #104]	; 0x68
   2e85c:	str	r3, [r4, #160]	; 0xa0
   2e860:	str	r3, [r4, #164]	; 0xa4
   2e864:	str	r3, [r4, #168]	; 0xa8
   2e868:	str	r3, [r4, #172]	; 0xac
   2e86c:	str	r3, [r4, #176]	; 0xb0
   2e870:	str	r3, [r4, #60]	; 0x3c
   2e874:	mov	r2, #2
   2e878:	str	r2, [r4, #180]	; 0xb4
   2e87c:	strb	r3, [r4, #188]	; 0xbc
   2e880:	str	r3, [r4, #156]	; 0x9c
   2e884:	str	r3, [r4, #76]	; 0x4c
   2e888:	str	r3, [r4, #80]	; 0x50
   2e88c:	str	r3, [r4, #192]	; 0xc0
   2e890:	str	r3, [r4, #68]	; 0x44
   2e894:	str	r3, [r4, #152]	; 0x98
   2e898:	str	r3, [r4, #196]	; 0xc4
   2e89c:	str	r3, [r4, #200]	; 0xc8
   2e8a0:	str	r3, [r4, #204]	; 0xcc
   2e8a4:	ldr	r0, [r4, #148]	; 0x94
   2e8a8:	bl	1046c <myhtml_stream_buffer_clean@plt>
   2e8ac:	mov	r0, r4
   2e8b0:	bl	10820 <myhtml_tree_active_formatting_clean@plt>
   2e8b4:	mov	r0, r4
   2e8b8:	bl	10e20 <myhtml_tree_open_elements_clean@plt>
   2e8bc:	ldr	r0, [r4, #132]	; 0x84
   2e8c0:	bl	1028c <myhtml_tree_list_clean@plt>
   2e8c4:	ldr	r0, [r4, #136]	; 0x88
   2e8c8:	bl	10fe8 <myhtml_tree_token_list_clean@plt>
   2e8cc:	mov	r0, r4
   2e8d0:	bl	10424 <myhtml_tree_template_insertion_clean@plt>
   2e8d4:	ldr	r0, [r4, #72]	; 0x48
   2e8d8:	bl	10f70 <mcobject_clean@plt>
   2e8dc:	ldr	r0, [r4, #28]
   2e8e0:	bl	11078 <myhtml_tag_clean@plt>
   2e8e4:	ldr	r0, [r4, #24]
   2e8e8:	bl	fd64 <mythread_queue_clean@plt>
   2e8ec:	ldr	r0, [r4, #8]
   2e8f0:	ldr	r1, [r0, #16]
   2e8f4:	bl	10904 <myhtml_token_attr_create@plt>
   2e8f8:	str	r0, [r4, #56]	; 0x38
   2e8fc:	pop	{r4, r5, r6, pc}

0002e900 <myhtml_tree_init@@Base>:
   2e900:	push	{r4, r5, r6, r7, r8, lr}
   2e904:	sub	sp, sp, #8
   2e908:	mov	r4, r0
   2e90c:	mov	r5, r1
   2e910:	mov	r3, #0
   2e914:	str	r3, [sp, #4]
   2e918:	str	r1, [r0]
   2e91c:	mov	r1, #512	; 0x200
   2e920:	bl	11000 <myhtml_token_create@plt>
   2e924:	str	r0, [r4, #8]
   2e928:	cmp	r0, #0
   2e92c:	beq	2eb7c <myhtml_tree_init@@Base+0x27c>
   2e930:	mov	r3, #0
   2e934:	str	r3, [r4, #208]	; 0xd0
   2e938:	str	r3, [r4, #148]	; 0x94
   2e93c:	str	r3, [r4, #184]	; 0xb8
   2e940:	str	r3, [r4, #36]	; 0x24
   2e944:	str	r3, [r4, #220]	; 0xdc
   2e948:	str	r3, [r4, #224]	; 0xe0
   2e94c:	str	r3, [r4, #228]	; 0xe4
   2e950:	str	r3, [r4, #232]	; 0xe8
   2e954:	str	r3, [r4, #236]	; 0xec
   2e958:	str	r3, [r4, #240]	; 0xf0
   2e95c:	str	r3, [r4, #244]	; 0xf4
   2e960:	str	r3, [r4, #248]	; 0xf8
   2e964:	ldr	r0, [sp, #4]
   2e968:	cmp	r0, r3
   2e96c:	beq	2e978 <myhtml_tree_init@@Base+0x78>
   2e970:	add	sp, sp, #8
   2e974:	pop	{r4, r5, r6, r7, r8, pc}
   2e978:	bl	10a84 <mythread_queue_create@plt>
   2e97c:	str	r0, [r4, #24]
   2e980:	cmp	r0, #0
   2e984:	moveq	r0, #2
   2e988:	beq	2e970 <myhtml_tree_init@@Base+0x70>
   2e98c:	ldr	r1, [pc, #496]	; 2eb84 <myhtml_tree_init@@Base+0x284>
   2e990:	bl	106ac <mythread_queue_init@plt>
   2e994:	str	r0, [sp, #4]
   2e998:	cmp	r0, #0
   2e99c:	bne	2e970 <myhtml_tree_init@@Base+0x70>
   2e9a0:	bl	1001c <mcobject_create@plt>
   2e9a4:	str	r0, [r4, #72]	; 0x48
   2e9a8:	cmp	r0, #0
   2e9ac:	ldreq	r0, [pc, #468]	; 2eb88 <myhtml_tree_init@@Base+0x288>
   2e9b0:	beq	2e970 <myhtml_tree_init@@Base+0x70>
   2e9b4:	mov	r2, #24
   2e9b8:	mov	r1, #256	; 0x100
   2e9bc:	bl	10778 <mcobject_init@plt>
   2e9c0:	str	r0, [sp, #4]
   2e9c4:	cmp	r0, #0
   2e9c8:	bne	2e970 <myhtml_tree_init@@Base+0x70>
   2e9cc:	bl	fd58 <mcobject_async_create@plt>
   2e9d0:	str	r0, [r4, #12]
   2e9d4:	cmp	r0, #0
   2e9d8:	ldreq	r0, [pc, #428]	; 2eb8c <myhtml_tree_init@@Base+0x28c>
   2e9dc:	beq	2e970 <myhtml_tree_init@@Base+0x70>
   2e9e0:	mov	r3, #44	; 0x2c
   2e9e4:	mov	r2, #1024	; 0x400
   2e9e8:	mov	r1, #128	; 0x80
   2e9ec:	bl	fc80 <mcobject_async_init@plt>
   2e9f0:	str	r0, [sp]
   2e9f4:	cmp	r0, #0
   2e9f8:	ldrne	r0, [pc, #400]	; 2eb90 <myhtml_tree_init@@Base+0x290>
   2e9fc:	bne	2e970 <myhtml_tree_init@@Base+0x70>
   2ea00:	bl	10160 <mchar_async_create@plt>
   2ea04:	str	r0, [r4, #4]
   2ea08:	mov	r0, r4
   2ea0c:	bl	10ac0 <myhtml_tree_active_formatting_init@plt>
   2ea10:	str	r0, [r4, #124]	; 0x7c
   2ea14:	mov	r0, r4
   2ea18:	bl	10bb0 <myhtml_tree_open_elements_init@plt>
   2ea1c:	str	r0, [r4, #128]	; 0x80
   2ea20:	bl	1085c <myhtml_tree_list_init@plt>
   2ea24:	str	r0, [r4, #132]	; 0x84
   2ea28:	bl	109b8 <myhtml_tree_token_list_init@plt>
   2ea2c:	str	r0, [r4, #136]	; 0x88
   2ea30:	mov	r0, r4
   2ea34:	bl	10cdc <myhtml_tree_template_insertion_init@plt>
   2ea38:	str	r0, [r4, #140]	; 0x8c
   2ea3c:	ldr	r0, [r4, #4]
   2ea40:	cmp	r0, #0
   2ea44:	moveq	r0, #2
   2ea48:	beq	2e970 <myhtml_tree_init@@Base+0x70>
   2ea4c:	mov	r2, #20480	; 0x5000
   2ea50:	mov	r1, #128	; 0x80
   2ea54:	bl	104a8 <mchar_async_init@plt>
   2ea58:	str	r0, [sp, #4]
   2ea5c:	cmp	r0, #0
   2ea60:	bne	2e970 <myhtml_tree_init@@Base+0x70>
   2ea64:	mov	r1, sp
   2ea68:	ldr	r0, [r4, #12]
   2ea6c:	bl	10a90 <mcobject_async_node_add@plt>
   2ea70:	str	r0, [r4, #48]	; 0x30
   2ea74:	ldr	r3, [sp]
   2ea78:	cmp	r3, #0
   2ea7c:	ldrne	r0, [pc, #272]	; 2eb94 <myhtml_tree_init@@Base+0x294>
   2ea80:	bne	2e970 <myhtml_tree_init@@Base+0x70>
   2ea84:	ldr	r3, [r4, #8]
   2ea88:	mov	r1, sp
   2ea8c:	ldr	r0, [r3, #4]
   2ea90:	bl	10a90 <mcobject_async_node_add@plt>
   2ea94:	str	r0, [r4, #40]	; 0x28
   2ea98:	ldr	r3, [sp]
   2ea9c:	cmp	r3, #0
   2eaa0:	ldrne	r0, [pc, #236]	; 2eb94 <myhtml_tree_init@@Base+0x294>
   2eaa4:	bne	2e970 <myhtml_tree_init@@Base+0x70>
   2eaa8:	ldr	r3, [r4, #8]
   2eaac:	mov	r1, sp
   2eab0:	ldr	r0, [r3, #8]
   2eab4:	bl	10a90 <mcobject_async_node_add@plt>
   2eab8:	str	r0, [r4, #44]	; 0x2c
   2eabc:	ldr	r3, [sp]
   2eac0:	cmp	r3, #0
   2eac4:	ldrne	r0, [pc, #200]	; 2eb94 <myhtml_tree_init@@Base+0x294>
   2eac8:	bne	2e970 <myhtml_tree_init@@Base+0x70>
   2eacc:	mov	r1, #4
   2ead0:	ldr	r0, [r5, #20]
   2ead4:	bl	ff14 <mycore_calloc@plt>
   2ead8:	str	r0, [r4, #144]	; 0x90
   2eadc:	cmp	r0, #0
   2eae0:	moveq	r0, #2
   2eae4:	beq	2e970 <myhtml_tree_init@@Base+0x70>
   2eae8:	mov	r6, #0
   2eaec:	add	r7, sp, #4
   2eaf0:	ldr	r3, [r5, #20]
   2eaf4:	cmp	r6, r3
   2eaf8:	bcc	2eb54 <myhtml_tree_init@@Base+0x254>
   2eafc:	ldr	r3, [r4, #144]	; 0x90
   2eb00:	ldr	r3, [r3]
   2eb04:	str	r3, [r4, #52]	; 0x34
   2eb08:	bl	fd94 <mcsync_create@plt>
   2eb0c:	str	r0, [r4, #16]
   2eb10:	cmp	r0, #0
   2eb14:	moveq	r0, #2
   2eb18:	beq	2e970 <myhtml_tree_init@@Base+0x70>
   2eb1c:	bl	10868 <mcsync_init@plt>
   2eb20:	cmp	r0, #0
   2eb24:	movne	r0, #2
   2eb28:	bne	2e970 <myhtml_tree_init@@Base+0x70>
   2eb2c:	bl	10d30 <myhtml_tag_create@plt>
   2eb30:	mov	r1, r0
   2eb34:	str	r0, [r4, #28]
   2eb38:	mov	r0, r4
   2eb3c:	bl	10b5c <myhtml_tag_init@plt>
   2eb40:	str	r0, [sp, #4]
   2eb44:	mov	r0, r4
   2eb48:	bl	106d0 <myhtml_tree_clean@plt>
   2eb4c:	ldr	r0, [sp, #4]
   2eb50:	b	2e970 <myhtml_tree_init@@Base+0x70>
   2eb54:	ldr	r8, [r4, #144]	; 0x90
   2eb58:	mov	r1, r7
   2eb5c:	ldr	r0, [r4, #4]
   2eb60:	bl	10298 <mchar_async_node_add@plt>
   2eb64:	str	r0, [r8, r6, lsl #2]
   2eb68:	ldr	r0, [sp, #4]
   2eb6c:	cmp	r0, #0
   2eb70:	bne	2e970 <myhtml_tree_init@@Base+0x70>
   2eb74:	add	r6, r6, #1
   2eb78:	b	2eaf0 <myhtml_tree_init@@Base+0x1f0>
   2eb7c:	ldr	r0, [pc, #20]	; 2eb98 <myhtml_tree_init@@Base+0x298>
   2eb80:	b	2e970 <myhtml_tree_init@@Base+0x70>
   2eb84:	ldrdeq	r2, [r0], -lr
   2eb88:	strdeq	r9, [r0], -r8
   2eb8c:	strdeq	r9, [r0], -r5
   2eb90:	strdeq	r9, [r0], -r6
   2eb94:	strdeq	r9, [r0], -r7
   2eb98:	andeq	r9, r0, ip, lsr #2

0002eb9c <myhtml_tree_clean_all@@Base>:
   2eb9c:	push	{r4, lr}
   2eba0:	mov	r4, r0
   2eba4:	ldr	r0, [r0, #12]
   2eba8:	bl	11054 <mcobject_async_clean@plt>
   2ebac:	ldr	r0, [r4, #8]
   2ebb0:	bl	105bc <myhtml_token_clean@plt>
   2ebb4:	ldr	r0, [r4, #4]
   2ebb8:	bl	10bc8 <mchar_async_clean@plt>
   2ebbc:	mov	r0, r4
   2ebc0:	bl	ffe0 <myhtml_tree_node_create@plt>
   2ebc4:	mov	r0, r4
   2ebc8:	bl	ffe0 <myhtml_tree_node_create@plt>
   2ebcc:	str	r0, [r4, #84]	; 0x54
   2ebd0:	mov	r3, #0
   2ebd4:	str	r3, [r4, #88]	; 0x58
   2ebd8:	strb	r3, [r4, #108]	; 0x6c
   2ebdc:	str	r3, [r4, #112]	; 0x70
   2ebe0:	str	r3, [r4, #116]	; 0x74
   2ebe4:	str	r3, [r4, #120]	; 0x78
   2ebe8:	str	r3, [r4, #96]	; 0x60
   2ebec:	str	r3, [r4, #100]	; 0x64
   2ebf0:	str	r3, [r4, #92]	; 0x5c
   2ebf4:	str	r3, [r4, #104]	; 0x68
   2ebf8:	str	r3, [r4, #160]	; 0xa0
   2ebfc:	str	r3, [r4, #164]	; 0xa4
   2ec00:	str	r3, [r4, #168]	; 0xa8
   2ec04:	str	r3, [r4, #172]	; 0xac
   2ec08:	str	r3, [r4, #176]	; 0xb0
   2ec0c:	str	r3, [r4, #60]	; 0x3c
   2ec10:	mov	r2, #2
   2ec14:	str	r2, [r4, #180]	; 0xb4
   2ec18:	strb	r3, [r4, #188]	; 0xbc
   2ec1c:	str	r3, [r4, #156]	; 0x9c
   2ec20:	str	r3, [r4, #76]	; 0x4c
   2ec24:	str	r3, [r4, #80]	; 0x50
   2ec28:	str	r3, [r4, #192]	; 0xc0
   2ec2c:	str	r3, [r4, #68]	; 0x44
   2ec30:	str	r3, [r4, #152]	; 0x98
   2ec34:	str	r3, [r4, #196]	; 0xc4
   2ec38:	str	r3, [r4, #200]	; 0xc8
   2ec3c:	str	r3, [r4, #204]	; 0xcc
   2ec40:	ldr	r0, [r4, #148]	; 0x94
   2ec44:	bl	1046c <myhtml_stream_buffer_clean@plt>
   2ec48:	mov	r0, r4
   2ec4c:	bl	10820 <myhtml_tree_active_formatting_clean@plt>
   2ec50:	mov	r0, r4
   2ec54:	bl	10e20 <myhtml_tree_open_elements_clean@plt>
   2ec58:	ldr	r0, [r4, #132]	; 0x84
   2ec5c:	bl	1028c <myhtml_tree_list_clean@plt>
   2ec60:	ldr	r0, [r4, #136]	; 0x88
   2ec64:	bl	10fe8 <myhtml_tree_token_list_clean@plt>
   2ec68:	mov	r0, r4
   2ec6c:	bl	10424 <myhtml_tree_template_insertion_clean@plt>
   2ec70:	ldr	r0, [r4, #72]	; 0x48
   2ec74:	bl	10f70 <mcobject_clean@plt>
   2ec78:	ldr	r0, [r4, #28]
   2ec7c:	bl	11078 <myhtml_tag_clean@plt>
   2ec80:	ldr	r0, [r4, #20]
   2ec84:	bl	109a0 <mythread_queue_list_entry_clean@plt>
   2ec88:	ldr	r3, [r4]
   2ec8c:	ldr	r1, [r4, #20]
   2ec90:	ldr	r0, [r3, #4]
   2ec94:	bl	10d24 <mythread_queue_list_entry_make_batch@plt>
   2ec98:	ldr	r3, [r4]
   2ec9c:	ldr	r1, [r4, #20]
   2eca0:	ldr	r0, [r3]
   2eca4:	bl	10ee0 <mythread_queue_list_entry_make_stream@plt>
   2eca8:	ldr	r0, [r4, #8]
   2ecac:	ldr	r1, [r0, #16]
   2ecb0:	bl	10904 <myhtml_token_attr_create@plt>
   2ecb4:	str	r0, [r4, #56]	; 0x38
   2ecb8:	pop	{r4, pc}

0002ecbc <myhtml_tree_token_list_destroy@@Base>:
   2ecbc:	push	{r4, r5, r6, lr}
   2ecc0:	subs	r4, r0, #0
   2ecc4:	beq	2ece4 <myhtml_tree_token_list_destroy@@Base+0x28>
   2ecc8:	mov	r5, r1
   2eccc:	ldr	r0, [r4]
   2ecd0:	cmp	r0, #0
   2ecd4:	beq	2ecdc <myhtml_tree_token_list_destroy@@Base+0x20>
   2ecd8:	bl	10dcc <mycore_free@plt>
   2ecdc:	cmp	r5, #0
   2ece0:	bne	2ecec <myhtml_tree_token_list_destroy@@Base+0x30>
   2ece4:	mov	r0, r4
   2ece8:	pop	{r4, r5, r6, pc}
   2ecec:	mov	r0, r4
   2ecf0:	bl	10dcc <mycore_free@plt>
   2ecf4:	mov	r4, #0
   2ecf8:	b	2ece4 <myhtml_tree_token_list_destroy@@Base+0x28>

0002ecfc <myhtml_tree_token_list_append@@Base>:
   2ecfc:	push	{r4, r5, r6, lr}
   2ed00:	mov	r4, r0
   2ed04:	mov	r5, r1
   2ed08:	ldr	r1, [r0, #8]
   2ed0c:	ldr	r3, [r0, #4]
   2ed10:	cmp	r3, r1
   2ed14:	bcs	2ed34 <myhtml_tree_token_list_append@@Base+0x38>
   2ed18:	ldr	r2, [r4, #4]
   2ed1c:	ldr	r3, [r4]
   2ed20:	str	r5, [r3, r2, lsl #2]
   2ed24:	ldr	r3, [r4, #4]
   2ed28:	add	r3, r3, #1
   2ed2c:	str	r3, [r4, #4]
   2ed30:	pop	{r4, r5, r6, pc}
   2ed34:	lsl	r3, r1, #1
   2ed38:	str	r3, [r0, #8]
   2ed3c:	lsl	r1, r1, #3
   2ed40:	ldr	r0, [r0]
   2ed44:	bl	fbd8 <mycore_realloc@plt>
   2ed48:	cmp	r0, #0
   2ed4c:	strne	r0, [r4]
   2ed50:	b	2ed18 <myhtml_tree_token_list_append@@Base+0x1c>

0002ed54 <myhtml_tree_token_list_append_after_index@@Base>:
   2ed54:	push	{r4, r5, r6, lr}
   2ed58:	mov	r4, r0
   2ed5c:	mov	r6, r1
   2ed60:	mov	r5, r2
   2ed64:	ldr	r1, [r0, #8]
   2ed68:	ldr	r3, [r0, #4]
   2ed6c:	cmp	r3, r1
   2ed70:	bcs	2edc4 <myhtml_tree_token_list_append_after_index@@Base+0x70>
   2ed74:	ldr	r3, [r4]
   2ed78:	ldr	r2, [r4, #4]
   2ed7c:	cmp	r5, r2
   2ed80:	bls	2eda8 <myhtml_tree_token_list_append_after_index@@Base+0x54>
   2ed84:	add	r3, r3, r5, lsl #2
   2ed88:	mov	r1, r5
   2ed8c:	add	r2, r1, #1
   2ed90:	ldr	r1, [r3]
   2ed94:	str	r1, [r3, #4]!
   2ed98:	mov	r1, r2
   2ed9c:	ldr	r0, [r4, #4]
   2eda0:	cmp	r0, r2
   2eda4:	bcc	2ed8c <myhtml_tree_token_list_append_after_index@@Base+0x38>
   2eda8:	add	r5, r5, #1
   2edac:	ldr	r3, [r4]
   2edb0:	str	r6, [r3, r5, lsl #2]
   2edb4:	ldr	r3, [r4, #4]
   2edb8:	add	r3, r3, #1
   2edbc:	str	r3, [r4, #4]
   2edc0:	pop	{r4, r5, r6, pc}
   2edc4:	lsl	r3, r1, #1
   2edc8:	str	r3, [r0, #8]
   2edcc:	lsl	r1, r1, #3
   2edd0:	ldr	r0, [r0]
   2edd4:	bl	fbd8 <mycore_realloc@plt>
   2edd8:	cmp	r0, #0
   2eddc:	strne	r0, [r4]
   2ede0:	b	2ed74 <myhtml_tree_token_list_append_after_index@@Base+0x20>

0002ede4 <myhtml_tree_token_list_current_node@@Base>:
   2ede4:	ldr	r3, [r0, #4]
   2ede8:	cmp	r3, #0
   2edec:	subne	r3, r3, #-1073741823	; 0xc0000001
   2edf0:	ldrne	r2, [r0]
   2edf4:	ldrne	r0, [r2, r3, lsl #2]
   2edf8:	moveq	r0, #0
   2edfc:	bx	lr

0002ee00 <myhtml_tree_tags_close_p@@Base>:
   2ee00:	push	{r4, lr}
   2ee04:	mov	r4, r0
   2ee08:	mov	r2, #1
   2ee0c:	mov	r1, #99	; 0x63
   2ee10:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   2ee14:	mov	r0, r4
   2ee18:	bl	10628 <myhtml_tree_current_node@plt>
   2ee1c:	mov	r1, #99	; 0x63
   2ee20:	bl	10aa8 <myhtml_is_html_node@plt>
   2ee24:	mov	r3, #0
   2ee28:	mov	r2, #1
   2ee2c:	mov	r1, #99	; 0x63
   2ee30:	mov	r0, r4
   2ee34:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   2ee38:	pop	{r4, pc}

0002ee3c <myhtml_tree_generic_raw_text_element_parsing_algorithm@@Base>:
   2ee3c:	push	{r4, lr}
   2ee40:	mov	r4, r0
   2ee44:	mov	r2, #1
   2ee48:	bl	10cb8 <myhtml_tree_node_insert_by_token@plt>
   2ee4c:	ldr	r3, [r4, #168]	; 0xa8
   2ee50:	str	r3, [r4, #172]	; 0xac
   2ee54:	mov	r3, #7
   2ee58:	str	r3, [r4, #168]	; 0xa8
   2ee5c:	pop	{r4, pc}

0002ee60 <myhtml_tree_clear_stack_back_table_context@@Base>:
   2ee60:	push	{r4, lr}
   2ee64:	mov	r4, r0
   2ee68:	bl	10628 <myhtml_tree_current_node@plt>
   2ee6c:	b	2ee8c <myhtml_tree_clear_stack_back_table_context@@Base+0x2c>
   2ee70:	ldr	r3, [r0, #8]
   2ee74:	cmp	r3, #1
   2ee78:	beq	2eeb8 <myhtml_tree_clear_stack_back_table_context@@Base+0x58>
   2ee7c:	mov	r0, r4
   2ee80:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   2ee84:	mov	r0, r4
   2ee88:	bl	10628 <myhtml_tree_current_node@plt>
   2ee8c:	ldr	r2, [r0, #4]
   2ee90:	cmp	r2, #125	; 0x7d
   2ee94:	cmpne	r2, #128	; 0x80
   2ee98:	movne	r3, #1
   2ee9c:	moveq	r3, #0
   2eea0:	cmp	r2, #65	; 0x41
   2eea4:	moveq	r3, #0
   2eea8:	andne	r3, r3, #1
   2eeac:	cmp	r3, #0
   2eeb0:	bne	2ee7c <myhtml_tree_clear_stack_back_table_context@@Base+0x1c>
   2eeb4:	b	2ee70 <myhtml_tree_clear_stack_back_table_context@@Base+0x10>
   2eeb8:	pop	{r4, pc}

0002eebc <myhtml_tree_clear_stack_back_table_body_context@@Base>:
   2eebc:	push	{r4, r5, r6, lr}
   2eec0:	mov	r4, r0
   2eec4:	bl	10628 <myhtml_tree_current_node@plt>
   2eec8:	mov	r6, #1
   2eecc:	mov	r5, #85	; 0x55
   2eed0:	b	2eef0 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x34>
   2eed4:	ldr	r3, [r0, #8]
   2eed8:	cmp	r3, #1
   2eedc:	beq	2ef24 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x68>
   2eee0:	mov	r0, r4
   2eee4:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   2eee8:	mov	r0, r4
   2eeec:	bl	10628 <myhtml_tree_current_node@plt>
   2eef0:	ldr	r2, [r0, #4]
   2eef4:	sub	r3, r2, #126	; 0x7e
   2eef8:	cmp	r3, #6
   2eefc:	lsrls	r3, r5, r3
   2ef00:	eorls	r3, r3, #1
   2ef04:	andls	r3, r3, #1
   2ef08:	movhi	r3, r6
   2ef0c:	cmp	r2, #65	; 0x41
   2ef10:	moveq	r3, #0
   2ef14:	andne	r3, r3, #1
   2ef18:	cmp	r3, #0
   2ef1c:	bne	2eee0 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x24>
   2ef20:	b	2eed4 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x18>
   2ef24:	pop	{r4, r5, r6, pc}

0002ef28 <myhtml_tree_clear_stack_back_table_row_context@@Base>:
   2ef28:	push	{r4, lr}
   2ef2c:	mov	r4, r0
   2ef30:	bl	10628 <myhtml_tree_current_node@plt>
   2ef34:	b	2ef54 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x2c>
   2ef38:	ldr	r3, [r0, #8]
   2ef3c:	cmp	r3, #1
   2ef40:	beq	2ef80 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x58>
   2ef44:	mov	r0, r4
   2ef48:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   2ef4c:	mov	r0, r4
   2ef50:	bl	10628 <myhtml_tree_current_node@plt>
   2ef54:	ldr	r2, [r0, #4]
   2ef58:	cmp	r2, #135	; 0x87
   2ef5c:	cmpne	r2, #128	; 0x80
   2ef60:	movne	r3, #1
   2ef64:	moveq	r3, #0
   2ef68:	cmp	r2, #65	; 0x41
   2ef6c:	moveq	r3, #0
   2ef70:	andne	r3, r3, #1
   2ef74:	cmp	r3, #0
   2ef78:	bne	2ef44 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x1c>
   2ef7c:	b	2ef38 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x10>
   2ef80:	pop	{r4, pc}

0002ef84 <myhtml_tree_close_cell@@Base>:
   2ef84:	push	{r4, r5, r6, lr}
   2ef88:	mov	r4, r0
   2ef8c:	mov	r5, r1
   2ef90:	mov	r2, #0
   2ef94:	mov	r1, r2
   2ef98:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   2ef9c:	mov	r0, r4
   2efa0:	bl	10628 <myhtml_tree_current_node@plt>
   2efa4:	mov	r3, #0
   2efa8:	ldr	r2, [r5, #8]
   2efac:	ldr	r1, [r5, #4]
   2efb0:	mov	r0, r4
   2efb4:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   2efb8:	mov	r0, r4
   2efbc:	bl	10e5c <myhtml_tree_active_formatting_up_to_last_marker@plt>
   2efc0:	mov	r3, #13
   2efc4:	str	r3, [r4, #168]	; 0xa8
   2efc8:	pop	{r4, r5, r6, pc}

0002efcc <myhtml_tree_is_mathml_integration_point@@Base>:
   2efcc:	ldr	r3, [r1, #8]
   2efd0:	cmp	r3, #2
   2efd4:	beq	2efe0 <myhtml_tree_is_mathml_integration_point@@Base+0x14>
   2efd8:	mov	r0, #0
   2efdc:	bx	lr
   2efe0:	ldr	r3, [r1, #4]
   2efe4:	sub	r2, r3, #227	; 0xe3
   2efe8:	cmp	r2, #11
   2efec:	ldrls	r0, [pc, #28]	; 2f010 <myhtml_tree_is_mathml_integration_point@@Base+0x44>
   2eff0:	lsrls	r0, r0, r2
   2eff4:	eorls	r0, r0, #1
   2eff8:	andls	r0, r0, #1
   2effc:	movhi	r0, #1
   2f000:	eor	r0, r0, #1
   2f004:	cmp	r3, #88	; 0x58
   2f008:	orreq	r0, r0, #1
   2f00c:	bx	lr
   2f010:	andeq	r0, r0, r1, lsr r8

0002f014 <myhtml_tree_is_html_integration_point@@Base>:
   2f014:	ldr	r3, [r1, #8]
   2f018:	cmp	r3, #3
   2f01c:	beq	2f03c <myhtml_tree_is_html_integration_point@@Base+0x28>
   2f020:	cmp	r3, #2
   2f024:	bne	2f110 <myhtml_tree_is_html_integration_point@@Base+0xfc>
   2f028:	ldr	r3, [r1, #4]
   2f02c:	cmp	r3, #8
   2f030:	beq	2f05c <myhtml_tree_is_html_integration_point@@Base+0x48>
   2f034:	mov	r0, #0
   2f038:	bx	lr
   2f03c:	ldr	r3, [r1, #4]
   2f040:	cmp	r3, #156	; 0x9c
   2f044:	cmpne	r3, #189	; 0xbd
   2f048:	moveq	r0, #1
   2f04c:	movne	r0, #0
   2f050:	cmp	r3, #134	; 0x86
   2f054:	orreq	r0, r0, #1
   2f058:	bx	lr
   2f05c:	ldr	r3, [r1, #32]
   2f060:	cmp	r3, #0
   2f064:	beq	2f118 <myhtml_tree_is_html_integration_point@@Base+0x104>
   2f068:	ldr	r2, [r3, #48]	; 0x30
   2f06c:	tst	r2, #1
   2f070:	beq	2f07c <myhtml_tree_is_html_integration_point@@Base+0x68>
   2f074:	mov	r0, #0
   2f078:	bx	lr
   2f07c:	push	{r4, r5, lr}
   2f080:	sub	sp, sp, #12
   2f084:	mov	r4, r1
   2f088:	mov	r5, r0
   2f08c:	mov	r1, r3
   2f090:	ldr	r0, [r0, #8]
   2f094:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   2f098:	mov	r3, #9
   2f09c:	str	r3, [sp, #4]
   2f0a0:	ldr	r3, [pc, #120]	; 2f120 <myhtml_tree_is_html_integration_point@@Base+0x10c>
   2f0a4:	add	r3, pc, r3
   2f0a8:	str	r3, [sp]
   2f0ac:	mov	r3, #8
   2f0b0:	ldr	r2, [pc, #108]	; 2f124 <myhtml_tree_is_html_integration_point@@Base+0x110>
   2f0b4:	add	r2, pc, r2
   2f0b8:	ldr	r1, [r4, #32]
   2f0bc:	ldr	r0, [r5, #8]
   2f0c0:	bl	fd34 <myhtml_token_attr_match_case@plt>
   2f0c4:	cmp	r0, #0
   2f0c8:	movne	r0, #1
   2f0cc:	beq	2f0d8 <myhtml_tree_is_html_integration_point@@Base+0xc4>
   2f0d0:	add	sp, sp, #12
   2f0d4:	pop	{r4, r5, pc}
   2f0d8:	ldr	r1, [r4, #32]
   2f0dc:	ldr	r0, [r5, #8]
   2f0e0:	mov	r3, #21
   2f0e4:	str	r3, [sp, #4]
   2f0e8:	ldr	r3, [pc, #56]	; 2f128 <myhtml_tree_is_html_integration_point@@Base+0x114>
   2f0ec:	add	r3, pc, r3
   2f0f0:	str	r3, [sp]
   2f0f4:	mov	r3, #8
   2f0f8:	ldr	r2, [pc, #44]	; 2f12c <myhtml_tree_is_html_integration_point@@Base+0x118>
   2f0fc:	add	r2, pc, r2
   2f100:	bl	fd34 <myhtml_token_attr_match_case@plt>
   2f104:	adds	r0, r0, #0
   2f108:	movne	r0, #1
   2f10c:	b	2f0d0 <myhtml_tree_is_html_integration_point@@Base+0xbc>
   2f110:	mov	r0, #0
   2f114:	bx	lr
   2f118:	mov	r0, #0
   2f11c:	bx	lr
   2f120:	muleq	ip, r4, r8
   2f124:	andeq	pc, ip, r8, ror r8	; <UNPREDICTABLE>
   2f128:	andeq	pc, ip, r8, asr r8	; <UNPREDICTABLE>
   2f12c:	andeq	pc, ip, r0, lsr r8	; <UNPREDICTABLE>

0002f130 <myhtml_tree_temp_tag_name_init@@Base>:
   2f130:	push	{r4, lr}
   2f134:	mov	r4, r0
   2f138:	mov	r0, #1024	; 0x400
   2f13c:	str	r0, [r4, #8]
   2f140:	mov	r3, #0
   2f144:	str	r3, [r4, #4]
   2f148:	bl	10c94 <mycore_malloc@plt>
   2f14c:	str	r0, [r4]
   2f150:	cmp	r0, #0
   2f154:	moveq	r0, #2
   2f158:	movne	r0, #0
   2f15c:	pop	{r4, pc}

0002f160 <myhtml_tree_temp_tag_name_clean@@Base>:
   2f160:	mov	r3, #0
   2f164:	str	r3, [r0, #4]
   2f168:	bx	lr

0002f16c <myhtml_tree_temp_tag_name_destroy@@Base>:
   2f16c:	push	{r4, r5, r6, lr}
   2f170:	subs	r4, r0, #0
   2f174:	beq	2f19c <myhtml_tree_temp_tag_name_destroy@@Base+0x30>
   2f178:	mov	r5, r1
   2f17c:	ldr	r0, [r4]
   2f180:	cmp	r0, #0
   2f184:	beq	2f194 <myhtml_tree_temp_tag_name_destroy@@Base+0x28>
   2f188:	bl	10dcc <mycore_free@plt>
   2f18c:	mov	r3, #0
   2f190:	str	r3, [r4]
   2f194:	cmp	r5, #0
   2f198:	bne	2f1a4 <myhtml_tree_temp_tag_name_destroy@@Base+0x38>
   2f19c:	mov	r0, r4
   2f1a0:	pop	{r4, r5, r6, pc}
   2f1a4:	mov	r0, r4
   2f1a8:	bl	10dcc <mycore_free@plt>
   2f1ac:	mov	r4, #0
   2f1b0:	b	2f19c <myhtml_tree_temp_tag_name_destroy@@Base+0x30>

0002f1b4 <myhtml_tree_destroy@@Base>:
   2f1b4:	push	{r4, lr}
   2f1b8:	subs	r4, r0, #0
   2f1bc:	beq	2f294 <myhtml_tree_destroy@@Base+0xe0>
   2f1c0:	ldr	r0, [r4, #28]
   2f1c4:	bl	10e44 <myhtml_tag_destroy@plt>
   2f1c8:	str	r0, [r4, #28]
   2f1cc:	mov	r0, r4
   2f1d0:	bl	100dc <myhtml_tree_active_formatting_destroy@plt>
   2f1d4:	str	r0, [r4, #124]	; 0x7c
   2f1d8:	mov	r0, r4
   2f1dc:	bl	10ce8 <myhtml_tree_open_elements_destroy@plt>
   2f1e0:	str	r0, [r4, #128]	; 0x80
   2f1e4:	mov	r1, #1
   2f1e8:	ldr	r0, [r4, #132]	; 0x84
   2f1ec:	bl	106f4 <myhtml_tree_list_destroy@plt>
   2f1f0:	str	r0, [r4, #132]	; 0x84
   2f1f4:	mov	r1, #1
   2f1f8:	ldr	r0, [r4, #136]	; 0x88
   2f1fc:	bl	fc74 <myhtml_tree_token_list_destroy@plt>
   2f200:	str	r0, [r4, #136]	; 0x88
   2f204:	mov	r0, r4
   2f208:	bl	10e38 <myhtml_tree_template_insertion_destroy@plt>
   2f20c:	str	r0, [r4, #140]	; 0x8c
   2f210:	mov	r1, #1
   2f214:	ldr	r0, [r4, #16]
   2f218:	bl	101b4 <mcsync_destroy@plt>
   2f21c:	str	r0, [r4, #16]
   2f220:	mov	r1, #1
   2f224:	ldr	r0, [r4, #12]
   2f228:	bl	10b20 <mcobject_async_destroy@plt>
   2f22c:	str	r0, [r4, #12]
   2f230:	ldr	r0, [r4, #8]
   2f234:	bl	10784 <myhtml_token_destroy@plt>
   2f238:	str	r0, [r4, #8]
   2f23c:	mov	r1, #1
   2f240:	ldr	r0, [r4, #4]
   2f244:	bl	10da8 <mchar_async_destroy@plt>
   2f248:	str	r0, [r4, #4]
   2f24c:	mov	r1, #1
   2f250:	ldr	r0, [r4, #148]	; 0x94
   2f254:	bl	fd28 <myhtml_stream_buffer_destroy@plt>
   2f258:	str	r0, [r4, #148]	; 0x94
   2f25c:	ldr	r0, [r4, #24]
   2f260:	bl	102d4 <mythread_queue_destroy@plt>
   2f264:	str	r0, [r4, #24]
   2f268:	mov	r1, #1
   2f26c:	ldr	r0, [r4, #72]	; 0x48
   2f270:	bl	fdd0 <mcobject_destroy@plt>
   2f274:	str	r0, [r4, #72]	; 0x48
   2f278:	mov	r1, #0
   2f27c:	add	r0, r4, #208	; 0xd0
   2f280:	bl	10940 <myhtml_tree_temp_tag_name_destroy@plt>
   2f284:	ldr	r0, [r4, #144]	; 0x90
   2f288:	bl	10dcc <mycore_free@plt>
   2f28c:	mov	r0, r4
   2f290:	bl	10dcc <mycore_free@plt>
   2f294:	mov	r0, #0
   2f298:	pop	{r4, pc}

0002f29c <myhtml_tree_temp_tag_name_append_one@@Base>:
   2f29c:	push	{r4, r5, r6, lr}
   2f2a0:	mov	r4, r0
   2f2a4:	mov	r6, r1
   2f2a8:	ldr	r1, [r0, #8]
   2f2ac:	ldr	r3, [r0, #4]
   2f2b0:	cmp	r3, r1
   2f2b4:	bcs	2f2d8 <myhtml_tree_temp_tag_name_append_one@@Base+0x3c>
   2f2b8:	ldr	r2, [r4]
   2f2bc:	ldr	r3, [r4, #4]
   2f2c0:	strb	r6, [r2, r3]
   2f2c4:	ldr	r3, [r4, #4]
   2f2c8:	add	r3, r3, #1
   2f2cc:	str	r3, [r4, #4]
   2f2d0:	mov	r0, #0
   2f2d4:	pop	{r4, r5, r6, pc}
   2f2d8:	lsl	r5, r1, #1
   2f2dc:	mov	r1, r5
   2f2e0:	ldr	r0, [r0]
   2f2e4:	bl	fbd8 <mycore_realloc@plt>
   2f2e8:	cmp	r0, #0
   2f2ec:	strne	r5, [r4, #8]
   2f2f0:	strne	r0, [r4]
   2f2f4:	bne	2f2b8 <myhtml_tree_temp_tag_name_append_one@@Base+0x1c>
   2f2f8:	mov	r0, #2
   2f2fc:	pop	{r4, r5, r6, pc}

0002f300 <myhtml_tree_temp_tag_name_append@@Base>:
   2f300:	ldr	r3, [r0]
   2f304:	cmp	r3, #0
   2f308:	cmpne	r2, #0
   2f30c:	beq	2f380 <myhtml_tree_temp_tag_name_append@@Base+0x80>
   2f310:	push	{r4, r5, r6, r7, r8, lr}
   2f314:	mov	r5, r2
   2f318:	mov	r6, r1
   2f31c:	mov	r4, r0
   2f320:	ldr	r1, [r0, #8]
   2f324:	ldr	r2, [r0, #4]
   2f328:	add	r2, r5, r2
   2f32c:	cmp	r2, r1
   2f330:	bcc	2f354 <myhtml_tree_temp_tag_name_append@@Base+0x54>
   2f334:	add	r7, r5, r1, lsl #1
   2f338:	mov	r1, r7
   2f33c:	mov	r0, r3
   2f340:	bl	fbd8 <mycore_realloc@plt>
   2f344:	cmp	r0, #0
   2f348:	beq	2f388 <myhtml_tree_temp_tag_name_append@@Base+0x88>
   2f34c:	str	r7, [r4, #8]
   2f350:	str	r0, [r4]
   2f354:	ldr	r0, [r4]
   2f358:	ldr	r3, [r4, #4]
   2f35c:	mov	r2, r5
   2f360:	mov	r1, r6
   2f364:	add	r0, r0, r3
   2f368:	bl	ff5c <memcpy@plt>
   2f36c:	ldr	r3, [r4, #4]
   2f370:	add	r5, r3, r5
   2f374:	str	r5, [r4, #4]
   2f378:	mov	r0, #0
   2f37c:	pop	{r4, r5, r6, r7, r8, pc}
   2f380:	mov	r0, #0
   2f384:	bx	lr
   2f388:	mov	r0, #2
   2f38c:	pop	{r4, r5, r6, r7, r8, pc}

0002f390 <myhtml_tree_wait_for_last_done_token@@Base>:
   2f390:	push	{r4, r5, r6, lr}
   2f394:	mov	r4, r0
   2f398:	mov	r5, r1
   2f39c:	ldr	r3, [r0, #152]	; 0x98
   2f3a0:	cmp	r1, r3
   2f3a4:	popeq	{r4, r5, r6, pc}
   2f3a8:	ldr	r3, [r4]
   2f3ac:	ldr	r3, [r3]
   2f3b0:	ldr	r0, [r3, #24]
   2f3b4:	bl	100a0 <mythread_nanosleep_sleep@plt>
   2f3b8:	ldr	r3, [r4, #152]	; 0x98
   2f3bc:	cmp	r3, r5
   2f3c0:	bne	2f3a8 <myhtml_tree_wait_for_last_done_token@@Base+0x18>
   2f3c4:	pop	{r4, r5, r6, pc}

0002f3c8 <myhtml_tree_special_list_init@@Base>:
   2f3c8:	push	{r4, lr}
   2f3cc:	mov	r4, r0
   2f3d0:	mov	r3, #1024	; 0x400
   2f3d4:	str	r3, [r0, #8]
   2f3d8:	mov	r3, #0
   2f3dc:	str	r3, [r0, #4]
   2f3e0:	mov	r0, #8192	; 0x2000
   2f3e4:	bl	10c94 <mycore_malloc@plt>
   2f3e8:	str	r0, [r4]
   2f3ec:	cmp	r0, #0
   2f3f0:	moveq	r0, #2
   2f3f4:	movne	r0, #0
   2f3f8:	pop	{r4, pc}

0002f3fc <myhtml_tree_special_list_clean@@Base>:
   2f3fc:	mov	r3, #0
   2f400:	str	r3, [r0, #4]
   2f404:	bx	lr

0002f408 <myhtml_tree_special_list_destroy@@Base>:
   2f408:	push	{r4, r5, r6, lr}
   2f40c:	subs	r4, r0, #0
   2f410:	beq	2f438 <myhtml_tree_special_list_destroy@@Base+0x30>
   2f414:	mov	r5, r1
   2f418:	ldr	r0, [r4]
   2f41c:	cmp	r0, #0
   2f420:	beq	2f430 <myhtml_tree_special_list_destroy@@Base+0x28>
   2f424:	bl	10dcc <mycore_free@plt>
   2f428:	mov	r3, #0
   2f42c:	str	r3, [r4]
   2f430:	cmp	r5, #0
   2f434:	bne	2f440 <myhtml_tree_special_list_destroy@@Base+0x38>
   2f438:	mov	r0, r4
   2f43c:	pop	{r4, r5, r6, pc}
   2f440:	mov	r0, r4
   2f444:	bl	10dcc <mycore_free@plt>
   2f448:	mov	r4, #0
   2f44c:	b	2f438 <myhtml_tree_special_list_destroy@@Base+0x30>

0002f450 <myhtml_tree_special_list_append@@Base>:
   2f450:	push	{r4, r5, r6, r7, r8, lr}
   2f454:	mov	r4, r0
   2f458:	mov	r5, r1
   2f45c:	mov	r6, r2
   2f460:	ldr	r1, [r0, #8]
   2f464:	ldr	r3, [r0, #4]
   2f468:	cmp	r3, r1
   2f46c:	bcs	2f4a0 <myhtml_tree_special_list_append@@Base+0x50>
   2f470:	ldr	r2, [r4, #4]
   2f474:	ldr	r3, [r4]
   2f478:	add	r3, r3, r2, lsl #3
   2f47c:	str	r6, [r3, #4]
   2f480:	ldr	r2, [r4, #4]
   2f484:	ldr	r3, [r4]
   2f488:	str	r5, [r3, r2, lsl #3]
   2f48c:	ldr	r3, [r4, #4]
   2f490:	add	r3, r3, #1
   2f494:	str	r3, [r4, #4]
   2f498:	mov	r0, #0
   2f49c:	pop	{r4, r5, r6, r7, r8, pc}
   2f4a0:	lsl	r7, r1, #1
   2f4a4:	lsl	r1, r1, #4
   2f4a8:	ldr	r0, [r0]
   2f4ac:	bl	fbd8 <mycore_realloc@plt>
   2f4b0:	cmp	r0, #0
   2f4b4:	strne	r7, [r4, #8]
   2f4b8:	strne	r0, [r4]
   2f4bc:	bne	2f470 <myhtml_tree_special_list_append@@Base+0x20>
   2f4c0:	mov	r0, #2
   2f4c4:	pop	{r4, r5, r6, r7, r8, pc}

0002f4c8 <myhtml_tree_special_list_length@@Base>:
   2f4c8:	ldr	r0, [r0, #4]
   2f4cc:	bx	lr

0002f4d0 <myhtml_tree_special_list_pop@@Base>:
   2f4d0:	ldr	r3, [r0, #4]
   2f4d4:	cmp	r3, #0
   2f4d8:	subne	r3, r3, #1
   2f4dc:	strne	r3, [r0, #4]
   2f4e0:	ldr	r0, [r0, #4]
   2f4e4:	bx	lr

0002f4e8 <myhtml_tree_special_list_get_last@@Base>:
   2f4e8:	ldr	r3, [r0, #4]
   2f4ec:	cmp	r3, #0
   2f4f0:	ldrne	r0, [r0]
   2f4f4:	addne	r0, r0, r3, lsl #3
   2f4f8:	moveq	r0, #0
   2f4fc:	bx	lr

0002f500 <myhtml_tree_incoming_buffer_first@@Base>:
   2f500:	ldr	r0, [r0, #80]	; 0x50
   2f504:	bx	lr

0002f508 <myhtml_tree_incomming_buffer_make_data@@Base>:
   2f508:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2f50c:	mov	r9, r0
   2f510:	mov	r5, r1
   2f514:	mov	r6, r2
   2f518:	ldr	r0, [r0, #80]	; 0x50
   2f51c:	bl	10100 <mycore_incoming_buffer_find_by_position@plt>
   2f520:	mov	r4, r0
   2f524:	ldr	r0, [r0, #12]
   2f528:	sub	r5, r5, r0
   2f52c:	add	r7, r5, r6
   2f530:	ldr	r3, [r4, #8]
   2f534:	cmp	r7, r3
   2f538:	bls	2f5c0 <myhtml_tree_incomming_buffer_make_data@@Base+0xb8>
   2f53c:	ldr	r3, [r9, #208]	; 0xd0
   2f540:	cmp	r3, #0
   2f544:	beq	2f5cc <myhtml_tree_incomming_buffer_make_data@@Base+0xc4>
   2f548:	add	r0, r9, #208	; 0xd0
   2f54c:	bl	10280 <myhtml_tree_temp_tag_name_clean@plt>
   2f550:	cmp	r4, #0
   2f554:	beq	2f5b8 <myhtml_tree_incomming_buffer_make_data@@Base+0xb0>
   2f558:	ldr	r2, [r4, #8]
   2f55c:	cmp	r7, r2
   2f560:	addhi	r7, r9, #208	; 0xd0
   2f564:	movhi	r8, #0
   2f568:	bls	2f5a4 <myhtml_tree_incomming_buffer_make_data@@Base+0x9c>
   2f56c:	sub	r2, r2, r5
   2f570:	sub	r6, r6, r2
   2f574:	ldr	r1, [r4]
   2f578:	add	r1, r1, r5
   2f57c:	mov	r0, r7
   2f580:	bl	fc8c <myhtml_tree_temp_tag_name_append@plt>
   2f584:	ldr	r4, [r4, #20]
   2f588:	cmp	r4, #0
   2f58c:	beq	2f5b8 <myhtml_tree_incomming_buffer_make_data@@Base+0xb0>
   2f590:	ldr	r2, [r4, #8]
   2f594:	mov	r5, r8
   2f598:	cmp	r2, r6
   2f59c:	bcc	2f56c <myhtml_tree_incomming_buffer_make_data@@Base+0x64>
   2f5a0:	mov	r5, #0
   2f5a4:	ldr	r1, [r4]
   2f5a8:	mov	r2, r6
   2f5ac:	add	r1, r1, r5
   2f5b0:	add	r0, r9, #208	; 0xd0
   2f5b4:	bl	fc8c <myhtml_tree_temp_tag_name_append@plt>
   2f5b8:	ldr	r0, [r9, #208]	; 0xd0
   2f5bc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2f5c0:	ldr	r0, [r4]
   2f5c4:	add	r0, r0, r5
   2f5c8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2f5cc:	add	r0, r9, #208	; 0xd0
   2f5d0:	bl	10604 <myhtml_tree_temp_tag_name_init@plt>
   2f5d4:	b	2f550 <myhtml_tree_incomming_buffer_make_data@@Base+0x48>

0002f5d8 <mycore_fopen@@Base>:
   2f5d8:	push	{r4, lr}
   2f5dc:	bl	fdb8 <fopen@plt>
   2f5e0:	pop	{r4, pc}

0002f5e4 <mycore_fclose@@Base>:
   2f5e4:	push	{r4, lr}
   2f5e8:	bl	10a00 <fclose@plt>
   2f5ec:	pop	{r4, pc}

0002f5f0 <mycore_fread@@Base>:
   2f5f0:	push	{r4, lr}
   2f5f4:	bl	103d0 <fread@plt>
   2f5f8:	pop	{r4, pc}

0002f5fc <mycore_fwrite@@Base>:
   2f5fc:	push	{r4, lr}
   2f600:	bl	10340 <fwrite@plt>
   2f604:	pop	{r4, pc}

0002f608 <mycore_fflush@@Base>:
   2f608:	push	{r4, lr}
   2f60c:	bl	fe0c <fflush@plt>
   2f610:	pop	{r4, pc}

0002f614 <mycore_fseek@@Base>:
   2f614:	push	{r4, lr}
   2f618:	bl	10f28 <fseek@plt>
   2f61c:	pop	{r4, pc}

0002f620 <mycore_ftell@@Base>:
   2f620:	push	{r4, lr}
   2f624:	bl	10064 <ftell@plt>
   2f628:	pop	{r4, pc}

0002f62c <mycore_ferror@@Base>:
   2f62c:	push	{r4, lr}
   2f630:	bl	ff50 <ferror@plt>
   2f634:	pop	{r4, pc}

0002f638 <mycore_setbuf@@Base>:
   2f638:	push	{r4, lr}
   2f63c:	bl	fd04 <setbuf@plt>
   2f640:	pop	{r4, pc}

0002f644 <mycore_malloc@@Base>:
   2f644:	push	{r4, lr}
   2f648:	bl	10508 <malloc@plt>
   2f64c:	pop	{r4, pc}

0002f650 <mycore_realloc@@Base>:
   2f650:	push	{r4, lr}
   2f654:	bl	101e4 <realloc@plt>
   2f658:	pop	{r4, pc}

0002f65c <mycore_calloc@@Base>:
   2f65c:	push	{r4, lr}
   2f660:	bl	fbe4 <calloc@plt>
   2f664:	pop	{r4, pc}

0002f668 <mycore_free@@Base>:
   2f668:	push	{r4, lr}
   2f66c:	bl	feb4 <free@plt>
   2f670:	mov	r0, #0
   2f674:	pop	{r4, pc}

0002f678 <mythread_thread_create@@Base>:
   2f678:	push	{r4, r5, r6, r7, r8, lr}
   2f67c:	mov	r5, r0
   2f680:	mov	r6, r1
   2f684:	mov	r7, r2
   2f688:	mov	r1, #4
   2f68c:	mov	r0, #1
   2f690:	bl	ff14 <mycore_calloc@plt>
   2f694:	subs	r4, r0, #0
   2f698:	beq	2f6b8 <mythread_thread_create@@Base+0x40>
   2f69c:	mov	r3, r7
   2f6a0:	mov	r2, r6
   2f6a4:	ldr	r1, [r5, #20]
   2f6a8:	mov	r0, r4
   2f6ac:	bl	103dc <pthread_create@plt>
   2f6b0:	cmp	r0, #0
   2f6b4:	movne	r4, #0
   2f6b8:	mov	r0, r4
   2f6bc:	pop	{r4, r5, r6, r7, r8, pc}

0002f6c0 <mythread_thread_join@@Base>:
   2f6c0:	push	{r4, lr}
   2f6c4:	ldr	r0, [r1]
   2f6c8:	mov	r1, #0
   2f6cc:	bl	10b68 <pthread_join@plt>
   2f6d0:	adds	r0, r0, #0
   2f6d4:	movne	r0, #1
   2f6d8:	pop	{r4, pc}

0002f6dc <mythread_thread_cancel@@Base>:
   2f6dc:	push	{r4, lr}
   2f6e0:	ldr	r0, [r1]
   2f6e4:	bl	108f8 <pthread_cancel@plt>
   2f6e8:	adds	r0, r0, #0
   2f6ec:	movne	r0, #1
   2f6f0:	pop	{r4, pc}

0002f6f4 <mythread_thread_destroy@@Base>:
   2f6f4:	push	{r4, lr}
   2f6f8:	mov	r0, r1
   2f6fc:	bl	10dcc <mycore_free@plt>
   2f700:	mov	r0, #0
   2f704:	pop	{r4, pc}

0002f708 <mythread_thread_attr_init@@Base>:
   2f708:	push	{r4, r5, r6, lr}
   2f70c:	mov	r5, r0
   2f710:	mov	r1, #36	; 0x24
   2f714:	mov	r0, #1
   2f718:	bl	ff14 <mycore_calloc@plt>
   2f71c:	subs	r4, r0, #0
   2f720:	beq	2f778 <mythread_thread_attr_init@@Base+0x70>
   2f724:	mov	r0, r4
   2f728:	bl	1079c <pthread_attr_init@plt>
   2f72c:	str	r0, [r5, #28]
   2f730:	cmp	r0, #0
   2f734:	bne	2f758 <mythread_thread_attr_init@@Base+0x50>
   2f738:	mov	r1, #0
   2f73c:	mov	r0, r4
   2f740:	bl	10f58 <pthread_attr_setdetachstate@plt>
   2f744:	str	r0, [r5, #28]
   2f748:	cmp	r0, #0
   2f74c:	bne	2f768 <mythread_thread_attr_init@@Base+0x60>
   2f750:	mov	r0, r4
   2f754:	pop	{r4, r5, r6, pc}
   2f758:	mov	r0, r4
   2f75c:	bl	10dcc <mycore_free@plt>
   2f760:	mov	r0, #0
   2f764:	pop	{r4, r5, r6, pc}
   2f768:	mov	r0, r4
   2f76c:	bl	10dcc <mycore_free@plt>
   2f770:	mov	r0, #0
   2f774:	pop	{r4, r5, r6, pc}
   2f778:	mov	r0, #0
   2f77c:	pop	{r4, r5, r6, pc}

0002f780 <mythread_thread_attr_clean@@Base>:
   2f780:	bx	lr

0002f784 <mythread_thread_attr_destroy@@Base>:
   2f784:	push	{r4, r5, r6, lr}
   2f788:	subs	r4, r1, #0
   2f78c:	popeq	{r4, r5, r6, pc}
   2f790:	mov	r5, r0
   2f794:	mov	r0, r4
   2f798:	bl	fddc <pthread_attr_destroy@plt>
   2f79c:	str	r0, [r5, #28]
   2f7a0:	mov	r0, r4
   2f7a4:	bl	10dcc <mycore_free@plt>
   2f7a8:	pop	{r4, r5, r6, pc}

0002f7ac <mythread_mutex_create@@Base>:
   2f7ac:	push	{r4, lr}
   2f7b0:	bl	108c8 <mcsync_mutex_create@plt>
   2f7b4:	subs	r4, r0, #0
   2f7b8:	beq	2f7cc <mythread_mutex_create@@Base+0x20>
   2f7bc:	mov	r0, r4
   2f7c0:	bl	10b50 <mcsync_mutex_init@plt>
   2f7c4:	cmp	r0, #0
   2f7c8:	bne	2f7d4 <mythread_mutex_create@@Base+0x28>
   2f7cc:	mov	r0, r4
   2f7d0:	pop	{r4, pc}
   2f7d4:	mov	r0, r4
   2f7d8:	bl	10dcc <mycore_free@plt>
   2f7dc:	mov	r4, #0
   2f7e0:	b	2f7cc <mythread_mutex_create@@Base+0x20>

0002f7e4 <mythread_mutex_post@@Base>:
   2f7e4:	push	{r4, lr}
   2f7e8:	mov	r0, r1
   2f7ec:	bl	fefc <mcsync_mutex_unlock@plt>
   2f7f0:	pop	{r4, pc}

0002f7f4 <mythread_mutex_wait@@Base>:
   2f7f4:	push	{r4, lr}
   2f7f8:	mov	r0, r1
   2f7fc:	bl	1103c <mcsync_mutex_lock@plt>
   2f800:	pop	{r4, pc}

0002f804 <mythread_mutex_try_wait@@Base>:
   2f804:	push	{r4, lr}
   2f808:	mov	r0, r1
   2f80c:	bl	10fac <mcsync_mutex_try_lock@plt>
   2f810:	pop	{r4, pc}

0002f814 <mythread_mutex_close@@Base>:
   2f814:	push	{r4, lr}
   2f818:	mov	r0, r1
   2f81c:	bl	fd70 <mcsync_mutex_destroy@plt>
   2f820:	pop	{r4, pc}

0002f824 <mythread_nanosleep_create@@Base>:
   2f824:	push	{r4, lr}
   2f828:	mov	r1, #8
   2f82c:	mov	r0, #1
   2f830:	bl	ff14 <mycore_calloc@plt>
   2f834:	pop	{r4, pc}

0002f838 <mythread_nanosleep_clean@@Base>:
   2f838:	mov	r3, #0
   2f83c:	str	r3, [r0]
   2f840:	str	r3, [r0, #4]
   2f844:	bx	lr

0002f848 <mythread_nanosleep_destroy@@Base>:
   2f848:	push	{r4, lr}
   2f84c:	bl	10dcc <mycore_free@plt>
   2f850:	pop	{r4, pc}

0002f854 <mythread_nanosleep_sleep@@Base>:
   2f854:	push	{r4, lr}
   2f858:	mov	r1, #0
   2f85c:	bl	ff20 <nanosleep@plt>
   2f860:	adds	r0, r0, #0
   2f864:	movne	r0, #1
   2f868:	pop	{r4, pc}

0002f86c <mcsync_spin_create@@Base>:
   2f86c:	push	{r4, lr}
   2f870:	mov	r1, #4
   2f874:	mov	r0, #1
   2f878:	bl	ff14 <mycore_calloc@plt>
   2f87c:	pop	{r4, pc}

0002f880 <mcsync_spin_init@@Base>:
   2f880:	mov	r0, #0
   2f884:	bx	lr

0002f888 <mcsync_spin_clean@@Base>:
   2f888:	mov	r3, #0
   2f88c:	str	r3, [r0]
   2f890:	bx	lr

0002f894 <mcsync_spin_destroy@@Base>:
   2f894:	push	{r4, lr}
   2f898:	bl	10dcc <mycore_free@plt>
   2f89c:	pop	{r4, pc}

0002f8a0 <mcsync_spin_lock@@Base>:
   2f8a0:	sub	sp, sp, #8
   2f8a4:	mov	r3, #0
   2f8a8:	str	r3, [sp, #4]
   2f8ac:	mov	r1, #1
   2f8b0:	b	2f8cc <mcsync_spin_lock@@Base+0x2c>
   2f8b4:	mcr	15, 0, r0, cr7, cr10, {5}
   2f8b8:	moveq	r3, #1
   2f8bc:	movne	r3, #0
   2f8c0:	strne	r2, [sp, #4]
   2f8c4:	cmp	r3, #0
   2f8c8:	bne	2f8f0 <mcsync_spin_lock@@Base+0x50>
   2f8cc:	ldr	r3, [sp, #4]
   2f8d0:	mcr	15, 0, r0, cr7, cr10, {5}
   2f8d4:	ldrex	r2, [r0]
   2f8d8:	cmp	r2, r3
   2f8dc:	bne	2f8b4 <mcsync_spin_lock@@Base+0x14>
   2f8e0:	strex	ip, r1, [r0]
   2f8e4:	cmp	ip, #0
   2f8e8:	beq	2f8b4 <mcsync_spin_lock@@Base+0x14>
   2f8ec:	b	2f8d4 <mcsync_spin_lock@@Base+0x34>
   2f8f0:	mov	r0, #0
   2f8f4:	add	sp, sp, #8
   2f8f8:	bx	lr

0002f8fc <mcsync_spin_unlock@@Base>:
   2f8fc:	mcr	15, 0, r0, cr7, cr10, {5}
   2f900:	mov	r3, #0
   2f904:	str	r3, [r0]
   2f908:	mcr	15, 0, r0, cr7, cr10, {5}
   2f90c:	mov	r0, r3
   2f910:	bx	lr

0002f914 <mcsync_mutex_create@@Base>:
   2f914:	push	{r4, lr}
   2f918:	mov	r1, #24
   2f91c:	mov	r0, #1
   2f920:	bl	ff14 <mycore_calloc@plt>
   2f924:	pop	{r4, pc}

0002f928 <mcsync_mutex_init@@Base>:
   2f928:	push	{r4, lr}
   2f92c:	mov	r1, #0
   2f930:	bl	ffc8 <pthread_mutex_init@plt>
   2f934:	adds	r0, r0, #0
   2f938:	movne	r0, #1
   2f93c:	pop	{r4, pc}

0002f940 <mcsync_mutex_clean@@Base>:
   2f940:	bx	lr

0002f944 <mcsync_mutex_destroy@@Base>:
   2f944:	push	{r4, lr}
   2f948:	mov	r4, r0
   2f94c:	bl	fe00 <pthread_mutex_destroy@plt>
   2f950:	mov	r0, r4
   2f954:	bl	10dcc <mycore_free@plt>
   2f958:	pop	{r4, pc}

0002f95c <mcsync_mutex_lock@@Base>:
   2f95c:	push	{r4, lr}
   2f960:	bl	ff08 <pthread_mutex_lock@plt>
   2f964:	adds	r0, r0, #0
   2f968:	movne	r0, #1
   2f96c:	pop	{r4, pc}

0002f970 <mcsync_mutex_try_lock@@Base>:
   2f970:	push	{r4, lr}
   2f974:	bl	10034 <pthread_mutex_trylock@plt>
   2f978:	adds	r0, r0, #0
   2f97c:	movne	r0, #1
   2f980:	pop	{r4, pc}

0002f984 <mcsync_mutex_unlock@@Base>:
   2f984:	push	{r4, lr}
   2f988:	bl	fbc0 <pthread_mutex_unlock@plt>
   2f98c:	adds	r0, r0, #0
   2f990:	movne	r0, #1
   2f994:	pop	{r4, pc}
   2f998:	subs	r2, r1, #1
   2f99c:	bxeq	lr
   2f9a0:	bcc	2fb78 <mcsync_mutex_unlock@@Base+0x1f4>
   2f9a4:	cmp	r0, r1
   2f9a8:	bls	2fb5c <mcsync_mutex_unlock@@Base+0x1d8>
   2f9ac:	tst	r1, r2
   2f9b0:	beq	2fb68 <mcsync_mutex_unlock@@Base+0x1e4>
   2f9b4:	clz	r3, r0
   2f9b8:	clz	r2, r1
   2f9bc:	sub	r3, r2, r3
   2f9c0:	rsbs	r3, r3, #31
   2f9c4:	addne	r3, r3, r3, lsl #1
   2f9c8:	mov	r2, #0
   2f9cc:	addne	pc, pc, r3, lsl #2
   2f9d0:	nop			; (mov r0, r0)
   2f9d4:	cmp	r0, r1, lsl #31
   2f9d8:	adc	r2, r2, r2
   2f9dc:	subcs	r0, r0, r1, lsl #31
   2f9e0:	cmp	r0, r1, lsl #30
   2f9e4:	adc	r2, r2, r2
   2f9e8:	subcs	r0, r0, r1, lsl #30
   2f9ec:	cmp	r0, r1, lsl #29
   2f9f0:	adc	r2, r2, r2
   2f9f4:	subcs	r0, r0, r1, lsl #29
   2f9f8:	cmp	r0, r1, lsl #28
   2f9fc:	adc	r2, r2, r2
   2fa00:	subcs	r0, r0, r1, lsl #28
   2fa04:	cmp	r0, r1, lsl #27
   2fa08:	adc	r2, r2, r2
   2fa0c:	subcs	r0, r0, r1, lsl #27
   2fa10:	cmp	r0, r1, lsl #26
   2fa14:	adc	r2, r2, r2
   2fa18:	subcs	r0, r0, r1, lsl #26
   2fa1c:	cmp	r0, r1, lsl #25
   2fa20:	adc	r2, r2, r2
   2fa24:	subcs	r0, r0, r1, lsl #25
   2fa28:	cmp	r0, r1, lsl #24
   2fa2c:	adc	r2, r2, r2
   2fa30:	subcs	r0, r0, r1, lsl #24
   2fa34:	cmp	r0, r1, lsl #23
   2fa38:	adc	r2, r2, r2
   2fa3c:	subcs	r0, r0, r1, lsl #23
   2fa40:	cmp	r0, r1, lsl #22
   2fa44:	adc	r2, r2, r2
   2fa48:	subcs	r0, r0, r1, lsl #22
   2fa4c:	cmp	r0, r1, lsl #21
   2fa50:	adc	r2, r2, r2
   2fa54:	subcs	r0, r0, r1, lsl #21
   2fa58:	cmp	r0, r1, lsl #20
   2fa5c:	adc	r2, r2, r2
   2fa60:	subcs	r0, r0, r1, lsl #20
   2fa64:	cmp	r0, r1, lsl #19
   2fa68:	adc	r2, r2, r2
   2fa6c:	subcs	r0, r0, r1, lsl #19
   2fa70:	cmp	r0, r1, lsl #18
   2fa74:	adc	r2, r2, r2
   2fa78:	subcs	r0, r0, r1, lsl #18
   2fa7c:	cmp	r0, r1, lsl #17
   2fa80:	adc	r2, r2, r2
   2fa84:	subcs	r0, r0, r1, lsl #17
   2fa88:	cmp	r0, r1, lsl #16
   2fa8c:	adc	r2, r2, r2
   2fa90:	subcs	r0, r0, r1, lsl #16
   2fa94:	cmp	r0, r1, lsl #15
   2fa98:	adc	r2, r2, r2
   2fa9c:	subcs	r0, r0, r1, lsl #15
   2faa0:	cmp	r0, r1, lsl #14
   2faa4:	adc	r2, r2, r2
   2faa8:	subcs	r0, r0, r1, lsl #14
   2faac:	cmp	r0, r1, lsl #13
   2fab0:	adc	r2, r2, r2
   2fab4:	subcs	r0, r0, r1, lsl #13
   2fab8:	cmp	r0, r1, lsl #12
   2fabc:	adc	r2, r2, r2
   2fac0:	subcs	r0, r0, r1, lsl #12
   2fac4:	cmp	r0, r1, lsl #11
   2fac8:	adc	r2, r2, r2
   2facc:	subcs	r0, r0, r1, lsl #11
   2fad0:	cmp	r0, r1, lsl #10
   2fad4:	adc	r2, r2, r2
   2fad8:	subcs	r0, r0, r1, lsl #10
   2fadc:	cmp	r0, r1, lsl #9
   2fae0:	adc	r2, r2, r2
   2fae4:	subcs	r0, r0, r1, lsl #9
   2fae8:	cmp	r0, r1, lsl #8
   2faec:	adc	r2, r2, r2
   2faf0:	subcs	r0, r0, r1, lsl #8
   2faf4:	cmp	r0, r1, lsl #7
   2faf8:	adc	r2, r2, r2
   2fafc:	subcs	r0, r0, r1, lsl #7
   2fb00:	cmp	r0, r1, lsl #6
   2fb04:	adc	r2, r2, r2
   2fb08:	subcs	r0, r0, r1, lsl #6
   2fb0c:	cmp	r0, r1, lsl #5
   2fb10:	adc	r2, r2, r2
   2fb14:	subcs	r0, r0, r1, lsl #5
   2fb18:	cmp	r0, r1, lsl #4
   2fb1c:	adc	r2, r2, r2
   2fb20:	subcs	r0, r0, r1, lsl #4
   2fb24:	cmp	r0, r1, lsl #3
   2fb28:	adc	r2, r2, r2
   2fb2c:	subcs	r0, r0, r1, lsl #3
   2fb30:	cmp	r0, r1, lsl #2
   2fb34:	adc	r2, r2, r2
   2fb38:	subcs	r0, r0, r1, lsl #2
   2fb3c:	cmp	r0, r1, lsl #1
   2fb40:	adc	r2, r2, r2
   2fb44:	subcs	r0, r0, r1, lsl #1
   2fb48:	cmp	r0, r1
   2fb4c:	adc	r2, r2, r2
   2fb50:	subcs	r0, r0, r1
   2fb54:	mov	r0, r2
   2fb58:	bx	lr
   2fb5c:	moveq	r0, #1
   2fb60:	movne	r0, #0
   2fb64:	bx	lr
   2fb68:	clz	r2, r1
   2fb6c:	rsb	r2, r2, #31
   2fb70:	lsr	r0, r0, r2
   2fb74:	bx	lr
   2fb78:	cmp	r0, #0
   2fb7c:	mvnne	r0, #0
   2fb80:	b	2fba4 <mcsync_mutex_unlock@@Base+0x220>
   2fb84:	cmp	r1, #0
   2fb88:	beq	2fb78 <mcsync_mutex_unlock@@Base+0x1f4>
   2fb8c:	push	{r0, r1, lr}
   2fb90:	bl	2f998 <mcsync_mutex_unlock@@Base+0x14>
   2fb94:	pop	{r1, r2, lr}
   2fb98:	mul	r3, r2, r0
   2fb9c:	sub	r1, r1, r3
   2fba0:	bx	lr
   2fba4:	push	{r1, lr}
   2fba8:	mov	r0, #8
   2fbac:	bl	fc2c <raise@plt>
   2fbb0:	pop	{r1, pc}

Disassembly of section .fini:

0002fbb4 <.fini>:
   2fbb4:	push	{r3, lr}
   2fbb8:	pop	{r3, pc}
