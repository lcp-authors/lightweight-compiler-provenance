
../repos/coreutils/src/b2sum:     file format elf32-littlearm


Disassembly of section .init:

0001108c <.init>:
   1108c:	push	{r3, lr}
   11090:	bl	113c4 <__assert_fail@plt+0x48>
   11094:	pop	{r3, pc}

Disassembly of section .plt:

00011098 <fdopen@plt-0x14>:
   11098:	push	{lr}		; (str lr, [sp, #-4]!)
   1109c:	ldr	lr, [pc, #4]	; 110a8 <fdopen@plt-0x4>
   110a0:	add	lr, pc, lr
   110a4:	ldr	pc, [lr, #8]!
   110a8:	andeq	ip, r1, r8, asr pc

000110ac <fdopen@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #28, 20	; 0x1c000
   110b4:	ldr	pc, [ip, #3928]!	; 0xf58

000110b8 <calloc@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #28, 20	; 0x1c000
   110c0:	ldr	pc, [ip, #3920]!	; 0xf50

000110c4 <fputs_unlocked@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #28, 20	; 0x1c000
   110cc:	ldr	pc, [ip, #3912]!	; 0xf48

000110d0 <raise@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #28, 20	; 0x1c000
   110d8:	ldr	pc, [ip, #3904]!	; 0xf40

000110dc <strcmp@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #28, 20	; 0x1c000
   110e4:	ldr	pc, [ip, #3896]!	; 0xf38

000110e8 <posix_fadvise64@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #28, 20	; 0x1c000
   110f0:	ldr	pc, [ip, #3888]!	; 0xf30

000110f4 <fflush@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #28, 20	; 0x1c000
   110fc:	ldr	pc, [ip, #3880]!	; 0xf28

00011100 <free@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #28, 20	; 0x1c000
   11108:	ldr	pc, [ip, #3872]!	; 0xf20

0001110c <ferror@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #28, 20	; 0x1c000
   11114:	ldr	pc, [ip, #3864]!	; 0xf18

00011118 <_exit@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #28, 20	; 0x1c000
   11120:	ldr	pc, [ip, #3856]!	; 0xf10

00011124 <memcpy@plt>:
   11124:	add	ip, pc, #0, 12
   11128:	add	ip, ip, #28, 20	; 0x1c000
   1112c:	ldr	pc, [ip, #3848]!	; 0xf08

00011130 <mbsinit@plt>:
   11130:	add	ip, pc, #0, 12
   11134:	add	ip, ip, #28, 20	; 0x1c000
   11138:	ldr	pc, [ip, #3840]!	; 0xf00

0001113c <memcmp@plt>:
   1113c:	add	ip, pc, #0, 12
   11140:	add	ip, ip, #28, 20	; 0x1c000
   11144:	ldr	pc, [ip, #3832]!	; 0xef8

00011148 <dcgettext@plt>:
   11148:	add	ip, pc, #0, 12
   1114c:	add	ip, ip, #28, 20	; 0x1c000
   11150:	ldr	pc, [ip, #3824]!	; 0xef0

00011154 <realloc@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #28, 20	; 0x1c000
   1115c:	ldr	pc, [ip, #3816]!	; 0xee8

00011160 <textdomain@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #28, 20	; 0x1c000
   11168:	ldr	pc, [ip, #3808]!	; 0xee0

0001116c <iswprint@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #28, 20	; 0x1c000
   11174:	ldr	pc, [ip, #3800]!	; 0xed8

00011178 <lseek64@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #28, 20	; 0x1c000
   11180:	ldr	pc, [ip, #3792]!	; 0xed0

00011184 <__ctype_get_mb_cur_max@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #28, 20	; 0x1c000
   1118c:	ldr	pc, [ip, #3784]!	; 0xec8

00011190 <fread@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #28, 20	; 0x1c000
   11198:	ldr	pc, [ip, #3776]!	; 0xec0

0001119c <__fpending@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #28, 20	; 0x1c000
   111a4:	ldr	pc, [ip, #3768]!	; 0xeb8

000111a8 <ferror_unlocked@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #28, 20	; 0x1c000
   111b0:	ldr	pc, [ip, #3760]!	; 0xeb0

000111b4 <mbrtowc@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #28, 20	; 0x1c000
   111bc:	ldr	pc, [ip, #3752]!	; 0xea8

000111c0 <error@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #28, 20	; 0x1c000
   111c8:	ldr	pc, [ip, #3744]!	; 0xea0

000111cc <malloc@plt>:
   111cc:	add	ip, pc, #0, 12
   111d0:	add	ip, ip, #28, 20	; 0x1c000
   111d4:	ldr	pc, [ip, #3736]!	; 0xe98

000111d8 <__libc_start_main@plt>:
   111d8:	add	ip, pc, #0, 12
   111dc:	add	ip, ip, #28, 20	; 0x1c000
   111e0:	ldr	pc, [ip, #3728]!	; 0xe90

000111e4 <__freading@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #28, 20	; 0x1c000
   111ec:	ldr	pc, [ip, #3720]!	; 0xe88

000111f0 <__ctype_tolower_loc@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #28, 20	; 0x1c000
   111f8:	ldr	pc, [ip, #3712]!	; 0xe80

000111fc <__gmon_start__@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #28, 20	; 0x1c000
   11204:	ldr	pc, [ip, #3704]!	; 0xe78

00011208 <getopt_long@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #28, 20	; 0x1c000
   11210:	ldr	pc, [ip, #3696]!	; 0xe70

00011214 <__ctype_b_loc@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #28, 20	; 0x1c000
   1121c:	ldr	pc, [ip, #3688]!	; 0xe68

00011220 <exit@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #28, 20	; 0x1c000
   11228:	ldr	pc, [ip, #3680]!	; 0xe60

0001122c <feof@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #28, 20	; 0x1c000
   11234:	ldr	pc, [ip, #3672]!	; 0xe58

00011238 <strlen@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #28, 20	; 0x1c000
   11240:	ldr	pc, [ip, #3664]!	; 0xe50

00011244 <strchr@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #28, 20	; 0x1c000
   1124c:	ldr	pc, [ip, #3656]!	; 0xe48

00011250 <__errno_location@plt>:
   11250:	add	ip, pc, #0, 12
   11254:	add	ip, ip, #28, 20	; 0x1c000
   11258:	ldr	pc, [ip, #3648]!	; 0xe40

0001125c <__cxa_atexit@plt>:
   1125c:	add	ip, pc, #0, 12
   11260:	add	ip, ip, #28, 20	; 0x1c000
   11264:	ldr	pc, [ip, #3640]!	; 0xe38

00011268 <setvbuf@plt>:
   11268:	add	ip, pc, #0, 12
   1126c:	add	ip, ip, #28, 20	; 0x1c000
   11270:	ldr	pc, [ip, #3632]!	; 0xe30

00011274 <memset@plt>:
   11274:	add	ip, pc, #0, 12
   11278:	add	ip, ip, #28, 20	; 0x1c000
   1127c:	ldr	pc, [ip, #3624]!	; 0xe28

00011280 <__printf_chk@plt>:
   11280:	add	ip, pc, #0, 12
   11284:	add	ip, ip, #28, 20	; 0x1c000
   11288:	ldr	pc, [ip, #3616]!	; 0xe20

0001128c <fileno@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #28, 20	; 0x1c000
   11294:	ldr	pc, [ip, #3608]!	; 0xe18

00011298 <strtoumax@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #28, 20	; 0x1c000
   112a0:	ldr	pc, [ip, #3600]!	; 0xe10

000112a4 <__fprintf_chk@plt>:
   112a4:	add	ip, pc, #0, 12
   112a8:	add	ip, ip, #28, 20	; 0x1c000
   112ac:	ldr	pc, [ip, #3592]!	; 0xe08

000112b0 <fclose@plt>:
   112b0:	add	ip, pc, #0, 12
   112b4:	add	ip, ip, #28, 20	; 0x1c000
   112b8:	ldr	pc, [ip, #3584]!	; 0xe00

000112bc <fseeko64@plt>:
   112bc:	add	ip, pc, #0, 12
   112c0:	add	ip, ip, #28, 20	; 0x1c000
   112c4:	ldr	pc, [ip, #3576]!	; 0xdf8

000112c8 <fcntl64@plt>:
   112c8:	add	ip, pc, #0, 12
   112cc:	add	ip, ip, #28, 20	; 0x1c000
   112d0:	ldr	pc, [ip, #3568]!	; 0xdf0

000112d4 <setlocale@plt>:
   112d4:	add	ip, pc, #0, 12
   112d8:	add	ip, ip, #28, 20	; 0x1c000
   112dc:	ldr	pc, [ip, #3560]!	; 0xde8

000112e0 <strrchr@plt>:
   112e0:	add	ip, pc, #0, 12
   112e4:	add	ip, ip, #28, 20	; 0x1c000
   112e8:	ldr	pc, [ip, #3552]!	; 0xde0

000112ec <nl_langinfo@plt>:
   112ec:	add	ip, pc, #0, 12
   112f0:	add	ip, ip, #28, 20	; 0x1c000
   112f4:	ldr	pc, [ip, #3544]!	; 0xdd8

000112f8 <clearerr_unlocked@plt>:
   112f8:	add	ip, pc, #0, 12
   112fc:	add	ip, ip, #28, 20	; 0x1c000
   11300:	ldr	pc, [ip, #3536]!	; 0xdd0

00011304 <fopen64@plt>:
   11304:	add	ip, pc, #0, 12
   11308:	add	ip, ip, #28, 20	; 0x1c000
   1130c:	ldr	pc, [ip, #3528]!	; 0xdc8

00011310 <bindtextdomain@plt>:
   11310:	add	ip, pc, #0, 12
   11314:	add	ip, ip, #28, 20	; 0x1c000
   11318:	ldr	pc, [ip, #3520]!	; 0xdc0

0001131c <getline@plt>:
   1131c:	add	ip, pc, #0, 12
   11320:	add	ip, ip, #28, 20	; 0x1c000
   11324:	ldr	pc, [ip, #3512]!	; 0xdb8

00011328 <fputs@plt>:
   11328:	add	ip, pc, #0, 12
   1132c:	add	ip, ip, #28, 20	; 0x1c000
   11330:	ldr	pc, [ip, #3504]!	; 0xdb0

00011334 <strncmp@plt>:
   11334:	add	ip, pc, #0, 12
   11338:	add	ip, ip, #28, 20	; 0x1c000
   1133c:	ldr	pc, [ip, #3496]!	; 0xda8

00011340 <abort@plt>:
   11340:	add	ip, pc, #0, 12
   11344:	add	ip, ip, #28, 20	; 0x1c000
   11348:	ldr	pc, [ip, #3488]!	; 0xda0

0001134c <feof_unlocked@plt>:
   1134c:	add	ip, pc, #0, 12
   11350:	add	ip, ip, #28, 20	; 0x1c000
   11354:	ldr	pc, [ip, #3480]!	; 0xd98

00011358 <close@plt>:
   11358:	add	ip, pc, #0, 12
   1135c:	add	ip, ip, #28, 20	; 0x1c000
   11360:	ldr	pc, [ip, #3472]!	; 0xd90

00011364 <dcngettext@plt>:
   11364:	add	ip, pc, #0, 12
   11368:	add	ip, ip, #28, 20	; 0x1c000
   1136c:	ldr	pc, [ip, #3464]!	; 0xd88

00011370 <putchar_unlocked@plt>:
   11370:	add	ip, pc, #0, 12
   11374:	add	ip, ip, #28, 20	; 0x1c000
   11378:	ldr	pc, [ip, #3456]!	; 0xd80

0001137c <__assert_fail@plt>:
   1137c:	add	ip, pc, #0, 12
   11380:	add	ip, ip, #28, 20	; 0x1c000
   11384:	ldr	pc, [ip, #3448]!	; 0xd78

Disassembly of section .text:

00011388 <.text>:
   11388:	mov	fp, #0
   1138c:	mov	lr, #0
   11390:	pop	{r1}		; (ldr r1, [sp], #4)
   11394:	mov	r2, sp
   11398:	push	{r2}		; (str r2, [sp, #-4]!)
   1139c:	push	{r0}		; (str r0, [sp, #-4]!)
   113a0:	ldr	ip, [pc, #16]	; 113b8 <__assert_fail@plt+0x3c>
   113a4:	push	{ip}		; (str ip, [sp, #-4]!)
   113a8:	ldr	r0, [pc, #12]	; 113bc <__assert_fail@plt+0x40>
   113ac:	ldr	r3, [pc, #12]	; 113c0 <__assert_fail@plt+0x44>
   113b0:	bl	111d8 <__libc_start_main@plt>
   113b4:	bl	11340 <abort@plt>
   113b8:			; <UNDEFINED> instruction: 0x0001c4b8
   113bc:	andeq	r1, r1, ip, ror #15
   113c0:	andeq	ip, r1, r8, asr r4
   113c4:	ldr	r3, [pc, #20]	; 113e0 <__assert_fail@plt+0x64>
   113c8:	ldr	r2, [pc, #20]	; 113e4 <__assert_fail@plt+0x68>
   113cc:	add	r3, pc, r3
   113d0:	ldr	r2, [r3, r2]
   113d4:	cmp	r2, #0
   113d8:	bxeq	lr
   113dc:	b	111fc <__gmon_start__@plt>
   113e0:	andeq	ip, r1, ip, lsr #24
   113e4:	andeq	r0, r0, r0, lsl #2
   113e8:	ldr	r0, [pc, #24]	; 11408 <__assert_fail@plt+0x8c>
   113ec:	ldr	r3, [pc, #24]	; 1140c <__assert_fail@plt+0x90>
   113f0:	cmp	r3, r0
   113f4:	bxeq	lr
   113f8:	ldr	r3, [pc, #16]	; 11410 <__assert_fail@plt+0x94>
   113fc:	cmp	r3, #0
   11400:	bxeq	lr
   11404:	bx	r3
   11408:	andeq	lr, r2, r0, ror #2
   1140c:	andeq	lr, r2, r0, ror #2
   11410:	andeq	r0, r0, r0
   11414:	ldr	r0, [pc, #36]	; 11440 <__assert_fail@plt+0xc4>
   11418:	ldr	r1, [pc, #36]	; 11444 <__assert_fail@plt+0xc8>
   1141c:	sub	r1, r1, r0
   11420:	asr	r1, r1, #2
   11424:	add	r1, r1, r1, lsr #31
   11428:	asrs	r1, r1, #1
   1142c:	bxeq	lr
   11430:	ldr	r3, [pc, #16]	; 11448 <__assert_fail@plt+0xcc>
   11434:	cmp	r3, #0
   11438:	bxeq	lr
   1143c:	bx	r3
   11440:	andeq	lr, r2, r0, ror #2
   11444:	andeq	lr, r2, r0, ror #2
   11448:	andeq	r0, r0, r0
   1144c:	push	{r4, lr}
   11450:	ldr	r4, [pc, #24]	; 11470 <__assert_fail@plt+0xf4>
   11454:	ldrb	r3, [r4]
   11458:	cmp	r3, #0
   1145c:	popne	{r4, pc}
   11460:	bl	113e8 <__assert_fail@plt+0x6c>
   11464:	mov	r3, #1
   11468:	strb	r3, [r4]
   1146c:	pop	{r4, pc}
   11470:	andeq	lr, r2, r4, lsl #3
   11474:	b	11414 <__assert_fail@plt+0x98>
   11478:	push	{fp, lr}
   1147c:	mov	fp, sp
   11480:	sub	sp, sp, #56	; 0x38
   11484:	mov	r8, r0
   11488:	cmp	r0, #0
   1148c:	bne	117ac <__assert_fail@plt+0x430>
   11490:	movw	r1, #50443	; 0xc50b
   11494:	mov	r0, #0
   11498:	mov	r2, #5
   1149c:	movt	r1, #1
   114a0:	bl	11148 <dcgettext@plt>
   114a4:	mov	r1, r0
   114a8:	movw	r0, #57772	; 0xe1ac
   114ac:	movt	r0, #2
   114b0:	ldr	r2, [r0]
   114b4:	mov	r0, #1
   114b8:	bl	11280 <__printf_chk@plt>
   114bc:	movw	r1, #50476	; 0xc52c
   114c0:	mov	r0, #0
   114c4:	mov	r2, #5
   114c8:	movt	r1, #1
   114cc:	bl	11148 <dcgettext@plt>
   114d0:	movw	r2, #50515	; 0xc553
   114d4:	mov	r1, r0
   114d8:	mov	r0, #1
   114dc:	mov	r3, #512	; 0x200
   114e0:	movt	r2, #1
   114e4:	bl	11280 <__printf_chk@plt>
   114e8:	movw	r1, #52693	; 0xcdd5
   114ec:	mov	r0, #0
   114f0:	mov	r2, #5
   114f4:	movt	r1, #1
   114f8:	bl	11148 <dcgettext@plt>
   114fc:	movw	r9, #57724	; 0xe17c
   11500:	movt	r9, #2
   11504:	ldr	r1, [r9]
   11508:	bl	110c4 <fputs_unlocked@plt>
   1150c:	movw	r1, #52749	; 0xce0d
   11510:	mov	r0, #0
   11514:	mov	r2, #5
   11518:	movt	r1, #1
   1151c:	bl	11148 <dcgettext@plt>
   11520:	ldr	r1, [r9]
   11524:	bl	110c4 <fputs_unlocked@plt>
   11528:	movw	r1, #50523	; 0xc55b
   1152c:	mov	r0, #0
   11530:	mov	r2, #5
   11534:	movt	r1, #1
   11538:	bl	11148 <dcgettext@plt>
   1153c:	ldr	r1, [r9]
   11540:	bl	110c4 <fputs_unlocked@plt>
   11544:	movw	r1, #50568	; 0xc588
   11548:	mov	r0, #0
   1154c:	mov	r2, #5
   11550:	movt	r1, #1
   11554:	bl	11148 <dcgettext@plt>
   11558:	ldr	r1, [r9]
   1155c:	bl	110c4 <fputs_unlocked@plt>
   11560:	movw	r1, #50638	; 0xc5ce
   11564:	mov	r0, #0
   11568:	mov	r2, #5
   1156c:	movt	r1, #1
   11570:	bl	11148 <dcgettext@plt>
   11574:	ldr	r1, [r9]
   11578:	bl	110c4 <fputs_unlocked@plt>
   1157c:	movw	r1, #50789	; 0xc665
   11580:	mov	r0, #0
   11584:	mov	r2, #5
   11588:	movt	r1, #1
   1158c:	bl	11148 <dcgettext@plt>
   11590:	ldr	r1, [r9]
   11594:	bl	110c4 <fputs_unlocked@plt>
   11598:	movw	r1, #50842	; 0xc69a
   1159c:	mov	r0, #0
   115a0:	mov	r2, #5
   115a4:	movt	r1, #1
   115a8:	bl	11148 <dcgettext@plt>
   115ac:	ldr	r1, [r9]
   115b0:	bl	110c4 <fputs_unlocked@plt>
   115b4:	movw	r1, #50895	; 0xc6cf
   115b8:	mov	r0, #0
   115bc:	mov	r2, #5
   115c0:	movt	r1, #1
   115c4:	bl	11148 <dcgettext@plt>
   115c8:	ldr	r1, [r9]
   115cc:	bl	110c4 <fputs_unlocked@plt>
   115d0:	movw	r1, #51021	; 0xc74d
   115d4:	mov	r0, #0
   115d8:	mov	r2, #5
   115dc:	movt	r1, #1
   115e0:	bl	11148 <dcgettext@plt>
   115e4:	ldr	r1, [r9]
   115e8:	bl	110c4 <fputs_unlocked@plt>
   115ec:	movw	r1, #51460	; 0xc904
   115f0:	mov	r0, #0
   115f4:	mov	r2, #5
   115f8:	movt	r1, #1
   115fc:	bl	11148 <dcgettext@plt>
   11600:	ldr	r1, [r9]
   11604:	bl	110c4 <fputs_unlocked@plt>
   11608:	movw	r1, #51505	; 0xc931
   1160c:	mov	r0, #0
   11610:	mov	r2, #5
   11614:	movt	r1, #1
   11618:	bl	11148 <dcgettext@plt>
   1161c:	ldr	r1, [r9]
   11620:	bl	110c4 <fputs_unlocked@plt>
   11624:	movw	r1, #51559	; 0xc967
   11628:	mov	r0, #0
   1162c:	mov	r2, #5
   11630:	movt	r1, #1
   11634:	bl	11148 <dcgettext@plt>
   11638:	movw	r2, #51603	; 0xc993
   1163c:	mov	r1, r0
   11640:	mov	r0, #1
   11644:	movt	r2, #1
   11648:	bl	11280 <__printf_chk@plt>
   1164c:	movw	r1, #51612	; 0xc99c
   11650:	mov	r0, #0
   11654:	mov	r2, #5
   11658:	movt	r1, #1
   1165c:	bl	11148 <dcgettext@plt>
   11660:	ldr	r1, [r9]
   11664:	bl	110c4 <fputs_unlocked@plt>
   11668:	movw	r0, #53936	; 0xd2b0
   1166c:	mov	r6, sp
   11670:	movt	r0, #1
   11674:	mov	r1, r6
   11678:	ldm	r0!, {r2, r3, r4, r5}
   1167c:	stmia	r1!, {r2, r3, r4, r5}
   11680:	ldm	r0!, {r2, r3, r4, r5, r7}
   11684:	stmia	r1!, {r2, r3, r4, r5, r7}
   11688:	ldm	r0, {r2, r3, r4, r5, r7}
   1168c:	stm	r1, {r2, r3, r4, r5, r7}
   11690:	movw	r1, #52824	; 0xce58
   11694:	movw	r5, #51945	; 0xcae9
   11698:	movt	r1, #1
   1169c:	movt	r5, #1
   116a0:	mov	r0, r5
   116a4:	bl	110dc <strcmp@plt>
   116a8:	cmp	r0, #0
   116ac:	ldrne	r1, [r6, #8]!
   116b0:	cmpne	r1, #0
   116b4:	bne	116a0 <__assert_fail@plt+0x324>
   116b8:	ldr	r6, [r6, #4]
   116bc:	movw	r1, #52919	; 0xceb7
   116c0:	mov	r0, #0
   116c4:	mov	r2, #5
   116c8:	movt	r1, #1
   116cc:	bl	11148 <dcgettext@plt>
   116d0:	movw	r2, #52047	; 0xcb4f
   116d4:	movw	r3, #52942	; 0xcece
   116d8:	mov	r1, r0
   116dc:	mov	r0, #1
   116e0:	movt	r2, #1
   116e4:	movt	r3, #1
   116e8:	bl	11280 <__printf_chk@plt>
   116ec:	cmp	r6, #0
   116f0:	mov	r0, #5
   116f4:	mov	r1, #0
   116f8:	moveq	r6, r5
   116fc:	bl	112d4 <setlocale@plt>
   11700:	cmp	r0, #0
   11704:	beq	1173c <__assert_fail@plt+0x3c0>
   11708:	movw	r1, #52982	; 0xcef6
   1170c:	mov	r2, #3
   11710:	movt	r1, #1
   11714:	bl	11334 <strncmp@plt>
   11718:	cmp	r0, #0
   1171c:	beq	1173c <__assert_fail@plt+0x3c0>
   11720:	movw	r1, #52986	; 0xcefa
   11724:	mov	r0, #0
   11728:	mov	r2, #5
   1172c:	movt	r1, #1
   11730:	bl	11148 <dcgettext@plt>
   11734:	ldr	r1, [r9]
   11738:	bl	110c4 <fputs_unlocked@plt>
   1173c:	movw	r1, #53057	; 0xcf41
   11740:	mov	r0, #0
   11744:	mov	r2, #5
   11748:	movt	r1, #1
   1174c:	bl	11148 <dcgettext@plt>
   11750:	movw	r2, #52942	; 0xcece
   11754:	mov	r1, r0
   11758:	mov	r0, #1
   1175c:	mov	r3, r5
   11760:	movt	r2, #1
   11764:	bl	11280 <__printf_chk@plt>
   11768:	movw	r1, #53084	; 0xcf5c
   1176c:	mov	r0, #0
   11770:	mov	r2, #5
   11774:	movt	r1, #1
   11778:	bl	11148 <dcgettext@plt>
   1177c:	movw	r3, #51459	; 0xc903
   11780:	mov	r1, r0
   11784:	movw	r0, #52852	; 0xce74
   11788:	cmp	r6, r5
   1178c:	mov	r2, r6
   11790:	movt	r0, #1
   11794:	movt	r3, #1
   11798:	moveq	r3, r0
   1179c:	mov	r0, #1
   117a0:	bl	11280 <__printf_chk@plt>
   117a4:	mov	r0, r8
   117a8:	bl	11220 <exit@plt>
   117ac:	movw	r0, #57712	; 0xe170
   117b0:	movw	r1, #50404	; 0xc4e4
   117b4:	mov	r2, #5
   117b8:	movt	r0, #2
   117bc:	movt	r1, #1
   117c0:	ldr	r5, [r0]
   117c4:	mov	r0, #0
   117c8:	bl	11148 <dcgettext@plt>
   117cc:	mov	r2, r0
   117d0:	movw	r0, #57772	; 0xe1ac
   117d4:	mov	r1, #1
   117d8:	movt	r0, #2
   117dc:	ldr	r3, [r0]
   117e0:	mov	r0, r5
   117e4:	bl	112a4 <__fprintf_chk@plt>
   117e8:	b	117a4 <__assert_fail@plt+0x428>
   117ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   117f0:	add	fp, sp, #28
   117f4:	sub	sp, sp, #300	; 0x12c
   117f8:	mov	sl, r0
   117fc:	ldr	r0, [r1]
   11800:	mov	r4, r1
   11804:	bl	1919c <__assert_fail@plt+0x7e20>
   11808:	movw	r7, #51459	; 0xc903
   1180c:	mov	r0, #6
   11810:	movt	r7, #1
   11814:	mov	r1, r7
   11818:	bl	112d4 <setlocale@plt>
   1181c:	movw	r6, #52051	; 0xcb53
   11820:	movw	r1, #51951	; 0xcaef
   11824:	movt	r6, #1
   11828:	movt	r1, #1
   1182c:	mov	r0, r6
   11830:	bl	11310 <bindtextdomain@plt>
   11834:	mov	r0, r6
   11838:	bl	11160 <textdomain@plt>
   1183c:	movw	r0, #36356	; 0x8e04
   11840:	movt	r0, #1
   11844:	bl	1c4bc <__assert_fail@plt+0xb140>
   11848:	movw	r0, #57724	; 0xe17c
   1184c:	mov	r1, #0
   11850:	mov	r2, #1
   11854:	mov	r3, #0
   11858:	mov	r9, #0
   1185c:	movt	r0, #2
   11860:	ldr	r0, [r0]
   11864:	bl	11268 <setvbuf@plt>
   11868:	add	r0, sp, #132	; 0x84
   1186c:	movw	r6, #51975	; 0xcb07
   11870:	movw	r5, #53712	; 0xd1d0
   11874:	str	r7, [sp, #128]	; 0x80
   11878:	mvn	r8, #0
   1187c:	mov	r7, #1
   11880:	add	r0, r0, #7
   11884:	movt	r6, #1
   11888:	movt	r5, #1
   1188c:	and	r1, r0, #7
   11890:	sub	r0, r0, r1
   11894:	str	r1, [sp, #124]	; 0x7c
   11898:	mov	r1, #0
   1189c:	str	r0, [sp, #48]	; 0x30
   118a0:	mov	r0, #0
   118a4:	str	r0, [sp, #56]	; 0x38
   118a8:	b	11978 <__assert_fail@plt+0x5fc>
   118ac:	ldr	r1, [sp, #104]	; 0x68
   118b0:	mov	r8, #1
   118b4:	b	11978 <__assert_fail@plt+0x5fc>
   118b8:	cmp	r0, #119	; 0x77
   118bc:	bne	118f0 <__assert_fail@plt+0x574>
   118c0:	movw	r0, #57745	; 0xe191
   118c4:	movt	r0, #2
   118c8:	strb	r7, [r0]
   118cc:	movw	r0, #57744	; 0xe190
   118d0:	movt	r0, #2
   118d4:	strb	r9, [r0]
   118d8:	b	11968 <__assert_fail@plt+0x5ec>
   118dc:	cmp	r0, #116	; 0x74
   118e0:	bne	12d50 <__assert_fail@plt+0x19d4>
   118e4:	ldr	r1, [sp, #104]	; 0x68
   118e8:	mov	r8, #0
   118ec:	b	11978 <__assert_fail@plt+0x5fc>
   118f0:	cmp	r0, #122	; 0x7a
   118f4:	bne	12d50 <__assert_fail@plt+0x19d4>
   118f8:	movw	r0, #57749	; 0xe195
   118fc:	movt	r0, #2
   11900:	b	11944 <__assert_fail@plt+0x5c8>
   11904:	ldr	r1, [sp, #104]	; 0x68
   11908:	mov	r0, #1
   1190c:	mov	r8, #1
   11910:	str	r0, [sp, #56]	; 0x38
   11914:	b	11978 <__assert_fail@plt+0x5fc>
   11918:	movw	r0, #57745	; 0xe191
   1191c:	movt	r0, #2
   11920:	strb	r9, [r0]
   11924:	movw	r0, #57744	; 0xe190
   11928:	movt	r0, #2
   1192c:	strb	r9, [r0]
   11930:	movw	r0, #57746	; 0xe192
   11934:	movt	r0, #2
   11938:	b	11944 <__assert_fail@plt+0x5c8>
   1193c:	movw	r0, #57748	; 0xe194
   11940:	movt	r0, #2
   11944:	ldr	r1, [sp, #104]	; 0x68
   11948:	strb	r7, [r0]
   1194c:	b	11978 <__assert_fail@plt+0x5fc>
   11950:	movw	r0, #57745	; 0xe191
   11954:	movt	r0, #2
   11958:	strb	r9, [r0]
   1195c:	movw	r0, #57744	; 0xe190
   11960:	movt	r0, #2
   11964:	strb	r7, [r0]
   11968:	ldr	r1, [sp, #104]	; 0x68
   1196c:	movw	r0, #57746	; 0xe192
   11970:	movt	r0, #2
   11974:	strb	r9, [r0]
   11978:	str	r1, [sp, #104]	; 0x68
   1197c:	mov	r0, sl
   11980:	mov	r1, r4
   11984:	mov	r2, r6
   11988:	mov	r3, r5
   1198c:	str	r9, [sp]
   11990:	bl	11208 <getopt_long@plt>
   11994:	cmp	r0, #118	; 0x76
   11998:	bgt	11a38 <__assert_fail@plt+0x6bc>
   1199c:	cmp	r0, #98	; 0x62
   119a0:	ble	11a6c <__assert_fail@plt+0x6f0>
   119a4:	cmp	r0, #99	; 0x63
   119a8:	mov	r1, #1
   119ac:	beq	11978 <__assert_fail@plt+0x5fc>
   119b0:	cmp	r0, #108	; 0x6c
   119b4:	bne	118dc <__assert_fail@plt+0x560>
   119b8:	movw	r0, #57728	; 0xe180
   119bc:	movw	r1, #51983	; 0xcb0f
   119c0:	mov	r2, #5
   119c4:	movt	r0, #2
   119c8:	movt	r1, #1
   119cc:	ldr	r7, [r0]
   119d0:	mov	r0, #0
   119d4:	bl	11148 <dcgettext@plt>
   119d8:	mvn	r1, #0
   119dc:	str	r0, [sp, #12]
   119e0:	mov	r0, r7
   119e4:	mov	r2, #0
   119e8:	mov	r3, #0
   119ec:	str	r9, [sp, #16]
   119f0:	mov	r7, #1
   119f4:	str	r1, [sp]
   119f8:	str	r1, [sp, #4]
   119fc:	movw	r1, #51459	; 0xc903
   11a00:	movt	r1, #1
   11a04:	str	r1, [sp, #8]
   11a08:	bl	1b72c <__assert_fail@plt+0xa3b0>
   11a0c:	movw	r2, #57736	; 0xe188
   11a10:	tst	r0, #7
   11a14:	movt	r2, #2
   11a18:	strd	r0, [r2]
   11a1c:	movw	r1, #57728	; 0xe180
   11a20:	movt	r1, #2
   11a24:	ldr	r1, [r1]
   11a28:	str	r1, [sp, #128]	; 0x80
   11a2c:	ldr	r1, [sp, #104]	; 0x68
   11a30:	beq	11978 <__assert_fail@plt+0x5fc>
   11a34:	b	12c0c <__assert_fail@plt+0x1890>
   11a38:	sub	r1, r0, #256	; 0x100
   11a3c:	cmp	r1, #4
   11a40:	bhi	118b8 <__assert_fail@plt+0x53c>
   11a44:	add	r0, pc, #0
   11a48:	ldr	pc, [r0, r1, lsl #2]
   11a4c:	andeq	r1, r1, r0, ror #20
   11a50:	andeq	r1, r1, r0, asr r9
   11a54:	andeq	r1, r1, r8, lsl r9
   11a58:	andeq	r1, r1, ip, lsr r9
   11a5c:	andeq	r1, r1, r4, lsl #18
   11a60:	movw	r0, #57747	; 0xe193
   11a64:	movt	r0, #2
   11a68:	b	11944 <__assert_fail@plt+0x5c8>
   11a6c:	cmp	r0, #97	; 0x61
   11a70:	bgt	118ac <__assert_fail@plt+0x530>
   11a74:	cmn	r0, #1
   11a78:	bne	12ba0 <__assert_fail@plt+0x1824>
   11a7c:	movw	r1, #57752	; 0xe198
   11a80:	mov	r0, #1
   11a84:	ldr	r9, [sp, #104]	; 0x68
   11a88:	movw	r2, #513	; 0x201
   11a8c:	movt	r1, #2
   11a90:	strb	r0, [r1]
   11a94:	movw	r0, #57736	; 0xe188
   11a98:	movt	r0, #2
   11a9c:	ldrd	r0, [r0]
   11aa0:	subs	r2, r0, r2
   11aa4:	sbcs	r2, r1, #0
   11aa8:	bcs	12c64 <__assert_fail@plt+0x18e8>
   11aac:	orrs	r2, r0, r1
   11ab0:	beq	11ac0 <__assert_fail@plt+0x744>
   11ab4:	lsr	r0, r0, #2
   11ab8:	orr	r0, r0, r1, lsl #30
   11abc:	b	11ad8 <__assert_fail@plt+0x75c>
   11ac0:	movw	r2, #57736	; 0xe188
   11ac4:	mov	r1, #0
   11ac8:	mov	r0, #512	; 0x200
   11acc:	movt	r2, #2
   11ad0:	strd	r0, [r2]
   11ad4:	mov	r0, #128	; 0x80
   11ad8:	movw	r7, #57756	; 0xe19c
   11adc:	cmp	r8, #0
   11ae0:	movt	r7, #2
   11ae4:	str	r0, [r7]
   11ae8:	ldr	r0, [sp, #56]	; 0x38
   11aec:	eor	r1, r0, #1
   11af0:	tsteq	r1, #1
   11af4:	beq	12ccc <__assert_fail@plt+0x1950>
   11af8:	eor	r0, r9, #1
   11afc:	tst	r0, #1
   11b00:	bne	11b18 <__assert_fail@plt+0x79c>
   11b04:	movw	r2, #57749	; 0xe195
   11b08:	movt	r2, #2
   11b0c:	ldrb	r2, [r2]
   11b10:	cmp	r2, #0
   11b14:	bne	12cd8 <__assert_fail@plt+0x195c>
   11b18:	orr	r1, r1, r0
   11b1c:	tst	r1, #1
   11b20:	beq	12ce4 <__assert_fail@plt+0x1968>
   11b24:	mov	r1, #0
   11b28:	cmp	r8, #0
   11b2c:	movwlt	r1, #1
   11b30:	orr	r1, r1, r0
   11b34:	tst	r1, #1
   11b38:	beq	12cf0 <__assert_fail@plt+0x1974>
   11b3c:	movw	r1, #57747	; 0xe193
   11b40:	movt	r1, #2
   11b44:	ldrb	r1, [r1]
   11b48:	mvn	r1, r1
   11b4c:	orr	r1, r9, r1
   11b50:	tst	r1, #1
   11b54:	beq	12cfc <__assert_fail@plt+0x1980>
   11b58:	movw	r1, #57744	; 0xe190
   11b5c:	movt	r1, #2
   11b60:	ldrb	r1, [r1]
   11b64:	mvn	r1, r1
   11b68:	orr	r1, r9, r1
   11b6c:	tst	r1, #1
   11b70:	beq	12d08 <__assert_fail@plt+0x198c>
   11b74:	movw	r1, #57745	; 0xe191
   11b78:	movt	r1, #2
   11b7c:	ldrb	r1, [r1]
   11b80:	mvn	r1, r1
   11b84:	orr	r1, r9, r1
   11b88:	tst	r1, #1
   11b8c:	beq	12d14 <__assert_fail@plt+0x1998>
   11b90:	movw	r1, #57746	; 0xe192
   11b94:	movt	r1, #2
   11b98:	ldrb	r1, [r1]
   11b9c:	mvn	r1, r1
   11ba0:	orr	r1, r9, r1
   11ba4:	tst	r1, #1
   11ba8:	beq	12d20 <__assert_fail@plt+0x19a4>
   11bac:	movw	r1, #57748	; 0xe194
   11bb0:	movt	r1, #2
   11bb4:	ldrb	r1, [r1]
   11bb8:	and	r0, r1, r0
   11bbc:	tst	r0, #1
   11bc0:	bne	12d2c <__assert_fail@plt+0x19b0>
   11bc4:	movw	r0, #57704	; 0xe168
   11bc8:	add	r6, r4, sl, lsl #2
   11bcc:	movt	r0, #2
   11bd0:	ldr	r0, [r0]
   11bd4:	cmp	r0, sl
   11bd8:	add	r4, r4, r0, lsl #2
   11bdc:	mov	sl, #1
   11be0:	movweq	r1, #54176	; 0xd3a0
   11be4:	movteq	r1, #1
   11be8:	streq	r1, [r6], #4
   11bec:	cmp	r4, r6
   11bf0:	bcs	12b28 <__assert_fail@plt+0x17ac>
   11bf4:	mov	r0, #42	; 0x2a
   11bf8:	cmp	r8, #1
   11bfc:	add	r1, sp, #132	; 0x84
   11c00:	sub	r2, fp, #116	; 0x74
   11c04:	mov	sl, #1
   11c08:	str	r6, [sp, #52]	; 0x34
   11c0c:	movwlt	r0, #32
   11c10:	str	r0, [sp, #28]
   11c14:	ldr	r0, [sp, #124]	; 0x7c
   11c18:	rsb	r0, r0, #7
   11c1c:	add	r0, r1, r0
   11c20:	str	r0, [sp, #32]
   11c24:	add	r0, r2, #7
   11c28:	and	r1, r0, #7
   11c2c:	sub	r0, r0, r1
   11c30:	str	r0, [sp, #20]
   11c34:	rsb	r0, r1, #7
   11c38:	add	r0, r2, r0
   11c3c:	str	r0, [sp, #24]
   11c40:	ldr	r5, [r4]
   11c44:	tst	r9, #1
   11c48:	beq	11ca8 <__assert_fail@plt+0x92c>
   11c4c:	movw	r1, #54176	; 0xd3a0
   11c50:	mov	r0, r5
   11c54:	mov	r8, r7
   11c58:	mov	r7, r9
   11c5c:	mov	r9, r6
   11c60:	movt	r1, #1
   11c64:	bl	110dc <strcmp@plt>
   11c68:	mov	r6, r0
   11c6c:	cmp	r0, #0
   11c70:	str	r4, [sp, #96]	; 0x60
   11c74:	str	sl, [sp, #92]	; 0x5c
   11c78:	beq	11e44 <__assert_fail@plt+0xac8>
   11c7c:	movw	r1, #53682	; 0xd1b2
   11c80:	mov	r0, r5
   11c84:	movt	r1, #1
   11c88:	bl	19024 <__assert_fail@plt+0x7ca8>
   11c8c:	cmp	r0, #0
   11c90:	beq	11eec <__assert_fail@plt+0xb70>
   11c94:	mov	r7, r0
   11c98:	mov	r1, r0
   11c9c:	str	r6, [sp, #68]	; 0x44
   11ca0:	str	r5, [sp, #88]	; 0x58
   11ca4:	b	11e7c <__assert_fail@plt+0xb00>
   11ca8:	ldr	r1, [sp, #48]	; 0x30
   11cac:	mov	r0, r5
   11cb0:	sub	r2, fp, #116	; 0x74
   11cb4:	bl	12d84 <__assert_fail@plt+0x1a08>
   11cb8:	mov	r1, #0
   11cbc:	cmp	r0, #0
   11cc0:	beq	11e3c <__assert_fail@plt+0xac0>
   11cc4:	movw	r0, #57749	; 0xe195
   11cc8:	str	r4, [sp, #96]	; 0x60
   11ccc:	mov	r4, #10
   11cd0:	str	sl, [sp, #92]	; 0x5c
   11cd4:	mov	sl, #0
   11cd8:	movt	r0, #2
   11cdc:	ldrb	r0, [r0]
   11ce0:	cmp	r0, #0
   11ce4:	movwne	r4, #0
   11ce8:	bne	11d34 <__assert_fail@plt+0x9b8>
   11cec:	mov	r0, r5
   11cf0:	mov	r1, #92	; 0x5c
   11cf4:	bl	11244 <strchr@plt>
   11cf8:	cmp	r0, #0
   11cfc:	bne	11d28 <__assert_fail@plt+0x9ac>
   11d00:	mov	r0, r5
   11d04:	mov	r1, #10
   11d08:	bl	11244 <strchr@plt>
   11d0c:	cmp	r0, #0
   11d10:	bne	11d28 <__assert_fail@plt+0x9ac>
   11d14:	mov	r0, r5
   11d18:	mov	r1, #13
   11d1c:	bl	11244 <strchr@plt>
   11d20:	cmp	r0, #0
   11d24:	beq	11d34 <__assert_fail@plt+0x9b8>
   11d28:	mov	r0, #92	; 0x5c
   11d2c:	bl	11370 <putchar_unlocked@plt>
   11d30:	mov	sl, #1
   11d34:	ldr	r0, [sp, #56]	; 0x38
   11d38:	tst	r0, #1
   11d3c:	beq	11dc0 <__assert_fail@plt+0xa44>
   11d40:	movw	r0, #57724	; 0xe17c
   11d44:	movt	r0, #2
   11d48:	ldr	r1, [r0]
   11d4c:	movw	r0, #50515	; 0xc553
   11d50:	movt	r0, #1
   11d54:	bl	110c4 <fputs_unlocked@plt>
   11d58:	movw	r0, #57736	; 0xe188
   11d5c:	movt	r0, #2
   11d60:	ldrd	r2, [r0]
   11d64:	lsr	r0, r2, #9
   11d68:	orr	r0, r0, r3, lsl #23
   11d6c:	orr	r0, r0, r3, lsr #9
   11d70:	cmp	r0, #0
   11d74:	bne	11d88 <__assert_fail@plt+0xa0c>
   11d78:	movw	r1, #53687	; 0xd1b7
   11d7c:	mov	r0, #1
   11d80:	movt	r1, #1
   11d84:	bl	11280 <__printf_chk@plt>
   11d88:	movw	r0, #57724	; 0xe17c
   11d8c:	movt	r0, #2
   11d90:	ldr	r1, [r0]
   11d94:	mov	r6, r0
   11d98:	movw	r0, #53693	; 0xd1bd
   11d9c:	movt	r0, #1
   11da0:	bl	110c4 <fputs_unlocked@plt>
   11da4:	mov	r0, r5
   11da8:	mov	r1, sl
   11dac:	bl	12f00 <__assert_fail@plt+0x1b84>
   11db0:	ldr	r1, [r6]
   11db4:	movw	r0, #53696	; 0xd1c0
   11db8:	movt	r0, #1
   11dbc:	bl	110c4 <fputs_unlocked@plt>
   11dc0:	ldr	r0, [r7]
   11dc4:	ldr	r9, [sp, #32]
   11dc8:	movw	r8, #53701	; 0xd1c5
   11dcc:	movt	r8, #1
   11dd0:	cmp	r0, #2
   11dd4:	bcc	11dfc <__assert_fail@plt+0xa80>
   11dd8:	mov	r6, #0
   11ddc:	ldrb	r2, [r9, r6]
   11de0:	mov	r0, #1
   11de4:	mov	r1, r8
   11de8:	bl	11280 <__printf_chk@plt>
   11dec:	ldr	r0, [r7]
   11df0:	add	r6, r6, #1
   11df4:	cmp	r6, r0, lsr #1
   11df8:	bcc	11ddc <__assert_fail@plt+0xa60>
   11dfc:	ldr	r0, [sp, #56]	; 0x38
   11e00:	tst	r0, #1
   11e04:	bne	11e24 <__assert_fail@plt+0xaa8>
   11e08:	mov	r0, #32
   11e0c:	bl	11370 <putchar_unlocked@plt>
   11e10:	ldr	r0, [sp, #28]
   11e14:	bl	11370 <putchar_unlocked@plt>
   11e18:	mov	r0, r5
   11e1c:	mov	r1, sl
   11e20:	bl	12f00 <__assert_fail@plt+0x1b84>
   11e24:	mov	r0, r4
   11e28:	bl	11370 <putchar_unlocked@plt>
   11e2c:	ldr	r1, [sp, #92]	; 0x5c
   11e30:	ldr	r4, [sp, #96]	; 0x60
   11e34:	ldr	r9, [sp, #104]	; 0x68
   11e38:	ldr	r6, [sp, #52]	; 0x34
   11e3c:	mov	sl, r1
   11e40:	b	12b1c <__assert_fail@plt+0x17a0>
   11e44:	movw	r1, #57760	; 0xe1a0
   11e48:	mov	r0, #1
   11e4c:	mov	r2, #5
   11e50:	str	r6, [sp, #68]	; 0x44
   11e54:	movt	r1, #2
   11e58:	strb	r0, [r1]
   11e5c:	movw	r1, #52678	; 0xcdc6
   11e60:	mov	r0, #0
   11e64:	movt	r1, #1
   11e68:	bl	11148 <dcgettext@plt>
   11e6c:	str	r0, [sp, #88]	; 0x58
   11e70:	movw	r0, #57720	; 0xe178
   11e74:	movt	r0, #2
   11e78:	ldr	r7, [r0]
   11e7c:	mov	r0, #0
   11e80:	mov	r1, #0
   11e84:	mov	r5, #0
   11e88:	mov	sl, #0
   11e8c:	mov	r6, #0
   11e90:	sub	r4, fp, #124	; 0x7c
   11e94:	sub	r8, fp, #120	; 0x78
   11e98:	str	r7, [sp, #100]	; 0x64
   11e9c:	str	r0, [sp, #36]	; 0x24
   11ea0:	mov	r0, #0
   11ea4:	str	r1, [fp, #-124]	; 0xffffff84
   11ea8:	str	r1, [fp, #-120]	; 0xffffff88
   11eac:	str	r0, [sp, #44]	; 0x2c
   11eb0:	mov	r0, #0
   11eb4:	str	r0, [sp, #64]	; 0x40
   11eb8:	mov	r0, #0
   11ebc:	str	r0, [sp, #60]	; 0x3c
   11ec0:	mov	r0, #0
   11ec4:	str	r0, [sp, #40]	; 0x28
   11ec8:	mov	r0, #0
   11ecc:	str	r0, [sp, #72]	; 0x48
   11ed0:	mov	r0, #0
   11ed4:	str	r0, [sp, #128]	; 0x80
   11ed8:	mov	r0, #0
   11edc:	str	r0, [sp, #124]	; 0x7c
   11ee0:	mov	r0, #0
   11ee4:	str	r0, [sp, #120]	; 0x78
   11ee8:	b	120bc <__assert_fail@plt+0xd40>
   11eec:	bl	11250 <__errno_location@plt>
   11ef0:	ldr	r4, [r0]
   11ef4:	mov	r2, r5
   11ef8:	mov	r0, #0
   11efc:	mov	r1, #3
   11f00:	mov	r5, #0
   11f04:	bl	1aa0c <__assert_fail@plt+0x9690>
   11f08:	movw	r2, #52014	; 0xcb2e
   11f0c:	mov	r3, r0
   11f10:	mov	r0, #0
   11f14:	mov	r1, r4
   11f18:	movt	r2, #1
   11f1c:	bl	111c0 <error@plt>
   11f20:	mov	r6, r9
   11f24:	mov	r9, r7
   11f28:	mov	r7, r8
   11f2c:	b	12b10 <__assert_fail@plt+0x1794>
   11f30:	ldr	r0, [sp, #64]	; 0x40
   11f34:	ldr	r7, [sp, #100]	; 0x64
   11f38:	ldr	r5, [sp, #112]	; 0x70
   11f3c:	sub	r8, fp, #120	; 0x78
   11f40:	sub	r4, fp, #124	; 0x7c
   11f44:	adds	r0, r0, #1
   11f48:	str	r0, [sp, #64]	; 0x40
   11f4c:	ldr	r0, [sp, #60]	; 0x3c
   11f50:	adc	r0, r0, #0
   11f54:	str	r0, [sp, #60]	; 0x3c
   11f58:	movw	r0, #57744	; 0xe190
   11f5c:	movt	r0, #2
   11f60:	ldrb	r0, [r0]
   11f64:	cmp	r0, #0
   11f68:	beq	11f74 <__assert_fail@plt+0xbf8>
   11f6c:	ldr	r6, [sp, #116]	; 0x74
   11f70:	b	12054 <__assert_fail@plt+0xcd8>
   11f74:	str	r6, [sp, #108]	; 0x6c
   11f78:	ldr	r6, [sp, #116]	; 0x74
   11f7c:	cmp	r9, #0
   11f80:	beq	11f8c <__assert_fail@plt+0xc10>
   11f84:	mov	r0, #92	; 0x5c
   11f88:	bl	11370 <putchar_unlocked@plt>
   11f8c:	ldr	r0, [sp, #108]	; 0x6c
   11f90:	mov	r1, r9
   11f94:	bl	12f00 <__assert_fail@plt+0x1b84>
   11f98:	movw	r1, #53291	; 0xd02b
   11f9c:	mov	r0, #0
   11fa0:	mov	r2, #5
   11fa4:	movt	r1, #1
   11fa8:	bl	11148 <dcgettext@plt>
   11fac:	movw	r1, #54981	; 0xd6c5
   11fb0:	mov	r2, r0
   11fb4:	mov	r0, #1
   11fb8:	movt	r1, #1
   11fbc:	bl	11280 <__printf_chk@plt>
   11fc0:	b	12054 <__assert_fail@plt+0xcd8>
   11fc4:	ldr	r5, [sp, #112]	; 0x70
   11fc8:	cmp	r7, r4
   11fcc:	bne	11ff0 <__assert_fail@plt+0xc74>
   11fd0:	movw	r0, #57746	; 0xe192
   11fd4:	movt	r0, #2
   11fd8:	ldrb	r0, [r0]
   11fdc:	cmp	r0, #0
   11fe0:	beq	11ff0 <__assert_fail@plt+0xc74>
   11fe4:	mov	r0, #1
   11fe8:	str	r0, [sp, #36]	; 0x24
   11fec:	b	12044 <__assert_fail@plt+0xcc8>
   11ff0:	cmp	r9, #0
   11ff4:	beq	12000 <__assert_fail@plt+0xc84>
   11ff8:	mov	r0, #92	; 0x5c
   11ffc:	bl	11370 <putchar_unlocked@plt>
   12000:	ldr	r0, [sp, #108]	; 0x6c
   12004:	mov	r1, r9
   12008:	bl	12f00 <__assert_fail@plt+0x1b84>
   1200c:	cmp	r7, r4
   12010:	beq	12060 <__assert_fail@plt+0xce4>
   12014:	movw	r1, #53311	; 0xd03f
   12018:	mov	r0, #0
   1201c:	mov	r2, #5
   12020:	movt	r1, #1
   12024:	bl	11148 <dcgettext@plt>
   12028:	movw	r1, #54981	; 0xd6c5
   1202c:	mov	r2, r0
   12030:	mov	r0, #1
   12034:	movt	r1, #1
   12038:	bl	11280 <__printf_chk@plt>
   1203c:	str	r6, [sp, #40]	; 0x28
   12040:	str	r8, [sp, #72]	; 0x48
   12044:	ldr	r6, [sp, #116]	; 0x74
   12048:	ldr	r7, [sp, #100]	; 0x64
   1204c:	sub	r8, fp, #120	; 0x78
   12050:	sub	r4, fp, #124	; 0x7c
   12054:	mov	r0, #1
   12058:	str	r0, [sp, #44]	; 0x2c
   1205c:	b	12794 <__assert_fail@plt+0x1418>
   12060:	movw	r0, #57746	; 0xe192
   12064:	ldr	r7, [sp, #100]	; 0x64
   12068:	mov	r1, #1
   1206c:	sub	r4, fp, #124	; 0x7c
   12070:	movt	r0, #2
   12074:	str	r1, [sp, #36]	; 0x24
   12078:	ldrb	r0, [r0]
   1207c:	cmp	r0, #0
   12080:	bne	120b4 <__assert_fail@plt+0xd38>
   12084:	movw	r1, #53318	; 0xd046
   12088:	mov	r0, #0
   1208c:	mov	r2, #5
   12090:	movt	r1, #1
   12094:	bl	11148 <dcgettext@plt>
   12098:	movw	r1, #54981	; 0xd6c5
   1209c:	mov	r2, r0
   120a0:	mov	r0, #1
   120a4:	str	r0, [sp, #36]	; 0x24
   120a8:	mov	r0, #1
   120ac:	movt	r1, #1
   120b0:	bl	11280 <__printf_chk@plt>
   120b4:	sub	r8, fp, #120	; 0x78
   120b8:	b	11f6c <__assert_fail@plt+0xbf0>
   120bc:	adds	r5, r5, #1
   120c0:	adc	sl, sl, #0
   120c4:	orrs	r0, r5, sl
   120c8:	beq	12b64 <__assert_fail@plt+0x17e8>
   120cc:	mov	r0, r8
   120d0:	mov	r1, r4
   120d4:	mov	r2, r7
   120d8:	bl	1131c <getline@plt>
   120dc:	cmp	r0, #1
   120e0:	blt	127b4 <__assert_fail@plt+0x1438>
   120e4:	mov	r9, r0
   120e8:	ldr	r0, [fp, #-120]	; 0xffffff88
   120ec:	ldrb	r1, [r0]
   120f0:	cmp	r1, #35	; 0x23
   120f4:	beq	12794 <__assert_fail@plt+0x1418>
   120f8:	add	r1, r0, r9
   120fc:	ldrb	r1, [r1, #-1]
   12100:	sub	r1, r1, #10
   12104:	clz	r1, r1
   12108:	lsr	r3, r1, #5
   1210c:	sub	r1, r9, r3
   12110:	cmp	r1, #0
   12114:	mov	r2, r1
   12118:	subgt	r2, r2, #1
   1211c:	ldrb	r2, [r0, r2]
   12120:	sub	r2, r2, #13
   12124:	clz	r2, r2
   12128:	lsr	r2, r2, #5
   1212c:	subs	r1, r1, r2
   12130:	beq	12794 <__assert_fail@plt+0x1418>
   12134:	mov	r7, #0
   12138:	movw	r8, #50515	; 0xc553
   1213c:	strb	r7, [r0, r1]
   12140:	movt	r8, #1
   12144:	ldr	r4, [fp, #-120]	; 0xffffff88
   12148:	b	12150 <__assert_fail@plt+0xdd4>
   1214c:	add	r7, r7, #1
   12150:	ldrb	r0, [r4, r7]
   12154:	cmp	r0, #9
   12158:	cmpne	r0, #32
   1215c:	beq	1214c <__assert_fail@plt+0xdd0>
   12160:	cmp	r0, #92	; 0x5c
   12164:	add	r0, sp, #108	; 0x6c
   12168:	stm	r0, {r1, r5, r6}
   1216c:	movne	r0, #0
   12170:	addeq	r7, r7, #1
   12174:	str	r2, [sp, #80]	; 0x50
   12178:	mov	r1, r8
   1217c:	mov	r2, #7
   12180:	str	r3, [sp, #84]	; 0x54
   12184:	moveq	r0, #1
   12188:	add	r5, r4, r7
   1218c:	str	r0, [sp, #76]	; 0x4c
   12190:	mov	r0, r5
   12194:	bl	11334 <strncmp@plt>
   12198:	cmp	r0, #0
   1219c:	beq	1230c <__assert_fail@plt+0xf90>
   121a0:	movw	r0, #57752	; 0xe198
   121a4:	ldrb	r1, [r5]
   121a8:	movt	r0, #2
   121ac:	ldrb	r0, [r0]
   121b0:	sub	r1, r1, #92	; 0x5c
   121b4:	clz	r1, r1
   121b8:	cmp	r0, #0
   121bc:	ldr	r0, [sp, #108]	; 0x6c
   121c0:	lsr	r1, r1, #5
   121c4:	addne	r1, r1, #3
   121c8:	sub	r0, r0, r7
   121cc:	cmp	r0, r1
   121d0:	bcc	126f8 <__assert_fail@plt+0x137c>
   121d4:	movw	r0, #57756	; 0xe19c
   121d8:	mov	r1, #0
   121dc:	mov	r8, r5
   121e0:	movt	r0, #2
   121e4:	str	r1, [r0]
   121e8:	bl	11214 <__ctype_b_loc@plt>
   121ec:	ldrb	r2, [r5]
   121f0:	ldr	r1, [r0]
   121f4:	add	r0, r1, r2, lsl #1
   121f8:	ldrb	r0, [r0, #1]
   121fc:	tst	r0, #16
   12200:	beq	126f8 <__assert_fail@plt+0x137c>
   12204:	add	ip, r4, r7
   12208:	mov	r0, #0
   1220c:	mov	r6, #0
   12210:	add	r2, ip, #1
   12214:	ldrb	r3, [r2, r6]
   12218:	add	r0, r0, #4
   1221c:	add	r6, r6, #1
   12220:	add	r3, r1, r3, lsl #1
   12224:	ldrb	r3, [r3, #1]
   12228:	tst	r3, #16
   1222c:	bne	12214 <__assert_fail@plt+0xe98>
   12230:	movw	r1, #57756	; 0xe19c
   12234:	cmp	r6, #2
   12238:	movt	r1, #2
   1223c:	str	r6, [r1]
   12240:	bcc	126f8 <__assert_fail@plt+0x137c>
   12244:	cmp	r6, #128	; 0x80
   12248:	bhi	126f8 <__assert_fail@plt+0x137c>
   1224c:	ands	r1, r6, #1
   12250:	bne	126f8 <__assert_fail@plt+0x137c>
   12254:	movw	r1, #57736	; 0xe188
   12258:	mov	r2, #0
   1225c:	movt	r1, #2
   12260:	stm	r1, {r0, r2}
   12264:	mov	r0, ip
   12268:	ldrb	r1, [r0, r6]!
   1226c:	cmp	r1, #32
   12270:	cmpne	r1, #9
   12274:	bne	126f8 <__assert_fail@plt+0x137c>
   12278:	add	r0, r0, #1
   1227c:	mov	r1, #0
   12280:	strb	r1, [r0, #-1]
   12284:	mov	r0, r5
   12288:	mov	r5, ip
   1228c:	bl	12fac <__assert_fail@plt+0x1c30>
   12290:	cmp	r0, #0
   12294:	beq	126f8 <__assert_fail@plt+0x137c>
   12298:	mov	r1, r5
   1229c:	ldr	r2, [sp, #84]	; 0x54
   122a0:	ldr	r5, [sp, #80]	; 0x50
   122a4:	add	ip, r7, r6
   122a8:	mov	r3, r8
   122ac:	add	r0, ip, #1
   122b0:	add	r2, r2, r5
   122b4:	add	r2, r2, #2
   122b8:	sub	r2, r2, r9
   122bc:	add	r2, r7, r2
   122c0:	adds	r2, r2, r6
   122c4:	beq	12534 <__assert_fail@plt+0x11b8>
   122c8:	add	r2, r1, r6
   122cc:	ldrb	r2, [r2, #1]
   122d0:	cmp	r2, #32
   122d4:	cmpne	r2, #42	; 0x2a
   122d8:	bne	12534 <__assert_fail@plt+0x11b8>
   122dc:	movw	r2, #57616	; 0xe110
   122e0:	ldr	r7, [sp, #76]	; 0x4c
   122e4:	movt	r2, #2
   122e8:	ldr	r2, [r2]
   122ec:	cmp	r2, #1
   122f0:	beq	1255c <__assert_fail@plt+0x11e0>
   122f4:	movw	r2, #57616	; 0xe110
   122f8:	mov	r0, #0
   122fc:	movt	r2, #2
   12300:	str	r0, [r2]
   12304:	add	r0, ip, #2
   12308:	b	1255c <__assert_fail@plt+0x11e0>
   1230c:	add	r6, r7, #7
   12310:	mov	r1, r8
   12314:	mov	r0, #0
   12318:	ldrb	r8, [r4, r6]
   1231c:	strb	r0, [r4, r6]
   12320:	mov	r0, r5
   12324:	bl	110dc <strcmp@plt>
   12328:	cmp	r0, #0
   1232c:	bne	126f8 <__assert_fail@plt+0x137c>
   12330:	cmp	r8, #40	; 0x28
   12334:	mov	r1, #0
   12338:	mov	r2, #512	; 0x200
   1233c:	moveq	r0, #40	; 0x28
   12340:	strbeq	r0, [r4, r6]
   12344:	movw	r0, #57736	; 0xe188
   12348:	addne	r6, r7, #8
   1234c:	cmp	r8, #45	; 0x2d
   12350:	movt	r0, #2
   12354:	str	r2, [r0]
   12358:	str	r1, [r0, #4]
   1235c:	mov	r0, #128	; 0x80
   12360:	bne	123cc <__assert_fail@plt+0x1050>
   12364:	str	r1, [sp]
   12368:	add	r0, r4, r6
   1236c:	sub	r1, fp, #44	; 0x2c
   12370:	mov	r2, #0
   12374:	sub	r3, fp, #40	; 0x28
   12378:	bl	1b734 <__assert_fail@plt+0xa3b8>
   1237c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12380:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12384:	subs	r6, r2, #1
   12388:	sbc	r7, r3, #0
   1238c:	tst	r2, #7
   12390:	cmpeq	r0, #0
   12394:	bne	126f8 <__assert_fail@plt+0x137c>
   12398:	movw	r0, #57736	; 0xe188
   1239c:	movt	r0, #2
   123a0:	ldrd	r0, [r0]
   123a4:	subs	r0, r6, r0
   123a8:	sbcs	r0, r7, r1
   123ac:	bcs	126f8 <__assert_fail@plt+0x137c>
   123b0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   123b4:	movw	r0, #57736	; 0xe188
   123b8:	movt	r0, #2
   123bc:	strd	r2, [r0]
   123c0:	lsr	r0, r2, #2
   123c4:	orr	r0, r0, r3, lsl #30
   123c8:	sub	r6, r1, r4
   123cc:	movw	r1, #57756	; 0xe19c
   123d0:	movt	r1, #2
   123d4:	str	r0, [r1]
   123d8:	ldrb	r0, [r4, r6]
   123dc:	sub	r0, r0, #32
   123e0:	clz	r0, r0
   123e4:	lsr	r1, r0, #5
   123e8:	add	r0, r6, r1
   123ec:	ldrb	r2, [r4, r0]
   123f0:	cmp	r2, #40	; 0x28
   123f4:	bne	126f8 <__assert_fail@plt+0x137c>
   123f8:	ldr	r2, [sp, #108]	; 0x6c
   123fc:	add	r0, r0, #1
   12400:	subs	r2, r2, r0
   12404:	beq	126f8 <__assert_fail@plt+0x137c>
   12408:	ldr	r5, [sp, #84]	; 0x54
   1240c:	ldr	r8, [sp, #80]	; 0x50
   12410:	add	lr, r4, r0
   12414:	add	r2, r6, r5
   12418:	rsb	r0, r5, #0
   1241c:	add	r1, r2, r1
   12420:	sub	ip, r0, r8
   12424:	rsb	r0, r8, #0
   12428:	add	r2, r1, #2
   1242c:	add	r1, r1, #1
   12430:	str	r0, [sp, #108]	; 0x6c
   12434:	sub	r7, r1, r9
   12438:	add	r1, r5, r8
   1243c:	sub	r3, r2, r9
   12440:	add	r2, r4, r9
   12444:	sub	r1, r9, r1
   12448:	add	r4, r4, r1
   1244c:	add	r6, r4, #1
   12450:	ldr	r0, [sp, #108]	; 0x6c
   12454:	mov	r8, r7
   12458:	mov	r1, r3
   1245c:	mov	r9, r4
   12460:	mov	r5, r6
   12464:	cmp	r0, r3
   12468:	beq	1249c <__assert_fail@plt+0x1120>
   1246c:	add	r3, r2, ip
   12470:	sub	r6, r5, #1
   12474:	sub	r4, r9, #1
   12478:	sub	r2, r2, #1
   1247c:	add	r7, r8, #1
   12480:	ldrb	r0, [r3, #-1]
   12484:	add	r3, r1, #1
   12488:	cmp	r0, #41	; 0x29
   1248c:	bne	12450 <__assert_fail@plt+0x10d4>
   12490:	add	r4, r2, ip
   12494:	mov	r6, lr
   12498:	b	124b0 <__assert_fail@plt+0x1134>
   1249c:	ldrb	r0, [lr]
   124a0:	mov	r6, lr
   124a4:	mov	r4, lr
   124a8:	cmp	r0, #41	; 0x29
   124ac:	bne	126f8 <__assert_fail@plt+0x137c>
   124b0:	ldr	r0, [sp, #76]	; 0x4c
   124b4:	cmp	r0, #0
   124b8:	beq	124d4 <__assert_fail@plt+0x1158>
   124bc:	ldr	r0, [sp, #108]	; 0x6c
   124c0:	sub	r1, r0, r1
   124c4:	mov	r0, r6
   124c8:	bl	13010 <__assert_fail@plt+0x1c94>
   124cc:	cmp	r0, #0
   124d0:	beq	126f8 <__assert_fail@plt+0x137c>
   124d4:	ldr	r0, [sp, #108]	; 0x6c
   124d8:	mov	r1, #0
   124dc:	strb	r1, [r4]
   124e0:	sub	r0, r0, r8
   124e4:	b	124f4 <__assert_fail@plt+0x1178>
   124e8:	add	r5, r5, #1
   124ec:	add	r9, r9, #1
   124f0:	add	r0, r0, #1
   124f4:	ldrb	r1, [r9]
   124f8:	cmp	r1, #9
   124fc:	cmpne	r1, #32
   12500:	beq	124e8 <__assert_fail@plt+0x116c>
   12504:	cmp	r1, #61	; 0x3d
   12508:	beq	12514 <__assert_fail@plt+0x1198>
   1250c:	b	126f8 <__assert_fail@plt+0x137c>
   12510:	add	r5, r5, #1
   12514:	ldrb	r0, [r5]
   12518:	cmp	r0, #32
   1251c:	cmpne	r0, #9
   12520:	beq	12510 <__assert_fail@plt+0x1194>
   12524:	mov	r0, r5
   12528:	bl	12fac <__assert_fail@plt+0x1c30>
   1252c:	mov	r3, r5
   12530:	b	1257c <__assert_fail@plt+0x1200>
   12534:	movw	r1, #57616	; 0xe110
   12538:	movt	r1, #2
   1253c:	ldr	r1, [r1]
   12540:	cmp	r1, #0
   12544:	beq	126f8 <__assert_fail@plt+0x137c>
   12548:	ldr	r7, [sp, #76]	; 0x4c
   1254c:	movw	r2, #57616	; 0xe110
   12550:	mov	r1, #1
   12554:	movt	r2, #2
   12558:	str	r1, [r2]
   1255c:	add	r6, r4, r0
   12560:	cmp	r7, #0
   12564:	beq	12584 <__assert_fail@plt+0x1208>
   12568:	ldr	r1, [sp, #108]	; 0x6c
   1256c:	sub	r1, r1, r0
   12570:	mov	r0, r6
   12574:	bl	13010 <__assert_fail@plt+0x1c94>
   12578:	mov	r3, r8
   1257c:	cmp	r0, #0
   12580:	beq	126f8 <__assert_fail@plt+0x137c>
   12584:	ldr	r0, [sp, #68]	; 0x44
   12588:	cmp	r0, #0
   1258c:	bne	125b0 <__assert_fail@plt+0x1234>
   12590:	movw	r1, #54176	; 0xd3a0
   12594:	mov	r0, r6
   12598:	mov	r4, r3
   1259c:	movt	r1, #1
   125a0:	bl	110dc <strcmp@plt>
   125a4:	mov	r3, r4
   125a8:	cmp	r0, #0
   125ac:	beq	126f8 <__assert_fail@plt+0x137c>
   125b0:	movw	r0, #57744	; 0xe190
   125b4:	mov	r5, r3
   125b8:	mov	r9, #0
   125bc:	movt	r0, #2
   125c0:	ldrb	r0, [r0]
   125c4:	cmp	r0, #0
   125c8:	bne	125e4 <__assert_fail@plt+0x1268>
   125cc:	mov	r0, r6
   125d0:	mov	r1, #10
   125d4:	bl	11244 <strchr@plt>
   125d8:	mov	r9, r0
   125dc:	cmp	r0, #0
   125e0:	movwne	r9, #1
   125e4:	ldr	r1, [sp, #20]
   125e8:	mov	r0, r6
   125ec:	sub	r2, fp, #40	; 0x28
   125f0:	bl	12d84 <__assert_fail@plt+0x1a08>
   125f4:	cmp	r0, #0
   125f8:	beq	11f30 <__assert_fail@plt+0xbb4>
   125fc:	ldrb	r0, [fp, #-40]	; 0xffffffd8
   12600:	sub	r8, fp, #120	; 0x78
   12604:	cmp	r0, #0
   12608:	movwne	r0, #57747	; 0xe193
   1260c:	movtne	r0, #2
   12610:	ldrbne	r0, [r0]
   12614:	cmpne	r0, #0
   12618:	bne	126e8 <__assert_fail@plt+0x136c>
   1261c:	movw	r0, #57756	; 0xe19c
   12620:	ldr	r8, [sp, #40]	; 0x28
   12624:	str	r6, [sp, #108]	; 0x6c
   12628:	movw	r6, #53992	; 0xd2e8
   1262c:	mov	r7, #0
   12630:	movt	r0, #2
   12634:	movt	r6, #1
   12638:	ldr	r0, [r0]
   1263c:	lsr	r4, r0, #1
   12640:	cmp	r7, r0, lsr #1
   12644:	beq	12694 <__assert_fail@plt+0x1318>
   12648:	bl	111f0 <__ctype_tolower_loc@plt>
   1264c:	ldr	r0, [r0]
   12650:	mov	r7, #0
   12654:	ldr	r1, [sp, #24]
   12658:	ldrb	r3, [r5, r7, lsl #1]
   1265c:	ldrb	r1, [r1, r7]
   12660:	ldr	r3, [r0, r3, lsl #2]
   12664:	ldrb	r2, [r6, r1, lsr #4]
   12668:	cmp	r3, r2
   1266c:	addeq	r2, r5, r7, lsl #1
   12670:	andeq	r1, r1, #15
   12674:	ldrbeq	r2, [r2, #1]
   12678:	ldrbeq	r1, [r6, r1]
   1267c:	ldreq	r2, [r0, r2, lsl #2]
   12680:	cmpeq	r2, r1
   12684:	bne	12694 <__assert_fail@plt+0x1318>
   12688:	add	r7, r7, #1
   1268c:	cmp	r7, r4
   12690:	bcc	12654 <__assert_fail@plt+0x12d8>
   12694:	movw	r2, #57744	; 0xe190
   12698:	ldr	r1, [sp, #72]	; 0x48
   1269c:	adds	r6, r8, #1
   126a0:	mov	r0, r8
   126a4:	movt	r2, #2
   126a8:	ldrb	r2, [r2]
   126ac:	adc	r8, r1, #0
   126b0:	cmp	r7, r4
   126b4:	movne	r0, r6
   126b8:	movne	r1, r8
   126bc:	cmp	r2, #0
   126c0:	beq	11fc4 <__assert_fail@plt+0xc48>
   126c4:	ldr	r3, [sp, #36]	; 0x24
   126c8:	sub	r2, r7, r4
   126cc:	str	r0, [sp, #40]	; 0x28
   126d0:	str	r1, [sp, #72]	; 0x48
   126d4:	sub	r8, fp, #120	; 0x78
   126d8:	clz	r2, r2
   126dc:	lsr	r2, r2, #5
   126e0:	orr	r3, r3, r2
   126e4:	str	r3, [sp, #36]	; 0x24
   126e8:	ldr	r6, [sp, #116]	; 0x74
   126ec:	ldr	r7, [sp, #100]	; 0x64
   126f0:	ldr	r5, [sp, #112]	; 0x70
   126f4:	b	12050 <__assert_fail@plt+0xcd4>
   126f8:	ldr	r6, [sp, #116]	; 0x74
   126fc:	ldr	r0, [sp, #120]	; 0x78
   12700:	ldr	r5, [sp, #112]	; 0x70
   12704:	adds	r6, r6, #1
   12708:	adc	r0, r0, #0
   1270c:	str	r0, [sp, #120]	; 0x78
   12710:	movw	r0, #57745	; 0xe191
   12714:	movt	r0, #2
   12718:	ldrb	r0, [r0]
   1271c:	cmp	r0, #1
   12720:	bne	12770 <__assert_fail@plt+0x13f4>
   12724:	movw	r1, #53243	; 0xcffb
   12728:	mov	r0, #0
   1272c:	mov	r2, #5
   12730:	movt	r1, #1
   12734:	bl	11148 <dcgettext@plt>
   12738:	ldr	r2, [sp, #88]	; 0x58
   1273c:	mov	r4, r0
   12740:	mov	r0, #0
   12744:	mov	r1, #3
   12748:	bl	1aa0c <__assert_fail@plt+0x9690>
   1274c:	mov	r3, r0
   12750:	movw	r0, #50515	; 0xc553
   12754:	stm	sp, {r5, sl}
   12758:	mov	r1, #0
   1275c:	mov	r2, r4
   12760:	movt	r0, #1
   12764:	str	r0, [sp, #8]
   12768:	mov	r0, #0
   1276c:	bl	111c0 <error@plt>
   12770:	ldr	r0, [sp, #128]	; 0x80
   12774:	ldr	r7, [sp, #100]	; 0x64
   12778:	sub	r8, fp, #120	; 0x78
   1277c:	sub	r4, fp, #124	; 0x7c
   12780:	adds	r0, r0, #1
   12784:	str	r0, [sp, #128]	; 0x80
   12788:	ldr	r0, [sp, #124]	; 0x7c
   1278c:	adc	r0, r0, #0
   12790:	str	r0, [sp, #124]	; 0x7c
   12794:	mov	r0, r7
   12798:	bl	1134c <feof_unlocked@plt>
   1279c:	cmp	r0, #0
   127a0:	bne	127b4 <__assert_fail@plt+0x1438>
   127a4:	mov	r0, r7
   127a8:	bl	111a8 <ferror_unlocked@plt>
   127ac:	cmp	r0, #0
   127b0:	beq	120bc <__assert_fail@plt+0xd40>
   127b4:	ldr	r0, [fp, #-120]	; 0xffffff88
   127b8:	mov	sl, r6
   127bc:	bl	190d0 <__assert_fail@plt+0x7d54>
   127c0:	mov	r0, r7
   127c4:	bl	111a8 <ferror_unlocked@plt>
   127c8:	mov	r4, r0
   127cc:	cmp	r0, #0
   127d0:	ldr	r0, [sp, #68]	; 0x44
   127d4:	mov	r6, #0
   127d8:	mvneq	r6, #0
   127dc:	cmp	r0, #0
   127e0:	beq	12820 <__assert_fail@plt+0x14a4>
   127e4:	mov	r0, r7
   127e8:	bl	18f2c <__assert_fail@plt+0x7bb0>
   127ec:	ldr	r9, [sp, #104]	; 0x68
   127f0:	ldr	r5, [sp, #64]	; 0x40
   127f4:	ldr	r8, [sp, #60]	; 0x3c
   127f8:	movw	r7, #57756	; 0xe19c
   127fc:	cmp	r4, #0
   12800:	movt	r7, #2
   12804:	bne	1283c <__assert_fail@plt+0x14c0>
   12808:	ldr	r4, [sp, #72]	; 0x48
   1280c:	cmp	r0, #0
   12810:	beq	12840 <__assert_fail@plt+0x14c4>
   12814:	bl	11250 <__errno_location@plt>
   12818:	ldr	r6, [r0]
   1281c:	b	12840 <__assert_fail@plt+0x14c4>
   12820:	mov	r0, r7
   12824:	bl	112f8 <clearerr_unlocked@plt>
   12828:	ldr	r9, [sp, #104]	; 0x68
   1282c:	ldr	r5, [sp, #64]	; 0x40
   12830:	ldr	r8, [sp, #60]	; 0x3c
   12834:	movw	r7, #57756	; 0xe19c
   12838:	movt	r7, #2
   1283c:	ldr	r4, [sp, #72]	; 0x48
   12840:	cmp	r6, #0
   12844:	blt	12890 <__assert_fail@plt+0x1514>
   12848:	movw	r4, #52014	; 0xcb2e
   1284c:	movt	r4, #1
   12850:	bne	1286c <__assert_fail@plt+0x14f0>
   12854:	movw	r1, #53321	; 0xd049
   12858:	mov	r0, #0
   1285c:	mov	r2, #5
   12860:	movt	r1, #1
   12864:	bl	11148 <dcgettext@plt>
   12868:	mov	r4, r0
   1286c:	ldr	r2, [sp, #88]	; 0x58
   12870:	mov	r0, #0
   12874:	mov	r1, #3
   12878:	mov	r5, #0
   1287c:	bl	1aa0c <__assert_fail@plt+0x9690>
   12880:	mov	r3, r0
   12884:	mov	r0, #0
   12888:	mov	r1, r6
   1288c:	b	12b04 <__assert_fail@plt+0x1788>
   12890:	ldr	r0, [sp, #44]	; 0x2c
   12894:	tst	r0, #1
   12898:	beq	12acc <__assert_fail@plt+0x1750>
   1289c:	movw	r0, #57744	; 0xe190
   128a0:	movt	r0, #2
   128a4:	ldrb	r0, [r0]
   128a8:	cmp	r0, #0
   128ac:	ldr	r0, [sp, #88]	; 0x58
   128b0:	bne	12a70 <__assert_fail@plt+0x16f4>
   128b4:	mov	r6, sl
   128b8:	ldr	sl, [sp, #120]	; 0x78
   128bc:	str	r0, [sp, #88]	; 0x58
   128c0:	orrs	r0, r6, sl
   128c4:	beq	1292c <__assert_fail@plt+0x15b0>
   128c8:	cmp	sl, #0
   128cc:	mov	r3, r6
   128d0:	beq	128f8 <__assert_fail@plt+0x157c>
   128d4:	movw	r4, #16960	; 0x4240
   128d8:	mov	r0, r6
   128dc:	mov	r1, sl
   128e0:	mov	r3, #0
   128e4:	movt	r4, #15
   128e8:	mov	r2, r4
   128ec:	bl	1c2e4 <__assert_fail@plt+0xaf68>
   128f0:	add	r3, r2, r4
   128f4:	ldr	r4, [sp, #72]	; 0x48
   128f8:	movw	r1, #53383	; 0xd087
   128fc:	movw	r2, #53426	; 0xd0b2
   12900:	mov	r0, #5
   12904:	str	r0, [sp]
   12908:	mov	r0, #0
   1290c:	movt	r1, #1
   12910:	movt	r2, #1
   12914:	bl	11364 <dcngettext@plt>
   12918:	mov	r2, r0
   1291c:	mov	r0, #0
   12920:	mov	r1, #0
   12924:	stm	sp, {r6, sl}
   12928:	bl	111c0 <error@plt>
   1292c:	orrs	r0, r5, r8
   12930:	beq	12998 <__assert_fail@plt+0x161c>
   12934:	cmp	r8, #0
   12938:	mov	r3, r5
   1293c:	beq	12964 <__assert_fail@plt+0x15e8>
   12940:	movw	r4, #16960	; 0x4240
   12944:	mov	r0, r5
   12948:	mov	r1, r8
   1294c:	mov	r3, #0
   12950:	movt	r4, #15
   12954:	mov	r2, r4
   12958:	bl	1c2e4 <__assert_fail@plt+0xaf68>
   1295c:	add	r3, r2, r4
   12960:	ldr	r4, [sp, #72]	; 0x48
   12964:	movw	r1, #53471	; 0xd0df
   12968:	movw	r2, #53515	; 0xd10b
   1296c:	mov	r0, #5
   12970:	str	r0, [sp]
   12974:	mov	r0, #0
   12978:	movt	r1, #1
   1297c:	movt	r2, #1
   12980:	bl	11364 <dcngettext@plt>
   12984:	mov	r2, r0
   12988:	mov	r0, #0
   1298c:	mov	r1, #0
   12990:	stm	sp, {r5, r8}
   12994:	bl	111c0 <error@plt>
   12998:	ldr	r6, [sp, #40]	; 0x28
   1299c:	orrs	r0, r6, r4
   129a0:	beq	12a0c <__assert_fail@plt+0x1690>
   129a4:	cmp	r4, #0
   129a8:	mov	r3, r6
   129ac:	beq	129d4 <__assert_fail@plt+0x1658>
   129b0:	mov	r1, r4
   129b4:	movw	r4, #16960	; 0x4240
   129b8:	mov	r0, r6
   129bc:	mov	r3, #0
   129c0:	movt	r4, #15
   129c4:	mov	r2, r4
   129c8:	bl	1c2e4 <__assert_fail@plt+0xaf68>
   129cc:	add	r3, r2, r4
   129d0:	ldr	r4, [sp, #72]	; 0x48
   129d4:	movw	r1, #53560	; 0xd138
   129d8:	movw	r2, #53606	; 0xd166
   129dc:	mov	r0, #5
   129e0:	str	r0, [sp]
   129e4:	mov	r0, #0
   129e8:	movt	r1, #1
   129ec:	movt	r2, #1
   129f0:	bl	11364 <dcngettext@plt>
   129f4:	mov	r2, r0
   129f8:	mov	r0, #0
   129fc:	mov	r1, #0
   12a00:	str	r6, [sp]
   12a04:	str	r4, [sp, #4]
   12a08:	bl	111c0 <error@plt>
   12a0c:	movw	r0, #57747	; 0xe193
   12a10:	ldr	r1, [sp, #36]	; 0x24
   12a14:	ldr	r6, [sp, #88]	; 0x58
   12a18:	movt	r0, #2
   12a1c:	ldrb	r0, [r0]
   12a20:	mvn	r0, r0
   12a24:	orr	r0, r1, r0
   12a28:	tst	r0, #1
   12a2c:	bne	12a70 <__assert_fail@plt+0x16f4>
   12a30:	movw	r1, #53653	; 0xd195
   12a34:	mov	r0, #0
   12a38:	mov	r2, #5
   12a3c:	movt	r1, #1
   12a40:	bl	11148 <dcgettext@plt>
   12a44:	mov	r4, r0
   12a48:	mov	r0, #0
   12a4c:	mov	r1, #3
   12a50:	mov	r2, r6
   12a54:	bl	1aa0c <__assert_fail@plt+0x9690>
   12a58:	mov	r2, r4
   12a5c:	ldr	r4, [sp, #72]	; 0x48
   12a60:	mov	r3, r0
   12a64:	mov	r0, #0
   12a68:	mov	r1, #0
   12a6c:	bl	111c0 <error@plt>
   12a70:	ldr	r0, [sp, #40]	; 0x28
   12a74:	orr	r1, r8, r4
   12a78:	ldr	r6, [sp, #52]	; 0x34
   12a7c:	orr	r0, r5, r0
   12a80:	mov	r5, #0
   12a84:	orrs	r0, r0, r1
   12a88:	ldr	r1, [sp, #36]	; 0x24
   12a8c:	movwne	r0, #1
   12a90:	mvn	r1, r1
   12a94:	orr	r0, r1, r0
   12a98:	tst	r0, #1
   12a9c:	bne	12b10 <__assert_fail@plt+0x1794>
   12aa0:	ldr	r0, [sp, #128]	; 0x80
   12aa4:	ldr	r1, [sp, #124]	; 0x7c
   12aa8:	orr	r0, r0, r1
   12aac:	movw	r1, #57748	; 0xe194
   12ab0:	movt	r1, #2
   12ab4:	clz	r0, r0
   12ab8:	ldrb	r1, [r1]
   12abc:	lsr	r0, r0, #5
   12ac0:	eor	r1, r1, #1
   12ac4:	orr	r5, r0, r1
   12ac8:	b	12b10 <__assert_fail@plt+0x1794>
   12acc:	movw	r1, #53336	; 0xd058
   12ad0:	mov	r0, #0
   12ad4:	mov	r2, #5
   12ad8:	mov	r5, #0
   12adc:	movt	r1, #1
   12ae0:	bl	11148 <dcgettext@plt>
   12ae4:	ldr	r2, [sp, #88]	; 0x58
   12ae8:	mov	r4, r0
   12aec:	mov	r0, #0
   12af0:	mov	r1, #3
   12af4:	bl	1aa0c <__assert_fail@plt+0x9690>
   12af8:	mov	r3, r0
   12afc:	mov	r0, #0
   12b00:	mov	r1, #0
   12b04:	mov	r2, r4
   12b08:	bl	111c0 <error@plt>
   12b0c:	ldr	r6, [sp, #52]	; 0x34
   12b10:	ldr	sl, [sp, #92]	; 0x5c
   12b14:	ldr	r4, [sp, #96]	; 0x60
   12b18:	and	sl, sl, r5
   12b1c:	add	r4, r4, #4
   12b20:	cmp	r4, r6
   12b24:	bcc	11c40 <__assert_fail@plt+0x8c4>
   12b28:	movw	r0, #57760	; 0xe1a0
   12b2c:	movt	r0, #2
   12b30:	ldrb	r0, [r0]
   12b34:	cmp	r0, #0
   12b38:	beq	12b54 <__assert_fail@plt+0x17d8>
   12b3c:	movw	r0, #57720	; 0xe178
   12b40:	movt	r0, #2
   12b44:	ldr	r0, [r0]
   12b48:	bl	18f2c <__assert_fail@plt+0x7bb0>
   12b4c:	cmn	r0, #1
   12b50:	beq	12d58 <__assert_fail@plt+0x19dc>
   12b54:	mov	r0, #1
   12b58:	bic	r0, r0, sl
   12b5c:	sub	sp, fp, #28
   12b60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12b64:	movw	r1, #53215	; 0xcfdf
   12b68:	mov	r0, #0
   12b6c:	mov	r2, #5
   12b70:	movt	r1, #1
   12b74:	bl	11148 <dcgettext@plt>
   12b78:	ldr	r2, [sp, #88]	; 0x58
   12b7c:	mov	r4, r0
   12b80:	mov	r0, #0
   12b84:	mov	r1, #3
   12b88:	bl	1aa0c <__assert_fail@plt+0x9690>
   12b8c:	mov	r3, r0
   12b90:	mov	r0, #1
   12b94:	mov	r1, #0
   12b98:	mov	r2, r4
   12b9c:	bl	111c0 <error@plt>
   12ba0:	cmn	r0, #3
   12ba4:	bne	12bfc <__assert_fail@plt+0x1880>
   12ba8:	movw	r0, #57620	; 0xe114
   12bac:	movw	r2, #52075	; 0xcb6b
   12bb0:	mov	r1, #0
   12bb4:	movw	r7, #52061	; 0xcb5d
   12bb8:	movt	r0, #2
   12bbc:	movt	r2, #1
   12bc0:	str	r1, [sp, #8]
   12bc4:	movw	r1, #51945	; 0xcae9
   12bc8:	movt	r7, #1
   12bcc:	ldr	r3, [r0]
   12bd0:	movw	r0, #57724	; 0xe17c
   12bd4:	str	r2, [sp, #4]
   12bd8:	movw	r2, #52047	; 0xcb4f
   12bdc:	movt	r1, #1
   12be0:	str	r7, [sp]
   12be4:	movt	r0, #2
   12be8:	movt	r2, #1
   12bec:	ldr	r0, [r0]
   12bf0:	bl	1b098 <__assert_fail@plt+0x9d1c>
   12bf4:	mov	r0, #0
   12bf8:	bl	11220 <exit@plt>
   12bfc:	cmn	r0, #2
   12c00:	bne	12d50 <__assert_fail@plt+0x19d4>
   12c04:	mov	r0, #0
   12c08:	bl	11478 <__assert_fail@plt+0xfc>
   12c0c:	movw	r1, #51998	; 0xcb1e
   12c10:	mov	r0, #0
   12c14:	mov	r2, #5
   12c18:	movt	r1, #1
   12c1c:	bl	11148 <dcgettext@plt>
   12c20:	mov	r4, r0
   12c24:	ldr	r0, [sp, #128]	; 0x80
   12c28:	bl	1aba0 <__assert_fail@plt+0x9824>
   12c2c:	mov	r3, r0
   12c30:	mov	r0, #0
   12c34:	mov	r1, #0
   12c38:	mov	r2, r4
   12c3c:	bl	111c0 <error@plt>
   12c40:	movw	r1, #52017	; 0xcb31
   12c44:	mov	r0, #0
   12c48:	mov	r2, #5
   12c4c:	movt	r1, #1
   12c50:	bl	11148 <dcgettext@plt>
   12c54:	mov	r2, r0
   12c58:	mov	r0, #1
   12c5c:	mov	r1, #0
   12c60:	bl	111c0 <error@plt>
   12c64:	movw	r1, #51998	; 0xcb1e
   12c68:	mov	r0, #0
   12c6c:	mov	r2, #5
   12c70:	movt	r1, #1
   12c74:	bl	11148 <dcgettext@plt>
   12c78:	mov	r4, r0
   12c7c:	ldr	r0, [sp, #128]	; 0x80
   12c80:	bl	1aba0 <__assert_fail@plt+0x9824>
   12c84:	mov	r3, r0
   12c88:	mov	r0, #0
   12c8c:	mov	r1, #0
   12c90:	mov	r2, r4
   12c94:	bl	111c0 <error@plt>
   12c98:	movw	r1, #52088	; 0xcb78
   12c9c:	mov	r0, #0
   12ca0:	mov	r2, #5
   12ca4:	movt	r1, #1
   12ca8:	bl	11148 <dcgettext@plt>
   12cac:	mov	r4, r0
   12cb0:	movw	r0, #50515	; 0xc553
   12cb4:	movt	r0, #1
   12cb8:	bl	1aba0 <__assert_fail@plt+0x9824>
   12cbc:	mov	r3, r0
   12cc0:	mov	r0, #512	; 0x200
   12cc4:	str	r0, [sp]
   12cc8:	b	12b90 <__assert_fail@plt+0x1814>
   12ccc:	movw	r1, #52128	; 0xcba0
   12cd0:	movt	r1, #1
   12cd4:	b	12d34 <__assert_fail@plt+0x19b8>
   12cd8:	movw	r1, #52163	; 0xcbc3
   12cdc:	movt	r1, #1
   12ce0:	b	12d34 <__assert_fail@plt+0x19b8>
   12ce4:	movw	r1, #52223	; 0xcbff
   12ce8:	movt	r1, #1
   12cec:	b	12d34 <__assert_fail@plt+0x19b8>
   12cf0:	movw	r1, #52280	; 0xcc38
   12cf4:	movt	r1, #1
   12cf8:	b	12d34 <__assert_fail@plt+0x19b8>
   12cfc:	movw	r1, #52353	; 0xcc81
   12d00:	movt	r1, #1
   12d04:	b	12d34 <__assert_fail@plt+0x19b8>
   12d08:	movw	r1, #52425	; 0xccc9
   12d0c:	movt	r1, #1
   12d10:	b	12d34 <__assert_fail@plt+0x19b8>
   12d14:	movw	r1, #52489	; 0xcd09
   12d18:	movt	r1, #1
   12d1c:	b	12d34 <__assert_fail@plt+0x19b8>
   12d20:	movw	r1, #52551	; 0xcd47
   12d24:	movt	r1, #1
   12d28:	b	12d34 <__assert_fail@plt+0x19b8>
   12d2c:	movw	r1, #52614	; 0xcd86
   12d30:	movt	r1, #1
   12d34:	mov	r0, #0
   12d38:	mov	r2, #5
   12d3c:	bl	11148 <dcgettext@plt>
   12d40:	mov	r2, r0
   12d44:	mov	r0, #0
   12d48:	mov	r1, #0
   12d4c:	bl	111c0 <error@plt>
   12d50:	mov	r0, #1
   12d54:	bl	11478 <__assert_fail@plt+0xfc>
   12d58:	bl	11250 <__errno_location@plt>
   12d5c:	ldr	r4, [r0]
   12d60:	movw	r1, #52678	; 0xcdc6
   12d64:	mov	r0, #0
   12d68:	mov	r2, #5
   12d6c:	movt	r1, #1
   12d70:	bl	11148 <dcgettext@plt>
   12d74:	mov	r2, r0
   12d78:	mov	r0, #1
   12d7c:	mov	r1, r4
   12d80:	bl	111c0 <error@plt>
   12d84:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12d88:	add	fp, sp, #24
   12d8c:	mov	r6, r1
   12d90:	movw	r1, #54176	; 0xd3a0
   12d94:	mov	r4, r2
   12d98:	mov	r8, r0
   12d9c:	movt	r1, #1
   12da0:	bl	110dc <strcmp@plt>
   12da4:	mov	r5, r0
   12da8:	mov	r0, #0
   12dac:	cmp	r5, #0
   12db0:	strb	r0, [r4]
   12db4:	beq	12e20 <__assert_fail@plt+0x1aa4>
   12db8:	movw	r1, #53682	; 0xd1b2
   12dbc:	mov	r0, r8
   12dc0:	movt	r1, #1
   12dc4:	bl	19024 <__assert_fail@plt+0x7ca8>
   12dc8:	mov	r7, r0
   12dcc:	cmp	r0, #0
   12dd0:	bne	12e3c <__assert_fail@plt+0x1ac0>
   12dd4:	movw	r0, #57747	; 0xe193
   12dd8:	movt	r0, #2
   12ddc:	ldrb	r5, [r0]
   12de0:	bl	11250 <__errno_location@plt>
   12de4:	cmp	r5, #1
   12de8:	ldreq	r1, [r0]
   12dec:	cmpeq	r1, #2
   12df0:	beq	12ef4 <__assert_fail@plt+0x1b78>
   12df4:	ldr	r4, [r0]
   12df8:	mov	r0, #0
   12dfc:	mov	r1, #3
   12e00:	mov	r2, r8
   12e04:	mov	r5, #0
   12e08:	bl	1aa0c <__assert_fail@plt+0x9690>
   12e0c:	movw	r2, #52014	; 0xcb2e
   12e10:	mov	r3, r0
   12e14:	mov	r0, #0
   12e18:	mov	r1, r4
   12e1c:	b	12edc <__assert_fail@plt+0x1b60>
   12e20:	movw	r0, #57760	; 0xe1a0
   12e24:	mov	r1, #1
   12e28:	movt	r0, #2
   12e2c:	strb	r1, [r0]
   12e30:	movw	r0, #57720	; 0xe178
   12e34:	movt	r0, #2
   12e38:	ldr	r7, [r0]
   12e3c:	mov	r0, r7
   12e40:	mov	r1, #2
   12e44:	bl	18ef0 <__assert_fail@plt+0x7b74>
   12e48:	movw	r0, #57736	; 0xe188
   12e4c:	movt	r0, #2
   12e50:	ldrd	r0, [r0]
   12e54:	lsr	r0, r0, #3
   12e58:	orr	r2, r0, r1, lsl #29
   12e5c:	mov	r0, r7
   12e60:	mov	r1, r6
   12e64:	bl	18cf8 <__assert_fail@plt+0x797c>
   12e68:	cmp	r0, #0
   12e6c:	beq	12e7c <__assert_fail@plt+0x1b00>
   12e70:	bl	11250 <__errno_location@plt>
   12e74:	ldr	r6, [r0]
   12e78:	b	12e80 <__assert_fail@plt+0x1b04>
   12e7c:	mov	r6, #0
   12e80:	mov	r0, r7
   12e84:	cmp	r5, #0
   12e88:	beq	12eac <__assert_fail@plt+0x1b30>
   12e8c:	bl	18f2c <__assert_fail@plt+0x7bb0>
   12e90:	cmp	r6, #0
   12e94:	bne	12eb0 <__assert_fail@plt+0x1b34>
   12e98:	cmp	r0, #0
   12e9c:	beq	12eb0 <__assert_fail@plt+0x1b34>
   12ea0:	bl	11250 <__errno_location@plt>
   12ea4:	ldr	r6, [r0]
   12ea8:	b	12eb0 <__assert_fail@plt+0x1b34>
   12eac:	bl	112f8 <clearerr_unlocked@plt>
   12eb0:	cmp	r6, #0
   12eb4:	beq	12ee8 <__assert_fail@plt+0x1b6c>
   12eb8:	mov	r0, #0
   12ebc:	mov	r1, #3
   12ec0:	mov	r2, r8
   12ec4:	mov	r5, #0
   12ec8:	bl	1aa0c <__assert_fail@plt+0x9690>
   12ecc:	movw	r2, #52014	; 0xcb2e
   12ed0:	mov	r3, r0
   12ed4:	mov	r0, #0
   12ed8:	mov	r1, r6
   12edc:	movt	r2, #1
   12ee0:	bl	111c0 <error@plt>
   12ee4:	b	12eec <__assert_fail@plt+0x1b70>
   12ee8:	mov	r5, #1
   12eec:	mov	r0, r5
   12ef0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12ef4:	mov	r5, #1
   12ef8:	strb	r5, [r4]
   12efc:	b	12eec <__assert_fail@plt+0x1b70>
   12f00:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12f04:	add	fp, sp, #24
   12f08:	mov	r4, r0
   12f0c:	cmp	r1, #0
   12f10:	beq	12f94 <__assert_fail@plt+0x1c18>
   12f14:	movw	r5, #57724	; 0xe17c
   12f18:	movw	r8, #53678	; 0xd1ae
   12f1c:	movw	r6, #53681	; 0xd1b1
   12f20:	movw	r7, #53684	; 0xd1b4
   12f24:	movt	r5, #2
   12f28:	movt	r8, #1
   12f2c:	movt	r6, #1
   12f30:	movt	r7, #1
   12f34:	ldrb	r0, [r4]
   12f38:	cmp	r0, #12
   12f3c:	ble	12f5c <__assert_fail@plt+0x1be0>
   12f40:	cmp	r0, #13
   12f44:	beq	12f70 <__assert_fail@plt+0x1bf4>
   12f48:	cmp	r0, #92	; 0x5c
   12f4c:	bne	12f88 <__assert_fail@plt+0x1c0c>
   12f50:	ldr	r1, [r5]
   12f54:	mov	r0, r7
   12f58:	b	12f78 <__assert_fail@plt+0x1bfc>
   12f5c:	cmp	r0, #10
   12f60:	bne	12f80 <__assert_fail@plt+0x1c04>
   12f64:	ldr	r1, [r5]
   12f68:	mov	r0, r8
   12f6c:	b	12f78 <__assert_fail@plt+0x1bfc>
   12f70:	ldr	r1, [r5]
   12f74:	mov	r0, r6
   12f78:	bl	110c4 <fputs_unlocked@plt>
   12f7c:	b	12f8c <__assert_fail@plt+0x1c10>
   12f80:	cmp	r0, #0
   12f84:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   12f88:	bl	11370 <putchar_unlocked@plt>
   12f8c:	add	r4, r4, #1
   12f90:	b	12f34 <__assert_fail@plt+0x1bb8>
   12f94:	movw	r0, #57724	; 0xe17c
   12f98:	movt	r0, #2
   12f9c:	ldr	r1, [r0]
   12fa0:	mov	r0, r4
   12fa4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   12fa8:	b	110c4 <fputs_unlocked@plt>
   12fac:	push	{r4, r5, fp, lr}
   12fb0:	add	fp, sp, #8
   12fb4:	mov	r4, r0
   12fb8:	movw	r0, #57756	; 0xe19c
   12fbc:	movt	r0, #2
   12fc0:	ldr	r5, [r0]
   12fc4:	cmp	r5, #0
   12fc8:	beq	13000 <__assert_fail@plt+0x1c84>
   12fcc:	bl	11214 <__ctype_b_loc@plt>
   12fd0:	ldr	r1, [r0]
   12fd4:	mov	r0, #0
   12fd8:	mov	r2, #0
   12fdc:	ldrb	r3, [r4, r2]
   12fe0:	add	r3, r1, r3, lsl #1
   12fe4:	ldrb	r3, [r3, #1]
   12fe8:	tst	r3, #16
   12fec:	popeq	{r4, r5, fp, pc}
   12ff0:	add	r2, r2, #1
   12ff4:	cmp	r2, r5
   12ff8:	bcc	12fdc <__assert_fail@plt+0x1c60>
   12ffc:	add	r4, r4, r2
   13000:	ldrb	r0, [r4]
   13004:	clz	r0, r0
   13008:	lsr	r0, r0, #5
   1300c:	pop	{r4, r5, fp, pc}
   13010:	push	{r4, sl, fp, lr}
   13014:	add	fp, sp, #8
   13018:	cmp	r1, #0
   1301c:	mov	lr, r0
   13020:	beq	13090 <__assert_fail@plt+0x1d14>
   13024:	sub	ip, r1, #1
   13028:	mov	r3, #0
   1302c:	mov	lr, r0
   13030:	ldrb	r2, [r0, r3]
   13034:	cmp	r2, #92	; 0x5c
   13038:	beq	13048 <__assert_fail@plt+0x1ccc>
   1303c:	cmp	r2, #0
   13040:	bne	13080 <__assert_fail@plt+0x1d04>
   13044:	b	130a4 <__assert_fail@plt+0x1d28>
   13048:	cmp	r3, ip
   1304c:	beq	130a4 <__assert_fail@plt+0x1d28>
   13050:	add	r3, r3, #1
   13054:	ldrb	r4, [r0, r3]
   13058:	cmp	r4, #92	; 0x5c
   1305c:	beq	1307c <__assert_fail@plt+0x1d00>
   13060:	mov	r2, #10
   13064:	cmp	r4, #110	; 0x6e
   13068:	beq	13080 <__assert_fail@plt+0x1d04>
   1306c:	cmp	r4, #114	; 0x72
   13070:	bne	130a4 <__assert_fail@plt+0x1d28>
   13074:	mov	r2, #13
   13078:	b	13080 <__assert_fail@plt+0x1d04>
   1307c:	mov	r2, #92	; 0x5c
   13080:	add	r3, r3, #1
   13084:	strb	r2, [lr], #1
   13088:	cmp	r3, r1
   1308c:	bcc	13030 <__assert_fail@plt+0x1cb4>
   13090:	add	r1, r0, r1
   13094:	cmp	lr, r1
   13098:	movcc	r1, #0
   1309c:	strbcc	r1, [lr]
   130a0:	pop	{r4, sl, fp, pc}
   130a4:	mov	r0, #0
   130a8:	pop	{r4, sl, fp, pc}
   130ac:	andeq	r0, r0, r0
   130b0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   130b4:	add	fp, sp, #24
   130b8:	mov	r8, r1
   130bc:	mov	r9, r0
   130c0:	add	r0, r0, #64	; 0x40
   130c4:	mov	r1, #0
   130c8:	mov	r2, #176	; 0xb0
   130cc:	mov	r6, #0
   130d0:	bl	11274 <memset@plt>
   130d4:	movw	ip, #54008	; 0xd2f8
   130d8:	mov	r1, r9
   130dc:	movt	ip, #1
   130e0:	ldm	ip!, {r0, r2, r3, r5, r7}
   130e4:	stmia	r1!, {r0, r2, r3, r5, r7}
   130e8:	ldm	ip!, {r0, r2, r3, r5, r7}
   130ec:	stmia	r1!, {r0, r2, r3, r5, r7}
   130f0:	ldm	ip, {r0, r2, r3, r4, r5, r7}
   130f4:	stm	r1, {r0, r2, r3, r4, r5, r7}
   130f8:	mov	r0, r8
   130fc:	mov	r2, r9
   13100:	ldr	r1, [r0, r6]!
   13104:	ldr	r3, [r2, r6]!
   13108:	add	r6, r6, #8
   1310c:	cmp	r6, #64	; 0x40
   13110:	eor	r1, r3, r1
   13114:	ldr	r0, [r0, #4]
   13118:	str	r1, [r2]
   1311c:	ldr	r1, [r2, #4]
   13120:	eor	r0, r1, r0
   13124:	str	r0, [r2, #4]
   13128:	bne	130f8 <__assert_fail@plt+0x1d7c>
   1312c:	ldrb	r0, [r8]
   13130:	str	r0, [r9, #228]	; 0xe4
   13134:	mov	r0, #0
   13138:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1313c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13140:	add	fp, sp, #28
   13144:	sub	sp, sp, #68	; 0x44
   13148:	mov	r8, r1
   1314c:	sub	r1, r1, #1
   13150:	mov	sl, r0
   13154:	mvn	r0, #0
   13158:	cmp	r1, #63	; 0x3f
   1315c:	bhi	13204 <__assert_fail@plt+0x1e88>
   13160:	add	r9, sp, #4
   13164:	vmov.i32	q8, #0	; 0x00000000
   13168:	mov	r1, #0
   1316c:	mov	r2, #176	; 0xb0
   13170:	mov	r7, #0
   13174:	add	r0, r9, #48	; 0x30
   13178:	vst1.32	{d16-d17}, [r0]
   1317c:	add	r0, r9, #36	; 0x24
   13180:	vst1.32	{d16-d17}, [r0]
   13184:	add	r0, r9, #20
   13188:	vst1.32	{d16-d17}, [r0]
   1318c:	add	r0, r9, #4
   13190:	vst1.32	{d16-d17}, [r0]
   13194:	mov	r0, #256	; 0x100
   13198:	strb	r8, [sp, #4]
   1319c:	strh	r0, [sp, #5]
   131a0:	mov	r0, #1
   131a4:	strb	r0, [sp, #7]
   131a8:	add	r0, sl, #64	; 0x40
   131ac:	bl	11274 <memset@plt>
   131b0:	movw	ip, #54008	; 0xd2f8
   131b4:	mov	r1, sl
   131b8:	movt	ip, #1
   131bc:	ldm	ip!, {r0, r2, r3, r5, r6}
   131c0:	stmia	r1!, {r0, r2, r3, r5, r6}
   131c4:	ldm	ip!, {r0, r2, r3, r5, r6}
   131c8:	stmia	r1!, {r0, r2, r3, r5, r6}
   131cc:	ldm	ip, {r0, r2, r3, r4, r5, r6}
   131d0:	stm	r1, {r0, r2, r3, r4, r5, r6}
   131d4:	add	r0, sl, r7
   131d8:	add	r1, r9, r7
   131dc:	add	r7, r7, #16
   131e0:	vld1.8	{d16-d17}, [r1]
   131e4:	vld1.64	{d18-d19}, [r0]
   131e8:	cmp	r7, #64	; 0x40
   131ec:	veor	q8, q9, q8
   131f0:	vst1.64	{d16-d17}, [r0]
   131f4:	bne	131d4 <__assert_fail@plt+0x1e58>
   131f8:	uxtb	r0, r8
   131fc:	str	r0, [sl, #228]	; 0xe4
   13200:	mov	r0, #0
   13204:	sub	sp, fp, #28
   13208:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1320c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13210:	add	fp, sp, #28
   13214:	sub	sp, sp, #204	; 0xcc
   13218:	mov	r9, r0
   1321c:	sub	r0, r1, #1
   13220:	mvn	r6, #0
   13224:	cmp	r0, #63	; 0x3f
   13228:	bhi	13348 <__assert_fail@plt+0x1fcc>
   1322c:	cmp	r2, #0
   13230:	beq	13348 <__assert_fail@plt+0x1fcc>
   13234:	sub	r0, r3, #1
   13238:	cmp	r0, #63	; 0x3f
   1323c:	bhi	13348 <__assert_fail@plt+0x1fcc>
   13240:	sub	r8, fp, #92	; 0x5c
   13244:	vmov.i32	q8, #0	; 0x00000000
   13248:	str	r2, [sp]
   1324c:	mov	sl, r1
   13250:	mov	r2, #176	; 0xb0
   13254:	str	r3, [sp, #4]
   13258:	mov	r5, #0
   1325c:	add	r0, r8, #48	; 0x30
   13260:	vst1.32	{d16-d17}, [r0]
   13264:	add	r0, r8, #36	; 0x24
   13268:	vst1.32	{d16-d17}, [r0]
   1326c:	add	r0, r8, #20
   13270:	vst1.32	{d16-d17}, [r0]
   13274:	add	r0, r8, #4
   13278:	vst1.32	{d16-d17}, [r0]
   1327c:	movw	r0, #257	; 0x101
   13280:	strb	r3, [fp, #-91]	; 0xffffffa5
   13284:	strb	r1, [fp, #-92]	; 0xffffffa4
   13288:	mov	r1, #0
   1328c:	strh	r0, [fp, #-90]	; 0xffffffa6
   13290:	add	r0, r9, #64	; 0x40
   13294:	bl	11274 <memset@plt>
   13298:	movw	ip, #54008	; 0xd2f8
   1329c:	mov	r1, r9
   132a0:	movt	ip, #1
   132a4:	ldm	ip!, {r0, r2, r3, r6, r7}
   132a8:	stmia	r1!, {r0, r2, r3, r6, r7}
   132ac:	ldm	ip!, {r0, r2, r3, r6, r7}
   132b0:	stmia	r1!, {r0, r2, r3, r6, r7}
   132b4:	ldm	ip, {r0, r2, r3, r4, r6, r7}
   132b8:	stm	r1, {r0, r2, r3, r4, r6, r7}
   132bc:	add	r0, r9, r5
   132c0:	add	r1, r8, r5
   132c4:	add	r5, r5, #16
   132c8:	vld1.8	{d16-d17}, [r1]
   132cc:	vld1.64	{d18-d19}, [r0]
   132d0:	cmp	r5, #64	; 0x40
   132d4:	veor	q8, q9, q8
   132d8:	vst1.64	{d16-d17}, [r0]
   132dc:	bne	132bc <__assert_fail@plt+0x1f40>
   132e0:	ldr	r4, [sp, #4]
   132e4:	uxtb	r0, sl
   132e8:	add	r7, sp, #8
   132ec:	mov	r1, #0
   132f0:	mov	r6, #0
   132f4:	str	r0, [r9, #228]	; 0xe4
   132f8:	rsb	r2, r4, #128	; 0x80
   132fc:	cmp	r4, #127	; 0x7f
   13300:	add	r0, r7, r4
   13304:	movwhi	r2, #0
   13308:	bl	11274 <memset@plt>
   1330c:	ldr	r1, [sp]
   13310:	mov	r0, r7
   13314:	mov	r2, r4
   13318:	bl	11124 <memcpy@plt>
   1331c:	mov	r0, r9
   13320:	mov	r1, r7
   13324:	mov	r2, #128	; 0x80
   13328:	bl	13354 <__assert_fail@plt+0x1fd8>
   1332c:	movw	r0, #54072	; 0xd338
   13330:	mov	r1, #0
   13334:	mov	r2, #128	; 0x80
   13338:	movt	r0, #1
   1333c:	ldr	r3, [r0]
   13340:	mov	r0, r7
   13344:	blx	r3
   13348:	mov	r0, r6
   1334c:	sub	sp, fp, #28
   13350:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13354:	cmp	r2, #0
   13358:	beq	13510 <__assert_fail@plt+0x2194>
   1335c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13360:	add	fp, sp, #28
   13364:	sub	sp, sp, #20
   13368:	mov	r6, r0
   1336c:	ldr	r0, [r0, #224]	; 0xe0
   13370:	mov	r4, r2
   13374:	mov	r5, r1
   13378:	rsb	r7, r0, #128	; 0x80
   1337c:	cmp	r7, r2
   13380:	bcs	134e4 <__assert_fail@plt+0x2168>
   13384:	add	r1, r6, #96	; 0x60
   13388:	mov	sl, #0
   1338c:	str	r0, [sp, #8]
   13390:	mov	r2, r7
   13394:	str	r1, [sp, #16]
   13398:	add	r0, r1, r0
   1339c:	mov	r1, r5
   133a0:	str	sl, [r6, #224]	; 0xe0
   133a4:	bl	11124 <memcpy@plt>
   133a8:	mov	r8, r6
   133ac:	mov	r9, r6
   133b0:	ldr	r0, [r8, #64]!	; 0x40
   133b4:	adds	r1, r0, #128	; 0x80
   133b8:	str	r1, [r8]
   133bc:	ldr	r1, [r6, #68]	; 0x44
   133c0:	ldr	ip, [r6, #76]	; 0x4c
   133c4:	adc	r3, r1, #0
   133c8:	str	r3, [r6, #68]	; 0x44
   133cc:	str	ip, [sp, #12]
   133d0:	ldr	lr, [r9, #72]!	; 0x48
   133d4:	adds	r2, lr, #1
   133d8:	adc	r3, ip, #0
   133dc:	mvn	ip, #128	; 0x80
   133e0:	subs	r0, ip, r0
   133e4:	mvn	r0, #0
   133e8:	sbcs	r0, r0, r1
   133ec:	ldr	r1, [sp, #16]
   133f0:	ldr	r0, [sp, #12]
   133f4:	movwcc	sl, #1
   133f8:	cmp	sl, #0
   133fc:	moveq	r2, lr
   13400:	str	r2, [r9]
   13404:	moveq	r3, r0
   13408:	mov	r0, r6
   1340c:	str	r3, [r6, #76]	; 0x4c
   13410:	bl	13518 <__assert_fail@plt+0x219c>
   13414:	sub	sl, r4, r7
   13418:	add	r7, r5, r7
   1341c:	cmp	sl, #129	; 0x81
   13420:	bcc	134dc <__assert_fail@plt+0x2160>
   13424:	ldr	r2, [sp, #8]
   13428:	movw	r1, #257	; 0x101
   1342c:	str	r5, [sp, #16]
   13430:	add	r0, r2, r4
   13434:	sub	r1, r0, r1
   13438:	sub	r0, r0, #256	; 0x100
   1343c:	bic	r1, r1, #127	; 0x7f
   13440:	str	r0, [sp, #4]
   13444:	str	r1, [sp, #12]
   13448:	add	r1, r1, #256	; 0x100
   1344c:	sub	r1, r1, r2
   13450:	str	r1, [sp, #8]
   13454:	ldm	r8, {r2, r5}
   13458:	mov	ip, r6
   1345c:	mvn	r6, #128	; 0x80
   13460:	adds	r0, r2, #128	; 0x80
   13464:	adc	r3, r5, #0
   13468:	stm	r8, {r0, r3}
   1346c:	ldr	r4, [r9]
   13470:	ldr	r3, [r9, #4]
   13474:	adds	r0, r4, #1
   13478:	adc	r1, r3, #0
   1347c:	subs	r2, r6, r2
   13480:	mov	r6, ip
   13484:	mvn	r2, #0
   13488:	sbcs	r2, r2, r5
   1348c:	mov	r2, #0
   13490:	movwcc	r2, #1
   13494:	cmp	r2, #0
   13498:	moveq	r0, r4
   1349c:	moveq	r1, r3
   134a0:	strd	r0, [r9]
   134a4:	mov	r0, ip
   134a8:	mov	r1, r7
   134ac:	bl	13518 <__assert_fail@plt+0x219c>
   134b0:	sub	sl, sl, #128	; 0x80
   134b4:	add	r7, r7, #128	; 0x80
   134b8:	cmp	sl, #128	; 0x80
   134bc:	bhi	13454 <__assert_fail@plt+0x20d8>
   134c0:	ldr	r0, [sp, #12]
   134c4:	ldr	r1, [sp, #4]
   134c8:	ldr	r5, [sp, #16]
   134cc:	sub	r4, r1, r0
   134d0:	ldr	r0, [sp, #8]
   134d4:	add	r5, r5, r0
   134d8:	b	134e4 <__assert_fail@plt+0x2168>
   134dc:	mov	r5, r7
   134e0:	mov	r4, sl
   134e4:	ldr	r0, [r6, #224]	; 0xe0
   134e8:	mov	r1, r5
   134ec:	mov	r2, r4
   134f0:	add	r0, r6, r0
   134f4:	add	r0, r0, #96	; 0x60
   134f8:	bl	11124 <memcpy@plt>
   134fc:	ldr	r0, [r6, #224]	; 0xe0
   13500:	add	r0, r0, r4
   13504:	str	r0, [r6, #224]	; 0xe0
   13508:	sub	sp, fp, #28
   1350c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13510:	mov	r0, #0
   13514:	bx	lr
   13518:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1351c:	add	fp, sp, #28
   13520:	sub	sp, sp, #556	; 0x22c
   13524:	mov	r9, r0
   13528:	sub	r0, fp, #160	; 0xa0
   1352c:	mov	r2, #128	; 0x80
   13530:	bl	11124 <memcpy@plt>
   13534:	sub	r1, fp, #288	; 0x120
   13538:	mov	r0, r1
   1353c:	mov	ip, r1
   13540:	mov	r1, r9
   13544:	ldm	r1!, {r2, r3, r5, r6, r7}
   13548:	stmia	r0!, {r2, r3, r5, r6, r7}
   1354c:	ldm	r1!, {r2, r3, r5, r6, r7}
   13550:	stmia	r0!, {r2, r3, r5, r6, r7}
   13554:	add	r2, pc, #1012	; 0x3f4
   13558:	vld1.64	{d16-d17}, [r2]
   1355c:	ldm	r1, {r2, r3, r4, r5, r6, r7}
   13560:	stm	r0, {r2, r3, r4, r5, r6, r7}
   13564:	add	r0, ip, #80	; 0x50
   13568:	movw	r2, #26764	; 0x688c
   1356c:	str	r9, [sp, #164]	; 0xa4
   13570:	vst1.64	{d16-d17}, [r0]
   13574:	movt	r2, #39685	; 0x9b05
   13578:	ldr	r0, [fp, #-284]	; 0xfffffee4
   1357c:	ldr	r1, [fp, #-280]	; 0xfffffee8
   13580:	ldr	r6, [fp, #-248]	; 0xffffff08
   13584:	ldr	r7, [fp, #-244]	; 0xffffff0c
   13588:	ldr	r3, [fp, #-276]	; 0xfffffeec
   1358c:	ldr	r8, [fp, #-288]	; 0xfffffee0
   13590:	str	r0, [sp, #284]	; 0x11c
   13594:	ldr	r0, [fp, #-144]	; 0xffffff70
   13598:	adds	r1, r6, r1
   1359c:	adc	r3, r7, r3
   135a0:	adds	r5, r1, r0
   135a4:	str	r0, [sp, #292]	; 0x124
   135a8:	ldr	r0, [fp, #-140]	; 0xffffff74
   135ac:	mov	r1, r9
   135b0:	adc	sl, r3, r0
   135b4:	str	r0, [sp, #288]	; 0x120
   135b8:	ldr	r0, [r9, #64]	; 0x40
   135bc:	movw	r3, #44677	; 0xae85
   135c0:	ldr	r9, [r9, #68]	; 0x44
   135c4:	movt	r3, #47975	; 0xbb67
   135c8:	str	r0, [sp, #280]	; 0x118
   135cc:	ldr	r0, [r1, #72]	; 0x48
   135d0:	ldr	r1, [r1, #76]	; 0x4c
   135d4:	eor	r1, sl, r1
   135d8:	eor	r0, r5, r0
   135dc:	eor	ip, r1, r2
   135e0:	movw	r2, #27679	; 0x6c1f
   135e4:	movt	r2, #11070	; 0x2b3e
   135e8:	eor	r1, r0, r2
   135ec:	ldr	r0, [fp, #-136]	; 0xffffff78
   135f0:	movw	r2, #42811	; 0xa73b
   135f4:	movt	r2, #33994	; 0x84ca
   135f8:	adds	r2, ip, r2
   135fc:	adc	r3, r1, r3
   13600:	eor	r6, r2, r6
   13604:	str	r0, [sp, #188]	; 0xbc
   13608:	adds	r5, r0, r5
   1360c:	ldr	r0, [fp, #-132]	; 0xffffff7c
   13610:	lsl	r4, r6, #8
   13614:	eor	r7, r3, r7
   13618:	lsr	r6, r6, #24
   1361c:	orr	r6, r6, r7, lsl #8
   13620:	orr	r4, r4, r7, lsr #24
   13624:	adc	r7, r0, sl
   13628:	adds	r5, r5, r6
   1362c:	str	r0, [sp, #184]	; 0xb8
   13630:	ldr	sl, [fp, #-152]	; 0xffffff68
   13634:	adc	r0, r7, r4
   13638:	str	r5, [sp, #272]	; 0x110
   1363c:	str	r0, [sp, #276]	; 0x114
   13640:	eor	r0, r0, r1
   13644:	eor	r1, r5, ip
   13648:	ldr	ip, [fp, #-148]	; 0xffffff6c
   1364c:	lsl	r5, r1, #16
   13650:	lsr	r1, r1, #16
   13654:	orr	r7, r5, r0, lsr #16
   13658:	orr	r0, r1, r0, lsl #16
   1365c:	movw	r5, #21119	; 0x527f
   13660:	str	sl, [sp, #180]	; 0xb4
   13664:	adds	r1, r0, r2
   13668:	str	r0, [sp, #260]	; 0x104
   1366c:	str	r7, [sp, #256]	; 0x100
   13670:	movt	r5, #20750	; 0x510e
   13674:	adc	r0, r7, r3
   13678:	str	r1, [sp, #156]	; 0x9c
   1367c:	eor	r1, r1, r6
   13680:	ldr	r7, [fp, #-160]	; 0xffffff60
   13684:	ldr	r3, [sp, #284]	; 0x11c
   13688:	ldr	r6, [fp, #-156]	; 0xffffff64
   1368c:	str	ip, [sp, #176]	; 0xb0
   13690:	str	r0, [sp, #160]	; 0xa0
   13694:	eor	r0, r0, r4
   13698:	ldr	r4, [sp, #280]	; 0x118
   1369c:	lsl	r2, r0, #1
   136a0:	orr	r2, r2, r1, lsr #31
   136a4:	lsl	r1, r1, #1
   136a8:	orr	lr, r1, r0, lsr #31
   136ac:	ldr	r0, [fp, #-256]	; 0xffffff00
   136b0:	str	r2, [sp, #268]	; 0x10c
   136b4:	ldr	r2, [fp, #-252]	; 0xffffff04
   136b8:	str	r6, [sp, #244]	; 0xf4
   136bc:	str	r7, [sp, #248]	; 0xf8
   136c0:	str	lr, [sp, #232]	; 0xe8
   136c4:	adds	r1, r0, r8
   136c8:	adc	r3, r2, r3
   136cc:	adds	r1, r1, r7
   136d0:	movw	r7, #58983	; 0xe667
   136d4:	adc	r3, r3, r6
   136d8:	movt	r7, #27145	; 0x6a09
   136dc:	eor	r6, r3, r9
   136e0:	eor	r8, r6, r5
   136e4:	eor	r5, r1, r4
   136e8:	movw	r4, #33489	; 0x82d1
   136ec:	movt	r4, #44518	; 0xade6
   136f0:	eor	r5, r5, r4
   136f4:	movw	r4, #51464	; 0xc908
   136f8:	movt	r4, #62396	; 0xf3bc
   136fc:	adds	r9, r8, r4
   13700:	adc	r7, r5, r7
   13704:	eor	r0, r9, r0
   13708:	lsl	r4, r0, #8
   1370c:	eor	r2, r7, r2
   13710:	lsr	r0, r0, #24
   13714:	orr	r4, r4, r2, lsr #24
   13718:	orr	r2, r0, r2, lsl #8
   1371c:	adds	r0, sl, r1
   13720:	adc	r1, ip, r3
   13724:	adds	r0, r0, r2
   13728:	adc	r6, r1, r4
   1372c:	ldr	r1, [sp, #164]	; 0xa4
   13730:	eor	r5, r6, r5
   13734:	ldr	r3, [r1, #80]	; 0x50
   13738:	ldr	sl, [r1, #84]	; 0x54
   1373c:	ldr	ip, [r1, #92]	; 0x5c
   13740:	ldr	r1, [r1, #88]	; 0x58
   13744:	str	r0, [fp, #-288]	; 0xfffffee0
   13748:	str	r6, [fp, #-284]	; 0xfffffee4
   1374c:	str	r3, [sp, #284]	; 0x11c
   13750:	adds	r3, lr, r0
   13754:	eor	r0, r0, r8
   13758:	str	r3, [sp, #228]	; 0xe4
   1375c:	ldr	r3, [sp, #268]	; 0x10c
   13760:	adc	r3, r3, r6
   13764:	lsl	r6, r0, #16
   13768:	lsr	r0, r0, #16
   1376c:	orr	r0, r0, r5, lsl #16
   13770:	orr	r6, r6, r5, lsr #16
   13774:	str	r3, [sp, #136]	; 0x88
   13778:	adds	r3, r0, r9
   1377c:	mov	r5, r0
   13780:	str	r0, [sp, #264]	; 0x108
   13784:	str	r6, [sp, #240]	; 0xf0
   13788:	adc	r7, r6, r7
   1378c:	eor	r2, r3, r2
   13790:	str	r3, [sp, #140]	; 0x8c
   13794:	eor	r0, r7, r4
   13798:	mov	r4, r7
   1379c:	str	r7, [sp, #128]	; 0x80
   137a0:	lsl	r7, r0, #1
   137a4:	orr	lr, r7, r2, lsr #31
   137a8:	lsl	r2, r2, #1
   137ac:	orr	r7, r2, r0, lsr #31
   137b0:	movw	r0, #8569	; 0x2179
   137b4:	ldr	r2, [sp, #272]	; 0x110
   137b8:	str	lr, [sp, #148]	; 0x94
   137bc:	movt	r0, #4990	; 0x137e
   137c0:	str	r7, [sp, #144]	; 0x90
   137c4:	eor	r0, r1, r0
   137c8:	movw	r1, #52505	; 0xcd19
   137cc:	movt	r1, #23520	; 0x5be0
   137d0:	str	r0, [fp, #-168]	; 0xffffff58
   137d4:	eor	r1, ip, r1
   137d8:	str	r1, [fp, #-164]	; 0xffffff5c
   137dc:	str	r2, [fp, #-280]	; 0xfffffee8
   137e0:	ldr	r2, [sp, #276]	; 0x114
   137e4:	str	r2, [fp, #-276]	; 0xfffffeec
   137e8:	ldr	r2, [sp, #256]	; 0x100
   137ec:	str	r6, [fp, #-188]	; 0xffffff44
   137f0:	str	r5, [fp, #-192]	; 0xffffff40
   137f4:	str	r2, [fp, #-180]	; 0xffffff4c
   137f8:	ldr	r2, [sp, #260]	; 0x104
   137fc:	str	r2, [fp, #-184]	; 0xffffff48
   13800:	ldr	r2, [sp, #156]	; 0x9c
   13804:	str	r3, [fp, #-224]	; 0xffffff20
   13808:	str	r2, [fp, #-216]	; 0xffffff28
   1380c:	ldr	r2, [sp, #160]	; 0xa0
   13810:	str	r4, [fp, #-220]	; 0xffffff24
   13814:	str	r2, [fp, #-212]	; 0xffffff2c
   13818:	str	lr, [fp, #-252]	; 0xffffff04
   1381c:	str	r7, [fp, #-256]	; 0xffffff00
   13820:	ldr	lr, [fp, #-116]	; 0xffffff8c
   13824:	ldr	r2, [fp, #-264]	; 0xfffffef8
   13828:	ldr	r5, [fp, #-232]	; 0xffffff18
   1382c:	ldr	r6, [fp, #-260]	; 0xfffffefc
   13830:	ldr	r4, [fp, #-228]	; 0xffffff1c
   13834:	ldr	r3, [fp, #-272]	; 0xfffffef0
   13838:	ldr	ip, [fp, #-268]	; 0xfffffef4
   1383c:	str	lr, [sp, #212]	; 0xd4
   13840:	adds	r2, r5, r2
   13844:	adc	r7, r4, r6
   13848:	ldr	r6, [fp, #-112]	; 0xffffff90
   1384c:	adds	r2, r2, r6
   13850:	str	r6, [sp, #172]	; 0xac
   13854:	eor	r9, r2, r0
   13858:	ldr	r0, [fp, #-108]	; 0xffffff94
   1385c:	str	r0, [sp, #168]	; 0xa8
   13860:	adc	r0, r7, r0
   13864:	eor	r7, r0, r1
   13868:	movw	r1, #14065	; 0x36f1
   1386c:	movt	r1, #24349	; 0x5f1d
   13870:	str	r7, [sp, #132]	; 0x84
   13874:	adds	r7, r7, r1
   13878:	movw	r1, #62778	; 0xf53a
   1387c:	movt	r1, #42319	; 0xa54f
   13880:	str	r7, [sp, #104]	; 0x68
   13884:	adc	r1, r9, r1
   13888:	str	r1, [sp, #152]	; 0x98
   1388c:	eor	r1, r1, r4
   13890:	eor	r4, r7, r5
   13894:	lsl	r5, r4, #8
   13898:	lsr	r4, r4, #24
   1389c:	orr	r7, r5, r1, lsr #24
   138a0:	orr	r6, r4, r1, lsl #8
   138a4:	ldr	r1, [fp, #-104]	; 0xffffff98
   138a8:	movw	r5, #55723	; 0xd9ab
   138ac:	str	r7, [sp, #92]	; 0x5c
   138b0:	str	r6, [sp, #236]	; 0xec
   138b4:	movt	r5, #8067	; 0x1f83
   138b8:	str	r1, [sp, #196]	; 0xc4
   138bc:	adds	r1, r1, r2
   138c0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   138c4:	adc	r0, r2, r0
   138c8:	adds	r1, r1, r6
   138cc:	str	r2, [sp, #192]	; 0xc0
   138d0:	ldr	r2, [fp, #-236]	; 0xffffff14
   138d4:	ldr	r6, [fp, #-124]	; 0xffffff84
   138d8:	adc	r0, r0, r7
   138dc:	ldr	r7, [fp, #-128]	; 0xffffff80
   138e0:	str	r1, [sp, #200]	; 0xc8
   138e4:	str	r0, [sp, #204]	; 0xcc
   138e8:	ldr	r0, [fp, #-240]	; 0xffffff10
   138ec:	str	r6, [sp, #220]	; 0xdc
   138f0:	str	r7, [sp, #224]	; 0xe0
   138f4:	adds	r1, r0, r3
   138f8:	adc	r3, r2, ip
   138fc:	adds	r4, r1, r7
   13900:	ldr	ip, [fp, #-120]	; 0xffffff88
   13904:	adc	r3, r3, r6
   13908:	movw	r6, #48491	; 0xbd6b
   1390c:	eor	r1, r3, sl
   13910:	movt	r6, #64321	; 0xfb41
   13914:	eor	r5, r1, r5
   13918:	ldr	r1, [sp, #284]	; 0x11c
   1391c:	str	ip, [sp, #216]	; 0xd8
   13920:	eor	r1, r4, r1
   13924:	eor	r6, r1, r6
   13928:	movw	r1, #63531	; 0xf82b
   1392c:	movt	r1, #65172	; 0xfe94
   13930:	adds	sl, r5, r1
   13934:	movw	r1, #62322	; 0xf372
   13938:	movt	r1, #15470	; 0x3c6e
   1393c:	eor	r0, sl, r0
   13940:	adc	r8, r6, r1
   13944:	lsl	r7, r0, #8
   13948:	b	13960 <__assert_fail@plt+0x25e4>
   1394c:	nop	{0}
   13950:	vcmla.f32	d15, d4, d27[0], #90
   13954:	stclcc	3, cr15, [lr], #-456	; 0xfffffe38
   13958:	svcpl	0x001d36f1
   1395c:	strbge	pc, [pc, #-1338]	; 1342a <__assert_fail@plt+0x20ae>	; <UNPREDICTABLE>
   13960:	lsr	r0, r0, #24
   13964:	adds	r1, ip, r4
   13968:	eor	r2, r8, r2
   1396c:	orr	r0, r0, r2, lsl #8
   13970:	orr	r7, r7, r2, lsr #24
   13974:	adc	r2, lr, r3
   13978:	ldr	lr, [fp, #-88]	; 0xffffffa8
   1397c:	adds	r1, r1, r0
   13980:	str	r0, [sp, #100]	; 0x64
   13984:	str	r7, [sp, #88]	; 0x58
   13988:	adc	r4, r2, r7
   1398c:	eor	r2, r1, r5
   13990:	str	r1, [sp, #84]	; 0x54
   13994:	str	r1, [fp, #-272]	; 0xfffffef0
   13998:	ldr	r5, [sp, #204]	; 0xcc
   1399c:	eor	r0, r4, r6
   139a0:	lsr	r3, r2, #16
   139a4:	lsl	r2, r2, #16
   139a8:	str	r4, [fp, #-268]	; 0xfffffef4
   139ac:	ldr	r6, [sp, #228]	; 0xe4
   139b0:	str	r4, [sp, #68]	; 0x44
   139b4:	ldr	r4, [fp, #-84]	; 0xffffffac
   139b8:	orr	r7, r3, r0, lsl #16
   139bc:	orr	r0, r2, r0, lsr #16
   139c0:	ldr	r2, [fp, #-92]	; 0xffffffa4
   139c4:	ldr	r3, [sp, #200]	; 0xc8
   139c8:	str	lr, [sp, #284]	; 0x11c
   139cc:	str	r0, [fp, #-172]	; 0xffffff54
   139d0:	mov	r1, r0
   139d4:	str	r0, [sp, #96]	; 0x60
   139d8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   139dc:	str	r7, [fp, #-176]	; 0xffffff50
   139e0:	str	r7, [sp, #116]	; 0x74
   139e4:	str	r5, [fp, #-260]	; 0xfffffefc
   139e8:	eor	r9, r5, r9
   139ec:	str	r4, [sp, #280]	; 0x118
   139f0:	str	r2, [sp, #208]	; 0xd0
   139f4:	str	r3, [fp, #-264]	; 0xfffffef8
   139f8:	str	r0, [sp, #252]	; 0xfc
   139fc:	adds	ip, r6, r0
   13a00:	ldr	r0, [sp, #136]	; 0x88
   13a04:	adc	r6, r0, r2
   13a08:	ldr	r0, [sp, #132]	; 0x84
   13a0c:	adds	r7, r7, sl
   13a10:	adc	r2, r1, r8
   13a14:	str	r7, [sp, #228]	; 0xe4
   13a18:	eor	r1, r3, r0
   13a1c:	lsr	r5, r1, #16
   13a20:	lsl	r1, r1, #16
   13a24:	orr	r0, r5, r9, lsl #16
   13a28:	orr	r1, r1, r9, lsr #16
   13a2c:	mov	r9, r2
   13a30:	str	r0, [sp, #76]	; 0x4c
   13a34:	eor	r8, r0, ip
   13a38:	ldr	r0, [sp, #268]	; 0x10c
   13a3c:	eor	r5, r1, r6
   13a40:	str	r1, [sp, #80]	; 0x50
   13a44:	adds	sl, r5, r7
   13a48:	adc	r3, r8, r2
   13a4c:	eor	r1, r3, r0
   13a50:	ldr	r0, [sp, #232]	; 0xe8
   13a54:	eor	r0, sl, r0
   13a58:	lsl	r7, r0, #8
   13a5c:	lsr	r0, r0, #24
   13a60:	orr	r7, r7, r1, lsr #24
   13a64:	orr	r0, r0, r1, lsl #8
   13a68:	adds	r1, lr, ip
   13a6c:	adc	r6, r4, r6
   13a70:	adds	lr, r1, r0
   13a74:	adc	r6, r6, r7
   13a78:	eor	r2, lr, r5
   13a7c:	str	lr, [fp, #-288]	; 0xfffffee0
   13a80:	str	lr, [sp, #108]	; 0x6c
   13a84:	eor	r1, r6, r8
   13a88:	mov	r8, r6
   13a8c:	str	r6, [sp, #112]	; 0x70
   13a90:	lsl	r6, r2, #16
   13a94:	lsr	r2, r2, #16
   13a98:	orr	r6, r6, r1, lsr #16
   13a9c:	orr	r1, r2, r1, lsl #16
   13aa0:	str	r8, [fp, #-284]	; 0xfffffee4
   13aa4:	adds	r2, r1, sl
   13aa8:	mov	r5, r1
   13aac:	str	r1, [sp, #136]	; 0x88
   13ab0:	str	r6, [fp, #-164]	; 0xffffff5c
   13ab4:	str	r6, [sp, #132]	; 0x84
   13ab8:	adc	ip, r6, r3
   13abc:	eor	r0, r2, r0
   13ac0:	mov	r4, r2
   13ac4:	str	r2, [sp, #120]	; 0x78
   13ac8:	str	r5, [fp, #-168]	; 0xffffff58
   13acc:	ldr	r5, [fp, #-72]	; 0xffffffb8
   13ad0:	ldr	r6, [fp, #-68]	; 0xffffffbc
   13ad4:	eor	r1, ip, r7
   13ad8:	str	r4, [fp, #-208]	; 0xffffff30
   13adc:	ldr	r4, [fp, #-80]	; 0xffffffb0
   13ae0:	str	ip, [fp, #-204]	; 0xffffff34
   13ae4:	str	ip, [sp, #124]	; 0x7c
   13ae8:	lsl	r2, r1, #1
   13aec:	orr	r7, r2, r0, lsr #31
   13af0:	lsl	r0, r0, #1
   13af4:	ldr	r2, [sp, #228]	; 0xe4
   13af8:	orr	r3, r0, r1, lsr #31
   13afc:	ldr	r0, [sp, #88]	; 0x58
   13b00:	ldr	r1, [sp, #100]	; 0x64
   13b04:	str	r7, [fp, #-244]	; 0xffffff0c
   13b08:	mov	lr, r7
   13b0c:	str	r7, [sp, #44]	; 0x2c
   13b10:	str	r5, [sp, #232]	; 0xe8
   13b14:	str	r6, [sp, #228]	; 0xe4
   13b18:	str	r3, [fp, #-248]	; 0xffffff08
   13b1c:	mov	ip, r3
   13b20:	str	r3, [sp, #64]	; 0x40
   13b24:	eor	r0, r9, r0
   13b28:	eor	r1, r2, r1
   13b2c:	lsl	r2, r0, #1
   13b30:	orr	r2, r2, r1, lsr #31
   13b34:	lsl	r1, r1, #1
   13b38:	orr	r1, r1, r0, lsr #31
   13b3c:	ldr	r0, [sp, #272]	; 0x110
   13b40:	str	r1, [sp, #100]	; 0x64
   13b44:	adds	sl, r1, r0
   13b48:	ldr	r0, [sp, #276]	; 0x114
   13b4c:	str	r4, [sp, #276]	; 0x114
   13b50:	adc	r9, r2, r0
   13b54:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13b58:	adds	r7, sl, r4
   13b5c:	ldr	r4, [sp, #76]	; 0x4c
   13b60:	str	r0, [sp, #272]	; 0x110
   13b64:	adc	r3, r9, r0
   13b68:	ldr	r0, [sp, #240]	; 0xf0
   13b6c:	eor	sl, r3, r0
   13b70:	ldr	r0, [sp, #104]	; 0x68
   13b74:	adds	r8, r4, r0
   13b78:	ldr	r0, [sp, #152]	; 0x98
   13b7c:	ldr	r4, [sp, #80]	; 0x50
   13b80:	str	r8, [sp, #268]	; 0x10c
   13b84:	adc	r1, r4, r0
   13b88:	ldr	r0, [sp, #264]	; 0x108
   13b8c:	adds	r8, sl, r8
   13b90:	str	r1, [sp, #240]	; 0xf0
   13b94:	eor	r4, r7, r0
   13b98:	ldr	r0, [sp, #100]	; 0x64
   13b9c:	adc	r9, r4, r1
   13ba0:	eor	r2, r9, r2
   13ba4:	eor	r1, r8, r0
   13ba8:	lsl	r0, r1, #8
   13bac:	lsr	r1, r1, #24
   13bb0:	orr	r0, r0, r2, lsr #24
   13bb4:	orr	r1, r1, r2, lsl #8
   13bb8:	adds	r2, r5, r7
   13bbc:	ldr	r5, [sp, #224]	; 0xe0
   13bc0:	adc	r3, r6, r3
   13bc4:	adds	r2, r2, r1
   13bc8:	adc	r3, r3, r0
   13bcc:	adds	r7, ip, r5
   13bd0:	ldr	r5, [sp, #220]	; 0xdc
   13bd4:	adc	r5, lr, r5
   13bd8:	adds	r7, r7, r2
   13bdc:	eor	r2, r2, sl
   13be0:	str	r7, [sp, #40]	; 0x28
   13be4:	adc	r7, r5, r3
   13be8:	eor	r3, r3, r4
   13bec:	lsl	r4, r2, #16
   13bf0:	lsr	r2, r2, #16
   13bf4:	orr	r2, r2, r3, lsl #16
   13bf8:	str	r7, [sp, #152]	; 0x98
   13bfc:	orr	r7, r4, r3, lsr #16
   13c00:	str	r2, [sp, #88]	; 0x58
   13c04:	adds	r2, r2, r8
   13c08:	str	r7, [sp, #72]	; 0x48
   13c0c:	ldr	r8, [fp, #-52]	; 0xffffffcc
   13c10:	adc	r3, r7, r9
   13c14:	mov	r5, r2
   13c18:	eor	r1, r2, r1
   13c1c:	str	r2, [sp, #100]	; 0x64
   13c20:	ldr	r9, [sp, #144]	; 0x90
   13c24:	eor	r0, r3, r0
   13c28:	mov	r4, r3
   13c2c:	str	r3, [sp, #104]	; 0x68
   13c30:	str	r5, [fp, #-200]	; 0xffffff38
   13c34:	ldr	r3, [sp, #68]	; 0x44
   13c38:	ldr	r5, [fp, #-56]	; 0xffffffc8
   13c3c:	lsl	r2, r0, #1
   13c40:	str	r4, [fp, #-196]	; 0xffffff3c
   13c44:	ldr	r4, [sp, #140]	; 0x8c
   13c48:	orr	r6, r2, r1, lsr #31
   13c4c:	lsl	r1, r1, #1
   13c50:	ldr	r2, [sp, #268]	; 0x10c
   13c54:	str	r8, [sp, #264]	; 0x108
   13c58:	orr	r7, r1, r0, lsr #31
   13c5c:	ldr	r0, [sp, #92]	; 0x5c
   13c60:	ldr	r1, [sp, #240]	; 0xf0
   13c64:	str	r6, [sp, #80]	; 0x50
   13c68:	str	r6, [fp, #-236]	; 0xffffff14
   13c6c:	ldr	r6, [fp, #-60]	; 0xffffffc4
   13c70:	str	r7, [sp, #76]	; 0x4c
   13c74:	str	r7, [fp, #-240]	; 0xffffff10
   13c78:	ldr	r7, [fp, #-64]	; 0xffffffc0
   13c7c:	str	r5, [sp, #268]	; 0x10c
   13c80:	eor	r0, r1, r0
   13c84:	ldr	r1, [sp, #236]	; 0xec
   13c88:	str	r6, [sp, #236]	; 0xec
   13c8c:	str	r7, [sp, #240]	; 0xf0
   13c90:	eor	r1, r2, r1
   13c94:	lsl	r2, r0, #1
   13c98:	orr	r2, r2, r1, lsr #31
   13c9c:	lsl	r1, r1, #1
   13ca0:	orr	r0, r1, r0, lsr #31
   13ca4:	ldr	r1, [sp, #84]	; 0x54
   13ca8:	adds	r1, r0, r1
   13cac:	adc	r3, r2, r3
   13cb0:	adds	r1, r1, r7
   13cb4:	ldr	r7, [sp, #256]	; 0x100
   13cb8:	adc	r3, r3, r6
   13cbc:	ldr	r6, [sp, #260]	; 0x104
   13cc0:	eor	r7, r3, r7
   13cc4:	adds	ip, r7, r4
   13cc8:	ldr	r4, [sp, #128]	; 0x80
   13ccc:	eor	r6, r1, r6
   13cd0:	eor	r0, ip, r0
   13cd4:	adc	lr, r6, r4
   13cd8:	lsl	r4, r0, #8
   13cdc:	lsr	r0, r0, #24
   13ce0:	adds	r1, r5, r1
   13ce4:	eor	r2, lr, r2
   13ce8:	orr	r0, r0, r2, lsl #8
   13cec:	orr	r4, r4, r2, lsr #24
   13cf0:	adc	r2, r8, r3
   13cf4:	adds	r3, r1, r0
   13cf8:	adc	r1, r2, r4
   13cfc:	eor	r2, r3, r7
   13d00:	str	r3, [sp, #48]	; 0x30
   13d04:	str	r1, [sp, #52]	; 0x34
   13d08:	lsl	r3, r2, #16
   13d0c:	eor	r1, r1, r6
   13d10:	lsr	r2, r2, #16
   13d14:	orr	r8, r2, r1, lsl #16
   13d18:	orr	r3, r3, r1, lsr #16
   13d1c:	ldr	r1, [sp, #152]	; 0x98
   13d20:	adds	r7, r8, ip
   13d24:	eor	r0, r7, r0
   13d28:	str	r7, [sp, #36]	; 0x24
   13d2c:	eor	r1, r3, r1
   13d30:	str	r1, [sp, #140]	; 0x8c
   13d34:	adc	r1, r3, lr
   13d38:	eor	r2, r1, r4
   13d3c:	str	r1, [sp, #68]	; 0x44
   13d40:	ldr	r1, [sp, #204]	; 0xcc
   13d44:	ldr	r4, [fp, #-36]	; 0xffffffdc
   13d48:	lsl	r6, r2, #1
   13d4c:	orr	r3, r6, r0, lsr #31
   13d50:	lsl	r0, r0, #1
   13d54:	orr	r7, r0, r2, lsr #31
   13d58:	ldr	r0, [sp, #200]	; 0xc8
   13d5c:	str	r3, [sp, #56]	; 0x38
   13d60:	str	r3, [fp, #-228]	; 0xffffff1c
   13d64:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13d68:	ldr	r2, [sp, #148]	; 0x94
   13d6c:	str	r7, [sp, #60]	; 0x3c
   13d70:	str	r7, [fp, #-232]	; 0xffffff18
   13d74:	ldr	r7, [fp, #-44]	; 0xffffffd4
   13d78:	str	r4, [sp, #200]	; 0xc8
   13d7c:	adds	r0, r0, r9
   13d80:	str	r3, [sp, #260]	; 0x104
   13d84:	adc	r5, r1, r2
   13d88:	adds	r6, r0, r3
   13d8c:	ldr	r0, [sp, #96]	; 0x60
   13d90:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13d94:	str	r7, [sp, #256]	; 0x100
   13d98:	adc	r5, r5, r7
   13d9c:	eor	ip, r5, r0
   13da0:	ldr	r0, [sp, #116]	; 0x74
   13da4:	str	r1, [sp, #204]	; 0xcc
   13da8:	eor	r3, r6, r0
   13dac:	ldr	r0, [sp, #156]	; 0x9c
   13db0:	adds	lr, ip, r0
   13db4:	ldr	r0, [sp, #160]	; 0xa0
   13db8:	adc	sl, r3, r0
   13dbc:	eor	r0, lr, r9
   13dc0:	lsl	r7, r0, #8
   13dc4:	eor	r2, sl, r2
   13dc8:	lsr	r0, r0, #24
   13dcc:	orr	r9, r0, r2, lsl #8
   13dd0:	adds	r0, r1, r6
   13dd4:	orr	r7, r7, r2, lsr #24
   13dd8:	ldr	r2, [sp, #40]	; 0x28
   13ddc:	adc	r5, r4, r5
   13de0:	adds	r1, r0, r9
   13de4:	str	r7, [sp, #96]	; 0x60
   13de8:	adc	r0, r5, r7
   13dec:	str	r1, [sp, #156]	; 0x9c
   13df0:	str	r0, [sp, #160]	; 0xa0
   13df4:	eor	r0, r0, r3
   13df8:	eor	r3, r1, ip
   13dfc:	ldr	ip, [sp, #140]	; 0x8c
   13e00:	lsl	r4, r3, #16
   13e04:	lsr	r3, r3, #16
   13e08:	orr	r6, r3, r0, lsl #16
   13e0c:	orr	r1, r4, r0, lsr #16
   13e10:	ldr	r0, [sp, #44]	; 0x2c
   13e14:	eor	r3, r8, r2
   13e18:	adds	r5, r6, lr
   13e1c:	str	r1, [sp, #144]	; 0x90
   13e20:	adc	lr, r1, sl
   13e24:	ldr	r1, [sp, #64]	; 0x40
   13e28:	adds	r7, r5, ip
   13e2c:	adc	r8, lr, r3
   13e30:	eor	r0, r8, r0
   13e34:	eor	r4, r7, r1
   13e38:	ldr	r1, [sp, #252]	; 0xfc
   13e3c:	lsl	sl, r4, #8
   13e40:	lsr	r4, r4, #24
   13e44:	orr	sl, sl, r0, lsr #24
   13e48:	orr	r0, r4, r0, lsl #8
   13e4c:	adds	r4, r2, r1
   13e50:	ldr	r1, [sp, #208]	; 0xd0
   13e54:	ldr	r2, [sp, #152]	; 0x98
   13e58:	adc	r1, r2, r1
   13e5c:	adds	r2, r4, r0
   13e60:	adc	r1, r1, sl
   13e64:	str	r2, [sp, #84]	; 0x54
   13e68:	str	r1, [sp, #92]	; 0x5c
   13e6c:	eor	r1, r1, r3
   13e70:	eor	r3, r2, ip
   13e74:	lsl	r4, r3, #16
   13e78:	lsr	r3, r3, #16
   13e7c:	orr	r4, r4, r1, lsr #16
   13e80:	orr	r1, r3, r1, lsl #16
   13e84:	adds	r3, r1, r7
   13e88:	str	r1, [sp, #152]	; 0x98
   13e8c:	ldr	r7, [sp, #112]	; 0x70
   13e90:	str	r4, [sp, #140]	; 0x8c
   13e94:	adc	r1, r4, r8
   13e98:	str	r3, [sp, #116]	; 0x74
   13e9c:	eor	r0, r3, r0
   13ea0:	ldr	r4, [sp, #36]	; 0x24
   13ea4:	str	r1, [sp, #128]	; 0x80
   13ea8:	eor	r1, r1, sl
   13eac:	lsl	r3, r1, #1
   13eb0:	orr	sl, r3, r0, lsr #31
   13eb4:	lsl	r0, r0, #1
   13eb8:	ldr	r3, [sp, #108]	; 0x6c
   13ebc:	orr	r8, r0, r1, lsr #31
   13ec0:	ldr	r0, [sp, #96]	; 0x60
   13ec4:	eor	r1, r5, r9
   13ec8:	str	r8, [sp, #148]	; 0x94
   13ecc:	eor	r0, lr, r0
   13ed0:	lsl	r2, r0, #1
   13ed4:	orr	r2, r2, r1, lsr #31
   13ed8:	lsl	r1, r1, #1
   13edc:	orr	r0, r1, r0, lsr #31
   13ee0:	ldr	r1, [sp, #260]	; 0x104
   13ee4:	adds	r1, r1, r3
   13ee8:	ldr	r3, [sp, #256]	; 0x100
   13eec:	adc	r3, r3, r7
   13ef0:	ldr	r7, [sp, #72]	; 0x48
   13ef4:	adds	ip, r1, r0
   13ef8:	adc	lr, r3, r2
   13efc:	eor	r1, lr, r7
   13f00:	ldr	r7, [sp, #88]	; 0x58
   13f04:	adds	r4, r1, r4
   13f08:	str	r1, [sp, #108]	; 0x6c
   13f0c:	ldr	r1, [sp, #68]	; 0x44
   13f10:	eor	r0, r4, r0
   13f14:	str	r4, [sp, #88]	; 0x58
   13f18:	ldr	r4, [sp, #80]	; 0x50
   13f1c:	eor	r3, ip, r7
   13f20:	adc	r7, r3, r1
   13f24:	ldr	r1, [sp, #272]	; 0x110
   13f28:	str	r3, [sp, #72]	; 0x48
   13f2c:	str	r7, [sp, #96]	; 0x60
   13f30:	eor	r2, r7, r2
   13f34:	lsl	r7, r0, #8
   13f38:	lsr	r0, r0, #24
   13f3c:	orr	r7, r7, r2, lsr #24
   13f40:	orr	r2, r0, r2, lsl #8
   13f44:	ldr	r0, [sp, #276]	; 0x114
   13f48:	str	r2, [sp, #68]	; 0x44
   13f4c:	str	r7, [sp, #64]	; 0x40
   13f50:	adds	r0, ip, r0
   13f54:	adc	r1, lr, r1
   13f58:	adds	r2, r0, r2
   13f5c:	ldr	r0, [sp, #180]	; 0xb4
   13f60:	adc	r3, r1, r7
   13f64:	ldr	r1, [sp, #176]	; 0xb0
   13f68:	str	r2, [sp, #44]	; 0x2c
   13f6c:	ldr	r7, [sp, #120]	; 0x78
   13f70:	str	r3, [sp, #40]	; 0x28
   13f74:	adds	r0, r8, r0
   13f78:	adc	r1, sl, r1
   13f7c:	adds	r0, r0, r2
   13f80:	ldr	r2, [sp, #76]	; 0x4c
   13f84:	str	r0, [sp, #112]	; 0x70
   13f88:	ldr	r0, [sp, #284]	; 0x11c
   13f8c:	adc	r9, r1, r3
   13f90:	ldr	r1, [sp, #280]	; 0x118
   13f94:	ldr	r3, [sp, #48]	; 0x30
   13f98:	adds	r0, r2, r0
   13f9c:	adc	r1, r4, r1
   13fa0:	adds	r0, r0, r3
   13fa4:	ldr	r3, [sp, #52]	; 0x34
   13fa8:	adc	r1, r1, r3
   13fac:	ldr	r3, [sp, #144]	; 0x90
   13fb0:	eor	lr, r3, r1
   13fb4:	eor	r3, r6, r0
   13fb8:	adds	ip, lr, r7
   13fbc:	ldr	r7, [sp, #124]	; 0x7c
   13fc0:	adc	r8, r3, r7
   13fc4:	eor	r7, ip, r2
   13fc8:	lsl	r6, r7, #8
   13fcc:	eor	r5, r8, r4
   13fd0:	lsr	r7, r7, #24
   13fd4:	orr	r4, r7, r5, lsl #8
   13fd8:	ldr	r7, [sp, #204]	; 0xcc
   13fdc:	orr	r2, r6, r5, lsr #24
   13fe0:	ldr	r5, [sp, #56]	; 0x38
   13fe4:	str	r2, [sp, #76]	; 0x4c
   13fe8:	str	r4, [sp, #80]	; 0x50
   13fec:	adds	r0, r7, r0
   13ff0:	ldr	r7, [sp, #200]	; 0xc8
   13ff4:	adc	r1, r7, r1
   13ff8:	adds	r7, r0, r4
   13ffc:	ldr	r4, [sp, #60]	; 0x3c
   14000:	adc	r0, r1, r2
   14004:	eor	r1, r7, lr
   14008:	str	r7, [sp, #120]	; 0x78
   1400c:	str	r0, [sp, #124]	; 0x7c
   14010:	lsl	r2, r1, #16
   14014:	eor	r0, r0, r3
   14018:	lsr	r1, r1, #16
   1401c:	orr	r2, r2, r0, lsr #16
   14020:	orr	r0, r1, r0, lsl #16
   14024:	ldr	r1, [sp, #264]	; 0x108
   14028:	adds	r6, r0, ip
   1402c:	str	r0, [sp, #52]	; 0x34
   14030:	ldr	r0, [sp, #268]	; 0x10c
   14034:	str	r2, [sp, #48]	; 0x30
   14038:	adc	r8, r2, r8
   1403c:	ldr	r2, [sp, #156]	; 0x9c
   14040:	str	r6, [sp, #20]
   14044:	adds	r0, r4, r0
   14048:	adc	r1, r5, r1
   1404c:	adds	r2, r0, r2
   14050:	ldr	r0, [sp, #160]	; 0xa0
   14054:	adc	r3, r1, r0
   14058:	ldr	r0, [sp, #132]	; 0x84
   1405c:	eor	lr, r3, r0
   14060:	ldr	r0, [sp, #136]	; 0x88
   14064:	eor	ip, r2, r0
   14068:	ldr	r0, [sp, #100]	; 0x64
   1406c:	adds	r7, lr, r0
   14070:	ldr	r0, [sp, #104]	; 0x68
   14074:	str	r7, [sp, #100]	; 0x64
   14078:	adc	r0, ip, r0
   1407c:	str	r0, [sp, #104]	; 0x68
   14080:	eor	r1, r0, r5
   14084:	eor	r0, r7, r4
   14088:	lsl	r7, r0, #8
   1408c:	lsr	r0, r0, #24
   14090:	orr	r5, r0, r1, lsl #8
   14094:	ldr	r0, [sp, #172]	; 0xac
   14098:	orr	r4, r7, r1, lsr #24
   1409c:	ldr	r1, [sp, #168]	; 0xa8
   140a0:	str	r5, [sp, #60]	; 0x3c
   140a4:	str	r4, [sp, #56]	; 0x38
   140a8:	adds	r0, r2, r0
   140ac:	adc	r1, r3, r1
   140b0:	adds	r2, r0, r5
   140b4:	str	r2, [sp, #24]
   140b8:	adc	r0, r1, r4
   140bc:	eor	r2, r2, lr
   140c0:	mov	lr, r9
   140c4:	str	r0, [sp, #32]
   140c8:	lsr	r1, r2, #16
   140cc:	eor	r0, r0, ip
   140d0:	lsl	r2, r2, #16
   140d4:	orr	r5, r2, r0, lsr #16
   140d8:	orr	r1, r1, r0, lsl #16
   140dc:	ldr	r0, [sp, #148]	; 0x94
   140e0:	eor	r2, r9, r5
   140e4:	ldr	r9, [sp, #112]	; 0x70
   140e8:	str	r1, [sp, #28]
   140ec:	adds	r7, r2, r6
   140f0:	mov	r6, r8
   140f4:	eor	r0, r7, r0
   140f8:	eor	r3, r9, r1
   140fc:	adc	r4, r3, r8
   14100:	ldr	r8, [sp, #240]	; 0xf0
   14104:	eor	r1, r4, sl
   14108:	lsl	sl, r0, #8
   1410c:	lsr	r0, r0, #24
   14110:	orr	sl, sl, r1, lsr #24
   14114:	orr	ip, r0, r1, lsl #8
   14118:	adds	r1, r9, r8
   1411c:	ldr	r9, [sp, #236]	; 0xec
   14120:	adc	lr, lr, r9
   14124:	adds	r0, r1, ip
   14128:	adc	r1, lr, sl
   1412c:	eor	r2, r0, r2
   14130:	str	r0, [sp, #112]	; 0x70
   14134:	eor	lr, r1, r3
   14138:	lsl	r3, r2, #16
   1413c:	lsr	r2, r2, #16
   14140:	str	r1, [sp, #132]	; 0x84
   14144:	orr	r1, r2, lr, lsl #16
   14148:	orr	r3, r3, lr, lsr #16
   1414c:	adds	r2, r1, r7
   14150:	str	r1, [sp, #160]	; 0xa0
   14154:	str	r3, [sp, #156]	; 0x9c
   14158:	ldr	r7, [sp, #92]	; 0x5c
   1415c:	adc	r1, r3, r4
   14160:	str	r2, [sp, #144]	; 0x90
   14164:	eor	r0, r2, ip
   14168:	str	r1, [sp, #148]	; 0x94
   1416c:	eor	r1, r1, sl
   14170:	lsl	r2, r1, #1
   14174:	orr	r2, r2, r0, lsr #31
   14178:	lsl	r0, r0, #1
   1417c:	orr	sl, r0, r1, lsr #31
   14180:	ldr	r0, [sp, #76]	; 0x4c
   14184:	str	r2, [sp, #136]	; 0x88
   14188:	ldr	r1, [sp, #80]	; 0x50
   1418c:	ldr	r2, [sp, #20]
   14190:	str	sl, [sp, #36]	; 0x24
   14194:	eor	r0, r6, r0
   14198:	eor	r1, r2, r1
   1419c:	lsl	r2, r0, #1
   141a0:	orr	r3, r2, r1, lsr #31
   141a4:	lsl	r1, r1, #1
   141a8:	ldr	r2, [sp, #84]	; 0x54
   141ac:	orr	r0, r1, r0, lsr #31
   141b0:	ldr	r1, [sp, #248]	; 0xf8
   141b4:	adds	r1, r2, r1
   141b8:	ldr	r2, [sp, #244]	; 0xf4
   141bc:	adc	r2, r7, r2
   141c0:	adds	lr, r1, r0
   141c4:	ldr	r1, [sp, #100]	; 0x64
   141c8:	adc	ip, r2, r3
   141cc:	ldr	r2, [sp, #28]
   141d0:	adds	r6, r2, r1
   141d4:	ldr	r1, [sp, #104]	; 0x68
   141d8:	ldr	r2, [sp, #40]	; 0x28
   141dc:	str	r6, [sp, #20]
   141e0:	adc	r7, r5, r1
   141e4:	ldr	r1, [sp, #72]	; 0x48
   141e8:	str	r7, [sp, #16]
   141ec:	eor	r5, r2, r1
   141f0:	ldr	r1, [sp, #108]	; 0x6c
   141f4:	ldr	r2, [sp, #44]	; 0x2c
   141f8:	eor	r4, r2, r1
   141fc:	lsr	r2, r4, #16
   14200:	lsl	r4, r4, #16
   14204:	orr	r2, r2, r5, lsl #16
   14208:	orr	r5, r4, r5, lsr #16
   1420c:	eor	r1, r5, ip
   14210:	eor	r4, r2, lr
   14214:	str	r2, [fp, #-192]	; 0xffffff40
   14218:	str	r5, [fp, #-188]	; 0xffffff44
   1421c:	str	r1, [sp, #84]	; 0x54
   14220:	adds	r1, r1, r6
   14224:	str	r4, [sp, #80]	; 0x50
   14228:	adc	r4, r4, r7
   1422c:	eor	r0, r1, r0
   14230:	str	r1, [sp, #104]	; 0x68
   14234:	ldr	r1, [sp, #288]	; 0x120
   14238:	str	r4, [sp, #108]	; 0x6c
   1423c:	eor	r3, r4, r3
   14240:	lsl	r4, r0, #8
   14244:	lsr	r0, r0, #24
   14248:	orr	r6, r0, r3, lsl #8
   1424c:	ldr	r0, [sp, #292]	; 0x124
   14250:	orr	r4, r4, r3, lsr #24
   14254:	str	r4, [sp, #92]	; 0x5c
   14258:	str	r6, [sp, #100]	; 0x64
   1425c:	adds	r0, lr, r0
   14260:	adc	r3, ip, r1
   14264:	adds	r0, r0, r6
   14268:	adc	r1, r3, r4
   1426c:	str	r0, [sp, #76]	; 0x4c
   14270:	adds	r0, r0, r8
   14274:	adc	r3, r1, r9
   14278:	adds	r0, r0, sl
   1427c:	str	r1, [sp, #72]	; 0x48
   14280:	ldr	r1, [sp, #24]
   14284:	str	r0, [sp, #40]	; 0x28
   14288:	ldr	r0, [sp, #136]	; 0x88
   1428c:	adc	r0, r3, r0
   14290:	str	r0, [sp, #28]
   14294:	ldr	r0, [sp, #88]	; 0x58
   14298:	adds	r8, r2, r0
   1429c:	ldr	r0, [sp, #96]	; 0x60
   142a0:	str	r8, [fp, #-224]	; 0xffffff20
   142a4:	adc	r4, r5, r0
   142a8:	ldr	r0, [sp, #64]	; 0x40
   142ac:	str	r4, [fp, #-220]	; 0xffffff24
   142b0:	eor	r2, r4, r0
   142b4:	ldr	r0, [sp, #68]	; 0x44
   142b8:	lsl	r7, r2, #1
   142bc:	eor	r3, r8, r0
   142c0:	ldr	r0, [sp, #216]	; 0xd8
   142c4:	orr	r7, r7, r3, lsr #31
   142c8:	lsl	r3, r3, #1
   142cc:	orr	r2, r3, r2, lsr #31
   142d0:	str	r7, [fp, #-252]	; 0xffffff04
   142d4:	str	r2, [fp, #-256]	; 0xffffff00
   142d8:	adds	r3, r1, r0
   142dc:	ldr	r0, [sp, #212]	; 0xd4
   142e0:	ldr	r1, [sp, #32]
   142e4:	adc	r6, r1, r0
   142e8:	ldr	r0, [sp, #140]	; 0x8c
   142ec:	adds	sl, r3, r2
   142f0:	ldr	r1, [sp, #48]	; 0x30
   142f4:	ldr	r3, [sp, #52]	; 0x34
   142f8:	adc	r9, r6, r7
   142fc:	ldr	r6, [sp, #128]	; 0x80
   14300:	str	r0, [fp, #-180]	; 0xffffff4c
   14304:	ldr	r0, [sp, #152]	; 0x98
   14308:	str	r0, [fp, #-184]	; 0xffffff48
   1430c:	ldr	r0, [sp, #116]	; 0x74
   14310:	str	r6, [fp, #-212]	; 0xffffff2c
   14314:	str	r0, [fp, #-216]	; 0xffffff28
   14318:	str	r1, [fp, #-172]	; 0xffffff54
   1431c:	eor	r1, r9, r1
   14320:	str	r3, [fp, #-176]	; 0xffffff50
   14324:	eor	r3, sl, r3
   14328:	adds	lr, r1, r0
   1432c:	adc	ip, r3, r6
   14330:	eor	r2, lr, r2
   14334:	lsl	r6, r2, #8
   14338:	eor	r5, ip, r7
   1433c:	lsr	r2, r2, #24
   14340:	orr	r0, r2, r5, lsl #8
   14344:	ldr	r2, [sp, #188]	; 0xbc
   14348:	orr	r6, r6, r5, lsr #24
   1434c:	ldr	r5, [sp, #184]	; 0xb8
   14350:	str	r0, [sp, #68]	; 0x44
   14354:	str	r6, [sp, #64]	; 0x40
   14358:	adds	r2, sl, r2
   1435c:	ldr	sl, [sp, #232]	; 0xe8
   14360:	adc	r7, r9, r5
   14364:	adds	r5, r2, r0
   14368:	ldr	r0, [sp, #56]	; 0x38
   1436c:	adc	r2, r7, r6
   14370:	eor	r1, r5, r1
   14374:	str	r5, [sp, #116]	; 0x74
   14378:	ldr	r7, [sp, #228]	; 0xe4
   1437c:	ldr	r6, [sp, #140]	; 0x8c
   14380:	str	r2, [sp, #128]	; 0x80
   14384:	eor	r2, r2, r3
   14388:	lsl	r3, r1, #16
   1438c:	lsr	r1, r1, #16
   14390:	orr	r1, r1, r2, lsl #16
   14394:	orr	r3, r3, r2, lsr #16
   14398:	ldr	r2, [sp, #20]
   1439c:	adds	r5, r1, lr
   143a0:	str	r1, [sp, #52]	; 0x34
   143a4:	ldr	r1, [sp, #16]
   143a8:	str	r3, [sp, #48]	; 0x30
   143ac:	adc	r9, r3, ip
   143b0:	str	r5, [sp, #12]
   143b4:	str	r9, [sp, #8]
   143b8:	eor	r0, r1, r0
   143bc:	ldr	r1, [sp, #60]	; 0x3c
   143c0:	eor	r1, r2, r1
   143c4:	lsl	r2, r0, #1
   143c8:	orr	r3, r2, r1, lsr #31
   143cc:	lsl	r1, r1, #1
   143d0:	ldr	r2, [sp, #124]	; 0x7c
   143d4:	orr	r0, r1, r0, lsr #31
   143d8:	ldr	r1, [sp, #120]	; 0x78
   143dc:	adds	r1, r1, sl
   143e0:	adc	r2, r2, r7
   143e4:	adds	r1, r1, r0
   143e8:	adc	r2, r2, r3
   143ec:	eor	lr, r2, r6
   143f0:	ldr	r6, [sp, #152]	; 0x98
   143f4:	eor	ip, r1, r6
   143f8:	adds	r6, lr, r8
   143fc:	adc	r4, ip, r4
   14400:	eor	r0, r6, r0
   14404:	str	r6, [sp, #20]
   14408:	lsl	r6, r0, #8
   1440c:	eor	r3, r4, r3
   14410:	lsr	r0, r0, #24
   14414:	str	r4, [sp, #56]	; 0x38
   14418:	orr	r4, r6, r3, lsr #24
   1441c:	orr	r3, r0, r3, lsl #8
   14420:	ldr	r0, [sp, #196]	; 0xc4
   14424:	str	r3, [sp, #152]	; 0x98
   14428:	str	r4, [sp, #60]	; 0x3c
   1442c:	adds	r0, r1, r0
   14430:	ldr	r1, [sp, #192]	; 0xc0
   14434:	adc	r1, r2, r1
   14438:	adds	r2, r0, r3
   1443c:	adc	r0, r1, r4
   14440:	eor	r3, r2, lr
   14444:	str	r2, [sp, #32]
   14448:	ldr	r2, [sp, #40]	; 0x28
   1444c:	str	r0, [sp, #44]	; 0x2c
   14450:	lsr	r1, r3, #16
   14454:	eor	r0, r0, ip
   14458:	lsl	r3, r3, #16
   1445c:	orr	r1, r1, r0, lsl #16
   14460:	orr	r8, r3, r0, lsr #16
   14464:	ldr	r0, [sp, #156]	; 0x9c
   14468:	ldr	r3, [sp, #28]
   1446c:	str	r1, [sp, #16]
   14470:	eor	r6, r2, r1
   14474:	str	r0, [fp, #-164]	; 0xffffff5c
   14478:	ldr	r0, [sp, #160]	; 0xa0
   1447c:	eor	lr, r3, r8
   14480:	adds	r4, lr, r5
   14484:	adc	r5, r6, r9
   14488:	str	r0, [fp, #-168]	; 0xffffff58
   1448c:	ldr	r0, [sp, #144]	; 0x90
   14490:	str	r0, [fp, #-208]	; 0xffffff30
   14494:	ldr	r0, [sp, #148]	; 0x94
   14498:	str	r0, [fp, #-204]	; 0xffffff34
   1449c:	ldr	r0, [sp, #136]	; 0x88
   144a0:	str	r0, [fp, #-244]	; 0xffffff0c
   144a4:	eor	r1, r5, r0
   144a8:	ldr	r0, [sp, #36]	; 0x24
   144ac:	str	r0, [fp, #-248]	; 0xffffff08
   144b0:	eor	r0, r4, r0
   144b4:	lsl	r9, r0, #8
   144b8:	lsr	r0, r0, #24
   144bc:	orr	r9, r9, r1, lsr #24
   144c0:	orr	ip, r0, r1, lsl #8
   144c4:	ldr	r1, [sp, #248]	; 0xf8
   144c8:	adds	r1, r2, r1
   144cc:	ldr	r2, [sp, #244]	; 0xf4
   144d0:	adc	r2, r3, r2
   144d4:	adds	r0, r1, ip
   144d8:	adc	r1, r2, r9
   144dc:	eor	r2, r0, lr
   144e0:	str	r0, [sp, #88]	; 0x58
   144e4:	str	r1, [sp, #96]	; 0x60
   144e8:	eor	r1, r1, r6
   144ec:	lsl	r3, r2, #16
   144f0:	lsr	r2, r2, #16
   144f4:	ldr	r6, [sp, #72]	; 0x48
   144f8:	orr	r3, r3, r1, lsr #16
   144fc:	orr	r1, r2, r1, lsl #16
   14500:	adds	r2, r1, r4
   14504:	str	r1, [sp, #140]	; 0x8c
   14508:	str	r3, [sp, #136]	; 0x88
   1450c:	adc	r1, r3, r5
   14510:	str	r2, [sp, #120]	; 0x78
   14514:	eor	r0, r2, ip
   14518:	ldr	r3, [sp, #132]	; 0x84
   1451c:	ldr	r5, [sp, #76]	; 0x4c
   14520:	str	r1, [sp, #124]	; 0x7c
   14524:	eor	r1, r1, r9
   14528:	lsl	r2, r1, #1
   1452c:	orr	lr, r2, r0, lsr #31
   14530:	lsl	r0, r0, #1
   14534:	ldr	r2, [sp, #12]
   14538:	orr	r9, r0, r1, lsr #31
   1453c:	ldr	r0, [sp, #64]	; 0x40
   14540:	ldr	r1, [sp, #8]
   14544:	str	lr, [sp, #24]
   14548:	str	r9, [sp, #28]
   1454c:	eor	r0, r1, r0
   14550:	ldr	r1, [sp, #68]	; 0x44
   14554:	eor	r1, r2, r1
   14558:	lsl	r2, r0, #1
   1455c:	orr	r2, r2, r1, lsr #31
   14560:	lsl	r1, r1, #1
   14564:	orr	r0, r1, r0, lsr #31
   14568:	ldr	r1, [sp, #112]	; 0x70
   1456c:	adds	r1, r1, sl
   14570:	adc	r3, r3, r7
   14574:	adds	sl, r1, r0
   14578:	ldr	r1, [sp, #20]
   1457c:	ldr	r7, [sp, #16]
   14580:	adc	r3, r3, r2
   14584:	adds	r1, r7, r1
   14588:	ldr	r7, [sp, #56]	; 0x38
   1458c:	str	r1, [sp, #40]	; 0x28
   14590:	adc	r8, r8, r7
   14594:	ldr	r7, [sp, #80]	; 0x50
   14598:	eor	r7, r6, r7
   1459c:	ldr	r6, [sp, #84]	; 0x54
   145a0:	eor	r6, r5, r6
   145a4:	lsr	r5, r6, #16
   145a8:	lsl	r6, r6, #16
   145ac:	orr	r6, r6, r7, lsr #16
   145b0:	orr	ip, r5, r7, lsl #16
   145b4:	eor	r7, r3, r6
   145b8:	eor	r5, sl, ip
   145bc:	adds	r4, r7, r1
   145c0:	str	r7, [sp, #80]	; 0x50
   145c4:	ldr	r1, [sp, #208]	; 0xd0
   145c8:	str	r5, [sp, #76]	; 0x4c
   145cc:	adc	r7, r5, r8
   145d0:	eor	r0, r4, r0
   145d4:	str	r4, [sp, #72]	; 0x48
   145d8:	str	r7, [sp, #84]	; 0x54
   145dc:	eor	r2, r7, r2
   145e0:	lsl	r7, r0, #8
   145e4:	lsr	r0, r0, #24
   145e8:	orr	r7, r7, r2, lsr #24
   145ec:	orr	r2, r0, r2, lsl #8
   145f0:	ldr	r0, [sp, #252]	; 0xfc
   145f4:	str	r2, [sp, #68]	; 0x44
   145f8:	str	r7, [sp, #64]	; 0x40
   145fc:	adds	r0, sl, r0
   14600:	adc	r1, r3, r1
   14604:	adds	r2, r0, r2
   14608:	ldr	r0, [sp, #276]	; 0x114
   1460c:	adc	r3, r1, r7
   14610:	ldr	r1, [sp, #272]	; 0x110
   14614:	str	r2, [sp, #56]	; 0x38
   14618:	str	r3, [sp, #36]	; 0x24
   1461c:	adds	r0, r9, r0
   14620:	adc	r1, lr, r1
   14624:	adds	r0, r0, r2
   14628:	str	r0, [sp, #132]	; 0x84
   1462c:	adc	r0, r1, r3
   14630:	ldr	r3, [sp, #44]	; 0x2c
   14634:	str	r0, [sp, #112]	; 0x70
   14638:	ldr	r0, [sp, #104]	; 0x68
   1463c:	adds	r4, ip, r0
   14640:	ldr	r0, [sp, #108]	; 0x6c
   14644:	adc	sl, r6, r0
   14648:	ldr	r0, [sp, #92]	; 0x5c
   1464c:	eor	r1, sl, r0
   14650:	ldr	r0, [sp, #100]	; 0x64
   14654:	lsl	r6, r1, #1
   14658:	eor	r2, r4, r0
   1465c:	ldr	r0, [sp, #216]	; 0xd8
   14660:	orr	r6, r6, r2, lsr #31
   14664:	lsl	r2, r2, #1
   14668:	orr	r1, r2, r1, lsr #31
   1466c:	ldr	r2, [sp, #32]
   14670:	str	r6, [fp, #-236]	; 0xffffff14
   14674:	str	r1, [fp, #-240]	; 0xffffff10
   14678:	str	r4, [fp, #-200]	; 0xffffff38
   1467c:	str	sl, [fp, #-196]	; 0xffffff3c
   14680:	adds	r2, r2, r0
   14684:	ldr	r0, [sp, #212]	; 0xd4
   14688:	adc	r5, r3, r0
   1468c:	ldr	r0, [sp, #48]	; 0x30
   14690:	adds	r2, r2, r1
   14694:	ldr	r3, [sp, #148]	; 0x94
   14698:	adc	ip, r5, r6
   1469c:	eor	lr, r0, ip
   146a0:	ldr	r0, [sp, #52]	; 0x34
   146a4:	eor	r9, r0, r2
   146a8:	ldr	r0, [sp, #144]	; 0x90
   146ac:	adds	r0, lr, r0
   146b0:	adc	r3, r9, r3
   146b4:	eor	r1, r0, r1
   146b8:	eor	r5, r3, r6
   146bc:	lsl	r6, r1, #8
   146c0:	lsr	r1, r1, #24
   146c4:	orr	r7, r6, r5, lsr #24
   146c8:	orr	r5, r1, r5, lsl #8
   146cc:	ldr	r1, [sp, #292]	; 0x124
   146d0:	str	r5, [sp, #100]	; 0x64
   146d4:	str	r7, [sp, #92]	; 0x5c
   146d8:	adds	r1, r2, r1
   146dc:	ldr	r2, [sp, #288]	; 0x120
   146e0:	adc	r2, ip, r2
   146e4:	adds	r6, r1, r5
   146e8:	adc	r1, r2, r7
   146ec:	eor	r2, r6, lr
   146f0:	str	r6, [sp, #108]	; 0x6c
   146f4:	str	r1, [sp, #148]	; 0x94
   146f8:	lsl	r6, r2, #16
   146fc:	eor	r1, r1, r9
   14700:	lsr	r2, r2, #16
   14704:	orr	r6, r6, r1, lsr #16
   14708:	orr	r1, r2, r1, lsl #16
   1470c:	ldr	r2, [sp, #40]	; 0x28
   14710:	adds	lr, r1, r0
   14714:	str	r1, [sp, #104]	; 0x68
   14718:	ldr	r1, [sp, #152]	; 0x98
   1471c:	str	r6, [sp, #44]	; 0x2c
   14720:	adc	r0, r6, r3
   14724:	ldr	r3, [sp, #116]	; 0x74
   14728:	str	r0, [sp, #16]
   1472c:	ldr	r0, [sp, #60]	; 0x3c
   14730:	eor	r1, r2, r1
   14734:	eor	r0, r8, r0
   14738:	lsl	r2, r0, #1
   1473c:	orr	r6, r2, r1, lsr #31
   14740:	lsl	r1, r1, #1
   14744:	ldr	r2, [sp, #200]	; 0xc8
   14748:	orr	r0, r1, r0, lsr #31
   1474c:	ldr	r1, [sp, #204]	; 0xcc
   14750:	str	r6, [fp, #-228]	; 0xffffff1c
   14754:	str	r0, [fp, #-232]	; 0xffffff18
   14758:	adds	r1, r0, r1
   1475c:	adc	r2, r6, r2
   14760:	adds	r1, r1, r3
   14764:	ldr	r3, [sp, #128]	; 0x80
   14768:	adc	r3, r2, r3
   1476c:	ldr	r2, [sp, #156]	; 0x9c
   14770:	eor	ip, r3, r2
   14774:	ldr	r2, [sp, #160]	; 0xa0
   14778:	adds	r4, ip, r4
   1477c:	eor	r0, r4, r0
   14780:	str	r4, [sp, #52]	; 0x34
   14784:	ldr	r4, [sp, #16]
   14788:	lsl	r7, r0, #8
   1478c:	lsr	r0, r0, #24
   14790:	eor	r2, r1, r2
   14794:	adc	r5, r2, sl
   14798:	mov	sl, lr
   1479c:	eor	r6, r5, r6
   147a0:	str	r5, [sp, #60]	; 0x3c
   147a4:	ldr	r5, [sp, #132]	; 0x84
   147a8:	orr	r7, r7, r6, lsr #24
   147ac:	orr	r6, r0, r6, lsl #8
   147b0:	ldr	r0, [sp, #268]	; 0x10c
   147b4:	str	r7, [sp, #40]	; 0x28
   147b8:	str	r6, [sp, #48]	; 0x30
   147bc:	adds	r0, r1, r0
   147c0:	ldr	r1, [sp, #264]	; 0x108
   147c4:	adc	r1, r3, r1
   147c8:	adds	r3, r0, r6
   147cc:	adc	r0, r1, r7
   147d0:	ldr	r7, [sp, #112]	; 0x70
   147d4:	str	r3, [sp, #20]
   147d8:	str	r0, [sp, #32]
   147dc:	eor	r0, r0, r2
   147e0:	eor	r2, r3, ip
   147e4:	lsr	r1, r2, #16
   147e8:	lsl	r2, r2, #16
   147ec:	orr	r1, r1, r0, lsl #16
   147f0:	orr	r9, r2, r0, lsr #16
   147f4:	ldr	r0, [sp, #24]
   147f8:	eor	r2, r7, r9
   147fc:	eor	r3, r5, r1
   14800:	str	r1, [sp, #12]
   14804:	adds	r8, r2, lr
   14808:	adc	lr, r3, r4
   1480c:	eor	r1, lr, r0
   14810:	ldr	r0, [sp, #28]
   14814:	eor	r0, r8, r0
   14818:	lsl	r6, r0, #8
   1481c:	lsr	r0, r0, #24
   14820:	orr	r6, r6, r1, lsr #24
   14824:	orr	r0, r0, r1, lsl #8
   14828:	ldr	r1, [sp, #260]	; 0x104
   1482c:	adds	r1, r5, r1
   14830:	ldr	r5, [sp, #256]	; 0x100
   14834:	adc	ip, r7, r5
   14838:	adds	r5, r1, r0
   1483c:	adc	r1, ip, r6
   14840:	eor	r2, r5, r2
   14844:	str	r5, [sp, #112]	; 0x70
   14848:	eor	ip, r1, r3
   1484c:	lsl	r3, r2, #16
   14850:	lsr	r2, r2, #16
   14854:	str	r1, [sp, #116]	; 0x74
   14858:	orr	r1, r2, ip, lsl #16
   1485c:	orr	r3, r3, ip, lsr #16
   14860:	ldr	ip, [sp, #184]	; 0xb8
   14864:	adds	r2, r1, r8
   14868:	str	r1, [sp, #152]	; 0x98
   1486c:	str	r3, [sp, #144]	; 0x90
   14870:	adc	r1, r3, lr
   14874:	str	r2, [sp, #128]	; 0x80
   14878:	eor	r0, r2, r0
   1487c:	ldr	r3, [sp, #96]	; 0x60
   14880:	str	r1, [sp, #132]	; 0x84
   14884:	eor	r1, r1, r6
   14888:	ldr	r6, [sp, #188]	; 0xbc
   1488c:	lsl	r2, r1, #1
   14890:	orr	r2, r2, r0, lsr #31
   14894:	lsl	r0, r0, #1
   14898:	orr	r0, r0, r1, lsr #31
   1489c:	ldr	r1, [sp, #100]	; 0x64
   148a0:	str	r2, [sp, #156]	; 0x9c
   148a4:	str	r0, [sp, #160]	; 0xa0
   148a8:	ldr	r0, [sp, #92]	; 0x5c
   148ac:	eor	r1, sl, r1
   148b0:	eor	r0, r4, r0
   148b4:	ldr	r4, [sp, #36]	; 0x24
   148b8:	lsl	r2, r0, #1
   148bc:	orr	r2, r2, r1, lsr #31
   148c0:	lsl	r1, r1, #1
   148c4:	orr	lr, r1, r0, lsr #31
   148c8:	ldr	r1, [sp, #88]	; 0x58
   148cc:	ldr	r0, [sp, #52]	; 0x34
   148d0:	adds	r7, r1, r6
   148d4:	ldr	r1, [sp, #12]
   148d8:	adc	r3, r3, ip
   148dc:	adds	r8, r7, lr
   148e0:	adc	sl, r3, r2
   148e4:	ldr	r3, [sp, #76]	; 0x4c
   148e8:	adds	r0, r1, r0
   148ec:	ldr	r1, [sp, #60]	; 0x3c
   148f0:	str	r0, [sp, #28]
   148f4:	eor	r5, r4, r3
   148f8:	ldr	r3, [sp, #80]	; 0x50
   148fc:	ldr	r4, [sp, #56]	; 0x38
   14900:	adc	r1, r9, r1
   14904:	str	r1, [sp, #12]
   14908:	eor	r4, r4, r3
   1490c:	lsr	r7, r4, #16
   14910:	lsl	r4, r4, #16
   14914:	orr	r9, r4, r5, lsr #16
   14918:	orr	r7, r7, r5, lsl #16
   1491c:	eor	r3, r9, sl
   14920:	eor	r5, r7, r8
   14924:	str	r7, [fp, #-192]	; 0xffffff40
   14928:	str	r9, [fp, #-188]	; 0xffffff44
   1492c:	adds	r4, r3, r0
   14930:	str	r3, [sp, #92]	; 0x5c
   14934:	str	r5, [sp, #60]	; 0x3c
   14938:	adc	r3, r5, r1
   1493c:	eor	r0, r4, lr
   14940:	str	r4, [sp, #96]	; 0x60
   14944:	ldr	r1, [sp, #160]	; 0xa0
   14948:	lsl	r4, r0, #8
   1494c:	eor	r2, r3, r2
   14950:	lsr	r0, r0, #24
   14954:	str	r3, [sp, #100]	; 0x64
   14958:	orr	r3, r4, r2, lsr #24
   1495c:	orr	r4, r0, r2, lsl #8
   14960:	ldr	r0, [sp, #172]	; 0xac
   14964:	ldr	r2, [sp, #168]	; 0xa8
   14968:	str	r4, [sp, #80]	; 0x50
   1496c:	str	r3, [sp, #76]	; 0x4c
   14970:	adds	r0, r8, r0
   14974:	adc	r2, sl, r2
   14978:	adds	r0, r0, r4
   1497c:	adc	r2, r2, r3
   14980:	str	r0, [sp, #56]	; 0x38
   14984:	adds	r0, r0, r6
   14988:	str	r2, [sp, #52]	; 0x34
   1498c:	adc	r2, r2, ip
   14990:	adds	r0, r0, r1
   14994:	str	r0, [sp, #24]
   14998:	ldr	r0, [sp, #156]	; 0x9c
   1499c:	adc	r0, r2, r0
   149a0:	ldr	r2, [sp, #20]
   149a4:	str	r0, [sp, #16]
   149a8:	ldr	r0, [sp, #72]	; 0x48
   149ac:	adds	lr, r7, r0
   149b0:	ldr	r0, [sp, #84]	; 0x54
   149b4:	adc	ip, r9, r0
   149b8:	ldr	r0, [sp, #64]	; 0x40
   149bc:	eor	r1, ip, r0
   149c0:	ldr	r0, [sp, #68]	; 0x44
   149c4:	lsl	r6, r1, #1
   149c8:	eor	r7, lr, r0
   149cc:	ldr	r0, [sp, #284]	; 0x11c
   149d0:	orr	r6, r6, r7, lsr #31
   149d4:	lsl	r7, r7, #1
   149d8:	orr	r1, r7, r1, lsr #31
   149dc:	adds	r7, r2, r0
   149e0:	ldr	r0, [sp, #280]	; 0x118
   149e4:	ldr	r2, [sp, #32]
   149e8:	adc	r5, r2, r0
   149ec:	ldr	r0, [sp, #44]	; 0x2c
   149f0:	adds	r7, r7, r1
   149f4:	adc	r5, r5, r6
   149f8:	str	r0, [fp, #-172]	; 0xffffff54
   149fc:	eor	r4, r5, r0
   14a00:	ldr	r0, [sp, #104]	; 0x68
   14a04:	str	r0, [fp, #-176]	; 0xffffff50
   14a08:	eor	r3, r7, r0
   14a0c:	ldr	r0, [sp, #120]	; 0x78
   14a10:	str	r0, [fp, #-216]	; 0xffffff28
   14a14:	adds	sl, r4, r0
   14a18:	ldr	r0, [sp, #124]	; 0x7c
   14a1c:	str	r0, [fp, #-212]	; 0xffffff2c
   14a20:	str	r1, [fp, #-256]	; 0xffffff00
   14a24:	eor	r1, sl, r1
   14a28:	adc	r9, r3, r0
   14a2c:	str	r6, [fp, #-252]	; 0xffffff04
   14a30:	lsl	r2, r1, #8
   14a34:	eor	r6, r9, r6
   14a38:	lsr	r1, r1, #24
   14a3c:	orr	r0, r2, r6, lsr #24
   14a40:	orr	r6, r1, r6, lsl #8
   14a44:	ldr	r1, [sp, #224]	; 0xe0
   14a48:	ldr	r2, [sp, #220]	; 0xdc
   14a4c:	str	r0, [sp, #72]	; 0x48
   14a50:	str	r6, [sp, #84]	; 0x54
   14a54:	adds	r1, r7, r1
   14a58:	adc	r2, r5, r2
   14a5c:	adds	r5, r1, r6
   14a60:	ldr	r6, [sp, #16]
   14a64:	adc	r1, r2, r0
   14a68:	eor	r2, r5, r4
   14a6c:	ldr	r4, [sp, #192]	; 0xc0
   14a70:	str	r5, [sp, #88]	; 0x58
   14a74:	str	r1, [sp, #120]	; 0x78
   14a78:	eor	r1, r1, r3
   14a7c:	lsl	r3, r2, #16
   14a80:	lsr	r2, r2, #16
   14a84:	orr	r3, r3, r1, lsr #16
   14a88:	orr	r1, r2, r1, lsl #16
   14a8c:	ldr	r2, [sp, #28]
   14a90:	adds	r8, r1, sl
   14a94:	str	r1, [sp, #44]	; 0x2c
   14a98:	ldr	r1, [sp, #12]
   14a9c:	str	r3, [sp, #36]	; 0x24
   14aa0:	adc	r0, r3, r9
   14aa4:	str	r8, [sp, #4]
   14aa8:	str	r0, [sp, #8]
   14aac:	ldr	r0, [sp, #40]	; 0x28
   14ab0:	eor	r0, r1, r0
   14ab4:	ldr	r1, [sp, #48]	; 0x30
   14ab8:	lsl	r3, r0, #1
   14abc:	eor	r2, r2, r1
   14ac0:	ldr	r1, [sp, #108]	; 0x6c
   14ac4:	orr	r3, r3, r2, lsr #31
   14ac8:	lsl	r2, r2, #1
   14acc:	orr	r0, r2, r0, lsr #31
   14ad0:	ldr	r2, [sp, #196]	; 0xc4
   14ad4:	adds	r2, r1, r2
   14ad8:	ldr	r1, [sp, #148]	; 0x94
   14adc:	adc	r5, r1, r4
   14ae0:	ldr	r1, [sp, #136]	; 0x88
   14ae4:	adds	r2, r2, r0
   14ae8:	ldr	r4, [sp, #180]	; 0xb4
   14aec:	adc	r5, r5, r3
   14af0:	str	r1, [fp, #-180]	; 0xffffff4c
   14af4:	eor	r9, r5, r1
   14af8:	ldr	r1, [sp, #140]	; 0x8c
   14afc:	str	r1, [fp, #-184]	; 0xffffff48
   14b00:	eor	sl, r2, r1
   14b04:	adds	r1, r9, lr
   14b08:	str	lr, [fp, #-224]	; 0xffffff20
   14b0c:	str	ip, [fp, #-220]	; 0xffffff24
   14b10:	adc	r7, sl, ip
   14b14:	eor	r0, r1, r0
   14b18:	str	r1, [sp, #64]	; 0x40
   14b1c:	str	r7, [sp, #68]	; 0x44
   14b20:	eor	r3, r7, r3
   14b24:	lsl	r7, r0, #8
   14b28:	lsr	r0, r0, #24
   14b2c:	orr	r7, r7, r3, lsr #24
   14b30:	orr	r3, r0, r3, lsl #8
   14b34:	adds	r0, r2, r4
   14b38:	ldr	r2, [sp, #176]	; 0xb0
   14b3c:	str	r3, [sp, #32]
   14b40:	str	r7, [sp, #28]
   14b44:	adc	r1, r5, r2
   14b48:	adds	r3, r0, r3
   14b4c:	adc	r0, r1, r7
   14b50:	eor	r5, r3, r9
   14b54:	str	r3, [sp, #20]
   14b58:	ldr	r9, [sp, #8]
   14b5c:	str	r0, [sp, #40]	; 0x28
   14b60:	lsr	r3, r5, #16
   14b64:	eor	r0, r0, sl
   14b68:	lsl	r5, r5, #16
   14b6c:	orr	r1, r3, r0, lsl #16
   14b70:	orr	r3, r5, r0, lsr #16
   14b74:	ldr	r0, [sp, #156]	; 0x9c
   14b78:	eor	r5, r6, r3
   14b7c:	str	r3, [sp, #48]	; 0x30
   14b80:	ldr	r3, [sp, #24]
   14b84:	str	r1, [sp, #12]
   14b88:	adds	lr, r5, r8
   14b8c:	str	r0, [fp, #-244]	; 0xffffff0c
   14b90:	eor	r7, r3, r1
   14b94:	adc	r8, r7, r9
   14b98:	eor	r1, r8, r0
   14b9c:	ldr	r0, [sp, #160]	; 0xa0
   14ba0:	str	r0, [fp, #-248]	; 0xffffff08
   14ba4:	eor	r0, lr, r0
   14ba8:	lsl	ip, r0, #8
   14bac:	lsr	r0, r0, #24
   14bb0:	orr	ip, ip, r1, lsr #24
   14bb4:	orr	r0, r0, r1, lsl #8
   14bb8:	adds	r1, r3, r4
   14bbc:	adc	r3, r6, r2
   14bc0:	adds	r2, r1, r0
   14bc4:	ldr	r6, [sp, #48]	; 0x30
   14bc8:	str	r2, [sp, #104]	; 0x68
   14bcc:	eor	r2, r2, r5
   14bd0:	adc	r1, r3, ip
   14bd4:	str	r1, [sp, #108]	; 0x6c
   14bd8:	eor	r1, r1, r7
   14bdc:	lsl	r5, r2, #16
   14be0:	lsr	r2, r2, #16
   14be4:	ldr	r7, [sp, #12]
   14be8:	orr	r3, r5, r1, lsr #16
   14bec:	orr	r1, r2, r1, lsl #16
   14bf0:	ldr	r5, [sp, #56]	; 0x38
   14bf4:	adds	r2, r1, lr
   14bf8:	str	r1, [sp, #148]	; 0x94
   14bfc:	str	r3, [sp, #140]	; 0x8c
   14c00:	adc	r1, r3, r8
   14c04:	str	r2, [sp, #124]	; 0x7c
   14c08:	eor	r0, r2, r0
   14c0c:	ldr	r3, [sp, #116]	; 0x74
   14c10:	str	r1, [sp, #136]	; 0x88
   14c14:	eor	r1, r1, ip
   14c18:	lsl	r2, r1, #1
   14c1c:	orr	sl, r2, r0, lsr #31
   14c20:	lsl	r0, r0, #1
   14c24:	ldr	r2, [sp, #4]
   14c28:	orr	r8, r0, r1, lsr #31
   14c2c:	ldr	r0, [sp, #72]	; 0x48
   14c30:	ldr	r1, [sp, #84]	; 0x54
   14c34:	str	sl, [sp, #156]	; 0x9c
   14c38:	str	r8, [sp, #160]	; 0xa0
   14c3c:	eor	r0, r9, r0
   14c40:	eor	r1, r2, r1
   14c44:	lsl	r2, r0, #1
   14c48:	orr	r2, r2, r1, lsr #31
   14c4c:	lsl	r1, r1, #1
   14c50:	orr	ip, r1, r0, lsr #31
   14c54:	ldr	r1, [sp, #112]	; 0x70
   14c58:	ldr	r0, [sp, #196]	; 0xc4
   14c5c:	adds	r1, r1, r0
   14c60:	ldr	r0, [sp, #192]	; 0xc0
   14c64:	adc	r3, r3, r0
   14c68:	ldr	r0, [sp, #64]	; 0x40
   14c6c:	adds	r1, r1, ip
   14c70:	adc	r3, r3, r2
   14c74:	adds	r0, r7, r0
   14c78:	ldr	r7, [sp, #68]	; 0x44
   14c7c:	str	r0, [sp, #16]
   14c80:	adc	r9, r6, r7
   14c84:	ldr	r7, [sp, #60]	; 0x3c
   14c88:	ldr	r6, [sp, #52]	; 0x34
   14c8c:	eor	r7, r6, r7
   14c90:	ldr	r6, [sp, #92]	; 0x5c
   14c94:	eor	r6, r5, r6
   14c98:	lsr	r5, r6, #16
   14c9c:	lsl	r6, r6, #16
   14ca0:	orr	lr, r5, r7, lsl #16
   14ca4:	orr	r7, r6, r7, lsr #16
   14ca8:	eor	r6, r3, r7
   14cac:	eor	r4, r1, lr
   14cb0:	adds	r5, r6, r0
   14cb4:	str	r6, [sp, #64]	; 0x40
   14cb8:	str	r4, [sp, #60]	; 0x3c
   14cbc:	adc	r6, r4, r9
   14cc0:	eor	r0, r5, ip
   14cc4:	str	r5, [sp, #84]	; 0x54
   14cc8:	str	r6, [sp, #92]	; 0x5c
   14ccc:	eor	r2, r6, r2
   14cd0:	lsl	r6, r0, #8
   14cd4:	lsr	r0, r0, #24
   14cd8:	orr	r6, r6, r2, lsr #24
   14cdc:	orr	r2, r0, r2, lsl #8
   14ce0:	ldr	r0, [sp, #284]	; 0x11c
   14ce4:	str	r2, [sp, #72]	; 0x48
   14ce8:	str	r6, [sp, #68]	; 0x44
   14cec:	adds	r0, r1, r0
   14cf0:	ldr	r1, [sp, #280]	; 0x118
   14cf4:	adc	r1, r3, r1
   14cf8:	adds	r2, r0, r2
   14cfc:	ldr	r0, [sp, #292]	; 0x124
   14d00:	adc	r3, r1, r6
   14d04:	ldr	r1, [sp, #288]	; 0x120
   14d08:	str	r2, [sp, #56]	; 0x38
   14d0c:	str	r3, [sp, #48]	; 0x30
   14d10:	adds	r0, r8, r0
   14d14:	adc	r1, sl, r1
   14d18:	adds	r0, r0, r2
   14d1c:	str	r0, [sp, #24]
   14d20:	adc	r0, r1, r3
   14d24:	ldr	r1, [sp, #80]	; 0x50
   14d28:	ldr	r3, [sp, #20]
   14d2c:	str	r0, [sp, #116]	; 0x74
   14d30:	ldr	r0, [sp, #96]	; 0x60
   14d34:	adds	r5, lr, r0
   14d38:	ldr	r0, [sp, #100]	; 0x64
   14d3c:	eor	r1, r5, r1
   14d40:	adc	r8, r7, r0
   14d44:	ldr	r0, [sp, #76]	; 0x4c
   14d48:	ldr	r7, [sp, #40]	; 0x28
   14d4c:	eor	r0, r8, r0
   14d50:	lsl	r2, r0, #1
   14d54:	orr	r2, r2, r1, lsr #31
   14d58:	lsl	r1, r1, #1
   14d5c:	orr	r0, r1, r0, lsr #31
   14d60:	ldr	r1, [sp, #268]	; 0x10c
   14d64:	adds	r1, r3, r1
   14d68:	ldr	r3, [sp, #264]	; 0x108
   14d6c:	adc	r7, r7, r3
   14d70:	ldr	r3, [sp, #36]	; 0x24
   14d74:	adds	r1, r1, r0
   14d78:	adc	r6, r7, r2
   14d7c:	eor	ip, r3, r6
   14d80:	ldr	r3, [sp, #44]	; 0x2c
   14d84:	eor	lr, r3, r1
   14d88:	ldr	r3, [sp, #128]	; 0x80
   14d8c:	str	r3, [fp, #-208]	; 0xffffff30
   14d90:	adds	r4, ip, r3
   14d94:	ldr	r3, [sp, #132]	; 0x84
   14d98:	str	r3, [fp, #-204]	; 0xffffff34
   14d9c:	str	r0, [fp, #-240]	; 0xffffff10
   14da0:	eor	r0, r4, r0
   14da4:	adc	r3, lr, r3
   14da8:	str	r2, [fp, #-236]	; 0xffffff14
   14dac:	lsl	r7, r0, #8
   14db0:	eor	r2, r3, r2
   14db4:	lsr	r0, r0, #24
   14db8:	orr	r7, r7, r2, lsr #24
   14dbc:	orr	r2, r0, r2, lsl #8
   14dc0:	ldr	r0, [sp, #240]	; 0xf0
   14dc4:	str	r2, [sp, #96]	; 0x60
   14dc8:	str	r7, [sp, #80]	; 0x50
   14dcc:	adds	r0, r1, r0
   14dd0:	ldr	r1, [sp, #236]	; 0xec
   14dd4:	adc	r1, r6, r1
   14dd8:	adds	r6, r0, r2
   14ddc:	adc	r0, r1, r7
   14de0:	eor	r1, r6, ip
   14de4:	str	r6, [sp, #100]	; 0x64
   14de8:	str	r0, [sp, #112]	; 0x70
   14dec:	lsl	r2, r1, #16
   14df0:	eor	r0, r0, lr
   14df4:	lsr	r1, r1, #16
   14df8:	orr	r2, r2, r0, lsr #16
   14dfc:	orr	r0, r1, r0, lsl #16
   14e00:	ldr	r1, [sp, #32]
   14e04:	adds	lr, r0, r4
   14e08:	str	r0, [sp, #52]	; 0x34
   14e0c:	ldr	r0, [sp, #28]
   14e10:	str	r2, [sp, #40]	; 0x28
   14e14:	adc	ip, r2, r3
   14e18:	ldr	r2, [sp, #16]
   14e1c:	str	lr, [sp, #20]
   14e20:	mov	sl, ip
   14e24:	eor	r0, r9, r0
   14e28:	eor	r3, r2, r1
   14e2c:	lsl	r4, r0, #1
   14e30:	ldr	r1, [sp, #228]	; 0xe4
   14e34:	orr	r4, r4, r3, lsr #31
   14e38:	lsl	r3, r3, #1
   14e3c:	orr	r6, r3, r0, lsr #31
   14e40:	ldr	r0, [sp, #232]	; 0xe8
   14e44:	adds	r0, r6, r0
   14e48:	adc	r3, r4, r1
   14e4c:	ldr	r1, [sp, #88]	; 0x58
   14e50:	adds	r1, r0, r1
   14e54:	ldr	r0, [sp, #120]	; 0x78
   14e58:	adc	r9, r3, r0
   14e5c:	ldr	r0, [sp, #144]	; 0x90
   14e60:	eor	r2, r9, r0
   14e64:	str	r0, [fp, #-164]	; 0xffffff5c
   14e68:	ldr	r0, [sp, #152]	; 0x98
   14e6c:	adds	r3, r2, r5
   14e70:	str	r3, [sp, #76]	; 0x4c
   14e74:	str	r0, [fp, #-168]	; 0xffffff58
   14e78:	str	r5, [fp, #-200]	; 0xffffff38
   14e7c:	str	r8, [fp, #-196]	; 0xffffff3c
   14e80:	str	r6, [fp, #-232]	; 0xffffff18
   14e84:	eor	r6, r3, r6
   14e88:	ldr	r3, [sp, #260]	; 0x104
   14e8c:	eor	r0, r1, r0
   14e90:	str	r4, [fp, #-228]	; 0xffffff1c
   14e94:	adc	r7, r0, r8
   14e98:	str	r7, [sp, #88]	; 0x58
   14e9c:	eor	r4, r7, r4
   14ea0:	lsl	r7, r6, #8
   14ea4:	lsr	r6, r6, #24
   14ea8:	orr	r6, r6, r4, lsl #8
   14eac:	orr	r7, r7, r4, lsr #24
   14eb0:	adds	r1, r1, r3
   14eb4:	ldr	r3, [sp, #256]	; 0x100
   14eb8:	str	r7, [sp, #36]	; 0x24
   14ebc:	str	r6, [sp, #44]	; 0x2c
   14ec0:	adc	r4, r9, r3
   14ec4:	adds	r3, r1, r6
   14ec8:	ldr	r6, [sp, #24]
   14ecc:	adc	r1, r4, r7
   14ed0:	ldr	r7, [sp, #116]	; 0x74
   14ed4:	str	r3, [sp, #28]
   14ed8:	str	r1, [sp, #32]
   14edc:	eor	r0, r1, r0
   14ee0:	eor	r1, r3, r2
   14ee4:	lsr	r2, r1, #16
   14ee8:	lsl	r1, r1, #16
   14eec:	orr	r5, r2, r0, lsl #16
   14ef0:	orr	r4, r1, r0, lsr #16
   14ef4:	ldr	r0, [sp, #156]	; 0x9c
   14ef8:	eor	r3, r7, r4
   14efc:	eor	r2, r6, r5
   14f00:	adds	lr, r3, lr
   14f04:	adc	r9, r2, ip
   14f08:	eor	r1, r9, r0
   14f0c:	ldr	r0, [sp, #160]	; 0xa0
   14f10:	eor	r0, lr, r0
   14f14:	lsl	r8, r0, #8
   14f18:	lsr	r0, r0, #24
   14f1c:	orr	r8, r8, r1, lsr #24
   14f20:	orr	r0, r0, r1, lsl #8
   14f24:	ldr	r1, [sp, #172]	; 0xac
   14f28:	adds	r1, r6, r1
   14f2c:	ldr	r6, [sp, #168]	; 0xa8
   14f30:	adc	ip, r7, r6
   14f34:	adds	r6, r1, r0
   14f38:	ldr	r7, [sp, #212]	; 0xd4
   14f3c:	adc	r1, ip, r8
   14f40:	str	r6, [sp, #116]	; 0x74
   14f44:	eor	ip, r1, r2
   14f48:	eor	r2, r6, r3
   14f4c:	str	r1, [sp, #120]	; 0x78
   14f50:	lsl	r3, r2, #16
   14f54:	lsr	r2, r2, #16
   14f58:	orr	r1, r2, ip, lsl #16
   14f5c:	orr	r3, r3, ip, lsr #16
   14f60:	ldr	ip, [sp, #216]	; 0xd8
   14f64:	adds	r2, r1, lr
   14f68:	str	r1, [sp, #152]	; 0x98
   14f6c:	str	r3, [sp, #144]	; 0x90
   14f70:	adc	r1, r3, r9
   14f74:	str	r2, [sp, #128]	; 0x80
   14f78:	eor	r0, r2, r0
   14f7c:	ldr	r3, [sp, #108]	; 0x6c
   14f80:	str	r1, [sp, #132]	; 0x84
   14f84:	eor	r1, r1, r8
   14f88:	lsl	r2, r1, #1
   14f8c:	orr	r2, r2, r0, lsr #31
   14f90:	lsl	r0, r0, #1
   14f94:	orr	r0, r0, r1, lsr #31
   14f98:	str	r2, [sp, #156]	; 0x9c
   14f9c:	ldr	r1, [sp, #96]	; 0x60
   14fa0:	ldr	r2, [sp, #20]
   14fa4:	str	r0, [sp, #160]	; 0xa0
   14fa8:	ldr	r0, [sp, #80]	; 0x50
   14fac:	eor	r1, r2, r1
   14fb0:	eor	r0, sl, r0
   14fb4:	lsl	r2, r0, #1
   14fb8:	orr	r8, r2, r1, lsr #31
   14fbc:	lsl	r1, r1, #1
   14fc0:	ldr	r2, [sp, #48]	; 0x30
   14fc4:	orr	lr, r1, r0, lsr #31
   14fc8:	ldr	r1, [sp, #104]	; 0x68
   14fcc:	ldr	r0, [sp, #76]	; 0x4c
   14fd0:	adds	r1, r1, ip
   14fd4:	adc	r3, r3, r7
   14fd8:	adds	r9, r1, lr
   14fdc:	ldr	r1, [sp, #88]	; 0x58
   14fe0:	adc	sl, r3, r8
   14fe4:	adds	r0, r5, r0
   14fe8:	str	r0, [sp, #20]
   14fec:	adc	r6, r4, r1
   14ff0:	ldr	r1, [sp, #60]	; 0x3c
   14ff4:	str	r6, [sp, #16]
   14ff8:	eor	r5, r2, r1
   14ffc:	ldr	r1, [sp, #64]	; 0x40
   15000:	ldr	r2, [sp, #56]	; 0x38
   15004:	eor	r4, r2, r1
   15008:	lsr	r3, r4, #16
   1500c:	lsl	r4, r4, #16
   15010:	orr	r3, r3, r5, lsl #16
   15014:	orr	r5, r4, r5, lsr #16
   15018:	eor	r1, r5, sl
   1501c:	eor	r2, r3, r9
   15020:	str	r3, [fp, #-192]	; 0xffffff40
   15024:	str	r5, [fp, #-188]	; 0xffffff44
   15028:	adds	r4, r1, r0
   1502c:	str	r1, [sp, #88]	; 0x58
   15030:	str	r2, [sp, #64]	; 0x40
   15034:	adc	r1, r2, r6
   15038:	eor	r0, r4, lr
   1503c:	str	r4, [sp, #96]	; 0x60
   15040:	ldr	r6, [sp, #32]
   15044:	lsl	r4, r0, #8
   15048:	eor	r2, r1, r8
   1504c:	lsr	r0, r0, #24
   15050:	str	r1, [sp, #104]	; 0x68
   15054:	orr	r1, r0, r2, lsl #8
   15058:	ldr	r0, [sp, #276]	; 0x114
   1505c:	orr	r4, r4, r2, lsr #24
   15060:	ldr	r2, [sp, #272]	; 0x110
   15064:	str	r1, [sp, #80]	; 0x50
   15068:	str	r4, [sp, #76]	; 0x4c
   1506c:	adds	r0, r9, r0
   15070:	adc	r2, sl, r2
   15074:	adds	r0, r0, r1
   15078:	adc	r1, r2, r4
   1507c:	ldr	r2, [sp, #160]	; 0xa0
   15080:	str	r0, [sp, #60]	; 0x3c
   15084:	adds	r0, r0, ip
   15088:	ldr	r4, [sp, #124]	; 0x7c
   1508c:	str	r1, [sp, #56]	; 0x38
   15090:	adc	r1, r1, r7
   15094:	adds	r0, r0, r2
   15098:	str	r0, [sp, #108]	; 0x6c
   1509c:	ldr	r0, [sp, #156]	; 0x9c
   150a0:	adc	r0, r1, r0
   150a4:	str	r0, [sp, #24]
   150a8:	ldr	r0, [sp, #84]	; 0x54
   150ac:	adds	r8, r3, r0
   150b0:	ldr	r0, [sp, #92]	; 0x5c
   150b4:	adc	r9, r5, r0
   150b8:	ldr	r0, [sp, #68]	; 0x44
   150bc:	eor	r1, r9, r0
   150c0:	ldr	r0, [sp, #72]	; 0x48
   150c4:	lsl	r3, r1, #1
   150c8:	eor	r2, r8, r0
   150cc:	ldr	r0, [sp, #204]	; 0xcc
   150d0:	orr	r3, r3, r2, lsr #31
   150d4:	lsl	r2, r2, #1
   150d8:	orr	r1, r2, r1, lsr #31
   150dc:	ldr	r2, [sp, #28]
   150e0:	adds	r2, r2, r0
   150e4:	ldr	r0, [sp, #200]	; 0xc8
   150e8:	adc	r5, r6, r0
   150ec:	ldr	r0, [sp, #40]	; 0x28
   150f0:	adds	r2, r2, r1
   150f4:	adc	ip, r5, r3
   150f8:	eor	lr, ip, r0
   150fc:	str	r0, [fp, #-172]	; 0xffffff54
   15100:	ldr	r0, [sp, #52]	; 0x34
   15104:	adds	r5, lr, r4
   15108:	str	r0, [fp, #-176]	; 0xffffff50
   1510c:	str	r4, [fp, #-216]	; 0xffffff28
   15110:	ldr	r4, [sp, #136]	; 0x88
   15114:	eor	r0, r2, r0
   15118:	str	r4, [fp, #-212]	; 0xffffff2c
   1511c:	str	r1, [fp, #-256]	; 0xffffff00
   15120:	eor	r1, r5, r1
   15124:	adc	r4, r0, r4
   15128:	str	r3, [fp, #-252]	; 0xffffff04
   1512c:	lsl	r6, r1, #8
   15130:	eor	r3, r4, r3
   15134:	lsr	r1, r1, #24
   15138:	orr	r6, r6, r3, lsr #24
   1513c:	orr	r3, r1, r3, lsl #8
   15140:	ldr	r1, [sp, #252]	; 0xfc
   15144:	str	r3, [sp, #84]	; 0x54
   15148:	str	r6, [sp, #72]	; 0x48
   1514c:	adds	r1, r2, r1
   15150:	ldr	r2, [sp, #208]	; 0xd0
   15154:	adc	r2, ip, r2
   15158:	adds	r3, r1, r3
   1515c:	adc	r1, r2, r6
   15160:	str	r3, [sp, #92]	; 0x5c
   15164:	str	r1, [sp, #124]	; 0x7c
   15168:	eor	r0, r1, r0
   1516c:	eor	r1, r3, lr
   15170:	ldr	r3, [sp, #112]	; 0x70
   15174:	lsl	r2, r1, #16
   15178:	lsr	r1, r1, #16
   1517c:	orr	r2, r2, r0, lsr #16
   15180:	orr	r0, r1, r0, lsl #16
   15184:	ldr	r1, [sp, #16]
   15188:	adds	lr, r0, r5
   1518c:	str	r0, [sp, #52]	; 0x34
   15190:	str	r2, [sp, #48]	; 0x30
   15194:	adc	r0, r2, r4
   15198:	ldr	r2, [sp, #20]
   1519c:	str	lr, [sp, #8]
   151a0:	str	r0, [sp, #12]
   151a4:	ldr	r0, [sp, #36]	; 0x24
   151a8:	eor	r0, r1, r0
   151ac:	ldr	r1, [sp, #44]	; 0x2c
   151b0:	eor	r1, r2, r1
   151b4:	lsl	r2, r0, #1
   151b8:	orr	r4, r2, r1, lsr #31
   151bc:	lsl	r1, r1, #1
   151c0:	ldr	r2, [sp, #100]	; 0x64
   151c4:	orr	r0, r1, r0, lsr #31
   151c8:	ldr	r1, [sp, #224]	; 0xe0
   151cc:	adds	r1, r2, r1
   151d0:	ldr	r2, [sp, #220]	; 0xdc
   151d4:	adc	r2, r3, r2
   151d8:	adds	r1, r1, r0
   151dc:	adc	r5, r2, r4
   151e0:	ldr	r2, [sp, #140]	; 0x8c
   151e4:	eor	r3, r5, r2
   151e8:	str	r2, [fp, #-180]	; 0xffffff4c
   151ec:	ldr	r2, [sp, #148]	; 0x94
   151f0:	adds	r7, r3, r8
   151f4:	eor	r0, r7, r0
   151f8:	str	r7, [sp, #68]	; 0x44
   151fc:	str	r2, [fp, #-184]	; 0xffffff48
   15200:	eor	r2, r1, r2
   15204:	str	r8, [fp, #-224]	; 0xffffff20
   15208:	str	r9, [fp, #-220]	; 0xffffff24
   1520c:	adc	r6, r2, r9
   15210:	str	r6, [sp, #100]	; 0x64
   15214:	eor	r4, r6, r4
   15218:	lsl	r6, r0, #8
   1521c:	lsr	r0, r0, #24
   15220:	orr	r7, r6, r4, lsr #24
   15224:	orr	r6, r0, r4, lsl #8
   15228:	ldr	r0, [sp, #248]	; 0xf8
   1522c:	str	r6, [sp, #44]	; 0x2c
   15230:	str	r7, [sp, #40]	; 0x28
   15234:	adds	r0, r1, r0
   15238:	ldr	r1, [sp, #244]	; 0xf4
   1523c:	adc	r1, r5, r1
   15240:	adds	r6, r0, r6
   15244:	ldr	r5, [sp, #24]
   15248:	adc	r0, r1, r7
   1524c:	str	r6, [sp, #28]
   15250:	str	r0, [sp, #32]
   15254:	eor	r0, r0, r2
   15258:	eor	r2, r6, r3
   1525c:	lsr	r1, r2, #16
   15260:	lsl	r2, r2, #16
   15264:	orr	sl, r2, r0, lsr #16
   15268:	ldr	r2, [sp, #108]	; 0x6c
   1526c:	orr	r1, r1, r0, lsl #16
   15270:	ldr	r0, [sp, #156]	; 0x9c
   15274:	eor	ip, r5, sl
   15278:	str	r1, [sp, #20]
   1527c:	adds	r6, ip, lr
   15280:	ldr	lr, [sp, #12]
   15284:	eor	r3, r2, r1
   15288:	str	r0, [fp, #-244]	; 0xffffff0c
   1528c:	adc	r7, r3, lr
   15290:	eor	r1, r7, r0
   15294:	ldr	r0, [sp, #160]	; 0xa0
   15298:	str	r0, [fp, #-248]	; 0xffffff08
   1529c:	eor	r0, r6, r0
   152a0:	lsl	r4, r0, #8
   152a4:	lsr	r0, r0, #24
   152a8:	orr	r4, r4, r1, lsr #24
   152ac:	orr	r0, r0, r1, lsl #8
   152b0:	ldr	r1, [sp, #196]	; 0xc4
   152b4:	adds	r1, r2, r1
   152b8:	ldr	r2, [sp, #192]	; 0xc0
   152bc:	adc	r2, r5, r2
   152c0:	adds	r5, r1, r0
   152c4:	adc	r1, r2, r4
   152c8:	eor	r2, r5, ip
   152cc:	str	r5, [sp, #108]	; 0x6c
   152d0:	ldr	r5, [sp, #60]	; 0x3c
   152d4:	str	r1, [sp, #112]	; 0x70
   152d8:	eor	r1, r1, r3
   152dc:	lsl	r3, r2, #16
   152e0:	lsr	r2, r2, #16
   152e4:	orr	r3, r3, r1, lsr #16
   152e8:	orr	r1, r2, r1, lsl #16
   152ec:	adds	r2, r1, r6
   152f0:	str	r1, [sp, #160]	; 0xa0
   152f4:	str	r3, [sp, #148]	; 0x94
   152f8:	ldr	r6, [sp, #56]	; 0x38
   152fc:	adc	r1, r3, r7
   15300:	str	r2, [sp, #136]	; 0x88
   15304:	eor	r0, r2, r0
   15308:	ldr	r3, [sp, #116]	; 0x74
   1530c:	ldr	r7, [sp, #120]	; 0x78
   15310:	str	r1, [sp, #140]	; 0x8c
   15314:	eor	r1, r1, r4
   15318:	lsl	r2, r1, #1
   1531c:	orr	r9, r2, r0, lsr #31
   15320:	lsl	r0, r0, #1
   15324:	ldr	r2, [sp, #8]
   15328:	orr	r8, r0, r1, lsr #31
   1532c:	ldr	r0, [sp, #72]	; 0x48
   15330:	ldr	r1, [sp, #84]	; 0x54
   15334:	str	r9, [sp, #36]	; 0x24
   15338:	str	r8, [sp, #156]	; 0x9c
   1533c:	eor	r0, lr, r0
   15340:	eor	r1, r2, r1
   15344:	lsl	r2, r0, #1
   15348:	orr	r2, r2, r1, lsr #31
   1534c:	lsl	r1, r1, #1
   15350:	orr	r1, r1, r0, lsr #31
   15354:	ldr	r0, [sp, #284]	; 0x11c
   15358:	adds	r0, r3, r0
   1535c:	ldr	r3, [sp, #280]	; 0x118
   15360:	adc	r3, r7, r3
   15364:	adds	r7, r0, r1
   15368:	ldr	r0, [sp, #68]	; 0x44
   1536c:	adc	lr, r3, r2
   15370:	ldr	r3, [sp, #20]
   15374:	adds	r3, r3, r0
   15378:	ldr	r0, [sp, #100]	; 0x64
   1537c:	str	r3, [sp, #16]
   15380:	adc	sl, sl, r0
   15384:	ldr	r0, [sp, #64]	; 0x40
   15388:	eor	r6, r6, r0
   1538c:	ldr	r0, [sp, #88]	; 0x58
   15390:	eor	r4, r5, r0
   15394:	lsr	r5, r4, #16
   15398:	lsl	r4, r4, #16
   1539c:	orr	ip, r5, r6, lsl #16
   153a0:	orr	r6, r4, r6, lsr #16
   153a4:	eor	r0, lr, r6
   153a8:	eor	r5, r7, ip
   153ac:	adds	r4, r0, r3
   153b0:	str	r0, [sp, #84]	; 0x54
   153b4:	str	r5, [sp, #64]	; 0x40
   153b8:	adc	r0, r5, sl
   153bc:	eor	r1, r4, r1
   153c0:	str	r4, [sp, #88]	; 0x58
   153c4:	lsl	r4, r1, #8
   153c8:	eor	r2, r0, r2
   153cc:	lsr	r1, r1, #24
   153d0:	str	r0, [sp, #100]	; 0x64
   153d4:	orr	r0, r4, r2, lsr #24
   153d8:	orr	r4, r1, r2, lsl #8
   153dc:	ldr	r1, [sp, #248]	; 0xf8
   153e0:	ldr	r2, [sp, #244]	; 0xf4
   153e4:	str	r0, [sp, #68]	; 0x44
   153e8:	str	r4, [sp, #72]	; 0x48
   153ec:	adds	r1, r7, r1
   153f0:	adc	r2, lr, r2
   153f4:	adds	r3, r1, r4
   153f8:	adc	r4, r2, r0
   153fc:	ldr	r0, [sp, #260]	; 0x104
   15400:	str	r3, [sp, #60]	; 0x3c
   15404:	str	r4, [sp, #56]	; 0x38
   15408:	adds	r1, r8, r0
   1540c:	ldr	r0, [sp, #256]	; 0x100
   15410:	adc	r2, r9, r0
   15414:	adds	r0, r1, r3
   15418:	ldr	r1, [sp, #28]
   1541c:	str	r0, [sp, #24]
   15420:	adc	r0, r2, r4
   15424:	str	r0, [sp, #20]
   15428:	ldr	r0, [sp, #96]	; 0x60
   1542c:	adds	ip, ip, r0
   15430:	ldr	r0, [sp, #104]	; 0x68
   15434:	adc	lr, r6, r0
   15438:	ldr	r0, [sp, #76]	; 0x4c
   1543c:	eor	r2, lr, r0
   15440:	ldr	r0, [sp, #80]	; 0x50
   15444:	lsl	r6, r2, #1
   15448:	eor	r3, ip, r0
   1544c:	ldr	r0, [sp, #292]	; 0x124
   15450:	orr	r6, r6, r3, lsr #31
   15454:	lsl	r3, r3, #1
   15458:	orr	r2, r3, r2, lsr #31
   1545c:	adds	r3, r1, r0
   15460:	ldr	r0, [sp, #288]	; 0x120
   15464:	ldr	r1, [sp, #32]
   15468:	adc	r5, r1, r0
   1546c:	ldr	r0, [sp, #48]	; 0x30
   15470:	adds	r4, r3, r2
   15474:	adc	r5, r5, r6
   15478:	eor	r8, r0, r5
   1547c:	ldr	r0, [sp, #52]	; 0x34
   15480:	eor	r7, r0, r4
   15484:	ldr	r0, [sp, #128]	; 0x80
   15488:	str	r0, [fp, #-208]	; 0xffffff30
   1548c:	adds	r9, r8, r0
   15490:	ldr	r0, [sp, #132]	; 0x84
   15494:	str	r0, [fp, #-204]	; 0xffffff34
   15498:	adc	r0, r7, r0
   1549c:	str	r2, [fp, #-240]	; 0xffffff10
   154a0:	eor	r2, r9, r2
   154a4:	str	r6, [fp, #-236]	; 0xffffff14
   154a8:	eor	r3, r0, r6
   154ac:	lsl	r6, r2, #8
   154b0:	lsr	r2, r2, #24
   154b4:	orr	r1, r2, r3, lsl #8
   154b8:	ldr	r2, [sp, #224]	; 0xe0
   154bc:	orr	r6, r6, r3, lsr #24
   154c0:	ldr	r3, [sp, #220]	; 0xdc
   154c4:	str	r1, [sp, #80]	; 0x50
   154c8:	str	r6, [sp, #76]	; 0x4c
   154cc:	adds	r2, r4, r2
   154d0:	adc	r4, r5, r3
   154d4:	adds	r3, r2, r1
   154d8:	ldr	r1, [sp, #44]	; 0x2c
   154dc:	adc	r2, r4, r6
   154e0:	eor	r5, r3, r8
   154e4:	str	r3, [sp, #116]	; 0x74
   154e8:	str	r2, [sp, #120]	; 0x78
   154ec:	lsl	r4, r5, #16
   154f0:	eor	r2, r2, r7
   154f4:	lsr	r5, r5, #16
   154f8:	orr	r3, r4, r2, lsr #16
   154fc:	orr	r2, r5, r2, lsl #16
   15500:	adds	r9, r2, r9
   15504:	str	r2, [sp, #104]	; 0x68
   15508:	ldr	r2, [sp, #16]
   1550c:	str	r3, [sp, #96]	; 0x60
   15510:	adc	r0, r3, r0
   15514:	str	r0, [sp, #28]
   15518:	ldr	r0, [sp, #40]	; 0x28
   1551c:	ldr	r4, [sp, #28]
   15520:	eor	r1, r2, r1
   15524:	ldr	r2, [sp, #272]	; 0x110
   15528:	eor	r0, sl, r0
   1552c:	lsl	r6, r0, #1
   15530:	orr	r6, r6, r1, lsr #31
   15534:	lsl	r1, r1, #1
   15538:	orr	r0, r1, r0, lsr #31
   1553c:	ldr	r1, [sp, #276]	; 0x114
   15540:	adds	r1, r0, r1
   15544:	adc	r7, r6, r2
   15548:	ldr	r2, [sp, #92]	; 0x5c
   1554c:	adds	r2, r1, r2
   15550:	ldr	r1, [sp, #124]	; 0x7c
   15554:	adc	sl, r7, r1
   15558:	ldr	r1, [sp, #144]	; 0x90
   1555c:	eor	r3, sl, r1
   15560:	str	r1, [fp, #-164]	; 0xffffff5c
   15564:	ldr	r1, [sp, #152]	; 0x98
   15568:	adds	r7, r3, ip
   1556c:	str	r7, [sp, #32]
   15570:	str	r1, [fp, #-168]	; 0xffffff58
   15574:	eor	r1, r2, r1
   15578:	str	ip, [fp, #-200]	; 0xffffff38
   1557c:	str	lr, [fp, #-196]	; 0xffffff3c
   15580:	str	r0, [fp, #-232]	; 0xffffff18
   15584:	eor	r0, r7, r0
   15588:	str	r6, [fp, #-228]	; 0xffffff1c
   1558c:	adc	r5, r1, lr
   15590:	str	r5, [sp, #92]	; 0x5c
   15594:	eor	r6, r5, r6
   15598:	lsl	r5, r0, #8
   1559c:	lsr	r0, r0, #24
   155a0:	orr	r7, r5, r6, lsr #24
   155a4:	orr	r6, r0, r6, lsl #8
   155a8:	ldr	r0, [sp, #204]	; 0xcc
   155ac:	ldr	r5, [sp, #20]
   155b0:	str	r6, [sp, #52]	; 0x34
   155b4:	str	r7, [sp, #44]	; 0x2c
   155b8:	adds	r0, r2, r0
   155bc:	ldr	r2, [sp, #200]	; 0xc8
   155c0:	adc	r2, sl, r2
   155c4:	adds	r6, r0, r6
   155c8:	adc	r0, r2, r7
   155cc:	ldr	r7, [sp, #24]
   155d0:	str	r6, [sp, #40]	; 0x28
   155d4:	str	r0, [sp, #48]	; 0x30
   155d8:	eor	r0, r0, r1
   155dc:	eor	r1, r6, r3
   155e0:	lsr	r2, r1, #16
   155e4:	lsl	r1, r1, #16
   155e8:	orr	r2, r2, r0, lsl #16
   155ec:	orr	r6, r1, r0, lsr #16
   155f0:	ldr	r0, [sp, #36]	; 0x24
   155f4:	eor	r3, r5, r6
   155f8:	str	r2, [sp, #16]
   155fc:	eor	r2, r7, r2
   15600:	adds	lr, r3, r9
   15604:	adc	r8, r2, r4
   15608:	eor	r1, r8, r0
   1560c:	ldr	r0, [sp, #156]	; 0x9c
   15610:	eor	r0, lr, r0
   15614:	lsl	sl, r0, #8
   15618:	lsr	r0, r0, #24
   1561c:	orr	sl, sl, r1, lsr #24
   15620:	orr	r0, r0, r1, lsl #8
   15624:	ldr	r1, [sp, #180]	; 0xb4
   15628:	adds	r1, r7, r1
   1562c:	ldr	r7, [sp, #176]	; 0xb0
   15630:	adc	ip, r5, r7
   15634:	adds	r7, r1, r0
   15638:	adc	r1, ip, sl
   1563c:	str	r7, [sp, #124]	; 0x7c
   15640:	eor	ip, r1, r2
   15644:	eor	r2, r7, r3
   15648:	str	r1, [sp, #128]	; 0x80
   1564c:	lsl	r3, r2, #16
   15650:	lsr	r2, r2, #16
   15654:	orr	r1, r2, ip, lsl #16
   15658:	orr	r3, r3, ip, lsr #16
   1565c:	adds	r2, r1, lr
   15660:	str	r1, [sp, #156]	; 0x9c
   15664:	str	r3, [sp, #152]	; 0x98
   15668:	adc	r1, r3, r8
   1566c:	str	r2, [sp, #132]	; 0x84
   15670:	eor	r0, r2, r0
   15674:	ldr	r3, [sp, #112]	; 0x70
   15678:	str	r1, [sp, #144]	; 0x90
   1567c:	eor	r1, r1, sl
   15680:	lsl	r2, r1, #1
   15684:	orr	lr, r2, r0, lsr #31
   15688:	lsl	r0, r0, #1
   1568c:	orr	sl, r0, r1, lsr #31
   15690:	ldr	r0, [sp, #76]	; 0x4c
   15694:	ldr	r1, [sp, #80]	; 0x50
   15698:	str	lr, [sp, #20]
   1569c:	str	sl, [sp, #36]	; 0x24
   156a0:	eor	r0, r4, r0
   156a4:	eor	r1, r9, r1
   156a8:	lsl	r2, r0, #1
   156ac:	orr	r9, r2, r1, lsr #31
   156b0:	lsl	r1, r1, #1
   156b4:	ldr	r2, [sp, #108]	; 0x6c
   156b8:	orr	r0, r1, r0, lsr #31
   156bc:	ldr	r1, [sp, #232]	; 0xe8
   156c0:	adds	r1, r2, r1
   156c4:	ldr	r2, [sp, #228]	; 0xe4
   156c8:	adc	r2, r3, r2
   156cc:	adds	ip, r1, r0
   156d0:	ldr	r1, [sp, #32]
   156d4:	adc	r8, r2, r9
   156d8:	ldr	r2, [sp, #16]
   156dc:	adds	r3, r2, r1
   156e0:	ldr	r1, [sp, #92]	; 0x5c
   156e4:	ldr	r2, [sp, #56]	; 0x38
   156e8:	str	r3, [sp, #28]
   156ec:	adc	r5, r6, r1
   156f0:	ldr	r1, [sp, #64]	; 0x40
   156f4:	str	r5, [sp, #24]
   156f8:	eor	r7, r2, r1
   156fc:	ldr	r1, [sp, #84]	; 0x54
   15700:	ldr	r2, [sp, #60]	; 0x3c
   15704:	eor	r4, r2, r1
   15708:	lsr	r6, r4, #16
   1570c:	lsl	r4, r4, #16
   15710:	orr	r6, r6, r7, lsl #16
   15714:	orr	r7, r4, r7, lsr #16
   15718:	eor	r2, r7, r8
   1571c:	eor	r1, r6, ip
   15720:	str	r7, [fp, #-188]	; 0xffffff44
   15724:	str	r6, [fp, #-192]	; 0xffffff40
   15728:	str	r2, [sp, #92]	; 0x5c
   1572c:	adds	r2, r2, r3
   15730:	str	r1, [sp, #76]	; 0x4c
   15734:	adc	r4, r1, r5
   15738:	eor	r0, r2, r0
   1573c:	str	r2, [sp, #108]	; 0x6c
   15740:	ldr	r1, [sp, #236]	; 0xec
   15744:	eor	r5, r4, r9
   15748:	str	r4, [sp, #112]	; 0x70
   1574c:	lsl	r4, r0, #8
   15750:	lsr	r0, r0, #24
   15754:	ldr	r9, [sp, #172]	; 0xac
   15758:	orr	r2, r4, r5, lsr #24
   1575c:	orr	r5, r0, r5, lsl #8
   15760:	ldr	r0, [sp, #240]	; 0xf0
   15764:	str	r5, [sp, #84]	; 0x54
   15768:	str	r2, [sp, #80]	; 0x50
   1576c:	adds	r0, ip, r0
   15770:	adc	r1, r8, r1
   15774:	adds	r0, r0, r5
   15778:	ldr	r5, [sp, #168]	; 0xa8
   1577c:	adc	r1, r1, r2
   15780:	str	r0, [sp, #64]	; 0x40
   15784:	adds	r0, r0, r9
   15788:	str	r1, [sp, #60]	; 0x3c
   1578c:	adc	r1, r1, r5
   15790:	adds	r0, r0, sl
   15794:	str	r0, [sp, #56]	; 0x38
   15798:	adc	r0, r1, lr
   1579c:	str	r0, [sp, #32]
   157a0:	ldr	r0, [sp, #88]	; 0x58
   157a4:	adds	sl, r6, r0
   157a8:	ldr	r0, [sp, #100]	; 0x64
   157ac:	adc	r1, r7, r0
   157b0:	ldr	r0, [sp, #68]	; 0x44
   157b4:	str	r1, [sp, #16]
   157b8:	eor	r3, r1, r0
   157bc:	ldr	r0, [sp, #72]	; 0x48
   157c0:	ldr	r1, [sp, #40]	; 0x28
   157c4:	lsl	r6, r3, #1
   157c8:	eor	r7, sl, r0
   157cc:	ldr	r0, [sp, #188]	; 0xbc
   157d0:	orr	r6, r6, r7, lsr #31
   157d4:	lsl	r7, r7, #1
   157d8:	orr	r3, r7, r3, lsr #31
   157dc:	adds	r7, r1, r0
   157e0:	ldr	r0, [sp, #184]	; 0xb8
   157e4:	ldr	r1, [sp, #48]	; 0x30
   157e8:	adc	r4, r1, r0
   157ec:	ldr	r0, [sp, #96]	; 0x60
   157f0:	adds	r7, r7, r3
   157f4:	adc	r8, r4, r6
   157f8:	str	r0, [fp, #-172]	; 0xffffff54
   157fc:	eor	ip, r8, r0
   15800:	ldr	r0, [sp, #104]	; 0x68
   15804:	str	r0, [fp, #-176]	; 0xffffff50
   15808:	eor	r2, r7, r0
   1580c:	ldr	r0, [sp, #136]	; 0x88
   15810:	str	r0, [fp, #-216]	; 0xffffff28
   15814:	adds	lr, ip, r0
   15818:	ldr	r0, [sp, #140]	; 0x8c
   1581c:	str	r0, [fp, #-212]	; 0xffffff2c
   15820:	str	r3, [fp, #-256]	; 0xffffff00
   15824:	eor	r3, lr, r3
   15828:	adc	r1, r2, r0
   1582c:	str	r6, [fp, #-252]	; 0xffffff04
   15830:	lsl	r4, r3, #8
   15834:	eor	r6, r1, r6
   15838:	lsr	r3, r3, #24
   1583c:	orr	r0, r4, r6, lsr #24
   15840:	orr	r6, r3, r6, lsl #8
   15844:	ldr	r3, [sp, #268]	; 0x10c
   15848:	ldr	r4, [sp, #264]	; 0x108
   1584c:	str	r0, [sp, #88]	; 0x58
   15850:	str	r6, [sp, #100]	; 0x64
   15854:	adds	r3, r7, r3
   15858:	adc	r7, r8, r4
   1585c:	adds	r4, r3, r6
   15860:	adc	r3, r7, r0
   15864:	ldr	r0, [sp, #44]	; 0x2c
   15868:	str	r4, [sp, #96]	; 0x60
   1586c:	str	r3, [sp, #104]	; 0x68
   15870:	eor	r2, r3, r2
   15874:	eor	r3, r4, ip
   15878:	lsl	r7, r3, #16
   1587c:	lsr	r3, r3, #16
   15880:	orr	r7, r7, r2, lsr #16
   15884:	orr	r2, r3, r2, lsl #16
   15888:	adds	lr, r2, lr
   1588c:	str	r2, [sp, #48]	; 0x30
   15890:	ldr	r2, [sp, #28]
   15894:	str	r7, [sp, #40]	; 0x28
   15898:	adc	r8, r7, r1
   1589c:	ldr	r1, [sp, #24]
   158a0:	str	lr, [sp, #12]
   158a4:	str	r8, [sp, #8]
   158a8:	eor	r0, r1, r0
   158ac:	ldr	r1, [sp, #52]	; 0x34
   158b0:	eor	r1, r2, r1
   158b4:	lsl	r2, r0, #1
   158b8:	orr	r7, r2, r1, lsr #31
   158bc:	lsl	r1, r1, #1
   158c0:	ldr	r2, [sp, #120]	; 0x78
   158c4:	orr	r0, r1, r0, lsr #31
   158c8:	ldr	r1, [sp, #116]	; 0x74
   158cc:	adds	r1, r1, r9
   158d0:	adc	r2, r2, r5
   158d4:	adds	ip, r1, r0
   158d8:	ldr	r1, [sp, #148]	; 0x94
   158dc:	ldr	r5, [sp, #16]
   158e0:	adc	r3, r2, r7
   158e4:	eor	r2, r3, r1
   158e8:	str	r1, [fp, #-180]	; 0xffffff4c
   158ec:	ldr	r1, [sp, #160]	; 0xa0
   158f0:	adds	r4, r2, sl
   158f4:	eor	r0, r4, r0
   158f8:	str	r4, [sp, #68]	; 0x44
   158fc:	ldr	r4, [sp, #32]
   15900:	lsl	r6, r0, #8
   15904:	lsr	r0, r0, #24
   15908:	str	r1, [fp, #-184]	; 0xffffff48
   1590c:	eor	r1, ip, r1
   15910:	str	r5, [fp, #-220]	; 0xffffff24
   15914:	str	sl, [fp, #-224]	; 0xffffff20
   15918:	adc	r5, r1, r5
   1591c:	eor	r7, r5, r7
   15920:	str	r5, [sp, #72]	; 0x48
   15924:	orr	r5, r0, r7, lsl #8
   15928:	ldr	r0, [sp, #252]	; 0xfc
   1592c:	orr	r6, r6, r7, lsr #24
   15930:	ldr	r7, [sp, #208]	; 0xd0
   15934:	str	r5, [sp, #52]	; 0x34
   15938:	str	r6, [sp, #44]	; 0x2c
   1593c:	adds	r0, ip, r0
   15940:	adc	r3, r3, r7
   15944:	adds	r7, r0, r5
   15948:	adc	r0, r3, r6
   1594c:	eor	r2, r7, r2
   15950:	str	r7, [sp, #24]
   15954:	str	r0, [sp, #28]
   15958:	eor	r0, r0, r1
   1595c:	lsr	r1, r2, #16
   15960:	lsl	r2, r2, #16
   15964:	orr	r5, r2, r0, lsr #16
   15968:	ldr	r2, [sp, #56]	; 0x38
   1596c:	orr	r9, r1, r0, lsl #16
   15970:	ldr	r0, [sp, #20]
   15974:	eor	ip, r4, r5
   15978:	adds	r6, ip, lr
   1597c:	eor	r3, r2, r9
   15980:	str	r0, [fp, #-244]	; 0xffffff0c
   15984:	adc	r7, r3, r8
   15988:	eor	r1, r7, r0
   1598c:	ldr	r0, [sp, #36]	; 0x24
   15990:	str	r0, [fp, #-248]	; 0xffffff08
   15994:	eor	r0, r6, r0
   15998:	lsl	sl, r0, #8
   1599c:	lsr	r0, r0, #24
   159a0:	orr	sl, sl, r1, lsr #24
   159a4:	orr	r0, r0, r1, lsl #8
   159a8:	ldr	r1, [sp, #276]	; 0x114
   159ac:	adds	r1, r2, r1
   159b0:	ldr	r2, [sp, #272]	; 0x110
   159b4:	adc	r2, r4, r2
   159b8:	adds	r4, r1, r0
   159bc:	adc	r1, r2, sl
   159c0:	eor	r2, r4, ip
   159c4:	str	r4, [sp, #116]	; 0x74
   159c8:	str	r1, [sp, #120]	; 0x78
   159cc:	eor	r1, r1, r3
   159d0:	lsl	r3, r2, #16
   159d4:	lsr	r2, r2, #16
   159d8:	orr	r3, r3, r1, lsr #16
   159dc:	orr	r1, r2, r1, lsl #16
   159e0:	adds	r2, r1, r6
   159e4:	str	r1, [sp, #160]	; 0xa0
   159e8:	str	r3, [sp, #148]	; 0x94
   159ec:	ldr	r6, [sp, #60]	; 0x3c
   159f0:	adc	r1, r3, r7
   159f4:	str	r2, [sp, #136]	; 0x88
   159f8:	eor	r0, r2, r0
   159fc:	ldr	r7, [sp, #128]	; 0x80
   15a00:	str	r1, [sp, #140]	; 0x8c
   15a04:	eor	r1, r1, sl
   15a08:	lsl	r2, r1, #1
   15a0c:	orr	r8, r2, r0, lsr #31
   15a10:	lsl	r0, r0, #1
   15a14:	ldr	r2, [sp, #12]
   15a18:	orr	lr, r0, r1, lsr #31
   15a1c:	ldr	r0, [sp, #88]	; 0x58
   15a20:	ldr	r1, [sp, #8]
   15a24:	str	r8, [sp, #32]
   15a28:	str	lr, [sp, #36]	; 0x24
   15a2c:	eor	r0, r1, r0
   15a30:	ldr	r1, [sp, #100]	; 0x64
   15a34:	eor	r1, r2, r1
   15a38:	lsl	r2, r0, #1
   15a3c:	orr	r3, r2, r1, lsr #31
   15a40:	lsl	r1, r1, #1
   15a44:	ldr	r2, [sp, #124]	; 0x7c
   15a48:	orr	r0, r1, r0, lsr #31
   15a4c:	ldr	r1, [sp, #292]	; 0x124
   15a50:	adds	r1, r2, r1
   15a54:	ldr	r2, [sp, #288]	; 0x120
   15a58:	adc	r2, r7, r2
   15a5c:	adds	r1, r1, r0
   15a60:	adc	r7, r2, r3
   15a64:	ldr	r2, [sp, #68]	; 0x44
   15a68:	adds	r9, r9, r2
   15a6c:	ldr	r2, [sp, #72]	; 0x48
   15a70:	adc	sl, r5, r2
   15a74:	ldr	r2, [sp, #76]	; 0x4c
   15a78:	ldr	r5, [sp, #64]	; 0x40
   15a7c:	eor	r6, r6, r2
   15a80:	ldr	r2, [sp, #92]	; 0x5c
   15a84:	eor	r5, r5, r2
   15a88:	lsr	r4, r5, #16
   15a8c:	lsl	r5, r5, #16
   15a90:	orr	ip, r4, r6, lsl #16
   15a94:	orr	r6, r5, r6, lsr #16
   15a98:	eor	r2, r7, r6
   15a9c:	eor	r4, r1, ip
   15aa0:	adds	r5, r2, r9
   15aa4:	str	r2, [sp, #72]	; 0x48
   15aa8:	str	r4, [sp, #68]	; 0x44
   15aac:	adc	r2, r4, sl
   15ab0:	eor	r0, r5, r0
   15ab4:	str	r5, [sp, #92]	; 0x5c
   15ab8:	lsl	r5, r0, #8
   15abc:	eor	r3, r2, r3
   15ac0:	lsr	r0, r0, #24
   15ac4:	str	r2, [sp, #100]	; 0x64
   15ac8:	orr	r2, r5, r3, lsr #24
   15acc:	orr	r3, r0, r3, lsl #8
   15ad0:	ldr	r0, [sp, #240]	; 0xf0
   15ad4:	str	r3, [sp, #88]	; 0x58
   15ad8:	str	r2, [sp, #76]	; 0x4c
   15adc:	adds	r0, r1, r0
   15ae0:	ldr	r1, [sp, #236]	; 0xec
   15ae4:	adc	r1, r7, r1
   15ae8:	adds	r3, r0, r3
   15aec:	ldr	r0, [sp, #224]	; 0xe0
   15af0:	adc	r2, r1, r2
   15af4:	ldr	r1, [sp, #220]	; 0xdc
   15af8:	str	r3, [sp, #64]	; 0x40
   15afc:	str	r2, [sp, #56]	; 0x38
   15b00:	adds	r0, lr, r0
   15b04:	adc	r1, r8, r1
   15b08:	adds	r0, r0, r3
   15b0c:	str	r0, [sp, #128]	; 0x80
   15b10:	adc	r0, r1, r2
   15b14:	ldr	r2, [sp, #24]
   15b18:	str	r0, [sp, #124]	; 0x7c
   15b1c:	ldr	r0, [sp, #108]	; 0x6c
   15b20:	adds	lr, ip, r0
   15b24:	ldr	r0, [sp, #112]	; 0x70
   15b28:	adc	r8, r6, r0
   15b2c:	ldr	r0, [sp, #80]	; 0x50
   15b30:	eor	r1, r8, r0
   15b34:	ldr	r0, [sp, #84]	; 0x54
   15b38:	lsl	r7, r1, #1
   15b3c:	eor	r3, lr, r0
   15b40:	ldr	r0, [sp, #248]	; 0xf8
   15b44:	orr	r7, r7, r3, lsr #31
   15b48:	lsl	r3, r3, #1
   15b4c:	orr	r1, r3, r1, lsr #31
   15b50:	adds	r3, r2, r0
   15b54:	ldr	r0, [sp, #244]	; 0xf4
   15b58:	ldr	r2, [sp, #28]
   15b5c:	adc	r6, r2, r0
   15b60:	ldr	r0, [sp, #40]	; 0x28
   15b64:	adds	r3, r3, r1
   15b68:	adc	r4, r6, r7
   15b6c:	eor	r6, r0, r4
   15b70:	ldr	r0, [sp, #48]	; 0x30
   15b74:	eor	r2, r0, r3
   15b78:	ldr	r0, [sp, #132]	; 0x84
   15b7c:	str	r0, [fp, #-208]	; 0xffffff30
   15b80:	adds	ip, r6, r0
   15b84:	ldr	r0, [sp, #144]	; 0x90
   15b88:	str	r0, [fp, #-204]	; 0xffffff34
   15b8c:	str	r1, [fp, #-240]	; 0xffffff10
   15b90:	eor	r1, ip, r1
   15b94:	adc	r0, r2, r0
   15b98:	str	r7, [fp, #-236]	; 0xffffff14
   15b9c:	lsl	r5, r1, #8
   15ba0:	eor	r7, r0, r7
   15ba4:	lsr	r1, r1, #24
   15ba8:	orr	r5, r5, r7, lsr #24
   15bac:	orr	r7, r1, r7, lsl #8
   15bb0:	ldr	r1, [sp, #232]	; 0xe8
   15bb4:	str	r5, [sp, #80]	; 0x50
   15bb8:	str	r7, [sp, #84]	; 0x54
   15bbc:	adds	r1, r3, r1
   15bc0:	ldr	r3, [sp, #228]	; 0xe4
   15bc4:	adc	r3, r4, r3
   15bc8:	adds	r4, r1, r7
   15bcc:	adc	r1, r3, r5
   15bd0:	str	r4, [sp, #108]	; 0x6c
   15bd4:	str	r1, [sp, #112]	; 0x70
   15bd8:	eor	r1, r1, r2
   15bdc:	eor	r2, r4, r6
   15be0:	lsl	r3, r2, #16
   15be4:	lsr	r2, r2, #16
   15be8:	orr	r3, r3, r1, lsr #16
   15bec:	orr	r1, r2, r1, lsl #16
   15bf0:	adds	ip, r1, ip
   15bf4:	str	r1, [sp, #60]	; 0x3c
   15bf8:	ldr	r1, [sp, #52]	; 0x34
   15bfc:	str	r3, [sp, #48]	; 0x30
   15c00:	adc	r0, r3, r0
   15c04:	str	ip, [sp, #12]
   15c08:	str	r0, [sp, #16]
   15c0c:	ldr	r0, [sp, #44]	; 0x2c
   15c10:	eor	r2, r9, r1
   15c14:	ldr	r1, [sp, #252]	; 0xfc
   15c18:	eor	r0, sl, r0
   15c1c:	lsl	r6, r0, #1
   15c20:	orr	r6, r6, r2, lsr #31
   15c24:	lsl	r2, r2, #1
   15c28:	orr	r0, r2, r0, lsr #31
   15c2c:	adds	r2, r0, r1
   15c30:	ldr	r1, [sp, #208]	; 0xd0
   15c34:	adc	r5, r6, r1
   15c38:	ldr	r1, [sp, #96]	; 0x60
   15c3c:	adds	r2, r2, r1
   15c40:	ldr	r1, [sp, #104]	; 0x68
   15c44:	adc	r3, r5, r1
   15c48:	ldr	r1, [sp, #152]	; 0x98
   15c4c:	str	r1, [fp, #-164]	; 0xffffff5c
   15c50:	eor	r9, r3, r1
   15c54:	ldr	r1, [sp, #156]	; 0x9c
   15c58:	str	r1, [fp, #-168]	; 0xffffff58
   15c5c:	eor	r5, r2, r1
   15c60:	adds	r1, r9, lr
   15c64:	str	lr, [fp, #-200]	; 0xffffff38
   15c68:	str	r8, [fp, #-196]	; 0xffffff3c
   15c6c:	str	r0, [fp, #-232]	; 0xffffff18
   15c70:	str	r6, [fp, #-228]	; 0xffffff1c
   15c74:	adc	r7, r5, r8
   15c78:	eor	r0, r1, r0
   15c7c:	str	r1, [sp, #96]	; 0x60
   15c80:	ldr	r1, [sp, #184]	; 0xb8
   15c84:	lsl	r4, r0, #8
   15c88:	eor	r6, r7, r6
   15c8c:	lsr	r0, r0, #24
   15c90:	str	r7, [sp, #104]	; 0x68
   15c94:	ldr	r7, [sp, #16]
   15c98:	orr	r4, r4, r6, lsr #24
   15c9c:	orr	r6, r0, r6, lsl #8
   15ca0:	ldr	r0, [sp, #188]	; 0xbc
   15ca4:	str	r4, [sp, #44]	; 0x2c
   15ca8:	str	r6, [sp, #52]	; 0x34
   15cac:	adds	r0, r2, r0
   15cb0:	ldr	r2, [sp, #128]	; 0x80
   15cb4:	adc	r3, r3, r1
   15cb8:	adds	r0, r0, r6
   15cbc:	adc	r1, r3, r4
   15cc0:	eor	r4, r0, r9
   15cc4:	str	r0, [sp, #24]
   15cc8:	lsr	r0, r4, #16
   15ccc:	eor	r3, r1, r5
   15cd0:	lsl	r4, r4, #16
   15cd4:	str	r1, [sp, #28]
   15cd8:	orr	sl, r0, r3, lsl #16
   15cdc:	orr	r9, r4, r3, lsr #16
   15ce0:	ldr	r3, [sp, #124]	; 0x7c
   15ce4:	ldr	r0, [sp, #32]
   15ce8:	eor	r4, r2, sl
   15cec:	eor	lr, r3, r9
   15cf0:	adds	r5, lr, ip
   15cf4:	adc	r6, r4, r7
   15cf8:	eor	r1, r6, r0
   15cfc:	ldr	r0, [sp, #36]	; 0x24
   15d00:	eor	r0, r5, r0
   15d04:	lsl	r8, r0, #8
   15d08:	lsr	r0, r0, #24
   15d0c:	orr	r8, r8, r1, lsr #24
   15d10:	orr	ip, r0, r1, lsl #8
   15d14:	ldr	r1, [sp, #268]	; 0x10c
   15d18:	adds	r1, r2, r1
   15d1c:	ldr	r2, [sp, #264]	; 0x108
   15d20:	adc	r2, r3, r2
   15d24:	adds	r0, r1, ip
   15d28:	adc	r1, r2, r8
   15d2c:	eor	r2, r0, lr
   15d30:	str	r0, [sp, #124]	; 0x7c
   15d34:	str	r1, [sp, #128]	; 0x80
   15d38:	lsl	r3, r2, #16
   15d3c:	eor	r1, r1, r4
   15d40:	lsr	r2, r2, #16
   15d44:	orr	r3, r3, r1, lsr #16
   15d48:	orr	r1, r2, r1, lsl #16
   15d4c:	adds	r2, r1, r5
   15d50:	str	r1, [sp, #156]	; 0x9c
   15d54:	str	r3, [sp, #152]	; 0x98
   15d58:	adc	r1, r3, r6
   15d5c:	str	r2, [sp, #132]	; 0x84
   15d60:	eor	r0, r2, ip
   15d64:	ldr	r3, [sp, #116]	; 0x74
   15d68:	str	r1, [sp, #144]	; 0x90
   15d6c:	eor	r1, r1, r8
   15d70:	lsl	r2, r1, #1
   15d74:	orr	r8, r2, r0, lsr #31
   15d78:	lsl	r0, r0, #1
   15d7c:	ldr	r2, [sp, #12]
   15d80:	orr	lr, r0, r1, lsr #31
   15d84:	ldr	r0, [sp, #80]	; 0x50
   15d88:	ldr	r1, [sp, #84]	; 0x54
   15d8c:	str	r8, [sp, #20]
   15d90:	str	lr, [sp, #40]	; 0x28
   15d94:	eor	r0, r7, r0
   15d98:	eor	r1, r2, r1
   15d9c:	ldr	r7, [sp, #120]	; 0x78
   15da0:	lsl	r2, r0, #1
   15da4:	orr	r2, r2, r1, lsr #31
   15da8:	lsl	r1, r1, #1
   15dac:	orr	r0, r1, r0, lsr #31
   15db0:	ldr	r1, [sp, #196]	; 0xc4
   15db4:	adds	r1, r3, r1
   15db8:	ldr	r3, [sp, #192]	; 0xc0
   15dbc:	adc	r3, r7, r3
   15dc0:	adds	r7, r1, r0
   15dc4:	ldr	r1, [sp, #96]	; 0x60
   15dc8:	adc	ip, r3, r2
   15dcc:	ldr	r3, [sp, #56]	; 0x38
   15dd0:	adds	sl, sl, r1
   15dd4:	ldr	r1, [sp, #104]	; 0x68
   15dd8:	str	sl, [sp, #32]
   15ddc:	adc	r9, r9, r1
   15de0:	ldr	r1, [sp, #68]	; 0x44
   15de4:	eor	r5, r3, r1
   15de8:	ldr	r1, [sp, #72]	; 0x48
   15dec:	ldr	r3, [sp, #64]	; 0x40
   15df0:	eor	r4, r3, r1
   15df4:	lsr	r1, r4, #16
   15df8:	lsl	r4, r4, #16
   15dfc:	orr	r1, r1, r5, lsl #16
   15e00:	orr	r5, r4, r5, lsr #16
   15e04:	eor	r6, r5, ip
   15e08:	eor	r3, r1, r7
   15e0c:	str	r1, [fp, #-192]	; 0xffffff40
   15e10:	str	r5, [fp, #-188]	; 0xffffff44
   15e14:	str	r6, [sp, #96]	; 0x60
   15e18:	adds	r6, r6, sl
   15e1c:	str	r3, [sp, #72]	; 0x48
   15e20:	adc	r4, r3, r9
   15e24:	eor	r0, r6, r0
   15e28:	str	r6, [sp, #104]	; 0x68
   15e2c:	str	r4, [sp, #120]	; 0x78
   15e30:	eor	r2, r4, r2
   15e34:	lsl	r4, r0, #8
   15e38:	lsr	r0, r0, #24
   15e3c:	orr	r6, r4, r2, lsr #24
   15e40:	orr	r4, r0, r2, lsl #8
   15e44:	ldr	r0, [sp, #216]	; 0xd8
   15e48:	ldr	r2, [sp, #212]	; 0xd4
   15e4c:	str	r4, [sp, #84]	; 0x54
   15e50:	str	r6, [sp, #80]	; 0x50
   15e54:	adds	r0, r7, r0
   15e58:	ldr	r7, [sp, #180]	; 0xb4
   15e5c:	adc	r2, ip, r2
   15e60:	adds	r0, r0, r4
   15e64:	ldr	r4, [sp, #176]	; 0xb0
   15e68:	adc	r2, r2, r6
   15e6c:	str	r0, [sp, #68]	; 0x44
   15e70:	str	r2, [sp, #64]	; 0x40
   15e74:	adds	r0, r0, r7
   15e78:	adc	r2, r2, r4
   15e7c:	adds	r0, r0, lr
   15e80:	str	r0, [sp, #116]	; 0x74
   15e84:	adc	r0, r2, r8
   15e88:	str	r0, [sp, #36]	; 0x24
   15e8c:	ldr	r0, [sp, #92]	; 0x5c
   15e90:	adds	r6, r1, r0
   15e94:	ldr	r0, [sp, #100]	; 0x64
   15e98:	adc	sl, r5, r0
   15e9c:	ldr	r0, [sp, #76]	; 0x4c
   15ea0:	eor	r1, sl, r0
   15ea4:	ldr	r0, [sp, #88]	; 0x58
   15ea8:	lsl	r3, r1, #1
   15eac:	eor	r2, r6, r0
   15eb0:	ldr	r0, [sp, #24]
   15eb4:	orr	r3, r3, r2, lsr #31
   15eb8:	lsl	r2, r2, #1
   15ebc:	orr	r1, r2, r1, lsr #31
   15ec0:	adds	r2, r0, r7
   15ec4:	ldr	r0, [sp, #28]
   15ec8:	adc	r7, r0, r4
   15ecc:	ldr	r0, [sp, #48]	; 0x30
   15ed0:	adds	r8, r2, r1
   15ed4:	adc	r4, r7, r3
   15ed8:	str	r0, [fp, #-172]	; 0xffffff54
   15edc:	eor	ip, r4, r0
   15ee0:	ldr	r0, [sp, #60]	; 0x3c
   15ee4:	str	r0, [fp, #-176]	; 0xffffff50
   15ee8:	eor	r2, r8, r0
   15eec:	ldr	r0, [sp, #136]	; 0x88
   15ef0:	str	r0, [fp, #-216]	; 0xffffff28
   15ef4:	adds	lr, ip, r0
   15ef8:	ldr	r0, [sp, #140]	; 0x8c
   15efc:	str	r0, [fp, #-212]	; 0xffffff2c
   15f00:	str	r1, [fp, #-256]	; 0xffffff00
   15f04:	eor	r1, lr, r1
   15f08:	adc	r0, r2, r0
   15f0c:	str	r3, [fp, #-252]	; 0xffffff04
   15f10:	lsl	r7, r1, #8
   15f14:	eor	r3, r0, r3
   15f18:	lsr	r1, r1, #24
   15f1c:	orr	r5, r7, r3, lsr #24
   15f20:	orr	r7, r1, r3, lsl #8
   15f24:	ldr	r1, [sp, #284]	; 0x11c
   15f28:	ldr	r3, [sp, #280]	; 0x118
   15f2c:	str	r5, [sp, #76]	; 0x4c
   15f30:	str	r7, [sp, #88]	; 0x58
   15f34:	adds	r1, r8, r1
   15f38:	adc	r3, r4, r3
   15f3c:	adds	r4, r1, r7
   15f40:	adc	r1, r3, r5
   15f44:	str	r4, [sp, #92]	; 0x5c
   15f48:	str	r1, [sp, #100]	; 0x64
   15f4c:	eor	r1, r1, r2
   15f50:	eor	r2, r4, ip
   15f54:	lsl	r3, r2, #16
   15f58:	lsr	r2, r2, #16
   15f5c:	orr	r3, r3, r1, lsr #16
   15f60:	orr	r1, r2, r1, lsl #16
   15f64:	adds	ip, r1, lr
   15f68:	str	r3, [sp, #48]	; 0x30
   15f6c:	str	r1, [sp, #56]	; 0x38
   15f70:	adc	r0, r3, r0
   15f74:	ldr	r1, [sp, #52]	; 0x34
   15f78:	ldr	r2, [sp, #32]
   15f7c:	ldr	r8, [sp, #204]	; 0xcc
   15f80:	ldr	r5, [sp, #200]	; 0xc8
   15f84:	str	ip, [sp, #12]
   15f88:	str	r0, [sp, #24]
   15f8c:	ldr	r0, [sp, #44]	; 0x2c
   15f90:	eor	r1, r2, r1
   15f94:	eor	r0, r9, r0
   15f98:	lsl	r2, r0, #1
   15f9c:	orr	r3, r2, r1, lsr #31
   15fa0:	lsl	r1, r1, #1
   15fa4:	ldr	r2, [sp, #112]	; 0x70
   15fa8:	orr	r0, r1, r0, lsr #31
   15fac:	ldr	r1, [sp, #108]	; 0x6c
   15fb0:	adds	r1, r1, r8
   15fb4:	adc	r2, r2, r5
   15fb8:	adds	lr, r1, r0
   15fbc:	ldr	r1, [sp, #148]	; 0x94
   15fc0:	adc	r2, r2, r3
   15fc4:	eor	r9, r2, r1
   15fc8:	str	r1, [fp, #-180]	; 0xffffff4c
   15fcc:	ldr	r1, [sp, #160]	; 0xa0
   15fd0:	adds	r4, r9, r6
   15fd4:	eor	r0, r4, r0
   15fd8:	str	r4, [sp, #60]	; 0x3c
   15fdc:	ldr	r4, [sp, #36]	; 0x24
   15fe0:	lsl	r7, r0, #8
   15fe4:	lsr	r0, r0, #24
   15fe8:	str	r1, [fp, #-184]	; 0xffffff48
   15fec:	eor	r1, lr, r1
   15ff0:	str	r6, [fp, #-224]	; 0xffffff20
   15ff4:	str	sl, [fp, #-220]	; 0xffffff24
   15ff8:	adc	r6, r1, sl
   15ffc:	eor	r3, r6, r3
   16000:	str	r6, [sp, #108]	; 0x6c
   16004:	orr	r6, r0, r3, lsl #8
   16008:	ldr	r0, [sp, #260]	; 0x104
   1600c:	orr	r7, r7, r3, lsr #24
   16010:	ldr	r3, [sp, #256]	; 0x100
   16014:	str	r7, [sp, #44]	; 0x2c
   16018:	str	r6, [sp, #52]	; 0x34
   1601c:	adds	r0, lr, r0
   16020:	adc	r2, r2, r3
   16024:	adds	r3, r0, r6
   16028:	adc	r0, r2, r7
   1602c:	eor	r2, r3, r9
   16030:	ldr	r9, [sp, #24]
   16034:	str	r3, [sp, #28]
   16038:	str	r0, [sp, #32]
   1603c:	eor	r0, r0, r1
   16040:	lsr	r1, r2, #16
   16044:	lsl	r2, r2, #16
   16048:	orr	sl, r2, r0, lsr #16
   1604c:	ldr	r2, [sp, #116]	; 0x74
   16050:	orr	r1, r1, r0, lsl #16
   16054:	ldr	r0, [sp, #20]
   16058:	eor	r3, r4, sl
   1605c:	str	r1, [sp, #16]
   16060:	adds	r6, r3, ip
   16064:	eor	r7, r2, r1
   16068:	str	r0, [fp, #-244]	; 0xffffff0c
   1606c:	adc	ip, r7, r9
   16070:	eor	r1, ip, r0
   16074:	ldr	r0, [sp, #40]	; 0x28
   16078:	str	r0, [fp, #-248]	; 0xffffff08
   1607c:	eor	r0, r6, r0
   16080:	lsl	lr, r0, #8
   16084:	lsr	r0, r0, #24
   16088:	orr	lr, lr, r1, lsr #24
   1608c:	orr	r0, r0, r1, lsl #8
   16090:	adds	r1, r2, r8
   16094:	adc	r2, r4, r5
   16098:	adds	r4, r1, r0
   1609c:	ldr	r5, [sp, #68]	; 0x44
   160a0:	adc	r1, r2, lr
   160a4:	eor	r2, r4, r3
   160a8:	str	r4, [sp, #112]	; 0x70
   160ac:	str	r1, [sp, #116]	; 0x74
   160b0:	eor	r1, r1, r7
   160b4:	lsl	r3, r2, #16
   160b8:	lsr	r2, r2, #16
   160bc:	ldr	r7, [sp, #128]	; 0x80
   160c0:	orr	r3, r3, r1, lsr #16
   160c4:	orr	r1, r2, r1, lsl #16
   160c8:	adds	r2, r1, r6
   160cc:	str	r1, [sp, #160]	; 0xa0
   160d0:	str	r3, [sp, #148]	; 0x94
   160d4:	ldr	r6, [sp, #64]	; 0x40
   160d8:	adc	r1, r3, ip
   160dc:	str	r2, [sp, #136]	; 0x88
   160e0:	eor	r0, r2, r0
   160e4:	ldr	r3, [sp, #124]	; 0x7c
   160e8:	str	r1, [sp, #140]	; 0x8c
   160ec:	eor	r1, r1, lr
   160f0:	lsl	r2, r1, #1
   160f4:	orr	r8, r2, r0, lsr #31
   160f8:	lsl	r0, r0, #1
   160fc:	ldr	r2, [sp, #12]
   16100:	orr	lr, r0, r1, lsr #31
   16104:	ldr	r0, [sp, #76]	; 0x4c
   16108:	ldr	r1, [sp, #88]	; 0x58
   1610c:	str	r8, [sp, #36]	; 0x24
   16110:	str	lr, [sp, #40]	; 0x28
   16114:	eor	r0, r9, r0
   16118:	eor	r1, r2, r1
   1611c:	lsl	r2, r0, #1
   16120:	orr	r2, r2, r1, lsr #31
   16124:	lsl	r1, r1, #1
   16128:	orr	r0, r1, r0, lsr #31
   1612c:	ldr	r1, [sp, #240]	; 0xf0
   16130:	adds	r1, r3, r1
   16134:	ldr	r3, [sp, #236]	; 0xec
   16138:	adc	r3, r7, r3
   1613c:	adds	r7, r1, r0
   16140:	ldr	r1, [sp, #60]	; 0x3c
   16144:	adc	ip, r3, r2
   16148:	ldr	r3, [sp, #16]
   1614c:	adds	r3, r3, r1
   16150:	ldr	r1, [sp, #108]	; 0x6c
   16154:	str	r3, [sp, #20]
   16158:	adc	r9, sl, r1
   1615c:	ldr	r1, [sp, #72]	; 0x48
   16160:	eor	r6, r6, r1
   16164:	ldr	r1, [sp, #96]	; 0x60
   16168:	eor	r5, r5, r1
   1616c:	lsr	r4, r5, #16
   16170:	lsl	r5, r5, #16
   16174:	orr	sl, r4, r6, lsl #16
   16178:	orr	r6, r5, r6, lsr #16
   1617c:	eor	r1, ip, r6
   16180:	eor	r4, r7, sl
   16184:	adds	r5, r1, r3
   16188:	str	r1, [sp, #108]	; 0x6c
   1618c:	str	r4, [sp, #68]	; 0x44
   16190:	adc	r1, r4, r9
   16194:	eor	r0, r5, r0
   16198:	str	r5, [sp, #88]	; 0x58
   1619c:	lsl	r5, r0, #8
   161a0:	eor	r2, r1, r2
   161a4:	lsr	r0, r0, #24
   161a8:	str	r1, [sp, #96]	; 0x60
   161ac:	ldr	r1, [sp, #212]	; 0xd4
   161b0:	orr	r4, r0, r2, lsl #8
   161b4:	ldr	r0, [sp, #216]	; 0xd8
   161b8:	orr	r5, r5, r2, lsr #24
   161bc:	str	r4, [sp, #76]	; 0x4c
   161c0:	str	r5, [sp, #72]	; 0x48
   161c4:	adds	r0, r7, r0
   161c8:	ldr	r7, [sp, #32]
   161cc:	adc	r2, ip, r1
   161d0:	adds	r3, r0, r4
   161d4:	ldr	r0, [sp, #248]	; 0xf8
   161d8:	ldr	r1, [sp, #244]	; 0xf4
   161dc:	adc	r4, r2, r5
   161e0:	str	r3, [sp, #64]	; 0x40
   161e4:	str	r4, [sp, #60]	; 0x3c
   161e8:	adds	r0, lr, r0
   161ec:	adc	r2, r8, r1
   161f0:	adds	r0, r0, r3
   161f4:	ldr	r1, [sp, #84]	; 0x54
   161f8:	str	r0, [sp, #124]	; 0x7c
   161fc:	adc	r0, r2, r4
   16200:	str	r0, [sp, #24]
   16204:	ldr	r0, [sp, #104]	; 0x68
   16208:	adds	r4, sl, r0
   1620c:	ldr	r0, [sp, #120]	; 0x78
   16210:	eor	r2, r4, r1
   16214:	ldr	r1, [sp, #260]	; 0x104
   16218:	adc	r8, r6, r0
   1621c:	ldr	r0, [sp, #80]	; 0x50
   16220:	eor	r0, r8, r0
   16224:	lsl	r3, r0, #1
   16228:	orr	r3, r3, r2, lsr #31
   1622c:	lsl	r2, r2, #1
   16230:	orr	r0, r2, r0, lsr #31
   16234:	ldr	r2, [sp, #28]
   16238:	adds	r2, r2, r1
   1623c:	ldr	r1, [sp, #256]	; 0x100
   16240:	adc	r7, r7, r1
   16244:	ldr	r1, [sp, #48]	; 0x30
   16248:	adds	r2, r2, r0
   1624c:	adc	r7, r7, r3
   16250:	eor	lr, r1, r7
   16254:	ldr	r1, [sp, #56]	; 0x38
   16258:	eor	r6, r1, r2
   1625c:	ldr	r1, [sp, #132]	; 0x84
   16260:	str	r1, [fp, #-208]	; 0xffffff30
   16264:	adds	ip, lr, r1
   16268:	ldr	r1, [sp, #144]	; 0x90
   1626c:	str	r1, [fp, #-204]	; 0xffffff34
   16270:	str	r0, [fp, #-240]	; 0xffffff10
   16274:	eor	r0, ip, r0
   16278:	adc	sl, r6, r1
   1627c:	str	r3, [fp, #-236]	; 0xffffff14
   16280:	lsl	r5, r0, #8
   16284:	eor	r3, sl, r3
   16288:	lsr	r0, r0, #24
   1628c:	orr	r1, r0, r3, lsl #8
   16290:	ldr	r0, [sp, #268]	; 0x10c
   16294:	orr	r5, r5, r3, lsr #24
   16298:	str	r1, [sp, #84]	; 0x54
   1629c:	str	r5, [sp, #80]	; 0x50
   162a0:	adds	r0, r2, r0
   162a4:	ldr	r2, [sp, #264]	; 0x108
   162a8:	adc	r2, r7, r2
   162ac:	adds	r3, r0, r1
   162b0:	ldr	r1, [sp, #52]	; 0x34
   162b4:	adc	r0, r2, r5
   162b8:	eor	r2, r3, lr
   162bc:	str	r3, [sp, #104]	; 0x68
   162c0:	str	r0, [sp, #128]	; 0x80
   162c4:	lsl	r3, r2, #16
   162c8:	eor	r0, r0, r6
   162cc:	lsr	r2, r2, #16
   162d0:	orr	r3, r3, r0, lsr #16
   162d4:	orr	r0, r2, r0, lsl #16
   162d8:	ldr	r2, [sp, #20]
   162dc:	adds	ip, r0, ip
   162e0:	str	r0, [sp, #56]	; 0x38
   162e4:	ldr	r0, [sp, #44]	; 0x2c
   162e8:	str	r3, [sp, #48]	; 0x30
   162ec:	adc	lr, r3, sl
   162f0:	str	ip, [sp, #16]
   162f4:	str	lr, [sp, #8]
   162f8:	eor	r1, r2, r1
   162fc:	ldr	r2, [sp, #220]	; 0xdc
   16300:	eor	r0, r9, r0
   16304:	lsl	r6, r0, #1
   16308:	orr	r6, r6, r1, lsr #31
   1630c:	lsl	r1, r1, #1
   16310:	orr	r0, r1, r0, lsr #31
   16314:	ldr	r1, [sp, #224]	; 0xe0
   16318:	adds	r1, r0, r1
   1631c:	adc	r5, r6, r2
   16320:	ldr	r2, [sp, #92]	; 0x5c
   16324:	adds	r3, r1, r2
   16328:	ldr	r1, [sp, #100]	; 0x64
   1632c:	ldr	r2, [sp, #152]	; 0x98
   16330:	adc	r1, r5, r1
   16334:	str	r2, [fp, #-164]	; 0xffffff5c
   16338:	eor	r5, r1, r2
   1633c:	ldr	r2, [sp, #156]	; 0x9c
   16340:	str	r2, [fp, #-168]	; 0xffffff58
   16344:	eor	sl, r3, r2
   16348:	adds	r2, r5, r4
   1634c:	str	r4, [fp, #-200]	; 0xffffff38
   16350:	str	r8, [fp, #-196]	; 0xffffff3c
   16354:	str	r0, [fp, #-232]	; 0xffffff18
   16358:	str	r6, [fp, #-228]	; 0xffffff1c
   1635c:	adc	r4, sl, r8
   16360:	eor	r0, r2, r0
   16364:	str	r2, [sp, #92]	; 0x5c
   16368:	ldr	r2, [sp, #272]	; 0x110
   1636c:	ldr	r8, [sp, #196]	; 0xc4
   16370:	lsl	r7, r0, #8
   16374:	eor	r6, r4, r6
   16378:	lsr	r0, r0, #24
   1637c:	str	r4, [sp, #100]	; 0x64
   16380:	ldr	r4, [sp, #24]
   16384:	orr	r7, r7, r6, lsr #24
   16388:	orr	r6, r0, r6, lsl #8
   1638c:	ldr	r0, [sp, #276]	; 0x114
   16390:	str	r6, [sp, #52]	; 0x34
   16394:	str	r7, [sp, #44]	; 0x2c
   16398:	adds	r0, r3, r0
   1639c:	adc	r3, r1, r2
   163a0:	adds	r1, r0, r6
   163a4:	ldr	r2, [sp, #124]	; 0x7c
   163a8:	adc	r0, r3, r7
   163ac:	eor	r5, r1, r5
   163b0:	str	r1, [sp, #28]
   163b4:	str	r0, [sp, #32]
   163b8:	lsr	r6, r5, #16
   163bc:	eor	r0, r0, sl
   163c0:	lsl	r5, r5, #16
   163c4:	orr	r1, r6, r0, lsl #16
   163c8:	orr	sl, r5, r0, lsr #16
   163cc:	ldr	r0, [sp, #36]	; 0x24
   163d0:	eor	r5, r4, sl
   163d4:	eor	r7, r2, r1
   163d8:	str	r1, [sp, #20]
   163dc:	adds	r9, r5, ip
   163e0:	adc	r6, r7, lr
   163e4:	ldr	lr, [sp, #192]	; 0xc0
   163e8:	eor	r1, r6, r0
   163ec:	ldr	r0, [sp, #40]	; 0x28
   163f0:	eor	r0, r9, r0
   163f4:	lsl	r3, r0, #8
   163f8:	lsr	r0, r0, #24
   163fc:	orr	ip, r3, r1, lsr #24
   16400:	orr	r3, r0, r1, lsl #8
   16404:	adds	r1, r2, r8
   16408:	adc	r2, r4, lr
   1640c:	adds	r0, r1, r3
   16410:	adc	r1, r2, ip
   16414:	eor	r2, r0, r5
   16418:	str	r0, [sp, #120]	; 0x78
   1641c:	str	r1, [sp, #124]	; 0x7c
   16420:	eor	r1, r1, r7
   16424:	lsl	r5, r2, #16
   16428:	lsr	r2, r2, #16
   1642c:	ldr	r7, [sp, #116]	; 0x74
   16430:	orr	r5, r5, r1, lsr #16
   16434:	orr	r1, r2, r1, lsl #16
   16438:	adds	r2, r1, r9
   1643c:	str	r1, [sp, #156]	; 0x9c
   16440:	str	r5, [sp, #152]	; 0x98
   16444:	adc	r1, r5, r6
   16448:	str	r2, [sp, #132]	; 0x84
   1644c:	eor	r0, r2, r3
   16450:	str	r1, [sp, #144]	; 0x90
   16454:	eor	r1, r1, ip
   16458:	lsl	r2, r1, #1
   1645c:	orr	r2, r2, r0, lsr #31
   16460:	lsl	r0, r0, #1
   16464:	orr	r9, r0, r1, lsr #31
   16468:	ldr	r0, [sp, #80]	; 0x50
   1646c:	ldr	r1, [sp, #8]
   16470:	str	r2, [sp, #12]
   16474:	ldr	r2, [sp, #16]
   16478:	str	r9, [sp, #40]	; 0x28
   1647c:	eor	r0, r1, r0
   16480:	ldr	r1, [sp, #84]	; 0x54
   16484:	eor	r1, r2, r1
   16488:	lsl	r2, r0, #1
   1648c:	orr	r3, r2, r1, lsr #31
   16490:	lsl	r1, r1, #1
   16494:	ldr	r2, [sp, #112]	; 0x70
   16498:	orr	r0, r1, r0, lsr #31
   1649c:	ldr	r1, [sp, #172]	; 0xac
   164a0:	adds	r1, r2, r1
   164a4:	ldr	r2, [sp, #168]	; 0xa8
   164a8:	adc	r2, r7, r2
   164ac:	adds	r7, r1, r0
   164b0:	ldr	r1, [sp, #92]	; 0x5c
   164b4:	adc	ip, r2, r3
   164b8:	ldr	r2, [sp, #20]
   164bc:	adds	r6, r2, r1
   164c0:	ldr	r1, [sp, #100]	; 0x64
   164c4:	ldr	r2, [sp, #60]	; 0x3c
   164c8:	str	r6, [sp, #36]	; 0x24
   164cc:	adc	sl, sl, r1
   164d0:	ldr	r1, [sp, #68]	; 0x44
   164d4:	str	sl, [sp, #24]
   164d8:	eor	r5, r2, r1
   164dc:	ldr	r1, [sp, #108]	; 0x6c
   164e0:	ldr	r2, [sp, #64]	; 0x40
   164e4:	eor	r4, r2, r1
   164e8:	lsr	r1, r4, #16
   164ec:	lsl	r4, r4, #16
   164f0:	orr	r4, r4, r5, lsr #16
   164f4:	orr	r1, r1, r5, lsl #16
   164f8:	eor	r2, r4, ip
   164fc:	eor	r5, r1, r7
   16500:	str	r1, [fp, #-192]	; 0xffffff40
   16504:	str	r4, [fp, #-188]	; 0xffffff44
   16508:	str	r2, [sp, #92]	; 0x5c
   1650c:	adds	r2, r2, r6
   16510:	str	r5, [sp, #68]	; 0x44
   16514:	adc	r5, r5, sl
   16518:	eor	r0, r2, r0
   1651c:	str	r2, [sp, #100]	; 0x64
   16520:	ldr	r2, [sp, #184]	; 0xb8
   16524:	str	r5, [sp, #108]	; 0x6c
   16528:	eor	r3, r5, r3
   1652c:	lsl	r5, r0, #8
   16530:	lsr	r0, r0, #24
   16534:	orr	r6, r0, r3, lsl #8
   16538:	ldr	r0, [sp, #188]	; 0xbc
   1653c:	orr	r5, r5, r3, lsr #24
   16540:	str	r5, [sp, #80]	; 0x50
   16544:	str	r6, [sp, #84]	; 0x54
   16548:	adds	r0, r7, r0
   1654c:	adc	r3, ip, r2
   16550:	adds	r0, r0, r6
   16554:	adc	r2, r3, r5
   16558:	str	r0, [sp, #64]	; 0x40
   1655c:	adds	r0, r0, r8
   16560:	ldr	r8, [sp, #12]
   16564:	adc	r3, r2, lr
   16568:	adds	r0, r0, r9
   1656c:	str	r2, [sp, #60]	; 0x3c
   16570:	ldr	r2, [sp, #28]
   16574:	str	r0, [sp, #116]	; 0x74
   16578:	adc	r0, r3, r8
   1657c:	str	r0, [sp, #112]	; 0x70
   16580:	ldr	r0, [sp, #88]	; 0x58
   16584:	adds	r5, r1, r0
   16588:	ldr	r0, [sp, #96]	; 0x60
   1658c:	adc	lr, r4, r0
   16590:	ldr	r0, [sp, #72]	; 0x48
   16594:	eor	r1, lr, r0
   16598:	ldr	r0, [sp, #76]	; 0x4c
   1659c:	lsl	r7, r1, #1
   165a0:	eor	r3, r5, r0
   165a4:	ldr	r0, [sp, #252]	; 0xfc
   165a8:	orr	r7, r7, r3, lsr #31
   165ac:	lsl	r3, r3, #1
   165b0:	orr	r1, r3, r1, lsr #31
   165b4:	adds	r3, r2, r0
   165b8:	ldr	r0, [sp, #208]	; 0xd0
   165bc:	ldr	r2, [sp, #32]
   165c0:	adc	r6, r2, r0
   165c4:	ldr	r0, [sp, #48]	; 0x30
   165c8:	adds	r3, r3, r1
   165cc:	adc	r6, r6, r7
   165d0:	str	r0, [fp, #-172]	; 0xffffff54
   165d4:	eor	sl, r6, r0
   165d8:	ldr	r0, [sp, #56]	; 0x38
   165dc:	str	r0, [fp, #-176]	; 0xffffff50
   165e0:	eor	r2, r3, r0
   165e4:	ldr	r0, [sp, #136]	; 0x88
   165e8:	str	r0, [fp, #-216]	; 0xffffff28
   165ec:	adds	ip, sl, r0
   165f0:	ldr	r0, [sp, #140]	; 0x8c
   165f4:	str	r0, [fp, #-212]	; 0xffffff2c
   165f8:	adc	r9, r2, r0
   165fc:	str	r1, [fp, #-256]	; 0xffffff00
   16600:	eor	r1, ip, r1
   16604:	str	r7, [fp, #-252]	; 0xffffff04
   16608:	eor	r4, r9, r7
   1660c:	lsl	r7, r1, #8
   16610:	lsr	r1, r1, #24
   16614:	orr	r0, r1, r4, lsl #8
   16618:	ldr	r1, [sp, #232]	; 0xe8
   1661c:	orr	r7, r7, r4, lsr #24
   16620:	str	r0, [sp, #88]	; 0x58
   16624:	str	r7, [sp, #76]	; 0x4c
   16628:	adds	r1, r3, r1
   1662c:	ldr	r3, [sp, #228]	; 0xe4
   16630:	adc	r3, r6, r3
   16634:	adds	r4, r1, r0
   16638:	adc	r1, r3, r7
   1663c:	str	r4, [sp, #96]	; 0x60
   16640:	str	r1, [sp, #136]	; 0x88
   16644:	eor	r1, r1, r2
   16648:	eor	r2, r4, sl
   1664c:	lsl	r3, r2, #16
   16650:	lsr	r2, r2, #16
   16654:	orr	r3, r3, r1, lsr #16
   16658:	orr	r1, r2, r1, lsl #16
   1665c:	ldr	r2, [sp, #36]	; 0x24
   16660:	adds	r0, r1, ip
   16664:	str	r1, [sp, #56]	; 0x38
   16668:	ldr	r1, [sp, #24]
   1666c:	str	r3, [sp, #48]	; 0x30
   16670:	str	r0, [sp, #20]
   16674:	adc	r0, r3, r9
   16678:	ldr	r3, [sp, #128]	; 0x80
   1667c:	str	r0, [sp, #16]
   16680:	ldr	r0, [sp, #44]	; 0x2c
   16684:	eor	r0, r1, r0
   16688:	ldr	r1, [sp, #52]	; 0x34
   1668c:	eor	r1, r2, r1
   16690:	lsl	r2, r0, #1
   16694:	orr	r6, r2, r1, lsr #31
   16698:	lsl	r1, r1, #1
   1669c:	ldr	r2, [sp, #104]	; 0x68
   166a0:	orr	r0, r1, r0, lsr #31
   166a4:	ldr	r1, [sp, #284]	; 0x11c
   166a8:	adds	r1, r2, r1
   166ac:	ldr	r2, [sp, #280]	; 0x118
   166b0:	adc	r2, r3, r2
   166b4:	ldr	r3, [sp, #148]	; 0x94
   166b8:	adds	r1, r1, r0
   166bc:	adc	r2, r2, r6
   166c0:	str	r3, [fp, #-180]	; 0xffffff4c
   166c4:	eor	r9, r2, r3
   166c8:	ldr	r3, [sp, #160]	; 0xa0
   166cc:	str	r3, [fp, #-184]	; 0xffffff48
   166d0:	eor	ip, r1, r3
   166d4:	adds	r3, r9, r5
   166d8:	str	r5, [fp, #-224]	; 0xffffff20
   166dc:	ldr	r5, [sp, #16]
   166e0:	str	lr, [fp, #-220]	; 0xffffff24
   166e4:	str	r8, [fp, #-244]	; 0xffffff0c
   166e8:	adc	r7, ip, lr
   166ec:	eor	r0, r3, r0
   166f0:	str	r3, [sp, #72]	; 0x48
   166f4:	lsl	r4, r0, #8
   166f8:	eor	r6, r7, r6
   166fc:	lsr	r0, r0, #24
   16700:	str	r7, [sp, #104]	; 0x68
   16704:	orr	r7, r0, r6, lsl #8
   16708:	ldr	r0, [sp, #292]	; 0x124
   1670c:	orr	r3, r4, r6, lsr #24
   16710:	str	r3, [sp, #44]	; 0x2c
   16714:	str	r7, [sp, #52]	; 0x34
   16718:	adds	r0, r1, r0
   1671c:	ldr	r1, [sp, #288]	; 0x120
   16720:	adc	r1, r2, r1
   16724:	adds	r2, r0, r7
   16728:	ldr	r7, [sp, #20]
   1672c:	adc	r0, r1, r3
   16730:	eor	r4, r2, r9
   16734:	ldr	r3, [sp, #116]	; 0x74
   16738:	str	r2, [sp, #24]
   1673c:	str	r0, [sp, #28]
   16740:	lsr	r1, r4, #16
   16744:	eor	r0, r0, ip
   16748:	lsl	r4, r4, #16
   1674c:	orr	sl, r4, r0, lsr #16
   16750:	ldr	r4, [sp, #112]	; 0x70
   16754:	orr	r1, r1, r0, lsl #16
   16758:	mov	r0, r8
   1675c:	str	r1, [sp, #8]
   16760:	eor	r2, r3, r1
   16764:	eor	r8, r4, sl
   16768:	adds	lr, r8, r7
   1676c:	adc	r9, r2, r5
   16770:	eor	r1, r9, r0
   16774:	ldr	r0, [sp, #40]	; 0x28
   16778:	str	r0, [fp, #-248]	; 0xffffff08
   1677c:	eor	r0, lr, r0
   16780:	lsl	r6, r0, #8
   16784:	lsr	r0, r0, #24
   16788:	orr	r6, r6, r1, lsr #24
   1678c:	orr	ip, r0, r1, lsl #8
   16790:	ldr	r1, [sp, #260]	; 0x104
   16794:	adds	r1, r3, r1
   16798:	ldr	r3, [sp, #256]	; 0x100
   1679c:	adc	r3, r4, r3
   167a0:	adds	r0, r1, ip
   167a4:	ldr	r4, [sp, #8]
   167a8:	adc	r1, r3, r6
   167ac:	str	r0, [sp, #112]	; 0x70
   167b0:	str	r1, [sp, #116]	; 0x74
   167b4:	eor	r1, r1, r2
   167b8:	eor	r2, r0, r8
   167bc:	lsl	r3, r2, #16
   167c0:	lsr	r2, r2, #16
   167c4:	orr	r3, r3, r1, lsr #16
   167c8:	orr	r1, r2, r1, lsl #16
   167cc:	adds	r2, r1, lr
   167d0:	str	r1, [sp, #160]	; 0xa0
   167d4:	str	r3, [sp, #148]	; 0x94
   167d8:	adc	r1, r3, r9
   167dc:	str	r2, [sp, #128]	; 0x80
   167e0:	eor	r0, r2, ip
   167e4:	ldr	r3, [sp, #120]	; 0x78
   167e8:	str	r1, [sp, #140]	; 0x8c
   167ec:	eor	r1, r1, r6
   167f0:	ldr	r6, [sp, #124]	; 0x7c
   167f4:	lsl	r2, r1, #1
   167f8:	orr	r8, r2, r0, lsr #31
   167fc:	lsl	r0, r0, #1
   16800:	orr	lr, r0, r1, lsr #31
   16804:	ldr	r0, [sp, #76]	; 0x4c
   16808:	ldr	r1, [sp, #88]	; 0x58
   1680c:	str	r8, [sp, #32]
   16810:	str	lr, [sp, #36]	; 0x24
   16814:	eor	r0, r5, r0
   16818:	eor	r1, r7, r1
   1681c:	ldr	r7, [sp, #68]	; 0x44
   16820:	ldr	r5, [sp, #64]	; 0x40
   16824:	lsl	r2, r0, #1
   16828:	orr	r2, r2, r1, lsr #31
   1682c:	lsl	r1, r1, #1
   16830:	orr	r0, r1, r0, lsr #31
   16834:	ldr	r1, [sp, #268]	; 0x10c
   16838:	adds	r1, r3, r1
   1683c:	ldr	r3, [sp, #264]	; 0x108
   16840:	adc	r3, r6, r3
   16844:	ldr	r6, [sp, #60]	; 0x3c
   16848:	adds	ip, r1, r0
   1684c:	ldr	r1, [sp, #72]	; 0x48
   16850:	adc	r3, r3, r2
   16854:	eor	r6, r6, r7
   16858:	ldr	r7, [sp, #92]	; 0x5c
   1685c:	adds	r1, r4, r1
   16860:	ldr	r4, [sp, #104]	; 0x68
   16864:	str	r1, [sp, #40]	; 0x28
   16868:	eor	r5, r5, r7
   1686c:	adc	r9, sl, r4
   16870:	lsr	r4, r5, #16
   16874:	lsl	r5, r5, #16
   16878:	orr	sl, r4, r6, lsl #16
   1687c:	orr	r6, r5, r6, lsr #16
   16880:	eor	r7, r3, r6
   16884:	eor	r4, ip, sl
   16888:	adds	r5, r7, r1
   1688c:	str	r7, [sp, #104]	; 0x68
   16890:	ldr	r1, [sp, #228]	; 0xe4
   16894:	str	r4, [sp, #76]	; 0x4c
   16898:	adc	r7, r4, r9
   1689c:	eor	r0, r5, r0
   168a0:	str	r5, [sp, #88]	; 0x58
   168a4:	lsl	r5, r0, #8
   168a8:	eor	r2, r7, r2
   168ac:	lsr	r0, r0, #24
   168b0:	str	r7, [sp, #92]	; 0x5c
   168b4:	orr	r7, r5, r2, lsr #24
   168b8:	orr	r2, r0, r2, lsl #8
   168bc:	ldr	r0, [sp, #232]	; 0xe8
   168c0:	str	r2, [sp, #68]	; 0x44
   168c4:	str	r7, [sp, #64]	; 0x40
   168c8:	adds	r0, ip, r0
   168cc:	adc	r1, r3, r1
   168d0:	adds	r2, r0, r2
   168d4:	ldr	r0, [sp, #216]	; 0xd8
   168d8:	adc	r3, r1, r7
   168dc:	ldr	r1, [sp, #212]	; 0xd4
   168e0:	str	r2, [sp, #72]	; 0x48
   168e4:	ldr	r7, [sp, #28]
   168e8:	str	r3, [sp, #60]	; 0x3c
   168ec:	adds	r0, lr, r0
   168f0:	adc	r1, r8, r1
   168f4:	adds	r0, r0, r2
   168f8:	str	r0, [sp, #124]	; 0x7c
   168fc:	adc	r0, r1, r3
   16900:	ldr	r1, [sp, #84]	; 0x54
   16904:	str	r0, [sp, #120]	; 0x78
   16908:	ldr	r0, [sp, #100]	; 0x64
   1690c:	adds	sl, sl, r0
   16910:	ldr	r0, [sp, #108]	; 0x6c
   16914:	eor	r2, sl, r1
   16918:	ldr	r1, [sp, #240]	; 0xf0
   1691c:	adc	r8, r6, r0
   16920:	ldr	r0, [sp, #80]	; 0x50
   16924:	eor	r0, r8, r0
   16928:	lsl	r3, r0, #1
   1692c:	orr	r3, r3, r2, lsr #31
   16930:	lsl	r2, r2, #1
   16934:	orr	r0, r2, r0, lsr #31
   16938:	ldr	r2, [sp, #24]
   1693c:	adds	r2, r2, r1
   16940:	ldr	r1, [sp, #236]	; 0xec
   16944:	adc	r6, r7, r1
   16948:	ldr	r1, [sp, #48]	; 0x30
   1694c:	adds	r2, r2, r0
   16950:	adc	r6, r6, r3
   16954:	eor	ip, r1, r6
   16958:	ldr	r1, [sp, #56]	; 0x38
   1695c:	eor	lr, r1, r2
   16960:	ldr	r1, [sp, #132]	; 0x84
   16964:	str	r1, [fp, #-208]	; 0xffffff30
   16968:	adds	r4, ip, r1
   1696c:	ldr	r1, [sp, #144]	; 0x90
   16970:	str	r1, [fp, #-204]	; 0xffffff34
   16974:	str	r0, [fp, #-240]	; 0xffffff10
   16978:	eor	r0, r4, r0
   1697c:	adc	r1, lr, r1
   16980:	str	r3, [fp, #-236]	; 0xffffff14
   16984:	lsl	r7, r0, #8
   16988:	eor	r3, r1, r3
   1698c:	lsr	r0, r0, #24
   16990:	orr	r5, r7, r3, lsr #24
   16994:	orr	r3, r0, r3, lsl #8
   16998:	ldr	r0, [sp, #180]	; 0xb4
   1699c:	str	r3, [sp, #80]	; 0x50
   169a0:	str	r5, [sp, #56]	; 0x38
   169a4:	adds	r0, r2, r0
   169a8:	ldr	r2, [sp, #176]	; 0xb0
   169ac:	adc	r2, r6, r2
   169b0:	adds	r3, r0, r3
   169b4:	adc	r0, r2, r5
   169b8:	eor	r2, r3, ip
   169bc:	str	r3, [sp, #100]	; 0x64
   169c0:	str	r0, [sp, #108]	; 0x6c
   169c4:	lsl	r3, r2, #16
   169c8:	eor	r0, r0, lr
   169cc:	lsr	r2, r2, #16
   169d0:	orr	r3, r3, r0, lsr #16
   169d4:	orr	r0, r2, r0, lsl #16
   169d8:	ldr	r2, [sp, #40]	; 0x28
   169dc:	adds	ip, r0, r4
   169e0:	str	r0, [sp, #84]	; 0x54
   169e4:	ldr	r0, [sp, #44]	; 0x2c
   169e8:	str	r3, [sp, #48]	; 0x30
   169ec:	adc	lr, r3, r1
   169f0:	ldr	r1, [sp, #52]	; 0x34
   169f4:	ldr	r3, [sp, #96]	; 0x60
   169f8:	str	ip, [sp, #12]
   169fc:	eor	r0, r9, r0
   16a00:	eor	r1, r2, r1
   16a04:	lsl	r2, r0, #1
   16a08:	orr	r4, r2, r1, lsr #31
   16a0c:	lsl	r1, r1, #1
   16a10:	ldr	r2, [sp, #184]	; 0xb8
   16a14:	orr	r0, r1, r0, lsr #31
   16a18:	ldr	r1, [sp, #188]	; 0xbc
   16a1c:	adds	r1, r0, r1
   16a20:	adc	r2, r4, r2
   16a24:	adds	r3, r1, r3
   16a28:	ldr	r1, [sp, #136]	; 0x88
   16a2c:	adc	r2, r2, r1
   16a30:	ldr	r1, [sp, #152]	; 0x98
   16a34:	eor	r9, r2, r1
   16a38:	str	r1, [fp, #-164]	; 0xffffff5c
   16a3c:	ldr	r1, [sp, #156]	; 0x9c
   16a40:	adds	r5, r9, sl
   16a44:	str	r5, [sp, #52]	; 0x34
   16a48:	str	r1, [fp, #-168]	; 0xffffff58
   16a4c:	eor	r1, r3, r1
   16a50:	str	sl, [fp, #-200]	; 0xffffff38
   16a54:	str	r8, [fp, #-196]	; 0xffffff3c
   16a58:	str	r0, [fp, #-232]	; 0xffffff18
   16a5c:	eor	r0, r5, r0
   16a60:	str	r4, [fp, #-228]	; 0xffffff1c
   16a64:	adc	r6, r1, r8
   16a68:	lsl	r5, r0, #8
   16a6c:	lsr	r0, r0, #24
   16a70:	eor	r4, r6, r4
   16a74:	str	r6, [sp, #96]	; 0x60
   16a78:	orr	r6, r0, r4, lsl #8
   16a7c:	ldr	r0, [sp, #284]	; 0x11c
   16a80:	orr	r7, r5, r4, lsr #24
   16a84:	ldr	r5, [sp, #120]	; 0x78
   16a88:	str	r7, [sp, #40]	; 0x28
   16a8c:	str	r6, [sp, #152]	; 0x98
   16a90:	adds	r0, r3, r0
   16a94:	ldr	r3, [sp, #280]	; 0x118
   16a98:	adc	r2, r2, r3
   16a9c:	adds	r3, r0, r6
   16aa0:	mov	r6, lr
   16aa4:	adc	r0, r2, r7
   16aa8:	ldr	r7, [sp, #124]	; 0x7c
   16aac:	str	r3, [sp, #28]
   16ab0:	str	r0, [sp, #44]	; 0x2c
   16ab4:	eor	r0, r0, r1
   16ab8:	eor	r1, r3, r9
   16abc:	lsr	r3, r1, #16
   16ac0:	lsl	r1, r1, #16
   16ac4:	orr	r3, r3, r0, lsl #16
   16ac8:	orr	sl, r1, r0, lsr #16
   16acc:	ldr	r0, [sp, #32]
   16ad0:	eor	r2, r5, sl
   16ad4:	str	r3, [sp, #16]
   16ad8:	eor	r3, r7, r3
   16adc:	adds	r8, r2, ip
   16ae0:	adc	lr, r3, lr
   16ae4:	eor	r1, lr, r0
   16ae8:	ldr	r0, [sp, #36]	; 0x24
   16aec:	eor	r0, r8, r0
   16af0:	lsl	r4, r0, #8
   16af4:	lsr	r0, r0, #24
   16af8:	orr	r4, r4, r1, lsr #24
   16afc:	orr	r0, r0, r1, lsl #8
   16b00:	ldr	r1, [sp, #248]	; 0xf8
   16b04:	adds	r1, r7, r1
   16b08:	ldr	r7, [sp, #244]	; 0xf4
   16b0c:	adc	ip, r5, r7
   16b10:	adds	r7, r1, r0
   16b14:	adc	r1, ip, r4
   16b18:	eor	r2, r7, r2
   16b1c:	str	r7, [sp, #120]	; 0x78
   16b20:	ldr	r7, [sp, #116]	; 0x74
   16b24:	eor	ip, r1, r3
   16b28:	lsl	r3, r2, #16
   16b2c:	lsr	r2, r2, #16
   16b30:	str	r1, [sp, #124]	; 0x7c
   16b34:	orr	r1, r2, ip, lsl #16
   16b38:	orr	r3, r3, ip, lsr #16
   16b3c:	adds	r2, r1, r8
   16b40:	str	r1, [sp, #156]	; 0x9c
   16b44:	str	r3, [sp, #144]	; 0x90
   16b48:	adc	r1, r3, lr
   16b4c:	str	r2, [sp, #132]	; 0x84
   16b50:	eor	r0, r2, r0
   16b54:	ldr	r3, [sp, #112]	; 0x70
   16b58:	str	r1, [sp, #136]	; 0x88
   16b5c:	eor	r1, r1, r4
   16b60:	lsl	r2, r1, #1
   16b64:	orr	r9, r2, r0, lsr #31
   16b68:	lsl	r0, r0, #1
   16b6c:	ldr	r2, [sp, #12]
   16b70:	orr	r8, r0, r1, lsr #31
   16b74:	ldr	r0, [sp, #56]	; 0x38
   16b78:	ldr	r1, [sp, #80]	; 0x50
   16b7c:	str	r9, [sp, #20]
   16b80:	str	r8, [sp, #24]
   16b84:	eor	r0, r6, r0
   16b88:	eor	r1, r2, r1
   16b8c:	lsl	r2, r0, #1
   16b90:	orr	r2, r2, r1, lsr #31
   16b94:	lsl	r1, r1, #1
   16b98:	orr	ip, r1, r0, lsr #31
   16b9c:	ldr	r1, [sp, #204]	; 0xcc
   16ba0:	ldr	r0, [sp, #52]	; 0x34
   16ba4:	adds	r1, r3, r1
   16ba8:	ldr	r3, [sp, #200]	; 0xc8
   16bac:	adc	r3, r7, r3
   16bb0:	adds	r7, r1, ip
   16bb4:	ldr	r1, [sp, #16]
   16bb8:	adc	lr, r3, r2
   16bbc:	ldr	r3, [sp, #60]	; 0x3c
   16bc0:	adds	r0, r1, r0
   16bc4:	ldr	r1, [sp, #96]	; 0x60
   16bc8:	str	r0, [sp, #32]
   16bcc:	adc	sl, sl, r1
   16bd0:	ldr	r1, [sp, #76]	; 0x4c
   16bd4:	str	sl, [sp, #16]
   16bd8:	eor	r6, r3, r1
   16bdc:	ldr	r1, [sp, #104]	; 0x68
   16be0:	ldr	r3, [sp, #72]	; 0x48
   16be4:	eor	r4, r3, r1
   16be8:	lsr	r1, r4, #16
   16bec:	lsl	r4, r4, #16
   16bf0:	orr	r1, r1, r6, lsl #16
   16bf4:	orr	r6, r4, r6, lsr #16
   16bf8:	eor	r3, r6, lr
   16bfc:	eor	r5, r1, r7
   16c00:	str	r1, [fp, #-192]	; 0xffffff40
   16c04:	str	r6, [fp, #-188]	; 0xffffff44
   16c08:	str	r3, [sp, #80]	; 0x50
   16c0c:	adds	r3, r3, r0
   16c10:	str	r5, [sp, #60]	; 0x3c
   16c14:	adc	r4, r5, sl
   16c18:	eor	r0, r3, ip
   16c1c:	str	r3, [sp, #96]	; 0x60
   16c20:	str	r4, [sp, #104]	; 0x68
   16c24:	eor	r2, r4, r2
   16c28:	lsl	r4, r0, #8
   16c2c:	lsr	r0, r0, #24
   16c30:	orr	r3, r4, r2, lsr #24
   16c34:	orr	r4, r0, r2, lsl #8
   16c38:	ldr	r0, [sp, #224]	; 0xe0
   16c3c:	ldr	r2, [sp, #220]	; 0xdc
   16c40:	str	r3, [sp, #72]	; 0x48
   16c44:	str	r4, [sp, #76]	; 0x4c
   16c48:	adds	r0, r7, r0
   16c4c:	adc	r2, lr, r2
   16c50:	adds	r7, r0, r4
   16c54:	ldr	r0, [sp, #260]	; 0x104
   16c58:	adc	r3, r2, r3
   16c5c:	ldr	r2, [sp, #256]	; 0x100
   16c60:	str	r7, [sp, #56]	; 0x38
   16c64:	str	r3, [sp, #52]	; 0x34
   16c68:	adds	r0, r7, r0
   16c6c:	adc	r2, r3, r2
   16c70:	adds	r0, r0, r8
   16c74:	ldr	r3, [sp, #44]	; 0x2c
   16c78:	str	r0, [sp, #116]	; 0x74
   16c7c:	adc	r0, r2, r9
   16c80:	str	r0, [sp, #112]	; 0x70
   16c84:	ldr	r0, [sp, #88]	; 0x58
   16c88:	adds	sl, r1, r0
   16c8c:	ldr	r0, [sp, #92]	; 0x5c
   16c90:	adc	r5, r6, r0
   16c94:	ldr	r0, [sp, #64]	; 0x40
   16c98:	eor	r1, r5, r0
   16c9c:	ldr	r0, [sp, #68]	; 0x44
   16ca0:	lsl	r7, r1, #1
   16ca4:	eor	r2, sl, r0
   16ca8:	ldr	r0, [sp, #292]	; 0x124
   16cac:	orr	r7, r7, r2, lsr #31
   16cb0:	lsl	r2, r2, #1
   16cb4:	orr	r1, r2, r1, lsr #31
   16cb8:	ldr	r2, [sp, #28]
   16cbc:	adds	r2, r2, r0
   16cc0:	ldr	r0, [sp, #288]	; 0x120
   16cc4:	adc	r6, r3, r0
   16cc8:	ldr	r0, [sp, #48]	; 0x30
   16ccc:	adds	r8, r2, r1
   16cd0:	adc	r6, r6, r7
   16cd4:	str	r0, [fp, #-172]	; 0xffffff54
   16cd8:	eor	ip, r6, r0
   16cdc:	ldr	r0, [sp, #84]	; 0x54
   16ce0:	str	r0, [fp, #-176]	; 0xffffff50
   16ce4:	eor	r2, r8, r0
   16ce8:	ldr	r0, [sp, #128]	; 0x80
   16cec:	str	r0, [fp, #-216]	; 0xffffff28
   16cf0:	adds	lr, ip, r0
   16cf4:	ldr	r0, [sp, #140]	; 0x8c
   16cf8:	str	r0, [fp, #-212]	; 0xffffff2c
   16cfc:	adc	r3, r2, r0
   16d00:	str	r1, [fp, #-256]	; 0xffffff00
   16d04:	eor	r1, lr, r1
   16d08:	str	r7, [fp, #-252]	; 0xffffff04
   16d0c:	eor	r4, r3, r7
   16d10:	lsl	r7, r1, #8
   16d14:	lsr	r1, r1, #24
   16d18:	orr	r0, r1, r4, lsl #8
   16d1c:	ldr	r1, [sp, #276]	; 0x114
   16d20:	orr	r7, r7, r4, lsr #24
   16d24:	ldr	r4, [sp, #272]	; 0x110
   16d28:	str	r7, [sp, #68]	; 0x44
   16d2c:	str	r0, [sp, #88]	; 0x58
   16d30:	adds	r1, r8, r1
   16d34:	ldr	r8, [sp, #172]	; 0xac
   16d38:	adc	r6, r6, r4
   16d3c:	adds	r4, r1, r0
   16d40:	ldr	r0, [sp, #40]	; 0x28
   16d44:	adc	r1, r6, r7
   16d48:	str	r4, [sp, #84]	; 0x54
   16d4c:	str	r1, [sp, #92]	; 0x5c
   16d50:	eor	r1, r1, r2
   16d54:	eor	r2, r4, ip
   16d58:	lsl	r7, r2, #16
   16d5c:	lsr	r2, r2, #16
   16d60:	orr	r7, r7, r1, lsr #16
   16d64:	orr	r1, r2, r1, lsl #16
   16d68:	ldr	r2, [sp, #32]
   16d6c:	adds	ip, r1, lr
   16d70:	str	r1, [sp, #44]	; 0x2c
   16d74:	ldr	r1, [sp, #16]
   16d78:	str	r7, [sp, #36]	; 0x24
   16d7c:	adc	lr, r7, r3
   16d80:	ldr	r7, [sp, #108]	; 0x6c
   16d84:	str	ip, [sp, #12]
   16d88:	eor	r0, r1, r0
   16d8c:	ldr	r1, [sp, #152]	; 0x98
   16d90:	lsl	r3, r0, #1
   16d94:	eor	r1, r2, r1
   16d98:	ldr	r2, [sp, #100]	; 0x64
   16d9c:	orr	r3, r3, r1, lsr #31
   16da0:	lsl	r1, r1, #1
   16da4:	orr	r0, r1, r0, lsr #31
   16da8:	ldr	r1, [sp, #252]	; 0xfc
   16dac:	adds	r1, r2, r1
   16db0:	ldr	r2, [sp, #208]	; 0xd0
   16db4:	adc	r6, r7, r2
   16db8:	adds	r7, r1, r0
   16dbc:	ldr	r1, [sp, #148]	; 0x94
   16dc0:	adc	r6, r6, r3
   16dc4:	eor	r9, r6, r1
   16dc8:	str	r1, [fp, #-180]	; 0xffffff4c
   16dcc:	ldr	r1, [sp, #160]	; 0xa0
   16dd0:	adds	r2, r9, sl
   16dd4:	eor	r0, r2, r0
   16dd8:	str	r2, [sp, #48]	; 0x30
   16ddc:	lsl	r4, r0, #8
   16de0:	lsr	r0, r0, #24
   16de4:	str	r1, [fp, #-184]	; 0xffffff48
   16de8:	str	sl, [fp, #-224]	; 0xffffff20
   16dec:	eor	r1, r7, r1
   16df0:	ldr	sl, [sp, #168]	; 0xa8
   16df4:	str	r5, [fp, #-220]	; 0xffffff24
   16df8:	adc	r5, r1, r5
   16dfc:	eor	r3, r5, r3
   16e00:	str	r5, [sp, #64]	; 0x40
   16e04:	orr	r5, r0, r3, lsl #8
   16e08:	adds	r0, r7, r8
   16e0c:	orr	r2, r4, r3, lsr #24
   16e10:	adc	r3, r6, sl
   16e14:	adds	r7, r0, r5
   16e18:	str	r5, [sp, #32]
   16e1c:	ldr	r5, [sp, #112]	; 0x70
   16e20:	str	r2, [sp, #28]
   16e24:	adc	r0, r3, r2
   16e28:	ldr	r2, [sp, #116]	; 0x74
   16e2c:	str	r7, [sp, #100]	; 0x64
   16e30:	str	r0, [sp, #108]	; 0x6c
   16e34:	eor	r0, r0, r1
   16e38:	eor	r1, r7, r9
   16e3c:	lsr	r4, r1, #16
   16e40:	lsl	r1, r1, #16
   16e44:	orr	r1, r1, r0, lsr #16
   16e48:	orr	r4, r4, r0, lsl #16
   16e4c:	ldr	r0, [sp, #20]
   16e50:	eor	r3, r5, r1
   16e54:	str	r4, [sp, #16]
   16e58:	eor	r4, r2, r4
   16e5c:	str	r1, [sp, #40]	; 0x28
   16e60:	adds	r9, r3, ip
   16e64:	adc	r6, r4, lr
   16e68:	str	r0, [fp, #-244]	; 0xffffff0c
   16e6c:	eor	r1, r6, r0
   16e70:	ldr	r0, [sp, #24]
   16e74:	str	r0, [fp, #-248]	; 0xffffff08
   16e78:	eor	r0, r9, r0
   16e7c:	lsl	r7, r0, #8
   16e80:	lsr	r0, r0, #24
   16e84:	orr	r7, r7, r1, lsr #24
   16e88:	orr	ip, r0, r1, lsl #8
   16e8c:	ldr	r1, [sp, #284]	; 0x11c
   16e90:	adds	r1, r2, r1
   16e94:	ldr	r2, [sp, #280]	; 0x118
   16e98:	adc	r2, r5, r2
   16e9c:	adds	r0, r1, ip
   16ea0:	adc	r1, r2, r7
   16ea4:	eor	r2, r0, r3
   16ea8:	str	r0, [sp, #112]	; 0x70
   16eac:	str	r1, [sp, #116]	; 0x74
   16eb0:	lsl	r3, r2, #16
   16eb4:	eor	r1, r1, r4
   16eb8:	lsr	r2, r2, #16
   16ebc:	orr	r3, r3, r1, lsr #16
   16ec0:	orr	r1, r2, r1, lsl #16
   16ec4:	adds	r2, r1, r9
   16ec8:	str	r1, [sp, #152]	; 0x98
   16ecc:	str	r3, [sp, #148]	; 0x94
   16ed0:	adc	r1, r3, r6
   16ed4:	str	r2, [sp, #128]	; 0x80
   16ed8:	eor	r0, r2, ip
   16edc:	ldr	r6, [sp, #56]	; 0x38
   16ee0:	str	r1, [sp, #140]	; 0x8c
   16ee4:	eor	r1, r1, r7
   16ee8:	ldr	r7, [sp, #52]	; 0x34
   16eec:	lsl	r2, r1, #1
   16ef0:	orr	r2, r2, r0, lsr #31
   16ef4:	lsl	r0, r0, #1
   16ef8:	orr	r9, r0, r1, lsr #31
   16efc:	ldr	r0, [sp, #68]	; 0x44
   16f00:	str	r2, [sp, #160]	; 0xa0
   16f04:	ldr	r1, [sp, #88]	; 0x58
   16f08:	ldr	r2, [sp, #12]
   16f0c:	str	r9, [sp, #24]
   16f10:	eor	r0, lr, r0
   16f14:	eor	r1, r2, r1
   16f18:	lsl	r2, r0, #1
   16f1c:	orr	r3, r2, r1, lsr #31
   16f20:	lsl	r1, r1, #1
   16f24:	ldr	r2, [sp, #124]	; 0x7c
   16f28:	orr	r0, r1, r0, lsr #31
   16f2c:	ldr	r1, [sp, #120]	; 0x78
   16f30:	adds	r1, r1, r8
   16f34:	adc	r2, r2, sl
   16f38:	adds	lr, r1, r0
   16f3c:	ldr	r1, [sp, #48]	; 0x30
   16f40:	adc	r4, r2, r3
   16f44:	ldr	r2, [sp, #16]
   16f48:	adds	sl, r2, r1
   16f4c:	ldr	r1, [sp, #64]	; 0x40
   16f50:	ldr	r2, [sp, #40]	; 0x28
   16f54:	adc	r1, r2, r1
   16f58:	ldr	r2, [sp, #60]	; 0x3c
   16f5c:	str	r1, [sp, #20]
   16f60:	eor	r7, r7, r2
   16f64:	ldr	r2, [sp, #80]	; 0x50
   16f68:	eor	r6, r6, r2
   16f6c:	lsr	r5, r6, #16
   16f70:	lsl	r6, r6, #16
   16f74:	orr	ip, r5, r7, lsl #16
   16f78:	orr	r7, r6, r7, lsr #16
   16f7c:	eor	r2, r4, r7
   16f80:	eor	r5, lr, ip
   16f84:	adds	r6, r2, sl
   16f88:	str	r2, [sp, #60]	; 0x3c
   16f8c:	str	r5, [sp, #56]	; 0x38
   16f90:	adc	r2, r5, r1
   16f94:	eor	r0, r6, r0
   16f98:	str	r6, [sp, #80]	; 0x50
   16f9c:	ldr	r1, [sp, #200]	; 0xc8
   16fa0:	lsl	r6, r0, #8
   16fa4:	eor	r3, r2, r3
   16fa8:	lsr	r0, r0, #24
   16fac:	str	r2, [sp, #88]	; 0x58
   16fb0:	orr	r2, r6, r3, lsr #24
   16fb4:	orr	r3, r0, r3, lsl #8
   16fb8:	ldr	r0, [sp, #204]	; 0xcc
   16fbc:	ldr	r6, [sp, #160]	; 0xa0
   16fc0:	str	r3, [sp, #68]	; 0x44
   16fc4:	str	r2, [sp, #64]	; 0x40
   16fc8:	adds	r0, lr, r0
   16fcc:	adc	r1, r4, r1
   16fd0:	adds	r3, r0, r3
   16fd4:	ldr	r0, [sp, #240]	; 0xf0
   16fd8:	adc	r2, r1, r2
   16fdc:	ldr	r1, [sp, #236]	; 0xec
   16fe0:	str	r3, [sp, #52]	; 0x34
   16fe4:	str	r2, [sp, #48]	; 0x30
   16fe8:	adds	r0, r9, r0
   16fec:	adc	r1, r6, r1
   16ff0:	adds	r0, r0, r3
   16ff4:	str	r0, [sp, #124]	; 0x7c
   16ff8:	adc	r0, r1, r2
   16ffc:	ldr	r2, [sp, #188]	; 0xbc
   17000:	str	r0, [sp, #120]	; 0x78
   17004:	ldr	r0, [sp, #96]	; 0x60
   17008:	adds	lr, ip, r0
   1700c:	ldr	r0, [sp, #104]	; 0x68
   17010:	adc	r1, r7, r0
   17014:	ldr	r0, [sp, #72]	; 0x48
   17018:	str	r1, [sp, #16]
   1701c:	eor	r3, r1, r0
   17020:	ldr	r0, [sp, #76]	; 0x4c
   17024:	ldr	r1, [sp, #100]	; 0x64
   17028:	lsl	r6, r3, #1
   1702c:	eor	r7, lr, r0
   17030:	ldr	r0, [sp, #232]	; 0xe8
   17034:	orr	r6, r6, r7, lsr #31
   17038:	lsl	r7, r7, #1
   1703c:	orr	r3, r7, r3, lsr #31
   17040:	adds	r7, r1, r0
   17044:	ldr	r0, [sp, #228]	; 0xe4
   17048:	ldr	r1, [sp, #108]	; 0x6c
   1704c:	adc	r5, r1, r0
   17050:	ldr	r0, [sp, #36]	; 0x24
   17054:	adds	r7, r7, r3
   17058:	adc	ip, r5, r6
   1705c:	eor	r8, r0, ip
   17060:	ldr	r0, [sp, #44]	; 0x2c
   17064:	eor	r9, r0, r7
   17068:	ldr	r0, [sp, #132]	; 0x84
   1706c:	str	r0, [fp, #-208]	; 0xffffff30
   17070:	adds	r1, r8, r0
   17074:	ldr	r0, [sp, #136]	; 0x88
   17078:	str	r0, [fp, #-204]	; 0xffffff34
   1707c:	adc	r0, r9, r0
   17080:	str	r3, [fp, #-240]	; 0xffffff10
   17084:	eor	r3, r1, r3
   17088:	str	r6, [fp, #-236]	; 0xffffff14
   1708c:	lsl	r4, r3, #8
   17090:	eor	r5, r0, r6
   17094:	lsr	r3, r3, #24
   17098:	orr	r4, r4, r5, lsr #24
   1709c:	orr	r5, r3, r5, lsl #8
   170a0:	adds	r3, r7, r2
   170a4:	ldr	r2, [sp, #184]	; 0xb8
   170a8:	str	r4, [sp, #96]	; 0x60
   170ac:	str	r5, [sp, #104]	; 0x68
   170b0:	adc	r7, ip, r2
   170b4:	adds	r2, r3, r5
   170b8:	ldr	r5, [sp, #16]
   170bc:	adc	r3, r7, r4
   170c0:	eor	r7, r2, r8
   170c4:	str	r2, [sp, #100]	; 0x64
   170c8:	str	r3, [sp, #108]	; 0x6c
   170cc:	eor	r3, r3, r9
   170d0:	lsl	r6, r7, #16
   170d4:	lsr	r7, r7, #16
   170d8:	ldr	r9, [sp, #208]	; 0xd0
   170dc:	orr	r2, r6, r3, lsr #16
   170e0:	orr	r3, r7, r3, lsl #16
   170e4:	adds	ip, r3, r1
   170e8:	ldr	r1, [sp, #20]
   170ec:	str	r3, [sp, #44]	; 0x2c
   170f0:	str	r2, [sp, #40]	; 0x28
   170f4:	adc	r4, r2, r0
   170f8:	ldr	r0, [sp, #28]
   170fc:	ldr	r2, [sp, #244]	; 0xf4
   17100:	str	ip, [sp, #12]
   17104:	str	r4, [sp, #8]
   17108:	eor	r0, r1, r0
   1710c:	ldr	r1, [sp, #32]
   17110:	lsl	r3, r0, #1
   17114:	eor	r1, sl, r1
   17118:	orr	r6, r3, r1, lsr #31
   1711c:	lsl	r1, r1, #1
   17120:	orr	r0, r1, r0, lsr #31
   17124:	ldr	r1, [sp, #248]	; 0xf8
   17128:	adds	r1, r0, r1
   1712c:	adc	r3, r6, r2
   17130:	ldr	r2, [sp, #84]	; 0x54
   17134:	adds	r2, r1, r2
   17138:	ldr	r1, [sp, #92]	; 0x5c
   1713c:	adc	sl, r3, r1
   17140:	ldr	r1, [sp, #144]	; 0x90
   17144:	eor	r3, sl, r1
   17148:	str	r1, [fp, #-164]	; 0xffffff5c
   1714c:	ldr	r1, [sp, #156]	; 0x9c
   17150:	adds	r7, r3, lr
   17154:	str	r7, [sp, #72]	; 0x48
   17158:	str	r1, [fp, #-168]	; 0xffffff58
   1715c:	eor	r1, r2, r1
   17160:	str	r5, [fp, #-196]	; 0xffffff3c
   17164:	str	lr, [fp, #-200]	; 0xffffff38
   17168:	str	r0, [fp, #-232]	; 0xffffff18
   1716c:	eor	r0, r7, r0
   17170:	str	r6, [fp, #-228]	; 0xffffff1c
   17174:	adc	r5, r1, r5
   17178:	lsl	r7, r0, #8
   1717c:	lsr	r0, r0, #24
   17180:	eor	r6, r5, r6
   17184:	str	r5, [sp, #76]	; 0x4c
   17188:	orr	r7, r7, r6, lsr #24
   1718c:	orr	r6, r0, r6, lsl #8
   17190:	ldr	r0, [sp, #252]	; 0xfc
   17194:	str	r6, [sp, #156]	; 0x9c
   17198:	str	r7, [sp, #36]	; 0x24
   1719c:	adds	r0, r2, r0
   171a0:	adc	r2, sl, r9
   171a4:	adds	r6, r0, r6
   171a8:	adc	r0, r2, r7
   171ac:	eor	r3, r6, r3
   171b0:	ldr	r2, [sp, #124]	; 0x7c
   171b4:	str	r6, [sp, #84]	; 0x54
   171b8:	str	r0, [sp, #92]	; 0x5c
   171bc:	eor	r0, r0, r1
   171c0:	lsr	r1, r3, #16
   171c4:	lsl	r3, r3, #16
   171c8:	orr	r5, r3, r0, lsr #16
   171cc:	ldr	r3, [sp, #120]	; 0x78
   171d0:	orr	r8, r1, r0, lsl #16
   171d4:	ldr	r0, [sp, #160]	; 0xa0
   171d8:	eor	r7, r2, r8
   171dc:	eor	lr, r3, r5
   171e0:	adds	sl, lr, ip
   171e4:	adc	r4, r7, r4
   171e8:	eor	r1, r4, r0
   171ec:	ldr	r0, [sp, #24]
   171f0:	eor	r0, sl, r0
   171f4:	lsl	r6, r0, #8
   171f8:	lsr	r0, r0, #24
   171fc:	orr	r6, r6, r1, lsr #24
   17200:	orr	ip, r0, r1, lsl #8
   17204:	ldr	r1, [sp, #292]	; 0x124
   17208:	adds	r1, r2, r1
   1720c:	ldr	r2, [sp, #288]	; 0x120
   17210:	adc	r2, r3, r2
   17214:	adds	r0, r1, ip
   17218:	adc	r1, r2, r6
   1721c:	eor	r2, r0, lr
   17220:	str	r0, [sp, #120]	; 0x78
   17224:	str	r1, [sp, #124]	; 0x7c
   17228:	eor	r1, r1, r7
   1722c:	lsl	r3, r2, #16
   17230:	lsr	r2, r2, #16
   17234:	ldr	r7, [sp, #116]	; 0x74
   17238:	orr	r3, r3, r1, lsr #16
   1723c:	orr	r1, r2, r1, lsl #16
   17240:	adds	r2, r1, sl
   17244:	str	r1, [sp, #160]	; 0xa0
   17248:	str	r3, [sp, #144]	; 0x90
   1724c:	adc	r1, r3, r4
   17250:	str	r2, [sp, #132]	; 0x84
   17254:	eor	r0, r2, ip
   17258:	ldr	r3, [sp, #112]	; 0x70
   1725c:	str	r1, [sp, #136]	; 0x88
   17260:	eor	r1, r1, r6
   17264:	lsl	r2, r1, #1
   17268:	orr	sl, r2, r0, lsr #31
   1726c:	lsl	r0, r0, #1
   17270:	ldr	r2, [sp, #12]
   17274:	orr	lr, r0, r1, lsr #31
   17278:	ldr	r0, [sp, #96]	; 0x60
   1727c:	ldr	r1, [sp, #8]
   17280:	str	sl, [sp, #28]
   17284:	str	lr, [sp, #32]
   17288:	eor	r0, r1, r0
   1728c:	ldr	r1, [sp, #104]	; 0x68
   17290:	eor	r1, r2, r1
   17294:	lsl	r2, r0, #1
   17298:	orr	r2, r2, r1, lsr #31
   1729c:	lsl	r1, r1, #1
   172a0:	orr	r0, r1, r0, lsr #31
   172a4:	ldr	r1, [sp, #268]	; 0x10c
   172a8:	adds	r1, r3, r1
   172ac:	ldr	r3, [sp, #264]	; 0x108
   172b0:	adc	r3, r7, r3
   172b4:	adds	r7, r1, r0
   172b8:	ldr	r1, [sp, #72]	; 0x48
   172bc:	adc	ip, r3, r2
   172c0:	ldr	r3, [sp, #48]	; 0x30
   172c4:	adds	r4, r8, r1
   172c8:	ldr	r1, [sp, #76]	; 0x4c
   172cc:	str	r4, [sp, #24]
   172d0:	adc	r8, r5, r1
   172d4:	ldr	r1, [sp, #56]	; 0x38
   172d8:	str	r8, [sp, #20]
   172dc:	eor	r6, r3, r1
   172e0:	ldr	r1, [sp, #60]	; 0x3c
   172e4:	ldr	r3, [sp, #52]	; 0x34
   172e8:	eor	r5, r3, r1
   172ec:	lsr	r1, r5, #16
   172f0:	lsl	r5, r5, #16
   172f4:	orr	r1, r1, r6, lsl #16
   172f8:	orr	r6, r5, r6, lsr #16
   172fc:	eor	r5, r6, ip
   17300:	eor	r3, r1, r7
   17304:	str	r1, [fp, #-192]	; 0xffffff40
   17308:	str	r6, [fp, #-188]	; 0xffffff44
   1730c:	str	r5, [sp, #60]	; 0x3c
   17310:	adds	r5, r5, r4
   17314:	str	r3, [sp, #56]	; 0x38
   17318:	adc	r4, r3, r8
   1731c:	eor	r0, r5, r0
   17320:	str	r5, [sp, #96]	; 0x60
   17324:	ldr	r3, [sp, #252]	; 0xfc
   17328:	lsl	r5, r0, #8
   1732c:	eor	r2, r4, r2
   17330:	lsr	r0, r0, #24
   17334:	str	r4, [sp, #104]	; 0x68
   17338:	orr	r4, r0, r2, lsl #8
   1733c:	ldr	r0, [sp, #196]	; 0xc4
   17340:	orr	r5, r5, r2, lsr #24
   17344:	ldr	r2, [sp, #192]	; 0xc0
   17348:	str	r4, [sp, #76]	; 0x4c
   1734c:	str	r5, [sp, #72]	; 0x48
   17350:	adds	r0, r7, r0
   17354:	ldr	r7, [sp, #92]	; 0x5c
   17358:	adc	r2, ip, r2
   1735c:	adds	r0, r0, r4
   17360:	adc	r2, r2, r5
   17364:	str	r0, [sp, #52]	; 0x34
   17368:	adds	r0, r0, r3
   1736c:	str	r2, [sp, #48]	; 0x30
   17370:	adc	r2, r2, r9
   17374:	adds	r0, r0, lr
   17378:	str	r0, [sp, #116]	; 0x74
   1737c:	adc	r0, r2, sl
   17380:	str	r0, [sp, #112]	; 0x70
   17384:	ldr	r0, [sp, #80]	; 0x50
   17388:	adds	r8, r1, r0
   1738c:	ldr	r0, [sp, #88]	; 0x58
   17390:	adc	sl, r6, r0
   17394:	ldr	r0, [sp, #64]	; 0x40
   17398:	eor	r1, sl, r0
   1739c:	ldr	r0, [sp, #68]	; 0x44
   173a0:	lsl	r3, r1, #1
   173a4:	eor	r2, r8, r0
   173a8:	ldr	r0, [sp, #276]	; 0x114
   173ac:	orr	r3, r3, r2, lsr #31
   173b0:	lsl	r2, r2, #1
   173b4:	orr	r1, r2, r1, lsr #31
   173b8:	ldr	r2, [sp, #84]	; 0x54
   173bc:	adds	r2, r2, r0
   173c0:	ldr	r0, [sp, #272]	; 0x110
   173c4:	adc	r7, r7, r0
   173c8:	ldr	r0, [sp, #40]	; 0x28
   173cc:	adds	r2, r2, r1
   173d0:	adc	r6, r7, r3
   173d4:	ldr	r7, [sp, #128]	; 0x80
   173d8:	eor	ip, r6, r0
   173dc:	str	r0, [fp, #-172]	; 0xffffff54
   173e0:	ldr	r0, [sp, #44]	; 0x2c
   173e4:	adds	r4, ip, r7
   173e8:	str	r0, [fp, #-176]	; 0xffffff50
   173ec:	str	r7, [fp, #-216]	; 0xffffff28
   173f0:	ldr	r7, [sp, #140]	; 0x8c
   173f4:	eor	r0, r2, r0
   173f8:	str	r7, [fp, #-212]	; 0xffffff2c
   173fc:	str	r1, [fp, #-256]	; 0xffffff00
   17400:	adc	lr, r0, r7
   17404:	eor	r1, r4, r1
   17408:	str	r3, [fp, #-252]	; 0xffffff04
   1740c:	lsl	r7, r1, #8
   17410:	eor	r3, lr, r3
   17414:	lsr	r1, r1, #24
   17418:	orr	r5, r7, r3, lsr #24
   1741c:	orr	r3, r1, r3, lsl #8
   17420:	ldr	r1, [sp, #216]	; 0xd8
   17424:	str	r3, [sp, #88]	; 0x58
   17428:	str	r5, [sp, #80]	; 0x50
   1742c:	adds	r1, r2, r1
   17430:	ldr	r2, [sp, #212]	; 0xd4
   17434:	adc	r2, r6, r2
   17438:	adds	r3, r1, r3
   1743c:	adc	r1, r2, r5
   17440:	str	r3, [sp, #84]	; 0x54
   17444:	str	r1, [sp, #92]	; 0x5c
   17448:	eor	r0, r1, r0
   1744c:	eor	r1, r3, ip
   17450:	lsl	r2, r1, #16
   17454:	lsr	r1, r1, #16
   17458:	ldr	r3, [sp, #108]	; 0x6c
   1745c:	orr	r2, r2, r0, lsr #16
   17460:	orr	r0, r1, r0, lsl #16
   17464:	ldr	r1, [sp, #20]
   17468:	str	r0, [sp, #44]	; 0x2c
   1746c:	adds	r0, r0, r4
   17470:	str	r2, [sp, #40]	; 0x28
   17474:	str	r0, [sp, #64]	; 0x40
   17478:	adc	r0, r2, lr
   1747c:	ldr	r2, [sp, #24]
   17480:	str	r0, [sp, #16]
   17484:	ldr	r0, [sp, #36]	; 0x24
   17488:	eor	r0, r1, r0
   1748c:	ldr	r1, [sp, #156]	; 0x9c
   17490:	eor	r1, r2, r1
   17494:	lsl	r2, r0, #1
   17498:	orr	r6, r2, r1, lsr #31
   1749c:	lsl	r1, r1, #1
   174a0:	ldr	r2, [sp, #100]	; 0x64
   174a4:	orr	r0, r1, r0, lsr #31
   174a8:	ldr	r1, [sp, #180]	; 0xb4
   174ac:	adds	r1, r2, r1
   174b0:	ldr	r2, [sp, #176]	; 0xb0
   174b4:	adc	r2, r3, r2
   174b8:	adds	r4, r1, r0
   174bc:	ldr	r1, [sp, #148]	; 0x94
   174c0:	adc	ip, r2, r6
   174c4:	eor	r9, ip, r1
   174c8:	str	r1, [fp, #-180]	; 0xffffff4c
   174cc:	ldr	r1, [sp, #152]	; 0x98
   174d0:	adds	r2, r9, r8
   174d4:	eor	r0, r2, r0
   174d8:	str	r2, [sp, #100]	; 0x64
   174dc:	ldr	r2, [sp, #224]	; 0xe0
   174e0:	lsl	r7, r0, #8
   174e4:	lsr	r0, r0, #24
   174e8:	str	r1, [fp, #-184]	; 0xffffff48
   174ec:	eor	r1, r4, r1
   174f0:	str	sl, [fp, #-220]	; 0xffffff24
   174f4:	str	r8, [fp, #-224]	; 0xffffff20
   174f8:	adc	r3, r1, sl
   174fc:	ldr	sl, [sp, #64]	; 0x40
   17500:	eor	r6, r3, r6
   17504:	str	r3, [sp, #108]	; 0x6c
   17508:	ldr	r3, [sp, #220]	; 0xdc
   1750c:	orr	r5, r7, r6, lsr #24
   17510:	orr	r6, r0, r6, lsl #8
   17514:	adds	r0, r4, r2
   17518:	str	r6, [sp, #148]	; 0x94
   1751c:	str	r5, [sp, #36]	; 0x24
   17520:	adc	r7, ip, r3
   17524:	adds	r6, r0, r6
   17528:	ldr	ip, [sp, #112]	; 0x70
   1752c:	adc	r0, r7, r5
   17530:	str	r6, [sp, #20]
   17534:	str	r0, [sp, #24]
   17538:	eor	r0, r0, r1
   1753c:	eor	r1, r6, r9
   17540:	ldr	r9, [sp, #16]
   17544:	lsr	r6, r1, #16
   17548:	lsl	r1, r1, #16
   1754c:	orr	r1, r1, r0, lsr #16
   17550:	orr	r4, r6, r0, lsl #16
   17554:	ldr	r0, [sp, #28]
   17558:	eor	lr, ip, r1
   1755c:	str	r1, [sp, #68]	; 0x44
   17560:	ldr	r1, [sp, #116]	; 0x74
   17564:	str	r4, [sp, #12]
   17568:	adds	r5, lr, sl
   1756c:	str	r0, [fp, #-244]	; 0xffffff0c
   17570:	eor	r7, r1, r4
   17574:	adc	r4, r7, r9
   17578:	eor	r6, r4, r0
   1757c:	ldr	r0, [sp, #32]
   17580:	str	r0, [fp, #-248]	; 0xffffff08
   17584:	eor	r0, r5, r0
   17588:	lsl	r8, r0, #8
   1758c:	lsr	r0, r0, #24
   17590:	orr	r8, r8, r6, lsr #24
   17594:	orr	r0, r0, r6, lsl #8
   17598:	adds	r6, r1, r2
   1759c:	adc	r1, ip, r3
   175a0:	adds	r2, r6, r0
   175a4:	str	r2, [sp, #112]	; 0x70
   175a8:	adc	r1, r1, r8
   175ac:	eor	r2, r2, lr
   175b0:	str	r1, [sp, #116]	; 0x74
   175b4:	eor	r1, r1, r7
   175b8:	lsl	r6, r2, #16
   175bc:	lsr	r2, r2, #16
   175c0:	ldr	r7, [sp, #124]	; 0x7c
   175c4:	orr	r3, r6, r1, lsr #16
   175c8:	orr	r1, r2, r1, lsl #16
   175cc:	ldr	r6, [sp, #52]	; 0x34
   175d0:	adds	r2, r1, r5
   175d4:	str	r1, [sp, #156]	; 0x9c
   175d8:	str	r3, [sp, #152]	; 0x98
   175dc:	adc	r1, r3, r4
   175e0:	str	r2, [sp, #128]	; 0x80
   175e4:	eor	r0, r2, r0
   175e8:	ldr	r3, [sp, #120]	; 0x78
   175ec:	str	r1, [sp, #140]	; 0x8c
   175f0:	eor	r1, r1, r8
   175f4:	lsl	r2, r1, #1
   175f8:	orr	lr, r2, r0, lsr #31
   175fc:	lsl	r0, r0, #1
   17600:	orr	r8, r0, r1, lsr #31
   17604:	ldr	r0, [sp, #80]	; 0x50
   17608:	ldr	r1, [sp, #88]	; 0x58
   1760c:	str	lr, [sp, #28]
   17610:	str	r8, [sp, #32]
   17614:	eor	r0, r9, r0
   17618:	eor	r1, sl, r1
   1761c:	lsl	r2, r0, #1
   17620:	orr	r2, r2, r1, lsr #31
   17624:	lsl	r1, r1, #1
   17628:	orr	r0, r1, r0, lsr #31
   1762c:	ldr	r1, [sp, #276]	; 0x114
   17630:	adds	r1, r3, r1
   17634:	ldr	r3, [sp, #272]	; 0x110
   17638:	adc	r3, r7, r3
   1763c:	adds	r4, r1, r0
   17640:	ldr	r1, [sp, #100]	; 0x64
   17644:	ldr	r7, [sp, #68]	; 0x44
   17648:	adc	sl, r3, r2
   1764c:	ldr	r3, [sp, #12]
   17650:	adds	r3, r3, r1
   17654:	ldr	r1, [sp, #108]	; 0x6c
   17658:	str	r3, [sp, #16]
   1765c:	adc	r9, r7, r1
   17660:	ldr	r1, [sp, #56]	; 0x38
   17664:	ldr	r7, [sp, #48]	; 0x30
   17668:	eor	r7, r7, r1
   1766c:	ldr	r1, [sp, #60]	; 0x3c
   17670:	eor	r5, r6, r1
   17674:	lsr	r6, r5, #16
   17678:	lsl	r5, r5, #16
   1767c:	orr	r5, r5, r7, lsr #16
   17680:	orr	ip, r6, r7, lsl #16
   17684:	eor	r1, sl, r5
   17688:	eor	r6, r4, ip
   1768c:	adds	r7, r1, r3
   17690:	str	r1, [sp, #108]	; 0x6c
   17694:	str	r6, [sp, #100]	; 0x64
   17698:	adc	r1, r6, r9
   1769c:	eor	r0, r7, r0
   176a0:	str	r7, [sp, #80]	; 0x50
   176a4:	lsl	r7, r0, #8
   176a8:	eor	r2, r1, r2
   176ac:	lsr	r0, r0, #24
   176b0:	str	r1, [sp, #88]	; 0x58
   176b4:	ldr	r1, [sp, #288]	; 0x120
   176b8:	orr	r6, r0, r2, lsl #8
   176bc:	ldr	r0, [sp, #292]	; 0x124
   176c0:	orr	r7, r7, r2, lsr #24
   176c4:	str	r6, [sp, #68]	; 0x44
   176c8:	str	r7, [sp, #64]	; 0x40
   176cc:	adds	r0, r4, r0
   176d0:	adc	r2, sl, r1
   176d4:	adds	r3, r0, r6
   176d8:	ldr	r0, [sp, #204]	; 0xcc
   176dc:	ldr	r1, [sp, #200]	; 0xc8
   176e0:	adc	r4, r2, r7
   176e4:	str	r3, [sp, #60]	; 0x3c
   176e8:	str	r4, [sp, #56]	; 0x38
   176ec:	adds	r0, r8, r0
   176f0:	adc	r2, lr, r1
   176f4:	adds	r0, r0, r3
   176f8:	ldr	r1, [sp, #20]
   176fc:	str	r0, [sp, #124]	; 0x7c
   17700:	adc	r0, r2, r4
   17704:	str	r0, [sp, #120]	; 0x78
   17708:	ldr	r0, [sp, #96]	; 0x60
   1770c:	adds	lr, ip, r0
   17710:	ldr	r0, [sp, #104]	; 0x68
   17714:	adc	sl, r5, r0
   17718:	ldr	r0, [sp, #72]	; 0x48
   1771c:	eor	r2, sl, r0
   17720:	ldr	r0, [sp, #76]	; 0x4c
   17724:	lsl	r4, r2, #1
   17728:	eor	r3, lr, r0
   1772c:	ldr	r0, [sp, #196]	; 0xc4
   17730:	orr	r4, r4, r3, lsr #31
   17734:	lsl	r3, r3, #1
   17738:	orr	r2, r3, r2, lsr #31
   1773c:	adds	r3, r1, r0
   17740:	ldr	r0, [sp, #192]	; 0xc0
   17744:	ldr	r1, [sp, #24]
   17748:	adc	r5, r1, r0
   1774c:	ldr	r0, [sp, #40]	; 0x28
   17750:	adds	r3, r3, r2
   17754:	adc	r5, r5, r4
   17758:	eor	r8, r0, r5
   1775c:	ldr	r0, [sp, #44]	; 0x2c
   17760:	eor	r6, r0, r3
   17764:	ldr	r0, [sp, #132]	; 0x84
   17768:	str	r0, [fp, #-208]	; 0xffffff30
   1776c:	adds	ip, r8, r0
   17770:	ldr	r0, [sp, #136]	; 0x88
   17774:	str	r0, [fp, #-204]	; 0xffffff34
   17778:	str	r2, [fp, #-240]	; 0xffffff10
   1777c:	eor	r2, ip, r2
   17780:	adc	r0, r6, r0
   17784:	str	r4, [fp, #-236]	; 0xffffff14
   17788:	lsl	r7, r2, #8
   1778c:	eor	r4, r0, r4
   17790:	lsr	r2, r2, #24
   17794:	orr	r1, r7, r4, lsr #24
   17798:	orr	r4, r2, r4, lsl #8
   1779c:	ldr	r2, [sp, #172]	; 0xac
   177a0:	str	r4, [sp, #76]	; 0x4c
   177a4:	str	r1, [sp, #72]	; 0x48
   177a8:	adds	r2, r3, r2
   177ac:	ldr	r3, [sp, #168]	; 0xa8
   177b0:	adc	r3, r5, r3
   177b4:	adds	r7, r2, r4
   177b8:	adc	r2, r3, r1
   177bc:	eor	r3, r7, r8
   177c0:	str	r7, [sp, #104]	; 0x68
   177c4:	ldr	r1, [sp, #148]	; 0x94
   177c8:	str	r2, [sp, #132]	; 0x84
   177cc:	lsl	r5, r3, #16
   177d0:	eor	r2, r2, r6
   177d4:	lsr	r3, r3, #16
   177d8:	orr	r7, r5, r2, lsr #16
   177dc:	orr	r2, r3, r2, lsl #16
   177e0:	adds	r4, r2, ip
   177e4:	str	r2, [sp, #96]	; 0x60
   177e8:	ldr	r2, [sp, #16]
   177ec:	str	r7, [sp, #48]	; 0x30
   177f0:	adc	r0, r7, r0
   177f4:	str	r0, [sp, #12]
   177f8:	ldr	r0, [sp, #36]	; 0x24
   177fc:	eor	r1, r2, r1
   17800:	ldr	r2, [sp, #176]	; 0xb0
   17804:	eor	r0, r9, r0
   17808:	lsl	r3, r0, #1
   1780c:	orr	r3, r3, r1, lsr #31
   17810:	lsl	r1, r1, #1
   17814:	orr	r0, r1, r0, lsr #31
   17818:	ldr	r1, [sp, #180]	; 0xb4
   1781c:	adds	r1, r0, r1
   17820:	adc	r5, r3, r2
   17824:	ldr	r2, [sp, #84]	; 0x54
   17828:	adds	r2, r1, r2
   1782c:	ldr	r1, [sp, #92]	; 0x5c
   17830:	adc	r9, r5, r1
   17834:	ldr	r1, [sp, #144]	; 0x90
   17838:	eor	ip, r9, r1
   1783c:	str	r1, [fp, #-164]	; 0xffffff5c
   17840:	ldr	r1, [sp, #160]	; 0xa0
   17844:	adds	r7, ip, lr
   17848:	str	r7, [sp, #84]	; 0x54
   1784c:	str	r1, [fp, #-168]	; 0xffffff58
   17850:	eor	r1, r2, r1
   17854:	str	lr, [fp, #-200]	; 0xffffff38
   17858:	str	sl, [fp, #-196]	; 0xffffff3c
   1785c:	str	r0, [fp, #-232]	; 0xffffff18
   17860:	eor	r0, r7, r0
   17864:	str	r3, [fp, #-228]	; 0xffffff1c
   17868:	ldr	lr, [sp, #12]
   1786c:	adc	r6, r1, sl
   17870:	lsl	r7, r0, #8
   17874:	lsr	r0, r0, #24
   17878:	eor	r3, r6, r3
   1787c:	str	r6, [sp, #92]	; 0x5c
   17880:	ldr	r6, [sp, #124]	; 0x7c
   17884:	orr	r7, r7, r3, lsr #24
   17888:	orr	r3, r0, r3, lsl #8
   1788c:	ldr	r0, [sp, #216]	; 0xd8
   17890:	str	r3, [sp, #52]	; 0x34
   17894:	str	r7, [sp, #44]	; 0x2c
   17898:	adds	r0, r2, r0
   1789c:	ldr	r2, [sp, #212]	; 0xd4
   178a0:	adc	r2, r9, r2
   178a4:	adds	r3, r0, r3
   178a8:	adc	r0, r2, r7
   178ac:	str	r3, [sp, #24]
   178b0:	str	r0, [sp, #36]	; 0x24
   178b4:	eor	r0, r0, r1
   178b8:	eor	r1, r3, ip
   178bc:	ldr	ip, [sp, #120]	; 0x78
   178c0:	lsr	r2, r1, #16
   178c4:	lsl	r1, r1, #16
   178c8:	orr	r5, r2, r0, lsl #16
   178cc:	orr	r8, r1, r0, lsr #16
   178d0:	ldr	r0, [sp, #28]
   178d4:	eor	r2, r6, r5
   178d8:	eor	r1, ip, r8
   178dc:	adds	r7, r1, r4
   178e0:	adc	r9, r2, lr
   178e4:	eor	r3, r9, r0
   178e8:	ldr	r0, [sp, #32]
   178ec:	eor	r0, r7, r0
   178f0:	lsl	sl, r0, #8
   178f4:	lsr	r0, r0, #24
   178f8:	orr	sl, sl, r3, lsr #24
   178fc:	orr	r0, r0, r3, lsl #8
   17900:	ldr	r3, [sp, #232]	; 0xe8
   17904:	adds	r3, r6, r3
   17908:	ldr	r6, [sp, #228]	; 0xe4
   1790c:	adc	ip, ip, r6
   17910:	adds	r3, r3, r0
   17914:	adc	r6, ip, sl
   17918:	eor	r1, r3, r1
   1791c:	str	r3, [sp, #120]	; 0x78
   17920:	lsl	r3, r1, #16
   17924:	eor	r2, r6, r2
   17928:	lsr	r1, r1, #16
   1792c:	str	r6, [sp, #124]	; 0x7c
   17930:	orr	r1, r1, r2, lsl #16
   17934:	orr	r3, r3, r2, lsr #16
   17938:	adds	r2, r1, r7
   1793c:	str	r1, [sp, #160]	; 0xa0
   17940:	str	r3, [sp, #148]	; 0x94
   17944:	ldr	r7, [sp, #116]	; 0x74
   17948:	adc	r1, r3, r9
   1794c:	str	r2, [sp, #136]	; 0x88
   17950:	eor	r0, r2, r0
   17954:	str	r1, [sp, #144]	; 0x90
   17958:	eor	r1, r1, sl
   1795c:	lsl	r2, r1, #1
   17960:	orr	sl, r2, r0, lsr #31
   17964:	lsl	r0, r0, #1
   17968:	orr	r9, r0, r1, lsr #31
   1796c:	ldr	r0, [sp, #72]	; 0x48
   17970:	ldr	r1, [sp, #76]	; 0x4c
   17974:	str	sl, [sp, #20]
   17978:	str	r9, [sp, #40]	; 0x28
   1797c:	eor	r0, lr, r0
   17980:	eor	r1, r4, r1
   17984:	lsl	r2, r0, #1
   17988:	orr	r3, r2, r1, lsr #31
   1798c:	lsl	r1, r1, #1
   17990:	ldr	r2, [sp, #112]	; 0x70
   17994:	orr	r0, r1, r0, lsr #31
   17998:	ldr	r1, [sp, #284]	; 0x11c
   1799c:	adds	r1, r2, r1
   179a0:	ldr	r2, [sp, #280]	; 0x118
   179a4:	adc	r2, r7, r2
   179a8:	adds	ip, r1, r0
   179ac:	ldr	r1, [sp, #84]	; 0x54
   179b0:	adc	r7, r2, r3
   179b4:	ldr	r2, [sp, #56]	; 0x38
   179b8:	adds	r5, r5, r1
   179bc:	ldr	r1, [sp, #92]	; 0x5c
   179c0:	str	r5, [sp, #32]
   179c4:	adc	r8, r8, r1
   179c8:	ldr	r1, [sp, #100]	; 0x64
   179cc:	eor	r6, r2, r1
   179d0:	ldr	r1, [sp, #108]	; 0x6c
   179d4:	ldr	r2, [sp, #60]	; 0x3c
   179d8:	eor	r4, r2, r1
   179dc:	lsr	r2, r4, #16
   179e0:	lsl	r4, r4, #16
   179e4:	orr	r4, r4, r6, lsr #16
   179e8:	orr	r2, r2, r6, lsl #16
   179ec:	eor	r6, r4, r7
   179f0:	eor	r1, r2, ip
   179f4:	str	r2, [fp, #-192]	; 0xffffff40
   179f8:	str	r4, [fp, #-188]	; 0xffffff44
   179fc:	str	r6, [sp, #92]	; 0x5c
   17a00:	adds	r6, r6, r5
   17a04:	str	r1, [sp, #72]	; 0x48
   17a08:	adc	r5, r1, r8
   17a0c:	eor	r0, r6, r0
   17a10:	str	r6, [sp, #100]	; 0x64
   17a14:	ldr	r1, [sp, #256]	; 0x100
   17a18:	lsl	r6, r0, #8
   17a1c:	eor	r3, r5, r3
   17a20:	lsr	r0, r0, #24
   17a24:	str	r5, [sp, #108]	; 0x6c
   17a28:	orr	r6, r6, r3, lsr #24
   17a2c:	orr	r3, r0, r3, lsl #8
   17a30:	ldr	r0, [sp, #260]	; 0x104
   17a34:	str	r3, [sp, #84]	; 0x54
   17a38:	str	r6, [sp, #76]	; 0x4c
   17a3c:	adds	r0, ip, r0
   17a40:	adc	r1, r7, r1
   17a44:	adds	r3, r0, r3
   17a48:	ldr	r0, [sp, #292]	; 0x124
   17a4c:	adc	r7, r1, r6
   17a50:	ldr	r1, [sp, #288]	; 0x120
   17a54:	str	r3, [sp, #60]	; 0x3c
   17a58:	str	r7, [sp, #56]	; 0x38
   17a5c:	adds	r0, r3, r0
   17a60:	ldr	r3, [sp, #36]	; 0x24
   17a64:	adc	r1, r7, r1
   17a68:	adds	r0, r0, r9
   17a6c:	str	r0, [sp, #116]	; 0x74
   17a70:	adc	r0, r1, sl
   17a74:	str	r0, [sp, #112]	; 0x70
   17a78:	ldr	r0, [sp, #80]	; 0x50
   17a7c:	adds	r9, r2, r0
   17a80:	ldr	r0, [sp, #88]	; 0x58
   17a84:	adc	lr, r4, r0
   17a88:	ldr	r0, [sp, #64]	; 0x40
   17a8c:	eor	r1, lr, r0
   17a90:	ldr	r0, [sp, #68]	; 0x44
   17a94:	lsl	r7, r1, #1
   17a98:	eor	r2, r9, r0
   17a9c:	ldr	r0, [sp, #268]	; 0x10c
   17aa0:	orr	r7, r7, r2, lsr #31
   17aa4:	lsl	r2, r2, #1
   17aa8:	orr	r1, r2, r1, lsr #31
   17aac:	ldr	r2, [sp, #24]
   17ab0:	adds	r2, r2, r0
   17ab4:	ldr	r0, [sp, #264]	; 0x108
   17ab8:	adc	r4, r3, r0
   17abc:	ldr	r0, [sp, #48]	; 0x30
   17ac0:	adds	sl, r2, r1
   17ac4:	adc	r4, r4, r7
   17ac8:	str	r0, [fp, #-172]	; 0xffffff54
   17acc:	eor	ip, r4, r0
   17ad0:	ldr	r0, [sp, #96]	; 0x60
   17ad4:	str	r0, [fp, #-176]	; 0xffffff50
   17ad8:	eor	r2, sl, r0
   17adc:	ldr	r0, [sp, #128]	; 0x80
   17ae0:	str	r0, [fp, #-216]	; 0xffffff28
   17ae4:	adds	r3, ip, r0
   17ae8:	ldr	r0, [sp, #140]	; 0x8c
   17aec:	str	r0, [fp, #-212]	; 0xffffff2c
   17af0:	str	r1, [fp, #-256]	; 0xffffff00
   17af4:	eor	r1, r3, r1
   17af8:	adc	r0, r2, r0
   17afc:	str	r7, [fp, #-252]	; 0xffffff04
   17b00:	lsl	r6, r1, #8
   17b04:	eor	r7, r0, r7
   17b08:	lsr	r1, r1, #24
   17b0c:	orr	r5, r1, r7, lsl #8
   17b10:	ldr	r1, [sp, #248]	; 0xf8
   17b14:	orr	r6, r6, r7, lsr #24
   17b18:	ldr	r7, [sp, #244]	; 0xf4
   17b1c:	str	r5, [sp, #88]	; 0x58
   17b20:	str	r6, [sp, #80]	; 0x50
   17b24:	adds	r1, sl, r1
   17b28:	ldr	sl, [sp, #188]	; 0xbc
   17b2c:	adc	r4, r4, r7
   17b30:	adds	r7, r1, r5
   17b34:	ldr	r5, [sp, #184]	; 0xb8
   17b38:	adc	r1, r4, r6
   17b3c:	str	r7, [sp, #96]	; 0x60
   17b40:	str	r1, [sp, #128]	; 0x80
   17b44:	eor	r1, r1, r2
   17b48:	eor	r2, r7, ip
   17b4c:	lsl	r4, r2, #16
   17b50:	lsr	r2, r2, #16
   17b54:	orr	r7, r4, r1, lsr #16
   17b58:	orr	r1, r2, r1, lsl #16
   17b5c:	ldr	r2, [sp, #32]
   17b60:	str	r1, [sp, #64]	; 0x40
   17b64:	adds	r1, r1, r3
   17b68:	str	r7, [sp, #48]	; 0x30
   17b6c:	adc	r0, r7, r0
   17b70:	str	r1, [sp, #16]
   17b74:	ldr	r1, [sp, #52]	; 0x34
   17b78:	str	r0, [sp, #12]
   17b7c:	ldr	r0, [sp, #44]	; 0x2c
   17b80:	eor	r1, r2, r1
   17b84:	eor	r0, r8, r0
   17b88:	lsl	r2, r0, #1
   17b8c:	orr	r3, r2, r1, lsr #31
   17b90:	lsl	r1, r1, #1
   17b94:	ldr	r2, [sp, #132]	; 0x84
   17b98:	orr	r0, r1, r0, lsr #31
   17b9c:	ldr	r1, [sp, #104]	; 0x68
   17ba0:	adds	r1, r1, sl
   17ba4:	adc	r2, r2, r5
   17ba8:	adds	r4, r1, r0
   17bac:	ldr	r1, [sp, #152]	; 0x98
   17bb0:	adc	r2, r2, r3
   17bb4:	eor	r8, r2, r1
   17bb8:	str	r1, [fp, #-180]	; 0xffffff4c
   17bbc:	ldr	r1, [sp, #156]	; 0x9c
   17bc0:	adds	r7, r8, r9
   17bc4:	eor	r0, r7, r0
   17bc8:	str	r7, [sp, #68]	; 0x44
   17bcc:	str	r1, [fp, #-184]	; 0xffffff48
   17bd0:	eor	r1, r4, r1
   17bd4:	str	lr, [fp, #-220]	; 0xffffff24
   17bd8:	str	r9, [fp, #-224]	; 0xffffff20
   17bdc:	adc	r6, r1, lr
   17be0:	str	r6, [sp, #104]	; 0x68
   17be4:	eor	r3, r6, r3
   17be8:	lsl	r6, r0, #8
   17bec:	lsr	r0, r0, #24
   17bf0:	orr	r7, r6, r3, lsr #24
   17bf4:	orr	r6, r0, r3, lsl #8
   17bf8:	ldr	r0, [sp, #240]	; 0xf0
   17bfc:	ldr	r3, [sp, #236]	; 0xec
   17c00:	str	r7, [sp, #44]	; 0x2c
   17c04:	str	r6, [sp, #52]	; 0x34
   17c08:	adds	r0, r4, r0
   17c0c:	adc	r2, r2, r3
   17c10:	adds	r3, r0, r6
   17c14:	adc	r0, r2, r7
   17c18:	str	r3, [sp, #28]
   17c1c:	str	r0, [sp, #32]
   17c20:	eor	r0, r0, r1
   17c24:	eor	r1, r3, r8
   17c28:	ldr	r3, [sp, #116]	; 0x74
   17c2c:	ldr	r8, [sp, #16]
   17c30:	lsr	r2, r1, #16
   17c34:	lsl	r1, r1, #16
   17c38:	orr	r7, r2, r0, lsl #16
   17c3c:	ldr	r2, [sp, #112]	; 0x70
   17c40:	orr	r1, r1, r0, lsr #16
   17c44:	ldr	r0, [sp, #20]
   17c48:	str	r7, [sp, #8]
   17c4c:	str	r1, [sp, #24]
   17c50:	eor	ip, r3, r7
   17c54:	ldr	r7, [sp, #12]
   17c58:	eor	lr, r2, r1
   17c5c:	str	r0, [fp, #-244]	; 0xffffff0c
   17c60:	adds	r6, lr, r8
   17c64:	adc	r4, ip, r7
   17c68:	eor	r1, r4, r0
   17c6c:	ldr	r0, [sp, #40]	; 0x28
   17c70:	str	r0, [fp, #-248]	; 0xffffff08
   17c74:	eor	r0, r6, r0
   17c78:	lsl	r9, r0, #8
   17c7c:	lsr	r0, r0, #24
   17c80:	orr	r9, r9, r1, lsr #24
   17c84:	orr	r0, r0, r1, lsl #8
   17c88:	adds	r1, r3, sl
   17c8c:	adc	r3, r2, r5
   17c90:	adds	r5, r1, r0
   17c94:	adc	r1, r3, r9
   17c98:	eor	r2, r5, lr
   17c9c:	str	r5, [sp, #112]	; 0x70
   17ca0:	str	r1, [sp, #116]	; 0x74
   17ca4:	lsl	r3, r2, #16
   17ca8:	eor	r1, r1, ip
   17cac:	lsr	r2, r2, #16
   17cb0:	orr	r3, r3, r1, lsr #16
   17cb4:	orr	r1, r2, r1, lsl #16
   17cb8:	adds	r2, r1, r6
   17cbc:	str	r1, [sp, #156]	; 0x9c
   17cc0:	str	r3, [sp, #152]	; 0x98
   17cc4:	ldr	r6, [sp, #124]	; 0x7c
   17cc8:	adc	r1, r3, r4
   17ccc:	str	r2, [sp, #132]	; 0x84
   17cd0:	eor	r0, r2, r0
   17cd4:	str	r1, [sp, #140]	; 0x8c
   17cd8:	eor	r1, r1, r9
   17cdc:	lsl	r2, r1, #1
   17ce0:	orr	lr, r2, r0, lsr #31
   17ce4:	lsl	r0, r0, #1
   17ce8:	orr	r9, r0, r1, lsr #31
   17cec:	ldr	r0, [sp, #80]	; 0x50
   17cf0:	ldr	r1, [sp, #88]	; 0x58
   17cf4:	str	lr, [sp, #36]	; 0x24
   17cf8:	str	r9, [sp, #40]	; 0x28
   17cfc:	eor	r0, r7, r0
   17d00:	eor	r1, r8, r1
   17d04:	lsl	r2, r0, #1
   17d08:	orr	r3, r2, r1, lsr #31
   17d0c:	lsl	r1, r1, #1
   17d10:	ldr	r2, [sp, #120]	; 0x78
   17d14:	orr	r0, r1, r0, lsr #31
   17d18:	ldr	r1, [sp, #248]	; 0xf8
   17d1c:	adds	r1, r2, r1
   17d20:	ldr	r2, [sp, #244]	; 0xf4
   17d24:	adc	r2, r6, r2
   17d28:	adds	r6, r1, r0
   17d2c:	ldr	r1, [sp, #68]	; 0x44
   17d30:	adc	sl, r2, r3
   17d34:	ldr	r2, [sp, #8]
   17d38:	adds	r4, r2, r1
   17d3c:	ldr	r1, [sp, #104]	; 0x68
   17d40:	ldr	r2, [sp, #24]
   17d44:	str	r4, [sp, #20]
   17d48:	adc	r8, r2, r1
   17d4c:	ldr	r1, [sp, #72]	; 0x48
   17d50:	ldr	r2, [sp, #56]	; 0x38
   17d54:	eor	r7, r2, r1
   17d58:	ldr	r1, [sp, #92]	; 0x5c
   17d5c:	ldr	r2, [sp, #60]	; 0x3c
   17d60:	eor	r5, r2, r1
   17d64:	lsr	r2, r5, #16
   17d68:	lsl	r5, r5, #16
   17d6c:	orr	ip, r2, r7, lsl #16
   17d70:	orr	r7, r5, r7, lsr #16
   17d74:	eor	r1, sl, r7
   17d78:	eor	r5, r6, ip
   17d7c:	adds	r2, r1, r4
   17d80:	str	r1, [sp, #72]	; 0x48
   17d84:	str	r5, [sp, #68]	; 0x44
   17d88:	adc	r1, r5, r8
   17d8c:	eor	r0, r2, r0
   17d90:	str	r2, [sp, #92]	; 0x5c
   17d94:	lsl	r5, r0, #8
   17d98:	eor	r3, r1, r3
   17d9c:	lsr	r0, r0, #24
   17da0:	str	r1, [sp, #104]	; 0x68
   17da4:	ldr	r1, [sp, #176]	; 0xb0
   17da8:	orr	r2, r0, r3, lsl #8
   17dac:	ldr	r0, [sp, #180]	; 0xb4
   17db0:	orr	r5, r5, r3, lsr #24
   17db4:	str	r2, [sp, #88]	; 0x58
   17db8:	str	r5, [sp, #80]	; 0x50
   17dbc:	adds	r0, r6, r0
   17dc0:	adc	r3, sl, r1
   17dc4:	adds	r2, r0, r2
   17dc8:	ldr	r0, [sp, #252]	; 0xfc
   17dcc:	ldr	r1, [sp, #208]	; 0xd0
   17dd0:	adc	r4, r3, r5
   17dd4:	str	r2, [sp, #60]	; 0x3c
   17dd8:	str	r4, [sp, #56]	; 0x38
   17ddc:	adds	r0, r9, r0
   17de0:	adc	r3, lr, r1
   17de4:	adds	r0, r0, r2
   17de8:	ldr	r1, [sp, #28]
   17dec:	str	r0, [sp, #124]	; 0x7c
   17df0:	adc	r0, r3, r4
   17df4:	str	r0, [sp, #24]
   17df8:	ldr	r0, [sp, #100]	; 0x64
   17dfc:	adds	r4, ip, r0
   17e00:	ldr	r0, [sp, #108]	; 0x6c
   17e04:	adc	r5, r7, r0
   17e08:	ldr	r0, [sp, #76]	; 0x4c
   17e0c:	eor	r2, r5, r0
   17e10:	ldr	r0, [sp, #84]	; 0x54
   17e14:	lsl	r7, r2, #1
   17e18:	eor	r3, r4, r0
   17e1c:	ldr	r0, [sp, #224]	; 0xe0
   17e20:	orr	r7, r7, r3, lsr #31
   17e24:	lsl	r3, r3, #1
   17e28:	orr	r2, r3, r2, lsr #31
   17e2c:	adds	r3, r1, r0
   17e30:	ldr	r0, [sp, #220]	; 0xdc
   17e34:	ldr	r1, [sp, #32]
   17e38:	adc	r6, r1, r0
   17e3c:	ldr	r0, [sp, #48]	; 0x30
   17e40:	adds	r3, r3, r2
   17e44:	adc	ip, r6, r7
   17e48:	eor	lr, r0, ip
   17e4c:	ldr	r0, [sp, #64]	; 0x40
   17e50:	eor	r9, r0, r3
   17e54:	ldr	r0, [sp, #136]	; 0x88
   17e58:	str	r0, [fp, #-208]	; 0xffffff30
   17e5c:	adds	sl, lr, r0
   17e60:	ldr	r0, [sp, #144]	; 0x90
   17e64:	str	r0, [fp, #-204]	; 0xffffff34
   17e68:	str	r2, [fp, #-240]	; 0xffffff10
   17e6c:	eor	r2, sl, r2
   17e70:	adc	r0, r9, r0
   17e74:	str	r7, [fp, #-236]	; 0xffffff14
   17e78:	lsl	r6, r2, #8
   17e7c:	eor	r7, r0, r7
   17e80:	lsr	r2, r2, #24
   17e84:	orr	r1, r2, r7, lsl #8
   17e88:	ldr	r2, [sp, #216]	; 0xd8
   17e8c:	orr	r6, r6, r7, lsr #24
   17e90:	str	r6, [sp, #84]	; 0x54
   17e94:	str	r1, [sp, #100]	; 0x64
   17e98:	adds	r2, r3, r2
   17e9c:	ldr	r3, [sp, #212]	; 0xd4
   17ea0:	adc	r3, ip, r3
   17ea4:	adds	r7, r2, r1
   17ea8:	ldr	r1, [sp, #52]	; 0x34
   17eac:	adc	r2, r3, r6
   17eb0:	eor	r3, r7, lr
   17eb4:	str	r7, [sp, #108]	; 0x6c
   17eb8:	str	r2, [sp, #120]	; 0x78
   17ebc:	lsl	r6, r3, #16
   17ec0:	eor	r2, r2, r9
   17ec4:	lsr	r3, r3, #16
   17ec8:	orr	r7, r6, r2, lsr #16
   17ecc:	orr	r2, r3, r2, lsl #16
   17ed0:	ldr	r3, [sp, #96]	; 0x60
   17ed4:	adds	ip, r2, sl
   17ed8:	str	r2, [sp, #64]	; 0x40
   17edc:	ldr	r2, [sp, #20]
   17ee0:	str	r7, [sp, #48]	; 0x30
   17ee4:	adc	lr, r7, r0
   17ee8:	ldr	r0, [sp, #44]	; 0x2c
   17eec:	str	ip, [sp, #16]
   17ef0:	eor	r1, r2, r1
   17ef4:	eor	r0, r8, r0
   17ef8:	lsl	r2, r0, #1
   17efc:	orr	r6, r2, r1, lsr #31
   17f00:	lsl	r1, r1, #1
   17f04:	ldr	r2, [sp, #168]	; 0xa8
   17f08:	orr	r0, r1, r0, lsr #31
   17f0c:	ldr	r1, [sp, #172]	; 0xac
   17f10:	adds	r1, r0, r1
   17f14:	adc	r2, r6, r2
   17f18:	adds	r3, r1, r3
   17f1c:	ldr	r1, [sp, #128]	; 0x80
   17f20:	adc	r8, r2, r1
   17f24:	ldr	r1, [sp, #148]	; 0x94
   17f28:	eor	sl, r8, r1
   17f2c:	str	r1, [fp, #-164]	; 0xffffff5c
   17f30:	ldr	r1, [sp, #160]	; 0xa0
   17f34:	adds	r2, sl, r4
   17f38:	str	r2, [sp, #76]	; 0x4c
   17f3c:	str	r1, [fp, #-168]	; 0xffffff58
   17f40:	eor	r1, r3, r1
   17f44:	str	r4, [fp, #-200]	; 0xffffff38
   17f48:	str	r5, [fp, #-196]	; 0xffffff3c
   17f4c:	str	r0, [fp, #-232]	; 0xffffff18
   17f50:	eor	r0, r2, r0
   17f54:	str	r6, [fp, #-228]	; 0xffffff1c
   17f58:	ldr	r2, [sp, #192]	; 0xc0
   17f5c:	adc	r7, r1, r5
   17f60:	eor	r5, r7, r6
   17f64:	lsl	r6, r0, #8
   17f68:	lsr	r0, r0, #24
   17f6c:	str	r7, [sp, #96]	; 0x60
   17f70:	orr	r7, r0, r5, lsl #8
   17f74:	ldr	r0, [sp, #196]	; 0xc4
   17f78:	orr	r6, r6, r5, lsr #24
   17f7c:	str	r6, [sp, #44]	; 0x2c
   17f80:	str	r7, [sp, #52]	; 0x34
   17f84:	adds	r0, r3, r0
   17f88:	adc	r3, r8, r2
   17f8c:	adds	r2, r0, r7
   17f90:	adc	r0, r3, r6
   17f94:	ldr	r6, [sp, #24]
   17f98:	str	r2, [sp, #28]
   17f9c:	eor	r3, r2, sl
   17fa0:	ldr	r2, [sp, #124]	; 0x7c
   17fa4:	str	r0, [sp, #32]
   17fa8:	eor	r0, r0, r1
   17fac:	lsr	r1, r3, #16
   17fb0:	lsl	r3, r3, #16
   17fb4:	orr	r4, r3, r0, lsr #16
   17fb8:	orr	r7, r1, r0, lsl #16
   17fbc:	ldr	r0, [sp, #36]	; 0x24
   17fc0:	eor	r8, r6, r4
   17fc4:	eor	r3, r2, r7
   17fc8:	adds	sl, r8, ip
   17fcc:	adc	ip, r3, lr
   17fd0:	eor	r1, ip, r0
   17fd4:	ldr	r0, [sp, #40]	; 0x28
   17fd8:	eor	r0, sl, r0
   17fdc:	lsl	r5, r0, #8
   17fe0:	lsr	r0, r0, #24
   17fe4:	orr	r5, r5, r1, lsr #24
   17fe8:	orr	r0, r0, r1, lsl #8
   17fec:	ldr	r1, [sp, #284]	; 0x11c
   17ff0:	adds	r1, r2, r1
   17ff4:	ldr	r2, [sp, #280]	; 0x118
   17ff8:	adc	r2, r6, r2
   17ffc:	adds	r6, r1, r0
   18000:	adc	r1, r2, r5
   18004:	eor	r2, r6, r8
   18008:	str	r6, [sp, #124]	; 0x7c
   1800c:	ldr	r6, [sp, #116]	; 0x74
   18010:	str	r1, [sp, #128]	; 0x80
   18014:	eor	r1, r1, r3
   18018:	lsl	r3, r2, #16
   1801c:	lsr	r2, r2, #16
   18020:	orr	r3, r3, r1, lsr #16
   18024:	orr	r1, r2, r1, lsl #16
   18028:	adds	r2, r1, sl
   1802c:	str	r1, [sp, #160]	; 0xa0
   18030:	str	r3, [sp, #148]	; 0x94
   18034:	adc	r1, r3, ip
   18038:	str	r2, [sp, #136]	; 0x88
   1803c:	eor	r0, r2, r0
   18040:	ldr	r3, [sp, #112]	; 0x70
   18044:	str	r1, [sp, #144]	; 0x90
   18048:	eor	r1, r1, r5
   1804c:	lsl	r2, r1, #1
   18050:	orr	r9, r2, r0, lsr #31
   18054:	lsl	r0, r0, #1
   18058:	ldr	r2, [sp, #16]
   1805c:	orr	r8, r0, r1, lsr #31
   18060:	ldr	r0, [sp, #84]	; 0x54
   18064:	ldr	r1, [sp, #100]	; 0x64
   18068:	str	r9, [sp, #36]	; 0x24
   1806c:	str	r8, [sp, #40]	; 0x28
   18070:	eor	r0, lr, r0
   18074:	eor	r1, r2, r1
   18078:	lsl	r2, r0, #1
   1807c:	orr	r2, r2, r1, lsr #31
   18080:	lsl	r1, r1, #1
   18084:	orr	ip, r1, r0, lsr #31
   18088:	ldr	r1, [sp, #276]	; 0x114
   1808c:	ldr	r0, [sp, #76]	; 0x4c
   18090:	adds	r1, r3, r1
   18094:	ldr	r3, [sp, #272]	; 0x110
   18098:	adc	r3, r6, r3
   1809c:	adds	r5, r1, ip
   180a0:	ldr	r1, [sp, #96]	; 0x60
   180a4:	adc	lr, r3, r2
   180a8:	adds	r0, r7, r0
   180ac:	ldr	r3, [sp, #56]	; 0x38
   180b0:	str	r0, [sp, #24]
   180b4:	adc	sl, r4, r1
   180b8:	ldr	r1, [sp, #68]	; 0x44
   180bc:	eor	r7, r3, r1
   180c0:	ldr	r1, [sp, #72]	; 0x48
   180c4:	ldr	r3, [sp, #60]	; 0x3c
   180c8:	eor	r3, r3, r1
   180cc:	lsr	r6, r3, #16
   180d0:	lsl	r3, r3, #16
   180d4:	orr	r3, r3, r7, lsr #16
   180d8:	orr	r6, r6, r7, lsl #16
   180dc:	eor	r1, r3, lr
   180e0:	eor	r7, r6, r5
   180e4:	str	r3, [fp, #-188]	; 0xffffff44
   180e8:	str	r6, [fp, #-192]	; 0xffffff40
   180ec:	str	r1, [sp, #84]	; 0x54
   180f0:	adds	r1, r1, r0
   180f4:	str	r7, [sp, #76]	; 0x4c
   180f8:	adc	r7, r7, sl
   180fc:	eor	r0, r1, ip
   18100:	str	r1, [sp, #112]	; 0x70
   18104:	ldr	r1, [sp, #228]	; 0xe4
   18108:	str	r7, [sp, #116]	; 0x74
   1810c:	eor	r2, r7, r2
   18110:	lsl	r7, r0, #8
   18114:	lsr	r0, r0, #24
   18118:	orr	r4, r0, r2, lsl #8
   1811c:	ldr	r0, [sp, #232]	; 0xe8
   18120:	orr	r7, r7, r2, lsr #24
   18124:	str	r7, [sp, #96]	; 0x60
   18128:	str	r4, [sp, #100]	; 0x64
   1812c:	adds	r0, r5, r0
   18130:	adc	r2, lr, r1
   18134:	adds	r1, r0, r4
   18138:	ldr	r0, [sp, #224]	; 0xe0
   1813c:	adc	r2, r2, r7
   18140:	str	r1, [sp, #72]	; 0x48
   18144:	str	r2, [sp, #68]	; 0x44
   18148:	adds	r0, r1, r0
   1814c:	ldr	r1, [sp, #220]	; 0xdc
   18150:	adc	r2, r2, r1
   18154:	adds	r0, r0, r8
   18158:	ldr	r1, [sp, #28]
   1815c:	str	r0, [sp, #224]	; 0xe0
   18160:	adc	r0, r2, r9
   18164:	str	r0, [sp, #220]	; 0xdc
   18168:	ldr	r0, [sp, #92]	; 0x5c
   1816c:	adds	r8, r6, r0
   18170:	ldr	r0, [sp, #104]	; 0x68
   18174:	adc	r9, r3, r0
   18178:	ldr	r0, [sp, #80]	; 0x50
   1817c:	eor	r2, r9, r0
   18180:	ldr	r0, [sp, #88]	; 0x58
   18184:	lsl	r7, r2, #1
   18188:	eor	r3, r8, r0
   1818c:	ldr	r0, [sp, #260]	; 0x104
   18190:	orr	r7, r7, r3, lsr #31
   18194:	lsl	r3, r3, #1
   18198:	orr	r2, r3, r2, lsr #31
   1819c:	adds	r3, r1, r0
   181a0:	ldr	r0, [sp, #256]	; 0x100
   181a4:	ldr	r1, [sp, #32]
   181a8:	adc	r6, r1, r0
   181ac:	ldr	r0, [sp, #48]	; 0x30
   181b0:	adds	r3, r3, r2
   181b4:	ldr	r1, [sp, #132]	; 0x84
   181b8:	adc	r5, r6, r7
   181bc:	eor	r6, r5, r0
   181c0:	str	r0, [fp, #-172]	; 0xffffff54
   181c4:	ldr	r0, [sp, #64]	; 0x40
   181c8:	adds	lr, r6, r1
   181cc:	str	r0, [fp, #-176]	; 0xffffff50
   181d0:	str	r1, [fp, #-216]	; 0xffffff28
   181d4:	ldr	r1, [sp, #140]	; 0x8c
   181d8:	eor	ip, r3, r0
   181dc:	str	r1, [fp, #-212]	; 0xffffff2c
   181e0:	str	r2, [fp, #-256]	; 0xffffff00
   181e4:	eor	r2, lr, r2
   181e8:	adc	r1, ip, r1
   181ec:	str	r7, [fp, #-252]	; 0xffffff04
   181f0:	lsl	r4, r2, #8
   181f4:	eor	r7, r1, r7
   181f8:	lsr	r2, r2, #24
   181fc:	orr	r0, r4, r7, lsr #24
   18200:	orr	r4, r2, r7, lsl #8
   18204:	ldr	r2, [sp, #204]	; 0xcc
   18208:	ldr	r7, [sp, #120]	; 0x78
   1820c:	str	r4, [sp, #64]	; 0x40
   18210:	str	r0, [sp, #60]	; 0x3c
   18214:	adds	r2, r3, r2
   18218:	ldr	r3, [sp, #200]	; 0xc8
   1821c:	adc	r3, r5, r3
   18220:	adds	r4, r2, r4
   18224:	adc	r2, r3, r0
   18228:	str	r4, [sp, #132]	; 0x84
   1822c:	str	r2, [sp, #140]	; 0x8c
   18230:	eor	r0, r2, ip
   18234:	eor	r2, r4, r6
   18238:	lsl	r3, r2, #16
   1823c:	lsr	r2, r2, #16
   18240:	orr	r3, r3, r0, lsr #16
   18244:	orr	r0, r2, r0, lsl #16
   18248:	ldr	r2, [sp, #24]
   1824c:	adds	lr, r0, lr
   18250:	str	r0, [sp, #104]	; 0x68
   18254:	ldr	r0, [sp, #44]	; 0x2c
   18258:	str	r3, [sp, #92]	; 0x5c
   1825c:	adc	ip, r3, r1
   18260:	ldr	r1, [sp, #52]	; 0x34
   18264:	str	lr, [sp, #32]
   18268:	eor	r0, sl, r0
   1826c:	eor	r1, r2, r1
   18270:	lsl	r2, r0, #1
   18274:	orr	r3, r2, r1, lsr #31
   18278:	lsl	r1, r1, #1
   1827c:	ldr	r2, [sp, #108]	; 0x6c
   18280:	orr	r0, r1, r0, lsr #31
   18284:	ldr	r1, [sp, #240]	; 0xf0
   18288:	adds	r1, r2, r1
   1828c:	ldr	r2, [sp, #236]	; 0xec
   18290:	adc	r2, r7, r2
   18294:	adds	r1, r1, r0
   18298:	adc	r4, r2, r3
   1829c:	ldr	r2, [sp, #152]	; 0x98
   182a0:	eor	r6, r4, r2
   182a4:	str	r2, [fp, #-180]	; 0xffffff4c
   182a8:	ldr	r2, [sp, #156]	; 0x9c
   182ac:	adds	r7, r6, r8
   182b0:	eor	r0, r7, r0
   182b4:	str	r7, [sp, #44]	; 0x2c
   182b8:	str	r2, [fp, #-184]	; 0xffffff48
   182bc:	eor	r2, r1, r2
   182c0:	str	r9, [fp, #-220]	; 0xffffff24
   182c4:	str	r8, [fp, #-224]	; 0xffffff20
   182c8:	adc	r5, r2, r9
   182cc:	str	r5, [sp, #48]	; 0x30
   182d0:	eor	r3, r5, r3
   182d4:	lsl	r5, r0, #8
   182d8:	lsr	r0, r0, #24
   182dc:	orr	r7, r5, r3, lsr #24
   182e0:	orr	r3, r0, r3, lsl #8
   182e4:	ldr	r0, [sp, #268]	; 0x10c
   182e8:	str	r7, [sp, #80]	; 0x50
   182ec:	str	r3, [sp, #88]	; 0x58
   182f0:	adds	r0, r1, r0
   182f4:	ldr	r1, [sp, #264]	; 0x108
   182f8:	adc	r1, r4, r1
   182fc:	adds	r0, r0, r3
   18300:	adc	r1, r1, r7
   18304:	str	r0, [sp, #52]	; 0x34
   18308:	str	r1, [sp, #56]	; 0x38
   1830c:	eor	r1, r1, r2
   18310:	eor	r2, r0, r6
   18314:	ldr	r6, [sp, #224]	; 0xe0
   18318:	lsr	r0, r2, #16
   1831c:	lsl	r2, r2, #16
   18320:	orr	sl, r0, r1, lsl #16
   18324:	orr	r9, r2, r1, lsr #16
   18328:	ldr	r1, [sp, #220]	; 0xdc
   1832c:	ldr	r0, [sp, #36]	; 0x24
   18330:	eor	r4, r6, sl
   18334:	eor	r2, r1, r9
   18338:	str	r0, [fp, #-244]	; 0xffffff0c
   1833c:	adds	r8, r2, lr
   18340:	adc	lr, r4, ip
   18344:	eor	r7, lr, r0
   18348:	ldr	r0, [sp, #40]	; 0x28
   1834c:	eor	r5, r8, r0
   18350:	str	r0, [fp, #-248]	; 0xffffff08
   18354:	ldr	r0, [sp, #252]	; 0xfc
   18358:	lsl	r3, r5, #8
   1835c:	lsr	r5, r5, #24
   18360:	orr	r3, r3, r7, lsr #24
   18364:	orr	r5, r5, r7, lsl #8
   18368:	adds	r7, r6, r0
   1836c:	ldr	r0, [sp, #208]	; 0xd0
   18370:	adc	r0, r1, r0
   18374:	adds	r6, r7, r5
   18378:	ldr	r1, [sp, #64]	; 0x40
   1837c:	adc	r0, r0, r3
   18380:	eor	r2, r6, r2
   18384:	str	r6, [sp, #152]	; 0x98
   18388:	ldr	r6, [sp, #68]	; 0x44
   1838c:	str	r0, [sp, #156]	; 0x9c
   18390:	eor	r0, r0, r4
   18394:	lsl	r4, r2, #16
   18398:	lsr	r2, r2, #16
   1839c:	orr	r7, r4, r0, lsr #16
   183a0:	orr	r0, r2, r0, lsl #16
   183a4:	ldr	r4, [sp, #124]	; 0x7c
   183a8:	adds	r2, r0, r8
   183ac:	str	r0, [sp, #220]	; 0xdc
   183b0:	str	r7, [sp, #208]	; 0xd0
   183b4:	adc	r0, r7, lr
   183b8:	str	r2, [sp, #224]	; 0xe0
   183bc:	eor	r2, r2, r5
   183c0:	ldr	r5, [sp, #128]	; 0x80
   183c4:	str	r0, [sp, #252]	; 0xfc
   183c8:	eor	r0, r0, r3
   183cc:	lsl	r3, r0, #1
   183d0:	orr	r3, r3, r2, lsr #31
   183d4:	lsl	r2, r2, #1
   183d8:	orr	r2, r2, r0, lsr #31
   183dc:	ldr	r0, [sp, #180]	; 0xb4
   183e0:	str	r3, [sp, #108]	; 0x6c
   183e4:	str	r2, [sp, #120]	; 0x78
   183e8:	adds	lr, r2, r0
   183ec:	ldr	r0, [sp, #176]	; 0xb0
   183f0:	ldr	r2, [sp, #32]
   183f4:	adc	r8, r3, r0
   183f8:	ldr	r0, [sp, #60]	; 0x3c
   183fc:	eor	r2, r2, r1
   18400:	ldr	r1, [sp, #44]	; 0x2c
   18404:	eor	r0, ip, r0
   18408:	lsl	r3, r0, #1
   1840c:	orr	r3, r3, r2, lsr #31
   18410:	lsl	r2, r2, #1
   18414:	orr	r0, r2, r0, lsr #31
   18418:	ldr	r2, [sp, #260]	; 0x104
   1841c:	adds	r2, r4, r2
   18420:	ldr	r4, [sp, #256]	; 0x100
   18424:	adc	r5, r5, r4
   18428:	adds	r2, r2, r0
   1842c:	ldr	r4, [sp, #72]	; 0x48
   18430:	adc	r7, r5, r3
   18434:	adds	sl, sl, r1
   18438:	ldr	r1, [sp, #48]	; 0x30
   1843c:	str	sl, [sp, #40]	; 0x28
   18440:	adc	r9, r9, r1
   18444:	ldr	r1, [sp, #76]	; 0x4c
   18448:	eor	ip, r6, r1
   1844c:	ldr	r1, [sp, #84]	; 0x54
   18450:	eor	r1, r4, r1
   18454:	lsr	r4, r1, #16
   18458:	lsl	r1, r1, #16
   1845c:	orr	r1, r1, ip, lsr #16
   18460:	orr	r4, r4, ip, lsl #16
   18464:	eor	r6, r7, r1
   18468:	eor	r5, r2, r4
   1846c:	str	r6, [sp, #84]	; 0x54
   18470:	adds	r6, r6, sl
   18474:	str	r5, [sp, #76]	; 0x4c
   18478:	adc	r5, r5, r9
   1847c:	eor	r0, r6, r0
   18480:	str	r6, [sp, #124]	; 0x7c
   18484:	str	r5, [sp, #128]	; 0x80
   18488:	eor	r3, r5, r3
   1848c:	lsl	r5, r0, #8
   18490:	lsr	r0, r0, #24
   18494:	orr	r6, r5, r3, lsr #24
   18498:	orr	r3, r0, r3, lsl #8
   1849c:	ldr	r0, [sp, #276]	; 0x114
   184a0:	str	r3, [sp, #72]	; 0x48
   184a4:	str	r6, [sp, #68]	; 0x44
   184a8:	adds	r0, r2, r0
   184ac:	ldr	r2, [sp, #272]	; 0x110
   184b0:	adc	r2, r7, r2
   184b4:	adds	r0, r0, r3
   184b8:	ldr	r7, [sp, #136]	; 0x88
   184bc:	adc	r2, r2, r6
   184c0:	str	r0, [sp, #64]	; 0x40
   184c4:	adds	r0, lr, r0
   184c8:	str	r0, [sp, #48]	; 0x30
   184cc:	adc	r0, r8, r2
   184d0:	str	r2, [sp, #60]	; 0x3c
   184d4:	str	r0, [sp, #44]	; 0x2c
   184d8:	ldr	r0, [sp, #112]	; 0x70
   184dc:	str	r7, [fp, #-208]	; 0xffffff30
   184e0:	adds	r8, r4, r0
   184e4:	ldr	r0, [sp, #116]	; 0x74
   184e8:	adc	sl, r1, r0
   184ec:	ldr	r0, [sp, #96]	; 0x60
   184f0:	ldr	r1, [sp, #52]	; 0x34
   184f4:	eor	r2, sl, r0
   184f8:	ldr	r0, [sp, #100]	; 0x64
   184fc:	lsl	r4, r2, #1
   18500:	eor	r5, r8, r0
   18504:	ldr	r0, [sp, #284]	; 0x11c
   18508:	orr	r4, r4, r5, lsr #31
   1850c:	lsl	r5, r5, #1
   18510:	orr	r2, r5, r2, lsr #31
   18514:	adds	r5, r1, r0
   18518:	ldr	r0, [sp, #280]	; 0x118
   1851c:	ldr	r1, [sp, #56]	; 0x38
   18520:	adc	r1, r1, r0
   18524:	ldr	r0, [sp, #92]	; 0x5c
   18528:	adds	r5, r5, r2
   1852c:	adc	r1, r1, r4
   18530:	eor	r3, r0, r1
   18534:	ldr	r0, [sp, #104]	; 0x68
   18538:	adds	lr, r3, r7
   1853c:	ldr	r7, [sp, #144]	; 0x90
   18540:	eor	r0, r0, r5
   18544:	str	r7, [fp, #-204]	; 0xffffff34
   18548:	str	r2, [fp, #-240]	; 0xffffff10
   1854c:	adc	ip, r0, r7
   18550:	eor	r2, lr, r2
   18554:	str	r4, [fp, #-236]	; 0xffffff14
   18558:	lsl	r7, r2, #8
   1855c:	eor	r4, ip, r4
   18560:	lsr	r2, r2, #24
   18564:	orr	r6, r2, r4, lsl #8
   18568:	ldr	r2, [sp, #204]	; 0xcc
   1856c:	orr	r7, r7, r4, lsr #24
   18570:	ldr	r4, [sp, #200]	; 0xc8
   18574:	str	r7, [sp, #176]	; 0xb0
   18578:	str	r6, [sp, #180]	; 0xb4
   1857c:	adds	r2, r5, r2
   18580:	ldr	r5, [sp, #160]	; 0xa0
   18584:	adc	r1, r1, r4
   18588:	adds	r2, r2, r6
   1858c:	adc	r1, r1, r7
   18590:	str	r2, [sp, #256]	; 0x100
   18594:	ldr	r7, [sp, #132]	; 0x84
   18598:	str	r1, [sp, #260]	; 0x104
   1859c:	eor	r0, r1, r0
   185a0:	eor	r1, r2, r3
   185a4:	ldr	r3, [sp, #264]	; 0x108
   185a8:	lsl	r2, r1, #16
   185ac:	lsr	r1, r1, #16
   185b0:	str	r5, [fp, #-168]	; 0xffffff58
   185b4:	orr	r2, r2, r0, lsr #16
   185b8:	orr	r0, r1, r0, lsl #16
   185bc:	ldr	r1, [sp, #88]	; 0x58
   185c0:	adds	lr, r0, lr
   185c4:	str	r0, [sp, #284]	; 0x11c
   185c8:	ldr	r0, [sp, #80]	; 0x50
   185cc:	str	r2, [sp, #280]	; 0x118
   185d0:	adc	ip, r2, ip
   185d4:	ldr	r2, [sp, #40]	; 0x28
   185d8:	str	lr, [sp, #144]	; 0x90
   185dc:	str	ip, [sp, #136]	; 0x88
   185e0:	eor	r0, r9, r0
   185e4:	eor	r1, r2, r1
   185e8:	lsl	r2, r0, #1
   185ec:	orr	r2, r2, r1, lsr #31
   185f0:	lsl	r1, r1, #1
   185f4:	orr	r0, r1, r0, lsr #31
   185f8:	ldr	r1, [sp, #268]	; 0x10c
   185fc:	adds	r1, r0, r1
   18600:	adc	r3, r2, r3
   18604:	adds	r1, r1, r7
   18608:	ldr	r7, [sp, #140]	; 0x8c
   1860c:	eor	r5, r1, r5
   18610:	adc	r3, r3, r7
   18614:	ldr	r7, [sp, #148]	; 0x94
   18618:	str	r7, [fp, #-164]	; 0xffffff5c
   1861c:	eor	r7, r3, r7
   18620:	str	r8, [fp, #-200]	; 0xffffff38
   18624:	str	sl, [fp, #-196]	; 0xffffff3c
   18628:	str	r0, [fp, #-232]	; 0xffffff18
   1862c:	str	r2, [fp, #-228]	; 0xffffff1c
   18630:	adds	r4, r7, r8
   18634:	ldr	r8, [sp, #44]	; 0x2c
   18638:	adc	r6, r5, sl
   1863c:	eor	r0, r4, r0
   18640:	str	r4, [sp, #148]	; 0x94
   18644:	str	r6, [sp, #160]	; 0xa0
   18648:	eor	r2, r6, r2
   1864c:	lsl	r6, r0, #8
   18650:	lsr	r0, r0, #24
   18654:	orr	r6, r6, r2, lsr #24
   18658:	orr	r2, r0, r2, lsl #8
   1865c:	ldr	r0, [sp, #172]	; 0xac
   18660:	str	r2, [sp, #204]	; 0xcc
   18664:	str	r6, [sp, #200]	; 0xc8
   18668:	adds	r0, r1, r0
   1866c:	ldr	r1, [sp, #168]	; 0xa8
   18670:	adc	r1, r3, r1
   18674:	adds	r2, r0, r2
   18678:	adc	r0, r1, r6
   1867c:	eor	r1, r2, r7
   18680:	str	r2, [sp, #272]	; 0x110
   18684:	ldr	r6, [sp, #48]	; 0x30
   18688:	str	r0, [sp, #276]	; 0x114
   1868c:	lsr	r2, r1, #16
   18690:	eor	r0, r0, r5
   18694:	lsl	r1, r1, #16
   18698:	orr	r2, r2, r0, lsl #16
   1869c:	orr	r0, r1, r0, lsr #16
   186a0:	str	r0, [sp, #172]	; 0xac
   186a4:	eor	r4, r8, r0
   186a8:	ldr	r0, [sp, #108]	; 0x6c
   186ac:	str	r2, [sp, #168]	; 0xa8
   186b0:	eor	r5, r6, r2
   186b4:	adds	r2, r4, lr
   186b8:	adc	r1, r5, ip
   186bc:	str	r2, [sp, #132]	; 0x84
   186c0:	str	r1, [sp, #140]	; 0x8c
   186c4:	eor	r1, r1, r0
   186c8:	ldr	r0, [sp, #120]	; 0x78
   186cc:	eor	r3, r2, r0
   186d0:	ldr	r0, [sp, #240]	; 0xf0
   186d4:	lsl	r2, r3, #8
   186d8:	lsr	r3, r3, #24
   186dc:	orr	r9, r3, r1, lsl #8
   186e0:	orr	sl, r2, r1, lsr #24
   186e4:	ldr	r1, [sp, #60]	; 0x3c
   186e8:	adds	r3, r6, r0
   186ec:	ldr	r0, [sp, #236]	; 0xec
   186f0:	adc	r7, r8, r0
   186f4:	ldr	r0, [sp, #76]	; 0x4c
   186f8:	adds	lr, r3, r9
   186fc:	adc	ip, r7, sl
   18700:	eor	r3, r1, r0
   18704:	ldr	r0, [sp, #84]	; 0x54
   18708:	ldr	r1, [sp, #64]	; 0x40
   1870c:	eor	r7, r1, r0
   18710:	ldr	r0, [sp, #124]	; 0x7c
   18714:	ldr	r1, [sp, #68]	; 0x44
   18718:	lsl	r6, r7, #16
   1871c:	orr	r8, r6, r3, lsr #16
   18720:	lsr	r6, r7, #16
   18724:	orr	r3, r6, r3, lsl #16
   18728:	str	r8, [fp, #-188]	; 0xffffff44
   1872c:	adds	r7, r3, r0
   18730:	ldr	r0, [sp, #128]	; 0x80
   18734:	str	r3, [fp, #-192]	; 0xffffff40
   18738:	str	r7, [fp, #-224]	; 0xffffff20
   1873c:	str	r7, [sp, #240]	; 0xf0
   18740:	adc	r2, r8, r0
   18744:	ldr	r0, [sp, #72]	; 0x48
   18748:	eor	r1, r2, r1
   1874c:	str	r2, [fp, #-220]	; 0xffffff24
   18750:	str	r2, [sp, #236]	; 0xec
   18754:	lsl	r6, r1, #1
   18758:	eor	r0, r7, r0
   1875c:	ldr	r7, [sp, #156]	; 0x9c
   18760:	orr	r6, r6, r0, lsr #31
   18764:	lsl	r0, r0, #1
   18768:	orr	r0, r0, r1, lsr #31
   1876c:	str	r6, [fp, #-252]	; 0xffffff04
   18770:	eor	r1, lr, r4
   18774:	str	r6, [sp, #268]	; 0x10c
   18778:	str	r0, [sp, #264]	; 0x108
   1877c:	str	r0, [fp, #-256]	; 0xffffff00
   18780:	ldr	r0, [sp, #208]	; 0xd0
   18784:	lsl	r2, r1, #16
   18788:	lsr	r1, r1, #16
   1878c:	str	r0, [fp, #-180]	; 0xffffff4c
   18790:	ldr	r0, [sp, #220]	; 0xdc
   18794:	str	r0, [fp, #-184]	; 0xffffff48
   18798:	ldr	r0, [sp, #224]	; 0xe0
   1879c:	str	r0, [fp, #-216]	; 0xffffff28
   187a0:	ldr	r0, [sp, #252]	; 0xfc
   187a4:	str	r0, [fp, #-212]	; 0xffffff2c
   187a8:	ldr	r0, [sp, #280]	; 0x118
   187ac:	str	r0, [fp, #-172]	; 0xffffff54
   187b0:	ldr	r0, [sp, #284]	; 0x11c
   187b4:	str	r0, [fp, #-176]	; 0xffffff50
   187b8:	eor	r0, ip, r5
   187bc:	str	ip, [fp, #-284]	; 0xfffffee4
   187c0:	str	lr, [fp, #-288]	; 0xfffffee0
   187c4:	orr	r2, r2, r0, lsr #16
   187c8:	orr	r0, r1, r0, lsl #16
   187cc:	ldr	r1, [sp, #132]	; 0x84
   187d0:	str	r0, [fp, #-168]	; 0xffffff58
   187d4:	str	r2, [fp, #-164]	; 0xffffff5c
   187d8:	adds	r0, r0, r1
   187dc:	ldr	r1, [sp, #140]	; 0x8c
   187e0:	str	r0, [fp, #-208]	; 0xffffff30
   187e4:	eor	r0, r0, r9
   187e8:	adc	r1, r2, r1
   187ec:	lsl	r2, r0, #1
   187f0:	str	r1, [fp, #-204]	; 0xffffff34
   187f4:	eor	r1, r1, sl
   187f8:	orr	r2, r2, r1, lsr #31
   187fc:	lsl	r1, r1, #1
   18800:	orr	r0, r1, r0, lsr #31
   18804:	ldr	r1, [sp, #136]	; 0x88
   18808:	str	r2, [fp, #-248]	; 0xffffff08
   1880c:	ldr	r2, [sp, #144]	; 0x90
   18810:	str	r0, [fp, #-244]	; 0xffffff0c
   18814:	ldr	r0, [sp, #176]	; 0xb0
   18818:	eor	r0, r1, r0
   1881c:	ldr	r1, [sp, #180]	; 0xb4
   18820:	eor	r1, r2, r1
   18824:	lsl	r2, r0, #1
   18828:	orr	r2, r2, r1, lsr #31
   1882c:	lsl	r1, r1, #1
   18830:	orr	r6, r1, r0, lsr #31
   18834:	ldr	r0, [sp, #248]	; 0xf8
   18838:	ldr	r1, [sp, #152]	; 0x98
   1883c:	adds	r0, r1, r0
   18840:	ldr	r1, [sp, #244]	; 0xf4
   18844:	adc	r1, r7, r1
   18848:	adds	r5, r0, r6
   1884c:	ldr	r7, [sp, #168]	; 0xa8
   18850:	adc	r4, r1, r2
   18854:	ldr	r1, [sp, #148]	; 0x94
   18858:	eor	r3, r3, r5
   1885c:	eor	r0, r8, r4
   18860:	adds	ip, r7, r1
   18864:	ldr	r1, [sp, #160]	; 0xa0
   18868:	ldr	r7, [sp, #172]	; 0xac
   1886c:	adc	lr, r7, r1
   18870:	adds	r1, r0, ip
   18874:	adc	r8, r3, lr
   18878:	eor	r6, r1, r6
   1887c:	lsl	r7, r6, #8
   18880:	eor	r2, r8, r2
   18884:	lsr	r6, r6, #24
   18888:	orr	r7, r7, r2, lsr #24
   1888c:	orr	r2, r6, r2, lsl #8
   18890:	ldr	r6, [sp, #292]	; 0x124
   18894:	adds	r5, r5, r6
   18898:	ldr	r6, [sp, #288]	; 0x120
   1889c:	adc	r4, r4, r6
   188a0:	adds	r5, r5, r2
   188a4:	adc	r4, r4, r7
   188a8:	eor	r0, r5, r0
   188ac:	lsl	r6, r0, #16
   188b0:	eor	r3, r4, r3
   188b4:	lsr	r0, r0, #16
   188b8:	orr	r0, r0, r3, lsl #16
   188bc:	orr	r6, r6, r3, lsr #16
   188c0:	ldr	r3, [sp, #256]	; 0x100
   188c4:	str	r0, [fp, #-192]	; 0xffffff40
   188c8:	adds	r0, r0, r1
   188cc:	str	r6, [fp, #-188]	; 0xffffff44
   188d0:	adc	r1, r6, r8
   188d4:	str	r0, [fp, #-200]	; 0xffffff38
   188d8:	eor	r0, r0, r2
   188dc:	ldr	r6, [sp, #220]	; 0xdc
   188e0:	str	r1, [fp, #-196]	; 0xffffff3c
   188e4:	eor	r1, r1, r7
   188e8:	lsl	r2, r0, #1
   188ec:	ldr	r7, [sp, #260]	; 0x104
   188f0:	orr	r2, r2, r1, lsr #31
   188f4:	lsl	r1, r1, #1
   188f8:	orr	r0, r1, r0, lsr #31
   188fc:	ldr	r1, [sp, #204]	; 0xcc
   18900:	str	r2, [fp, #-240]	; 0xffffff10
   18904:	str	r0, [fp, #-236]	; 0xffffff14
   18908:	ldr	r0, [sp, #200]	; 0xc8
   1890c:	str	r5, [fp, #-280]	; 0xfffffee8
   18910:	ldr	r5, [sp, #240]	; 0xf0
   18914:	str	r4, [fp, #-276]	; 0xfffffeec
   18918:	ldr	r4, [sp, #236]	; 0xec
   1891c:	eor	r1, ip, r1
   18920:	eor	r0, lr, r0
   18924:	lsl	r2, r0, #1
   18928:	orr	r2, r2, r1, lsr #31
   1892c:	lsl	r1, r1, #1
   18930:	orr	r0, r1, r0, lsr #31
   18934:	ldr	r1, [sp, #232]	; 0xe8
   18938:	adds	r1, r3, r1
   1893c:	ldr	r3, [sp, #228]	; 0xe4
   18940:	adc	r3, r7, r3
   18944:	ldr	r7, [sp, #208]	; 0xd0
   18948:	adds	r1, r1, r0
   1894c:	adc	r3, r3, r2
   18950:	eor	r6, r1, r6
   18954:	eor	r7, r3, r7
   18958:	adds	r5, r7, r5
   1895c:	adc	ip, r6, r4
   18960:	eor	r0, r5, r0
   18964:	lsl	r4, r0, #8
   18968:	eor	r2, ip, r2
   1896c:	lsr	r0, r0, #24
   18970:	orr	r4, r4, r2, lsr #24
   18974:	orr	r0, r0, r2, lsl #8
   18978:	ldr	r2, [sp, #196]	; 0xc4
   1897c:	adds	r1, r1, r2
   18980:	ldr	r2, [sp, #192]	; 0xc0
   18984:	adc	r2, r3, r2
   18988:	adds	r1, r1, r0
   1898c:	adc	r2, r2, r4
   18990:	eor	r7, r1, r7
   18994:	eor	r3, r2, r6
   18998:	lsl	r6, r7, #16
   1899c:	lsr	r7, r7, #16
   189a0:	orr	r6, r6, r3, lsr #16
   189a4:	orr	r3, r7, r3, lsl #16
   189a8:	str	r3, [fp, #-184]	; 0xffffff48
   189ac:	adds	r3, r3, r5
   189b0:	str	r6, [fp, #-180]	; 0xffffff4c
   189b4:	adc	r7, r6, ip
   189b8:	eor	r0, r3, r0
   189bc:	str	r3, [fp, #-224]	; 0xffffff20
   189c0:	ldr	r6, [sp, #264]	; 0x108
   189c4:	str	r7, [fp, #-220]	; 0xffffff24
   189c8:	eor	r7, r7, r4
   189cc:	lsl	r3, r0, #1
   189d0:	ldr	r4, [sp, #268]	; 0x10c
   189d4:	orr	r3, r3, r7, lsr #31
   189d8:	str	r3, [fp, #-232]	; 0xffffff18
   189dc:	lsl	r3, r7, #1
   189e0:	ldr	r7, [sp, #224]	; 0xe0
   189e4:	orr	r0, r3, r0, lsr #31
   189e8:	ldr	r3, [sp, #284]	; 0x11c
   189ec:	str	r0, [fp, #-228]	; 0xffffff1c
   189f0:	str	r1, [fp, #-272]	; 0xfffffef0
   189f4:	ldr	r0, [sp, #216]	; 0xd8
   189f8:	ldr	r1, [sp, #272]	; 0x110
   189fc:	str	r2, [fp, #-268]	; 0xfffffef4
   18a00:	ldr	r2, [sp, #276]	; 0x114
   18a04:	adds	r0, r1, r0
   18a08:	ldr	r1, [sp, #212]	; 0xd4
   18a0c:	adc	r1, r2, r1
   18a10:	ldr	r2, [sp, #280]	; 0x118
   18a14:	adds	r0, r0, r6
   18a18:	adc	r1, r1, r4
   18a1c:	eor	r3, r0, r3
   18a20:	eor	r2, r1, r2
   18a24:	adds	lr, r2, r7
   18a28:	ldr	r7, [sp, #252]	; 0xfc
   18a2c:	adc	ip, r3, r7
   18a30:	eor	r5, ip, r4
   18a34:	eor	r4, lr, r6
   18a38:	lsl	r6, r4, #8
   18a3c:	lsr	r4, r4, #24
   18a40:	orr	r7, r6, r5, lsr #24
   18a44:	orr	r5, r4, r5, lsl #8
   18a48:	ldr	r4, [sp, #188]	; 0xbc
   18a4c:	sub	r6, fp, #288	; 0x120
   18a50:	adds	r0, r0, r4
   18a54:	ldr	r4, [sp, #184]	; 0xb8
   18a58:	adc	r1, r1, r4
   18a5c:	adds	r0, r0, r5
   18a60:	adc	r1, r1, r7
   18a64:	eor	r2, r0, r2
   18a68:	lsr	r4, r2, #16
   18a6c:	eor	r3, r1, r3
   18a70:	lsl	r2, r2, #16
   18a74:	orr	r4, r4, r3, lsl #16
   18a78:	orr	r2, r2, r3, lsr #16
   18a7c:	adds	r3, r4, lr
   18a80:	str	r2, [fp, #-172]	; 0xffffff54
   18a84:	str	r4, [fp, #-176]	; 0xffffff50
   18a88:	ldr	r4, [sp, #164]	; 0xa4
   18a8c:	str	r3, [fp, #-216]	; 0xffffff28
   18a90:	adc	r2, r2, ip
   18a94:	eor	r3, r3, r5
   18a98:	str	r2, [fp, #-212]	; 0xffffff2c
   18a9c:	eor	r2, r2, r7
   18aa0:	lsl	r7, r3, #1
   18aa4:	orr	r7, r7, r2, lsr #31
   18aa8:	lsl	r2, r2, #1
   18aac:	orr	r2, r2, r3, lsr #31
   18ab0:	str	r7, [fp, #-256]	; 0xffffff00
   18ab4:	str	r2, [fp, #-252]	; 0xffffff04
   18ab8:	str	r1, [fp, #-260]	; 0xfffffefc
   18abc:	str	r0, [fp, #-264]	; 0xfffffef8
   18ac0:	mov	r0, #0
   18ac4:	mov	r1, #64	; 0x40
   18ac8:	add	r2, r6, r0
   18acc:	add	r3, r4, r0
   18ad0:	add	r0, r0, #16
   18ad4:	vld1.64	{d16-d17}, [r2], r1
   18ad8:	vld1.64	{d18-d19}, [r3]
   18adc:	cmp	r0, #64	; 0x40
   18ae0:	vld1.64	{d20-d21}, [r2]
   18ae4:	veor	q8, q8, q9
   18ae8:	veor	q8, q8, q10
   18aec:	vst1.64	{d16-d17}, [r3]
   18af0:	bne	18ac8 <__assert_fail@plt+0x774c>
   18af4:	sub	sp, fp, #28
   18af8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18afc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18b00:	add	fp, sp, #28
   18b04:	sub	sp, sp, #68	; 0x44
   18b08:	mov	r9, sp
   18b0c:	mov	sl, r1
   18b10:	mov	r6, r0
   18b14:	vmov.i32	q8, #0	; 0x00000000
   18b18:	mov	r0, #48	; 0x30
   18b1c:	mvn	r8, #0
   18b20:	mov	r1, r9
   18b24:	cmp	sl, #0
   18b28:	vst1.64	{d16-d17}, [r1], r0
   18b2c:	add	r0, r9, #32
   18b30:	vst1.64	{d16-d17}, [r0]
   18b34:	add	r0, r9, #16
   18b38:	vst1.64	{d16-d17}, [r1]
   18b3c:	vst1.64	{d16-d17}, [r0]
   18b40:	beq	18c14 <__assert_fail@plt+0x7898>
   18b44:	ldr	r0, [r6, #228]	; 0xe4
   18b48:	cmp	r0, r2
   18b4c:	bhi	18c14 <__assert_fail@plt+0x7898>
   18b50:	mov	r0, r6
   18b54:	ldr	r1, [r0, #80]!	; 0x50
   18b58:	ldr	r2, [r0, #4]
   18b5c:	orrs	r1, r1, r2
   18b60:	bne	18c14 <__assert_fail@plt+0x7898>
   18b64:	add	ip, r6, #64	; 0x40
   18b68:	ldr	r1, [r6, #224]	; 0xe0
   18b6c:	add	lr, r6, #64	; 0x40
   18b70:	add	r4, r6, #96	; 0x60
   18b74:	mov	r8, #0
   18b78:	ldm	ip, {r2, r3, r7, ip}
   18b7c:	adds	r2, r2, r1
   18b80:	adcs	r3, r3, #0
   18b84:	adcs	r7, r7, #0
   18b88:	adc	ip, ip, #0
   18b8c:	stm	lr, {r2, r3, r7, ip}
   18b90:	mvn	r3, #0
   18b94:	ldrb	r2, [r6, #232]	; 0xe8
   18b98:	cmp	r2, #0
   18b9c:	rsb	r2, r1, #128	; 0x80
   18ba0:	strne	r3, [r6, #88]	; 0x58
   18ba4:	strne	r3, [r6, #92]	; 0x5c
   18ba8:	str	r3, [r0]
   18bac:	str	r3, [r0, #4]
   18bb0:	add	r0, r4, r1
   18bb4:	mov	r1, #0
   18bb8:	bl	11274 <memset@plt>
   18bbc:	mov	r0, r6
   18bc0:	mov	r1, r4
   18bc4:	bl	13518 <__assert_fail@plt+0x219c>
   18bc8:	mov	ip, r6
   18bcc:	mov	r1, r9
   18bd0:	ldm	ip!, {r0, r2, r3, r4, r5}
   18bd4:	stmia	r1!, {r0, r2, r3, r4, r5}
   18bd8:	ldm	ip!, {r0, r2, r3, r4, r5}
   18bdc:	stmia	r1!, {r0, r2, r3, r4, r5}
   18be0:	ldm	ip, {r0, r2, r3, r4, r5, r7}
   18be4:	stm	r1, {r0, r2, r3, r4, r5, r7}
   18be8:	mov	r0, sl
   18bec:	mov	r1, r9
   18bf0:	ldr	r2, [r6, #228]	; 0xe4
   18bf4:	bl	11124 <memcpy@plt>
   18bf8:	movw	r0, #54072	; 0xd338
   18bfc:	mov	r1, #0
   18c00:	mov	r2, #64	; 0x40
   18c04:	movt	r0, #1
   18c08:	ldr	r3, [r0]
   18c0c:	mov	r0, r9
   18c10:	blx	r3
   18c14:	mov	r0, r8
   18c18:	sub	sp, fp, #28
   18c1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18c20:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   18c24:	add	fp, sp, #24
   18c28:	sub	sp, sp, #240	; 0xf0
   18c2c:	mov	r6, r0
   18c30:	cmp	r3, #0
   18c34:	mov	r0, r3
   18c38:	mvn	r4, #0
   18c3c:	movwne	r0, #1
   18c40:	cmp	r6, #0
   18c44:	beq	18c84 <__assert_fail@plt+0x7908>
   18c48:	mov	r8, r1
   18c4c:	clz	r1, r2
   18c50:	mov	r5, r2
   18c54:	lsr	r1, r1, #5
   18c58:	ands	r0, r1, r0
   18c5c:	bne	18c84 <__assert_fail@plt+0x7908>
   18c60:	mov	r7, r3
   18c64:	ldr	r3, [fp, #12]
   18c68:	cmp	r3, #0
   18c6c:	mov	r0, r3
   18c70:	movwne	r0, #1
   18c74:	cmp	r3, #64	; 0x40
   18c78:	subls	r1, r8, #1
   18c7c:	cmpls	r1, #63	; 0x3f
   18c80:	bls	18c90 <__assert_fail@plt+0x7914>
   18c84:	mov	r0, r4
   18c88:	sub	sp, fp, #24
   18c8c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18c90:	ldr	r2, [fp, #8]
   18c94:	clz	r1, r2
   18c98:	lsr	r1, r1, #5
   18c9c:	ands	r0, r1, r0
   18ca0:	bne	18c84 <__assert_fail@plt+0x7908>
   18ca4:	mov	r0, sp
   18ca8:	mov	r1, r8
   18cac:	cmp	r3, #0
   18cb0:	beq	18cbc <__assert_fail@plt+0x7940>
   18cb4:	bl	1320c <__assert_fail@plt+0x1e90>
   18cb8:	b	18cc0 <__assert_fail@plt+0x7944>
   18cbc:	bl	1313c <__assert_fail@plt+0x1dc0>
   18cc0:	cmp	r0, #0
   18cc4:	blt	18c84 <__assert_fail@plt+0x7908>
   18cc8:	mov	r4, sp
   18ccc:	mov	r1, r5
   18cd0:	mov	r2, r7
   18cd4:	mov	r0, r4
   18cd8:	bl	13354 <__assert_fail@plt+0x1fd8>
   18cdc:	mov	r0, r4
   18ce0:	mov	r1, r6
   18ce4:	mov	r2, r8
   18ce8:	bl	18afc <__assert_fail@plt+0x7780>
   18cec:	mov	r4, #0
   18cf0:	b	18c84 <__assert_fail@plt+0x7908>
   18cf4:	b	18c20 <__assert_fail@plt+0x78a4>
   18cf8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   18cfc:	add	fp, sp, #24
   18d00:	sub	sp, sp, #248	; 0xf8
   18d04:	mov	r7, r0
   18d08:	mov	r0, #32768	; 0x8000
   18d0c:	mov	r9, r2
   18d10:	mov	r8, r1
   18d14:	bl	1be40 <__assert_fail@plt+0xaac4>
   18d18:	cmp	r0, #0
   18d1c:	beq	18d88 <__assert_fail@plt+0x7a0c>
   18d20:	mov	r4, sp
   18d24:	mov	r5, r0
   18d28:	mov	r1, r9
   18d2c:	mov	r0, r4
   18d30:	bl	1313c <__assert_fail@plt+0x1dc0>
   18d34:	mov	r6, #0
   18d38:	add	r0, r5, r6
   18d3c:	rsb	r2, r6, #32768	; 0x8000
   18d40:	mov	r1, #1
   18d44:	mov	r3, r7
   18d48:	bl	11190 <fread@plt>
   18d4c:	add	r6, r0, r6
   18d50:	cmp	r6, #32768	; 0x8000
   18d54:	beq	18d74 <__assert_fail@plt+0x79f8>
   18d58:	cmp	r0, #0
   18d5c:	beq	18d90 <__assert_fail@plt+0x7a14>
   18d60:	mov	r0, r7
   18d64:	bl	1122c <feof@plt>
   18d68:	cmp	r0, #0
   18d6c:	beq	18d38 <__assert_fail@plt+0x79bc>
   18d70:	b	18da4 <__assert_fail@plt+0x7a28>
   18d74:	mov	r0, r4
   18d78:	mov	r1, r5
   18d7c:	mov	r2, #32768	; 0x8000
   18d80:	bl	13354 <__assert_fail@plt+0x1fd8>
   18d84:	b	18d34 <__assert_fail@plt+0x79b8>
   18d88:	mvn	r4, #0
   18d8c:	b	18dd8 <__assert_fail@plt+0x7a5c>
   18d90:	mov	r0, r7
   18d94:	bl	1110c <ferror@plt>
   18d98:	mvn	r4, #0
   18d9c:	cmp	r0, #0
   18da0:	bne	18dd0 <__assert_fail@plt+0x7a54>
   18da4:	cmp	r6, #0
   18da8:	beq	18dbc <__assert_fail@plt+0x7a40>
   18dac:	mov	r0, sp
   18db0:	mov	r1, r5
   18db4:	mov	r2, r6
   18db8:	bl	13354 <__assert_fail@plt+0x1fd8>
   18dbc:	mov	r0, sp
   18dc0:	mov	r1, r8
   18dc4:	mov	r2, r9
   18dc8:	bl	18afc <__assert_fail@plt+0x7780>
   18dcc:	mov	r4, #0
   18dd0:	mov	r0, r5
   18dd4:	bl	190d0 <__assert_fail@plt+0x7d54>
   18dd8:	mov	r0, r4
   18ddc:	sub	sp, fp, #24
   18de0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   18de4:	movw	r1, #57764	; 0xe1a4
   18de8:	movt	r1, #2
   18dec:	str	r0, [r1]
   18df0:	bx	lr
   18df4:	movw	r1, #57768	; 0xe1a8
   18df8:	movt	r1, #2
   18dfc:	strb	r0, [r1]
   18e00:	bx	lr
   18e04:	push	{r4, r5, r6, sl, fp, lr}
   18e08:	add	fp, sp, #16
   18e0c:	sub	sp, sp, #8
   18e10:	movw	r0, #57724	; 0xe17c
   18e14:	movt	r0, #2
   18e18:	ldr	r0, [r0]
   18e1c:	bl	1bec0 <__assert_fail@plt+0xab44>
   18e20:	cmp	r0, #0
   18e24:	beq	18e4c <__assert_fail@plt+0x7ad0>
   18e28:	movw	r0, #57768	; 0xe1a8
   18e2c:	movt	r0, #2
   18e30:	ldrb	r0, [r0]
   18e34:	cmp	r0, #0
   18e38:	beq	18e6c <__assert_fail@plt+0x7af0>
   18e3c:	bl	11250 <__errno_location@plt>
   18e40:	ldr	r0, [r0]
   18e44:	cmp	r0, #32
   18e48:	bne	18e6c <__assert_fail@plt+0x7af0>
   18e4c:	movw	r0, #57712	; 0xe170
   18e50:	movt	r0, #2
   18e54:	ldr	r0, [r0]
   18e58:	bl	1bec0 <__assert_fail@plt+0xab44>
   18e5c:	cmp	r0, #0
   18e60:	subeq	sp, fp, #16
   18e64:	popeq	{r4, r5, r6, sl, fp, pc}
   18e68:	b	18edc <__assert_fail@plt+0x7b60>
   18e6c:	movw	r1, #54091	; 0xd34b
   18e70:	mov	r0, #0
   18e74:	mov	r2, #5
   18e78:	movt	r1, #1
   18e7c:	bl	11148 <dcgettext@plt>
   18e80:	mov	r4, r0
   18e84:	movw	r0, #57764	; 0xe1a4
   18e88:	movt	r0, #2
   18e8c:	ldr	r6, [r0]
   18e90:	bl	11250 <__errno_location@plt>
   18e94:	ldr	r5, [r0]
   18e98:	cmp	r6, #0
   18e9c:	bne	18eb8 <__assert_fail@plt+0x7b3c>
   18ea0:	movw	r2, #52014	; 0xcb2e
   18ea4:	mov	r0, #0
   18ea8:	mov	r1, r5
   18eac:	mov	r3, r4
   18eb0:	movt	r2, #1
   18eb4:	b	18ed8 <__assert_fail@plt+0x7b5c>
   18eb8:	mov	r0, r6
   18ebc:	bl	1a960 <__assert_fail@plt+0x95e4>
   18ec0:	movw	r2, #54103	; 0xd357
   18ec4:	mov	r3, r0
   18ec8:	str	r4, [sp]
   18ecc:	mov	r0, #0
   18ed0:	mov	r1, r5
   18ed4:	movt	r2, #1
   18ed8:	bl	111c0 <error@plt>
   18edc:	movw	r0, #57624	; 0xe118
   18ee0:	movt	r0, #2
   18ee4:	ldr	r0, [r0]
   18ee8:	bl	11118 <_exit@plt>
   18eec:	b	110e8 <posix_fadvise64@plt>
   18ef0:	cmp	r0, #0
   18ef4:	bxeq	lr
   18ef8:	push	{r4, sl, fp, lr}
   18efc:	add	fp, sp, #8
   18f00:	sub	sp, sp, #16
   18f04:	mov	r4, r1
   18f08:	bl	1128c <fileno@plt>
   18f0c:	mov	r1, #0
   18f10:	mov	r2, #0
   18f14:	mov	r3, #0
   18f18:	str	r1, [sp]
   18f1c:	stmib	sp, {r1, r4}
   18f20:	bl	110e8 <posix_fadvise64@plt>
   18f24:	sub	sp, fp, #8
   18f28:	pop	{r4, sl, fp, pc}
   18f2c:	push	{r4, r5, r6, sl, fp, lr}
   18f30:	add	fp, sp, #16
   18f34:	sub	sp, sp, #8
   18f38:	mov	r4, r0
   18f3c:	bl	1128c <fileno@plt>
   18f40:	cmn	r0, #1
   18f44:	ble	18fb8 <__assert_fail@plt+0x7c3c>
   18f48:	mov	r0, r4
   18f4c:	bl	111e4 <__freading@plt>
   18f50:	cmp	r0, #0
   18f54:	beq	18f80 <__assert_fail@plt+0x7c04>
   18f58:	mov	r0, r4
   18f5c:	bl	1128c <fileno@plt>
   18f60:	mov	r1, #1
   18f64:	mov	r2, #0
   18f68:	mov	r3, #0
   18f6c:	str	r1, [sp]
   18f70:	bl	11178 <lseek64@plt>
   18f74:	and	r0, r0, r1
   18f78:	cmn	r0, #1
   18f7c:	beq	18fb8 <__assert_fail@plt+0x7c3c>
   18f80:	mov	r0, r4
   18f84:	bl	18fc8 <__assert_fail@plt+0x7c4c>
   18f88:	cmp	r0, #0
   18f8c:	beq	18fb8 <__assert_fail@plt+0x7c3c>
   18f90:	bl	11250 <__errno_location@plt>
   18f94:	ldr	r6, [r0]
   18f98:	mov	r5, r0
   18f9c:	mov	r0, r4
   18fa0:	bl	112b0 <fclose@plt>
   18fa4:	cmp	r6, #0
   18fa8:	strne	r6, [r5]
   18fac:	mvnne	r0, #0
   18fb0:	sub	sp, fp, #16
   18fb4:	pop	{r4, r5, r6, sl, fp, pc}
   18fb8:	mov	r0, r4
   18fbc:	sub	sp, fp, #16
   18fc0:	pop	{r4, r5, r6, sl, fp, lr}
   18fc4:	b	112b0 <fclose@plt>
   18fc8:	push	{r4, sl, fp, lr}
   18fcc:	add	fp, sp, #8
   18fd0:	sub	sp, sp, #8
   18fd4:	mov	r4, r0
   18fd8:	cmp	r0, #0
   18fdc:	beq	18ff8 <__assert_fail@plt+0x7c7c>
   18fe0:	mov	r0, r4
   18fe4:	bl	111e4 <__freading@plt>
   18fe8:	cmp	r0, #0
   18fec:	ldrbne	r0, [r4, #1]
   18ff0:	tstne	r0, #1
   18ff4:	bne	19008 <__assert_fail@plt+0x7c8c>
   18ff8:	mov	r0, r4
   18ffc:	sub	sp, fp, #8
   19000:	pop	{r4, sl, fp, lr}
   19004:	b	110f4 <fflush@plt>
   19008:	mov	r0, #1
   1900c:	mov	r2, #0
   19010:	mov	r3, #0
   19014:	str	r0, [sp]
   19018:	mov	r0, r4
   1901c:	bl	190f8 <__assert_fail@plt+0x7d7c>
   19020:	b	18ff8 <__assert_fail@plt+0x7c7c>
   19024:	push	{r4, r5, r6, r7, fp, lr}
   19028:	add	fp, sp, #16
   1902c:	mov	r5, r1
   19030:	bl	11304 <fopen64@plt>
   19034:	mov	r4, #0
   19038:	cmp	r0, #0
   1903c:	beq	190c8 <__assert_fail@plt+0x7d4c>
   19040:	mov	r6, r0
   19044:	bl	1128c <fileno@plt>
   19048:	cmp	r0, #2
   1904c:	bhi	190a8 <__assert_fail@plt+0x7d2c>
   19050:	bl	1acd8 <__assert_fail@plt+0x995c>
   19054:	cmn	r0, #1
   19058:	ble	190b0 <__assert_fail@plt+0x7d34>
   1905c:	mov	r7, r0
   19060:	mov	r0, r6
   19064:	bl	18f2c <__assert_fail@plt+0x7bb0>
   19068:	cmp	r0, #0
   1906c:	bne	19088 <__assert_fail@plt+0x7d0c>
   19070:	mov	r0, r7
   19074:	mov	r1, r5
   19078:	bl	110ac <fdopen@plt>
   1907c:	mov	r4, r0
   19080:	cmp	r0, #0
   19084:	bne	190c8 <__assert_fail@plt+0x7d4c>
   19088:	bl	11250 <__errno_location@plt>
   1908c:	ldr	r5, [r0]
   19090:	mov	r4, r0
   19094:	mov	r0, r7
   19098:	bl	11358 <close@plt>
   1909c:	str	r5, [r4]
   190a0:	mov	r4, #0
   190a4:	b	190c8 <__assert_fail@plt+0x7d4c>
   190a8:	mov	r4, r6
   190ac:	b	190c8 <__assert_fail@plt+0x7d4c>
   190b0:	bl	11250 <__errno_location@plt>
   190b4:	ldr	r7, [r0]
   190b8:	mov	r5, r0
   190bc:	mov	r0, r6
   190c0:	bl	18f2c <__assert_fail@plt+0x7bb0>
   190c4:	str	r7, [r5]
   190c8:	mov	r0, r4
   190cc:	pop	{r4, r5, r6, r7, fp, pc}
   190d0:	push	{r4, r5, r6, sl, fp, lr}
   190d4:	add	fp, sp, #16
   190d8:	mov	r4, r0
   190dc:	bl	11250 <__errno_location@plt>
   190e0:	ldr	r6, [r0]
   190e4:	mov	r5, r0
   190e8:	mov	r0, r4
   190ec:	bl	11100 <free@plt>
   190f0:	str	r6, [r5]
   190f4:	pop	{r4, r5, r6, sl, fp, pc}
   190f8:	push	{r4, r5, r6, r7, fp, lr}
   190fc:	add	fp, sp, #16
   19100:	sub	sp, sp, #8
   19104:	mov	r4, r0
   19108:	ldr	r0, [r0, #4]
   1910c:	mov	r5, r3
   19110:	mov	r6, r2
   19114:	ldr	r1, [r4, #8]
   19118:	cmp	r1, r0
   1911c:	bne	19138 <__assert_fail@plt+0x7dbc>
   19120:	ldrd	r0, [r4, #16]
   19124:	cmp	r1, r0
   19128:	bne	19138 <__assert_fail@plt+0x7dbc>
   1912c:	ldr	r0, [r4, #36]	; 0x24
   19130:	cmp	r0, #0
   19134:	beq	19150 <__assert_fail@plt+0x7dd4>
   19138:	mov	r0, r4
   1913c:	mov	r2, r6
   19140:	mov	r3, r5
   19144:	sub	sp, fp, #16
   19148:	pop	{r4, r5, r6, r7, fp, lr}
   1914c:	b	112bc <fseeko64@plt>
   19150:	ldr	r7, [fp, #8]
   19154:	mov	r0, r4
   19158:	bl	1128c <fileno@plt>
   1915c:	mov	r2, r6
   19160:	mov	r3, r5
   19164:	str	r7, [sp]
   19168:	bl	11178 <lseek64@plt>
   1916c:	and	r2, r0, r1
   19170:	cmn	r2, #1
   19174:	beq	19190 <__assert_fail@plt+0x7e14>
   19178:	strd	r0, [r4, #80]	; 0x50
   1917c:	ldr	r0, [r4]
   19180:	bic	r0, r0, #16
   19184:	str	r0, [r4]
   19188:	mov	r0, #0
   1918c:	b	19194 <__assert_fail@plt+0x7e18>
   19190:	mvn	r0, #0
   19194:	sub	sp, fp, #16
   19198:	pop	{r4, r5, r6, r7, fp, pc}
   1919c:	push	{r4, r5, fp, lr}
   191a0:	add	fp, sp, #8
   191a4:	cmp	r0, #0
   191a8:	beq	1923c <__assert_fail@plt+0x7ec0>
   191ac:	mov	r1, #47	; 0x2f
   191b0:	mov	r4, r0
   191b4:	bl	112e0 <strrchr@plt>
   191b8:	cmp	r0, #0
   191bc:	mov	r5, r4
   191c0:	addne	r5, r0, #1
   191c4:	sub	r0, r5, r4
   191c8:	cmp	r0, #7
   191cc:	blt	19220 <__assert_fail@plt+0x7ea4>
   191d0:	movw	r1, #54166	; 0xd396
   191d4:	sub	r0, r5, #7
   191d8:	mov	r2, #7
   191dc:	movt	r1, #1
   191e0:	bl	11334 <strncmp@plt>
   191e4:	cmp	r0, #0
   191e8:	bne	19220 <__assert_fail@plt+0x7ea4>
   191ec:	movw	r1, #54174	; 0xd39e
   191f0:	mov	r0, r5
   191f4:	mov	r2, #3
   191f8:	movt	r1, #1
   191fc:	bl	11334 <strncmp@plt>
   19200:	cmp	r0, #0
   19204:	beq	19210 <__assert_fail@plt+0x7e94>
   19208:	mov	r4, r5
   1920c:	b	19220 <__assert_fail@plt+0x7ea4>
   19210:	movw	r0, #57696	; 0xe160
   19214:	add	r4, r5, #3
   19218:	movt	r0, #2
   1921c:	str	r4, [r0]
   19220:	movw	r0, #57700	; 0xe164
   19224:	movt	r0, #2
   19228:	str	r4, [r0]
   1922c:	movw	r0, #57772	; 0xe1ac
   19230:	movt	r0, #2
   19234:	str	r4, [r0]
   19238:	pop	{r4, r5, fp, pc}
   1923c:	movw	r0, #57712	; 0xe170
   19240:	movt	r0, #2
   19244:	ldr	r1, [r0]
   19248:	movw	r0, #54110	; 0xd35e
   1924c:	movt	r0, #1
   19250:	bl	11328 <fputs@plt>
   19254:	bl	11340 <abort@plt>
   19258:	push	{r4, r5, r6, sl, fp, lr}
   1925c:	add	fp, sp, #16
   19260:	mov	r4, r0
   19264:	movw	r0, #57776	; 0xe1b0
   19268:	movt	r0, #2
   1926c:	cmp	r4, #0
   19270:	moveq	r4, r0
   19274:	bl	11250 <__errno_location@plt>
   19278:	ldr	r6, [r0]
   1927c:	mov	r5, r0
   19280:	mov	r0, r4
   19284:	mov	r1, #48	; 0x30
   19288:	bl	1b4f0 <__assert_fail@plt+0xa174>
   1928c:	str	r6, [r5]
   19290:	pop	{r4, r5, r6, sl, fp, pc}
   19294:	movw	r1, #57776	; 0xe1b0
   19298:	cmp	r0, #0
   1929c:	movt	r1, #2
   192a0:	movne	r1, r0
   192a4:	ldr	r0, [r1]
   192a8:	bx	lr
   192ac:	movw	r2, #57776	; 0xe1b0
   192b0:	cmp	r0, #0
   192b4:	movt	r2, #2
   192b8:	movne	r2, r0
   192bc:	str	r1, [r2]
   192c0:	bx	lr
   192c4:	movw	r3, #57776	; 0xe1b0
   192c8:	cmp	r0, #0
   192cc:	movt	r3, #2
   192d0:	movne	r3, r0
   192d4:	ubfx	r0, r1, #5, #3
   192d8:	and	r1, r1, #31
   192dc:	add	r0, r3, r0, lsl #2
   192e0:	ldr	r3, [r0, #8]
   192e4:	eor	r2, r2, r3, lsr r1
   192e8:	and	r2, r2, #1
   192ec:	eor	r2, r3, r2, lsl r1
   192f0:	str	r2, [r0, #8]
   192f4:	mov	r0, #1
   192f8:	and	r0, r0, r3, lsr r1
   192fc:	bx	lr
   19300:	movw	r2, #57776	; 0xe1b0
   19304:	cmp	r0, #0
   19308:	movt	r2, #2
   1930c:	movne	r2, r0
   19310:	ldr	r0, [r2, #4]
   19314:	str	r1, [r2, #4]
   19318:	bx	lr
   1931c:	movw	r3, #57776	; 0xe1b0
   19320:	cmp	r0, #0
   19324:	movt	r3, #2
   19328:	movne	r3, r0
   1932c:	cmp	r1, #0
   19330:	mov	r0, #10
   19334:	cmpne	r2, #0
   19338:	str	r0, [r3]
   1933c:	bne	1934c <__assert_fail@plt+0x7fd0>
   19340:	push	{fp, lr}
   19344:	mov	fp, sp
   19348:	bl	11340 <abort@plt>
   1934c:	str	r1, [r3, #40]	; 0x28
   19350:	str	r2, [r3, #44]	; 0x2c
   19354:	bx	lr
   19358:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1935c:	add	fp, sp, #28
   19360:	sub	sp, sp, #20
   19364:	mov	r7, r0
   19368:	ldr	r0, [fp, #8]
   1936c:	movw	r5, #57776	; 0xe1b0
   19370:	mov	r8, r3
   19374:	mov	r9, r2
   19378:	mov	sl, r1
   1937c:	movt	r5, #2
   19380:	cmp	r0, #0
   19384:	movne	r5, r0
   19388:	bl	11250 <__errno_location@plt>
   1938c:	mov	r4, r0
   19390:	ldm	r5, {r0, r1}
   19394:	ldr	r2, [r5, #40]	; 0x28
   19398:	ldr	r3, [r5, #44]	; 0x2c
   1939c:	add	r5, r5, #8
   193a0:	ldr	r6, [r4]
   193a4:	stm	sp, {r0, r1, r5}
   193a8:	str	r2, [sp, #12]
   193ac:	str	r3, [sp, #16]
   193b0:	mov	r0, r7
   193b4:	mov	r1, sl
   193b8:	mov	r2, r9
   193bc:	mov	r3, r8
   193c0:	bl	193d0 <__assert_fail@plt+0x8054>
   193c4:	str	r6, [r4]
   193c8:	sub	sp, fp, #28
   193cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   193d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   193d4:	add	fp, sp, #28
   193d8:	sub	sp, sp, #156	; 0x9c
   193dc:	str	r0, [fp, #-56]	; 0xffffffc8
   193e0:	ldr	r0, [fp, #12]
   193e4:	mov	r4, r1
   193e8:	str	r3, [sp, #80]	; 0x50
   193ec:	str	r2, [fp, #-84]	; 0xffffffac
   193f0:	and	r1, r0, #4
   193f4:	str	r1, [sp, #24]
   193f8:	and	r1, r0, #1
   193fc:	str	r1, [sp, #28]
   19400:	ubfx	r7, r0, #1, #1
   19404:	bl	11184 <__ctype_get_mb_cur_max@plt>
   19408:	str	r0, [sp, #32]
   1940c:	ldr	r0, [fp, #24]
   19410:	ldr	r9, [fp, #8]
   19414:	mov	r2, #0
   19418:	mov	r1, #0
   1941c:	mov	r5, #0
   19420:	str	r2, [sp, #52]	; 0x34
   19424:	mov	r2, #1
   19428:	str	r0, [sp, #72]	; 0x48
   1942c:	ldr	r0, [fp, #20]
   19430:	str	r0, [sp, #64]	; 0x40
   19434:	mov	r0, #0
   19438:	str	r0, [sp, #92]	; 0x5c
   1943c:	mov	r0, #0
   19440:	str	r0, [fp, #-76]	; 0xffffffb4
   19444:	mov	r0, #0
   19448:	cmp	r9, #10
   1944c:	str	r1, [sp, #68]	; 0x44
   19450:	bhi	1a450 <__assert_fail@plt+0x90d4>
   19454:	add	r1, pc, #28
   19458:	ldr	ip, [fp, #-84]	; 0xffffffac
   1945c:	ldr	lr, [sp, #80]	; 0x50
   19460:	mov	r6, r4
   19464:	mov	r8, #0
   19468:	mov	r3, #1
   1946c:	mov	sl, #0
   19470:	mov	r4, r2
   19474:	ldr	pc, [r1, r9, lsl #2]
   19478:	andeq	r9, r1, r8, asr #10
   1947c:	andeq	r9, r1, r4, lsl #11
   19480:	andeq	r9, r1, r8, asr r5
   19484:	andeq	r9, r1, r0, asr #10
   19488:	andeq	r9, r1, r8, ror r5
   1948c:	ldrdeq	r9, [r1], -r0
   19490:	andeq	r9, r1, r8, ror #10
   19494:	andeq	r9, r1, r0, lsr r6
   19498:	andeq	r9, r1, r4, lsr #9
   1949c:	andeq	r9, r1, r4, lsr #9
   194a0:	andeq	r9, r1, ip, asr #9
   194a4:	movw	r0, #54256	; 0xd3f0
   194a8:	mov	r1, r9
   194ac:	movt	r0, #1
   194b0:	bl	1abb8 <__assert_fail@plt+0x983c>
   194b4:	str	r0, [sp, #64]	; 0x40
   194b8:	movw	r0, #54258	; 0xd3f2
   194bc:	mov	r1, r9
   194c0:	movt	r0, #1
   194c4:	bl	1abb8 <__assert_fail@plt+0x983c>
   194c8:	str	r0, [sp, #72]	; 0x48
   194cc:	mov	r8, #0
   194d0:	mov	sl, r7
   194d4:	tst	r7, #1
   194d8:	str	r5, [fp, #-48]	; 0xffffffd0
   194dc:	bne	19518 <__assert_fail@plt+0x819c>
   194e0:	ldr	r0, [sp, #64]	; 0x40
   194e4:	ldrb	r0, [r0]
   194e8:	cmp	r0, #0
   194ec:	beq	19518 <__assert_fail@plt+0x819c>
   194f0:	ldr	r1, [sp, #64]	; 0x40
   194f4:	mov	r8, #0
   194f8:	add	r1, r1, #1
   194fc:	cmp	r8, r6
   19500:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   19504:	strbcc	r0, [r2, r8]
   19508:	ldrb	r0, [r1, r8]
   1950c:	add	r8, r8, #1
   19510:	cmp	r0, #0
   19514:	bne	194fc <__assert_fail@plt+0x8180>
   19518:	ldr	r7, [sp, #72]	; 0x48
   1951c:	mov	r0, r7
   19520:	bl	11238 <strlen@plt>
   19524:	ldr	ip, [fp, #-84]	; 0xffffffac
   19528:	ldr	lr, [sp, #80]	; 0x50
   1952c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   19530:	str	r0, [fp, #-76]	; 0xffffffb4
   19534:	str	r7, [sp, #92]	; 0x5c
   19538:	mov	r3, #1
   1953c:	b	19630 <__assert_fail@plt+0x82b4>
   19540:	mov	r0, #1
   19544:	b	19584 <__assert_fail@plt+0x8208>
   19548:	mov	r9, #0
   1954c:	mov	r8, #0
   19550:	mov	r3, r0
   19554:	b	1962c <__assert_fail@plt+0x82b0>
   19558:	tst	r7, #1
   1955c:	bne	19584 <__assert_fail@plt+0x8208>
   19560:	mov	r3, r0
   19564:	b	195ac <__assert_fail@plt+0x8230>
   19568:	mov	r0, #1
   1956c:	mov	r8, #0
   19570:	mov	r9, #5
   19574:	b	195e4 <__assert_fail@plt+0x8268>
   19578:	mov	r3, #1
   1957c:	tst	r7, #1
   19580:	beq	195ac <__assert_fail@plt+0x8230>
   19584:	mov	r1, #1
   19588:	mov	r8, #0
   1958c:	mov	r9, #2
   19590:	mov	r3, r0
   19594:	mov	sl, #1
   19598:	str	r1, [fp, #-76]	; 0xffffffb4
   1959c:	movw	r1, #54258	; 0xd3f2
   195a0:	movt	r1, #1
   195a4:	str	r1, [sp, #92]	; 0x5c
   195a8:	b	19630 <__assert_fail@plt+0x82b4>
   195ac:	cmp	r6, #0
   195b0:	mov	r8, #1
   195b4:	mov	r9, #2
   195b8:	ldrne	r1, [fp, #-56]	; 0xffffffc8
   195bc:	movne	r0, #39	; 0x27
   195c0:	strbne	r0, [r1]
   195c4:	movw	r0, #54258	; 0xd3f2
   195c8:	movt	r0, #1
   195cc:	b	19620 <__assert_fail@plt+0x82a4>
   195d0:	mov	r9, #5
   195d4:	tst	r7, #1
   195d8:	beq	19600 <__assert_fail@plt+0x8284>
   195dc:	mov	r0, #1
   195e0:	mov	r8, #0
   195e4:	str	r0, [fp, #-76]	; 0xffffffb4
   195e8:	movw	r0, #54254	; 0xd3ee
   195ec:	mov	r3, #1
   195f0:	mov	sl, #1
   195f4:	movt	r0, #1
   195f8:	str	r0, [sp, #92]	; 0x5c
   195fc:	b	19630 <__assert_fail@plt+0x82b4>
   19600:	cmp	r6, #0
   19604:	mov	r8, #1
   19608:	mov	r3, #1
   1960c:	ldrne	r1, [fp, #-56]	; 0xffffffc8
   19610:	movne	r0, #34	; 0x22
   19614:	strbne	r0, [r1]
   19618:	movw	r0, #54254	; 0xd3ee
   1961c:	movt	r0, #1
   19620:	str	r0, [sp, #92]	; 0x5c
   19624:	mov	r0, #1
   19628:	str	r0, [fp, #-76]	; 0xffffffb4
   1962c:	mov	sl, #0
   19630:	ldr	r0, [fp, #16]
   19634:	mov	r7, #0
   19638:	str	r9, [fp, #-64]	; 0xffffffc0
   1963c:	str	sl, [fp, #-72]	; 0xffffffb8
   19640:	str	r3, [sp, #84]	; 0x54
   19644:	cmp	r0, #0
   19648:	movwne	r0, #1
   1964c:	and	r0, r0, sl
   19650:	str	r0, [fp, #-88]	; 0xffffffa8
   19654:	ldr	r0, [fp, #-76]	; 0xffffffb4
   19658:	cmp	r0, #0
   1965c:	movwne	r0, #1
   19660:	subs	r2, r9, #2
   19664:	and	r1, r0, sl
   19668:	str	r2, [fp, #-80]	; 0xffffffb0
   1966c:	and	r1, r3, r1
   19670:	str	r1, [sp, #44]	; 0x2c
   19674:	clz	r1, r2
   19678:	lsr	r1, r1, #5
   1967c:	and	r1, r1, sl
   19680:	str	r1, [sp, #56]	; 0x38
   19684:	mov	r1, r2
   19688:	eor	r2, sl, #1
   1968c:	movwne	r1, #1
   19690:	str	r2, [sp, #88]	; 0x58
   19694:	orr	r2, r1, r2
   19698:	and	r1, r1, r3
   1969c:	and	r0, r0, r1
   196a0:	str	r2, [sp, #60]	; 0x3c
   196a4:	str	r1, [fp, #-68]	; 0xffffffbc
   196a8:	str	r0, [fp, #-60]	; 0xffffffc4
   196ac:	eor	r0, r3, #1
   196b0:	str	r0, [sp, #48]	; 0x30
   196b4:	cmn	lr, #1
   196b8:	beq	196c8 <__assert_fail@plt+0x834c>
   196bc:	cmp	r7, lr
   196c0:	bne	196d4 <__assert_fail@plt+0x8358>
   196c4:	b	1a280 <__assert_fail@plt+0x8f04>
   196c8:	ldrb	r0, [ip, r7]
   196cc:	cmp	r0, #0
   196d0:	beq	1a288 <__assert_fail@plt+0x8f0c>
   196d4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   196d8:	mov	r9, #0
   196dc:	str	r5, [fp, #-48]	; 0xffffffd0
   196e0:	str	r6, [fp, #-52]	; 0xffffffcc
   196e4:	cmp	r0, #0
   196e8:	beq	19728 <__assert_fail@plt+0x83ac>
   196ec:	ldr	r0, [fp, #-76]	; 0xffffffb4
   196f0:	mov	r5, r4
   196f4:	add	r4, r7, r0
   196f8:	cmp	r0, #2
   196fc:	bcc	19718 <__assert_fail@plt+0x839c>
   19700:	cmn	lr, #1
   19704:	bne	19718 <__assert_fail@plt+0x839c>
   19708:	mov	r0, ip
   1970c:	bl	11238 <strlen@plt>
   19710:	ldr	ip, [fp, #-84]	; 0xffffffac
   19714:	mov	lr, r0
   19718:	cmp	r4, lr
   1971c:	bls	19730 <__assert_fail@plt+0x83b4>
   19720:	mov	r6, #0
   19724:	b	19770 <__assert_fail@plt+0x83f4>
   19728:	mov	r6, #0
   1972c:	b	19774 <__assert_fail@plt+0x83f8>
   19730:	ldr	r1, [sp, #92]	; 0x5c
   19734:	ldr	r2, [fp, #-76]	; 0xffffffb4
   19738:	add	r0, ip, r7
   1973c:	mov	r4, lr
   19740:	bl	1113c <memcmp@plt>
   19744:	ldr	r2, [sp, #88]	; 0x58
   19748:	cmp	r0, #0
   1974c:	mov	r1, r0
   19750:	movwne	r1, #1
   19754:	orr	r1, r1, r2
   19758:	tst	r1, #1
   1975c:	beq	1a31c <__assert_fail@plt+0x8fa0>
   19760:	ldr	ip, [fp, #-84]	; 0xffffffac
   19764:	clz	r0, r0
   19768:	mov	lr, r4
   1976c:	lsr	r6, r0, #5
   19770:	mov	r4, r5
   19774:	ldrb	r5, [ip, r7]
   19778:	cmp	r5, #126	; 0x7e
   1977c:	bhi	19b44 <__assert_fail@plt+0x87c8>
   19780:	add	r3, pc, #16
   19784:	mov	sl, #1
   19788:	mov	r2, #110	; 0x6e
   1978c:	mov	r0, #97	; 0x61
   19790:	mov	r1, #0
   19794:	ldr	pc, [r3, r5, lsl #2]
   19798:	andeq	r9, r1, r8, lsr #20
   1979c:	andeq	r9, r1, r4, asr #22
   197a0:	andeq	r9, r1, r4, asr #22
   197a4:	andeq	r9, r1, r4, asr #22
   197a8:	andeq	r9, r1, r4, asr #22
   197ac:	andeq	r9, r1, r4, asr #22
   197b0:	andeq	r9, r1, r4, asr #22
   197b4:	andeq	r9, r1, r8, ror #23
   197b8:	andeq	r9, r1, r8, lsl #20
   197bc:	andeq	r9, r1, r0, lsl #20
   197c0:	andeq	r9, r1, r4, lsl sl
   197c4:	muleq	r1, r8, sl
   197c8:	strdeq	r9, [r1], -r8
   197cc:	andeq	r9, r1, r0, lsl sl
   197d0:	andeq	r9, r1, r4, asr #22
   197d4:	andeq	r9, r1, r4, asr #22
   197d8:	andeq	r9, r1, r4, asr #22
   197dc:	andeq	r9, r1, r4, asr #22
   197e0:	andeq	r9, r1, r4, asr #22
   197e4:	andeq	r9, r1, r4, asr #22
   197e8:	andeq	r9, r1, r4, asr #22
   197ec:	andeq	r9, r1, r4, asr #22
   197f0:	andeq	r9, r1, r4, asr #22
   197f4:	andeq	r9, r1, r4, asr #22
   197f8:	andeq	r9, r1, r4, asr #22
   197fc:	andeq	r9, r1, r4, asr #22
   19800:	andeq	r9, r1, r4, asr #22
   19804:	andeq	r9, r1, r4, asr #22
   19808:	andeq	r9, r1, r4, asr #22
   1980c:	andeq	r9, r1, r4, asr #22
   19810:	andeq	r9, r1, r4, asr #22
   19814:	andeq	r9, r1, r4, asr #22
   19818:	andeq	r9, r1, r8, lsr #23
   1981c:	andeq	r9, r1, ip, lsr #23
   19820:	andeq	r9, r1, ip, lsr #23
   19824:	andeq	r9, r1, r8, lsr #19
   19828:	andeq	r9, r1, ip, lsr #23
   1982c:	muleq	r1, r4, r9
   19830:	andeq	r9, r1, ip, lsr #23
   19834:	andeq	r9, r1, r0, lsr #21
   19838:	andeq	r9, r1, ip, lsr #23
   1983c:	andeq	r9, r1, ip, lsr #23
   19840:	andeq	r9, r1, ip, lsr #23
   19844:	muleq	r1, r4, r9
   19848:	muleq	r1, r4, r9
   1984c:	muleq	r1, r4, r9
   19850:	muleq	r1, r4, r9
   19854:	muleq	r1, r4, r9
   19858:	muleq	r1, r4, r9
   1985c:	muleq	r1, r4, r9
   19860:	muleq	r1, r4, r9
   19864:	muleq	r1, r4, r9
   19868:	muleq	r1, r4, r9
   1986c:	muleq	r1, r4, r9
   19870:	muleq	r1, r4, r9
   19874:	muleq	r1, r4, r9
   19878:	muleq	r1, r4, r9
   1987c:	muleq	r1, r4, r9
   19880:	muleq	r1, r4, r9
   19884:	andeq	r9, r1, ip, lsr #23
   19888:	andeq	r9, r1, ip, lsr #23
   1988c:	andeq	r9, r1, ip, lsr #23
   19890:	andeq	r9, r1, ip, lsr #23
   19894:	andeq	r9, r1, ip, ror #20
   19898:	andeq	r9, r1, r4, asr #22
   1989c:	muleq	r1, r4, r9
   198a0:	muleq	r1, r4, r9
   198a4:	muleq	r1, r4, r9
   198a8:	muleq	r1, r4, r9
   198ac:	muleq	r1, r4, r9
   198b0:	muleq	r1, r4, r9
   198b4:	muleq	r1, r4, r9
   198b8:	muleq	r1, r4, r9
   198bc:	muleq	r1, r4, r9
   198c0:	muleq	r1, r4, r9
   198c4:	muleq	r1, r4, r9
   198c8:	muleq	r1, r4, r9
   198cc:	muleq	r1, r4, r9
   198d0:	muleq	r1, r4, r9
   198d4:	muleq	r1, r4, r9
   198d8:	muleq	r1, r4, r9
   198dc:	muleq	r1, r4, r9
   198e0:	muleq	r1, r4, r9
   198e4:	muleq	r1, r4, r9
   198e8:	muleq	r1, r4, r9
   198ec:	muleq	r1, r4, r9
   198f0:	muleq	r1, r4, r9
   198f4:	muleq	r1, r4, r9
   198f8:	muleq	r1, r4, r9
   198fc:	muleq	r1, r4, r9
   19900:	muleq	r1, r4, r9
   19904:	andeq	r9, r1, ip, lsr #23
   19908:	ldrdeq	r9, [r1], -r4
   1990c:	muleq	r1, r4, r9
   19910:	andeq	r9, r1, ip, lsr #23
   19914:	muleq	r1, r4, r9
   19918:	andeq	r9, r1, ip, lsr #23
   1991c:	muleq	r1, r4, r9
   19920:	muleq	r1, r4, r9
   19924:	muleq	r1, r4, r9
   19928:	muleq	r1, r4, r9
   1992c:	muleq	r1, r4, r9
   19930:	muleq	r1, r4, r9
   19934:	muleq	r1, r4, r9
   19938:	muleq	r1, r4, r9
   1993c:	muleq	r1, r4, r9
   19940:	muleq	r1, r4, r9
   19944:	muleq	r1, r4, r9
   19948:	muleq	r1, r4, r9
   1994c:	muleq	r1, r4, r9
   19950:	muleq	r1, r4, r9
   19954:	muleq	r1, r4, r9
   19958:	muleq	r1, r4, r9
   1995c:	muleq	r1, r4, r9
   19960:	muleq	r1, r4, r9
   19964:	muleq	r1, r4, r9
   19968:	muleq	r1, r4, r9
   1996c:	muleq	r1, r4, r9
   19970:	muleq	r1, r4, r9
   19974:	muleq	r1, r4, r9
   19978:	muleq	r1, r4, r9
   1997c:	muleq	r1, r4, r9
   19980:	muleq	r1, r4, r9
   19984:			; <UNDEFINED> instruction: 0x000199b8
   19988:	andeq	r9, r1, ip, lsr #23
   1998c:			; <UNDEFINED> instruction: 0x000199b8
   19990:	andeq	r9, r1, r8, lsr #19
   19994:	ldr	r0, [fp, #-68]	; 0xffffffbc
   19998:	cmp	r0, #0
   1999c:	beq	19bfc <__assert_fail@plt+0x8880>
   199a0:	ldr	r0, [fp, #16]
   199a4:	b	19c00 <__assert_fail@plt+0x8884>
   199a8:	mov	sl, #0
   199ac:	cmp	r7, #0
   199b0:	bne	19e18 <__assert_fail@plt+0x8a9c>
   199b4:	b	19ba8 <__assert_fail@plt+0x882c>
   199b8:	mov	sl, #0
   199bc:	cmn	lr, #1
   199c0:	beq	19b94 <__assert_fail@plt+0x8818>
   199c4:	cmp	r7, #0
   199c8:	cmpeq	lr, #1
   199cc:	bne	19e18 <__assert_fail@plt+0x8a9c>
   199d0:	b	19ba8 <__assert_fail@plt+0x882c>
   199d4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   199d8:	cmp	r0, #2
   199dc:	bne	19bcc <__assert_fail@plt+0x8850>
   199e0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   199e4:	tst	r0, #1
   199e8:	bne	1a338 <__assert_fail@plt+0x8fbc>
   199ec:	mov	r9, #0
   199f0:	mov	r0, #92	; 0x5c
   199f4:	b	19be0 <__assert_fail@plt+0x8864>
   199f8:	mov	r0, #102	; 0x66
   199fc:	b	19be8 <__assert_fail@plt+0x886c>
   19a00:	mov	r2, #116	; 0x74
   19a04:	b	19a14 <__assert_fail@plt+0x8698>
   19a08:	mov	r0, #98	; 0x62
   19a0c:	b	19be8 <__assert_fail@plt+0x886c>
   19a10:	mov	r2, #114	; 0x72
   19a14:	ldr	r0, [sp, #60]	; 0x3c
   19a18:	tst	r0, #1
   19a1c:	mov	r0, r2
   19a20:	bne	19be8 <__assert_fail@plt+0x886c>
   19a24:	b	1a338 <__assert_fail@plt+0x8fbc>
   19a28:	ldr	r0, [sp, #84]	; 0x54
   19a2c:	tst	r0, #1
   19a30:	beq	19cd4 <__assert_fail@plt+0x8958>
   19a34:	ldr	r0, [fp, #-72]	; 0xffffffb8
   19a38:	tst	r0, #1
   19a3c:	bne	1a440 <__assert_fail@plt+0x90c4>
   19a40:	ldr	r0, [fp, #-64]	; 0xffffffc0
   19a44:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19a48:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19a4c:	cmp	r0, #2
   19a50:	ldr	r0, [fp, #-80]	; 0xffffffb0
   19a54:	movwne	r0, #1
   19a58:	orr	r0, r0, r3
   19a5c:	tst	r0, #1
   19a60:	beq	1a154 <__assert_fail@plt+0x8dd8>
   19a64:	mov	r0, r8
   19a68:	b	1a194 <__assert_fail@plt+0x8e18>
   19a6c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   19a70:	mov	r9, #0
   19a74:	mov	r5, #63	; 0x3f
   19a78:	cmp	r0, #5
   19a7c:	beq	19e20 <__assert_fail@plt+0x8aa4>
   19a80:	cmp	r0, #2
   19a84:	bne	19ee0 <__assert_fail@plt+0x8b64>
   19a88:	ldr	r0, [fp, #-72]	; 0xffffffb8
   19a8c:	tst	r0, #1
   19a90:	beq	19ee4 <__assert_fail@plt+0x8b68>
   19a94:	b	1a338 <__assert_fail@plt+0x8fbc>
   19a98:	mov	r0, #118	; 0x76
   19a9c:	b	19be8 <__assert_fail@plt+0x886c>
   19aa0:	mov	r0, #1
   19aa4:	mov	r5, #39	; 0x27
   19aa8:	str	r0, [sp, #52]	; 0x34
   19aac:	ldr	r0, [fp, #-64]	; 0xffffffc0
   19ab0:	cmp	r0, #2
   19ab4:	bne	19b3c <__assert_fail@plt+0x87c0>
   19ab8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   19abc:	tst	r0, #1
   19ac0:	bne	1a338 <__assert_fail@plt+0x8fbc>
   19ac4:	ldr	r3, [sp, #68]	; 0x44
   19ac8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   19acc:	mov	r9, #0
   19ad0:	clz	r1, r2
   19ad4:	cmp	r3, #0
   19ad8:	mov	r0, r3
   19adc:	movwne	r0, #1
   19ae0:	lsr	r1, r1, #5
   19ae4:	orrs	r0, r0, r1
   19ae8:	moveq	r3, r2
   19aec:	moveq	r2, r0
   19af0:	cmp	r8, r2
   19af4:	str	r3, [sp, #68]	; 0x44
   19af8:	str	r2, [fp, #-52]	; 0xffffffcc
   19afc:	ldrcc	r1, [fp, #-56]	; 0xffffffc8
   19b00:	movcc	r0, #39	; 0x27
   19b04:	strbcc	r0, [r1, r8]
   19b08:	add	r0, r8, #1
   19b0c:	cmp	r0, r2
   19b10:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   19b14:	movcc	r1, #92	; 0x5c
   19b18:	strbcc	r1, [r3, r0]
   19b1c:	add	r0, r8, #2
   19b20:	add	r8, r8, #3
   19b24:	cmp	r0, r2
   19b28:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   19b2c:	movcc	r1, #39	; 0x27
   19b30:	strbcc	r1, [r2, r0]
   19b34:	mov	r0, #0
   19b38:	str	r0, [fp, #-48]	; 0xffffffd0
   19b3c:	mov	sl, #1
   19b40:	b	19994 <__assert_fail@plt+0x8618>
   19b44:	ldr	r0, [sp, #32]
   19b48:	cmp	r0, #1
   19b4c:	bne	19cf8 <__assert_fail@plt+0x897c>
   19b50:	str	lr, [sp, #80]	; 0x50
   19b54:	bl	11214 <__ctype_b_loc@plt>
   19b58:	ldr	r0, [r0]
   19b5c:	ldr	ip, [fp, #-84]	; 0xffffffac
   19b60:	mov	r1, #1
   19b64:	add	r0, r0, r5, lsl #1
   19b68:	ldrb	r0, [r0, #1]
   19b6c:	ubfx	sl, r0, #6, #1
   19b70:	ldr	r0, [sp, #48]	; 0x30
   19b74:	mov	r2, r1
   19b78:	cmp	r1, #1
   19b7c:	orr	r0, sl, r0
   19b80:	bhi	19eec <__assert_fail@plt+0x8b70>
   19b84:	tst	r0, #1
   19b88:	beq	19eec <__assert_fail@plt+0x8b70>
   19b8c:	ldr	lr, [sp, #80]	; 0x50
   19b90:	b	19994 <__assert_fail@plt+0x8618>
   19b94:	cmp	r7, #0
   19b98:	bne	19e14 <__assert_fail@plt+0x8a98>
   19b9c:	ldrb	r0, [ip, #1]
   19ba0:	cmp	r0, #0
   19ba4:	bne	19e14 <__assert_fail@plt+0x8a98>
   19ba8:	mov	r1, #1
   19bac:	ldr	r0, [fp, #-64]	; 0xffffffc0
   19bb0:	cmp	r0, #2
   19bb4:	bne	19bc4 <__assert_fail@plt+0x8848>
   19bb8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   19bbc:	tst	r0, #1
   19bc0:	bne	1a338 <__assert_fail@plt+0x8fbc>
   19bc4:	mov	sl, r1
   19bc8:	b	19994 <__assert_fail@plt+0x8618>
   19bcc:	ldr	r1, [sp, #44]	; 0x2c
   19bd0:	mov	r9, #0
   19bd4:	mov	r0, #92	; 0x5c
   19bd8:	cmp	r1, #0
   19bdc:	beq	19be8 <__assert_fail@plt+0x886c>
   19be0:	mov	sl, #0
   19be4:	b	1a100 <__assert_fail@plt+0x8d84>
   19be8:	ldr	r1, [sp, #84]	; 0x54
   19bec:	mov	sl, #0
   19bf0:	mov	r9, #0
   19bf4:	tst	r1, #1
   19bf8:	bne	19c34 <__assert_fail@plt+0x88b8>
   19bfc:	ldr	r0, [fp, #-88]	; 0xffffffa8
   19c00:	cmp	r0, #0
   19c04:	mov	r0, r5
   19c08:	beq	19c2c <__assert_fail@plt+0x88b0>
   19c0c:	ldr	r1, [fp, #16]
   19c10:	ubfx	r0, r5, #5, #3
   19c14:	mov	r2, #1
   19c18:	ldr	r0, [r1, r0, lsl #2]
   19c1c:	and	r1, r5, #31
   19c20:	tst	r0, r2, lsl r1
   19c24:	mov	r0, r5
   19c28:	bne	19c34 <__assert_fail@plt+0x88b8>
   19c2c:	cmp	r6, #0
   19c30:	beq	1a100 <__assert_fail@plt+0x8d84>
   19c34:	ldr	r1, [fp, #-72]	; 0xffffffb8
   19c38:	ldr	r6, [fp, #-52]	; 0xffffffcc
   19c3c:	tst	r1, #1
   19c40:	bne	1a314 <__assert_fail@plt+0x8f98>
   19c44:	ldr	r1, [fp, #-64]	; 0xffffffc0
   19c48:	ldr	r5, [fp, #-48]	; 0xffffffd0
   19c4c:	cmp	r1, #2
   19c50:	ldr	r1, [fp, #-80]	; 0xffffffb0
   19c54:	movwne	r1, #1
   19c58:	orr	r1, r1, r5
   19c5c:	tst	r1, #1
   19c60:	bne	19ca4 <__assert_fail@plt+0x8928>
   19c64:	cmp	r8, r6
   19c68:	mov	r5, #1
   19c6c:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   19c70:	movcc	r1, #39	; 0x27
   19c74:	strbcc	r1, [r2, r8]
   19c78:	add	r1, r8, #1
   19c7c:	cmp	r1, r6
   19c80:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   19c84:	movcc	r2, #36	; 0x24
   19c88:	strbcc	r2, [r3, r1]
   19c8c:	add	r1, r8, #2
   19c90:	add	r8, r8, #3
   19c94:	cmp	r1, r6
   19c98:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   19c9c:	movcc	r2, #39	; 0x27
   19ca0:	strbcc	r2, [r3, r1]
   19ca4:	cmp	r8, r6
   19ca8:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   19cac:	movcc	r1, #92	; 0x5c
   19cb0:	strbcc	r1, [r2, r8]
   19cb4:	add	r8, r8, #1
   19cb8:	cmp	r8, r6
   19cbc:	and	r4, r4, sl
   19cc0:	ldrcc	r1, [fp, #-56]	; 0xffffffc8
   19cc4:	strbcc	r0, [r1, r8]
   19cc8:	add	r8, r8, #1
   19ccc:	add	r7, r7, #1
   19cd0:	b	196b4 <__assert_fail@plt+0x8338>
   19cd4:	ldr	r0, [sp, #28]
   19cd8:	mov	sl, #0
   19cdc:	mov	r9, #0
   19ce0:	mov	r5, #0
   19ce4:	cmp	r0, #0
   19ce8:	beq	19bfc <__assert_fail@plt+0x8880>
   19cec:	ldr	r6, [fp, #-52]	; 0xffffffcc
   19cf0:	ldr	r5, [fp, #-48]	; 0xffffffd0
   19cf4:	b	19ccc <__assert_fail@plt+0x8950>
   19cf8:	mov	r0, #0
   19cfc:	cmn	lr, #1
   19d00:	str	r6, [sp, #76]	; 0x4c
   19d04:	str	r4, [sp, #20]
   19d08:	str	r0, [fp, #-36]	; 0xffffffdc
   19d0c:	str	r0, [fp, #-40]	; 0xffffffd8
   19d10:	bne	19d24 <__assert_fail@plt+0x89a8>
   19d14:	mov	r0, ip
   19d18:	bl	11238 <strlen@plt>
   19d1c:	ldr	ip, [fp, #-84]	; 0xffffffac
   19d20:	mov	lr, r0
   19d24:	add	r0, ip, r7
   19d28:	mov	sl, #1
   19d2c:	mov	r6, #0
   19d30:	sub	r4, fp, #40	; 0x28
   19d34:	str	lr, [sp, #80]	; 0x50
   19d38:	str	r0, [sp, #36]	; 0x24
   19d3c:	str	r6, [sp, #40]	; 0x28
   19d40:	add	r6, r6, r7
   19d44:	sub	r0, fp, #44	; 0x2c
   19d48:	mov	r3, r4
   19d4c:	add	r1, ip, r6
   19d50:	sub	r2, lr, r6
   19d54:	bl	1c150 <__assert_fail@plt+0xadd4>
   19d58:	cmp	r0, #0
   19d5c:	beq	1a268 <__assert_fail@plt+0x8eec>
   19d60:	cmn	r0, #1
   19d64:	beq	1a228 <__assert_fail@plt+0x8eac>
   19d68:	ldr	lr, [sp, #80]	; 0x50
   19d6c:	cmn	r0, #2
   19d70:	beq	1a230 <__assert_fail@plt+0x8eb4>
   19d74:	ldr	r2, [sp, #56]	; 0x38
   19d78:	cmp	r0, #2
   19d7c:	mov	r1, #0
   19d80:	movwcc	r1, #1
   19d84:	eor	r2, r2, #1
   19d88:	orrs	r1, r2, r1
   19d8c:	bne	19dd8 <__assert_fail@plt+0x8a5c>
   19d90:	ldr	r1, [sp, #40]	; 0x28
   19d94:	ldr	r2, [sp, #36]	; 0x24
   19d98:	add	ip, r2, r1
   19d9c:	mov	r2, #1
   19da0:	ldrb	r3, [ip, r2]
   19da4:	sub	r6, r3, #94	; 0x5e
   19da8:	cmp	r6, #30
   19dac:	bhi	19dc0 <__assert_fail@plt+0x8a44>
   19db0:	mov	r4, #1
   19db4:	mov	r1, #1073741829	; 0x40000005
   19db8:	tst	r1, r4, lsl r6
   19dbc:	bne	1a334 <__assert_fail@plt+0x8fb8>
   19dc0:	sub	r3, r3, #91	; 0x5b
   19dc4:	cmp	r3, #2
   19dc8:	bcc	1a334 <__assert_fail@plt+0x8fb8>
   19dcc:	add	r2, r2, #1
   19dd0:	cmp	r2, r0
   19dd4:	bcc	19da0 <__assert_fail@plt+0x8a24>
   19dd8:	ldr	r6, [sp, #40]	; 0x28
   19ddc:	add	r6, r0, r6
   19de0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19de4:	bl	1116c <iswprint@plt>
   19de8:	cmp	r0, #0
   19dec:	sub	r4, fp, #40	; 0x28
   19df0:	movwne	r0, #1
   19df4:	and	sl, sl, r0
   19df8:	mov	r0, r4
   19dfc:	bl	11130 <mbsinit@plt>
   19e00:	ldr	lr, [sp, #80]	; 0x50
   19e04:	ldr	ip, [fp, #-84]	; 0xffffffac
   19e08:	cmp	r0, #0
   19e0c:	beq	19d3c <__assert_fail@plt+0x89c0>
   19e10:	b	1a270 <__assert_fail@plt+0x8ef4>
   19e14:	mvn	lr, #0
   19e18:	mov	r9, #0
   19e1c:	b	19994 <__assert_fail@plt+0x8618>
   19e20:	ldr	r0, [sp, #24]
   19e24:	cmp	r0, #0
   19e28:	beq	19ee0 <__assert_fail@plt+0x8b64>
   19e2c:	add	r0, r7, #2
   19e30:	cmp	r0, lr
   19e34:	bcs	19ee0 <__assert_fail@plt+0x8b64>
   19e38:	add	r1, ip, r7
   19e3c:	ldrb	r1, [r1, #1]
   19e40:	cmp	r1, #63	; 0x3f
   19e44:	bne	19ee0 <__assert_fail@plt+0x8b64>
   19e48:	ldrb	r5, [ip, r0]
   19e4c:	sub	r1, r5, #33	; 0x21
   19e50:	cmp	r1, #29
   19e54:	bhi	19ee0 <__assert_fail@plt+0x8b64>
   19e58:	movw	r3, #20929	; 0x51c1
   19e5c:	mov	r2, #1
   19e60:	movt	r3, #14336	; 0x3800
   19e64:	tst	r3, r2, lsl r1
   19e68:	beq	19ee0 <__assert_fail@plt+0x8b64>
   19e6c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   19e70:	tst	r1, #1
   19e74:	bne	1a448 <__assert_fail@plt+0x90cc>
   19e78:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19e7c:	mov	r7, r0
   19e80:	cmp	r8, r1
   19e84:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   19e88:	movcc	r1, #63	; 0x3f
   19e8c:	strbcc	r1, [r2, r8]
   19e90:	ldr	r2, [fp, #-52]	; 0xffffffcc
   19e94:	add	r1, r8, #1
   19e98:	cmp	r1, r2
   19e9c:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   19ea0:	movcc	r2, #34	; 0x22
   19ea4:	strbcc	r2, [r3, r1]
   19ea8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   19eac:	add	r1, r8, #2
   19eb0:	cmp	r1, r2
   19eb4:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   19eb8:	movcc	r2, #34	; 0x22
   19ebc:	strbcc	r2, [r3, r1]
   19ec0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   19ec4:	add	r1, r8, #3
   19ec8:	add	r8, r8, #4
   19ecc:	cmp	r1, r2
   19ed0:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   19ed4:	movcc	r2, #63	; 0x3f
   19ed8:	strbcc	r2, [r3, r1]
   19edc:	b	19ee4 <__assert_fail@plt+0x8b68>
   19ee0:	mov	r5, #63	; 0x3f
   19ee4:	mov	sl, #0
   19ee8:	b	19994 <__assert_fail@plt+0x8618>
   19eec:	str	r0, [sp, #40]	; 0x28
   19ef0:	add	r0, r2, r7
   19ef4:	str	r6, [sp, #76]	; 0x4c
   19ef8:	add	r1, r7, #1
   19efc:	ldr	lr, [sp, #80]	; 0x50
   19f00:	ldr	r7, [fp, #-64]	; 0xffffffc0
   19f04:	ldr	r6, [fp, #-52]	; 0xffffffcc
   19f08:	mov	r3, #0
   19f0c:	str	r0, [sp, #36]	; 0x24
   19f10:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19f14:	b	19fa8 <__assert_fail@plt+0x8c2c>
   19f18:	str	r0, [sp, #76]	; 0x4c
   19f1c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19f20:	cmp	r9, #0
   19f24:	movwne	r9, #1
   19f28:	mvn	r7, r0
   19f2c:	orr	r7, r7, r9
   19f30:	tst	r7, #1
   19f34:	bne	19f84 <__assert_fail@plt+0x8c08>
   19f38:	ldr	r6, [fp, #-52]	; 0xffffffcc
   19f3c:	cmp	r8, r6
   19f40:	bcs	19f58 <__assert_fail@plt+0x8bdc>
   19f44:	ldr	r7, [fp, #-56]	; 0xffffffc8
   19f48:	mov	r2, r4
   19f4c:	mov	r4, #39	; 0x27
   19f50:	strb	r4, [r7, r8]
   19f54:	mov	r4, r2
   19f58:	add	r7, r8, #1
   19f5c:	cmp	r7, r6
   19f60:	bcs	19f78 <__assert_fail@plt+0x8bfc>
   19f64:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19f68:	mov	r2, r4
   19f6c:	mov	r4, #39	; 0x27
   19f70:	strb	r4, [r0, r7]
   19f74:	mov	r4, r2
   19f78:	add	r8, r8, #2
   19f7c:	mov	r0, #0
   19f80:	b	19f8c <__assert_fail@plt+0x8c10>
   19f84:	ldr	r6, [fp, #-52]	; 0xffffffcc
   19f88:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19f8c:	cmp	r8, r6
   19f90:	ldr	r7, [fp, #-64]	; 0xffffffc0
   19f94:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   19f98:	strbcc	r5, [r2, r8]
   19f9c:	add	r8, r8, #1
   19fa0:	ldrb	r5, [ip, r1]
   19fa4:	add	r1, r1, #1
   19fa8:	ldr	r2, [sp, #40]	; 0x28
   19fac:	tst	r2, #1
   19fb0:	beq	19fec <__assert_fail@plt+0x8c70>
   19fb4:	ldr	r2, [sp, #76]	; 0x4c
   19fb8:	str	r0, [fp, #-48]	; 0xffffffd0
   19fbc:	tst	r2, #1
   19fc0:	beq	19fe4 <__assert_fail@plt+0x8c68>
   19fc4:	cmp	r8, r6
   19fc8:	bcs	19fe0 <__assert_fail@plt+0x8c64>
   19fcc:	ldr	r6, [fp, #-56]	; 0xffffffc8
   19fd0:	mov	r2, r4
   19fd4:	mov	r4, #92	; 0x5c
   19fd8:	strb	r4, [r6, r8]
   19fdc:	mov	r4, r2
   19fe0:	add	r8, r8, #1
   19fe4:	mov	r0, #0
   19fe8:	b	1a0e0 <__assert_fail@plt+0x8d64>
   19fec:	ldr	r2, [fp, #-72]	; 0xffffffb8
   19ff0:	tst	r2, #1
   19ff4:	bne	1a340 <__assert_fail@plt+0x8fc4>
   19ff8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   19ffc:	cmp	r7, #2
   1a000:	movwne	r3, #1
   1a004:	orr	r3, r3, r0
   1a008:	tst	r3, #1
   1a00c:	bne	1a068 <__assert_fail@plt+0x8cec>
   1a010:	cmp	r8, r6
   1a014:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   1a018:	movcc	r3, #39	; 0x27
   1a01c:	strbcc	r3, [r2, r8]
   1a020:	add	r3, r8, #1
   1a024:	cmp	r3, r6
   1a028:	bcs	1a040 <__assert_fail@plt+0x8cc4>
   1a02c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1a030:	mov	r7, r4
   1a034:	mov	r4, #36	; 0x24
   1a038:	strb	r4, [r2, r3]
   1a03c:	mov	r4, r7
   1a040:	add	r3, r8, #2
   1a044:	cmp	r3, r6
   1a048:	bcs	1a060 <__assert_fail@plt+0x8ce4>
   1a04c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1a050:	mov	r7, r4
   1a054:	mov	r4, #39	; 0x27
   1a058:	strb	r4, [r2, r3]
   1a05c:	mov	r4, r7
   1a060:	add	r8, r8, #3
   1a064:	mov	r0, #1
   1a068:	cmp	r8, r6
   1a06c:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   1a070:	movcc	r3, #92	; 0x5c
   1a074:	strbcc	r3, [r2, r8]
   1a078:	add	r3, r8, #1
   1a07c:	cmp	r3, r6
   1a080:	bcs	1a0a0 <__assert_fail@plt+0x8d24>
   1a084:	mov	r2, r4
   1a088:	and	r7, r5, #192	; 0xc0
   1a08c:	mov	r4, #48	; 0x30
   1a090:	orr	r7, r4, r7, lsr #6
   1a094:	mov	r4, r2
   1a098:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1a09c:	strb	r7, [r2, r3]
   1a0a0:	add	r3, r8, #2
   1a0a4:	cmp	r3, r6
   1a0a8:	bcs	1a0c8 <__assert_fail@plt+0x8d4c>
   1a0ac:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1a0b0:	mov	r6, r4
   1a0b4:	lsr	r7, r5, #3
   1a0b8:	mov	r4, #6
   1a0bc:	bfi	r7, r4, #3, #29
   1a0c0:	mov	r4, r6
   1a0c4:	strb	r7, [r2, r3]
   1a0c8:	str	r0, [fp, #-48]	; 0xffffffd0
   1a0cc:	ldr	r0, [sp, #76]	; 0x4c
   1a0d0:	mov	r3, #6
   1a0d4:	add	r8, r8, #3
   1a0d8:	bfi	r5, r3, #3, #29
   1a0dc:	mov	r3, #1
   1a0e0:	ldr	r2, [sp, #36]	; 0x24
   1a0e4:	and	r9, r3, #1
   1a0e8:	cmp	r2, r1
   1a0ec:	bhi	19f18 <__assert_fail@plt+0x8b9c>
   1a0f0:	cmp	r9, #0
   1a0f4:	sub	r7, r1, #1
   1a0f8:	mov	r0, r5
   1a0fc:	movwne	r9, #1
   1a100:	cmp	r9, #0
   1a104:	bne	1a148 <__assert_fail@plt+0x8dcc>
   1a108:	ldr	r5, [fp, #-48]	; 0xffffffd0
   1a10c:	ldr	r6, [fp, #-52]	; 0xffffffcc
   1a110:	tst	r5, #1
   1a114:	beq	19cb8 <__assert_fail@plt+0x893c>
   1a118:	cmp	r8, r6
   1a11c:	mov	r5, #0
   1a120:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   1a124:	movcc	r1, #39	; 0x27
   1a128:	strbcc	r1, [r2, r8]
   1a12c:	add	r1, r8, #1
   1a130:	add	r8, r8, #2
   1a134:	cmp	r1, r6
   1a138:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   1a13c:	movcc	r2, #39	; 0x27
   1a140:	strbcc	r2, [r3, r1]
   1a144:	b	19cb8 <__assert_fail@plt+0x893c>
   1a148:	ldr	r6, [fp, #-52]	; 0xffffffcc
   1a14c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   1a150:	b	19cb8 <__assert_fail@plt+0x893c>
   1a154:	cmp	r8, r1
   1a158:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   1a15c:	movcc	r0, #39	; 0x27
   1a160:	strbcc	r0, [r2, r8]
   1a164:	add	r0, r8, #1
   1a168:	cmp	r0, r1
   1a16c:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   1a170:	movcc	r2, #36	; 0x24
   1a174:	strbcc	r2, [r3, r0]
   1a178:	add	r0, r8, #2
   1a17c:	cmp	r0, r1
   1a180:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   1a184:	movcc	r2, #39	; 0x27
   1a188:	strbcc	r2, [r3, r0]
   1a18c:	add	r0, r8, #3
   1a190:	mov	r3, #1
   1a194:	cmp	r0, r1
   1a198:	add	r8, r0, #1
   1a19c:	str	r3, [fp, #-48]	; 0xffffffd0
   1a1a0:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   1a1a4:	movcc	r1, #92	; 0x5c
   1a1a8:	strbcc	r1, [r2, r0]
   1a1ac:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1a1b0:	cmp	r1, #2
   1a1b4:	beq	1a218 <__assert_fail@plt+0x8e9c>
   1a1b8:	add	r1, r7, #1
   1a1bc:	mov	sl, #0
   1a1c0:	mov	r9, #1
   1a1c4:	mov	r5, #48	; 0x30
   1a1c8:	cmp	r1, lr
   1a1cc:	bcs	19994 <__assert_fail@plt+0x8618>
   1a1d0:	ldrb	r1, [ip, r1]
   1a1d4:	sub	r1, r1, #48	; 0x30
   1a1d8:	uxtb	r1, r1
   1a1dc:	cmp	r1, #9
   1a1e0:	bhi	19994 <__assert_fail@plt+0x8618>
   1a1e4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a1e8:	cmp	r8, r1
   1a1ec:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   1a1f0:	movcc	r1, #48	; 0x30
   1a1f4:	strbcc	r1, [r2, r8]
   1a1f8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1a1fc:	add	r1, r0, #2
   1a200:	add	r8, r0, #3
   1a204:	cmp	r1, r2
   1a208:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   1a20c:	movcc	r2, #48	; 0x30
   1a210:	strbcc	r2, [r3, r1]
   1a214:	b	19994 <__assert_fail@plt+0x8618>
   1a218:	mov	r0, #48	; 0x30
   1a21c:	mov	r9, #1
   1a220:	mov	sl, #0
   1a224:	b	19c2c <__assert_fail@plt+0x88b0>
   1a228:	mov	sl, #0
   1a22c:	b	1a268 <__assert_fail@plt+0x8eec>
   1a230:	mov	sl, #0
   1a234:	cmp	lr, r6
   1a238:	bls	1a268 <__assert_fail@plt+0x8eec>
   1a23c:	ldr	ip, [fp, #-84]	; 0xffffffac
   1a240:	ldr	r6, [sp, #40]	; 0x28
   1a244:	ldr	r0, [sp, #36]	; 0x24
   1a248:	ldrb	r0, [r0, r6]
   1a24c:	cmp	r0, #0
   1a250:	beq	1a270 <__assert_fail@plt+0x8ef4>
   1a254:	add	r6, r6, #1
   1a258:	add	r0, r7, r6
   1a25c:	cmp	r0, lr
   1a260:	bcc	1a244 <__assert_fail@plt+0x8ec8>
   1a264:	b	1a270 <__assert_fail@plt+0x8ef4>
   1a268:	ldr	ip, [fp, #-84]	; 0xffffffac
   1a26c:	ldr	r6, [sp, #40]	; 0x28
   1a270:	mov	r1, r6
   1a274:	ldr	r4, [sp, #20]
   1a278:	ldr	r6, [sp, #76]	; 0x4c
   1a27c:	b	19b70 <__assert_fail@plt+0x87f4>
   1a280:	mov	lr, r7
   1a284:	b	1a28c <__assert_fail@plt+0x8f10>
   1a288:	mvn	lr, #0
   1a28c:	ldr	r9, [fp, #-64]	; 0xffffffc0
   1a290:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1a294:	eor	r0, r9, #2
   1a298:	orr	r0, r0, r8
   1a29c:	clz	r0, r0
   1a2a0:	lsr	r0, r0, #5
   1a2a4:	tst	r1, r0
   1a2a8:	bne	1a3a4 <__assert_fail@plt+0x9028>
   1a2ac:	mov	r0, r1
   1a2b0:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1a2b4:	cmp	r9, #2
   1a2b8:	movwne	r1, #1
   1a2bc:	orr	r0, r0, r1
   1a2c0:	tst	r0, #1
   1a2c4:	bne	1a3e4 <__assert_fail@plt+0x9068>
   1a2c8:	ldr	r0, [sp, #52]	; 0x34
   1a2cc:	ldr	r1, [sp, #68]	; 0x44
   1a2d0:	str	lr, [sp, #80]	; 0x50
   1a2d4:	eor	r0, r0, #1
   1a2d8:	tst	r0, #1
   1a2dc:	bne	1a3e4 <__assert_fail@plt+0x9068>
   1a2e0:	tst	r4, #1
   1a2e4:	bne	1a3ac <__assert_fail@plt+0x9030>
   1a2e8:	mov	r7, #0
   1a2ec:	cmp	r1, #0
   1a2f0:	beq	1a3dc <__assert_fail@plt+0x9060>
   1a2f4:	ldr	r0, [sp, #84]	; 0x54
   1a2f8:	mov	r3, #0
   1a2fc:	cmp	r6, #0
   1a300:	mov	r2, #0
   1a304:	mov	r4, r1
   1a308:	str	r3, [fp, #-72]	; 0xffffffb8
   1a30c:	beq	19448 <__assert_fail@plt+0x80cc>
   1a310:	b	1a3e4 <__assert_fail@plt+0x9068>
   1a314:	ldr	r7, [fp, #-64]	; 0xffffffc0
   1a318:	b	1a340 <__assert_fail@plt+0x8fc4>
   1a31c:	ldr	ip, [fp, #-84]	; 0xffffffac
   1a320:	mov	r2, #1
   1a324:	mov	lr, r4
   1a328:	ldr	r7, [fp, #-64]	; 0xffffffc0
   1a32c:	ldr	r6, [fp, #-52]	; 0xffffffcc
   1a330:	b	1a344 <__assert_fail@plt+0x8fc8>
   1a334:	ldr	ip, [fp, #-84]	; 0xffffffac
   1a338:	mov	r7, #2
   1a33c:	ldr	r6, [fp, #-52]	; 0xffffffcc
   1a340:	ldr	r2, [sp, #84]	; 0x54
   1a344:	mov	r0, #0
   1a348:	ldr	r1, [fp, #12]
   1a34c:	tst	r2, #1
   1a350:	mov	r2, r7
   1a354:	mov	r3, lr
   1a358:	str	r0, [sp, #8]
   1a35c:	ldr	r0, [sp, #64]	; 0x40
   1a360:	movwne	r2, #4
   1a364:	cmp	r7, #2
   1a368:	movne	r2, r7
   1a36c:	str	r2, [sp]
   1a370:	mov	r2, ip
   1a374:	bic	r1, r1, #2
   1a378:	str	r0, [sp, #12]
   1a37c:	ldr	r0, [sp, #72]	; 0x48
   1a380:	str	r1, [sp, #4]
   1a384:	mov	r1, r6
   1a388:	str	r0, [sp, #16]
   1a38c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a390:	bl	193d0 <__assert_fail@plt+0x8054>
   1a394:	mov	r8, r0
   1a398:	mov	r0, r8
   1a39c:	sub	sp, fp, #28
   1a3a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a3a4:	mov	r7, #2
   1a3a8:	b	1a340 <__assert_fail@plt+0x8fc4>
   1a3ac:	mov	r0, #5
   1a3b0:	ldr	r2, [fp, #-84]	; 0xffffffac
   1a3b4:	ldr	r3, [sp, #80]	; 0x50
   1a3b8:	str	r0, [sp]
   1a3bc:	ldr	r0, [fp, #12]
   1a3c0:	str	r0, [sp, #4]
   1a3c4:	ldr	r0, [fp, #16]
   1a3c8:	str	r0, [sp, #8]
   1a3cc:	ldr	r0, [sp, #64]	; 0x40
   1a3d0:	str	r0, [sp, #12]
   1a3d4:	ldr	r0, [sp, #72]	; 0x48
   1a3d8:	b	1a388 <__assert_fail@plt+0x900c>
   1a3dc:	mov	r0, #0
   1a3e0:	str	r0, [fp, #-72]	; 0xffffffb8
   1a3e4:	ldr	r1, [sp, #92]	; 0x5c
   1a3e8:	cmp	r1, #0
   1a3ec:	beq	1a42c <__assert_fail@plt+0x90b0>
   1a3f0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a3f4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1a3f8:	tst	r0, #1
   1a3fc:	bne	1a430 <__assert_fail@plt+0x90b4>
   1a400:	ldrb	r0, [r1]
   1a404:	cmp	r0, #0
   1a408:	beq	1a430 <__assert_fail@plt+0x90b4>
   1a40c:	add	r1, r1, #1
   1a410:	cmp	r8, r6
   1a414:	strbcc	r0, [r2, r8]
   1a418:	add	r8, r8, #1
   1a41c:	ldrb	r0, [r1], #1
   1a420:	cmp	r0, #0
   1a424:	bne	1a410 <__assert_fail@plt+0x9094>
   1a428:	b	1a430 <__assert_fail@plt+0x90b4>
   1a42c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1a430:	cmp	r8, r6
   1a434:	movcc	r0, #0
   1a438:	strbcc	r0, [r2, r8]
   1a43c:	b	1a398 <__assert_fail@plt+0x901c>
   1a440:	mov	r2, #1
   1a444:	b	1a328 <__assert_fail@plt+0x8fac>
   1a448:	mov	r7, #5
   1a44c:	b	1a33c <__assert_fail@plt+0x8fc0>
   1a450:	bl	11340 <abort@plt>
   1a454:	mov	r3, r2
   1a458:	mov	r2, #0
   1a45c:	b	1a460 <__assert_fail@plt+0x90e4>
   1a460:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a464:	add	fp, sp, #28
   1a468:	sub	sp, sp, #36	; 0x24
   1a46c:	movw	r8, #57776	; 0xe1b0
   1a470:	cmp	r3, #0
   1a474:	mov	r4, r2
   1a478:	str	r2, [sp, #24]
   1a47c:	mov	r5, r1
   1a480:	mov	r6, r0
   1a484:	str	r0, [sp, #20]
   1a488:	movt	r8, #2
   1a48c:	movne	r8, r3
   1a490:	bl	11250 <__errno_location@plt>
   1a494:	str	r0, [sp, #28]
   1a498:	cmp	r4, #0
   1a49c:	add	sl, r8, #8
   1a4a0:	ldm	r8, {r3, r9}
   1a4a4:	ldr	r7, [r0]
   1a4a8:	ldr	r1, [r8, #40]	; 0x28
   1a4ac:	ldr	r2, [r8, #44]	; 0x2c
   1a4b0:	mov	r0, #0
   1a4b4:	orreq	r9, r9, #1
   1a4b8:	str	r7, [sp, #32]
   1a4bc:	mov	r7, r5
   1a4c0:	stm	sp, {r3, r9, sl}
   1a4c4:	str	r1, [sp, #12]
   1a4c8:	str	r2, [sp, #16]
   1a4cc:	mov	r1, #0
   1a4d0:	mov	r2, r6
   1a4d4:	mov	r3, r5
   1a4d8:	bl	193d0 <__assert_fail@plt+0x8054>
   1a4dc:	add	r4, r0, #1
   1a4e0:	mov	r5, r0
   1a4e4:	mov	r0, r4
   1a4e8:	bl	1b1d0 <__assert_fail@plt+0x9e54>
   1a4ec:	mov	r6, r0
   1a4f0:	ldr	r0, [r8]
   1a4f4:	ldr	r2, [r8, #44]	; 0x2c
   1a4f8:	ldr	r1, [r8, #40]	; 0x28
   1a4fc:	mov	r3, r7
   1a500:	stm	sp, {r0, r9, sl}
   1a504:	str	r2, [sp, #16]
   1a508:	str	r1, [sp, #12]
   1a50c:	mov	r0, r6
   1a510:	mov	r1, r4
   1a514:	ldr	r2, [sp, #20]
   1a518:	bl	193d0 <__assert_fail@plt+0x8054>
   1a51c:	ldr	r0, [sp, #24]
   1a520:	ldr	r1, [sp, #32]
   1a524:	ldr	r2, [sp, #28]
   1a528:	cmp	r0, #0
   1a52c:	str	r1, [r2]
   1a530:	strne	r5, [r0]
   1a534:	mov	r0, r6
   1a538:	sub	sp, fp, #28
   1a53c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a540:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1a544:	add	fp, sp, #24
   1a548:	movw	r5, #57636	; 0xe124
   1a54c:	movw	r8, #57632	; 0xe120
   1a550:	movt	r5, #2
   1a554:	movt	r8, #2
   1a558:	ldr	r0, [r5]
   1a55c:	ldr	r4, [r8]
   1a560:	cmp	r0, #2
   1a564:	blt	1a590 <__assert_fail@plt+0x9214>
   1a568:	add	r7, r4, #12
   1a56c:	mov	r6, #0
   1a570:	ldr	r0, [r7, r6, lsl #3]
   1a574:	bl	190d0 <__assert_fail@plt+0x7d54>
   1a578:	ldr	r1, [r5]
   1a57c:	add	r2, r6, #2
   1a580:	add	r0, r6, #1
   1a584:	mov	r6, r0
   1a588:	cmp	r2, r1
   1a58c:	blt	1a570 <__assert_fail@plt+0x91f4>
   1a590:	ldr	r0, [r4, #4]
   1a594:	movw	r7, #57824	; 0xe1e0
   1a598:	movt	r7, #2
   1a59c:	cmp	r0, r7
   1a5a0:	beq	1a5b8 <__assert_fail@plt+0x923c>
   1a5a4:	bl	190d0 <__assert_fail@plt+0x7d54>
   1a5a8:	movw	r0, #57640	; 0xe128
   1a5ac:	mov	r6, #256	; 0x100
   1a5b0:	movt	r0, #2
   1a5b4:	strd	r6, [r0]
   1a5b8:	movw	r6, #57640	; 0xe128
   1a5bc:	movt	r6, #2
   1a5c0:	cmp	r4, r6
   1a5c4:	beq	1a5d4 <__assert_fail@plt+0x9258>
   1a5c8:	mov	r0, r4
   1a5cc:	bl	190d0 <__assert_fail@plt+0x7d54>
   1a5d0:	str	r6, [r8]
   1a5d4:	mov	r0, #1
   1a5d8:	str	r0, [r5]
   1a5dc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a5e0:	movw	r3, #57776	; 0xe1b0
   1a5e4:	mvn	r2, #0
   1a5e8:	movt	r3, #2
   1a5ec:	b	1a5f0 <__assert_fail@plt+0x9274>
   1a5f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a5f4:	add	fp, sp, #28
   1a5f8:	sub	sp, sp, #44	; 0x2c
   1a5fc:	mov	r7, r3
   1a600:	str	r2, [sp, #36]	; 0x24
   1a604:	str	r1, [sp, #32]
   1a608:	mov	r5, r0
   1a60c:	bl	11250 <__errno_location@plt>
   1a610:	cmp	r5, #0
   1a614:	blt	1a780 <__assert_fail@plt+0x9404>
   1a618:	cmn	r5, #-2147483647	; 0x80000001
   1a61c:	beq	1a780 <__assert_fail@plt+0x9404>
   1a620:	movw	r8, #57636	; 0xe124
   1a624:	movw	r4, #57632	; 0xe120
   1a628:	str	r0, [sp, #28]
   1a62c:	ldr	r0, [r0]
   1a630:	movt	r8, #2
   1a634:	movt	r4, #2
   1a638:	ldr	r1, [r8]
   1a63c:	ldr	r6, [r4]
   1a640:	str	r0, [sp, #24]
   1a644:	cmp	r1, r5
   1a648:	ble	1a654 <__assert_fail@plt+0x92d8>
   1a64c:	mov	sl, r6
   1a650:	b	1a6bc <__assert_fail@plt+0x9340>
   1a654:	movw	r9, #57640	; 0xe128
   1a658:	mov	r0, #8
   1a65c:	add	r2, r5, #1
   1a660:	str	r1, [fp, #-32]	; 0xffffffe0
   1a664:	mvn	r3, #-2147483648	; 0x80000000
   1a668:	movt	r9, #2
   1a66c:	str	r0, [sp]
   1a670:	sub	r2, r2, r1
   1a674:	sub	r1, fp, #32
   1a678:	subs	r0, r6, r9
   1a67c:	movne	r0, r6
   1a680:	bl	1b300 <__assert_fail@plt+0x9f84>
   1a684:	cmp	r6, r9
   1a688:	mov	sl, r0
   1a68c:	str	r0, [r4]
   1a690:	ldrdeq	r0, [r9]
   1a694:	stmeq	sl, {r0, r1}
   1a698:	ldr	r1, [r8]
   1a69c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1a6a0:	add	r0, sl, r1, lsl #3
   1a6a4:	sub	r1, r2, r1
   1a6a8:	lsl	r2, r1, #3
   1a6ac:	mov	r1, #0
   1a6b0:	bl	11274 <memset@plt>
   1a6b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a6b8:	str	r0, [r8]
   1a6bc:	mov	r9, sl
   1a6c0:	ldr	r6, [r9, r5, lsl #3]!
   1a6c4:	ldr	r4, [r9, #4]!
   1a6c8:	ldm	r7, {r0, r1}
   1a6cc:	ldr	r2, [r7, #40]	; 0x28
   1a6d0:	ldr	r3, [r7, #44]	; 0x2c
   1a6d4:	orr	r8, r1, #1
   1a6d8:	add	r1, r7, #8
   1a6dc:	stm	sp, {r0, r8}
   1a6e0:	add	r0, sp, #8
   1a6e4:	str	r1, [sp, #20]
   1a6e8:	stm	r0, {r1, r2, r3}
   1a6ec:	mov	r0, r4
   1a6f0:	mov	r1, r6
   1a6f4:	ldr	r2, [sp, #32]
   1a6f8:	ldr	r3, [sp, #36]	; 0x24
   1a6fc:	bl	193d0 <__assert_fail@plt+0x8054>
   1a700:	cmp	r6, r0
   1a704:	bhi	1a768 <__assert_fail@plt+0x93ec>
   1a708:	add	r6, r0, #1
   1a70c:	movw	r0, #57824	; 0xe1e0
   1a710:	movt	r0, #2
   1a714:	str	r6, [sl, r5, lsl #3]
   1a718:	cmp	r4, r0
   1a71c:	beq	1a728 <__assert_fail@plt+0x93ac>
   1a720:	mov	r0, r4
   1a724:	bl	190d0 <__assert_fail@plt+0x7d54>
   1a728:	mov	r0, r6
   1a72c:	bl	1b1d0 <__assert_fail@plt+0x9e54>
   1a730:	str	r0, [r9]
   1a734:	mov	r4, r0
   1a738:	add	r3, sp, #8
   1a73c:	ldr	r0, [r7]
   1a740:	ldr	r1, [r7, #40]	; 0x28
   1a744:	ldr	r2, [r7, #44]	; 0x2c
   1a748:	stm	sp, {r0, r8}
   1a74c:	ldr	r0, [sp, #20]
   1a750:	stm	r3, {r0, r1, r2}
   1a754:	mov	r0, r4
   1a758:	mov	r1, r6
   1a75c:	ldr	r2, [sp, #32]
   1a760:	ldr	r3, [sp, #36]	; 0x24
   1a764:	bl	193d0 <__assert_fail@plt+0x8054>
   1a768:	ldr	r0, [sp, #28]
   1a76c:	ldr	r1, [sp, #24]
   1a770:	str	r1, [r0]
   1a774:	mov	r0, r4
   1a778:	sub	sp, fp, #28
   1a77c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a780:	bl	11340 <abort@plt>
   1a784:	movw	r3, #57776	; 0xe1b0
   1a788:	movt	r3, #2
   1a78c:	b	1a5f0 <__assert_fail@plt+0x9274>
   1a790:	movw	r3, #57776	; 0xe1b0
   1a794:	mov	r1, r0
   1a798:	mov	r0, #0
   1a79c:	mvn	r2, #0
   1a7a0:	movt	r3, #2
   1a7a4:	b	1a5f0 <__assert_fail@plt+0x9274>
   1a7a8:	movw	r3, #57776	; 0xe1b0
   1a7ac:	mov	r2, r1
   1a7b0:	mov	r1, r0
   1a7b4:	mov	r0, #0
   1a7b8:	movt	r3, #2
   1a7bc:	b	1a5f0 <__assert_fail@plt+0x9274>
   1a7c0:	push	{fp, lr}
   1a7c4:	mov	fp, sp
   1a7c8:	sub	sp, sp, #48	; 0x30
   1a7cc:	vmov.i32	q8, #0	; 0x00000000
   1a7d0:	mov	ip, #32
   1a7d4:	mov	r3, sp
   1a7d8:	mov	lr, r2
   1a7dc:	cmp	r1, #10
   1a7e0:	add	r2, r3, #16
   1a7e4:	vst1.64	{d16-d17}, [r3], ip
   1a7e8:	vst1.64	{d16-d17}, [r3]
   1a7ec:	vst1.64	{d16-d17}, [r2]
   1a7f0:	beq	1a810 <__assert_fail@plt+0x9494>
   1a7f4:	str	r1, [sp]
   1a7f8:	mov	r3, sp
   1a7fc:	mov	r1, lr
   1a800:	mvn	r2, #0
   1a804:	bl	1a5f0 <__assert_fail@plt+0x9274>
   1a808:	mov	sp, fp
   1a80c:	pop	{fp, pc}
   1a810:	bl	11340 <abort@plt>
   1a814:	push	{r4, sl, fp, lr}
   1a818:	add	fp, sp, #8
   1a81c:	sub	sp, sp, #48	; 0x30
   1a820:	mov	ip, r3
   1a824:	mov	r3, sp
   1a828:	vmov.i32	q8, #0	; 0x00000000
   1a82c:	mov	lr, #32
   1a830:	cmp	r1, #10
   1a834:	add	r4, r3, #16
   1a838:	vst1.64	{d16-d17}, [r3], lr
   1a83c:	vst1.64	{d16-d17}, [r3]
   1a840:	vst1.64	{d16-d17}, [r4]
   1a844:	beq	1a864 <__assert_fail@plt+0x94e8>
   1a848:	str	r1, [sp]
   1a84c:	mov	r1, r2
   1a850:	mov	r3, sp
   1a854:	mov	r2, ip
   1a858:	bl	1a5f0 <__assert_fail@plt+0x9274>
   1a85c:	sub	sp, fp, #8
   1a860:	pop	{r4, sl, fp, pc}
   1a864:	bl	11340 <abort@plt>
   1a868:	mov	r2, r1
   1a86c:	mov	r1, r0
   1a870:	mov	r0, #0
   1a874:	b	1a7c0 <__assert_fail@plt+0x9444>
   1a878:	mov	r3, r2
   1a87c:	mov	r2, r1
   1a880:	mov	r1, r0
   1a884:	mov	r0, #0
   1a888:	b	1a814 <__assert_fail@plt+0x9498>
   1a88c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1a890:	add	fp, sp, #24
   1a894:	sub	sp, sp, #48	; 0x30
   1a898:	movw	r8, #57776	; 0xe1b0
   1a89c:	mov	lr, r0
   1a8a0:	mov	r3, sp
   1a8a4:	mov	ip, r1
   1a8a8:	movt	r8, #2
   1a8ac:	mov	r1, r3
   1a8b0:	ldm	r8!, {r0, r4, r5, r6, r7, r9}
   1a8b4:	stmia	r1!, {r0, r4, r5, r6, r7, r9}
   1a8b8:	ldm	r8, {r0, r4, r5, r6, r7, r9}
   1a8bc:	stm	r1, {r0, r4, r5, r6, r7, r9}
   1a8c0:	ubfx	r0, r2, #5, #3
   1a8c4:	and	r2, r2, #31
   1a8c8:	mov	r4, #1
   1a8cc:	add	r0, r3, r0, lsl #2
   1a8d0:	ldr	r1, [r0, #8]
   1a8d4:	bic	r4, r4, r1, lsr r2
   1a8d8:	eor	r1, r1, r4, lsl r2
   1a8dc:	mov	r2, ip
   1a8e0:	str	r1, [r0, #8]
   1a8e4:	mov	r0, #0
   1a8e8:	mov	r1, lr
   1a8ec:	bl	1a5f0 <__assert_fail@plt+0x9274>
   1a8f0:	sub	sp, fp, #24
   1a8f4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1a8f8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1a8fc:	add	fp, sp, #24
   1a900:	sub	sp, sp, #48	; 0x30
   1a904:	movw	lr, #57776	; 0xe1b0
   1a908:	mov	ip, r0
   1a90c:	mov	r3, sp
   1a910:	movt	lr, #2
   1a914:	mov	r2, r3
   1a918:	ldm	lr!, {r0, r4, r5, r6, r7, r8}
   1a91c:	stmia	r2!, {r0, r4, r5, r6, r7, r8}
   1a920:	ldm	lr, {r0, r4, r5, r6, r7, r8}
   1a924:	stm	r2, {r0, r4, r5, r6, r7, r8}
   1a928:	ubfx	r0, r1, #5, #3
   1a92c:	and	r1, r1, #31
   1a930:	mov	r7, #1
   1a934:	add	r0, r3, r0, lsl #2
   1a938:	ldr	r2, [r0, #8]
   1a93c:	bic	r7, r7, r2, lsr r1
   1a940:	eor	r1, r2, r7, lsl r1
   1a944:	mvn	r2, #0
   1a948:	str	r1, [r0, #8]
   1a94c:	mov	r0, #0
   1a950:	mov	r1, ip
   1a954:	bl	1a5f0 <__assert_fail@plt+0x9274>
   1a958:	sub	sp, fp, #24
   1a95c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a960:	push	{r4, r5, r6, r7, fp, lr}
   1a964:	add	fp, sp, #16
   1a968:	sub	sp, sp, #48	; 0x30
   1a96c:	movw	lr, #57776	; 0xe1b0
   1a970:	mov	ip, r0
   1a974:	mov	r3, sp
   1a978:	movt	lr, #2
   1a97c:	mov	r2, r3
   1a980:	ldm	lr!, {r0, r1, r4, r5, r6, r7}
   1a984:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   1a988:	ldm	lr, {r0, r1, r4, r5, r6, r7}
   1a98c:	stm	r2, {r0, r1, r4, r5, r6, r7}
   1a990:	mov	r1, ip
   1a994:	mvn	r2, #0
   1a998:	ldr	r0, [sp, #12]
   1a99c:	orr	r0, r0, #67108864	; 0x4000000
   1a9a0:	str	r0, [sp, #12]
   1a9a4:	mov	r0, #0
   1a9a8:	bl	1a5f0 <__assert_fail@plt+0x9274>
   1a9ac:	sub	sp, fp, #16
   1a9b0:	pop	{r4, r5, r6, r7, fp, pc}
   1a9b4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1a9b8:	add	fp, sp, #24
   1a9bc:	sub	sp, sp, #48	; 0x30
   1a9c0:	movw	r8, #57776	; 0xe1b0
   1a9c4:	mov	ip, r1
   1a9c8:	mov	lr, r0
   1a9cc:	mov	r3, sp
   1a9d0:	movt	r8, #2
   1a9d4:	mov	r2, r3
   1a9d8:	ldm	r8!, {r0, r1, r4, r5, r6, r7}
   1a9dc:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   1a9e0:	ldm	r8, {r0, r1, r4, r5, r6, r7}
   1a9e4:	stm	r2, {r0, r1, r4, r5, r6, r7}
   1a9e8:	mov	r1, lr
   1a9ec:	mov	r2, ip
   1a9f0:	ldr	r0, [sp, #12]
   1a9f4:	orr	r0, r0, #67108864	; 0x4000000
   1a9f8:	str	r0, [sp, #12]
   1a9fc:	mov	r0, #0
   1aa00:	bl	1a5f0 <__assert_fail@plt+0x9274>
   1aa04:	sub	sp, fp, #24
   1aa08:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1aa0c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1aa10:	add	fp, sp, #24
   1aa14:	sub	sp, sp, #96	; 0x60
   1aa18:	mov	lr, sp
   1aa1c:	vmov.i32	q8, #0	; 0x00000000
   1aa20:	mov	ip, r2
   1aa24:	cmp	r1, #10
   1aa28:	add	r3, lr, #16
   1aa2c:	mov	r2, lr
   1aa30:	vst1.64	{d16-d17}, [r3]
   1aa34:	mov	r3, #28
   1aa38:	vst1.64	{d16-d17}, [r2], r3
   1aa3c:	vst1.32	{d16-d17}, [r2]
   1aa40:	beq	1aa80 <__assert_fail@plt+0x9704>
   1aa44:	str	r1, [sp, #48]	; 0x30
   1aa48:	add	r3, sp, #48	; 0x30
   1aa4c:	ldm	lr!, {r2, r4, r5, r6, r7}
   1aa50:	add	r1, r3, #4
   1aa54:	stmia	r1!, {r2, r4, r5, r6, r7}
   1aa58:	ldm	lr, {r2, r4, r5, r6, r7, r8}
   1aa5c:	stm	r1, {r2, r4, r5, r6, r7, r8}
   1aa60:	mvn	r2, #0
   1aa64:	ldr	r1, [sp, #60]	; 0x3c
   1aa68:	orr	r1, r1, #67108864	; 0x4000000
   1aa6c:	str	r1, [sp, #60]	; 0x3c
   1aa70:	mov	r1, ip
   1aa74:	bl	1a5f0 <__assert_fail@plt+0x9274>
   1aa78:	sub	sp, fp, #24
   1aa7c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1aa80:	bl	11340 <abort@plt>
   1aa84:	push	{fp, lr}
   1aa88:	mov	fp, sp
   1aa8c:	sub	sp, sp, #8
   1aa90:	mvn	ip, #0
   1aa94:	str	ip, [sp]
   1aa98:	bl	1aaa4 <__assert_fail@plt+0x9728>
   1aa9c:	mov	sp, fp
   1aaa0:	pop	{fp, pc}
   1aaa4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1aaa8:	add	fp, sp, #24
   1aaac:	sub	sp, sp, #48	; 0x30
   1aab0:	movw	ip, #57776	; 0xe1b0
   1aab4:	mov	lr, r3
   1aab8:	mov	r3, sp
   1aabc:	cmp	r1, #0
   1aac0:	movt	ip, #2
   1aac4:	cmpne	r2, #0
   1aac8:	ldm	ip!, {r4, r5, r6, r7, r8, r9}
   1aacc:	stmia	r3!, {r4, r5, r6, r7, r8, r9}
   1aad0:	ldm	ip, {r4, r5, r6, r7, r8, r9}
   1aad4:	stm	r3, {r4, r5, r6, r7, r8, r9}
   1aad8:	mov	r3, #10
   1aadc:	str	r3, [sp]
   1aae0:	bne	1aae8 <__assert_fail@plt+0x976c>
   1aae4:	bl	11340 <abort@plt>
   1aae8:	ldr	ip, [fp, #8]
   1aaec:	str	r2, [sp, #44]	; 0x2c
   1aaf0:	str	r1, [sp, #40]	; 0x28
   1aaf4:	mov	r3, sp
   1aaf8:	mov	r1, lr
   1aafc:	mov	r2, ip
   1ab00:	bl	1a5f0 <__assert_fail@plt+0x9274>
   1ab04:	sub	sp, fp, #24
   1ab08:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1ab0c:	push	{fp, lr}
   1ab10:	mov	fp, sp
   1ab14:	sub	sp, sp, #8
   1ab18:	mov	r3, r2
   1ab1c:	mov	r2, r1
   1ab20:	mov	r1, r0
   1ab24:	mvn	r0, #0
   1ab28:	str	r0, [sp]
   1ab2c:	mov	r0, #0
   1ab30:	bl	1aaa4 <__assert_fail@plt+0x9728>
   1ab34:	mov	sp, fp
   1ab38:	pop	{fp, pc}
   1ab3c:	push	{fp, lr}
   1ab40:	mov	fp, sp
   1ab44:	sub	sp, sp, #8
   1ab48:	mov	ip, r2
   1ab4c:	mov	r2, r1
   1ab50:	mov	r1, r0
   1ab54:	str	r3, [sp]
   1ab58:	mov	r0, #0
   1ab5c:	mov	r3, ip
   1ab60:	bl	1aaa4 <__assert_fail@plt+0x9728>
   1ab64:	mov	sp, fp
   1ab68:	pop	{fp, pc}
   1ab6c:	movw	r3, #57648	; 0xe130
   1ab70:	movt	r3, #2
   1ab74:	b	1a5f0 <__assert_fail@plt+0x9274>
   1ab78:	movw	r3, #57648	; 0xe130
   1ab7c:	mov	r2, r1
   1ab80:	mov	r1, r0
   1ab84:	mov	r0, #0
   1ab88:	movt	r3, #2
   1ab8c:	b	1a5f0 <__assert_fail@plt+0x9274>
   1ab90:	movw	r3, #57648	; 0xe130
   1ab94:	mvn	r2, #0
   1ab98:	movt	r3, #2
   1ab9c:	b	1a5f0 <__assert_fail@plt+0x9274>
   1aba0:	movw	r3, #57648	; 0xe130
   1aba4:	mov	r1, r0
   1aba8:	mov	r0, #0
   1abac:	mvn	r2, #0
   1abb0:	movt	r3, #2
   1abb4:	b	1a5f0 <__assert_fail@plt+0x9274>
   1abb8:	push	{r4, r5, fp, lr}
   1abbc:	add	fp, sp, #8
   1abc0:	mov	r5, r0
   1abc4:	mov	r4, r1
   1abc8:	mov	r0, #0
   1abcc:	mov	r2, #5
   1abd0:	mov	r1, r5
   1abd4:	bl	11148 <dcgettext@plt>
   1abd8:	cmp	r0, r5
   1abdc:	popne	{r4, r5, fp, pc}
   1abe0:	bl	1c118 <__assert_fail@plt+0xad9c>
   1abe4:	ldrb	r1, [r0]
   1abe8:	and	r1, r1, #223	; 0xdf
   1abec:	cmp	r1, #71	; 0x47
   1abf0:	beq	1ac58 <__assert_fail@plt+0x98dc>
   1abf4:	cmp	r1, #85	; 0x55
   1abf8:	bne	1ac7c <__assert_fail@plt+0x9900>
   1abfc:	ldrb	r1, [r0, #1]
   1ac00:	and	r1, r1, #223	; 0xdf
   1ac04:	cmp	r1, #84	; 0x54
   1ac08:	bne	1ac7c <__assert_fail@plt+0x9900>
   1ac0c:	ldrb	r1, [r0, #2]
   1ac10:	and	r1, r1, #223	; 0xdf
   1ac14:	cmp	r1, #70	; 0x46
   1ac18:	ldrbeq	r1, [r0, #3]
   1ac1c:	cmpeq	r1, #45	; 0x2d
   1ac20:	bne	1ac7c <__assert_fail@plt+0x9900>
   1ac24:	ldrb	r1, [r0, #4]
   1ac28:	cmp	r1, #56	; 0x38
   1ac2c:	ldrbeq	r0, [r0, #5]
   1ac30:	cmpeq	r0, #0
   1ac34:	bne	1ac7c <__assert_fail@plt+0x9900>
   1ac38:	ldrb	r1, [r5]
   1ac3c:	movw	r2, #54260	; 0xd3f4
   1ac40:	movw	r0, #54264	; 0xd3f8
   1ac44:	movt	r2, #1
   1ac48:	movt	r0, #1
   1ac4c:	cmp	r1, #96	; 0x60
   1ac50:	moveq	r0, r2
   1ac54:	pop	{r4, r5, fp, pc}
   1ac58:	ldrb	r1, [r0, #1]
   1ac5c:	and	r1, r1, #223	; 0xdf
   1ac60:	cmp	r1, #66	; 0x42
   1ac64:	bne	1ac7c <__assert_fail@plt+0x9900>
   1ac68:	ldrb	r1, [r0, #2]
   1ac6c:	cmp	r1, #49	; 0x31
   1ac70:	ldrbeq	r1, [r0, #3]
   1ac74:	cmpeq	r1, #56	; 0x38
   1ac78:	beq	1ac98 <__assert_fail@plt+0x991c>
   1ac7c:	movw	r1, #54254	; 0xd3ee
   1ac80:	movw	r0, #54258	; 0xd3f2
   1ac84:	cmp	r4, #9
   1ac88:	movt	r1, #1
   1ac8c:	movt	r0, #1
   1ac90:	moveq	r0, r1
   1ac94:	pop	{r4, r5, fp, pc}
   1ac98:	ldrb	r1, [r0, #4]
   1ac9c:	cmp	r1, #48	; 0x30
   1aca0:	ldrbeq	r1, [r0, #5]
   1aca4:	cmpeq	r1, #51	; 0x33
   1aca8:	bne	1ac7c <__assert_fail@plt+0x9900>
   1acac:	ldrb	r1, [r0, #6]
   1acb0:	cmp	r1, #48	; 0x30
   1acb4:	ldrbeq	r0, [r0, #7]
   1acb8:	cmpeq	r0, #0
   1acbc:	bne	1ac7c <__assert_fail@plt+0x9900>
   1acc0:	ldrb	r1, [r5]
   1acc4:	movw	r2, #54268	; 0xd3fc
   1acc8:	movw	r0, #54272	; 0xd400
   1accc:	movt	r2, #1
   1acd0:	movt	r0, #1
   1acd4:	b	1ac4c <__assert_fail@plt+0x98d0>
   1acd8:	mov	r1, #0
   1acdc:	mov	r2, #3
   1ace0:	b	1bf40 <__assert_fail@plt+0xabc4>
   1ace4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1ace8:	add	fp, sp, #24
   1acec:	sub	sp, sp, #32
   1acf0:	ldr	r6, [fp, #12]
   1acf4:	ldr	r7, [fp, #8]
   1acf8:	mov	r4, r2
   1acfc:	mov	r8, r0
   1ad00:	cmp	r1, #0
   1ad04:	beq	1ad2c <__assert_fail@plt+0x99b0>
   1ad08:	movw	r2, #54360	; 0xd458
   1ad0c:	mov	r5, r1
   1ad10:	str	r3, [sp, #4]
   1ad14:	str	r4, [sp]
   1ad18:	mov	r0, r8
   1ad1c:	mov	r1, #1
   1ad20:	movt	r2, #1
   1ad24:	mov	r3, r5
   1ad28:	b	1ad44 <__assert_fail@plt+0x99c8>
   1ad2c:	movw	r2, #54372	; 0xd464
   1ad30:	str	r3, [sp]
   1ad34:	mov	r0, r8
   1ad38:	mov	r1, #1
   1ad3c:	mov	r3, r4
   1ad40:	movt	r2, #1
   1ad44:	bl	112a4 <__fprintf_chk@plt>
   1ad48:	movw	r1, #54379	; 0xd46b
   1ad4c:	mov	r0, #0
   1ad50:	mov	r2, #5
   1ad54:	movt	r1, #1
   1ad58:	bl	11148 <dcgettext@plt>
   1ad5c:	movw	r2, #55097	; 0xd739
   1ad60:	mov	r3, r0
   1ad64:	movw	r0, #2022	; 0x7e6
   1ad68:	mov	r1, #1
   1ad6c:	str	r0, [sp]
   1ad70:	movt	r2, #1
   1ad74:	mov	r0, r8
   1ad78:	bl	112a4 <__fprintf_chk@plt>
   1ad7c:	movw	r4, #51458	; 0xc902
   1ad80:	mov	r1, r8
   1ad84:	movt	r4, #1
   1ad88:	mov	r0, r4
   1ad8c:	bl	110c4 <fputs_unlocked@plt>
   1ad90:	movw	r1, #54383	; 0xd46f
   1ad94:	mov	r0, #0
   1ad98:	mov	r2, #5
   1ad9c:	movt	r1, #1
   1ada0:	bl	11148 <dcgettext@plt>
   1ada4:	movw	r3, #54554	; 0xd51a
   1ada8:	mov	r2, r0
   1adac:	mov	r0, r8
   1adb0:	mov	r1, #1
   1adb4:	movt	r3, #1
   1adb8:	bl	112a4 <__fprintf_chk@plt>
   1adbc:	mov	r0, r4
   1adc0:	mov	r1, r8
   1adc4:	bl	110c4 <fputs_unlocked@plt>
   1adc8:	cmp	r6, #9
   1adcc:	bhi	1ae30 <__assert_fail@plt+0x9ab4>
   1add0:	add	r0, pc, #0
   1add4:	ldr	pc, [r0, r6, lsl #2]
   1add8:	andeq	fp, r1, r8
   1addc:	andeq	sl, r1, r0, lsl #28
   1ade0:	andeq	sl, r1, ip, lsr lr
   1ade4:	andeq	sl, r1, r4, ror #28
   1ade8:	andeq	sl, r1, ip, lsl #29
   1adec:			; <UNDEFINED> instruction: 0x0001aeb4
   1adf0:	ldrdeq	sl, [r1], -ip
   1adf4:	andeq	sl, r1, r4, lsl pc
   1adf8:			; <UNDEFINED> instruction: 0x0001afb4
   1adfc:	andeq	sl, r1, ip, asr pc
   1ae00:	movw	r1, #54588	; 0xd53c
   1ae04:	mov	r0, #0
   1ae08:	mov	r2, #5
   1ae0c:	movt	r1, #1
   1ae10:	bl	11148 <dcgettext@plt>
   1ae14:	ldr	r3, [r7]
   1ae18:	mov	r2, r0
   1ae1c:	mov	r0, r8
   1ae20:	mov	r1, #1
   1ae24:	sub	sp, fp, #24
   1ae28:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1ae2c:	b	112a4 <__fprintf_chk@plt>
   1ae30:	movw	r1, #54907	; 0xd67b
   1ae34:	movt	r1, #1
   1ae38:	b	1af64 <__assert_fail@plt+0x9be8>
   1ae3c:	movw	r1, #54604	; 0xd54c
   1ae40:	mov	r0, #0
   1ae44:	mov	r2, #5
   1ae48:	movt	r1, #1
   1ae4c:	bl	11148 <dcgettext@plt>
   1ae50:	mov	r2, r0
   1ae54:	ldr	r3, [r7]
   1ae58:	ldr	r0, [r7, #4]
   1ae5c:	str	r0, [sp]
   1ae60:	b	1af50 <__assert_fail@plt+0x9bd4>
   1ae64:	movw	r1, #54627	; 0xd563
   1ae68:	mov	r0, #0
   1ae6c:	mov	r2, #5
   1ae70:	movt	r1, #1
   1ae74:	bl	11148 <dcgettext@plt>
   1ae78:	ldr	r3, [r7]
   1ae7c:	mov	r2, r0
   1ae80:	ldmib	r7, {r0, r1}
   1ae84:	stm	sp, {r0, r1}
   1ae88:	b	1af50 <__assert_fail@plt+0x9bd4>
   1ae8c:	movw	r1, #54655	; 0xd57f
   1ae90:	mov	r0, #0
   1ae94:	mov	r2, #5
   1ae98:	movt	r1, #1
   1ae9c:	bl	11148 <dcgettext@plt>
   1aea0:	ldr	r3, [r7]
   1aea4:	mov	r2, r0
   1aea8:	ldmib	r7, {r0, r1, r7}
   1aeac:	stm	sp, {r0, r1, r7}
   1aeb0:	b	1af50 <__assert_fail@plt+0x9bd4>
   1aeb4:	movw	r1, #54687	; 0xd59f
   1aeb8:	mov	r0, #0
   1aebc:	mov	r2, #5
   1aec0:	movt	r1, #1
   1aec4:	bl	11148 <dcgettext@plt>
   1aec8:	ldr	r3, [r7]
   1aecc:	mov	r2, r0
   1aed0:	ldmib	r7, {r0, r1, r6, r7}
   1aed4:	stm	sp, {r0, r1, r6, r7}
   1aed8:	b	1af50 <__assert_fail@plt+0x9bd4>
   1aedc:	movw	r1, #54723	; 0xd5c3
   1aee0:	mov	r0, #0
   1aee4:	mov	r2, #5
   1aee8:	movt	r1, #1
   1aeec:	bl	11148 <dcgettext@plt>
   1aef0:	ldr	r3, [r7]
   1aef4:	mov	r2, r0
   1aef8:	ldmib	r7, {r0, r1, r6}
   1aefc:	ldr	r5, [r7, #16]
   1af00:	ldr	r7, [r7, #20]
   1af04:	stm	sp, {r0, r1, r6}
   1af08:	str	r5, [sp, #12]
   1af0c:	str	r7, [sp, #16]
   1af10:	b	1af50 <__assert_fail@plt+0x9bd4>
   1af14:	movw	r1, #54763	; 0xd5eb
   1af18:	mov	r0, #0
   1af1c:	mov	r2, #5
   1af20:	movt	r1, #1
   1af24:	bl	11148 <dcgettext@plt>
   1af28:	ldr	r3, [r7]
   1af2c:	mov	r2, r0
   1af30:	ldmib	r7, {r0, r1, r6}
   1af34:	ldr	r5, [r7, #16]
   1af38:	ldr	r4, [r7, #20]
   1af3c:	ldr	r7, [r7, #24]
   1af40:	stm	sp, {r0, r1, r6}
   1af44:	str	r5, [sp, #12]
   1af48:	str	r4, [sp, #16]
   1af4c:	str	r7, [sp, #20]
   1af50:	mov	r0, r8
   1af54:	mov	r1, #1
   1af58:	b	1b004 <__assert_fail@plt+0x9c88>
   1af5c:	movw	r1, #54855	; 0xd647
   1af60:	movt	r1, #1
   1af64:	mov	r0, #0
   1af68:	mov	r2, #5
   1af6c:	bl	11148 <dcgettext@plt>
   1af70:	mov	ip, r0
   1af74:	ldr	r3, [r7]
   1af78:	ldr	r0, [r7, #4]
   1af7c:	ldr	r1, [r7, #8]
   1af80:	ldr	r6, [r7, #12]
   1af84:	ldr	r5, [r7, #16]
   1af88:	ldr	r4, [r7, #20]
   1af8c:	ldr	r2, [r7, #24]
   1af90:	ldr	lr, [r7, #28]
   1af94:	ldr	r7, [r7, #32]
   1af98:	stm	sp, {r0, r1, r6}
   1af9c:	str	r5, [sp, #12]
   1afa0:	str	r4, [sp, #16]
   1afa4:	str	r2, [sp, #20]
   1afa8:	str	lr, [sp, #24]
   1afac:	str	r7, [sp, #28]
   1afb0:	b	1aff8 <__assert_fail@plt+0x9c7c>
   1afb4:	movw	r1, #54807	; 0xd617
   1afb8:	mov	r0, #0
   1afbc:	mov	r2, #5
   1afc0:	movt	r1, #1
   1afc4:	bl	11148 <dcgettext@plt>
   1afc8:	mov	ip, r0
   1afcc:	ldr	r3, [r7]
   1afd0:	ldmib	r7, {r0, r1, r6}
   1afd4:	ldr	r5, [r7, #16]
   1afd8:	ldr	r4, [r7, #20]
   1afdc:	ldr	r2, [r7, #24]
   1afe0:	ldr	r7, [r7, #28]
   1afe4:	stm	sp, {r0, r1, r6}
   1afe8:	str	r5, [sp, #12]
   1afec:	str	r4, [sp, #16]
   1aff0:	str	r2, [sp, #20]
   1aff4:	str	r7, [sp, #24]
   1aff8:	mov	r0, r8
   1affc:	mov	r1, #1
   1b000:	mov	r2, ip
   1b004:	bl	112a4 <__fprintf_chk@plt>
   1b008:	sub	sp, fp, #24
   1b00c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1b010:	push	{r4, sl, fp, lr}
   1b014:	add	fp, sp, #8
   1b018:	sub	sp, sp, #8
   1b01c:	ldr	ip, [fp, #8]
   1b020:	mov	lr, #0
   1b024:	ldr	r4, [ip, lr, lsl #2]
   1b028:	add	lr, lr, #1
   1b02c:	cmp	r4, #0
   1b030:	bne	1b024 <__assert_fail@plt+0x9ca8>
   1b034:	sub	r4, lr, #1
   1b038:	str	ip, [sp]
   1b03c:	str	r4, [sp, #4]
   1b040:	bl	1ace4 <__assert_fail@plt+0x9968>
   1b044:	sub	sp, fp, #8
   1b048:	pop	{r4, sl, fp, pc}
   1b04c:	push	{r4, r5, fp, lr}
   1b050:	add	fp, sp, #8
   1b054:	sub	sp, sp, #48	; 0x30
   1b058:	ldr	r4, [fp, #8]
   1b05c:	mov	ip, #0
   1b060:	add	lr, sp, #8
   1b064:	ldr	r5, [r4]
   1b068:	cmp	r5, #0
   1b06c:	str	r5, [lr, ip, lsl #2]
   1b070:	beq	1b084 <__assert_fail@plt+0x9d08>
   1b074:	add	ip, ip, #1
   1b078:	add	r4, r4, #4
   1b07c:	cmp	ip, #10
   1b080:	bcc	1b064 <__assert_fail@plt+0x9ce8>
   1b084:	str	lr, [sp]
   1b088:	str	ip, [sp, #4]
   1b08c:	bl	1ace4 <__assert_fail@plt+0x9968>
   1b090:	sub	sp, fp, #8
   1b094:	pop	{r4, r5, fp, pc}
   1b098:	push	{fp, lr}
   1b09c:	mov	fp, sp
   1b0a0:	sub	sp, sp, #8
   1b0a4:	add	ip, fp, #8
   1b0a8:	str	ip, [sp, #4]
   1b0ac:	str	ip, [sp]
   1b0b0:	bl	1b04c <__assert_fail@plt+0x9cd0>
   1b0b4:	mov	sp, fp
   1b0b8:	pop	{fp, pc}
   1b0bc:	push	{fp, lr}
   1b0c0:	mov	fp, sp
   1b0c4:	movw	r0, #57724	; 0xe17c
   1b0c8:	movt	r0, #2
   1b0cc:	ldr	r1, [r0]
   1b0d0:	movw	r0, #51458	; 0xc902
   1b0d4:	movt	r0, #1
   1b0d8:	bl	110c4 <fputs_unlocked@plt>
   1b0dc:	movw	r1, #54967	; 0xd6b7
   1b0e0:	mov	r0, #0
   1b0e4:	mov	r2, #5
   1b0e8:	movt	r1, #1
   1b0ec:	bl	11148 <dcgettext@plt>
   1b0f0:	movw	r2, #54987	; 0xd6cb
   1b0f4:	mov	r1, r0
   1b0f8:	mov	r0, #1
   1b0fc:	movt	r2, #1
   1b100:	bl	11280 <__printf_chk@plt>
   1b104:	movw	r1, #55009	; 0xd6e1
   1b108:	mov	r0, #0
   1b10c:	mov	r2, #5
   1b110:	movt	r1, #1
   1b114:	bl	11148 <dcgettext@plt>
   1b118:	movw	r2, #52047	; 0xcb4f
   1b11c:	movw	r3, #52942	; 0xcece
   1b120:	mov	r1, r0
   1b124:	mov	r0, #1
   1b128:	movt	r2, #1
   1b12c:	movt	r3, #1
   1b130:	bl	11280 <__printf_chk@plt>
   1b134:	movw	r1, #55029	; 0xd6f5
   1b138:	mov	r0, #0
   1b13c:	mov	r2, #5
   1b140:	movt	r1, #1
   1b144:	bl	11148 <dcgettext@plt>
   1b148:	movw	r2, #55068	; 0xd71c
   1b14c:	mov	r1, r0
   1b150:	mov	r0, #1
   1b154:	movt	r2, #1
   1b158:	pop	{fp, lr}
   1b15c:	b	11280 <__printf_chk@plt>
   1b160:	b	1b164 <__assert_fail@plt+0x9de8>
   1b164:	push	{r4, r5, r6, sl, fp, lr}
   1b168:	add	fp, sp, #16
   1b16c:	mov	r4, r2
   1b170:	mov	r5, r1
   1b174:	mov	r6, r0
   1b178:	bl	1c1b0 <__assert_fail@plt+0xae34>
   1b17c:	cmp	r0, #0
   1b180:	popne	{r4, r5, r6, sl, fp, pc}
   1b184:	cmp	r6, #0
   1b188:	beq	1b19c <__assert_fail@plt+0x9e20>
   1b18c:	cmp	r5, #0
   1b190:	cmpne	r4, #0
   1b194:	bne	1b19c <__assert_fail@plt+0x9e20>
   1b198:	pop	{r4, r5, r6, sl, fp, pc}
   1b19c:	bl	1b5f0 <__assert_fail@plt+0xa274>
   1b1a0:	push	{fp, lr}
   1b1a4:	mov	fp, sp
   1b1a8:	bl	1be40 <__assert_fail@plt+0xaac4>
   1b1ac:	cmp	r0, #0
   1b1b0:	popne	{fp, pc}
   1b1b4:	bl	1b5f0 <__assert_fail@plt+0xa274>
   1b1b8:	push	{fp, lr}
   1b1bc:	mov	fp, sp
   1b1c0:	bl	1be40 <__assert_fail@plt+0xaac4>
   1b1c4:	cmp	r0, #0
   1b1c8:	popne	{fp, pc}
   1b1cc:	bl	1b5f0 <__assert_fail@plt+0xa274>
   1b1d0:	push	{fp, lr}
   1b1d4:	mov	fp, sp
   1b1d8:	bl	1be40 <__assert_fail@plt+0xaac4>
   1b1dc:	cmp	r0, #0
   1b1e0:	popne	{fp, pc}
   1b1e4:	bl	1b5f0 <__assert_fail@plt+0xa274>
   1b1e8:	push	{r4, r5, fp, lr}
   1b1ec:	add	fp, sp, #8
   1b1f0:	mov	r4, r1
   1b1f4:	mov	r5, r0
   1b1f8:	bl	1be70 <__assert_fail@plt+0xaaf4>
   1b1fc:	cmp	r0, #0
   1b200:	popne	{r4, r5, fp, pc}
   1b204:	cmp	r5, #0
   1b208:	beq	1b218 <__assert_fail@plt+0x9e9c>
   1b20c:	cmp	r4, #0
   1b210:	bne	1b218 <__assert_fail@plt+0x9e9c>
   1b214:	pop	{r4, r5, fp, pc}
   1b218:	bl	1b5f0 <__assert_fail@plt+0xa274>
   1b21c:	push	{fp, lr}
   1b220:	mov	fp, sp
   1b224:	cmp	r1, #0
   1b228:	orreq	r1, r1, #1
   1b22c:	bl	1be70 <__assert_fail@plt+0xaaf4>
   1b230:	cmp	r0, #0
   1b234:	popne	{fp, pc}
   1b238:	bl	1b5f0 <__assert_fail@plt+0xa274>
   1b23c:	push	{fp, lr}
   1b240:	mov	fp, sp
   1b244:	clz	r3, r2
   1b248:	lsr	ip, r3, #5
   1b24c:	clz	r3, r1
   1b250:	lsr	r3, r3, #5
   1b254:	orrs	r3, r3, ip
   1b258:	movwne	r1, #1
   1b25c:	movwne	r2, #1
   1b260:	bl	1c1b0 <__assert_fail@plt+0xae34>
   1b264:	cmp	r0, #0
   1b268:	popne	{fp, pc}
   1b26c:	bl	1b5f0 <__assert_fail@plt+0xa274>
   1b270:	push	{fp, lr}
   1b274:	mov	fp, sp
   1b278:	mov	r2, r1
   1b27c:	mov	r1, r0
   1b280:	mov	r0, #0
   1b284:	bl	1c1b0 <__assert_fail@plt+0xae34>
   1b288:	cmp	r0, #0
   1b28c:	popne	{fp, pc}
   1b290:	bl	1b5f0 <__assert_fail@plt+0xa274>
   1b294:	mov	r2, r1
   1b298:	mov	r1, r0
   1b29c:	mov	r0, #0
   1b2a0:	b	1b23c <__assert_fail@plt+0x9ec0>
   1b2a4:	mov	r2, #1
   1b2a8:	b	1b2ac <__assert_fail@plt+0x9f30>
   1b2ac:	push	{r4, r5, fp, lr}
   1b2b0:	add	fp, sp, #8
   1b2b4:	ldr	r5, [r1]
   1b2b8:	mov	r4, r1
   1b2bc:	cmp	r0, #0
   1b2c0:	beq	1b2d8 <__assert_fail@plt+0x9f5c>
   1b2c4:	mov	r1, #1
   1b2c8:	add	r1, r1, r5, lsr #1
   1b2cc:	adds	r5, r5, r1
   1b2d0:	bcc	1b2f0 <__assert_fail@plt+0x9f74>
   1b2d4:	bl	1b5f0 <__assert_fail@plt+0xa274>
   1b2d8:	cmp	r5, #0
   1b2dc:	bne	1b2f0 <__assert_fail@plt+0x9f74>
   1b2e0:	mov	r1, #64	; 0x40
   1b2e4:	cmp	r2, #64	; 0x40
   1b2e8:	udiv	r5, r1, r2
   1b2ec:	addhi	r5, r5, #1
   1b2f0:	mov	r1, r5
   1b2f4:	bl	1b164 <__assert_fail@plt+0x9de8>
   1b2f8:	str	r5, [r4]
   1b2fc:	pop	{r4, r5, fp, pc}
   1b300:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1b304:	add	fp, sp, #24
   1b308:	ldr	r6, [r1]
   1b30c:	mov	r8, r1
   1b310:	ldr	r4, [fp, #8]
   1b314:	add	r1, r6, r6, asr #1
   1b318:	cmp	r1, r6
   1b31c:	mvnvs	r1, #-2147483648	; 0x80000000
   1b320:	cmp	r1, r3
   1b324:	mov	r5, r1
   1b328:	movgt	r5, r3
   1b32c:	cmn	r3, #1
   1b330:	movle	r5, r1
   1b334:	cmn	r4, #1
   1b338:	ble	1b358 <__assert_fail@plt+0x9fdc>
   1b33c:	cmp	r4, #0
   1b340:	beq	1b3ac <__assert_fail@plt+0xa030>
   1b344:	cmn	r5, #1
   1b348:	ble	1b380 <__assert_fail@plt+0xa004>
   1b34c:	mvn	r7, #-2147483648	; 0x80000000
   1b350:	udiv	r1, r7, r4
   1b354:	b	1b374 <__assert_fail@plt+0x9ff8>
   1b358:	cmn	r5, #1
   1b35c:	ble	1b39c <__assert_fail@plt+0xa020>
   1b360:	cmn	r4, #1
   1b364:	beq	1b3ac <__assert_fail@plt+0xa030>
   1b368:	mov	r1, #-2147483648	; 0x80000000
   1b36c:	mvn	r7, #-2147483648	; 0x80000000
   1b370:	sdiv	r1, r1, r4
   1b374:	cmp	r1, r5
   1b378:	bge	1b3ac <__assert_fail@plt+0xa030>
   1b37c:	b	1b3bc <__assert_fail@plt+0xa040>
   1b380:	beq	1b3ac <__assert_fail@plt+0xa030>
   1b384:	mov	r1, #-2147483648	; 0x80000000
   1b388:	mvn	r7, #-2147483648	; 0x80000000
   1b38c:	sdiv	r1, r1, r5
   1b390:	cmp	r1, r4
   1b394:	bge	1b3ac <__assert_fail@plt+0xa030>
   1b398:	b	1b3bc <__assert_fail@plt+0xa040>
   1b39c:	mvn	r7, #-2147483648	; 0x80000000
   1b3a0:	sdiv	r1, r7, r4
   1b3a4:	cmp	r5, r1
   1b3a8:	blt	1b3bc <__assert_fail@plt+0xa040>
   1b3ac:	mul	r1, r5, r4
   1b3b0:	mov	r7, #64	; 0x40
   1b3b4:	cmp	r1, #63	; 0x3f
   1b3b8:	bgt	1b3c4 <__assert_fail@plt+0xa048>
   1b3bc:	sdiv	r5, r7, r4
   1b3c0:	mul	r1, r5, r4
   1b3c4:	cmp	r0, #0
   1b3c8:	moveq	r7, #0
   1b3cc:	streq	r7, [r8]
   1b3d0:	sub	r7, r5, r6
   1b3d4:	cmp	r7, r2
   1b3d8:	bge	1b47c <__assert_fail@plt+0xa100>
   1b3dc:	add	r5, r6, r2
   1b3e0:	mov	r2, #0
   1b3e4:	mov	r1, #0
   1b3e8:	cmp	r5, r3
   1b3ec:	movwgt	r2, #1
   1b3f0:	cmn	r3, #1
   1b3f4:	movwgt	r1, #1
   1b3f8:	cmp	r5, r6
   1b3fc:	bvs	1b464 <__assert_fail@plt+0xa0e8>
   1b400:	ands	r1, r1, r2
   1b404:	bne	1b464 <__assert_fail@plt+0xa0e8>
   1b408:	cmn	r4, #1
   1b40c:	ble	1b42c <__assert_fail@plt+0xa0b0>
   1b410:	cmp	r4, #0
   1b414:	beq	1b478 <__assert_fail@plt+0xa0fc>
   1b418:	cmn	r5, #1
   1b41c:	ble	1b450 <__assert_fail@plt+0xa0d4>
   1b420:	mvn	r1, #-2147483648	; 0x80000000
   1b424:	udiv	r1, r1, r4
   1b428:	b	1b444 <__assert_fail@plt+0xa0c8>
   1b42c:	cmn	r5, #1
   1b430:	ble	1b468 <__assert_fail@plt+0xa0ec>
   1b434:	cmn	r4, #1
   1b438:	beq	1b478 <__assert_fail@plt+0xa0fc>
   1b43c:	mov	r1, #-2147483648	; 0x80000000
   1b440:	sdiv	r1, r1, r4
   1b444:	cmp	r1, r5
   1b448:	bge	1b478 <__assert_fail@plt+0xa0fc>
   1b44c:	b	1b464 <__assert_fail@plt+0xa0e8>
   1b450:	beq	1b478 <__assert_fail@plt+0xa0fc>
   1b454:	mov	r1, #-2147483648	; 0x80000000
   1b458:	sdiv	r1, r1, r5
   1b45c:	cmp	r1, r4
   1b460:	bge	1b478 <__assert_fail@plt+0xa0fc>
   1b464:	bl	1b5f0 <__assert_fail@plt+0xa274>
   1b468:	mvn	r1, #-2147483648	; 0x80000000
   1b46c:	sdiv	r1, r1, r4
   1b470:	cmp	r5, r1
   1b474:	blt	1b464 <__assert_fail@plt+0xa0e8>
   1b478:	mul	r1, r5, r4
   1b47c:	bl	1b1e8 <__assert_fail@plt+0x9e6c>
   1b480:	str	r5, [r8]
   1b484:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1b488:	push	{fp, lr}
   1b48c:	mov	fp, sp
   1b490:	mov	r1, #1
   1b494:	bl	1bdec <__assert_fail@plt+0xaa70>
   1b498:	cmp	r0, #0
   1b49c:	popne	{fp, pc}
   1b4a0:	bl	1b5f0 <__assert_fail@plt+0xa274>
   1b4a4:	push	{fp, lr}
   1b4a8:	mov	fp, sp
   1b4ac:	bl	1bdec <__assert_fail@plt+0xaa70>
   1b4b0:	cmp	r0, #0
   1b4b4:	popne	{fp, pc}
   1b4b8:	bl	1b5f0 <__assert_fail@plt+0xa274>
   1b4bc:	push	{fp, lr}
   1b4c0:	mov	fp, sp
   1b4c4:	mov	r1, #1
   1b4c8:	bl	1bdec <__assert_fail@plt+0xaa70>
   1b4cc:	cmp	r0, #0
   1b4d0:	popne	{fp, pc}
   1b4d4:	bl	1b5f0 <__assert_fail@plt+0xa274>
   1b4d8:	push	{fp, lr}
   1b4dc:	mov	fp, sp
   1b4e0:	bl	1bdec <__assert_fail@plt+0xaa70>
   1b4e4:	cmp	r0, #0
   1b4e8:	popne	{fp, pc}
   1b4ec:	bl	1b5f0 <__assert_fail@plt+0xa274>
   1b4f0:	push	{r4, r5, r6, sl, fp, lr}
   1b4f4:	add	fp, sp, #16
   1b4f8:	mov	r5, r0
   1b4fc:	mov	r0, r1
   1b500:	mov	r4, r1
   1b504:	bl	1be40 <__assert_fail@plt+0xaac4>
   1b508:	cmp	r0, #0
   1b50c:	beq	1b528 <__assert_fail@plt+0xa1ac>
   1b510:	mov	r1, r5
   1b514:	mov	r2, r4
   1b518:	mov	r6, r0
   1b51c:	bl	11124 <memcpy@plt>
   1b520:	mov	r0, r6
   1b524:	pop	{r4, r5, r6, sl, fp, pc}
   1b528:	bl	1b5f0 <__assert_fail@plt+0xa274>
   1b52c:	push	{r4, r5, r6, sl, fp, lr}
   1b530:	add	fp, sp, #16
   1b534:	mov	r5, r0
   1b538:	mov	r0, r1
   1b53c:	mov	r4, r1
   1b540:	bl	1be40 <__assert_fail@plt+0xaac4>
   1b544:	cmp	r0, #0
   1b548:	beq	1b564 <__assert_fail@plt+0xa1e8>
   1b54c:	mov	r1, r5
   1b550:	mov	r2, r4
   1b554:	mov	r6, r0
   1b558:	bl	11124 <memcpy@plt>
   1b55c:	mov	r0, r6
   1b560:	pop	{r4, r5, r6, sl, fp, pc}
   1b564:	bl	1b5f0 <__assert_fail@plt+0xa274>
   1b568:	push	{r4, r5, r6, sl, fp, lr}
   1b56c:	add	fp, sp, #16
   1b570:	mov	r5, r0
   1b574:	add	r0, r1, #1
   1b578:	mov	r4, r1
   1b57c:	bl	1be40 <__assert_fail@plt+0xaac4>
   1b580:	cmp	r0, #0
   1b584:	beq	1b5ac <__assert_fail@plt+0xa230>
   1b588:	mov	r6, r0
   1b58c:	mov	r0, #0
   1b590:	mov	r1, r5
   1b594:	mov	r2, r4
   1b598:	strb	r0, [r6, r4]
   1b59c:	mov	r0, r6
   1b5a0:	bl	11124 <memcpy@plt>
   1b5a4:	mov	r0, r6
   1b5a8:	pop	{r4, r5, r6, sl, fp, pc}
   1b5ac:	bl	1b5f0 <__assert_fail@plt+0xa274>
   1b5b0:	push	{r4, r5, r6, sl, fp, lr}
   1b5b4:	add	fp, sp, #16
   1b5b8:	mov	r4, r0
   1b5bc:	bl	11238 <strlen@plt>
   1b5c0:	add	r5, r0, #1
   1b5c4:	mov	r0, r5
   1b5c8:	bl	1be40 <__assert_fail@plt+0xaac4>
   1b5cc:	cmp	r0, #0
   1b5d0:	beq	1b5ec <__assert_fail@plt+0xa270>
   1b5d4:	mov	r1, r4
   1b5d8:	mov	r2, r5
   1b5dc:	mov	r6, r0
   1b5e0:	bl	11124 <memcpy@plt>
   1b5e4:	mov	r0, r6
   1b5e8:	pop	{r4, r5, r6, sl, fp, pc}
   1b5ec:	bl	1b5f0 <__assert_fail@plt+0xa274>
   1b5f0:	push	{fp, lr}
   1b5f4:	mov	fp, sp
   1b5f8:	movw	r0, #57624	; 0xe118
   1b5fc:	movw	r1, #55144	; 0xd768
   1b600:	mov	r2, #5
   1b604:	movt	r0, #2
   1b608:	movt	r1, #1
   1b60c:	ldr	r4, [r0]
   1b610:	mov	r0, #0
   1b614:	bl	11148 <dcgettext@plt>
   1b618:	movw	r2, #52014	; 0xcb2e
   1b61c:	mov	r3, r0
   1b620:	mov	r0, r4
   1b624:	mov	r1, #0
   1b628:	movt	r2, #1
   1b62c:	bl	111c0 <error@plt>
   1b630:	bl	11340 <abort@plt>
   1b634:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1b638:	add	fp, sp, #24
   1b63c:	sub	sp, sp, #16
   1b640:	mov	r8, r0
   1b644:	ldr	r0, [fp, #16]
   1b648:	mov	r5, r3
   1b64c:	mov	r6, r2
   1b650:	mov	r2, r1
   1b654:	add	r3, sp, #8
   1b658:	mov	r1, #0
   1b65c:	str	r0, [sp]
   1b660:	mov	r0, r8
   1b664:	bl	1b734 <__assert_fail@plt+0xa3b8>
   1b668:	cmp	r0, #0
   1b66c:	bne	1b700 <__assert_fail@plt+0xa384>
   1b670:	ldr	r4, [sp, #8]
   1b674:	ldr	r7, [sp, #12]
   1b678:	subs	r0, r4, r6
   1b67c:	sbcs	r0, r7, r5
   1b680:	bcc	1b6a4 <__assert_fail@plt+0xa328>
   1b684:	ldr	r1, [fp, #8]
   1b688:	ldr	r0, [fp, #12]
   1b68c:	subs	r1, r1, r4
   1b690:	sbcs	r0, r0, r7
   1b694:	movcs	r0, r4
   1b698:	movcs	r1, r7
   1b69c:	subcs	sp, fp, #24
   1b6a0:	popcs	{r4, r5, r6, r7, r8, sl, fp, pc}
   1b6a4:	bl	11250 <__errno_location@plt>
   1b6a8:	subs	r1, r4, #1073741824	; 0x40000000
   1b6ac:	sbcs	r1, r7, #0
   1b6b0:	bcc	1b6bc <__assert_fail@plt+0xa340>
   1b6b4:	mov	r1, #75	; 0x4b
   1b6b8:	b	1b6c0 <__assert_fail@plt+0xa344>
   1b6bc:	mov	r1, #34	; 0x22
   1b6c0:	str	r1, [r0]
   1b6c4:	ldr	r6, [r0]
   1b6c8:	ldr	r4, [fp, #24]
   1b6cc:	ldr	r5, [fp, #20]
   1b6d0:	mov	r0, r8
   1b6d4:	bl	1aba0 <__assert_fail@plt+0x9824>
   1b6d8:	subs	r1, r6, #22
   1b6dc:	movw	r2, #54103	; 0xd357
   1b6e0:	str	r0, [sp]
   1b6e4:	mov	r3, r5
   1b6e8:	movne	r1, r6
   1b6ec:	cmp	r4, #0
   1b6f0:	movt	r2, #1
   1b6f4:	movweq	r4, #1
   1b6f8:	mov	r0, r4
   1b6fc:	bl	111c0 <error@plt>
   1b700:	cmp	r0, #1
   1b704:	beq	1b71c <__assert_fail@plt+0xa3a0>
   1b708:	cmp	r0, #3
   1b70c:	bne	1b724 <__assert_fail@plt+0xa3a8>
   1b710:	bl	11250 <__errno_location@plt>
   1b714:	mov	r1, #0
   1b718:	b	1b6c0 <__assert_fail@plt+0xa344>
   1b71c:	bl	11250 <__errno_location@plt>
   1b720:	b	1b6b4 <__assert_fail@plt+0xa338>
   1b724:	bl	11250 <__errno_location@plt>
   1b728:	b	1b6c4 <__assert_fail@plt+0xa348>
   1b72c:	mov	r1, #10
   1b730:	b	1b634 <__assert_fail@plt+0xa2b8>
   1b734:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b738:	add	fp, sp, #28
   1b73c:	sub	sp, sp, #20
   1b740:	cmp	r2, #37	; 0x25
   1b744:	bcs	1bdcc <__assert_fail@plt+0xaa50>
   1b748:	mov	r8, r3
   1b74c:	mov	r5, r2
   1b750:	mov	r6, r1
   1b754:	mov	r4, r0
   1b758:	bl	11250 <__errno_location@plt>
   1b75c:	mov	r7, r0
   1b760:	mov	r0, #0
   1b764:	str	r0, [r7]
   1b768:	bl	11214 <__ctype_b_loc@plt>
   1b76c:	ldr	r1, [r0]
   1b770:	mov	r2, r4
   1b774:	ldrb	r0, [r2], #1
   1b778:	add	r3, r1, r0, lsl #1
   1b77c:	ldrb	r3, [r3, #1]
   1b780:	tst	r3, #32
   1b784:	bne	1b774 <__assert_fail@plt+0xa3f8>
   1b788:	add	sl, sp, #16
   1b78c:	cmp	r6, #0
   1b790:	movne	sl, r6
   1b794:	mov	r6, #4
   1b798:	cmp	r0, #45	; 0x2d
   1b79c:	beq	1bdc0 <__assert_fail@plt+0xaa44>
   1b7a0:	mov	r0, r4
   1b7a4:	mov	r1, sl
   1b7a8:	mov	r2, r5
   1b7ac:	str	r8, [sp, #12]
   1b7b0:	bl	11298 <strtoumax@plt>
   1b7b4:	ldr	r5, [sl]
   1b7b8:	cmp	r5, r4
   1b7bc:	beq	1b7e4 <__assert_fail@plt+0xa468>
   1b7c0:	mov	r8, r0
   1b7c4:	ldr	r0, [r7]
   1b7c8:	mov	r9, r1
   1b7cc:	cmp	r0, #0
   1b7d0:	beq	1b814 <__assert_fail@plt+0xa498>
   1b7d4:	cmp	r0, #34	; 0x22
   1b7d8:	bne	1bdc0 <__assert_fail@plt+0xaa44>
   1b7dc:	mov	r6, #1
   1b7e0:	b	1b818 <__assert_fail@plt+0xa49c>
   1b7e4:	ldr	r0, [fp, #8]
   1b7e8:	cmp	r0, #0
   1b7ec:	ldrbne	r1, [r4]
   1b7f0:	cmpne	r1, #0
   1b7f4:	beq	1bdc0 <__assert_fail@plt+0xaa44>
   1b7f8:	bl	11244 <strchr@plt>
   1b7fc:	cmp	r0, #0
   1b800:	beq	1bdc0 <__assert_fail@plt+0xaa44>
   1b804:	mov	r6, #0
   1b808:	mov	r8, #1
   1b80c:	mov	r9, #0
   1b810:	b	1b824 <__assert_fail@plt+0xa4a8>
   1b814:	mov	r6, r0
   1b818:	ldr	r0, [fp, #8]
   1b81c:	cmp	r0, #0
   1b820:	beq	1bdb8 <__assert_fail@plt+0xaa3c>
   1b824:	ldrb	r7, [r5]
   1b828:	cmp	r7, #0
   1b82c:	beq	1bdb8 <__assert_fail@plt+0xaa3c>
   1b830:	ldr	r0, [fp, #8]
   1b834:	mov	r1, r7
   1b838:	bl	11244 <strchr@plt>
   1b83c:	cmp	r0, #0
   1b840:	beq	1b948 <__assert_fail@plt+0xa5cc>
   1b844:	sub	r0, r7, #69	; 0x45
   1b848:	mov	r1, #1
   1b84c:	mov	r3, #0
   1b850:	mov	r4, #1024	; 0x400
   1b854:	cmp	r0, #21
   1b858:	str	r1, [sp, #8]
   1b85c:	bhi	1b874 <__assert_fail@plt+0xa4f8>
   1b860:	movw	r2, #35141	; 0x8945
   1b864:	mov	r1, #1
   1b868:	movt	r2, #48	; 0x30
   1b86c:	tst	r2, r1, lsl r0
   1b870:	bne	1b890 <__assert_fail@plt+0xa514>
   1b874:	sub	r0, r7, #103	; 0x67
   1b878:	cmp	r0, #13
   1b87c:	bhi	1b8c4 <__assert_fail@plt+0xa548>
   1b880:	mov	r1, #1
   1b884:	movw	r2, #8273	; 0x2051
   1b888:	tst	r2, r1, lsl r0
   1b88c:	beq	1b8c4 <__assert_fail@plt+0xa548>
   1b890:	ldr	r0, [fp, #8]
   1b894:	mov	r1, #48	; 0x30
   1b898:	bl	11244 <strchr@plt>
   1b89c:	cmp	r0, #0
   1b8a0:	beq	1b8c0 <__assert_fail@plt+0xa544>
   1b8a4:	ldrb	r0, [r5, #1]
   1b8a8:	cmp	r0, #66	; 0x42
   1b8ac:	cmpne	r0, #68	; 0x44
   1b8b0:	bne	1b9d8 <__assert_fail@plt+0xa65c>
   1b8b4:	mov	r4, #1000	; 0x3e8
   1b8b8:	mov	r0, #2
   1b8bc:	str	r0, [sp, #8]
   1b8c0:	mov	r3, #0
   1b8c4:	cmp	r7, #89	; 0x59
   1b8c8:	stm	sp, {r5, r6}
   1b8cc:	bgt	1b954 <__assert_fail@plt+0xa5d8>
   1b8d0:	sub	r0, r7, #66	; 0x42
   1b8d4:	cmp	r0, #14
   1b8d8:	bhi	1b9fc <__assert_fail@plt+0xa680>
   1b8dc:	add	r1, pc, #0
   1b8e0:	ldr	pc, [r1, r0, lsl #2]
   1b8e4:	andeq	fp, r1, r0, lsr #18
   1b8e8:	andeq	fp, r1, ip, lsr #25
   1b8ec:	andeq	fp, r1, ip, lsr #25
   1b8f0:	andeq	fp, r1, r0, asr #25
   1b8f4:	andeq	fp, r1, ip, lsr #25
   1b8f8:			; <UNDEFINED> instruction: 0x0001bab0
   1b8fc:	andeq	fp, r1, ip, lsr #25
   1b900:	andeq	fp, r1, ip, lsr #25
   1b904:	andeq	fp, r1, ip, lsr #25
   1b908:	andeq	fp, r1, ip, lsl fp
   1b90c:	andeq	fp, r1, ip, lsr #25
   1b910:	andeq	fp, r1, r0, ror #22
   1b914:	andeq	fp, r1, ip, lsr #25
   1b918:	andeq	fp, r1, ip, lsr #25
   1b91c:	andeq	fp, r1, ip, lsr #26
   1b920:	mov	r1, #0
   1b924:	lsl	r3, r9, #10
   1b928:	lsl	r0, r8, #10
   1b92c:	lsr	r2, r9, #22
   1b930:	cmp	r1, r9, lsr #22
   1b934:	orr	r3, r3, r8, lsr #22
   1b938:	mvnne	r0, #0
   1b93c:	movwne	r2, #1
   1b940:	cmp	r1, r9, lsr #22
   1b944:	b	1b9c8 <__assert_fail@plt+0xa64c>
   1b948:	ldr	r0, [sp, #12]
   1b94c:	orr	r6, r6, #2
   1b950:	b	1bdbc <__assert_fail@plt+0xaa40>
   1b954:	cmp	r7, #115	; 0x73
   1b958:	bgt	1ba78 <__assert_fail@plt+0xa6fc>
   1b95c:	sub	r0, r7, #98	; 0x62
   1b960:	cmp	r0, #11
   1b964:	bhi	1bc38 <__assert_fail@plt+0xa8bc>
   1b968:	add	r1, pc, #4
   1b96c:	mov	r2, #0
   1b970:	ldr	pc, [r1, r0, lsl #2]
   1b974:	andeq	fp, r1, r4, lsr #19
   1b978:	muleq	r1, r4, sp
   1b97c:	andeq	fp, r1, ip, lsr #25
   1b980:	andeq	fp, r1, ip, lsr #25
   1b984:	andeq	fp, r1, ip, lsr #25
   1b988:			; <UNDEFINED> instruction: 0x0001bab0
   1b98c:	andeq	fp, r1, ip, lsr #25
   1b990:	andeq	fp, r1, ip, lsr #25
   1b994:	andeq	fp, r1, ip, lsr #25
   1b998:	andeq	fp, r1, ip, lsl fp
   1b99c:	andeq	fp, r1, ip, lsr #25
   1b9a0:	andeq	fp, r1, r0, ror #22
   1b9a4:	mov	r1, #0
   1b9a8:	lsl	r3, r9, #9
   1b9ac:	lsl	r0, r8, #9
   1b9b0:	lsr	r2, r9, #23
   1b9b4:	cmp	r1, r9, lsr #23
   1b9b8:	orr	r3, r3, r8, lsr #23
   1b9bc:	mvnne	r0, #0
   1b9c0:	movwne	r2, #1
   1b9c4:	cmp	r1, r9, lsr #23
   1b9c8:	mvnne	r3, #0
   1b9cc:	mov	r8, r0
   1b9d0:	mov	r9, r3
   1b9d4:	b	1bd94 <__assert_fail@plt+0xaa18>
   1b9d8:	cmp	r0, #105	; 0x69
   1b9dc:	mov	r3, #0
   1b9e0:	bne	1b8c4 <__assert_fail@plt+0xa548>
   1b9e4:	ldrb	r0, [r5, #2]
   1b9e8:	mov	r1, #1
   1b9ec:	cmp	r0, #66	; 0x42
   1b9f0:	movweq	r1, #3
   1b9f4:	str	r1, [sp, #8]
   1b9f8:	b	1b8c4 <__assert_fail@plt+0xa548>
   1b9fc:	cmp	r7, #84	; 0x54
   1ba00:	beq	1bbcc <__assert_fail@plt+0xa850>
   1ba04:	cmp	r7, #89	; 0x59
   1ba08:	bne	1bcac <__assert_fail@plt+0xa930>
   1ba0c:	mvn	r0, #0
   1ba10:	mvn	r1, #0
   1ba14:	mov	r2, r4
   1ba18:	mov	r5, r3
   1ba1c:	bl	1c2e4 <__assert_fail@plt+0xaf68>
   1ba20:	mov	ip, r5
   1ba24:	mvn	lr, #0
   1ba28:	mov	r2, #0
   1ba2c:	mvn	r3, #7
   1ba30:	mov	r5, r8
   1ba34:	mov	r7, r9
   1ba38:	umull	r8, r6, r5, r4
   1ba3c:	mvn	r9, #0
   1ba40:	mla	r6, r5, ip, r6
   1ba44:	subs	r5, r0, r5
   1ba48:	sbcs	r5, r1, r7
   1ba4c:	mov	r5, #0
   1ba50:	movwcc	r5, #1
   1ba54:	cmp	r5, #0
   1ba58:	mlaeq	r9, r7, r4, r6
   1ba5c:	movne	r8, lr
   1ba60:	orrne	r2, r2, #1
   1ba64:	adds	r3, r3, #1
   1ba68:	mov	r5, r8
   1ba6c:	mov	r7, r9
   1ba70:	bne	1ba38 <__assert_fail@plt+0xa6bc>
   1ba74:	b	1bd94 <__assert_fail@plt+0xaa18>
   1ba78:	cmp	r7, #116	; 0x74
   1ba7c:	beq	1bbcc <__assert_fail@plt+0xa850>
   1ba80:	cmp	r7, #119	; 0x77
   1ba84:	bne	1bcac <__assert_fail@plt+0xa930>
   1ba88:	lsl	r1, r9, #1
   1ba8c:	lsl	r0, r8, #1
   1ba90:	cmp	r9, #0
   1ba94:	lsr	r2, r9, #31
   1ba98:	orr	r1, r1, r8, lsr #31
   1ba9c:	mvnlt	r0, #0
   1baa0:	mvnlt	r1, #0
   1baa4:	mov	r8, r0
   1baa8:	mov	r9, r1
   1baac:	b	1bd94 <__assert_fail@plt+0xaa18>
   1bab0:	mvn	r0, #0
   1bab4:	mvn	r1, #0
   1bab8:	mov	r2, r4
   1babc:	mov	r5, r3
   1bac0:	bl	1c2e4 <__assert_fail@plt+0xaf68>
   1bac4:	mov	ip, r5
   1bac8:	mvn	lr, #0
   1bacc:	mov	r2, #0
   1bad0:	mvn	r3, #2
   1bad4:	mov	r6, r8
   1bad8:	mov	r5, r9
   1badc:	umull	r8, r7, r6, r4
   1bae0:	mvn	r9, #0
   1bae4:	mla	r7, r6, ip, r7
   1bae8:	subs	r6, r0, r6
   1baec:	sbcs	r6, r1, r5
   1baf0:	mov	r6, #0
   1baf4:	movwcc	r6, #1
   1baf8:	cmp	r6, #0
   1bafc:	mlaeq	r9, r5, r4, r7
   1bb00:	movne	r8, lr
   1bb04:	orrne	r2, r2, #1
   1bb08:	adds	r3, r3, #1
   1bb0c:	mov	r6, r8
   1bb10:	mov	r5, r9
   1bb14:	bne	1badc <__assert_fail@plt+0xa760>
   1bb18:	b	1bd94 <__assert_fail@plt+0xaa18>
   1bb1c:	mvn	r0, #0
   1bb20:	mvn	r1, #0
   1bb24:	mov	r2, r4
   1bb28:	mov	r5, r3
   1bb2c:	bl	1c2e4 <__assert_fail@plt+0xaf68>
   1bb30:	subs	r0, r0, r8
   1bb34:	mov	r2, #0
   1bb38:	sbcs	r0, r1, r9
   1bb3c:	movwcc	r2, #1
   1bb40:	umull	r0, r1, r8, r4
   1bb44:	mla	r1, r8, r5, r1
   1bb48:	cmp	r2, #0
   1bb4c:	mla	r9, r9, r4, r1
   1bb50:	mvnne	r0, #0
   1bb54:	mvnne	r9, #0
   1bb58:	mov	r8, r0
   1bb5c:	b	1bd94 <__assert_fail@plt+0xaa18>
   1bb60:	mvn	r0, #0
   1bb64:	mvn	r1, #0
   1bb68:	mov	r2, r4
   1bb6c:	mov	r5, r3
   1bb70:	bl	1c2e4 <__assert_fail@plt+0xaf68>
   1bb74:	mov	ip, r5
   1bb78:	mvn	lr, #0
   1bb7c:	mov	r2, #0
   1bb80:	mvn	r3, #1
   1bb84:	mov	r6, r8
   1bb88:	mov	r5, r9
   1bb8c:	umull	r8, r7, r6, r4
   1bb90:	mvn	r9, #0
   1bb94:	mla	r7, r6, ip, r7
   1bb98:	subs	r6, r0, r6
   1bb9c:	sbcs	r6, r1, r5
   1bba0:	mov	r6, #0
   1bba4:	movwcc	r6, #1
   1bba8:	cmp	r6, #0
   1bbac:	mlaeq	r9, r5, r4, r7
   1bbb0:	movne	r8, lr
   1bbb4:	orrne	r2, r2, #1
   1bbb8:	adds	r3, r3, #1
   1bbbc:	mov	r6, r8
   1bbc0:	mov	r5, r9
   1bbc4:	bne	1bb8c <__assert_fail@plt+0xa810>
   1bbc8:	b	1bd94 <__assert_fail@plt+0xaa18>
   1bbcc:	mvn	r0, #0
   1bbd0:	mvn	r1, #0
   1bbd4:	mov	r2, r4
   1bbd8:	mov	r5, r3
   1bbdc:	bl	1c2e4 <__assert_fail@plt+0xaf68>
   1bbe0:	mov	ip, r5
   1bbe4:	mvn	lr, #0
   1bbe8:	mov	r2, #0
   1bbec:	mvn	r3, #3
   1bbf0:	mov	r6, r8
   1bbf4:	mov	r5, r9
   1bbf8:	umull	r8, r7, r6, r4
   1bbfc:	mvn	r9, #0
   1bc00:	mla	r7, r6, ip, r7
   1bc04:	subs	r6, r0, r6
   1bc08:	sbcs	r6, r1, r5
   1bc0c:	mov	r6, #0
   1bc10:	movwcc	r6, #1
   1bc14:	cmp	r6, #0
   1bc18:	mlaeq	r9, r5, r4, r7
   1bc1c:	movne	r8, lr
   1bc20:	orrne	r2, r2, #1
   1bc24:	adds	r3, r3, #1
   1bc28:	mov	r6, r8
   1bc2c:	mov	r5, r9
   1bc30:	bne	1bbf8 <__assert_fail@plt+0xa87c>
   1bc34:	b	1bd94 <__assert_fail@plt+0xaa18>
   1bc38:	cmp	r7, #90	; 0x5a
   1bc3c:	bne	1bcac <__assert_fail@plt+0xa930>
   1bc40:	mvn	r0, #0
   1bc44:	mvn	r1, #0
   1bc48:	mov	r2, r4
   1bc4c:	mov	r5, r3
   1bc50:	bl	1c2e4 <__assert_fail@plt+0xaf68>
   1bc54:	mov	ip, r5
   1bc58:	mvn	lr, #0
   1bc5c:	mov	r2, #0
   1bc60:	mvn	r3, #6
   1bc64:	mov	r5, r8
   1bc68:	mov	r7, r9
   1bc6c:	umull	r8, r6, r5, r4
   1bc70:	mvn	r9, #0
   1bc74:	mla	r6, r5, ip, r6
   1bc78:	subs	r5, r0, r5
   1bc7c:	sbcs	r5, r1, r7
   1bc80:	mov	r5, #0
   1bc84:	movwcc	r5, #1
   1bc88:	cmp	r5, #0
   1bc8c:	mlaeq	r9, r7, r4, r6
   1bc90:	movne	r8, lr
   1bc94:	orrne	r2, r2, #1
   1bc98:	adds	r3, r3, #1
   1bc9c:	mov	r5, r8
   1bca0:	mov	r7, r9
   1bca4:	bne	1bc6c <__assert_fail@plt+0xa8f0>
   1bca8:	b	1bd94 <__assert_fail@plt+0xaa18>
   1bcac:	ldr	r0, [sp, #12]
   1bcb0:	strd	r8, [r0]
   1bcb4:	ldr	r6, [sp, #4]
   1bcb8:	orr	r6, r6, #2
   1bcbc:	b	1bdc0 <__assert_fail@plt+0xaa44>
   1bcc0:	mvn	r0, #0
   1bcc4:	mvn	r1, #0
   1bcc8:	mov	r2, r4
   1bccc:	mov	r5, r3
   1bcd0:	bl	1c2e4 <__assert_fail@plt+0xaf68>
   1bcd4:	mov	ip, r5
   1bcd8:	mvn	lr, #0
   1bcdc:	mov	r2, #0
   1bce0:	mvn	r3, #5
   1bce4:	mov	r5, r8
   1bce8:	mov	r7, r9
   1bcec:	umull	r8, r6, r5, r4
   1bcf0:	mvn	r9, #0
   1bcf4:	mla	r6, r5, ip, r6
   1bcf8:	subs	r5, r0, r5
   1bcfc:	sbcs	r5, r1, r7
   1bd00:	mov	r5, #0
   1bd04:	movwcc	r5, #1
   1bd08:	cmp	r5, #0
   1bd0c:	mlaeq	r9, r7, r4, r6
   1bd10:	movne	r8, lr
   1bd14:	orrne	r2, r2, #1
   1bd18:	adds	r3, r3, #1
   1bd1c:	mov	r5, r8
   1bd20:	mov	r7, r9
   1bd24:	bne	1bcec <__assert_fail@plt+0xa970>
   1bd28:	b	1bd94 <__assert_fail@plt+0xaa18>
   1bd2c:	mvn	r0, #0
   1bd30:	mvn	r1, #0
   1bd34:	mov	r2, r4
   1bd38:	mov	r5, r3
   1bd3c:	bl	1c2e4 <__assert_fail@plt+0xaf68>
   1bd40:	mov	ip, r5
   1bd44:	mvn	lr, #0
   1bd48:	mov	r2, #0
   1bd4c:	mvn	r3, #4
   1bd50:	mov	r5, r8
   1bd54:	mov	r7, r9
   1bd58:	umull	r8, r6, r5, r4
   1bd5c:	mvn	r9, #0
   1bd60:	mla	r6, r5, ip, r6
   1bd64:	subs	r5, r0, r5
   1bd68:	sbcs	r5, r1, r7
   1bd6c:	mov	r5, #0
   1bd70:	movwcc	r5, #1
   1bd74:	cmp	r5, #0
   1bd78:	mlaeq	r9, r7, r4, r6
   1bd7c:	movne	r8, lr
   1bd80:	orrne	r2, r2, #1
   1bd84:	adds	r3, r3, #1
   1bd88:	mov	r5, r8
   1bd8c:	mov	r7, r9
   1bd90:	bne	1bd58 <__assert_fail@plt+0xa9dc>
   1bd94:	ldr	r1, [sp]
   1bd98:	ldr	r3, [sp, #8]
   1bd9c:	ldr	r6, [sp, #4]
   1bda0:	add	r0, r1, r3
   1bda4:	orr	r6, r2, r6
   1bda8:	str	r0, [sl]
   1bdac:	ldrb	r0, [r1, r3]
   1bdb0:	cmp	r0, #0
   1bdb4:	orrne	r6, r6, #2
   1bdb8:	ldr	r0, [sp, #12]
   1bdbc:	strd	r8, [r0]
   1bdc0:	mov	r0, r6
   1bdc4:	sub	sp, fp, #28
   1bdc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bdcc:	movw	r0, #55161	; 0xd779
   1bdd0:	movw	r1, #55199	; 0xd79f
   1bdd4:	movw	r3, #55215	; 0xd7af
   1bdd8:	mov	r2, #85	; 0x55
   1bddc:	movt	r0, #1
   1bde0:	movt	r1, #1
   1bde4:	movt	r3, #1
   1bde8:	bl	1137c <__assert_fail@plt>
   1bdec:	clz	r2, r1
   1bdf0:	clz	r3, r0
   1bdf4:	lsr	r2, r2, #5
   1bdf8:	lsr	r3, r3, #5
   1bdfc:	orrs	r2, r3, r2
   1be00:	movwne	r1, #1
   1be04:	movwne	r0, #1
   1be08:	cmp	r1, #0
   1be0c:	beq	1be3c <__assert_fail@plt+0xaac0>
   1be10:	mvn	r2, #-2147483648	; 0x80000000
   1be14:	udiv	r2, r2, r1
   1be18:	cmp	r2, r0
   1be1c:	bcs	1be3c <__assert_fail@plt+0xaac0>
   1be20:	push	{fp, lr}
   1be24:	mov	fp, sp
   1be28:	bl	11250 <__errno_location@plt>
   1be2c:	mov	r1, #12
   1be30:	str	r1, [r0]
   1be34:	mov	r0, #0
   1be38:	pop	{fp, pc}
   1be3c:	b	110b8 <calloc@plt>
   1be40:	cmp	r0, #0
   1be44:	movweq	r0, #1
   1be48:	cmn	r0, #1
   1be4c:	ble	1be54 <__assert_fail@plt+0xaad8>
   1be50:	b	111cc <malloc@plt>
   1be54:	push	{fp, lr}
   1be58:	mov	fp, sp
   1be5c:	bl	11250 <__errno_location@plt>
   1be60:	mov	r1, #12
   1be64:	str	r1, [r0]
   1be68:	mov	r0, #0
   1be6c:	pop	{fp, pc}
   1be70:	push	{fp, lr}
   1be74:	mov	fp, sp
   1be78:	cmp	r0, #0
   1be7c:	beq	1be98 <__assert_fail@plt+0xab1c>
   1be80:	cmp	r1, #0
   1be84:	beq	1bea4 <__assert_fail@plt+0xab28>
   1be88:	cmn	r1, #1
   1be8c:	ble	1beac <__assert_fail@plt+0xab30>
   1be90:	pop	{fp, lr}
   1be94:	b	11154 <realloc@plt>
   1be98:	mov	r0, r1
   1be9c:	pop	{fp, lr}
   1bea0:	b	1be40 <__assert_fail@plt+0xaac4>
   1bea4:	bl	190d0 <__assert_fail@plt+0x7d54>
   1bea8:	b	1beb8 <__assert_fail@plt+0xab3c>
   1beac:	bl	11250 <__errno_location@plt>
   1beb0:	mov	r1, #12
   1beb4:	str	r1, [r0]
   1beb8:	mov	r0, #0
   1bebc:	pop	{fp, pc}
   1bec0:	push	{r4, r5, r6, sl, fp, lr}
   1bec4:	add	fp, sp, #16
   1bec8:	mov	r4, r0
   1becc:	bl	1119c <__fpending@plt>
   1bed0:	mov	r5, r0
   1bed4:	mov	r0, r4
   1bed8:	bl	111a8 <ferror_unlocked@plt>
   1bedc:	mov	r6, r0
   1bee0:	mov	r0, r4
   1bee4:	bl	18f2c <__assert_fail@plt+0x7bb0>
   1bee8:	cmp	r6, #0
   1beec:	beq	1bf0c <__assert_fail@plt+0xab90>
   1bef0:	mvn	r4, #0
   1bef4:	cmp	r0, #0
   1bef8:	bne	1bf38 <__assert_fail@plt+0xabbc>
   1befc:	bl	11250 <__errno_location@plt>
   1bf00:	mov	r1, #0
   1bf04:	str	r1, [r0]
   1bf08:	b	1bf38 <__assert_fail@plt+0xabbc>
   1bf0c:	cmp	r0, #0
   1bf10:	mov	r4, r0
   1bf14:	mvnne	r4, #0
   1bf18:	cmp	r5, #0
   1bf1c:	bne	1bf38 <__assert_fail@plt+0xabbc>
   1bf20:	cmp	r0, #0
   1bf24:	beq	1bf38 <__assert_fail@plt+0xabbc>
   1bf28:	bl	11250 <__errno_location@plt>
   1bf2c:	ldr	r0, [r0]
   1bf30:	subs	r4, r0, #9
   1bf34:	mvnne	r4, #0
   1bf38:	mov	r0, r4
   1bf3c:	pop	{r4, r5, r6, sl, fp, pc}
   1bf40:	sub	sp, sp, #8
   1bf44:	push	{r4, r5, r6, r7, fp, lr}
   1bf48:	add	fp, sp, #16
   1bf4c:	sub	sp, sp, #8
   1bf50:	mov	r5, r0
   1bf54:	add	r0, fp, #8
   1bf58:	cmp	r1, #11
   1bf5c:	str	r3, [fp, #12]
   1bf60:	str	r2, [fp, #8]
   1bf64:	str	r0, [sp, #4]
   1bf68:	bhi	1bfa4 <__assert_fail@plt+0xac28>
   1bf6c:	mov	r0, #1
   1bf70:	movw	r2, #1300	; 0x514
   1bf74:	tst	r2, r0, lsl r1
   1bf78:	bne	1c05c <__assert_fail@plt+0xace0>
   1bf7c:	movw	r2, #2570	; 0xa0a
   1bf80:	tst	r2, r0, lsl r1
   1bf84:	bne	1bfcc <__assert_fail@plt+0xac50>
   1bf88:	cmp	r1, #0
   1bf8c:	bne	1bfa4 <__assert_fail@plt+0xac28>
   1bf90:	ldr	r0, [sp, #4]
   1bf94:	add	r1, r0, #4
   1bf98:	str	r1, [sp, #4]
   1bf9c:	mov	r1, #0
   1bfa0:	b	1c068 <__assert_fail@plt+0xacec>
   1bfa4:	sub	r0, r1, #1024	; 0x400
   1bfa8:	cmp	r0, #10
   1bfac:	bhi	1c05c <__assert_fail@plt+0xace0>
   1bfb0:	mov	r2, #1
   1bfb4:	movw	r3, #645	; 0x285
   1bfb8:	tst	r3, r2, lsl r0
   1bfbc:	bne	1c05c <__assert_fail@plt+0xace0>
   1bfc0:	movw	r3, #1282	; 0x502
   1bfc4:	tst	r3, r2, lsl r0
   1bfc8:	beq	1bfd8 <__assert_fail@plt+0xac5c>
   1bfcc:	mov	r0, r5
   1bfd0:	bl	112c8 <fcntl64@plt>
   1bfd4:	b	1c074 <__assert_fail@plt+0xacf8>
   1bfd8:	cmp	r0, #6
   1bfdc:	bne	1c05c <__assert_fail@plt+0xace0>
   1bfe0:	ldr	r0, [sp, #4]
   1bfe4:	movw	r7, #58080	; 0xe2e0
   1bfe8:	movt	r7, #2
   1bfec:	add	r1, r0, #4
   1bff0:	str	r1, [sp, #4]
   1bff4:	ldr	r6, [r0]
   1bff8:	ldr	r0, [r7]
   1bffc:	cmp	r0, #0
   1c000:	blt	1c098 <__assert_fail@plt+0xad1c>
   1c004:	mov	r0, r5
   1c008:	movw	r1, #1030	; 0x406
   1c00c:	mov	r2, r6
   1c010:	bl	112c8 <fcntl64@plt>
   1c014:	mov	r4, r0
   1c018:	cmn	r0, #1
   1c01c:	bgt	1c08c <__assert_fail@plt+0xad10>
   1c020:	bl	11250 <__errno_location@plt>
   1c024:	ldr	r0, [r0]
   1c028:	cmp	r0, #22
   1c02c:	bne	1c08c <__assert_fail@plt+0xad10>
   1c030:	mov	r0, r5
   1c034:	mov	r1, #0
   1c038:	mov	r2, r6
   1c03c:	bl	112c8 <fcntl64@plt>
   1c040:	mov	r4, r0
   1c044:	cmp	r0, #0
   1c048:	blt	1c078 <__assert_fail@plt+0xacfc>
   1c04c:	mvn	r0, #0
   1c050:	str	r0, [r7]
   1c054:	mov	r0, #1
   1c058:	b	1c0bc <__assert_fail@plt+0xad40>
   1c05c:	ldr	r0, [sp, #4]
   1c060:	add	r2, r0, #4
   1c064:	str	r2, [sp, #4]
   1c068:	ldr	r2, [r0]
   1c06c:	mov	r0, r5
   1c070:	bl	112c8 <fcntl64@plt>
   1c074:	mov	r4, r0
   1c078:	mov	r0, r4
   1c07c:	sub	sp, fp, #16
   1c080:	pop	{r4, r5, r6, r7, fp, lr}
   1c084:	add	sp, sp, #8
   1c088:	bx	lr
   1c08c:	mov	r0, #1
   1c090:	str	r0, [r7]
   1c094:	b	1c078 <__assert_fail@plt+0xacfc>
   1c098:	mov	r0, r5
   1c09c:	mov	r1, #0
   1c0a0:	mov	r2, r6
   1c0a4:	bl	112c8 <fcntl64@plt>
   1c0a8:	mov	r4, r0
   1c0ac:	ldr	r0, [r7]
   1c0b0:	add	r0, r0, #1
   1c0b4:	clz	r0, r0
   1c0b8:	lsr	r0, r0, #5
   1c0bc:	cmp	r0, #0
   1c0c0:	beq	1c078 <__assert_fail@plt+0xacfc>
   1c0c4:	cmp	r4, #0
   1c0c8:	blt	1c078 <__assert_fail@plt+0xacfc>
   1c0cc:	mov	r0, r4
   1c0d0:	mov	r1, #1
   1c0d4:	bl	112c8 <fcntl64@plt>
   1c0d8:	cmp	r0, #0
   1c0dc:	blt	1c0f8 <__assert_fail@plt+0xad7c>
   1c0e0:	orr	r2, r0, #1
   1c0e4:	mov	r0, r4
   1c0e8:	mov	r1, #2
   1c0ec:	bl	112c8 <fcntl64@plt>
   1c0f0:	cmn	r0, #1
   1c0f4:	bne	1c078 <__assert_fail@plt+0xacfc>
   1c0f8:	bl	11250 <__errno_location@plt>
   1c0fc:	ldr	r6, [r0]
   1c100:	mov	r5, r0
   1c104:	mov	r0, r4
   1c108:	bl	11358 <close@plt>
   1c10c:	str	r6, [r5]
   1c110:	mvn	r4, #0
   1c114:	b	1c078 <__assert_fail@plt+0xacfc>
   1c118:	push	{fp, lr}
   1c11c:	mov	fp, sp
   1c120:	mov	r0, #14
   1c124:	bl	112ec <nl_langinfo@plt>
   1c128:	movw	r1, #51459	; 0xc903
   1c12c:	cmp	r0, #0
   1c130:	movt	r1, #1
   1c134:	movne	r1, r0
   1c138:	movw	r0, #55294	; 0xd7fe
   1c13c:	ldrb	r2, [r1]
   1c140:	movt	r0, #1
   1c144:	cmp	r2, #0
   1c148:	movne	r0, r1
   1c14c:	pop	{fp, pc}
   1c150:	push	{r4, r5, r6, r7, fp, lr}
   1c154:	add	fp, sp, #16
   1c158:	sub	sp, sp, #8
   1c15c:	add	r5, sp, #4
   1c160:	cmp	r0, #0
   1c164:	mov	r7, r2
   1c168:	mov	r4, r1
   1c16c:	movne	r5, r0
   1c170:	mov	r0, r5
   1c174:	bl	111b4 <mbrtowc@plt>
   1c178:	mov	r6, r0
   1c17c:	cmp	r7, #0
   1c180:	beq	1c1a4 <__assert_fail@plt+0xae28>
   1c184:	cmn	r6, #2
   1c188:	bcc	1c1a4 <__assert_fail@plt+0xae28>
   1c18c:	mov	r0, #0
   1c190:	bl	1c1ec <__assert_fail@plt+0xae70>
   1c194:	cmp	r0, #0
   1c198:	ldrbeq	r0, [r4]
   1c19c:	moveq	r6, #1
   1c1a0:	streq	r0, [r5]
   1c1a4:	mov	r0, r6
   1c1a8:	sub	sp, fp, #16
   1c1ac:	pop	{r4, r5, r6, r7, fp, pc}
   1c1b0:	cmp	r2, #0
   1c1b4:	beq	1c1e4 <__assert_fail@plt+0xae68>
   1c1b8:	mvn	r3, #0
   1c1bc:	udiv	r3, r3, r2
   1c1c0:	cmp	r3, r1
   1c1c4:	bcs	1c1e4 <__assert_fail@plt+0xae68>
   1c1c8:	push	{fp, lr}
   1c1cc:	mov	fp, sp
   1c1d0:	bl	11250 <__errno_location@plt>
   1c1d4:	mov	r1, #12
   1c1d8:	str	r1, [r0]
   1c1dc:	mov	r0, #0
   1c1e0:	pop	{fp, pc}
   1c1e4:	mul	r1, r2, r1
   1c1e8:	b	1be70 <__assert_fail@plt+0xaaf4>
   1c1ec:	push	{r4, sl, fp, lr}
   1c1f0:	add	fp, sp, #8
   1c1f4:	sub	sp, sp, #264	; 0x108
   1c1f8:	add	r1, sp, #7
   1c1fc:	movw	r2, #257	; 0x101
   1c200:	bl	1c250 <__assert_fail@plt+0xaed4>
   1c204:	mov	r4, #0
   1c208:	cmp	r0, #0
   1c20c:	bne	1c244 <__assert_fail@plt+0xaec8>
   1c210:	movw	r1, #55300	; 0xd804
   1c214:	add	r0, sp, #7
   1c218:	movt	r1, #1
   1c21c:	bl	110dc <strcmp@plt>
   1c220:	cmp	r0, #0
   1c224:	beq	1c244 <__assert_fail@plt+0xaec8>
   1c228:	movw	r1, #55302	; 0xd806
   1c22c:	add	r0, sp, #7
   1c230:	movt	r1, #1
   1c234:	bl	110dc <strcmp@plt>
   1c238:	mov	r4, r0
   1c23c:	cmp	r0, #0
   1c240:	movwne	r4, #1
   1c244:	mov	r0, r4
   1c248:	sub	sp, fp, #8
   1c24c:	pop	{r4, sl, fp, pc}
   1c250:	push	{r4, r5, r6, r7, fp, lr}
   1c254:	add	fp, sp, #16
   1c258:	mov	r4, r1
   1c25c:	mov	r1, #0
   1c260:	mov	r6, r2
   1c264:	bl	112d4 <setlocale@plt>
   1c268:	cmp	r0, #0
   1c26c:	beq	1c298 <__assert_fail@plt+0xaf1c>
   1c270:	mov	r7, r0
   1c274:	bl	11238 <strlen@plt>
   1c278:	cmp	r0, r6
   1c27c:	bcs	1c2ac <__assert_fail@plt+0xaf30>
   1c280:	add	r2, r0, #1
   1c284:	mov	r0, r4
   1c288:	mov	r1, r7
   1c28c:	bl	11124 <memcpy@plt>
   1c290:	mov	r5, #0
   1c294:	b	1c2d4 <__assert_fail@plt+0xaf58>
   1c298:	cmp	r6, #0
   1c29c:	mov	r5, #22
   1c2a0:	movne	r0, #0
   1c2a4:	strbne	r0, [r4]
   1c2a8:	b	1c2d4 <__assert_fail@plt+0xaf58>
   1c2ac:	mov	r5, #34	; 0x22
   1c2b0:	cmp	r6, #0
   1c2b4:	beq	1c2d4 <__assert_fail@plt+0xaf58>
   1c2b8:	sub	r6, r6, #1
   1c2bc:	mov	r0, r4
   1c2c0:	mov	r1, r7
   1c2c4:	mov	r2, r6
   1c2c8:	bl	11124 <memcpy@plt>
   1c2cc:	mov	r0, #0
   1c2d0:	strb	r0, [r4, r6]
   1c2d4:	mov	r0, r5
   1c2d8:	pop	{r4, r5, r6, r7, fp, pc}
   1c2dc:	mov	r1, #0
   1c2e0:	b	112d4 <setlocale@plt>
   1c2e4:	cmp	r3, #0
   1c2e8:	cmpeq	r2, #0
   1c2ec:	bne	1c304 <__assert_fail@plt+0xaf88>
   1c2f0:	cmp	r1, #0
   1c2f4:	cmpeq	r0, #0
   1c2f8:	mvnne	r1, #0
   1c2fc:	mvnne	r0, #0
   1c300:	b	1c320 <__assert_fail@plt+0xafa4>
   1c304:	sub	sp, sp, #8
   1c308:	push	{sp, lr}
   1c30c:	bl	1c330 <__assert_fail@plt+0xafb4>
   1c310:	ldr	lr, [sp, #4]
   1c314:	add	sp, sp, #8
   1c318:	pop	{r2, r3}
   1c31c:	bx	lr
   1c320:	push	{r1, lr}
   1c324:	mov	r0, #8
   1c328:	bl	110d0 <raise@plt>
   1c32c:	pop	{r1, pc}
   1c330:	cmp	r1, r3
   1c334:	cmpeq	r0, r2
   1c338:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c33c:	mov	r4, r0
   1c340:	movcc	r0, #0
   1c344:	mov	r5, r1
   1c348:	ldr	lr, [sp, #36]	; 0x24
   1c34c:	movcc	r1, r0
   1c350:	bcc	1c44c <__assert_fail@plt+0xb0d0>
   1c354:	cmp	r3, #0
   1c358:	clzeq	ip, r2
   1c35c:	clzne	ip, r3
   1c360:	addeq	ip, ip, #32
   1c364:	cmp	r5, #0
   1c368:	clzeq	r1, r4
   1c36c:	addeq	r1, r1, #32
   1c370:	clzne	r1, r5
   1c374:	sub	ip, ip, r1
   1c378:	sub	sl, ip, #32
   1c37c:	lsl	r9, r3, ip
   1c380:	rsb	fp, ip, #32
   1c384:	orr	r9, r9, r2, lsl sl
   1c388:	orr	r9, r9, r2, lsr fp
   1c38c:	lsl	r8, r2, ip
   1c390:	cmp	r5, r9
   1c394:	cmpeq	r4, r8
   1c398:	movcc	r0, #0
   1c39c:	movcc	r1, r0
   1c3a0:	bcc	1c3bc <__assert_fail@plt+0xb040>
   1c3a4:	mov	r0, #1
   1c3a8:	subs	r4, r4, r8
   1c3ac:	lsl	r1, r0, sl
   1c3b0:	orr	r1, r1, r0, lsr fp
   1c3b4:	lsl	r0, r0, ip
   1c3b8:	sbc	r5, r5, r9
   1c3bc:	cmp	ip, #0
   1c3c0:	beq	1c44c <__assert_fail@plt+0xb0d0>
   1c3c4:	lsr	r6, r8, #1
   1c3c8:	orr	r6, r6, r9, lsl #31
   1c3cc:	lsr	r7, r9, #1
   1c3d0:	mov	r2, ip
   1c3d4:	b	1c3f8 <__assert_fail@plt+0xb07c>
   1c3d8:	subs	r3, r4, r6
   1c3dc:	sbc	r8, r5, r7
   1c3e0:	adds	r3, r3, r3
   1c3e4:	adc	r8, r8, r8
   1c3e8:	adds	r4, r3, #1
   1c3ec:	adc	r5, r8, #0
   1c3f0:	subs	r2, r2, #1
   1c3f4:	beq	1c414 <__assert_fail@plt+0xb098>
   1c3f8:	cmp	r5, r7
   1c3fc:	cmpeq	r4, r6
   1c400:	bcs	1c3d8 <__assert_fail@plt+0xb05c>
   1c404:	adds	r4, r4, r4
   1c408:	adc	r5, r5, r5
   1c40c:	subs	r2, r2, #1
   1c410:	bne	1c3f8 <__assert_fail@plt+0xb07c>
   1c414:	lsr	r3, r4, ip
   1c418:	orr	r3, r3, r5, lsl fp
   1c41c:	lsr	r2, r5, ip
   1c420:	orr	r3, r3, r5, lsr sl
   1c424:	adds	r0, r0, r4
   1c428:	mov	r4, r3
   1c42c:	lsl	r3, r2, ip
   1c430:	orr	r3, r3, r4, lsl sl
   1c434:	lsl	ip, r4, ip
   1c438:	orr	r3, r3, r4, lsr fp
   1c43c:	adc	r1, r1, r5
   1c440:	subs	r0, r0, ip
   1c444:	mov	r5, r2
   1c448:	sbc	r1, r1, r3
   1c44c:	cmp	lr, #0
   1c450:	strdne	r4, [lr]
   1c454:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c458:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c45c:	mov	r7, r0
   1c460:	ldr	r6, [pc, #72]	; 1c4b0 <__assert_fail@plt+0xb134>
   1c464:	ldr	r5, [pc, #72]	; 1c4b4 <__assert_fail@plt+0xb138>
   1c468:	add	r6, pc, r6
   1c46c:	add	r5, pc, r5
   1c470:	sub	r6, r6, r5
   1c474:	mov	r8, r1
   1c478:	mov	r9, r2
   1c47c:	bl	1108c <fdopen@plt-0x20>
   1c480:	asrs	r6, r6, #2
   1c484:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c488:	mov	r4, #0
   1c48c:	add	r4, r4, #1
   1c490:	ldr	r3, [r5], #4
   1c494:	mov	r2, r9
   1c498:	mov	r1, r8
   1c49c:	mov	r0, r7
   1c4a0:	blx	r3
   1c4a4:	cmp	r6, r4
   1c4a8:	bne	1c48c <__assert_fail@plt+0xb110>
   1c4ac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c4b0:	muleq	r1, ip, sl
   1c4b4:	muleq	r1, r4, sl
   1c4b8:	bx	lr
   1c4bc:	ldr	r3, [pc, #12]	; 1c4d0 <__assert_fail@plt+0xb154>
   1c4c0:	mov	r1, #0
   1c4c4:	add	r3, pc, r3
   1c4c8:	ldr	r2, [r3]
   1c4cc:	b	1125c <__cxa_atexit@plt>
   1c4d0:	andeq	r1, r1, r0, asr #24

Disassembly of section .fini:

0001c4d4 <.fini>:
   1c4d4:	push	{r3, lr}
   1c4d8:	pop	{r3, pc}
