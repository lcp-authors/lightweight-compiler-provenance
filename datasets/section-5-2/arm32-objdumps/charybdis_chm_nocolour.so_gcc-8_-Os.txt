
../repos/charybdis/modules/.libs/chm_nocolour.so:     file format elf32-littlearm


Disassembly of section .init:

000003f4 <_init>:
 3f4:	push	{r3, lr}
 3f8:	bl	450 <call_weak_fn>
 3fc:	pop	{r3, pc}

Disassembly of section .plt:

00000400 <.plt>:
 400:	push	{lr}		; (str lr, [sp, #-4]!)
 404:	ldr	lr, [pc, #4]	; 410 <.plt+0x10>
 408:	add	lr, pc, lr
 40c:	ldr	pc, [lr, #8]!
 410:	.word	0x00010bf0

00000414 <cflag_add@plt>:
 414:	add	ip, pc, #0, 12
 418:	add	ip, ip, #16, 20	; 0x10000
 41c:	ldr	pc, [ip, #3056]!	; 0xbf0

00000420 <__cxa_finalize@plt>:
 420:	add	ip, pc, #0, 12
 424:	add	ip, ip, #16, 20	; 0x10000
 428:	ldr	pc, [ip, #3048]!	; 0xbe8

0000042c <__gmon_start__@plt>:
 42c:	add	ip, pc, #0, 12
 430:	add	ip, ip, #16, 20	; 0x10000
 434:	ldr	pc, [ip, #3040]!	; 0xbe0

00000438 <rb_strlcpy@plt>:
 438:	add	ip, pc, #0, 12
 43c:	add	ip, ip, #16, 20	; 0x10000
 440:	ldr	pc, [ip, #3032]!	; 0xbd8

00000444 <cflag_orphan@plt>:
 444:	add	ip, pc, #0, 12
 448:	add	ip, ip, #16, 20	; 0x10000
 44c:	ldr	pc, [ip, #3024]!	; 0xbd0

Disassembly of section .text:

00000450 <call_weak_fn>:
 450:	ldr	r3, [pc, #20]	; 46c <call_weak_fn+0x1c>
 454:	ldr	r2, [pc, #20]	; 470 <call_weak_fn+0x20>
 458:	add	r3, pc, r3
 45c:	ldr	r2, [r3, r2]
 460:	cmp	r2, #0
 464:	bxeq	lr
 468:	b	42c <__gmon_start__@plt>
 46c:	.word	0x00010ba0
 470:	.word	0x0000002c

00000474 <deregister_tm_clones>:
 474:	ldr	r0, [pc, #44]	; 4a8 <deregister_tm_clones+0x34>
 478:	ldr	r3, [pc, #44]	; 4ac <deregister_tm_clones+0x38>
 47c:	add	r0, pc, r0
 480:	add	r3, pc, r3
 484:	cmp	r3, r0
 488:	ldr	r3, [pc, #32]	; 4b0 <deregister_tm_clones+0x3c>
 48c:	add	r3, pc, r3
 490:	bxeq	lr
 494:	ldr	r2, [pc, #24]	; 4b4 <deregister_tm_clones+0x40>
 498:	ldr	r3, [r3, r2]
 49c:	cmp	r3, #0
 4a0:	bxeq	lr
 4a4:	bx	r3
 4a8:	.word	0x00010bf8
 4ac:	.word	0x00010bf4
 4b0:	.word	0x00010b6c
 4b4:	.word	0x00000024

000004b8 <register_tm_clones>:
 4b8:	ldr	r0, [pc, #56]	; 4f8 <register_tm_clones+0x40>
 4bc:	ldr	r3, [pc, #56]	; 4fc <register_tm_clones+0x44>
 4c0:	add	r0, pc, r0
 4c4:	add	r3, pc, r3
 4c8:	sub	r1, r3, r0
 4cc:	ldr	r3, [pc, #44]	; 500 <register_tm_clones+0x48>
 4d0:	asr	r1, r1, #2
 4d4:	add	r3, pc, r3
 4d8:	add	r1, r1, r1, lsr #31
 4dc:	asrs	r1, r1, #1
 4e0:	bxeq	lr
 4e4:	ldr	r2, [pc, #24]	; 504 <register_tm_clones+0x4c>
 4e8:	ldr	r3, [r3, r2]
 4ec:	cmp	r3, #0
 4f0:	bxeq	lr
 4f4:	bx	r3
 4f8:	.word	0x00010bb4
 4fc:	.word	0x00010bb0
 500:	.word	0x00010b24
 504:	.word	0x00000034

00000508 <__do_global_dtors_aux>:
 508:	ldr	r3, [pc, #76]	; 55c <__do_global_dtors_aux+0x54>
 50c:	ldr	r2, [pc, #76]	; 560 <__do_global_dtors_aux+0x58>
 510:	add	r3, pc, r3
 514:	add	r2, pc, r2
 518:	ldrb	r3, [r3]
 51c:	cmp	r3, #0
 520:	bxne	lr
 524:	ldr	r3, [pc, #56]	; 564 <__do_global_dtors_aux+0x5c>
 528:	push	{r4, lr}
 52c:	ldr	r3, [r2, r3]
 530:	cmp	r3, #0
 534:	beq	544 <__do_global_dtors_aux+0x3c>
 538:	ldr	r3, [pc, #40]	; 568 <__do_global_dtors_aux+0x60>
 53c:	ldr	r0, [pc, r3]
 540:	bl	420 <__cxa_finalize@plt>
 544:	bl	474 <deregister_tm_clones>
 548:	ldr	r3, [pc, #28]	; 56c <__do_global_dtors_aux+0x64>
 54c:	mov	r2, #1
 550:	add	r3, pc, r3
 554:	strb	r2, [r3]
 558:	pop	{r4, pc}
 55c:	.word	0x00010b64
 560:	.word	0x00010ae4
 564:	.word	0x00000020
 568:	.word	0x00010af4
 56c:	.word	0x00010b24

00000570 <frame_dummy>:
 570:	b	4b8 <register_tm_clones>

00000574 <_moddeinit>:
 574:	mov	r0, #99	; 0x63
 578:	b	444 <cflag_orphan@plt>

0000057c <_modinit>:
 57c:	ldr	r3, [pc, #60]	; 5c0 <_modinit+0x44>
 580:	push	{r0, r1, r2, lr}
 584:	mov	r0, #99	; 0x63
 588:	ldr	r2, [pc, #52]	; 5c4 <_modinit+0x48>
 58c:	add	r3, pc, r3
 590:	ldr	r3, [r3, r2]
 594:	mov	r1, r3
 598:	str	r3, [sp, #4]
 59c:	bl	414 <cflag_add@plt>
 5a0:	ldr	r3, [pc, #32]	; 5c8 <_modinit+0x4c>
 5a4:	add	r3, pc, r3
 5a8:	str	r0, [r3]
 5ac:	clz	r0, r0
 5b0:	lsr	r0, r0, #5
 5b4:	rsb	r0, r0, #0
 5b8:	add	sp, sp, #12
 5bc:	pop	{pc}		; (ldr pc, [sp], #4)
 5c0:	.word	0x00010a6c
 5c4:	.word	0x00000028
 5c8:	.word	0x00010ad4

000005cc <chm_nocolour_process>:
 5cc:	push	{r4, r5, r6, r7, r8, lr}
 5d0:	ldr	r7, [r0, #16]
 5d4:	ldr	r6, [pc, #292]	; 700 <chm_nocolour_process+0x134>
 5d8:	cmp	r7, #0
 5dc:	add	r6, pc, r6
 5e0:	popne	{r4, r5, r6, r7, r8, pc}
 5e4:	ldr	r2, [pc, #280]	; 704 <chm_nocolour_process+0x138>
 5e8:	ldr	r3, [r0, #8]
 5ec:	add	r2, pc, r2
 5f0:	ldr	r1, [r3, #12]
 5f4:	ldr	r3, [r2]
 5f8:	tst	r1, r3
 5fc:	popeq	{r4, r5, r6, r7, r8, pc}
 600:	add	r4, r2, #4
 604:	mov	r5, r0
 608:	mov	r2, #512	; 0x200
 60c:	mov	r0, r4
 610:	ldr	r1, [r5, #12]
 614:	bl	438 <rb_strlcpy@plt>
 618:	mov	r2, r4
 61c:	mov	r3, r4
 620:	ldr	r4, [pc, #224]	; 708 <chm_nocolour_process+0x13c>
 624:	mov	ip, r7
 628:	mov	lr, #1
 62c:	ldrb	r0, [r3]
 630:	cmp	r0, #0
 634:	beq	6cc <chm_nocolour_process+0x100>
 638:	sub	r1, r0, #2
 63c:	uxtb	r1, r1
 640:	cmp	r1, #30
 644:	bhi	6f0 <chm_nocolour_process+0x124>
 648:	lsl	r1, lr, r1
 64c:	tst	r1, r4
 650:	bne	6c4 <chm_nocolour_process+0xf8>
 654:	tst	r1, #1073741824	; 0x40000000
 658:	strbne	r0, [r2], #1
 65c:	bne	6c4 <chm_nocolour_process+0xf8>
 660:	tst	r1, #2
 664:	beq	6f0 <chm_nocolour_process+0x124>
 668:	ldr	r1, [pc, #156]	; 70c <chm_nocolour_process+0x140>
 66c:	ldrb	r0, [r3, #1]
 670:	ldr	r1, [r6, r1]
 674:	ldr	r0, [r1, r0, lsl #2]
 678:	tst	r0, #16
 67c:	beq	6c4 <chm_nocolour_process+0xf8>
 680:	ldrb	r0, [r3, #2]
 684:	ldr	r0, [r1, r0, lsl #2]
 688:	tst	r0, #16
 68c:	addeq	r3, r3, #1
 690:	addne	r3, r3, #2
 694:	ldrb	r0, [r3, #1]
 698:	cmp	r0, #44	; 0x2c
 69c:	bne	6c4 <chm_nocolour_process+0xf8>
 6a0:	ldrb	r0, [r3, #2]
 6a4:	ldr	r0, [r1, r0, lsl #2]
 6a8:	tst	r0, #16
 6ac:	beq	6c4 <chm_nocolour_process+0xf8>
 6b0:	ldrb	r0, [r3, #3]
 6b4:	ldr	r1, [r1, r0, lsl #2]
 6b8:	tst	r1, #16
 6bc:	addeq	r3, r3, #2
 6c0:	addne	r3, r3, #3
 6c4:	adds	r3, r3, #1
 6c8:	bne	62c <chm_nocolour_process+0x60>
 6cc:	mov	r3, #0
 6d0:	cmp	ip, r3
 6d4:	strb	r3, [r2]
 6d8:	strbne	r3, [ip]
 6dc:	ldr	r3, [pc, #44]	; 710 <chm_nocolour_process+0x144>
 6e0:	add	r3, pc, r3
 6e4:	add	r3, r3, #4
 6e8:	str	r3, [r5, #12]
 6ec:	pop	{r4, r5, r6, r7, r8, pc}
 6f0:	mov	ip, r2
 6f4:	strb	r0, [ip], #1
 6f8:	mov	r2, ip
 6fc:	b	6c4 <chm_nocolour_process+0xf8>
 700:	.word	0x00010a1c
 704:	.word	0x00010a8c
 708:	.word	0x2a302035
 70c:	.word	0x00000030
 710:	.word	0x00010998

Disassembly of section .fini:

00000714 <_fini>:
 714:	push	{r3, lr}
 718:	pop	{r3, pc}
