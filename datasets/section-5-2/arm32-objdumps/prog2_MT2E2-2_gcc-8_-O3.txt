
../repos/prog2/MT2E2-2:     file format elf32-littlearm


Disassembly of section .init:

00010c2c <.init>:
   10c2c:	push	{r3, lr}
   10c30:	bl	10fac <_start@@Base+0x3c>
   10c34:	pop	{r3, pc}

Disassembly of section .plt:

00010c38 <calloc@plt-0x14>:
   10c38:	push	{lr}		; (str lr, [sp, #-4]!)
   10c3c:	ldr	lr, [pc, #4]	; 10c48 <calloc@plt-0x4>
   10c40:	add	lr, pc, lr
   10c44:	ldr	pc, [lr, #8]!
   10c48:			; <UNDEFINED> instruction: 0x000123b8

00010c4c <calloc@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #73728	; 0x12000
   10c54:	ldr	pc, [ip, #952]!	; 0x3b8

00010c58 <strcmp@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #73728	; 0x12000
   10c60:	ldr	pc, [ip, #944]!	; 0x3b0

00010c64 <strtol@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #73728	; 0x12000
   10c6c:	ldr	pc, [ip, #936]!	; 0x3a8

00010c70 <printf@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #73728	; 0x12000
   10c78:	ldr	pc, [ip, #928]!	; 0x3a0

00010c7c <__isoc99_fscanf@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #73728	; 0x12000
   10c84:	ldr	pc, [ip, #920]!	; 0x398

00010c88 <fopen@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #73728	; 0x12000
   10c90:	ldr	pc, [ip, #912]!	; 0x390

00010c94 <free@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #73728	; 0x12000
   10c9c:	ldr	pc, [ip, #904]!	; 0x388

00010ca0 <memcpy@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #73728	; 0x12000
   10ca8:	ldr	pc, [ip, #896]!	; 0x380

00010cac <realloc@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #73728	; 0x12000
   10cb4:	ldr	pc, [ip, #888]!	; 0x378

00010cb8 <strcpy@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #73728	; 0x12000
   10cc0:	ldr	pc, [ip, #880]!	; 0x370

00010cc4 <puts@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #73728	; 0x12000
   10ccc:	ldr	pc, [ip, #872]!	; 0x368

00010cd0 <malloc@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #73728	; 0x12000
   10cd8:	ldr	pc, [ip, #864]!	; 0x360

00010cdc <__libc_start_main@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #73728	; 0x12000
   10ce4:	ldr	pc, [ip, #856]!	; 0x358

00010ce8 <__gmon_start__@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #73728	; 0x12000
   10cf0:	ldr	pc, [ip, #848]!	; 0x350

00010cf4 <strlen@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #73728	; 0x12000
   10cfc:	ldr	pc, [ip, #840]!	; 0x348

00010d00 <memset@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #73728	; 0x12000
   10d08:	ldr	pc, [ip, #832]!	; 0x340

00010d0c <putchar@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #73728	; 0x12000
   10d14:	ldr	pc, [ip, #824]!	; 0x338

00010d18 <fclose@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #73728	; 0x12000
   10d20:	ldr	pc, [ip, #816]!	; 0x330

00010d24 <sprintf@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #73728	; 0x12000
   10d2c:	ldr	pc, [ip, #808]!	; 0x328

00010d30 <abort@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #73728	; 0x12000
   10d38:	ldr	pc, [ip, #800]!	; 0x320

Disassembly of section .text:

00010d3c <main@@Base>:
   10d3c:	movw	r0, #10300	; 0x283c
   10d40:	movt	r0, #1
   10d44:	strd	r4, [sp, #-20]!	; 0xffffffec
   10d48:	strd	r6, [sp, #8]
   10d4c:	mov	r4, #0
   10d50:	movw	r7, #10384	; 0x2890
   10d54:	movt	r7, #1
   10d58:	str	lr, [sp, #16]
   10d5c:	sub	sp, sp, #36	; 0x24
   10d60:	bl	10cc4 <puts@plt>
   10d64:	mov	r1, #1
   10d68:	mov	r0, #8
   10d6c:	bl	112c4 <grafo_novo@@Base>
   10d70:	mov	r6, r0
   10d74:	mov	r2, #3
   10d78:	mov	r1, #1
   10d7c:	bl	113d4 <grafo_adiciona@@Base>
   10d80:	mov	r0, r6
   10d84:	mov	r2, #3
   10d88:	mov	r1, #2
   10d8c:	bl	113d4 <grafo_adiciona@@Base>
   10d90:	mov	r0, r6
   10d94:	mov	r2, #4
   10d98:	mov	r1, #2
   10d9c:	bl	113d4 <grafo_adiciona@@Base>
   10da0:	mov	r0, r6
   10da4:	mov	r2, #5
   10da8:	mov	r1, #2
   10dac:	bl	113d4 <grafo_adiciona@@Base>
   10db0:	mov	r0, r6
   10db4:	mov	r2, #2
   10db8:	mov	r1, #3
   10dbc:	bl	113d4 <grafo_adiciona@@Base>
   10dc0:	mov	r0, r6
   10dc4:	mov	r2, #4
   10dc8:	mov	r1, #3
   10dcc:	bl	113d4 <grafo_adiciona@@Base>
   10dd0:	mov	r0, r6
   10dd4:	mov	r2, #6
   10dd8:	mov	r1, #4
   10ddc:	bl	113d4 <grafo_adiciona@@Base>
   10de0:	mov	r0, r6
   10de4:	mov	r2, #7
   10de8:	mov	r1, #4
   10dec:	bl	113d4 <grafo_adiciona@@Base>
   10df0:	mov	r0, r6
   10df4:	mov	r2, #4
   10df8:	mov	r1, #5
   10dfc:	bl	113d4 <grafo_adiciona@@Base>
   10e00:	mov	r0, r6
   10e04:	mov	r2, #6
   10e08:	mov	r1, #5
   10e0c:	bl	113d4 <grafo_adiciona@@Base>
   10e10:	mov	r0, r6
   10e14:	mov	r2, #7
   10e18:	mov	r1, #5
   10e1c:	bl	113d4 <grafo_adiciona@@Base>
   10e20:	mov	r0, r6
   10e24:	mov	r2, #7
   10e28:	mov	r1, #6
   10e2c:	bl	113d4 <grafo_adiciona@@Base>
   10e30:	mov	r0, r6
   10e34:	mov	r3, #5
   10e38:	mov	r2, #7
   10e3c:	mov	r1, #1
   10e40:	bl	1114c <descobre_caminho@@Base>
   10e44:	mov	r5, r0
   10e48:	movw	r0, #10320	; 0x2850
   10e4c:	movt	r0, #1
   10e50:	bl	10c70 <printf@plt>
   10e54:	b	10e68 <main@@Base+0x12c>
   10e58:	bl	121a4 <lista_elemento@@Base>
   10e5c:	mov	r1, r0
   10e60:	mov	r0, r7
   10e64:	bl	10c70 <printf@plt>
   10e68:	mov	r0, r5
   10e6c:	bl	12194 <lista_tamanho@@Base>
   10e70:	cmp	r0, r4
   10e74:	mov	r1, r4
   10e78:	mov	r0, r5
   10e7c:	add	r4, r4, #1
   10e80:	bgt	10e58 <main@@Base+0x11c>
   10e84:	movw	r0, #10388	; 0x2894
   10e88:	movt	r0, #1
   10e8c:	bl	10cc4 <puts@plt>
   10e90:	mov	r0, r6
   10e94:	movw	r6, #10428	; 0x28bc
   10e98:	movt	r6, #1
   10e9c:	bl	11330 <grafo_apaga@@Base>
   10ea0:	mov	r0, r5
   10ea4:	bl	12134 <lista_apaga@@Base>
   10ea8:	movw	r0, #10392	; 0x2898
   10eac:	movt	r0, #1
   10eb0:	bl	10cc4 <puts@plt>
   10eb4:	movw	r1, #10412	; 0x28ac
   10eb8:	movt	r1, #1
   10ebc:	movw	r0, #10416	; 0x28b0
   10ec0:	movt	r0, #1
   10ec4:	bl	10c88 <fopen@plt>
   10ec8:	mov	r5, r0
   10ecc:	bl	12104 <lista_nova@@Base>
   10ed0:	mov	r4, r0
   10ed4:	bl	12104 <lista_nova@@Base>
   10ed8:	mov	r7, r0
   10edc:	b	10ef4 <main@@Base+0x1b8>
   10ee0:	bl	1228c <lista_insere@@Base>
   10ee4:	mvn	r2, #0
   10ee8:	mov	r1, sp
   10eec:	mov	r0, r7
   10ef0:	bl	1228c <lista_insere@@Base>
   10ef4:	add	r2, sp, #8
   10ef8:	mov	r1, r6
   10efc:	mov	r3, sp
   10f00:	mov	r0, r5
   10f04:	bl	10c7c <__isoc99_fscanf@plt>
   10f08:	cmp	r0, #2
   10f0c:	mvn	r2, #0
   10f10:	add	r1, sp, #8
   10f14:	mov	r0, r4
   10f18:	beq	10ee0 <main@@Base+0x1a4>
   10f1c:	mov	r2, #4
   10f20:	mov	r1, r7
   10f24:	bl	11060 <_start@@Base+0xf0>
   10f28:	cmp	r0, #0
   10f2c:	beq	10f60 <main@@Base+0x224>
   10f30:	mov	r0, r4
   10f34:	bl	12134 <lista_apaga@@Base>
   10f38:	mov	r0, r7
   10f3c:	bl	12134 <lista_apaga@@Base>
   10f40:	mov	r0, r5
   10f44:	bl	10d18 <fclose@plt>
   10f48:	mov	r0, #0
   10f4c:	add	sp, sp, #36	; 0x24
   10f50:	ldrd	r4, [sp]
   10f54:	ldrd	r6, [sp, #8]
   10f58:	add	sp, sp, #16
   10f5c:	pop	{pc}		; (ldr pc, [sp], #4)
   10f60:	movw	r0, #10436	; 0x28c4
   10f64:	movt	r0, #1
   10f68:	bl	10cc4 <puts@plt>
   10f6c:	b	10f30 <main@@Base+0x1f4>

00010f70 <_start@@Base>:
   10f70:	mov	fp, #0
   10f74:	mov	lr, #0
   10f78:	pop	{r1}		; (ldr r1, [sp], #4)
   10f7c:	mov	r2, sp
   10f80:	push	{r2}		; (str r2, [sp, #-4]!)
   10f84:	push	{r0}		; (str r0, [sp, #-4]!)
   10f88:	ldr	ip, [pc, #16]	; 10fa0 <_start@@Base+0x30>
   10f8c:	push	{ip}		; (str ip, [sp, #-4]!)
   10f90:	ldr	r0, [pc, #12]	; 10fa4 <_start@@Base+0x34>
   10f94:	ldr	r3, [pc, #12]	; 10fa8 <_start@@Base+0x38>
   10f98:	bl	10cdc <__libc_start_main@plt>
   10f9c:	bl	10d30 <abort@plt>
   10fa0:	andeq	r2, r1, r0, lsr #16
   10fa4:	andeq	r0, r1, ip, lsr sp
   10fa8:	andeq	r2, r1, r0, asr #15
   10fac:	ldr	r3, [pc, #20]	; 10fc8 <_start@@Base+0x58>
   10fb0:	ldr	r2, [pc, #20]	; 10fcc <_start@@Base+0x5c>
   10fb4:	add	r3, pc, r3
   10fb8:	ldr	r2, [r3, r2]
   10fbc:	cmp	r2, #0
   10fc0:	bxeq	lr
   10fc4:	b	10ce8 <__gmon_start__@plt>
   10fc8:	andeq	r2, r1, r4, asr #32
   10fcc:	andeq	r0, r0, ip, asr r0
   10fd0:	ldr	r0, [pc, #24]	; 10ff0 <_start@@Base+0x80>
   10fd4:	ldr	r3, [pc, #24]	; 10ff4 <_start@@Base+0x84>
   10fd8:	cmp	r3, r0
   10fdc:	bxeq	lr
   10fe0:	ldr	r3, [pc, #16]	; 10ff8 <_start@@Base+0x88>
   10fe4:	cmp	r3, #0
   10fe8:	bxeq	lr
   10fec:	bx	r3
   10ff0:	andeq	r3, r2, r8, rrx
   10ff4:	andeq	r3, r2, r8, rrx
   10ff8:	andeq	r0, r0, r0
   10ffc:	ldr	r0, [pc, #36]	; 11028 <_start@@Base+0xb8>
   11000:	ldr	r1, [pc, #36]	; 1102c <_start@@Base+0xbc>
   11004:	sub	r1, r1, r0
   11008:	asr	r1, r1, #2
   1100c:	add	r1, r1, r1, lsr #31
   11010:	asrs	r1, r1, #1
   11014:	bxeq	lr
   11018:	ldr	r3, [pc, #16]	; 11030 <_start@@Base+0xc0>
   1101c:	cmp	r3, #0
   11020:	bxeq	lr
   11024:	bx	r3
   11028:	andeq	r3, r2, r8, rrx
   1102c:	andeq	r3, r2, r8, rrx
   11030:	andeq	r0, r0, r0
   11034:	push	{r4, lr}
   11038:	ldr	r4, [pc, #24]	; 11058 <_start@@Base+0xe8>
   1103c:	ldrb	r3, [r4]
   11040:	cmp	r3, #0
   11044:	popne	{r4, pc}
   11048:	bl	10fd0 <_start@@Base+0x60>
   1104c:	mov	r3, #1
   11050:	strb	r3, [r4]
   11054:	pop	{r4, pc}
   11058:	andeq	r3, r2, r8, rrx
   1105c:	b	10ffc <_start@@Base+0x8c>
   11060:	strd	r4, [sp, #-28]!	; 0xffffffe4
   11064:	mov	r5, r2
   11068:	strd	r6, [sp, #8]
   1106c:	mov	r6, r0
   11070:	mov	r0, r2
   11074:	strd	r8, [sp, #16]
   11078:	mov	r7, r1
   1107c:	str	lr, [sp, #24]
   11080:	sub	sp, sp, #28
   11084:	bl	11b98 <heap_nova@@Base>
   11088:	cmp	r5, #0
   1108c:	mov	r8, r0
   11090:	ble	11128 <_start@@Base+0x1b8>
   11094:	mov	r4, #0
   11098:	b	110a0 <_start@@Base+0x130>
   1109c:	mov	r4, r3
   110a0:	mov	r1, r4
   110a4:	mov	r0, r6
   110a8:	bl	121a4 <lista_elemento@@Base>
   110ac:	mov	r1, r0
   110b0:	add	r0, sp, #4
   110b4:	bl	10cb8 <strcpy@plt>
   110b8:	mov	r1, r4
   110bc:	mov	r0, r7
   110c0:	bl	121a4 <lista_elemento@@Base>
   110c4:	mov	r2, #10
   110c8:	mov	r1, #0
   110cc:	bl	10c64 <strtol@plt>
   110d0:	mov	r2, r0
   110d4:	add	r1, sp, #4
   110d8:	mov	r0, r8
   110dc:	bl	11d10 <heap_insere@@Base>
   110e0:	add	r3, r4, #1
   110e4:	cmp	r5, r3
   110e8:	bne	1109c <_start@@Base+0x12c>
   110ec:	mov	r5, #0
   110f0:	movw	r9, #10288	; 0x2830
   110f4:	movt	r9, #1
   110f8:	mov	r6, r5
   110fc:	ldr	r3, [r8, #8]
   11100:	add	r7, r6, #1
   11104:	mov	r0, r9
   11108:	mov	r1, r7
   1110c:	ldr	r3, [r3, r5]
   11110:	add	r5, r5, #4
   11114:	ldr	r2, [r3, #4]
   11118:	bl	10c70 <printf@plt>
   1111c:	cmp	r4, r6
   11120:	mov	r6, r7
   11124:	bne	110fc <_start@@Base+0x18c>
   11128:	mov	r0, r8
   1112c:	bl	11c00 <heap_apaga@@Base>
   11130:	mov	r0, #1
   11134:	add	sp, sp, #28
   11138:	ldrd	r4, [sp]
   1113c:	ldrd	r6, [sp, #8]
   11140:	ldrd	r8, [sp, #16]
   11144:	add	sp, sp, #24
   11148:	pop	{pc}		; (ldr pc, [sp], #4)

0001114c <descobre_caminho@@Base>:
   1114c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11150:	mov	r4, r1
   11154:	strd	r6, [sp, #8]
   11158:	strd	r8, [sp, #16]
   1115c:	mov	r8, r0
   11160:	strd	sl, [sp, #24]
   11164:	mov	sl, r3
   11168:	str	lr, [sp, #32]
   1116c:	sub	sp, sp, #20
   11170:	str	r2, [sp, #4]
   11174:	bl	12104 <lista_nova@@Base>
   11178:	mov	r6, r0
   1117c:	add	r3, sp, #12
   11180:	mov	r1, r4
   11184:	mov	r2, sl
   11188:	mov	r0, r8
   1118c:	bl	119c8 <grafo_bfs@@Base>
   11190:	ldr	r3, [sp, #12]
   11194:	mov	r9, r0
   11198:	cmp	r3, #0
   1119c:	ble	111e4 <descobre_caminho@@Base+0x98>
   111a0:	movw	r7, #10296	; 0x2838
   111a4:	movt	r7, #1
   111a8:	sub	fp, r0, #4
   111ac:	mov	r5, #0
   111b0:	add	r4, sp, #8
   111b4:	mov	r1, r7
   111b8:	mov	r0, r4
   111bc:	ldr	r2, [fp, #4]!
   111c0:	bl	10d24 <sprintf@plt>
   111c4:	mvn	r2, #0
   111c8:	mov	r1, r4
   111cc:	mov	r0, r6
   111d0:	add	r5, r5, #1
   111d4:	bl	1228c <lista_insere@@Base>
   111d8:	ldr	r2, [sp, #12]
   111dc:	cmp	r2, r5
   111e0:	bgt	111b4 <descobre_caminho@@Base+0x68>
   111e4:	add	r3, sp, #12
   111e8:	mov	r1, sl
   111ec:	ldr	r2, [sp, #4]
   111f0:	mov	r0, r8
   111f4:	bl	119c8 <grafo_bfs@@Base>
   111f8:	ldr	r3, [sp, #12]
   111fc:	mov	sl, r0
   11200:	cmp	r3, #1
   11204:	ble	1124c <descobre_caminho@@Base+0x100>
   11208:	movw	r8, #10296	; 0x2838
   1120c:	movt	r8, #1
   11210:	mov	r7, r0
   11214:	mov	r5, #1
   11218:	add	r4, sp, #8
   1121c:	mov	r1, r8
   11220:	mov	r0, r4
   11224:	ldr	r2, [r7, #4]!
   11228:	bl	10d24 <sprintf@plt>
   1122c:	mvn	r2, #0
   11230:	mov	r1, r4
   11234:	mov	r0, r6
   11238:	add	r5, r5, #1
   1123c:	bl	1228c <lista_insere@@Base>
   11240:	ldr	r3, [sp, #12]
   11244:	cmp	r3, r5
   11248:	bgt	1121c <descobre_caminho@@Base+0xd0>
   1124c:	mov	r0, sl
   11250:	bl	10c94 <free@plt>
   11254:	mov	r0, r9
   11258:	bl	10c94 <free@plt>
   1125c:	mov	r0, r6
   11260:	add	sp, sp, #20
   11264:	ldrd	r4, [sp]
   11268:	ldrd	r6, [sp, #8]
   1126c:	ldrd	r8, [sp, #16]
   11270:	ldrd	sl, [sp, #24]
   11274:	add	sp, sp, #32
   11278:	pop	{pc}		; (ldr pc, [sp], #4)

0001127c <simula_acontecimentos@@Base>:
   1127c:	cmp	r2, #20
   11280:	ble	1128c <simula_acontecimentos@@Base+0x10>
   11284:	mov	r0, #0
   11288:	bx	lr
   1128c:	b	11060 <_start@@Base+0xf0>

00011290 <cria_no@@Base>:
   11290:	str	r4, [sp, #-8]!
   11294:	mov	r4, r0
   11298:	mov	r0, #8
   1129c:	str	lr, [sp, #4]
   112a0:	bl	10cd0 <malloc@plt>
   112a4:	cmp	r0, #0
   112a8:	beq	112b8 <cria_no@@Base+0x28>
   112ac:	mov	r3, #0
   112b0:	str	r4, [r0]
   112b4:	str	r3, [r0, #4]
   112b8:	ldr	r4, [sp]
   112bc:	add	sp, sp, #4
   112c0:	pop	{pc}		; (ldr pc, [sp], #4)

000112c4 <grafo_novo@@Base>:
   112c4:	strd	r4, [sp, #-16]!
   112c8:	mov	r5, r0
   112cc:	mov	r0, #12
   112d0:	str	r6, [sp, #8]
   112d4:	mov	r6, r1
   112d8:	str	lr, [sp, #12]
   112dc:	bl	10cd0 <malloc@plt>
   112e0:	subs	r4, r0, #0
   112e4:	beq	1130c <grafo_novo@@Base+0x48>
   112e8:	mov	r0, r5
   112ec:	mov	r1, #8
   112f0:	str	r6, [r4]
   112f4:	str	r5, [r4, #4]
   112f8:	bl	10c4c <calloc@plt>
   112fc:	cmp	r0, #0
   11300:	mov	r3, r0
   11304:	str	r0, [r4, #8]
   11308:	beq	11320 <grafo_novo@@Base+0x5c>
   1130c:	mov	r0, r4
   11310:	ldrd	r4, [sp]
   11314:	ldr	r6, [sp, #8]
   11318:	add	sp, sp, #12
   1131c:	pop	{pc}		; (ldr pc, [sp], #4)
   11320:	mov	r0, r4
   11324:	mov	r4, r3
   11328:	bl	10c94 <free@plt>
   1132c:	b	1130c <grafo_novo@@Base+0x48>

00011330 <grafo_apaga@@Base>:
   11330:	strd	r4, [sp, #-16]!
   11334:	subs	r5, r0, #0
   11338:	str	r6, [sp, #8]
   1133c:	str	lr, [sp, #12]
   11340:	beq	113c4 <grafo_apaga@@Base+0x94>
   11344:	ldr	r2, [r5, #8]
   11348:	cmp	r2, #0
   1134c:	beq	113ac <grafo_apaga@@Base+0x7c>
   11350:	ldr	r1, [r5, #4]
   11354:	cmp	r1, #0
   11358:	movgt	r6, #0
   1135c:	ble	113a4 <grafo_apaga@@Base+0x74>
   11360:	lsl	r4, r6, #3
   11364:	add	r3, r2, r4
   11368:	ldr	r0, [r3, #4]
   1136c:	cmp	r0, #0
   11370:	beq	11398 <grafo_apaga@@Base+0x68>
   11374:	ldr	r2, [r0, #4]
   11378:	str	r2, [r3, #4]
   1137c:	bl	10c94 <free@plt>
   11380:	ldr	r2, [r5, #8]
   11384:	add	r3, r2, r4
   11388:	ldr	r0, [r3, #4]
   1138c:	cmp	r0, #0
   11390:	bne	11374 <grafo_apaga@@Base+0x44>
   11394:	ldr	r1, [r5, #4]
   11398:	add	r6, r6, #1
   1139c:	cmp	r6, r1
   113a0:	blt	11360 <grafo_apaga@@Base+0x30>
   113a4:	mov	r0, r2
   113a8:	bl	10c94 <free@plt>
   113ac:	mov	r0, r5
   113b0:	ldrd	r4, [sp]
   113b4:	ldr	r6, [sp, #8]
   113b8:	ldr	lr, [sp, #12]
   113bc:	add	sp, sp, #16
   113c0:	b	10c94 <free@plt>
   113c4:	ldrd	r4, [sp]
   113c8:	ldr	r6, [sp, #8]
   113cc:	add	sp, sp, #12
   113d0:	pop	{pc}		; (ldr pc, [sp], #4)

000113d4 <grafo_adiciona@@Base>:
   113d4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   113d8:	strd	r6, [sp, #8]
   113dc:	subs	r6, r0, #0
   113e0:	strd	r8, [sp, #16]
   113e4:	str	sl, [sp, #24]
   113e8:	str	lr, [sp, #28]
   113ec:	beq	11468 <grafo_adiciona@@Base+0x94>
   113f0:	ldr	r8, [r6, #8]
   113f4:	add	r9, r8, r1, lsl #3
   113f8:	ldr	r5, [r9, #4]
   113fc:	cmp	r5, #0
   11400:	beq	11430 <grafo_adiciona@@Base+0x5c>
   11404:	ldr	r3, [r5]
   11408:	cmp	r2, r3
   1140c:	beq	11468 <grafo_adiciona@@Base+0x94>
   11410:	mov	r3, r5
   11414:	b	11424 <grafo_adiciona@@Base+0x50>
   11418:	ldr	ip, [r3]
   1141c:	cmp	r2, ip
   11420:	beq	11468 <grafo_adiciona@@Base+0x94>
   11424:	ldr	r3, [r3, #4]
   11428:	cmp	r3, #0
   1142c:	bne	11418 <grafo_adiciona@@Base+0x44>
   11430:	mov	r0, #8
   11434:	mov	r4, r2
   11438:	mov	r7, r1
   1143c:	bl	10cd0 <malloc@plt>
   11440:	cmp	r0, #0
   11444:	beq	114bc <grafo_adiciona@@Base+0xe8>
   11448:	ldr	r3, [r8, r7, lsl #3]
   1144c:	strd	r4, [r0]
   11450:	ldr	r2, [r6]
   11454:	str	r0, [r9, #4]
   11458:	add	r3, r3, #1
   1145c:	cmp	r2, #0
   11460:	str	r3, [r8, r7, lsl #3]
   11464:	beq	11480 <grafo_adiciona@@Base+0xac>
   11468:	ldrd	r4, [sp]
   1146c:	ldrd	r6, [sp, #8]
   11470:	ldrd	r8, [sp, #16]
   11474:	ldr	sl, [sp, #24]
   11478:	add	sp, sp, #28
   1147c:	pop	{pc}		; (ldr pc, [sp], #4)
   11480:	mov	r0, #8
   11484:	bl	10cd0 <malloc@plt>
   11488:	add	r2, r8, r4, lsl #3
   1148c:	cmp	r0, #0
   11490:	ldr	r1, [r2, #4]
   11494:	beq	114b4 <grafo_adiciona@@Base+0xe0>
   11498:	ldr	r3, [r8, r4, lsl #3]
   1149c:	str	r7, [r0]
   114a0:	str	r1, [r0, #4]
   114a4:	str	r0, [r2, #4]
   114a8:	add	r3, r3, #1
   114ac:	str	r3, [r8, r4, lsl #3]
   114b0:	b	11468 <grafo_adiciona@@Base+0x94>
   114b4:	str	r1, [r0, #4]
   114b8:	udf	#0
   114bc:	str	r5, [r0, #4]
   114c0:	udf	#0

000114c4 <grafo_remove@@Base>:
   114c4:	strd	r4, [sp, #-16]!
   114c8:	str	r6, [sp, #8]
   114cc:	subs	r6, r0, #0
   114d0:	str	lr, [sp, #12]
   114d4:	beq	11588 <grafo_remove@@Base+0xc4>
   114d8:	ldr	ip, [r6, #8]
   114dc:	add	ip, ip, r1, lsl #3
   114e0:	ldr	lr, [ip, #4]
   114e4:	cmp	lr, #0
   114e8:	beq	11588 <grafo_remove@@Base+0xc4>
   114ec:	mov	r4, r2
   114f0:	ldrd	r2, [lr]
   114f4:	mov	r5, r1
   114f8:	cmp	r2, r4
   114fc:	beq	115e8 <grafo_remove@@Base+0x124>
   11500:	cmp	r3, #0
   11504:	beq	11528 <grafo_remove@@Base+0x64>
   11508:	ldr	r2, [r3]
   1150c:	cmp	r4, r2
   11510:	bne	115a8 <grafo_remove@@Base+0xe4>
   11514:	mov	r0, r3
   11518:	mov	r3, lr
   1151c:	ldr	r2, [r0, #4]
   11520:	str	r2, [r3, #4]
   11524:	bl	10c94 <free@plt>
   11528:	ldr	r3, [r6]
   1152c:	cmp	r3, #0
   11530:	bne	11588 <grafo_remove@@Base+0xc4>
   11534:	ldr	r2, [r6, #8]
   11538:	add	r4, r2, r4, lsl #3
   1153c:	ldr	r2, [r4, #4]
   11540:	ldm	r2, {r1, r3}
   11544:	cmp	r1, r5
   11548:	moveq	r0, r2
   1154c:	streq	r3, [r4, #4]
   11550:	beq	115d4 <grafo_remove@@Base+0x110>
   11554:	cmp	r3, #0
   11558:	beq	11588 <grafo_remove@@Base+0xc4>
   1155c:	ldr	r1, [r3]
   11560:	cmp	r1, r5
   11564:	bne	1157c <grafo_remove@@Base+0xb8>
   11568:	b	115c4 <grafo_remove@@Base+0x100>
   1156c:	ldr	r2, [r0]
   11570:	cmp	r2, r5
   11574:	beq	115cc <grafo_remove@@Base+0x108>
   11578:	mov	r3, r0
   1157c:	ldr	r0, [r3, #4]
   11580:	cmp	r0, #0
   11584:	bne	1156c <grafo_remove@@Base+0xa8>
   11588:	ldrd	r4, [sp]
   1158c:	ldr	r6, [sp, #8]
   11590:	add	sp, sp, #12
   11594:	pop	{pc}		; (ldr pc, [sp], #4)
   11598:	ldr	ip, [r0]
   1159c:	cmp	ip, r4
   115a0:	beq	1151c <grafo_remove@@Base+0x58>
   115a4:	mov	r3, r0
   115a8:	ldr	r0, [r3, #4]
   115ac:	cmp	r0, #0
   115b0:	bne	11598 <grafo_remove@@Base+0xd4>
   115b4:	ldr	r3, [r6]
   115b8:	cmp	r3, #0
   115bc:	bne	11588 <grafo_remove@@Base+0xc4>
   115c0:	b	11534 <grafo_remove@@Base+0x70>
   115c4:	mov	r0, r3
   115c8:	mov	r3, r2
   115cc:	ldr	r2, [r0, #4]
   115d0:	str	r2, [r3, #4]
   115d4:	ldrd	r4, [sp]
   115d8:	ldr	r6, [sp, #8]
   115dc:	ldr	lr, [sp, #12]
   115e0:	add	sp, sp, #16
   115e4:	b	10c94 <free@plt>
   115e8:	mov	r0, lr
   115ec:	str	r3, [ip, #4]
   115f0:	bl	10c94 <free@plt>
   115f4:	ldr	r3, [r6]
   115f8:	cmp	r3, #0
   115fc:	bne	11588 <grafo_remove@@Base+0xc4>
   11600:	b	11534 <grafo_remove@@Base+0x70>

00011604 <grafo_existe@@Base>:
   11604:	cmp	r0, #0
   11608:	beq	11650 <grafo_existe@@Base+0x4c>
   1160c:	ldr	r3, [r0, #8]
   11610:	add	r3, r3, r1, lsl #3
   11614:	ldr	r0, [r3, #4]
   11618:	cmp	r0, #0
   1161c:	beq	11650 <grafo_existe@@Base+0x4c>
   11620:	ldr	r3, [r0]
   11624:	cmp	r2, r3
   11628:	bne	1163c <grafo_existe@@Base+0x38>
   1162c:	b	1164c <grafo_existe@@Base+0x48>
   11630:	ldr	r3, [r0]
   11634:	cmp	r3, r2
   11638:	beq	1164c <grafo_existe@@Base+0x48>
   1163c:	ldr	r0, [r0, #4]
   11640:	cmp	r0, #0
   11644:	bne	11630 <grafo_existe@@Base+0x2c>
   11648:	bx	lr
   1164c:	mov	r0, #1
   11650:	bx	lr

00011654 <grafo_imprime@@Base>:
   11654:	ldr	r3, [r0, #4]
   11658:	cmp	r3, #0
   1165c:	bxle	lr
   11660:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11664:	mov	r5, #0
   11668:	strd	r6, [sp, #8]
   1166c:	movw	r6, #10472	; 0x28e8
   11670:	movt	r6, #1
   11674:	mov	r7, r0
   11678:	strd	r8, [sp, #16]
   1167c:	movw	r8, #10464	; 0x28e0
   11680:	movt	r8, #1
   11684:	movw	r9, #10296	; 0x2838
   11688:	movt	r9, #1
   1168c:	str	sl, [sp, #24]
   11690:	str	lr, [sp, #28]
   11694:	b	116b0 <grafo_imprime@@Base+0x5c>
   11698:	mov	r0, #10
   1169c:	add	r5, r5, #1
   116a0:	bl	10d0c <putchar@plt>
   116a4:	ldr	r3, [r7, #4]
   116a8:	cmp	r3, r5
   116ac:	ble	116f4 <grafo_imprime@@Base+0xa0>
   116b0:	ldr	r3, [r7, #8]
   116b4:	mov	r1, r5
   116b8:	mov	r0, r8
   116bc:	add	r3, r3, r5, lsl #3
   116c0:	ldr	r4, [r3, #4]
   116c4:	bl	10c70 <printf@plt>
   116c8:	cmp	r4, #0
   116cc:	beq	11698 <grafo_imprime@@Base+0x44>
   116d0:	mov	r0, r9
   116d4:	b	116dc <grafo_imprime@@Base+0x88>
   116d8:	mov	r0, r6
   116dc:	ldr	r1, [r4]
   116e0:	bl	10c70 <printf@plt>
   116e4:	ldr	r4, [r4, #4]
   116e8:	cmp	r4, #0
   116ec:	bne	116d8 <grafo_imprime@@Base+0x84>
   116f0:	b	11698 <grafo_imprime@@Base+0x44>
   116f4:	ldrd	r4, [sp]
   116f8:	ldrd	r6, [sp, #8]
   116fc:	ldrd	r8, [sp, #16]
   11700:	ldr	sl, [sp, #24]
   11704:	add	sp, sp, #28
   11708:	pop	{pc}		; (ldr pc, [sp], #4)

0001170c <dfs_helper@@Base>:
   1170c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11710:	strd	r6, [sp, #8]
   11714:	strd	r8, [sp, #16]
   11718:	strd	sl, [sp, #24]
   1171c:	str	lr, [sp, #32]
   11720:	sub	sp, sp, #12
   11724:	ldr	r8, [sp, #48]	; 0x30
   11728:	ldr	r9, [r8, r1, lsl #2]
   1172c:	cmp	r9, #0
   11730:	movne	r9, #0
   11734:	bne	117bc <dfs_helper@@Base+0xb0>
   11738:	cmp	r1, r2
   1173c:	str	r3, [r8, r1, lsl #2]
   11740:	moveq	r9, r3
   11744:	beq	117bc <dfs_helper@@Base+0xb0>
   11748:	mov	r6, r1
   1174c:	ldr	r1, [r0, #4]
   11750:	mov	fp, r2
   11754:	mov	r5, r0
   11758:	cmp	r1, #0
   1175c:	lslgt	sl, r6, #3
   11760:	addgt	r7, r3, #1
   11764:	movgt	r4, r9
   11768:	ble	117b4 <dfs_helper@@Base+0xa8>
   1176c:	ldr	r3, [r5, #8]
   11770:	add	r3, r3, sl
   11774:	ldr	r3, [r3, #4]
   11778:	cmp	r3, #0
   1177c:	beq	117a8 <dfs_helper@@Base+0x9c>
   11780:	ldr	r2, [r3]
   11784:	cmp	r4, r2
   11788:	bne	1179c <dfs_helper@@Base+0x90>
   1178c:	b	117dc <dfs_helper@@Base+0xd0>
   11790:	ldr	r2, [r3]
   11794:	cmp	r2, r4
   11798:	beq	117dc <dfs_helper@@Base+0xd0>
   1179c:	ldr	r3, [r3, #4]
   117a0:	cmp	r3, #0
   117a4:	bne	11790 <dfs_helper@@Base+0x84>
   117a8:	add	r4, r4, #1
   117ac:	cmp	r4, r1
   117b0:	blt	1176c <dfs_helper@@Base+0x60>
   117b4:	mov	r3, #0
   117b8:	str	r3, [r8, r6, lsl #2]
   117bc:	mov	r0, r9
   117c0:	add	sp, sp, #12
   117c4:	ldrd	r4, [sp]
   117c8:	ldrd	r6, [sp, #8]
   117cc:	ldrd	r8, [sp, #16]
   117d0:	ldrd	sl, [sp, #24]
   117d4:	add	sp, sp, #32
   117d8:	pop	{pc}		; (ldr pc, [sp], #4)
   117dc:	mov	r3, r7
   117e0:	mov	r2, fp
   117e4:	str	r8, [sp]
   117e8:	mov	r1, r4
   117ec:	mov	r0, r5
   117f0:	bl	1170c <dfs_helper@@Base>
   117f4:	cmp	r0, #0
   117f8:	bne	11810 <dfs_helper@@Base+0x104>
   117fc:	ldr	r1, [r5, #4]
   11800:	add	r4, r4, #1
   11804:	cmp	r4, r1
   11808:	blt	1176c <dfs_helper@@Base+0x60>
   1180c:	b	117b4 <dfs_helper@@Base+0xa8>
   11810:	mov	r9, r0
   11814:	b	117bc <dfs_helper@@Base+0xb0>

00011818 <grafo_dfs@@Base>:
   11818:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1181c:	strd	r6, [sp, #8]
   11820:	subs	r6, r0, #0
   11824:	moveq	r4, r6
   11828:	strd	r8, [sp, #16]
   1182c:	strd	sl, [sp, #24]
   11830:	str	lr, [sp, #32]
   11834:	sub	sp, sp, #20
   11838:	beq	11900 <grafo_dfs@@Base+0xe8>
   1183c:	ldr	fp, [r6, #4]
   11840:	mov	r7, r1
   11844:	mov	r1, #4
   11848:	mov	r9, r3
   1184c:	mov	r8, r2
   11850:	mov	r0, fp
   11854:	bl	10c4c <calloc@plt>
   11858:	ldr	r4, [r0, r7, lsl #2]
   1185c:	mov	r5, r0
   11860:	cmp	r4, #0
   11864:	bne	118ec <grafo_dfs@@Base+0xd4>
   11868:	mov	sl, #1
   1186c:	cmp	r7, r8
   11870:	str	sl, [r0, r7, lsl #2]
   11874:	beq	119b0 <grafo_dfs@@Base+0x198>
   11878:	cmp	fp, #0
   1187c:	lslgt	sl, r7, #3
   11880:	ble	118e4 <grafo_dfs@@Base+0xcc>
   11884:	ldr	r3, [r6, #8]
   11888:	add	r3, r3, sl
   1188c:	ldr	r0, [r3, #4]
   11890:	cmp	r0, #0
   11894:	bne	118a8 <grafo_dfs@@Base+0x90>
   11898:	b	118d8 <grafo_dfs@@Base+0xc0>
   1189c:	ldr	r0, [r0, #4]
   118a0:	cmp	r0, #0
   118a4:	beq	118d8 <grafo_dfs@@Base+0xc0>
   118a8:	ldr	r3, [r0]
   118ac:	cmp	r4, r3
   118b0:	bne	1189c <grafo_dfs@@Base+0x84>
   118b4:	mov	r3, #2
   118b8:	mov	r2, r8
   118bc:	str	r5, [sp]
   118c0:	mov	r1, r4
   118c4:	mov	r0, r6
   118c8:	bl	1170c <dfs_helper@@Base>
   118cc:	subs	r3, r0, #0
   118d0:	bne	11920 <grafo_dfs@@Base+0x108>
   118d4:	ldr	fp, [r6, #4]
   118d8:	add	r4, r4, #1
   118dc:	cmp	r4, fp
   118e0:	blt	11884 <grafo_dfs@@Base+0x6c>
   118e4:	mov	r3, #0
   118e8:	str	r3, [r5, r7, lsl #2]
   118ec:	mov	r0, r5
   118f0:	bl	10c94 <free@plt>
   118f4:	mov	r3, #0
   118f8:	mov	r4, r3
   118fc:	str	r3, [r9]
   11900:	mov	r0, r4
   11904:	add	sp, sp, #20
   11908:	ldrd	r4, [sp]
   1190c:	ldrd	r6, [sp, #8]
   11910:	ldrd	r8, [sp, #16]
   11914:	ldrd	sl, [sp, #24]
   11918:	add	sp, sp, #32
   1191c:	pop	{pc}		; (ldr pc, [sp], #4)
   11920:	mov	r1, #4
   11924:	str	r3, [sp, #12]
   11928:	bl	10c4c <calloc@plt>
   1192c:	ldr	r3, [sp, #12]
   11930:	mov	r4, r0
   11934:	cmp	r3, #0
   11938:	ble	1198c <grafo_dfs@@Base+0x174>
   1193c:	ldr	fp, [r6, #4]
   11940:	mov	ip, #0
   11944:	sub	lr, r4, #4
   11948:	cmp	fp, #0
   1194c:	add	ip, ip, #1
   11950:	ble	11984 <grafo_dfs@@Base+0x16c>
   11954:	ldr	r2, [r5]
   11958:	cmp	ip, r2
   1195c:	movne	r1, r5
   11960:	movne	r2, #0
   11964:	bne	11978 <grafo_dfs@@Base+0x160>
   11968:	b	1199c <grafo_dfs@@Base+0x184>
   1196c:	ldr	r0, [r1, #4]!
   11970:	cmp	r0, ip
   11974:	beq	119a0 <grafo_dfs@@Base+0x188>
   11978:	add	r2, r2, #1
   1197c:	cmp	r2, fp
   11980:	bne	1196c <grafo_dfs@@Base+0x154>
   11984:	cmp	ip, r3
   11988:	blt	11948 <grafo_dfs@@Base+0x130>
   1198c:	mov	r0, r5
   11990:	str	r3, [r9]
   11994:	bl	10c94 <free@plt>
   11998:	b	11900 <grafo_dfs@@Base+0xe8>
   1199c:	mov	r2, #0
   119a0:	cmp	ip, r3
   119a4:	str	r2, [lr, ip, lsl #2]
   119a8:	blt	11948 <grafo_dfs@@Base+0x130>
   119ac:	b	1198c <grafo_dfs@@Base+0x174>
   119b0:	mov	r1, #4
   119b4:	mov	r0, sl
   119b8:	bl	10c4c <calloc@plt>
   119bc:	mov	r4, r0
   119c0:	mov	r3, sl
   119c4:	b	11940 <grafo_dfs@@Base+0x128>

000119c8 <grafo_bfs@@Base>:
   119c8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   119cc:	strd	r6, [sp, #8]
   119d0:	strd	sl, [sp, #24]
   119d4:	subs	fp, r0, #0
   119d8:	moveq	r7, fp
   119dc:	strd	r8, [sp, #16]
   119e0:	str	lr, [sp, #32]
   119e4:	sub	sp, sp, #4
   119e8:	beq	11b08 <grafo_bfs@@Base+0x140>
   119ec:	ldr	r4, [fp, #4]
   119f0:	mov	r6, r1
   119f4:	mov	r1, #4
   119f8:	mov	r8, r2
   119fc:	mov	r9, r3
   11a00:	mov	r0, r4
   11a04:	bl	10c4c <calloc@plt>
   11a08:	mov	r5, r0
   11a0c:	mov	r1, #4
   11a10:	mov	r0, r4
   11a14:	bl	10c4c <calloc@plt>
   11a18:	cmp	r4, #0
   11a1c:	mov	sl, r0
   11a20:	ble	11b28 <grafo_bfs@@Base+0x160>
   11a24:	lsl	r2, r4, #2
   11a28:	mov	r1, #255	; 0xff
   11a2c:	mov	r0, r5
   11a30:	bl	10d00 <memset@plt>
   11a34:	ldr	fp, [fp, #8]
   11a38:	mov	ip, #1
   11a3c:	mov	lr, #0
   11a40:	str	r6, [r5, r6, lsl #2]
   11a44:	str	r6, [sl]
   11a48:	add	lr, lr, #1
   11a4c:	add	r3, fp, r6, lsl #3
   11a50:	mov	r1, #0
   11a54:	sdiv	r2, lr, r4
   11a58:	ldr	r0, [r3, #4]
   11a5c:	mls	lr, r4, r2, lr
   11a60:	cmp	r0, #0
   11a64:	beq	11a94 <grafo_bfs@@Base+0xcc>
   11a68:	ldr	r3, [r0]
   11a6c:	cmp	r3, r1
   11a70:	beq	11ab0 <grafo_bfs@@Base+0xe8>
   11a74:	mov	r3, r0
   11a78:	b	11a88 <grafo_bfs@@Base+0xc0>
   11a7c:	ldr	r2, [r3]
   11a80:	cmp	r2, r1
   11a84:	beq	11ab0 <grafo_bfs@@Base+0xe8>
   11a88:	ldr	r3, [r3, #4]
   11a8c:	cmp	r3, #0
   11a90:	bne	11a7c <grafo_bfs@@Base+0xb4>
   11a94:	add	r1, r1, #1
   11a98:	cmp	r4, r1
   11a9c:	bne	11a60 <grafo_bfs@@Base+0x98>
   11aa0:	cmp	ip, lr
   11aa4:	beq	11b30 <grafo_bfs@@Base+0x168>
   11aa8:	ldr	r6, [sl, lr, lsl #2]
   11aac:	b	11a48 <grafo_bfs@@Base+0x80>
   11ab0:	ldr	r3, [r5, r1, lsl #2]
   11ab4:	cmn	r3, #1
   11ab8:	bne	11a94 <grafo_bfs@@Base+0xcc>
   11abc:	add	r3, ip, #1
   11ac0:	str	r1, [sl, ip, lsl #2]
   11ac4:	str	r6, [r5, r1, lsl #2]
   11ac8:	add	r1, r1, #1
   11acc:	sdiv	ip, r3, r4
   11ad0:	cmp	r4, r1
   11ad4:	mls	ip, r4, ip, r3
   11ad8:	bne	11a60 <grafo_bfs@@Base+0x98>
   11adc:	b	11aa0 <grafo_bfs@@Base+0xd8>
   11ae0:	mov	r0, #4
   11ae4:	mov	r6, #1
   11ae8:	bl	10cd0 <malloc@plt>
   11aec:	mov	r7, r0
   11af0:	str	r8, [r0]
   11af4:	mov	r0, sl
   11af8:	bl	10c94 <free@plt>
   11afc:	mov	r0, r5
   11b00:	bl	10c94 <free@plt>
   11b04:	str	r6, [r9]
   11b08:	mov	r0, r7
   11b0c:	add	sp, sp, #4
   11b10:	ldrd	r4, [sp]
   11b14:	ldrd	r6, [sp, #8]
   11b18:	ldrd	r8, [sp, #16]
   11b1c:	ldrd	sl, [sp, #24]
   11b20:	add	sp, sp, #32
   11b24:	pop	{pc}		; (ldr pc, [sp], #4)
   11b28:	str	r6, [r5, r6, lsl #2]
   11b2c:	str	r6, [r0]
   11b30:	ldr	r4, [r5, r8, lsl #2]
   11b34:	cmp	r4, #0
   11b38:	movlt	r6, #0
   11b3c:	blt	11af4 <grafo_bfs@@Base+0x12c>
   11b40:	cmp	r4, r8
   11b44:	beq	11ae0 <grafo_bfs@@Base+0x118>
   11b48:	mov	r3, r4
   11b4c:	mov	fp, #1
   11b50:	b	11b58 <grafo_bfs@@Base+0x190>
   11b54:	mov	fp, r6
   11b58:	ldr	r2, [r5, r3, lsl #2]
   11b5c:	add	r6, fp, #1
   11b60:	cmp	r2, r3
   11b64:	mov	r3, r2
   11b68:	bne	11b54 <grafo_bfs@@Base+0x18c>
   11b6c:	lsl	r0, r6, #2
   11b70:	bl	10cd0 <malloc@plt>
   11b74:	add	r3, r0, fp, lsl #2
   11b78:	mov	r7, r0
   11b7c:	str	r8, [r0, fp, lsl #2]
   11b80:	ldr	r2, [r5, r4, lsl #2]
   11b84:	str	r4, [r3, #-4]!
   11b88:	cmp	r3, r7
   11b8c:	mov	r4, r2
   11b90:	bne	11b80 <grafo_bfs@@Base+0x1b8>
   11b94:	b	11af4 <grafo_bfs@@Base+0x12c>

00011b98 <heap_nova@@Base>:
   11b98:	strd	r4, [sp, #-16]!
   11b9c:	mov	r5, r0
   11ba0:	mov	r0, #12
   11ba4:	str	r6, [sp, #8]
   11ba8:	str	lr, [sp, #12]
   11bac:	bl	10cd0 <malloc@plt>
   11bb0:	subs	r4, r0, #0
   11bb4:	beq	11bdc <heap_nova@@Base+0x44>
   11bb8:	mov	r3, #0
   11bbc:	mov	r0, r5
   11bc0:	mov	r1, #4
   11bc4:	stm	r4, {r3, r5}
   11bc8:	bl	10c4c <calloc@plt>
   11bcc:	cmp	r0, #0
   11bd0:	mov	r3, r0
   11bd4:	str	r0, [r4, #8]
   11bd8:	beq	11bf0 <heap_nova@@Base+0x58>
   11bdc:	mov	r0, r4
   11be0:	ldrd	r4, [sp]
   11be4:	ldr	r6, [sp, #8]
   11be8:	add	sp, sp, #12
   11bec:	pop	{pc}		; (ldr pc, [sp], #4)
   11bf0:	mov	r0, r4
   11bf4:	mov	r4, r3
   11bf8:	bl	10c94 <free@plt>
   11bfc:	b	11bdc <heap_nova@@Base+0x44>

00011c00 <heap_apaga@@Base>:
   11c00:	strd	r4, [sp, #-16]!
   11c04:	subs	r5, r0, #0
   11c08:	str	r6, [sp, #8]
   11c0c:	str	lr, [sp, #12]
   11c10:	beq	11c78 <heap_apaga@@Base+0x78>
   11c14:	ldr	r3, [r5]
   11c18:	ldr	r0, [r5, #8]
   11c1c:	cmp	r3, #0
   11c20:	ble	11c5c <heap_apaga@@Base+0x5c>
   11c24:	mov	r4, #0
   11c28:	mov	r6, r4
   11c2c:	ldr	r3, [r0, r4, lsl #2]
   11c30:	ldr	r0, [r3, #4]
   11c34:	bl	10c94 <free@plt>
   11c38:	ldr	r3, [r5, #8]
   11c3c:	ldr	r0, [r3, r4, lsl #2]
   11c40:	bl	10c94 <free@plt>
   11c44:	ldr	r3, [r5]
   11c48:	ldr	r0, [r5, #8]
   11c4c:	str	r6, [r0, r4, lsl #2]
   11c50:	add	r4, r4, #1
   11c54:	cmp	r3, r4
   11c58:	bgt	11c2c <heap_apaga@@Base+0x2c>
   11c5c:	bl	10c94 <free@plt>
   11c60:	mov	r0, r5
   11c64:	ldrd	r4, [sp]
   11c68:	ldr	r6, [sp, #8]
   11c6c:	ldr	lr, [sp, #12]
   11c70:	add	sp, sp, #16
   11c74:	b	10c94 <free@plt>
   11c78:	ldrd	r4, [sp]
   11c7c:	ldr	r6, [sp, #8]
   11c80:	add	sp, sp, #12
   11c84:	pop	{pc}		; (ldr pc, [sp], #4)

00011c88 <elemento_cria@@Base>:
   11c88:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11c8c:	mov	r5, r1
   11c90:	strd	r6, [sp, #8]
   11c94:	mov	r7, r0
   11c98:	mov	r0, #8
   11c9c:	str	r8, [sp, #16]
   11ca0:	str	lr, [sp, #20]
   11ca4:	bl	10cd0 <malloc@plt>
   11ca8:	subs	r4, r0, #0
   11cac:	beq	11ce8 <elemento_cria@@Base+0x60>
   11cb0:	mov	r0, r5
   11cb4:	bl	10cf4 <strlen@plt>
   11cb8:	add	r6, r0, #1
   11cbc:	mov	r1, #1
   11cc0:	mov	r0, r6
   11cc4:	bl	10c4c <calloc@plt>
   11cc8:	cmp	r0, #0
   11ccc:	mov	r3, r0
   11cd0:	str	r0, [r4, #4]
   11cd4:	beq	11d00 <elemento_cria@@Base+0x78>
   11cd8:	mov	r2, r6
   11cdc:	mov	r1, r5
   11ce0:	bl	10ca0 <memcpy@plt>
   11ce4:	str	r7, [r4]
   11ce8:	mov	r0, r4
   11cec:	ldrd	r4, [sp]
   11cf0:	ldrd	r6, [sp, #8]
   11cf4:	ldr	r8, [sp, #16]
   11cf8:	add	sp, sp, #20
   11cfc:	pop	{pc}		; (ldr pc, [sp], #4)
   11d00:	mov	r0, r4
   11d04:	mov	r4, r3
   11d08:	bl	10c94 <free@plt>
   11d0c:	b	11ce8 <elemento_cria@@Base+0x60>

00011d10 <heap_insere@@Base>:
   11d10:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11d14:	ldr	r4, [r0]
   11d18:	ldr	r3, [r0, #4]
   11d1c:	strd	r6, [sp, #8]
   11d20:	strd	r8, [sp, #16]
   11d24:	str	sl, [sp, #24]
   11d28:	str	lr, [sp, #28]
   11d2c:	cmp	r4, r3
   11d30:	blt	11d50 <heap_insere@@Base+0x40>
   11d34:	mov	r0, #0
   11d38:	ldrd	r4, [sp]
   11d3c:	ldrd	r6, [sp, #8]
   11d40:	ldrd	r8, [sp, #16]
   11d44:	ldr	sl, [sp, #24]
   11d48:	add	sp, sp, #28
   11d4c:	pop	{pc}		; (ldr pc, [sp], #4)
   11d50:	mov	r5, r0
   11d54:	mov	r0, #8
   11d58:	mov	r6, r2
   11d5c:	mov	r9, r1
   11d60:	bl	10cd0 <malloc@plt>
   11d64:	subs	r7, r0, #0
   11d68:	beq	11d34 <heap_insere@@Base+0x24>
   11d6c:	mov	r0, r9
   11d70:	bl	10cf4 <strlen@plt>
   11d74:	add	sl, r0, #1
   11d78:	mov	r1, #1
   11d7c:	mov	r0, sl
   11d80:	bl	10c4c <calloc@plt>
   11d84:	cmp	r0, #0
   11d88:	mov	r8, r0
   11d8c:	str	r0, [r7, #4]
   11d90:	beq	11e40 <heap_insere@@Base+0x130>
   11d94:	mov	r1, r9
   11d98:	mov	r2, sl
   11d9c:	bl	10ca0 <memcpy@plt>
   11da0:	ldr	r1, [r5, #8]
   11da4:	add	r3, r4, #1
   11da8:	cmp	r4, #0
   11dac:	str	r6, [r7]
   11db0:	add	lr, r1, r4, lsl #2
   11db4:	str	r7, [r1, r4, lsl #2]
   11db8:	str	r3, [r5]
   11dbc:	beq	11e38 <heap_insere@@Base+0x128>
   11dc0:	sub	r4, r4, #1
   11dc4:	add	r4, r4, r4, lsr #31
   11dc8:	asr	r3, r4, #1
   11dcc:	ldr	r2, [r1, r3, lsl #2]
   11dd0:	lsl	r0, r3, #2
   11dd4:	add	r4, r1, r0
   11dd8:	cmp	r2, #0
   11ddc:	beq	11e38 <heap_insere@@Base+0x128>
   11de0:	ldr	ip, [r2]
   11de4:	cmp	r6, ip
   11de8:	bge	11e38 <heap_insere@@Base+0x128>
   11dec:	sub	ip, r3, #1
   11df0:	cmp	r3, #0
   11df4:	str	r7, [r4]
   11df8:	add	ip, ip, ip, lsr #31
   11dfc:	str	r2, [lr]
   11e00:	add	lr, r1, r0
   11e04:	beq	11e38 <heap_insere@@Base+0x128>
   11e08:	asr	r3, ip, #1
   11e0c:	ldr	r7, [r1, r0]
   11e10:	ldr	r2, [r1, r3, lsl #2]
   11e14:	lsl	r0, r3, #2
   11e18:	add	r4, r1, r0
   11e1c:	cmp	r2, #0
   11e20:	cmpne	r7, #0
   11e24:	beq	11e38 <heap_insere@@Base+0x128>
   11e28:	ldr	ip, [r2]
   11e2c:	ldr	r5, [r7]
   11e30:	cmp	r5, ip
   11e34:	blt	11dec <heap_insere@@Base+0xdc>
   11e38:	mov	r0, #1
   11e3c:	b	11d38 <heap_insere@@Base+0x28>
   11e40:	mov	r0, r7
   11e44:	bl	10c94 <free@plt>
   11e48:	mov	r0, r8
   11e4c:	b	11d38 <heap_insere@@Base+0x28>

00011e50 <heap_remove@@Base>:
   11e50:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11e54:	subs	r4, r0, #0
   11e58:	strd	r6, [sp, #8]
   11e5c:	strd	r8, [sp, #16]
   11e60:	str	sl, [sp, #24]
   11e64:	str	lr, [sp, #28]
   11e68:	beq	11f58 <heap_remove@@Base+0x108>
   11e6c:	ldr	r3, [r4]
   11e70:	cmp	r3, #0
   11e74:	ble	11f58 <heap_remove@@Base+0x108>
   11e78:	ldr	r3, [r4, #8]
   11e7c:	ldr	r3, [r3]
   11e80:	mov	r0, r3
   11e84:	ldr	r6, [r3, #4]
   11e88:	bl	10c94 <free@plt>
   11e8c:	ldr	lr, [r4]
   11e90:	mov	r1, #0
   11e94:	ldr	r3, [r4, #8]
   11e98:	sub	lr, lr, #1
   11e9c:	cmp	lr, #1
   11ea0:	ldr	r2, [r3, lr, lsl #2]
   11ea4:	str	lr, [r4]
   11ea8:	str	r2, [r3]
   11eac:	str	r1, [r3, lr, lsl #2]
   11eb0:	ble	11f3c <heap_remove@@Base+0xec>
   11eb4:	mov	r2, #1
   11eb8:	add	r0, r1, #1
   11ebc:	lsl	r4, r1, #2
   11ec0:	lsl	ip, r0, #1
   11ec4:	add	r5, r3, r0, lsl #3
   11ec8:	cmp	lr, ip
   11ecc:	ble	11ef4 <heap_remove@@Base+0xa4>
   11ed0:	ldr	r5, [r5, #-4]
   11ed4:	ldr	r0, [r3, r0, lsl #3]
   11ed8:	cmp	r0, #0
   11edc:	cmpne	r5, #0
   11ee0:	beq	11ef4 <heap_remove@@Base+0xa4>
   11ee4:	ldr	r7, [r0]
   11ee8:	ldr	r0, [r5]
   11eec:	cmp	r7, r0
   11ef0:	movlt	r2, ip
   11ef4:	ldr	r5, [r3, r1, lsl #2]
   11ef8:	lsl	ip, r2, #1
   11efc:	mov	r1, r2
   11f00:	lsl	r7, r2, #2
   11f04:	ldr	r0, [r3, r2, lsl #2]
   11f08:	add	ip, ip, #1
   11f0c:	mov	r2, ip
   11f10:	cmp	r5, #0
   11f14:	cmpne	r0, #0
   11f18:	beq	11f3c <heap_remove@@Base+0xec>
   11f1c:	ldr	r9, [r0]
   11f20:	ldr	r8, [r5]
   11f24:	cmp	r9, r8
   11f28:	bge	11f3c <heap_remove@@Base+0xec>
   11f2c:	cmp	lr, ip
   11f30:	str	r5, [r3, r7]
   11f34:	str	r0, [r3, r4]
   11f38:	bgt	11eb8 <heap_remove@@Base+0x68>
   11f3c:	mov	r0, r6
   11f40:	ldrd	r4, [sp]
   11f44:	ldrd	r6, [sp, #8]
   11f48:	ldrd	r8, [sp, #16]
   11f4c:	ldr	sl, [sp, #24]
   11f50:	add	sp, sp, #28
   11f54:	pop	{pc}		; (ldr pc, [sp], #4)
   11f58:	mov	r6, #0
   11f5c:	b	11f3c <heap_remove@@Base+0xec>

00011f60 <mostraHeap@@Base>:
   11f60:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11f64:	movw	r5, #10480	; 0x28f0
   11f68:	movt	r5, #1
   11f6c:	strd	r6, [sp, #8]
   11f70:	mov	r7, r0
   11f74:	mov	r6, r1
   11f78:	ldr	r3, [r7]
   11f7c:	strd	r8, [sp, #16]
   11f80:	movw	r8, #10488	; 0x28f8
   11f84:	movt	r8, #1
   11f88:	str	sl, [sp, #24]
   11f8c:	str	lr, [sp, #28]
   11f90:	cmp	r3, r6
   11f94:	ble	12008 <mostraHeap@@Base+0xa8>
   11f98:	lsl	r9, r6, #1
   11f9c:	cmp	r6, #0
   11fa0:	add	r1, r9, #1
   11fa4:	ble	12028 <mostraHeap@@Base+0xc8>
   11fa8:	mov	r4, r6
   11fac:	mov	r3, #0
   11fb0:	sub	r4, r4, #1
   11fb4:	add	r3, r3, #1
   11fb8:	asrs	r4, r4, #1
   11fbc:	bne	11fb0 <mostraHeap@@Base+0x50>
   11fc0:	mov	r0, r7
   11fc4:	add	sl, r3, r3, lsl #1
   11fc8:	bl	11f60 <mostraHeap@@Base>
   11fcc:	add	r4, r4, #1
   11fd0:	mov	r0, r5
   11fd4:	bl	10c70 <printf@plt>
   11fd8:	cmp	r4, sl
   11fdc:	blt	11fcc <mostraHeap@@Base+0x6c>
   11fe0:	ldr	r3, [r7, #8]
   11fe4:	mov	r0, r8
   11fe8:	ldr	r3, [r3, r6, lsl #2]
   11fec:	add	r6, r9, #2
   11ff0:	ldr	r2, [r3]
   11ff4:	ldr	r1, [r3, #4]
   11ff8:	bl	10c70 <printf@plt>
   11ffc:	ldr	r3, [r7]
   12000:	cmp	r3, r6
   12004:	bgt	11f98 <mostraHeap@@Base+0x38>
   12008:	mov	r0, #10
   1200c:	ldrd	r4, [sp]
   12010:	ldrd	r6, [sp, #8]
   12014:	ldrd	r8, [sp, #16]
   12018:	ldr	sl, [sp, #24]
   1201c:	ldr	lr, [sp, #28]
   12020:	add	sp, sp, #32
   12024:	b	10d0c <putchar@plt>
   12028:	mov	r0, r7
   1202c:	bl	11f60 <mostraHeap@@Base>
   12030:	ldr	r3, [r7, #8]
   12034:	movw	r0, #10488	; 0x28f8
   12038:	movt	r0, #1
   1203c:	ldr	r3, [r3, r6, lsl #2]
   12040:	ldr	r2, [r3]
   12044:	ldr	r1, [r3, #4]
   12048:	bl	10c70 <printf@plt>
   1204c:	add	r1, r9, #2
   12050:	mov	r0, r7
   12054:	bl	11f60 <mostraHeap@@Base>
   12058:	b	12008 <mostraHeap@@Base+0xa8>

0001205c <menor_que@@Base>:
   1205c:	cmp	r1, #0
   12060:	cmpne	r0, #0
   12064:	beq	12080 <menor_que@@Base+0x24>
   12068:	ldr	r0, [r0]
   1206c:	ldr	r3, [r1]
   12070:	cmp	r0, r3
   12074:	movge	r0, #0
   12078:	movlt	r0, #1
   1207c:	bx	lr
   12080:	mov	r0, #0
   12084:	bx	lr

00012088 <novo_str@@Base>:
   12088:	strd	r4, [sp, #-16]!
   1208c:	mov	r5, r0
   12090:	mov	r0, #8
   12094:	str	r6, [sp, #8]
   12098:	str	lr, [sp, #12]
   1209c:	bl	10cd0 <malloc@plt>
   120a0:	subs	r4, r0, #0
   120a4:	beq	120e0 <novo_str@@Base+0x58>
   120a8:	mov	r0, r5
   120ac:	bl	10cf4 <strlen@plt>
   120b0:	add	r6, r0, #1
   120b4:	mov	r0, r6
   120b8:	bl	10cd0 <malloc@plt>
   120bc:	cmp	r0, #0
   120c0:	mov	r3, r0
   120c4:	str	r0, [r4]
   120c8:	beq	120f4 <novo_str@@Base+0x6c>
   120cc:	mov	r2, r6
   120d0:	mov	r1, r5
   120d4:	bl	10ca0 <memcpy@plt>
   120d8:	mov	r3, #0
   120dc:	str	r3, [r4, #4]
   120e0:	mov	r0, r4
   120e4:	ldrd	r4, [sp]
   120e8:	ldr	r6, [sp, #8]
   120ec:	add	sp, sp, #12
   120f0:	pop	{pc}		; (ldr pc, [sp], #4)
   120f4:	mov	r0, r4
   120f8:	mov	r4, r3
   120fc:	bl	10c94 <free@plt>
   12100:	b	120e0 <novo_str@@Base+0x58>

00012104 <lista_nova@@Base>:
   12104:	mov	r0, #8
   12108:	str	r4, [sp, #-8]!
   1210c:	str	lr, [sp, #4]
   12110:	bl	10cd0 <malloc@plt>
   12114:	cmp	r0, #0
   12118:	beq	12128 <lista_nova@@Base+0x24>
   1211c:	mov	r3, #0
   12120:	str	r3, [r0]
   12124:	str	r3, [r0, #4]
   12128:	ldr	r4, [sp]
   1212c:	add	sp, sp, #4
   12130:	pop	{pc}		; (ldr pc, [sp], #4)

00012134 <lista_apaga@@Base>:
   12134:	strd	r4, [sp, #-16]!
   12138:	subs	r5, r0, #0
   1213c:	str	r6, [sp, #8]
   12140:	str	lr, [sp, #12]
   12144:	bne	12160 <lista_apaga@@Base+0x2c>
   12148:	b	12184 <lista_apaga@@Base+0x50>
   1214c:	ldm	r4, {r0, r3}
   12150:	str	r3, [r5]
   12154:	bl	10c94 <free@plt>
   12158:	mov	r0, r4
   1215c:	bl	10c94 <free@plt>
   12160:	ldr	r4, [r5]
   12164:	cmp	r4, #0
   12168:	bne	1214c <lista_apaga@@Base+0x18>
   1216c:	mov	r0, r5
   12170:	ldrd	r4, [sp]
   12174:	ldr	r6, [sp, #8]
   12178:	ldr	lr, [sp, #12]
   1217c:	add	sp, sp, #16
   12180:	b	10c94 <free@plt>
   12184:	ldrd	r4, [sp]
   12188:	ldr	r6, [sp, #8]
   1218c:	add	sp, sp, #12
   12190:	pop	{pc}		; (ldr pc, [sp], #4)

00012194 <lista_tamanho@@Base>:
   12194:	cmp	r0, #0
   12198:	ldrne	r0, [r0, #4]
   1219c:	mvneq	r0, #0
   121a0:	bx	lr

000121a4 <lista_elemento@@Base>:
   121a4:	cmp	r0, #0
   121a8:	lsrne	r3, r1, #31
   121ac:	moveq	r3, #1
   121b0:	cmp	r3, #0
   121b4:	bne	121ec <lista_elemento@@Base+0x48>
   121b8:	ldr	r0, [r0]
   121bc:	cmp	r0, #0
   121c0:	cmpne	r1, #0
   121c4:	ble	121dc <lista_elemento@@Base+0x38>
   121c8:	ldr	r0, [r0, #4]
   121cc:	add	r3, r3, #1
   121d0:	cmp	r0, #0
   121d4:	cmpne	r1, r3
   121d8:	bgt	121c8 <lista_elemento@@Base+0x24>
   121dc:	cmp	r0, #0
   121e0:	beq	121f0 <lista_elemento@@Base+0x4c>
   121e4:	ldr	r0, [r0]
   121e8:	bx	lr
   121ec:	mov	r0, #0
   121f0:	bx	lr

000121f4 <lista_atribui@@Base>:
   121f4:	cmp	r0, #0
   121f8:	lsrne	r3, r1, #31
   121fc:	moveq	r3, #1
   12200:	cmp	r3, #0
   12204:	bne	1227c <lista_atribui@@Base+0x88>
   12208:	strd	r4, [sp, #-16]!
   1220c:	ldr	r4, [r0]
   12210:	str	r6, [sp, #8]
   12214:	str	lr, [sp, #12]
   12218:	cmp	r4, #0
   1221c:	cmpne	r1, #0
   12220:	ble	12238 <lista_atribui@@Base+0x44>
   12224:	ldr	r4, [r4, #4]
   12228:	add	r3, r3, #1
   1222c:	cmp	r4, #0
   12230:	cmpne	r1, r3
   12234:	bgt	12224 <lista_atribui@@Base+0x30>
   12238:	cmp	r4, #0
   1223c:	beq	12284 <lista_atribui@@Base+0x90>
   12240:	mov	r0, r2
   12244:	mov	r6, r2
   12248:	mov	r5, r1
   1224c:	bl	10cf4 <strlen@plt>
   12250:	add	r1, r0, #1
   12254:	ldr	r0, [r4]
   12258:	bl	10cac <realloc@plt>
   1225c:	mov	r1, r6
   12260:	str	r0, [r4]
   12264:	bl	10cb8 <strcpy@plt>
   12268:	mov	r0, r5
   1226c:	ldrd	r4, [sp]
   12270:	ldr	r6, [sp, #8]
   12274:	add	sp, sp, #12
   12278:	pop	{pc}		; (ldr pc, [sp], #4)
   1227c:	mvn	r0, #0
   12280:	bx	lr
   12284:	mvn	r0, #0
   12288:	b	1226c <lista_atribui@@Base+0x78>

0001228c <lista_insere@@Base>:
   1228c:	cmn	r2, #1
   12290:	movge	r3, #0
   12294:	movlt	r3, #1
   12298:	cmp	r0, #0
   1229c:	moveq	r3, #1
   122a0:	cmp	r3, #0
   122a4:	bne	123e4 <lista_insere@@Base+0x158>
   122a8:	cmp	r2, #0
   122ac:	beq	122bc <lista_insere@@Base+0x30>
   122b0:	ldr	r3, [r0, #4]
   122b4:	cmp	r3, r2
   122b8:	ble	123e4 <lista_insere@@Base+0x158>
   122bc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   122c0:	mov	r5, r1
   122c4:	strd	r6, [sp, #8]
   122c8:	mov	r7, r0
   122cc:	mov	r0, #8
   122d0:	mov	r6, r2
   122d4:	strd	r8, [sp, #16]
   122d8:	str	sl, [sp, #24]
   122dc:	str	lr, [sp, #28]
   122e0:	ldr	r4, [r7]
   122e4:	bl	10cd0 <malloc@plt>
   122e8:	subs	r8, r0, #0
   122ec:	beq	123dc <lista_insere@@Base+0x150>
   122f0:	mov	r0, r5
   122f4:	bl	10cf4 <strlen@plt>
   122f8:	add	r9, r0, #1
   122fc:	mov	r0, r9
   12300:	bl	10cd0 <malloc@plt>
   12304:	cmp	r0, #0
   12308:	str	r0, [r8]
   1230c:	beq	123d4 <lista_insere@@Base+0x148>
   12310:	mov	r2, r9
   12314:	mov	r1, r5
   12318:	bl	10ca0 <memcpy@plt>
   1231c:	ldr	r0, [r7, #4]
   12320:	mov	r3, #0
   12324:	cmn	r6, #1
   12328:	str	r3, [r8, #4]
   1232c:	add	r2, r0, #1
   12330:	str	r2, [r7, #4]
   12334:	beq	123a8 <lista_insere@@Base+0x11c>
   12338:	cmp	r6, #0
   1233c:	beq	12398 <lista_insere@@Base+0x10c>
   12340:	cmp	r6, #1
   12344:	beq	12370 <lista_insere@@Base+0xe4>
   12348:	cmp	r4, #0
   1234c:	subne	r1, r6, #1
   12350:	bne	12360 <lista_insere@@Base+0xd4>
   12354:	b	123ec <lista_insere@@Base+0x160>
   12358:	cmp	r4, #0
   1235c:	beq	123ec <lista_insere@@Base+0x160>
   12360:	add	r3, r3, #1
   12364:	ldr	r4, [r4, #4]
   12368:	cmp	r1, r3
   1236c:	bne	12358 <lista_insere@@Base+0xcc>
   12370:	ldr	r3, [r4, #4]
   12374:	mov	r0, r6
   12378:	str	r3, [r8, #4]
   1237c:	str	r8, [r4, #4]
   12380:	ldrd	r4, [sp]
   12384:	ldrd	r6, [sp, #8]
   12388:	ldrd	r8, [sp, #16]
   1238c:	ldr	sl, [sp, #24]
   12390:	add	sp, sp, #28
   12394:	pop	{pc}		; (ldr pc, [sp], #4)
   12398:	mov	r0, r6
   1239c:	str	r8, [r7]
   123a0:	str	r4, [r8, #4]
   123a4:	b	12380 <lista_insere@@Base+0xf4>
   123a8:	cmp	r4, r3
   123ac:	streq	r8, [r7]
   123b0:	beq	12380 <lista_insere@@Base+0xf4>
   123b4:	ldr	r3, [r4, #4]
   123b8:	cmp	r3, #0
   123bc:	beq	1237c <lista_insere@@Base+0xf0>
   123c0:	mov	r4, r3
   123c4:	ldr	r3, [r4, #4]
   123c8:	cmp	r3, #0
   123cc:	bne	123c0 <lista_insere@@Base+0x134>
   123d0:	b	1237c <lista_insere@@Base+0xf0>
   123d4:	mov	r0, r8
   123d8:	bl	10c94 <free@plt>
   123dc:	mvn	r0, #0
   123e0:	b	12380 <lista_insere@@Base+0xf4>
   123e4:	mvn	r0, #0
   123e8:	bx	lr
   123ec:	mov	r3, #0
   123f0:	ldr	r3, [r3, #4]
   123f4:	udf	#0

000123f8 <lista_remove@@Base>:
   123f8:	cmp	r0, #0
   123fc:	lsrne	r3, r1, #31
   12400:	moveq	r3, #1
   12404:	cmp	r3, #0
   12408:	bne	124c4 <lista_remove@@Base+0xcc>
   1240c:	ldr	r2, [r0, #4]
   12410:	cmp	r2, r1
   12414:	ble	124c4 <lista_remove@@Base+0xcc>
   12418:	strd	r4, [sp, #-16]!
   1241c:	sub	r2, r2, #1
   12420:	cmp	r1, #0
   12424:	str	r6, [sp, #8]
   12428:	mov	r5, r1
   1242c:	ldr	r6, [r0]
   12430:	str	lr, [sp, #12]
   12434:	str	r2, [r0, #4]
   12438:	ldr	r4, [r6, #4]
   1243c:	beq	1249c <lista_remove@@Base+0xa4>
   12440:	cmp	r4, #0
   12444:	moveq	r2, r4
   12448:	moveq	r4, r6
   1244c:	bne	12464 <lista_remove@@Base+0x6c>
   12450:	b	12474 <lista_remove@@Base+0x7c>
   12454:	cmp	r2, #0
   12458:	beq	12474 <lista_remove@@Base+0x7c>
   1245c:	mov	r6, r4
   12460:	mov	r4, r2
   12464:	add	r3, r3, #1
   12468:	ldr	r2, [r4, #4]
   1246c:	cmp	r5, r3
   12470:	bne	12454 <lista_remove@@Base+0x5c>
   12474:	ldr	r0, [r4]
   12478:	str	r2, [r6, #4]
   1247c:	bl	10c94 <free@plt>
   12480:	mov	r0, r4
   12484:	bl	10c94 <free@plt>
   12488:	ldrd	r4, [sp]
   1248c:	mov	r0, #0
   12490:	ldr	r6, [sp, #8]
   12494:	add	sp, sp, #12
   12498:	pop	{pc}		; (ldr pc, [sp], #4)
   1249c:	str	r4, [r0]
   124a0:	ldr	r0, [r6]
   124a4:	bl	10c94 <free@plt>
   124a8:	mov	r0, r6
   124ac:	bl	10c94 <free@plt>
   124b0:	mov	r0, r5
   124b4:	ldrd	r4, [sp]
   124b8:	ldr	r6, [sp, #8]
   124bc:	add	sp, sp, #12
   124c0:	pop	{pc}		; (ldr pc, [sp], #4)
   124c4:	mvn	r0, #0
   124c8:	bx	lr

000124cc <lista_pesquisa@@Base>:
   124cc:	cmp	r0, #0
   124d0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   124d4:	strd	r6, [sp, #8]
   124d8:	str	r8, [sp, #16]
   124dc:	str	lr, [sp, #20]
   124e0:	beq	12508 <lista_pesquisa@@Base+0x3c>
   124e4:	ldr	r4, [r0]
   124e8:	cmp	r4, #0
   124ec:	beq	12508 <lista_pesquisa@@Base+0x3c>
   124f0:	cmn	r2, #1
   124f4:	mov	r7, r1
   124f8:	mov	r5, r2
   124fc:	beq	1254c <lista_pesquisa@@Base+0x80>
   12500:	cmp	r2, #0
   12504:	beq	12534 <lista_pesquisa@@Base+0x68>
   12508:	mvn	r5, #0
   1250c:	mov	r0, r5
   12510:	ldrd	r4, [sp]
   12514:	ldrd	r6, [sp, #8]
   12518:	ldr	r8, [sp, #16]
   1251c:	add	sp, sp, #20
   12520:	pop	{pc}		; (ldr pc, [sp], #4)
   12524:	ldr	r4, [r4, #4]
   12528:	add	r5, r5, #1
   1252c:	cmp	r4, #0
   12530:	beq	12508 <lista_pesquisa@@Base+0x3c>
   12534:	mov	r1, r7
   12538:	ldr	r0, [r4]
   1253c:	bl	10c58 <strcmp@plt>
   12540:	cmp	r0, #0
   12544:	beq	1250c <lista_pesquisa@@Base+0x40>
   12548:	b	12524 <lista_pesquisa@@Base+0x58>
   1254c:	mov	r6, #0
   12550:	mov	r1, r7
   12554:	ldr	r0, [r4]
   12558:	bl	10c58 <strcmp@plt>
   1255c:	ldr	r4, [r4, #4]
   12560:	cmp	r0, #0
   12564:	moveq	r5, r6
   12568:	add	r6, r6, #1
   1256c:	cmp	r4, #0
   12570:	bne	12550 <lista_pesquisa@@Base+0x84>
   12574:	b	1250c <lista_pesquisa@@Base+0x40>

00012578 <lista_ordena@@Base>:
   12578:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1257c:	strd	r6, [sp, #8]
   12580:	str	sl, [sp, #24]
   12584:	subs	sl, r0, #0
   12588:	strd	r8, [sp, #16]
   1258c:	str	lr, [sp, #28]
   12590:	beq	12644 <lista_ordena@@Base+0xcc>
   12594:	ldr	r6, [sl]
   12598:	ldr	r7, [r6, #4]
   1259c:	cmp	r7, #0
   125a0:	beq	125d0 <lista_ordena@@Base+0x58>
   125a4:	ldr	r4, [r6]
   125a8:	mov	r0, r4
   125ac:	ldr	r5, [r7]
   125b0:	mov	r1, r5
   125b4:	bl	10c58 <strcmp@plt>
   125b8:	cmp	r0, #0
   125bc:	bgt	125ec <lista_ordena@@Base+0x74>
   125c0:	ldr	r6, [r6, #4]
   125c4:	ldr	r7, [r6, #4]
   125c8:	cmp	r7, #0
   125cc:	bne	125a4 <lista_ordena@@Base+0x2c>
   125d0:	mov	r0, #0
   125d4:	ldrd	r4, [sp]
   125d8:	ldrd	r6, [sp, #8]
   125dc:	ldrd	r8, [sp, #16]
   125e0:	ldr	sl, [sp, #24]
   125e4:	add	sp, sp, #28
   125e8:	pop	{pc}		; (ldr pc, [sp], #4)
   125ec:	ldr	r3, [r7, #4]
   125f0:	ldr	r9, [sl]
   125f4:	cmp	r3, r6
   125f8:	str	r3, [r6, #4]
   125fc:	beq	1263c <lista_ordena@@Base+0xc4>
   12600:	mov	r8, r9
   12604:	mov	r4, r9
   12608:	b	12614 <lista_ordena@@Base+0x9c>
   1260c:	mov	r8, r4
   12610:	ldr	r4, [r4, #4]
   12614:	mov	r1, r5
   12618:	ldr	r0, [r4]
   1261c:	bl	10c58 <strcmp@plt>
   12620:	cmp	r0, #0
   12624:	ble	1260c <lista_ordena@@Base+0x94>
   12628:	cmp	r9, r4
   1262c:	str	r4, [r7, #4]
   12630:	streq	r7, [sl]
   12634:	strne	r7, [r8, #4]
   12638:	b	12598 <lista_ordena@@Base+0x20>
   1263c:	mov	r7, r6
   12640:	b	125a8 <lista_ordena@@Base+0x30>
   12644:	mvn	r0, #0
   12648:	b	125d4 <lista_ordena@@Base+0x5c>

0001264c <lista_compara@@Base>:
   1264c:	clz	r3, r1
   12650:	cmp	r0, #0
   12654:	lsr	r3, r3, #5
   12658:	moveq	r3, #1
   1265c:	cmp	r3, #0
   12660:	bne	126d4 <lista_compara@@Base+0x88>
   12664:	ldr	ip, [r0, #4]
   12668:	ldr	r2, [r1, #4]
   1266c:	cmp	ip, r2
   12670:	bne	126cc <lista_compara@@Base+0x80>
   12674:	strd	r4, [sp, #-16]!
   12678:	ldr	r4, [r0]
   1267c:	ldr	r5, [r1]
   12680:	str	r6, [sp, #8]
   12684:	str	lr, [sp, #12]
   12688:	cmp	r4, #0
   1268c:	bne	126a4 <lista_compara@@Base+0x58>
   12690:	b	126dc <lista_compara@@Base+0x90>
   12694:	ldr	r4, [r4, #4]
   12698:	ldr	r5, [r5, #4]
   1269c:	cmp	r4, #0
   126a0:	beq	126dc <lista_compara@@Base+0x90>
   126a4:	ldr	r0, [r4]
   126a8:	ldr	r1, [r5]
   126ac:	bl	10c58 <strcmp@plt>
   126b0:	cmp	r0, #0
   126b4:	beq	12694 <lista_compara@@Base+0x48>
   126b8:	ldrd	r4, [sp]
   126bc:	mov	r0, #0
   126c0:	ldr	r6, [sp, #8]
   126c4:	add	sp, sp, #12
   126c8:	pop	{pc}		; (ldr pc, [sp], #4)
   126cc:	mov	r0, r3
   126d0:	bx	lr
   126d4:	mvn	r0, #0
   126d8:	bx	lr
   126dc:	cmp	r5, #0
   126e0:	ldrd	r4, [sp]
   126e4:	mvnne	r0, #0
   126e8:	moveq	r0, #1
   126ec:	ldr	r6, [sp, #8]
   126f0:	add	sp, sp, #12
   126f4:	pop	{pc}		; (ldr pc, [sp], #4)

000126f8 <lista_inverte@@Base>:
   126f8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   126fc:	subs	r4, r0, #0
   12700:	strd	r6, [sp, #8]
   12704:	str	r8, [sp, #16]
   12708:	str	lr, [sp, #20]
   1270c:	beq	127b8 <lista_inverte@@Base+0xc0>
   12710:	mov	r0, #8
   12714:	bl	10cd0 <malloc@plt>
   12718:	subs	r6, r0, #0
   1271c:	beq	127b8 <lista_inverte@@Base+0xc0>
   12720:	ldr	r5, [r4]
   12724:	mov	r8, #0
   12728:	str	r8, [r6]
   1272c:	str	r8, [r6, #4]
   12730:	cmp	r5, r8
   12734:	beq	12794 <lista_inverte@@Base+0x9c>
   12738:	mov	r0, #8
   1273c:	ldr	r7, [r5]
   12740:	bl	10cd0 <malloc@plt>
   12744:	subs	r4, r0, #0
   12748:	beq	12788 <lista_inverte@@Base+0x90>
   1274c:	mov	r0, r7
   12750:	bl	10cf4 <strlen@plt>
   12754:	add	r0, r0, #1
   12758:	bl	10cd0 <malloc@plt>
   1275c:	cmp	r0, #0
   12760:	mov	r1, r7
   12764:	str	r0, [r4]
   12768:	beq	127ac <lista_inverte@@Base+0xb4>
   1276c:	bl	10cb8 <strcpy@plt>
   12770:	ldr	r3, [r6, #4]
   12774:	str	r8, [r4, #4]
   12778:	mov	r8, r4
   1277c:	str	r4, [r6]
   12780:	add	r3, r3, #1
   12784:	str	r3, [r6, #4]
   12788:	ldr	r5, [r5, #4]
   1278c:	cmp	r5, #0
   12790:	bne	12738 <lista_inverte@@Base+0x40>
   12794:	mov	r0, r6
   12798:	ldrd	r4, [sp]
   1279c:	ldrd	r6, [sp, #8]
   127a0:	ldr	r8, [sp, #16]
   127a4:	add	sp, sp, #20
   127a8:	pop	{pc}		; (ldr pc, [sp], #4)
   127ac:	mov	r0, r4
   127b0:	bl	10c94 <free@plt>
   127b4:	b	12788 <lista_inverte@@Base+0x90>
   127b8:	mov	r6, #0
   127bc:	b	12794 <lista_inverte@@Base+0x9c>

000127c0 <__libc_csu_init@@Base>:
   127c0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   127c4:	mov	r7, r0
   127c8:	ldr	r6, [pc, #72]	; 12818 <__libc_csu_init@@Base+0x58>
   127cc:	ldr	r5, [pc, #72]	; 1281c <__libc_csu_init@@Base+0x5c>
   127d0:	add	r6, pc, r6
   127d4:	add	r5, pc, r5
   127d8:	sub	r6, r6, r5
   127dc:	mov	r8, r1
   127e0:	mov	r9, r2
   127e4:	bl	10c2c <calloc@plt-0x20>
   127e8:	asrs	r6, r6, #2
   127ec:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   127f0:	mov	r4, #0
   127f4:	add	r4, r4, #1
   127f8:	ldr	r3, [r5], #4
   127fc:	mov	r2, r9
   12800:	mov	r1, r8
   12804:	mov	r0, r7
   12808:	blx	r3
   1280c:	cmp	r6, r4
   12810:	bne	127f4 <__libc_csu_init@@Base+0x34>
   12814:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12818:	andeq	r0, r1, ip, lsr r7
   1281c:	andeq	r0, r1, r4, lsr r7

00012820 <__libc_csu_fini@@Base>:
   12820:	bx	lr

Disassembly of section .fini:

00012824 <.fini>:
   12824:	push	{r3, lr}
   12828:	pop	{r3, pc}
