
../repos/findutils/xargs/xargs:     file format elf32-littlearm


Disassembly of section .init:

000113ec <.init>:
   113ec:	push	{r3, lr}
   113f0:	bl	11820 <__assert_fail@plt+0x48>
   113f4:	pop	{r3, pc}

Disassembly of section .plt:

000113f8 <fdopen@plt-0x14>:
   113f8:	push	{lr}		; (str lr, [sp, #-4]!)
   113fc:	ldr	lr, [pc, #4]	; 11408 <fdopen@plt-0x4>
   11400:	add	lr, pc, lr
   11404:	ldr	pc, [lr, #8]!
   11408:	strdeq	r3, [r2], -r8

0001140c <fdopen@plt>:
   1140c:	add	ip, pc, #0, 12
   11410:	add	ip, ip, #143360	; 0x23000
   11414:	ldr	pc, [ip, #3064]!	; 0xbf8

00011418 <calloc@plt>:
   11418:	add	ip, pc, #0, 12
   1141c:	add	ip, ip, #143360	; 0x23000
   11420:	ldr	pc, [ip, #3056]!	; 0xbf0

00011424 <raise@plt>:
   11424:	add	ip, pc, #0, 12
   11428:	add	ip, ip, #143360	; 0x23000
   1142c:	ldr	pc, [ip, #3048]!	; 0xbe8

00011430 <strcmp@plt>:
   11430:	add	ip, pc, #0, 12
   11434:	add	ip, ip, #143360	; 0x23000
   11438:	ldr	pc, [ip, #3040]!	; 0xbe0

0001143c <strtol@plt>:
   1143c:	add	ip, pc, #0, 12
   11440:	add	ip, ip, #143360	; 0x23000
   11444:	ldr	pc, [ip, #3032]!	; 0xbd8

00011448 <printf@plt>:
   11448:	add	ip, pc, #0, 12
   1144c:	add	ip, ip, #143360	; 0x23000
   11450:	ldr	pc, [ip, #3024]!	; 0xbd0

00011454 <read@plt>:
   11454:	add	ip, pc, #0, 12
   11458:	add	ip, ip, #143360	; 0x23000
   1145c:	ldr	pc, [ip, #3016]!	; 0xbc8

00011460 <fflush@plt>:
   11460:	add	ip, pc, #0, 12
   11464:	add	ip, ip, #143360	; 0x23000
   11468:	ldr	pc, [ip, #3008]!	; 0xbc0

0001146c <wcwidth@plt>:
   1146c:	add	ip, pc, #0, 12
   11470:	add	ip, ip, #143360	; 0x23000
   11474:	ldr	pc, [ip, #3000]!	; 0xbb8

00011478 <free@plt>:
   11478:	add	ip, pc, #0, 12
   1147c:	add	ip, ip, #143360	; 0x23000
   11480:	ldr	pc, [ip, #2992]!	; 0xbb0

00011484 <ferror@plt>:
   11484:	add	ip, pc, #0, 12
   11488:	add	ip, ip, #143360	; 0x23000
   1148c:	ldr	pc, [ip, #2984]!	; 0xba8

00011490 <_exit@plt>:
   11490:	add	ip, pc, #0, 12
   11494:	add	ip, ip, #143360	; 0x23000
   11498:	ldr	pc, [ip, #2976]!	; 0xba0

0001149c <memcpy@plt>:
   1149c:	add	ip, pc, #0, 12
   114a0:	add	ip, ip, #143360	; 0x23000
   114a4:	ldr	pc, [ip, #2968]!	; 0xb98

000114a8 <execvp@plt>:
   114a8:	add	ip, pc, #0, 12
   114ac:	add	ip, ip, #143360	; 0x23000
   114b0:	ldr	pc, [ip, #2960]!	; 0xb90

000114b4 <mbsinit@plt>:
   114b4:	add	ip, pc, #0, 12
   114b8:	add	ip, ip, #143360	; 0x23000
   114bc:	ldr	pc, [ip, #2952]!	; 0xb88

000114c0 <signal@plt>:
   114c0:	add	ip, pc, #0, 12
   114c4:	add	ip, ip, #143360	; 0x23000
   114c8:	ldr	pc, [ip, #2944]!	; 0xb80

000114cc <memcmp@plt>:
   114cc:	add	ip, pc, #0, 12
   114d0:	add	ip, ip, #143360	; 0x23000
   114d4:	ldr	pc, [ip, #2936]!	; 0xb78

000114d8 <sysconf@plt>:
   114d8:	add	ip, pc, #0, 12
   114dc:	add	ip, ip, #143360	; 0x23000
   114e0:	ldr	pc, [ip, #2928]!	; 0xb70

000114e4 <dup2@plt>:
   114e4:	add	ip, pc, #0, 12
   114e8:	add	ip, ip, #143360	; 0x23000
   114ec:	ldr	pc, [ip, #2920]!	; 0xb68

000114f0 <getrlimit64@plt>:
   114f0:	add	ip, pc, #0, 12
   114f4:	add	ip, ip, #143360	; 0x23000
   114f8:	ldr	pc, [ip, #2912]!	; 0xb60

000114fc <realloc@plt>:
   114fc:	add	ip, pc, #0, 12
   11500:	add	ip, ip, #143360	; 0x23000
   11504:	ldr	pc, [ip, #2904]!	; 0xb58

00011508 <textdomain@plt>:
   11508:	add	ip, pc, #0, 12
   1150c:	add	ip, ip, #143360	; 0x23000
   11510:	ldr	pc, [ip, #2896]!	; 0xb50

00011514 <iswcntrl@plt>:
   11514:	add	ip, pc, #0, 12
   11518:	add	ip, ip, #143360	; 0x23000
   1151c:	ldr	pc, [ip, #2888]!	; 0xb48

00011520 <iswprint@plt>:
   11520:	add	ip, pc, #0, 12
   11524:	add	ip, ip, #143360	; 0x23000
   11528:	ldr	pc, [ip, #2880]!	; 0xb40

0001152c <poll@plt>:
   1152c:	add	ip, pc, #0, 12
   11530:	add	ip, ip, #143360	; 0x23000
   11534:	ldr	pc, [ip, #2872]!	; 0xb38

00011538 <sigaction@plt>:
   11538:	add	ip, pc, #0, 12
   1153c:	add	ip, ip, #143360	; 0x23000
   11540:	ldr	pc, [ip, #2864]!	; 0xb30

00011544 <lseek64@plt>:
   11544:	add	ip, pc, #0, 12
   11548:	add	ip, ip, #143360	; 0x23000
   1154c:	ldr	pc, [ip, #2856]!	; 0xb28

00011550 <waitpid@plt>:
   11550:	add	ip, pc, #0, 12
   11554:	add	ip, ip, #143360	; 0x23000
   11558:	ldr	pc, [ip, #2848]!	; 0xb20

0001155c <__ctype_get_mb_cur_max@plt>:
   1155c:	add	ip, pc, #0, 12
   11560:	add	ip, ip, #143360	; 0x23000
   11564:	ldr	pc, [ip, #2840]!	; 0xb18

00011568 <strcpy@plt>:
   11568:	add	ip, pc, #0, 12
   1156c:	add	ip, ip, #143360	; 0x23000
   11570:	ldr	pc, [ip, #2832]!	; 0xb10

00011574 <__fpending@plt>:
   11574:	add	ip, pc, #0, 12
   11578:	add	ip, ip, #143360	; 0x23000
   1157c:	ldr	pc, [ip, #2824]!	; 0xb08

00011580 <mbrtowc@plt>:
   11580:	add	ip, pc, #0, 12
   11584:	add	ip, ip, #143360	; 0x23000
   11588:	ldr	pc, [ip, #2816]!	; 0xb00

0001158c <error@plt>:
   1158c:	add	ip, pc, #0, 12
   11590:	add	ip, ip, #143360	; 0x23000
   11594:	ldr	pc, [ip, #2808]!	; 0xaf8

00011598 <opendir@plt>:
   11598:	add	ip, pc, #0, 12
   1159c:	add	ip, ip, #143360	; 0x23000
   115a0:	ldr	pc, [ip, #2800]!	; 0xaf0

000115a4 <open64@plt>:
   115a4:	add	ip, pc, #0, 12
   115a8:	add	ip, ip, #143360	; 0x23000
   115ac:	ldr	pc, [ip, #2792]!	; 0xae8

000115b0 <getenv@plt>:
   115b0:	add	ip, pc, #0, 12
   115b4:	add	ip, ip, #143360	; 0x23000
   115b8:	ldr	pc, [ip, #2784]!	; 0xae0

000115bc <malloc@plt>:
   115bc:	add	ip, pc, #0, 12
   115c0:	add	ip, ip, #143360	; 0x23000
   115c4:	ldr	pc, [ip, #2776]!	; 0xad8

000115c8 <__libc_start_main@plt>:
   115c8:	add	ip, pc, #0, 12
   115cc:	add	ip, ip, #143360	; 0x23000
   115d0:	ldr	pc, [ip, #2768]!	; 0xad0

000115d4 <__freading@plt>:
   115d4:	add	ip, pc, #0, 12
   115d8:	add	ip, ip, #143360	; 0x23000
   115dc:	ldr	pc, [ip, #2760]!	; 0xac8

000115e0 <__gmon_start__@plt>:
   115e0:	add	ip, pc, #0, 12
   115e4:	add	ip, ip, #143360	; 0x23000
   115e8:	ldr	pc, [ip, #2752]!	; 0xac0

000115ec <getopt_long@plt>:
   115ec:	add	ip, pc, #0, 12
   115f0:	add	ip, ip, #143360	; 0x23000
   115f4:	ldr	pc, [ip, #2744]!	; 0xab8

000115f8 <__ctype_b_loc@plt>:
   115f8:	add	ip, pc, #0, 12
   115fc:	add	ip, ip, #143360	; 0x23000
   11600:	ldr	pc, [ip, #2736]!	; 0xab0

00011604 <getpid@plt>:
   11604:	add	ip, pc, #0, 12
   11608:	add	ip, ip, #143360	; 0x23000
   1160c:	ldr	pc, [ip, #2728]!	; 0xaa8

00011610 <exit@plt>:
   11610:	add	ip, pc, #0, 12
   11614:	add	ip, ip, #143360	; 0x23000
   11618:	ldr	pc, [ip, #2720]!	; 0xaa0

0001161c <gettext@plt>:
   1161c:	add	ip, pc, #0, 12
   11620:	add	ip, ip, #143360	; 0x23000
   11624:	ldr	pc, [ip, #2712]!	; 0xa98

00011628 <strtoul@plt>:
   11628:	add	ip, pc, #0, 12
   1162c:	add	ip, ip, #143360	; 0x23000
   11630:	ldr	pc, [ip, #2704]!	; 0xa90

00011634 <strlen@plt>:
   11634:	add	ip, pc, #0, 12
   11638:	add	ip, ip, #143360	; 0x23000
   1163c:	ldr	pc, [ip, #2696]!	; 0xa88

00011640 <strchr@plt>:
   11640:	add	ip, pc, #0, 12
   11644:	add	ip, ip, #143360	; 0x23000
   11648:	ldr	pc, [ip, #2688]!	; 0xa80

0001164c <setenv@plt>:
   1164c:	add	ip, pc, #0, 12
   11650:	add	ip, ip, #143360	; 0x23000
   11654:	ldr	pc, [ip, #2680]!	; 0xa78

00011658 <fprintf@plt>:
   11658:	add	ip, pc, #0, 12
   1165c:	add	ip, ip, #143360	; 0x23000
   11660:	ldr	pc, [ip, #2672]!	; 0xa70

00011664 <__errno_location@plt>:
   11664:	add	ip, pc, #0, 12
   11668:	add	ip, ip, #143360	; 0x23000
   1166c:	ldr	pc, [ip, #2664]!	; 0xa68

00011670 <snprintf@plt>:
   11670:	add	ip, pc, #0, 12
   11674:	add	ip, ip, #143360	; 0x23000
   11678:	ldr	pc, [ip, #2656]!	; 0xa60

0001167c <__cxa_atexit@plt>:
   1167c:	add	ip, pc, #0, 12
   11680:	add	ip, ip, #143360	; 0x23000
   11684:	ldr	pc, [ip, #2648]!	; 0xa58

00011688 <memset@plt>:
   11688:	add	ip, pc, #0, 12
   1168c:	add	ip, ip, #143360	; 0x23000
   11690:	ldr	pc, [ip, #2640]!	; 0xa50

00011694 <strncpy@plt>:
   11694:	add	ip, pc, #0, 12
   11698:	add	ip, ip, #143360	; 0x23000
   1169c:	ldr	pc, [ip, #2632]!	; 0xa48

000116a0 <write@plt>:
   116a0:	add	ip, pc, #0, 12
   116a4:	add	ip, ip, #143360	; 0x23000
   116a8:	ldr	pc, [ip, #2624]!	; 0xa40

000116ac <fileno@plt>:
   116ac:	add	ip, pc, #0, 12
   116b0:	add	ip, ip, #143360	; 0x23000
   116b4:	ldr	pc, [ip, #2616]!	; 0xa38

000116b8 <memchr@plt>:
   116b8:	add	ip, pc, #0, 12
   116bc:	add	ip, ip, #143360	; 0x23000
   116c0:	ldr	pc, [ip, #2608]!	; 0xa30

000116c4 <fclose@plt>:
   116c4:	add	ip, pc, #0, 12
   116c8:	add	ip, ip, #143360	; 0x23000
   116cc:	ldr	pc, [ip, #2600]!	; 0xa28

000116d0 <strnlen@plt>:
   116d0:	add	ip, pc, #0, 12
   116d4:	add	ip, ip, #143360	; 0x23000
   116d8:	ldr	pc, [ip, #2592]!	; 0xa20

000116dc <pipe@plt>:
   116dc:	add	ip, pc, #0, 12
   116e0:	add	ip, ip, #143360	; 0x23000
   116e4:	ldr	pc, [ip, #2584]!	; 0xa18

000116e8 <fseeko64@plt>:
   116e8:	add	ip, pc, #0, 12
   116ec:	add	ip, ip, #143360	; 0x23000
   116f0:	ldr	pc, [ip, #2576]!	; 0xa10

000116f4 <fcntl64@plt>:
   116f4:	add	ip, pc, #0, 12
   116f8:	add	ip, ip, #143360	; 0x23000
   116fc:	ldr	pc, [ip, #2568]!	; 0xa08

00011700 <setlocale@plt>:
   11700:	add	ip, pc, #0, 12
   11704:	add	ip, ip, #143360	; 0x23000
   11708:	ldr	pc, [ip, #2560]!	; 0xa00

0001170c <sigemptyset@plt>:
   1170c:	add	ip, pc, #0, 12
   11710:	add	ip, ip, #143360	; 0x23000
   11714:	ldr	pc, [ip, #2552]!	; 0x9f8

00011718 <fork@plt>:
   11718:	add	ip, pc, #0, 12
   1171c:	add	ip, ip, #143360	; 0x23000
   11720:	ldr	pc, [ip, #2544]!	; 0x9f0

00011724 <strrchr@plt>:
   11724:	add	ip, pc, #0, 12
   11728:	add	ip, ip, #143360	; 0x23000
   1172c:	ldr	pc, [ip, #2536]!	; 0x9e8

00011730 <nl_langinfo@plt>:
   11730:	add	ip, pc, #0, 12
   11734:	add	ip, ip, #143360	; 0x23000
   11738:	ldr	pc, [ip, #2528]!	; 0x9e0

0001173c <readdir64@plt>:
   1173c:	add	ip, pc, #0, 12
   11740:	add	ip, ip, #143360	; 0x23000
   11744:	ldr	pc, [ip, #2520]!	; 0x9d8

00011748 <fdopendir@plt>:
   11748:	add	ip, pc, #0, 12
   1174c:	add	ip, ip, #143360	; 0x23000
   11750:	ldr	pc, [ip, #2512]!	; 0x9d0

00011754 <putc@plt>:
   11754:	add	ip, pc, #0, 12
   11758:	add	ip, ip, #143360	; 0x23000
   1175c:	ldr	pc, [ip, #2504]!	; 0x9c8

00011760 <dirfd@plt>:
   11760:	add	ip, pc, #0, 12
   11764:	add	ip, ip, #143360	; 0x23000
   11768:	ldr	pc, [ip, #2496]!	; 0x9c0

0001176c <bindtextdomain@plt>:
   1176c:	add	ip, pc, #0, 12
   11770:	add	ip, ip, #143360	; 0x23000
   11774:	ldr	pc, [ip, #2488]!	; 0x9b8

00011778 <isatty@plt>:
   11778:	add	ip, pc, #0, 12
   1177c:	add	ip, ip, #143360	; 0x23000
   11780:	ldr	pc, [ip, #2480]!	; 0x9b0

00011784 <unsetenv@plt>:
   11784:	add	ip, pc, #0, 12
   11788:	add	ip, ip, #143360	; 0x23000
   1178c:	ldr	pc, [ip, #2472]!	; 0x9a8

00011790 <fputs@plt>:
   11790:	add	ip, pc, #0, 12
   11794:	add	ip, ip, #143360	; 0x23000
   11798:	ldr	pc, [ip, #2464]!	; 0x9a0

0001179c <strncmp@plt>:
   1179c:	add	ip, pc, #0, 12
   117a0:	add	ip, ip, #143360	; 0x23000
   117a4:	ldr	pc, [ip, #2456]!	; 0x998

000117a8 <abort@plt>:
   117a8:	add	ip, pc, #0, 12
   117ac:	add	ip, ip, #143360	; 0x23000
   117b0:	ldr	pc, [ip, #2448]!	; 0x990

000117b4 <getc@plt>:
   117b4:	add	ip, pc, #0, 12
   117b8:	add	ip, ip, #143360	; 0x23000
   117bc:	ldr	pc, [ip, #2440]!	; 0x988

000117c0 <close@plt>:
   117c0:	add	ip, pc, #0, 12
   117c4:	add	ip, ip, #143360	; 0x23000
   117c8:	ldr	pc, [ip, #2432]!	; 0x980

000117cc <closedir@plt>:
   117cc:	add	ip, pc, #0, 12
   117d0:	add	ip, ip, #143360	; 0x23000
   117d4:	ldr	pc, [ip, #2424]!	; 0x978

000117d8 <__assert_fail@plt>:
   117d8:	add	ip, pc, #0, 12
   117dc:	add	ip, ip, #143360	; 0x23000
   117e0:	ldr	pc, [ip, #2416]!	; 0x970

Disassembly of section .text:

000117e4 <.text>:
   117e4:	mov	fp, #0
   117e8:	mov	lr, #0
   117ec:	pop	{r1}		; (ldr r1, [sp], #4)
   117f0:	mov	r2, sp
   117f4:	push	{r2}		; (str r2, [sp, #-4]!)
   117f8:	push	{r0}		; (str r0, [sp, #-4]!)
   117fc:	ldr	ip, [pc, #16]	; 11814 <__assert_fail@plt+0x3c>
   11800:	push	{ip}		; (str ip, [sp, #-4]!)
   11804:	ldr	r0, [pc, #12]	; 11818 <__assert_fail@plt+0x40>
   11808:	ldr	r3, [pc, #12]	; 1181c <__assert_fail@plt+0x44>
   1180c:	bl	115c8 <__libc_start_main@plt>
   11810:	bl	117a8 <abort@plt>
   11814:	muleq	r2, r8, r5
   11818:	ldrdeq	r1, [r1], -r4
   1181c:	andeq	r2, r2, r8, lsr r5
   11820:	ldr	r3, [pc, #20]	; 1183c <__assert_fail@plt+0x64>
   11824:	ldr	r2, [pc, #20]	; 11840 <__assert_fail@plt+0x68>
   11828:	add	r3, pc, r3
   1182c:	ldr	r2, [r3, r2]
   11830:	cmp	r2, #0
   11834:	bxeq	lr
   11838:	b	115e0 <__gmon_start__@plt>
   1183c:	ldrdeq	r3, [r2], -r0
   11840:	andeq	r0, r0, r4, asr r1
   11844:	ldr	r0, [pc, #24]	; 11864 <__assert_fail@plt+0x8c>
   11848:	ldr	r3, [pc, #24]	; 11868 <__assert_fail@plt+0x90>
   1184c:	cmp	r3, r0
   11850:	bxeq	lr
   11854:	ldr	r3, [pc, #16]	; 1186c <__assert_fail@plt+0x94>
   11858:	cmp	r3, #0
   1185c:	bxeq	lr
   11860:	bx	r3
   11864:			; <UNDEFINED> instruction: 0x000351b4
   11868:			; <UNDEFINED> instruction: 0x000351b4
   1186c:	andeq	r0, r0, r0
   11870:	ldr	r0, [pc, #36]	; 1189c <__assert_fail@plt+0xc4>
   11874:	ldr	r1, [pc, #36]	; 118a0 <__assert_fail@plt+0xc8>
   11878:	sub	r1, r1, r0
   1187c:	asr	r1, r1, #2
   11880:	add	r1, r1, r1, lsr #31
   11884:	asrs	r1, r1, #1
   11888:	bxeq	lr
   1188c:	ldr	r3, [pc, #16]	; 118a4 <__assert_fail@plt+0xcc>
   11890:	cmp	r3, #0
   11894:	bxeq	lr
   11898:	bx	r3
   1189c:			; <UNDEFINED> instruction: 0x000351b4
   118a0:			; <UNDEFINED> instruction: 0x000351b4
   118a4:	andeq	r0, r0, r0
   118a8:	push	{r4, lr}
   118ac:	ldr	r4, [pc, #24]	; 118cc <__assert_fail@plt+0xf4>
   118b0:	ldrb	r3, [r4]
   118b4:	cmp	r3, #0
   118b8:	popne	{r4, pc}
   118bc:	bl	11844 <__assert_fail@plt+0x6c>
   118c0:	mov	r3, #1
   118c4:	strb	r3, [r4]
   118c8:	pop	{r4, pc}
   118cc:	andeq	r5, r3, r4, ror #3
   118d0:	b	11870 <__assert_fail@plt+0x98>
   118d4:	push	{r4, sl, fp, lr}
   118d8:	add	fp, sp, #8
   118dc:	sub	sp, sp, #480	; 0x1e0
   118e0:	movw	r2, #0
   118e4:	str	r2, [fp, #-12]
   118e8:	str	r0, [fp, #-16]
   118ec:	str	r1, [fp, #-20]	; 0xffffffec
   118f0:	str	r2, [fp, #-32]	; 0xffffffe0
   118f4:	movw	r0, #1
   118f8:	str	r0, [fp, #-36]	; 0xffffffdc
   118fc:	movw	r0, #17947	; 0x461b
   11900:	movt	r0, #2
   11904:	str	r0, [fp, #-40]	; 0xffffffd8
   11908:	movw	r0, #9664	; 0x25c0
   1190c:	movt	r0, #2
   11910:	ldrb	r1, [r0]
   11914:	strb	r1, [fp, #-45]	; 0xffffffd3
   11918:	ldrb	r1, [r0, #1]
   1191c:	strb	r1, [fp, #-44]	; 0xffffffd4
   11920:	ldrb	r1, [r0, #2]
   11924:	strb	r1, [fp, #-43]	; 0xffffffd5
   11928:	ldrb	r1, [r0, #3]
   1192c:	strb	r1, [fp, #-42]	; 0xffffffd6
   11930:	ldrb	r0, [r0, #4]
   11934:	strb	r0, [fp, #-41]	; 0xffffffd7
   11938:	movw	r0, #11872	; 0x2e60
   1193c:	movt	r0, #1
   11940:	str	r0, [fp, #-56]	; 0xffffffc8
   11944:	movw	r0, #13964	; 0x368c
   11948:	movt	r0, #1
   1194c:	str	r0, [fp, #-60]	; 0xffffffc4
   11950:	ldr	r0, [fp, #-20]	; 0xffffffec
   11954:	ldr	r0, [r0]
   11958:	cmp	r0, r2
   1195c:	beq	11970 <__assert_fail@plt+0x198>
   11960:	ldr	r0, [fp, #-20]	; 0xffffffec
   11964:	ldr	r0, [r0]
   11968:	bl	18e14 <__assert_fail@plt+0x763c>
   1196c:	b	1197c <__assert_fail@plt+0x1a4>
   11970:	movw	r0, #9669	; 0x25c5
   11974:	movt	r0, #2
   11978:	bl	18e14 <__assert_fail@plt+0x763c>
   1197c:	bl	16634 <__assert_fail@plt+0x4e5c>
   11980:	bl	11604 <getpid@plt>
   11984:	movw	lr, #20968	; 0x51e8
   11988:	movt	lr, #3
   1198c:	str	r0, [lr]
   11990:	movw	r0, #20972	; 0x51ec
   11994:	movt	r0, #3
   11998:	movw	lr, #0
   1199c:	str	lr, [r0]
   119a0:	movw	r0, #6
   119a4:	movw	r1, #13038	; 0x32ee
   119a8:	movt	r1, #2
   119ac:	bl	11700 <setlocale@plt>
   119b0:	movw	r1, #17218	; 0x4342
   119b4:	movt	r1, #2
   119b8:	str	r0, [fp, #-232]	; 0xffffff18
   119bc:	mov	r0, r1
   119c0:	movw	r1, #9675	; 0x25cb
   119c4:	movt	r1, #2
   119c8:	bl	1176c <bindtextdomain@plt>
   119cc:	movw	r1, #17218	; 0x4342
   119d0:	movt	r1, #2
   119d4:	str	r0, [fp, #-236]	; 0xffffff14
   119d8:	mov	r0, r1
   119dc:	bl	11508 <textdomain@plt>
   119e0:	movw	r1, #30168	; 0x75d8
   119e4:	movt	r1, #1
   119e8:	str	r0, [fp, #-240]	; 0xffffff10
   119ec:	mov	r0, r1
   119f0:	bl	2259c <__assert_fail@plt+0x10dc4>
   119f4:	cmp	r0, #0
   119f8:	bne	11a10 <__assert_fail@plt+0x238>
   119fc:	movw	r0, #13968	; 0x3690
   11a00:	movt	r0, #1
   11a04:	bl	2259c <__assert_fail@plt+0x10dc4>
   11a08:	cmp	r0, #0
   11a0c:	beq	11a40 <__assert_fail@plt+0x268>
   11a10:	bl	11664 <__errno_location@plt>
   11a14:	ldr	r1, [r0]
   11a18:	movw	r0, #9699	; 0x25e3
   11a1c:	movt	r0, #2
   11a20:	str	r1, [sp, #244]	; 0xf4
   11a24:	bl	1161c <gettext@plt>
   11a28:	movw	r1, #1
   11a2c:	str	r0, [sp, #240]	; 0xf0
   11a30:	mov	r0, r1
   11a34:	ldr	r1, [sp, #244]	; 0xf4
   11a38:	ldr	r2, [sp, #240]	; 0xf0
   11a3c:	bl	1158c <error@plt>
   11a40:	movw	r0, #20976	; 0x51f0
   11a44:	movt	r0, #3
   11a48:	movw	r1, #2048	; 0x800
   11a4c:	bl	161f4 <__assert_fail@plt+0x4a1c>
   11a50:	str	r0, [fp, #-64]	; 0xffffffc0
   11a54:	ldr	r0, [fp, #-64]	; 0xffffffc0
   11a58:	movw	r1, #1
   11a5c:	cmp	r1, r0
   11a60:	bne	11a74 <__assert_fail@plt+0x29c>
   11a64:	movw	r0, #14160	; 0x3750
   11a68:	movt	r0, #1
   11a6c:	str	r0, [fp, #-60]	; 0xffffffc4
   11a70:	b	11b60 <__assert_fail@plt+0x388>
   11a74:	ldr	r0, [fp, #-64]	; 0xffffffc0
   11a78:	movw	r1, #2
   11a7c:	cmp	r1, r0
   11a80:	bne	11a94 <__assert_fail@plt+0x2bc>
   11a84:	movw	r0, #14160	; 0x3750
   11a88:	movt	r0, #1
   11a8c:	str	r0, [fp, #-60]	; 0xffffffc4
   11a90:	b	11b5c <__assert_fail@plt+0x384>
   11a94:	movw	r0, #0
   11a98:	bl	114d8 <sysconf@plt>
   11a9c:	str	r0, [fp, #-208]	; 0xffffff30
   11aa0:	ldr	r0, [fp, #-208]	; 0xffffff30
   11aa4:	cmp	r0, #0
   11aa8:	ble	11b04 <__assert_fail@plt+0x32c>
   11aac:	ldr	r0, [fp, #-208]	; 0xffffff30
   11ab0:	cmp	r0, #2048	; 0x800
   11ab4:	ble	11abc <__assert_fail@plt+0x2e4>
   11ab8:	b	11adc <__assert_fail@plt+0x304>
   11abc:	movw	r0, #9734	; 0x2606
   11ac0:	movt	r0, #2
   11ac4:	movw	r1, #9761	; 0x2621
   11ac8:	movt	r1, #2
   11acc:	movw	r2, #483	; 0x1e3
   11ad0:	movw	r3, #9769	; 0x2629
   11ad4:	movt	r3, #2
   11ad8:	bl	117d8 <__assert_fail@plt>
   11adc:	movw	r0, #20976	; 0x51f0
   11ae0:	movt	r0, #3
   11ae4:	ldr	r0, [r0, #12]
   11ae8:	ldr	r1, [fp, #-208]	; 0xffffff30
   11aec:	sub	r1, r1, #2048	; 0x800
   11af0:	bl	13780 <__assert_fail@plt+0x1fa8>
   11af4:	movw	r1, #20976	; 0x51f0
   11af8:	movt	r1, #3
   11afc:	str	r0, [r1, #12]
   11b00:	b	11b08 <__assert_fail@plt+0x330>
   11b04:	b	11b08 <__assert_fail@plt+0x330>
   11b08:	movw	r0, #20976	; 0x51f0
   11b0c:	movt	r0, #3
   11b10:	ldr	r0, [r0, #12]
   11b14:	cmp	r0, #2048	; 0x800
   11b18:	bcc	11b20 <__assert_fail@plt+0x348>
   11b1c:	b	11b40 <__assert_fail@plt+0x368>
   11b20:	movw	r0, #9792	; 0x2640
   11b24:	movt	r0, #2
   11b28:	movw	r1, #9761	; 0x2621
   11b2c:	movt	r1, #2
   11b30:	movw	r2, #511	; 0x1ff
   11b34:	movw	r3, #9769	; 0x2629
   11b38:	movt	r3, #2
   11b3c:	bl	117d8 <__assert_fail@plt>
   11b40:	movw	r0, #14268	; 0x37bc
   11b44:	movt	r0, #1
   11b48:	movw	r1, #20976	; 0x51f0
   11b4c:	movt	r1, #3
   11b50:	str	r0, [r1, #32]
   11b54:	mov	r0, r1
   11b58:	bl	16370 <__assert_fail@plt+0x4b98>
   11b5c:	b	11b60 <__assert_fail@plt+0x388>
   11b60:	b	11b64 <__assert_fail@plt+0x38c>
   11b64:	ldr	r0, [fp, #-16]
   11b68:	ldr	r1, [fp, #-20]	; 0xffffffec
   11b6c:	movw	r2, #9819	; 0x265b
   11b70:	movt	r2, #2
   11b74:	movw	r3, #15736	; 0x3d78
   11b78:	movt	r3, #2
   11b7c:	sub	ip, fp, #28
   11b80:	str	ip, [sp]
   11b84:	bl	115ec <getopt_long@plt>
   11b88:	str	r0, [fp, #-24]	; 0xffffffe8
   11b8c:	cmn	r0, #1
   11b90:	beq	12504 <__assert_fail@plt+0xd2c>
   11b94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11b98:	sub	r0, r0, #48	; 0x30
   11b9c:	cmp	r0, #208	; 0xd0
   11ba0:	str	r0, [sp, #236]	; 0xec
   11ba4:	bhi	124f8 <__assert_fail@plt+0xd20>
   11ba8:	add	r0, pc, #8
   11bac:	ldr	r1, [sp, #236]	; 0xec
   11bb0:	ldr	r0, [r0, r1, lsl #2]
   11bb4:	mov	pc, r0
   11bb8:	strdeq	r1, [r1], -ip
   11bbc:	strdeq	r2, [r1], -r8
   11bc0:	strdeq	r2, [r1], -r8
   11bc4:	strdeq	r2, [r1], -r8
   11bc8:	strdeq	r2, [r1], -r8
   11bcc:	strdeq	r2, [r1], -r8
   11bd0:	strdeq	r2, [r1], -r8
   11bd4:	strdeq	r2, [r1], -r8
   11bd8:	strdeq	r2, [r1], -r8
   11bdc:	strdeq	r2, [r1], -r8
   11be0:	strdeq	r2, [r1], -r8
   11be4:	strdeq	r2, [r1], -r8
   11be8:	strdeq	r2, [r1], -r8
   11bec:	strdeq	r2, [r1], -r8
   11bf0:	strdeq	r2, [r1], -r8
   11bf4:	strdeq	r2, [r1], -r8
   11bf8:	strdeq	r2, [r1], -r8
   11bfc:	strdeq	r2, [r1], -r8
   11c00:	strdeq	r2, [r1], -r8
   11c04:	strdeq	r2, [r1], -r8
   11c08:	strdeq	r2, [r1], -r8
   11c0c:	andeq	r1, r1, r8, asr #30
   11c10:	strdeq	r2, [r1], -r8
   11c14:	strdeq	r2, [r1], -r8
   11c18:	strdeq	r2, [r1], -r8
   11c1c:			; <UNDEFINED> instruction: 0x00011fb0
   11c20:	strdeq	r2, [r1], -r8
   11c24:	strdeq	r2, [r1], -r8
   11c28:	andeq	r2, r1, ip, rrx
   11c2c:	strdeq	r2, [r1], -r8
   11c30:	strdeq	r2, [r1], -r8
   11c34:	strdeq	r2, [r1], -r8
   11c38:	ldrdeq	r2, [r1], -r4
   11c3c:	strdeq	r2, [r1], -r8
   11c40:	strdeq	r2, [r1], -r8
   11c44:	andeq	r2, r1, r0, ror #6
   11c48:	strdeq	r2, [r1], -r8
   11c4c:	strdeq	r2, [r1], -r8
   11c50:	strdeq	r2, [r1], -r8
   11c54:	strdeq	r2, [r1], -r8
   11c58:	strdeq	r2, [r1], -r8
   11c5c:	strdeq	r2, [r1], -r8
   11c60:	strdeq	r2, [r1], -r8
   11c64:	strdeq	r2, [r1], -r8
   11c68:	strdeq	r2, [r1], -r8
   11c6c:	strdeq	r2, [r1], -r8
   11c70:	strdeq	r2, [r1], -r8
   11c74:	strdeq	r2, [r1], -r8
   11c78:	strdeq	r2, [r1], -r8
   11c7c:	andeq	r2, r1, r8, lsl #8
   11c80:	strdeq	r2, [r1], -r8
   11c84:	strdeq	r2, [r1], -r8
   11c88:	andeq	r1, r1, ip, lsl pc
   11c8c:	andeq	r1, r1, r8, asr #30
   11c90:	strdeq	r2, [r1], -r8
   11c94:	strdeq	r2, [r1], -r8
   11c98:	andeq	r1, r1, r8, lsr #31
   11c9c:			; <UNDEFINED> instruction: 0x00011fb0
   11ca0:	strdeq	r2, [r1], -r8
   11ca4:	strdeq	r2, [r1], -r8
   11ca8:	andeq	r2, r1, r0, lsl r1
   11cac:	strdeq	r2, [r1], -r8
   11cb0:	andeq	r2, r1, r8, ror #3
   11cb4:	muleq	r1, r4, r3
   11cb8:	andeq	r2, r1, r8, lsr #7
   11cbc:	strdeq	r2, [r1], -r8
   11cc0:	andeq	r2, r1, r8, asr #7
   11cc4:			; <UNDEFINED> instruction: 0x000122b8
   11cc8:	andeq	r2, r1, ip, ror #6
   11ccc:	strdeq	r2, [r1], -r8
   11cd0:	andeq	r2, r1, ip, lsl r4
   11cd4:	strdeq	r2, [r1], -r8
   11cd8:	andeq	r2, r1, r0, lsl #7
   11cdc:	strdeq	r2, [r1], -r8
   11ce0:	strdeq	r2, [r1], -r8
   11ce4:	strdeq	r2, [r1], -r8
   11ce8:	strdeq	r2, [r1], -r8
   11cec:	strdeq	r2, [r1], -r8
   11cf0:	strdeq	r2, [r1], -r8
   11cf4:	strdeq	r2, [r1], -r8
   11cf8:	strdeq	r2, [r1], -r8
   11cfc:	strdeq	r2, [r1], -r8
   11d00:	strdeq	r2, [r1], -r8
   11d04:	strdeq	r2, [r1], -r8
   11d08:	strdeq	r2, [r1], -r8
   11d0c:	strdeq	r2, [r1], -r8
   11d10:	strdeq	r2, [r1], -r8
   11d14:	strdeq	r2, [r1], -r8
   11d18:	strdeq	r2, [r1], -r8
   11d1c:	strdeq	r2, [r1], -r8
   11d20:	strdeq	r2, [r1], -r8
   11d24:	strdeq	r2, [r1], -r8
   11d28:	strdeq	r2, [r1], -r8
   11d2c:	strdeq	r2, [r1], -r8
   11d30:	strdeq	r2, [r1], -r8
   11d34:	strdeq	r2, [r1], -r8
   11d38:	strdeq	r2, [r1], -r8
   11d3c:	strdeq	r2, [r1], -r8
   11d40:	strdeq	r2, [r1], -r8
   11d44:	strdeq	r2, [r1], -r8
   11d48:	strdeq	r2, [r1], -r8
   11d4c:	strdeq	r2, [r1], -r8
   11d50:	strdeq	r2, [r1], -r8
   11d54:	strdeq	r2, [r1], -r8
   11d58:	strdeq	r2, [r1], -r8
   11d5c:	strdeq	r2, [r1], -r8
   11d60:	strdeq	r2, [r1], -r8
   11d64:	strdeq	r2, [r1], -r8
   11d68:	strdeq	r2, [r1], -r8
   11d6c:	strdeq	r2, [r1], -r8
   11d70:	strdeq	r2, [r1], -r8
   11d74:	strdeq	r2, [r1], -r8
   11d78:	strdeq	r2, [r1], -r8
   11d7c:	strdeq	r2, [r1], -r8
   11d80:	strdeq	r2, [r1], -r8
   11d84:	strdeq	r2, [r1], -r8
   11d88:	strdeq	r2, [r1], -r8
   11d8c:	strdeq	r2, [r1], -r8
   11d90:	strdeq	r2, [r1], -r8
   11d94:	strdeq	r2, [r1], -r8
   11d98:	strdeq	r2, [r1], -r8
   11d9c:	strdeq	r2, [r1], -r8
   11da0:	strdeq	r2, [r1], -r8
   11da4:	strdeq	r2, [r1], -r8
   11da8:	strdeq	r2, [r1], -r8
   11dac:	strdeq	r2, [r1], -r8
   11db0:	strdeq	r2, [r1], -r8
   11db4:	strdeq	r2, [r1], -r8
   11db8:	strdeq	r2, [r1], -r8
   11dbc:	strdeq	r2, [r1], -r8
   11dc0:	strdeq	r2, [r1], -r8
   11dc4:	strdeq	r2, [r1], -r8
   11dc8:	strdeq	r2, [r1], -r8
   11dcc:	strdeq	r2, [r1], -r8
   11dd0:	strdeq	r2, [r1], -r8
   11dd4:	strdeq	r2, [r1], -r8
   11dd8:	strdeq	r2, [r1], -r8
   11ddc:	strdeq	r2, [r1], -r8
   11de0:	strdeq	r2, [r1], -r8
   11de4:	strdeq	r2, [r1], -r8
   11de8:	strdeq	r2, [r1], -r8
   11dec:	strdeq	r2, [r1], -r8
   11df0:	strdeq	r2, [r1], -r8
   11df4:	strdeq	r2, [r1], -r8
   11df8:	strdeq	r2, [r1], -r8
   11dfc:	strdeq	r2, [r1], -r8
   11e00:	strdeq	r2, [r1], -r8
   11e04:	strdeq	r2, [r1], -r8
   11e08:	strdeq	r2, [r1], -r8
   11e0c:	strdeq	r2, [r1], -r8
   11e10:	strdeq	r2, [r1], -r8
   11e14:	strdeq	r2, [r1], -r8
   11e18:	strdeq	r2, [r1], -r8
   11e1c:	strdeq	r2, [r1], -r8
   11e20:	strdeq	r2, [r1], -r8
   11e24:	strdeq	r2, [r1], -r8
   11e28:	strdeq	r2, [r1], -r8
   11e2c:	strdeq	r2, [r1], -r8
   11e30:	strdeq	r2, [r1], -r8
   11e34:	strdeq	r2, [r1], -r8
   11e38:	strdeq	r2, [r1], -r8
   11e3c:	strdeq	r2, [r1], -r8
   11e40:	strdeq	r2, [r1], -r8
   11e44:	strdeq	r2, [r1], -r8
   11e48:	strdeq	r2, [r1], -r8
   11e4c:	strdeq	r2, [r1], -r8
   11e50:	strdeq	r2, [r1], -r8
   11e54:	strdeq	r2, [r1], -r8
   11e58:	strdeq	r2, [r1], -r8
   11e5c:	strdeq	r2, [r1], -r8
   11e60:	strdeq	r2, [r1], -r8
   11e64:	strdeq	r2, [r1], -r8
   11e68:	strdeq	r2, [r1], -r8
   11e6c:	strdeq	r2, [r1], -r8
   11e70:	strdeq	r2, [r1], -r8
   11e74:	strdeq	r2, [r1], -r8
   11e78:	strdeq	r2, [r1], -r8
   11e7c:	strdeq	r2, [r1], -r8
   11e80:	strdeq	r2, [r1], -r8
   11e84:	strdeq	r2, [r1], -r8
   11e88:	strdeq	r2, [r1], -r8
   11e8c:	strdeq	r2, [r1], -r8
   11e90:	strdeq	r2, [r1], -r8
   11e94:	strdeq	r2, [r1], -r8
   11e98:	strdeq	r2, [r1], -r8
   11e9c:	strdeq	r2, [r1], -r8
   11ea0:	strdeq	r2, [r1], -r8
   11ea4:	strdeq	r2, [r1], -r8
   11ea8:	strdeq	r2, [r1], -r8
   11eac:	strdeq	r2, [r1], -r8
   11eb0:	strdeq	r2, [r1], -r8
   11eb4:	strdeq	r2, [r1], -r8
   11eb8:	strdeq	r2, [r1], -r8
   11ebc:	strdeq	r2, [r1], -r8
   11ec0:	strdeq	r2, [r1], -r8
   11ec4:	strdeq	r2, [r1], -r8
   11ec8:	strdeq	r2, [r1], -r8
   11ecc:	strdeq	r2, [r1], -r8
   11ed0:	strdeq	r2, [r1], -r8
   11ed4:	strdeq	r2, [r1], -r8
   11ed8:	strdeq	r2, [r1], -r8
   11edc:	strdeq	r2, [r1], -r8
   11ee0:	strdeq	r2, [r1], -r8
   11ee4:	strdeq	r2, [r1], -r8
   11ee8:	strdeq	r2, [r1], -r8
   11eec:	strdeq	r2, [r1], -r8
   11ef0:	strdeq	r2, [r1], -r8
   11ef4:	strdeq	r2, [r1], -r8
   11ef8:	andeq	r2, r1, r4, lsr r4
   11efc:	movw	r0, #15348	; 0x3bf4
   11f00:	movt	r0, #1
   11f04:	str	r0, [fp, #-56]	; 0xffffffc8
   11f08:	movw	r0, #21020	; 0x521c
   11f0c:	movt	r0, #3
   11f10:	movw	r1, #0
   11f14:	strb	r1, [r0]
   11f18:	b	12500 <__assert_fail@plt+0xd28>
   11f1c:	movw	r0, #15348	; 0x3bf4
   11f20:	movt	r0, #1
   11f24:	str	r0, [fp, #-56]	; 0xffffffc8
   11f28:	movw	r0, #20960	; 0x51e0
   11f2c:	movt	r0, #3
   11f30:	ldr	r0, [r0]
   11f34:	bl	13e88 <__assert_fail@plt+0x26b0>
   11f38:	movw	lr, #21020	; 0x521c
   11f3c:	movt	lr, #3
   11f40:	strb	r0, [lr]
   11f44:	b	12500 <__assert_fail@plt+0xd28>
   11f48:	movw	r0, #20960	; 0x51e0
   11f4c:	movt	r0, #3
   11f50:	ldr	r0, [r0]
   11f54:	movw	r1, #0
   11f58:	cmp	r0, r1
   11f5c:	beq	11f94 <__assert_fail@plt+0x7bc>
   11f60:	movw	r0, #20960	; 0x51e0
   11f64:	movt	r0, #3
   11f68:	ldr	r0, [r0]
   11f6c:	bl	11634 <strlen@plt>
   11f70:	cmp	r0, #0
   11f74:	bls	11f94 <__assert_fail@plt+0x7bc>
   11f78:	movw	r0, #20960	; 0x51e0
   11f7c:	movt	r0, #3
   11f80:	ldr	r0, [r0]
   11f84:	movw	r1, #21024	; 0x5220
   11f88:	movt	r1, #3
   11f8c:	str	r0, [r1]
   11f90:	b	11fa4 <__assert_fail@plt+0x7cc>
   11f94:	movw	r0, #21024	; 0x5220
   11f98:	movt	r0, #3
   11f9c:	movw	r1, #0
   11fa0:	str	r1, [r0]
   11fa4:	b	12500 <__assert_fail@plt+0xd28>
   11fa8:	movw	r0, #0
   11fac:	bl	14008 <__assert_fail@plt+0x2830>
   11fb0:	movw	r0, #20960	; 0x51e0
   11fb4:	movt	r0, #3
   11fb8:	ldr	r0, [r0]
   11fbc:	movw	r1, #0
   11fc0:	cmp	r0, r1
   11fc4:	beq	11fe4 <__assert_fail@plt+0x80c>
   11fc8:	movw	r0, #20960	; 0x51e0
   11fcc:	movt	r0, #3
   11fd0:	ldr	r0, [r0]
   11fd4:	movw	r1, #20976	; 0x51f0
   11fd8:	movt	r1, #3
   11fdc:	str	r0, [r1, #24]
   11fe0:	b	11ff8 <__assert_fail@plt+0x820>
   11fe4:	movw	r0, #20976	; 0x51f0
   11fe8:	movt	r0, #3
   11fec:	movw	r1, #9852	; 0x267c
   11ff0:	movt	r1, #2
   11ff4:	str	r1, [r0, #24]
   11ff8:	movw	r0, #20976	; 0x51f0
   11ffc:	movt	r0, #3
   12000:	ldr	r0, [r0, #40]	; 0x28
   12004:	cmp	r0, #0
   12008:	beq	12030 <__assert_fail@plt+0x858>
   1200c:	movw	r0, #9855	; 0x267f
   12010:	movt	r0, #2
   12014:	movw	r1, #9871	; 0x268f
   12018:	movt	r1, #2
   1201c:	bl	14428 <__assert_fail@plt+0x2c50>
   12020:	movw	r0, #20976	; 0x51f0
   12024:	movt	r0, #3
   12028:	movw	r1, #0
   1202c:	str	r1, [r0, #40]	; 0x28
   12030:	movw	r0, #20976	; 0x51f0
   12034:	movt	r0, #3
   12038:	ldr	r0, [r0, #36]	; 0x24
   1203c:	cmp	r0, #0
   12040:	beq	12068 <__assert_fail@plt+0x890>
   12044:	movw	r0, #9855	; 0x267f
   12048:	movt	r0, #2
   1204c:	movw	r1, #9882	; 0x269a
   12050:	movt	r1, #2
   12054:	bl	14428 <__assert_fail@plt+0x2c50>
   12058:	movw	r0, #20976	; 0x51f0
   1205c:	movt	r0, #3
   12060:	movw	r1, #0
   12064:	str	r1, [r0, #36]	; 0x24
   12068:	b	12500 <__assert_fail@plt+0xd28>
   1206c:	movw	r0, #20960	; 0x51e0
   12070:	movt	r0, #3
   12074:	ldr	r0, [r0]
   12078:	movw	r1, #76	; 0x4c
   1207c:	movw	r2, #1
   12080:	str	r2, [sp, #232]	; 0xe8
   12084:	mvn	r3, #0
   12088:	ldr	ip, [sp, #232]	; 0xe8
   1208c:	str	ip, [sp]
   12090:	bl	14484 <__assert_fail@plt+0x2cac>
   12094:	movw	r1, #20976	; 0x51f0
   12098:	movt	r1, #3
   1209c:	str	r0, [r1, #36]	; 0x24
   120a0:	ldr	r0, [r1, #40]	; 0x28
   120a4:	cmp	r0, #0
   120a8:	beq	120d0 <__assert_fail@plt+0x8f8>
   120ac:	movw	r0, #9894	; 0x26a6
   120b0:	movt	r0, #2
   120b4:	movw	r1, #9871	; 0x268f
   120b8:	movt	r1, #2
   120bc:	bl	14428 <__assert_fail@plt+0x2c50>
   120c0:	movw	r0, #20976	; 0x51f0
   120c4:	movt	r0, #3
   120c8:	movw	r1, #0
   120cc:	str	r1, [r0, #40]	; 0x28
   120d0:	movw	r0, #20976	; 0x51f0
   120d4:	movt	r0, #3
   120d8:	ldr	r0, [r0, #24]
   120dc:	movw	r1, #0
   120e0:	cmp	r0, r1
   120e4:	beq	1210c <__assert_fail@plt+0x934>
   120e8:	movw	r0, #9894	; 0x26a6
   120ec:	movt	r0, #2
   120f0:	movw	r1, #9897	; 0x26a9
   120f4:	movt	r1, #2
   120f8:	bl	14428 <__assert_fail@plt+0x2c50>
   120fc:	movw	r0, #20976	; 0x51f0
   12100:	movt	r0, #3
   12104:	movw	r1, #0
   12108:	str	r1, [r0, #24]
   1210c:	b	12500 <__assert_fail@plt+0xd28>
   12110:	movw	r0, #20960	; 0x51e0
   12114:	movt	r0, #3
   12118:	ldr	r0, [r0]
   1211c:	movw	r1, #0
   12120:	cmp	r0, r1
   12124:	beq	12160 <__assert_fail@plt+0x988>
   12128:	movw	r0, #20960	; 0x51e0
   1212c:	movt	r0, #3
   12130:	ldr	r0, [r0]
   12134:	movw	r1, #108	; 0x6c
   12138:	movw	r2, #1
   1213c:	str	r2, [sp, #228]	; 0xe4
   12140:	mvn	r3, #0
   12144:	ldr	ip, [sp, #228]	; 0xe4
   12148:	str	ip, [sp]
   1214c:	bl	14484 <__assert_fail@plt+0x2cac>
   12150:	movw	r1, #20976	; 0x51f0
   12154:	movt	r1, #3
   12158:	str	r0, [r1, #36]	; 0x24
   1215c:	b	12170 <__assert_fail@plt+0x998>
   12160:	movw	r0, #20976	; 0x51f0
   12164:	movt	r0, #3
   12168:	movw	r1, #1
   1216c:	str	r1, [r0, #36]	; 0x24
   12170:	movw	r0, #20976	; 0x51f0
   12174:	movt	r0, #3
   12178:	ldr	r0, [r0, #40]	; 0x28
   1217c:	cmp	r0, #0
   12180:	beq	121a8 <__assert_fail@plt+0x9d0>
   12184:	movw	r0, #9907	; 0x26b3
   12188:	movt	r0, #2
   1218c:	movw	r1, #9871	; 0x268f
   12190:	movt	r1, #2
   12194:	bl	14428 <__assert_fail@plt+0x2c50>
   12198:	movw	r0, #20976	; 0x51f0
   1219c:	movt	r0, #3
   121a0:	movw	r1, #0
   121a4:	str	r1, [r0, #40]	; 0x28
   121a8:	movw	r0, #20976	; 0x51f0
   121ac:	movt	r0, #3
   121b0:	ldr	r0, [r0, #24]
   121b4:	movw	r1, #0
   121b8:	cmp	r0, r1
   121bc:	beq	121e4 <__assert_fail@plt+0xa0c>
   121c0:	movw	r0, #9907	; 0x26b3
   121c4:	movt	r0, #2
   121c8:	movw	r1, #9897	; 0x26a9
   121cc:	movt	r1, #2
   121d0:	bl	14428 <__assert_fail@plt+0x2c50>
   121d4:	movw	r0, #20976	; 0x51f0
   121d8:	movt	r0, #3
   121dc:	movw	r1, #0
   121e0:	str	r1, [r0, #24]
   121e4:	b	12500 <__assert_fail@plt+0xd28>
   121e8:	movw	r0, #20960	; 0x51e0
   121ec:	movt	r0, #3
   121f0:	ldr	r0, [r0]
   121f4:	movw	r1, #110	; 0x6e
   121f8:	movw	r2, #1
   121fc:	str	r2, [sp, #224]	; 0xe0
   12200:	mvn	r3, #0
   12204:	ldr	ip, [sp, #224]	; 0xe0
   12208:	str	ip, [sp]
   1220c:	bl	14484 <__assert_fail@plt+0x2cac>
   12210:	movw	r1, #20976	; 0x51f0
   12214:	movt	r1, #3
   12218:	str	r0, [r1, #40]	; 0x28
   1221c:	ldr	r0, [r1, #36]	; 0x24
   12220:	cmp	r0, #0
   12224:	beq	1224c <__assert_fail@plt+0xa74>
   12228:	movw	r0, #9922	; 0x26c2
   1222c:	movt	r0, #2
   12230:	movw	r1, #9882	; 0x269a
   12234:	movt	r1, #2
   12238:	bl	14428 <__assert_fail@plt+0x2c50>
   1223c:	movw	r0, #20976	; 0x51f0
   12240:	movt	r0, #3
   12244:	movw	r1, #0
   12248:	str	r1, [r0, #36]	; 0x24
   1224c:	movw	r0, #20976	; 0x51f0
   12250:	movt	r0, #3
   12254:	ldr	r0, [r0, #24]
   12258:	movw	r1, #0
   1225c:	cmp	r0, r1
   12260:	beq	122b4 <__assert_fail@plt+0xadc>
   12264:	movw	r0, #20976	; 0x51f0
   12268:	movt	r0, #3
   1226c:	ldr	r0, [r0, #40]	; 0x28
   12270:	cmp	r0, #1
   12274:	bne	1228c <__assert_fail@plt+0xab4>
   12278:	movw	r0, #20976	; 0x51f0
   1227c:	movt	r0, #3
   12280:	movw	r1, #0
   12284:	str	r1, [r0, #40]	; 0x28
   12288:	b	122b0 <__assert_fail@plt+0xad8>
   1228c:	movw	r0, #9922	; 0x26c2
   12290:	movt	r0, #2
   12294:	movw	r1, #9897	; 0x26a9
   12298:	movt	r1, #2
   1229c:	bl	14428 <__assert_fail@plt+0x2c50>
   122a0:	movw	r0, #20976	; 0x51f0
   122a4:	movt	r0, #3
   122a8:	movw	r1, #0
   122ac:	str	r1, [r0, #24]
   122b0:	b	122b4 <__assert_fail@plt+0xadc>
   122b4:	b	12500 <__assert_fail@plt+0xd28>
   122b8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   122bc:	blx	r0
   122c0:	movw	r0, #20960	; 0x51e0
   122c4:	movt	r0, #3
   122c8:	ldr	r0, [r0]
   122cc:	movw	lr, #20976	; 0x51f0
   122d0:	movt	lr, #3
   122d4:	ldr	r3, [lr, #4]
   122d8:	movw	r1, #115	; 0x73
   122dc:	movw	r2, #1
   122e0:	movw	lr, #0
   122e4:	str	lr, [sp]
   122e8:	bl	14484 <__assert_fail@plt+0x2cac>
   122ec:	str	r0, [fp, #-212]	; 0xffffff2c
   122f0:	ldr	r0, [fp, #-212]	; 0xffffff2c
   122f4:	movw	r1, #20976	; 0x51f0
   122f8:	movt	r1, #3
   122fc:	ldr	r1, [r1, #4]
   12300:	cmp	r0, r1
   12304:	bls	1234c <__assert_fail@plt+0xb74>
   12308:	movw	r0, #9936	; 0x26d0
   1230c:	movt	r0, #2
   12310:	bl	1161c <gettext@plt>
   12314:	ldr	r3, [fp, #-212]	; 0xffffff2c
   12318:	movw	lr, #20976	; 0x51f0
   1231c:	movt	lr, #3
   12320:	ldr	lr, [lr, #4]
   12324:	movw	r1, #0
   12328:	str	r0, [sp, #220]	; 0xdc
   1232c:	mov	r0, r1
   12330:	ldr	r2, [sp, #220]	; 0xdc
   12334:	str	lr, [sp]
   12338:	bl	1158c <error@plt>
   1233c:	movw	r0, #20976	; 0x51f0
   12340:	movt	r0, #3
   12344:	ldr	r0, [r0, #4]
   12348:	str	r0, [fp, #-212]	; 0xffffff2c
   1234c:	ldr	r0, [fp, #-212]	; 0xffffff2c
   12350:	movw	r1, #20976	; 0x51f0
   12354:	movt	r1, #3
   12358:	str	r0, [r1, #12]
   1235c:	b	12500 <__assert_fail@plt+0xd28>
   12360:	movw	r0, #1
   12364:	str	r0, [fp, #-32]	; 0xffffffe0
   12368:	b	12500 <__assert_fail@plt+0xd28>
   1236c:	movw	r0, #21028	; 0x5224
   12370:	movt	r0, #3
   12374:	movw	r1, #1
   12378:	strb	r1, [r0]
   1237c:	b	12500 <__assert_fail@plt+0xd28>
   12380:	movw	r0, #20976	; 0x51f0
   12384:	movt	r0, #3
   12388:	movw	r1, #1
   1238c:	str	r1, [r0]
   12390:	b	12500 <__assert_fail@plt+0xd28>
   12394:	movw	r0, #21029	; 0x5225
   12398:	movt	r0, #3
   1239c:	movw	r1, #1
   123a0:	strb	r1, [r0]
   123a4:	b	12500 <__assert_fail@plt+0xd28>
   123a8:	movw	r0, #21030	; 0x5226
   123ac:	movt	r0, #3
   123b0:	movw	r1, #1
   123b4:	strb	r1, [r0]
   123b8:	movw	r0, #21028	; 0x5224
   123bc:	movt	r0, #3
   123c0:	strb	r1, [r0]
   123c4:	b	12500 <__assert_fail@plt+0xd28>
   123c8:	movw	r0, #0
   123cc:	str	r0, [fp, #-36]	; 0xffffffdc
   123d0:	b	12500 <__assert_fail@plt+0xd28>
   123d4:	ldr	r3, [pc, #2688]	; 12e5c <__assert_fail@plt+0x1684>
   123d8:	movw	r0, #20960	; 0x51e0
   123dc:	movt	r0, #3
   123e0:	ldr	r0, [r0]
   123e4:	movw	r1, #80	; 0x50
   123e8:	movw	r2, #0
   123ec:	movw	ip, #1
   123f0:	str	ip, [sp]
   123f4:	bl	14484 <__assert_fail@plt+0x2cac>
   123f8:	movw	r1, #20832	; 0x5160
   123fc:	movt	r1, #3
   12400:	str	r0, [r1]
   12404:	b	12500 <__assert_fail@plt+0xd28>
   12408:	movw	r0, #20960	; 0x51e0
   1240c:	movt	r0, #3
   12410:	ldr	r0, [r0]
   12414:	str	r0, [fp, #-40]	; 0xffffffd8
   12418:	b	12500 <__assert_fail@plt+0xd28>
   1241c:	movw	r0, #9669	; 0x25c5
   12420:	movt	r0, #2
   12424:	bl	16f8c <__assert_fail@plt+0x57b4>
   12428:	movw	r0, #0
   1242c:	str	r0, [fp, #-12]
   12430:	b	12e50 <__assert_fail@plt+0x1678>
   12434:	movw	r0, #20960	; 0x51e0
   12438:	movt	r0, #3
   1243c:	ldr	r0, [r0]
   12440:	movw	r1, #61	; 0x3d
   12444:	bl	11640 <strchr@plt>
   12448:	movw	r1, #0
   1244c:	cmp	r0, r1
   12450:	beq	1248c <__assert_fail@plt+0xcb4>
   12454:	movw	r0, #10001	; 0x2711
   12458:	movt	r0, #2
   1245c:	bl	1161c <gettext@plt>
   12460:	ldr	lr, [fp, #-28]	; 0xffffffe4
   12464:	movw	r1, #15736	; 0x3d78
   12468:	movt	r1, #2
   1246c:	add	r1, r1, lr, lsl #4
   12470:	ldr	r3, [r1]
   12474:	movw	r1, #1
   12478:	str	r0, [sp, #216]	; 0xd8
   1247c:	mov	r0, r1
   12480:	movw	r1, #0
   12484:	ldr	r2, [sp, #216]	; 0xd8
   12488:	bl	1158c <error@plt>
   1248c:	movw	r0, #20960	; 0x51e0
   12490:	movt	r0, #3
   12494:	ldr	r0, [r0]
   12498:	movw	r1, #21032	; 0x5228
   1249c:	movt	r1, #3
   124a0:	str	r0, [r1]
   124a4:	ldr	r0, [r1]
   124a8:	bl	11784 <unsetenv@plt>
   124ac:	movw	r1, #0
   124b0:	cmp	r1, r0
   124b4:	beq	124f4 <__assert_fail@plt+0xd1c>
   124b8:	bl	11664 <__errno_location@plt>
   124bc:	ldr	r1, [r0]
   124c0:	movw	r0, #10058	; 0x274a
   124c4:	movt	r0, #2
   124c8:	str	r1, [sp, #212]	; 0xd4
   124cc:	bl	1161c <gettext@plt>
   124d0:	movw	r1, #21032	; 0x5228
   124d4:	movt	r1, #3
   124d8:	ldr	r3, [r1]
   124dc:	movw	r1, #1
   124e0:	str	r0, [sp, #208]	; 0xd0
   124e4:	mov	r0, r1
   124e8:	ldr	r1, [sp, #212]	; 0xd4
   124ec:	ldr	r2, [sp, #208]	; 0xd0
   124f0:	bl	1158c <error@plt>
   124f4:	b	12500 <__assert_fail@plt+0xd28>
   124f8:	movw	r0, #1
   124fc:	bl	14008 <__assert_fail@plt+0x2830>
   12500:	b	11b64 <__assert_fail@plt+0x38c>
   12504:	movw	r0, #21024	; 0x5220
   12508:	movt	r0, #3
   1250c:	ldr	r0, [r0]
   12510:	movw	r1, #0
   12514:	cmp	r0, r1
   12518:	beq	12554 <__assert_fail@plt+0xd7c>
   1251c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12520:	movw	r1, #15348	; 0x3bf4
   12524:	movt	r1, #1
   12528:	cmp	r0, r1
   1252c:	bne	12554 <__assert_fail@plt+0xd7c>
   12530:	movw	r0, #10098	; 0x2772
   12534:	movt	r0, #2
   12538:	bl	1161c <gettext@plt>
   1253c:	movw	lr, #0
   12540:	str	r0, [sp, #204]	; 0xcc
   12544:	mov	r0, lr
   12548:	mov	r1, lr
   1254c:	ldr	r2, [sp, #204]	; 0xcc
   12550:	bl	1158c <error@plt>
   12554:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12558:	blx	r0
   1255c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12560:	movw	lr, #0
   12564:	cmp	lr, r0
   12568:	bne	12570 <__assert_fail@plt+0xd98>
   1256c:	b	12590 <__assert_fail@plt+0xdb8>
   12570:	movw	r0, #10157	; 0x27ad
   12574:	movt	r0, #2
   12578:	movw	r1, #9761	; 0x2621
   1257c:	movt	r1, #2
   12580:	movw	r2, #723	; 0x2d3
   12584:	movw	r3, #9769	; 0x2629
   12588:	movt	r3, #2
   1258c:	bl	117d8 <__assert_fail@plt>
   12590:	movw	r0, #18056	; 0x4688
   12594:	movt	r0, #1
   12598:	str	r0, [fp, #-204]	; 0xffffff34
   1259c:	sub	r0, fp, #204	; 0xcc
   125a0:	add	r0, r0, #4
   125a4:	bl	1170c <sigemptyset@plt>
   125a8:	movw	lr, #0
   125ac:	str	lr, [fp, #-72]	; 0xffffffb8
   125b0:	movw	r1, #10
   125b4:	str	r0, [sp, #200]	; 0xc8
   125b8:	mov	r0, r1
   125bc:	sub	r1, fp, #204	; 0xcc
   125c0:	mov	r2, lr
   125c4:	bl	11538 <sigaction@plt>
   125c8:	movw	r1, #0
   125cc:	cmp	r1, r0
   125d0:	beq	12604 <__assert_fail@plt+0xe2c>
   125d4:	bl	11664 <__errno_location@plt>
   125d8:	ldr	r1, [r0]
   125dc:	movw	r0, #10180	; 0x27c4
   125e0:	movt	r0, #2
   125e4:	str	r1, [sp, #196]	; 0xc4
   125e8:	bl	1161c <gettext@plt>
   125ec:	movw	r1, #0
   125f0:	str	r0, [sp, #192]	; 0xc0
   125f4:	mov	r0, r1
   125f8:	ldr	r1, [sp, #196]	; 0xc4
   125fc:	ldr	r2, [sp, #192]	; 0xc0
   12600:	bl	1158c <error@plt>
   12604:	movw	r0, #18136	; 0x46d8
   12608:	movt	r0, #1
   1260c:	str	r0, [fp, #-204]	; 0xffffff34
   12610:	sub	r0, fp, #204	; 0xcc
   12614:	add	r0, r0, #4
   12618:	bl	1170c <sigemptyset@plt>
   1261c:	movw	lr, #0
   12620:	str	lr, [fp, #-72]	; 0xffffffb8
   12624:	movw	r1, #12
   12628:	str	r0, [sp, #188]	; 0xbc
   1262c:	mov	r0, r1
   12630:	sub	r1, fp, #204	; 0xcc
   12634:	mov	r2, lr
   12638:	bl	11538 <sigaction@plt>
   1263c:	movw	r1, #0
   12640:	cmp	r1, r0
   12644:	beq	12678 <__assert_fail@plt+0xea0>
   12648:	bl	11664 <__errno_location@plt>
   1264c:	ldr	r1, [r0]
   12650:	movw	r0, #10214	; 0x27e6
   12654:	movt	r0, #2
   12658:	str	r1, [sp, #184]	; 0xb8
   1265c:	bl	1161c <gettext@plt>
   12660:	movw	r1, #0
   12664:	str	r0, [sp, #180]	; 0xb4
   12668:	mov	r0, r1
   1266c:	ldr	r1, [sp, #184]	; 0xb8
   12670:	ldr	r2, [sp, #180]	; 0xb4
   12674:	bl	1158c <error@plt>
   12678:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1267c:	movw	r1, #17947	; 0x461b
   12680:	movt	r1, #2
   12684:	bl	11430 <strcmp@plt>
   12688:	movw	r1, #0
   1268c:	cmp	r1, r0
   12690:	bne	126b0 <__assert_fail@plt+0xed8>
   12694:	movw	r0, #20952	; 0x51d8
   12698:	movt	r0, #3
   1269c:	ldr	r0, [r0]
   126a0:	movw	r1, #21036	; 0x522c
   126a4:	movt	r1, #3
   126a8:	str	r0, [r1]
   126ac:	b	12734 <__assert_fail@plt+0xf5c>
   126b0:	movw	r0, #21040	; 0x5230
   126b4:	movt	r0, #3
   126b8:	movw	r1, #1
   126bc:	str	r1, [r0]
   126c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   126c4:	bl	14714 <__assert_fail@plt+0x2f3c>
   126c8:	movw	r1, #21036	; 0x522c
   126cc:	movt	r1, #3
   126d0:	str	r0, [r1]
   126d4:	ldr	r0, [r1]
   126d8:	movw	r1, #0
   126dc:	cmp	r1, r0
   126e0:	bne	12730 <__assert_fail@plt+0xf58>
   126e4:	bl	11664 <__errno_location@plt>
   126e8:	ldr	r1, [r0]
   126ec:	movw	r0, #10248	; 0x2808
   126f0:	movt	r0, #2
   126f4:	str	r1, [sp, #176]	; 0xb0
   126f8:	bl	1161c <gettext@plt>
   126fc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12700:	movw	r1, #0
   12704:	str	r0, [sp, #172]	; 0xac
   12708:	mov	r0, r1
   1270c:	movw	r1, #8
   12710:	bl	1b004 <__assert_fail@plt+0x982c>
   12714:	movw	r1, #1
   12718:	str	r0, [sp, #168]	; 0xa8
   1271c:	mov	r0, r1
   12720:	ldr	r1, [sp, #176]	; 0xb0
   12724:	ldr	r2, [sp, #172]	; 0xac
   12728:	ldr	r3, [sp, #168]	; 0xa8
   1272c:	bl	1158c <error@plt>
   12730:	b	12734 <__assert_fail@plt+0xf5c>
   12734:	movw	r0, #20976	; 0x51f0
   12738:	movt	r0, #3
   1273c:	ldr	r0, [r0, #24]
   12740:	movw	r1, #0
   12744:	cmp	r0, r1
   12748:	bne	12760 <__assert_fail@plt+0xf88>
   1274c:	movw	r0, #20976	; 0x51f0
   12750:	movt	r0, #3
   12754:	ldr	r0, [r0, #36]	; 0x24
   12758:	cmp	r0, #0
   1275c:	beq	12770 <__assert_fail@plt+0xf98>
   12760:	movw	r0, #20976	; 0x51f0
   12764:	movt	r0, #3
   12768:	movw	r1, #1
   1276c:	str	r1, [r0]
   12770:	movw	r0, #20936	; 0x51c8
   12774:	movt	r0, #3
   12778:	ldr	r0, [r0]
   1277c:	ldr	r1, [fp, #-16]
   12780:	cmp	r0, r1
   12784:	bne	127b0 <__assert_fail@plt+0xfd8>
   12788:	sub	r0, fp, #52	; 0x34
   1278c:	sub	r1, fp, #45	; 0x2d
   12790:	movw	r2, #20936	; 0x51c8
   12794:	movt	r2, #3
   12798:	movw	r3, #0
   1279c:	str	r3, [r2]
   127a0:	movw	r2, #1
   127a4:	str	r2, [fp, #-16]
   127a8:	str	r1, [fp, #-52]	; 0xffffffcc
   127ac:	str	r0, [fp, #-20]	; 0xffffffec
   127b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   127b4:	cmp	r0, #0
   127b8:	beq	12a1c <__assert_fail@plt+0x1244>
   127bc:	movw	r0, #20944	; 0x51d0
   127c0:	movt	r0, #3
   127c4:	ldr	r1, [r0]
   127c8:	movw	r2, #10274	; 0x2822
   127cc:	movt	r2, #2
   127d0:	str	r0, [sp, #164]	; 0xa4
   127d4:	mov	r0, r2
   127d8:	str	r1, [sp, #160]	; 0xa0
   127dc:	bl	1161c <gettext@plt>
   127e0:	str	r0, [sp, #156]	; 0x9c
   127e4:	bl	16188 <__assert_fail@plt+0x49b0>
   127e8:	mov	r1, #0
   127ec:	ldr	r2, [sp, #160]	; 0xa0
   127f0:	str	r0, [sp, #152]	; 0x98
   127f4:	mov	r0, r2
   127f8:	ldr	lr, [sp, #156]	; 0x9c
   127fc:	str	r1, [sp, #148]	; 0x94
   12800:	mov	r1, lr
   12804:	ldr	r2, [sp, #152]	; 0x98
   12808:	ldr	r3, [sp, #148]	; 0x94
   1280c:	bl	11658 <fprintf@plt>
   12810:	ldr	r1, [sp, #164]	; 0xa4
   12814:	ldr	r2, [r1]
   12818:	movw	r3, #10321	; 0x2851
   1281c:	movt	r3, #2
   12820:	str	r0, [sp, #144]	; 0x90
   12824:	mov	r0, r3
   12828:	str	r2, [sp, #140]	; 0x8c
   1282c:	bl	1161c <gettext@plt>
   12830:	movw	r1, #20976	; 0x51f0
   12834:	movt	r1, #3
   12838:	ldr	r2, [r1, #4]
   1283c:	ldr	r3, [sp, #140]	; 0x8c
   12840:	str	r0, [sp, #136]	; 0x88
   12844:	mov	r0, r3
   12848:	ldr	lr, [sp, #136]	; 0x88
   1284c:	str	r1, [sp, #132]	; 0x84
   12850:	mov	r1, lr
   12854:	ldr	r3, [sp, #148]	; 0x94
   12858:	bl	11658 <fprintf@plt>
   1285c:	ldr	r1, [sp, #164]	; 0xa4
   12860:	ldr	r2, [r1]
   12864:	movw	r3, #10379	; 0x288b
   12868:	movt	r3, #2
   1286c:	str	r0, [sp, #128]	; 0x80
   12870:	mov	r0, r3
   12874:	str	r2, [sp, #124]	; 0x7c
   12878:	bl	1161c <gettext@plt>
   1287c:	ldr	r1, [sp, #132]	; 0x84
   12880:	ldr	r2, [r1, #8]
   12884:	ldr	r3, [sp, #124]	; 0x7c
   12888:	str	r0, [sp, #120]	; 0x78
   1288c:	mov	r0, r3
   12890:	ldr	r1, [sp, #120]	; 0x78
   12894:	ldr	r3, [sp, #148]	; 0x94
   12898:	bl	11658 <fprintf@plt>
   1289c:	ldr	r1, [sp, #164]	; 0xa4
   128a0:	ldr	r2, [r1]
   128a4:	movw	r3, #10456	; 0x28d8
   128a8:	movt	r3, #2
   128ac:	str	r0, [sp, #116]	; 0x74
   128b0:	mov	r0, r3
   128b4:	str	r2, [sp, #112]	; 0x70
   128b8:	bl	1161c <gettext@plt>
   128bc:	ldr	r1, [sp, #132]	; 0x84
   128c0:	ldr	r2, [r1, #4]
   128c4:	str	r0, [sp, #108]	; 0x6c
   128c8:	str	r2, [sp, #104]	; 0x68
   128cc:	bl	16188 <__assert_fail@plt+0x49b0>
   128d0:	ldr	r1, [sp, #104]	; 0x68
   128d4:	sub	r2, r1, r0
   128d8:	ldr	r0, [sp, #112]	; 0x70
   128dc:	ldr	r1, [sp, #108]	; 0x6c
   128e0:	ldr	r3, [sp, #148]	; 0x94
   128e4:	bl	11658 <fprintf@plt>
   128e8:	ldr	r1, [sp, #164]	; 0xa4
   128ec:	ldr	r2, [r1]
   128f0:	movw	r3, #10511	; 0x290f
   128f4:	movt	r3, #2
   128f8:	str	r0, [sp, #100]	; 0x64
   128fc:	mov	r0, r3
   12900:	str	r2, [sp, #96]	; 0x60
   12904:	bl	1161c <gettext@plt>
   12908:	ldr	r1, [sp, #132]	; 0x84
   1290c:	ldr	r2, [r1, #12]
   12910:	ldr	r3, [sp, #96]	; 0x60
   12914:	str	r0, [sp, #92]	; 0x5c
   12918:	mov	r0, r3
   1291c:	ldr	r1, [sp, #92]	; 0x5c
   12920:	ldr	r3, [sp, #148]	; 0x94
   12924:	bl	11658 <fprintf@plt>
   12928:	movw	r1, #20944	; 0x51d0
   1292c:	movt	r1, #3
   12930:	ldr	r1, [r1]
   12934:	movw	r2, #10563	; 0x2943
   12938:	movt	r2, #2
   1293c:	str	r0, [sp, #88]	; 0x58
   12940:	mov	r0, r2
   12944:	str	r1, [sp, #84]	; 0x54
   12948:	bl	1161c <gettext@plt>
   1294c:	mvn	r2, #-2147483648	; 0x80000000
   12950:	mov	r3, #0
   12954:	ldr	r1, [sp, #84]	; 0x54
   12958:	str	r0, [sp, #80]	; 0x50
   1295c:	mov	r0, r1
   12960:	ldr	r1, [sp, #80]	; 0x50
   12964:	bl	11658 <fprintf@plt>
   12968:	movw	r1, #0
   1296c:	str	r0, [sp, #76]	; 0x4c
   12970:	mov	r0, r1
   12974:	bl	11778 <isatty@plt>
   12978:	cmp	r0, #0
   1297c:	beq	12a18 <__assert_fail@plt+0x1240>
   12980:	movw	r0, #20944	; 0x51d0
   12984:	movt	r0, #3
   12988:	ldr	r0, [r0]
   1298c:	movw	r1, #10623	; 0x297f
   12990:	movt	r1, #2
   12994:	str	r0, [sp, #72]	; 0x48
   12998:	mov	r0, r1
   1299c:	bl	1161c <gettext@plt>
   129a0:	ldr	r1, [sp, #72]	; 0x48
   129a4:	str	r0, [sp, #68]	; 0x44
   129a8:	mov	r0, r1
   129ac:	ldr	r1, [sp, #68]	; 0x44
   129b0:	bl	11658 <fprintf@plt>
   129b4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   129b8:	cmp	r1, #0
   129bc:	str	r0, [sp, #64]	; 0x40
   129c0:	beq	12a14 <__assert_fail@plt+0x123c>
   129c4:	movw	r0, #20944	; 0x51d0
   129c8:	movt	r0, #3
   129cc:	ldr	r0, [r0]
   129d0:	movw	r1, #10796	; 0x2a2c
   129d4:	movt	r1, #2
   129d8:	str	r0, [sp, #60]	; 0x3c
   129dc:	mov	r0, r1
   129e0:	bl	1161c <gettext@plt>
   129e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   129e8:	movw	lr, #20936	; 0x51c8
   129ec:	movt	lr, #3
   129f0:	ldr	lr, [lr]
   129f4:	add	r1, r1, lr, lsl #2
   129f8:	ldr	r2, [r1]
   129fc:	ldr	r1, [sp, #60]	; 0x3c
   12a00:	str	r0, [sp, #56]	; 0x38
   12a04:	mov	r0, r1
   12a08:	ldr	r1, [sp, #56]	; 0x38
   12a0c:	bl	11658 <fprintf@plt>
   12a10:	str	r0, [sp, #52]	; 0x34
   12a14:	b	12a18 <__assert_fail@plt+0x1240>
   12a18:	b	12a1c <__assert_fail@plt+0x1244>
   12a1c:	movw	r0, #20976	; 0x51f0
   12a20:	movt	r0, #3
   12a24:	ldr	r0, [r0, #12]
   12a28:	add	r0, r0, #1
   12a2c:	bl	1c12c <__assert_fail@plt+0xa954>
   12a30:	movw	lr, #21044	; 0x5234
   12a34:	movt	lr, #3
   12a38:	str	r0, [lr]
   12a3c:	movw	r0, #20976	; 0x51f0
   12a40:	movt	r0, #3
   12a44:	ldr	r0, [r0, #12]
   12a48:	add	r0, r0, #1
   12a4c:	bl	1c12c <__assert_fail@plt+0xa954>
   12a50:	movw	lr, #21048	; 0x5238
   12a54:	movt	lr, #3
   12a58:	str	r0, [lr, #12]
   12a5c:	movw	r0, #17
   12a60:	movw	r1, #0
   12a64:	bl	114c0 <signal@plt>
   12a68:	movw	r1, #20976	; 0x51f0
   12a6c:	movt	r1, #3
   12a70:	ldr	r1, [r1, #24]
   12a74:	movw	lr, #0
   12a78:	cmp	r1, lr
   12a7c:	str	r0, [sp, #48]	; 0x30
   12a80:	bne	12c20 <__assert_fail@plt+0x1448>
   12a84:	b	12a88 <__assert_fail@plt+0x12b0>
   12a88:	movw	r0, #20936	; 0x51c8
   12a8c:	movt	r0, #3
   12a90:	ldr	r0, [r0]
   12a94:	ldr	r1, [fp, #-16]
   12a98:	cmp	r0, r1
   12a9c:	bge	12b20 <__assert_fail@plt+0x1348>
   12aa0:	ldr	r0, [fp, #-20]	; 0xffffffec
   12aa4:	movw	r1, #20936	; 0x51c8
   12aa8:	movt	r1, #3
   12aac:	ldr	r1, [r1]
   12ab0:	ldr	r2, [r0, r1, lsl #2]!
   12ab4:	ldr	r0, [r0]
   12ab8:	str	r2, [sp, #44]	; 0x2c
   12abc:	bl	11634 <strlen@plt>
   12ac0:	add	r3, r0, #1
   12ac4:	movw	r0, #20836	; 0x5164
   12ac8:	movt	r0, #3
   12acc:	ldrb	r0, [r0]
   12ad0:	and	r0, r0, #1
   12ad4:	movw	r1, #20976	; 0x51f0
   12ad8:	movt	r1, #3
   12adc:	str	r0, [sp, #40]	; 0x28
   12ae0:	mov	r0, r1
   12ae4:	movw	r1, #21048	; 0x5238
   12ae8:	movt	r1, #3
   12aec:	ldr	r2, [sp, #44]	; 0x2c
   12af0:	movw	lr, #0
   12af4:	str	lr, [sp]
   12af8:	str	lr, [sp, #4]
   12afc:	ldr	lr, [sp, #40]	; 0x28
   12b00:	str	lr, [sp, #8]
   12b04:	bl	15784 <__assert_fail@plt+0x3fac>
   12b08:	movw	r0, #20936	; 0x51c8
   12b0c:	movt	r0, #3
   12b10:	ldr	r1, [r0]
   12b14:	add	r1, r1, #1
   12b18:	str	r1, [r0]
   12b1c:	b	12a88 <__assert_fail@plt+0x12b0>
   12b20:	movw	r0, #20836	; 0x5164
   12b24:	movt	r0, #3
   12b28:	movw	r1, #0
   12b2c:	strb	r1, [r0]
   12b30:	movw	r0, #21048	; 0x5238
   12b34:	movt	r0, #3
   12b38:	ldr	r1, [r0]
   12b3c:	movw	r2, #20976	; 0x51f0
   12b40:	movt	r2, #3
   12b44:	str	r1, [r2, #28]
   12b48:	ldr	r1, [r0, #16]
   12b4c:	str	r1, [r0, #20]
   12b50:	ldr	r0, [r0]
   12b54:	str	r0, [r2, #28]
   12b58:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12b5c:	blx	r0
   12b60:	cmn	r0, #1
   12b64:	beq	12bc4 <__assert_fail@plt+0x13ec>
   12b68:	movw	r0, #20976	; 0x51f0
   12b6c:	movt	r0, #3
   12b70:	ldr	r0, [r0, #36]	; 0x24
   12b74:	cmp	r0, #0
   12b78:	beq	12bc0 <__assert_fail@plt+0x13e8>
   12b7c:	movw	r0, #21092	; 0x5264
   12b80:	movt	r0, #3
   12b84:	ldr	r0, [r0]
   12b88:	movw	r1, #20976	; 0x51f0
   12b8c:	movt	r1, #3
   12b90:	ldr	r1, [r1, #36]	; 0x24
   12b94:	cmp	r0, r1
   12b98:	bcc	12bc0 <__assert_fail@plt+0x13e8>
   12b9c:	movw	r0, #20976	; 0x51f0
   12ba0:	movt	r0, #3
   12ba4:	movw	r1, #21048	; 0x5238
   12ba8:	movt	r1, #3
   12bac:	bl	15af8 <__assert_fail@plt+0x4320>
   12bb0:	movw	r0, #21092	; 0x5264
   12bb4:	movt	r0, #3
   12bb8:	movw	r1, #0
   12bbc:	str	r1, [r0]
   12bc0:	b	12b58 <__assert_fail@plt+0x1380>
   12bc4:	movw	r0, #21048	; 0x5238
   12bc8:	movt	r0, #3
   12bcc:	ldr	r0, [r0]
   12bd0:	movw	r1, #20976	; 0x51f0
   12bd4:	movt	r1, #3
   12bd8:	ldr	r1, [r1, #28]
   12bdc:	cmp	r0, r1
   12be0:	bne	12c08 <__assert_fail@plt+0x1430>
   12be4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12be8:	cmp	r0, #0
   12bec:	beq	12c1c <__assert_fail@plt+0x1444>
   12bf0:	movw	r0, #21096	; 0x5268
   12bf4:	movt	r0, #3
   12bf8:	ldrb	r0, [r0]
   12bfc:	and	r0, r0, #1
   12c00:	cmp	r0, #0
   12c04:	bne	12c1c <__assert_fail@plt+0x1444>
   12c08:	movw	r0, #20976	; 0x51f0
   12c0c:	movt	r0, #3
   12c10:	movw	r1, #21048	; 0x5238
   12c14:	movt	r1, #3
   12c18:	bl	15af8 <__assert_fail@plt+0x4320>
   12c1c:	b	12e30 <__assert_fail@plt+0x1658>
   12c20:	ldr	r0, [fp, #-16]
   12c24:	lsl	r0, r0, #2
   12c28:	bl	1c12c <__assert_fail@plt+0xa954>
   12c2c:	str	r0, [fp, #-224]	; 0xffffff20
   12c30:	movw	r0, #20936	; 0x51c8
   12c34:	movt	r0, #3
   12c38:	ldr	r0, [r0]
   12c3c:	str	r0, [fp, #-216]	; 0xffffff28
   12c40:	ldr	r0, [fp, #-216]	; 0xffffff28
   12c44:	ldr	r1, [fp, #-16]
   12c48:	cmp	r0, r1
   12c4c:	bge	12c80 <__assert_fail@plt+0x14a8>
   12c50:	ldr	r0, [fp, #-20]	; 0xffffffec
   12c54:	ldr	r1, [fp, #-216]	; 0xffffff28
   12c58:	ldr	r0, [r0, r1, lsl #2]
   12c5c:	bl	11634 <strlen@plt>
   12c60:	ldr	r1, [fp, #-224]	; 0xffffff20
   12c64:	ldr	lr, [fp, #-216]	; 0xffffff28
   12c68:	add	r1, r1, lr, lsl #2
   12c6c:	str	r0, [r1]
   12c70:	ldr	r0, [fp, #-216]	; 0xffffff28
   12c74:	add	r0, r0, #1
   12c78:	str	r0, [fp, #-216]	; 0xffffff28
   12c7c:	b	12c40 <__assert_fail@plt+0x1468>
   12c80:	movw	r0, #20976	; 0x51f0
   12c84:	movt	r0, #3
   12c88:	ldr	r1, [r0, #24]
   12c8c:	str	r0, [sp, #36]	; 0x24
   12c90:	mov	r0, r1
   12c94:	bl	11634 <strlen@plt>
   12c98:	ldr	r1, [sp, #36]	; 0x24
   12c9c:	str	r0, [r1, #20]
   12ca0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12ca4:	blx	r0
   12ca8:	str	r0, [fp, #-220]	; 0xffffff24
   12cac:	cmn	r0, #1
   12cb0:	beq	12e2c <__assert_fail@plt+0x1654>
   12cb4:	ldr	r0, [fp, #-220]	; 0xffffff24
   12cb8:	str	r0, [fp, #-228]	; 0xffffff1c
   12cbc:	movw	r0, #20976	; 0x51f0
   12cc0:	movt	r0, #3
   12cc4:	movw	r1, #21048	; 0x5238
   12cc8:	movt	r1, #3
   12ccc:	str	r1, [sp, #32]
   12cd0:	bl	16068 <__assert_fail@plt+0x4890>
   12cd4:	mov	r0, #0
   12cd8:	ldr	r1, [sp, #32]
   12cdc:	str	r0, [r1, #16]
   12ce0:	ldr	r0, [fp, #-20]	; 0xffffffec
   12ce4:	movw	lr, #20936	; 0x51c8
   12ce8:	movt	lr, #3
   12cec:	ldr	lr, [lr]
   12cf0:	ldr	r2, [r0, lr, lsl #2]
   12cf4:	ldr	r0, [fp, #-224]	; 0xffffff20
   12cf8:	add	r0, r0, lr, lsl #2
   12cfc:	ldr	r0, [r0]
   12d00:	add	r3, r0, #1
   12d04:	movw	r0, #20836	; 0x5164
   12d08:	movt	r0, #3
   12d0c:	ldrb	r0, [r0]
   12d10:	and	r0, r0, #1
   12d14:	movw	lr, #20976	; 0x51f0
   12d18:	movt	lr, #3
   12d1c:	str	r0, [sp, #28]
   12d20:	mov	r0, lr
   12d24:	movw	r1, #21048	; 0x5238
   12d28:	movt	r1, #3
   12d2c:	movw	lr, #0
   12d30:	str	lr, [sp]
   12d34:	str	lr, [sp, #4]
   12d38:	ldr	lr, [sp, #28]
   12d3c:	str	lr, [sp, #8]
   12d40:	bl	15784 <__assert_fail@plt+0x3fac>
   12d44:	ldr	r0, [fp, #-228]	; 0xffffff1c
   12d48:	mvn	r1, #0
   12d4c:	add	r0, r0, r1
   12d50:	str	r0, [fp, #-228]	; 0xffffff1c
   12d54:	movw	r0, #20836	; 0x5164
   12d58:	movt	r0, #3
   12d5c:	movw	r1, #0
   12d60:	strb	r1, [r0]
   12d64:	movw	r0, #20936	; 0x51c8
   12d68:	movt	r0, #3
   12d6c:	ldr	r0, [r0]
   12d70:	add	r0, r0, #1
   12d74:	str	r0, [fp, #-216]	; 0xffffff28
   12d78:	ldr	r0, [fp, #-216]	; 0xffffff28
   12d7c:	ldr	r1, [fp, #-16]
   12d80:	cmp	r0, r1
   12d84:	bge	12e14 <__assert_fail@plt+0x163c>
   12d88:	ldr	r0, [fp, #-20]	; 0xffffffec
   12d8c:	ldr	r1, [fp, #-216]	; 0xffffff28
   12d90:	ldr	r2, [r0, r1, lsl #2]
   12d94:	ldr	r0, [fp, #-224]	; 0xffffff20
   12d98:	add	r0, r0, r1, lsl #2
   12d9c:	ldr	r3, [r0]
   12da0:	movw	r0, #21044	; 0x5234
   12da4:	movt	r0, #3
   12da8:	ldr	r0, [r0]
   12dac:	ldr	r1, [fp, #-228]	; 0xffffff1c
   12db0:	movw	ip, #20836	; 0x5164
   12db4:	movt	ip, #3
   12db8:	ldrb	ip, [ip]
   12dbc:	and	ip, ip, #1
   12dc0:	movw	lr, #20976	; 0x51f0
   12dc4:	movt	lr, #3
   12dc8:	str	r0, [sp, #24]
   12dcc:	mov	r0, lr
   12dd0:	movw	lr, #21048	; 0x5238
   12dd4:	movt	lr, #3
   12dd8:	str	r1, [sp, #20]
   12ddc:	mov	r1, lr
   12de0:	movw	lr, #0
   12de4:	str	lr, [sp]
   12de8:	str	lr, [sp, #4]
   12dec:	ldr	lr, [sp, #24]
   12df0:	str	lr, [sp, #8]
   12df4:	ldr	r4, [sp, #20]
   12df8:	str	r4, [sp, #12]
   12dfc:	str	ip, [sp, #16]
   12e00:	bl	154e0 <__assert_fail@plt+0x3d08>
   12e04:	ldr	r0, [fp, #-216]	; 0xffffff28
   12e08:	add	r0, r0, #1
   12e0c:	str	r0, [fp, #-216]	; 0xffffff28
   12e10:	b	12d78 <__assert_fail@plt+0x15a0>
   12e14:	movw	r0, #20976	; 0x51f0
   12e18:	movt	r0, #3
   12e1c:	movw	r1, #21048	; 0x5238
   12e20:	movt	r1, #3
   12e24:	bl	15af8 <__assert_fail@plt+0x4320>
   12e28:	b	12ca0 <__assert_fail@plt+0x14c8>
   12e2c:	b	12e30 <__assert_fail@plt+0x1658>
   12e30:	movw	r0, #21100	; 0x526c
   12e34:	movt	r0, #3
   12e38:	ldr	r1, [r0]
   12e3c:	movw	r2, #20972	; 0x51ec
   12e40:	movt	r2, #3
   12e44:	str	r1, [r2]
   12e48:	ldr	r0, [r0]
   12e4c:	str	r0, [fp, #-12]
   12e50:	ldr	r0, [fp, #-12]
   12e54:	sub	sp, fp, #8
   12e58:	pop	{r4, sl, fp, pc}
   12e5c:	svcvc	0x00ffffff
   12e60:	push	{fp, lr}
   12e64:	mov	fp, sp
   12e68:	sub	sp, sp, #112	; 0x70
   12e6c:	movw	r0, #1
   12e70:	str	r0, [fp, #-8]
   12e74:	movw	r0, #0
   12e78:	str	r0, [fp, #-16]
   12e7c:	mvn	r1, #0
   12e80:	str	r1, [fp, #-20]	; 0xffffffec
   12e84:	movw	r2, #1
   12e88:	strb	r2, [fp, #-21]	; 0xffffffeb
   12e8c:	movw	r2, #0
   12e90:	strb	r2, [fp, #-22]	; 0xffffffea
   12e94:	movw	r2, #21044	; 0x5234
   12e98:	movt	r2, #3
   12e9c:	ldr	r3, [r2]
   12ea0:	str	r3, [fp, #-32]	; 0xffffffe0
   12ea4:	ldr	r2, [r2]
   12ea8:	movw	r3, #20976	; 0x51f0
   12eac:	movt	r3, #3
   12eb0:	ldr	r3, [r3, #12]
   12eb4:	add	r2, r2, r3
   12eb8:	movw	r3, #21048	; 0x5238
   12ebc:	movt	r3, #3
   12ec0:	ldr	r3, [r3, #20]
   12ec4:	sub	r0, r0, r3
   12ec8:	add	r0, r2, r0
   12ecc:	add	r0, r0, r1
   12ed0:	str	r0, [fp, #-36]	; 0xffffffdc
   12ed4:	movw	r0, #21104	; 0x5270
   12ed8:	movt	r0, #3
   12edc:	ldrb	r0, [r0]
   12ee0:	tst	r0, #1
   12ee4:	beq	12ef4 <__assert_fail@plt+0x171c>
   12ee8:	mvn	r0, #0
   12eec:	str	r0, [fp, #-4]
   12ef0:	b	13680 <__assert_fail@plt+0x1ea8>
   12ef4:	b	12ef8 <__assert_fail@plt+0x1720>
   12ef8:	ldr	r0, [fp, #-20]	; 0xffffffec
   12efc:	str	r0, [fp, #-12]
   12f00:	movw	r0, #21036	; 0x522c
   12f04:	movt	r0, #3
   12f08:	ldr	r0, [r0]
   12f0c:	bl	117b4 <getc@plt>
   12f10:	str	r0, [fp, #-20]	; 0xffffffec
   12f14:	ldr	r0, [fp, #-20]	; 0xffffffec
   12f18:	cmn	r0, #1
   12f1c:	bne	130e0 <__assert_fail@plt+0x1908>
   12f20:	movw	r0, #21104	; 0x5270
   12f24:	movt	r0, #3
   12f28:	movw	r1, #1
   12f2c:	strb	r1, [r0]
   12f30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12f34:	movw	r1, #21044	; 0x5234
   12f38:	movt	r1, #3
   12f3c:	ldr	r1, [r1]
   12f40:	cmp	r0, r1
   12f44:	bne	12f54 <__assert_fail@plt+0x177c>
   12f48:	mvn	r0, #0
   12f4c:	str	r0, [fp, #-4]
   12f50:	b	13680 <__assert_fail@plt+0x1ea8>
   12f54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12f58:	add	r1, r0, #1
   12f5c:	str	r1, [fp, #-32]	; 0xffffffe0
   12f60:	movw	r1, #0
   12f64:	strb	r1, [r0]
   12f68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12f6c:	movw	r1, #21044	; 0x5234
   12f70:	movt	r1, #3
   12f74:	ldr	r1, [r1]
   12f78:	sub	r0, r0, r1
   12f7c:	str	r0, [fp, #-28]	; 0xffffffe4
   12f80:	ldr	r0, [fp, #-8]
   12f84:	cmp	r0, #2
   12f88:	bne	12ff0 <__assert_fail@plt+0x1818>
   12f8c:	bl	149c8 <__assert_fail@plt+0x31f0>
   12f90:	movw	r0, #11702	; 0x2db6
   12f94:	movt	r0, #2
   12f98:	bl	1161c <gettext@plt>
   12f9c:	ldr	lr, [fp, #-16]
   12fa0:	cmp	lr, #34	; 0x22
   12fa4:	str	r0, [fp, #-40]	; 0xffffffd8
   12fa8:	bne	12fc0 <__assert_fail@plt+0x17e8>
   12fac:	movw	r0, #11790	; 0x2e0e
   12fb0:	movt	r0, #2
   12fb4:	bl	1161c <gettext@plt>
   12fb8:	str	r0, [fp, #-44]	; 0xffffffd4
   12fbc:	b	12fd0 <__assert_fail@plt+0x17f8>
   12fc0:	movw	r0, #11797	; 0x2e15
   12fc4:	movt	r0, #2
   12fc8:	bl	1161c <gettext@plt>
   12fcc:	str	r0, [fp, #-44]	; 0xffffffd4
   12fd0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12fd4:	movw	r1, #1
   12fd8:	str	r0, [fp, #-48]	; 0xffffffd0
   12fdc:	mov	r0, r1
   12fe0:	movw	r1, #0
   12fe4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12fe8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12fec:	bl	1158c <error@plt>
   12ff0:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   12ff4:	tst	r0, #1
   12ff8:	beq	1306c <__assert_fail@plt+0x1894>
   12ffc:	movw	r0, #21024	; 0x5220
   13000:	movt	r0, #3
   13004:	ldr	r0, [r0]
   13008:	movw	r1, #0
   1300c:	cmp	r0, r1
   13010:	beq	1306c <__assert_fail@plt+0x1894>
   13014:	movw	r0, #21024	; 0x5220
   13018:	movt	r0, #3
   1301c:	ldr	r0, [r0]
   13020:	ldrb	r0, [r0]
   13024:	movw	r1, #21044	; 0x5234
   13028:	movt	r1, #3
   1302c:	ldr	r1, [r1]
   13030:	ldrb	r1, [r1]
   13034:	cmp	r0, r1
   13038:	bne	1306c <__assert_fail@plt+0x1894>
   1303c:	movw	r0, #21024	; 0x5220
   13040:	movt	r0, #3
   13044:	ldr	r0, [r0]
   13048:	movw	r1, #21044	; 0x5234
   1304c:	movt	r1, #3
   13050:	ldr	r1, [r1]
   13054:	bl	11430 <strcmp@plt>
   13058:	cmp	r0, #0
   1305c:	bne	1306c <__assert_fail@plt+0x1894>
   13060:	mvn	r0, #0
   13064:	str	r0, [fp, #-4]
   13068:	b	13680 <__assert_fail@plt+0x1ea8>
   1306c:	movw	r0, #20976	; 0x51f0
   13070:	movt	r0, #3
   13074:	ldr	r0, [r0, #24]
   13078:	movw	r1, #0
   1307c:	cmp	r0, r1
   13080:	bne	130d4 <__assert_fail@plt+0x18fc>
   13084:	movw	r0, #21044	; 0x5234
   13088:	movt	r0, #3
   1308c:	ldr	r2, [r0]
   13090:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13094:	movw	r0, #20836	; 0x5164
   13098:	movt	r0, #3
   1309c:	ldrb	r0, [r0]
   130a0:	and	r0, r0, #1
   130a4:	movw	r1, #20976	; 0x51f0
   130a8:	movt	r1, #3
   130ac:	str	r0, [fp, #-52]	; 0xffffffcc
   130b0:	mov	r0, r1
   130b4:	movw	r1, #21048	; 0x5238
   130b8:	movt	r1, #3
   130bc:	movw	ip, #0
   130c0:	str	ip, [sp]
   130c4:	str	ip, [sp, #4]
   130c8:	ldr	ip, [fp, #-52]	; 0xffffffcc
   130cc:	str	ip, [sp, #8]
   130d0:	bl	15784 <__assert_fail@plt+0x3fac>
   130d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   130d8:	str	r0, [fp, #-4]
   130dc:	b	13680 <__assert_fail@plt+0x1ea8>
   130e0:	ldr	r0, [fp, #-8]
   130e4:	cmp	r0, #3
   130e8:	str	r0, [sp, #56]	; 0x38
   130ec:	bhi	135d8 <__assert_fail@plt+0x1e00>
   130f0:	add	r0, pc, #8
   130f4:	ldr	r1, [sp, #56]	; 0x38
   130f8:	ldr	r0, [r0, r1, lsl #2]
   130fc:	mov	pc, r0
   13100:	andeq	r3, r1, r0, lsl #3
   13104:	andeq	r3, r1, r0, lsl r1
   13108:	andeq	r3, r1, r8, lsr r5
   1310c:	ldrdeq	r3, [r1], -r0
   13110:	ldr	r0, [fp, #-20]	; 0xffffffec
   13114:	mvn	r1, #127	; 0x7f
   13118:	and	r0, r0, r1
   1311c:	cmp	r0, #0
   13120:	bne	13144 <__assert_fail@plt+0x196c>
   13124:	bl	115f8 <__ctype_b_loc@plt>
   13128:	ldr	r0, [r0]
   1312c:	ldr	lr, [fp, #-20]	; 0xffffffec
   13130:	add	r0, r0, lr, lsl #1
   13134:	ldrh	r0, [r0]
   13138:	and	r0, r0, #1
   1313c:	cmp	r0, #0
   13140:	bne	13174 <__assert_fail@plt+0x199c>
   13144:	ldr	r0, [fp, #-20]	; 0xffffffec
   13148:	cmp	r0, #10
   1314c:	beq	13174 <__assert_fail@plt+0x199c>
   13150:	ldr	r0, [fp, #-20]	; 0xffffffec
   13154:	cmp	r0, #13
   13158:	beq	13174 <__assert_fail@plt+0x199c>
   1315c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13160:	cmp	r0, #12
   13164:	beq	13174 <__assert_fail@plt+0x199c>
   13168:	ldr	r0, [fp, #-20]	; 0xffffffec
   1316c:	cmp	r0, #11
   13170:	bne	13178 <__assert_fail@plt+0x19a0>
   13174:	b	12ef8 <__assert_fail@plt+0x1720>
   13178:	movw	r0, #0
   1317c:	str	r0, [fp, #-8]
   13180:	ldr	r0, [fp, #-20]	; 0xffffffec
   13184:	cmp	r0, #10
   13188:	bne	1334c <__assert_fail@plt+0x1b74>
   1318c:	ldr	r0, [fp, #-12]
   13190:	mvn	r1, #127	; 0x7f
   13194:	and	r0, r0, r1
   13198:	cmp	r0, #0
   1319c:	bne	131c0 <__assert_fail@plt+0x19e8>
   131a0:	bl	115f8 <__ctype_b_loc@plt>
   131a4:	ldr	r0, [r0]
   131a8:	ldr	lr, [fp, #-12]
   131ac:	add	r0, r0, lr, lsl #1
   131b0:	ldrh	r0, [r0]
   131b4:	and	r0, r0, #1
   131b8:	cmp	r0, #0
   131bc:	bne	131d4 <__assert_fail@plt+0x19fc>
   131c0:	movw	r0, #21092	; 0x5264
   131c4:	movt	r0, #3
   131c8:	ldr	r1, [r0]
   131cc:	add	r1, r1, #1
   131d0:	str	r1, [r0]
   131d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   131d8:	movw	r1, #21044	; 0x5234
   131dc:	movt	r1, #3
   131e0:	ldr	r1, [r1]
   131e4:	cmp	r0, r1
   131e8:	bne	1320c <__assert_fail@plt+0x1a34>
   131ec:	ldrb	r0, [fp, #-22]	; 0xffffffea
   131f0:	tst	r0, #1
   131f4:	beq	131fc <__assert_fail@plt+0x1a24>
   131f8:	b	13208 <__assert_fail@plt+0x1a30>
   131fc:	movw	r0, #1
   13200:	str	r0, [fp, #-8]
   13204:	b	12ef8 <__assert_fail@plt+0x1720>
   13208:	b	1320c <__assert_fail@plt+0x1a34>
   1320c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13210:	add	r1, r0, #1
   13214:	str	r1, [fp, #-32]	; 0xffffffe0
   13218:	movw	r1, #0
   1321c:	strb	r1, [r0]
   13220:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13224:	movw	r1, #21044	; 0x5234
   13228:	movt	r1, #3
   1322c:	ldr	r1, [r1]
   13230:	sub	r0, r0, r1
   13234:	str	r0, [fp, #-28]	; 0xffffffe4
   13238:	movw	r0, #21024	; 0x5220
   1323c:	movt	r0, #3
   13240:	ldr	r0, [r0]
   13244:	movw	r1, #0
   13248:	cmp	r0, r1
   1324c:	beq	132d8 <__assert_fail@plt+0x1b00>
   13250:	movw	r0, #21024	; 0x5220
   13254:	movt	r0, #3
   13258:	ldr	r0, [r0]
   1325c:	ldrb	r0, [r0]
   13260:	movw	r1, #21044	; 0x5234
   13264:	movt	r1, #3
   13268:	ldr	r1, [r1]
   1326c:	ldrb	r1, [r1]
   13270:	cmp	r0, r1
   13274:	bne	132d8 <__assert_fail@plt+0x1b00>
   13278:	movw	r0, #21024	; 0x5220
   1327c:	movt	r0, #3
   13280:	ldr	r0, [r0]
   13284:	movw	r1, #21044	; 0x5234
   13288:	movt	r1, #3
   1328c:	ldr	r1, [r1]
   13290:	bl	11430 <strcmp@plt>
   13294:	cmp	r0, #0
   13298:	bne	132d8 <__assert_fail@plt+0x1b00>
   1329c:	movw	r0, #21104	; 0x5270
   132a0:	movt	r0, #3
   132a4:	movw	r1, #1
   132a8:	strb	r1, [r0]
   132ac:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   132b0:	tst	r0, #1
   132b4:	beq	132c4 <__assert_fail@plt+0x1aec>
   132b8:	mvn	r0, #0
   132bc:	str	r0, [sp, #52]	; 0x34
   132c0:	b	132cc <__assert_fail@plt+0x1af4>
   132c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   132c8:	str	r0, [sp, #52]	; 0x34
   132cc:	ldr	r0, [sp, #52]	; 0x34
   132d0:	str	r0, [fp, #-4]
   132d4:	b	13680 <__assert_fail@plt+0x1ea8>
   132d8:	movw	r0, #20976	; 0x51f0
   132dc:	movt	r0, #3
   132e0:	ldr	r0, [r0, #24]
   132e4:	movw	r1, #0
   132e8:	cmp	r0, r1
   132ec:	bne	13340 <__assert_fail@plt+0x1b68>
   132f0:	movw	r0, #21044	; 0x5234
   132f4:	movt	r0, #3
   132f8:	ldr	r2, [r0]
   132fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13300:	movw	r0, #20836	; 0x5164
   13304:	movt	r0, #3
   13308:	ldrb	r0, [r0]
   1330c:	and	r0, r0, #1
   13310:	movw	r1, #20976	; 0x51f0
   13314:	movt	r1, #3
   13318:	str	r0, [sp, #48]	; 0x30
   1331c:	mov	r0, r1
   13320:	movw	r1, #21048	; 0x5238
   13324:	movt	r1, #3
   13328:	movw	ip, #0
   1332c:	str	ip, [sp]
   13330:	str	ip, [sp, #4]
   13334:	ldr	ip, [sp, #48]	; 0x30
   13338:	str	ip, [sp, #8]
   1333c:	bl	15784 <__assert_fail@plt+0x3fac>
   13340:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13344:	str	r0, [fp, #-4]
   13348:	b	13680 <__assert_fail@plt+0x1ea8>
   1334c:	movw	r0, #1
   13350:	strb	r0, [fp, #-22]	; 0xffffffea
   13354:	movw	r0, #20976	; 0x51f0
   13358:	movt	r0, #3
   1335c:	ldr	r0, [r0, #24]
   13360:	movw	r1, #0
   13364:	cmp	r0, r1
   13368:	bne	134e0 <__assert_fail@plt+0x1d08>
   1336c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13370:	mvn	r1, #127	; 0x7f
   13374:	and	r0, r0, r1
   13378:	cmp	r0, #0
   1337c:	bne	134e0 <__assert_fail@plt+0x1d08>
   13380:	bl	115f8 <__ctype_b_loc@plt>
   13384:	ldr	r0, [r0]
   13388:	ldr	lr, [fp, #-20]	; 0xffffffec
   1338c:	add	r0, r0, lr, lsl #1
   13390:	ldrh	r0, [r0]
   13394:	and	r0, r0, #1
   13398:	cmp	r0, #0
   1339c:	beq	134e0 <__assert_fail@plt+0x1d08>
   133a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   133a4:	add	r1, r0, #1
   133a8:	str	r1, [fp, #-32]	; 0xffffffe0
   133ac:	movw	r1, #0
   133b0:	strb	r1, [r0]
   133b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   133b8:	movw	r1, #21044	; 0x5234
   133bc:	movt	r1, #3
   133c0:	ldr	r1, [r1]
   133c4:	sub	r0, r0, r1
   133c8:	str	r0, [fp, #-28]	; 0xffffffe4
   133cc:	movw	r0, #21024	; 0x5220
   133d0:	movt	r0, #3
   133d4:	ldr	r0, [r0]
   133d8:	movw	r1, #0
   133dc:	cmp	r0, r1
   133e0:	beq	1346c <__assert_fail@plt+0x1c94>
   133e4:	movw	r0, #21024	; 0x5220
   133e8:	movt	r0, #3
   133ec:	ldr	r0, [r0]
   133f0:	ldrb	r0, [r0]
   133f4:	movw	r1, #21044	; 0x5234
   133f8:	movt	r1, #3
   133fc:	ldr	r1, [r1]
   13400:	ldrb	r1, [r1]
   13404:	cmp	r0, r1
   13408:	bne	1346c <__assert_fail@plt+0x1c94>
   1340c:	movw	r0, #21024	; 0x5220
   13410:	movt	r0, #3
   13414:	ldr	r0, [r0]
   13418:	movw	r1, #21044	; 0x5234
   1341c:	movt	r1, #3
   13420:	ldr	r1, [r1]
   13424:	bl	11430 <strcmp@plt>
   13428:	cmp	r0, #0
   1342c:	bne	1346c <__assert_fail@plt+0x1c94>
   13430:	movw	r0, #21104	; 0x5270
   13434:	movt	r0, #3
   13438:	movw	r1, #1
   1343c:	strb	r1, [r0]
   13440:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   13444:	tst	r0, #1
   13448:	beq	13458 <__assert_fail@plt+0x1c80>
   1344c:	mvn	r0, #0
   13450:	str	r0, [sp, #44]	; 0x2c
   13454:	b	13460 <__assert_fail@plt+0x1c88>
   13458:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1345c:	str	r0, [sp, #44]	; 0x2c
   13460:	ldr	r0, [sp, #44]	; 0x2c
   13464:	str	r0, [fp, #-4]
   13468:	b	13680 <__assert_fail@plt+0x1ea8>
   1346c:	movw	r0, #21044	; 0x5234
   13470:	movt	r0, #3
   13474:	ldr	r2, [r0]
   13478:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1347c:	movw	r0, #20836	; 0x5164
   13480:	movt	r0, #3
   13484:	ldrb	r0, [r0]
   13488:	and	r0, r0, #1
   1348c:	movw	r1, #20976	; 0x51f0
   13490:	movt	r1, #3
   13494:	str	r0, [sp, #40]	; 0x28
   13498:	mov	r0, r1
   1349c:	movw	r1, #21048	; 0x5238
   134a0:	movt	r1, #3
   134a4:	movw	ip, #0
   134a8:	str	ip, [sp]
   134ac:	str	ip, [sp, #4]
   134b0:	ldr	ip, [sp, #40]	; 0x28
   134b4:	str	ip, [sp, #8]
   134b8:	bl	15784 <__assert_fail@plt+0x3fac>
   134bc:	movw	r0, #21044	; 0x5234
   134c0:	movt	r0, #3
   134c4:	ldr	r0, [r0]
   134c8:	str	r0, [fp, #-32]	; 0xffffffe0
   134cc:	movw	r0, #1
   134d0:	str	r0, [fp, #-8]
   134d4:	movw	r0, #0
   134d8:	strb	r0, [fp, #-21]	; 0xffffffeb
   134dc:	b	12ef8 <__assert_fail@plt+0x1720>
   134e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   134e4:	cmp	r0, #34	; 0x22
   134e8:	str	r0, [sp, #36]	; 0x24
   134ec:	beq	13520 <__assert_fail@plt+0x1d48>
   134f0:	b	134f4 <__assert_fail@plt+0x1d1c>
   134f4:	ldr	r0, [sp, #36]	; 0x24
   134f8:	cmp	r0, #39	; 0x27
   134fc:	beq	13520 <__assert_fail@plt+0x1d48>
   13500:	b	13504 <__assert_fail@plt+0x1d2c>
   13504:	ldr	r0, [sp, #36]	; 0x24
   13508:	cmp	r0, #92	; 0x5c
   1350c:	bne	13534 <__assert_fail@plt+0x1d5c>
   13510:	b	13514 <__assert_fail@plt+0x1d3c>
   13514:	movw	r0, #3
   13518:	str	r0, [fp, #-8]
   1351c:	b	12ef8 <__assert_fail@plt+0x1720>
   13520:	movw	r0, #2
   13524:	str	r0, [fp, #-8]
   13528:	ldr	r0, [fp, #-20]	; 0xffffffec
   1352c:	str	r0, [fp, #-16]
   13530:	b	12ef8 <__assert_fail@plt+0x1720>
   13534:	b	135d8 <__assert_fail@plt+0x1e00>
   13538:	ldr	r0, [fp, #-20]	; 0xffffffec
   1353c:	cmp	r0, #10
   13540:	bne	135a8 <__assert_fail@plt+0x1dd0>
   13544:	bl	149c8 <__assert_fail@plt+0x31f0>
   13548:	movw	r0, #11702	; 0x2db6
   1354c:	movt	r0, #2
   13550:	bl	1161c <gettext@plt>
   13554:	ldr	lr, [fp, #-16]
   13558:	cmp	lr, #34	; 0x22
   1355c:	str	r0, [sp, #32]
   13560:	bne	13578 <__assert_fail@plt+0x1da0>
   13564:	movw	r0, #11790	; 0x2e0e
   13568:	movt	r0, #2
   1356c:	bl	1161c <gettext@plt>
   13570:	str	r0, [sp, #28]
   13574:	b	13588 <__assert_fail@plt+0x1db0>
   13578:	movw	r0, #11797	; 0x2e15
   1357c:	movt	r0, #2
   13580:	bl	1161c <gettext@plt>
   13584:	str	r0, [sp, #28]
   13588:	ldr	r0, [sp, #28]
   1358c:	movw	r1, #1
   13590:	str	r0, [sp, #24]
   13594:	mov	r0, r1
   13598:	movw	r1, #0
   1359c:	ldr	r2, [sp, #32]
   135a0:	ldr	r3, [sp, #24]
   135a4:	bl	1158c <error@plt>
   135a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   135ac:	ldr	r1, [fp, #-16]
   135b0:	cmp	r0, r1
   135b4:	bne	135cc <__assert_fail@plt+0x1df4>
   135b8:	movw	r0, #0
   135bc:	str	r0, [fp, #-8]
   135c0:	movw	r0, #1
   135c4:	strb	r0, [fp, #-22]	; 0xffffffea
   135c8:	b	12ef8 <__assert_fail@plt+0x1720>
   135cc:	b	135d8 <__assert_fail@plt+0x1e00>
   135d0:	movw	r0, #0
   135d4:	str	r0, [fp, #-8]
   135d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   135dc:	movw	r1, #0
   135e0:	cmp	r1, r0
   135e4:	bne	13630 <__assert_fail@plt+0x1e58>
   135e8:	movw	r0, #21108	; 0x5274
   135ec:	movt	r0, #3
   135f0:	ldr	r0, [r0]
   135f4:	cmp	r0, #0
   135f8:	bne	13630 <__assert_fail@plt+0x1e58>
   135fc:	movw	r0, #11804	; 0x2e1c
   13600:	movt	r0, #2
   13604:	bl	1161c <gettext@plt>
   13608:	movw	lr, #0
   1360c:	str	r0, [sp, #20]
   13610:	mov	r0, lr
   13614:	mov	r1, lr
   13618:	ldr	r2, [sp, #20]
   1361c:	bl	1158c <error@plt>
   13620:	movw	r0, #21108	; 0x5274
   13624:	movt	r0, #3
   13628:	movw	r1, #1
   1362c:	str	r1, [r0]
   13630:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13634:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13638:	cmp	r0, r1
   1363c:	bcc	13668 <__assert_fail@plt+0x1e90>
   13640:	bl	149c8 <__assert_fail@plt+0x31f0>
   13644:	movw	r0, #11943	; 0x2ea7
   13648:	movt	r0, #2
   1364c:	bl	1161c <gettext@plt>
   13650:	movw	lr, #1
   13654:	str	r0, [sp, #16]
   13658:	mov	r0, lr
   1365c:	movw	r1, #0
   13660:	ldr	r2, [sp, #16]
   13664:	bl	1158c <error@plt>
   13668:	ldr	r0, [fp, #-20]	; 0xffffffec
   1366c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13670:	add	r2, r1, #1
   13674:	str	r2, [fp, #-32]	; 0xffffffe0
   13678:	strb	r0, [r1]
   1367c:	b	12ef8 <__assert_fail@plt+0x1720>
   13680:	ldr	r0, [fp, #-4]
   13684:	mov	sp, fp
   13688:	pop	{fp, pc}
   1368c:	bx	lr
   13690:	push	{fp, lr}
   13694:	mov	fp, sp
   13698:	bl	11604 <getpid@plt>
   1369c:	movw	lr, #20968	; 0x51e8
   136a0:	movt	lr, #3
   136a4:	ldr	lr, [lr]
   136a8:	cmp	r0, lr
   136ac:	bne	136b4 <__assert_fail@plt+0x1edc>
   136b0:	b	136d4 <__assert_fail@plt+0x1efc>
   136b4:	movw	r0, #12692	; 0x3194
   136b8:	movt	r0, #2
   136bc:	movw	r1, #9761	; 0x2621
   136c0:	movt	r1, #2
   136c4:	movw	r2, #1605	; 0x645
   136c8:	movw	r3, #12712	; 0x31a8
   136cc:	movt	r3, #2
   136d0:	bl	117d8 <__assert_fail@plt>
   136d4:	movw	r0, #21136	; 0x5290
   136d8:	movt	r0, #3
   136dc:	ldrb	r0, [r0]
   136e0:	tst	r0, #1
   136e4:	beq	136ec <__assert_fail@plt+0x1f14>
   136e8:	b	1374c <__assert_fail@plt+0x1f74>
   136ec:	movw	r0, #21136	; 0x5290
   136f0:	movt	r0, #3
   136f4:	movw	r1, #1
   136f8:	strb	r1, [r0]
   136fc:	movw	r0, #1
   13700:	and	r0, r0, #1
   13704:	movw	r1, #0
   13708:	bl	14a4c <__assert_fail@plt+0x3274>
   1370c:	movw	r0, #21136	; 0x5290
   13710:	movt	r0, #3
   13714:	movw	r1, #0
   13718:	strb	r1, [r0]
   1371c:	movw	r0, #20972	; 0x51ec
   13720:	movt	r0, #3
   13724:	ldr	r0, [r0]
   13728:	movw	r1, #21100	; 0x526c
   1372c:	movt	r1, #3
   13730:	ldr	r1, [r1]
   13734:	cmp	r0, r1
   13738:	beq	1374c <__assert_fail@plt+0x1f74>
   1373c:	movw	r0, #21100	; 0x526c
   13740:	movt	r0, #3
   13744:	ldr	r0, [r0]
   13748:	bl	11490 <_exit@plt>
   1374c:	pop	{fp, pc}
   13750:	push	{fp, lr}
   13754:	mov	fp, sp
   13758:	sub	sp, sp, #8
   1375c:	movw	r0, #10908	; 0x2a9c
   13760:	movt	r0, #2
   13764:	bl	1161c <gettext@plt>
   13768:	movw	lr, #1
   1376c:	str	r0, [sp, #4]
   13770:	mov	r0, lr
   13774:	movw	r1, #0
   13778:	ldr	r2, [sp, #4]
   1377c:	bl	1158c <error@plt>
   13780:	sub	sp, sp, #12
   13784:	str	r0, [sp, #4]
   13788:	str	r1, [sp]
   1378c:	ldr	r0, [sp, #4]
   13790:	ldr	r1, [sp]
   13794:	cmp	r0, r1
   13798:	bcs	137a8 <__assert_fail@plt+0x1fd0>
   1379c:	ldr	r0, [sp, #4]
   137a0:	str	r0, [sp, #8]
   137a4:	b	137b0 <__assert_fail@plt+0x1fd8>
   137a8:	ldr	r0, [sp]
   137ac:	str	r0, [sp, #8]
   137b0:	ldr	r0, [sp, #8]
   137b4:	add	sp, sp, #12
   137b8:	bx	lr
   137bc:	push	{fp, lr}
   137c0:	mov	fp, sp
   137c4:	sub	sp, sp, #144	; 0x90
   137c8:	str	r0, [fp, #-8]
   137cc:	str	r1, [fp, #-12]
   137d0:	str	r2, [fp, #-16]
   137d4:	str	r3, [fp, #-20]	; 0xffffffec
   137d8:	movw	r0, #20832	; 0x5160
   137dc:	movt	r0, #3
   137e0:	ldr	r0, [r0]
   137e4:	cmp	r0, #0
   137e8:	beq	13828 <__assert_fail@plt+0x2050>
   137ec:	b	137f0 <__assert_fail@plt+0x2018>
   137f0:	movw	r0, #21116	; 0x527c
   137f4:	movt	r0, #3
   137f8:	ldr	r0, [r0]
   137fc:	movw	r1, #20832	; 0x5160
   13800:	movt	r1, #3
   13804:	ldr	r1, [r1]
   13808:	cmp	r0, r1
   1380c:	bcc	13824 <__assert_fail@plt+0x204c>
   13810:	movw	r0, #0
   13814:	and	r0, r0, #1
   13818:	movw	r1, #1
   1381c:	bl	14a4c <__assert_fail@plt+0x3274>
   13820:	b	137f0 <__assert_fail@plt+0x2018>
   13824:	b	13828 <__assert_fail@plt+0x2050>
   13828:	movw	r0, #21030	; 0x5226
   1382c:	movt	r0, #3
   13830:	ldrb	r0, [r0]
   13834:	tst	r0, #1
   13838:	beq	13850 <__assert_fail@plt+0x2078>
   1383c:	movw	r0, #1
   13840:	and	r0, r0, #1
   13844:	bl	14dd4 <__assert_fail@plt+0x35fc>
   13848:	tst	r0, #1
   1384c:	beq	13be0 <__assert_fail@plt+0x2408>
   13850:	movw	r0, #21030	; 0x5226
   13854:	movt	r0, #3
   13858:	ldrb	r0, [r0]
   1385c:	tst	r0, #1
   13860:	bne	13888 <__assert_fail@plt+0x20b0>
   13864:	movw	r0, #21028	; 0x5224
   13868:	movt	r0, #3
   1386c:	ldrb	r0, [r0]
   13870:	tst	r0, #1
   13874:	beq	13888 <__assert_fail@plt+0x20b0>
   13878:	movw	r0, #0
   1387c:	and	r0, r0, #1
   13880:	bl	14dd4 <__assert_fail@plt+0x35fc>
   13884:	str	r0, [fp, #-48]	; 0xffffffd0
   13888:	movw	r0, #0
   1388c:	and	r0, r0, #1
   13890:	movw	r1, #0
   13894:	bl	14a4c <__assert_fail@plt+0x3274>
   13898:	sub	r0, fp, #32
   1389c:	bl	1b734 <__assert_fail@plt+0x9f5c>
   138a0:	cmp	r0, #0
   138a4:	beq	138d8 <__assert_fail@plt+0x2100>
   138a8:	bl	11664 <__errno_location@plt>
   138ac:	ldr	r1, [r0]
   138b0:	movw	r0, #11966	; 0x2ebe
   138b4:	movt	r0, #2
   138b8:	str	r1, [fp, #-52]	; 0xffffffcc
   138bc:	bl	1161c <gettext@plt>
   138c0:	movw	r1, #1
   138c4:	str	r0, [fp, #-56]	; 0xffffffc8
   138c8:	mov	r0, r1
   138cc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   138d0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   138d4:	bl	1158c <error@plt>
   138d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   138dc:	movw	r1, #2
   138e0:	movw	r2, #1
   138e4:	bl	1f728 <__assert_fail@plt+0xdf50>
   138e8:	str	r0, [fp, #-60]	; 0xffffffc4
   138ec:	bl	11718 <fork@plt>
   138f0:	str	r0, [fp, #-24]	; 0xffffffe8
   138f4:	cmp	r0, #0
   138f8:	movw	r0, #0
   138fc:	str	r0, [fp, #-64]	; 0xffffffc0
   13900:	bge	13938 <__assert_fail@plt+0x2160>
   13904:	bl	11664 <__errno_location@plt>
   13908:	ldr	r0, [r0]
   1390c:	cmp	r0, #11
   13910:	movw	r0, #0
   13914:	str	r0, [fp, #-64]	; 0xffffffc0
   13918:	bne	13938 <__assert_fail@plt+0x2160>
   1391c:	movw	r0, #21116	; 0x527c
   13920:	movt	r0, #3
   13924:	ldr	r0, [r0]
   13928:	cmp	r0, #0
   1392c:	movw	r0, #0
   13930:	movne	r0, #1
   13934:	str	r0, [fp, #-64]	; 0xffffffc0
   13938:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1393c:	tst	r0, #1
   13940:	beq	13958 <__assert_fail@plt+0x2180>
   13944:	movw	r0, #0
   13948:	and	r0, r0, #1
   1394c:	movw	r1, #1
   13950:	bl	14a4c <__assert_fail@plt+0x3274>
   13954:	b	138ec <__assert_fail@plt+0x2114>
   13958:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1395c:	cmn	r0, #1
   13960:	str	r0, [fp, #-68]	; 0xffffffbc
   13964:	beq	1397c <__assert_fail@plt+0x21a4>
   13968:	b	1396c <__assert_fail@plt+0x2194>
   1396c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13970:	cmp	r0, #0
   13974:	beq	139ac <__assert_fail@plt+0x21d4>
   13978:	b	13a9c <__assert_fail@plt+0x22c4>
   1397c:	bl	11664 <__errno_location@plt>
   13980:	ldr	r1, [r0]
   13984:	movw	r0, #12000	; 0x2ee0
   13988:	movt	r0, #2
   1398c:	str	r1, [sp, #72]	; 0x48
   13990:	bl	1161c <gettext@plt>
   13994:	movw	r1, #1
   13998:	str	r0, [sp, #68]	; 0x44
   1399c:	mov	r0, r1
   139a0:	ldr	r1, [sp, #72]	; 0x48
   139a4:	ldr	r2, [sp, #68]	; 0x44
   139a8:	bl	1158c <error@plt>
   139ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   139b0:	bl	117c0 <close@plt>
   139b4:	movw	lr, #21100	; 0x526c
   139b8:	movt	lr, #3
   139bc:	movw	r1, #0
   139c0:	str	r1, [lr]
   139c4:	str	r0, [sp, #64]	; 0x40
   139c8:	bl	150b8 <__assert_fail@plt+0x38e0>
   139cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   139d0:	bl	164c0 <__assert_fail@plt+0x4ce8>
   139d4:	tst	r0, #1
   139d8:	beq	139ec <__assert_fail@plt+0x2214>
   139dc:	bl	11664 <__errno_location@plt>
   139e0:	movw	lr, #7
   139e4:	str	lr, [r0]
   139e8:	b	13a00 <__assert_fail@plt+0x2228>
   139ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   139f0:	ldr	r0, [r0]
   139f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   139f8:	bl	114a8 <execvp@plt>
   139fc:	str	r0, [sp, #60]	; 0x3c
   13a00:	bl	11664 <__errno_location@plt>
   13a04:	ldr	r0, [r0]
   13a08:	cmp	r0, #0
   13a0c:	beq	13a38 <__assert_fail@plt+0x2260>
   13a10:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13a14:	str	r0, [sp, #56]	; 0x38
   13a18:	bl	11664 <__errno_location@plt>
   13a1c:	ldr	lr, [sp, #56]	; 0x38
   13a20:	str	r0, [sp, #52]	; 0x34
   13a24:	mov	r0, lr
   13a28:	ldr	r1, [sp, #52]	; 0x34
   13a2c:	movw	r2, #4
   13a30:	bl	116a0 <write@plt>
   13a34:	str	r0, [sp, #48]	; 0x30
   13a38:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13a3c:	bl	117c0 <close@plt>
   13a40:	str	r0, [sp, #44]	; 0x2c
   13a44:	bl	11664 <__errno_location@plt>
   13a48:	ldr	r0, [r0]
   13a4c:	movw	lr, #7
   13a50:	cmp	lr, r0
   13a54:	beq	13a78 <__assert_fail@plt+0x22a0>
   13a58:	bl	11664 <__errno_location@plt>
   13a5c:	ldr	r1, [r0]
   13a60:	ldr	r0, [fp, #-20]	; 0xffffffec
   13a64:	ldr	r3, [r0]
   13a68:	movw	r0, #0
   13a6c:	movw	r2, #17319	; 0x43a7
   13a70:	movt	r2, #2
   13a74:	bl	1158c <error@plt>
   13a78:	bl	11664 <__errno_location@plt>
   13a7c:	ldr	r0, [r0]
   13a80:	cmp	r0, #2
   13a84:	movw	r0, #0
   13a88:	moveq	r0, #1
   13a8c:	tst	r0, #1
   13a90:	movw	r0, #127	; 0x7f
   13a94:	moveq	r0, #126	; 0x7e
   13a98:	bl	11490 <_exit@plt>
   13a9c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13aa0:	bl	117c0 <close@plt>
   13aa4:	str	r0, [sp, #40]	; 0x28
   13aa8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13aac:	sub	r1, fp, #36	; 0x24
   13ab0:	mov	r2, #4
   13ab4:	bl	1b5a8 <__assert_fail@plt+0x9dd0>
   13ab8:	str	r0, [fp, #-40]	; 0xffffffd8
   13abc:	mov	r1, r0
   13ac0:	cmn	r0, #1
   13ac4:	str	r1, [sp, #36]	; 0x24
   13ac8:	beq	13af0 <__assert_fail@plt+0x2318>
   13acc:	b	13ad0 <__assert_fail@plt+0x22f8>
   13ad0:	ldr	r0, [sp, #36]	; 0x24
   13ad4:	cmp	r0, #0
   13ad8:	beq	13b90 <__assert_fail@plt+0x23b8>
   13adc:	b	13ae0 <__assert_fail@plt+0x2308>
   13ae0:	ldr	r0, [sp, #36]	; 0x24
   13ae4:	cmp	r0, #4
   13ae8:	beq	13b30 <__assert_fail@plt+0x2358>
   13aec:	b	13ba0 <__assert_fail@plt+0x23c8>
   13af0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13af4:	bl	117c0 <close@plt>
   13af8:	str	r0, [sp, #32]
   13afc:	bl	11664 <__errno_location@plt>
   13b00:	ldr	r1, [r0]
   13b04:	movw	r0, #12012	; 0x2eec
   13b08:	movt	r0, #2
   13b0c:	str	r1, [sp, #28]
   13b10:	bl	1161c <gettext@plt>
   13b14:	movw	r1, #0
   13b18:	str	r0, [sp, #24]
   13b1c:	mov	r0, r1
   13b20:	ldr	r1, [sp, #28]
   13b24:	ldr	r2, [sp, #24]
   13b28:	bl	1158c <error@plt>
   13b2c:	b	13bd4 <__assert_fail@plt+0x23fc>
   13b30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13b34:	bl	117c0 <close@plt>
   13b38:	ldr	lr, [fp, #-24]	; 0xffffffe8
   13b3c:	str	r0, [sp, #20]
   13b40:	mov	r0, lr
   13b44:	sub	r1, fp, #44	; 0x2c
   13b48:	movw	r2, #0
   13b4c:	bl	11550 <waitpid@plt>
   13b50:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13b54:	movw	r2, #7
   13b58:	cmp	r2, r1
   13b5c:	str	r0, [sp, #16]
   13b60:	bne	13b70 <__assert_fail@plt+0x2398>
   13b64:	movw	r0, #0
   13b68:	str	r0, [fp, #-4]
   13b6c:	b	13be8 <__assert_fail@plt+0x2410>
   13b70:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13b74:	movw	r1, #2
   13b78:	cmp	r1, r0
   13b7c:	bne	13b88 <__assert_fail@plt+0x23b0>
   13b80:	movw	r0, #127	; 0x7f
   13b84:	bl	11610 <exit@plt>
   13b88:	movw	r0, #126	; 0x7e
   13b8c:	bl	11610 <exit@plt>
   13b90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13b94:	bl	15264 <__assert_fail@plt+0x3a8c>
   13b98:	str	r0, [sp, #12]
   13b9c:	b	13bd4 <__assert_fail@plt+0x23fc>
   13ba0:	bl	11664 <__errno_location@plt>
   13ba4:	ldr	r1, [r0]
   13ba8:	movw	r0, #12102	; 0x2f46
   13bac:	movt	r0, #2
   13bb0:	str	r1, [sp, #8]
   13bb4:	bl	1161c <gettext@plt>
   13bb8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13bbc:	movw	r1, #1
   13bc0:	str	r0, [sp, #4]
   13bc4:	mov	r0, r1
   13bc8:	ldr	r1, [sp, #8]
   13bcc:	ldr	r2, [sp, #4]
   13bd0:	bl	1158c <error@plt>
   13bd4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13bd8:	bl	117c0 <close@plt>
   13bdc:	str	r0, [sp]
   13be0:	movw	r0, #1
   13be4:	str	r0, [fp, #-4]
   13be8:	ldr	r0, [fp, #-4]
   13bec:	mov	sp, fp
   13bf0:	pop	{fp, pc}
   13bf4:	push	{fp, lr}
   13bf8:	mov	fp, sp
   13bfc:	sub	sp, sp, #48	; 0x30
   13c00:	movw	r0, #21044	; 0x5234
   13c04:	movt	r0, #3
   13c08:	ldr	r1, [r0]
   13c0c:	str	r1, [fp, #-12]
   13c10:	ldr	r0, [r0]
   13c14:	movw	r1, #20976	; 0x51f0
   13c18:	movt	r1, #3
   13c1c:	ldr	r1, [r1, #12]
   13c20:	add	r0, r0, r1
   13c24:	movw	r1, #21048	; 0x5238
   13c28:	movt	r1, #3
   13c2c:	ldr	r1, [r1, #20]
   13c30:	movw	r2, #0
   13c34:	sub	r1, r2, r1
   13c38:	add	r0, r0, r1
   13c3c:	mvn	r1, #0
   13c40:	add	r0, r0, r1
   13c44:	str	r0, [fp, #-16]
   13c48:	movw	r0, #21112	; 0x5278
   13c4c:	movt	r0, #3
   13c50:	ldrb	r0, [r0]
   13c54:	tst	r0, #1
   13c58:	beq	13c68 <__assert_fail@plt+0x2490>
   13c5c:	mvn	r0, #0
   13c60:	str	r0, [fp, #-4]
   13c64:	b	13e7c <__assert_fail@plt+0x26a4>
   13c68:	b	13c6c <__assert_fail@plt+0x2494>
   13c6c:	movw	r0, #21036	; 0x522c
   13c70:	movt	r0, #3
   13c74:	ldr	r0, [r0]
   13c78:	bl	117b4 <getc@plt>
   13c7c:	str	r0, [fp, #-20]	; 0xffffffec
   13c80:	ldr	r0, [fp, #-20]	; 0xffffffec
   13c84:	cmn	r0, #1
   13c88:	bne	13d60 <__assert_fail@plt+0x2588>
   13c8c:	movw	r0, #21112	; 0x5278
   13c90:	movt	r0, #3
   13c94:	movw	r1, #1
   13c98:	strb	r1, [r0]
   13c9c:	ldr	r0, [fp, #-12]
   13ca0:	movw	r1, #21044	; 0x5234
   13ca4:	movt	r1, #3
   13ca8:	ldr	r1, [r1]
   13cac:	cmp	r0, r1
   13cb0:	bne	13cc0 <__assert_fail@plt+0x24e8>
   13cb4:	mvn	r0, #0
   13cb8:	str	r0, [fp, #-4]
   13cbc:	b	13e7c <__assert_fail@plt+0x26a4>
   13cc0:	ldr	r0, [fp, #-12]
   13cc4:	add	r1, r0, #1
   13cc8:	str	r1, [fp, #-12]
   13ccc:	movw	r1, #0
   13cd0:	strb	r1, [r0]
   13cd4:	ldr	r0, [fp, #-12]
   13cd8:	movw	r1, #21044	; 0x5234
   13cdc:	movt	r1, #3
   13ce0:	ldr	r1, [r1]
   13ce4:	sub	r0, r0, r1
   13ce8:	str	r0, [fp, #-8]
   13cec:	movw	r0, #20976	; 0x51f0
   13cf0:	movt	r0, #3
   13cf4:	ldr	r0, [r0, #24]
   13cf8:	movw	r1, #0
   13cfc:	cmp	r0, r1
   13d00:	bne	13d54 <__assert_fail@plt+0x257c>
   13d04:	movw	r0, #21044	; 0x5234
   13d08:	movt	r0, #3
   13d0c:	ldr	r2, [r0]
   13d10:	ldr	r3, [fp, #-8]
   13d14:	movw	r0, #20836	; 0x5164
   13d18:	movt	r0, #3
   13d1c:	ldrb	r0, [r0]
   13d20:	and	r0, r0, #1
   13d24:	movw	r1, #20976	; 0x51f0
   13d28:	movt	r1, #3
   13d2c:	str	r0, [sp, #24]
   13d30:	mov	r0, r1
   13d34:	movw	r1, #21048	; 0x5238
   13d38:	movt	r1, #3
   13d3c:	movw	ip, #0
   13d40:	str	ip, [sp]
   13d44:	str	ip, [sp, #4]
   13d48:	ldr	ip, [sp, #24]
   13d4c:	str	ip, [sp, #8]
   13d50:	bl	15784 <__assert_fail@plt+0x3fac>
   13d54:	ldr	r0, [fp, #-8]
   13d58:	str	r0, [fp, #-4]
   13d5c:	b	13e7c <__assert_fail@plt+0x26a4>
   13d60:	ldr	r0, [fp, #-20]	; 0xffffffec
   13d64:	movw	r1, #21020	; 0x521c
   13d68:	movt	r1, #3
   13d6c:	ldrb	r1, [r1]
   13d70:	cmp	r0, r1
   13d74:	bne	13e2c <__assert_fail@plt+0x2654>
   13d78:	movw	r0, #21092	; 0x5264
   13d7c:	movt	r0, #3
   13d80:	ldr	r1, [r0]
   13d84:	add	r1, r1, #1
   13d88:	str	r1, [r0]
   13d8c:	ldr	r0, [fp, #-12]
   13d90:	add	r1, r0, #1
   13d94:	str	r1, [fp, #-12]
   13d98:	movw	r1, #0
   13d9c:	strb	r1, [r0]
   13da0:	ldr	r0, [fp, #-12]
   13da4:	movw	r1, #21044	; 0x5234
   13da8:	movt	r1, #3
   13dac:	ldr	r1, [r1]
   13db0:	sub	r0, r0, r1
   13db4:	str	r0, [fp, #-8]
   13db8:	movw	r0, #20976	; 0x51f0
   13dbc:	movt	r0, #3
   13dc0:	ldr	r0, [r0, #24]
   13dc4:	movw	r1, #0
   13dc8:	cmp	r0, r1
   13dcc:	bne	13e20 <__assert_fail@plt+0x2648>
   13dd0:	movw	r0, #21044	; 0x5234
   13dd4:	movt	r0, #3
   13dd8:	ldr	r2, [r0]
   13ddc:	ldr	r3, [fp, #-8]
   13de0:	movw	r0, #20836	; 0x5164
   13de4:	movt	r0, #3
   13de8:	ldrb	r0, [r0]
   13dec:	and	r0, r0, #1
   13df0:	movw	r1, #20976	; 0x51f0
   13df4:	movt	r1, #3
   13df8:	str	r0, [sp, #20]
   13dfc:	mov	r0, r1
   13e00:	movw	r1, #21048	; 0x5238
   13e04:	movt	r1, #3
   13e08:	movw	ip, #0
   13e0c:	str	ip, [sp]
   13e10:	str	ip, [sp, #4]
   13e14:	ldr	ip, [sp, #20]
   13e18:	str	ip, [sp, #8]
   13e1c:	bl	15784 <__assert_fail@plt+0x3fac>
   13e20:	ldr	r0, [fp, #-8]
   13e24:	str	r0, [fp, #-4]
   13e28:	b	13e7c <__assert_fail@plt+0x26a4>
   13e2c:	ldr	r0, [fp, #-12]
   13e30:	ldr	r1, [fp, #-16]
   13e34:	cmp	r0, r1
   13e38:	bcc	13e64 <__assert_fail@plt+0x268c>
   13e3c:	bl	149c8 <__assert_fail@plt+0x31f0>
   13e40:	movw	r0, #11943	; 0x2ea7
   13e44:	movt	r0, #2
   13e48:	bl	1161c <gettext@plt>
   13e4c:	movw	lr, #1
   13e50:	str	r0, [sp, #16]
   13e54:	mov	r0, lr
   13e58:	movw	r1, #0
   13e5c:	ldr	r2, [sp, #16]
   13e60:	bl	1158c <error@plt>
   13e64:	ldr	r0, [fp, #-20]	; 0xffffffec
   13e68:	ldr	r1, [fp, #-12]
   13e6c:	add	r2, r1, #1
   13e70:	str	r2, [fp, #-12]
   13e74:	strb	r0, [r1]
   13e78:	b	13c6c <__assert_fail@plt+0x2494>
   13e7c:	ldr	r0, [fp, #-4]
   13e80:	mov	sp, fp
   13e84:	pop	{fp, pc}
   13e88:	push	{fp, lr}
   13e8c:	mov	fp, sp
   13e90:	sub	sp, sp, #16
   13e94:	str	r0, [sp, #8]
   13e98:	ldr	r0, [sp, #8]
   13e9c:	bl	11634 <strlen@plt>
   13ea0:	movw	lr, #1
   13ea4:	cmp	lr, r0
   13ea8:	bne	13ebc <__assert_fail@plt+0x26e4>
   13eac:	ldr	r0, [sp, #8]
   13eb0:	ldrb	r0, [r0]
   13eb4:	strb	r0, [fp, #-1]
   13eb8:	b	13ffc <__assert_fail@plt+0x2824>
   13ebc:	ldr	r0, [sp, #8]
   13ec0:	ldrb	r0, [r0]
   13ec4:	movw	r1, #92	; 0x5c
   13ec8:	cmp	r1, r0
   13ecc:	bne	13fd4 <__assert_fail@plt+0x27fc>
   13ed0:	ldr	r0, [sp, #8]
   13ed4:	ldrb	r0, [r0, #1]
   13ed8:	sub	r0, r0, #92	; 0x5c
   13edc:	cmp	r0, #26
   13ee0:	str	r0, [sp, #4]
   13ee4:	bhi	13fc4 <__assert_fail@plt+0x27ec>
   13ee8:	add	r0, pc, #8
   13eec:	ldr	r1, [sp, #4]
   13ef0:	ldr	r0, [r0, r1, lsl #2]
   13ef4:	mov	pc, r0
   13ef8:			; <UNDEFINED> instruction: 0x00013fb8
   13efc:	andeq	r3, r1, r4, asr #31
   13f00:	andeq	r3, r1, r4, asr #31
   13f04:	andeq	r3, r1, r4, asr #31
   13f08:	andeq	r3, r1, r4, asr #31
   13f0c:	andeq	r3, r1, r4, ror #30
   13f10:	andeq	r3, r1, r0, ror pc
   13f14:	andeq	r3, r1, r4, asr #31
   13f18:	andeq	r3, r1, r4, asr #31
   13f1c:	andeq	r3, r1, r4, asr #31
   13f20:	andeq	r3, r1, ip, ror pc
   13f24:	andeq	r3, r1, r4, asr #31
   13f28:	andeq	r3, r1, r4, asr #31
   13f2c:	andeq	r3, r1, r4, asr #31
   13f30:	andeq	r3, r1, r4, asr #31
   13f34:	andeq	r3, r1, r4, asr #31
   13f38:	andeq	r3, r1, r4, asr #31
   13f3c:	andeq	r3, r1, r4, asr #31
   13f40:	andeq	r3, r1, r8, lsl #31
   13f44:	andeq	r3, r1, r4, asr #31
   13f48:	andeq	r3, r1, r4, asr #31
   13f4c:	andeq	r3, r1, r4, asr #31
   13f50:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   13f54:	andeq	r3, r1, r4, asr #31
   13f58:	andeq	r3, r1, r0, lsr #31
   13f5c:	andeq	r3, r1, r4, asr #31
   13f60:	andeq	r3, r1, ip, lsr #31
   13f64:	movw	r0, #7
   13f68:	strb	r0, [fp, #-1]
   13f6c:	b	13ffc <__assert_fail@plt+0x2824>
   13f70:	movw	r0, #8
   13f74:	strb	r0, [fp, #-1]
   13f78:	b	13ffc <__assert_fail@plt+0x2824>
   13f7c:	movw	r0, #12
   13f80:	strb	r0, [fp, #-1]
   13f84:	b	13ffc <__assert_fail@plt+0x2824>
   13f88:	movw	r0, #10
   13f8c:	strb	r0, [fp, #-1]
   13f90:	b	13ffc <__assert_fail@plt+0x2824>
   13f94:	movw	r0, #13
   13f98:	strb	r0, [fp, #-1]
   13f9c:	b	13ffc <__assert_fail@plt+0x2824>
   13fa0:	movw	r0, #9
   13fa4:	strb	r0, [fp, #-1]
   13fa8:	b	13ffc <__assert_fail@plt+0x2824>
   13fac:	movw	r0, #11
   13fb0:	strb	r0, [fp, #-1]
   13fb4:	b	13ffc <__assert_fail@plt+0x2824>
   13fb8:	movw	r0, #92	; 0x5c
   13fbc:	strb	r0, [fp, #-1]
   13fc0:	b	13ffc <__assert_fail@plt+0x2824>
   13fc4:	ldr	r0, [sp, #8]
   13fc8:	bl	147bc <__assert_fail@plt+0x2fe4>
   13fcc:	strb	r0, [fp, #-1]
   13fd0:	b	13ffc <__assert_fail@plt+0x2824>
   13fd4:	movw	r0, #11077	; 0x2b45
   13fd8:	movt	r0, #2
   13fdc:	bl	1161c <gettext@plt>
   13fe0:	ldr	r3, [sp, #8]
   13fe4:	movw	lr, #1
   13fe8:	str	r0, [sp]
   13fec:	mov	r0, lr
   13ff0:	movw	r1, #0
   13ff4:	ldr	r2, [sp]
   13ff8:	bl	1158c <error@plt>
   13ffc:	ldrb	r0, [fp, #-1]
   14000:	mov	sp, fp
   14004:	pop	{fp, pc}
   14008:	push	{fp, lr}
   1400c:	mov	fp, sp
   14010:	sub	sp, sp, #128	; 0x80
   14014:	str	r0, [fp, #-4]
   14018:	ldr	r0, [fp, #-4]
   1401c:	cmp	r0, #0
   14020:	beq	14074 <__assert_fail@plt+0x289c>
   14024:	movw	r0, #20944	; 0x51d0
   14028:	movt	r0, #3
   1402c:	ldr	r0, [r0]
   14030:	movw	r1, #12873	; 0x3249
   14034:	movt	r1, #2
   14038:	str	r0, [fp, #-8]
   1403c:	mov	r0, r1
   14040:	bl	1161c <gettext@plt>
   14044:	movw	r1, #21168	; 0x52b0
   14048:	movt	r1, #3
   1404c:	ldr	r2, [r1]
   14050:	ldr	r1, [fp, #-8]
   14054:	str	r0, [fp, #-12]
   14058:	mov	r0, r1
   1405c:	ldr	r1, [fp, #-12]
   14060:	bl	11658 <fprintf@plt>
   14064:	ldr	r1, [fp, #-4]
   14068:	str	r0, [fp, #-16]
   1406c:	mov	r0, r1
   14070:	bl	11610 <exit@plt>
   14074:	movw	r0, #20956	; 0x51dc
   14078:	movt	r0, #3
   1407c:	ldr	r0, [r0]
   14080:	movw	r1, #12912	; 0x3270
   14084:	movt	r1, #2
   14088:	str	r0, [fp, #-20]	; 0xffffffec
   1408c:	mov	r0, r1
   14090:	bl	1161c <gettext@plt>
   14094:	movw	r1, #21168	; 0x52b0
   14098:	movt	r1, #3
   1409c:	ldr	r2, [r1]
   140a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   140a4:	str	r0, [fp, #-24]	; 0xffffffe8
   140a8:	mov	r0, r1
   140ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   140b0:	bl	11658 <fprintf@plt>
   140b4:	movw	r1, #12961	; 0x32a1
   140b8:	movt	r1, #2
   140bc:	str	r0, [fp, #-28]	; 0xffffffe4
   140c0:	mov	r0, r1
   140c4:	bl	1161c <gettext@plt>
   140c8:	movw	r1, #20956	; 0x51dc
   140cc:	movt	r1, #3
   140d0:	ldr	r1, [r1]
   140d4:	bl	11790 <fputs@plt>
   140d8:	movw	r1, #13039	; 0x32ef
   140dc:	movt	r1, #2
   140e0:	str	r0, [fp, #-32]	; 0xffffffe0
   140e4:	mov	r0, r1
   140e8:	bl	1161c <gettext@plt>
   140ec:	movw	r1, #20956	; 0x51dc
   140f0:	movt	r1, #3
   140f4:	ldr	r1, [r1]
   140f8:	bl	11790 <fputs@plt>
   140fc:	movw	r1, #13156	; 0x3364
   14100:	movt	r1, #2
   14104:	str	r0, [fp, #-36]	; 0xffffffdc
   14108:	mov	r0, r1
   1410c:	bl	1161c <gettext@plt>
   14110:	movw	r1, #20956	; 0x51dc
   14114:	movt	r1, #3
   14118:	ldr	r1, [r1]
   1411c:	bl	11790 <fputs@plt>
   14120:	movw	r1, #13368	; 0x3438
   14124:	movt	r1, #2
   14128:	str	r0, [fp, #-40]	; 0xffffffd8
   1412c:	mov	r0, r1
   14130:	bl	1161c <gettext@plt>
   14134:	movw	r1, #20956	; 0x51dc
   14138:	movt	r1, #3
   1413c:	ldr	r1, [r1]
   14140:	bl	11790 <fputs@plt>
   14144:	movw	r1, #13445	; 0x3485
   14148:	movt	r1, #2
   1414c:	str	r0, [fp, #-44]	; 0xffffffd4
   14150:	mov	r0, r1
   14154:	bl	1161c <gettext@plt>
   14158:	movw	r1, #20956	; 0x51dc
   1415c:	movt	r1, #3
   14160:	ldr	r1, [r1]
   14164:	bl	11790 <fputs@plt>
   14168:	movw	r1, #13679	; 0x356f
   1416c:	movt	r1, #2
   14170:	str	r0, [fp, #-48]	; 0xffffffd0
   14174:	mov	r0, r1
   14178:	bl	1161c <gettext@plt>
   1417c:	movw	r1, #20956	; 0x51dc
   14180:	movt	r1, #3
   14184:	ldr	r1, [r1]
   14188:	bl	11790 <fputs@plt>
   1418c:	movw	r1, #13904	; 0x3650
   14190:	movt	r1, #2
   14194:	str	r0, [fp, #-52]	; 0xffffffcc
   14198:	mov	r0, r1
   1419c:	bl	1161c <gettext@plt>
   141a0:	movw	r1, #20956	; 0x51dc
   141a4:	movt	r1, #3
   141a8:	ldr	r1, [r1]
   141ac:	bl	11790 <fputs@plt>
   141b0:	movw	r1, #14053	; 0x36e5
   141b4:	movt	r1, #2
   141b8:	str	r0, [fp, #-56]	; 0xffffffc8
   141bc:	mov	r0, r1
   141c0:	bl	1161c <gettext@plt>
   141c4:	movw	r1, #20956	; 0x51dc
   141c8:	movt	r1, #3
   141cc:	ldr	r1, [r1]
   141d0:	bl	11790 <fputs@plt>
   141d4:	movw	r1, #14105	; 0x3719
   141d8:	movt	r1, #2
   141dc:	str	r0, [fp, #-60]	; 0xffffffc4
   141e0:	mov	r0, r1
   141e4:	bl	1161c <gettext@plt>
   141e8:	movw	r1, #20956	; 0x51dc
   141ec:	movt	r1, #3
   141f0:	ldr	r1, [r1]
   141f4:	bl	11790 <fputs@plt>
   141f8:	movw	r1, #14316	; 0x37ec
   141fc:	movt	r1, #2
   14200:	str	r0, [sp, #64]	; 0x40
   14204:	mov	r0, r1
   14208:	bl	1161c <gettext@plt>
   1420c:	movw	r1, #20956	; 0x51dc
   14210:	movt	r1, #3
   14214:	ldr	r1, [r1]
   14218:	bl	11790 <fputs@plt>
   1421c:	movw	r1, #14442	; 0x386a
   14220:	movt	r1, #2
   14224:	str	r0, [sp, #60]	; 0x3c
   14228:	mov	r0, r1
   1422c:	bl	1161c <gettext@plt>
   14230:	movw	r1, #20956	; 0x51dc
   14234:	movt	r1, #3
   14238:	ldr	r1, [r1]
   1423c:	bl	11790 <fputs@plt>
   14240:	movw	r1, #14601	; 0x3909
   14244:	movt	r1, #2
   14248:	str	r0, [sp, #56]	; 0x38
   1424c:	mov	r0, r1
   14250:	bl	1161c <gettext@plt>
   14254:	movw	r1, #20956	; 0x51dc
   14258:	movt	r1, #3
   1425c:	ldr	r1, [r1]
   14260:	bl	11790 <fputs@plt>
   14264:	movw	r1, #14681	; 0x3959
   14268:	movt	r1, #2
   1426c:	str	r0, [sp, #52]	; 0x34
   14270:	mov	r0, r1
   14274:	bl	1161c <gettext@plt>
   14278:	movw	r1, #20956	; 0x51dc
   1427c:	movt	r1, #3
   14280:	ldr	r1, [r1]
   14284:	bl	11790 <fputs@plt>
   14288:	movw	r1, #14897	; 0x3a31
   1428c:	movt	r1, #2
   14290:	str	r0, [sp, #48]	; 0x30
   14294:	mov	r0, r1
   14298:	bl	1161c <gettext@plt>
   1429c:	movw	r1, #20956	; 0x51dc
   142a0:	movt	r1, #3
   142a4:	ldr	r1, [r1]
   142a8:	bl	11790 <fputs@plt>
   142ac:	movw	r1, #14971	; 0x3a7b
   142b0:	movt	r1, #2
   142b4:	str	r0, [sp, #44]	; 0x2c
   142b8:	mov	r0, r1
   142bc:	bl	1161c <gettext@plt>
   142c0:	movw	r1, #20956	; 0x51dc
   142c4:	movt	r1, #3
   142c8:	ldr	r1, [r1]
   142cc:	bl	11790 <fputs@plt>
   142d0:	movw	r1, #15034	; 0x3aba
   142d4:	movt	r1, #2
   142d8:	str	r0, [sp, #40]	; 0x28
   142dc:	mov	r0, r1
   142e0:	bl	1161c <gettext@plt>
   142e4:	movw	r1, #20956	; 0x51dc
   142e8:	movt	r1, #3
   142ec:	ldr	r1, [r1]
   142f0:	bl	11790 <fputs@plt>
   142f4:	movw	r1, #15114	; 0x3b0a
   142f8:	movt	r1, #2
   142fc:	str	r0, [sp, #36]	; 0x24
   14300:	mov	r0, r1
   14304:	bl	1161c <gettext@plt>
   14308:	movw	r1, #20956	; 0x51dc
   1430c:	movt	r1, #3
   14310:	ldr	r1, [r1]
   14314:	bl	11790 <fputs@plt>
   14318:	movw	r1, #15327	; 0x3bdf
   1431c:	movt	r1, #2
   14320:	str	r0, [sp, #32]
   14324:	mov	r0, r1
   14328:	bl	1161c <gettext@plt>
   1432c:	movw	r1, #20956	; 0x51dc
   14330:	movt	r1, #3
   14334:	ldr	r1, [r1]
   14338:	bl	11790 <fputs@plt>
   1433c:	movw	r1, #15401	; 0x3c29
   14340:	movt	r1, #2
   14344:	str	r0, [sp, #28]
   14348:	mov	r0, r1
   1434c:	bl	1161c <gettext@plt>
   14350:	movw	r1, #20956	; 0x51dc
   14354:	movt	r1, #3
   14358:	ldr	r1, [r1]
   1435c:	bl	11790 <fputs@plt>
   14360:	movw	r1, #15468	; 0x3c6c
   14364:	movt	r1, #2
   14368:	str	r0, [sp, #24]
   1436c:	mov	r0, r1
   14370:	bl	1161c <gettext@plt>
   14374:	movw	r1, #20956	; 0x51dc
   14378:	movt	r1, #3
   1437c:	ldr	r1, [r1]
   14380:	bl	11790 <fputs@plt>
   14384:	movw	r1, #15537	; 0x3cb1
   14388:	movt	r1, #2
   1438c:	str	r0, [sp, #20]
   14390:	mov	r0, r1
   14394:	bl	1161c <gettext@plt>
   14398:	movw	r1, #20956	; 0x51dc
   1439c:	movt	r1, #3
   143a0:	ldr	r1, [r1]
   143a4:	bl	11790 <fputs@plt>
   143a8:	movw	r1, #15607	; 0x3cf7
   143ac:	movt	r1, #2
   143b0:	str	r0, [sp, #16]
   143b4:	mov	r0, r1
   143b8:	bl	1161c <gettext@plt>
   143bc:	movw	r1, #20956	; 0x51dc
   143c0:	movt	r1, #3
   143c4:	ldr	r1, [r1]
   143c8:	bl	11790 <fputs@plt>
   143cc:	movw	r1, #15666	; 0x3d32
   143d0:	movt	r1, #2
   143d4:	str	r0, [sp, #12]
   143d8:	mov	r0, r1
   143dc:	bl	1161c <gettext@plt>
   143e0:	movw	r1, #20956	; 0x51dc
   143e4:	movt	r1, #3
   143e8:	ldr	r1, [r1]
   143ec:	bl	11790 <fputs@plt>
   143f0:	movw	r1, #20956	; 0x51dc
   143f4:	movt	r1, #3
   143f8:	ldr	r1, [r1]
   143fc:	movw	r2, #21168	; 0x52b0
   14400:	movt	r2, #3
   14404:	ldr	r2, [r2]
   14408:	str	r0, [sp, #8]
   1440c:	mov	r0, r1
   14410:	mov	r1, r2
   14414:	bl	1722c <__assert_fail@plt+0x5a54>
   14418:	ldr	r1, [fp, #-4]
   1441c:	str	r0, [sp, #4]
   14420:	mov	r0, r1
   14424:	bl	11610 <exit@plt>
   14428:	push	{fp, lr}
   1442c:	mov	fp, sp
   14430:	sub	sp, sp, #24
   14434:	str	r0, [fp, #-4]
   14438:	str	r1, [fp, #-8]
   1443c:	movw	r0, #11624	; 0x2d68
   14440:	movt	r0, #2
   14444:	bl	1161c <gettext@plt>
   14448:	ldr	r3, [fp, #-8]
   1444c:	ldr	r1, [fp, #-4]
   14450:	ldr	lr, [fp, #-8]
   14454:	movw	r2, #0
   14458:	str	r0, [sp, #12]
   1445c:	mov	r0, r2
   14460:	str	r1, [sp, #8]
   14464:	mov	r1, r2
   14468:	ldr	r2, [sp, #12]
   1446c:	ldr	ip, [sp, #8]
   14470:	str	ip, [sp]
   14474:	str	lr, [sp, #4]
   14478:	bl	1158c <error@plt>
   1447c:	mov	sp, fp
   14480:	pop	{fp, pc}
   14484:	push	{r4, r5, fp, lr}
   14488:	add	fp, sp, #8
   1448c:	sub	sp, sp, #88	; 0x58
   14490:	ldr	ip, [fp, #8]
   14494:	str	r0, [fp, #-12]
   14498:	str	r1, [fp, #-16]
   1449c:	str	r2, [fp, #-20]	; 0xffffffec
   144a0:	str	r3, [fp, #-24]	; 0xffffffe8
   144a4:	ldr	r0, [fp, #-12]
   144a8:	sub	r1, fp, #28
   144ac:	movw	r2, #10
   144b0:	str	ip, [fp, #-36]	; 0xffffffdc
   144b4:	bl	1143c <strtol@plt>
   144b8:	str	r0, [fp, #-32]	; 0xffffffe0
   144bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   144c0:	ldr	r1, [fp, #-12]
   144c4:	cmp	r0, r1
   144c8:	beq	144dc <__assert_fail@plt+0x2d04>
   144cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   144d0:	ldrb	r0, [r0]
   144d4:	cmp	r0, #0
   144d8:	beq	14544 <__assert_fail@plt+0x2d6c>
   144dc:	movw	r0, #20944	; 0x51d0
   144e0:	movt	r0, #3
   144e4:	ldr	r0, [r0]
   144e8:	movw	r1, #12741	; 0x31c5
   144ec:	movt	r1, #2
   144f0:	str	r0, [fp, #-40]	; 0xffffffd8
   144f4:	mov	r0, r1
   144f8:	bl	1161c <gettext@plt>
   144fc:	movw	r1, #21168	; 0x52b0
   14500:	movt	r1, #3
   14504:	ldr	r2, [r1]
   14508:	ldr	r3, [fp, #-12]
   1450c:	ldr	r1, [fp, #-16]
   14510:	ldr	lr, [fp, #-40]	; 0xffffffd8
   14514:	str	r0, [fp, #-44]	; 0xffffffd4
   14518:	mov	r0, lr
   1451c:	ldr	ip, [fp, #-44]	; 0xffffffd4
   14520:	str	r1, [sp, #48]	; 0x30
   14524:	mov	r1, ip
   14528:	ldr	r4, [sp, #48]	; 0x30
   1452c:	str	r4, [sp]
   14530:	bl	11658 <fprintf@plt>
   14534:	movw	r1, #1
   14538:	str	r0, [sp, #44]	; 0x2c
   1453c:	mov	r0, r1
   14540:	bl	14008 <__assert_fail@plt+0x2830>
   14544:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14548:	ldr	r1, [fp, #-20]	; 0xffffffec
   1454c:	cmp	r0, r1
   14550:	bge	145d8 <__assert_fail@plt+0x2e00>
   14554:	movw	r0, #20944	; 0x51d0
   14558:	movt	r0, #3
   1455c:	ldr	r0, [r0]
   14560:	movw	r1, #12781	; 0x31ed
   14564:	movt	r1, #2
   14568:	str	r0, [sp, #40]	; 0x28
   1456c:	mov	r0, r1
   14570:	bl	1161c <gettext@plt>
   14574:	movw	r1, #21168	; 0x52b0
   14578:	movt	r1, #3
   1457c:	ldr	r2, [r1]
   14580:	ldr	r3, [fp, #-12]
   14584:	ldr	r1, [fp, #-16]
   14588:	ldr	lr, [fp, #-20]	; 0xffffffec
   1458c:	ldr	ip, [sp, #40]	; 0x28
   14590:	str	r0, [sp, #36]	; 0x24
   14594:	mov	r0, ip
   14598:	ldr	r4, [sp, #36]	; 0x24
   1459c:	str	r1, [sp, #32]
   145a0:	mov	r1, r4
   145a4:	ldr	r5, [sp, #32]
   145a8:	str	r5, [sp]
   145ac:	str	lr, [sp, #4]
   145b0:	bl	11658 <fprintf@plt>
   145b4:	ldr	r1, [fp, #8]
   145b8:	cmp	r1, #0
   145bc:	str	r0, [sp, #28]
   145c0:	beq	145cc <__assert_fail@plt+0x2df4>
   145c4:	movw	r0, #1
   145c8:	bl	14008 <__assert_fail@plt+0x2830>
   145cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   145d0:	str	r0, [fp, #-32]	; 0xffffffe0
   145d4:	b	14678 <__assert_fail@plt+0x2ea0>
   145d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   145dc:	cmp	r0, #0
   145e0:	blt	14674 <__assert_fail@plt+0x2e9c>
   145e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   145e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   145ec:	cmp	r0, r1
   145f0:	ble	14674 <__assert_fail@plt+0x2e9c>
   145f4:	movw	r0, #20944	; 0x51d0
   145f8:	movt	r0, #3
   145fc:	ldr	r0, [r0]
   14600:	movw	r1, #12827	; 0x321b
   14604:	movt	r1, #2
   14608:	str	r0, [sp, #24]
   1460c:	mov	r0, r1
   14610:	bl	1161c <gettext@plt>
   14614:	movw	r1, #21168	; 0x52b0
   14618:	movt	r1, #3
   1461c:	ldr	r2, [r1]
   14620:	ldr	r3, [fp, #-12]
   14624:	ldr	r1, [fp, #-16]
   14628:	ldr	lr, [fp, #-24]	; 0xffffffe8
   1462c:	ldr	ip, [sp, #24]
   14630:	str	r0, [sp, #20]
   14634:	mov	r0, ip
   14638:	ldr	r4, [sp, #20]
   1463c:	str	r1, [sp, #16]
   14640:	mov	r1, r4
   14644:	ldr	r5, [sp, #16]
   14648:	str	r5, [sp]
   1464c:	str	lr, [sp, #4]
   14650:	bl	11658 <fprintf@plt>
   14654:	ldr	r1, [fp, #8]
   14658:	cmp	r1, #0
   1465c:	str	r0, [sp, #12]
   14660:	beq	1466c <__assert_fail@plt+0x2e94>
   14664:	movw	r0, #1
   14668:	bl	14008 <__assert_fail@plt+0x2830>
   1466c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14670:	str	r0, [fp, #-32]	; 0xffffffe0
   14674:	b	14678 <__assert_fail@plt+0x2ea0>
   14678:	b	1467c <__assert_fail@plt+0x2ea4>
   1467c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14680:	sub	sp, fp, #8
   14684:	pop	{r4, r5, fp, pc}
   14688:	sub	sp, sp, #4
   1468c:	ldr	r1, [pc, #64]	; 146d4 <__assert_fail@plt+0x2efc>
   14690:	str	r0, [sp]
   14694:	movw	r0, #20832	; 0x5160
   14698:	movt	r0, #3
   1469c:	ldr	r0, [r0]
   146a0:	cmp	r0, r1
   146a4:	bge	146bc <__assert_fail@plt+0x2ee4>
   146a8:	movw	r0, #20832	; 0x5160
   146ac:	movt	r0, #3
   146b0:	ldr	r1, [r0]
   146b4:	add	r1, r1, #1
   146b8:	str	r1, [r0]
   146bc:	movw	r0, #21120	; 0x5280
   146c0:	movt	r0, #3
   146c4:	movw	r1, #1
   146c8:	str	r1, [r0]
   146cc:	add	sp, sp, #4
   146d0:	bx	lr
   146d4:	svcvc	0x00ffffff
   146d8:	sub	sp, sp, #4
   146dc:	str	r0, [sp]
   146e0:	movw	r0, #20832	; 0x5160
   146e4:	movt	r0, #3
   146e8:	ldr	r0, [r0]
   146ec:	cmp	r0, #1
   146f0:	ble	1470c <__assert_fail@plt+0x2f34>
   146f4:	movw	r0, #20832	; 0x5160
   146f8:	movt	r0, #3
   146fc:	ldr	r1, [r0]
   14700:	mvn	r2, #0
   14704:	add	r1, r1, r2
   14708:	str	r1, [r0]
   1470c:	add	sp, sp, #4
   14710:	bx	lr
   14714:	push	{fp, lr}
   14718:	mov	fp, sp
   1471c:	sub	sp, sp, #32
   14720:	str	r0, [fp, #-8]
   14724:	ldr	r0, [fp, #-8]
   14728:	movw	r1, #0
   1472c:	bl	169e0 <__assert_fail@plt+0x5208>
   14730:	str	r0, [fp, #-12]
   14734:	ldr	r0, [fp, #-12]
   14738:	cmp	r0, #0
   1473c:	bge	1474c <__assert_fail@plt+0x2f74>
   14740:	movw	r0, #0
   14744:	str	r0, [fp, #-4]
   14748:	b	147b0 <__assert_fail@plt+0x2fd8>
   1474c:	ldr	r0, [fp, #-12]
   14750:	movw	r1, #11062	; 0x2b36
   14754:	movt	r1, #2
   14758:	bl	1140c <fdopen@plt>
   1475c:	str	r0, [sp, #16]
   14760:	ldr	r0, [sp, #16]
   14764:	movw	r1, #0
   14768:	cmp	r0, r1
   1476c:	bne	147a8 <__assert_fail@plt+0x2fd0>
   14770:	bl	11664 <__errno_location@plt>
   14774:	ldr	r0, [r0]
   14778:	str	r0, [sp, #12]
   1477c:	ldr	r0, [fp, #-12]
   14780:	bl	117c0 <close@plt>
   14784:	ldr	lr, [sp, #12]
   14788:	str	r0, [sp, #8]
   1478c:	str	lr, [sp, #4]
   14790:	bl	11664 <__errno_location@plt>
   14794:	ldr	lr, [sp, #4]
   14798:	str	lr, [r0]
   1479c:	movw	r0, #0
   147a0:	str	r0, [fp, #-4]
   147a4:	b	147b0 <__assert_fail@plt+0x2fd8>
   147a8:	ldr	r0, [sp, #16]
   147ac:	str	r0, [fp, #-4]
   147b0:	ldr	r0, [fp, #-4]
   147b4:	mov	sp, fp
   147b8:	pop	{fp, pc}
   147bc:	push	{fp, lr}
   147c0:	mov	fp, sp
   147c4:	sub	sp, sp, #48	; 0x30
   147c8:	str	r0, [fp, #-4]
   147cc:	movw	r0, #8
   147d0:	str	r0, [fp, #-12]
   147d4:	ldr	r0, [fp, #-4]
   147d8:	ldrb	r0, [r0]
   147dc:	movw	r1, #92	; 0x5c
   147e0:	cmp	r1, r0
   147e4:	bne	147ec <__assert_fail@plt+0x3014>
   147e8:	b	1480c <__assert_fail@plt+0x3034>
   147ec:	movw	r0, #11206	; 0x2bc6
   147f0:	movt	r0, #2
   147f4:	movw	r1, #9761	; 0x2621
   147f8:	movt	r1, #2
   147fc:	movw	r2, #236	; 0xec
   14800:	movw	r3, #11219	; 0x2bd3
   14804:	movt	r3, #2
   14808:	bl	117d8 <__assert_fail@plt>
   1480c:	ldr	r0, [fp, #-4]
   14810:	ldrb	r0, [r0, #1]
   14814:	movw	r1, #120	; 0x78
   14818:	cmp	r1, r0
   1481c:	bne	14838 <__assert_fail@plt+0x3060>
   14820:	ldr	r0, [fp, #-4]
   14824:	add	r0, r0, #2
   14828:	str	r0, [fp, #-8]
   1482c:	movw	r0, #16
   14830:	str	r0, [fp, #-12]
   14834:	b	148b0 <__assert_fail@plt+0x30d8>
   14838:	bl	115f8 <__ctype_b_loc@plt>
   1483c:	ldr	r0, [r0]
   14840:	ldr	lr, [fp, #-4]
   14844:	ldrb	lr, [lr, #1]
   14848:	mov	r1, lr
   1484c:	add	r0, r0, lr, lsl #1
   14850:	ldrh	r0, [r0]
   14854:	and	r0, r0, #2048	; 0x800
   14858:	cmp	r0, #0
   1485c:	str	r1, [sp, #24]
   14860:	beq	1487c <__assert_fail@plt+0x30a4>
   14864:	ldr	r0, [fp, #-4]
   14868:	add	r0, r0, #1
   1486c:	str	r0, [fp, #-8]
   14870:	movw	r0, #8
   14874:	str	r0, [fp, #-12]
   14878:	b	148ac <__assert_fail@plt+0x30d4>
   1487c:	movw	r0, #0
   14880:	str	r0, [fp, #-8]
   14884:	movw	r0, #11265	; 0x2c01
   14888:	movt	r0, #2
   1488c:	bl	1161c <gettext@plt>
   14890:	ldr	r3, [fp, #-4]
   14894:	movw	lr, #1
   14898:	str	r0, [sp, #20]
   1489c:	mov	r0, lr
   148a0:	movw	r1, #0
   148a4:	ldr	r2, [sp, #20]
   148a8:	bl	1158c <error@plt>
   148ac:	b	148b0 <__assert_fail@plt+0x30d8>
   148b0:	bl	11664 <__errno_location@plt>
   148b4:	movw	lr, #0
   148b8:	str	lr, [r0]
   148bc:	str	lr, [fp, #-20]	; 0xffffffec
   148c0:	ldr	r0, [fp, #-8]
   148c4:	ldr	r2, [fp, #-12]
   148c8:	sub	r1, fp, #20
   148cc:	bl	11628 <strtoul@plt>
   148d0:	str	r0, [fp, #-16]
   148d4:	ldr	r0, [fp, #-16]
   148d8:	mvn	r1, #0
   148dc:	cmp	r1, r0
   148e0:	bne	148f8 <__assert_fail@plt+0x3120>
   148e4:	bl	11664 <__errno_location@plt>
   148e8:	ldr	r0, [r0]
   148ec:	movw	lr, #34	; 0x22
   148f0:	cmp	lr, r0
   148f4:	beq	14904 <__assert_fail@plt+0x312c>
   148f8:	ldr	r0, [fp, #-16]
   148fc:	cmp	r0, #255	; 0xff
   14900:	bls	14974 <__assert_fail@plt+0x319c>
   14904:	ldr	r0, [fp, #-12]
   14908:	movw	r1, #16
   1490c:	cmp	r1, r0
   14910:	bne	14944 <__assert_fail@plt+0x316c>
   14914:	movw	r0, #11326	; 0x2c3e
   14918:	movt	r0, #2
   1491c:	bl	1161c <gettext@plt>
   14920:	ldr	r3, [fp, #-4]
   14924:	movw	lr, #1
   14928:	str	r0, [sp, #16]
   1492c:	mov	r0, lr
   14930:	movw	r1, #0
   14934:	ldr	r2, [sp, #16]
   14938:	movw	lr, #255	; 0xff
   1493c:	str	lr, [sp]
   14940:	bl	1158c <error@plt>
   14944:	movw	r0, #11425	; 0x2ca1
   14948:	movt	r0, #2
   1494c:	bl	1161c <gettext@plt>
   14950:	ldr	r3, [fp, #-4]
   14954:	movw	lr, #1
   14958:	str	r0, [sp, #12]
   1495c:	mov	r0, lr
   14960:	movw	r1, #0
   14964:	ldr	r2, [sp, #12]
   14968:	movw	lr, #255	; 0xff
   1496c:	str	lr, [sp]
   14970:	bl	1158c <error@plt>
   14974:	ldr	r0, [fp, #-20]	; 0xffffffec
   14978:	ldrb	r0, [r0]
   1497c:	movw	r1, #0
   14980:	cmp	r1, r0
   14984:	beq	149b8 <__assert_fail@plt+0x31e0>
   14988:	movw	r0, #11524	; 0x2d04
   1498c:	movt	r0, #2
   14990:	bl	1161c <gettext@plt>
   14994:	ldr	r3, [fp, #-4]
   14998:	ldr	lr, [fp, #-20]	; 0xffffffec
   1499c:	movw	r1, #1
   149a0:	str	r0, [sp, #8]
   149a4:	mov	r0, r1
   149a8:	movw	r1, #0
   149ac:	ldr	r2, [sp, #8]
   149b0:	str	lr, [sp]
   149b4:	bl	1158c <error@plt>
   149b8:	ldr	r0, [fp, #-16]
   149bc:	and	r0, r0, #255	; 0xff
   149c0:	mov	sp, fp
   149c4:	pop	{fp, pc}
   149c8:	push	{fp, lr}
   149cc:	mov	fp, sp
   149d0:	movw	r0, #20976	; 0x51f0
   149d4:	movt	r0, #3
   149d8:	ldr	r0, [r0, #24]
   149dc:	movw	r1, #0
   149e0:	cmp	r0, r1
   149e4:	bne	14a30 <__assert_fail@plt+0x3258>
   149e8:	movw	r0, #20836	; 0x5164
   149ec:	movt	r0, #3
   149f0:	ldrb	r0, [r0]
   149f4:	tst	r0, #1
   149f8:	bne	14a30 <__assert_fail@plt+0x3258>
   149fc:	movw	r0, #21048	; 0x5238
   14a00:	movt	r0, #3
   14a04:	ldr	r0, [r0]
   14a08:	movw	r1, #20976	; 0x51f0
   14a0c:	movt	r1, #3
   14a10:	ldr	r1, [r1, #28]
   14a14:	cmp	r0, r1
   14a18:	beq	14a30 <__assert_fail@plt+0x3258>
   14a1c:	movw	r0, #20976	; 0x51f0
   14a20:	movt	r0, #3
   14a24:	ldr	r0, [r0]
   14a28:	cmp	r0, #0
   14a2c:	beq	14a34 <__assert_fail@plt+0x325c>
   14a30:	b	14a48 <__assert_fail@plt+0x3270>
   14a34:	movw	r0, #20976	; 0x51f0
   14a38:	movt	r0, #3
   14a3c:	movw	r1, #21048	; 0x5238
   14a40:	movt	r1, #3
   14a44:	bl	15af8 <__assert_fail@plt+0x4320>
   14a48:	pop	{fp, pc}
   14a4c:	push	{fp, lr}
   14a50:	mov	fp, sp
   14a54:	sub	sp, sp, #64	; 0x40
   14a58:	and	r0, r0, #1
   14a5c:	strb	r0, [fp, #-1]
   14a60:	str	r1, [fp, #-8]
   14a64:	movw	r0, #0
   14a68:	str	r0, [fp, #-12]
   14a6c:	movw	r0, #21116	; 0x527c
   14a70:	movt	r0, #3
   14a74:	ldr	r0, [r0]
   14a78:	cmp	r0, #0
   14a7c:	beq	14dcc <__assert_fail@plt+0x35f4>
   14a80:	movw	r0, #0
   14a84:	str	r0, [fp, #-28]	; 0xffffffe4
   14a88:	ldrb	r0, [fp, #-1]
   14a8c:	tst	r0, #1
   14a90:	bne	14ab0 <__assert_fail@plt+0x32d8>
   14a94:	ldr	r0, [fp, #-12]
   14a98:	ldr	r1, [fp, #-8]
   14a9c:	cmp	r0, r1
   14aa0:	bcc	14aac <__assert_fail@plt+0x32d4>
   14aa4:	movw	r0, #1
   14aa8:	str	r0, [fp, #-28]	; 0xffffffe4
   14aac:	b	14ab0 <__assert_fail@plt+0x32d8>
   14ab0:	movw	r0, #21120	; 0x5280
   14ab4:	movt	r0, #3
   14ab8:	movw	r1, #0
   14abc:	str	r1, [r0]
   14ac0:	b	14ac4 <__assert_fail@plt+0x32ec>
   14ac4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14ac8:	mvn	r0, #0
   14acc:	sub	r1, fp, #20
   14ad0:	bl	11550 <waitpid@plt>
   14ad4:	str	r0, [fp, #-24]	; 0xffffffe8
   14ad8:	cmn	r0, #1
   14adc:	bne	14b4c <__assert_fail@plt+0x3374>
   14ae0:	bl	11664 <__errno_location@plt>
   14ae4:	ldr	r0, [r0]
   14ae8:	cmp	r0, #4
   14aec:	beq	14b20 <__assert_fail@plt+0x3348>
   14af0:	bl	11664 <__errno_location@plt>
   14af4:	ldr	r1, [r0]
   14af8:	movw	r0, #12180	; 0x2f94
   14afc:	movt	r0, #2
   14b00:	str	r1, [sp, #32]
   14b04:	bl	1161c <gettext@plt>
   14b08:	movw	r1, #1
   14b0c:	str	r0, [sp, #28]
   14b10:	mov	r0, r1
   14b14:	ldr	r1, [sp, #32]
   14b18:	ldr	r2, [sp, #28]
   14b1c:	bl	1158c <error@plt>
   14b20:	movw	r0, #21120	; 0x5280
   14b24:	movt	r0, #3
   14b28:	ldr	r0, [r0]
   14b2c:	cmp	r0, #0
   14b30:	beq	14b48 <__assert_fail@plt+0x3370>
   14b34:	ldrb	r0, [fp, #-1]
   14b38:	tst	r0, #1
   14b3c:	bne	14b48 <__assert_fail@plt+0x3370>
   14b40:	movw	r0, #1
   14b44:	str	r0, [fp, #-28]	; 0xffffffe4
   14b48:	b	14ac4 <__assert_fail@plt+0x32ec>
   14b4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14b50:	cmp	r0, #0
   14b54:	beq	14bd0 <__assert_fail@plt+0x33f8>
   14b58:	movw	r0, #0
   14b5c:	str	r0, [fp, #-16]
   14b60:	ldr	r0, [fp, #-16]
   14b64:	movw	r1, #21124	; 0x5284
   14b68:	movt	r1, #3
   14b6c:	ldr	r1, [r1]
   14b70:	cmp	r0, r1
   14b74:	movw	r0, #0
   14b78:	str	r0, [sp, #24]
   14b7c:	bcs	14bac <__assert_fail@plt+0x33d4>
   14b80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14b84:	movw	r1, #21128	; 0x5288
   14b88:	movt	r1, #3
   14b8c:	ldr	r1, [r1]
   14b90:	ldr	r2, [fp, #-16]
   14b94:	add	r1, r1, r2, lsl #2
   14b98:	ldr	r1, [r1]
   14b9c:	cmp	r0, r1
   14ba0:	movw	r0, #0
   14ba4:	movne	r0, #1
   14ba8:	str	r0, [sp, #24]
   14bac:	ldr	r0, [sp, #24]
   14bb0:	tst	r0, #1
   14bb4:	beq	14bcc <__assert_fail@plt+0x33f4>
   14bb8:	b	14bbc <__assert_fail@plt+0x33e4>
   14bbc:	ldr	r0, [fp, #-16]
   14bc0:	add	r0, r0, #1
   14bc4:	str	r0, [fp, #-16]
   14bc8:	b	14b60 <__assert_fail@plt+0x3388>
   14bcc:	b	14bd0 <__assert_fail@plt+0x33f8>
   14bd0:	b	14bd4 <__assert_fail@plt+0x33fc>
   14bd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14bd8:	cmp	r0, #0
   14bdc:	movw	r0, #0
   14be0:	str	r0, [sp, #20]
   14be4:	beq	14c08 <__assert_fail@plt+0x3430>
   14be8:	ldr	r0, [fp, #-16]
   14bec:	movw	r1, #21124	; 0x5284
   14bf0:	movt	r1, #3
   14bf4:	ldr	r1, [r1]
   14bf8:	cmp	r0, r1
   14bfc:	movw	r0, #0
   14c00:	moveq	r0, #1
   14c04:	str	r0, [sp, #20]
   14c08:	ldr	r0, [sp, #20]
   14c0c:	tst	r0, #1
   14c10:	bne	14ac0 <__assert_fail@plt+0x32e8>
   14c14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14c18:	cmp	r0, #0
   14c1c:	bne	14c6c <__assert_fail@plt+0x3494>
   14c20:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14c24:	and	r0, r0, #1
   14c28:	cmp	r0, #0
   14c2c:	bne	14c64 <__assert_fail@plt+0x348c>
   14c30:	movw	r0, #12212	; 0x2fb4
   14c34:	movt	r0, #2
   14c38:	bl	1161c <gettext@plt>
   14c3c:	movw	lr, #21116	; 0x527c
   14c40:	movt	lr, #3
   14c44:	ldr	r3, [lr]
   14c48:	movw	lr, #0
   14c4c:	str	r0, [sp, #16]
   14c50:	mov	r0, lr
   14c54:	mov	r1, lr
   14c58:	ldr	r2, [sp, #16]
   14c5c:	bl	1158c <error@plt>
   14c60:	b	14c68 <__assert_fail@plt+0x3490>
   14c64:	b	14c68 <__assert_fail@plt+0x3490>
   14c68:	b	14dcc <__assert_fail@plt+0x35f4>
   14c6c:	movw	r0, #21128	; 0x5288
   14c70:	movt	r0, #3
   14c74:	ldr	r0, [r0]
   14c78:	ldr	r1, [fp, #-16]
   14c7c:	add	r0, r0, r1, lsl #2
   14c80:	movw	r1, #0
   14c84:	str	r1, [r0]
   14c88:	movw	r0, #21116	; 0x527c
   14c8c:	movt	r0, #3
   14c90:	ldr	r1, [r0]
   14c94:	mvn	r2, #0
   14c98:	add	r1, r1, r2
   14c9c:	str	r1, [r0]
   14ca0:	ldr	r0, [fp, #-12]
   14ca4:	add	r0, r0, #1
   14ca8:	str	r0, [fp, #-12]
   14cac:	ldr	r0, [fp, #-20]	; 0xffffffec
   14cb0:	and	r0, r0, #65280	; 0xff00
   14cb4:	asr	r0, r0, #8
   14cb8:	cmp	r0, #255	; 0xff
   14cbc:	bne	14cf4 <__assert_fail@plt+0x351c>
   14cc0:	movw	r0, #12255	; 0x2fdf
   14cc4:	movt	r0, #2
   14cc8:	bl	1161c <gettext@plt>
   14ccc:	movw	lr, #21048	; 0x5238
   14cd0:	movt	lr, #3
   14cd4:	ldr	lr, [lr, #4]
   14cd8:	ldr	r3, [lr]
   14cdc:	movw	lr, #124	; 0x7c
   14ce0:	str	r0, [sp, #12]
   14ce4:	mov	r0, lr
   14ce8:	movw	r1, #0
   14cec:	ldr	r2, [sp, #12]
   14cf0:	bl	1158c <error@plt>
   14cf4:	ldr	r0, [fp, #-20]	; 0xffffffec
   14cf8:	and	r0, r0, #255	; 0xff
   14cfc:	cmp	r0, #127	; 0x7f
   14d00:	bne	14d48 <__assert_fail@plt+0x3570>
   14d04:	movw	r0, #12292	; 0x3004
   14d08:	movt	r0, #2
   14d0c:	bl	1161c <gettext@plt>
   14d10:	movw	lr, #21048	; 0x5238
   14d14:	movt	lr, #3
   14d18:	ldr	lr, [lr, #4]
   14d1c:	ldr	r3, [lr]
   14d20:	ldr	lr, [fp, #-20]	; 0xffffffec
   14d24:	and	lr, lr, #65280	; 0xff00
   14d28:	asr	lr, lr, #8
   14d2c:	movw	r1, #125	; 0x7d
   14d30:	str	r0, [sp, #8]
   14d34:	mov	r0, r1
   14d38:	movw	r1, #0
   14d3c:	ldr	r2, [sp, #8]
   14d40:	str	lr, [sp]
   14d44:	bl	1158c <error@plt>
   14d48:	ldr	r0, [fp, #-20]	; 0xffffffec
   14d4c:	and	r0, r0, #127	; 0x7f
   14d50:	add	r0, r0, #1
   14d54:	sxtb	r0, r0
   14d58:	asr	r0, r0, #1
   14d5c:	cmp	r0, #0
   14d60:	ble	14da4 <__assert_fail@plt+0x35cc>
   14d64:	movw	r0, #12317	; 0x301d
   14d68:	movt	r0, #2
   14d6c:	bl	1161c <gettext@plt>
   14d70:	movw	lr, #21048	; 0x5238
   14d74:	movt	lr, #3
   14d78:	ldr	lr, [lr, #4]
   14d7c:	ldr	r3, [lr]
   14d80:	ldr	lr, [fp, #-20]	; 0xffffffec
   14d84:	and	lr, lr, #127	; 0x7f
   14d88:	movw	r1, #125	; 0x7d
   14d8c:	str	r0, [sp, #4]
   14d90:	mov	r0, r1
   14d94:	movw	r1, #0
   14d98:	ldr	r2, [sp, #4]
   14d9c:	str	lr, [sp]
   14da0:	bl	1158c <error@plt>
   14da4:	ldr	r0, [fp, #-20]	; 0xffffffec
   14da8:	and	r0, r0, #65280	; 0xff00
   14dac:	asr	r0, r0, #8
   14db0:	cmp	r0, #0
   14db4:	beq	14dc8 <__assert_fail@plt+0x35f0>
   14db8:	movw	r0, #21100	; 0x526c
   14dbc:	movt	r0, #3
   14dc0:	movw	r1, #123	; 0x7b
   14dc4:	str	r1, [r0]
   14dc8:	b	14a6c <__assert_fail@plt+0x3294>
   14dcc:	mov	sp, fp
   14dd0:	pop	{fp, pc}
   14dd4:	push	{fp, lr}
   14dd8:	mov	fp, sp
   14ddc:	sub	sp, sp, #72	; 0x48
   14de0:	and	r0, r0, #1
   14de4:	strb	r0, [fp, #-2]
   14de8:	movw	r0, #0
   14dec:	str	r0, [fp, #-8]
   14df0:	ldr	r0, [fp, #-8]
   14df4:	movw	r1, #21048	; 0x5238
   14df8:	movt	r1, #3
   14dfc:	ldr	r1, [r1]
   14e00:	sub	r1, r1, #1
   14e04:	cmp	r0, r1
   14e08:	bcs	14ecc <__assert_fail@plt+0x36f4>
   14e0c:	movw	r0, #20944	; 0x51d0
   14e10:	movt	r0, #3
   14e14:	ldr	r0, [r0]
   14e18:	ldr	r1, [fp, #-8]
   14e1c:	movw	r2, #13038	; 0x32ee
   14e20:	movt	r2, #2
   14e24:	movw	r3, #12350	; 0x303e
   14e28:	movt	r3, #2
   14e2c:	cmp	r1, #0
   14e30:	moveq	r3, r2
   14e34:	movw	r2, #21048	; 0x5238
   14e38:	movt	r2, #3
   14e3c:	ldr	r2, [r2, #4]
   14e40:	add	r1, r2, r1, lsl #2
   14e44:	ldr	r2, [r1]
   14e48:	movw	r1, #0
   14e4c:	str	r0, [fp, #-20]	; 0xffffffec
   14e50:	mov	r0, r1
   14e54:	movw	r1, #3
   14e58:	str	r3, [fp, #-24]	; 0xffffffe8
   14e5c:	bl	1b004 <__assert_fail@plt+0x982c>
   14e60:	ldr	r1, [fp, #-20]	; 0xffffffec
   14e64:	str	r0, [fp, #-28]	; 0xffffffe4
   14e68:	mov	r0, r1
   14e6c:	movw	r1, #12345	; 0x3039
   14e70:	movt	r1, #2
   14e74:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14e78:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14e7c:	bl	11658 <fprintf@plt>
   14e80:	cmp	r0, #0
   14e84:	bge	14eb8 <__assert_fail@plt+0x36e0>
   14e88:	bl	11664 <__errno_location@plt>
   14e8c:	ldr	r1, [r0]
   14e90:	movw	r0, #12352	; 0x3040
   14e94:	movt	r0, #2
   14e98:	str	r1, [fp, #-32]	; 0xffffffe0
   14e9c:	bl	1161c <gettext@plt>
   14ea0:	movw	r1, #1
   14ea4:	str	r0, [sp, #36]	; 0x24
   14ea8:	mov	r0, r1
   14eac:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14eb0:	ldr	r2, [sp, #36]	; 0x24
   14eb4:	bl	1158c <error@plt>
   14eb8:	b	14ebc <__assert_fail@plt+0x36e4>
   14ebc:	ldr	r0, [fp, #-8]
   14ec0:	add	r0, r0, #1
   14ec4:	str	r0, [fp, #-8]
   14ec8:	b	14df0 <__assert_fail@plt+0x3618>
   14ecc:	ldrb	r0, [fp, #-2]
   14ed0:	tst	r0, #1
   14ed4:	beq	15084 <__assert_fail@plt+0x38ac>
   14ed8:	movw	r0, #21132	; 0x528c
   14edc:	movt	r0, #3
   14ee0:	ldr	r0, [r0]
   14ee4:	movw	r1, #0
   14ee8:	cmp	r0, r1
   14eec:	bne	14f4c <__assert_fail@plt+0x3774>
   14ef0:	movw	r0, #12378	; 0x305a
   14ef4:	movt	r0, #2
   14ef8:	bl	14714 <__assert_fail@plt+0x2f3c>
   14efc:	movw	lr, #21132	; 0x528c
   14f00:	movt	lr, #3
   14f04:	str	r0, [lr]
   14f08:	ldr	r0, [lr]
   14f0c:	movw	lr, #0
   14f10:	cmp	r0, lr
   14f14:	bne	14f48 <__assert_fail@plt+0x3770>
   14f18:	bl	11664 <__errno_location@plt>
   14f1c:	ldr	r1, [r0]
   14f20:	movw	r0, #12387	; 0x3063
   14f24:	movt	r0, #2
   14f28:	str	r1, [sp, #32]
   14f2c:	bl	1161c <gettext@plt>
   14f30:	movw	r1, #1
   14f34:	str	r0, [sp, #28]
   14f38:	mov	r0, r1
   14f3c:	ldr	r1, [sp, #32]
   14f40:	ldr	r2, [sp, #28]
   14f44:	bl	1158c <error@plt>
   14f48:	b	14f4c <__assert_fail@plt+0x3774>
   14f4c:	movw	r0, #20944	; 0x51d0
   14f50:	movt	r0, #3
   14f54:	ldr	r1, [r0]
   14f58:	movw	r0, #12423	; 0x3087
   14f5c:	movt	r0, #2
   14f60:	bl	11790 <fputs@plt>
   14f64:	movw	r1, #20944	; 0x51d0
   14f68:	movt	r1, #3
   14f6c:	ldr	r1, [r1]
   14f70:	str	r0, [sp, #24]
   14f74:	mov	r0, r1
   14f78:	bl	1fb08 <__assert_fail@plt+0xe330>
   14f7c:	cmp	r0, #0
   14f80:	beq	14fb4 <__assert_fail@plt+0x37dc>
   14f84:	bl	11664 <__errno_location@plt>
   14f88:	ldr	r1, [r0]
   14f8c:	movw	r0, #12352	; 0x3040
   14f90:	movt	r0, #2
   14f94:	str	r1, [sp, #20]
   14f98:	bl	1161c <gettext@plt>
   14f9c:	movw	r1, #1
   14fa0:	str	r0, [sp, #16]
   14fa4:	mov	r0, r1
   14fa8:	ldr	r1, [sp, #20]
   14fac:	ldr	r2, [sp, #16]
   14fb0:	bl	1158c <error@plt>
   14fb4:	movw	r0, #21132	; 0x528c
   14fb8:	movt	r0, #3
   14fbc:	ldr	r0, [r0]
   14fc0:	bl	117b4 <getc@plt>
   14fc4:	str	r0, [fp, #-16]
   14fc8:	str	r0, [fp, #-12]
   14fcc:	ldr	r0, [fp, #-12]
   14fd0:	cmn	r0, #1
   14fd4:	movw	r0, #0
   14fd8:	str	r0, [sp, #12]
   14fdc:	beq	14ff4 <__assert_fail@plt+0x381c>
   14fe0:	ldr	r0, [fp, #-12]
   14fe4:	cmp	r0, #10
   14fe8:	movw	r0, #0
   14fec:	movne	r0, #1
   14ff0:	str	r0, [sp, #12]
   14ff4:	ldr	r0, [sp, #12]
   14ff8:	tst	r0, #1
   14ffc:	beq	15018 <__assert_fail@plt+0x3840>
   15000:	movw	r0, #21132	; 0x528c
   15004:	movt	r0, #3
   15008:	ldr	r0, [r0]
   1500c:	bl	117b4 <getc@plt>
   15010:	str	r0, [fp, #-12]
   15014:	b	14fcc <__assert_fail@plt+0x37f4>
   15018:	ldr	r0, [fp, #-12]
   1501c:	mvn	r1, #0
   15020:	cmp	r1, r0
   15024:	bne	15058 <__assert_fail@plt+0x3880>
   15028:	bl	11664 <__errno_location@plt>
   1502c:	ldr	r1, [r0]
   15030:	movw	r0, #12428	; 0x308c
   15034:	movt	r0, #2
   15038:	str	r1, [sp, #8]
   1503c:	bl	1161c <gettext@plt>
   15040:	movw	r1, #1
   15044:	str	r0, [sp, #4]
   15048:	mov	r0, r1
   1504c:	ldr	r1, [sp, #8]
   15050:	ldr	r2, [sp, #4]
   15054:	bl	1158c <error@plt>
   15058:	ldr	r0, [fp, #-16]
   1505c:	cmp	r0, #121	; 0x79
   15060:	beq	15070 <__assert_fail@plt+0x3898>
   15064:	ldr	r0, [fp, #-16]
   15068:	cmp	r0, #89	; 0x59
   1506c:	bne	15080 <__assert_fail@plt+0x38a8>
   15070:	movw	r0, #1
   15074:	and	r0, r0, #1
   15078:	strb	r0, [fp, #-1]
   1507c:	b	150a8 <__assert_fail@plt+0x38d0>
   15080:	b	1509c <__assert_fail@plt+0x38c4>
   15084:	movw	r0, #20944	; 0x51d0
   15088:	movt	r0, #3
   1508c:	ldr	r1, [r0]
   15090:	movw	r0, #10
   15094:	bl	11754 <putc@plt>
   15098:	str	r0, [sp]
   1509c:	movw	r0, #0
   150a0:	and	r0, r0, #1
   150a4:	strb	r0, [fp, #-1]
   150a8:	ldrb	r0, [fp, #-1]
   150ac:	and	r0, r0, #1
   150b0:	mov	sp, fp
   150b4:	pop	{fp, pc}
   150b8:	push	{fp, lr}
   150bc:	mov	fp, sp
   150c0:	sub	sp, sp, #48	; 0x30
   150c4:	bl	16b80 <__assert_fail@plt+0x53a8>
   150c8:	tst	r0, #1
   150cc:	beq	150d4 <__assert_fail@plt+0x38fc>
   150d0:	bl	16bd0 <__assert_fail@plt+0x53f8>
   150d4:	movw	r0, #0
   150d8:	bl	15264 <__assert_fail@plt+0x3a8c>
   150dc:	str	r0, [fp, #-4]
   150e0:	ldr	r0, [fp, #-4]
   150e4:	bl	15408 <__assert_fail@plt+0x3c30>
   150e8:	movw	r0, #21040	; 0x5230
   150ec:	movt	r0, #3
   150f0:	ldr	r0, [r0]
   150f4:	cmp	r0, #0
   150f8:	beq	15110 <__assert_fail@plt+0x3938>
   150fc:	movw	r0, #21029	; 0x5225
   15100:	movt	r0, #3
   15104:	ldrb	r0, [r0]
   15108:	tst	r0, #1
   1510c:	beq	1525c <__assert_fail@plt+0x3a84>
   15110:	movw	r0, #21029	; 0x5225
   15114:	movt	r0, #3
   15118:	ldrb	r0, [r0]
   1511c:	tst	r0, #1
   15120:	movw	r0, #12454	; 0x30a6
   15124:	movt	r0, #2
   15128:	movw	r1, #12378	; 0x305a
   1512c:	movt	r1, #2
   15130:	movne	r0, r1
   15134:	str	r0, [fp, #-12]
   15138:	movw	r0, #0
   1513c:	bl	117c0 <close@plt>
   15140:	ldr	r1, [fp, #-12]
   15144:	str	r0, [fp, #-16]
   15148:	mov	r0, r1
   1514c:	movw	r1, #0
   15150:	bl	179ac <__assert_fail@plt+0x61d4>
   15154:	str	r0, [fp, #-8]
   15158:	cmp	r0, #0
   1515c:	bge	151f8 <__assert_fail@plt+0x3a20>
   15160:	movw	r0, #21029	; 0x5225
   15164:	movt	r0, #3
   15168:	ldrb	r0, [r0]
   1516c:	tst	r0, #1
   15170:	beq	151b4 <__assert_fail@plt+0x39dc>
   15174:	bl	11664 <__errno_location@plt>
   15178:	ldr	r1, [r0]
   1517c:	ldr	r2, [fp, #-12]
   15180:	movw	r0, #0
   15184:	movw	lr, #8
   15188:	str	r1, [fp, #-20]	; 0xffffffec
   1518c:	mov	r1, lr
   15190:	bl	1b004 <__assert_fail@plt+0x982c>
   15194:	movw	r1, #1
   15198:	str	r0, [sp, #24]
   1519c:	mov	r0, r1
   151a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   151a4:	movw	r2, #17319	; 0x43a7
   151a8:	movt	r2, #2
   151ac:	ldr	r3, [sp, #24]
   151b0:	bl	1158c <error@plt>
   151b4:	bl	11664 <__errno_location@plt>
   151b8:	ldr	r1, [r0]
   151bc:	ldr	r2, [fp, #-12]
   151c0:	movw	r0, #0
   151c4:	movw	lr, #8
   151c8:	str	r1, [sp, #20]
   151cc:	mov	r1, lr
   151d0:	bl	1b004 <__assert_fail@plt+0x982c>
   151d4:	movw	r1, #0
   151d8:	str	r0, [sp, #16]
   151dc:	mov	r0, r1
   151e0:	ldr	r1, [sp, #20]
   151e4:	movw	r2, #17319	; 0x43a7
   151e8:	movt	r2, #2
   151ec:	ldr	r3, [sp, #16]
   151f0:	bl	1158c <error@plt>
   151f4:	b	151f8 <__assert_fail@plt+0x3a20>
   151f8:	ldr	r0, [fp, #-8]
   151fc:	movw	r1, #0
   15200:	cmp	r1, r0
   15204:	bge	15258 <__assert_fail@plt+0x3a80>
   15208:	ldr	r0, [fp, #-8]
   1520c:	movw	r1, #0
   15210:	bl	114e4 <dup2@plt>
   15214:	cmp	r0, #0
   15218:	beq	1524c <__assert_fail@plt+0x3a74>
   1521c:	bl	11664 <__errno_location@plt>
   15220:	ldr	r1, [r0]
   15224:	movw	r0, #12464	; 0x30b0
   15228:	movt	r0, #2
   1522c:	str	r1, [sp, #12]
   15230:	bl	1161c <gettext@plt>
   15234:	movw	r1, #1
   15238:	str	r0, [sp, #8]
   1523c:	mov	r0, r1
   15240:	ldr	r1, [sp, #12]
   15244:	ldr	r2, [sp, #8]
   15248:	bl	1158c <error@plt>
   1524c:	ldr	r0, [fp, #-8]
   15250:	bl	117c0 <close@plt>
   15254:	str	r0, [sp, #4]
   15258:	b	1525c <__assert_fail@plt+0x3a84>
   1525c:	mov	sp, fp
   15260:	pop	{fp, pc}
   15264:	push	{fp, lr}
   15268:	mov	fp, sp
   1526c:	sub	sp, sp, #16
   15270:	str	r0, [fp, #-4]
   15274:	movw	r0, #0
   15278:	str	r0, [sp, #8]
   1527c:	ldr	r0, [sp, #8]
   15280:	movw	r1, #21124	; 0x5284
   15284:	movt	r1, #3
   15288:	ldr	r1, [r1]
   1528c:	cmp	r0, r1
   15290:	movw	r0, #0
   15294:	str	r0, [sp]
   15298:	bcs	152c4 <__assert_fail@plt+0x3aec>
   1529c:	movw	r0, #21128	; 0x5288
   152a0:	movt	r0, #3
   152a4:	ldr	r0, [r0]
   152a8:	ldr	r1, [sp, #8]
   152ac:	add	r0, r0, r1, lsl #2
   152b0:	ldr	r0, [r0]
   152b4:	cmp	r0, #0
   152b8:	movw	r0, #0
   152bc:	movne	r0, #1
   152c0:	str	r0, [sp]
   152c4:	ldr	r0, [sp]
   152c8:	tst	r0, #1
   152cc:	beq	152e4 <__assert_fail@plt+0x3b0c>
   152d0:	b	152d4 <__assert_fail@plt+0x3afc>
   152d4:	ldr	r0, [sp, #8]
   152d8:	add	r0, r0, #1
   152dc:	str	r0, [sp, #8]
   152e0:	b	1527c <__assert_fail@plt+0x3aa4>
   152e4:	ldr	r0, [sp, #8]
   152e8:	movw	r1, #21124	; 0x5284
   152ec:	movt	r1, #3
   152f0:	ldr	r1, [r1]
   152f4:	cmp	r0, r1
   152f8:	bne	15374 <__assert_fail@plt+0x3b9c>
   152fc:	movw	r0, #21128	; 0x5288
   15300:	movt	r0, #3
   15304:	ldr	r0, [r0]
   15308:	movw	r1, #21124	; 0x5284
   1530c:	movt	r1, #3
   15310:	movw	r2, #4
   15314:	bl	1c308 <__assert_fail@plt+0xab30>
   15318:	movw	r1, #21128	; 0x5288
   1531c:	movt	r1, #3
   15320:	str	r0, [r1]
   15324:	ldr	r0, [sp, #8]
   15328:	str	r0, [sp, #4]
   1532c:	ldr	r0, [sp, #4]
   15330:	movw	r1, #21124	; 0x5284
   15334:	movt	r1, #3
   15338:	ldr	r1, [r1]
   1533c:	cmp	r0, r1
   15340:	bcs	15370 <__assert_fail@plt+0x3b98>
   15344:	movw	r0, #21128	; 0x5288
   15348:	movt	r0, #3
   1534c:	ldr	r0, [r0]
   15350:	ldr	r1, [sp, #4]
   15354:	add	r0, r0, r1, lsl #2
   15358:	movw	r1, #0
   1535c:	str	r1, [r0]
   15360:	ldr	r0, [sp, #4]
   15364:	add	r0, r0, #1
   15368:	str	r0, [sp, #4]
   1536c:	b	1532c <__assert_fail@plt+0x3b54>
   15370:	b	15374 <__assert_fail@plt+0x3b9c>
   15374:	movw	r0, #21128	; 0x5288
   15378:	movt	r0, #3
   1537c:	ldr	r0, [r0]
   15380:	ldr	r1, [sp, #8]
   15384:	add	r0, r0, r1, lsl #2
   15388:	ldr	r0, [r0]
   1538c:	movw	r1, #0
   15390:	cmp	r1, r0
   15394:	bne	1539c <__assert_fail@plt+0x3bc4>
   15398:	b	153bc <__assert_fail@plt+0x3be4>
   1539c:	movw	r0, #12650	; 0x316a
   153a0:	movt	r0, #2
   153a4:	movw	r1, #9761	; 0x2621
   153a8:	movt	r1, #2
   153ac:	movw	r2, #1477	; 0x5c5
   153b0:	movw	r3, #12663	; 0x3177
   153b4:	movt	r3, #2
   153b8:	bl	117d8 <__assert_fail@plt>
   153bc:	ldr	r0, [fp, #-4]
   153c0:	movw	r1, #21128	; 0x5288
   153c4:	movt	r1, #3
   153c8:	ldr	r1, [r1]
   153cc:	ldr	r2, [sp, #8]
   153d0:	add	r1, r1, r2, lsl #2
   153d4:	str	r0, [r1]
   153d8:	movw	r0, #21116	; 0x527c
   153dc:	movt	r0, #3
   153e0:	ldr	r1, [r0]
   153e4:	add	r1, r1, #1
   153e8:	str	r1, [r0]
   153ec:	movw	r0, #21096	; 0x5268
   153f0:	movt	r0, #3
   153f4:	movw	r1, #1
   153f8:	strb	r1, [r0]
   153fc:	ldr	r0, [sp, #8]
   15400:	mov	sp, fp
   15404:	pop	{fp, pc}
   15408:	push	{fp, lr}
   1540c:	mov	fp, sp
   15410:	sub	sp, sp, #32
   15414:	add	r1, sp, #8
   15418:	str	r0, [fp, #-4]
   1541c:	ldr	r3, [fp, #-4]
   15420:	mov	r0, r1
   15424:	movw	r1, #19
   15428:	movw	r2, #12519	; 0x30e7
   1542c:	movt	r2, #2
   15430:	bl	11670 <snprintf@plt>
   15434:	cmp	r0, #19
   15438:	bhi	15440 <__assert_fail@plt+0x3c68>
   1543c:	b	15460 <__assert_fail@plt+0x3c88>
   15440:	movw	r0, #12522	; 0x30ea
   15444:	movt	r0, #2
   15448:	movw	r1, #9761	; 0x2621
   1544c:	movt	r1, #2
   15450:	movw	r2, #1190	; 0x4a6
   15454:	movw	r3, #12580	; 0x3124
   15458:	movt	r3, #2
   1545c:	bl	117d8 <__assert_fail@plt>
   15460:	movw	r0, #21032	; 0x5228
   15464:	movt	r0, #3
   15468:	ldr	r0, [r0]
   1546c:	movw	r1, #0
   15470:	cmp	r0, r1
   15474:	beq	154d8 <__assert_fail@plt+0x3d00>
   15478:	add	r1, sp, #8
   1547c:	movw	r0, #21032	; 0x5228
   15480:	movt	r0, #3
   15484:	ldr	r0, [r0]
   15488:	movw	r2, #1
   1548c:	bl	1164c <setenv@plt>
   15490:	cmp	r0, #0
   15494:	bge	154d4 <__assert_fail@plt+0x3cfc>
   15498:	bl	11664 <__errno_location@plt>
   1549c:	ldr	r1, [r0]
   154a0:	movw	r0, #12612	; 0x3144
   154a4:	movt	r0, #2
   154a8:	str	r1, [sp, #4]
   154ac:	bl	1161c <gettext@plt>
   154b0:	movw	r1, #21032	; 0x5228
   154b4:	movt	r1, #3
   154b8:	ldr	r3, [r1]
   154bc:	movw	r1, #0
   154c0:	str	r0, [sp]
   154c4:	mov	r0, r1
   154c8:	ldr	r1, [sp, #4]
   154cc:	ldr	r2, [sp]
   154d0:	bl	1158c <error@plt>
   154d4:	b	154d8 <__assert_fail@plt+0x3d00>
   154d8:	mov	sp, fp
   154dc:	pop	{fp, pc}
   154e0:	push	{r4, r5, r6, sl, fp, lr}
   154e4:	add	fp, sp, #16
   154e8:	sub	sp, sp, #88	; 0x58
   154ec:	ldr	ip, [fp, #24]
   154f0:	ldr	lr, [fp, #20]
   154f4:	ldr	r4, [fp, #16]
   154f8:	ldr	r5, [fp, #12]
   154fc:	ldr	r6, [fp, #8]
   15500:	str	r0, [fp, #-20]	; 0xffffffec
   15504:	str	r1, [fp, #-24]	; 0xffffffe8
   15508:	str	r2, [fp, #-28]	; 0xffffffe4
   1550c:	str	r3, [fp, #-32]	; 0xffffffe0
   15510:	ldr	r0, [fp, #-20]	; 0xffffffec
   15514:	ldr	r0, [r0, #12]
   15518:	sub	r0, r0, #1
   1551c:	str	r0, [fp, #-40]	; 0xffffffd8
   15520:	movw	r0, #21140	; 0x5294
   15524:	movt	r0, #3
   15528:	ldr	r0, [r0]
   1552c:	movw	r1, #0
   15530:	cmp	r0, r1
   15534:	str	r6, [sp, #52]	; 0x34
   15538:	str	lr, [sp, #48]	; 0x30
   1553c:	str	r4, [sp, #44]	; 0x2c
   15540:	str	r5, [sp, #40]	; 0x28
   15544:	str	ip, [sp, #36]	; 0x24
   15548:	bne	15568 <__assert_fail@plt+0x3d90>
   1554c:	ldr	r0, [fp, #-20]	; 0xffffffec
   15550:	ldr	r0, [r0, #12]
   15554:	add	r0, r0, #1
   15558:	bl	1c12c <__assert_fail@plt+0xa954>
   1555c:	movw	lr, #21140	; 0x5294
   15560:	movt	lr, #3
   15564:	str	r0, [lr]
   15568:	movw	r0, #21140	; 0x5294
   1556c:	movt	r0, #3
   15570:	ldr	r0, [r0]
   15574:	str	r0, [fp, #-36]	; 0xffffffdc
   15578:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1557c:	ldr	r1, [fp, #-20]	; 0xffffffec
   15580:	ldr	r1, [r1, #24]
   15584:	bl	17a30 <__assert_fail@plt+0x6258>
   15588:	str	r0, [fp, #-48]	; 0xffffffd0
   1558c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15590:	movw	r1, #0
   15594:	cmp	r0, r1
   15598:	beq	155b0 <__assert_fail@plt+0x3dd8>
   1559c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   155a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   155a4:	sub	r0, r0, r1
   155a8:	str	r0, [fp, #-44]	; 0xffffffd4
   155ac:	b	155b8 <__assert_fail@plt+0x3de0>
   155b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   155b4:	str	r0, [fp, #-44]	; 0xffffffd4
   155b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   155bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   155c0:	cmp	r0, r1
   155c4:	bhi	155cc <__assert_fail@plt+0x3df4>
   155c8:	b	156f0 <__assert_fail@plt+0x3f18>
   155cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   155d0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   155d4:	sub	r0, r1, r0
   155d8:	str	r0, [fp, #-40]	; 0xffffffd8
   155dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   155e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   155e4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   155e8:	bl	11694 <strncpy@plt>
   155ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   155f0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   155f4:	add	r1, r2, r1
   155f8:	str	r1, [fp, #-36]	; 0xffffffdc
   155fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15600:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15604:	add	r1, r2, r1
   15608:	str	r1, [fp, #-28]	; 0xffffffe4
   1560c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15610:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15614:	sub	r1, r2, r1
   15618:	str	r1, [fp, #-32]	; 0xffffffe0
   1561c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15620:	movw	r2, #0
   15624:	cmp	r1, r2
   15628:	str	r0, [sp, #32]
   1562c:	beq	156dc <__assert_fail@plt+0x3f04>
   15630:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15634:	ldr	r1, [fp, #20]
   15638:	ldr	r2, [fp, #12]
   1563c:	add	r1, r1, r2
   15640:	cmp	r0, r1
   15644:	bhi	1564c <__assert_fail@plt+0x3e74>
   15648:	b	156f0 <__assert_fail@plt+0x3f18>
   1564c:	ldr	r0, [fp, #20]
   15650:	ldr	r1, [fp, #12]
   15654:	add	r0, r0, r1
   15658:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1565c:	sub	r0, r1, r0
   15660:	str	r0, [fp, #-40]	; 0xffffffd8
   15664:	ldr	r0, [fp, #8]
   15668:	movw	r1, #0
   1566c:	cmp	r0, r1
   15670:	beq	15694 <__assert_fail@plt+0x3ebc>
   15674:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15678:	ldr	r1, [fp, #8]
   1567c:	bl	11568 <strcpy@plt>
   15680:	ldr	r1, [fp, #12]
   15684:	ldr	lr, [fp, #-36]	; 0xffffffdc
   15688:	add	r1, lr, r1
   1568c:	str	r1, [fp, #-36]	; 0xffffffdc
   15690:	str	r0, [sp, #28]
   15694:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15698:	ldr	r1, [fp, #16]
   1569c:	bl	11568 <strcpy@plt>
   156a0:	ldr	r1, [fp, #20]
   156a4:	ldr	lr, [fp, #-36]	; 0xffffffdc
   156a8:	add	r1, lr, r1
   156ac:	str	r1, [fp, #-36]	; 0xffffffdc
   156b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   156b4:	ldr	r1, [r1, #20]
   156b8:	ldr	lr, [fp, #-28]	; 0xffffffe4
   156bc:	add	r1, lr, r1
   156c0:	str	r1, [fp, #-28]	; 0xffffffe4
   156c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   156c8:	ldr	r1, [r1, #20]
   156cc:	ldr	lr, [fp, #-32]	; 0xffffffe0
   156d0:	sub	r1, lr, r1
   156d4:	str	r1, [fp, #-32]	; 0xffffffe0
   156d8:	str	r0, [sp, #24]
   156dc:	b	156e0 <__assert_fail@plt+0x3f08>
   156e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   156e4:	ldrsb	r0, [r0]
   156e8:	cmp	r0, #0
   156ec:	bne	15578 <__assert_fail@plt+0x3da0>
   156f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   156f4:	ldrsb	r0, [r0]
   156f8:	cmp	r0, #0
   156fc:	beq	15724 <__assert_fail@plt+0x3f4c>
   15700:	movw	r0, #16040	; 0x3ea8
   15704:	movt	r0, #2
   15708:	bl	1161c <gettext@plt>
   1570c:	movw	lr, #1
   15710:	str	r0, [sp, #20]
   15714:	mov	r0, lr
   15718:	movw	r1, #0
   1571c:	ldr	r2, [sp, #20]
   15720:	bl	1158c <error@plt>
   15724:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15728:	add	r1, r0, #1
   1572c:	str	r1, [fp, #-36]	; 0xffffffdc
   15730:	movw	r1, #0
   15734:	strb	r1, [r0]
   15738:	ldr	r0, [fp, #-20]	; 0xffffffec
   1573c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15740:	movw	r2, #21140	; 0x5294
   15744:	movt	r2, #3
   15748:	ldr	r3, [r2]
   1574c:	ldr	ip, [fp, #-36]	; 0xffffffdc
   15750:	ldr	r2, [r2]
   15754:	sub	r2, ip, r2
   15758:	ldr	ip, [fp, #24]
   1575c:	str	r2, [sp, #16]
   15760:	mov	r2, r3
   15764:	ldr	r3, [sp, #16]
   15768:	movw	lr, #0
   1576c:	str	lr, [sp]
   15770:	str	lr, [sp, #4]
   15774:	str	ip, [sp, #8]
   15778:	bl	15784 <__assert_fail@plt+0x3fac>
   1577c:	sub	sp, fp, #16
   15780:	pop	{r4, r5, r6, sl, fp, pc}
   15784:	push	{r4, sl, fp, lr}
   15788:	add	fp, sp, #8
   1578c:	sub	sp, sp, #56	; 0x38
   15790:	ldr	ip, [fp, #16]
   15794:	ldr	lr, [fp, #12]
   15798:	ldr	r4, [fp, #8]
   1579c:	str	r0, [fp, #-12]
   157a0:	str	r1, [fp, #-16]
   157a4:	str	r2, [fp, #-20]	; 0xffffffec
   157a8:	str	r3, [fp, #-24]	; 0xffffffe8
   157ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   157b0:	movw	r1, #20840	; 0x5168
   157b4:	movt	r1, #3
   157b8:	ldr	r1, [r1]
   157bc:	cmp	r0, r1
   157c0:	movw	r0, #0
   157c4:	moveq	r0, #1
   157c8:	and	r0, r0, #1
   157cc:	str	r0, [fp, #-28]	; 0xffffffe4
   157d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   157d4:	movw	r1, #0
   157d8:	cmp	r0, r1
   157dc:	str	r4, [sp, #32]
   157e0:	str	lr, [sp, #28]
   157e4:	str	ip, [sp, #24]
   157e8:	beq	157f0 <__assert_fail@plt+0x4018>
   157ec:	b	15810 <__assert_fail@plt+0x4038>
   157f0:	movw	r0, #16251	; 0x3f7b
   157f4:	movt	r0, #2
   157f8:	movw	r1, #16077	; 0x3ecd
   157fc:	movt	r1, #2
   15800:	movw	r2, #341	; 0x155
   15804:	movw	r3, #16263	; 0x3f87
   15808:	movt	r3, #2
   1580c:	bl	117d8 <__assert_fail@plt>
   15810:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15814:	cmp	r0, #0
   15818:	bne	15928 <__assert_fail@plt+0x4150>
   1581c:	ldr	r0, [fp, #-16]
   15820:	ldr	r0, [r0, #16]
   15824:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15828:	add	r0, r0, r1
   1582c:	ldr	r1, [fp, #12]
   15830:	add	r0, r0, r1
   15834:	ldr	r1, [fp, #-12]
   15838:	ldr	r1, [r1, #12]
   1583c:	cmp	r0, r1
   15840:	bls	15900 <__assert_fail@plt+0x4128>
   15844:	ldr	r0, [fp, #16]
   15848:	cmp	r0, #0
   1584c:	bne	15868 <__assert_fail@plt+0x4090>
   15850:	ldr	r0, [fp, #-16]
   15854:	ldr	r0, [r0]
   15858:	ldr	r1, [fp, #-12]
   1585c:	ldr	r1, [r1, #28]
   15860:	cmp	r0, r1
   15864:	bne	1588c <__assert_fail@plt+0x40b4>
   15868:	movw	r0, #16381	; 0x3ffd
   1586c:	movt	r0, #2
   15870:	bl	1161c <gettext@plt>
   15874:	movw	lr, #1
   15878:	str	r0, [sp, #20]
   1587c:	mov	r0, lr
   15880:	movw	r1, #0
   15884:	ldr	r2, [sp, #20]
   15888:	bl	1158c <error@plt>
   1588c:	ldr	r0, [fp, #-12]
   15890:	ldr	r0, [r0, #24]
   15894:	movw	r1, #0
   15898:	cmp	r0, r1
   1589c:	bne	158d0 <__assert_fail@plt+0x40f8>
   158a0:	ldr	r0, [fp, #-12]
   158a4:	ldr	r0, [r0]
   158a8:	cmp	r0, #0
   158ac:	beq	158f4 <__assert_fail@plt+0x411c>
   158b0:	ldr	r0, [fp, #-12]
   158b4:	ldr	r0, [r0, #36]	; 0x24
   158b8:	cmp	r0, #0
   158bc:	bne	158d0 <__assert_fail@plt+0x40f8>
   158c0:	ldr	r0, [fp, #-12]
   158c4:	ldr	r0, [r0, #40]	; 0x28
   158c8:	cmp	r0, #0
   158cc:	beq	158f4 <__assert_fail@plt+0x411c>
   158d0:	movw	r0, #16440	; 0x4038
   158d4:	movt	r0, #2
   158d8:	bl	1161c <gettext@plt>
   158dc:	movw	lr, #1
   158e0:	str	r0, [sp, #16]
   158e4:	mov	r0, lr
   158e8:	movw	r1, #0
   158ec:	ldr	r2, [sp, #16]
   158f0:	bl	1158c <error@plt>
   158f4:	ldr	r0, [fp, #-12]
   158f8:	ldr	r1, [fp, #-16]
   158fc:	bl	15af8 <__assert_fail@plt+0x4320>
   15900:	ldr	r0, [fp, #16]
   15904:	ldr	r1, [fp, #-12]
   15908:	ldr	r2, [fp, #-16]
   1590c:	bl	160b4 <__assert_fail@plt+0x48dc>
   15910:	cmp	r0, #0
   15914:	beq	15924 <__assert_fail@plt+0x414c>
   15918:	ldr	r0, [fp, #-12]
   1591c:	ldr	r1, [fp, #-16]
   15920:	bl	15af8 <__assert_fail@plt+0x4320>
   15924:	b	15928 <__assert_fail@plt+0x4150>
   15928:	ldr	r0, [fp, #16]
   1592c:	cmp	r0, #0
   15930:	bne	15940 <__assert_fail@plt+0x4168>
   15934:	ldr	r0, [fp, #-16]
   15938:	movw	r1, #1
   1593c:	str	r1, [r0, #28]
   15940:	ldr	r0, [fp, #-16]
   15944:	ldr	r0, [r0]
   15948:	ldr	r1, [fp, #-16]
   1594c:	ldr	r1, [r1, #8]
   15950:	cmp	r0, r1
   15954:	bcc	159d0 <__assert_fail@plt+0x41f8>
   15958:	ldr	r0, [fp, #-16]
   1595c:	ldr	r0, [r0, #4]
   15960:	movw	r1, #0
   15964:	cmp	r0, r1
   15968:	bne	15994 <__assert_fail@plt+0x41bc>
   1596c:	ldr	r0, [fp, #-16]
   15970:	mov	r1, #64	; 0x40
   15974:	str	r1, [r0, #8]
   15978:	ldr	r0, [fp, #-16]
   1597c:	ldr	r0, [r0, #8]
   15980:	lsl	r0, r0, #2
   15984:	bl	1c12c <__assert_fail@plt+0xa954>
   15988:	ldr	r1, [fp, #-16]
   1598c:	str	r0, [r1, #4]
   15990:	b	159cc <__assert_fail@plt+0x41f4>
   15994:	ldr	r0, [fp, #-16]
   15998:	ldr	r1, [r0, #8]
   1599c:	lsl	r1, r1, #1
   159a0:	str	r1, [r0, #8]
   159a4:	ldr	r0, [fp, #-16]
   159a8:	ldr	r1, [r0, #4]
   159ac:	ldr	r0, [r0, #8]
   159b0:	lsl	r0, r0, #2
   159b4:	str	r0, [sp, #12]
   159b8:	mov	r0, r1
   159bc:	ldr	r1, [sp, #12]
   159c0:	bl	1c1c4 <__assert_fail@plt+0xa9ec>
   159c4:	ldr	r1, [fp, #-16]
   159c8:	str	r0, [r1, #4]
   159cc:	b	159d0 <__assert_fail@plt+0x41f8>
   159d0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   159d4:	cmp	r0, #0
   159d8:	beq	15a00 <__assert_fail@plt+0x4228>
   159dc:	ldr	r0, [fp, #-16]
   159e0:	ldr	r1, [r0]
   159e4:	ldr	r2, [r0, #4]
   159e8:	add	r3, r1, #1
   159ec:	str	r3, [r0]
   159f0:	add	r0, r2, r1, lsl #2
   159f4:	movw	r1, #0
   159f8:	str	r1, [r0]
   159fc:	b	15ad4 <__assert_fail@plt+0x42fc>
   15a00:	ldr	r0, [fp, #-16]
   15a04:	ldr	r1, [r0]
   15a08:	ldr	r2, [r0, #4]
   15a0c:	ldr	r3, [r0, #12]
   15a10:	ldr	ip, [r0, #16]
   15a14:	add	r3, r3, ip
   15a18:	add	ip, r1, #1
   15a1c:	str	ip, [r0]
   15a20:	add	r0, r2, r1, lsl #2
   15a24:	str	r3, [r0]
   15a28:	ldr	r0, [fp, #8]
   15a2c:	movw	r1, #0
   15a30:	cmp	r0, r1
   15a34:	beq	15a6c <__assert_fail@plt+0x4294>
   15a38:	ldr	r0, [fp, #-16]
   15a3c:	ldr	r0, [r0, #12]
   15a40:	ldr	r1, [fp, #-16]
   15a44:	ldr	r1, [r1, #16]
   15a48:	add	r0, r0, r1
   15a4c:	ldr	r1, [fp, #8]
   15a50:	bl	11568 <strcpy@plt>
   15a54:	ldr	r1, [fp, #12]
   15a58:	ldr	lr, [fp, #-16]
   15a5c:	ldr	r2, [lr, #16]
   15a60:	add	r1, r2, r1
   15a64:	str	r1, [lr, #16]
   15a68:	str	r0, [sp, #8]
   15a6c:	ldr	r0, [fp, #-16]
   15a70:	ldr	r0, [r0, #12]
   15a74:	ldr	r1, [fp, #-16]
   15a78:	ldr	r1, [r1, #16]
   15a7c:	add	r0, r0, r1
   15a80:	ldr	r1, [fp, #-20]	; 0xffffffec
   15a84:	bl	11568 <strcpy@plt>
   15a88:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15a8c:	ldr	lr, [fp, #-16]
   15a90:	ldr	r2, [lr, #16]
   15a94:	add	r1, r2, r1
   15a98:	str	r1, [lr, #16]
   15a9c:	ldr	r1, [fp, #16]
   15aa0:	ldr	r2, [fp, #-12]
   15aa4:	ldr	lr, [fp, #-16]
   15aa8:	str	r0, [sp, #4]
   15aac:	mov	r0, r1
   15ab0:	mov	r1, r2
   15ab4:	mov	r2, lr
   15ab8:	bl	160b4 <__assert_fail@plt+0x48dc>
   15abc:	cmp	r0, #0
   15ac0:	beq	15ad0 <__assert_fail@plt+0x42f8>
   15ac4:	ldr	r0, [fp, #-12]
   15ac8:	ldr	r1, [fp, #-16]
   15acc:	bl	15af8 <__assert_fail@plt+0x4320>
   15ad0:	b	15ad4 <__assert_fail@plt+0x42fc>
   15ad4:	ldr	r0, [fp, #16]
   15ad8:	cmp	r0, #0
   15adc:	beq	15af0 <__assert_fail@plt+0x4318>
   15ae0:	ldr	r0, [fp, #-16]
   15ae4:	ldr	r0, [r0, #16]
   15ae8:	ldr	r1, [fp, #-16]
   15aec:	str	r0, [r1, #20]
   15af0:	sub	sp, fp, #8
   15af4:	pop	{r4, sl, fp, pc}
   15af8:	push	{fp, lr}
   15afc:	mov	fp, sp
   15b00:	sub	sp, sp, #40	; 0x28
   15b04:	str	r0, [fp, #-4]
   15b08:	str	r1, [fp, #-8]
   15b0c:	ldr	r0, [fp, #-4]
   15b10:	ldr	r1, [fp, #-8]
   15b14:	bl	15cfc <__assert_fail@plt+0x4524>
   15b18:	ldr	r0, [fp, #-8]
   15b1c:	ldr	r0, [r0]
   15b20:	cmp	r0, #0
   15b24:	bls	15b2c <__assert_fail@plt+0x4354>
   15b28:	b	15b4c <__assert_fail@plt+0x4374>
   15b2c:	movw	r0, #16057	; 0x3eb9
   15b30:	movt	r0, #2
   15b34:	movw	r1, #16077	; 0x3ecd
   15b38:	movt	r1, #2
   15b3c:	movw	r2, #261	; 0x105
   15b40:	movw	r3, #16088	; 0x3ed8
   15b44:	movt	r3, #2
   15b48:	bl	117d8 <__assert_fail@plt>
   15b4c:	ldr	r0, [fp, #-8]
   15b50:	ldr	r1, [r0]
   15b54:	ldr	r0, [r0, #4]
   15b58:	sub	r1, r1, #1
   15b5c:	add	r0, r0, r1, lsl #2
   15b60:	ldr	r0, [r0]
   15b64:	movw	r1, #0
   15b68:	cmp	r0, r1
   15b6c:	bne	15b74 <__assert_fail@plt+0x439c>
   15b70:	b	15b94 <__assert_fail@plt+0x43bc>
   15b74:	movw	r0, #16156	; 0x3f1c
   15b78:	movt	r0, #2
   15b7c:	movw	r1, #16077	; 0x3ecd
   15b80:	movt	r1, #2
   15b84:	movw	r2, #262	; 0x106
   15b88:	movw	r3, #16088	; 0x3ed8
   15b8c:	movt	r3, #2
   15b90:	bl	117d8 <__assert_fail@plt>
   15b94:	ldr	r0, [fp, #-8]
   15b98:	ldr	r0, [r0]
   15b9c:	add	r0, r0, #1
   15ba0:	lsl	r0, r0, #2
   15ba4:	bl	1c12c <__assert_fail@plt+0xa954>
   15ba8:	str	r0, [fp, #-12]
   15bac:	movw	r0, #0
   15bb0:	str	r0, [sp, #20]
   15bb4:	ldr	r0, [fp, #-8]
   15bb8:	ldr	r0, [r0]
   15bbc:	str	r0, [fp, #-16]
   15bc0:	ldr	r0, [fp, #-4]
   15bc4:	ldr	r1, [fp, #-8]
   15bc8:	ldr	r2, [fp, #-12]
   15bcc:	ldr	r3, [fp, #-16]
   15bd0:	ldr	ip, [sp, #20]
   15bd4:	str	ip, [sp]
   15bd8:	bl	15d48 <__assert_fail@plt+0x4570>
   15bdc:	str	r0, [sp, #16]
   15be0:	ldr	r0, [fp, #-4]
   15be4:	ldr	r0, [r0, #32]
   15be8:	ldr	r1, [fp, #-4]
   15bec:	ldr	r2, [fp, #-8]
   15bf0:	ldr	r2, [r2, #24]
   15bf4:	ldr	r3, [sp, #16]
   15bf8:	ldr	ip, [fp, #-12]
   15bfc:	str	r0, [sp, #12]
   15c00:	mov	r0, r1
   15c04:	mov	r1, r2
   15c08:	mov	r2, r3
   15c0c:	mov	r3, ip
   15c10:	ldr	ip, [sp, #12]
   15c14:	blx	ip
   15c18:	cmp	r0, #0
   15c1c:	beq	15c5c <__assert_fail@plt+0x4484>
   15c20:	ldr	r0, [fp, #-4]
   15c24:	ldr	r1, [fp, #-8]
   15c28:	ldr	r3, [fp, #-16]
   15c2c:	movw	r2, #1
   15c30:	and	r2, r2, #1
   15c34:	bl	15e9c <__assert_fail@plt+0x46c4>
   15c38:	str	r0, [fp, #-16]
   15c3c:	ldr	r0, [sp, #16]
   15c40:	ldr	r1, [fp, #-4]
   15c44:	ldr	r1, [r1, #28]
   15c48:	sub	r0, r0, r1
   15c4c:	ldr	r1, [sp, #20]
   15c50:	add	r0, r1, r0
   15c54:	str	r0, [sp, #20]
   15c58:	b	15cb8 <__assert_fail@plt+0x44e0>
   15c5c:	ldr	r0, [fp, #-16]
   15c60:	ldr	r1, [fp, #-4]
   15c64:	ldr	r1, [r1, #28]
   15c68:	add	r1, r1, #1
   15c6c:	cmp	r0, r1
   15c70:	bhi	15c98 <__assert_fail@plt+0x44c0>
   15c74:	movw	r0, #16199	; 0x3f47
   15c78:	movt	r0, #2
   15c7c:	bl	1161c <gettext@plt>
   15c80:	movw	lr, #1
   15c84:	str	r0, [sp, #8]
   15c88:	mov	r0, lr
   15c8c:	movw	r1, #0
   15c90:	ldr	r2, [sp, #8]
   15c94:	bl	1158c <error@plt>
   15c98:	ldr	r0, [fp, #-4]
   15c9c:	ldr	r1, [fp, #-8]
   15ca0:	ldr	r3, [fp, #-16]
   15ca4:	movw	r2, #0
   15ca8:	and	r2, r2, #1
   15cac:	bl	15e9c <__assert_fail@plt+0x46c4>
   15cb0:	str	r0, [fp, #-16]
   15cb4:	b	15cb8 <__assert_fail@plt+0x44e0>
   15cb8:	b	15cbc <__assert_fail@plt+0x44e4>
   15cbc:	ldr	r0, [sp, #20]
   15cc0:	add	r0, r0, #1
   15cc4:	ldr	r1, [fp, #-8]
   15cc8:	ldr	r1, [r1]
   15ccc:	ldr	r2, [fp, #-4]
   15cd0:	ldr	r2, [r2, #28]
   15cd4:	sub	r1, r1, r2
   15cd8:	cmp	r0, r1
   15cdc:	bcc	15bc0 <__assert_fail@plt+0x43e8>
   15ce0:	ldr	r0, [fp, #-12]
   15ce4:	bl	1fc54 <__assert_fail@plt+0xe47c>
   15ce8:	ldr	r0, [fp, #-4]
   15cec:	ldr	r1, [fp, #-8]
   15cf0:	bl	16068 <__assert_fail@plt+0x4890>
   15cf4:	mov	sp, fp
   15cf8:	pop	{fp, pc}
   15cfc:	push	{fp, lr}
   15d00:	mov	fp, sp
   15d04:	sub	sp, sp, #24
   15d08:	str	r0, [fp, #-4]
   15d0c:	str	r1, [fp, #-8]
   15d10:	ldr	r0, [fp, #-4]
   15d14:	ldr	r1, [fp, #-8]
   15d18:	movw	r2, #20840	; 0x5168
   15d1c:	movt	r2, #3
   15d20:	ldr	r2, [r2]
   15d24:	movw	r3, #0
   15d28:	str	r3, [sp, #12]
   15d2c:	ldr	ip, [sp, #12]
   15d30:	str	ip, [sp]
   15d34:	str	ip, [sp, #4]
   15d38:	str	ip, [sp, #8]
   15d3c:	bl	15784 <__assert_fail@plt+0x3fac>
   15d40:	mov	sp, fp
   15d44:	pop	{fp, pc}
   15d48:	push	{fp, lr}
   15d4c:	mov	fp, sp
   15d50:	sub	sp, sp, #32
   15d54:	ldr	ip, [fp, #8]
   15d58:	str	r0, [fp, #-4]
   15d5c:	str	r1, [fp, #-8]
   15d60:	str	r2, [fp, #-12]
   15d64:	str	r3, [sp, #16]
   15d68:	movw	r0, #0
   15d6c:	str	r0, [sp, #12]
   15d70:	str	r0, [sp, #8]
   15d74:	str	ip, [sp, #4]
   15d78:	ldr	r0, [sp, #8]
   15d7c:	ldr	r1, [fp, #-4]
   15d80:	ldr	r1, [r1, #28]
   15d84:	cmp	r0, r1
   15d88:	bcs	15dc0 <__assert_fail@plt+0x45e8>
   15d8c:	ldr	r0, [fp, #-8]
   15d90:	ldr	r0, [r0, #4]
   15d94:	ldr	r1, [sp, #8]
   15d98:	add	r2, r1, #1
   15d9c:	str	r2, [sp, #8]
   15da0:	ldr	r0, [r0, r1, lsl #2]
   15da4:	ldr	r1, [fp, #-12]
   15da8:	ldr	r2, [sp, #12]
   15dac:	add	r3, r2, #1
   15db0:	str	r3, [sp, #12]
   15db4:	add	r1, r1, r2, lsl #2
   15db8:	str	r0, [r1]
   15dbc:	b	15d78 <__assert_fail@plt+0x45a0>
   15dc0:	ldr	r0, [fp, #8]
   15dc4:	ldr	r1, [sp, #8]
   15dc8:	add	r0, r1, r0
   15dcc:	str	r0, [sp, #8]
   15dd0:	ldr	r0, [sp, #8]
   15dd4:	ldr	r1, [fp, #-8]
   15dd8:	ldr	r1, [r1]
   15ddc:	cmp	r0, r1
   15de0:	movw	r0, #0
   15de4:	str	r0, [sp]
   15de8:	bcs	15e04 <__assert_fail@plt+0x462c>
   15dec:	ldr	r0, [sp, #12]
   15df0:	ldr	r1, [sp, #16]
   15df4:	cmp	r0, r1
   15df8:	movw	r0, #0
   15dfc:	movcc	r0, #1
   15e00:	str	r0, [sp]
   15e04:	ldr	r0, [sp]
   15e08:	tst	r0, #1
   15e0c:	beq	15e44 <__assert_fail@plt+0x466c>
   15e10:	ldr	r0, [fp, #-8]
   15e14:	ldr	r0, [r0, #4]
   15e18:	ldr	r1, [sp, #8]
   15e1c:	add	r2, r1, #1
   15e20:	str	r2, [sp, #8]
   15e24:	ldr	r0, [r0, r1, lsl #2]
   15e28:	ldr	r1, [fp, #-12]
   15e2c:	ldr	r2, [sp, #12]
   15e30:	add	r3, r2, #1
   15e34:	str	r3, [sp, #12]
   15e38:	add	r1, r1, r2, lsl #2
   15e3c:	str	r0, [r1]
   15e40:	b	15dd0 <__assert_fail@plt+0x45f8>
   15e44:	ldr	r0, [sp, #12]
   15e48:	ldr	r1, [fp, #-4]
   15e4c:	ldr	r1, [r1, #28]
   15e50:	cmp	r0, r1
   15e54:	bcc	15e5c <__assert_fail@plt+0x4684>
   15e58:	b	15e7c <__assert_fail@plt+0x46a4>
   15e5c:	movw	r0, #16756	; 0x4174
   15e60:	movt	r0, #2
   15e64:	movw	r1, #16077	; 0x3ecd
   15e68:	movt	r1, #2
   15e6c:	movw	r2, #242	; 0xf2
   15e70:	movw	r3, #16785	; 0x4191
   15e74:	movt	r3, #2
   15e78:	bl	117d8 <__assert_fail@plt>
   15e7c:	ldr	r0, [fp, #-12]
   15e80:	ldr	r1, [sp, #12]
   15e84:	add	r0, r0, r1, lsl #2
   15e88:	movw	r1, #0
   15e8c:	str	r1, [r0]
   15e90:	ldr	r0, [sp, #12]
   15e94:	mov	sp, fp
   15e98:	pop	{fp, pc}
   15e9c:	sub	sp, sp, #20
   15ea0:	str	r0, [sp, #16]
   15ea4:	str	r1, [sp, #12]
   15ea8:	and	r0, r2, #1
   15eac:	strb	r0, [sp, #11]
   15eb0:	str	r3, [sp, #4]
   15eb4:	ldrb	r0, [sp, #11]
   15eb8:	tst	r0, #1
   15ebc:	beq	15ee4 <__assert_fail@plt+0x470c>
   15ec0:	ldr	r0, [sp, #4]
   15ec4:	ldr	r1, [sp, #12]
   15ec8:	ldr	r1, [r1, #36]	; 0x24
   15ecc:	cmp	r0, r1
   15ed0:	bls	15ee0 <__assert_fail@plt+0x4708>
   15ed4:	ldr	r0, [sp, #4]
   15ed8:	ldr	r1, [sp, #12]
   15edc:	str	r0, [r1, #36]	; 0x24
   15ee0:	b	15f1c <__assert_fail@plt+0x4744>
   15ee4:	ldr	r0, [sp, #4]
   15ee8:	ldr	r1, [sp, #12]
   15eec:	ldr	r1, [r1, #40]	; 0x28
   15ef0:	cmp	r0, r1
   15ef4:	bcc	15f0c <__assert_fail@plt+0x4734>
   15ef8:	ldr	r0, [sp, #12]
   15efc:	ldr	r0, [r0, #40]	; 0x28
   15f00:	movw	r1, #0
   15f04:	cmp	r1, r0
   15f08:	bne	15f18 <__assert_fail@plt+0x4740>
   15f0c:	ldr	r0, [sp, #4]
   15f10:	ldr	r1, [sp, #12]
   15f14:	str	r0, [r1, #40]	; 0x28
   15f18:	b	15f1c <__assert_fail@plt+0x4744>
   15f1c:	ldr	r0, [sp, #12]
   15f20:	ldr	r0, [r0, #36]	; 0x24
   15f24:	movw	r1, #0
   15f28:	cmp	r1, r0
   15f2c:	beq	15f48 <__assert_fail@plt+0x4770>
   15f30:	ldr	r0, [sp, #12]
   15f34:	ldr	r0, [r0, #40]	; 0x28
   15f38:	ldr	r1, [sp, #12]
   15f3c:	ldr	r1, [r1, #36]	; 0x24
   15f40:	cmp	r0, r1
   15f44:	bhi	15f80 <__assert_fail@plt+0x47a8>
   15f48:	ldrb	r0, [sp, #11]
   15f4c:	tst	r0, #1
   15f50:	beq	15f70 <__assert_fail@plt+0x4798>
   15f54:	ldr	r0, [sp, #4]
   15f58:	cmn	r0, #1
   15f5c:	bcs	15f6c <__assert_fail@plt+0x4794>
   15f60:	ldr	r0, [sp, #4]
   15f64:	add	r0, r0, #1
   15f68:	str	r0, [sp, #4]
   15f6c:	b	15f7c <__assert_fail@plt+0x47a4>
   15f70:	ldr	r0, [sp, #4]
   15f74:	lsr	r0, r0, #1
   15f78:	str	r0, [sp, #4]
   15f7c:	b	1600c <__assert_fail@plt+0x4834>
   15f80:	ldr	r0, [sp, #12]
   15f84:	ldr	r1, [r0, #36]	; 0x24
   15f88:	ldr	r0, [r0, #40]	; 0x28
   15f8c:	sub	r0, r0, r1
   15f90:	lsr	r0, r0, #1
   15f94:	str	r0, [sp]
   15f98:	ldrb	r0, [sp, #11]
   15f9c:	tst	r0, #1
   15fa0:	beq	15fd4 <__assert_fail@plt+0x47fc>
   15fa4:	ldr	r0, [sp]
   15fa8:	cmp	r0, #0
   15fac:	beq	15fc4 <__assert_fail@plt+0x47ec>
   15fb0:	ldr	r0, [sp]
   15fb4:	ldr	r1, [sp, #4]
   15fb8:	add	r0, r1, r0
   15fbc:	str	r0, [sp, #4]
   15fc0:	b	15fd0 <__assert_fail@plt+0x47f8>
   15fc4:	ldr	r0, [sp, #4]
   15fc8:	add	r0, r0, #1
   15fcc:	str	r0, [sp, #4]
   15fd0:	b	16008 <__assert_fail@plt+0x4830>
   15fd4:	ldr	r0, [sp]
   15fd8:	cmp	r0, #0
   15fdc:	beq	15ff4 <__assert_fail@plt+0x481c>
   15fe0:	ldr	r0, [sp]
   15fe4:	ldr	r1, [sp, #4]
   15fe8:	sub	r0, r1, r0
   15fec:	str	r0, [sp, #4]
   15ff0:	b	16004 <__assert_fail@plt+0x482c>
   15ff4:	ldr	r0, [sp, #4]
   15ff8:	mvn	r1, #0
   15ffc:	add	r0, r0, r1
   16000:	str	r0, [sp, #4]
   16004:	b	16008 <__assert_fail@plt+0x4830>
   16008:	b	1600c <__assert_fail@plt+0x4834>
   1600c:	ldr	r0, [sp, #16]
   16010:	ldr	r0, [r0, #28]
   16014:	cmp	r0, #0
   16018:	beq	16044 <__assert_fail@plt+0x486c>
   1601c:	ldr	r0, [sp, #4]
   16020:	ldr	r1, [sp, #16]
   16024:	ldr	r1, [r1, #28]
   16028:	add	r1, r1, #1
   1602c:	cmp	r0, r1
   16030:	bhi	16044 <__assert_fail@plt+0x486c>
   16034:	ldr	r0, [sp, #16]
   16038:	ldr	r0, [r0, #28]
   1603c:	add	r0, r0, #1
   16040:	str	r0, [sp, #4]
   16044:	ldr	r0, [sp, #4]
   16048:	movw	r1, #0
   1604c:	cmp	r1, r0
   16050:	bne	1605c <__assert_fail@plt+0x4884>
   16054:	movw	r0, #1
   16058:	str	r0, [sp, #4]
   1605c:	ldr	r0, [sp, #4]
   16060:	add	sp, sp, #20
   16064:	bx	lr
   16068:	sub	sp, sp, #8
   1606c:	str	r0, [sp, #4]
   16070:	str	r1, [sp]
   16074:	ldr	r0, [sp, #4]
   16078:	ldr	r0, [r0, #28]
   1607c:	ldr	r1, [sp]
   16080:	str	r0, [r1]
   16084:	ldr	r0, [sp]
   16088:	ldr	r0, [r0, #20]
   1608c:	ldr	r1, [sp]
   16090:	str	r0, [r1, #16]
   16094:	ldr	r0, [sp]
   16098:	movw	r1, #0
   1609c:	str	r1, [r0, #28]
   160a0:	ldr	r0, [sp]
   160a4:	mvn	r1, #0
   160a8:	str	r1, [r0, #32]
   160ac:	add	sp, sp, #8
   160b0:	bx	lr
   160b4:	sub	sp, sp, #16
   160b8:	str	r0, [sp, #8]
   160bc:	str	r1, [sp, #4]
   160c0:	str	r2, [sp]
   160c4:	ldr	r0, [sp, #8]
   160c8:	cmp	r0, #0
   160cc:	bne	16110 <__assert_fail@plt+0x4938>
   160d0:	ldr	r0, [sp, #4]
   160d4:	ldr	r0, [r0, #40]	; 0x28
   160d8:	cmp	r0, #0
   160dc:	beq	16110 <__assert_fail@plt+0x4938>
   160e0:	ldr	r0, [sp]
   160e4:	ldr	r0, [r0]
   160e8:	ldr	r1, [sp, #4]
   160ec:	ldr	r1, [r1, #28]
   160f0:	sub	r0, r0, r1
   160f4:	ldr	r1, [sp, #4]
   160f8:	ldr	r1, [r1, #40]	; 0x28
   160fc:	cmp	r0, r1
   16100:	bne	16110 <__assert_fail@plt+0x4938>
   16104:	movw	r0, #1
   16108:	str	r0, [sp, #12]
   1610c:	b	16134 <__assert_fail@plt+0x495c>
   16110:	ldr	r0, [sp]
   16114:	ldr	r0, [r0]
   16118:	ldr	r1, [sp, #4]
   1611c:	ldr	r1, [r1, #16]
   16120:	cmp	r0, r1
   16124:	movw	r0, #0
   16128:	moveq	r0, #1
   1612c:	and	r0, r0, #1
   16130:	str	r0, [sp, #12]
   16134:	ldr	r0, [sp, #12]
   16138:	add	sp, sp, #16
   1613c:	bx	lr
   16140:	push	{fp, lr}
   16144:	mov	fp, sp
   16148:	sub	sp, sp, #8
   1614c:	movw	r0, #0
   16150:	bl	114d8 <sysconf@plt>
   16154:	str	r0, [sp]
   16158:	ldr	r0, [sp]
   1615c:	cmp	r0, #0
   16160:	ble	16170 <__assert_fail@plt+0x4998>
   16164:	ldr	r0, [sp]
   16168:	str	r0, [sp, #4]
   1616c:	b	16178 <__assert_fail@plt+0x49a0>
   16170:	ldr	r0, [pc, #12]	; 16184 <__assert_fail@plt+0x49ac>
   16174:	str	r0, [sp, #4]
   16178:	ldr	r0, [sp, #4]
   1617c:	mov	sp, fp
   16180:	pop	{fp, pc}
   16184:	svcvc	0x00ffffff
   16188:	push	{fp, lr}
   1618c:	mov	fp, sp
   16190:	sub	sp, sp, #8
   16194:	movw	r0, #0
   16198:	str	r0, [sp, #4]
   1619c:	movw	r0, #20924	; 0x51bc
   161a0:	movt	r0, #3
   161a4:	ldr	r0, [r0]
   161a8:	str	r0, [sp]
   161ac:	ldr	r0, [sp]
   161b0:	ldr	r0, [r0]
   161b4:	movw	r1, #0
   161b8:	cmp	r0, r1
   161bc:	beq	161e8 <__assert_fail@plt+0x4a10>
   161c0:	ldr	r0, [sp]
   161c4:	add	r1, r0, #4
   161c8:	str	r1, [sp]
   161cc:	ldr	r0, [r0]
   161d0:	bl	11634 <strlen@plt>
   161d4:	add	r0, r0, #1
   161d8:	ldr	r1, [sp, #4]
   161dc:	add	r0, r1, r0
   161e0:	str	r0, [sp, #4]
   161e4:	b	161ac <__assert_fail@plt+0x49d4>
   161e8:	ldr	r0, [sp, #4]
   161ec:	mov	sp, fp
   161f0:	pop	{fp, pc}
   161f4:	push	{fp, lr}
   161f8:	mov	fp, sp
   161fc:	sub	sp, sp, #16
   16200:	str	r0, [sp, #8]
   16204:	str	r1, [sp, #4]
   16208:	bl	16188 <__assert_fail@plt+0x49b0>
   1620c:	str	r0, [sp]
   16210:	ldr	r0, [sp, #8]
   16214:	movw	r1, #4096	; 0x1000
   16218:	str	r1, [r0, #8]
   1621c:	bl	16140 <__assert_fail@plt+0x4968>
   16220:	ldr	r1, [sp, #8]
   16224:	str	r0, [r1, #4]
   16228:	ldr	r0, [sp, #8]
   1622c:	movw	r1, #0
   16230:	str	r1, [r0]
   16234:	ldr	r0, [sp]
   16238:	ldr	r1, [sp, #8]
   1623c:	ldr	r1, [r1, #4]
   16240:	cmp	r0, r1
   16244:	bls	16254 <__assert_fail@plt+0x4a7c>
   16248:	movw	r0, #1
   1624c:	str	r0, [fp, #-4]
   16250:	b	16344 <__assert_fail@plt+0x4b6c>
   16254:	ldr	r0, [sp, #4]
   16258:	ldr	r1, [sp]
   1625c:	add	r0, r0, r1
   16260:	ldr	r1, [sp, #8]
   16264:	ldr	r1, [r1, #4]
   16268:	cmp	r0, r1
   1626c:	bcc	1627c <__assert_fail@plt+0x4aa4>
   16270:	movw	r0, #2
   16274:	str	r0, [fp, #-4]
   16278:	b	16344 <__assert_fail@plt+0x4b6c>
   1627c:	ldr	r0, [sp]
   16280:	ldr	r1, [sp, #8]
   16284:	ldr	r2, [r1, #4]
   16288:	sub	r0, r2, r0
   1628c:	str	r0, [r1, #4]
   16290:	ldr	r0, [sp, #4]
   16294:	ldr	r1, [sp, #8]
   16298:	ldr	r2, [r1, #4]
   1629c:	sub	r0, r2, r0
   162a0:	str	r0, [r1, #4]
   162a4:	b	162a8 <__assert_fail@plt+0x4ad0>
   162a8:	ldr	r0, [sp, #8]
   162ac:	ldr	r0, [r0, #4]
   162b0:	lsr	r0, r0, #2
   162b4:	sub	r0, r0, #2
   162b8:	ldr	r1, [sp, #8]
   162bc:	str	r0, [r1, #16]
   162c0:	ldr	r0, [sp, #8]
   162c4:	ldr	r0, [r0, #16]
   162c8:	cmp	r0, #0
   162cc:	bls	162d4 <__assert_fail@plt+0x4afc>
   162d0:	b	162f4 <__assert_fail@plt+0x4b1c>
   162d4:	movw	r0, #16463	; 0x404f
   162d8:	movt	r0, #2
   162dc:	movw	r1, #16077	; 0x3ecd
   162e0:	movt	r1, #2
   162e4:	movw	r2, #518	; 0x206
   162e8:	movw	r3, #16486	; 0x4066
   162ec:	movt	r3, #2
   162f0:	bl	117d8 <__assert_fail@plt>
   162f4:	ldr	r0, [sp, #8]
   162f8:	movw	r1, #0
   162fc:	str	r1, [r0, #20]
   16300:	ldr	r0, [sp, #8]
   16304:	str	r1, [r0, #24]
   16308:	ldr	r0, [sp, #8]
   1630c:	str	r1, [r0, #28]
   16310:	ldr	r0, [sp, #8]
   16314:	movw	r2, #25424	; 0x6350
   16318:	movt	r2, #1
   1631c:	str	r2, [r0, #32]
   16320:	ldr	r0, [sp, #8]
   16324:	str	r1, [r0, #36]	; 0x24
   16328:	ldr	r0, [sp, #8]
   1632c:	str	r1, [r0, #40]	; 0x28
   16330:	ldr	r0, [sp, #8]
   16334:	ldr	r0, [r0, #4]
   16338:	ldr	r2, [sp, #8]
   1633c:	str	r0, [r2, #12]
   16340:	str	r1, [fp, #-4]
   16344:	ldr	r0, [fp, #-4]
   16348:	mov	sp, fp
   1634c:	pop	{fp, pc}
   16350:	sub	sp, sp, #16
   16354:	str	r0, [sp, #12]
   16358:	str	r1, [sp, #8]
   1635c:	str	r2, [sp, #4]
   16360:	str	r3, [sp]
   16364:	movw	r0, #0
   16368:	add	sp, sp, #16
   1636c:	bx	lr
   16370:	sub	sp, sp, #4
   16374:	ldr	r1, [pc, #100]	; 163e0 <__assert_fail@plt+0x4c08>
   16378:	str	r0, [sp]
   1637c:	ldr	r0, [sp]
   16380:	ldr	r0, [r0, #4]
   16384:	cmp	r1, r0
   16388:	bls	163a0 <__assert_fail@plt+0x4bc8>
   1638c:	ldr	r0, [sp]
   16390:	ldr	r0, [r0, #4]
   16394:	ldr	r1, [sp]
   16398:	str	r0, [r1, #12]
   1639c:	b	163d8 <__assert_fail@plt+0x4c00>
   163a0:	ldr	r0, [pc, #56]	; 163e0 <__assert_fail@plt+0x4c08>
   163a4:	ldr	r1, [sp]
   163a8:	ldr	r1, [r1, #8]
   163ac:	cmp	r0, r1
   163b0:	bcs	163c8 <__assert_fail@plt+0x4bf0>
   163b4:	ldr	r0, [sp]
   163b8:	ldr	r0, [r0, #8]
   163bc:	ldr	r1, [sp]
   163c0:	str	r0, [r1, #12]
   163c4:	b	163d4 <__assert_fail@plt+0x4bfc>
   163c8:	ldr	r0, [pc, #16]	; 163e0 <__assert_fail@plt+0x4c08>
   163cc:	ldr	r1, [sp]
   163d0:	str	r0, [r1, #12]
   163d4:	b	163d8 <__assert_fail@plt+0x4c00>
   163d8:	add	sp, sp, #4
   163dc:	bx	lr
   163e0:	andeq	r0, r2, r0
   163e4:	push	{fp, lr}
   163e8:	mov	fp, sp
   163ec:	sub	sp, sp, #16
   163f0:	ldr	r3, [pc, #196]	; 164bc <__assert_fail@plt+0x4ce4>
   163f4:	str	r0, [fp, #-4]
   163f8:	str	r1, [sp, #8]
   163fc:	str	r2, [sp, #4]
   16400:	ldr	r0, [sp, #8]
   16404:	movw	r1, #0
   16408:	str	r1, [r0]
   1640c:	ldr	r0, [sp, #8]
   16410:	str	r1, [r0, #16]
   16414:	ldr	r0, [sp, #8]
   16418:	str	r1, [r0, #4]
   1641c:	ldr	r0, [sp, #8]
   16420:	str	r1, [r0, #8]
   16424:	ldr	r0, [sp, #8]
   16428:	str	r1, [r0, #36]	; 0x24
   1642c:	ldr	r0, [sp, #8]
   16430:	str	r1, [r0, #40]	; 0x28
   16434:	ldr	r0, [fp, #-4]
   16438:	ldr	r0, [r0, #12]
   1643c:	cmp	r0, r3
   16440:	bhi	16448 <__assert_fail@plt+0x4c70>
   16444:	b	16468 <__assert_fail@plt+0x4c90>
   16448:	movw	r0, #16561	; 0x40b1
   1644c:	movt	r0, #2
   16450:	movw	r1, #16077	; 0x3ecd
   16454:	movt	r1, #2
   16458:	movw	r2, #572	; 0x23c
   1645c:	movw	r3, #16596	; 0x40d4
   16460:	movt	r3, #2
   16464:	bl	117d8 <__assert_fail@plt>
   16468:	ldr	r0, [fp, #-4]
   1646c:	ldr	r0, [r0, #12]
   16470:	add	r0, r0, #1
   16474:	bl	1c12c <__assert_fail@plt+0xa954>
   16478:	ldr	lr, [sp, #8]
   1647c:	str	r0, [lr, #12]
   16480:	ldr	r0, [sp, #8]
   16484:	movw	lr, #0
   16488:	str	lr, [r0, #20]
   1648c:	ldr	r0, [sp, #8]
   16490:	str	lr, [r0, #16]
   16494:	ldr	r0, [sp, #8]
   16498:	str	lr, [r0, #28]
   1649c:	ldr	r0, [sp, #8]
   164a0:	mvn	lr, #0
   164a4:	str	lr, [r0, #32]
   164a8:	ldr	r0, [sp, #4]
   164ac:	ldr	lr, [sp, #8]
   164b0:	str	r0, [lr, #24]
   164b4:	mov	sp, fp
   164b8:	pop	{fp, pc}
   164bc:	svcvc	0x00fff7ff
   164c0:	push	{fp, lr}
   164c4:	mov	fp, sp
   164c8:	sub	sp, sp, #16
   164cc:	str	r0, [fp, #-4]
   164d0:	movw	r0, #0
   164d4:	str	r0, [sp, #4]
   164d8:	str	r0, [sp, #8]
   164dc:	ldr	r0, [fp, #-4]
   164e0:	ldr	r0, [r0]
   164e4:	movw	r1, #0
   164e8:	cmp	r0, r1
   164ec:	beq	16524 <__assert_fail@plt+0x4d4c>
   164f0:	ldr	r0, [sp, #4]
   164f4:	add	r0, r0, #1
   164f8:	str	r0, [sp, #4]
   164fc:	ldr	r0, [fp, #-4]
   16500:	ldr	r0, [r0]
   16504:	bl	11634 <strlen@plt>
   16508:	ldr	lr, [sp, #8]
   1650c:	add	r0, lr, r0
   16510:	str	r0, [sp, #8]
   16514:	ldr	r0, [fp, #-4]
   16518:	add	r0, r0, #4
   1651c:	str	r0, [fp, #-4]
   16520:	b	164dc <__assert_fail@plt+0x4d04>
   16524:	ldr	r1, [sp, #4]
   16528:	movw	r0, #16681	; 0x4129
   1652c:	movt	r0, #2
   16530:	bl	16574 <__assert_fail@plt+0x4d9c>
   16534:	cmp	r0, #0
   16538:	movw	r0, #1
   1653c:	str	r0, [sp]
   16540:	bne	16564 <__assert_fail@plt+0x4d8c>
   16544:	ldr	r1, [sp, #8]
   16548:	movw	r0, #16718	; 0x414e
   1654c:	movt	r0, #2
   16550:	bl	16574 <__assert_fail@plt+0x4d9c>
   16554:	cmp	r0, #0
   16558:	movw	r0, #0
   1655c:	movne	r0, #1
   16560:	str	r0, [sp]
   16564:	ldr	r0, [sp]
   16568:	and	r0, r0, #1
   1656c:	mov	sp, fp
   16570:	pop	{fp, pc}
   16574:	push	{fp, lr}
   16578:	mov	fp, sp
   1657c:	sub	sp, sp, #40	; 0x28
   16580:	str	r0, [fp, #-8]
   16584:	str	r1, [fp, #-12]
   16588:	ldr	r0, [fp, #-8]
   1658c:	bl	115b0 <getenv@plt>
   16590:	str	r0, [fp, #-16]
   16594:	ldr	r0, [fp, #-16]
   16598:	movw	r1, #0
   1659c:	cmp	r0, r1
   165a0:	beq	16620 <__assert_fail@plt+0x4e48>
   165a4:	ldr	r0, [fp, #-16]
   165a8:	add	r1, sp, #20
   165ac:	movw	r2, #10
   165b0:	add	r3, sp, #16
   165b4:	movw	ip, #0
   165b8:	str	ip, [sp]
   165bc:	bl	1ef58 <__assert_fail@plt+0xd780>
   165c0:	cmp	r0, #0
   165c4:	bne	165e8 <__assert_fail@plt+0x4e10>
   165c8:	ldr	r0, [fp, #-12]
   165cc:	ldr	r1, [sp, #16]
   165d0:	cmp	r0, r1
   165d4:	bls	165e4 <__assert_fail@plt+0x4e0c>
   165d8:	movw	r0, #1
   165dc:	str	r0, [fp, #-4]
   165e0:	b	16628 <__assert_fail@plt+0x4e50>
   165e4:	b	1661c <__assert_fail@plt+0x4e44>
   165e8:	bl	11664 <__errno_location@plt>
   165ec:	ldr	r1, [r0]
   165f0:	movw	r0, #16891	; 0x41fb
   165f4:	movt	r0, #2
   165f8:	str	r1, [sp, #12]
   165fc:	bl	1161c <gettext@plt>
   16600:	ldr	r3, [fp, #-8]
   16604:	movw	r1, #1
   16608:	str	r0, [sp, #8]
   1660c:	mov	r0, r1
   16610:	ldr	r1, [sp, #12]
   16614:	ldr	r2, [sp, #8]
   16618:	bl	1158c <error@plt>
   1661c:	b	16620 <__assert_fail@plt+0x4e48>
   16620:	movw	r0, #0
   16624:	str	r0, [fp, #-4]
   16628:	ldr	r0, [fp, #-4]
   1662c:	mov	sp, fp
   16630:	pop	{fp, pc}
   16634:	push	{fp, lr}
   16638:	mov	fp, sp
   1663c:	sub	sp, sp, #24
   16640:	bl	166c8 <__assert_fail@plt+0x4ef0>
   16644:	ldr	lr, [pc, #120]	; 166c4 <__assert_fail@plt+0x4eec>
   16648:	str	r0, [fp, #-4]
   1664c:	movw	r0, #0
   16650:	str	r0, [sp, #8]
   16654:	str	r0, [sp, #16]
   16658:	str	r0, [sp, #12]
   1665c:	ldr	r0, [fp, #-4]
   16660:	cmp	r0, lr
   16664:	bge	16674 <__assert_fail@plt+0x4e9c>
   16668:	ldr	r0, [fp, #-4]
   1666c:	add	r0, r0, #1
   16670:	str	r0, [fp, #-4]
   16674:	ldr	r1, [fp, #-4]
   16678:	add	r0, sp, #8
   1667c:	movw	r2, #0
   16680:	str	r0, [sp, #4]
   16684:	mov	r0, r2
   16688:	movw	r2, #26900	; 0x6914
   1668c:	movt	r2, #1
   16690:	ldr	r3, [sp, #4]
   16694:	bl	16770 <__assert_fail@plt+0x4f98>
   16698:	ldr	r1, [sp, #8]
   1669c:	movw	r2, #21144	; 0x5298
   166a0:	movt	r2, #3
   166a4:	str	r1, [r2]
   166a8:	ldr	r1, [sp, #12]
   166ac:	movw	r2, #21148	; 0x529c
   166b0:	movt	r2, #3
   166b4:	str	r1, [r2]
   166b8:	str	r0, [sp]
   166bc:	mov	sp, fp
   166c0:	pop	{fp, pc}
   166c4:	svcvc	0x00ffffff
   166c8:	push	{fp, lr}
   166cc:	mov	fp, sp
   166d0:	sub	sp, sp, #24
   166d4:	bl	16d08 <__assert_fail@plt+0x5530>
   166d8:	str	r0, [fp, #-8]
   166dc:	ldr	r0, [fp, #-8]
   166e0:	cmp	r0, #0
   166e4:	blt	166f4 <__assert_fail@plt+0x4f1c>
   166e8:	ldr	r0, [fp, #-8]
   166ec:	str	r0, [fp, #-4]
   166f0:	b	16764 <__assert_fail@plt+0x4f8c>
   166f4:	movw	r0, #4
   166f8:	bl	114d8 <sysconf@plt>
   166fc:	str	r0, [fp, #-8]
   16700:	ldr	r0, [fp, #-8]
   16704:	cmn	r0, #1
   16708:	bne	16714 <__assert_fail@plt+0x4f3c>
   1670c:	movw	r0, #20
   16710:	str	r0, [fp, #-8]
   16714:	movw	r0, #7
   16718:	mov	r1, sp
   1671c:	bl	114f0 <getrlimit64@plt>
   16720:	movw	r1, #0
   16724:	cmp	r1, r0
   16728:	bne	1675c <__assert_fail@plt+0x4f84>
   1672c:	ldr	r0, [sp]
   16730:	ldr	r1, [sp, #4]
   16734:	and	r0, r0, r1
   16738:	cmn	r0, #1
   1673c:	bne	16750 <__assert_fail@plt+0x4f78>
   16740:	b	16744 <__assert_fail@plt+0x4f6c>
   16744:	ldr	r0, [fp, #-8]
   16748:	str	r0, [fp, #-4]
   1674c:	b	16764 <__assert_fail@plt+0x4f8c>
   16750:	ldr	r0, [sp]
   16754:	str	r0, [fp, #-4]
   16758:	b	16764 <__assert_fail@plt+0x4f8c>
   1675c:	ldr	r0, [fp, #-8]
   16760:	str	r0, [fp, #-4]
   16764:	ldr	r0, [fp, #-4]
   16768:	mov	sp, fp
   1676c:	pop	{fp, pc}
   16770:	push	{r4, r5, fp, lr}
   16774:	add	fp, sp, #8
   16778:	sub	sp, sp, #552	; 0x228
   1677c:	str	r0, [fp, #-16]
   16780:	str	r1, [fp, #-20]	; 0xffffffec
   16784:	str	r2, [fp, #-24]	; 0xffffffe8
   16788:	str	r3, [fp, #-28]	; 0xffffffe4
   1678c:	movw	r0, #0
   16790:	str	r0, [sp, #16]
   16794:	ldr	r0, [fp, #-16]
   16798:	ldr	r1, [fp, #-20]	; 0xffffffec
   1679c:	cmp	r0, r1
   167a0:	bge	16900 <__assert_fail@plt+0x5128>
   167a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   167a8:	ldr	r1, [fp, #-16]
   167ac:	sub	r0, r0, r1
   167b0:	str	r0, [sp, #8]
   167b4:	ldr	r0, [sp, #8]
   167b8:	cmp	r0, #64	; 0x40
   167bc:	ble	167c8 <__assert_fail@plt+0x4ff0>
   167c0:	movw	r0, #64	; 0x40
   167c4:	str	r0, [sp, #8]
   167c8:	movw	r0, #0
   167cc:	str	r0, [sp, #12]
   167d0:	ldr	r0, [sp, #12]
   167d4:	ldr	r1, [sp, #8]
   167d8:	cmp	r0, r1
   167dc:	bge	16828 <__assert_fail@plt+0x5050>
   167e0:	ldr	r0, [sp, #12]
   167e4:	add	r1, sp, #20
   167e8:	add	r0, r1, r0, lsl #3
   167ec:	mov	r2, #5
   167f0:	strh	r2, [r0, #4]
   167f4:	ldr	r0, [sp, #12]
   167f8:	add	r0, r1, r0, lsl #3
   167fc:	mov	r2, #0
   16800:	strh	r2, [r0, #6]
   16804:	ldr	r0, [fp, #-16]
   16808:	ldr	r2, [sp, #12]
   1680c:	add	r0, r0, r2
   16810:	add	r1, r1, r2, lsl #3
   16814:	str	r0, [r1]
   16818:	ldr	r0, [sp, #12]
   1681c:	add	r0, r0, #1
   16820:	str	r0, [sp, #12]
   16824:	b	167d0 <__assert_fail@plt+0x4ff8>
   16828:	add	r0, sp, #20
   1682c:	ldr	r1, [sp, #8]
   16830:	movw	r2, #0
   16834:	bl	1152c <poll@plt>
   16838:	str	r0, [sp, #16]
   1683c:	ldr	r0, [sp, #16]
   16840:	mvn	r1, #0
   16844:	cmp	r1, r0
   16848:	bne	16858 <__assert_fail@plt+0x5080>
   1684c:	mvn	r0, #0
   16850:	str	r0, [fp, #-12]
   16854:	b	16908 <__assert_fail@plt+0x5130>
   16858:	movw	r0, #0
   1685c:	str	r0, [sp, #4]
   16860:	ldr	r0, [sp, #4]
   16864:	ldr	r1, [sp, #8]
   16868:	cmp	r0, r1
   1686c:	bge	168e8 <__assert_fail@plt+0x5110>
   16870:	ldr	r0, [sp, #4]
   16874:	add	r1, sp, #20
   16878:	add	r0, r1, r0, lsl #3
   1687c:	ldrsh	r0, [r0, #6]
   16880:	cmp	r0, #32
   16884:	beq	168d4 <__assert_fail@plt+0x50fc>
   16888:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1688c:	ldr	r1, [sp, #4]
   16890:	add	r2, sp, #20
   16894:	add	r1, r2, r1, lsl #3
   16898:	ldr	r1, [r1]
   1689c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   168a0:	str	r0, [sp]
   168a4:	mov	r0, r1
   168a8:	mov	r1, r2
   168ac:	ldr	r2, [sp]
   168b0:	blx	r2
   168b4:	str	r0, [sp, #16]
   168b8:	movw	r1, #0
   168bc:	cmp	r1, r0
   168c0:	beq	168d0 <__assert_fail@plt+0x50f8>
   168c4:	ldr	r0, [sp, #16]
   168c8:	str	r0, [fp, #-12]
   168cc:	b	16908 <__assert_fail@plt+0x5130>
   168d0:	b	168d4 <__assert_fail@plt+0x50fc>
   168d4:	b	168d8 <__assert_fail@plt+0x5100>
   168d8:	ldr	r0, [sp, #4]
   168dc:	add	r0, r0, #1
   168e0:	str	r0, [sp, #4]
   168e4:	b	16860 <__assert_fail@plt+0x5088>
   168e8:	b	168ec <__assert_fail@plt+0x5114>
   168ec:	ldr	r0, [sp, #8]
   168f0:	ldr	r1, [fp, #-16]
   168f4:	add	r0, r1, r0
   168f8:	str	r0, [fp, #-16]
   168fc:	b	16794 <__assert_fail@plt+0x4fbc>
   16900:	movw	r0, #0
   16904:	str	r0, [fp, #-12]
   16908:	ldr	r0, [fp, #-12]
   1690c:	sub	sp, fp, #8
   16910:	pop	{r4, r5, fp, pc}
   16914:	push	{fp, lr}
   16918:	mov	fp, sp
   1691c:	sub	sp, sp, #24
   16920:	str	r0, [fp, #-8]
   16924:	str	r1, [sp, #12]
   16928:	ldr	r0, [fp, #-8]
   1692c:	bl	16e84 <__assert_fail@plt+0x56ac>
   16930:	cmp	r0, #0
   16934:	beq	16944 <__assert_fail@plt+0x516c>
   16938:	movw	r0, #0
   1693c:	str	r0, [fp, #-4]
   16940:	b	169d4 <__assert_fail@plt+0x51fc>
   16944:	ldr	r0, [sp, #12]
   16948:	str	r0, [sp, #8]
   1694c:	ldr	r0, [sp, #8]
   16950:	ldr	r1, [r0]
   16954:	ldr	r0, [r0, #4]
   16958:	add	r0, r0, #1
   1695c:	lsl	r0, r0, #2
   16960:	ldr	r2, [sp, #8]
   16964:	add	r2, r2, #8
   16968:	str	r0, [sp]
   1696c:	mov	r0, r1
   16970:	ldr	r1, [sp]
   16974:	bl	172a4 <__assert_fail@plt+0x5acc>
   16978:	str	r0, [sp, #4]
   1697c:	ldr	r0, [sp, #4]
   16980:	movw	r1, #0
   16984:	cmp	r0, r1
   16988:	beq	169cc <__assert_fail@plt+0x51f4>
   1698c:	ldr	r0, [sp, #4]
   16990:	ldr	r1, [sp, #8]
   16994:	str	r0, [r1]
   16998:	ldr	r0, [fp, #-8]
   1699c:	ldr	r1, [sp, #8]
   169a0:	ldr	r2, [r1]
   169a4:	ldr	r1, [r1, #4]
   169a8:	add	r1, r2, r1, lsl #2
   169ac:	str	r0, [r1]
   169b0:	ldr	r0, [sp, #8]
   169b4:	ldr	r1, [r0, #4]
   169b8:	add	r1, r1, #1
   169bc:	str	r1, [r0, #4]
   169c0:	movw	r0, #0
   169c4:	str	r0, [fp, #-4]
   169c8:	b	169d4 <__assert_fail@plt+0x51fc>
   169cc:	mvn	r0, #0
   169d0:	str	r0, [fp, #-4]
   169d4:	ldr	r0, [fp, #-4]
   169d8:	mov	sp, fp
   169dc:	pop	{fp, pc}
   169e0:	sub	sp, sp, #8
   169e4:	push	{fp, lr}
   169e8:	mov	fp, sp
   169ec:	sub	sp, sp, #32
   169f0:	str	r3, [fp, #12]
   169f4:	str	r2, [fp, #8]
   169f8:	str	r0, [fp, #-4]
   169fc:	str	r1, [fp, #-8]
   16a00:	movw	r0, #0
   16a04:	str	r0, [sp, #16]
   16a08:	ldr	r0, [fp, #-8]
   16a0c:	and	r0, r0, #64	; 0x40
   16a10:	cmp	r0, #0
   16a14:	beq	16a40 <__assert_fail@plt+0x5268>
   16a18:	add	r0, sp, #12
   16a1c:	mov	r1, r0
   16a20:	add	r2, fp, #8
   16a24:	str	r2, [r1]
   16a28:	ldr	r1, [sp, #12]
   16a2c:	add	r2, r1, #4
   16a30:	str	r2, [sp, #12]
   16a34:	ldr	r1, [r1]
   16a38:	str	r1, [sp, #16]
   16a3c:	str	r0, [sp, #8]
   16a40:	movw	r0, #21153	; 0x52a1
   16a44:	movt	r0, #3
   16a48:	ldrb	r0, [r0]
   16a4c:	tst	r0, #1
   16a50:	bne	16a78 <__assert_fail@plt+0x52a0>
   16a54:	bl	16ad8 <__assert_fail@plt+0x5300>
   16a58:	and	r0, r0, #1
   16a5c:	movw	lr, #21152	; 0x52a0
   16a60:	movt	lr, #3
   16a64:	strb	r0, [lr]
   16a68:	movw	r0, #21153	; 0x52a1
   16a6c:	movt	r0, #3
   16a70:	movw	lr, #1
   16a74:	strb	lr, [r0]
   16a78:	ldr	r0, [fp, #-4]
   16a7c:	ldr	r1, [fp, #-8]
   16a80:	orr	r1, r1, #524288	; 0x80000
   16a84:	ldr	r2, [sp, #16]
   16a88:	bl	179ac <__assert_fail@plt+0x61d4>
   16a8c:	str	r0, [fp, #-12]
   16a90:	ldr	r0, [fp, #-12]
   16a94:	cmp	r0, #0
   16a98:	blt	16ac4 <__assert_fail@plt+0x52ec>
   16a9c:	movw	r0, #21152	; 0x52a0
   16aa0:	movt	r0, #3
   16aa4:	ldrb	r0, [r0]
   16aa8:	tst	r0, #1
   16aac:	bne	16ac4 <__assert_fail@plt+0x52ec>
   16ab0:	ldr	r0, [fp, #-12]
   16ab4:	movw	r1, #1
   16ab8:	and	r1, r1, #1
   16abc:	bl	174d4 <__assert_fail@plt+0x5cfc>
   16ac0:	str	r0, [sp, #4]
   16ac4:	ldr	r0, [fp, #-12]
   16ac8:	mov	sp, fp
   16acc:	pop	{fp, lr}
   16ad0:	add	sp, sp, #8
   16ad4:	bx	lr
   16ad8:	push	{fp, lr}
   16adc:	mov	fp, sp
   16ae0:	sub	sp, sp, #16
   16ae4:	ldr	r1, [pc, #88]	; 16b44 <__assert_fail@plt+0x536c>
   16ae8:	movw	r0, #0
   16aec:	strb	r0, [fp, #-1]
   16af0:	movw	r0, #18857	; 0x49a9
   16af4:	movt	r0, #2
   16af8:	bl	179ac <__assert_fail@plt+0x61d4>
   16afc:	str	r0, [sp, #8]
   16b00:	ldr	r0, [sp, #8]
   16b04:	cmp	r0, #0
   16b08:	blt	16b34 <__assert_fail@plt+0x535c>
   16b0c:	ldr	r0, [sp, #8]
   16b10:	bl	16e84 <__assert_fail@plt+0x56ac>
   16b14:	cmp	r0, #0
   16b18:	movw	r0, #0
   16b1c:	movne	r0, #1
   16b20:	and	r0, r0, #1
   16b24:	strb	r0, [fp, #-1]
   16b28:	ldr	r0, [sp, #8]
   16b2c:	bl	117c0 <close@plt>
   16b30:	str	r0, [sp, #4]
   16b34:	ldrb	r0, [fp, #-1]
   16b38:	and	r0, r0, #1
   16b3c:	mov	sp, fp
   16b40:	pop	{fp, pc}
   16b44:	andeq	r0, r8, r0
   16b48:	push	{fp, lr}
   16b4c:	mov	fp, sp
   16b50:	movw	r0, #21144	; 0x5298
   16b54:	movt	r0, #3
   16b58:	ldr	r0, [r0]
   16b5c:	bl	1fc54 <__assert_fail@plt+0xe47c>
   16b60:	movw	r0, #21144	; 0x5298
   16b64:	movt	r0, #3
   16b68:	movw	lr, #0
   16b6c:	str	lr, [r0]
   16b70:	movw	r0, #21148	; 0x529c
   16b74:	movt	r0, #3
   16b78:	str	lr, [r0]
   16b7c:	pop	{fp, pc}
   16b80:	push	{fp, lr}
   16b84:	mov	fp, sp
   16b88:	sub	sp, sp, #8
   16b8c:	movw	r0, #16952	; 0x4238
   16b90:	movt	r0, #2
   16b94:	bl	115b0 <getenv@plt>
   16b98:	movw	lr, #0
   16b9c:	cmp	r0, lr
   16ba0:	beq	16bb4 <__assert_fail@plt+0x53dc>
   16ba4:	movw	r0, #1
   16ba8:	and	r0, r0, #1
   16bac:	strb	r0, [fp, #-1]
   16bb0:	b	16bc0 <__assert_fail@plt+0x53e8>
   16bb4:	movw	r0, #0
   16bb8:	and	r0, r0, #1
   16bbc:	strb	r0, [fp, #-1]
   16bc0:	ldrb	r0, [fp, #-1]
   16bc4:	and	r0, r0, #1
   16bc8:	mov	sp, fp
   16bcc:	pop	{fp, pc}
   16bd0:	push	{fp, lr}
   16bd4:	mov	fp, sp
   16bd8:	sub	sp, sp, #16
   16bdc:	movw	r0, #1
   16be0:	str	r0, [fp, #-4]
   16be4:	movw	r0, #21144	; 0x5298
   16be8:	movt	r0, #3
   16bec:	ldr	r0, [r0]
   16bf0:	movw	r1, #21148	; 0x529c
   16bf4:	movt	r1, #3
   16bf8:	ldr	r1, [r1]
   16bfc:	bl	16c78 <__assert_fail@plt+0x54a0>
   16c00:	str	r0, [sp, #8]
   16c04:	ldr	r0, [sp, #8]
   16c08:	cmp	r0, #0
   16c0c:	blt	16c40 <__assert_fail@plt+0x5468>
   16c10:	movw	r0, #0
   16c14:	str	r0, [fp, #-4]
   16c18:	movw	r0, #16980	; 0x4254
   16c1c:	movt	r0, #2
   16c20:	bl	1161c <gettext@plt>
   16c24:	ldr	r3, [sp, #8]
   16c28:	movw	lr, #0
   16c2c:	str	r0, [sp, #4]
   16c30:	mov	r0, lr
   16c34:	mov	r1, lr
   16c38:	ldr	r2, [sp, #4]
   16c3c:	bl	1158c <error@plt>
   16c40:	ldr	r0, [fp, #-4]
   16c44:	cmp	r0, #0
   16c48:	beq	16c50 <__assert_fail@plt+0x5478>
   16c4c:	b	16c70 <__assert_fail@plt+0x5498>
   16c50:	movw	r0, #17132	; 0x42ec
   16c54:	movt	r0, #2
   16c58:	movw	r1, #17141	; 0x42f5
   16c5c:	movt	r1, #2
   16c60:	movw	r2, #396	; 0x18c
   16c64:	movw	r3, #17150	; 0x42fe
   16c68:	movt	r3, #2
   16c6c:	bl	117d8 <__assert_fail@plt>
   16c70:	mov	sp, fp
   16c74:	pop	{fp, pc}
   16c78:	push	{fp, lr}
   16c7c:	mov	fp, sp
   16c80:	sub	sp, sp, #40	; 0x28
   16c84:	str	r0, [fp, #-4]
   16c88:	str	r1, [fp, #-8]
   16c8c:	bl	166c8 <__assert_fail@plt+0x4ef0>
   16c90:	ldr	r1, [pc, #108]	; 16d04 <__assert_fail@plt+0x552c>
   16c94:	str	r0, [sp, #12]
   16c98:	ldr	r0, [sp, #12]
   16c9c:	cmp	r0, r1
   16ca0:	bge	16cb0 <__assert_fail@plt+0x54d8>
   16ca4:	ldr	r0, [sp, #12]
   16ca8:	add	r0, r0, #1
   16cac:	str	r0, [sp, #12]
   16cb0:	ldr	r0, [fp, #-4]
   16cb4:	str	r0, [sp, #16]
   16cb8:	ldr	r0, [fp, #-8]
   16cbc:	str	r0, [sp, #20]
   16cc0:	movw	r0, #0
   16cc4:	str	r0, [sp, #24]
   16cc8:	mvn	r1, #0
   16ccc:	str	r1, [sp, #28]
   16cd0:	ldr	r1, [sp, #12]
   16cd4:	add	r2, sp, #16
   16cd8:	movw	r3, #28340	; 0x6eb4
   16cdc:	movt	r3, #1
   16ce0:	str	r2, [sp, #8]
   16ce4:	mov	r2, r3
   16ce8:	ldr	r3, [sp, #8]
   16cec:	bl	16770 <__assert_fail@plt+0x4f98>
   16cf0:	ldr	r1, [sp, #28]
   16cf4:	str	r0, [sp, #4]
   16cf8:	mov	r0, r1
   16cfc:	mov	sp, fp
   16d00:	pop	{fp, pc}
   16d04:	svcvc	0x00ffffff
   16d08:	push	{fp, lr}
   16d0c:	mov	fp, sp
   16d10:	sub	sp, sp, #40	; 0x28
   16d14:	movw	r0, #17186	; 0x4322
   16d18:	movt	r0, #2
   16d1c:	str	r0, [fp, #-8]
   16d20:	mvn	r0, #0
   16d24:	str	r0, [fp, #-12]
   16d28:	ldr	r0, [fp, #-8]
   16d2c:	bl	178b0 <__assert_fail@plt+0x60d8>
   16d30:	str	r0, [fp, #-16]
   16d34:	ldr	r0, [fp, #-16]
   16d38:	movw	lr, #0
   16d3c:	cmp	r0, lr
   16d40:	beq	16e70 <__assert_fail@plt+0x5698>
   16d44:	movw	r0, #0
   16d48:	str	r0, [sp, #20]
   16d4c:	bl	11664 <__errno_location@plt>
   16d50:	movw	lr, #0
   16d54:	str	lr, [r0]
   16d58:	ldr	r0, [fp, #-16]
   16d5c:	bl	1173c <readdir64@plt>
   16d60:	str	r0, [sp, #16]
   16d64:	ldr	r0, [sp, #16]
   16d68:	movw	lr, #0
   16d6c:	cmp	lr, r0
   16d70:	bne	16dd0 <__assert_fail@plt+0x55f8>
   16d74:	bl	11664 <__errno_location@plt>
   16d78:	ldr	r0, [r0]
   16d7c:	cmp	r0, #0
   16d80:	beq	16dcc <__assert_fail@plt+0x55f4>
   16d84:	bl	11664 <__errno_location@plt>
   16d88:	ldr	r1, [r0]
   16d8c:	ldr	r2, [fp, #-8]
   16d90:	movw	r0, #0
   16d94:	movw	lr, #8
   16d98:	str	r1, [sp, #8]
   16d9c:	mov	r1, lr
   16da0:	bl	1b004 <__assert_fail@plt+0x982c>
   16da4:	movw	r1, #0
   16da8:	str	r0, [sp, #4]
   16dac:	mov	r0, r1
   16db0:	ldr	r1, [sp, #8]
   16db4:	movw	r2, #17319	; 0x43a7
   16db8:	movt	r2, #2
   16dbc:	ldr	r3, [sp, #4]
   16dc0:	bl	1158c <error@plt>
   16dc4:	movw	r0, #0
   16dc8:	str	r0, [sp, #20]
   16dcc:	b	16e48 <__assert_fail@plt+0x5670>
   16dd0:	ldr	r0, [sp, #16]
   16dd4:	ldrb	r0, [r0, #19]
   16dd8:	cmp	r0, #46	; 0x2e
   16ddc:	bne	16e10 <__assert_fail@plt+0x5638>
   16de0:	ldr	r0, [sp, #16]
   16de4:	ldrb	r0, [r0, #20]
   16de8:	cmp	r0, #0
   16dec:	beq	16e44 <__assert_fail@plt+0x566c>
   16df0:	ldr	r0, [sp, #16]
   16df4:	ldrb	r0, [r0, #20]
   16df8:	cmp	r0, #46	; 0x2e
   16dfc:	bne	16e10 <__assert_fail@plt+0x5638>
   16e00:	ldr	r0, [sp, #16]
   16e04:	ldrb	r0, [r0, #21]
   16e08:	cmp	r0, #0
   16e0c:	beq	16e44 <__assert_fail@plt+0x566c>
   16e10:	ldr	r0, [sp, #16]
   16e14:	add	r0, r0, #19
   16e18:	movw	r1, #0
   16e1c:	bl	17058 <__assert_fail@plt+0x5880>
   16e20:	str	r0, [sp, #12]
   16e24:	ldr	r0, [sp, #12]
   16e28:	ldr	r1, [fp, #-12]
   16e2c:	cmp	r0, r1
   16e30:	ble	16e3c <__assert_fail@plt+0x5664>
   16e34:	ldr	r0, [sp, #12]
   16e38:	str	r0, [fp, #-12]
   16e3c:	movw	r0, #1
   16e40:	str	r0, [sp, #20]
   16e44:	b	16d4c <__assert_fail@plt+0x5574>
   16e48:	ldr	r0, [fp, #-16]
   16e4c:	bl	117cc <closedir@plt>
   16e50:	ldr	lr, [sp, #20]
   16e54:	cmp	lr, #0
   16e58:	str	r0, [sp]
   16e5c:	beq	16e6c <__assert_fail@plt+0x5694>
   16e60:	ldr	r0, [fp, #-12]
   16e64:	str	r0, [fp, #-4]
   16e68:	b	16e78 <__assert_fail@plt+0x56a0>
   16e6c:	b	16e70 <__assert_fail@plt+0x5698>
   16e70:	mvn	r0, #0
   16e74:	str	r0, [fp, #-4]
   16e78:	ldr	r0, [fp, #-4]
   16e7c:	mov	sp, fp
   16e80:	pop	{fp, pc}
   16e84:	push	{fp, lr}
   16e88:	mov	fp, sp
   16e8c:	sub	sp, sp, #8
   16e90:	str	r0, [sp, #4]
   16e94:	ldr	r0, [sp, #4]
   16e98:	movw	r1, #1
   16e9c:	bl	1f728 <__assert_fail@plt+0xdf50>
   16ea0:	str	r0, [sp]
   16ea4:	ldr	r0, [sp]
   16ea8:	and	r0, r0, #1
   16eac:	mov	sp, fp
   16eb0:	pop	{fp, pc}
   16eb4:	push	{fp, lr}
   16eb8:	mov	fp, sp
   16ebc:	sub	sp, sp, #16
   16ec0:	str	r0, [sp, #8]
   16ec4:	str	r1, [sp, #4]
   16ec8:	ldr	r0, [sp, #8]
   16ecc:	bl	16e84 <__assert_fail@plt+0x56ac>
   16ed0:	cmp	r0, #0
   16ed4:	bne	16f78 <__assert_fail@plt+0x57a0>
   16ed8:	ldr	r0, [sp, #4]
   16edc:	str	r0, [sp]
   16ee0:	ldr	r0, [sp]
   16ee4:	ldr	r0, [r0, #8]
   16ee8:	ldr	r1, [sp]
   16eec:	ldr	r1, [r1, #4]
   16ef0:	cmp	r0, r1
   16ef4:	bcs	16f60 <__assert_fail@plt+0x5788>
   16ef8:	ldr	r0, [sp]
   16efc:	ldr	r1, [r0]
   16f00:	ldr	r0, [r0, #8]
   16f04:	add	r0, r1, r0, lsl #2
   16f08:	ldr	r0, [r0]
   16f0c:	ldr	r1, [sp, #8]
   16f10:	cmp	r0, r1
   16f14:	bge	16f2c <__assert_fail@plt+0x5754>
   16f18:	ldr	r0, [sp]
   16f1c:	ldr	r1, [r0, #8]
   16f20:	add	r1, r1, #1
   16f24:	str	r1, [r0, #8]
   16f28:	b	16f5c <__assert_fail@plt+0x5784>
   16f2c:	ldr	r0, [sp]
   16f30:	ldr	r1, [r0]
   16f34:	ldr	r0, [r0, #8]
   16f38:	add	r0, r1, r0, lsl #2
   16f3c:	ldr	r0, [r0]
   16f40:	ldr	r1, [sp, #8]
   16f44:	cmp	r0, r1
   16f48:	bne	16f58 <__assert_fail@plt+0x5780>
   16f4c:	movw	r0, #0
   16f50:	str	r0, [fp, #-4]
   16f54:	b	16f80 <__assert_fail@plt+0x57a8>
   16f58:	b	16f60 <__assert_fail@plt+0x5788>
   16f5c:	b	16ee0 <__assert_fail@plt+0x5708>
   16f60:	ldr	r0, [sp, #8]
   16f64:	ldr	r1, [sp]
   16f68:	str	r0, [r1, #12]
   16f6c:	mvn	r0, #0
   16f70:	str	r0, [fp, #-4]
   16f74:	b	16f80 <__assert_fail@plt+0x57a8>
   16f78:	movw	r0, #0
   16f7c:	str	r0, [fp, #-4]
   16f80:	ldr	r0, [fp, #-4]
   16f84:	mov	sp, fp
   16f88:	pop	{fp, pc}
   16f8c:	push	{r4, r5, fp, lr}
   16f90:	add	fp, sp, #8
   16f94:	sub	sp, sp, #48	; 0x30
   16f98:	str	r0, [fp, #-12]
   16f9c:	movw	r0, #20944	; 0x51d0
   16fa0:	movt	r0, #3
   16fa4:	ldr	r0, [r0]
   16fa8:	bl	1fb08 <__assert_fail@plt+0xe330>
   16fac:	movw	lr, #20956	; 0x51dc
   16fb0:	movt	lr, #3
   16fb4:	ldr	lr, [lr]
   16fb8:	ldr	r1, [fp, #-12]
   16fbc:	movw	r2, #20844	; 0x516c
   16fc0:	movt	r2, #3
   16fc4:	ldr	r3, [r2]
   16fc8:	movw	r2, #17228	; 0x434c
   16fcc:	movt	r2, #2
   16fd0:	str	r0, [fp, #-16]
   16fd4:	mov	r0, r2
   16fd8:	str	r3, [fp, #-20]	; 0xffffffec
   16fdc:	str	lr, [fp, #-24]	; 0xffffffe8
   16fe0:	str	r1, [sp, #28]
   16fe4:	bl	1161c <gettext@plt>
   16fe8:	movw	r1, #17243	; 0x435b
   16fec:	movt	r1, #2
   16ff0:	str	r0, [sp, #24]
   16ff4:	mov	r0, r1
   16ff8:	bl	1161c <gettext@plt>
   16ffc:	movw	r1, #17258	; 0x436a
   17000:	movt	r1, #2
   17004:	str	r0, [sp, #20]
   17008:	mov	r0, r1
   1700c:	bl	1161c <gettext@plt>
   17010:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17014:	str	r0, [sp, #16]
   17018:	mov	r0, r1
   1701c:	ldr	r1, [sp, #28]
   17020:	movw	r2, #17214	; 0x433e
   17024:	movt	r2, #2
   17028:	ldr	r3, [fp, #-20]	; 0xffffffec
   1702c:	ldr	lr, [sp, #24]
   17030:	str	lr, [sp]
   17034:	ldr	ip, [sp, #20]
   17038:	str	ip, [sp, #4]
   1703c:	ldr	r4, [sp, #16]
   17040:	str	r4, [sp, #8]
   17044:	movw	r5, #0
   17048:	str	r5, [sp, #12]
   1704c:	bl	1bf9c <__assert_fail@plt+0xa7c4>
   17050:	sub	sp, fp, #8
   17054:	pop	{r4, r5, fp, pc}
   17058:	push	{fp, lr}
   1705c:	mov	fp, sp
   17060:	sub	sp, sp, #48	; 0x30
   17064:	str	r0, [fp, #-4]
   17068:	str	r1, [fp, #-8]
   1706c:	bl	11664 <__errno_location@plt>
   17070:	movw	r1, #0
   17074:	str	r1, [r0]
   17078:	ldr	r0, [fp, #-4]
   1707c:	sub	r1, fp, #16
   17080:	movw	r2, #10
   17084:	bl	1143c <strtol@plt>
   17088:	ldr	r1, [pc, #404]	; 17224 <__assert_fail@plt+0x5a4c>
   1708c:	str	r0, [fp, #-12]
   17090:	ldr	r0, [fp, #-12]
   17094:	cmp	r1, r0
   17098:	beq	170ac <__assert_fail@plt+0x58d4>
   1709c:	ldr	r0, [pc, #388]	; 17228 <__assert_fail@plt+0x5a50>
   170a0:	ldr	r1, [fp, #-12]
   170a4:	cmp	r0, r1
   170a8:	bne	170f4 <__assert_fail@plt+0x591c>
   170ac:	bl	11664 <__errno_location@plt>
   170b0:	ldr	r0, [r0]
   170b4:	cmp	r0, #34	; 0x22
   170b8:	bne	170d8 <__assert_fail@plt+0x5900>
   170bc:	bl	11664 <__errno_location@plt>
   170c0:	ldr	r1, [r0]
   170c4:	ldr	r3, [fp, #-4]
   170c8:	movw	r0, #1
   170cc:	movw	r2, #17319	; 0x43a7
   170d0:	movt	r2, #2
   170d4:	bl	1158c <error@plt>
   170d8:	bl	11664 <__errno_location@plt>
   170dc:	ldr	r1, [r0]
   170e0:	ldr	r3, [fp, #-4]
   170e4:	movw	r0, #1
   170e8:	movw	r2, #17319	; 0x43a7
   170ec:	movt	r2, #2
   170f0:	bl	1158c <error@plt>
   170f4:	ldr	r0, [pc, #296]	; 17224 <__assert_fail@plt+0x5a4c>
   170f8:	ldr	r1, [fp, #-12]
   170fc:	cmp	r1, r0
   17100:	bgt	17110 <__assert_fail@plt+0x5938>
   17104:	ldr	r0, [fp, #-12]
   17108:	cmp	r0, #-2147483648	; 0x80000000
   1710c:	bge	17138 <__assert_fail@plt+0x5960>
   17110:	bl	11664 <__errno_location@plt>
   17114:	movw	lr, #34	; 0x22
   17118:	str	lr, [r0]
   1711c:	bl	11664 <__errno_location@plt>
   17120:	ldr	r1, [r0]
   17124:	ldr	r3, [fp, #-4]
   17128:	movw	r0, #1
   1712c:	movw	r2, #17319	; 0x43a7
   17130:	movt	r2, #2
   17134:	bl	1158c <error@plt>
   17138:	ldr	r0, [fp, #-16]
   1713c:	ldrsb	r0, [r0]
   17140:	cmp	r0, #0
   17144:	beq	171b4 <__assert_fail@plt+0x59dc>
   17148:	bl	11664 <__errno_location@plt>
   1714c:	ldr	r1, [r0]
   17150:	movw	r0, #17271	; 0x4377
   17154:	movt	r0, #2
   17158:	str	r1, [fp, #-20]	; 0xffffffec
   1715c:	bl	1161c <gettext@plt>
   17160:	ldr	r1, [fp, #-8]
   17164:	ldr	r2, [fp, #-16]
   17168:	movw	lr, #0
   1716c:	str	r0, [sp, #24]
   17170:	mov	r0, lr
   17174:	bl	1b004 <__assert_fail@plt+0x982c>
   17178:	ldr	r1, [fp, #-8]
   1717c:	ldr	r2, [fp, #-4]
   17180:	movw	lr, #1
   17184:	str	r0, [sp, #20]
   17188:	mov	r0, lr
   1718c:	bl	1b004 <__assert_fail@plt+0x982c>
   17190:	movw	r1, #1
   17194:	str	r0, [sp, #16]
   17198:	mov	r0, r1
   1719c:	ldr	r1, [fp, #-20]	; 0xffffffec
   171a0:	ldr	r2, [sp, #24]
   171a4:	ldr	r3, [sp, #20]
   171a8:	ldr	lr, [sp, #16]
   171ac:	str	lr, [sp]
   171b0:	bl	1158c <error@plt>
   171b4:	ldr	r0, [fp, #-16]
   171b8:	ldr	r1, [fp, #-4]
   171bc:	cmp	r0, r1
   171c0:	bne	17210 <__assert_fail@plt+0x5a38>
   171c4:	bl	11664 <__errno_location@plt>
   171c8:	ldr	r1, [r0]
   171cc:	movw	r0, #17298	; 0x4392
   171d0:	movt	r0, #2
   171d4:	str	r1, [sp, #12]
   171d8:	bl	1161c <gettext@plt>
   171dc:	ldr	r1, [fp, #-8]
   171e0:	ldr	r2, [fp, #-4]
   171e4:	movw	lr, #0
   171e8:	str	r0, [sp, #8]
   171ec:	mov	r0, lr
   171f0:	bl	1b004 <__assert_fail@plt+0x982c>
   171f4:	movw	r1, #1
   171f8:	str	r0, [sp, #4]
   171fc:	mov	r0, r1
   17200:	ldr	r1, [sp, #12]
   17204:	ldr	r2, [sp, #8]
   17208:	ldr	r3, [sp, #4]
   1720c:	bl	1158c <error@plt>
   17210:	b	17214 <__assert_fail@plt+0x5a3c>
   17214:	b	17218 <__assert_fail@plt+0x5a40>
   17218:	ldr	r0, [fp, #-12]
   1721c:	mov	sp, fp
   17220:	pop	{fp, pc}
   17224:	svcvc	0x00ffffff
   17228:	andhi	r0, r0, r0
   1722c:	push	{fp, lr}
   17230:	mov	fp, sp
   17234:	sub	sp, sp, #32
   17238:	str	r0, [fp, #-4]
   1723c:	str	r1, [fp, #-8]
   17240:	ldr	r0, [fp, #-4]
   17244:	movw	r1, #17322	; 0x43aa
   17248:	movt	r1, #2
   1724c:	str	r0, [fp, #-12]
   17250:	mov	r0, r1
   17254:	bl	1161c <gettext@plt>
   17258:	ldr	r3, [fp, #-8]
   1725c:	ldr	r1, [fp, #-12]
   17260:	str	r0, [sp, #16]
   17264:	mov	r0, r1
   17268:	ldr	r1, [sp, #16]
   1726c:	movw	r2, #17528	; 0x4478
   17270:	movt	r2, #2
   17274:	movw	lr, #17214	; 0x433e
   17278:	movt	lr, #2
   1727c:	str	lr, [sp]
   17280:	movw	lr, #17567	; 0x449f
   17284:	movt	lr, #2
   17288:	str	lr, [sp, #4]
   1728c:	movw	lr, #17614	; 0x44ce
   17290:	movt	lr, #2
   17294:	str	lr, [sp, #8]
   17298:	bl	11658 <fprintf@plt>
   1729c:	mov	sp, fp
   172a0:	pop	{fp, pc}
   172a4:	push	{fp, lr}
   172a8:	mov	fp, sp
   172ac:	sub	sp, sp, #32
   172b0:	str	r0, [fp, #-4]
   172b4:	str	r1, [fp, #-8]
   172b8:	str	r2, [fp, #-12]
   172bc:	bl	11664 <__errno_location@plt>
   172c0:	ldr	r0, [r0]
   172c4:	str	r0, [sp, #16]
   172c8:	ldr	r0, [fp, #-8]
   172cc:	cmp	r0, #0
   172d0:	bls	172d8 <__assert_fail@plt+0x5b00>
   172d4:	b	172f8 <__assert_fail@plt+0x5b20>
   172d8:	movw	r0, #17636	; 0x44e4
   172dc:	movt	r0, #2
   172e0:	movw	r1, #17648	; 0x44f0
   172e4:	movt	r1, #2
   172e8:	movw	r2, #71	; 0x47
   172ec:	movw	r3, #17660	; 0x44fc
   172f0:	movt	r3, #2
   172f4:	bl	117d8 <__assert_fail@plt>
   172f8:	ldr	r0, [fp, #-12]
   172fc:	ldr	r0, [r0]
   17300:	ldr	r1, [fp, #-8]
   17304:	bl	173f8 <__assert_fail@plt+0x5c20>
   17308:	str	r0, [sp, #12]
   1730c:	ldr	r0, [fp, #-12]
   17310:	ldr	r0, [r0]
   17314:	cmp	r0, #0
   17318:	bne	1736c <__assert_fail@plt+0x5b94>
   1731c:	ldr	r0, [fp, #-4]
   17320:	movw	r1, #0
   17324:	cmp	r1, r0
   17328:	bne	17330 <__assert_fail@plt+0x5b58>
   1732c:	b	17350 <__assert_fail@plt+0x5b78>
   17330:	movw	r0, #17702	; 0x4526
   17334:	movt	r0, #2
   17338:	movw	r1, #17648	; 0x44f0
   1733c:	movt	r1, #2
   17340:	movw	r2, #79	; 0x4f
   17344:	movw	r3, #17660	; 0x44fc
   17348:	movt	r3, #2
   1734c:	bl	117d8 <__assert_fail@plt>
   17350:	ldr	r0, [sp, #12]
   17354:	ldr	r1, [fp, #-12]
   17358:	str	r0, [r1]
   1735c:	ldr	r0, [sp, #12]
   17360:	bl	1fda0 <__assert_fail@plt+0xe5c8>
   17364:	str	r0, [sp, #8]
   17368:	b	173c8 <__assert_fail@plt+0x5bf0>
   1736c:	ldr	r0, [sp, #12]
   17370:	ldr	r1, [fp, #-12]
   17374:	ldr	r1, [r1]
   17378:	cmp	r0, r1
   1737c:	beq	173bc <__assert_fail@plt+0x5be4>
   17380:	ldr	r0, [sp, #12]
   17384:	ldr	r1, [fp, #-12]
   17388:	str	r0, [r1]
   1738c:	ldr	r0, [fp, #-4]
   17390:	ldr	r1, [sp, #12]
   17394:	bl	1fec0 <__assert_fail@plt+0xe6e8>
   17398:	str	r0, [sp, #8]
   1739c:	ldr	r0, [sp, #8]
   173a0:	movw	r1, #0
   173a4:	cmp	r1, r0
   173a8:	bne	173b8 <__assert_fail@plt+0x5be0>
   173ac:	bl	11664 <__errno_location@plt>
   173b0:	ldr	r0, [r0]
   173b4:	str	r0, [sp, #16]
   173b8:	b	173c4 <__assert_fail@plt+0x5bec>
   173bc:	ldr	r0, [fp, #-4]
   173c0:	str	r0, [sp, #8]
   173c4:	b	173c8 <__assert_fail@plt+0x5bf0>
   173c8:	ldr	r0, [sp, #8]
   173cc:	movw	r1, #0
   173d0:	cmp	r0, r1
   173d4:	beq	173ec <__assert_fail@plt+0x5c14>
   173d8:	ldr	r0, [sp, #16]
   173dc:	str	r0, [sp, #4]
   173e0:	bl	11664 <__errno_location@plt>
   173e4:	ldr	lr, [sp, #4]
   173e8:	str	lr, [r0]
   173ec:	ldr	r0, [sp, #8]
   173f0:	mov	sp, fp
   173f4:	pop	{fp, pc}
   173f8:	sub	sp, sp, #16
   173fc:	str	r0, [sp, #8]
   17400:	str	r1, [sp, #4]
   17404:	ldr	r0, [sp, #8]
   17408:	movw	r1, #0
   1740c:	cmp	r1, r0
   17410:	bne	17420 <__assert_fail@plt+0x5c48>
   17414:	movw	r0, #16
   17418:	str	r0, [sp]
   1741c:	b	17428 <__assert_fail@plt+0x5c50>
   17420:	ldr	r0, [sp, #8]
   17424:	str	r0, [sp]
   17428:	b	1742c <__assert_fail@plt+0x5c54>
   1742c:	ldr	r0, [sp]
   17430:	ldr	r1, [sp, #4]
   17434:	cmp	r0, r1
   17438:	bcs	1746c <__assert_fail@plt+0x5c94>
   1743c:	ldr	r0, [sp]
   17440:	lsl	r0, r0, #1
   17444:	ldr	r1, [sp]
   17448:	cmp	r0, r1
   1744c:	bcs	1745c <__assert_fail@plt+0x5c84>
   17450:	ldr	r0, [sp, #4]
   17454:	str	r0, [sp, #12]
   17458:	b	17474 <__assert_fail@plt+0x5c9c>
   1745c:	ldr	r0, [sp]
   17460:	lsl	r0, r0, #1
   17464:	str	r0, [sp]
   17468:	b	1742c <__assert_fail@plt+0x5c54>
   1746c:	ldr	r0, [sp]
   17470:	str	r0, [sp, #12]
   17474:	ldr	r0, [sp, #12]
   17478:	add	sp, sp, #16
   1747c:	bx	lr
   17480:	push	{fp, lr}
   17484:	mov	fp, sp
   17488:	sub	sp, sp, #16
   1748c:	str	r0, [fp, #-4]
   17490:	str	r1, [sp, #8]
   17494:	str	r2, [sp, #4]
   17498:	ldr	r0, [fp, #-4]
   1749c:	ldr	r1, [sp, #8]
   174a0:	ldr	r2, [sp, #4]
   174a4:	bl	172a4 <__assert_fail@plt+0x5acc>
   174a8:	str	r0, [sp]
   174ac:	ldr	r0, [sp]
   174b0:	movw	r1, #0
   174b4:	cmp	r1, r0
   174b8:	bne	174c8 <__assert_fail@plt+0x5cf0>
   174bc:	ldr	r0, [fp, #-4]
   174c0:	bl	1fc54 <__assert_fail@plt+0xe47c>
   174c4:	bl	1ef08 <__assert_fail@plt+0xd730>
   174c8:	ldr	r0, [sp]
   174cc:	mov	sp, fp
   174d0:	pop	{fp, pc}
   174d4:	push	{fp, lr}
   174d8:	mov	fp, sp
   174dc:	sub	sp, sp, #24
   174e0:	str	r0, [fp, #-8]
   174e4:	and	r0, r1, #1
   174e8:	strb	r0, [fp, #-9]
   174ec:	ldr	r0, [fp, #-8]
   174f0:	movw	r1, #1
   174f4:	movw	r2, #0
   174f8:	bl	1f728 <__assert_fail@plt+0xdf50>
   174fc:	str	r0, [sp, #8]
   17500:	ldr	r0, [sp, #8]
   17504:	movw	r1, #0
   17508:	cmp	r1, r0
   1750c:	bgt	1757c <__assert_fail@plt+0x5da4>
   17510:	ldrb	r0, [fp, #-9]
   17514:	tst	r0, #1
   17518:	beq	1752c <__assert_fail@plt+0x5d54>
   1751c:	ldr	r0, [sp, #8]
   17520:	orr	r0, r0, #1
   17524:	str	r0, [sp]
   17528:	b	1753c <__assert_fail@plt+0x5d64>
   1752c:	ldr	r0, [sp, #8]
   17530:	mvn	r1, #1
   17534:	and	r0, r0, r1
   17538:	str	r0, [sp]
   1753c:	ldr	r0, [sp]
   17540:	str	r0, [sp, #4]
   17544:	ldr	r0, [sp, #8]
   17548:	ldr	r1, [sp, #4]
   1754c:	cmp	r0, r1
   17550:	beq	1756c <__assert_fail@plt+0x5d94>
   17554:	ldr	r0, [fp, #-8]
   17558:	ldr	r2, [sp, #4]
   1755c:	movw	r1, #2
   17560:	bl	1f728 <__assert_fail@plt+0xdf50>
   17564:	cmn	r0, #1
   17568:	beq	17578 <__assert_fail@plt+0x5da0>
   1756c:	movw	r0, #0
   17570:	str	r0, [fp, #-4]
   17574:	b	17584 <__assert_fail@plt+0x5dac>
   17578:	b	1757c <__assert_fail@plt+0x5da4>
   1757c:	mvn	r0, #0
   17580:	str	r0, [fp, #-4]
   17584:	ldr	r0, [fp, #-4]
   17588:	mov	sp, fp
   1758c:	pop	{fp, pc}
   17590:	push	{fp, lr}
   17594:	mov	fp, sp
   17598:	sub	sp, sp, #8
   1759c:	str	r0, [sp, #4]
   175a0:	ldr	r0, [sp, #4]
   175a4:	movw	r1, #1030	; 0x406
   175a8:	movw	r2, #0
   175ac:	bl	1f728 <__assert_fail@plt+0xdf50>
   175b0:	mov	sp, fp
   175b4:	pop	{fp, pc}
   175b8:	sub	sp, sp, #4
   175bc:	str	r0, [sp]
   175c0:	ldr	r0, [sp]
   175c4:	movw	r1, #21156	; 0x52a4
   175c8:	movt	r1, #3
   175cc:	str	r0, [r1]
   175d0:	add	sp, sp, #4
   175d4:	bx	lr
   175d8:	push	{fp, lr}
   175dc:	mov	fp, sp
   175e0:	sub	sp, sp, #24
   175e4:	movw	r0, #0
   175e8:	strb	r0, [fp, #-1]
   175ec:	movw	r0, #20952	; 0x51d8
   175f0:	movt	r0, #3
   175f4:	ldr	r0, [r0]
   175f8:	bl	1fbb8 <__assert_fail@plt+0xe3e0>
   175fc:	cmp	r0, #0
   17600:	bls	17658 <__assert_fail@plt+0x5e80>
   17604:	movw	r0, #20952	; 0x51d8
   17608:	movt	r0, #3
   1760c:	ldr	r0, [r0]
   17610:	mov	r1, sp
   17614:	mov	r2, #1
   17618:	str	r2, [r1]
   1761c:	mov	r1, #0
   17620:	mov	r2, r1
   17624:	mov	r3, r1
   17628:	bl	1fc94 <__assert_fail@plt+0xe4bc>
   1762c:	cmp	r0, #0
   17630:	bne	17654 <__assert_fail@plt+0x5e7c>
   17634:	movw	r0, #20952	; 0x51d8
   17638:	movt	r0, #3
   1763c:	ldr	r0, [r0]
   17640:	bl	1fb08 <__assert_fail@plt+0xe330>
   17644:	cmp	r0, #0
   17648:	beq	17654 <__assert_fail@plt+0x5e7c>
   1764c:	movw	r0, #1
   17650:	strb	r0, [fp, #-1]
   17654:	b	17658 <__assert_fail@plt+0x5e80>
   17658:	movw	r0, #20952	; 0x51d8
   1765c:	movt	r0, #3
   17660:	ldr	r0, [r0]
   17664:	bl	213ac <__assert_fail@plt+0xfbd4>
   17668:	cmp	r0, #0
   1766c:	beq	17678 <__assert_fail@plt+0x5ea0>
   17670:	movw	r0, #1
   17674:	strb	r0, [fp, #-1]
   17678:	ldrb	r0, [fp, #-1]
   1767c:	tst	r0, #1
   17680:	beq	17720 <__assert_fail@plt+0x5f48>
   17684:	movw	r0, #17719	; 0x4537
   17688:	movt	r0, #2
   1768c:	bl	1161c <gettext@plt>
   17690:	str	r0, [fp, #-8]
   17694:	movw	r0, #21156	; 0x52a4
   17698:	movt	r0, #3
   1769c:	ldr	r0, [r0]
   176a0:	movw	lr, #0
   176a4:	cmp	r0, lr
   176a8:	beq	17700 <__assert_fail@plt+0x5f28>
   176ac:	bl	11664 <__errno_location@plt>
   176b0:	ldr	r1, [r0]
   176b4:	movw	r0, #21156	; 0x52a4
   176b8:	movt	r0, #3
   176bc:	ldr	r0, [r0]
   176c0:	str	r1, [sp, #12]
   176c4:	bl	1b1d4 <__assert_fail@plt+0x99fc>
   176c8:	ldr	r1, [fp, #-8]
   176cc:	movw	lr, #0
   176d0:	str	r0, [sp, #8]
   176d4:	mov	r0, lr
   176d8:	ldr	lr, [sp, #12]
   176dc:	str	r1, [sp, #4]
   176e0:	mov	r1, lr
   176e4:	movw	r2, #17738	; 0x454a
   176e8:	movt	r2, #2
   176ec:	ldr	r3, [sp, #8]
   176f0:	ldr	ip, [sp, #4]
   176f4:	str	ip, [sp]
   176f8:	bl	1158c <error@plt>
   176fc:	b	1771c <__assert_fail@plt+0x5f44>
   17700:	bl	11664 <__errno_location@plt>
   17704:	ldr	r1, [r0]
   17708:	ldr	r3, [fp, #-8]
   1770c:	movw	r0, #0
   17710:	movw	r2, #17319	; 0x43a7
   17714:	movt	r2, #2
   17718:	bl	1158c <error@plt>
   1771c:	b	17720 <__assert_fail@plt+0x5f48>
   17720:	bl	17790 <__assert_fail@plt+0x5fb8>
   17724:	ldrb	lr, [fp, #-1]
   17728:	tst	lr, #1
   1772c:	beq	17740 <__assert_fail@plt+0x5f68>
   17730:	movw	r0, #20848	; 0x5170
   17734:	movt	r0, #3
   17738:	ldr	r0, [r0]
   1773c:	bl	11490 <_exit@plt>
   17740:	mov	sp, fp
   17744:	pop	{fp, pc}
   17748:	sub	sp, sp, #4
   1774c:	str	r0, [sp]
   17750:	ldr	r0, [sp]
   17754:	movw	r1, #21160	; 0x52a8
   17758:	movt	r1, #3
   1775c:	str	r0, [r1]
   17760:	add	sp, sp, #4
   17764:	bx	lr
   17768:	sub	sp, sp, #4
   1776c:	and	r0, r0, #1
   17770:	strb	r0, [sp, #3]
   17774:	ldrb	r0, [sp, #3]
   17778:	and	r0, r0, #1
   1777c:	movw	r1, #21164	; 0x52ac
   17780:	movt	r1, #3
   17784:	strb	r0, [r1]
   17788:	add	sp, sp, #4
   1778c:	bx	lr
   17790:	push	{fp, lr}
   17794:	mov	fp, sp
   17798:	sub	sp, sp, #24
   1779c:	movw	r0, #20956	; 0x51dc
   177a0:	movt	r0, #3
   177a4:	ldr	r0, [r0]
   177a8:	bl	213ac <__assert_fail@plt+0xfbd4>
   177ac:	cmp	r0, #0
   177b0:	beq	17880 <__assert_fail@plt+0x60a8>
   177b4:	movw	r0, #21164	; 0x52ac
   177b8:	movt	r0, #3
   177bc:	ldrb	r0, [r0]
   177c0:	tst	r0, #1
   177c4:	beq	177d8 <__assert_fail@plt+0x6000>
   177c8:	bl	11664 <__errno_location@plt>
   177cc:	ldr	r0, [r0]
   177d0:	cmp	r0, #32
   177d4:	beq	17880 <__assert_fail@plt+0x60a8>
   177d8:	movw	r0, #17745	; 0x4551
   177dc:	movt	r0, #2
   177e0:	bl	1161c <gettext@plt>
   177e4:	str	r0, [fp, #-4]
   177e8:	movw	r0, #21160	; 0x52a8
   177ec:	movt	r0, #3
   177f0:	ldr	r0, [r0]
   177f4:	movw	lr, #0
   177f8:	cmp	r0, lr
   177fc:	beq	17854 <__assert_fail@plt+0x607c>
   17800:	bl	11664 <__errno_location@plt>
   17804:	ldr	r1, [r0]
   17808:	movw	r0, #21160	; 0x52a8
   1780c:	movt	r0, #3
   17810:	ldr	r0, [r0]
   17814:	str	r1, [fp, #-8]
   17818:	bl	1b1d4 <__assert_fail@plt+0x99fc>
   1781c:	ldr	r1, [fp, #-4]
   17820:	movw	lr, #0
   17824:	str	r0, [sp, #12]
   17828:	mov	r0, lr
   1782c:	ldr	lr, [fp, #-8]
   17830:	str	r1, [sp, #8]
   17834:	mov	r1, lr
   17838:	movw	r2, #17738	; 0x454a
   1783c:	movt	r2, #2
   17840:	ldr	r3, [sp, #12]
   17844:	ldr	ip, [sp, #8]
   17848:	str	ip, [sp]
   1784c:	bl	1158c <error@plt>
   17850:	b	17870 <__assert_fail@plt+0x6098>
   17854:	bl	11664 <__errno_location@plt>
   17858:	ldr	r1, [r0]
   1785c:	ldr	r3, [fp, #-4]
   17860:	movw	r0, #0
   17864:	movw	r2, #17319	; 0x43a7
   17868:	movt	r2, #2
   1786c:	bl	1158c <error@plt>
   17870:	movw	r0, #20848	; 0x5170
   17874:	movt	r0, #3
   17878:	ldr	r0, [r0]
   1787c:	bl	11490 <_exit@plt>
   17880:	movw	r0, #20944	; 0x51d0
   17884:	movt	r0, #3
   17888:	ldr	r0, [r0]
   1788c:	bl	213ac <__assert_fail@plt+0xfbd4>
   17890:	cmp	r0, #0
   17894:	beq	178a8 <__assert_fail@plt+0x60d0>
   17898:	movw	r0, #20848	; 0x5170
   1789c:	movt	r0, #3
   178a0:	ldr	r0, [r0]
   178a4:	bl	11490 <_exit@plt>
   178a8:	mov	sp, fp
   178ac:	pop	{fp, pc}
   178b0:	push	{fp, lr}
   178b4:	mov	fp, sp
   178b8:	sub	sp, sp, #40	; 0x28
   178bc:	str	r0, [fp, #-4]
   178c0:	ldr	r0, [fp, #-4]
   178c4:	bl	11598 <opendir@plt>
   178c8:	str	r0, [fp, #-8]
   178cc:	ldr	r0, [fp, #-8]
   178d0:	movw	lr, #0
   178d4:	cmp	r0, lr
   178d8:	beq	179a0 <__assert_fail@plt+0x61c8>
   178dc:	ldr	r0, [fp, #-8]
   178e0:	bl	11760 <dirfd@plt>
   178e4:	str	r0, [fp, #-12]
   178e8:	ldr	r0, [fp, #-12]
   178ec:	movw	lr, #0
   178f0:	cmp	lr, r0
   178f4:	bgt	1799c <__assert_fail@plt+0x61c4>
   178f8:	ldr	r0, [fp, #-12]
   178fc:	cmp	r0, #2
   17900:	bgt	1799c <__assert_fail@plt+0x61c4>
   17904:	ldr	r0, [fp, #-12]
   17908:	movw	r1, #1030	; 0x406
   1790c:	movw	r2, #3
   17910:	bl	1f728 <__assert_fail@plt+0xdf50>
   17914:	str	r0, [sp, #16]
   17918:	ldr	r0, [sp, #16]
   1791c:	cmp	r0, #0
   17920:	bge	1793c <__assert_fail@plt+0x6164>
   17924:	bl	11664 <__errno_location@plt>
   17928:	ldr	r0, [r0]
   1792c:	str	r0, [sp, #20]
   17930:	movw	r0, #0
   17934:	str	r0, [fp, #-16]
   17938:	b	17974 <__assert_fail@plt+0x619c>
   1793c:	ldr	r0, [sp, #16]
   17940:	bl	11748 <fdopendir@plt>
   17944:	str	r0, [fp, #-16]
   17948:	bl	11664 <__errno_location@plt>
   1794c:	ldr	r0, [r0]
   17950:	str	r0, [sp, #20]
   17954:	ldr	r0, [fp, #-16]
   17958:	movw	lr, #0
   1795c:	cmp	r0, lr
   17960:	bne	17970 <__assert_fail@plt+0x6198>
   17964:	ldr	r0, [sp, #16]
   17968:	bl	117c0 <close@plt>
   1796c:	str	r0, [sp, #12]
   17970:	b	17974 <__assert_fail@plt+0x619c>
   17974:	ldr	r0, [fp, #-8]
   17978:	bl	117cc <closedir@plt>
   1797c:	ldr	lr, [sp, #20]
   17980:	str	r0, [sp, #8]
   17984:	str	lr, [sp, #4]
   17988:	bl	11664 <__errno_location@plt>
   1798c:	ldr	lr, [sp, #4]
   17990:	str	lr, [r0]
   17994:	ldr	r0, [fp, #-16]
   17998:	str	r0, [fp, #-8]
   1799c:	b	179a0 <__assert_fail@plt+0x61c8>
   179a0:	ldr	r0, [fp, #-8]
   179a4:	mov	sp, fp
   179a8:	pop	{fp, pc}
   179ac:	sub	sp, sp, #8
   179b0:	push	{fp, lr}
   179b4:	mov	fp, sp
   179b8:	sub	sp, sp, #24
   179bc:	str	r3, [fp, #12]
   179c0:	str	r2, [fp, #8]
   179c4:	str	r0, [fp, #-4]
   179c8:	str	r1, [fp, #-8]
   179cc:	movw	r0, #0
   179d0:	str	r0, [sp, #12]
   179d4:	ldr	r0, [fp, #-8]
   179d8:	and	r0, r0, #64	; 0x40
   179dc:	cmp	r0, #0
   179e0:	beq	17a0c <__assert_fail@plt+0x6234>
   179e4:	add	r0, sp, #8
   179e8:	mov	r1, r0
   179ec:	add	r2, fp, #8
   179f0:	str	r2, [r1]
   179f4:	ldr	r1, [sp, #8]
   179f8:	add	r2, r1, #4
   179fc:	str	r2, [sp, #8]
   17a00:	ldr	r1, [r1]
   17a04:	str	r1, [sp, #12]
   17a08:	str	r0, [sp, #4]
   17a0c:	ldr	r0, [fp, #-4]
   17a10:	ldr	r1, [fp, #-8]
   17a14:	ldr	r2, [sp, #12]
   17a18:	bl	115a4 <open64@plt>
   17a1c:	bl	1b6bc <__assert_fail@plt+0x9ee4>
   17a20:	mov	sp, fp
   17a24:	pop	{fp, lr}
   17a28:	add	sp, sp, #8
   17a2c:	bx	lr
   17a30:	push	{r4, r5, fp, lr}
   17a34:	add	fp, sp, #8
   17a38:	sub	sp, sp, #432	; 0x1b0
   17a3c:	str	r0, [fp, #-16]
   17a40:	str	r1, [fp, #-20]	; 0xffffffec
   17a44:	bl	1155c <__ctype_get_mb_cur_max@plt>
   17a48:	cmp	r0, #1
   17a4c:	bls	17f94 <__assert_fail@plt+0x67bc>
   17a50:	ldr	r0, [fp, #-20]	; 0xffffffec
   17a54:	str	r0, [fp, #-60]	; 0xffffffc4
   17a58:	movw	r0, #0
   17a5c:	strb	r0, [fp, #-76]	; 0xffffffb4
   17a60:	sub	r1, fp, #76	; 0x4c
   17a64:	add	r2, r1, #4
   17a68:	str	r0, [sp, #68]	; 0x44
   17a6c:	mov	r0, r2
   17a70:	ldr	r2, [sp, #68]	; 0x44
   17a74:	and	r3, r2, #255	; 0xff
   17a78:	str	r1, [sp, #64]	; 0x40
   17a7c:	mov	r1, r3
   17a80:	movw	r2, #8
   17a84:	bl	11688 <memset@plt>
   17a88:	ldr	r0, [sp, #68]	; 0x44
   17a8c:	strb	r0, [fp, #-64]	; 0xffffffc0
   17a90:	ldr	r0, [sp, #64]	; 0x40
   17a94:	bl	18af4 <__assert_fail@plt+0x731c>
   17a98:	ldrb	r0, [fp, #-52]	; 0xffffffcc
   17a9c:	tst	r0, #1
   17aa0:	movw	r0, #0
   17aa4:	str	r0, [sp, #60]	; 0x3c
   17aa8:	beq	17ac0 <__assert_fail@plt+0x62e8>
   17aac:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17ab0:	cmp	r0, #0
   17ab4:	movw	r0, #0
   17ab8:	moveq	r0, #1
   17abc:	str	r0, [sp, #60]	; 0x3c
   17ac0:	ldr	r0, [sp, #60]	; 0x3c
   17ac4:	mvn	r1, #0
   17ac8:	eor	r0, r0, r1
   17acc:	tst	r0, #1
   17ad0:	beq	17f88 <__assert_fail@plt+0x67b0>
   17ad4:	movw	r0, #1
   17ad8:	strb	r0, [fp, #-77]	; 0xffffffb3
   17adc:	movw	r0, #0
   17ae0:	str	r0, [fp, #-84]	; 0xffffffac
   17ae4:	str	r0, [fp, #-88]	; 0xffffffa8
   17ae8:	str	r0, [fp, #-92]	; 0xffffffa4
   17aec:	ldr	r0, [fp, #-20]	; 0xffffffec
   17af0:	str	r0, [fp, #-132]	; 0xffffff7c
   17af4:	movw	r0, #0
   17af8:	strb	r0, [fp, #-148]	; 0xffffff6c
   17afc:	sub	r1, fp, #148	; 0x94
   17b00:	add	r1, r1, #4
   17b04:	str	r0, [sp, #56]	; 0x38
   17b08:	mov	r0, r1
   17b0c:	ldr	r1, [sp, #56]	; 0x38
   17b10:	and	r1, r1, #255	; 0xff
   17b14:	movw	r2, #8
   17b18:	str	r2, [sp, #52]	; 0x34
   17b1c:	bl	11688 <memset@plt>
   17b20:	ldr	r0, [sp, #56]	; 0x38
   17b24:	strb	r0, [fp, #-136]	; 0xffffff78
   17b28:	ldr	r1, [fp, #-16]
   17b2c:	str	r1, [fp, #-188]	; 0xffffff44
   17b30:	strb	r0, [fp, #-204]	; 0xffffff34
   17b34:	sub	r1, fp, #204	; 0xcc
   17b38:	add	r1, r1, #4
   17b3c:	mov	r0, r1
   17b40:	ldr	r1, [sp, #56]	; 0x38
   17b44:	and	r1, r1, #255	; 0xff
   17b48:	ldr	r2, [sp, #52]	; 0x34
   17b4c:	bl	11688 <memset@plt>
   17b50:	ldr	r0, [sp, #56]	; 0x38
   17b54:	strb	r0, [fp, #-192]	; 0xffffff40
   17b58:	sub	r0, fp, #204	; 0xcc
   17b5c:	bl	18af4 <__assert_fail@plt+0x731c>
   17b60:	ldrb	r0, [fp, #-180]	; 0xffffff4c
   17b64:	tst	r0, #1
   17b68:	movw	r0, #0
   17b6c:	str	r0, [sp, #48]	; 0x30
   17b70:	beq	17b88 <__assert_fail@plt+0x63b0>
   17b74:	ldr	r0, [fp, #-176]	; 0xffffff50
   17b78:	cmp	r0, #0
   17b7c:	movw	r0, #0
   17b80:	moveq	r0, #1
   17b84:	str	r0, [sp, #48]	; 0x30
   17b88:	ldr	r0, [sp, #48]	; 0x30
   17b8c:	mvn	r1, #0
   17b90:	eor	r0, r0, r1
   17b94:	tst	r0, #1
   17b98:	bne	17ba8 <__assert_fail@plt+0x63d0>
   17b9c:	movw	r0, #0
   17ba0:	str	r0, [fp, #-12]
   17ba4:	b	181d4 <__assert_fail@plt+0x69fc>
   17ba8:	ldrb	r0, [fp, #-77]	; 0xffffffb3
   17bac:	tst	r0, #1
   17bb0:	beq	17cfc <__assert_fail@plt+0x6524>
   17bb4:	ldr	r0, [fp, #-84]	; 0xffffffac
   17bb8:	cmp	r0, #10
   17bbc:	bcc	17cfc <__assert_fail@plt+0x6524>
   17bc0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   17bc4:	ldr	r1, [fp, #-84]	; 0xffffffac
   17bc8:	movw	r2, #5
   17bcc:	mul	r1, r1, r2
   17bd0:	cmp	r0, r1
   17bd4:	bcc	17cfc <__assert_fail@plt+0x6524>
   17bd8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   17bdc:	ldr	r1, [fp, #-92]	; 0xffffffa4
   17be0:	sub	r0, r0, r1
   17be4:	str	r0, [fp, #-208]	; 0xffffff30
   17be8:	ldr	r0, [fp, #-208]	; 0xffffff30
   17bec:	cmp	r0, #0
   17bf0:	movw	r0, #0
   17bf4:	str	r0, [sp, #44]	; 0x2c
   17bf8:	bls	17c3c <__assert_fail@plt+0x6464>
   17bfc:	sub	r0, fp, #148	; 0x94
   17c00:	bl	18af4 <__assert_fail@plt+0x731c>
   17c04:	ldrb	r0, [fp, #-124]	; 0xffffff84
   17c08:	tst	r0, #1
   17c0c:	movw	r0, #0
   17c10:	str	r0, [sp, #40]	; 0x28
   17c14:	beq	17c2c <__assert_fail@plt+0x6454>
   17c18:	ldr	r0, [fp, #-120]	; 0xffffff88
   17c1c:	cmp	r0, #0
   17c20:	movw	r0, #0
   17c24:	moveq	r0, #1
   17c28:	str	r0, [sp, #40]	; 0x28
   17c2c:	ldr	r0, [sp, #40]	; 0x28
   17c30:	mvn	r1, #0
   17c34:	eor	r0, r0, r1
   17c38:	str	r0, [sp, #44]	; 0x2c
   17c3c:	ldr	r0, [sp, #44]	; 0x2c
   17c40:	tst	r0, #1
   17c44:	beq	17c74 <__assert_fail@plt+0x649c>
   17c48:	ldr	r0, [fp, #-128]	; 0xffffff80
   17c4c:	ldr	r1, [fp, #-132]	; 0xffffff7c
   17c50:	add	r0, r1, r0
   17c54:	str	r0, [fp, #-132]	; 0xffffff7c
   17c58:	movw	r0, #0
   17c5c:	strb	r0, [fp, #-136]	; 0xffffff78
   17c60:	ldr	r0, [fp, #-208]	; 0xffffff30
   17c64:	mvn	r1, #0
   17c68:	add	r0, r0, r1
   17c6c:	str	r0, [fp, #-208]	; 0xffffff30
   17c70:	b	17be8 <__assert_fail@plt+0x6410>
   17c74:	ldr	r0, [fp, #-88]	; 0xffffffa8
   17c78:	str	r0, [fp, #-92]	; 0xffffffa4
   17c7c:	sub	r0, fp, #148	; 0x94
   17c80:	bl	18af4 <__assert_fail@plt+0x731c>
   17c84:	ldrb	r0, [fp, #-124]	; 0xffffff84
   17c88:	tst	r0, #1
   17c8c:	movw	r0, #0
   17c90:	str	r0, [sp, #36]	; 0x24
   17c94:	beq	17cac <__assert_fail@plt+0x64d4>
   17c98:	ldr	r0, [fp, #-120]	; 0xffffff88
   17c9c:	cmp	r0, #0
   17ca0:	movw	r0, #0
   17ca4:	moveq	r0, #1
   17ca8:	str	r0, [sp, #36]	; 0x24
   17cac:	ldr	r0, [sp, #36]	; 0x24
   17cb0:	mvn	r1, #0
   17cb4:	eor	r0, r0, r1
   17cb8:	tst	r0, #1
   17cbc:	bne	17cf8 <__assert_fail@plt+0x6520>
   17cc0:	ldr	r0, [fp, #-16]
   17cc4:	ldr	r1, [fp, #-20]	; 0xffffffec
   17cc8:	sub	r2, fp, #212	; 0xd4
   17ccc:	bl	181e0 <__assert_fail@plt+0x6a08>
   17cd0:	and	r0, r0, #1
   17cd4:	strb	r0, [fp, #-213]	; 0xffffff2b
   17cd8:	ldrb	r0, [fp, #-213]	; 0xffffff2b
   17cdc:	tst	r0, #1
   17ce0:	beq	17cf0 <__assert_fail@plt+0x6518>
   17ce4:	ldr	r0, [fp, #-212]	; 0xffffff2c
   17ce8:	str	r0, [fp, #-12]
   17cec:	b	181d4 <__assert_fail@plt+0x69fc>
   17cf0:	movw	r0, #0
   17cf4:	strb	r0, [fp, #-77]	; 0xffffffb3
   17cf8:	b	17cfc <__assert_fail@plt+0x6524>
   17cfc:	ldr	r0, [fp, #-84]	; 0xffffffac
   17d00:	add	r0, r0, #1
   17d04:	str	r0, [fp, #-84]	; 0xffffffac
   17d08:	ldr	r0, [fp, #-88]	; 0xffffffa8
   17d0c:	add	r0, r0, #1
   17d10:	str	r0, [fp, #-88]	; 0xffffffa8
   17d14:	ldrb	r0, [fp, #-180]	; 0xffffff4c
   17d18:	tst	r0, #1
   17d1c:	beq	17d40 <__assert_fail@plt+0x6568>
   17d20:	ldrb	r0, [fp, #-52]	; 0xffffffcc
   17d24:	tst	r0, #1
   17d28:	beq	17d40 <__assert_fail@plt+0x6568>
   17d2c:	ldr	r0, [fp, #-176]	; 0xffffff50
   17d30:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17d34:	cmp	r0, r1
   17d38:	beq	17d68 <__assert_fail@plt+0x6590>
   17d3c:	b	17f68 <__assert_fail@plt+0x6790>
   17d40:	ldr	r0, [fp, #-184]	; 0xffffff48
   17d44:	ldr	r1, [fp, #-56]	; 0xffffffc8
   17d48:	cmp	r0, r1
   17d4c:	bne	17f68 <__assert_fail@plt+0x6790>
   17d50:	ldr	r0, [fp, #-188]	; 0xffffff44
   17d54:	ldr	r1, [fp, #-60]	; 0xffffffc4
   17d58:	ldr	r2, [fp, #-184]	; 0xffffff48
   17d5c:	bl	114cc <memcmp@plt>
   17d60:	cmp	r0, #0
   17d64:	bne	17f68 <__assert_fail@plt+0x6790>
   17d68:	add	r0, sp, #168	; 0xa8
   17d6c:	sub	r1, fp, #204	; 0xcc
   17d70:	movw	r2, #56	; 0x38
   17d74:	bl	1149c <memcpy@plt>
   17d78:	ldr	r0, [sp, #188]	; 0xbc
   17d7c:	ldr	r1, [sp, #184]	; 0xb8
   17d80:	add	r0, r1, r0
   17d84:	str	r0, [sp, #184]	; 0xb8
   17d88:	movw	r0, #0
   17d8c:	strb	r0, [sp, #180]	; 0xb4
   17d90:	ldr	r1, [fp, #-20]	; 0xffffffec
   17d94:	str	r1, [sp, #128]	; 0x80
   17d98:	strb	r0, [sp, #112]	; 0x70
   17d9c:	add	r1, sp, #112	; 0x70
   17da0:	add	r2, r1, #4
   17da4:	str	r0, [sp, #32]
   17da8:	mov	r0, r2
   17dac:	ldr	r2, [sp, #32]
   17db0:	and	lr, r2, #255	; 0xff
   17db4:	str	r1, [sp, #28]
   17db8:	mov	r1, lr
   17dbc:	movw	r2, #8
   17dc0:	bl	11688 <memset@plt>
   17dc4:	ldr	r0, [sp, #32]
   17dc8:	strb	r0, [sp, #124]	; 0x7c
   17dcc:	ldr	r0, [sp, #28]
   17dd0:	bl	18af4 <__assert_fail@plt+0x731c>
   17dd4:	ldrb	r0, [sp, #136]	; 0x88
   17dd8:	tst	r0, #1
   17ddc:	movw	r0, #0
   17de0:	str	r0, [sp, #24]
   17de4:	beq	17dfc <__assert_fail@plt+0x6624>
   17de8:	ldr	r0, [sp, #140]	; 0x8c
   17dec:	cmp	r0, #0
   17df0:	movw	r0, #0
   17df4:	moveq	r0, #1
   17df8:	str	r0, [sp, #24]
   17dfc:	ldr	r0, [sp, #24]
   17e00:	mvn	r1, #0
   17e04:	eor	r0, r0, r1
   17e08:	tst	r0, #1
   17e0c:	bne	17e14 <__assert_fail@plt+0x663c>
   17e10:	bl	117a8 <abort@plt>
   17e14:	ldr	r0, [sp, #132]	; 0x84
   17e18:	ldr	r1, [sp, #128]	; 0x80
   17e1c:	add	r0, r1, r0
   17e20:	str	r0, [sp, #128]	; 0x80
   17e24:	movw	r0, #0
   17e28:	strb	r0, [sp, #124]	; 0x7c
   17e2c:	add	r0, sp, #112	; 0x70
   17e30:	bl	18af4 <__assert_fail@plt+0x731c>
   17e34:	ldrb	r0, [sp, #136]	; 0x88
   17e38:	tst	r0, #1
   17e3c:	movw	r0, #0
   17e40:	str	r0, [sp, #20]
   17e44:	beq	17e5c <__assert_fail@plt+0x6684>
   17e48:	ldr	r0, [sp, #140]	; 0x8c
   17e4c:	cmp	r0, #0
   17e50:	movw	r0, #0
   17e54:	moveq	r0, #1
   17e58:	str	r0, [sp, #20]
   17e5c:	ldr	r0, [sp, #20]
   17e60:	mvn	r1, #0
   17e64:	eor	r0, r0, r1
   17e68:	tst	r0, #1
   17e6c:	bne	17e7c <__assert_fail@plt+0x66a4>
   17e70:	ldr	r0, [fp, #-188]	; 0xffffff44
   17e74:	str	r0, [fp, #-12]
   17e78:	b	181d4 <__assert_fail@plt+0x69fc>
   17e7c:	add	r0, sp, #168	; 0xa8
   17e80:	bl	18af4 <__assert_fail@plt+0x731c>
   17e84:	ldrb	r0, [sp, #192]	; 0xc0
   17e88:	tst	r0, #1
   17e8c:	movw	r0, #0
   17e90:	str	r0, [sp, #16]
   17e94:	beq	17eac <__assert_fail@plt+0x66d4>
   17e98:	ldr	r0, [sp, #196]	; 0xc4
   17e9c:	cmp	r0, #0
   17ea0:	movw	r0, #0
   17ea4:	moveq	r0, #1
   17ea8:	str	r0, [sp, #16]
   17eac:	ldr	r0, [sp, #16]
   17eb0:	mvn	r1, #0
   17eb4:	eor	r0, r0, r1
   17eb8:	tst	r0, #1
   17ebc:	bne	17ecc <__assert_fail@plt+0x66f4>
   17ec0:	movw	r0, #0
   17ec4:	str	r0, [fp, #-12]
   17ec8:	b	181d4 <__assert_fail@plt+0x69fc>
   17ecc:	ldr	r0, [fp, #-88]	; 0xffffffa8
   17ed0:	add	r0, r0, #1
   17ed4:	str	r0, [fp, #-88]	; 0xffffffa8
   17ed8:	ldrb	r0, [sp, #192]	; 0xc0
   17edc:	tst	r0, #1
   17ee0:	beq	17f04 <__assert_fail@plt+0x672c>
   17ee4:	ldrb	r0, [sp, #136]	; 0x88
   17ee8:	tst	r0, #1
   17eec:	beq	17f04 <__assert_fail@plt+0x672c>
   17ef0:	ldr	r0, [sp, #196]	; 0xc4
   17ef4:	ldr	r1, [sp, #140]	; 0x8c
   17ef8:	cmp	r0, r1
   17efc:	beq	17f30 <__assert_fail@plt+0x6758>
   17f00:	b	17f2c <__assert_fail@plt+0x6754>
   17f04:	ldr	r0, [sp, #188]	; 0xbc
   17f08:	ldr	r1, [sp, #132]	; 0x84
   17f0c:	cmp	r0, r1
   17f10:	bne	17f2c <__assert_fail@plt+0x6754>
   17f14:	ldr	r0, [sp, #184]	; 0xb8
   17f18:	ldr	r1, [sp, #128]	; 0x80
   17f1c:	ldr	r2, [sp, #188]	; 0xbc
   17f20:	bl	114cc <memcmp@plt>
   17f24:	cmp	r0, #0
   17f28:	beq	17f30 <__assert_fail@plt+0x6758>
   17f2c:	b	17f64 <__assert_fail@plt+0x678c>
   17f30:	b	17f34 <__assert_fail@plt+0x675c>
   17f34:	ldr	r0, [sp, #188]	; 0xbc
   17f38:	ldr	r1, [sp, #184]	; 0xb8
   17f3c:	add	r0, r1, r0
   17f40:	str	r0, [sp, #184]	; 0xb8
   17f44:	movw	r0, #0
   17f48:	strb	r0, [sp, #180]	; 0xb4
   17f4c:	ldr	r1, [sp, #132]	; 0x84
   17f50:	ldr	r2, [sp, #128]	; 0x80
   17f54:	add	r1, r2, r1
   17f58:	str	r1, [sp, #128]	; 0x80
   17f5c:	strb	r0, [sp, #124]	; 0x7c
   17f60:	b	17e2c <__assert_fail@plt+0x6654>
   17f64:	b	17f68 <__assert_fail@plt+0x6790>
   17f68:	b	17f6c <__assert_fail@plt+0x6794>
   17f6c:	ldr	r0, [fp, #-184]	; 0xffffff48
   17f70:	ldr	r1, [fp, #-188]	; 0xffffff44
   17f74:	add	r0, r1, r0
   17f78:	str	r0, [fp, #-188]	; 0xffffff44
   17f7c:	movw	r0, #0
   17f80:	strb	r0, [fp, #-192]	; 0xffffff40
   17f84:	b	17b58 <__assert_fail@plt+0x6380>
   17f88:	ldr	r0, [fp, #-16]
   17f8c:	str	r0, [fp, #-12]
   17f90:	b	181d4 <__assert_fail@plt+0x69fc>
   17f94:	ldr	r0, [fp, #-20]	; 0xffffffec
   17f98:	ldrb	r0, [r0]
   17f9c:	cmp	r0, #0
   17fa0:	beq	181cc <__assert_fail@plt+0x69f4>
   17fa4:	movw	r0, #1
   17fa8:	strb	r0, [sp, #111]	; 0x6f
   17fac:	movw	r0, #0
   17fb0:	str	r0, [sp, #104]	; 0x68
   17fb4:	str	r0, [sp, #100]	; 0x64
   17fb8:	str	r0, [sp, #96]	; 0x60
   17fbc:	ldr	r0, [fp, #-20]	; 0xffffffec
   17fc0:	str	r0, [sp, #92]	; 0x5c
   17fc4:	ldr	r0, [fp, #-20]	; 0xffffffec
   17fc8:	add	r1, r0, #1
   17fcc:	str	r1, [fp, #-20]	; 0xffffffec
   17fd0:	ldrb	r0, [r0]
   17fd4:	strb	r0, [sp, #91]	; 0x5b
   17fd8:	ldr	r0, [fp, #-16]
   17fdc:	ldrb	r0, [r0]
   17fe0:	cmp	r0, #0
   17fe4:	bne	17ff4 <__assert_fail@plt+0x681c>
   17fe8:	movw	r0, #0
   17fec:	str	r0, [fp, #-12]
   17ff0:	b	181d4 <__assert_fail@plt+0x69fc>
   17ff4:	ldrb	r0, [sp, #111]	; 0x6f
   17ff8:	tst	r0, #1
   17ffc:	beq	180f4 <__assert_fail@plt+0x691c>
   18000:	ldr	r0, [sp, #104]	; 0x68
   18004:	cmp	r0, #10
   18008:	bcc	180f4 <__assert_fail@plt+0x691c>
   1800c:	ldr	r0, [sp, #100]	; 0x64
   18010:	ldr	r1, [sp, #104]	; 0x68
   18014:	movw	r2, #5
   18018:	mul	r1, r1, r2
   1801c:	cmp	r0, r1
   18020:	bcc	180f4 <__assert_fail@plt+0x691c>
   18024:	ldr	r0, [sp, #92]	; 0x5c
   18028:	movw	r1, #0
   1802c:	cmp	r0, r1
   18030:	beq	18074 <__assert_fail@plt+0x689c>
   18034:	ldr	r0, [sp, #92]	; 0x5c
   18038:	ldr	r1, [sp, #100]	; 0x64
   1803c:	ldr	r2, [sp, #96]	; 0x60
   18040:	sub	r1, r1, r2
   18044:	bl	116d0 <strnlen@plt>
   18048:	ldr	r1, [sp, #92]	; 0x5c
   1804c:	add	r0, r1, r0
   18050:	str	r0, [sp, #92]	; 0x5c
   18054:	ldr	r0, [sp, #92]	; 0x5c
   18058:	ldrb	r0, [r0]
   1805c:	cmp	r0, #0
   18060:	bne	1806c <__assert_fail@plt+0x6894>
   18064:	movw	r0, #0
   18068:	str	r0, [sp, #92]	; 0x5c
   1806c:	ldr	r0, [sp, #100]	; 0x64
   18070:	str	r0, [sp, #96]	; 0x60
   18074:	ldr	r0, [sp, #92]	; 0x5c
   18078:	movw	r1, #0
   1807c:	cmp	r0, r1
   18080:	bne	180f0 <__assert_fail@plt+0x6918>
   18084:	ldr	r0, [fp, #-16]
   18088:	ldr	r1, [fp, #-20]	; 0xffffffec
   1808c:	mvn	r2, #0
   18090:	add	r1, r1, r2
   18094:	ldr	r3, [fp, #-20]	; 0xffffffec
   18098:	add	r2, r3, r2
   1809c:	str	r0, [sp, #12]
   180a0:	mov	r0, r2
   180a4:	str	r1, [sp, #8]
   180a8:	bl	11634 <strlen@plt>
   180ac:	ldr	r1, [sp, #12]
   180b0:	str	r0, [sp, #4]
   180b4:	mov	r0, r1
   180b8:	ldr	r1, [sp, #8]
   180bc:	ldr	r2, [sp, #4]
   180c0:	add	r3, sp, #84	; 0x54
   180c4:	bl	18838 <__assert_fail@plt+0x7060>
   180c8:	and	r0, r0, #1
   180cc:	strb	r0, [sp, #83]	; 0x53
   180d0:	ldrb	r0, [sp, #83]	; 0x53
   180d4:	tst	r0, #1
   180d8:	beq	180e8 <__assert_fail@plt+0x6910>
   180dc:	ldr	r0, [sp, #84]	; 0x54
   180e0:	str	r0, [fp, #-12]
   180e4:	b	181d4 <__assert_fail@plt+0x69fc>
   180e8:	movw	r0, #0
   180ec:	strb	r0, [sp, #111]	; 0x6f
   180f0:	b	180f4 <__assert_fail@plt+0x691c>
   180f4:	ldr	r0, [sp, #104]	; 0x68
   180f8:	add	r0, r0, #1
   180fc:	str	r0, [sp, #104]	; 0x68
   18100:	ldr	r0, [sp, #100]	; 0x64
   18104:	add	r0, r0, #1
   18108:	str	r0, [sp, #100]	; 0x64
   1810c:	ldr	r0, [fp, #-16]
   18110:	ldrb	r0, [r0]
   18114:	ldrb	r1, [sp, #91]	; 0x5b
   18118:	cmp	r0, r1
   1811c:	bne	181b8 <__assert_fail@plt+0x69e0>
   18120:	ldr	r0, [fp, #-16]
   18124:	add	r0, r0, #1
   18128:	str	r0, [sp, #76]	; 0x4c
   1812c:	ldr	r0, [fp, #-20]	; 0xffffffec
   18130:	str	r0, [sp, #72]	; 0x48
   18134:	ldr	r0, [sp, #72]	; 0x48
   18138:	ldrb	r0, [r0]
   1813c:	cmp	r0, #0
   18140:	bne	18150 <__assert_fail@plt+0x6978>
   18144:	ldr	r0, [fp, #-16]
   18148:	str	r0, [fp, #-12]
   1814c:	b	181d4 <__assert_fail@plt+0x69fc>
   18150:	ldr	r0, [sp, #76]	; 0x4c
   18154:	ldrb	r0, [r0]
   18158:	cmp	r0, #0
   1815c:	bne	1816c <__assert_fail@plt+0x6994>
   18160:	movw	r0, #0
   18164:	str	r0, [fp, #-12]
   18168:	b	181d4 <__assert_fail@plt+0x69fc>
   1816c:	ldr	r0, [sp, #100]	; 0x64
   18170:	add	r0, r0, #1
   18174:	str	r0, [sp, #100]	; 0x64
   18178:	ldr	r0, [sp, #76]	; 0x4c
   1817c:	ldrb	r0, [r0]
   18180:	ldr	r1, [sp, #72]	; 0x48
   18184:	ldrb	r1, [r1]
   18188:	cmp	r0, r1
   1818c:	beq	18194 <__assert_fail@plt+0x69bc>
   18190:	b	181b4 <__assert_fail@plt+0x69dc>
   18194:	b	18198 <__assert_fail@plt+0x69c0>
   18198:	ldr	r0, [sp, #76]	; 0x4c
   1819c:	add	r0, r0, #1
   181a0:	str	r0, [sp, #76]	; 0x4c
   181a4:	ldr	r0, [sp, #72]	; 0x48
   181a8:	add	r0, r0, #1
   181ac:	str	r0, [sp, #72]	; 0x48
   181b0:	b	18134 <__assert_fail@plt+0x695c>
   181b4:	b	181b8 <__assert_fail@plt+0x69e0>
   181b8:	b	181bc <__assert_fail@plt+0x69e4>
   181bc:	ldr	r0, [fp, #-16]
   181c0:	add	r0, r0, #1
   181c4:	str	r0, [fp, #-16]
   181c8:	b	17fd8 <__assert_fail@plt+0x6800>
   181cc:	ldr	r0, [fp, #-16]
   181d0:	str	r0, [fp, #-12]
   181d4:	ldr	r0, [fp, #-12]
   181d8:	sub	sp, fp, #8
   181dc:	pop	{r4, r5, fp, pc}
   181e0:	push	{r4, r5, fp, lr}
   181e4:	add	fp, sp, #8
   181e8:	sub	sp, sp, #264	; 0x108
   181ec:	str	r0, [fp, #-16]
   181f0:	str	r1, [fp, #-20]	; 0xffffffec
   181f4:	str	r2, [fp, #-24]	; 0xffffffe8
   181f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   181fc:	bl	21a40 <__assert_fail@plt+0x10268>
   18200:	ldr	r1, [pc, #1580]	; 18834 <__assert_fail@plt+0x705c>
   18204:	str	r0, [fp, #-28]	; 0xffffffe4
   18208:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1820c:	cmp	r1, r0
   18210:	bcs	18220 <__assert_fail@plt+0x6a48>
   18214:	movw	r0, #0
   18218:	str	r0, [fp, #-240]	; 0xffffff10
   1821c:	b	18288 <__assert_fail@plt+0x6ab0>
   18220:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18224:	movw	r1, #44	; 0x2c
   18228:	mul	r0, r0, r1
   1822c:	movw	r1, #4017	; 0xfb1
   18230:	cmp	r0, r1
   18234:	bcs	1826c <__assert_fail@plt+0x6a94>
   18238:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1823c:	mov	r1, #44	; 0x2c
   18240:	mul	r0, r0, r1
   18244:	add	r0, r0, #22
   18248:	bic	r0, r0, #7
   1824c:	mov	r1, sp
   18250:	sub	r0, r1, r0
   18254:	mov	sp, r0
   18258:	add	r0, r0, #15
   1825c:	mvn	r1, #15
   18260:	and	r0, r0, r1
   18264:	str	r0, [fp, #-244]	; 0xffffff0c
   18268:	b	18280 <__assert_fail@plt+0x6aa8>
   1826c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18270:	movw	r1, #44	; 0x2c
   18274:	mul	r0, r0, r1
   18278:	bl	21748 <__assert_fail@plt+0xff70>
   1827c:	str	r0, [fp, #-244]	; 0xffffff0c
   18280:	ldr	r0, [fp, #-244]	; 0xffffff0c
   18284:	str	r0, [fp, #-240]	; 0xffffff10
   18288:	ldr	r0, [fp, #-240]	; 0xffffff10
   1828c:	str	r0, [fp, #-40]	; 0xffffffd8
   18290:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18294:	movw	r1, #0
   18298:	cmp	r0, r1
   1829c:	bne	182b0 <__assert_fail@plt+0x6ad8>
   182a0:	movw	r0, #0
   182a4:	and	r0, r0, #1
   182a8:	strb	r0, [fp, #-9]
   182ac:	b	18824 <__assert_fail@plt+0x704c>
   182b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   182b4:	str	r0, [fp, #-32]	; 0xffffffe0
   182b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   182bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   182c0:	movw	r2, #40	; 0x28
   182c4:	mul	r1, r1, r2
   182c8:	add	r0, r0, r1
   182cc:	str	r0, [fp, #-44]	; 0xffffffd4
   182d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   182d4:	str	r0, [fp, #-36]	; 0xffffffdc
   182d8:	movw	r0, #0
   182dc:	str	r0, [fp, #-104]	; 0xffffff98
   182e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   182e4:	str	r0, [fp, #-84]	; 0xffffffac
   182e8:	movw	r0, #0
   182ec:	strb	r0, [fp, #-100]	; 0xffffff9c
   182f0:	sub	r1, fp, #100	; 0x64
   182f4:	add	r1, r1, #4
   182f8:	str	r0, [fp, #-248]	; 0xffffff08
   182fc:	mov	r0, r1
   18300:	ldr	r1, [fp, #-248]	; 0xffffff08
   18304:	and	r1, r1, #255	; 0xff
   18308:	movw	r2, #8
   1830c:	bl	11688 <memset@plt>
   18310:	ldr	r0, [fp, #-248]	; 0xffffff08
   18314:	strb	r0, [fp, #-88]	; 0xffffffa8
   18318:	sub	r0, fp, #100	; 0x64
   1831c:	bl	18af4 <__assert_fail@plt+0x731c>
   18320:	ldrb	r0, [fp, #-76]	; 0xffffffb4
   18324:	tst	r0, #1
   18328:	movw	r0, #0
   1832c:	str	r0, [fp, #-252]	; 0xffffff04
   18330:	beq	18348 <__assert_fail@plt+0x6b70>
   18334:	ldr	r0, [fp, #-72]	; 0xffffffb8
   18338:	cmp	r0, #0
   1833c:	movw	r0, #0
   18340:	moveq	r0, #1
   18344:	str	r0, [fp, #-252]	; 0xffffff04
   18348:	ldr	r0, [fp, #-252]	; 0xffffff04
   1834c:	mvn	r1, #0
   18350:	eor	r0, r0, r1
   18354:	tst	r0, #1
   18358:	beq	183a4 <__assert_fail@plt+0x6bcc>
   1835c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18360:	ldr	r1, [fp, #-104]	; 0xffffff98
   18364:	movw	r2, #40	; 0x28
   18368:	mul	r1, r1, r2
   1836c:	add	r0, r0, r1
   18370:	sub	r1, fp, #100	; 0x64
   18374:	add	r1, r1, #16
   18378:	bl	2193c <__assert_fail@plt+0x10164>
   1837c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   18380:	ldr	r1, [fp, #-84]	; 0xffffffac
   18384:	add	r0, r1, r0
   18388:	str	r0, [fp, #-84]	; 0xffffffac
   1838c:	movw	r0, #0
   18390:	strb	r0, [fp, #-88]	; 0xffffffa8
   18394:	ldr	r0, [fp, #-104]	; 0xffffff98
   18398:	add	r0, r0, #1
   1839c:	str	r0, [fp, #-104]	; 0xffffff98
   183a0:	b	18318 <__assert_fail@plt+0x6b40>
   183a4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   183a8:	movw	r1, #1
   183ac:	str	r1, [r0, #4]
   183b0:	movw	r0, #0
   183b4:	str	r0, [fp, #-112]	; 0xffffff90
   183b8:	movw	r0, #2
   183bc:	str	r0, [fp, #-108]	; 0xffffff94
   183c0:	ldr	r0, [fp, #-108]	; 0xffffff94
   183c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   183c8:	cmp	r0, r1
   183cc:	bcs	18524 <__assert_fail@plt+0x6d4c>
   183d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   183d4:	ldr	r1, [fp, #-108]	; 0xffffff94
   183d8:	sub	r1, r1, #1
   183dc:	movw	r2, #40	; 0x28
   183e0:	mul	r1, r1, r2
   183e4:	add	r0, r0, r1
   183e8:	str	r0, [fp, #-116]	; 0xffffff8c
   183ec:	ldr	r0, [fp, #-116]	; 0xffffff8c
   183f0:	ldrb	r0, [r0, #8]
   183f4:	tst	r0, #1
   183f8:	beq	18448 <__assert_fail@plt+0x6c70>
   183fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18400:	ldr	r1, [fp, #-112]	; 0xffffff90
   18404:	movw	r2, #40	; 0x28
   18408:	mul	r1, r1, r2
   1840c:	add	r0, r0, r1
   18410:	ldrb	r0, [r0, #8]
   18414:	tst	r0, #1
   18418:	beq	18448 <__assert_fail@plt+0x6c70>
   1841c:	ldr	r0, [fp, #-116]	; 0xffffff8c
   18420:	ldr	r0, [r0, #12]
   18424:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18428:	ldr	r2, [fp, #-112]	; 0xffffff90
   1842c:	movw	r3, #40	; 0x28
   18430:	mul	r2, r2, r3
   18434:	add	r1, r1, r2
   18438:	ldr	r1, [r1, #12]
   1843c:	cmp	r0, r1
   18440:	beq	184a4 <__assert_fail@plt+0x6ccc>
   18444:	b	184cc <__assert_fail@plt+0x6cf4>
   18448:	ldr	r0, [fp, #-116]	; 0xffffff8c
   1844c:	ldr	r0, [r0, #4]
   18450:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18454:	ldr	r2, [fp, #-112]	; 0xffffff90
   18458:	movw	r3, #40	; 0x28
   1845c:	mul	r2, r2, r3
   18460:	add	r1, r1, r2
   18464:	ldr	r1, [r1, #4]
   18468:	cmp	r0, r1
   1846c:	bne	184cc <__assert_fail@plt+0x6cf4>
   18470:	ldr	r0, [fp, #-116]	; 0xffffff8c
   18474:	ldr	r0, [r0]
   18478:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1847c:	ldr	r2, [fp, #-112]	; 0xffffff90
   18480:	movw	r3, #40	; 0x28
   18484:	mul	r2, r2, r3
   18488:	add	r1, r1, r2
   1848c:	ldr	r1, [r1]
   18490:	ldr	r2, [fp, #-116]	; 0xffffff8c
   18494:	ldr	r2, [r2, #4]
   18498:	bl	114cc <memcmp@plt>
   1849c:	cmp	r0, #0
   184a0:	bne	184cc <__assert_fail@plt+0x6cf4>
   184a4:	ldr	r0, [fp, #-108]	; 0xffffff94
   184a8:	ldr	r1, [fp, #-112]	; 0xffffff90
   184ac:	add	r1, r1, #1
   184b0:	str	r1, [fp, #-112]	; 0xffffff90
   184b4:	sub	r0, r0, r1
   184b8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   184bc:	ldr	r2, [fp, #-108]	; 0xffffff94
   184c0:	add	r1, r1, r2, lsl #2
   184c4:	str	r0, [r1]
   184c8:	b	18510 <__assert_fail@plt+0x6d38>
   184cc:	ldr	r0, [fp, #-112]	; 0xffffff90
   184d0:	cmp	r0, #0
   184d4:	bne	184f0 <__assert_fail@plt+0x6d18>
   184d8:	ldr	r0, [fp, #-108]	; 0xffffff94
   184dc:	mov	r1, r0
   184e0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   184e4:	add	r0, r2, r0, lsl #2
   184e8:	str	r1, [r0]
   184ec:	b	18510 <__assert_fail@plt+0x6d38>
   184f0:	ldr	r0, [fp, #-112]	; 0xffffff90
   184f4:	mov	r1, r0
   184f8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   184fc:	add	r0, r2, r0, lsl #2
   18500:	ldr	r0, [r0]
   18504:	sub	r0, r1, r0
   18508:	str	r0, [fp, #-112]	; 0xffffff90
   1850c:	b	183ec <__assert_fail@plt+0x6c14>
   18510:	b	18514 <__assert_fail@plt+0x6d3c>
   18514:	ldr	r0, [fp, #-108]	; 0xffffff94
   18518:	add	r0, r0, #1
   1851c:	str	r0, [fp, #-108]	; 0xffffff94
   18520:	b	183c0 <__assert_fail@plt+0x6be8>
   18524:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18528:	movw	r1, #0
   1852c:	str	r1, [r0]
   18530:	str	r1, [fp, #-120]	; 0xffffff88
   18534:	ldr	r0, [fp, #-16]
   18538:	str	r0, [fp, #-160]	; 0xffffff60
   1853c:	movw	r0, #0
   18540:	strb	r0, [fp, #-176]	; 0xffffff50
   18544:	sub	r1, fp, #176	; 0xb0
   18548:	add	r1, r1, #4
   1854c:	str	r0, [fp, #-256]	; 0xffffff00
   18550:	mov	r0, r1
   18554:	ldr	r1, [fp, #-256]	; 0xffffff00
   18558:	and	r1, r1, #255	; 0xff
   1855c:	movw	r2, #8
   18560:	str	r2, [fp, #-260]	; 0xfffffefc
   18564:	bl	11688 <memset@plt>
   18568:	ldr	r0, [fp, #-256]	; 0xffffff00
   1856c:	strb	r0, [fp, #-164]	; 0xffffff5c
   18570:	ldr	r1, [fp, #-16]
   18574:	str	r1, [fp, #-216]	; 0xffffff28
   18578:	strb	r0, [fp, #-232]	; 0xffffff18
   1857c:	sub	r1, fp, #232	; 0xe8
   18580:	add	r1, r1, #4
   18584:	mov	r0, r1
   18588:	ldr	r1, [fp, #-256]	; 0xffffff00
   1858c:	and	r1, r1, #255	; 0xff
   18590:	ldr	r2, [fp, #-260]	; 0xfffffefc
   18594:	bl	11688 <memset@plt>
   18598:	ldr	r0, [fp, #-256]	; 0xffffff00
   1859c:	strb	r0, [fp, #-220]	; 0xffffff24
   185a0:	sub	r0, fp, #232	; 0xe8
   185a4:	bl	18af4 <__assert_fail@plt+0x731c>
   185a8:	ldrb	r0, [fp, #-208]	; 0xffffff30
   185ac:	tst	r0, #1
   185b0:	movw	r0, #0
   185b4:	str	r0, [fp, #-264]	; 0xfffffef8
   185b8:	beq	185d0 <__assert_fail@plt+0x6df8>
   185bc:	ldr	r0, [fp, #-204]	; 0xffffff34
   185c0:	cmp	r0, #0
   185c4:	movw	r0, #0
   185c8:	moveq	r0, #1
   185cc:	str	r0, [fp, #-264]	; 0xfffffef8
   185d0:	ldr	r0, [fp, #-264]	; 0xfffffef8
   185d4:	mvn	r1, #0
   185d8:	eor	r0, r0, r1
   185dc:	tst	r0, #1
   185e0:	beq	18810 <__assert_fail@plt+0x7038>
   185e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   185e8:	ldr	r1, [fp, #-120]	; 0xffffff88
   185ec:	movw	r2, #40	; 0x28
   185f0:	mul	r1, r1, r2
   185f4:	add	r0, r0, r1
   185f8:	ldrb	r0, [r0, #8]
   185fc:	tst	r0, #1
   18600:	beq	18638 <__assert_fail@plt+0x6e60>
   18604:	ldrb	r0, [fp, #-208]	; 0xffffff30
   18608:	tst	r0, #1
   1860c:	beq	18638 <__assert_fail@plt+0x6e60>
   18610:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18614:	ldr	r1, [fp, #-120]	; 0xffffff88
   18618:	movw	r2, #40	; 0x28
   1861c:	mul	r1, r1, r2
   18620:	add	r0, r0, r1
   18624:	ldr	r0, [r0, #12]
   18628:	ldr	r1, [fp, #-204]	; 0xffffff34
   1862c:	cmp	r0, r1
   18630:	beq	18698 <__assert_fail@plt+0x6ec0>
   18634:	b	186e0 <__assert_fail@plt+0x6f08>
   18638:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1863c:	ldr	r1, [fp, #-120]	; 0xffffff88
   18640:	movw	r2, #40	; 0x28
   18644:	mul	r1, r1, r2
   18648:	add	r0, r0, r1
   1864c:	ldr	r0, [r0, #4]
   18650:	ldr	r1, [fp, #-212]	; 0xffffff2c
   18654:	cmp	r0, r1
   18658:	bne	186e0 <__assert_fail@plt+0x6f08>
   1865c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18660:	ldr	r1, [fp, #-120]	; 0xffffff88
   18664:	movw	r2, #40	; 0x28
   18668:	mul	r1, r1, r2
   1866c:	add	r0, r0, r1
   18670:	ldr	r0, [r0]
   18674:	ldr	r1, [fp, #-216]	; 0xffffff28
   18678:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1867c:	ldr	ip, [fp, #-120]	; 0xffffff88
   18680:	mul	r2, ip, r2
   18684:	add	r2, r3, r2
   18688:	ldr	r2, [r2, #4]
   1868c:	bl	114cc <memcmp@plt>
   18690:	cmp	r0, #0
   18694:	bne	186e0 <__assert_fail@plt+0x6f08>
   18698:	ldr	r0, [fp, #-120]	; 0xffffff88
   1869c:	add	r0, r0, #1
   186a0:	str	r0, [fp, #-120]	; 0xffffff88
   186a4:	ldr	r0, [fp, #-212]	; 0xffffff2c
   186a8:	ldr	r1, [fp, #-216]	; 0xffffff28
   186ac:	add	r0, r1, r0
   186b0:	str	r0, [fp, #-216]	; 0xffffff28
   186b4:	movw	r0, #0
   186b8:	strb	r0, [fp, #-220]	; 0xffffff24
   186bc:	ldr	r0, [fp, #-120]	; 0xffffff88
   186c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   186c4:	cmp	r0, r1
   186c8:	bne	186dc <__assert_fail@plt+0x6f04>
   186cc:	ldr	r0, [fp, #-160]	; 0xffffff60
   186d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   186d4:	str	r0, [r1]
   186d8:	b	18810 <__assert_fail@plt+0x7038>
   186dc:	b	1880c <__assert_fail@plt+0x7034>
   186e0:	ldr	r0, [fp, #-120]	; 0xffffff88
   186e4:	cmp	r0, #0
   186e8:	bls	18794 <__assert_fail@plt+0x6fbc>
   186ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   186f0:	ldr	r1, [fp, #-120]	; 0xffffff88
   186f4:	add	r0, r0, r1, lsl #2
   186f8:	ldr	r0, [r0]
   186fc:	str	r0, [fp, #-236]	; 0xffffff14
   18700:	ldr	r0, [fp, #-236]	; 0xffffff14
   18704:	ldr	r1, [fp, #-120]	; 0xffffff88
   18708:	sub	r0, r1, r0
   1870c:	str	r0, [fp, #-120]	; 0xffffff88
   18710:	ldr	r0, [fp, #-236]	; 0xffffff14
   18714:	cmp	r0, #0
   18718:	bls	18790 <__assert_fail@plt+0x6fb8>
   1871c:	sub	r0, fp, #176	; 0xb0
   18720:	bl	18af4 <__assert_fail@plt+0x731c>
   18724:	ldrb	r0, [fp, #-152]	; 0xffffff68
   18728:	tst	r0, #1
   1872c:	movw	r0, #0
   18730:	str	r0, [fp, #-268]	; 0xfffffef4
   18734:	beq	1874c <__assert_fail@plt+0x6f74>
   18738:	ldr	r0, [fp, #-148]	; 0xffffff6c
   1873c:	cmp	r0, #0
   18740:	movw	r0, #0
   18744:	moveq	r0, #1
   18748:	str	r0, [fp, #-268]	; 0xfffffef4
   1874c:	ldr	r0, [fp, #-268]	; 0xfffffef4
   18750:	mvn	r1, #0
   18754:	eor	r0, r0, r1
   18758:	tst	r0, #1
   1875c:	bne	18764 <__assert_fail@plt+0x6f8c>
   18760:	bl	117a8 <abort@plt>
   18764:	ldr	r0, [fp, #-156]	; 0xffffff64
   18768:	ldr	r1, [fp, #-160]	; 0xffffff60
   1876c:	add	r0, r1, r0
   18770:	str	r0, [fp, #-160]	; 0xffffff60
   18774:	movw	r0, #0
   18778:	strb	r0, [fp, #-164]	; 0xffffff5c
   1877c:	ldr	r0, [fp, #-236]	; 0xffffff14
   18780:	mvn	r1, #0
   18784:	add	r0, r0, r1
   18788:	str	r0, [fp, #-236]	; 0xffffff14
   1878c:	b	18710 <__assert_fail@plt+0x6f38>
   18790:	b	18808 <__assert_fail@plt+0x7030>
   18794:	sub	r0, fp, #176	; 0xb0
   18798:	bl	18af4 <__assert_fail@plt+0x731c>
   1879c:	ldrb	r0, [fp, #-152]	; 0xffffff68
   187a0:	tst	r0, #1
   187a4:	movw	r0, #0
   187a8:	str	r0, [fp, #-272]	; 0xfffffef0
   187ac:	beq	187c4 <__assert_fail@plt+0x6fec>
   187b0:	ldr	r0, [fp, #-148]	; 0xffffff6c
   187b4:	cmp	r0, #0
   187b8:	movw	r0, #0
   187bc:	moveq	r0, #1
   187c0:	str	r0, [fp, #-272]	; 0xfffffef0
   187c4:	ldr	r0, [fp, #-272]	; 0xfffffef0
   187c8:	mvn	r1, #0
   187cc:	eor	r0, r0, r1
   187d0:	tst	r0, #1
   187d4:	bne	187dc <__assert_fail@plt+0x7004>
   187d8:	bl	117a8 <abort@plt>
   187dc:	ldr	r0, [fp, #-156]	; 0xffffff64
   187e0:	ldr	r1, [fp, #-160]	; 0xffffff60
   187e4:	add	r0, r1, r0
   187e8:	str	r0, [fp, #-160]	; 0xffffff60
   187ec:	movw	r0, #0
   187f0:	strb	r0, [fp, #-164]	; 0xffffff5c
   187f4:	ldr	r1, [fp, #-212]	; 0xffffff2c
   187f8:	ldr	r2, [fp, #-216]	; 0xffffff28
   187fc:	add	r1, r2, r1
   18800:	str	r1, [fp, #-216]	; 0xffffff28
   18804:	strb	r0, [fp, #-220]	; 0xffffff24
   18808:	b	1880c <__assert_fail@plt+0x7034>
   1880c:	b	185a0 <__assert_fail@plt+0x6dc8>
   18810:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18814:	bl	21870 <__assert_fail@plt+0x10098>
   18818:	movw	r0, #1
   1881c:	and	r0, r0, #1
   18820:	strb	r0, [fp, #-9]
   18824:	ldrb	r0, [fp, #-9]
   18828:	and	r0, r0, #1
   1882c:	sub	sp, fp, #8
   18830:	pop	{r4, r5, fp, pc}
   18834:	rsceq	fp, r8, #188416	; 0x2e000
   18838:	push	{r4, r5, fp, lr}
   1883c:	add	fp, sp, #8
   18840:	sub	sp, sp, #64	; 0x40
   18844:	ldr	ip, [pc, #676]	; 18af0 <__assert_fail@plt+0x7318>
   18848:	str	r0, [fp, #-16]
   1884c:	str	r1, [fp, #-20]	; 0xffffffec
   18850:	str	r2, [fp, #-24]	; 0xffffffe8
   18854:	str	r3, [fp, #-28]	; 0xffffffe4
   18858:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1885c:	str	r0, [fp, #-32]	; 0xffffffe0
   18860:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18864:	cmp	ip, r0
   18868:	bcs	18878 <__assert_fail@plt+0x70a0>
   1886c:	movw	r0, #0
   18870:	str	r0, [fp, #-64]	; 0xffffffc0
   18874:	b	188d4 <__assert_fail@plt+0x70fc>
   18878:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1887c:	lsl	r0, r0, #2
   18880:	movw	r1, #4017	; 0xfb1
   18884:	cmp	r0, r1
   18888:	bcs	188bc <__assert_fail@plt+0x70e4>
   1888c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18890:	mov	r1, #22
   18894:	add	r0, r1, r0, lsl #2
   18898:	bic	r0, r0, #7
   1889c:	mov	r1, sp
   188a0:	sub	r0, r1, r0
   188a4:	mov	sp, r0
   188a8:	add	r0, r0, #15
   188ac:	mvn	r1, #15
   188b0:	and	r0, r0, r1
   188b4:	str	r0, [fp, #-68]	; 0xffffffbc
   188b8:	b	188cc <__assert_fail@plt+0x70f4>
   188bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   188c0:	lsl	r0, r0, #2
   188c4:	bl	21748 <__assert_fail@plt+0xff70>
   188c8:	str	r0, [fp, #-68]	; 0xffffffbc
   188cc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   188d0:	str	r0, [fp, #-64]	; 0xffffffc0
   188d4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   188d8:	str	r0, [fp, #-36]	; 0xffffffdc
   188dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   188e0:	movw	r1, #0
   188e4:	cmp	r0, r1
   188e8:	bne	188fc <__assert_fail@plt+0x7124>
   188ec:	movw	r0, #0
   188f0:	and	r0, r0, #1
   188f4:	strb	r0, [fp, #-9]
   188f8:	b	18ae0 <__assert_fail@plt+0x7308>
   188fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18900:	movw	r1, #1
   18904:	str	r1, [r0, #4]
   18908:	movw	r0, #0
   1890c:	str	r0, [fp, #-44]	; 0xffffffd4
   18910:	movw	r0, #2
   18914:	str	r0, [fp, #-40]	; 0xffffffd8
   18918:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1891c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18920:	cmp	r0, r1
   18924:	bcs	189dc <__assert_fail@plt+0x7204>
   18928:	ldr	r0, [fp, #-20]	; 0xffffffec
   1892c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18930:	sub	r1, r1, #1
   18934:	add	r0, r0, r1
   18938:	ldrb	r0, [r0]
   1893c:	strb	r0, [fp, #-45]	; 0xffffffd3
   18940:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   18944:	ldr	r1, [fp, #-20]	; 0xffffffec
   18948:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1894c:	add	r1, r1, r2
   18950:	ldrb	r1, [r1]
   18954:	cmp	r0, r1
   18958:	bne	18984 <__assert_fail@plt+0x71ac>
   1895c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18960:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18964:	add	r1, r1, #1
   18968:	str	r1, [fp, #-44]	; 0xffffffd4
   1896c:	sub	r0, r0, r1
   18970:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18974:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18978:	add	r1, r1, r2, lsl #2
   1897c:	str	r0, [r1]
   18980:	b	189c8 <__assert_fail@plt+0x71f0>
   18984:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18988:	cmp	r0, #0
   1898c:	bne	189a8 <__assert_fail@plt+0x71d0>
   18990:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18994:	mov	r1, r0
   18998:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1899c:	add	r0, r2, r0, lsl #2
   189a0:	str	r1, [r0]
   189a4:	b	189c8 <__assert_fail@plt+0x71f0>
   189a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   189ac:	mov	r1, r0
   189b0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   189b4:	add	r0, r2, r0, lsl #2
   189b8:	ldr	r0, [r0]
   189bc:	sub	r0, r1, r0
   189c0:	str	r0, [fp, #-44]	; 0xffffffd4
   189c4:	b	18940 <__assert_fail@plt+0x7168>
   189c8:	b	189cc <__assert_fail@plt+0x71f4>
   189cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   189d0:	add	r0, r0, #1
   189d4:	str	r0, [fp, #-40]	; 0xffffffd8
   189d8:	b	18918 <__assert_fail@plt+0x7140>
   189dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   189e0:	movw	r1, #0
   189e4:	str	r1, [r0]
   189e8:	str	r1, [fp, #-52]	; 0xffffffcc
   189ec:	ldr	r0, [fp, #-16]
   189f0:	str	r0, [fp, #-56]	; 0xffffffc8
   189f4:	ldr	r0, [fp, #-16]
   189f8:	str	r0, [fp, #-60]	; 0xffffffc4
   189fc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   18a00:	ldrb	r0, [r0]
   18a04:	cmp	r0, #0
   18a08:	beq	18acc <__assert_fail@plt+0x72f4>
   18a0c:	ldr	r0, [fp, #-20]	; 0xffffffec
   18a10:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18a14:	add	r0, r0, r1
   18a18:	ldrb	r0, [r0]
   18a1c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   18a20:	ldrb	r1, [r1]
   18a24:	cmp	r0, r1
   18a28:	bne	18a68 <__assert_fail@plt+0x7290>
   18a2c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18a30:	add	r0, r0, #1
   18a34:	str	r0, [fp, #-52]	; 0xffffffcc
   18a38:	ldr	r0, [fp, #-60]	; 0xffffffc4
   18a3c:	add	r0, r0, #1
   18a40:	str	r0, [fp, #-60]	; 0xffffffc4
   18a44:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18a48:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18a4c:	cmp	r0, r1
   18a50:	bne	18a64 <__assert_fail@plt+0x728c>
   18a54:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18a58:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18a5c:	str	r0, [r1]
   18a60:	b	18acc <__assert_fail@plt+0x72f4>
   18a64:	b	18ac8 <__assert_fail@plt+0x72f0>
   18a68:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18a6c:	cmp	r0, #0
   18a70:	bls	18aac <__assert_fail@plt+0x72d4>
   18a74:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18a78:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18a7c:	ldr	r0, [r0, r1, lsl #2]
   18a80:	ldr	r1, [fp, #-56]	; 0xffffffc8
   18a84:	add	r0, r1, r0
   18a88:	str	r0, [fp, #-56]	; 0xffffffc8
   18a8c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18a90:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18a94:	add	r0, r0, r1, lsl #2
   18a98:	ldr	r0, [r0]
   18a9c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18aa0:	sub	r0, r1, r0
   18aa4:	str	r0, [fp, #-52]	; 0xffffffcc
   18aa8:	b	18ac4 <__assert_fail@plt+0x72ec>
   18aac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18ab0:	add	r0, r0, #1
   18ab4:	str	r0, [fp, #-56]	; 0xffffffc8
   18ab8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   18abc:	add	r0, r0, #1
   18ac0:	str	r0, [fp, #-60]	; 0xffffffc4
   18ac4:	b	18ac8 <__assert_fail@plt+0x72f0>
   18ac8:	b	189fc <__assert_fail@plt+0x7224>
   18acc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18ad0:	bl	21870 <__assert_fail@plt+0x10098>
   18ad4:	movw	r0, #1
   18ad8:	and	r0, r0, #1
   18adc:	strb	r0, [fp, #-9]
   18ae0:	ldrb	r0, [fp, #-9]
   18ae4:	and	r0, r0, #1
   18ae8:	sub	sp, fp, #8
   18aec:	pop	{r4, r5, fp, pc}
   18af0:	svcne	0x00ffffff
   18af4:	push	{fp, lr}
   18af8:	mov	fp, sp
   18afc:	sub	sp, sp, #24
   18b00:	str	r0, [fp, #-4]
   18b04:	ldr	r0, [fp, #-4]
   18b08:	ldrb	r0, [r0, #12]
   18b0c:	tst	r0, #1
   18b10:	beq	18b18 <__assert_fail@plt+0x7340>
   18b14:	b	18d50 <__assert_fail@plt+0x7578>
   18b18:	ldr	r0, [fp, #-4]
   18b1c:	ldrb	r0, [r0]
   18b20:	tst	r0, #1
   18b24:	beq	18b2c <__assert_fail@plt+0x7354>
   18b28:	b	18bb8 <__assert_fail@plt+0x73e0>
   18b2c:	ldr	r0, [fp, #-4]
   18b30:	ldr	r0, [r0, #16]
   18b34:	ldrb	r0, [r0]
   18b38:	bl	219ec <__assert_fail@plt+0x10214>
   18b3c:	tst	r0, #1
   18b40:	beq	18b74 <__assert_fail@plt+0x739c>
   18b44:	ldr	r0, [fp, #-4]
   18b48:	movw	r1, #1
   18b4c:	str	r1, [r0, #20]
   18b50:	ldr	r0, [fp, #-4]
   18b54:	ldr	r0, [r0, #16]
   18b58:	ldrb	r0, [r0]
   18b5c:	ldr	r1, [fp, #-4]
   18b60:	str	r0, [r1, #28]
   18b64:	ldr	r0, [fp, #-4]
   18b68:	movw	r1, #1
   18b6c:	strb	r1, [r0, #24]
   18b70:	b	18d44 <__assert_fail@plt+0x756c>
   18b74:	ldr	r0, [fp, #-4]
   18b78:	add	r0, r0, #4
   18b7c:	bl	114b4 <mbsinit@plt>
   18b80:	cmp	r0, #0
   18b84:	beq	18b8c <__assert_fail@plt+0x73b4>
   18b88:	b	18bac <__assert_fail@plt+0x73d4>
   18b8c:	movw	r0, #17757	; 0x455d
   18b90:	movt	r0, #2
   18b94:	movw	r1, #17780	; 0x4574
   18b98:	movt	r1, #2
   18b9c:	movw	r2, #143	; 0x8f
   18ba0:	movw	r3, #17792	; 0x4580
   18ba4:	movt	r3, #2
   18ba8:	bl	117d8 <__assert_fail@plt>
   18bac:	ldr	r0, [fp, #-4]
   18bb0:	movw	r1, #1
   18bb4:	strb	r1, [r0]
   18bb8:	ldr	r0, [fp, #-4]
   18bbc:	add	r0, r0, #16
   18bc0:	add	r0, r0, #12
   18bc4:	ldr	r1, [fp, #-4]
   18bc8:	ldr	r1, [r1, #16]
   18bcc:	ldr	r2, [fp, #-4]
   18bd0:	ldr	r2, [r2, #16]
   18bd4:	str	r0, [fp, #-8]
   18bd8:	str	r1, [sp, #12]
   18bdc:	str	r2, [sp, #8]
   18be0:	bl	1155c <__ctype_get_mb_cur_max@plt>
   18be4:	ldr	r1, [sp, #8]
   18be8:	str	r0, [sp, #4]
   18bec:	mov	r0, r1
   18bf0:	ldr	r1, [sp, #4]
   18bf4:	bl	1b658 <__assert_fail@plt+0x9e80>
   18bf8:	ldr	r1, [fp, #-4]
   18bfc:	add	r3, r1, #4
   18c00:	ldr	r1, [fp, #-8]
   18c04:	str	r0, [sp]
   18c08:	mov	r0, r1
   18c0c:	ldr	r1, [sp, #12]
   18c10:	ldr	r2, [sp]
   18c14:	bl	1fe10 <__assert_fail@plt+0xe638>
   18c18:	ldr	r1, [fp, #-4]
   18c1c:	str	r0, [r1, #20]
   18c20:	ldr	r0, [fp, #-4]
   18c24:	ldr	r0, [r0, #20]
   18c28:	cmn	r0, #1
   18c2c:	bne	18c4c <__assert_fail@plt+0x7474>
   18c30:	ldr	r0, [fp, #-4]
   18c34:	movw	r1, #1
   18c38:	str	r1, [r0, #20]
   18c3c:	ldr	r0, [fp, #-4]
   18c40:	movw	r1, #0
   18c44:	strb	r1, [r0, #24]
   18c48:	b	18d40 <__assert_fail@plt+0x7568>
   18c4c:	ldr	r0, [fp, #-4]
   18c50:	ldr	r0, [r0, #20]
   18c54:	cmn	r0, #2
   18c58:	bne	18c80 <__assert_fail@plt+0x74a8>
   18c5c:	ldr	r0, [fp, #-4]
   18c60:	ldr	r0, [r0, #16]
   18c64:	bl	11634 <strlen@plt>
   18c68:	ldr	lr, [fp, #-4]
   18c6c:	str	r0, [lr, #20]
   18c70:	ldr	r0, [fp, #-4]
   18c74:	movw	lr, #0
   18c78:	strb	lr, [r0, #24]
   18c7c:	b	18d3c <__assert_fail@plt+0x7564>
   18c80:	ldr	r0, [fp, #-4]
   18c84:	ldr	r0, [r0, #20]
   18c88:	cmp	r0, #0
   18c8c:	bne	18d0c <__assert_fail@plt+0x7534>
   18c90:	ldr	r0, [fp, #-4]
   18c94:	movw	r1, #1
   18c98:	str	r1, [r0, #20]
   18c9c:	ldr	r0, [fp, #-4]
   18ca0:	ldr	r0, [r0, #16]
   18ca4:	ldrb	r0, [r0]
   18ca8:	cmp	r0, #0
   18cac:	bne	18cb4 <__assert_fail@plt+0x74dc>
   18cb0:	b	18cd4 <__assert_fail@plt+0x74fc>
   18cb4:	movw	r0, #17840	; 0x45b0
   18cb8:	movt	r0, #2
   18cbc:	movw	r1, #17780	; 0x4574
   18cc0:	movt	r1, #2
   18cc4:	movw	r2, #171	; 0xab
   18cc8:	movw	r3, #17792	; 0x4580
   18ccc:	movt	r3, #2
   18cd0:	bl	117d8 <__assert_fail@plt>
   18cd4:	ldr	r0, [fp, #-4]
   18cd8:	ldr	r0, [r0, #28]
   18cdc:	cmp	r0, #0
   18ce0:	bne	18ce8 <__assert_fail@plt+0x7510>
   18ce4:	b	18d08 <__assert_fail@plt+0x7530>
   18ce8:	movw	r0, #17863	; 0x45c7
   18cec:	movt	r0, #2
   18cf0:	movw	r1, #17780	; 0x4574
   18cf4:	movt	r1, #2
   18cf8:	movw	r2, #172	; 0xac
   18cfc:	movw	r3, #17792	; 0x4580
   18d00:	movt	r3, #2
   18d04:	bl	117d8 <__assert_fail@plt>
   18d08:	b	18d0c <__assert_fail@plt+0x7534>
   18d0c:	ldr	r0, [fp, #-4]
   18d10:	movw	r1, #1
   18d14:	strb	r1, [r0, #24]
   18d18:	ldr	r0, [fp, #-4]
   18d1c:	add	r0, r0, #4
   18d20:	bl	114b4 <mbsinit@plt>
   18d24:	cmp	r0, #0
   18d28:	beq	18d38 <__assert_fail@plt+0x7560>
   18d2c:	ldr	r0, [fp, #-4]
   18d30:	movw	r1, #0
   18d34:	strb	r1, [r0]
   18d38:	b	18d3c <__assert_fail@plt+0x7564>
   18d3c:	b	18d40 <__assert_fail@plt+0x7568>
   18d40:	b	18d44 <__assert_fail@plt+0x756c>
   18d44:	ldr	r0, [fp, #-4]
   18d48:	movw	r1, #1
   18d4c:	strb	r1, [r0, #12]
   18d50:	mov	sp, fp
   18d54:	pop	{fp, pc}
   18d58:	sub	sp, sp, #8
   18d5c:	str	r0, [sp, #4]
   18d60:	str	r1, [sp]
   18d64:	ldr	r0, [sp]
   18d68:	ldr	r1, [sp, #4]
   18d6c:	ldr	r2, [r1, #16]
   18d70:	add	r0, r2, r0
   18d74:	str	r0, [r1, #16]
   18d78:	add	sp, sp, #8
   18d7c:	bx	lr
   18d80:	push	{fp, lr}
   18d84:	mov	fp, sp
   18d88:	sub	sp, sp, #8
   18d8c:	str	r0, [sp, #4]
   18d90:	str	r1, [sp]
   18d94:	ldr	r0, [sp]
   18d98:	ldrb	r0, [r0]
   18d9c:	ldr	r1, [sp, #4]
   18da0:	and	r2, r0, #1
   18da4:	strb	r2, [r1]
   18da8:	tst	r0, #1
   18dac:	beq	18dcc <__assert_fail@plt+0x75f4>
   18db0:	ldr	r0, [sp, #4]
   18db4:	ldr	r1, [sp]
   18db8:	ldr	r2, [r1, #4]
   18dbc:	str	r2, [r0, #4]
   18dc0:	ldr	r1, [r1, #8]
   18dc4:	str	r1, [r0, #8]
   18dc8:	b	18de4 <__assert_fail@plt+0x760c>
   18dcc:	ldr	r0, [sp, #4]
   18dd0:	add	r0, r0, #4
   18dd4:	movw	r1, #0
   18dd8:	and	r1, r1, #255	; 0xff
   18ddc:	movw	r2, #8
   18de0:	bl	11688 <memset@plt>
   18de4:	ldr	r0, [sp]
   18de8:	ldrb	r0, [r0, #12]
   18dec:	ldr	r1, [sp, #4]
   18df0:	and	r0, r0, #1
   18df4:	strb	r0, [r1, #12]
   18df8:	ldr	r0, [sp, #4]
   18dfc:	add	r0, r0, #16
   18e00:	ldr	r1, [sp]
   18e04:	add	r1, r1, #16
   18e08:	bl	2193c <__assert_fail@plt+0x10164>
   18e0c:	mov	sp, fp
   18e10:	pop	{fp, pc}
   18e14:	push	{fp, lr}
   18e18:	mov	fp, sp
   18e1c:	sub	sp, sp, #24
   18e20:	str	r0, [fp, #-4]
   18e24:	ldr	r0, [fp, #-4]
   18e28:	movw	r1, #0
   18e2c:	cmp	r0, r1
   18e30:	bne	18e54 <__assert_fail@plt+0x767c>
   18e34:	movw	r0, #20944	; 0x51d0
   18e38:	movt	r0, #3
   18e3c:	ldr	r1, [r0]
   18e40:	movw	r0, #17881	; 0x45d9
   18e44:	movt	r0, #2
   18e48:	bl	11790 <fputs@plt>
   18e4c:	str	r0, [sp, #8]
   18e50:	bl	117a8 <abort@plt>
   18e54:	ldr	r0, [fp, #-4]
   18e58:	movw	r1, #47	; 0x2f
   18e5c:	bl	11724 <strrchr@plt>
   18e60:	str	r0, [fp, #-8]
   18e64:	ldr	r0, [fp, #-8]
   18e68:	movw	r1, #0
   18e6c:	cmp	r0, r1
   18e70:	beq	18e84 <__assert_fail@plt+0x76ac>
   18e74:	ldr	r0, [fp, #-8]
   18e78:	add	r0, r0, #1
   18e7c:	str	r0, [sp, #4]
   18e80:	b	18e8c <__assert_fail@plt+0x76b4>
   18e84:	ldr	r0, [fp, #-4]
   18e88:	str	r0, [sp, #4]
   18e8c:	ldr	r0, [sp, #4]
   18e90:	str	r0, [sp, #12]
   18e94:	ldr	r0, [sp, #12]
   18e98:	ldr	r1, [fp, #-4]
   18e9c:	sub	r0, r0, r1
   18ea0:	cmp	r0, #7
   18ea4:	blt	18f10 <__assert_fail@plt+0x7738>
   18ea8:	ldr	r0, [sp, #12]
   18eac:	mvn	r1, #6
   18eb0:	add	r0, r0, r1
   18eb4:	movw	r1, #17937	; 0x4611
   18eb8:	movt	r1, #2
   18ebc:	movw	r2, #7
   18ec0:	bl	1179c <strncmp@plt>
   18ec4:	cmp	r0, #0
   18ec8:	bne	18f10 <__assert_fail@plt+0x7738>
   18ecc:	ldr	r0, [sp, #12]
   18ed0:	str	r0, [fp, #-4]
   18ed4:	ldr	r0, [sp, #12]
   18ed8:	movw	r1, #17945	; 0x4619
   18edc:	movt	r1, #2
   18ee0:	movw	r2, #3
   18ee4:	bl	1179c <strncmp@plt>
   18ee8:	cmp	r0, #0
   18eec:	bne	18f0c <__assert_fail@plt+0x7734>
   18ef0:	ldr	r0, [sp, #12]
   18ef4:	add	r0, r0, #3
   18ef8:	str	r0, [fp, #-4]
   18efc:	ldr	r0, [fp, #-4]
   18f00:	movw	r1, #20920	; 0x51b8
   18f04:	movt	r1, #3
   18f08:	str	r0, [r1]
   18f0c:	b	18f10 <__assert_fail@plt+0x7738>
   18f10:	ldr	r0, [fp, #-4]
   18f14:	movw	r1, #21168	; 0x52b0
   18f18:	movt	r1, #3
   18f1c:	str	r0, [r1]
   18f20:	ldr	r0, [fp, #-4]
   18f24:	movw	r1, #20928	; 0x51c0
   18f28:	movt	r1, #3
   18f2c:	str	r0, [r1]
   18f30:	mov	sp, fp
   18f34:	pop	{fp, pc}
   18f38:	push	{fp, lr}
   18f3c:	mov	fp, sp
   18f40:	sub	sp, sp, #24
   18f44:	str	r0, [fp, #-4]
   18f48:	bl	11664 <__errno_location@plt>
   18f4c:	ldr	r0, [r0]
   18f50:	str	r0, [fp, #-8]
   18f54:	ldr	r0, [fp, #-4]
   18f58:	movw	lr, #0
   18f5c:	cmp	r0, lr
   18f60:	beq	18f70 <__assert_fail@plt+0x7798>
   18f64:	ldr	r0, [fp, #-4]
   18f68:	str	r0, [sp, #8]
   18f6c:	b	18f80 <__assert_fail@plt+0x77a8>
   18f70:	movw	r0, #21172	; 0x52b4
   18f74:	movt	r0, #3
   18f78:	str	r0, [sp, #8]
   18f7c:	b	18f80 <__assert_fail@plt+0x77a8>
   18f80:	ldr	r0, [sp, #8]
   18f84:	movw	r1, #48	; 0x30
   18f88:	bl	1ee08 <__assert_fail@plt+0xd630>
   18f8c:	str	r0, [sp, #12]
   18f90:	ldr	r0, [fp, #-8]
   18f94:	str	r0, [sp, #4]
   18f98:	bl	11664 <__errno_location@plt>
   18f9c:	ldr	r1, [sp, #4]
   18fa0:	str	r1, [r0]
   18fa4:	ldr	r0, [sp, #12]
   18fa8:	mov	sp, fp
   18fac:	pop	{fp, pc}
   18fb0:	sub	sp, sp, #8
   18fb4:	str	r0, [sp, #4]
   18fb8:	ldr	r0, [sp, #4]
   18fbc:	movw	r1, #0
   18fc0:	cmp	r0, r1
   18fc4:	beq	18fd4 <__assert_fail@plt+0x77fc>
   18fc8:	ldr	r0, [sp, #4]
   18fcc:	str	r0, [sp]
   18fd0:	b	18fe4 <__assert_fail@plt+0x780c>
   18fd4:	movw	r0, #21172	; 0x52b4
   18fd8:	movt	r0, #3
   18fdc:	str	r0, [sp]
   18fe0:	b	18fe4 <__assert_fail@plt+0x780c>
   18fe4:	ldr	r0, [sp]
   18fe8:	ldr	r0, [r0]
   18fec:	add	sp, sp, #8
   18ff0:	bx	lr
   18ff4:	sub	sp, sp, #16
   18ff8:	str	r0, [sp, #12]
   18ffc:	str	r1, [sp, #8]
   19000:	ldr	r0, [sp, #8]
   19004:	ldr	r1, [sp, #12]
   19008:	movw	r2, #0
   1900c:	cmp	r1, r2
   19010:	str	r0, [sp, #4]
   19014:	beq	19024 <__assert_fail@plt+0x784c>
   19018:	ldr	r0, [sp, #12]
   1901c:	str	r0, [sp]
   19020:	b	19034 <__assert_fail@plt+0x785c>
   19024:	movw	r0, #21172	; 0x52b4
   19028:	movt	r0, #3
   1902c:	str	r0, [sp]
   19030:	b	19034 <__assert_fail@plt+0x785c>
   19034:	ldr	r0, [sp]
   19038:	ldr	r1, [sp, #4]
   1903c:	str	r1, [r0]
   19040:	add	sp, sp, #16
   19044:	bx	lr
   19048:	sub	sp, sp, #32
   1904c:	str	r0, [sp, #28]
   19050:	strb	r1, [sp, #27]
   19054:	str	r2, [sp, #20]
   19058:	ldrb	r0, [sp, #27]
   1905c:	strb	r0, [sp, #19]
   19060:	ldr	r0, [sp, #28]
   19064:	movw	r1, #0
   19068:	cmp	r0, r1
   1906c:	beq	1907c <__assert_fail@plt+0x78a4>
   19070:	ldr	r0, [sp, #28]
   19074:	str	r0, [sp]
   19078:	b	1908c <__assert_fail@plt+0x78b4>
   1907c:	movw	r0, #21172	; 0x52b4
   19080:	movt	r0, #3
   19084:	str	r0, [sp]
   19088:	b	1908c <__assert_fail@plt+0x78b4>
   1908c:	ldr	r0, [sp]
   19090:	add	r0, r0, #8
   19094:	ldrb	r1, [sp, #19]
   19098:	lsr	r1, r1, #5
   1909c:	add	r0, r0, r1, lsl #2
   190a0:	str	r0, [sp, #12]
   190a4:	ldrb	r0, [sp, #19]
   190a8:	and	r0, r0, #31
   190ac:	str	r0, [sp, #8]
   190b0:	ldr	r0, [sp, #12]
   190b4:	ldr	r0, [r0]
   190b8:	ldr	r1, [sp, #8]
   190bc:	lsr	r0, r0, r1
   190c0:	and	r0, r0, #1
   190c4:	str	r0, [sp, #4]
   190c8:	ldr	r0, [sp, #20]
   190cc:	and	r0, r0, #1
   190d0:	ldr	r1, [sp, #4]
   190d4:	eor	r0, r0, r1
   190d8:	ldr	r1, [sp, #8]
   190dc:	lsl	r0, r0, r1
   190e0:	ldr	r1, [sp, #12]
   190e4:	ldr	r2, [r1]
   190e8:	eor	r0, r2, r0
   190ec:	str	r0, [r1]
   190f0:	ldr	r0, [sp, #4]
   190f4:	add	sp, sp, #32
   190f8:	bx	lr
   190fc:	sub	sp, sp, #12
   19100:	str	r0, [sp, #8]
   19104:	str	r1, [sp, #4]
   19108:	ldr	r0, [sp, #8]
   1910c:	movw	r1, #0
   19110:	cmp	r0, r1
   19114:	bne	19124 <__assert_fail@plt+0x794c>
   19118:	movw	r0, #21172	; 0x52b4
   1911c:	movt	r0, #3
   19120:	str	r0, [sp, #8]
   19124:	ldr	r0, [sp, #8]
   19128:	ldr	r0, [r0, #4]
   1912c:	str	r0, [sp]
   19130:	ldr	r0, [sp, #4]
   19134:	ldr	r1, [sp, #8]
   19138:	str	r0, [r1, #4]
   1913c:	ldr	r0, [sp]
   19140:	add	sp, sp, #12
   19144:	bx	lr
   19148:	push	{fp, lr}
   1914c:	mov	fp, sp
   19150:	sub	sp, sp, #16
   19154:	str	r0, [fp, #-4]
   19158:	str	r1, [sp, #8]
   1915c:	str	r2, [sp, #4]
   19160:	ldr	r0, [fp, #-4]
   19164:	movw	r1, #0
   19168:	cmp	r0, r1
   1916c:	bne	1917c <__assert_fail@plt+0x79a4>
   19170:	movw	r0, #21172	; 0x52b4
   19174:	movt	r0, #3
   19178:	str	r0, [fp, #-4]
   1917c:	ldr	r0, [fp, #-4]
   19180:	movw	r1, #10
   19184:	str	r1, [r0]
   19188:	ldr	r0, [sp, #8]
   1918c:	movw	r1, #0
   19190:	cmp	r0, r1
   19194:	beq	191a8 <__assert_fail@plt+0x79d0>
   19198:	ldr	r0, [sp, #4]
   1919c:	movw	r1, #0
   191a0:	cmp	r0, r1
   191a4:	bne	191ac <__assert_fail@plt+0x79d4>
   191a8:	bl	117a8 <abort@plt>
   191ac:	ldr	r0, [sp, #8]
   191b0:	ldr	r1, [fp, #-4]
   191b4:	str	r0, [r1, #40]	; 0x28
   191b8:	ldr	r0, [sp, #4]
   191bc:	ldr	r1, [fp, #-4]
   191c0:	str	r0, [r1, #44]	; 0x2c
   191c4:	mov	sp, fp
   191c8:	pop	{fp, pc}
   191cc:	push	{r4, r5, r6, sl, fp, lr}
   191d0:	add	fp, sp, #16
   191d4:	sub	sp, sp, #64	; 0x40
   191d8:	ldr	ip, [fp, #8]
   191dc:	str	r0, [fp, #-20]	; 0xffffffec
   191e0:	str	r1, [fp, #-24]	; 0xffffffe8
   191e4:	str	r2, [fp, #-28]	; 0xffffffe4
   191e8:	str	r3, [fp, #-32]	; 0xffffffe0
   191ec:	ldr	r0, [fp, #8]
   191f0:	movw	r1, #0
   191f4:	cmp	r0, r1
   191f8:	str	ip, [sp, #32]
   191fc:	beq	1920c <__assert_fail@plt+0x7a34>
   19200:	ldr	r0, [fp, #8]
   19204:	str	r0, [sp, #28]
   19208:	b	1921c <__assert_fail@plt+0x7a44>
   1920c:	movw	r0, #21172	; 0x52b4
   19210:	movt	r0, #3
   19214:	str	r0, [sp, #28]
   19218:	b	1921c <__assert_fail@plt+0x7a44>
   1921c:	ldr	r0, [sp, #28]
   19220:	str	r0, [fp, #-36]	; 0xffffffdc
   19224:	bl	11664 <__errno_location@plt>
   19228:	ldr	r0, [r0]
   1922c:	str	r0, [sp, #40]	; 0x28
   19230:	ldr	r0, [fp, #-20]	; 0xffffffec
   19234:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19238:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1923c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19240:	ldr	lr, [fp, #-36]	; 0xffffffdc
   19244:	ldr	lr, [lr]
   19248:	ldr	ip, [fp, #-36]	; 0xffffffdc
   1924c:	ldr	ip, [ip, #4]
   19250:	ldr	r4, [fp, #-36]	; 0xffffffdc
   19254:	add	r4, r4, #8
   19258:	ldr	r5, [fp, #-36]	; 0xffffffdc
   1925c:	ldr	r5, [r5, #40]	; 0x28
   19260:	ldr	r6, [fp, #-36]	; 0xffffffdc
   19264:	ldr	r6, [r6, #44]	; 0x2c
   19268:	str	lr, [sp]
   1926c:	str	ip, [sp, #4]
   19270:	str	r4, [sp, #8]
   19274:	str	r5, [sp, #12]
   19278:	str	r6, [sp, #16]
   1927c:	bl	192a4 <__assert_fail@plt+0x7acc>
   19280:	str	r0, [sp, #36]	; 0x24
   19284:	ldr	r0, [sp, #40]	; 0x28
   19288:	str	r0, [sp, #24]
   1928c:	bl	11664 <__errno_location@plt>
   19290:	ldr	r1, [sp, #24]
   19294:	str	r1, [r0]
   19298:	ldr	r0, [sp, #36]	; 0x24
   1929c:	sub	sp, fp, #16
   192a0:	pop	{r4, r5, r6, sl, fp, pc}
   192a4:	push	{r4, r5, r6, sl, fp, lr}
   192a8:	add	fp, sp, #16
   192ac:	sub	sp, sp, #168	; 0xa8
   192b0:	ldr	ip, [fp, #24]
   192b4:	ldr	lr, [fp, #20]
   192b8:	ldr	r4, [fp, #16]
   192bc:	ldr	r5, [fp, #12]
   192c0:	ldr	r6, [fp, #8]
   192c4:	str	r0, [fp, #-24]	; 0xffffffe8
   192c8:	str	r1, [fp, #-28]	; 0xffffffe4
   192cc:	str	r2, [fp, #-32]	; 0xffffffe0
   192d0:	str	r3, [fp, #-36]	; 0xffffffdc
   192d4:	movw	r0, #0
   192d8:	str	r0, [fp, #-44]	; 0xffffffd4
   192dc:	str	r0, [fp, #-48]	; 0xffffffd0
   192e0:	str	r0, [fp, #-52]	; 0xffffffcc
   192e4:	str	r0, [fp, #-56]	; 0xffffffc8
   192e8:	movw	r0, #0
   192ec:	strb	r0, [fp, #-57]	; 0xffffffc7
   192f0:	str	r6, [sp, #80]	; 0x50
   192f4:	str	lr, [sp, #76]	; 0x4c
   192f8:	str	r4, [sp, #72]	; 0x48
   192fc:	str	r5, [sp, #68]	; 0x44
   19300:	str	ip, [sp, #64]	; 0x40
   19304:	bl	1155c <__ctype_get_mb_cur_max@plt>
   19308:	cmp	r0, #1
   1930c:	movw	r0, #0
   19310:	moveq	r0, #1
   19314:	and	r0, r0, #1
   19318:	strb	r0, [fp, #-58]	; 0xffffffc6
   1931c:	ldr	r0, [fp, #12]
   19320:	and	r0, r0, #2
   19324:	cmp	r0, #0
   19328:	movw	r0, #0
   1932c:	movne	r0, #1
   19330:	and	r0, r0, #1
   19334:	strb	r0, [fp, #-59]	; 0xffffffc5
   19338:	movw	r0, #0
   1933c:	strb	r0, [fp, #-60]	; 0xffffffc4
   19340:	strb	r0, [fp, #-61]	; 0xffffffc3
   19344:	movw	r0, #1
   19348:	strb	r0, [fp, #-62]	; 0xffffffc2
   1934c:	ldr	r0, [fp, #8]
   19350:	cmp	r0, #10
   19354:	str	r0, [sp, #60]	; 0x3c
   19358:	bhi	19580 <__assert_fail@plt+0x7da8>
   1935c:	add	r0, pc, #8
   19360:	ldr	r1, [sp, #60]	; 0x3c
   19364:	ldr	r0, [r0, r1, lsl #2]
   19368:	mov	pc, r0
   1936c:	andeq	r9, r1, r4, ror r5
   19370:	strdeq	r9, [r1], -r0
   19374:	andeq	r9, r1, r0, lsl r5
   19378:	andeq	r9, r1, r8, ror #9
   1937c:	strdeq	r9, [r1], -r8
   19380:	andeq	r9, r1, r8, lsr #7
   19384:	muleq	r1, r8, r3
   19388:	andeq	r9, r1, ip, lsl #8
   1938c:	andeq	r9, r1, r0, lsr #8
   19390:	andeq	r9, r1, r0, lsr #8
   19394:	andeq	r9, r1, r0, lsr #8
   19398:	movw	r0, #5
   1939c:	str	r0, [fp, #8]
   193a0:	movw	r0, #1
   193a4:	strb	r0, [fp, #-59]	; 0xffffffc5
   193a8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   193ac:	tst	r0, #1
   193b0:	bne	193ec <__assert_fail@plt+0x7c14>
   193b4:	b	193b8 <__assert_fail@plt+0x7be0>
   193b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   193bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   193c0:	cmp	r0, r1
   193c4:	bcs	193dc <__assert_fail@plt+0x7c04>
   193c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   193cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   193d0:	add	r0, r0, r1
   193d4:	movw	r1, #34	; 0x22
   193d8:	strb	r1, [r0]
   193dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   193e0:	add	r0, r0, #1
   193e4:	str	r0, [fp, #-44]	; 0xffffffd4
   193e8:	b	193ec <__assert_fail@plt+0x7c14>
   193ec:	movw	r0, #1
   193f0:	strb	r0, [fp, #-57]	; 0xffffffc7
   193f4:	movw	r0, #18025	; 0x4669
   193f8:	movt	r0, #2
   193fc:	str	r0, [fp, #-52]	; 0xffffffcc
   19400:	movw	r0, #1
   19404:	str	r0, [fp, #-56]	; 0xffffffc8
   19408:	b	19584 <__assert_fail@plt+0x7dac>
   1940c:	movw	r0, #1
   19410:	strb	r0, [fp, #-57]	; 0xffffffc7
   19414:	movw	r0, #0
   19418:	strb	r0, [fp, #-59]	; 0xffffffc5
   1941c:	b	19584 <__assert_fail@plt+0x7dac>
   19420:	ldr	r0, [fp, #8]
   19424:	cmp	r0, #10
   19428:	beq	19454 <__assert_fail@plt+0x7c7c>
   1942c:	ldr	r1, [fp, #8]
   19430:	movw	r0, #18027	; 0x466b
   19434:	movt	r0, #2
   19438:	bl	1b494 <__assert_fail@plt+0x9cbc>
   1943c:	str	r0, [fp, #20]
   19440:	ldr	r1, [fp, #8]
   19444:	movw	r0, #17861	; 0x45c5
   19448:	movt	r0, #2
   1944c:	bl	1b494 <__assert_fail@plt+0x9cbc>
   19450:	str	r0, [fp, #24]
   19454:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19458:	tst	r0, #1
   1945c:	bne	194c8 <__assert_fail@plt+0x7cf0>
   19460:	ldr	r0, [fp, #20]
   19464:	str	r0, [fp, #-52]	; 0xffffffcc
   19468:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1946c:	ldrsb	r0, [r0]
   19470:	cmp	r0, #0
   19474:	beq	194c4 <__assert_fail@plt+0x7cec>
   19478:	b	1947c <__assert_fail@plt+0x7ca4>
   1947c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19480:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19484:	cmp	r0, r1
   19488:	bcs	194a4 <__assert_fail@plt+0x7ccc>
   1948c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19490:	ldrb	r0, [r0]
   19494:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19498:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1949c:	add	r1, r1, r2
   194a0:	strb	r0, [r1]
   194a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   194a8:	add	r0, r0, #1
   194ac:	str	r0, [fp, #-44]	; 0xffffffd4
   194b0:	b	194b4 <__assert_fail@plt+0x7cdc>
   194b4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   194b8:	add	r0, r0, #1
   194bc:	str	r0, [fp, #-52]	; 0xffffffcc
   194c0:	b	19468 <__assert_fail@plt+0x7c90>
   194c4:	b	194c8 <__assert_fail@plt+0x7cf0>
   194c8:	movw	r0, #1
   194cc:	strb	r0, [fp, #-57]	; 0xffffffc7
   194d0:	ldr	r0, [fp, #24]
   194d4:	str	r0, [fp, #-52]	; 0xffffffcc
   194d8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   194dc:	bl	11634 <strlen@plt>
   194e0:	str	r0, [fp, #-56]	; 0xffffffc8
   194e4:	b	19584 <__assert_fail@plt+0x7dac>
   194e8:	movw	r0, #1
   194ec:	strb	r0, [fp, #-57]	; 0xffffffc7
   194f0:	movw	r0, #1
   194f4:	strb	r0, [fp, #-59]	; 0xffffffc5
   194f8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   194fc:	tst	r0, #1
   19500:	bne	1950c <__assert_fail@plt+0x7d34>
   19504:	movw	r0, #1
   19508:	strb	r0, [fp, #-57]	; 0xffffffc7
   1950c:	b	19510 <__assert_fail@plt+0x7d38>
   19510:	movw	r0, #2
   19514:	str	r0, [fp, #8]
   19518:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1951c:	tst	r0, #1
   19520:	bne	1955c <__assert_fail@plt+0x7d84>
   19524:	b	19528 <__assert_fail@plt+0x7d50>
   19528:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1952c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19530:	cmp	r0, r1
   19534:	bcs	1954c <__assert_fail@plt+0x7d74>
   19538:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1953c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19540:	add	r0, r0, r1
   19544:	movw	r1, #39	; 0x27
   19548:	strb	r1, [r0]
   1954c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19550:	add	r0, r0, #1
   19554:	str	r0, [fp, #-44]	; 0xffffffd4
   19558:	b	1955c <__assert_fail@plt+0x7d84>
   1955c:	movw	r0, #17861	; 0x45c5
   19560:	movt	r0, #2
   19564:	str	r0, [fp, #-52]	; 0xffffffcc
   19568:	movw	r0, #1
   1956c:	str	r0, [fp, #-56]	; 0xffffffc8
   19570:	b	19584 <__assert_fail@plt+0x7dac>
   19574:	movw	r0, #0
   19578:	strb	r0, [fp, #-59]	; 0xffffffc5
   1957c:	b	19584 <__assert_fail@plt+0x7dac>
   19580:	bl	117a8 <abort@plt>
   19584:	movw	r0, #0
   19588:	str	r0, [fp, #-40]	; 0xffffffd8
   1958c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19590:	cmn	r0, #1
   19594:	bne	195c0 <__assert_fail@plt+0x7de8>
   19598:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1959c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   195a0:	add	r0, r0, r1
   195a4:	ldrb	r0, [r0]
   195a8:	cmp	r0, #0
   195ac:	movw	r0, #0
   195b0:	moveq	r0, #1
   195b4:	and	r0, r0, #1
   195b8:	str	r0, [sp, #56]	; 0x38
   195bc:	b	195dc <__assert_fail@plt+0x7e04>
   195c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   195c4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   195c8:	cmp	r0, r1
   195cc:	movw	r0, #0
   195d0:	moveq	r0, #1
   195d4:	and	r0, r0, #1
   195d8:	str	r0, [sp, #56]	; 0x38
   195dc:	ldr	r0, [sp, #56]	; 0x38
   195e0:	cmp	r0, #0
   195e4:	movw	r0, #0
   195e8:	movne	r0, #1
   195ec:	mvn	r1, #0
   195f0:	eor	r0, r0, r1
   195f4:	tst	r0, #1
   195f8:	beq	1a7e8 <__assert_fail@plt+0x9010>
   195fc:	movw	r0, #0
   19600:	strb	r0, [fp, #-65]	; 0xffffffbf
   19604:	strb	r0, [fp, #-66]	; 0xffffffbe
   19608:	strb	r0, [fp, #-67]	; 0xffffffbd
   1960c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   19610:	tst	r0, #1
   19614:	beq	196c0 <__assert_fail@plt+0x7ee8>
   19618:	ldr	r0, [fp, #8]
   1961c:	cmp	r0, #2
   19620:	beq	196c0 <__assert_fail@plt+0x7ee8>
   19624:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19628:	cmp	r0, #0
   1962c:	beq	196c0 <__assert_fail@plt+0x7ee8>
   19630:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19634:	ldr	r1, [fp, #-56]	; 0xffffffc8
   19638:	add	r0, r0, r1
   1963c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19640:	cmn	r1, #1
   19644:	str	r0, [sp, #52]	; 0x34
   19648:	bne	19670 <__assert_fail@plt+0x7e98>
   1964c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19650:	movw	r1, #1
   19654:	cmp	r1, r0
   19658:	bcs	19670 <__assert_fail@plt+0x7e98>
   1965c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19660:	bl	11634 <strlen@plt>
   19664:	str	r0, [fp, #-36]	; 0xffffffdc
   19668:	str	r0, [sp, #48]	; 0x30
   1966c:	b	19678 <__assert_fail@plt+0x7ea0>
   19670:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19674:	str	r0, [sp, #48]	; 0x30
   19678:	ldr	r0, [sp, #48]	; 0x30
   1967c:	ldr	r1, [sp, #52]	; 0x34
   19680:	cmp	r1, r0
   19684:	bhi	196c0 <__assert_fail@plt+0x7ee8>
   19688:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1968c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19690:	add	r0, r0, r1
   19694:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19698:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1969c:	bl	114cc <memcmp@plt>
   196a0:	cmp	r0, #0
   196a4:	bne	196c0 <__assert_fail@plt+0x7ee8>
   196a8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   196ac:	tst	r0, #1
   196b0:	beq	196b8 <__assert_fail@plt+0x7ee0>
   196b4:	b	1a968 <__assert_fail@plt+0x9190>
   196b8:	movw	r0, #1
   196bc:	strb	r0, [fp, #-65]	; 0xffffffbf
   196c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   196c4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   196c8:	ldrb	r0, [r0, r1]
   196cc:	strb	r0, [fp, #-63]	; 0xffffffc1
   196d0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   196d4:	mov	r1, r0
   196d8:	cmp	r0, #126	; 0x7e
   196dc:	str	r1, [sp, #44]	; 0x2c
   196e0:	bhi	19f50 <__assert_fail@plt+0x8778>
   196e4:	add	r0, pc, #8
   196e8:	ldr	r1, [sp, #44]	; 0x2c
   196ec:	ldr	r0, [r0, r1, lsl #2]
   196f0:	mov	pc, r0
   196f4:	strdeq	r9, [r1], -r0
   196f8:	andeq	r9, r1, r0, asr pc
   196fc:	andeq	r9, r1, r0, asr pc
   19700:	andeq	r9, r1, r0, asr pc
   19704:	andeq	r9, r1, r0, asr pc
   19708:	andeq	r9, r1, r0, asr pc
   1970c:	andeq	r9, r1, r0, asr pc
   19710:	strdeq	r9, [r1], -r8
   19714:	andeq	r9, r1, r4, lsl #26
   19718:	andeq	r9, r1, r4, lsr sp
   1971c:	andeq	r9, r1, ip, lsl sp
   19720:	andeq	r9, r1, r0, asr #26
   19724:	andeq	r9, r1, r0, lsl sp
   19728:	andeq	r9, r1, r8, lsr #26
   1972c:	andeq	r9, r1, r0, asr pc
   19730:	andeq	r9, r1, r0, asr pc
   19734:	andeq	r9, r1, r0, asr pc
   19738:	andeq	r9, r1, r0, asr pc
   1973c:	andeq	r9, r1, r0, asr pc
   19740:	andeq	r9, r1, r0, asr pc
   19744:	andeq	r9, r1, r0, asr pc
   19748:	andeq	r9, r1, r0, asr pc
   1974c:	andeq	r9, r1, r0, asr pc
   19750:	andeq	r9, r1, r0, asr pc
   19754:	andeq	r9, r1, r0, asr pc
   19758:	andeq	r9, r1, r0, asr pc
   1975c:	andeq	r9, r1, r0, asr pc
   19760:	andeq	r9, r1, r0, asr pc
   19764:	andeq	r9, r1, r0, asr pc
   19768:	andeq	r9, r1, r0, asr pc
   1976c:	andeq	r9, r1, r0, asr pc
   19770:	andeq	r9, r1, r0, asr pc
   19774:	andeq	r9, r1, r4, lsr #28
   19778:	andeq	r9, r1, ip, lsr #28
   1977c:	andeq	r9, r1, ip, lsr #28
   19780:	andeq	r9, r1, r0, lsl lr
   19784:	andeq	r9, r1, ip, lsr #28
   19788:	andeq	r9, r1, r4, asr #30
   1978c:	andeq	r9, r1, ip, lsr #28
   19790:	andeq	r9, r1, ip, asr #28
   19794:	andeq	r9, r1, ip, lsr #28
   19798:	andeq	r9, r1, ip, lsr #28
   1979c:	andeq	r9, r1, ip, lsr #28
   197a0:	andeq	r9, r1, r4, asr #30
   197a4:	andeq	r9, r1, r4, asr #30
   197a8:	andeq	r9, r1, r4, asr #30
   197ac:	andeq	r9, r1, r4, asr #30
   197b0:	andeq	r9, r1, r4, asr #30
   197b4:	andeq	r9, r1, r4, asr #30
   197b8:	andeq	r9, r1, r4, asr #30
   197bc:	andeq	r9, r1, r4, asr #30
   197c0:	andeq	r9, r1, r4, asr #30
   197c4:	andeq	r9, r1, r4, asr #30
   197c8:	andeq	r9, r1, r4, asr #30
   197cc:	andeq	r9, r1, r4, asr #30
   197d0:	andeq	r9, r1, r4, asr #30
   197d4:	andeq	r9, r1, r4, asr #30
   197d8:	andeq	r9, r1, r4, asr #30
   197dc:	andeq	r9, r1, r4, asr #30
   197e0:	andeq	r9, r1, ip, lsr #28
   197e4:	andeq	r9, r1, ip, lsr #28
   197e8:	andeq	r9, r1, ip, lsr #28
   197ec:	andeq	r9, r1, ip, lsr #28
   197f0:	strdeq	r9, [r1], -ip
   197f4:	andeq	r9, r1, r0, asr pc
   197f8:	andeq	r9, r1, r4, asr #30
   197fc:	andeq	r9, r1, r4, asr #30
   19800:	andeq	r9, r1, r4, asr #30
   19804:	andeq	r9, r1, r4, asr #30
   19808:	andeq	r9, r1, r4, asr #30
   1980c:	andeq	r9, r1, r4, asr #30
   19810:	andeq	r9, r1, r4, asr #30
   19814:	andeq	r9, r1, r4, asr #30
   19818:	andeq	r9, r1, r4, asr #30
   1981c:	andeq	r9, r1, r4, asr #30
   19820:	andeq	r9, r1, r4, asr #30
   19824:	andeq	r9, r1, r4, asr #30
   19828:	andeq	r9, r1, r4, asr #30
   1982c:	andeq	r9, r1, r4, asr #30
   19830:	andeq	r9, r1, r4, asr #30
   19834:	andeq	r9, r1, r4, asr #30
   19838:	andeq	r9, r1, r4, asr #30
   1983c:	andeq	r9, r1, r4, asr #30
   19840:	andeq	r9, r1, r4, asr #30
   19844:	andeq	r9, r1, r4, asr #30
   19848:	andeq	r9, r1, r4, asr #30
   1984c:	andeq	r9, r1, r4, asr #30
   19850:	andeq	r9, r1, r4, asr #30
   19854:	andeq	r9, r1, r4, asr #30
   19858:	andeq	r9, r1, r4, asr #30
   1985c:	andeq	r9, r1, r4, asr #30
   19860:	andeq	r9, r1, ip, lsr #28
   19864:	andeq	r9, r1, ip, asr #26
   19868:	andeq	r9, r1, r4, asr #30
   1986c:	andeq	r9, r1, ip, lsr #28
   19870:	andeq	r9, r1, r4, asr #30
   19874:	andeq	r9, r1, ip, lsr #28
   19878:	andeq	r9, r1, r4, asr #30
   1987c:	andeq	r9, r1, r4, asr #30
   19880:	andeq	r9, r1, r4, asr #30
   19884:	andeq	r9, r1, r4, asr #30
   19888:	andeq	r9, r1, r4, asr #30
   1988c:	andeq	r9, r1, r4, asr #30
   19890:	andeq	r9, r1, r4, asr #30
   19894:	andeq	r9, r1, r4, asr #30
   19898:	andeq	r9, r1, r4, asr #30
   1989c:	andeq	r9, r1, r4, asr #30
   198a0:	andeq	r9, r1, r4, asr #30
   198a4:	andeq	r9, r1, r4, asr #30
   198a8:	andeq	r9, r1, r4, asr #30
   198ac:	andeq	r9, r1, r4, asr #30
   198b0:	andeq	r9, r1, r4, asr #30
   198b4:	andeq	r9, r1, r4, asr #30
   198b8:	andeq	r9, r1, r4, asr #30
   198bc:	andeq	r9, r1, r4, asr #30
   198c0:	andeq	r9, r1, r4, asr #30
   198c4:	andeq	r9, r1, r4, asr #30
   198c8:	andeq	r9, r1, r4, asr #30
   198cc:	andeq	r9, r1, r4, asr #30
   198d0:	andeq	r9, r1, r4, asr #30
   198d4:	andeq	r9, r1, r4, asr #30
   198d8:	andeq	r9, r1, r4, asr #30
   198dc:	andeq	r9, r1, r4, asr #30
   198e0:	ldrdeq	r9, [r1], -ip
   198e4:	andeq	r9, r1, ip, lsr #28
   198e8:	ldrdeq	r9, [r1], -ip
   198ec:	andeq	r9, r1, r0, lsl lr
   198f0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   198f4:	tst	r0, #1
   198f8:	beq	19ae0 <__assert_fail@plt+0x8308>
   198fc:	b	19900 <__assert_fail@plt+0x8128>
   19900:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19904:	tst	r0, #1
   19908:	beq	19910 <__assert_fail@plt+0x8138>
   1990c:	b	1a968 <__assert_fail@plt+0x9190>
   19910:	movw	r0, #1
   19914:	strb	r0, [fp, #-66]	; 0xffffffbe
   19918:	ldr	r0, [fp, #8]
   1991c:	cmp	r0, #2
   19920:	bne	199d4 <__assert_fail@plt+0x81fc>
   19924:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   19928:	tst	r0, #1
   1992c:	bne	199d4 <__assert_fail@plt+0x81fc>
   19930:	b	19934 <__assert_fail@plt+0x815c>
   19934:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19938:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1993c:	cmp	r0, r1
   19940:	bcs	19958 <__assert_fail@plt+0x8180>
   19944:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19948:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1994c:	add	r0, r0, r1
   19950:	movw	r1, #39	; 0x27
   19954:	strb	r1, [r0]
   19958:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1995c:	add	r0, r0, #1
   19960:	str	r0, [fp, #-44]	; 0xffffffd4
   19964:	b	19968 <__assert_fail@plt+0x8190>
   19968:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1996c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19970:	cmp	r0, r1
   19974:	bcs	1998c <__assert_fail@plt+0x81b4>
   19978:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1997c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19980:	add	r0, r0, r1
   19984:	movw	r1, #36	; 0x24
   19988:	strb	r1, [r0]
   1998c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19990:	add	r0, r0, #1
   19994:	str	r0, [fp, #-44]	; 0xffffffd4
   19998:	b	1999c <__assert_fail@plt+0x81c4>
   1999c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   199a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   199a4:	cmp	r0, r1
   199a8:	bcs	199c0 <__assert_fail@plt+0x81e8>
   199ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   199b0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   199b4:	add	r0, r0, r1
   199b8:	movw	r1, #39	; 0x27
   199bc:	strb	r1, [r0]
   199c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   199c4:	add	r0, r0, #1
   199c8:	str	r0, [fp, #-44]	; 0xffffffd4
   199cc:	movw	r0, #1
   199d0:	strb	r0, [fp, #-60]	; 0xffffffc4
   199d4:	b	199d8 <__assert_fail@plt+0x8200>
   199d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   199dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   199e0:	cmp	r0, r1
   199e4:	bcs	199fc <__assert_fail@plt+0x8224>
   199e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   199ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   199f0:	add	r0, r0, r1
   199f4:	movw	r1, #92	; 0x5c
   199f8:	strb	r1, [r0]
   199fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19a00:	add	r0, r0, #1
   19a04:	str	r0, [fp, #-44]	; 0xffffffd4
   19a08:	b	19a0c <__assert_fail@plt+0x8234>
   19a0c:	ldr	r0, [fp, #8]
   19a10:	cmp	r0, #2
   19a14:	beq	19ad4 <__assert_fail@plt+0x82fc>
   19a18:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19a1c:	add	r0, r0, #1
   19a20:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19a24:	cmp	r0, r1
   19a28:	bcs	19ad4 <__assert_fail@plt+0x82fc>
   19a2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19a30:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19a34:	add	r1, r1, #1
   19a38:	add	r0, r0, r1
   19a3c:	ldrb	r0, [r0]
   19a40:	movw	r1, #48	; 0x30
   19a44:	cmp	r1, r0
   19a48:	bgt	19ad4 <__assert_fail@plt+0x82fc>
   19a4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19a50:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19a54:	add	r1, r1, #1
   19a58:	add	r0, r0, r1
   19a5c:	ldrb	r0, [r0]
   19a60:	cmp	r0, #57	; 0x39
   19a64:	bgt	19ad4 <__assert_fail@plt+0x82fc>
   19a68:	b	19a6c <__assert_fail@plt+0x8294>
   19a6c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19a70:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19a74:	cmp	r0, r1
   19a78:	bcs	19a90 <__assert_fail@plt+0x82b8>
   19a7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a80:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19a84:	add	r0, r0, r1
   19a88:	movw	r1, #48	; 0x30
   19a8c:	strb	r1, [r0]
   19a90:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19a94:	add	r0, r0, #1
   19a98:	str	r0, [fp, #-44]	; 0xffffffd4
   19a9c:	b	19aa0 <__assert_fail@plt+0x82c8>
   19aa0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19aa4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19aa8:	cmp	r0, r1
   19aac:	bcs	19ac4 <__assert_fail@plt+0x82ec>
   19ab0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ab4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19ab8:	add	r0, r0, r1
   19abc:	movw	r1, #48	; 0x30
   19ac0:	strb	r1, [r0]
   19ac4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19ac8:	add	r0, r0, #1
   19acc:	str	r0, [fp, #-44]	; 0xffffffd4
   19ad0:	b	19ad4 <__assert_fail@plt+0x82fc>
   19ad4:	movw	r0, #48	; 0x30
   19ad8:	strb	r0, [fp, #-63]	; 0xffffffc1
   19adc:	b	19af8 <__assert_fail@plt+0x8320>
   19ae0:	ldr	r0, [fp, #12]
   19ae4:	and	r0, r0, #1
   19ae8:	cmp	r0, #0
   19aec:	beq	19af4 <__assert_fail@plt+0x831c>
   19af0:	b	1a7d8 <__assert_fail@plt+0x9000>
   19af4:	b	19af8 <__assert_fail@plt+0x8320>
   19af8:	b	1a574 <__assert_fail@plt+0x8d9c>
   19afc:	ldr	r0, [fp, #8]
   19b00:	cmp	r0, #2
   19b04:	str	r0, [sp, #40]	; 0x28
   19b08:	beq	19b20 <__assert_fail@plt+0x8348>
   19b0c:	b	19b10 <__assert_fail@plt+0x8338>
   19b10:	ldr	r0, [sp, #40]	; 0x28
   19b14:	cmp	r0, #5
   19b18:	beq	19b34 <__assert_fail@plt+0x835c>
   19b1c:	b	19cf0 <__assert_fail@plt+0x8518>
   19b20:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19b24:	tst	r0, #1
   19b28:	beq	19b30 <__assert_fail@plt+0x8358>
   19b2c:	b	1a968 <__assert_fail@plt+0x9190>
   19b30:	b	19cf4 <__assert_fail@plt+0x851c>
   19b34:	ldr	r0, [fp, #12]
   19b38:	and	r0, r0, #4
   19b3c:	cmp	r0, #0
   19b40:	beq	19cec <__assert_fail@plt+0x8514>
   19b44:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19b48:	add	r0, r0, #2
   19b4c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19b50:	cmp	r0, r1
   19b54:	bcs	19cec <__assert_fail@plt+0x8514>
   19b58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19b5c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19b60:	add	r1, r1, #1
   19b64:	add	r0, r0, r1
   19b68:	ldrb	r0, [r0]
   19b6c:	cmp	r0, #63	; 0x3f
   19b70:	bne	19cec <__assert_fail@plt+0x8514>
   19b74:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19b78:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19b7c:	add	r0, r0, r1
   19b80:	ldrb	r0, [r0, #2]
   19b84:	mov	r1, r0
   19b88:	cmp	r0, #33	; 0x21
   19b8c:	str	r1, [sp, #36]	; 0x24
   19b90:	beq	19be0 <__assert_fail@plt+0x8408>
   19b94:	b	19b98 <__assert_fail@plt+0x83c0>
   19b98:	ldr	r0, [sp, #36]	; 0x24
   19b9c:	sub	r1, r0, #39	; 0x27
   19ba0:	cmp	r1, #3
   19ba4:	bcc	19be0 <__assert_fail@plt+0x8408>
   19ba8:	b	19bac <__assert_fail@plt+0x83d4>
   19bac:	ldr	r0, [sp, #36]	; 0x24
   19bb0:	cmp	r0, #45	; 0x2d
   19bb4:	beq	19be0 <__assert_fail@plt+0x8408>
   19bb8:	b	19bbc <__assert_fail@plt+0x83e4>
   19bbc:	ldr	r0, [sp, #36]	; 0x24
   19bc0:	cmp	r0, #47	; 0x2f
   19bc4:	beq	19be0 <__assert_fail@plt+0x8408>
   19bc8:	b	19bcc <__assert_fail@plt+0x83f4>
   19bcc:	ldr	r0, [sp, #36]	; 0x24
   19bd0:	sub	r1, r0, #60	; 0x3c
   19bd4:	cmp	r1, #2
   19bd8:	bhi	19ce4 <__assert_fail@plt+0x850c>
   19bdc:	b	19be0 <__assert_fail@plt+0x8408>
   19be0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19be4:	tst	r0, #1
   19be8:	beq	19bf0 <__assert_fail@plt+0x8418>
   19bec:	b	1a968 <__assert_fail@plt+0x9190>
   19bf0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19bf4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19bf8:	add	r1, r1, #2
   19bfc:	add	r0, r0, r1
   19c00:	ldrb	r0, [r0]
   19c04:	strb	r0, [fp, #-63]	; 0xffffffc1
   19c08:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19c0c:	add	r0, r0, #2
   19c10:	str	r0, [fp, #-40]	; 0xffffffd8
   19c14:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19c18:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19c1c:	cmp	r0, r1
   19c20:	bcs	19c38 <__assert_fail@plt+0x8460>
   19c24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c28:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19c2c:	add	r0, r0, r1
   19c30:	movw	r1, #63	; 0x3f
   19c34:	strb	r1, [r0]
   19c38:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19c3c:	add	r0, r0, #1
   19c40:	str	r0, [fp, #-44]	; 0xffffffd4
   19c44:	b	19c48 <__assert_fail@plt+0x8470>
   19c48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19c4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19c50:	cmp	r0, r1
   19c54:	bcs	19c6c <__assert_fail@plt+0x8494>
   19c58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c5c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19c60:	add	r0, r0, r1
   19c64:	movw	r1, #34	; 0x22
   19c68:	strb	r1, [r0]
   19c6c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19c70:	add	r0, r0, #1
   19c74:	str	r0, [fp, #-44]	; 0xffffffd4
   19c78:	b	19c7c <__assert_fail@plt+0x84a4>
   19c7c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19c80:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19c84:	cmp	r0, r1
   19c88:	bcs	19ca0 <__assert_fail@plt+0x84c8>
   19c8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c90:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19c94:	add	r0, r0, r1
   19c98:	movw	r1, #34	; 0x22
   19c9c:	strb	r1, [r0]
   19ca0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19ca4:	add	r0, r0, #1
   19ca8:	str	r0, [fp, #-44]	; 0xffffffd4
   19cac:	b	19cb0 <__assert_fail@plt+0x84d8>
   19cb0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19cb4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19cb8:	cmp	r0, r1
   19cbc:	bcs	19cd4 <__assert_fail@plt+0x84fc>
   19cc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19cc4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19cc8:	add	r0, r0, r1
   19ccc:	movw	r1, #63	; 0x3f
   19cd0:	strb	r1, [r0]
   19cd4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19cd8:	add	r0, r0, #1
   19cdc:	str	r0, [fp, #-44]	; 0xffffffd4
   19ce0:	b	19ce8 <__assert_fail@plt+0x8510>
   19ce4:	b	19ce8 <__assert_fail@plt+0x8510>
   19ce8:	b	19cec <__assert_fail@plt+0x8514>
   19cec:	b	19cf4 <__assert_fail@plt+0x851c>
   19cf0:	b	19cf4 <__assert_fail@plt+0x851c>
   19cf4:	b	1a574 <__assert_fail@plt+0x8d9c>
   19cf8:	movw	r0, #97	; 0x61
   19cfc:	strb	r0, [fp, #-64]	; 0xffffffc0
   19d00:	b	19dc0 <__assert_fail@plt+0x85e8>
   19d04:	movw	r0, #98	; 0x62
   19d08:	strb	r0, [fp, #-64]	; 0xffffffc0
   19d0c:	b	19dc0 <__assert_fail@plt+0x85e8>
   19d10:	movw	r0, #102	; 0x66
   19d14:	strb	r0, [fp, #-64]	; 0xffffffc0
   19d18:	b	19dc0 <__assert_fail@plt+0x85e8>
   19d1c:	movw	r0, #110	; 0x6e
   19d20:	strb	r0, [fp, #-64]	; 0xffffffc0
   19d24:	b	19da0 <__assert_fail@plt+0x85c8>
   19d28:	movw	r0, #114	; 0x72
   19d2c:	strb	r0, [fp, #-64]	; 0xffffffc0
   19d30:	b	19da0 <__assert_fail@plt+0x85c8>
   19d34:	movw	r0, #116	; 0x74
   19d38:	strb	r0, [fp, #-64]	; 0xffffffc0
   19d3c:	b	19da0 <__assert_fail@plt+0x85c8>
   19d40:	movw	r0, #118	; 0x76
   19d44:	strb	r0, [fp, #-64]	; 0xffffffc0
   19d48:	b	19dc0 <__assert_fail@plt+0x85e8>
   19d4c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   19d50:	strb	r0, [fp, #-64]	; 0xffffffc0
   19d54:	ldr	r0, [fp, #8]
   19d58:	cmp	r0, #2
   19d5c:	bne	19d74 <__assert_fail@plt+0x859c>
   19d60:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19d64:	tst	r0, #1
   19d68:	beq	19d70 <__assert_fail@plt+0x8598>
   19d6c:	b	1a968 <__assert_fail@plt+0x9190>
   19d70:	b	1a6fc <__assert_fail@plt+0x8f24>
   19d74:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   19d78:	tst	r0, #1
   19d7c:	beq	19d9c <__assert_fail@plt+0x85c4>
   19d80:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19d84:	tst	r0, #1
   19d88:	beq	19d9c <__assert_fail@plt+0x85c4>
   19d8c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19d90:	cmp	r0, #0
   19d94:	beq	19d9c <__assert_fail@plt+0x85c4>
   19d98:	b	1a6fc <__assert_fail@plt+0x8f24>
   19d9c:	b	19da0 <__assert_fail@plt+0x85c8>
   19da0:	ldr	r0, [fp, #8]
   19da4:	cmp	r0, #2
   19da8:	bne	19dbc <__assert_fail@plt+0x85e4>
   19dac:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19db0:	tst	r0, #1
   19db4:	beq	19dbc <__assert_fail@plt+0x85e4>
   19db8:	b	1a968 <__assert_fail@plt+0x9190>
   19dbc:	b	19dc0 <__assert_fail@plt+0x85e8>
   19dc0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   19dc4:	tst	r0, #1
   19dc8:	beq	19dd8 <__assert_fail@plt+0x8600>
   19dcc:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   19dd0:	strb	r0, [fp, #-63]	; 0xffffffc1
   19dd4:	b	1a5e8 <__assert_fail@plt+0x8e10>
   19dd8:	b	1a574 <__assert_fail@plt+0x8d9c>
   19ddc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19de0:	cmn	r0, #1
   19de4:	bne	19dfc <__assert_fail@plt+0x8624>
   19de8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19dec:	ldrb	r0, [r0, #1]
   19df0:	cmp	r0, #0
   19df4:	beq	19e0c <__assert_fail@plt+0x8634>
   19df8:	b	19e08 <__assert_fail@plt+0x8630>
   19dfc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19e00:	cmp	r0, #1
   19e04:	beq	19e0c <__assert_fail@plt+0x8634>
   19e08:	b	1a574 <__assert_fail@plt+0x8d9c>
   19e0c:	b	19e10 <__assert_fail@plt+0x8638>
   19e10:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19e14:	cmp	r0, #0
   19e18:	beq	19e20 <__assert_fail@plt+0x8648>
   19e1c:	b	1a574 <__assert_fail@plt+0x8d9c>
   19e20:	b	19e24 <__assert_fail@plt+0x864c>
   19e24:	movw	r0, #1
   19e28:	strb	r0, [fp, #-67]	; 0xffffffbd
   19e2c:	ldr	r0, [fp, #8]
   19e30:	cmp	r0, #2
   19e34:	bne	19e48 <__assert_fail@plt+0x8670>
   19e38:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19e3c:	tst	r0, #1
   19e40:	beq	19e48 <__assert_fail@plt+0x8670>
   19e44:	b	1a968 <__assert_fail@plt+0x9190>
   19e48:	b	1a574 <__assert_fail@plt+0x8d9c>
   19e4c:	movw	r0, #1
   19e50:	strb	r0, [fp, #-61]	; 0xffffffc3
   19e54:	strb	r0, [fp, #-67]	; 0xffffffbd
   19e58:	ldr	r0, [fp, #8]
   19e5c:	cmp	r0, #2
   19e60:	bne	19f40 <__assert_fail@plt+0x8768>
   19e64:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19e68:	tst	r0, #1
   19e6c:	beq	19e74 <__assert_fail@plt+0x869c>
   19e70:	b	1a968 <__assert_fail@plt+0x9190>
   19e74:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19e78:	cmp	r0, #0
   19e7c:	beq	19e9c <__assert_fail@plt+0x86c4>
   19e80:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19e84:	cmp	r0, #0
   19e88:	bne	19e9c <__assert_fail@plt+0x86c4>
   19e8c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19e90:	str	r0, [fp, #-48]	; 0xffffffd0
   19e94:	movw	r0, #0
   19e98:	str	r0, [fp, #-28]	; 0xffffffe4
   19e9c:	b	19ea0 <__assert_fail@plt+0x86c8>
   19ea0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19ea4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19ea8:	cmp	r0, r1
   19eac:	bcs	19ec4 <__assert_fail@plt+0x86ec>
   19eb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19eb4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19eb8:	add	r0, r0, r1
   19ebc:	movw	r1, #39	; 0x27
   19ec0:	strb	r1, [r0]
   19ec4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19ec8:	add	r0, r0, #1
   19ecc:	str	r0, [fp, #-44]	; 0xffffffd4
   19ed0:	b	19ed4 <__assert_fail@plt+0x86fc>
   19ed4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19ed8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19edc:	cmp	r0, r1
   19ee0:	bcs	19ef8 <__assert_fail@plt+0x8720>
   19ee4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ee8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19eec:	add	r0, r0, r1
   19ef0:	movw	r1, #92	; 0x5c
   19ef4:	strb	r1, [r0]
   19ef8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19efc:	add	r0, r0, #1
   19f00:	str	r0, [fp, #-44]	; 0xffffffd4
   19f04:	b	19f08 <__assert_fail@plt+0x8730>
   19f08:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19f0c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19f10:	cmp	r0, r1
   19f14:	bcs	19f2c <__assert_fail@plt+0x8754>
   19f18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f1c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19f20:	add	r0, r0, r1
   19f24:	movw	r1, #39	; 0x27
   19f28:	strb	r1, [r0]
   19f2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19f30:	add	r0, r0, #1
   19f34:	str	r0, [fp, #-44]	; 0xffffffd4
   19f38:	movw	r0, #0
   19f3c:	strb	r0, [fp, #-60]	; 0xffffffc4
   19f40:	b	1a574 <__assert_fail@plt+0x8d9c>
   19f44:	movw	r0, #1
   19f48:	strb	r0, [fp, #-67]	; 0xffffffbd
   19f4c:	b	1a574 <__assert_fail@plt+0x8d9c>
   19f50:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   19f54:	tst	r0, #1
   19f58:	beq	19f9c <__assert_fail@plt+0x87c4>
   19f5c:	mov	r0, #1
   19f60:	str	r0, [fp, #-72]	; 0xffffffb8
   19f64:	bl	115f8 <__ctype_b_loc@plt>
   19f68:	ldr	r0, [r0]
   19f6c:	ldrb	lr, [fp, #-63]	; 0xffffffc1
   19f70:	mov	r1, lr
   19f74:	add	r0, r0, lr, lsl #1
   19f78:	ldrh	r0, [r0]
   19f7c:	and	r0, r0, #16384	; 0x4000
   19f80:	cmp	r0, #0
   19f84:	movw	r0, #0
   19f88:	movne	r0, #1
   19f8c:	and	r0, r0, #1
   19f90:	strb	r0, [fp, #-73]	; 0xffffffb7
   19f94:	str	r1, [sp, #32]
   19f98:	b	1a228 <__assert_fail@plt+0x8a50>
   19f9c:	sub	r0, fp, #84	; 0x54
   19fa0:	movw	r1, #0
   19fa4:	and	r1, r1, #255	; 0xff
   19fa8:	movw	r2, #8
   19fac:	bl	11688 <memset@plt>
   19fb0:	movw	r0, #0
   19fb4:	str	r0, [fp, #-72]	; 0xffffffb8
   19fb8:	movw	r0, #1
   19fbc:	strb	r0, [fp, #-73]	; 0xffffffb7
   19fc0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19fc4:	cmn	r0, #1
   19fc8:	bne	19fd8 <__assert_fail@plt+0x8800>
   19fcc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19fd0:	bl	11634 <strlen@plt>
   19fd4:	str	r0, [fp, #-36]	; 0xffffffdc
   19fd8:	b	19fdc <__assert_fail@plt+0x8804>
   19fdc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19fe0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19fe4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   19fe8:	add	r1, r1, r2
   19fec:	add	r1, r0, r1
   19ff0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19ff4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19ff8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19ffc:	add	r2, r2, r3
   1a000:	sub	r2, r0, r2
   1a004:	sub	r0, fp, #88	; 0x58
   1a008:	sub	r3, fp, #84	; 0x54
   1a00c:	bl	1fe10 <__assert_fail@plt+0xe638>
   1a010:	str	r0, [sp, #92]	; 0x5c
   1a014:	ldr	r0, [sp, #92]	; 0x5c
   1a018:	cmp	r0, #0
   1a01c:	bne	1a024 <__assert_fail@plt+0x884c>
   1a020:	b	1a224 <__assert_fail@plt+0x8a4c>
   1a024:	ldr	r0, [sp, #92]	; 0x5c
   1a028:	cmn	r0, #1
   1a02c:	bne	1a03c <__assert_fail@plt+0x8864>
   1a030:	movw	r0, #0
   1a034:	strb	r0, [fp, #-73]	; 0xffffffb7
   1a038:	b	1a224 <__assert_fail@plt+0x8a4c>
   1a03c:	ldr	r0, [sp, #92]	; 0x5c
   1a040:	cmn	r0, #2
   1a044:	bne	1a0b8 <__assert_fail@plt+0x88e0>
   1a048:	movw	r0, #0
   1a04c:	strb	r0, [fp, #-73]	; 0xffffffb7
   1a050:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a054:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1a058:	add	r0, r0, r1
   1a05c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a060:	cmp	r0, r1
   1a064:	movw	r0, #0
   1a068:	str	r0, [sp, #28]
   1a06c:	bcs	1a098 <__assert_fail@plt+0x88c0>
   1a070:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a074:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a078:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1a07c:	add	r1, r1, r2
   1a080:	add	r0, r0, r1
   1a084:	ldrb	r0, [r0]
   1a088:	cmp	r0, #0
   1a08c:	movw	r0, #0
   1a090:	movne	r0, #1
   1a094:	str	r0, [sp, #28]
   1a098:	ldr	r0, [sp, #28]
   1a09c:	tst	r0, #1
   1a0a0:	beq	1a0b4 <__assert_fail@plt+0x88dc>
   1a0a4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a0a8:	add	r0, r0, #1
   1a0ac:	str	r0, [fp, #-72]	; 0xffffffb8
   1a0b0:	b	1a050 <__assert_fail@plt+0x8878>
   1a0b4:	b	1a224 <__assert_fail@plt+0x8a4c>
   1a0b8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a0bc:	tst	r0, #1
   1a0c0:	beq	1a1cc <__assert_fail@plt+0x89f4>
   1a0c4:	ldr	r0, [fp, #8]
   1a0c8:	cmp	r0, #2
   1a0cc:	bne	1a1cc <__assert_fail@plt+0x89f4>
   1a0d0:	movw	r0, #1
   1a0d4:	str	r0, [sp, #88]	; 0x58
   1a0d8:	ldr	r0, [sp, #88]	; 0x58
   1a0dc:	ldr	r1, [sp, #92]	; 0x5c
   1a0e0:	cmp	r0, r1
   1a0e4:	bcs	1a1c8 <__assert_fail@plt+0x89f0>
   1a0e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a0ec:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a0f0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1a0f4:	add	r1, r1, r2
   1a0f8:	ldr	r2, [sp, #88]	; 0x58
   1a0fc:	add	r1, r1, r2
   1a100:	ldrb	r0, [r0, r1]
   1a104:	sub	r0, r0, #91	; 0x5b
   1a108:	cmp	r0, #33	; 0x21
   1a10c:	str	r0, [sp, #24]
   1a110:	bhi	1a1b0 <__assert_fail@plt+0x89d8>
   1a114:	add	r0, pc, #8
   1a118:	ldr	r1, [sp, #24]
   1a11c:	ldr	r0, [r0, r1, lsl #2]
   1a120:	mov	pc, r0
   1a124:	andeq	sl, r1, ip, lsr #3
   1a128:	andeq	sl, r1, ip, lsr #3
   1a12c:			; <UNDEFINED> instruction: 0x0001a1b0
   1a130:	andeq	sl, r1, ip, lsr #3
   1a134:			; <UNDEFINED> instruction: 0x0001a1b0
   1a138:	andeq	sl, r1, ip, lsr #3
   1a13c:			; <UNDEFINED> instruction: 0x0001a1b0
   1a140:			; <UNDEFINED> instruction: 0x0001a1b0
   1a144:			; <UNDEFINED> instruction: 0x0001a1b0
   1a148:			; <UNDEFINED> instruction: 0x0001a1b0
   1a14c:			; <UNDEFINED> instruction: 0x0001a1b0
   1a150:			; <UNDEFINED> instruction: 0x0001a1b0
   1a154:			; <UNDEFINED> instruction: 0x0001a1b0
   1a158:			; <UNDEFINED> instruction: 0x0001a1b0
   1a15c:			; <UNDEFINED> instruction: 0x0001a1b0
   1a160:			; <UNDEFINED> instruction: 0x0001a1b0
   1a164:			; <UNDEFINED> instruction: 0x0001a1b0
   1a168:			; <UNDEFINED> instruction: 0x0001a1b0
   1a16c:			; <UNDEFINED> instruction: 0x0001a1b0
   1a170:			; <UNDEFINED> instruction: 0x0001a1b0
   1a174:			; <UNDEFINED> instruction: 0x0001a1b0
   1a178:			; <UNDEFINED> instruction: 0x0001a1b0
   1a17c:			; <UNDEFINED> instruction: 0x0001a1b0
   1a180:			; <UNDEFINED> instruction: 0x0001a1b0
   1a184:			; <UNDEFINED> instruction: 0x0001a1b0
   1a188:			; <UNDEFINED> instruction: 0x0001a1b0
   1a18c:			; <UNDEFINED> instruction: 0x0001a1b0
   1a190:			; <UNDEFINED> instruction: 0x0001a1b0
   1a194:			; <UNDEFINED> instruction: 0x0001a1b0
   1a198:			; <UNDEFINED> instruction: 0x0001a1b0
   1a19c:			; <UNDEFINED> instruction: 0x0001a1b0
   1a1a0:			; <UNDEFINED> instruction: 0x0001a1b0
   1a1a4:			; <UNDEFINED> instruction: 0x0001a1b0
   1a1a8:	andeq	sl, r1, ip, lsr #3
   1a1ac:	b	1a968 <__assert_fail@plt+0x9190>
   1a1b0:	b	1a1b4 <__assert_fail@plt+0x89dc>
   1a1b4:	b	1a1b8 <__assert_fail@plt+0x89e0>
   1a1b8:	ldr	r0, [sp, #88]	; 0x58
   1a1bc:	add	r0, r0, #1
   1a1c0:	str	r0, [sp, #88]	; 0x58
   1a1c4:	b	1a0d8 <__assert_fail@plt+0x8900>
   1a1c8:	b	1a1cc <__assert_fail@plt+0x89f4>
   1a1cc:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1a1d0:	bl	11520 <iswprint@plt>
   1a1d4:	cmp	r0, #0
   1a1d8:	bne	1a1e4 <__assert_fail@plt+0x8a0c>
   1a1dc:	movw	r0, #0
   1a1e0:	strb	r0, [fp, #-73]	; 0xffffffb7
   1a1e4:	ldr	r0, [sp, #92]	; 0x5c
   1a1e8:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1a1ec:	add	r0, r1, r0
   1a1f0:	str	r0, [fp, #-72]	; 0xffffffb8
   1a1f4:	b	1a1f8 <__assert_fail@plt+0x8a20>
   1a1f8:	b	1a1fc <__assert_fail@plt+0x8a24>
   1a1fc:	b	1a200 <__assert_fail@plt+0x8a28>
   1a200:	sub	r0, fp, #84	; 0x54
   1a204:	bl	114b4 <mbsinit@plt>
   1a208:	cmp	r0, #0
   1a20c:	movw	r0, #0
   1a210:	movne	r0, #1
   1a214:	mvn	lr, #0
   1a218:	eor	r0, r0, lr
   1a21c:	tst	r0, #1
   1a220:	bne	19fdc <__assert_fail@plt+0x8804>
   1a224:	b	1a228 <__assert_fail@plt+0x8a50>
   1a228:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1a22c:	and	r0, r0, #1
   1a230:	strb	r0, [fp, #-67]	; 0xffffffbd
   1a234:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a238:	movw	r1, #1
   1a23c:	cmp	r1, r0
   1a240:	bcc	1a25c <__assert_fail@plt+0x8a84>
   1a244:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1a248:	tst	r0, #1
   1a24c:	beq	1a570 <__assert_fail@plt+0x8d98>
   1a250:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1a254:	tst	r0, #1
   1a258:	bne	1a570 <__assert_fail@plt+0x8d98>
   1a25c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a260:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1a264:	add	r0, r0, r1
   1a268:	str	r0, [sp, #84]	; 0x54
   1a26c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1a270:	tst	r0, #1
   1a274:	beq	1a424 <__assert_fail@plt+0x8c4c>
   1a278:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1a27c:	tst	r0, #1
   1a280:	bne	1a424 <__assert_fail@plt+0x8c4c>
   1a284:	b	1a288 <__assert_fail@plt+0x8ab0>
   1a288:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a28c:	tst	r0, #1
   1a290:	beq	1a298 <__assert_fail@plt+0x8ac0>
   1a294:	b	1a968 <__assert_fail@plt+0x9190>
   1a298:	movw	r0, #1
   1a29c:	strb	r0, [fp, #-66]	; 0xffffffbe
   1a2a0:	ldr	r0, [fp, #8]
   1a2a4:	cmp	r0, #2
   1a2a8:	bne	1a35c <__assert_fail@plt+0x8b84>
   1a2ac:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1a2b0:	tst	r0, #1
   1a2b4:	bne	1a35c <__assert_fail@plt+0x8b84>
   1a2b8:	b	1a2bc <__assert_fail@plt+0x8ae4>
   1a2bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a2c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a2c4:	cmp	r0, r1
   1a2c8:	bcs	1a2e0 <__assert_fail@plt+0x8b08>
   1a2cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a2d0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a2d4:	add	r0, r0, r1
   1a2d8:	movw	r1, #39	; 0x27
   1a2dc:	strb	r1, [r0]
   1a2e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a2e4:	add	r0, r0, #1
   1a2e8:	str	r0, [fp, #-44]	; 0xffffffd4
   1a2ec:	b	1a2f0 <__assert_fail@plt+0x8b18>
   1a2f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a2f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a2f8:	cmp	r0, r1
   1a2fc:	bcs	1a314 <__assert_fail@plt+0x8b3c>
   1a300:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a304:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a308:	add	r0, r0, r1
   1a30c:	movw	r1, #36	; 0x24
   1a310:	strb	r1, [r0]
   1a314:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a318:	add	r0, r0, #1
   1a31c:	str	r0, [fp, #-44]	; 0xffffffd4
   1a320:	b	1a324 <__assert_fail@plt+0x8b4c>
   1a324:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a328:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a32c:	cmp	r0, r1
   1a330:	bcs	1a348 <__assert_fail@plt+0x8b70>
   1a334:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a338:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a33c:	add	r0, r0, r1
   1a340:	movw	r1, #39	; 0x27
   1a344:	strb	r1, [r0]
   1a348:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a34c:	add	r0, r0, #1
   1a350:	str	r0, [fp, #-44]	; 0xffffffd4
   1a354:	movw	r0, #1
   1a358:	strb	r0, [fp, #-60]	; 0xffffffc4
   1a35c:	b	1a360 <__assert_fail@plt+0x8b88>
   1a360:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a364:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a368:	cmp	r0, r1
   1a36c:	bcs	1a384 <__assert_fail@plt+0x8bac>
   1a370:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a374:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a378:	add	r0, r0, r1
   1a37c:	movw	r1, #92	; 0x5c
   1a380:	strb	r1, [r0]
   1a384:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a388:	add	r0, r0, #1
   1a38c:	str	r0, [fp, #-44]	; 0xffffffd4
   1a390:	b	1a394 <__assert_fail@plt+0x8bbc>
   1a394:	b	1a398 <__assert_fail@plt+0x8bc0>
   1a398:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a39c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a3a0:	cmp	r0, r1
   1a3a4:	bcs	1a3c4 <__assert_fail@plt+0x8bec>
   1a3a8:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1a3ac:	asr	r0, r0, #6
   1a3b0:	add	r0, r0, #48	; 0x30
   1a3b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a3b8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1a3bc:	add	r1, r1, r2
   1a3c0:	strb	r0, [r1]
   1a3c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a3c8:	add	r0, r0, #1
   1a3cc:	str	r0, [fp, #-44]	; 0xffffffd4
   1a3d0:	b	1a3d4 <__assert_fail@plt+0x8bfc>
   1a3d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a3d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a3dc:	cmp	r0, r1
   1a3e0:	bcs	1a404 <__assert_fail@plt+0x8c2c>
   1a3e4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1a3e8:	asr	r0, r0, #3
   1a3ec:	and	r0, r0, #7
   1a3f0:	add	r0, r0, #48	; 0x30
   1a3f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a3f8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1a3fc:	add	r1, r1, r2
   1a400:	strb	r0, [r1]
   1a404:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a408:	add	r0, r0, #1
   1a40c:	str	r0, [fp, #-44]	; 0xffffffd4
   1a410:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1a414:	and	r0, r0, #7
   1a418:	add	r0, r0, #48	; 0x30
   1a41c:	strb	r0, [fp, #-63]	; 0xffffffc1
   1a420:	b	1a470 <__assert_fail@plt+0x8c98>
   1a424:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   1a428:	tst	r0, #1
   1a42c:	beq	1a46c <__assert_fail@plt+0x8c94>
   1a430:	b	1a434 <__assert_fail@plt+0x8c5c>
   1a434:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a438:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a43c:	cmp	r0, r1
   1a440:	bcs	1a458 <__assert_fail@plt+0x8c80>
   1a444:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a448:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a44c:	add	r0, r0, r1
   1a450:	movw	r1, #92	; 0x5c
   1a454:	strb	r1, [r0]
   1a458:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a45c:	add	r0, r0, #1
   1a460:	str	r0, [fp, #-44]	; 0xffffffd4
   1a464:	movw	r0, #0
   1a468:	strb	r0, [fp, #-65]	; 0xffffffbf
   1a46c:	b	1a470 <__assert_fail@plt+0x8c98>
   1a470:	ldr	r0, [sp, #84]	; 0x54
   1a474:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a478:	add	r1, r1, #1
   1a47c:	cmp	r0, r1
   1a480:	bhi	1a488 <__assert_fail@plt+0x8cb0>
   1a484:	b	1a56c <__assert_fail@plt+0x8d94>
   1a488:	b	1a48c <__assert_fail@plt+0x8cb4>
   1a48c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1a490:	tst	r0, #1
   1a494:	beq	1a514 <__assert_fail@plt+0x8d3c>
   1a498:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   1a49c:	tst	r0, #1
   1a4a0:	bne	1a514 <__assert_fail@plt+0x8d3c>
   1a4a4:	b	1a4a8 <__assert_fail@plt+0x8cd0>
   1a4a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a4ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a4b0:	cmp	r0, r1
   1a4b4:	bcs	1a4cc <__assert_fail@plt+0x8cf4>
   1a4b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a4bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a4c0:	add	r0, r0, r1
   1a4c4:	movw	r1, #39	; 0x27
   1a4c8:	strb	r1, [r0]
   1a4cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a4d0:	add	r0, r0, #1
   1a4d4:	str	r0, [fp, #-44]	; 0xffffffd4
   1a4d8:	b	1a4dc <__assert_fail@plt+0x8d04>
   1a4dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a4e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a4e4:	cmp	r0, r1
   1a4e8:	bcs	1a500 <__assert_fail@plt+0x8d28>
   1a4ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a4f0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a4f4:	add	r0, r0, r1
   1a4f8:	movw	r1, #39	; 0x27
   1a4fc:	strb	r1, [r0]
   1a500:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a504:	add	r0, r0, #1
   1a508:	str	r0, [fp, #-44]	; 0xffffffd4
   1a50c:	movw	r0, #0
   1a510:	strb	r0, [fp, #-60]	; 0xffffffc4
   1a514:	b	1a518 <__assert_fail@plt+0x8d40>
   1a518:	b	1a51c <__assert_fail@plt+0x8d44>
   1a51c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a520:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a524:	cmp	r0, r1
   1a528:	bcs	1a540 <__assert_fail@plt+0x8d68>
   1a52c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1a530:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a534:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1a538:	add	r1, r1, r2
   1a53c:	strb	r0, [r1]
   1a540:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a544:	add	r0, r0, #1
   1a548:	str	r0, [fp, #-44]	; 0xffffffd4
   1a54c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a550:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a554:	add	r1, r1, #1
   1a558:	str	r1, [fp, #-40]	; 0xffffffd8
   1a55c:	add	r0, r0, r1
   1a560:	ldrb	r0, [r0]
   1a564:	strb	r0, [fp, #-63]	; 0xffffffc1
   1a568:	b	1a26c <__assert_fail@plt+0x8a94>
   1a56c:	b	1a6fc <__assert_fail@plt+0x8f24>
   1a570:	b	1a574 <__assert_fail@plt+0x8d9c>
   1a574:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1a578:	tst	r0, #1
   1a57c:	beq	1a58c <__assert_fail@plt+0x8db4>
   1a580:	ldr	r0, [fp, #8]
   1a584:	cmp	r0, #2
   1a588:	bne	1a598 <__assert_fail@plt+0x8dc0>
   1a58c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a590:	tst	r0, #1
   1a594:	beq	1a5d4 <__assert_fail@plt+0x8dfc>
   1a598:	ldr	r0, [fp, #16]
   1a59c:	movw	r1, #0
   1a5a0:	cmp	r0, r1
   1a5a4:	beq	1a5d4 <__assert_fail@plt+0x8dfc>
   1a5a8:	ldr	r0, [fp, #16]
   1a5ac:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   1a5b0:	lsr	r1, r1, #5
   1a5b4:	add	r0, r0, r1, lsl #2
   1a5b8:	ldr	r0, [r0]
   1a5bc:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   1a5c0:	and	r1, r1, #31
   1a5c4:	lsr	r0, r0, r1
   1a5c8:	and	r0, r0, #1
   1a5cc:	cmp	r0, #0
   1a5d0:	bne	1a5e4 <__assert_fail@plt+0x8e0c>
   1a5d4:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   1a5d8:	tst	r0, #1
   1a5dc:	bne	1a5e4 <__assert_fail@plt+0x8e0c>
   1a5e0:	b	1a6fc <__assert_fail@plt+0x8f24>
   1a5e4:	b	1a5e8 <__assert_fail@plt+0x8e10>
   1a5e8:	b	1a5ec <__assert_fail@plt+0x8e14>
   1a5ec:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a5f0:	tst	r0, #1
   1a5f4:	beq	1a5fc <__assert_fail@plt+0x8e24>
   1a5f8:	b	1a968 <__assert_fail@plt+0x9190>
   1a5fc:	movw	r0, #1
   1a600:	strb	r0, [fp, #-66]	; 0xffffffbe
   1a604:	ldr	r0, [fp, #8]
   1a608:	cmp	r0, #2
   1a60c:	bne	1a6c0 <__assert_fail@plt+0x8ee8>
   1a610:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1a614:	tst	r0, #1
   1a618:	bne	1a6c0 <__assert_fail@plt+0x8ee8>
   1a61c:	b	1a620 <__assert_fail@plt+0x8e48>
   1a620:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a624:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a628:	cmp	r0, r1
   1a62c:	bcs	1a644 <__assert_fail@plt+0x8e6c>
   1a630:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a634:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a638:	add	r0, r0, r1
   1a63c:	movw	r1, #39	; 0x27
   1a640:	strb	r1, [r0]
   1a644:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a648:	add	r0, r0, #1
   1a64c:	str	r0, [fp, #-44]	; 0xffffffd4
   1a650:	b	1a654 <__assert_fail@plt+0x8e7c>
   1a654:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a658:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a65c:	cmp	r0, r1
   1a660:	bcs	1a678 <__assert_fail@plt+0x8ea0>
   1a664:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a668:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a66c:	add	r0, r0, r1
   1a670:	movw	r1, #36	; 0x24
   1a674:	strb	r1, [r0]
   1a678:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a67c:	add	r0, r0, #1
   1a680:	str	r0, [fp, #-44]	; 0xffffffd4
   1a684:	b	1a688 <__assert_fail@plt+0x8eb0>
   1a688:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a68c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a690:	cmp	r0, r1
   1a694:	bcs	1a6ac <__assert_fail@plt+0x8ed4>
   1a698:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a69c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a6a0:	add	r0, r0, r1
   1a6a4:	movw	r1, #39	; 0x27
   1a6a8:	strb	r1, [r0]
   1a6ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a6b0:	add	r0, r0, #1
   1a6b4:	str	r0, [fp, #-44]	; 0xffffffd4
   1a6b8:	movw	r0, #1
   1a6bc:	strb	r0, [fp, #-60]	; 0xffffffc4
   1a6c0:	b	1a6c4 <__assert_fail@plt+0x8eec>
   1a6c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a6c8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a6cc:	cmp	r0, r1
   1a6d0:	bcs	1a6e8 <__assert_fail@plt+0x8f10>
   1a6d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a6d8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a6dc:	add	r0, r0, r1
   1a6e0:	movw	r1, #92	; 0x5c
   1a6e4:	strb	r1, [r0]
   1a6e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a6ec:	add	r0, r0, #1
   1a6f0:	str	r0, [fp, #-44]	; 0xffffffd4
   1a6f4:	b	1a6f8 <__assert_fail@plt+0x8f20>
   1a6f8:	b	1a6fc <__assert_fail@plt+0x8f24>
   1a6fc:	b	1a700 <__assert_fail@plt+0x8f28>
   1a700:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1a704:	tst	r0, #1
   1a708:	beq	1a788 <__assert_fail@plt+0x8fb0>
   1a70c:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   1a710:	tst	r0, #1
   1a714:	bne	1a788 <__assert_fail@plt+0x8fb0>
   1a718:	b	1a71c <__assert_fail@plt+0x8f44>
   1a71c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a720:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a724:	cmp	r0, r1
   1a728:	bcs	1a740 <__assert_fail@plt+0x8f68>
   1a72c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a730:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a734:	add	r0, r0, r1
   1a738:	movw	r1, #39	; 0x27
   1a73c:	strb	r1, [r0]
   1a740:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a744:	add	r0, r0, #1
   1a748:	str	r0, [fp, #-44]	; 0xffffffd4
   1a74c:	b	1a750 <__assert_fail@plt+0x8f78>
   1a750:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a754:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a758:	cmp	r0, r1
   1a75c:	bcs	1a774 <__assert_fail@plt+0x8f9c>
   1a760:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a764:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a768:	add	r0, r0, r1
   1a76c:	movw	r1, #39	; 0x27
   1a770:	strb	r1, [r0]
   1a774:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a778:	add	r0, r0, #1
   1a77c:	str	r0, [fp, #-44]	; 0xffffffd4
   1a780:	movw	r0, #0
   1a784:	strb	r0, [fp, #-60]	; 0xffffffc4
   1a788:	b	1a78c <__assert_fail@plt+0x8fb4>
   1a78c:	b	1a790 <__assert_fail@plt+0x8fb8>
   1a790:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a794:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a798:	cmp	r0, r1
   1a79c:	bcs	1a7b4 <__assert_fail@plt+0x8fdc>
   1a7a0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1a7a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a7a8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1a7ac:	add	r1, r1, r2
   1a7b0:	strb	r0, [r1]
   1a7b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a7b8:	add	r0, r0, #1
   1a7bc:	str	r0, [fp, #-44]	; 0xffffffd4
   1a7c0:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   1a7c4:	tst	r0, #1
   1a7c8:	bne	1a7d4 <__assert_fail@plt+0x8ffc>
   1a7cc:	movw	r0, #0
   1a7d0:	strb	r0, [fp, #-62]	; 0xffffffc2
   1a7d4:	b	1a7d8 <__assert_fail@plt+0x9000>
   1a7d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a7dc:	add	r0, r0, #1
   1a7e0:	str	r0, [fp, #-40]	; 0xffffffd8
   1a7e4:	b	1958c <__assert_fail@plt+0x7db4>
   1a7e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a7ec:	cmp	r0, #0
   1a7f0:	bne	1a810 <__assert_fail@plt+0x9038>
   1a7f4:	ldr	r0, [fp, #8]
   1a7f8:	cmp	r0, #2
   1a7fc:	bne	1a810 <__assert_fail@plt+0x9038>
   1a800:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a804:	tst	r0, #1
   1a808:	beq	1a810 <__assert_fail@plt+0x9038>
   1a80c:	b	1a968 <__assert_fail@plt+0x9190>
   1a810:	ldr	r0, [fp, #8]
   1a814:	cmp	r0, #2
   1a818:	bne	1a8b8 <__assert_fail@plt+0x90e0>
   1a81c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a820:	tst	r0, #1
   1a824:	bne	1a8b8 <__assert_fail@plt+0x90e0>
   1a828:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   1a82c:	tst	r0, #1
   1a830:	beq	1a8b8 <__assert_fail@plt+0x90e0>
   1a834:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   1a838:	tst	r0, #1
   1a83c:	beq	1a884 <__assert_fail@plt+0x90ac>
   1a840:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a844:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1a848:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1a84c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a850:	ldr	ip, [fp, #12]
   1a854:	ldr	lr, [fp, #16]
   1a858:	ldr	r4, [fp, #20]
   1a85c:	ldr	r5, [fp, #24]
   1a860:	movw	r6, #5
   1a864:	str	r6, [sp]
   1a868:	str	ip, [sp, #4]
   1a86c:	str	lr, [sp, #8]
   1a870:	str	r4, [sp, #12]
   1a874:	str	r5, [sp, #16]
   1a878:	bl	192a4 <__assert_fail@plt+0x7acc>
   1a87c:	str	r0, [fp, #-20]	; 0xffffffec
   1a880:	b	1a9d0 <__assert_fail@plt+0x91f8>
   1a884:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a888:	cmp	r0, #0
   1a88c:	bne	1a8b0 <__assert_fail@plt+0x90d8>
   1a890:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a894:	cmp	r0, #0
   1a898:	beq	1a8b0 <__assert_fail@plt+0x90d8>
   1a89c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a8a0:	str	r0, [fp, #-28]	; 0xffffffe4
   1a8a4:	movw	r0, #0
   1a8a8:	str	r0, [fp, #-44]	; 0xffffffd4
   1a8ac:	b	1934c <__assert_fail@plt+0x7b74>
   1a8b0:	b	1a8b4 <__assert_fail@plt+0x90dc>
   1a8b4:	b	1a8b8 <__assert_fail@plt+0x90e0>
   1a8b8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1a8bc:	movw	r1, #0
   1a8c0:	cmp	r0, r1
   1a8c4:	beq	1a938 <__assert_fail@plt+0x9160>
   1a8c8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a8cc:	tst	r0, #1
   1a8d0:	bne	1a938 <__assert_fail@plt+0x9160>
   1a8d4:	b	1a8d8 <__assert_fail@plt+0x9100>
   1a8d8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1a8dc:	ldrsb	r0, [r0]
   1a8e0:	cmp	r0, #0
   1a8e4:	beq	1a934 <__assert_fail@plt+0x915c>
   1a8e8:	b	1a8ec <__assert_fail@plt+0x9114>
   1a8ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a8f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a8f4:	cmp	r0, r1
   1a8f8:	bcs	1a914 <__assert_fail@plt+0x913c>
   1a8fc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1a900:	ldrb	r0, [r0]
   1a904:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a908:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1a90c:	add	r1, r1, r2
   1a910:	strb	r0, [r1]
   1a914:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a918:	add	r0, r0, #1
   1a91c:	str	r0, [fp, #-44]	; 0xffffffd4
   1a920:	b	1a924 <__assert_fail@plt+0x914c>
   1a924:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1a928:	add	r0, r0, #1
   1a92c:	str	r0, [fp, #-52]	; 0xffffffcc
   1a930:	b	1a8d8 <__assert_fail@plt+0x9100>
   1a934:	b	1a938 <__assert_fail@plt+0x9160>
   1a938:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a93c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a940:	cmp	r0, r1
   1a944:	bcs	1a95c <__assert_fail@plt+0x9184>
   1a948:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a94c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a950:	add	r0, r0, r1
   1a954:	movw	r1, #0
   1a958:	strb	r1, [r0]
   1a95c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a960:	str	r0, [fp, #-20]	; 0xffffffec
   1a964:	b	1a9d0 <__assert_fail@plt+0x91f8>
   1a968:	ldr	r0, [fp, #8]
   1a96c:	cmp	r0, #2
   1a970:	bne	1a988 <__assert_fail@plt+0x91b0>
   1a974:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1a978:	tst	r0, #1
   1a97c:	beq	1a988 <__assert_fail@plt+0x91b0>
   1a980:	movw	r0, #4
   1a984:	str	r0, [fp, #8]
   1a988:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a98c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a990:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1a994:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a998:	ldr	ip, [fp, #8]
   1a99c:	ldr	lr, [fp, #12]
   1a9a0:	mvn	r4, #2
   1a9a4:	and	lr, lr, r4
   1a9a8:	ldr	r4, [fp, #20]
   1a9ac:	ldr	r5, [fp, #24]
   1a9b0:	str	ip, [sp]
   1a9b4:	str	lr, [sp, #4]
   1a9b8:	movw	ip, #0
   1a9bc:	str	ip, [sp, #8]
   1a9c0:	str	r4, [sp, #12]
   1a9c4:	str	r5, [sp, #16]
   1a9c8:	bl	192a4 <__assert_fail@plt+0x7acc>
   1a9cc:	str	r0, [fp, #-20]	; 0xffffffec
   1a9d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a9d4:	sub	sp, fp, #16
   1a9d8:	pop	{r4, r5, r6, sl, fp, pc}
   1a9dc:	push	{fp, lr}
   1a9e0:	mov	fp, sp
   1a9e4:	sub	sp, sp, #16
   1a9e8:	str	r0, [fp, #-4]
   1a9ec:	str	r1, [sp, #8]
   1a9f0:	str	r2, [sp, #4]
   1a9f4:	ldr	r0, [fp, #-4]
   1a9f8:	ldr	r1, [sp, #8]
   1a9fc:	ldr	r3, [sp, #4]
   1aa00:	movw	r2, #0
   1aa04:	bl	1aa10 <__assert_fail@plt+0x9238>
   1aa08:	mov	sp, fp
   1aa0c:	pop	{fp, pc}
   1aa10:	push	{r4, r5, r6, sl, fp, lr}
   1aa14:	add	fp, sp, #16
   1aa18:	sub	sp, sp, #72	; 0x48
   1aa1c:	str	r0, [fp, #-20]	; 0xffffffec
   1aa20:	str	r1, [fp, #-24]	; 0xffffffe8
   1aa24:	str	r2, [fp, #-28]	; 0xffffffe4
   1aa28:	str	r3, [fp, #-32]	; 0xffffffe0
   1aa2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1aa30:	movw	r1, #0
   1aa34:	cmp	r0, r1
   1aa38:	beq	1aa48 <__assert_fail@plt+0x9270>
   1aa3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1aa40:	str	r0, [sp, #32]
   1aa44:	b	1aa58 <__assert_fail@plt+0x9280>
   1aa48:	movw	r0, #21172	; 0x52b4
   1aa4c:	movt	r0, #3
   1aa50:	str	r0, [sp, #32]
   1aa54:	b	1aa58 <__assert_fail@plt+0x9280>
   1aa58:	ldr	r0, [sp, #32]
   1aa5c:	str	r0, [fp, #-36]	; 0xffffffdc
   1aa60:	bl	11664 <__errno_location@plt>
   1aa64:	ldr	r0, [r0]
   1aa68:	str	r0, [fp, #-40]	; 0xffffffd8
   1aa6c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1aa70:	ldr	r0, [r0, #4]
   1aa74:	ldr	lr, [fp, #-28]	; 0xffffffe4
   1aa78:	movw	r1, #0
   1aa7c:	cmp	lr, r1
   1aa80:	movw	lr, #0
   1aa84:	movne	lr, #1
   1aa88:	tst	lr, #1
   1aa8c:	mov	lr, r1
   1aa90:	moveq	lr, #1
   1aa94:	orr	r0, r0, lr
   1aa98:	str	r0, [sp, #44]	; 0x2c
   1aa9c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1aaa0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1aaa4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1aaa8:	ldr	r0, [r0]
   1aaac:	ldr	lr, [sp, #44]	; 0x2c
   1aab0:	ldr	ip, [fp, #-36]	; 0xffffffdc
   1aab4:	add	ip, ip, #8
   1aab8:	ldr	r4, [fp, #-36]	; 0xffffffdc
   1aabc:	ldr	r4, [r4, #40]	; 0x28
   1aac0:	ldr	r5, [fp, #-36]	; 0xffffffdc
   1aac4:	ldr	r5, [r5, #44]	; 0x2c
   1aac8:	str	r0, [sp, #28]
   1aacc:	mov	r0, r1
   1aad0:	ldr	r6, [sp, #28]
   1aad4:	str	r6, [sp]
   1aad8:	str	lr, [sp, #4]
   1aadc:	str	ip, [sp, #8]
   1aae0:	str	r4, [sp, #12]
   1aae4:	str	r5, [sp, #16]
   1aae8:	bl	192a4 <__assert_fail@plt+0x7acc>
   1aaec:	add	r0, r0, #1
   1aaf0:	str	r0, [sp, #40]	; 0x28
   1aaf4:	ldr	r0, [sp, #40]	; 0x28
   1aaf8:	bl	1c1a4 <__assert_fail@plt+0xa9cc>
   1aafc:	str	r0, [sp, #36]	; 0x24
   1ab00:	ldr	r0, [sp, #36]	; 0x24
   1ab04:	ldr	r1, [sp, #40]	; 0x28
   1ab08:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ab0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ab10:	ldr	ip, [fp, #-36]	; 0xffffffdc
   1ab14:	ldr	ip, [ip]
   1ab18:	ldr	lr, [sp, #44]	; 0x2c
   1ab1c:	ldr	r4, [fp, #-36]	; 0xffffffdc
   1ab20:	add	r4, r4, #8
   1ab24:	ldr	r5, [fp, #-36]	; 0xffffffdc
   1ab28:	ldr	r5, [r5, #40]	; 0x28
   1ab2c:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1ab30:	ldr	r6, [r6, #44]	; 0x2c
   1ab34:	str	ip, [sp]
   1ab38:	str	lr, [sp, #4]
   1ab3c:	str	r4, [sp, #8]
   1ab40:	str	r5, [sp, #12]
   1ab44:	str	r6, [sp, #16]
   1ab48:	bl	192a4 <__assert_fail@plt+0x7acc>
   1ab4c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ab50:	str	r0, [sp, #24]
   1ab54:	str	r1, [sp, #20]
   1ab58:	bl	11664 <__errno_location@plt>
   1ab5c:	ldr	r1, [sp, #20]
   1ab60:	str	r1, [r0]
   1ab64:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ab68:	movw	r2, #0
   1ab6c:	cmp	r0, r2
   1ab70:	beq	1ab84 <__assert_fail@plt+0x93ac>
   1ab74:	ldr	r0, [sp, #40]	; 0x28
   1ab78:	sub	r0, r0, #1
   1ab7c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ab80:	str	r0, [r1]
   1ab84:	ldr	r0, [sp, #36]	; 0x24
   1ab88:	sub	sp, fp, #16
   1ab8c:	pop	{r4, r5, r6, sl, fp, pc}
   1ab90:	push	{fp, lr}
   1ab94:	mov	fp, sp
   1ab98:	sub	sp, sp, #8
   1ab9c:	movw	r0, #20852	; 0x5174
   1aba0:	movt	r0, #3
   1aba4:	ldr	r0, [r0]
   1aba8:	str	r0, [sp, #4]
   1abac:	movw	r0, #1
   1abb0:	str	r0, [sp]
   1abb4:	ldr	r0, [sp]
   1abb8:	movw	r1, #20856	; 0x5178
   1abbc:	movt	r1, #3
   1abc0:	ldr	r1, [r1]
   1abc4:	cmp	r0, r1
   1abc8:	bge	1abf0 <__assert_fail@plt+0x9418>
   1abcc:	ldr	r0, [sp, #4]
   1abd0:	ldr	r1, [sp]
   1abd4:	add	r0, r0, r1, lsl #3
   1abd8:	ldr	r0, [r0, #4]
   1abdc:	bl	1fc54 <__assert_fail@plt+0xe47c>
   1abe0:	ldr	r0, [sp]
   1abe4:	add	r0, r0, #1
   1abe8:	str	r0, [sp]
   1abec:	b	1abb4 <__assert_fail@plt+0x93dc>
   1abf0:	ldr	r0, [sp, #4]
   1abf4:	ldr	r0, [r0, #4]
   1abf8:	movw	r1, #21220	; 0x52e4
   1abfc:	movt	r1, #3
   1ac00:	cmp	r0, r1
   1ac04:	beq	1ac30 <__assert_fail@plt+0x9458>
   1ac08:	ldr	r0, [sp, #4]
   1ac0c:	ldr	r0, [r0, #4]
   1ac10:	bl	1fc54 <__assert_fail@plt+0xe47c>
   1ac14:	movw	r0, #256	; 0x100
   1ac18:	movw	lr, #20860	; 0x517c
   1ac1c:	movt	lr, #3
   1ac20:	str	r0, [lr]
   1ac24:	movw	r0, #21220	; 0x52e4
   1ac28:	movt	r0, #3
   1ac2c:	str	r0, [lr, #4]
   1ac30:	ldr	r0, [sp, #4]
   1ac34:	movw	r1, #20860	; 0x517c
   1ac38:	movt	r1, #3
   1ac3c:	cmp	r0, r1
   1ac40:	beq	1ac60 <__assert_fail@plt+0x9488>
   1ac44:	ldr	r0, [sp, #4]
   1ac48:	bl	1fc54 <__assert_fail@plt+0xe47c>
   1ac4c:	movw	r0, #20852	; 0x5174
   1ac50:	movt	r0, #3
   1ac54:	movw	lr, #20860	; 0x517c
   1ac58:	movt	lr, #3
   1ac5c:	str	lr, [r0]
   1ac60:	movw	r0, #20856	; 0x5178
   1ac64:	movt	r0, #3
   1ac68:	movw	r1, #1
   1ac6c:	str	r1, [r0]
   1ac70:	mov	sp, fp
   1ac74:	pop	{fp, pc}
   1ac78:	push	{fp, lr}
   1ac7c:	mov	fp, sp
   1ac80:	sub	sp, sp, #8
   1ac84:	str	r0, [sp, #4]
   1ac88:	str	r1, [sp]
   1ac8c:	ldr	r0, [sp, #4]
   1ac90:	ldr	r1, [sp]
   1ac94:	mvn	r2, #0
   1ac98:	movw	r3, #21172	; 0x52b4
   1ac9c:	movt	r3, #3
   1aca0:	bl	1acac <__assert_fail@plt+0x94d4>
   1aca4:	mov	sp, fp
   1aca8:	pop	{fp, pc}
   1acac:	push	{r4, r5, r6, sl, fp, lr}
   1acb0:	add	fp, sp, #16
   1acb4:	sub	sp, sp, #88	; 0x58
   1acb8:	str	r0, [fp, #-20]	; 0xffffffec
   1acbc:	str	r1, [fp, #-24]	; 0xffffffe8
   1acc0:	str	r2, [fp, #-28]	; 0xffffffe4
   1acc4:	str	r3, [fp, #-32]	; 0xffffffe0
   1acc8:	bl	11664 <__errno_location@plt>
   1accc:	ldr	r1, [pc, #676]	; 1af78 <__assert_fail@plt+0x97a0>
   1acd0:	ldr	r0, [r0]
   1acd4:	str	r0, [fp, #-36]	; 0xffffffdc
   1acd8:	movw	r0, #20852	; 0x5174
   1acdc:	movt	r0, #3
   1ace0:	ldr	r0, [r0]
   1ace4:	str	r0, [fp, #-40]	; 0xffffffd8
   1ace8:	str	r1, [fp, #-44]	; 0xffffffd4
   1acec:	ldr	r0, [fp, #-20]	; 0xffffffec
   1acf0:	movw	r1, #0
   1acf4:	cmp	r1, r0
   1acf8:	bgt	1ad0c <__assert_fail@plt+0x9534>
   1acfc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ad00:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ad04:	cmp	r0, r1
   1ad08:	blt	1ad10 <__assert_fail@plt+0x9538>
   1ad0c:	bl	117a8 <abort@plt>
   1ad10:	movw	r0, #20856	; 0x5178
   1ad14:	movt	r0, #3
   1ad18:	ldr	r0, [r0]
   1ad1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ad20:	cmp	r0, r1
   1ad24:	bgt	1ae1c <__assert_fail@plt+0x9644>
   1ad28:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ad2c:	movw	r1, #20860	; 0x517c
   1ad30:	movt	r1, #3
   1ad34:	cmp	r0, r1
   1ad38:	movw	r0, #0
   1ad3c:	moveq	r0, #1
   1ad40:	and	r0, r0, #1
   1ad44:	strb	r0, [fp, #-45]	; 0xffffffd3
   1ad48:	movw	r0, #20856	; 0x5178
   1ad4c:	movt	r0, #3
   1ad50:	ldr	r0, [r0]
   1ad54:	str	r0, [sp, #52]	; 0x34
   1ad58:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1ad5c:	tst	r0, #1
   1ad60:	beq	1ad70 <__assert_fail@plt+0x9598>
   1ad64:	movw	r0, #0
   1ad68:	str	r0, [sp, #32]
   1ad6c:	b	1ad78 <__assert_fail@plt+0x95a0>
   1ad70:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ad74:	str	r0, [sp, #32]
   1ad78:	ldr	r0, [sp, #32]
   1ad7c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ad80:	movw	r2, #20856	; 0x5178
   1ad84:	movt	r2, #3
   1ad88:	ldr	r2, [r2]
   1ad8c:	sub	r1, r1, r2
   1ad90:	add	r2, r1, #1
   1ad94:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ad98:	add	r1, sp, #52	; 0x34
   1ad9c:	movw	ip, #8
   1ada0:	str	ip, [sp]
   1ada4:	bl	1c3e0 <__assert_fail@plt+0xac08>
   1ada8:	str	r0, [fp, #-40]	; 0xffffffd8
   1adac:	movw	r1, #20852	; 0x5174
   1adb0:	movt	r1, #3
   1adb4:	str	r0, [r1]
   1adb8:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1adbc:	tst	r0, #1
   1adc0:	beq	1ade0 <__assert_fail@plt+0x9608>
   1adc4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1adc8:	movw	r1, #20860	; 0x517c
   1adcc:	movt	r1, #3
   1add0:	ldr	r2, [r1]
   1add4:	str	r2, [r0]
   1add8:	ldr	r1, [r1, #4]
   1addc:	str	r1, [r0, #4]
   1ade0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ade4:	movw	r1, #20856	; 0x5178
   1ade8:	movt	r1, #3
   1adec:	ldr	r1, [r1]
   1adf0:	add	r0, r0, r1, lsl #3
   1adf4:	ldr	r2, [sp, #52]	; 0x34
   1adf8:	sub	r1, r2, r1
   1adfc:	lsl	r2, r1, #3
   1ae00:	movw	r1, #0
   1ae04:	and	r1, r1, #255	; 0xff
   1ae08:	bl	11688 <memset@plt>
   1ae0c:	ldr	r0, [sp, #52]	; 0x34
   1ae10:	movw	r1, #20856	; 0x5178
   1ae14:	movt	r1, #3
   1ae18:	str	r0, [r1]
   1ae1c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ae20:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ae24:	ldr	r0, [r0, r1, lsl #3]
   1ae28:	str	r0, [sp, #48]	; 0x30
   1ae2c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ae30:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ae34:	add	r0, r0, r1, lsl #3
   1ae38:	ldr	r0, [r0, #4]
   1ae3c:	str	r0, [sp, #44]	; 0x2c
   1ae40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ae44:	ldr	r0, [r0, #4]
   1ae48:	orr	r0, r0, #1
   1ae4c:	str	r0, [sp, #40]	; 0x28
   1ae50:	ldr	r0, [sp, #44]	; 0x2c
   1ae54:	ldr	r1, [sp, #48]	; 0x30
   1ae58:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ae5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ae60:	ldr	ip, [fp, #-32]	; 0xffffffe0
   1ae64:	ldr	ip, [ip]
   1ae68:	ldr	lr, [sp, #40]	; 0x28
   1ae6c:	ldr	r4, [fp, #-32]	; 0xffffffe0
   1ae70:	add	r4, r4, #8
   1ae74:	ldr	r5, [fp, #-32]	; 0xffffffe0
   1ae78:	ldr	r5, [r5, #40]	; 0x28
   1ae7c:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1ae80:	ldr	r6, [r6, #44]	; 0x2c
   1ae84:	str	ip, [sp]
   1ae88:	str	lr, [sp, #4]
   1ae8c:	str	r4, [sp, #8]
   1ae90:	str	r5, [sp, #12]
   1ae94:	str	r6, [sp, #16]
   1ae98:	bl	192a4 <__assert_fail@plt+0x7acc>
   1ae9c:	str	r0, [sp, #36]	; 0x24
   1aea0:	ldr	r0, [sp, #48]	; 0x30
   1aea4:	ldr	r1, [sp, #36]	; 0x24
   1aea8:	cmp	r0, r1
   1aeac:	bhi	1af58 <__assert_fail@plt+0x9780>
   1aeb0:	ldr	r0, [sp, #36]	; 0x24
   1aeb4:	add	r0, r0, #1
   1aeb8:	str	r0, [sp, #48]	; 0x30
   1aebc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1aec0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1aec4:	add	r1, r1, r2, lsl #3
   1aec8:	str	r0, [r1]
   1aecc:	ldr	r0, [sp, #44]	; 0x2c
   1aed0:	movw	r1, #21220	; 0x52e4
   1aed4:	movt	r1, #3
   1aed8:	cmp	r0, r1
   1aedc:	beq	1aee8 <__assert_fail@plt+0x9710>
   1aee0:	ldr	r0, [sp, #44]	; 0x2c
   1aee4:	bl	1fc54 <__assert_fail@plt+0xe47c>
   1aee8:	ldr	r0, [sp, #48]	; 0x30
   1aeec:	bl	1c1a4 <__assert_fail@plt+0xa9cc>
   1aef0:	mov	lr, r0
   1aef4:	str	r0, [sp, #44]	; 0x2c
   1aef8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1aefc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1af00:	add	r0, r0, r1, lsl #3
   1af04:	str	lr, [r0, #4]
   1af08:	ldr	r0, [sp, #44]	; 0x2c
   1af0c:	ldr	r1, [sp, #48]	; 0x30
   1af10:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1af14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1af18:	ldr	lr, [fp, #-32]	; 0xffffffe0
   1af1c:	ldr	lr, [lr]
   1af20:	ldr	ip, [sp, #40]	; 0x28
   1af24:	ldr	r4, [fp, #-32]	; 0xffffffe0
   1af28:	add	r4, r4, #8
   1af2c:	ldr	r5, [fp, #-32]	; 0xffffffe0
   1af30:	ldr	r5, [r5, #40]	; 0x28
   1af34:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1af38:	ldr	r6, [r6, #44]	; 0x2c
   1af3c:	str	lr, [sp]
   1af40:	str	ip, [sp, #4]
   1af44:	str	r4, [sp, #8]
   1af48:	str	r5, [sp, #12]
   1af4c:	str	r6, [sp, #16]
   1af50:	bl	192a4 <__assert_fail@plt+0x7acc>
   1af54:	str	r0, [sp, #28]
   1af58:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1af5c:	str	r0, [sp, #24]
   1af60:	bl	11664 <__errno_location@plt>
   1af64:	ldr	lr, [sp, #24]
   1af68:	str	lr, [r0]
   1af6c:	ldr	r0, [sp, #44]	; 0x2c
   1af70:	sub	sp, fp, #16
   1af74:	pop	{r4, r5, r6, sl, fp, pc}
   1af78:	svcvc	0x00ffffff
   1af7c:	push	{fp, lr}
   1af80:	mov	fp, sp
   1af84:	sub	sp, sp, #16
   1af88:	str	r0, [fp, #-4]
   1af8c:	str	r1, [sp, #8]
   1af90:	str	r2, [sp, #4]
   1af94:	ldr	r0, [fp, #-4]
   1af98:	ldr	r1, [sp, #8]
   1af9c:	ldr	r2, [sp, #4]
   1afa0:	movw	r3, #21172	; 0x52b4
   1afa4:	movt	r3, #3
   1afa8:	bl	1acac <__assert_fail@plt+0x94d4>
   1afac:	mov	sp, fp
   1afb0:	pop	{fp, pc}
   1afb4:	push	{fp, lr}
   1afb8:	mov	fp, sp
   1afbc:	sub	sp, sp, #8
   1afc0:	str	r0, [sp, #4]
   1afc4:	ldr	r1, [sp, #4]
   1afc8:	movw	r0, #0
   1afcc:	bl	1ac78 <__assert_fail@plt+0x94a0>
   1afd0:	mov	sp, fp
   1afd4:	pop	{fp, pc}
   1afd8:	push	{fp, lr}
   1afdc:	mov	fp, sp
   1afe0:	sub	sp, sp, #8
   1afe4:	str	r0, [sp, #4]
   1afe8:	str	r1, [sp]
   1afec:	ldr	r1, [sp, #4]
   1aff0:	ldr	r2, [sp]
   1aff4:	movw	r0, #0
   1aff8:	bl	1af7c <__assert_fail@plt+0x97a4>
   1affc:	mov	sp, fp
   1b000:	pop	{fp, pc}
   1b004:	push	{fp, lr}
   1b008:	mov	fp, sp
   1b00c:	sub	sp, sp, #64	; 0x40
   1b010:	str	r0, [fp, #-4]
   1b014:	str	r1, [fp, #-8]
   1b018:	str	r2, [fp, #-12]
   1b01c:	ldr	r1, [fp, #-8]
   1b020:	add	r0, sp, #4
   1b024:	bl	1b044 <__assert_fail@plt+0x986c>
   1b028:	ldr	r0, [fp, #-4]
   1b02c:	ldr	r1, [fp, #-12]
   1b030:	mvn	r2, #0
   1b034:	add	r3, sp, #4
   1b038:	bl	1acac <__assert_fail@plt+0x94d4>
   1b03c:	mov	sp, fp
   1b040:	pop	{fp, pc}
   1b044:	push	{fp, lr}
   1b048:	mov	fp, sp
   1b04c:	sub	sp, sp, #8
   1b050:	str	r1, [sp, #4]
   1b054:	mov	r1, r0
   1b058:	str	r0, [sp]
   1b05c:	mov	r0, r1
   1b060:	movw	r1, #0
   1b064:	and	r1, r1, #255	; 0xff
   1b068:	movw	r2, #48	; 0x30
   1b06c:	bl	11688 <memset@plt>
   1b070:	ldr	r0, [sp, #4]
   1b074:	cmp	r0, #10
   1b078:	bne	1b080 <__assert_fail@plt+0x98a8>
   1b07c:	bl	117a8 <abort@plt>
   1b080:	ldr	r0, [sp, #4]
   1b084:	ldr	r1, [sp]
   1b088:	str	r0, [r1]
   1b08c:	mov	sp, fp
   1b090:	pop	{fp, pc}
   1b094:	push	{fp, lr}
   1b098:	mov	fp, sp
   1b09c:	sub	sp, sp, #64	; 0x40
   1b0a0:	str	r0, [fp, #-4]
   1b0a4:	str	r1, [fp, #-8]
   1b0a8:	str	r2, [fp, #-12]
   1b0ac:	str	r3, [fp, #-16]
   1b0b0:	ldr	r1, [fp, #-8]
   1b0b4:	mov	r0, sp
   1b0b8:	bl	1b044 <__assert_fail@plt+0x986c>
   1b0bc:	ldr	r0, [fp, #-4]
   1b0c0:	ldr	r1, [fp, #-12]
   1b0c4:	ldr	r2, [fp, #-16]
   1b0c8:	mov	r3, sp
   1b0cc:	bl	1acac <__assert_fail@plt+0x94d4>
   1b0d0:	mov	sp, fp
   1b0d4:	pop	{fp, pc}
   1b0d8:	push	{fp, lr}
   1b0dc:	mov	fp, sp
   1b0e0:	sub	sp, sp, #8
   1b0e4:	str	r0, [sp, #4]
   1b0e8:	str	r1, [sp]
   1b0ec:	ldr	r1, [sp, #4]
   1b0f0:	ldr	r2, [sp]
   1b0f4:	movw	r0, #0
   1b0f8:	bl	1b004 <__assert_fail@plt+0x982c>
   1b0fc:	mov	sp, fp
   1b100:	pop	{fp, pc}
   1b104:	push	{fp, lr}
   1b108:	mov	fp, sp
   1b10c:	sub	sp, sp, #16
   1b110:	str	r0, [fp, #-4]
   1b114:	str	r1, [sp, #8]
   1b118:	str	r2, [sp, #4]
   1b11c:	ldr	r1, [fp, #-4]
   1b120:	ldr	r2, [sp, #8]
   1b124:	ldr	r3, [sp, #4]
   1b128:	movw	r0, #0
   1b12c:	bl	1b094 <__assert_fail@plt+0x98bc>
   1b130:	mov	sp, fp
   1b134:	pop	{fp, pc}
   1b138:	push	{fp, lr}
   1b13c:	mov	fp, sp
   1b140:	sub	sp, sp, #72	; 0x48
   1b144:	movw	r3, #21172	; 0x52b4
   1b148:	movt	r3, #3
   1b14c:	str	r0, [fp, #-4]
   1b150:	str	r1, [fp, #-8]
   1b154:	strb	r2, [fp, #-9]
   1b158:	add	r0, sp, #12
   1b15c:	mov	r1, r0
   1b160:	str	r0, [sp, #8]
   1b164:	mov	r0, r1
   1b168:	mov	r1, r3
   1b16c:	movw	r2, #48	; 0x30
   1b170:	bl	1149c <memcpy@plt>
   1b174:	ldr	r0, [sp, #8]
   1b178:	ldrb	r1, [fp, #-9]
   1b17c:	movw	r2, #1
   1b180:	bl	19048 <__assert_fail@plt+0x7870>
   1b184:	ldr	r1, [fp, #-4]
   1b188:	ldr	r2, [fp, #-8]
   1b18c:	movw	r3, #0
   1b190:	str	r0, [sp, #4]
   1b194:	mov	r0, r3
   1b198:	add	r3, sp, #12
   1b19c:	bl	1acac <__assert_fail@plt+0x94d4>
   1b1a0:	mov	sp, fp
   1b1a4:	pop	{fp, pc}
   1b1a8:	push	{fp, lr}
   1b1ac:	mov	fp, sp
   1b1b0:	sub	sp, sp, #8
   1b1b4:	str	r0, [sp, #4]
   1b1b8:	strb	r1, [sp, #3]
   1b1bc:	ldr	r0, [sp, #4]
   1b1c0:	mvn	r1, #0
   1b1c4:	ldrb	r2, [sp, #3]
   1b1c8:	bl	1b138 <__assert_fail@plt+0x9960>
   1b1cc:	mov	sp, fp
   1b1d0:	pop	{fp, pc}
   1b1d4:	push	{fp, lr}
   1b1d8:	mov	fp, sp
   1b1dc:	sub	sp, sp, #8
   1b1e0:	str	r0, [sp, #4]
   1b1e4:	ldr	r0, [sp, #4]
   1b1e8:	movw	r1, #58	; 0x3a
   1b1ec:	and	r1, r1, #255	; 0xff
   1b1f0:	bl	1b1a8 <__assert_fail@plt+0x99d0>
   1b1f4:	mov	sp, fp
   1b1f8:	pop	{fp, pc}
   1b1fc:	push	{fp, lr}
   1b200:	mov	fp, sp
   1b204:	sub	sp, sp, #8
   1b208:	str	r0, [sp, #4]
   1b20c:	str	r1, [sp]
   1b210:	ldr	r0, [sp, #4]
   1b214:	ldr	r1, [sp]
   1b218:	movw	r2, #58	; 0x3a
   1b21c:	and	r2, r2, #255	; 0xff
   1b220:	bl	1b138 <__assert_fail@plt+0x9960>
   1b224:	mov	sp, fp
   1b228:	pop	{fp, pc}
   1b22c:	push	{fp, lr}
   1b230:	mov	fp, sp
   1b234:	sub	sp, sp, #120	; 0x78
   1b238:	str	r0, [fp, #-4]
   1b23c:	str	r1, [fp, #-8]
   1b240:	str	r2, [fp, #-12]
   1b244:	ldr	r1, [fp, #-8]
   1b248:	add	r0, sp, #12
   1b24c:	bl	1b044 <__assert_fail@plt+0x986c>
   1b250:	add	r0, sp, #60	; 0x3c
   1b254:	mov	r1, r0
   1b258:	add	r2, sp, #12
   1b25c:	str	r0, [sp, #8]
   1b260:	mov	r0, r1
   1b264:	mov	r1, r2
   1b268:	movw	r2, #48	; 0x30
   1b26c:	bl	1149c <memcpy@plt>
   1b270:	ldr	r0, [sp, #8]
   1b274:	movw	r1, #58	; 0x3a
   1b278:	and	r1, r1, #255	; 0xff
   1b27c:	movw	r2, #1
   1b280:	bl	19048 <__assert_fail@plt+0x7870>
   1b284:	ldr	r1, [fp, #-4]
   1b288:	ldr	r2, [fp, #-12]
   1b28c:	str	r0, [sp, #4]
   1b290:	mov	r0, r1
   1b294:	mov	r1, r2
   1b298:	mvn	r2, #0
   1b29c:	add	r3, sp, #60	; 0x3c
   1b2a0:	bl	1acac <__assert_fail@plt+0x94d4>
   1b2a4:	mov	sp, fp
   1b2a8:	pop	{fp, pc}
   1b2ac:	push	{fp, lr}
   1b2b0:	mov	fp, sp
   1b2b4:	sub	sp, sp, #24
   1b2b8:	str	r0, [fp, #-4]
   1b2bc:	str	r1, [fp, #-8]
   1b2c0:	str	r2, [sp, #12]
   1b2c4:	str	r3, [sp, #8]
   1b2c8:	ldr	r0, [fp, #-4]
   1b2cc:	ldr	r1, [fp, #-8]
   1b2d0:	ldr	r2, [sp, #12]
   1b2d4:	ldr	r3, [sp, #8]
   1b2d8:	mvn	ip, #0
   1b2dc:	str	ip, [sp]
   1b2e0:	bl	1b2ec <__assert_fail@plt+0x9b14>
   1b2e4:	mov	sp, fp
   1b2e8:	pop	{fp, pc}
   1b2ec:	push	{fp, lr}
   1b2f0:	mov	fp, sp
   1b2f4:	sub	sp, sp, #72	; 0x48
   1b2f8:	ldr	ip, [fp, #8]
   1b2fc:	movw	lr, #21172	; 0x52b4
   1b300:	movt	lr, #3
   1b304:	str	r0, [fp, #-4]
   1b308:	str	r1, [fp, #-8]
   1b30c:	str	r2, [fp, #-12]
   1b310:	str	r3, [fp, #-16]
   1b314:	add	r0, sp, #8
   1b318:	mov	r1, r0
   1b31c:	str	r0, [sp, #4]
   1b320:	mov	r0, r1
   1b324:	mov	r1, lr
   1b328:	movw	r2, #48	; 0x30
   1b32c:	str	ip, [sp]
   1b330:	bl	1149c <memcpy@plt>
   1b334:	ldr	r1, [fp, #-8]
   1b338:	ldr	r2, [fp, #-12]
   1b33c:	ldr	r0, [sp, #4]
   1b340:	bl	19148 <__assert_fail@plt+0x7970>
   1b344:	ldr	r0, [fp, #-4]
   1b348:	ldr	r1, [fp, #-16]
   1b34c:	ldr	r2, [fp, #8]
   1b350:	add	r3, sp, #8
   1b354:	bl	1acac <__assert_fail@plt+0x94d4>
   1b358:	mov	sp, fp
   1b35c:	pop	{fp, pc}
   1b360:	push	{fp, lr}
   1b364:	mov	fp, sp
   1b368:	sub	sp, sp, #16
   1b36c:	str	r0, [fp, #-4]
   1b370:	str	r1, [sp, #8]
   1b374:	str	r2, [sp, #4]
   1b378:	ldr	r1, [fp, #-4]
   1b37c:	ldr	r2, [sp, #8]
   1b380:	ldr	r3, [sp, #4]
   1b384:	movw	r0, #0
   1b388:	bl	1b2ac <__assert_fail@plt+0x9ad4>
   1b38c:	mov	sp, fp
   1b390:	pop	{fp, pc}
   1b394:	push	{fp, lr}
   1b398:	mov	fp, sp
   1b39c:	sub	sp, sp, #24
   1b3a0:	str	r0, [fp, #-4]
   1b3a4:	str	r1, [fp, #-8]
   1b3a8:	str	r2, [sp, #12]
   1b3ac:	str	r3, [sp, #8]
   1b3b0:	ldr	r1, [fp, #-4]
   1b3b4:	ldr	r2, [fp, #-8]
   1b3b8:	ldr	r3, [sp, #12]
   1b3bc:	ldr	r0, [sp, #8]
   1b3c0:	movw	ip, #0
   1b3c4:	str	r0, [sp, #4]
   1b3c8:	mov	r0, ip
   1b3cc:	ldr	ip, [sp, #4]
   1b3d0:	str	ip, [sp]
   1b3d4:	bl	1b2ec <__assert_fail@plt+0x9b14>
   1b3d8:	mov	sp, fp
   1b3dc:	pop	{fp, pc}
   1b3e0:	push	{fp, lr}
   1b3e4:	mov	fp, sp
   1b3e8:	sub	sp, sp, #16
   1b3ec:	str	r0, [fp, #-4]
   1b3f0:	str	r1, [sp, #8]
   1b3f4:	str	r2, [sp, #4]
   1b3f8:	ldr	r0, [fp, #-4]
   1b3fc:	ldr	r1, [sp, #8]
   1b400:	ldr	r2, [sp, #4]
   1b404:	movw	r3, #20868	; 0x5184
   1b408:	movt	r3, #3
   1b40c:	bl	1acac <__assert_fail@plt+0x94d4>
   1b410:	mov	sp, fp
   1b414:	pop	{fp, pc}
   1b418:	push	{fp, lr}
   1b41c:	mov	fp, sp
   1b420:	sub	sp, sp, #8
   1b424:	str	r0, [sp, #4]
   1b428:	str	r1, [sp]
   1b42c:	ldr	r1, [sp, #4]
   1b430:	ldr	r2, [sp]
   1b434:	movw	r0, #0
   1b438:	bl	1b3e0 <__assert_fail@plt+0x9c08>
   1b43c:	mov	sp, fp
   1b440:	pop	{fp, pc}
   1b444:	push	{fp, lr}
   1b448:	mov	fp, sp
   1b44c:	sub	sp, sp, #8
   1b450:	str	r0, [sp, #4]
   1b454:	str	r1, [sp]
   1b458:	ldr	r0, [sp, #4]
   1b45c:	ldr	r1, [sp]
   1b460:	mvn	r2, #0
   1b464:	bl	1b3e0 <__assert_fail@plt+0x9c08>
   1b468:	mov	sp, fp
   1b46c:	pop	{fp, pc}
   1b470:	push	{fp, lr}
   1b474:	mov	fp, sp
   1b478:	sub	sp, sp, #8
   1b47c:	str	r0, [sp, #4]
   1b480:	ldr	r1, [sp, #4]
   1b484:	movw	r0, #0
   1b488:	bl	1b444 <__assert_fail@plt+0x9c6c>
   1b48c:	mov	sp, fp
   1b490:	pop	{fp, pc}
   1b494:	push	{fp, lr}
   1b498:	mov	fp, sp
   1b49c:	sub	sp, sp, #24
   1b4a0:	str	r0, [fp, #-8]
   1b4a4:	str	r1, [sp, #12]
   1b4a8:	ldr	r0, [fp, #-8]
   1b4ac:	bl	1161c <gettext@plt>
   1b4b0:	str	r0, [sp, #8]
   1b4b4:	ldr	r0, [sp, #8]
   1b4b8:	ldr	r1, [fp, #-8]
   1b4bc:	cmp	r0, r1
   1b4c0:	beq	1b4d0 <__assert_fail@plt+0x9cf8>
   1b4c4:	ldr	r0, [sp, #8]
   1b4c8:	str	r0, [fp, #-4]
   1b4cc:	b	1b59c <__assert_fail@plt+0x9dc4>
   1b4d0:	bl	216ec <__assert_fail@plt+0xff14>
   1b4d4:	str	r0, [sp, #4]
   1b4d8:	ldr	r0, [sp, #4]
   1b4dc:	movw	r1, #18029	; 0x466d
   1b4e0:	movt	r1, #2
   1b4e4:	bl	212f4 <__assert_fail@plt+0xfb1c>
   1b4e8:	cmp	r0, #0
   1b4ec:	bne	1b524 <__assert_fail@plt+0x9d4c>
   1b4f0:	ldr	r0, [fp, #-8]
   1b4f4:	ldrb	r0, [r0]
   1b4f8:	cmp	r0, #96	; 0x60
   1b4fc:	movw	r0, #0
   1b500:	moveq	r0, #1
   1b504:	tst	r0, #1
   1b508:	movw	r0, #18039	; 0x4677
   1b50c:	movt	r0, #2
   1b510:	movw	r1, #18035	; 0x4673
   1b514:	movt	r1, #2
   1b518:	movne	r0, r1
   1b51c:	str	r0, [fp, #-4]
   1b520:	b	1b59c <__assert_fail@plt+0x9dc4>
   1b524:	ldr	r0, [sp, #4]
   1b528:	movw	r1, #18043	; 0x467b
   1b52c:	movt	r1, #2
   1b530:	bl	212f4 <__assert_fail@plt+0xfb1c>
   1b534:	cmp	r0, #0
   1b538:	bne	1b570 <__assert_fail@plt+0x9d98>
   1b53c:	ldr	r0, [fp, #-8]
   1b540:	ldrb	r0, [r0]
   1b544:	cmp	r0, #96	; 0x60
   1b548:	movw	r0, #0
   1b54c:	moveq	r0, #1
   1b550:	tst	r0, #1
   1b554:	movw	r0, #18055	; 0x4687
   1b558:	movt	r0, #2
   1b55c:	movw	r1, #18051	; 0x4683
   1b560:	movt	r1, #2
   1b564:	movne	r0, r1
   1b568:	str	r0, [fp, #-4]
   1b56c:	b	1b59c <__assert_fail@plt+0x9dc4>
   1b570:	ldr	r0, [sp, #12]
   1b574:	cmp	r0, #9
   1b578:	movw	r0, #0
   1b57c:	moveq	r0, #1
   1b580:	tst	r0, #1
   1b584:	movw	r0, #17861	; 0x45c5
   1b588:	movt	r0, #2
   1b58c:	movw	r1, #18025	; 0x4669
   1b590:	movt	r1, #2
   1b594:	movne	r0, r1
   1b598:	str	r0, [fp, #-4]
   1b59c:	ldr	r0, [fp, #-4]
   1b5a0:	mov	sp, fp
   1b5a4:	pop	{fp, pc}
   1b5a8:	push	{fp, lr}
   1b5ac:	mov	fp, sp
   1b5b0:	sub	sp, sp, #24
   1b5b4:	str	r0, [fp, #-8]
   1b5b8:	str	r1, [sp, #12]
   1b5bc:	str	r2, [sp, #8]
   1b5c0:	ldr	r0, [fp, #-8]
   1b5c4:	ldr	r1, [sp, #12]
   1b5c8:	ldr	r2, [sp, #8]
   1b5cc:	bl	11454 <read@plt>
   1b5d0:	str	r0, [sp, #4]
   1b5d4:	ldr	r0, [sp, #4]
   1b5d8:	movw	r1, #0
   1b5dc:	cmp	r1, r0
   1b5e0:	bgt	1b5f0 <__assert_fail@plt+0x9e18>
   1b5e4:	ldr	r0, [sp, #4]
   1b5e8:	str	r0, [fp, #-4]
   1b5ec:	b	1b648 <__assert_fail@plt+0x9e70>
   1b5f0:	bl	11664 <__errno_location@plt>
   1b5f4:	ldr	r0, [r0]
   1b5f8:	cmp	r0, #4
   1b5fc:	bne	1b604 <__assert_fail@plt+0x9e2c>
   1b600:	b	1b5c0 <__assert_fail@plt+0x9de8>
   1b604:	bl	11664 <__errno_location@plt>
   1b608:	ldr	r0, [r0]
   1b60c:	cmp	r0, #22
   1b610:	bne	1b630 <__assert_fail@plt+0x9e58>
   1b614:	ldr	r0, [pc, #56]	; 1b654 <__assert_fail@plt+0x9e7c>
   1b618:	ldr	r1, [sp, #8]
   1b61c:	cmp	r0, r1
   1b620:	bcs	1b630 <__assert_fail@plt+0x9e58>
   1b624:	ldr	r0, [pc, #40]	; 1b654 <__assert_fail@plt+0x9e7c>
   1b628:	str	r0, [sp, #8]
   1b62c:	b	1b63c <__assert_fail@plt+0x9e64>
   1b630:	ldr	r0, [sp, #4]
   1b634:	str	r0, [fp, #-4]
   1b638:	b	1b648 <__assert_fail@plt+0x9e70>
   1b63c:	b	1b640 <__assert_fail@plt+0x9e68>
   1b640:	b	1b644 <__assert_fail@plt+0x9e6c>
   1b644:	b	1b5c0 <__assert_fail@plt+0x9de8>
   1b648:	ldr	r0, [fp, #-4]
   1b64c:	mov	sp, fp
   1b650:	pop	{fp, pc}
   1b654:	svcvc	0x00f00000	; IMB
   1b658:	push	{fp, lr}
   1b65c:	mov	fp, sp
   1b660:	sub	sp, sp, #16
   1b664:	str	r0, [sp, #8]
   1b668:	str	r1, [sp, #4]
   1b66c:	ldr	r0, [sp, #8]
   1b670:	ldr	r2, [sp, #4]
   1b674:	mov	r1, #0
   1b678:	bl	116b8 <memchr@plt>
   1b67c:	str	r0, [sp]
   1b680:	ldr	r0, [sp]
   1b684:	movw	r1, #0
   1b688:	cmp	r0, r1
   1b68c:	beq	1b6a8 <__assert_fail@plt+0x9ed0>
   1b690:	ldr	r0, [sp]
   1b694:	ldr	r1, [sp, #8]
   1b698:	sub	r0, r0, r1
   1b69c:	add	r0, r0, #1
   1b6a0:	str	r0, [fp, #-4]
   1b6a4:	b	1b6b0 <__assert_fail@plt+0x9ed8>
   1b6a8:	ldr	r0, [sp, #4]
   1b6ac:	str	r0, [fp, #-4]
   1b6b0:	ldr	r0, [fp, #-4]
   1b6b4:	mov	sp, fp
   1b6b8:	pop	{fp, pc}
   1b6bc:	push	{fp, lr}
   1b6c0:	mov	fp, sp
   1b6c4:	sub	sp, sp, #24
   1b6c8:	str	r0, [fp, #-4]
   1b6cc:	ldr	r0, [fp, #-4]
   1b6d0:	movw	r1, #0
   1b6d4:	cmp	r1, r0
   1b6d8:	bgt	1b728 <__assert_fail@plt+0x9f50>
   1b6dc:	ldr	r0, [fp, #-4]
   1b6e0:	cmp	r0, #2
   1b6e4:	bgt	1b728 <__assert_fail@plt+0x9f50>
   1b6e8:	ldr	r0, [fp, #-4]
   1b6ec:	bl	21c88 <__assert_fail@plt+0x104b0>
   1b6f0:	str	r0, [fp, #-8]
   1b6f4:	bl	11664 <__errno_location@plt>
   1b6f8:	ldr	r0, [r0]
   1b6fc:	str	r0, [sp, #12]
   1b700:	ldr	r0, [fp, #-4]
   1b704:	bl	117c0 <close@plt>
   1b708:	ldr	lr, [sp, #12]
   1b70c:	str	r0, [sp, #8]
   1b710:	str	lr, [sp, #4]
   1b714:	bl	11664 <__errno_location@plt>
   1b718:	ldr	lr, [sp, #4]
   1b71c:	str	lr, [r0]
   1b720:	ldr	r0, [fp, #-8]
   1b724:	str	r0, [fp, #-4]
   1b728:	ldr	r0, [fp, #-4]
   1b72c:	mov	sp, fp
   1b730:	pop	{fp, pc}
   1b734:	push	{fp, lr}
   1b738:	mov	fp, sp
   1b73c:	sub	sp, sp, #24
   1b740:	str	r0, [fp, #-8]
   1b744:	ldr	r0, [fp, #-8]
   1b748:	bl	116dc <pipe@plt>
   1b74c:	cmp	r0, #0
   1b750:	bne	1b804 <__assert_fail@plt+0xa02c>
   1b754:	movw	r0, #0
   1b758:	str	r0, [sp, #12]
   1b75c:	ldr	r0, [sp, #12]
   1b760:	cmp	r0, #2
   1b764:	bge	1b7f8 <__assert_fail@plt+0xa020>
   1b768:	ldr	r0, [fp, #-8]
   1b76c:	ldr	r1, [sp, #12]
   1b770:	ldr	r0, [r0, r1, lsl #2]
   1b774:	bl	1b6bc <__assert_fail@plt+0x9ee4>
   1b778:	ldr	r1, [fp, #-8]
   1b77c:	ldr	lr, [sp, #12]
   1b780:	str	r0, [r1, lr, lsl #2]
   1b784:	ldr	r0, [fp, #-8]
   1b788:	ldr	r1, [sp, #12]
   1b78c:	add	r0, r0, r1, lsl #2
   1b790:	ldr	r0, [r0]
   1b794:	cmp	r0, #0
   1b798:	bge	1b7e4 <__assert_fail@plt+0xa00c>
   1b79c:	bl	11664 <__errno_location@plt>
   1b7a0:	ldr	r0, [r0]
   1b7a4:	str	r0, [sp, #8]
   1b7a8:	ldr	r0, [fp, #-8]
   1b7ac:	ldr	lr, [sp, #12]
   1b7b0:	rsb	lr, lr, #1
   1b7b4:	add	r0, r0, lr, lsl #2
   1b7b8:	ldr	r0, [r0]
   1b7bc:	bl	117c0 <close@plt>
   1b7c0:	ldr	lr, [sp, #8]
   1b7c4:	str	r0, [sp, #4]
   1b7c8:	str	lr, [sp]
   1b7cc:	bl	11664 <__errno_location@plt>
   1b7d0:	ldr	lr, [sp]
   1b7d4:	str	lr, [r0]
   1b7d8:	mvn	r0, #0
   1b7dc:	str	r0, [fp, #-4]
   1b7e0:	b	1b80c <__assert_fail@plt+0xa034>
   1b7e4:	b	1b7e8 <__assert_fail@plt+0xa010>
   1b7e8:	ldr	r0, [sp, #12]
   1b7ec:	add	r0, r0, #1
   1b7f0:	str	r0, [sp, #12]
   1b7f4:	b	1b75c <__assert_fail@plt+0x9f84>
   1b7f8:	movw	r0, #0
   1b7fc:	str	r0, [fp, #-4]
   1b800:	b	1b80c <__assert_fail@plt+0xa034>
   1b804:	mvn	r0, #0
   1b808:	str	r0, [fp, #-4]
   1b80c:	ldr	r0, [fp, #-4]
   1b810:	mov	sp, fp
   1b814:	pop	{fp, pc}
   1b818:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b81c:	add	fp, sp, #28
   1b820:	sub	sp, sp, #260	; 0x104
   1b824:	ldr	ip, [fp, #12]
   1b828:	ldr	lr, [fp, #8]
   1b82c:	str	r0, [fp, #-32]	; 0xffffffe0
   1b830:	str	r1, [fp, #-36]	; 0xffffffdc
   1b834:	str	r2, [fp, #-40]	; 0xffffffd8
   1b838:	str	r3, [fp, #-44]	; 0xffffffd4
   1b83c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b840:	movw	r1, #0
   1b844:	cmp	r0, r1
   1b848:	str	lr, [fp, #-48]	; 0xffffffd0
   1b84c:	str	ip, [fp, #-52]	; 0xffffffcc
   1b850:	beq	1b888 <__assert_fail@plt+0xa0b0>
   1b854:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b858:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b85c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b860:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b864:	movw	ip, #18144	; 0x46e0
   1b868:	movt	ip, #2
   1b86c:	str	r1, [fp, #-56]	; 0xffffffc8
   1b870:	mov	r1, ip
   1b874:	ldr	ip, [fp, #-56]	; 0xffffffc8
   1b878:	str	ip, [sp]
   1b87c:	bl	11658 <fprintf@plt>
   1b880:	str	r0, [fp, #-60]	; 0xffffffc4
   1b884:	b	1b8a4 <__assert_fail@plt+0xa0cc>
   1b888:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b88c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b890:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b894:	movw	r1, #18156	; 0x46ec
   1b898:	movt	r1, #2
   1b89c:	bl	11658 <fprintf@plt>
   1b8a0:	str	r0, [fp, #-64]	; 0xffffffc0
   1b8a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b8a8:	movw	r1, #18163	; 0x46f3
   1b8ac:	movt	r1, #2
   1b8b0:	str	r0, [fp, #-68]	; 0xffffffbc
   1b8b4:	mov	r0, r1
   1b8b8:	bl	1161c <gettext@plt>
   1b8bc:	movw	r1, #18859	; 0x49ab
   1b8c0:	movt	r1, #2
   1b8c4:	movw	r3, #2022	; 0x7e6
   1b8c8:	ldr	lr, [fp, #-68]	; 0xffffffbc
   1b8cc:	str	r0, [fp, #-72]	; 0xffffffb8
   1b8d0:	mov	r0, lr
   1b8d4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1b8d8:	bl	11658 <fprintf@plt>
   1b8dc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1b8e0:	movw	r2, #13037	; 0x32ed
   1b8e4:	movt	r2, #2
   1b8e8:	str	r0, [fp, #-76]	; 0xffffffb4
   1b8ec:	mov	r0, r2
   1b8f0:	str	r2, [fp, #-80]	; 0xffffffb0
   1b8f4:	bl	11790 <fputs@plt>
   1b8f8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1b8fc:	movw	r2, #18167	; 0x46f7
   1b900:	movt	r2, #2
   1b904:	str	r0, [fp, #-84]	; 0xffffffac
   1b908:	mov	r0, r2
   1b90c:	str	r1, [fp, #-88]	; 0xffffffa8
   1b910:	bl	1161c <gettext@plt>
   1b914:	movw	r2, #18338	; 0x47a2
   1b918:	movt	r2, #2
   1b91c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1b920:	str	r0, [fp, #-92]	; 0xffffffa4
   1b924:	mov	r0, r1
   1b928:	ldr	r1, [fp, #-92]	; 0xffffffa4
   1b92c:	bl	11658 <fprintf@plt>
   1b930:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1b934:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1b938:	str	r0, [fp, #-96]	; 0xffffffa0
   1b93c:	mov	r0, r2
   1b940:	bl	11790 <fputs@plt>
   1b944:	ldr	r1, [fp, #12]
   1b948:	cmp	r1, #9
   1b94c:	str	r0, [fp, #-100]	; 0xffffff9c
   1b950:	str	r1, [fp, #-104]	; 0xffffff98
   1b954:	bhi	1bd94 <__assert_fail@plt+0xa5bc>
   1b958:	add	r0, pc, #8
   1b95c:	ldr	r1, [fp, #-104]	; 0xffffff98
   1b960:	ldr	r0, [r0, r1, lsl #2]
   1b964:	mov	pc, r0
   1b968:	muleq	r1, r0, r9
   1b96c:	muleq	r1, r4, r9
   1b970:	ldrdeq	fp, [r1], -r0
   1b974:	andeq	fp, r1, r4, lsl sl
   1b978:	andeq	fp, r1, r0, ror sl
   1b97c:	ldrdeq	fp, [r1], -r8
   1b980:	andeq	fp, r1, ip, asr #22
   1b984:	andeq	fp, r1, ip, asr #23
   1b988:	andeq	fp, r1, r8, asr ip
   1b98c:	strdeq	fp, [r1], -r0
   1b990:	b	1be34 <__assert_fail@plt+0xa65c>
   1b994:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b998:	movw	r1, #18372	; 0x47c4
   1b99c:	movt	r1, #2
   1b9a0:	str	r0, [fp, #-108]	; 0xffffff94
   1b9a4:	mov	r0, r1
   1b9a8:	bl	1161c <gettext@plt>
   1b9ac:	ldr	r1, [fp, #8]
   1b9b0:	ldr	r2, [r1]
   1b9b4:	ldr	r1, [fp, #-108]	; 0xffffff94
   1b9b8:	str	r0, [fp, #-112]	; 0xffffff90
   1b9bc:	mov	r0, r1
   1b9c0:	ldr	r1, [fp, #-112]	; 0xffffff90
   1b9c4:	bl	11658 <fprintf@plt>
   1b9c8:	str	r0, [fp, #-116]	; 0xffffff8c
   1b9cc:	b	1be34 <__assert_fail@plt+0xa65c>
   1b9d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b9d4:	movw	r1, #18388	; 0x47d4
   1b9d8:	movt	r1, #2
   1b9dc:	str	r0, [fp, #-120]	; 0xffffff88
   1b9e0:	mov	r0, r1
   1b9e4:	bl	1161c <gettext@plt>
   1b9e8:	ldr	r1, [fp, #8]
   1b9ec:	ldr	r2, [r1]
   1b9f0:	ldr	r1, [fp, #8]
   1b9f4:	ldr	r3, [r1, #4]
   1b9f8:	ldr	r1, [fp, #-120]	; 0xffffff88
   1b9fc:	str	r0, [fp, #-124]	; 0xffffff84
   1ba00:	mov	r0, r1
   1ba04:	ldr	r1, [fp, #-124]	; 0xffffff84
   1ba08:	bl	11658 <fprintf@plt>
   1ba0c:	str	r0, [fp, #-128]	; 0xffffff80
   1ba10:	b	1be34 <__assert_fail@plt+0xa65c>
   1ba14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ba18:	movw	r1, #18411	; 0x47eb
   1ba1c:	movt	r1, #2
   1ba20:	str	r0, [fp, #-132]	; 0xffffff7c
   1ba24:	mov	r0, r1
   1ba28:	bl	1161c <gettext@plt>
   1ba2c:	ldr	r1, [fp, #8]
   1ba30:	ldr	r2, [r1]
   1ba34:	ldr	r1, [fp, #8]
   1ba38:	ldr	r3, [r1, #4]
   1ba3c:	ldr	r1, [fp, #8]
   1ba40:	ldr	r1, [r1, #8]
   1ba44:	ldr	lr, [fp, #-132]	; 0xffffff7c
   1ba48:	str	r0, [fp, #-136]	; 0xffffff78
   1ba4c:	mov	r0, lr
   1ba50:	ldr	ip, [fp, #-136]	; 0xffffff78
   1ba54:	str	r1, [fp, #-140]	; 0xffffff74
   1ba58:	mov	r1, ip
   1ba5c:	ldr	r4, [fp, #-140]	; 0xffffff74
   1ba60:	str	r4, [sp]
   1ba64:	bl	11658 <fprintf@plt>
   1ba68:	str	r0, [sp, #144]	; 0x90
   1ba6c:	b	1be34 <__assert_fail@plt+0xa65c>
   1ba70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ba74:	movw	r1, #18439	; 0x4807
   1ba78:	movt	r1, #2
   1ba7c:	str	r0, [sp, #140]	; 0x8c
   1ba80:	mov	r0, r1
   1ba84:	bl	1161c <gettext@plt>
   1ba88:	ldr	r1, [fp, #8]
   1ba8c:	ldr	r2, [r1]
   1ba90:	ldr	r1, [fp, #8]
   1ba94:	ldr	r3, [r1, #4]
   1ba98:	ldr	r1, [fp, #8]
   1ba9c:	ldr	r1, [r1, #8]
   1baa0:	ldr	lr, [fp, #8]
   1baa4:	ldr	lr, [lr, #12]
   1baa8:	ldr	ip, [sp, #140]	; 0x8c
   1baac:	str	r0, [sp, #136]	; 0x88
   1bab0:	mov	r0, ip
   1bab4:	ldr	r4, [sp, #136]	; 0x88
   1bab8:	str	r1, [sp, #132]	; 0x84
   1babc:	mov	r1, r4
   1bac0:	ldr	r5, [sp, #132]	; 0x84
   1bac4:	str	r5, [sp]
   1bac8:	str	lr, [sp, #4]
   1bacc:	bl	11658 <fprintf@plt>
   1bad0:	str	r0, [sp, #128]	; 0x80
   1bad4:	b	1be34 <__assert_fail@plt+0xa65c>
   1bad8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1badc:	movw	r1, #18471	; 0x4827
   1bae0:	movt	r1, #2
   1bae4:	str	r0, [sp, #124]	; 0x7c
   1bae8:	mov	r0, r1
   1baec:	bl	1161c <gettext@plt>
   1baf0:	ldr	r1, [fp, #8]
   1baf4:	ldr	r2, [r1]
   1baf8:	ldr	r1, [fp, #8]
   1bafc:	ldr	r3, [r1, #4]
   1bb00:	ldr	r1, [fp, #8]
   1bb04:	ldr	r1, [r1, #8]
   1bb08:	ldr	lr, [fp, #8]
   1bb0c:	ldr	lr, [lr, #12]
   1bb10:	ldr	ip, [fp, #8]
   1bb14:	ldr	ip, [ip, #16]
   1bb18:	ldr	r4, [sp, #124]	; 0x7c
   1bb1c:	str	r0, [sp, #120]	; 0x78
   1bb20:	mov	r0, r4
   1bb24:	ldr	r5, [sp, #120]	; 0x78
   1bb28:	str	r1, [sp, #116]	; 0x74
   1bb2c:	mov	r1, r5
   1bb30:	ldr	r6, [sp, #116]	; 0x74
   1bb34:	str	r6, [sp]
   1bb38:	str	lr, [sp, #4]
   1bb3c:	str	ip, [sp, #8]
   1bb40:	bl	11658 <fprintf@plt>
   1bb44:	str	r0, [sp, #112]	; 0x70
   1bb48:	b	1be34 <__assert_fail@plt+0xa65c>
   1bb4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bb50:	movw	r1, #18507	; 0x484b
   1bb54:	movt	r1, #2
   1bb58:	str	r0, [sp, #108]	; 0x6c
   1bb5c:	mov	r0, r1
   1bb60:	bl	1161c <gettext@plt>
   1bb64:	ldr	r1, [fp, #8]
   1bb68:	ldr	r2, [r1]
   1bb6c:	ldr	r1, [fp, #8]
   1bb70:	ldr	r3, [r1, #4]
   1bb74:	ldr	r1, [fp, #8]
   1bb78:	ldr	r1, [r1, #8]
   1bb7c:	ldr	lr, [fp, #8]
   1bb80:	ldr	lr, [lr, #12]
   1bb84:	ldr	ip, [fp, #8]
   1bb88:	ldr	ip, [ip, #16]
   1bb8c:	ldr	r4, [fp, #8]
   1bb90:	ldr	r4, [r4, #20]
   1bb94:	ldr	r5, [sp, #108]	; 0x6c
   1bb98:	str	r0, [sp, #104]	; 0x68
   1bb9c:	mov	r0, r5
   1bba0:	ldr	r6, [sp, #104]	; 0x68
   1bba4:	str	r1, [sp, #100]	; 0x64
   1bba8:	mov	r1, r6
   1bbac:	ldr	r7, [sp, #100]	; 0x64
   1bbb0:	str	r7, [sp]
   1bbb4:	str	lr, [sp, #4]
   1bbb8:	str	ip, [sp, #8]
   1bbbc:	str	r4, [sp, #12]
   1bbc0:	bl	11658 <fprintf@plt>
   1bbc4:	str	r0, [sp, #96]	; 0x60
   1bbc8:	b	1be34 <__assert_fail@plt+0xa65c>
   1bbcc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bbd0:	movw	r1, #18547	; 0x4873
   1bbd4:	movt	r1, #2
   1bbd8:	str	r0, [sp, #92]	; 0x5c
   1bbdc:	mov	r0, r1
   1bbe0:	bl	1161c <gettext@plt>
   1bbe4:	ldr	r1, [fp, #8]
   1bbe8:	ldr	r2, [r1]
   1bbec:	ldr	r1, [fp, #8]
   1bbf0:	ldr	r3, [r1, #4]
   1bbf4:	ldr	r1, [fp, #8]
   1bbf8:	ldr	r1, [r1, #8]
   1bbfc:	ldr	lr, [fp, #8]
   1bc00:	ldr	lr, [lr, #12]
   1bc04:	ldr	ip, [fp, #8]
   1bc08:	ldr	ip, [ip, #16]
   1bc0c:	ldr	r4, [fp, #8]
   1bc10:	ldr	r4, [r4, #20]
   1bc14:	ldr	r5, [fp, #8]
   1bc18:	ldr	r5, [r5, #24]
   1bc1c:	ldr	r6, [sp, #92]	; 0x5c
   1bc20:	str	r0, [sp, #88]	; 0x58
   1bc24:	mov	r0, r6
   1bc28:	ldr	r7, [sp, #88]	; 0x58
   1bc2c:	str	r1, [sp, #84]	; 0x54
   1bc30:	mov	r1, r7
   1bc34:	ldr	r8, [sp, #84]	; 0x54
   1bc38:	str	r8, [sp]
   1bc3c:	str	lr, [sp, #4]
   1bc40:	str	ip, [sp, #8]
   1bc44:	str	r4, [sp, #12]
   1bc48:	str	r5, [sp, #16]
   1bc4c:	bl	11658 <fprintf@plt>
   1bc50:	str	r0, [sp, #80]	; 0x50
   1bc54:	b	1be34 <__assert_fail@plt+0xa65c>
   1bc58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bc5c:	movw	r1, #18591	; 0x489f
   1bc60:	movt	r1, #2
   1bc64:	str	r0, [sp, #76]	; 0x4c
   1bc68:	mov	r0, r1
   1bc6c:	bl	1161c <gettext@plt>
   1bc70:	ldr	r1, [fp, #8]
   1bc74:	ldr	r2, [r1]
   1bc78:	ldr	r1, [fp, #8]
   1bc7c:	ldr	r3, [r1, #4]
   1bc80:	ldr	r1, [fp, #8]
   1bc84:	ldr	r1, [r1, #8]
   1bc88:	ldr	lr, [fp, #8]
   1bc8c:	ldr	lr, [lr, #12]
   1bc90:	ldr	ip, [fp, #8]
   1bc94:	ldr	ip, [ip, #16]
   1bc98:	ldr	r4, [fp, #8]
   1bc9c:	ldr	r4, [r4, #20]
   1bca0:	ldr	r5, [fp, #8]
   1bca4:	ldr	r5, [r5, #24]
   1bca8:	ldr	r6, [fp, #8]
   1bcac:	ldr	r6, [r6, #28]
   1bcb0:	ldr	r7, [sp, #76]	; 0x4c
   1bcb4:	str	r0, [sp, #72]	; 0x48
   1bcb8:	mov	r0, r7
   1bcbc:	ldr	r8, [sp, #72]	; 0x48
   1bcc0:	str	r1, [sp, #68]	; 0x44
   1bcc4:	mov	r1, r8
   1bcc8:	ldr	r9, [sp, #68]	; 0x44
   1bccc:	str	r9, [sp]
   1bcd0:	str	lr, [sp, #4]
   1bcd4:	str	ip, [sp, #8]
   1bcd8:	str	r4, [sp, #12]
   1bcdc:	str	r5, [sp, #16]
   1bce0:	str	r6, [sp, #20]
   1bce4:	bl	11658 <fprintf@plt>
   1bce8:	str	r0, [sp, #64]	; 0x40
   1bcec:	b	1be34 <__assert_fail@plt+0xa65c>
   1bcf0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bcf4:	movw	r1, #18639	; 0x48cf
   1bcf8:	movt	r1, #2
   1bcfc:	str	r0, [sp, #60]	; 0x3c
   1bd00:	mov	r0, r1
   1bd04:	bl	1161c <gettext@plt>
   1bd08:	ldr	r1, [fp, #8]
   1bd0c:	ldr	r2, [r1]
   1bd10:	ldr	r1, [fp, #8]
   1bd14:	ldr	r3, [r1, #4]
   1bd18:	ldr	r1, [fp, #8]
   1bd1c:	ldr	r1, [r1, #8]
   1bd20:	ldr	lr, [fp, #8]
   1bd24:	ldr	lr, [lr, #12]
   1bd28:	ldr	ip, [fp, #8]
   1bd2c:	ldr	ip, [ip, #16]
   1bd30:	ldr	r4, [fp, #8]
   1bd34:	ldr	r4, [r4, #20]
   1bd38:	ldr	r5, [fp, #8]
   1bd3c:	ldr	r5, [r5, #24]
   1bd40:	ldr	r6, [fp, #8]
   1bd44:	ldr	r6, [r6, #28]
   1bd48:	ldr	r7, [fp, #8]
   1bd4c:	ldr	r7, [r7, #32]
   1bd50:	ldr	r8, [sp, #60]	; 0x3c
   1bd54:	str	r0, [sp, #56]	; 0x38
   1bd58:	mov	r0, r8
   1bd5c:	ldr	r9, [sp, #56]	; 0x38
   1bd60:	str	r1, [sp, #52]	; 0x34
   1bd64:	mov	r1, r9
   1bd68:	ldr	sl, [sp, #52]	; 0x34
   1bd6c:	str	sl, [sp]
   1bd70:	str	lr, [sp, #4]
   1bd74:	str	ip, [sp, #8]
   1bd78:	str	r4, [sp, #12]
   1bd7c:	str	r5, [sp, #16]
   1bd80:	str	r6, [sp, #20]
   1bd84:	str	r7, [sp, #24]
   1bd88:	bl	11658 <fprintf@plt>
   1bd8c:	str	r0, [sp, #48]	; 0x30
   1bd90:	b	1be34 <__assert_fail@plt+0xa65c>
   1bd94:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bd98:	movw	r1, #18691	; 0x4903
   1bd9c:	movt	r1, #2
   1bda0:	str	r0, [sp, #44]	; 0x2c
   1bda4:	mov	r0, r1
   1bda8:	bl	1161c <gettext@plt>
   1bdac:	ldr	r1, [fp, #8]
   1bdb0:	ldr	r2, [r1]
   1bdb4:	ldr	r1, [fp, #8]
   1bdb8:	ldr	r3, [r1, #4]
   1bdbc:	ldr	r1, [fp, #8]
   1bdc0:	ldr	r1, [r1, #8]
   1bdc4:	ldr	lr, [fp, #8]
   1bdc8:	ldr	lr, [lr, #12]
   1bdcc:	ldr	ip, [fp, #8]
   1bdd0:	ldr	ip, [ip, #16]
   1bdd4:	ldr	r4, [fp, #8]
   1bdd8:	ldr	r4, [r4, #20]
   1bddc:	ldr	r5, [fp, #8]
   1bde0:	ldr	r5, [r5, #24]
   1bde4:	ldr	r6, [fp, #8]
   1bde8:	ldr	r6, [r6, #28]
   1bdec:	ldr	r7, [fp, #8]
   1bdf0:	ldr	r7, [r7, #32]
   1bdf4:	ldr	r8, [sp, #44]	; 0x2c
   1bdf8:	str	r0, [sp, #40]	; 0x28
   1bdfc:	mov	r0, r8
   1be00:	ldr	r9, [sp, #40]	; 0x28
   1be04:	str	r1, [sp, #36]	; 0x24
   1be08:	mov	r1, r9
   1be0c:	ldr	sl, [sp, #36]	; 0x24
   1be10:	str	sl, [sp]
   1be14:	str	lr, [sp, #4]
   1be18:	str	ip, [sp, #8]
   1be1c:	str	r4, [sp, #12]
   1be20:	str	r5, [sp, #16]
   1be24:	str	r6, [sp, #20]
   1be28:	str	r7, [sp, #24]
   1be2c:	bl	11658 <fprintf@plt>
   1be30:	str	r0, [sp, #32]
   1be34:	sub	sp, fp, #28
   1be38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1be3c:	push	{fp, lr}
   1be40:	mov	fp, sp
   1be44:	sub	sp, sp, #32
   1be48:	ldr	ip, [fp, #8]
   1be4c:	str	r0, [fp, #-4]
   1be50:	str	r1, [fp, #-8]
   1be54:	str	r2, [fp, #-12]
   1be58:	str	r3, [sp, #16]
   1be5c:	movw	r0, #0
   1be60:	str	r0, [sp, #12]
   1be64:	str	ip, [sp, #8]
   1be68:	ldr	r0, [fp, #8]
   1be6c:	ldr	r1, [sp, #12]
   1be70:	add	r0, r0, r1, lsl #2
   1be74:	ldr	r0, [r0]
   1be78:	movw	r1, #0
   1be7c:	cmp	r0, r1
   1be80:	beq	1be98 <__assert_fail@plt+0xa6c0>
   1be84:	b	1be88 <__assert_fail@plt+0xa6b0>
   1be88:	ldr	r0, [sp, #12]
   1be8c:	add	r0, r0, #1
   1be90:	str	r0, [sp, #12]
   1be94:	b	1be68 <__assert_fail@plt+0xa690>
   1be98:	ldr	r0, [fp, #-4]
   1be9c:	ldr	r1, [fp, #-8]
   1bea0:	ldr	r2, [fp, #-12]
   1bea4:	ldr	r3, [sp, #16]
   1bea8:	ldr	ip, [fp, #8]
   1beac:	ldr	lr, [sp, #12]
   1beb0:	str	ip, [sp]
   1beb4:	str	lr, [sp, #4]
   1beb8:	bl	1b818 <__assert_fail@plt+0xa040>
   1bebc:	mov	sp, fp
   1bec0:	pop	{fp, pc}
   1bec4:	push	{fp, lr}
   1bec8:	mov	fp, sp
   1becc:	sub	sp, sp, #80	; 0x50
   1bed0:	ldr	ip, [fp, #8]
   1bed4:	str	ip, [fp, #-4]
   1bed8:	str	r0, [fp, #-8]
   1bedc:	str	r1, [fp, #-12]
   1bee0:	str	r2, [fp, #-16]
   1bee4:	str	r3, [fp, #-20]	; 0xffffffec
   1bee8:	movw	r0, #0
   1beec:	str	r0, [fp, #-24]	; 0xffffffe8
   1bef0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bef4:	cmp	r0, #10
   1bef8:	movw	r0, #0
   1befc:	str	r0, [sp, #12]
   1bf00:	bcs	1bf38 <__assert_fail@plt+0xa760>
   1bf04:	ldr	r0, [fp, #-4]
   1bf08:	add	r1, r0, #4
   1bf0c:	str	r1, [fp, #-4]
   1bf10:	ldr	r0, [r0]
   1bf14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bf18:	add	r2, sp, #16
   1bf1c:	add	r1, r2, r1, lsl #2
   1bf20:	str	r0, [r1]
   1bf24:	movw	r1, #0
   1bf28:	cmp	r0, r1
   1bf2c:	movw	r0, #0
   1bf30:	movne	r0, #1
   1bf34:	str	r0, [sp, #12]
   1bf38:	ldr	r0, [sp, #12]
   1bf3c:	tst	r0, #1
   1bf40:	beq	1bf58 <__assert_fail@plt+0xa780>
   1bf44:	b	1bf48 <__assert_fail@plt+0xa770>
   1bf48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bf4c:	add	r0, r0, #1
   1bf50:	str	r0, [fp, #-24]	; 0xffffffe8
   1bf54:	b	1bef0 <__assert_fail@plt+0xa718>
   1bf58:	add	r0, sp, #16
   1bf5c:	ldr	r1, [fp, #-8]
   1bf60:	ldr	r2, [fp, #-12]
   1bf64:	ldr	r3, [fp, #-16]
   1bf68:	ldr	ip, [fp, #-20]	; 0xffffffec
   1bf6c:	ldr	lr, [fp, #-24]	; 0xffffffe8
   1bf70:	str	r0, [sp, #8]
   1bf74:	mov	r0, r1
   1bf78:	mov	r1, r2
   1bf7c:	mov	r2, r3
   1bf80:	mov	r3, ip
   1bf84:	ldr	ip, [sp, #8]
   1bf88:	str	ip, [sp]
   1bf8c:	str	lr, [sp, #4]
   1bf90:	bl	1b818 <__assert_fail@plt+0xa040>
   1bf94:	mov	sp, fp
   1bf98:	pop	{fp, pc}
   1bf9c:	push	{fp, lr}
   1bfa0:	mov	fp, sp
   1bfa4:	sub	sp, sp, #32
   1bfa8:	str	r0, [fp, #-4]
   1bfac:	str	r1, [fp, #-8]
   1bfb0:	str	r2, [fp, #-12]
   1bfb4:	str	r3, [sp, #16]
   1bfb8:	add	r0, fp, #8
   1bfbc:	str	r0, [sp, #12]
   1bfc0:	ldr	r0, [fp, #-4]
   1bfc4:	ldr	r1, [fp, #-8]
   1bfc8:	ldr	r2, [fp, #-12]
   1bfcc:	ldr	r3, [sp, #16]
   1bfd0:	ldr	ip, [sp, #12]
   1bfd4:	mov	lr, sp
   1bfd8:	str	ip, [lr]
   1bfdc:	bl	1bec4 <__assert_fail@plt+0xa6ec>
   1bfe0:	add	r0, sp, #12
   1bfe4:	str	r0, [sp, #8]
   1bfe8:	mov	sp, fp
   1bfec:	pop	{fp, pc}
   1bff0:	push	{fp, lr}
   1bff4:	mov	fp, sp
   1bff8:	sub	sp, sp, #16
   1bffc:	movw	r0, #20956	; 0x51dc
   1c000:	movt	r0, #3
   1c004:	ldr	r1, [r0]
   1c008:	movw	r0, #13037	; 0x32ed
   1c00c:	movt	r0, #2
   1c010:	bl	11790 <fputs@plt>
   1c014:	movw	r1, #18751	; 0x493f
   1c018:	movt	r1, #2
   1c01c:	str	r0, [fp, #-4]
   1c020:	mov	r0, r1
   1c024:	bl	1161c <gettext@plt>
   1c028:	movw	r1, #17614	; 0x44ce
   1c02c:	movt	r1, #2
   1c030:	bl	11448 <printf@plt>
   1c034:	movw	r1, #18771	; 0x4953
   1c038:	movt	r1, #2
   1c03c:	str	r0, [sp, #8]
   1c040:	mov	r0, r1
   1c044:	bl	1161c <gettext@plt>
   1c048:	movw	r1, #17214	; 0x433e
   1c04c:	movt	r1, #2
   1c050:	movw	r2, #17528	; 0x4478
   1c054:	movt	r2, #2
   1c058:	bl	11448 <printf@plt>
   1c05c:	movw	r1, #18791	; 0x4967
   1c060:	movt	r1, #2
   1c064:	str	r0, [sp, #4]
   1c068:	mov	r0, r1
   1c06c:	bl	1161c <gettext@plt>
   1c070:	movw	r1, #18830	; 0x498e
   1c074:	movt	r1, #2
   1c078:	bl	11448 <printf@plt>
   1c07c:	str	r0, [sp]
   1c080:	mov	sp, fp
   1c084:	pop	{fp, pc}
   1c088:	push	{fp, lr}
   1c08c:	mov	fp, sp
   1c090:	sub	sp, sp, #16
   1c094:	str	r0, [fp, #-4]
   1c098:	str	r1, [sp, #8]
   1c09c:	str	r2, [sp, #4]
   1c0a0:	ldr	r0, [fp, #-4]
   1c0a4:	ldr	r1, [sp, #8]
   1c0a8:	ldr	r2, [sp, #4]
   1c0ac:	bl	1c0b8 <__assert_fail@plt+0xa8e0>
   1c0b0:	mov	sp, fp
   1c0b4:	pop	{fp, pc}
   1c0b8:	push	{fp, lr}
   1c0bc:	mov	fp, sp
   1c0c0:	sub	sp, sp, #16
   1c0c4:	str	r0, [fp, #-4]
   1c0c8:	str	r1, [sp, #8]
   1c0cc:	str	r2, [sp, #4]
   1c0d0:	ldr	r0, [fp, #-4]
   1c0d4:	ldr	r1, [sp, #8]
   1c0d8:	ldr	r2, [sp, #4]
   1c0dc:	bl	1ff64 <__assert_fail@plt+0xe78c>
   1c0e0:	str	r0, [sp]
   1c0e4:	ldr	r0, [sp]
   1c0e8:	movw	r1, #0
   1c0ec:	cmp	r0, r1
   1c0f0:	bne	1c120 <__assert_fail@plt+0xa948>
   1c0f4:	ldr	r0, [fp, #-4]
   1c0f8:	movw	r1, #0
   1c0fc:	cmp	r0, r1
   1c100:	beq	1c11c <__assert_fail@plt+0xa944>
   1c104:	ldr	r0, [sp, #8]
   1c108:	cmp	r0, #0
   1c10c:	beq	1c120 <__assert_fail@plt+0xa948>
   1c110:	ldr	r0, [sp, #4]
   1c114:	cmp	r0, #0
   1c118:	beq	1c120 <__assert_fail@plt+0xa948>
   1c11c:	bl	1ef08 <__assert_fail@plt+0xd730>
   1c120:	ldr	r0, [sp]
   1c124:	mov	sp, fp
   1c128:	pop	{fp, pc}
   1c12c:	push	{fp, lr}
   1c130:	mov	fp, sp
   1c134:	sub	sp, sp, #8
   1c138:	str	r0, [sp, #4]
   1c13c:	ldr	r0, [sp, #4]
   1c140:	bl	1fda0 <__assert_fail@plt+0xe5c8>
   1c144:	bl	1c150 <__assert_fail@plt+0xa978>
   1c148:	mov	sp, fp
   1c14c:	pop	{fp, pc}
   1c150:	push	{fp, lr}
   1c154:	mov	fp, sp
   1c158:	sub	sp, sp, #8
   1c15c:	str	r0, [sp, #4]
   1c160:	ldr	r0, [sp, #4]
   1c164:	movw	r1, #0
   1c168:	cmp	r0, r1
   1c16c:	bne	1c174 <__assert_fail@plt+0xa99c>
   1c170:	bl	1ef08 <__assert_fail@plt+0xd730>
   1c174:	ldr	r0, [sp, #4]
   1c178:	mov	sp, fp
   1c17c:	pop	{fp, pc}
   1c180:	push	{fp, lr}
   1c184:	mov	fp, sp
   1c188:	sub	sp, sp, #8
   1c18c:	str	r0, [sp, #4]
   1c190:	ldr	r0, [sp, #4]
   1c194:	bl	21534 <__assert_fail@plt+0xfd5c>
   1c198:	bl	1c150 <__assert_fail@plt+0xa978>
   1c19c:	mov	sp, fp
   1c1a0:	pop	{fp, pc}
   1c1a4:	push	{fp, lr}
   1c1a8:	mov	fp, sp
   1c1ac:	sub	sp, sp, #8
   1c1b0:	str	r0, [sp, #4]
   1c1b4:	ldr	r0, [sp, #4]
   1c1b8:	bl	1c12c <__assert_fail@plt+0xa954>
   1c1bc:	mov	sp, fp
   1c1c0:	pop	{fp, pc}
   1c1c4:	push	{fp, lr}
   1c1c8:	mov	fp, sp
   1c1cc:	sub	sp, sp, #16
   1c1d0:	str	r0, [fp, #-4]
   1c1d4:	str	r1, [sp, #8]
   1c1d8:	ldr	r0, [fp, #-4]
   1c1dc:	ldr	r1, [sp, #8]
   1c1e0:	bl	1fec0 <__assert_fail@plt+0xe6e8>
   1c1e4:	str	r0, [sp, #4]
   1c1e8:	ldr	r0, [sp, #4]
   1c1ec:	movw	r1, #0
   1c1f0:	cmp	r0, r1
   1c1f4:	bne	1c218 <__assert_fail@plt+0xaa40>
   1c1f8:	ldr	r0, [fp, #-4]
   1c1fc:	movw	r1, #0
   1c200:	cmp	r0, r1
   1c204:	beq	1c214 <__assert_fail@plt+0xaa3c>
   1c208:	ldr	r0, [sp, #8]
   1c20c:	cmp	r0, #0
   1c210:	beq	1c218 <__assert_fail@plt+0xaa40>
   1c214:	bl	1ef08 <__assert_fail@plt+0xd730>
   1c218:	ldr	r0, [sp, #4]
   1c21c:	mov	sp, fp
   1c220:	pop	{fp, pc}
   1c224:	push	{fp, lr}
   1c228:	mov	fp, sp
   1c22c:	sub	sp, sp, #8
   1c230:	str	r0, [sp, #4]
   1c234:	str	r1, [sp]
   1c238:	ldr	r0, [sp, #4]
   1c23c:	ldr	r1, [sp]
   1c240:	bl	21574 <__assert_fail@plt+0xfd9c>
   1c244:	bl	1c150 <__assert_fail@plt+0xa978>
   1c248:	mov	sp, fp
   1c24c:	pop	{fp, pc}
   1c250:	push	{fp, lr}
   1c254:	mov	fp, sp
   1c258:	sub	sp, sp, #16
   1c25c:	str	r0, [fp, #-4]
   1c260:	str	r1, [sp, #8]
   1c264:	str	r2, [sp, #4]
   1c268:	ldr	r0, [fp, #-4]
   1c26c:	ldr	r1, [sp, #8]
   1c270:	ldr	r2, [sp, #4]
   1c274:	bl	2166c <__assert_fail@plt+0xfe94>
   1c278:	bl	1c150 <__assert_fail@plt+0xa978>
   1c27c:	mov	sp, fp
   1c280:	pop	{fp, pc}
   1c284:	push	{fp, lr}
   1c288:	mov	fp, sp
   1c28c:	sub	sp, sp, #8
   1c290:	str	r0, [sp, #4]
   1c294:	str	r1, [sp]
   1c298:	ldr	r1, [sp, #4]
   1c29c:	ldr	r2, [sp]
   1c2a0:	movw	r0, #0
   1c2a4:	bl	1c0b8 <__assert_fail@plt+0xa8e0>
   1c2a8:	mov	sp, fp
   1c2ac:	pop	{fp, pc}
   1c2b0:	push	{fp, lr}
   1c2b4:	mov	fp, sp
   1c2b8:	sub	sp, sp, #8
   1c2bc:	str	r0, [sp, #4]
   1c2c0:	str	r1, [sp]
   1c2c4:	ldr	r1, [sp, #4]
   1c2c8:	ldr	r2, [sp]
   1c2cc:	movw	r0, #0
   1c2d0:	bl	1c250 <__assert_fail@plt+0xaa78>
   1c2d4:	mov	sp, fp
   1c2d8:	pop	{fp, pc}
   1c2dc:	push	{fp, lr}
   1c2e0:	mov	fp, sp
   1c2e4:	sub	sp, sp, #8
   1c2e8:	str	r0, [sp, #4]
   1c2ec:	str	r1, [sp]
   1c2f0:	ldr	r0, [sp, #4]
   1c2f4:	ldr	r1, [sp]
   1c2f8:	movw	r2, #1
   1c2fc:	bl	1c308 <__assert_fail@plt+0xab30>
   1c300:	mov	sp, fp
   1c304:	pop	{fp, pc}
   1c308:	push	{fp, lr}
   1c30c:	mov	fp, sp
   1c310:	sub	sp, sp, #16
   1c314:	str	r0, [fp, #-4]
   1c318:	str	r1, [sp, #8]
   1c31c:	str	r2, [sp, #4]
   1c320:	ldr	r0, [sp, #8]
   1c324:	ldr	r0, [r0]
   1c328:	str	r0, [sp]
   1c32c:	ldr	r0, [fp, #-4]
   1c330:	movw	r1, #0
   1c334:	cmp	r0, r1
   1c338:	bne	1c384 <__assert_fail@plt+0xabac>
   1c33c:	ldr	r0, [sp]
   1c340:	cmp	r0, #0
   1c344:	bne	1c380 <__assert_fail@plt+0xaba8>
   1c348:	ldr	r0, [sp, #4]
   1c34c:	movw	r1, #64	; 0x40
   1c350:	udiv	r0, r1, r0
   1c354:	str	r0, [sp]
   1c358:	ldr	r0, [sp]
   1c35c:	cmp	r0, #0
   1c360:	movw	r0, #0
   1c364:	movne	r0, #1
   1c368:	mvn	r1, #0
   1c36c:	eor	r0, r0, r1
   1c370:	and	r0, r0, #1
   1c374:	ldr	r1, [sp]
   1c378:	add	r0, r1, r0
   1c37c:	str	r0, [sp]
   1c380:	b	1c3b4 <__assert_fail@plt+0xabdc>
   1c384:	ldr	r0, [sp]
   1c388:	ldr	r1, [sp]
   1c38c:	lsr	r1, r1, #1
   1c390:	add	r1, r1, #1
   1c394:	adds	r0, r0, r1
   1c398:	mov	r1, #0
   1c39c:	adc	r1, r1, #0
   1c3a0:	str	r0, [sp]
   1c3a4:	tst	r1, #1
   1c3a8:	beq	1c3b0 <__assert_fail@plt+0xabd8>
   1c3ac:	bl	1ef08 <__assert_fail@plt+0xd730>
   1c3b0:	b	1c3b4 <__assert_fail@plt+0xabdc>
   1c3b4:	ldr	r0, [fp, #-4]
   1c3b8:	ldr	r1, [sp]
   1c3bc:	ldr	r2, [sp, #4]
   1c3c0:	bl	1c0b8 <__assert_fail@plt+0xa8e0>
   1c3c4:	str	r0, [fp, #-4]
   1c3c8:	ldr	r0, [sp]
   1c3cc:	ldr	r1, [sp, #8]
   1c3d0:	str	r0, [r1]
   1c3d4:	ldr	r0, [fp, #-4]
   1c3d8:	mov	sp, fp
   1c3dc:	pop	{fp, pc}
   1c3e0:	push	{fp, lr}
   1c3e4:	mov	fp, sp
   1c3e8:	sub	sp, sp, #376	; 0x178
   1c3ec:	ldr	ip, [fp, #8]
   1c3f0:	str	r0, [fp, #-4]
   1c3f4:	str	r1, [fp, #-8]
   1c3f8:	str	r2, [fp, #-12]
   1c3fc:	str	r3, [fp, #-16]
   1c400:	ldr	r0, [fp, #-8]
   1c404:	ldr	r0, [r0]
   1c408:	str	r0, [fp, #-20]	; 0xffffffec
   1c40c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c410:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c414:	asr	r1, r1, #1
   1c418:	add	r1, r0, r1
   1c41c:	mov	r2, #1
   1c420:	cmp	r1, r0
   1c424:	movwvc	r2, #0
   1c428:	str	r1, [fp, #-24]	; 0xffffffe8
   1c42c:	tst	r2, #1
   1c430:	str	ip, [fp, #-36]	; 0xffffffdc
   1c434:	beq	1c440 <__assert_fail@plt+0xac68>
   1c438:	ldr	r0, [pc, #4044]	; 1d40c <__assert_fail@plt+0xbc34>
   1c43c:	str	r0, [fp, #-24]	; 0xffffffe8
   1c440:	ldr	r0, [fp, #-16]
   1c444:	movw	r1, #0
   1c448:	cmp	r1, r0
   1c44c:	bgt	1c468 <__assert_fail@plt+0xac90>
   1c450:	ldr	r0, [fp, #-16]
   1c454:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c458:	cmp	r0, r1
   1c45c:	bge	1c468 <__assert_fail@plt+0xac90>
   1c460:	ldr	r0, [fp, #-16]
   1c464:	str	r0, [fp, #-24]	; 0xffffffe8
   1c468:	b	1c840 <__assert_fail@plt+0xb068>
   1c46c:	b	1c470 <__assert_fail@plt+0xac98>
   1c470:	ldr	r0, [fp, #8]
   1c474:	cmp	r0, #0
   1c478:	bge	1c58c <__assert_fail@plt+0xadb4>
   1c47c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c480:	cmp	r0, #0
   1c484:	bge	1c510 <__assert_fail@plt+0xad38>
   1c488:	b	1c48c <__assert_fail@plt+0xacb4>
   1c48c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c490:	ldr	r1, [fp, #8]
   1c494:	movw	r2, #127	; 0x7f
   1c498:	sdiv	r1, r2, r1
   1c49c:	cmp	r0, r1
   1c4a0:	blt	1c62c <__assert_fail@plt+0xae54>
   1c4a4:	b	1c644 <__assert_fail@plt+0xae6c>
   1c4a8:	b	1c4ac <__assert_fail@plt+0xacd4>
   1c4ac:	ldr	r0, [pc, #4076]	; 1d4a0 <__assert_fail@plt+0xbcc8>
   1c4b0:	ldr	r1, [fp, #8]
   1c4b4:	cmp	r1, r0
   1c4b8:	blt	1c4d0 <__assert_fail@plt+0xacf8>
   1c4bc:	b	1c4dc <__assert_fail@plt+0xad04>
   1c4c0:	ldr	r0, [fp, #8]
   1c4c4:	movw	r1, #0
   1c4c8:	cmp	r1, r0
   1c4cc:	bge	1c4dc <__assert_fail@plt+0xad04>
   1c4d0:	movw	r0, #0
   1c4d4:	str	r0, [fp, #-40]	; 0xffffffd8
   1c4d8:	b	1c4f4 <__assert_fail@plt+0xad1c>
   1c4dc:	ldr	r0, [fp, #8]
   1c4e0:	movw	r1, #0
   1c4e4:	sub	r0, r1, r0
   1c4e8:	movw	r1, #127	; 0x7f
   1c4ec:	sdiv	r0, r1, r0
   1c4f0:	str	r0, [fp, #-40]	; 0xffffffd8
   1c4f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c4f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c4fc:	mvn	r2, #0
   1c500:	sub	r1, r2, r1
   1c504:	cmp	r0, r1
   1c508:	ble	1c62c <__assert_fail@plt+0xae54>
   1c50c:	b	1c644 <__assert_fail@plt+0xae6c>
   1c510:	b	1c514 <__assert_fail@plt+0xad3c>
   1c514:	b	1c570 <__assert_fail@plt+0xad98>
   1c518:	b	1c570 <__assert_fail@plt+0xad98>
   1c51c:	ldr	r0, [fp, #8]
   1c520:	cmn	r0, #1
   1c524:	bne	1c570 <__assert_fail@plt+0xad98>
   1c528:	b	1c52c <__assert_fail@plt+0xad54>
   1c52c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c530:	mvn	r1, #127	; 0x7f
   1c534:	add	r0, r0, r1
   1c538:	movw	r1, #0
   1c53c:	cmp	r1, r0
   1c540:	blt	1c62c <__assert_fail@plt+0xae54>
   1c544:	b	1c644 <__assert_fail@plt+0xae6c>
   1c548:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c54c:	movw	r1, #0
   1c550:	cmp	r1, r0
   1c554:	bge	1c644 <__assert_fail@plt+0xae6c>
   1c558:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c55c:	sub	r0, r0, #1
   1c560:	movw	r1, #127	; 0x7f
   1c564:	cmp	r1, r0
   1c568:	blt	1c62c <__assert_fail@plt+0xae54>
   1c56c:	b	1c644 <__assert_fail@plt+0xae6c>
   1c570:	ldr	r0, [fp, #8]
   1c574:	mvn	r1, #127	; 0x7f
   1c578:	sdiv	r0, r1, r0
   1c57c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c580:	cmp	r0, r1
   1c584:	blt	1c62c <__assert_fail@plt+0xae54>
   1c588:	b	1c644 <__assert_fail@plt+0xae6c>
   1c58c:	ldr	r0, [fp, #8]
   1c590:	cmp	r0, #0
   1c594:	bne	1c59c <__assert_fail@plt+0xadc4>
   1c598:	b	1c644 <__assert_fail@plt+0xae6c>
   1c59c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c5a0:	cmp	r0, #0
   1c5a4:	bge	1c614 <__assert_fail@plt+0xae3c>
   1c5a8:	b	1c5ac <__assert_fail@plt+0xadd4>
   1c5ac:	b	1c5f8 <__assert_fail@plt+0xae20>
   1c5b0:	b	1c5f8 <__assert_fail@plt+0xae20>
   1c5b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c5b8:	cmn	r0, #1
   1c5bc:	bne	1c5f8 <__assert_fail@plt+0xae20>
   1c5c0:	b	1c5c4 <__assert_fail@plt+0xadec>
   1c5c4:	ldr	r0, [fp, #8]
   1c5c8:	mvn	r1, #127	; 0x7f
   1c5cc:	add	r0, r0, r1
   1c5d0:	movw	r1, #0
   1c5d4:	cmp	r1, r0
   1c5d8:	blt	1c62c <__assert_fail@plt+0xae54>
   1c5dc:	b	1c644 <__assert_fail@plt+0xae6c>
   1c5e0:	ldr	r0, [fp, #8]
   1c5e4:	sub	r0, r0, #1
   1c5e8:	movw	r1, #127	; 0x7f
   1c5ec:	cmp	r1, r0
   1c5f0:	blt	1c62c <__assert_fail@plt+0xae54>
   1c5f4:	b	1c644 <__assert_fail@plt+0xae6c>
   1c5f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c5fc:	mvn	r1, #127	; 0x7f
   1c600:	sdiv	r0, r1, r0
   1c604:	ldr	r1, [fp, #8]
   1c608:	cmp	r0, r1
   1c60c:	blt	1c62c <__assert_fail@plt+0xae54>
   1c610:	b	1c644 <__assert_fail@plt+0xae6c>
   1c614:	ldr	r0, [fp, #8]
   1c618:	movw	r1, #127	; 0x7f
   1c61c:	sdiv	r0, r1, r0
   1c620:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c624:	cmp	r0, r1
   1c628:	bge	1c644 <__assert_fail@plt+0xae6c>
   1c62c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c630:	ldr	r1, [fp, #8]
   1c634:	mul	r0, r0, r1
   1c638:	sxtb	r0, r0
   1c63c:	str	r0, [fp, #-28]	; 0xffffffe4
   1c640:	b	1d858 <__assert_fail@plt+0xc080>
   1c644:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c648:	ldr	r1, [fp, #8]
   1c64c:	mul	r0, r0, r1
   1c650:	sxtb	r0, r0
   1c654:	str	r0, [fp, #-28]	; 0xffffffe4
   1c658:	b	1d868 <__assert_fail@plt+0xc090>
   1c65c:	ldr	r0, [fp, #8]
   1c660:	cmp	r0, #0
   1c664:	bge	1c774 <__assert_fail@plt+0xaf9c>
   1c668:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c66c:	cmp	r0, #0
   1c670:	bge	1c6fc <__assert_fail@plt+0xaf24>
   1c674:	b	1c678 <__assert_fail@plt+0xaea0>
   1c678:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c67c:	ldr	r1, [fp, #8]
   1c680:	movw	r2, #255	; 0xff
   1c684:	sdiv	r1, r2, r1
   1c688:	cmp	r0, r1
   1c68c:	blt	1c810 <__assert_fail@plt+0xb038>
   1c690:	b	1c828 <__assert_fail@plt+0xb050>
   1c694:	b	1c698 <__assert_fail@plt+0xaec0>
   1c698:	ldr	r0, [pc, #3584]	; 1d4a0 <__assert_fail@plt+0xbcc8>
   1c69c:	ldr	r1, [fp, #8]
   1c6a0:	cmp	r1, r0
   1c6a4:	blt	1c6bc <__assert_fail@plt+0xaee4>
   1c6a8:	b	1c6c8 <__assert_fail@plt+0xaef0>
   1c6ac:	ldr	r0, [fp, #8]
   1c6b0:	movw	r1, #0
   1c6b4:	cmp	r1, r0
   1c6b8:	bge	1c6c8 <__assert_fail@plt+0xaef0>
   1c6bc:	movw	r0, #0
   1c6c0:	str	r0, [fp, #-44]	; 0xffffffd4
   1c6c4:	b	1c6e0 <__assert_fail@plt+0xaf08>
   1c6c8:	ldr	r0, [fp, #8]
   1c6cc:	movw	r1, #0
   1c6d0:	sub	r0, r1, r0
   1c6d4:	movw	r1, #255	; 0xff
   1c6d8:	sdiv	r0, r1, r0
   1c6dc:	str	r0, [fp, #-44]	; 0xffffffd4
   1c6e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c6e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c6e8:	mvn	r2, #0
   1c6ec:	sub	r1, r2, r1
   1c6f0:	cmp	r0, r1
   1c6f4:	ble	1c810 <__assert_fail@plt+0xb038>
   1c6f8:	b	1c828 <__assert_fail@plt+0xb050>
   1c6fc:	b	1c700 <__assert_fail@plt+0xaf28>
   1c700:	b	1c758 <__assert_fail@plt+0xaf80>
   1c704:	b	1c758 <__assert_fail@plt+0xaf80>
   1c708:	ldr	r0, [fp, #8]
   1c70c:	cmn	r0, #1
   1c710:	bne	1c758 <__assert_fail@plt+0xaf80>
   1c714:	b	1c718 <__assert_fail@plt+0xaf40>
   1c718:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c71c:	add	r0, r0, #0
   1c720:	movw	r1, #0
   1c724:	cmp	r1, r0
   1c728:	blt	1c810 <__assert_fail@plt+0xb038>
   1c72c:	b	1c828 <__assert_fail@plt+0xb050>
   1c730:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c734:	movw	r1, #0
   1c738:	cmp	r1, r0
   1c73c:	bge	1c828 <__assert_fail@plt+0xb050>
   1c740:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c744:	sub	r0, r0, #1
   1c748:	mvn	r1, #0
   1c74c:	cmp	r1, r0
   1c750:	blt	1c810 <__assert_fail@plt+0xb038>
   1c754:	b	1c828 <__assert_fail@plt+0xb050>
   1c758:	ldr	r0, [fp, #8]
   1c75c:	movw	r1, #0
   1c760:	sdiv	r0, r1, r0
   1c764:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c768:	cmp	r0, r1
   1c76c:	blt	1c810 <__assert_fail@plt+0xb038>
   1c770:	b	1c828 <__assert_fail@plt+0xb050>
   1c774:	ldr	r0, [fp, #8]
   1c778:	cmp	r0, #0
   1c77c:	bne	1c784 <__assert_fail@plt+0xafac>
   1c780:	b	1c828 <__assert_fail@plt+0xb050>
   1c784:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c788:	cmp	r0, #0
   1c78c:	bge	1c7f8 <__assert_fail@plt+0xb020>
   1c790:	b	1c794 <__assert_fail@plt+0xafbc>
   1c794:	b	1c7dc <__assert_fail@plt+0xb004>
   1c798:	b	1c7dc <__assert_fail@plt+0xb004>
   1c79c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c7a0:	cmn	r0, #1
   1c7a4:	bne	1c7dc <__assert_fail@plt+0xb004>
   1c7a8:	b	1c7ac <__assert_fail@plt+0xafd4>
   1c7ac:	ldr	r0, [fp, #8]
   1c7b0:	add	r0, r0, #0
   1c7b4:	movw	r1, #0
   1c7b8:	cmp	r1, r0
   1c7bc:	blt	1c810 <__assert_fail@plt+0xb038>
   1c7c0:	b	1c828 <__assert_fail@plt+0xb050>
   1c7c4:	ldr	r0, [fp, #8]
   1c7c8:	sub	r0, r0, #1
   1c7cc:	mvn	r1, #0
   1c7d0:	cmp	r1, r0
   1c7d4:	blt	1c810 <__assert_fail@plt+0xb038>
   1c7d8:	b	1c828 <__assert_fail@plt+0xb050>
   1c7dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c7e0:	movw	r1, #0
   1c7e4:	sdiv	r0, r1, r0
   1c7e8:	ldr	r1, [fp, #8]
   1c7ec:	cmp	r0, r1
   1c7f0:	blt	1c810 <__assert_fail@plt+0xb038>
   1c7f4:	b	1c828 <__assert_fail@plt+0xb050>
   1c7f8:	ldr	r0, [fp, #8]
   1c7fc:	movw	r1, #255	; 0xff
   1c800:	sdiv	r0, r1, r0
   1c804:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c808:	cmp	r0, r1
   1c80c:	bge	1c828 <__assert_fail@plt+0xb050>
   1c810:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c814:	ldr	r1, [fp, #8]
   1c818:	mul	r0, r0, r1
   1c81c:	and	r0, r0, #255	; 0xff
   1c820:	str	r0, [fp, #-28]	; 0xffffffe4
   1c824:	b	1d858 <__assert_fail@plt+0xc080>
   1c828:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c82c:	ldr	r1, [fp, #8]
   1c830:	mul	r0, r0, r1
   1c834:	and	r0, r0, #255	; 0xff
   1c838:	str	r0, [fp, #-28]	; 0xffffffe4
   1c83c:	b	1d868 <__assert_fail@plt+0xc090>
   1c840:	b	1cc18 <__assert_fail@plt+0xb440>
   1c844:	b	1c848 <__assert_fail@plt+0xb070>
   1c848:	ldr	r0, [fp, #8]
   1c84c:	cmp	r0, #0
   1c850:	bge	1c964 <__assert_fail@plt+0xb18c>
   1c854:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c858:	cmp	r0, #0
   1c85c:	bge	1c8e8 <__assert_fail@plt+0xb110>
   1c860:	b	1c864 <__assert_fail@plt+0xb08c>
   1c864:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c868:	ldr	r1, [fp, #8]
   1c86c:	movw	r2, #32767	; 0x7fff
   1c870:	sdiv	r1, r2, r1
   1c874:	cmp	r0, r1
   1c878:	blt	1ca04 <__assert_fail@plt+0xb22c>
   1c87c:	b	1ca1c <__assert_fail@plt+0xb244>
   1c880:	b	1c884 <__assert_fail@plt+0xb0ac>
   1c884:	ldr	r0, [pc, #3092]	; 1d4a0 <__assert_fail@plt+0xbcc8>
   1c888:	ldr	r1, [fp, #8]
   1c88c:	cmp	r1, r0
   1c890:	blt	1c8a8 <__assert_fail@plt+0xb0d0>
   1c894:	b	1c8b4 <__assert_fail@plt+0xb0dc>
   1c898:	ldr	r0, [fp, #8]
   1c89c:	movw	r1, #0
   1c8a0:	cmp	r1, r0
   1c8a4:	bge	1c8b4 <__assert_fail@plt+0xb0dc>
   1c8a8:	movw	r0, #0
   1c8ac:	str	r0, [fp, #-48]	; 0xffffffd0
   1c8b0:	b	1c8cc <__assert_fail@plt+0xb0f4>
   1c8b4:	ldr	r0, [fp, #8]
   1c8b8:	movw	r1, #0
   1c8bc:	sub	r0, r1, r0
   1c8c0:	movw	r1, #32767	; 0x7fff
   1c8c4:	sdiv	r0, r1, r0
   1c8c8:	str	r0, [fp, #-48]	; 0xffffffd0
   1c8cc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c8d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c8d4:	mvn	r2, #0
   1c8d8:	sub	r1, r2, r1
   1c8dc:	cmp	r0, r1
   1c8e0:	ble	1ca04 <__assert_fail@plt+0xb22c>
   1c8e4:	b	1ca1c <__assert_fail@plt+0xb244>
   1c8e8:	b	1c8ec <__assert_fail@plt+0xb114>
   1c8ec:	b	1c948 <__assert_fail@plt+0xb170>
   1c8f0:	b	1c948 <__assert_fail@plt+0xb170>
   1c8f4:	ldr	r0, [fp, #8]
   1c8f8:	cmn	r0, #1
   1c8fc:	bne	1c948 <__assert_fail@plt+0xb170>
   1c900:	b	1c904 <__assert_fail@plt+0xb12c>
   1c904:	ldr	r0, [pc, #3928]	; 1d864 <__assert_fail@plt+0xc08c>
   1c908:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c90c:	add	r0, r1, r0
   1c910:	movw	r1, #0
   1c914:	cmp	r1, r0
   1c918:	blt	1ca04 <__assert_fail@plt+0xb22c>
   1c91c:	b	1ca1c <__assert_fail@plt+0xb244>
   1c920:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c924:	movw	r1, #0
   1c928:	cmp	r1, r0
   1c92c:	bge	1ca1c <__assert_fail@plt+0xb244>
   1c930:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c934:	sub	r0, r0, #1
   1c938:	movw	r1, #32767	; 0x7fff
   1c93c:	cmp	r1, r0
   1c940:	blt	1ca04 <__assert_fail@plt+0xb22c>
   1c944:	b	1ca1c <__assert_fail@plt+0xb244>
   1c948:	ldr	r0, [pc, #3860]	; 1d864 <__assert_fail@plt+0xc08c>
   1c94c:	ldr	r1, [fp, #8]
   1c950:	sdiv	r0, r0, r1
   1c954:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c958:	cmp	r0, r1
   1c95c:	blt	1ca04 <__assert_fail@plt+0xb22c>
   1c960:	b	1ca1c <__assert_fail@plt+0xb244>
   1c964:	ldr	r0, [fp, #8]
   1c968:	cmp	r0, #0
   1c96c:	bne	1c974 <__assert_fail@plt+0xb19c>
   1c970:	b	1ca1c <__assert_fail@plt+0xb244>
   1c974:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c978:	cmp	r0, #0
   1c97c:	bge	1c9ec <__assert_fail@plt+0xb214>
   1c980:	b	1c984 <__assert_fail@plt+0xb1ac>
   1c984:	b	1c9d0 <__assert_fail@plt+0xb1f8>
   1c988:	b	1c9d0 <__assert_fail@plt+0xb1f8>
   1c98c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c990:	cmn	r0, #1
   1c994:	bne	1c9d0 <__assert_fail@plt+0xb1f8>
   1c998:	b	1c99c <__assert_fail@plt+0xb1c4>
   1c99c:	ldr	r0, [pc, #3776]	; 1d864 <__assert_fail@plt+0xc08c>
   1c9a0:	ldr	r1, [fp, #8]
   1c9a4:	add	r0, r1, r0
   1c9a8:	movw	r1, #0
   1c9ac:	cmp	r1, r0
   1c9b0:	blt	1ca04 <__assert_fail@plt+0xb22c>
   1c9b4:	b	1ca1c <__assert_fail@plt+0xb244>
   1c9b8:	ldr	r0, [fp, #8]
   1c9bc:	sub	r0, r0, #1
   1c9c0:	movw	r1, #32767	; 0x7fff
   1c9c4:	cmp	r1, r0
   1c9c8:	blt	1ca04 <__assert_fail@plt+0xb22c>
   1c9cc:	b	1ca1c <__assert_fail@plt+0xb244>
   1c9d0:	ldr	r0, [pc, #3724]	; 1d864 <__assert_fail@plt+0xc08c>
   1c9d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c9d8:	sdiv	r0, r0, r1
   1c9dc:	ldr	r1, [fp, #8]
   1c9e0:	cmp	r0, r1
   1c9e4:	blt	1ca04 <__assert_fail@plt+0xb22c>
   1c9e8:	b	1ca1c <__assert_fail@plt+0xb244>
   1c9ec:	ldr	r0, [fp, #8]
   1c9f0:	movw	r1, #32767	; 0x7fff
   1c9f4:	sdiv	r0, r1, r0
   1c9f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c9fc:	cmp	r0, r1
   1ca00:	bge	1ca1c <__assert_fail@plt+0xb244>
   1ca04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ca08:	ldr	r1, [fp, #8]
   1ca0c:	mul	r0, r0, r1
   1ca10:	sxth	r0, r0
   1ca14:	str	r0, [fp, #-28]	; 0xffffffe4
   1ca18:	b	1d858 <__assert_fail@plt+0xc080>
   1ca1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ca20:	ldr	r1, [fp, #8]
   1ca24:	mul	r0, r0, r1
   1ca28:	sxth	r0, r0
   1ca2c:	str	r0, [fp, #-28]	; 0xffffffe4
   1ca30:	b	1d868 <__assert_fail@plt+0xc090>
   1ca34:	ldr	r0, [fp, #8]
   1ca38:	cmp	r0, #0
   1ca3c:	bge	1cb4c <__assert_fail@plt+0xb374>
   1ca40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ca44:	cmp	r0, #0
   1ca48:	bge	1cad4 <__assert_fail@plt+0xb2fc>
   1ca4c:	b	1ca50 <__assert_fail@plt+0xb278>
   1ca50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ca54:	ldr	r1, [fp, #8]
   1ca58:	movw	r2, #65535	; 0xffff
   1ca5c:	sdiv	r1, r2, r1
   1ca60:	cmp	r0, r1
   1ca64:	blt	1cbe8 <__assert_fail@plt+0xb410>
   1ca68:	b	1cc00 <__assert_fail@plt+0xb428>
   1ca6c:	b	1ca70 <__assert_fail@plt+0xb298>
   1ca70:	ldr	r0, [pc, #2600]	; 1d4a0 <__assert_fail@plt+0xbcc8>
   1ca74:	ldr	r1, [fp, #8]
   1ca78:	cmp	r1, r0
   1ca7c:	blt	1ca94 <__assert_fail@plt+0xb2bc>
   1ca80:	b	1caa0 <__assert_fail@plt+0xb2c8>
   1ca84:	ldr	r0, [fp, #8]
   1ca88:	movw	r1, #0
   1ca8c:	cmp	r1, r0
   1ca90:	bge	1caa0 <__assert_fail@plt+0xb2c8>
   1ca94:	movw	r0, #0
   1ca98:	str	r0, [fp, #-52]	; 0xffffffcc
   1ca9c:	b	1cab8 <__assert_fail@plt+0xb2e0>
   1caa0:	ldr	r0, [fp, #8]
   1caa4:	movw	r1, #0
   1caa8:	sub	r0, r1, r0
   1caac:	movw	r1, #65535	; 0xffff
   1cab0:	sdiv	r0, r1, r0
   1cab4:	str	r0, [fp, #-52]	; 0xffffffcc
   1cab8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1cabc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cac0:	mvn	r2, #0
   1cac4:	sub	r1, r2, r1
   1cac8:	cmp	r0, r1
   1cacc:	ble	1cbe8 <__assert_fail@plt+0xb410>
   1cad0:	b	1cc00 <__assert_fail@plt+0xb428>
   1cad4:	b	1cad8 <__assert_fail@plt+0xb300>
   1cad8:	b	1cb30 <__assert_fail@plt+0xb358>
   1cadc:	b	1cb30 <__assert_fail@plt+0xb358>
   1cae0:	ldr	r0, [fp, #8]
   1cae4:	cmn	r0, #1
   1cae8:	bne	1cb30 <__assert_fail@plt+0xb358>
   1caec:	b	1caf0 <__assert_fail@plt+0xb318>
   1caf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1caf4:	add	r0, r0, #0
   1caf8:	movw	r1, #0
   1cafc:	cmp	r1, r0
   1cb00:	blt	1cbe8 <__assert_fail@plt+0xb410>
   1cb04:	b	1cc00 <__assert_fail@plt+0xb428>
   1cb08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cb0c:	movw	r1, #0
   1cb10:	cmp	r1, r0
   1cb14:	bge	1cc00 <__assert_fail@plt+0xb428>
   1cb18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cb1c:	sub	r0, r0, #1
   1cb20:	mvn	r1, #0
   1cb24:	cmp	r1, r0
   1cb28:	blt	1cbe8 <__assert_fail@plt+0xb410>
   1cb2c:	b	1cc00 <__assert_fail@plt+0xb428>
   1cb30:	ldr	r0, [fp, #8]
   1cb34:	movw	r1, #0
   1cb38:	sdiv	r0, r1, r0
   1cb3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cb40:	cmp	r0, r1
   1cb44:	blt	1cbe8 <__assert_fail@plt+0xb410>
   1cb48:	b	1cc00 <__assert_fail@plt+0xb428>
   1cb4c:	ldr	r0, [fp, #8]
   1cb50:	cmp	r0, #0
   1cb54:	bne	1cb5c <__assert_fail@plt+0xb384>
   1cb58:	b	1cc00 <__assert_fail@plt+0xb428>
   1cb5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cb60:	cmp	r0, #0
   1cb64:	bge	1cbd0 <__assert_fail@plt+0xb3f8>
   1cb68:	b	1cb6c <__assert_fail@plt+0xb394>
   1cb6c:	b	1cbb4 <__assert_fail@plt+0xb3dc>
   1cb70:	b	1cbb4 <__assert_fail@plt+0xb3dc>
   1cb74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cb78:	cmn	r0, #1
   1cb7c:	bne	1cbb4 <__assert_fail@plt+0xb3dc>
   1cb80:	b	1cb84 <__assert_fail@plt+0xb3ac>
   1cb84:	ldr	r0, [fp, #8]
   1cb88:	add	r0, r0, #0
   1cb8c:	movw	r1, #0
   1cb90:	cmp	r1, r0
   1cb94:	blt	1cbe8 <__assert_fail@plt+0xb410>
   1cb98:	b	1cc00 <__assert_fail@plt+0xb428>
   1cb9c:	ldr	r0, [fp, #8]
   1cba0:	sub	r0, r0, #1
   1cba4:	mvn	r1, #0
   1cba8:	cmp	r1, r0
   1cbac:	blt	1cbe8 <__assert_fail@plt+0xb410>
   1cbb0:	b	1cc00 <__assert_fail@plt+0xb428>
   1cbb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cbb8:	movw	r1, #0
   1cbbc:	sdiv	r0, r1, r0
   1cbc0:	ldr	r1, [fp, #8]
   1cbc4:	cmp	r0, r1
   1cbc8:	blt	1cbe8 <__assert_fail@plt+0xb410>
   1cbcc:	b	1cc00 <__assert_fail@plt+0xb428>
   1cbd0:	ldr	r0, [fp, #8]
   1cbd4:	movw	r1, #65535	; 0xffff
   1cbd8:	sdiv	r0, r1, r0
   1cbdc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cbe0:	cmp	r0, r1
   1cbe4:	bge	1cc00 <__assert_fail@plt+0xb428>
   1cbe8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cbec:	ldr	r1, [fp, #8]
   1cbf0:	mul	r0, r0, r1
   1cbf4:	uxth	r0, r0
   1cbf8:	str	r0, [fp, #-28]	; 0xffffffe4
   1cbfc:	b	1d858 <__assert_fail@plt+0xc080>
   1cc00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cc04:	ldr	r1, [fp, #8]
   1cc08:	mul	r0, r0, r1
   1cc0c:	uxth	r0, r0
   1cc10:	str	r0, [fp, #-28]	; 0xffffffe4
   1cc14:	b	1d868 <__assert_fail@plt+0xc090>
   1cc18:	b	1cc1c <__assert_fail@plt+0xb444>
   1cc1c:	b	1cc20 <__assert_fail@plt+0xb448>
   1cc20:	ldr	r0, [fp, #8]
   1cc24:	cmp	r0, #0
   1cc28:	bge	1cd2c <__assert_fail@plt+0xb554>
   1cc2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cc30:	cmp	r0, #0
   1cc34:	bge	1ccc0 <__assert_fail@plt+0xb4e8>
   1cc38:	b	1cc3c <__assert_fail@plt+0xb464>
   1cc3c:	ldr	r0, [pc, #1992]	; 1d40c <__assert_fail@plt+0xbc34>
   1cc40:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cc44:	ldr	r2, [fp, #8]
   1cc48:	sdiv	r0, r0, r2
   1cc4c:	cmp	r1, r0
   1cc50:	blt	1cdbc <__assert_fail@plt+0xb5e4>
   1cc54:	b	1cdd0 <__assert_fail@plt+0xb5f8>
   1cc58:	b	1cc5c <__assert_fail@plt+0xb484>
   1cc5c:	ldr	r0, [pc, #2108]	; 1d4a0 <__assert_fail@plt+0xbcc8>
   1cc60:	ldr	r1, [fp, #8]
   1cc64:	cmp	r1, r0
   1cc68:	blt	1cc80 <__assert_fail@plt+0xb4a8>
   1cc6c:	b	1cc8c <__assert_fail@plt+0xb4b4>
   1cc70:	ldr	r0, [fp, #8]
   1cc74:	movw	r1, #0
   1cc78:	cmp	r1, r0
   1cc7c:	bge	1cc8c <__assert_fail@plt+0xb4b4>
   1cc80:	movw	r0, #0
   1cc84:	str	r0, [fp, #-56]	; 0xffffffc8
   1cc88:	b	1cca4 <__assert_fail@plt+0xb4cc>
   1cc8c:	ldr	r0, [pc, #1912]	; 1d40c <__assert_fail@plt+0xbc34>
   1cc90:	ldr	r1, [fp, #8]
   1cc94:	movw	r2, #0
   1cc98:	sub	r1, r2, r1
   1cc9c:	sdiv	r0, r0, r1
   1cca0:	str	r0, [fp, #-56]	; 0xffffffc8
   1cca4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1cca8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ccac:	mvn	r2, #0
   1ccb0:	sub	r1, r2, r1
   1ccb4:	cmp	r0, r1
   1ccb8:	ble	1cdbc <__assert_fail@plt+0xb5e4>
   1ccbc:	b	1cdd0 <__assert_fail@plt+0xb5f8>
   1ccc0:	ldr	r0, [fp, #8]
   1ccc4:	cmn	r0, #1
   1ccc8:	bne	1cd10 <__assert_fail@plt+0xb538>
   1cccc:	b	1ccd0 <__assert_fail@plt+0xb4f8>
   1ccd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ccd4:	add	r0, r0, #-2147483648	; 0x80000000
   1ccd8:	movw	r1, #0
   1ccdc:	cmp	r1, r0
   1cce0:	blt	1cdbc <__assert_fail@plt+0xb5e4>
   1cce4:	b	1cdd0 <__assert_fail@plt+0xb5f8>
   1cce8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ccec:	movw	r1, #0
   1ccf0:	cmp	r1, r0
   1ccf4:	bge	1cdd0 <__assert_fail@plt+0xb5f8>
   1ccf8:	ldr	r0, [pc, #1804]	; 1d40c <__assert_fail@plt+0xbc34>
   1ccfc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cd00:	sub	r1, r1, #1
   1cd04:	cmp	r0, r1
   1cd08:	blt	1cdbc <__assert_fail@plt+0xb5e4>
   1cd0c:	b	1cdd0 <__assert_fail@plt+0xb5f8>
   1cd10:	ldr	r0, [pc, #4072]	; 1dd00 <__assert_fail@plt+0xc528>
   1cd14:	ldr	r1, [fp, #8]
   1cd18:	sdiv	r0, r0, r1
   1cd1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cd20:	cmp	r0, r1
   1cd24:	blt	1cdbc <__assert_fail@plt+0xb5e4>
   1cd28:	b	1cdd0 <__assert_fail@plt+0xb5f8>
   1cd2c:	ldr	r0, [fp, #8]
   1cd30:	cmp	r0, #0
   1cd34:	bne	1cd3c <__assert_fail@plt+0xb564>
   1cd38:	b	1cdd0 <__assert_fail@plt+0xb5f8>
   1cd3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cd40:	cmp	r0, #0
   1cd44:	bge	1cda4 <__assert_fail@plt+0xb5cc>
   1cd48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cd4c:	cmn	r0, #1
   1cd50:	bne	1cd88 <__assert_fail@plt+0xb5b0>
   1cd54:	b	1cd58 <__assert_fail@plt+0xb580>
   1cd58:	ldr	r0, [fp, #8]
   1cd5c:	add	r0, r0, #-2147483648	; 0x80000000
   1cd60:	movw	r1, #0
   1cd64:	cmp	r1, r0
   1cd68:	blt	1cdbc <__assert_fail@plt+0xb5e4>
   1cd6c:	b	1cdd0 <__assert_fail@plt+0xb5f8>
   1cd70:	ldr	r0, [pc, #1684]	; 1d40c <__assert_fail@plt+0xbc34>
   1cd74:	ldr	r1, [fp, #8]
   1cd78:	sub	r1, r1, #1
   1cd7c:	cmp	r0, r1
   1cd80:	blt	1cdbc <__assert_fail@plt+0xb5e4>
   1cd84:	b	1cdd0 <__assert_fail@plt+0xb5f8>
   1cd88:	ldr	r0, [pc, #3952]	; 1dd00 <__assert_fail@plt+0xc528>
   1cd8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cd90:	sdiv	r0, r0, r1
   1cd94:	ldr	r1, [fp, #8]
   1cd98:	cmp	r0, r1
   1cd9c:	blt	1cdbc <__assert_fail@plt+0xb5e4>
   1cda0:	b	1cdd0 <__assert_fail@plt+0xb5f8>
   1cda4:	ldr	r0, [pc, #1632]	; 1d40c <__assert_fail@plt+0xbc34>
   1cda8:	ldr	r1, [fp, #8]
   1cdac:	sdiv	r0, r0, r1
   1cdb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cdb4:	cmp	r0, r1
   1cdb8:	bge	1cdd0 <__assert_fail@plt+0xb5f8>
   1cdbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cdc0:	ldr	r1, [fp, #8]
   1cdc4:	mul	r0, r0, r1
   1cdc8:	str	r0, [fp, #-28]	; 0xffffffe4
   1cdcc:	b	1d858 <__assert_fail@plt+0xc080>
   1cdd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cdd4:	ldr	r1, [fp, #8]
   1cdd8:	mul	r0, r0, r1
   1cddc:	str	r0, [fp, #-28]	; 0xffffffe4
   1cde0:	b	1d868 <__assert_fail@plt+0xc090>
   1cde4:	ldr	r0, [fp, #8]
   1cde8:	cmp	r0, #0
   1cdec:	bge	1cefc <__assert_fail@plt+0xb724>
   1cdf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cdf4:	cmp	r0, #0
   1cdf8:	bge	1ce84 <__assert_fail@plt+0xb6ac>
   1cdfc:	b	1ce1c <__assert_fail@plt+0xb644>
   1ce00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ce04:	ldr	r1, [fp, #8]
   1ce08:	mvn	r2, #0
   1ce0c:	udiv	r1, r2, r1
   1ce10:	cmp	r0, r1
   1ce14:	bcc	1cf98 <__assert_fail@plt+0xb7c0>
   1ce18:	b	1cfac <__assert_fail@plt+0xb7d4>
   1ce1c:	b	1ce20 <__assert_fail@plt+0xb648>
   1ce20:	ldr	r0, [pc, #1656]	; 1d4a0 <__assert_fail@plt+0xbcc8>
   1ce24:	ldr	r1, [fp, #8]
   1ce28:	cmp	r1, r0
   1ce2c:	blt	1ce44 <__assert_fail@plt+0xb66c>
   1ce30:	b	1ce50 <__assert_fail@plt+0xb678>
   1ce34:	ldr	r0, [fp, #8]
   1ce38:	movw	r1, #0
   1ce3c:	cmp	r1, r0
   1ce40:	bge	1ce50 <__assert_fail@plt+0xb678>
   1ce44:	movw	r0, #1
   1ce48:	str	r0, [fp, #-60]	; 0xffffffc4
   1ce4c:	b	1ce68 <__assert_fail@plt+0xb690>
   1ce50:	ldr	r0, [fp, #8]
   1ce54:	movw	r1, #0
   1ce58:	sub	r0, r1, r0
   1ce5c:	mvn	r1, #0
   1ce60:	udiv	r0, r1, r0
   1ce64:	str	r0, [fp, #-60]	; 0xffffffc4
   1ce68:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1ce6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ce70:	mvn	r2, #0
   1ce74:	sub	r1, r2, r1
   1ce78:	cmp	r0, r1
   1ce7c:	bls	1cf98 <__assert_fail@plt+0xb7c0>
   1ce80:	b	1cfac <__assert_fail@plt+0xb7d4>
   1ce84:	b	1ce88 <__assert_fail@plt+0xb6b0>
   1ce88:	b	1cee0 <__assert_fail@plt+0xb708>
   1ce8c:	b	1cee0 <__assert_fail@plt+0xb708>
   1ce90:	ldr	r0, [fp, #8]
   1ce94:	cmn	r0, #1
   1ce98:	bne	1cee0 <__assert_fail@plt+0xb708>
   1ce9c:	b	1cea0 <__assert_fail@plt+0xb6c8>
   1cea0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cea4:	add	r0, r0, #0
   1cea8:	movw	r1, #0
   1ceac:	cmp	r1, r0
   1ceb0:	blt	1cf98 <__assert_fail@plt+0xb7c0>
   1ceb4:	b	1cfac <__assert_fail@plt+0xb7d4>
   1ceb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cebc:	movw	r1, #0
   1cec0:	cmp	r1, r0
   1cec4:	bge	1cfac <__assert_fail@plt+0xb7d4>
   1cec8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cecc:	sub	r0, r0, #1
   1ced0:	mvn	r1, #0
   1ced4:	cmp	r1, r0
   1ced8:	blt	1cf98 <__assert_fail@plt+0xb7c0>
   1cedc:	b	1cfac <__assert_fail@plt+0xb7d4>
   1cee0:	ldr	r0, [fp, #8]
   1cee4:	movw	r1, #0
   1cee8:	sdiv	r0, r1, r0
   1ceec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cef0:	cmp	r0, r1
   1cef4:	blt	1cf98 <__assert_fail@plt+0xb7c0>
   1cef8:	b	1cfac <__assert_fail@plt+0xb7d4>
   1cefc:	ldr	r0, [fp, #8]
   1cf00:	cmp	r0, #0
   1cf04:	bne	1cf0c <__assert_fail@plt+0xb734>
   1cf08:	b	1cfac <__assert_fail@plt+0xb7d4>
   1cf0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cf10:	cmp	r0, #0
   1cf14:	bge	1cf80 <__assert_fail@plt+0xb7a8>
   1cf18:	b	1cf1c <__assert_fail@plt+0xb744>
   1cf1c:	b	1cf64 <__assert_fail@plt+0xb78c>
   1cf20:	b	1cf64 <__assert_fail@plt+0xb78c>
   1cf24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cf28:	cmn	r0, #1
   1cf2c:	bne	1cf64 <__assert_fail@plt+0xb78c>
   1cf30:	b	1cf34 <__assert_fail@plt+0xb75c>
   1cf34:	ldr	r0, [fp, #8]
   1cf38:	add	r0, r0, #0
   1cf3c:	movw	r1, #0
   1cf40:	cmp	r1, r0
   1cf44:	blt	1cf98 <__assert_fail@plt+0xb7c0>
   1cf48:	b	1cfac <__assert_fail@plt+0xb7d4>
   1cf4c:	ldr	r0, [fp, #8]
   1cf50:	sub	r0, r0, #1
   1cf54:	mvn	r1, #0
   1cf58:	cmp	r1, r0
   1cf5c:	blt	1cf98 <__assert_fail@plt+0xb7c0>
   1cf60:	b	1cfac <__assert_fail@plt+0xb7d4>
   1cf64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cf68:	movw	r1, #0
   1cf6c:	sdiv	r0, r1, r0
   1cf70:	ldr	r1, [fp, #8]
   1cf74:	cmp	r0, r1
   1cf78:	blt	1cf98 <__assert_fail@plt+0xb7c0>
   1cf7c:	b	1cfac <__assert_fail@plt+0xb7d4>
   1cf80:	ldr	r0, [fp, #8]
   1cf84:	mvn	r1, #0
   1cf88:	udiv	r0, r1, r0
   1cf8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cf90:	cmp	r0, r1
   1cf94:	bcs	1cfac <__assert_fail@plt+0xb7d4>
   1cf98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cf9c:	ldr	r1, [fp, #8]
   1cfa0:	mul	r0, r0, r1
   1cfa4:	str	r0, [fp, #-28]	; 0xffffffe4
   1cfa8:	b	1d858 <__assert_fail@plt+0xc080>
   1cfac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cfb0:	ldr	r1, [fp, #8]
   1cfb4:	mul	r0, r0, r1
   1cfb8:	str	r0, [fp, #-28]	; 0xffffffe4
   1cfbc:	b	1d868 <__assert_fail@plt+0xc090>
   1cfc0:	b	1cfc4 <__assert_fail@plt+0xb7ec>
   1cfc4:	b	1cfc8 <__assert_fail@plt+0xb7f0>
   1cfc8:	ldr	r0, [fp, #8]
   1cfcc:	cmp	r0, #0
   1cfd0:	bge	1d0d4 <__assert_fail@plt+0xb8fc>
   1cfd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cfd8:	cmp	r0, #0
   1cfdc:	bge	1d068 <__assert_fail@plt+0xb890>
   1cfe0:	b	1cfe4 <__assert_fail@plt+0xb80c>
   1cfe4:	ldr	r0, [pc, #1056]	; 1d40c <__assert_fail@plt+0xbc34>
   1cfe8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cfec:	ldr	r2, [fp, #8]
   1cff0:	sdiv	r0, r0, r2
   1cff4:	cmp	r1, r0
   1cff8:	blt	1d164 <__assert_fail@plt+0xb98c>
   1cffc:	b	1d178 <__assert_fail@plt+0xb9a0>
   1d000:	b	1d004 <__assert_fail@plt+0xb82c>
   1d004:	ldr	r0, [pc, #1172]	; 1d4a0 <__assert_fail@plt+0xbcc8>
   1d008:	ldr	r1, [fp, #8]
   1d00c:	cmp	r1, r0
   1d010:	blt	1d028 <__assert_fail@plt+0xb850>
   1d014:	b	1d034 <__assert_fail@plt+0xb85c>
   1d018:	ldr	r0, [fp, #8]
   1d01c:	movw	r1, #0
   1d020:	cmp	r1, r0
   1d024:	bge	1d034 <__assert_fail@plt+0xb85c>
   1d028:	movw	r0, #0
   1d02c:	str	r0, [fp, #-64]	; 0xffffffc0
   1d030:	b	1d04c <__assert_fail@plt+0xb874>
   1d034:	ldr	r0, [pc, #976]	; 1d40c <__assert_fail@plt+0xbc34>
   1d038:	ldr	r1, [fp, #8]
   1d03c:	movw	r2, #0
   1d040:	sub	r1, r2, r1
   1d044:	sdiv	r0, r0, r1
   1d048:	str	r0, [fp, #-64]	; 0xffffffc0
   1d04c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1d050:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d054:	mvn	r2, #0
   1d058:	sub	r1, r2, r1
   1d05c:	cmp	r0, r1
   1d060:	ble	1d164 <__assert_fail@plt+0xb98c>
   1d064:	b	1d178 <__assert_fail@plt+0xb9a0>
   1d068:	ldr	r0, [fp, #8]
   1d06c:	cmn	r0, #1
   1d070:	bne	1d0b8 <__assert_fail@plt+0xb8e0>
   1d074:	b	1d078 <__assert_fail@plt+0xb8a0>
   1d078:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d07c:	add	r0, r0, #-2147483648	; 0x80000000
   1d080:	movw	r1, #0
   1d084:	cmp	r1, r0
   1d088:	blt	1d164 <__assert_fail@plt+0xb98c>
   1d08c:	b	1d178 <__assert_fail@plt+0xb9a0>
   1d090:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d094:	movw	r1, #0
   1d098:	cmp	r1, r0
   1d09c:	bge	1d178 <__assert_fail@plt+0xb9a0>
   1d0a0:	ldr	r0, [pc, #868]	; 1d40c <__assert_fail@plt+0xbc34>
   1d0a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d0a8:	sub	r1, r1, #1
   1d0ac:	cmp	r0, r1
   1d0b0:	blt	1d164 <__assert_fail@plt+0xb98c>
   1d0b4:	b	1d178 <__assert_fail@plt+0xb9a0>
   1d0b8:	ldr	r0, [pc, #3136]	; 1dd00 <__assert_fail@plt+0xc528>
   1d0bc:	ldr	r1, [fp, #8]
   1d0c0:	sdiv	r0, r0, r1
   1d0c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d0c8:	cmp	r0, r1
   1d0cc:	blt	1d164 <__assert_fail@plt+0xb98c>
   1d0d0:	b	1d178 <__assert_fail@plt+0xb9a0>
   1d0d4:	ldr	r0, [fp, #8]
   1d0d8:	cmp	r0, #0
   1d0dc:	bne	1d0e4 <__assert_fail@plt+0xb90c>
   1d0e0:	b	1d178 <__assert_fail@plt+0xb9a0>
   1d0e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d0e8:	cmp	r0, #0
   1d0ec:	bge	1d14c <__assert_fail@plt+0xb974>
   1d0f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d0f4:	cmn	r0, #1
   1d0f8:	bne	1d130 <__assert_fail@plt+0xb958>
   1d0fc:	b	1d100 <__assert_fail@plt+0xb928>
   1d100:	ldr	r0, [fp, #8]
   1d104:	add	r0, r0, #-2147483648	; 0x80000000
   1d108:	movw	r1, #0
   1d10c:	cmp	r1, r0
   1d110:	blt	1d164 <__assert_fail@plt+0xb98c>
   1d114:	b	1d178 <__assert_fail@plt+0xb9a0>
   1d118:	ldr	r0, [pc, #748]	; 1d40c <__assert_fail@plt+0xbc34>
   1d11c:	ldr	r1, [fp, #8]
   1d120:	sub	r1, r1, #1
   1d124:	cmp	r0, r1
   1d128:	blt	1d164 <__assert_fail@plt+0xb98c>
   1d12c:	b	1d178 <__assert_fail@plt+0xb9a0>
   1d130:	ldr	r0, [pc, #3016]	; 1dd00 <__assert_fail@plt+0xc528>
   1d134:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d138:	sdiv	r0, r0, r1
   1d13c:	ldr	r1, [fp, #8]
   1d140:	cmp	r0, r1
   1d144:	blt	1d164 <__assert_fail@plt+0xb98c>
   1d148:	b	1d178 <__assert_fail@plt+0xb9a0>
   1d14c:	ldr	r0, [pc, #696]	; 1d40c <__assert_fail@plt+0xbc34>
   1d150:	ldr	r1, [fp, #8]
   1d154:	sdiv	r0, r0, r1
   1d158:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d15c:	cmp	r0, r1
   1d160:	bge	1d178 <__assert_fail@plt+0xb9a0>
   1d164:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d168:	ldr	r1, [fp, #8]
   1d16c:	mul	r0, r0, r1
   1d170:	str	r0, [fp, #-28]	; 0xffffffe4
   1d174:	b	1d858 <__assert_fail@plt+0xc080>
   1d178:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d17c:	ldr	r1, [fp, #8]
   1d180:	mul	r0, r0, r1
   1d184:	str	r0, [fp, #-28]	; 0xffffffe4
   1d188:	b	1d868 <__assert_fail@plt+0xc090>
   1d18c:	ldr	r0, [fp, #8]
   1d190:	cmp	r0, #0
   1d194:	bge	1d2a4 <__assert_fail@plt+0xbacc>
   1d198:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d19c:	cmp	r0, #0
   1d1a0:	bge	1d22c <__assert_fail@plt+0xba54>
   1d1a4:	b	1d1c4 <__assert_fail@plt+0xb9ec>
   1d1a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d1ac:	ldr	r1, [fp, #8]
   1d1b0:	mvn	r2, #0
   1d1b4:	udiv	r1, r2, r1
   1d1b8:	cmp	r0, r1
   1d1bc:	bcc	1d340 <__assert_fail@plt+0xbb68>
   1d1c0:	b	1d354 <__assert_fail@plt+0xbb7c>
   1d1c4:	b	1d1c8 <__assert_fail@plt+0xb9f0>
   1d1c8:	ldr	r0, [pc, #720]	; 1d4a0 <__assert_fail@plt+0xbcc8>
   1d1cc:	ldr	r1, [fp, #8]
   1d1d0:	cmp	r1, r0
   1d1d4:	blt	1d1ec <__assert_fail@plt+0xba14>
   1d1d8:	b	1d1f8 <__assert_fail@plt+0xba20>
   1d1dc:	ldr	r0, [fp, #8]
   1d1e0:	movw	r1, #0
   1d1e4:	cmp	r1, r0
   1d1e8:	bge	1d1f8 <__assert_fail@plt+0xba20>
   1d1ec:	movw	r0, #1
   1d1f0:	str	r0, [fp, #-68]	; 0xffffffbc
   1d1f4:	b	1d210 <__assert_fail@plt+0xba38>
   1d1f8:	ldr	r0, [fp, #8]
   1d1fc:	movw	r1, #0
   1d200:	sub	r0, r1, r0
   1d204:	mvn	r1, #0
   1d208:	udiv	r0, r1, r0
   1d20c:	str	r0, [fp, #-68]	; 0xffffffbc
   1d210:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1d214:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d218:	mvn	r2, #0
   1d21c:	sub	r1, r2, r1
   1d220:	cmp	r0, r1
   1d224:	bls	1d340 <__assert_fail@plt+0xbb68>
   1d228:	b	1d354 <__assert_fail@plt+0xbb7c>
   1d22c:	b	1d230 <__assert_fail@plt+0xba58>
   1d230:	b	1d288 <__assert_fail@plt+0xbab0>
   1d234:	b	1d288 <__assert_fail@plt+0xbab0>
   1d238:	ldr	r0, [fp, #8]
   1d23c:	cmn	r0, #1
   1d240:	bne	1d288 <__assert_fail@plt+0xbab0>
   1d244:	b	1d248 <__assert_fail@plt+0xba70>
   1d248:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d24c:	add	r0, r0, #0
   1d250:	movw	r1, #0
   1d254:	cmp	r1, r0
   1d258:	blt	1d340 <__assert_fail@plt+0xbb68>
   1d25c:	b	1d354 <__assert_fail@plt+0xbb7c>
   1d260:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d264:	movw	r1, #0
   1d268:	cmp	r1, r0
   1d26c:	bge	1d354 <__assert_fail@plt+0xbb7c>
   1d270:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d274:	sub	r0, r0, #1
   1d278:	mvn	r1, #0
   1d27c:	cmp	r1, r0
   1d280:	blt	1d340 <__assert_fail@plt+0xbb68>
   1d284:	b	1d354 <__assert_fail@plt+0xbb7c>
   1d288:	ldr	r0, [fp, #8]
   1d28c:	movw	r1, #0
   1d290:	sdiv	r0, r1, r0
   1d294:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d298:	cmp	r0, r1
   1d29c:	blt	1d340 <__assert_fail@plt+0xbb68>
   1d2a0:	b	1d354 <__assert_fail@plt+0xbb7c>
   1d2a4:	ldr	r0, [fp, #8]
   1d2a8:	cmp	r0, #0
   1d2ac:	bne	1d2b4 <__assert_fail@plt+0xbadc>
   1d2b0:	b	1d354 <__assert_fail@plt+0xbb7c>
   1d2b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d2b8:	cmp	r0, #0
   1d2bc:	bge	1d328 <__assert_fail@plt+0xbb50>
   1d2c0:	b	1d2c4 <__assert_fail@plt+0xbaec>
   1d2c4:	b	1d30c <__assert_fail@plt+0xbb34>
   1d2c8:	b	1d30c <__assert_fail@plt+0xbb34>
   1d2cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d2d0:	cmn	r0, #1
   1d2d4:	bne	1d30c <__assert_fail@plt+0xbb34>
   1d2d8:	b	1d2dc <__assert_fail@plt+0xbb04>
   1d2dc:	ldr	r0, [fp, #8]
   1d2e0:	add	r0, r0, #0
   1d2e4:	movw	r1, #0
   1d2e8:	cmp	r1, r0
   1d2ec:	blt	1d340 <__assert_fail@plt+0xbb68>
   1d2f0:	b	1d354 <__assert_fail@plt+0xbb7c>
   1d2f4:	ldr	r0, [fp, #8]
   1d2f8:	sub	r0, r0, #1
   1d2fc:	mvn	r1, #0
   1d300:	cmp	r1, r0
   1d304:	blt	1d340 <__assert_fail@plt+0xbb68>
   1d308:	b	1d354 <__assert_fail@plt+0xbb7c>
   1d30c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d310:	movw	r1, #0
   1d314:	sdiv	r0, r1, r0
   1d318:	ldr	r1, [fp, #8]
   1d31c:	cmp	r0, r1
   1d320:	blt	1d340 <__assert_fail@plt+0xbb68>
   1d324:	b	1d354 <__assert_fail@plt+0xbb7c>
   1d328:	ldr	r0, [fp, #8]
   1d32c:	mvn	r1, #0
   1d330:	udiv	r0, r1, r0
   1d334:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d338:	cmp	r0, r1
   1d33c:	bcs	1d354 <__assert_fail@plt+0xbb7c>
   1d340:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d344:	ldr	r1, [fp, #8]
   1d348:	mul	r0, r0, r1
   1d34c:	str	r0, [fp, #-28]	; 0xffffffe4
   1d350:	b	1d858 <__assert_fail@plt+0xc080>
   1d354:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d358:	ldr	r1, [fp, #8]
   1d35c:	mul	r0, r0, r1
   1d360:	str	r0, [fp, #-28]	; 0xffffffe4
   1d364:	b	1d868 <__assert_fail@plt+0xc090>
   1d368:	b	1d36c <__assert_fail@plt+0xbb94>
   1d36c:	ldr	r0, [fp, #8]
   1d370:	cmp	r0, #0
   1d374:	bge	1d504 <__assert_fail@plt+0xbd2c>
   1d378:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d37c:	cmp	r0, #0
   1d380:	bge	1d46c <__assert_fail@plt+0xbc94>
   1d384:	b	1d388 <__assert_fail@plt+0xbbb0>
   1d388:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d38c:	ldr	r1, [fp, #8]
   1d390:	asr	r3, r1, #31
   1d394:	mvn	r2, #0
   1d398:	mvn	ip, #-2147483648	; 0x80000000
   1d39c:	str	r0, [fp, #-72]	; 0xffffffb8
   1d3a0:	mov	r0, r2
   1d3a4:	str	r1, [fp, #-76]	; 0xffffffb4
   1d3a8:	mov	r1, ip
   1d3ac:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1d3b0:	bl	222f0 <__assert_fail@plt+0x10b18>
   1d3b4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1d3b8:	subs	r0, r2, r0
   1d3bc:	rscs	r1, r1, r2, asr #31
   1d3c0:	str	r0, [fp, #-80]	; 0xffffffb0
   1d3c4:	str	r1, [fp, #-84]	; 0xffffffac
   1d3c8:	blt	1d5e4 <__assert_fail@plt+0xbe0c>
   1d3cc:	b	1d5f8 <__assert_fail@plt+0xbe20>
   1d3d0:	b	1d3d4 <__assert_fail@plt+0xbbfc>
   1d3d4:	ldr	r0, [pc, #196]	; 1d4a0 <__assert_fail@plt+0xbcc8>
   1d3d8:	ldr	r1, [fp, #8]
   1d3dc:	cmp	r1, r0
   1d3e0:	blt	1d3f8 <__assert_fail@plt+0xbc20>
   1d3e4:	b	1d410 <__assert_fail@plt+0xbc38>
   1d3e8:	ldr	r0, [fp, #8]
   1d3ec:	movw	r1, #0
   1d3f0:	cmp	r1, r0
   1d3f4:	bge	1d410 <__assert_fail@plt+0xbc38>
   1d3f8:	mov	r0, #0
   1d3fc:	mvn	r1, #0
   1d400:	str	r1, [fp, #-88]	; 0xffffffa8
   1d404:	str	r0, [fp, #-92]	; 0xffffffa4
   1d408:	b	1d444 <__assert_fail@plt+0xbc6c>
   1d40c:	svcvc	0x00ffffff
   1d410:	ldr	r0, [fp, #8]
   1d414:	rsb	r0, r0, #0
   1d418:	asr	r3, r0, #31
   1d41c:	mvn	r1, #0
   1d420:	mvn	r2, #-2147483648	; 0x80000000
   1d424:	str	r0, [fp, #-96]	; 0xffffffa0
   1d428:	mov	r0, r1
   1d42c:	mov	r1, r2
   1d430:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1d434:	bl	222f0 <__assert_fail@plt+0x10b18>
   1d438:	str	r0, [fp, #-88]	; 0xffffffa8
   1d43c:	str	r1, [fp, #-92]	; 0xffffffa4
   1d440:	b	1d444 <__assert_fail@plt+0xbc6c>
   1d444:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1d448:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1d44c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d450:	mvn	r2, r2
   1d454:	subs	r1, r2, r1
   1d458:	rscs	r0, r0, r2, asr #31
   1d45c:	str	r1, [fp, #-100]	; 0xffffff9c
   1d460:	str	r0, [fp, #-104]	; 0xffffff98
   1d464:	bge	1d5e4 <__assert_fail@plt+0xbe0c>
   1d468:	b	1d5f8 <__assert_fail@plt+0xbe20>
   1d46c:	ldr	r0, [fp, #8]
   1d470:	cmn	r0, #1
   1d474:	bne	1d4c4 <__assert_fail@plt+0xbcec>
   1d478:	b	1d47c <__assert_fail@plt+0xbca4>
   1d47c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d480:	mov	r1, #-2147483648	; 0x80000000
   1d484:	add	r1, r1, r0, asr #31
   1d488:	rsbs	r0, r0, #0
   1d48c:	rscs	r1, r1, #0
   1d490:	str	r0, [fp, #-108]	; 0xffffff94
   1d494:	str	r1, [fp, #-112]	; 0xffffff90
   1d498:	blt	1d5e4 <__assert_fail@plt+0xbe0c>
   1d49c:	b	1d5f8 <__assert_fail@plt+0xbe20>
   1d4a0:	andhi	r0, r0, r1
   1d4a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d4a8:	movw	r1, #0
   1d4ac:	cmp	r1, r0
   1d4b0:	bge	1d5f8 <__assert_fail@plt+0xbe20>
   1d4b4:	mov	r0, #0
   1d4b8:	cmp	r0, #0
   1d4bc:	bne	1d5e4 <__assert_fail@plt+0xbe0c>
   1d4c0:	b	1d5f8 <__assert_fail@plt+0xbe20>
   1d4c4:	ldr	r0, [fp, #8]
   1d4c8:	asr	r3, r0, #31
   1d4cc:	mov	r1, #0
   1d4d0:	mov	r2, #-2147483648	; 0x80000000
   1d4d4:	str	r0, [fp, #-116]	; 0xffffff8c
   1d4d8:	mov	r0, r1
   1d4dc:	mov	r1, r2
   1d4e0:	ldr	r2, [fp, #-116]	; 0xffffff8c
   1d4e4:	bl	222f0 <__assert_fail@plt+0x10b18>
   1d4e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d4ec:	subs	r0, r0, r2
   1d4f0:	sbcs	r1, r1, r2, asr #31
   1d4f4:	str	r0, [fp, #-120]	; 0xffffff88
   1d4f8:	str	r1, [fp, #-124]	; 0xffffff84
   1d4fc:	blt	1d5e4 <__assert_fail@plt+0xbe0c>
   1d500:	b	1d5f8 <__assert_fail@plt+0xbe20>
   1d504:	ldr	r0, [fp, #8]
   1d508:	cmp	r0, #0
   1d50c:	bne	1d514 <__assert_fail@plt+0xbd3c>
   1d510:	b	1d5f8 <__assert_fail@plt+0xbe20>
   1d514:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d518:	cmp	r0, #0
   1d51c:	bge	1d5a4 <__assert_fail@plt+0xbdcc>
   1d520:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d524:	cmn	r0, #1
   1d528:	bne	1d564 <__assert_fail@plt+0xbd8c>
   1d52c:	b	1d530 <__assert_fail@plt+0xbd58>
   1d530:	ldr	r0, [fp, #8]
   1d534:	mov	r1, #-2147483648	; 0x80000000
   1d538:	add	r1, r1, r0, asr #31
   1d53c:	rsbs	r0, r0, #0
   1d540:	rscs	r1, r1, #0
   1d544:	str	r0, [fp, #-128]	; 0xffffff80
   1d548:	str	r1, [fp, #-132]	; 0xffffff7c
   1d54c:	blt	1d5e4 <__assert_fail@plt+0xbe0c>
   1d550:	b	1d5f8 <__assert_fail@plt+0xbe20>
   1d554:	mov	r0, #0
   1d558:	cmp	r0, #0
   1d55c:	bne	1d5e4 <__assert_fail@plt+0xbe0c>
   1d560:	b	1d5f8 <__assert_fail@plt+0xbe20>
   1d564:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d568:	asr	r3, r0, #31
   1d56c:	mov	r1, #0
   1d570:	mov	r2, #-2147483648	; 0x80000000
   1d574:	str	r0, [fp, #-136]	; 0xffffff78
   1d578:	mov	r0, r1
   1d57c:	mov	r1, r2
   1d580:	ldr	r2, [fp, #-136]	; 0xffffff78
   1d584:	bl	222f0 <__assert_fail@plt+0x10b18>
   1d588:	ldr	r2, [fp, #8]
   1d58c:	subs	r0, r0, r2
   1d590:	sbcs	r1, r1, r2, asr #31
   1d594:	str	r0, [fp, #-140]	; 0xffffff74
   1d598:	str	r1, [fp, #-144]	; 0xffffff70
   1d59c:	blt	1d5e4 <__assert_fail@plt+0xbe0c>
   1d5a0:	b	1d5f8 <__assert_fail@plt+0xbe20>
   1d5a4:	ldr	r0, [fp, #8]
   1d5a8:	asr	r3, r0, #31
   1d5ac:	mvn	r1, #0
   1d5b0:	mvn	r2, #-2147483648	; 0x80000000
   1d5b4:	str	r0, [fp, #-148]	; 0xffffff6c
   1d5b8:	mov	r0, r1
   1d5bc:	mov	r1, r2
   1d5c0:	ldr	r2, [fp, #-148]	; 0xffffff6c
   1d5c4:	bl	222f0 <__assert_fail@plt+0x10b18>
   1d5c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d5cc:	subs	r0, r0, r2
   1d5d0:	sbcs	r1, r1, r2, asr #31
   1d5d4:	str	r0, [fp, #-152]	; 0xffffff68
   1d5d8:	str	r1, [fp, #-156]	; 0xffffff64
   1d5dc:	bge	1d5f8 <__assert_fail@plt+0xbe20>
   1d5e0:	b	1d5e4 <__assert_fail@plt+0xbe0c>
   1d5e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d5e8:	ldr	r1, [fp, #8]
   1d5ec:	mul	r0, r0, r1
   1d5f0:	str	r0, [fp, #-28]	; 0xffffffe4
   1d5f4:	b	1d858 <__assert_fail@plt+0xc080>
   1d5f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d5fc:	ldr	r1, [fp, #8]
   1d600:	mul	r0, r0, r1
   1d604:	str	r0, [fp, #-28]	; 0xffffffe4
   1d608:	b	1d868 <__assert_fail@plt+0xc090>
   1d60c:	ldr	r0, [fp, #8]
   1d610:	cmp	r0, #0
   1d614:	bge	1d774 <__assert_fail@plt+0xbf9c>
   1d618:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d61c:	cmp	r0, #0
   1d620:	bge	1d6fc <__assert_fail@plt+0xbf24>
   1d624:	b	1d66c <__assert_fail@plt+0xbe94>
   1d628:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d62c:	ldr	r1, [fp, #8]
   1d630:	asr	r3, r1, #31
   1d634:	mvn	r2, #0
   1d638:	str	r0, [fp, #-160]	; 0xffffff60
   1d63c:	mov	r0, r2
   1d640:	str	r1, [fp, #-164]	; 0xffffff5c
   1d644:	mov	r1, r2
   1d648:	ldr	r2, [fp, #-164]	; 0xffffff5c
   1d64c:	bl	223c4 <__assert_fail@plt+0x10bec>
   1d650:	ldr	r2, [fp, #-160]	; 0xffffff60
   1d654:	subs	r0, r2, r0
   1d658:	rscs	r1, r1, r2, asr #31
   1d65c:	str	r0, [fp, #-168]	; 0xffffff58
   1d660:	str	r1, [fp, #-172]	; 0xffffff54
   1d664:	bcc	1d830 <__assert_fail@plt+0xc058>
   1d668:	b	1d844 <__assert_fail@plt+0xc06c>
   1d66c:	b	1d670 <__assert_fail@plt+0xbe98>
   1d670:	ldr	r0, [pc, #-472]	; 1d4a0 <__assert_fail@plt+0xbcc8>
   1d674:	ldr	r1, [fp, #8]
   1d678:	cmp	r1, r0
   1d67c:	blt	1d694 <__assert_fail@plt+0xbebc>
   1d680:	b	1d6a8 <__assert_fail@plt+0xbed0>
   1d684:	ldr	r0, [fp, #8]
   1d688:	movw	r1, #0
   1d68c:	cmp	r1, r0
   1d690:	bge	1d6a8 <__assert_fail@plt+0xbed0>
   1d694:	mov	r0, #1
   1d698:	mvn	r1, #0
   1d69c:	str	r1, [fp, #-176]	; 0xffffff50
   1d6a0:	str	r0, [fp, #-180]	; 0xffffff4c
   1d6a4:	b	1d6d4 <__assert_fail@plt+0xbefc>
   1d6a8:	ldr	r0, [fp, #8]
   1d6ac:	rsb	r0, r0, #0
   1d6b0:	asr	r3, r0, #31
   1d6b4:	mvn	r1, #0
   1d6b8:	str	r0, [fp, #-184]	; 0xffffff48
   1d6bc:	mov	r0, r1
   1d6c0:	ldr	r2, [fp, #-184]	; 0xffffff48
   1d6c4:	bl	223c4 <__assert_fail@plt+0x10bec>
   1d6c8:	str	r0, [fp, #-176]	; 0xffffff50
   1d6cc:	str	r1, [fp, #-180]	; 0xffffff4c
   1d6d0:	b	1d6d4 <__assert_fail@plt+0xbefc>
   1d6d4:	ldr	r0, [fp, #-180]	; 0xffffff4c
   1d6d8:	ldr	r1, [fp, #-176]	; 0xffffff50
   1d6dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d6e0:	mvn	r2, r2
   1d6e4:	subs	r1, r2, r1
   1d6e8:	rscs	r0, r0, r2, asr #31
   1d6ec:	str	r1, [sp, #188]	; 0xbc
   1d6f0:	str	r0, [sp, #184]	; 0xb8
   1d6f4:	bcs	1d830 <__assert_fail@plt+0xc058>
   1d6f8:	b	1d844 <__assert_fail@plt+0xc06c>
   1d6fc:	b	1d700 <__assert_fail@plt+0xbf28>
   1d700:	b	1d758 <__assert_fail@plt+0xbf80>
   1d704:	b	1d758 <__assert_fail@plt+0xbf80>
   1d708:	ldr	r0, [fp, #8]
   1d70c:	cmn	r0, #1
   1d710:	bne	1d758 <__assert_fail@plt+0xbf80>
   1d714:	b	1d718 <__assert_fail@plt+0xbf40>
   1d718:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d71c:	add	r0, r0, #0
   1d720:	movw	r1, #0
   1d724:	cmp	r1, r0
   1d728:	blt	1d830 <__assert_fail@plt+0xc058>
   1d72c:	b	1d844 <__assert_fail@plt+0xc06c>
   1d730:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d734:	movw	r1, #0
   1d738:	cmp	r1, r0
   1d73c:	bge	1d844 <__assert_fail@plt+0xc06c>
   1d740:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d744:	sub	r0, r0, #1
   1d748:	mvn	r1, #0
   1d74c:	cmp	r1, r0
   1d750:	blt	1d830 <__assert_fail@plt+0xc058>
   1d754:	b	1d844 <__assert_fail@plt+0xc06c>
   1d758:	ldr	r0, [fp, #8]
   1d75c:	movw	r1, #0
   1d760:	sdiv	r0, r1, r0
   1d764:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d768:	cmp	r0, r1
   1d76c:	blt	1d830 <__assert_fail@plt+0xc058>
   1d770:	b	1d844 <__assert_fail@plt+0xc06c>
   1d774:	ldr	r0, [fp, #8]
   1d778:	cmp	r0, #0
   1d77c:	bne	1d784 <__assert_fail@plt+0xbfac>
   1d780:	b	1d844 <__assert_fail@plt+0xc06c>
   1d784:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d788:	cmp	r0, #0
   1d78c:	bge	1d7f8 <__assert_fail@plt+0xc020>
   1d790:	b	1d794 <__assert_fail@plt+0xbfbc>
   1d794:	b	1d7dc <__assert_fail@plt+0xc004>
   1d798:	b	1d7dc <__assert_fail@plt+0xc004>
   1d79c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d7a0:	cmn	r0, #1
   1d7a4:	bne	1d7dc <__assert_fail@plt+0xc004>
   1d7a8:	b	1d7ac <__assert_fail@plt+0xbfd4>
   1d7ac:	ldr	r0, [fp, #8]
   1d7b0:	add	r0, r0, #0
   1d7b4:	movw	r1, #0
   1d7b8:	cmp	r1, r0
   1d7bc:	blt	1d830 <__assert_fail@plt+0xc058>
   1d7c0:	b	1d844 <__assert_fail@plt+0xc06c>
   1d7c4:	ldr	r0, [fp, #8]
   1d7c8:	sub	r0, r0, #1
   1d7cc:	mvn	r1, #0
   1d7d0:	cmp	r1, r0
   1d7d4:	blt	1d830 <__assert_fail@plt+0xc058>
   1d7d8:	b	1d844 <__assert_fail@plt+0xc06c>
   1d7dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d7e0:	movw	r1, #0
   1d7e4:	sdiv	r0, r1, r0
   1d7e8:	ldr	r1, [fp, #8]
   1d7ec:	cmp	r0, r1
   1d7f0:	blt	1d830 <__assert_fail@plt+0xc058>
   1d7f4:	b	1d844 <__assert_fail@plt+0xc06c>
   1d7f8:	ldr	r0, [fp, #8]
   1d7fc:	asr	r3, r0, #31
   1d800:	mvn	r1, #0
   1d804:	str	r0, [sp, #180]	; 0xb4
   1d808:	mov	r0, r1
   1d80c:	ldr	r2, [sp, #180]	; 0xb4
   1d810:	bl	223c4 <__assert_fail@plt+0x10bec>
   1d814:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d818:	subs	r0, r0, r2
   1d81c:	sbcs	r1, r1, r2, asr #31
   1d820:	str	r0, [sp, #176]	; 0xb0
   1d824:	str	r1, [sp, #172]	; 0xac
   1d828:	bcs	1d844 <__assert_fail@plt+0xc06c>
   1d82c:	b	1d830 <__assert_fail@plt+0xc058>
   1d830:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d834:	ldr	r1, [fp, #8]
   1d838:	mul	r0, r0, r1
   1d83c:	str	r0, [fp, #-28]	; 0xffffffe4
   1d840:	b	1d858 <__assert_fail@plt+0xc080>
   1d844:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d848:	ldr	r1, [fp, #8]
   1d84c:	mul	r0, r0, r1
   1d850:	str	r0, [fp, #-28]	; 0xffffffe4
   1d854:	b	1d868 <__assert_fail@plt+0xc090>
   1d858:	ldr	r0, [pc, #-1108]	; 1d40c <__assert_fail@plt+0xbc34>
   1d85c:	str	r0, [sp, #168]	; 0xa8
   1d860:	b	1d888 <__assert_fail@plt+0xc0b0>
   1d864:			; <UNDEFINED> instruction: 0xffff8000
   1d868:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d86c:	cmp	r0, #64	; 0x40
   1d870:	movw	r0, #0
   1d874:	movlt	r0, #1
   1d878:	tst	r0, #1
   1d87c:	movw	r0, #64	; 0x40
   1d880:	moveq	r0, #0
   1d884:	str	r0, [sp, #168]	; 0xa8
   1d888:	ldr	r0, [sp, #168]	; 0xa8
   1d88c:	str	r0, [fp, #-32]	; 0xffffffe0
   1d890:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d894:	cmp	r0, #0
   1d898:	beq	1d8c8 <__assert_fail@plt+0xc0f0>
   1d89c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d8a0:	ldr	r1, [fp, #8]
   1d8a4:	sdiv	r0, r0, r1
   1d8a8:	str	r0, [fp, #-24]	; 0xffffffe8
   1d8ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d8b0:	mov	r1, r0
   1d8b4:	ldr	r2, [fp, #8]
   1d8b8:	sdiv	r3, r0, r2
   1d8bc:	mls	r0, r3, r2, r0
   1d8c0:	sub	r0, r1, r0
   1d8c4:	str	r0, [fp, #-28]	; 0xffffffe4
   1d8c8:	ldr	r0, [fp, #-4]
   1d8cc:	movw	r1, #0
   1d8d0:	cmp	r0, r1
   1d8d4:	bne	1d8e4 <__assert_fail@plt+0xc10c>
   1d8d8:	ldr	r0, [fp, #-8]
   1d8dc:	movw	r1, #0
   1d8e0:	str	r1, [r0]
   1d8e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d8e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d8ec:	sub	r0, r0, r1
   1d8f0:	ldr	r1, [fp, #-12]
   1d8f4:	cmp	r0, r1
   1d8f8:	bge	1ed30 <__assert_fail@plt+0xd558>
   1d8fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d900:	ldr	r1, [fp, #-12]
   1d904:	add	r1, r0, r1
   1d908:	mov	r2, #1
   1d90c:	cmp	r1, r0
   1d910:	movwvc	r2, #0
   1d914:	str	r1, [fp, #-24]	; 0xffffffe8
   1d918:	tst	r2, #1
   1d91c:	bne	1ed2c <__assert_fail@plt+0xd554>
   1d920:	ldr	r0, [fp, #-16]
   1d924:	movw	r1, #0
   1d928:	cmp	r1, r0
   1d92c:	bgt	1d940 <__assert_fail@plt+0xc168>
   1d930:	ldr	r0, [fp, #-16]
   1d934:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d938:	cmp	r0, r1
   1d93c:	blt	1ed2c <__assert_fail@plt+0xd554>
   1d940:	b	1dd1c <__assert_fail@plt+0xc544>
   1d944:	b	1d948 <__assert_fail@plt+0xc170>
   1d948:	ldr	r0, [fp, #8]
   1d94c:	cmp	r0, #0
   1d950:	bge	1da64 <__assert_fail@plt+0xc28c>
   1d954:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d958:	cmp	r0, #0
   1d95c:	bge	1d9e8 <__assert_fail@plt+0xc210>
   1d960:	b	1d964 <__assert_fail@plt+0xc18c>
   1d964:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d968:	ldr	r1, [fp, #8]
   1d96c:	movw	r2, #127	; 0x7f
   1d970:	sdiv	r1, r2, r1
   1d974:	cmp	r0, r1
   1d978:	blt	1db04 <__assert_fail@plt+0xc32c>
   1d97c:	b	1db1c <__assert_fail@plt+0xc344>
   1d980:	b	1d984 <__assert_fail@plt+0xc1ac>
   1d984:	ldr	r0, [pc, #-1260]	; 1d4a0 <__assert_fail@plt+0xbcc8>
   1d988:	ldr	r1, [fp, #8]
   1d98c:	cmp	r1, r0
   1d990:	blt	1d9a8 <__assert_fail@plt+0xc1d0>
   1d994:	b	1d9b4 <__assert_fail@plt+0xc1dc>
   1d998:	ldr	r0, [fp, #8]
   1d99c:	movw	r1, #0
   1d9a0:	cmp	r1, r0
   1d9a4:	bge	1d9b4 <__assert_fail@plt+0xc1dc>
   1d9a8:	movw	r0, #0
   1d9ac:	str	r0, [sp, #164]	; 0xa4
   1d9b0:	b	1d9cc <__assert_fail@plt+0xc1f4>
   1d9b4:	ldr	r0, [fp, #8]
   1d9b8:	movw	r1, #0
   1d9bc:	sub	r0, r1, r0
   1d9c0:	movw	r1, #127	; 0x7f
   1d9c4:	sdiv	r0, r1, r0
   1d9c8:	str	r0, [sp, #164]	; 0xa4
   1d9cc:	ldr	r0, [sp, #164]	; 0xa4
   1d9d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d9d4:	mvn	r2, #0
   1d9d8:	sub	r1, r2, r1
   1d9dc:	cmp	r0, r1
   1d9e0:	ble	1db04 <__assert_fail@plt+0xc32c>
   1d9e4:	b	1db1c <__assert_fail@plt+0xc344>
   1d9e8:	b	1d9ec <__assert_fail@plt+0xc214>
   1d9ec:	b	1da48 <__assert_fail@plt+0xc270>
   1d9f0:	b	1da48 <__assert_fail@plt+0xc270>
   1d9f4:	ldr	r0, [fp, #8]
   1d9f8:	cmn	r0, #1
   1d9fc:	bne	1da48 <__assert_fail@plt+0xc270>
   1da00:	b	1da04 <__assert_fail@plt+0xc22c>
   1da04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da08:	mvn	r1, #127	; 0x7f
   1da0c:	add	r0, r0, r1
   1da10:	movw	r1, #0
   1da14:	cmp	r1, r0
   1da18:	blt	1db04 <__assert_fail@plt+0xc32c>
   1da1c:	b	1db1c <__assert_fail@plt+0xc344>
   1da20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da24:	movw	r1, #0
   1da28:	cmp	r1, r0
   1da2c:	bge	1db1c <__assert_fail@plt+0xc344>
   1da30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da34:	sub	r0, r0, #1
   1da38:	movw	r1, #127	; 0x7f
   1da3c:	cmp	r1, r0
   1da40:	blt	1db04 <__assert_fail@plt+0xc32c>
   1da44:	b	1db1c <__assert_fail@plt+0xc344>
   1da48:	ldr	r0, [fp, #8]
   1da4c:	mvn	r1, #127	; 0x7f
   1da50:	sdiv	r0, r1, r0
   1da54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1da58:	cmp	r0, r1
   1da5c:	blt	1db04 <__assert_fail@plt+0xc32c>
   1da60:	b	1db1c <__assert_fail@plt+0xc344>
   1da64:	ldr	r0, [fp, #8]
   1da68:	cmp	r0, #0
   1da6c:	bne	1da74 <__assert_fail@plt+0xc29c>
   1da70:	b	1db1c <__assert_fail@plt+0xc344>
   1da74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da78:	cmp	r0, #0
   1da7c:	bge	1daec <__assert_fail@plt+0xc314>
   1da80:	b	1da84 <__assert_fail@plt+0xc2ac>
   1da84:	b	1dad0 <__assert_fail@plt+0xc2f8>
   1da88:	b	1dad0 <__assert_fail@plt+0xc2f8>
   1da8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da90:	cmn	r0, #1
   1da94:	bne	1dad0 <__assert_fail@plt+0xc2f8>
   1da98:	b	1da9c <__assert_fail@plt+0xc2c4>
   1da9c:	ldr	r0, [fp, #8]
   1daa0:	mvn	r1, #127	; 0x7f
   1daa4:	add	r0, r0, r1
   1daa8:	movw	r1, #0
   1daac:	cmp	r1, r0
   1dab0:	blt	1db04 <__assert_fail@plt+0xc32c>
   1dab4:	b	1db1c <__assert_fail@plt+0xc344>
   1dab8:	ldr	r0, [fp, #8]
   1dabc:	sub	r0, r0, #1
   1dac0:	movw	r1, #127	; 0x7f
   1dac4:	cmp	r1, r0
   1dac8:	blt	1db04 <__assert_fail@plt+0xc32c>
   1dacc:	b	1db1c <__assert_fail@plt+0xc344>
   1dad0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dad4:	mvn	r1, #127	; 0x7f
   1dad8:	sdiv	r0, r1, r0
   1dadc:	ldr	r1, [fp, #8]
   1dae0:	cmp	r0, r1
   1dae4:	blt	1db04 <__assert_fail@plt+0xc32c>
   1dae8:	b	1db1c <__assert_fail@plt+0xc344>
   1daec:	ldr	r0, [fp, #8]
   1daf0:	movw	r1, #127	; 0x7f
   1daf4:	sdiv	r0, r1, r0
   1daf8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dafc:	cmp	r0, r1
   1db00:	bge	1db1c <__assert_fail@plt+0xc344>
   1db04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db08:	ldr	r1, [fp, #8]
   1db0c:	mul	r0, r0, r1
   1db10:	sxtb	r0, r0
   1db14:	str	r0, [fp, #-28]	; 0xffffffe4
   1db18:	b	1ed2c <__assert_fail@plt+0xd554>
   1db1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db20:	ldr	r1, [fp, #8]
   1db24:	mul	r0, r0, r1
   1db28:	sxtb	r0, r0
   1db2c:	str	r0, [fp, #-28]	; 0xffffffe4
   1db30:	b	1ed30 <__assert_fail@plt+0xd558>
   1db34:	ldr	r0, [fp, #8]
   1db38:	cmp	r0, #0
   1db3c:	bge	1dc4c <__assert_fail@plt+0xc474>
   1db40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db44:	cmp	r0, #0
   1db48:	bge	1dbd4 <__assert_fail@plt+0xc3fc>
   1db4c:	b	1db50 <__assert_fail@plt+0xc378>
   1db50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db54:	ldr	r1, [fp, #8]
   1db58:	movw	r2, #255	; 0xff
   1db5c:	sdiv	r1, r2, r1
   1db60:	cmp	r0, r1
   1db64:	blt	1dce8 <__assert_fail@plt+0xc510>
   1db68:	b	1dd04 <__assert_fail@plt+0xc52c>
   1db6c:	b	1db70 <__assert_fail@plt+0xc398>
   1db70:	ldr	r0, [pc, #-1752]	; 1d4a0 <__assert_fail@plt+0xbcc8>
   1db74:	ldr	r1, [fp, #8]
   1db78:	cmp	r1, r0
   1db7c:	blt	1db94 <__assert_fail@plt+0xc3bc>
   1db80:	b	1dba0 <__assert_fail@plt+0xc3c8>
   1db84:	ldr	r0, [fp, #8]
   1db88:	movw	r1, #0
   1db8c:	cmp	r1, r0
   1db90:	bge	1dba0 <__assert_fail@plt+0xc3c8>
   1db94:	movw	r0, #0
   1db98:	str	r0, [sp, #160]	; 0xa0
   1db9c:	b	1dbb8 <__assert_fail@plt+0xc3e0>
   1dba0:	ldr	r0, [fp, #8]
   1dba4:	movw	r1, #0
   1dba8:	sub	r0, r1, r0
   1dbac:	movw	r1, #255	; 0xff
   1dbb0:	sdiv	r0, r1, r0
   1dbb4:	str	r0, [sp, #160]	; 0xa0
   1dbb8:	ldr	r0, [sp, #160]	; 0xa0
   1dbbc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dbc0:	mvn	r2, #0
   1dbc4:	sub	r1, r2, r1
   1dbc8:	cmp	r0, r1
   1dbcc:	ble	1dce8 <__assert_fail@plt+0xc510>
   1dbd0:	b	1dd04 <__assert_fail@plt+0xc52c>
   1dbd4:	b	1dbd8 <__assert_fail@plt+0xc400>
   1dbd8:	b	1dc30 <__assert_fail@plt+0xc458>
   1dbdc:	b	1dc30 <__assert_fail@plt+0xc458>
   1dbe0:	ldr	r0, [fp, #8]
   1dbe4:	cmn	r0, #1
   1dbe8:	bne	1dc30 <__assert_fail@plt+0xc458>
   1dbec:	b	1dbf0 <__assert_fail@plt+0xc418>
   1dbf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dbf4:	add	r0, r0, #0
   1dbf8:	movw	r1, #0
   1dbfc:	cmp	r1, r0
   1dc00:	blt	1dce8 <__assert_fail@plt+0xc510>
   1dc04:	b	1dd04 <__assert_fail@plt+0xc52c>
   1dc08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc0c:	movw	r1, #0
   1dc10:	cmp	r1, r0
   1dc14:	bge	1dd04 <__assert_fail@plt+0xc52c>
   1dc18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc1c:	sub	r0, r0, #1
   1dc20:	mvn	r1, #0
   1dc24:	cmp	r1, r0
   1dc28:	blt	1dce8 <__assert_fail@plt+0xc510>
   1dc2c:	b	1dd04 <__assert_fail@plt+0xc52c>
   1dc30:	ldr	r0, [fp, #8]
   1dc34:	movw	r1, #0
   1dc38:	sdiv	r0, r1, r0
   1dc3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dc40:	cmp	r0, r1
   1dc44:	blt	1dce8 <__assert_fail@plt+0xc510>
   1dc48:	b	1dd04 <__assert_fail@plt+0xc52c>
   1dc4c:	ldr	r0, [fp, #8]
   1dc50:	cmp	r0, #0
   1dc54:	bne	1dc5c <__assert_fail@plt+0xc484>
   1dc58:	b	1dd04 <__assert_fail@plt+0xc52c>
   1dc5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc60:	cmp	r0, #0
   1dc64:	bge	1dcd0 <__assert_fail@plt+0xc4f8>
   1dc68:	b	1dc6c <__assert_fail@plt+0xc494>
   1dc6c:	b	1dcb4 <__assert_fail@plt+0xc4dc>
   1dc70:	b	1dcb4 <__assert_fail@plt+0xc4dc>
   1dc74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc78:	cmn	r0, #1
   1dc7c:	bne	1dcb4 <__assert_fail@plt+0xc4dc>
   1dc80:	b	1dc84 <__assert_fail@plt+0xc4ac>
   1dc84:	ldr	r0, [fp, #8]
   1dc88:	add	r0, r0, #0
   1dc8c:	movw	r1, #0
   1dc90:	cmp	r1, r0
   1dc94:	blt	1dce8 <__assert_fail@plt+0xc510>
   1dc98:	b	1dd04 <__assert_fail@plt+0xc52c>
   1dc9c:	ldr	r0, [fp, #8]
   1dca0:	sub	r0, r0, #1
   1dca4:	mvn	r1, #0
   1dca8:	cmp	r1, r0
   1dcac:	blt	1dce8 <__assert_fail@plt+0xc510>
   1dcb0:	b	1dd04 <__assert_fail@plt+0xc52c>
   1dcb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dcb8:	movw	r1, #0
   1dcbc:	sdiv	r0, r1, r0
   1dcc0:	ldr	r1, [fp, #8]
   1dcc4:	cmp	r0, r1
   1dcc8:	blt	1dce8 <__assert_fail@plt+0xc510>
   1dccc:	b	1dd04 <__assert_fail@plt+0xc52c>
   1dcd0:	ldr	r0, [fp, #8]
   1dcd4:	movw	r1, #255	; 0xff
   1dcd8:	sdiv	r0, r1, r0
   1dcdc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dce0:	cmp	r0, r1
   1dce4:	bge	1dd04 <__assert_fail@plt+0xc52c>
   1dce8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dcec:	ldr	r1, [fp, #8]
   1dcf0:	mul	r0, r0, r1
   1dcf4:	and	r0, r0, #255	; 0xff
   1dcf8:	str	r0, [fp, #-28]	; 0xffffffe4
   1dcfc:	b	1ed2c <__assert_fail@plt+0xd554>
   1dd00:	andhi	r0, r0, r0
   1dd04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dd08:	ldr	r1, [fp, #8]
   1dd0c:	mul	r0, r0, r1
   1dd10:	and	r0, r0, #255	; 0xff
   1dd14:	str	r0, [fp, #-28]	; 0xffffffe4
   1dd18:	b	1ed30 <__assert_fail@plt+0xd558>
   1dd1c:	b	1e0f4 <__assert_fail@plt+0xc91c>
   1dd20:	b	1dd24 <__assert_fail@plt+0xc54c>
   1dd24:	ldr	r0, [fp, #8]
   1dd28:	cmp	r0, #0
   1dd2c:	bge	1de40 <__assert_fail@plt+0xc668>
   1dd30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dd34:	cmp	r0, #0
   1dd38:	bge	1ddc4 <__assert_fail@plt+0xc5ec>
   1dd3c:	b	1dd40 <__assert_fail@plt+0xc568>
   1dd40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dd44:	ldr	r1, [fp, #8]
   1dd48:	movw	r2, #32767	; 0x7fff
   1dd4c:	sdiv	r1, r2, r1
   1dd50:	cmp	r0, r1
   1dd54:	blt	1dee0 <__assert_fail@plt+0xc708>
   1dd58:	b	1def8 <__assert_fail@plt+0xc720>
   1dd5c:	b	1dd60 <__assert_fail@plt+0xc588>
   1dd60:	ldr	r0, [pc, #4084]	; 1ed5c <__assert_fail@plt+0xd584>
   1dd64:	ldr	r1, [fp, #8]
   1dd68:	cmp	r1, r0
   1dd6c:	blt	1dd84 <__assert_fail@plt+0xc5ac>
   1dd70:	b	1dd90 <__assert_fail@plt+0xc5b8>
   1dd74:	ldr	r0, [fp, #8]
   1dd78:	movw	r1, #0
   1dd7c:	cmp	r1, r0
   1dd80:	bge	1dd90 <__assert_fail@plt+0xc5b8>
   1dd84:	movw	r0, #0
   1dd88:	str	r0, [sp, #156]	; 0x9c
   1dd8c:	b	1dda8 <__assert_fail@plt+0xc5d0>
   1dd90:	ldr	r0, [fp, #8]
   1dd94:	movw	r1, #0
   1dd98:	sub	r0, r1, r0
   1dd9c:	movw	r1, #32767	; 0x7fff
   1dda0:	sdiv	r0, r1, r0
   1dda4:	str	r0, [sp, #156]	; 0x9c
   1dda8:	ldr	r0, [sp, #156]	; 0x9c
   1ddac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ddb0:	mvn	r2, #0
   1ddb4:	sub	r1, r2, r1
   1ddb8:	cmp	r0, r1
   1ddbc:	ble	1dee0 <__assert_fail@plt+0xc708>
   1ddc0:	b	1def8 <__assert_fail@plt+0xc720>
   1ddc4:	b	1ddc8 <__assert_fail@plt+0xc5f0>
   1ddc8:	b	1de24 <__assert_fail@plt+0xc64c>
   1ddcc:	b	1de24 <__assert_fail@plt+0xc64c>
   1ddd0:	ldr	r0, [fp, #8]
   1ddd4:	cmn	r0, #1
   1ddd8:	bne	1de24 <__assert_fail@plt+0xc64c>
   1dddc:	b	1dde0 <__assert_fail@plt+0xc608>
   1dde0:	ldr	r0, [pc, #3964]	; 1ed64 <__assert_fail@plt+0xd58c>
   1dde4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dde8:	add	r0, r1, r0
   1ddec:	movw	r1, #0
   1ddf0:	cmp	r1, r0
   1ddf4:	blt	1dee0 <__assert_fail@plt+0xc708>
   1ddf8:	b	1def8 <__assert_fail@plt+0xc720>
   1ddfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1de00:	movw	r1, #0
   1de04:	cmp	r1, r0
   1de08:	bge	1def8 <__assert_fail@plt+0xc720>
   1de0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1de10:	sub	r0, r0, #1
   1de14:	movw	r1, #32767	; 0x7fff
   1de18:	cmp	r1, r0
   1de1c:	blt	1dee0 <__assert_fail@plt+0xc708>
   1de20:	b	1def8 <__assert_fail@plt+0xc720>
   1de24:	ldr	r0, [pc, #3896]	; 1ed64 <__assert_fail@plt+0xd58c>
   1de28:	ldr	r1, [fp, #8]
   1de2c:	sdiv	r0, r0, r1
   1de30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1de34:	cmp	r0, r1
   1de38:	blt	1dee0 <__assert_fail@plt+0xc708>
   1de3c:	b	1def8 <__assert_fail@plt+0xc720>
   1de40:	ldr	r0, [fp, #8]
   1de44:	cmp	r0, #0
   1de48:	bne	1de50 <__assert_fail@plt+0xc678>
   1de4c:	b	1def8 <__assert_fail@plt+0xc720>
   1de50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1de54:	cmp	r0, #0
   1de58:	bge	1dec8 <__assert_fail@plt+0xc6f0>
   1de5c:	b	1de60 <__assert_fail@plt+0xc688>
   1de60:	b	1deac <__assert_fail@plt+0xc6d4>
   1de64:	b	1deac <__assert_fail@plt+0xc6d4>
   1de68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1de6c:	cmn	r0, #1
   1de70:	bne	1deac <__assert_fail@plt+0xc6d4>
   1de74:	b	1de78 <__assert_fail@plt+0xc6a0>
   1de78:	ldr	r0, [pc, #3812]	; 1ed64 <__assert_fail@plt+0xd58c>
   1de7c:	ldr	r1, [fp, #8]
   1de80:	add	r0, r1, r0
   1de84:	movw	r1, #0
   1de88:	cmp	r1, r0
   1de8c:	blt	1dee0 <__assert_fail@plt+0xc708>
   1de90:	b	1def8 <__assert_fail@plt+0xc720>
   1de94:	ldr	r0, [fp, #8]
   1de98:	sub	r0, r0, #1
   1de9c:	movw	r1, #32767	; 0x7fff
   1dea0:	cmp	r1, r0
   1dea4:	blt	1dee0 <__assert_fail@plt+0xc708>
   1dea8:	b	1def8 <__assert_fail@plt+0xc720>
   1deac:	ldr	r0, [pc, #3760]	; 1ed64 <__assert_fail@plt+0xd58c>
   1deb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1deb4:	sdiv	r0, r0, r1
   1deb8:	ldr	r1, [fp, #8]
   1debc:	cmp	r0, r1
   1dec0:	blt	1dee0 <__assert_fail@plt+0xc708>
   1dec4:	b	1def8 <__assert_fail@plt+0xc720>
   1dec8:	ldr	r0, [fp, #8]
   1decc:	movw	r1, #32767	; 0x7fff
   1ded0:	sdiv	r0, r1, r0
   1ded4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ded8:	cmp	r0, r1
   1dedc:	bge	1def8 <__assert_fail@plt+0xc720>
   1dee0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dee4:	ldr	r1, [fp, #8]
   1dee8:	mul	r0, r0, r1
   1deec:	sxth	r0, r0
   1def0:	str	r0, [fp, #-28]	; 0xffffffe4
   1def4:	b	1ed2c <__assert_fail@plt+0xd554>
   1def8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1defc:	ldr	r1, [fp, #8]
   1df00:	mul	r0, r0, r1
   1df04:	sxth	r0, r0
   1df08:	str	r0, [fp, #-28]	; 0xffffffe4
   1df0c:	b	1ed30 <__assert_fail@plt+0xd558>
   1df10:	ldr	r0, [fp, #8]
   1df14:	cmp	r0, #0
   1df18:	bge	1e028 <__assert_fail@plt+0xc850>
   1df1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1df20:	cmp	r0, #0
   1df24:	bge	1dfb0 <__assert_fail@plt+0xc7d8>
   1df28:	b	1df2c <__assert_fail@plt+0xc754>
   1df2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1df30:	ldr	r1, [fp, #8]
   1df34:	movw	r2, #65535	; 0xffff
   1df38:	sdiv	r1, r2, r1
   1df3c:	cmp	r0, r1
   1df40:	blt	1e0c4 <__assert_fail@plt+0xc8ec>
   1df44:	b	1e0dc <__assert_fail@plt+0xc904>
   1df48:	b	1df4c <__assert_fail@plt+0xc774>
   1df4c:	ldr	r0, [pc, #3592]	; 1ed5c <__assert_fail@plt+0xd584>
   1df50:	ldr	r1, [fp, #8]
   1df54:	cmp	r1, r0
   1df58:	blt	1df70 <__assert_fail@plt+0xc798>
   1df5c:	b	1df7c <__assert_fail@plt+0xc7a4>
   1df60:	ldr	r0, [fp, #8]
   1df64:	movw	r1, #0
   1df68:	cmp	r1, r0
   1df6c:	bge	1df7c <__assert_fail@plt+0xc7a4>
   1df70:	movw	r0, #0
   1df74:	str	r0, [sp, #152]	; 0x98
   1df78:	b	1df94 <__assert_fail@plt+0xc7bc>
   1df7c:	ldr	r0, [fp, #8]
   1df80:	movw	r1, #0
   1df84:	sub	r0, r1, r0
   1df88:	movw	r1, #65535	; 0xffff
   1df8c:	sdiv	r0, r1, r0
   1df90:	str	r0, [sp, #152]	; 0x98
   1df94:	ldr	r0, [sp, #152]	; 0x98
   1df98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1df9c:	mvn	r2, #0
   1dfa0:	sub	r1, r2, r1
   1dfa4:	cmp	r0, r1
   1dfa8:	ble	1e0c4 <__assert_fail@plt+0xc8ec>
   1dfac:	b	1e0dc <__assert_fail@plt+0xc904>
   1dfb0:	b	1dfb4 <__assert_fail@plt+0xc7dc>
   1dfb4:	b	1e00c <__assert_fail@plt+0xc834>
   1dfb8:	b	1e00c <__assert_fail@plt+0xc834>
   1dfbc:	ldr	r0, [fp, #8]
   1dfc0:	cmn	r0, #1
   1dfc4:	bne	1e00c <__assert_fail@plt+0xc834>
   1dfc8:	b	1dfcc <__assert_fail@plt+0xc7f4>
   1dfcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dfd0:	add	r0, r0, #0
   1dfd4:	movw	r1, #0
   1dfd8:	cmp	r1, r0
   1dfdc:	blt	1e0c4 <__assert_fail@plt+0xc8ec>
   1dfe0:	b	1e0dc <__assert_fail@plt+0xc904>
   1dfe4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dfe8:	movw	r1, #0
   1dfec:	cmp	r1, r0
   1dff0:	bge	1e0dc <__assert_fail@plt+0xc904>
   1dff4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dff8:	sub	r0, r0, #1
   1dffc:	mvn	r1, #0
   1e000:	cmp	r1, r0
   1e004:	blt	1e0c4 <__assert_fail@plt+0xc8ec>
   1e008:	b	1e0dc <__assert_fail@plt+0xc904>
   1e00c:	ldr	r0, [fp, #8]
   1e010:	movw	r1, #0
   1e014:	sdiv	r0, r1, r0
   1e018:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e01c:	cmp	r0, r1
   1e020:	blt	1e0c4 <__assert_fail@plt+0xc8ec>
   1e024:	b	1e0dc <__assert_fail@plt+0xc904>
   1e028:	ldr	r0, [fp, #8]
   1e02c:	cmp	r0, #0
   1e030:	bne	1e038 <__assert_fail@plt+0xc860>
   1e034:	b	1e0dc <__assert_fail@plt+0xc904>
   1e038:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e03c:	cmp	r0, #0
   1e040:	bge	1e0ac <__assert_fail@plt+0xc8d4>
   1e044:	b	1e048 <__assert_fail@plt+0xc870>
   1e048:	b	1e090 <__assert_fail@plt+0xc8b8>
   1e04c:	b	1e090 <__assert_fail@plt+0xc8b8>
   1e050:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e054:	cmn	r0, #1
   1e058:	bne	1e090 <__assert_fail@plt+0xc8b8>
   1e05c:	b	1e060 <__assert_fail@plt+0xc888>
   1e060:	ldr	r0, [fp, #8]
   1e064:	add	r0, r0, #0
   1e068:	movw	r1, #0
   1e06c:	cmp	r1, r0
   1e070:	blt	1e0c4 <__assert_fail@plt+0xc8ec>
   1e074:	b	1e0dc <__assert_fail@plt+0xc904>
   1e078:	ldr	r0, [fp, #8]
   1e07c:	sub	r0, r0, #1
   1e080:	mvn	r1, #0
   1e084:	cmp	r1, r0
   1e088:	blt	1e0c4 <__assert_fail@plt+0xc8ec>
   1e08c:	b	1e0dc <__assert_fail@plt+0xc904>
   1e090:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e094:	movw	r1, #0
   1e098:	sdiv	r0, r1, r0
   1e09c:	ldr	r1, [fp, #8]
   1e0a0:	cmp	r0, r1
   1e0a4:	blt	1e0c4 <__assert_fail@plt+0xc8ec>
   1e0a8:	b	1e0dc <__assert_fail@plt+0xc904>
   1e0ac:	ldr	r0, [fp, #8]
   1e0b0:	movw	r1, #65535	; 0xffff
   1e0b4:	sdiv	r0, r1, r0
   1e0b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e0bc:	cmp	r0, r1
   1e0c0:	bge	1e0dc <__assert_fail@plt+0xc904>
   1e0c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e0c8:	ldr	r1, [fp, #8]
   1e0cc:	mul	r0, r0, r1
   1e0d0:	uxth	r0, r0
   1e0d4:	str	r0, [fp, #-28]	; 0xffffffe4
   1e0d8:	b	1ed2c <__assert_fail@plt+0xd554>
   1e0dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e0e0:	ldr	r1, [fp, #8]
   1e0e4:	mul	r0, r0, r1
   1e0e8:	uxth	r0, r0
   1e0ec:	str	r0, [fp, #-28]	; 0xffffffe4
   1e0f0:	b	1ed30 <__assert_fail@plt+0xd558>
   1e0f4:	b	1e0f8 <__assert_fail@plt+0xc920>
   1e0f8:	b	1e0fc <__assert_fail@plt+0xc924>
   1e0fc:	ldr	r0, [fp, #8]
   1e100:	cmp	r0, #0
   1e104:	bge	1e208 <__assert_fail@plt+0xca30>
   1e108:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e10c:	cmp	r0, #0
   1e110:	bge	1e19c <__assert_fail@plt+0xc9c4>
   1e114:	b	1e118 <__assert_fail@plt+0xc940>
   1e118:	ldr	r0, [pc, #3128]	; 1ed58 <__assert_fail@plt+0xd580>
   1e11c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e120:	ldr	r2, [fp, #8]
   1e124:	sdiv	r0, r0, r2
   1e128:	cmp	r1, r0
   1e12c:	blt	1e298 <__assert_fail@plt+0xcac0>
   1e130:	b	1e2ac <__assert_fail@plt+0xcad4>
   1e134:	b	1e138 <__assert_fail@plt+0xc960>
   1e138:	ldr	r0, [pc, #3100]	; 1ed5c <__assert_fail@plt+0xd584>
   1e13c:	ldr	r1, [fp, #8]
   1e140:	cmp	r1, r0
   1e144:	blt	1e15c <__assert_fail@plt+0xc984>
   1e148:	b	1e168 <__assert_fail@plt+0xc990>
   1e14c:	ldr	r0, [fp, #8]
   1e150:	movw	r1, #0
   1e154:	cmp	r1, r0
   1e158:	bge	1e168 <__assert_fail@plt+0xc990>
   1e15c:	movw	r0, #0
   1e160:	str	r0, [sp, #148]	; 0x94
   1e164:	b	1e180 <__assert_fail@plt+0xc9a8>
   1e168:	ldr	r0, [pc, #3048]	; 1ed58 <__assert_fail@plt+0xd580>
   1e16c:	ldr	r1, [fp, #8]
   1e170:	movw	r2, #0
   1e174:	sub	r1, r2, r1
   1e178:	sdiv	r0, r0, r1
   1e17c:	str	r0, [sp, #148]	; 0x94
   1e180:	ldr	r0, [sp, #148]	; 0x94
   1e184:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e188:	mvn	r2, #0
   1e18c:	sub	r1, r2, r1
   1e190:	cmp	r0, r1
   1e194:	ble	1e298 <__assert_fail@plt+0xcac0>
   1e198:	b	1e2ac <__assert_fail@plt+0xcad4>
   1e19c:	ldr	r0, [fp, #8]
   1e1a0:	cmn	r0, #1
   1e1a4:	bne	1e1ec <__assert_fail@plt+0xca14>
   1e1a8:	b	1e1ac <__assert_fail@plt+0xc9d4>
   1e1ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e1b0:	add	r0, r0, #-2147483648	; 0x80000000
   1e1b4:	movw	r1, #0
   1e1b8:	cmp	r1, r0
   1e1bc:	blt	1e298 <__assert_fail@plt+0xcac0>
   1e1c0:	b	1e2ac <__assert_fail@plt+0xcad4>
   1e1c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e1c8:	movw	r1, #0
   1e1cc:	cmp	r1, r0
   1e1d0:	bge	1e2ac <__assert_fail@plt+0xcad4>
   1e1d4:	ldr	r0, [pc, #2940]	; 1ed58 <__assert_fail@plt+0xd580>
   1e1d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e1dc:	sub	r1, r1, #1
   1e1e0:	cmp	r0, r1
   1e1e4:	blt	1e298 <__assert_fail@plt+0xcac0>
   1e1e8:	b	1e2ac <__assert_fail@plt+0xcad4>
   1e1ec:	ldr	r0, [pc, #2924]	; 1ed60 <__assert_fail@plt+0xd588>
   1e1f0:	ldr	r1, [fp, #8]
   1e1f4:	sdiv	r0, r0, r1
   1e1f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e1fc:	cmp	r0, r1
   1e200:	blt	1e298 <__assert_fail@plt+0xcac0>
   1e204:	b	1e2ac <__assert_fail@plt+0xcad4>
   1e208:	ldr	r0, [fp, #8]
   1e20c:	cmp	r0, #0
   1e210:	bne	1e218 <__assert_fail@plt+0xca40>
   1e214:	b	1e2ac <__assert_fail@plt+0xcad4>
   1e218:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e21c:	cmp	r0, #0
   1e220:	bge	1e280 <__assert_fail@plt+0xcaa8>
   1e224:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e228:	cmn	r0, #1
   1e22c:	bne	1e264 <__assert_fail@plt+0xca8c>
   1e230:	b	1e234 <__assert_fail@plt+0xca5c>
   1e234:	ldr	r0, [fp, #8]
   1e238:	add	r0, r0, #-2147483648	; 0x80000000
   1e23c:	movw	r1, #0
   1e240:	cmp	r1, r0
   1e244:	blt	1e298 <__assert_fail@plt+0xcac0>
   1e248:	b	1e2ac <__assert_fail@plt+0xcad4>
   1e24c:	ldr	r0, [pc, #2820]	; 1ed58 <__assert_fail@plt+0xd580>
   1e250:	ldr	r1, [fp, #8]
   1e254:	sub	r1, r1, #1
   1e258:	cmp	r0, r1
   1e25c:	blt	1e298 <__assert_fail@plt+0xcac0>
   1e260:	b	1e2ac <__assert_fail@plt+0xcad4>
   1e264:	ldr	r0, [pc, #2804]	; 1ed60 <__assert_fail@plt+0xd588>
   1e268:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e26c:	sdiv	r0, r0, r1
   1e270:	ldr	r1, [fp, #8]
   1e274:	cmp	r0, r1
   1e278:	blt	1e298 <__assert_fail@plt+0xcac0>
   1e27c:	b	1e2ac <__assert_fail@plt+0xcad4>
   1e280:	ldr	r0, [pc, #2768]	; 1ed58 <__assert_fail@plt+0xd580>
   1e284:	ldr	r1, [fp, #8]
   1e288:	sdiv	r0, r0, r1
   1e28c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e290:	cmp	r0, r1
   1e294:	bge	1e2ac <__assert_fail@plt+0xcad4>
   1e298:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e29c:	ldr	r1, [fp, #8]
   1e2a0:	mul	r0, r0, r1
   1e2a4:	str	r0, [fp, #-28]	; 0xffffffe4
   1e2a8:	b	1ed2c <__assert_fail@plt+0xd554>
   1e2ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e2b0:	ldr	r1, [fp, #8]
   1e2b4:	mul	r0, r0, r1
   1e2b8:	str	r0, [fp, #-28]	; 0xffffffe4
   1e2bc:	b	1ed30 <__assert_fail@plt+0xd558>
   1e2c0:	ldr	r0, [fp, #8]
   1e2c4:	cmp	r0, #0
   1e2c8:	bge	1e3d8 <__assert_fail@plt+0xcc00>
   1e2cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e2d0:	cmp	r0, #0
   1e2d4:	bge	1e360 <__assert_fail@plt+0xcb88>
   1e2d8:	b	1e2f8 <__assert_fail@plt+0xcb20>
   1e2dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e2e0:	ldr	r1, [fp, #8]
   1e2e4:	mvn	r2, #0
   1e2e8:	udiv	r1, r2, r1
   1e2ec:	cmp	r0, r1
   1e2f0:	bcc	1e474 <__assert_fail@plt+0xcc9c>
   1e2f4:	b	1e488 <__assert_fail@plt+0xccb0>
   1e2f8:	b	1e2fc <__assert_fail@plt+0xcb24>
   1e2fc:	ldr	r0, [pc, #2648]	; 1ed5c <__assert_fail@plt+0xd584>
   1e300:	ldr	r1, [fp, #8]
   1e304:	cmp	r1, r0
   1e308:	blt	1e320 <__assert_fail@plt+0xcb48>
   1e30c:	b	1e32c <__assert_fail@plt+0xcb54>
   1e310:	ldr	r0, [fp, #8]
   1e314:	movw	r1, #0
   1e318:	cmp	r1, r0
   1e31c:	bge	1e32c <__assert_fail@plt+0xcb54>
   1e320:	movw	r0, #1
   1e324:	str	r0, [sp, #144]	; 0x90
   1e328:	b	1e344 <__assert_fail@plt+0xcb6c>
   1e32c:	ldr	r0, [fp, #8]
   1e330:	movw	r1, #0
   1e334:	sub	r0, r1, r0
   1e338:	mvn	r1, #0
   1e33c:	udiv	r0, r1, r0
   1e340:	str	r0, [sp, #144]	; 0x90
   1e344:	ldr	r0, [sp, #144]	; 0x90
   1e348:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e34c:	mvn	r2, #0
   1e350:	sub	r1, r2, r1
   1e354:	cmp	r0, r1
   1e358:	bls	1e474 <__assert_fail@plt+0xcc9c>
   1e35c:	b	1e488 <__assert_fail@plt+0xccb0>
   1e360:	b	1e364 <__assert_fail@plt+0xcb8c>
   1e364:	b	1e3bc <__assert_fail@plt+0xcbe4>
   1e368:	b	1e3bc <__assert_fail@plt+0xcbe4>
   1e36c:	ldr	r0, [fp, #8]
   1e370:	cmn	r0, #1
   1e374:	bne	1e3bc <__assert_fail@plt+0xcbe4>
   1e378:	b	1e37c <__assert_fail@plt+0xcba4>
   1e37c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e380:	add	r0, r0, #0
   1e384:	movw	r1, #0
   1e388:	cmp	r1, r0
   1e38c:	blt	1e474 <__assert_fail@plt+0xcc9c>
   1e390:	b	1e488 <__assert_fail@plt+0xccb0>
   1e394:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e398:	movw	r1, #0
   1e39c:	cmp	r1, r0
   1e3a0:	bge	1e488 <__assert_fail@plt+0xccb0>
   1e3a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e3a8:	sub	r0, r0, #1
   1e3ac:	mvn	r1, #0
   1e3b0:	cmp	r1, r0
   1e3b4:	blt	1e474 <__assert_fail@plt+0xcc9c>
   1e3b8:	b	1e488 <__assert_fail@plt+0xccb0>
   1e3bc:	ldr	r0, [fp, #8]
   1e3c0:	movw	r1, #0
   1e3c4:	sdiv	r0, r1, r0
   1e3c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e3cc:	cmp	r0, r1
   1e3d0:	blt	1e474 <__assert_fail@plt+0xcc9c>
   1e3d4:	b	1e488 <__assert_fail@plt+0xccb0>
   1e3d8:	ldr	r0, [fp, #8]
   1e3dc:	cmp	r0, #0
   1e3e0:	bne	1e3e8 <__assert_fail@plt+0xcc10>
   1e3e4:	b	1e488 <__assert_fail@plt+0xccb0>
   1e3e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e3ec:	cmp	r0, #0
   1e3f0:	bge	1e45c <__assert_fail@plt+0xcc84>
   1e3f4:	b	1e3f8 <__assert_fail@plt+0xcc20>
   1e3f8:	b	1e440 <__assert_fail@plt+0xcc68>
   1e3fc:	b	1e440 <__assert_fail@plt+0xcc68>
   1e400:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e404:	cmn	r0, #1
   1e408:	bne	1e440 <__assert_fail@plt+0xcc68>
   1e40c:	b	1e410 <__assert_fail@plt+0xcc38>
   1e410:	ldr	r0, [fp, #8]
   1e414:	add	r0, r0, #0
   1e418:	movw	r1, #0
   1e41c:	cmp	r1, r0
   1e420:	blt	1e474 <__assert_fail@plt+0xcc9c>
   1e424:	b	1e488 <__assert_fail@plt+0xccb0>
   1e428:	ldr	r0, [fp, #8]
   1e42c:	sub	r0, r0, #1
   1e430:	mvn	r1, #0
   1e434:	cmp	r1, r0
   1e438:	blt	1e474 <__assert_fail@plt+0xcc9c>
   1e43c:	b	1e488 <__assert_fail@plt+0xccb0>
   1e440:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e444:	movw	r1, #0
   1e448:	sdiv	r0, r1, r0
   1e44c:	ldr	r1, [fp, #8]
   1e450:	cmp	r0, r1
   1e454:	blt	1e474 <__assert_fail@plt+0xcc9c>
   1e458:	b	1e488 <__assert_fail@plt+0xccb0>
   1e45c:	ldr	r0, [fp, #8]
   1e460:	mvn	r1, #0
   1e464:	udiv	r0, r1, r0
   1e468:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e46c:	cmp	r0, r1
   1e470:	bcs	1e488 <__assert_fail@plt+0xccb0>
   1e474:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e478:	ldr	r1, [fp, #8]
   1e47c:	mul	r0, r0, r1
   1e480:	str	r0, [fp, #-28]	; 0xffffffe4
   1e484:	b	1ed2c <__assert_fail@plt+0xd554>
   1e488:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e48c:	ldr	r1, [fp, #8]
   1e490:	mul	r0, r0, r1
   1e494:	str	r0, [fp, #-28]	; 0xffffffe4
   1e498:	b	1ed30 <__assert_fail@plt+0xd558>
   1e49c:	b	1e4a0 <__assert_fail@plt+0xccc8>
   1e4a0:	b	1e4a4 <__assert_fail@plt+0xcccc>
   1e4a4:	ldr	r0, [fp, #8]
   1e4a8:	cmp	r0, #0
   1e4ac:	bge	1e5b0 <__assert_fail@plt+0xcdd8>
   1e4b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e4b4:	cmp	r0, #0
   1e4b8:	bge	1e544 <__assert_fail@plt+0xcd6c>
   1e4bc:	b	1e4c0 <__assert_fail@plt+0xcce8>
   1e4c0:	ldr	r0, [pc, #2192]	; 1ed58 <__assert_fail@plt+0xd580>
   1e4c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e4c8:	ldr	r2, [fp, #8]
   1e4cc:	sdiv	r0, r0, r2
   1e4d0:	cmp	r1, r0
   1e4d4:	blt	1e640 <__assert_fail@plt+0xce68>
   1e4d8:	b	1e654 <__assert_fail@plt+0xce7c>
   1e4dc:	b	1e4e0 <__assert_fail@plt+0xcd08>
   1e4e0:	ldr	r0, [pc, #2164]	; 1ed5c <__assert_fail@plt+0xd584>
   1e4e4:	ldr	r1, [fp, #8]
   1e4e8:	cmp	r1, r0
   1e4ec:	blt	1e504 <__assert_fail@plt+0xcd2c>
   1e4f0:	b	1e510 <__assert_fail@plt+0xcd38>
   1e4f4:	ldr	r0, [fp, #8]
   1e4f8:	movw	r1, #0
   1e4fc:	cmp	r1, r0
   1e500:	bge	1e510 <__assert_fail@plt+0xcd38>
   1e504:	movw	r0, #0
   1e508:	str	r0, [sp, #140]	; 0x8c
   1e50c:	b	1e528 <__assert_fail@plt+0xcd50>
   1e510:	ldr	r0, [pc, #2112]	; 1ed58 <__assert_fail@plt+0xd580>
   1e514:	ldr	r1, [fp, #8]
   1e518:	movw	r2, #0
   1e51c:	sub	r1, r2, r1
   1e520:	sdiv	r0, r0, r1
   1e524:	str	r0, [sp, #140]	; 0x8c
   1e528:	ldr	r0, [sp, #140]	; 0x8c
   1e52c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e530:	mvn	r2, #0
   1e534:	sub	r1, r2, r1
   1e538:	cmp	r0, r1
   1e53c:	ble	1e640 <__assert_fail@plt+0xce68>
   1e540:	b	1e654 <__assert_fail@plt+0xce7c>
   1e544:	ldr	r0, [fp, #8]
   1e548:	cmn	r0, #1
   1e54c:	bne	1e594 <__assert_fail@plt+0xcdbc>
   1e550:	b	1e554 <__assert_fail@plt+0xcd7c>
   1e554:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e558:	add	r0, r0, #-2147483648	; 0x80000000
   1e55c:	movw	r1, #0
   1e560:	cmp	r1, r0
   1e564:	blt	1e640 <__assert_fail@plt+0xce68>
   1e568:	b	1e654 <__assert_fail@plt+0xce7c>
   1e56c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e570:	movw	r1, #0
   1e574:	cmp	r1, r0
   1e578:	bge	1e654 <__assert_fail@plt+0xce7c>
   1e57c:	ldr	r0, [pc, #2004]	; 1ed58 <__assert_fail@plt+0xd580>
   1e580:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e584:	sub	r1, r1, #1
   1e588:	cmp	r0, r1
   1e58c:	blt	1e640 <__assert_fail@plt+0xce68>
   1e590:	b	1e654 <__assert_fail@plt+0xce7c>
   1e594:	ldr	r0, [pc, #1988]	; 1ed60 <__assert_fail@plt+0xd588>
   1e598:	ldr	r1, [fp, #8]
   1e59c:	sdiv	r0, r0, r1
   1e5a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e5a4:	cmp	r0, r1
   1e5a8:	blt	1e640 <__assert_fail@plt+0xce68>
   1e5ac:	b	1e654 <__assert_fail@plt+0xce7c>
   1e5b0:	ldr	r0, [fp, #8]
   1e5b4:	cmp	r0, #0
   1e5b8:	bne	1e5c0 <__assert_fail@plt+0xcde8>
   1e5bc:	b	1e654 <__assert_fail@plt+0xce7c>
   1e5c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e5c4:	cmp	r0, #0
   1e5c8:	bge	1e628 <__assert_fail@plt+0xce50>
   1e5cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e5d0:	cmn	r0, #1
   1e5d4:	bne	1e60c <__assert_fail@plt+0xce34>
   1e5d8:	b	1e5dc <__assert_fail@plt+0xce04>
   1e5dc:	ldr	r0, [fp, #8]
   1e5e0:	add	r0, r0, #-2147483648	; 0x80000000
   1e5e4:	movw	r1, #0
   1e5e8:	cmp	r1, r0
   1e5ec:	blt	1e640 <__assert_fail@plt+0xce68>
   1e5f0:	b	1e654 <__assert_fail@plt+0xce7c>
   1e5f4:	ldr	r0, [pc, #1884]	; 1ed58 <__assert_fail@plt+0xd580>
   1e5f8:	ldr	r1, [fp, #8]
   1e5fc:	sub	r1, r1, #1
   1e600:	cmp	r0, r1
   1e604:	blt	1e640 <__assert_fail@plt+0xce68>
   1e608:	b	1e654 <__assert_fail@plt+0xce7c>
   1e60c:	ldr	r0, [pc, #1868]	; 1ed60 <__assert_fail@plt+0xd588>
   1e610:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e614:	sdiv	r0, r0, r1
   1e618:	ldr	r1, [fp, #8]
   1e61c:	cmp	r0, r1
   1e620:	blt	1e640 <__assert_fail@plt+0xce68>
   1e624:	b	1e654 <__assert_fail@plt+0xce7c>
   1e628:	ldr	r0, [pc, #1832]	; 1ed58 <__assert_fail@plt+0xd580>
   1e62c:	ldr	r1, [fp, #8]
   1e630:	sdiv	r0, r0, r1
   1e634:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e638:	cmp	r0, r1
   1e63c:	bge	1e654 <__assert_fail@plt+0xce7c>
   1e640:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e644:	ldr	r1, [fp, #8]
   1e648:	mul	r0, r0, r1
   1e64c:	str	r0, [fp, #-28]	; 0xffffffe4
   1e650:	b	1ed2c <__assert_fail@plt+0xd554>
   1e654:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e658:	ldr	r1, [fp, #8]
   1e65c:	mul	r0, r0, r1
   1e660:	str	r0, [fp, #-28]	; 0xffffffe4
   1e664:	b	1ed30 <__assert_fail@plt+0xd558>
   1e668:	ldr	r0, [fp, #8]
   1e66c:	cmp	r0, #0
   1e670:	bge	1e780 <__assert_fail@plt+0xcfa8>
   1e674:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e678:	cmp	r0, #0
   1e67c:	bge	1e708 <__assert_fail@plt+0xcf30>
   1e680:	b	1e6a0 <__assert_fail@plt+0xcec8>
   1e684:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e688:	ldr	r1, [fp, #8]
   1e68c:	mvn	r2, #0
   1e690:	udiv	r1, r2, r1
   1e694:	cmp	r0, r1
   1e698:	bcc	1e81c <__assert_fail@plt+0xd044>
   1e69c:	b	1e830 <__assert_fail@plt+0xd058>
   1e6a0:	b	1e6a4 <__assert_fail@plt+0xcecc>
   1e6a4:	ldr	r0, [pc, #1712]	; 1ed5c <__assert_fail@plt+0xd584>
   1e6a8:	ldr	r1, [fp, #8]
   1e6ac:	cmp	r1, r0
   1e6b0:	blt	1e6c8 <__assert_fail@plt+0xcef0>
   1e6b4:	b	1e6d4 <__assert_fail@plt+0xcefc>
   1e6b8:	ldr	r0, [fp, #8]
   1e6bc:	movw	r1, #0
   1e6c0:	cmp	r1, r0
   1e6c4:	bge	1e6d4 <__assert_fail@plt+0xcefc>
   1e6c8:	movw	r0, #1
   1e6cc:	str	r0, [sp, #136]	; 0x88
   1e6d0:	b	1e6ec <__assert_fail@plt+0xcf14>
   1e6d4:	ldr	r0, [fp, #8]
   1e6d8:	movw	r1, #0
   1e6dc:	sub	r0, r1, r0
   1e6e0:	mvn	r1, #0
   1e6e4:	udiv	r0, r1, r0
   1e6e8:	str	r0, [sp, #136]	; 0x88
   1e6ec:	ldr	r0, [sp, #136]	; 0x88
   1e6f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e6f4:	mvn	r2, #0
   1e6f8:	sub	r1, r2, r1
   1e6fc:	cmp	r0, r1
   1e700:	bls	1e81c <__assert_fail@plt+0xd044>
   1e704:	b	1e830 <__assert_fail@plt+0xd058>
   1e708:	b	1e70c <__assert_fail@plt+0xcf34>
   1e70c:	b	1e764 <__assert_fail@plt+0xcf8c>
   1e710:	b	1e764 <__assert_fail@plt+0xcf8c>
   1e714:	ldr	r0, [fp, #8]
   1e718:	cmn	r0, #1
   1e71c:	bne	1e764 <__assert_fail@plt+0xcf8c>
   1e720:	b	1e724 <__assert_fail@plt+0xcf4c>
   1e724:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e728:	add	r0, r0, #0
   1e72c:	movw	r1, #0
   1e730:	cmp	r1, r0
   1e734:	blt	1e81c <__assert_fail@plt+0xd044>
   1e738:	b	1e830 <__assert_fail@plt+0xd058>
   1e73c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e740:	movw	r1, #0
   1e744:	cmp	r1, r0
   1e748:	bge	1e830 <__assert_fail@plt+0xd058>
   1e74c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e750:	sub	r0, r0, #1
   1e754:	mvn	r1, #0
   1e758:	cmp	r1, r0
   1e75c:	blt	1e81c <__assert_fail@plt+0xd044>
   1e760:	b	1e830 <__assert_fail@plt+0xd058>
   1e764:	ldr	r0, [fp, #8]
   1e768:	movw	r1, #0
   1e76c:	sdiv	r0, r1, r0
   1e770:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e774:	cmp	r0, r1
   1e778:	blt	1e81c <__assert_fail@plt+0xd044>
   1e77c:	b	1e830 <__assert_fail@plt+0xd058>
   1e780:	ldr	r0, [fp, #8]
   1e784:	cmp	r0, #0
   1e788:	bne	1e790 <__assert_fail@plt+0xcfb8>
   1e78c:	b	1e830 <__assert_fail@plt+0xd058>
   1e790:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e794:	cmp	r0, #0
   1e798:	bge	1e804 <__assert_fail@plt+0xd02c>
   1e79c:	b	1e7a0 <__assert_fail@plt+0xcfc8>
   1e7a0:	b	1e7e8 <__assert_fail@plt+0xd010>
   1e7a4:	b	1e7e8 <__assert_fail@plt+0xd010>
   1e7a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e7ac:	cmn	r0, #1
   1e7b0:	bne	1e7e8 <__assert_fail@plt+0xd010>
   1e7b4:	b	1e7b8 <__assert_fail@plt+0xcfe0>
   1e7b8:	ldr	r0, [fp, #8]
   1e7bc:	add	r0, r0, #0
   1e7c0:	movw	r1, #0
   1e7c4:	cmp	r1, r0
   1e7c8:	blt	1e81c <__assert_fail@plt+0xd044>
   1e7cc:	b	1e830 <__assert_fail@plt+0xd058>
   1e7d0:	ldr	r0, [fp, #8]
   1e7d4:	sub	r0, r0, #1
   1e7d8:	mvn	r1, #0
   1e7dc:	cmp	r1, r0
   1e7e0:	blt	1e81c <__assert_fail@plt+0xd044>
   1e7e4:	b	1e830 <__assert_fail@plt+0xd058>
   1e7e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e7ec:	movw	r1, #0
   1e7f0:	sdiv	r0, r1, r0
   1e7f4:	ldr	r1, [fp, #8]
   1e7f8:	cmp	r0, r1
   1e7fc:	blt	1e81c <__assert_fail@plt+0xd044>
   1e800:	b	1e830 <__assert_fail@plt+0xd058>
   1e804:	ldr	r0, [fp, #8]
   1e808:	mvn	r1, #0
   1e80c:	udiv	r0, r1, r0
   1e810:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e814:	cmp	r0, r1
   1e818:	bcs	1e830 <__assert_fail@plt+0xd058>
   1e81c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e820:	ldr	r1, [fp, #8]
   1e824:	mul	r0, r0, r1
   1e828:	str	r0, [fp, #-28]	; 0xffffffe4
   1e82c:	b	1ed2c <__assert_fail@plt+0xd554>
   1e830:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e834:	ldr	r1, [fp, #8]
   1e838:	mul	r0, r0, r1
   1e83c:	str	r0, [fp, #-28]	; 0xffffffe4
   1e840:	b	1ed30 <__assert_fail@plt+0xd558>
   1e844:	b	1e848 <__assert_fail@plt+0xd070>
   1e848:	ldr	r0, [fp, #8]
   1e84c:	cmp	r0, #0
   1e850:	bge	1e9d8 <__assert_fail@plt+0xd200>
   1e854:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e858:	cmp	r0, #0
   1e85c:	bge	1e944 <__assert_fail@plt+0xd16c>
   1e860:	b	1e864 <__assert_fail@plt+0xd08c>
   1e864:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e868:	ldr	r1, [fp, #8]
   1e86c:	asr	r3, r1, #31
   1e870:	mvn	r2, #0
   1e874:	mvn	ip, #-2147483648	; 0x80000000
   1e878:	str	r0, [sp, #132]	; 0x84
   1e87c:	mov	r0, r2
   1e880:	str	r1, [sp, #128]	; 0x80
   1e884:	mov	r1, ip
   1e888:	ldr	r2, [sp, #128]	; 0x80
   1e88c:	bl	222f0 <__assert_fail@plt+0x10b18>
   1e890:	ldr	r2, [sp, #132]	; 0x84
   1e894:	subs	r0, r2, r0
   1e898:	rscs	r1, r1, r2, asr #31
   1e89c:	str	r0, [sp, #124]	; 0x7c
   1e8a0:	str	r1, [sp, #120]	; 0x78
   1e8a4:	blt	1eab8 <__assert_fail@plt+0xd2e0>
   1e8a8:	b	1eacc <__assert_fail@plt+0xd2f4>
   1e8ac:	b	1e8b0 <__assert_fail@plt+0xd0d8>
   1e8b0:	ldr	r0, [pc, #1188]	; 1ed5c <__assert_fail@plt+0xd584>
   1e8b4:	ldr	r1, [fp, #8]
   1e8b8:	cmp	r1, r0
   1e8bc:	blt	1e8d4 <__assert_fail@plt+0xd0fc>
   1e8c0:	b	1e8e8 <__assert_fail@plt+0xd110>
   1e8c4:	ldr	r0, [fp, #8]
   1e8c8:	movw	r1, #0
   1e8cc:	cmp	r1, r0
   1e8d0:	bge	1e8e8 <__assert_fail@plt+0xd110>
   1e8d4:	mov	r0, #0
   1e8d8:	mvn	r1, #0
   1e8dc:	str	r1, [sp, #116]	; 0x74
   1e8e0:	str	r0, [sp, #112]	; 0x70
   1e8e4:	b	1e91c <__assert_fail@plt+0xd144>
   1e8e8:	ldr	r0, [fp, #8]
   1e8ec:	rsb	r0, r0, #0
   1e8f0:	asr	r3, r0, #31
   1e8f4:	mvn	r1, #0
   1e8f8:	mvn	r2, #-2147483648	; 0x80000000
   1e8fc:	str	r0, [sp, #108]	; 0x6c
   1e900:	mov	r0, r1
   1e904:	mov	r1, r2
   1e908:	ldr	r2, [sp, #108]	; 0x6c
   1e90c:	bl	222f0 <__assert_fail@plt+0x10b18>
   1e910:	str	r0, [sp, #116]	; 0x74
   1e914:	str	r1, [sp, #112]	; 0x70
   1e918:	b	1e91c <__assert_fail@plt+0xd144>
   1e91c:	ldr	r0, [sp, #112]	; 0x70
   1e920:	ldr	r1, [sp, #116]	; 0x74
   1e924:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e928:	mvn	r2, r2
   1e92c:	subs	r1, r2, r1
   1e930:	rscs	r0, r0, r2, asr #31
   1e934:	str	r1, [sp, #104]	; 0x68
   1e938:	str	r0, [sp, #100]	; 0x64
   1e93c:	bge	1eab8 <__assert_fail@plt+0xd2e0>
   1e940:	b	1eacc <__assert_fail@plt+0xd2f4>
   1e944:	ldr	r0, [fp, #8]
   1e948:	cmn	r0, #1
   1e94c:	bne	1e998 <__assert_fail@plt+0xd1c0>
   1e950:	b	1e954 <__assert_fail@plt+0xd17c>
   1e954:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e958:	mov	r1, #-2147483648	; 0x80000000
   1e95c:	add	r1, r1, r0, asr #31
   1e960:	rsbs	r0, r0, #0
   1e964:	rscs	r1, r1, #0
   1e968:	str	r0, [sp, #96]	; 0x60
   1e96c:	str	r1, [sp, #92]	; 0x5c
   1e970:	blt	1eab8 <__assert_fail@plt+0xd2e0>
   1e974:	b	1eacc <__assert_fail@plt+0xd2f4>
   1e978:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e97c:	movw	r1, #0
   1e980:	cmp	r1, r0
   1e984:	bge	1eacc <__assert_fail@plt+0xd2f4>
   1e988:	mov	r0, #0
   1e98c:	cmp	r0, #0
   1e990:	bne	1eab8 <__assert_fail@plt+0xd2e0>
   1e994:	b	1eacc <__assert_fail@plt+0xd2f4>
   1e998:	ldr	r0, [fp, #8]
   1e99c:	asr	r3, r0, #31
   1e9a0:	mov	r1, #0
   1e9a4:	mov	r2, #-2147483648	; 0x80000000
   1e9a8:	str	r0, [sp, #88]	; 0x58
   1e9ac:	mov	r0, r1
   1e9b0:	mov	r1, r2
   1e9b4:	ldr	r2, [sp, #88]	; 0x58
   1e9b8:	bl	222f0 <__assert_fail@plt+0x10b18>
   1e9bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e9c0:	subs	r0, r0, r2
   1e9c4:	sbcs	r1, r1, r2, asr #31
   1e9c8:	str	r0, [sp, #84]	; 0x54
   1e9cc:	str	r1, [sp, #80]	; 0x50
   1e9d0:	blt	1eab8 <__assert_fail@plt+0xd2e0>
   1e9d4:	b	1eacc <__assert_fail@plt+0xd2f4>
   1e9d8:	ldr	r0, [fp, #8]
   1e9dc:	cmp	r0, #0
   1e9e0:	bne	1e9e8 <__assert_fail@plt+0xd210>
   1e9e4:	b	1eacc <__assert_fail@plt+0xd2f4>
   1e9e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e9ec:	cmp	r0, #0
   1e9f0:	bge	1ea78 <__assert_fail@plt+0xd2a0>
   1e9f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e9f8:	cmn	r0, #1
   1e9fc:	bne	1ea38 <__assert_fail@plt+0xd260>
   1ea00:	b	1ea04 <__assert_fail@plt+0xd22c>
   1ea04:	ldr	r0, [fp, #8]
   1ea08:	mov	r1, #-2147483648	; 0x80000000
   1ea0c:	add	r1, r1, r0, asr #31
   1ea10:	rsbs	r0, r0, #0
   1ea14:	rscs	r1, r1, #0
   1ea18:	str	r0, [sp, #76]	; 0x4c
   1ea1c:	str	r1, [sp, #72]	; 0x48
   1ea20:	blt	1eab8 <__assert_fail@plt+0xd2e0>
   1ea24:	b	1eacc <__assert_fail@plt+0xd2f4>
   1ea28:	mov	r0, #0
   1ea2c:	cmp	r0, #0
   1ea30:	bne	1eab8 <__assert_fail@plt+0xd2e0>
   1ea34:	b	1eacc <__assert_fail@plt+0xd2f4>
   1ea38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ea3c:	asr	r3, r0, #31
   1ea40:	mov	r1, #0
   1ea44:	mov	r2, #-2147483648	; 0x80000000
   1ea48:	str	r0, [sp, #68]	; 0x44
   1ea4c:	mov	r0, r1
   1ea50:	mov	r1, r2
   1ea54:	ldr	r2, [sp, #68]	; 0x44
   1ea58:	bl	222f0 <__assert_fail@plt+0x10b18>
   1ea5c:	ldr	r2, [fp, #8]
   1ea60:	subs	r0, r0, r2
   1ea64:	sbcs	r1, r1, r2, asr #31
   1ea68:	str	r0, [sp, #64]	; 0x40
   1ea6c:	str	r1, [sp, #60]	; 0x3c
   1ea70:	blt	1eab8 <__assert_fail@plt+0xd2e0>
   1ea74:	b	1eacc <__assert_fail@plt+0xd2f4>
   1ea78:	ldr	r0, [fp, #8]
   1ea7c:	asr	r3, r0, #31
   1ea80:	mvn	r1, #0
   1ea84:	mvn	r2, #-2147483648	; 0x80000000
   1ea88:	str	r0, [sp, #56]	; 0x38
   1ea8c:	mov	r0, r1
   1ea90:	mov	r1, r2
   1ea94:	ldr	r2, [sp, #56]	; 0x38
   1ea98:	bl	222f0 <__assert_fail@plt+0x10b18>
   1ea9c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1eaa0:	subs	r0, r0, r2
   1eaa4:	sbcs	r1, r1, r2, asr #31
   1eaa8:	str	r0, [sp, #52]	; 0x34
   1eaac:	str	r1, [sp, #48]	; 0x30
   1eab0:	bge	1eacc <__assert_fail@plt+0xd2f4>
   1eab4:	b	1eab8 <__assert_fail@plt+0xd2e0>
   1eab8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eabc:	ldr	r1, [fp, #8]
   1eac0:	mul	r0, r0, r1
   1eac4:	str	r0, [fp, #-28]	; 0xffffffe4
   1eac8:	b	1ed2c <__assert_fail@plt+0xd554>
   1eacc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ead0:	ldr	r1, [fp, #8]
   1ead4:	mul	r0, r0, r1
   1ead8:	str	r0, [fp, #-28]	; 0xffffffe4
   1eadc:	b	1ed30 <__assert_fail@plt+0xd558>
   1eae0:	ldr	r0, [fp, #8]
   1eae4:	cmp	r0, #0
   1eae8:	bge	1ec48 <__assert_fail@plt+0xd470>
   1eaec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eaf0:	cmp	r0, #0
   1eaf4:	bge	1ebd0 <__assert_fail@plt+0xd3f8>
   1eaf8:	b	1eb40 <__assert_fail@plt+0xd368>
   1eafc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eb00:	ldr	r1, [fp, #8]
   1eb04:	asr	r3, r1, #31
   1eb08:	mvn	r2, #0
   1eb0c:	str	r0, [sp, #44]	; 0x2c
   1eb10:	mov	r0, r2
   1eb14:	str	r1, [sp, #40]	; 0x28
   1eb18:	mov	r1, r2
   1eb1c:	ldr	r2, [sp, #40]	; 0x28
   1eb20:	bl	223c4 <__assert_fail@plt+0x10bec>
   1eb24:	ldr	r2, [sp, #44]	; 0x2c
   1eb28:	subs	r0, r2, r0
   1eb2c:	rscs	r1, r1, r2, asr #31
   1eb30:	str	r0, [sp, #36]	; 0x24
   1eb34:	str	r1, [sp, #32]
   1eb38:	bcc	1ed04 <__assert_fail@plt+0xd52c>
   1eb3c:	b	1ed18 <__assert_fail@plt+0xd540>
   1eb40:	b	1eb44 <__assert_fail@plt+0xd36c>
   1eb44:	ldr	r0, [pc, #528]	; 1ed5c <__assert_fail@plt+0xd584>
   1eb48:	ldr	r1, [fp, #8]
   1eb4c:	cmp	r1, r0
   1eb50:	blt	1eb68 <__assert_fail@plt+0xd390>
   1eb54:	b	1eb7c <__assert_fail@plt+0xd3a4>
   1eb58:	ldr	r0, [fp, #8]
   1eb5c:	movw	r1, #0
   1eb60:	cmp	r1, r0
   1eb64:	bge	1eb7c <__assert_fail@plt+0xd3a4>
   1eb68:	mov	r0, #1
   1eb6c:	mvn	r1, #0
   1eb70:	str	r1, [sp, #28]
   1eb74:	str	r0, [sp, #24]
   1eb78:	b	1eba8 <__assert_fail@plt+0xd3d0>
   1eb7c:	ldr	r0, [fp, #8]
   1eb80:	rsb	r0, r0, #0
   1eb84:	asr	r3, r0, #31
   1eb88:	mvn	r1, #0
   1eb8c:	str	r0, [sp, #20]
   1eb90:	mov	r0, r1
   1eb94:	ldr	r2, [sp, #20]
   1eb98:	bl	223c4 <__assert_fail@plt+0x10bec>
   1eb9c:	str	r0, [sp, #28]
   1eba0:	str	r1, [sp, #24]
   1eba4:	b	1eba8 <__assert_fail@plt+0xd3d0>
   1eba8:	ldr	r0, [sp, #24]
   1ebac:	ldr	r1, [sp, #28]
   1ebb0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ebb4:	mvn	r2, r2
   1ebb8:	subs	r1, r2, r1
   1ebbc:	rscs	r0, r0, r2, asr #31
   1ebc0:	str	r1, [sp, #16]
   1ebc4:	str	r0, [sp, #12]
   1ebc8:	bcs	1ed04 <__assert_fail@plt+0xd52c>
   1ebcc:	b	1ed18 <__assert_fail@plt+0xd540>
   1ebd0:	b	1ebd4 <__assert_fail@plt+0xd3fc>
   1ebd4:	b	1ec2c <__assert_fail@plt+0xd454>
   1ebd8:	b	1ec2c <__assert_fail@plt+0xd454>
   1ebdc:	ldr	r0, [fp, #8]
   1ebe0:	cmn	r0, #1
   1ebe4:	bne	1ec2c <__assert_fail@plt+0xd454>
   1ebe8:	b	1ebec <__assert_fail@plt+0xd414>
   1ebec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ebf0:	add	r0, r0, #0
   1ebf4:	movw	r1, #0
   1ebf8:	cmp	r1, r0
   1ebfc:	blt	1ed04 <__assert_fail@plt+0xd52c>
   1ec00:	b	1ed18 <__assert_fail@plt+0xd540>
   1ec04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ec08:	movw	r1, #0
   1ec0c:	cmp	r1, r0
   1ec10:	bge	1ed18 <__assert_fail@plt+0xd540>
   1ec14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ec18:	sub	r0, r0, #1
   1ec1c:	mvn	r1, #0
   1ec20:	cmp	r1, r0
   1ec24:	blt	1ed04 <__assert_fail@plt+0xd52c>
   1ec28:	b	1ed18 <__assert_fail@plt+0xd540>
   1ec2c:	ldr	r0, [fp, #8]
   1ec30:	movw	r1, #0
   1ec34:	sdiv	r0, r1, r0
   1ec38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ec3c:	cmp	r0, r1
   1ec40:	blt	1ed04 <__assert_fail@plt+0xd52c>
   1ec44:	b	1ed18 <__assert_fail@plt+0xd540>
   1ec48:	ldr	r0, [fp, #8]
   1ec4c:	cmp	r0, #0
   1ec50:	bne	1ec58 <__assert_fail@plt+0xd480>
   1ec54:	b	1ed18 <__assert_fail@plt+0xd540>
   1ec58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ec5c:	cmp	r0, #0
   1ec60:	bge	1eccc <__assert_fail@plt+0xd4f4>
   1ec64:	b	1ec68 <__assert_fail@plt+0xd490>
   1ec68:	b	1ecb0 <__assert_fail@plt+0xd4d8>
   1ec6c:	b	1ecb0 <__assert_fail@plt+0xd4d8>
   1ec70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ec74:	cmn	r0, #1
   1ec78:	bne	1ecb0 <__assert_fail@plt+0xd4d8>
   1ec7c:	b	1ec80 <__assert_fail@plt+0xd4a8>
   1ec80:	ldr	r0, [fp, #8]
   1ec84:	add	r0, r0, #0
   1ec88:	movw	r1, #0
   1ec8c:	cmp	r1, r0
   1ec90:	blt	1ed04 <__assert_fail@plt+0xd52c>
   1ec94:	b	1ed18 <__assert_fail@plt+0xd540>
   1ec98:	ldr	r0, [fp, #8]
   1ec9c:	sub	r0, r0, #1
   1eca0:	mvn	r1, #0
   1eca4:	cmp	r1, r0
   1eca8:	blt	1ed04 <__assert_fail@plt+0xd52c>
   1ecac:	b	1ed18 <__assert_fail@plt+0xd540>
   1ecb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ecb4:	movw	r1, #0
   1ecb8:	sdiv	r0, r1, r0
   1ecbc:	ldr	r1, [fp, #8]
   1ecc0:	cmp	r0, r1
   1ecc4:	blt	1ed04 <__assert_fail@plt+0xd52c>
   1ecc8:	b	1ed18 <__assert_fail@plt+0xd540>
   1eccc:	ldr	r0, [fp, #8]
   1ecd0:	asr	r3, r0, #31
   1ecd4:	mvn	r1, #0
   1ecd8:	str	r0, [sp, #8]
   1ecdc:	mov	r0, r1
   1ece0:	ldr	r2, [sp, #8]
   1ece4:	bl	223c4 <__assert_fail@plt+0x10bec>
   1ece8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ecec:	subs	r0, r0, r2
   1ecf0:	sbcs	r1, r1, r2, asr #31
   1ecf4:	str	r0, [sp, #4]
   1ecf8:	str	r1, [sp]
   1ecfc:	bcs	1ed18 <__assert_fail@plt+0xd540>
   1ed00:	b	1ed04 <__assert_fail@plt+0xd52c>
   1ed04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ed08:	ldr	r1, [fp, #8]
   1ed0c:	mul	r0, r0, r1
   1ed10:	str	r0, [fp, #-28]	; 0xffffffe4
   1ed14:	b	1ed2c <__assert_fail@plt+0xd554>
   1ed18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ed1c:	ldr	r1, [fp, #8]
   1ed20:	mul	r0, r0, r1
   1ed24:	str	r0, [fp, #-28]	; 0xffffffe4
   1ed28:	b	1ed30 <__assert_fail@plt+0xd558>
   1ed2c:	bl	1ef08 <__assert_fail@plt+0xd730>
   1ed30:	ldr	r0, [fp, #-4]
   1ed34:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ed38:	bl	1c1c4 <__assert_fail@plt+0xa9ec>
   1ed3c:	str	r0, [fp, #-4]
   1ed40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ed44:	ldr	r1, [fp, #-8]
   1ed48:	str	r0, [r1]
   1ed4c:	ldr	r0, [fp, #-4]
   1ed50:	mov	sp, fp
   1ed54:	pop	{fp, pc}
   1ed58:	svcvc	0x00ffffff
   1ed5c:	andhi	r0, r0, r1
   1ed60:	andhi	r0, r0, r0
   1ed64:			; <UNDEFINED> instruction: 0xffff8000
   1ed68:	push	{fp, lr}
   1ed6c:	mov	fp, sp
   1ed70:	sub	sp, sp, #8
   1ed74:	str	r0, [sp, #4]
   1ed78:	ldr	r0, [sp, #4]
   1ed7c:	movw	r1, #1
   1ed80:	bl	1ed8c <__assert_fail@plt+0xd5b4>
   1ed84:	mov	sp, fp
   1ed88:	pop	{fp, pc}
   1ed8c:	push	{fp, lr}
   1ed90:	mov	fp, sp
   1ed94:	sub	sp, sp, #8
   1ed98:	str	r0, [sp, #4]
   1ed9c:	str	r1, [sp]
   1eda0:	ldr	r0, [sp, #4]
   1eda4:	ldr	r1, [sp]
   1eda8:	bl	1f68c <__assert_fail@plt+0xdeb4>
   1edac:	bl	1c150 <__assert_fail@plt+0xa978>
   1edb0:	mov	sp, fp
   1edb4:	pop	{fp, pc}
   1edb8:	push	{fp, lr}
   1edbc:	mov	fp, sp
   1edc0:	sub	sp, sp, #8
   1edc4:	str	r0, [sp, #4]
   1edc8:	ldr	r0, [sp, #4]
   1edcc:	movw	r1, #1
   1edd0:	bl	1eddc <__assert_fail@plt+0xd604>
   1edd4:	mov	sp, fp
   1edd8:	pop	{fp, pc}
   1eddc:	push	{fp, lr}
   1ede0:	mov	fp, sp
   1ede4:	sub	sp, sp, #8
   1ede8:	str	r0, [sp, #4]
   1edec:	str	r1, [sp]
   1edf0:	ldr	r0, [sp, #4]
   1edf4:	ldr	r1, [sp]
   1edf8:	bl	215dc <__assert_fail@plt+0xfe04>
   1edfc:	bl	1c150 <__assert_fail@plt+0xa978>
   1ee00:	mov	sp, fp
   1ee04:	pop	{fp, pc}
   1ee08:	push	{fp, lr}
   1ee0c:	mov	fp, sp
   1ee10:	sub	sp, sp, #16
   1ee14:	str	r0, [fp, #-4]
   1ee18:	str	r1, [sp, #8]
   1ee1c:	ldr	r0, [sp, #8]
   1ee20:	bl	1c12c <__assert_fail@plt+0xa954>
   1ee24:	ldr	r1, [fp, #-4]
   1ee28:	ldr	r2, [sp, #8]
   1ee2c:	str	r0, [sp, #4]
   1ee30:	bl	1149c <memcpy@plt>
   1ee34:	ldr	r0, [sp, #4]
   1ee38:	mov	sp, fp
   1ee3c:	pop	{fp, pc}
   1ee40:	push	{fp, lr}
   1ee44:	mov	fp, sp
   1ee48:	sub	sp, sp, #16
   1ee4c:	str	r0, [fp, #-4]
   1ee50:	str	r1, [sp, #8]
   1ee54:	ldr	r0, [sp, #8]
   1ee58:	bl	1c180 <__assert_fail@plt+0xa9a8>
   1ee5c:	ldr	r1, [fp, #-4]
   1ee60:	ldr	r2, [sp, #8]
   1ee64:	str	r0, [sp, #4]
   1ee68:	bl	1149c <memcpy@plt>
   1ee6c:	ldr	r0, [sp, #4]
   1ee70:	mov	sp, fp
   1ee74:	pop	{fp, pc}
   1ee78:	push	{fp, lr}
   1ee7c:	mov	fp, sp
   1ee80:	sub	sp, sp, #16
   1ee84:	str	r0, [fp, #-4]
   1ee88:	str	r1, [sp, #8]
   1ee8c:	ldr	r0, [sp, #8]
   1ee90:	add	r0, r0, #1
   1ee94:	bl	1c180 <__assert_fail@plt+0xa9a8>
   1ee98:	str	r0, [sp, #4]
   1ee9c:	ldr	r0, [sp, #4]
   1eea0:	ldr	r1, [sp, #8]
   1eea4:	add	r0, r0, r1
   1eea8:	movw	r1, #0
   1eeac:	strb	r1, [r0]
   1eeb0:	ldr	r0, [sp, #4]
   1eeb4:	ldr	r1, [fp, #-4]
   1eeb8:	ldr	r2, [sp, #8]
   1eebc:	str	r0, [sp]
   1eec0:	bl	1149c <memcpy@plt>
   1eec4:	ldr	r0, [sp]
   1eec8:	mov	sp, fp
   1eecc:	pop	{fp, pc}
   1eed0:	push	{fp, lr}
   1eed4:	mov	fp, sp
   1eed8:	sub	sp, sp, #8
   1eedc:	str	r0, [sp, #4]
   1eee0:	ldr	r0, [sp, #4]
   1eee4:	ldr	r1, [sp, #4]
   1eee8:	str	r0, [sp]
   1eeec:	mov	r0, r1
   1eef0:	bl	11634 <strlen@plt>
   1eef4:	add	r1, r0, #1
   1eef8:	ldr	r0, [sp]
   1eefc:	bl	1ee08 <__assert_fail@plt+0xd630>
   1ef00:	mov	sp, fp
   1ef04:	pop	{fp, pc}
   1ef08:	push	{fp, lr}
   1ef0c:	mov	fp, sp
   1ef10:	sub	sp, sp, #8
   1ef14:	movw	r0, #20848	; 0x5170
   1ef18:	movt	r0, #3
   1ef1c:	ldr	r0, [r0]
   1ef20:	movw	r1, #18906	; 0x49da
   1ef24:	movt	r1, #2
   1ef28:	str	r0, [sp, #4]
   1ef2c:	mov	r0, r1
   1ef30:	bl	1161c <gettext@plt>
   1ef34:	ldr	r1, [sp, #4]
   1ef38:	str	r0, [sp]
   1ef3c:	mov	r0, r1
   1ef40:	movw	r1, #0
   1ef44:	movw	r2, #17319	; 0x43a7
   1ef48:	movt	r2, #2
   1ef4c:	ldr	r3, [sp]
   1ef50:	bl	1158c <error@plt>
   1ef54:	bl	117a8 <abort@plt>
   1ef58:	push	{fp, lr}
   1ef5c:	mov	fp, sp
   1ef60:	sub	sp, sp, #80	; 0x50
   1ef64:	ldr	ip, [fp, #8]
   1ef68:	str	r0, [fp, #-8]
   1ef6c:	str	r1, [fp, #-12]
   1ef70:	str	r2, [fp, #-16]
   1ef74:	str	r3, [fp, #-20]	; 0xffffffec
   1ef78:	movw	r0, #0
   1ef7c:	str	r0, [fp, #-36]	; 0xffffffdc
   1ef80:	ldr	r1, [fp, #-16]
   1ef84:	cmp	r0, r1
   1ef88:	str	ip, [sp, #20]
   1ef8c:	bgt	1efa0 <__assert_fail@plt+0xd7c8>
   1ef90:	ldr	r0, [fp, #-16]
   1ef94:	cmp	r0, #36	; 0x24
   1ef98:	bgt	1efa0 <__assert_fail@plt+0xd7c8>
   1ef9c:	b	1efc0 <__assert_fail@plt+0xd7e8>
   1efa0:	movw	r0, #18923	; 0x49eb
   1efa4:	movt	r0, #2
   1efa8:	movw	r1, #18961	; 0x4a11
   1efac:	movt	r1, #2
   1efb0:	movw	r2, #84	; 0x54
   1efb4:	movw	r3, #18973	; 0x4a1d
   1efb8:	movt	r3, #2
   1efbc:	bl	117d8 <__assert_fail@plt>
   1efc0:	ldr	r0, [fp, #-12]
   1efc4:	movw	r1, #0
   1efc8:	cmp	r0, r1
   1efcc:	beq	1efdc <__assert_fail@plt+0xd804>
   1efd0:	ldr	r0, [fp, #-12]
   1efd4:	str	r0, [sp, #16]
   1efd8:	b	1efe8 <__assert_fail@plt+0xd810>
   1efdc:	sub	r0, fp, #24
   1efe0:	str	r0, [sp, #16]
   1efe4:	b	1efe8 <__assert_fail@plt+0xd810>
   1efe8:	ldr	r0, [sp, #16]
   1efec:	str	r0, [fp, #-28]	; 0xffffffe4
   1eff0:	bl	11664 <__errno_location@plt>
   1eff4:	movw	lr, #0
   1eff8:	str	lr, [r0]
   1effc:	ldr	r0, [fp, #-8]
   1f000:	str	r0, [sp, #40]	; 0x28
   1f004:	ldr	r0, [sp, #40]	; 0x28
   1f008:	ldrb	r0, [r0]
   1f00c:	strb	r0, [sp, #39]	; 0x27
   1f010:	bl	115f8 <__ctype_b_loc@plt>
   1f014:	ldr	r0, [r0]
   1f018:	ldrb	lr, [sp, #39]	; 0x27
   1f01c:	mov	r1, lr
   1f020:	add	r0, r0, lr, lsl #1
   1f024:	ldrh	r0, [r0]
   1f028:	and	r0, r0, #8192	; 0x2000
   1f02c:	cmp	r0, #0
   1f030:	str	r1, [sp, #12]
   1f034:	beq	1f050 <__assert_fail@plt+0xd878>
   1f038:	ldr	r0, [sp, #40]	; 0x28
   1f03c:	add	r1, r0, #1
   1f040:	str	r1, [sp, #40]	; 0x28
   1f044:	ldrb	r0, [r0, #1]
   1f048:	strb	r0, [sp, #39]	; 0x27
   1f04c:	b	1f010 <__assert_fail@plt+0xd838>
   1f050:	ldrb	r0, [sp, #39]	; 0x27
   1f054:	cmp	r0, #45	; 0x2d
   1f058:	bne	1f068 <__assert_fail@plt+0xd890>
   1f05c:	movw	r0, #4
   1f060:	str	r0, [fp, #-4]
   1f064:	b	1f5b8 <__assert_fail@plt+0xdde0>
   1f068:	ldr	r0, [fp, #-8]
   1f06c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f070:	ldr	r2, [fp, #-16]
   1f074:	bl	11628 <strtoul@plt>
   1f078:	str	r0, [fp, #-32]	; 0xffffffe0
   1f07c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f080:	ldr	r0, [r0]
   1f084:	ldr	r1, [fp, #-8]
   1f088:	cmp	r0, r1
   1f08c:	bne	1f0f0 <__assert_fail@plt+0xd918>
   1f090:	ldr	r0, [fp, #8]
   1f094:	movw	r1, #0
   1f098:	cmp	r0, r1
   1f09c:	beq	1f0e0 <__assert_fail@plt+0xd908>
   1f0a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f0a4:	ldr	r0, [r0]
   1f0a8:	ldrb	r0, [r0]
   1f0ac:	cmp	r0, #0
   1f0b0:	beq	1f0e0 <__assert_fail@plt+0xd908>
   1f0b4:	ldr	r0, [fp, #8]
   1f0b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f0bc:	ldr	r1, [r1]
   1f0c0:	ldrb	r1, [r1]
   1f0c4:	bl	11640 <strchr@plt>
   1f0c8:	movw	r1, #0
   1f0cc:	cmp	r0, r1
   1f0d0:	beq	1f0e0 <__assert_fail@plt+0xd908>
   1f0d4:	movw	r0, #1
   1f0d8:	str	r0, [fp, #-32]	; 0xffffffe0
   1f0dc:	b	1f0ec <__assert_fail@plt+0xd914>
   1f0e0:	movw	r0, #4
   1f0e4:	str	r0, [fp, #-4]
   1f0e8:	b	1f5b8 <__assert_fail@plt+0xdde0>
   1f0ec:	b	1f128 <__assert_fail@plt+0xd950>
   1f0f0:	bl	11664 <__errno_location@plt>
   1f0f4:	ldr	r0, [r0]
   1f0f8:	cmp	r0, #0
   1f0fc:	beq	1f124 <__assert_fail@plt+0xd94c>
   1f100:	bl	11664 <__errno_location@plt>
   1f104:	ldr	r0, [r0]
   1f108:	cmp	r0, #34	; 0x22
   1f10c:	beq	1f11c <__assert_fail@plt+0xd944>
   1f110:	movw	r0, #4
   1f114:	str	r0, [fp, #-4]
   1f118:	b	1f5b8 <__assert_fail@plt+0xdde0>
   1f11c:	movw	r0, #1
   1f120:	str	r0, [fp, #-36]	; 0xffffffdc
   1f124:	b	1f128 <__assert_fail@plt+0xd950>
   1f128:	ldr	r0, [fp, #8]
   1f12c:	movw	r1, #0
   1f130:	cmp	r0, r1
   1f134:	bne	1f150 <__assert_fail@plt+0xd978>
   1f138:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f13c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f140:	str	r0, [r1]
   1f144:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1f148:	str	r0, [fp, #-4]
   1f14c:	b	1f5b8 <__assert_fail@plt+0xdde0>
   1f150:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f154:	ldr	r0, [r0]
   1f158:	ldrb	r0, [r0]
   1f15c:	cmp	r0, #0
   1f160:	beq	1f5a4 <__assert_fail@plt+0xddcc>
   1f164:	movw	r0, #1024	; 0x400
   1f168:	str	r0, [sp, #32]
   1f16c:	movw	r0, #1
   1f170:	str	r0, [sp, #28]
   1f174:	ldr	r0, [fp, #8]
   1f178:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f17c:	ldr	r1, [r1]
   1f180:	ldrb	r1, [r1]
   1f184:	bl	11640 <strchr@plt>
   1f188:	movw	r1, #0
   1f18c:	cmp	r0, r1
   1f190:	bne	1f1b0 <__assert_fail@plt+0xd9d8>
   1f194:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f198:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f19c:	str	r0, [r1]
   1f1a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1f1a4:	orr	r0, r0, #2
   1f1a8:	str	r0, [fp, #-4]
   1f1ac:	b	1f5b8 <__assert_fail@plt+0xdde0>
   1f1b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f1b4:	ldr	r0, [r0]
   1f1b8:	ldrb	r0, [r0]
   1f1bc:	sub	r0, r0, #69	; 0x45
   1f1c0:	cmp	r0, #47	; 0x2f
   1f1c4:	str	r0, [sp, #8]
   1f1c8:	bhi	1f334 <__assert_fail@plt+0xdb5c>
   1f1cc:	add	r0, pc, #8
   1f1d0:	ldr	r1, [sp, #8]
   1f1d4:	ldr	r0, [r0, r1, lsl #2]
   1f1d8:	mov	pc, r0
   1f1dc:	muleq	r1, ip, r2
   1f1e0:	andeq	pc, r1, r4, lsr r3	; <UNPREDICTABLE>
   1f1e4:	muleq	r1, ip, r2
   1f1e8:	andeq	pc, r1, r4, lsr r3	; <UNPREDICTABLE>
   1f1ec:	andeq	pc, r1, r4, lsr r3	; <UNPREDICTABLE>
   1f1f0:	andeq	pc, r1, r4, lsr r3	; <UNPREDICTABLE>
   1f1f4:	muleq	r1, ip, r2
   1f1f8:	andeq	pc, r1, r4, lsr r3	; <UNPREDICTABLE>
   1f1fc:	muleq	r1, ip, r2
   1f200:	andeq	pc, r1, r4, lsr r3	; <UNPREDICTABLE>
   1f204:	andeq	pc, r1, r4, lsr r3	; <UNPREDICTABLE>
   1f208:	muleq	r1, ip, r2
   1f20c:	andeq	pc, r1, r4, lsr r3	; <UNPREDICTABLE>
   1f210:	andeq	pc, r1, r4, lsr r3	; <UNPREDICTABLE>
   1f214:	andeq	pc, r1, r4, lsr r3	; <UNPREDICTABLE>
   1f218:	muleq	r1, ip, r2
   1f21c:	andeq	pc, r1, r4, lsr r3	; <UNPREDICTABLE>
   1f220:	andeq	pc, r1, r4, lsr r3	; <UNPREDICTABLE>
   1f224:	andeq	pc, r1, r4, lsr r3	; <UNPREDICTABLE>
   1f228:	andeq	pc, r1, r4, lsr r3	; <UNPREDICTABLE>
   1f22c:	muleq	r1, ip, r2
   1f230:	muleq	r1, ip, r2
   1f234:	andeq	pc, r1, r4, lsr r3	; <UNPREDICTABLE>
   1f238:	andeq	pc, r1, r4, lsr r3	; <UNPREDICTABLE>
   1f23c:	andeq	pc, r1, r4, lsr r3	; <UNPREDICTABLE>
   1f240:	andeq	pc, r1, r4, lsr r3	; <UNPREDICTABLE>
   1f244:	andeq	pc, r1, r4, lsr r3	; <UNPREDICTABLE>
   1f248:	andeq	pc, r1, r4, lsr r3	; <UNPREDICTABLE>
   1f24c:	andeq	pc, r1, r4, lsr r3	; <UNPREDICTABLE>
   1f250:	andeq	pc, r1, r4, lsr r3	; <UNPREDICTABLE>
   1f254:	andeq	pc, r1, r4, lsr r3	; <UNPREDICTABLE>
   1f258:	andeq	pc, r1, r4, lsr r3	; <UNPREDICTABLE>
   1f25c:	andeq	pc, r1, r4, lsr r3	; <UNPREDICTABLE>
   1f260:	andeq	pc, r1, r4, lsr r3	; <UNPREDICTABLE>
   1f264:	muleq	r1, ip, r2
   1f268:	andeq	pc, r1, r4, lsr r3	; <UNPREDICTABLE>
   1f26c:	andeq	pc, r1, r4, lsr r3	; <UNPREDICTABLE>
   1f270:	andeq	pc, r1, r4, lsr r3	; <UNPREDICTABLE>
   1f274:	muleq	r1, ip, r2
   1f278:	andeq	pc, r1, r4, lsr r3	; <UNPREDICTABLE>
   1f27c:	muleq	r1, ip, r2
   1f280:	andeq	pc, r1, r4, lsr r3	; <UNPREDICTABLE>
   1f284:	andeq	pc, r1, r4, lsr r3	; <UNPREDICTABLE>
   1f288:	andeq	pc, r1, r4, lsr r3	; <UNPREDICTABLE>
   1f28c:	andeq	pc, r1, r4, lsr r3	; <UNPREDICTABLE>
   1f290:	andeq	pc, r1, r4, lsr r3	; <UNPREDICTABLE>
   1f294:	andeq	pc, r1, r4, lsr r3	; <UNPREDICTABLE>
   1f298:	muleq	r1, ip, r2
   1f29c:	ldr	r0, [fp, #8]
   1f2a0:	movw	r1, #48	; 0x30
   1f2a4:	bl	11640 <strchr@plt>
   1f2a8:	movw	r1, #0
   1f2ac:	cmp	r0, r1
   1f2b0:	beq	1f330 <__assert_fail@plt+0xdb58>
   1f2b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f2b8:	ldr	r0, [r0]
   1f2bc:	ldrb	r0, [r0, #1]
   1f2c0:	mov	r1, r0
   1f2c4:	cmp	r0, #66	; 0x42
   1f2c8:	str	r1, [sp, #4]
   1f2cc:	beq	1f318 <__assert_fail@plt+0xdb40>
   1f2d0:	b	1f2d4 <__assert_fail@plt+0xdafc>
   1f2d4:	ldr	r0, [sp, #4]
   1f2d8:	cmp	r0, #68	; 0x44
   1f2dc:	beq	1f318 <__assert_fail@plt+0xdb40>
   1f2e0:	b	1f2e4 <__assert_fail@plt+0xdb0c>
   1f2e4:	ldr	r0, [sp, #4]
   1f2e8:	cmp	r0, #105	; 0x69
   1f2ec:	bne	1f32c <__assert_fail@plt+0xdb54>
   1f2f0:	b	1f2f4 <__assert_fail@plt+0xdb1c>
   1f2f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f2f8:	ldr	r0, [r0]
   1f2fc:	ldrb	r0, [r0, #2]
   1f300:	cmp	r0, #66	; 0x42
   1f304:	bne	1f314 <__assert_fail@plt+0xdb3c>
   1f308:	ldr	r0, [sp, #28]
   1f30c:	add	r0, r0, #2
   1f310:	str	r0, [sp, #28]
   1f314:	b	1f32c <__assert_fail@plt+0xdb54>
   1f318:	movw	r0, #1000	; 0x3e8
   1f31c:	str	r0, [sp, #32]
   1f320:	ldr	r0, [sp, #28]
   1f324:	add	r0, r0, #1
   1f328:	str	r0, [sp, #28]
   1f32c:	b	1f330 <__assert_fail@plt+0xdb58>
   1f330:	b	1f334 <__assert_fail@plt+0xdb5c>
   1f334:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f338:	ldr	r0, [r0]
   1f33c:	ldrb	r0, [r0]
   1f340:	sub	r0, r0, #66	; 0x42
   1f344:	cmp	r0, #53	; 0x35
   1f348:	str	r0, [sp]
   1f34c:	bhi	1f540 <__assert_fail@plt+0xdd68>
   1f350:	add	r0, pc, #8
   1f354:	ldr	r1, [sp]
   1f358:	ldr	r0, [r0, r1, lsl #2]
   1f35c:	mov	pc, r0
   1f360:	andeq	pc, r1, ip, asr #8
   1f364:	andeq	pc, r1, r0, asr #10
   1f368:	andeq	pc, r1, r0, asr #10
   1f36c:	andeq	pc, r1, ip, ror #8
   1f370:	andeq	pc, r1, r0, asr #10
   1f374:	andeq	pc, r1, r4, lsl #9
   1f378:	andeq	pc, r1, r0, asr #10
   1f37c:	andeq	pc, r1, r0, asr #10
   1f380:	andeq	pc, r1, r0, asr #10
   1f384:	muleq	r1, ip, r4
   1f388:	andeq	pc, r1, r0, asr #10
   1f38c:			; <UNDEFINED> instruction: 0x0001f4b4
   1f390:	andeq	pc, r1, r0, asr #10
   1f394:	andeq	pc, r1, r0, asr #10
   1f398:	andeq	pc, r1, ip, asr #9
   1f39c:	andeq	pc, r1, r0, asr #10
   1f3a0:	andeq	pc, r1, r0, asr #10
   1f3a4:	andeq	pc, r1, r0, asr #10
   1f3a8:	andeq	pc, r1, r4, ror #9
   1f3ac:	andeq	pc, r1, r0, asr #10
   1f3b0:	andeq	pc, r1, r0, asr #10
   1f3b4:	andeq	pc, r1, r0, asr #10
   1f3b8:	andeq	pc, r1, r0, asr #10
   1f3bc:	andeq	pc, r1, r0, lsl r5	; <UNPREDICTABLE>
   1f3c0:	andeq	pc, r1, r8, lsr #10
   1f3c4:	andeq	pc, r1, r0, asr #10
   1f3c8:	andeq	pc, r1, r0, asr #10
   1f3cc:	andeq	pc, r1, r0, asr #10
   1f3d0:	andeq	pc, r1, r0, asr #10
   1f3d4:	andeq	pc, r1, r0, asr #10
   1f3d8:	andeq	pc, r1, r0, asr #10
   1f3dc:	andeq	pc, r1, r0, asr #10
   1f3e0:	andeq	pc, r1, r8, lsr r4	; <UNPREDICTABLE>
   1f3e4:	andeq	pc, r1, r0, ror #8
   1f3e8:	andeq	pc, r1, r0, asr #10
   1f3ec:	andeq	pc, r1, r0, asr #10
   1f3f0:	andeq	pc, r1, r0, asr #10
   1f3f4:	andeq	pc, r1, r4, lsl #9
   1f3f8:	andeq	pc, r1, r0, asr #10
   1f3fc:	andeq	pc, r1, r0, asr #10
   1f400:	andeq	pc, r1, r0, asr #10
   1f404:	muleq	r1, ip, r4
   1f408:	andeq	pc, r1, r0, asr #10
   1f40c:			; <UNDEFINED> instruction: 0x0001f4b4
   1f410:	andeq	pc, r1, r0, asr #10
   1f414:	andeq	pc, r1, r0, asr #10
   1f418:	andeq	pc, r1, r0, asr #10
   1f41c:	andeq	pc, r1, r0, asr #10
   1f420:	andeq	pc, r1, r0, asr #10
   1f424:	andeq	pc, r1, r0, asr #10
   1f428:	andeq	pc, r1, r4, ror #9
   1f42c:	andeq	pc, r1, r0, asr #10
   1f430:	andeq	pc, r1, r0, asr #10
   1f434:	strdeq	pc, [r1], -ip
   1f438:	sub	r0, fp, #32
   1f43c:	movw	r1, #512	; 0x200
   1f440:	bl	1f5c4 <__assert_fail@plt+0xddec>
   1f444:	str	r0, [sp, #24]
   1f448:	b	1f55c <__assert_fail@plt+0xdd84>
   1f44c:	sub	r0, fp, #32
   1f450:	movw	r1, #1024	; 0x400
   1f454:	bl	1f5c4 <__assert_fail@plt+0xddec>
   1f458:	str	r0, [sp, #24]
   1f45c:	b	1f55c <__assert_fail@plt+0xdd84>
   1f460:	movw	r0, #0
   1f464:	str	r0, [sp, #24]
   1f468:	b	1f55c <__assert_fail@plt+0xdd84>
   1f46c:	ldr	r1, [sp, #32]
   1f470:	sub	r0, fp, #32
   1f474:	movw	r2, #6
   1f478:	bl	1f62c <__assert_fail@plt+0xde54>
   1f47c:	str	r0, [sp, #24]
   1f480:	b	1f55c <__assert_fail@plt+0xdd84>
   1f484:	ldr	r1, [sp, #32]
   1f488:	sub	r0, fp, #32
   1f48c:	movw	r2, #3
   1f490:	bl	1f62c <__assert_fail@plt+0xde54>
   1f494:	str	r0, [sp, #24]
   1f498:	b	1f55c <__assert_fail@plt+0xdd84>
   1f49c:	ldr	r1, [sp, #32]
   1f4a0:	sub	r0, fp, #32
   1f4a4:	movw	r2, #1
   1f4a8:	bl	1f62c <__assert_fail@plt+0xde54>
   1f4ac:	str	r0, [sp, #24]
   1f4b0:	b	1f55c <__assert_fail@plt+0xdd84>
   1f4b4:	ldr	r1, [sp, #32]
   1f4b8:	sub	r0, fp, #32
   1f4bc:	movw	r2, #2
   1f4c0:	bl	1f62c <__assert_fail@plt+0xde54>
   1f4c4:	str	r0, [sp, #24]
   1f4c8:	b	1f55c <__assert_fail@plt+0xdd84>
   1f4cc:	ldr	r1, [sp, #32]
   1f4d0:	sub	r0, fp, #32
   1f4d4:	movw	r2, #5
   1f4d8:	bl	1f62c <__assert_fail@plt+0xde54>
   1f4dc:	str	r0, [sp, #24]
   1f4e0:	b	1f55c <__assert_fail@plt+0xdd84>
   1f4e4:	ldr	r1, [sp, #32]
   1f4e8:	sub	r0, fp, #32
   1f4ec:	movw	r2, #4
   1f4f0:	bl	1f62c <__assert_fail@plt+0xde54>
   1f4f4:	str	r0, [sp, #24]
   1f4f8:	b	1f55c <__assert_fail@plt+0xdd84>
   1f4fc:	sub	r0, fp, #32
   1f500:	movw	r1, #2
   1f504:	bl	1f5c4 <__assert_fail@plt+0xddec>
   1f508:	str	r0, [sp, #24]
   1f50c:	b	1f55c <__assert_fail@plt+0xdd84>
   1f510:	ldr	r1, [sp, #32]
   1f514:	sub	r0, fp, #32
   1f518:	movw	r2, #8
   1f51c:	bl	1f62c <__assert_fail@plt+0xde54>
   1f520:	str	r0, [sp, #24]
   1f524:	b	1f55c <__assert_fail@plt+0xdd84>
   1f528:	ldr	r1, [sp, #32]
   1f52c:	sub	r0, fp, #32
   1f530:	movw	r2, #7
   1f534:	bl	1f62c <__assert_fail@plt+0xde54>
   1f538:	str	r0, [sp, #24]
   1f53c:	b	1f55c <__assert_fail@plt+0xdd84>
   1f540:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f544:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f548:	str	r0, [r1]
   1f54c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1f550:	orr	r0, r0, #2
   1f554:	str	r0, [fp, #-4]
   1f558:	b	1f5b8 <__assert_fail@plt+0xdde0>
   1f55c:	ldr	r0, [sp, #24]
   1f560:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1f564:	orr	r0, r1, r0
   1f568:	str	r0, [fp, #-36]	; 0xffffffdc
   1f56c:	ldr	r0, [sp, #28]
   1f570:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f574:	ldr	r2, [r1]
   1f578:	add	r0, r2, r0
   1f57c:	str	r0, [r1]
   1f580:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f584:	ldr	r0, [r0]
   1f588:	ldrsb	r0, [r0]
   1f58c:	cmp	r0, #0
   1f590:	beq	1f5a0 <__assert_fail@plt+0xddc8>
   1f594:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1f598:	orr	r0, r0, #2
   1f59c:	str	r0, [fp, #-36]	; 0xffffffdc
   1f5a0:	b	1f5a4 <__assert_fail@plt+0xddcc>
   1f5a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f5a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f5ac:	str	r0, [r1]
   1f5b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1f5b4:	str	r0, [fp, #-4]
   1f5b8:	ldr	r0, [fp, #-4]
   1f5bc:	mov	sp, fp
   1f5c0:	pop	{fp, pc}
   1f5c4:	sub	sp, sp, #12
   1f5c8:	str	r0, [sp, #4]
   1f5cc:	str	r1, [sp]
   1f5d0:	ldr	r0, [sp]
   1f5d4:	mvn	r1, #0
   1f5d8:	udiv	r0, r1, r0
   1f5dc:	ldr	r1, [sp, #4]
   1f5e0:	ldr	r1, [r1]
   1f5e4:	cmp	r0, r1
   1f5e8:	bcs	1f604 <__assert_fail@plt+0xde2c>
   1f5ec:	ldr	r0, [sp, #4]
   1f5f0:	mvn	r1, #0
   1f5f4:	str	r1, [r0]
   1f5f8:	movw	r0, #1
   1f5fc:	str	r0, [sp, #8]
   1f600:	b	1f620 <__assert_fail@plt+0xde48>
   1f604:	ldr	r0, [sp]
   1f608:	ldr	r1, [sp, #4]
   1f60c:	ldr	r2, [r1]
   1f610:	mul	r0, r2, r0
   1f614:	str	r0, [r1]
   1f618:	movw	r0, #0
   1f61c:	str	r0, [sp, #8]
   1f620:	ldr	r0, [sp, #8]
   1f624:	add	sp, sp, #12
   1f628:	bx	lr
   1f62c:	push	{fp, lr}
   1f630:	mov	fp, sp
   1f634:	sub	sp, sp, #16
   1f638:	str	r0, [fp, #-4]
   1f63c:	str	r1, [sp, #8]
   1f640:	str	r2, [sp, #4]
   1f644:	movw	r0, #0
   1f648:	str	r0, [sp]
   1f64c:	ldr	r0, [sp, #4]
   1f650:	mvn	r1, #0
   1f654:	add	r1, r0, r1
   1f658:	str	r1, [sp, #4]
   1f65c:	cmp	r0, #0
   1f660:	beq	1f680 <__assert_fail@plt+0xdea8>
   1f664:	ldr	r0, [fp, #-4]
   1f668:	ldr	r1, [sp, #8]
   1f66c:	bl	1f5c4 <__assert_fail@plt+0xddec>
   1f670:	ldr	r1, [sp]
   1f674:	orr	r0, r1, r0
   1f678:	str	r0, [sp]
   1f67c:	b	1f64c <__assert_fail@plt+0xde74>
   1f680:	ldr	r0, [sp]
   1f684:	mov	sp, fp
   1f688:	pop	{fp, pc}
   1f68c:	push	{fp, lr}
   1f690:	mov	fp, sp
   1f694:	sub	sp, sp, #16
   1f698:	str	r0, [sp, #8]
   1f69c:	str	r1, [sp, #4]
   1f6a0:	ldr	r0, [sp, #8]
   1f6a4:	cmp	r0, #0
   1f6a8:	beq	1f6b8 <__assert_fail@plt+0xdee0>
   1f6ac:	ldr	r0, [sp, #4]
   1f6b0:	cmp	r0, #0
   1f6b4:	bne	1f6c4 <__assert_fail@plt+0xdeec>
   1f6b8:	movw	r0, #1
   1f6bc:	str	r0, [sp, #4]
   1f6c0:	str	r0, [sp, #8]
   1f6c4:	ldr	r0, [sp, #4]
   1f6c8:	cmp	r0, #0
   1f6cc:	beq	1f700 <__assert_fail@plt+0xdf28>
   1f6d0:	ldr	r0, [pc, #76]	; 1f724 <__assert_fail@plt+0xdf4c>
   1f6d4:	ldr	r1, [sp, #4]
   1f6d8:	udiv	r0, r0, r1
   1f6dc:	ldr	r1, [sp, #8]
   1f6e0:	cmp	r0, r1
   1f6e4:	bcs	1f700 <__assert_fail@plt+0xdf28>
   1f6e8:	bl	11664 <__errno_location@plt>
   1f6ec:	movw	lr, #12
   1f6f0:	str	lr, [r0]
   1f6f4:	movw	r0, #0
   1f6f8:	str	r0, [fp, #-4]
   1f6fc:	b	1f718 <__assert_fail@plt+0xdf40>
   1f700:	ldr	r0, [sp, #8]
   1f704:	ldr	r1, [sp, #4]
   1f708:	bl	11418 <calloc@plt>
   1f70c:	str	r0, [sp]
   1f710:	ldr	r0, [sp]
   1f714:	str	r0, [fp, #-4]
   1f718:	ldr	r0, [fp, #-4]
   1f71c:	mov	sp, fp
   1f720:	pop	{fp, pc}
   1f724:	svcvc	0x00ffffff
   1f728:	sub	sp, sp, #8
   1f72c:	push	{fp, lr}
   1f730:	mov	fp, sp
   1f734:	sub	sp, sp, #48	; 0x30
   1f738:	str	r3, [fp, #12]
   1f73c:	str	r2, [fp, #8]
   1f740:	str	r0, [fp, #-4]
   1f744:	str	r1, [fp, #-8]
   1f748:	mvn	r0, #0
   1f74c:	str	r0, [fp, #-16]
   1f750:	add	r0, fp, #8
   1f754:	str	r0, [fp, #-12]
   1f758:	ldr	r0, [fp, #-8]
   1f75c:	cmp	r0, #0
   1f760:	str	r0, [sp, #12]
   1f764:	beq	1f780 <__assert_fail@plt+0xdfa8>
   1f768:	b	1f76c <__assert_fail@plt+0xdf94>
   1f76c:	movw	r0, #1030	; 0x406
   1f770:	ldr	r1, [sp, #12]
   1f774:	cmp	r1, r0
   1f778:	beq	1f7a8 <__assert_fail@plt+0xdfd0>
   1f77c:	b	1f7d0 <__assert_fail@plt+0xdff8>
   1f780:	ldr	r0, [fp, #-12]
   1f784:	add	r1, r0, #4
   1f788:	str	r1, [fp, #-12]
   1f78c:	ldr	r0, [r0]
   1f790:	str	r0, [fp, #-20]	; 0xffffffec
   1f794:	ldr	r0, [fp, #-4]
   1f798:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f79c:	bl	1f97c <__assert_fail@plt+0xe1a4>
   1f7a0:	str	r0, [fp, #-16]
   1f7a4:	b	1f95c <__assert_fail@plt+0xe184>
   1f7a8:	ldr	r0, [fp, #-12]
   1f7ac:	add	r1, r0, #4
   1f7b0:	str	r1, [fp, #-12]
   1f7b4:	ldr	r0, [r0]
   1f7b8:	str	r0, [sp, #24]
   1f7bc:	ldr	r0, [fp, #-4]
   1f7c0:	ldr	r1, [sp, #24]
   1f7c4:	bl	1f9b0 <__assert_fail@plt+0xe1d8>
   1f7c8:	str	r0, [fp, #-16]
   1f7cc:	b	1f95c <__assert_fail@plt+0xe184>
   1f7d0:	ldr	r0, [fp, #-8]
   1f7d4:	cmp	r0, #0
   1f7d8:	str	r0, [sp, #8]
   1f7dc:	beq	1f904 <__assert_fail@plt+0xe12c>
   1f7e0:	b	1f7e4 <__assert_fail@plt+0xe00c>
   1f7e4:	ldr	r0, [sp, #8]
   1f7e8:	cmp	r0, #1
   1f7ec:	beq	1f8f0 <__assert_fail@plt+0xe118>
   1f7f0:	b	1f7f4 <__assert_fail@plt+0xe01c>
   1f7f4:	ldr	r0, [sp, #8]
   1f7f8:	cmp	r0, #2
   1f7fc:	beq	1f904 <__assert_fail@plt+0xe12c>
   1f800:	b	1f804 <__assert_fail@plt+0xe02c>
   1f804:	ldr	r0, [sp, #8]
   1f808:	cmp	r0, #3
   1f80c:	beq	1f8f0 <__assert_fail@plt+0xe118>
   1f810:	b	1f814 <__assert_fail@plt+0xe03c>
   1f814:	ldr	r0, [sp, #8]
   1f818:	cmp	r0, #4
   1f81c:	beq	1f904 <__assert_fail@plt+0xe12c>
   1f820:	b	1f824 <__assert_fail@plt+0xe04c>
   1f824:	ldr	r0, [sp, #8]
   1f828:	cmp	r0, #8
   1f82c:	beq	1f904 <__assert_fail@plt+0xe12c>
   1f830:	b	1f834 <__assert_fail@plt+0xe05c>
   1f834:	ldr	r0, [sp, #8]
   1f838:	cmp	r0, #9
   1f83c:	beq	1f8f0 <__assert_fail@plt+0xe118>
   1f840:	b	1f844 <__assert_fail@plt+0xe06c>
   1f844:	ldr	r0, [sp, #8]
   1f848:	cmp	r0, #10
   1f84c:	beq	1f904 <__assert_fail@plt+0xe12c>
   1f850:	b	1f854 <__assert_fail@plt+0xe07c>
   1f854:	ldr	r0, [sp, #8]
   1f858:	cmp	r0, #11
   1f85c:	beq	1f8f0 <__assert_fail@plt+0xe118>
   1f860:	b	1f864 <__assert_fail@plt+0xe08c>
   1f864:	ldr	r0, [sp, #8]
   1f868:	cmp	r0, #1024	; 0x400
   1f86c:	beq	1f904 <__assert_fail@plt+0xe12c>
   1f870:	b	1f874 <__assert_fail@plt+0xe09c>
   1f874:	movw	r0, #1025	; 0x401
   1f878:	ldr	r1, [sp, #8]
   1f87c:	cmp	r1, r0
   1f880:	beq	1f8f0 <__assert_fail@plt+0xe118>
   1f884:	b	1f888 <__assert_fail@plt+0xe0b0>
   1f888:	movw	r0, #1026	; 0x402
   1f88c:	ldr	r1, [sp, #8]
   1f890:	cmp	r1, r0
   1f894:	beq	1f904 <__assert_fail@plt+0xe12c>
   1f898:	b	1f89c <__assert_fail@plt+0xe0c4>
   1f89c:	movw	r0, #1030	; 0x406
   1f8a0:	ldr	r1, [sp, #8]
   1f8a4:	sub	r0, r1, r0
   1f8a8:	cmp	r0, #2
   1f8ac:	bcc	1f904 <__assert_fail@plt+0xe12c>
   1f8b0:	b	1f8b4 <__assert_fail@plt+0xe0dc>
   1f8b4:	movw	r0, #1032	; 0x408
   1f8b8:	ldr	r1, [sp, #8]
   1f8bc:	cmp	r1, r0
   1f8c0:	beq	1f8f0 <__assert_fail@plt+0xe118>
   1f8c4:	b	1f8c8 <__assert_fail@plt+0xe0f0>
   1f8c8:	movw	r0, #1033	; 0x409
   1f8cc:	ldr	r1, [sp, #8]
   1f8d0:	cmp	r1, r0
   1f8d4:	beq	1f904 <__assert_fail@plt+0xe12c>
   1f8d8:	b	1f8dc <__assert_fail@plt+0xe104>
   1f8dc:	movw	r0, #1034	; 0x40a
   1f8e0:	ldr	r1, [sp, #8]
   1f8e4:	cmp	r1, r0
   1f8e8:	bne	1f930 <__assert_fail@plt+0xe158>
   1f8ec:	b	1f8f0 <__assert_fail@plt+0xe118>
   1f8f0:	ldr	r0, [fp, #-4]
   1f8f4:	ldr	r1, [fp, #-8]
   1f8f8:	bl	116f4 <fcntl64@plt>
   1f8fc:	str	r0, [fp, #-16]
   1f900:	b	1f958 <__assert_fail@plt+0xe180>
   1f904:	ldr	r0, [fp, #-12]
   1f908:	add	r1, r0, #4
   1f90c:	str	r1, [fp, #-12]
   1f910:	ldr	r0, [r0]
   1f914:	str	r0, [sp, #20]
   1f918:	ldr	r0, [fp, #-4]
   1f91c:	ldr	r1, [fp, #-8]
   1f920:	ldr	r2, [sp, #20]
   1f924:	bl	116f4 <fcntl64@plt>
   1f928:	str	r0, [fp, #-16]
   1f92c:	b	1f958 <__assert_fail@plt+0xe180>
   1f930:	ldr	r0, [fp, #-12]
   1f934:	add	r1, r0, #4
   1f938:	str	r1, [fp, #-12]
   1f93c:	ldr	r0, [r0]
   1f940:	str	r0, [sp, #16]
   1f944:	ldr	r0, [fp, #-4]
   1f948:	ldr	r1, [fp, #-8]
   1f94c:	ldr	r2, [sp, #16]
   1f950:	bl	116f4 <fcntl64@plt>
   1f954:	str	r0, [fp, #-16]
   1f958:	b	1f95c <__assert_fail@plt+0xe184>
   1f95c:	sub	r0, fp, #12
   1f960:	ldr	r1, [fp, #-16]
   1f964:	str	r0, [sp, #4]
   1f968:	mov	r0, r1
   1f96c:	mov	sp, fp
   1f970:	pop	{fp, lr}
   1f974:	add	sp, sp, #8
   1f978:	bx	lr
   1f97c:	push	{fp, lr}
   1f980:	mov	fp, sp
   1f984:	sub	sp, sp, #16
   1f988:	str	r0, [fp, #-4]
   1f98c:	str	r1, [sp, #8]
   1f990:	ldr	r0, [fp, #-4]
   1f994:	ldr	r2, [sp, #8]
   1f998:	movw	r1, #0
   1f99c:	bl	116f4 <fcntl64@plt>
   1f9a0:	str	r0, [sp, #4]
   1f9a4:	ldr	r0, [sp, #4]
   1f9a8:	mov	sp, fp
   1f9ac:	pop	{fp, pc}
   1f9b0:	push	{fp, lr}
   1f9b4:	mov	fp, sp
   1f9b8:	sub	sp, sp, #32
   1f9bc:	str	r0, [fp, #-4]
   1f9c0:	str	r1, [fp, #-8]
   1f9c4:	movw	r0, #21476	; 0x53e4
   1f9c8:	movt	r0, #3
   1f9cc:	ldr	r0, [r0]
   1f9d0:	movw	r1, #0
   1f9d4:	cmp	r1, r0
   1f9d8:	bgt	1fa58 <__assert_fail@plt+0xe280>
   1f9dc:	ldr	r0, [fp, #-4]
   1f9e0:	ldr	r2, [fp, #-8]
   1f9e4:	movw	r1, #1030	; 0x406
   1f9e8:	bl	116f4 <fcntl64@plt>
   1f9ec:	str	r0, [fp, #-12]
   1f9f0:	ldr	r0, [fp, #-12]
   1f9f4:	movw	r1, #0
   1f9f8:	cmp	r1, r0
   1f9fc:	ble	1fa10 <__assert_fail@plt+0xe238>
   1fa00:	bl	11664 <__errno_location@plt>
   1fa04:	ldr	r0, [r0]
   1fa08:	cmp	r0, #22
   1fa0c:	beq	1fa24 <__assert_fail@plt+0xe24c>
   1fa10:	movw	r0, #21476	; 0x53e4
   1fa14:	movt	r0, #3
   1fa18:	movw	r1, #1
   1fa1c:	str	r1, [r0]
   1fa20:	b	1fa54 <__assert_fail@plt+0xe27c>
   1fa24:	ldr	r0, [fp, #-4]
   1fa28:	ldr	r1, [fp, #-8]
   1fa2c:	bl	1f97c <__assert_fail@plt+0xe1a4>
   1fa30:	str	r0, [fp, #-12]
   1fa34:	ldr	r0, [fp, #-12]
   1fa38:	cmp	r0, #0
   1fa3c:	blt	1fa50 <__assert_fail@plt+0xe278>
   1fa40:	movw	r0, #21476	; 0x53e4
   1fa44:	movt	r0, #3
   1fa48:	mvn	r1, #0
   1fa4c:	str	r1, [r0]
   1fa50:	b	1fa54 <__assert_fail@plt+0xe27c>
   1fa54:	b	1fa68 <__assert_fail@plt+0xe290>
   1fa58:	ldr	r0, [fp, #-4]
   1fa5c:	ldr	r1, [fp, #-8]
   1fa60:	bl	1f97c <__assert_fail@plt+0xe1a4>
   1fa64:	str	r0, [fp, #-12]
   1fa68:	ldr	r0, [fp, #-12]
   1fa6c:	movw	r1, #0
   1fa70:	cmp	r1, r0
   1fa74:	bgt	1fafc <__assert_fail@plt+0xe324>
   1fa78:	movw	r0, #21476	; 0x53e4
   1fa7c:	movt	r0, #3
   1fa80:	ldr	r0, [r0]
   1fa84:	cmn	r0, #1
   1fa88:	bne	1fafc <__assert_fail@plt+0xe324>
   1fa8c:	ldr	r0, [fp, #-12]
   1fa90:	movw	r1, #1
   1fa94:	bl	116f4 <fcntl64@plt>
   1fa98:	str	r0, [sp, #16]
   1fa9c:	ldr	r0, [sp, #16]
   1faa0:	cmp	r0, #0
   1faa4:	blt	1fac4 <__assert_fail@plt+0xe2ec>
   1faa8:	ldr	r0, [fp, #-12]
   1faac:	ldr	r1, [sp, #16]
   1fab0:	orr	r2, r1, #1
   1fab4:	movw	r1, #2
   1fab8:	bl	116f4 <fcntl64@plt>
   1fabc:	cmn	r0, #1
   1fac0:	bne	1faf8 <__assert_fail@plt+0xe320>
   1fac4:	bl	11664 <__errno_location@plt>
   1fac8:	ldr	r0, [r0]
   1facc:	str	r0, [sp, #12]
   1fad0:	ldr	r0, [fp, #-12]
   1fad4:	bl	117c0 <close@plt>
   1fad8:	ldr	lr, [sp, #12]
   1fadc:	str	r0, [sp, #8]
   1fae0:	str	lr, [sp, #4]
   1fae4:	bl	11664 <__errno_location@plt>
   1fae8:	ldr	lr, [sp, #4]
   1faec:	str	lr, [r0]
   1faf0:	mvn	r0, #0
   1faf4:	str	r0, [fp, #-12]
   1faf8:	b	1fafc <__assert_fail@plt+0xe324>
   1fafc:	ldr	r0, [fp, #-12]
   1fb00:	mov	sp, fp
   1fb04:	pop	{fp, pc}
   1fb08:	push	{fp, lr}
   1fb0c:	mov	fp, sp
   1fb10:	sub	sp, sp, #8
   1fb14:	str	r0, [sp]
   1fb18:	ldr	r0, [sp]
   1fb1c:	movw	r1, #0
   1fb20:	cmp	r0, r1
   1fb24:	beq	1fb38 <__assert_fail@plt+0xe360>
   1fb28:	ldr	r0, [sp]
   1fb2c:	bl	115d4 <__freading@plt>
   1fb30:	cmp	r0, #0
   1fb34:	bne	1fb48 <__assert_fail@plt+0xe370>
   1fb38:	ldr	r0, [sp]
   1fb3c:	bl	11460 <fflush@plt>
   1fb40:	str	r0, [sp, #4]
   1fb44:	b	1fb5c <__assert_fail@plt+0xe384>
   1fb48:	ldr	r0, [sp]
   1fb4c:	bl	1fb68 <__assert_fail@plt+0xe390>
   1fb50:	ldr	r0, [sp]
   1fb54:	bl	11460 <fflush@plt>
   1fb58:	str	r0, [sp, #4]
   1fb5c:	ldr	r0, [sp, #4]
   1fb60:	mov	sp, fp
   1fb64:	pop	{fp, pc}
   1fb68:	push	{fp, lr}
   1fb6c:	mov	fp, sp
   1fb70:	sub	sp, sp, #16
   1fb74:	str	r0, [fp, #-4]
   1fb78:	ldr	r0, [fp, #-4]
   1fb7c:	ldr	r0, [r0]
   1fb80:	and	r0, r0, #256	; 0x100
   1fb84:	cmp	r0, #0
   1fb88:	beq	1fbb0 <__assert_fail@plt+0xe3d8>
   1fb8c:	ldr	r0, [fp, #-4]
   1fb90:	mov	r1, sp
   1fb94:	mov	r2, #1
   1fb98:	str	r2, [r1]
   1fb9c:	mov	r1, #0
   1fba0:	mov	r2, r1
   1fba4:	mov	r3, r1
   1fba8:	bl	1fc94 <__assert_fail@plt+0xe4bc>
   1fbac:	str	r0, [sp, #8]
   1fbb0:	mov	sp, fp
   1fbb4:	pop	{fp, pc}
   1fbb8:	sub	sp, sp, #16
   1fbbc:	str	r0, [sp, #8]
   1fbc0:	ldr	r0, [sp, #8]
   1fbc4:	ldr	r0, [r0, #20]
   1fbc8:	ldr	r1, [sp, #8]
   1fbcc:	ldr	r1, [r1, #16]
   1fbd0:	cmp	r0, r1
   1fbd4:	bls	1fbe4 <__assert_fail@plt+0xe40c>
   1fbd8:	movw	r0, #0
   1fbdc:	str	r0, [sp, #12]
   1fbe0:	b	1fc48 <__assert_fail@plt+0xe470>
   1fbe4:	ldr	r0, [sp, #8]
   1fbe8:	ldr	r0, [r0, #8]
   1fbec:	ldr	r1, [sp, #8]
   1fbf0:	ldr	r1, [r1, #4]
   1fbf4:	sub	r0, r0, r1
   1fbf8:	ldr	r1, [sp, #8]
   1fbfc:	ldr	r1, [r1]
   1fc00:	and	r1, r1, #256	; 0x100
   1fc04:	cmp	r1, #0
   1fc08:	str	r0, [sp, #4]
   1fc0c:	beq	1fc2c <__assert_fail@plt+0xe454>
   1fc10:	ldr	r0, [sp, #8]
   1fc14:	ldr	r0, [r0, #44]	; 0x2c
   1fc18:	ldr	r1, [sp, #8]
   1fc1c:	ldr	r1, [r1, #36]	; 0x24
   1fc20:	sub	r0, r0, r1
   1fc24:	str	r0, [sp]
   1fc28:	b	1fc38 <__assert_fail@plt+0xe460>
   1fc2c:	movw	r0, #0
   1fc30:	str	r0, [sp]
   1fc34:	b	1fc38 <__assert_fail@plt+0xe460>
   1fc38:	ldr	r0, [sp]
   1fc3c:	ldr	r1, [sp, #4]
   1fc40:	add	r0, r1, r0
   1fc44:	str	r0, [sp, #12]
   1fc48:	ldr	r0, [sp, #12]
   1fc4c:	add	sp, sp, #16
   1fc50:	bx	lr
   1fc54:	push	{fp, lr}
   1fc58:	mov	fp, sp
   1fc5c:	sub	sp, sp, #16
   1fc60:	str	r0, [fp, #-4]
   1fc64:	bl	11664 <__errno_location@plt>
   1fc68:	ldr	r0, [r0]
   1fc6c:	str	r0, [sp, #8]
   1fc70:	ldr	r0, [fp, #-4]
   1fc74:	bl	11478 <free@plt>
   1fc78:	ldr	r0, [sp, #8]
   1fc7c:	str	r0, [sp, #4]
   1fc80:	bl	11664 <__errno_location@plt>
   1fc84:	ldr	lr, [sp, #4]
   1fc88:	str	lr, [r0]
   1fc8c:	mov	sp, fp
   1fc90:	pop	{fp, pc}
   1fc94:	push	{fp, lr}
   1fc98:	mov	fp, sp
   1fc9c:	sub	sp, sp, #32
   1fca0:	ldr	r1, [fp, #8]
   1fca4:	str	r0, [fp, #-8]
   1fca8:	str	r3, [sp, #20]
   1fcac:	str	r2, [sp, #16]
   1fcb0:	ldr	r0, [fp, #-8]
   1fcb4:	ldr	r0, [r0, #8]
   1fcb8:	ldr	r2, [fp, #-8]
   1fcbc:	ldr	r2, [r2, #4]
   1fcc0:	cmp	r0, r2
   1fcc4:	str	r1, [sp, #4]
   1fcc8:	bne	1fd74 <__assert_fail@plt+0xe59c>
   1fccc:	ldr	r0, [fp, #-8]
   1fcd0:	ldr	r0, [r0, #20]
   1fcd4:	ldr	r1, [fp, #-8]
   1fcd8:	ldr	r1, [r1, #16]
   1fcdc:	cmp	r0, r1
   1fce0:	bne	1fd74 <__assert_fail@plt+0xe59c>
   1fce4:	ldr	r0, [fp, #-8]
   1fce8:	ldr	r0, [r0, #36]	; 0x24
   1fcec:	movw	r1, #0
   1fcf0:	cmp	r0, r1
   1fcf4:	bne	1fd74 <__assert_fail@plt+0xe59c>
   1fcf8:	ldr	r0, [fp, #-8]
   1fcfc:	bl	116ac <fileno@plt>
   1fd00:	ldr	r2, [sp, #16]
   1fd04:	ldr	r3, [sp, #20]
   1fd08:	ldr	lr, [fp, #8]
   1fd0c:	mov	r1, sp
   1fd10:	str	lr, [r1]
   1fd14:	bl	11544 <lseek64@plt>
   1fd18:	str	r1, [sp, #12]
   1fd1c:	str	r0, [sp, #8]
   1fd20:	ldr	r0, [sp, #8]
   1fd24:	ldr	r1, [sp, #12]
   1fd28:	and	r0, r0, r1
   1fd2c:	cmn	r0, #1
   1fd30:	bne	1fd44 <__assert_fail@plt+0xe56c>
   1fd34:	b	1fd38 <__assert_fail@plt+0xe560>
   1fd38:	mvn	r0, #0
   1fd3c:	str	r0, [fp, #-4]
   1fd40:	b	1fd94 <__assert_fail@plt+0xe5bc>
   1fd44:	ldr	r0, [fp, #-8]
   1fd48:	ldr	r1, [r0]
   1fd4c:	bic	r1, r1, #16
   1fd50:	str	r1, [r0]
   1fd54:	ldr	r0, [sp, #8]
   1fd58:	ldr	r1, [sp, #12]
   1fd5c:	ldr	r2, [fp, #-8]
   1fd60:	str	r1, [r2, #84]	; 0x54
   1fd64:	str	r0, [r2, #80]	; 0x50
   1fd68:	movw	r0, #0
   1fd6c:	str	r0, [fp, #-4]
   1fd70:	b	1fd94 <__assert_fail@plt+0xe5bc>
   1fd74:	ldr	r0, [fp, #-8]
   1fd78:	ldr	r2, [sp, #16]
   1fd7c:	ldr	r3, [sp, #20]
   1fd80:	ldr	r1, [fp, #8]
   1fd84:	mov	ip, sp
   1fd88:	str	r1, [ip]
   1fd8c:	bl	116e8 <fseeko64@plt>
   1fd90:	str	r0, [fp, #-4]
   1fd94:	ldr	r0, [fp, #-4]
   1fd98:	mov	sp, fp
   1fd9c:	pop	{fp, pc}
   1fda0:	push	{fp, lr}
   1fda4:	mov	fp, sp
   1fda8:	sub	sp, sp, #16
   1fdac:	str	r0, [sp, #8]
   1fdb0:	ldr	r0, [sp, #8]
   1fdb4:	cmp	r0, #0
   1fdb8:	bne	1fdc4 <__assert_fail@plt+0xe5ec>
   1fdbc:	movw	r0, #1
   1fdc0:	str	r0, [sp, #8]
   1fdc4:	ldr	r0, [pc, #64]	; 1fe0c <__assert_fail@plt+0xe634>
   1fdc8:	ldr	r1, [sp, #8]
   1fdcc:	cmp	r0, r1
   1fdd0:	bcs	1fdec <__assert_fail@plt+0xe614>
   1fdd4:	bl	11664 <__errno_location@plt>
   1fdd8:	movw	lr, #12
   1fddc:	str	lr, [r0]
   1fde0:	movw	r0, #0
   1fde4:	str	r0, [fp, #-4]
   1fde8:	b	1fe00 <__assert_fail@plt+0xe628>
   1fdec:	ldr	r0, [sp, #8]
   1fdf0:	bl	115bc <malloc@plt>
   1fdf4:	str	r0, [sp, #4]
   1fdf8:	ldr	r0, [sp, #4]
   1fdfc:	str	r0, [fp, #-4]
   1fe00:	ldr	r0, [fp, #-4]
   1fe04:	mov	sp, fp
   1fe08:	pop	{fp, pc}
   1fe0c:	svcvc	0x00ffffff
   1fe10:	push	{fp, lr}
   1fe14:	mov	fp, sp
   1fe18:	sub	sp, sp, #32
   1fe1c:	str	r0, [fp, #-8]
   1fe20:	str	r1, [fp, #-12]
   1fe24:	str	r2, [sp, #16]
   1fe28:	str	r3, [sp, #12]
   1fe2c:	ldr	r0, [fp, #-8]
   1fe30:	movw	r1, #0
   1fe34:	cmp	r0, r1
   1fe38:	bne	1fe44 <__assert_fail@plt+0xe66c>
   1fe3c:	add	r0, sp, #4
   1fe40:	str	r0, [fp, #-8]
   1fe44:	ldr	r0, [fp, #-8]
   1fe48:	ldr	r1, [fp, #-12]
   1fe4c:	ldr	r2, [sp, #16]
   1fe50:	ldr	r3, [sp, #12]
   1fe54:	bl	11580 <mbrtowc@plt>
   1fe58:	str	r0, [sp, #8]
   1fe5c:	ldr	r0, [sp, #8]
   1fe60:	mvn	r1, #1
   1fe64:	cmp	r1, r0
   1fe68:	bhi	1feac <__assert_fail@plt+0xe6d4>
   1fe6c:	ldr	r0, [sp, #16]
   1fe70:	cmp	r0, #0
   1fe74:	beq	1feac <__assert_fail@plt+0xe6d4>
   1fe78:	movw	r0, #0
   1fe7c:	bl	2147c <__assert_fail@plt+0xfca4>
   1fe80:	tst	r0, #1
   1fe84:	bne	1feac <__assert_fail@plt+0xe6d4>
   1fe88:	ldr	r0, [fp, #-12]
   1fe8c:	ldrb	r0, [r0]
   1fe90:	strb	r0, [sp, #3]
   1fe94:	ldrb	r0, [sp, #3]
   1fe98:	ldr	r1, [fp, #-8]
   1fe9c:	str	r0, [r1]
   1fea0:	movw	r0, #1
   1fea4:	str	r0, [fp, #-4]
   1fea8:	b	1feb4 <__assert_fail@plt+0xe6dc>
   1feac:	ldr	r0, [sp, #8]
   1feb0:	str	r0, [fp, #-4]
   1feb4:	ldr	r0, [fp, #-4]
   1feb8:	mov	sp, fp
   1febc:	pop	{fp, pc}
   1fec0:	push	{fp, lr}
   1fec4:	mov	fp, sp
   1fec8:	sub	sp, sp, #16
   1fecc:	str	r0, [sp, #8]
   1fed0:	str	r1, [sp, #4]
   1fed4:	ldr	r0, [sp, #8]
   1fed8:	movw	r1, #0
   1fedc:	cmp	r0, r1
   1fee0:	bne	1fef4 <__assert_fail@plt+0xe71c>
   1fee4:	ldr	r0, [sp, #4]
   1fee8:	bl	1fda0 <__assert_fail@plt+0xe5c8>
   1feec:	str	r0, [fp, #-4]
   1fef0:	b	1ff54 <__assert_fail@plt+0xe77c>
   1fef4:	ldr	r0, [sp, #4]
   1fef8:	cmp	r0, #0
   1fefc:	bne	1ff14 <__assert_fail@plt+0xe73c>
   1ff00:	ldr	r0, [sp, #8]
   1ff04:	bl	1fc54 <__assert_fail@plt+0xe47c>
   1ff08:	movw	r0, #0
   1ff0c:	str	r0, [fp, #-4]
   1ff10:	b	1ff54 <__assert_fail@plt+0xe77c>
   1ff14:	ldr	r0, [pc, #68]	; 1ff60 <__assert_fail@plt+0xe788>
   1ff18:	ldr	r1, [sp, #4]
   1ff1c:	cmp	r0, r1
   1ff20:	bcs	1ff3c <__assert_fail@plt+0xe764>
   1ff24:	bl	11664 <__errno_location@plt>
   1ff28:	movw	lr, #12
   1ff2c:	str	lr, [r0]
   1ff30:	movw	r0, #0
   1ff34:	str	r0, [fp, #-4]
   1ff38:	b	1ff54 <__assert_fail@plt+0xe77c>
   1ff3c:	ldr	r0, [sp, #8]
   1ff40:	ldr	r1, [sp, #4]
   1ff44:	bl	114fc <realloc@plt>
   1ff48:	str	r0, [sp]
   1ff4c:	ldr	r0, [sp]
   1ff50:	str	r0, [fp, #-4]
   1ff54:	ldr	r0, [fp, #-4]
   1ff58:	mov	sp, fp
   1ff5c:	pop	{fp, pc}
   1ff60:	svcvc	0x00ffffff
   1ff64:	push	{fp, lr}
   1ff68:	mov	fp, sp
   1ff6c:	sub	sp, sp, #176	; 0xb0
   1ff70:	str	r0, [fp, #-8]
   1ff74:	str	r1, [fp, #-12]
   1ff78:	str	r2, [fp, #-16]
   1ff7c:	b	20334 <__assert_fail@plt+0xeb5c>
   1ff80:	b	20154 <__assert_fail@plt+0xe97c>
   1ff84:	ldr	r0, [fp, #-16]
   1ff88:	cmp	r0, #0
   1ff8c:	bcs	20090 <__assert_fail@plt+0xe8b8>
   1ff90:	ldr	r0, [fp, #-12]
   1ff94:	cmp	r0, #0
   1ff98:	bcs	20020 <__assert_fail@plt+0xe848>
   1ff9c:	b	1ffbc <__assert_fail@plt+0xe7e4>
   1ffa0:	ldr	r0, [fp, #-12]
   1ffa4:	ldr	r1, [fp, #-16]
   1ffa8:	movw	r2, #127	; 0x7f
   1ffac:	udiv	r1, r2, r1
   1ffb0:	cmp	r0, r1
   1ffb4:	bcc	20124 <__assert_fail@plt+0xe94c>
   1ffb8:	b	2013c <__assert_fail@plt+0xe964>
   1ffbc:	b	1ffd0 <__assert_fail@plt+0xe7f8>
   1ffc0:	ldr	r0, [fp, #-16]
   1ffc4:	cmp	r0, #1
   1ffc8:	bcc	1ffe0 <__assert_fail@plt+0xe808>
   1ffcc:	b	1ffec <__assert_fail@plt+0xe814>
   1ffd0:	ldr	r0, [fp, #-16]
   1ffd4:	movw	r1, #0
   1ffd8:	cmp	r1, r0
   1ffdc:	bcs	1ffec <__assert_fail@plt+0xe814>
   1ffe0:	movw	r0, #0
   1ffe4:	str	r0, [fp, #-24]	; 0xffffffe8
   1ffe8:	b	20004 <__assert_fail@plt+0xe82c>
   1ffec:	ldr	r0, [fp, #-16]
   1fff0:	movw	r1, #0
   1fff4:	sub	r0, r1, r0
   1fff8:	movw	r1, #127	; 0x7f
   1fffc:	udiv	r0, r1, r0
   20000:	str	r0, [fp, #-24]	; 0xffffffe8
   20004:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20008:	ldr	r1, [fp, #-12]
   2000c:	mvn	r2, #0
   20010:	sub	r1, r2, r1
   20014:	cmp	r0, r1
   20018:	bls	20124 <__assert_fail@plt+0xe94c>
   2001c:	b	2013c <__assert_fail@plt+0xe964>
   20020:	ldr	r0, [fp, #-16]
   20024:	cmn	r0, #1
   20028:	bne	20074 <__assert_fail@plt+0xe89c>
   2002c:	b	2004c <__assert_fail@plt+0xe874>
   20030:	ldr	r0, [fp, #-12]
   20034:	mvn	r1, #127	; 0x7f
   20038:	add	r0, r0, r1
   2003c:	movw	r1, #0
   20040:	cmp	r1, r0
   20044:	bcc	20124 <__assert_fail@plt+0xe94c>
   20048:	b	2013c <__assert_fail@plt+0xe964>
   2004c:	ldr	r0, [fp, #-12]
   20050:	movw	r1, #0
   20054:	cmp	r1, r0
   20058:	bcs	2013c <__assert_fail@plt+0xe964>
   2005c:	ldr	r0, [fp, #-12]
   20060:	sub	r0, r0, #1
   20064:	movw	r1, #127	; 0x7f
   20068:	cmp	r1, r0
   2006c:	bcc	20124 <__assert_fail@plt+0xe94c>
   20070:	b	2013c <__assert_fail@plt+0xe964>
   20074:	ldr	r0, [fp, #-16]
   20078:	mvn	r1, #127	; 0x7f
   2007c:	udiv	r0, r1, r0
   20080:	ldr	r1, [fp, #-12]
   20084:	cmp	r0, r1
   20088:	bcc	20124 <__assert_fail@plt+0xe94c>
   2008c:	b	2013c <__assert_fail@plt+0xe964>
   20090:	ldr	r0, [fp, #-16]
   20094:	cmp	r0, #0
   20098:	bne	200a0 <__assert_fail@plt+0xe8c8>
   2009c:	b	2013c <__assert_fail@plt+0xe964>
   200a0:	ldr	r0, [fp, #-12]
   200a4:	cmp	r0, #0
   200a8:	bcs	2010c <__assert_fail@plt+0xe934>
   200ac:	ldr	r0, [fp, #-12]
   200b0:	cmn	r0, #1
   200b4:	bne	200f0 <__assert_fail@plt+0xe918>
   200b8:	b	200d8 <__assert_fail@plt+0xe900>
   200bc:	ldr	r0, [fp, #-16]
   200c0:	mvn	r1, #127	; 0x7f
   200c4:	add	r0, r0, r1
   200c8:	movw	r1, #0
   200cc:	cmp	r1, r0
   200d0:	bcc	20124 <__assert_fail@plt+0xe94c>
   200d4:	b	2013c <__assert_fail@plt+0xe964>
   200d8:	ldr	r0, [fp, #-16]
   200dc:	sub	r0, r0, #1
   200e0:	movw	r1, #127	; 0x7f
   200e4:	cmp	r1, r0
   200e8:	bcc	20124 <__assert_fail@plt+0xe94c>
   200ec:	b	2013c <__assert_fail@plt+0xe964>
   200f0:	ldr	r0, [fp, #-12]
   200f4:	mvn	r1, #127	; 0x7f
   200f8:	udiv	r0, r1, r0
   200fc:	ldr	r1, [fp, #-16]
   20100:	cmp	r0, r1
   20104:	bcc	20124 <__assert_fail@plt+0xe94c>
   20108:	b	2013c <__assert_fail@plt+0xe964>
   2010c:	ldr	r0, [fp, #-16]
   20110:	movw	r1, #127	; 0x7f
   20114:	udiv	r0, r1, r0
   20118:	ldr	r1, [fp, #-12]
   2011c:	cmp	r0, r1
   20120:	bcs	2013c <__assert_fail@plt+0xe964>
   20124:	ldr	r0, [fp, #-12]
   20128:	ldr	r1, [fp, #-16]
   2012c:	mul	r0, r0, r1
   20130:	sxtb	r0, r0
   20134:	str	r0, [fp, #-20]	; 0xffffffec
   20138:	b	212b4 <__assert_fail@plt+0xfadc>
   2013c:	ldr	r0, [fp, #-12]
   20140:	ldr	r1, [fp, #-16]
   20144:	mul	r0, r0, r1
   20148:	sxtb	r0, r0
   2014c:	str	r0, [fp, #-20]	; 0xffffffec
   20150:	b	212cc <__assert_fail@plt+0xfaf4>
   20154:	ldr	r0, [fp, #-16]
   20158:	cmp	r0, #0
   2015c:	bcs	20268 <__assert_fail@plt+0xea90>
   20160:	ldr	r0, [fp, #-12]
   20164:	cmp	r0, #0
   20168:	bcs	201f0 <__assert_fail@plt+0xea18>
   2016c:	b	2018c <__assert_fail@plt+0xe9b4>
   20170:	ldr	r0, [fp, #-12]
   20174:	ldr	r1, [fp, #-16]
   20178:	movw	r2, #255	; 0xff
   2017c:	udiv	r1, r2, r1
   20180:	cmp	r0, r1
   20184:	bcc	20304 <__assert_fail@plt+0xeb2c>
   20188:	b	2031c <__assert_fail@plt+0xeb44>
   2018c:	b	201a0 <__assert_fail@plt+0xe9c8>
   20190:	ldr	r0, [fp, #-16]
   20194:	cmp	r0, #1
   20198:	bcc	201b0 <__assert_fail@plt+0xe9d8>
   2019c:	b	201bc <__assert_fail@plt+0xe9e4>
   201a0:	ldr	r0, [fp, #-16]
   201a4:	movw	r1, #0
   201a8:	cmp	r1, r0
   201ac:	bcs	201bc <__assert_fail@plt+0xe9e4>
   201b0:	movw	r0, #0
   201b4:	str	r0, [fp, #-28]	; 0xffffffe4
   201b8:	b	201d4 <__assert_fail@plt+0xe9fc>
   201bc:	ldr	r0, [fp, #-16]
   201c0:	movw	r1, #0
   201c4:	sub	r0, r1, r0
   201c8:	movw	r1, #255	; 0xff
   201cc:	udiv	r0, r1, r0
   201d0:	str	r0, [fp, #-28]	; 0xffffffe4
   201d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   201d8:	ldr	r1, [fp, #-12]
   201dc:	mvn	r2, #0
   201e0:	sub	r1, r2, r1
   201e4:	cmp	r0, r1
   201e8:	bls	20304 <__assert_fail@plt+0xeb2c>
   201ec:	b	2031c <__assert_fail@plt+0xeb44>
   201f0:	b	201f8 <__assert_fail@plt+0xea20>
   201f4:	b	201fc <__assert_fail@plt+0xea24>
   201f8:	b	2024c <__assert_fail@plt+0xea74>
   201fc:	ldr	r0, [fp, #-16]
   20200:	cmn	r0, #1
   20204:	bne	2024c <__assert_fail@plt+0xea74>
   20208:	b	20224 <__assert_fail@plt+0xea4c>
   2020c:	ldr	r0, [fp, #-12]
   20210:	add	r0, r0, #0
   20214:	movw	r1, #0
   20218:	cmp	r1, r0
   2021c:	bcc	20304 <__assert_fail@plt+0xeb2c>
   20220:	b	2031c <__assert_fail@plt+0xeb44>
   20224:	ldr	r0, [fp, #-12]
   20228:	movw	r1, #0
   2022c:	cmp	r1, r0
   20230:	bcs	2031c <__assert_fail@plt+0xeb44>
   20234:	ldr	r0, [fp, #-12]
   20238:	sub	r0, r0, #1
   2023c:	mvn	r1, #0
   20240:	cmp	r1, r0
   20244:	bcc	20304 <__assert_fail@plt+0xeb2c>
   20248:	b	2031c <__assert_fail@plt+0xeb44>
   2024c:	ldr	r0, [fp, #-16]
   20250:	movw	r1, #0
   20254:	udiv	r0, r1, r0
   20258:	ldr	r1, [fp, #-12]
   2025c:	cmp	r0, r1
   20260:	bcc	20304 <__assert_fail@plt+0xeb2c>
   20264:	b	2031c <__assert_fail@plt+0xeb44>
   20268:	ldr	r0, [fp, #-16]
   2026c:	cmp	r0, #0
   20270:	bne	20278 <__assert_fail@plt+0xeaa0>
   20274:	b	2031c <__assert_fail@plt+0xeb44>
   20278:	ldr	r0, [fp, #-12]
   2027c:	cmp	r0, #0
   20280:	bcs	202ec <__assert_fail@plt+0xeb14>
   20284:	b	2028c <__assert_fail@plt+0xeab4>
   20288:	b	20290 <__assert_fail@plt+0xeab8>
   2028c:	b	202d0 <__assert_fail@plt+0xeaf8>
   20290:	ldr	r0, [fp, #-12]
   20294:	cmn	r0, #1
   20298:	bne	202d0 <__assert_fail@plt+0xeaf8>
   2029c:	b	202b8 <__assert_fail@plt+0xeae0>
   202a0:	ldr	r0, [fp, #-16]
   202a4:	add	r0, r0, #0
   202a8:	movw	r1, #0
   202ac:	cmp	r1, r0
   202b0:	bcc	20304 <__assert_fail@plt+0xeb2c>
   202b4:	b	2031c <__assert_fail@plt+0xeb44>
   202b8:	ldr	r0, [fp, #-16]
   202bc:	sub	r0, r0, #1
   202c0:	mvn	r1, #0
   202c4:	cmp	r1, r0
   202c8:	bcc	20304 <__assert_fail@plt+0xeb2c>
   202cc:	b	2031c <__assert_fail@plt+0xeb44>
   202d0:	ldr	r0, [fp, #-12]
   202d4:	movw	r1, #0
   202d8:	udiv	r0, r1, r0
   202dc:	ldr	r1, [fp, #-16]
   202e0:	cmp	r0, r1
   202e4:	bcc	20304 <__assert_fail@plt+0xeb2c>
   202e8:	b	2031c <__assert_fail@plt+0xeb44>
   202ec:	ldr	r0, [fp, #-16]
   202f0:	movw	r1, #255	; 0xff
   202f4:	udiv	r0, r1, r0
   202f8:	ldr	r1, [fp, #-12]
   202fc:	cmp	r0, r1
   20300:	bcs	2031c <__assert_fail@plt+0xeb44>
   20304:	ldr	r0, [fp, #-12]
   20308:	ldr	r1, [fp, #-16]
   2030c:	mul	r0, r0, r1
   20310:	and	r0, r0, #255	; 0xff
   20314:	str	r0, [fp, #-20]	; 0xffffffec
   20318:	b	212b4 <__assert_fail@plt+0xfadc>
   2031c:	ldr	r0, [fp, #-12]
   20320:	ldr	r1, [fp, #-16]
   20324:	mul	r0, r0, r1
   20328:	and	r0, r0, #255	; 0xff
   2032c:	str	r0, [fp, #-20]	; 0xffffffec
   20330:	b	212cc <__assert_fail@plt+0xfaf4>
   20334:	b	206ec <__assert_fail@plt+0xef14>
   20338:	b	2050c <__assert_fail@plt+0xed34>
   2033c:	ldr	r0, [fp, #-16]
   20340:	cmp	r0, #0
   20344:	bcs	20448 <__assert_fail@plt+0xec70>
   20348:	ldr	r0, [fp, #-12]
   2034c:	cmp	r0, #0
   20350:	bcs	203d8 <__assert_fail@plt+0xec00>
   20354:	b	20374 <__assert_fail@plt+0xeb9c>
   20358:	ldr	r0, [fp, #-12]
   2035c:	ldr	r1, [fp, #-16]
   20360:	movw	r2, #32767	; 0x7fff
   20364:	udiv	r1, r2, r1
   20368:	cmp	r0, r1
   2036c:	bcc	204dc <__assert_fail@plt+0xed04>
   20370:	b	204f4 <__assert_fail@plt+0xed1c>
   20374:	b	20388 <__assert_fail@plt+0xebb0>
   20378:	ldr	r0, [fp, #-16]
   2037c:	cmp	r0, #1
   20380:	bcc	20398 <__assert_fail@plt+0xebc0>
   20384:	b	203a4 <__assert_fail@plt+0xebcc>
   20388:	ldr	r0, [fp, #-16]
   2038c:	movw	r1, #0
   20390:	cmp	r1, r0
   20394:	bcs	203a4 <__assert_fail@plt+0xebcc>
   20398:	movw	r0, #0
   2039c:	str	r0, [fp, #-32]	; 0xffffffe0
   203a0:	b	203bc <__assert_fail@plt+0xebe4>
   203a4:	ldr	r0, [fp, #-16]
   203a8:	movw	r1, #0
   203ac:	sub	r0, r1, r0
   203b0:	movw	r1, #32767	; 0x7fff
   203b4:	udiv	r0, r1, r0
   203b8:	str	r0, [fp, #-32]	; 0xffffffe0
   203bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   203c0:	ldr	r1, [fp, #-12]
   203c4:	mvn	r2, #0
   203c8:	sub	r1, r2, r1
   203cc:	cmp	r0, r1
   203d0:	bls	204dc <__assert_fail@plt+0xed04>
   203d4:	b	204f4 <__assert_fail@plt+0xed1c>
   203d8:	ldr	r0, [fp, #-16]
   203dc:	cmn	r0, #1
   203e0:	bne	2042c <__assert_fail@plt+0xec54>
   203e4:	b	20404 <__assert_fail@plt+0xec2c>
   203e8:	ldr	r0, [pc, #3840]	; 212f0 <__assert_fail@plt+0xfb18>
   203ec:	ldr	r1, [fp, #-12]
   203f0:	add	r0, r1, r0
   203f4:	movw	r1, #0
   203f8:	cmp	r1, r0
   203fc:	bcc	204dc <__assert_fail@plt+0xed04>
   20400:	b	204f4 <__assert_fail@plt+0xed1c>
   20404:	ldr	r0, [fp, #-12]
   20408:	movw	r1, #0
   2040c:	cmp	r1, r0
   20410:	bcs	204f4 <__assert_fail@plt+0xed1c>
   20414:	ldr	r0, [fp, #-12]
   20418:	sub	r0, r0, #1
   2041c:	movw	r1, #32767	; 0x7fff
   20420:	cmp	r1, r0
   20424:	bcc	204dc <__assert_fail@plt+0xed04>
   20428:	b	204f4 <__assert_fail@plt+0xed1c>
   2042c:	ldr	r0, [pc, #3772]	; 212f0 <__assert_fail@plt+0xfb18>
   20430:	ldr	r1, [fp, #-16]
   20434:	udiv	r0, r0, r1
   20438:	ldr	r1, [fp, #-12]
   2043c:	cmp	r0, r1
   20440:	bcc	204dc <__assert_fail@plt+0xed04>
   20444:	b	204f4 <__assert_fail@plt+0xed1c>
   20448:	ldr	r0, [fp, #-16]
   2044c:	cmp	r0, #0
   20450:	bne	20458 <__assert_fail@plt+0xec80>
   20454:	b	204f4 <__assert_fail@plt+0xed1c>
   20458:	ldr	r0, [fp, #-12]
   2045c:	cmp	r0, #0
   20460:	bcs	204c4 <__assert_fail@plt+0xecec>
   20464:	ldr	r0, [fp, #-12]
   20468:	cmn	r0, #1
   2046c:	bne	204a8 <__assert_fail@plt+0xecd0>
   20470:	b	20490 <__assert_fail@plt+0xecb8>
   20474:	ldr	r0, [pc, #3700]	; 212f0 <__assert_fail@plt+0xfb18>
   20478:	ldr	r1, [fp, #-16]
   2047c:	add	r0, r1, r0
   20480:	movw	r1, #0
   20484:	cmp	r1, r0
   20488:	bcc	204dc <__assert_fail@plt+0xed04>
   2048c:	b	204f4 <__assert_fail@plt+0xed1c>
   20490:	ldr	r0, [fp, #-16]
   20494:	sub	r0, r0, #1
   20498:	movw	r1, #32767	; 0x7fff
   2049c:	cmp	r1, r0
   204a0:	bcc	204dc <__assert_fail@plt+0xed04>
   204a4:	b	204f4 <__assert_fail@plt+0xed1c>
   204a8:	ldr	r0, [pc, #3648]	; 212f0 <__assert_fail@plt+0xfb18>
   204ac:	ldr	r1, [fp, #-12]
   204b0:	udiv	r0, r0, r1
   204b4:	ldr	r1, [fp, #-16]
   204b8:	cmp	r0, r1
   204bc:	bcc	204dc <__assert_fail@plt+0xed04>
   204c0:	b	204f4 <__assert_fail@plt+0xed1c>
   204c4:	ldr	r0, [fp, #-16]
   204c8:	movw	r1, #32767	; 0x7fff
   204cc:	udiv	r0, r1, r0
   204d0:	ldr	r1, [fp, #-12]
   204d4:	cmp	r0, r1
   204d8:	bcs	204f4 <__assert_fail@plt+0xed1c>
   204dc:	ldr	r0, [fp, #-12]
   204e0:	ldr	r1, [fp, #-16]
   204e4:	mul	r0, r0, r1
   204e8:	sxth	r0, r0
   204ec:	str	r0, [fp, #-20]	; 0xffffffec
   204f0:	b	212b4 <__assert_fail@plt+0xfadc>
   204f4:	ldr	r0, [fp, #-12]
   204f8:	ldr	r1, [fp, #-16]
   204fc:	mul	r0, r0, r1
   20500:	sxth	r0, r0
   20504:	str	r0, [fp, #-20]	; 0xffffffec
   20508:	b	212cc <__assert_fail@plt+0xfaf4>
   2050c:	ldr	r0, [fp, #-16]
   20510:	cmp	r0, #0
   20514:	bcs	20620 <__assert_fail@plt+0xee48>
   20518:	ldr	r0, [fp, #-12]
   2051c:	cmp	r0, #0
   20520:	bcs	205a8 <__assert_fail@plt+0xedd0>
   20524:	b	20544 <__assert_fail@plt+0xed6c>
   20528:	ldr	r0, [fp, #-12]
   2052c:	ldr	r1, [fp, #-16]
   20530:	movw	r2, #65535	; 0xffff
   20534:	udiv	r1, r2, r1
   20538:	cmp	r0, r1
   2053c:	bcc	206bc <__assert_fail@plt+0xeee4>
   20540:	b	206d4 <__assert_fail@plt+0xeefc>
   20544:	b	20558 <__assert_fail@plt+0xed80>
   20548:	ldr	r0, [fp, #-16]
   2054c:	cmp	r0, #1
   20550:	bcc	20568 <__assert_fail@plt+0xed90>
   20554:	b	20574 <__assert_fail@plt+0xed9c>
   20558:	ldr	r0, [fp, #-16]
   2055c:	movw	r1, #0
   20560:	cmp	r1, r0
   20564:	bcs	20574 <__assert_fail@plt+0xed9c>
   20568:	movw	r0, #0
   2056c:	str	r0, [fp, #-36]	; 0xffffffdc
   20570:	b	2058c <__assert_fail@plt+0xedb4>
   20574:	ldr	r0, [fp, #-16]
   20578:	movw	r1, #0
   2057c:	sub	r0, r1, r0
   20580:	movw	r1, #65535	; 0xffff
   20584:	udiv	r0, r1, r0
   20588:	str	r0, [fp, #-36]	; 0xffffffdc
   2058c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   20590:	ldr	r1, [fp, #-12]
   20594:	mvn	r2, #0
   20598:	sub	r1, r2, r1
   2059c:	cmp	r0, r1
   205a0:	bls	206bc <__assert_fail@plt+0xeee4>
   205a4:	b	206d4 <__assert_fail@plt+0xeefc>
   205a8:	b	205b0 <__assert_fail@plt+0xedd8>
   205ac:	b	205b4 <__assert_fail@plt+0xeddc>
   205b0:	b	20604 <__assert_fail@plt+0xee2c>
   205b4:	ldr	r0, [fp, #-16]
   205b8:	cmn	r0, #1
   205bc:	bne	20604 <__assert_fail@plt+0xee2c>
   205c0:	b	205dc <__assert_fail@plt+0xee04>
   205c4:	ldr	r0, [fp, #-12]
   205c8:	add	r0, r0, #0
   205cc:	movw	r1, #0
   205d0:	cmp	r1, r0
   205d4:	bcc	206bc <__assert_fail@plt+0xeee4>
   205d8:	b	206d4 <__assert_fail@plt+0xeefc>
   205dc:	ldr	r0, [fp, #-12]
   205e0:	movw	r1, #0
   205e4:	cmp	r1, r0
   205e8:	bcs	206d4 <__assert_fail@plt+0xeefc>
   205ec:	ldr	r0, [fp, #-12]
   205f0:	sub	r0, r0, #1
   205f4:	mvn	r1, #0
   205f8:	cmp	r1, r0
   205fc:	bcc	206bc <__assert_fail@plt+0xeee4>
   20600:	b	206d4 <__assert_fail@plt+0xeefc>
   20604:	ldr	r0, [fp, #-16]
   20608:	movw	r1, #0
   2060c:	udiv	r0, r1, r0
   20610:	ldr	r1, [fp, #-12]
   20614:	cmp	r0, r1
   20618:	bcc	206bc <__assert_fail@plt+0xeee4>
   2061c:	b	206d4 <__assert_fail@plt+0xeefc>
   20620:	ldr	r0, [fp, #-16]
   20624:	cmp	r0, #0
   20628:	bne	20630 <__assert_fail@plt+0xee58>
   2062c:	b	206d4 <__assert_fail@plt+0xeefc>
   20630:	ldr	r0, [fp, #-12]
   20634:	cmp	r0, #0
   20638:	bcs	206a4 <__assert_fail@plt+0xeecc>
   2063c:	b	20644 <__assert_fail@plt+0xee6c>
   20640:	b	20648 <__assert_fail@plt+0xee70>
   20644:	b	20688 <__assert_fail@plt+0xeeb0>
   20648:	ldr	r0, [fp, #-12]
   2064c:	cmn	r0, #1
   20650:	bne	20688 <__assert_fail@plt+0xeeb0>
   20654:	b	20670 <__assert_fail@plt+0xee98>
   20658:	ldr	r0, [fp, #-16]
   2065c:	add	r0, r0, #0
   20660:	movw	r1, #0
   20664:	cmp	r1, r0
   20668:	bcc	206bc <__assert_fail@plt+0xeee4>
   2066c:	b	206d4 <__assert_fail@plt+0xeefc>
   20670:	ldr	r0, [fp, #-16]
   20674:	sub	r0, r0, #1
   20678:	mvn	r1, #0
   2067c:	cmp	r1, r0
   20680:	bcc	206bc <__assert_fail@plt+0xeee4>
   20684:	b	206d4 <__assert_fail@plt+0xeefc>
   20688:	ldr	r0, [fp, #-12]
   2068c:	movw	r1, #0
   20690:	udiv	r0, r1, r0
   20694:	ldr	r1, [fp, #-16]
   20698:	cmp	r0, r1
   2069c:	bcc	206bc <__assert_fail@plt+0xeee4>
   206a0:	b	206d4 <__assert_fail@plt+0xeefc>
   206a4:	ldr	r0, [fp, #-16]
   206a8:	movw	r1, #65535	; 0xffff
   206ac:	udiv	r0, r1, r0
   206b0:	ldr	r1, [fp, #-12]
   206b4:	cmp	r0, r1
   206b8:	bcs	206d4 <__assert_fail@plt+0xeefc>
   206bc:	ldr	r0, [fp, #-12]
   206c0:	ldr	r1, [fp, #-16]
   206c4:	mul	r0, r0, r1
   206c8:	uxth	r0, r0
   206cc:	str	r0, [fp, #-20]	; 0xffffffec
   206d0:	b	212b4 <__assert_fail@plt+0xfadc>
   206d4:	ldr	r0, [fp, #-12]
   206d8:	ldr	r1, [fp, #-16]
   206dc:	mul	r0, r0, r1
   206e0:	uxth	r0, r0
   206e4:	str	r0, [fp, #-20]	; 0xffffffec
   206e8:	b	212cc <__assert_fail@plt+0xfaf4>
   206ec:	b	206f0 <__assert_fail@plt+0xef18>
   206f0:	b	208b4 <__assert_fail@plt+0xf0dc>
   206f4:	ldr	r0, [fp, #-16]
   206f8:	cmp	r0, #0
   206fc:	bcs	207fc <__assert_fail@plt+0xf024>
   20700:	ldr	r0, [fp, #-12]
   20704:	cmp	r0, #0
   20708:	bcs	20790 <__assert_fail@plt+0xefb8>
   2070c:	b	2072c <__assert_fail@plt+0xef54>
   20710:	ldr	r0, [pc, #3024]	; 212e8 <__assert_fail@plt+0xfb10>
   20714:	ldr	r1, [fp, #-12]
   20718:	ldr	r2, [fp, #-16]
   2071c:	udiv	r0, r0, r2
   20720:	cmp	r1, r0
   20724:	bcc	2088c <__assert_fail@plt+0xf0b4>
   20728:	b	208a0 <__assert_fail@plt+0xf0c8>
   2072c:	b	20740 <__assert_fail@plt+0xef68>
   20730:	ldr	r0, [fp, #-16]
   20734:	cmp	r0, #1
   20738:	bcc	20750 <__assert_fail@plt+0xef78>
   2073c:	b	2075c <__assert_fail@plt+0xef84>
   20740:	ldr	r0, [fp, #-16]
   20744:	movw	r1, #0
   20748:	cmp	r1, r0
   2074c:	bcs	2075c <__assert_fail@plt+0xef84>
   20750:	movw	r0, #0
   20754:	str	r0, [fp, #-40]	; 0xffffffd8
   20758:	b	20774 <__assert_fail@plt+0xef9c>
   2075c:	ldr	r0, [pc, #2948]	; 212e8 <__assert_fail@plt+0xfb10>
   20760:	ldr	r1, [fp, #-16]
   20764:	movw	r2, #0
   20768:	sub	r1, r2, r1
   2076c:	udiv	r0, r0, r1
   20770:	str	r0, [fp, #-40]	; 0xffffffd8
   20774:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20778:	ldr	r1, [fp, #-12]
   2077c:	mvn	r2, #0
   20780:	sub	r1, r2, r1
   20784:	cmp	r0, r1
   20788:	bls	2088c <__assert_fail@plt+0xf0b4>
   2078c:	b	208a0 <__assert_fail@plt+0xf0c8>
   20790:	ldr	r0, [fp, #-16]
   20794:	cmn	r0, #1
   20798:	bne	207e0 <__assert_fail@plt+0xf008>
   2079c:	b	207b8 <__assert_fail@plt+0xefe0>
   207a0:	ldr	r0, [fp, #-12]
   207a4:	add	r0, r0, #-2147483648	; 0x80000000
   207a8:	movw	r1, #0
   207ac:	cmp	r1, r0
   207b0:	bcc	2088c <__assert_fail@plt+0xf0b4>
   207b4:	b	208a0 <__assert_fail@plt+0xf0c8>
   207b8:	ldr	r0, [fp, #-12]
   207bc:	movw	r1, #0
   207c0:	cmp	r1, r0
   207c4:	bcs	208a0 <__assert_fail@plt+0xf0c8>
   207c8:	ldr	r0, [pc, #2840]	; 212e8 <__assert_fail@plt+0xfb10>
   207cc:	ldr	r1, [fp, #-12]
   207d0:	sub	r1, r1, #1
   207d4:	cmp	r0, r1
   207d8:	bcc	2088c <__assert_fail@plt+0xf0b4>
   207dc:	b	208a0 <__assert_fail@plt+0xf0c8>
   207e0:	ldr	r0, [pc, #2820]	; 212ec <__assert_fail@plt+0xfb14>
   207e4:	ldr	r1, [fp, #-16]
   207e8:	udiv	r0, r0, r1
   207ec:	ldr	r1, [fp, #-12]
   207f0:	cmp	r0, r1
   207f4:	bcc	2088c <__assert_fail@plt+0xf0b4>
   207f8:	b	208a0 <__assert_fail@plt+0xf0c8>
   207fc:	ldr	r0, [fp, #-16]
   20800:	cmp	r0, #0
   20804:	bne	2080c <__assert_fail@plt+0xf034>
   20808:	b	208a0 <__assert_fail@plt+0xf0c8>
   2080c:	ldr	r0, [fp, #-12]
   20810:	cmp	r0, #0
   20814:	bcs	20874 <__assert_fail@plt+0xf09c>
   20818:	ldr	r0, [fp, #-12]
   2081c:	cmn	r0, #1
   20820:	bne	20858 <__assert_fail@plt+0xf080>
   20824:	b	20840 <__assert_fail@plt+0xf068>
   20828:	ldr	r0, [fp, #-16]
   2082c:	add	r0, r0, #-2147483648	; 0x80000000
   20830:	movw	r1, #0
   20834:	cmp	r1, r0
   20838:	bcc	2088c <__assert_fail@plt+0xf0b4>
   2083c:	b	208a0 <__assert_fail@plt+0xf0c8>
   20840:	ldr	r0, [pc, #2720]	; 212e8 <__assert_fail@plt+0xfb10>
   20844:	ldr	r1, [fp, #-16]
   20848:	sub	r1, r1, #1
   2084c:	cmp	r0, r1
   20850:	bcc	2088c <__assert_fail@plt+0xf0b4>
   20854:	b	208a0 <__assert_fail@plt+0xf0c8>
   20858:	ldr	r0, [pc, #2700]	; 212ec <__assert_fail@plt+0xfb14>
   2085c:	ldr	r1, [fp, #-12]
   20860:	udiv	r0, r0, r1
   20864:	ldr	r1, [fp, #-16]
   20868:	cmp	r0, r1
   2086c:	bcc	2088c <__assert_fail@plt+0xf0b4>
   20870:	b	208a0 <__assert_fail@plt+0xf0c8>
   20874:	ldr	r0, [pc, #2668]	; 212e8 <__assert_fail@plt+0xfb10>
   20878:	ldr	r1, [fp, #-16]
   2087c:	udiv	r0, r0, r1
   20880:	ldr	r1, [fp, #-12]
   20884:	cmp	r0, r1
   20888:	bcs	208a0 <__assert_fail@plt+0xf0c8>
   2088c:	ldr	r0, [fp, #-12]
   20890:	ldr	r1, [fp, #-16]
   20894:	mul	r0, r0, r1
   20898:	str	r0, [fp, #-20]	; 0xffffffec
   2089c:	b	212b4 <__assert_fail@plt+0xfadc>
   208a0:	ldr	r0, [fp, #-12]
   208a4:	ldr	r1, [fp, #-16]
   208a8:	mul	r0, r0, r1
   208ac:	str	r0, [fp, #-20]	; 0xffffffec
   208b0:	b	212cc <__assert_fail@plt+0xfaf4>
   208b4:	ldr	r0, [fp, #-16]
   208b8:	cmp	r0, #0
   208bc:	bcs	209c8 <__assert_fail@plt+0xf1f0>
   208c0:	ldr	r0, [fp, #-12]
   208c4:	cmp	r0, #0
   208c8:	bcs	20950 <__assert_fail@plt+0xf178>
   208cc:	b	208ec <__assert_fail@plt+0xf114>
   208d0:	ldr	r0, [fp, #-12]
   208d4:	ldr	r1, [fp, #-16]
   208d8:	mvn	r2, #0
   208dc:	udiv	r1, r2, r1
   208e0:	cmp	r0, r1
   208e4:	bcc	20a64 <__assert_fail@plt+0xf28c>
   208e8:	b	20a78 <__assert_fail@plt+0xf2a0>
   208ec:	b	20900 <__assert_fail@plt+0xf128>
   208f0:	ldr	r0, [fp, #-16]
   208f4:	cmp	r0, #1
   208f8:	bcc	20910 <__assert_fail@plt+0xf138>
   208fc:	b	2091c <__assert_fail@plt+0xf144>
   20900:	ldr	r0, [fp, #-16]
   20904:	movw	r1, #0
   20908:	cmp	r1, r0
   2090c:	bcs	2091c <__assert_fail@plt+0xf144>
   20910:	movw	r0, #1
   20914:	str	r0, [fp, #-44]	; 0xffffffd4
   20918:	b	20934 <__assert_fail@plt+0xf15c>
   2091c:	ldr	r0, [fp, #-16]
   20920:	movw	r1, #0
   20924:	sub	r0, r1, r0
   20928:	mvn	r1, #0
   2092c:	udiv	r0, r1, r0
   20930:	str	r0, [fp, #-44]	; 0xffffffd4
   20934:	ldr	r0, [fp, #-44]	; 0xffffffd4
   20938:	ldr	r1, [fp, #-12]
   2093c:	mvn	r2, #0
   20940:	sub	r1, r2, r1
   20944:	cmp	r0, r1
   20948:	bls	20a64 <__assert_fail@plt+0xf28c>
   2094c:	b	20a78 <__assert_fail@plt+0xf2a0>
   20950:	b	20958 <__assert_fail@plt+0xf180>
   20954:	b	2095c <__assert_fail@plt+0xf184>
   20958:	b	209ac <__assert_fail@plt+0xf1d4>
   2095c:	ldr	r0, [fp, #-16]
   20960:	cmn	r0, #1
   20964:	bne	209ac <__assert_fail@plt+0xf1d4>
   20968:	b	20984 <__assert_fail@plt+0xf1ac>
   2096c:	ldr	r0, [fp, #-12]
   20970:	add	r0, r0, #0
   20974:	movw	r1, #0
   20978:	cmp	r1, r0
   2097c:	bcc	20a64 <__assert_fail@plt+0xf28c>
   20980:	b	20a78 <__assert_fail@plt+0xf2a0>
   20984:	ldr	r0, [fp, #-12]
   20988:	movw	r1, #0
   2098c:	cmp	r1, r0
   20990:	bcs	20a78 <__assert_fail@plt+0xf2a0>
   20994:	ldr	r0, [fp, #-12]
   20998:	sub	r0, r0, #1
   2099c:	mvn	r1, #0
   209a0:	cmp	r1, r0
   209a4:	bcc	20a64 <__assert_fail@plt+0xf28c>
   209a8:	b	20a78 <__assert_fail@plt+0xf2a0>
   209ac:	ldr	r0, [fp, #-16]
   209b0:	movw	r1, #0
   209b4:	udiv	r0, r1, r0
   209b8:	ldr	r1, [fp, #-12]
   209bc:	cmp	r0, r1
   209c0:	bcc	20a64 <__assert_fail@plt+0xf28c>
   209c4:	b	20a78 <__assert_fail@plt+0xf2a0>
   209c8:	ldr	r0, [fp, #-16]
   209cc:	cmp	r0, #0
   209d0:	bne	209d8 <__assert_fail@plt+0xf200>
   209d4:	b	20a78 <__assert_fail@plt+0xf2a0>
   209d8:	ldr	r0, [fp, #-12]
   209dc:	cmp	r0, #0
   209e0:	bcs	20a4c <__assert_fail@plt+0xf274>
   209e4:	b	209ec <__assert_fail@plt+0xf214>
   209e8:	b	209f0 <__assert_fail@plt+0xf218>
   209ec:	b	20a30 <__assert_fail@plt+0xf258>
   209f0:	ldr	r0, [fp, #-12]
   209f4:	cmn	r0, #1
   209f8:	bne	20a30 <__assert_fail@plt+0xf258>
   209fc:	b	20a18 <__assert_fail@plt+0xf240>
   20a00:	ldr	r0, [fp, #-16]
   20a04:	add	r0, r0, #0
   20a08:	movw	r1, #0
   20a0c:	cmp	r1, r0
   20a10:	bcc	20a64 <__assert_fail@plt+0xf28c>
   20a14:	b	20a78 <__assert_fail@plt+0xf2a0>
   20a18:	ldr	r0, [fp, #-16]
   20a1c:	sub	r0, r0, #1
   20a20:	mvn	r1, #0
   20a24:	cmp	r1, r0
   20a28:	bcc	20a64 <__assert_fail@plt+0xf28c>
   20a2c:	b	20a78 <__assert_fail@plt+0xf2a0>
   20a30:	ldr	r0, [fp, #-12]
   20a34:	movw	r1, #0
   20a38:	udiv	r0, r1, r0
   20a3c:	ldr	r1, [fp, #-16]
   20a40:	cmp	r0, r1
   20a44:	bcc	20a64 <__assert_fail@plt+0xf28c>
   20a48:	b	20a78 <__assert_fail@plt+0xf2a0>
   20a4c:	ldr	r0, [fp, #-16]
   20a50:	mvn	r1, #0
   20a54:	udiv	r0, r1, r0
   20a58:	ldr	r1, [fp, #-12]
   20a5c:	cmp	r0, r1
   20a60:	bcs	20a78 <__assert_fail@plt+0xf2a0>
   20a64:	ldr	r0, [fp, #-12]
   20a68:	ldr	r1, [fp, #-16]
   20a6c:	mul	r0, r0, r1
   20a70:	str	r0, [fp, #-20]	; 0xffffffec
   20a74:	b	212b4 <__assert_fail@plt+0xfadc>
   20a78:	ldr	r0, [fp, #-12]
   20a7c:	ldr	r1, [fp, #-16]
   20a80:	mul	r0, r0, r1
   20a84:	str	r0, [fp, #-20]	; 0xffffffec
   20a88:	b	212cc <__assert_fail@plt+0xfaf4>
   20a8c:	b	20a90 <__assert_fail@plt+0xf2b8>
   20a90:	b	20c54 <__assert_fail@plt+0xf47c>
   20a94:	ldr	r0, [fp, #-16]
   20a98:	cmp	r0, #0
   20a9c:	bcs	20b9c <__assert_fail@plt+0xf3c4>
   20aa0:	ldr	r0, [fp, #-12]
   20aa4:	cmp	r0, #0
   20aa8:	bcs	20b30 <__assert_fail@plt+0xf358>
   20aac:	b	20acc <__assert_fail@plt+0xf2f4>
   20ab0:	ldr	r0, [pc, #2096]	; 212e8 <__assert_fail@plt+0xfb10>
   20ab4:	ldr	r1, [fp, #-12]
   20ab8:	ldr	r2, [fp, #-16]
   20abc:	udiv	r0, r0, r2
   20ac0:	cmp	r1, r0
   20ac4:	bcc	20c2c <__assert_fail@plt+0xf454>
   20ac8:	b	20c40 <__assert_fail@plt+0xf468>
   20acc:	b	20ae0 <__assert_fail@plt+0xf308>
   20ad0:	ldr	r0, [fp, #-16]
   20ad4:	cmp	r0, #1
   20ad8:	bcc	20af0 <__assert_fail@plt+0xf318>
   20adc:	b	20afc <__assert_fail@plt+0xf324>
   20ae0:	ldr	r0, [fp, #-16]
   20ae4:	movw	r1, #0
   20ae8:	cmp	r1, r0
   20aec:	bcs	20afc <__assert_fail@plt+0xf324>
   20af0:	movw	r0, #0
   20af4:	str	r0, [fp, #-48]	; 0xffffffd0
   20af8:	b	20b14 <__assert_fail@plt+0xf33c>
   20afc:	ldr	r0, [pc, #2020]	; 212e8 <__assert_fail@plt+0xfb10>
   20b00:	ldr	r1, [fp, #-16]
   20b04:	movw	r2, #0
   20b08:	sub	r1, r2, r1
   20b0c:	udiv	r0, r0, r1
   20b10:	str	r0, [fp, #-48]	; 0xffffffd0
   20b14:	ldr	r0, [fp, #-48]	; 0xffffffd0
   20b18:	ldr	r1, [fp, #-12]
   20b1c:	mvn	r2, #0
   20b20:	sub	r1, r2, r1
   20b24:	cmp	r0, r1
   20b28:	bls	20c2c <__assert_fail@plt+0xf454>
   20b2c:	b	20c40 <__assert_fail@plt+0xf468>
   20b30:	ldr	r0, [fp, #-16]
   20b34:	cmn	r0, #1
   20b38:	bne	20b80 <__assert_fail@plt+0xf3a8>
   20b3c:	b	20b58 <__assert_fail@plt+0xf380>
   20b40:	ldr	r0, [fp, #-12]
   20b44:	add	r0, r0, #-2147483648	; 0x80000000
   20b48:	movw	r1, #0
   20b4c:	cmp	r1, r0
   20b50:	bcc	20c2c <__assert_fail@plt+0xf454>
   20b54:	b	20c40 <__assert_fail@plt+0xf468>
   20b58:	ldr	r0, [fp, #-12]
   20b5c:	movw	r1, #0
   20b60:	cmp	r1, r0
   20b64:	bcs	20c40 <__assert_fail@plt+0xf468>
   20b68:	ldr	r0, [pc, #1912]	; 212e8 <__assert_fail@plt+0xfb10>
   20b6c:	ldr	r1, [fp, #-12]
   20b70:	sub	r1, r1, #1
   20b74:	cmp	r0, r1
   20b78:	bcc	20c2c <__assert_fail@plt+0xf454>
   20b7c:	b	20c40 <__assert_fail@plt+0xf468>
   20b80:	ldr	r0, [pc, #1892]	; 212ec <__assert_fail@plt+0xfb14>
   20b84:	ldr	r1, [fp, #-16]
   20b88:	udiv	r0, r0, r1
   20b8c:	ldr	r1, [fp, #-12]
   20b90:	cmp	r0, r1
   20b94:	bcc	20c2c <__assert_fail@plt+0xf454>
   20b98:	b	20c40 <__assert_fail@plt+0xf468>
   20b9c:	ldr	r0, [fp, #-16]
   20ba0:	cmp	r0, #0
   20ba4:	bne	20bac <__assert_fail@plt+0xf3d4>
   20ba8:	b	20c40 <__assert_fail@plt+0xf468>
   20bac:	ldr	r0, [fp, #-12]
   20bb0:	cmp	r0, #0
   20bb4:	bcs	20c14 <__assert_fail@plt+0xf43c>
   20bb8:	ldr	r0, [fp, #-12]
   20bbc:	cmn	r0, #1
   20bc0:	bne	20bf8 <__assert_fail@plt+0xf420>
   20bc4:	b	20be0 <__assert_fail@plt+0xf408>
   20bc8:	ldr	r0, [fp, #-16]
   20bcc:	add	r0, r0, #-2147483648	; 0x80000000
   20bd0:	movw	r1, #0
   20bd4:	cmp	r1, r0
   20bd8:	bcc	20c2c <__assert_fail@plt+0xf454>
   20bdc:	b	20c40 <__assert_fail@plt+0xf468>
   20be0:	ldr	r0, [pc, #1792]	; 212e8 <__assert_fail@plt+0xfb10>
   20be4:	ldr	r1, [fp, #-16]
   20be8:	sub	r1, r1, #1
   20bec:	cmp	r0, r1
   20bf0:	bcc	20c2c <__assert_fail@plt+0xf454>
   20bf4:	b	20c40 <__assert_fail@plt+0xf468>
   20bf8:	ldr	r0, [pc, #1772]	; 212ec <__assert_fail@plt+0xfb14>
   20bfc:	ldr	r1, [fp, #-12]
   20c00:	udiv	r0, r0, r1
   20c04:	ldr	r1, [fp, #-16]
   20c08:	cmp	r0, r1
   20c0c:	bcc	20c2c <__assert_fail@plt+0xf454>
   20c10:	b	20c40 <__assert_fail@plt+0xf468>
   20c14:	ldr	r0, [pc, #1740]	; 212e8 <__assert_fail@plt+0xfb10>
   20c18:	ldr	r1, [fp, #-16]
   20c1c:	udiv	r0, r0, r1
   20c20:	ldr	r1, [fp, #-12]
   20c24:	cmp	r0, r1
   20c28:	bcs	20c40 <__assert_fail@plt+0xf468>
   20c2c:	ldr	r0, [fp, #-12]
   20c30:	ldr	r1, [fp, #-16]
   20c34:	mul	r0, r0, r1
   20c38:	str	r0, [fp, #-20]	; 0xffffffec
   20c3c:	b	212b4 <__assert_fail@plt+0xfadc>
   20c40:	ldr	r0, [fp, #-12]
   20c44:	ldr	r1, [fp, #-16]
   20c48:	mul	r0, r0, r1
   20c4c:	str	r0, [fp, #-20]	; 0xffffffec
   20c50:	b	212cc <__assert_fail@plt+0xfaf4>
   20c54:	ldr	r0, [fp, #-16]
   20c58:	cmp	r0, #0
   20c5c:	bcs	20d68 <__assert_fail@plt+0xf590>
   20c60:	ldr	r0, [fp, #-12]
   20c64:	cmp	r0, #0
   20c68:	bcs	20cf0 <__assert_fail@plt+0xf518>
   20c6c:	b	20c8c <__assert_fail@plt+0xf4b4>
   20c70:	ldr	r0, [fp, #-12]
   20c74:	ldr	r1, [fp, #-16]
   20c78:	mvn	r2, #0
   20c7c:	udiv	r1, r2, r1
   20c80:	cmp	r0, r1
   20c84:	bcc	20e04 <__assert_fail@plt+0xf62c>
   20c88:	b	20e18 <__assert_fail@plt+0xf640>
   20c8c:	b	20ca0 <__assert_fail@plt+0xf4c8>
   20c90:	ldr	r0, [fp, #-16]
   20c94:	cmp	r0, #1
   20c98:	bcc	20cb0 <__assert_fail@plt+0xf4d8>
   20c9c:	b	20cbc <__assert_fail@plt+0xf4e4>
   20ca0:	ldr	r0, [fp, #-16]
   20ca4:	movw	r1, #0
   20ca8:	cmp	r1, r0
   20cac:	bcs	20cbc <__assert_fail@plt+0xf4e4>
   20cb0:	movw	r0, #1
   20cb4:	str	r0, [fp, #-52]	; 0xffffffcc
   20cb8:	b	20cd4 <__assert_fail@plt+0xf4fc>
   20cbc:	ldr	r0, [fp, #-16]
   20cc0:	movw	r1, #0
   20cc4:	sub	r0, r1, r0
   20cc8:	mvn	r1, #0
   20ccc:	udiv	r0, r1, r0
   20cd0:	str	r0, [fp, #-52]	; 0xffffffcc
   20cd4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   20cd8:	ldr	r1, [fp, #-12]
   20cdc:	mvn	r2, #0
   20ce0:	sub	r1, r2, r1
   20ce4:	cmp	r0, r1
   20ce8:	bls	20e04 <__assert_fail@plt+0xf62c>
   20cec:	b	20e18 <__assert_fail@plt+0xf640>
   20cf0:	b	20cf8 <__assert_fail@plt+0xf520>
   20cf4:	b	20cfc <__assert_fail@plt+0xf524>
   20cf8:	b	20d4c <__assert_fail@plt+0xf574>
   20cfc:	ldr	r0, [fp, #-16]
   20d00:	cmn	r0, #1
   20d04:	bne	20d4c <__assert_fail@plt+0xf574>
   20d08:	b	20d24 <__assert_fail@plt+0xf54c>
   20d0c:	ldr	r0, [fp, #-12]
   20d10:	add	r0, r0, #0
   20d14:	movw	r1, #0
   20d18:	cmp	r1, r0
   20d1c:	bcc	20e04 <__assert_fail@plt+0xf62c>
   20d20:	b	20e18 <__assert_fail@plt+0xf640>
   20d24:	ldr	r0, [fp, #-12]
   20d28:	movw	r1, #0
   20d2c:	cmp	r1, r0
   20d30:	bcs	20e18 <__assert_fail@plt+0xf640>
   20d34:	ldr	r0, [fp, #-12]
   20d38:	sub	r0, r0, #1
   20d3c:	mvn	r1, #0
   20d40:	cmp	r1, r0
   20d44:	bcc	20e04 <__assert_fail@plt+0xf62c>
   20d48:	b	20e18 <__assert_fail@plt+0xf640>
   20d4c:	ldr	r0, [fp, #-16]
   20d50:	movw	r1, #0
   20d54:	udiv	r0, r1, r0
   20d58:	ldr	r1, [fp, #-12]
   20d5c:	cmp	r0, r1
   20d60:	bcc	20e04 <__assert_fail@plt+0xf62c>
   20d64:	b	20e18 <__assert_fail@plt+0xf640>
   20d68:	ldr	r0, [fp, #-16]
   20d6c:	cmp	r0, #0
   20d70:	bne	20d78 <__assert_fail@plt+0xf5a0>
   20d74:	b	20e18 <__assert_fail@plt+0xf640>
   20d78:	ldr	r0, [fp, #-12]
   20d7c:	cmp	r0, #0
   20d80:	bcs	20dec <__assert_fail@plt+0xf614>
   20d84:	b	20d8c <__assert_fail@plt+0xf5b4>
   20d88:	b	20d90 <__assert_fail@plt+0xf5b8>
   20d8c:	b	20dd0 <__assert_fail@plt+0xf5f8>
   20d90:	ldr	r0, [fp, #-12]
   20d94:	cmn	r0, #1
   20d98:	bne	20dd0 <__assert_fail@plt+0xf5f8>
   20d9c:	b	20db8 <__assert_fail@plt+0xf5e0>
   20da0:	ldr	r0, [fp, #-16]
   20da4:	add	r0, r0, #0
   20da8:	movw	r1, #0
   20dac:	cmp	r1, r0
   20db0:	bcc	20e04 <__assert_fail@plt+0xf62c>
   20db4:	b	20e18 <__assert_fail@plt+0xf640>
   20db8:	ldr	r0, [fp, #-16]
   20dbc:	sub	r0, r0, #1
   20dc0:	mvn	r1, #0
   20dc4:	cmp	r1, r0
   20dc8:	bcc	20e04 <__assert_fail@plt+0xf62c>
   20dcc:	b	20e18 <__assert_fail@plt+0xf640>
   20dd0:	ldr	r0, [fp, #-12]
   20dd4:	movw	r1, #0
   20dd8:	udiv	r0, r1, r0
   20ddc:	ldr	r1, [fp, #-16]
   20de0:	cmp	r0, r1
   20de4:	bcc	20e04 <__assert_fail@plt+0xf62c>
   20de8:	b	20e18 <__assert_fail@plt+0xf640>
   20dec:	ldr	r0, [fp, #-16]
   20df0:	mvn	r1, #0
   20df4:	udiv	r0, r1, r0
   20df8:	ldr	r1, [fp, #-12]
   20dfc:	cmp	r0, r1
   20e00:	bcs	20e18 <__assert_fail@plt+0xf640>
   20e04:	ldr	r0, [fp, #-12]
   20e08:	ldr	r1, [fp, #-16]
   20e0c:	mul	r0, r0, r1
   20e10:	str	r0, [fp, #-20]	; 0xffffffec
   20e14:	b	212b4 <__assert_fail@plt+0xfadc>
   20e18:	ldr	r0, [fp, #-12]
   20e1c:	ldr	r1, [fp, #-16]
   20e20:	mul	r0, r0, r1
   20e24:	str	r0, [fp, #-20]	; 0xffffffec
   20e28:	b	212cc <__assert_fail@plt+0xfaf4>
   20e2c:	b	21080 <__assert_fail@plt+0xf8a8>
   20e30:	ldr	r0, [fp, #-16]
   20e34:	cmp	r0, #0
   20e38:	bcs	20f98 <__assert_fail@plt+0xf7c0>
   20e3c:	ldr	r0, [fp, #-12]
   20e40:	cmp	r0, #0
   20e44:	bcs	20f14 <__assert_fail@plt+0xf73c>
   20e48:	b	20e4c <__assert_fail@plt+0xf674>
   20e4c:	ldr	r0, [fp, #-12]
   20e50:	ldr	r2, [fp, #-16]
   20e54:	mvn	r1, #0
   20e58:	mvn	r3, #-2147483648	; 0x80000000
   20e5c:	mov	ip, #0
   20e60:	str	r0, [fp, #-56]	; 0xffffffc8
   20e64:	mov	r0, r1
   20e68:	mov	r1, r3
   20e6c:	mov	r3, ip
   20e70:	bl	223c4 <__assert_fail@plt+0x10bec>
   20e74:	ldr	r2, [fp, #-56]	; 0xffffffc8
   20e78:	subs	r0, r2, r0
   20e7c:	rscs	r1, r1, #0
   20e80:	str	r0, [fp, #-60]	; 0xffffffc4
   20e84:	str	r1, [fp, #-64]	; 0xffffffc0
   20e88:	blt	21058 <__assert_fail@plt+0xf880>
   20e8c:	b	2106c <__assert_fail@plt+0xf894>
   20e90:	b	20ea4 <__assert_fail@plt+0xf6cc>
   20e94:	ldr	r0, [fp, #-16]
   20e98:	cmp	r0, #1
   20e9c:	bcc	20eb4 <__assert_fail@plt+0xf6dc>
   20ea0:	b	20ec8 <__assert_fail@plt+0xf6f0>
   20ea4:	ldr	r0, [fp, #-16]
   20ea8:	movw	r1, #0
   20eac:	cmp	r1, r0
   20eb0:	bcs	20ec8 <__assert_fail@plt+0xf6f0>
   20eb4:	mov	r0, #0
   20eb8:	mvn	r1, #0
   20ebc:	str	r1, [fp, #-68]	; 0xffffffbc
   20ec0:	str	r0, [fp, #-72]	; 0xffffffb8
   20ec4:	b	20eec <__assert_fail@plt+0xf714>
   20ec8:	ldr	r0, [fp, #-16]
   20ecc:	rsb	r2, r0, #0
   20ed0:	mvn	r0, #0
   20ed4:	mvn	r1, #-2147483648	; 0x80000000
   20ed8:	mov	r3, #0
   20edc:	bl	223c4 <__assert_fail@plt+0x10bec>
   20ee0:	str	r0, [fp, #-68]	; 0xffffffbc
   20ee4:	str	r1, [fp, #-72]	; 0xffffffb8
   20ee8:	b	20eec <__assert_fail@plt+0xf714>
   20eec:	ldr	r0, [fp, #-72]	; 0xffffffb8
   20ef0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   20ef4:	ldr	r2, [fp, #-12]
   20ef8:	mvn	r2, r2
   20efc:	subs	r1, r2, r1
   20f00:	rscs	r0, r0, #0
   20f04:	str	r1, [fp, #-76]	; 0xffffffb4
   20f08:	str	r0, [fp, #-80]	; 0xffffffb0
   20f0c:	bge	21058 <__assert_fail@plt+0xf880>
   20f10:	b	2106c <__assert_fail@plt+0xf894>
   20f14:	ldr	r0, [fp, #-16]
   20f18:	cmn	r0, #1
   20f1c:	bne	20f64 <__assert_fail@plt+0xf78c>
   20f20:	b	20f44 <__assert_fail@plt+0xf76c>
   20f24:	ldr	r0, [fp, #-12]
   20f28:	rsbs	r0, r0, #0
   20f2c:	mov	r1, #0
   20f30:	sbcs	r1, r1, #-2147483648	; 0x80000000
   20f34:	str	r0, [fp, #-84]	; 0xffffffac
   20f38:	str	r1, [sp, #88]	; 0x58
   20f3c:	blt	21058 <__assert_fail@plt+0xf880>
   20f40:	b	2106c <__assert_fail@plt+0xf894>
   20f44:	ldr	r0, [fp, #-12]
   20f48:	movw	r1, #0
   20f4c:	cmp	r1, r0
   20f50:	bcs	2106c <__assert_fail@plt+0xf894>
   20f54:	mov	r0, #0
   20f58:	cmp	r0, #0
   20f5c:	bne	21058 <__assert_fail@plt+0xf880>
   20f60:	b	2106c <__assert_fail@plt+0xf894>
   20f64:	ldr	r2, [fp, #-16]
   20f68:	mov	r1, #-2147483648	; 0x80000000
   20f6c:	mov	r0, #0
   20f70:	str	r0, [sp, #84]	; 0x54
   20f74:	ldr	r3, [sp, #84]	; 0x54
   20f78:	bl	222f0 <__assert_fail@plt+0x10b18>
   20f7c:	ldr	r2, [fp, #-12]
   20f80:	subs	r0, r0, r2
   20f84:	sbcs	r1, r1, #0
   20f88:	str	r0, [sp, #80]	; 0x50
   20f8c:	str	r1, [sp, #76]	; 0x4c
   20f90:	blt	21058 <__assert_fail@plt+0xf880>
   20f94:	b	2106c <__assert_fail@plt+0xf894>
   20f98:	ldr	r0, [fp, #-16]
   20f9c:	cmp	r0, #0
   20fa0:	bne	20fa8 <__assert_fail@plt+0xf7d0>
   20fa4:	b	2106c <__assert_fail@plt+0xf894>
   20fa8:	ldr	r0, [fp, #-12]
   20fac:	cmp	r0, #0
   20fb0:	bcs	21028 <__assert_fail@plt+0xf850>
   20fb4:	ldr	r0, [fp, #-12]
   20fb8:	cmn	r0, #1
   20fbc:	bne	20ff4 <__assert_fail@plt+0xf81c>
   20fc0:	b	20fe4 <__assert_fail@plt+0xf80c>
   20fc4:	ldr	r0, [fp, #-16]
   20fc8:	rsbs	r0, r0, #0
   20fcc:	mov	r1, #0
   20fd0:	sbcs	r1, r1, #-2147483648	; 0x80000000
   20fd4:	str	r0, [sp, #72]	; 0x48
   20fd8:	str	r1, [sp, #68]	; 0x44
   20fdc:	blt	21058 <__assert_fail@plt+0xf880>
   20fe0:	b	2106c <__assert_fail@plt+0xf894>
   20fe4:	mov	r0, #0
   20fe8:	cmp	r0, #0
   20fec:	bne	21058 <__assert_fail@plt+0xf880>
   20ff0:	b	2106c <__assert_fail@plt+0xf894>
   20ff4:	ldr	r2, [fp, #-12]
   20ff8:	mov	r1, #-2147483648	; 0x80000000
   20ffc:	mov	r0, #0
   21000:	str	r0, [sp, #64]	; 0x40
   21004:	ldr	r3, [sp, #64]	; 0x40
   21008:	bl	222f0 <__assert_fail@plt+0x10b18>
   2100c:	ldr	r2, [fp, #-16]
   21010:	subs	r0, r0, r2
   21014:	sbcs	r1, r1, #0
   21018:	str	r0, [sp, #60]	; 0x3c
   2101c:	str	r1, [sp, #56]	; 0x38
   21020:	blt	21058 <__assert_fail@plt+0xf880>
   21024:	b	2106c <__assert_fail@plt+0xf894>
   21028:	ldr	r2, [fp, #-16]
   2102c:	mvn	r0, #0
   21030:	mvn	r1, #-2147483648	; 0x80000000
   21034:	mov	r3, #0
   21038:	bl	223c4 <__assert_fail@plt+0x10bec>
   2103c:	ldr	r2, [fp, #-12]
   21040:	subs	r0, r0, r2
   21044:	sbcs	r1, r1, #0
   21048:	str	r0, [sp, #52]	; 0x34
   2104c:	str	r1, [sp, #48]	; 0x30
   21050:	bge	2106c <__assert_fail@plt+0xf894>
   21054:	b	21058 <__assert_fail@plt+0xf880>
   21058:	ldr	r0, [fp, #-12]
   2105c:	ldr	r1, [fp, #-16]
   21060:	mul	r0, r0, r1
   21064:	str	r0, [fp, #-20]	; 0xffffffec
   21068:	b	212b4 <__assert_fail@plt+0xfadc>
   2106c:	ldr	r0, [fp, #-12]
   21070:	ldr	r1, [fp, #-16]
   21074:	mul	r0, r0, r1
   21078:	str	r0, [fp, #-20]	; 0xffffffec
   2107c:	b	212cc <__assert_fail@plt+0xfaf4>
   21080:	ldr	r0, [fp, #-16]
   21084:	cmp	r0, #0
   21088:	bcs	211d4 <__assert_fail@plt+0xf9fc>
   2108c:	ldr	r0, [fp, #-12]
   21090:	cmp	r0, #0
   21094:	bcs	2115c <__assert_fail@plt+0xf984>
   21098:	b	210d4 <__assert_fail@plt+0xf8fc>
   2109c:	ldr	r0, [fp, #-12]
   210a0:	ldr	r2, [fp, #-16]
   210a4:	mvn	r1, #0
   210a8:	mov	r3, #0
   210ac:	str	r0, [sp, #44]	; 0x2c
   210b0:	mov	r0, r1
   210b4:	bl	223c4 <__assert_fail@plt+0x10bec>
   210b8:	ldr	r2, [sp, #44]	; 0x2c
   210bc:	subs	r0, r2, r0
   210c0:	rscs	r1, r1, #0
   210c4:	str	r0, [sp, #40]	; 0x28
   210c8:	str	r1, [sp, #36]	; 0x24
   210cc:	bcc	2128c <__assert_fail@plt+0xfab4>
   210d0:	b	212a0 <__assert_fail@plt+0xfac8>
   210d4:	b	210e8 <__assert_fail@plt+0xf910>
   210d8:	ldr	r0, [fp, #-16]
   210dc:	cmp	r0, #1
   210e0:	bcc	210f8 <__assert_fail@plt+0xf920>
   210e4:	b	2110c <__assert_fail@plt+0xf934>
   210e8:	ldr	r0, [fp, #-16]
   210ec:	movw	r1, #0
   210f0:	cmp	r1, r0
   210f4:	bcs	2110c <__assert_fail@plt+0xf934>
   210f8:	mov	r0, #1
   210fc:	mvn	r1, #0
   21100:	str	r1, [sp, #32]
   21104:	str	r0, [sp, #28]
   21108:	b	21134 <__assert_fail@plt+0xf95c>
   2110c:	ldr	r0, [fp, #-16]
   21110:	rsb	r2, r0, #0
   21114:	mvn	r0, #0
   21118:	mov	r3, #0
   2111c:	str	r0, [sp, #24]
   21120:	ldr	r1, [sp, #24]
   21124:	bl	223c4 <__assert_fail@plt+0x10bec>
   21128:	str	r0, [sp, #32]
   2112c:	str	r1, [sp, #28]
   21130:	b	21134 <__assert_fail@plt+0xf95c>
   21134:	ldr	r0, [sp, #28]
   21138:	ldr	r1, [sp, #32]
   2113c:	ldr	r2, [fp, #-12]
   21140:	mvn	r2, r2
   21144:	subs	r1, r2, r1
   21148:	rscs	r0, r0, #0
   2114c:	str	r1, [sp, #20]
   21150:	str	r0, [sp, #16]
   21154:	bcs	2128c <__assert_fail@plt+0xfab4>
   21158:	b	212a0 <__assert_fail@plt+0xfac8>
   2115c:	b	21164 <__assert_fail@plt+0xf98c>
   21160:	b	21168 <__assert_fail@plt+0xf990>
   21164:	b	211b8 <__assert_fail@plt+0xf9e0>
   21168:	ldr	r0, [fp, #-16]
   2116c:	cmn	r0, #1
   21170:	bne	211b8 <__assert_fail@plt+0xf9e0>
   21174:	b	21190 <__assert_fail@plt+0xf9b8>
   21178:	ldr	r0, [fp, #-12]
   2117c:	add	r0, r0, #0
   21180:	movw	r1, #0
   21184:	cmp	r1, r0
   21188:	bcc	2128c <__assert_fail@plt+0xfab4>
   2118c:	b	212a0 <__assert_fail@plt+0xfac8>
   21190:	ldr	r0, [fp, #-12]
   21194:	movw	r1, #0
   21198:	cmp	r1, r0
   2119c:	bcs	212a0 <__assert_fail@plt+0xfac8>
   211a0:	ldr	r0, [fp, #-12]
   211a4:	sub	r0, r0, #1
   211a8:	mvn	r1, #0
   211ac:	cmp	r1, r0
   211b0:	bcc	2128c <__assert_fail@plt+0xfab4>
   211b4:	b	212a0 <__assert_fail@plt+0xfac8>
   211b8:	ldr	r0, [fp, #-16]
   211bc:	movw	r1, #0
   211c0:	udiv	r0, r1, r0
   211c4:	ldr	r1, [fp, #-12]
   211c8:	cmp	r0, r1
   211cc:	bcc	2128c <__assert_fail@plt+0xfab4>
   211d0:	b	212a0 <__assert_fail@plt+0xfac8>
   211d4:	ldr	r0, [fp, #-16]
   211d8:	cmp	r0, #0
   211dc:	bne	211e4 <__assert_fail@plt+0xfa0c>
   211e0:	b	212a0 <__assert_fail@plt+0xfac8>
   211e4:	ldr	r0, [fp, #-12]
   211e8:	cmp	r0, #0
   211ec:	bcs	21258 <__assert_fail@plt+0xfa80>
   211f0:	b	211f8 <__assert_fail@plt+0xfa20>
   211f4:	b	211fc <__assert_fail@plt+0xfa24>
   211f8:	b	2123c <__assert_fail@plt+0xfa64>
   211fc:	ldr	r0, [fp, #-12]
   21200:	cmn	r0, #1
   21204:	bne	2123c <__assert_fail@plt+0xfa64>
   21208:	b	21224 <__assert_fail@plt+0xfa4c>
   2120c:	ldr	r0, [fp, #-16]
   21210:	add	r0, r0, #0
   21214:	movw	r1, #0
   21218:	cmp	r1, r0
   2121c:	bcc	2128c <__assert_fail@plt+0xfab4>
   21220:	b	212a0 <__assert_fail@plt+0xfac8>
   21224:	ldr	r0, [fp, #-16]
   21228:	sub	r0, r0, #1
   2122c:	mvn	r1, #0
   21230:	cmp	r1, r0
   21234:	bcc	2128c <__assert_fail@plt+0xfab4>
   21238:	b	212a0 <__assert_fail@plt+0xfac8>
   2123c:	ldr	r0, [fp, #-12]
   21240:	movw	r1, #0
   21244:	udiv	r0, r1, r0
   21248:	ldr	r1, [fp, #-16]
   2124c:	cmp	r0, r1
   21250:	bcc	2128c <__assert_fail@plt+0xfab4>
   21254:	b	212a0 <__assert_fail@plt+0xfac8>
   21258:	ldr	r2, [fp, #-16]
   2125c:	mvn	r0, #0
   21260:	mov	r3, #0
   21264:	str	r0, [sp, #12]
   21268:	ldr	r1, [sp, #12]
   2126c:	bl	223c4 <__assert_fail@plt+0x10bec>
   21270:	ldr	r2, [fp, #-12]
   21274:	subs	r0, r0, r2
   21278:	sbcs	r1, r1, #0
   2127c:	str	r0, [sp, #8]
   21280:	str	r1, [sp, #4]
   21284:	bcs	212a0 <__assert_fail@plt+0xfac8>
   21288:	b	2128c <__assert_fail@plt+0xfab4>
   2128c:	ldr	r0, [fp, #-12]
   21290:	ldr	r1, [fp, #-16]
   21294:	mul	r0, r0, r1
   21298:	str	r0, [fp, #-20]	; 0xffffffec
   2129c:	b	212b4 <__assert_fail@plt+0xfadc>
   212a0:	ldr	r0, [fp, #-12]
   212a4:	ldr	r1, [fp, #-16]
   212a8:	mul	r0, r0, r1
   212ac:	str	r0, [fp, #-20]	; 0xffffffec
   212b0:	b	212cc <__assert_fail@plt+0xfaf4>
   212b4:	bl	11664 <__errno_location@plt>
   212b8:	movw	lr, #12
   212bc:	str	lr, [r0]
   212c0:	movw	r0, #0
   212c4:	str	r0, [fp, #-4]
   212c8:	b	212dc <__assert_fail@plt+0xfb04>
   212cc:	ldr	r0, [fp, #-8]
   212d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   212d4:	bl	1fec0 <__assert_fail@plt+0xe6e8>
   212d8:	str	r0, [fp, #-4]
   212dc:	ldr	r0, [fp, #-4]
   212e0:	mov	sp, fp
   212e4:	pop	{fp, pc}
   212e8:	svcvc	0x00ffffff
   212ec:	andhi	r0, r0, r0
   212f0:			; <UNDEFINED> instruction: 0xffff8000
   212f4:	push	{fp, lr}
   212f8:	mov	fp, sp
   212fc:	sub	sp, sp, #24
   21300:	str	r0, [fp, #-8]
   21304:	str	r1, [sp, #12]
   21308:	ldr	r0, [fp, #-8]
   2130c:	str	r0, [sp, #8]
   21310:	ldr	r0, [sp, #12]
   21314:	str	r0, [sp, #4]
   21318:	ldr	r0, [sp, #8]
   2131c:	ldr	r1, [sp, #4]
   21320:	cmp	r0, r1
   21324:	bne	21334 <__assert_fail@plt+0xfb5c>
   21328:	movw	r0, #0
   2132c:	str	r0, [fp, #-4]
   21330:	b	213a0 <__assert_fail@plt+0xfbc8>
   21334:	b	21338 <__assert_fail@plt+0xfb60>
   21338:	ldr	r0, [sp, #8]
   2133c:	ldrb	r0, [r0]
   21340:	bl	22268 <__assert_fail@plt+0x10a90>
   21344:	strb	r0, [sp, #3]
   21348:	ldr	r0, [sp, #4]
   2134c:	ldrb	r0, [r0]
   21350:	bl	22268 <__assert_fail@plt+0x10a90>
   21354:	strb	r0, [sp, #2]
   21358:	ldrb	r0, [sp, #3]
   2135c:	cmp	r0, #0
   21360:	bne	21368 <__assert_fail@plt+0xfb90>
   21364:	b	21390 <__assert_fail@plt+0xfbb8>
   21368:	ldr	r0, [sp, #8]
   2136c:	add	r0, r0, #1
   21370:	str	r0, [sp, #8]
   21374:	ldr	r0, [sp, #4]
   21378:	add	r0, r0, #1
   2137c:	str	r0, [sp, #4]
   21380:	ldrb	r0, [sp, #3]
   21384:	ldrb	r1, [sp, #2]
   21388:	cmp	r0, r1
   2138c:	beq	21338 <__assert_fail@plt+0xfb60>
   21390:	ldrb	r0, [sp, #3]
   21394:	ldrb	r1, [sp, #2]
   21398:	sub	r0, r0, r1
   2139c:	str	r0, [fp, #-4]
   213a0:	ldr	r0, [fp, #-4]
   213a4:	mov	sp, fp
   213a8:	pop	{fp, pc}
   213ac:	push	{fp, lr}
   213b0:	mov	fp, sp
   213b4:	sub	sp, sp, #16
   213b8:	str	r0, [sp, #8]
   213bc:	ldr	r0, [sp, #8]
   213c0:	bl	11574 <__fpending@plt>
   213c4:	cmp	r0, #0
   213c8:	movw	r0, #0
   213cc:	movne	r0, #1
   213d0:	and	r0, r0, #1
   213d4:	strb	r0, [sp, #7]
   213d8:	ldr	r0, [sp, #8]
   213dc:	bl	11484 <ferror@plt>
   213e0:	cmp	r0, #0
   213e4:	movw	r0, #0
   213e8:	movne	r0, #1
   213ec:	and	r0, r0, #1
   213f0:	strb	r0, [sp, #6]
   213f4:	ldr	r0, [sp, #8]
   213f8:	bl	116c4 <fclose@plt>
   213fc:	cmp	r0, #0
   21400:	movw	r0, #0
   21404:	movne	r0, #1
   21408:	and	r0, r0, #1
   2140c:	strb	r0, [sp, #5]
   21410:	ldrb	r0, [sp, #6]
   21414:	tst	r0, #1
   21418:	bne	21444 <__assert_fail@plt+0xfc6c>
   2141c:	ldrb	r0, [sp, #5]
   21420:	tst	r0, #1
   21424:	beq	21468 <__assert_fail@plt+0xfc90>
   21428:	ldrb	r0, [sp, #7]
   2142c:	tst	r0, #1
   21430:	bne	21444 <__assert_fail@plt+0xfc6c>
   21434:	bl	11664 <__errno_location@plt>
   21438:	ldr	r0, [r0]
   2143c:	cmp	r0, #9
   21440:	beq	21468 <__assert_fail@plt+0xfc90>
   21444:	ldrb	r0, [sp, #5]
   21448:	tst	r0, #1
   2144c:	bne	2145c <__assert_fail@plt+0xfc84>
   21450:	bl	11664 <__errno_location@plt>
   21454:	movw	lr, #0
   21458:	str	lr, [r0]
   2145c:	mvn	r0, #0
   21460:	str	r0, [fp, #-4]
   21464:	b	21470 <__assert_fail@plt+0xfc98>
   21468:	movw	r0, #0
   2146c:	str	r0, [fp, #-4]
   21470:	ldr	r0, [fp, #-4]
   21474:	mov	sp, fp
   21478:	pop	{fp, pc}
   2147c:	push	{r4, r5, fp, lr}
   21480:	add	fp, sp, #8
   21484:	sub	sp, sp, #272	; 0x110
   21488:	add	r1, sp, #7
   2148c:	str	r0, [fp, #-16]
   21490:	ldr	r0, [fp, #-16]
   21494:	movw	r2, #257	; 0x101
   21498:	bl	21b2c <__assert_fail@plt+0x10354>
   2149c:	cmp	r0, #0
   214a0:	beq	214b4 <__assert_fail@plt+0xfcdc>
   214a4:	movw	r0, #0
   214a8:	and	r0, r0, #1
   214ac:	strb	r0, [fp, #-9]
   214b0:	b	21508 <__assert_fail@plt+0xfd30>
   214b4:	add	r0, sp, #7
   214b8:	movw	r1, #19054	; 0x4a6e
   214bc:	movt	r1, #2
   214c0:	bl	11430 <strcmp@plt>
   214c4:	cmp	r0, #0
   214c8:	movw	r0, #1
   214cc:	str	r0, [sp]
   214d0:	beq	214f4 <__assert_fail@plt+0xfd1c>
   214d4:	add	r0, sp, #7
   214d8:	movw	r1, #19056	; 0x4a70
   214dc:	movt	r1, #2
   214e0:	bl	11430 <strcmp@plt>
   214e4:	cmp	r0, #0
   214e8:	movw	r0, #0
   214ec:	moveq	r0, #1
   214f0:	str	r0, [sp]
   214f4:	ldr	r0, [sp]
   214f8:	mvn	r1, #0
   214fc:	eor	r0, r0, r1
   21500:	and	r0, r0, #1
   21504:	strb	r0, [fp, #-9]
   21508:	ldrb	r0, [fp, #-9]
   2150c:	and	r0, r0, #1
   21510:	sub	sp, fp, #8
   21514:	pop	{r4, r5, fp, pc}
   21518:	push	{fp, lr}
   2151c:	mov	fp, sp
   21520:	bl	11664 <__errno_location@plt>
   21524:	movw	lr, #12
   21528:	str	lr, [r0]
   2152c:	movw	r0, #0
   21530:	pop	{fp, pc}
   21534:	push	{fp, lr}
   21538:	mov	fp, sp
   2153c:	sub	sp, sp, #8
   21540:	str	r0, [sp, #4]
   21544:	ldr	r0, [sp, #4]
   21548:	cmn	r0, #1
   2154c:	bhi	21560 <__assert_fail@plt+0xfd88>
   21550:	ldr	r0, [sp, #4]
   21554:	bl	1fda0 <__assert_fail@plt+0xe5c8>
   21558:	str	r0, [sp]
   2155c:	b	21568 <__assert_fail@plt+0xfd90>
   21560:	bl	21518 <__assert_fail@plt+0xfd40>
   21564:	str	r0, [sp]
   21568:	ldr	r0, [sp]
   2156c:	mov	sp, fp
   21570:	pop	{fp, pc}
   21574:	push	{fp, lr}
   21578:	mov	fp, sp
   2157c:	sub	sp, sp, #16
   21580:	str	r0, [fp, #-4]
   21584:	str	r1, [sp, #8]
   21588:	ldr	r0, [sp, #8]
   2158c:	cmn	r0, #1
   21590:	bhi	215c8 <__assert_fail@plt+0xfdf0>
   21594:	ldr	r0, [fp, #-4]
   21598:	ldr	r1, [sp, #8]
   2159c:	ldr	r2, [sp, #8]
   215a0:	cmp	r2, #0
   215a4:	movw	r2, #0
   215a8:	movne	r2, #1
   215ac:	mvn	r3, #0
   215b0:	eor	r2, r2, r3
   215b4:	and	r2, r2, #1
   215b8:	orr	r1, r1, r2
   215bc:	bl	1fec0 <__assert_fail@plt+0xe6e8>
   215c0:	str	r0, [sp, #4]
   215c4:	b	215d0 <__assert_fail@plt+0xfdf8>
   215c8:	bl	21518 <__assert_fail@plt+0xfd40>
   215cc:	str	r0, [sp, #4]
   215d0:	ldr	r0, [sp, #4]
   215d4:	mov	sp, fp
   215d8:	pop	{fp, pc}
   215dc:	push	{fp, lr}
   215e0:	mov	fp, sp
   215e4:	sub	sp, sp, #16
   215e8:	str	r0, [sp, #8]
   215ec:	str	r1, [sp, #4]
   215f0:	ldr	r0, [sp, #8]
   215f4:	mvn	r1, #0
   215f8:	cmp	r1, r0
   215fc:	bcs	21620 <__assert_fail@plt+0xfe48>
   21600:	ldr	r0, [sp, #4]
   21604:	cmp	r0, #0
   21608:	beq	21618 <__assert_fail@plt+0xfe40>
   2160c:	bl	21518 <__assert_fail@plt+0xfd40>
   21610:	str	r0, [fp, #-4]
   21614:	b	21660 <__assert_fail@plt+0xfe88>
   21618:	movw	r0, #0
   2161c:	str	r0, [sp, #8]
   21620:	ldr	r0, [sp, #4]
   21624:	mvn	r1, #0
   21628:	cmp	r1, r0
   2162c:	bcs	21650 <__assert_fail@plt+0xfe78>
   21630:	ldr	r0, [sp, #8]
   21634:	cmp	r0, #0
   21638:	beq	21648 <__assert_fail@plt+0xfe70>
   2163c:	bl	21518 <__assert_fail@plt+0xfd40>
   21640:	str	r0, [fp, #-4]
   21644:	b	21660 <__assert_fail@plt+0xfe88>
   21648:	movw	r0, #0
   2164c:	str	r0, [sp, #4]
   21650:	ldr	r0, [sp, #8]
   21654:	ldr	r1, [sp, #4]
   21658:	bl	1f68c <__assert_fail@plt+0xdeb4>
   2165c:	str	r0, [fp, #-4]
   21660:	ldr	r0, [fp, #-4]
   21664:	mov	sp, fp
   21668:	pop	{fp, pc}
   2166c:	push	{fp, lr}
   21670:	mov	fp, sp
   21674:	sub	sp, sp, #16
   21678:	str	r0, [fp, #-4]
   2167c:	str	r1, [sp, #8]
   21680:	str	r2, [sp, #4]
   21684:	ldr	r0, [sp, #8]
   21688:	cmp	r0, #0
   2168c:	beq	2169c <__assert_fail@plt+0xfec4>
   21690:	ldr	r0, [sp, #4]
   21694:	cmp	r0, #0
   21698:	bne	216a8 <__assert_fail@plt+0xfed0>
   2169c:	movw	r0, #1
   216a0:	str	r0, [sp, #4]
   216a4:	str	r0, [sp, #8]
   216a8:	ldr	r0, [sp, #8]
   216ac:	cmn	r0, #1
   216b0:	bhi	216d8 <__assert_fail@plt+0xff00>
   216b4:	ldr	r0, [sp, #4]
   216b8:	cmn	r0, #1
   216bc:	bhi	216d8 <__assert_fail@plt+0xff00>
   216c0:	ldr	r0, [fp, #-4]
   216c4:	ldr	r1, [sp, #8]
   216c8:	ldr	r2, [sp, #4]
   216cc:	bl	1ff64 <__assert_fail@plt+0xe78c>
   216d0:	str	r0, [sp]
   216d4:	b	216e0 <__assert_fail@plt+0xff08>
   216d8:	bl	21518 <__assert_fail@plt+0xfd40>
   216dc:	str	r0, [sp]
   216e0:	ldr	r0, [sp]
   216e4:	mov	sp, fp
   216e8:	pop	{fp, pc}
   216ec:	push	{fp, lr}
   216f0:	mov	fp, sp
   216f4:	sub	sp, sp, #8
   216f8:	movw	r0, #14
   216fc:	bl	11730 <nl_langinfo@plt>
   21700:	str	r0, [sp, #4]
   21704:	ldr	r0, [sp, #4]
   21708:	movw	lr, #0
   2170c:	cmp	r0, lr
   21710:	bne	21720 <__assert_fail@plt+0xff48>
   21714:	movw	r0, #13038	; 0x32ee
   21718:	movt	r0, #2
   2171c:	str	r0, [sp, #4]
   21720:	ldr	r0, [sp, #4]
   21724:	ldrb	r0, [r0]
   21728:	cmp	r0, #0
   2172c:	bne	2173c <__assert_fail@plt+0xff64>
   21730:	movw	r0, #19062	; 0x4a76
   21734:	movt	r0, #2
   21738:	str	r0, [sp, #4]
   2173c:	ldr	r0, [sp, #4]
   21740:	mov	sp, fp
   21744:	pop	{fp, pc}
   21748:	push	{fp, lr}
   2174c:	mov	fp, sp
   21750:	sub	sp, sp, #48	; 0x30
   21754:	str	r0, [fp, #-8]
   21758:	mov	r0, #15
   2175c:	str	r0, [fp, #-12]
   21760:	ldr	r0, [fp, #-12]
   21764:	add	r0, r0, #1
   21768:	str	r0, [fp, #-16]
   2176c:	ldr	r0, [fp, #-8]
   21770:	ldr	r1, [fp, #-16]
   21774:	asr	r2, r1, #31
   21778:	adds	r0, r0, r1
   2177c:	adc	r1, r2, #0
   21780:	and	r2, r1, #1
   21784:	rsb	r3, r2, #0
   21788:	eor	r1, r3, r1
   2178c:	cmp	r1, #0
   21790:	movwne	r1, #1
   21794:	eor	r2, r2, r0, lsr #31
   21798:	cmp	r2, #0
   2179c:	movwne	r2, #1
   217a0:	orr	r1, r1, r2
   217a4:	str	r0, [fp, #-20]	; 0xffffffec
   217a8:	tst	r1, #1
   217ac:	bne	21858 <__assert_fail@plt+0x10080>
   217b0:	ldr	r0, [pc, #180]	; 2186c <__assert_fail@plt+0x10094>
   217b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   217b8:	cmp	r0, r1
   217bc:	bcc	21858 <__assert_fail@plt+0x10080>
   217c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   217c4:	bl	115bc <malloc@plt>
   217c8:	str	r0, [sp, #24]
   217cc:	ldr	r0, [sp, #24]
   217d0:	movw	lr, #0
   217d4:	cmp	r0, lr
   217d8:	beq	21854 <__assert_fail@plt+0x1007c>
   217dc:	ldr	r0, [sp, #24]
   217e0:	str	r0, [sp, #20]
   217e4:	ldr	r0, [sp, #20]
   217e8:	adds	r0, r0, #8
   217ec:	mov	r1, #0
   217f0:	adc	r1, r1, #0
   217f4:	str	r0, [sp, #16]
   217f8:	ldr	r0, [sp, #16]
   217fc:	ldr	r2, [fp, #-12]
   21800:	mvn	r3, #0
   21804:	eor	r2, r2, r3
   21808:	and	r0, r0, r2
   2180c:	add	r0, r0, #8
   21810:	ldr	r2, [sp, #20]
   21814:	sub	r0, r0, r2
   21818:	str	r0, [sp, #12]
   2181c:	ldr	r0, [sp, #24]
   21820:	ldr	r2, [sp, #12]
   21824:	add	r0, r0, r2
   21828:	str	r0, [sp, #8]
   2182c:	ldr	r0, [sp, #8]
   21830:	str	r0, [sp, #4]
   21834:	ldr	r0, [sp, #12]
   21838:	ldr	r2, [sp, #4]
   2183c:	add	r2, r2, r3
   21840:	strb	r0, [r2]
   21844:	ldr	r0, [sp, #4]
   21848:	str	r0, [fp, #-4]
   2184c:	str	r1, [sp]
   21850:	b	21860 <__assert_fail@plt+0x10088>
   21854:	b	21858 <__assert_fail@plt+0x10080>
   21858:	movw	r0, #0
   2185c:	str	r0, [fp, #-4]
   21860:	ldr	r0, [fp, #-4]
   21864:	mov	sp, fp
   21868:	pop	{fp, pc}
   2186c:	svcvc	0x00ffffff
   21870:	push	{fp, lr}
   21874:	mov	fp, sp
   21878:	sub	sp, sp, #8
   2187c:	str	r0, [sp, #4]
   21880:	ldr	r0, [sp, #4]
   21884:	and	r0, r0, #7
   21888:	cmp	r0, #0
   2188c:	beq	21894 <__assert_fail@plt+0x100bc>
   21890:	bl	117a8 <abort@plt>
   21894:	ldr	r0, [sp, #4]
   21898:	and	r0, r0, #8
   2189c:	cmp	r0, #0
   218a0:	beq	218d0 <__assert_fail@plt+0x100f8>
   218a4:	ldr	r0, [sp, #4]
   218a8:	ldr	r1, [sp, #4]
   218ac:	mvn	r2, #0
   218b0:	add	r1, r1, r2
   218b4:	ldrb	r1, [r1]
   218b8:	movw	r2, #0
   218bc:	sub	r1, r2, r1
   218c0:	add	r0, r0, r1
   218c4:	str	r0, [sp]
   218c8:	ldr	r0, [sp]
   218cc:	bl	1fc54 <__assert_fail@plt+0xe47c>
   218d0:	mov	sp, fp
   218d4:	pop	{fp, pc}
   218d8:	push	{fp, lr}
   218dc:	mov	fp, sp
   218e0:	sub	sp, sp, #16
   218e4:	str	r0, [fp, #-4]
   218e8:	ldr	r0, [fp, #-4]
   218ec:	bl	1146c <wcwidth@plt>
   218f0:	str	r0, [sp, #8]
   218f4:	ldr	r0, [sp, #8]
   218f8:	cmp	r0, #0
   218fc:	blt	2190c <__assert_fail@plt+0x10134>
   21900:	ldr	r0, [sp, #8]
   21904:	str	r0, [sp, #4]
   21908:	b	21930 <__assert_fail@plt+0x10158>
   2190c:	ldr	r0, [fp, #-4]
   21910:	bl	11514 <iswcntrl@plt>
   21914:	cmp	r0, #0
   21918:	movw	r0, #0
   2191c:	movne	r0, #1
   21920:	tst	r0, #1
   21924:	movw	r0, #0
   21928:	moveq	r0, #1
   2192c:	str	r0, [sp, #4]
   21930:	ldr	r0, [sp, #4]
   21934:	mov	sp, fp
   21938:	pop	{fp, pc}
   2193c:	push	{fp, lr}
   21940:	mov	fp, sp
   21944:	sub	sp, sp, #8
   21948:	str	r0, [sp, #4]
   2194c:	str	r1, [sp]
   21950:	ldr	r0, [sp]
   21954:	ldr	r0, [r0]
   21958:	ldr	r1, [sp]
   2195c:	add	r1, r1, #16
   21960:	cmp	r0, r1
   21964:	bne	21998 <__assert_fail@plt+0x101c0>
   21968:	ldr	r0, [sp, #4]
   2196c:	add	r0, r0, #16
   21970:	ldr	r1, [sp]
   21974:	add	r1, r1, #16
   21978:	ldr	r2, [sp]
   2197c:	ldr	r2, [r2, #4]
   21980:	bl	1149c <memcpy@plt>
   21984:	ldr	r0, [sp, #4]
   21988:	add	r0, r0, #16
   2198c:	ldr	r1, [sp, #4]
   21990:	str	r0, [r1]
   21994:	b	219a8 <__assert_fail@plt+0x101d0>
   21998:	ldr	r0, [sp]
   2199c:	ldr	r0, [r0]
   219a0:	ldr	r1, [sp, #4]
   219a4:	str	r0, [r1]
   219a8:	ldr	r0, [sp]
   219ac:	ldr	r0, [r0, #4]
   219b0:	ldr	r1, [sp, #4]
   219b4:	str	r0, [r1, #4]
   219b8:	ldr	r0, [sp]
   219bc:	ldrb	r0, [r0, #8]
   219c0:	ldr	r1, [sp, #4]
   219c4:	and	r2, r0, #1
   219c8:	strb	r2, [r1, #8]
   219cc:	tst	r0, #1
   219d0:	beq	219e4 <__assert_fail@plt+0x1020c>
   219d4:	ldr	r0, [sp]
   219d8:	ldr	r0, [r0, #12]
   219dc:	ldr	r1, [sp, #4]
   219e0:	str	r0, [r1, #12]
   219e4:	mov	sp, fp
   219e8:	pop	{fp, pc}
   219ec:	sub	sp, sp, #8
   219f0:	movw	r1, #19068	; 0x4a7c
   219f4:	movt	r1, #2
   219f8:	strb	r0, [sp, #7]
   219fc:	ldrb	r0, [sp, #7]
   21a00:	lsr	r0, r0, #5
   21a04:	movw	r2, #19068	; 0x4a7c
   21a08:	movt	r2, #2
   21a0c:	add	r0, r2, r0, lsl #2
   21a10:	ldr	r0, [r0]
   21a14:	ldrb	r2, [sp, #7]
   21a18:	and	r2, r2, #31
   21a1c:	lsr	r0, r0, r2
   21a20:	and	r0, r0, #1
   21a24:	cmp	r0, #0
   21a28:	movw	r0, #0
   21a2c:	movne	r0, #1
   21a30:	and	r0, r0, #1
   21a34:	str	r1, [sp]
   21a38:	add	sp, sp, #8
   21a3c:	bx	lr
   21a40:	push	{fp, lr}
   21a44:	mov	fp, sp
   21a48:	sub	sp, sp, #80	; 0x50
   21a4c:	str	r0, [fp, #-8]
   21a50:	bl	1155c <__ctype_get_mb_cur_max@plt>
   21a54:	cmp	r0, #1
   21a58:	bls	21b14 <__assert_fail@plt+0x1033c>
   21a5c:	movw	r0, #0
   21a60:	str	r0, [fp, #-12]
   21a64:	ldr	r0, [fp, #-8]
   21a68:	str	r0, [sp, #28]
   21a6c:	movw	r0, #0
   21a70:	strb	r0, [sp, #12]
   21a74:	add	r1, sp, #12
   21a78:	add	r1, r1, #4
   21a7c:	str	r0, [sp, #8]
   21a80:	mov	r0, r1
   21a84:	ldr	r1, [sp, #8]
   21a88:	and	r1, r1, #255	; 0xff
   21a8c:	movw	r2, #8
   21a90:	bl	11688 <memset@plt>
   21a94:	ldr	r0, [sp, #8]
   21a98:	strb	r0, [sp, #24]
   21a9c:	add	r0, sp, #12
   21aa0:	bl	18af4 <__assert_fail@plt+0x731c>
   21aa4:	ldrb	r0, [sp, #36]	; 0x24
   21aa8:	tst	r0, #1
   21aac:	movw	r0, #0
   21ab0:	str	r0, [sp, #4]
   21ab4:	beq	21acc <__assert_fail@plt+0x102f4>
   21ab8:	ldr	r0, [sp, #40]	; 0x28
   21abc:	cmp	r0, #0
   21ac0:	movw	r0, #0
   21ac4:	moveq	r0, #1
   21ac8:	str	r0, [sp, #4]
   21acc:	ldr	r0, [sp, #4]
   21ad0:	mvn	r1, #0
   21ad4:	eor	r0, r0, r1
   21ad8:	tst	r0, #1
   21adc:	beq	21b08 <__assert_fail@plt+0x10330>
   21ae0:	ldr	r0, [fp, #-12]
   21ae4:	add	r0, r0, #1
   21ae8:	str	r0, [fp, #-12]
   21aec:	ldr	r0, [sp, #32]
   21af0:	ldr	r1, [sp, #28]
   21af4:	add	r0, r1, r0
   21af8:	str	r0, [sp, #28]
   21afc:	movw	r0, #0
   21b00:	strb	r0, [sp, #24]
   21b04:	b	21a9c <__assert_fail@plt+0x102c4>
   21b08:	ldr	r0, [fp, #-12]
   21b0c:	str	r0, [fp, #-4]
   21b10:	b	21b20 <__assert_fail@plt+0x10348>
   21b14:	ldr	r0, [fp, #-8]
   21b18:	bl	11634 <strlen@plt>
   21b1c:	str	r0, [fp, #-4]
   21b20:	ldr	r0, [fp, #-4]
   21b24:	mov	sp, fp
   21b28:	pop	{fp, pc}
   21b2c:	push	{fp, lr}
   21b30:	mov	fp, sp
   21b34:	sub	sp, sp, #16
   21b38:	str	r0, [fp, #-4]
   21b3c:	str	r1, [sp, #8]
   21b40:	str	r2, [sp, #4]
   21b44:	ldr	r0, [fp, #-4]
   21b48:	ldr	r1, [sp, #8]
   21b4c:	ldr	r2, [sp, #4]
   21b50:	bl	21b5c <__assert_fail@plt+0x10384>
   21b54:	mov	sp, fp
   21b58:	pop	{fp, pc}
   21b5c:	push	{fp, lr}
   21b60:	mov	fp, sp
   21b64:	sub	sp, sp, #24
   21b68:	str	r0, [fp, #-8]
   21b6c:	str	r1, [sp, #12]
   21b70:	str	r2, [sp, #8]
   21b74:	ldr	r0, [fp, #-8]
   21b78:	bl	21c5c <__assert_fail@plt+0x10484>
   21b7c:	str	r0, [sp, #4]
   21b80:	ldr	r0, [sp, #4]
   21b84:	movw	r1, #0
   21b88:	cmp	r0, r1
   21b8c:	bne	21bb4 <__assert_fail@plt+0x103dc>
   21b90:	ldr	r0, [sp, #8]
   21b94:	cmp	r0, #0
   21b98:	bls	21ba8 <__assert_fail@plt+0x103d0>
   21b9c:	ldr	r0, [sp, #12]
   21ba0:	movw	r1, #0
   21ba4:	strb	r1, [r0]
   21ba8:	movw	r0, #22
   21bac:	str	r0, [fp, #-4]
   21bb0:	b	21c30 <__assert_fail@plt+0x10458>
   21bb4:	ldr	r0, [sp, #4]
   21bb8:	bl	11634 <strlen@plt>
   21bbc:	str	r0, [sp]
   21bc0:	ldr	r0, [sp]
   21bc4:	ldr	lr, [sp, #8]
   21bc8:	cmp	r0, lr
   21bcc:	bcs	21bf0 <__assert_fail@plt+0x10418>
   21bd0:	ldr	r0, [sp, #12]
   21bd4:	ldr	r1, [sp, #4]
   21bd8:	ldr	r2, [sp]
   21bdc:	add	r2, r2, #1
   21be0:	bl	1149c <memcpy@plt>
   21be4:	movw	r0, #0
   21be8:	str	r0, [fp, #-4]
   21bec:	b	21c30 <__assert_fail@plt+0x10458>
   21bf0:	ldr	r0, [sp, #8]
   21bf4:	cmp	r0, #0
   21bf8:	bls	21c28 <__assert_fail@plt+0x10450>
   21bfc:	ldr	r0, [sp, #12]
   21c00:	ldr	r1, [sp, #4]
   21c04:	ldr	r2, [sp, #8]
   21c08:	sub	r2, r2, #1
   21c0c:	bl	1149c <memcpy@plt>
   21c10:	ldr	r0, [sp, #12]
   21c14:	ldr	r1, [sp, #8]
   21c18:	sub	r1, r1, #1
   21c1c:	add	r0, r0, r1
   21c20:	movw	r1, #0
   21c24:	strb	r1, [r0]
   21c28:	movw	r0, #34	; 0x22
   21c2c:	str	r0, [fp, #-4]
   21c30:	ldr	r0, [fp, #-4]
   21c34:	mov	sp, fp
   21c38:	pop	{fp, pc}
   21c3c:	push	{fp, lr}
   21c40:	mov	fp, sp
   21c44:	sub	sp, sp, #8
   21c48:	str	r0, [sp, #4]
   21c4c:	ldr	r0, [sp, #4]
   21c50:	bl	21c5c <__assert_fail@plt+0x10484>
   21c54:	mov	sp, fp
   21c58:	pop	{fp, pc}
   21c5c:	push	{fp, lr}
   21c60:	mov	fp, sp
   21c64:	sub	sp, sp, #8
   21c68:	str	r0, [sp, #4]
   21c6c:	ldr	r0, [sp, #4]
   21c70:	movw	r1, #0
   21c74:	bl	11700 <setlocale@plt>
   21c78:	str	r0, [sp]
   21c7c:	ldr	r0, [sp]
   21c80:	mov	sp, fp
   21c84:	pop	{fp, pc}
   21c88:	push	{fp, lr}
   21c8c:	mov	fp, sp
   21c90:	sub	sp, sp, #8
   21c94:	str	r0, [sp, #4]
   21c98:	ldr	r0, [sp, #4]
   21c9c:	movw	r1, #0
   21ca0:	movw	r2, #3
   21ca4:	bl	1f728 <__assert_fail@plt+0xdf50>
   21ca8:	mov	sp, fp
   21cac:	pop	{fp, pc}
   21cb0:	sub	sp, sp, #12
   21cb4:	str	r0, [sp, #4]
   21cb8:	ldr	r0, [sp, #4]
   21cbc:	sub	r1, r0, #48	; 0x30
   21cc0:	cmp	r1, #10
   21cc4:	str	r0, [sp]
   21cc8:	bcc	21cf8 <__assert_fail@plt+0x10520>
   21ccc:	b	21cd0 <__assert_fail@plt+0x104f8>
   21cd0:	ldr	r0, [sp]
   21cd4:	sub	r1, r0, #65	; 0x41
   21cd8:	cmp	r1, #26
   21cdc:	bcc	21cf8 <__assert_fail@plt+0x10520>
   21ce0:	b	21ce4 <__assert_fail@plt+0x1050c>
   21ce4:	ldr	r0, [sp]
   21ce8:	sub	r1, r0, #97	; 0x61
   21cec:	cmp	r1, #25
   21cf0:	bhi	21d08 <__assert_fail@plt+0x10530>
   21cf4:	b	21cf8 <__assert_fail@plt+0x10520>
   21cf8:	movw	r0, #1
   21cfc:	and	r0, r0, #1
   21d00:	strb	r0, [sp, #11]
   21d04:	b	21d14 <__assert_fail@plt+0x1053c>
   21d08:	movw	r0, #0
   21d0c:	and	r0, r0, #1
   21d10:	strb	r0, [sp, #11]
   21d14:	ldrb	r0, [sp, #11]
   21d18:	and	r0, r0, #1
   21d1c:	add	sp, sp, #12
   21d20:	bx	lr
   21d24:	sub	sp, sp, #12
   21d28:	str	r0, [sp, #4]
   21d2c:	ldr	r0, [sp, #4]
   21d30:	sub	r1, r0, #65	; 0x41
   21d34:	cmp	r1, #26
   21d38:	str	r0, [sp]
   21d3c:	bcc	21d58 <__assert_fail@plt+0x10580>
   21d40:	b	21d44 <__assert_fail@plt+0x1056c>
   21d44:	ldr	r0, [sp]
   21d48:	sub	r1, r0, #97	; 0x61
   21d4c:	cmp	r1, #25
   21d50:	bhi	21d68 <__assert_fail@plt+0x10590>
   21d54:	b	21d58 <__assert_fail@plt+0x10580>
   21d58:	movw	r0, #1
   21d5c:	and	r0, r0, #1
   21d60:	strb	r0, [sp, #11]
   21d64:	b	21d74 <__assert_fail@plt+0x1059c>
   21d68:	movw	r0, #0
   21d6c:	and	r0, r0, #1
   21d70:	strb	r0, [sp, #11]
   21d74:	ldrb	r0, [sp, #11]
   21d78:	and	r0, r0, #1
   21d7c:	add	sp, sp, #12
   21d80:	bx	lr
   21d84:	sub	sp, sp, #8
   21d88:	str	r0, [sp]
   21d8c:	ldr	r0, [sp]
   21d90:	cmp	r0, #127	; 0x7f
   21d94:	bhi	21dac <__assert_fail@plt+0x105d4>
   21d98:	b	21d9c <__assert_fail@plt+0x105c4>
   21d9c:	movw	r0, #1
   21da0:	and	r0, r0, #1
   21da4:	strb	r0, [sp, #7]
   21da8:	b	21db8 <__assert_fail@plt+0x105e0>
   21dac:	movw	r0, #0
   21db0:	and	r0, r0, #1
   21db4:	strb	r0, [sp, #7]
   21db8:	ldrb	r0, [sp, #7]
   21dbc:	and	r0, r0, #1
   21dc0:	add	sp, sp, #8
   21dc4:	bx	lr
   21dc8:	sub	sp, sp, #8
   21dcc:	str	r0, [sp, #4]
   21dd0:	ldr	r0, [sp, #4]
   21dd4:	cmp	r0, #32
   21dd8:	movw	r0, #1
   21ddc:	str	r0, [sp]
   21de0:	beq	21df8 <__assert_fail@plt+0x10620>
   21de4:	ldr	r0, [sp, #4]
   21de8:	cmp	r0, #9
   21dec:	movw	r0, #0
   21df0:	moveq	r0, #1
   21df4:	str	r0, [sp]
   21df8:	ldr	r0, [sp]
   21dfc:	and	r0, r0, #1
   21e00:	add	sp, sp, #8
   21e04:	bx	lr
   21e08:	sub	sp, sp, #12
   21e0c:	str	r0, [sp, #4]
   21e10:	ldr	r0, [sp, #4]
   21e14:	cmp	r0, #32
   21e18:	str	r0, [sp]
   21e1c:	bcc	21e34 <__assert_fail@plt+0x1065c>
   21e20:	b	21e24 <__assert_fail@plt+0x1064c>
   21e24:	ldr	r0, [sp]
   21e28:	cmp	r0, #127	; 0x7f
   21e2c:	bne	21e44 <__assert_fail@plt+0x1066c>
   21e30:	b	21e34 <__assert_fail@plt+0x1065c>
   21e34:	movw	r0, #1
   21e38:	and	r0, r0, #1
   21e3c:	strb	r0, [sp, #11]
   21e40:	b	21e50 <__assert_fail@plt+0x10678>
   21e44:	movw	r0, #0
   21e48:	and	r0, r0, #1
   21e4c:	strb	r0, [sp, #11]
   21e50:	ldrb	r0, [sp, #11]
   21e54:	and	r0, r0, #1
   21e58:	add	sp, sp, #12
   21e5c:	bx	lr
   21e60:	sub	sp, sp, #8
   21e64:	str	r0, [sp]
   21e68:	ldr	r0, [sp]
   21e6c:	sub	r0, r0, #48	; 0x30
   21e70:	cmp	r0, #9
   21e74:	bhi	21e8c <__assert_fail@plt+0x106b4>
   21e78:	b	21e7c <__assert_fail@plt+0x106a4>
   21e7c:	movw	r0, #1
   21e80:	and	r0, r0, #1
   21e84:	strb	r0, [sp, #7]
   21e88:	b	21e98 <__assert_fail@plt+0x106c0>
   21e8c:	movw	r0, #0
   21e90:	and	r0, r0, #1
   21e94:	strb	r0, [sp, #7]
   21e98:	ldrb	r0, [sp, #7]
   21e9c:	and	r0, r0, #1
   21ea0:	add	sp, sp, #8
   21ea4:	bx	lr
   21ea8:	sub	sp, sp, #8
   21eac:	str	r0, [sp]
   21eb0:	ldr	r0, [sp]
   21eb4:	sub	r0, r0, #33	; 0x21
   21eb8:	cmp	r0, #93	; 0x5d
   21ebc:	bhi	21ed4 <__assert_fail@plt+0x106fc>
   21ec0:	b	21ec4 <__assert_fail@plt+0x106ec>
   21ec4:	movw	r0, #1
   21ec8:	and	r0, r0, #1
   21ecc:	strb	r0, [sp, #7]
   21ed0:	b	21ee0 <__assert_fail@plt+0x10708>
   21ed4:	movw	r0, #0
   21ed8:	and	r0, r0, #1
   21edc:	strb	r0, [sp, #7]
   21ee0:	ldrb	r0, [sp, #7]
   21ee4:	and	r0, r0, #1
   21ee8:	add	sp, sp, #8
   21eec:	bx	lr
   21ef0:	sub	sp, sp, #8
   21ef4:	str	r0, [sp]
   21ef8:	ldr	r0, [sp]
   21efc:	sub	r0, r0, #97	; 0x61
   21f00:	cmp	r0, #25
   21f04:	bhi	21f1c <__assert_fail@plt+0x10744>
   21f08:	b	21f0c <__assert_fail@plt+0x10734>
   21f0c:	movw	r0, #1
   21f10:	and	r0, r0, #1
   21f14:	strb	r0, [sp, #7]
   21f18:	b	21f28 <__assert_fail@plt+0x10750>
   21f1c:	movw	r0, #0
   21f20:	and	r0, r0, #1
   21f24:	strb	r0, [sp, #7]
   21f28:	ldrb	r0, [sp, #7]
   21f2c:	and	r0, r0, #1
   21f30:	add	sp, sp, #8
   21f34:	bx	lr
   21f38:	sub	sp, sp, #8
   21f3c:	str	r0, [sp]
   21f40:	ldr	r0, [sp]
   21f44:	sub	r0, r0, #32
   21f48:	cmp	r0, #94	; 0x5e
   21f4c:	bhi	21f64 <__assert_fail@plt+0x1078c>
   21f50:	b	21f54 <__assert_fail@plt+0x1077c>
   21f54:	movw	r0, #1
   21f58:	and	r0, r0, #1
   21f5c:	strb	r0, [sp, #7]
   21f60:	b	21f70 <__assert_fail@plt+0x10798>
   21f64:	movw	r0, #0
   21f68:	and	r0, r0, #1
   21f6c:	strb	r0, [sp, #7]
   21f70:	ldrb	r0, [sp, #7]
   21f74:	and	r0, r0, #1
   21f78:	add	sp, sp, #8
   21f7c:	bx	lr
   21f80:	sub	sp, sp, #12
   21f84:	str	r0, [sp, #4]
   21f88:	ldr	r0, [sp, #4]
   21f8c:	sub	r0, r0, #33	; 0x21
   21f90:	cmp	r0, #93	; 0x5d
   21f94:	str	r0, [sp]
   21f98:	bhi	22134 <__assert_fail@plt+0x1095c>
   21f9c:	add	r0, pc, #8
   21fa0:	ldr	r1, [sp]
   21fa4:	ldr	r0, [r0, r1, lsl #2]
   21fa8:	mov	pc, r0
   21fac:	andeq	r2, r2, r4, lsr #2
   21fb0:	andeq	r2, r2, r4, lsr #2
   21fb4:	andeq	r2, r2, r4, lsr #2
   21fb8:	andeq	r2, r2, r4, lsr #2
   21fbc:	andeq	r2, r2, r4, lsr #2
   21fc0:	andeq	r2, r2, r4, lsr #2
   21fc4:	andeq	r2, r2, r4, lsr #2
   21fc8:	andeq	r2, r2, r4, lsr #2
   21fcc:	andeq	r2, r2, r4, lsr #2
   21fd0:	andeq	r2, r2, r4, lsr #2
   21fd4:	andeq	r2, r2, r4, lsr #2
   21fd8:	andeq	r2, r2, r4, lsr #2
   21fdc:	andeq	r2, r2, r4, lsr #2
   21fe0:	andeq	r2, r2, r4, lsr #2
   21fe4:	andeq	r2, r2, r4, lsr #2
   21fe8:	andeq	r2, r2, r4, lsr r1
   21fec:	andeq	r2, r2, r4, lsr r1
   21ff0:	andeq	r2, r2, r4, lsr r1
   21ff4:	andeq	r2, r2, r4, lsr r1
   21ff8:	andeq	r2, r2, r4, lsr r1
   21ffc:	andeq	r2, r2, r4, lsr r1
   22000:	andeq	r2, r2, r4, lsr r1
   22004:	andeq	r2, r2, r4, lsr r1
   22008:	andeq	r2, r2, r4, lsr r1
   2200c:	andeq	r2, r2, r4, lsr r1
   22010:	andeq	r2, r2, r4, lsr #2
   22014:	andeq	r2, r2, r4, lsr #2
   22018:	andeq	r2, r2, r4, lsr #2
   2201c:	andeq	r2, r2, r4, lsr #2
   22020:	andeq	r2, r2, r4, lsr #2
   22024:	andeq	r2, r2, r4, lsr #2
   22028:	andeq	r2, r2, r4, lsr #2
   2202c:	andeq	r2, r2, r4, lsr r1
   22030:	andeq	r2, r2, r4, lsr r1
   22034:	andeq	r2, r2, r4, lsr r1
   22038:	andeq	r2, r2, r4, lsr r1
   2203c:	andeq	r2, r2, r4, lsr r1
   22040:	andeq	r2, r2, r4, lsr r1
   22044:	andeq	r2, r2, r4, lsr r1
   22048:	andeq	r2, r2, r4, lsr r1
   2204c:	andeq	r2, r2, r4, lsr r1
   22050:	andeq	r2, r2, r4, lsr r1
   22054:	andeq	r2, r2, r4, lsr r1
   22058:	andeq	r2, r2, r4, lsr r1
   2205c:	andeq	r2, r2, r4, lsr r1
   22060:	andeq	r2, r2, r4, lsr r1
   22064:	andeq	r2, r2, r4, lsr r1
   22068:	andeq	r2, r2, r4, lsr r1
   2206c:	andeq	r2, r2, r4, lsr r1
   22070:	andeq	r2, r2, r4, lsr r1
   22074:	andeq	r2, r2, r4, lsr r1
   22078:	andeq	r2, r2, r4, lsr r1
   2207c:	andeq	r2, r2, r4, lsr r1
   22080:	andeq	r2, r2, r4, lsr r1
   22084:	andeq	r2, r2, r4, lsr r1
   22088:	andeq	r2, r2, r4, lsr r1
   2208c:	andeq	r2, r2, r4, lsr r1
   22090:	andeq	r2, r2, r4, lsr r1
   22094:	andeq	r2, r2, r4, lsr #2
   22098:	andeq	r2, r2, r4, lsr #2
   2209c:	andeq	r2, r2, r4, lsr #2
   220a0:	andeq	r2, r2, r4, lsr #2
   220a4:	andeq	r2, r2, r4, lsr #2
   220a8:	andeq	r2, r2, r4, lsr #2
   220ac:	andeq	r2, r2, r4, lsr r1
   220b0:	andeq	r2, r2, r4, lsr r1
   220b4:	andeq	r2, r2, r4, lsr r1
   220b8:	andeq	r2, r2, r4, lsr r1
   220bc:	andeq	r2, r2, r4, lsr r1
   220c0:	andeq	r2, r2, r4, lsr r1
   220c4:	andeq	r2, r2, r4, lsr r1
   220c8:	andeq	r2, r2, r4, lsr r1
   220cc:	andeq	r2, r2, r4, lsr r1
   220d0:	andeq	r2, r2, r4, lsr r1
   220d4:	andeq	r2, r2, r4, lsr r1
   220d8:	andeq	r2, r2, r4, lsr r1
   220dc:	andeq	r2, r2, r4, lsr r1
   220e0:	andeq	r2, r2, r4, lsr r1
   220e4:	andeq	r2, r2, r4, lsr r1
   220e8:	andeq	r2, r2, r4, lsr r1
   220ec:	andeq	r2, r2, r4, lsr r1
   220f0:	andeq	r2, r2, r4, lsr r1
   220f4:	andeq	r2, r2, r4, lsr r1
   220f8:	andeq	r2, r2, r4, lsr r1
   220fc:	andeq	r2, r2, r4, lsr r1
   22100:	andeq	r2, r2, r4, lsr r1
   22104:	andeq	r2, r2, r4, lsr r1
   22108:	andeq	r2, r2, r4, lsr r1
   2210c:	andeq	r2, r2, r4, lsr r1
   22110:	andeq	r2, r2, r4, lsr r1
   22114:	andeq	r2, r2, r4, lsr #2
   22118:	andeq	r2, r2, r4, lsr #2
   2211c:	andeq	r2, r2, r4, lsr #2
   22120:	andeq	r2, r2, r4, lsr #2
   22124:	movw	r0, #1
   22128:	and	r0, r0, #1
   2212c:	strb	r0, [sp, #11]
   22130:	b	22140 <__assert_fail@plt+0x10968>
   22134:	movw	r0, #0
   22138:	and	r0, r0, #1
   2213c:	strb	r0, [sp, #11]
   22140:	ldrb	r0, [sp, #11]
   22144:	and	r0, r0, #1
   22148:	add	sp, sp, #12
   2214c:	bx	lr
   22150:	sub	sp, sp, #12
   22154:	str	r0, [sp, #4]
   22158:	ldr	r0, [sp, #4]
   2215c:	sub	r1, r0, #9
   22160:	cmp	r1, #5
   22164:	str	r0, [sp]
   22168:	bcc	22180 <__assert_fail@plt+0x109a8>
   2216c:	b	22170 <__assert_fail@plt+0x10998>
   22170:	ldr	r0, [sp]
   22174:	cmp	r0, #32
   22178:	bne	22190 <__assert_fail@plt+0x109b8>
   2217c:	b	22180 <__assert_fail@plt+0x109a8>
   22180:	movw	r0, #1
   22184:	and	r0, r0, #1
   22188:	strb	r0, [sp, #11]
   2218c:	b	2219c <__assert_fail@plt+0x109c4>
   22190:	movw	r0, #0
   22194:	and	r0, r0, #1
   22198:	strb	r0, [sp, #11]
   2219c:	ldrb	r0, [sp, #11]
   221a0:	and	r0, r0, #1
   221a4:	add	sp, sp, #12
   221a8:	bx	lr
   221ac:	sub	sp, sp, #8
   221b0:	str	r0, [sp]
   221b4:	ldr	r0, [sp]
   221b8:	sub	r0, r0, #65	; 0x41
   221bc:	cmp	r0, #25
   221c0:	bhi	221d8 <__assert_fail@plt+0x10a00>
   221c4:	b	221c8 <__assert_fail@plt+0x109f0>
   221c8:	movw	r0, #1
   221cc:	and	r0, r0, #1
   221d0:	strb	r0, [sp, #7]
   221d4:	b	221e4 <__assert_fail@plt+0x10a0c>
   221d8:	movw	r0, #0
   221dc:	and	r0, r0, #1
   221e0:	strb	r0, [sp, #7]
   221e4:	ldrb	r0, [sp, #7]
   221e8:	and	r0, r0, #1
   221ec:	add	sp, sp, #8
   221f0:	bx	lr
   221f4:	sub	sp, sp, #12
   221f8:	str	r0, [sp, #4]
   221fc:	ldr	r0, [sp, #4]
   22200:	sub	r1, r0, #48	; 0x30
   22204:	cmp	r1, #10
   22208:	str	r0, [sp]
   2220c:	bcc	2223c <__assert_fail@plt+0x10a64>
   22210:	b	22214 <__assert_fail@plt+0x10a3c>
   22214:	ldr	r0, [sp]
   22218:	sub	r1, r0, #65	; 0x41
   2221c:	cmp	r1, #6
   22220:	bcc	2223c <__assert_fail@plt+0x10a64>
   22224:	b	22228 <__assert_fail@plt+0x10a50>
   22228:	ldr	r0, [sp]
   2222c:	sub	r1, r0, #97	; 0x61
   22230:	cmp	r1, #5
   22234:	bhi	2224c <__assert_fail@plt+0x10a74>
   22238:	b	2223c <__assert_fail@plt+0x10a64>
   2223c:	movw	r0, #1
   22240:	and	r0, r0, #1
   22244:	strb	r0, [sp, #11]
   22248:	b	22258 <__assert_fail@plt+0x10a80>
   2224c:	movw	r0, #0
   22250:	and	r0, r0, #1
   22254:	strb	r0, [sp, #11]
   22258:	ldrb	r0, [sp, #11]
   2225c:	and	r0, r0, #1
   22260:	add	sp, sp, #12
   22264:	bx	lr
   22268:	sub	sp, sp, #8
   2226c:	str	r0, [sp]
   22270:	ldr	r0, [sp]
   22274:	sub	r0, r0, #65	; 0x41
   22278:	cmp	r0, #25
   2227c:	bhi	22298 <__assert_fail@plt+0x10ac0>
   22280:	b	22284 <__assert_fail@plt+0x10aac>
   22284:	ldr	r0, [sp]
   22288:	sub	r0, r0, #65	; 0x41
   2228c:	add	r0, r0, #97	; 0x61
   22290:	str	r0, [sp, #4]
   22294:	b	222a0 <__assert_fail@plt+0x10ac8>
   22298:	ldr	r0, [sp]
   2229c:	str	r0, [sp, #4]
   222a0:	ldr	r0, [sp, #4]
   222a4:	add	sp, sp, #8
   222a8:	bx	lr
   222ac:	sub	sp, sp, #8
   222b0:	str	r0, [sp]
   222b4:	ldr	r0, [sp]
   222b8:	sub	r0, r0, #97	; 0x61
   222bc:	cmp	r0, #25
   222c0:	bhi	222dc <__assert_fail@plt+0x10b04>
   222c4:	b	222c8 <__assert_fail@plt+0x10af0>
   222c8:	ldr	r0, [sp]
   222cc:	sub	r0, r0, #97	; 0x61
   222d0:	add	r0, r0, #65	; 0x41
   222d4:	str	r0, [sp, #4]
   222d8:	b	222e4 <__assert_fail@plt+0x10b0c>
   222dc:	ldr	r0, [sp]
   222e0:	str	r0, [sp, #4]
   222e4:	ldr	r0, [sp, #4]
   222e8:	add	sp, sp, #8
   222ec:	bx	lr
   222f0:	cmp	r3, #0
   222f4:	cmpeq	r2, #0
   222f8:	bne	2231c <__assert_fail@plt+0x10b44>
   222fc:	cmp	r1, #0
   22300:	movlt	r1, #-2147483648	; 0x80000000
   22304:	movlt	r0, #0
   22308:	blt	22318 <__assert_fail@plt+0x10b40>
   2230c:	cmpeq	r0, #0
   22310:	mvnne	r1, #-2147483648	; 0x80000000
   22314:	mvnne	r0, #0
   22318:	b	22400 <__assert_fail@plt+0x10c28>
   2231c:	sub	sp, sp, #8
   22320:	push	{sp, lr}
   22324:	cmp	r1, #0
   22328:	blt	22348 <__assert_fail@plt+0x10b70>
   2232c:	cmp	r3, #0
   22330:	blt	2237c <__assert_fail@plt+0x10ba4>
   22334:	bl	22410 <__assert_fail@plt+0x10c38>
   22338:	ldr	lr, [sp, #4]
   2233c:	add	sp, sp, #8
   22340:	pop	{r2, r3}
   22344:	bx	lr
   22348:	rsbs	r0, r0, #0
   2234c:	sbc	r1, r1, r1, lsl #1
   22350:	cmp	r3, #0
   22354:	blt	223a0 <__assert_fail@plt+0x10bc8>
   22358:	bl	22410 <__assert_fail@plt+0x10c38>
   2235c:	ldr	lr, [sp, #4]
   22360:	add	sp, sp, #8
   22364:	pop	{r2, r3}
   22368:	rsbs	r0, r0, #0
   2236c:	sbc	r1, r1, r1, lsl #1
   22370:	rsbs	r2, r2, #0
   22374:	sbc	r3, r3, r3, lsl #1
   22378:	bx	lr
   2237c:	rsbs	r2, r2, #0
   22380:	sbc	r3, r3, r3, lsl #1
   22384:	bl	22410 <__assert_fail@plt+0x10c38>
   22388:	ldr	lr, [sp, #4]
   2238c:	add	sp, sp, #8
   22390:	pop	{r2, r3}
   22394:	rsbs	r0, r0, #0
   22398:	sbc	r1, r1, r1, lsl #1
   2239c:	bx	lr
   223a0:	rsbs	r2, r2, #0
   223a4:	sbc	r3, r3, r3, lsl #1
   223a8:	bl	22410 <__assert_fail@plt+0x10c38>
   223ac:	ldr	lr, [sp, #4]
   223b0:	add	sp, sp, #8
   223b4:	pop	{r2, r3}
   223b8:	rsbs	r2, r2, #0
   223bc:	sbc	r3, r3, r3, lsl #1
   223c0:	bx	lr
   223c4:	cmp	r3, #0
   223c8:	cmpeq	r2, #0
   223cc:	bne	223e4 <__assert_fail@plt+0x10c0c>
   223d0:	cmp	r1, #0
   223d4:	cmpeq	r0, #0
   223d8:	mvnne	r1, #0
   223dc:	mvnne	r0, #0
   223e0:	b	22400 <__assert_fail@plt+0x10c28>
   223e4:	sub	sp, sp, #8
   223e8:	push	{sp, lr}
   223ec:	bl	22410 <__assert_fail@plt+0x10c38>
   223f0:	ldr	lr, [sp, #4]
   223f4:	add	sp, sp, #8
   223f8:	pop	{r2, r3}
   223fc:	bx	lr
   22400:	push	{r1, lr}
   22404:	mov	r0, #8
   22408:	bl	11424 <raise@plt>
   2240c:	pop	{r1, pc}
   22410:	cmp	r1, r3
   22414:	cmpeq	r0, r2
   22418:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2241c:	mov	r4, r0
   22420:	movcc	r0, #0
   22424:	mov	r5, r1
   22428:	ldr	lr, [sp, #36]	; 0x24
   2242c:	movcc	r1, r0
   22430:	bcc	2252c <__assert_fail@plt+0x10d54>
   22434:	cmp	r3, #0
   22438:	clzeq	ip, r2
   2243c:	clzne	ip, r3
   22440:	addeq	ip, ip, #32
   22444:	cmp	r5, #0
   22448:	clzeq	r1, r4
   2244c:	addeq	r1, r1, #32
   22450:	clzne	r1, r5
   22454:	sub	ip, ip, r1
   22458:	sub	sl, ip, #32
   2245c:	lsl	r9, r3, ip
   22460:	rsb	fp, ip, #32
   22464:	orr	r9, r9, r2, lsl sl
   22468:	orr	r9, r9, r2, lsr fp
   2246c:	lsl	r8, r2, ip
   22470:	cmp	r5, r9
   22474:	cmpeq	r4, r8
   22478:	movcc	r0, #0
   2247c:	movcc	r1, r0
   22480:	bcc	2249c <__assert_fail@plt+0x10cc4>
   22484:	mov	r0, #1
   22488:	subs	r4, r4, r8
   2248c:	lsl	r1, r0, sl
   22490:	orr	r1, r1, r0, lsr fp
   22494:	lsl	r0, r0, ip
   22498:	sbc	r5, r5, r9
   2249c:	cmp	ip, #0
   224a0:	beq	2252c <__assert_fail@plt+0x10d54>
   224a4:	lsr	r6, r8, #1
   224a8:	orr	r6, r6, r9, lsl #31
   224ac:	lsr	r7, r9, #1
   224b0:	mov	r2, ip
   224b4:	b	224d8 <__assert_fail@plt+0x10d00>
   224b8:	subs	r3, r4, r6
   224bc:	sbc	r8, r5, r7
   224c0:	adds	r3, r3, r3
   224c4:	adc	r8, r8, r8
   224c8:	adds	r4, r3, #1
   224cc:	adc	r5, r8, #0
   224d0:	subs	r2, r2, #1
   224d4:	beq	224f4 <__assert_fail@plt+0x10d1c>
   224d8:	cmp	r5, r7
   224dc:	cmpeq	r4, r6
   224e0:	bcs	224b8 <__assert_fail@plt+0x10ce0>
   224e4:	adds	r4, r4, r4
   224e8:	adc	r5, r5, r5
   224ec:	subs	r2, r2, #1
   224f0:	bne	224d8 <__assert_fail@plt+0x10d00>
   224f4:	lsr	r3, r4, ip
   224f8:	orr	r3, r3, r5, lsl fp
   224fc:	lsr	r2, r5, ip
   22500:	orr	r3, r3, r5, lsr sl
   22504:	adds	r0, r0, r4
   22508:	mov	r4, r3
   2250c:	lsl	r3, r2, ip
   22510:	orr	r3, r3, r4, lsl sl
   22514:	lsl	ip, r4, ip
   22518:	orr	r3, r3, r4, lsr fp
   2251c:	adc	r1, r1, r5
   22520:	subs	r0, r0, ip
   22524:	mov	r5, r2
   22528:	sbc	r1, r1, r3
   2252c:	cmp	lr, #0
   22530:	strdne	r4, [lr]
   22534:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22538:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2253c:	mov	r7, r0
   22540:	ldr	r6, [pc, #72]	; 22590 <__assert_fail@plt+0x10db8>
   22544:	ldr	r5, [pc, #72]	; 22594 <__assert_fail@plt+0x10dbc>
   22548:	add	r6, pc, r6
   2254c:	add	r5, pc, r5
   22550:	sub	r6, r6, r5
   22554:	mov	r8, r1
   22558:	mov	r9, r2
   2255c:	bl	113ec <fdopen@plt-0x20>
   22560:	asrs	r6, r6, #2
   22564:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   22568:	mov	r4, #0
   2256c:	add	r4, r4, #1
   22570:	ldr	r3, [r5], #4
   22574:	mov	r2, r9
   22578:	mov	r1, r8
   2257c:	mov	r0, r7
   22580:	blx	r3
   22584:	cmp	r6, r4
   22588:	bne	2256c <__assert_fail@plt+0x10d94>
   2258c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   22590:			; <UNDEFINED> instruction: 0x000129bc
   22594:			; <UNDEFINED> instruction: 0x000129b4
   22598:	bx	lr
   2259c:	ldr	r3, [pc, #12]	; 225b0 <__assert_fail@plt+0x10dd8>
   225a0:	mov	r1, #0
   225a4:	add	r3, pc, r3
   225a8:	ldr	r2, [r3]
   225ac:	b	1167c <__cxa_atexit@plt>
   225b0:			; <UNDEFINED> instruction: 0x00012bb0

Disassembly of section .fini:

000225b4 <.fini>:
   225b4:	push	{r3, lr}
   225b8:	pop	{r3, pc}
