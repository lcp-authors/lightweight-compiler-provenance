
../repos/charybdis/modules/core/.libs/m_error.so:     file format elf32-littlearm


Disassembly of section .init:

000005f0 <_init>:
 5f0:	push	{r3, lr}
 5f4:	bl	6a0 <call_weak_fn>
 5f8:	pop	{r3, pc}

Disassembly of section .plt:

000005fc <.plt>:
 5fc:	push	{lr}		; (str lr, [sp, #-4]!)
 600:	ldr	lr, [pc, #4]	; 60c <.plt+0x10>
 604:	add	lr, pc, lr
 608:	ldr	pc, [lr, #8]!
 60c:	.word	0x000109f4

00000610 <__cxa_finalize@plt>:
 610:	add	ip, pc, #0, 12
 614:	add	ip, ip, #16, 20	; 0x10000
 618:	ldr	pc, [ip, #2548]!	; 0x9f4

0000061c <rb_strncasecmp@plt>:
 61c:	add	ip, pc, #0, 12
 620:	add	ip, ip, #16, 20	; 0x10000
 624:	ldr	pc, [ip, #2540]!	; 0x9ec

00000628 <sendto_realops_snomask@plt>:
 628:	add	ip, pc, #0, 12
 62c:	add	ip, ip, #16, 20	; 0x10000
 630:	ldr	pc, [ip, #2532]!	; 0x9e4

00000634 <__gmon_start__@plt>:
 634:	add	ip, pc, #0, 12
 638:	add	ip, ip, #16, 20	; 0x10000
 63c:	ldr	pc, [ip, #2524]!	; 0x9dc

00000640 <strlen@plt>:
 640:	add	ip, pc, #0, 12
 644:	add	ip, ip, #16, 20	; 0x10000
 648:	ldr	pc, [ip, #2516]!	; 0x9d4

0000064c <strchr@plt>:
 64c:	add	ip, pc, #0, 12
 650:	add	ip, ip, #16, 20	; 0x10000
 654:	ldr	pc, [ip, #2508]!	; 0x9cc

00000658 <snprintf@plt>:
 658:	add	ip, pc, #0, 12
 65c:	add	ip, ip, #16, 20	; 0x10000
 660:	ldr	pc, [ip, #2500]!	; 0x9c4

00000664 <is_remote_connect@plt>:
 664:	add	ip, pc, #0, 12
 668:	add	ip, ip, #16, 20	; 0x10000
 66c:	ldr	pc, [ip, #2492]!	; 0x9bc

00000670 <ilog@plt>:
 670:	add	ip, pc, #0, 12
 674:	add	ip, ip, #16, 20	; 0x10000
 678:	ldr	pc, [ip, #2484]!	; 0x9b4

0000067c <log_client_name@plt>:
 67c:	add	ip, pc, #0, 12
 680:	add	ip, ip, #16, 20	; 0x10000
 684:	ldr	pc, [ip, #2476]!	; 0x9ac

00000688 <exit_client@plt>:
 688:	add	ip, pc, #0, 12
 68c:	add	ip, ip, #16, 20	; 0x10000
 690:	ldr	pc, [ip, #2468]!	; 0x9a4

00000694 <strncmp@plt>:
 694:	add	ip, pc, #0, 12
 698:	add	ip, ip, #16, 20	; 0x10000
 69c:	ldr	pc, [ip, #2460]!	; 0x99c

Disassembly of section .text:

000006a0 <call_weak_fn>:
 6a0:	ldr	r3, [pc, #20]	; 6bc <call_weak_fn+0x1c>
 6a4:	ldr	r2, [pc, #20]	; 6c0 <call_weak_fn+0x20>
 6a8:	add	r3, pc, r3
 6ac:	ldr	r2, [r3, r2]
 6b0:	cmp	r2, #0
 6b4:	bxeq	lr
 6b8:	b	634 <__gmon_start__@plt>
 6bc:	.word	0x00010950
 6c0:	.word	0x00000044

000006c4 <deregister_tm_clones>:
 6c4:	ldr	r0, [pc, #44]	; 6f8 <deregister_tm_clones+0x34>
 6c8:	ldr	r3, [pc, #44]	; 6fc <deregister_tm_clones+0x38>
 6cc:	add	r0, pc, r0
 6d0:	add	r3, pc, r3
 6d4:	cmp	r3, r0
 6d8:	ldr	r3, [pc, #32]	; 700 <deregister_tm_clones+0x3c>
 6dc:	add	r3, pc, r3
 6e0:	bxeq	lr
 6e4:	ldr	r2, [pc, #24]	; 704 <deregister_tm_clones+0x40>
 6e8:	ldr	r3, [r3, r2]
 6ec:	cmp	r3, #0
 6f0:	bxeq	lr
 6f4:	bx	r3
 6f8:	.word	0x000109f8
 6fc:	.word	0x000109f4
 700:	.word	0x0001091c
 704:	.word	0x00000040

00000708 <register_tm_clones>:
 708:	ldr	r0, [pc, #56]	; 748 <register_tm_clones+0x40>
 70c:	ldr	r3, [pc, #56]	; 74c <register_tm_clones+0x44>
 710:	add	r0, pc, r0
 714:	add	r3, pc, r3
 718:	sub	r1, r3, r0
 71c:	ldr	r3, [pc, #44]	; 750 <register_tm_clones+0x48>
 720:	asr	r1, r1, #2
 724:	add	r3, pc, r3
 728:	add	r1, r1, r1, lsr #31
 72c:	asrs	r1, r1, #1
 730:	bxeq	lr
 734:	ldr	r2, [pc, #24]	; 754 <register_tm_clones+0x4c>
 738:	ldr	r3, [r3, r2]
 73c:	cmp	r3, #0
 740:	bxeq	lr
 744:	bx	r3
 748:	.word	0x000109b4
 74c:	.word	0x000109b0
 750:	.word	0x000108d4
 754:	.word	0x00000048

00000758 <__do_global_dtors_aux>:
 758:	ldr	r3, [pc, #76]	; 7ac <__do_global_dtors_aux+0x54>
 75c:	ldr	r2, [pc, #76]	; 7b0 <__do_global_dtors_aux+0x58>
 760:	add	r3, pc, r3
 764:	add	r2, pc, r2
 768:	ldrb	r3, [r3]
 76c:	cmp	r3, #0
 770:	bxne	lr
 774:	ldr	r3, [pc, #56]	; 7b4 <__do_global_dtors_aux+0x5c>
 778:	push	{r4, lr}
 77c:	ldr	r3, [r2, r3]
 780:	cmp	r3, #0
 784:	beq	794 <__do_global_dtors_aux+0x3c>
 788:	ldr	r3, [pc, #40]	; 7b8 <__do_global_dtors_aux+0x60>
 78c:	ldr	r0, [pc, r3]
 790:	bl	610 <__cxa_finalize@plt>
 794:	bl	6c4 <deregister_tm_clones>
 798:	ldr	r3, [pc, #28]	; 7bc <__do_global_dtors_aux+0x64>
 79c:	mov	r2, #1
 7a0:	add	r3, pc, r3
 7a4:	strb	r2, [r3]
 7a8:	pop	{r4, pc}
 7ac:	.word	0x00010964
 7b0:	.word	0x00010894
 7b4:	.word	0x0000003c
 7b8:	.word	0x000108c0
 7bc:	.word	0x00010924

000007c0 <frame_dummy>:
 7c0:	b	708 <register_tm_clones>

000007c4 <m_error>:
 7c4:	push	{r4, r5, r6, r7, fp, lr}
 7c8:	add	fp, sp, #16
 7cc:	sub	sp, sp, #8
 7d0:	ldr	r0, [pc, #372]	; 94c <m_error+0x188>
 7d4:	mov	r4, r2
 7d8:	mov	r5, r1
 7dc:	cmp	r3, #2
 7e0:	ldr	r0, [pc, r0]
 7e4:	ldr	r7, [r0, #208]	; 0xd0
 7e8:	blt	8e4 <m_error+0x120>
 7ec:	ldr	r0, [fp, #8]
 7f0:	ldr	r0, [r0, #4]
 7f4:	ldrb	r1, [r0]
 7f8:	ldr	r6, [pc, #340]	; 954 <m_error+0x190>
 7fc:	cmp	r1, #0
 800:	add	r6, pc, r6
 804:	movne	r6, r0
 808:	ldrh	r0, [r5, #80]	; 0x50
 80c:	sub	r0, r0, #1
 810:	cmp	r0, #31
 814:	bhi	84c <m_error+0x88>
 818:	mov	r1, #1
 81c:	mov	r2, #-2147483645	; 0x80000003
 820:	tst	r2, r1, lsl r0
 824:	beq	84c <m_error+0x88>
 828:	mov	r0, r4
 82c:	mov	r1, #1
 830:	bl	67c <log_client_name@plt>
 834:	ldr	r1, [pc, #284]	; 958 <m_error+0x194>
 838:	mov	r2, r0
 83c:	mov	r0, #5
 840:	mov	r3, r6
 844:	add	r1, pc, r1
 848:	bl	670 <ilog@plt>
 84c:	mov	r0, r6
 850:	bl	a70 <is_safe_error>
 854:	cmp	r0, #0
 858:	ldrh	r0, [r5, #80]	; 0x50
 85c:	movwne	r7, #0
 860:	sub	r0, r0, #1
 864:	cmp	r0, #31
 868:	bhi	92c <m_error+0x168>
 86c:	mov	r1, #1
 870:	mov	r2, #-2147483645	; 0x80000003
 874:	tst	r2, r1, lsl r0
 878:	beq	92c <m_error+0x168>
 87c:	cmp	r7, #1
 880:	bgt	8b0 <m_error+0xec>
 884:	cmp	r7, #0
 888:	beq	900 <m_error+0x13c>
 88c:	str	r6, [sp]
 890:	add	r3, r5, #88	; 0x58
 894:	mov	r0, #256	; 0x100
 898:	mov	r1, #2
 89c:	ldr	r2, [pc, #188]	; 960 <m_error+0x19c>
 8a0:	add	r2, pc, r2
 8a4:	bl	628 <sendto_realops_snomask@plt>
 8a8:	cmp	r7, #1
 8ac:	blt	92c <m_error+0x168>
 8b0:	sub	r0, r7, #1
 8b4:	clz	r0, r0
 8b8:	lsr	r6, r0, #5
 8bc:	mov	r0, r5
 8c0:	bl	664 <is_remote_connect@plt>
 8c4:	ldr	r2, [pc, #152]	; 964 <m_error+0x1a0>
 8c8:	cmp	r0, #0
 8cc:	add	r3, r5, #88	; 0x58
 8d0:	mov	r0, #256	; 0x100
 8d4:	orrne	r6, r6, #256	; 0x100
 8d8:	mov	r1, r6
 8dc:	add	r2, pc, r2
 8e0:	b	928 <m_error+0x164>
 8e4:	ldr	r6, [pc, #100]	; 950 <m_error+0x18c>
 8e8:	add	r6, pc, r6
 8ec:	ldrh	r0, [r5, #80]	; 0x50
 8f0:	sub	r0, r0, #1
 8f4:	cmp	r0, #31
 8f8:	bls	818 <m_error+0x54>
 8fc:	b	84c <m_error+0x88>
 900:	mov	r0, r5
 904:	bl	664 <is_remote_connect@plt>
 908:	str	r6, [sp]
 90c:	cmp	r0, #0
 910:	add	r3, r5, #88	; 0x58
 914:	ldr	r2, [pc, #64]	; 95c <m_error+0x198>
 918:	movwne	r0, #1
 91c:	lsl	r1, r0, #8
 920:	mov	r0, #256	; 0x100
 924:	add	r2, pc, r2
 928:	bl	628 <sendto_realops_snomask@plt>
 92c:	ldr	r3, [pc, #52]	; 968 <m_error+0x1a4>
 930:	mov	r0, r5
 934:	mov	r1, r4
 938:	mov	r2, r4
 93c:	add	r3, pc, r3
 940:	sub	sp, fp, #16
 944:	pop	{r4, r5, r6, r7, fp, lr}
 948:	b	688 <exit_client@plt>
 94c:	.word	0x00010868
 950:	.word	0x000002c2
 954:	.word	0x000003aa
 958:	.word	0x00000369
 95c:	.word	0x000002ac
 960:	.word	0x00000330
 964:	.word	0x00000309
 968:	.word	0x00000268

0000096c <ms_error>:
 96c:	push	{r4, r5, r6, r7, fp, lr}
 970:	add	fp, sp, #16
 974:	sub	sp, sp, #8
 978:	ldr	r0, [pc, #216]	; a58 <ms_error+0xec>
 97c:	mov	r5, r2
 980:	mov	r4, r1
 984:	cmp	r3, #2
 988:	ldr	r0, [pc, r0]
 98c:	ldr	r7, [r0, #208]	; 0xd0
 990:	blt	9b4 <ms_error+0x48>
 994:	ldr	r0, [fp, #8]
 998:	ldr	r0, [r0, #4]
 99c:	ldrb	r1, [r0]
 9a0:	ldr	r6, [pc, #184]	; a60 <ms_error+0xf4>
 9a4:	cmp	r1, #0
 9a8:	add	r6, pc, r6
 9ac:	movne	r6, r0
 9b0:	b	9bc <ms_error+0x50>
 9b4:	ldr	r6, [pc, #160]	; a5c <ms_error+0xf0>
 9b8:	add	r6, pc, r6
 9bc:	mov	r0, r5
 9c0:	mov	r1, #1
 9c4:	bl	67c <log_client_name@plt>
 9c8:	ldr	r1, [pc, #148]	; a64 <ms_error+0xf8>
 9cc:	mov	r2, r0
 9d0:	mov	r0, #5
 9d4:	mov	r3, r6
 9d8:	add	r1, pc, r1
 9dc:	bl	670 <ilog@plt>
 9e0:	mov	r0, r6
 9e4:	bl	a70 <is_safe_error>
 9e8:	cmp	r0, #0
 9ec:	movwne	r7, #0
 9f0:	cmp	r7, #2
 9f4:	bne	a00 <ms_error+0x94>
 9f8:	sub	sp, fp, #16
 9fc:	pop	{r4, r5, r6, r7, fp, pc}
 a00:	cmp	r7, #0
 a04:	movwne	r7, #1
 a08:	cmp	r4, r5
 a0c:	lsl	r1, r7, #1
 a10:	beq	a38 <ms_error+0xcc>
 a14:	add	r0, r4, #88	; 0x58
 a18:	add	r3, r5, #88	; 0x58
 a1c:	stm	sp, {r0, r6}
 a20:	ldr	r2, [pc, #68]	; a6c <ms_error+0x100>
 a24:	add	r2, pc, r2
 a28:	mov	r0, #256	; 0x100
 a2c:	bl	628 <sendto_realops_snomask@plt>
 a30:	sub	sp, fp, #16
 a34:	pop	{r4, r5, r6, r7, fp, pc}
 a38:	str	r6, [sp]
 a3c:	add	r3, r4, #88	; 0x58
 a40:	ldr	r2, [pc, #32]	; a68 <ms_error+0xfc>
 a44:	add	r2, pc, r2
 a48:	mov	r0, #256	; 0x100
 a4c:	bl	628 <sendto_realops_snomask@plt>
 a50:	sub	sp, fp, #16
 a54:	pop	{r4, r5, r6, r7, fp, pc}
 a58:	.word	0x000106c0
 a5c:	.word	0x000001f2
 a60:	.word	0x00000202
 a64:	.word	0x000001d5
 a68:	.word	0x0000018c
 a6c:	.word	0x0000023b

00000a70 <is_safe_error>:
 a70:	push	{r4, r5, r6, sl, fp, lr}
 a74:	add	fp, sp, #16
 a78:	sub	sp, sp, #104	; 0x68
 a7c:	ldr	r1, [pc, #264]	; b8c <is_safe_error+0x11c>
 a80:	mov	r2, #25
 a84:	mov	r4, r0
 a88:	add	r1, pc, r1
 a8c:	bl	694 <strncmp@plt>
 a90:	mov	r5, #1
 a94:	cmp	r0, #0
 a98:	beq	b80 <is_safe_error+0x110>
 a9c:	ldr	r0, [pc, #236]	; b90 <is_safe_error+0x120>
 aa0:	add	r6, sp, #4
 aa4:	mov	r1, #100	; 0x64
 aa8:	ldr	r0, [pc, r0]
 aac:	ldr	r2, [pc, #224]	; b94 <is_safe_error+0x124>
 ab0:	add	r3, r0, #88	; 0x58
 ab4:	add	r2, pc, r2
 ab8:	mov	r0, r6
 abc:	bl	658 <snprintf@plt>
 ac0:	mov	r0, r6
 ac4:	bl	640 <strlen@plt>
 ac8:	mov	r2, r0
 acc:	mov	r0, r4
 ad0:	mov	r1, r6
 ad4:	bl	694 <strncmp@plt>
 ad8:	cmp	r0, #0
 adc:	beq	b80 <is_safe_error+0x110>
 ae0:	ldr	r1, [pc, #176]	; b98 <is_safe_error+0x128>
 ae4:	mov	r0, r4
 ae8:	mov	r2, #11
 aec:	add	r1, pc, r1
 af0:	bl	694 <strncmp@plt>
 af4:	cmp	r0, #0
 af8:	beq	b80 <is_safe_error+0x110>
 afc:	ldr	r1, [pc, #152]	; b9c <is_safe_error+0x12c>
 b00:	mov	r0, r4
 b04:	mov	r2, #14
 b08:	add	r1, pc, r1
 b0c:	bl	694 <strncmp@plt>
 b10:	cmp	r0, #0
 b14:	beq	b80 <is_safe_error+0x110>
 b18:	ldr	r1, [pc, #128]	; ba0 <is_safe_error+0x130>
 b1c:	mov	r0, r4
 b20:	mov	r2, #12
 b24:	add	r1, pc, r1
 b28:	bl	61c <rb_strncasecmp@plt>
 b2c:	mov	r5, #0
 b30:	cmp	r0, #0
 b34:	beq	b80 <is_safe_error+0x110>
 b38:	mov	r0, r4
 b3c:	mov	r1, #91	; 0x5b
 b40:	bl	64c <strchr@plt>
 b44:	cmp	r0, #0
 b48:	bne	b80 <is_safe_error+0x110>
 b4c:	mov	r0, r4
 b50:	mov	r1, #46	; 0x2e
 b54:	bl	64c <strchr@plt>
 b58:	cmp	r0, #0
 b5c:	beq	b6c <is_safe_error+0xfc>
 b60:	ldrb	r0, [r0, #1]
 b64:	cmp	r0, #0
 b68:	bne	b80 <is_safe_error+0x110>
 b6c:	mov	r0, r4
 b70:	mov	r1, #58	; 0x3a
 b74:	bl	64c <strchr@plt>
 b78:	clz	r0, r0
 b7c:	lsr	r5, r0, #5
 b80:	mov	r0, r5
 b84:	sub	sp, fp, #16
 b88:	pop	{r4, r5, r6, sl, fp, pc}
 b8c:	.word	0x00000178
 b90:	.word	0x0001059c
 b94:	.word	0x00000166
 b98:	.word	0x0000014b
 b9c:	.word	0x0000013b
 ba0:	.word	0x0000012e

Disassembly of section .fini:

00000ba4 <_fini>:
 ba4:	push	{r3, lr}
 ba8:	pop	{r3, pc}
