
../repos/inetutils/src/inetd:     file format elf32-littlearm


Disassembly of section .init:

00011704 <.init>:
   11704:	push	{r3, lr}
   11708:	bl	1251c <__assert_fail@plt+0x8f4>
   1170c:	pop	{r3, pc}

Disassembly of section .plt:

00011710 <calloc@plt-0x14>:
   11710:	push	{lr}		; (str lr, [sp, #-4]!)
   11714:	ldr	lr, [pc, #4]	; 11720 <calloc@plt-0x4>
   11718:	add	lr, pc, lr
   1171c:	ldr	pc, [lr, #8]!
   11720:	andeq	pc, r1, r0, ror #17

00011724 <calloc@plt>:
   11724:	add	ip, pc, #0, 12
   11728:	add	ip, ip, #126976	; 0x1f000
   1172c:	ldr	pc, [ip, #2272]!	; 0x8e0

00011730 <fputs_unlocked@plt>:
   11730:	add	ip, pc, #0, 12
   11734:	add	ip, ip, #126976	; 0x1f000
   11738:	ldr	pc, [ip, #2264]!	; 0x8d8

0001173c <__getdelim@plt>:
   1173c:	add	ip, pc, #0, 12
   11740:	add	ip, ip, #126976	; 0x1f000
   11744:	ldr	pc, [ip, #2256]!	; 0x8d0

00011748 <getpwnam@plt>:
   11748:	add	ip, pc, #0, 12
   1174c:	add	ip, ip, #126976	; 0x1f000
   11750:	ldr	pc, [ip, #2248]!	; 0x8c8

00011754 <strcmp@plt>:
   11754:	add	ip, pc, #0, 12
   11758:	add	ip, ip, #126976	; 0x1f000
   1175c:	ldr	pc, [ip, #2240]!	; 0x8c0

00011760 <strtol@plt>:
   11760:	add	ip, pc, #0, 12
   11764:	add	ip, ip, #126976	; 0x1f000
   11768:	ldr	pc, [ip, #2232]!	; 0x8b8

0001176c <setsockopt@plt>:
   1176c:	add	ip, pc, #0, 12
   11770:	add	ip, ip, #126976	; 0x1f000
   11774:	ldr	pc, [ip, #2224]!	; 0x8b0

00011778 <strcspn@plt>:
   11778:	add	ip, pc, #0, 12
   1177c:	add	ip, ip, #126976	; 0x1f000
   11780:	ldr	pc, [ip, #2216]!	; 0x8a8

00011784 <pause@plt>:
   11784:	add	ip, pc, #0, 12
   11788:	add	ip, ip, #126976	; 0x1f000
   1178c:	ldr	pc, [ip, #2208]!	; 0x8a0

00011790 <printf@plt>:
   11790:	add	ip, pc, #0, 12
   11794:	add	ip, ip, #126976	; 0x1f000
   11798:	ldr	pc, [ip, #2200]!	; 0x898

0001179c <read@plt>:
   1179c:	add	ip, pc, #0, 12
   117a0:	add	ip, ip, #126976	; 0x1f000
   117a4:	ldr	pc, [ip, #2192]!	; 0x890

000117a8 <getprotobyname@plt>:
   117a8:	add	ip, pc, #0, 12
   117ac:	add	ip, ip, #126976	; 0x1f000
   117b0:	ldr	pc, [ip, #2184]!	; 0x888

000117b4 <sigprocmask@plt>:
   117b4:	add	ip, pc, #0, 12
   117b8:	add	ip, ip, #126976	; 0x1f000
   117bc:	ldr	pc, [ip, #2176]!	; 0x880

000117c0 <memmove@plt>:
   117c0:	add	ip, pc, #0, 12
   117c4:	add	ip, ip, #126976	; 0x1f000
   117c8:	ldr	pc, [ip, #2168]!	; 0x878

000117cc <strchrnul@plt>:
   117cc:	add	ip, pc, #0, 12
   117d0:	add	ip, ip, #126976	; 0x1f000
   117d4:	ldr	pc, [ip, #2160]!	; 0x870

000117d8 <free@plt>:
   117d8:	add	ip, pc, #0, 12
   117dc:	add	ip, ip, #126976	; 0x1f000
   117e0:	ldr	pc, [ip, #2152]!	; 0x868

000117e4 <gai_strerror@plt>:
   117e4:	add	ip, pc, #0, 12
   117e8:	add	ip, ip, #126976	; 0x1f000
   117ec:	ldr	pc, [ip, #2144]!	; 0x860

000117f0 <strndup@plt>:
   117f0:	add	ip, pc, #0, 12
   117f4:	add	ip, ip, #126976	; 0x1f000
   117f8:	ldr	pc, [ip, #2136]!	; 0x858

000117fc <_exit@plt>:
   117fc:	add	ip, pc, #0, 12
   11800:	add	ip, ip, #126976	; 0x1f000
   11804:	ldr	pc, [ip, #2128]!	; 0x850

00011808 <memcpy@plt>:
   11808:	add	ip, pc, #0, 12
   1180c:	add	ip, ip, #126976	; 0x1f000
   11810:	ldr	pc, [ip, #2120]!	; 0x848

00011814 <signal@plt>:
   11814:	add	ip, pc, #0, 12
   11818:	add	ip, ip, #126976	; 0x1f000
   1181c:	ldr	pc, [ip, #2112]!	; 0x840

00011820 <time@plt>:
   11820:	add	ip, pc, #0, 12
   11824:	add	ip, ip, #126976	; 0x1f000
   11828:	ldr	pc, [ip, #2104]!	; 0x838

0001182c <fwrite_unlocked@plt>:
   1182c:	add	ip, pc, #0, 12
   11830:	add	ip, ip, #126976	; 0x1f000
   11834:	ldr	pc, [ip, #2096]!	; 0x830

00011838 <memcmp@plt>:
   11838:	add	ip, pc, #0, 12
   1183c:	add	ip, ip, #126976	; 0x1f000
   11840:	ldr	pc, [ip, #2088]!	; 0x828

00011844 <select@plt>:
   11844:	add	ip, pc, #0, 12
   11848:	add	ip, ip, #126976	; 0x1f000
   1184c:	ldr	pc, [ip, #2080]!	; 0x820

00011850 <sleep@plt>:
   11850:	add	ip, pc, #0, 12
   11854:	add	ip, ip, #126976	; 0x1f000
   11858:	ldr	pc, [ip, #2072]!	; 0x818

0001185c <ctime@plt>:
   1185c:	add	ip, pc, #0, 12
   11860:	add	ip, ip, #126976	; 0x1f000
   11864:	ldr	pc, [ip, #2064]!	; 0x810

00011868 <recvfrom@plt>:
   11868:	add	ip, pc, #0, 12
   1186c:	add	ip, ip, #126976	; 0x1f000
   11870:	ldr	pc, [ip, #2056]!	; 0x808

00011874 <strdup@plt>:
   11874:	add	ip, pc, #0, 12
   11878:	add	ip, ip, #126976	; 0x1f000
   1187c:	ldr	pc, [ip, #2048]!	; 0x800

00011880 <alarm@plt>:
   11880:	add	ip, pc, #0, 12
   11884:	add	ip, ip, #126976	; 0x1f000
   11888:	ldr	pc, [ip, #2040]!	; 0x7f8

0001188c <sysconf@plt>:
   1188c:	add	ip, pc, #0, 12
   11890:	add	ip, ip, #126976	; 0x1f000
   11894:	ldr	pc, [ip, #2032]!	; 0x7f0

00011898 <dup2@plt>:
   11898:	add	ip, pc, #0, 12
   1189c:	add	ip, ip, #126976	; 0x1f000
   118a0:	ldr	pc, [ip, #2024]!	; 0x7e8

000118a4 <realloc@plt>:
   118a4:	add	ip, pc, #0, 12
   118a8:	add	ip, ip, #126976	; 0x1f000
   118ac:	ldr	pc, [ip, #2016]!	; 0x7e0

000118b0 <initgroups@plt>:
   118b0:	add	ip, pc, #0, 12
   118b4:	add	ip, ip, #126976	; 0x1f000
   118b8:	ldr	pc, [ip, #2008]!	; 0x7d8

000118bc <chdir@plt>:
   118bc:	add	ip, pc, #0, 12
   118c0:	add	ip, ip, #126976	; 0x1f000
   118c4:	ldr	pc, [ip, #2000]!	; 0x7d0

000118c8 <strcasecmp@plt>:
   118c8:	add	ip, pc, #0, 12
   118cc:	add	ip, ip, #126976	; 0x1f000
   118d0:	ldr	pc, [ip, #1992]!	; 0x7c8

000118d4 <funlockfile@plt>:
   118d4:	add	ip, pc, #0, 12
   118d8:	add	ip, ip, #126976	; 0x1f000
   118dc:	ldr	pc, [ip, #1984]!	; 0x7c0

000118e0 <accept@plt>:
   118e0:	add	ip, pc, #0, 12
   118e4:	add	ip, ip, #126976	; 0x1f000
   118e8:	ldr	pc, [ip, #1976]!	; 0x7b8

000118ec <sigaction@plt>:
   118ec:	add	ip, pc, #0, 12
   118f0:	add	ip, ip, #126976	; 0x1f000
   118f4:	ldr	pc, [ip, #1968]!	; 0x7b0

000118f8 <fwrite@plt>:
   118f8:	add	ip, pc, #0, 12
   118fc:	add	ip, ip, #126976	; 0x1f000
   11900:	ldr	pc, [ip, #1960]!	; 0x7a8

00011904 <strcat@plt>:
   11904:	add	ip, pc, #0, 12
   11908:	add	ip, ip, #126976	; 0x1f000
   1190c:	ldr	pc, [ip, #1952]!	; 0x7a0

00011910 <gettimeofday@plt>:
   11910:	add	ip, pc, #0, 12
   11914:	add	ip, ip, #126976	; 0x1f000
   11918:	ldr	pc, [ip, #1944]!	; 0x798

0001191c <error@plt>:
   1191c:	add	ip, pc, #0, 12
   11920:	add	ip, ip, #126976	; 0x1f000
   11924:	ldr	pc, [ip, #1936]!	; 0x790

00011928 <opendir@plt>:
   11928:	add	ip, pc, #0, 12
   1192c:	add	ip, ip, #126976	; 0x1f000
   11930:	ldr	pc, [ip, #1928]!	; 0x788

00011934 <open64@plt>:
   11934:	add	ip, pc, #0, 12
   11938:	add	ip, ip, #126976	; 0x1f000
   1193c:	ldr	pc, [ip, #1920]!	; 0x780

00011940 <getenv@plt>:
   11940:	add	ip, pc, #0, 12
   11944:	add	ip, ip, #126976	; 0x1f000
   11948:	ldr	pc, [ip, #1912]!	; 0x778

0001194c <setgid@plt>:
   1194c:	add	ip, pc, #0, 12
   11950:	add	ip, ip, #126976	; 0x1f000
   11954:	ldr	pc, [ip, #1904]!	; 0x770

00011958 <malloc@plt>:
   11958:	add	ip, pc, #0, 12
   1195c:	add	ip, ip, #126976	; 0x1f000
   11960:	ldr	pc, [ip, #1896]!	; 0x768

00011964 <sigaddset@plt>:
   11964:	add	ip, pc, #0, 12
   11968:	add	ip, ip, #126976	; 0x1f000
   1196c:	ldr	pc, [ip, #1888]!	; 0x760

00011970 <__libc_start_main@plt>:
   11970:	add	ip, pc, #0, 12
   11974:	add	ip, ip, #126976	; 0x1f000
   11978:	ldr	pc, [ip, #1880]!	; 0x758

0001197c <strerror@plt>:
   1197c:	add	ip, pc, #0, 12
   11980:	add	ip, ip, #126976	; 0x1f000
   11984:	ldr	pc, [ip, #1872]!	; 0x750

00011988 <__ctype_tolower_loc@plt>:
   11988:	add	ip, pc, #0, 12
   1198c:	add	ip, ip, #126976	; 0x1f000
   11990:	ldr	pc, [ip, #1864]!	; 0x748

00011994 <__gmon_start__@plt>:
   11994:	add	ip, pc, #0, 12
   11998:	add	ip, ip, #126976	; 0x1f000
   1199c:	ldr	pc, [ip, #1856]!	; 0x740

000119a0 <mempcpy@plt>:
   119a0:	add	ip, pc, #0, 12
   119a4:	add	ip, ip, #126976	; 0x1f000
   119a8:	ldr	pc, [ip, #1848]!	; 0x738

000119ac <__ctype_b_loc@plt>:
   119ac:	add	ip, pc, #0, 12
   119b0:	add	ip, ip, #126976	; 0x1f000
   119b4:	ldr	pc, [ip, #1840]!	; 0x730

000119b8 <getpid@plt>:
   119b8:	add	ip, pc, #0, 12
   119bc:	add	ip, ip, #126976	; 0x1f000
   119c0:	ldr	pc, [ip, #1832]!	; 0x728

000119c4 <exit@plt>:
   119c4:	add	ip, pc, #0, 12
   119c8:	add	ip, ip, #126976	; 0x1f000
   119cc:	ldr	pc, [ip, #1824]!	; 0x720

000119d0 <strtoul@plt>:
   119d0:	add	ip, pc, #0, 12
   119d4:	add	ip, ip, #126976	; 0x1f000
   119d8:	ldr	pc, [ip, #1816]!	; 0x718

000119dc <strlen@plt>:
   119dc:	add	ip, pc, #0, 12
   119e0:	add	ip, ip, #126976	; 0x1f000
   119e4:	ldr	pc, [ip, #1808]!	; 0x710

000119e8 <setsid@plt>:
   119e8:	add	ip, pc, #0, 12
   119ec:	add	ip, ip, #126976	; 0x1f000
   119f0:	ldr	pc, [ip, #1800]!	; 0x708

000119f4 <strchr@plt>:
   119f4:	add	ip, pc, #0, 12
   119f8:	add	ip, ip, #126976	; 0x1f000
   119fc:	ldr	pc, [ip, #1792]!	; 0x700

00011a00 <setenv@plt>:
   11a00:	add	ip, pc, #0, 12
   11a04:	add	ip, ip, #126976	; 0x1f000
   11a08:	ldr	pc, [ip, #1784]!	; 0x6f8

00011a0c <fprintf@plt>:
   11a0c:	add	ip, pc, #0, 12
   11a10:	add	ip, ip, #126976	; 0x1f000
   11a14:	ldr	pc, [ip, #1776]!	; 0x6f0

00011a18 <execv@plt>:
   11a18:	add	ip, pc, #0, 12
   11a1c:	add	ip, ip, #126976	; 0x1f000
   11a20:	ldr	pc, [ip, #1768]!	; 0x6e8

00011a24 <__errno_location@plt>:
   11a24:	add	ip, pc, #0, 12
   11a28:	add	ip, ip, #126976	; 0x1f000
   11a2c:	ldr	pc, [ip, #1760]!	; 0x6e0

00011a30 <snprintf@plt>:
   11a30:	add	ip, pc, #0, 12
   11a34:	add	ip, ip, #126976	; 0x1f000
   11a38:	ldr	pc, [ip, #1752]!	; 0x6d8

00011a3c <strerror_r@plt>:
   11a3c:	add	ip, pc, #0, 12
   11a40:	add	ip, ip, #126976	; 0x1f000
   11a44:	ldr	pc, [ip, #1744]!	; 0x6d0

00011a48 <bind@plt>:
   11a48:	add	ip, pc, #0, 12
   11a4c:	add	ip, ip, #126976	; 0x1f000
   11a50:	ldr	pc, [ip, #1736]!	; 0x6c8

00011a54 <memset@plt>:
   11a54:	add	ip, pc, #0, 12
   11a58:	add	ip, ip, #126976	; 0x1f000
   11a5c:	ldr	pc, [ip, #1728]!	; 0x6c0

00011a60 <strncpy@plt>:
   11a60:	add	ip, pc, #0, 12
   11a64:	add	ip, ip, #126976	; 0x1f000
   11a68:	ldr	pc, [ip, #1720]!	; 0x6b8

00011a6c <sigsuspend@plt>:
   11a6c:	add	ip, pc, #0, 12
   11a70:	add	ip, ip, #126976	; 0x1f000
   11a74:	ldr	pc, [ip, #1712]!	; 0x6b0

00011a78 <wait3@plt>:
   11a78:	add	ip, pc, #0, 12
   11a7c:	add	ip, ip, #126976	; 0x1f000
   11a80:	ldr	pc, [ip, #1704]!	; 0x6a8

00011a84 <write@plt>:
   11a84:	add	ip, pc, #0, 12
   11a88:	add	ip, ip, #126976	; 0x1f000
   11a8c:	ldr	pc, [ip, #1696]!	; 0x6a0

00011a90 <memchr@plt>:
   11a90:	add	ip, pc, #0, 12
   11a94:	add	ip, ip, #126976	; 0x1f000
   11a98:	ldr	pc, [ip, #1688]!	; 0x698

00011a9c <fclose@plt>:
   11a9c:	add	ip, pc, #0, 12
   11aa0:	add	ip, ip, #126976	; 0x1f000
   11aa4:	ldr	pc, [ip, #1680]!	; 0x690

00011aa8 <sendto@plt>:
   11aa8:	add	ip, pc, #0, 12
   11aac:	add	ip, ip, #126976	; 0x1f000
   11ab0:	ldr	pc, [ip, #1672]!	; 0x688

00011ab4 <__overflow@plt>:
   11ab4:	add	ip, pc, #0, 12
   11ab8:	add	ip, ip, #126976	; 0x1f000
   11abc:	ldr	pc, [ip, #1664]!	; 0x680

00011ac0 <sigemptyset@plt>:
   11ac0:	add	ip, pc, #0, 12
   11ac4:	add	ip, ip, #126976	; 0x1f000
   11ac8:	ldr	pc, [ip, #1656]!	; 0x678

00011acc <fork@plt>:
   11acc:	add	ip, pc, #0, 12
   11ad0:	add	ip, ip, #126976	; 0x1f000
   11ad4:	ldr	pc, [ip, #1648]!	; 0x670

00011ad8 <getnameinfo@plt>:
   11ad8:	add	ip, pc, #0, 12
   11adc:	add	ip, ip, #126976	; 0x1f000
   11ae0:	ldr	pc, [ip, #1640]!	; 0x668

00011ae4 <strrchr@plt>:
   11ae4:	add	ip, pc, #0, 12
   11ae8:	add	ip, ip, #126976	; 0x1f000
   11aec:	ldr	pc, [ip, #1632]!	; 0x660

00011af0 <listen@plt>:
   11af0:	add	ip, pc, #0, 12
   11af4:	add	ip, ip, #126976	; 0x1f000
   11af8:	ldr	pc, [ip, #1624]!	; 0x658

00011afc <vfprintf@plt>:
   11afc:	add	ip, pc, #0, 12
   11b00:	add	ip, ip, #126976	; 0x1f000
   11b04:	ldr	pc, [ip, #1616]!	; 0x650

00011b08 <fputc@plt>:
   11b08:	add	ip, pc, #0, 12
   11b0c:	add	ip, ip, #126976	; 0x1f000
   11b10:	ldr	pc, [ip, #1608]!	; 0x648

00011b14 <syslog@plt>:
   11b14:	add	ip, pc, #0, 12
   11b18:	add	ip, ip, #126976	; 0x1f000
   11b1c:	ldr	pc, [ip, #1600]!	; 0x640

00011b20 <setuid@plt>:
   11b20:	add	ip, pc, #0, 12
   11b24:	add	ip, ip, #126976	; 0x1f000
   11b28:	ldr	pc, [ip, #1592]!	; 0x638

00011b2c <sprintf@plt>:
   11b2c:	add	ip, pc, #0, 12
   11b30:	add	ip, ip, #126976	; 0x1f000
   11b34:	ldr	pc, [ip, #1584]!	; 0x630

00011b38 <readdir64@plt>:
   11b38:	add	ip, pc, #0, 12
   11b3c:	add	ip, ip, #126976	; 0x1f000
   11b40:	ldr	pc, [ip, #1576]!	; 0x628

00011b44 <openlog@plt>:
   11b44:	add	ip, pc, #0, 12
   11b48:	add	ip, ip, #126976	; 0x1f000
   11b4c:	ldr	pc, [ip, #1568]!	; 0x620

00011b50 <getsockname@plt>:
   11b50:	add	ip, pc, #0, 12
   11b54:	add	ip, ip, #126976	; 0x1f000
   11b58:	ldr	pc, [ip, #1560]!	; 0x618

00011b5c <flockfile@plt>:
   11b5c:	add	ip, pc, #0, 12
   11b60:	add	ip, ip, #126976	; 0x1f000
   11b64:	ldr	pc, [ip, #1552]!	; 0x610

00011b68 <vsnprintf@plt>:
   11b68:	add	ip, pc, #0, 12
   11b6c:	add	ip, ip, #126976	; 0x1f000
   11b70:	ldr	pc, [ip, #1544]!	; 0x608

00011b74 <fopen64@plt>:
   11b74:	add	ip, pc, #0, 12
   11b78:	add	ip, ip, #126976	; 0x1f000
   11b7c:	ldr	pc, [ip, #1536]!	; 0x600

00011b80 <qsort@plt>:
   11b80:	add	ip, pc, #0, 12
   11b84:	add	ip, ip, #126976	; 0x1f000
   11b88:	ldr	pc, [ip, #1528]!	; 0x5f8

00011b8c <getpeername@plt>:
   11b8c:	add	ip, pc, #0, 12
   11b90:	add	ip, ip, #126976	; 0x1f000
   11b94:	ldr	pc, [ip, #1520]!	; 0x5f0

00011b98 <freeaddrinfo@plt>:
   11b98:	add	ip, pc, #0, 12
   11b9c:	add	ip, ip, #126976	; 0x1f000
   11ba0:	ldr	pc, [ip, #1512]!	; 0x5e8

00011ba4 <getaddrinfo@plt>:
   11ba4:	add	ip, pc, #0, 12
   11ba8:	add	ip, ip, #126976	; 0x1f000
   11bac:	ldr	pc, [ip, #1504]!	; 0x5e0

00011bb0 <socket@plt>:
   11bb0:	add	ip, pc, #0, 12
   11bb4:	add	ip, ip, #126976	; 0x1f000
   11bb8:	ldr	pc, [ip, #1496]!	; 0x5d8

00011bbc <__xstat64@plt>:
   11bbc:	add	ip, pc, #0, 12
   11bc0:	add	ip, ip, #126976	; 0x1f000
   11bc4:	ldr	pc, [ip, #1488]!	; 0x5d0

00011bc8 <unsetenv@plt>:
   11bc8:	add	ip, pc, #0, 12
   11bcc:	add	ip, ip, #126976	; 0x1f000
   11bd0:	ldr	pc, [ip, #1480]!	; 0x5c8

00011bd4 <strncmp@plt>:
   11bd4:	add	ip, pc, #0, 12
   11bd8:	add	ip, ip, #126976	; 0x1f000
   11bdc:	ldr	pc, [ip, #1472]!	; 0x5c0

00011be0 <abort@plt>:
   11be0:	add	ip, pc, #0, 12
   11be4:	add	ip, ip, #126976	; 0x1f000
   11be8:	ldr	pc, [ip, #1464]!	; 0x5b8

00011bec <recv@plt>:
   11bec:	add	ip, pc, #0, 12
   11bf0:	add	ip, ip, #126976	; 0x1f000
   11bf4:	ldr	pc, [ip, #1456]!	; 0x5b0

00011bf8 <close@plt>:
   11bf8:	add	ip, pc, #0, 12
   11bfc:	add	ip, ip, #126976	; 0x1f000
   11c00:	ldr	pc, [ip, #1448]!	; 0x5a8

00011c04 <closedir@plt>:
   11c04:	add	ip, pc, #0, 12
   11c08:	add	ip, ip, #126976	; 0x1f000
   11c0c:	ldr	pc, [ip, #1440]!	; 0x5a0

00011c10 <getgrnam@plt>:
   11c10:	add	ip, pc, #0, 12
   11c14:	add	ip, ip, #126976	; 0x1f000
   11c18:	ldr	pc, [ip, #1432]!	; 0x598

00011c1c <strspn@plt>:
   11c1c:	add	ip, pc, #0, 12
   11c20:	add	ip, ip, #126976	; 0x1f000
   11c24:	ldr	pc, [ip, #1424]!	; 0x590

00011c28 <__assert_fail@plt>:
   11c28:	add	ip, pc, #0, 12
   11c2c:	add	ip, ip, #126976	; 0x1f000
   11c30:	ldr	pc, [ip, #1416]!	; 0x588

Disassembly of section .text:

00011c34 <daemon@@Base-0x4460>:
   11c34:	mov	r0, #3
   11c38:	push	{r4, lr}
   11c3c:	ldr	r1, [pc, #8]	; 11c4c <__assert_fail@plt+0x24>
   11c40:	bl	11b14 <syslog@plt>
   11c44:	mvn	r0, #0
   11c48:	bl	119c4 <exit@plt>
   11c4c:	andeq	pc, r1, r0, ror r3	; <UNPREDICTABLE>
   11c50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c54:	mov	r6, r0
   11c58:	sub	sp, sp, #284	; 0x11c
   11c5c:	ldr	r0, [r1]
   11c60:	mov	r5, r1
   11c64:	mov	r4, r2
   11c68:	bl	17dac <argp_parse@@Base+0x1084>
   11c6c:	ldr	r3, [pc, #2020]	; 12458 <__assert_fail@plt+0x830>
   11c70:	cmp	r4, #0
   11c74:	str	r5, [r3]
   11c78:	beq	12330 <__assert_fail@plt+0x708>
   11c7c:	ldr	r3, [r4]
   11c80:	cmp	r3, #0
   11c84:	beq	12330 <__assert_fail@plt+0x708>
   11c88:	ldr	r3, [r4, #4]!
   11c8c:	cmp	r3, #0
   11c90:	bne	11c88 <__assert_fail@plt+0x60>
   11c94:	ldr	r4, [r4, #-4]
   11c98:	ldr	r8, [pc, #1980]	; 1245c <__assert_fail@plt+0x834>
   11c9c:	mov	r0, r4
   11ca0:	bl	119dc <strlen@plt>
   11ca4:	ldr	r3, [pc, #1972]	; 12460 <__assert_fail@plt+0x838>
   11ca8:	ldr	r2, [pc, #1972]	; 12464 <__assert_fail@plt+0x83c>
   11cac:	ldr	ip, [pc, #1972]	; 12468 <__assert_fail@plt+0x840>
   11cb0:	ldr	r1, [pc, #1972]	; 1246c <__assert_fail@plt+0x844>
   11cb4:	str	ip, [r2]
   11cb8:	add	r4, r4, r0
   11cbc:	ldr	r0, [pc, #1964]	; 12470 <__assert_fail@plt+0x848>
   11cc0:	str	r4, [r3]
   11cc4:	bl	17bd0 <argp_parse@@Base+0xea8>
   11cc8:	mov	r3, #0
   11ccc:	add	r2, sp, #12
   11cd0:	mov	r1, r6
   11cd4:	stm	sp, {r2, r3}
   11cd8:	ldr	r0, [pc, #1940]	; 12474 <__assert_fail@plt+0x84c>
   11cdc:	mov	r2, r5
   11ce0:	bl	16d28 <argp_parse@@Base>
   11ce4:	ldrb	r3, [r8, #2]
   11ce8:	cmp	r3, #0
   11cec:	movne	r3, #1
   11cf0:	strbne	r3, [r8, #1]
   11cf4:	ldr	r3, [sp, #12]
   11cf8:	cmp	r6, r3
   11cfc:	ble	121bc <__assert_fail@plt+0x594>
   11d00:	sub	r3, r6, r3
   11d04:	add	r0, r3, #1
   11d08:	mov	r1, #4
   11d0c:	bl	18b98 <argp_parse@@Base+0x1e70>
   11d10:	ldr	r2, [pc, #1888]	; 12478 <__assert_fail@plt+0x850>
   11d14:	ldr	r3, [sp, #12]
   11d18:	cmp	r6, r3
   11d1c:	str	r0, [r2]
   11d20:	ble	11d48 <__assert_fail@plt+0x120>
   11d24:	sub	r4, r0, #4
   11d28:	ldr	r0, [r5, r3, lsl #2]
   11d2c:	bl	11874 <strdup@plt>
   11d30:	ldr	r3, [sp, #12]
   11d34:	add	r3, r3, #1
   11d38:	cmp	r6, r3
   11d3c:	str	r3, [sp, #12]
   11d40:	str	r0, [r4, #4]!
   11d44:	bgt	11d28 <__assert_fail@plt+0x100>
   11d48:	ldrb	r1, [r8]
   11d4c:	cmp	r1, #0
   11d50:	beq	12200 <__assert_fail@plt+0x5d8>
   11d54:	mov	r2, #24
   11d58:	mov	r1, #17
   11d5c:	ldr	r0, [pc, #1804]	; 12470 <__assert_fail@plt+0x848>
   11d60:	bl	11b44 <openlog@plt>
   11d64:	ldr	r3, [pc, #1808]	; 1247c <__assert_fail@plt+0x854>
   11d68:	ldrb	r3, [r3, #4]
   11d6c:	cmp	r3, #0
   11d70:	bne	12364 <__assert_fail@plt+0x73c>
   11d74:	ldr	r1, [pc, #1796]	; 12480 <__assert_fail@plt+0x858>
   11d78:	mov	r0, #14
   11d7c:	bl	13174 <__assert_fail@plt+0x154c>
   11d80:	mov	r0, #0
   11d84:	bl	15238 <__assert_fail@plt+0x3610>
   11d88:	ldr	r1, [pc, #1780]	; 12484 <__assert_fail@plt+0x85c>
   11d8c:	mov	r0, #1
   11d90:	bl	13174 <__assert_fail@plt+0x154c>
   11d94:	ldr	r1, [pc, #1772]	; 12488 <__assert_fail@plt+0x860>
   11d98:	mov	r0, #17
   11d9c:	bl	13174 <__assert_fail@plt+0x154c>
   11da0:	mov	r1, #1
   11da4:	mov	r0, #13
   11da8:	bl	13174 <__assert_fail@plt+0x154c>
   11dac:	mov	r2, #99	; 0x63
   11db0:	mov	r1, #120	; 0x78
   11db4:	add	r0, sp, #152	; 0x98
   11db8:	bl	11a54 <memset@plt>
   11dbc:	mov	r3, #0
   11dc0:	add	r1, sp, #152	; 0x98
   11dc4:	mov	r2, #1
   11dc8:	ldr	r0, [pc, #1724]	; 1248c <__assert_fail@plt+0x864>
   11dcc:	strb	r3, [sp, #251]	; 0xfb
   11dd0:	bl	11a00 <setenv@plt>
   11dd4:	ldr	r6, [pc, #1716]	; 12490 <__assert_fail@plt+0x868>
   11dd8:	ldr	r9, [pc, #1716]	; 12494 <__assert_fail@plt+0x86c>
   11ddc:	ldr	fp, [pc, #1716]	; 12498 <__assert_fail@plt+0x870>
   11de0:	ldr	r4, [r6]
   11de4:	cmp	r4, #0
   11de8:	bne	11e68 <__assert_fail@plt+0x240>
   11dec:	add	r0, sp, #24
   11df0:	bl	11ac0 <sigemptyset@plt>
   11df4:	add	r0, sp, #152	; 0x98
   11df8:	bl	11ac0 <sigemptyset@plt>
   11dfc:	mov	r1, #17
   11e00:	add	r0, sp, #152	; 0x98
   11e04:	bl	11964 <sigaddset@plt>
   11e08:	mov	r1, #1
   11e0c:	add	r0, sp, #152	; 0x98
   11e10:	bl	11964 <sigaddset@plt>
   11e14:	mov	r1, #14
   11e18:	add	r0, sp, #152	; 0x98
   11e1c:	bl	11964 <sigaddset@plt>
   11e20:	mov	r2, r4
   11e24:	add	r1, sp, #152	; 0x98
   11e28:	mov	r0, r4
   11e2c:	bl	117b4 <sigprocmask@plt>
   11e30:	ldr	r3, [r6]
   11e34:	cmp	r3, #0
   11e38:	bne	11e50 <__assert_fail@plt+0x228>
   11e3c:	add	r0, sp, #24
   11e40:	bl	11a6c <sigsuspend@plt>
   11e44:	ldr	r3, [r6]
   11e48:	cmp	r3, #0
   11e4c:	beq	11e3c <__assert_fail@plt+0x214>
   11e50:	add	r0, sp, #152	; 0x98
   11e54:	bl	11ac0 <sigemptyset@plt>
   11e58:	mov	r2, #0
   11e5c:	add	r1, sp, #152	; 0x98
   11e60:	mov	r0, #2
   11e64:	bl	117b4 <sigprocmask@plt>
   11e68:	mov	r2, #128	; 0x80
   11e6c:	mov	r1, fp
   11e70:	add	r0, sp, #24
   11e74:	bl	11808 <memcpy@plt>
   11e78:	ldr	r0, [r9]
   11e7c:	mov	r3, #0
   11e80:	add	r0, r0, #1
   11e84:	str	r3, [sp]
   11e88:	mov	r2, r3
   11e8c:	add	r1, sp, #24
   11e90:	bl	11844 <select@plt>
   11e94:	subs	r7, r0, #0
   11e98:	ble	12150 <__assert_fail@plt+0x528>
   11e9c:	ldr	r3, [pc, #1528]	; 1249c <__assert_fail@plt+0x874>
   11ea0:	ldr	r4, [r3]
   11ea4:	cmp	r4, #0
   11ea8:	bne	11f0c <__assert_fail@plt+0x2e4>
   11eac:	b	11de0 <__assert_fail@plt+0x1b8>
   11eb0:	add	r0, sp, #152	; 0x98
   11eb4:	bl	11ac0 <sigemptyset@plt>
   11eb8:	mov	r2, sl
   11ebc:	add	r1, sp, #152	; 0x98
   11ec0:	mov	r0, #2
   11ec4:	bl	117b4 <sigprocmask@plt>
   11ec8:	ldr	r3, [r4, #44]	; 0x2c
   11ecc:	cmp	r3, #0
   11ed0:	beq	120b8 <__assert_fail@plt+0x490>
   11ed4:	ldr	r3, [r3, #12]
   11ed8:	mov	r1, r4
   11edc:	mov	r0, r5
   11ee0:	blx	r3
   11ee4:	ldr	r3, [r4, #24]
   11ee8:	cmp	r3, #0
   11eec:	bne	11efc <__assert_fail@plt+0x2d4>
   11ef0:	ldr	r3, [r4, #16]
   11ef4:	cmp	r3, #1
   11ef8:	beq	12324 <__assert_fail@plt+0x6fc>
   11efc:	ldr	r4, [r4, #220]	; 0xdc
   11f00:	cmp	r7, #0
   11f04:	cmpne	r4, #0
   11f08:	beq	11de0 <__assert_fail@plt+0x1b8>
   11f0c:	ldr	r5, [r4, #60]	; 0x3c
   11f10:	cmn	r5, #1
   11f14:	beq	11efc <__assert_fail@plt+0x2d4>
   11f18:	cmp	r5, #0
   11f1c:	add	r3, r5, #31
   11f20:	movge	r3, r5
   11f24:	asr	r2, r5, #31
   11f28:	asr	r3, r3, #5
   11f2c:	lsr	r2, r2, #27
   11f30:	add	r1, sp, #280	; 0x118
   11f34:	add	r3, r1, r3, lsl #2
   11f38:	add	r1, r5, r2
   11f3c:	and	r1, r1, #31
   11f40:	sub	r2, r1, r2
   11f44:	ldr	r3, [r3, #-256]	; 0xffffff00
   11f48:	mov	r1, #1
   11f4c:	ands	r3, r3, r1, lsl r2
   11f50:	beq	11efc <__assert_fail@plt+0x2d4>
   11f54:	ldrb	r3, [r8]
   11f58:	sub	r7, r7, #1
   11f5c:	cmp	r3, #0
   11f60:	bne	12120 <__assert_fail@plt+0x4f8>
   11f64:	ldr	r3, [r4, #24]
   11f68:	cmp	r3, #0
   11f6c:	bne	11f7c <__assert_fail@plt+0x354>
   11f70:	ldr	r3, [r4, #16]
   11f74:	cmp	r3, #1
   11f78:	beq	12228 <__assert_fail@plt+0x600>
   11f7c:	add	r0, sp, #152	; 0x98
   11f80:	bl	11ac0 <sigemptyset@plt>
   11f84:	mov	r1, #17
   11f88:	add	r0, sp, #152	; 0x98
   11f8c:	bl	11964 <sigaddset@plt>
   11f90:	mov	r1, #1
   11f94:	add	r0, sp, #152	; 0x98
   11f98:	bl	11964 <sigaddset@plt>
   11f9c:	mov	r1, #14
   11fa0:	add	r0, sp, #152	; 0x98
   11fa4:	bl	11964 <sigaddset@plt>
   11fa8:	mov	r2, #0
   11fac:	mov	r0, r2
   11fb0:	add	r1, sp, #152	; 0x98
   11fb4:	bl	117b4 <sigprocmask@plt>
   11fb8:	ldr	r3, [r4, #44]	; 0x2c
   11fbc:	cmp	r3, #0
   11fc0:	beq	11fd0 <__assert_fail@plt+0x3a8>
   11fc4:	ldrsh	sl, [r3, #8]
   11fc8:	cmp	sl, #0
   11fcc:	beq	11eb0 <__assert_fail@plt+0x288>
   11fd0:	ldr	r1, [r4, #208]	; 0xd0
   11fd4:	add	r3, r1, #1
   11fd8:	cmp	r1, #0
   11fdc:	str	r3, [r4, #208]	; 0xd0
   11fe0:	beq	12160 <__assert_fail@plt+0x538>
   11fe4:	ldr	r2, [r4, #28]
   11fe8:	cmp	r2, #0
   11fec:	cmpne	r3, r2
   11ff0:	bls	1213c <__assert_fail@plt+0x514>
   11ff4:	add	sl, sp, #16
   11ff8:	mov	r0, sl
   11ffc:	mov	r1, #0
   12000:	bl	11910 <gettimeofday@plt>
   12004:	ldr	r3, [sp, #16]
   12008:	ldr	r2, [r4, #212]	; 0xd4
   1200c:	sub	r3, r3, r2
   12010:	cmp	r3, #60	; 0x3c
   12014:	ble	12278 <__assert_fail@plt+0x650>
   12018:	ldm	sl, {r0, r1}
   1201c:	add	r3, r4, #212	; 0xd4
   12020:	mov	r2, #1
   12024:	stm	r3, {r0, r1}
   12028:	str	r2, [r4, #208]	; 0xd0
   1202c:	bl	11acc <fork@plt>
   12030:	subs	sl, r0, #0
   12034:	blt	12174 <__assert_fail@plt+0x54c>
   12038:	bne	120c4 <__assert_fail@plt+0x49c>
   1203c:	add	r0, sp, #152	; 0x98
   12040:	bl	11ac0 <sigemptyset@plt>
   12044:	mov	r2, sl
   12048:	add	r1, sp, #152	; 0x98
   1204c:	mov	r0, #2
   12050:	bl	117b4 <sigprocmask@plt>
   12054:	ldrb	r3, [r8]
   12058:	cmp	r3, #0
   1205c:	beq	12084 <__assert_fail@plt+0x45c>
   12060:	bl	119e8 <setsid@plt>
   12064:	ldrb	r3, [r8]
   12068:	cmp	r3, #0
   1206c:	beq	12084 <__assert_fail@plt+0x45c>
   12070:	ldr	r3, [pc, #1064]	; 124a0 <__assert_fail@plt+0x878>
   12074:	ldr	r2, [r9]
   12078:	ldr	r1, [pc, #1060]	; 124a4 <__assert_fail@plt+0x87c>
   1207c:	ldr	r0, [r3]
   12080:	bl	11a0c <fprintf@plt>
   12084:	ldr	sl, [r9]
   12088:	cmp	sl, #2
   1208c:	ble	11ec8 <__assert_fail@plt+0x2a0>
   12090:	cmp	r5, sl
   12094:	beq	120a0 <__assert_fail@plt+0x478>
   12098:	mov	r0, sl
   1209c:	bl	11bf8 <close@plt>
   120a0:	sub	sl, sl, #1
   120a4:	cmp	sl, #2
   120a8:	bne	12090 <__assert_fail@plt+0x468>
   120ac:	ldr	r3, [r4, #44]	; 0x2c
   120b0:	cmp	r3, #0
   120b4:	bne	11ed4 <__assert_fail@plt+0x2ac>
   120b8:	mov	r1, r4
   120bc:	mov	r0, r5
   120c0:	bl	129f8 <__assert_fail@plt+0xdd0>
   120c4:	ldr	r3, [r4, #24]
   120c8:	cmp	r3, #0
   120cc:	beq	12104 <__assert_fail@plt+0x4dc>
   120d0:	ldr	r3, [r4, #60]	; 0x3c
   120d4:	str	sl, [r4, #24]
   120d8:	cmp	r3, #0
   120dc:	blt	12104 <__assert_fail@plt+0x4dc>
   120e0:	asr	r0, r3, #5
   120e4:	mov	ip, #1
   120e8:	ldr	r1, [fp, r0, lsl #2]
   120ec:	and	r3, r3, #31
   120f0:	ldr	r2, [r6]
   120f4:	bic	r3, r1, ip, lsl r3
   120f8:	sub	r2, r2, #1
   120fc:	str	r3, [fp, r0, lsl #2]
   12100:	str	r2, [r6]
   12104:	add	r0, sp, #152	; 0x98
   12108:	bl	11ac0 <sigemptyset@plt>
   1210c:	mov	r2, #0
   12110:	add	r1, sp, #152	; 0x98
   12114:	mov	r0, #2
   12118:	bl	117b4 <sigprocmask@plt>
   1211c:	b	11ee4 <__assert_fail@plt+0x2bc>
   12120:	ldr	r3, [pc, #888]	; 124a0 <__assert_fail@plt+0x878>
   12124:	ldr	r2, [r4, #12]
   12128:	ldr	r1, [pc, #888]	; 124a8 <__assert_fail@plt+0x880>
   1212c:	ldr	r0, [r3]
   12130:	bl	11a0c <fprintf@plt>
   12134:	ldr	r5, [r4, #60]	; 0x3c
   12138:	b	11f64 <__assert_fail@plt+0x33c>
   1213c:	ldr	r2, [pc, #824]	; 1247c <__assert_fail@plt+0x854>
   12140:	ldr	r2, [r2, #8]
   12144:	cmp	r3, r2
   12148:	bcc	1202c <__assert_fail@plt+0x404>
   1214c:	b	11ff4 <__assert_fail@plt+0x3cc>
   12150:	bne	12344 <__assert_fail@plt+0x71c>
   12154:	mov	r0, #1
   12158:	bl	11850 <sleep@plt>
   1215c:	b	11de0 <__assert_fail@plt+0x1b8>
   12160:	add	r0, r4, #212	; 0xd4
   12164:	bl	11910 <gettimeofday@plt>
   12168:	bl	11acc <fork@plt>
   1216c:	subs	sl, r0, #0
   12170:	bge	12038 <__assert_fail@plt+0x410>
   12174:	ldr	r1, [pc, #816]	; 124ac <__assert_fail@plt+0x884>
   12178:	mov	r0, #3
   1217c:	bl	11b14 <syslog@plt>
   12180:	ldr	r3, [r4, #24]
   12184:	cmp	r3, #0
   12188:	bne	12198 <__assert_fail@plt+0x570>
   1218c:	ldr	r3, [r4, #16]
   12190:	cmp	r3, #1
   12194:	beq	123c4 <__assert_fail@plt+0x79c>
   12198:	add	r0, sp, #152	; 0x98
   1219c:	bl	11ac0 <sigemptyset@plt>
   121a0:	mov	r2, #0
   121a4:	add	r1, sp, #152	; 0x98
   121a8:	mov	r0, #2
   121ac:	bl	117b4 <sigprocmask@plt>
   121b0:	mov	r0, #1
   121b4:	bl	11850 <sleep@plt>
   121b8:	b	11efc <__assert_fail@plt+0x2d4>
   121bc:	mov	r1, #4
   121c0:	mov	r0, #3
   121c4:	bl	18b98 <argp_parse@@Base+0x1e70>
   121c8:	ldr	r3, [pc, #680]	; 12478 <__assert_fail@plt+0x850>
   121cc:	mov	r4, r0
   121d0:	ldr	r0, [pc, #728]	; 124b0 <__assert_fail@plt+0x888>
   121d4:	str	r4, [r3]
   121d8:	bl	11874 <strdup@plt>
   121dc:	subs	r3, r0, #0
   121e0:	beq	121fc <__assert_fail@plt+0x5d4>
   121e4:	ldr	r0, [pc, #712]	; 124b4 <__assert_fail@plt+0x88c>
   121e8:	str	r3, [r4]
   121ec:	bl	11874 <strdup@plt>
   121f0:	cmp	r0, #0
   121f4:	strne	r0, [r4, #4]
   121f8:	bne	11d48 <__assert_fail@plt+0x120>
   121fc:	bl	12c14 <__assert_fail@plt+0xfec>
   12200:	mov	r0, r1
   12204:	bl	16094 <daemon@@Base>
   12208:	cmp	r0, #0
   1220c:	bge	11d54 <__assert_fail@plt+0x12c>
   12210:	mov	r0, #27
   12214:	ldr	r2, [r5]
   12218:	ldr	r1, [pc, #664]	; 124b8 <__assert_fail@plt+0x890>
   1221c:	bl	11b14 <syslog@plt>
   12220:	mov	r0, #1
   12224:	bl	119c4 <exit@plt>
   12228:	add	r2, sp, #280	; 0x118
   1222c:	mov	r3, #128	; 0x80
   12230:	mov	r0, r5
   12234:	str	r3, [r2, #-264]!	; 0xfffffef8
   12238:	add	r1, sp, #152	; 0x98
   1223c:	bl	118e0 <accept@plt>
   12240:	ldrb	r3, [r8]
   12244:	cmp	r3, #0
   12248:	mov	r5, r0
   1224c:	bne	123d0 <__assert_fail@plt+0x7a8>
   12250:	cmp	r5, #0
   12254:	blt	123e8 <__assert_fail@plt+0x7c0>
   12258:	ldrb	r3, [r8, #1]
   1225c:	cmp	r3, #0
   12260:	beq	11f7c <__assert_fail@plt+0x354>
   12264:	ldr	r2, [sp, #16]
   12268:	add	r1, sp, #152	; 0x98
   1226c:	mov	r0, r5
   12270:	bl	1577c <__assert_fail@plt+0x3b54>
   12274:	b	11f7c <__assert_fail@plt+0x354>
   12278:	mov	r0, #3
   1227c:	ldr	r3, [r4, #20]
   12280:	ldr	r2, [r4, #12]
   12284:	ldr	r1, [pc, #560]	; 124bc <__assert_fail@plt+0x894>
   12288:	bl	11b14 <syslog@plt>
   1228c:	ldr	r0, [r4, #60]	; 0x3c
   12290:	cmp	r0, #0
   12294:	blt	122c8 <__assert_fail@plt+0x6a0>
   12298:	asr	r1, r0, #5
   1229c:	and	ip, r0, #31
   122a0:	ldr	r2, [fp, r1, lsl #2]
   122a4:	mov	lr, #1
   122a8:	ldr	r3, [r6]
   122ac:	bic	r2, r2, lr, lsl ip
   122b0:	sub	r3, r3, #1
   122b4:	str	r3, [r6]
   122b8:	str	r2, [fp, r1, lsl #2]
   122bc:	bl	11bf8 <close@plt>
   122c0:	mvn	r3, #0
   122c4:	str	r3, [r4, #60]	; 0x3c
   122c8:	ldr	r3, [r4, #24]
   122cc:	mov	r2, #0
   122d0:	cmp	r3, #1
   122d4:	str	r2, [r4, #208]	; 0xd0
   122d8:	ble	1240c <__assert_fail@plt+0x7e4>
   122dc:	mov	r3, #1
   122e0:	str	r3, [r4, #24]
   122e4:	add	r0, sp, #152	; 0x98
   122e8:	bl	11ac0 <sigemptyset@plt>
   122ec:	mov	r2, #0
   122f0:	add	r1, sp, #152	; 0x98
   122f4:	mov	r0, #2
   122f8:	bl	117b4 <sigprocmask@plt>
   122fc:	ldr	r3, [pc, #444]	; 124c0 <__assert_fail@plt+0x898>
   12300:	ldr	r3, [r3]
   12304:	cmp	r3, #0
   12308:	bne	11efc <__assert_fail@plt+0x2d4>
   1230c:	ldr	r2, [pc, #428]	; 124c0 <__assert_fail@plt+0x898>
   12310:	mov	r3, #1
   12314:	mov	r0, #600	; 0x258
   12318:	str	r3, [r2]
   1231c:	bl	11880 <alarm@plt>
   12320:	b	11efc <__assert_fail@plt+0x2d4>
   12324:	mov	r0, r5
   12328:	bl	11bf8 <close@plt>
   1232c:	b	11efc <__assert_fail@plt+0x2d4>
   12330:	ldr	r3, [r5]
   12334:	mov	r4, r5
   12338:	cmp	r3, #0
   1233c:	bne	11c88 <__assert_fail@plt+0x60>
   12340:	b	11c94 <__assert_fail@plt+0x6c>
   12344:	bl	11a24 <__errno_location@plt>
   12348:	ldr	r3, [r0]
   1234c:	cmp	r3, #4
   12350:	beq	12154 <__assert_fail@plt+0x52c>
   12354:	ldr	r1, [pc, #360]	; 124c4 <__assert_fail@plt+0x89c>
   12358:	mov	r0, #4
   1235c:	bl	11b14 <syslog@plt>
   12360:	b	12154 <__assert_fail@plt+0x52c>
   12364:	ldr	r3, [pc, #272]	; 1247c <__assert_fail@plt+0x854>
   12368:	ldr	r1, [pc, #344]	; 124c8 <__assert_fail@plt+0x8a0>
   1236c:	ldr	r0, [r3]
   12370:	bl	11b74 <fopen64@plt>
   12374:	subs	r4, r0, #0
   12378:	beq	1242c <__assert_fail@plt+0x804>
   1237c:	ldrb	r3, [r8]
   12380:	cmp	r3, #0
   12384:	bne	123a8 <__assert_fail@plt+0x780>
   12388:	bl	119b8 <getpid@plt>
   1238c:	ldr	r1, [pc, #312]	; 124cc <__assert_fail@plt+0x8a4>
   12390:	mov	r2, r0
   12394:	mov	r0, r4
   12398:	bl	11a0c <fprintf@plt>
   1239c:	mov	r0, r4
   123a0:	bl	11a9c <fclose@plt>
   123a4:	b	11d74 <__assert_fail@plt+0x14c>
   123a8:	ldr	r3, [pc, #240]	; 124a0 <__assert_fail@plt+0x878>
   123ac:	ldr	r2, [pc, #200]	; 1247c <__assert_fail@plt+0x854>
   123b0:	ldr	r1, [pc, #280]	; 124d0 <__assert_fail@plt+0x8a8>
   123b4:	ldr	r0, [r3]
   123b8:	ldr	r2, [r2]
   123bc:	bl	11a0c <fprintf@plt>
   123c0:	b	12388 <__assert_fail@plt+0x760>
   123c4:	mov	r0, r5
   123c8:	bl	11bf8 <close@plt>
   123cc:	b	12198 <__assert_fail@plt+0x570>
   123d0:	ldr	r3, [pc, #200]	; 124a0 <__assert_fail@plt+0x878>
   123d4:	mov	r2, r0
   123d8:	ldr	r1, [pc, #244]	; 124d4 <__assert_fail@plt+0x8ac>
   123dc:	ldr	r0, [r3]
   123e0:	bl	11a0c <fprintf@plt>
   123e4:	b	12250 <__assert_fail@plt+0x628>
   123e8:	bl	11a24 <__errno_location@plt>
   123ec:	ldr	r3, [r0]
   123f0:	cmp	r3, #4
   123f4:	beq	11efc <__assert_fail@plt+0x2d4>
   123f8:	ldr	r2, [r4, #12]
   123fc:	ldr	r1, [pc, #212]	; 124d8 <__assert_fail@plt+0x8b0>
   12400:	mov	r0, #4
   12404:	bl	11b14 <syslog@plt>
   12408:	b	11efc <__assert_fail@plt+0x2d4>
   1240c:	cmp	r3, #0
   12410:	bne	122e4 <__assert_fail@plt+0x6bc>
   12414:	ldr	r3, [r4, #16]
   12418:	cmp	r3, #1
   1241c:	bne	122e4 <__assert_fail@plt+0x6bc>
   12420:	mov	r0, r5
   12424:	bl	11bf8 <close@plt>
   12428:	b	122e4 <__assert_fail@plt+0x6bc>
   1242c:	bl	11a24 <__errno_location@plt>
   12430:	ldr	r3, [pc, #68]	; 1247c <__assert_fail@plt+0x854>
   12434:	ldr	r4, [r3]
   12438:	ldr	r0, [r0]
   1243c:	bl	1197c <strerror@plt>
   12440:	mov	r2, r4
   12444:	ldr	r1, [pc, #144]	; 124dc <__assert_fail@plt+0x8b4>
   12448:	mov	r3, r0
   1244c:	mov	r0, #2
   12450:	bl	11b14 <syslog@plt>
   12454:	b	11d74 <__assert_fail@plt+0x14c>
   12458:	strdeq	r1, [r3], -r4
   1245c:			; <UNDEFINED> instruction: 0x000313bc
   12460:	strdeq	r1, [r3], -r8
   12464:	andeq	r1, r3, r4, lsl r6
   12468:	andeq	pc, r1, r4, asr #20
   1246c:	muleq	r3, ip, r2
   12470:	andeq	pc, r1, ip, asr sl	; <UNPREDICTABLE>
   12474:	andeq	r1, r3, r4, asr #5
   12478:	andeq	r1, r3, r8, lsl #12
   1247c:	andeq	r1, r3, r8, asr #3
   12480:	andeq	r3, r1, ip, asr r7
   12484:	andeq	r5, r1, r8, lsr r2
   12488:	andeq	r2, r1, r8, lsl #12
   1248c:	strdeq	pc, [r1], -r0
   12490:	andeq	r1, r3, ip, ror #11
   12494:	andeq	r1, r3, r4, ror #10
   12498:	andeq	r1, r3, r8, ror #10
   1249c:	andeq	r1, r3, ip, lsl #12
   124a0:			; <UNDEFINED> instruction: 0x000313b0
   124a4:	andeq	pc, r1, r0, ror fp	; <UNPREDICTABLE>
   124a8:	andeq	pc, r1, r0, lsr #7
   124ac:	andeq	pc, r1, r4, ror #22
   124b0:	andeq	pc, r1, r4, ror #20
   124b4:	andeq	pc, r1, r0, lsl #21
   124b8:	muleq	r1, r8, sl
   124bc:	andeq	pc, r1, r0, lsr fp	; <UNPREDICTABLE>
   124c0:	andeq	r1, r3, r0, lsl #12
   124c4:	strdeq	pc, [r1], -ip
   124c8:			; <UNDEFINED> instruction: 0x0001fabc
   124cc:	muleq	r1, r4, r2
   124d0:	andeq	pc, r1, r0, asr #21
   124d4:	andeq	pc, r1, r8, lsl #22
   124d8:	andeq	pc, r1, ip, lsl fp	; <UNPREDICTABLE>
   124dc:	ldrdeq	pc, [r1], -ip
   124e0:	mov	fp, #0
   124e4:	mov	lr, #0
   124e8:	pop	{r1}		; (ldr r1, [sp], #4)
   124ec:	mov	r2, sp
   124f0:	push	{r2}		; (str r2, [sp, #-4]!)
   124f4:	push	{r0}		; (str r0, [sp, #-4]!)
   124f8:	ldr	ip, [pc, #16]	; 12510 <__assert_fail@plt+0x8e8>
   124fc:	push	{ip}		; (str ip, [sp, #-4]!)
   12500:	ldr	r0, [pc, #12]	; 12514 <__assert_fail@plt+0x8ec>
   12504:	ldr	r3, [pc, #12]	; 12518 <__assert_fail@plt+0x8f0>
   12508:	bl	11970 <__libc_start_main@plt>
   1250c:	bl	11be0 <abort@plt>
   12510:	andeq	pc, r1, r0, lsl r2	; <UNPREDICTABLE>
   12514:	andeq	r1, r1, r0, asr ip
   12518:			; <UNDEFINED> instruction: 0x0001f1b0
   1251c:	ldr	r3, [pc, #20]	; 12538 <__assert_fail@plt+0x910>
   12520:	ldr	r2, [pc, #20]	; 1253c <__assert_fail@plt+0x914>
   12524:	add	r3, pc, r3
   12528:	ldr	r2, [r3, r2]
   1252c:	cmp	r2, #0
   12530:	bxeq	lr
   12534:	b	11994 <__gmon_start__@plt>
   12538:	ldrdeq	lr, [r1], -r4
   1253c:			; <UNDEFINED> instruction: 0x000001bc
   12540:	ldr	r3, [pc, #28]	; 12564 <__assert_fail@plt+0x93c>
   12544:	ldr	r0, [pc, #28]	; 12568 <__assert_fail@plt+0x940>
   12548:	sub	r3, r3, r0
   1254c:	cmp	r3, #6
   12550:	bxls	lr
   12554:	ldr	r3, [pc, #16]	; 1256c <__assert_fail@plt+0x944>
   12558:	cmp	r3, #0
   1255c:	bxeq	lr
   12560:	bx	r3
   12564:	andeq	r1, r3, fp, lsr #7
   12568:	andeq	r1, r3, r8, lsr #7
   1256c:	andeq	r0, r0, r0
   12570:	ldr	r1, [pc, #36]	; 1259c <__assert_fail@plt+0x974>
   12574:	ldr	r0, [pc, #36]	; 125a0 <__assert_fail@plt+0x978>
   12578:	sub	r1, r1, r0
   1257c:	asr	r1, r1, #2
   12580:	add	r1, r1, r1, lsr #31
   12584:	asrs	r1, r1, #1
   12588:	bxeq	lr
   1258c:	ldr	r3, [pc, #16]	; 125a4 <__assert_fail@plt+0x97c>
   12590:	cmp	r3, #0
   12594:	bxeq	lr
   12598:	bx	r3
   1259c:	andeq	r1, r3, r8, lsr #7
   125a0:	andeq	r1, r3, r8, lsr #7
   125a4:	andeq	r0, r0, r0
   125a8:	push	{r4, lr}
   125ac:	ldr	r4, [pc, #24]	; 125cc <__assert_fail@plt+0x9a4>
   125b0:	ldrb	r3, [r4]
   125b4:	cmp	r3, #0
   125b8:	popne	{r4, pc}
   125bc:	bl	12540 <__assert_fail@plt+0x918>
   125c0:	mov	r3, #1
   125c4:	strb	r3, [r4]
   125c8:	pop	{r4, pc}
   125cc:			; <UNDEFINED> instruction: 0x000313b8
   125d0:	ldr	r0, [pc, #40]	; 12600 <__assert_fail@plt+0x9d8>
   125d4:	ldr	r3, [r0]
   125d8:	cmp	r3, #0
   125dc:	bne	125e4 <__assert_fail@plt+0x9bc>
   125e0:	b	12570 <__assert_fail@plt+0x948>
   125e4:	ldr	r3, [pc, #24]	; 12604 <__assert_fail@plt+0x9dc>
   125e8:	cmp	r3, #0
   125ec:	beq	125e0 <__assert_fail@plt+0x9b8>
   125f0:	push	{r4, lr}
   125f4:	blx	r3
   125f8:	pop	{r4, lr}
   125fc:	b	12570 <__assert_fail@plt+0x948>
   12600:	andeq	r0, r3, ip, lsl #30
   12604:	andeq	r0, r0, r0
   12608:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1260c:	sub	sp, sp, #12
   12610:	ldr	r9, [pc, #284]	; 12734 <__assert_fail@plt+0xb0c>
   12614:	ldr	r8, [pc, #284]	; 12738 <__assert_fail@plt+0xb10>
   12618:	ldr	r7, [pc, #284]	; 1273c <__assert_fail@plt+0xb14>
   1261c:	mov	r2, #0
   12620:	mov	r1, #1
   12624:	add	r0, sp, #4
   12628:	bl	11a78 <wait3@plt>
   1262c:	subs	r5, r0, #0
   12630:	ble	1272c <__assert_fail@plt+0xb04>
   12634:	ldrb	r3, [r9]
   12638:	cmp	r3, #0
   1263c:	bne	12710 <__assert_fail@plt+0xae8>
   12640:	ldr	r3, [pc, #248]	; 12740 <__assert_fail@plt+0xb18>
   12644:	ldr	r4, [r3]
   12648:	cmp	r4, #0
   1264c:	beq	1261c <__assert_fail@plt+0x9f4>
   12650:	ldr	fp, [pc, #236]	; 12744 <__assert_fail@plt+0xb1c>
   12654:	ldr	sl, [pc, #236]	; 12748 <__assert_fail@plt+0xb20>
   12658:	mov	r6, #1
   1265c:	b	1266c <__assert_fail@plt+0xa44>
   12660:	ldr	r4, [r4, #220]	; 0xdc
   12664:	cmp	r4, #0
   12668:	beq	1261c <__assert_fail@plt+0x9f4>
   1266c:	ldr	r3, [r4, #24]
   12670:	cmp	r5, r3
   12674:	bne	12660 <__assert_fail@plt+0xa38>
   12678:	ldr	r3, [sp, #4]
   1267c:	cmp	r3, #0
   12680:	bne	126d8 <__assert_fail@plt+0xab0>
   12684:	ldrb	r3, [r9]
   12688:	cmp	r3, #0
   1268c:	bne	126f4 <__assert_fail@plt+0xacc>
   12690:	ldr	r3, [r4, #60]	; 0x3c
   12694:	ldr	r1, [r7]
   12698:	cmp	r3, #0
   1269c:	asr	r0, r3, #31
   126a0:	add	r2, r3, #31
   126a4:	movge	r2, r3
   126a8:	lsr	r0, r0, #27
   126ac:	add	r3, r3, r0
   126b0:	asr	r2, r2, #5
   126b4:	and	r3, r3, #31
   126b8:	sub	r3, r3, r0
   126bc:	ldr	r0, [r8, r2, lsl #2]
   126c0:	add	r1, r1, #1
   126c4:	orr	r3, r0, r6, lsl r3
   126c8:	str	r1, [r7]
   126cc:	str	r3, [r8, r2, lsl #2]
   126d0:	str	r6, [r4, #24]
   126d4:	b	12660 <__assert_fail@plt+0xa38>
   126d8:	ldr	r2, [r4, #48]	; 0x30
   126dc:	mov	r1, sl
   126e0:	mov	r0, #4
   126e4:	bl	11b14 <syslog@plt>
   126e8:	ldrb	r3, [r9]
   126ec:	cmp	r3, #0
   126f0:	beq	12690 <__assert_fail@plt+0xa68>
   126f4:	ldr	r0, [pc, #80]	; 1274c <__assert_fail@plt+0xb24>
   126f8:	ldr	r3, [r4, #60]	; 0x3c
   126fc:	ldr	r2, [r4, #12]
   12700:	mov	r1, fp
   12704:	ldr	r0, [r0]
   12708:	bl	11a0c <fprintf@plt>
   1270c:	b	12690 <__assert_fail@plt+0xa68>
   12710:	ldr	r0, [pc, #52]	; 1274c <__assert_fail@plt+0xb24>
   12714:	ldr	r3, [sp, #4]
   12718:	mov	r2, r5
   1271c:	ldr	r1, [pc, #44]	; 12750 <__assert_fail@plt+0xb28>
   12720:	ldr	r0, [r0]
   12724:	bl	11a0c <fprintf@plt>
   12728:	b	12640 <__assert_fail@plt+0xa18>
   1272c:	add	sp, sp, #12
   12730:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12734:			; <UNDEFINED> instruction: 0x000313bc
   12738:	andeq	r1, r3, r8, ror #10
   1273c:	andeq	r1, r3, ip, ror #11
   12740:	andeq	r1, r3, ip, lsl #12
   12744:	andeq	pc, r1, r4, lsl #5
   12748:	andeq	pc, r1, ip, ror #4
   1274c:			; <UNDEFINED> instruction: 0x000313b0
   12750:	andeq	pc, r1, r4, asr r2	; <UNPREDICTABLE>
   12754:	push	{lr}		; (str lr, [sp, #-4]!)
   12758:	sub	sp, sp, #8192	; 0x2000
   1275c:	sub	sp, sp, #4
   12760:	mov	r2, #8192	; 0x2000
   12764:	mov	r1, sp
   12768:	bl	1179c <read@plt>
   1276c:	add	sp, sp, #8192	; 0x2000
   12770:	add	sp, sp, #4
   12774:	pop	{pc}		; (ldr pc, [sp], #4)
   12778:	push	{r4, r5, lr}
   1277c:	sub	sp, sp, #8320	; 0x2080
   12780:	sub	sp, sp, #20
   12784:	add	r3, sp, #12
   12788:	add	r2, sp, #16
   1278c:	add	r1, sp, #144	; 0x90
   12790:	stm	sp, {r2, r3}
   12794:	mov	r4, #128	; 0x80
   12798:	mov	r2, #8192	; 0x2000
   1279c:	mov	r3, #0
   127a0:	str	r4, [sp, #12]
   127a4:	mov	r5, r0
   127a8:	bl	11868 <recvfrom@plt>
   127ac:	subs	r2, r0, #0
   127b0:	blt	127d0 <__assert_fail@plt+0xba8>
   127b4:	add	r3, sp, #16
   127b8:	str	r3, [sp]
   127bc:	str	r4, [sp, #4]
   127c0:	add	r1, sp, #144	; 0x90
   127c4:	mov	r0, r5
   127c8:	mov	r3, #0
   127cc:	bl	11aa8 <sendto@plt>
   127d0:	add	sp, sp, #8320	; 0x2080
   127d4:	add	sp, sp, #20
   127d8:	pop	{r4, r5, pc}
   127dc:	push	{r4, lr}
   127e0:	mov	r4, r0
   127e4:	sub	sp, sp, #264	; 0x108
   127e8:	mov	r0, #0
   127ec:	bl	11820 <time@plt>
   127f0:	add	r3, sp, #264	; 0x108
   127f4:	str	r0, [r3, #-260]!	; 0xfffffefc
   127f8:	mov	r0, r3
   127fc:	bl	1185c <ctime@plt>
   12800:	ldr	r1, [pc, #40]	; 12830 <__assert_fail@plt+0xc08>
   12804:	mov	r2, r0
   12808:	add	r0, sp, #8
   1280c:	bl	11b2c <sprintf@plt>
   12810:	add	r0, sp, #8
   12814:	bl	119dc <strlen@plt>
   12818:	add	r1, sp, #8
   1281c:	mov	r2, r0
   12820:	mov	r0, r4
   12824:	bl	11a84 <write@plt>
   12828:	add	sp, sp, #264	; 0x108
   1282c:	pop	{r4, pc}
   12830:	muleq	r1, r8, r2
   12834:	push	{r4, r5, lr}
   12838:	mov	r4, r0
   1283c:	sub	sp, sp, #404	; 0x194
   12840:	mov	r0, #0
   12844:	bl	11820 <time@plt>
   12848:	add	r3, sp, #12
   1284c:	add	r2, sp, #16
   12850:	str	r2, [sp]
   12854:	str	r3, [sp, #4]
   12858:	add	r1, sp, #144	; 0x90
   1285c:	mov	r5, #128	; 0x80
   12860:	mov	r3, #0
   12864:	mov	r2, #256	; 0x100
   12868:	str	r5, [sp, #12]
   1286c:	str	r0, [sp, #8]
   12870:	mov	r0, r4
   12874:	bl	11868 <recvfrom@plt>
   12878:	cmp	r0, #0
   1287c:	blt	128c0 <__assert_fail@plt+0xc98>
   12880:	add	r0, sp, #8
   12884:	bl	1185c <ctime@plt>
   12888:	ldr	r1, [pc, #56]	; 128c8 <__assert_fail@plt+0xca0>
   1288c:	mov	r2, r0
   12890:	add	r0, sp, #144	; 0x90
   12894:	bl	11b2c <sprintf@plt>
   12898:	add	r0, sp, #144	; 0x90
   1289c:	bl	119dc <strlen@plt>
   128a0:	add	r3, sp, #16
   128a4:	str	r3, [sp]
   128a8:	str	r5, [sp, #4]
   128ac:	add	r1, sp, #144	; 0x90
   128b0:	mov	r3, #0
   128b4:	mov	r2, r0
   128b8:	mov	r0, r4
   128bc:	bl	11aa8 <sendto@plt>
   128c0:	add	sp, sp, #404	; 0x194
   128c4:	pop	{r4, r5, pc}
   128c8:	muleq	r1, r8, r2
   128cc:	cmp	r0, #112	; 0x70
   128d0:	beq	12998 <__assert_fail@plt+0xd70>
   128d4:	bgt	1290c <__assert_fail@plt+0xce4>
   128d8:	cmp	r0, #82	; 0x52
   128dc:	beq	12950 <__assert_fail@plt+0xd28>
   128e0:	cmp	r0, #100	; 0x64
   128e4:	bne	12934 <__assert_fail@plt+0xd0c>
   128e8:	ldr	r2, [pc, #244]	; 129e4 <__assert_fail@plt+0xdbc>
   128ec:	ldr	r1, [pc, #244]	; 129e8 <__assert_fail@plt+0xdc0>
   128f0:	mov	r0, #1
   128f4:	ldr	r3, [r2]
   128f8:	strb	r0, [r1]
   128fc:	orr	r3, r3, r0
   12900:	str	r3, [r2]
   12904:	mov	r0, #0
   12908:	bx	lr
   1290c:	cmp	r0, #256	; 0x100
   12910:	beq	1293c <__assert_fail@plt+0xd14>
   12914:	ldr	r3, [pc, #208]	; 129ec <__assert_fail@plt+0xdc4>
   12918:	cmp	r0, r3
   1291c:	bne	12934 <__assert_fail@plt+0xd0c>
   12920:	ldr	r3, [pc, #192]	; 129e8 <__assert_fail@plt+0xdc0>
   12924:	mov	r2, #1
   12928:	mov	r0, #0
   1292c:	strb	r2, [r3, #2]
   12930:	bx	lr
   12934:	mov	r0, #7
   12938:	bx	lr
   1293c:	ldr	r3, [pc, #164]	; 129e8 <__assert_fail@plt+0xdc0>
   12940:	mov	r2, #1
   12944:	mov	r0, #0
   12948:	strb	r2, [r3, #1]
   1294c:	bx	lr
   12950:	push	{r4, lr}
   12954:	mov	r4, r1
   12958:	sub	sp, sp, #8
   1295c:	mov	r2, #0
   12960:	add	r1, sp, #4
   12964:	mov	r0, r4
   12968:	bl	11760 <strtol@plt>
   1296c:	cmp	r0, #0
   12970:	ble	129d0 <__assert_fail@plt+0xda8>
   12974:	ldr	r3, [sp, #4]
   12978:	ldrb	r3, [r3]
   1297c:	cmp	r3, #0
   12980:	bne	129d0 <__assert_fail@plt+0xda8>
   12984:	ldr	r3, [pc, #100]	; 129f0 <__assert_fail@plt+0xdc8>
   12988:	str	r0, [r3, #8]
   1298c:	mov	r0, #0
   12990:	add	sp, sp, #8
   12994:	pop	{r4, pc}
   12998:	cmp	r1, #0
   1299c:	beq	129bc <__assert_fail@plt+0xd94>
   129a0:	ldrb	r3, [r1]
   129a4:	cmp	r3, #0
   129a8:	beq	129bc <__assert_fail@plt+0xd94>
   129ac:	ldr	r3, [pc, #60]	; 129f0 <__assert_fail@plt+0xdc8>
   129b0:	mov	r0, #0
   129b4:	str	r1, [r3]
   129b8:	bx	lr
   129bc:	ldr	r2, [pc, #44]	; 129f0 <__assert_fail@plt+0xdc8>
   129c0:	mov	r3, #0
   129c4:	mov	r0, r3
   129c8:	strb	r3, [r2, #4]
   129cc:	bx	lr
   129d0:	mov	r2, r4
   129d4:	ldr	r1, [pc, #24]	; 129f4 <__assert_fail@plt+0xdcc>
   129d8:	mov	r0, #3
   129dc:	bl	11b14 <syslog@plt>
   129e0:	b	1298c <__assert_fail@plt+0xd64>
   129e4:	strdeq	r1, [r3], -r0
   129e8:			; <UNDEFINED> instruction: 0x000313bc
   129ec:	andeq	r0, r0, r1, lsl #2
   129f0:	andeq	r1, r3, r8, asr #3
   129f4:	andeq	pc, r1, r0, lsr #5
   129f8:	ldr	r3, [pc, #500]	; 12bf4 <__assert_fail@plt+0xfcc>
   129fc:	push	{lr}		; (str lr, [sp, #-4]!)
   12a00:	mov	r5, r0
   12a04:	ldrb	r3, [r3]
   12a08:	sub	sp, sp, #68	; 0x44
   12a0c:	mov	r4, r1
   12a10:	cmp	r3, #0
   12a14:	bne	12abc <__assert_fail@plt+0xe94>
   12a18:	mov	r1, #0
   12a1c:	mov	r0, r5
   12a20:	bl	11898 <dup2@plt>
   12a24:	mov	r0, r5
   12a28:	bl	11bf8 <close@plt>
   12a2c:	mov	r1, #1
   12a30:	mov	r0, #0
   12a34:	bl	11898 <dup2@plt>
   12a38:	mov	r1, #2
   12a3c:	mov	r0, #0
   12a40:	bl	11898 <dup2@plt>
   12a44:	ldr	r0, [r4, #36]	; 0x24
   12a48:	bl	11748 <getpwnam@plt>
   12a4c:	subs	r5, r0, #0
   12a50:	beq	12b9c <__assert_fail@plt+0xf74>
   12a54:	ldr	r0, [r4, #40]	; 0x28
   12a58:	cmp	r0, #0
   12a5c:	beq	12a6c <__assert_fail@plt+0xe44>
   12a60:	ldrb	r3, [r0]
   12a64:	cmp	r3, #0
   12a68:	bne	12ae0 <__assert_fail@plt+0xeb8>
   12a6c:	ldr	r3, [r5, #8]
   12a70:	cmp	r3, #0
   12a74:	bne	12b6c <__assert_fail@plt+0xf44>
   12a78:	ldr	r1, [r4, #52]	; 0x34
   12a7c:	ldr	r0, [r4, #48]	; 0x30
   12a80:	bl	11a18 <execv@plt>
   12a84:	ldr	r3, [r4, #16]
   12a88:	cmp	r3, #1
   12a8c:	beq	12aa4 <__assert_fail@plt+0xe7c>
   12a90:	mov	r3, #0
   12a94:	mov	r0, r3
   12a98:	mov	r2, #50	; 0x32
   12a9c:	add	r1, sp, #12
   12aa0:	bl	11bec <recv@plt>
   12aa4:	mov	r0, #3
   12aa8:	ldr	r2, [r4, #48]	; 0x30
   12aac:	ldr	r1, [pc, #324]	; 12bf8 <__assert_fail@plt+0xfd0>
   12ab0:	bl	11b14 <syslog@plt>
   12ab4:	mov	r0, #1
   12ab8:	bl	117fc <_exit@plt>
   12abc:	ldr	r3, [pc, #312]	; 12bfc <__assert_fail@plt+0xfd4>
   12ac0:	ldr	r6, [r3]
   12ac4:	bl	119b8 <getpid@plt>
   12ac8:	ldr	r3, [r4, #48]	; 0x30
   12acc:	ldr	r1, [pc, #300]	; 12c00 <__assert_fail@plt+0xfd8>
   12ad0:	mov	r2, r0
   12ad4:	mov	r0, r6
   12ad8:	bl	11a0c <fprintf@plt>
   12adc:	b	12a18 <__assert_fail@plt+0xdf0>
   12ae0:	bl	11c10 <getgrnam@plt>
   12ae4:	subs	r6, r0, #0
   12ae8:	beq	12bdc <__assert_fail@plt+0xfb4>
   12aec:	ldr	r3, [r5, #8]
   12af0:	cmp	r3, #0
   12af4:	beq	12a78 <__assert_fail@plt+0xe50>
   12af8:	ldr	r0, [r6, #8]
   12afc:	cmp	r0, #0
   12b00:	bne	12b58 <__assert_fail@plt+0xf30>
   12b04:	ldr	r0, [r5, #12]
   12b08:	bl	1194c <setgid@plt>
   12b0c:	cmp	r0, #0
   12b10:	blt	12b80 <__assert_fail@plt+0xf58>
   12b14:	ldr	r1, [r6, #8]
   12b18:	ldr	r0, [r5]
   12b1c:	cmp	r1, #0
   12b20:	bne	12b28 <__assert_fail@plt+0xf00>
   12b24:	ldr	r1, [r5, #12]
   12b28:	bl	118b0 <initgroups@plt>
   12b2c:	ldr	r0, [r5, #8]
   12b30:	bl	11b20 <setuid@plt>
   12b34:	cmp	r0, #0
   12b38:	bge	12a78 <__assert_fail@plt+0xe50>
   12b3c:	mov	r0, #3
   12b40:	ldr	r3, [r5, #8]
   12b44:	ldr	r2, [r4, #12]
   12b48:	ldr	r1, [pc, #180]	; 12c04 <__assert_fail@plt+0xfdc>
   12b4c:	bl	11b14 <syslog@plt>
   12b50:	mov	r0, #1
   12b54:	bl	117fc <_exit@plt>
   12b58:	bl	1194c <setgid@plt>
   12b5c:	cmp	r0, #0
   12b60:	bge	12b14 <__assert_fail@plt+0xeec>
   12b64:	ldr	r3, [r6, #8]
   12b68:	b	12b84 <__assert_fail@plt+0xf5c>
   12b6c:	ldr	r0, [r5, #12]
   12b70:	bl	1194c <setgid@plt>
   12b74:	cmp	r0, #0
   12b78:	ldrge	r0, [r5]
   12b7c:	bge	12b24 <__assert_fail@plt+0xefc>
   12b80:	ldr	r3, [r5, #12]
   12b84:	ldr	r2, [r4, #12]
   12b88:	ldr	r1, [pc, #120]	; 12c08 <__assert_fail@plt+0xfe0>
   12b8c:	mov	r0, #3
   12b90:	bl	11b14 <syslog@plt>
   12b94:	mov	r0, #1
   12b98:	bl	117fc <_exit@plt>
   12b9c:	ldr	r2, [r4, #36]	; 0x24
   12ba0:	ldr	r3, [r4, #20]
   12ba4:	ldr	r1, [pc, #96]	; 12c0c <__assert_fail@plt+0xfe4>
   12ba8:	str	r2, [sp]
   12bac:	ldr	r2, [r4, #12]
   12bb0:	mov	r0, #3
   12bb4:	bl	11b14 <syslog@plt>
   12bb8:	ldr	r3, [r4, #16]
   12bbc:	cmp	r3, #1
   12bc0:	beq	12b94 <__assert_fail@plt+0xf6c>
   12bc4:	mov	r3, #0
   12bc8:	mov	r0, r3
   12bcc:	mov	r2, #50	; 0x32
   12bd0:	add	r1, sp, #12
   12bd4:	bl	11bec <recv@plt>
   12bd8:	b	12b94 <__assert_fail@plt+0xf6c>
   12bdc:	ldr	r2, [r4, #40]	; 0x28
   12be0:	ldr	r3, [r4, #20]
   12be4:	ldr	r1, [pc, #36]	; 12c10 <__assert_fail@plt+0xfe8>
   12be8:	str	r2, [sp]
   12bec:	ldr	r2, [r4, #12]
   12bf0:	b	12bb0 <__assert_fail@plt+0xf88>
   12bf4:			; <UNDEFINED> instruction: 0x000313bc
   12bf8:	andeq	pc, r1, ip, asr #6
   12bfc:			; <UNDEFINED> instruction: 0x000313b0
   12c00:	ldrdeq	pc, [r1], -r0
   12c04:	andeq	pc, r1, r0, lsr r3	; <UNPREDICTABLE>
   12c08:	andeq	pc, r1, r4, lsl r3	; <UNPREDICTABLE>
   12c0c:	andeq	pc, r1, r0, ror #5
   12c10:	strdeq	pc, [r1], -r8
   12c14:	mov	r0, #3
   12c18:	push	{r4, lr}
   12c1c:	ldr	r1, [pc, #8]	; 12c2c <__assert_fail@plt+0x1004>
   12c20:	bl	11b14 <syslog@plt>
   12c24:	mvn	r0, #0
   12c28:	bl	119c4 <exit@plt>
   12c2c:	andeq	pc, r1, r4, ror #6
   12c30:	push	{r4, lr}
   12c34:	sub	sp, sp, #8
   12c38:	mov	r4, r0
   12c3c:	mov	r1, #0
   12c40:	mov	r0, sp
   12c44:	bl	11910 <gettimeofday@plt>
   12c48:	cmp	r0, #0
   12c4c:	blt	12c7c <__assert_fail@plt+0x1054>
   12c50:	ldr	r2, [sp]
   12c54:	ldr	r3, [pc, #80]	; 12cac <__assert_fail@plt+0x1084>
   12c58:	add	r3, r2, r3
   12c5c:	rev	r3, r3
   12c60:	mov	r1, sp
   12c64:	mov	r0, r4
   12c68:	mov	r2, #4
   12c6c:	str	r3, [sp]
   12c70:	bl	11a84 <write@plt>
   12c74:	add	sp, sp, #8
   12c78:	pop	{r4, pc}
   12c7c:	ldr	r3, [pc, #44]	; 12cb0 <__assert_fail@plt+0x1088>
   12c80:	ldrb	r3, [r3]
   12c84:	cmp	r3, #0
   12c88:	beq	12c60 <__assert_fail@plt+0x1038>
   12c8c:	ldr	r3, [pc, #32]	; 12cb4 <__assert_fail@plt+0x108c>
   12c90:	mov	r2, #26
   12c94:	mov	r1, #1
   12c98:	ldr	r3, [r3]
   12c9c:	ldr	r0, [pc, #20]	; 12cb8 <__assert_fail@plt+0x1090>
   12ca0:	bl	118f8 <fwrite@plt>
   12ca4:	mov	r3, #0
   12ca8:	b	12c60 <__assert_fail@plt+0x1038>
   12cac:			; <UNDEFINED> instruction: 0x83aa7e80
   12cb0:			; <UNDEFINED> instruction: 0x000313bc
   12cb4:			; <UNDEFINED> instruction: 0x000313b0
   12cb8:	andeq	pc, r1, ip, ror r3	; <UNPREDICTABLE>
   12cbc:	push	{r4, r5, r6, r7, r8, r9, lr}
   12cc0:	sub	sp, sp, #268	; 0x10c
   12cc4:	ldr	r5, [pc, #500]	; 12ec0 <__assert_fail@plt+0x1298>
   12cc8:	ldr	r8, [pc, #500]	; 12ec4 <__assert_fail@plt+0x129c>
   12ccc:	ldr	r7, [pc, #500]	; 12ec8 <__assert_fail@plt+0x12a0>
   12cd0:	mov	r6, r0
   12cd4:	add	r4, sp, #4
   12cd8:	mov	r9, #0
   12cdc:	sub	r2, r5, r9
   12ce0:	mov	r1, r4
   12ce4:	mov	r0, r6
   12ce8:	bl	1179c <read@plt>
   12cec:	cmp	r0, #0
   12cf0:	beq	12d58 <__assert_fail@plt+0x1130>
   12cf4:	blt	12e30 <__assert_fail@plt+0x1208>
   12cf8:	ldrb	r3, [r4]
   12cfc:	cmp	r3, #13
   12d00:	bhi	12d10 <__assert_fail@plt+0x10e8>
   12d04:	mvn	r3, r8, lsr r3
   12d08:	tst	r3, #1
   12d0c:	beq	12d58 <__assert_fail@plt+0x1130>
   12d10:	add	r0, r4, r0
   12d14:	sub	ip, r9, r4
   12d18:	add	r2, r4, #1
   12d1c:	b	12d38 <__assert_fail@plt+0x1110>
   12d20:	ldrb	r3, [r2], #1
   12d24:	cmp	r3, #13
   12d28:	bhi	12d38 <__assert_fail@plt+0x1110>
   12d2c:	mvn	r3, r8, lsr r3
   12d30:	tst	r3, #1
   12d34:	beq	12d5c <__assert_fail@plt+0x1134>
   12d38:	cmp	r0, r2
   12d3c:	add	r1, ip, r2
   12d40:	bne	12d20 <__assert_fail@plt+0x10f8>
   12d44:	cmp	r1, r7
   12d48:	mov	r9, r1
   12d4c:	bgt	12d5c <__assert_fail@plt+0x1134>
   12d50:	mov	r4, r0
   12d54:	b	12cdc <__assert_fail@plt+0x10b4>
   12d58:	mov	r1, r9
   12d5c:	ldr	r3, [pc, #360]	; 12ecc <__assert_fail@plt+0x12a4>
   12d60:	add	r2, sp, #264	; 0x108
   12d64:	add	r1, r2, r1
   12d68:	ldrb	r3, [r3]
   12d6c:	mov	r2, #0
   12d70:	strb	r2, [r1, #-260]	; 0xfffffefc
   12d74:	cmp	r3, r2
   12d78:	bne	12e04 <__assert_fail@plt+0x11dc>
   12d7c:	ldr	r1, [pc, #332]	; 12ed0 <__assert_fail@plt+0x12a8>
   12d80:	add	r0, sp, #4
   12d84:	bl	118c8 <strcasecmp@plt>
   12d88:	ldr	r3, [pc, #324]	; 12ed4 <__assert_fail@plt+0x12ac>
   12d8c:	ldr	r4, [r3]
   12d90:	cmp	r0, #0
   12d94:	bne	12da0 <__assert_fail@plt+0x1178>
   12d98:	b	12e60 <__assert_fail@plt+0x1238>
   12d9c:	ldr	r4, [r4, #220]	; 0xdc
   12da0:	cmp	r4, #0
   12da4:	beq	12e48 <__assert_fail@plt+0x1220>
   12da8:	ldr	r5, [r4, #64]	; 0x40
   12dac:	sub	r3, r5, #1
   12db0:	cmp	r3, #1
   12db4:	bhi	12d9c <__assert_fail@plt+0x1174>
   12db8:	ldr	r1, [r4, #12]
   12dbc:	add	r0, sp, #4
   12dc0:	bl	118c8 <strcasecmp@plt>
   12dc4:	cmp	r0, #0
   12dc8:	bne	12d9c <__assert_fail@plt+0x1174>
   12dcc:	cmp	r5, #2
   12dd0:	beq	12e1c <__assert_fail@plt+0x11f4>
   12dd4:	ldr	r3, [r4, #44]	; 0x2c
   12dd8:	cmp	r3, #0
   12ddc:	beq	12df8 <__assert_fail@plt+0x11d0>
   12de0:	ldr	r3, [r3, #12]
   12de4:	mov	r1, r4
   12de8:	mov	r0, r6
   12dec:	blx	r3
   12df0:	add	sp, sp, #268	; 0x10c
   12df4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12df8:	mov	r1, r4
   12dfc:	mov	r0, r6
   12e00:	bl	129f8 <__assert_fail@plt+0xdd0>
   12e04:	ldr	r3, [pc, #204]	; 12ed8 <__assert_fail@plt+0x12b0>
   12e08:	add	r2, sp, #4
   12e0c:	ldr	r1, [pc, #200]	; 12edc <__assert_fail@plt+0x12b4>
   12e10:	ldr	r0, [r3]
   12e14:	bl	11a0c <fprintf@plt>
   12e18:	b	12d7c <__assert_fail@plt+0x1154>
   12e1c:	mov	r2, #5
   12e20:	ldr	r1, [pc, #184]	; 12ee0 <__assert_fail@plt+0x12b8>
   12e24:	mov	r0, r6
   12e28:	bl	11a84 <write@plt>
   12e2c:	b	12dd4 <__assert_fail@plt+0x11ac>
   12e30:	mov	r0, r6
   12e34:	mov	r2, #29
   12e38:	ldr	r1, [pc, #164]	; 12ee4 <__assert_fail@plt+0x12bc>
   12e3c:	bl	11a84 <write@plt>
   12e40:	mov	r0, #1
   12e44:	bl	117fc <_exit@plt>
   12e48:	mov	r0, r6
   12e4c:	mov	r2, #24
   12e50:	ldr	r1, [pc, #144]	; 12ee8 <__assert_fail@plt+0x12c0>
   12e54:	bl	11a84 <write@plt>
   12e58:	mov	r0, #1
   12e5c:	bl	119c4 <exit@plt>
   12e60:	cmp	r4, #0
   12e64:	beq	12e40 <__assert_fail@plt+0x1218>
   12e68:	ldr	r8, [pc, #124]	; 12eec <__assert_fail@plt+0x12c4>
   12e6c:	mov	r7, #2
   12e70:	b	12e80 <__assert_fail@plt+0x1258>
   12e74:	ldr	r4, [r4, #220]	; 0xdc
   12e78:	cmp	r4, #0
   12e7c:	beq	12e40 <__assert_fail@plt+0x1218>
   12e80:	ldr	r3, [r4, #64]	; 0x40
   12e84:	sub	r3, r3, #1
   12e88:	cmp	r3, #1
   12e8c:	bhi	12e74 <__assert_fail@plt+0x124c>
   12e90:	ldr	r5, [r4, #12]
   12e94:	mov	r0, r5
   12e98:	bl	119dc <strlen@plt>
   12e9c:	mov	r1, r5
   12ea0:	mov	r2, r0
   12ea4:	mov	r0, r6
   12ea8:	bl	11a84 <write@plt>
   12eac:	mov	r2, r7
   12eb0:	mov	r1, r8
   12eb4:	mov	r0, r6
   12eb8:	bl	11a84 <write@plt>
   12ebc:	b	12e74 <__assert_fail@plt+0x124c>
   12ec0:	andeq	r0, r0, r2, lsl #2
   12ec4:	andeq	r2, r0, r1, lsl #8
   12ec8:	andeq	r0, r0, r1, lsl #2
   12ecc:			; <UNDEFINED> instruction: 0x000313bc
   12ed0:			; <UNDEFINED> instruction: 0x0001f3b4
   12ed4:	andeq	r1, r3, ip, lsl #12
   12ed8:			; <UNDEFINED> instruction: 0x000313b0
   12edc:	muleq	r1, r8, r3
   12ee0:	andeq	pc, r1, r0, asr #7
   12ee4:	andeq	pc, r1, r4, ror #7
   12ee8:	andeq	pc, r1, r8, asr #7
   12eec:			; <UNDEFINED> instruction: 0x0001f3bc
   12ef0:	push	{r4, lr}
   12ef4:	sub	sp, sp, #152	; 0x98
   12ef8:	add	r3, sp, #12
   12efc:	add	r2, sp, #24
   12f00:	str	r2, [sp]
   12f04:	str	r3, [sp, #4]
   12f08:	mov	ip, #128	; 0x80
   12f0c:	add	r1, sp, #8
   12f10:	mov	r3, #0
   12f14:	mov	r2, #4
   12f18:	str	ip, [sp, #12]
   12f1c:	mov	r4, r0
   12f20:	bl	11868 <recvfrom@plt>
   12f24:	cmp	r0, #0
   12f28:	bge	12f34 <__assert_fail@plt+0x130c>
   12f2c:	add	sp, sp, #152	; 0x98
   12f30:	pop	{r4, pc}
   12f34:	mov	r1, #0
   12f38:	add	r0, sp, #16
   12f3c:	bl	11910 <gettimeofday@plt>
   12f40:	cmp	r0, #0
   12f44:	blt	12f88 <__assert_fail@plt+0x1360>
   12f48:	ldr	r2, [sp, #16]
   12f4c:	ldr	r3, [pc, #104]	; 12fbc <__assert_fail@plt+0x1394>
   12f50:	add	r3, r2, r3
   12f54:	rev	ip, r3
   12f58:	add	r2, sp, #24
   12f5c:	mov	r3, #128	; 0x80
   12f60:	str	r2, [sp]
   12f64:	str	r3, [sp, #4]
   12f68:	add	r1, sp, #8
   12f6c:	mov	r0, r4
   12f70:	mov	r3, #0
   12f74:	mov	r2, #4
   12f78:	str	ip, [sp, #8]
   12f7c:	bl	11aa8 <sendto@plt>
   12f80:	add	sp, sp, #152	; 0x98
   12f84:	pop	{r4, pc}
   12f88:	ldr	r3, [pc, #48]	; 12fc0 <__assert_fail@plt+0x1398>
   12f8c:	ldrb	r3, [r3]
   12f90:	cmp	r3, #0
   12f94:	moveq	ip, r3
   12f98:	beq	12f58 <__assert_fail@plt+0x1330>
   12f9c:	ldr	r3, [pc, #32]	; 12fc4 <__assert_fail@plt+0x139c>
   12fa0:	mov	r2, #26
   12fa4:	mov	r1, #1
   12fa8:	ldr	r3, [r3]
   12fac:	ldr	r0, [pc, #20]	; 12fc8 <__assert_fail@plt+0x13a0>
   12fb0:	bl	118f8 <fwrite@plt>
   12fb4:	mov	ip, #0
   12fb8:	b	12f58 <__assert_fail@plt+0x1330>
   12fbc:			; <UNDEFINED> instruction: 0x83aa7e80
   12fc0:			; <UNDEFINED> instruction: 0x000313bc
   12fc4:			; <UNDEFINED> instruction: 0x000313b0
   12fc8:	andeq	pc, r1, ip, ror r3	; <UNPREDICTABLE>
   12fcc:	push	{r4, r5, r6, r7, r8, r9, lr}
   12fd0:	mov	r6, r0
   12fd4:	ldr	r5, [pc, #292]	; 13100 <__assert_fail@plt+0x14d8>
   12fd8:	sub	sp, sp, #220	; 0xdc
   12fdc:	ldr	r4, [r5]
   12fe0:	cmp	r4, #0
   12fe4:	beq	130b8 <__assert_fail@plt+0x1490>
   12fe8:	add	r3, sp, #8
   12fec:	add	r7, sp, #88	; 0x58
   12ff0:	str	r3, [sp, #4]
   12ff4:	mov	ip, #128	; 0x80
   12ff8:	str	r7, [sp]
   12ffc:	add	r1, sp, #12
   13000:	mov	r3, #0
   13004:	mov	r2, #74	; 0x4a
   13008:	mov	r0, r6
   1300c:	str	ip, [sp, #8]
   13010:	bl	11868 <recvfrom@plt>
   13014:	cmp	r0, #0
   13018:	blt	1309c <__assert_fail@plt+0x1474>
   1301c:	ldr	r8, [pc, #224]	; 13104 <__assert_fail@plt+0x14dc>
   13020:	ldr	r9, [r5]
   13024:	ldr	r4, [r8, #4]
   13028:	sub	r5, r9, r4
   1302c:	cmp	r5, #71	; 0x47
   13030:	bgt	130a4 <__assert_fail@plt+0x147c>
   13034:	mov	r2, r5
   13038:	mov	r1, r4
   1303c:	add	r0, sp, #12
   13040:	bl	117c0 <memmove@plt>
   13044:	add	r3, sp, #12
   13048:	rsb	r2, r5, #72	; 0x48
   1304c:	add	r0, r3, r5
   13050:	ldr	r1, [pc, #176]	; 13108 <__assert_fail@plt+0x14e0>
   13054:	bl	11808 <memcpy@plt>
   13058:	add	r4, r4, #1
   1305c:	cmp	r9, r4
   13060:	mov	lr, #13
   13064:	ldreq	r3, [pc, #156]	; 13108 <__assert_fail@plt+0x14e0>
   13068:	mov	ip, #10
   1306c:	streq	r3, [r8, #4]
   13070:	mov	r3, #128	; 0x80
   13074:	str	r3, [sp, #4]
   13078:	str	r7, [sp]
   1307c:	add	r1, sp, #12
   13080:	mov	r0, r6
   13084:	mov	r3, #0
   13088:	mov	r2, #74	; 0x4a
   1308c:	strne	r4, [r8, #4]
   13090:	strb	lr, [sp, #84]	; 0x54
   13094:	strb	ip, [sp, #85]	; 0x55
   13098:	bl	11aa8 <sendto@plt>
   1309c:	add	sp, sp, #220	; 0xdc
   130a0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   130a4:	mov	r2, #72	; 0x48
   130a8:	mov	r1, r4
   130ac:	add	r0, sp, #12
   130b0:	bl	117c0 <memmove@plt>
   130b4:	b	13058 <__assert_fail@plt+0x1430>
   130b8:	ldr	r7, [pc, #72]	; 13108 <__assert_fail@plt+0x14e0>
   130bc:	str	r7, [r5]
   130c0:	bl	119ac <__ctype_b_loc@plt>
   130c4:	mov	r3, r4
   130c8:	ldr	r1, [r0]
   130cc:	lsl	r2, r3, #1
   130d0:	ldrh	r2, [r1, r2]
   130d4:	tst	r2, #16384	; 0x4000
   130d8:	ldrne	r2, [r5]
   130dc:	addne	r1, r2, #1
   130e0:	strne	r1, [r5]
   130e4:	strbne	r3, [r2]
   130e8:	add	r3, r3, #1
   130ec:	cmp	r3, #129	; 0x81
   130f0:	bne	130c8 <__assert_fail@plt+0x14a0>
   130f4:	ldr	r3, [pc, #8]	; 13104 <__assert_fail@plt+0x14dc>
   130f8:	str	r7, [r3, #4]
   130fc:	b	12fe8 <__assert_fail@plt+0x13c0>
   13100:	andeq	r1, r3, r8, ror #11
   13104:			; <UNDEFINED> instruction: 0x000313bc
   13108:	andeq	r1, r3, r4, ror #9
   1310c:	push	{r4, r5, r6, r7, r8, lr}
   13110:	mov	r7, r0
   13114:	ldr	r4, [pc, #84]	; 13170 <__assert_fail@plt+0x1548>
   13118:	ldr	r0, [r4, #12]
   1311c:	cmp	r0, #0
   13120:	beq	13164 <__assert_fail@plt+0x153c>
   13124:	ldr	r6, [r7, #16]
   13128:	add	r4, r4, #12
   1312c:	b	1313c <__assert_fail@plt+0x1514>
   13130:	ldr	r0, [r4, #16]!
   13134:	cmp	r0, #0
   13138:	beq	13164 <__assert_fail@plt+0x153c>
   1313c:	ldr	r3, [r4, #4]
   13140:	mov	r5, r4
   13144:	cmp	r3, r6
   13148:	bne	13130 <__assert_fail@plt+0x1508>
   1314c:	ldr	r1, [r7, #12]
   13150:	bl	11754 <strcmp@plt>
   13154:	cmp	r0, #0
   13158:	bne	13130 <__assert_fail@plt+0x1508>
   1315c:	mov	r0, r5
   13160:	pop	{r4, r5, r6, r7, r8, pc}
   13164:	mov	r5, r0
   13168:	mov	r0, r5
   1316c:	pop	{r4, r5, r6, r7, r8, pc}
   13170:	andeq	r1, r3, r8, asr #3
   13174:	push	{r4, r5, lr}
   13178:	sub	sp, sp, #148	; 0x94
   1317c:	mov	r4, r0
   13180:	mov	r2, #140	; 0x8c
   13184:	mov	r5, r1
   13188:	add	r0, sp, #4
   1318c:	mov	r1, #0
   13190:	bl	11a54 <memset@plt>
   13194:	add	r0, sp, #8
   13198:	bl	11ac0 <sigemptyset@plt>
   1319c:	mov	r1, r4
   131a0:	add	r0, sp, #8
   131a4:	bl	11964 <sigaddset@plt>
   131a8:	mov	r3, #268435456	; 0x10000000
   131ac:	add	r1, sp, #4
   131b0:	mov	r0, r4
   131b4:	mov	r2, #0
   131b8:	str	r5, [sp, #4]
   131bc:	str	r3, [sp, #136]	; 0x88
   131c0:	bl	118ec <sigaction@plt>
   131c4:	add	sp, sp, #148	; 0x94
   131c8:	pop	{r4, r5, pc}
   131cc:	push	{r4, lr}
   131d0:	sub	sp, sp, #128	; 0x80
   131d4:	mov	r4, r0
   131d8:	mov	r0, sp
   131dc:	bl	11ac0 <sigemptyset@plt>
   131e0:	mov	r0, sp
   131e4:	mov	r1, #17
   131e8:	bl	11964 <sigaddset@plt>
   131ec:	mov	r0, sp
   131f0:	mov	r1, #1
   131f4:	bl	11964 <sigaddset@plt>
   131f8:	mov	r0, sp
   131fc:	mov	r1, #14
   13200:	bl	11964 <sigaddset@plt>
   13204:	mov	r2, r4
   13208:	mov	r1, sp
   1320c:	mov	r0, #0
   13210:	bl	117b4 <sigprocmask@plt>
   13214:	add	sp, sp, #128	; 0x80
   13218:	pop	{r4, pc}
   1321c:	push	{r4, lr}
   13220:	subs	r4, r0, #0
   13224:	sub	sp, sp, #128	; 0x80
   13228:	beq	13244 <__assert_fail@plt+0x161c>
   1322c:	mov	r1, r4
   13230:	mov	r2, #0
   13234:	mov	r0, #2
   13238:	bl	117b4 <sigprocmask@plt>
   1323c:	add	sp, sp, #128	; 0x80
   13240:	pop	{r4, pc}
   13244:	mov	r0, sp
   13248:	bl	11ac0 <sigemptyset@plt>
   1324c:	mov	r2, r4
   13250:	mov	r1, sp
   13254:	mov	r0, #2
   13258:	bl	117b4 <sigprocmask@plt>
   1325c:	add	sp, sp, #128	; 0x80
   13260:	pop	{r4, pc}
   13264:	ldr	r3, [r1, #44]	; 0x2c
   13268:	cmp	r3, #0
   1326c:	beq	13278 <__assert_fail@plt+0x1650>
   13270:	ldr	r3, [r3, #12]
   13274:	bx	r3
   13278:	push	{r4, lr}
   1327c:	bl	129f8 <__assert_fail@plt+0xdd0>
   13280:	ldr	r3, [pc, #24]	; 132a0 <__assert_fail@plt+0x1678>
   13284:	cmp	r0, #0
   13288:	moveq	r0, r3
   1328c:	push	{r4, lr}
   13290:	bl	11874 <strdup@plt>
   13294:	cmp	r0, #0
   13298:	popne	{r4, pc}
   1329c:	bl	12c14 <__assert_fail@plt+0xfec>
   132a0:	andeq	pc, r1, r0, ror #7
   132a4:	push	{r4, r5, r6, lr}
   132a8:	mov	r5, r0
   132ac:	mov	r0, r1
   132b0:	mov	r4, r1
   132b4:	bl	18be0 <argp_parse@@Base+0x1eb8>
   132b8:	subs	r6, r0, #0
   132bc:	beq	132d4 <__assert_fail@plt+0x16ac>
   132c0:	mov	r2, r4
   132c4:	ldr	r1, [r5]
   132c8:	bl	11808 <memcpy@plt>
   132cc:	str	r6, [r5]
   132d0:	pop	{r4, r5, r6, pc}
   132d4:	bl	11c34 <__assert_fail@plt+0xc>
   132d8:	ldr	r3, [r0]
   132dc:	cmp	r3, #0
   132e0:	bxeq	lr
   132e4:	push	{r4, r5, r6, lr}
   132e8:	mov	r4, r0
   132ec:	mov	r0, r3
   132f0:	bl	119dc <strlen@plt>
   132f4:	add	r5, r0, #1
   132f8:	mov	r0, r5
   132fc:	bl	18be0 <argp_parse@@Base+0x1eb8>
   13300:	subs	r6, r0, #0
   13304:	beq	1331c <__assert_fail@plt+0x16f4>
   13308:	mov	r2, r5
   1330c:	ldr	r1, [r4]
   13310:	bl	11808 <memcpy@plt>
   13314:	str	r6, [r4]
   13318:	pop	{r4, r5, r6, pc}
   1331c:	bl	11c34 <__assert_fail@plt+0xc>
   13320:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13324:	mov	r4, r0
   13328:	ldr	lr, [r1, #64]	; 0x40
   1332c:	ldr	ip, [pc, #148]	; 133c8 <__assert_fail@plt+0x17a0>
   13330:	sub	r3, lr, #1
   13334:	cmp	r3, #1
   13338:	sub	sp, sp, #40	; 0x28
   1333c:	ldm	r1, {r2, r3}
   13340:	ldr	r0, [ip]
   13344:	bls	133b4 <__assert_fail@plt+0x178c>
   13348:	ldr	ip, [r1, #8]
   1334c:	ldr	lr, [pc, #120]	; 133cc <__assert_fail@plt+0x17a4>
   13350:	cmp	ip, #0
   13354:	moveq	ip, lr
   13358:	ldr	lr, [r1, #44]	; 0x2c
   1335c:	add	r6, r1, #20
   13360:	cmp	lr, #0
   13364:	ldm	r6, {r6, r7, r8}
   13368:	ldr	r5, [r1, #12]
   1336c:	ldr	r9, [r1, #36]	; 0x24
   13370:	ldr	sl, [r1, #40]	; 0x28
   13374:	ldrne	lr, [lr]
   13378:	ldr	r1, [r1, #48]	; 0x30
   1337c:	ldreq	lr, [pc, #76]	; 133d0 <__assert_fail@plt+0x17a8>
   13380:	str	r1, [sp, #36]	; 0x24
   13384:	str	lr, [sp, #32]
   13388:	str	sl, [sp, #28]
   1338c:	str	r9, [sp, #24]
   13390:	str	r8, [sp, #20]
   13394:	str	r7, [sp, #16]
   13398:	str	r6, [sp, #12]
   1339c:	str	r5, [sp, #8]
   133a0:	stm	sp, {r4, ip}
   133a4:	ldr	r1, [pc, #40]	; 133d4 <__assert_fail@plt+0x17ac>
   133a8:	bl	11a0c <fprintf@plt>
   133ac:	add	sp, sp, #40	; 0x28
   133b0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   133b4:	ldr	r5, [pc, #28]	; 133d8 <__assert_fail@plt+0x17b0>
   133b8:	cmp	lr, #2
   133bc:	ldr	ip, [pc, #24]	; 133dc <__assert_fail@plt+0x17b4>
   133c0:	moveq	ip, r5
   133c4:	b	13358 <__assert_fail@plt+0x1730>
   133c8:			; <UNDEFINED> instruction: 0x000313b0
   133cc:	andeq	pc, r1, r4, lsl #8
   133d0:	andeq	pc, r1, r4, lsl r4	; <UNPREDICTABLE>
   133d4:	andeq	pc, r1, r8, lsl r4	; <UNPREDICTABLE>
   133d8:	andeq	pc, r1, r8, lsl #8
   133dc:	andeq	pc, r1, r4, lsl r8	; <UNPREDICTABLE>
   133e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   133e4:	mov	r4, r0
   133e8:	ldrh	r0, [r0, #68]	; 0x44
   133ec:	ldr	r8, [pc, #816]	; 13724 <__assert_fail@plt+0x1afc>
   133f0:	ldr	sl, [pc, #816]	; 13728 <__assert_fail@plt+0x1b00>
   133f4:	ldr	r9, [pc, #816]	; 1372c <__assert_fail@plt+0x1b04>
   133f8:	ldr	fp, [pc, #816]	; 13730 <__assert_fail@plt+0x1b08>
   133fc:	sub	sp, sp, #20
   13400:	mov	r7, #0
   13404:	mov	r3, #1
   13408:	str	r3, [sp, #8]
   1340c:	mov	r2, r7
   13410:	ldr	r1, [r4, #16]
   13414:	bl	11bb0 <socket@plt>
   13418:	cmp	r0, #0
   1341c:	mov	r5, r0
   13420:	str	r0, [r4, #60]	; 0x3c
   13424:	blt	134e0 <__assert_fail@plt+0x18b8>
   13428:	ldrh	r3, [r4, #68]	; 0x44
   1342c:	cmp	r3, #10
   13430:	beq	13540 <__assert_fail@plt+0x1918>
   13434:	mov	r2, #3
   13438:	mov	r1, r8
   1343c:	ldr	r0, [r4, #20]
   13440:	bl	11bd4 <strncmp@plt>
   13444:	cmp	r0, #0
   13448:	addne	r6, sp, #8
   1344c:	bne	13460 <__assert_fail@plt+0x1838>
   13450:	ldr	r3, [r9]
   13454:	add	r6, sp, #8
   13458:	tst	r3, #1
   1345c:	bne	13514 <__assert_fail@plt+0x18ec>
   13460:	mov	r2, #4
   13464:	str	r2, [sp]
   13468:	mov	r3, r6
   1346c:	mov	r0, r5
   13470:	mov	r2, #2
   13474:	mov	r1, #1
   13478:	bl	1176c <setsockopt@plt>
   1347c:	cmp	r0, #0
   13480:	blt	13578 <__assert_fail@plt+0x1950>
   13484:	ldr	r2, [r4, #200]	; 0xc8
   13488:	add	r1, r4, #72	; 0x48
   1348c:	ldr	r0, [r4, #60]	; 0x3c
   13490:	bl	11a48 <bind@plt>
   13494:	cmp	r0, #0
   13498:	bge	13650 <__assert_fail@plt+0x1a28>
   1349c:	bl	11a24 <__errno_location@plt>
   134a0:	ldr	r0, [r0]
   134a4:	bic	r3, r0, #2
   134a8:	cmp	r3, #97	; 0x61
   134ac:	bne	13588 <__assert_fail@plt+0x1960>
   134b0:	ldrh	r3, [r4, #68]	; 0x44
   134b4:	cmp	r3, #10
   134b8:	bne	13588 <__assert_fail@plt+0x1960>
   134bc:	ldrb	r3, [r4, #70]	; 0x46
   134c0:	cmp	r3, #0
   134c4:	beq	13588 <__assert_fail@plt+0x1960>
   134c8:	mov	r3, #2
   134cc:	strh	r3, [r4, #68]	; 0x44
   134d0:	ldr	r0, [r4, #60]	; 0x3c
   134d4:	bl	11bf8 <close@plt>
   134d8:	ldrh	r0, [r4, #68]	; 0x44
   134dc:	b	1340c <__assert_fail@plt+0x17e4>
   134e0:	bl	11a24 <__errno_location@plt>
   134e4:	ldr	r0, [r0]
   134e8:	cmp	r0, #97	; 0x61
   134ec:	bne	13620 <__assert_fail@plt+0x19f8>
   134f0:	ldrh	r3, [r4, #68]	; 0x44
   134f4:	cmp	r3, #10
   134f8:	bne	13620 <__assert_fail@plt+0x19f8>
   134fc:	ldrb	r3, [r4, #70]	; 0x46
   13500:	cmp	r3, #0
   13504:	beq	13620 <__assert_fail@plt+0x19f8>
   13508:	mov	r0, #2
   1350c:	strh	r0, [r4, #68]	; 0x44
   13510:	b	1340c <__assert_fail@plt+0x17e4>
   13514:	mov	r1, #4
   13518:	mov	r2, #1
   1351c:	str	r1, [sp]
   13520:	mov	r0, r5
   13524:	mov	r3, r6
   13528:	mov	r1, r2
   1352c:	bl	1176c <setsockopt@plt>
   13530:	cmp	r0, #0
   13534:	blt	13600 <__assert_fail@plt+0x19d8>
   13538:	ldr	r5, [r4, #60]	; 0x3c
   1353c:	b	13460 <__assert_fail@plt+0x1838>
   13540:	add	r3, sp, #16
   13544:	ldrb	r2, [r4, #70]	; 0x46
   13548:	mov	r1, #4
   1354c:	clz	r2, r2
   13550:	lsr	r2, r2, #5
   13554:	str	r2, [r3, #-4]!
   13558:	str	r1, [sp]
   1355c:	mov	r2, #26
   13560:	mov	r1, #41	; 0x29
   13564:	bl	1176c <setsockopt@plt>
   13568:	cmp	r0, #0
   1356c:	blt	136ac <__assert_fail@plt+0x1a84>
   13570:	ldr	r5, [r4, #60]	; 0x3c
   13574:	b	13434 <__assert_fail@plt+0x180c>
   13578:	mov	r1, sl
   1357c:	mov	r0, #3
   13580:	bl	11b14 <syslog@plt>
   13584:	b	13484 <__assert_fail@plt+0x185c>
   13588:	ldr	r5, [r4, #8]
   1358c:	ldr	r3, [pc, #416]	; 13734 <__assert_fail@plt+0x1b0c>
   13590:	cmp	r5, #0
   13594:	ldrb	r3, [r3]
   13598:	beq	1365c <__assert_fail@plt+0x1a34>
   1359c:	cmp	r3, #0
   135a0:	bne	136bc <__assert_fail@plt+0x1a94>
   135a4:	ldr	r1, [r4, #20]
   135a8:	ldr	r3, [r4, #12]
   135ac:	mov	r2, r5
   135b0:	str	r1, [sp]
   135b4:	mov	r0, #3
   135b8:	ldr	r1, [pc, #376]	; 13738 <__assert_fail@plt+0x1b10>
   135bc:	bl	11b14 <syslog@plt>
   135c0:	ldr	r0, [r4, #60]	; 0x3c
   135c4:	bl	11bf8 <close@plt>
   135c8:	ldr	r3, [pc, #364]	; 1373c <__assert_fail@plt+0x1b14>
   135cc:	mvn	r2, #0
   135d0:	str	r2, [r4, #60]	; 0x3c
   135d4:	ldr	r2, [r3]
   135d8:	cmp	r2, #0
   135dc:	movne	r0, #1
   135e0:	bne	135f8 <__assert_fail@plt+0x19d0>
   135e4:	mov	r4, #1
   135e8:	mov	r0, #600	; 0x258
   135ec:	str	r4, [r3]
   135f0:	bl	11880 <alarm@plt>
   135f4:	mov	r0, r4
   135f8:	add	sp, sp, #20
   135fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13600:	bl	11a24 <__errno_location@plt>
   13604:	ldr	r3, [r0]
   13608:	cmp	r3, #13
   1360c:	beq	13538 <__assert_fail@plt+0x1910>
   13610:	mov	r1, fp
   13614:	mov	r0, #3
   13618:	bl	11b14 <syslog@plt>
   1361c:	b	13538 <__assert_fail@plt+0x1910>
   13620:	ldr	r3, [pc, #268]	; 13734 <__assert_fail@plt+0x1b0c>
   13624:	ldrb	r3, [r3]
   13628:	cmp	r3, #0
   1362c:	bne	1367c <__assert_fail@plt+0x1a54>
   13630:	ldr	r3, [r4, #20]
   13634:	ldr	r2, [r4, #12]
   13638:	ldr	r1, [pc, #256]	; 13740 <__assert_fail@plt+0x1b18>
   1363c:	mov	r0, #3
   13640:	bl	11b14 <syslog@plt>
   13644:	mov	r0, #1
   13648:	add	sp, sp, #20
   1364c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13650:	mov	r0, #0
   13654:	add	sp, sp, #20
   13658:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1365c:	cmp	r3, #0
   13660:	bne	136f4 <__assert_fail@plt+0x1acc>
   13664:	ldr	r3, [r4, #20]
   13668:	ldr	r2, [r4, #12]
   1366c:	ldr	r1, [pc, #208]	; 13744 <__assert_fail@plt+0x1b1c>
   13670:	mov	r0, #3
   13674:	bl	11b14 <syslog@plt>
   13678:	b	135c0 <__assert_fail@plt+0x1998>
   1367c:	ldr	r3, [pc, #196]	; 13748 <__assert_fail@plt+0x1b20>
   13680:	ldr	r6, [r4, #12]
   13684:	ldr	r7, [r4, #20]
   13688:	ldr	r5, [r3]
   1368c:	bl	1197c <strerror@plt>
   13690:	mov	r3, r7
   13694:	mov	r2, r6
   13698:	ldr	r1, [pc, #172]	; 1374c <__assert_fail@plt+0x1b24>
   1369c:	str	r0, [sp]
   136a0:	mov	r0, r5
   136a4:	bl	11a0c <fprintf@plt>
   136a8:	b	13630 <__assert_fail@plt+0x1a08>
   136ac:	ldr	r1, [pc, #156]	; 13750 <__assert_fail@plt+0x1b28>
   136b0:	mov	r0, #3
   136b4:	bl	11b14 <syslog@plt>
   136b8:	b	13570 <__assert_fail@plt+0x1948>
   136bc:	ldr	r3, [pc, #132]	; 13748 <__assert_fail@plt+0x1b20>
   136c0:	ldr	r7, [r4, #12]
   136c4:	ldr	r8, [r4, #20]
   136c8:	ldr	r6, [r3]
   136cc:	bl	1197c <strerror@plt>
   136d0:	mov	r2, r5
   136d4:	str	r8, [sp]
   136d8:	mov	r3, r7
   136dc:	ldr	r1, [pc, #112]	; 13754 <__assert_fail@plt+0x1b2c>
   136e0:	str	r0, [sp, #4]
   136e4:	mov	r0, r6
   136e8:	bl	11a0c <fprintf@plt>
   136ec:	ldr	r5, [r4, #8]
   136f0:	b	135a4 <__assert_fail@plt+0x197c>
   136f4:	ldr	r3, [pc, #76]	; 13748 <__assert_fail@plt+0x1b20>
   136f8:	ldr	r6, [r4, #12]
   136fc:	ldr	r7, [r4, #20]
   13700:	ldr	r5, [r3]
   13704:	bl	1197c <strerror@plt>
   13708:	mov	r3, r7
   1370c:	mov	r2, r6
   13710:	ldr	r1, [pc, #64]	; 13758 <__assert_fail@plt+0x1b30>
   13714:	str	r0, [sp]
   13718:	mov	r0, r5
   1371c:	bl	11a0c <fprintf@plt>
   13720:	b	13664 <__assert_fail@plt+0x1a3c>
   13724:			; <UNDEFINED> instruction: 0x0001f4bc
   13728:	ldrdeq	pc, [r1], -ip
   1372c:	strdeq	r1, [r3], -r0
   13730:	andeq	pc, r1, r0, asr #9
   13734:			; <UNDEFINED> instruction: 0x000313bc
   13738:	andeq	pc, r1, ip, lsl r5	; <UNPREDICTABLE>
   1373c:	andeq	r1, r3, r0, lsl #12
   13740:	andeq	pc, r1, r8, lsl #9
   13744:	andeq	pc, r1, ip, asr #10
   13748:			; <UNDEFINED> instruction: 0x000313b0
   1374c:	andeq	pc, r1, ip, ror #8
   13750:	muleq	r1, ip, r4
   13754:	strdeq	pc, [r1], -ip
   13758:	andeq	pc, r1, r0, lsr r5	; <UNPREDICTABLE>
   1375c:	ldr	r1, [pc, #92]	; 137c0 <__assert_fail@plt+0x1b98>
   13760:	push	{r4, lr}
   13764:	mov	r2, #0
   13768:	ldr	r3, [pc, #84]	; 137c4 <__assert_fail@plt+0x1b9c>
   1376c:	ldr	r4, [r1]
   13770:	cmp	r4, r2
   13774:	str	r2, [r3]
   13778:	bne	1378c <__assert_fail@plt+0x1b64>
   1377c:	pop	{r4, pc}
   13780:	ldr	r4, [r4, #220]	; 0xdc
   13784:	cmp	r4, #0
   13788:	beq	137bc <__assert_fail@plt+0x1b94>
   1378c:	ldr	r3, [r4, #60]	; 0x3c
   13790:	cmn	r3, #1
   13794:	bne	13780 <__assert_fail@plt+0x1b58>
   13798:	ldr	r3, [r4, #64]	; 0x40
   1379c:	mov	r0, r4
   137a0:	sub	r3, r3, #1
   137a4:	cmp	r3, #1
   137a8:	bls	13780 <__assert_fail@plt+0x1b58>
   137ac:	bl	133e0 <__assert_fail@plt+0x17b8>
   137b0:	ldr	r4, [r4, #220]	; 0xdc
   137b4:	cmp	r4, #0
   137b8:	bne	1378c <__assert_fail@plt+0x1b64>
   137bc:	pop	{r4, pc}
   137c0:	andeq	r1, r3, ip, lsl #12
   137c4:	andeq	r1, r3, r0, lsl #12
   137c8:	ldr	r2, [r0, #60]	; 0x3c
   137cc:	mov	r1, #1
   137d0:	cmn	r2, #1
   137d4:	strh	r1, [r0, #32]
   137d8:	bxne	lr
   137dc:	push	{r4, r5, r6, r7, r8, lr}
   137e0:	mov	r4, r0
   137e4:	bl	133e0 <__assert_fail@plt+0x17b8>
   137e8:	cmp	r0, #0
   137ec:	popne	{r4, r5, r6, r7, r8, pc}
   137f0:	ldr	r3, [r4, #16]
   137f4:	cmp	r3, #1
   137f8:	beq	13880 <__assert_fail@plt+0x1c58>
   137fc:	ldr	r3, [r4, #60]	; 0x3c
   13800:	ldr	ip, [pc, #136]	; 13890 <__assert_fail@plt+0x1c68>
   13804:	cmp	r3, #0
   13808:	asr	r1, r3, #31
   1380c:	add	r2, r3, #31
   13810:	movge	r2, r3
   13814:	lsr	r0, r1, #27
   13818:	asr	r2, r2, #5
   1381c:	add	r1, r3, r0
   13820:	ldr	lr, [pc, #108]	; 13894 <__assert_fail@plt+0x1c6c>
   13824:	and	r1, r1, #31
   13828:	sub	r1, r1, r0
   1382c:	mov	r6, #1
   13830:	ldr	r0, [ip, r2, lsl #2]
   13834:	ldr	r5, [pc, #92]	; 13898 <__assert_fail@plt+0x1c70>
   13838:	orr	r1, r0, r6, lsl r1
   1383c:	ldr	r0, [lr]
   13840:	str	r1, [ip, r2, lsl #2]
   13844:	add	r2, r0, r6
   13848:	str	r2, [lr]
   1384c:	ldr	r2, [pc, #72]	; 1389c <__assert_fail@plt+0x1c74>
   13850:	ldr	r7, [r5]
   13854:	ldrb	r2, [r2]
   13858:	cmp	r3, r7
   1385c:	strgt	r3, [r5]
   13860:	cmp	r2, #0
   13864:	popeq	{r4, r5, r6, r7, r8, pc}
   13868:	ldr	r1, [pc, #48]	; 138a0 <__assert_fail@plt+0x1c78>
   1386c:	ldr	r2, [r4, #48]	; 0x30
   13870:	pop	{r4, r5, r6, r7, r8, lr}
   13874:	ldr	r0, [r1]
   13878:	ldr	r1, [pc, #36]	; 138a4 <__assert_fail@plt+0x1c7c>
   1387c:	b	11a0c <fprintf@plt>
   13880:	mov	r1, #10
   13884:	ldr	r0, [r4, #60]	; 0x3c
   13888:	bl	11af0 <listen@plt>
   1388c:	b	137fc <__assert_fail@plt+0x1bd4>
   13890:	andeq	r1, r3, r8, ror #10
   13894:	andeq	r1, r3, ip, ror #11
   13898:	andeq	r1, r3, r4, ror #10
   1389c:			; <UNDEFINED> instruction: 0x000313bc
   138a0:			; <UNDEFINED> instruction: 0x000313b0
   138a4:	andeq	pc, r1, ip, asr r5	; <UNPREDICTABLE>
   138a8:	push	{r4, r5, r6, lr}
   138ac:	mov	r4, r0
   138b0:	ldr	r0, [r0, #60]	; 0x3c
   138b4:	cmp	r0, #0
   138b8:	blt	138f4 <__assert_fail@plt+0x1ccc>
   138bc:	ldr	ip, [pc, #76]	; 13910 <__assert_fail@plt+0x1ce8>
   138c0:	asr	lr, r0, #5
   138c4:	ldr	r1, [pc, #72]	; 13914 <__assert_fail@plt+0x1cec>
   138c8:	ldr	r2, [ip, lr, lsl #2]
   138cc:	and	r3, r0, #31
   138d0:	mov	r5, #1
   138d4:	bic	r2, r2, r5, lsl r3
   138d8:	ldr	r3, [r1]
   138dc:	str	r2, [ip, lr, lsl #2]
   138e0:	sub	r3, r3, #1
   138e4:	str	r3, [r1]
   138e8:	bl	11bf8 <close@plt>
   138ec:	mvn	r3, #0
   138f0:	str	r3, [r4, #60]	; 0x3c
   138f4:	ldr	r2, [r4, #24]
   138f8:	mov	r3, #0
   138fc:	cmp	r2, #1
   13900:	str	r3, [r4, #208]	; 0xd0
   13904:	movgt	r3, #1
   13908:	strgt	r3, [r4, #24]
   1390c:	pop	{r4, r5, r6, pc}
   13910:	andeq	r1, r3, r8, ror #10
   13914:	andeq	r1, r3, ip, ror #11
   13918:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1391c:	mov	r5, r0
   13920:	ldr	r8, [pc, #1336]	; 13e60 <__assert_fail@plt+0x2238>
   13924:	sub	sp, sp, #300	; 0x12c
   13928:	ldr	r4, [r8]
   1392c:	cmp	r4, #0
   13930:	beq	139b8 <__assert_fail@plt+0x1d90>
   13934:	add	r7, r0, #72	; 0x48
   13938:	mov	r6, #128	; 0x80
   1393c:	mov	r2, r6
   13940:	mov	r1, r7
   13944:	add	r0, r4, #72	; 0x48
   13948:	bl	11838 <memcmp@plt>
   1394c:	cmp	r0, #0
   13950:	bne	139ac <__assert_fail@plt+0x1d84>
   13954:	ldr	r1, [r5, #12]
   13958:	ldr	r0, [r4, #12]
   1395c:	bl	11754 <strcmp@plt>
   13960:	cmp	r0, #0
   13964:	bne	139ac <__assert_fail@plt+0x1d84>
   13968:	ldr	r1, [r5, #20]
   1396c:	ldr	r0, [r4, #20]
   13970:	bl	11754 <strcmp@plt>
   13974:	subs	r9, r0, #0
   13978:	bne	139ac <__assert_fail@plt+0x1d84>
   1397c:	ldr	r2, [r4, #64]	; 0x40
   13980:	ldr	r3, [r5, #64]	; 0x40
   13984:	sub	r2, r2, #1
   13988:	sub	r3, r3, #1
   1398c:	cmp	r2, #1
   13990:	movls	r2, #0
   13994:	movhi	r2, #1
   13998:	cmp	r3, #1
   1399c:	movhi	r3, #0
   139a0:	movls	r3, #1
   139a4:	cmp	r2, r3
   139a8:	bne	13c14 <__assert_fail@plt+0x1fec>
   139ac:	ldr	r4, [r4, #220]	; 0xdc
   139b0:	cmp	r4, #0
   139b4:	bne	1393c <__assert_fail@plt+0x1d14>
   139b8:	ldr	r3, [pc, #1188]	; 13e64 <__assert_fail@plt+0x223c>
   139bc:	ldrb	r3, [r3]
   139c0:	cmp	r3, #0
   139c4:	bne	13db0 <__assert_fail@plt+0x2188>
   139c8:	mov	r0, #224	; 0xe0
   139cc:	bl	18be0 <argp_parse@@Base+0x1eb8>
   139d0:	subs	r4, r0, #0
   139d4:	beq	13e48 <__assert_fail@plt+0x2220>
   139d8:	mov	r1, r5
   139dc:	mov	r2, #224	; 0xe0
   139e0:	bl	11808 <memcpy@plt>
   139e4:	ldr	r0, [r4, #8]
   139e8:	cmp	r0, #0
   139ec:	beq	13a18 <__assert_fail@plt+0x1df0>
   139f0:	bl	119dc <strlen@plt>
   139f4:	add	r5, r0, #1
   139f8:	mov	r0, r5
   139fc:	bl	18be0 <argp_parse@@Base+0x1eb8>
   13a00:	subs	r6, r0, #0
   13a04:	beq	13e5c <__assert_fail@plt+0x2234>
   13a08:	mov	r2, r5
   13a0c:	ldr	r1, [r4, #8]
   13a10:	bl	11808 <memcpy@plt>
   13a14:	str	r6, [r4, #8]
   13a18:	ldr	r0, [r4, #12]
   13a1c:	cmp	r0, #0
   13a20:	beq	13a4c <__assert_fail@plt+0x1e24>
   13a24:	bl	119dc <strlen@plt>
   13a28:	add	r5, r0, #1
   13a2c:	mov	r0, r5
   13a30:	bl	18be0 <argp_parse@@Base+0x1eb8>
   13a34:	subs	r6, r0, #0
   13a38:	beq	13e5c <__assert_fail@plt+0x2234>
   13a3c:	mov	r2, r5
   13a40:	ldr	r1, [r4, #12]
   13a44:	bl	11808 <memcpy@plt>
   13a48:	str	r6, [r4, #12]
   13a4c:	ldr	r0, [r4, #20]
   13a50:	cmp	r0, #0
   13a54:	beq	13a80 <__assert_fail@plt+0x1e58>
   13a58:	bl	119dc <strlen@plt>
   13a5c:	add	r5, r0, #1
   13a60:	mov	r0, r5
   13a64:	bl	18be0 <argp_parse@@Base+0x1eb8>
   13a68:	subs	r6, r0, #0
   13a6c:	beq	13e5c <__assert_fail@plt+0x2234>
   13a70:	mov	r2, r5
   13a74:	ldr	r1, [r4, #20]
   13a78:	bl	11808 <memcpy@plt>
   13a7c:	str	r6, [r4, #20]
   13a80:	ldr	r0, [r4, #36]	; 0x24
   13a84:	cmp	r0, #0
   13a88:	beq	13ab4 <__assert_fail@plt+0x1e8c>
   13a8c:	bl	119dc <strlen@plt>
   13a90:	add	r5, r0, #1
   13a94:	mov	r0, r5
   13a98:	bl	18be0 <argp_parse@@Base+0x1eb8>
   13a9c:	subs	r6, r0, #0
   13aa0:	beq	13e5c <__assert_fail@plt+0x2234>
   13aa4:	mov	r2, r5
   13aa8:	ldr	r1, [r4, #36]	; 0x24
   13aac:	bl	11808 <memcpy@plt>
   13ab0:	str	r6, [r4, #36]	; 0x24
   13ab4:	ldr	r0, [r4, #40]	; 0x28
   13ab8:	cmp	r0, #0
   13abc:	beq	13ae8 <__assert_fail@plt+0x1ec0>
   13ac0:	bl	119dc <strlen@plt>
   13ac4:	add	r5, r0, #1
   13ac8:	mov	r0, r5
   13acc:	bl	18be0 <argp_parse@@Base+0x1eb8>
   13ad0:	subs	r6, r0, #0
   13ad4:	beq	13e5c <__assert_fail@plt+0x2234>
   13ad8:	mov	r2, r5
   13adc:	ldr	r1, [r4, #40]	; 0x28
   13ae0:	bl	11808 <memcpy@plt>
   13ae4:	str	r6, [r4, #40]	; 0x28
   13ae8:	ldr	r0, [r4, #48]	; 0x30
   13aec:	cmp	r0, #0
   13af0:	beq	13b1c <__assert_fail@plt+0x1ef4>
   13af4:	bl	119dc <strlen@plt>
   13af8:	add	r5, r0, #1
   13afc:	mov	r0, r5
   13b00:	bl	18be0 <argp_parse@@Base+0x1eb8>
   13b04:	subs	r6, r0, #0
   13b08:	beq	13e5c <__assert_fail@plt+0x2234>
   13b0c:	mov	r2, r5
   13b10:	ldr	r1, [r4, #48]	; 0x30
   13b14:	bl	11808 <memcpy@plt>
   13b18:	str	r6, [r4, #48]	; 0x30
   13b1c:	ldr	r6, [r4, #56]	; 0x38
   13b20:	lsl	r6, r6, #2
   13b24:	mov	r0, r6
   13b28:	bl	18be0 <argp_parse@@Base+0x1eb8>
   13b2c:	subs	r5, r0, #0
   13b30:	beq	13e5c <__assert_fail@plt+0x2234>
   13b34:	mov	r2, r6
   13b38:	ldr	r1, [r4, #52]	; 0x34
   13b3c:	bl	11808 <memcpy@plt>
   13b40:	ldr	r2, [r4, #56]	; 0x38
   13b44:	str	r5, [r4, #52]	; 0x34
   13b48:	cmp	r2, #0
   13b4c:	beq	13ba8 <__assert_fail@plt+0x1f80>
   13b50:	mov	r3, r5
   13b54:	mov	r6, #0
   13b58:	b	13b60 <__assert_fail@plt+0x1f38>
   13b5c:	ldr	r3, [r4, #52]	; 0x34
   13b60:	ldr	r0, [r3, r6, lsl #2]
   13b64:	add	r5, r3, r6, lsl #2
   13b68:	cmp	r0, #0
   13b6c:	beq	13b9c <__assert_fail@plt+0x1f74>
   13b70:	bl	119dc <strlen@plt>
   13b74:	add	r7, r0, #1
   13b78:	mov	r0, r7
   13b7c:	bl	18be0 <argp_parse@@Base+0x1eb8>
   13b80:	subs	r9, r0, #0
   13b84:	beq	13e5c <__assert_fail@plt+0x2234>
   13b88:	mov	r2, r7
   13b8c:	ldr	r1, [r5]
   13b90:	bl	11808 <memcpy@plt>
   13b94:	ldr	r2, [r4, #56]	; 0x38
   13b98:	str	r9, [r5]
   13b9c:	add	r6, r6, #1
   13ba0:	cmp	r6, r2
   13ba4:	bcc	13b5c <__assert_fail@plt+0x1f34>
   13ba8:	mvn	r3, #0
   13bac:	str	r3, [r4, #60]	; 0x3c
   13bb0:	add	r0, sp, #168	; 0xa8
   13bb4:	bl	11ac0 <sigemptyset@plt>
   13bb8:	mov	r1, #17
   13bbc:	add	r0, sp, #168	; 0xa8
   13bc0:	bl	11964 <sigaddset@plt>
   13bc4:	mov	r1, #1
   13bc8:	add	r0, sp, #168	; 0xa8
   13bcc:	bl	11964 <sigaddset@plt>
   13bd0:	mov	r1, #14
   13bd4:	add	r0, sp, #168	; 0xa8
   13bd8:	bl	11964 <sigaddset@plt>
   13bdc:	add	r1, sp, #168	; 0xa8
   13be0:	add	r2, sp, #40	; 0x28
   13be4:	mov	r0, #0
   13be8:	bl	117b4 <sigprocmask@plt>
   13bec:	ldr	r3, [r8]
   13bf0:	add	r1, sp, #40	; 0x28
   13bf4:	str	r3, [r4, #220]	; 0xdc
   13bf8:	mov	r2, #0
   13bfc:	mov	r0, #2
   13c00:	str	r4, [r8]
   13c04:	bl	117b4 <sigprocmask@plt>
   13c08:	mov	r0, r4
   13c0c:	add	sp, sp, #300	; 0x12c
   13c10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c14:	add	r0, sp, #168	; 0xa8
   13c18:	bl	11ac0 <sigemptyset@plt>
   13c1c:	mov	r1, #17
   13c20:	add	r0, sp, #168	; 0xa8
   13c24:	bl	11964 <sigaddset@plt>
   13c28:	mov	r1, #1
   13c2c:	add	r0, sp, #168	; 0xa8
   13c30:	bl	11964 <sigaddset@plt>
   13c34:	mov	r1, #14
   13c38:	add	r0, sp, #168	; 0xa8
   13c3c:	bl	11964 <sigaddset@plt>
   13c40:	add	r1, sp, #168	; 0xa8
   13c44:	mov	r0, r9
   13c48:	add	r2, sp, #40	; 0x28
   13c4c:	bl	117b4 <sigprocmask@plt>
   13c50:	ldr	r3, [r5, #44]	; 0x2c
   13c54:	cmp	r3, #0
   13c58:	beq	13d90 <__assert_fail@plt+0x2168>
   13c5c:	ldr	r3, [r5, #36]	; 0x24
   13c60:	ldr	r1, [r4, #52]	; 0x34
   13c64:	cmp	r3, #0
   13c68:	ldr	r0, [r4, #56]	; 0x38
   13c6c:	ldrne	r2, [r4, #36]	; 0x24
   13c70:	strne	r3, [r4, #36]	; 0x24
   13c74:	ldr	r3, [r5, #40]	; 0x28
   13c78:	strne	r2, [r5, #36]	; 0x24
   13c7c:	cmp	r3, #0
   13c80:	ldrne	r2, [r4, #40]	; 0x28
   13c84:	strne	r3, [r4, #40]	; 0x28
   13c88:	ldr	r3, [r5, #48]	; 0x30
   13c8c:	strne	r2, [r5, #40]	; 0x28
   13c90:	cmp	r3, #0
   13c94:	ldrne	r2, [r4, #48]	; 0x30
   13c98:	strne	r3, [r4, #48]	; 0x30
   13c9c:	strne	r2, [r5, #48]	; 0x30
   13ca0:	bl	15df8 <__assert_fail@plt+0x41d0>
   13ca4:	ldr	r0, [r5, #56]	; 0x38
   13ca8:	ldr	r2, [r5, #52]	; 0x34
   13cac:	mov	r3, #0
   13cb0:	mov	ip, #1
   13cb4:	str	r0, [r4, #56]	; 0x38
   13cb8:	str	r2, [r4, #52]	; 0x34
   13cbc:	add	r1, sp, #40	; 0x28
   13cc0:	str	r3, [r5, #56]	; 0x38
   13cc4:	str	r3, [r5, #52]	; 0x34
   13cc8:	mov	r2, r3
   13ccc:	mov	r0, #2
   13cd0:	strh	ip, [r4, #32]
   13cd4:	bl	117b4 <sigprocmask@plt>
   13cd8:	ldr	r3, [pc, #388]	; 13e64 <__assert_fail@plt+0x223c>
   13cdc:	ldrb	r3, [r3]
   13ce0:	cmp	r3, #0
   13ce4:	beq	13c08 <__assert_fail@plt+0x1fe0>
   13ce8:	ldr	r1, [r4, #64]	; 0x40
   13cec:	ldr	r3, [pc, #372]	; 13e68 <__assert_fail@plt+0x2240>
   13cf0:	sub	r2, r1, #1
   13cf4:	cmp	r2, #1
   13cf8:	ldr	r0, [r3]
   13cfc:	ldm	r4, {r2, r3}
   13d00:	bls	13d78 <__assert_fail@plt+0x2150>
   13d04:	ldr	r1, [r4, #8]
   13d08:	ldr	ip, [pc, #348]	; 13e6c <__assert_fail@plt+0x2244>
   13d0c:	cmp	r1, #0
   13d10:	moveq	r1, ip
   13d14:	ldr	ip, [r4, #44]	; 0x2c
   13d18:	add	r5, r4, #20
   13d1c:	cmp	ip, #0
   13d20:	ldm	r5, {r5, r6, r7}
   13d24:	ldr	lr, [r4, #12]
   13d28:	ldrne	sl, [ip]
   13d2c:	ldr	r8, [r4, #36]	; 0x24
   13d30:	ldr	r9, [r4, #40]	; 0x28
   13d34:	ldr	fp, [r4, #48]	; 0x30
   13d38:	ldreq	sl, [pc, #304]	; 13e70 <__assert_fail@plt+0x2248>
   13d3c:	ldr	ip, [pc, #304]	; 13e74 <__assert_fail@plt+0x224c>
   13d40:	stmib	sp, {r1, lr}
   13d44:	str	fp, [sp, #36]	; 0x24
   13d48:	str	sl, [sp, #32]
   13d4c:	str	r9, [sp, #28]
   13d50:	str	r8, [sp, #24]
   13d54:	str	r7, [sp, #20]
   13d58:	str	r6, [sp, #16]
   13d5c:	str	r5, [sp, #12]
   13d60:	str	ip, [sp]
   13d64:	ldr	r1, [pc, #268]	; 13e78 <__assert_fail@plt+0x2250>
   13d68:	bl	11a0c <fprintf@plt>
   13d6c:	mov	r0, r4
   13d70:	add	sp, sp, #300	; 0x12c
   13d74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d78:	ldr	lr, [pc, #252]	; 13e7c <__assert_fail@plt+0x2254>
   13d7c:	ldr	ip, [pc, #252]	; 13e80 <__assert_fail@plt+0x2258>
   13d80:	cmp	r1, #2
   13d84:	movne	r1, lr
   13d88:	moveq	r1, ip
   13d8c:	b	13d14 <__assert_fail@plt+0x20ec>
   13d90:	ldr	r3, [r4, #24]
   13d94:	cmp	r3, #1
   13d98:	ldr	r3, [r5, #24]
   13d9c:	beq	13da8 <__assert_fail@plt+0x2180>
   13da0:	cmp	r3, #0
   13da4:	bne	13c5c <__assert_fail@plt+0x2034>
   13da8:	str	r3, [r4, #24]
   13dac:	b	13c5c <__assert_fail@plt+0x2034>
   13db0:	ldr	r1, [r5, #64]	; 0x40
   13db4:	ldr	r3, [pc, #172]	; 13e68 <__assert_fail@plt+0x2240>
   13db8:	sub	r2, r1, #1
   13dbc:	cmp	r2, #1
   13dc0:	ldr	r0, [r3]
   13dc4:	ldm	r5, {r2, r3}
   13dc8:	bls	13e30 <__assert_fail@plt+0x2208>
   13dcc:	ldr	r1, [r5, #8]
   13dd0:	ldr	ip, [pc, #148]	; 13e6c <__assert_fail@plt+0x2244>
   13dd4:	cmp	r1, #0
   13dd8:	moveq	r1, ip
   13ddc:	ldr	ip, [r5, #44]	; 0x2c
   13de0:	add	r6, r5, #20
   13de4:	cmp	ip, #0
   13de8:	ldm	r6, {r6, r7, r9}
   13dec:	ldrne	ip, [ip]
   13df0:	ldreq	ip, [pc, #120]	; 13e70 <__assert_fail@plt+0x2248>
   13df4:	ldr	r4, [r5, #12]
   13df8:	ldr	sl, [r5, #36]	; 0x24
   13dfc:	ldr	fp, [r5, #40]	; 0x28
   13e00:	ldr	lr, [r5, #48]	; 0x30
   13e04:	str	ip, [sp, #32]
   13e08:	ldr	ip, [pc, #116]	; 13e84 <__assert_fail@plt+0x225c>
   13e0c:	stmib	sp, {r1, r4, r6, r7}
   13e10:	str	fp, [sp, #28]
   13e14:	str	sl, [sp, #24]
   13e18:	str	r9, [sp, #20]
   13e1c:	str	lr, [sp, #36]	; 0x24
   13e20:	str	ip, [sp]
   13e24:	ldr	r1, [pc, #76]	; 13e78 <__assert_fail@plt+0x2250>
   13e28:	bl	11a0c <fprintf@plt>
   13e2c:	b	139c8 <__assert_fail@plt+0x1da0>
   13e30:	ldr	lr, [pc, #68]	; 13e7c <__assert_fail@plt+0x2254>
   13e34:	ldr	ip, [pc, #68]	; 13e80 <__assert_fail@plt+0x2258>
   13e38:	cmp	r1, #2
   13e3c:	movne	r1, lr
   13e40:	moveq	r1, ip
   13e44:	b	13ddc <__assert_fail@plt+0x21b4>
   13e48:	mov	r0, #3
   13e4c:	ldr	r1, [pc, #52]	; 13e88 <__assert_fail@plt+0x2260>
   13e50:	bl	11b14 <syslog@plt>
   13e54:	mvn	r0, #0
   13e58:	bl	119c4 <exit@plt>
   13e5c:	bl	11c34 <__assert_fail@plt+0xc>
   13e60:	andeq	r1, r3, ip, lsl #12
   13e64:			; <UNDEFINED> instruction: 0x000313bc
   13e68:			; <UNDEFINED> instruction: 0x000313b0
   13e6c:	andeq	pc, r1, r4, lsl #8
   13e70:	andeq	pc, r1, r4, lsl r4	; <UNPREDICTABLE>
   13e74:	andeq	pc, r1, r4, ror r5	; <UNPREDICTABLE>
   13e78:	andeq	pc, r1, r8, lsl r4	; <UNPREDICTABLE>
   13e7c:	andeq	pc, r1, r4, lsl r8	; <UNPREDICTABLE>
   13e80:	andeq	pc, r1, r8, lsl #8
   13e84:	andeq	pc, r1, ip, ror r5	; <UNPREDICTABLE>
   13e88:	andeq	pc, r1, r4, ror r7	; <UNPREDICTABLE>
   13e8c:	push	{r4, r5, r6, r7, r8, lr}
   13e90:	mov	r5, r0
   13e94:	ldr	r4, [r0, #8]
   13e98:	sub	sp, sp, #32
   13e9c:	cmp	r4, #0
   13ea0:	mov	r7, r1
   13ea4:	mov	r8, r2
   13ea8:	beq	13f74 <__assert_fail@plt+0x234c>
   13eac:	ldr	r1, [pc, #268]	; 13fc0 <__assert_fail@plt+0x2398>
   13eb0:	mov	r0, r4
   13eb4:	bl	11c1c <strspn@plt>
   13eb8:	mov	r6, r0
   13ebc:	mov	r0, r4
   13ec0:	bl	119dc <strlen@plt>
   13ec4:	cmp	r6, r0
   13ec8:	beq	13ef4 <__assert_fail@plt+0x22cc>
   13ecc:	mov	r1, #58	; 0x3a
   13ed0:	mov	r0, r4
   13ed4:	bl	119f4 <strchr@plt>
   13ed8:	cmp	r0, #0
   13edc:	beq	13f4c <__assert_fail@plt+0x2324>
   13ee0:	ldr	r1, [pc, #220]	; 13fc4 <__assert_fail@plt+0x239c>
   13ee4:	mov	r0, r4
   13ee8:	bl	11c1c <strspn@plt>
   13eec:	cmp	r0, #0
   13ef0:	beq	13f4c <__assert_fail@plt+0x2324>
   13ef4:	mov	r0, sp
   13ef8:	mov	r2, #32
   13efc:	mov	r1, #0
   13f00:	bl	11a54 <memset@plt>
   13f04:	ldrb	r3, [r5, #70]	; 0x46
   13f08:	mov	r6, sp
   13f0c:	ldrh	ip, [r5, #68]	; 0x44
   13f10:	cmp	r3, #0
   13f14:	bne	13fb0 <__assert_fail@plt+0x2388>
   13f18:	mov	r3, #5
   13f1c:	str	r3, [sp]
   13f20:	ldr	lr, [r5, #16]
   13f24:	mov	r3, r8
   13f28:	mov	r2, r6
   13f2c:	mov	r0, r4
   13f30:	ldr	r1, [r5, #12]
   13f34:	str	ip, [sp, #4]
   13f38:	str	r7, [sp, #12]
   13f3c:	str	lr, [sp, #8]
   13f40:	bl	11ba4 <getaddrinfo@plt>
   13f44:	add	sp, sp, #32
   13f48:	pop	{r4, r5, r6, r7, r8, pc}
   13f4c:	ldr	r3, [pc, #116]	; 13fc8 <__assert_fail@plt+0x23a0>
   13f50:	ldrb	r3, [r3]
   13f54:	cmp	r3, #0
   13f58:	beq	13f74 <__assert_fail@plt+0x234c>
   13f5c:	ldr	r3, [pc, #104]	; 13fcc <__assert_fail@plt+0x23a4>
   13f60:	mov	r2, r4
   13f64:	ldr	r1, [pc, #100]	; 13fd0 <__assert_fail@plt+0x23a8>
   13f68:	ldr	r0, [r3]
   13f6c:	bl	11a0c <fprintf@plt>
   13f70:	ldr	r4, [r5, #8]
   13f74:	mov	r2, #32
   13f78:	mov	r0, sp
   13f7c:	mov	r1, #0
   13f80:	bl	11a54 <memset@plt>
   13f84:	ldrb	r3, [r5, #70]	; 0x46
   13f88:	mov	r2, #1
   13f8c:	mov	r6, sp
   13f90:	cmp	r3, #0
   13f94:	str	r2, [sp]
   13f98:	ldrh	ip, [r5, #68]	; 0x44
   13f9c:	beq	13f20 <__assert_fail@plt+0x22f8>
   13fa0:	cmp	ip, #2
   13fa4:	movne	r3, #9
   13fa8:	strne	r3, [sp]
   13fac:	b	13f20 <__assert_fail@plt+0x22f8>
   13fb0:	cmp	ip, #2
   13fb4:	movne	r3, #13
   13fb8:	moveq	r3, #5
   13fbc:	b	13f1c <__assert_fail@plt+0x22f4>
   13fc0:	andeq	pc, r1, r4, lsl #11
   13fc4:	muleq	r1, r0, r5
   13fc8:			; <UNDEFINED> instruction: 0x000313bc
   13fcc:			; <UNDEFINED> instruction: 0x000313b0
   13fd0:	andeq	pc, r1, ip, lsr #11
   13fd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13fd8:	mov	r2, #3
   13fdc:	ldr	r4, [r0, #20]
   13fe0:	sub	sp, sp, #20
   13fe4:	mov	r6, r0
   13fe8:	ldr	r1, [pc, #720]	; 142c0 <__assert_fail@plt+0x2698>
   13fec:	mov	r0, r4
   13ff0:	bl	11bd4 <strncmp@plt>
   13ff4:	cmp	r0, #0
   13ff8:	beq	14208 <__assert_fail@plt+0x25e0>
   13ffc:	mov	r2, #3
   14000:	ldr	r1, [pc, #700]	; 142c4 <__assert_fail@plt+0x269c>
   14004:	mov	r0, r4
   14008:	bl	11bd4 <strncmp@plt>
   1400c:	cmp	r0, #0
   14010:	movne	r0, r4
   14014:	ldreq	r0, [pc, #680]	; 142c4 <__assert_fail@plt+0x269c>
   14018:	bl	117a8 <getprotobyname@plt>
   1401c:	mov	r4, r0
   14020:	cmp	r4, #0
   14024:	beq	1421c <__assert_fail@plt+0x25f4>
   14028:	add	r2, sp, #12
   1402c:	ldr	r1, [r4, #8]
   14030:	mov	r0, r6
   14034:	bl	13e8c <__assert_fail@plt+0x2264>
   14038:	cmn	r0, #9
   1403c:	mov	r8, r0
   14040:	beq	1418c <__assert_fail@plt+0x2564>
   14044:	cmp	r8, #0
   14048:	bne	14170 <__assert_fail@plt+0x2548>
   1404c:	ldr	r4, [sp, #12]
   14050:	cmp	r4, #0
   14054:	beq	1415c <__assert_fail@plt+0x2534>
   14058:	ldr	sl, [pc, #616]	; 142c8 <__assert_fail@plt+0x26a0>
   1405c:	ldr	r9, [pc, #616]	; 142cc <__assert_fail@plt+0x26a4>
   14060:	ldr	fp, [pc, #616]	; 142d0 <__assert_fail@plt+0x26a8>
   14064:	add	r7, r6, #72	; 0x48
   14068:	b	14078 <__assert_fail@plt+0x2450>
   1406c:	ldr	r4, [r4, #28]
   14070:	cmp	r4, #0
   14074:	beq	14158 <__assert_fail@plt+0x2530>
   14078:	mov	r2, #128	; 0x80
   1407c:	mov	r1, #0
   14080:	mov	r0, r7
   14084:	bl	11a54 <memset@plt>
   14088:	ldr	r2, [r4, #16]
   1408c:	ldr	r1, [r4, #20]
   14090:	mov	r0, r7
   14094:	bl	11808 <memcpy@plt>
   14098:	ldr	r3, [r4, #16]
   1409c:	mov	r0, r6
   140a0:	str	r3, [r6, #200]	; 0xc8
   140a4:	bl	13918 <__assert_fail@plt+0x1cf0>
   140a8:	mov	r2, #1
   140ac:	ldr	r3, [r0, #60]	; 0x3c
   140b0:	mov	r5, r0
   140b4:	cmn	r3, #1
   140b8:	strh	r2, [r0, #32]
   140bc:	bne	1406c <__assert_fail@plt+0x2444>
   140c0:	bl	133e0 <__assert_fail@plt+0x17b8>
   140c4:	cmp	r0, #0
   140c8:	bne	1406c <__assert_fail@plt+0x2444>
   140cc:	ldr	r3, [r5, #16]
   140d0:	cmp	r3, #1
   140d4:	beq	14268 <__assert_fail@plt+0x2640>
   140d8:	ldr	r3, [r5, #60]	; 0x3c
   140dc:	ldr	ip, [pc, #496]	; 142d4 <__assert_fail@plt+0x26ac>
   140e0:	cmp	r3, #0
   140e4:	asr	r1, r3, #31
   140e8:	add	r2, r3, #31
   140ec:	movge	r2, r3
   140f0:	lsr	r0, r1, #27
   140f4:	asr	r2, r2, #5
   140f8:	add	r1, r3, r0
   140fc:	and	r1, r1, #31
   14100:	mov	lr, #1
   14104:	sub	r1, r1, r0
   14108:	ldr	r0, [sl, r2, lsl #2]
   1410c:	ldrb	ip, [ip]
   14110:	orr	r1, r0, lr, lsl r1
   14114:	ldr	r0, [fp]
   14118:	ldr	lr, [r9]
   1411c:	cmp	r3, r0
   14120:	add	lr, lr, #1
   14124:	strgt	r3, [fp]
   14128:	cmp	ip, #0
   1412c:	str	r1, [sl, r2, lsl #2]
   14130:	str	lr, [r9]
   14134:	beq	1406c <__assert_fail@plt+0x2444>
   14138:	ldr	r0, [pc, #408]	; 142d8 <__assert_fail@plt+0x26b0>
   1413c:	ldr	r2, [r5, #48]	; 0x30
   14140:	ldr	r1, [pc, #404]	; 142dc <__assert_fail@plt+0x26b4>
   14144:	ldr	r0, [r0]
   14148:	bl	11a0c <fprintf@plt>
   1414c:	ldr	r4, [r4, #28]
   14150:	cmp	r4, #0
   14154:	bne	14078 <__assert_fail@plt+0x2450>
   14158:	ldr	r4, [sp, #12]
   1415c:	mov	r0, r4
   14160:	bl	11b98 <freeaddrinfo@plt>
   14164:	mov	r0, r8
   14168:	add	sp, sp, #20
   1416c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14170:	cmn	r8, #11
   14174:	bne	14198 <__assert_fail@plt+0x2570>
   14178:	bl	11a24 <__errno_location@plt>
   1417c:	ldr	r0, [r0]
   14180:	bl	1197c <strerror@plt>
   14184:	mov	r4, r0
   14188:	b	141a4 <__assert_fail@plt+0x257c>
   1418c:	ldrh	r3, [r6, #68]	; 0x44
   14190:	cmp	r3, #10
   14194:	beq	1423c <__assert_fail@plt+0x2614>
   14198:	mov	r0, r8
   1419c:	bl	117e4 <gai_strerror@plt>
   141a0:	mov	r4, r0
   141a4:	ldr	r2, [r6, #8]
   141a8:	ldr	r3, [pc, #292]	; 142d4 <__assert_fail@plt+0x26ac>
   141ac:	cmp	r2, #0
   141b0:	ldrb	r3, [r3]
   141b4:	beq	14278 <__assert_fail@plt+0x2650>
   141b8:	cmp	r3, #0
   141bc:	beq	141e0 <__assert_fail@plt+0x25b8>
   141c0:	ldr	r1, [r6, #20]
   141c4:	ldr	r0, [pc, #268]	; 142d8 <__assert_fail@plt+0x26b0>
   141c8:	ldr	r3, [r6, #12]
   141cc:	ldr	r0, [r0]
   141d0:	stm	sp, {r1, r4}
   141d4:	ldr	r1, [pc, #260]	; 142e0 <__assert_fail@plt+0x26b8>
   141d8:	bl	11a0c <fprintf@plt>
   141dc:	ldr	r2, [r6, #8]
   141e0:	ldr	r1, [r6, #20]
   141e4:	ldr	r3, [r6, #12]
   141e8:	mov	r0, #3
   141ec:	stm	sp, {r1, r4}
   141f0:	ldr	r1, [pc, #236]	; 142e4 <__assert_fail@plt+0x26bc>
   141f4:	bl	11b14 <syslog@plt>
   141f8:	mov	r8, #1
   141fc:	mov	r0, r8
   14200:	add	sp, sp, #20
   14204:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14208:	ldr	r0, [pc, #176]	; 142c0 <__assert_fail@plt+0x2698>
   1420c:	bl	117a8 <getprotobyname@plt>
   14210:	mov	r4, r0
   14214:	cmp	r4, #0
   14218:	bne	14028 <__assert_fail@plt+0x2400>
   1421c:	ldr	r2, [r6, #20]
   14220:	ldr	r1, [pc, #192]	; 142e8 <__assert_fail@plt+0x26c0>
   14224:	mov	r0, #3
   14228:	bl	11b14 <syslog@plt>
   1422c:	mov	r8, #1
   14230:	mov	r0, r8
   14234:	add	sp, sp, #20
   14238:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1423c:	ldrb	r3, [r6, #70]	; 0x46
   14240:	cmp	r3, #0
   14244:	beq	14198 <__assert_fail@plt+0x2570>
   14248:	mov	r3, #2
   1424c:	ldr	r1, [r4, #8]
   14250:	add	r2, sp, #12
   14254:	strh	r3, [r6, #68]	; 0x44
   14258:	mov	r0, r6
   1425c:	bl	13e8c <__assert_fail@plt+0x2264>
   14260:	mov	r8, r0
   14264:	b	14044 <__assert_fail@plt+0x241c>
   14268:	mov	r1, #10
   1426c:	ldr	r0, [r5, #60]	; 0x3c
   14270:	bl	11af0 <listen@plt>
   14274:	b	140d8 <__assert_fail@plt+0x24b0>
   14278:	cmp	r3, #0
   1427c:	bne	142a0 <__assert_fail@plt+0x2678>
   14280:	ldr	r3, [r6, #20]
   14284:	ldr	r2, [r6, #12]
   14288:	ldr	r1, [pc, #92]	; 142ec <__assert_fail@plt+0x26c4>
   1428c:	str	r4, [sp]
   14290:	mov	r0, #3
   14294:	bl	11b14 <syslog@plt>
   14298:	mov	r8, #1
   1429c:	b	141fc <__assert_fail@plt+0x25d4>
   142a0:	ldr	r1, [pc, #48]	; 142d8 <__assert_fail@plt+0x26b0>
   142a4:	ldr	r3, [r6, #20]
   142a8:	ldr	r2, [r6, #12]
   142ac:	ldr	r0, [r1]
   142b0:	str	r4, [sp]
   142b4:	ldr	r1, [pc, #52]	; 142f0 <__assert_fail@plt+0x26c8>
   142b8:	bl	11a0c <fprintf@plt>
   142bc:	b	14280 <__assert_fail@plt+0x2658>
   142c0:			; <UNDEFINED> instruction: 0x0001f4bc
   142c4:	andeq	pc, r1, r4, asr #11
   142c8:	andeq	r1, r3, r8, ror #10
   142cc:	andeq	r1, r3, ip, ror #11
   142d0:	andeq	r1, r3, r4, ror #10
   142d4:			; <UNDEFINED> instruction: 0x000313bc
   142d8:			; <UNDEFINED> instruction: 0x000313b0
   142dc:	andeq	pc, r1, ip, asr r5	; <UNPREDICTABLE>
   142e0:	andeq	pc, r1, r0, ror #11
   142e4:	andeq	pc, r1, r4, lsl #12
   142e8:	andeq	pc, r1, r8, asr #11
   142ec:	andeq	pc, r1, r0, asr #12
   142f0:	andeq	pc, r1, r0, lsr #12
   142f4:	ldr	r1, [pc]	; 142fc <__assert_fail@plt+0x26d4>
   142f8:	b	11b74 <fopen64@plt>
   142fc:	andeq	r0, r2, r0, lsl #13
   14300:	cmp	r0, #0
   14304:	bxeq	lr
   14308:	b	11a9c <fclose@plt>
   1430c:	push	{r4, lr}
   14310:	mov	r4, r0
   14314:	ldr	r0, [r0, #8]
   14318:	bl	17ca4 <argp_parse@@Base+0xf7c>
   1431c:	ldr	r0, [r4, #12]
   14320:	bl	17ca4 <argp_parse@@Base+0xf7c>
   14324:	ldr	r0, [r4, #20]
   14328:	bl	17ca4 <argp_parse@@Base+0xf7c>
   1432c:	ldr	r0, [r4, #36]	; 0x24
   14330:	bl	17ca4 <argp_parse@@Base+0xf7c>
   14334:	ldr	r0, [r4, #40]	; 0x28
   14338:	bl	17ca4 <argp_parse@@Base+0xf7c>
   1433c:	ldr	r0, [r4, #48]	; 0x30
   14340:	bl	17ca4 <argp_parse@@Base+0xf7c>
   14344:	ldr	r1, [r4, #52]	; 0x34
   14348:	ldr	r0, [r4, #56]	; 0x38
   1434c:	pop	{r4, lr}
   14350:	b	15df8 <__assert_fail@plt+0x41d0>
   14354:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14358:	mov	r9, r0
   1435c:	ldr	r8, [pc, #160]	; 14404 <__assert_fail@plt+0x27dc>
   14360:	ldr	r3, [r8]
   14364:	cmp	r3, #0
   14368:	beq	143d4 <__assert_fail@plt+0x27ac>
   1436c:	ldr	r6, [pc, #148]	; 14408 <__assert_fail@plt+0x27e0>
   14370:	ldr	r1, [pc, #148]	; 1440c <__assert_fail@plt+0x27e4>
   14374:	ldr	r0, [r6]
   14378:	add	r0, r3, r0
   1437c:	bl	11778 <strcspn@plt>
   14380:	mov	r5, r0
   14384:	add	r0, r0, #1
   14388:	bl	18be0 <argp_parse@@Base+0x1eb8>
   1438c:	cmp	r0, #0
   14390:	mov	r7, r0
   14394:	str	r0, [r9, #8]
   14398:	beq	143f0 <__assert_fail@plt+0x27c8>
   1439c:	ldr	r4, [r6]
   143a0:	ldr	sl, [r8]
   143a4:	mov	r2, r5
   143a8:	add	r1, sl, r4
   143ac:	bl	11808 <memcpy@plt>
   143b0:	add	r3, r5, r4
   143b4:	mov	r2, #0
   143b8:	str	r3, [r6]
   143bc:	strb	r2, [r7, r5]
   143c0:	ldrb	r4, [sl, r3]
   143c4:	cmp	r4, r2
   143c8:	addne	r3, r3, #1
   143cc:	strne	r3, [r6]
   143d0:	beq	143dc <__assert_fail@plt+0x27b4>
   143d4:	mov	r0, r9
   143d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   143dc:	mov	r0, sl
   143e0:	bl	17ca4 <argp_parse@@Base+0xf7c>
   143e4:	str	r4, [r8]
   143e8:	mov	r0, r9
   143ec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   143f0:	mov	r0, #3
   143f4:	ldr	r1, [pc, #20]	; 14410 <__assert_fail@plt+0x27e8>
   143f8:	bl	11b14 <syslog@plt>
   143fc:	mvn	r0, #0
   14400:	bl	119c4 <exit@plt>
   14404:	andeq	r1, r3, r4, lsl #12
   14408:	strdeq	r1, [r3], -ip
   1440c:	andeq	pc, r1, r8, asr r6	; <UNPREDICTABLE>
   14410:	andeq	pc, r1, ip, asr r6	; <UNPREDICTABLE>
   14414:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14418:	mov	r5, r0
   1441c:	ldr	r9, [pc, #1940]	; 14bb8 <__assert_fail@plt+0x2f90>
   14420:	sub	sp, sp, #36	; 0x24
   14424:	mov	r3, #0
   14428:	ldr	r0, [r9]
   1442c:	str	r1, [sp, #8]
   14430:	cmp	r0, r3
   14434:	str	r3, [sp, #20]
   14438:	str	r3, [sp, #24]
   1443c:	beq	14450 <__assert_fail@plt+0x2828>
   14440:	ldr	r0, [pc, #1908]	; 14bbc <__assert_fail@plt+0x2f94>
   14444:	bl	14354 <__assert_fail@plt+0x272c>
   14448:	add	sp, sp, #36	; 0x24
   1444c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14450:	ldr	r4, [pc, #1896]	; 14bc0 <__assert_fail@plt+0x2f98>
   14454:	mov	r1, r0
   14458:	str	r0, [sp, #12]
   1445c:	mov	r6, r2
   14460:	add	r0, r4, #8
   14464:	mov	r2, #224	; 0xe0
   14468:	bl	11a54 <memset@plt>
   1446c:	ldr	r3, [sp, #12]
   14470:	add	r8, r4, #232	; 0xe8
   14474:	mov	r0, r3
   14478:	mov	fp, #224	; 0xe0
   1447c:	mov	sl, #0
   14480:	mov	r7, #10
   14484:	mov	r1, r3
   14488:	bl	15df8 <__assert_fail@plt+0x41d0>
   1448c:	ldr	r0, [r4, #16]
   14490:	bl	17ca4 <argp_parse@@Base+0xf7c>
   14494:	ldr	r0, [r4, #20]
   14498:	bl	17ca4 <argp_parse@@Base+0xf7c>
   1449c:	ldr	r0, [r4, #28]
   144a0:	bl	17ca4 <argp_parse@@Base+0xf7c>
   144a4:	ldr	r0, [r4, #44]	; 0x2c
   144a8:	bl	17ca4 <argp_parse@@Base+0xf7c>
   144ac:	ldr	r0, [r4, #48]	; 0x30
   144b0:	bl	17ca4 <argp_parse@@Base+0xf7c>
   144b4:	ldr	r0, [r4, #56]	; 0x38
   144b8:	bl	17ca4 <argp_parse@@Base+0xf7c>
   144bc:	ldr	r1, [r4, #60]	; 0x3c
   144c0:	ldr	r0, [r4, #64]	; 0x40
   144c4:	bl	15df8 <__assert_fail@plt+0x41d0>
   144c8:	mov	r2, fp
   144cc:	mov	r1, sl
   144d0:	ldr	r0, [pc, #1764]	; 14bbc <__assert_fail@plt+0x2f94>
   144d4:	bl	11a54 <memset@plt>
   144d8:	b	14514 <__assert_fail@plt+0x28ec>
   144dc:	ldr	r2, [r4, #236]	; 0xec
   144e0:	beq	14504 <__assert_fail@plt+0x28dc>
   144e4:	sub	r0, r0, #1
   144e8:	ldrb	r3, [r2, r0]
   144ec:	cmp	r3, #10
   144f0:	strbeq	sl, [r2, r0]
   144f4:	ldr	r3, [r6]
   144f8:	ldreq	r2, [r4, #236]	; 0xec
   144fc:	add	r3, r3, #1
   14500:	str	r3, [r6]
   14504:	ldrb	r3, [r2]
   14508:	cmp	r3, #0
   1450c:	cmpne	r3, #35	; 0x23
   14510:	bne	1453c <__assert_fail@plt+0x2914>
   14514:	mov	r3, r5
   14518:	mov	r2, r7
   1451c:	mov	r1, r8
   14520:	ldr	r0, [pc, #1692]	; 14bc4 <__assert_fail@plt+0x2f9c>
   14524:	bl	1173c <__getdelim@plt>
   14528:	cmp	r0, #0
   1452c:	bge	144dc <__assert_fail@plt+0x28b4>
   14530:	mov	r0, #0
   14534:	add	sp, sp, #36	; 0x24
   14538:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1453c:	mov	r0, r2
   14540:	add	r3, sp, #24
   14544:	add	r2, sp, #20
   14548:	ldr	r1, [pc, #1656]	; 14bc8 <__assert_fail@plt+0x2fa0>
   1454c:	bl	15c2c <__assert_fail@plt+0x4004>
   14550:	cmp	r0, #0
   14554:	ldrne	r0, [sp, #20]
   14558:	ldrne	r1, [sp, #24]
   1455c:	bne	14488 <__assert_fail@plt+0x2860>
   14560:	ldr	r2, [sp, #20]
   14564:	str	r0, [sp, #12]
   14568:	cmp	r2, #5
   1456c:	ble	14914 <__assert_fail@plt+0x2cec>
   14570:	ldr	r7, [sp, #24]
   14574:	ldr	r3, [sp, #8]
   14578:	ldr	r2, [r6]
   1457c:	str	r3, [r4, #8]
   14580:	ldr	sl, [r7]
   14584:	mov	r1, #58	; 0x3a
   14588:	mov	r0, sl
   1458c:	str	r2, [r4, #12]
   14590:	bl	11ae4 <strrchr@plt>
   14594:	ldr	r3, [sp, #12]
   14598:	subs	fp, r0, #0
   1459c:	beq	14a80 <__assert_fail@plt+0x2e58>
   145a0:	strb	r3, [fp]
   145a4:	ldr	r1, [pc, #1568]	; 14bcc <__assert_fail@plt+0x2fa4>
   145a8:	mov	r0, sl
   145ac:	str	r3, [sp, #12]
   145b0:	bl	11754 <strcmp@plt>
   145b4:	add	r7, fp, #1
   145b8:	cmp	r0, #0
   145bc:	bne	149fc <__assert_fail@plt+0x2dd4>
   145c0:	mov	r2, #7
   145c4:	ldr	r1, [pc, #1540]	; 14bd0 <__assert_fail@plt+0x2fa8>
   145c8:	mov	r0, r7
   145cc:	bl	11bd4 <strncmp@plt>
   145d0:	cmp	r0, #0
   145d4:	bne	149dc <__assert_fail@plt+0x2db4>
   145d8:	ldrb	r3, [r7, #7]
   145dc:	cmp	r3, #43	; 0x2b
   145e0:	moveq	r3, #2
   145e4:	addeq	r0, r7, #8
   145e8:	streq	r3, [r4, #72]	; 0x48
   145ec:	beq	14604 <__assert_fail@plt+0x29dc>
   145f0:	cmn	r7, #7
   145f4:	ldr	r0, [pc, #1484]	; 14bc8 <__assert_fail@plt+0x2fa0>
   145f8:	addne	r0, r7, #7
   145fc:	mov	r3, #1
   14600:	str	r3, [r4, #72]	; 0x48
   14604:	bl	11874 <strdup@plt>
   14608:	cmp	r0, #0
   1460c:	beq	14b10 <__assert_fail@plt+0x2ee8>
   14610:	str	r0, [r4, #20]
   14614:	ldr	sl, [sp, #24]
   14618:	ldr	r1, [pc, #1460]	; 14bd4 <__assert_fail@plt+0x2fac>
   1461c:	ldr	r7, [sl, #4]
   14620:	mov	r0, r7
   14624:	bl	11754 <strcmp@plt>
   14628:	cmp	r0, #0
   1462c:	moveq	r3, #1
   14630:	streq	r3, [r4, #24]
   14634:	beq	146a8 <__assert_fail@plt+0x2a80>
   14638:	ldr	r1, [pc, #1432]	; 14bd8 <__assert_fail@plt+0x2fb0>
   1463c:	mov	r0, r7
   14640:	bl	11754 <strcmp@plt>
   14644:	cmp	r0, #0
   14648:	moveq	r3, #2
   1464c:	streq	r3, [r4, #24]
   14650:	beq	146a8 <__assert_fail@plt+0x2a80>
   14654:	ldr	r1, [pc, #1408]	; 14bdc <__assert_fail@plt+0x2fb4>
   14658:	mov	r0, r7
   1465c:	bl	11754 <strcmp@plt>
   14660:	cmp	r0, #0
   14664:	moveq	r3, #4
   14668:	streq	r3, [r4, #24]
   1466c:	beq	146a8 <__assert_fail@plt+0x2a80>
   14670:	ldr	r1, [pc, #1384]	; 14be0 <__assert_fail@plt+0x2fb8>
   14674:	mov	r0, r7
   14678:	bl	11754 <strcmp@plt>
   1467c:	cmp	r0, #0
   14680:	moveq	r3, #5
   14684:	streq	r3, [r4, #24]
   14688:	beq	146a8 <__assert_fail@plt+0x2a80>
   1468c:	mov	r0, r7
   14690:	ldr	r1, [pc, #1356]	; 14be4 <__assert_fail@plt+0x2fbc>
   14694:	bl	11754 <strcmp@plt>
   14698:	cmp	r0, #0
   1469c:	bne	14b6c <__assert_fail@plt+0x2f44>
   146a0:	mov	r3, #3
   146a4:	str	r3, [r4, #24]
   146a8:	ldr	r0, [sl, #8]
   146ac:	ldr	r3, [pc, #1300]	; 14bc8 <__assert_fail@plt+0x2fa0>
   146b0:	cmp	r0, #0
   146b4:	moveq	r0, r3
   146b8:	bl	11874 <strdup@plt>
   146bc:	subs	r7, r0, #0
   146c0:	beq	14b10 <__assert_fail@plt+0x2ee8>
   146c4:	mov	r1, #2
   146c8:	mov	r3, #1
   146cc:	strh	r1, [r4, #76]	; 0x4c
   146d0:	mov	r2, #3
   146d4:	ldr	r1, [pc, #1292]	; 14be8 <__assert_fail@plt+0x2fc0>
   146d8:	str	r7, [r4, #28]
   146dc:	strb	r3, [r4, #78]	; 0x4e
   146e0:	bl	11bd4 <strncmp@plt>
   146e4:	cmp	r0, #0
   146e8:	beq	14704 <__assert_fail@plt+0x2adc>
   146ec:	mov	r2, #3
   146f0:	ldr	r1, [pc, #1268]	; 14bec <__assert_fail@plt+0x2fc4>
   146f4:	mov	r0, r7
   146f8:	bl	11bd4 <strncmp@plt>
   146fc:	cmp	r0, #0
   14700:	bne	1471c <__assert_fail@plt+0x2af4>
   14704:	ldrb	r3, [r7, #3]
   14708:	cmp	r3, #54	; 0x36
   1470c:	moveq	r2, #10
   14710:	moveq	r3, #0
   14714:	strheq	r2, [r4, #76]	; 0x4c
   14718:	strbeq	r3, [r4, #78]	; 0x4e
   1471c:	ldr	sl, [sl, #12]
   14720:	mov	r1, #46	; 0x2e
   14724:	mov	r0, sl
   14728:	bl	119f4 <strchr@plt>
   1472c:	ldr	r1, [pc, #1212]	; 14bf0 <__assert_fail@plt+0x2fc8>
   14730:	subs	r7, r0, #0
   14734:	movne	r3, #0
   14738:	strbne	r3, [r7]
   1473c:	ldrne	r3, [sp, #24]
   14740:	addne	r7, r7, #1
   14744:	ldrne	sl, [r3, #12]
   14748:	mov	r0, sl
   1474c:	bl	11754 <strcmp@plt>
   14750:	cmp	r0, #0
   14754:	moveq	r3, #1
   14758:	streq	r3, [r4, #32]
   1475c:	beq	14778 <__assert_fail@plt+0x2b50>
   14760:	mov	r0, sl
   14764:	ldr	r1, [pc, #1160]	; 14bf4 <__assert_fail@plt+0x2fcc>
   14768:	bl	11754 <strcmp@plt>
   1476c:	cmp	r0, #0
   14770:	streq	r0, [r4, #32]
   14774:	bne	14ab0 <__assert_fail@plt+0x2e88>
   14778:	cmp	r7, #0
   1477c:	beq	147a4 <__assert_fail@plt+0x2b7c>
   14780:	mov	r2, #10
   14784:	add	r1, sp, #28
   14788:	mov	r0, r7
   1478c:	bl	119d0 <strtoul@plt>
   14790:	ldr	r3, [sp, #28]
   14794:	str	r0, [r4, #36]	; 0x24
   14798:	ldrb	r3, [r3]
   1479c:	cmp	r3, #0
   147a0:	bne	14a20 <__assert_fail@plt+0x2df8>
   147a4:	ldr	r3, [r4, #72]	; 0x48
   147a8:	sub	r3, r3, #1
   147ac:	cmp	r3, #1
   147b0:	bls	1498c <__assert_fail@plt+0x2d64>
   147b4:	ldr	r7, [sp, #24]
   147b8:	ldr	r3, [pc, #1032]	; 14bc8 <__assert_fail@plt+0x2fa0>
   147bc:	ldr	r0, [r7, #16]
   147c0:	cmp	r0, #0
   147c4:	moveq	r0, r3
   147c8:	bl	11874 <strdup@plt>
   147cc:	subs	sl, r0, #0
   147d0:	beq	14b10 <__assert_fail@plt+0x2ee8>
   147d4:	mov	r1, #58	; 0x3a
   147d8:	str	sl, [r4, #44]	; 0x2c
   147dc:	bl	119f4 <strchr@plt>
   147e0:	cmp	r0, #0
   147e4:	beq	14aec <__assert_fail@plt+0x2ec4>
   147e8:	mov	r3, #0
   147ec:	strb	r3, [r0], #1
   147f0:	ldr	r3, [pc, #976]	; 14bc8 <__assert_fail@plt+0x2fa0>
   147f4:	cmp	r0, #0
   147f8:	moveq	r0, r3
   147fc:	bl	11874 <strdup@plt>
   14800:	cmp	r0, #0
   14804:	beq	14b10 <__assert_fail@plt+0x2ee8>
   14808:	str	r0, [r4, #48]	; 0x30
   1480c:	ldr	r0, [r7, #20]
   14810:	ldr	r3, [pc, #944]	; 14bc8 <__assert_fail@plt+0x2fa0>
   14814:	cmp	r0, #0
   14818:	moveq	r0, r3
   1481c:	bl	11874 <strdup@plt>
   14820:	subs	r3, r0, #0
   14824:	beq	14b10 <__assert_fail@plt+0x2ee8>
   14828:	ldr	r1, [pc, #968]	; 14bf8 <__assert_fail@plt+0x2fd0>
   1482c:	str	r3, [r4, #56]	; 0x38
   14830:	bl	11754 <strcmp@plt>
   14834:	cmp	r0, #0
   14838:	bne	14b90 <__assert_fail@plt+0x2f68>
   1483c:	ldr	sl, [pc, #952]	; 14bfc <__assert_fail@plt+0x2fd4>
   14840:	ldr	r0, [sl, #12]
   14844:	cmp	r0, #0
   14848:	beq	14960 <__assert_fail@plt+0x2d38>
   1484c:	ldr	fp, [r4, #24]
   14850:	ldr	r7, [r4, #20]
   14854:	add	sl, sl, #12
   14858:	b	14868 <__assert_fail@plt+0x2c40>
   1485c:	ldr	r0, [sl, #16]!
   14860:	cmp	r0, #0
   14864:	beq	14964 <__assert_fail@plt+0x2d3c>
   14868:	ldr	r3, [sl, #4]
   1486c:	cmp	fp, r3
   14870:	bne	1485c <__assert_fail@plt+0x2c34>
   14874:	mov	r1, r7
   14878:	bl	11754 <strcmp@plt>
   1487c:	cmp	r0, #0
   14880:	bne	1485c <__assert_fail@plt+0x2c34>
   14884:	ldrsh	r3, [sl, #10]
   14888:	str	sl, [r4, #52]	; 0x34
   1488c:	str	r3, [r4, #32]
   14890:	ldr	r0, [sp, #20]
   14894:	mov	r1, #4
   14898:	sub	r3, r0, #5
   1489c:	sub	r0, r0, #4
   148a0:	str	r3, [r4, #64]	; 0x40
   148a4:	bl	18b98 <argp_parse@@Base+0x1e70>
   148a8:	cmp	r0, #0
   148ac:	mov	r5, r0
   148b0:	str	r0, [r4, #60]	; 0x3c
   148b4:	beq	14b9c <__assert_fail@plt+0x2f74>
   148b8:	ldr	lr, [r4, #64]	; 0x40
   148bc:	cmp	lr, #0
   148c0:	beq	14b5c <__assert_fail@plt+0x2f34>
   148c4:	ldr	r6, [sp, #24]
   148c8:	lsl	r7, lr, #2
   148cc:	add	ip, r0, r7
   148d0:	mov	r3, r0
   148d4:	add	r2, r6, #20
   148d8:	mov	r0, #0
   148dc:	ldr	r1, [r2, #4]
   148e0:	str	r1, [r3], #4
   148e4:	cmp	ip, r3
   148e8:	str	r0, [r2, #4]!
   148ec:	bne	148dc <__assert_fail@plt+0x2cb4>
   148f0:	cmp	lr, #1
   148f4:	movne	lr, r7
   148f8:	beq	14a3c <__assert_fail@plt+0x2e14>
   148fc:	mov	r3, #0
   14900:	mov	r1, r6
   14904:	ldr	r0, [sp, #20]
   14908:	str	r3, [r5, lr]
   1490c:	bl	15df8 <__assert_fail@plt+0x41d0>
   14910:	b	14440 <__assert_fail@plt+0x2818>
   14914:	cmp	r2, #1
   14918:	bne	14940 <__assert_fail@plt+0x2d18>
   1491c:	ldr	r2, [sp, #24]
   14920:	ldr	sl, [r2]
   14924:	mov	r0, sl
   14928:	bl	119dc <strlen@plt>
   1492c:	ldr	r3, [sp, #12]
   14930:	sub	r0, r0, #1
   14934:	ldrb	r2, [sl, r0]
   14938:	cmp	r2, #58	; 0x3a
   1493c:	beq	14b14 <__assert_fail@plt+0x2eec>
   14940:	ldr	r3, [r6]
   14944:	ldr	r2, [sp, #8]
   14948:	ldr	r1, [pc, #688]	; 14c00 <__assert_fail@plt+0x2fd8>
   1494c:	mov	r0, #3
   14950:	bl	11b14 <syslog@plt>
   14954:	ldr	r3, [sp, #24]
   14958:	ldr	r0, [sp, #20]
   1495c:	b	14478 <__assert_fail@plt+0x2850>
   14960:	ldr	r7, [r4, #20]
   14964:	mov	ip, #0
   14968:	ldr	r3, [r6]
   1496c:	ldr	r2, [sp, #8]
   14970:	str	r7, [sp]
   14974:	ldr	r1, [pc, #648]	; 14c04 <__assert_fail@plt+0x2fdc>
   14978:	mov	r0, #3
   1497c:	str	ip, [r4, #52]	; 0x34
   14980:	bl	11b14 <syslog@plt>
   14984:	ldr	r3, [sp, #24]
   14988:	b	14958 <__assert_fail@plt+0x2d30>
   1498c:	mov	r3, #0
   14990:	mov	r2, #3
   14994:	ldr	r1, [pc, #588]	; 14be8 <__assert_fail@plt+0x2fc0>
   14998:	ldr	r0, [r4, #28]
   1499c:	str	r3, [r4, #32]
   149a0:	bl	11bd4 <strncmp@plt>
   149a4:	cmp	r0, #0
   149a8:	bne	14ac8 <__assert_fail@plt+0x2ea0>
   149ac:	ldr	r3, [r4, #24]
   149b0:	cmp	r3, #1
   149b4:	beq	147b4 <__assert_fail@plt+0x2b8c>
   149b8:	ldr	r2, [r4, #20]
   149bc:	ldr	r3, [r6]
   149c0:	ldr	r1, [pc, #576]	; 14c08 <__assert_fail@plt+0x2fe0>
   149c4:	str	r2, [sp]
   149c8:	mov	r0, #3
   149cc:	ldr	r2, [sp, #8]
   149d0:	bl	11b14 <syslog@plt>
   149d4:	ldr	r3, [sp, #24]
   149d8:	b	14958 <__assert_fail@plt+0x2d30>
   149dc:	mov	r0, r7
   149e0:	bl	11874 <strdup@plt>
   149e4:	cmp	r0, #0
   149e8:	beq	14b10 <__assert_fail@plt+0x2ee8>
   149ec:	mov	r3, #0
   149f0:	str	r0, [r4, #20]
   149f4:	str	r3, [r4, #72]	; 0x48
   149f8:	b	14614 <__assert_fail@plt+0x29ec>
   149fc:	mov	r0, sl
   14a00:	bl	11874 <strdup@plt>
   14a04:	cmp	r0, #0
   14a08:	beq	14b10 <__assert_fail@plt+0x2ee8>
   14a0c:	ldr	r2, [pc, #504]	; 14c0c <__assert_fail@plt+0x2fe4>
   14a10:	ldr	r3, [sp, #12]
   14a14:	str	r0, [r9]
   14a18:	str	r3, [r2]
   14a1c:	b	145c0 <__assert_fail@plt+0x2998>
   14a20:	ldr	r3, [r6]
   14a24:	ldr	r2, [sp, #8]
   14a28:	str	r7, [sp]
   14a2c:	ldr	r1, [pc, #476]	; 14c10 <__assert_fail@plt+0x2fe8>
   14a30:	mov	r0, #4
   14a34:	bl	11b14 <syslog@plt>
   14a38:	b	147a4 <__assert_fail@plt+0x2b7c>
   14a3c:	ldr	r4, [r4, #56]	; 0x38
   14a40:	mov	r1, #47	; 0x2f
   14a44:	mov	r0, r4
   14a48:	bl	11ae4 <strrchr@plt>
   14a4c:	cmp	r0, #0
   14a50:	moveq	r0, r4
   14a54:	beq	14a68 <__assert_fail@plt+0x2e40>
   14a58:	ldr	r3, [pc, #360]	; 14bc8 <__assert_fail@plt+0x2fa0>
   14a5c:	cmn	r0, #1
   14a60:	addne	r0, r0, #1
   14a64:	moveq	r0, r3
   14a68:	bl	11874 <strdup@plt>
   14a6c:	cmp	r0, #0
   14a70:	beq	14b10 <__assert_fail@plt+0x2ee8>
   14a74:	str	r0, [r5]
   14a78:	mov	lr, #4
   14a7c:	b	148fc <__assert_fail@plt+0x2cd4>
   14a80:	ldr	r3, [pc, #396]	; 14c14 <__assert_fail@plt+0x2fec>
   14a84:	ldr	r0, [r3]
   14a88:	cmp	r0, #0
   14a8c:	beq	14b64 <__assert_fail@plt+0x2f3c>
   14a90:	bl	11874 <strdup@plt>
   14a94:	cmp	r0, #0
   14a98:	beq	14b10 <__assert_fail@plt+0x2ee8>
   14a9c:	ldr	r3, [pc, #360]	; 14c0c <__assert_fail@plt+0x2fe4>
   14aa0:	str	r0, [r9]
   14aa4:	ldr	r7, [r7]
   14aa8:	str	fp, [r3]
   14aac:	b	145c0 <__assert_fail@plt+0x2998>
   14ab0:	ldr	r3, [r6]
   14ab4:	ldr	r2, [sp, #8]
   14ab8:	ldr	r1, [pc, #344]	; 14c18 <__assert_fail@plt+0x2ff0>
   14abc:	mov	r0, #4
   14ac0:	bl	11b14 <syslog@plt>
   14ac4:	b	14778 <__assert_fail@plt+0x2b50>
   14ac8:	ldr	r2, [r4, #20]
   14acc:	ldr	r3, [r6]
   14ad0:	ldr	r1, [pc, #324]	; 14c1c <__assert_fail@plt+0x2ff4>
   14ad4:	str	r2, [sp]
   14ad8:	mov	r0, #3
   14adc:	ldr	r2, [sp, #8]
   14ae0:	bl	11b14 <syslog@plt>
   14ae4:	ldr	r3, [sp, #24]
   14ae8:	b	14958 <__assert_fail@plt+0x2d30>
   14aec:	mov	r0, sl
   14af0:	mov	r1, #46	; 0x2e
   14af4:	bl	119f4 <strchr@plt>
   14af8:	cmp	r0, #0
   14afc:	bne	147e8 <__assert_fail@plt+0x2bc0>
   14b00:	ldr	r0, [pc, #192]	; 14bc8 <__assert_fail@plt+0x2fa0>
   14b04:	bl	11874 <strdup@plt>
   14b08:	cmp	r0, #0
   14b0c:	bne	14808 <__assert_fail@plt+0x2be0>
   14b10:	bl	12c14 <__assert_fail@plt+0xfec>
   14b14:	ldr	r7, [pc, #248]	; 14c14 <__assert_fail@plt+0x2fec>
   14b18:	strb	r3, [sl, r0]
   14b1c:	ldr	r0, [r7]
   14b20:	bl	17ca4 <argp_parse@@Base+0xf7c>
   14b24:	ldr	r3, [sp, #24]
   14b28:	ldr	r1, [pc, #156]	; 14bcc <__assert_fail@plt+0x2fa4>
   14b2c:	str	r3, [sp, #12]
   14b30:	ldr	sl, [r3]
   14b34:	mov	r0, sl
   14b38:	bl	11754 <strcmp@plt>
   14b3c:	ldr	r3, [sp, #12]
   14b40:	cmp	r0, #0
   14b44:	beq	14958 <__assert_fail@plt+0x2d30>
   14b48:	mov	r0, sl
   14b4c:	bl	13280 <__assert_fail@plt+0x1658>
   14b50:	ldr	r3, [sp, #24]
   14b54:	str	r0, [r7]
   14b58:	b	14958 <__assert_fail@plt+0x2d30>
   14b5c:	ldr	r6, [sp, #24]
   14b60:	b	148fc <__assert_fail@plt+0x2cd4>
   14b64:	mov	r7, sl
   14b68:	b	145c0 <__assert_fail@plt+0x2998>
   14b6c:	ldr	r3, [r6]
   14b70:	ldr	r2, [sp, #8]
   14b74:	ldr	r1, [pc, #164]	; 14c20 <__assert_fail@plt+0x2ff8>
   14b78:	mov	r0, #4
   14b7c:	bl	11b14 <syslog@plt>
   14b80:	mvn	r3, #0
   14b84:	ldr	sl, [sp, #24]
   14b88:	str	r3, [r4, #24]
   14b8c:	b	146a8 <__assert_fail@plt+0x2a80>
   14b90:	mov	r3, #0
   14b94:	str	r3, [r4, #52]	; 0x34
   14b98:	b	14890 <__assert_fail@plt+0x2c68>
   14b9c:	mov	r0, #3
   14ba0:	ldr	r3, [r6]
   14ba4:	ldr	r2, [sp, #8]
   14ba8:	ldr	r1, [pc, #116]	; 14c24 <__assert_fail@plt+0x2ffc>
   14bac:	bl	11b14 <syslog@plt>
   14bb0:	mvn	r0, #0
   14bb4:	bl	119c4 <exit@plt>
   14bb8:	andeq	r1, r3, r4, lsl #12
   14bbc:	andeq	r1, r3, r4, asr #7
   14bc0:			; <UNDEFINED> instruction: 0x000313bc
   14bc4:	andeq	r1, r3, r8, lsr #9
   14bc8:	andeq	pc, r1, r0, ror #7
   14bcc:	andeq	pc, r1, r4, lsl #8
   14bd0:	muleq	r3, r4, r2
   14bd4:	andeq	pc, r1, r4, lsl #13
   14bd8:	andeq	pc, r1, ip, lsl #13
   14bdc:	muleq	r1, r4, r6
   14be0:	muleq	r1, r8, r6
   14be4:	andeq	pc, r1, r4, lsr #13
   14be8:			; <UNDEFINED> instruction: 0x0001f4bc
   14bec:	andeq	pc, r1, r4, asr #11
   14bf0:	andeq	pc, r1, r0, asr #13
   14bf4:	andeq	pc, r1, r8, asr #13
   14bf8:	andeq	pc, r1, r0, ror #14
   14bfc:	andeq	r1, r3, r8, asr #3
   14c00:	andeq	pc, r1, r8, ror #12
   14c04:	andeq	pc, r1, r4, lsl #15
   14c08:	andeq	pc, r1, r0, lsr r7	; <UNPREDICTABLE>
   14c0c:	strdeq	r1, [r3], -ip
   14c10:	andeq	pc, r1, r8, ror #13
   14c14:	andeq	r1, r3, r0, lsl r6
   14c18:	ldrdeq	pc, [r1], -r0
   14c1c:	andeq	pc, r1, r4, lsl #14
   14c20:	andeq	pc, r1, r8, lsr #13
   14c24:	andeq	pc, r1, ip, ror #14
   14c28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14c2c:	sub	sp, sp, #316	; 0x13c
   14c30:	mov	r3, #0
   14c34:	ldr	r1, [pc, #816]	; 14f6c <__assert_fail@plt+0x3344>
   14c38:	str	r3, [sp, #52]	; 0x34
   14c3c:	mov	r5, r0
   14c40:	bl	11b74 <fopen64@plt>
   14c44:	subs	r4, r0, #0
   14c48:	beq	14f58 <__assert_fail@plt+0x3330>
   14c4c:	ldr	r6, [pc, #796]	; 14f70 <__assert_fail@plt+0x3348>
   14c50:	ldr	sl, [pc, #796]	; 14f74 <__assert_fail@plt+0x334c>
   14c54:	mvn	r8, #0
   14c58:	mov	r7, #1
   14c5c:	mov	r9, #3
   14c60:	add	r2, sp, #52	; 0x34
   14c64:	mov	r1, r5
   14c68:	mov	r0, r4
   14c6c:	bl	14414 <__assert_fail@plt+0x27ec>
   14c70:	subs	fp, r0, #0
   14c74:	beq	14d58 <__assert_fail@plt+0x3130>
   14c78:	ldr	r0, [fp, #36]	; 0x24
   14c7c:	bl	11748 <getpwnam@plt>
   14c80:	cmp	r0, #0
   14c84:	beq	14f24 <__assert_fail@plt+0x32fc>
   14c88:	ldr	r0, [fp, #40]	; 0x28
   14c8c:	cmp	r0, #0
   14c90:	beq	14ca0 <__assert_fail@plt+0x3078>
   14c94:	ldrb	r3, [r0]
   14c98:	cmp	r3, #0
   14c9c:	bne	14d2c <__assert_fail@plt+0x3104>
   14ca0:	ldr	r3, [fp, #64]	; 0x40
   14ca4:	sub	r3, r3, #1
   14ca8:	cmp	r3, #1
   14cac:	bls	14cd0 <__assert_fail@plt+0x30a8>
   14cb0:	mov	r0, fp
   14cb4:	bl	13fd4 <__assert_fail@plt+0x23ac>
   14cb8:	ldr	r3, [r6]
   14cbc:	ldr	r0, [fp, #8]
   14cc0:	cmp	r3, #0
   14cc4:	beq	14cf0 <__assert_fail@plt+0x30c8>
   14cc8:	bl	17ca4 <argp_parse@@Base+0xf7c>
   14ccc:	b	14c60 <__assert_fail@plt+0x3038>
   14cd0:	str	r8, [fp, #60]	; 0x3c
   14cd4:	strh	r7, [fp, #32]
   14cd8:	mov	r0, fp
   14cdc:	bl	13918 <__assert_fail@plt+0x1cf0>
   14ce0:	ldr	r3, [r6]
   14ce4:	ldr	r0, [fp, #8]
   14ce8:	cmp	r3, #0
   14cec:	bne	14cc8 <__assert_fail@plt+0x30a0>
   14cf0:	bl	17ca4 <argp_parse@@Base+0xf7c>
   14cf4:	ldr	r0, [fp, #12]
   14cf8:	bl	17ca4 <argp_parse@@Base+0xf7c>
   14cfc:	ldr	r0, [fp, #20]
   14d00:	bl	17ca4 <argp_parse@@Base+0xf7c>
   14d04:	ldr	r0, [fp, #36]	; 0x24
   14d08:	bl	17ca4 <argp_parse@@Base+0xf7c>
   14d0c:	ldr	r0, [fp, #40]	; 0x28
   14d10:	bl	17ca4 <argp_parse@@Base+0xf7c>
   14d14:	ldr	r0, [fp, #48]	; 0x30
   14d18:	bl	17ca4 <argp_parse@@Base+0xf7c>
   14d1c:	ldr	r1, [fp, #52]	; 0x34
   14d20:	ldr	r0, [fp, #56]	; 0x38
   14d24:	bl	15df8 <__assert_fail@plt+0x41d0>
   14d28:	b	14c60 <__assert_fail@plt+0x3038>
   14d2c:	bl	11c10 <getgrnam@plt>
   14d30:	cmp	r0, #0
   14d34:	bne	14ca0 <__assert_fail@plt+0x3078>
   14d38:	ldr	r1, [fp, #40]	; 0x28
   14d3c:	ldr	r3, [fp, #20]
   14d40:	ldr	r2, [fp, #12]
   14d44:	mov	r0, r9
   14d48:	str	r1, [sp]
   14d4c:	ldr	r1, [pc, #548]	; 14f78 <__assert_fail@plt+0x3350>
   14d50:	bl	11b14 <syslog@plt>
   14d54:	b	14c60 <__assert_fail@plt+0x3038>
   14d58:	mov	r0, r4
   14d5c:	bl	11a9c <fclose@plt>
   14d60:	add	r0, sp, #184	; 0xb8
   14d64:	bl	11ac0 <sigemptyset@plt>
   14d68:	mov	r1, #17
   14d6c:	add	r0, sp, #184	; 0xb8
   14d70:	bl	11964 <sigaddset@plt>
   14d74:	mov	r1, #1
   14d78:	add	r0, sp, #184	; 0xb8
   14d7c:	bl	11964 <sigaddset@plt>
   14d80:	mov	r1, #14
   14d84:	add	r0, sp, #184	; 0xb8
   14d88:	bl	11964 <sigaddset@plt>
   14d8c:	add	r1, sp, #184	; 0xb8
   14d90:	mov	r0, fp
   14d94:	add	r2, sp, #56	; 0x38
   14d98:	bl	117b4 <sigprocmask@plt>
   14d9c:	ldr	r5, [pc, #472]	; 14f7c <__assert_fail@plt+0x3354>
   14da0:	ldr	r6, [pc, #472]	; 14f80 <__assert_fail@plt+0x3358>
   14da4:	ldr	r4, [r5]
   14da8:	cmp	r4, #0
   14dac:	beq	14e78 <__assert_fail@plt+0x3250>
   14db0:	ldrsh	r7, [r4, #32]
   14db4:	cmp	r7, #0
   14db8:	addne	r5, r4, #220	; 0xdc
   14dbc:	bne	14da4 <__assert_fail@plt+0x317c>
   14dc0:	ldr	r0, [r4, #60]	; 0x3c
   14dc4:	ldr	r3, [r4, #220]	; 0xdc
   14dc8:	cmp	r0, #0
   14dcc:	str	r3, [r5]
   14dd0:	blt	14e1c <__assert_fail@plt+0x31f4>
   14dd4:	ldr	ip, [pc, #424]	; 14f84 <__assert_fail@plt+0x335c>
   14dd8:	asr	lr, r0, #5
   14ddc:	ldr	r1, [pc, #420]	; 14f88 <__assert_fail@plt+0x3360>
   14de0:	ldr	r2, [ip, lr, lsl #2]
   14de4:	and	r3, r0, #31
   14de8:	mov	r8, #1
   14dec:	bic	r2, r2, r8, lsl r3
   14df0:	ldr	r3, [r1]
   14df4:	str	r2, [ip, lr, lsl #2]
   14df8:	sub	r3, r3, #1
   14dfc:	str	r3, [r1]
   14e00:	bl	11bf8 <close@plt>
   14e04:	ldr	r2, [r4, #24]
   14e08:	mvn	r3, #0
   14e0c:	cmp	r2, r8
   14e10:	str	r7, [r4, #208]	; 0xd0
   14e14:	str	r3, [r4, #60]	; 0x3c
   14e18:	strgt	r8, [r4, #24]
   14e1c:	ldrb	r3, [r6]
   14e20:	cmp	r3, #0
   14e24:	bne	14e90 <__assert_fail@plt+0x3268>
   14e28:	ldr	r0, [r4, #8]
   14e2c:	bl	17ca4 <argp_parse@@Base+0xf7c>
   14e30:	ldr	r0, [r4, #12]
   14e34:	bl	17ca4 <argp_parse@@Base+0xf7c>
   14e38:	ldr	r0, [r4, #20]
   14e3c:	bl	17ca4 <argp_parse@@Base+0xf7c>
   14e40:	ldr	r0, [r4, #36]	; 0x24
   14e44:	bl	17ca4 <argp_parse@@Base+0xf7c>
   14e48:	ldr	r0, [r4, #40]	; 0x28
   14e4c:	bl	17ca4 <argp_parse@@Base+0xf7c>
   14e50:	ldr	r0, [r4, #48]	; 0x30
   14e54:	bl	17ca4 <argp_parse@@Base+0xf7c>
   14e58:	ldr	r1, [r4, #52]	; 0x34
   14e5c:	ldr	r0, [r4, #56]	; 0x38
   14e60:	bl	15df8 <__assert_fail@plt+0x41d0>
   14e64:	mov	r0, r4
   14e68:	bl	17ca4 <argp_parse@@Base+0xf7c>
   14e6c:	ldr	r4, [r5]
   14e70:	cmp	r4, #0
   14e74:	bne	14db0 <__assert_fail@plt+0x3188>
   14e78:	mov	r2, r4
   14e7c:	add	r1, sp, #56	; 0x38
   14e80:	mov	r0, #2
   14e84:	bl	117b4 <sigprocmask@plt>
   14e88:	add	sp, sp, #316	; 0x13c
   14e8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e90:	ldr	r3, [pc, #244]	; 14f8c <__assert_fail@plt+0x3364>
   14e94:	ldr	ip, [r4, #64]	; 0x40
   14e98:	ldr	r0, [r3]
   14e9c:	sub	r3, ip, #1
   14ea0:	cmp	r3, #1
   14ea4:	ldm	r4, {r2, r3}
   14ea8:	bls	14f44 <__assert_fail@plt+0x331c>
   14eac:	ldr	r1, [r4, #8]
   14eb0:	ldr	ip, [pc, #216]	; 14f90 <__assert_fail@plt+0x3368>
   14eb4:	cmp	r1, #0
   14eb8:	moveq	r1, ip
   14ebc:	ldr	fp, [r4, #44]	; 0x2c
   14ec0:	ldr	ip, [r4, #12]
   14ec4:	cmp	fp, #0
   14ec8:	str	ip, [sp, #44]	; 0x2c
   14ecc:	ldr	ip, [r4, #48]	; 0x30
   14ed0:	ldr	lr, [r4, #20]
   14ed4:	ldr	r7, [r4, #24]
   14ed8:	ldr	r8, [r4, #28]
   14edc:	ldr	r9, [r4, #36]	; 0x24
   14ee0:	ldr	sl, [r4, #40]	; 0x28
   14ee4:	ldrne	fp, [fp]
   14ee8:	str	ip, [sp, #36]	; 0x24
   14eec:	ldr	ip, [sp, #44]	; 0x2c
   14ef0:	ldreq	fp, [pc, #156]	; 14f94 <__assert_fail@plt+0x336c>
   14ef4:	str	sl, [sp, #28]
   14ef8:	stmib	sp, {r1, ip}
   14efc:	ldr	r1, [pc, #148]	; 14f98 <__assert_fail@plt+0x3370>
   14f00:	str	fp, [sp, #32]
   14f04:	str	r1, [sp]
   14f08:	str	r9, [sp, #24]
   14f0c:	str	r8, [sp, #20]
   14f10:	str	r7, [sp, #16]
   14f14:	str	lr, [sp, #12]
   14f18:	ldr	r1, [pc, #124]	; 14f9c <__assert_fail@plt+0x3374>
   14f1c:	bl	11a0c <fprintf@plt>
   14f20:	b	14e28 <__assert_fail@plt+0x3200>
   14f24:	ldr	r1, [fp, #36]	; 0x24
   14f28:	ldr	r3, [fp, #20]
   14f2c:	ldr	r2, [fp, #12]
   14f30:	mov	r0, r9
   14f34:	str	r1, [sp]
   14f38:	mov	r1, sl
   14f3c:	bl	11b14 <syslog@plt>
   14f40:	b	14c60 <__assert_fail@plt+0x3038>
   14f44:	ldr	lr, [pc, #84]	; 14fa0 <__assert_fail@plt+0x3378>
   14f48:	cmp	ip, #2
   14f4c:	ldr	r1, [pc, #80]	; 14fa4 <__assert_fail@plt+0x337c>
   14f50:	moveq	r1, lr
   14f54:	b	14ebc <__assert_fail@plt+0x3294>
   14f58:	mov	r2, r5
   14f5c:	ldr	r1, [pc, #68]	; 14fa8 <__assert_fail@plt+0x3380>
   14f60:	mov	r0, #3
   14f64:	bl	11b14 <syslog@plt>
   14f68:	b	14e88 <__assert_fail@plt+0x3260>
   14f6c:	andeq	r0, r2, r0, lsl #13
   14f70:	andeq	r1, r3, r4, lsl #12
   14f74:			; <UNDEFINED> instruction: 0x0001f7b0
   14f78:	ldrdeq	pc, [r1], -ip
   14f7c:	andeq	r1, r3, ip, lsl #12
   14f80:			; <UNDEFINED> instruction: 0x000313bc
   14f84:	andeq	r1, r3, r8, ror #10
   14f88:	andeq	r1, r3, ip, ror #11
   14f8c:			; <UNDEFINED> instruction: 0x000313b0
   14f90:	andeq	pc, r1, r4, lsl #8
   14f94:	andeq	pc, r1, r4, lsl r4	; <UNPREDICTABLE>
   14f98:	andeq	pc, r1, r8, lsl #16
   14f9c:	andeq	pc, r1, r8, lsl r4	; <UNPREDICTABLE>
   14fa0:	andeq	pc, r1, r8, lsl #8
   14fa4:	andeq	pc, r1, r4, lsl r8	; <UNPREDICTABLE>
   14fa8:	andeq	pc, r1, r8, lsr #15
   14fac:	ldr	r3, [pc, #592]	; 15204 <__assert_fail@plt+0x35dc>
   14fb0:	push	{r4, r5, r6, r7, r8, lr}
   14fb4:	sub	sp, sp, #224	; 0xe0
   14fb8:	ldr	r4, [r3]
   14fbc:	cmp	r4, #0
   14fc0:	beq	15164 <__assert_fail@plt+0x353c>
   14fc4:	mov	r6, #0
   14fc8:	ldr	r5, [pc, #568]	; 15208 <__assert_fail@plt+0x35e0>
   14fcc:	mov	r7, r6
   14fd0:	mov	r8, #1
   14fd4:	b	15004 <__assert_fail@plt+0x33dc>
   14fd8:	mov	r1, r5
   14fdc:	ldr	r0, [r4, #12]
   14fe0:	bl	11754 <strcmp@plt>
   14fe4:	cmp	r0, #0
   14fe8:	bne	14ff8 <__assert_fail@plt+0x33d0>
   14fec:	cmp	r7, #0
   14ff0:	bne	15164 <__assert_fail@plt+0x353c>
   14ff4:	mov	r6, r8
   14ff8:	ldr	r4, [r4, #220]	; 0xdc
   14ffc:	cmp	r4, #0
   15000:	beq	1504c <__assert_fail@plt+0x3424>
   15004:	ldrsh	r3, [r4, #32]
   15008:	cmp	r3, #0
   1500c:	beq	14ff8 <__assert_fail@plt+0x33d0>
   15010:	ldr	r3, [r4, #64]	; 0x40
   15014:	sub	r3, r3, #1
   15018:	cmp	r3, #1
   1501c:	bhi	14fd8 <__assert_fail@plt+0x33b0>
   15020:	cmp	r6, #0
   15024:	bne	15164 <__assert_fail@plt+0x353c>
   15028:	mov	r1, r5
   1502c:	ldr	r0, [r4, #12]
   15030:	bl	11754 <strcmp@plt>
   15034:	cmp	r0, #0
   15038:	beq	15164 <__assert_fail@plt+0x353c>
   1503c:	ldr	r4, [r4, #220]	; 0xdc
   15040:	mov	r7, r8
   15044:	cmp	r4, #0
   15048:	bne	15004 <__assert_fail@plt+0x33dc>
   1504c:	eor	r6, r6, #1
   15050:	tst	r6, r7
   15054:	beq	15164 <__assert_fail@plt+0x353c>
   15058:	mov	r1, r4
   1505c:	mov	r2, #224	; 0xe0
   15060:	mov	r0, sp
   15064:	bl	11a54 <memset@plt>
   15068:	ldr	r3, [pc, #412]	; 1520c <__assert_fail@plt+0x35e4>
   1506c:	ldr	r0, [pc, #404]	; 15208 <__assert_fail@plt+0x35e0>
   15070:	str	r3, [sp]
   15074:	bl	11874 <strdup@plt>
   15078:	subs	r6, r0, #0
   1507c:	beq	15200 <__assert_fail@plt+0x35d8>
   15080:	mov	r3, #1
   15084:	ldr	r0, [pc, #388]	; 15210 <__assert_fail@plt+0x35e8>
   15088:	str	r3, [sp, #16]
   1508c:	strh	r3, [sp, #32]
   15090:	str	r6, [sp, #12]
   15094:	bl	11874 <strdup@plt>
   15098:	subs	r3, r0, #0
   1509c:	beq	15200 <__assert_fail@plt+0x35d8>
   150a0:	ldr	r0, [pc, #364]	; 15214 <__assert_fail@plt+0x35ec>
   150a4:	str	r3, [sp, #36]	; 0x24
   150a8:	bl	11874 <strdup@plt>
   150ac:	cmp	r0, #0
   150b0:	beq	15200 <__assert_fail@plt+0x35d8>
   150b4:	ldr	r4, [pc, #348]	; 15218 <__assert_fail@plt+0x35f0>
   150b8:	str	r0, [sp, #40]	; 0x28
   150bc:	ldr	r0, [r4, #12]
   150c0:	cmp	r0, #0
   150c4:	beq	1516c <__assert_fail@plt+0x3544>
   150c8:	add	r4, r4, #12
   150cc:	b	150dc <__assert_fail@plt+0x34b4>
   150d0:	ldr	r0, [r4, #16]!
   150d4:	cmp	r0, #0
   150d8:	beq	1516c <__assert_fail@plt+0x3544>
   150dc:	ldr	r5, [r4, #4]
   150e0:	cmp	r5, #1
   150e4:	bne	150d0 <__assert_fail@plt+0x34a8>
   150e8:	mov	r1, r6
   150ec:	bl	11754 <strcmp@plt>
   150f0:	cmp	r0, #0
   150f4:	bne	150d0 <__assert_fail@plt+0x34a8>
   150f8:	ldrsh	r3, [r4, #10]
   150fc:	ldr	r0, [pc, #280]	; 1521c <__assert_fail@plt+0x35f4>
   15100:	str	r4, [sp, #44]	; 0x2c
   15104:	str	r3, [sp, #24]
   15108:	bl	11874 <strdup@plt>
   1510c:	subs	r3, r0, #0
   15110:	beq	15200 <__assert_fail@plt+0x35d8>
   15114:	mvn	r2, #0
   15118:	ldr	r0, [pc, #256]	; 15220 <__assert_fail@plt+0x35f8>
   1511c:	str	r3, [sp, #48]	; 0x30
   15120:	str	r2, [sp, #60]	; 0x3c
   15124:	bl	11874 <strdup@plt>
   15128:	cmp	r0, #0
   1512c:	beq	15200 <__assert_fail@plt+0x35d8>
   15130:	ldr	r3, [pc, #236]	; 15224 <__assert_fail@plt+0x35fc>
   15134:	mov	r2, #10
   15138:	str	r0, [sp, #20]
   1513c:	ldrb	r3, [r3]
   15140:	strb	r5, [sp, #70]	; 0x46
   15144:	strh	r2, [sp, #68]	; 0x44
   15148:	cmp	r3, #0
   1514c:	bne	151c8 <__assert_fail@plt+0x35a0>
   15150:	mov	r0, #6
   15154:	ldr	r1, [pc, #204]	; 15228 <__assert_fail@plt+0x3600>
   15158:	bl	11b14 <syslog@plt>
   1515c:	mov	r0, sp
   15160:	bl	13fd4 <__assert_fail@plt+0x23ac>
   15164:	add	sp, sp, #224	; 0xe0
   15168:	pop	{r4, r5, r6, r7, r8, pc}
   1516c:	mov	r0, #0
   15170:	bl	17ca4 <argp_parse@@Base+0xf7c>
   15174:	ldr	r0, [sp, #12]
   15178:	bl	17ca4 <argp_parse@@Base+0xf7c>
   1517c:	ldr	r0, [sp, #20]
   15180:	bl	17ca4 <argp_parse@@Base+0xf7c>
   15184:	ldr	r0, [sp, #36]	; 0x24
   15188:	bl	17ca4 <argp_parse@@Base+0xf7c>
   1518c:	ldr	r0, [sp, #40]	; 0x28
   15190:	bl	17ca4 <argp_parse@@Base+0xf7c>
   15194:	ldr	r0, [sp, #48]	; 0x30
   15198:	bl	17ca4 <argp_parse@@Base+0xf7c>
   1519c:	ldr	r1, [sp, #52]	; 0x34
   151a0:	ldr	r0, [sp, #56]	; 0x38
   151a4:	bl	15df8 <__assert_fail@plt+0x41d0>
   151a8:	ldr	r3, [pc, #116]	; 15224 <__assert_fail@plt+0x35fc>
   151ac:	ldrb	r3, [r3]
   151b0:	cmp	r3, #0
   151b4:	bne	151e4 <__assert_fail@plt+0x35bc>
   151b8:	ldr	r1, [pc, #108]	; 1522c <__assert_fail@plt+0x3604>
   151bc:	mov	r0, #3
   151c0:	bl	11b14 <syslog@plt>
   151c4:	b	15164 <__assert_fail@plt+0x353c>
   151c8:	ldr	r3, [pc, #96]	; 15230 <__assert_fail@plt+0x3608>
   151cc:	mov	r1, r5
   151d0:	mov	r2, #31
   151d4:	ldr	r3, [r3]
   151d8:	ldr	r0, [pc, #84]	; 15234 <__assert_fail@plt+0x360c>
   151dc:	bl	118f8 <fwrite@plt>
   151e0:	b	15150 <__assert_fail@plt+0x3528>
   151e4:	ldr	r3, [pc, #68]	; 15230 <__assert_fail@plt+0x3608>
   151e8:	mov	r2, #46	; 0x2e
   151ec:	mov	r1, #1
   151f0:	ldr	r3, [r3]
   151f4:	ldr	r0, [pc, #48]	; 1522c <__assert_fail@plt+0x3604>
   151f8:	bl	118f8 <fwrite@plt>
   151fc:	b	151b8 <__assert_fail@plt+0x3590>
   15200:	bl	12c14 <__assert_fail@plt+0xfec>
   15204:	andeq	r1, r3, ip, lsl #12
   15208:	andeq	pc, r1, r4, lsl r8	; <UNPREDICTABLE>
   1520c:	andeq	pc, r1, r0, lsl r8	; <UNPREDICTABLE>
   15210:	andeq	pc, r1, ip, lsl r8	; <UNPREDICTABLE>
   15214:	andeq	pc, r1, r0, ror #7
   15218:	andeq	r1, r3, r8, asr #3
   1521c:	andeq	pc, r1, r0, ror #14
   15220:	andeq	pc, r1, r4, asr r8	; <UNPREDICTABLE>
   15224:			; <UNDEFINED> instruction: 0x000313bc
   15228:	andeq	pc, r1, ip, ror r8	; <UNPREDICTABLE>
   1522c:	andeq	pc, r1, r4, lsr #16
   15230:			; <UNDEFINED> instruction: 0x000313b0
   15234:	andeq	pc, r1, ip, asr r8	; <UNPREDICTABLE>
   15238:	ldr	r3, [pc, #460]	; 1540c <__assert_fail@plt+0x37e4>
   1523c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15240:	mov	fp, r0
   15244:	ldr	r3, [r3]
   15248:	sub	sp, sp, #212	; 0xd4
   1524c:	cmp	r3, #0
   15250:	movne	r2, #0
   15254:	beq	15268 <__assert_fail@plt+0x3640>
   15258:	strh	r2, [r3, #32]
   1525c:	ldr	r3, [r3, #220]	; 0xdc
   15260:	cmp	r3, #0
   15264:	bne	15258 <__assert_fail@plt+0x3630>
   15268:	ldr	r6, [pc, #416]	; 15410 <__assert_fail@plt+0x37e8>
   1526c:	ldr	r3, [r6]
   15270:	ldr	r1, [r3]
   15274:	cmp	r1, #0
   15278:	movne	r5, #0
   1527c:	movne	r8, #3
   15280:	movne	sl, #1
   15284:	bne	152b8 <__assert_fail@plt+0x3690>
   15288:	b	1531c <__assert_fail@plt+0x36f4>
   1528c:	ldr	r3, [sp, #120]	; 0x78
   15290:	and	r3, r3, #61440	; 0xf000
   15294:	cmp	r3, #16384	; 0x4000
   15298:	beq	15340 <__assert_fail@plt+0x3718>
   1529c:	cmp	r3, #32768	; 0x8000
   152a0:	beq	153a8 <__assert_fail@plt+0x3780>
   152a4:	ldr	r3, [r6]
   152a8:	add	r5, r5, #4
   152ac:	ldr	r1, [r3, r5]
   152b0:	cmp	r1, #0
   152b4:	beq	1531c <__assert_fail@plt+0x36f4>
   152b8:	add	r2, sp, #104	; 0x68
   152bc:	mov	r0, r8
   152c0:	bl	11bbc <__xstat64@plt>
   152c4:	cmp	r0, #0
   152c8:	beq	1528c <__assert_fail@plt+0x3664>
   152cc:	cmp	fp, #0
   152d0:	ldr	r3, [r6]
   152d4:	bne	15308 <__assert_fail@plt+0x36e0>
   152d8:	ldr	r2, [pc, #308]	; 15414 <__assert_fail@plt+0x37ec>
   152dc:	ldr	r7, [r3, r5]
   152e0:	ldr	r4, [r2]
   152e4:	bl	11a24 <__errno_location@plt>
   152e8:	ldr	r0, [r0]
   152ec:	bl	1197c <strerror@plt>
   152f0:	mov	r2, r7
   152f4:	ldr	r1, [pc, #284]	; 15418 <__assert_fail@plt+0x37f0>
   152f8:	mov	r3, r0
   152fc:	mov	r0, r4
   15300:	bl	11a0c <fprintf@plt>
   15304:	b	152a4 <__assert_fail@plt+0x367c>
   15308:	ldr	r1, [pc, #268]	; 1541c <__assert_fail@plt+0x37f4>
   1530c:	mov	r0, r8
   15310:	ldr	r2, [r3, r5]
   15314:	bl	11b14 <syslog@plt>
   15318:	b	152a4 <__assert_fail@plt+0x367c>
   1531c:	ldr	r4, [pc, #252]	; 15420 <__assert_fail@plt+0x37f8>
   15320:	ldr	r0, [r4, #236]	; 0xec
   15324:	bl	17ca4 <argp_parse@@Base+0xf7c>
   15328:	mov	r3, #0
   1532c:	str	r3, [r4, #236]	; 0xec
   15330:	str	r3, [r4, #232]	; 0xe8
   15334:	bl	14fac <__assert_fail@plt+0x3384>
   15338:	add	sp, sp, #212	; 0xd4
   1533c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15340:	ldr	r3, [r6]
   15344:	ldr	r0, [r3, r5]
   15348:	bl	11928 <opendir@plt>
   1534c:	subs	r9, r0, #0
   15350:	bne	15388 <__assert_fail@plt+0x3760>
   15354:	b	152a4 <__assert_fail@plt+0x367c>
   15358:	ldr	r3, [r6]
   1535c:	ldr	r0, [r3, r5]
   15360:	bl	119dc <strlen@plt>
   15364:	mov	r7, r0
   15368:	mov	r0, r4
   1536c:	bl	119dc <strlen@plt>
   15370:	mov	r1, sl
   15374:	add	r0, r7, r0
   15378:	add	r0, r0, #2
   1537c:	bl	18b98 <argp_parse@@Base+0x1e70>
   15380:	subs	r7, r0, #0
   15384:	bne	153b8 <__assert_fail@plt+0x3790>
   15388:	mov	r0, r9
   1538c:	bl	11b38 <readdir64@plt>
   15390:	cmp	r0, #0
   15394:	add	r4, r0, #19
   15398:	bne	15358 <__assert_fail@plt+0x3730>
   1539c:	mov	r0, r9
   153a0:	bl	11c04 <closedir@plt>
   153a4:	b	152a4 <__assert_fail@plt+0x367c>
   153a8:	ldr	r3, [r6]
   153ac:	ldr	r0, [r3, r5]
   153b0:	bl	14c28 <__assert_fail@plt+0x3000>
   153b4:	b	152a4 <__assert_fail@plt+0x367c>
   153b8:	ldr	r2, [r6]
   153bc:	mov	r3, r4
   153c0:	ldr	r1, [pc, #92]	; 15424 <__assert_fail@plt+0x37fc>
   153c4:	ldr	r2, [r2, r5]
   153c8:	bl	11b2c <sprintf@plt>
   153cc:	mov	r2, sp
   153d0:	mov	r1, r7
   153d4:	mov	r0, r8
   153d8:	bl	11bbc <__xstat64@plt>
   153dc:	cmp	r0, #0
   153e0:	bne	153f4 <__assert_fail@plt+0x37cc>
   153e4:	ldr	r3, [sp, #16]
   153e8:	and	r3, r3, #61440	; 0xf000
   153ec:	cmp	r3, #32768	; 0x8000
   153f0:	beq	15400 <__assert_fail@plt+0x37d8>
   153f4:	mov	r0, r7
   153f8:	bl	17ca4 <argp_parse@@Base+0xf7c>
   153fc:	b	15388 <__assert_fail@plt+0x3760>
   15400:	mov	r0, r7
   15404:	bl	14c28 <__assert_fail@plt+0x3000>
   15408:	b	153f4 <__assert_fail@plt+0x37cc>
   1540c:	andeq	r1, r3, ip, lsl #12
   15410:	andeq	r1, r3, r8, lsl #12
   15414:			; <UNDEFINED> instruction: 0x000313b0
   15418:	andeq	pc, r1, r4, lsr #17
   1541c:	andeq	pc, r1, r8, lsr #15
   15420:			; <UNDEFINED> instruction: 0x000313bc
   15424:	muleq	r1, ip, r8
   15428:	ldr	r3, [pc, #236]	; 1551c <__assert_fail@plt+0x38f4>
   1542c:	push	{r4, r5, r6, r7, lr}
   15430:	mov	r2, r1
   15434:	ldr	r3, [r3]
   15438:	sub	sp, sp, #316	; 0x13c
   1543c:	mov	r7, r0
   15440:	add	r1, sp, #184	; 0xb8
   15444:	mov	r0, r2
   15448:	mov	r5, #128	; 0x80
   1544c:	add	r2, sp, #20
   15450:	ldr	r4, [r3]
   15454:	str	r5, [sp, #20]
   15458:	bl	11b8c <getpeername@plt>
   1545c:	cmp	r0, #0
   15460:	bne	154f4 <__assert_fail@plt+0x38cc>
   15464:	mov	r3, #1
   15468:	str	r0, [sp, #4]
   1546c:	str	r0, [sp]
   15470:	str	r3, [sp, #8]
   15474:	mov	r1, r5
   15478:	add	r0, sp, #184	; 0xb8
   1547c:	add	r2, sp, #104	; 0x68
   15480:	mov	r3, #80	; 0x50
   15484:	bl	11ad8 <getnameinfo@plt>
   15488:	add	r6, sp, #24
   1548c:	cmp	r0, #0
   15490:	beq	154fc <__assert_fail@plt+0x38d4>
   15494:	mov	r3, r7
   15498:	mov	r0, r6
   1549c:	ldr	r2, [pc, #124]	; 15520 <__assert_fail@plt+0x38f8>
   154a0:	mov	r1, #80	; 0x50
   154a4:	bl	11a30 <snprintf@plt>
   154a8:	ldr	r5, [pc, #116]	; 15524 <__assert_fail@plt+0x38fc>
   154ac:	mov	r1, r6
   154b0:	mov	r0, r4
   154b4:	ldr	r2, [r5]
   154b8:	sub	r2, r2, r4
   154bc:	bl	11a60 <strncpy@plt>
   154c0:	mov	r0, r4
   154c4:	bl	119dc <strlen@plt>
   154c8:	ldr	r3, [r5]
   154cc:	add	r0, r4, r0
   154d0:	cmp	r0, r3
   154d4:	bcs	154ec <__assert_fail@plt+0x38c4>
   154d8:	mov	r2, #32
   154dc:	strb	r2, [r0], #1
   154e0:	ldr	r3, [r5]
   154e4:	cmp	r3, r0
   154e8:	bhi	154dc <__assert_fail@plt+0x38b4>
   154ec:	add	sp, sp, #316	; 0x13c
   154f0:	pop	{r4, r5, r6, r7, pc}
   154f4:	add	r6, sp, #24
   154f8:	b	15494 <__assert_fail@plt+0x386c>
   154fc:	add	r3, sp, #104	; 0x68
   15500:	str	r3, [sp]
   15504:	mov	r0, r6
   15508:	mov	r3, r7
   1550c:	ldr	r2, [pc, #20]	; 15528 <__assert_fail@plt+0x3900>
   15510:	mov	r1, #80	; 0x50
   15514:	bl	11a30 <snprintf@plt>
   15518:	b	154a8 <__assert_fail@plt+0x3880>
   1551c:	strdeq	r1, [r3], -r4
   15520:	andeq	pc, r1, r0, asr #17
   15524:	strdeq	r1, [r3], -r8
   15528:			; <UNDEFINED> instruction: 0x0001f8b4
   1552c:	ldr	r3, [r1, #12]
   15530:	push	{r4, r5, lr}
   15534:	sub	sp, sp, #8192	; 0x2000
   15538:	mov	r1, r0
   1553c:	sub	sp, sp, #4
   15540:	mov	r4, r0
   15544:	mov	r0, r3
   15548:	bl	15428 <__assert_fail@plt+0x3800>
   1554c:	mov	r5, #8192	; 0x2000
   15550:	b	15568 <__assert_fail@plt+0x3940>
   15554:	mov	r1, sp
   15558:	mov	r0, r4
   1555c:	bl	11a84 <write@plt>
   15560:	cmp	r0, #0
   15564:	ble	15580 <__assert_fail@plt+0x3958>
   15568:	mov	r2, r5
   1556c:	mov	r1, sp
   15570:	mov	r0, r4
   15574:	bl	1179c <read@plt>
   15578:	subs	r2, r0, #0
   1557c:	bgt	15554 <__assert_fail@plt+0x392c>
   15580:	mov	r0, #0
   15584:	bl	119c4 <exit@plt>
   15588:	ldr	r3, [r1, #12]
   1558c:	push	{r4, r5, lr}
   15590:	sub	sp, sp, #8192	; 0x2000
   15594:	mov	r1, r0
   15598:	sub	sp, sp, #4
   1559c:	mov	r4, r0
   155a0:	mov	r0, r3
   155a4:	bl	15428 <__assert_fail@plt+0x3800>
   155a8:	mov	r5, #8192	; 0x2000
   155ac:	mov	r2, r5
   155b0:	mov	r1, sp
   155b4:	mov	r0, r4
   155b8:	bl	1179c <read@plt>
   155bc:	cmp	r0, #0
   155c0:	bgt	155ac <__assert_fail@plt+0x3984>
   155c4:	beq	155d8 <__assert_fail@plt+0x39b0>
   155c8:	bl	11a24 <__errno_location@plt>
   155cc:	ldr	r3, [r0]
   155d0:	cmp	r3, #4
   155d4:	beq	155ac <__assert_fail@plt+0x3984>
   155d8:	mov	r0, #0
   155dc:	bl	119c4 <exit@plt>
   155e0:	push	{r4, lr}
   155e4:	ldr	r4, [pc, #60]	; 15628 <__assert_fail@plt+0x3a00>
   155e8:	ldr	r3, [pc, #60]	; 1562c <__assert_fail@plt+0x3a04>
   155ec:	str	r3, [r4]
   155f0:	bl	119ac <__ctype_b_loc@plt>
   155f4:	mov	r3, #0
   155f8:	ldr	r1, [r0]
   155fc:	lsl	r2, r3, #1
   15600:	ldrh	r2, [r1, r2]
   15604:	tst	r2, #16384	; 0x4000
   15608:	ldrne	r2, [r4]
   1560c:	addne	r1, r2, #1
   15610:	strne	r1, [r4]
   15614:	strbne	r3, [r2]
   15618:	add	r3, r3, #1
   1561c:	cmp	r3, #129	; 0x81
   15620:	bne	155f8 <__assert_fail@plt+0x39d0>
   15624:	pop	{r4, pc}
   15628:	andeq	r1, r3, r8, ror #11
   1562c:	andeq	r1, r3, r4, ror #9
   15630:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15634:	mov	r8, r0
   15638:	ldr	r3, [r1, #12]
   1563c:	ldr	r9, [pc, #188]	; 15700 <__assert_fail@plt+0x3ad8>
   15640:	mov	r1, r0
   15644:	sub	sp, sp, #84	; 0x54
   15648:	mov	r0, r3
   1564c:	bl	15428 <__assert_fail@plt+0x3800>
   15650:	ldr	r6, [r9]
   15654:	cmp	r6, #0
   15658:	beq	156f4 <__assert_fail@plt+0x3acc>
   1565c:	mov	r3, #13
   15660:	ldr	r4, [pc, #156]	; 15704 <__assert_fail@plt+0x3adc>
   15664:	strb	r3, [sp, #76]	; 0x4c
   15668:	mov	r3, #10
   1566c:	mov	r7, r4
   15670:	mov	fp, #72	; 0x48
   15674:	mov	sl, #74	; 0x4a
   15678:	strb	r3, [sp, #77]	; 0x4d
   1567c:	b	156b8 <__assert_fail@plt+0x3a90>
   15680:	mov	r2, fp
   15684:	mov	r1, r4
   15688:	add	r0, sp, #4
   1568c:	bl	11808 <memcpy@plt>
   15690:	mov	r2, sl
   15694:	add	r1, sp, #4
   15698:	mov	r0, r8
   1569c:	bl	11a84 <write@plt>
   156a0:	add	r4, r4, #1
   156a4:	cmp	r4, r6
   156a8:	moveq	r4, r7
   156ac:	cmp	r0, #74	; 0x4a
   156b0:	bne	156ec <__assert_fail@plt+0x3ac4>
   156b4:	ldr	r6, [r9]
   156b8:	sub	r5, r6, r4
   156bc:	cmp	r5, #71	; 0x47
   156c0:	bgt	15680 <__assert_fail@plt+0x3a58>
   156c4:	mov	r2, r5
   156c8:	mov	r1, r4
   156cc:	add	r0, sp, #4
   156d0:	bl	11808 <memcpy@plt>
   156d4:	add	r3, sp, #4
   156d8:	rsb	r2, r5, #72	; 0x48
   156dc:	add	r0, r3, r5
   156e0:	mov	r1, r7
   156e4:	bl	11808 <memcpy@plt>
   156e8:	b	15690 <__assert_fail@plt+0x3a68>
   156ec:	mov	r0, #0
   156f0:	bl	119c4 <exit@plt>
   156f4:	bl	155e0 <__assert_fail@plt+0x39b8>
   156f8:	ldr	r6, [r9]
   156fc:	b	1565c <__assert_fail@plt+0x3a34>
   15700:	andeq	r1, r3, r8, ror #11
   15704:	andeq	r1, r3, r4, ror #9
   15708:	push	{lr}		; (str lr, [sp, #-4]!)
   1570c:	sub	sp, sp, #12
   15710:	mov	r1, #0
   15714:	mov	r0, sp
   15718:	bl	11910 <gettimeofday@plt>
   1571c:	cmp	r0, #0
   15720:	blt	1573c <__assert_fail@plt+0x3b14>
   15724:	ldr	r3, [sp]
   15728:	ldr	r0, [pc, #60]	; 1576c <__assert_fail@plt+0x3b44>
   1572c:	add	r0, r3, r0
   15730:	rev	r0, r0
   15734:	add	sp, sp, #12
   15738:	pop	{pc}		; (ldr pc, [sp], #4)
   1573c:	ldr	r3, [pc, #44]	; 15770 <__assert_fail@plt+0x3b48>
   15740:	ldrb	r0, [r3]
   15744:	cmp	r0, #0
   15748:	beq	15734 <__assert_fail@plt+0x3b0c>
   1574c:	ldr	r3, [pc, #32]	; 15774 <__assert_fail@plt+0x3b4c>
   15750:	mov	r2, #26
   15754:	mov	r1, #1
   15758:	ldr	r3, [r3]
   1575c:	ldr	r0, [pc, #20]	; 15778 <__assert_fail@plt+0x3b50>
   15760:	bl	118f8 <fwrite@plt>
   15764:	mov	r0, #0
   15768:	b	15734 <__assert_fail@plt+0x3b0c>
   1576c:			; <UNDEFINED> instruction: 0x83aa7e80
   15770:			; <UNDEFINED> instruction: 0x000313bc
   15774:			; <UNDEFINED> instruction: 0x000313b0
   15778:	andeq	pc, r1, ip, ror r3	; <UNPREDICTABLE>
   1577c:	push	{r4, r5, r6, r7, r8, lr}
   15780:	sub	sp, sp, #352	; 0x160
   15784:	mov	r3, #128	; 0x80
   15788:	mov	r4, r0
   1578c:	mov	r7, r1
   15790:	mov	r8, r2
   15794:	ldr	r1, [pc, #772]	; 15aa0 <__assert_fail@plt+0x3e78>
   15798:	mov	r2, #1
   1579c:	ldr	r0, [pc, #768]	; 15aa4 <__assert_fail@plt+0x3e7c>
   157a0:	str	r3, [sp, #20]
   157a4:	bl	11a00 <setenv@plt>
   157a8:	ldr	r0, [pc, #760]	; 15aa8 <__assert_fail@plt+0x3e80>
   157ac:	bl	11bc8 <unsetenv@plt>
   157b0:	ldr	r0, [pc, #756]	; 15aac <__assert_fail@plt+0x3e84>
   157b4:	bl	11bc8 <unsetenv@plt>
   157b8:	ldr	r0, [pc, #752]	; 15ab0 <__assert_fail@plt+0x3e88>
   157bc:	bl	11bc8 <unsetenv@plt>
   157c0:	ldr	r0, [pc, #748]	; 15ab4 <__assert_fail@plt+0x3e8c>
   157c4:	bl	11bc8 <unsetenv@plt>
   157c8:	ldr	r0, [pc, #744]	; 15ab8 <__assert_fail@plt+0x3e90>
   157cc:	bl	11bc8 <unsetenv@plt>
   157d0:	ldr	r0, [pc, #740]	; 15abc <__assert_fail@plt+0x3e94>
   157d4:	bl	11bc8 <unsetenv@plt>
   157d8:	mov	r0, r4
   157dc:	add	r1, sp, #40	; 0x28
   157e0:	add	r2, sp, #20
   157e4:	bl	11b50 <getsockname@plt>
   157e8:	cmp	r0, #0
   157ec:	blt	1593c <__assert_fail@plt+0x3d14>
   157f0:	mov	r0, #3
   157f4:	mov	r3, #16
   157f8:	add	r4, sp, #168	; 0xa8
   157fc:	add	r5, sp, #24
   15800:	str	r0, [sp, #8]
   15804:	str	r3, [sp, #4]
   15808:	ldr	r1, [sp, #20]
   1580c:	mov	r2, r4
   15810:	str	r5, [sp]
   15814:	mov	r3, #184	; 0xb8
   15818:	add	r0, sp, #40	; 0x28
   1581c:	bl	11ad8 <getnameinfo@plt>
   15820:	cmp	r0, #0
   15824:	beq	158d0 <__assert_fail@plt+0x3ca8>
   15828:	bl	117e4 <gai_strerror@plt>
   1582c:	ldr	r1, [pc, #652]	; 15ac0 <__assert_fail@plt+0x3e98>
   15830:	ldr	r6, [pc, #652]	; 15ac4 <__assert_fail@plt+0x3e9c>
   15834:	mov	r2, r0
   15838:	mov	r0, #4
   1583c:	bl	11b14 <syslog@plt>
   15840:	ldrb	r3, [r6, #2]
   15844:	cmp	r3, #0
   15848:	bne	15954 <__assert_fail@plt+0x3d2c>
   1584c:	mov	r2, #3
   15850:	mov	r3, #16
   15854:	str	r2, [sp, #8]
   15858:	str	r3, [sp, #4]
   1585c:	str	r5, [sp]
   15860:	mov	r3, #184	; 0xb8
   15864:	mov	r2, r4
   15868:	mov	r1, r8
   1586c:	mov	r0, r7
   15870:	bl	11ad8 <getnameinfo@plt>
   15874:	cmp	r0, #0
   15878:	bne	15920 <__assert_fail@plt+0x3cf8>
   1587c:	mov	r2, #1
   15880:	mov	r1, r4
   15884:	ldr	r0, [pc, #552]	; 15ab4 <__assert_fail@plt+0x3e8c>
   15888:	bl	11a00 <setenv@plt>
   1588c:	cmp	r0, #0
   15890:	blt	15a68 <__assert_fail@plt+0x3e40>
   15894:	ldr	r6, [pc, #552]	; 15ac4 <__assert_fail@plt+0x3e9c>
   15898:	ldrb	r3, [r6]
   1589c:	cmp	r3, #0
   158a0:	bne	15a28 <__assert_fail@plt+0x3e00>
   158a4:	mov	r1, r5
   158a8:	mov	r2, #1
   158ac:	ldr	r0, [pc, #516]	; 15ab8 <__assert_fail@plt+0x3e90>
   158b0:	bl	11a00 <setenv@plt>
   158b4:	cmp	r0, #0
   158b8:	blt	15a58 <__assert_fail@plt+0x3e30>
   158bc:	ldrb	r3, [r6, #2]
   158c0:	cmp	r3, #0
   158c4:	bne	159c0 <__assert_fail@plt+0x3d98>
   158c8:	add	sp, sp, #352	; 0x160
   158cc:	pop	{r4, r5, r6, r7, r8, pc}
   158d0:	mov	r2, #1
   158d4:	mov	r1, r4
   158d8:	ldr	r0, [pc, #456]	; 15aa8 <__assert_fail@plt+0x3e80>
   158dc:	bl	11a00 <setenv@plt>
   158e0:	cmp	r0, #0
   158e4:	blt	15a7c <__assert_fail@plt+0x3e54>
   158e8:	ldr	r6, [pc, #468]	; 15ac4 <__assert_fail@plt+0x3e9c>
   158ec:	ldrb	r3, [r6]
   158f0:	cmp	r3, #0
   158f4:	bne	15a40 <__assert_fail@plt+0x3e18>
   158f8:	mov	r2, #1
   158fc:	mov	r1, r5
   15900:	ldr	r0, [pc, #424]	; 15ab0 <__assert_fail@plt+0x3e88>
   15904:	bl	11a00 <setenv@plt>
   15908:	cmp	r0, #0
   1590c:	bge	15840 <__assert_fail@plt+0x3c18>
   15910:	ldr	r1, [pc, #432]	; 15ac8 <__assert_fail@plt+0x3ea0>
   15914:	mov	r0, #4
   15918:	bl	11b14 <syslog@plt>
   1591c:	b	15840 <__assert_fail@plt+0x3c18>
   15920:	bl	117e4 <gai_strerror@plt>
   15924:	ldr	r1, [pc, #404]	; 15ac0 <__assert_fail@plt+0x3e98>
   15928:	mov	r2, r0
   1592c:	mov	r0, #4
   15930:	bl	11b14 <syslog@plt>
   15934:	add	sp, sp, #352	; 0x160
   15938:	pop	{r4, r5, r6, r7, r8, pc}
   1593c:	ldr	r1, [pc, #392]	; 15acc <__assert_fail@plt+0x3ea4>
   15940:	mov	r0, #4
   15944:	bl	11b14 <syslog@plt>
   15948:	add	r4, sp, #168	; 0xa8
   1594c:	add	r5, sp, #24
   15950:	b	1584c <__assert_fail@plt+0x3c24>
   15954:	mov	r3, #0
   15958:	str	r3, [sp, #8]
   1595c:	str	r3, [sp, #4]
   15960:	str	r3, [sp]
   15964:	ldr	r1, [sp, #20]
   15968:	add	r0, sp, #40	; 0x28
   1596c:	mov	r3, #184	; 0xb8
   15970:	mov	r2, r4
   15974:	bl	11ad8 <getnameinfo@plt>
   15978:	cmp	r0, #0
   1597c:	beq	15998 <__assert_fail@plt+0x3d70>
   15980:	bl	117e4 <gai_strerror@plt>
   15984:	ldr	r1, [pc, #308]	; 15ac0 <__assert_fail@plt+0x3e98>
   15988:	mov	r2, r0
   1598c:	mov	r0, #4
   15990:	bl	11b14 <syslog@plt>
   15994:	b	1584c <__assert_fail@plt+0x3c24>
   15998:	mov	r2, #1
   1599c:	mov	r1, r4
   159a0:	ldr	r0, [pc, #260]	; 15aac <__assert_fail@plt+0x3e84>
   159a4:	bl	11a00 <setenv@plt>
   159a8:	cmp	r0, #0
   159ac:	bge	1584c <__assert_fail@plt+0x3c24>
   159b0:	ldr	r1, [pc, #280]	; 15ad0 <__assert_fail@plt+0x3ea8>
   159b4:	mov	r0, #4
   159b8:	bl	11b14 <syslog@plt>
   159bc:	b	1584c <__assert_fail@plt+0x3c24>
   159c0:	mov	r3, #0
   159c4:	str	r3, [sp, #8]
   159c8:	str	r3, [sp, #4]
   159cc:	str	r3, [sp]
   159d0:	mov	r1, r8
   159d4:	mov	r0, r7
   159d8:	mov	r3, #184	; 0xb8
   159dc:	mov	r2, r4
   159e0:	bl	11ad8 <getnameinfo@plt>
   159e4:	cmp	r0, #0
   159e8:	bne	15920 <__assert_fail@plt+0x3cf8>
   159ec:	mov	r2, #1
   159f0:	mov	r1, r4
   159f4:	ldr	r0, [pc, #192]	; 15abc <__assert_fail@plt+0x3e94>
   159f8:	bl	11a00 <setenv@plt>
   159fc:	cmp	r0, #0
   15a00:	blt	15a90 <__assert_fail@plt+0x3e68>
   15a04:	ldrb	r3, [r6]
   15a08:	cmp	r3, #0
   15a0c:	beq	158c8 <__assert_fail@plt+0x3ca0>
   15a10:	ldr	r3, [pc, #188]	; 15ad4 <__assert_fail@plt+0x3eac>
   15a14:	mov	r2, r4
   15a18:	ldr	r1, [pc, #184]	; 15ad8 <__assert_fail@plt+0x3eb0>
   15a1c:	ldr	r0, [r3]
   15a20:	bl	11a0c <fprintf@plt>
   15a24:	b	158c8 <__assert_fail@plt+0x3ca0>
   15a28:	ldr	r3, [pc, #164]	; 15ad4 <__assert_fail@plt+0x3eac>
   15a2c:	mov	r2, r4
   15a30:	ldr	r1, [pc, #164]	; 15adc <__assert_fail@plt+0x3eb4>
   15a34:	ldr	r0, [r3]
   15a38:	bl	11a0c <fprintf@plt>
   15a3c:	b	158a4 <__assert_fail@plt+0x3c7c>
   15a40:	ldr	r3, [pc, #140]	; 15ad4 <__assert_fail@plt+0x3eac>
   15a44:	mov	r2, r4
   15a48:	ldr	r1, [pc, #144]	; 15ae0 <__assert_fail@plt+0x3eb8>
   15a4c:	ldr	r0, [r3]
   15a50:	bl	11a0c <fprintf@plt>
   15a54:	b	158f8 <__assert_fail@plt+0x3cd0>
   15a58:	ldr	r1, [pc, #132]	; 15ae4 <__assert_fail@plt+0x3ebc>
   15a5c:	mov	r0, #4
   15a60:	bl	11b14 <syslog@plt>
   15a64:	b	158bc <__assert_fail@plt+0x3c94>
   15a68:	ldr	r1, [pc, #120]	; 15ae8 <__assert_fail@plt+0x3ec0>
   15a6c:	mov	r0, #4
   15a70:	bl	11b14 <syslog@plt>
   15a74:	ldr	r6, [pc, #72]	; 15ac4 <__assert_fail@plt+0x3e9c>
   15a78:	b	158a4 <__assert_fail@plt+0x3c7c>
   15a7c:	ldr	r1, [pc, #104]	; 15aec <__assert_fail@plt+0x3ec4>
   15a80:	mov	r0, #4
   15a84:	bl	11b14 <syslog@plt>
   15a88:	ldr	r6, [pc, #52]	; 15ac4 <__assert_fail@plt+0x3e9c>
   15a8c:	b	158f8 <__assert_fail@plt+0x3cd0>
   15a90:	ldr	r1, [pc, #88]	; 15af0 <__assert_fail@plt+0x3ec8>
   15a94:	mov	r0, #4
   15a98:	bl	11b14 <syslog@plt>
   15a9c:	b	158c8 <__assert_fail@plt+0x3ca0>
   15aa0:	andeq	pc, r1, r4, asr #17
   15aa4:	andeq	pc, r1, r8, asr #17
   15aa8:	ldrdeq	pc, [r1], -r0
   15aac:	ldrdeq	pc, [r1], -ip
   15ab0:	andeq	pc, r1, ip, ror #17
   15ab4:	strdeq	pc, [r1], -ip
   15ab8:	andeq	pc, r1, r8, lsl #18
   15abc:	andeq	pc, r1, r8, lsl r9	; <UNPREDICTABLE>
   15ac0:	andeq	pc, r1, ip, lsl #19
   15ac4:			; <UNDEFINED> instruction: 0x000313bc
   15ac8:	andeq	pc, r1, r0, ror r9	; <UNPREDICTABLE>
   15acc:	andeq	pc, r1, r8, lsr #18
   15ad0:	muleq	r1, ip, r9
   15ad4:			; <UNDEFINED> instruction: 0x000313b0
   15ad8:	andeq	pc, r1, r4, lsr #20
   15adc:	ldrdeq	pc, [r1], -r0
   15ae0:	andeq	pc, r1, r4, asr r9	; <UNPREDICTABLE>
   15ae4:	andeq	pc, r1, ip, ror #19
   15ae8:			; <UNDEFINED> instruction: 0x0001f9b8
   15aec:	andeq	pc, r1, ip, lsr r9	; <UNPREDICTABLE>
   15af0:	andeq	pc, r1, r8, lsl #20
   15af4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15af8:	ldr	r6, [sp, #36]	; 0x24
   15afc:	ldr	r7, [sp, #32]
   15b00:	ldr	r4, [r6]
   15b04:	cmp	r4, r0
   15b08:	addge	r8, r1, r4
   15b0c:	bge	15b58 <__assert_fail@plt+0x3f30>
   15b10:	ldrb	ip, [r1, r4]
   15b14:	add	r8, r1, r4
   15b18:	cmp	ip, #32
   15b1c:	cmpne	ip, #9
   15b20:	bne	15b58 <__assert_fail@plt+0x3f30>
   15b24:	add	ip, r4, #1
   15b28:	add	lr, r1, ip
   15b2c:	b	15b44 <__assert_fail@plt+0x3f1c>
   15b30:	ldrb	r5, [lr], #1
   15b34:	add	ip, ip, #1
   15b38:	cmp	r5, #9
   15b3c:	cmpne	r5, #32
   15b40:	bne	15b58 <__assert_fail@plt+0x3f30>
   15b44:	cmp	r0, ip
   15b48:	mov	r8, lr
   15b4c:	mov	r4, ip
   15b50:	bne	15b30 <__assert_fail@plt+0x3f08>
   15b54:	add	r8, r1, r0
   15b58:	str	r4, [r3]
   15b5c:	ldrb	r5, [r8]
   15b60:	cmp	r5, #34	; 0x22
   15b64:	beq	15bac <__assert_fail@plt+0x3f84>
   15b68:	cmp	r5, #39	; 0x27
   15b6c:	beq	15bac <__assert_fail@plt+0x3f84>
   15b70:	cmp	r5, #34	; 0x22
   15b74:	beq	15b98 <__assert_fail@plt+0x3f70>
   15b78:	mov	r9, r1
   15b7c:	mov	sl, r0
   15b80:	mov	r1, r5
   15b84:	mov	r0, r2
   15b88:	mov	r8, r2
   15b8c:	bl	119f4 <strchr@plt>
   15b90:	cmp	r0, #0
   15b94:	beq	15be8 <__assert_fail@plt+0x3fc0>
   15b98:	add	r9, r4, #1
   15b9c:	str	r4, [r7]
   15ba0:	mov	r0, r9
   15ba4:	str	r9, [r6]
   15ba8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15bac:	add	ip, r1, r4
   15bb0:	b	15bc4 <__assert_fail@plt+0x3f9c>
   15bb4:	ldrb	lr, [ip, #1]!
   15bb8:	cmp	lr, r5
   15bbc:	beq	15bdc <__assert_fail@plt+0x3fb4>
   15bc0:	mov	r4, r3
   15bc4:	add	r3, r4, #1
   15bc8:	cmp	r0, r3
   15bcc:	bgt	15bb4 <__assert_fail@plt+0x3f8c>
   15bd0:	ldrb	r5, [r1, r3]
   15bd4:	mov	r4, r3
   15bd8:	b	15b70 <__assert_fail@plt+0x3f48>
   15bdc:	add	r9, r4, #2
   15be0:	mov	r4, r3
   15be4:	b	15b9c <__assert_fail@plt+0x3f74>
   15be8:	add	r5, r9, r4
   15bec:	b	15c18 <__assert_fail@plt+0x3ff0>
   15bf0:	ldrb	r3, [r5, #1]!
   15bf4:	and	r2, r3, #253	; 0xfd
   15bf8:	cmp	r2, #32
   15bfc:	cmpne	r3, #9
   15c00:	mov	r1, r3
   15c04:	beq	15b9c <__assert_fail@plt+0x3f74>
   15c08:	bl	119f4 <strchr@plt>
   15c0c:	cmp	r0, #0
   15c10:	bne	15b9c <__assert_fail@plt+0x3f74>
   15c14:	mov	r4, r9
   15c18:	add	r9, r4, #1
   15c1c:	cmp	sl, r9
   15c20:	mov	r0, r8
   15c24:	bgt	15bf0 <__assert_fail@plt+0x3fc8>
   15c28:	b	15b9c <__assert_fail@plt+0x3f74>
   15c2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15c30:	sub	sp, sp, #36	; 0x24
   15c34:	mov	r9, r3
   15c38:	mov	r8, r2
   15c3c:	mov	sl, r1
   15c40:	mov	r7, r0
   15c44:	bl	119dc <strlen@plt>
   15c48:	mov	r3, #0
   15c4c:	str	r3, [r8]
   15c50:	str	r3, [r9]
   15c54:	subs	r5, r0, #0
   15c58:	ble	15dcc <__assert_fail@plt+0x41a4>
   15c5c:	bl	119ac <__ctype_b_loc@plt>
   15c60:	add	r2, r7, r5
   15c64:	ldr	r1, [r0]
   15c68:	b	15c74 <__assert_fail@plt+0x404c>
   15c6c:	subs	r5, r5, #1
   15c70:	beq	15dcc <__assert_fail@plt+0x41a4>
   15c74:	ldrb	r3, [r2, #-1]!
   15c78:	lsl	r3, r3, #1
   15c7c:	ldrh	r3, [r1, r3]
   15c80:	ands	r3, r3, #8192	; 0x2000
   15c84:	bne	15c6c <__assert_fail@plt+0x4044>
   15c88:	mov	r2, #1
   15c8c:	str	r3, [sp, #28]
   15c90:	str	r2, [r8]
   15c94:	add	fp, sp, #28
   15c98:	b	15ca8 <__assert_fail@plt+0x4080>
   15c9c:	ldr	r3, [r8]
   15ca0:	add	r3, r3, #1
   15ca4:	str	r3, [r8]
   15ca8:	add	r3, sp, #24
   15cac:	str	r3, [sp]
   15cb0:	str	fp, [sp, #4]
   15cb4:	add	r3, sp, #20
   15cb8:	mov	r2, sl
   15cbc:	mov	r1, r7
   15cc0:	mov	r0, r5
   15cc4:	bl	15af4 <__assert_fail@plt+0x3ecc>
   15cc8:	cmp	r0, r5
   15ccc:	blt	15c9c <__assert_fail@plt+0x4074>
   15cd0:	ldr	r0, [r8]
   15cd4:	mov	r1, #4
   15cd8:	add	r0, r0, #1
   15cdc:	bl	18b98 <argp_parse@@Base+0x1e70>
   15ce0:	ldr	r3, [r8]
   15ce4:	mov	r6, #0
   15ce8:	cmp	r3, r6
   15cec:	str	r6, [sp, #28]
   15cf0:	str	r0, [r9]
   15cf4:	ble	15df0 <__assert_fail@plt+0x41c8>
   15cf8:	str	r5, [sp, #12]
   15cfc:	b	15d68 <__assert_fail@plt+0x4140>
   15d00:	cmp	r2, #39	; 0x27
   15d04:	ldr	r2, [sp, #24]
   15d08:	beq	15dbc <__assert_fail@plt+0x4194>
   15d0c:	sub	r2, r2, r3
   15d10:	mov	r1, #1
   15d14:	add	r0, r2, #2
   15d18:	add	r4, r2, r1
   15d1c:	ldr	r5, [r9]
   15d20:	bl	18b98 <argp_parse@@Base+0x1e70>
   15d24:	ldr	r1, [r9]
   15d28:	mov	r2, r4
   15d2c:	str	r0, [r5, r6, lsl #2]
   15d30:	ldr	r3, [r1, r6, lsl #2]
   15d34:	subs	r0, r3, #0
   15d38:	beq	15dcc <__assert_fail@plt+0x41a4>
   15d3c:	ldr	r1, [sp, #20]
   15d40:	add	r1, r7, r1
   15d44:	bl	11808 <memcpy@plt>
   15d48:	ldr	r3, [r9]
   15d4c:	mov	r2, #0
   15d50:	ldr	r3, [r3, r6, lsl #2]
   15d54:	add	r6, r6, #1
   15d58:	strb	r2, [r3, r4]
   15d5c:	ldr	r3, [r8]
   15d60:	cmp	r3, r6
   15d64:	ble	15dd8 <__assert_fail@plt+0x41b0>
   15d68:	add	r3, sp, #24
   15d6c:	str	r3, [sp]
   15d70:	mov	r2, sl
   15d74:	add	r3, sp, #20
   15d78:	str	fp, [sp, #4]
   15d7c:	mov	r1, r7
   15d80:	ldr	r0, [sp, #12]
   15d84:	bl	15af4 <__assert_fail@plt+0x3ecc>
   15d88:	ldr	r3, [sp, #20]
   15d8c:	ldrb	r2, [r7, r3]
   15d90:	cmp	r2, #34	; 0x22
   15d94:	bne	15d00 <__assert_fail@plt+0x40d8>
   15d98:	ldr	r2, [sp, #24]
   15d9c:	ldrb	r1, [r7, r2]
   15da0:	cmp	r1, #34	; 0x22
   15da4:	bne	15d0c <__assert_fail@plt+0x40e4>
   15da8:	add	r3, r3, #1
   15dac:	sub	r2, r2, #1
   15db0:	str	r3, [sp, #20]
   15db4:	str	r2, [sp, #24]
   15db8:	b	15d0c <__assert_fail@plt+0x40e4>
   15dbc:	ldrb	r1, [r7, r2]
   15dc0:	cmp	r1, #39	; 0x27
   15dc4:	bne	15d0c <__assert_fail@plt+0x40e4>
   15dc8:	b	15da8 <__assert_fail@plt+0x4180>
   15dcc:	mov	r0, #1
   15dd0:	add	sp, sp, #36	; 0x24
   15dd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15dd8:	ldr	r3, [r9]
   15ddc:	lsl	r6, r6, #2
   15de0:	mov	r0, #0
   15de4:	str	r0, [r3, r6]
   15de8:	add	sp, sp, #36	; 0x24
   15dec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15df0:	mov	r3, r0
   15df4:	b	15de0 <__assert_fail@plt+0x41b8>
   15df8:	push	{r4, r5, r6, lr}
   15dfc:	subs	r4, r0, #1
   15e00:	mov	r6, r1
   15e04:	bmi	15e20 <__assert_fail@plt+0x41f8>
   15e08:	add	r5, r1, r0, lsl #2
   15e0c:	sub	r4, r4, #1
   15e10:	ldr	r0, [r5, #-4]!
   15e14:	bl	17ca4 <argp_parse@@Base+0xf7c>
   15e18:	cmn	r4, #1
   15e1c:	bne	15e0c <__assert_fail@plt+0x41e4>
   15e20:	mov	r0, r6
   15e24:	bl	17ca4 <argp_parse@@Base+0xf7c>
   15e28:	mov	r0, #1
   15e2c:	pop	{r4, r5, r6, pc}
   15e30:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15e34:	subs	sl, r2, #0
   15e38:	beq	15ec4 <__assert_fail@plt+0x429c>
   15e3c:	mov	r8, r0
   15e40:	mov	r0, #1
   15e44:	mov	r7, r1
   15e48:	bl	18be0 <argp_parse@@Base+0x1eb8>
   15e4c:	subs	r4, r0, #0
   15e50:	beq	15ec4 <__assert_fail@plt+0x429c>
   15e54:	mov	r6, #0
   15e58:	cmp	r8, #0
   15e5c:	strb	r6, [r4]
   15e60:	ble	15edc <__assert_fail@plt+0x42b4>
   15e64:	ldr	r9, [pc, #156]	; 15f08 <__assert_fail@plt+0x42e0>
   15e68:	sub	r7, r7, #4
   15e6c:	mov	r5, r6
   15e70:	b	15ea0 <__assert_fail@plt+0x4278>
   15e74:	cmp	r5, #0
   15e78:	add	r5, r5, #1
   15e7c:	beq	15e8c <__assert_fail@plt+0x4264>
   15e80:	bl	119dc <strlen@plt>
   15e84:	ldrh	r3, [r9]
   15e88:	strh	r3, [r4, r0]
   15e8c:	ldr	r1, [r7, #4]!
   15e90:	mov	r0, r4
   15e94:	bl	11904 <strcat@plt>
   15e98:	cmp	r8, r5
   15e9c:	beq	15ecc <__assert_fail@plt+0x42a4>
   15ea0:	ldr	r0, [r7, #4]
   15ea4:	bl	119dc <strlen@plt>
   15ea8:	add	r0, r0, #2
   15eac:	add	r6, r6, r0
   15eb0:	mov	r1, r6
   15eb4:	mov	r0, r4
   15eb8:	bl	18c0c <argp_parse@@Base+0x1ee4>
   15ebc:	subs	r4, r0, #0
   15ec0:	bne	15e74 <__assert_fail@plt+0x424c>
   15ec4:	mov	r0, #1
   15ec8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15ecc:	ldrb	r3, [r4]
   15ed0:	cmp	r3, #0
   15ed4:	movne	r5, #0
   15ed8:	bne	15eec <__assert_fail@plt+0x42c4>
   15edc:	mov	r0, #0
   15ee0:	str	r4, [sl]
   15ee4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15ee8:	strb	r5, [r4, r0]
   15eec:	mov	r0, r4
   15ef0:	bl	119dc <strlen@plt>
   15ef4:	sub	r0, r0, #1
   15ef8:	ldrb	r3, [r4, r0]
   15efc:	cmp	r3, #32
   15f00:	beq	15ee8 <__assert_fail@plt+0x42c0>
   15f04:	b	15edc <__assert_fail@plt+0x42b4>
   15f08:			; <UNDEFINED> instruction: 0x0001fdb8
   15f0c:	push	{r4, lr}
   15f10:	mov	r0, #0
   15f14:	bl	11880 <alarm@plt>
   15f18:	mov	r1, #0
   15f1c:	mov	r4, r0
   15f20:	mov	r0, #14
   15f24:	bl	11814 <signal@plt>
   15f28:	cmp	r4, #0
   15f2c:	popne	{r4, pc}
   15f30:	mov	r1, r4
   15f34:	ldr	r2, [pc, #8]	; 15f44 <__assert_fail@plt+0x431c>
   15f38:	mov	r0, #1
   15f3c:	pop	{r4, lr}
   15f40:	b	1191c <error@plt>
   15f44:			; <UNDEFINED> instruction: 0x0001fdbc
   15f48:	push	{r4, r5, r6, r7, r8, lr}
   15f4c:	mov	r5, r1
   15f50:	mov	r6, r2
   15f54:	mov	r7, r0
   15f58:	bl	119b8 <getpid@plt>
   15f5c:	mov	r8, r0
   15f60:	bl	11acc <fork@plt>
   15f64:	cmn	r0, #1
   15f68:	mov	r4, r0
   15f6c:	beq	15ff4 <__assert_fail@plt+0x43cc>
   15f70:	cmp	r0, #0
   15f74:	bne	15fbc <__assert_fail@plt+0x4394>
   15f78:	bl	119e8 <setsid@plt>
   15f7c:	cmn	r0, #1
   15f80:	beq	15ff4 <__assert_fail@plt+0x43cc>
   15f84:	mov	r1, #1
   15f88:	mov	r0, r1
   15f8c:	bl	11814 <signal@plt>
   15f90:	bl	11acc <fork@plt>
   15f94:	cmn	r0, #1
   15f98:	popeq	{r4, r5, r6, r7, r8, pc}
   15f9c:	cmp	r0, #0
   15fa0:	bne	15fdc <__assert_fail@plt+0x43b4>
   15fa4:	cmp	r7, #0
   15fa8:	beq	15fe4 <__assert_fail@plt+0x43bc>
   15fac:	cmp	r5, #0
   15fb0:	beq	15ffc <__assert_fail@plt+0x43d4>
   15fb4:	mov	r0, r8
   15fb8:	pop	{r4, r5, r6, r7, r8, pc}
   15fbc:	cmp	r6, #0
   15fc0:	ble	15fdc <__assert_fail@plt+0x43b4>
   15fc4:	ldr	r1, [pc, #188]	; 16088 <__assert_fail@plt+0x4460>
   15fc8:	mov	r0, #14
   15fcc:	bl	11814 <signal@plt>
   15fd0:	mov	r0, r6
   15fd4:	bl	11880 <alarm@plt>
   15fd8:	bl	11784 <pause@plt>
   15fdc:	mov	r0, #0
   15fe0:	bl	117fc <_exit@plt>
   15fe4:	ldr	r0, [pc, #160]	; 1608c <__assert_fail@plt+0x4464>
   15fe8:	bl	118bc <chdir@plt>
   15fec:	cmp	r0, #0
   15ff0:	bge	15fac <__assert_fail@plt+0x4384>
   15ff4:	mvn	r0, #0
   15ff8:	pop	{r4, r5, r6, r7, r8, pc}
   15ffc:	mov	r0, #4
   16000:	bl	1188c <sysconf@plt>
   16004:	cmn	r0, #1
   16008:	mov	r4, r0
   1600c:	beq	16080 <__assert_fail@plt+0x4458>
   16010:	cmp	r0, #0
   16014:	ble	1602c <__assert_fail@plt+0x4404>
   16018:	mov	r0, r5
   1601c:	add	r5, r5, #1
   16020:	bl	11bf8 <close@plt>
   16024:	cmp	r5, r4
   16028:	blt	16018 <__assert_fail@plt+0x43f0>
   1602c:	mov	r2, #0
   16030:	mov	r1, #2
   16034:	ldr	r0, [pc, #84]	; 16090 <__assert_fail@plt+0x4468>
   16038:	bl	11934 <open64@plt>
   1603c:	cmn	r0, #1
   16040:	mov	r4, r0
   16044:	beq	15fb4 <__assert_fail@plt+0x438c>
   16048:	mov	r1, #0
   1604c:	bl	11898 <dup2@plt>
   16050:	mov	r1, #1
   16054:	mov	r0, r4
   16058:	bl	11898 <dup2@plt>
   1605c:	mov	r1, #2
   16060:	mov	r0, r4
   16064:	bl	11898 <dup2@plt>
   16068:	cmp	r4, #2
   1606c:	ble	15fb4 <__assert_fail@plt+0x438c>
   16070:	mov	r0, r4
   16074:	bl	11bf8 <close@plt>
   16078:	mov	r0, r8
   1607c:	pop	{r4, r5, r6, r7, r8, pc}
   16080:	mov	r4, #64	; 0x40
   16084:	b	16018 <__assert_fail@plt+0x43f0>
   16088:	andeq	r5, r1, ip, lsl #30
   1608c:	ldrdeq	pc, [r1], -r8
   16090:	ldrdeq	pc, [r1], -ip

00016094 <daemon@@Base>:
   16094:	push	{r4, r5, r6, r7, r8, lr}
   16098:	mov	r5, r1
   1609c:	mov	r7, r0
   160a0:	bl	119b8 <getpid@plt>
   160a4:	mov	r6, r0
   160a8:	bl	11acc <fork@plt>
   160ac:	cmn	r0, #1
   160b0:	mov	r4, r0
   160b4:	beq	16128 <daemon@@Base+0x94>
   160b8:	cmp	r0, #0
   160bc:	bne	16110 <daemon@@Base+0x7c>
   160c0:	bl	119e8 <setsid@plt>
   160c4:	cmn	r0, #1
   160c8:	beq	16128 <daemon@@Base+0x94>
   160cc:	mov	r1, #1
   160d0:	mov	r0, r1
   160d4:	bl	11814 <signal@plt>
   160d8:	bl	11acc <fork@plt>
   160dc:	cmn	r0, #1
   160e0:	popeq	{r4, r5, r6, r7, r8, pc}
   160e4:	cmp	r0, #0
   160e8:	bne	16110 <daemon@@Base+0x7c>
   160ec:	cmp	r7, #0
   160f0:	beq	16118 <daemon@@Base+0x84>
   160f4:	cmp	r5, #0
   160f8:	beq	16130 <daemon@@Base+0x9c>
   160fc:	cmn	r6, #1
   16100:	movne	r0, #0
   16104:	moveq	r0, #1
   16108:	rsb	r0, r0, #0
   1610c:	pop	{r4, r5, r6, r7, r8, pc}
   16110:	mov	r0, #0
   16114:	bl	117fc <_exit@plt>
   16118:	ldr	r0, [pc, #152]	; 161b8 <daemon@@Base+0x124>
   1611c:	bl	118bc <chdir@plt>
   16120:	cmp	r0, #0
   16124:	bge	160f4 <daemon@@Base+0x60>
   16128:	mvn	r0, #0
   1612c:	pop	{r4, r5, r6, r7, r8, pc}
   16130:	mov	r0, #4
   16134:	bl	1188c <sysconf@plt>
   16138:	cmn	r0, #1
   1613c:	mov	r4, r0
   16140:	beq	161b0 <daemon@@Base+0x11c>
   16144:	cmp	r0, #0
   16148:	ble	16160 <daemon@@Base+0xcc>
   1614c:	mov	r0, r5
   16150:	add	r5, r5, #1
   16154:	bl	11bf8 <close@plt>
   16158:	cmp	r4, r5
   1615c:	bgt	1614c <daemon@@Base+0xb8>
   16160:	mov	r2, #0
   16164:	mov	r1, #2
   16168:	ldr	r0, [pc, #76]	; 161bc <daemon@@Base+0x128>
   1616c:	bl	11934 <open64@plt>
   16170:	cmn	r0, #1
   16174:	mov	r4, r0
   16178:	beq	160fc <daemon@@Base+0x68>
   1617c:	mov	r1, #0
   16180:	bl	11898 <dup2@plt>
   16184:	mov	r1, #1
   16188:	mov	r0, r4
   1618c:	bl	11898 <dup2@plt>
   16190:	mov	r1, #2
   16194:	mov	r0, r4
   16198:	bl	11898 <dup2@plt>
   1619c:	cmp	r4, #2
   161a0:	ble	160fc <daemon@@Base+0x68>
   161a4:	mov	r0, r4
   161a8:	bl	11bf8 <close@plt>
   161ac:	b	160fc <daemon@@Base+0x68>
   161b0:	mov	r4, #64	; 0x40
   161b4:	b	1614c <daemon@@Base+0xb8>
   161b8:	ldrdeq	pc, [r1], -r8
   161bc:	ldrdeq	pc, [r1], -ip
   161c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   161c4:	sub	sp, sp, #36	; 0x24
   161c8:	ldr	sl, [r0]
   161cc:	str	r0, [sp, #12]
   161d0:	cmp	sl, #0
   161d4:	str	r1, [sp, #16]
   161d8:	str	r2, [sp, #20]
   161dc:	mov	r9, r3
   161e0:	ldr	r8, [r0, #16]
   161e4:	ldr	r7, [sp, #72]	; 0x48
   161e8:	beq	163b4 <daemon@@Base+0x320>
   161ec:	add	fp, sl, #24
   161f0:	str	r8, [sp, #28]
   161f4:	str	r3, [sp, #24]
   161f8:	ldr	r4, [fp, #-20]	; 0xffffffec
   161fc:	sub	r1, fp, #24
   16200:	cmp	r4, #0
   16204:	bne	16214 <daemon@@Base+0x180>
   16208:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1620c:	cmp	r3, #0
   16210:	beq	16388 <daemon@@Base+0x2f4>
   16214:	ldr	r3, [fp, #-12]
   16218:	tst	r3, #4
   1621c:	moveq	sl, r1
   16220:	moveq	r5, r3
   16224:	ldrne	r5, [sl, #12]
   16228:	ands	r5, r5, #8
   1622c:	bne	16370 <daemon@@Base+0x2dc>
   16230:	tst	r3, #8
   16234:	bne	162b0 <daemon@@Base+0x21c>
   16238:	sub	r3, r4, #1
   1623c:	cmp	r3, #254	; 0xfe
   16240:	bhi	162b0 <daemon@@Base+0x21c>
   16244:	bl	119ac <__ctype_b_loc@plt>
   16248:	lsl	r3, r4, #1
   1624c:	ldr	r1, [r0]
   16250:	ldrh	r3, [r1, r3]
   16254:	tst	r3, #16384	; 0x4000
   16258:	beq	162b0 <daemon@@Base+0x21c>
   1625c:	ldr	r3, [r7, #4]
   16260:	add	r1, r3, #1
   16264:	str	r1, [r7, #4]
   16268:	strb	r4, [r3]
   1626c:	ldr	r3, [sl, #8]
   16270:	cmp	r3, #0
   16274:	beq	162a4 <daemon@@Base+0x210>
   16278:	ldr	r3, [r7, #4]
   1627c:	mov	r2, #58	; 0x3a
   16280:	add	r1, r3, #1
   16284:	str	r1, [r7, #4]
   16288:	strb	r2, [r3]
   1628c:	ldr	r3, [sl, #12]
   16290:	tst	r3, #1
   16294:	ldrne	r3, [r7, #4]
   16298:	addne	r1, r3, #1
   1629c:	strne	r1, [r7, #4]
   162a0:	strbne	r2, [r3]
   162a4:	ldr	r3, [r7, #4]
   162a8:	mov	r2, #0
   162ac:	strb	r2, [r3]
   162b0:	ldr	r4, [fp, #-24]	; 0xffffffe8
   162b4:	cmp	r4, #0
   162b8:	beq	16370 <daemon@@Base+0x2dc>
   162bc:	ldr	r8, [r7]
   162c0:	ldr	r6, [r8, #8]
   162c4:	ldr	r0, [r6]
   162c8:	cmp	r0, #0
   162cc:	beq	162f0 <daemon@@Base+0x25c>
   162d0:	mov	r9, r6
   162d4:	mov	r1, r4
   162d8:	bl	11754 <strcmp@plt>
   162dc:	cmp	r0, #0
   162e0:	beq	16378 <daemon@@Base+0x2e4>
   162e4:	ldr	r0, [r9, #16]!
   162e8:	cmp	r0, #0
   162ec:	bne	162d4 <daemon@@Base+0x240>
   162f0:	ldr	r3, [sl, #8]
   162f4:	ldr	r1, [r7, #8]
   162f8:	cmp	r3, #0
   162fc:	str	r4, [r1]
   16300:	beq	16314 <daemon@@Base+0x280>
   16304:	ldr	r3, [sl, #12]
   16308:	tst	r3, #1
   1630c:	moveq	r5, #1
   16310:	movne	r5, #2
   16314:	str	r5, [r1, #4]
   16318:	ldr	ip, [fp, #-20]	; 0xffffffec
   1631c:	mov	r3, #0
   16320:	cmp	ip, r3
   16324:	str	r3, [r1, #8]
   16328:	ldr	r2, [sp, #24]
   1632c:	ldr	r3, [r8, #48]	; 0x30
   16330:	ldreq	ip, [sl, #4]
   16334:	sub	r3, r2, r3
   16338:	bic	ip, ip, #-16777216	; 0xff000000
   1633c:	asr	r3, r3, #2
   16340:	add	lr, r1, #16
   16344:	rsb	r0, r3, r3, lsl #3
   16348:	add	r0, r0, r0, lsl #6
   1634c:	add	r0, r3, r0, lsl #3
   16350:	rsb	r0, r0, r0, lsl #15
   16354:	add	r3, r3, r0, lsl #3
   16358:	add	r3, r3, #1
   1635c:	add	r3, ip, r3, lsl #24
   16360:	str	r3, [r1, #12]
   16364:	mov	r3, #0
   16368:	str	lr, [r7, #8]
   1636c:	str	r3, [r1, #16]
   16370:	add	fp, fp, #24
   16374:	b	161f8 <daemon@@Base+0x164>
   16378:	sub	r6, r9, r6
   1637c:	cmn	r6, #15
   16380:	bge	16370 <daemon@@Base+0x2dc>
   16384:	b	162f0 <daemon@@Base+0x25c>
   16388:	ldr	r3, [fp, #-8]
   1638c:	cmp	r3, #0
   16390:	bne	16214 <daemon@@Base+0x180>
   16394:	ldr	r3, [fp, #-4]
   16398:	cmp	r3, #0
   1639c:	bne	16214 <daemon@@Base+0x180>
   163a0:	ldr	r3, [sp, #12]
   163a4:	ldr	r8, [sp, #28]
   163a8:	ldr	r9, [sp, #24]
   163ac:	ldr	r3, [r3, #4]
   163b0:	b	163c8 <daemon@@Base+0x334>
   163b4:	ldr	r3, [r0, #4]
   163b8:	cmp	r3, #0
   163bc:	moveq	r0, r9
   163c0:	moveq	r9, r3
   163c4:	beq	16438 <daemon@@Base+0x3a4>
   163c8:	ldr	r2, [r7, #4]
   163cc:	ldr	r1, [sp, #12]
   163d0:	str	r3, [r9]
   163d4:	cmp	r8, #0
   163d8:	stmib	r9, {r1, r2}
   163dc:	ldr	r2, [sp, #16]
   163e0:	mov	r3, #0
   163e4:	str	r2, [r9, #16]
   163e8:	ldr	r2, [sp, #20]
   163ec:	str	r3, [r9, #12]
   163f0:	str	r2, [r9, #20]
   163f4:	str	r3, [r9, #24]
   163f8:	str	r3, [r9, #32]
   163fc:	str	r3, [r9, #28]
   16400:	beq	16434 <daemon@@Base+0x3a0>
   16404:	ldr	r2, [r8]
   16408:	cmp	r2, r3
   1640c:	beq	16480 <daemon@@Base+0x3ec>
   16410:	add	r3, r3, #1
   16414:	ldr	r2, [r8, r3, lsl #4]
   16418:	cmp	r2, #0
   1641c:	bne	16410 <daemon@@Base+0x37c>
   16420:	lsl	r3, r3, #2
   16424:	ldr	r2, [r7, #12]
   16428:	add	r3, r2, r3
   1642c:	str	r2, [r9, #28]
   16430:	str	r3, [r7, #12]
   16434:	add	r0, r9, #36	; 0x24
   16438:	cmp	r8, #0
   1643c:	beq	16478 <daemon@@Base+0x3e4>
   16440:	ldr	r1, [r8]
   16444:	cmp	r1, #0
   16448:	beq	16478 <daemon@@Base+0x3e4>
   1644c:	mov	r2, #0
   16450:	add	r4, r2, #1
   16454:	mov	r3, r0
   16458:	str	r7, [sp]
   1645c:	mov	r0, r1
   16460:	mov	r1, r9
   16464:	bl	161c0 <daemon@@Base+0x12c>
   16468:	ldr	r1, [r8, r4, lsl #4]
   1646c:	mov	r2, r4
   16470:	cmp	r1, #0
   16474:	bne	16450 <daemon@@Base+0x3bc>
   16478:	add	sp, sp, #36	; 0x24
   1647c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16480:	mov	r3, r2
   16484:	b	16424 <daemon@@Base+0x390>
   16488:	cmp	r0, #86	; 0x56
   1648c:	beq	16498 <daemon@@Base+0x404>
   16490:	mov	r0, #7
   16494:	bx	lr
   16498:	ldr	r3, [pc, #104]	; 16508 <daemon@@Base+0x474>
   1649c:	push	{r4, lr}
   164a0:	mov	r4, r2
   164a4:	ldr	r3, [r3]
   164a8:	cmp	r3, #0
   164ac:	beq	164d0 <daemon@@Base+0x43c>
   164b0:	mov	r1, r2
   164b4:	ldr	r0, [r2, #48]	; 0x30
   164b8:	blx	r3
   164bc:	ldr	r0, [r4, #16]
   164c0:	ands	r0, r0, #32
   164c4:	beq	16504 <daemon@@Base+0x470>
   164c8:	mov	r0, #0
   164cc:	pop	{r4, pc}
   164d0:	ldr	r3, [pc, #52]	; 1650c <daemon@@Base+0x478>
   164d4:	ldr	r2, [r3]
   164d8:	cmp	r2, #0
   164dc:	beq	164f0 <daemon@@Base+0x45c>
   164e0:	ldr	r1, [pc, #40]	; 16510 <daemon@@Base+0x47c>
   164e4:	ldr	r0, [r4, #48]	; 0x30
   164e8:	bl	11a0c <fprintf@plt>
   164ec:	b	164bc <daemon@@Base+0x428>
   164f0:	ldr	r2, [pc, #28]	; 16514 <daemon@@Base+0x480>
   164f4:	ldr	r1, [pc, #28]	; 16518 <daemon@@Base+0x484>
   164f8:	mov	r0, r4
   164fc:	bl	1cfac <argp_error@@Base>
   16500:	b	164bc <daemon@@Base+0x428>
   16504:	bl	119c4 <exit@plt>
   16508:			; <UNDEFINED> instruction: 0x000314b0
   1650c:	andeq	r1, r3, r8, lsl r6
   16510:	muleq	r2, r4, r0
   16514:	andeq	pc, r1, r0, lsl #30
   16518:	andeq	pc, r1, r4, asr r6	; <UNPREDICTABLE>
   1651c:	cmn	r0, #3
   16520:	push	{r4, r5, lr}
   16524:	mov	r4, r2
   16528:	sub	sp, sp, #12
   1652c:	beq	16610 <daemon@@Base+0x57c>
   16530:	ble	165a0 <daemon@@Base+0x50c>
   16534:	cmn	r0, #2
   16538:	beq	16560 <daemon@@Base+0x4cc>
   1653c:	cmp	r0, #63	; 0x3f
   16540:	bne	16604 <daemon@@Base+0x570>
   16544:	mov	r0, r4
   16548:	ldr	r2, [pc, #236]	; 1663c <daemon@@Base+0x5a8>
   1654c:	ldr	r1, [r4, #48]	; 0x30
   16550:	bl	1cefc <argp_state_help@@Base>
   16554:	mov	r0, #0
   16558:	add	sp, sp, #12
   1655c:	pop	{r4, r5, pc}
   16560:	ldr	r3, [pc, #216]	; 16640 <daemon@@Base+0x5ac>
   16564:	mov	r0, r1
   16568:	str	r1, [sp, #4]
   1656c:	str	r1, [r3]
   16570:	bl	17bf8 <argp_parse@@Base+0xed0>
   16574:	ldr	r3, [r4, #16]
   16578:	ldr	r2, [pc, #196]	; 16644 <daemon@@Base+0x5b0>
   1657c:	and	r3, r3, #3
   16580:	cmp	r3, #1
   16584:	ldr	r1, [sp, #4]
   16588:	str	r0, [r4, #40]	; 0x28
   1658c:	str	r0, [r2]
   16590:	beq	1662c <daemon@@Base+0x598>
   16594:	mov	r0, #0
   16598:	add	sp, sp, #12
   1659c:	pop	{r4, r5, pc}
   165a0:	cmn	r0, #4
   165a4:	bne	16604 <daemon@@Base+0x570>
   165a8:	cmp	r1, #0
   165ac:	ldr	r0, [pc, #148]	; 16648 <daemon@@Base+0x5b4>
   165b0:	mov	r2, #10
   165b4:	movne	r0, r1
   165b8:	mov	r1, #0
   165bc:	bl	11760 <strtol@plt>
   165c0:	ldr	r4, [pc, #132]	; 1664c <daemon@@Base+0x5b8>
   165c4:	str	r0, [r4]
   165c8:	ldr	r3, [r4]
   165cc:	cmp	r3, #0
   165d0:	sub	r3, r3, #1
   165d4:	str	r3, [r4]
   165d8:	ble	16594 <daemon@@Base+0x500>
   165dc:	mov	r5, #1
   165e0:	mov	r0, r5
   165e4:	bl	11850 <sleep@plt>
   165e8:	ldr	r3, [r4]
   165ec:	cmp	r3, #0
   165f0:	sub	r3, r3, #1
   165f4:	str	r3, [r4]
   165f8:	bgt	165e0 <daemon@@Base+0x54c>
   165fc:	mov	r0, #0
   16600:	b	16598 <daemon@@Base+0x504>
   16604:	mov	r0, #7
   16608:	add	sp, sp, #12
   1660c:	pop	{r4, r5, pc}
   16610:	mov	r0, r4
   16614:	ldr	r2, [pc, #52]	; 16650 <daemon@@Base+0x5bc>
   16618:	ldr	r1, [r4, #48]	; 0x30
   1661c:	bl	1cefc <argp_state_help@@Base>
   16620:	mov	r0, #0
   16624:	add	sp, sp, #12
   16628:	pop	{r4, r5, pc}
   1662c:	ldr	r3, [r4, #8]
   16630:	mov	r0, #0
   16634:	str	r1, [r3]
   16638:	b	16558 <daemon@@Base+0x4c4>
   1663c:	andeq	r0, r0, sl, ror r2
   16640:	andeq	r1, r3, ip, lsr #7
   16644:	andeq	r1, r3, r8, lsr #7
   16648:	andeq	pc, r1, r4, lsr #30
   1664c:	andeq	r1, r3, ip, lsr #9
   16650:	andeq	r0, r0, r1, lsl #4
   16654:	ldr	r3, [r0]
   16658:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1665c:	cmp	r3, #0
   16660:	sub	sp, sp, #12
   16664:	ldr	lr, [r0, #16]
   16668:	beq	166a0 <daemon@@Base+0x60c>
   1666c:	ldr	r0, [r1, #8]
   16670:	mov	r2, #0
   16674:	add	r0, r0, #1
   16678:	str	r0, [r1, #8]
   1667c:	add	r3, r3, #24
   16680:	ldr	r0, [r3, #-20]	; 0xffffffec
   16684:	cmp	r0, #0
   16688:	bne	16698 <daemon@@Base+0x604>
   1668c:	ldr	r0, [r3, #-24]	; 0xffffffe8
   16690:	cmp	r0, #0
   16694:	beq	16c58 <daemon@@Base+0xbc4>
   16698:	add	r2, r2, #1
   1669c:	b	1667c <daemon@@Base+0x5e8>
   166a0:	ldr	r3, [r0, #4]
   166a4:	cmp	r3, #0
   166a8:	ldrne	r3, [r1, #8]
   166ac:	addne	r3, r3, #1
   166b0:	strne	r3, [r1, #8]
   166b4:	cmp	lr, #0
   166b8:	beq	16a44 <daemon@@Base+0x9b0>
   166bc:	ldr	r0, [lr]
   166c0:	cmp	r0, #0
   166c4:	beq	16a44 <daemon@@Base+0x9b0>
   166c8:	mov	r6, r1
   166cc:	str	lr, [sp]
   166d0:	ldr	r2, [r0]
   166d4:	ldr	r7, [r0, #16]
   166d8:	cmp	r2, #0
   166dc:	beq	16714 <daemon@@Base+0x680>
   166e0:	ldr	r0, [r6, #8]
   166e4:	mov	r1, #0
   166e8:	add	r0, r0, #1
   166ec:	str	r0, [r6, #8]
   166f0:	add	r2, r2, #24
   166f4:	ldr	r0, [r2, #-20]	; 0xffffffec
   166f8:	cmp	r0, #0
   166fc:	bne	1670c <daemon@@Base+0x678>
   16700:	ldr	r0, [r2, #-24]	; 0xffffffe8
   16704:	cmp	r0, #0
   16708:	beq	16c88 <daemon@@Base+0xbf4>
   1670c:	add	r1, r1, #1
   16710:	b	166f0 <daemon@@Base+0x65c>
   16714:	ldr	r2, [r0, #4]
   16718:	cmp	r2, #0
   1671c:	ldrne	r2, [r6, #8]
   16720:	addne	r2, r2, #1
   16724:	strne	r2, [r6, #8]
   16728:	cmp	r7, #0
   1672c:	beq	16ce8 <daemon@@Base+0xc54>
   16730:	ldr	r1, [r7]
   16734:	cmp	r1, #0
   16738:	beq	16ce8 <daemon@@Base+0xc54>
   1673c:	str	r7, [sp, #4]
   16740:	ldr	r2, [r1]
   16744:	ldr	r8, [r1, #16]
   16748:	cmp	r2, #0
   1674c:	beq	16784 <daemon@@Base+0x6f0>
   16750:	ldr	r0, [r6, #8]
   16754:	mov	r1, #0
   16758:	add	r0, r0, #1
   1675c:	str	r0, [r6, #8]
   16760:	add	r2, r2, #24
   16764:	ldr	r0, [r2, #-20]	; 0xffffffec
   16768:	cmp	r0, #0
   1676c:	bne	1677c <daemon@@Base+0x6e8>
   16770:	ldr	r0, [r2, #-24]	; 0xffffffe8
   16774:	cmp	r0, #0
   16778:	beq	16cb8 <daemon@@Base+0xc24>
   1677c:	add	r1, r1, #1
   16780:	b	16760 <daemon@@Base+0x6cc>
   16784:	ldr	r2, [r1, #4]
   16788:	cmp	r2, #0
   1678c:	ldrne	r2, [r6, #8]
   16790:	addne	r2, r2, #1
   16794:	strne	r2, [r6, #8]
   16798:	cmp	r8, #0
   1679c:	beq	16cf0 <daemon@@Base+0xc5c>
   167a0:	ldr	r1, [r8]
   167a4:	cmp	r1, #0
   167a8:	beq	16cf0 <daemon@@Base+0xc5c>
   167ac:	ldr	r2, [r1]
   167b0:	ldr	r9, [r1, #16]
   167b4:	cmp	r2, #0
   167b8:	beq	167f0 <daemon@@Base+0x75c>
   167bc:	ldr	r0, [r6, #8]
   167c0:	mov	r1, #0
   167c4:	add	r0, r0, #1
   167c8:	str	r0, [r6, #8]
   167cc:	add	r2, r2, #24
   167d0:	ldr	r0, [r2, #-20]	; 0xffffffec
   167d4:	cmp	r0, #0
   167d8:	bne	167e8 <daemon@@Base+0x754>
   167dc:	ldr	r0, [r2, #-24]	; 0xffffffe8
   167e0:	cmp	r0, #0
   167e4:	beq	16cf8 <daemon@@Base+0xc64>
   167e8:	add	r1, r1, #1
   167ec:	b	167cc <daemon@@Base+0x738>
   167f0:	ldr	r2, [r1, #4]
   167f4:	cmp	r2, #0
   167f8:	ldrne	r2, [r6, #8]
   167fc:	addne	r2, r2, #1
   16800:	strne	r2, [r6, #8]
   16804:	cmp	r9, #0
   16808:	beq	169f4 <daemon@@Base+0x960>
   1680c:	ldr	r1, [r9]
   16810:	cmp	r1, #0
   16814:	beq	169f4 <daemon@@Base+0x960>
   16818:	ldr	r2, [r1]
   1681c:	ldr	sl, [r1, #16]
   16820:	cmp	r2, #0
   16824:	beq	1688c <daemon@@Base+0x7f8>
   16828:	ldr	r0, [r6, #8]
   1682c:	mov	r1, #0
   16830:	add	r0, r0, #1
   16834:	str	r0, [r6, #8]
   16838:	b	16840 <daemon@@Base+0x7ac>
   1683c:	add	r1, r1, #1
   16840:	add	r2, r2, #24
   16844:	ldr	r0, [r2, #-20]	; 0xffffffec
   16848:	cmp	r0, #0
   1684c:	bne	1683c <daemon@@Base+0x7a8>
   16850:	ldr	r0, [r2, #-24]	; 0xffffffe8
   16854:	cmp	r0, #0
   16858:	bne	1683c <daemon@@Base+0x7a8>
   1685c:	ldr	r0, [r2, #-8]
   16860:	cmp	r0, #0
   16864:	bne	1683c <daemon@@Base+0x7a8>
   16868:	ldr	r0, [r2, #-4]
   1686c:	cmp	r0, #0
   16870:	bne	1683c <daemon@@Base+0x7a8>
   16874:	ldm	r6, {r0, r2}
   16878:	add	ip, r1, r1, lsl #1
   1687c:	add	r0, r0, ip
   16880:	add	r1, r2, r1
   16884:	stm	r6, {r0, r1}
   16888:	b	168a0 <daemon@@Base+0x80c>
   1688c:	ldr	r2, [r1, #4]
   16890:	cmp	r2, #0
   16894:	ldrne	r2, [r6, #8]
   16898:	addne	r2, r2, #1
   1689c:	strne	r2, [r6, #8]
   168a0:	cmp	sl, #0
   168a4:	beq	16c50 <daemon@@Base+0xbbc>
   168a8:	ldr	r1, [sl]
   168ac:	cmp	r1, #0
   168b0:	beq	16c50 <daemon@@Base+0xbbc>
   168b4:	ldr	r2, [r1]
   168b8:	ldr	fp, [r1, #16]
   168bc:	cmp	r2, #0
   168c0:	beq	16c28 <daemon@@Base+0xb94>
   168c4:	ldr	r0, [r6, #8]
   168c8:	mov	r1, #0
   168cc:	add	r0, r0, #1
   168d0:	str	r0, [r6, #8]
   168d4:	b	168dc <daemon@@Base+0x848>
   168d8:	add	r1, r1, #1
   168dc:	add	r2, r2, #24
   168e0:	ldr	r0, [r2, #-20]	; 0xffffffec
   168e4:	cmp	r0, #0
   168e8:	bne	168d8 <daemon@@Base+0x844>
   168ec:	ldr	r0, [r2, #-24]	; 0xffffffe8
   168f0:	cmp	r0, #0
   168f4:	bne	168d8 <daemon@@Base+0x844>
   168f8:	ldr	r0, [r2, #-8]
   168fc:	cmp	r0, #0
   16900:	bne	168d8 <daemon@@Base+0x844>
   16904:	ldr	r0, [r2, #-4]
   16908:	cmp	r0, #0
   1690c:	bne	168d8 <daemon@@Base+0x844>
   16910:	ldm	r6, {r0, r2}
   16914:	add	ip, r1, r1, lsl #1
   16918:	add	r0, r0, ip
   1691c:	add	r1, r2, r1
   16920:	stm	r6, {r0, r1}
   16924:	cmp	fp, #0
   16928:	beq	16c48 <daemon@@Base+0xbb4>
   1692c:	ldr	r0, [fp]
   16930:	cmp	r0, #0
   16934:	beq	16c48 <daemon@@Base+0xbb4>
   16938:	ldr	r2, [r0]
   1693c:	ldr	r5, [r0, #16]
   16940:	cmp	r2, #0
   16944:	beq	16a4c <daemon@@Base+0x9b8>
   16948:	ldr	r0, [r6, #8]
   1694c:	mov	r1, #0
   16950:	add	r0, r0, #1
   16954:	str	r0, [r6, #8]
   16958:	b	16960 <daemon@@Base+0x8cc>
   1695c:	add	r1, r1, #1
   16960:	add	r2, r2, #24
   16964:	ldr	r0, [r2, #-20]	; 0xffffffec
   16968:	cmp	r0, #0
   1696c:	bne	1695c <daemon@@Base+0x8c8>
   16970:	ldr	r0, [r2, #-24]	; 0xffffffe8
   16974:	cmp	r0, #0
   16978:	bne	1695c <daemon@@Base+0x8c8>
   1697c:	ldr	r0, [r2, #-8]
   16980:	cmp	r0, #0
   16984:	bne	1695c <daemon@@Base+0x8c8>
   16988:	ldr	r0, [r2, #-4]
   1698c:	cmp	r0, #0
   16990:	bne	1695c <daemon@@Base+0x8c8>
   16994:	ldm	r6, {r0, r2}
   16998:	add	ip, r1, r1, lsl #1
   1699c:	cmp	r5, #0
   169a0:	add	r0, r0, ip
   169a4:	add	r1, r2, r1
   169a8:	stm	r6, {r0, r1}
   169ac:	bne	16a68 <daemon@@Base+0x9d4>
   169b0:	ldr	r1, [r6, #12]
   169b4:	ldr	r0, [fp, #16]!
   169b8:	add	r2, r1, #1
   169bc:	cmp	r0, #0
   169c0:	str	r2, [r6, #12]
   169c4:	bne	16938 <daemon@@Base+0x8a4>
   169c8:	ldr	r1, [sl, #16]!
   169cc:	add	r2, r2, #1
   169d0:	cmp	r1, #0
   169d4:	str	r2, [r6, #12]
   169d8:	bne	168b4 <daemon@@Base+0x820>
   169dc:	ldr	r1, [r9, #16]!
   169e0:	add	r2, r2, #1
   169e4:	cmp	r1, #0
   169e8:	str	r2, [r6, #12]
   169ec:	bne	16818 <daemon@@Base+0x784>
   169f0:	b	169f8 <daemon@@Base+0x964>
   169f4:	ldr	r2, [r6, #12]
   169f8:	ldr	r1, [r8, #16]!
   169fc:	add	r2, r2, #1
   16a00:	cmp	r1, #0
   16a04:	str	r2, [r6, #12]
   16a08:	bne	167ac <daemon@@Base+0x718>
   16a0c:	ldr	r3, [sp, #4]
   16a10:	add	r2, r2, #1
   16a14:	ldr	r1, [r3, #16]!
   16a18:	str	r2, [r6, #12]
   16a1c:	cmp	r1, #0
   16a20:	str	r3, [sp, #4]
   16a24:	bne	16740 <daemon@@Base+0x6ac>
   16a28:	ldr	r3, [sp]
   16a2c:	add	r2, r2, #1
   16a30:	ldr	r0, [r3, #16]!
   16a34:	str	r2, [r6, #12]
   16a38:	cmp	r0, #0
   16a3c:	str	r3, [sp]
   16a40:	bne	166d0 <daemon@@Base+0x63c>
   16a44:	add	sp, sp, #12
   16a48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16a4c:	ldr	r2, [r0, #4]
   16a50:	cmp	r2, #0
   16a54:	ldrne	r2, [r6, #8]
   16a58:	addne	r2, r2, #1
   16a5c:	strne	r2, [r6, #8]
   16a60:	cmp	r5, #0
   16a64:	beq	169b0 <daemon@@Base+0x91c>
   16a68:	ldr	r0, [r5]
   16a6c:	cmp	r0, #0
   16a70:	beq	169b0 <daemon@@Base+0x91c>
   16a74:	ldr	r2, [r0]
   16a78:	ldr	r4, [r0, #16]
   16a7c:	cmp	r2, #0
   16a80:	beq	16be0 <daemon@@Base+0xb4c>
   16a84:	ldr	r0, [r6, #8]
   16a88:	mov	r1, #0
   16a8c:	add	r0, r0, #1
   16a90:	str	r0, [r6, #8]
   16a94:	b	16a9c <daemon@@Base+0xa08>
   16a98:	add	r1, r1, #1
   16a9c:	add	r2, r2, #24
   16aa0:	ldr	r0, [r2, #-20]	; 0xffffffec
   16aa4:	cmp	r0, #0
   16aa8:	bne	16a98 <daemon@@Base+0xa04>
   16aac:	ldr	r0, [r2, #-24]	; 0xffffffe8
   16ab0:	cmp	r0, #0
   16ab4:	bne	16a98 <daemon@@Base+0xa04>
   16ab8:	ldr	r0, [r2, #-8]
   16abc:	cmp	r0, #0
   16ac0:	bne	16a98 <daemon@@Base+0xa04>
   16ac4:	ldr	r0, [r2, #-4]
   16ac8:	cmp	r0, #0
   16acc:	bne	16a98 <daemon@@Base+0xa04>
   16ad0:	ldm	r6, {r0, r2}
   16ad4:	add	ip, r1, r1, lsl #1
   16ad8:	add	r0, r0, ip
   16adc:	add	r1, r2, r1
   16ae0:	stm	r6, {r0, r1}
   16ae4:	cmp	r4, #0
   16ae8:	beq	16c00 <daemon@@Base+0xb6c>
   16aec:	ldr	r0, [r4]
   16af0:	cmp	r0, #0
   16af4:	beq	16c00 <daemon@@Base+0xb6c>
   16af8:	ldr	r1, [r0]
   16afc:	ldr	r2, [r0, #16]
   16b00:	cmp	r1, #0
   16b04:	beq	16c10 <daemon@@Base+0xb7c>
   16b08:	ldr	ip, [r6, #8]
   16b0c:	mov	r0, #0
   16b10:	add	ip, ip, #1
   16b14:	str	ip, [r6, #8]
   16b18:	b	16b20 <daemon@@Base+0xa8c>
   16b1c:	add	r0, r0, #1
   16b20:	add	r1, r1, #24
   16b24:	ldr	ip, [r1, #-20]	; 0xffffffec
   16b28:	cmp	ip, #0
   16b2c:	bne	16b1c <daemon@@Base+0xa88>
   16b30:	ldr	ip, [r1, #-24]	; 0xffffffe8
   16b34:	cmp	ip, #0
   16b38:	bne	16b1c <daemon@@Base+0xa88>
   16b3c:	ldr	ip, [r1, #-8]
   16b40:	cmp	ip, #0
   16b44:	bne	16b1c <daemon@@Base+0xa88>
   16b48:	ldr	ip, [r1, #-4]
   16b4c:	cmp	ip, #0
   16b50:	bne	16b1c <daemon@@Base+0xa88>
   16b54:	ldr	ip, [r6]
   16b58:	ldr	r1, [r6, #4]
   16b5c:	add	lr, r0, r0, lsl #1
   16b60:	add	ip, ip, lr
   16b64:	add	r0, r1, r0
   16b68:	str	ip, [r6]
   16b6c:	str	r0, [r6, #4]
   16b70:	cmp	r2, #0
   16b74:	beq	16c08 <daemon@@Base+0xb74>
   16b78:	ldr	r0, [r2]
   16b7c:	cmp	r0, #0
   16b80:	beq	16c08 <daemon@@Base+0xb74>
   16b84:	mov	r7, r2
   16b88:	mov	r1, r6
   16b8c:	bl	16654 <daemon@@Base+0x5c0>
   16b90:	ldr	r1, [r6, #12]
   16b94:	ldr	r0, [r7, #16]!
   16b98:	add	r1, r1, #1
   16b9c:	cmp	r0, #0
   16ba0:	str	r1, [r6, #12]
   16ba4:	bne	16b88 <daemon@@Base+0xaf4>
   16ba8:	ldr	r0, [r4, #16]!
   16bac:	add	r1, r1, #1
   16bb0:	cmp	r0, #0
   16bb4:	str	r1, [r6, #12]
   16bb8:	bne	16af8 <daemon@@Base+0xa64>
   16bbc:	ldr	r0, [r5, #16]!
   16bc0:	add	r1, r1, #1
   16bc4:	cmp	r0, #0
   16bc8:	str	r1, [r6, #12]
   16bcc:	beq	169b4 <daemon@@Base+0x920>
   16bd0:	ldr	r2, [r0]
   16bd4:	ldr	r4, [r0, #16]
   16bd8:	cmp	r2, #0
   16bdc:	bne	16a84 <daemon@@Base+0x9f0>
   16be0:	ldr	r2, [r0, #4]
   16be4:	cmp	r2, #0
   16be8:	beq	16ae4 <daemon@@Base+0xa50>
   16bec:	ldr	r2, [r6, #8]
   16bf0:	cmp	r4, #0
   16bf4:	add	r2, r2, #1
   16bf8:	str	r2, [r6, #8]
   16bfc:	bne	16aec <daemon@@Base+0xa58>
   16c00:	ldr	r1, [r6, #12]
   16c04:	b	16bbc <daemon@@Base+0xb28>
   16c08:	ldr	r1, [r6, #12]
   16c0c:	b	16ba8 <daemon@@Base+0xb14>
   16c10:	ldr	r1, [r0, #4]
   16c14:	cmp	r1, #0
   16c18:	ldrne	r1, [r6, #8]
   16c1c:	addne	r1, r1, #1
   16c20:	strne	r1, [r6, #8]
   16c24:	b	16b70 <daemon@@Base+0xadc>
   16c28:	ldr	r2, [r1, #4]
   16c2c:	cmp	r2, #0
   16c30:	beq	16924 <daemon@@Base+0x890>
   16c34:	ldr	r2, [r6, #8]
   16c38:	cmp	fp, #0
   16c3c:	add	r2, r2, #1
   16c40:	str	r2, [r6, #8]
   16c44:	bne	1692c <daemon@@Base+0x898>
   16c48:	ldr	r2, [r6, #12]
   16c4c:	b	169c8 <daemon@@Base+0x934>
   16c50:	ldr	r2, [r6, #12]
   16c54:	b	169dc <daemon@@Base+0x948>
   16c58:	ldr	r0, [r3, #-8]
   16c5c:	cmp	r0, #0
   16c60:	bne	16698 <daemon@@Base+0x604>
   16c64:	ldr	r0, [r3, #-4]
   16c68:	cmp	r0, #0
   16c6c:	bne	16698 <daemon@@Base+0x604>
   16c70:	ldm	r1, {r0, r3}
   16c74:	add	ip, r2, r2, lsl #1
   16c78:	add	r0, r0, ip
   16c7c:	add	r2, r3, r2
   16c80:	stm	r1, {r0, r2}
   16c84:	b	166b4 <daemon@@Base+0x620>
   16c88:	ldr	r0, [r2, #-8]
   16c8c:	cmp	r0, #0
   16c90:	bne	1670c <daemon@@Base+0x678>
   16c94:	ldr	r0, [r2, #-4]
   16c98:	cmp	r0, #0
   16c9c:	bne	1670c <daemon@@Base+0x678>
   16ca0:	ldm	r6, {r0, r2}
   16ca4:	add	ip, r1, r1, lsl #1
   16ca8:	add	r0, r0, ip
   16cac:	add	r1, r2, r1
   16cb0:	stm	r6, {r0, r1}
   16cb4:	b	16728 <daemon@@Base+0x694>
   16cb8:	ldr	r0, [r2, #-8]
   16cbc:	cmp	r0, #0
   16cc0:	bne	1677c <daemon@@Base+0x6e8>
   16cc4:	ldr	r0, [r2, #-4]
   16cc8:	cmp	r0, #0
   16ccc:	bne	1677c <daemon@@Base+0x6e8>
   16cd0:	ldm	r6, {r0, r2}
   16cd4:	add	ip, r1, r1, lsl #1
   16cd8:	add	r0, r0, ip
   16cdc:	add	r1, r2, r1
   16ce0:	stm	r6, {r0, r1}
   16ce4:	b	16798 <daemon@@Base+0x704>
   16ce8:	ldr	r2, [r6, #12]
   16cec:	b	16a28 <daemon@@Base+0x994>
   16cf0:	ldr	r2, [r6, #12]
   16cf4:	b	16a0c <daemon@@Base+0x978>
   16cf8:	ldr	r0, [r2, #-8]
   16cfc:	cmp	r0, #0
   16d00:	bne	167e8 <daemon@@Base+0x754>
   16d04:	ldr	r0, [r2, #-4]
   16d08:	cmp	r0, #0
   16d0c:	bne	167e8 <daemon@@Base+0x754>
   16d10:	ldm	r6, {r0, r2}
   16d14:	add	ip, r1, r1, lsl #1
   16d18:	add	r0, r0, ip
   16d1c:	add	r1, r2, r1
   16d20:	stm	r6, {r0, r1}
   16d24:	b	16804 <daemon@@Base+0x770>

00016d28 <argp_parse@@Base>:
   16d28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16d2c:	add	fp, sp, #32
   16d30:	tst	r3, #1
   16d34:	sub	sp, sp, #220	; 0xdc
   16d38:	mov	r7, r3
   16d3c:	mov	r8, r0
   16d40:	str	r1, [fp, #-240]	; 0xffffff10
   16d44:	str	r2, [fp, #-236]	; 0xffffff14
   16d48:	bne	16d74 <argp_parse@@Base+0x4c>
   16d4c:	ldr	r3, [pc, #3488]	; 17af4 <argp_parse@@Base+0xdcc>
   16d50:	ldr	r4, [pc, #3488]	; 17af8 <argp_parse@@Base+0xdd0>
   16d54:	ldr	r2, [r3]
   16d58:	cmp	r2, #0
   16d5c:	ldreq	r2, [fp, #-236]	; 0xffffff14
   16d60:	ldreq	r2, [r2]
   16d64:	streq	r2, [r3]
   16d68:	ldr	r3, [r4]
   16d6c:	cmp	r3, #0
   16d70:	beq	17454 <argp_parse@@Base+0x72c>
   16d74:	ands	r3, r7, #16
   16d78:	beq	17338 <argp_parse@@Base+0x610>
   16d7c:	sub	r5, fp, #196	; 0xc4
   16d80:	mov	r0, r5
   16d84:	mov	r2, #36	; 0x24
   16d88:	mov	r1, #0
   16d8c:	bl	11a54 <memset@plt>
   16d90:	ands	r3, r7, #4
   16d94:	str	r3, [fp, #-244]	; 0xffffff0c
   16d98:	mov	r3, #0
   16d9c:	moveq	r0, #1
   16da0:	movne	r0, #0
   16da4:	cmp	r8, r3
   16da8:	str	r3, [fp, #-224]	; 0xffffff20
   16dac:	str	r3, [fp, #-220]	; 0xffffff24
   16db0:	str	r3, [fp, #-216]	; 0xffffff28
   16db4:	str	r0, [fp, #-228]	; 0xffffff1c
   16db8:	beq	16e2c <argp_parse@@Base+0x104>
   16dbc:	ldr	r4, [r8, #16]
   16dc0:	ldr	r3, [r8]
   16dc4:	cmp	r3, #0
   16dc8:	movne	r2, #1
   16dcc:	strne	r2, [fp, #-220]	; 0xffffff24
   16dd0:	movne	r2, #0
   16dd4:	bne	16de0 <argp_parse@@Base+0xb8>
   16dd8:	b	17920 <argp_parse@@Base+0xbf8>
   16ddc:	add	r2, r2, #1
   16de0:	add	r3, r3, #24
   16de4:	ldr	r1, [r3, #-20]	; 0xffffffec
   16de8:	cmp	r1, #0
   16dec:	bne	16ddc <argp_parse@@Base+0xb4>
   16df0:	ldr	r1, [r3, #-24]	; 0xffffffe8
   16df4:	cmp	r1, #0
   16df8:	bne	16ddc <argp_parse@@Base+0xb4>
   16dfc:	ldr	r1, [r3, #-8]
   16e00:	cmp	r1, #0
   16e04:	bne	16ddc <argp_parse@@Base+0xb4>
   16e08:	ldr	r1, [r3, #-4]
   16e0c:	cmp	r1, #0
   16e10:	bne	16ddc <argp_parse@@Base+0xb4>
   16e14:	add	r3, r2, r2, lsl #1
   16e18:	add	r0, r3, r0
   16e1c:	str	r2, [fp, #-224]	; 0xffffff20
   16e20:	str	r0, [fp, #-228]	; 0xffffff1c
   16e24:	mov	r6, #72	; 0x48
   16e28:	b	17938 <argp_parse@@Base+0xc10>
   16e2c:	mov	sl, #36	; 0x24
   16e30:	mov	r6, sl
   16e34:	mov	r4, r8
   16e38:	mov	r3, #52	; 0x34
   16e3c:	str	r3, [fp, #-232]	; 0xffffff18
   16e40:	add	r0, r3, r0
   16e44:	add	r0, r0, #1
   16e48:	bl	18be0 <argp_parse@@Base+0x1eb8>
   16e4c:	cmp	r0, #0
   16e50:	mov	r9, r0
   16e54:	str	r0, [fp, #-40]	; 0xffffffd8
   16e58:	moveq	r5, #12
   16e5c:	beq	17258 <argp_parse@@Base+0x530>
   16e60:	mov	lr, r5
   16e64:	mov	r3, #1
   16e68:	str	r3, [fp, #-196]	; 0xffffff3c
   16e6c:	str	r3, [fp, #-192]	; 0xffffff40
   16e70:	ldm	lr!, {r0, r1, r2, r3}
   16e74:	sub	ip, fp, #148	; 0x94
   16e78:	add	r5, r9, sl
   16e7c:	ldr	sl, [fp, #-232]	; 0xffffff18
   16e80:	stmia	ip!, {r0, r1, r2, r3}
   16e84:	add	r6, r9, r6
   16e88:	ldm	lr!, {r0, r1, r2, r3}
   16e8c:	add	sl, r9, sl
   16e90:	str	r6, [fp, #-104]	; 0xffffff98
   16e94:	str	r5, [fp, #-152]	; 0xffffff68
   16e98:	ldr	lr, [lr]
   16e9c:	stmia	ip!, {r0, r1, r2, r3}
   16ea0:	mov	r2, r4
   16ea4:	mov	r0, r6
   16ea8:	mov	r1, #0
   16eac:	str	r9, [fp, #-112]	; 0xffffff90
   16eb0:	str	lr, [ip]
   16eb4:	str	sl, [fp, #-156]	; 0xffffff64
   16eb8:	sub	r4, fp, #160	; 0xa0
   16ebc:	bl	11a54 <memset@plt>
   16ec0:	tst	r7, #8
   16ec4:	str	r5, [fp, #-204]	; 0xffffff34
   16ec8:	str	sl, [fp, #-208]	; 0xffffff30
   16ecc:	str	r6, [fp, #-200]	; 0xffffff38
   16ed0:	str	r4, [fp, #-212]	; 0xffffff2c
   16ed4:	beq	173ec <argp_parse@@Base+0x6c4>
   16ed8:	ldr	r2, [fp, #-232]	; 0xffffff18
   16edc:	add	sl, sl, #1
   16ee0:	mov	r3, #45	; 0x2d
   16ee4:	str	sl, [fp, #-208]	; 0xffffff30
   16ee8:	strb	r3, [r9, r2]
   16eec:	mov	r2, #0
   16ef0:	strb	r2, [sl]
   16ef4:	ldr	r3, [fp, #-204]	; 0xffffff34
   16ef8:	cmp	r8, r2
   16efc:	str	r2, [r3]
   16f00:	str	r8, [fp, #-160]	; 0xffffff60
   16f04:	beq	1741c <argp_parse@@Base+0x6f4>
   16f08:	sub	r1, fp, #212	; 0xd4
   16f0c:	mov	r0, r8
   16f10:	str	r1, [sp]
   16f14:	ldr	r3, [fp, #-112]	; 0xffffff90
   16f18:	mov	r1, r2
   16f1c:	bl	161c0 <daemon@@Base+0x12c>
   16f20:	ldr	r8, [fp, #-160]	; 0xffffff60
   16f24:	ldr	r5, [fp, #-112]	; 0xffffff90
   16f28:	mov	r6, r0
   16f2c:	str	r0, [fp, #-108]	; 0xffffff94
   16f30:	mov	r2, #56	; 0x38
   16f34:	mov	r1, #0
   16f38:	sub	r0, fp, #96	; 0x60
   16f3c:	bl	11a54 <memset@plt>
   16f40:	ldr	r2, [pc, #2996]	; 17afc <argp_parse@@Base+0xdd4>
   16f44:	ldr	r3, [pc, #2996]	; 17b00 <argp_parse@@Base+0xdd8>
   16f48:	ldr	r0, [fp, #-240]	; 0xffffff10
   16f4c:	ldr	r1, [r2]
   16f50:	str	r0, [fp, #-92]	; 0xffffffa4
   16f54:	ldr	r2, [r3]
   16f58:	ldr	r0, [fp, #-236]	; 0xffffff14
   16f5c:	mov	r3, #1
   16f60:	cmp	r5, r6
   16f64:	str	r8, [fp, #-96]	; 0xffffffa0
   16f68:	str	r0, [fp, #-88]	; 0xffffffa8
   16f6c:	str	r7, [fp, #-80]	; 0xffffffb0
   16f70:	str	r4, [fp, #-44]	; 0xffffffd4
   16f74:	str	r1, [fp, #-52]	; 0xffffffcc
   16f78:	str	r2, [fp, #-48]	; 0xffffffd0
   16f7c:	str	r3, [fp, #-100]	; 0xffffff9c
   16f80:	bcc	17264 <argp_parse@@Base+0x53c>
   16f84:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16f88:	tst	r3, #2
   16f8c:	bne	1742c <argp_parse@@Base+0x704>
   16f90:	ldr	r3, [fp, #-88]	; 0xffffffa8
   16f94:	ldr	r4, [fp, #-92]	; 0xffffffa4
   16f98:	mov	r2, #1
   16f9c:	str	r2, [fp, #-144]	; 0xffffff70
   16fa0:	ldr	r2, [fp, #-236]	; 0xffffff14
   16fa4:	cmp	r2, r3
   16fa8:	beq	179cc <argp_parse@@Base+0xca4>
   16fac:	ldr	r3, [pc, #2884]	; 17af8 <argp_parse@@Base+0xdd0>
   16fb0:	ldr	r3, [r3]
   16fb4:	str	r3, [fp, #-56]	; 0xffffffc8
   16fb8:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16fbc:	ldr	r5, [fp, #-84]	; 0xffffffac
   16fc0:	ldr	sl, [pc, #2876]	; 17b04 <argp_parse@@Base+0xddc>
   16fc4:	mov	r0, r4
   16fc8:	mov	r6, #0
   16fcc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   16fd0:	cmp	r3, #0
   16fd4:	beq	17468 <argp_parse@@Base+0x740>
   16fd8:	cmp	r3, r5
   16fdc:	strgt	r6, [fp, #-72]	; 0xffffffb8
   16fe0:	bgt	17468 <argp_parse@@Base+0x740>
   16fe4:	cmp	r5, r0
   16fe8:	blt	17804 <argp_parse@@Base+0xadc>
   16fec:	cmp	r5, r0
   16ff0:	bne	17810 <argp_parse@@Base+0xae8>
   16ff4:	ldr	r6, [fp, #-112]	; 0xffffff90
   16ff8:	ldr	ip, [fp, #-108]	; 0xffffff94
   16ffc:	cmp	r6, ip
   17000:	bcs	17a94 <argp_parse@@Base+0xd6c>
   17004:	mov	r5, #0
   17008:	add	r6, r6, #36	; 0x24
   1700c:	mov	r8, r5
   17010:	ldr	r7, [pc, #2800]	; 17b08 <argp_parse@@Base+0xde0>
   17014:	mov	r0, r5
   17018:	b	17060 <argp_parse@@Base+0x338>
   1701c:	ldr	ip, [r6, #-4]
   17020:	str	ip, [fp, #-60]	; 0xffffffc4
   17024:	ldr	ip, [r6, #-12]
   17028:	str	ip, [fp, #-68]	; 0xffffffbc
   1702c:	ldr	ip, [r6, #-8]
   17030:	str	r3, [fp, #-76]	; 0xffffffb4
   17034:	str	ip, [fp, #-64]	; 0xffffffc0
   17038:	blx	r4
   1703c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17040:	str	r3, [r6, #-4]
   17044:	ldr	ip, [fp, #-108]	; 0xffffff94
   17048:	cmp	ip, r6
   1704c:	bls	17a3c <argp_parse@@Base+0xd14>
   17050:	cmp	r0, #7
   17054:	cmpne	r0, #0
   17058:	bne	179fc <argp_parse@@Base+0xcd4>
   1705c:	add	r6, r6, #36	; 0x24
   17060:	ldr	r3, [r6, #-24]	; 0xffffffe8
   17064:	cmp	r3, #0
   17068:	bne	17048 <argp_parse@@Base+0x320>
   1706c:	ldr	r4, [r6, #-36]	; 0xffffffdc
   17070:	sub	r2, fp, #96	; 0x60
   17074:	cmp	r4, #0
   17078:	mov	r1, r8
   1707c:	mov	r0, r7
   17080:	bne	1701c <argp_parse@@Base+0x2f4>
   17084:	cmp	ip, r6
   17088:	mov	r0, #7
   1708c:	bhi	1705c <argp_parse@@Base+0x334>
   17090:	ldr	r6, [fp, #-112]	; 0xffffff90
   17094:	sub	r4, ip, #36	; 0x24
   17098:	cmp	r6, r4
   1709c:	movls	r5, #7
   170a0:	bhi	17128 <argp_parse@@Base+0x400>
   170a4:	cmp	r5, #7
   170a8:	cmpne	r5, #0
   170ac:	bne	17a10 <argp_parse@@Base+0xce8>
   170b0:	sub	r4, r4, #36	; 0x24
   170b4:	mov	r8, #0
   170b8:	ldr	r7, [pc, #2636]	; 17b0c <argp_parse@@Base+0xde4>
   170bc:	b	17108 <argp_parse@@Base+0x3e0>
   170c0:	ldr	ip, [r4, #68]	; 0x44
   170c4:	ldr	lr, [r4, #48]	; 0x30
   170c8:	str	ip, [fp, #-60]	; 0xffffffc4
   170cc:	ldr	ip, [r4, #60]	; 0x3c
   170d0:	str	ip, [fp, #-68]	; 0xffffffbc
   170d4:	ldr	ip, [r4, #64]	; 0x40
   170d8:	str	lr, [fp, #-76]	; 0xffffffb4
   170dc:	str	ip, [fp, #-64]	; 0xffffffc0
   170e0:	blx	r3
   170e4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   170e8:	str	r3, [r4, #68]	; 0x44
   170ec:	ldr	r6, [fp, #-112]	; 0xffffff90
   170f0:	cmp	r6, r4
   170f4:	bhi	17a8c <argp_parse@@Base+0xd64>
   170f8:	cmp	r0, #7
   170fc:	cmpne	r0, #0
   17100:	bne	17a20 <argp_parse@@Base+0xcf8>
   17104:	sub	r4, r4, #36	; 0x24
   17108:	ldr	r3, [r4, #36]	; 0x24
   1710c:	sub	r2, fp, #96	; 0x60
   17110:	cmp	r3, #0
   17114:	mov	r1, r8
   17118:	mov	r0, r7
   1711c:	bne	170c0 <argp_parse@@Base+0x398>
   17120:	cmp	r6, r4
   17124:	bls	17104 <argp_parse@@Base+0x3dc>
   17128:	ldr	r3, [fp, #4]
   1712c:	cmp	r3, #0
   17130:	beq	1714c <argp_parse@@Base+0x424>
   17134:	mov	r5, #0
   17138:	ldr	r2, [fp, #4]
   1713c:	ldr	r3, [fp, #-84]	; 0xffffffac
   17140:	str	r3, [r2]
   17144:	cmp	r5, #0
   17148:	bne	17a30 <argp_parse@@Base+0xd08>
   1714c:	ldr	ip, [fp, #-108]	; 0xffffff94
   17150:	b	17828 <argp_parse@@Base+0xb00>
   17154:	ldr	r6, [fp, #-112]	; 0xffffff90
   17158:	mov	r5, r0
   1715c:	ldr	ip, [fp, #-108]	; 0xffffff94
   17160:	cmp	r6, ip
   17164:	mov	r4, ip
   17168:	subcs	r4, ip, #36	; 0x24
   1716c:	bcs	171dc <argp_parse@@Base+0x4b4>
   17170:	ldr	r8, [pc, #2456]	; 17b10 <argp_parse@@Base+0xde8>
   17174:	add	r6, r6, #36	; 0x24
   17178:	mov	r9, #0
   1717c:	ldr	r3, [r6, #-36]	; 0xffffffdc
   17180:	sub	r2, fp, #96	; 0x60
   17184:	cmp	r3, #0
   17188:	mov	r1, r9
   1718c:	mov	r0, r8
   17190:	mov	r7, r6
   17194:	beq	171c8 <argp_parse@@Base+0x4a0>
   17198:	ldr	ip, [r6, #-4]
   1719c:	ldr	lr, [r6, #-24]	; 0xffffffe8
   171a0:	str	ip, [fp, #-60]	; 0xffffffc4
   171a4:	ldr	ip, [r6, #-12]
   171a8:	str	ip, [fp, #-68]	; 0xffffffbc
   171ac:	ldr	ip, [r6, #-8]
   171b0:	str	lr, [fp, #-76]	; 0xffffffb4
   171b4:	str	ip, [fp, #-64]	; 0xffffffc0
   171b8:	blx	r3
   171bc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   171c0:	str	r3, [r6, #-4]
   171c4:	ldr	r4, [fp, #-108]	; 0xffffff94
   171c8:	cmp	r7, r4
   171cc:	add	r6, r6, #36	; 0x24
   171d0:	bcc	1717c <argp_parse@@Base+0x454>
   171d4:	ldr	r6, [fp, #-112]	; 0xffffff90
   171d8:	sub	r4, r4, #36	; 0x24
   171dc:	cmp	r6, r4
   171e0:	bhi	17248 <argp_parse@@Base+0x520>
   171e4:	ldr	r8, [pc, #2344]	; 17b14 <argp_parse@@Base+0xdec>
   171e8:	sub	r4, r4, #36	; 0x24
   171ec:	mov	r9, #0
   171f0:	ldr	r3, [r4, #36]	; 0x24
   171f4:	sub	r2, fp, #96	; 0x60
   171f8:	cmp	r3, #0
   171fc:	mov	r1, r9
   17200:	mov	r0, r8
   17204:	mov	r7, r4
   17208:	beq	1723c <argp_parse@@Base+0x514>
   1720c:	ldr	ip, [r4, #68]	; 0x44
   17210:	ldr	lr, [r4, #48]	; 0x30
   17214:	str	ip, [fp, #-60]	; 0xffffffc4
   17218:	ldr	ip, [r4, #60]	; 0x3c
   1721c:	str	ip, [fp, #-68]	; 0xffffffbc
   17220:	ldr	ip, [r4, #64]	; 0x40
   17224:	str	lr, [fp, #-76]	; 0xffffffb4
   17228:	str	ip, [fp, #-64]	; 0xffffffc0
   1722c:	blx	r3
   17230:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17234:	str	r3, [r4, #68]	; 0x44
   17238:	ldr	r6, [fp, #-112]	; 0xffffff90
   1723c:	cmp	r6, r7
   17240:	sub	r4, r4, #36	; 0x24
   17244:	bls	171f0 <argp_parse@@Base+0x4c8>
   17248:	cmp	r5, #7
   1724c:	moveq	r5, #22
   17250:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17254:	bl	17ca4 <argp_parse@@Base+0xf7c>
   17258:	mov	r0, r5
   1725c:	sub	sp, fp, #32
   17260:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17264:	ldr	r3, [fp, #8]
   17268:	add	r4, r5, #36	; 0x24
   1726c:	str	r3, [r5, #24]
   17270:	mov	r7, #0
   17274:	ldr	r6, [pc, #2204]	; 17b18 <argp_parse@@Base+0xdf0>
   17278:	b	172d0 <argp_parse@@Base+0x5a8>
   1727c:	ldr	r2, [r4, #-4]
   17280:	ldr	r0, [r4, #-24]	; 0xffffffe8
   17284:	str	r2, [fp, #-60]	; 0xffffffc4
   17288:	ldr	r1, [r4, #-12]
   1728c:	sub	r2, fp, #96	; 0x60
   17290:	str	r1, [fp, #-68]	; 0xffffffbc
   17294:	ldr	ip, [r4, #-8]
   17298:	mov	r1, r7
   1729c:	str	r0, [fp, #-76]	; 0xffffffb4
   172a0:	str	ip, [fp, #-64]	; 0xffffffc0
   172a4:	mov	r0, r6
   172a8:	blx	r3
   172ac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   172b0:	str	r3, [r4, #-4]
   172b4:	ldr	r3, [fp, #-108]	; 0xffffff94
   172b8:	cmp	r3, r4
   172bc:	bls	17ac8 <argp_parse@@Base+0xda0>
   172c0:	cmp	r0, #7
   172c4:	cmpne	r0, #0
   172c8:	bne	1740c <argp_parse@@Base+0x6e4>
   172cc:	add	r4, r4, #36	; 0x24
   172d0:	ldr	r3, [r4, #-20]	; 0xffffffec
   172d4:	cmp	r3, #0
   172d8:	ldrne	r3, [r3, #28]
   172dc:	ldrne	r2, [r4, #-16]
   172e0:	ldrne	r3, [r3, r2, lsl #2]
   172e4:	strne	r3, [r4, #-12]
   172e8:	ldr	r3, [r4, #-36]	; 0xffffffdc
   172ec:	cmp	r3, #0
   172f0:	bne	1727c <argp_parse@@Base+0x554>
   172f4:	ldr	r3, [r4, #-32]	; 0xffffffe0
   172f8:	ldr	r3, [r3, #16]
   172fc:	cmp	r3, #0
   17300:	beq	17328 <argp_parse@@Base+0x600>
   17304:	ldr	r3, [r3]
   17308:	cmp	r3, #0
   1730c:	beq	17328 <argp_parse@@Base+0x600>
   17310:	ldr	r3, [r4, #-8]
   17314:	ldr	r2, [r4, #-12]
   17318:	str	r2, [r3]
   1731c:	ldr	r3, [r4, #-36]	; 0xffffffdc
   17320:	cmp	r3, #0
   17324:	bne	1727c <argp_parse@@Base+0x554>
   17328:	ldr	r3, [fp, #-108]	; 0xffffff94
   1732c:	cmp	r3, r4
   17330:	bhi	172cc <argp_parse@@Base+0x5a4>
   17334:	b	16f84 <argp_parse@@Base+0x25c>
   17338:	sub	sp, sp, #72	; 0x48
   1733c:	add	r4, sp, #8
   17340:	sub	sp, sp, #40	; 0x28
   17344:	add	r6, sp, #8
   17348:	mov	r1, r3
   1734c:	str	r3, [r6]
   17350:	str	r3, [r6, #4]
   17354:	str	r3, [r6, #8]
   17358:	str	r3, [r6, #12]
   1735c:	str	r3, [r6, #20]
   17360:	str	r3, [r6, #24]
   17364:	mov	r2, #64	; 0x40
   17368:	mov	r0, r4
   1736c:	str	r4, [r6, #16]
   17370:	bl	11a54 <memset@plt>
   17374:	ldr	r2, [pc, #1952]	; 17b1c <argp_parse@@Base+0xdf4>
   17378:	cmp	r8, #0
   1737c:	addne	r3, r4, #16
   17380:	ldr	r2, [r2]
   17384:	moveq	r3, r4
   17388:	ldr	r1, [pc, #1936]	; 17b20 <argp_parse@@Base+0xdf8>
   1738c:	strne	r8, [r4]
   17390:	cmp	r2, #0
   17394:	str	r1, [r3]
   17398:	beq	179e4 <argp_parse@@Base+0xcbc>
   1739c:	ldr	r2, [pc, #1920]	; 17b24 <argp_parse@@Base+0xdfc>
   173a0:	add	ip, r3, #32
   173a4:	str	r2, [r3, #16]
   173a8:	mov	r9, #0
   173ac:	sub	r5, fp, #196	; 0xc4
   173b0:	mov	r1, r9
   173b4:	mov	r0, r5
   173b8:	mov	r2, #36	; 0x24
   173bc:	str	r9, [ip]
   173c0:	bl	11a54 <memset@plt>
   173c4:	ands	r3, r7, #4
   173c8:	moveq	r0, #1
   173cc:	movne	r0, r9
   173d0:	str	r3, [fp, #-244]	; 0xffffff0c
   173d4:	mov	r8, r6
   173d8:	str	r9, [fp, #-224]	; 0xffffff20
   173dc:	str	r9, [fp, #-220]	; 0xffffff24
   173e0:	str	r9, [fp, #-216]	; 0xffffff28
   173e4:	str	r0, [fp, #-228]	; 0xffffff1c
   173e8:	b	16dc0 <argp_parse@@Base+0x98>
   173ec:	ldr	r3, [fp, #-244]	; 0xffffff0c
   173f0:	cmp	r3, #0
   173f4:	addne	r3, sl, #1
   173f8:	movne	r2, #43	; 0x2b
   173fc:	strbne	r2, [sl]
   17400:	strne	r3, [fp, #-208]	; 0xffffff30
   17404:	movne	sl, r3
   17408:	b	16eec <argp_parse@@Base+0x1c4>
   1740c:	mov	r5, r0
   17410:	mov	r0, r5
   17414:	sub	sp, fp, #32
   17418:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1741c:	ldr	r5, [fp, #-112]	; 0xffffff90
   17420:	mov	r6, r5
   17424:	str	r5, [fp, #-108]	; 0xffffff94
   17428:	b	16f30 <argp_parse@@Base+0x208>
   1742c:	tst	r3, #1
   17430:	mov	r3, #0
   17434:	str	r3, [fp, #-144]	; 0xffffff70
   17438:	ldr	r4, [fp, #-92]	; 0xffffffa4
   1743c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   17440:	subne	r3, r3, #4
   17444:	addne	r4, r4, #1
   17448:	strne	r3, [fp, #-88]	; 0xffffffa8
   1744c:	strne	r4, [fp, #-92]	; 0xffffffa4
   17450:	b	16fa0 <argp_parse@@Base+0x278>
   17454:	ldr	r3, [fp, #-236]	; 0xffffff14
   17458:	ldr	r0, [r3]
   1745c:	bl	17bf8 <argp_parse@@Base+0xed0>
   17460:	str	r0, [r4]
   17464:	b	16d74 <argp_parse@@Base+0x4c>
   17468:	cmp	r2, #0
   1746c:	beq	16fe4 <argp_parse@@Base+0x2bc>
   17470:	ldr	r3, [fp, #-80]	; 0xffffffb0
   17474:	str	r5, [fp, #-148]	; 0xffffff6c
   17478:	ands	ip, r3, #64	; 0x40
   1747c:	mvn	r3, #0
   17480:	str	r3, [fp, #-140]	; 0xffffff74
   17484:	ldr	r2, [fp, #-156]	; 0xffffff64
   17488:	ldr	r3, [fp, #-152]	; 0xffffff68
   1748c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   17490:	beq	177b0 <argp_parse@@Base+0xa88>
   17494:	sub	ip, fp, #148	; 0x94
   17498:	stm	sp, {r6, ip}
   1749c:	bl	17d78 <argp_parse@@Base+0x1050>
   174a0:	ldr	r5, [fp, #-148]	; 0xffffff6c
   174a4:	str	r5, [fp, #-84]	; 0xffffffac
   174a8:	mov	r7, r0
   174ac:	cmn	r7, #1
   174b0:	beq	177d0 <argp_parse@@Base+0xaa8>
   174b4:	cmp	r7, #63	; 0x3f
   174b8:	beq	178d4 <argp_parse@@Base+0xbac>
   174bc:	cmp	r7, #1
   174c0:	beq	17618 <argp_parse@@Base+0x8f0>
   174c4:	asrs	r8, r7, #24
   174c8:	bne	17574 <argp_parse@@Base+0x84c>
   174cc:	mov	r1, r7
   174d0:	ldr	r0, [fp, #-156]	; 0xffffff64
   174d4:	bl	119f4 <strchr@plt>
   174d8:	cmp	r0, #0
   174dc:	beq	175e4 <argp_parse@@Base+0x8bc>
   174e0:	ldr	r4, [fp, #-112]	; 0xffffff90
   174e4:	ldr	r2, [fp, #-108]	; 0xffffff94
   174e8:	cmp	r4, r2
   174ec:	bcc	17500 <argp_parse@@Base+0x7d8>
   174f0:	b	175e4 <argp_parse@@Base+0x8bc>
   174f4:	add	r4, r4, #36	; 0x24
   174f8:	cmp	r4, r2
   174fc:	bcs	175e4 <argp_parse@@Base+0x8bc>
   17500:	ldr	r3, [r4, #8]
   17504:	cmp	r0, r3
   17508:	bcs	174f4 <argp_parse@@Base+0x7cc>
   1750c:	ldr	r3, [r4]
   17510:	cmp	r3, #0
   17514:	beq	175e4 <argp_parse@@Base+0x8bc>
   17518:	ldr	r2, [r4, #32]
   1751c:	ldr	r0, [r4, #28]
   17520:	ldr	ip, [r4, #24]
   17524:	str	r2, [fp, #-60]	; 0xffffffc4
   17528:	ldr	r2, [r4, #12]
   1752c:	ldr	r1, [fp, #-136]	; 0xffffff78
   17530:	str	r0, [fp, #-64]	; 0xffffffc0
   17534:	str	r2, [fp, #-76]	; 0xffffffb4
   17538:	str	ip, [fp, #-68]	; 0xffffffbc
   1753c:	sub	r2, fp, #96	; 0x60
   17540:	mov	r0, r7
   17544:	blx	r3
   17548:	mov	r8, r6
   1754c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17550:	str	r3, [r4, #32]
   17554:	cmp	r0, #7
   17558:	beq	175dc <argp_parse@@Base+0x8b4>
   1755c:	cmp	r0, #0
   17560:	bne	17154 <argp_parse@@Base+0x42c>
   17564:	ldr	r2, [fp, #-100]	; 0xffffff9c
   17568:	ldr	r5, [fp, #-84]	; 0xffffffac
   1756c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   17570:	b	16fcc <argp_parse@@Base+0x2a4>
   17574:	add	r3, r8, r8, lsl #3
   17578:	ldr	r2, [fp, #-112]	; 0xffffff90
   1757c:	lsl	r3, r3, #2
   17580:	sub	r3, r3, #36	; 0x24
   17584:	add	r4, r2, r3
   17588:	ldr	r5, [r2, r3]
   1758c:	ands	r3, r7, #8388608	; 0x800000
   17590:	movne	r3, #-16777216	; 0xff000000
   17594:	cmp	r5, #0
   17598:	beq	17768 <argp_parse@@Base+0xa40>
   1759c:	ldr	r0, [r4, #32]
   175a0:	ldr	r2, [r4, #24]
   175a4:	str	r0, [fp, #-60]	; 0xffffffc4
   175a8:	ldr	r0, [r4, #28]
   175ac:	str	r2, [fp, #-68]	; 0xffffffbc
   175b0:	ldr	r2, [r4, #12]
   175b4:	str	r0, [fp, #-64]	; 0xffffffc0
   175b8:	bic	r0, r7, #-16777216	; 0xff000000
   175bc:	str	r2, [fp, #-76]	; 0xffffffb4
   175c0:	orr	r0, r0, r3
   175c4:	ldr	r1, [fp, #-136]	; 0xffffff78
   175c8:	sub	r2, fp, #96	; 0x60
   175cc:	blx	r5
   175d0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   175d4:	str	r3, [r4, #32]
   175d8:	b	17554 <argp_parse@@Base+0x82c>
   175dc:	cmp	r8, #0
   175e0:	bne	17768 <argp_parse@@Base+0xa40>
   175e4:	mov	r2, r7
   175e8:	ldr	r3, [pc, #1336]	; 17b28 <argp_parse@@Base+0xe00>
   175ec:	ldr	r1, [pc, #1336]	; 17b2c <argp_parse@@Base+0xe04>
   175f0:	sub	r0, fp, #96	; 0x60
   175f4:	bl	1cfac <argp_error@@Base>
   175f8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   175fc:	mov	r2, #260	; 0x104
   17600:	sub	r0, fp, #96	; 0x60
   17604:	bl	1cefc <argp_state_help@@Base>
   17608:	mov	r5, #7
   1760c:	ldr	r6, [fp, #-112]	; 0xffffff90
   17610:	ldr	ip, [fp, #-108]	; 0xffffff94
   17614:	b	17160 <argp_parse@@Base+0x438>
   17618:	ldr	r7, [fp, #-136]	; 0xffffff78
   1761c:	ldr	r3, [fp, #-112]	; 0xffffff90
   17620:	ldr	ip, [fp, #-108]	; 0xffffff94
   17624:	sub	r8, r5, #1
   17628:	cmp	r3, ip
   1762c:	str	r8, [fp, #-84]	; 0xffffffac
   17630:	bcs	1775c <argp_parse@@Base+0xa34>
   17634:	mov	lr, r8
   17638:	add	r4, r3, #36	; 0x24
   1763c:	ldr	r3, [r4, #-36]	; 0xffffffdc
   17640:	add	r5, lr, #1
   17644:	cmp	r3, #0
   17648:	str	r5, [fp, #-84]	; 0xffffffac
   1764c:	sub	r2, fp, #96	; 0x60
   17650:	mov	r1, r7
   17654:	mov	r0, r6
   17658:	sub	r5, r4, #36	; 0x24
   1765c:	mov	r9, r4
   17660:	streq	lr, [fp, #-84]	; 0xffffffac
   17664:	beq	17750 <argp_parse@@Base+0xa28>
   17668:	ldr	ip, [r4, #-4]
   1766c:	ldr	lr, [r4, #-24]	; 0xffffffe8
   17670:	str	ip, [fp, #-60]	; 0xffffffc4
   17674:	ldr	ip, [r4, #-12]
   17678:	str	ip, [fp, #-68]	; 0xffffffbc
   1767c:	ldr	ip, [r4, #-8]
   17680:	str	lr, [fp, #-76]	; 0xffffffb4
   17684:	str	ip, [fp, #-64]	; 0xffffffc0
   17688:	blx	r3
   1768c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17690:	str	r3, [r4, #-4]
   17694:	cmp	r0, #7
   17698:	beq	176d4 <argp_parse@@Base+0x9ac>
   1769c:	cmp	r0, #0
   176a0:	bne	17154 <argp_parse@@Base+0x42c>
   176a4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   176a8:	ldr	r5, [fp, #-84]	; 0xffffffac
   176ac:	cmp	r8, r5
   176b0:	sublt	r8, r5, r8
   176b4:	ldrlt	r3, [r4, #-24]	; 0xffffffe8
   176b8:	movge	r3, #1
   176bc:	addlt	r8, r3, r8
   176c0:	strlt	r8, [r4, #-24]	; 0xffffffe8
   176c4:	ldrlt	r2, [fp, #-100]	; 0xffffff9c
   176c8:	strge	r3, [fp, #-100]	; 0xffffff9c
   176cc:	movge	r2, r3
   176d0:	b	16fcc <argp_parse@@Base+0x2a4>
   176d4:	ldr	lr, [fp, #-84]	; 0xffffffac
   176d8:	ldr	r3, [r4, #-36]	; 0xffffffdc
   176dc:	sub	lr, lr, #1
   176e0:	cmp	r3, #0
   176e4:	str	lr, [fp, #-84]	; 0xffffffac
   176e8:	beq	1774c <argp_parse@@Base+0xa24>
   176ec:	add	r0, r5, #24
   176f0:	ldr	r2, [r5, #12]
   176f4:	ldm	r0, {r0, r1, ip}
   176f8:	str	r2, [fp, #-76]	; 0xffffffb4
   176fc:	sub	r2, fp, #96	; 0x60
   17700:	str	ip, [fp, #-60]	; 0xffffffc4
   17704:	str	r0, [fp, #-68]	; 0xffffffbc
   17708:	str	r1, [fp, #-64]	; 0xffffffc0
   1770c:	mov	r0, sl
   17710:	mov	r1, r6
   17714:	blx	r3
   17718:	ldr	ip, [fp, #-108]	; 0xffffff94
   1771c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   17720:	cmp	r4, ip
   17724:	movcs	r1, #0
   17728:	movcc	r1, #1
   1772c:	mov	r3, r4
   17730:	str	r2, [r5, #32]
   17734:	cmp	r0, #7
   17738:	movne	r1, #0
   1773c:	cmp	r1, #0
   17740:	beq	17ab0 <argp_parse@@Base+0xd88>
   17744:	ldr	lr, [fp, #-84]	; 0xffffffac
   17748:	b	17638 <argp_parse@@Base+0x910>
   1774c:	ldr	ip, [fp, #-108]	; 0xffffff94
   17750:	cmp	r9, ip
   17754:	add	r4, r4, #36	; 0x24
   17758:	bcc	1763c <argp_parse@@Base+0x914>
   1775c:	ldr	r5, [fp, #-84]	; 0xffffffac
   17760:	ldr	r0, [fp, #-92]	; 0xffffffa4
   17764:	b	16fec <argp_parse@@Base+0x2c4>
   17768:	ldr	r3, [fp, #-152]	; 0xffffff68
   1776c:	ldr	r2, [r3, #12]
   17770:	cmp	r7, r2
   17774:	bne	1778c <argp_parse@@Base+0xa64>
   17778:	b	178c0 <argp_parse@@Base+0xb98>
   1777c:	add	r3, r3, #16
   17780:	ldr	r2, [r3, #12]
   17784:	cmp	r7, r2
   17788:	beq	178c0 <argp_parse@@Base+0xb98>
   1778c:	ldr	r2, [r3]
   17790:	cmp	r2, #0
   17794:	bne	1777c <argp_parse@@Base+0xa54>
   17798:	ldr	r2, [pc, #912]	; 17b30 <argp_parse@@Base+0xe08>
   1779c:	ldr	r3, [pc, #900]	; 17b28 <argp_parse@@Base+0xe00>
   177a0:	ldr	r1, [pc, #908]	; 17b34 <argp_parse@@Base+0xe0c>
   177a4:	sub	r0, fp, #96	; 0x60
   177a8:	bl	1cfac <argp_error@@Base>
   177ac:	b	175f8 <argp_parse@@Base+0x8d0>
   177b0:	sub	lr, fp, #148	; 0x94
   177b4:	stm	sp, {ip, lr}
   177b8:	bl	17d24 <argp_parse@@Base+0xffc>
   177bc:	ldr	r5, [fp, #-148]	; 0xffffff6c
   177c0:	str	r5, [fp, #-84]	; 0xffffffac
   177c4:	mov	r7, r0
   177c8:	cmn	r7, #1
   177cc:	bne	174b4 <argp_parse@@Base+0x78c>
   177d0:	cmp	r5, #1
   177d4:	str	r6, [fp, #-100]	; 0xffffff9c
   177d8:	ble	177f8 <argp_parse@@Base+0xad0>
   177dc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   177e0:	sub	r3, r5, #-1073741823	; 0xc0000001
   177e4:	ldr	r1, [pc, #844]	; 17b38 <argp_parse@@Base+0xe10>
   177e8:	ldr	r0, [r2, r3, lsl #2]
   177ec:	bl	11754 <strcmp@plt>
   177f0:	cmp	r0, #0
   177f4:	streq	r5, [fp, #-72]	; 0xffffffb8
   177f8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   177fc:	cmp	r5, r0
   17800:	bge	16fec <argp_parse@@Base+0x2c4>
   17804:	ldr	r3, [fp, #-80]	; 0xffffffb0
   17808:	tst	r3, #4
   1780c:	beq	178e4 <argp_parse@@Base+0xbbc>
   17810:	ldr	r3, [fp, #4]
   17814:	cmp	r3, #0
   17818:	beq	17a5c <argp_parse@@Base+0xd34>
   1781c:	ldr	r6, [fp, #-112]	; 0xffffff90
   17820:	ldr	ip, [fp, #-108]	; 0xffffff94
   17824:	str	r5, [r3]
   17828:	sub	r3, ip, #36	; 0x24
   1782c:	cmp	r6, r3
   17830:	bhi	17918 <argp_parse@@Base+0xbf0>
   17834:	ldr	r7, [pc, #768]	; 17b3c <argp_parse@@Base+0xe14>
   17838:	sub	r4, ip, #72	; 0x48
   1783c:	mov	r8, #0
   17840:	ldr	r3, [r4, #36]	; 0x24
   17844:	sub	r2, fp, #96	; 0x60
   17848:	cmp	r3, #0
   1784c:	mov	r1, r8
   17850:	mov	r0, r7
   17854:	beq	178b0 <argp_parse@@Base+0xb88>
   17858:	ldr	ip, [r4, #68]	; 0x44
   1785c:	ldr	lr, [r4, #48]	; 0x30
   17860:	str	ip, [fp, #-60]	; 0xffffffc4
   17864:	ldr	ip, [r4, #60]	; 0x3c
   17868:	str	ip, [fp, #-68]	; 0xffffffbc
   1786c:	ldr	ip, [r4, #64]	; 0x40
   17870:	str	lr, [fp, #-76]	; 0xffffffb4
   17874:	str	ip, [fp, #-64]	; 0xffffffc0
   17878:	blx	r3
   1787c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17880:	str	r3, [r4, #68]	; 0x44
   17884:	ldr	r6, [fp, #-112]	; 0xffffff90
   17888:	cmp	r6, r4
   1788c:	bhi	178f8 <argp_parse@@Base+0xbd0>
   17890:	cmp	r0, #7
   17894:	cmpne	r0, #0
   17898:	sub	r4, r4, #36	; 0x24
   1789c:	beq	17840 <argp_parse@@Base+0xb18>
   178a0:	ldr	r4, [fp, #-108]	; 0xffffff94
   178a4:	mov	r5, r0
   178a8:	sub	r4, r4, #36	; 0x24
   178ac:	b	171dc <argp_parse@@Base+0x4b4>
   178b0:	cmp	r6, r4
   178b4:	bhi	17904 <argp_parse@@Base+0xbdc>
   178b8:	sub	r4, r4, #36	; 0x24
   178bc:	b	17840 <argp_parse@@Base+0xb18>
   178c0:	ldr	r2, [r3]
   178c4:	ldr	r3, [pc, #612]	; 17b30 <argp_parse@@Base+0xe08>
   178c8:	cmp	r2, #0
   178cc:	moveq	r2, r3
   178d0:	b	1779c <argp_parse@@Base+0xa74>
   178d4:	ldr	r3, [fp, #-140]	; 0xffffff74
   178d8:	cmn	r3, #1
   178dc:	bne	175f8 <argp_parse@@Base+0x8d0>
   178e0:	b	174cc <argp_parse@@Base+0x7a4>
   178e4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   178e8:	ldr	r7, [r3, r5, lsl #2]
   178ec:	add	r5, r5, #1
   178f0:	str	r7, [fp, #-136]	; 0xffffff78
   178f4:	b	1761c <argp_parse@@Base+0x8f4>
   178f8:	cmp	r0, #7
   178fc:	mov	r5, r0
   17900:	bne	179c0 <argp_parse@@Base+0xc98>
   17904:	ldr	r4, [fp, #-108]	; 0xffffff94
   17908:	sub	r4, r4, #36	; 0x24
   1790c:	cmp	r6, r4
   17910:	movls	r5, #0
   17914:	bls	171e4 <argp_parse@@Base+0x4bc>
   17918:	mov	r5, #0
   1791c:	b	17250 <argp_parse@@Base+0x528>
   17920:	ldr	r3, [r8, #4]
   17924:	cmp	r3, #0
   17928:	moveq	r6, #36	; 0x24
   1792c:	movne	r6, #72	; 0x48
   17930:	movne	r3, #1
   17934:	strne	r3, [fp, #-220]	; 0xffffff24
   17938:	cmp	r4, #0
   1793c:	beq	1799c <argp_parse@@Base+0xc74>
   17940:	ldr	r0, [r4]
   17944:	cmp	r0, #0
   17948:	beq	1799c <argp_parse@@Base+0xc74>
   1794c:	sub	r1, fp, #228	; 0xe4
   17950:	bl	16654 <daemon@@Base+0x5c0>
   17954:	ldr	r3, [fp, #-216]	; 0xffffff28
   17958:	ldr	r0, [r4, #16]!
   1795c:	add	r3, r3, #1
   17960:	cmp	r0, #0
   17964:	str	r3, [fp, #-216]	; 0xffffff28
   17968:	bne	1794c <argp_parse@@Base+0xc24>
   1796c:	ldr	r6, [fp, #-220]	; 0xffffff24
   17970:	ldr	r2, [fp, #-224]	; 0xffffff20
   17974:	add	r6, r6, #1
   17978:	lsl	r4, r3, #2
   1797c:	add	r6, r6, r6, lsl #3
   17980:	add	r3, r2, #1
   17984:	lsl	r6, r6, #2
   17988:	add	sl, r4, r6
   1798c:	add	r3, sl, r3, lsl #4
   17990:	str	r3, [fp, #-232]	; 0xffffff18
   17994:	ldr	r0, [fp, #-228]	; 0xffffff1c
   17998:	b	16e40 <argp_parse@@Base+0x118>
   1799c:	ldr	r4, [fp, #-216]	; 0xffffff28
   179a0:	ldr	r3, [fp, #-224]	; 0xffffff20
   179a4:	ldr	r0, [fp, #-228]	; 0xffffff1c
   179a8:	lsl	r4, r4, #2
   179ac:	add	r3, r3, #1
   179b0:	add	sl, r4, r6
   179b4:	add	r3, sl, r3, lsl #4
   179b8:	str	r3, [fp, #-232]	; 0xffffff18
   179bc:	b	16e40 <argp_parse@@Base+0x118>
   179c0:	ldr	r4, [fp, #-108]	; 0xffffff94
   179c4:	sub	r4, r4, #36	; 0x24
   179c8:	b	171dc <argp_parse@@Base+0x4b4>
   179cc:	ldr	r0, [r2]
   179d0:	cmp	r0, #0
   179d4:	beq	16fac <argp_parse@@Base+0x284>
   179d8:	bl	17bf8 <argp_parse@@Base+0xed0>
   179dc:	str	r0, [fp, #-56]	; 0xffffffc8
   179e0:	b	16fb8 <argp_parse@@Base+0x290>
   179e4:	ldr	r2, [pc, #340]	; 17b40 <argp_parse@@Base+0xe18>
   179e8:	ldr	r2, [r2]
   179ec:	cmp	r2, #0
   179f0:	addeq	ip, r3, #16
   179f4:	bne	1739c <argp_parse@@Base+0x674>
   179f8:	b	173a8 <argp_parse@@Base+0x680>
   179fc:	ldr	r6, [fp, #-112]	; 0xffffff90
   17a00:	sub	ip, ip, #36	; 0x24
   17a04:	cmp	r6, ip
   17a08:	mov	r5, r0
   17a0c:	bls	17a24 <argp_parse@@Base+0xcfc>
   17a10:	ldr	r3, [fp, #4]
   17a14:	cmp	r3, #0
   17a18:	bne	17138 <argp_parse@@Base+0x410>
   17a1c:	b	17144 <argp_parse@@Base+0x41c>
   17a20:	mov	r5, r0
   17a24:	ldr	r3, [fp, #4]
   17a28:	cmp	r3, #0
   17a2c:	bne	17138 <argp_parse@@Base+0x410>
   17a30:	cmp	r5, #7
   17a34:	bne	1715c <argp_parse@@Base+0x434>
   17a38:	b	175f8 <argp_parse@@Base+0x8d0>
   17a3c:	ldr	r6, [fp, #-112]	; 0xffffff90
   17a40:	sub	r4, ip, #36	; 0x24
   17a44:	cmp	r4, r6
   17a48:	mov	r5, r0
   17a4c:	bcs	170a4 <argp_parse@@Base+0x37c>
   17a50:	cmp	r5, #7
   17a54:	beq	17128 <argp_parse@@Base+0x400>
   17a58:	b	17a10 <argp_parse@@Base+0xce8>
   17a5c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   17a60:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17a64:	tst	r3, #2
   17a68:	bne	175fc <argp_parse@@Base+0x8d4>
   17a6c:	cmp	r1, #0
   17a70:	beq	175fc <argp_parse@@Base+0x8d4>
   17a74:	mov	r0, r1
   17a78:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17a7c:	ldr	r1, [pc, #192]	; 17b44 <argp_parse@@Base+0xe1c>
   17a80:	bl	11a0c <fprintf@plt>
   17a84:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17a88:	b	175fc <argp_parse@@Base+0x8d4>
   17a8c:	mov	r5, r0
   17a90:	b	17a50 <argp_parse@@Base+0xd28>
   17a94:	sub	r4, ip, #36	; 0x24
   17a98:	cmp	r6, r4
   17a9c:	bls	170b0 <argp_parse@@Base+0x388>
   17aa0:	ldr	r3, [fp, #4]
   17aa4:	cmp	r3, #0
   17aa8:	bne	17134 <argp_parse@@Base+0x40c>
   17aac:	b	17828 <argp_parse@@Base+0xb00>
   17ab0:	cmp	r0, #0
   17ab4:	bne	17ae0 <argp_parse@@Base+0xdb8>
   17ab8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   17abc:	mov	r5, r0
   17ac0:	str	r0, [fp, #-84]	; 0xffffffac
   17ac4:	b	176ac <argp_parse@@Base+0x984>
   17ac8:	cmp	r0, #7
   17acc:	mov	r5, r0
   17ad0:	beq	16f84 <argp_parse@@Base+0x25c>
   17ad4:	cmp	r0, #0
   17ad8:	bne	17258 <argp_parse@@Base+0x530>
   17adc:	b	16f84 <argp_parse@@Base+0x25c>
   17ae0:	cmp	r0, #7
   17ae4:	mov	r5, r0
   17ae8:	beq	1775c <argp_parse@@Base+0xa34>
   17aec:	ldr	r6, [fp, #-112]	; 0xffffff90
   17af0:	b	17160 <argp_parse@@Base+0x438>
   17af4:	andeq	r1, r3, ip, lsr #7
   17af8:	andeq	r1, r3, r8, lsr #7
   17afc:			; <UNDEFINED> instruction: 0x000313b0
   17b00:			; <UNDEFINED> instruction: 0x000313b4
   17b04:	tsteq	r0, r6
   17b08:	tsteq	r0, r2
   17b0c:	tsteq	r0, r1
   17b10:	tsteq	r0, r5
   17b14:	tsteq	r0, r7
   17b18:	tsteq	r0, r3
   17b1c:	andeq	r1, r3, r8, lsl r6
   17b20:	andeq	pc, r1, r8, ror #27
   17b24:	andeq	pc, r1, r4, lsl #28
   17b28:	andeq	pc, r1, r0, lsr #28
   17b2c:	andeq	pc, r1, r4, lsr pc	; <UNPREDICTABLE>
   17b30:	andeq	pc, r1, ip, lsr #30
   17b34:	andeq	pc, r1, ip, lsr pc	; <UNPREDICTABLE>
   17b38:	andeq	pc, r1, r0, lsr pc	; <UNPREDICTABLE>
   17b3c:	tsteq	r0, r4
   17b40:			; <UNDEFINED> instruction: 0x000314b0
   17b44:	andeq	pc, r1, r8, asr #30
   17b48:	cmp	r1, #0
   17b4c:	beq	17b8c <argp_parse@@Base+0xe64>
   17b50:	ldr	r2, [r1, #52]	; 0x34
   17b54:	ldr	r3, [r2, #48]	; 0x30
   17b58:	ldr	r1, [r2, #52]	; 0x34
   17b5c:	cmp	r3, r1
   17b60:	bcs	17b8c <argp_parse@@Base+0xe64>
   17b64:	ldr	r2, [r3, #4]
   17b68:	cmp	r0, r2
   17b6c:	bne	17b80 <argp_parse@@Base+0xe58>
   17b70:	b	17b94 <argp_parse@@Base+0xe6c>
   17b74:	ldr	r2, [r3, #4]
   17b78:	cmp	r2, r0
   17b7c:	beq	17b94 <argp_parse@@Base+0xe6c>
   17b80:	add	r3, r3, #36	; 0x24
   17b84:	cmp	r3, r1
   17b88:	bcc	17b74 <argp_parse@@Base+0xe4c>
   17b8c:	mov	r0, #0
   17b90:	bx	lr
   17b94:	ldr	r0, [r3, #24]
   17b98:	bx	lr
   17b9c:	ldr	ip, [pc, #32]	; 17bc4 <argp_parse@@Base+0xe9c>
   17ba0:	push	{lr}		; (str lr, [sp, #-4]!)
   17ba4:	sub	sp, sp, #12
   17ba8:	ldm	ip, {r1, ip}
   17bac:	ldr	r3, [pc, #20]	; 17bc8 <argp_parse@@Base+0xea0>
   17bb0:	ldr	r2, [pc, #20]	; 17bcc <argp_parse@@Base+0xea4>
   17bb4:	str	ip, [sp]
   17bb8:	bl	18108 <argp_parse@@Base+0x13e0>
   17bbc:	add	sp, sp, #12
   17bc0:	pop	{pc}		; (ldr pc, [sp], #4)
   17bc4:			; <UNDEFINED> instruction: 0x000314b4
   17bc8:	andeq	r0, r2, r8, lsr #32
   17bcc:	andeq	r0, r2, r8, lsr r0
   17bd0:	ldr	r3, [pc, #20]	; 17bec <argp_parse@@Base+0xec4>
   17bd4:	ldr	r2, [pc, #20]	; 17bf0 <argp_parse@@Base+0xec8>
   17bd8:	ldr	ip, [pc, #20]	; 17bf4 <argp_parse@@Base+0xecc>
   17bdc:	str	r0, [r3]
   17be0:	str	ip, [r2]
   17be4:	str	r1, [r3, #4]
   17be8:	bx	lr
   17bec:			; <UNDEFINED> instruction: 0x000314b4
   17bf0:			; <UNDEFINED> instruction: 0x000314b0
   17bf4:	muleq	r1, ip, fp
   17bf8:	ldrb	r3, [r0]
   17bfc:	cmp	r3, #47	; 0x2f
   17c00:	bne	17c10 <argp_parse@@Base+0xee8>
   17c04:	ldrb	r3, [r0, #1]!
   17c08:	cmp	r3, #47	; 0x2f
   17c0c:	beq	17c04 <argp_parse@@Base+0xedc>
   17c10:	cmp	r3, #0
   17c14:	bxeq	lr
   17c18:	mov	r2, #0
   17c1c:	push	{lr}		; (str lr, [sp, #-4]!)
   17c20:	mov	ip, r2
   17c24:	mov	r1, r0
   17c28:	mov	lr, #1
   17c2c:	cmp	r3, #47	; 0x2f
   17c30:	moveq	r2, lr
   17c34:	beq	17c44 <argp_parse@@Base+0xf1c>
   17c38:	cmp	r2, #0
   17c3c:	movne	r0, r1
   17c40:	movne	r2, ip
   17c44:	ldrb	r3, [r1, #1]!
   17c48:	cmp	r3, #0
   17c4c:	bne	17c2c <argp_parse@@Base+0xf04>
   17c50:	pop	{pc}		; (ldr pc, [sp], #4)
   17c54:	push	{r4, lr}
   17c58:	mov	r4, r0
   17c5c:	bl	119dc <strlen@plt>
   17c60:	cmp	r0, #1
   17c64:	popls	{r4, pc}
   17c68:	sub	r3, r0, #1
   17c6c:	add	r2, r4, r3
   17c70:	ldrb	r1, [r4, r3]
   17c74:	cmp	r1, #47	; 0x2f
   17c78:	popne	{r4, pc}
   17c7c:	cmp	r3, #1
   17c80:	beq	17c94 <argp_parse@@Base+0xf6c>
   17c84:	ldrb	r1, [r2, #-1]!
   17c88:	sub	r0, r3, #1
   17c8c:	cmp	r1, #47	; 0x2f
   17c90:	beq	17c9c <argp_parse@@Base+0xf74>
   17c94:	mov	r0, r3
   17c98:	pop	{r4, pc}
   17c9c:	mov	r3, r0
   17ca0:	b	17c7c <argp_parse@@Base+0xf54>
   17ca4:	push	{r4, r5, lr}
   17ca8:	sub	sp, sp, #12
   17cac:	mov	r5, r0
   17cb0:	bl	11a24 <__errno_location@plt>
   17cb4:	mov	r2, #0
   17cb8:	mov	r4, r0
   17cbc:	ldr	r3, [r0]
   17cc0:	str	r2, [r4]
   17cc4:	mov	r0, r5
   17cc8:	str	r3, [sp]
   17ccc:	str	r3, [sp, #4]
   17cd0:	bl	117d8 <free@plt>
   17cd4:	ldr	r3, [r4]
   17cd8:	add	r2, sp, #8
   17cdc:	cmp	r3, #0
   17ce0:	moveq	r3, #4
   17ce4:	movne	r3, #0
   17ce8:	add	r3, r2, r3
   17cec:	ldr	r3, [r3, #-8]
   17cf0:	str	r3, [r4]
   17cf4:	add	sp, sp, #12
   17cf8:	pop	{r4, r5, pc}
   17cfc:	push	{lr}		; (str lr, [sp, #-4]!)
   17d00:	sub	sp, sp, #20
   17d04:	mov	ip, #0
   17d08:	ldr	lr, [sp, #24]
   17d0c:	str	ip, [sp, #8]
   17d10:	str	lr, [sp]
   17d14:	str	ip, [sp, #4]
   17d18:	bl	1de9c <argp_error@@Base+0xef0>
   17d1c:	add	sp, sp, #20
   17d20:	pop	{pc}		; (ldr pc, [sp], #4)
   17d24:	push	{r4, lr}
   17d28:	sub	sp, sp, #16
   17d2c:	mov	ip, #0
   17d30:	ldr	r4, [sp, #24]
   17d34:	ldr	lr, [sp, #28]
   17d38:	str	r4, [sp]
   17d3c:	str	lr, [sp, #8]
   17d40:	str	ip, [sp, #12]
   17d44:	str	ip, [sp, #4]
   17d48:	bl	1d928 <argp_error@@Base+0x97c>
   17d4c:	add	sp, sp, #16
   17d50:	pop	{r4, pc}
   17d54:	push	{r4, lr}
   17d58:	sub	sp, sp, #16
   17d5c:	mov	lr, #0
   17d60:	ldr	r4, [sp, #24]
   17d64:	mov	ip, #1
   17d68:	stm	sp, {r4, ip, lr}
   17d6c:	bl	1de9c <argp_error@@Base+0xef0>
   17d70:	add	sp, sp, #16
   17d74:	pop	{r4, pc}
   17d78:	push	{r4, r5, lr}
   17d7c:	sub	sp, sp, #20
   17d80:	mov	lr, #0
   17d84:	ldr	r5, [sp, #32]
   17d88:	ldr	r4, [sp, #36]	; 0x24
   17d8c:	mov	ip, #1
   17d90:	str	r5, [sp]
   17d94:	str	r4, [sp, #8]
   17d98:	str	lr, [sp, #12]
   17d9c:	str	ip, [sp, #4]
   17da0:	bl	1d928 <argp_error@@Base+0x97c>
   17da4:	add	sp, sp, #20
   17da8:	pop	{r4, r5, pc}
   17dac:	push	{r4, r5, r6, lr}
   17db0:	subs	r4, r0, #0
   17db4:	beq	17e28 <argp_parse@@Base+0x1100>
   17db8:	mov	r1, #47	; 0x2f
   17dbc:	bl	11ae4 <strrchr@plt>
   17dc0:	subs	r5, r0, #0
   17dc4:	beq	17e14 <argp_parse@@Base+0x10ec>
   17dc8:	add	r6, r5, #1
   17dcc:	sub	r3, r6, r4
   17dd0:	cmp	r3, #6
   17dd4:	ble	17e14 <argp_parse@@Base+0x10ec>
   17dd8:	mov	r2, #7
   17ddc:	ldr	r1, [pc, #96]	; 17e44 <argp_parse@@Base+0x111c>
   17de0:	sub	r0, r5, #6
   17de4:	bl	11bd4 <strncmp@plt>
   17de8:	cmp	r0, #0
   17dec:	bne	17e14 <argp_parse@@Base+0x10ec>
   17df0:	mov	r2, #3
   17df4:	ldr	r1, [pc, #76]	; 17e48 <argp_parse@@Base+0x1120>
   17df8:	mov	r0, r6
   17dfc:	bl	11bd4 <strncmp@plt>
   17e00:	cmp	r0, #0
   17e04:	movne	r4, r6
   17e08:	ldreq	r3, [pc, #60]	; 17e4c <argp_parse@@Base+0x1124>
   17e0c:	addeq	r4, r5, #4
   17e10:	streq	r4, [r3]
   17e14:	ldr	r2, [pc, #52]	; 17e50 <argp_parse@@Base+0x1128>
   17e18:	ldr	r3, [pc, #52]	; 17e54 <argp_parse@@Base+0x112c>
   17e1c:	str	r4, [r2]
   17e20:	str	r4, [r3]
   17e24:	pop	{r4, r5, r6, pc}
   17e28:	ldr	r3, [pc, #40]	; 17e58 <argp_parse@@Base+0x1130>
   17e2c:	mov	r2, #55	; 0x37
   17e30:	mov	r1, #1
   17e34:	ldr	r3, [r3]
   17e38:	ldr	r0, [pc, #28]	; 17e5c <argp_parse@@Base+0x1134>
   17e3c:	bl	118f8 <fwrite@plt>
   17e40:	bl	11be0 <abort@plt>
   17e44:	andeq	r0, r2, r0, lsl #1
   17e48:	andeq	r0, r2, r8, lsl #1
   17e4c:	andeq	r1, r3, r8, lsr #7
   17e50:			; <UNDEFINED> instruction: 0x000314bc
   17e54:	andeq	r1, r3, ip, lsr #7
   17e58:			; <UNDEFINED> instruction: 0x000313b0
   17e5c:	andeq	r0, r2, r8, asr #32
   17e60:	push	{r4, r5, r6, r7, lr}
   17e64:	sub	sp, sp, #36	; 0x24
   17e68:	cmp	r1, #0
   17e6c:	mov	r4, r0
   17e70:	ldr	r5, [sp, #56]	; 0x38
   17e74:	ldr	r6, [sp, #60]	; 0x3c
   17e78:	beq	180b8 <argp_parse@@Base+0x1390>
   17e7c:	str	r3, [sp]
   17e80:	mov	r3, r2
   17e84:	mov	r2, r1
   17e88:	ldr	r1, [pc, #564]	; 180c4 <argp_parse@@Base+0x139c>
   17e8c:	bl	11a0c <fprintf@plt>
   17e90:	ldr	r3, [pc, #560]	; 180c8 <argp_parse@@Base+0x13a0>
   17e94:	ldr	r2, [pc, #560]	; 180cc <argp_parse@@Base+0x13a4>
   17e98:	ldr	r1, [pc, #560]	; 180d0 <argp_parse@@Base+0x13a8>
   17e9c:	mov	r0, r4
   17ea0:	bl	11a0c <fprintf@plt>
   17ea4:	mov	r1, r4
   17ea8:	mov	r0, #10
   17eac:	bl	11b08 <fputc@plt>
   17eb0:	ldr	r1, [pc, #540]	; 180d4 <argp_parse@@Base+0x13ac>
   17eb4:	ldr	r2, [pc, #540]	; 180d8 <argp_parse@@Base+0x13b0>
   17eb8:	mov	r0, r4
   17ebc:	bl	11a0c <fprintf@plt>
   17ec0:	mov	r1, r4
   17ec4:	mov	r0, #10
   17ec8:	bl	11b08 <fputc@plt>
   17ecc:	cmp	r6, #9
   17ed0:	ldrls	pc, [pc, r6, lsl #2]
   17ed4:	b	17f00 <argp_parse@@Base+0x11d8>
   17ed8:	andeq	r7, r1, r0, asr #30
   17edc:	andeq	r7, r1, ip, lsl #31
   17ee0:	andeq	r7, r1, r4, lsr #31
   17ee4:			; <UNDEFINED> instruction: 0x00017fbc
   17ee8:	ldrdeq	r7, [r1], -ip
   17eec:	andeq	r8, r1, r4
   17ef0:	andeq	r8, r1, r4, lsr #32
   17ef4:	andeq	r8, r1, ip, asr #32
   17ef8:	andeq	r8, r1, ip, ror r0
   17efc:	andeq	r7, r1, r8, asr #30
   17f00:	ldr	ip, [r5, #32]
   17f04:	ldr	r1, [r5, #28]
   17f08:	ldm	r5, {r2, r3}
   17f0c:	ldr	r7, [r5, #24]
   17f10:	ldr	r6, [r5, #20]
   17f14:	str	ip, [sp, #24]
   17f18:	ldr	lr, [r5, #16]
   17f1c:	str	r1, [sp, #20]
   17f20:	ldr	r1, [r5, #8]
   17f24:	ldr	ip, [r5, #12]
   17f28:	mov	r0, r4
   17f2c:	str	r7, [sp, #16]
   17f30:	stm	sp, {r1, ip, lr}
   17f34:	str	r6, [sp, #12]
   17f38:	ldr	r1, [pc, #412]	; 180dc <argp_parse@@Base+0x13b4>
   17f3c:	bl	11a0c <fprintf@plt>
   17f40:	add	sp, sp, #36	; 0x24
   17f44:	pop	{r4, r5, r6, r7, pc}
   17f48:	ldr	ip, [r5, #32]
   17f4c:	ldr	r1, [r5, #28]
   17f50:	ldm	r5, {r2, r3}
   17f54:	ldr	r7, [r5, #24]
   17f58:	ldr	r6, [r5, #20]
   17f5c:	str	ip, [sp, #24]
   17f60:	ldr	lr, [r5, #16]
   17f64:	str	r1, [sp, #20]
   17f68:	ldr	r1, [r5, #8]
   17f6c:	ldr	ip, [r5, #12]
   17f70:	mov	r0, r4
   17f74:	str	r7, [sp, #16]
   17f78:	stm	sp, {r1, ip, lr}
   17f7c:	str	r6, [sp, #12]
   17f80:	ldr	r1, [pc, #344]	; 180e0 <argp_parse@@Base+0x13b8>
   17f84:	bl	11a0c <fprintf@plt>
   17f88:	b	17f40 <argp_parse@@Base+0x1218>
   17f8c:	ldr	r2, [r5]
   17f90:	mov	r0, r4
   17f94:	ldr	r1, [pc, #328]	; 180e4 <argp_parse@@Base+0x13bc>
   17f98:	add	sp, sp, #36	; 0x24
   17f9c:	pop	{r4, r5, r6, r7, lr}
   17fa0:	b	11a0c <fprintf@plt>
   17fa4:	mov	r0, r4
   17fa8:	ldm	r5, {r2, r3}
   17fac:	ldr	r1, [pc, #308]	; 180e8 <argp_parse@@Base+0x13c0>
   17fb0:	add	sp, sp, #36	; 0x24
   17fb4:	pop	{r4, r5, r6, r7, lr}
   17fb8:	b	11a0c <fprintf@plt>
   17fbc:	ldr	r1, [r5, #8]
   17fc0:	ldm	r5, {r2, r3}
   17fc4:	mov	r0, r4
   17fc8:	str	r1, [sp, #56]	; 0x38
   17fcc:	ldr	r1, [pc, #280]	; 180ec <argp_parse@@Base+0x13c4>
   17fd0:	add	sp, sp, #36	; 0x24
   17fd4:	pop	{r4, r5, r6, r7, lr}
   17fd8:	b	11a0c <fprintf@plt>
   17fdc:	ldr	r1, [r5, #8]
   17fe0:	ldr	ip, [r5, #12]
   17fe4:	ldm	r5, {r2, r3}
   17fe8:	mov	r0, r4
   17fec:	str	r1, [sp, #56]	; 0x38
   17ff0:	str	ip, [sp, #60]	; 0x3c
   17ff4:	ldr	r1, [pc, #244]	; 180f0 <argp_parse@@Base+0x13c8>
   17ff8:	add	sp, sp, #36	; 0x24
   17ffc:	pop	{r4, r5, r6, r7, lr}
   18000:	b	11a0c <fprintf@plt>
   18004:	add	r1, r5, #8
   18008:	ldm	r5, {r2, r3}
   1800c:	ldm	r1, {r1, ip, lr}
   18010:	mov	r0, r4
   18014:	stm	sp, {r1, ip, lr}
   18018:	ldr	r1, [pc, #212]	; 180f4 <argp_parse@@Base+0x13cc>
   1801c:	bl	11a0c <fprintf@plt>
   18020:	b	17f40 <argp_parse@@Base+0x1218>
   18024:	add	r1, r5, #8
   18028:	ldr	r6, [r5, #20]
   1802c:	ldm	r1, {r1, ip, lr}
   18030:	mov	r0, r4
   18034:	ldm	r5, {r2, r3}
   18038:	str	r6, [sp, #12]
   1803c:	stm	sp, {r1, ip, lr}
   18040:	ldr	r1, [pc, #176]	; 180f8 <argp_parse@@Base+0x13d0>
   18044:	bl	11a0c <fprintf@plt>
   18048:	b	17f40 <argp_parse@@Base+0x1218>
   1804c:	add	r1, r5, #8
   18050:	ldr	r7, [r5, #24]
   18054:	ldm	r1, {r1, ip, lr}
   18058:	mov	r0, r4
   1805c:	ldr	r6, [r5, #20]
   18060:	ldm	r5, {r2, r3}
   18064:	stm	sp, {r1, ip, lr}
   18068:	str	r7, [sp, #16]
   1806c:	str	r6, [sp, #12]
   18070:	ldr	r1, [pc, #132]	; 180fc <argp_parse@@Base+0x13d4>
   18074:	bl	11a0c <fprintf@plt>
   18078:	b	17f40 <argp_parse@@Base+0x1218>
   1807c:	ldr	r1, [r5, #28]
   18080:	ldm	r5, {r2, r3}
   18084:	ldr	r7, [r5, #24]
   18088:	ldr	r6, [r5, #20]
   1808c:	ldr	lr, [r5, #16]
   18090:	str	r1, [sp, #20]
   18094:	ldr	r1, [r5, #8]
   18098:	ldr	ip, [r5, #12]
   1809c:	mov	r0, r4
   180a0:	str	r7, [sp, #16]
   180a4:	stm	sp, {r1, ip, lr}
   180a8:	str	r6, [sp, #12]
   180ac:	ldr	r1, [pc, #76]	; 18100 <argp_parse@@Base+0x13d8>
   180b0:	bl	11a0c <fprintf@plt>
   180b4:	b	17f40 <argp_parse@@Base+0x1218>
   180b8:	ldr	r1, [pc, #68]	; 18104 <argp_parse@@Base+0x13dc>
   180bc:	bl	11a0c <fprintf@plt>
   180c0:	b	17e90 <argp_parse@@Base+0x1168>
   180c4:	andeq	r0, r2, ip, lsl #1
   180c8:	andeq	r0, r0, r6, ror #15
   180cc:	andeq	r0, r2, r0, lsr #1
   180d0:	andeq	r0, r2, r0, lsr #7
   180d4:	andeq	r0, r2, r8, asr #1
   180d8:	andeq	r0, r2, r4, lsr #1
   180dc:			; <UNDEFINED> instruction: 0x000202b4
   180e0:	andeq	r0, r2, r0, lsl #5
   180e4:	andeq	r0, r2, r4, ror r1
   180e8:	andeq	r0, r2, r4, lsl #3
   180ec:	muleq	r2, ip, r1
   180f0:			; <UNDEFINED> instruction: 0x000201b8
   180f4:	ldrdeq	r0, [r2], -r8
   180f8:	strdeq	r0, [r2], -ip
   180fc:	andeq	r0, r2, r4, lsr #4
   18100:	andeq	r0, r2, r0, asr r2
   18104:	muleq	r2, r8, r0
   18108:	push	{r4, r5, r6, r7, lr}
   1810c:	sub	sp, sp, #36	; 0x24
   18110:	mov	r6, r0
   18114:	ldr	r5, [sp, #56]	; 0x38
   18118:	ldr	r4, [r5]
   1811c:	cmp	r4, #0
   18120:	beq	1813c <argp_parse@@Base+0x1414>
   18124:	mov	r0, r5
   18128:	mov	r4, #0
   1812c:	ldr	ip, [r0, #4]!
   18130:	add	r4, r4, #1
   18134:	cmp	ip, #0
   18138:	bne	1812c <argp_parse@@Base+0x1404>
   1813c:	cmp	r1, #0
   18140:	beq	1837c <argp_parse@@Base+0x1654>
   18144:	str	r3, [sp]
   18148:	mov	r0, r6
   1814c:	mov	r3, r2
   18150:	mov	r2, r1
   18154:	ldr	r1, [pc, #560]	; 1838c <argp_parse@@Base+0x1664>
   18158:	bl	11a0c <fprintf@plt>
   1815c:	ldr	r3, [pc, #556]	; 18390 <argp_parse@@Base+0x1668>
   18160:	ldr	r2, [pc, #556]	; 18394 <argp_parse@@Base+0x166c>
   18164:	ldr	r1, [pc, #556]	; 18398 <argp_parse@@Base+0x1670>
   18168:	mov	r0, r6
   1816c:	bl	11a0c <fprintf@plt>
   18170:	mov	r1, r6
   18174:	mov	r0, #10
   18178:	bl	11b08 <fputc@plt>
   1817c:	ldr	r1, [pc, #536]	; 1839c <argp_parse@@Base+0x1674>
   18180:	ldr	r2, [pc, #536]	; 183a0 <argp_parse@@Base+0x1678>
   18184:	mov	r0, r6
   18188:	bl	11a0c <fprintf@plt>
   1818c:	mov	r1, r6
   18190:	mov	r0, #10
   18194:	bl	11b08 <fputc@plt>
   18198:	cmp	r4, #9
   1819c:	ldrls	pc, [pc, r4, lsl #2]
   181a0:	b	181cc <argp_parse@@Base+0x14a4>
   181a4:	andeq	r8, r1, ip, lsl #4
   181a8:	andeq	r8, r1, r8, asr r2
   181ac:	andeq	r8, r1, r0, ror r2
   181b0:	andeq	r8, r1, r8, lsl #5
   181b4:	andeq	r8, r1, r8, lsr #5
   181b8:	andeq	r8, r1, r8, asr #5
   181bc:	andeq	r8, r1, r8, ror #5
   181c0:	andeq	r8, r1, r0, lsl r3
   181c4:	andeq	r8, r1, r0, asr #6
   181c8:	andeq	r8, r1, r4, lsl r2
   181cc:	ldr	ip, [r5, #32]
   181d0:	ldr	r1, [r5, #28]
   181d4:	ldm	r5, {r2, r3}
   181d8:	ldr	r7, [r5, #24]
   181dc:	ldr	r4, [r5, #20]
   181e0:	str	ip, [sp, #24]
   181e4:	ldr	lr, [r5, #16]
   181e8:	str	r1, [sp, #20]
   181ec:	ldr	r1, [r5, #8]
   181f0:	ldr	ip, [r5, #12]
   181f4:	mov	r0, r6
   181f8:	str	r7, [sp, #16]
   181fc:	stm	sp, {r1, ip, lr}
   18200:	str	r4, [sp, #12]
   18204:	ldr	r1, [pc, #408]	; 183a4 <argp_parse@@Base+0x167c>
   18208:	bl	11a0c <fprintf@plt>
   1820c:	add	sp, sp, #36	; 0x24
   18210:	pop	{r4, r5, r6, r7, pc}
   18214:	ldr	ip, [r5, #32]
   18218:	ldr	r1, [r5, #28]
   1821c:	ldm	r5, {r2, r3}
   18220:	ldr	r7, [r5, #24]
   18224:	ldr	r4, [r5, #20]
   18228:	str	ip, [sp, #24]
   1822c:	ldr	lr, [r5, #16]
   18230:	str	r1, [sp, #20]
   18234:	ldr	r1, [r5, #8]
   18238:	ldr	ip, [r5, #12]
   1823c:	mov	r0, r6
   18240:	str	r7, [sp, #16]
   18244:	stm	sp, {r1, ip, lr}
   18248:	str	r4, [sp, #12]
   1824c:	ldr	r1, [pc, #340]	; 183a8 <argp_parse@@Base+0x1680>
   18250:	bl	11a0c <fprintf@plt>
   18254:	b	1820c <argp_parse@@Base+0x14e4>
   18258:	ldr	r2, [r5]
   1825c:	mov	r0, r6
   18260:	ldr	r1, [pc, #324]	; 183ac <argp_parse@@Base+0x1684>
   18264:	add	sp, sp, #36	; 0x24
   18268:	pop	{r4, r5, r6, r7, lr}
   1826c:	b	11a0c <fprintf@plt>
   18270:	mov	r0, r6
   18274:	ldm	r5, {r2, r3}
   18278:	ldr	r1, [pc, #304]	; 183b0 <argp_parse@@Base+0x1688>
   1827c:	add	sp, sp, #36	; 0x24
   18280:	pop	{r4, r5, r6, r7, lr}
   18284:	b	11a0c <fprintf@plt>
   18288:	ldr	r1, [r5, #8]
   1828c:	ldm	r5, {r2, r3}
   18290:	mov	r0, r6
   18294:	str	r1, [sp, #56]	; 0x38
   18298:	ldr	r1, [pc, #276]	; 183b4 <argp_parse@@Base+0x168c>
   1829c:	add	sp, sp, #36	; 0x24
   182a0:	pop	{r4, r5, r6, r7, lr}
   182a4:	b	11a0c <fprintf@plt>
   182a8:	ldr	r1, [r5, #8]
   182ac:	ldr	ip, [r5, #12]
   182b0:	ldm	r5, {r2, r3}
   182b4:	mov	r0, r6
   182b8:	stm	sp, {r1, ip}
   182bc:	ldr	r1, [pc, #244]	; 183b8 <argp_parse@@Base+0x1690>
   182c0:	bl	11a0c <fprintf@plt>
   182c4:	b	1820c <argp_parse@@Base+0x14e4>
   182c8:	add	r1, r5, #8
   182cc:	ldm	r5, {r2, r3}
   182d0:	ldm	r1, {r1, ip, lr}
   182d4:	mov	r0, r6
   182d8:	stm	sp, {r1, ip, lr}
   182dc:	ldr	r1, [pc, #216]	; 183bc <argp_parse@@Base+0x1694>
   182e0:	bl	11a0c <fprintf@plt>
   182e4:	b	1820c <argp_parse@@Base+0x14e4>
   182e8:	add	r1, r5, #8
   182ec:	ldr	r4, [r5, #20]
   182f0:	ldm	r1, {r1, ip, lr}
   182f4:	mov	r0, r6
   182f8:	ldm	r5, {r2, r3}
   182fc:	str	r4, [sp, #12]
   18300:	stm	sp, {r1, ip, lr}
   18304:	ldr	r1, [pc, #180]	; 183c0 <argp_parse@@Base+0x1698>
   18308:	bl	11a0c <fprintf@plt>
   1830c:	b	1820c <argp_parse@@Base+0x14e4>
   18310:	add	r1, r5, #8
   18314:	ldr	r7, [r5, #24]
   18318:	ldm	r1, {r1, ip, lr}
   1831c:	mov	r0, r6
   18320:	ldr	r4, [r5, #20]
   18324:	ldm	r5, {r2, r3}
   18328:	stm	sp, {r1, ip, lr}
   1832c:	str	r7, [sp, #16]
   18330:	str	r4, [sp, #12]
   18334:	ldr	r1, [pc, #136]	; 183c4 <argp_parse@@Base+0x169c>
   18338:	bl	11a0c <fprintf@plt>
   1833c:	b	1820c <argp_parse@@Base+0x14e4>
   18340:	ldr	r1, [r5, #28]
   18344:	ldm	r5, {r2, r3}
   18348:	ldr	r7, [r5, #24]
   1834c:	ldr	r4, [r5, #20]
   18350:	ldr	lr, [r5, #16]
   18354:	str	r1, [sp, #20]
   18358:	ldr	r1, [r5, #8]
   1835c:	ldr	ip, [r5, #12]
   18360:	mov	r0, r6
   18364:	str	r7, [sp, #16]
   18368:	stm	sp, {r1, ip, lr}
   1836c:	str	r4, [sp, #12]
   18370:	ldr	r1, [pc, #80]	; 183c8 <argp_parse@@Base+0x16a0>
   18374:	bl	11a0c <fprintf@plt>
   18378:	b	1820c <argp_parse@@Base+0x14e4>
   1837c:	ldr	r1, [pc, #72]	; 183cc <argp_parse@@Base+0x16a4>
   18380:	mov	r0, r6
   18384:	bl	11a0c <fprintf@plt>
   18388:	b	1815c <argp_parse@@Base+0x1434>
   1838c:	andeq	r0, r2, ip, lsl #1
   18390:	andeq	r0, r0, r6, ror #15
   18394:	andeq	r0, r2, r0, lsr #1
   18398:	andeq	r0, r2, r0, lsr #7
   1839c:	andeq	r0, r2, r8, asr #1
   183a0:	andeq	r0, r2, r4, lsr #1
   183a4:			; <UNDEFINED> instruction: 0x000202b4
   183a8:	andeq	r0, r2, r0, lsl #5
   183ac:	andeq	r0, r2, r4, ror r1
   183b0:	andeq	r0, r2, r4, lsl #3
   183b4:	muleq	r2, ip, r1
   183b8:			; <UNDEFINED> instruction: 0x000201b8
   183bc:	ldrdeq	r0, [r2], -r8
   183c0:	strdeq	r0, [r2], -ip
   183c4:	andeq	r0, r2, r4, lsr #4
   183c8:	andeq	r0, r2, r0, asr r2
   183cc:	muleq	r2, r8, r0
   183d0:	push	{r4, r5, r6, lr}
   183d4:	sub	sp, sp, #72	; 0x48
   183d8:	mov	r5, r0
   183dc:	ldr	ip, [sp, #88]	; 0x58
   183e0:	ldr	r0, [ip]
   183e4:	cmp	r0, #0
   183e8:	str	r0, [sp, #32]
   183ec:	beq	186f4 <argp_parse@@Base+0x19cc>
   183f0:	ldr	r0, [ip, #4]
   183f4:	cmp	r0, #0
   183f8:	str	r0, [sp, #36]	; 0x24
   183fc:	beq	186fc <argp_parse@@Base+0x19d4>
   18400:	ldr	r0, [ip, #8]
   18404:	cmp	r0, #0
   18408:	str	r0, [sp, #40]	; 0x28
   1840c:	beq	18704 <argp_parse@@Base+0x19dc>
   18410:	ldr	r0, [ip, #12]
   18414:	cmp	r0, #0
   18418:	str	r0, [sp, #44]	; 0x2c
   1841c:	beq	1870c <argp_parse@@Base+0x19e4>
   18420:	ldr	r0, [ip, #16]
   18424:	cmp	r0, #0
   18428:	str	r0, [sp, #48]	; 0x30
   1842c:	beq	18714 <argp_parse@@Base+0x19ec>
   18430:	ldr	r0, [ip, #20]
   18434:	cmp	r0, #0
   18438:	str	r0, [sp, #52]	; 0x34
   1843c:	beq	1871c <argp_parse@@Base+0x19f4>
   18440:	ldr	r0, [ip, #24]
   18444:	cmp	r0, #0
   18448:	str	r0, [sp, #56]	; 0x38
   1844c:	beq	18724 <argp_parse@@Base+0x19fc>
   18450:	ldr	r0, [ip, #28]
   18454:	cmp	r0, #0
   18458:	str	r0, [sp, #60]	; 0x3c
   1845c:	beq	1872c <argp_parse@@Base+0x1a04>
   18460:	ldr	r0, [ip, #32]
   18464:	cmp	r0, #0
   18468:	str	r0, [sp, #64]	; 0x40
   1846c:	beq	18734 <argp_parse@@Base+0x1a0c>
   18470:	ldr	r0, [ip, #36]	; 0x24
   18474:	cmp	r0, #0
   18478:	movne	r4, #10
   1847c:	moveq	r4, #9
   18480:	cmp	r1, #0
   18484:	beq	186e4 <argp_parse@@Base+0x19bc>
   18488:	str	r3, [sp]
   1848c:	mov	r0, r5
   18490:	mov	r3, r2
   18494:	mov	r2, r1
   18498:	ldr	r1, [pc, #668]	; 1873c <argp_parse@@Base+0x1a14>
   1849c:	bl	11a0c <fprintf@plt>
   184a0:	ldr	r3, [pc, #664]	; 18740 <argp_parse@@Base+0x1a18>
   184a4:	ldr	r2, [pc, #664]	; 18744 <argp_parse@@Base+0x1a1c>
   184a8:	ldr	r1, [pc, #664]	; 18748 <argp_parse@@Base+0x1a20>
   184ac:	mov	r0, r5
   184b0:	bl	11a0c <fprintf@plt>
   184b4:	mov	r1, r5
   184b8:	mov	r0, #10
   184bc:	bl	11b08 <fputc@plt>
   184c0:	ldr	r1, [pc, #644]	; 1874c <argp_parse@@Base+0x1a24>
   184c4:	ldr	r2, [pc, #644]	; 18750 <argp_parse@@Base+0x1a28>
   184c8:	mov	r0, r5
   184cc:	bl	11a0c <fprintf@plt>
   184d0:	mov	r1, r5
   184d4:	mov	r0, #10
   184d8:	bl	11b08 <fputc@plt>
   184dc:	cmp	r4, #9
   184e0:	ldrls	pc, [pc, r4, lsl #2]
   184e4:	b	18510 <argp_parse@@Base+0x17e8>
   184e8:	andeq	r8, r1, r4, asr r5
   184ec:	andeq	r8, r1, r4, lsr #11
   184f0:			; <UNDEFINED> instruction: 0x000185bc
   184f4:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   184f8:	strdeq	r8, [r1], -ip
   184fc:	andeq	r8, r1, r0, lsr #12
   18500:	andeq	r8, r1, r4, asr #12
   18504:	andeq	r8, r1, r0, ror r6
   18508:	andeq	r8, r1, r4, lsr #13
   1850c:	andeq	r8, r1, ip, asr r5
   18510:	ldr	ip, [sp, #64]	; 0x40
   18514:	ldr	r1, [sp, #60]	; 0x3c
   18518:	ldr	lr, [sp, #48]	; 0x30
   1851c:	str	ip, [sp, #24]
   18520:	str	r1, [sp, #20]
   18524:	ldr	ip, [sp, #44]	; 0x2c
   18528:	ldr	r1, [sp, #40]	; 0x28
   1852c:	ldr	r6, [sp, #56]	; 0x38
   18530:	ldr	r4, [sp, #52]	; 0x34
   18534:	stm	sp, {r1, ip, lr}
   18538:	mov	r0, r5
   1853c:	ldr	r3, [sp, #36]	; 0x24
   18540:	ldr	r2, [sp, #32]
   18544:	str	r6, [sp, #16]
   18548:	str	r4, [sp, #12]
   1854c:	ldr	r1, [pc, #512]	; 18754 <argp_parse@@Base+0x1a2c>
   18550:	bl	11a0c <fprintf@plt>
   18554:	add	sp, sp, #72	; 0x48
   18558:	pop	{r4, r5, r6, pc}
   1855c:	ldr	ip, [sp, #64]	; 0x40
   18560:	ldr	r1, [sp, #60]	; 0x3c
   18564:	ldr	lr, [sp, #48]	; 0x30
   18568:	str	ip, [sp, #24]
   1856c:	str	r1, [sp, #20]
   18570:	ldr	ip, [sp, #44]	; 0x2c
   18574:	ldr	r1, [sp, #40]	; 0x28
   18578:	ldr	r6, [sp, #56]	; 0x38
   1857c:	ldr	r4, [sp, #52]	; 0x34
   18580:	stm	sp, {r1, ip, lr}
   18584:	mov	r0, r5
   18588:	ldr	r3, [sp, #36]	; 0x24
   1858c:	ldr	r2, [sp, #32]
   18590:	str	r6, [sp, #16]
   18594:	str	r4, [sp, #12]
   18598:	ldr	r1, [pc, #440]	; 18758 <argp_parse@@Base+0x1a30>
   1859c:	bl	11a0c <fprintf@plt>
   185a0:	b	18554 <argp_parse@@Base+0x182c>
   185a4:	mov	r0, r5
   185a8:	ldr	r2, [sp, #32]
   185ac:	ldr	r1, [pc, #424]	; 1875c <argp_parse@@Base+0x1a34>
   185b0:	add	sp, sp, #72	; 0x48
   185b4:	pop	{r4, r5, r6, lr}
   185b8:	b	11a0c <fprintf@plt>
   185bc:	mov	r0, r5
   185c0:	ldr	r3, [sp, #36]	; 0x24
   185c4:	ldr	r2, [sp, #32]
   185c8:	ldr	r1, [pc, #400]	; 18760 <argp_parse@@Base+0x1a38>
   185cc:	add	sp, sp, #72	; 0x48
   185d0:	pop	{r4, r5, r6, lr}
   185d4:	b	11a0c <fprintf@plt>
   185d8:	ldr	r1, [sp, #40]	; 0x28
   185dc:	ldr	r3, [sp, #36]	; 0x24
   185e0:	str	r1, [sp, #88]	; 0x58
   185e4:	ldr	r2, [sp, #32]
   185e8:	mov	r0, r5
   185ec:	ldr	r1, [pc, #368]	; 18764 <argp_parse@@Base+0x1a3c>
   185f0:	add	sp, sp, #72	; 0x48
   185f4:	pop	{r4, r5, r6, lr}
   185f8:	b	11a0c <fprintf@plt>
   185fc:	ldr	r1, [sp, #40]	; 0x28
   18600:	ldr	ip, [sp, #44]	; 0x2c
   18604:	ldr	r3, [sp, #36]	; 0x24
   18608:	ldr	r2, [sp, #32]
   1860c:	stm	sp, {r1, ip}
   18610:	mov	r0, r5
   18614:	ldr	r1, [pc, #332]	; 18768 <argp_parse@@Base+0x1a40>
   18618:	bl	11a0c <fprintf@plt>
   1861c:	b	18554 <argp_parse@@Base+0x182c>
   18620:	add	r1, sp, #40	; 0x28
   18624:	ldr	r3, [sp, #36]	; 0x24
   18628:	ldm	r1, {r1, ip, lr}
   1862c:	mov	r0, r5
   18630:	ldr	r2, [sp, #32]
   18634:	stm	sp, {r1, ip, lr}
   18638:	ldr	r1, [pc, #300]	; 1876c <argp_parse@@Base+0x1a44>
   1863c:	bl	11a0c <fprintf@plt>
   18640:	b	18554 <argp_parse@@Base+0x182c>
   18644:	add	r1, sp, #40	; 0x28
   18648:	ldr	r4, [sp, #52]	; 0x34
   1864c:	ldm	r1, {r1, ip, lr}
   18650:	mov	r0, r5
   18654:	ldr	r3, [sp, #36]	; 0x24
   18658:	ldr	r2, [sp, #32]
   1865c:	stm	sp, {r1, ip, lr}
   18660:	str	r4, [sp, #12]
   18664:	ldr	r1, [pc, #260]	; 18770 <argp_parse@@Base+0x1a48>
   18668:	bl	11a0c <fprintf@plt>
   1866c:	b	18554 <argp_parse@@Base+0x182c>
   18670:	add	r1, sp, #40	; 0x28
   18674:	ldr	r6, [sp, #56]	; 0x38
   18678:	ldm	r1, {r1, ip, lr}
   1867c:	mov	r0, r5
   18680:	ldr	r4, [sp, #52]	; 0x34
   18684:	ldr	r3, [sp, #36]	; 0x24
   18688:	stm	sp, {r1, ip, lr}
   1868c:	ldr	r2, [sp, #32]
   18690:	str	r6, [sp, #16]
   18694:	str	r4, [sp, #12]
   18698:	ldr	r1, [pc, #212]	; 18774 <argp_parse@@Base+0x1a4c>
   1869c:	bl	11a0c <fprintf@plt>
   186a0:	b	18554 <argp_parse@@Base+0x182c>
   186a4:	ldr	r1, [sp, #60]	; 0x3c
   186a8:	ldr	lr, [sp, #48]	; 0x30
   186ac:	ldr	ip, [sp, #44]	; 0x2c
   186b0:	str	r1, [sp, #20]
   186b4:	ldr	r1, [sp, #40]	; 0x28
   186b8:	ldr	r6, [sp, #56]	; 0x38
   186bc:	ldr	r4, [sp, #52]	; 0x34
   186c0:	stm	sp, {r1, ip, lr}
   186c4:	mov	r0, r5
   186c8:	ldr	r3, [sp, #36]	; 0x24
   186cc:	ldr	r2, [sp, #32]
   186d0:	str	r6, [sp, #16]
   186d4:	str	r4, [sp, #12]
   186d8:	ldr	r1, [pc, #152]	; 18778 <argp_parse@@Base+0x1a50>
   186dc:	bl	11a0c <fprintf@plt>
   186e0:	b	18554 <argp_parse@@Base+0x182c>
   186e4:	ldr	r1, [pc, #144]	; 1877c <argp_parse@@Base+0x1a54>
   186e8:	mov	r0, r5
   186ec:	bl	11a0c <fprintf@plt>
   186f0:	b	184a0 <argp_parse@@Base+0x1778>
   186f4:	mov	r4, r0
   186f8:	b	18480 <argp_parse@@Base+0x1758>
   186fc:	mov	r4, #1
   18700:	b	18480 <argp_parse@@Base+0x1758>
   18704:	mov	r4, #2
   18708:	b	18480 <argp_parse@@Base+0x1758>
   1870c:	mov	r4, #3
   18710:	b	18480 <argp_parse@@Base+0x1758>
   18714:	mov	r4, #4
   18718:	b	18480 <argp_parse@@Base+0x1758>
   1871c:	mov	r4, #5
   18720:	b	18480 <argp_parse@@Base+0x1758>
   18724:	mov	r4, #6
   18728:	b	18480 <argp_parse@@Base+0x1758>
   1872c:	mov	r4, #7
   18730:	b	18480 <argp_parse@@Base+0x1758>
   18734:	mov	r4, #8
   18738:	b	18480 <argp_parse@@Base+0x1758>
   1873c:	andeq	r0, r2, ip, lsl #1
   18740:	andeq	r0, r0, r6, ror #15
   18744:	andeq	r0, r2, r0, lsr #1
   18748:	andeq	r0, r2, r0, lsr #7
   1874c:	andeq	r0, r2, r8, asr #1
   18750:	andeq	r0, r2, r4, lsr #1
   18754:			; <UNDEFINED> instruction: 0x000202b4
   18758:	andeq	r0, r2, r0, lsl #5
   1875c:	andeq	r0, r2, r4, ror r1
   18760:	andeq	r0, r2, r4, lsl #3
   18764:	muleq	r2, ip, r1
   18768:			; <UNDEFINED> instruction: 0x000201b8
   1876c:	ldrdeq	r0, [r2], -r8
   18770:	strdeq	r0, [r2], -ip
   18774:	andeq	r0, r2, r4, lsr #4
   18778:	andeq	r0, r2, r0, asr r2
   1877c:	muleq	r2, r8, r0
   18780:	push	{r3}		; (str r3, [sp, #-4]!)
   18784:	push	{r4, r5, r6, lr}
   18788:	sub	sp, sp, #84	; 0x54
   1878c:	add	ip, sp, #104	; 0x68
   18790:	ldr	lr, [sp, #104]	; 0x68
   18794:	mov	r5, r0
   18798:	cmp	lr, #0
   1879c:	str	lr, [sp, #40]	; 0x28
   187a0:	str	ip, [sp, #36]	; 0x24
   187a4:	beq	18aac <argp_parse@@Base+0x1d84>
   187a8:	ldr	r0, [sp, #108]	; 0x6c
   187ac:	cmp	r0, #0
   187b0:	str	r0, [sp, #44]	; 0x2c
   187b4:	beq	18ab4 <argp_parse@@Base+0x1d8c>
   187b8:	ldr	r0, [sp, #112]	; 0x70
   187bc:	cmp	r0, #0
   187c0:	str	r0, [sp, #48]	; 0x30
   187c4:	beq	18abc <argp_parse@@Base+0x1d94>
   187c8:	ldr	r0, [sp, #116]	; 0x74
   187cc:	cmp	r0, #0
   187d0:	str	r0, [sp, #52]	; 0x34
   187d4:	beq	18ac4 <argp_parse@@Base+0x1d9c>
   187d8:	ldr	r0, [sp, #120]	; 0x78
   187dc:	cmp	r0, #0
   187e0:	str	r0, [sp, #56]	; 0x38
   187e4:	beq	18acc <argp_parse@@Base+0x1da4>
   187e8:	ldr	r0, [sp, #124]	; 0x7c
   187ec:	cmp	r0, #0
   187f0:	str	r0, [sp, #60]	; 0x3c
   187f4:	beq	18ad4 <argp_parse@@Base+0x1dac>
   187f8:	ldr	r0, [sp, #128]	; 0x80
   187fc:	cmp	r0, #0
   18800:	str	r0, [sp, #64]	; 0x40
   18804:	beq	18adc <argp_parse@@Base+0x1db4>
   18808:	ldr	r0, [sp, #132]	; 0x84
   1880c:	cmp	r0, #0
   18810:	str	r0, [sp, #68]	; 0x44
   18814:	beq	18ae4 <argp_parse@@Base+0x1dbc>
   18818:	ldr	r3, [sp, #136]	; 0x88
   1881c:	cmp	r3, #0
   18820:	str	r3, [sp, #72]	; 0x48
   18824:	beq	18aec <argp_parse@@Base+0x1dc4>
   18828:	ldr	lr, [sp, #140]	; 0x8c
   1882c:	cmp	lr, #0
   18830:	movne	r4, #10
   18834:	moveq	r4, #9
   18838:	cmp	r1, #0
   1883c:	ldr	r3, [sp, #100]	; 0x64
   18840:	beq	18a9c <argp_parse@@Base+0x1d74>
   18844:	str	r3, [sp]
   18848:	mov	r0, r5
   1884c:	mov	r3, r2
   18850:	mov	r2, r1
   18854:	ldr	r1, [pc, #664]	; 18af4 <argp_parse@@Base+0x1dcc>
   18858:	bl	11a0c <fprintf@plt>
   1885c:	ldr	r3, [pc, #660]	; 18af8 <argp_parse@@Base+0x1dd0>
   18860:	ldr	r2, [pc, #660]	; 18afc <argp_parse@@Base+0x1dd4>
   18864:	ldr	r1, [pc, #660]	; 18b00 <argp_parse@@Base+0x1dd8>
   18868:	mov	r0, r5
   1886c:	bl	11a0c <fprintf@plt>
   18870:	mov	r1, r5
   18874:	mov	r0, #10
   18878:	bl	11b08 <fputc@plt>
   1887c:	ldr	r1, [pc, #640]	; 18b04 <argp_parse@@Base+0x1ddc>
   18880:	ldr	r2, [pc, #640]	; 18b08 <argp_parse@@Base+0x1de0>
   18884:	mov	r0, r5
   18888:	bl	11a0c <fprintf@plt>
   1888c:	mov	r1, r5
   18890:	mov	r0, #10
   18894:	bl	11b08 <fputc@plt>
   18898:	cmp	r4, #9
   1889c:	ldrls	pc, [pc, r4, lsl #2]
   188a0:	b	188cc <argp_parse@@Base+0x1ba4>
   188a4:	andeq	r8, r1, r0, lsl r9
   188a8:	andeq	r8, r1, r8, ror #18
   188ac:	andeq	r8, r1, ip, ror r9
   188b0:	muleq	r1, r4, r9
   188b4:			; <UNDEFINED> instruction: 0x000189b4
   188b8:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   188bc:	strdeq	r8, [r1], -ip
   188c0:	andeq	r8, r1, r8, lsr #20
   188c4:	andeq	r8, r1, ip, asr sl
   188c8:	andeq	r8, r1, r0, lsr #18
   188cc:	ldr	ip, [sp, #72]	; 0x48
   188d0:	ldr	r1, [sp, #68]	; 0x44
   188d4:	ldr	lr, [sp, #56]	; 0x38
   188d8:	str	ip, [sp, #24]
   188dc:	str	r1, [sp, #20]
   188e0:	ldr	ip, [sp, #52]	; 0x34
   188e4:	ldr	r1, [sp, #48]	; 0x30
   188e8:	ldr	r6, [sp, #64]	; 0x40
   188ec:	ldr	r4, [sp, #60]	; 0x3c
   188f0:	stm	sp, {r1, ip, lr}
   188f4:	mov	r0, r5
   188f8:	ldr	r3, [sp, #44]	; 0x2c
   188fc:	ldr	r2, [sp, #40]	; 0x28
   18900:	str	r6, [sp, #16]
   18904:	str	r4, [sp, #12]
   18908:	ldr	r1, [pc, #508]	; 18b0c <argp_parse@@Base+0x1de4>
   1890c:	bl	11a0c <fprintf@plt>
   18910:	add	sp, sp, #84	; 0x54
   18914:	pop	{r4, r5, r6, lr}
   18918:	add	sp, sp, #4
   1891c:	bx	lr
   18920:	ldr	ip, [sp, #72]	; 0x48
   18924:	ldr	r1, [sp, #68]	; 0x44
   18928:	ldr	lr, [sp, #56]	; 0x38
   1892c:	str	ip, [sp, #24]
   18930:	str	r1, [sp, #20]
   18934:	ldr	ip, [sp, #52]	; 0x34
   18938:	ldr	r1, [sp, #48]	; 0x30
   1893c:	ldr	r6, [sp, #64]	; 0x40
   18940:	ldr	r4, [sp, #60]	; 0x3c
   18944:	stm	sp, {r1, ip, lr}
   18948:	mov	r0, r5
   1894c:	ldr	r3, [sp, #44]	; 0x2c
   18950:	ldr	r2, [sp, #40]	; 0x28
   18954:	str	r6, [sp, #16]
   18958:	str	r4, [sp, #12]
   1895c:	ldr	r1, [pc, #428]	; 18b10 <argp_parse@@Base+0x1de8>
   18960:	bl	11a0c <fprintf@plt>
   18964:	b	18910 <argp_parse@@Base+0x1be8>
   18968:	mov	r0, r5
   1896c:	ldr	r2, [sp, #40]	; 0x28
   18970:	ldr	r1, [pc, #412]	; 18b14 <argp_parse@@Base+0x1dec>
   18974:	bl	11a0c <fprintf@plt>
   18978:	b	18910 <argp_parse@@Base+0x1be8>
   1897c:	mov	r0, r5
   18980:	ldr	r3, [sp, #44]	; 0x2c
   18984:	ldr	r2, [sp, #40]	; 0x28
   18988:	ldr	r1, [pc, #392]	; 18b18 <argp_parse@@Base+0x1df0>
   1898c:	bl	11a0c <fprintf@plt>
   18990:	b	18910 <argp_parse@@Base+0x1be8>
   18994:	ldr	r1, [sp, #48]	; 0x30
   18998:	ldr	r3, [sp, #44]	; 0x2c
   1899c:	str	r1, [sp]
   189a0:	ldr	r2, [sp, #40]	; 0x28
   189a4:	mov	r0, r5
   189a8:	ldr	r1, [pc, #364]	; 18b1c <argp_parse@@Base+0x1df4>
   189ac:	bl	11a0c <fprintf@plt>
   189b0:	b	18910 <argp_parse@@Base+0x1be8>
   189b4:	ldr	r1, [sp, #48]	; 0x30
   189b8:	ldr	ip, [sp, #52]	; 0x34
   189bc:	ldr	r3, [sp, #44]	; 0x2c
   189c0:	ldr	r2, [sp, #40]	; 0x28
   189c4:	stm	sp, {r1, ip}
   189c8:	mov	r0, r5
   189cc:	ldr	r1, [pc, #332]	; 18b20 <argp_parse@@Base+0x1df8>
   189d0:	bl	11a0c <fprintf@plt>
   189d4:	b	18910 <argp_parse@@Base+0x1be8>
   189d8:	add	r1, sp, #48	; 0x30
   189dc:	ldr	r3, [sp, #44]	; 0x2c
   189e0:	ldm	r1, {r1, ip, lr}
   189e4:	mov	r0, r5
   189e8:	ldr	r2, [sp, #40]	; 0x28
   189ec:	stm	sp, {r1, ip, lr}
   189f0:	ldr	r1, [pc, #300]	; 18b24 <argp_parse@@Base+0x1dfc>
   189f4:	bl	11a0c <fprintf@plt>
   189f8:	b	18910 <argp_parse@@Base+0x1be8>
   189fc:	add	r1, sp, #48	; 0x30
   18a00:	ldr	r4, [sp, #60]	; 0x3c
   18a04:	ldm	r1, {r1, ip, lr}
   18a08:	mov	r0, r5
   18a0c:	ldr	r3, [sp, #44]	; 0x2c
   18a10:	ldr	r2, [sp, #40]	; 0x28
   18a14:	stm	sp, {r1, ip, lr}
   18a18:	str	r4, [sp, #12]
   18a1c:	ldr	r1, [pc, #260]	; 18b28 <argp_parse@@Base+0x1e00>
   18a20:	bl	11a0c <fprintf@plt>
   18a24:	b	18910 <argp_parse@@Base+0x1be8>
   18a28:	add	r1, sp, #48	; 0x30
   18a2c:	ldr	r6, [sp, #64]	; 0x40
   18a30:	ldm	r1, {r1, ip, lr}
   18a34:	mov	r0, r5
   18a38:	ldr	r4, [sp, #60]	; 0x3c
   18a3c:	ldr	r3, [sp, #44]	; 0x2c
   18a40:	stm	sp, {r1, ip, lr}
   18a44:	ldr	r2, [sp, #40]	; 0x28
   18a48:	str	r6, [sp, #16]
   18a4c:	str	r4, [sp, #12]
   18a50:	ldr	r1, [pc, #212]	; 18b2c <argp_parse@@Base+0x1e04>
   18a54:	bl	11a0c <fprintf@plt>
   18a58:	b	18910 <argp_parse@@Base+0x1be8>
   18a5c:	ldr	r1, [sp, #68]	; 0x44
   18a60:	ldr	lr, [sp, #56]	; 0x38
   18a64:	ldr	ip, [sp, #52]	; 0x34
   18a68:	str	r1, [sp, #20]
   18a6c:	ldr	r1, [sp, #48]	; 0x30
   18a70:	ldr	r6, [sp, #64]	; 0x40
   18a74:	ldr	r4, [sp, #60]	; 0x3c
   18a78:	stm	sp, {r1, ip, lr}
   18a7c:	mov	r0, r5
   18a80:	ldr	r3, [sp, #44]	; 0x2c
   18a84:	ldr	r2, [sp, #40]	; 0x28
   18a88:	str	r6, [sp, #16]
   18a8c:	str	r4, [sp, #12]
   18a90:	ldr	r1, [pc, #152]	; 18b30 <argp_parse@@Base+0x1e08>
   18a94:	bl	11a0c <fprintf@plt>
   18a98:	b	18910 <argp_parse@@Base+0x1be8>
   18a9c:	ldr	r1, [pc, #144]	; 18b34 <argp_parse@@Base+0x1e0c>
   18aa0:	mov	r0, r5
   18aa4:	bl	11a0c <fprintf@plt>
   18aa8:	b	1885c <argp_parse@@Base+0x1b34>
   18aac:	mov	r4, lr
   18ab0:	b	18838 <argp_parse@@Base+0x1b10>
   18ab4:	mov	r4, #1
   18ab8:	b	18838 <argp_parse@@Base+0x1b10>
   18abc:	mov	r4, #2
   18ac0:	b	18838 <argp_parse@@Base+0x1b10>
   18ac4:	mov	r4, #3
   18ac8:	b	18838 <argp_parse@@Base+0x1b10>
   18acc:	mov	r4, #4
   18ad0:	b	18838 <argp_parse@@Base+0x1b10>
   18ad4:	mov	r4, #5
   18ad8:	b	18838 <argp_parse@@Base+0x1b10>
   18adc:	mov	r4, #6
   18ae0:	b	18838 <argp_parse@@Base+0x1b10>
   18ae4:	mov	r4, #7
   18ae8:	b	18838 <argp_parse@@Base+0x1b10>
   18aec:	mov	r4, #8
   18af0:	b	18838 <argp_parse@@Base+0x1b10>
   18af4:	andeq	r0, r2, ip, lsl #1
   18af8:	andeq	r0, r0, r6, ror #15
   18afc:	andeq	r0, r2, r0, lsr #1
   18b00:	andeq	r0, r2, r0, lsr #7
   18b04:	andeq	r0, r2, r8, asr #1
   18b08:	andeq	r0, r2, r4, lsr #1
   18b0c:			; <UNDEFINED> instruction: 0x000202b4
   18b10:	andeq	r0, r2, r0, lsl #5
   18b14:	andeq	r0, r2, r4, ror r1
   18b18:	andeq	r0, r2, r4, lsl #3
   18b1c:	muleq	r2, ip, r1
   18b20:			; <UNDEFINED> instruction: 0x000201b8
   18b24:	ldrdeq	r0, [r2], -r8
   18b28:	strdeq	r0, [r2], -ip
   18b2c:	andeq	r0, r2, r4, lsr #4
   18b30:	andeq	r0, r2, r0, asr r2
   18b34:	muleq	r2, r8, r0
   18b38:	ldr	r3, [pc, #56]	; 18b78 <argp_parse@@Base+0x1e50>
   18b3c:	push	{r4, lr}
   18b40:	mov	r0, #10
   18b44:	ldr	r1, [r3]
   18b48:	bl	11b08 <fputc@plt>
   18b4c:	ldr	r1, [pc, #40]	; 18b7c <argp_parse@@Base+0x1e54>
   18b50:	ldr	r0, [pc, #40]	; 18b80 <argp_parse@@Base+0x1e58>
   18b54:	bl	11790 <printf@plt>
   18b58:	ldr	r1, [pc, #36]	; 18b84 <argp_parse@@Base+0x1e5c>
   18b5c:	ldr	r2, [pc, #36]	; 18b88 <argp_parse@@Base+0x1e60>
   18b60:	ldr	r0, [pc, #36]	; 18b8c <argp_parse@@Base+0x1e64>
   18b64:	bl	11790 <printf@plt>
   18b68:	ldr	r1, [pc, #32]	; 18b90 <argp_parse@@Base+0x1e68>
   18b6c:	ldr	r0, [pc, #32]	; 18b94 <argp_parse@@Base+0x1e6c>
   18b70:	pop	{r4, lr}
   18b74:	b	11790 <printf@plt>
   18b78:			; <UNDEFINED> instruction: 0x000313b4
   18b7c:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   18b80:	andeq	r0, r2, r8, lsl #6
   18b84:	andeq	r0, r2, r8, lsr r0
   18b88:	andeq	r0, r2, ip, lsl r3
   18b8c:	andeq	r0, r2, r4, asr #6
   18b90:	andeq	r0, r2, r8, asr r3
   18b94:	andeq	r0, r2, r8, ror r3
   18b98:	cmp	r1, #0
   18b9c:	cmpne	r0, #0
   18ba0:	moveq	r1, #1
   18ba4:	moveq	r0, r1
   18ba8:	umull	r2, r3, r0, r1
   18bac:	adds	r3, r3, #0
   18bb0:	movne	r3, #1
   18bb4:	cmp	r2, #0
   18bb8:	blt	18bc8 <argp_parse@@Base+0x1ea0>
   18bbc:	cmp	r3, #0
   18bc0:	bne	18bc8 <argp_parse@@Base+0x1ea0>
   18bc4:	b	11724 <calloc@plt>
   18bc8:	push	{r4, lr}
   18bcc:	bl	11a24 <__errno_location@plt>
   18bd0:	mov	r3, #12
   18bd4:	str	r3, [r0]
   18bd8:	mov	r0, #0
   18bdc:	pop	{r4, pc}
   18be0:	cmp	r0, #0
   18be4:	moveq	r0, #1
   18be8:	cmp	r0, #0
   18bec:	blt	18bf4 <argp_parse@@Base+0x1ecc>
   18bf0:	b	11958 <malloc@plt>
   18bf4:	push	{r4, lr}
   18bf8:	bl	11a24 <__errno_location@plt>
   18bfc:	mov	r3, #12
   18c00:	str	r3, [r0]
   18c04:	mov	r0, #0
   18c08:	pop	{r4, pc}
   18c0c:	cmp	r0, #0
   18c10:	beq	18c34 <argp_parse@@Base+0x1f0c>
   18c14:	cmp	r1, #0
   18c18:	push	{lr}		; (str lr, [sp, #-4]!)
   18c1c:	sub	sp, sp, #12
   18c20:	beq	18c3c <argp_parse@@Base+0x1f14>
   18c24:	blt	18c54 <argp_parse@@Base+0x1f2c>
   18c28:	add	sp, sp, #12
   18c2c:	pop	{lr}		; (ldr lr, [sp], #4)
   18c30:	b	118a4 <realloc@plt>
   18c34:	mov	r0, r1
   18c38:	b	18be0 <argp_parse@@Base+0x1eb8>
   18c3c:	str	r1, [sp, #4]
   18c40:	bl	17ca4 <argp_parse@@Base+0xf7c>
   18c44:	ldr	r3, [sp, #4]
   18c48:	mov	r0, r3
   18c4c:	add	sp, sp, #12
   18c50:	pop	{pc}		; (ldr pc, [sp], #4)
   18c54:	bl	11a24 <__errno_location@plt>
   18c58:	mov	r2, #12
   18c5c:	mov	r3, #0
   18c60:	str	r2, [r0]
   18c64:	b	18c48 <argp_parse@@Base+0x1f20>
   18c68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18c6c:	mov	r7, r3
   18c70:	ldr	sl, [r0, #12]
   18c74:	sub	sp, sp, #36	; 0x24
   18c78:	ldr	r3, [r0, #16]
   18c7c:	cmp	sl, #0
   18c80:	mov	fp, r0
   18c84:	mov	r6, r2
   18c88:	str	r3, [sp, #16]
   18c8c:	mov	r9, r1
   18c90:	ldr	r8, [sp, #72]	; 0x48
   18c94:	ldr	r5, [sp, #76]	; 0x4c
   18c98:	beq	19068 <argp_parse@@Base+0x2340>
   18c9c:	mov	r1, #11
   18ca0:	mov	r0, sl
   18ca4:	bl	119f4 <strchr@plt>
   18ca8:	cmp	r6, #0
   18cac:	bne	18f84 <argp_parse@@Base+0x225c>
   18cb0:	cmp	r0, #0
   18cb4:	ldr	r3, [fp, #20]
   18cb8:	beq	191c0 <argp_parse@@Base+0x2498>
   18cbc:	cmp	r3, #0
   18cc0:	sub	r4, r0, sl
   18cc4:	beq	19158 <argp_parse@@Base+0x2430>
   18cc8:	cmp	r4, #0
   18ccc:	beq	190f8 <argp_parse@@Base+0x23d0>
   18cd0:	mov	r0, sl
   18cd4:	mov	r1, r4
   18cd8:	bl	117f0 <strndup@plt>
   18cdc:	mov	r3, #1
   18ce0:	str	r3, [sp, #24]
   18ce4:	mov	sl, r0
   18ce8:	adds	r3, r0, #0
   18cec:	movne	r3, #1
   18cf0:	str	r3, [sp, #20]
   18cf4:	mov	r1, r9
   18cf8:	mov	r0, fp
   18cfc:	bl	17b48 <argp_parse@@Base+0xe20>
   18d00:	ldr	r3, [fp, #20]
   18d04:	str	r0, [sp, #12]
   18d08:	ldr	r0, [pc, #1272]	; 19208 <argp_parse@@Base+0x24e0>
   18d0c:	ldr	r2, [sp, #12]
   18d10:	mov	r1, sl
   18d14:	blx	r3
   18d18:	subs	r3, r0, #0
   18d1c:	beq	190a8 <argp_parse@@Base+0x2380>
   18d20:	cmp	r7, #0
   18d24:	beq	18d48 <argp_parse@@Base+0x2020>
   18d28:	ldr	r2, [r5, #28]
   18d2c:	ldr	r1, [r5, #32]
   18d30:	cmp	r2, r1
   18d34:	bcs	190b0 <argp_parse@@Base+0x2388>
   18d38:	add	r0, r2, #1
   18d3c:	mov	r1, #10
   18d40:	str	r0, [r5, #28]
   18d44:	strb	r1, [r2]
   18d48:	ldr	r2, [sp, #24]
   18d4c:	cmp	sl, r3
   18d50:	movne	r2, #0
   18d54:	andeq	r2, r2, #1
   18d58:	cmp	r2, #0
   18d5c:	beq	18fc8 <argp_parse@@Base+0x22a0>
   18d60:	ldr	r0, [r5, #28]
   18d64:	ldr	r1, [r5, #32]
   18d68:	add	r2, r0, r4
   18d6c:	cmp	r1, r2
   18d70:	bcs	19028 <argp_parse@@Base+0x2300>
   18d74:	mov	r1, r4
   18d78:	mov	r0, r5
   18d7c:	str	r3, [sp, #24]
   18d80:	bl	1ef68 <argp_error@@Base+0x1fbc>
   18d84:	ldr	r3, [sp, #24]
   18d88:	cmp	r0, #0
   18d8c:	bne	19024 <argp_parse@@Base+0x22fc>
   18d90:	ldr	r4, [r5, #28]
   18d94:	ldr	r1, [r5, #24]
   18d98:	ldr	r2, [r5, #16]
   18d9c:	sub	r4, r4, r1
   18da0:	cmp	r4, r2
   18da4:	bhi	1904c <argp_parse@@Base+0x2324>
   18da8:	ldr	r2, [r5, #20]
   18dac:	ldr	r1, [r5, #4]
   18db0:	bic	r2, r2, r2, asr #31
   18db4:	cmp	r1, r2
   18db8:	bcs	18ddc <argp_parse@@Base+0x20b4>
   18dbc:	ldr	r2, [r5, #28]
   18dc0:	ldr	r1, [r5, #32]
   18dc4:	cmp	r2, r1
   18dc8:	bcs	190d4 <argp_parse@@Base+0x23ac>
   18dcc:	add	r0, r2, #1
   18dd0:	mov	r1, #10
   18dd4:	str	r0, [r5, #28]
   18dd8:	strb	r1, [r2]
   18ddc:	cmp	sl, r3
   18de0:	moveq	r4, #1
   18de4:	beq	18df4 <argp_parse@@Base+0x20cc>
   18de8:	mov	r0, r3
   18dec:	bl	17ca4 <argp_parse@@Base+0xf7c>
   18df0:	mov	r4, #1
   18df4:	ldr	r3, [sp, #20]
   18df8:	cmp	r3, #0
   18dfc:	beq	18e14 <argp_parse@@Base+0x20ec>
   18e00:	ldr	r3, [fp, #20]
   18e04:	cmp	r3, #0
   18e08:	beq	18ef8 <argp_parse@@Base+0x21d0>
   18e0c:	mov	r0, sl
   18e10:	bl	17ca4 <argp_parse@@Base+0xf7c>
   18e14:	cmp	r6, #0
   18e18:	beq	18ef8 <argp_parse@@Base+0x21d0>
   18e1c:	ldr	r3, [fp, #20]
   18e20:	cmp	r3, #0
   18e24:	beq	18ef8 <argp_parse@@Base+0x21d0>
   18e28:	ldr	r2, [sp, #12]
   18e2c:	mov	r1, #0
   18e30:	ldr	r0, [pc, #980]	; 1920c <argp_parse@@Base+0x24e4>
   18e34:	blx	r3
   18e38:	subs	sl, r0, #0
   18e3c:	beq	18ef8 <argp_parse@@Base+0x21d0>
   18e40:	orrs	r3, r7, r4
   18e44:	beq	18e68 <argp_parse@@Base+0x2140>
   18e48:	ldr	r3, [r5, #28]
   18e4c:	ldr	r2, [r5, #32]
   18e50:	cmp	r3, r2
   18e54:	bcs	19190 <argp_parse@@Base+0x2468>
   18e58:	add	r1, r3, #1
   18e5c:	mov	r2, #10
   18e60:	str	r1, [r5, #28]
   18e64:	strb	r2, [r3]
   18e68:	mov	r0, sl
   18e6c:	bl	119dc <strlen@plt>
   18e70:	subs	r4, r0, #0
   18e74:	beq	18ea0 <argp_parse@@Base+0x2178>
   18e78:	ldr	r0, [r5, #28]
   18e7c:	ldr	r2, [r5, #32]
   18e80:	add	r3, r0, r4
   18e84:	cmp	r2, r3
   18e88:	bcs	19108 <argp_parse@@Base+0x23e0>
   18e8c:	mov	r1, r4
   18e90:	mov	r0, r5
   18e94:	bl	1ef68 <argp_error@@Base+0x1fbc>
   18e98:	cmp	r0, #0
   18e9c:	bne	19104 <argp_parse@@Base+0x23dc>
   18ea0:	mov	r0, sl
   18ea4:	bl	17ca4 <argp_parse@@Base+0xf7c>
   18ea8:	ldr	r3, [r5, #28]
   18eac:	ldr	r1, [r5, #24]
   18eb0:	ldr	r2, [r5, #16]
   18eb4:	sub	r3, r3, r1
   18eb8:	cmp	r3, r2
   18ebc:	bhi	19124 <argp_parse@@Base+0x23fc>
   18ec0:	ldr	r3, [r5, #20]
   18ec4:	ldr	r2, [r5, #4]
   18ec8:	bic	r3, r3, r3, asr #31
   18ecc:	cmp	r2, r3
   18ed0:	bcs	19060 <argp_parse@@Base+0x2338>
   18ed4:	ldr	r3, [r5, #28]
   18ed8:	ldr	r2, [r5, #32]
   18edc:	cmp	r3, r2
   18ee0:	bcs	19174 <argp_parse@@Base+0x244c>
   18ee4:	mov	r4, #1
   18ee8:	add	r2, r3, r4
   18eec:	str	r2, [r5, #28]
   18ef0:	mov	r2, #10
   18ef4:	strb	r2, [r3]
   18ef8:	ldr	fp, [sp, #16]
   18efc:	cmp	fp, #0
   18f00:	beq	18f78 <argp_parse@@Base+0x2250>
   18f04:	ldr	r3, [fp]
   18f08:	cmp	r3, #0
   18f0c:	beq	18f78 <argp_parse@@Base+0x2250>
   18f10:	eor	r2, r4, #1
   18f14:	and	r2, r2, #1
   18f18:	clz	sl, r8
   18f1c:	lsr	sl, sl, #5
   18f20:	orrs	r2, sl, r2
   18f24:	bne	18f40 <argp_parse@@Base+0x2218>
   18f28:	b	191ac <argp_parse@@Base+0x2484>
   18f2c:	cmp	r4, #0
   18f30:	movne	r2, sl
   18f34:	orreq	r2, sl, #1
   18f38:	cmp	r2, #0
   18f3c:	beq	18f78 <argp_parse@@Base+0x2250>
   18f40:	orrs	r2, r7, r4
   18f44:	mov	r0, r3
   18f48:	str	r5, [sp, #4]
   18f4c:	movne	r3, #1
   18f50:	moveq	r3, #0
   18f54:	str	r8, [sp]
   18f58:	mov	r2, r6
   18f5c:	mov	r1, r9
   18f60:	bl	18c68 <argp_parse@@Base+0x1f40>
   18f64:	ldr	r3, [fp, #16]
   18f68:	add	fp, fp, #16
   18f6c:	cmp	r3, #0
   18f70:	orr	r4, r4, r0
   18f74:	bne	18f2c <argp_parse@@Base+0x2204>
   18f78:	mov	r0, r4
   18f7c:	add	sp, sp, #36	; 0x24
   18f80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18f84:	cmp	r0, #0
   18f88:	addne	sl, r0, #1
   18f8c:	beq	19150 <argp_parse@@Base+0x2428>
   18f90:	ldr	r3, [fp, #20]
   18f94:	cmp	r3, #0
   18f98:	beq	19130 <argp_parse@@Base+0x2408>
   18f9c:	mov	r3, #0
   18fa0:	mov	r1, r9
   18fa4:	mov	r0, fp
   18fa8:	mov	r4, r3
   18fac:	str	r3, [sp, #20]
   18fb0:	bl	17b48 <argp_parse@@Base+0xe20>
   18fb4:	str	r4, [sp, #24]
   18fb8:	ldr	r3, [fp, #20]
   18fbc:	str	r0, [sp, #12]
   18fc0:	ldr	r0, [pc, #584]	; 19210 <argp_parse@@Base+0x24e8>
   18fc4:	b	18d0c <argp_parse@@Base+0x1fe4>
   18fc8:	mov	r0, r3
   18fcc:	str	r3, [sp, #24]
   18fd0:	bl	119dc <strlen@plt>
   18fd4:	ldr	r3, [sp, #24]
   18fd8:	subs	r4, r0, #0
   18fdc:	beq	18d90 <argp_parse@@Base+0x2068>
   18fe0:	ldr	r0, [r5, #28]
   18fe4:	ldr	r1, [r5, #32]
   18fe8:	add	r2, r0, r4
   18fec:	cmp	r1, r2
   18ff0:	bcs	19014 <argp_parse@@Base+0x22ec>
   18ff4:	mov	r1, r4
   18ff8:	mov	r0, r5
   18ffc:	str	r3, [sp, #24]
   19000:	bl	1ef68 <argp_error@@Base+0x1fbc>
   19004:	ldr	r3, [sp, #24]
   19008:	cmp	r0, #0
   1900c:	beq	18d90 <argp_parse@@Base+0x2068>
   19010:	ldr	r0, [r5, #28]
   19014:	mov	r2, r4
   19018:	mov	r1, r3
   1901c:	str	r3, [sp, #24]
   19020:	b	19034 <argp_parse@@Base+0x230c>
   19024:	ldr	r0, [r5, #28]
   19028:	mov	r2, r4
   1902c:	mov	r1, sl
   19030:	str	r3, [sp, #24]
   19034:	bl	11808 <memcpy@plt>
   19038:	ldr	r2, [r5, #28]
   1903c:	ldr	r3, [sp, #24]
   19040:	add	r4, r2, r4
   19044:	str	r4, [r5, #28]
   19048:	b	18d94 <argp_parse@@Base+0x206c>
   1904c:	mov	r0, r5
   19050:	str	r3, [sp, #24]
   19054:	bl	1e9bc <argp_error@@Base+0x1a10>
   19058:	ldr	r3, [sp, #24]
   1905c:	b	18da8 <argp_parse@@Base+0x2080>
   19060:	mov	r4, #1
   19064:	b	18ef8 <argp_parse@@Base+0x21d0>
   19068:	ldr	r4, [r0, #20]
   1906c:	cmp	r4, #0
   19070:	beq	191b8 <argp_parse@@Base+0x2490>
   19074:	bl	17b48 <argp_parse@@Base+0xe20>
   19078:	cmp	r6, #0
   1907c:	ldr	r3, [fp, #20]
   19080:	strne	sl, [sp, #20]
   19084:	strne	sl, [sp, #24]
   19088:	movne	r4, sl
   1908c:	streq	r6, [sp, #20]
   19090:	streq	r6, [sp, #24]
   19094:	moveq	r4, r6
   19098:	str	r0, [sp, #12]
   1909c:	ldrne	r0, [pc, #364]	; 19210 <argp_parse@@Base+0x24e8>
   190a0:	ldreq	r0, [pc, #352]	; 19208 <argp_parse@@Base+0x24e0>
   190a4:	b	18d0c <argp_parse@@Base+0x1fe4>
   190a8:	mov	r4, r3
   190ac:	b	18df4 <argp_parse@@Base+0x20cc>
   190b0:	mov	r1, #1
   190b4:	mov	r0, r5
   190b8:	str	r3, [sp, #28]
   190bc:	bl	1ef68 <argp_error@@Base+0x1fbc>
   190c0:	ldr	r3, [sp, #28]
   190c4:	cmp	r0, #0
   190c8:	beq	18d48 <argp_parse@@Base+0x2020>
   190cc:	ldr	r2, [r5, #28]
   190d0:	b	18d38 <argp_parse@@Base+0x2010>
   190d4:	mov	r1, #1
   190d8:	mov	r0, r5
   190dc:	str	r3, [sp, #24]
   190e0:	bl	1ef68 <argp_error@@Base+0x1fbc>
   190e4:	ldr	r3, [sp, #24]
   190e8:	cmp	r0, #0
   190ec:	beq	18ddc <argp_parse@@Base+0x20b4>
   190f0:	ldr	r2, [r5, #28]
   190f4:	b	18dcc <argp_parse@@Base+0x20a4>
   190f8:	str	r4, [sp, #20]
   190fc:	str	r4, [sp, #24]
   19100:	b	18cf4 <argp_parse@@Base+0x1fcc>
   19104:	ldr	r0, [r5, #28]
   19108:	mov	r2, r4
   1910c:	mov	r1, sl
   19110:	bl	11808 <memcpy@plt>
   19114:	ldr	r3, [r5, #28]
   19118:	add	r4, r3, r4
   1911c:	str	r4, [r5, #28]
   19120:	b	18ea0 <argp_parse@@Base+0x2178>
   19124:	mov	r0, r5
   19128:	bl	1e9bc <argp_error@@Base+0x1a10>
   1912c:	b	18ec0 <argp_parse@@Base+0x2198>
   19130:	cmp	sl, #0
   19134:	beq	191b4 <argp_parse@@Base+0x248c>
   19138:	str	r3, [sp, #20]
   1913c:	str	r3, [sp, #24]
   19140:	mov	r4, r3
   19144:	str	r3, [sp, #12]
   19148:	mov	r3, sl
   1914c:	b	18d20 <argp_parse@@Base+0x1ff8>
   19150:	mov	sl, r0
   19154:	b	18f90 <argp_parse@@Base+0x2268>
   19158:	adds	r3, r4, #0
   1915c:	movne	r3, #1
   19160:	str	r3, [sp, #24]
   19164:	str	r3, [sp, #20]
   19168:	str	r6, [sp, #12]
   1916c:	mov	r3, sl
   19170:	b	18d20 <argp_parse@@Base+0x1ff8>
   19174:	mov	r1, #1
   19178:	mov	r0, r5
   1917c:	bl	1ef68 <argp_error@@Base+0x1fbc>
   19180:	cmp	r0, #0
   19184:	beq	19060 <argp_parse@@Base+0x2338>
   19188:	ldr	r3, [r5, #28]
   1918c:	b	18ee4 <argp_parse@@Base+0x21bc>
   19190:	mov	r1, #1
   19194:	mov	r0, r5
   19198:	bl	1ef68 <argp_error@@Base+0x1fbc>
   1919c:	cmp	r0, #0
   191a0:	beq	18e68 <argp_parse@@Base+0x2140>
   191a4:	ldr	r3, [r5, #28]
   191a8:	b	18e58 <argp_parse@@Base+0x2130>
   191ac:	mov	r4, #1
   191b0:	b	18f78 <argp_parse@@Base+0x2250>
   191b4:	mov	r4, sl
   191b8:	str	r4, [sp, #12]
   191bc:	b	18e14 <argp_parse@@Base+0x20ec>
   191c0:	cmp	r3, #0
   191c4:	beq	191f0 <argp_parse@@Base+0x24c8>
   191c8:	mov	r1, r9
   191cc:	mov	r0, fp
   191d0:	bl	17b48 <argp_parse@@Base+0xe20>
   191d4:	mov	r4, r6
   191d8:	ldr	r3, [fp, #20]
   191dc:	str	r6, [sp, #20]
   191e0:	str	r6, [sp, #24]
   191e4:	str	r0, [sp, #12]
   191e8:	ldr	r0, [pc, #24]	; 19208 <argp_parse@@Base+0x24e0>
   191ec:	b	18d0c <argp_parse@@Base+0x1fe4>
   191f0:	mov	r3, sl
   191f4:	str	r6, [sp, #20]
   191f8:	str	r6, [sp, #24]
   191fc:	mov	r4, r6
   19200:	str	r6, [sp, #12]
   19204:	b	18d20 <argp_parse@@Base+0x1ff8>
   19208:	andeq	r0, r0, #1
   1920c:	andeq	r0, r0, #4
   19210:	andeq	r0, r0, #2
   19214:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19218:	sub	sp, sp, #52	; 0x34
   1921c:	mov	r3, r0
   19220:	str	r0, [sp, #20]
   19224:	mov	r0, #16
   19228:	ldr	r6, [r3, #16]
   1922c:	ldr	r4, [r3]
   19230:	str	r1, [sp, #28]
   19234:	bl	18be0 <argp_parse@@Base+0x1eb8>
   19238:	subs	r3, r0, #0
   1923c:	str	r3, [sp, #16]
   19240:	beq	19830 <argp_parse@@Base+0x2b08>
   19244:	mov	r2, r3
   19248:	cmp	r4, #0
   1924c:	mov	r3, #0
   19250:	str	r3, [r2, #4]
   19254:	str	r3, [r2, #12]
   19258:	beq	1946c <argp_parse@@Base+0x2744>
   1925c:	ldr	fp, [r4, #12]
   19260:	ands	fp, fp, #4
   19264:	bne	19844 <argp_parse@@Base+0x2b1c>
   19268:	add	r5, r4, #24
   1926c:	mov	r7, r4
   19270:	mov	r9, fp
   19274:	mov	sl, fp
   19278:	mov	r4, r2
   1927c:	b	192c0 <argp_parse@@Base+0x2598>
   19280:	ldr	r3, [r5, #-12]
   19284:	tst	r3, #4
   19288:	addeq	r9, r9, #1
   1928c:	streq	r9, [r4, #4]
   19290:	tst	r3, #8
   19294:	bne	192bc <argp_parse@@Base+0x2594>
   19298:	sub	r3, r8, #1
   1929c:	cmp	r3, #254	; 0xfe
   192a0:	bhi	192bc <argp_parse@@Base+0x2594>
   192a4:	bl	119ac <__ctype_b_loc@plt>
   192a8:	lsl	r8, r8, #1
   192ac:	ldr	r3, [r0]
   192b0:	ldrh	r3, [r3, r8]
   192b4:	tst	r3, #16384	; 0x4000
   192b8:	addne	sl, sl, #1
   192bc:	add	r5, r5, #24
   192c0:	ldr	r8, [r5, #-20]	; 0xffffffec
   192c4:	cmp	r8, #0
   192c8:	bne	19280 <argp_parse@@Base+0x2558>
   192cc:	ldr	r3, [r5, #-24]	; 0xffffffe8
   192d0:	cmp	r3, #0
   192d4:	bne	19280 <argp_parse@@Base+0x2558>
   192d8:	ldr	r3, [r5, #-8]
   192dc:	cmp	r3, #0
   192e0:	bne	19280 <argp_parse@@Base+0x2558>
   192e4:	ldr	r3, [r5, #-4]
   192e8:	cmp	r3, #0
   192ec:	bne	19280 <argp_parse@@Base+0x2558>
   192f0:	rsb	r9, r9, r9, lsl #3
   192f4:	mov	r4, r7
   192f8:	lsl	r0, r9, #2
   192fc:	mov	r7, r3
   19300:	bl	18be0 <argp_parse@@Base+0x1eb8>
   19304:	ldr	r5, [sp, #16]
   19308:	str	r0, [r5]
   1930c:	add	r0, sl, #1
   19310:	bl	18be0 <argp_parse@@Base+0x1eb8>
   19314:	ldr	r8, [r5]
   19318:	mov	r3, r5
   1931c:	cmp	r0, #0
   19320:	cmpne	r8, #0
   19324:	mov	sl, r0
   19328:	str	r0, [r3, #8]
   1932c:	beq	198ec <argp_parse@@Base+0x2bc4>
   19330:	ldr	r2, [sp, #16]
   19334:	ldr	r3, [pc, #1476]	; 19900 <argp_parse@@Base+0x2bd8>
   19338:	ldr	r2, [r2, #4]
   1933c:	cmp	r2, r3
   19340:	bhi	198d8 <argp_parse@@Base+0x2bb0>
   19344:	add	r8, r8, #28
   19348:	mov	r9, sl
   1934c:	mov	r2, fp
   19350:	ldr	r3, [r4, #4]
   19354:	mov	fp, sl
   19358:	mov	sl, r8
   1935c:	ldr	r8, [sp, #28]
   19360:	str	r6, [sp, #4]
   19364:	cmp	r3, #0
   19368:	bne	19378 <argp_parse@@Base+0x2650>
   1936c:	ldr	r0, [r4]
   19370:	cmp	r0, #0
   19374:	beq	19890 <argp_parse@@Base+0x2b68>
   19378:	str	r7, [sl, #-24]	; 0xffffffe8
   1937c:	ldr	r5, [r4, #20]
   19380:	str	r4, [sl, #-28]	; 0xffffffe4
   19384:	cmp	r5, #0
   19388:	str	fp, [sl, #-20]	; 0xffffffec
   1938c:	bne	193a4 <argp_parse@@Base+0x267c>
   19390:	ldr	r0, [r4]
   19394:	cmp	r0, #0
   19398:	cmpeq	r3, #0
   1939c:	movne	r5, r2
   193a0:	beq	198b4 <argp_parse@@Base+0x2b8c>
   193a4:	ldr	r2, [sp, #20]
   193a8:	mov	r3, r7
   193ac:	str	r5, [sl, #-16]
   193b0:	str	r8, [sl, #-12]
   193b4:	str	r2, [sl, #-8]
   193b8:	add	r3, r3, #1
   193bc:	str	r3, [sl, #-24]	; 0xffffffe8
   193c0:	ldr	r3, [r4, #12]
   193c4:	tst	r3, #8
   193c8:	bne	19434 <argp_parse@@Base+0x270c>
   193cc:	ldr	r6, [r4, #4]
   193d0:	sub	r2, r6, #1
   193d4:	cmp	r2, #254	; 0xfe
   193d8:	bhi	19434 <argp_parse@@Base+0x270c>
   193dc:	bl	119ac <__ctype_b_loc@plt>
   193e0:	lsl	r2, r6, #1
   193e4:	ldr	r0, [r0]
   193e8:	ldrh	r2, [r0, r2]
   193ec:	tst	r2, #16384	; 0x4000
   193f0:	beq	19434 <argp_parse@@Base+0x270c>
   193f4:	cmp	r9, fp
   193f8:	uxtb	r0, r6
   193fc:	bcs	1942c <argp_parse@@Base+0x2704>
   19400:	ldrb	r3, [r9]
   19404:	cmp	r3, r0
   19408:	movne	r3, r9
   1940c:	subne	ip, fp, #1
   19410:	bne	19424 <argp_parse@@Base+0x26fc>
   19414:	b	19434 <argp_parse@@Base+0x270c>
   19418:	ldrb	r2, [r3, #1]!
   1941c:	cmp	r2, r0
   19420:	beq	19434 <argp_parse@@Base+0x270c>
   19424:	cmp	ip, r3
   19428:	bne	19418 <argp_parse@@Base+0x26f0>
   1942c:	strb	r0, [fp]
   19430:	add	fp, fp, #1
   19434:	add	r4, r4, #24
   19438:	ldr	r3, [r4, #4]
   1943c:	cmp	r3, #0
   19440:	bne	19450 <argp_parse@@Base+0x2728>
   19444:	ldr	r2, [r4]
   19448:	cmp	r2, #0
   1944c:	beq	1986c <argp_parse@@Base+0x2b44>
   19450:	ldr	r2, [r4, #12]
   19454:	tst	r2, #4
   19458:	beq	19884 <argp_parse@@Base+0x2b5c>
   1945c:	ldr	r3, [sl, #-24]	; 0xffffffe8
   19460:	b	193b8 <argp_parse@@Base+0x2690>
   19464:	ldr	r6, [sp, #4]
   19468:	strb	r3, [fp]
   1946c:	cmp	r6, #0
   19470:	beq	195ac <argp_parse@@Base+0x2884>
   19474:	ldr	r0, [r6]
   19478:	cmp	r0, #0
   1947c:	beq	195ac <argp_parse@@Base+0x2884>
   19480:	add	r3, r6, #16
   19484:	str	r3, [sp, #8]
   19488:	ldr	r3, [sp, #16]
   1948c:	add	r3, r3, #12
   19490:	str	r3, [sp, #44]	; 0x2c
   19494:	ldr	r3, [sp, #8]
   19498:	ldr	r5, [r3, #-4]
   1949c:	ldr	r6, [r3, #-8]
   194a0:	cmp	r5, #0
   194a4:	bne	194b0 <argp_parse@@Base+0x2788>
   194a8:	cmp	r6, #0
   194ac:	beq	19804 <argp_parse@@Base+0x2adc>
   194b0:	ldr	r3, [sp, #20]
   194b4:	mov	r0, #28
   194b8:	ldr	r2, [r3, #16]
   194bc:	ldr	r3, [sp, #8]
   194c0:	sub	r3, r3, #16
   194c4:	sub	r3, r3, r2
   194c8:	asr	r4, r3, #4
   194cc:	bl	18be0 <argp_parse@@Base+0x1eb8>
   194d0:	subs	r1, r0, #0
   194d4:	beq	19518 <argp_parse@@Base+0x27f0>
   194d8:	ldr	r3, [sp, #28]
   194dc:	ldr	r0, [sp, #16]
   194e0:	cmp	r3, #0
   194e4:	ldr	r2, [sp, #20]
   194e8:	str	r3, [r1, #12]
   194ec:	ldrne	r3, [r3, #20]
   194f0:	str	r2, [r1, #16]
   194f4:	ldr	r2, [r0, #12]
   194f8:	addne	r3, r3, #1
   194fc:	moveq	r3, #0
   19500:	str	r5, [r1, #8]
   19504:	str	r6, [r1]
   19508:	str	r4, [r1, #4]
   1950c:	str	r3, [r1, #20]
   19510:	str	r2, [r1, #24]
   19514:	str	r1, [r0, #12]
   19518:	ldr	r3, [sp, #8]
   1951c:	ldr	r0, [r3, #-16]
   19520:	bl	19214 <argp_parse@@Base+0x24ec>
   19524:	ldr	r3, [sp, #16]
   19528:	ldr	r2, [r3, #12]
   1952c:	cmp	r2, #0
   19530:	mov	sl, r0
   19534:	bne	19540 <argp_parse@@Base+0x2818>
   19538:	b	1980c <argp_parse@@Base+0x2ae4>
   1953c:	mov	r2, r3
   19540:	ldr	r3, [r2, #24]
   19544:	cmp	r3, #0
   19548:	bne	1953c <argp_parse@@Base+0x2814>
   1954c:	add	r2, r2, #24
   19550:	ldr	r3, [sl, #4]
   19554:	ldr	r1, [sl, #12]
   19558:	cmp	r3, #0
   1955c:	str	r1, [r2]
   19560:	mov	r2, #0
   19564:	str	r2, [sl, #12]
   19568:	beq	19590 <argp_parse@@Base+0x2868>
   1956c:	ldr	ip, [sp, #16]
   19570:	ldr	r2, [ip, #4]
   19574:	cmp	r2, #0
   19578:	bne	195b8 <argp_parse@@Base+0x2890>
   1957c:	ldr	r0, [sl]
   19580:	ldr	r1, [sl, #8]
   19584:	stm	ip, {r0, r3}
   19588:	str	r1, [ip, #8]
   1958c:	str	r2, [sl, #4]
   19590:	mov	r0, sl
   19594:	bl	17ca4 <argp_parse@@Base+0xf7c>
   19598:	ldr	r3, [sp, #8]
   1959c:	ldr	r0, [r3], #16
   195a0:	cmp	r0, #0
   195a4:	str	r3, [sp, #8]
   195a8:	bne	19498 <argp_parse@@Base+0x2770>
   195ac:	ldr	r0, [sp, #16]
   195b0:	add	sp, sp, #52	; 0x34
   195b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   195b8:	add	r3, r3, r2
   195bc:	str	r3, [sp, #32]
   195c0:	rsb	r0, r3, r3, lsl #3
   195c4:	lsl	r0, r0, #2
   195c8:	bl	18be0 <argp_parse@@Base+0x1eb8>
   195cc:	ldr	r3, [sp, #16]
   195d0:	mov	r4, r0
   195d4:	str	r0, [sp, #24]
   195d8:	ldr	r0, [r3, #8]
   195dc:	bl	119dc <strlen@plt>
   195e0:	mov	r5, r0
   195e4:	ldr	r0, [sl, #8]
   195e8:	bl	119dc <strlen@plt>
   195ec:	add	r0, r5, r0
   195f0:	add	r0, r0, #1
   195f4:	bl	18be0 <argp_parse@@Base+0x1eb8>
   195f8:	cmp	r4, #0
   195fc:	cmpne	r0, #0
   19600:	mov	r7, r0
   19604:	beq	1981c <argp_parse@@Base+0x2af4>
   19608:	ldr	r3, [sp, #32]
   1960c:	ldr	r2, [pc, #748]	; 19900 <argp_parse@@Base+0x2bd8>
   19610:	cmp	r3, r2
   19614:	bhi	19858 <argp_parse@@Base+0x2b30>
   19618:	ldr	r6, [sp, #16]
   1961c:	ldr	r8, [sp, #24]
   19620:	ldm	r6, {r3, r4}
   19624:	mov	r0, r8
   19628:	rsb	r9, r4, r4, lsl #3
   1962c:	mov	r1, r3
   19630:	lsl	r9, r9, #2
   19634:	mov	r2, r9
   19638:	str	r3, [sp, #36]	; 0x24
   1963c:	bl	119a0 <mempcpy@plt>
   19640:	ldr	r3, [sl, #4]
   19644:	ldr	r1, [sl]
   19648:	str	r3, [sp, #4]
   1964c:	rsb	r2, r3, r3, lsl #3
   19650:	lsl	r2, r2, #2
   19654:	bl	11808 <memcpy@plt>
   19658:	ldr	r6, [r6, #8]
   1965c:	mov	r2, r5
   19660:	mov	r1, r6
   19664:	mov	r0, r7
   19668:	bl	11808 <memcpy@plt>
   1966c:	cmp	r4, #0
   19670:	beq	19814 <argp_parse@@Base+0x2aec>
   19674:	mov	r2, r8
   19678:	ldr	r3, [r2, #8]
   1967c:	subs	r4, r4, #1
   19680:	sub	r3, r3, r6
   19684:	add	r3, r7, r3
   19688:	str	r3, [r2, #8]
   1968c:	add	r2, r2, #28
   19690:	bne	19678 <argp_parse@@Base+0x2950>
   19694:	ldr	r3, [sp, #24]
   19698:	add	r1, r3, r9
   1969c:	ldr	r3, [sp, #4]
   196a0:	ldr	r9, [sl, #8]
   196a4:	cmp	r3, #0
   196a8:	add	r3, r7, r5
   196ac:	str	r3, [sp, #12]
   196b0:	beq	1979c <argp_parse@@Base+0x2a74>
   196b4:	add	fp, r1, #28
   196b8:	sub	r8, r3, #1
   196bc:	str	sl, [sp, #40]	; 0x28
   196c0:	mov	r6, r3
   196c4:	mov	sl, r9
   196c8:	mov	r9, fp
   196cc:	mov	fp, r8
   196d0:	ldr	r5, [r9, #-24]	; 0xffffffe8
   196d4:	str	r6, [r9, #-20]	; 0xffffffec
   196d8:	cmp	r5, #0
   196dc:	ldr	r4, [r9, #-28]	; 0xffffffe4
   196e0:	bne	196f4 <argp_parse@@Base+0x29cc>
   196e4:	b	19780 <argp_parse@@Base+0x2a58>
   196e8:	subs	r5, r5, #1
   196ec:	add	r4, r4, #24
   196f0:	beq	19780 <argp_parse@@Base+0x2a58>
   196f4:	ldr	r3, [r4, #12]
   196f8:	tst	r3, #8
   196fc:	bne	196e8 <argp_parse@@Base+0x29c0>
   19700:	ldr	r8, [r4, #4]
   19704:	sub	r3, r8, #1
   19708:	cmp	r3, #254	; 0xfe
   1970c:	bhi	196e8 <argp_parse@@Base+0x29c0>
   19710:	bl	119ac <__ctype_b_loc@plt>
   19714:	lsl	r3, r8, #1
   19718:	ldr	r2, [r0]
   1971c:	ldrh	r3, [r2, r3]
   19720:	tst	r3, #16384	; 0x4000
   19724:	beq	196e8 <argp_parse@@Base+0x29c0>
   19728:	ldrb	r1, [sl]
   1972c:	cmp	r1, r8
   19730:	bne	196e8 <argp_parse@@Base+0x29c0>
   19734:	ldr	r3, [sp, #12]
   19738:	cmp	r7, r3
   1973c:	bcs	19768 <argp_parse@@Base+0x2a40>
   19740:	ldrb	r3, [r7]
   19744:	cmp	r3, r1
   19748:	movne	r3, r7
   1974c:	bne	19760 <argp_parse@@Base+0x2a38>
   19750:	b	19770 <argp_parse@@Base+0x2a48>
   19754:	ldrb	r2, [r3, #1]!
   19758:	cmp	r2, r1
   1975c:	beq	19770 <argp_parse@@Base+0x2a48>
   19760:	cmp	fp, r3
   19764:	bne	19754 <argp_parse@@Base+0x2a2c>
   19768:	strb	r1, [r6]
   1976c:	add	r6, r6, #1
   19770:	subs	r5, r5, #1
   19774:	add	sl, sl, #1
   19778:	add	r4, r4, #24
   1977c:	bne	196f4 <argp_parse@@Base+0x29cc>
   19780:	ldr	r3, [sp, #4]
   19784:	add	r9, r9, #28
   19788:	subs	r3, r3, #1
   1978c:	str	r3, [sp, #4]
   19790:	bne	196d0 <argp_parse@@Base+0x29a8>
   19794:	ldr	sl, [sp, #40]	; 0x28
   19798:	mov	r3, r6
   1979c:	mov	r2, #0
   197a0:	strb	r2, [r3]
   197a4:	ldr	r0, [sp, #36]	; 0x24
   197a8:	bl	17ca4 <argp_parse@@Base+0xf7c>
   197ac:	ldr	r4, [sp, #16]
   197b0:	ldr	r0, [r4, #8]
   197b4:	bl	17ca4 <argp_parse@@Base+0xf7c>
   197b8:	ldr	r2, [sp, #24]
   197bc:	ldr	r0, [sl, #12]
   197c0:	str	r2, [r4]
   197c4:	ldr	r2, [sp, #32]
   197c8:	cmp	r0, #0
   197cc:	stmib	r4, {r2, r7}
   197d0:	beq	197e4 <argp_parse@@Base+0x2abc>
   197d4:	ldr	r4, [r0, #24]
   197d8:	bl	17ca4 <argp_parse@@Base+0xf7c>
   197dc:	subs	r0, r4, #0
   197e0:	bne	197d4 <argp_parse@@Base+0x2aac>
   197e4:	ldr	r3, [sl, #4]
   197e8:	cmp	r3, #0
   197ec:	beq	19590 <argp_parse@@Base+0x2868>
   197f0:	ldr	r0, [sl]
   197f4:	bl	17ca4 <argp_parse@@Base+0xf7c>
   197f8:	ldr	r0, [sl, #8]
   197fc:	bl	17ca4 <argp_parse@@Base+0xf7c>
   19800:	b	19590 <argp_parse@@Base+0x2868>
   19804:	ldr	r1, [sp, #28]
   19808:	b	19520 <argp_parse@@Base+0x27f8>
   1980c:	ldr	r2, [sp, #44]	; 0x2c
   19810:	b	19550 <argp_parse@@Base+0x2828>
   19814:	ldr	r1, [sp, #24]
   19818:	b	1969c <argp_parse@@Base+0x2974>
   1981c:	ldr	r3, [pc, #224]	; 19904 <argp_parse@@Base+0x2bdc>
   19820:	ldr	r2, [pc, #224]	; 19908 <argp_parse@@Base+0x2be0>
   19824:	ldr	r1, [pc, #224]	; 1990c <argp_parse@@Base+0x2be4>
   19828:	ldr	r0, [pc, #224]	; 19910 <argp_parse@@Base+0x2be8>
   1982c:	bl	11c28 <__assert_fail@plt>
   19830:	ldr	r3, [pc, #220]	; 19914 <argp_parse@@Base+0x2bec>
   19834:	ldr	r2, [pc, #220]	; 19918 <argp_parse@@Base+0x2bf0>
   19838:	ldr	r1, [pc, #204]	; 1990c <argp_parse@@Base+0x2be4>
   1983c:	ldr	r0, [pc, #216]	; 1991c <argp_parse@@Base+0x2bf4>
   19840:	bl	11c28 <__assert_fail@plt>
   19844:	ldr	r3, [pc, #200]	; 19914 <argp_parse@@Base+0x2bec>
   19848:	mov	r2, #460	; 0x1cc
   1984c:	ldr	r1, [pc, #184]	; 1990c <argp_parse@@Base+0x2be4>
   19850:	ldr	r0, [pc, #200]	; 19920 <argp_parse@@Base+0x2bf8>
   19854:	bl	11c28 <__assert_fail@plt>
   19858:	ldr	r3, [pc, #164]	; 19904 <argp_parse@@Base+0x2bdc>
   1985c:	mov	r2, #972	; 0x3cc
   19860:	ldr	r1, [pc, #164]	; 1990c <argp_parse@@Base+0x2be4>
   19864:	ldr	r0, [pc, #184]	; 19924 <argp_parse@@Base+0x2bfc>
   19868:	bl	11c28 <__assert_fail@plt>
   1986c:	ldr	r2, [r4, #16]
   19870:	cmp	r2, #0
   19874:	bne	19450 <argp_parse@@Base+0x2728>
   19878:	ldr	r2, [r4, #20]
   1987c:	cmp	r2, #0
   19880:	bne	19450 <argp_parse@@Base+0x2728>
   19884:	add	sl, sl, #28
   19888:	mov	r2, r5
   1988c:	b	19364 <argp_parse@@Base+0x263c>
   19890:	ldr	r0, [r4, #16]
   19894:	cmp	r0, #0
   19898:	beq	198bc <argp_parse@@Base+0x2b94>
   1989c:	str	r3, [sl, #-24]	; 0xffffffe8
   198a0:	ldr	r5, [r4, #20]
   198a4:	str	r4, [sl, #-28]	; 0xffffffe4
   198a8:	cmp	r5, #0
   198ac:	str	fp, [sl, #-20]	; 0xffffffec
   198b0:	bne	193a4 <argp_parse@@Base+0x267c>
   198b4:	add	r5, r2, #1
   198b8:	b	193a4 <argp_parse@@Base+0x267c>
   198bc:	ldr	r5, [r4, #20]
   198c0:	cmp	r5, #0
   198c4:	beq	19464 <argp_parse@@Base+0x273c>
   198c8:	str	r4, [sl, #-28]	; 0xffffffe4
   198cc:	str	r3, [sl, #-24]	; 0xffffffe8
   198d0:	str	fp, [sl, #-20]	; 0xffffffec
   198d4:	b	193a4 <argp_parse@@Base+0x267c>
   198d8:	ldr	r3, [pc, #52]	; 19914 <argp_parse@@Base+0x2bec>
   198dc:	mov	r2, #476	; 0x1dc
   198e0:	ldr	r1, [pc, #36]	; 1990c <argp_parse@@Base+0x2be4>
   198e4:	ldr	r0, [pc, #60]	; 19928 <argp_parse@@Base+0x2c00>
   198e8:	bl	11c28 <__assert_fail@plt>
   198ec:	ldr	r3, [pc, #32]	; 19914 <argp_parse@@Base+0x2bec>
   198f0:	ldr	r2, [pc, #52]	; 1992c <argp_parse@@Base+0x2c04>
   198f4:	ldr	r1, [pc, #16]	; 1990c <argp_parse@@Base+0x2be4>
   198f8:	ldr	r0, [pc, #48]	; 19930 <argp_parse@@Base+0x2c08>
   198fc:	bl	11c28 <__assert_fail@plt>
   19900:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   19904:	ldrdeq	r0, [r2], -ip
   19908:	andeq	r0, r0, sl, asr #7
   1990c:	andeq	r0, r2, r8, ror r4
   19910:	strdeq	r0, [r2], -r8
   19914:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   19918:	andeq	r0, r0, r2, asr #3
   1991c:	andeq	r0, r2, r4, lsl #9
   19920:	andeq	r0, r2, r8, lsl #9
   19924:	andeq	r0, r2, r4, lsl r5
   19928:			; <UNDEFINED> instruction: 0x000204bc
   1992c:	ldrdeq	r0, [r0], -sl
   19930:	muleq	r2, r8, r4
   19934:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19938:	mov	r7, r2
   1993c:	sub	sp, sp, #28
   19940:	mov	r4, r3
   19944:	ldr	r3, [r7]
   19948:	ldr	r2, [r0, #20]
   1994c:	str	r3, [sp, #20]
   19950:	ldr	r3, [r0, #16]
   19954:	cmp	r2, #0
   19958:	str	r3, [sp, #12]
   1995c:	ldr	r3, [r0, #8]
   19960:	mov	r8, r1
   19964:	mov	r9, r3
   19968:	str	r3, [sp, #16]
   1996c:	ldr	r5, [sp, #64]	; 0x40
   19970:	beq	19bc8 <argp_parse@@Base+0x2ea0>
   19974:	mov	r6, r0
   19978:	bl	17b48 <argp_parse@@Base+0xe20>
   1997c:	ldr	r3, [r6, #20]
   19980:	mov	r1, r9
   19984:	mov	r2, r0
   19988:	ldr	r0, [pc, #640]	; 19c10 <argp_parse@@Base+0x2ee8>
   1998c:	blx	r3
   19990:	mov	r3, r0
   19994:	str	r0, [sp, #8]
   19998:	cmp	r3, #0
   1999c:	beq	19b68 <argp_parse@@Base+0x2e40>
   199a0:	mov	r1, #10
   199a4:	mov	r0, r3
   199a8:	bl	117cc <strchrnul@plt>
   199ac:	ldrb	sl, [r0]
   199b0:	mov	r6, r0
   199b4:	cmp	sl, #0
   199b8:	bne	19b00 <argp_parse@@Base+0x2dd8>
   199bc:	ldr	fp, [sp, #8]
   199c0:	ldr	r3, [r5, #28]
   199c4:	ldr	r1, [r5, #24]
   199c8:	ldr	r0, [r5, #16]
   199cc:	sub	r1, r3, r1
   199d0:	cmp	r1, r0
   199d4:	add	r9, r6, #1
   199d8:	mov	r1, r3
   199dc:	sub	r9, r9, fp
   199e0:	bhi	19b98 <argp_parse@@Base+0x2e70>
   199e4:	ldr	r0, [r5, #20]
   199e8:	ldr	ip, [r5, #8]
   199ec:	cmp	r0, #0
   199f0:	addge	r9, r9, r0
   199f4:	cmp	r9, ip
   199f8:	bcc	19b48 <argp_parse@@Base+0x2e20>
   199fc:	ldr	r1, [r5, #32]
   19a00:	cmp	r1, r3
   19a04:	bls	19bd0 <argp_parse@@Base+0x2ea8>
   19a08:	add	r0, r3, #1
   19a0c:	mov	r1, #10
   19a10:	str	r0, [r5, #28]
   19a14:	strb	r1, [r3]
   19a18:	ldr	r0, [r5, #28]
   19a1c:	sub	r9, r6, fp
   19a20:	ldr	r1, [r5, #32]
   19a24:	add	r3, r0, r9
   19a28:	cmp	r1, r3
   19a2c:	bcs	19a48 <argp_parse@@Base+0x2d20>
   19a30:	mov	r1, r9
   19a34:	mov	r0, r5
   19a38:	bl	1ef68 <argp_error@@Base+0x1fbc>
   19a3c:	cmp	r0, #0
   19a40:	beq	19a60 <argp_parse@@Base+0x2d38>
   19a44:	ldr	r0, [r5, #28]
   19a48:	mov	r2, r9
   19a4c:	mov	r1, fp
   19a50:	bl	11808 <memcpy@plt>
   19a54:	ldr	r3, [r5, #28]
   19a58:	add	r9, r3, r9
   19a5c:	str	r9, [r5, #28]
   19a60:	ldr	r3, [sp, #16]
   19a64:	ldr	r2, [sp, #8]
   19a68:	cmp	r3, r2
   19a6c:	beq	19a78 <argp_parse@@Base+0x2d50>
   19a70:	mov	r0, r2
   19a74:	bl	17ca4 <argp_parse@@Base+0xf7c>
   19a78:	ldr	r3, [sp, #12]
   19a7c:	cmp	r3, #0
   19a80:	beq	19ac4 <argp_parse@@Base+0x2d9c>
   19a84:	ldr	r2, [r3]
   19a88:	cmp	r2, #0
   19a8c:	beq	19ac4 <argp_parse@@Base+0x2d9c>
   19a90:	ldr	r9, [sp, #12]
   19a94:	mov	r3, r4
   19a98:	mov	r0, r2
   19a9c:	str	r5, [sp]
   19aa0:	mov	r2, r7
   19aa4:	mov	r1, r8
   19aa8:	bl	19934 <argp_parse@@Base+0x2c0c>
   19aac:	ldr	r2, [r9, #16]!
   19ab0:	cmp	r2, #0
   19ab4:	clz	r3, r0
   19ab8:	lsr	r3, r3, #5
   19abc:	bne	19a98 <argp_parse@@Base+0x2d70>
   19ac0:	mov	r4, r3
   19ac4:	cmp	r4, #0
   19ac8:	moveq	sl, #0
   19acc:	andne	sl, sl, #1
   19ad0:	cmp	sl, #0
   19ad4:	beq	19b88 <argp_parse@@Base+0x2e60>
   19ad8:	ldrb	r0, [r6]
   19adc:	cmp	r0, #0
   19ae0:	bne	19bac <argp_parse@@Base+0x2e84>
   19ae4:	ldr	r3, [sp, #20]
   19ae8:	ldrb	r4, [r3]
   19aec:	cmp	r4, #0
   19af0:	moveq	r0, r4
   19af4:	strbne	r0, [r3]
   19af8:	add	sp, sp, #28
   19afc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19b00:	ldr	r3, [sp, #20]
   19b04:	ldrb	r9, [r3]
   19b08:	cmp	r9, #0
   19b0c:	beq	19c08 <argp_parse@@Base+0x2ee0>
   19b10:	mov	sl, #0
   19b14:	add	fp, r0, #1
   19b18:	add	sl, sl, #1
   19b1c:	mov	r0, fp
   19b20:	mov	r1, #10
   19b24:	bl	117cc <strchrnul@plt>
   19b28:	cmp	sl, r9
   19b2c:	bne	19b14 <argp_parse@@Base+0x2dec>
   19b30:	mov	r6, r0
   19b34:	ldr	r3, [r7]
   19b38:	mov	sl, #1
   19b3c:	add	r3, r3, sl
   19b40:	str	r3, [r7]
   19b44:	b	199c0 <argp_parse@@Base+0x2c98>
   19b48:	ldr	r0, [r5, #32]
   19b4c:	cmp	r0, r3
   19b50:	bls	19bec <argp_parse@@Base+0x2ec4>
   19b54:	add	r0, r1, #1
   19b58:	mov	r3, #32
   19b5c:	str	r0, [r5, #28]
   19b60:	strb	r3, [r1]
   19b64:	b	19a18 <argp_parse@@Base+0x2cf0>
   19b68:	ldr	r3, [sp, #12]
   19b6c:	cmp	r3, #0
   19b70:	beq	19b88 <argp_parse@@Base+0x2e60>
   19b74:	ldr	r2, [r3]
   19b78:	cmp	r2, #0
   19b7c:	ldrne	r6, [sp, #8]
   19b80:	movne	sl, r6
   19b84:	bne	19a90 <argp_parse@@Base+0x2d68>
   19b88:	clz	r0, r4
   19b8c:	lsr	r0, r0, #5
   19b90:	add	sp, sp, #28
   19b94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19b98:	mov	r0, r5
   19b9c:	bl	1e9bc <argp_error@@Base+0x1a10>
   19ba0:	ldr	r3, [r5, #28]
   19ba4:	mov	r1, r3
   19ba8:	b	199e4 <argp_parse@@Base+0x2cbc>
   19bac:	ldr	r2, [sp, #20]
   19bb0:	mov	r0, #1
   19bb4:	ldrb	r3, [r2]
   19bb8:	add	r3, r3, r0
   19bbc:	strb	r3, [r2]
   19bc0:	add	sp, sp, #28
   19bc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19bc8:	str	r3, [sp, #8]
   19bcc:	b	19998 <argp_parse@@Base+0x2c70>
   19bd0:	mov	r1, #1
   19bd4:	mov	r0, r5
   19bd8:	bl	1ef68 <argp_error@@Base+0x1fbc>
   19bdc:	cmp	r0, #0
   19be0:	beq	19a18 <argp_parse@@Base+0x2cf0>
   19be4:	ldr	r3, [r5, #28]
   19be8:	b	19a08 <argp_parse@@Base+0x2ce0>
   19bec:	mov	r1, #1
   19bf0:	mov	r0, r5
   19bf4:	bl	1ef68 <argp_error@@Base+0x1fbc>
   19bf8:	cmp	r0, #0
   19bfc:	beq	19a18 <argp_parse@@Base+0x2cf0>
   19c00:	ldr	r1, [r5, #28]
   19c04:	b	19b54 <argp_parse@@Base+0x2e2c>
   19c08:	ldr	fp, [sp, #8]
   19c0c:	b	19b34 <argp_parse@@Base+0x2e0c>
   19c10:	andeq	r0, r0, #6
   19c14:	subs	r3, r0, #0
   19c18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19c1c:	moveq	r0, r3
   19c20:	sub	sp, sp, #52	; 0x34
   19c24:	mov	r4, r1
   19c28:	beq	19c3c <argp_parse@@Base+0x2f14>
   19c2c:	mov	r1, #10
   19c30:	bl	119f4 <strchr@plt>
   19c34:	adds	r0, r0, #0
   19c38:	movne	r0, #1
   19c3c:	cmp	r4, #0
   19c40:	str	r0, [sp, #20]
   19c44:	beq	19f54 <argp_parse@@Base+0x322c>
   19c48:	ldr	r3, [r4]
   19c4c:	cmp	r3, #0
   19c50:	beq	19f54 <argp_parse@@Base+0x322c>
   19c54:	mov	r9, #0
   19c58:	mov	r8, #10
   19c5c:	str	r4, [sp, #24]
   19c60:	ldr	r0, [r3, #8]
   19c64:	ldr	r4, [r3, #16]
   19c68:	cmp	r0, #0
   19c6c:	moveq	r0, r9
   19c70:	beq	19c84 <argp_parse@@Base+0x2f5c>
   19c74:	mov	r1, r8
   19c78:	bl	119f4 <strchr@plt>
   19c7c:	adds	r0, r0, #0
   19c80:	movne	r0, #1
   19c84:	cmp	r4, #0
   19c88:	str	r0, [sp]
   19c8c:	beq	19f30 <argp_parse@@Base+0x3208>
   19c90:	ldr	r3, [r4]
   19c94:	cmp	r3, #0
   19c98:	beq	19f30 <argp_parse@@Base+0x3208>
   19c9c:	str	r4, [sp, #28]
   19ca0:	ldr	r0, [r3, #8]
   19ca4:	ldr	r4, [r3, #16]
   19ca8:	cmp	r0, #0
   19cac:	moveq	r0, r9
   19cb0:	beq	19cc4 <argp_parse@@Base+0x2f9c>
   19cb4:	mov	r1, r8
   19cb8:	bl	119f4 <strchr@plt>
   19cbc:	adds	r0, r0, #0
   19cc0:	movne	r0, #1
   19cc4:	cmp	r4, #0
   19cc8:	str	r0, [sp, #4]
   19ccc:	beq	19f10 <argp_parse@@Base+0x31e8>
   19cd0:	ldr	r3, [r4]
   19cd4:	cmp	r3, #0
   19cd8:	beq	19f10 <argp_parse@@Base+0x31e8>
   19cdc:	str	r4, [sp, #32]
   19ce0:	ldr	r0, [r3, #8]
   19ce4:	ldr	r4, [r3, #16]
   19ce8:	cmp	r0, #0
   19cec:	moveq	r0, r9
   19cf0:	beq	19d04 <argp_parse@@Base+0x2fdc>
   19cf4:	mov	r1, r8
   19cf8:	bl	119f4 <strchr@plt>
   19cfc:	adds	r0, r0, #0
   19d00:	movne	r0, #1
   19d04:	cmp	r4, #0
   19d08:	str	r0, [sp, #8]
   19d0c:	beq	19ef0 <argp_parse@@Base+0x31c8>
   19d10:	ldr	r3, [r4]
   19d14:	cmp	r3, #0
   19d18:	beq	19ef0 <argp_parse@@Base+0x31c8>
   19d1c:	str	r4, [sp, #36]	; 0x24
   19d20:	ldr	r0, [r3, #8]
   19d24:	ldr	r4, [r3, #16]
   19d28:	cmp	r0, #0
   19d2c:	moveq	r0, r9
   19d30:	beq	19d44 <argp_parse@@Base+0x301c>
   19d34:	mov	r1, r8
   19d38:	bl	119f4 <strchr@plt>
   19d3c:	adds	r0, r0, #0
   19d40:	movne	r0, #1
   19d44:	cmp	r4, #0
   19d48:	str	r0, [sp, #12]
   19d4c:	beq	19ecc <argp_parse@@Base+0x31a4>
   19d50:	ldr	r3, [r4]
   19d54:	cmp	r3, #0
   19d58:	beq	19ecc <argp_parse@@Base+0x31a4>
   19d5c:	str	r4, [sp, #40]	; 0x28
   19d60:	ldr	r0, [r3, #8]
   19d64:	ldr	fp, [r3, #16]
   19d68:	cmp	r0, #0
   19d6c:	moveq	r0, r9
   19d70:	beq	19d84 <argp_parse@@Base+0x305c>
   19d74:	mov	r1, r8
   19d78:	bl	119f4 <strchr@plt>
   19d7c:	adds	r0, r0, #0
   19d80:	movne	r0, #1
   19d84:	cmp	fp, #0
   19d88:	str	r0, [sp, #16]
   19d8c:	beq	19ea8 <argp_parse@@Base+0x3180>
   19d90:	ldr	r3, [fp]
   19d94:	cmp	r3, #0
   19d98:	beq	19ea8 <argp_parse@@Base+0x3180>
   19d9c:	str	fp, [sp, #44]	; 0x2c
   19da0:	ldr	r0, [r3, #8]
   19da4:	ldr	r7, [r3, #16]
   19da8:	cmp	r0, #0
   19dac:	moveq	r0, r9
   19db0:	beq	19dc4 <argp_parse@@Base+0x309c>
   19db4:	mov	r1, r8
   19db8:	bl	119f4 <strchr@plt>
   19dbc:	adds	r0, r0, #0
   19dc0:	movne	r0, #1
   19dc4:	cmp	r7, #0
   19dc8:	mov	r6, r0
   19dcc:	beq	19e88 <argp_parse@@Base+0x3160>
   19dd0:	ldr	r3, [r7]
   19dd4:	cmp	r3, #0
   19dd8:	beq	19e88 <argp_parse@@Base+0x3160>
   19ddc:	ldr	r0, [r3, #8]
   19de0:	ldr	r5, [r3, #16]
   19de4:	cmp	r0, #0
   19de8:	moveq	sl, r9
   19dec:	beq	19e00 <argp_parse@@Base+0x30d8>
   19df0:	mov	r1, r8
   19df4:	bl	119f4 <strchr@plt>
   19df8:	adds	sl, r0, #0
   19dfc:	movne	sl, #1
   19e00:	cmp	r5, #0
   19e04:	beq	19e78 <argp_parse@@Base+0x3150>
   19e08:	ldr	r3, [r5]
   19e0c:	cmp	r3, #0
   19e10:	beq	19e78 <argp_parse@@Base+0x3150>
   19e14:	ldr	r0, [r3, #8]
   19e18:	ldr	r4, [r3, #16]
   19e1c:	cmp	r0, #0
   19e20:	moveq	fp, r9
   19e24:	beq	19e38 <argp_parse@@Base+0x3110>
   19e28:	mov	r1, r8
   19e2c:	bl	119f4 <strchr@plt>
   19e30:	adds	fp, r0, #0
   19e34:	movne	fp, #1
   19e38:	cmp	r4, #0
   19e3c:	beq	19e68 <argp_parse@@Base+0x3140>
   19e40:	ldr	r3, [r4]
   19e44:	cmp	r3, #0
   19e48:	beq	19e68 <argp_parse@@Base+0x3140>
   19e4c:	ldr	r1, [r3, #16]
   19e50:	ldr	r0, [r3, #8]
   19e54:	bl	19c14 <argp_parse@@Base+0x2eec>
   19e58:	ldr	r3, [r4, #16]!
   19e5c:	cmp	r3, #0
   19e60:	add	fp, fp, r0
   19e64:	bne	19e4c <argp_parse@@Base+0x3124>
   19e68:	ldr	r3, [r5, #16]!
   19e6c:	add	sl, sl, fp
   19e70:	cmp	r3, #0
   19e74:	bne	19e14 <argp_parse@@Base+0x30ec>
   19e78:	ldr	r3, [r7, #16]!
   19e7c:	add	r6, r6, sl
   19e80:	cmp	r3, #0
   19e84:	bne	19ddc <argp_parse@@Base+0x30b4>
   19e88:	ldr	r2, [sp, #44]	; 0x2c
   19e8c:	ldr	r3, [r2, #16]!
   19e90:	str	r2, [sp, #44]	; 0x2c
   19e94:	ldr	r2, [sp, #16]
   19e98:	cmp	r3, #0
   19e9c:	add	r2, r2, r6
   19ea0:	str	r2, [sp, #16]
   19ea4:	bne	19da0 <argp_parse@@Base+0x3078>
   19ea8:	ldr	r2, [sp, #40]	; 0x28
   19eac:	ldr	r1, [sp, #16]
   19eb0:	ldr	r3, [r2, #16]!
   19eb4:	str	r2, [sp, #40]	; 0x28
   19eb8:	ldr	r2, [sp, #12]
   19ebc:	cmp	r3, #0
   19ec0:	add	r2, r2, r1
   19ec4:	str	r2, [sp, #12]
   19ec8:	bne	19d60 <argp_parse@@Base+0x3038>
   19ecc:	ldr	r2, [sp, #36]	; 0x24
   19ed0:	ldr	r1, [sp, #12]
   19ed4:	ldr	r3, [r2, #16]!
   19ed8:	str	r2, [sp, #36]	; 0x24
   19edc:	ldr	r2, [sp, #8]
   19ee0:	cmp	r3, #0
   19ee4:	add	r2, r2, r1
   19ee8:	str	r2, [sp, #8]
   19eec:	bne	19d20 <argp_parse@@Base+0x2ff8>
   19ef0:	ldr	r2, [sp, #32]
   19ef4:	ldr	r3, [r2, #16]!
   19ef8:	str	r2, [sp, #32]
   19efc:	ldmib	sp, {r1, r2}
   19f00:	cmp	r3, #0
   19f04:	add	r2, r2, r1
   19f08:	str	r2, [sp, #4]
   19f0c:	bne	19ce0 <argp_parse@@Base+0x2fb8>
   19f10:	ldr	r2, [sp, #28]
   19f14:	ldr	r3, [r2, #16]!
   19f18:	str	r2, [sp, #28]
   19f1c:	ldm	sp, {r1, r2}
   19f20:	cmp	r3, #0
   19f24:	add	r2, r2, r1
   19f28:	str	r2, [sp]
   19f2c:	bne	19ca0 <argp_parse@@Base+0x2f78>
   19f30:	ldr	r2, [sp, #24]
   19f34:	ldr	r1, [sp]
   19f38:	ldr	r3, [r2, #16]!
   19f3c:	str	r2, [sp, #24]
   19f40:	ldr	r2, [sp, #20]
   19f44:	cmp	r3, #0
   19f48:	add	r2, r2, r1
   19f4c:	str	r2, [sp, #20]
   19f50:	bne	19c60 <argp_parse@@Base+0x2f38>
   19f54:	ldr	r0, [sp, #20]
   19f58:	add	sp, sp, #52	; 0x34
   19f5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19f60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19f64:	add	fp, sp, #32
   19f68:	sub	sp, sp, #36	; 0x24
   19f6c:	ldr	r3, [r0, #4]
   19f70:	cmp	r3, #0
   19f74:	str	r3, [fp, #-40]	; 0xffffffd8
   19f78:	bne	19f84 <argp_parse@@Base+0x325c>
   19f7c:	sub	sp, fp, #32
   19f80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19f84:	mov	r4, r0
   19f88:	str	r0, [fp, #-60]	; 0xffffffc4
   19f8c:	ldr	r0, [r0, #8]
   19f90:	str	r1, [fp, #-44]	; 0xffffffd4
   19f94:	bl	119dc <strlen@plt>
   19f98:	ldr	r3, [r4]
   19f9c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19fa0:	add	r3, r3, #28
   19fa4:	mov	r9, r3
   19fa8:	str	r3, [fp, #-64]	; 0xffffffc0
   19fac:	mov	sl, r9
   19fb0:	str	r2, [fp, #-48]	; 0xffffffd0
   19fb4:	add	r3, r0, #15
   19fb8:	bic	r3, r3, #7
   19fbc:	sub	sp, sp, r3
   19fc0:	str	sp, [fp, #-56]	; 0xffffffc8
   19fc4:	str	sp, [fp, #-52]	; 0xffffffcc
   19fc8:	ldr	r5, [sl, #-24]	; 0xffffffe8
   19fcc:	ldr	r4, [sl, #-28]	; 0xffffffe4
   19fd0:	cmp	r5, #0
   19fd4:	ldr	r9, [sl, #-20]	; 0xffffffec
   19fd8:	beq	1a050 <argp_parse@@Base+0x3328>
   19fdc:	mov	r8, r4
   19fe0:	b	19ff0 <argp_parse@@Base+0x32c8>
   19fe4:	subs	r5, r5, #1
   19fe8:	add	r4, r4, #24
   19fec:	beq	1a050 <argp_parse@@Base+0x3328>
   19ff0:	ldr	r6, [r4, #12]
   19ff4:	tst	r6, #8
   19ff8:	bne	19fe4 <argp_parse@@Base+0x32bc>
   19ffc:	ldr	r7, [r4, #4]
   1a000:	sub	r3, r7, #1
   1a004:	cmp	r3, #254	; 0xfe
   1a008:	bhi	19fe4 <argp_parse@@Base+0x32bc>
   1a00c:	bl	119ac <__ctype_b_loc@plt>
   1a010:	lsl	r3, r7, #1
   1a014:	ldr	r2, [r0]
   1a018:	ldrh	r3, [r2, r3]
   1a01c:	tst	r3, #16384	; 0x4000
   1a020:	beq	19fe4 <argp_parse@@Base+0x32bc>
   1a024:	ldrb	r3, [r9]
   1a028:	cmp	r7, r3
   1a02c:	bne	19fe4 <argp_parse@@Base+0x32bc>
   1a030:	tst	r6, #4
   1a034:	moveq	r8, r4
   1a038:	tst	r6, #2
   1a03c:	beq	1a1c4 <argp_parse@@Base+0x349c>
   1a040:	subs	r5, r5, #1
   1a044:	add	r9, r9, #1
   1a048:	add	r4, r4, #24
   1a04c:	bne	19ff0 <argp_parse@@Base+0x32c8>
   1a050:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1a054:	add	sl, sl, #28
   1a058:	subs	r3, r3, #1
   1a05c:	str	r3, [fp, #-48]	; 0xffffffd0
   1a060:	bne	19fc8 <argp_parse@@Base+0x32a0>
   1a064:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1a068:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1a06c:	cmp	r3, r2
   1a070:	bcc	1a378 <argp_parse@@Base+0x3650>
   1a074:	ldr	r7, [fp, #-64]	; 0xffffffc0
   1a078:	ldr	r5, [r7, #-24]	; 0xffffffe8
   1a07c:	ldr	r4, [r7, #-28]	; 0xffffffe4
   1a080:	cmp	r5, #0
   1a084:	ldr	r6, [r7, #-20]	; 0xffffffec
   1a088:	movne	r8, r4
   1a08c:	bne	1a0a0 <argp_parse@@Base+0x3378>
   1a090:	b	1a100 <argp_parse@@Base+0x33d8>
   1a094:	subs	r5, r5, #1
   1a098:	add	r4, r4, #24
   1a09c:	beq	1a100 <argp_parse@@Base+0x33d8>
   1a0a0:	ldr	r9, [r4, #12]
   1a0a4:	tst	r9, #8
   1a0a8:	bne	1a094 <argp_parse@@Base+0x336c>
   1a0ac:	ldr	sl, [r4, #4]
   1a0b0:	sub	r3, sl, #1
   1a0b4:	cmp	r3, #254	; 0xfe
   1a0b8:	bhi	1a094 <argp_parse@@Base+0x336c>
   1a0bc:	bl	119ac <__ctype_b_loc@plt>
   1a0c0:	lsl	r3, sl, #1
   1a0c4:	ldr	r1, [r0]
   1a0c8:	ldrh	r3, [r1, r3]
   1a0cc:	tst	r3, #16384	; 0x4000
   1a0d0:	beq	1a094 <argp_parse@@Base+0x336c>
   1a0d4:	ldrb	r3, [r6]
   1a0d8:	cmp	sl, r3
   1a0dc:	bne	1a094 <argp_parse@@Base+0x336c>
   1a0e0:	tst	r9, #4
   1a0e4:	moveq	r8, r4
   1a0e8:	tst	r9, #2
   1a0ec:	beq	1a1fc <argp_parse@@Base+0x34d4>
   1a0f0:	subs	r5, r5, #1
   1a0f4:	add	r6, r6, #1
   1a0f8:	add	r4, r4, #24
   1a0fc:	bne	1a0a0 <argp_parse@@Base+0x3378>
   1a100:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a104:	add	r7, r7, #28
   1a108:	subs	r3, r3, #1
   1a10c:	str	r3, [fp, #-40]	; 0xffffffd8
   1a110:	bne	1a078 <argp_parse@@Base+0x3350>
   1a114:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a118:	ldm	r3, {r7, r8}
   1a11c:	cmp	r8, #0
   1a120:	beq	19f7c <argp_parse@@Base+0x3254>
   1a124:	ldr	sl, [pc, #652]	; 1a3b8 <argp_parse@@Base+0x3690>
   1a128:	ldr	r9, [pc, #652]	; 1a3bc <argp_parse@@Base+0x3694>
   1a12c:	add	r7, r7, #28
   1a130:	ldr	r5, [r7, #-24]	; 0xffffffe8
   1a134:	ldr	r4, [r7, #-28]	; 0xffffffe4
   1a138:	cmp	r5, #0
   1a13c:	movne	r6, r4
   1a140:	bne	1a154 <argp_parse@@Base+0x342c>
   1a144:	b	1a1b0 <argp_parse@@Base+0x3488>
   1a148:	subs	r5, r5, #1
   1a14c:	add	r4, r4, #24
   1a150:	beq	1a1b0 <argp_parse@@Base+0x3488>
   1a154:	ldr	r2, [r4]
   1a158:	cmp	r2, #0
   1a15c:	beq	1a148 <argp_parse@@Base+0x3420>
   1a160:	ldr	r1, [r4, #12]
   1a164:	tst	r1, #4
   1a168:	moveq	r6, r4
   1a16c:	tst	r1, #2
   1a170:	bne	1a148 <argp_parse@@Base+0x3420>
   1a174:	ldr	r3, [r4, #8]
   1a178:	ldr	r0, [r6, #12]
   1a17c:	cmp	r3, #0
   1a180:	orr	r1, r1, r0
   1a184:	beq	1a2a8 <argp_parse@@Base+0x3580>
   1a188:	tst	r1, #16
   1a18c:	bne	1a148 <argp_parse@@Base+0x3420>
   1a190:	tst	r1, #1
   1a194:	movne	r1, r9
   1a198:	moveq	r1, sl
   1a19c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a1a0:	bl	1f068 <argp_error@@Base+0x20bc>
   1a1a4:	subs	r5, r5, #1
   1a1a8:	add	r4, r4, #24
   1a1ac:	bne	1a154 <argp_parse@@Base+0x342c>
   1a1b0:	subs	r8, r8, #1
   1a1b4:	add	r7, r7, #28
   1a1b8:	bne	1a130 <argp_parse@@Base+0x3408>
   1a1bc:	sub	sp, fp, #32
   1a1c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a1c4:	ldr	r3, [r4, #8]
   1a1c8:	cmp	r3, #0
   1a1cc:	bne	1a040 <argp_parse@@Base+0x3318>
   1a1d0:	ldr	r3, [r8, #8]
   1a1d4:	cmp	r3, #0
   1a1d8:	bne	1a040 <argp_parse@@Base+0x3318>
   1a1dc:	ldr	r3, [r8, #12]
   1a1e0:	orr	r6, r6, r3
   1a1e4:	tst	r6, #16
   1a1e8:	ldreq	r3, [fp, #-52]	; 0xffffffcc
   1a1ec:	strbeq	r7, [r3]
   1a1f0:	addeq	r3, r3, #1
   1a1f4:	streq	r3, [fp, #-52]	; 0xffffffcc
   1a1f8:	b	1a040 <argp_parse@@Base+0x3318>
   1a1fc:	ldr	r3, [r4, #8]
   1a200:	ldr	r1, [r8, #12]
   1a204:	cmp	r3, #0
   1a208:	orr	r9, r9, r1
   1a20c:	beq	1a304 <argp_parse@@Base+0x35dc>
   1a210:	tst	r9, #16
   1a214:	bne	1a0f0 <argp_parse@@Base+0x33c8>
   1a218:	tst	r9, #1
   1a21c:	bne	1a2cc <argp_parse@@Base+0x35a4>
   1a220:	mov	r0, r3
   1a224:	str	r3, [fp, #-48]	; 0xffffffd0
   1a228:	bl	119dc <strlen@plt>
   1a22c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a230:	ldr	r1, [r3, #28]
   1a234:	ldr	r2, [r3, #24]
   1a238:	sub	r2, r1, r2
   1a23c:	mov	r9, r0
   1a240:	ldr	r0, [r3, #16]
   1a244:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1a248:	cmp	r2, r0
   1a24c:	bhi	1a360 <argp_parse@@Base+0x3638>
   1a250:	ldr	ip, [fp, #-44]	; 0xffffffd4
   1a254:	ldr	r2, [ip, #20]
   1a258:	ldr	r0, [ip, #8]
   1a25c:	bic	r2, r2, r2, asr #31
   1a260:	add	r2, r2, #6
   1a264:	add	r2, r2, r9
   1a268:	cmp	r2, r0
   1a26c:	bcc	1a2e0 <argp_parse@@Base+0x35b8>
   1a270:	ldr	r2, [ip, #32]
   1a274:	mov	r0, ip
   1a278:	cmp	r2, r1
   1a27c:	bls	1a314 <argp_parse@@Base+0x35ec>
   1a280:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a284:	add	r2, r1, #1
   1a288:	str	r2, [r0, #28]
   1a28c:	mov	r2, #10
   1a290:	strb	r2, [r1]
   1a294:	ldr	r2, [r4, #4]
   1a298:	ldr	r1, [pc, #288]	; 1a3c0 <argp_parse@@Base+0x3698>
   1a29c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a2a0:	bl	1f068 <argp_error@@Base+0x20bc>
   1a2a4:	b	1a0f0 <argp_parse@@Base+0x33c8>
   1a2a8:	tst	r1, #16
   1a2ac:	bne	1a148 <argp_parse@@Base+0x3420>
   1a2b0:	ldr	r3, [r6, #8]
   1a2b4:	cmp	r3, #0
   1a2b8:	bne	1a190 <argp_parse@@Base+0x3468>
   1a2bc:	ldr	r1, [pc, #256]	; 1a3c4 <argp_parse@@Base+0x369c>
   1a2c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a2c4:	bl	1f068 <argp_error@@Base+0x20bc>
   1a2c8:	b	1a148 <argp_parse@@Base+0x3420>
   1a2cc:	mov	r2, sl
   1a2d0:	ldr	r1, [pc, #240]	; 1a3c8 <argp_parse@@Base+0x36a0>
   1a2d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a2d8:	bl	1f068 <argp_error@@Base+0x20bc>
   1a2dc:	b	1a0f0 <argp_parse@@Base+0x33c8>
   1a2e0:	ldr	r2, [ip, #32]
   1a2e4:	cmp	r2, r1
   1a2e8:	bls	1a338 <argp_parse@@Base+0x3610>
   1a2ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a2f0:	add	r2, r1, #1
   1a2f4:	str	r2, [r0, #28]
   1a2f8:	mov	r2, #32
   1a2fc:	strb	r2, [r1]
   1a300:	b	1a294 <argp_parse@@Base+0x356c>
   1a304:	ldr	r3, [r8, #8]
   1a308:	cmp	r3, #0
   1a30c:	beq	1a0f0 <argp_parse@@Base+0x33c8>
   1a310:	b	1a210 <argp_parse@@Base+0x34e8>
   1a314:	mov	r1, #1
   1a318:	str	r3, [fp, #-48]	; 0xffffffd0
   1a31c:	mov	r9, ip
   1a320:	bl	1ef68 <argp_error@@Base+0x1fbc>
   1a324:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1a328:	cmp	r0, #0
   1a32c:	beq	1a294 <argp_parse@@Base+0x356c>
   1a330:	ldr	r1, [r9, #28]
   1a334:	b	1a280 <argp_parse@@Base+0x3558>
   1a338:	ldr	r9, [fp, #-44]	; 0xffffffd4
   1a33c:	mov	r1, #1
   1a340:	mov	r0, r9
   1a344:	str	r3, [fp, #-48]	; 0xffffffd0
   1a348:	bl	1ef68 <argp_error@@Base+0x1fbc>
   1a34c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1a350:	cmp	r0, #0
   1a354:	beq	1a294 <argp_parse@@Base+0x356c>
   1a358:	ldr	r1, [r9, #28]
   1a35c:	b	1a2ec <argp_parse@@Base+0x35c4>
   1a360:	ldr	sl, [fp, #-44]	; 0xffffffd4
   1a364:	mov	r0, sl
   1a368:	bl	1e9bc <argp_error@@Base+0x1a10>
   1a36c:	ldr	r1, [sl, #28]
   1a370:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1a374:	b	1a250 <argp_parse@@Base+0x3528>
   1a378:	mov	r2, r3
   1a37c:	ldrb	ip, [fp, #-48]	; 0xffffffd0
   1a380:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1a384:	ldr	r1, [pc, #64]	; 1a3cc <argp_parse@@Base+0x36a4>
   1a388:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a38c:	strb	ip, [r3]
   1a390:	bl	1f068 <argp_error@@Base+0x20bc>
   1a394:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1a398:	ldr	r3, [r2, #4]
   1a39c:	cmp	r3, #0
   1a3a0:	str	r3, [fp, #-40]	; 0xffffffd8
   1a3a4:	beq	19f7c <argp_parse@@Base+0x3254>
   1a3a8:	ldr	r3, [r2]
   1a3ac:	add	r3, r3, #28
   1a3b0:	str	r3, [fp, #-64]	; 0xffffffc0
   1a3b4:	b	1a074 <argp_parse@@Base+0x334c>
   1a3b8:	andeq	r0, r2, r8, ror r5
   1a3bc:	andeq	r0, r2, r8, ror #10
   1a3c0:	andeq	r0, r2, ip, asr r5
   1a3c4:	andeq	r0, r2, r4, lsl #11
   1a3c8:	andeq	r0, r2, r0, asr r5
   1a3cc:	andeq	r0, r2, r8, asr #10
   1a3d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a3d4:	subs	r4, r1, #0
   1a3d8:	sub	sp, sp, #12
   1a3dc:	mov	r8, r0
   1a3e0:	mov	r7, r2
   1a3e4:	beq	1a5b8 <argp_parse@@Base+0x3890>
   1a3e8:	ldr	r3, [r4, #20]
   1a3ec:	cmp	r3, #0
   1a3f0:	beq	1a5b8 <argp_parse@@Base+0x3890>
   1a3f4:	ldr	r1, [r2, #16]
   1a3f8:	mov	r0, r4
   1a3fc:	bl	17b48 <argp_parse@@Base+0xe20>
   1a400:	ldr	r3, [r4, #20]
   1a404:	mov	r1, r8
   1a408:	mov	r2, r0
   1a40c:	ldr	r0, [pc, #628]	; 1a688 <argp_parse@@Base+0x3960>
   1a410:	blx	r3
   1a414:	mov	r6, r0
   1a418:	cmp	r6, #0
   1a41c:	beq	1a584 <argp_parse@@Base+0x385c>
   1a420:	ldrb	r3, [r6]
   1a424:	cmp	r3, #0
   1a428:	beq	1a578 <argp_parse@@Base+0x3850>
   1a42c:	ldr	r3, [r7, #8]
   1a430:	ldr	r3, [r3]
   1a434:	cmp	r3, #0
   1a438:	beq	1a460 <argp_parse@@Base+0x3738>
   1a43c:	ldr	r4, [r7, #4]
   1a440:	ldr	r3, [r4, #28]
   1a444:	ldr	r2, [r4, #32]
   1a448:	cmp	r3, r2
   1a44c:	bcs	1a66c <argp_parse@@Base+0x3944>
   1a450:	add	r1, r3, #1
   1a454:	mov	r2, #10
   1a458:	str	r1, [r4, #28]
   1a45c:	strb	r2, [r3]
   1a460:	ldr	r4, [r7, #4]
   1a464:	ldr	sl, [pc, #544]	; 1a68c <argp_parse@@Base+0x3964>
   1a468:	ldr	r3, [r4, #28]
   1a46c:	ldr	r1, [r4, #24]
   1a470:	ldr	r2, [r4, #16]
   1a474:	sub	r3, r3, r1
   1a478:	cmp	r3, r2
   1a47c:	ldr	r5, [sl, #24]
   1a480:	bhi	1a644 <argp_parse@@Base+0x391c>
   1a484:	ldr	r3, [r4, #20]
   1a488:	mov	fp, #32
   1a48c:	cmp	r3, #0
   1a490:	subge	r5, r5, r3
   1a494:	mov	r9, #1
   1a498:	cmp	r5, #0
   1a49c:	sub	r5, r5, #1
   1a4a0:	ble	1a4cc <argp_parse@@Base+0x37a4>
   1a4a4:	ldr	r3, [r4, #28]
   1a4a8:	ldr	r2, [r4, #32]
   1a4ac:	cmp	r3, r2
   1a4b0:	bcs	1a59c <argp_parse@@Base+0x3874>
   1a4b4:	add	r2, r3, #1
   1a4b8:	cmp	r5, #0
   1a4bc:	str	r2, [r4, #28]
   1a4c0:	sub	r5, r5, #1
   1a4c4:	strb	fp, [r3]
   1a4c8:	bgt	1a4a4 <argp_parse@@Base+0x377c>
   1a4cc:	ldr	r4, [r7, #4]
   1a4d0:	ldr	r9, [sl, #24]
   1a4d4:	ldr	r5, [r4, #28]
   1a4d8:	ldr	r3, [r4, #24]
   1a4dc:	ldr	r2, [r4, #16]
   1a4e0:	sub	r3, r5, r3
   1a4e4:	cmp	r3, r2
   1a4e8:	strls	r9, [r4, #4]
   1a4ec:	movls	fp, r4
   1a4f0:	bhi	1a5f8 <argp_parse@@Base+0x38d0>
   1a4f4:	str	r9, [fp, #12]
   1a4f8:	mov	r0, r6
   1a4fc:	bl	119dc <strlen@plt>
   1a500:	subs	r9, r0, #0
   1a504:	beq	1a53c <argp_parse@@Base+0x3814>
   1a508:	ldr	r2, [r4, #32]
   1a50c:	add	r3, r5, r9
   1a510:	cmp	r2, r3
   1a514:	bcc	1a5c8 <argp_parse@@Base+0x38a0>
   1a518:	mov	r2, r9
   1a51c:	mov	r0, r5
   1a520:	mov	r1, r6
   1a524:	bl	11808 <memcpy@plt>
   1a528:	ldr	r3, [r4, #28]
   1a52c:	add	r9, r3, r9
   1a530:	str	r9, [r4, #28]
   1a534:	ldr	r4, [r7, #4]
   1a538:	ldr	r5, [r4, #28]
   1a53c:	ldr	r3, [r4, #24]
   1a540:	ldr	r2, [r4, #16]
   1a544:	sub	r3, r5, r3
   1a548:	cmp	r3, r2
   1a54c:	movls	r9, r4
   1a550:	bhi	1a5e4 <argp_parse@@Base+0x38bc>
   1a554:	ldr	r2, [r9, #32]
   1a558:	mov	r3, #0
   1a55c:	cmp	r2, r5
   1a560:	str	r3, [r4, #4]
   1a564:	bls	1a650 <argp_parse@@Base+0x3928>
   1a568:	add	r2, r5, #1
   1a56c:	mov	r3, #10
   1a570:	str	r2, [r9, #28]
   1a574:	strb	r3, [r5]
   1a578:	ldr	r3, [r7, #8]
   1a57c:	mov	r2, #1
   1a580:	str	r2, [r3, #4]
   1a584:	cmp	r8, r6
   1a588:	beq	1a5c0 <argp_parse@@Base+0x3898>
   1a58c:	mov	r0, r6
   1a590:	add	sp, sp, #12
   1a594:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a598:	b	17ca4 <argp_parse@@Base+0xf7c>
   1a59c:	mov	r1, r9
   1a5a0:	mov	r0, r4
   1a5a4:	bl	1ef68 <argp_error@@Base+0x1fbc>
   1a5a8:	cmp	r0, #0
   1a5ac:	beq	1a498 <argp_parse@@Base+0x3770>
   1a5b0:	ldr	r3, [r4, #28]
   1a5b4:	b	1a4b4 <argp_parse@@Base+0x378c>
   1a5b8:	mov	r6, r8
   1a5bc:	b	1a418 <argp_parse@@Base+0x36f0>
   1a5c0:	add	sp, sp, #12
   1a5c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a5c8:	mov	r1, r9
   1a5cc:	mov	r0, r4
   1a5d0:	bl	1ef68 <argp_error@@Base+0x1fbc>
   1a5d4:	cmp	r0, #0
   1a5d8:	beq	1a534 <argp_parse@@Base+0x380c>
   1a5dc:	ldr	r5, [r4, #28]
   1a5e0:	b	1a518 <argp_parse@@Base+0x37f0>
   1a5e4:	mov	r0, r4
   1a5e8:	bl	1e9bc <argp_error@@Base+0x1a10>
   1a5ec:	ldr	r9, [r7, #4]
   1a5f0:	ldr	r5, [r9, #28]
   1a5f4:	b	1a554 <argp_parse@@Base+0x382c>
   1a5f8:	mov	r0, r4
   1a5fc:	str	r9, [sp, #4]
   1a600:	bl	1e9bc <argp_error@@Base+0x1a10>
   1a604:	ldr	fp, [r7, #4]
   1a608:	ldr	r3, [sp, #4]
   1a60c:	ldr	r9, [sl, #24]
   1a610:	ldr	r5, [fp, #28]
   1a614:	ldr	r2, [fp, #24]
   1a618:	ldr	r1, [fp, #16]
   1a61c:	sub	r2, r5, r2
   1a620:	cmp	r2, r1
   1a624:	str	r3, [r4, #4]
   1a628:	movls	r4, fp
   1a62c:	bls	1a4f4 <argp_parse@@Base+0x37cc>
   1a630:	mov	r0, fp
   1a634:	bl	1e9bc <argp_error@@Base+0x1a10>
   1a638:	ldr	r4, [r7, #4]
   1a63c:	ldr	r5, [r4, #28]
   1a640:	b	1a4f4 <argp_parse@@Base+0x37cc>
   1a644:	mov	r0, r4
   1a648:	bl	1e9bc <argp_error@@Base+0x1a10>
   1a64c:	b	1a484 <argp_parse@@Base+0x375c>
   1a650:	mov	r1, #1
   1a654:	mov	r0, r9
   1a658:	bl	1ef68 <argp_error@@Base+0x1fbc>
   1a65c:	cmp	r0, #0
   1a660:	beq	1a578 <argp_parse@@Base+0x3850>
   1a664:	ldr	r5, [r9, #28]
   1a668:	b	1a568 <argp_parse@@Base+0x3840>
   1a66c:	mov	r1, #1
   1a670:	mov	r0, r4
   1a674:	bl	1ef68 <argp_error@@Base+0x1fbc>
   1a678:	cmp	r0, #0
   1a67c:	beq	1a460 <argp_parse@@Base+0x3738>
   1a680:	ldr	r3, [r4, #28]
   1a684:	b	1a450 <argp_parse@@Base+0x3728>
   1a688:	andeq	r0, r0, #3
   1a68c:	andeq	r1, r3, r0, ror r3
   1a690:	ldr	r3, [r1, #12]
   1a694:	push	{r4, r5, r6, r7, r8, lr}
   1a698:	cmp	r3, #0
   1a69c:	mov	r6, r1
   1a6a0:	mov	r5, r0
   1a6a4:	beq	1a78c <argp_parse@@Base+0x3a64>
   1a6a8:	ldr	r3, [r1, #8]
   1a6ac:	ldr	r2, [r1]
   1a6b0:	ldr	r7, [r3]
   1a6b4:	ldr	r3, [r3, #4]
   1a6b8:	ldr	r4, [r2, #16]
   1a6bc:	cmp	r3, #0
   1a6c0:	cmpne	r7, #0
   1a6c4:	beq	1a6fc <argp_parse@@Base+0x39d4>
   1a6c8:	ldr	r2, [r2, #12]
   1a6cc:	ldr	r3, [r7, #12]
   1a6d0:	cmp	r2, r3
   1a6d4:	beq	1a6fc <argp_parse@@Base+0x39d4>
   1a6d8:	ldr	r8, [r1, #4]
   1a6dc:	ldr	r3, [r8, #28]
   1a6e0:	ldr	r2, [r8, #32]
   1a6e4:	cmp	r3, r2
   1a6e8:	bcs	1a8c4 <argp_parse@@Base+0x3b9c>
   1a6ec:	add	r1, r3, #1
   1a6f0:	mov	r2, #10
   1a6f4:	str	r1, [r8, #28]
   1a6f8:	strb	r2, [r3]
   1a6fc:	cmp	r4, #0
   1a700:	beq	1a840 <argp_parse@@Base+0x3b18>
   1a704:	ldr	r0, [r4]
   1a708:	cmp	r0, #0
   1a70c:	beq	1a840 <argp_parse@@Base+0x3b18>
   1a710:	ldrb	r3, [r0]
   1a714:	cmp	r3, #0
   1a718:	beq	1a840 <argp_parse@@Base+0x3b18>
   1a71c:	cmp	r7, #0
   1a720:	beq	1a750 <argp_parse@@Base+0x3a28>
   1a724:	ldr	r3, [r7, #16]
   1a728:	cmp	r4, r3
   1a72c:	beq	1a840 <argp_parse@@Base+0x3b18>
   1a730:	cmp	r3, #0
   1a734:	beq	1a750 <argp_parse@@Base+0x3a28>
   1a738:	ldr	r3, [r3, #12]
   1a73c:	cmp	r3, #0
   1a740:	cmpne	r4, r3
   1a744:	bne	1a738 <argp_parse@@Base+0x3a10>
   1a748:	cmp	r4, r3
   1a74c:	beq	1a840 <argp_parse@@Base+0x3b18>
   1a750:	ldr	r3, [r6, #4]
   1a754:	ldr	r1, [r4, #16]
   1a758:	mov	r2, r6
   1a75c:	ldr	r7, [r3, #12]
   1a760:	bl	1a3d0 <argp_parse@@Base+0x36a8>
   1a764:	ldr	r8, [r6, #4]
   1a768:	ldr	r3, [r8, #28]
   1a76c:	ldr	r1, [r8, #24]
   1a770:	ldr	r2, [r8, #16]
   1a774:	sub	r3, r3, r1
   1a778:	cmp	r3, r2
   1a77c:	movls	r4, r8
   1a780:	bhi	1a8a4 <argp_parse@@Base+0x3b7c>
   1a784:	str	r7, [r8, #12]
   1a788:	b	1a854 <argp_parse@@Base+0x3b2c>
   1a78c:	ldr	r7, [r1, #4]
   1a790:	ldr	r3, [r7, #28]
   1a794:	ldr	r1, [r7, #32]
   1a798:	add	r2, r3, #2
   1a79c:	cmp	r1, r2
   1a7a0:	bcc	1a824 <argp_parse@@Base+0x3afc>
   1a7a4:	ldr	r2, [pc, #308]	; 1a8e0 <argp_parse@@Base+0x3bb8>
   1a7a8:	ldrh	r2, [r2]
   1a7ac:	strh	r2, [r3]
   1a7b0:	ldr	r4, [r6, #4]
   1a7b4:	ldr	r3, [r7, #28]
   1a7b8:	add	r3, r3, #2
   1a7bc:	str	r3, [r7, #28]
   1a7c0:	ldr	r1, [r4, #24]
   1a7c4:	ldr	r3, [r4, #28]
   1a7c8:	ldr	r2, [r4, #16]
   1a7cc:	sub	r3, r3, r1
   1a7d0:	cmp	r3, r2
   1a7d4:	bhi	1a864 <argp_parse@@Base+0x3b3c>
   1a7d8:	ldr	r3, [r4, #20]
   1a7dc:	mov	r6, #32
   1a7e0:	cmp	r3, #0
   1a7e4:	subge	r5, r5, r3
   1a7e8:	mov	r7, #1
   1a7ec:	cmp	r5, #0
   1a7f0:	sub	r5, r5, #1
   1a7f4:	ble	1a820 <argp_parse@@Base+0x3af8>
   1a7f8:	ldr	r3, [r4, #28]
   1a7fc:	ldr	r2, [r4, #32]
   1a800:	cmp	r3, r2
   1a804:	bcs	1a870 <argp_parse@@Base+0x3b48>
   1a808:	add	r2, r3, #1
   1a80c:	cmp	r5, #0
   1a810:	str	r2, [r4, #28]
   1a814:	sub	r5, r5, #1
   1a818:	strb	r6, [r3]
   1a81c:	bgt	1a7f8 <argp_parse@@Base+0x3ad0>
   1a820:	pop	{r4, r5, r6, r7, r8, pc}
   1a824:	mov	r1, #2
   1a828:	mov	r0, r7
   1a82c:	bl	1ef68 <argp_error@@Base+0x1fbc>
   1a830:	cmp	r0, #0
   1a834:	beq	1a88c <argp_parse@@Base+0x3b64>
   1a838:	ldr	r3, [r7, #28]
   1a83c:	b	1a7a4 <argp_parse@@Base+0x3a7c>
   1a840:	ldr	r4, [r6, #4]
   1a844:	ldr	r3, [r4, #28]
   1a848:	ldr	r1, [r4, #24]
   1a84c:	ldr	r2, [r4, #16]
   1a850:	sub	r3, r3, r1
   1a854:	mov	r1, #0
   1a858:	cmp	r3, r2
   1a85c:	str	r1, [r6, #12]
   1a860:	bls	1a7d8 <argp_parse@@Base+0x3ab0>
   1a864:	mov	r0, r4
   1a868:	bl	1e9bc <argp_error@@Base+0x1a10>
   1a86c:	b	1a7d8 <argp_parse@@Base+0x3ab0>
   1a870:	mov	r1, r7
   1a874:	mov	r0, r4
   1a878:	bl	1ef68 <argp_error@@Base+0x1fbc>
   1a87c:	cmp	r0, #0
   1a880:	beq	1a7ec <argp_parse@@Base+0x3ac4>
   1a884:	ldr	r3, [r4, #28]
   1a888:	b	1a808 <argp_parse@@Base+0x3ae0>
   1a88c:	ldr	r4, [r6, #4]
   1a890:	ldr	r3, [r4, #28]
   1a894:	ldr	r1, [r4, #24]
   1a898:	ldr	r2, [r4, #16]
   1a89c:	sub	r3, r3, r1
   1a8a0:	b	1a7d0 <argp_parse@@Base+0x3aa8>
   1a8a4:	mov	r0, r8
   1a8a8:	bl	1e9bc <argp_error@@Base+0x1a10>
   1a8ac:	ldr	r4, [r6, #4]
   1a8b0:	ldr	r3, [r4, #28]
   1a8b4:	ldr	r1, [r4, #24]
   1a8b8:	ldr	r2, [r4, #16]
   1a8bc:	sub	r3, r3, r1
   1a8c0:	b	1a784 <argp_parse@@Base+0x3a5c>
   1a8c4:	mov	r1, #1
   1a8c8:	mov	r0, r8
   1a8cc:	bl	1ef68 <argp_error@@Base+0x1fbc>
   1a8d0:	cmp	r0, #0
   1a8d4:	beq	1a6fc <argp_parse@@Base+0x39d4>
   1a8d8:	ldr	r3, [r8, #28]
   1a8dc:	b	1a6ec <argp_parse@@Base+0x39c4>
   1a8e0:	andeq	r0, r2, ip, lsl #11
   1a8e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a8e8:	sub	sp, sp, #28
   1a8ec:	ldr	r6, [r0, #12]
   1a8f0:	ldr	r7, [r1, #12]
   1a8f4:	cmp	r6, r7
   1a8f8:	beq	1ab70 <argp_parse@@Base+0x3e48>
   1a8fc:	ldr	r8, [r6, #12]
   1a900:	ldr	r9, [r7, #12]
   1a904:	mov	r5, r1
   1a908:	cmp	r8, r9
   1a90c:	mov	r4, r0
   1a910:	beq	1ab38 <argp_parse@@Base+0x3e10>
   1a914:	ldr	sl, [r8, #12]
   1a918:	ldr	fp, [r9, #12]
   1a91c:	cmp	sl, fp
   1a920:	beq	1abd8 <argp_parse@@Base+0x3eb0>
   1a924:	ldr	r3, [sl, #12]
   1a928:	ldr	r2, [fp, #12]
   1a92c:	cmp	r3, r2
   1a930:	beq	1ac0c <argp_parse@@Base+0x3ee4>
   1a934:	ldr	r1, [r3, #12]
   1a938:	ldr	r0, [r2, #12]
   1a93c:	str	r1, [sp]
   1a940:	cmp	r1, r0
   1a944:	str	r0, [sp, #4]
   1a948:	beq	1aba4 <argp_parse@@Base+0x3e7c>
   1a94c:	ldr	r1, [r1, #12]
   1a950:	ldr	r0, [r0, #12]
   1a954:	str	r1, [sp, #8]
   1a958:	cmp	r1, r0
   1a95c:	str	r0, [sp, #12]
   1a960:	beq	1ac40 <argp_parse@@Base+0x3f18>
   1a964:	ldr	r0, [r1, #12]
   1a968:	ldr	r1, [sp, #12]
   1a96c:	ldr	r1, [r1, #12]
   1a970:	cmp	r0, r1
   1a974:	beq	1ac80 <argp_parse@@Base+0x3f58>
   1a978:	str	r2, [sp, #20]
   1a97c:	str	r3, [sp, #16]
   1a980:	bl	1a8e4 <argp_parse@@Base+0x3bbc>
   1a984:	cmp	r0, #0
   1a988:	bne	1ab30 <argp_parse@@Base+0x3e08>
   1a98c:	ldr	r3, [sp, #12]
   1a990:	ldr	r2, [sp, #20]
   1a994:	ldr	r1, [r3, #8]
   1a998:	ldr	r3, [sp, #8]
   1a99c:	mvn	ip, r1
   1a9a0:	ldr	r0, [r3, #8]
   1a9a4:	lsr	ip, ip, #31
   1a9a8:	ldr	r3, [sp, #16]
   1a9ac:	cmp	ip, r0, lsr #31
   1a9b0:	subne	r0, r0, r1
   1a9b4:	subeq	r0, r1, r0
   1a9b8:	cmp	r0, #0
   1a9bc:	bne	1ab30 <argp_parse@@Base+0x3e08>
   1a9c0:	ldr	r1, [sp, #12]
   1a9c4:	ldr	r0, [sp, #8]
   1a9c8:	ldr	r1, [r1, #4]
   1a9cc:	ldr	r0, [r0, #4]
   1a9d0:	sub	r0, r1, r0
   1a9d4:	cmp	r0, #0
   1a9d8:	bne	1ab30 <argp_parse@@Base+0x3e08>
   1a9dc:	ldr	r1, [sp, #4]
   1a9e0:	ldr	r0, [sp]
   1a9e4:	ldr	r1, [r1, #8]
   1a9e8:	ldr	r0, [r0, #8]
   1a9ec:	mvn	ip, r1
   1a9f0:	lsr	ip, ip, #31
   1a9f4:	cmp	ip, r0, lsr #31
   1a9f8:	subne	r0, r0, r1
   1a9fc:	subeq	r0, r1, r0
   1aa00:	cmp	r0, #0
   1aa04:	bne	1ab30 <argp_parse@@Base+0x3e08>
   1aa08:	ldr	r1, [sp, #4]
   1aa0c:	ldr	r0, [sp]
   1aa10:	ldr	r1, [r1, #4]
   1aa14:	ldr	r0, [r0, #4]
   1aa18:	sub	r0, r1, r0
   1aa1c:	cmp	r0, #0
   1aa20:	bne	1ab30 <argp_parse@@Base+0x3e08>
   1aa24:	ldr	r1, [r2, #8]
   1aa28:	ldr	r0, [r3, #8]
   1aa2c:	mvn	ip, r1
   1aa30:	lsr	ip, ip, #31
   1aa34:	cmp	ip, r0, lsr #31
   1aa38:	subne	r0, r0, r1
   1aa3c:	subeq	r0, r1, r0
   1aa40:	cmp	r0, #0
   1aa44:	bne	1ab30 <argp_parse@@Base+0x3e08>
   1aa48:	ldr	r2, [r2, #4]
   1aa4c:	ldr	r0, [r3, #4]
   1aa50:	sub	r0, r2, r0
   1aa54:	cmp	r0, #0
   1aa58:	bne	1ab30 <argp_parse@@Base+0x3e08>
   1aa5c:	ldr	r3, [fp, #8]
   1aa60:	ldr	r0, [sl, #8]
   1aa64:	mvn	r2, r3
   1aa68:	lsr	r2, r2, #31
   1aa6c:	cmp	r2, r0, lsr #31
   1aa70:	subne	r0, r0, r3
   1aa74:	subeq	r0, r3, r0
   1aa78:	cmp	r0, #0
   1aa7c:	bne	1ab30 <argp_parse@@Base+0x3e08>
   1aa80:	ldr	r3, [fp, #4]
   1aa84:	ldr	r0, [sl, #4]
   1aa88:	sub	r0, r3, r0
   1aa8c:	cmp	r0, #0
   1aa90:	bne	1ab30 <argp_parse@@Base+0x3e08>
   1aa94:	ldr	r3, [r9, #8]
   1aa98:	ldr	r0, [r8, #8]
   1aa9c:	mvn	r2, r3
   1aaa0:	lsr	r2, r2, #31
   1aaa4:	cmp	r2, r0, lsr #31
   1aaa8:	subne	r0, r0, r3
   1aaac:	subeq	r0, r3, r0
   1aab0:	cmp	r0, #0
   1aab4:	bne	1ab30 <argp_parse@@Base+0x3e08>
   1aab8:	ldr	r3, [r9, #4]
   1aabc:	ldr	r0, [r8, #4]
   1aac0:	sub	r0, r3, r0
   1aac4:	cmp	r0, #0
   1aac8:	bne	1ab30 <argp_parse@@Base+0x3e08>
   1aacc:	ldr	r3, [r7, #8]
   1aad0:	ldr	r0, [r6, #8]
   1aad4:	mvn	r2, r3
   1aad8:	lsr	r2, r2, #31
   1aadc:	cmp	r2, r0, lsr #31
   1aae0:	subne	r0, r0, r3
   1aae4:	subeq	r0, r3, r0
   1aae8:	cmp	r0, #0
   1aaec:	bne	1ab30 <argp_parse@@Base+0x3e08>
   1aaf0:	ldr	r3, [r7, #4]
   1aaf4:	ldr	r0, [r6, #4]
   1aaf8:	sub	r0, r3, r0
   1aafc:	cmp	r0, #0
   1ab00:	bne	1ab30 <argp_parse@@Base+0x3e08>
   1ab04:	ldr	r3, [r5, #8]
   1ab08:	ldr	r0, [r4, #8]
   1ab0c:	mvn	r2, r3
   1ab10:	lsr	r2, r2, #31
   1ab14:	cmp	r2, r0, lsr #31
   1ab18:	subne	r0, r0, r3
   1ab1c:	subeq	r0, r3, r0
   1ab20:	cmp	r0, #0
   1ab24:	ldreq	r3, [r5, #4]
   1ab28:	ldreq	r0, [r4, #4]
   1ab2c:	subeq	r0, r3, r0
   1ab30:	add	sp, sp, #28
   1ab34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ab38:	ldr	r3, [r7, #8]
   1ab3c:	ldr	r0, [r6, #8]
   1ab40:	mvn	r2, r3
   1ab44:	ldr	r1, [r7, #4]
   1ab48:	lsr	r2, r2, #31
   1ab4c:	cmp	r2, r0, lsr #31
   1ab50:	subne	r0, r0, r3
   1ab54:	subeq	r0, r3, r0
   1ab58:	ldr	r2, [r6, #4]
   1ab5c:	cmp	r0, #0
   1ab60:	subeq	r0, r1, r2
   1ab64:	beq	1aafc <argp_parse@@Base+0x3dd4>
   1ab68:	add	sp, sp, #28
   1ab6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ab70:	ldr	r2, [r1, #8]
   1ab74:	ldr	r3, [r0, #8]
   1ab78:	mvn	ip, r2
   1ab7c:	ldr	lr, [r1, #4]
   1ab80:	lsr	ip, ip, #31
   1ab84:	cmp	ip, r3, lsr #31
   1ab88:	ldr	r1, [r0, #4]
   1ab8c:	subne	r0, r3, r2
   1ab90:	subeq	r0, r2, r3
   1ab94:	cmp	r0, #0
   1ab98:	subeq	r0, lr, r1
   1ab9c:	add	sp, sp, #28
   1aba0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1aba4:	ldr	r1, [r2, #8]
   1aba8:	ldr	r0, [r3, #8]
   1abac:	mvn	ip, r1
   1abb0:	ldr	r2, [r2, #4]
   1abb4:	lsr	ip, ip, #31
   1abb8:	cmp	ip, r0, lsr #31
   1abbc:	subne	r0, r0, r1
   1abc0:	subeq	r0, r1, r0
   1abc4:	ldr	r3, [r3, #4]
   1abc8:	cmp	r0, #0
   1abcc:	subeq	r0, r2, r3
   1abd0:	beq	1aa54 <argp_parse@@Base+0x3d2c>
   1abd4:	b	1ab30 <argp_parse@@Base+0x3e08>
   1abd8:	ldr	r3, [r9, #8]
   1abdc:	ldr	r0, [r8, #8]
   1abe0:	mvn	r2, r3
   1abe4:	ldr	r1, [r9, #4]
   1abe8:	lsr	r2, r2, #31
   1abec:	cmp	r2, r0, lsr #31
   1abf0:	subne	r0, r0, r3
   1abf4:	subeq	r0, r3, r0
   1abf8:	ldr	r2, [r8, #4]
   1abfc:	cmp	r0, #0
   1ac00:	subeq	r0, r1, r2
   1ac04:	beq	1aac4 <argp_parse@@Base+0x3d9c>
   1ac08:	b	1ab30 <argp_parse@@Base+0x3e08>
   1ac0c:	ldr	r3, [fp, #8]
   1ac10:	ldr	r0, [sl, #8]
   1ac14:	mvn	r2, r3
   1ac18:	ldr	r1, [fp, #4]
   1ac1c:	lsr	r2, r2, #31
   1ac20:	cmp	r2, r0, lsr #31
   1ac24:	subne	r0, r0, r3
   1ac28:	subeq	r0, r3, r0
   1ac2c:	ldr	r2, [sl, #4]
   1ac30:	cmp	r0, #0
   1ac34:	subeq	r0, r1, r2
   1ac38:	beq	1aa8c <argp_parse@@Base+0x3d64>
   1ac3c:	b	1ab30 <argp_parse@@Base+0x3e08>
   1ac40:	ldr	ip, [sp, #4]
   1ac44:	ldr	r1, [sp]
   1ac48:	ldr	lr, [ip, #8]
   1ac4c:	ldr	r0, [r1, #8]
   1ac50:	mvn	r1, lr
   1ac54:	ldr	ip, [ip, #4]
   1ac58:	lsr	r1, r1, #31
   1ac5c:	cmp	r1, r0, lsr #31
   1ac60:	ldr	r1, [sp]
   1ac64:	subne	r0, r0, lr
   1ac68:	subeq	r0, lr, r0
   1ac6c:	ldr	r1, [r1, #4]
   1ac70:	cmp	r0, #0
   1ac74:	subeq	r0, ip, r1
   1ac78:	beq	1aa1c <argp_parse@@Base+0x3cf4>
   1ac7c:	b	1ab30 <argp_parse@@Base+0x3e08>
   1ac80:	ldr	ip, [sp, #12]
   1ac84:	ldr	r1, [sp, #8]
   1ac88:	ldr	lr, [ip, #8]
   1ac8c:	ldr	r0, [r1, #8]
   1ac90:	mvn	r1, lr
   1ac94:	ldr	ip, [ip, #4]
   1ac98:	lsr	r1, r1, #31
   1ac9c:	cmp	r1, r0, lsr #31
   1aca0:	ldr	r1, [sp, #8]
   1aca4:	subne	r0, r0, lr
   1aca8:	subeq	r0, lr, r0
   1acac:	ldr	r1, [r1, #4]
   1acb0:	cmp	r0, #0
   1acb4:	subeq	r0, ip, r1
   1acb8:	beq	1a9d4 <argp_parse@@Base+0x3cac>
   1acbc:	b	1ab30 <argp_parse@@Base+0x3e08>
   1acc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1acc4:	mov	r6, r1
   1acc8:	ldr	r4, [r0, #16]
   1accc:	sub	sp, sp, #28
   1acd0:	cmp	r4, #0
   1acd4:	movne	r2, r4
   1acd8:	bne	1ace4 <argp_parse@@Base+0x3fbc>
   1acdc:	b	1b30c <argp_parse@@Base+0x45e4>
   1ace0:	mov	r2, r3
   1ace4:	ldr	r3, [r2, #12]
   1ace8:	cmp	r3, #0
   1acec:	bne	1ace0 <argp_parse@@Base+0x3fb8>
   1acf0:	ldr	r5, [r6, #16]
   1acf4:	ldr	ip, [r2, #8]
   1acf8:	cmp	r5, #0
   1acfc:	movne	r2, r5
   1ad00:	bne	1ad0c <argp_parse@@Base+0x3fe4>
   1ad04:	b	1b320 <argp_parse@@Base+0x45f8>
   1ad08:	mov	r2, r3
   1ad0c:	ldr	r3, [r2, #12]
   1ad10:	cmp	r3, #0
   1ad14:	bne	1ad08 <argp_parse@@Base+0x3fe0>
   1ad18:	ldr	r3, [r2, #8]
   1ad1c:	mvn	r2, r3
   1ad20:	lsr	r2, r2, #31
   1ad24:	cmp	r2, ip, lsr #31
   1ad28:	subne	r1, ip, r3
   1ad2c:	subeq	r1, r3, ip
   1ad30:	cmp	r1, #0
   1ad34:	bne	1aeb0 <argp_parse@@Base+0x4188>
   1ad38:	adds	r1, r5, #0
   1ad3c:	movne	r1, #1
   1ad40:	cmp	r4, #0
   1ad44:	rsbeq	r1, r1, #0
   1ad48:	rsbne	r1, r1, #1
   1ad4c:	cmp	r1, #0
   1ad50:	bne	1aeb0 <argp_parse@@Base+0x4188>
   1ad54:	cmp	r4, #0
   1ad58:	mov	fp, r0
   1ad5c:	beq	1b0a8 <argp_parse@@Base+0x4380>
   1ad60:	ldr	r1, [r4, #20]
   1ad64:	ldr	r2, [r5, #20]
   1ad68:	cmp	r1, r2
   1ad6c:	bgt	1aebc <argp_parse@@Base+0x4194>
   1ad70:	bge	1b054 <argp_parse@@Base+0x432c>
   1ad74:	ldr	r5, [r5, #12]
   1ad78:	ldr	r3, [r5, #20]
   1ad7c:	cmp	r1, r3
   1ad80:	blt	1ad74 <argp_parse@@Base+0x404c>
   1ad84:	ldr	r6, [r4, #12]
   1ad88:	ldr	r7, [r5, #12]
   1ad8c:	cmp	r6, r7
   1ad90:	beq	1b590 <argp_parse@@Base+0x4868>
   1ad94:	ldr	r8, [r6, #12]
   1ad98:	ldr	r9, [r7, #12]
   1ad9c:	cmp	r8, r9
   1ada0:	beq	1b4c8 <argp_parse@@Base+0x47a0>
   1ada4:	ldr	sl, [r8, #12]
   1ada8:	ldr	fp, [r9, #12]
   1adac:	cmp	sl, fp
   1adb0:	beq	1b5f8 <argp_parse@@Base+0x48d0>
   1adb4:	ldr	r0, [sl, #12]
   1adb8:	ldr	r1, [fp, #12]
   1adbc:	cmp	r0, r1
   1adc0:	beq	1b6a4 <argp_parse@@Base+0x497c>
   1adc4:	bl	1a8e4 <argp_parse@@Base+0x3bbc>
   1adc8:	subs	r1, r0, #0
   1adcc:	bne	1aeb0 <argp_parse@@Base+0x4188>
   1add0:	ldr	r1, [fp, #8]
   1add4:	ldr	r3, [sl, #8]
   1add8:	mvn	r2, r1
   1addc:	lsr	r2, r2, #31
   1ade0:	cmp	r2, r3, lsr #31
   1ade4:	subne	r1, r3, r1
   1ade8:	subeq	r1, r1, r3
   1adec:	cmp	r1, #0
   1adf0:	bne	1aeb0 <argp_parse@@Base+0x4188>
   1adf4:	ldr	r1, [fp, #4]
   1adf8:	ldr	r3, [sl, #4]
   1adfc:	sub	r1, r1, r3
   1ae00:	cmp	r1, #0
   1ae04:	bne	1aeb0 <argp_parse@@Base+0x4188>
   1ae08:	ldr	r1, [r9, #8]
   1ae0c:	ldr	r3, [r8, #8]
   1ae10:	mvn	r2, r1
   1ae14:	lsr	r2, r2, #31
   1ae18:	cmp	r2, r3, lsr #31
   1ae1c:	subne	r1, r3, r1
   1ae20:	subeq	r1, r1, r3
   1ae24:	cmp	r1, #0
   1ae28:	bne	1aeb0 <argp_parse@@Base+0x4188>
   1ae2c:	ldr	r1, [r9, #4]
   1ae30:	ldr	r3, [r8, #4]
   1ae34:	sub	r1, r1, r3
   1ae38:	cmp	r1, #0
   1ae3c:	bne	1aeb0 <argp_parse@@Base+0x4188>
   1ae40:	ldr	r1, [r7, #8]
   1ae44:	ldr	r3, [r6, #8]
   1ae48:	mvn	r2, r1
   1ae4c:	lsr	r2, r2, #31
   1ae50:	cmp	r2, r3, lsr #31
   1ae54:	subne	r1, r3, r1
   1ae58:	subeq	r1, r1, r3
   1ae5c:	cmp	r1, #0
   1ae60:	bne	1aeb0 <argp_parse@@Base+0x4188>
   1ae64:	ldr	r1, [r7, #4]
   1ae68:	ldr	r3, [r6, #4]
   1ae6c:	sub	r1, r1, r3
   1ae70:	cmp	r1, #0
   1ae74:	bne	1aeb0 <argp_parse@@Base+0x4188>
   1ae78:	ldr	r1, [r5, #8]
   1ae7c:	ldr	r3, [r4, #8]
   1ae80:	mvn	r2, r1
   1ae84:	lsr	r2, r2, #31
   1ae88:	cmp	r2, r3, lsr #31
   1ae8c:	subne	r1, r3, r1
   1ae90:	subeq	r1, r1, r3
   1ae94:	cmp	r1, #0
   1ae98:	bne	1aeb0 <argp_parse@@Base+0x4188>
   1ae9c:	ldr	r1, [r5, #4]
   1aea0:	ldr	r3, [r4, #4]
   1aea4:	sub	r1, r1, r3
   1aea8:	cmp	r1, #0
   1aeac:	mvneq	r1, #0
   1aeb0:	mov	r0, r1
   1aeb4:	add	sp, sp, #28
   1aeb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1aebc:	ldr	r4, [r4, #12]
   1aec0:	ldr	r3, [r4, #20]
   1aec4:	cmp	r2, r3
   1aec8:	blt	1aebc <argp_parse@@Base+0x4194>
   1aecc:	ldr	r6, [r4, #12]
   1aed0:	ldr	r7, [r5, #12]
   1aed4:	cmp	r6, r7
   1aed8:	beq	1b530 <argp_parse@@Base+0x4808>
   1aedc:	ldr	r8, [r6, #12]
   1aee0:	ldr	r9, [r7, #12]
   1aee4:	cmp	r8, r9
   1aee8:	beq	1b5c4 <argp_parse@@Base+0x489c>
   1aeec:	ldr	sl, [r8, #12]
   1aef0:	ldr	fp, [r9, #12]
   1aef4:	cmp	sl, fp
   1aef8:	beq	1b4fc <argp_parse@@Base+0x47d4>
   1aefc:	ldr	r3, [sl, #12]
   1af00:	ldr	r2, [fp, #12]
   1af04:	cmp	r3, r2
   1af08:	beq	1b62c <argp_parse@@Base+0x4904>
   1af0c:	ldr	r0, [r3, #12]
   1af10:	ldr	r1, [r2, #12]
   1af14:	cmp	r0, r1
   1af18:	beq	1b6d8 <argp_parse@@Base+0x49b0>
   1af1c:	str	r2, [sp, #8]
   1af20:	str	r3, [sp, #4]
   1af24:	bl	1a8e4 <argp_parse@@Base+0x3bbc>
   1af28:	subs	r1, r0, #0
   1af2c:	bne	1aeb0 <argp_parse@@Base+0x4188>
   1af30:	ldr	r2, [sp, #8]
   1af34:	ldr	r3, [sp, #4]
   1af38:	ldr	r0, [r2, #8]
   1af3c:	ldr	r1, [r3, #8]
   1af40:	mvn	ip, r0
   1af44:	lsr	ip, ip, #31
   1af48:	cmp	ip, r1, lsr #31
   1af4c:	subne	r1, r1, r0
   1af50:	subeq	r1, r0, r1
   1af54:	cmp	r1, #0
   1af58:	bne	1aeb0 <argp_parse@@Base+0x4188>
   1af5c:	ldr	r1, [r2, #4]
   1af60:	ldr	r3, [r3, #4]
   1af64:	sub	r1, r1, r3
   1af68:	cmp	r1, #0
   1af6c:	bne	1aeb0 <argp_parse@@Base+0x4188>
   1af70:	ldr	r1, [fp, #8]
   1af74:	ldr	r3, [sl, #8]
   1af78:	mvn	r2, r1
   1af7c:	lsr	r2, r2, #31
   1af80:	cmp	r2, r3, lsr #31
   1af84:	subne	r1, r3, r1
   1af88:	subeq	r1, r1, r3
   1af8c:	cmp	r1, #0
   1af90:	bne	1aeb0 <argp_parse@@Base+0x4188>
   1af94:	ldr	r1, [fp, #4]
   1af98:	ldr	r3, [sl, #4]
   1af9c:	sub	r1, r1, r3
   1afa0:	cmp	r1, #0
   1afa4:	bne	1aeb0 <argp_parse@@Base+0x4188>
   1afa8:	ldr	r1, [r9, #8]
   1afac:	ldr	r3, [r8, #8]
   1afb0:	mvn	r2, r1
   1afb4:	lsr	r2, r2, #31
   1afb8:	cmp	r2, r3, lsr #31
   1afbc:	subne	r1, r3, r1
   1afc0:	subeq	r1, r1, r3
   1afc4:	cmp	r1, #0
   1afc8:	bne	1aeb0 <argp_parse@@Base+0x4188>
   1afcc:	ldr	r1, [r9, #4]
   1afd0:	ldr	r3, [r8, #4]
   1afd4:	sub	r1, r1, r3
   1afd8:	cmp	r1, #0
   1afdc:	bne	1aeb0 <argp_parse@@Base+0x4188>
   1afe0:	ldr	r1, [r7, #8]
   1afe4:	ldr	r3, [r6, #8]
   1afe8:	mvn	r2, r1
   1afec:	lsr	r2, r2, #31
   1aff0:	cmp	r2, r3, lsr #31
   1aff4:	subne	r1, r3, r1
   1aff8:	subeq	r1, r1, r3
   1affc:	cmp	r1, #0
   1b000:	bne	1aeb0 <argp_parse@@Base+0x4188>
   1b004:	ldr	r1, [r7, #4]
   1b008:	ldr	r3, [r6, #4]
   1b00c:	sub	r1, r1, r3
   1b010:	cmp	r1, #0
   1b014:	bne	1aeb0 <argp_parse@@Base+0x4188>
   1b018:	ldr	r1, [r5, #8]
   1b01c:	ldr	r3, [r4, #8]
   1b020:	mvn	r2, r1
   1b024:	lsr	r2, r2, #31
   1b028:	cmp	r2, r3, lsr #31
   1b02c:	subne	r1, r3, r1
   1b030:	subeq	r1, r1, r3
   1b034:	cmp	r1, #0
   1b038:	bne	1aeb0 <argp_parse@@Base+0x4188>
   1b03c:	ldr	r1, [r5, #4]
   1b040:	ldr	r3, [r4, #4]
   1b044:	sub	r1, r1, r3
   1b048:	cmp	r1, #0
   1b04c:	moveq	r1, #1
   1b050:	b	1aeb0 <argp_parse@@Base+0x4188>
   1b054:	ldr	r0, [r4, #12]
   1b058:	ldr	r1, [r5, #12]
   1b05c:	cmp	r0, r1
   1b060:	beq	1b660 <argp_parse@@Base+0x4938>
   1b064:	bl	1a8e4 <argp_parse@@Base+0x3bbc>
   1b068:	subs	r1, r0, #0
   1b06c:	bne	1aeb0 <argp_parse@@Base+0x4188>
   1b070:	ldr	r1, [r5, #8]
   1b074:	ldr	r3, [r4, #8]
   1b078:	mvn	r2, r1
   1b07c:	lsr	r2, r2, #31
   1b080:	cmp	r2, r3, lsr #31
   1b084:	subne	r1, r3, r1
   1b088:	subeq	r1, r1, r3
   1b08c:	cmp	r1, #0
   1b090:	bne	1aeb0 <argp_parse@@Base+0x4188>
   1b094:	ldr	r1, [r5, #4]
   1b098:	ldr	r3, [r4, #4]
   1b09c:	sub	r1, r1, r3
   1b0a0:	cmp	r1, #0
   1b0a4:	bne	1aeb0 <argp_parse@@Base+0x4188>
   1b0a8:	ldr	r1, [r6, #12]
   1b0ac:	ldr	r3, [fp, #12]
   1b0b0:	mvn	r2, r1
   1b0b4:	lsr	r2, r2, #31
   1b0b8:	cmp	r2, r3, lsr #31
   1b0bc:	subne	r1, r3, r1
   1b0c0:	subeq	r1, r1, r3
   1b0c4:	cmp	r1, #0
   1b0c8:	bne	1aeb0 <argp_parse@@Base+0x4188>
   1b0cc:	ldm	fp, {r8, r9}
   1b0d0:	cmp	r9, #0
   1b0d4:	beq	1b70c <argp_parse@@Base+0x49e4>
   1b0d8:	add	r3, r8, #24
   1b0dc:	mov	r2, r9
   1b0e0:	ldr	r4, [r3, #-24]	; 0xffffffe8
   1b0e4:	cmp	r4, #0
   1b0e8:	beq	1b0f8 <argp_parse@@Base+0x43d0>
   1b0ec:	ldr	r0, [r3, #-12]
   1b0f0:	tst	r0, #2
   1b0f4:	beq	1b108 <argp_parse@@Base+0x43e0>
   1b0f8:	subs	r2, r2, #1
   1b0fc:	add	r3, r3, #24
   1b100:	bne	1b0e0 <argp_parse@@Base+0x43b8>
   1b104:	mov	r4, r2
   1b108:	ldm	r6, {r7, sl}
   1b10c:	cmp	sl, #0
   1b110:	beq	1b714 <argp_parse@@Base+0x49ec>
   1b114:	add	r3, r7, #24
   1b118:	mov	r2, sl
   1b11c:	ldr	r5, [r3, #-24]	; 0xffffffe8
   1b120:	cmp	r5, #0
   1b124:	beq	1b134 <argp_parse@@Base+0x440c>
   1b128:	ldr	r0, [r3, #-12]
   1b12c:	tst	r0, #2
   1b130:	beq	1b144 <argp_parse@@Base+0x441c>
   1b134:	subs	r2, r2, #1
   1b138:	add	r3, r3, #24
   1b13c:	bne	1b11c <argp_parse@@Base+0x43f4>
   1b140:	mov	r5, r2
   1b144:	ldr	r3, [r8, #12]
   1b148:	tst	r3, #8
   1b14c:	beq	1b1b8 <argp_parse@@Base+0x4490>
   1b150:	cmp	r4, #0
   1b154:	beq	1b1b8 <argp_parse@@Base+0x4490>
   1b158:	str	r1, [sp, #4]
   1b15c:	bl	119ac <__ctype_b_loc@plt>
   1b160:	ldr	r1, [sp, #4]
   1b164:	mov	ip, r4
   1b168:	ldr	r0, [r0]
   1b16c:	ldrb	r2, [ip]
   1b170:	mov	r4, ip
   1b174:	add	ip, ip, #1
   1b178:	lsl	r3, r2, #1
   1b17c:	ldrh	r3, [r0, r3]
   1b180:	tst	r3, #8192	; 0x2000
   1b184:	bne	1b16c <argp_parse@@Base+0x4444>
   1b188:	cmp	r2, #0
   1b18c:	bne	1b1a8 <argp_parse@@Base+0x4480>
   1b190:	b	1b4b4 <argp_parse@@Base+0x478c>
   1b194:	ldrb	r3, [r4, #1]!
   1b198:	cmp	r3, #0
   1b19c:	lsl	r3, r3, #1
   1b1a0:	beq	1b1b0 <argp_parse@@Base+0x4488>
   1b1a4:	ldrh	r3, [r0, r3]
   1b1a8:	tst	r3, #8
   1b1ac:	beq	1b194 <argp_parse@@Base+0x446c>
   1b1b0:	cmp	r2, #45	; 0x2d
   1b1b4:	bne	1b4b4 <argp_parse@@Base+0x478c>
   1b1b8:	ldr	r3, [r7, #12]
   1b1bc:	tst	r3, #8
   1b1c0:	beq	1b24c <argp_parse@@Base+0x4524>
   1b1c4:	cmp	r5, #0
   1b1c8:	movne	r2, r1
   1b1cc:	beq	1b24c <argp_parse@@Base+0x4524>
   1b1d0:	str	r1, [sp, #8]
   1b1d4:	str	r2, [sp, #4]
   1b1d8:	bl	119ac <__ctype_b_loc@plt>
   1b1dc:	ldr	r2, [sp, #4]
   1b1e0:	ldr	r1, [sp, #8]
   1b1e4:	mov	r3, r5
   1b1e8:	ldr	ip, [r0]
   1b1ec:	ldrb	r0, [r3]
   1b1f0:	mov	r5, r3
   1b1f4:	add	r3, r3, #1
   1b1f8:	lsl	lr, r0, #1
   1b1fc:	ldrh	lr, [ip, lr]
   1b200:	tst	lr, #8192	; 0x2000
   1b204:	bne	1b1ec <argp_parse@@Base+0x44c4>
   1b208:	cmp	r0, #0
   1b20c:	beq	1b238 <argp_parse@@Base+0x4510>
   1b210:	tst	lr, #8
   1b214:	beq	1b228 <argp_parse@@Base+0x4500>
   1b218:	b	1b238 <argp_parse@@Base+0x4510>
   1b21c:	ldrh	r3, [ip, r3]
   1b220:	tst	r3, #8
   1b224:	bne	1b238 <argp_parse@@Base+0x4510>
   1b228:	ldrb	r3, [r5, #1]!
   1b22c:	cmp	r3, #0
   1b230:	lsl	r3, r3, #1
   1b234:	bne	1b21c <argp_parse@@Base+0x44f4>
   1b238:	cmp	r0, #45	; 0x2d
   1b23c:	subne	r2, r2, #1
   1b240:	cmp	r2, #0
   1b244:	movne	r1, r2
   1b248:	bne	1aeb0 <argp_parse@@Base+0x4188>
   1b24c:	ldr	r3, [fp, #8]
   1b250:	cmp	r9, #0
   1b254:	mov	r2, r3
   1b258:	beq	1b71c <argp_parse@@Base+0x49f4>
   1b25c:	str	r7, [sp, #16]
   1b260:	str	r6, [sp, #20]
   1b264:	mov	r3, #1
   1b268:	str	r4, [sp, #8]
   1b26c:	str	r5, [sp, #12]
   1b270:	mov	r7, r1
   1b274:	mov	r6, r2
   1b278:	b	1b294 <argp_parse@@Base+0x456c>
   1b27c:	subs	r9, r9, #1
   1b280:	moveq	ip, #0
   1b284:	andne	ip, ip, #1
   1b288:	cmp	ip, #0
   1b28c:	add	r8, r8, #24
   1b290:	beq	1b328 <argp_parse@@Base+0x4600>
   1b294:	ldr	r4, [r8, #12]
   1b298:	mov	ip, r3
   1b29c:	ands	fp, r4, #8
   1b2a0:	movne	fp, r7
   1b2a4:	bne	1b27c <argp_parse@@Base+0x4554>
   1b2a8:	ldr	r5, [r8, #4]
   1b2ac:	sub	r0, r5, #1
   1b2b0:	cmp	r0, #254	; 0xfe
   1b2b4:	bhi	1b27c <argp_parse@@Base+0x4554>
   1b2b8:	str	r3, [sp, #4]
   1b2bc:	bl	119ac <__ctype_b_loc@plt>
   1b2c0:	lsl	lr, r5, #1
   1b2c4:	ldr	r3, [sp, #4]
   1b2c8:	mov	ip, r3
   1b2cc:	ldr	r0, [r0]
   1b2d0:	ldrh	r0, [r0, lr]
   1b2d4:	tst	r0, #16384	; 0x4000
   1b2d8:	beq	1b27c <argp_parse@@Base+0x4554>
   1b2dc:	ldrb	r0, [r6]
   1b2e0:	mov	ip, r3
   1b2e4:	cmp	r5, r0
   1b2e8:	bne	1b27c <argp_parse@@Base+0x4554>
   1b2ec:	and	r4, r4, #10
   1b2f0:	cmp	r4, #0
   1b2f4:	moveq	fp, r5
   1b2f8:	movne	fp, #0
   1b2fc:	add	r6, r6, #1
   1b300:	movne	ip, #1
   1b304:	moveq	ip, #0
   1b308:	b	1b27c <argp_parse@@Base+0x4554>
   1b30c:	ldr	r5, [r6, #16]
   1b310:	ldr	ip, [r0, #12]
   1b314:	cmp	r5, #0
   1b318:	movne	r2, r5
   1b31c:	bne	1ad0c <argp_parse@@Base+0x3fe4>
   1b320:	ldr	r3, [r6, #12]
   1b324:	b	1ad1c <argp_parse@@Base+0x3ff4>
   1b328:	mov	r3, fp
   1b32c:	ldr	r6, [sp, #20]
   1b330:	uxtb	r3, r3
   1b334:	cmp	sl, #0
   1b338:	str	fp, [sp, #4]
   1b33c:	mov	r1, r7
   1b340:	ldr	r4, [sp, #8]
   1b344:	ldr	r7, [sp, #16]
   1b348:	ldr	r5, [sp, #12]
   1b34c:	ldr	fp, [r6, #8]
   1b350:	str	r3, [sp, #16]
   1b354:	beq	1b564 <argp_parse@@Base+0x483c>
   1b358:	str	r4, [sp, #8]
   1b35c:	mov	r8, #1
   1b360:	str	r5, [sp, #12]
   1b364:	mov	r4, r1
   1b368:	b	1b384 <argp_parse@@Base+0x465c>
   1b36c:	subs	sl, sl, #1
   1b370:	moveq	r3, #0
   1b374:	andne	r3, r3, #1
   1b378:	cmp	r3, #0
   1b37c:	add	r7, r7, #24
   1b380:	beq	1b3f0 <argp_parse@@Base+0x46c8>
   1b384:	ldr	r6, [r7, #12]
   1b388:	mov	r3, r8
   1b38c:	ands	r9, r6, #8
   1b390:	movne	r9, r4
   1b394:	bne	1b36c <argp_parse@@Base+0x4644>
   1b398:	ldr	r5, [r7, #4]
   1b39c:	sub	r0, r5, #1
   1b3a0:	cmp	r0, #254	; 0xfe
   1b3a4:	bhi	1b36c <argp_parse@@Base+0x4644>
   1b3a8:	bl	119ac <__ctype_b_loc@plt>
   1b3ac:	lsl	ip, r5, #1
   1b3b0:	mov	r3, r8
   1b3b4:	ldr	r0, [r0]
   1b3b8:	ldrh	r0, [r0, ip]
   1b3bc:	tst	r0, #16384	; 0x4000
   1b3c0:	beq	1b36c <argp_parse@@Base+0x4644>
   1b3c4:	ldrb	r0, [fp]
   1b3c8:	mov	r3, r8
   1b3cc:	cmp	r5, r0
   1b3d0:	bne	1b36c <argp_parse@@Base+0x4644>
   1b3d4:	and	r6, r6, #2
   1b3d8:	cmp	r6, #0
   1b3dc:	moveq	r9, r5
   1b3e0:	add	fp, fp, #1
   1b3e4:	movne	r3, #1
   1b3e8:	moveq	r3, #0
   1b3ec:	b	1b36c <argp_parse@@Base+0x4644>
   1b3f0:	mov	r1, r4
   1b3f4:	ldmib	sp, {r3, r4}
   1b3f8:	ldr	r5, [sp, #12]
   1b3fc:	uxtb	r6, r9
   1b400:	cmp	r3, #0
   1b404:	beq	1b4a0 <argp_parse@@Base+0x4778>
   1b408:	ldr	r3, [sp, #16]
   1b40c:	mov	r7, r3
   1b410:	lsl	r8, r3, #2
   1b414:	cmp	r9, #0
   1b418:	beq	1b57c <argp_parse@@Base+0x4854>
   1b41c:	lsl	sl, r6, #2
   1b420:	bl	11988 <__ctype_tolower_loc@plt>
   1b424:	ldr	r3, [r0]
   1b428:	ldr	r1, [r3, r8]
   1b42c:	ldr	r3, [r3, sl]
   1b430:	subs	r1, r1, r3
   1b434:	bne	1aeb0 <argp_parse@@Base+0x4188>
   1b438:	subs	r1, r6, r7
   1b43c:	bne	1aeb0 <argp_parse@@Base+0x4188>
   1b440:	adds	r1, r9, #0
   1b444:	ldr	r3, [sp, #4]
   1b448:	movne	r1, #1
   1b44c:	cmp	r3, #0
   1b450:	rsbeq	r1, r1, #0
   1b454:	rsbne	r1, r1, #1
   1b458:	cmp	r1, #0
   1b45c:	bne	1aeb0 <argp_parse@@Base+0x4188>
   1b460:	cmp	r3, #0
   1b464:	bne	1aeb0 <argp_parse@@Base+0x4188>
   1b468:	adds	r1, r5, #0
   1b46c:	movne	r1, #1
   1b470:	cmp	r4, #0
   1b474:	rsbeq	r1, r1, #0
   1b478:	rsbne	r1, r1, #1
   1b47c:	cmp	r1, #0
   1b480:	bne	1aeb0 <argp_parse@@Base+0x4188>
   1b484:	cmp	r4, #0
   1b488:	beq	1aeb0 <argp_parse@@Base+0x4188>
   1b48c:	mov	r1, r5
   1b490:	mov	r0, r4
   1b494:	add	sp, sp, #28
   1b498:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b49c:	b	118c8 <strcasecmp@plt>
   1b4a0:	cmp	r4, #0
   1b4a4:	beq	1b748 <argp_parse@@Base+0x4a20>
   1b4a8:	ldrb	r7, [r4]
   1b4ac:	lsl	r8, r7, #2
   1b4b0:	b	1b414 <argp_parse@@Base+0x46ec>
   1b4b4:	ldr	r3, [r7, #12]
   1b4b8:	tst	r3, #8
   1b4bc:	bne	1b694 <argp_parse@@Base+0x496c>
   1b4c0:	mov	r1, #1
   1b4c4:	b	1aeb0 <argp_parse@@Base+0x4188>
   1b4c8:	ldr	r1, [r7, #8]
   1b4cc:	ldr	r3, [r6, #8]
   1b4d0:	mvn	r2, r1
   1b4d4:	ldr	r0, [r7, #4]
   1b4d8:	lsr	r2, r2, #31
   1b4dc:	cmp	r2, r3, lsr #31
   1b4e0:	subne	r1, r3, r1
   1b4e4:	subeq	r1, r1, r3
   1b4e8:	ldr	r2, [r6, #4]
   1b4ec:	cmp	r1, #0
   1b4f0:	subeq	r1, r0, r2
   1b4f4:	beq	1ae70 <argp_parse@@Base+0x4148>
   1b4f8:	b	1aeb0 <argp_parse@@Base+0x4188>
   1b4fc:	ldr	r1, [r9, #8]
   1b500:	ldr	r3, [r8, #8]
   1b504:	mvn	r2, r1
   1b508:	ldr	r0, [r9, #4]
   1b50c:	lsr	r2, r2, #31
   1b510:	cmp	r2, r3, lsr #31
   1b514:	subne	r1, r3, r1
   1b518:	subeq	r1, r1, r3
   1b51c:	ldr	r2, [r8, #4]
   1b520:	cmp	r1, #0
   1b524:	subeq	r1, r0, r2
   1b528:	beq	1afd8 <argp_parse@@Base+0x42b0>
   1b52c:	b	1aeb0 <argp_parse@@Base+0x4188>
   1b530:	ldr	r1, [r5, #8]
   1b534:	ldr	r3, [r4, #8]
   1b538:	mvn	r2, r1
   1b53c:	ldr	r0, [r5, #4]
   1b540:	lsr	r2, r2, #31
   1b544:	cmp	r2, r3, lsr #31
   1b548:	subne	r1, r3, r1
   1b54c:	subeq	r1, r1, r3
   1b550:	ldr	r2, [r4, #4]
   1b554:	cmp	r1, #0
   1b558:	subeq	r1, r0, r2
   1b55c:	beq	1b048 <argp_parse@@Base+0x4320>
   1b560:	b	1aeb0 <argp_parse@@Base+0x4188>
   1b564:	ldr	r3, [sp, #4]
   1b568:	cmp	r3, #0
   1b56c:	beq	1b754 <argp_parse@@Base+0x4a2c>
   1b570:	ldr	r3, [sp, #16]
   1b574:	mov	r7, r3
   1b578:	lsl	r8, r3, #2
   1b57c:	cmp	r5, #0
   1b580:	beq	1b738 <argp_parse@@Base+0x4a10>
   1b584:	ldrb	r6, [r5]
   1b588:	mov	r9, r1
   1b58c:	b	1b41c <argp_parse@@Base+0x46f4>
   1b590:	ldr	r1, [r5, #8]
   1b594:	ldr	r3, [r4, #8]
   1b598:	mvn	r2, r1
   1b59c:	ldr	r0, [r5, #4]
   1b5a0:	lsr	r2, r2, #31
   1b5a4:	cmp	r2, r3, lsr #31
   1b5a8:	subne	r1, r3, r1
   1b5ac:	subeq	r1, r1, r3
   1b5b0:	ldr	r2, [r4, #4]
   1b5b4:	cmp	r1, #0
   1b5b8:	subeq	r1, r0, r2
   1b5bc:	beq	1aea8 <argp_parse@@Base+0x4180>
   1b5c0:	b	1aeb0 <argp_parse@@Base+0x4188>
   1b5c4:	ldr	r1, [r7, #8]
   1b5c8:	ldr	r3, [r6, #8]
   1b5cc:	mvn	r2, r1
   1b5d0:	ldr	r0, [r7, #4]
   1b5d4:	lsr	r2, r2, #31
   1b5d8:	cmp	r2, r3, lsr #31
   1b5dc:	subne	r1, r3, r1
   1b5e0:	subeq	r1, r1, r3
   1b5e4:	ldr	r2, [r6, #4]
   1b5e8:	cmp	r1, #0
   1b5ec:	subeq	r1, r0, r2
   1b5f0:	beq	1b010 <argp_parse@@Base+0x42e8>
   1b5f4:	b	1aeb0 <argp_parse@@Base+0x4188>
   1b5f8:	ldr	r1, [r9, #8]
   1b5fc:	ldr	r3, [r8, #8]
   1b600:	mvn	r2, r1
   1b604:	ldr	r0, [r9, #4]
   1b608:	lsr	r2, r2, #31
   1b60c:	cmp	r2, r3, lsr #31
   1b610:	subne	r1, r3, r1
   1b614:	subeq	r1, r1, r3
   1b618:	ldr	r2, [r8, #4]
   1b61c:	cmp	r1, #0
   1b620:	subeq	r1, r0, r2
   1b624:	beq	1ae38 <argp_parse@@Base+0x4110>
   1b628:	b	1aeb0 <argp_parse@@Base+0x4188>
   1b62c:	ldr	r1, [fp, #8]
   1b630:	ldr	r3, [sl, #8]
   1b634:	mvn	r2, r1
   1b638:	ldr	r0, [fp, #4]
   1b63c:	lsr	r2, r2, #31
   1b640:	cmp	r2, r3, lsr #31
   1b644:	subne	r1, r3, r1
   1b648:	subeq	r1, r1, r3
   1b64c:	ldr	r2, [sl, #4]
   1b650:	cmp	r1, #0
   1b654:	subeq	r1, r0, r2
   1b658:	beq	1afa0 <argp_parse@@Base+0x4278>
   1b65c:	b	1aeb0 <argp_parse@@Base+0x4188>
   1b660:	ldr	r1, [r5, #8]
   1b664:	ldr	r3, [r4, #8]
   1b668:	mvn	r2, r1
   1b66c:	ldr	r0, [r5, #4]
   1b670:	lsr	r2, r2, #31
   1b674:	cmp	r2, r3, lsr #31
   1b678:	subne	r1, r3, r1
   1b67c:	subeq	r1, r1, r3
   1b680:	ldr	r2, [r4, #4]
   1b684:	cmp	r1, #0
   1b688:	subeq	r1, r0, r2
   1b68c:	beq	1b0a0 <argp_parse@@Base+0x4378>
   1b690:	b	1aeb0 <argp_parse@@Base+0x4188>
   1b694:	cmp	r5, #0
   1b698:	beq	1b4c0 <argp_parse@@Base+0x4798>
   1b69c:	mov	r2, #1
   1b6a0:	b	1b1d0 <argp_parse@@Base+0x44a8>
   1b6a4:	ldr	r1, [fp, #8]
   1b6a8:	ldr	r3, [sl, #8]
   1b6ac:	mvn	r2, r1
   1b6b0:	ldr	r0, [fp, #4]
   1b6b4:	lsr	r2, r2, #31
   1b6b8:	cmp	r2, r3, lsr #31
   1b6bc:	subne	r1, r3, r1
   1b6c0:	subeq	r1, r1, r3
   1b6c4:	ldr	r2, [sl, #4]
   1b6c8:	cmp	r1, #0
   1b6cc:	subeq	r1, r0, r2
   1b6d0:	beq	1ae00 <argp_parse@@Base+0x40d8>
   1b6d4:	b	1aeb0 <argp_parse@@Base+0x4188>
   1b6d8:	ldr	r0, [r2, #8]
   1b6dc:	ldr	r1, [r3, #8]
   1b6e0:	mvn	ip, r0
   1b6e4:	ldr	r2, [r2, #4]
   1b6e8:	lsr	ip, ip, #31
   1b6ec:	cmp	ip, r1, lsr #31
   1b6f0:	subne	r1, r1, r0
   1b6f4:	subeq	r1, r0, r1
   1b6f8:	ldr	r3, [r3, #4]
   1b6fc:	cmp	r1, #0
   1b700:	subeq	r1, r2, r3
   1b704:	beq	1af68 <argp_parse@@Base+0x4240>
   1b708:	b	1aeb0 <argp_parse@@Base+0x4188>
   1b70c:	mov	r4, r1
   1b710:	b	1b108 <argp_parse@@Base+0x43e0>
   1b714:	mov	r5, sl
   1b718:	b	1b144 <argp_parse@@Base+0x441c>
   1b71c:	cmp	sl, #0
   1b720:	ldr	fp, [r6, #8]
   1b724:	streq	r1, [sp, #4]
   1b728:	beq	1b754 <argp_parse@@Base+0x4a2c>
   1b72c:	str	r9, [sp, #16]
   1b730:	str	r1, [sp, #4]
   1b734:	b	1b358 <argp_parse@@Base+0x4630>
   1b738:	mov	r9, r1
   1b73c:	mov	sl, r5
   1b740:	mov	r6, r5
   1b744:	b	1b420 <argp_parse@@Base+0x46f8>
   1b748:	mov	r8, r4
   1b74c:	mov	r7, r4
   1b750:	b	1b414 <argp_parse@@Base+0x46ec>
   1b754:	cmp	r4, #0
   1b758:	moveq	r8, r4
   1b75c:	moveq	r7, r4
   1b760:	beq	1b57c <argp_parse@@Base+0x4854>
   1b764:	mov	r9, r1
   1b768:	mov	r6, #0
   1b76c:	b	1b4a8 <argp_parse@@Base+0x4780>

0001b770 <argp_failure@@Base>:
   1b770:	push	{r3}		; (str r3, [sp, #-4]!)
   1b774:	push	{r4, r5, r6, r7, lr}
   1b778:	subs	r5, r0, #0
   1b77c:	sub	sp, sp, #200	; 0xc8
   1b780:	mov	r7, r1
   1b784:	mov	r6, r2
   1b788:	beq	1b8d8 <argp_failure@@Base+0x168>
   1b78c:	ldr	r3, [r5, #16]
   1b790:	tst	r3, #2
   1b794:	bne	1b8c8 <argp_failure@@Base+0x158>
   1b798:	ldr	r4, [r5, #44]	; 0x2c
   1b79c:	cmp	r4, #0
   1b7a0:	beq	1b8c8 <argp_failure@@Base+0x158>
   1b7a4:	mov	r0, r4
   1b7a8:	bl	11b5c <flockfile@plt>
   1b7ac:	ldr	r0, [r5, #40]	; 0x28
   1b7b0:	mov	r1, r4
   1b7b4:	bl	11730 <fputs_unlocked@plt>
   1b7b8:	ldr	r3, [sp, #220]	; 0xdc
   1b7bc:	cmp	r3, #0
   1b7c0:	beq	1b81c <argp_failure@@Base+0xac>
   1b7c4:	ldr	r3, [r4, #20]
   1b7c8:	ldr	r1, [r4, #24]
   1b7cc:	add	r2, sp, #224	; 0xe0
   1b7d0:	cmp	r3, r1
   1b7d4:	str	r2, [sp]
   1b7d8:	addcc	r1, r3, #1
   1b7dc:	movcc	r2, #58	; 0x3a
   1b7e0:	strcc	r1, [r4, #20]
   1b7e4:	strbcc	r2, [r3]
   1b7e8:	bcs	1b924 <argp_failure@@Base+0x1b4>
   1b7ec:	ldr	r3, [r4, #20]
   1b7f0:	ldr	r2, [r4, #24]
   1b7f4:	cmp	r3, r2
   1b7f8:	addcc	r1, r3, #1
   1b7fc:	movcc	r2, #32
   1b800:	strcc	r1, [r4, #20]
   1b804:	strbcc	r2, [r3]
   1b808:	bcs	1b914 <argp_failure@@Base+0x1a4>
   1b80c:	ldr	r2, [sp]
   1b810:	ldr	r1, [sp, #220]	; 0xdc
   1b814:	mov	r0, r4
   1b818:	bl	11afc <vfprintf@plt>
   1b81c:	cmp	r6, #0
   1b820:	beq	1b884 <argp_failure@@Base+0x114>
   1b824:	ldr	r3, [r4, #20]
   1b828:	ldr	r2, [r4, #24]
   1b82c:	cmp	r3, r2
   1b830:	addcc	r1, r3, #1
   1b834:	movcc	r2, #58	; 0x3a
   1b838:	strcc	r1, [r4, #20]
   1b83c:	strbcc	r2, [r3]
   1b840:	bcs	1b944 <argp_failure@@Base+0x1d4>
   1b844:	ldr	r3, [r4, #20]
   1b848:	ldr	r2, [r4, #24]
   1b84c:	cmp	r3, r2
   1b850:	addcc	r1, r3, #1
   1b854:	movcc	r2, #32
   1b858:	strcc	r1, [r4, #20]
   1b85c:	strbcc	r2, [r3]
   1b860:	bcs	1b934 <argp_failure@@Base+0x1c4>
   1b864:	mov	r2, #200	; 0xc8
   1b868:	mov	r1, sp
   1b86c:	mov	r0, r6
   1b870:	bl	11a3c <strerror_r@plt>
   1b874:	cmp	r0, #0
   1b878:	beq	1b954 <argp_failure@@Base+0x1e4>
   1b87c:	mov	r1, r4
   1b880:	bl	11730 <fputs_unlocked@plt>
   1b884:	ldr	r3, [r4, #20]
   1b888:	ldr	r2, [r4, #24]
   1b88c:	cmp	r3, r2
   1b890:	addcc	r1, r3, #1
   1b894:	movcc	r2, #10
   1b898:	strcc	r1, [r4, #20]
   1b89c:	strbcc	r2, [r3]
   1b8a0:	bcs	1b8fc <argp_failure@@Base+0x18c>
   1b8a4:	mov	r0, r4
   1b8a8:	bl	118d4 <funlockfile@plt>
   1b8ac:	cmp	r7, #0
   1b8b0:	beq	1b8c8 <argp_failure@@Base+0x158>
   1b8b4:	cmp	r5, #0
   1b8b8:	beq	1b90c <argp_failure@@Base+0x19c>
   1b8bc:	ldr	r3, [r5, #16]
   1b8c0:	tst	r3, #32
   1b8c4:	beq	1b90c <argp_failure@@Base+0x19c>
   1b8c8:	add	sp, sp, #200	; 0xc8
   1b8cc:	pop	{r4, r5, r6, r7, lr}
   1b8d0:	add	sp, sp, #4
   1b8d4:	bx	lr
   1b8d8:	ldr	r3, [pc, #140]	; 1b96c <argp_failure@@Base+0x1fc>
   1b8dc:	ldr	r4, [r3]
   1b8e0:	cmp	r4, #0
   1b8e4:	beq	1b8c8 <argp_failure@@Base+0x158>
   1b8e8:	mov	r0, r4
   1b8ec:	bl	11b5c <flockfile@plt>
   1b8f0:	ldr	r3, [pc, #120]	; 1b970 <argp_failure@@Base+0x200>
   1b8f4:	ldr	r0, [r3]
   1b8f8:	b	1b7b0 <argp_failure@@Base+0x40>
   1b8fc:	mov	r1, #10
   1b900:	mov	r0, r4
   1b904:	bl	11ab4 <__overflow@plt>
   1b908:	b	1b8a4 <argp_failure@@Base+0x134>
   1b90c:	mov	r0, r7
   1b910:	bl	119c4 <exit@plt>
   1b914:	mov	r1, #32
   1b918:	mov	r0, r4
   1b91c:	bl	11ab4 <__overflow@plt>
   1b920:	b	1b80c <argp_failure@@Base+0x9c>
   1b924:	mov	r1, #58	; 0x3a
   1b928:	mov	r0, r4
   1b92c:	bl	11ab4 <__overflow@plt>
   1b930:	b	1b7ec <argp_failure@@Base+0x7c>
   1b934:	mov	r1, #32
   1b938:	mov	r0, r4
   1b93c:	bl	11ab4 <__overflow@plt>
   1b940:	b	1b864 <argp_failure@@Base+0xf4>
   1b944:	mov	r1, #58	; 0x3a
   1b948:	mov	r0, r4
   1b94c:	bl	11ab4 <__overflow@plt>
   1b950:	b	1b844 <argp_failure@@Base+0xd4>
   1b954:	mov	r0, r6
   1b958:	bl	1197c <strerror@plt>
   1b95c:	ldr	r3, [pc, #16]	; 1b974 <argp_failure@@Base+0x204>
   1b960:	cmp	r0, #0
   1b964:	moveq	r0, r3
   1b968:	b	1b87c <argp_failure@@Base+0x10c>
   1b96c:			; <UNDEFINED> instruction: 0x000313b0
   1b970:	andeq	r1, r3, r8, lsr #7
   1b974:	muleq	r2, r0, r5
   1b978:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b97c:	add	fp, sp, #32
   1b980:	cmp	r2, #0
   1b984:	sub	sp, sp, #116	; 0x74
   1b988:	str	r2, [fp, #-136]	; 0xffffff78
   1b98c:	str	r0, [fp, #-116]	; 0xffffff8c
   1b990:	str	r1, [fp, #-104]	; 0xffffff98
   1b994:	str	r3, [fp, #-100]	; 0xffffff9c
   1b998:	beq	1babc <argp_failure@@Base+0x34c>
   1b99c:	ldr	r3, [pc, #4076]	; 1c990 <argp_failure@@Base+0x1220>
   1b9a0:	mov	r0, r2
   1b9a4:	mov	r4, r3
   1b9a8:	str	r3, [fp, #-96]	; 0xffffffa0
   1b9ac:	bl	11b5c <flockfile@plt>
   1b9b0:	ldr	sl, [r4, #36]	; 0x24
   1b9b4:	cmp	sl, #0
   1b9b8:	beq	1bed0 <argp_failure@@Base+0x760>
   1b9bc:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1b9c0:	mov	r3, #0
   1b9c4:	mov	r1, r3
   1b9c8:	ldr	r2, [r2, #32]
   1b9cc:	ldr	r0, [fp, #-136]	; 0xffffff78
   1b9d0:	bl	1e940 <argp_error@@Base+0x1994>
   1b9d4:	subs	sl, r0, #0
   1b9d8:	beq	1ccec <argp_failure@@Base+0x157c>
   1b9dc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1b9e0:	ands	r3, r3, #11
   1b9e4:	streq	r3, [fp, #-108]	; 0xffffff94
   1b9e8:	bne	1c2fc <argp_failure@@Base+0xb8c>
   1b9ec:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1b9f0:	ands	r4, r3, #3
   1b9f4:	bne	1c424 <argp_failure@@Base+0xcb4>
   1b9f8:	tst	r3, #16
   1b9fc:	bne	1c3fc <argp_failure@@Base+0xc8c>
   1ba00:	tst	r3, #4
   1ba04:	bne	1c2dc <argp_failure@@Base+0xb6c>
   1ba08:	tst	r3, #8
   1ba0c:	bne	1bac4 <argp_failure@@Base+0x354>
   1ba10:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1ba14:	tst	r3, #32
   1ba18:	bne	1be8c <argp_failure@@Base+0x71c>
   1ba1c:	tst	r3, #64	; 0x40
   1ba20:	beq	1ba6c <argp_failure@@Base+0x2fc>
   1ba24:	ldr	r5, [pc, #3944]	; 1c994 <argp_failure@@Base+0x1224>
   1ba28:	ldr	r2, [r5]
   1ba2c:	cmp	r2, #0
   1ba30:	beq	1ba6c <argp_failure@@Base+0x2fc>
   1ba34:	cmp	r4, #0
   1ba38:	beq	1ba60 <argp_failure@@Base+0x2f0>
   1ba3c:	ldr	r3, [sl, #28]
   1ba40:	ldr	r2, [sl, #32]
   1ba44:	cmp	r3, r2
   1ba48:	bcs	1ccbc <argp_failure@@Base+0x154c>
   1ba4c:	add	r1, r3, #1
   1ba50:	mov	r2, #10
   1ba54:	str	r1, [sl, #28]
   1ba58:	strb	r2, [r3]
   1ba5c:	ldr	r2, [r5]
   1ba60:	ldr	r1, [pc, #3888]	; 1c998 <argp_failure@@Base+0x1228>
   1ba64:	mov	r0, sl
   1ba68:	bl	1f068 <argp_error@@Base+0x20bc>
   1ba6c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ba70:	bl	118d4 <funlockfile@plt>
   1ba74:	ldr	r3, [fp, #-108]	; 0xffffff94
   1ba78:	cmp	r3, #0
   1ba7c:	beq	1bab4 <argp_failure@@Base+0x344>
   1ba80:	ldr	r0, [r3, #12]
   1ba84:	cmp	r0, #0
   1ba88:	beq	1baa0 <argp_failure@@Base+0x330>
   1ba8c:	ldr	r4, [r0, #24]
   1ba90:	bl	17ca4 <argp_parse@@Base+0xf7c>
   1ba94:	subs	r0, r4, #0
   1ba98:	bne	1ba8c <argp_failure@@Base+0x31c>
   1ba9c:	ldr	r3, [fp, #-108]	; 0xffffff94
   1baa0:	ldr	r3, [r3, #4]
   1baa4:	cmp	r3, #0
   1baa8:	bne	1beb8 <argp_failure@@Base+0x748>
   1baac:	ldr	r0, [fp, #-108]	; 0xffffff94
   1bab0:	bl	17ca4 <argp_parse@@Base+0xf7c>
   1bab4:	mov	r0, sl
   1bab8:	bl	1ef28 <argp_error@@Base+0x1f7c>
   1babc:	sub	sp, fp, #32
   1bac0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bac4:	ldr	r3, [fp, #-108]	; 0xffffff94
   1bac8:	ldr	r3, [r3, #4]
   1bacc:	cmp	r3, #0
   1bad0:	str	r3, [fp, #-112]	; 0xffffff90
   1bad4:	beq	1ba10 <argp_failure@@Base+0x2a0>
   1bad8:	cmp	r4, #0
   1badc:	beq	1cbcc <argp_failure@@Base+0x145c>
   1bae0:	ldr	r3, [sl, #28]
   1bae4:	ldr	r2, [sl, #32]
   1bae8:	cmp	r3, r2
   1baec:	bcs	1ce38 <argp_failure@@Base+0x16c8>
   1baf0:	add	r1, r3, #1
   1baf4:	mov	r2, #10
   1baf8:	str	r1, [sl, #28]
   1bafc:	strb	r2, [r3]
   1bb00:	ldr	r3, [fp, #-108]	; 0xffffff94
   1bb04:	ldr	r2, [fp, #-108]	; 0xffffff94
   1bb08:	ldr	r3, [r3, #4]
   1bb0c:	ldr	r8, [r2]
   1bb10:	str	r3, [fp, #-112]	; 0xffffff90
   1bb14:	cmp	r3, #0
   1bb18:	mov	r3, #0
   1bb1c:	str	r3, [fp, #-88]	; 0xffffffa8
   1bb20:	str	r3, [fp, #-84]	; 0xffffffac
   1bb24:	str	r3, [fp, #-80]	; 0xffffffb0
   1bb28:	beq	1be7c <argp_failure@@Base+0x70c>
   1bb2c:	ldr	ip, [sl, #28]
   1bb30:	ldr	r3, [sl, #24]
   1bb34:	ldr	lr, [sl, #16]
   1bb38:	sub	ip, ip, r3
   1bb3c:	cmp	ip, lr
   1bb40:	ldr	r6, [r8]
   1bb44:	ldr	r9, [r8, #8]
   1bb48:	bhi	1ca2c <argp_failure@@Base+0x12bc>
   1bb4c:	ldr	r3, [sl, #4]
   1bb50:	ldr	r0, [r6, #12]
   1bb54:	str	r3, [fp, #-120]	; 0xffffff88
   1bb58:	ldr	r3, [sl, #12]
   1bb5c:	mov	r7, #0
   1bb60:	str	r3, [fp, #-124]	; 0xffffff84
   1bb64:	sub	r3, fp, #88	; 0x58
   1bb68:	str	r7, [sl, #4]
   1bb6c:	str	r3, [fp, #-68]	; 0xffffffbc
   1bb70:	ldr	r3, [fp, #-104]	; 0xffffff98
   1bb74:	ands	r0, r0, #8
   1bb78:	mov	r2, #1
   1bb7c:	str	r2, [fp, #-64]	; 0xffffffc0
   1bb80:	str	r8, [fp, #-76]	; 0xffffffb4
   1bb84:	str	sl, [fp, #-72]	; 0xffffffb8
   1bb88:	str	r3, [fp, #-60]	; 0xffffffc4
   1bb8c:	strne	r7, [fp, #-132]	; 0xffffff7c
   1bb90:	bne	1bbcc <argp_failure@@Base+0x45c>
   1bb94:	ldr	r1, [r8, #4]
   1bb98:	cmp	r1, r7
   1bb9c:	beq	1bbc8 <argp_failure@@Base+0x458>
   1bba0:	add	r2, r6, #24
   1bba4:	ldr	r3, [r2, #-24]	; 0xffffffe8
   1bba8:	cmp	r3, #0
   1bbac:	beq	1bbbc <argp_failure@@Base+0x44c>
   1bbb0:	ldr	r3, [r2, #-12]
   1bbb4:	tst	r3, #2
   1bbb8:	beq	1ca70 <argp_failure@@Base+0x1300>
   1bbbc:	subs	r1, r1, #1
   1bbc0:	add	r2, r2, #24
   1bbc4:	bne	1bba4 <argp_failure@@Base+0x434>
   1bbc8:	str	r0, [fp, #-132]	; 0xffffff7c
   1bbcc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1bbd0:	cmp	ip, lr
   1bbd4:	ldr	r4, [r3, #8]
   1bbd8:	bhi	1ca18 <argp_failure@@Base+0x12a8>
   1bbdc:	str	r4, [sl, #12]
   1bbe0:	ldr	r5, [r8, #4]
   1bbe4:	cmp	r5, #0
   1bbe8:	beq	1bc6c <argp_failure@@Base+0x4fc>
   1bbec:	str	r8, [fp, #-128]	; 0xffffff80
   1bbf0:	mov	r4, r6
   1bbf4:	mov	r8, r9
   1bbf8:	b	1bc08 <argp_failure@@Base+0x498>
   1bbfc:	subs	r5, r5, #1
   1bc00:	add	r4, r4, #24
   1bc04:	beq	1bc60 <argp_failure@@Base+0x4f0>
   1bc08:	ldr	r7, [r4, #12]
   1bc0c:	tst	r7, #8
   1bc10:	bne	1bbfc <argp_failure@@Base+0x48c>
   1bc14:	ldr	r9, [r4, #4]
   1bc18:	sub	r2, r9, #1
   1bc1c:	cmp	r2, #254	; 0xfe
   1bc20:	bhi	1bbfc <argp_failure@@Base+0x48c>
   1bc24:	bl	119ac <__ctype_b_loc@plt>
   1bc28:	lsl	r2, r9, #1
   1bc2c:	ldr	r1, [r0]
   1bc30:	ldrh	r2, [r1, r2]
   1bc34:	tst	r2, #16384	; 0x4000
   1bc38:	beq	1bbfc <argp_failure@@Base+0x48c>
   1bc3c:	ldrb	r2, [r8]
   1bc40:	cmp	r9, r2
   1bc44:	bne	1bbfc <argp_failure@@Base+0x48c>
   1bc48:	tst	r7, #2
   1bc4c:	beq	1c790 <argp_failure@@Base+0x1020>
   1bc50:	subs	r5, r5, #1
   1bc54:	add	r8, r8, #1
   1bc58:	add	r4, r4, #24
   1bc5c:	bne	1bc08 <argp_failure@@Base+0x498>
   1bc60:	ldr	r0, [r6, #12]
   1bc64:	ldr	r8, [fp, #-128]	; 0xffffff80
   1bc68:	and	r0, r0, #8
   1bc6c:	ldr	r3, [sl, #28]
   1bc70:	ldr	r1, [sl, #24]
   1bc74:	cmp	r0, #0
   1bc78:	ldr	r2, [sl, #16]
   1bc7c:	sub	r3, r3, r1
   1bc80:	beq	1c6fc <argp_failure@@Base+0xf8c>
   1bc84:	cmp	r3, r2
   1bc88:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1bc8c:	ldr	r4, [r3, #16]
   1bc90:	bhi	1ca88 <argp_failure@@Base+0x1318>
   1bc94:	str	r4, [sl, #12]
   1bc98:	ldr	r5, [r8, #4]
   1bc9c:	cmp	r5, #0
   1bca0:	addne	r4, r6, #24
   1bca4:	bne	1bcb8 <argp_failure@@Base+0x548>
   1bca8:	b	1bd48 <argp_failure@@Base+0x5d8>
   1bcac:	subs	r5, r5, #1
   1bcb0:	add	r4, r4, #24
   1bcb4:	beq	1bd48 <argp_failure@@Base+0x5d8>
   1bcb8:	ldr	r3, [r4, #-24]	; 0xffffffe8
   1bcbc:	cmp	r3, #0
   1bcc0:	beq	1bcac <argp_failure@@Base+0x53c>
   1bcc4:	ldr	r3, [r4, #-12]
   1bcc8:	tst	r3, #2
   1bccc:	bne	1bcac <argp_failure@@Base+0x53c>
   1bcd0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1bcd4:	sub	r1, fp, #76	; 0x4c
   1bcd8:	ldr	r0, [r3, #16]
   1bcdc:	bl	1a690 <argp_parse@@Base+0x3968>
   1bce0:	ldr	r9, [r4, #-24]	; 0xffffffe8
   1bce4:	mov	r0, r9
   1bce8:	bl	119dc <strlen@plt>
   1bcec:	subs	r7, r0, #0
   1bcf0:	beq	1bcac <argp_failure@@Base+0x53c>
   1bcf4:	ldr	r2, [sl, #28]
   1bcf8:	ldr	lr, [sl, #32]
   1bcfc:	add	ip, r2, r7
   1bd00:	cmp	lr, ip
   1bd04:	mov	r1, r7
   1bd08:	mov	r0, sl
   1bd0c:	bcs	1bd20 <argp_failure@@Base+0x5b0>
   1bd10:	bl	1ef68 <argp_error@@Base+0x1fbc>
   1bd14:	cmp	r0, #0
   1bd18:	beq	1bcac <argp_failure@@Base+0x53c>
   1bd1c:	ldr	r2, [sl, #28]
   1bd20:	mov	r0, r2
   1bd24:	mov	r1, r9
   1bd28:	mov	r2, r7
   1bd2c:	bl	11808 <memcpy@plt>
   1bd30:	ldr	r2, [sl, #28]
   1bd34:	subs	r5, r5, #1
   1bd38:	add	r3, r2, r7
   1bd3c:	str	r3, [sl, #28]
   1bd40:	add	r4, r4, #24
   1bd44:	bne	1bcb8 <argp_failure@@Base+0x548>
   1bd48:	ldr	r3, [sl, #28]
   1bd4c:	ldr	r1, [sl, #24]
   1bd50:	ldr	r2, [sl, #16]
   1bd54:	sub	r3, r3, r1
   1bd58:	cmp	r3, r2
   1bd5c:	bhi	1c950 <argp_failure@@Base+0x11e0>
   1bd60:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1bd64:	mov	r3, #0
   1bd68:	cmp	r2, r3
   1bd6c:	str	r3, [sl, #4]
   1bd70:	beq	1c810 <argp_failure@@Base+0x10a0>
   1bd74:	ldr	r3, [r6, #12]
   1bd78:	tst	r3, #8
   1bd7c:	bne	1bda8 <argp_failure@@Base+0x638>
   1bd80:	ldr	r4, [r6, #4]
   1bd84:	sub	r3, r4, #1
   1bd88:	cmp	r3, #254	; 0xfe
   1bd8c:	bhi	1bda8 <argp_failure@@Base+0x638>
   1bd90:	bl	119ac <__ctype_b_loc@plt>
   1bd94:	lsl	r4, r4, #1
   1bd98:	ldr	r3, [r0]
   1bd9c:	ldrh	r3, [r3, r4]
   1bda0:	tst	r3, #16384	; 0x4000
   1bda4:	bne	1bdb4 <argp_failure@@Base+0x644>
   1bda8:	ldr	r3, [r6]
   1bdac:	cmp	r3, #0
   1bdb0:	beq	1ccd8 <argp_failure@@Base+0x1568>
   1bdb4:	ldr	r3, [sl, #28]
   1bdb8:	ldr	r1, [sl, #24]
   1bdbc:	ldr	r2, [sl, #16]
   1bdc0:	sub	r3, r3, r1
   1bdc4:	cmp	r3, r2
   1bdc8:	bhi	1c95c <argp_failure@@Base+0x11ec>
   1bdcc:	ldr	r3, [fp, #-120]	; 0xffffff88
   1bdd0:	str	r3, [sl, #4]
   1bdd4:	ldr	r3, [fp, #-112]	; 0xffffff90
   1bdd8:	add	r8, r8, #28
   1bddc:	subs	r3, r3, #1
   1bde0:	str	r3, [fp, #-112]	; 0xffffff90
   1bde4:	ldr	r3, [fp, #-124]	; 0xffffff84
   1bde8:	str	r3, [sl, #12]
   1bdec:	bne	1bb2c <argp_failure@@Base+0x3bc>
   1bdf0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1bdf4:	cmp	r3, #0
   1bdf8:	beq	1be7c <argp_failure@@Base+0x70c>
   1bdfc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1be00:	ldr	r3, [r3, #4]
   1be04:	cmp	r3, #0
   1be08:	beq	1be7c <argp_failure@@Base+0x70c>
   1be0c:	ldr	r1, [fp, #-104]	; 0xffffff98
   1be10:	cmp	r1, #0
   1be14:	beq	1ce9c <argp_failure@@Base+0x172c>
   1be18:	ldr	r4, [r1]
   1be1c:	cmp	r4, #0
   1be20:	beq	1cecc <argp_failure@@Base+0x175c>
   1be24:	ldr	r3, [r4, #20]
   1be28:	cmp	r3, #0
   1be2c:	beq	1cd9c <argp_failure@@Base+0x162c>
   1be30:	mov	r0, r4
   1be34:	bl	17b48 <argp_parse@@Base+0xe20>
   1be38:	ldr	r9, [pc, #3028]	; 1ca14 <argp_failure@@Base+0x12a4>
   1be3c:	ldr	r3, [r4, #20]
   1be40:	mov	r1, r9
   1be44:	mov	r2, r0
   1be48:	ldr	r0, [pc, #2892]	; 1c99c <argp_failure@@Base+0x122c>
   1be4c:	blx	r3
   1be50:	subs	r4, r0, #0
   1be54:	beq	1be7c <argp_failure@@Base+0x70c>
   1be58:	ldrb	r3, [r4]
   1be5c:	subs	r9, r4, r9
   1be60:	movne	r9, #1
   1be64:	cmp	r3, #0
   1be68:	bne	1cda4 <argp_failure@@Base+0x1634>
   1be6c:	cmp	r9, #0
   1be70:	beq	1be7c <argp_failure@@Base+0x70c>
   1be74:	mov	r0, r4
   1be78:	bl	17ca4 <argp_parse@@Base+0xf7c>
   1be7c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1be80:	mov	r4, #1
   1be84:	tst	r3, #32
   1be88:	beq	1ba1c <argp_failure@@Base+0x2ac>
   1be8c:	mov	r3, #0
   1be90:	str	r3, [sp]
   1be94:	str	sl, [sp, #4]
   1be98:	mov	r3, r4
   1be9c:	ldr	r1, [fp, #-104]	; 0xffffff98
   1bea0:	ldr	r0, [fp, #-116]	; 0xffffff8c
   1bea4:	mov	r2, #1
   1bea8:	bl	18c68 <argp_parse@@Base+0x1f40>
   1beac:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1beb0:	orr	r4, r4, r0
   1beb4:	b	1ba1c <argp_failure@@Base+0x2ac>
   1beb8:	ldr	r4, [fp, #-108]	; 0xffffff94
   1bebc:	ldr	r0, [r4]
   1bec0:	bl	17ca4 <argp_parse@@Base+0xf7c>
   1bec4:	ldr	r0, [r4, #8]
   1bec8:	bl	17ca4 <argp_parse@@Base+0xf7c>
   1becc:	b	1baac <argp_failure@@Base+0x33c>
   1bed0:	ldr	r0, [pc, #2760]	; 1c9a0 <argp_failure@@Base+0x1230>
   1bed4:	bl	11940 <getenv@plt>
   1bed8:	ldr	lr, [fp, #-96]	; 0xffffffa0
   1bedc:	sub	r3, fp, #76	; 0x4c
   1bee0:	mov	ip, r3
   1bee4:	str	r3, [fp, #-112]	; 0xffffff90
   1bee8:	mov	r5, r0
   1beec:	ldm	lr!, {r0, r1, r2, r3}
   1bef0:	cmp	r5, #0
   1bef4:	stmia	ip!, {r0, r1, r2, r3}
   1bef8:	ldm	lr!, {r0, r1, r2, r3}
   1befc:	stmia	ip!, {r0, r1, r2, r3}
   1bf00:	ldm	lr, {r0, r1}
   1bf04:	stm	ip, {r0, r1}
   1bf08:	beq	1b9bc <argp_failure@@Base+0x24c>
   1bf0c:	ldrb	r8, [r5]
   1bf10:	ldr	r9, [pc, #2700]	; 1c9a4 <argp_failure@@Base+0x1234>
   1bf14:	str	sl, [fp, #-120]	; 0xffffff88
   1bf18:	cmp	r8, #0
   1bf1c:	beq	1c0d0 <argp_failure@@Base+0x960>
   1bf20:	bl	119ac <__ctype_b_loc@plt>
   1bf24:	mov	r7, r0
   1bf28:	ldr	r0, [r0]
   1bf2c:	b	1bf34 <argp_failure@@Base+0x7c4>
   1bf30:	ldrb	r8, [r5, #1]!
   1bf34:	lsl	r3, r8, #1
   1bf38:	ldrh	r1, [r0, r3]
   1bf3c:	tst	r1, #8192	; 0x2000
   1bf40:	bne	1bf30 <argp_failure@@Base+0x7c0>
   1bf44:	ands	r2, r1, #1024	; 0x400
   1bf48:	beq	1c0c8 <argp_failure@@Base+0x958>
   1bf4c:	cmp	r8, #95	; 0x5f
   1bf50:	cmpne	r8, #45	; 0x2d
   1bf54:	lsl	r3, r1, #28
   1bf58:	moveq	r6, #1
   1bf5c:	movne	r6, #0
   1bf60:	orrs	r6, r6, r3, lsr #31
   1bf64:	beq	1cb6c <argp_failure@@Base+0x13fc>
   1bf68:	mov	r4, r5
   1bf6c:	ldrb	r3, [r4, #1]!
   1bf70:	cmp	r3, #95	; 0x5f
   1bf74:	cmpne	r3, #45	; 0x2d
   1bf78:	lsl	r1, r3, #1
   1bf7c:	moveq	r2, #1
   1bf80:	ldrh	r1, [r0, r1]
   1bf84:	movne	r2, #0
   1bf88:	lsl	ip, r1, #28
   1bf8c:	orrs	r2, r2, ip, lsr #31
   1bf90:	bne	1bf6c <argp_failure@@Base+0x7fc>
   1bf94:	tst	r1, #8192	; 0x2000
   1bf98:	sub	r6, r4, r5
   1bf9c:	beq	1bfb4 <argp_failure@@Base+0x844>
   1bfa0:	ldrb	r3, [r4, #1]!
   1bfa4:	lsl	r2, r3, #1
   1bfa8:	ldrh	r1, [r0, r2]
   1bfac:	tst	r1, #8192	; 0x2000
   1bfb0:	bne	1bfa0 <argp_failure@@Base+0x830>
   1bfb4:	cmp	r3, #44	; 0x2c
   1bfb8:	cmpne	r3, #0
   1bfbc:	beq	1c154 <argp_failure@@Base+0x9e4>
   1bfc0:	cmp	r3, #61	; 0x3d
   1bfc4:	beq	1c6cc <argp_failure@@Base+0xf5c>
   1bfc8:	tst	r1, #2048	; 0x800
   1bfcc:	bne	1c63c <argp_failure@@Base+0xecc>
   1bfd0:	ldr	r3, [fp, #-120]	; 0xffffff88
   1bfd4:	mov	sl, r3
   1bfd8:	str	r3, [fp, #-108]	; 0xffffff94
   1bfdc:	mov	r0, r9
   1bfe0:	bl	119dc <strlen@plt>
   1bfe4:	cmp	r6, r0
   1bfe8:	beq	1c174 <argp_failure@@Base+0xa04>
   1bfec:	ldr	r0, [pc, #2484]	; 1c9a8 <argp_failure@@Base+0x1238>
   1bff0:	bl	119dc <strlen@plt>
   1bff4:	cmp	r6, r0
   1bff8:	mov	r7, r0
   1bffc:	beq	1c208 <argp_failure@@Base+0xa98>
   1c000:	ldr	r0, [pc, #2556]	; 1ca04 <argp_failure@@Base+0x1294>
   1c004:	bl	119dc <strlen@plt>
   1c008:	cmp	r6, r0
   1c00c:	mov	r7, r0
   1c010:	beq	1c1bc <argp_failure@@Base+0xa4c>
   1c014:	ldr	r0, [pc, #2532]	; 1ca00 <argp_failure@@Base+0x1290>
   1c018:	bl	119dc <strlen@plt>
   1c01c:	cmp	r6, r0
   1c020:	mov	r7, r0
   1c024:	beq	1c228 <argp_failure@@Base+0xab8>
   1c028:	ldr	r0, [pc, #2500]	; 1c9f4 <argp_failure@@Base+0x1284>
   1c02c:	bl	119dc <strlen@plt>
   1c030:	cmp	r6, r0
   1c034:	mov	r7, r0
   1c038:	beq	1c248 <argp_failure@@Base+0xad8>
   1c03c:	ldr	r8, [pc, #2504]	; 1ca0c <argp_failure@@Base+0x129c>
   1c040:	mov	r0, r8
   1c044:	bl	119dc <strlen@plt>
   1c048:	cmp	r6, r0
   1c04c:	mov	r7, r0
   1c050:	beq	1c268 <argp_failure@@Base+0xaf8>
   1c054:	ldr	r8, [pc, #2476]	; 1ca08 <argp_failure@@Base+0x1298>
   1c058:	mov	r0, r8
   1c05c:	bl	119dc <strlen@plt>
   1c060:	cmp	r6, r0
   1c064:	mov	r7, r0
   1c068:	beq	1c284 <argp_failure@@Base+0xb14>
   1c06c:	ldr	r8, [pc, #2460]	; 1ca10 <argp_failure@@Base+0x12a0>
   1c070:	mov	r0, r8
   1c074:	bl	119dc <strlen@plt>
   1c078:	cmp	r6, r0
   1c07c:	mov	r7, r0
   1c080:	beq	1c2a0 <argp_failure@@Base+0xb30>
   1c084:	ldr	r8, [pc, #2336]	; 1c9ac <argp_failure@@Base+0x123c>
   1c088:	mov	r0, r8
   1c08c:	bl	119dc <strlen@plt>
   1c090:	cmp	r0, r6
   1c094:	beq	1c2bc <argp_failure@@Base+0xb4c>
   1c098:	mov	r2, #0
   1c09c:	str	r5, [sp, #4]
   1c0a0:	str	r6, [sp]
   1c0a4:	mov	r1, r2
   1c0a8:	ldr	r3, [pc, #2304]	; 1c9b0 <argp_failure@@Base+0x1240>
   1c0ac:	ldr	r0, [fp, #-104]	; 0xffffff98
   1c0b0:	bl	1b770 <argp_failure@@Base>
   1c0b4:	ldrb	r8, [r4]
   1c0b8:	cmp	r8, #44	; 0x2c
   1c0bc:	beq	1c1b0 <argp_failure@@Base+0xa40>
   1c0c0:	mov	r5, r4
   1c0c4:	b	1bf18 <argp_failure@@Base+0x7a8>
   1c0c8:	cmp	r8, #0
   1c0cc:	bne	1cc78 <argp_failure@@Base+0x1508>
   1c0d0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c0d4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1c0d8:	cmp	r3, r2
   1c0dc:	ble	1ce5c <argp_failure@@Base+0x16ec>
   1c0e0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1c0e4:	cmp	r3, r2
   1c0e8:	ble	1ccb4 <argp_failure@@Base+0x1544>
   1c0ec:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1c0f0:	cmp	r3, r2
   1c0f4:	ble	1cc90 <argp_failure@@Base+0x1520>
   1c0f8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c0fc:	cmp	r3, r2
   1c100:	ble	1ce94 <argp_failure@@Base+0x1724>
   1c104:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1c108:	cmp	r3, r2
   1c10c:	ble	1ce8c <argp_failure@@Base+0x171c>
   1c110:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c114:	cmp	r3, r2
   1c118:	ble	1cea8 <argp_failure@@Base+0x1738>
   1c11c:	ldr	lr, [fp, #-112]	; 0xffffff90
   1c120:	ldr	r3, [pc, #2152]	; 1c990 <argp_failure@@Base+0x1220>
   1c124:	mov	r4, #1
   1c128:	mov	r5, r3
   1c12c:	str	r3, [fp, #-96]	; 0xffffffa0
   1c130:	ldm	lr!, {r0, r1, r2, r3}
   1c134:	mov	ip, r5
   1c138:	stmia	ip!, {r0, r1, r2, r3}
   1c13c:	ldm	lr!, {r0, r1, r2, r3}
   1c140:	stmia	ip!, {r0, r1, r2, r3}
   1c144:	ldm	lr, {r0, r1}
   1c148:	stm	ip, {r0, r1}
   1c14c:	str	r4, [r5, #36]	; 0x24
   1c150:	b	1b9bc <argp_failure@@Base+0x24c>
   1c154:	cmp	r8, #110	; 0x6e
   1c158:	beq	1c69c <argp_failure@@Base+0xf2c>
   1c15c:	mov	sl, #1
   1c160:	mov	r0, r9
   1c164:	str	sl, [fp, #-108]	; 0xffffff94
   1c168:	bl	119dc <strlen@plt>
   1c16c:	cmp	r6, r0
   1c170:	bne	1bfec <argp_failure@@Base+0x87c>
   1c174:	mov	r2, r6
   1c178:	mov	r1, r9
   1c17c:	mov	r0, r5
   1c180:	bl	11bd4 <strncmp@plt>
   1c184:	cmp	r0, #0
   1c188:	bne	1bfec <argp_failure@@Base+0x87c>
   1c18c:	mov	r8, r9
   1c190:	ldrb	r3, [r8, #15]
   1c194:	ldrb	r8, [r4]
   1c198:	sub	r2, fp, #36	; 0x24
   1c19c:	add	r3, r2, r3
   1c1a0:	ldr	r2, [fp, #-108]	; 0xffffff94
   1c1a4:	cmp	r8, #44	; 0x2c
   1c1a8:	str	r2, [r3, #-40]	; 0xffffffd8
   1c1ac:	bne	1c0c0 <argp_failure@@Base+0x950>
   1c1b0:	ldrb	r8, [r4, #1]
   1c1b4:	add	r4, r4, #1
   1c1b8:	b	1c0c0 <argp_failure@@Base+0x950>
   1c1bc:	mov	r2, r0
   1c1c0:	ldr	r1, [pc, #2108]	; 1ca04 <argp_failure@@Base+0x1294>
   1c1c4:	mov	r0, r5
   1c1c8:	bl	11bd4 <strncmp@plt>
   1c1cc:	cmp	r0, #0
   1c1d0:	bne	1c014 <argp_failure@@Base+0x8a4>
   1c1d4:	ldr	r8, [pc, #2088]	; 1ca04 <argp_failure@@Base+0x1294>
   1c1d8:	cmp	sl, #0
   1c1dc:	beq	1c190 <argp_failure@@Base+0xa20>
   1c1e0:	ldrb	r2, [r8, #14]
   1c1e4:	cmp	r2, #0
   1c1e8:	bne	1c190 <argp_failure@@Base+0xa20>
   1c1ec:	str	r5, [sp, #4]
   1c1f0:	str	r7, [sp]
   1c1f4:	ldr	r3, [pc, #1976]	; 1c9b4 <argp_failure@@Base+0x1244>
   1c1f8:	mov	r1, r2
   1c1fc:	ldr	r0, [fp, #-104]	; 0xffffff98
   1c200:	bl	1b770 <argp_failure@@Base>
   1c204:	b	1c0b4 <argp_failure@@Base+0x944>
   1c208:	mov	r2, r0
   1c20c:	ldr	r1, [pc, #1940]	; 1c9a8 <argp_failure@@Base+0x1238>
   1c210:	mov	r0, r5
   1c214:	bl	11bd4 <strncmp@plt>
   1c218:	cmp	r0, #0
   1c21c:	bne	1c000 <argp_failure@@Base+0x890>
   1c220:	ldr	r8, [pc, #1920]	; 1c9a8 <argp_failure@@Base+0x1238>
   1c224:	b	1c1d8 <argp_failure@@Base+0xa68>
   1c228:	mov	r2, r0
   1c22c:	ldr	r1, [pc, #1996]	; 1ca00 <argp_failure@@Base+0x1290>
   1c230:	mov	r0, r5
   1c234:	bl	11bd4 <strncmp@plt>
   1c238:	cmp	r0, #0
   1c23c:	bne	1c028 <argp_failure@@Base+0x8b8>
   1c240:	ldr	r8, [pc, #1976]	; 1ca00 <argp_failure@@Base+0x1290>
   1c244:	b	1c1d8 <argp_failure@@Base+0xa68>
   1c248:	mov	r2, r0
   1c24c:	ldr	r1, [pc, #1952]	; 1c9f4 <argp_failure@@Base+0x1284>
   1c250:	mov	r0, r5
   1c254:	bl	11bd4 <strncmp@plt>
   1c258:	cmp	r0, #0
   1c25c:	bne	1c03c <argp_failure@@Base+0x8cc>
   1c260:	ldr	r8, [pc, #1932]	; 1c9f4 <argp_failure@@Base+0x1284>
   1c264:	b	1c1d8 <argp_failure@@Base+0xa68>
   1c268:	mov	r2, r0
   1c26c:	mov	r1, r8
   1c270:	mov	r0, r5
   1c274:	bl	11bd4 <strncmp@plt>
   1c278:	cmp	r0, #0
   1c27c:	bne	1c054 <argp_failure@@Base+0x8e4>
   1c280:	b	1c1d8 <argp_failure@@Base+0xa68>
   1c284:	mov	r2, r0
   1c288:	mov	r1, r8
   1c28c:	mov	r0, r5
   1c290:	bl	11bd4 <strncmp@plt>
   1c294:	cmp	r0, #0
   1c298:	bne	1c06c <argp_failure@@Base+0x8fc>
   1c29c:	b	1c1d8 <argp_failure@@Base+0xa68>
   1c2a0:	mov	r2, r0
   1c2a4:	mov	r1, r8
   1c2a8:	mov	r0, r5
   1c2ac:	bl	11bd4 <strncmp@plt>
   1c2b0:	cmp	r0, #0
   1c2b4:	bne	1c084 <argp_failure@@Base+0x914>
   1c2b8:	b	1c1d8 <argp_failure@@Base+0xa68>
   1c2bc:	mov	r2, r6
   1c2c0:	mov	r1, r8
   1c2c4:	mov	r0, r5
   1c2c8:	bl	11bd4 <strncmp@plt>
   1c2cc:	cmp	r0, #0
   1c2d0:	moveq	r7, r6
   1c2d4:	bne	1c098 <argp_failure@@Base+0x928>
   1c2d8:	b	1c1d8 <argp_failure@@Base+0xa68>
   1c2dc:	ldr	r3, [fp, #4]
   1c2e0:	ldr	r1, [pc, #1744]	; 1c9b8 <argp_failure@@Base+0x1248>
   1c2e4:	mov	r2, r3
   1c2e8:	mov	r0, sl
   1c2ec:	bl	1f068 <argp_error@@Base+0x20bc>
   1c2f0:	mov	r4, #1
   1c2f4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1c2f8:	b	1ba08 <argp_failure@@Base+0x298>
   1c2fc:	mov	r1, #0
   1c300:	ldr	r0, [fp, #-116]	; 0xffffff8c
   1c304:	bl	19214 <argp_parse@@Base+0x24ec>
   1c308:	ldr	r2, [r0, #4]
   1c30c:	ldr	r3, [r0]
   1c310:	cmp	r2, #0
   1c314:	str	r0, [fp, #-108]	; 0xffffff94
   1c318:	str	r2, [fp, #-120]	; 0xffffff88
   1c31c:	str	r3, [fp, #-112]	; 0xffffff90
   1c320:	sub	r6, r2, #1
   1c324:	beq	1b9ec <argp_failure@@Base+0x27c>
   1c328:	ldr	r5, [pc, #1676]	; 1c9bc <argp_failure@@Base+0x124c>
   1c32c:	mov	r8, r6
   1c330:	mov	r7, r3
   1c334:	ldm	r7, {r4, r9}
   1c338:	cmp	r9, #0
   1c33c:	sub	r9, r9, #1
   1c340:	beq	1c380 <argp_failure@@Base+0xc10>
   1c344:	add	r4, r4, #24
   1c348:	ldr	r3, [r4, #-24]	; 0xffffffe8
   1c34c:	mov	r1, r5
   1c350:	subs	r0, r3, #0
   1c354:	sub	r9, r9, #1
   1c358:	beq	1c374 <argp_failure@@Base+0xc04>
   1c35c:	ldr	r3, [r4, #-12]
   1c360:	tst	r3, #2
   1c364:	bne	1c374 <argp_failure@@Base+0xc04>
   1c368:	bl	11754 <strcmp@plt>
   1c36c:	cmp	r0, #0
   1c370:	beq	1cb14 <argp_failure@@Base+0x13a4>
   1c374:	cmn	r9, #1
   1c378:	add	r4, r4, #24
   1c37c:	bne	1c348 <argp_failure@@Base+0xbd8>
   1c380:	sub	r8, r8, #1
   1c384:	cmn	r8, #1
   1c388:	add	r7, r7, #28
   1c38c:	bne	1c334 <argp_failure@@Base+0xbc4>
   1c390:	ldr	r7, [fp, #-112]	; 0xffffff90
   1c394:	ldr	r9, [pc, #1572]	; 1c9c0 <argp_failure@@Base+0x1250>
   1c398:	ldm	r7, {r4, r5}
   1c39c:	cmp	r5, #0
   1c3a0:	sub	r5, r5, #1
   1c3a4:	beq	1c3e4 <argp_failure@@Base+0xc74>
   1c3a8:	add	r4, r4, #24
   1c3ac:	ldr	r3, [r4, #-24]	; 0xffffffe8
   1c3b0:	mov	r1, r9
   1c3b4:	subs	r0, r3, #0
   1c3b8:	sub	r5, r5, #1
   1c3bc:	beq	1c3d8 <argp_failure@@Base+0xc68>
   1c3c0:	ldr	r3, [r4, #-12]
   1c3c4:	tst	r3, #2
   1c3c8:	bne	1c3d8 <argp_failure@@Base+0xc68>
   1c3cc:	bl	11754 <strcmp@plt>
   1c3d0:	cmp	r0, #0
   1c3d4:	beq	1cacc <argp_failure@@Base+0x135c>
   1c3d8:	cmn	r5, #1
   1c3dc:	add	r4, r4, #24
   1c3e0:	bne	1c3ac <argp_failure@@Base+0xc3c>
   1c3e4:	cmp	r6, #0
   1c3e8:	add	r7, r7, #28
   1c3ec:	sub	r6, r6, #1
   1c3f0:	bne	1c398 <argp_failure@@Base+0xc28>
   1c3f4:	ldr	r1, [fp, #-120]	; 0xffffff88
   1c3f8:	b	1cae4 <argp_failure@@Base+0x1374>
   1c3fc:	mov	r2, #1
   1c400:	mov	r3, #0
   1c404:	stm	sp, {r2, sl}
   1c408:	ldr	r1, [fp, #-104]	; 0xffffff98
   1c40c:	mov	r2, r3
   1c410:	ldr	r0, [fp, #-116]	; 0xffffff8c
   1c414:	bl	18c68 <argp_parse@@Base+0x1f40>
   1c418:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1c41c:	orr	r4, r4, r0
   1c420:	b	1ba00 <argp_failure@@Base+0x290>
   1c424:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1c428:	mov	r4, #1
   1c42c:	ldr	r8, [pc, #1424]	; 1c9c4 <argp_failure@@Base+0x1254>
   1c430:	ldr	r1, [r3, #16]
   1c434:	ldr	r0, [r3, #8]
   1c438:	bl	19c14 <argp_parse@@Base+0x2eec>
   1c43c:	mov	r1, #0
   1c440:	mov	r6, r4
   1c444:	add	r3, r0, #14
   1c448:	bic	r3, r3, #7
   1c44c:	sub	sp, sp, r3
   1c450:	add	r7, sp, #8
   1c454:	mov	r2, r0
   1c458:	mov	r0, r7
   1c45c:	bl	11a54 <memset@plt>
   1c460:	sub	r3, fp, #76	; 0x4c
   1c464:	str	r3, [fp, #-112]	; 0xffffff90
   1c468:	str	r7, [fp, #-120]	; 0xffffff88
   1c46c:	ldr	r5, [fp, #-96]	; 0xffffffa0
   1c470:	b	1c590 <argp_failure@@Base+0xe20>
   1c474:	cmp	r4, #0
   1c478:	ldr	r3, [fp, #-120]	; 0xffffff88
   1c47c:	ldr	r7, [sl, #12]
   1c480:	ldrne	r2, [pc, #1344]	; 1c9c8 <argp_failure@@Base+0x1258>
   1c484:	str	r9, [sl, #12]
   1c488:	ldreq	r2, [pc, #1340]	; 1c9cc <argp_failure@@Base+0x125c>
   1c48c:	str	r3, [fp, #-76]	; 0xffffffb4
   1c490:	mov	r1, r8
   1c494:	ldr	r3, [fp, #4]
   1c498:	mov	r0, sl
   1c49c:	bl	1f068 <argp_error@@Base+0x20bc>
   1c4a0:	ldr	r3, [sl, #28]
   1c4a4:	ldr	r1, [sl, #24]
   1c4a8:	ldr	r2, [sl, #16]
   1c4ac:	sub	r3, r3, r1
   1c4b0:	cmp	r3, r2
   1c4b4:	ldr	r9, [r5, #28]
   1c4b8:	bhi	1c608 <argp_failure@@Base+0xe98>
   1c4bc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1c4c0:	ldr	r4, [sl, #4]
   1c4c4:	tst	r3, #2
   1c4c8:	str	r9, [sl, #4]
   1c4cc:	beq	1c614 <argp_failure@@Base+0xea4>
   1c4d0:	ldr	r3, [fp, #-108]	; 0xffffff94
   1c4d4:	ldr	r3, [r3, #4]
   1c4d8:	cmp	r3, #0
   1c4dc:	beq	1c52c <argp_failure@@Base+0xdbc>
   1c4e0:	ldr	ip, [sl, #28]
   1c4e4:	ldr	r2, [sl, #32]
   1c4e8:	add	r3, ip, #12
   1c4ec:	cmp	r2, r3
   1c4f0:	bcs	1c50c <argp_failure@@Base+0xd9c>
   1c4f4:	mov	r1, #12
   1c4f8:	mov	r0, sl
   1c4fc:	bl	1ef68 <argp_error@@Base+0x1fbc>
   1c500:	cmp	r0, #0
   1c504:	beq	1c52c <argp_failure@@Base+0xdbc>
   1c508:	ldr	ip, [sl, #28]
   1c50c:	ldr	r3, [pc, #1212]	; 1c9d0 <argp_failure@@Base+0x1260>
   1c510:	ldm	r3!, {r0, r1, r2}
   1c514:	str	r0, [ip]
   1c518:	str	r1, [ip, #4]
   1c51c:	str	r2, [ip, #8]
   1c520:	ldr	r3, [sl, #28]
   1c524:	add	r3, r3, #12
   1c528:	str	r3, [sl, #28]
   1c52c:	mov	r3, r6
   1c530:	ldr	r1, [fp, #-104]	; 0xffffff98
   1c534:	str	sl, [sp]
   1c538:	ldr	r2, [fp, #-112]	; 0xffffff90
   1c53c:	ldr	r0, [fp, #-116]	; 0xffffff8c
   1c540:	bl	19934 <argp_parse@@Base+0x2c0c>
   1c544:	ldr	r3, [sl, #28]
   1c548:	ldr	r1, [sl, #24]
   1c54c:	sub	r1, r3, r1
   1c550:	mov	r9, r0
   1c554:	ldr	r0, [sl, #16]
   1c558:	cmp	r1, r0
   1c55c:	strls	r7, [sl, #12]
   1c560:	bhi	1c5d4 <argp_failure@@Base+0xe64>
   1c564:	ldr	r1, [sl, #32]
   1c568:	str	r4, [sl, #4]
   1c56c:	cmp	r1, r3
   1c570:	bls	1c5b8 <argp_failure@@Base+0xe48>
   1c574:	add	r1, r3, #1
   1c578:	mov	r2, #10
   1c57c:	str	r1, [sl, #28]
   1c580:	strb	r2, [r3]
   1c584:	cmp	r9, #0
   1c588:	mov	r4, #0
   1c58c:	beq	1c630 <argp_failure@@Base+0xec0>
   1c590:	ldr	r3, [sl, #28]
   1c594:	ldr	r1, [sl, #24]
   1c598:	ldr	r2, [sl, #16]
   1c59c:	sub	r3, r3, r1
   1c5a0:	cmp	r3, r2
   1c5a4:	ldr	r9, [r5, #28]
   1c5a8:	bls	1c474 <argp_failure@@Base+0xd04>
   1c5ac:	mov	r0, sl
   1c5b0:	bl	1e9bc <argp_error@@Base+0x1a10>
   1c5b4:	b	1c474 <argp_failure@@Base+0xd04>
   1c5b8:	mov	r1, r6
   1c5bc:	mov	r0, sl
   1c5c0:	bl	1ef68 <argp_error@@Base+0x1fbc>
   1c5c4:	cmp	r0, #0
   1c5c8:	beq	1c584 <argp_failure@@Base+0xe14>
   1c5cc:	ldr	r3, [sl, #28]
   1c5d0:	b	1c574 <argp_failure@@Base+0xe04>
   1c5d4:	mov	r0, sl
   1c5d8:	bl	1e9bc <argp_error@@Base+0x1a10>
   1c5dc:	ldr	r3, [sl, #28]
   1c5e0:	ldr	r1, [sl, #24]
   1c5e4:	ldr	r0, [sl, #16]
   1c5e8:	sub	r1, r3, r1
   1c5ec:	cmp	r1, r0
   1c5f0:	str	r7, [sl, #12]
   1c5f4:	bls	1c564 <argp_failure@@Base+0xdf4>
   1c5f8:	mov	r0, sl
   1c5fc:	bl	1e9bc <argp_error@@Base+0x1a10>
   1c600:	ldr	r3, [sl, #28]
   1c604:	b	1c564 <argp_failure@@Base+0xdf4>
   1c608:	mov	r0, sl
   1c60c:	bl	1e9bc <argp_error@@Base+0x1a10>
   1c610:	b	1c4bc <argp_failure@@Base+0xd4c>
   1c614:	mov	r1, sl
   1c618:	ldr	r0, [fp, #-108]	; 0xffffff94
   1c61c:	bl	19f60 <argp_parse@@Base+0x3238>
   1c620:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1c624:	orr	r3, r3, #2
   1c628:	str	r3, [fp, #-100]	; 0xffffff9c
   1c62c:	b	1c52c <argp_failure@@Base+0xdbc>
   1c630:	mov	r4, #1
   1c634:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1c638:	b	1b9f8 <argp_failure@@Base+0x288>
   1c63c:	mov	r2, #10
   1c640:	mov	r1, #0
   1c644:	mov	r0, r4
   1c648:	bl	11760 <strtol@plt>
   1c64c:	ldrb	r3, [r4]
   1c650:	ldr	r2, [r7]
   1c654:	lsl	r3, r3, #1
   1c658:	ldrh	r3, [r2, r3]
   1c65c:	tst	r3, #2048	; 0x800
   1c660:	str	r0, [fp, #-108]	; 0xffffff94
   1c664:	beq	1c68c <argp_failure@@Base+0xf1c>
   1c668:	ldrb	r3, [r4, #1]!
   1c66c:	lsl	r3, r3, #1
   1c670:	ldrh	r3, [r2, r3]
   1c674:	tst	r3, #2048	; 0x800
   1c678:	bne	1c668 <argp_failure@@Base+0xef8>
   1c67c:	b	1c68c <argp_failure@@Base+0xf1c>
   1c680:	ldrb	r3, [r4, #1]!
   1c684:	lsl	r3, r3, #1
   1c688:	ldrh	r3, [r2, r3]
   1c68c:	tst	r3, #8192	; 0x2000
   1c690:	bne	1c680 <argp_failure@@Base+0xf10>
   1c694:	ldr	sl, [fp, #-120]	; 0xffffff88
   1c698:	b	1bfdc <argp_failure@@Base+0x86c>
   1c69c:	ldrb	r3, [r5, #1]
   1c6a0:	cmp	r3, #111	; 0x6f
   1c6a4:	bne	1c15c <argp_failure@@Base+0x9ec>
   1c6a8:	ldrb	r3, [r5, #2]
   1c6ac:	cmp	r3, #45	; 0x2d
   1c6b0:	bne	1c15c <argp_failure@@Base+0x9ec>
   1c6b4:	ldr	r3, [fp, #-120]	; 0xffffff88
   1c6b8:	add	r5, r5, #3
   1c6bc:	sub	r6, r6, #3
   1c6c0:	str	r3, [fp, #-108]	; 0xffffff94
   1c6c4:	mov	sl, #1
   1c6c8:	b	1bfdc <argp_failure@@Base+0x86c>
   1c6cc:	ldrb	r3, [r4, #1]
   1c6d0:	add	r4, r4, #1
   1c6d4:	lsl	r3, r3, #1
   1c6d8:	ldrh	r1, [r0, r3]
   1c6dc:	tst	r1, #8192	; 0x2000
   1c6e0:	beq	1bfc8 <argp_failure@@Base+0x858>
   1c6e4:	ldrb	r3, [r4, #1]!
   1c6e8:	lsl	r3, r3, #1
   1c6ec:	ldrh	r1, [r0, r3]
   1c6f0:	tst	r1, #8192	; 0x2000
   1c6f4:	bne	1c6e4 <argp_failure@@Base+0xf74>
   1c6f8:	b	1bfc8 <argp_failure@@Base+0x858>
   1c6fc:	cmp	r3, r2
   1c700:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1c704:	ldr	r4, [r3, #12]
   1c708:	bhi	1ca7c <argp_failure@@Base+0x130c>
   1c70c:	str	r4, [sl, #12]
   1c710:	ldr	r5, [r8, #4]
   1c714:	cmp	r5, #0
   1c718:	beq	1bd48 <argp_failure@@Base+0x5d8>
   1c71c:	add	r4, r6, #24
   1c720:	ldr	r7, [fp, #-96]	; 0xffffffa0
   1c724:	b	1c734 <argp_failure@@Base+0xfc4>
   1c728:	subs	r5, r5, #1
   1c72c:	add	r4, r4, #24
   1c730:	beq	1bd48 <argp_failure@@Base+0x5d8>
   1c734:	ldr	r3, [r4, #-24]	; 0xffffffe8
   1c738:	cmp	r3, #0
   1c73c:	beq	1c728 <argp_failure@@Base+0xfb8>
   1c740:	ldr	r3, [r4, #-12]
   1c744:	tst	r3, #2
   1c748:	bne	1c728 <argp_failure@@Base+0xfb8>
   1c74c:	sub	r1, fp, #76	; 0x4c
   1c750:	ldr	r0, [r7, #12]
   1c754:	bl	1a690 <argp_parse@@Base+0x3968>
   1c758:	ldr	r2, [r4, #-24]	; 0xffffffe8
   1c75c:	ldr	r1, [pc, #624]	; 1c9d4 <argp_failure@@Base+0x1264>
   1c760:	mov	r0, sl
   1c764:	bl	1f068 <argp_error@@Base+0x20bc>
   1c768:	ldr	r3, [r6, #8]
   1c76c:	ldr	r1, [pc, #612]	; 1c9d8 <argp_failure@@Base+0x1268>
   1c770:	subs	r2, r3, #0
   1c774:	mov	r0, sl
   1c778:	beq	1c728 <argp_failure@@Base+0xfb8>
   1c77c:	ldr	ip, [r6, #12]
   1c780:	tst	ip, #1
   1c784:	ldrne	r1, [pc, #592]	; 1c9dc <argp_failure@@Base+0x126c>
   1c788:	bl	1f068 <argp_error@@Base+0x20bc>
   1c78c:	b	1c728 <argp_failure@@Base+0xfb8>
   1c790:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1c794:	sub	r1, fp, #76	; 0x4c
   1c798:	ldr	r0, [r3, #8]
   1c79c:	bl	1a690 <argp_parse@@Base+0x3968>
   1c7a0:	ldr	r2, [sl, #28]
   1c7a4:	ldr	r1, [sl, #32]
   1c7a8:	cmp	r2, r1
   1c7ac:	bcs	1cab0 <argp_failure@@Base+0x1340>
   1c7b0:	add	r1, r2, #1
   1c7b4:	mov	r3, #45	; 0x2d
   1c7b8:	str	r1, [sl, #28]
   1c7bc:	strb	r3, [r2]
   1c7c0:	ldr	r2, [sl, #28]
   1c7c4:	ldr	r1, [sl, #32]
   1c7c8:	ldrb	r7, [r8]
   1c7cc:	cmp	r2, r1
   1c7d0:	bcs	1ca94 <argp_failure@@Base+0x1324>
   1c7d4:	add	r1, r2, #1
   1c7d8:	str	r1, [sl, #28]
   1c7dc:	strb	r7, [r2]
   1c7e0:	ldr	r3, [fp, #-132]	; 0xffffff7c
   1c7e4:	cmp	r3, #0
   1c7e8:	beq	1ca48 <argp_failure@@Base+0x12d8>
   1c7ec:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1c7f0:	ldr	r2, [r3]
   1c7f4:	cmp	r2, #0
   1c7f8:	bne	1ca48 <argp_failure@@Base+0x12d8>
   1c7fc:	ldr	r2, [r6, #8]
   1c800:	cmp	r2, #0
   1c804:	movne	r3, #1
   1c808:	strne	r3, [fp, #-80]	; 0xffffffb0
   1c80c:	b	1bc50 <argp_failure@@Base+0x4e0>
   1c810:	ldr	r5, [r8, #20]
   1c814:	ldr	r9, [r6, #16]
   1c818:	cmp	r5, #0
   1c81c:	beq	1cb38 <argp_failure@@Base+0x13c8>
   1c820:	ldr	r3, [r5, #20]
   1c824:	cmp	r3, #0
   1c828:	beq	1cb38 <argp_failure@@Base+0x13c8>
   1c82c:	ldr	r1, [fp, #-104]	; 0xffffff98
   1c830:	mov	r0, r5
   1c834:	ldr	r4, [r6, #4]
   1c838:	bl	17b48 <argp_parse@@Base+0xe20>
   1c83c:	ldr	r3, [r5, #20]
   1c840:	mov	r1, r9
   1c844:	mov	r2, r0
   1c848:	mov	r0, r4
   1c84c:	blx	r3
   1c850:	mov	r4, r0
   1c854:	cmp	r4, #0
   1c858:	beq	1c90c <argp_failure@@Base+0x119c>
   1c85c:	ldrb	r3, [r4]
   1c860:	cmp	r3, #0
   1c864:	beq	1c8fc <argp_failure@@Base+0x118c>
   1c868:	ldr	r3, [sl, #28]
   1c86c:	ldr	r2, [sl, #24]
   1c870:	ldr	r1, [sl, #16]
   1c874:	sub	r2, r3, r2
   1c878:	cmp	r2, r1
   1c87c:	bhi	1cc04 <argp_failure@@Base+0x1494>
   1c880:	ldr	r6, [sl, #20]
   1c884:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1c888:	bic	r6, r6, r6, asr #31
   1c88c:	ldr	r5, [r2, #20]
   1c890:	mov	r7, r5
   1c894:	str	r5, [sl, #4]
   1c898:	add	r2, r5, #3
   1c89c:	cmp	r2, r6
   1c8a0:	str	r7, [sl, #12]
   1c8a4:	bcs	1cb78 <argp_failure@@Base+0x1408>
   1c8a8:	ldr	r2, [sl, #32]
   1c8ac:	cmp	r2, r3
   1c8b0:	bls	1cd80 <argp_failure@@Base+0x1610>
   1c8b4:	add	r1, r3, #1
   1c8b8:	mov	r2, #10
   1c8bc:	str	r1, [sl, #28]
   1c8c0:	strb	r2, [r3]
   1c8c4:	mov	r0, r4
   1c8c8:	bl	119dc <strlen@plt>
   1c8cc:	subs	r5, r0, #0
   1c8d0:	beq	1c8fc <argp_failure@@Base+0x118c>
   1c8d4:	ldr	r0, [sl, #28]
   1c8d8:	ldr	r2, [sl, #32]
   1c8dc:	add	r3, r0, r5
   1c8e0:	cmp	r2, r3
   1c8e4:	bcs	1cbe8 <argp_failure@@Base+0x1478>
   1c8e8:	mov	r1, r5
   1c8ec:	mov	r0, sl
   1c8f0:	bl	1ef68 <argp_error@@Base+0x1fbc>
   1c8f4:	cmp	r0, #0
   1c8f8:	bne	1cbe4 <argp_failure@@Base+0x1474>
   1c8fc:	cmp	r9, r4
   1c900:	beq	1c90c <argp_failure@@Base+0x119c>
   1c904:	mov	r0, r4
   1c908:	bl	17ca4 <argp_parse@@Base+0xf7c>
   1c90c:	ldr	r3, [sl, #28]
   1c910:	ldr	r2, [sl, #24]
   1c914:	ldr	r1, [sl, #16]
   1c918:	sub	r2, r3, r2
   1c91c:	cmp	r2, r1
   1c920:	bhi	1cb5c <argp_failure@@Base+0x13ec>
   1c924:	ldr	r1, [sl, #32]
   1c928:	mov	r2, #0
   1c92c:	cmp	r1, r3
   1c930:	str	r2, [sl, #4]
   1c934:	bls	1cb40 <argp_failure@@Base+0x13d0>
   1c938:	add	r1, r3, #1
   1c93c:	mov	r2, #10
   1c940:	str	r1, [sl, #28]
   1c944:	strb	r2, [r3]
   1c948:	str	r8, [fp, #-88]	; 0xffffffa8
   1c94c:	b	1bdb4 <argp_failure@@Base+0x644>
   1c950:	mov	r0, sl
   1c954:	bl	1e9bc <argp_error@@Base+0x1a10>
   1c958:	b	1bd60 <argp_failure@@Base+0x5f0>
   1c95c:	mov	r0, sl
   1c960:	bl	1e9bc <argp_error@@Base+0x1a10>
   1c964:	ldr	r2, [fp, #-120]	; 0xffffff88
   1c968:	ldr	r3, [sl, #28]
   1c96c:	ldr	r1, [sl, #24]
   1c970:	str	r2, [sl, #4]
   1c974:	ldr	r2, [sl, #16]
   1c978:	sub	r3, r3, r1
   1c97c:	cmp	r3, r2
   1c980:	bls	1bdd4 <argp_failure@@Base+0x664>
   1c984:	mov	r0, sl
   1c988:	bl	1e9bc <argp_error@@Base+0x1a10>
   1c98c:	b	1bdd4 <argp_failure@@Base+0x664>
   1c990:	andeq	r1, r3, r0, ror r3
   1c994:	andeq	r1, r3, r4, lsl r6
   1c998:	andeq	r0, r2, r8, asr r7
   1c99c:	andeq	r0, r0, #5
   1c9a0:	andeq	r0, r2, ip, lsl r6
   1c9a4:	andeq	r0, r2, r8, ror #7
   1c9a8:	strdeq	r0, [r2], -r8
   1c9ac:	andeq	r0, r2, r8, ror #8
   1c9b0:	andeq	r0, r2, ip, asr r6
   1c9b4:	andeq	r0, r2, ip, lsr #12
   1c9b8:	andeq	r0, r2, r8, lsl #14
   1c9bc:			; <UNDEFINED> instruction: 0x0001f3b4
   1c9c0:	andeq	pc, r1, r8, ror #30
   1c9c4:	andeq	r0, r2, r8, ror #13
   1c9c8:	andeq	r0, r2, r0, ror #13
   1c9cc:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   1c9d0:	strdeq	r0, [r2], -r8
   1c9d4:	andeq	r0, r2, r0, asr #14
   1c9d8:	andeq	r0, r2, r0, asr r7
   1c9dc:	andeq	r0, r2, r8, asr #14
   1c9e0:			; <UNDEFINED> instruction: 0x0001f8b8
   1c9e4:	andeq	pc, r1, r8, lsr pc	; <UNPREDICTABLE>
   1c9e8:	andeq	sl, r1, r0, asr #25
   1c9ec:	andeq	r0, r2, r4, asr r7
   1c9f0:	andeq	r0, r2, r4, lsl #13
   1c9f4:	andeq	r0, r2, r8, lsr #8
   1c9f8:	ldrdeq	r0, [r2], -r8
   1c9fc:	andeq	r0, r2, r4, lsr #13
   1ca00:	andeq	r0, r2, r8, lsl r4
   1ca04:	andeq	r0, r2, r8, lsl #8
   1ca08:	andeq	r0, r2, r8, asr #8
   1ca0c:	andeq	r0, r2, r8, lsr r4
   1ca10:	andeq	r0, r2, r8, asr r4
   1ca14:	andeq	r0, r2, r8, lsr #11
   1ca18:	mov	r0, sl
   1ca1c:	bl	1e9bc <argp_error@@Base+0x1a10>
   1ca20:	ldr	r0, [r6, #12]
   1ca24:	and	r0, r0, #8
   1ca28:	b	1bbdc <argp_failure@@Base+0x46c>
   1ca2c:	mov	r0, sl
   1ca30:	bl	1e9bc <argp_error@@Base+0x1a10>
   1ca34:	ldr	ip, [sl, #28]
   1ca38:	ldr	r2, [sl, #24]
   1ca3c:	ldr	lr, [sl, #16]
   1ca40:	sub	ip, ip, r2
   1ca44:	b	1bb4c <argp_failure@@Base+0x3dc>
   1ca48:	ldr	r2, [r6, #8]
   1ca4c:	cmp	r2, #0
   1ca50:	beq	1bc50 <argp_failure@@Base+0x4e0>
   1ca54:	ldr	r1, [r6, #12]
   1ca58:	mov	r0, sl
   1ca5c:	tst	r1, #1
   1ca60:	ldrne	r1, [pc, #-136]	; 1c9e0 <argp_failure@@Base+0x1270>
   1ca64:	ldreq	r1, [pc, #-136]	; 1c9e4 <argp_failure@@Base+0x1274>
   1ca68:	bl	1f068 <argp_error@@Base+0x20bc>
   1ca6c:	b	1bc50 <argp_failure@@Base+0x4e0>
   1ca70:	mov	r3, #1
   1ca74:	str	r3, [fp, #-132]	; 0xffffff7c
   1ca78:	b	1bbcc <argp_failure@@Base+0x45c>
   1ca7c:	mov	r0, sl
   1ca80:	bl	1e9bc <argp_error@@Base+0x1a10>
   1ca84:	b	1c70c <argp_failure@@Base+0xf9c>
   1ca88:	mov	r0, sl
   1ca8c:	bl	1e9bc <argp_error@@Base+0x1a10>
   1ca90:	b	1bc94 <argp_failure@@Base+0x524>
   1ca94:	mov	r1, #1
   1ca98:	mov	r0, sl
   1ca9c:	bl	1ef68 <argp_error@@Base+0x1fbc>
   1caa0:	cmp	r0, #0
   1caa4:	beq	1c7e0 <argp_failure@@Base+0x1070>
   1caa8:	ldr	r2, [sl, #28]
   1caac:	b	1c7d4 <argp_failure@@Base+0x1064>
   1cab0:	mov	r1, #1
   1cab4:	mov	r0, sl
   1cab8:	bl	1ef68 <argp_error@@Base+0x1fbc>
   1cabc:	cmp	r0, #0
   1cac0:	beq	1c7c0 <argp_failure@@Base+0x1050>
   1cac4:	ldr	r2, [sl, #28]
   1cac8:	b	1c7b0 <argp_failure@@Base+0x1040>
   1cacc:	mvn	r3, #0
   1cad0:	str	r3, [r7, #12]
   1cad4:	ldr	r3, [fp, #-108]	; 0xffffff94
   1cad8:	ldr	r1, [r3, #4]
   1cadc:	cmp	r1, #0
   1cae0:	beq	1b9ec <argp_failure@@Base+0x27c>
   1cae4:	ldr	r2, [fp, #-112]	; 0xffffff90
   1cae8:	mov	r3, #0
   1caec:	str	r3, [r2, #24]
   1caf0:	add	r3, r3, #1
   1caf4:	cmp	r3, r1
   1caf8:	add	r2, r2, #28
   1cafc:	bcc	1caec <argp_failure@@Base+0x137c>
   1cb00:	ldr	r0, [fp, #-112]	; 0xffffff90
   1cb04:	ldr	r3, [pc, #-292]	; 1c9e8 <argp_failure@@Base+0x1278>
   1cb08:	mov	r2, #28
   1cb0c:	bl	11b80 <qsort@plt>
   1cb10:	b	1b9ec <argp_failure@@Base+0x27c>
   1cb14:	mvn	r3, #0
   1cb18:	str	r3, [r7, #12]
   1cb1c:	ldr	r3, [fp, #-108]	; 0xffffff94
   1cb20:	ldr	r3, [r3, #4]
   1cb24:	cmp	r3, #0
   1cb28:	str	r3, [fp, #-120]	; 0xffffff88
   1cb2c:	sub	r6, r3, #1
   1cb30:	bne	1c390 <argp_failure@@Base+0xc20>
   1cb34:	b	1b9ec <argp_failure@@Base+0x27c>
   1cb38:	mov	r4, r9
   1cb3c:	b	1c854 <argp_failure@@Base+0x10e4>
   1cb40:	mov	r1, #1
   1cb44:	mov	r0, sl
   1cb48:	bl	1ef68 <argp_error@@Base+0x1fbc>
   1cb4c:	cmp	r0, #0
   1cb50:	beq	1c948 <argp_failure@@Base+0x11d8>
   1cb54:	ldr	r3, [sl, #28]
   1cb58:	b	1c938 <argp_failure@@Base+0x11c8>
   1cb5c:	mov	r0, sl
   1cb60:	bl	1e9bc <argp_error@@Base+0x1a10>
   1cb64:	ldr	r3, [sl, #28]
   1cb68:	b	1c924 <argp_failure@@Base+0x11b4>
   1cb6c:	mov	r3, r8
   1cb70:	mov	r4, r5
   1cb74:	b	1bfb4 <argp_failure@@Base+0x844>
   1cb78:	cmp	r5, r6
   1cb7c:	bhi	1ccf8 <argp_failure@@Base+0x1588>
   1cb80:	ldr	r1, [sl, #32]
   1cb84:	add	r2, r3, #3
   1cb88:	cmp	r1, r2
   1cb8c:	bcs	1cba8 <argp_failure@@Base+0x1438>
   1cb90:	mov	r1, #3
   1cb94:	mov	r0, sl
   1cb98:	bl	1ef68 <argp_error@@Base+0x1fbc>
   1cb9c:	cmp	r0, #0
   1cba0:	beq	1c8c4 <argp_failure@@Base+0x1154>
   1cba4:	ldr	r3, [sl, #28]
   1cba8:	ldr	r2, [pc, #-452]	; 1c9ec <argp_failure@@Base+0x127c>
   1cbac:	ldrh	r1, [r2]
   1cbb0:	ldrb	r2, [r2, #2]
   1cbb4:	strh	r1, [r3]
   1cbb8:	strb	r2, [r3, #2]
   1cbbc:	ldr	r3, [sl, #28]
   1cbc0:	add	r3, r3, #3
   1cbc4:	str	r3, [sl, #28]
   1cbc8:	b	1c8c4 <argp_failure@@Base+0x1154>
   1cbcc:	ldr	r3, [fp, #-108]	; 0xffffff94
   1cbd0:	ldr	r8, [r3]
   1cbd4:	str	r4, [fp, #-88]	; 0xffffffa8
   1cbd8:	str	r4, [fp, #-84]	; 0xffffffac
   1cbdc:	str	r4, [fp, #-80]	; 0xffffffb0
   1cbe0:	b	1bb2c <argp_failure@@Base+0x3bc>
   1cbe4:	ldr	r0, [sl, #28]
   1cbe8:	mov	r2, r5
   1cbec:	mov	r1, r4
   1cbf0:	bl	11808 <memcpy@plt>
   1cbf4:	ldr	r3, [sl, #28]
   1cbf8:	add	r5, r3, r5
   1cbfc:	str	r5, [sl, #28]
   1cc00:	b	1c8fc <argp_failure@@Base+0x118c>
   1cc04:	mov	r0, sl
   1cc08:	bl	1e9bc <argp_error@@Base+0x1a10>
   1cc0c:	ldr	r3, [sl, #28]
   1cc10:	ldr	r2, [sl, #24]
   1cc14:	ldr	r1, [sl, #16]
   1cc18:	ldr	r6, [sl, #20]
   1cc1c:	ldr	r7, [fp, #-96]	; 0xffffffa0
   1cc20:	sub	r2, r3, r2
   1cc24:	cmp	r2, r1
   1cc28:	bic	r6, r6, r6, asr #31
   1cc2c:	ldr	r5, [r7, #20]
   1cc30:	bls	1c890 <argp_failure@@Base+0x1120>
   1cc34:	mov	r0, sl
   1cc38:	bl	1e9bc <argp_error@@Base+0x1a10>
   1cc3c:	ldr	r3, [sl, #28]
   1cc40:	ldr	r2, [sl, #24]
   1cc44:	ldr	r1, [sl, #16]
   1cc48:	sub	r2, r3, r2
   1cc4c:	str	r5, [sl, #4]
   1cc50:	mov	r5, r7
   1cc54:	ldr	r7, [r7, #20]
   1cc58:	cmp	r2, r1
   1cc5c:	movls	r5, r7
   1cc60:	bls	1c898 <argp_failure@@Base+0x1128>
   1cc64:	mov	r0, sl
   1cc68:	bl	1e9bc <argp_error@@Base+0x1a10>
   1cc6c:	ldr	r5, [r5, #20]
   1cc70:	ldr	r3, [sl, #28]
   1cc74:	b	1c898 <argp_failure@@Base+0x1128>
   1cc78:	str	r5, [sp]
   1cc7c:	ldr	r3, [pc, #-660]	; 1c9f0 <argp_failure@@Base+0x1280>
   1cc80:	mov	r1, r2
   1cc84:	ldr	r0, [fp, #-104]	; 0xffffff98
   1cc88:	bl	1b770 <argp_failure@@Base>
   1cc8c:	b	1c0d0 <argp_failure@@Base+0x960>
   1cc90:	ldr	r3, [pc, #-676]	; 1c9f4 <argp_failure@@Base+0x1284>
   1cc94:	ldr	r1, [pc, #-676]	; 1c9f8 <argp_failure@@Base+0x1288>
   1cc98:	mov	r2, #0
   1cc9c:	ldr	r0, [fp, #-104]	; 0xffffff98
   1cca0:	stm	sp, {r1, r3}
   1cca4:	mov	r1, r2
   1cca8:	ldr	r3, [pc, #-692]	; 1c9fc <argp_failure@@Base+0x128c>
   1ccac:	bl	1b770 <argp_failure@@Base>
   1ccb0:	b	1b9bc <argp_failure@@Base+0x24c>
   1ccb4:	ldr	r3, [pc, #-700]	; 1ca00 <argp_failure@@Base+0x1290>
   1ccb8:	b	1cc94 <argp_failure@@Base+0x1524>
   1ccbc:	mov	r1, #1
   1ccc0:	mov	r0, sl
   1ccc4:	bl	1ef68 <argp_error@@Base+0x1fbc>
   1ccc8:	cmp	r0, #0
   1cccc:	beq	1ba5c <argp_failure@@Base+0x2ec>
   1ccd0:	ldr	r3, [sl, #28]
   1ccd4:	b	1ba4c <argp_failure@@Base+0x2dc>
   1ccd8:	ldr	r0, [r6, #16]
   1ccdc:	sub	r2, fp, #76	; 0x4c
   1cce0:	ldr	r1, [r8, #20]
   1cce4:	bl	1a3d0 <argp_parse@@Base+0x36a8>
   1cce8:	b	1c948 <argp_failure@@Base+0x11d8>
   1ccec:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ccf0:	bl	118d4 <funlockfile@plt>
   1ccf4:	b	1babc <argp_failure@@Base+0x34c>
   1ccf8:	ldr	r2, [sl, #24]
   1ccfc:	ldr	r1, [sl, #16]
   1cd00:	sub	r3, r3, r2
   1cd04:	cmp	r3, r1
   1cd08:	bhi	1ce80 <argp_failure@@Base+0x1710>
   1cd0c:	ldr	r3, [sl, #20]
   1cd10:	mov	r6, #32
   1cd14:	cmp	r3, #0
   1cd18:	subge	r5, r5, r3
   1cd1c:	mov	r7, #1
   1cd20:	cmp	r5, #0
   1cd24:	sub	r5, r5, #1
   1cd28:	ble	1c8c4 <argp_failure@@Base+0x1154>
   1cd2c:	ldr	r3, [sl, #28]
   1cd30:	ldr	r2, [sl, #32]
   1cd34:	cmp	r3, r2
   1cd38:	bcs	1cd64 <argp_failure@@Base+0x15f4>
   1cd3c:	add	r2, r3, #1
   1cd40:	cmp	r5, #0
   1cd44:	str	r2, [sl, #28]
   1cd48:	sub	r5, r5, #1
   1cd4c:	strb	r6, [r3]
   1cd50:	ble	1c8c4 <argp_failure@@Base+0x1154>
   1cd54:	ldr	r3, [sl, #28]
   1cd58:	ldr	r2, [sl, #32]
   1cd5c:	cmp	r3, r2
   1cd60:	bcc	1cd3c <argp_failure@@Base+0x15cc>
   1cd64:	mov	r1, r7
   1cd68:	mov	r0, sl
   1cd6c:	bl	1ef68 <argp_error@@Base+0x1fbc>
   1cd70:	cmp	r0, #0
   1cd74:	beq	1cd20 <argp_failure@@Base+0x15b0>
   1cd78:	ldr	r3, [sl, #28]
   1cd7c:	b	1cd3c <argp_failure@@Base+0x15cc>
   1cd80:	mov	r1, #1
   1cd84:	mov	r0, sl
   1cd88:	bl	1ef68 <argp_error@@Base+0x1fbc>
   1cd8c:	cmp	r0, #0
   1cd90:	beq	1c8c4 <argp_failure@@Base+0x1154>
   1cd94:	ldr	r3, [sl, #28]
   1cd98:	b	1c8b4 <argp_failure@@Base+0x1144>
   1cd9c:	ldr	r4, [pc, #-912]	; 1ca14 <argp_failure@@Base+0x12a4>
   1cda0:	ldr	r9, [fp, #-112]	; 0xffffff90
   1cda4:	ldr	r3, [sl, #28]
   1cda8:	ldr	r2, [sl, #32]
   1cdac:	cmp	r3, r2
   1cdb0:	bcs	1ce64 <argp_failure@@Base+0x16f4>
   1cdb4:	add	r1, r3, #1
   1cdb8:	mov	r2, #10
   1cdbc:	str	r1, [sl, #28]
   1cdc0:	strb	r2, [r3]
   1cdc4:	mov	r0, r4
   1cdc8:	bl	119dc <strlen@plt>
   1cdcc:	subs	r6, r0, #0
   1cdd0:	beq	1ce54 <argp_failure@@Base+0x16e4>
   1cdd4:	ldr	r0, [sl, #28]
   1cdd8:	ldr	r2, [sl, #32]
   1cddc:	add	r3, r0, r6
   1cde0:	cmp	r2, r3
   1cde4:	bcs	1ce00 <argp_failure@@Base+0x1690>
   1cde8:	mov	r1, r6
   1cdec:	mov	r0, sl
   1cdf0:	bl	1ef68 <argp_error@@Base+0x1fbc>
   1cdf4:	cmp	r0, #0
   1cdf8:	beq	1ce54 <argp_failure@@Base+0x16e4>
   1cdfc:	ldr	r0, [sl, #28]
   1ce00:	mov	r2, r6
   1ce04:	mov	r1, r4
   1ce08:	bl	11808 <memcpy@plt>
   1ce0c:	ldr	r3, [sl, #28]
   1ce10:	add	r3, r3, r6
   1ce14:	str	r3, [sl, #28]
   1ce18:	ldr	r2, [sl, #32]
   1ce1c:	cmp	r2, r3
   1ce20:	bls	1ceb0 <argp_failure@@Base+0x1740>
   1ce24:	add	r1, r3, #1
   1ce28:	mov	r2, #10
   1ce2c:	str	r1, [sl, #28]
   1ce30:	strb	r2, [r3]
   1ce34:	b	1be6c <argp_failure@@Base+0x6fc>
   1ce38:	mov	r1, #1
   1ce3c:	mov	r0, sl
   1ce40:	bl	1ef68 <argp_error@@Base+0x1fbc>
   1ce44:	cmp	r0, #0
   1ce48:	beq	1bb00 <argp_failure@@Base+0x390>
   1ce4c:	ldr	r3, [sl, #28]
   1ce50:	b	1baf0 <argp_failure@@Base+0x380>
   1ce54:	ldr	r3, [sl, #28]
   1ce58:	b	1ce18 <argp_failure@@Base+0x16a8>
   1ce5c:	ldr	r3, [pc, #-1120]	; 1ca04 <argp_failure@@Base+0x1294>
   1ce60:	b	1cc94 <argp_failure@@Base+0x1524>
   1ce64:	mov	r1, #1
   1ce68:	mov	r0, sl
   1ce6c:	bl	1ef68 <argp_error@@Base+0x1fbc>
   1ce70:	cmp	r0, #0
   1ce74:	beq	1cdc4 <argp_failure@@Base+0x1654>
   1ce78:	ldr	r3, [sl, #28]
   1ce7c:	b	1cdb4 <argp_failure@@Base+0x1644>
   1ce80:	mov	r0, sl
   1ce84:	bl	1e9bc <argp_error@@Base+0x1a10>
   1ce88:	b	1cd0c <argp_failure@@Base+0x159c>
   1ce8c:	ldr	r3, [pc, #-1164]	; 1ca08 <argp_failure@@Base+0x1298>
   1ce90:	b	1cc94 <argp_failure@@Base+0x1524>
   1ce94:	ldr	r3, [pc, #-1168]	; 1ca0c <argp_failure@@Base+0x129c>
   1ce98:	b	1cc94 <argp_failure@@Base+0x1524>
   1ce9c:	mov	r9, r1
   1cea0:	ldr	r4, [pc, #-1172]	; 1ca14 <argp_failure@@Base+0x12a4>
   1cea4:	b	1cda4 <argp_failure@@Base+0x1634>
   1cea8:	ldr	r3, [pc, #-1184]	; 1ca10 <argp_failure@@Base+0x12a0>
   1ceac:	b	1cc94 <argp_failure@@Base+0x1524>
   1ceb0:	mov	r1, #1
   1ceb4:	mov	r0, sl
   1ceb8:	bl	1ef68 <argp_error@@Base+0x1fbc>
   1cebc:	cmp	r0, #0
   1cec0:	beq	1be6c <argp_failure@@Base+0x6fc>
   1cec4:	ldr	r3, [sl, #28]
   1cec8:	b	1ce24 <argp_failure@@Base+0x16b4>
   1cecc:	ldr	r9, [fp, #-112]	; 0xffffff90
   1ced0:	ldr	r4, [pc, #-1220]	; 1ca14 <argp_failure@@Base+0x12a4>
   1ced4:	b	1cda4 <argp_failure@@Base+0x1634>

0001ced8 <argp_help@@Base>:
   1ced8:	push	{lr}		; (str lr, [sp, #-4]!)
   1cedc:	sub	sp, sp, #12
   1cee0:	str	r3, [sp]
   1cee4:	mov	r3, r2
   1cee8:	mov	r2, r1
   1ceec:	mov	r1, #0
   1cef0:	bl	1b978 <argp_failure@@Base+0x208>
   1cef4:	add	sp, sp, #12
   1cef8:	pop	{pc}		; (ldr pc, [sp], #4)

0001cefc <argp_state_help@@Base>:
   1cefc:	push	{r4, r5, lr}
   1cf00:	subs	r4, r0, #0
   1cf04:	sub	sp, sp, #12
   1cf08:	mov	r5, r2
   1cf0c:	beq	1cf6c <argp_state_help@@Base+0x70>
   1cf10:	ldr	r3, [r4, #16]
   1cf14:	tst	r3, #2
   1cf18:	bne	1cf64 <argp_state_help@@Base+0x68>
   1cf1c:	cmp	r1, #0
   1cf20:	beq	1cf64 <argp_state_help@@Base+0x68>
   1cf24:	tst	r3, #64	; 0x40
   1cf28:	ldr	r3, [r4, #40]	; 0x28
   1cf2c:	orrne	r5, r5, #128	; 0x80
   1cf30:	ldr	r0, [r4]
   1cf34:	mov	r2, r1
   1cf38:	str	r3, [sp]
   1cf3c:	mov	r1, r4
   1cf40:	mov	r3, r5
   1cf44:	bl	1b978 <argp_failure@@Base+0x208>
   1cf48:	ldr	r3, [r4, #16]
   1cf4c:	tst	r3, #32
   1cf50:	bne	1cf64 <argp_state_help@@Base+0x68>
   1cf54:	ands	r0, r5, #256	; 0x100
   1cf58:	bne	1cf98 <argp_state_help@@Base+0x9c>
   1cf5c:	tst	r5, #512	; 0x200
   1cf60:	bne	1cf94 <argp_state_help@@Base+0x98>
   1cf64:	add	sp, sp, #12
   1cf68:	pop	{r4, r5, pc}
   1cf6c:	cmp	r1, #0
   1cf70:	beq	1cf64 <argp_state_help@@Base+0x68>
   1cf74:	ldr	r3, [pc, #40]	; 1cfa4 <argp_state_help@@Base+0xa8>
   1cf78:	mov	r2, r1
   1cf7c:	mov	r1, r4
   1cf80:	ldr	ip, [r3]
   1cf84:	mov	r3, r5
   1cf88:	str	ip, [sp]
   1cf8c:	bl	1b978 <argp_failure@@Base+0x208>
   1cf90:	b	1cf54 <argp_state_help@@Base+0x58>
   1cf94:	bl	119c4 <exit@plt>
   1cf98:	ldr	r3, [pc, #8]	; 1cfa8 <argp_state_help@@Base+0xac>
   1cf9c:	ldr	r0, [r3]
   1cfa0:	bl	119c4 <exit@plt>
   1cfa4:	andeq	r1, r3, r8, lsr #7
   1cfa8:	andeq	r1, r3, r4, lsr #7

0001cfac <argp_error@@Base>:
   1cfac:	push	{r1, r2, r3}
   1cfb0:	push	{r4, r5, lr}
   1cfb4:	subs	r5, r0, #0
   1cfb8:	sub	sp, sp, #16
   1cfbc:	beq	1d0cc <argp_error@@Base+0x120>
   1cfc0:	ldr	r3, [r5, #16]
   1cfc4:	tst	r3, #2
   1cfc8:	bne	1d0bc <argp_error@@Base+0x110>
   1cfcc:	ldr	r4, [r5, #44]	; 0x2c
   1cfd0:	cmp	r4, #0
   1cfd4:	beq	1d0bc <argp_error@@Base+0x110>
   1cfd8:	mov	r0, r4
   1cfdc:	bl	11b5c <flockfile@plt>
   1cfe0:	ldr	r0, [r5, #40]	; 0x28
   1cfe4:	add	r3, sp, #32
   1cfe8:	str	r3, [sp, #12]
   1cfec:	mov	r1, r4
   1cff0:	bl	11730 <fputs_unlocked@plt>
   1cff4:	ldr	r3, [r4, #20]
   1cff8:	ldr	r2, [r4, #24]
   1cffc:	cmp	r3, r2
   1d000:	addcc	r1, r3, #1
   1d004:	movcc	r2, #58	; 0x3a
   1d008:	strcc	r1, [r4, #20]
   1d00c:	strbcc	r2, [r3]
   1d010:	bcs	1d0f8 <argp_error@@Base+0x14c>
   1d014:	ldr	r3, [r4, #20]
   1d018:	ldr	r2, [r4, #24]
   1d01c:	cmp	r3, r2
   1d020:	addcc	r1, r3, #1
   1d024:	movcc	r2, #32
   1d028:	strcc	r1, [r4, #20]
   1d02c:	strbcc	r2, [r3]
   1d030:	bcs	1d118 <argp_error@@Base+0x16c>
   1d034:	ldr	r1, [sp, #28]
   1d038:	ldr	r2, [sp, #12]
   1d03c:	mov	r0, r4
   1d040:	bl	11afc <vfprintf@plt>
   1d044:	ldr	r3, [r4, #20]
   1d048:	ldr	r2, [r4, #24]
   1d04c:	cmp	r3, r2
   1d050:	addcc	r1, r3, #1
   1d054:	movcc	r2, #10
   1d058:	strcc	r1, [r4, #20]
   1d05c:	strbcc	r2, [r3]
   1d060:	bcs	1d108 <argp_error@@Base+0x15c>
   1d064:	cmp	r5, #0
   1d068:	beq	1d128 <argp_error@@Base+0x17c>
   1d06c:	ldr	r3, [r5, #16]
   1d070:	tst	r3, #2
   1d074:	bne	1d0b4 <argp_error@@Base+0x108>
   1d078:	ldr	r2, [r5, #40]	; 0x28
   1d07c:	tst	r3, #64	; 0x40
   1d080:	moveq	r3, #260	; 0x104
   1d084:	movne	r3, #388	; 0x184
   1d088:	ldr	r0, [r5]
   1d08c:	mov	r1, r5
   1d090:	str	r2, [sp]
   1d094:	mov	r2, r4
   1d098:	bl	1b978 <argp_failure@@Base+0x208>
   1d09c:	ldr	r3, [r5, #16]
   1d0a0:	tst	r3, #32
   1d0a4:	bne	1d0b4 <argp_error@@Base+0x108>
   1d0a8:	ldr	r3, [pc, #156]	; 1d14c <argp_error@@Base+0x1a0>
   1d0ac:	ldr	r0, [r3]
   1d0b0:	bl	119c4 <exit@plt>
   1d0b4:	mov	r0, r4
   1d0b8:	bl	118d4 <funlockfile@plt>
   1d0bc:	add	sp, sp, #16
   1d0c0:	pop	{r4, r5, lr}
   1d0c4:	add	sp, sp, #12
   1d0c8:	bx	lr
   1d0cc:	ldr	r3, [pc, #124]	; 1d150 <argp_error@@Base+0x1a4>
   1d0d0:	ldr	r4, [r3]
   1d0d4:	cmp	r4, #0
   1d0d8:	beq	1d0bc <argp_error@@Base+0x110>
   1d0dc:	mov	r0, r4
   1d0e0:	bl	11b5c <flockfile@plt>
   1d0e4:	ldr	r2, [pc, #104]	; 1d154 <argp_error@@Base+0x1a8>
   1d0e8:	add	r3, sp, #32
   1d0ec:	str	r3, [sp, #12]
   1d0f0:	ldr	r0, [r2]
   1d0f4:	b	1cfec <argp_error@@Base+0x40>
   1d0f8:	mov	r1, #58	; 0x3a
   1d0fc:	mov	r0, r4
   1d100:	bl	11ab4 <__overflow@plt>
   1d104:	b	1d014 <argp_error@@Base+0x68>
   1d108:	mov	r1, #10
   1d10c:	mov	r0, r4
   1d110:	bl	11ab4 <__overflow@plt>
   1d114:	b	1d064 <argp_error@@Base+0xb8>
   1d118:	mov	r1, #32
   1d11c:	mov	r0, r4
   1d120:	bl	11ab4 <__overflow@plt>
   1d124:	b	1d034 <argp_error@@Base+0x88>
   1d128:	ldr	r1, [pc, #36]	; 1d154 <argp_error@@Base+0x1a8>
   1d12c:	mov	r2, r4
   1d130:	mov	r3, #260	; 0x104
   1d134:	ldr	r0, [r1]
   1d138:	mov	r1, r5
   1d13c:	str	r0, [sp]
   1d140:	mov	r0, r5
   1d144:	bl	1b978 <argp_failure@@Base+0x208>
   1d148:	b	1d0a8 <argp_error@@Base+0xfc>
   1d14c:	andeq	r1, r3, r4, lsr #7
   1d150:			; <UNDEFINED> instruction: 0x000313b0
   1d154:	andeq	r1, r3, r8, lsr #7
   1d158:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d15c:	ldr	r4, [r1, #32]
   1d160:	ldr	r8, [r1, #28]
   1d164:	ldr	r7, [r1]
   1d168:	add	r6, r0, r4, lsl #2
   1d16c:	mov	r2, r8
   1d170:	mov	r5, r7
   1d174:	cmp	r5, r4
   1d178:	movle	r3, #0
   1d17c:	movgt	r3, #1
   1d180:	cmp	r2, r4
   1d184:	movge	r3, #0
   1d188:	cmp	r3, #0
   1d18c:	beq	1d200 <argp_error@@Base+0x254>
   1d190:	sub	r3, r5, r4
   1d194:	sub	sl, r4, r2
   1d198:	cmp	r3, sl
   1d19c:	ble	1d1d0 <argp_error@@Base+0x224>
   1d1a0:	sub	r5, r5, sl
   1d1a4:	add	sl, sl, r2
   1d1a8:	add	ip, r0, r5, lsl #2
   1d1ac:	add	sl, r0, sl, lsl #2
   1d1b0:	add	r3, r0, r2, lsl #2
   1d1b4:	ldr	r9, [ip]
   1d1b8:	ldr	lr, [r3]
   1d1bc:	str	r9, [r3], #4
   1d1c0:	cmp	r3, sl
   1d1c4:	str	lr, [ip], #4
   1d1c8:	bne	1d1b4 <argp_error@@Base+0x208>
   1d1cc:	b	1d174 <argp_error@@Base+0x1c8>
   1d1d0:	add	sl, r3, r2
   1d1d4:	add	r3, r0, r2, lsl #2
   1d1d8:	add	r9, r0, sl, lsl #2
   1d1dc:	mov	r2, r6
   1d1e0:	ldr	lr, [r2]
   1d1e4:	ldr	ip, [r3]
   1d1e8:	str	lr, [r3], #4
   1d1ec:	cmp	r9, r3
   1d1f0:	str	ip, [r2], #4
   1d1f4:	bne	1d1e0 <argp_error@@Base+0x234>
   1d1f8:	mov	r2, sl
   1d1fc:	b	1d174 <argp_error@@Base+0x1c8>
   1d200:	sub	r4, r7, r4
   1d204:	add	r8, r4, r8
   1d208:	str	r8, [r1, #28]
   1d20c:	str	r7, [r1, #32]
   1d210:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d214:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d218:	sub	sp, sp, #52	; 0x34
   1d21c:	str	r1, [sp, #24]
   1d220:	ldr	r1, [sp, #96]	; 0x60
   1d224:	str	r0, [sp, #28]
   1d228:	str	r2, [sp, #32]
   1d22c:	ldr	r8, [r1, #20]
   1d230:	str	r3, [sp, #12]
   1d234:	mov	r7, r8
   1d238:	ldrb	r5, [r8]
   1d23c:	cmp	r5, #61	; 0x3d
   1d240:	cmpne	r5, #0
   1d244:	movne	r5, #1
   1d248:	moveq	r5, #0
   1d24c:	beq	1d268 <argp_error@@Base+0x2bc>
   1d250:	ldrb	r3, [r7, #1]!
   1d254:	cmp	r3, #0
   1d258:	cmpne	r3, #61	; 0x3d
   1d25c:	bne	1d250 <argp_error@@Base+0x2a4>
   1d260:	ldr	r3, [sp, #12]
   1d264:	sub	r5, r7, r8
   1d268:	ldr	sl, [r3]
   1d26c:	cmp	sl, #0
   1d270:	beq	1d648 <argp_error@@Base+0x69c>
   1d274:	mov	fp, r3
   1d278:	mov	r4, sl
   1d27c:	mov	r6, #0
   1d280:	str	r3, [sp, #20]
   1d284:	mov	r2, r5
   1d288:	mov	r1, r8
   1d28c:	mov	r0, r4
   1d290:	bl	11bd4 <strncmp@plt>
   1d294:	mov	r9, fp
   1d298:	cmp	r0, #0
   1d29c:	mov	r0, r4
   1d2a0:	bne	1d2b0 <argp_error@@Base+0x304>
   1d2a4:	bl	119dc <strlen@plt>
   1d2a8:	cmp	r0, r5
   1d2ac:	beq	1d370 <argp_error@@Base+0x3c4>
   1d2b0:	ldr	r4, [fp, #16]!
   1d2b4:	add	r6, r6, #1
   1d2b8:	cmp	r4, #0
   1d2bc:	bne	1d284 <argp_error@@Base+0x2d8>
   1d2c0:	ldr	r3, [sp, #100]	; 0x64
   1d2c4:	cmp	r3, #0
   1d2c8:	ldr	r3, [sp, #92]	; 0x5c
   1d2cc:	beq	1d414 <argp_error@@Base+0x468>
   1d2d0:	cmp	r3, #0
   1d2d4:	bne	1d52c <argp_error@@Base+0x580>
   1d2d8:	mov	fp, r3
   1d2dc:	mov	r0, sl
   1d2e0:	ldr	r4, [sp, #12]
   1d2e4:	ldr	sl, [sp, #96]	; 0x60
   1d2e8:	mov	r9, fp
   1d2ec:	mov	r1, r8
   1d2f0:	str	r3, [sp, #16]
   1d2f4:	str	r3, [sp, #44]	; 0x2c
   1d2f8:	mvn	r3, #0
   1d2fc:	str	r3, [sp, #40]	; 0x28
   1d300:	str	fp, [sp, #36]	; 0x24
   1d304:	mov	r2, r5
   1d308:	bl	11bd4 <strncmp@plt>
   1d30c:	cmp	r0, #0
   1d310:	bne	1d34c <argp_error@@Base+0x3a0>
   1d314:	cmp	r9, #0
   1d318:	beq	1d880 <argp_error@@Base+0x8d4>
   1d31c:	ldr	r2, [r9, #4]
   1d320:	ldr	r3, [r4, #4]
   1d324:	cmp	r2, r3
   1d328:	beq	1d8dc <argp_error@@Base+0x930>
   1d32c:	ldr	r3, [sp, #16]
   1d330:	cmp	r3, #0
   1d334:	bne	1d34c <argp_error@@Base+0x3a0>
   1d338:	ldr	r3, [sp, #36]	; 0x24
   1d33c:	cmp	r3, #0
   1d340:	beq	1d7b8 <argp_error@@Base+0x80c>
   1d344:	mov	r2, #1
   1d348:	strb	r2, [r3, fp]
   1d34c:	ldr	r0, [r4, #16]!
   1d350:	add	fp, fp, #1
   1d354:	cmp	r0, #0
   1d358:	beq	1d488 <argp_error@@Base+0x4dc>
   1d35c:	ldr	r1, [sl, #20]
   1d360:	b	1d304 <argp_error@@Base+0x358>
   1d364:	cmp	r9, #0
   1d368:	beq	1d648 <argp_error@@Base+0x69c>
   1d36c:	ldr	r6, [sp, #40]	; 0x28
   1d370:	ldr	r3, [sp, #96]	; 0x60
   1d374:	ldr	r0, [sp, #96]	; 0x60
   1d378:	mov	r1, #0
   1d37c:	ldr	r2, [r3]
   1d380:	str	r1, [r0, #20]
   1d384:	add	r3, r2, #1
   1d388:	str	r3, [r0]
   1d38c:	ldrb	r1, [r7]
   1d390:	cmp	r1, #0
   1d394:	bne	1d3d4 <argp_error@@Base+0x428>
   1d398:	ldr	r1, [r9, #4]
   1d39c:	cmp	r1, #1
   1d3a0:	beq	1d6b8 <argp_error@@Base+0x70c>
   1d3a4:	ldr	r3, [sp, #88]	; 0x58
   1d3a8:	ldr	r2, [r9, #8]
   1d3ac:	cmp	r3, #0
   1d3b0:	strne	r6, [r3]
   1d3b4:	cmp	r2, #0
   1d3b8:	movne	r3, #0
   1d3bc:	ldreq	r3, [r9, #12]
   1d3c0:	ldrne	r1, [r9, #12]
   1d3c4:	strne	r1, [r2]
   1d3c8:	mov	r0, r3
   1d3cc:	add	sp, sp, #52	; 0x34
   1d3d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d3d4:	ldr	r3, [r9, #4]
   1d3d8:	cmp	r3, #0
   1d3dc:	movne	r3, r0
   1d3e0:	addne	r7, r7, #1
   1d3e4:	strne	r7, [r3, #12]
   1d3e8:	bne	1d3a4 <argp_error@@Base+0x3f8>
   1d3ec:	ldr	r3, [sp, #100]	; 0x64
   1d3f0:	cmp	r3, #0
   1d3f4:	bne	1d610 <argp_error@@Base+0x664>
   1d3f8:	ldr	r1, [sp, #96]	; 0x60
   1d3fc:	ldr	r2, [r9, #12]
   1d400:	mov	r3, #63	; 0x3f
   1d404:	str	r2, [r1, #8]
   1d408:	mov	r0, r3
   1d40c:	add	sp, sp, #52	; 0x34
   1d410:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d414:	cmp	r3, #0
   1d418:	bne	1d5a8 <argp_error@@Base+0x5fc>
   1d41c:	mov	fp, r3
   1d420:	ldr	r4, [sp, #12]
   1d424:	mov	r9, fp
   1d428:	mov	r0, sl
   1d42c:	str	r3, [sp, #16]
   1d430:	mvn	r3, #0
   1d434:	str	r3, [sp, #40]	; 0x28
   1d438:	mov	r2, r5
   1d43c:	mov	r1, r8
   1d440:	bl	11bd4 <strncmp@plt>
   1d444:	cmp	r0, #0
   1d448:	bne	1d46c <argp_error@@Base+0x4c0>
   1d44c:	cmp	r9, #0
   1d450:	beq	1d874 <argp_error@@Base+0x8c8>
   1d454:	ldr	r2, [r9, #4]
   1d458:	ldr	r3, [r4, #4]
   1d45c:	cmp	r2, r3
   1d460:	beq	1d8b0 <argp_error@@Base+0x904>
   1d464:	mov	r3, #1
   1d468:	str	r3, [sp, #16]
   1d46c:	ldr	r0, [r4, #16]!
   1d470:	add	fp, fp, #1
   1d474:	cmp	r0, #0
   1d478:	bne	1d438 <argp_error@@Base+0x48c>
   1d47c:	ldr	r3, [sp, #92]	; 0x5c
   1d480:	str	r0, [sp, #36]	; 0x24
   1d484:	str	r3, [sp, #44]	; 0x2c
   1d488:	ldr	r2, [sp, #36]	; 0x24
   1d48c:	ldr	r3, [sp, #16]
   1d490:	cmp	r3, #0
   1d494:	cmpeq	r2, #0
   1d498:	beq	1d364 <argp_error@@Base+0x3b8>
   1d49c:	ldr	r2, [sp, #100]	; 0x64
   1d4a0:	cmp	r2, #0
   1d4a4:	beq	1d708 <argp_error@@Base+0x75c>
   1d4a8:	cmp	r3, #0
   1d4ac:	bne	1d6e0 <argp_error@@Base+0x734>
   1d4b0:	ldr	r5, [pc, #1108]	; 1d90c <argp_error@@Base+0x960>
   1d4b4:	ldr	r3, [sp, #36]	; 0x24
   1d4b8:	ldr	r7, [pc, #1104]	; 1d910 <argp_error@@Base+0x964>
   1d4bc:	ldr	r0, [r5]
   1d4c0:	add	r6, r3, r6
   1d4c4:	mov	r4, r3
   1d4c8:	bl	11b5c <flockfile@plt>
   1d4cc:	ldr	r3, [sp, #24]
   1d4d0:	ldr	r0, [r5]
   1d4d4:	ldr	r1, [pc, #1080]	; 1d914 <argp_error@@Base+0x968>
   1d4d8:	ldr	r2, [r3]
   1d4dc:	ldr	r3, [sp, #96]	; 0x60
   1d4e0:	ldr	r3, [r3, #20]
   1d4e4:	str	r3, [sp]
   1d4e8:	ldr	r3, [sp, #104]	; 0x68
   1d4ec:	bl	11a0c <fprintf@plt>
   1d4f0:	ldr	r8, [sp, #16]
   1d4f4:	ldr	r9, [sp, #12]
   1d4f8:	b	1d508 <argp_error@@Base+0x55c>
   1d4fc:	cmp	r4, r6
   1d500:	add	r8, r8, #1
   1d504:	beq	1d898 <argp_error@@Base+0x8ec>
   1d508:	ldrb	r3, [r4], #1
   1d50c:	cmp	r3, #0
   1d510:	beq	1d4fc <argp_error@@Base+0x550>
   1d514:	ldr	r3, [r9, r8, lsl #4]
   1d518:	ldr	r2, [sp, #104]	; 0x68
   1d51c:	mov	r1, r7
   1d520:	ldr	r0, [r5]
   1d524:	bl	11a0c <fprintf@plt>
   1d528:	b	1d4fc <argp_error@@Base+0x550>
   1d52c:	mov	r9, r4
   1d530:	str	r4, [sp, #16]
   1d534:	str	r4, [sp, #44]	; 0x2c
   1d538:	str	r4, [sp, #36]	; 0x24
   1d53c:	mov	r1, r8
   1d540:	mov	r0, sl
   1d544:	mov	r8, r4
   1d548:	ldr	sl, [sp, #20]
   1d54c:	ldr	r4, [sp, #96]	; 0x60
   1d550:	mov	fp, #1
   1d554:	mvn	r3, #0
   1d558:	str	r3, [sp, #40]	; 0x28
   1d55c:	mov	r2, r5
   1d560:	bl	11bd4 <strncmp@plt>
   1d564:	cmp	r0, #0
   1d568:	bne	1d590 <argp_error@@Base+0x5e4>
   1d56c:	cmp	r9, #0
   1d570:	beq	1d88c <argp_error@@Base+0x8e0>
   1d574:	ldr	r3, [sp, #16]
   1d578:	cmp	r3, #0
   1d57c:	bne	1d590 <argp_error@@Base+0x5e4>
   1d580:	ldr	r3, [sp, #36]	; 0x24
   1d584:	cmp	r3, #0
   1d588:	beq	1d7fc <argp_error@@Base+0x850>
   1d58c:	strb	fp, [r3, r8]
   1d590:	ldr	r0, [sl, #16]!
   1d594:	add	r8, r8, #1
   1d598:	cmp	r0, #0
   1d59c:	beq	1d488 <argp_error@@Base+0x4dc>
   1d5a0:	ldr	r1, [r4, #20]
   1d5a4:	b	1d55c <argp_error@@Base+0x5b0>
   1d5a8:	ldr	r3, [sp, #100]	; 0x64
   1d5ac:	mov	r0, sl
   1d5b0:	mov	r4, r3
   1d5b4:	ldr	sl, [sp, #20]
   1d5b8:	mov	r9, r4
   1d5bc:	str	r3, [sp, #16]
   1d5c0:	mvn	r3, #0
   1d5c4:	str	r3, [sp, #40]	; 0x28
   1d5c8:	mov	r2, r5
   1d5cc:	mov	r1, r8
   1d5d0:	bl	11bd4 <strncmp@plt>
   1d5d4:	cmp	r0, #0
   1d5d8:	bne	1d5f0 <argp_error@@Base+0x644>
   1d5dc:	cmp	r9, #0
   1d5e0:	moveq	r9, sl
   1d5e4:	movne	r3, #1
   1d5e8:	strne	r3, [sp, #16]
   1d5ec:	streq	r4, [sp, #40]	; 0x28
   1d5f0:	ldr	r0, [sl, #16]!
   1d5f4:	add	r4, r4, #1
   1d5f8:	cmp	r0, #0
   1d5fc:	bne	1d5c8 <argp_error@@Base+0x61c>
   1d600:	ldr	r3, [sp, #100]	; 0x64
   1d604:	str	r0, [sp, #36]	; 0x24
   1d608:	str	r3, [sp, #44]	; 0x2c
   1d60c:	b	1d488 <argp_error@@Base+0x4dc>
   1d610:	ldr	r3, [sp, #24]
   1d614:	ldr	r1, [pc, #752]	; 1d90c <argp_error@@Base+0x960>
   1d618:	ldr	r2, [r3]
   1d61c:	ldr	r3, [r9]
   1d620:	ldr	r0, [r1]
   1d624:	str	r3, [sp]
   1d628:	ldr	r1, [pc, #744]	; 1d918 <argp_error@@Base+0x96c>
   1d62c:	ldr	r3, [sp, #104]	; 0x68
   1d630:	bl	11a0c <fprintf@plt>
   1d634:	ldr	r1, [sp, #96]	; 0x60
   1d638:	ldr	r2, [r9, #12]
   1d63c:	mov	r3, #63	; 0x3f
   1d640:	str	r2, [r1, #8]
   1d644:	b	1d408 <argp_error@@Base+0x45c>
   1d648:	ldr	r3, [sp, #92]	; 0x5c
   1d64c:	cmp	r3, #0
   1d650:	bne	1d834 <argp_error@@Base+0x888>
   1d654:	ldr	r3, [sp, #100]	; 0x64
   1d658:	cmp	r3, #0
   1d65c:	beq	1d688 <argp_error@@Base+0x6dc>
   1d660:	ldr	r3, [sp, #24]
   1d664:	ldr	r1, [pc, #672]	; 1d90c <argp_error@@Base+0x960>
   1d668:	ldr	r2, [r3]
   1d66c:	ldr	r3, [sp, #96]	; 0x60
   1d670:	ldr	r0, [r1]
   1d674:	ldr	r1, [pc, #672]	; 1d91c <argp_error@@Base+0x970>
   1d678:	ldr	r3, [r3, #20]
   1d67c:	str	r3, [sp]
   1d680:	ldr	r3, [sp, #104]	; 0x68
   1d684:	bl	11a0c <fprintf@plt>
   1d688:	ldr	r3, [sp, #96]	; 0x60
   1d68c:	ldr	r1, [sp, #96]	; 0x60
   1d690:	mov	r2, #0
   1d694:	ldr	r3, [r3]
   1d698:	str	r2, [r1, #20]
   1d69c:	add	r3, r3, #1
   1d6a0:	str	r3, [r1]
   1d6a4:	mov	r3, #63	; 0x3f
   1d6a8:	mov	r0, r3
   1d6ac:	str	r2, [r1, #8]
   1d6b0:	add	sp, sp, #52	; 0x34
   1d6b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d6b8:	ldr	r1, [sp, #28]
   1d6bc:	cmp	r3, r1
   1d6c0:	bge	1d760 <argp_error@@Base+0x7b4>
   1d6c4:	ldr	r1, [sp, #24]
   1d6c8:	add	r2, r2, #2
   1d6cc:	ldr	r3, [r1, r3, lsl #2]
   1d6d0:	ldr	r1, [sp, #96]	; 0x60
   1d6d4:	str	r3, [r1, #12]
   1d6d8:	str	r2, [r1]
   1d6dc:	b	1d3a4 <argp_error@@Base+0x3f8>
   1d6e0:	ldr	r3, [sp, #24]
   1d6e4:	ldr	r1, [pc, #544]	; 1d90c <argp_error@@Base+0x960>
   1d6e8:	ldr	r2, [r3]
   1d6ec:	ldr	r3, [sp, #96]	; 0x60
   1d6f0:	ldr	r0, [r1]
   1d6f4:	ldr	r1, [pc, #548]	; 1d920 <argp_error@@Base+0x974>
   1d6f8:	ldr	r3, [r3, #20]
   1d6fc:	str	r3, [sp]
   1d700:	ldr	r3, [sp, #104]	; 0x68
   1d704:	bl	11a0c <fprintf@plt>
   1d708:	ldr	r3, [sp, #44]	; 0x2c
   1d70c:	cmp	r3, #0
   1d710:	beq	1d71c <argp_error@@Base+0x770>
   1d714:	ldr	r0, [sp, #36]	; 0x24
   1d718:	bl	17ca4 <argp_parse@@Base+0xf7c>
   1d71c:	ldr	r3, [sp, #96]	; 0x60
   1d720:	ldr	r4, [r3, #20]
   1d724:	mov	r0, r4
   1d728:	bl	119dc <strlen@plt>
   1d72c:	ldr	r3, [sp, #96]	; 0x60
   1d730:	ldr	r1, [sp, #96]	; 0x60
   1d734:	mov	r2, #0
   1d738:	ldr	r3, [r3]
   1d73c:	str	r2, [r1, #8]
   1d740:	add	r3, r3, #1
   1d744:	str	r3, [r1]
   1d748:	mov	r3, #63	; 0x3f
   1d74c:	add	r0, r4, r0
   1d750:	str	r0, [r1, #20]
   1d754:	mov	r0, r3
   1d758:	add	sp, sp, #52	; 0x34
   1d75c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d760:	ldr	r3, [sp, #100]	; 0x64
   1d764:	cmp	r3, #0
   1d768:	bne	1d790 <argp_error@@Base+0x7e4>
   1d76c:	ldr	r2, [sp, #96]	; 0x60
   1d770:	ldr	r3, [r9, #12]
   1d774:	str	r3, [r2, #8]
   1d778:	ldr	r3, [sp, #32]
   1d77c:	ldrb	r3, [r3]
   1d780:	cmp	r3, #58	; 0x3a
   1d784:	movne	r3, #63	; 0x3f
   1d788:	moveq	r3, #58	; 0x3a
   1d78c:	b	1d3c8 <argp_error@@Base+0x41c>
   1d790:	ldr	r3, [sp, #24]
   1d794:	ldr	r1, [pc, #368]	; 1d90c <argp_error@@Base+0x960>
   1d798:	ldr	r2, [r3]
   1d79c:	ldr	r3, [r9]
   1d7a0:	ldr	r0, [r1]
   1d7a4:	str	r3, [sp]
   1d7a8:	ldr	r1, [pc, #372]	; 1d924 <argp_error@@Base+0x978>
   1d7ac:	ldr	r3, [sp, #104]	; 0x68
   1d7b0:	bl	11a0c <fprintf@plt>
   1d7b4:	b	1d76c <argp_error@@Base+0x7c0>
   1d7b8:	mov	r0, r6
   1d7bc:	bl	18be0 <argp_parse@@Base+0x1eb8>
   1d7c0:	subs	r3, r0, #0
   1d7c4:	mov	r8, r3
   1d7c8:	str	r3, [sp, #36]	; 0x24
   1d7cc:	mov	r3, #1
   1d7d0:	streq	r3, [sp, #16]
   1d7d4:	beq	1d34c <argp_error@@Base+0x3a0>
   1d7d8:	mov	r2, r6
   1d7dc:	mov	r1, #0
   1d7e0:	str	r3, [sp, #44]	; 0x2c
   1d7e4:	bl	11a54 <memset@plt>
   1d7e8:	ldr	r2, [sp, #40]	; 0x28
   1d7ec:	mov	r1, #1
   1d7f0:	ldr	r3, [sp, #36]	; 0x24
   1d7f4:	strb	r1, [r8, r2]
   1d7f8:	b	1d344 <argp_error@@Base+0x398>
   1d7fc:	mov	r0, r6
   1d800:	bl	18be0 <argp_parse@@Base+0x1eb8>
   1d804:	subs	r3, r0, #0
   1d808:	str	r3, [sp, #36]	; 0x24
   1d80c:	beq	1d900 <argp_error@@Base+0x954>
   1d810:	mov	r2, r6
   1d814:	mov	r1, #0
   1d818:	bl	11a54 <memset@plt>
   1d81c:	mov	r2, #1
   1d820:	str	r2, [sp, #44]	; 0x2c
   1d824:	ldr	r3, [sp, #36]	; 0x24
   1d828:	ldr	r2, [sp, #40]	; 0x28
   1d82c:	strb	fp, [r3, r2]
   1d830:	b	1d58c <argp_error@@Base+0x5e0>
   1d834:	ldr	r3, [sp, #96]	; 0x60
   1d838:	ldr	r2, [sp, #24]
   1d83c:	ldr	r3, [r3]
   1d840:	ldr	r3, [r2, r3, lsl #2]
   1d844:	ldrb	r3, [r3, #1]
   1d848:	cmp	r3, #45	; 0x2d
   1d84c:	beq	1d654 <argp_error@@Base+0x6a8>
   1d850:	ldr	r3, [sp, #96]	; 0x60
   1d854:	ldr	r0, [sp, #32]
   1d858:	ldr	r3, [r3, #20]
   1d85c:	ldrb	r1, [r3]
   1d860:	bl	119f4 <strchr@plt>
   1d864:	cmp	r0, #0
   1d868:	beq	1d654 <argp_error@@Base+0x6a8>
   1d86c:	mvn	r3, #0
   1d870:	b	1d3c8 <argp_error@@Base+0x41c>
   1d874:	str	fp, [sp, #40]	; 0x28
   1d878:	mov	r9, r4
   1d87c:	b	1d46c <argp_error@@Base+0x4c0>
   1d880:	str	fp, [sp, #40]	; 0x28
   1d884:	mov	r9, r4
   1d888:	b	1d34c <argp_error@@Base+0x3a0>
   1d88c:	str	r8, [sp, #40]	; 0x28
   1d890:	mov	r9, sl
   1d894:	b	1d590 <argp_error@@Base+0x5e4>
   1d898:	ldr	r1, [r5]
   1d89c:	mov	r0, #10
   1d8a0:	bl	11b08 <fputc@plt>
   1d8a4:	ldr	r0, [r5]
   1d8a8:	bl	118d4 <funlockfile@plt>
   1d8ac:	b	1d708 <argp_error@@Base+0x75c>
   1d8b0:	ldr	r2, [r9, #8]
   1d8b4:	ldr	r3, [r4, #8]
   1d8b8:	cmp	r2, r3
   1d8bc:	bne	1d464 <argp_error@@Base+0x4b8>
   1d8c0:	ldr	r2, [r9, #12]
   1d8c4:	ldr	r3, [r4, #12]
   1d8c8:	ldr	r1, [sp, #16]
   1d8cc:	cmp	r2, r3
   1d8d0:	movne	r1, #1
   1d8d4:	str	r1, [sp, #16]
   1d8d8:	b	1d46c <argp_error@@Base+0x4c0>
   1d8dc:	ldr	r2, [r9, #8]
   1d8e0:	ldr	r3, [r4, #8]
   1d8e4:	cmp	r2, r3
   1d8e8:	bne	1d32c <argp_error@@Base+0x380>
   1d8ec:	ldr	r2, [r9, #12]
   1d8f0:	ldr	r3, [r4, #12]
   1d8f4:	cmp	r2, r3
   1d8f8:	bne	1d32c <argp_error@@Base+0x380>
   1d8fc:	b	1d34c <argp_error@@Base+0x3a0>
   1d900:	mov	r3, #1
   1d904:	str	r3, [sp, #16]
   1d908:	b	1d590 <argp_error@@Base+0x5e4>
   1d90c:			; <UNDEFINED> instruction: 0x000313b0
   1d910:			; <UNDEFINED> instruction: 0x000207bc
   1d914:	andeq	r0, r2, ip, lsl #15
   1d918:	andeq	r0, r2, r4, ror #15
   1d91c:	andeq	r0, r2, r4, asr #15
   1d920:	andeq	r0, r2, ip, ror #14
   1d924:	andeq	r0, r2, r4, lsl r8
   1d928:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d92c:	sub	sp, sp, #36	; 0x24
   1d930:	subs	r6, r0, #0
   1d934:	ldr	r4, [sp, #80]	; 0x50
   1d938:	ldr	r8, [r4, #4]
   1d93c:	ble	1db10 <argp_error@@Base+0xb64>
   1d940:	mov	sl, r3
   1d944:	ldr	r3, [r4]
   1d948:	mov	r7, r2
   1d94c:	mov	r2, #0
   1d950:	cmp	r3, r2
   1d954:	mov	r9, r1
   1d958:	str	r2, [r4, #12]
   1d95c:	beq	1db98 <argp_error@@Base+0xbec>
   1d960:	ldr	r2, [r4, #16]
   1d964:	cmp	r2, #0
   1d968:	bne	1db1c <argp_error@@Base+0xb70>
   1d96c:	mov	r5, #0
   1d970:	str	r3, [r4, #32]
   1d974:	str	r3, [r4, #28]
   1d978:	str	r5, [r4, #20]
   1d97c:	ldrb	r3, [r7]
   1d980:	cmp	r3, #45	; 0x2d
   1d984:	moveq	r3, #2
   1d988:	addeq	r7, r7, #1
   1d98c:	streq	r3, [r4, #24]
   1d990:	beq	1d9b8 <argp_error@@Base+0xa0c>
   1d994:	cmp	r3, #43	; 0x2b
   1d998:	streq	r5, [r4, #24]
   1d99c:	addeq	r7, r7, #1
   1d9a0:	beq	1d9b8 <argp_error@@Base+0xa0c>
   1d9a4:	ldr	r3, [sp, #84]	; 0x54
   1d9a8:	cmp	r3, #0
   1d9ac:	beq	1dc28 <argp_error@@Base+0xc7c>
   1d9b0:	mov	r3, #0
   1d9b4:	str	r3, [r4, #24]
   1d9b8:	mov	r3, #1
   1d9bc:	str	r3, [r4, #16]
   1d9c0:	ldrb	r3, [r7]
   1d9c4:	cmp	r3, #58	; 0x3a
   1d9c8:	moveq	r8, #0
   1d9cc:	cmp	r5, #0
   1d9d0:	beq	1da78 <argp_error@@Base+0xacc>
   1d9d4:	ldrb	r3, [r5]
   1d9d8:	cmp	r3, #0
   1d9dc:	beq	1da78 <argp_error@@Base+0xacc>
   1d9e0:	add	r3, r5, #1
   1d9e4:	str	r3, [r4, #20]
   1d9e8:	ldrb	fp, [r5]
   1d9ec:	mov	r0, r7
   1d9f0:	str	r3, [sp, #28]
   1d9f4:	mov	r1, fp
   1d9f8:	bl	119f4 <strchr@plt>
   1d9fc:	ldrb	r1, [r5, #1]
   1da00:	ldr	r3, [sp, #28]
   1da04:	cmp	r1, #0
   1da08:	ldreq	r1, [r4]
   1da0c:	addeq	r1, r1, #1
   1da10:	streq	r1, [r4]
   1da14:	sub	r1, fp, #58	; 0x3a
   1da18:	mov	r2, r0
   1da1c:	cmp	r2, #0
   1da20:	cmpne	r1, #1
   1da24:	mov	r0, fp
   1da28:	bls	1db68 <argp_error@@Base+0xbbc>
   1da2c:	ldrb	r1, [r2]
   1da30:	cmp	r1, #87	; 0x57
   1da34:	ldrb	r1, [r2, #1]
   1da38:	beq	1dcb4 <argp_error@@Base+0xd08>
   1da3c:	cmp	r1, #58	; 0x3a
   1da40:	bne	1db60 <argp_error@@Base+0xbb4>
   1da44:	ldrb	r2, [r2, #2]
   1da48:	cmp	r2, #58	; 0x3a
   1da4c:	ldrb	r2, [r5, #1]
   1da50:	beq	1ddac <argp_error@@Base+0xe00>
   1da54:	cmp	r2, #0
   1da58:	beq	1dd8c <argp_error@@Base+0xde0>
   1da5c:	ldr	r2, [r4]
   1da60:	str	r3, [r4, #12]
   1da64:	add	r3, r2, #1
   1da68:	str	r3, [r4]
   1da6c:	mov	r3, #0
   1da70:	str	r3, [r4, #20]
   1da74:	b	1db60 <argp_error@@Base+0xbb4>
   1da78:	ldr	fp, [r4]
   1da7c:	ldr	r3, [r4, #32]
   1da80:	ldr	r2, [r4, #28]
   1da84:	cmp	r3, fp
   1da88:	ldr	r3, [r4, #24]
   1da8c:	strgt	fp, [r4, #32]
   1da90:	cmp	fp, r2
   1da94:	movlt	r2, fp
   1da98:	strlt	fp, [r4, #28]
   1da9c:	cmp	r3, #1
   1daa0:	beq	1dba8 <argp_error@@Base+0xbfc>
   1daa4:	cmp	r6, fp
   1daa8:	beq	1dc10 <argp_error@@Base+0xc64>
   1daac:	ldr	r3, [pc, #972]	; 1de80 <argp_error@@Base+0xed4>
   1dab0:	ldr	r5, [r9, fp, lsl #2]
   1dab4:	mov	r1, r3
   1dab8:	mov	r0, r5
   1dabc:	str	r3, [sp, #28]
   1dac0:	bl	11754 <strcmp@plt>
   1dac4:	ldr	r3, [sp, #28]
   1dac8:	cmp	r0, #0
   1dacc:	bne	1db38 <argp_error@@Base+0xb8c>
   1dad0:	ldr	r3, [r4, #28]
   1dad4:	ldr	r2, [r4, #32]
   1dad8:	add	fp, fp, #1
   1dadc:	cmp	r3, r2
   1dae0:	str	fp, [r4]
   1dae4:	beq	1dca8 <argp_error@@Base+0xcfc>
   1dae8:	cmp	fp, r2
   1daec:	beq	1db00 <argp_error@@Base+0xb54>
   1daf0:	mov	r0, r9
   1daf4:	mov	r1, r4
   1daf8:	bl	1d158 <argp_error@@Base+0x1ac>
   1dafc:	ldr	r3, [r4, #28]
   1db00:	cmp	r6, r3
   1db04:	str	r6, [r4]
   1db08:	str	r6, [r4, #32]
   1db0c:	strne	r3, [r4]
   1db10:	mvn	r0, #0
   1db14:	add	sp, sp, #36	; 0x24
   1db18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1db1c:	ldrb	r3, [r7]
   1db20:	ldr	r5, [r4, #20]
   1db24:	sub	r2, r3, #43	; 0x2b
   1db28:	tst	r2, #253	; 0xfd
   1db2c:	ldrbeq	r3, [r7, #1]
   1db30:	addeq	r7, r7, #1
   1db34:	b	1d9c4 <argp_error@@Base+0xa18>
   1db38:	ldrb	r2, [r5]
   1db3c:	cmp	r2, #45	; 0x2d
   1db40:	beq	1dc5c <argp_error@@Base+0xcb0>
   1db44:	ldr	r3, [r4, #24]
   1db48:	cmp	r3, #0
   1db4c:	beq	1db10 <argp_error@@Base+0xb64>
   1db50:	mov	r0, #1
   1db54:	add	fp, fp, #1
   1db58:	str	fp, [r4]
   1db5c:	str	r5, [r4, #12]
   1db60:	add	sp, sp, #36	; 0x24
   1db64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1db68:	cmp	r8, #0
   1db6c:	beq	1db88 <argp_error@@Base+0xbdc>
   1db70:	ldr	r1, [pc, #780]	; 1de84 <argp_error@@Base+0xed8>
   1db74:	ldr	r2, [r9]
   1db78:	mov	r3, fp
   1db7c:	ldr	r0, [r1]
   1db80:	ldr	r1, [pc, #768]	; 1de88 <argp_error@@Base+0xedc>
   1db84:	bl	11a0c <fprintf@plt>
   1db88:	mov	r0, #63	; 0x3f
   1db8c:	str	fp, [r4, #8]
   1db90:	add	sp, sp, #36	; 0x24
   1db94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1db98:	mov	r2, #1
   1db9c:	mov	r3, r2
   1dba0:	str	r2, [r4]
   1dba4:	b	1d96c <argp_error@@Base+0x9c0>
   1dba8:	ldr	r3, [r4, #32]
   1dbac:	cmp	r3, r2
   1dbb0:	beq	1dd28 <argp_error@@Base+0xd7c>
   1dbb4:	cmp	fp, r3
   1dbb8:	beq	1dbcc <argp_error@@Base+0xc20>
   1dbbc:	mov	r1, r4
   1dbc0:	mov	r0, r9
   1dbc4:	bl	1d158 <argp_error@@Base+0x1ac>
   1dbc8:	ldr	r3, [r4]
   1dbcc:	cmp	r6, r3
   1dbd0:	addgt	r1, r9, r3, lsl #2
   1dbd4:	bgt	1dbec <argp_error@@Base+0xc40>
   1dbd8:	b	1dc08 <argp_error@@Base+0xc5c>
   1dbdc:	add	r3, r3, #1
   1dbe0:	cmp	r6, r3
   1dbe4:	str	r3, [r4]
   1dbe8:	beq	1dc48 <argp_error@@Base+0xc9c>
   1dbec:	ldr	r2, [r1], #4
   1dbf0:	ldrb	r0, [r2]
   1dbf4:	cmp	r0, #45	; 0x2d
   1dbf8:	bne	1dbdc <argp_error@@Base+0xc30>
   1dbfc:	ldrb	r2, [r2, #1]
   1dc00:	cmp	r2, #0
   1dc04:	beq	1dbdc <argp_error@@Base+0xc30>
   1dc08:	mov	fp, r3
   1dc0c:	b	1dc4c <argp_error@@Base+0xca0>
   1dc10:	ldr	r3, [r4, #28]
   1dc14:	ldr	r6, [r4, #32]
   1dc18:	mvn	r0, #0
   1dc1c:	cmp	r6, r3
   1dc20:	strne	r3, [r4]
   1dc24:	b	1db14 <argp_error@@Base+0xb68>
   1dc28:	ldr	r0, [pc, #604]	; 1de8c <argp_error@@Base+0xee0>
   1dc2c:	bl	11940 <getenv@plt>
   1dc30:	ldr	r5, [r4, #20]
   1dc34:	cmp	r0, #0
   1dc38:	bne	1d9b0 <argp_error@@Base+0xa04>
   1dc3c:	mov	r3, #1
   1dc40:	str	r3, [r4, #24]
   1dc44:	b	1d9b8 <argp_error@@Base+0xa0c>
   1dc48:	mov	fp, r6
   1dc4c:	cmp	r6, fp
   1dc50:	str	fp, [r4, #32]
   1dc54:	bne	1daac <argp_error@@Base+0xb00>
   1dc58:	b	1dc10 <argp_error@@Base+0xc64>
   1dc5c:	ldrb	r1, [r5, #1]
   1dc60:	cmp	r1, #0
   1dc64:	beq	1db44 <argp_error@@Base+0xb98>
   1dc68:	cmp	sl, #0
   1dc6c:	beq	1dca0 <argp_error@@Base+0xcf4>
   1dc70:	cmp	r1, #45	; 0x2d
   1dc74:	beq	1ddd0 <argp_error@@Base+0xe24>
   1dc78:	ldr	r3, [sp, #76]	; 0x4c
   1dc7c:	cmp	r3, #0
   1dc80:	beq	1dca0 <argp_error@@Base+0xcf4>
   1dc84:	ldrb	r3, [r5, #2]
   1dc88:	cmp	r3, #0
   1dc8c:	bne	1dd3c <argp_error@@Base+0xd90>
   1dc90:	mov	r0, r7
   1dc94:	bl	119f4 <strchr@plt>
   1dc98:	cmp	r0, #0
   1dc9c:	beq	1dd3c <argp_error@@Base+0xd90>
   1dca0:	add	r5, r5, #1
   1dca4:	b	1d9e0 <argp_error@@Base+0xa34>
   1dca8:	mov	r3, fp
   1dcac:	str	fp, [r4, #28]
   1dcb0:	b	1db00 <argp_error@@Base+0xb54>
   1dcb4:	adds	ip, sl, #0
   1dcb8:	movne	ip, #1
   1dcbc:	cmp	r1, #59	; 0x3b
   1dcc0:	movne	ip, #0
   1dcc4:	cmp	ip, #0
   1dcc8:	beq	1da3c <argp_error@@Base+0xa90>
   1dccc:	ldrb	r2, [r5, #1]
   1dcd0:	cmp	r2, #0
   1dcd4:	bne	1dce8 <argp_error@@Base+0xd3c>
   1dcd8:	ldr	r3, [r4]
   1dcdc:	cmp	r6, r3
   1dce0:	ldrne	r3, [r9, r3, lsl #2]
   1dce4:	beq	1de2c <argp_error@@Base+0xe80>
   1dce8:	str	r3, [r4, #20]
   1dcec:	ldr	lr, [pc, #412]	; 1de90 <argp_error@@Base+0xee4>
   1dcf0:	ldr	r3, [sp, #72]	; 0x48
   1dcf4:	mov	ip, #0
   1dcf8:	str	r3, [sp]
   1dcfc:	str	r8, [sp, #12]
   1dd00:	str	r4, [sp, #8]
   1dd04:	str	lr, [sp, #16]
   1dd08:	mov	r3, sl
   1dd0c:	str	ip, [r4, #12]
   1dd10:	mov	r2, r7
   1dd14:	mov	r1, r9
   1dd18:	mov	r0, r6
   1dd1c:	str	ip, [sp, #4]
   1dd20:	bl	1d214 <argp_error@@Base+0x268>
   1dd24:	b	1db60 <argp_error@@Base+0xbb4>
   1dd28:	cmp	fp, r2
   1dd2c:	strne	fp, [r4, #28]
   1dd30:	movne	r3, fp
   1dd34:	moveq	r3, r2
   1dd38:	b	1dbcc <argp_error@@Base+0xc20>
   1dd3c:	ldr	r2, [sp, #76]	; 0x4c
   1dd40:	add	r5, r5, #1
   1dd44:	str	r5, [r4, #20]
   1dd48:	ldr	r3, [pc, #324]	; 1de94 <argp_error@@Base+0xee8>
   1dd4c:	str	r2, [sp, #4]
   1dd50:	ldr	r2, [sp, #72]	; 0x48
   1dd54:	str	r3, [sp, #16]
   1dd58:	str	r2, [sp]
   1dd5c:	str	r8, [sp, #12]
   1dd60:	str	r4, [sp, #8]
   1dd64:	mov	r3, sl
   1dd68:	mov	r2, r7
   1dd6c:	mov	r1, r9
   1dd70:	mov	r0, r6
   1dd74:	bl	1d214 <argp_error@@Base+0x268>
   1dd78:	cmn	r0, #1
   1dd7c:	bne	1db60 <argp_error@@Base+0xbb4>
   1dd80:	ldr	r3, [r4]
   1dd84:	ldr	r5, [r9, r3, lsl #2]
   1dd88:	b	1dca0 <argp_error@@Base+0xcf4>
   1dd8c:	ldr	r3, [r4]
   1dd90:	cmp	r6, r3
   1dd94:	beq	1de0c <argp_error@@Base+0xe60>
   1dd98:	ldr	r2, [r9, r3, lsl #2]
   1dd9c:	add	r3, r3, #1
   1dda0:	str	r2, [r4, #12]
   1dda4:	str	r3, [r4]
   1dda8:	b	1da6c <argp_error@@Base+0xac0>
   1ddac:	cmp	r2, #0
   1ddb0:	moveq	r3, r2
   1ddb4:	ldrne	r2, [r4]
   1ddb8:	str	r3, [r4, #12]
   1ddbc:	addne	r2, r2, #1
   1ddc0:	strne	r2, [r4]
   1ddc4:	mov	r2, #0
   1ddc8:	str	r2, [r4, #20]
   1ddcc:	b	1db60 <argp_error@@Base+0xbb4>
   1ddd0:	add	r5, r5, #2
   1ddd4:	str	r5, [r4, #20]
   1ddd8:	str	r3, [sp, #16]
   1dddc:	ldr	r3, [sp, #76]	; 0x4c
   1dde0:	str	r8, [sp, #12]
   1dde4:	str	r3, [sp, #4]
   1dde8:	ldr	r3, [sp, #72]	; 0x48
   1ddec:	str	r4, [sp, #8]
   1ddf0:	str	r3, [sp]
   1ddf4:	mov	r2, r7
   1ddf8:	mov	r3, sl
   1ddfc:	mov	r1, r9
   1de00:	mov	r0, r6
   1de04:	bl	1d214 <argp_error@@Base+0x268>
   1de08:	b	1db60 <argp_error@@Base+0xbb4>
   1de0c:	cmp	r8, #0
   1de10:	bne	1de64 <argp_error@@Base+0xeb8>
   1de14:	str	fp, [r4, #8]
   1de18:	ldrb	r0, [r7]
   1de1c:	cmp	r0, #58	; 0x3a
   1de20:	movne	r0, #63	; 0x3f
   1de24:	moveq	r0, #58	; 0x3a
   1de28:	b	1da6c <argp_error@@Base+0xac0>
   1de2c:	cmp	r8, #0
   1de30:	beq	1de4c <argp_error@@Base+0xea0>
   1de34:	ldr	r1, [pc, #72]	; 1de84 <argp_error@@Base+0xed8>
   1de38:	ldr	r2, [r9]
   1de3c:	mov	r3, fp
   1de40:	ldr	r0, [r1]
   1de44:	ldr	r1, [pc, #76]	; 1de98 <argp_error@@Base+0xeec>
   1de48:	bl	11a0c <fprintf@plt>
   1de4c:	str	fp, [r4, #8]
   1de50:	ldrb	r0, [r7]
   1de54:	cmp	r0, #58	; 0x3a
   1de58:	movne	r0, #63	; 0x3f
   1de5c:	moveq	r0, #58	; 0x3a
   1de60:	b	1db60 <argp_error@@Base+0xbb4>
   1de64:	ldr	r1, [pc, #24]	; 1de84 <argp_error@@Base+0xed8>
   1de68:	ldr	r2, [r9]
   1de6c:	mov	r3, fp
   1de70:	ldr	r0, [r1]
   1de74:	ldr	r1, [pc, #28]	; 1de98 <argp_error@@Base+0xeec>
   1de78:	bl	11a0c <fprintf@plt>
   1de7c:	b	1de14 <argp_error@@Base+0xe68>
   1de80:	andeq	pc, r1, r0, lsr pc	; <UNPREDICTABLE>
   1de84:			; <UNDEFINED> instruction: 0x000313b0
   1de88:	andeq	r0, r2, r0, asr r8
   1de8c:	andeq	r0, r2, ip, lsr r8
   1de90:	muleq	r2, r8, r8
   1de94:	andeq	r0, r2, ip, asr #16
   1de98:	andeq	r0, r2, ip, ror #16
   1de9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dea0:	sub	sp, sp, #44	; 0x2c
   1dea4:	ldr	r7, [pc, #1572]	; 1e4d0 <argp_error@@Base+0x1524>
   1dea8:	ldr	r4, [pc, #1572]	; 1e4d4 <argp_error@@Base+0x1528>
   1deac:	subs	r6, r0, #0
   1deb0:	ldm	r7, {r5, sl}
   1deb4:	str	r1, [sp, #32]
   1deb8:	str	r3, [sp, #36]	; 0x24
   1debc:	stm	r4, {r5, sl}
   1dec0:	ble	1e06c <argp_error@@Base+0x10c0>
   1dec4:	mov	r3, #0
   1dec8:	cmp	r5, #0
   1decc:	mov	fp, r2
   1ded0:	str	r3, [r4, #12]
   1ded4:	beq	1e128 <argp_error@@Base+0x117c>
   1ded8:	ldr	r3, [r4, #16]
   1dedc:	cmp	r3, #0
   1dee0:	bne	1e084 <argp_error@@Base+0x10d8>
   1dee4:	mov	r3, #0
   1dee8:	str	r5, [r4, #32]
   1deec:	str	r5, [r4, #28]
   1def0:	str	r3, [r4, #20]
   1def4:	ldrb	r2, [fp]
   1def8:	cmp	r2, #45	; 0x2d
   1defc:	beq	1e1d8 <argp_error@@Base+0x122c>
   1df00:	cmp	r2, #43	; 0x2b
   1df04:	streq	r3, [r4, #24]
   1df08:	addeq	fp, fp, #1
   1df0c:	moveq	r5, r3
   1df10:	beq	1df2c <argp_error@@Base+0xf80>
   1df14:	ldr	r2, [sp, #88]	; 0x58
   1df18:	cmp	r2, #0
   1df1c:	movne	r5, r3
   1df20:	beq	1e1b8 <argp_error@@Base+0x120c>
   1df24:	mov	r3, #0
   1df28:	str	r3, [r4, #24]
   1df2c:	mov	r3, #1
   1df30:	str	r3, [r4, #16]
   1df34:	ldrb	r3, [fp]
   1df38:	cmp	r3, #58	; 0x3a
   1df3c:	moveq	sl, #0
   1df40:	cmp	r5, #0
   1df44:	beq	1dfc8 <argp_error@@Base+0x101c>
   1df48:	ldrb	r3, [r5]
   1df4c:	cmp	r3, #0
   1df50:	beq	1dfc8 <argp_error@@Base+0x101c>
   1df54:	add	r9, r5, #1
   1df58:	str	r9, [r4, #20]
   1df5c:	ldrb	r8, [r5]
   1df60:	mov	r0, fp
   1df64:	mov	r1, r8
   1df68:	bl	119f4 <strchr@plt>
   1df6c:	ldrb	r3, [r5, #1]
   1df70:	str	r8, [sp, #28]
   1df74:	cmp	r3, #0
   1df78:	ldreq	r3, [r4]
   1df7c:	addeq	r3, r3, #1
   1df80:	streq	r3, [r4]
   1df84:	sub	r3, r8, #58	; 0x3a
   1df88:	cmp	r0, #0
   1df8c:	cmpne	r3, #1
   1df90:	bls	1e0ec <argp_error@@Base+0x1140>
   1df94:	ldrb	r3, [r0]
   1df98:	cmp	r3, #87	; 0x57
   1df9c:	ldrb	r3, [r0, #1]
   1dfa0:	beq	1e260 <argp_error@@Base+0x12b4>
   1dfa4:	cmp	r3, #58	; 0x3a
   1dfa8:	beq	1e304 <argp_error@@Base+0x1358>
   1dfac:	ldr	r3, [r4, #8]
   1dfb0:	mov	r0, r8
   1dfb4:	ldr	r9, [r4, #12]
   1dfb8:	ldr	r5, [r4]
   1dfbc:	str	r3, [sp, #28]
   1dfc0:	mov	r2, r3
   1dfc4:	b	1e0d4 <argp_error@@Base+0x1128>
   1dfc8:	ldr	r5, [r4]
   1dfcc:	ldr	r8, [r4, #32]
   1dfd0:	ldr	r3, [r4, #28]
   1dfd4:	cmp	r8, r5
   1dfd8:	ldr	r2, [r4, #24]
   1dfdc:	movgt	r8, r5
   1dfe0:	strgt	r5, [r4, #32]
   1dfe4:	cmp	r5, r3
   1dfe8:	movlt	r3, r5
   1dfec:	strlt	r5, [r4, #28]
   1dff0:	cmp	r2, #1
   1dff4:	beq	1e138 <argp_error@@Base+0x118c>
   1dff8:	cmp	r6, r5
   1dffc:	beq	1e1a0 <argp_error@@Base+0x11f4>
   1e000:	ldr	r3, [sp, #32]
   1e004:	ldr	r9, [r3, r5, lsl #2]
   1e008:	ldr	r3, [pc, #1224]	; 1e4d8 <argp_error@@Base+0x152c>
   1e00c:	mov	r0, r9
   1e010:	mov	r1, r3
   1e014:	str	r3, [sp, #28]
   1e018:	bl	11754 <strcmp@plt>
   1e01c:	ldr	r3, [sp, #28]
   1e020:	cmp	r0, #0
   1e024:	bne	1e0a0 <argp_error@@Base+0x10f4>
   1e028:	add	r3, r5, #1
   1e02c:	ldr	r5, [r4, #28]
   1e030:	str	r3, [r4]
   1e034:	cmp	r5, r8
   1e038:	beq	1e254 <argp_error@@Base+0x12a8>
   1e03c:	cmp	r3, r8
   1e040:	beq	1e054 <argp_error@@Base+0x10a8>
   1e044:	ldr	r0, [sp, #32]
   1e048:	ldr	r1, [pc, #1156]	; 1e4d4 <argp_error@@Base+0x1528>
   1e04c:	bl	1d158 <argp_error@@Base+0x1ac>
   1e050:	ldr	r5, [r4, #28]
   1e054:	mov	r8, r6
   1e058:	cmp	r8, r5
   1e05c:	str	r6, [r4, #32]
   1e060:	str	r6, [r4]
   1e064:	moveq	r5, r6
   1e068:	bne	1e1b0 <argp_error@@Base+0x1204>
   1e06c:	ldr	r3, [r4, #8]
   1e070:	ldr	r9, [r4, #12]
   1e074:	str	r3, [sp, #28]
   1e078:	mvn	r0, #0
   1e07c:	mov	r2, r3
   1e080:	b	1e0d4 <argp_error@@Base+0x1128>
   1e084:	ldrb	r3, [r2]
   1e088:	ldr	r5, [r4, #20]
   1e08c:	sub	r2, r3, #43	; 0x2b
   1e090:	tst	r2, #253	; 0xfd
   1e094:	ldrbeq	r3, [fp, #1]
   1e098:	addeq	fp, fp, #1
   1e09c:	b	1df38 <argp_error@@Base+0xf8c>
   1e0a0:	ldrb	r2, [r9]
   1e0a4:	cmp	r2, #45	; 0x2d
   1e0a8:	beq	1e204 <argp_error@@Base+0x1258>
   1e0ac:	ldr	r3, [r4, #24]
   1e0b0:	cmp	r3, #0
   1e0b4:	beq	1e06c <argp_error@@Base+0x10c0>
   1e0b8:	ldr	r3, [r4, #8]
   1e0bc:	mov	r0, #1
   1e0c0:	mov	r2, r3
   1e0c4:	add	r5, r5, #1
   1e0c8:	str	r5, [r4]
   1e0cc:	str	r9, [r4, #12]
   1e0d0:	str	r3, [sp, #28]
   1e0d4:	ldr	r3, [pc, #1024]	; 1e4dc <argp_error@@Base+0x1530>
   1e0d8:	str	r5, [r7]
   1e0dc:	str	r2, [r7, #8]
   1e0e0:	str	r9, [r3]
   1e0e4:	add	sp, sp, #44	; 0x2c
   1e0e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e0ec:	cmp	sl, #0
   1e0f0:	beq	1e110 <argp_error@@Base+0x1164>
   1e0f4:	ldr	r1, [pc, #996]	; 1e4e0 <argp_error@@Base+0x1534>
   1e0f8:	ldr	r3, [sp, #32]
   1e0fc:	ldr	r0, [r1]
   1e100:	ldr	r2, [r3]
   1e104:	ldr	r1, [pc, #984]	; 1e4e4 <argp_error@@Base+0x1538>
   1e108:	mov	r3, r8
   1e10c:	bl	11a0c <fprintf@plt>
   1e110:	str	r8, [r4, #8]
   1e114:	ldr	r5, [r4]
   1e118:	ldr	r9, [r4, #12]
   1e11c:	mov	r0, #63	; 0x3f
   1e120:	ldr	r2, [sp, #28]
   1e124:	b	1e0d4 <argp_error@@Base+0x1128>
   1e128:	mov	r3, #1
   1e12c:	mov	r5, r3
   1e130:	str	r3, [r4]
   1e134:	b	1dee4 <argp_error@@Base+0xf38>
   1e138:	cmp	r8, r3
   1e13c:	beq	1e2f4 <argp_error@@Base+0x1348>
   1e140:	cmp	r5, r8
   1e144:	beq	1e158 <argp_error@@Base+0x11ac>
   1e148:	ldr	r1, [pc, #900]	; 1e4d4 <argp_error@@Base+0x1528>
   1e14c:	ldr	r0, [sp, #32]
   1e150:	bl	1d158 <argp_error@@Base+0x1ac>
   1e154:	ldr	r8, [r4]
   1e158:	cmp	r6, r8
   1e15c:	ldrgt	r3, [sp, #32]
   1e160:	addgt	r2, r3, r8, lsl #2
   1e164:	bgt	1e17c <argp_error@@Base+0x11d0>
   1e168:	b	1e198 <argp_error@@Base+0x11ec>
   1e16c:	add	r8, r8, #1
   1e170:	cmp	r6, r8
   1e174:	str	r8, [r4]
   1e178:	beq	1e1ec <argp_error@@Base+0x1240>
   1e17c:	ldr	r3, [r2], #4
   1e180:	ldrb	r1, [r3]
   1e184:	cmp	r1, #45	; 0x2d
   1e188:	bne	1e16c <argp_error@@Base+0x11c0>
   1e18c:	ldrb	r3, [r3, #1]
   1e190:	cmp	r3, #0
   1e194:	beq	1e16c <argp_error@@Base+0x11c0>
   1e198:	mov	r5, r8
   1e19c:	b	1e1f0 <argp_error@@Base+0x1244>
   1e1a0:	ldr	r5, [r4, #28]
   1e1a4:	cmp	r8, r5
   1e1a8:	moveq	r5, r6
   1e1ac:	beq	1e06c <argp_error@@Base+0x10c0>
   1e1b0:	str	r5, [r4]
   1e1b4:	b	1e06c <argp_error@@Base+0x10c0>
   1e1b8:	ldr	r0, [pc, #808]	; 1e4e8 <argp_error@@Base+0x153c>
   1e1bc:	bl	11940 <getenv@plt>
   1e1c0:	ldr	r5, [r4, #20]
   1e1c4:	cmp	r0, #0
   1e1c8:	bne	1df24 <argp_error@@Base+0xf78>
   1e1cc:	mov	r3, #1
   1e1d0:	str	r3, [r4, #24]
   1e1d4:	b	1df2c <argp_error@@Base+0xf80>
   1e1d8:	mov	r2, #2
   1e1dc:	add	fp, fp, #1
   1e1e0:	mov	r5, r3
   1e1e4:	str	r2, [r4, #24]
   1e1e8:	b	1df2c <argp_error@@Base+0xf80>
   1e1ec:	mov	r5, r6
   1e1f0:	cmp	r6, r5
   1e1f4:	mov	r8, r5
   1e1f8:	str	r5, [r4, #32]
   1e1fc:	bne	1e000 <argp_error@@Base+0x1054>
   1e200:	b	1e1a0 <argp_error@@Base+0x11f4>
   1e204:	ldrb	r1, [r9, #1]
   1e208:	cmp	r1, #0
   1e20c:	beq	1e0ac <argp_error@@Base+0x1100>
   1e210:	ldr	r2, [sp, #36]	; 0x24
   1e214:	cmp	r2, #0
   1e218:	beq	1e24c <argp_error@@Base+0x12a0>
   1e21c:	cmp	r1, #45	; 0x2d
   1e220:	beq	1e400 <argp_error@@Base+0x1454>
   1e224:	ldr	r3, [sp, #84]	; 0x54
   1e228:	cmp	r3, #0
   1e22c:	beq	1e24c <argp_error@@Base+0x12a0>
   1e230:	ldrb	r3, [r9, #2]
   1e234:	cmp	r3, #0
   1e238:	bne	1e348 <argp_error@@Base+0x139c>
   1e23c:	mov	r0, fp
   1e240:	bl	119f4 <strchr@plt>
   1e244:	cmp	r0, #0
   1e248:	beq	1e348 <argp_error@@Base+0x139c>
   1e24c:	add	r5, r9, #1
   1e250:	b	1df54 <argp_error@@Base+0xfa8>
   1e254:	mov	r5, r3
   1e258:	str	r3, [r4, #28]
   1e25c:	b	1e054 <argp_error@@Base+0x10a8>
   1e260:	ldr	r1, [sp, #36]	; 0x24
   1e264:	sub	r2, r3, #59	; 0x3b
   1e268:	cmp	r1, #0
   1e26c:	clz	r2, r2
   1e270:	lsr	r2, r2, #5
   1e274:	moveq	r2, #0
   1e278:	cmp	r2, #0
   1e27c:	beq	1dfa4 <argp_error@@Base+0xff8>
   1e280:	ldrb	r3, [r5, #1]
   1e284:	cmp	r3, #0
   1e288:	bne	1e2a0 <argp_error@@Base+0x12f4>
   1e28c:	ldr	r3, [r4]
   1e290:	cmp	r6, r3
   1e294:	beq	1e468 <argp_error@@Base+0x14bc>
   1e298:	ldr	r2, [sp, #32]
   1e29c:	ldr	r9, [r2, r3, lsl #2]
   1e2a0:	ldr	r3, [sp, #80]	; 0x50
   1e2a4:	ldr	r1, [sp, #32]
   1e2a8:	str	r3, [sp]
   1e2ac:	ldr	r3, [sp, #36]	; 0x24
   1e2b0:	ldr	lr, [pc, #564]	; 1e4ec <argp_error@@Base+0x1540>
   1e2b4:	mov	r2, fp
   1e2b8:	mov	r0, r6
   1e2bc:	mov	ip, #0
   1e2c0:	str	sl, [sp, #12]
   1e2c4:	str	r4, [sp, #8]
   1e2c8:	str	lr, [sp, #16]
   1e2cc:	str	ip, [sp, #4]
   1e2d0:	str	r9, [r4, #20]
   1e2d4:	str	ip, [r4, #12]
   1e2d8:	bl	1d214 <argp_error@@Base+0x268>
   1e2dc:	ldr	r3, [r4, #8]
   1e2e0:	ldr	r5, [r4]
   1e2e4:	ldr	r9, [r4, #12]
   1e2e8:	str	r3, [sp, #28]
   1e2ec:	mov	r2, r3
   1e2f0:	b	1e0d4 <argp_error@@Base+0x1128>
   1e2f4:	cmp	r5, r8
   1e2f8:	movne	r8, r5
   1e2fc:	strne	r5, [r4, #28]
   1e300:	b	1e158 <argp_error@@Base+0x11ac>
   1e304:	ldrb	r3, [r0, #2]
   1e308:	cmp	r3, #58	; 0x3a
   1e30c:	ldrb	r3, [r5, #1]
   1e310:	beq	1e3c8 <argp_error@@Base+0x141c>
   1e314:	cmp	r3, #0
   1e318:	ldr	r5, [r4]
   1e31c:	beq	1e39c <argp_error@@Base+0x13f0>
   1e320:	ldr	r3, [r4, #8]
   1e324:	mov	r0, r8
   1e328:	add	r5, r5, #1
   1e32c:	str	r9, [r4, #12]
   1e330:	str	r5, [r4]
   1e334:	str	r3, [sp, #28]
   1e338:	mov	r3, #0
   1e33c:	str	r3, [r4, #20]
   1e340:	ldr	r2, [sp, #28]
   1e344:	b	1e0d4 <argp_error@@Base+0x1128>
   1e348:	ldr	r2, [sp, #84]	; 0x54
   1e34c:	ldr	r3, [pc, #412]	; 1e4f0 <argp_error@@Base+0x1544>
   1e350:	str	r2, [sp, #4]
   1e354:	ldr	r2, [sp, #80]	; 0x50
   1e358:	str	r3, [sp, #16]
   1e35c:	str	r2, [sp]
   1e360:	add	r9, r9, #1
   1e364:	str	sl, [sp, #12]
   1e368:	str	r4, [sp, #8]
   1e36c:	ldr	r3, [sp, #36]	; 0x24
   1e370:	mov	r2, fp
   1e374:	ldr	r1, [sp, #32]
   1e378:	mov	r0, r6
   1e37c:	str	r9, [r4, #20]
   1e380:	bl	1d214 <argp_error@@Base+0x268>
   1e384:	cmn	r0, #1
   1e388:	bne	1e2dc <argp_error@@Base+0x1330>
   1e38c:	ldr	r3, [r4]
   1e390:	ldr	r2, [sp, #32]
   1e394:	ldr	r9, [r2, r3, lsl #2]
   1e398:	b	1e24c <argp_error@@Base+0x12a0>
   1e39c:	cmp	r6, r5
   1e3a0:	beq	1e438 <argp_error@@Base+0x148c>
   1e3a4:	ldr	r3, [r4, #8]
   1e3a8:	mov	r0, r8
   1e3ac:	str	r3, [sp, #28]
   1e3b0:	ldr	r3, [sp, #32]
   1e3b4:	ldr	r9, [r3, r5, lsl #2]
   1e3b8:	add	r5, r5, #1
   1e3bc:	str	r9, [r4, #12]
   1e3c0:	str	r5, [r4]
   1e3c4:	b	1e338 <argp_error@@Base+0x138c>
   1e3c8:	cmp	r3, #0
   1e3cc:	moveq	r9, r3
   1e3d0:	ldrne	r5, [r4]
   1e3d4:	mov	r3, #0
   1e3d8:	str	r3, [r4, #20]
   1e3dc:	ldr	r3, [r4, #8]
   1e3e0:	addne	r5, r5, #1
   1e3e4:	ldreq	r5, [r4]
   1e3e8:	strne	r5, [r4]
   1e3ec:	str	r9, [r4, #12]
   1e3f0:	mov	r0, r8
   1e3f4:	str	r3, [sp, #28]
   1e3f8:	mov	r2, r3
   1e3fc:	b	1e0d4 <argp_error@@Base+0x1128>
   1e400:	str	r3, [sp, #16]
   1e404:	ldr	r3, [sp, #84]	; 0x54
   1e408:	add	r9, r9, #2
   1e40c:	str	r3, [sp, #4]
   1e410:	ldr	r3, [sp, #80]	; 0x50
   1e414:	str	sl, [sp, #12]
   1e418:	str	r3, [sp]
   1e41c:	str	r4, [sp, #8]
   1e420:	mov	r3, r2
   1e424:	ldr	r1, [sp, #32]
   1e428:	mov	r2, fp
   1e42c:	mov	r0, r6
   1e430:	str	r9, [r4, #20]
   1e434:	b	1e2d8 <argp_error@@Base+0x132c>
   1e438:	cmp	sl, #0
   1e43c:	bne	1e4b0 <argp_error@@Base+0x1504>
   1e440:	str	r8, [r4, #8]
   1e444:	ldrb	r8, [fp]
   1e448:	cmp	r8, #58	; 0x3a
   1e44c:	moveq	r0, r8
   1e450:	ldreq	r5, [r4]
   1e454:	ldreq	r9, [r4, #12]
   1e458:	ldrne	r5, [r4]
   1e45c:	ldrne	r9, [r4, #12]
   1e460:	movne	r0, #63	; 0x3f
   1e464:	b	1e338 <argp_error@@Base+0x138c>
   1e468:	cmp	sl, #0
   1e46c:	beq	1e48c <argp_error@@Base+0x14e0>
   1e470:	ldr	r1, [pc, #104]	; 1e4e0 <argp_error@@Base+0x1534>
   1e474:	ldr	r3, [sp, #32]
   1e478:	ldr	r0, [r1]
   1e47c:	ldr	r2, [r3]
   1e480:	ldr	r1, [pc, #108]	; 1e4f4 <argp_error@@Base+0x1548>
   1e484:	mov	r3, r8
   1e488:	bl	11a0c <fprintf@plt>
   1e48c:	str	r8, [r4, #8]
   1e490:	ldrb	r8, [fp]
   1e494:	ldr	r5, [r4]
   1e498:	ldr	r9, [r4, #12]
   1e49c:	cmp	r8, #58	; 0x3a
   1e4a0:	movne	r0, #63	; 0x3f
   1e4a4:	moveq	r0, #58	; 0x3a
   1e4a8:	ldr	r2, [sp, #28]
   1e4ac:	b	1e0d4 <argp_error@@Base+0x1128>
   1e4b0:	ldr	r3, [sp, #32]
   1e4b4:	ldr	r1, [pc, #36]	; 1e4e0 <argp_error@@Base+0x1534>
   1e4b8:	ldr	r2, [r3]
   1e4bc:	ldr	r0, [r1]
   1e4c0:	mov	r3, r8
   1e4c4:	ldr	r1, [pc, #40]	; 1e4f4 <argp_error@@Base+0x1548>
   1e4c8:	bl	11a0c <fprintf@plt>
   1e4cc:	b	1e440 <argp_error@@Base+0x1494>
   1e4d0:	muleq	r3, r8, r3
   1e4d4:	andeq	r1, r3, r0, asr #9
   1e4d8:	andeq	pc, r1, r0, lsr pc	; <UNPREDICTABLE>
   1e4dc:	andeq	r1, r3, ip, lsl r6
   1e4e0:			; <UNDEFINED> instruction: 0x000313b0
   1e4e4:	andeq	r0, r2, r0, asr r8
   1e4e8:	andeq	r0, r2, ip, lsr r8
   1e4ec:	muleq	r2, r8, r8
   1e4f0:	andeq	r0, r2, ip, asr #16
   1e4f4:	andeq	r0, r2, ip, ror #16
   1e4f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e4fc:	sub	sp, sp, #20
   1e500:	ldr	r7, [pc, #1052]	; 1e924 <argp_error@@Base+0x1978>
   1e504:	ldr	r4, [pc, #1052]	; 1e928 <argp_error@@Base+0x197c>
   1e508:	subs	r6, r0, #0
   1e50c:	ldr	r5, [r7]
   1e510:	ldr	r3, [r7, #4]
   1e514:	str	r1, [sp, #4]
   1e518:	str	r5, [r4]
   1e51c:	str	r3, [r4, #4]
   1e520:	ble	1e7f8 <argp_error@@Base+0x184c>
   1e524:	mov	sl, r2
   1e528:	cmp	r5, #0
   1e52c:	mov	r2, #0
   1e530:	str	r2, [r4, #12]
   1e534:	beq	1e5e0 <argp_error@@Base+0x1634>
   1e538:	ldr	r2, [r4, #16]
   1e53c:	cmp	r2, #0
   1e540:	beq	1e5ec <argp_error@@Base+0x1640>
   1e544:	ldrb	r2, [sl]
   1e548:	sub	r1, r2, #43	; 0x2b
   1e54c:	tst	r1, #253	; 0xfd
   1e550:	ldrbeq	r2, [sl, #1]
   1e554:	addeq	sl, sl, #1
   1e558:	cmp	r2, #58	; 0x3a
   1e55c:	ldr	r2, [r4, #20]
   1e560:	moveq	r3, #0
   1e564:	cmp	r2, #0
   1e568:	beq	1e640 <argp_error@@Base+0x1694>
   1e56c:	ldrb	r1, [r2]
   1e570:	cmp	r1, #0
   1e574:	beq	1e640 <argp_error@@Base+0x1694>
   1e578:	add	r9, r2, #1
   1e57c:	str	r9, [r4, #20]
   1e580:	ldrb	r8, [r2]
   1e584:	mov	r0, sl
   1e588:	str	r3, [sp, #12]
   1e58c:	mov	r1, r8
   1e590:	str	r2, [sp, #8]
   1e594:	bl	119f4 <strchr@plt>
   1e598:	ldr	r2, [sp, #8]
   1e59c:	mov	fp, r8
   1e5a0:	ldr	r3, [sp, #12]
   1e5a4:	ldrb	r1, [r2, #1]
   1e5a8:	cmp	r1, #0
   1e5ac:	addeq	r5, r5, #1
   1e5b0:	sub	r1, r8, #58	; 0x3a
   1e5b4:	streq	r5, [r4]
   1e5b8:	cmp	r0, #0
   1e5bc:	cmpne	r1, #1
   1e5c0:	bls	1e72c <argp_error@@Base+0x1780>
   1e5c4:	ldrb	r1, [r0, #1]
   1e5c8:	cmp	r1, #58	; 0x3a
   1e5cc:	beq	1e838 <argp_error@@Base+0x188c>
   1e5d0:	mov	r0, r8
   1e5d4:	ldr	r9, [r4, #12]
   1e5d8:	ldr	fp, [r4, #8]
   1e5dc:	b	1e714 <argp_error@@Base+0x1768>
   1e5e0:	mov	r2, #1
   1e5e4:	mov	r5, r2
   1e5e8:	str	r2, [r4]
   1e5ec:	mov	r2, #0
   1e5f0:	str	r5, [r4, #32]
   1e5f4:	str	r5, [r4, #28]
   1e5f8:	str	r2, [r4, #20]
   1e5fc:	ldrb	r1, [sl]
   1e600:	cmp	r1, #45	; 0x2d
   1e604:	moveq	r1, #2
   1e608:	addeq	sl, sl, #1
   1e60c:	streq	r1, [r4, #24]
   1e610:	beq	1e62c <argp_error@@Base+0x1680>
   1e614:	cmp	r1, #43	; 0x2b
   1e618:	addeq	sl, sl, #1
   1e61c:	moveq	r1, r2
   1e620:	movne	r1, r2
   1e624:	streq	r2, [r4, #24]
   1e628:	strne	r2, [r4, #24]
   1e62c:	mov	r2, #1
   1e630:	str	r2, [r4, #16]
   1e634:	ldrb	r2, [sl]
   1e638:	cmp	r2, #58	; 0x3a
   1e63c:	beq	1e764 <argp_error@@Base+0x17b8>
   1e640:	add	r1, r4, #24
   1e644:	ldm	r1, {r1, r2, r8}
   1e648:	cmp	r8, r5
   1e64c:	movgt	r8, r5
   1e650:	strgt	r5, [r4, #32]
   1e654:	cmp	r5, r2
   1e658:	movlt	r2, r5
   1e65c:	strlt	r5, [r4, #28]
   1e660:	cmp	r1, #1
   1e664:	beq	1e778 <argp_error@@Base+0x17cc>
   1e668:	cmp	r6, r5
   1e66c:	str	r3, [sp, #8]
   1e670:	beq	1e7e8 <argp_error@@Base+0x183c>
   1e674:	ldr	fp, [sp, #4]
   1e678:	ldr	r1, [pc, #684]	; 1e92c <argp_error@@Base+0x1980>
   1e67c:	ldr	r9, [fp, r5, lsl #2]
   1e680:	mov	r0, r9
   1e684:	bl	11754 <strcmp@plt>
   1e688:	ldr	r3, [sp, #8]
   1e68c:	cmp	r0, #0
   1e690:	bne	1e6e8 <argp_error@@Base+0x173c>
   1e694:	add	r3, r5, #1
   1e698:	ldr	r5, [r4, #28]
   1e69c:	str	r3, [r4]
   1e6a0:	cmp	r5, r8
   1e6a4:	beq	1e82c <argp_error@@Base+0x1880>
   1e6a8:	cmp	r3, r8
   1e6ac:	beq	1e6c0 <argp_error@@Base+0x1714>
   1e6b0:	mov	r0, fp
   1e6b4:	ldr	r1, [pc, #620]	; 1e928 <argp_error@@Base+0x197c>
   1e6b8:	bl	1d158 <argp_error@@Base+0x1ac>
   1e6bc:	ldr	r5, [r4, #28]
   1e6c0:	mov	r8, r6
   1e6c4:	cmp	r8, r5
   1e6c8:	str	r6, [r4, #32]
   1e6cc:	str	r6, [r4]
   1e6d0:	beq	1e7f4 <argp_error@@Base+0x1848>
   1e6d4:	str	r5, [r4]
   1e6d8:	ldr	r9, [r4, #12]
   1e6dc:	ldr	fp, [r4, #8]
   1e6e0:	mvn	r0, #0
   1e6e4:	b	1e714 <argp_error@@Base+0x1768>
   1e6e8:	ldrb	r2, [r9]
   1e6ec:	cmp	r2, #45	; 0x2d
   1e6f0:	beq	1e818 <argp_error@@Base+0x186c>
   1e6f4:	ldr	r3, [r4, #24]
   1e6f8:	cmp	r3, #0
   1e6fc:	beq	1e7f8 <argp_error@@Base+0x184c>
   1e700:	ldr	fp, [r4, #8]
   1e704:	mov	r0, #1
   1e708:	add	r5, r5, #1
   1e70c:	str	r5, [r4]
   1e710:	str	r9, [r4, #12]
   1e714:	ldr	r3, [pc, #532]	; 1e930 <argp_error@@Base+0x1984>
   1e718:	str	r5, [r7]
   1e71c:	str	fp, [r7, #8]
   1e720:	str	r9, [r3]
   1e724:	add	sp, sp, #20
   1e728:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e72c:	cmp	r3, #0
   1e730:	beq	1e754 <argp_error@@Base+0x17a8>
   1e734:	ldr	r3, [sp, #4]
   1e738:	ldr	r1, [pc, #500]	; 1e934 <argp_error@@Base+0x1988>
   1e73c:	ldr	r2, [r3]
   1e740:	ldr	r0, [r1]
   1e744:	mov	r3, r8
   1e748:	ldr	r1, [pc, #488]	; 1e938 <argp_error@@Base+0x198c>
   1e74c:	bl	11a0c <fprintf@plt>
   1e750:	ldr	r5, [r4]
   1e754:	str	r8, [r4, #8]
   1e758:	ldr	r9, [r4, #12]
   1e75c:	mov	r0, #63	; 0x3f
   1e760:	b	1e714 <argp_error@@Base+0x1768>
   1e764:	cmp	r1, #1
   1e768:	mov	r8, r5
   1e76c:	mov	r2, r5
   1e770:	mov	r3, #0
   1e774:	bne	1e668 <argp_error@@Base+0x16bc>
   1e778:	cmp	r2, r8
   1e77c:	beq	1e870 <argp_error@@Base+0x18c4>
   1e780:	cmp	r5, r8
   1e784:	beq	1e7a0 <argp_error@@Base+0x17f4>
   1e788:	ldr	r1, [pc, #408]	; 1e928 <argp_error@@Base+0x197c>
   1e78c:	ldr	r0, [sp, #4]
   1e790:	str	r3, [sp, #8]
   1e794:	bl	1d158 <argp_error@@Base+0x1ac>
   1e798:	ldr	r8, [r4]
   1e79c:	ldr	r3, [sp, #8]
   1e7a0:	cmp	r6, r8
   1e7a4:	ldrgt	r2, [sp, #4]
   1e7a8:	addgt	r1, r2, r8, lsl #2
   1e7ac:	bgt	1e7c4 <argp_error@@Base+0x1818>
   1e7b0:	b	1e7e0 <argp_error@@Base+0x1834>
   1e7b4:	add	r8, r8, #1
   1e7b8:	cmp	r6, r8
   1e7bc:	str	r8, [r4]
   1e7c0:	beq	1e808 <argp_error@@Base+0x185c>
   1e7c4:	ldr	r2, [r1], #4
   1e7c8:	ldrb	r0, [r2]
   1e7cc:	cmp	r0, #45	; 0x2d
   1e7d0:	bne	1e7b4 <argp_error@@Base+0x1808>
   1e7d4:	ldrb	r2, [r2, #1]
   1e7d8:	cmp	r2, #0
   1e7dc:	beq	1e7b4 <argp_error@@Base+0x1808>
   1e7e0:	mov	r5, r8
   1e7e4:	b	1e80c <argp_error@@Base+0x1860>
   1e7e8:	ldr	r5, [r4, #28]
   1e7ec:	cmp	r8, r5
   1e7f0:	bne	1e6d4 <argp_error@@Base+0x1728>
   1e7f4:	mov	r5, r6
   1e7f8:	ldr	r9, [r4, #12]
   1e7fc:	ldr	fp, [r4, #8]
   1e800:	mvn	r0, #0
   1e804:	b	1e714 <argp_error@@Base+0x1768>
   1e808:	mov	r5, r6
   1e80c:	mov	r8, r5
   1e810:	str	r5, [r4, #32]
   1e814:	b	1e668 <argp_error@@Base+0x16bc>
   1e818:	ldrb	r2, [r9, #1]
   1e81c:	cmp	r2, #0
   1e820:	beq	1e6f4 <argp_error@@Base+0x1748>
   1e824:	add	r2, r9, #1
   1e828:	b	1e578 <argp_error@@Base+0x15cc>
   1e82c:	mov	r5, r3
   1e830:	str	r3, [r4, #28]
   1e834:	b	1e6c0 <argp_error@@Base+0x1714>
   1e838:	ldrb	r1, [r0, #2]
   1e83c:	cmp	r1, #58	; 0x3a
   1e840:	beq	1e8ac <argp_error@@Base+0x1900>
   1e844:	ldrb	r2, [r2, #1]
   1e848:	cmp	r2, #0
   1e84c:	beq	1e880 <argp_error@@Base+0x18d4>
   1e850:	ldr	fp, [r4, #8]
   1e854:	mov	r0, r8
   1e858:	add	r5, r5, #1
   1e85c:	str	r5, [r4]
   1e860:	str	r9, [r4, #12]
   1e864:	mov	r3, #0
   1e868:	str	r3, [r4, #20]
   1e86c:	b	1e714 <argp_error@@Base+0x1768>
   1e870:	cmp	r5, r8
   1e874:	movne	r8, r5
   1e878:	strne	r5, [r4, #28]
   1e87c:	b	1e7a0 <argp_error@@Base+0x17f4>
   1e880:	cmp	r6, r5
   1e884:	beq	1e8d8 <argp_error@@Base+0x192c>
   1e888:	ldr	r2, [sp, #4]
   1e88c:	add	r3, r5, #1
   1e890:	ldr	fp, [r4, #8]
   1e894:	ldr	r9, [r2, r5, lsl #2]
   1e898:	mov	r0, r8
   1e89c:	mov	r5, r3
   1e8a0:	str	r9, [r4, #12]
   1e8a4:	str	r3, [r4]
   1e8a8:	b	1e864 <argp_error@@Base+0x18b8>
   1e8ac:	ldrb	r3, [r2, #1]
   1e8b0:	mov	r0, r8
   1e8b4:	ldr	fp, [r4, #8]
   1e8b8:	cmp	r3, #0
   1e8bc:	moveq	r9, r3
   1e8c0:	addne	r5, r5, #1
   1e8c4:	mov	r3, #0
   1e8c8:	strne	r5, [r4]
   1e8cc:	str	r9, [r4, #12]
   1e8d0:	str	r3, [r4, #20]
   1e8d4:	b	1e714 <argp_error@@Base+0x1768>
   1e8d8:	cmp	r3, #0
   1e8dc:	beq	1e900 <argp_error@@Base+0x1954>
   1e8e0:	ldr	r3, [sp, #4]
   1e8e4:	ldr	r1, [pc, #72]	; 1e934 <argp_error@@Base+0x1988>
   1e8e8:	ldr	r2, [r3]
   1e8ec:	ldr	r0, [r1]
   1e8f0:	mov	r3, r8
   1e8f4:	ldr	r1, [pc, #64]	; 1e93c <argp_error@@Base+0x1990>
   1e8f8:	bl	11a0c <fprintf@plt>
   1e8fc:	ldr	r6, [r4]
   1e900:	str	r8, [r4, #8]
   1e904:	ldrb	r8, [sl]
   1e908:	mov	r5, r6
   1e90c:	cmp	r8, #58	; 0x3a
   1e910:	moveq	r0, r8
   1e914:	ldreq	r9, [r4, #12]
   1e918:	ldrne	r9, [r4, #12]
   1e91c:	movne	r0, #63	; 0x3f
   1e920:	b	1e864 <argp_error@@Base+0x18b8>
   1e924:	muleq	r3, r8, r3
   1e928:	andeq	r1, r3, r0, asr #9
   1e92c:	andeq	pc, r1, r0, lsr pc	; <UNPREDICTABLE>
   1e930:	andeq	r1, r3, ip, lsl r6
   1e934:			; <UNDEFINED> instruction: 0x000313b0
   1e938:	andeq	r0, r2, r0, asr r8
   1e93c:	andeq	r0, r2, ip, ror #16
   1e940:	push	{r4, r5, r6, r7, r8, lr}
   1e944:	mov	r8, r0
   1e948:	mov	r0, #36	; 0x24
   1e94c:	mov	r7, r1
   1e950:	mov	r6, r2
   1e954:	mov	r5, r3
   1e958:	bl	18be0 <argp_parse@@Base+0x1eb8>
   1e95c:	subs	r4, r0, #0
   1e960:	beq	1e9a4 <argp_error@@Base+0x19f8>
   1e964:	mov	r0, #0
   1e968:	str	r5, [r4, #12]
   1e96c:	str	r0, [r4, #20]
   1e970:	str	r0, [r4, #16]
   1e974:	str	r8, [r4]
   1e978:	str	r7, [r4, #4]
   1e97c:	str	r6, [r4, #8]
   1e980:	mov	r0, #200	; 0xc8
   1e984:	bl	18be0 <argp_parse@@Base+0x1eb8>
   1e988:	cmp	r0, #0
   1e98c:	addne	r3, r0, #200	; 0xc8
   1e990:	mov	r5, r0
   1e994:	str	r0, [r4, #24]
   1e998:	strne	r0, [r4, #28]
   1e99c:	strne	r3, [r4, #32]
   1e9a0:	beq	1e9ac <argp_error@@Base+0x1a00>
   1e9a4:	mov	r0, r4
   1e9a8:	pop	{r4, r5, r6, r7, r8, pc}
   1e9ac:	mov	r0, r4
   1e9b0:	bl	17ca4 <argp_parse@@Base+0xf7c>
   1e9b4:	mov	r4, r5
   1e9b8:	b	1e9a4 <argp_error@@Base+0x19f8>
   1e9bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e9c0:	mov	r7, r0
   1e9c4:	ldr	r4, [r0, #24]
   1e9c8:	ldr	r3, [r0, #16]
   1e9cc:	ldr	r9, [r0, #28]
   1e9d0:	sub	sp, sp, #12
   1e9d4:	add	r4, r4, r3
   1e9d8:	mov	sl, #32
   1e9dc:	cmp	r4, r9
   1e9e0:	bcs	1eab4 <argp_error@@Base+0x1b08>
   1e9e4:	ldr	r8, [r7, #20]
   1e9e8:	cmp	r8, #0
   1e9ec:	bne	1ea58 <argp_error@@Base+0x1aac>
   1e9f0:	ldr	r5, [r7, #4]
   1e9f4:	cmp	r5, #0
   1e9f8:	beq	1ed28 <argp_error@@Base+0x1d7c>
   1e9fc:	ldr	r2, [r7, #32]
   1ea00:	add	r3, r9, r5
   1ea04:	cmp	r2, r3
   1ea08:	bls	1ea20 <argp_error@@Base+0x1a74>
   1ea0c:	b	1ee50 <argp_error@@Base+0x1ea4>
   1ea10:	cmp	r5, r8
   1ea14:	str	r1, [r0, #20]
   1ea18:	strb	sl, [r3]
   1ea1c:	beq	1ea4c <argp_error@@Base+0x1aa0>
   1ea20:	ldr	r0, [r7]
   1ea24:	add	r8, r8, #1
   1ea28:	ldr	r3, [r0, #20]
   1ea2c:	ldr	r2, [r0, #24]
   1ea30:	add	r1, r3, #1
   1ea34:	cmp	r3, r2
   1ea38:	bcc	1ea10 <argp_error@@Base+0x1a64>
   1ea3c:	mov	r1, sl
   1ea40:	bl	11ab4 <__overflow@plt>
   1ea44:	cmp	r5, r8
   1ea48:	bne	1ea20 <argp_error@@Base+0x1a74>
   1ea4c:	ldr	r9, [r7, #28]
   1ea50:	mov	r8, r5
   1ea54:	str	r5, [r7, #20]
   1ea58:	sub	fp, r9, r4
   1ea5c:	mov	r2, fp
   1ea60:	mov	r1, #10
   1ea64:	mov	r0, r4
   1ea68:	bl	11a90 <memchr@plt>
   1ea6c:	cmp	r8, #0
   1ea70:	movlt	r8, #0
   1ea74:	movlt	r3, r8
   1ea78:	mov	r5, r0
   1ea7c:	strlt	r3, [r7, #20]
   1ea80:	cmp	r5, #0
   1ea84:	beq	1ed48 <argp_error@@Base+0x1d9c>
   1ea88:	sub	r2, r5, r4
   1ea8c:	ldr	r3, [r7, #8]
   1ea90:	add	r2, r2, r8
   1ea94:	cmp	r2, r3
   1ea98:	bge	1eac8 <argp_error@@Base+0x1b1c>
   1ea9c:	ldr	r9, [r7, #28]
   1eaa0:	add	r4, r5, #1
   1eaa4:	mov	r3, #0
   1eaa8:	cmp	r4, r9
   1eaac:	str	r3, [r7, #20]
   1eab0:	bcc	1e9e4 <argp_error@@Base+0x1a38>
   1eab4:	ldr	r3, [r7, #24]
   1eab8:	sub	r9, r9, r3
   1eabc:	str	r9, [r7, #16]
   1eac0:	add	sp, sp, #12
   1eac4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1eac8:	ldr	r2, [r7, #12]
   1eacc:	sub	r6, r3, #1
   1ead0:	cmp	r2, #0
   1ead4:	str	r2, [sp, #4]
   1ead8:	blt	1ee00 <argp_error@@Base+0x1e54>
   1eadc:	add	r6, r6, #1
   1eae0:	sub	r8, r6, r8
   1eae4:	adds	r8, r4, r8
   1eae8:	bcs	1ed80 <argp_error@@Base+0x1dd4>
   1eaec:	bl	119ac <__ctype_b_loc@plt>
   1eaf0:	mov	r3, r8
   1eaf4:	ldr	r0, [r0]
   1eaf8:	b	1eb04 <argp_error@@Base+0x1b58>
   1eafc:	cmp	r3, r4
   1eb00:	bcc	1ed84 <argp_error@@Base+0x1dd8>
   1eb04:	mov	r1, r3
   1eb08:	sub	r3, r3, #1
   1eb0c:	ldrb	r2, [r1]
   1eb10:	mov	r6, r3
   1eb14:	lsl	r2, r2, #1
   1eb18:	ldrh	r2, [r0, r2]
   1eb1c:	tst	r2, #1
   1eb20:	beq	1eafc <argp_error@@Base+0x1b50>
   1eb24:	add	r6, r1, #1
   1eb28:	cmp	r6, r4
   1eb2c:	bls	1ed98 <argp_error@@Base+0x1dec>
   1eb30:	cmp	r4, r1
   1eb34:	bhi	1ed90 <argp_error@@Base+0x1de4>
   1eb38:	mov	r1, r3
   1eb3c:	sub	r8, r4, #1
   1eb40:	b	1eb5c <argp_error@@Base+0x1bb0>
   1eb44:	ldrb	r3, [r1]
   1eb48:	sub	r1, r1, #1
   1eb4c:	lsl	r3, r3, #1
   1eb50:	ldrh	r3, [r0, r3]
   1eb54:	tst	r3, #1
   1eb58:	beq	1ee88 <argp_error@@Base+0x1edc>
   1eb5c:	cmp	r8, r1
   1eb60:	mov	r2, r1
   1eb64:	bne	1eb44 <argp_error@@Base+0x1b98>
   1eb68:	add	r8, r8, #1
   1eb6c:	add	r3, fp, #1
   1eb70:	add	r3, r4, r3
   1eb74:	cmp	r6, r3
   1eb78:	beq	1ec58 <argp_error@@Base+0x1cac>
   1eb7c:	add	r5, r8, #1
   1eb80:	ldr	r3, [sp, #4]
   1eb84:	sub	r1, r6, r5
   1eb88:	cmp	r1, r3
   1eb8c:	bge	1ec74 <argp_error@@Base+0x1cc8>
   1eb90:	cmp	r6, r9
   1eb94:	bcs	1ec6c <argp_error@@Base+0x1cc0>
   1eb98:	ldr	r3, [r7, #32]
   1eb9c:	ldr	r2, [sp, #4]
   1eba0:	sub	r3, r3, r9
   1eba4:	add	r0, r2, #1
   1eba8:	cmp	r3, r0
   1ebac:	bgt	1eeb8 <argp_error@@Base+0x1f0c>
   1ebb0:	ldr	r0, [r7, #24]
   1ebb4:	cmp	r8, r0
   1ebb8:	bls	1ebcc <argp_error@@Base+0x1c20>
   1ebbc:	sub	r2, r8, r0
   1ebc0:	ldr	r3, [r7]
   1ebc4:	mov	r1, #1
   1ebc8:	bl	1182c <fwrite_unlocked@plt>
   1ebcc:	ldr	r0, [r7]
   1ebd0:	ldr	r2, [r0, #24]
   1ebd4:	ldr	r3, [r0, #20]
   1ebd8:	cmp	r3, r2
   1ebdc:	addcc	r2, r3, #1
   1ebe0:	strcc	r2, [r0, #20]
   1ebe4:	movcc	r2, #10
   1ebe8:	strbcc	r2, [r3]
   1ebec:	bcs	1eef8 <argp_error@@Base+0x1f4c>
   1ebf0:	ldr	r5, [r7, #24]
   1ebf4:	sub	r4, r4, r5
   1ebf8:	sub	r1, r6, r5
   1ebfc:	add	fp, fp, r4
   1ec00:	mov	r9, r1
   1ec04:	mov	r2, r5
   1ec08:	ldr	r3, [r7, #12]
   1ec0c:	cmp	r3, r1
   1ec10:	bgt	1ec90 <argp_error@@Base+0x1ce4>
   1ec14:	cmp	r3, #0
   1ec18:	mov	r4, r5
   1ec1c:	ble	1ec34 <argp_error@@Base+0x1c88>
   1ec20:	strb	sl, [r4], #1
   1ec24:	ldr	r3, [r7, #12]
   1ec28:	sub	r1, r4, r5
   1ec2c:	cmp	r1, r3
   1ec30:	blt	1ec20 <argp_error@@Base+0x1c74>
   1ec34:	cmp	r4, r6
   1ec38:	bcc	1ed0c <argp_error@@Base+0x1d60>
   1ec3c:	sub	r9, fp, r9
   1ec40:	cmp	r3, #0
   1ec44:	add	r9, r4, r9
   1ec48:	mvneq	r3, #0
   1ec4c:	str	r9, [r7, #28]
   1ec50:	str	r3, [r7, #20]
   1ec54:	b	1e9dc <argp_error@@Base+0x1a30>
   1ec58:	ldr	r3, [r7, #32]
   1ec5c:	ldr	r2, [sp, #4]
   1ec60:	sub	r3, r3, r8
   1ec64:	cmp	r3, r2
   1ec68:	ble	1eb90 <argp_error@@Base+0x1be4>
   1ec6c:	add	r5, r8, #1
   1ec70:	sub	r1, r6, r5
   1ec74:	mov	r3, #10
   1ec78:	strb	r3, [r8]
   1ec7c:	ldr	r3, [r7, #12]
   1ec80:	sub	r9, r6, r4
   1ec84:	cmp	r3, r1
   1ec88:	mov	r2, r4
   1ec8c:	ble	1ec14 <argp_error@@Base+0x1c68>
   1ec90:	add	r1, fp, #1
   1ec94:	add	r1, r2, r1
   1ec98:	cmp	r6, r1
   1ec9c:	beq	1eea4 <argp_error@@Base+0x1ef8>
   1eca0:	cmp	r3, #0
   1eca4:	ble	1ed00 <argp_error@@Base+0x1d54>
   1eca8:	mov	r4, #0
   1ecac:	mov	r8, r2
   1ecb0:	b	1eccc <argp_error@@Base+0x1d20>
   1ecb4:	str	ip, [r0, #20]
   1ecb8:	strb	sl, [r3]
   1ecbc:	ldr	r3, [r7, #12]
   1ecc0:	add	r4, r4, #1
   1ecc4:	cmp	r3, r4
   1ecc8:	ble	1ecfc <argp_error@@Base+0x1d50>
   1eccc:	ldr	r0, [r7]
   1ecd0:	ldr	r3, [r0, #20]
   1ecd4:	ldr	r1, [r0, #24]
   1ecd8:	add	ip, r3, #1
   1ecdc:	cmp	r3, r1
   1ece0:	bcc	1ecb4 <argp_error@@Base+0x1d08>
   1ece4:	mov	r1, sl
   1ece8:	bl	11ab4 <__overflow@plt>
   1ecec:	ldr	r3, [r7, #12]
   1ecf0:	add	r4, r4, #1
   1ecf4:	cmp	r3, r4
   1ecf8:	bgt	1eccc <argp_error@@Base+0x1d20>
   1ecfc:	mov	r2, r8
   1ed00:	mov	r4, r5
   1ed04:	cmp	r4, r6
   1ed08:	bcs	1ec3c <argp_error@@Base+0x1c90>
   1ed0c:	add	r2, r2, fp
   1ed10:	sub	r2, r2, r6
   1ed14:	mov	r1, r6
   1ed18:	mov	r0, r4
   1ed1c:	bl	117c0 <memmove@plt>
   1ed20:	ldr	r3, [r7, #12]
   1ed24:	b	1ec3c <argp_error@@Base+0x1c90>
   1ed28:	sub	fp, r9, r4
   1ed2c:	mov	r2, fp
   1ed30:	mov	r1, #10
   1ed34:	mov	r0, r4
   1ed38:	bl	11a90 <memchr@plt>
   1ed3c:	mov	r5, r0
   1ed40:	cmp	r5, #0
   1ed44:	bne	1ea88 <argp_error@@Base+0x1adc>
   1ed48:	ldr	r6, [r7, #8]
   1ed4c:	add	r3, fp, r8
   1ed50:	cmp	r3, r6
   1ed54:	bcc	1ef1c <argp_error@@Base+0x1f70>
   1ed58:	ldr	r2, [r7, #12]
   1ed5c:	sub	r6, r6, #1
   1ed60:	cmp	r2, #0
   1ed64:	str	r2, [sp, #4]
   1ed68:	blt	1ef08 <argp_error@@Base+0x1f5c>
   1ed6c:	add	r6, r6, #1
   1ed70:	sub	r8, r6, r8
   1ed74:	adds	r8, r4, r8
   1ed78:	mov	r5, r9
   1ed7c:	bcc	1eaec <argp_error@@Base+0x1b40>
   1ed80:	mov	r6, r8
   1ed84:	add	r6, r6, #1
   1ed88:	cmp	r4, r6
   1ed8c:	bcs	1ed98 <argp_error@@Base+0x1dec>
   1ed90:	mov	r8, r6
   1ed94:	b	1eb6c <argp_error@@Base+0x1bc0>
   1ed98:	cmp	r8, r5
   1ed9c:	bcs	1edd4 <argp_error@@Base+0x1e28>
   1eda0:	add	r6, r8, #1
   1eda4:	b	1edc8 <argp_error@@Base+0x1e1c>
   1eda8:	bl	119ac <__ctype_b_loc@plt>
   1edac:	ldrb	r3, [r6]
   1edb0:	add	r6, r6, #1
   1edb4:	lsl	r3, r3, #1
   1edb8:	ldr	r2, [r0]
   1edbc:	ldrh	r3, [r2, r3]
   1edc0:	tst	r3, #1
   1edc4:	bne	1ede4 <argp_error@@Base+0x1e38>
   1edc8:	cmp	r6, r5
   1edcc:	mov	r8, r6
   1edd0:	bne	1eda8 <argp_error@@Base+0x1dfc>
   1edd4:	cmp	r8, r5
   1edd8:	beq	1ee90 <argp_error@@Base+0x1ee4>
   1eddc:	bl	119ac <__ctype_b_loc@plt>
   1ede0:	ldr	r2, [r0]
   1ede4:	mov	r6, r8
   1ede8:	ldrb	r3, [r6, #1]!
   1edec:	lsl	r3, r3, #1
   1edf0:	ldrh	r3, [r2, r3]
   1edf4:	tst	r3, #1
   1edf8:	bne	1ede8 <argp_error@@Base+0x1e3c>
   1edfc:	b	1eb6c <argp_error@@Base+0x1bc0>
   1ee00:	cmp	r9, r5
   1ee04:	str	r3, [sp, #4]
   1ee08:	bls	1ef04 <argp_error@@Base+0x1f58>
   1ee0c:	sub	r0, r6, r8
   1ee10:	sub	r2, r9, r5
   1ee14:	add	r0, r4, r0
   1ee18:	mov	r1, r5
   1ee1c:	bl	117c0 <memmove@plt>
   1ee20:	ldr	r2, [r7, #20]
   1ee24:	ldr	r9, [r7, #28]
   1ee28:	sub	r6, r6, r2
   1ee2c:	add	r6, r4, r6
   1ee30:	mov	r3, #0
   1ee34:	sub	r5, r6, r5
   1ee38:	str	r3, [r7, #20]
   1ee3c:	ldr	r3, [sp, #4]
   1ee40:	sub	r9, r9, r5
   1ee44:	add	r4, r4, r3
   1ee48:	str	r9, [r7, #28]
   1ee4c:	b	1e9dc <argp_error@@Base+0x1a30>
   1ee50:	add	r6, r4, r5
   1ee54:	sub	r2, r9, r4
   1ee58:	mov	r1, r4
   1ee5c:	mov	r0, r6
   1ee60:	bl	117c0 <memmove@plt>
   1ee64:	ldr	r3, [r7, #28]
   1ee68:	mov	r0, r4
   1ee6c:	add	r3, r3, r5
   1ee70:	str	r3, [r7, #28]
   1ee74:	mov	r2, r5
   1ee78:	mov	r1, sl
   1ee7c:	mov	r4, r6
   1ee80:	bl	11a54 <memset@plt>
   1ee84:	b	1ea4c <argp_error@@Base+0x1aa0>
   1ee88:	add	r8, r2, #1
   1ee8c:	b	1eb6c <argp_error@@Base+0x1bc0>
   1ee90:	mov	r3, #0
   1ee94:	str	r3, [r7, #20]
   1ee98:	add	r4, r8, #1
   1ee9c:	ldr	r9, [r7, #28]
   1eea0:	b	1e9dc <argp_error@@Base+0x1a30>
   1eea4:	ldr	r1, [r7, #32]
   1eea8:	sub	r1, r1, r6
   1eeac:	cmp	r3, r1
   1eeb0:	ble	1ec14 <argp_error@@Base+0x1c68>
   1eeb4:	b	1eca0 <argp_error@@Base+0x1cf4>
   1eeb8:	sub	r9, r9, r6
   1eebc:	mov	r1, r6
   1eec0:	mov	r2, r9
   1eec4:	add	r0, r8, r0
   1eec8:	bl	117c0 <memmove@plt>
   1eecc:	ldr	r1, [r7, #12]
   1eed0:	mov	r3, #10
   1eed4:	add	r6, r1, #1
   1eed8:	add	r6, r8, r6
   1eedc:	add	r9, r6, r9
   1eee0:	sub	fp, r9, r4
   1eee4:	add	r5, r8, #1
   1eee8:	strb	r3, [r8]
   1eeec:	sub	r9, r6, r4
   1eef0:	mov	r2, r4
   1eef4:	b	1ec08 <argp_error@@Base+0x1c5c>
   1eef8:	mov	r1, #10
   1eefc:	bl	11ab4 <__overflow@plt>
   1ef00:	b	1ebf0 <argp_error@@Base+0x1c44>
   1ef04:	add	r3, r8, fp
   1ef08:	sub	r6, r6, r3
   1ef0c:	add	r9, r9, r6
   1ef10:	str	r9, [r7, #28]
   1ef14:	str	r3, [r7, #20]
   1ef18:	b	1eab4 <argp_error@@Base+0x1b08>
   1ef1c:	str	r3, [r7, #20]
   1ef20:	ldr	r9, [r7, #28]
   1ef24:	b	1eab4 <argp_error@@Base+0x1b08>
   1ef28:	push	{r4, lr}
   1ef2c:	mov	r4, r0
   1ef30:	bl	1e9bc <argp_error@@Base+0x1a10>
   1ef34:	ldr	r2, [r4, #28]
   1ef38:	ldr	r0, [r4, #24]
   1ef3c:	cmp	r2, r0
   1ef40:	bls	1ef58 <argp_error@@Base+0x1fac>
   1ef44:	sub	r2, r2, r0
   1ef48:	ldr	r3, [r4]
   1ef4c:	mov	r1, #1
   1ef50:	bl	1182c <fwrite_unlocked@plt>
   1ef54:	ldr	r0, [r4, #24]
   1ef58:	bl	17ca4 <argp_parse@@Base+0xf7c>
   1ef5c:	mov	r0, r4
   1ef60:	pop	{r4, lr}
   1ef64:	b	17ca4 <argp_parse@@Base+0xf7c>
   1ef68:	ldr	r3, [r0, #32]
   1ef6c:	ldr	r2, [r0, #28]
   1ef70:	sub	r3, r3, r2
   1ef74:	cmp	r3, r1
   1ef78:	bcc	1ef88 <argp_error@@Base+0x1fdc>
   1ef7c:	mov	r3, #1
   1ef80:	mov	r0, r3
   1ef84:	bx	lr
   1ef88:	push	{r4, r5, r6, lr}
   1ef8c:	mov	r4, r0
   1ef90:	mov	r5, r1
   1ef94:	bl	1e9bc <argp_error@@Base+0x1a10>
   1ef98:	ldr	r3, [r4, #24]
   1ef9c:	ldr	r2, [r4, #28]
   1efa0:	mov	r0, r3
   1efa4:	sub	r2, r2, r3
   1efa8:	mov	r1, #1
   1efac:	ldr	r3, [r4]
   1efb0:	bl	1182c <fwrite_unlocked@plt>
   1efb4:	ldr	r2, [r4, #28]
   1efb8:	ldr	r3, [r4, #24]
   1efbc:	sub	r1, r2, r3
   1efc0:	cmp	r0, r1
   1efc4:	bne	1f00c <argp_error@@Base+0x2060>
   1efc8:	ldr	r1, [r4, #32]
   1efcc:	mov	r2, #0
   1efd0:	sub	r1, r1, r3
   1efd4:	cmp	r5, r1
   1efd8:	str	r3, [r4, #28]
   1efdc:	str	r2, [r4, #16]
   1efe0:	bls	1f000 <argp_error@@Base+0x2054>
   1efe4:	adds	r5, r5, r1
   1efe8:	bcc	1f03c <argp_error@@Base+0x2090>
   1efec:	bl	11a24 <__errno_location@plt>
   1eff0:	mov	r2, #12
   1eff4:	mov	r3, #0
   1eff8:	str	r2, [r0]
   1effc:	b	1f004 <argp_error@@Base+0x2058>
   1f000:	mov	r3, #1
   1f004:	mov	r0, r3
   1f008:	pop	{r4, r5, r6, pc}
   1f00c:	ldr	r1, [r4, #16]
   1f010:	sub	r2, r2, r0
   1f014:	sub	r1, r1, r0
   1f018:	str	r2, [r4, #28]
   1f01c:	str	r1, [r4, #16]
   1f020:	sub	r2, r2, r3
   1f024:	add	r1, r3, r0
   1f028:	mov	r0, r3
   1f02c:	bl	117c0 <memmove@plt>
   1f030:	mov	r3, #0
   1f034:	mov	r0, r3
   1f038:	pop	{r4, r5, r6, pc}
   1f03c:	mov	r0, r3
   1f040:	mov	r1, r5
   1f044:	bl	18c0c <argp_parse@@Base+0x1ee4>
   1f048:	cmp	r0, #0
   1f04c:	beq	1efec <argp_error@@Base+0x2040>
   1f050:	add	r5, r0, r5
   1f054:	mov	r3, #1
   1f058:	str	r5, [r4, #32]
   1f05c:	str	r0, [r4, #24]
   1f060:	str	r0, [r4, #28]
   1f064:	b	1f004 <argp_error@@Base+0x2058>
   1f068:	push	{r1, r2, r3}
   1f06c:	push	{r4, r5, r6, r7, r8, r9, lr}
   1f070:	sub	sp, sp, #8
   1f074:	mov	r5, r0
   1f078:	ldr	r7, [sp, #36]	; 0x24
   1f07c:	mov	r4, #150	; 0x96
   1f080:	mov	r8, #1
   1f084:	mov	r9, #0
   1f088:	add	r6, sp, #40	; 0x28
   1f08c:	ldr	r1, [r5, #32]
   1f090:	ldr	r0, [r5, #28]
   1f094:	sub	r3, r1, r0
   1f098:	cmp	r4, r3
   1f09c:	bhi	1f0e4 <argp_error@@Base+0x2138>
   1f0a0:	sub	r4, r1, r0
   1f0a4:	mov	r1, r4
   1f0a8:	mov	r3, r6
   1f0ac:	mov	r2, r7
   1f0b0:	str	r6, [sp, #4]
   1f0b4:	bl	11b68 <vsnprintf@plt>
   1f0b8:	cmp	r4, r0
   1f0bc:	bls	1f0dc <argp_error@@Base+0x2130>
   1f0c0:	ldr	r3, [r5, #28]
   1f0c4:	add	r3, r3, r0
   1f0c8:	str	r3, [r5, #28]
   1f0cc:	add	sp, sp, #8
   1f0d0:	pop	{r4, r5, r6, r7, r8, r9, lr}
   1f0d4:	add	sp, sp, #12
   1f0d8:	bx	lr
   1f0dc:	add	r4, r0, #1
   1f0e0:	b	1f08c <argp_error@@Base+0x20e0>
   1f0e4:	mov	r0, r5
   1f0e8:	bl	1e9bc <argp_error@@Base+0x1a10>
   1f0ec:	ldr	r3, [r5, #24]
   1f0f0:	ldr	r2, [r5, #28]
   1f0f4:	mov	r0, r3
   1f0f8:	sub	r2, r2, r3
   1f0fc:	mov	r1, r8
   1f100:	ldr	r3, [r5]
   1f104:	bl	1182c <fwrite_unlocked@plt>
   1f108:	ldr	r2, [r5, #28]
   1f10c:	ldr	r3, [r5, #24]
   1f110:	sub	r1, r2, r3
   1f114:	cmp	r0, r1
   1f118:	bne	1f160 <argp_error@@Base+0x21b4>
   1f11c:	ldr	r1, [r5, #32]
   1f120:	str	r3, [r5, #28]
   1f124:	sub	r0, r1, r3
   1f128:	cmp	r4, r0
   1f12c:	str	r9, [r5, #16]
   1f130:	movls	r0, r3
   1f134:	bls	1f0a0 <argp_error@@Base+0x20f4>
   1f138:	adds	r4, r4, r0
   1f13c:	bcc	1f188 <argp_error@@Base+0x21dc>
   1f140:	bl	11a24 <__errno_location@plt>
   1f144:	mov	r3, #12
   1f148:	str	r3, [r0]
   1f14c:	mvn	r0, #0
   1f150:	add	sp, sp, #8
   1f154:	pop	{r4, r5, r6, r7, r8, r9, lr}
   1f158:	add	sp, sp, #12
   1f15c:	bx	lr
   1f160:	ldr	r1, [r5, #16]
   1f164:	sub	r2, r2, r0
   1f168:	sub	r1, r1, r0
   1f16c:	str	r2, [r5, #28]
   1f170:	str	r1, [r5, #16]
   1f174:	sub	r2, r2, r3
   1f178:	add	r1, r3, r0
   1f17c:	mov	r0, r3
   1f180:	bl	117c0 <memmove@plt>
   1f184:	b	1f14c <argp_error@@Base+0x21a0>
   1f188:	mov	r1, r4
   1f18c:	mov	r0, r3
   1f190:	bl	18c0c <argp_parse@@Base+0x1ee4>
   1f194:	cmp	r0, #0
   1f198:	add	r1, r0, r4
   1f19c:	beq	1f140 <argp_error@@Base+0x2194>
   1f1a0:	str	r0, [r5, #24]
   1f1a4:	str	r1, [r5, #32]
   1f1a8:	str	r0, [r5, #28]
   1f1ac:	b	1f0a0 <argp_error@@Base+0x20f4>
   1f1b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1f1b4:	mov	r7, r0
   1f1b8:	ldr	r6, [pc, #72]	; 1f208 <argp_error@@Base+0x225c>
   1f1bc:	ldr	r5, [pc, #72]	; 1f20c <argp_error@@Base+0x2260>
   1f1c0:	add	r6, pc, r6
   1f1c4:	add	r5, pc, r5
   1f1c8:	sub	r6, r6, r5
   1f1cc:	mov	r8, r1
   1f1d0:	mov	r9, r2
   1f1d4:	bl	11704 <calloc@plt-0x20>
   1f1d8:	asrs	r6, r6, #2
   1f1dc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1f1e0:	mov	r4, #0
   1f1e4:	add	r4, r4, #1
   1f1e8:	ldr	r3, [r5], #4
   1f1ec:	mov	r2, r9
   1f1f0:	mov	r1, r8
   1f1f4:	mov	r0, r7
   1f1f8:	blx	r3
   1f1fc:	cmp	r6, r4
   1f200:	bne	1f1e4 <argp_error@@Base+0x2238>
   1f204:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1f208:	andeq	r1, r1, r0, asr #26
   1f20c:	andeq	r1, r1, r8, lsr sp
   1f210:	bx	lr

Disassembly of section .fini:

0001f214 <.fini>:
   1f214:	push	{r3, lr}
   1f218:	pop	{r3, pc}
