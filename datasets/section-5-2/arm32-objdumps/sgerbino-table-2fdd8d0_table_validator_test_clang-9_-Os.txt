
../repos/sgerbino-table-2fdd8d0/bin/table_validator_test:     file format elf32-littlearm


Disassembly of section .init:

00011f9c <.init>:
   11f9c:	push	{r3, lr}
   11fa0:	bl	120ac <_start@@Base+0x3c>
   11fa4:	pop	{r3, pc}

Disassembly of section .plt:

00011fa8 <strcmp@plt-0x14>:
   11fa8:	push	{lr}		; (str lr, [sp, #-4]!)
   11fac:	ldr	lr, [pc, #4]	; 11fb8 <strcmp@plt-0x4>
   11fb0:	add	lr, pc, lr
   11fb4:	ldr	pc, [lr, #8]!
   11fb8:	andeq	r4, r1, r8, asr #32

00011fbc <strcmp@plt>:
   11fbc:	add	ip, pc, #0, 12
   11fc0:	add	ip, ip, #20, 20	; 0x14000
   11fc4:	ldr	pc, [ip, #72]!	; 0x48

00011fc8 <printf@plt>:
   11fc8:	add	ip, pc, #0, 12
   11fcc:	add	ip, ip, #20, 20	; 0x14000
   11fd0:	ldr	pc, [ip, #64]!	; 0x40

00011fd4 <free@plt>:
   11fd4:	add	ip, pc, #0, 12
   11fd8:	add	ip, ip, #20, 20	; 0x14000
   11fdc:	ldr	pc, [ip, #56]!	; 0x38

00011fe0 <time@plt>:
   11fe0:	add	ip, pc, #0, 12
   11fe4:	add	ip, ip, #20, 20	; 0x14000
   11fe8:	ldr	pc, [ip, #48]!	; 0x30

00011fec <realloc@plt>:
   11fec:	add	ip, pc, #0, 12
   11ff0:	add	ip, ip, #20, 20	; 0x14000
   11ff4:	ldr	pc, [ip, #40]!	; 0x28

00011ff8 <strcpy@plt>:
   11ff8:	add	ip, pc, #0, 12
   11ffc:	add	ip, ip, #20, 20	; 0x14000
   12000:	ldr	pc, [ip, #32]!

00012004 <malloc@plt>:
   12004:	add	ip, pc, #0, 12
   12008:	add	ip, ip, #20, 20	; 0x14000
   1200c:	ldr	pc, [ip, #24]!

00012010 <__libc_start_main@plt>:
   12010:	add	ip, pc, #0, 12
   12014:	add	ip, ip, #20, 20	; 0x14000
   12018:	ldr	pc, [ip, #16]!

0001201c <__gmon_start__@plt>:
   1201c:	add	ip, pc, #0, 12
   12020:	add	ip, ip, #20, 20	; 0x14000
   12024:	ldr	pc, [ip, #8]!

00012028 <strlen@plt>:
   12028:	add	ip, pc, #0, 12
   1202c:	add	ip, ip, #20, 20	; 0x14000
   12030:	ldr	pc, [ip, #0]!

00012034 <srand@plt>:
   12034:	add	ip, pc, #0, 12
   12038:	add	ip, ip, #77824	; 0x13000
   1203c:	ldr	pc, [ip, #4088]!	; 0xff8

00012040 <snprintf@plt>:
   12040:	add	ip, pc, #0, 12
   12044:	add	ip, ip, #77824	; 0x13000
   12048:	ldr	pc, [ip, #4080]!	; 0xff0

0001204c <__isoc99_sscanf@plt>:
   1204c:	add	ip, pc, #0, 12
   12050:	add	ip, ip, #77824	; 0x13000
   12054:	ldr	pc, [ip, #4072]!	; 0xfe8

00012058 <rand@plt>:
   12058:	add	ip, pc, #0, 12
   1205c:	add	ip, ip, #77824	; 0x13000
   12060:	ldr	pc, [ip, #4064]!	; 0xfe0

00012064 <abort@plt>:
   12064:	add	ip, pc, #0, 12
   12068:	add	ip, ip, #77824	; 0x13000
   1206c:	ldr	pc, [ip, #4056]!	; 0xfd8

Disassembly of section .text:

00012070 <_start@@Base>:
   12070:	mov	fp, #0
   12074:	mov	lr, #0
   12078:	pop	{r1}		; (ldr r1, [sp], #4)
   1207c:	mov	r2, sp
   12080:	push	{r2}		; (str r2, [sp, #-4]!)
   12084:	push	{r0}		; (str r0, [sp, #-4]!)
   12088:	ldr	ip, [pc, #16]	; 120a0 <_start@@Base+0x30>
   1208c:	push	{ip}		; (str ip, [sp, #-4]!)
   12090:	ldr	r0, [pc, #12]	; 120a4 <_start@@Base+0x34>
   12094:	ldr	r3, [pc, #12]	; 120a8 <_start@@Base+0x38>
   12098:	bl	12010 <__libc_start_main@plt>
   1209c:	bl	12064 <abort@plt>
   120a0:	andeq	r4, r1, ip, asr #28
   120a4:	andeq	r2, r1, r0, ror #2
   120a8:	andeq	r4, r1, ip, ror #27
   120ac:	ldr	r3, [pc, #20]	; 120c8 <_start@@Base+0x58>
   120b0:	ldr	r2, [pc, #20]	; 120cc <_start@@Base+0x5c>
   120b4:	add	r3, pc, r3
   120b8:	ldr	r2, [r3, r2]
   120bc:	cmp	r2, #0
   120c0:	bxeq	lr
   120c4:	b	1201c <__gmon_start__@plt>
   120c8:	andeq	r3, r1, r4, asr #30
   120cc:	andeq	r0, r0, r8, asr #32
   120d0:	ldr	r0, [pc, #24]	; 120f0 <_start@@Base+0x80>
   120d4:	ldr	r3, [pc, #24]	; 120f4 <_start@@Base+0x84>
   120d8:	cmp	r3, r0
   120dc:	bxeq	lr
   120e0:	ldr	r3, [pc, #16]	; 120f8 <_start@@Base+0x88>
   120e4:	cmp	r3, #0
   120e8:	bxeq	lr
   120ec:	bx	r3
   120f0:	andeq	r6, r2, r4, asr r0
   120f4:	andeq	r6, r2, r4, asr r0
   120f8:	andeq	r0, r0, r0
   120fc:	ldr	r0, [pc, #36]	; 12128 <_start@@Base+0xb8>
   12100:	ldr	r1, [pc, #36]	; 1212c <_start@@Base+0xbc>
   12104:	sub	r1, r1, r0
   12108:	asr	r1, r1, #2
   1210c:	add	r1, r1, r1, lsr #31
   12110:	asrs	r1, r1, #1
   12114:	bxeq	lr
   12118:	ldr	r3, [pc, #16]	; 12130 <_start@@Base+0xc0>
   1211c:	cmp	r3, #0
   12120:	bxeq	lr
   12124:	bx	r3
   12128:	andeq	r6, r2, r4, asr r0
   1212c:	andeq	r6, r2, r4, asr r0
   12130:	andeq	r0, r0, r0
   12134:	push	{r4, lr}
   12138:	ldr	r4, [pc, #24]	; 12158 <_start@@Base+0xe8>
   1213c:	ldrb	r3, [r4]
   12140:	cmp	r3, #0
   12144:	popne	{r4, pc}
   12148:	bl	120d0 <_start@@Base+0x60>
   1214c:	mov	r3, #1
   12150:	strb	r3, [r4]
   12154:	pop	{r4, pc}
   12158:	andeq	r6, r2, r4, asr r0
   1215c:	b	120fc <_start@@Base+0x8c>

00012160 <main@@Base>:
   12160:	push	{r4, r5, r6, r7, fp, lr}
   12164:	add	fp, sp, #16
   12168:	sub	sp, sp, #64	; 0x40
   1216c:	add	r4, sp, #4
   12170:	mov	r0, r4
   12174:	bl	11fe0 <time@plt>
   12178:	bl	12034 <srand@plt>
   1217c:	bl	12058 <rand@plt>
   12180:	mov	r5, r0
   12184:	mov	r0, r4
   12188:	bl	11fe0 <time@plt>
   1218c:	bl	12034 <srand@plt>
   12190:	bl	12058 <rand@plt>
   12194:	add	r4, sp, #8
   12198:	mov	r6, r0
   1219c:	mov	r0, r4
   121a0:	bl	1233c <table_init@@Base>
   121a4:	mov	r0, r4
   121a8:	mov	r1, r5
   121ac:	bl	142c0 <table_row_is_valid@@Base>
   121b0:	cmp	r0, #0
   121b4:	beq	121d0 <main@@Base+0x70>
   121b8:	movw	r0, #20060	; 0x4e5c
   121bc:	mov	r1, r5
   121c0:	movt	r0, #1
   121c4:	bl	11fc8 <printf@plt>
   121c8:	mvn	r4, #0
   121cc:	b	121d4 <main@@Base+0x74>
   121d0:	mov	r4, #0
   121d4:	add	r0, sp, #8
   121d8:	mov	r1, r6
   121dc:	bl	14284 <table_column_is_valid@@Base>
   121e0:	cmp	r0, #0
   121e4:	beq	121fc <main@@Base+0x9c>
   121e8:	movw	r0, #20087	; 0x4e77
   121ec:	mov	r1, r6
   121f0:	movt	r0, #1
   121f4:	bl	11fc8 <printf@plt>
   121f8:	mvn	r4, #0
   121fc:	add	r0, sp, #8
   12200:	mov	r1, r5
   12204:	mov	r2, r6
   12208:	bl	142fc <table_cell_is_valid@@Base>
   1220c:	cmp	r0, #0
   12210:	beq	1222c <main@@Base+0xcc>
   12214:	movw	r0, #20117	; 0x4e95
   12218:	mov	r1, r5
   1221c:	mov	r2, r6
   12220:	movt	r0, #1
   12224:	bl	11fc8 <printf@plt>
   12228:	mvn	r4, #0
   1222c:	add	r6, sp, #8
   12230:	mov	r0, r6
   12234:	bl	139d0 <table_add_row@@Base>
   12238:	mov	r5, r0
   1223c:	mov	r0, r6
   12240:	mov	r1, r5
   12244:	bl	142c0 <table_row_is_valid@@Base>
   12248:	cmp	r0, #0
   1224c:	bne	12264 <main@@Base+0x104>
   12250:	movw	r0, #20149	; 0x4eb5
   12254:	mov	r1, r5
   12258:	movt	r0, #1
   1225c:	bl	11fc8 <printf@plt>
   12260:	mvn	r4, #0
   12264:	movw	r1, #20223	; 0x4eff
   12268:	add	r7, sp, #8
   1226c:	mov	r2, #0
   12270:	movt	r1, #1
   12274:	mov	r0, r7
   12278:	bl	12d9c <table_add_column@@Base>
   1227c:	mov	r6, r0
   12280:	mov	r0, r7
   12284:	mov	r1, r6
   12288:	bl	14284 <table_column_is_valid@@Base>
   1228c:	cmp	r0, #0
   12290:	bne	122a8 <main@@Base+0x148>
   12294:	movw	r0, #20172	; 0x4ecc
   12298:	mov	r1, r6
   1229c:	movt	r0, #1
   122a0:	bl	11fc8 <printf@plt>
   122a4:	mvn	r4, #0
   122a8:	add	r0, sp, #8
   122ac:	mov	r1, r5
   122b0:	mov	r2, r6
   122b4:	bl	142fc <table_cell_is_valid@@Base>
   122b8:	cmp	r0, #0
   122bc:	bne	122d8 <main@@Base+0x178>
   122c0:	movw	r0, #20198	; 0x4ee6
   122c4:	mov	r1, r5
   122c8:	mov	r2, r6
   122cc:	movt	r0, #1
   122d0:	bl	11fc8 <printf@plt>
   122d4:	mvn	r4, #0
   122d8:	add	r0, sp, #8
   122dc:	bl	12398 <table_destroy@@Base>
   122e0:	mov	r0, r4
   122e4:	sub	sp, fp, #16
   122e8:	pop	{r4, r5, r6, r7, fp, pc}

000122ec <table_new@@Base>:
   122ec:	push	{fp, lr}
   122f0:	mov	fp, sp
   122f4:	mov	r0, #56	; 0x38
   122f8:	bl	12004 <malloc@plt>
   122fc:	vmov.i32	q8, #0	; 0x00000000
   12300:	mov	r1, #0
   12304:	mov	r2, #10
   12308:	mov	r3, #20
   1230c:	str	r1, [r0]
   12310:	stmib	r0, {r1, r2}
   12314:	str	r1, [r0, #12]
   12318:	str	r1, [r0, #16]
   1231c:	str	r1, [r0, #20]
   12320:	str	r3, [r0, #24]
   12324:	str	r1, [r0, #28]
   12328:	str	r2, [r0, #48]	; 0x30
   1232c:	str	r1, [r0, #52]	; 0x34
   12330:	add	r1, r0, #32
   12334:	vst1.32	{d16-d17}, [r1]
   12338:	pop	{fp, pc}

0001233c <table_init@@Base>:
   1233c:	vmov.i32	q8, #0	; 0x00000000
   12340:	mov	r1, #0
   12344:	mov	r2, #10
   12348:	mov	r3, #20
   1234c:	str	r1, [r0]
   12350:	stmib	r0, {r1, r2}
   12354:	str	r1, [r0, #12]
   12358:	str	r1, [r0, #16]
   1235c:	str	r1, [r0, #20]
   12360:	str	r3, [r0, #24]
   12364:	str	r1, [r0, #28]
   12368:	str	r2, [r0, #48]	; 0x30
   1236c:	str	r1, [r0, #52]	; 0x34
   12370:	add	r0, r0, #32
   12374:	vst1.32	{d16-d17}, [r0]
   12378:	bx	lr

0001237c <table_delete@@Base>:
   1237c:	push	{r4, sl, fp, lr}
   12380:	add	fp, sp, #8
   12384:	mov	r4, r0
   12388:	bl	12398 <table_destroy@@Base>
   1238c:	mov	r0, r4
   12390:	pop	{r4, sl, fp, lr}
   12394:	b	11fd4 <free@plt>

00012398 <table_destroy@@Base>:
   12398:	cmp	r0, #0
   1239c:	bxeq	lr
   123a0:	push	{r4, r5, r6, sl, fp, lr}
   123a4:	add	fp, sp, #16
   123a8:	mvn	r1, #0
   123ac:	mvn	r2, #0
   123b0:	mov	r3, #64	; 0x40
   123b4:	mov	r4, r0
   123b8:	bl	12c1c <table_notify@@Base>
   123bc:	mov	r0, r4
   123c0:	bl	139c8 <table_get_row_length@@Base>
   123c4:	cmp	r0, #1
   123c8:	blt	123ec <table_destroy@@Base+0x54>
   123cc:	mov	r5, r0
   123d0:	mov	r6, #0
   123d4:	mov	r0, r4
   123d8:	mov	r1, r6
   123dc:	bl	1396c <table_row_destroy@@Base>
   123e0:	add	r6, r6, #1
   123e4:	cmp	r5, r6
   123e8:	bne	123d4 <table_destroy@@Base+0x3c>
   123ec:	ldr	r0, [r4, #16]
   123f0:	cmp	r0, #0
   123f4:	beq	123fc <table_destroy@@Base+0x64>
   123f8:	bl	11fd4 <free@plt>
   123fc:	mov	r0, r4
   12400:	bl	12d10 <table_get_column_length@@Base>
   12404:	cmp	r0, #1
   12408:	blt	1242c <table_destroy@@Base+0x94>
   1240c:	mov	r5, r0
   12410:	mov	r6, #0
   12414:	mov	r0, r4
   12418:	mov	r1, r6
   1241c:	bl	12cf8 <table_column_destroy@@Base>
   12420:	add	r6, r6, #1
   12424:	cmp	r5, r6
   12428:	bne	12414 <table_destroy@@Base+0x7c>
   1242c:	ldr	r0, [r4]
   12430:	cmp	r0, #0
   12434:	beq	1243c <table_destroy@@Base+0xa4>
   12438:	bl	11fd4 <free@plt>
   1243c:	ldr	r0, [r4, #36]	; 0x24
   12440:	cmp	r0, #0
   12444:	beq	1244c <table_destroy@@Base+0xb4>
   12448:	bl	11fd4 <free@plt>
   1244c:	ldr	r0, [r4, #40]	; 0x28
   12450:	cmp	r0, #0
   12454:	beq	1245c <table_destroy@@Base+0xc4>
   12458:	bl	11fd4 <free@plt>
   1245c:	ldr	r0, [r4, #44]	; 0x2c
   12460:	cmp	r0, #0
   12464:	pop	{r4, r5, r6, sl, fp, lr}
   12468:	beq	12470 <table_destroy@@Base+0xd8>
   1246c:	b	11fd4 <free@plt>
   12470:	bx	lr

00012474 <table_dupe@@Base>:
   12474:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12478:	add	fp, sp, #28
   1247c:	sub	sp, sp, #12
   12480:	mov	r4, r0
   12484:	bl	139c8 <table_get_row_length@@Base>
   12488:	mov	r8, r0
   1248c:	mov	r0, r4
   12490:	bl	12d10 <table_get_column_length@@Base>
   12494:	mov	r6, r0
   12498:	mov	r0, #56	; 0x38
   1249c:	bl	12004 <malloc@plt>
   124a0:	vmov.i32	q8, #0	; 0x00000000
   124a4:	mov	sl, r0
   124a8:	mov	r5, #0
   124ac:	mov	r0, #10
   124b0:	mov	r1, #20
   124b4:	cmp	r6, #1
   124b8:	str	r5, [sl]
   124bc:	str	r5, [sl, #4]
   124c0:	str	r0, [sl, #8]
   124c4:	str	r5, [sl, #12]
   124c8:	str	r5, [sl, #16]
   124cc:	str	r5, [sl, #20]
   124d0:	str	r1, [sl, #24]
   124d4:	str	r5, [sl, #28]
   124d8:	str	r0, [sl, #48]	; 0x30
   124dc:	add	r0, sl, #32
   124e0:	str	r5, [sl, #52]	; 0x34
   124e4:	vst1.32	{d16-d17}, [r0]
   124e8:	blt	12524 <table_dupe@@Base+0xb0>
   124ec:	mov	r0, r4
   124f0:	mov	r1, r5
   124f4:	bl	12d78 <table_get_column_name@@Base>
   124f8:	mov	r7, r0
   124fc:	mov	r0, r4
   12500:	mov	r1, r5
   12504:	bl	12d88 <table_get_column_data_type@@Base>
   12508:	mov	r2, r0
   1250c:	mov	r0, sl
   12510:	mov	r1, r7
   12514:	bl	12d9c <table_add_column@@Base>
   12518:	add	r5, r5, #1
   1251c:	cmp	r6, r5
   12520:	bne	124ec <table_dupe@@Base+0x78>
   12524:	cmp	r8, #1
   12528:	blt	12990 <table_dupe@@Base+0x51c>
   1252c:	mov	r5, #0
   12530:	add	r9, sp, #8
   12534:	mov	r0, sl
   12538:	bl	139d0 <table_add_row@@Base>
   1253c:	cmp	r6, #1
   12540:	blt	12984 <table_dupe@@Base+0x510>
   12544:	mov	r7, #0
   12548:	mov	r0, r4
   1254c:	mov	r1, r7
   12550:	bl	12d88 <table_get_column_data_type@@Base>
   12554:	cmp	r0, #23
   12558:	bhi	12978 <table_dupe@@Base+0x504>
   1255c:	add	r1, pc, #0
   12560:	ldr	pc, [r1, r0, lsl #2]
   12564:	andeq	r2, r1, r4, asr #11
   12568:	andeq	r2, r1, ip, ror #11
   1256c:	andeq	r2, r1, r4, lsl r6
   12570:	andeq	r2, r1, ip, lsr r6
   12574:	andeq	r2, r1, r4, ror #12
   12578:	andeq	r2, r1, ip, lsl #13
   1257c:			; <UNDEFINED> instruction: 0x000126b4
   12580:	ldrdeq	r2, [r1], -ip
   12584:	andeq	r2, r1, r4, lsl #14
   12588:	andeq	r2, r1, ip, lsr #14
   1258c:	andeq	r2, r1, r4, asr r7
   12590:	andeq	r2, r1, ip, ror r7
   12594:	andeq	r2, r1, r4, lsr #15
   12598:	andeq	r2, r1, ip, asr #15
   1259c:	strdeq	r2, [r1], -r4
   125a0:	andeq	r2, r1, ip, lsl r8
   125a4:	andeq	r2, r1, r4, asr #16
   125a8:	andeq	r2, r1, r8, ror #16
   125ac:	andeq	r2, r1, ip, lsl #17
   125b0:			; <UNDEFINED> instruction: 0x000128b0
   125b4:	ldrdeq	r2, [r1], -r8
   125b8:	andeq	r2, r1, r0, lsl #18
   125bc:	andeq	r2, r1, r8, lsr #18
   125c0:	andeq	r2, r1, r0, asr r9
   125c4:	mov	r0, r4
   125c8:	mov	r1, r5
   125cc:	mov	r2, r7
   125d0:	bl	1371c <table_get_int@@Base>
   125d4:	mov	r3, r0
   125d8:	mov	r0, sl
   125dc:	mov	r1, r5
   125e0:	mov	r2, r7
   125e4:	bl	13ecc <table_set_int@@Base>
   125e8:	b	12978 <table_dupe@@Base+0x504>
   125ec:	mov	r0, r4
   125f0:	mov	r1, r5
   125f4:	mov	r2, r7
   125f8:	bl	13734 <table_get_uint@@Base>
   125fc:	mov	r3, r0
   12600:	mov	r0, sl
   12604:	mov	r1, r5
   12608:	mov	r2, r7
   1260c:	bl	13ef4 <table_set_uint@@Base>
   12610:	b	12978 <table_dupe@@Base+0x504>
   12614:	mov	r0, r4
   12618:	mov	r1, r5
   1261c:	mov	r2, r7
   12620:	bl	1374c <table_get_int8@@Base>
   12624:	mov	r3, r0
   12628:	mov	r0, sl
   1262c:	mov	r1, r5
   12630:	mov	r2, r7
   12634:	bl	13f1c <table_set_int8@@Base>
   12638:	b	12978 <table_dupe@@Base+0x504>
   1263c:	mov	r0, r4
   12640:	mov	r1, r5
   12644:	mov	r2, r7
   12648:	bl	13764 <table_get_uint8@@Base>
   1264c:	mov	r3, r0
   12650:	mov	r0, sl
   12654:	mov	r1, r5
   12658:	mov	r2, r7
   1265c:	bl	13f44 <table_set_uint8@@Base>
   12660:	b	12978 <table_dupe@@Base+0x504>
   12664:	mov	r0, r4
   12668:	mov	r1, r5
   1266c:	mov	r2, r7
   12670:	bl	1377c <table_get_int16@@Base>
   12674:	mov	r3, r0
   12678:	mov	r0, sl
   1267c:	mov	r1, r5
   12680:	mov	r2, r7
   12684:	bl	13f6c <table_set_int16@@Base>
   12688:	b	12978 <table_dupe@@Base+0x504>
   1268c:	mov	r0, r4
   12690:	mov	r1, r5
   12694:	mov	r2, r7
   12698:	bl	13794 <table_get_uint16@@Base>
   1269c:	mov	r3, r0
   126a0:	mov	r0, sl
   126a4:	mov	r1, r5
   126a8:	mov	r2, r7
   126ac:	bl	13f94 <table_set_uint16@@Base>
   126b0:	b	12978 <table_dupe@@Base+0x504>
   126b4:	mov	r0, r4
   126b8:	mov	r1, r5
   126bc:	mov	r2, r7
   126c0:	bl	137ac <table_get_int32@@Base>
   126c4:	mov	r3, r0
   126c8:	mov	r0, sl
   126cc:	mov	r1, r5
   126d0:	mov	r2, r7
   126d4:	bl	13fbc <table_set_int32@@Base>
   126d8:	b	12978 <table_dupe@@Base+0x504>
   126dc:	mov	r0, r4
   126e0:	mov	r1, r5
   126e4:	mov	r2, r7
   126e8:	bl	137c4 <table_get_uint32@@Base>
   126ec:	mov	r3, r0
   126f0:	mov	r0, sl
   126f4:	mov	r1, r5
   126f8:	mov	r2, r7
   126fc:	bl	13fe4 <table_set_uint32@@Base>
   12700:	b	12978 <table_dupe@@Base+0x504>
   12704:	mov	r0, r4
   12708:	mov	r1, r5
   1270c:	mov	r2, r7
   12710:	bl	137dc <table_get_int64@@Base>
   12714:	stm	sp, {r0, r1}
   12718:	mov	r0, sl
   1271c:	mov	r1, r5
   12720:	mov	r2, r7
   12724:	bl	1400c <table_set_int64@@Base>
   12728:	b	12978 <table_dupe@@Base+0x504>
   1272c:	mov	r0, r4
   12730:	mov	r1, r5
   12734:	mov	r2, r7
   12738:	bl	137f4 <table_get_uint64@@Base>
   1273c:	stm	sp, {r0, r1}
   12740:	mov	r0, sl
   12744:	mov	r1, r5
   12748:	mov	r2, r7
   1274c:	bl	14040 <table_set_uint64@@Base>
   12750:	b	12978 <table_dupe@@Base+0x504>
   12754:	mov	r0, r4
   12758:	mov	r1, r5
   1275c:	mov	r2, r7
   12760:	bl	1380c <table_get_short@@Base>
   12764:	mov	r3, r0
   12768:	mov	r0, sl
   1276c:	mov	r1, r5
   12770:	mov	r2, r7
   12774:	bl	14074 <table_set_short@@Base>
   12778:	b	12978 <table_dupe@@Base+0x504>
   1277c:	mov	r0, r4
   12780:	mov	r1, r5
   12784:	mov	r2, r7
   12788:	bl	13824 <table_get_ushort@@Base>
   1278c:	mov	r3, r0
   12790:	mov	r0, sl
   12794:	mov	r1, r5
   12798:	mov	r2, r7
   1279c:	bl	1409c <table_set_ushort@@Base>
   127a0:	b	12978 <table_dupe@@Base+0x504>
   127a4:	mov	r0, r4
   127a8:	mov	r1, r5
   127ac:	mov	r2, r7
   127b0:	bl	1383c <table_get_long@@Base>
   127b4:	mov	r3, r0
   127b8:	mov	r0, sl
   127bc:	mov	r1, r5
   127c0:	mov	r2, r7
   127c4:	bl	140c4 <table_set_long@@Base>
   127c8:	b	12978 <table_dupe@@Base+0x504>
   127cc:	mov	r0, r4
   127d0:	mov	r1, r5
   127d4:	mov	r2, r7
   127d8:	bl	13854 <table_get_ulong@@Base>
   127dc:	mov	r3, r0
   127e0:	mov	r0, sl
   127e4:	mov	r1, r5
   127e8:	mov	r2, r7
   127ec:	bl	140ec <table_set_ulong@@Base>
   127f0:	b	12978 <table_dupe@@Base+0x504>
   127f4:	mov	r0, r4
   127f8:	mov	r1, r5
   127fc:	mov	r2, r7
   12800:	bl	1386c <table_get_llong@@Base>
   12804:	stm	sp, {r0, r1}
   12808:	mov	r0, sl
   1280c:	mov	r1, r5
   12810:	mov	r2, r7
   12814:	bl	14114 <table_set_llong@@Base>
   12818:	b	12978 <table_dupe@@Base+0x504>
   1281c:	mov	r0, r4
   12820:	mov	r1, r5
   12824:	mov	r2, r7
   12828:	bl	13884 <table_get_ullong@@Base>
   1282c:	stm	sp, {r0, r1}
   12830:	mov	r0, sl
   12834:	mov	r1, r5
   12838:	mov	r2, r7
   1283c:	bl	14148 <table_set_ullong@@Base>
   12840:	b	12978 <table_dupe@@Base+0x504>
   12844:	mov	r0, r4
   12848:	mov	r1, r5
   1284c:	mov	r2, r7
   12850:	bl	1389c <table_get_float@@Base>
   12854:	mov	r0, sl
   12858:	mov	r1, r5
   1285c:	mov	r2, r7
   12860:	bl	1417c <table_set_float@@Base>
   12864:	b	12978 <table_dupe@@Base+0x504>
   12868:	mov	r0, r4
   1286c:	mov	r1, r5
   12870:	mov	r2, r7
   12874:	bl	138b4 <table_get_double@@Base>
   12878:	mov	r0, sl
   1287c:	mov	r1, r5
   12880:	mov	r2, r7
   12884:	bl	141a4 <table_set_double@@Base>
   12888:	b	12978 <table_dupe@@Base+0x504>
   1288c:	mov	r0, r4
   12890:	mov	r1, r5
   12894:	mov	r2, r7
   12898:	bl	138cc <table_get_ldouble@@Base>
   1289c:	mov	r0, sl
   128a0:	mov	r1, r5
   128a4:	mov	r2, r7
   128a8:	bl	141cc <table_set_ldouble@@Base>
   128ac:	b	12978 <table_dupe@@Base+0x504>
   128b0:	mov	r0, r4
   128b4:	mov	r1, r5
   128b8:	mov	r2, r7
   128bc:	bl	138e4 <table_get_char@@Base>
   128c0:	mov	r3, r0
   128c4:	mov	r0, sl
   128c8:	mov	r1, r5
   128cc:	mov	r2, r7
   128d0:	bl	14214 <table_set_char@@Base>
   128d4:	b	12978 <table_dupe@@Base+0x504>
   128d8:	mov	r0, r4
   128dc:	mov	r1, r5
   128e0:	mov	r2, r7
   128e4:	bl	138fc <table_get_uchar@@Base>
   128e8:	mov	r3, r0
   128ec:	mov	r0, sl
   128f0:	mov	r1, r5
   128f4:	mov	r2, r7
   128f8:	bl	1423c <table_set_uchar@@Base>
   128fc:	b	12978 <table_dupe@@Base+0x504>
   12900:	mov	r0, r4
   12904:	mov	r1, r5
   12908:	mov	r2, r7
   1290c:	bl	13914 <table_get_string@@Base>
   12910:	mov	r3, r0
   12914:	mov	r0, sl
   12918:	mov	r1, r5
   1291c:	mov	r2, r7
   12920:	bl	141f4 <table_set_string@@Base>
   12924:	b	12978 <table_dupe@@Base+0x504>
   12928:	mov	r0, r4
   1292c:	mov	r1, r5
   12930:	mov	r2, r7
   12934:	bl	13704 <table_get_bool@@Base>
   12938:	mov	r3, r0
   1293c:	mov	r0, sl
   12940:	mov	r1, r5
   12944:	mov	r2, r7
   12948:	bl	13ea4 <table_set_bool@@Base>
   1294c:	b	12978 <table_dupe@@Base+0x504>
   12950:	mov	r0, r4
   12954:	mov	r1, r5
   12958:	mov	r2, r7
   1295c:	bl	13928 <table_get_ptr@@Base>
   12960:	str	r0, [sp, #8]
   12964:	mov	r0, sl
   12968:	mov	r1, r5
   1296c:	mov	r2, r7
   12970:	mov	r3, r9
   12974:	bl	14264 <table_set_ptr@@Base>
   12978:	add	r7, r7, #1
   1297c:	cmp	r6, r7
   12980:	bne	12548 <table_dupe@@Base+0xd4>
   12984:	add	r5, r5, #1
   12988:	cmp	r5, r8
   1298c:	bne	12534 <table_dupe@@Base+0xc0>
   12990:	mov	r0, sl
   12994:	sub	sp, fp, #28
   12998:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001299c <table_get_major_version@@Base>:
   1299c:	mov	r0, #0
   129a0:	bx	lr

000129a4 <table_get_minor_version@@Base>:
   129a4:	mov	r0, #0
   129a8:	bx	lr

000129ac <table_get_patch_version@@Base>:
   129ac:	mov	r0, #0
   129b0:	bx	lr

000129b4 <table_get_version@@Base>:
   129b4:	movw	r0, #20372	; 0x4f94
   129b8:	movt	r0, #1
   129bc:	bx	lr

000129c0 <table_get_callback_length@@Base>:
   129c0:	ldr	r0, [r0, #32]
   129c4:	bx	lr

000129c8 <table_register_callback@@Base>:
   129c8:	push	{r4, r5, r6, r7, fp, lr}
   129cc:	add	fp, sp, #16
   129d0:	mov	r5, r0
   129d4:	ldr	r0, [r0, #32]
   129d8:	mov	r4, r3
   129dc:	mov	r6, r2
   129e0:	mov	r7, r1
   129e4:	cmp	r0, #1
   129e8:	blt	12a1c <table_register_callback@@Base+0x54>
   129ec:	ldr	r2, [r5, #36]	; 0x24
   129f0:	mov	r1, #0
   129f4:	ldr	r3, [r2, r1, lsl #2]
   129f8:	cmp	r3, r7
   129fc:	bne	12a10 <table_register_callback@@Base+0x48>
   12a00:	ldr	r3, [r5, #40]	; 0x28
   12a04:	ldr	r3, [r3, r1, lsl #2]
   12a08:	cmp	r3, r6
   12a0c:	beq	12aa0 <table_register_callback@@Base+0xd8>
   12a10:	add	r1, r1, #1
   12a14:	cmp	r0, r1
   12a18:	bne	129f4 <table_register_callback@@Base+0x2c>
   12a1c:	ldr	r1, [r5, #48]	; 0x30
   12a20:	udiv	r2, r0, r1
   12a24:	mls	r2, r2, r1, r0
   12a28:	cmp	r2, #0
   12a2c:	bne	12a78 <table_register_callback@@Base+0xb0>
   12a30:	ldr	r2, [r5, #52]	; 0x34
   12a34:	ldr	r0, [r5, #36]	; 0x24
   12a38:	add	r1, r2, r1
   12a3c:	str	r1, [r5, #52]	; 0x34
   12a40:	lsl	r1, r1, #2
   12a44:	bl	11fec <realloc@plt>
   12a48:	str	r0, [r5, #36]	; 0x24
   12a4c:	ldr	r1, [r5, #52]	; 0x34
   12a50:	ldr	r0, [r5, #40]	; 0x28
   12a54:	lsl	r1, r1, #2
   12a58:	bl	11fec <realloc@plt>
   12a5c:	str	r0, [r5, #40]	; 0x28
   12a60:	ldr	r1, [r5, #52]	; 0x34
   12a64:	ldr	r0, [r5, #44]	; 0x2c
   12a68:	lsl	r1, r1, #2
   12a6c:	bl	11fec <realloc@plt>
   12a70:	str	r0, [r5, #44]	; 0x2c
   12a74:	ldr	r0, [r5, #32]
   12a78:	ldr	r1, [r5, #36]	; 0x24
   12a7c:	str	r7, [r1, r0, lsl #2]
   12a80:	ldr	r1, [r5, #40]	; 0x28
   12a84:	str	r6, [r1, r0, lsl #2]
   12a88:	ldr	r1, [r5, #44]	; 0x2c
   12a8c:	str	r4, [r1, r0, lsl #2]
   12a90:	ldr	r0, [r5, #32]
   12a94:	add	r0, r0, #1
   12a98:	str	r0, [r5, #32]
   12a9c:	pop	{r4, r5, r6, r7, fp, pc}
   12aa0:	cmp	r1, #0
   12aa4:	beq	12a1c <table_register_callback@@Base+0x54>
   12aa8:	ldr	r0, [r5, #44]	; 0x2c
   12aac:	ldr	r2, [r0, r1, lsl #2]
   12ab0:	orr	r2, r2, r4
   12ab4:	str	r2, [r0, r1, lsl #2]
   12ab8:	pop	{r4, r5, r6, r7, fp, pc}

00012abc <table_unregister_callback@@Base>:
   12abc:	push	{r4, r5, r6, sl, fp, lr}
   12ac0:	add	fp, sp, #16
   12ac4:	ldr	r4, [r0, #32]
   12ac8:	cmp	r4, #1
   12acc:	blt	12b04 <table_unregister_callback@@Base+0x48>
   12ad0:	ldr	r3, [r0, #36]	; 0x24
   12ad4:	mov	r6, r0
   12ad8:	mov	r0, #0
   12adc:	ldr	r5, [r3, r0, lsl #2]
   12ae0:	cmp	r5, r1
   12ae4:	bne	12af8 <table_unregister_callback@@Base+0x3c>
   12ae8:	ldr	r5, [r6, #40]	; 0x28
   12aec:	ldr	r5, [r5, r0, lsl #2]
   12af0:	cmp	r5, r2
   12af4:	beq	12b08 <table_unregister_callback@@Base+0x4c>
   12af8:	add	r0, r0, #1
   12afc:	cmp	r0, r4
   12b00:	bne	12adc <table_unregister_callback@@Base+0x20>
   12b04:	pop	{r4, r5, r6, sl, fp, pc}
   12b08:	sub	r1, r4, #1
   12b0c:	cmp	r0, r1
   12b10:	bge	12b94 <table_unregister_callback@@Base+0xd8>
   12b14:	add	r2, r0, #1
   12b18:	ldr	r1, [r3, r2, lsl #2]
   12b1c:	str	r1, [r3, r0, lsl #2]
   12b20:	ldr	r1, [r6, #40]	; 0x28
   12b24:	ldr	r3, [r1, r2, lsl #2]
   12b28:	str	r3, [r1, r0, lsl #2]
   12b2c:	ldr	r1, [r6, #44]	; 0x2c
   12b30:	ldr	r3, [r1, r2, lsl #2]
   12b34:	str	r3, [r1, r0, lsl #2]
   12b38:	ldr	r1, [r6, #32]
   12b3c:	sub	r1, r1, #1
   12b40:	cmp	r2, r1
   12b44:	bge	12b94 <table_unregister_callback@@Base+0xd8>
   12b48:	ldr	r1, [r6, #36]	; 0x24
   12b4c:	add	r1, r1, r0, lsl #2
   12b50:	ldr	r2, [r1, #8]
   12b54:	str	r2, [r1, #4]
   12b58:	ldr	r1, [r6, #40]	; 0x28
   12b5c:	add	r1, r1, r0, lsl #2
   12b60:	ldr	r2, [r1, #8]
   12b64:	str	r2, [r1, #4]
   12b68:	ldr	r1, [r6, #44]	; 0x2c
   12b6c:	add	r1, r1, r0, lsl #2
   12b70:	ldr	r2, [r1, #8]
   12b74:	str	r2, [r1, #4]
   12b78:	add	r2, r0, #1
   12b7c:	add	r0, r0, #2
   12b80:	ldr	r1, [r6, #32]
   12b84:	sub	r1, r1, #1
   12b88:	cmp	r0, r1
   12b8c:	mov	r0, r2
   12b90:	blt	12b48 <table_unregister_callback@@Base+0x8c>
   12b94:	str	r1, [r6, #32]
   12b98:	ldr	r2, [r6, #48]	; 0x30
   12b9c:	udiv	r0, r1, r2
   12ba0:	mls	r0, r0, r2, r1
   12ba4:	cmp	r0, #0
   12ba8:	popne	{r4, r5, r6, sl, fp, pc}
   12bac:	ldr	r1, [r6, #52]	; 0x34
   12bb0:	ldr	r0, [r6, #36]	; 0x24
   12bb4:	subs	r1, r1, r2
   12bb8:	str	r1, [r6, #52]	; 0x34
   12bbc:	beq	12bf4 <table_unregister_callback@@Base+0x138>
   12bc0:	lsl	r1, r1, #2
   12bc4:	bl	11fec <realloc@plt>
   12bc8:	str	r0, [r6, #36]	; 0x24
   12bcc:	ldr	r1, [r6, #52]	; 0x34
   12bd0:	ldr	r0, [r6, #40]	; 0x28
   12bd4:	lsl	r1, r1, #2
   12bd8:	bl	11fec <realloc@plt>
   12bdc:	str	r0, [r6, #40]	; 0x28
   12be0:	ldr	r1, [r6, #52]	; 0x34
   12be4:	ldr	r0, [r6, #44]	; 0x2c
   12be8:	lsl	r1, r1, #2
   12bec:	bl	11fec <realloc@plt>
   12bf0:	b	12c14 <table_unregister_callback@@Base+0x158>
   12bf4:	bl	11fd4 <free@plt>
   12bf8:	ldr	r0, [r6, #40]	; 0x28
   12bfc:	bl	11fd4 <free@plt>
   12c00:	ldr	r0, [r6, #44]	; 0x2c
   12c04:	bl	11fd4 <free@plt>
   12c08:	mov	r0, #0
   12c0c:	str	r0, [r6, #36]	; 0x24
   12c10:	str	r0, [r6, #40]	; 0x28
   12c14:	str	r0, [r6, #44]	; 0x2c
   12c18:	pop	{r4, r5, r6, sl, fp, pc}

00012c1c <table_notify@@Base>:
   12c1c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12c20:	add	fp, sp, #24
   12c24:	sub	sp, sp, #8
   12c28:	mov	r7, r0
   12c2c:	ldr	r0, [r0, #32]
   12c30:	cmp	r0, #1
   12c34:	blt	12c90 <table_notify@@Base+0x74>
   12c38:	mov	r4, r3
   12c3c:	mov	r8, r2
   12c40:	mov	r9, r1
   12c44:	mov	r5, #0
   12c48:	ldr	r1, [r7, #44]	; 0x2c
   12c4c:	ldr	r1, [r1, r5, lsl #2]
   12c50:	tst	r1, r4
   12c54:	beq	12c84 <table_notify@@Base+0x68>
   12c58:	ldr	r0, [r7, #36]	; 0x24
   12c5c:	ldr	r1, [r7, #40]	; 0x28
   12c60:	mov	r2, r8
   12c64:	mov	r3, r4
   12c68:	ldr	r6, [r0, r5, lsl #2]
   12c6c:	ldr	r0, [r1, r5, lsl #2]
   12c70:	mov	r1, r9
   12c74:	str	r0, [sp]
   12c78:	mov	r0, r7
   12c7c:	blx	r6
   12c80:	ldr	r0, [r7, #32]
   12c84:	add	r5, r5, #1
   12c88:	cmp	r5, r0
   12c8c:	blt	12c48 <table_notify@@Base+0x2c>
   12c90:	sub	sp, fp, #24
   12c94:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012c98 <table_column_init@@Base>:
   12c98:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12c9c:	add	fp, sp, #24
   12ca0:	ldr	r7, [r0]
   12ca4:	mov	r0, r2
   12ca8:	mov	r4, r3
   12cac:	mov	r5, r2
   12cb0:	mov	r6, r1
   12cb4:	bl	12028 <strlen@plt>
   12cb8:	add	r0, r0, #1
   12cbc:	bl	12004 <malloc@plt>
   12cc0:	ldr	r8, [fp, #8]
   12cc4:	add	r6, r6, r6, lsl #1
   12cc8:	cmp	r0, #0
   12ccc:	str	r0, [r7, r6, lsl #2]
   12cd0:	beq	12cdc <table_column_init@@Base+0x44>
   12cd4:	mov	r1, r5
   12cd8:	bl	11ff8 <strcpy@plt>
   12cdc:	add	r0, r7, r6, lsl #2
   12ce0:	stmib	r0, {r4, r8}
   12ce4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012ce8 <table_get_col_ptr@@Base>:
   12ce8:	ldr	r0, [r0]
   12cec:	add	r1, r1, r1, lsl #1
   12cf0:	add	r0, r0, r1, lsl #2
   12cf4:	bx	lr

00012cf8 <table_column_destroy@@Base>:
   12cf8:	ldr	r0, [r0]
   12cfc:	add	r1, r1, r1, lsl #1
   12d00:	ldr	r0, [r0, r1, lsl #2]
   12d04:	cmp	r0, #0
   12d08:	bxeq	lr
   12d0c:	b	11fd4 <free@plt>

00012d10 <table_get_column_length@@Base>:
   12d10:	ldr	r0, [r0, #4]
   12d14:	bx	lr

00012d18 <table_get_column@@Base>:
   12d18:	push	{r4, r5, r6, r7, fp, lr}
   12d1c:	add	fp, sp, #16
   12d20:	ldr	r6, [r0, #4]
   12d24:	cmp	r6, #1
   12d28:	blt	12d64 <table_get_column@@Base+0x4c>
   12d2c:	ldr	r7, [r0]
   12d30:	mov	r5, r1
   12d34:	mov	r4, #0
   12d38:	ldr	r0, [r7]
   12d3c:	mov	r1, r5
   12d40:	bl	11fbc <strcmp@plt>
   12d44:	cmp	r0, #0
   12d48:	beq	12d68 <table_get_column@@Base+0x50>
   12d4c:	add	r4, r4, #1
   12d50:	add	r7, r7, #12
   12d54:	cmp	r6, r4
   12d58:	bne	12d38 <table_get_column@@Base+0x20>
   12d5c:	mov	r4, r6
   12d60:	b	12d68 <table_get_column@@Base+0x50>
   12d64:	mov	r4, #0
   12d68:	cmp	r4, r6
   12d6c:	mvneq	r4, #0
   12d70:	mov	r0, r4
   12d74:	pop	{r4, r5, r6, r7, fp, pc}

00012d78 <table_get_column_name@@Base>:
   12d78:	ldr	r0, [r0]
   12d7c:	add	r1, r1, r1, lsl #1
   12d80:	ldr	r0, [r0, r1, lsl #2]
   12d84:	bx	lr

00012d88 <table_get_column_data_type@@Base>:
   12d88:	ldr	r0, [r0]
   12d8c:	add	r1, r1, r1, lsl #1
   12d90:	add	r0, r0, r1, lsl #2
   12d94:	ldr	r0, [r0, #4]
   12d98:	bx	lr

00012d9c <table_add_column@@Base>:
   12d9c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12da0:	add	fp, sp, #24
   12da4:	sub	sp, sp, #8
   12da8:	mov	r4, r0
   12dac:	mov	r8, r1
   12db0:	ldr	r0, [r0, #4]
   12db4:	mov	r9, r2
   12db8:	ldr	r1, [r4, #8]
   12dbc:	udiv	r2, r0, r1
   12dc0:	mls	r0, r2, r1, r0
   12dc4:	cmp	r0, #0
   12dc8:	bne	12e34 <table_add_column@@Base+0x98>
   12dcc:	ldr	r2, [r4, #12]
   12dd0:	ldr	r0, [r4]
   12dd4:	add	r1, r2, r1
   12dd8:	str	r1, [r4, #12]
   12ddc:	add	r1, r1, r1, lsl #1
   12de0:	lsl	r1, r1, #2
   12de4:	bl	11fec <realloc@plt>
   12de8:	str	r0, [r4]
   12dec:	mov	r0, r4
   12df0:	bl	139c8 <table_get_row_length@@Base>
   12df4:	cmp	r0, #1
   12df8:	blt	12e34 <table_add_column@@Base+0x98>
   12dfc:	mov	r6, r0
   12e00:	mov	r7, #0
   12e04:	mov	r0, r4
   12e08:	mov	r1, r7
   12e0c:	bl	13960 <table_get_row_ptr@@Base>
   12e10:	ldr	r1, [r4, #12]
   12e14:	mov	r5, r0
   12e18:	ldr	r0, [r0]
   12e1c:	lsl	r1, r1, #2
   12e20:	bl	11fec <realloc@plt>
   12e24:	add	r7, r7, #1
   12e28:	str	r0, [r5]
   12e2c:	cmp	r6, r7
   12e30:	bne	12e04 <table_add_column@@Base+0x68>
   12e34:	mov	r0, r4
   12e38:	bl	139c8 <table_get_row_length@@Base>
   12e3c:	ldr	r6, [r4, #4]
   12e40:	mov	r7, r0
   12e44:	mov	r0, r9
   12e48:	bl	136d4 <table_get_default_compare_function_for_data_type@@Base>
   12e4c:	str	r0, [sp]
   12e50:	mov	r0, r4
   12e54:	mov	r1, r6
   12e58:	mov	r2, r8
   12e5c:	mov	r3, r9
   12e60:	bl	12c98 <table_column_init@@Base>
   12e64:	cmp	r7, #1
   12e68:	blt	12e8c <table_add_column@@Base+0xf0>
   12e6c:	mov	r5, #0
   12e70:	mov	r0, r4
   12e74:	mov	r1, r5
   12e78:	mov	r2, r6
   12e7c:	bl	14388 <table_cell_init@@Base>
   12e80:	add	r5, r5, #1
   12e84:	cmp	r7, r5
   12e88:	bne	12e70 <table_add_column@@Base+0xd4>
   12e8c:	ldr	r2, [r4, #4]
   12e90:	mov	r0, r4
   12e94:	mvn	r1, #0
   12e98:	mov	r3, #8
   12e9c:	bl	12c1c <table_notify@@Base>
   12ea0:	ldr	r0, [r4, #4]
   12ea4:	add	r1, r0, #1
   12ea8:	str	r1, [r4, #4]
   12eac:	sub	sp, fp, #24
   12eb0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012eb4 <table_remove_column@@Base>:
   12eb4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12eb8:	add	fp, sp, #24
   12ebc:	mov	r5, r0
   12ec0:	ldr	r0, [r0]
   12ec4:	add	r6, r1, r1, lsl #1
   12ec8:	mov	r9, r1
   12ecc:	ldr	r0, [r0, r6, lsl #2]
   12ed0:	cmp	r0, #0
   12ed4:	beq	12edc <table_remove_column@@Base+0x28>
   12ed8:	bl	11fd4 <free@plt>
   12edc:	ldr	r0, [r5, #4]
   12ee0:	sub	r4, r0, #1
   12ee4:	cmp	r4, r9
   12ee8:	ble	12f1c <table_remove_column@@Base+0x68>
   12eec:	mvn	r1, r9
   12ef0:	add	r0, r1, r0
   12ef4:	lsl	r1, r6, #2
   12ef8:	ldr	r2, [r5]
   12efc:	subs	r0, r0, #1
   12f00:	add	r2, r2, r1
   12f04:	add	r1, r1, #12
   12f08:	vldr	d16, [r2, #12]
   12f0c:	ldr	r3, [r2, #20]
   12f10:	str	r3, [r2, #8]
   12f14:	vstr	d16, [r2]
   12f18:	bne	12ef8 <table_remove_column@@Base+0x44>
   12f1c:	mov	r0, r5
   12f20:	bl	139c8 <table_get_row_length@@Base>
   12f24:	cmp	r0, #1
   12f28:	blt	12f84 <table_remove_column@@Base+0xd0>
   12f2c:	mov	r6, r0
   12f30:	mov	r7, #0
   12f34:	mov	r0, r5
   12f38:	mov	r1, r7
   12f3c:	mov	r2, r9
   12f40:	bl	143c4 <table_cell_destroy@@Base>
   12f44:	mov	r0, r5
   12f48:	mov	r1, r7
   12f4c:	bl	13960 <table_get_row_ptr@@Base>
   12f50:	cmp	r4, r9
   12f54:	ble	12f78 <table_remove_column@@Base+0xc4>
   12f58:	mov	r1, r9
   12f5c:	ldr	r2, [r0]
   12f60:	add	r3, r2, r1, lsl #2
   12f64:	ldr	r3, [r3, #4]
   12f68:	str	r3, [r2, r1, lsl #2]
   12f6c:	add	r1, r1, #1
   12f70:	cmp	r4, r1
   12f74:	bne	12f5c <table_remove_column@@Base+0xa8>
   12f78:	add	r7, r7, #1
   12f7c:	cmp	r7, r6
   12f80:	bne	12f34 <table_remove_column@@Base+0x80>
   12f84:	ldmib	r5, {r0, r1}
   12f88:	sub	r0, r0, #1
   12f8c:	udiv	r2, r0, r1
   12f90:	str	r0, [r5, #4]
   12f94:	mls	r0, r2, r1, r0
   12f98:	cmp	r0, #0
   12f9c:	bne	13008 <table_remove_column@@Base+0x154>
   12fa0:	ldr	r2, [r5, #12]
   12fa4:	ldr	r0, [r5]
   12fa8:	sub	r1, r2, r1
   12fac:	str	r1, [r5, #12]
   12fb0:	add	r1, r1, r1, lsl #1
   12fb4:	lsl	r1, r1, #2
   12fb8:	bl	11fec <realloc@plt>
   12fbc:	str	r0, [r5]
   12fc0:	mov	r0, r5
   12fc4:	bl	139c8 <table_get_row_length@@Base>
   12fc8:	cmp	r0, #1
   12fcc:	blt	13008 <table_remove_column@@Base+0x154>
   12fd0:	mov	r8, r0
   12fd4:	mov	r7, #0
   12fd8:	mov	r0, r5
   12fdc:	mov	r1, r7
   12fe0:	bl	13960 <table_get_row_ptr@@Base>
   12fe4:	ldr	r1, [r5, #12]
   12fe8:	mov	r6, r0
   12fec:	ldr	r0, [r0]
   12ff0:	lsl	r1, r1, #2
   12ff4:	bl	11fec <realloc@plt>
   12ff8:	add	r7, r7, #1
   12ffc:	str	r0, [r6]
   13000:	cmp	r8, r7
   13004:	bne	12fd8 <table_remove_column@@Base+0x124>
   13008:	mov	r0, r5
   1300c:	mvn	r1, #0
   13010:	mov	r2, r9
   13014:	mov	r3, #16
   13018:	bl	12c1c <table_notify@@Base>
   1301c:	mov	r0, #0
   13020:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013024 <table_get_column_compare_function@@Base>:
   13024:	ldr	r0, [r0]
   13028:	add	r1, r1, r1, lsl #1
   1302c:	add	r0, r0, r1, lsl #2
   13030:	ldr	r0, [r0, #8]
   13034:	bx	lr

00013038 <table_set_column_compare_function@@Base>:
   13038:	ldr	r0, [r0]
   1303c:	add	r1, r1, r1, lsl #1
   13040:	add	r0, r0, r1, lsl #2
   13044:	str	r2, [r0, #8]
   13048:	bx	lr

0001304c <table_compare_bool@@Base>:
   1304c:	cmp	r0, #0
   13050:	beq	13078 <table_compare_bool@@Base+0x2c>
   13054:	cmp	r1, #0
   13058:	beq	13084 <table_compare_bool@@Base+0x38>
   1305c:	ldrb	r2, [r1]
   13060:	ldrb	r0, [r0]
   13064:	mov	r1, #0
   13068:	cmp	r0, r2
   1306c:	mvncc	r1, #0
   13070:	movwhi	r1, #1
   13074:	b	13088 <table_compare_bool@@Base+0x3c>
   13078:	cmp	r1, #0
   1307c:	mvnne	r1, #0
   13080:	b	13088 <table_compare_bool@@Base+0x3c>
   13084:	mov	r1, #1
   13088:	mov	r0, r1
   1308c:	bx	lr

00013090 <table_compare_int@@Base>:
   13090:	cmp	r0, #0
   13094:	beq	130bc <table_compare_int@@Base+0x2c>
   13098:	cmp	r1, #0
   1309c:	beq	130c8 <table_compare_int@@Base+0x38>
   130a0:	ldr	r2, [r1]
   130a4:	ldr	r0, [r0]
   130a8:	mov	r1, #0
   130ac:	cmp	r0, r2
   130b0:	mvnlt	r1, #0
   130b4:	movwgt	r1, #1
   130b8:	b	130cc <table_compare_int@@Base+0x3c>
   130bc:	cmp	r1, #0
   130c0:	mvnne	r1, #0
   130c4:	b	130cc <table_compare_int@@Base+0x3c>
   130c8:	mov	r1, #1
   130cc:	mov	r0, r1
   130d0:	bx	lr

000130d4 <table_compare_uint@@Base>:
   130d4:	cmp	r0, #0
   130d8:	beq	13100 <table_compare_uint@@Base+0x2c>
   130dc:	cmp	r1, #0
   130e0:	beq	1310c <table_compare_uint@@Base+0x38>
   130e4:	ldr	r2, [r1]
   130e8:	ldr	r0, [r0]
   130ec:	mov	r1, #0
   130f0:	cmp	r0, r2
   130f4:	mvncc	r1, #0
   130f8:	movwhi	r1, #1
   130fc:	b	13110 <table_compare_uint@@Base+0x3c>
   13100:	cmp	r1, #0
   13104:	mvnne	r1, #0
   13108:	b	13110 <table_compare_uint@@Base+0x3c>
   1310c:	mov	r1, #1
   13110:	mov	r0, r1
   13114:	bx	lr

00013118 <table_compare_int8@@Base>:
   13118:	cmp	r0, #0
   1311c:	beq	13144 <table_compare_int8@@Base+0x2c>
   13120:	cmp	r1, #0
   13124:	beq	13150 <table_compare_int8@@Base+0x38>
   13128:	ldrsb	r2, [r1]
   1312c:	ldrsb	r0, [r0]
   13130:	mov	r1, #0
   13134:	cmp	r0, r2
   13138:	mvnlt	r1, #0
   1313c:	movwgt	r1, #1
   13140:	b	13154 <table_compare_int8@@Base+0x3c>
   13144:	cmp	r1, #0
   13148:	mvnne	r1, #0
   1314c:	b	13154 <table_compare_int8@@Base+0x3c>
   13150:	mov	r1, #1
   13154:	mov	r0, r1
   13158:	bx	lr

0001315c <table_compare_uint8@@Base>:
   1315c:	cmp	r0, #0
   13160:	beq	13188 <table_compare_uint8@@Base+0x2c>
   13164:	cmp	r1, #0
   13168:	beq	13194 <table_compare_uint8@@Base+0x38>
   1316c:	ldrb	r2, [r1]
   13170:	ldrb	r0, [r0]
   13174:	mov	r1, #0
   13178:	cmp	r0, r2
   1317c:	mvncc	r1, #0
   13180:	movwhi	r1, #1
   13184:	b	13198 <table_compare_uint8@@Base+0x3c>
   13188:	cmp	r1, #0
   1318c:	mvnne	r1, #0
   13190:	b	13198 <table_compare_uint8@@Base+0x3c>
   13194:	mov	r1, #1
   13198:	mov	r0, r1
   1319c:	bx	lr

000131a0 <table_compare_int16@@Base>:
   131a0:	cmp	r0, #0
   131a4:	beq	131cc <table_compare_int16@@Base+0x2c>
   131a8:	cmp	r1, #0
   131ac:	beq	131d8 <table_compare_int16@@Base+0x38>
   131b0:	ldrsh	r2, [r1]
   131b4:	ldrsh	r0, [r0]
   131b8:	mov	r1, #0
   131bc:	cmp	r0, r2
   131c0:	mvnlt	r1, #0
   131c4:	movwgt	r1, #1
   131c8:	b	131dc <table_compare_int16@@Base+0x3c>
   131cc:	cmp	r1, #0
   131d0:	mvnne	r1, #0
   131d4:	b	131dc <table_compare_int16@@Base+0x3c>
   131d8:	mov	r1, #1
   131dc:	mov	r0, r1
   131e0:	bx	lr

000131e4 <table_compare_uint16@@Base>:
   131e4:	cmp	r0, #0
   131e8:	beq	13210 <table_compare_uint16@@Base+0x2c>
   131ec:	cmp	r1, #0
   131f0:	beq	1321c <table_compare_uint16@@Base+0x38>
   131f4:	ldrh	r2, [r1]
   131f8:	ldrh	r0, [r0]
   131fc:	mov	r1, #0
   13200:	cmp	r0, r2
   13204:	mvncc	r1, #0
   13208:	movwhi	r1, #1
   1320c:	b	13220 <table_compare_uint16@@Base+0x3c>
   13210:	cmp	r1, #0
   13214:	mvnne	r1, #0
   13218:	b	13220 <table_compare_uint16@@Base+0x3c>
   1321c:	mov	r1, #1
   13220:	mov	r0, r1
   13224:	bx	lr

00013228 <table_compare_int32@@Base>:
   13228:	cmp	r0, #0
   1322c:	beq	13254 <table_compare_int32@@Base+0x2c>
   13230:	cmp	r1, #0
   13234:	beq	13260 <table_compare_int32@@Base+0x38>
   13238:	ldr	r2, [r1]
   1323c:	ldr	r0, [r0]
   13240:	mov	r1, #0
   13244:	cmp	r0, r2
   13248:	mvnlt	r1, #0
   1324c:	movwgt	r1, #1
   13250:	b	13264 <table_compare_int32@@Base+0x3c>
   13254:	cmp	r1, #0
   13258:	mvnne	r1, #0
   1325c:	b	13264 <table_compare_int32@@Base+0x3c>
   13260:	mov	r1, #1
   13264:	mov	r0, r1
   13268:	bx	lr

0001326c <table_compare_uint32@@Base>:
   1326c:	cmp	r0, #0
   13270:	beq	13298 <table_compare_uint32@@Base+0x2c>
   13274:	cmp	r1, #0
   13278:	beq	132a4 <table_compare_uint32@@Base+0x38>
   1327c:	ldr	r2, [r1]
   13280:	ldr	r0, [r0]
   13284:	mov	r1, #0
   13288:	cmp	r0, r2
   1328c:	mvncc	r1, #0
   13290:	movwhi	r1, #1
   13294:	b	132a8 <table_compare_uint32@@Base+0x3c>
   13298:	cmp	r1, #0
   1329c:	mvnne	r1, #0
   132a0:	b	132a8 <table_compare_uint32@@Base+0x3c>
   132a4:	mov	r1, #1
   132a8:	mov	r0, r1
   132ac:	bx	lr

000132b0 <table_compare_int64@@Base>:
   132b0:	cmp	r0, #0
   132b4:	beq	132fc <table_compare_int64@@Base+0x4c>
   132b8:	cmp	r1, #0
   132bc:	beq	13308 <table_compare_int64@@Base+0x58>
   132c0:	push	{r5, r7, fp, lr}
   132c4:	add	fp, sp, #8
   132c8:	ldm	r0, {r0, r5}
   132cc:	ldm	r1, {r2, r7}
   132d0:	mov	r1, #0
   132d4:	subs	r3, r0, r2
   132d8:	sbcs	r3, r5, r7
   132dc:	movwlt	r1, #1
   132e0:	cmp	r1, #0
   132e4:	mvnne	r1, #0
   132e8:	subs	r0, r2, r0
   132ec:	sbcs	r0, r7, r5
   132f0:	movwlt	r1, #1
   132f4:	pop	{r5, r7, fp, lr}
   132f8:	b	1330c <table_compare_int64@@Base+0x5c>
   132fc:	cmp	r1, #0
   13300:	mvnne	r1, #0
   13304:	b	1330c <table_compare_int64@@Base+0x5c>
   13308:	mov	r1, #1
   1330c:	mov	r0, r1
   13310:	bx	lr

00013314 <table_compare_uint64@@Base>:
   13314:	cmp	r0, #0
   13318:	beq	13360 <table_compare_uint64@@Base+0x4c>
   1331c:	cmp	r1, #0
   13320:	beq	1336c <table_compare_uint64@@Base+0x58>
   13324:	push	{r5, r7, fp, lr}
   13328:	add	fp, sp, #8
   1332c:	ldm	r0, {r0, r5}
   13330:	ldm	r1, {r2, r7}
   13334:	mov	r1, #0
   13338:	subs	r3, r0, r2
   1333c:	sbcs	r3, r5, r7
   13340:	movwcc	r1, #1
   13344:	cmp	r1, #0
   13348:	mvnne	r1, #0
   1334c:	subs	r0, r2, r0
   13350:	sbcs	r0, r7, r5
   13354:	movwcc	r1, #1
   13358:	pop	{r5, r7, fp, lr}
   1335c:	b	13370 <table_compare_uint64@@Base+0x5c>
   13360:	cmp	r1, #0
   13364:	mvnne	r1, #0
   13368:	b	13370 <table_compare_uint64@@Base+0x5c>
   1336c:	mov	r1, #1
   13370:	mov	r0, r1
   13374:	bx	lr

00013378 <table_compare_short@@Base>:
   13378:	cmp	r0, #0
   1337c:	beq	133a4 <table_compare_short@@Base+0x2c>
   13380:	cmp	r1, #0
   13384:	beq	133b0 <table_compare_short@@Base+0x38>
   13388:	ldrsh	r2, [r1]
   1338c:	ldrsh	r0, [r0]
   13390:	mov	r1, #0
   13394:	cmp	r0, r2
   13398:	mvnlt	r1, #0
   1339c:	movwgt	r1, #1
   133a0:	b	133b4 <table_compare_short@@Base+0x3c>
   133a4:	cmp	r1, #0
   133a8:	mvnne	r1, #0
   133ac:	b	133b4 <table_compare_short@@Base+0x3c>
   133b0:	mov	r1, #1
   133b4:	mov	r0, r1
   133b8:	bx	lr

000133bc <table_compare_ushort@@Base>:
   133bc:	cmp	r0, #0
   133c0:	beq	133e8 <table_compare_ushort@@Base+0x2c>
   133c4:	cmp	r1, #0
   133c8:	beq	133f4 <table_compare_ushort@@Base+0x38>
   133cc:	ldrh	r2, [r1]
   133d0:	ldrh	r0, [r0]
   133d4:	mov	r1, #0
   133d8:	cmp	r0, r2
   133dc:	mvncc	r1, #0
   133e0:	movwhi	r1, #1
   133e4:	b	133f8 <table_compare_ushort@@Base+0x3c>
   133e8:	cmp	r1, #0
   133ec:	mvnne	r1, #0
   133f0:	b	133f8 <table_compare_ushort@@Base+0x3c>
   133f4:	mov	r1, #1
   133f8:	mov	r0, r1
   133fc:	bx	lr

00013400 <table_compare_long@@Base>:
   13400:	cmp	r0, #0
   13404:	beq	1342c <table_compare_long@@Base+0x2c>
   13408:	cmp	r1, #0
   1340c:	beq	13438 <table_compare_long@@Base+0x38>
   13410:	ldr	r2, [r1]
   13414:	ldr	r0, [r0]
   13418:	mov	r1, #0
   1341c:	cmp	r0, r2
   13420:	mvnlt	r1, #0
   13424:	movwgt	r1, #1
   13428:	b	1343c <table_compare_long@@Base+0x3c>
   1342c:	cmp	r1, #0
   13430:	mvnne	r1, #0
   13434:	b	1343c <table_compare_long@@Base+0x3c>
   13438:	mov	r1, #1
   1343c:	mov	r0, r1
   13440:	bx	lr

00013444 <table_compare_ulong@@Base>:
   13444:	cmp	r0, #0
   13448:	beq	13470 <table_compare_ulong@@Base+0x2c>
   1344c:	cmp	r1, #0
   13450:	beq	1347c <table_compare_ulong@@Base+0x38>
   13454:	ldr	r2, [r1]
   13458:	ldr	r0, [r0]
   1345c:	mov	r1, #0
   13460:	cmp	r0, r2
   13464:	mvncc	r1, #0
   13468:	movwhi	r1, #1
   1346c:	b	13480 <table_compare_ulong@@Base+0x3c>
   13470:	cmp	r1, #0
   13474:	mvnne	r1, #0
   13478:	b	13480 <table_compare_ulong@@Base+0x3c>
   1347c:	mov	r1, #1
   13480:	mov	r0, r1
   13484:	bx	lr

00013488 <table_compare_llong@@Base>:
   13488:	cmp	r0, #0
   1348c:	beq	134d4 <table_compare_llong@@Base+0x4c>
   13490:	cmp	r1, #0
   13494:	beq	134e0 <table_compare_llong@@Base+0x58>
   13498:	push	{r5, r7, fp, lr}
   1349c:	add	fp, sp, #8
   134a0:	ldm	r0, {r0, r5}
   134a4:	ldm	r1, {r2, r7}
   134a8:	mov	r1, #0
   134ac:	subs	r3, r0, r2
   134b0:	sbcs	r3, r5, r7
   134b4:	movwlt	r1, #1
   134b8:	cmp	r1, #0
   134bc:	mvnne	r1, #0
   134c0:	subs	r0, r2, r0
   134c4:	sbcs	r0, r7, r5
   134c8:	movwlt	r1, #1
   134cc:	pop	{r5, r7, fp, lr}
   134d0:	b	134e4 <table_compare_llong@@Base+0x5c>
   134d4:	cmp	r1, #0
   134d8:	mvnne	r1, #0
   134dc:	b	134e4 <table_compare_llong@@Base+0x5c>
   134e0:	mov	r1, #1
   134e4:	mov	r0, r1
   134e8:	bx	lr

000134ec <table_compare_ullong@@Base>:
   134ec:	cmp	r0, #0
   134f0:	beq	13518 <table_compare_ullong@@Base+0x2c>
   134f4:	cmp	r1, #0
   134f8:	beq	13524 <table_compare_ullong@@Base+0x38>
   134fc:	ldr	r2, [r1]
   13500:	ldr	r0, [r0]
   13504:	mov	r1, #0
   13508:	cmp	r0, r2
   1350c:	mvncc	r1, #0
   13510:	movwhi	r1, #1
   13514:	b	13528 <table_compare_ullong@@Base+0x3c>
   13518:	cmp	r1, #0
   1351c:	mvnne	r1, #0
   13520:	b	13528 <table_compare_ullong@@Base+0x3c>
   13524:	mov	r1, #1
   13528:	mov	r0, r1
   1352c:	bx	lr

00013530 <table_compare_float@@Base>:
   13530:	cmp	r0, #0
   13534:	beq	13560 <table_compare_float@@Base+0x30>
   13538:	cmp	r1, #0
   1353c:	beq	1356c <table_compare_float@@Base+0x3c>
   13540:	vldr	s0, [r1]
   13544:	vldr	s2, [r0]
   13548:	mov	r1, #0
   1354c:	vcmpe.f32	s2, s0
   13550:	vmrs	APSR_nzcv, fpscr
   13554:	mvnmi	r1, #0
   13558:	movwgt	r1, #1
   1355c:	b	13570 <table_compare_float@@Base+0x40>
   13560:	cmp	r1, #0
   13564:	mvnne	r1, #0
   13568:	b	13570 <table_compare_float@@Base+0x40>
   1356c:	mov	r1, #1
   13570:	mov	r0, r1
   13574:	bx	lr

00013578 <table_compare_double@@Base>:
   13578:	cmp	r0, #0
   1357c:	beq	135a8 <table_compare_double@@Base+0x30>
   13580:	cmp	r1, #0
   13584:	beq	135b4 <table_compare_double@@Base+0x3c>
   13588:	vldr	d16, [r1]
   1358c:	vldr	d17, [r0]
   13590:	mov	r1, #0
   13594:	vcmpe.f64	d17, d16
   13598:	vmrs	APSR_nzcv, fpscr
   1359c:	mvnmi	r1, #0
   135a0:	movwgt	r1, #1
   135a4:	b	135b8 <table_compare_double@@Base+0x40>
   135a8:	cmp	r1, #0
   135ac:	mvnne	r1, #0
   135b0:	b	135b8 <table_compare_double@@Base+0x40>
   135b4:	mov	r1, #1
   135b8:	mov	r0, r1
   135bc:	bx	lr

000135c0 <table_compare_ldouble@@Base>:
   135c0:	cmp	r0, #0
   135c4:	beq	135f0 <table_compare_ldouble@@Base+0x30>
   135c8:	cmp	r1, #0
   135cc:	beq	135fc <table_compare_ldouble@@Base+0x3c>
   135d0:	vldr	d16, [r1]
   135d4:	vldr	d17, [r0]
   135d8:	mov	r1, #0
   135dc:	vcmpe.f64	d17, d16
   135e0:	vmrs	APSR_nzcv, fpscr
   135e4:	mvnmi	r1, #0
   135e8:	movwgt	r1, #1
   135ec:	b	13600 <table_compare_ldouble@@Base+0x40>
   135f0:	cmp	r1, #0
   135f4:	mvnne	r1, #0
   135f8:	b	13600 <table_compare_ldouble@@Base+0x40>
   135fc:	mov	r1, #1
   13600:	mov	r0, r1
   13604:	bx	lr

00013608 <table_compare_char@@Base>:
   13608:	cmp	r0, #0
   1360c:	beq	13634 <table_compare_char@@Base+0x2c>
   13610:	cmp	r1, #0
   13614:	beq	13640 <table_compare_char@@Base+0x38>
   13618:	ldrb	r2, [r1]
   1361c:	ldrb	r0, [r0]
   13620:	mov	r1, #0
   13624:	cmp	r0, r2
   13628:	mvncc	r1, #0
   1362c:	movwhi	r1, #1
   13630:	b	13644 <table_compare_char@@Base+0x3c>
   13634:	cmp	r1, #0
   13638:	mvnne	r1, #0
   1363c:	b	13644 <table_compare_char@@Base+0x3c>
   13640:	mov	r1, #1
   13644:	mov	r0, r1
   13648:	bx	lr

0001364c <table_compare_uchar@@Base>:
   1364c:	cmp	r0, #0
   13650:	beq	13678 <table_compare_uchar@@Base+0x2c>
   13654:	cmp	r1, #0
   13658:	beq	13684 <table_compare_uchar@@Base+0x38>
   1365c:	ldrb	r2, [r1]
   13660:	ldrb	r0, [r0]
   13664:	mov	r1, #0
   13668:	cmp	r0, r2
   1366c:	mvncc	r1, #0
   13670:	movwhi	r1, #1
   13674:	b	13688 <table_compare_uchar@@Base+0x3c>
   13678:	cmp	r1, #0
   1367c:	mvnne	r1, #0
   13680:	b	13688 <table_compare_uchar@@Base+0x3c>
   13684:	mov	r1, #1
   13688:	mov	r0, r1
   1368c:	bx	lr

00013690 <table_compare_string@@Base>:
   13690:	cmp	r0, #0
   13694:	beq	136a4 <table_compare_string@@Base+0x14>
   13698:	cmp	r1, #0
   1369c:	beq	136b0 <table_compare_string@@Base+0x20>
   136a0:	b	11fbc <strcmp@plt>
   136a4:	cmp	r1, #0
   136a8:	mvnne	r1, #0
   136ac:	b	136b4 <table_compare_string@@Base+0x24>
   136b0:	mov	r1, #1
   136b4:	mov	r0, r1
   136b8:	bx	lr

000136bc <table_compare_ptr@@Base>:
   136bc:	cmp	r0, r1
   136c0:	mov	r2, #0
   136c4:	mvncc	r2, #0
   136c8:	movwhi	r2, #1
   136cc:	mov	r0, r2
   136d0:	bx	lr

000136d4 <table_get_default_compare_function_for_data_type@@Base>:
   136d4:	cmp	r0, #23
   136d8:	movhi	r0, #0
   136dc:	bxhi	lr
   136e0:	movw	r1, #20228	; 0x4f04
   136e4:	movt	r1, #1
   136e8:	ldr	r0, [r1, r0, lsl #2]
   136ec:	bx	lr

000136f0 <table_get@@Base>:
   136f0:	push	{fp, lr}
   136f4:	mov	fp, sp
   136f8:	bl	143a8 <table_get_cell_ptr@@Base>
   136fc:	ldr	r0, [r0]
   13700:	pop	{fp, pc}

00013704 <table_get_bool@@Base>:
   13704:	push	{fp, lr}
   13708:	mov	fp, sp
   1370c:	bl	143a8 <table_get_cell_ptr@@Base>
   13710:	ldr	r0, [r0]
   13714:	ldrb	r0, [r0]
   13718:	pop	{fp, pc}

0001371c <table_get_int@@Base>:
   1371c:	push	{fp, lr}
   13720:	mov	fp, sp
   13724:	bl	143a8 <table_get_cell_ptr@@Base>
   13728:	ldr	r0, [r0]
   1372c:	ldr	r0, [r0]
   13730:	pop	{fp, pc}

00013734 <table_get_uint@@Base>:
   13734:	push	{fp, lr}
   13738:	mov	fp, sp
   1373c:	bl	143a8 <table_get_cell_ptr@@Base>
   13740:	ldr	r0, [r0]
   13744:	ldr	r0, [r0]
   13748:	pop	{fp, pc}

0001374c <table_get_int8@@Base>:
   1374c:	push	{fp, lr}
   13750:	mov	fp, sp
   13754:	bl	143a8 <table_get_cell_ptr@@Base>
   13758:	ldr	r0, [r0]
   1375c:	ldrsb	r0, [r0]
   13760:	pop	{fp, pc}

00013764 <table_get_uint8@@Base>:
   13764:	push	{fp, lr}
   13768:	mov	fp, sp
   1376c:	bl	143a8 <table_get_cell_ptr@@Base>
   13770:	ldr	r0, [r0]
   13774:	ldrb	r0, [r0]
   13778:	pop	{fp, pc}

0001377c <table_get_int16@@Base>:
   1377c:	push	{fp, lr}
   13780:	mov	fp, sp
   13784:	bl	143a8 <table_get_cell_ptr@@Base>
   13788:	ldr	r0, [r0]
   1378c:	ldrsh	r0, [r0]
   13790:	pop	{fp, pc}

00013794 <table_get_uint16@@Base>:
   13794:	push	{fp, lr}
   13798:	mov	fp, sp
   1379c:	bl	143a8 <table_get_cell_ptr@@Base>
   137a0:	ldr	r0, [r0]
   137a4:	ldrh	r0, [r0]
   137a8:	pop	{fp, pc}

000137ac <table_get_int32@@Base>:
   137ac:	push	{fp, lr}
   137b0:	mov	fp, sp
   137b4:	bl	143a8 <table_get_cell_ptr@@Base>
   137b8:	ldr	r0, [r0]
   137bc:	ldr	r0, [r0]
   137c0:	pop	{fp, pc}

000137c4 <table_get_uint32@@Base>:
   137c4:	push	{fp, lr}
   137c8:	mov	fp, sp
   137cc:	bl	143a8 <table_get_cell_ptr@@Base>
   137d0:	ldr	r0, [r0]
   137d4:	ldr	r0, [r0]
   137d8:	pop	{fp, pc}

000137dc <table_get_int64@@Base>:
   137dc:	push	{fp, lr}
   137e0:	mov	fp, sp
   137e4:	bl	143a8 <table_get_cell_ptr@@Base>
   137e8:	ldr	r0, [r0]
   137ec:	ldrd	r0, [r0]
   137f0:	pop	{fp, pc}

000137f4 <table_get_uint64@@Base>:
   137f4:	push	{fp, lr}
   137f8:	mov	fp, sp
   137fc:	bl	143a8 <table_get_cell_ptr@@Base>
   13800:	ldr	r0, [r0]
   13804:	ldrd	r0, [r0]
   13808:	pop	{fp, pc}

0001380c <table_get_short@@Base>:
   1380c:	push	{fp, lr}
   13810:	mov	fp, sp
   13814:	bl	143a8 <table_get_cell_ptr@@Base>
   13818:	ldr	r0, [r0]
   1381c:	ldrsh	r0, [r0]
   13820:	pop	{fp, pc}

00013824 <table_get_ushort@@Base>:
   13824:	push	{fp, lr}
   13828:	mov	fp, sp
   1382c:	bl	143a8 <table_get_cell_ptr@@Base>
   13830:	ldr	r0, [r0]
   13834:	ldrh	r0, [r0]
   13838:	pop	{fp, pc}

0001383c <table_get_long@@Base>:
   1383c:	push	{fp, lr}
   13840:	mov	fp, sp
   13844:	bl	143a8 <table_get_cell_ptr@@Base>
   13848:	ldr	r0, [r0]
   1384c:	ldr	r0, [r0]
   13850:	pop	{fp, pc}

00013854 <table_get_ulong@@Base>:
   13854:	push	{fp, lr}
   13858:	mov	fp, sp
   1385c:	bl	143a8 <table_get_cell_ptr@@Base>
   13860:	ldr	r0, [r0]
   13864:	ldr	r0, [r0]
   13868:	pop	{fp, pc}

0001386c <table_get_llong@@Base>:
   1386c:	push	{fp, lr}
   13870:	mov	fp, sp
   13874:	bl	143a8 <table_get_cell_ptr@@Base>
   13878:	ldr	r0, [r0]
   1387c:	ldrd	r0, [r0]
   13880:	pop	{fp, pc}

00013884 <table_get_ullong@@Base>:
   13884:	push	{fp, lr}
   13888:	mov	fp, sp
   1388c:	bl	143a8 <table_get_cell_ptr@@Base>
   13890:	ldr	r0, [r0]
   13894:	ldrd	r0, [r0]
   13898:	pop	{fp, pc}

0001389c <table_get_float@@Base>:
   1389c:	push	{fp, lr}
   138a0:	mov	fp, sp
   138a4:	bl	143a8 <table_get_cell_ptr@@Base>
   138a8:	ldr	r0, [r0]
   138ac:	vldr	s0, [r0]
   138b0:	pop	{fp, pc}

000138b4 <table_get_double@@Base>:
   138b4:	push	{fp, lr}
   138b8:	mov	fp, sp
   138bc:	bl	143a8 <table_get_cell_ptr@@Base>
   138c0:	ldr	r0, [r0]
   138c4:	vldr	d0, [r0]
   138c8:	pop	{fp, pc}

000138cc <table_get_ldouble@@Base>:
   138cc:	push	{fp, lr}
   138d0:	mov	fp, sp
   138d4:	bl	143a8 <table_get_cell_ptr@@Base>
   138d8:	ldr	r0, [r0]
   138dc:	vldr	d0, [r0]
   138e0:	pop	{fp, pc}

000138e4 <table_get_char@@Base>:
   138e4:	push	{fp, lr}
   138e8:	mov	fp, sp
   138ec:	bl	143a8 <table_get_cell_ptr@@Base>
   138f0:	ldr	r0, [r0]
   138f4:	ldrb	r0, [r0]
   138f8:	pop	{fp, pc}

000138fc <table_get_uchar@@Base>:
   138fc:	push	{fp, lr}
   13900:	mov	fp, sp
   13904:	bl	143a8 <table_get_cell_ptr@@Base>
   13908:	ldr	r0, [r0]
   1390c:	ldrb	r0, [r0]
   13910:	pop	{fp, pc}

00013914 <table_get_string@@Base>:
   13914:	push	{fp, lr}
   13918:	mov	fp, sp
   1391c:	bl	143a8 <table_get_cell_ptr@@Base>
   13920:	ldr	r0, [r0]
   13924:	pop	{fp, pc}

00013928 <table_get_ptr@@Base>:
   13928:	push	{fp, lr}
   1392c:	mov	fp, sp
   13930:	bl	143a8 <table_get_cell_ptr@@Base>
   13934:	ldr	r0, [r0]
   13938:	pop	{fp, pc}

0001393c <table_row_init@@Base>:
   1393c:	push	{r4, r5, fp, lr}
   13940:	add	fp, sp, #8
   13944:	mov	r4, r1
   13948:	ldr	r1, [r0, #12]
   1394c:	ldr	r5, [r0, #16]
   13950:	lsl	r0, r1, #2
   13954:	bl	12004 <malloc@plt>
   13958:	str	r0, [r5, r4, lsl #2]
   1395c:	pop	{r4, r5, fp, pc}

00013960 <table_get_row_ptr@@Base>:
   13960:	ldr	r0, [r0, #16]
   13964:	add	r0, r0, r1, lsl #2
   13968:	bx	lr

0001396c <table_row_destroy@@Base>:
   1396c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13970:	add	fp, sp, #24
   13974:	mov	r4, r1
   13978:	mov	r5, r0
   1397c:	bl	12d10 <table_get_column_length@@Base>
   13980:	ldr	r8, [r5, #16]
   13984:	cmp	r0, #1
   13988:	blt	139b0 <table_row_destroy@@Base+0x44>
   1398c:	mov	r6, r0
   13990:	mov	r7, #0
   13994:	mov	r0, r5
   13998:	mov	r1, r4
   1399c:	mov	r2, r7
   139a0:	bl	143c4 <table_cell_destroy@@Base>
   139a4:	add	r7, r7, #1
   139a8:	cmp	r6, r7
   139ac:	bne	13994 <table_row_destroy@@Base+0x28>
   139b0:	ldr	r0, [r8, r4, lsl #2]
   139b4:	cmp	r0, #0
   139b8:	beq	139c4 <table_row_destroy@@Base+0x58>
   139bc:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   139c0:	b	11fd4 <free@plt>
   139c4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000139c8 <table_get_row_length@@Base>:
   139c8:	ldr	r0, [r0, #20]
   139cc:	bx	lr

000139d0 <table_add_row@@Base>:
   139d0:	push	{r4, r5, r6, r7, fp, lr}
   139d4:	add	fp, sp, #16
   139d8:	ldr	r5, [r0, #20]
   139dc:	ldr	r1, [r0, #24]
   139e0:	mov	r4, r0
   139e4:	udiv	r0, r5, r1
   139e8:	mls	r0, r0, r1, r5
   139ec:	cmp	r0, #0
   139f0:	bne	13a14 <table_add_row@@Base+0x44>
   139f4:	ldr	r2, [r4, #28]
   139f8:	ldr	r0, [r4, #16]
   139fc:	add	r1, r2, r1
   13a00:	str	r1, [r4, #28]
   13a04:	lsl	r1, r1, #2
   13a08:	bl	11fec <realloc@plt>
   13a0c:	str	r0, [r4, #16]
   13a10:	ldr	r5, [r4, #20]
   13a14:	mov	r0, r4
   13a18:	bl	12d10 <table_get_column_length@@Base>
   13a1c:	mov	r6, r0
   13a20:	ldr	r0, [r4, #12]
   13a24:	ldr	r7, [r4, #16]
   13a28:	lsl	r0, r0, #2
   13a2c:	bl	12004 <malloc@plt>
   13a30:	cmp	r6, #1
   13a34:	str	r0, [r7, r5, lsl #2]
   13a38:	blt	13a5c <table_add_row@@Base+0x8c>
   13a3c:	mov	r7, #0
   13a40:	mov	r0, r4
   13a44:	mov	r1, r5
   13a48:	mov	r2, r7
   13a4c:	bl	14388 <table_cell_init@@Base>
   13a50:	add	r7, r7, #1
   13a54:	cmp	r6, r7
   13a58:	bne	13a40 <table_add_row@@Base+0x70>
   13a5c:	ldr	r1, [r4, #20]
   13a60:	mov	r0, r4
   13a64:	mvn	r2, #0
   13a68:	mov	r3, #2
   13a6c:	bl	12c1c <table_notify@@Base>
   13a70:	ldr	r0, [r4, #20]
   13a74:	add	r1, r0, #1
   13a78:	str	r1, [r4, #20]
   13a7c:	pop	{r4, r5, r6, r7, fp, pc}

00013a80 <table_remove_row@@Base>:
   13a80:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13a84:	add	fp, sp, #24
   13a88:	ldr	r8, [r0, #20]
   13a8c:	mov	r4, r1
   13a90:	mov	r5, r0
   13a94:	bl	12d10 <table_get_column_length@@Base>
   13a98:	cmp	r0, #1
   13a9c:	blt	13ae8 <table_remove_row@@Base+0x68>
   13aa0:	mov	r6, r0
   13aa4:	mov	r7, #0
   13aa8:	mov	r0, r5
   13aac:	mov	r1, r7
   13ab0:	bl	12d88 <table_get_column_data_type@@Base>
   13ab4:	cmp	r0, #23
   13ab8:	beq	13adc <table_remove_row@@Base+0x5c>
   13abc:	mov	r0, r5
   13ac0:	mov	r1, r4
   13ac4:	mov	r2, r7
   13ac8:	bl	143a8 <table_get_cell_ptr@@Base>
   13acc:	ldr	r0, [r0]
   13ad0:	cmp	r0, #0
   13ad4:	beq	13adc <table_remove_row@@Base+0x5c>
   13ad8:	bl	11fd4 <free@plt>
   13adc:	add	r7, r7, #1
   13ae0:	cmp	r6, r7
   13ae4:	bne	13aa8 <table_remove_row@@Base+0x28>
   13ae8:	ldr	r0, [r5, #16]
   13aec:	ldr	r0, [r0, r4, lsl #2]
   13af0:	cmp	r0, #0
   13af4:	beq	13afc <table_remove_row@@Base+0x7c>
   13af8:	bl	11fd4 <free@plt>
   13afc:	sub	r0, r8, #1
   13b00:	cmp	r0, r4
   13b04:	ble	13b28 <table_remove_row@@Base+0xa8>
   13b08:	mov	r1, r4
   13b0c:	ldr	r2, [r5, #16]
   13b10:	add	r3, r2, r1, lsl #2
   13b14:	ldr	r3, [r3, #4]
   13b18:	str	r3, [r2, r1, lsl #2]
   13b1c:	add	r1, r1, #1
   13b20:	cmp	r0, r1
   13b24:	bne	13b0c <table_remove_row@@Base+0x8c>
   13b28:	ldr	r0, [r5, #20]
   13b2c:	ldr	r1, [r5, #24]
   13b30:	sub	r0, r0, #1
   13b34:	udiv	r2, r0, r1
   13b38:	str	r0, [r5, #20]
   13b3c:	mls	r0, r2, r1, r0
   13b40:	cmp	r0, #0
   13b44:	bne	13b64 <table_remove_row@@Base+0xe4>
   13b48:	ldr	r2, [r5, #28]
   13b4c:	ldr	r0, [r5, #16]
   13b50:	sub	r1, r2, r1
   13b54:	str	r1, [r5, #28]
   13b58:	lsl	r1, r1, #2
   13b5c:	bl	11fec <realloc@plt>
   13b60:	str	r0, [r5, #16]
   13b64:	mov	r0, r5
   13b68:	mov	r1, r4
   13b6c:	mvn	r2, #0
   13b70:	mov	r3, #4
   13b74:	bl	12c1c <table_notify@@Base>
   13b78:	mov	r0, #0
   13b7c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013b80 <table_set_row_ptr@@Base>:
   13b80:	ldr	r2, [r2]
   13b84:	ldr	r0, [r0, #16]
   13b88:	str	r2, [r0, r1, lsl #2]
   13b8c:	bx	lr

00013b90 <table_set@@Base>:
   13b90:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13b94:	add	fp, sp, #24
   13b98:	mov	r8, r3
   13b9c:	mov	r4, r2
   13ba0:	mov	r9, r1
   13ba4:	mov	r6, r0
   13ba8:	bl	143a8 <table_get_cell_ptr@@Base>
   13bac:	mov	r5, r0
   13bb0:	mov	r0, r6
   13bb4:	mov	r1, r4
   13bb8:	bl	12ce8 <table_get_col_ptr@@Base>
   13bbc:	ldr	r1, [fp, #8]
   13bc0:	mvn	r7, #0
   13bc4:	cmp	r1, #23
   13bc8:	bhi	13e88 <table_set@@Base+0x2f8>
   13bcc:	add	r2, pc, #0
   13bd0:	ldr	pc, [r2, r1, lsl #2]
   13bd4:	andeq	r3, r1, r4, lsr ip
   13bd8:	andeq	r3, r1, r4, asr #24
   13bdc:	andeq	r3, r1, r4, asr ip
   13be0:	andeq	r3, r1, r4, ror #24
   13be4:	andeq	r3, r1, r4, ror ip
   13be8:	andeq	r3, r1, r4, lsl #25
   13bec:	muleq	r1, r4, ip
   13bf0:	andeq	r3, r1, r4, lsr #25
   13bf4:			; <UNDEFINED> instruction: 0x00013cb4
   13bf8:	andeq	r3, r1, r4, asr #25
   13bfc:	ldrdeq	r3, [r1], -r4
   13c00:	andeq	r3, r1, r4, ror #25
   13c04:	andeq	r3, r1, ip, lsl sp
   13c08:	andeq	r3, r1, ip, lsr #26
   13c0c:	andeq	r3, r1, ip, lsr sp
   13c10:	andeq	r3, r1, ip, asr #26
   13c14:	andeq	r3, r1, ip, asr sp
   13c18:	muleq	r1, r0, sp
   13c1c:	andeq	r3, r1, r0, lsr #27
   13c20:	andeq	r3, r1, r0, ror #27
   13c24:	strdeq	r3, [r1], -r0
   13c28:	andeq	r3, r1, r0, lsl #28
   13c2c:	andeq	r3, r1, ip, lsr lr
   13c30:	muleq	r1, r0, lr
   13c34:	ldr	r0, [r0, #4]
   13c38:	cmp	r0, #0
   13c3c:	bne	13e88 <table_set@@Base+0x2f8>
   13c40:	b	13d68 <table_set@@Base+0x1d8>
   13c44:	ldr	r0, [r0, #4]
   13c48:	cmp	r0, #1
   13c4c:	beq	13d68 <table_set@@Base+0x1d8>
   13c50:	b	13e88 <table_set@@Base+0x2f8>
   13c54:	ldr	r0, [r0, #4]
   13c58:	cmp	r0, #2
   13c5c:	beq	13e48 <table_set@@Base+0x2b8>
   13c60:	b	13e88 <table_set@@Base+0x2f8>
   13c64:	ldr	r0, [r0, #4]
   13c68:	cmp	r0, #3
   13c6c:	beq	13e48 <table_set@@Base+0x2b8>
   13c70:	b	13e88 <table_set@@Base+0x2f8>
   13c74:	ldr	r0, [r0, #4]
   13c78:	cmp	r0, #4
   13c7c:	beq	13cf0 <table_set@@Base+0x160>
   13c80:	b	13e88 <table_set@@Base+0x2f8>
   13c84:	ldr	r0, [r0, #4]
   13c88:	cmp	r0, #5
   13c8c:	beq	13cf0 <table_set@@Base+0x160>
   13c90:	b	13e88 <table_set@@Base+0x2f8>
   13c94:	ldr	r0, [r0, #4]
   13c98:	cmp	r0, #6
   13c9c:	beq	13d68 <table_set@@Base+0x1d8>
   13ca0:	b	13e88 <table_set@@Base+0x2f8>
   13ca4:	ldr	r0, [r0, #4]
   13ca8:	cmp	r0, #7
   13cac:	beq	13d68 <table_set@@Base+0x1d8>
   13cb0:	b	13e88 <table_set@@Base+0x2f8>
   13cb4:	ldr	r0, [r0, #4]
   13cb8:	cmp	r0, #8
   13cbc:	beq	13dac <table_set@@Base+0x21c>
   13cc0:	b	13e88 <table_set@@Base+0x2f8>
   13cc4:	ldr	r0, [r0, #4]
   13cc8:	cmp	r0, #9
   13ccc:	beq	13dac <table_set@@Base+0x21c>
   13cd0:	b	13e88 <table_set@@Base+0x2f8>
   13cd4:	ldr	r0, [r0, #4]
   13cd8:	cmp	r0, #10
   13cdc:	beq	13cf0 <table_set@@Base+0x160>
   13ce0:	b	13e88 <table_set@@Base+0x2f8>
   13ce4:	ldr	r0, [r0, #4]
   13ce8:	cmp	r0, #11
   13cec:	bne	13e88 <table_set@@Base+0x2f8>
   13cf0:	ldr	r0, [r5]
   13cf4:	cmp	r0, #0
   13cf8:	bne	13d10 <table_set@@Base+0x180>
   13cfc:	mov	r0, #2
   13d00:	bl	12004 <malloc@plt>
   13d04:	cmp	r0, #0
   13d08:	str	r0, [r5]
   13d0c:	beq	13e88 <table_set@@Base+0x2f8>
   13d10:	ldrh	r1, [r8]
   13d14:	strh	r1, [r0]
   13d18:	b	13e70 <table_set@@Base+0x2e0>
   13d1c:	ldr	r0, [r0, #4]
   13d20:	cmp	r0, #12
   13d24:	beq	13d68 <table_set@@Base+0x1d8>
   13d28:	b	13e88 <table_set@@Base+0x2f8>
   13d2c:	ldr	r0, [r0, #4]
   13d30:	cmp	r0, #13
   13d34:	beq	13d68 <table_set@@Base+0x1d8>
   13d38:	b	13e88 <table_set@@Base+0x2f8>
   13d3c:	ldr	r0, [r0, #4]
   13d40:	cmp	r0, #14
   13d44:	beq	13dac <table_set@@Base+0x21c>
   13d48:	b	13e88 <table_set@@Base+0x2f8>
   13d4c:	ldr	r0, [r0, #4]
   13d50:	cmp	r0, #15
   13d54:	beq	13dac <table_set@@Base+0x21c>
   13d58:	b	13e88 <table_set@@Base+0x2f8>
   13d5c:	ldr	r0, [r0, #4]
   13d60:	cmp	r0, #16
   13d64:	bne	13e88 <table_set@@Base+0x2f8>
   13d68:	ldr	r0, [r5]
   13d6c:	cmp	r0, #0
   13d70:	bne	13d88 <table_set@@Base+0x1f8>
   13d74:	mov	r0, #4
   13d78:	bl	12004 <malloc@plt>
   13d7c:	cmp	r0, #0
   13d80:	str	r0, [r5]
   13d84:	beq	13e88 <table_set@@Base+0x2f8>
   13d88:	ldr	r1, [r8]
   13d8c:	b	13dd8 <table_set@@Base+0x248>
   13d90:	ldr	r0, [r0, #4]
   13d94:	cmp	r0, #17
   13d98:	beq	13dac <table_set@@Base+0x21c>
   13d9c:	b	13e88 <table_set@@Base+0x2f8>
   13da0:	ldr	r0, [r0, #4]
   13da4:	cmp	r0, #18
   13da8:	bne	13e88 <table_set@@Base+0x2f8>
   13dac:	ldr	r0, [r5]
   13db0:	cmp	r0, #0
   13db4:	bne	13dcc <table_set@@Base+0x23c>
   13db8:	mov	r0, #8
   13dbc:	bl	12004 <malloc@plt>
   13dc0:	cmp	r0, #0
   13dc4:	str	r0, [r5]
   13dc8:	beq	13e88 <table_set@@Base+0x2f8>
   13dcc:	ldr	r1, [r8]
   13dd0:	ldr	r2, [r8, #4]
   13dd4:	str	r2, [r0, #4]
   13dd8:	str	r1, [r0]
   13ddc:	b	13e70 <table_set@@Base+0x2e0>
   13de0:	ldr	r0, [r0, #4]
   13de4:	cmp	r0, #19
   13de8:	beq	13e48 <table_set@@Base+0x2b8>
   13dec:	b	13e88 <table_set@@Base+0x2f8>
   13df0:	ldr	r0, [r0, #4]
   13df4:	cmp	r0, #20
   13df8:	beq	13e48 <table_set@@Base+0x2b8>
   13dfc:	b	13e88 <table_set@@Base+0x2f8>
   13e00:	ldr	r0, [r0, #4]
   13e04:	cmp	r0, #21
   13e08:	bne	13e88 <table_set@@Base+0x2f8>
   13e0c:	mov	r0, r8
   13e10:	bl	12028 <strlen@plt>
   13e14:	ldr	r2, [r5]
   13e18:	add	r1, r0, #1
   13e1c:	mov	r0, r2
   13e20:	bl	11fec <realloc@plt>
   13e24:	cmp	r0, #0
   13e28:	str	r0, [r5]
   13e2c:	beq	13e88 <table_set@@Base+0x2f8>
   13e30:	mov	r1, r8
   13e34:	bl	11ff8 <strcpy@plt>
   13e38:	b	13e70 <table_set@@Base+0x2e0>
   13e3c:	ldr	r0, [r0, #4]
   13e40:	cmp	r0, #22
   13e44:	bne	13e88 <table_set@@Base+0x2f8>
   13e48:	ldr	r0, [r5]
   13e4c:	cmp	r0, #0
   13e50:	bne	13e68 <table_set@@Base+0x2d8>
   13e54:	mov	r0, #1
   13e58:	bl	12004 <malloc@plt>
   13e5c:	cmp	r0, #0
   13e60:	str	r0, [r5]
   13e64:	beq	13e88 <table_set@@Base+0x2f8>
   13e68:	ldrb	r1, [r8]
   13e6c:	strb	r1, [r0]
   13e70:	mov	r0, r6
   13e74:	mov	r1, r9
   13e78:	mov	r2, r4
   13e7c:	mov	r3, #1
   13e80:	bl	12c1c <table_notify@@Base>
   13e84:	mov	r7, #0
   13e88:	mov	r0, r7
   13e8c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13e90:	ldr	r0, [r0, #4]
   13e94:	cmp	r0, #23
   13e98:	bne	13e88 <table_set@@Base+0x2f8>
   13e9c:	str	r8, [r5]
   13ea0:	b	13e70 <table_set@@Base+0x2e0>

00013ea4 <table_set_bool@@Base>:
   13ea4:	push	{fp, lr}
   13ea8:	mov	fp, sp
   13eac:	sub	sp, sp, #8
   13eb0:	strb	r3, [fp, #-1]
   13eb4:	mov	r3, #22
   13eb8:	str	r3, [sp]
   13ebc:	sub	r3, fp, #1
   13ec0:	bl	13b90 <table_set@@Base>
   13ec4:	mov	sp, fp
   13ec8:	pop	{fp, pc}

00013ecc <table_set_int@@Base>:
   13ecc:	push	{fp, lr}
   13ed0:	mov	fp, sp
   13ed4:	sub	sp, sp, #8
   13ed8:	str	r3, [sp, #4]
   13edc:	mov	r3, #0
   13ee0:	str	r3, [sp]
   13ee4:	add	r3, sp, #4
   13ee8:	bl	13b90 <table_set@@Base>
   13eec:	mov	sp, fp
   13ef0:	pop	{fp, pc}

00013ef4 <table_set_uint@@Base>:
   13ef4:	push	{fp, lr}
   13ef8:	mov	fp, sp
   13efc:	sub	sp, sp, #8
   13f00:	str	r3, [sp, #4]
   13f04:	mov	r3, #1
   13f08:	str	r3, [sp]
   13f0c:	add	r3, sp, #4
   13f10:	bl	13b90 <table_set@@Base>
   13f14:	mov	sp, fp
   13f18:	pop	{fp, pc}

00013f1c <table_set_int8@@Base>:
   13f1c:	push	{fp, lr}
   13f20:	mov	fp, sp
   13f24:	sub	sp, sp, #8
   13f28:	strb	r3, [fp, #-1]
   13f2c:	mov	r3, #2
   13f30:	str	r3, [sp]
   13f34:	sub	r3, fp, #1
   13f38:	bl	13b90 <table_set@@Base>
   13f3c:	mov	sp, fp
   13f40:	pop	{fp, pc}

00013f44 <table_set_uint8@@Base>:
   13f44:	push	{fp, lr}
   13f48:	mov	fp, sp
   13f4c:	sub	sp, sp, #8
   13f50:	strb	r3, [fp, #-1]
   13f54:	mov	r3, #3
   13f58:	str	r3, [sp]
   13f5c:	sub	r3, fp, #1
   13f60:	bl	13b90 <table_set@@Base>
   13f64:	mov	sp, fp
   13f68:	pop	{fp, pc}

00013f6c <table_set_int16@@Base>:
   13f6c:	push	{fp, lr}
   13f70:	mov	fp, sp
   13f74:	sub	sp, sp, #8
   13f78:	strh	r3, [fp, #-2]
   13f7c:	mov	r3, #4
   13f80:	str	r3, [sp]
   13f84:	sub	r3, fp, #2
   13f88:	bl	13b90 <table_set@@Base>
   13f8c:	mov	sp, fp
   13f90:	pop	{fp, pc}

00013f94 <table_set_uint16@@Base>:
   13f94:	push	{fp, lr}
   13f98:	mov	fp, sp
   13f9c:	sub	sp, sp, #8
   13fa0:	strh	r3, [fp, #-2]
   13fa4:	mov	r3, #5
   13fa8:	str	r3, [sp]
   13fac:	sub	r3, fp, #2
   13fb0:	bl	13b90 <table_set@@Base>
   13fb4:	mov	sp, fp
   13fb8:	pop	{fp, pc}

00013fbc <table_set_int32@@Base>:
   13fbc:	push	{fp, lr}
   13fc0:	mov	fp, sp
   13fc4:	sub	sp, sp, #8
   13fc8:	str	r3, [sp, #4]
   13fcc:	mov	r3, #6
   13fd0:	str	r3, [sp]
   13fd4:	add	r3, sp, #4
   13fd8:	bl	13b90 <table_set@@Base>
   13fdc:	mov	sp, fp
   13fe0:	pop	{fp, pc}

00013fe4 <table_set_uint32@@Base>:
   13fe4:	push	{fp, lr}
   13fe8:	mov	fp, sp
   13fec:	sub	sp, sp, #8
   13ff0:	str	r3, [sp, #4]
   13ff4:	mov	r3, #7
   13ff8:	str	r3, [sp]
   13ffc:	add	r3, sp, #4
   14000:	bl	13b90 <table_set@@Base>
   14004:	mov	sp, fp
   14008:	pop	{fp, pc}

0001400c <table_set_int64@@Base>:
   1400c:	push	{fp, lr}
   14010:	mov	fp, sp
   14014:	sub	sp, sp, #16
   14018:	ldr	r3, [fp, #12]
   1401c:	str	r3, [sp, #12]
   14020:	ldr	r3, [fp, #8]
   14024:	str	r3, [sp, #8]
   14028:	mov	r3, #8
   1402c:	str	r3, [sp]
   14030:	add	r3, sp, #8
   14034:	bl	13b90 <table_set@@Base>
   14038:	mov	sp, fp
   1403c:	pop	{fp, pc}

00014040 <table_set_uint64@@Base>:
   14040:	push	{fp, lr}
   14044:	mov	fp, sp
   14048:	sub	sp, sp, #16
   1404c:	ldr	r3, [fp, #12]
   14050:	str	r3, [sp, #12]
   14054:	ldr	r3, [fp, #8]
   14058:	str	r3, [sp, #8]
   1405c:	mov	r3, #9
   14060:	str	r3, [sp]
   14064:	add	r3, sp, #8
   14068:	bl	13b90 <table_set@@Base>
   1406c:	mov	sp, fp
   14070:	pop	{fp, pc}

00014074 <table_set_short@@Base>:
   14074:	push	{fp, lr}
   14078:	mov	fp, sp
   1407c:	sub	sp, sp, #8
   14080:	strh	r3, [fp, #-2]
   14084:	mov	r3, #10
   14088:	str	r3, [sp]
   1408c:	sub	r3, fp, #2
   14090:	bl	13b90 <table_set@@Base>
   14094:	mov	sp, fp
   14098:	pop	{fp, pc}

0001409c <table_set_ushort@@Base>:
   1409c:	push	{fp, lr}
   140a0:	mov	fp, sp
   140a4:	sub	sp, sp, #8
   140a8:	strh	r3, [fp, #-2]
   140ac:	mov	r3, #11
   140b0:	str	r3, [sp]
   140b4:	sub	r3, fp, #2
   140b8:	bl	13b90 <table_set@@Base>
   140bc:	mov	sp, fp
   140c0:	pop	{fp, pc}

000140c4 <table_set_long@@Base>:
   140c4:	push	{fp, lr}
   140c8:	mov	fp, sp
   140cc:	sub	sp, sp, #8
   140d0:	str	r3, [sp, #4]
   140d4:	mov	r3, #12
   140d8:	str	r3, [sp]
   140dc:	add	r3, sp, #4
   140e0:	bl	13b90 <table_set@@Base>
   140e4:	mov	sp, fp
   140e8:	pop	{fp, pc}

000140ec <table_set_ulong@@Base>:
   140ec:	push	{fp, lr}
   140f0:	mov	fp, sp
   140f4:	sub	sp, sp, #8
   140f8:	str	r3, [sp, #4]
   140fc:	mov	r3, #13
   14100:	str	r3, [sp]
   14104:	add	r3, sp, #4
   14108:	bl	13b90 <table_set@@Base>
   1410c:	mov	sp, fp
   14110:	pop	{fp, pc}

00014114 <table_set_llong@@Base>:
   14114:	push	{fp, lr}
   14118:	mov	fp, sp
   1411c:	sub	sp, sp, #16
   14120:	ldr	r3, [fp, #12]
   14124:	str	r3, [sp, #12]
   14128:	ldr	r3, [fp, #8]
   1412c:	str	r3, [sp, #8]
   14130:	mov	r3, #14
   14134:	str	r3, [sp]
   14138:	add	r3, sp, #8
   1413c:	bl	13b90 <table_set@@Base>
   14140:	mov	sp, fp
   14144:	pop	{fp, pc}

00014148 <table_set_ullong@@Base>:
   14148:	push	{fp, lr}
   1414c:	mov	fp, sp
   14150:	sub	sp, sp, #16
   14154:	ldr	r3, [fp, #12]
   14158:	str	r3, [sp, #12]
   1415c:	ldr	r3, [fp, #8]
   14160:	str	r3, [sp, #8]
   14164:	mov	r3, #15
   14168:	str	r3, [sp]
   1416c:	add	r3, sp, #8
   14170:	bl	13b90 <table_set@@Base>
   14174:	mov	sp, fp
   14178:	pop	{fp, pc}

0001417c <table_set_float@@Base>:
   1417c:	push	{fp, lr}
   14180:	mov	fp, sp
   14184:	sub	sp, sp, #8
   14188:	mov	r3, #16
   1418c:	vstr	s0, [sp, #4]
   14190:	str	r3, [sp]
   14194:	add	r3, sp, #4
   14198:	bl	13b90 <table_set@@Base>
   1419c:	mov	sp, fp
   141a0:	pop	{fp, pc}

000141a4 <table_set_double@@Base>:
   141a4:	push	{fp, lr}
   141a8:	mov	fp, sp
   141ac:	sub	sp, sp, #16
   141b0:	mov	r3, #17
   141b4:	vstr	d0, [sp, #8]
   141b8:	str	r3, [sp]
   141bc:	add	r3, sp, #8
   141c0:	bl	13b90 <table_set@@Base>
   141c4:	mov	sp, fp
   141c8:	pop	{fp, pc}

000141cc <table_set_ldouble@@Base>:
   141cc:	push	{fp, lr}
   141d0:	mov	fp, sp
   141d4:	sub	sp, sp, #16
   141d8:	mov	r3, #18
   141dc:	vstr	d0, [sp, #8]
   141e0:	str	r3, [sp]
   141e4:	add	r3, sp, #8
   141e8:	bl	13b90 <table_set@@Base>
   141ec:	mov	sp, fp
   141f0:	pop	{fp, pc}

000141f4 <table_set_string@@Base>:
   141f4:	push	{fp, lr}
   141f8:	mov	fp, sp
   141fc:	sub	sp, sp, #8
   14200:	mov	ip, #21
   14204:	str	ip, [sp]
   14208:	bl	13b90 <table_set@@Base>
   1420c:	mov	sp, fp
   14210:	pop	{fp, pc}

00014214 <table_set_char@@Base>:
   14214:	push	{fp, lr}
   14218:	mov	fp, sp
   1421c:	sub	sp, sp, #8
   14220:	strb	r3, [fp, #-1]
   14224:	mov	r3, #19
   14228:	str	r3, [sp]
   1422c:	sub	r3, fp, #1
   14230:	bl	13b90 <table_set@@Base>
   14234:	mov	sp, fp
   14238:	pop	{fp, pc}

0001423c <table_set_uchar@@Base>:
   1423c:	push	{fp, lr}
   14240:	mov	fp, sp
   14244:	sub	sp, sp, #8
   14248:	strb	r3, [fp, #-1]
   1424c:	mov	r3, #20
   14250:	str	r3, [sp]
   14254:	sub	r3, fp, #1
   14258:	bl	13b90 <table_set@@Base>
   1425c:	mov	sp, fp
   14260:	pop	{fp, pc}

00014264 <table_set_ptr@@Base>:
   14264:	push	{fp, lr}
   14268:	mov	fp, sp
   1426c:	sub	sp, sp, #8
   14270:	mov	ip, #23
   14274:	str	ip, [sp]
   14278:	bl	13b90 <table_set@@Base>
   1427c:	mov	sp, fp
   14280:	pop	{fp, pc}

00014284 <table_column_is_valid@@Base>:
   14284:	cmp	r0, #0
   14288:	moveq	r0, #0
   1428c:	bxeq	lr
   14290:	push	{r4, sl, fp, lr}
   14294:	add	fp, sp, #8
   14298:	mov	r4, r1
   1429c:	bl	12d10 <table_get_column_length@@Base>
   142a0:	cmp	r0, r4
   142a4:	mov	r0, #0
   142a8:	mov	r1, #0
   142ac:	movwgt	r0, #1
   142b0:	cmn	r4, #1
   142b4:	movwgt	r1, #1
   142b8:	and	r0, r1, r0
   142bc:	pop	{r4, sl, fp, pc}

000142c0 <table_row_is_valid@@Base>:
   142c0:	cmp	r0, #0
   142c4:	moveq	r0, #0
   142c8:	bxeq	lr
   142cc:	push	{r4, sl, fp, lr}
   142d0:	add	fp, sp, #8
   142d4:	mov	r4, r1
   142d8:	bl	139c8 <table_get_row_length@@Base>
   142dc:	cmp	r0, r4
   142e0:	mov	r0, #0
   142e4:	mov	r1, #0
   142e8:	movwgt	r0, #1
   142ec:	cmn	r4, #1
   142f0:	movwgt	r1, #1
   142f4:	and	r0, r1, r0
   142f8:	pop	{r4, sl, fp, pc}

000142fc <table_cell_is_valid@@Base>:
   142fc:	push	{r4, r5, r6, r7, fp, lr}
   14300:	add	fp, sp, #16
   14304:	mov	r5, #0
   14308:	cmp	r0, #0
   1430c:	beq	14354 <table_cell_is_valid@@Base+0x58>
   14310:	mov	r7, r2
   14314:	mov	r4, r1
   14318:	mov	r6, r0
   1431c:	bl	12d10 <table_get_column_length@@Base>
   14320:	cmp	r7, #0
   14324:	bmi	14354 <table_cell_is_valid@@Base+0x58>
   14328:	cmp	r0, r7
   1432c:	ble	14354 <table_cell_is_valid@@Base+0x58>
   14330:	mov	r0, r6
   14334:	bl	139c8 <table_get_row_length@@Base>
   14338:	cmp	r0, r4
   1433c:	mov	r0, #0
   14340:	mov	r1, #0
   14344:	movwgt	r0, #1
   14348:	cmn	r4, #1
   1434c:	movwgt	r1, #1
   14350:	and	r5, r1, r0
   14354:	mov	r0, r5
   14358:	pop	{r4, r5, r6, r7, fp, pc}

0001435c <table_cell_has_value@@Base>:
   1435c:	push	{fp, lr}
   14360:	mov	fp, sp
   14364:	bl	143a8 <table_get_cell_ptr@@Base>
   14368:	cmp	r0, #0
   1436c:	beq	14380 <table_cell_has_value@@Base+0x24>
   14370:	ldr	r0, [r0]
   14374:	cmp	r0, #0
   14378:	movwne	r0, #1
   1437c:	pop	{fp, pc}
   14380:	mov	r0, #0
   14384:	pop	{fp, pc}

00014388 <table_cell_init@@Base>:
   14388:	push	{r4, sl, fp, lr}
   1438c:	add	fp, sp, #8
   14390:	mov	r4, r2
   14394:	bl	13960 <table_get_row_ptr@@Base>
   14398:	ldr	r0, [r0]
   1439c:	mov	r1, #0
   143a0:	str	r1, [r0, r4, lsl #2]
   143a4:	pop	{r4, sl, fp, pc}

000143a8 <table_get_cell_ptr@@Base>:
   143a8:	push	{r4, sl, fp, lr}
   143ac:	add	fp, sp, #8
   143b0:	mov	r4, r2
   143b4:	bl	13960 <table_get_row_ptr@@Base>
   143b8:	ldr	r0, [r0]
   143bc:	add	r0, r0, r4, lsl #2
   143c0:	pop	{r4, sl, fp, pc}

000143c4 <table_cell_destroy@@Base>:
   143c4:	push	{r4, r5, r6, sl, fp, lr}
   143c8:	add	fp, sp, #16
   143cc:	mov	r5, r1
   143d0:	mov	r1, r2
   143d4:	mov	r4, r2
   143d8:	mov	r6, r0
   143dc:	bl	12d88 <table_get_column_data_type@@Base>
   143e0:	cmp	r0, #23
   143e4:	popeq	{r4, r5, r6, sl, fp, pc}
   143e8:	mov	r0, r6
   143ec:	mov	r1, r5
   143f0:	bl	13960 <table_get_row_ptr@@Base>
   143f4:	ldr	r0, [r0]
   143f8:	ldr	r0, [r0, r4, lsl #2]
   143fc:	cmp	r0, #0
   14400:	beq	1440c <table_cell_destroy@@Base+0x48>
   14404:	pop	{r4, r5, r6, sl, fp, lr}
   14408:	b	11fd4 <free@plt>
   1440c:	pop	{r4, r5, r6, sl, fp, pc}

00014410 <table_cell_to_buffer@@Base>:
   14410:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14414:	add	fp, sp, #24
   14418:	sub	sp, sp, #8
   1441c:	mov	r7, r1
   14420:	mov	r1, r2
   14424:	mov	r5, r3
   14428:	mov	r6, r2
   1442c:	mov	r4, r0
   14430:	bl	12d88 <table_get_column_data_type@@Base>
   14434:	cmp	r0, #23
   14438:	bhi	14728 <table_cell_to_buffer@@Base+0x318>
   1443c:	ldr	r8, [fp, #8]
   14440:	add	r1, pc, #0
   14444:	ldr	pc, [r1, r0, lsl #2]
   14448:	andeq	r4, r1, r8, lsr #9
   1444c:			; <UNDEFINED> instruction: 0x000144bc
   14450:	ldrdeq	r4, [r1], -r0
   14454:	andeq	r4, r1, r4, ror #9
   14458:	strdeq	r4, [r1], -r8
   1445c:	andeq	r4, r1, ip, lsl #10
   14460:	andeq	r4, r1, r0, lsr #10
   14464:	andeq	r4, r1, r4, lsr r5
   14468:	andeq	r4, r1, r4, asr r5
   1446c:	andeq	r4, r1, r8, ror #10
   14470:	andeq	r4, r1, ip, ror r5
   14474:	muleq	r1, ip, r5
   14478:			; <UNDEFINED> instruction: 0x000145bc
   1447c:	ldrdeq	r4, [r1], -ip
   14480:	strdeq	r4, [r1], -ip
   14484:	andeq	r4, r1, ip, lsl r6
   14488:	andeq	r4, r1, ip, lsr r6
   1448c:	andeq	r4, r1, r0, ror #12
   14490:	andeq	r4, r1, r0, lsl #13
   14494:	andeq	r4, r1, ip, lsr #13
   14498:	andeq	r4, r1, r0, asr #13
   1449c:	andeq	r4, r1, r0, ror #13
   144a0:	andeq	r4, r1, r0, lsl #14
   144a4:	andeq	r4, r1, r4, lsr r7
   144a8:	mov	r0, r4
   144ac:	mov	r1, r7
   144b0:	mov	r2, r6
   144b4:	bl	1371c <table_get_int@@Base>
   144b8:	b	14710 <table_cell_to_buffer@@Base+0x300>
   144bc:	mov	r0, r4
   144c0:	mov	r1, r7
   144c4:	mov	r2, r6
   144c8:	bl	13734 <table_get_uint@@Base>
   144cc:	b	14544 <table_cell_to_buffer@@Base+0x134>
   144d0:	mov	r0, r4
   144d4:	mov	r1, r7
   144d8:	mov	r2, r6
   144dc:	bl	1374c <table_get_int8@@Base>
   144e0:	b	14710 <table_cell_to_buffer@@Base+0x300>
   144e4:	mov	r0, r4
   144e8:	mov	r1, r7
   144ec:	mov	r2, r6
   144f0:	bl	13764 <table_get_uint8@@Base>
   144f4:	b	14544 <table_cell_to_buffer@@Base+0x134>
   144f8:	mov	r0, r4
   144fc:	mov	r1, r7
   14500:	mov	r2, r6
   14504:	bl	1377c <table_get_int16@@Base>
   14508:	b	14710 <table_cell_to_buffer@@Base+0x300>
   1450c:	mov	r0, r4
   14510:	mov	r1, r7
   14514:	mov	r2, r6
   14518:	bl	13794 <table_get_uint16@@Base>
   1451c:	b	14544 <table_cell_to_buffer@@Base+0x134>
   14520:	mov	r0, r4
   14524:	mov	r1, r7
   14528:	mov	r2, r6
   1452c:	bl	137ac <table_get_int32@@Base>
   14530:	b	14710 <table_cell_to_buffer@@Base+0x300>
   14534:	mov	r0, r4
   14538:	mov	r1, r7
   1453c:	mov	r2, r6
   14540:	bl	137c4 <table_get_uint32@@Base>
   14544:	movw	r2, #20327	; 0x4f67
   14548:	mov	r3, r0
   1454c:	movt	r2, #1
   14550:	b	1471c <table_cell_to_buffer@@Base+0x30c>
   14554:	mov	r0, r4
   14558:	mov	r1, r7
   1455c:	mov	r2, r6
   14560:	bl	137dc <table_get_int64@@Base>
   14564:	b	1460c <table_cell_to_buffer@@Base+0x1fc>
   14568:	mov	r0, r4
   1456c:	mov	r1, r7
   14570:	mov	r2, r6
   14574:	bl	137f4 <table_get_uint64@@Base>
   14578:	b	1462c <table_cell_to_buffer@@Base+0x21c>
   1457c:	mov	r0, r4
   14580:	mov	r1, r7
   14584:	mov	r2, r6
   14588:	bl	1380c <table_get_short@@Base>
   1458c:	movw	r2, #20340	; 0x4f74
   14590:	mov	r3, r0
   14594:	movt	r2, #1
   14598:	b	1471c <table_cell_to_buffer@@Base+0x30c>
   1459c:	mov	r0, r4
   145a0:	mov	r1, r7
   145a4:	mov	r2, r6
   145a8:	bl	13824 <table_get_ushort@@Base>
   145ac:	movw	r2, #20344	; 0x4f78
   145b0:	mov	r3, r0
   145b4:	movt	r2, #1
   145b8:	b	1471c <table_cell_to_buffer@@Base+0x30c>
   145bc:	mov	r0, r4
   145c0:	mov	r1, r7
   145c4:	mov	r2, r6
   145c8:	bl	1383c <table_get_long@@Base>
   145cc:	movw	r2, #20348	; 0x4f7c
   145d0:	mov	r3, r0
   145d4:	movt	r2, #1
   145d8:	b	1471c <table_cell_to_buffer@@Base+0x30c>
   145dc:	mov	r0, r4
   145e0:	mov	r1, r7
   145e4:	mov	r2, r6
   145e8:	bl	13854 <table_get_ulong@@Base>
   145ec:	movw	r2, #20352	; 0x4f80
   145f0:	mov	r3, r0
   145f4:	movt	r2, #1
   145f8:	b	1471c <table_cell_to_buffer@@Base+0x30c>
   145fc:	mov	r0, r4
   14600:	mov	r1, r7
   14604:	mov	r2, r6
   14608:	bl	1386c <table_get_llong@@Base>
   1460c:	movw	r2, #20330	; 0x4f6a
   14610:	stm	sp, {r0, r1}
   14614:	movt	r2, #1
   14618:	b	1469c <table_cell_to_buffer@@Base+0x28c>
   1461c:	mov	r0, r4
   14620:	mov	r1, r7
   14624:	mov	r2, r6
   14628:	bl	13884 <table_get_ullong@@Base>
   1462c:	movw	r2, #20335	; 0x4f6f
   14630:	stm	sp, {r0, r1}
   14634:	movt	r2, #1
   14638:	b	1469c <table_cell_to_buffer@@Base+0x28c>
   1463c:	mov	r0, r4
   14640:	mov	r1, r7
   14644:	mov	r2, r6
   14648:	bl	1389c <table_get_float@@Base>
   1464c:	vcvt.f64.f32	d16, s0
   14650:	movw	r2, #20359	; 0x4f87
   14654:	movt	r2, #1
   14658:	vstr	d16, [sp]
   1465c:	b	1469c <table_cell_to_buffer@@Base+0x28c>
   14660:	mov	r0, r4
   14664:	mov	r1, r7
   14668:	mov	r2, r6
   1466c:	bl	138b4 <table_get_double@@Base>
   14670:	movw	r2, #20362	; 0x4f8a
   14674:	vstr	d0, [sp]
   14678:	movt	r2, #1
   1467c:	b	1469c <table_cell_to_buffer@@Base+0x28c>
   14680:	mov	r0, r4
   14684:	mov	r1, r7
   14688:	mov	r2, r6
   1468c:	bl	138cc <table_get_ldouble@@Base>
   14690:	movw	r2, #20366	; 0x4f8e
   14694:	vstr	d0, [sp]
   14698:	movt	r2, #1
   1469c:	mov	r0, r5
   146a0:	mov	r1, r8
   146a4:	bl	12040 <snprintf@plt>
   146a8:	b	14728 <table_cell_to_buffer@@Base+0x318>
   146ac:	mov	r0, r4
   146b0:	mov	r1, r7
   146b4:	mov	r2, r6
   146b8:	bl	138e4 <table_get_char@@Base>
   146bc:	b	146d0 <table_cell_to_buffer@@Base+0x2c0>
   146c0:	mov	r0, r4
   146c4:	mov	r1, r7
   146c8:	mov	r2, r6
   146cc:	bl	138fc <table_get_uchar@@Base>
   146d0:	movw	r2, #20370	; 0x4f92
   146d4:	mov	r3, r0
   146d8:	movt	r2, #1
   146dc:	b	1471c <table_cell_to_buffer@@Base+0x30c>
   146e0:	mov	r0, r4
   146e4:	mov	r1, r7
   146e8:	mov	r2, r6
   146ec:	bl	13914 <table_get_string@@Base>
   146f0:	movw	r2, #20356	; 0x4f84
   146f4:	mov	r3, r0
   146f8:	movt	r2, #1
   146fc:	b	1471c <table_cell_to_buffer@@Base+0x30c>
   14700:	mov	r0, r4
   14704:	mov	r1, r7
   14708:	mov	r2, r6
   1470c:	bl	13704 <table_get_bool@@Base>
   14710:	movw	r2, #20324	; 0x4f64
   14714:	mov	r3, r0
   14718:	movt	r2, #1
   1471c:	mov	r0, r5
   14720:	mov	r1, r8
   14724:	bl	12040 <snprintf@plt>
   14728:	mov	r0, #0
   1472c:	sub	sp, fp, #24
   14730:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14734:	mov	r0, r4
   14738:	mov	r1, r7
   1473c:	mov	r2, r6
   14740:	bl	13928 <table_get_ptr@@Base>
   14744:	movw	r2, #20373	; 0x4f95
   14748:	mov	r3, r0
   1474c:	movt	r2, #1
   14750:	b	1471c <table_cell_to_buffer@@Base+0x30c>

00014754 <table_cell_from_buffer@@Base>:
   14754:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14758:	add	fp, sp, #24
   1475c:	sub	sp, sp, #264	; 0x108
   14760:	mov	r5, r1
   14764:	mov	r1, r2
   14768:	mov	r7, r3
   1476c:	mov	r4, r2
   14770:	mov	r6, r0
   14774:	bl	12d88 <table_get_column_data_type@@Base>
   14778:	cmp	r0, #23
   1477c:	bhi	14dac <table_cell_from_buffer@@Base+0x658>
   14780:	add	r1, pc, #0
   14784:	ldr	pc, [r1, r0, lsl #2]
   14788:	andeq	r4, r1, r8, ror #15
   1478c:	andeq	r4, r1, r4, lsr #16
   14790:	andeq	r4, r1, r0, ror #16
   14794:	muleq	r1, ip, r8
   14798:	ldrdeq	r4, [r1], -r8
   1479c:	andeq	r4, r1, r4, lsl r9
   147a0:	andeq	r4, r1, r0, asr r9
   147a4:	andeq	r4, r1, ip, lsl #19
   147a8:	andeq	r4, r1, r8, asr #19
   147ac:	andeq	r4, r1, ip, lsl #20
   147b0:	andeq	r4, r1, r0, asr sl
   147b4:	andeq	r4, r1, ip, lsl #21
   147b8:	andeq	r4, r1, r8, asr #21
   147bc:	andeq	r4, r1, r4, lsl #22
   147c0:	andeq	r4, r1, r0, asr #22
   147c4:	andeq	r4, r1, r4, lsl #23
   147c8:	andeq	r4, r1, r8, asr #23
   147cc:	andeq	r4, r1, r4, lsl #24
   147d0:	andeq	r4, r1, r0, asr #24
   147d4:	andeq	r4, r1, ip, ror ip
   147d8:			; <UNDEFINED> instruction: 0x00014cb8
   147dc:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   147e0:	andeq	r4, r1, r0, lsr sp
   147e4:	andeq	r4, r1, r4, ror sp
   147e8:	movw	r1, #20324	; 0x4f64
   147ec:	add	r2, sp, #8
   147f0:	mov	r0, r7
   147f4:	movt	r1, #1
   147f8:	bl	1204c <__isoc99_sscanf@plt>
   147fc:	mov	r1, r0
   14800:	mvn	r0, #0
   14804:	cmp	r1, #1
   14808:	bne	14db0 <table_cell_from_buffer@@Base+0x65c>
   1480c:	ldr	r3, [sp, #8]
   14810:	mov	r0, r6
   14814:	mov	r1, r5
   14818:	mov	r2, r4
   1481c:	bl	13ecc <table_set_int@@Base>
   14820:	b	14dac <table_cell_from_buffer@@Base+0x658>
   14824:	movw	r1, #20327	; 0x4f67
   14828:	add	r2, sp, #8
   1482c:	mov	r0, r7
   14830:	movt	r1, #1
   14834:	bl	1204c <__isoc99_sscanf@plt>
   14838:	mov	r1, r0
   1483c:	mvn	r0, #0
   14840:	cmp	r1, #1
   14844:	bne	14db0 <table_cell_from_buffer@@Base+0x65c>
   14848:	ldr	r3, [sp, #8]
   1484c:	mov	r0, r6
   14850:	mov	r1, r5
   14854:	mov	r2, r4
   14858:	bl	13ef4 <table_set_uint@@Base>
   1485c:	b	14dac <table_cell_from_buffer@@Base+0x658>
   14860:	movw	r1, #20376	; 0x4f98
   14864:	add	r2, sp, #8
   14868:	mov	r0, r7
   1486c:	movt	r1, #1
   14870:	bl	1204c <__isoc99_sscanf@plt>
   14874:	mov	r1, r0
   14878:	mvn	r0, #0
   1487c:	cmp	r1, #1
   14880:	bne	14db0 <table_cell_from_buffer@@Base+0x65c>
   14884:	ldrsb	r3, [sp, #8]
   14888:	mov	r0, r6
   1488c:	mov	r1, r5
   14890:	mov	r2, r4
   14894:	bl	13f1c <table_set_int8@@Base>
   14898:	b	14dac <table_cell_from_buffer@@Base+0x658>
   1489c:	movw	r1, #20381	; 0x4f9d
   148a0:	add	r2, sp, #8
   148a4:	mov	r0, r7
   148a8:	movt	r1, #1
   148ac:	bl	1204c <__isoc99_sscanf@plt>
   148b0:	mov	r1, r0
   148b4:	mvn	r0, #0
   148b8:	cmp	r1, #1
   148bc:	bne	14db0 <table_cell_from_buffer@@Base+0x65c>
   148c0:	ldrb	r3, [sp, #8]
   148c4:	mov	r0, r6
   148c8:	mov	r1, r5
   148cc:	mov	r2, r4
   148d0:	bl	13f44 <table_set_uint8@@Base>
   148d4:	b	14dac <table_cell_from_buffer@@Base+0x658>
   148d8:	movw	r1, #20340	; 0x4f74
   148dc:	add	r2, sp, #8
   148e0:	mov	r0, r7
   148e4:	movt	r1, #1
   148e8:	bl	1204c <__isoc99_sscanf@plt>
   148ec:	mov	r1, r0
   148f0:	mvn	r0, #0
   148f4:	cmp	r1, #1
   148f8:	bne	14db0 <table_cell_from_buffer@@Base+0x65c>
   148fc:	ldrsh	r3, [sp, #8]
   14900:	mov	r0, r6
   14904:	mov	r1, r5
   14908:	mov	r2, r4
   1490c:	bl	13f6c <table_set_int16@@Base>
   14910:	b	14dac <table_cell_from_buffer@@Base+0x658>
   14914:	movw	r1, #20344	; 0x4f78
   14918:	add	r2, sp, #8
   1491c:	mov	r0, r7
   14920:	movt	r1, #1
   14924:	bl	1204c <__isoc99_sscanf@plt>
   14928:	mov	r1, r0
   1492c:	mvn	r0, #0
   14930:	cmp	r1, #1
   14934:	bne	14db0 <table_cell_from_buffer@@Base+0x65c>
   14938:	ldrh	r3, [sp, #8]
   1493c:	mov	r0, r6
   14940:	mov	r1, r5
   14944:	mov	r2, r4
   14948:	bl	13f94 <table_set_uint16@@Base>
   1494c:	b	14dac <table_cell_from_buffer@@Base+0x658>
   14950:	movw	r1, #20324	; 0x4f64
   14954:	add	r2, sp, #8
   14958:	mov	r0, r7
   1495c:	movt	r1, #1
   14960:	bl	1204c <__isoc99_sscanf@plt>
   14964:	mov	r1, r0
   14968:	mvn	r0, #0
   1496c:	cmp	r1, #1
   14970:	bne	14db0 <table_cell_from_buffer@@Base+0x65c>
   14974:	ldr	r3, [sp, #8]
   14978:	mov	r0, r6
   1497c:	mov	r1, r5
   14980:	mov	r2, r4
   14984:	bl	13fbc <table_set_int32@@Base>
   14988:	b	14dac <table_cell_from_buffer@@Base+0x658>
   1498c:	movw	r1, #20327	; 0x4f67
   14990:	add	r2, sp, #8
   14994:	mov	r0, r7
   14998:	movt	r1, #1
   1499c:	bl	1204c <__isoc99_sscanf@plt>
   149a0:	mov	r1, r0
   149a4:	mvn	r0, #0
   149a8:	cmp	r1, #1
   149ac:	bne	14db0 <table_cell_from_buffer@@Base+0x65c>
   149b0:	ldr	r3, [sp, #8]
   149b4:	mov	r0, r6
   149b8:	mov	r1, r5
   149bc:	mov	r2, r4
   149c0:	bl	13fe4 <table_set_uint32@@Base>
   149c4:	b	14dac <table_cell_from_buffer@@Base+0x658>
   149c8:	movw	r1, #20330	; 0x4f6a
   149cc:	add	r2, sp, #8
   149d0:	mov	r0, r7
   149d4:	movt	r1, #1
   149d8:	bl	1204c <__isoc99_sscanf@plt>
   149dc:	mov	r1, r0
   149e0:	mvn	r0, #0
   149e4:	cmp	r1, #1
   149e8:	bne	14db0 <table_cell_from_buffer@@Base+0x65c>
   149ec:	ldr	r0, [sp, #8]
   149f0:	ldr	r1, [sp, #12]
   149f4:	mov	r2, r4
   149f8:	stm	sp, {r0, r1}
   149fc:	mov	r0, r6
   14a00:	mov	r1, r5
   14a04:	bl	1400c <table_set_int64@@Base>
   14a08:	b	14dac <table_cell_from_buffer@@Base+0x658>
   14a0c:	movw	r1, #20335	; 0x4f6f
   14a10:	add	r2, sp, #8
   14a14:	mov	r0, r7
   14a18:	movt	r1, #1
   14a1c:	bl	1204c <__isoc99_sscanf@plt>
   14a20:	mov	r1, r0
   14a24:	mvn	r0, #0
   14a28:	cmp	r1, #1
   14a2c:	bne	14db0 <table_cell_from_buffer@@Base+0x65c>
   14a30:	ldr	r0, [sp, #8]
   14a34:	ldr	r1, [sp, #12]
   14a38:	mov	r2, r4
   14a3c:	stm	sp, {r0, r1}
   14a40:	mov	r0, r6
   14a44:	mov	r1, r5
   14a48:	bl	14040 <table_set_uint64@@Base>
   14a4c:	b	14dac <table_cell_from_buffer@@Base+0x658>
   14a50:	movw	r1, #20340	; 0x4f74
   14a54:	add	r2, sp, #8
   14a58:	mov	r0, r7
   14a5c:	movt	r1, #1
   14a60:	bl	1204c <__isoc99_sscanf@plt>
   14a64:	mov	r1, r0
   14a68:	mvn	r0, #0
   14a6c:	cmp	r1, #1
   14a70:	bne	14db0 <table_cell_from_buffer@@Base+0x65c>
   14a74:	ldrsh	r3, [sp, #8]
   14a78:	mov	r0, r6
   14a7c:	mov	r1, r5
   14a80:	mov	r2, r4
   14a84:	bl	14074 <table_set_short@@Base>
   14a88:	b	14dac <table_cell_from_buffer@@Base+0x658>
   14a8c:	movw	r1, #20344	; 0x4f78
   14a90:	add	r2, sp, #8
   14a94:	mov	r0, r7
   14a98:	movt	r1, #1
   14a9c:	bl	1204c <__isoc99_sscanf@plt>
   14aa0:	mov	r1, r0
   14aa4:	mvn	r0, #0
   14aa8:	cmp	r1, #1
   14aac:	bne	14db0 <table_cell_from_buffer@@Base+0x65c>
   14ab0:	ldrh	r3, [sp, #8]
   14ab4:	mov	r0, r6
   14ab8:	mov	r1, r5
   14abc:	mov	r2, r4
   14ac0:	bl	1409c <table_set_ushort@@Base>
   14ac4:	b	14dac <table_cell_from_buffer@@Base+0x658>
   14ac8:	movw	r1, #20348	; 0x4f7c
   14acc:	add	r2, sp, #8
   14ad0:	mov	r0, r7
   14ad4:	movt	r1, #1
   14ad8:	bl	1204c <__isoc99_sscanf@plt>
   14adc:	mov	r1, r0
   14ae0:	mvn	r0, #0
   14ae4:	cmp	r1, #1
   14ae8:	bne	14db0 <table_cell_from_buffer@@Base+0x65c>
   14aec:	ldr	r3, [sp, #8]
   14af0:	mov	r0, r6
   14af4:	mov	r1, r5
   14af8:	mov	r2, r4
   14afc:	bl	140c4 <table_set_long@@Base>
   14b00:	b	14dac <table_cell_from_buffer@@Base+0x658>
   14b04:	movw	r1, #20352	; 0x4f80
   14b08:	add	r2, sp, #8
   14b0c:	mov	r0, r7
   14b10:	movt	r1, #1
   14b14:	bl	1204c <__isoc99_sscanf@plt>
   14b18:	mov	r1, r0
   14b1c:	mvn	r0, #0
   14b20:	cmp	r1, #1
   14b24:	bne	14db0 <table_cell_from_buffer@@Base+0x65c>
   14b28:	ldr	r3, [sp, #8]
   14b2c:	mov	r0, r6
   14b30:	mov	r1, r5
   14b34:	mov	r2, r4
   14b38:	bl	140ec <table_set_ulong@@Base>
   14b3c:	b	14dac <table_cell_from_buffer@@Base+0x658>
   14b40:	movw	r1, #20330	; 0x4f6a
   14b44:	add	r2, sp, #8
   14b48:	mov	r0, r7
   14b4c:	movt	r1, #1
   14b50:	bl	1204c <__isoc99_sscanf@plt>
   14b54:	mov	r1, r0
   14b58:	mvn	r0, #0
   14b5c:	cmp	r1, #1
   14b60:	bne	14db0 <table_cell_from_buffer@@Base+0x65c>
   14b64:	ldr	r0, [sp, #8]
   14b68:	ldr	r1, [sp, #12]
   14b6c:	mov	r2, r4
   14b70:	stm	sp, {r0, r1}
   14b74:	mov	r0, r6
   14b78:	mov	r1, r5
   14b7c:	bl	14114 <table_set_llong@@Base>
   14b80:	b	14dac <table_cell_from_buffer@@Base+0x658>
   14b84:	movw	r1, #20335	; 0x4f6f
   14b88:	add	r2, sp, #8
   14b8c:	mov	r0, r7
   14b90:	movt	r1, #1
   14b94:	bl	1204c <__isoc99_sscanf@plt>
   14b98:	mov	r1, r0
   14b9c:	mvn	r0, #0
   14ba0:	cmp	r1, #1
   14ba4:	bne	14db0 <table_cell_from_buffer@@Base+0x65c>
   14ba8:	ldr	r0, [sp, #8]
   14bac:	ldr	r1, [sp, #12]
   14bb0:	mov	r2, r4
   14bb4:	stm	sp, {r0, r1}
   14bb8:	mov	r0, r6
   14bbc:	mov	r1, r5
   14bc0:	bl	14148 <table_set_ullong@@Base>
   14bc4:	b	14dac <table_cell_from_buffer@@Base+0x658>
   14bc8:	movw	r1, #20359	; 0x4f87
   14bcc:	add	r2, sp, #8
   14bd0:	mov	r0, r7
   14bd4:	movt	r1, #1
   14bd8:	bl	1204c <__isoc99_sscanf@plt>
   14bdc:	mov	r1, r0
   14be0:	mvn	r0, #0
   14be4:	cmp	r1, #1
   14be8:	bne	14db0 <table_cell_from_buffer@@Base+0x65c>
   14bec:	vldr	s0, [sp, #8]
   14bf0:	mov	r0, r6
   14bf4:	mov	r1, r5
   14bf8:	mov	r2, r4
   14bfc:	bl	1417c <table_set_float@@Base>
   14c00:	b	14dac <table_cell_from_buffer@@Base+0x658>
   14c04:	movw	r1, #20362	; 0x4f8a
   14c08:	add	r2, sp, #8
   14c0c:	mov	r0, r7
   14c10:	movt	r1, #1
   14c14:	bl	1204c <__isoc99_sscanf@plt>
   14c18:	mov	r1, r0
   14c1c:	mvn	r0, #0
   14c20:	cmp	r1, #1
   14c24:	bne	14db0 <table_cell_from_buffer@@Base+0x65c>
   14c28:	vldr	d0, [sp, #8]
   14c2c:	mov	r0, r6
   14c30:	mov	r1, r5
   14c34:	mov	r2, r4
   14c38:	bl	141a4 <table_set_double@@Base>
   14c3c:	b	14dac <table_cell_from_buffer@@Base+0x658>
   14c40:	movw	r1, #20366	; 0x4f8e
   14c44:	add	r2, sp, #8
   14c48:	mov	r0, r7
   14c4c:	movt	r1, #1
   14c50:	bl	1204c <__isoc99_sscanf@plt>
   14c54:	mov	r1, r0
   14c58:	mvn	r0, #0
   14c5c:	cmp	r1, #1
   14c60:	bne	14db0 <table_cell_from_buffer@@Base+0x65c>
   14c64:	vldr	d0, [sp, #8]
   14c68:	mov	r0, r6
   14c6c:	mov	r1, r5
   14c70:	mov	r2, r4
   14c74:	bl	141cc <table_set_ldouble@@Base>
   14c78:	b	14dac <table_cell_from_buffer@@Base+0x658>
   14c7c:	movw	r1, #20370	; 0x4f92
   14c80:	add	r2, sp, #8
   14c84:	mov	r0, r7
   14c88:	movt	r1, #1
   14c8c:	bl	1204c <__isoc99_sscanf@plt>
   14c90:	mov	r1, r0
   14c94:	mvn	r0, #0
   14c98:	cmp	r1, #1
   14c9c:	bne	14db0 <table_cell_from_buffer@@Base+0x65c>
   14ca0:	ldrb	r3, [sp, #8]
   14ca4:	mov	r0, r6
   14ca8:	mov	r1, r5
   14cac:	mov	r2, r4
   14cb0:	bl	14214 <table_set_char@@Base>
   14cb4:	b	14dac <table_cell_from_buffer@@Base+0x658>
   14cb8:	movw	r1, #20370	; 0x4f92
   14cbc:	add	r2, sp, #8
   14cc0:	mov	r0, r7
   14cc4:	movt	r1, #1
   14cc8:	bl	1204c <__isoc99_sscanf@plt>
   14ccc:	mov	r1, r0
   14cd0:	mvn	r0, #0
   14cd4:	cmp	r1, #1
   14cd8:	bne	14db0 <table_cell_from_buffer@@Base+0x65c>
   14cdc:	ldrb	r3, [sp, #8]
   14ce0:	mov	r0, r6
   14ce4:	mov	r1, r5
   14ce8:	mov	r2, r4
   14cec:	bl	1423c <table_set_uchar@@Base>
   14cf0:	b	14dac <table_cell_from_buffer@@Base+0x658>
   14cf4:	movw	r1, #20356	; 0x4f84
   14cf8:	add	r2, sp, #8
   14cfc:	mov	r0, r7
   14d00:	movt	r1, #1
   14d04:	bl	1204c <__isoc99_sscanf@plt>
   14d08:	mov	r1, r0
   14d0c:	mvn	r0, #0
   14d10:	cmp	r1, #1
   14d14:	bne	14db0 <table_cell_from_buffer@@Base+0x65c>
   14d18:	add	r3, sp, #8
   14d1c:	mov	r0, r6
   14d20:	mov	r1, r5
   14d24:	mov	r2, r4
   14d28:	bl	141f4 <table_set_string@@Base>
   14d2c:	b	14dac <table_cell_from_buffer@@Base+0x658>
   14d30:	movw	r1, #20324	; 0x4f64
   14d34:	add	r2, sp, #8
   14d38:	mov	r0, r7
   14d3c:	movt	r1, #1
   14d40:	bl	1204c <__isoc99_sscanf@plt>
   14d44:	mov	r1, r0
   14d48:	mvn	r0, #0
   14d4c:	cmp	r1, #1
   14d50:	bne	14db0 <table_cell_from_buffer@@Base+0x65c>
   14d54:	ldr	r3, [sp, #8]
   14d58:	mov	r0, r6
   14d5c:	mov	r1, r5
   14d60:	mov	r2, r4
   14d64:	cmp	r3, #0
   14d68:	movwne	r3, #1
   14d6c:	bl	13ea4 <table_set_bool@@Base>
   14d70:	b	14dac <table_cell_from_buffer@@Base+0x658>
   14d74:	movw	r1, #20373	; 0x4f95
   14d78:	add	r2, sp, #8
   14d7c:	mov	r0, r7
   14d80:	movt	r1, #1
   14d84:	bl	1204c <__isoc99_sscanf@plt>
   14d88:	mov	r1, r0
   14d8c:	mvn	r0, #0
   14d90:	cmp	r1, #1
   14d94:	bne	14db0 <table_cell_from_buffer@@Base+0x65c>
   14d98:	ldr	r3, [sp, #8]
   14d9c:	mov	r0, r6
   14da0:	mov	r1, r5
   14da4:	mov	r2, r4
   14da8:	bl	14264 <table_set_ptr@@Base>
   14dac:	mov	r0, #0
   14db0:	sub	sp, fp, #24
   14db4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014db8 <table_cell_nullify@@Base>:
   14db8:	push	{r4, r5, fp, lr}
   14dbc:	add	fp, sp, #8
   14dc0:	mov	r4, r2
   14dc4:	bl	13960 <table_get_row_ptr@@Base>
   14dc8:	ldr	r5, [r0]
   14dcc:	ldr	r0, [r5, r4, lsl #2]
   14dd0:	cmp	r0, #0
   14dd4:	beq	14de4 <table_cell_nullify@@Base+0x2c>
   14dd8:	bl	11fd4 <free@plt>
   14ddc:	mov	r0, #0
   14de0:	str	r0, [r5, r4, lsl #2]
   14de4:	mov	r0, #0
   14de8:	pop	{r4, r5, fp, pc}

00014dec <__libc_csu_init@@Base>:
   14dec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14df0:	mov	r7, r0
   14df4:	ldr	r6, [pc, #72]	; 14e44 <__libc_csu_init@@Base+0x58>
   14df8:	ldr	r5, [pc, #72]	; 14e48 <__libc_csu_init@@Base+0x5c>
   14dfc:	add	r6, pc, r6
   14e00:	add	r5, pc, r5
   14e04:	sub	r6, r6, r5
   14e08:	mov	r8, r1
   14e0c:	mov	r9, r2
   14e10:	bl	11f9c <strcmp@plt-0x20>
   14e14:	asrs	r6, r6, #2
   14e18:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14e1c:	mov	r4, #0
   14e20:	add	r4, r4, #1
   14e24:	ldr	r3, [r5], #4
   14e28:	mov	r2, r9
   14e2c:	mov	r1, r8
   14e30:	mov	r0, r7
   14e34:	blx	r3
   14e38:	cmp	r6, r4
   14e3c:	bne	14e20 <__libc_csu_init@@Base+0x34>
   14e40:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14e44:	andeq	r1, r1, r8, lsl #2
   14e48:	andeq	r1, r1, r0, lsl #2

00014e4c <__libc_csu_fini@@Base>:
   14e4c:	bx	lr

Disassembly of section .fini:

00014e50 <.fini>:
   14e50:	push	{r3, lr}
   14e54:	pop	{r3, pc}
