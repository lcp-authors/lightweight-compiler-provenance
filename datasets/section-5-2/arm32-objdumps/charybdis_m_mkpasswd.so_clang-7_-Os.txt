
../repos/charybdis/extensions/.libs/m_mkpasswd.so:     file format elf32-littlearm


Disassembly of section .init:

00000638 <_init>:
 638:	push	{r3, lr}
 63c:	bl	700 <call_weak_fn>
 640:	pop	{r3, pc}

Disassembly of section .plt:

00000644 <.plt>:
 644:	push	{lr}		; (str lr, [sp, #-4]!)
 648:	ldr	lr, [pc, #4]	; 654 <.plt+0x10>
 64c:	add	lr, pc, lr
 650:	ldr	pc, [lr, #8]!
 654:	.word	0x000109ac

00000658 <rb_current_time@plt>:
 658:	add	ip, pc, #0, 12
 65c:	add	ip, ip, #16, 20	; 0x10000
 660:	ldr	pc, [ip, #2476]!	; 0x9ac

00000664 <__cxa_finalize@plt>:
 664:	add	ip, pc, #0, 12
 668:	add	ip, ip, #16, 20	; 0x10000
 66c:	ldr	pc, [ip, #2468]!	; 0x9a4

00000670 <sendto_one@plt>:
 670:	add	ip, pc, #0, 12
 674:	add	ip, ip, #16, 20	; 0x10000
 678:	ldr	pc, [ip, #2460]!	; 0x99c

0000067c <read@plt>:
 67c:	add	ip, pc, #0, 12
 680:	add	ip, ip, #16, 20	; 0x10000
 684:	ldr	pc, [ip, #2452]!	; 0x994

00000688 <memcpy@plt>:
 688:	add	ip, pc, #0, 12
 68c:	add	ip, ip, #16, 20	; 0x10000
 690:	ldr	pc, [ip, #2444]!	; 0x98c

00000694 <time@plt>:
 694:	add	ip, pc, #0, 12
 698:	add	ip, ip, #16, 20	; 0x10000
 69c:	ldr	pc, [ip, #2436]!	; 0x984

000006a0 <rb_crypt@plt>:
 6a0:	add	ip, pc, #0, 12
 6a4:	add	ip, ip, #16, 20	; 0x10000
 6a8:	ldr	pc, [ip, #2428]!	; 0x97c

000006ac <__gmon_start__@plt>:
 6ac:	add	ip, pc, #0, 12
 6b0:	add	ip, ip, #16, 20	; 0x10000
 6b4:	ldr	pc, [ip, #2420]!	; 0x974

000006b8 <open@plt>:
 6b8:	add	ip, pc, #0, 12
 6bc:	add	ip, ip, #16, 20	; 0x10000
 6c0:	ldr	pc, [ip, #2412]!	; 0x96c

000006c4 <srand@plt>:
 6c4:	add	ip, pc, #0, 12
 6c8:	add	ip, ip, #16, 20	; 0x10000
 6cc:	ldr	pc, [ip, #2404]!	; 0x964

000006d0 <rand@plt>:
 6d0:	add	ip, pc, #0, 12
 6d4:	add	ip, ip, #16, 20	; 0x10000
 6d8:	ldr	pc, [ip, #2396]!	; 0x95c

000006dc <sendto_one_notice@plt>:
 6dc:	add	ip, pc, #0, 12
 6e0:	add	ip, ip, #16, 20	; 0x10000
 6e4:	ldr	pc, [ip, #2388]!	; 0x954

000006e8 <close@plt>:
 6e8:	add	ip, pc, #0, 12
 6ec:	add	ip, ip, #16, 20	; 0x10000
 6f0:	ldr	pc, [ip, #2380]!	; 0x94c

000006f4 <irccmp@plt>:
 6f4:	add	ip, pc, #0, 12
 6f8:	add	ip, ip, #16, 20	; 0x10000
 6fc:	ldr	pc, [ip, #2372]!	; 0x944

Disassembly of section .text:

00000700 <call_weak_fn>:
 700:	ldr	r3, [pc, #20]	; 71c <call_weak_fn+0x1c>
 704:	ldr	r2, [pc, #20]	; 720 <call_weak_fn+0x20>
 708:	add	r3, pc, r3
 70c:	ldr	r2, [r3, r2]
 710:	cmp	r2, #0
 714:	bxeq	lr
 718:	b	6ac <__gmon_start__@plt>
 71c:	.word	0x000108f0
 720:	.word	0x0000004c

00000724 <deregister_tm_clones>:
 724:	ldr	r0, [pc, #44]	; 758 <deregister_tm_clones+0x34>
 728:	ldr	r3, [pc, #44]	; 75c <deregister_tm_clones+0x38>
 72c:	add	r0, pc, r0
 730:	add	r3, pc, r3
 734:	cmp	r3, r0
 738:	ldr	r3, [pc, #32]	; 760 <deregister_tm_clones+0x3c>
 73c:	add	r3, pc, r3
 740:	bxeq	lr
 744:	ldr	r2, [pc, #24]	; 764 <deregister_tm_clones+0x40>
 748:	ldr	r3, [r3, r2]
 74c:	cmp	r3, #0
 750:	bxeq	lr
 754:	bx	r3
 758:	.word	0x000109a0
 75c:	.word	0x0001099c
 760:	.word	0x000108bc
 764:	.word	0x00000048

00000768 <register_tm_clones>:
 768:	ldr	r0, [pc, #56]	; 7a8 <register_tm_clones+0x40>
 76c:	ldr	r3, [pc, #56]	; 7ac <register_tm_clones+0x44>
 770:	add	r0, pc, r0
 774:	add	r3, pc, r3
 778:	sub	r1, r3, r0
 77c:	ldr	r3, [pc, #44]	; 7b0 <register_tm_clones+0x48>
 780:	asr	r1, r1, #2
 784:	add	r3, pc, r3
 788:	add	r1, r1, r1, lsr #31
 78c:	asrs	r1, r1, #1
 790:	bxeq	lr
 794:	ldr	r2, [pc, #24]	; 7b4 <register_tm_clones+0x4c>
 798:	ldr	r3, [r3, r2]
 79c:	cmp	r3, #0
 7a0:	bxeq	lr
 7a4:	bx	r3
 7a8:	.word	0x0001095c
 7ac:	.word	0x00010958
 7b0:	.word	0x00010874
 7b4:	.word	0x00000050

000007b8 <__do_global_dtors_aux>:
 7b8:	ldr	r3, [pc, #76]	; 80c <__do_global_dtors_aux+0x54>
 7bc:	ldr	r2, [pc, #76]	; 810 <__do_global_dtors_aux+0x58>
 7c0:	add	r3, pc, r3
 7c4:	add	r2, pc, r2
 7c8:	ldrb	r3, [r3]
 7cc:	cmp	r3, #0
 7d0:	bxne	lr
 7d4:	ldr	r3, [pc, #56]	; 814 <__do_global_dtors_aux+0x5c>
 7d8:	push	{r4, lr}
 7dc:	ldr	r3, [r2, r3]
 7e0:	cmp	r3, #0
 7e4:	beq	7f4 <__do_global_dtors_aux+0x3c>
 7e8:	ldr	r3, [pc, #40]	; 818 <__do_global_dtors_aux+0x60>
 7ec:	ldr	r0, [pc, r3]
 7f0:	bl	664 <__cxa_finalize@plt>
 7f4:	bl	724 <deregister_tm_clones>
 7f8:	ldr	r3, [pc, #28]	; 81c <__do_global_dtors_aux+0x64>
 7fc:	mov	r2, #1
 800:	add	r3, pc, r3
 804:	strb	r2, [r3]
 808:	pop	{r4, pc}
 80c:	.word	0x0001090c
 810:	.word	0x00010834
 814:	.word	0x00000044
 818:	.word	0x00010868
 81c:	.word	0x000108cc

00000820 <frame_dummy>:
 820:	b	768 <register_tm_clones>

00000824 <m_mkpasswd>:
 824:	push	{r4, r5, r6, r7, fp, lr}
 828:	add	fp, sp, #16
 82c:	sub	sp, sp, #16
 830:	ldr	r1, [pc, #484]	; a1c <m_mkpasswd+0x1f8>
 834:	add	r5, sp, #9
 838:	mov	r4, r2
 83c:	mov	r2, #7
 840:	mov	r6, r3
 844:	mov	r0, r5
 848:	add	r1, pc, r1
 84c:	bl	688 <memcpy@plt>
 850:	ldr	r7, [fp, #8]
 854:	ldr	r0, [r7, #4]
 858:	cmp	r0, #0
 85c:	ldrbne	r0, [r0]
 860:	cmpne	r0, #0
 864:	bne	890 <m_mkpasswd+0x6c>
 868:	ldr	r0, [pc, #432]	; a20 <m_mkpasswd+0x1fc>
 86c:	add	r3, r4, #88	; 0x58
 870:	add	r0, pc, r0
 874:	str	r0, [sp]
 878:	ldr	r0, [pc, #420]	; a24 <m_mkpasswd+0x200>
 87c:	ldr	r0, [pc, r0]
 880:	ldr	r1, [pc, #416]	; a28 <m_mkpasswd+0x204>
 884:	add	r2, r0, #88	; 0x58
 888:	add	r1, pc, r1
 88c:	b	8e0 <m_mkpasswd+0xbc>
 890:	cmp	r6, #3
 894:	ldrge	r5, [r7, #8]
 898:	ldr	r0, [pc, #396]	; a2c <m_mkpasswd+0x208>
 89c:	ldr	r0, [pc, r0]
 8a0:	ldr	r0, [r0, #184]	; 0xb8
 8a4:	ldr	r1, [pc, #388]	; a30 <m_mkpasswd+0x20c>
 8a8:	ldr	r1, [pc, r1]
 8ac:	add	r6, r0, r1
 8b0:	bl	658 <rb_current_time@plt>
 8b4:	cmp	r6, r0
 8b8:	ble	8f0 <m_mkpasswd+0xcc>
 8bc:	ldr	r0, [pc, #368]	; a34 <m_mkpasswd+0x210>
 8c0:	add	r3, r4, #88	; 0x58
 8c4:	add	r0, pc, r0
 8c8:	str	r0, [sp]
 8cc:	ldr	r0, [pc, #356]	; a38 <m_mkpasswd+0x214>
 8d0:	ldr	r0, [pc, r0]
 8d4:	ldr	r1, [pc, #352]	; a3c <m_mkpasswd+0x218>
 8d8:	add	r2, r0, #88	; 0x58
 8dc:	add	r1, pc, r1
 8e0:	mov	r0, r4
 8e4:	bl	670 <sendto_one@plt>
 8e8:	sub	sp, fp, #16
 8ec:	pop	{r4, r5, r6, r7, fp, pc}
 8f0:	bl	658 <rb_current_time@plt>
 8f4:	ldr	r1, [pc, #324]	; a40 <m_mkpasswd+0x21c>
 8f8:	add	r1, pc, r1
 8fc:	str	r0, [r1]
 900:	mov	r0, r5
 904:	ldr	r1, [pc, #312]	; a44 <m_mkpasswd+0x220>
 908:	add	r1, pc, r1
 90c:	bl	6f4 <irccmp@plt>
 910:	cmp	r0, #0
 914:	beq	95c <m_mkpasswd+0x138>
 918:	ldr	r1, [pc, #300]	; a4c <m_mkpasswd+0x228>
 91c:	mov	r0, r5
 920:	add	r1, pc, r1
 924:	bl	6f4 <irccmp@plt>
 928:	cmp	r0, #0
 92c:	beq	974 <m_mkpasswd+0x150>
 930:	ldr	r1, [pc, #284]	; a54 <m_mkpasswd+0x230>
 934:	mov	r0, r5
 938:	add	r1, pc, r1
 93c:	bl	6f4 <irccmp@plt>
 940:	cmp	r0, #0
 944:	beq	9a4 <m_mkpasswd+0x180>
 948:	ldr	r1, [pc, #276]	; a64 <m_mkpasswd+0x240>
 94c:	mov	r0, r4
 950:	add	r1, pc, r1
 954:	bl	6dc <sendto_one_notice@plt>
 958:	b	8e8 <m_mkpasswd+0xc4>
 95c:	ldr	r6, [pc, #228]	; a48 <m_mkpasswd+0x224>
 960:	mov	r0, #36	; 0x24
 964:	add	r6, pc, r6
 968:	strb	r0, [r6, #2]
 96c:	movw	r0, #13604	; 0x3524
 970:	b	988 <m_mkpasswd+0x164>
 974:	ldr	r6, [pc, #212]	; a50 <m_mkpasswd+0x22c>
 978:	mov	r0, #36	; 0x24
 97c:	add	r6, pc, r6
 980:	strb	r0, [r6, #2]
 984:	movw	r0, #13860	; 0x3624
 988:	strh	r0, [r6]
 98c:	add	r0, r6, #3
 990:	mov	r1, #16
 994:	bl	c38 <generate_random_salt>
 998:	add	r0, r6, #20
 99c:	add	r1, r6, #19
 9a0:	b	9d0 <m_mkpasswd+0x1ac>
 9a4:	ldr	r6, [pc, #172]	; a58 <m_mkpasswd+0x234>
 9a8:	mov	r0, #36	; 0x24
 9ac:	mov	r1, #8
 9b0:	add	r6, pc, r6
 9b4:	strb	r0, [r6, #2]
 9b8:	movw	r0, #12580	; 0x3124
 9bc:	strh	r0, [r6]
 9c0:	add	r0, r6, #3
 9c4:	bl	c38 <generate_random_salt>
 9c8:	add	r0, r6, #12
 9cc:	add	r1, r6, #11
 9d0:	mov	r2, #36	; 0x24
 9d4:	strb	r2, [r1]
 9d8:	mov	r1, #0
 9dc:	strb	r1, [r0]
 9e0:	mov	r1, r6
 9e4:	ldr	r0, [r7, #4]
 9e8:	bl	6a0 <rb_crypt@plt>
 9ec:	ldr	r1, [pc, #104]	; a5c <m_mkpasswd+0x238>
 9f0:	cmp	r0, #0
 9f4:	ldr	r3, [r7, #4]
 9f8:	mov	r2, r5
 9fc:	add	r1, pc, r1
 a00:	movne	r1, r0
 a04:	mov	r0, r4
 a08:	str	r1, [sp]
 a0c:	ldr	r1, [pc, #76]	; a60 <m_mkpasswd+0x23c>
 a10:	add	r1, pc, r1
 a14:	bl	6dc <sendto_one_notice@plt>
 a18:	b	8e8 <m_mkpasswd+0xc4>
 a1c:	.word	0x00000650
 a20:	.word	0x000004e1
 a24:	.word	0x000107d0
 a28:	.word	0x000004d2
 a2c:	.word	0x000107b4
 a30:	.word	0x00010828
 a34:	.word	0x0000048d
 a38:	.word	0x0001077c
 a3c:	.word	0x000004a3
 a40:	.word	0x000107d8
 a44:	.word	0x000004e2
 a48:	.word	0x00010770
 a4c:	.word	0x00000578
 a50:	.word	0x0001076d
 a54:	.word	0x000004b9
 a58:	.word	0x0001074e
 a5c:	.word	0x0000044a
 a60:	.word	0x00000420
 a64:	.word	0x000004a5

00000a68 <mo_mkpasswd>:
 a68:	push	{r4, r5, r6, r7, fp, lr}
 a6c:	add	fp, sp, #16
 a70:	sub	sp, sp, #16
 a74:	ldr	r1, [pc, #392]	; c04 <mo_mkpasswd+0x19c>
 a78:	add	r5, sp, #9
 a7c:	mov	r4, r2
 a80:	mov	r2, #7
 a84:	mov	r6, r3
 a88:	mov	r0, r5
 a8c:	add	r1, pc, r1
 a90:	bl	688 <memcpy@plt>
 a94:	ldr	r7, [fp, #8]
 a98:	ldr	r0, [r7, #4]
 a9c:	cmp	r0, #0
 aa0:	ldrbne	r0, [r0]
 aa4:	cmpne	r0, #0
 aa8:	bne	adc <mo_mkpasswd+0x74>
 aac:	ldr	r0, [pc, #340]	; c08 <mo_mkpasswd+0x1a0>
 ab0:	add	r3, r4, #88	; 0x58
 ab4:	add	r0, pc, r0
 ab8:	str	r0, [sp]
 abc:	ldr	r0, [pc, #328]	; c0c <mo_mkpasswd+0x1a4>
 ac0:	ldr	r0, [pc, r0]
 ac4:	ldr	r1, [pc, #324]	; c10 <mo_mkpasswd+0x1a8>
 ac8:	add	r2, r0, #88	; 0x58
 acc:	add	r1, pc, r1
 ad0:	mov	r0, r4
 ad4:	bl	670 <sendto_one@plt>
 ad8:	b	bfc <mo_mkpasswd+0x194>
 adc:	cmp	r6, #3
 ae0:	ldrge	r5, [r7, #8]
 ae4:	ldr	r1, [pc, #296]	; c14 <mo_mkpasswd+0x1ac>
 ae8:	add	r1, pc, r1
 aec:	mov	r0, r5
 af0:	bl	6f4 <irccmp@plt>
 af4:	cmp	r0, #0
 af8:	beq	b40 <mo_mkpasswd+0xd8>
 afc:	ldr	r1, [pc, #280]	; c1c <mo_mkpasswd+0x1b4>
 b00:	mov	r0, r5
 b04:	add	r1, pc, r1
 b08:	bl	6f4 <irccmp@plt>
 b0c:	cmp	r0, #0
 b10:	beq	b58 <mo_mkpasswd+0xf0>
 b14:	ldr	r1, [pc, #264]	; c24 <mo_mkpasswd+0x1bc>
 b18:	mov	r0, r5
 b1c:	add	r1, pc, r1
 b20:	bl	6f4 <irccmp@plt>
 b24:	cmp	r0, #0
 b28:	beq	b88 <mo_mkpasswd+0x120>
 b2c:	ldr	r1, [pc, #256]	; c34 <mo_mkpasswd+0x1cc>
 b30:	mov	r0, r4
 b34:	add	r1, pc, r1
 b38:	bl	6dc <sendto_one_notice@plt>
 b3c:	b	bfc <mo_mkpasswd+0x194>
 b40:	ldr	r6, [pc, #208]	; c18 <mo_mkpasswd+0x1b0>
 b44:	mov	r0, #36	; 0x24
 b48:	add	r6, pc, r6
 b4c:	strb	r0, [r6, #2]
 b50:	movw	r0, #13604	; 0x3524
 b54:	b	b6c <mo_mkpasswd+0x104>
 b58:	ldr	r6, [pc, #192]	; c20 <mo_mkpasswd+0x1b8>
 b5c:	mov	r0, #36	; 0x24
 b60:	add	r6, pc, r6
 b64:	strb	r0, [r6, #2]
 b68:	movw	r0, #13860	; 0x3624
 b6c:	strh	r0, [r6]
 b70:	add	r0, r6, #3
 b74:	mov	r1, #16
 b78:	bl	c38 <generate_random_salt>
 b7c:	add	r0, r6, #20
 b80:	add	r1, r6, #19
 b84:	b	bb4 <mo_mkpasswd+0x14c>
 b88:	ldr	r6, [pc, #152]	; c28 <mo_mkpasswd+0x1c0>
 b8c:	mov	r0, #36	; 0x24
 b90:	mov	r1, #8
 b94:	add	r6, pc, r6
 b98:	strb	r0, [r6, #2]
 b9c:	movw	r0, #12580	; 0x3124
 ba0:	strh	r0, [r6]
 ba4:	add	r0, r6, #3
 ba8:	bl	c38 <generate_random_salt>
 bac:	add	r0, r6, #12
 bb0:	add	r1, r6, #11
 bb4:	mov	r2, #36	; 0x24
 bb8:	strb	r2, [r1]
 bbc:	mov	r1, #0
 bc0:	strb	r1, [r0]
 bc4:	mov	r1, r6
 bc8:	ldr	r0, [r7, #4]
 bcc:	bl	6a0 <rb_crypt@plt>
 bd0:	ldr	r1, [pc, #84]	; c2c <mo_mkpasswd+0x1c4>
 bd4:	cmp	r0, #0
 bd8:	ldr	r3, [r7, #4]
 bdc:	mov	r2, r5
 be0:	add	r1, pc, r1
 be4:	movne	r1, r0
 be8:	mov	r0, r4
 bec:	str	r1, [sp]
 bf0:	ldr	r1, [pc, #56]	; c30 <mo_mkpasswd+0x1c8>
 bf4:	add	r1, pc, r1
 bf8:	bl	6dc <sendto_one_notice@plt>
 bfc:	sub	sp, fp, #16
 c00:	pop	{r4, r5, r6, r7, fp, pc}
 c04:	.word	0x0000040c
 c08:	.word	0x0000029d
 c0c:	.word	0x0001058c
 c10:	.word	0x0000028e
 c14:	.word	0x00000302
 c18:	.word	0x0001058c
 c1c:	.word	0x00000394
 c20:	.word	0x00010589
 c24:	.word	0x000002d5
 c28:	.word	0x0001056a
 c2c:	.word	0x00000266
 c30:	.word	0x0000023c
 c34:	.word	0x000002c1

00000c38 <generate_random_salt>:
 c38:	push	{r4, r5, r6, sl, fp, lr}
 c3c:	add	fp, sp, #16
 c40:	mov	r5, r0
 c44:	ldr	r0, [pc, #120]	; cc4 <generate_random_salt+0x8c>
 c48:	mov	r4, r1
 c4c:	mov	r1, #0
 c50:	add	r0, pc, r0
 c54:	bl	6b8 <open@plt>
 c58:	cmn	r0, #1
 c5c:	ble	cb4 <generate_random_salt+0x7c>
 c60:	mov	r1, r5
 c64:	mov	r2, r4
 c68:	mov	r6, r0
 c6c:	bl	67c <read@plt>
 c70:	cmp	r0, r4
 c74:	bne	cac <generate_random_salt+0x74>
 c78:	cmp	r4, #1
 c7c:	blt	ca0 <generate_random_salt+0x68>
 c80:	ldr	r0, [pc, #64]	; cc8 <generate_random_salt+0x90>
 c84:	add	r0, pc, r0
 c88:	ldrb	r1, [r5]
 c8c:	subs	r4, r4, #1
 c90:	and	r1, r1, #63	; 0x3f
 c94:	ldrb	r1, [r0, r1]
 c98:	strb	r1, [r5], #1
 c9c:	bne	c88 <generate_random_salt+0x50>
 ca0:	mov	r0, r6
 ca4:	pop	{r4, r5, r6, sl, fp, lr}
 ca8:	b	6e8 <close@plt>
 cac:	mov	r0, r6
 cb0:	bl	6e8 <close@plt>
 cb4:	mov	r0, r5
 cb8:	mov	r1, r4
 cbc:	pop	{r4, r5, r6, sl, fp, lr}
 cc0:	b	ccc <generate_poor_salt>
 cc4:	.word	0x000001fa
 cc8:	.word	0x000001d3

00000ccc <generate_poor_salt>:
 ccc:	push	{r4, r5, r6, r7, fp, lr}
 cd0:	add	fp, sp, #16
 cd4:	mov	r4, r0
 cd8:	mov	r0, #0
 cdc:	mov	r5, r1
 ce0:	bl	694 <time@plt>
 ce4:	bl	6c4 <srand@plt>
 ce8:	cmp	r5, #1
 cec:	blt	d20 <generate_poor_salt+0x54>
 cf0:	ldr	r6, [pc, #48]	; d28 <generate_poor_salt+0x5c>
 cf4:	mov	r7, r4
 cf8:	add	r6, pc, r6
 cfc:	bl	6d0 <rand@plt>
 d00:	asr	r1, r0, #31
 d04:	subs	r5, r5, #1
 d08:	add	r1, r0, r1, lsr #26
 d0c:	bic	r1, r1, #63	; 0x3f
 d10:	sub	r0, r0, r1
 d14:	ldrb	r0, [r6, r0]
 d18:	strb	r0, [r7], #1
 d1c:	bne	cfc <generate_poor_salt+0x30>
 d20:	mov	r0, r4
 d24:	pop	{r4, r5, r6, r7, fp, pc}
 d28:	.word	0x0000015f

Disassembly of section .fini:

00000d2c <_fini>:
 d2c:	push	{r3, lr}
 d30:	pop	{r3, pc}
