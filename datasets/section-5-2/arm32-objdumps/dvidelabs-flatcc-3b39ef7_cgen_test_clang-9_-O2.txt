
../repos/dvidelabs-flatcc-3b39ef7/test/cgen_test/cgen_test:     file format elf32-littlearm


Disassembly of section .init:

000147ac <.init>:
   147ac:	push	{r3, lr}
   147b0:	bl	149cc <_start@@Base+0x3c>
   147b4:	pop	{r3, pc}

Disassembly of section .plt:

000147b8 <calloc@plt-0x14>:
   147b8:	push	{lr}		; (str lr, [sp, #-4]!)
   147bc:	ldr	lr, [pc, #4]	; 147c8 <calloc@plt-0x4>
   147c0:	add	lr, pc, lr
   147c4:	ldr	pc, [lr, #8]!
   147c8:	andeq	r6, r5, r8, lsr r8

000147cc <calloc@plt>:
   147cc:	add	ip, pc, #0, 12
   147d0:	add	ip, ip, #352256	; 0x56000
   147d4:	ldr	pc, [ip, #2104]!	; 0x838

000147d8 <raise@plt>:
   147d8:	add	ip, pc, #0, 12
   147dc:	add	ip, ip, #352256	; 0x56000
   147e0:	ldr	pc, [ip, #2096]!	; 0x830

000147e4 <strcmp@plt>:
   147e4:	add	ip, pc, #0, 12
   147e8:	add	ip, ip, #352256	; 0x56000
   147ec:	ldr	pc, [ip, #2088]!	; 0x828

000147f0 <fopen@plt>:
   147f0:	add	ip, pc, #0, 12
   147f4:	add	ip, ip, #352256	; 0x56000
   147f8:	ldr	pc, [ip, #2080]!	; 0x820

000147fc <free@plt>:
   147fc:	add	ip, pc, #0, 12
   14800:	add	ip, ip, #352256	; 0x56000
   14804:	ldr	pc, [ip, #2072]!	; 0x818

00014808 <memcpy@plt>:
   14808:	add	ip, pc, #0, 12
   1480c:	add	ip, ip, #352256	; 0x56000
   14810:	ldr	pc, [ip, #2064]!	; 0x810

00014814 <ftell@plt>:
   14814:	add	ip, pc, #0, 12
   14818:	add	ip, ip, #352256	; 0x56000
   1481c:	ldr	pc, [ip, #2056]!	; 0x808

00014820 <memcmp@plt>:
   14820:	add	ip, pc, #0, 12
   14824:	add	ip, ip, #352256	; 0x56000
   14828:	ldr	pc, [ip, #2048]!	; 0x800

0001482c <fputc_unlocked@plt>:
   1482c:	add	ip, pc, #0, 12
   14830:	add	ip, ip, #352256	; 0x56000
   14834:	ldr	pc, [ip, #2040]!	; 0x7f8

00014838 <rewind@plt>:
   14838:	add	ip, pc, #0, 12
   1483c:	add	ip, ip, #352256	; 0x56000
   14840:	ldr	pc, [ip, #2032]!	; 0x7f0

00014844 <realloc@plt>:
   14844:	add	ip, pc, #0, 12
   14848:	add	ip, ip, #352256	; 0x56000
   1484c:	ldr	pc, [ip, #2024]!	; 0x7e8

00014850 <fwrite@plt>:
   14850:	add	ip, pc, #0, 12
   14854:	add	ip, ip, #352256	; 0x56000
   14858:	ldr	pc, [ip, #2016]!	; 0x7e0

0001485c <puts@plt>:
   1485c:	add	ip, pc, #0, 12
   14860:	add	ip, ip, #352256	; 0x56000
   14864:	ldr	pc, [ip, #2008]!	; 0x7d8

00014868 <malloc@plt>:
   14868:	add	ip, pc, #0, 12
   1486c:	add	ip, ip, #352256	; 0x56000
   14870:	ldr	pc, [ip, #2000]!	; 0x7d0

00014874 <__libc_start_main@plt>:
   14874:	add	ip, pc, #0, 12
   14878:	add	ip, ip, #352256	; 0x56000
   1487c:	ldr	pc, [ip, #1992]!	; 0x7c8

00014880 <__ctype_toupper_loc@plt>:
   14880:	add	ip, pc, #0, 12
   14884:	add	ip, ip, #352256	; 0x56000
   14888:	ldr	pc, [ip, #1984]!	; 0x7c0

0001488c <__gmon_start__@plt>:
   1488c:	add	ip, pc, #0, 12
   14890:	add	ip, ip, #352256	; 0x56000
   14894:	ldr	pc, [ip, #1976]!	; 0x7b8

00014898 <exit@plt>:
   14898:	add	ip, pc, #0, 12
   1489c:	add	ip, ip, #352256	; 0x56000
   148a0:	ldr	pc, [ip, #1968]!	; 0x7b0

000148a4 <bcmp@plt>:
   148a4:	add	ip, pc, #0, 12
   148a8:	add	ip, ip, #352256	; 0x56000
   148ac:	ldr	pc, [ip, #1960]!	; 0x7a8

000148b0 <strlen@plt>:
   148b0:	add	ip, pc, #0, 12
   148b4:	add	ip, ip, #352256	; 0x56000
   148b8:	ldr	pc, [ip, #1952]!	; 0x7a0

000148bc <fprintf@plt>:
   148bc:	add	ip, pc, #0, 12
   148c0:	add	ip, ip, #352256	; 0x56000
   148c4:	ldr	pc, [ip, #1944]!	; 0x798

000148c8 <posix_memalign@plt>:
   148c8:	add	ip, pc, #0, 12
   148cc:	add	ip, ip, #352256	; 0x56000
   148d0:	ldr	pc, [ip, #1936]!	; 0x790

000148d4 <memset@plt>:
   148d4:	add	ip, pc, #0, 12
   148d8:	add	ip, ip, #352256	; 0x56000
   148dc:	ldr	pc, [ip, #1928]!	; 0x788

000148e0 <strncpy@plt>:
   148e0:	add	ip, pc, #0, 12
   148e4:	add	ip, ip, #352256	; 0x56000
   148e8:	ldr	pc, [ip, #1920]!	; 0x780

000148ec <strtod@plt>:
   148ec:	add	ip, pc, #0, 12
   148f0:	add	ip, ip, #352256	; 0x56000
   148f4:	ldr	pc, [ip, #1912]!	; 0x778

000148f8 <memchr@plt>:
   148f8:	add	ip, pc, #0, 12
   148fc:	add	ip, ip, #352256	; 0x56000
   14900:	ldr	pc, [ip, #1904]!	; 0x770

00014904 <fclose@plt>:
   14904:	add	ip, pc, #0, 12
   14908:	add	ip, ip, #352256	; 0x56000
   1490c:	ldr	pc, [ip, #1896]!	; 0x768

00014910 <vfprintf@plt>:
   14910:	add	ip, pc, #0, 12
   14914:	add	ip, ip, #352256	; 0x56000
   14918:	ldr	pc, [ip, #1888]!	; 0x760

0001491c <fputc@plt>:
   1491c:	add	ip, pc, #0, 12
   14920:	add	ip, ip, #352256	; 0x56000
   14924:	ldr	pc, [ip, #1880]!	; 0x758

00014928 <sprintf@plt>:
   14928:	add	ip, pc, #0, 12
   1492c:	add	ip, ip, #352256	; 0x56000
   14930:	ldr	pc, [ip, #1872]!	; 0x750

00014934 <vsnprintf@plt>:
   14934:	add	ip, pc, #0, 12
   14938:	add	ip, ip, #352256	; 0x56000
   1493c:	ldr	pc, [ip, #1864]!	; 0x748

00014940 <qsort@plt>:
   14940:	add	ip, pc, #0, 12
   14944:	add	ip, ip, #352256	; 0x56000
   14948:	ldr	pc, [ip, #1856]!	; 0x740

0001494c <fread_unlocked@plt>:
   1494c:	add	ip, pc, #0, 12
   14950:	add	ip, ip, #352256	; 0x56000
   14954:	ldr	pc, [ip, #1848]!	; 0x738

00014958 <fseek@plt>:
   14958:	add	ip, pc, #0, 12
   1495c:	add	ip, ip, #352256	; 0x56000
   14960:	ldr	pc, [ip, #1840]!	; 0x730

00014964 <strncmp@plt>:
   14964:	add	ip, pc, #0, 12
   14968:	add	ip, ip, #352256	; 0x56000
   1496c:	ldr	pc, [ip, #1832]!	; 0x728

00014970 <abort@plt>:
   14970:	add	ip, pc, #0, 12
   14974:	add	ip, ip, #352256	; 0x56000
   14978:	ldr	pc, [ip, #1824]!	; 0x720

0001497c <__assert_fail@plt>:
   1497c:	add	ip, pc, #0, 12
   14980:	add	ip, ip, #352256	; 0x56000
   14984:	ldr	pc, [ip, #1816]!	; 0x718

Disassembly of section .text:

00014990 <_start@@Base>:
   14990:	mov	fp, #0
   14994:	mov	lr, #0
   14998:	pop	{r1}		; (ldr r1, [sp], #4)
   1499c:	mov	r2, sp
   149a0:	push	{r2}		; (str r2, [sp, #-4]!)
   149a4:	push	{r0}		; (str r0, [sp, #-4]!)
   149a8:	ldr	ip, [pc, #16]	; 149c0 <_start@@Base+0x30>
   149ac:	push	{ip}		; (str ip, [sp, #-4]!)
   149b0:	ldr	r0, [pc, #12]	; 149c4 <_start@@Base+0x34>
   149b4:	ldr	r3, [pc, #12]	; 149c8 <_start@@Base+0x38>
   149b8:	bl	14874 <__libc_start_main@plt>
   149bc:	bl	14970 <abort@plt>
   149c0:	ldrdeq	lr, [r3], -r8
   149c4:	andeq	r4, r1, r0, lsl #21
   149c8:	andeq	lr, r3, r8, ror r1
   149cc:	ldr	r3, [pc, #20]	; 149e8 <_start@@Base+0x58>
   149d0:	ldr	r2, [pc, #20]	; 149ec <_start@@Base+0x5c>
   149d4:	add	r3, pc, r3
   149d8:	ldr	r2, [r3, r2]
   149dc:	cmp	r2, #0
   149e0:	bxeq	lr
   149e4:	b	1488c <__gmon_start__@plt>
   149e8:	andeq	r6, r5, r4, lsr #12
   149ec:	andeq	r0, r0, r8, lsr #1
   149f0:	ldr	r0, [pc, #24]	; 14a10 <_start@@Base+0x80>
   149f4:	ldr	r3, [pc, #24]	; 14a14 <_start@@Base+0x84>
   149f8:	cmp	r3, r0
   149fc:	bxeq	lr
   14a00:	ldr	r3, [pc, #16]	; 14a18 <_start@@Base+0x88>
   14a04:	cmp	r3, #0
   14a08:	bxeq	lr
   14a0c:	bx	r3
   14a10:	andeq	fp, r6, r4, asr #1
   14a14:	andeq	fp, r6, r4, asr #1
   14a18:	andeq	r0, r0, r0
   14a1c:	ldr	r0, [pc, #36]	; 14a48 <_start@@Base+0xb8>
   14a20:	ldr	r1, [pc, #36]	; 14a4c <_start@@Base+0xbc>
   14a24:	sub	r1, r1, r0
   14a28:	asr	r1, r1, #2
   14a2c:	add	r1, r1, r1, lsr #31
   14a30:	asrs	r1, r1, #1
   14a34:	bxeq	lr
   14a38:	ldr	r3, [pc, #16]	; 14a50 <_start@@Base+0xc0>
   14a3c:	cmp	r3, #0
   14a40:	bxeq	lr
   14a44:	bx	r3
   14a48:	andeq	fp, r6, r4, asr #1
   14a4c:	andeq	fp, r6, r4, asr #1
   14a50:	andeq	r0, r0, r0
   14a54:	push	{r4, lr}
   14a58:	ldr	r4, [pc, #24]	; 14a78 <_start@@Base+0xe8>
   14a5c:	ldrb	r3, [r4]
   14a60:	cmp	r3, #0
   14a64:	popne	{r4, pc}
   14a68:	bl	149f0 <_start@@Base+0x60>
   14a6c:	mov	r3, #1
   14a70:	strb	r3, [r4]
   14a74:	pop	{r4, pc}
   14a78:	andeq	fp, r6, r8, asr #1
   14a7c:	b	14a1c <_start@@Base+0x8c>

00014a80 <main@@Base>:
   14a80:	push	{r4, r5, r6, sl, fp, lr}
   14a84:	add	fp, sp, #16
   14a88:	sub	sp, sp, #888	; 0x378
   14a8c:	sub	sp, sp, #3072	; 0xc00
   14a90:	ldr	r1, [pc, #308]	; 14bcc <main@@Base+0x14c>
   14a94:	add	r0, sp, #224	; 0xe0
   14a98:	movw	r2, #3735	; 0xe97
   14a9c:	add	r1, pc, r1
   14aa0:	bl	14808 <memcpy@plt>
   14aa4:	mov	r4, sp
   14aa8:	mov	r0, r4
   14aac:	bl	14c00 <flatcc_init_options@@Base>
   14ab0:	vmov.i32	q8, #1	; 0x00000001
   14ab4:	add	r0, r4, #144	; 0x90
   14ab8:	mov	r2, #0
   14abc:	mov	r3, #0
   14ac0:	vst1.64	{d16-d17}, [r0]
   14ac4:	mov	r0, #1
   14ac8:	str	r0, [sp, #108]	; 0x6c
   14acc:	mov	r0, r4
   14ad0:	ldr	r1, [pc, #248]	; 14bd0 <main@@Base+0x150>
   14ad4:	add	r1, pc, r1
   14ad8:	bl	14d0c <flatcc_create_context@@Base>
   14adc:	cmp	r0, #0
   14ae0:	bne	14b0c <main@@Base+0x8c>
   14ae4:	ldr	r0, [pc, #232]	; 14bd4 <main@@Base+0x154>
   14ae8:	mov	r1, #41	; 0x29
   14aec:	mov	r2, #1
   14af0:	ldr	r0, [pc, r0]
   14af4:	ldr	r3, [r0]
   14af8:	ldr	r0, [pc, #216]	; 14bd8 <main@@Base+0x158>
   14afc:	add	r0, pc, r0
   14b00:	bl	14850 <fwrite@plt>
   14b04:	mvn	r5, #0
   14b08:	b	14bac <main@@Base+0x12c>
   14b0c:	add	r1, sp, #224	; 0xe0
   14b10:	movw	r2, #3735	; 0xe97
   14b14:	mov	r4, r0
   14b18:	bl	14d84 <flatcc_parse_buffer@@Base>
   14b1c:	ldr	r6, [pc, #184]	; 14bdc <main@@Base+0x15c>
   14b20:	mov	r5, r0
   14b24:	cmp	r0, #0
   14b28:	ldr	r6, [pc, r6]
   14b2c:	ldr	r3, [r6]
   14b30:	bne	14b90 <main@@Base+0x110>
   14b34:	ldr	r0, [pc, #168]	; 14be4 <main@@Base+0x164>
   14b38:	mov	r1, #17
   14b3c:	mov	r2, #1
   14b40:	add	r0, pc, r0
   14b44:	bl	14850 <fwrite@plt>
   14b48:	ldr	r3, [r6]
   14b4c:	ldr	r0, [pc, #148]	; 14be8 <main@@Base+0x168>
   14b50:	mov	r1, #31
   14b54:	mov	r2, #1
   14b58:	add	r0, pc, r0
   14b5c:	bl	14850 <fwrite@plt>
   14b60:	mov	r0, r4
   14b64:	bl	154b4 <flatcc_generate_files@@Base>
   14b68:	cmp	r0, #0
   14b6c:	bne	14bb8 <main@@Base+0x138>
   14b70:	ldr	r0, [pc, #120]	; 14bf0 <main@@Base+0x170>
   14b74:	add	r2, sp, #224	; 0xe0
   14b78:	ldr	r0, [pc, r0]
   14b7c:	ldr	r0, [r0]
   14b80:	ldr	r1, [pc, #108]	; 14bf4 <main@@Base+0x174>
   14b84:	add	r1, pc, r1
   14b88:	bl	148bc <fprintf@plt>
   14b8c:	b	14ba4 <main@@Base+0x124>
   14b90:	ldr	r0, [pc, #72]	; 14be0 <main@@Base+0x160>
   14b94:	mov	r1, #20
   14b98:	add	r0, pc, r0
   14b9c:	mov	r2, #1
   14ba0:	bl	14850 <fwrite@plt>
   14ba4:	mov	r0, r4
   14ba8:	bl	155ec <flatcc_destroy_context@@Base>
   14bac:	mov	r0, r5
   14bb0:	sub	sp, fp, #16
   14bb4:	pop	{r4, r5, r6, sl, fp, pc}
   14bb8:	ldr	r3, [r6]
   14bbc:	ldr	r0, [pc, #40]	; 14bec <main@@Base+0x16c>
   14bc0:	mov	r1, #32
   14bc4:	add	r0, pc, r0
   14bc8:	b	14b9c <main@@Base+0x11c>
   14bcc:	andeq	r9, r2, ip, lsr r8
   14bd0:	andeq	r9, r2, r0, lsl r7
   14bd4:	andeq	r6, r5, ip, lsr #11
   14bd8:	strdeq	r9, [r2], -r5
   14bdc:	andeq	r6, r5, r4, ror r5
   14be0:	andeq	r9, r2, r3, lsl #13
   14be4:	strdeq	r9, [r2], -r0
   14be8:	andeq	r9, r2, sl, ror #13
   14bec:	muleq	r2, lr, r6
   14bf0:	andeq	r6, r5, r0, lsr r5
   14bf4:	strdeq	r9, [r2], -pc	; <UNPREDICTABLE>
	...

00014c00 <flatcc_init_options@@Base>:
   14c00:	push	{r4, r5, fp, lr}
   14c04:	add	fp, sp, #8
   14c08:	mov	r1, #0
   14c0c:	mov	r2, #224	; 0xe0
   14c10:	mov	r4, r0
   14c14:	mov	r5, #0
   14c18:	bl	148d4 <memset@plt>
   14c1c:	add	r0, pc, #188	; 0xbc
   14c20:	add	r1, pc, #200	; 0xc8
   14c24:	str	r5, [r4, #164]	; 0xa4
   14c28:	str	r5, [r4, #132]	; 0x84
   14c2c:	vmov.i32	q9, #1	; 0x00000001
   14c30:	movw	ip, #65534	; 0xfffe
   14c34:	vmov.i32	q8, #0	; 0x00000000
   14c38:	vld1.64	{d20-d21}, [r1 :128]
   14c3c:	mov	r1, #1
   14c40:	vld1.64	{d22-d23}, [r0 :128]
   14c44:	str	r1, [r4, #136]	; 0x88
   14c48:	str	r1, [r4, #140]	; 0x8c
   14c4c:	ldr	r2, [pc, #172]	; 14d00 <flatcc_init_options@@Base+0x100>
   14c50:	ldr	r3, [pc, #172]	; 14d04 <flatcc_init_options@@Base+0x104>
   14c54:	ldr	r0, [pc, #172]	; 14d08 <flatcc_init_options@@Base+0x108>
   14c58:	str	r1, [r4, #84]	; 0x54
   14c5c:	str	ip, [r4, #88]	; 0x58
   14c60:	str	r5, [r4, #92]	; 0x5c
   14c64:	add	r0, pc, r0
   14c68:	add	r2, pc, r2
   14c6c:	add	r3, pc, r3
   14c70:	str	r0, [r4, #96]	; 0x60
   14c74:	str	r3, [r4, #100]	; 0x64
   14c78:	str	r2, [r4, #104]	; 0x68
   14c7c:	mov	r0, #4
   14c80:	add	r2, r4, #32
   14c84:	mov	r3, #65536	; 0x10000
   14c88:	str	r0, [r4, #64]	; 0x40
   14c8c:	vst1.64	{d18-d19}, [r2]
   14c90:	add	r2, r4, #16
   14c94:	vst1.64	{d18-d19}, [r2]
   14c98:	mov	r2, #100	; 0x64
   14c9c:	str	r3, [r4]
   14ca0:	str	r2, [r4, #4]
   14ca4:	str	r2, [r4, #8]
   14ca8:	str	r0, [r4, #176]	; 0xb0
   14cac:	add	r0, r4, #144	; 0x90
   14cb0:	str	r5, [r4, #180]	; 0xb4
   14cb4:	str	r1, [r4, #184]	; 0xb8
   14cb8:	str	r5, [r4, #188]	; 0xbc
   14cbc:	vst1.64	{d16-d17}, [r0]
   14cc0:	add	r0, r4, #68	; 0x44
   14cc4:	vst1.32	{d20-d21}, [r0]
   14cc8:	add	r0, r4, #48	; 0x30
   14ccc:	vst1.64	{d22-d23}, [r0]
   14cd0:	pop	{r4, r5, fp, pc}
   14cd4:	nop	{0}
   14cd8:	nop	{0}
   14cdc:	nop	{0}
   14ce0:	andeq	r0, r0, r1
   14ce4:	andeq	r0, r0, r1
	...
   14cf0:	andeq	r0, r0, r2
   14cf4:	andeq	r0, r0, r1
   14cf8:	andeq	r0, r0, r1
   14cfc:	andeq	r0, r0, r0
   14d00:	andeq	sl, r2, lr, lsl #10
   14d04:	andeq	sl, r2, r4, lsl #10
   14d08:	andeq	r9, r2, r8, lsl #11

00014d0c <flatcc_create_context@@Base>:
   14d0c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14d10:	add	fp, sp, #24
   14d14:	sub	sp, sp, #8
   14d18:	mov	r6, r0
   14d1c:	mov	r0, #560	; 0x230
   14d20:	mov	r7, r3
   14d24:	mov	r8, r2
   14d28:	mov	r9, r1
   14d2c:	bl	14868 <malloc@plt>
   14d30:	cmp	r0, #0
   14d34:	beq	14d6c <flatcc_create_context@@Base+0x60>
   14d38:	mov	r4, #0
   14d3c:	mov	r1, r6
   14d40:	mov	r2, r9
   14d44:	mov	r3, r8
   14d48:	mov	r5, r0
   14d4c:	str	r7, [sp]
   14d50:	str	r4, [sp, #4]
   14d54:	bl	2a240 <__flatcc_fb_init_parser@@Base>
   14d58:	cmp	r0, #0
   14d5c:	beq	14d74 <flatcc_create_context@@Base+0x68>
   14d60:	mov	r0, r5
   14d64:	bl	147fc <free@plt>
   14d68:	b	14d78 <flatcc_create_context@@Base+0x6c>
   14d6c:	mov	r4, #0
   14d70:	b	14d78 <flatcc_create_context@@Base+0x6c>
   14d74:	mov	r4, r5
   14d78:	mov	r0, r4
   14d7c:	sub	sp, fp, #24
   14d80:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014d84 <flatcc_parse_buffer@@Base>:
   14d84:	push	{r4, r5, r6, sl, fp, lr}
   14d88:	add	fp, sp, #16
   14d8c:	mov	r4, r0
   14d90:	mov	r0, #1
   14d94:	mov	r5, r2
   14d98:	mov	r6, r1
   14d9c:	str	r0, [r4, #140]	; 0x8c
   14da0:	ldr	r0, [r4, #128]	; 0x80
   14da4:	cmp	r0, r2
   14da8:	bcs	14dcc <flatcc_parse_buffer@@Base+0x48>
   14dac:	cmp	r0, #0
   14db0:	beq	14dcc <flatcc_parse_buffer@@Base+0x48>
   14db4:	ldr	r1, [pc, #88]	; 14e14 <flatcc_parse_buffer@@Base+0x90>
   14db8:	mov	r0, r4
   14dbc:	add	r1, pc, r1
   14dc0:	bl	29e1c <__flatcc_fb_print_error@@Base>
   14dc4:	mvn	r0, #0
   14dc8:	pop	{r4, r5, r6, sl, fp, pc}
   14dcc:	add	r0, r4, #524	; 0x20c
   14dd0:	add	r1, r4, #352	; 0x160
   14dd4:	mov	r2, #1
   14dd8:	bl	27658 <ptr_set_insert_item@@Base>
   14ddc:	mov	r0, r4
   14de0:	mov	r1, r6
   14de4:	mov	r2, r5
   14de8:	mov	r3, #0
   14dec:	bl	2a530 <__flatcc_fb_parse@@Base>
   14df0:	mov	r1, r0
   14df4:	mvn	r0, #0
   14df8:	cmp	r1, #0
   14dfc:	popne	{r4, r5, r6, sl, fp, pc}
   14e00:	mov	r0, r4
   14e04:	bl	330d4 <__flatcc_fb_build_schema@@Base>
   14e08:	cmp	r0, #0
   14e0c:	mvnne	r0, #0
   14e10:	pop	{r4, r5, r6, sl, fp, pc}
   14e14:			; <UNDEFINED> instruction: 0x0002a3bf

00014e18 <flatcc_parse_file@@Base>:
   14e18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14e1c:	add	fp, sp, #28
   14e20:	sub	sp, sp, #20
   14e24:	mov	r5, r0
   14e28:	mov	r0, r1
   14e2c:	mov	r7, r1
   14e30:	bl	148b0 <strlen@plt>
   14e34:	mov	r8, r0
   14e38:	ldr	r0, [r5, #412]	; 0x19c
   14e3c:	add	r4, r5, #352	; 0x160
   14e40:	mov	r2, #1
   14e44:	mov	r1, r4
   14e48:	add	r0, r0, #32
   14e4c:	bl	29368 <fb_schema_table_insert_item@@Base>
   14e50:	mov	r6, #0
   14e54:	cmp	r0, #0
   14e58:	bne	1537c <flatcc_parse_file@@Base+0x564>
   14e5c:	ldr	r0, [r5, #552]	; 0x228
   14e60:	cmp	r0, #0
   14e64:	str	r0, [sp, #12]
   14e68:	beq	14fc0 <flatcc_parse_file@@Base+0x1a8>
   14e6c:	ldr	r0, [r5, #336]	; 0x150
   14e70:	str	r4, [sp, #8]
   14e74:	cmp	r0, #1
   14e78:	blt	14f14 <flatcc_parse_file@@Base+0xfc>
   14e7c:	mov	r9, #0
   14e80:	add	r4, sp, #16
   14e84:	b	14e98 <flatcc_parse_file@@Base+0x80>
   14e88:	ldr	r0, [r5, #336]	; 0x150
   14e8c:	add	r9, r9, #1
   14e90:	cmp	r9, r0
   14e94:	bge	14f14 <flatcc_parse_file@@Base+0xfc>
   14e98:	ldr	r0, [r5, #328]	; 0x148
   14e9c:	ldr	r6, [r0, r9, lsl #2]
   14ea0:	mov	r0, r6
   14ea4:	bl	148b0 <strlen@plt>
   14ea8:	mov	r1, r0
   14eac:	ldr	r0, [pc, #1372]	; 15410 <flatcc_parse_file@@Base+0x5f8>
   14eb0:	mov	r2, r7
   14eb4:	mov	r3, r8
   14eb8:	add	r0, pc, r0
   14ebc:	str	r0, [sp]
   14ec0:	mov	r0, #1
   14ec4:	str	r0, [sp, #4]
   14ec8:	mov	r0, r6
   14ecc:	bl	297bc <__flatcc_fb_create_join_path_n@@Base>
   14ed0:	cmp	r0, #0
   14ed4:	beq	153c0 <flatcc_parse_file@@Base+0x5a8>
   14ed8:	ldr	r1, [r5, #128]	; 0x80
   14edc:	mov	r2, r4
   14ee0:	mov	r6, r0
   14ee4:	bl	29d14 <__flatcc_fb_read_file@@Base>
   14ee8:	cmp	r0, #0
   14eec:	bne	14ff4 <flatcc_parse_file@@Base+0x1dc>
   14ef0:	mov	r0, r6
   14ef4:	bl	147fc <free@plt>
   14ef8:	ldr	r0, [r5, #128]	; 0x80
   14efc:	ldr	r1, [sp, #16]
   14f00:	cmp	r1, r0
   14f04:	bls	14e88 <flatcc_parse_file@@Base+0x70>
   14f08:	cmp	r0, #0
   14f0c:	beq	14e88 <flatcc_parse_file@@Base+0x70>
   14f10:	b	15198 <flatcc_parse_file@@Base+0x380>
   14f14:	ldr	r0, [sp, #12]
   14f18:	cmp	r0, #0
   14f1c:	beq	14fa4 <flatcc_parse_file@@Base+0x18c>
   14f20:	ldr	r6, [r5, #552]	; 0x228
   14f24:	mov	r0, r6
   14f28:	bl	148b0 <strlen@plt>
   14f2c:	mov	r1, r0
   14f30:	mov	r0, r6
   14f34:	bl	29c1c <__flatcc_fb_find_basename@@Base>
   14f38:	ldr	r2, [pc, #1236]	; 15414 <flatcc_parse_file@@Base+0x5fc>
   14f3c:	mov	r1, r0
   14f40:	mov	r0, #1
   14f44:	mov	r3, r8
   14f48:	str	r0, [sp, #4]
   14f4c:	mov	r0, r6
   14f50:	add	r2, pc, r2
   14f54:	str	r2, [sp]
   14f58:	mov	r2, r7
   14f5c:	bl	297bc <__flatcc_fb_create_join_path_n@@Base>
   14f60:	cmp	r0, #0
   14f64:	beq	153c0 <flatcc_parse_file@@Base+0x5a8>
   14f68:	ldr	r1, [r5, #128]	; 0x80
   14f6c:	add	r2, sp, #16
   14f70:	mov	r6, r0
   14f74:	bl	29d14 <__flatcc_fb_read_file@@Base>
   14f78:	ldr	r4, [sp, #8]
   14f7c:	cmp	r0, #0
   14f80:	bne	14ff8 <flatcc_parse_file@@Base+0x1e0>
   14f84:	mov	r0, r6
   14f88:	bl	147fc <free@plt>
   14f8c:	ldr	r0, [r5, #128]	; 0x80
   14f90:	ldr	r1, [sp, #16]
   14f94:	cmp	r1, r0
   14f98:	bls	14fa4 <flatcc_parse_file@@Base+0x18c>
   14f9c:	cmp	r0, #0
   14fa0:	bne	15198 <flatcc_parse_file@@Base+0x380>
   14fa4:	ldr	r1, [pc, #1132]	; 15418 <flatcc_parse_file@@Base+0x600>
   14fa8:	mov	r0, r5
   14fac:	mov	r2, r7
   14fb0:	add	r1, pc, r1
   14fb4:	bl	29e1c <__flatcc_fb_print_error@@Base>
   14fb8:	mvn	r6, #0
   14fbc:	b	1537c <flatcc_parse_file@@Base+0x564>
   14fc0:	ldr	r1, [r5, #128]	; 0x80
   14fc4:	add	r2, sp, #16
   14fc8:	mov	r0, r7
   14fcc:	bl	29d14 <__flatcc_fb_read_file@@Base>
   14fd0:	cmp	r0, #0
   14fd4:	beq	15174 <flatcc_parse_file@@Base+0x35c>
   14fd8:	mov	sl, r0
   14fdc:	mov	r0, r7
   14fe0:	bl	29710 <__flatcc_fb_copy_path@@Base>
   14fe4:	cmp	r0, #0
   14fe8:	beq	153c0 <flatcc_parse_file@@Base+0x5a8>
   14fec:	mov	r6, r0
   14ff0:	b	14ffc <flatcc_parse_file@@Base+0x1e4>
   14ff4:	ldr	r4, [sp, #8]
   14ff8:	mov	sl, r0
   14ffc:	ldr	r0, [r5, #412]	; 0x19c
   15000:	ldr	r2, [sp, #16]
   15004:	mov	r3, #1
   15008:	ldr	r1, [r0, #56]	; 0x38
   1500c:	add	r1, r1, r2
   15010:	str	r1, [r0, #56]	; 0x38
   15014:	mov	r0, r5
   15018:	mov	r1, sl
   1501c:	str	r6, [r5, #548]	; 0x224
   15020:	bl	2a530 <__flatcc_fb_parse@@Base>
   15024:	cmp	r0, #0
   15028:	bne	15378 <flatcc_parse_file@@Base+0x560>
   1502c:	ldr	r6, [r4]
   15030:	mov	r8, r4
   15034:	cmp	r6, #0
   15038:	beq	151b0 <flatcc_parse_file@@Base+0x398>
   1503c:	add	r0, r5, #128	; 0x80
   15040:	str	r0, [sp, #8]
   15044:	b	1505c <flatcc_parse_file@@Base+0x244>
   15048:	mov	r0, r9
   1504c:	bl	147fc <free@plt>
   15050:	ldr	r6, [r6]
   15054:	cmp	r6, #0
   15058:	beq	151b0 <flatcc_parse_file@@Base+0x398>
   1505c:	ldrd	r0, [r6, #8]
   15060:	bl	296b8 <__flatcc_fb_copy_path_n@@Base>
   15064:	cmp	r0, #0
   15068:	beq	153c0 <flatcc_parse_file@@Base+0x5a8>
   1506c:	ldr	sl, [r5, #412]	; 0x19c
   15070:	mov	r9, r0
   15074:	ldr	r0, [r5, #132]	; 0x84
   15078:	ldr	r1, [sl, #52]	; 0x34
   1507c:	cmp	r1, r0
   15080:	cmpge	r0, #1
   15084:	bge	15348 <flatcc_parse_file@@Base+0x530>
   15088:	ldr	r0, [r5, #136]	; 0x88
   1508c:	ldr	r1, [sl, #48]	; 0x30
   15090:	cmp	r1, r0
   15094:	cmpge	r0, #1
   15098:	bge	15354 <flatcc_parse_file@@Base+0x53c>
   1509c:	mov	r0, #560	; 0x230
   150a0:	bl	14868 <malloc@plt>
   150a4:	cmp	r0, #0
   150a8:	beq	15370 <flatcc_parse_file@@Base+0x558>
   150ac:	ldr	r1, [r5, #12]
   150b0:	ldr	r3, [r5, #8]
   150b4:	mov	r2, r9
   150b8:	mov	r7, r0
   150bc:	stm	sp, {r1, sl}
   150c0:	ldr	r1, [sp, #8]
   150c4:	bl	2a240 <__flatcc_fb_init_parser@@Base>
   150c8:	cmp	r0, #0
   150cc:	bne	15368 <flatcc_parse_file@@Base+0x550>
   150d0:	add	r0, sl, #32
   150d4:	add	r1, r7, #352	; 0x160
   150d8:	bl	29438 <fb_schema_table_find_item@@Base>
   150dc:	cmp	r0, #0
   150e0:	beq	1511c <flatcc_parse_file@@Base+0x304>
   150e4:	ldr	r1, [pc, #820]	; 15420 <flatcc_parse_file@@Base+0x608>
   150e8:	add	r0, r0, #172	; 0xac
   150ec:	mov	r2, r8
   150f0:	add	r1, pc, r1
   150f4:	bl	278d4 <ptr_set_visit@@Base>
   150f8:	ldr	r4, [r7]
   150fc:	mov	r0, r7
   15100:	bl	313ec <__flatcc_fb_clear_parser@@Base>
   15104:	mov	r0, r7
   15108:	bl	147fc <free@plt>
   1510c:	cmp	r4, #0
   15110:	mov	r7, r4
   15114:	bne	150f8 <flatcc_parse_file@@Base+0x2e0>
   15118:	b	15048 <flatcc_parse_file@@Base+0x230>
   1511c:	ldr	r0, [r5]
   15120:	str	r0, [r7]
   15124:	str	r7, [r5]
   15128:	ldr	r0, [r5, #548]	; 0x224
   1512c:	str	r0, [r7, #552]	; 0x228
   15130:	ldr	r0, [sl, #48]	; 0x30
   15134:	ldr	r1, [sl, #52]	; 0x34
   15138:	add	r0, r0, #1
   1513c:	add	r1, r1, #1
   15140:	str	r0, [sl, #48]	; 0x30
   15144:	str	r1, [sl, #52]	; 0x34
   15148:	mov	r0, r7
   1514c:	mov	r1, r9
   15150:	bl	14e18 <flatcc_parse_file@@Base>
   15154:	cmp	r0, #0
   15158:	bne	15370 <flatcc_parse_file@@Base+0x558>
   1515c:	ldr	r1, [pc, #704]	; 15424 <flatcc_parse_file@@Base+0x60c>
   15160:	add	r0, r7, #524	; 0x20c
   15164:	mov	r2, r8
   15168:	add	r1, pc, r1
   1516c:	bl	278d4 <ptr_set_visit@@Base>
   15170:	b	15048 <flatcc_parse_file@@Base+0x230>
   15174:	ldr	r1, [r5, #412]	; 0x19c
   15178:	ldr	r2, [sp, #16]
   1517c:	ldr	r0, [r5, #128]	; 0x80
   15180:	ldr	r1, [r1, #56]	; 0x38
   15184:	add	r1, r1, r2
   15188:	cmp	r1, r0
   1518c:	bls	14e6c <flatcc_parse_file@@Base+0x54>
   15190:	cmp	r0, #0
   15194:	beq	14e6c <flatcc_parse_file@@Base+0x54>
   15198:	ldr	r1, [pc, #616]	; 15408 <flatcc_parse_file@@Base+0x5f0>
   1519c:	mov	r0, r5
   151a0:	add	r1, pc, r1
   151a4:	bl	29e1c <__flatcc_fb_print_error@@Base>
   151a8:	mvn	r6, #0
   151ac:	b	1537c <flatcc_parse_file@@Base+0x564>
   151b0:	add	r0, r5, #524	; 0x20c
   151b4:	mov	r1, r8
   151b8:	mov	r2, #1
   151bc:	bl	27658 <ptr_set_insert_item@@Base>
   151c0:	mov	r0, r5
   151c4:	bl	330d4 <__flatcc_fb_build_schema@@Base>
   151c8:	cmp	r0, #0
   151cc:	bne	15378 <flatcc_parse_file@@Base+0x560>
   151d0:	ldr	r0, [sp, #12]
   151d4:	mov	r6, #0
   151d8:	cmp	r0, #0
   151dc:	bne	1537c <flatcc_parse_file@@Base+0x564>
   151e0:	ldr	r0, [r5, #240]	; 0xf0
   151e4:	cmp	r0, #0
   151e8:	beq	1537c <flatcc_parse_file@@Base+0x564>
   151ec:	ldr	r0, [r5, #552]	; 0x228
   151f0:	cmp	r0, #0
   151f4:	bne	153e8 <flatcc_parse_file@@Base+0x5d0>
   151f8:	ldr	r1, [r5, #244]	; 0xf4
   151fc:	ldr	r7, [r5, #248]	; 0xf8
   15200:	ldr	r3, [r5, #344]	; 0x158
   15204:	ldr	ip, [r5, #512]	; 0x200
   15208:	ldr	r2, [pc, #536]	; 15428 <flatcc_parse_file@@Base+0x610>
   1520c:	ldr	r6, [pc, #536]	; 1542c <flatcc_parse_file@@Base+0x614>
   15210:	add	r6, pc, r6
   15214:	cmp	r1, #0
   15218:	add	r2, pc, r2
   1521c:	movne	r2, r6
   15220:	cmp	r3, #0
   15224:	mov	r0, r6
   15228:	mov	r4, r6
   1522c:	moveq	r3, r6
   15230:	cmp	r1, #0
   15234:	moveq	r0, r3
   15238:	moveq	r1, ip
   1523c:	cmp	r7, #0
   15240:	bne	15268 <flatcc_parse_file@@Base+0x450>
   15244:	ldr	r7, [r5, #308]	; 0x134
   15248:	ldr	r4, [pc, #480]	; 15430 <flatcc_parse_file@@Base+0x618>
   1524c:	ldr	r6, [pc, #480]	; 15434 <flatcc_parse_file@@Base+0x61c>
   15250:	cmp	r7, #0
   15254:	add	r4, pc, r4
   15258:	add	r6, pc, r6
   1525c:	mov	r7, ip
   15260:	moveq	r6, r4
   15264:	mov	r4, r3
   15268:	mov	r3, #1
   1526c:	bl	298f0 <__flatcc_fb_create_join_path@@Base>
   15270:	cmp	r0, #0
   15274:	beq	153c0 <flatcc_parse_file@@Base+0x5a8>
   15278:	mov	r8, r0
   1527c:	mov	r0, r4
   15280:	mov	r1, r7
   15284:	mov	r2, r6
   15288:	mov	r3, #1
   1528c:	bl	298f0 <__flatcc_fb_create_join_path@@Base>
   15290:	cmp	r0, #0
   15294:	beq	153c0 <flatcc_parse_file@@Base+0x5a8>
   15298:	mov	r4, r0
   1529c:	bl	29bfc <__flatcc_fb_create_make_path@@Base>
   152a0:	cmp	r0, #0
   152a4:	mov	r6, #0
   152a8:	beq	153c0 <flatcc_parse_file@@Base+0x5a8>
   152ac:	mov	r9, r0
   152b0:	mov	r0, r4
   152b4:	bl	147fc <free@plt>
   152b8:	ldr	r1, [pc, #376]	; 15438 <flatcc_parse_file@@Base+0x620>
   152bc:	mov	r0, r8
   152c0:	add	r1, pc, r1
   152c4:	bl	147f0 <fopen@plt>
   152c8:	mov	r7, r0
   152cc:	cmp	r0, #0
   152d0:	beq	15388 <flatcc_parse_file@@Base+0x570>
   152d4:	ldr	r1, [pc, #356]	; 15440 <flatcc_parse_file@@Base+0x628>
   152d8:	mov	r0, r7
   152dc:	mov	r2, r9
   152e0:	add	r1, pc, r1
   152e4:	bl	148bc <fprintf@plt>
   152e8:	ldr	r6, [r5]
   152ec:	cmp	r6, #0
   152f0:	beq	15334 <flatcc_parse_file@@Base+0x51c>
   152f4:	ldr	r5, [pc, #328]	; 15444 <flatcc_parse_file@@Base+0x62c>
   152f8:	add	r5, pc, r5
   152fc:	ldr	r0, [r6, #548]	; 0x224
   15300:	bl	29bfc <__flatcc_fb_create_make_path@@Base>
   15304:	cmp	r0, #0
   15308:	beq	153c0 <flatcc_parse_file@@Base+0x5a8>
   1530c:	mov	r4, r0
   15310:	mov	r0, r7
   15314:	mov	r1, r5
   15318:	mov	r2, r4
   1531c:	bl	148bc <fprintf@plt>
   15320:	ldr	r6, [r6]
   15324:	mov	r0, r4
   15328:	bl	147fc <free@plt>
   1532c:	cmp	r6, #0
   15330:	bne	152fc <flatcc_parse_file@@Base+0x4e4>
   15334:	mov	r0, #10
   15338:	mov	r1, r7
   1533c:	bl	1482c <fputc_unlocked@plt>
   15340:	mov	r6, #0
   15344:	b	1539c <flatcc_parse_file@@Base+0x584>
   15348:	ldr	r1, [pc, #188]	; 1540c <flatcc_parse_file@@Base+0x5f4>
   1534c:	add	r1, pc, r1
   15350:	b	1535c <flatcc_parse_file@@Base+0x544>
   15354:	ldr	r1, [pc, #192]	; 1541c <flatcc_parse_file@@Base+0x604>
   15358:	add	r1, pc, r1
   1535c:	mov	r0, r5
   15360:	bl	29e1c <__flatcc_fb_print_error@@Base>
   15364:	b	15370 <flatcc_parse_file@@Base+0x558>
   15368:	mov	r0, r7
   1536c:	bl	147fc <free@plt>
   15370:	mov	r0, r9
   15374:	bl	147fc <free@plt>
   15378:	mov	r6, #0
   1537c:	mov	r0, r6
   15380:	sub	sp, fp, #28
   15384:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15388:	ldr	r1, [pc, #172]	; 1543c <flatcc_parse_file@@Base+0x624>
   1538c:	mov	r0, r5
   15390:	mov	r2, r8
   15394:	add	r1, pc, r1
   15398:	bl	29e1c <__flatcc_fb_print_error@@Base>
   1539c:	mov	r0, r8
   153a0:	bl	147fc <free@plt>
   153a4:	mov	r0, r9
   153a8:	bl	147fc <free@plt>
   153ac:	cmp	r7, #0
   153b0:	beq	1537c <flatcc_parse_file@@Base+0x564>
   153b4:	mov	r0, r7
   153b8:	bl	14904 <fclose@plt>
   153bc:	b	1537c <flatcc_parse_file@@Base+0x564>
   153c0:	ldr	r0, [pc, #140]	; 15454 <flatcc_parse_file@@Base+0x63c>
   153c4:	mov	r1, #34	; 0x22
   153c8:	mov	r2, #1
   153cc:	ldr	r0, [pc, r0]
   153d0:	ldr	r3, [r0]
   153d4:	ldr	r0, [pc, #124]	; 15458 <flatcc_parse_file@@Base+0x640>
   153d8:	add	r0, pc, r0
   153dc:	bl	14850 <fwrite@plt>
   153e0:	mov	r0, #1
   153e4:	bl	14898 <exit@plt>
   153e8:	ldr	r0, [pc, #88]	; 15448 <flatcc_parse_file@@Base+0x630>
   153ec:	ldr	r1, [pc, #88]	; 1544c <flatcc_parse_file@@Base+0x634>
   153f0:	ldr	r3, [pc, #88]	; 15450 <flatcc_parse_file@@Base+0x638>
   153f4:	mov	r2, #220	; 0xdc
   153f8:	add	r0, pc, r0
   153fc:	add	r1, pc, r1
   15400:	add	r3, pc, r3
   15404:	bl	1497c <__assert_fail@plt>
   15408:	ldrdeq	r9, [r2], -fp
   1540c:	muleq	r2, lr, lr
   15410:	andeq	sl, r2, r6, ror #15
   15414:	andeq	sl, r2, lr, asr #14
   15418:	andeq	sl, r2, pc, ror #3
   1541c:			; <UNDEFINED> instruction: 0x00029eb2
   15420:	andeq	r0, r0, ip, lsr #10
   15424:			; <UNDEFINED> instruction: 0x000004b4
   15428:	andeq	sl, r2, pc, lsr #1
   1542c:	andeq	sl, r2, lr, lsl #9
   15430:	andeq	r0, r4, sp, lsl #31
   15434:	andeq	r9, r2, r8, lsl pc
   15438:	andeq	sl, r2, lr
   1543c:	andeq	r9, r2, sp, lsr pc
   15440:	andeq	sl, r2, r0, lsr #32
   15444:	andeq	sl, r2, ip
   15448:	andeq	r9, r2, r0, lsr lr
   1544c:	andeq	r9, r2, r1, asr #28
   15450:	muleq	r2, sl, lr
   15454:	ldrdeq	r5, [r5], -r0
   15458:	andeq	r9, r2, pc, ror #27

0001545c <flatcc_generate_binary_schema_to_buffer@@Base>:
   1545c:	push	{fp, lr}
   15460:	mov	fp, sp
   15464:	sub	sp, sp, #8
   15468:	mov	ip, r1
   1546c:	str	r2, [sp, #4]
   15470:	add	r2, r0, #128	; 0x80
   15474:	add	r1, r0, #352	; 0x160
   15478:	add	r3, sp, #4
   1547c:	mov	r0, r2
   15480:	mov	r2, ip
   15484:	bl	24fa4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base>
   15488:	cmp	r0, #0
   1548c:	ldr	r1, [sp, #4]
   15490:	mvneq	r1, #0
   15494:	mov	r0, r1
   15498:	mov	sp, fp
   1549c:	pop	{fp, pc}

000154a0 <flatcc_generate_binary_schema@@Base>:
   154a0:	add	r3, r0, #128	; 0x80
   154a4:	mov	r2, r1
   154a8:	add	r1, r0, #352	; 0x160
   154ac:	mov	r0, r3
   154b0:	b	260f8 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>

000154b4 <flatcc_generate_files@@Base>:
   154b4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   154b8:	add	fp, sp, #24
   154bc:	sub	sp, sp, #232	; 0xe8
   154c0:	mvn	r4, #0
   154c4:	cmp	r0, #0
   154c8:	beq	154dc <flatcc_generate_files@@Base+0x28>
   154cc:	mov	r5, r0
   154d0:	ldr	r0, [r0, #108]	; 0x6c
   154d4:	cmp	r0, #0
   154d8:	beq	154e8 <flatcc_generate_files@@Base+0x34>
   154dc:	mov	r0, r4
   154e0:	sub	sp, fp, #24
   154e4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   154e8:	mov	r0, #0
   154ec:	mov	r1, r5
   154f0:	str	r0, [r1, #4]
   154f4:	mov	r7, r1
   154f8:	ldr	r1, [r1]
   154fc:	mov	r0, r7
   15500:	cmp	r1, #0
   15504:	bne	154f0 <flatcc_generate_files@@Base+0x3c>
   15508:	ldr	r0, [r5, #308]	; 0x134
   1550c:	add	r6, r5, #128	; 0x80
   15510:	cmp	r0, #0
   15514:	beq	1552c <flatcc_generate_files@@Base+0x78>
   15518:	add	r1, r5, #352	; 0x160
   1551c:	mov	r0, r6
   15520:	bl	2616c <__flatcc_fb_codegen_bfbs_to_file@@Base>
   15524:	cmp	r0, #0
   15528:	bne	154dc <flatcc_generate_files@@Base+0x28>
   1552c:	mov	r0, sp
   15530:	mov	r1, r6
   15534:	bl	157c4 <__flatcc_fb_init_output_c@@Base>
   15538:	cmp	r0, #0
   1553c:	bne	154dc <flatcc_generate_files@@Base+0x28>
   15540:	ldr	r0, [r5, #256]	; 0x100
   15544:	cmp	r0, #0
   15548:	beq	155b0 <flatcc_generate_files@@Base+0xfc>
   1554c:	ldr	r0, [r5, #120]	; 0x78
   15550:	mov	r4, #0
   15554:	cmp	r0, #0
   15558:	beq	155e0 <flatcc_generate_files@@Base+0x12c>
   1555c:	ldr	r0, [r5, #300]	; 0x12c
   15560:	cmp	r0, #0
   15564:	beq	155c8 <flatcc_generate_files@@Base+0x114>
   15568:	cmp	r7, #0
   1556c:	beq	155e0 <flatcc_generate_files@@Base+0x12c>
   15570:	mov	r5, sp
   15574:	ldr	r0, [r7, #108]	; 0x6c
   15578:	cmp	r0, #0
   1557c:	bne	155dc <flatcc_generate_files@@Base+0x128>
   15580:	add	r1, r7, #352	; 0x160
   15584:	mov	r0, r5
   15588:	bl	15ea0 <__flatcc_fb_codegen_c@@Base>
   1558c:	ldr	r7, [r7, #4]
   15590:	cmp	r0, #0
   15594:	mov	r4, r0
   15598:	movwne	r4, #1
   1559c:	cmp	r7, #0
   155a0:	beq	155e0 <flatcc_generate_files@@Base+0x12c>
   155a4:	cmp	r0, #0
   155a8:	beq	15574 <flatcc_generate_files@@Base+0xc0>
   155ac:	b	155e0 <flatcc_generate_files@@Base+0x12c>
   155b0:	mov	r0, sp
   155b4:	bl	15d78 <__flatcc_fb_codegen_common_c@@Base>
   155b8:	mov	r4, r0
   155bc:	cmp	r0, #0
   155c0:	bne	155e0 <flatcc_generate_files@@Base+0x12c>
   155c4:	b	1554c <flatcc_generate_files@@Base+0x98>
   155c8:	add	r1, r5, #352	; 0x160
   155cc:	mov	r0, sp
   155d0:	bl	15ea0 <__flatcc_fb_codegen_c@@Base>
   155d4:	mov	r4, r0
   155d8:	b	155e0 <flatcc_generate_files@@Base+0x12c>
   155dc:	mov	r4, #1
   155e0:	mov	r0, sp
   155e4:	bl	15784 <__flatcc_fb_end_output_c@@Base>
   155e8:	b	154dc <flatcc_generate_files@@Base+0x28>

000155ec <flatcc_destroy_context@@Base>:
   155ec:	push	{r4, r5, fp, lr}
   155f0:	add	fp, sp, #8
   155f4:	cmp	r0, #0
   155f8:	popeq	{r4, r5, fp, pc}
   155fc:	mov	r4, r0
   15600:	ldr	r5, [r4]
   15604:	mov	r0, r4
   15608:	bl	313ec <__flatcc_fb_clear_parser@@Base>
   1560c:	mov	r0, r4
   15610:	bl	147fc <free@plt>
   15614:	cmp	r5, #0
   15618:	mov	r4, r5
   1561c:	bne	15600 <flatcc_destroy_context@@Base+0x14>
   15620:	pop	{r4, r5, fp, pc}
   15624:	add	r0, r0, #172	; 0xac
   15628:	mov	r2, #1
   1562c:	b	27658 <ptr_set_insert_item@@Base>

00015630 <__flatcc_fb_open_output_file@@Base>:
   15630:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15634:	add	fp, sp, #24
   15638:	sub	sp, sp, #8
   1563c:	mov	r4, r0
   15640:	mov	r9, r1
   15644:	ldr	r0, [r0, #204]	; 0xcc
   15648:	mov	r5, #0
   1564c:	ldr	r1, [r4, #212]	; 0xd4
   15650:	ldr	r1, [r1, #216]	; 0xd8
   15654:	ldr	r6, [pc, #200]	; 15724 <__flatcc_fb_open_output_file@@Base+0xf4>
   15658:	cmp	r1, #0
   1565c:	add	r6, pc, r6
   15660:	movne	r6, r1
   15664:	cmp	r0, #0
   15668:	bne	156cc <__flatcc_fb_open_output_file@@Base+0x9c>
   1566c:	mov	r0, r6
   15670:	mov	r7, r3
   15674:	mov	r8, r2
   15678:	bl	148b0 <strlen@plt>
   1567c:	mov	r1, r0
   15680:	mov	r0, #1
   15684:	mov	r2, r9
   15688:	mov	r3, r8
   1568c:	str	r7, [sp]
   15690:	str	r0, [sp, #4]
   15694:	mov	r0, r6
   15698:	bl	297bc <__flatcc_fb_create_join_path_n@@Base>
   1569c:	cmp	r0, #0
   156a0:	beq	156fc <__flatcc_fb_open_output_file@@Base+0xcc>
   156a4:	ldr	r1, [pc, #124]	; 15728 <__flatcc_fb_open_output_file@@Base+0xf8>
   156a8:	mov	r6, r0
   156ac:	add	r1, pc, r1
   156b0:	bl	147f0 <fopen@plt>
   156b4:	mov	r5, #0
   156b8:	cmp	r0, #0
   156bc:	str	r0, [r4, #204]	; 0xcc
   156c0:	beq	156d8 <__flatcc_fb_open_output_file@@Base+0xa8>
   156c4:	mov	r0, r6
   156c8:	bl	147fc <free@plt>
   156cc:	mov	r0, r5
   156d0:	sub	sp, fp, #24
   156d4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   156d8:	ldr	r0, [pc, #76]	; 1572c <__flatcc_fb_open_output_file@@Base+0xfc>
   156dc:	mov	r2, r6
   156e0:	ldr	r0, [pc, r0]
   156e4:	ldr	r0, [r0]
   156e8:	ldr	r1, [pc, #64]	; 15730 <__flatcc_fb_open_output_file@@Base+0x100>
   156ec:	add	r1, pc, r1
   156f0:	bl	148bc <fprintf@plt>
   156f4:	mvn	r5, #0
   156f8:	b	156c4 <__flatcc_fb_open_output_file@@Base+0x94>
   156fc:	ldr	r0, [pc, #48]	; 15734 <__flatcc_fb_open_output_file@@Base+0x104>
   15700:	mov	r1, #34	; 0x22
   15704:	mov	r2, #1
   15708:	ldr	r0, [pc, r0]
   1570c:	ldr	r3, [r0]
   15710:	ldr	r0, [pc, #32]	; 15738 <__flatcc_fb_open_output_file@@Base+0x108>
   15714:	add	r0, pc, r0
   15718:	bl	14850 <fwrite@plt>
   1571c:	mov	r0, #1
   15720:	bl	14898 <exit@plt>
   15724:	andeq	sl, r2, r2, asr #32
   15728:	andeq	r9, r2, r2, lsr #24
   1572c:			; <UNDEFINED> instruction: 0x000559bc
   15730:	andeq	r9, r2, ip, lsl ip
   15734:	muleq	r5, r4, r9
   15738:			; <UNDEFINED> instruction: 0x00029ab3

0001573c <__flatcc_fb_close_output_file@@Base>:
   1573c:	push	{r4, sl, fp, lr}
   15740:	add	fp, sp, #8
   15744:	mov	r4, r0
   15748:	ldr	r0, [r0, #212]	; 0xd4
   1574c:	ldr	r1, [r0, #124]	; 0x7c
   15750:	cmp	r1, #0
   15754:	bne	15764 <__flatcc_fb_close_output_file@@Base+0x28>
   15758:	ldr	r0, [r0, #108]	; 0x6c
   1575c:	cmp	r0, #0
   15760:	beq	15768 <__flatcc_fb_close_output_file@@Base+0x2c>
   15764:	pop	{r4, sl, fp, pc}
   15768:	ldr	r0, [r4, #204]	; 0xcc
   1576c:	cmp	r0, #0
   15770:	popeq	{r4, sl, fp, pc}
   15774:	bl	14904 <fclose@plt>
   15778:	mov	r0, #0
   1577c:	str	r0, [r4, #204]	; 0xcc
   15780:	pop	{r4, sl, fp, pc}

00015784 <__flatcc_fb_end_output_c@@Base>:
   15784:	push	{r4, sl, fp, lr}
   15788:	add	fp, sp, #8
   1578c:	mov	r4, r0
   15790:	ldr	r0, [r0, #204]	; 0xcc
   15794:	cmp	r0, #0
   15798:	beq	157b4 <__flatcc_fb_end_output_c@@Base+0x30>
   1579c:	ldr	r1, [pc, #28]	; 157c0 <__flatcc_fb_end_output_c@@Base+0x3c>
   157a0:	ldr	r1, [pc, r1]
   157a4:	ldr	r1, [r1]
   157a8:	cmp	r0, r1
   157ac:	beq	157b4 <__flatcc_fb_end_output_c@@Base+0x30>
   157b0:	bl	14904 <fclose@plt>
   157b4:	mov	r0, #0
   157b8:	str	r0, [r4, #204]	; 0xcc
   157bc:	pop	{r4, sl, fp, pc}
   157c0:	andeq	r5, r5, r8, lsl #18

000157c4 <__flatcc_fb_init_output_c@@Base>:
   157c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   157c8:	add	fp, sp, #28
   157cc:	sub	sp, sp, #4
   157d0:	ldr	r5, [r1, #128]	; 0x80
   157d4:	ldr	r7, [r1, #216]	; 0xd8
   157d8:	mov	r6, r1
   157dc:	mov	r1, #0
   157e0:	mov	r2, #232	; 0xe8
   157e4:	mov	sl, r0
   157e8:	mov	r4, #0
   157ec:	bl	148d4 <memset@plt>
   157f0:	str	r6, [sl, #212]	; 0xd4
   157f4:	cmp	r5, #0
   157f8:	ldr	r0, [pc, #420]	; 159a4 <__flatcc_fb_init_output_c@@Base+0x1e0>
   157fc:	ldr	r8, [pc, #420]	; 159a8 <__flatcc_fb_init_output_c@@Base+0x1e4>
   15800:	ldr	r9, [pc, #420]	; 159ac <__flatcc_fb_init_output_c@@Base+0x1e8>
   15804:	add	r0, pc, r0
   15808:	add	r8, pc, r8
   1580c:	add	r9, pc, r9
   15810:	moveq	r8, r0
   15814:	cmp	r7, #0
   15818:	movne	r9, r7
   1581c:	ldr	r7, [r6, #196]	; 0xc4
   15820:	cmp	r7, #0
   15824:	beq	15860 <__flatcc_fb_init_output_c@@Base+0x9c>
   15828:	mov	r0, r7
   1582c:	bl	148b0 <strlen@plt>
   15830:	mov	r5, r0
   15834:	cmp	r0, #101	; 0x65
   15838:	bcc	1586c <__flatcc_fb_init_output_c@@Base+0xa8>
   1583c:	ldr	r0, [pc, #372]	; 159b8 <__flatcc_fb_init_output_c@@Base+0x1f4>
   15840:	mov	r2, #100	; 0x64
   15844:	ldr	r0, [pc, r0]
   15848:	ldr	r0, [r0]
   1584c:	ldr	r1, [pc, #360]	; 159bc <__flatcc_fb_init_output_c@@Base+0x1f8>
   15850:	add	r1, pc, r1
   15854:	bl	148bc <fprintf@plt>
   15858:	mvn	r7, #0
   1585c:	b	1594c <__flatcc_fb_init_output_c@@Base+0x188>
   15860:	ldr	r7, [pc, #328]	; 159b0 <__flatcc_fb_init_output_c@@Base+0x1ec>
   15864:	mov	r5, #11
   15868:	add	r7, pc, r7
   1586c:	mov	r0, sl
   15870:	mov	r1, r7
   15874:	mov	r2, #100	; 0x64
   15878:	bl	148e0 <strncpy@plt>
   1587c:	cmp	r5, #0
   15880:	strb	r4, [sl, #100]	; 0x64
   15884:	mov	r4, sl
   15888:	addne	r0, sl, r5
   1588c:	movne	r1, #95	; 0x5f
   15890:	strhne	r1, [r0]
   15894:	ldrb	r7, [r4], #102	; 0x66
   15898:	cmp	r7, #0
   1589c:	beq	158c4 <__flatcc_fb_init_output_c@@Base+0x100>
   158a0:	bl	14880 <__ctype_toupper_loc@plt>
   158a4:	ldr	r1, [r0]
   158a8:	uxtb	r2, r7
   158ac:	ldr	r1, [r1, r2, lsl #2]
   158b0:	strb	r1, [r4]
   158b4:	ldrb	r7, [r4, #-101]	; 0xffffff9b
   158b8:	add	r4, r4, #1
   158bc:	cmp	r7, #0
   158c0:	bne	158a4 <__flatcc_fb_init_output_c@@Base+0xe0>
   158c4:	mov	r7, #0
   158c8:	add	r0, sl, r5
   158cc:	strb	r7, [r4]
   158d0:	strb	r7, [r0, #102]	; 0x66
   158d4:	ldr	r0, [r6, #176]	; 0xb0
   158d8:	str	r0, [sl, #224]	; 0xe0
   158dc:	ldr	r0, [r6, #108]	; 0x6c
   158e0:	cmp	r0, #0
   158e4:	beq	158fc <__flatcc_fb_init_output_c@@Base+0x138>
   158e8:	ldr	r0, [pc, #196]	; 159b4 <__flatcc_fb_init_output_c@@Base+0x1f0>
   158ec:	ldr	r0, [pc, r0]
   158f0:	ldr	r0, [r0]
   158f4:	str	r0, [sl, #204]	; 0xcc
   158f8:	b	1594c <__flatcc_fb_init_output_c@@Base+0x188>
   158fc:	ldr	r0, [sl, #212]	; 0xd4
   15900:	ldr	r1, [r0, #124]	; 0x7c
   15904:	cmp	r1, #0
   15908:	beq	1594c <__flatcc_fb_init_output_c@@Base+0x188>
   1590c:	ldr	r2, [pc, #172]	; 159c0 <__flatcc_fb_init_output_c@@Base+0x1fc>
   15910:	mov	r0, r9
   15914:	mov	r3, #1
   15918:	add	r2, pc, r2
   1591c:	bl	298f0 <__flatcc_fb_create_join_path@@Base>
   15920:	cmp	r0, #0
   15924:	beq	1597c <__flatcc_fb_init_output_c@@Base+0x1b8>
   15928:	mov	r1, r8
   1592c:	mov	r5, r0
   15930:	bl	147f0 <fopen@plt>
   15934:	mov	r7, #0
   15938:	cmp	r0, #0
   1593c:	str	r0, [sl, #204]	; 0xcc
   15940:	beq	15958 <__flatcc_fb_init_output_c@@Base+0x194>
   15944:	mov	r0, r5
   15948:	bl	147fc <free@plt>
   1594c:	mov	r0, r7
   15950:	sub	sp, fp, #28
   15954:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15958:	ldr	r0, [pc, #100]	; 159c4 <__flatcc_fb_init_output_c@@Base+0x200>
   1595c:	mov	r2, r5
   15960:	ldr	r0, [pc, r0]
   15964:	ldr	r0, [r0]
   15968:	ldr	r1, [pc, #88]	; 159c8 <__flatcc_fb_init_output_c@@Base+0x204>
   1596c:	add	r1, pc, r1
   15970:	bl	148bc <fprintf@plt>
   15974:	mvn	r7, #0
   15978:	b	15944 <__flatcc_fb_init_output_c@@Base+0x180>
   1597c:	ldr	r0, [pc, #72]	; 159cc <__flatcc_fb_init_output_c@@Base+0x208>
   15980:	mov	r1, #34	; 0x22
   15984:	mov	r2, #1
   15988:	ldr	r0, [pc, r0]
   1598c:	ldr	r3, [r0]
   15990:	ldr	r0, [pc, #56]	; 159d0 <__flatcc_fb_init_output_c@@Base+0x20c>
   15994:	add	r0, pc, r0
   15998:	bl	14850 <fwrite@plt>
   1599c:	mov	r0, #1
   159a0:	bl	14898 <exit@plt>
   159a4:	andeq	r9, r2, sl, asr #21
   159a8:	andeq	r9, r2, r2, lsr #22
   159ac:	muleq	r2, r2, lr
   159b0:	strdeq	r9, [r2], -ip
   159b4:			; <UNDEFINED> instruction: 0x000557bc
   159b8:	andeq	r5, r5, r8, asr r8
   159bc:	ldrdeq	r9, [r2], -sp
   159c0:	andeq	r9, r2, r6, lsl #27
   159c4:	andeq	r5, r5, ip, lsr r7
   159c8:	muleq	r2, ip, r9
   159cc:	andeq	r5, r5, r4, lsl r7
   159d0:	andeq	r9, r2, r3, lsr r8

000159d4 <__flatcc_fb_gen_c_includes@@Base>:
   159d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   159d8:	add	fp, sp, #28
   159dc:	sub	sp, sp, #36	; 0x24
   159e0:	mov	r6, r0
   159e4:	ldr	r0, [r0, #208]	; 0xd0
   159e8:	vmov.i32	q8, #0	; 0x00000000
   159ec:	add	r4, sp, #16
   159f0:	str	r2, [sp, #12]
   159f4:	str	r1, [sp, #8]
   159f8:	ldr	r8, [r0]
   159fc:	vst1.64	{d16-d17}, [r4]
   15a00:	ldr	r0, [r0, #164]	; 0xa4
   15a04:	bl	29710 <__flatcc_fb_copy_path@@Base>
   15a08:	mov	r1, r0
   15a0c:	mov	r0, r4
   15a10:	mov	r2, #1
   15a14:	bl	26f18 <str_set_insert_item@@Base>
   15a18:	cmp	r8, #0
   15a1c:	beq	15ae4 <__flatcc_fb_gen_c_includes@@Base+0x110>
   15a20:	add	r7, sp, #16
   15a24:	b	15a40 <__flatcc_fb_gen_c_includes@@Base+0x6c>
   15a28:	mov	r0, r5
   15a2c:	bl	147fc <free@plt>
   15a30:	mov	r0, r4
   15a34:	bl	147fc <free@plt>
   15a38:	cmp	r8, #0
   15a3c:	beq	15ae4 <__flatcc_fb_gen_c_includes@@Base+0x110>
   15a40:	ldr	r2, [r6, #212]	; 0xd4
   15a44:	ldrd	r0, [r8, #8]
   15a48:	ldr	r2, [r2, #96]	; 0x60
   15a4c:	bl	29c50 <__flatcc_fb_create_basename@@Base>
   15a50:	cmp	r0, #0
   15a54:	beq	15b00 <__flatcc_fb_gen_c_includes@@Base+0x12c>
   15a58:	ldr	r8, [r8]
   15a5c:	mov	r4, r0
   15a60:	bl	29710 <__flatcc_fb_copy_path@@Base>
   15a64:	cmp	r0, #0
   15a68:	beq	15b00 <__flatcc_fb_gen_c_includes@@Base+0x12c>
   15a6c:	ldrb	r9, [r0]
   15a70:	mov	r5, r0
   15a74:	cmp	r9, #0
   15a78:	beq	15aa4 <__flatcc_fb_gen_c_includes@@Base+0xd0>
   15a7c:	add	sl, r5, #1
   15a80:	bl	14880 <__ctype_toupper_loc@plt>
   15a84:	ldr	r1, [r0]
   15a88:	uxtb	r2, r9
   15a8c:	ldr	r1, [r1, r2, lsl #2]
   15a90:	strb	r1, [sl, #-1]
   15a94:	ldrb	r9, [sl]
   15a98:	add	sl, sl, #1
   15a9c:	cmp	r9, #0
   15aa0:	bne	15a84 <__flatcc_fb_gen_c_includes@@Base+0xb0>
   15aa4:	mov	r0, r7
   15aa8:	mov	r1, r5
   15aac:	mov	r2, #1
   15ab0:	bl	26f18 <str_set_insert_item@@Base>
   15ab4:	cmp	r0, #0
   15ab8:	bne	15a28 <__flatcc_fb_gen_c_includes@@Base+0x54>
   15abc:	ldr	r1, [sp, #8]
   15ac0:	ldr	r0, [r6, #204]	; 0xcc
   15ac4:	str	r4, [sp]
   15ac8:	mov	r2, r5
   15acc:	str	r1, [sp, #4]
   15ad0:	ldr	r1, [pc, #92]	; 15b34 <__flatcc_fb_gen_c_includes@@Base+0x160>
   15ad4:	ldr	r3, [sp, #12]
   15ad8:	add	r1, pc, r1
   15adc:	bl	148bc <fprintf@plt>
   15ae0:	b	15a30 <__flatcc_fb_gen_c_includes@@Base+0x5c>
   15ae4:	ldr	r1, [pc, #60]	; 15b28 <__flatcc_fb_gen_c_includes@@Base+0x154>
   15ae8:	add	r0, sp, #16
   15aec:	mov	r2, #0
   15af0:	add	r1, pc, r1
   15af4:	bl	26b1c <str_set_destroy@@Base>
   15af8:	sub	sp, fp, #28
   15afc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15b00:	ldr	r0, [pc, #36]	; 15b2c <__flatcc_fb_gen_c_includes@@Base+0x158>
   15b04:	mov	r1, #34	; 0x22
   15b08:	mov	r2, #1
   15b0c:	ldr	r0, [pc, r0]
   15b10:	ldr	r3, [r0]
   15b14:	ldr	r0, [pc, #20]	; 15b30 <__flatcc_fb_gen_c_includes@@Base+0x15c>
   15b18:	add	r0, pc, r0
   15b1c:	bl	14850 <fwrite@plt>
   15b20:	mov	r0, #1
   15b24:	bl	14898 <exit@plt>
   15b28:	andeq	r0, r0, r0, asr #32
   15b2c:	muleq	r5, r0, r5
   15b30:	andeq	r9, r2, pc, lsr #13
   15b34:	muleq	r2, r8, r8
   15b38:	mov	r0, r1
   15b3c:	b	147fc <free@plt>

00015b40 <__flatcc_fb_copy_scope@@Base>:
   15b40:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15b44:	add	fp, sp, #24
   15b48:	mov	r4, r1
   15b4c:	ldr	r1, [r0]
   15b50:	ldr	r5, [r0, #24]
   15b54:	mov	r6, r0
   15b58:	cmp	r1, #0
   15b5c:	mov	r0, r5
   15b60:	beq	15b88 <__flatcc_fb_copy_scope@@Base+0x48>
   15b64:	mov	r0, r5
   15b68:	ldr	r2, [r1]
   15b6c:	ldr	r1, [r1, #4]
   15b70:	ldr	r1, [r1, #4]
   15b74:	cmp	r2, #0
   15b78:	add	r0, r0, r1
   15b7c:	mov	r1, r2
   15b80:	add	r0, r0, #1
   15b84:	bne	15b68 <__flatcc_fb_copy_scope@@Base+0x28>
   15b88:	cmp	r0, #101	; 0x65
   15b8c:	bls	15b98 <__flatcc_fb_copy_scope@@Base+0x58>
   15b90:	mvn	r5, #0
   15b94:	b	15be8 <__flatcc_fb_copy_scope@@Base+0xa8>
   15b98:	ldr	r1, [r6, #20]
   15b9c:	mov	r0, r4
   15ba0:	mov	r2, r5
   15ba4:	bl	14808 <memcpy@plt>
   15ba8:	ldr	r7, [r6]
   15bac:	cmp	r7, #0
   15bb0:	beq	15be4 <__flatcc_fb_copy_scope@@Base+0xa4>
   15bb4:	mov	r8, #95	; 0x5f
   15bb8:	ldr	r2, [r7, #4]
   15bbc:	add	r0, r4, r5
   15bc0:	ldm	r2, {r1, r6}
   15bc4:	mov	r2, r6
   15bc8:	bl	14808 <memcpy@plt>
   15bcc:	add	r0, r6, r5
   15bd0:	strb	r8, [r4, r0]
   15bd4:	add	r5, r0, #1
   15bd8:	ldr	r7, [r7]
   15bdc:	cmp	r7, #0
   15be0:	bne	15bb8 <__flatcc_fb_copy_scope@@Base+0x78>
   15be4:	add	r4, r4, r5
   15be8:	mov	r0, #0
   15bec:	strb	r0, [r4]
   15bf0:	mov	r0, r5
   15bf4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00015bf8 <__flatcc_fb_scoped_symbol_name@@Base>:
   15bf8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15bfc:	add	fp, sp, #24
   15c00:	mov	r6, r0
   15c04:	ldr	r0, [r2, #204]	; 0xcc
   15c08:	ldr	r8, [r1, #4]
   15c0c:	mov	r4, r2
   15c10:	cmp	r0, r6
   15c14:	beq	15cbc <__flatcc_fb_scoped_symbol_name@@Base+0xc4>
   15c18:	ldr	r1, [r6]
   15c1c:	ldr	r5, [r6, #24]
   15c20:	cmp	r1, #0
   15c24:	mov	r0, r5
   15c28:	beq	15c50 <__flatcc_fb_scoped_symbol_name@@Base+0x58>
   15c2c:	mov	r0, r5
   15c30:	ldr	r2, [r1]
   15c34:	ldr	r1, [r1, #4]
   15c38:	ldr	r1, [r1, #4]
   15c3c:	cmp	r2, #0
   15c40:	add	r0, r0, r1
   15c44:	mov	r1, r2
   15c48:	add	r0, r0, #1
   15c4c:	bne	15c30 <__flatcc_fb_scoped_symbol_name@@Base+0x38>
   15c50:	cmp	r0, #102	; 0x66
   15c54:	bcs	15d28 <__flatcc_fb_scoped_symbol_name@@Base+0x130>
   15c58:	ldr	r1, [r6, #20]
   15c5c:	mov	r0, r4
   15c60:	mov	r2, r5
   15c64:	bl	14808 <memcpy@plt>
   15c68:	ldr	r7, [r6]
   15c6c:	cmp	r7, #0
   15c70:	beq	15ca4 <__flatcc_fb_scoped_symbol_name@@Base+0xac>
   15c74:	mov	r9, #95	; 0x5f
   15c78:	ldr	r2, [r7, #4]
   15c7c:	add	r0, r4, r5
   15c80:	ldm	r2, {r1, r6}
   15c84:	mov	r2, r6
   15c88:	bl	14808 <memcpy@plt>
   15c8c:	add	r0, r6, r5
   15c90:	strb	r9, [r4, r0]
   15c94:	add	r5, r0, #1
   15c98:	ldr	r7, [r7]
   15c9c:	cmp	r7, #0
   15ca0:	bne	15c78 <__flatcc_fb_scoped_symbol_name@@Base+0x80>
   15ca4:	mov	r0, #0
   15ca8:	cmn	r5, #1
   15cac:	strb	r0, [r4, r5]
   15cb0:	mov	r0, r4
   15cb4:	str	r5, [r0, #208]!	; 0xd0
   15cb8:	ble	15d3c <__flatcc_fb_scoped_symbol_name@@Base+0x144>
   15cbc:	ldr	r2, [r8, #4]
   15cc0:	ldr	r0, [r4, #208]	; 0xd0
   15cc4:	add	r1, r0, r2
   15cc8:	str	r2, [r4, #212]	; 0xd4
   15ccc:	cmp	r1, #204	; 0xcc
   15cd0:	str	r1, [r4, #216]	; 0xd8
   15cd4:	bge	15cf4 <__flatcc_fb_scoped_symbol_name@@Base+0xfc>
   15cd8:	ldr	r1, [r8]
   15cdc:	add	r0, r4, r0
   15ce0:	bl	14808 <memcpy@plt>
   15ce4:	ldr	r0, [r4, #216]	; 0xd8
   15ce8:	mov	r1, #0
   15cec:	strb	r1, [r4, r0]
   15cf0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15cf4:	ldr	r3, [r8]
   15cf8:	ldr	r0, [pc, #112]	; 15d70 <__flatcc_fb_scoped_symbol_name@@Base+0x178>
   15cfc:	ldr	r0, [pc, r0]
   15d00:	ldr	r0, [r0]
   15d04:	ldr	r1, [pc, #104]	; 15d74 <__flatcc_fb_scoped_symbol_name@@Base+0x17c>
   15d08:	add	r1, pc, r1
   15d0c:	bl	148bc <fprintf@plt>
   15d10:	ldr	r0, [r4, #208]	; 0xd0
   15d14:	mov	r1, #203	; 0xcb
   15d18:	rsb	r2, r0, #203	; 0xcb
   15d1c:	str	r2, [r4, #212]	; 0xd4
   15d20:	str	r1, [r4, #216]	; 0xd8
   15d24:	b	15cd8 <__flatcc_fb_scoped_symbol_name@@Base+0xe0>
   15d28:	mov	r0, #0
   15d2c:	mvn	r1, #0
   15d30:	strb	r0, [r4]
   15d34:	mov	r0, r4
   15d38:	str	r1, [r0, #208]!	; 0xd0
   15d3c:	mov	r1, #0
   15d40:	mov	r2, #1
   15d44:	str	r1, [r0]
   15d48:	mov	r1, #28
   15d4c:	ldr	r0, [pc, #20]	; 15d68 <__flatcc_fb_scoped_symbol_name@@Base+0x170>
   15d50:	ldr	r0, [pc, r0]
   15d54:	ldr	r3, [r0]
   15d58:	ldr	r0, [pc, #12]	; 15d6c <__flatcc_fb_scoped_symbol_name@@Base+0x174>
   15d5c:	add	r0, pc, r0
   15d60:	bl	14850 <fwrite@plt>
   15d64:	b	15cbc <__flatcc_fb_scoped_symbol_name@@Base+0xc4>
   15d68:	andeq	r5, r5, ip, asr #6
   15d6c:	andeq	r9, r2, r9, lsr r6
   15d70:	andeq	r5, r5, r0, lsr #7
   15d74:	andeq	r9, r2, sl, lsr #13

00015d78 <__flatcc_fb_codegen_common_c@@Base>:
   15d78:	push	{r4, r5, r6, sl, fp, lr}
   15d7c:	add	fp, sp, #16
   15d80:	mov	r4, r0
   15d84:	bl	148b0 <strlen@plt>
   15d88:	sub	r5, r0, #1
   15d8c:	ldr	r0, [r4, #212]	; 0xd4
   15d90:	ldr	r1, [r0, #144]	; 0x90
   15d94:	cmp	r1, #0
   15d98:	beq	15e0c <__flatcc_fb_codegen_common_c@@Base+0x94>
   15d9c:	ldr	r3, [pc, #244]	; 15e98 <__flatcc_fb_codegen_common_c@@Base+0x120>
   15da0:	mov	r0, r4
   15da4:	mov	r1, r4
   15da8:	mov	r2, r5
   15dac:	add	r3, pc, r3
   15db0:	bl	15630 <__flatcc_fb_open_output_file@@Base>
   15db4:	mvn	r6, #0
   15db8:	cmp	r0, #0
   15dbc:	bne	15e3c <__flatcc_fb_codegen_common_c@@Base+0xc4>
   15dc0:	mov	r0, r4
   15dc4:	bl	16180 <__flatcc_fb_gen_common_c_header@@Base>
   15dc8:	mov	r6, r0
   15dcc:	ldr	r0, [r4, #212]	; 0xd4
   15dd0:	ldr	r1, [r0, #124]	; 0x7c
   15dd4:	cmp	r1, #0
   15dd8:	bne	15e00 <__flatcc_fb_codegen_common_c@@Base+0x88>
   15ddc:	ldr	r0, [r0, #108]	; 0x6c
   15de0:	cmp	r0, #0
   15de4:	bne	15e00 <__flatcc_fb_codegen_common_c@@Base+0x88>
   15de8:	ldr	r0, [r4, #204]	; 0xcc
   15dec:	cmp	r0, #0
   15df0:	beq	15e00 <__flatcc_fb_codegen_common_c@@Base+0x88>
   15df4:	bl	14904 <fclose@plt>
   15df8:	mov	r0, #0
   15dfc:	str	r0, [r4, #204]	; 0xcc
   15e00:	cmp	r6, #0
   15e04:	bne	15e3c <__flatcc_fb_codegen_common_c@@Base+0xc4>
   15e08:	ldr	r0, [r4, #212]	; 0xd4
   15e0c:	ldr	r0, [r0, #148]	; 0x94
   15e10:	cmp	r0, #0
   15e14:	beq	15e68 <__flatcc_fb_codegen_common_c@@Base+0xf0>
   15e18:	ldr	r3, [pc, #124]	; 15e9c <__flatcc_fb_codegen_common_c@@Base+0x124>
   15e1c:	mov	r0, r4
   15e20:	mov	r1, r4
   15e24:	mov	r2, r5
   15e28:	add	r3, pc, r3
   15e2c:	bl	15630 <__flatcc_fb_open_output_file@@Base>
   15e30:	mvn	r6, #0
   15e34:	cmp	r0, #0
   15e38:	beq	15e44 <__flatcc_fb_codegen_common_c@@Base+0xcc>
   15e3c:	mov	r0, r6
   15e40:	pop	{r4, r5, r6, sl, fp, pc}
   15e44:	mov	r0, r4
   15e48:	bl	19c34 <__flatcc_fb_gen_common_c_builder_header@@Base>
   15e4c:	ldr	r0, [r4, #212]	; 0xd4
   15e50:	ldr	r1, [r0, #124]	; 0x7c
   15e54:	cmp	r1, #0
   15e58:	bne	15e68 <__flatcc_fb_codegen_common_c@@Base+0xf0>
   15e5c:	ldr	r0, [r0, #108]	; 0x6c
   15e60:	cmp	r0, #0
   15e64:	beq	15e74 <__flatcc_fb_codegen_common_c@@Base+0xfc>
   15e68:	mov	r6, #0
   15e6c:	mov	r0, r6
   15e70:	pop	{r4, r5, r6, sl, fp, pc}
   15e74:	ldr	r0, [r4, #204]	; 0xcc
   15e78:	mov	r6, #0
   15e7c:	cmp	r0, #0
   15e80:	beq	15e3c <__flatcc_fb_codegen_common_c@@Base+0xc4>
   15e84:	bl	14904 <fclose@plt>
   15e88:	mov	r6, #0
   15e8c:	str	r6, [r4, #204]	; 0xcc
   15e90:	mov	r0, r6
   15e94:	pop	{r4, r5, r6, sl, fp, pc}
   15e98:	andeq	r9, r2, ip, lsr #12
   15e9c:	andeq	r9, r2, r1, asr #11

00015ea0 <__flatcc_fb_codegen_c@@Base>:
   15ea0:	push	{r4, r5, r6, sl, fp, lr}
   15ea4:	add	fp, sp, #16
   15ea8:	str	r1, [r0, #208]	; 0xd0
   15eac:	mov	r4, r0
   15eb0:	mov	r2, #0
   15eb4:	ldr	r0, [r1, #60]	; 0x3c
   15eb8:	mov	r1, #0
   15ebc:	bl	28760 <fb_scope_table_find@@Base>
   15ec0:	str	r0, [r4, #216]	; 0xd8
   15ec4:	ldr	r0, [r4, #208]	; 0xd0
   15ec8:	ldr	r6, [r0, #160]	; 0xa0
   15ecc:	mov	r0, r6
   15ed0:	bl	148b0 <strlen@plt>
   15ed4:	ldr	r1, [r4, #212]	; 0xd4
   15ed8:	mov	r5, r0
   15edc:	ldr	r0, [r1, #152]	; 0x98
   15ee0:	cmp	r0, #0
   15ee4:	beq	15f58 <__flatcc_fb_codegen_c@@Base+0xb8>
   15ee8:	ldr	r3, [pc, #636]	; 1616c <__flatcc_fb_codegen_c@@Base+0x2cc>
   15eec:	mov	r0, r4
   15ef0:	mov	r1, r6
   15ef4:	mov	r2, r5
   15ef8:	add	r3, pc, r3
   15efc:	bl	15630 <__flatcc_fb_open_output_file@@Base>
   15f00:	mov	r1, r0
   15f04:	mvn	r0, #0
   15f08:	cmp	r1, #0
   15f0c:	bne	16110 <__flatcc_fb_codegen_c@@Base+0x270>
   15f10:	mov	r0, r4
   15f14:	bl	16f24 <__flatcc_fb_gen_c_reader@@Base>
   15f18:	cmp	r0, #0
   15f1c:	bne	16110 <__flatcc_fb_codegen_c@@Base+0x270>
   15f20:	ldr	r1, [r4, #212]	; 0xd4
   15f24:	ldr	r0, [r1, #124]	; 0x7c
   15f28:	cmp	r0, #0
   15f2c:	bne	15f58 <__flatcc_fb_codegen_c@@Base+0xb8>
   15f30:	ldr	r0, [r1, #108]	; 0x6c
   15f34:	cmp	r0, #0
   15f38:	bne	15f58 <__flatcc_fb_codegen_c@@Base+0xb8>
   15f3c:	ldr	r0, [r4, #204]	; 0xcc
   15f40:	cmp	r0, #0
   15f44:	beq	15f58 <__flatcc_fb_codegen_c@@Base+0xb8>
   15f48:	bl	14904 <fclose@plt>
   15f4c:	mov	r0, #0
   15f50:	str	r0, [r4, #204]	; 0xcc
   15f54:	ldr	r1, [r4, #212]	; 0xd4
   15f58:	ldr	r0, [r1, #156]	; 0x9c
   15f5c:	cmp	r0, #0
   15f60:	beq	15fd8 <__flatcc_fb_codegen_c@@Base+0x138>
   15f64:	ldr	r0, [r4, #208]	; 0xd0
   15f68:	mov	r2, r5
   15f6c:	ldr	r1, [r0, #160]	; 0xa0
   15f70:	ldr	r3, [pc, #504]	; 16170 <__flatcc_fb_codegen_c@@Base+0x2d0>
   15f74:	mov	r0, r4
   15f78:	add	r3, pc, r3
   15f7c:	bl	15630 <__flatcc_fb_open_output_file@@Base>
   15f80:	mov	r1, r0
   15f84:	mvn	r0, #0
   15f88:	cmp	r1, #0
   15f8c:	bne	16110 <__flatcc_fb_codegen_c@@Base+0x270>
   15f90:	mov	r0, r4
   15f94:	bl	1a658 <__flatcc_fb_gen_c_builder@@Base>
   15f98:	cmp	r0, #0
   15f9c:	bne	16110 <__flatcc_fb_codegen_c@@Base+0x270>
   15fa0:	ldr	r1, [r4, #212]	; 0xd4
   15fa4:	ldr	r0, [r1, #124]	; 0x7c
   15fa8:	cmp	r0, #0
   15fac:	bne	15fd8 <__flatcc_fb_codegen_c@@Base+0x138>
   15fb0:	ldr	r0, [r1, #108]	; 0x6c
   15fb4:	cmp	r0, #0
   15fb8:	bne	15fd8 <__flatcc_fb_codegen_c@@Base+0x138>
   15fbc:	ldr	r0, [r4, #204]	; 0xcc
   15fc0:	cmp	r0, #0
   15fc4:	beq	15fd8 <__flatcc_fb_codegen_c@@Base+0x138>
   15fc8:	bl	14904 <fclose@plt>
   15fcc:	mov	r0, #0
   15fd0:	str	r0, [r4, #204]	; 0xcc
   15fd4:	ldr	r1, [r4, #212]	; 0xd4
   15fd8:	ldr	r0, [r1, #160]	; 0xa0
   15fdc:	cmp	r0, #0
   15fe0:	beq	16058 <__flatcc_fb_codegen_c@@Base+0x1b8>
   15fe4:	ldr	r0, [r4, #208]	; 0xd0
   15fe8:	mov	r2, r5
   15fec:	ldr	r1, [r0, #160]	; 0xa0
   15ff0:	ldr	r3, [pc, #380]	; 16174 <__flatcc_fb_codegen_c@@Base+0x2d4>
   15ff4:	mov	r0, r4
   15ff8:	add	r3, pc, r3
   15ffc:	bl	15630 <__flatcc_fb_open_output_file@@Base>
   16000:	mov	r1, r0
   16004:	mvn	r0, #0
   16008:	cmp	r1, #0
   1600c:	bne	16110 <__flatcc_fb_codegen_c@@Base+0x270>
   16010:	mov	r0, r4
   16014:	bl	1d0a0 <__flatcc_fb_gen_c_verifier@@Base>
   16018:	cmp	r0, #0
   1601c:	bne	16110 <__flatcc_fb_codegen_c@@Base+0x270>
   16020:	ldr	r1, [r4, #212]	; 0xd4
   16024:	ldr	r0, [r1, #124]	; 0x7c
   16028:	cmp	r0, #0
   1602c:	bne	16058 <__flatcc_fb_codegen_c@@Base+0x1b8>
   16030:	ldr	r0, [r1, #108]	; 0x6c
   16034:	cmp	r0, #0
   16038:	bne	16058 <__flatcc_fb_codegen_c@@Base+0x1b8>
   1603c:	ldr	r0, [r4, #204]	; 0xcc
   16040:	cmp	r0, #0
   16044:	beq	16058 <__flatcc_fb_codegen_c@@Base+0x1b8>
   16048:	bl	14904 <fclose@plt>
   1604c:	mov	r0, #0
   16050:	str	r0, [r4, #204]	; 0xcc
   16054:	ldr	r1, [r4, #212]	; 0xd4
   16058:	ldr	r0, [r1, #164]	; 0xa4
   1605c:	cmp	r0, #0
   16060:	beq	160d8 <__flatcc_fb_codegen_c@@Base+0x238>
   16064:	ldr	r0, [r4, #208]	; 0xd0
   16068:	mov	r2, r5
   1606c:	ldr	r1, [r0, #160]	; 0xa0
   16070:	ldr	r3, [pc, #256]	; 16178 <__flatcc_fb_codegen_c@@Base+0x2d8>
   16074:	mov	r0, r4
   16078:	add	r3, pc, r3
   1607c:	bl	15630 <__flatcc_fb_open_output_file@@Base>
   16080:	mov	r1, r0
   16084:	mvn	r0, #0
   16088:	cmp	r1, #0
   1608c:	bne	16110 <__flatcc_fb_codegen_c@@Base+0x270>
   16090:	mov	r0, r4
   16094:	bl	1dbfc <__flatcc_fb_gen_c_json_parser@@Base>
   16098:	cmp	r0, #0
   1609c:	bne	16110 <__flatcc_fb_codegen_c@@Base+0x270>
   160a0:	ldr	r1, [r4, #212]	; 0xd4
   160a4:	ldr	r0, [r1, #124]	; 0x7c
   160a8:	cmp	r0, #0
   160ac:	bne	160d8 <__flatcc_fb_codegen_c@@Base+0x238>
   160b0:	ldr	r0, [r1, #108]	; 0x6c
   160b4:	cmp	r0, #0
   160b8:	bne	160d8 <__flatcc_fb_codegen_c@@Base+0x238>
   160bc:	ldr	r0, [r4, #204]	; 0xcc
   160c0:	cmp	r0, #0
   160c4:	beq	160d8 <__flatcc_fb_codegen_c@@Base+0x238>
   160c8:	bl	14904 <fclose@plt>
   160cc:	mov	r0, #0
   160d0:	str	r0, [r4, #204]	; 0xcc
   160d4:	ldr	r1, [r4, #212]	; 0xd4
   160d8:	ldr	r0, [r1, #168]	; 0xa8
   160dc:	cmp	r0, #0
   160e0:	beq	16140 <__flatcc_fb_codegen_c@@Base+0x2a0>
   160e4:	ldr	r0, [r4, #208]	; 0xd0
   160e8:	mov	r2, r5
   160ec:	ldr	r1, [r0, #160]	; 0xa0
   160f0:	ldr	r3, [pc, #132]	; 1617c <__flatcc_fb_codegen_c@@Base+0x2dc>
   160f4:	mov	r0, r4
   160f8:	add	r3, pc, r3
   160fc:	bl	15630 <__flatcc_fb_open_output_file@@Base>
   16100:	mov	r1, r0
   16104:	mvn	r0, #0
   16108:	cmp	r1, #0
   1610c:	beq	16114 <__flatcc_fb_codegen_c@@Base+0x274>
   16110:	pop	{r4, r5, r6, sl, fp, pc}
   16114:	mov	r0, r4
   16118:	bl	237a8 <__flatcc_fb_gen_c_json_printer@@Base>
   1611c:	cmp	r0, #0
   16120:	popne	{r4, r5, r6, sl, fp, pc}
   16124:	ldr	r0, [r4, #212]	; 0xd4
   16128:	ldr	r1, [r0, #124]	; 0x7c
   1612c:	cmp	r1, #0
   16130:	bne	16140 <__flatcc_fb_codegen_c@@Base+0x2a0>
   16134:	ldr	r0, [r0, #108]	; 0x6c
   16138:	cmp	r0, #0
   1613c:	beq	16148 <__flatcc_fb_codegen_c@@Base+0x2a8>
   16140:	mov	r0, #0
   16144:	pop	{r4, r5, r6, sl, fp, pc}
   16148:	ldr	r1, [r4, #204]	; 0xcc
   1614c:	mov	r0, #0
   16150:	cmp	r1, #0
   16154:	beq	16110 <__flatcc_fb_codegen_c@@Base+0x270>
   16158:	mov	r0, r1
   1615c:	bl	14904 <fclose@plt>
   16160:	mov	r0, #0
   16164:	str	r0, [r4, #204]	; 0xcc
   16168:	pop	{r4, r5, r6, sl, fp, pc}
   1616c:	andeq	r0, r4, r9, ror #5
   16170:	andeq	pc, r3, r2, asr sp	; <UNPREDICTABLE>
   16174:	andeq	r9, r2, r3, lsl #8
   16178:	andeq	r9, r2, pc, lsl #7
   1617c:	andeq	r9, r2, lr, lsl r3

00016180 <__flatcc_fb_gen_common_c_header@@Base>:
   16180:	push	{r4, r5, fp, lr}
   16184:	add	fp, sp, #8
   16188:	sub	sp, sp, #232	; 0xe8
   1618c:	mov	r5, r0
   16190:	ldr	r0, [r0, #204]	; 0xcc
   16194:	ldr	r1, [pc, #3140]	; 16de0 <__flatcc_fb_gen_common_c_header@@Base+0xc60>
   16198:	add	r4, r5, #102	; 0x66
   1619c:	mov	r2, r4
   161a0:	mov	r3, r4
   161a4:	add	r1, pc, r1
   161a8:	bl	148bc <fprintf@plt>
   161ac:	ldr	r3, [r5, #204]	; 0xcc
   161b0:	ldr	r0, [pc, #3116]	; 16de4 <__flatcc_fb_gen_common_c_header@@Base+0xc64>
   161b4:	mov	r1, #81	; 0x51
   161b8:	mov	r2, #1
   161bc:	add	r0, pc, r0
   161c0:	bl	14850 <fwrite@plt>
   161c4:	ldr	r3, [r5, #204]	; 0xcc
   161c8:	ldr	r0, [pc, #3096]	; 16de8 <__flatcc_fb_gen_common_c_header@@Base+0xc68>
   161cc:	mov	r1, #52	; 0x34
   161d0:	mov	r2, #1
   161d4:	add	r0, pc, r0
   161d8:	bl	14850 <fwrite@plt>
   161dc:	ldr	r0, [r5, #212]	; 0xd4
   161e0:	ldr	r1, [r0, #136]	; 0x88
   161e4:	cmp	r1, #0
   161e8:	bne	16208 <__flatcc_fb_gen_common_c_header@@Base+0x88>
   161ec:	ldr	r3, [r5, #204]	; 0xcc
   161f0:	ldr	r0, [pc, #3060]	; 16dec <__flatcc_fb_gen_common_c_header@@Base+0xc6c>
   161f4:	mov	r1, #135	; 0x87
   161f8:	mov	r2, #1
   161fc:	add	r0, pc, r0
   16200:	bl	14850 <fwrite@plt>
   16204:	ldr	r0, [r5, #212]	; 0xd4
   16208:	ldr	r0, [r0, #140]	; 0x8c
   1620c:	cmp	r0, #0
   16210:	beq	1622c <__flatcc_fb_gen_common_c_header@@Base+0xac>
   16214:	ldr	r3, [r5, #204]	; 0xcc
   16218:	ldr	r0, [pc, #3024]	; 16df0 <__flatcc_fb_gen_common_c_header@@Base+0xc70>
   1621c:	mov	r1, #36	; 0x24
   16220:	mov	r2, #1
   16224:	add	r0, pc, r0
   16228:	bl	14850 <fwrite@plt>
   1622c:	ldr	r3, [r5, #204]	; 0xcc
   16230:	ldr	r0, [pc, #3004]	; 16df4 <__flatcc_fb_gen_common_c_header@@Base+0xc74>
   16234:	mov	r1, #41	; 0x29
   16238:	mov	r2, #1
   1623c:	add	r0, pc, r0
   16240:	bl	14850 <fwrite@plt>
   16244:	ldr	r1, [pc, #2988]	; 16df8 <__flatcc_fb_gen_common_c_header@@Base+0xc78>
   16248:	mov	r0, r5
   1624c:	add	r1, pc, r1
   16250:	bl	147e4 <strcmp@plt>
   16254:	cmp	r0, #0
   16258:	beq	162e0 <__flatcc_fb_gen_common_c_header@@Base+0x160>
   1625c:	ldr	r0, [r5, #204]	; 0xcc
   16260:	str	r5, [sp]
   16264:	str	r5, [sp, #4]
   16268:	str	r5, [sp, #8]
   1626c:	mov	r2, r5
   16270:	mov	r3, r5
   16274:	ldr	r1, [pc, #2944]	; 16dfc <__flatcc_fb_gen_common_c_header@@Base+0xc7c>
   16278:	add	r1, pc, r1
   1627c:	bl	148bc <fprintf@plt>
   16280:	ldr	r0, [r5, #204]	; 0xcc
   16284:	str	r5, [sp]
   16288:	str	r5, [sp, #4]
   1628c:	mov	r3, r5
   16290:	ldr	r1, [pc, #2920]	; 16e00 <__flatcc_fb_gen_common_c_header@@Base+0xc80>
   16294:	ldr	r2, [pc, #2920]	; 16e04 <__flatcc_fb_gen_common_c_header@@Base+0xc84>
   16298:	add	r1, pc, r1
   1629c:	add	r2, pc, r2
   162a0:	bl	148bc <fprintf@plt>
   162a4:	ldr	r0, [r5, #204]	; 0xcc
   162a8:	str	r5, [sp]
   162ac:	str	r5, [sp, #4]
   162b0:	str	r5, [sp, #8]
   162b4:	mov	r2, r5
   162b8:	mov	r3, r5
   162bc:	ldr	r1, [pc, #2884]	; 16e08 <__flatcc_fb_gen_common_c_header@@Base+0xc88>
   162c0:	add	r1, pc, r1
   162c4:	bl	148bc <fprintf@plt>
   162c8:	ldr	r0, [r5, #204]	; 0xcc
   162cc:	ldr	r1, [pc, #2872]	; 16e0c <__flatcc_fb_gen_common_c_header@@Base+0xc8c>
   162d0:	mov	r2, r4
   162d4:	mov	r3, r4
   162d8:	add	r1, pc, r1
   162dc:	bl	148bc <fprintf@plt>
   162e0:	ldr	r0, [r5, #204]	; 0xcc
   162e4:	ldr	r1, [pc, #2852]	; 16e10 <__flatcc_fb_gen_common_c_header@@Base+0xc90>
   162e8:	mov	r2, r5
   162ec:	mov	r3, r5
   162f0:	add	r1, pc, r1
   162f4:	bl	148bc <fprintf@plt>
   162f8:	ldr	r0, [r5, #204]	; 0xcc
   162fc:	str	r5, [sp]
   16300:	str	r5, [sp, #4]
   16304:	str	r5, [sp, #8]
   16308:	str	r5, [sp, #12]
   1630c:	str	r5, [sp, #16]
   16310:	mov	r2, r5
   16314:	mov	r3, r5
   16318:	ldr	r1, [pc, #2804]	; 16e14 <__flatcc_fb_gen_common_c_header@@Base+0xc94>
   1631c:	add	r1, pc, r1
   16320:	bl	148bc <fprintf@plt>
   16324:	ldr	r0, [r5, #204]	; 0xcc
   16328:	ldr	r1, [pc, #2792]	; 16e18 <__flatcc_fb_gen_common_c_header@@Base+0xc98>
   1632c:	mov	r2, r5
   16330:	mov	r3, r5
   16334:	add	r1, pc, r1
   16338:	bl	148bc <fprintf@plt>
   1633c:	ldr	r0, [r5, #204]	; 0xcc
   16340:	str	r5, [sp]
   16344:	str	r5, [sp, #4]
   16348:	mov	r2, r5
   1634c:	mov	r3, r5
   16350:	ldr	r1, [pc, #2756]	; 16e1c <__flatcc_fb_gen_common_c_header@@Base+0xc9c>
   16354:	add	r1, pc, r1
   16358:	bl	148bc <fprintf@plt>
   1635c:	ldr	r0, [r5, #212]	; 0xd4
   16360:	ldr	r2, [r5, #204]	; 0xcc
   16364:	ldr	r0, [r0, #32]
   16368:	cmp	r0, #0
   1636c:	beq	16388 <__flatcc_fb_gen_common_c_header@@Base+0x208>
   16370:	ldr	r1, [pc, #2728]	; 16e20 <__flatcc_fb_gen_common_c_header@@Base+0xca0>
   16374:	mov	r0, r2
   16378:	mov	r2, r5
   1637c:	add	r1, pc, r1
   16380:	bl	148bc <fprintf@plt>
   16384:	b	16394 <__flatcc_fb_gen_common_c_header@@Base+0x214>
   16388:	mov	r0, #10
   1638c:	mov	r1, r2
   16390:	bl	1491c <fputc@plt>
   16394:	ldr	r0, [r5, #204]	; 0xcc
   16398:	ldr	r1, [pc, #2692]	; 16e24 <__flatcc_fb_gen_common_c_header@@Base+0xca4>
   1639c:	mov	r2, r5
   163a0:	mov	r3, r5
   163a4:	add	r1, pc, r1
   163a8:	bl	148bc <fprintf@plt>
   163ac:	ldr	r0, [r5, #204]	; 0xcc
   163b0:	str	r5, [sp]
   163b4:	str	r5, [sp, #4]
   163b8:	str	r5, [sp, #8]
   163bc:	mov	r2, r5
   163c0:	mov	r3, r5
   163c4:	ldr	r1, [pc, #2652]	; 16e28 <__flatcc_fb_gen_common_c_header@@Base+0xca8>
   163c8:	add	r1, pc, r1
   163cc:	bl	148bc <fprintf@plt>
   163d0:	ldr	r0, [r5, #204]	; 0xcc
   163d4:	str	r5, [sp]
   163d8:	str	r5, [sp, #4]
   163dc:	str	r5, [sp, #8]
   163e0:	mov	r2, r5
   163e4:	mov	r3, r5
   163e8:	ldr	r1, [pc, #2620]	; 16e2c <__flatcc_fb_gen_common_c_header@@Base+0xcac>
   163ec:	add	r1, pc, r1
   163f0:	bl	148bc <fprintf@plt>
   163f4:	ldr	r0, [r5, #204]	; 0xcc
   163f8:	str	r5, [sp]
   163fc:	mov	r2, r5
   16400:	mov	r3, r5
   16404:	ldr	r1, [pc, #2596]	; 16e30 <__flatcc_fb_gen_common_c_header@@Base+0xcb0>
   16408:	add	r1, pc, r1
   1640c:	bl	148bc <fprintf@plt>
   16410:	ldr	r0, [r5, #204]	; 0xcc
   16414:	str	r5, [sp]
   16418:	mov	r2, r5
   1641c:	mov	r3, r5
   16420:	ldr	r1, [pc, #2572]	; 16e34 <__flatcc_fb_gen_common_c_header@@Base+0xcb4>
   16424:	add	r1, pc, r1
   16428:	bl	148bc <fprintf@plt>
   1642c:	ldr	r0, [r5, #204]	; 0xcc
   16430:	str	r5, [sp]
   16434:	mov	r2, r5
   16438:	mov	r3, r5
   1643c:	ldr	r1, [pc, #2548]	; 16e38 <__flatcc_fb_gen_common_c_header@@Base+0xcb8>
   16440:	add	r1, pc, r1
   16444:	bl	148bc <fprintf@plt>
   16448:	ldr	r0, [r5, #204]	; 0xcc
   1644c:	str	r5, [sp]
   16450:	str	r5, [sp, #4]
   16454:	str	r5, [sp, #8]
   16458:	mov	r2, r5
   1645c:	mov	r3, r5
   16460:	ldr	r1, [pc, #2516]	; 16e3c <__flatcc_fb_gen_common_c_header@@Base+0xcbc>
   16464:	add	r1, pc, r1
   16468:	bl	148bc <fprintf@plt>
   1646c:	ldr	r0, [r5, #212]	; 0xd4
   16470:	ldr	r2, [r5, #204]	; 0xcc
   16474:	ldr	r0, [r0, #32]
   16478:	cmp	r0, #0
   1647c:	beq	16498 <__flatcc_fb_gen_common_c_header@@Base+0x318>
   16480:	ldr	r1, [pc, #2488]	; 16e40 <__flatcc_fb_gen_common_c_header@@Base+0xcc0>
   16484:	mov	r0, r2
   16488:	mov	r2, r5
   1648c:	add	r1, pc, r1
   16490:	bl	148bc <fprintf@plt>
   16494:	b	164a4 <__flatcc_fb_gen_common_c_header@@Base+0x324>
   16498:	mov	r0, #10
   1649c:	mov	r1, r2
   164a0:	bl	1491c <fputc@plt>
   164a4:	ldr	r0, [r5, #204]	; 0xcc
   164a8:	str	r5, [sp]
   164ac:	str	r5, [sp, #4]
   164b0:	mov	r2, r5
   164b4:	mov	r3, r5
   164b8:	ldr	r1, [pc, #2436]	; 16e44 <__flatcc_fb_gen_common_c_header@@Base+0xcc4>
   164bc:	add	r1, pc, r1
   164c0:	bl	148bc <fprintf@plt>
   164c4:	ldr	r0, [r5, #204]	; 0xcc
   164c8:	ldr	r1, [pc, #2424]	; 16e48 <__flatcc_fb_gen_common_c_header@@Base+0xcc8>
   164cc:	mov	r2, r5
   164d0:	mov	r3, r5
   164d4:	add	r1, pc, r1
   164d8:	bl	148bc <fprintf@plt>
   164dc:	ldr	r0, [r5, #204]	; 0xcc
   164e0:	str	r5, [sp]
   164e4:	mov	r2, r5
   164e8:	mov	r3, r5
   164ec:	ldr	r1, [pc, #2392]	; 16e4c <__flatcc_fb_gen_common_c_header@@Base+0xccc>
   164f0:	add	r1, pc, r1
   164f4:	bl	148bc <fprintf@plt>
   164f8:	ldr	r0, [r5, #204]	; 0xcc
   164fc:	ldr	r1, [pc, #2380]	; 16e50 <__flatcc_fb_gen_common_c_header@@Base+0xcd0>
   16500:	mov	r2, r5
   16504:	mov	r3, r5
   16508:	add	r1, pc, r1
   1650c:	bl	148bc <fprintf@plt>
   16510:	ldr	r0, [r5, #204]	; 0xcc
   16514:	str	r5, [sp]
   16518:	str	r5, [sp, #4]
   1651c:	mov	r2, r5
   16520:	mov	r3, r5
   16524:	ldr	r1, [pc, #2344]	; 16e54 <__flatcc_fb_gen_common_c_header@@Base+0xcd4>
   16528:	add	r1, pc, r1
   1652c:	bl	148bc <fprintf@plt>
   16530:	ldr	r0, [r5, #204]	; 0xcc
   16534:	ldr	r1, [pc, #2332]	; 16e58 <__flatcc_fb_gen_common_c_header@@Base+0xcd8>
   16538:	mov	r2, r5
   1653c:	mov	r3, r5
   16540:	add	r1, pc, r1
   16544:	bl	148bc <fprintf@plt>
   16548:	ldr	r0, [r5, #204]	; 0xcc
   1654c:	ldr	r1, [pc, #2312]	; 16e5c <__flatcc_fb_gen_common_c_header@@Base+0xcdc>
   16550:	mov	r2, r5
   16554:	mov	r3, r5
   16558:	add	r1, pc, r1
   1655c:	bl	148bc <fprintf@plt>
   16560:	ldr	r0, [r5, #204]	; 0xcc
   16564:	str	r5, [sp]
   16568:	str	r5, [sp, #4]
   1656c:	mov	r2, r5
   16570:	mov	r3, r5
   16574:	ldr	r1, [pc, #2276]	; 16e60 <__flatcc_fb_gen_common_c_header@@Base+0xce0>
   16578:	add	r1, pc, r1
   1657c:	bl	148bc <fprintf@plt>
   16580:	ldr	r0, [r5, #204]	; 0xcc
   16584:	str	r5, [sp, #32]
   16588:	str	r5, [sp, #36]	; 0x24
   1658c:	str	r5, [sp]
   16590:	str	r5, [sp, #4]
   16594:	str	r5, [sp, #8]
   16598:	str	r5, [sp, #12]
   1659c:	str	r5, [sp, #16]
   165a0:	str	r5, [sp, #20]
   165a4:	str	r5, [sp, #24]
   165a8:	str	r5, [sp, #28]
   165ac:	mov	r2, r5
   165b0:	mov	r3, r5
   165b4:	ldr	r1, [pc, #2216]	; 16e64 <__flatcc_fb_gen_common_c_header@@Base+0xce4>
   165b8:	add	r1, pc, r1
   165bc:	bl	148bc <fprintf@plt>
   165c0:	ldr	r0, [r5, #204]	; 0xcc
   165c4:	ldr	r1, [pc, #2204]	; 16e68 <__flatcc_fb_gen_common_c_header@@Base+0xce8>
   165c8:	mov	r2, r5
   165cc:	add	r1, pc, r1
   165d0:	bl	148bc <fprintf@plt>
   165d4:	ldr	r0, [r5, #204]	; 0xcc
   165d8:	str	r5, [sp]
   165dc:	str	r5, [sp, #4]
   165e0:	mov	r2, r5
   165e4:	mov	r3, r5
   165e8:	ldr	r1, [pc, #2172]	; 16e6c <__flatcc_fb_gen_common_c_header@@Base+0xcec>
   165ec:	add	r1, pc, r1
   165f0:	bl	148bc <fprintf@plt>
   165f4:	ldr	r0, [r5, #204]	; 0xcc
   165f8:	str	r5, [sp, #32]
   165fc:	str	r5, [sp, #36]	; 0x24
   16600:	str	r5, [sp, #40]	; 0x28
   16604:	str	r5, [sp, #44]	; 0x2c
   16608:	str	r5, [sp, #48]	; 0x30
   1660c:	str	r5, [sp, #52]	; 0x34
   16610:	str	r5, [sp, #56]	; 0x38
   16614:	str	r5, [sp]
   16618:	str	r5, [sp, #4]
   1661c:	str	r5, [sp, #8]
   16620:	str	r5, [sp, #12]
   16624:	str	r5, [sp, #16]
   16628:	str	r5, [sp, #20]
   1662c:	str	r5, [sp, #24]
   16630:	str	r5, [sp, #28]
   16634:	mov	r2, r5
   16638:	mov	r3, r5
   1663c:	ldr	r1, [pc, #2092]	; 16e70 <__flatcc_fb_gen_common_c_header@@Base+0xcf0>
   16640:	add	r1, pc, r1
   16644:	bl	148bc <fprintf@plt>
   16648:	ldr	r0, [r5, #204]	; 0xcc
   1664c:	str	r5, [sp]
   16650:	str	r5, [sp, #4]
   16654:	str	r5, [sp, #8]
   16658:	str	r5, [sp, #12]
   1665c:	str	r5, [sp, #16]
   16660:	str	r5, [sp, #20]
   16664:	mov	r2, r5
   16668:	mov	r3, r5
   1666c:	ldr	r1, [pc, #2048]	; 16e74 <__flatcc_fb_gen_common_c_header@@Base+0xcf4>
   16670:	add	r1, pc, r1
   16674:	bl	148bc <fprintf@plt>
   16678:	ldr	r0, [r5, #204]	; 0xcc
   1667c:	str	r5, [sp]
   16680:	str	r5, [sp, #4]
   16684:	mov	r2, r5
   16688:	mov	r3, r5
   1668c:	ldr	r1, [pc, #2020]	; 16e78 <__flatcc_fb_gen_common_c_header@@Base+0xcf8>
   16690:	add	r1, pc, r1
   16694:	bl	148bc <fprintf@plt>
   16698:	ldr	r0, [r5, #204]	; 0xcc
   1669c:	str	r5, [sp]
   166a0:	str	r5, [sp, #4]
   166a4:	mov	r2, r5
   166a8:	mov	r3, r5
   166ac:	ldr	r1, [pc, #1992]	; 16e7c <__flatcc_fb_gen_common_c_header@@Base+0xcfc>
   166b0:	add	r1, pc, r1
   166b4:	bl	148bc <fprintf@plt>
   166b8:	ldr	r0, [r5, #204]	; 0xcc
   166bc:	ldr	r1, [pc, #1980]	; 16e80 <__flatcc_fb_gen_common_c_header@@Base+0xd00>
   166c0:	mov	r2, r5
   166c4:	add	r1, pc, r1
   166c8:	bl	148bc <fprintf@plt>
   166cc:	ldr	r0, [r5, #204]	; 0xcc
   166d0:	ldr	r1, [pc, #1964]	; 16e84 <__flatcc_fb_gen_common_c_header@@Base+0xd04>
   166d4:	mov	r2, r5
   166d8:	add	r1, pc, r1
   166dc:	bl	148bc <fprintf@plt>
   166e0:	ldr	r0, [r5, #204]	; 0xcc
   166e4:	ldr	r1, [pc, #1948]	; 16e88 <__flatcc_fb_gen_common_c_header@@Base+0xd08>
   166e8:	mov	r2, r5
   166ec:	add	r1, pc, r1
   166f0:	bl	148bc <fprintf@plt>
   166f4:	ldr	r0, [r5, #204]	; 0xcc
   166f8:	ldr	r1, [pc, #1932]	; 16e8c <__flatcc_fb_gen_common_c_header@@Base+0xd0c>
   166fc:	mov	r2, r5
   16700:	add	r1, pc, r1
   16704:	bl	148bc <fprintf@plt>
   16708:	ldr	r0, [r5, #204]	; 0xcc
   1670c:	ldr	r1, [pc, #1916]	; 16e90 <__flatcc_fb_gen_common_c_header@@Base+0xd10>
   16710:	mov	r2, r5
   16714:	add	r1, pc, r1
   16718:	bl	148bc <fprintf@plt>
   1671c:	ldr	r0, [r5, #204]	; 0xcc
   16720:	str	r5, [sp]
   16724:	str	r5, [sp, #4]
   16728:	mov	r2, r5
   1672c:	mov	r3, r5
   16730:	ldr	r1, [pc, #1884]	; 16e94 <__flatcc_fb_gen_common_c_header@@Base+0xd14>
   16734:	add	r1, pc, r1
   16738:	bl	148bc <fprintf@plt>
   1673c:	ldr	r0, [r5, #204]	; 0xcc
   16740:	str	r5, [sp]
   16744:	str	r5, [sp, #4]
   16748:	str	r5, [sp, #8]
   1674c:	str	r5, [sp, #12]
   16750:	mov	r2, r5
   16754:	mov	r3, r5
   16758:	ldr	r1, [pc, #1848]	; 16e98 <__flatcc_fb_gen_common_c_header@@Base+0xd18>
   1675c:	add	r1, pc, r1
   16760:	bl	148bc <fprintf@plt>
   16764:	ldr	r0, [r5, #204]	; 0xcc
   16768:	str	r5, [sp]
   1676c:	mov	r2, r5
   16770:	mov	r3, r5
   16774:	ldr	r1, [pc, #1824]	; 16e9c <__flatcc_fb_gen_common_c_header@@Base+0xd1c>
   16778:	add	r1, pc, r1
   1677c:	bl	148bc <fprintf@plt>
   16780:	ldr	r0, [r5, #204]	; 0xcc
   16784:	str	r5, [sp, #32]
   16788:	str	r5, [sp]
   1678c:	str	r5, [sp, #4]
   16790:	str	r5, [sp, #8]
   16794:	str	r5, [sp, #12]
   16798:	str	r5, [sp, #16]
   1679c:	str	r5, [sp, #20]
   167a0:	str	r5, [sp, #24]
   167a4:	str	r5, [sp, #28]
   167a8:	mov	r2, r5
   167ac:	mov	r3, r5
   167b0:	ldr	r1, [pc, #1768]	; 16ea0 <__flatcc_fb_gen_common_c_header@@Base+0xd20>
   167b4:	add	r1, pc, r1
   167b8:	bl	148bc <fprintf@plt>
   167bc:	ldr	r0, [r5, #204]	; 0xcc
   167c0:	ldr	r1, [pc, #1756]	; 16ea4 <__flatcc_fb_gen_common_c_header@@Base+0xd24>
   167c4:	mov	r2, r5
   167c8:	mov	r3, r5
   167cc:	add	r1, pc, r1
   167d0:	bl	148bc <fprintf@plt>
   167d4:	ldr	r0, [r5, #204]	; 0xcc
   167d8:	str	r5, [sp]
   167dc:	mov	r2, r5
   167e0:	mov	r3, r5
   167e4:	ldr	r1, [pc, #1724]	; 16ea8 <__flatcc_fb_gen_common_c_header@@Base+0xd28>
   167e8:	add	r1, pc, r1
   167ec:	bl	148bc <fprintf@plt>
   167f0:	ldr	r0, [r5, #204]	; 0xcc
   167f4:	str	r5, [sp]
   167f8:	mov	r2, r5
   167fc:	mov	r3, r5
   16800:	ldr	r1, [pc, #1700]	; 16eac <__flatcc_fb_gen_common_c_header@@Base+0xd2c>
   16804:	add	r1, pc, r1
   16808:	bl	148bc <fprintf@plt>
   1680c:	ldr	r0, [r5, #204]	; 0xcc
   16810:	ldr	r1, [pc, #1688]	; 16eb0 <__flatcc_fb_gen_common_c_header@@Base+0xd30>
   16814:	mov	r2, r5
   16818:	add	r1, pc, r1
   1681c:	bl	148bc <fprintf@plt>
   16820:	ldr	r0, [r5, #204]	; 0xcc
   16824:	ldr	r1, [pc, #1672]	; 16eb4 <__flatcc_fb_gen_common_c_header@@Base+0xd34>
   16828:	mov	r2, r5
   1682c:	add	r1, pc, r1
   16830:	bl	148bc <fprintf@plt>
   16834:	ldr	r0, [r5, #204]	; 0xcc
   16838:	ldr	r1, [pc, #1656]	; 16eb8 <__flatcc_fb_gen_common_c_header@@Base+0xd38>
   1683c:	mov	r2, r5
   16840:	mov	r3, r5
   16844:	add	r1, pc, r1
   16848:	bl	148bc <fprintf@plt>
   1684c:	ldr	r0, [r5, #204]	; 0xcc
   16850:	ldr	r1, [pc, #1636]	; 16ebc <__flatcc_fb_gen_common_c_header@@Base+0xd3c>
   16854:	mov	r2, r5
   16858:	mov	r3, r5
   1685c:	add	r1, pc, r1
   16860:	bl	148bc <fprintf@plt>
   16864:	ldr	r0, [r5, #204]	; 0xcc
   16868:	str	r5, [sp, #32]
   1686c:	str	r5, [sp]
   16870:	str	r5, [sp, #4]
   16874:	str	r5, [sp, #8]
   16878:	str	r5, [sp, #12]
   1687c:	str	r5, [sp, #16]
   16880:	str	r5, [sp, #20]
   16884:	str	r5, [sp, #24]
   16888:	str	r5, [sp, #28]
   1688c:	mov	r2, r5
   16890:	mov	r3, r5
   16894:	ldr	r1, [pc, #1572]	; 16ec0 <__flatcc_fb_gen_common_c_header@@Base+0xd40>
   16898:	add	r1, pc, r1
   1689c:	bl	148bc <fprintf@plt>
   168a0:	ldr	r0, [r5, #204]	; 0xcc
   168a4:	str	r5, [sp, #32]
   168a8:	str	r5, [sp]
   168ac:	str	r5, [sp, #4]
   168b0:	str	r5, [sp, #8]
   168b4:	str	r5, [sp, #12]
   168b8:	str	r5, [sp, #16]
   168bc:	str	r5, [sp, #20]
   168c0:	str	r5, [sp, #24]
   168c4:	str	r5, [sp, #28]
   168c8:	mov	r2, r5
   168cc:	mov	r3, r5
   168d0:	ldr	r1, [pc, #1516]	; 16ec4 <__flatcc_fb_gen_common_c_header@@Base+0xd44>
   168d4:	add	r1, pc, r1
   168d8:	bl	148bc <fprintf@plt>
   168dc:	ldr	r0, [r5, #204]	; 0xcc
   168e0:	str	r5, [sp]
   168e4:	str	r5, [sp, #4]
   168e8:	str	r5, [sp, #8]
   168ec:	str	r5, [sp, #12]
   168f0:	str	r5, [sp, #16]
   168f4:	mov	r2, r5
   168f8:	mov	r3, r5
   168fc:	ldr	r1, [pc, #1476]	; 16ec8 <__flatcc_fb_gen_common_c_header@@Base+0xd48>
   16900:	add	r1, pc, r1
   16904:	bl	148bc <fprintf@plt>
   16908:	ldr	r0, [r5, #204]	; 0xcc
   1690c:	str	r5, [sp, #32]
   16910:	str	r5, [sp]
   16914:	str	r5, [sp, #4]
   16918:	str	r5, [sp, #8]
   1691c:	str	r5, [sp, #12]
   16920:	str	r5, [sp, #16]
   16924:	str	r5, [sp, #20]
   16928:	str	r5, [sp, #24]
   1692c:	str	r5, [sp, #28]
   16930:	mov	r2, r5
   16934:	mov	r3, r5
   16938:	ldr	r1, [pc, #1420]	; 16ecc <__flatcc_fb_gen_common_c_header@@Base+0xd4c>
   1693c:	add	r1, pc, r1
   16940:	bl	148bc <fprintf@plt>
   16944:	ldr	r0, [r5, #204]	; 0xcc
   16948:	str	r5, [sp, #32]
   1694c:	str	r5, [sp, #36]	; 0x24
   16950:	str	r5, [sp, #40]	; 0x28
   16954:	str	r5, [sp]
   16958:	str	r5, [sp, #4]
   1695c:	str	r5, [sp, #8]
   16960:	str	r5, [sp, #12]
   16964:	str	r5, [sp, #16]
   16968:	str	r5, [sp, #20]
   1696c:	str	r5, [sp, #24]
   16970:	str	r5, [sp, #28]
   16974:	mov	r2, r5
   16978:	mov	r3, r5
   1697c:	ldr	r1, [pc, #1356]	; 16ed0 <__flatcc_fb_gen_common_c_header@@Base+0xd50>
   16980:	add	r1, pc, r1
   16984:	bl	148bc <fprintf@plt>
   16988:	ldr	r0, [r5, #204]	; 0xcc
   1698c:	ldr	r1, [pc, #1344]	; 16ed4 <__flatcc_fb_gen_common_c_header@@Base+0xd54>
   16990:	mov	r2, r5
   16994:	add	r1, pc, r1
   16998:	bl	148bc <fprintf@plt>
   1699c:	ldr	r0, [r5, #204]	; 0xcc
   169a0:	ldr	r1, [pc, #1328]	; 16ed8 <__flatcc_fb_gen_common_c_header@@Base+0xd58>
   169a4:	mov	r2, r5
   169a8:	add	r1, pc, r1
   169ac:	bl	148bc <fprintf@plt>
   169b0:	ldr	r0, [r5, #212]	; 0xd4
   169b4:	ldr	r0, [r0, #136]	; 0x88
   169b8:	cmp	r0, #0
   169bc:	beq	169cc <__flatcc_fb_gen_common_c_header@@Base+0x84c>
   169c0:	mov	r0, r5
   169c4:	bl	19ae0 <__flatcc_gen_sort@@Base>
   169c8:	b	169e4 <__flatcc_fb_gen_common_c_header@@Base+0x864>
   169cc:	ldr	r3, [r5, #204]	; 0xcc
   169d0:	ldr	r0, [pc, #1284]	; 16edc <__flatcc_fb_gen_common_c_header@@Base+0xd5c>
   169d4:	mov	r1, #20
   169d8:	mov	r2, #1
   169dc:	add	r0, pc, r0
   169e0:	bl	14850 <fwrite@plt>
   169e4:	ldr	r0, [r5, #204]	; 0xcc
   169e8:	str	r5, [sp]
   169ec:	str	r5, [sp, #4]
   169f0:	str	r5, [sp, #8]
   169f4:	mov	r2, r5
   169f8:	mov	r3, r5
   169fc:	ldr	r1, [pc, #1244]	; 16ee0 <__flatcc_fb_gen_common_c_header@@Base+0xd60>
   16a00:	add	r1, pc, r1
   16a04:	bl	148bc <fprintf@plt>
   16a08:	ldr	r0, [r5, #212]	; 0xd4
   16a0c:	ldr	r2, [r5, #204]	; 0xcc
   16a10:	ldr	r0, [r0, #136]	; 0x88
   16a14:	cmp	r0, #0
   16a18:	beq	16a34 <__flatcc_fb_gen_common_c_header@@Base+0x8b4>
   16a1c:	ldr	r1, [pc, #1216]	; 16ee4 <__flatcc_fb_gen_common_c_header@@Base+0xd64>
   16a20:	mov	r0, r2
   16a24:	mov	r2, r5
   16a28:	add	r1, pc, r1
   16a2c:	bl	148bc <fprintf@plt>
   16a30:	b	16a40 <__flatcc_fb_gen_common_c_header@@Base+0x8c0>
   16a34:	mov	r0, #10
   16a38:	mov	r1, r2
   16a3c:	bl	1491c <fputc@plt>
   16a40:	ldr	r1, [r5, #204]	; 0xcc
   16a44:	mov	r0, #10
   16a48:	bl	1491c <fputc@plt>
   16a4c:	ldr	r0, [r5, #204]	; 0xcc
   16a50:	str	r5, [sp]
   16a54:	mov	r2, r5
   16a58:	mov	r3, r5
   16a5c:	ldr	r1, [pc, #1156]	; 16ee8 <__flatcc_fb_gen_common_c_header@@Base+0xd68>
   16a60:	add	r1, pc, r1
   16a64:	bl	148bc <fprintf@plt>
   16a68:	ldr	r0, [r5, #204]	; 0xcc
   16a6c:	str	r5, [sp, #64]	; 0x40
   16a70:	str	r5, [sp, #68]	; 0x44
   16a74:	str	r5, [sp, #72]	; 0x48
   16a78:	str	r5, [sp, #76]	; 0x4c
   16a7c:	str	r5, [sp, #80]	; 0x50
   16a80:	str	r5, [sp, #84]	; 0x54
   16a84:	str	r5, [sp, #88]	; 0x58
   16a88:	str	r5, [sp, #92]	; 0x5c
   16a8c:	str	r5, [sp, #32]
   16a90:	str	r5, [sp, #36]	; 0x24
   16a94:	str	r5, [sp, #40]	; 0x28
   16a98:	str	r5, [sp, #44]	; 0x2c
   16a9c:	str	r5, [sp, #48]	; 0x30
   16aa0:	str	r5, [sp, #52]	; 0x34
   16aa4:	str	r5, [sp, #56]	; 0x38
   16aa8:	str	r5, [sp, #60]	; 0x3c
   16aac:	str	r5, [sp]
   16ab0:	str	r5, [sp, #4]
   16ab4:	str	r5, [sp, #8]
   16ab8:	str	r5, [sp, #12]
   16abc:	str	r5, [sp, #16]
   16ac0:	str	r5, [sp, #20]
   16ac4:	str	r5, [sp, #24]
   16ac8:	str	r5, [sp, #28]
   16acc:	mov	r2, r5
   16ad0:	mov	r3, r5
   16ad4:	ldr	r1, [pc, #1040]	; 16eec <__flatcc_fb_gen_common_c_header@@Base+0xd6c>
   16ad8:	add	r1, pc, r1
   16adc:	bl	148bc <fprintf@plt>
   16ae0:	ldr	r0, [r5, #204]	; 0xcc
   16ae4:	str	r5, [sp, #32]
   16ae8:	str	r5, [sp, #36]	; 0x24
   16aec:	str	r5, [sp]
   16af0:	str	r5, [sp, #4]
   16af4:	str	r5, [sp, #8]
   16af8:	str	r5, [sp, #12]
   16afc:	str	r5, [sp, #16]
   16b00:	str	r5, [sp, #20]
   16b04:	str	r5, [sp, #24]
   16b08:	str	r5, [sp, #28]
   16b0c:	mov	r2, r5
   16b10:	mov	r3, r5
   16b14:	ldr	r1, [pc, #980]	; 16ef0 <__flatcc_fb_gen_common_c_header@@Base+0xd70>
   16b18:	add	r1, pc, r1
   16b1c:	bl	148bc <fprintf@plt>
   16b20:	ldr	r0, [r5, #204]	; 0xcc
   16b24:	str	r5, [sp, #224]	; 0xe0
   16b28:	str	r5, [sp, #228]	; 0xe4
   16b2c:	str	r5, [sp, #192]	; 0xc0
   16b30:	str	r5, [sp, #196]	; 0xc4
   16b34:	str	r5, [sp, #200]	; 0xc8
   16b38:	str	r5, [sp, #204]	; 0xcc
   16b3c:	str	r5, [sp, #208]	; 0xd0
   16b40:	str	r5, [sp, #212]	; 0xd4
   16b44:	str	r5, [sp, #216]	; 0xd8
   16b48:	str	r5, [sp, #220]	; 0xdc
   16b4c:	str	r5, [sp, #160]	; 0xa0
   16b50:	str	r5, [sp, #164]	; 0xa4
   16b54:	str	r5, [sp, #168]	; 0xa8
   16b58:	str	r5, [sp, #172]	; 0xac
   16b5c:	str	r5, [sp, #176]	; 0xb0
   16b60:	str	r5, [sp, #180]	; 0xb4
   16b64:	str	r5, [sp, #184]	; 0xb8
   16b68:	str	r5, [sp, #188]	; 0xbc
   16b6c:	str	r5, [sp, #128]	; 0x80
   16b70:	str	r5, [sp, #132]	; 0x84
   16b74:	str	r5, [sp, #136]	; 0x88
   16b78:	str	r5, [sp, #140]	; 0x8c
   16b7c:	str	r5, [sp, #144]	; 0x90
   16b80:	str	r5, [sp, #148]	; 0x94
   16b84:	str	r5, [sp, #152]	; 0x98
   16b88:	str	r5, [sp, #156]	; 0x9c
   16b8c:	str	r5, [sp, #96]	; 0x60
   16b90:	str	r5, [sp, #100]	; 0x64
   16b94:	str	r5, [sp, #104]	; 0x68
   16b98:	str	r5, [sp, #108]	; 0x6c
   16b9c:	str	r5, [sp, #112]	; 0x70
   16ba0:	str	r5, [sp, #116]	; 0x74
   16ba4:	str	r5, [sp, #120]	; 0x78
   16ba8:	str	r5, [sp, #124]	; 0x7c
   16bac:	str	r5, [sp, #64]	; 0x40
   16bb0:	str	r5, [sp, #68]	; 0x44
   16bb4:	str	r5, [sp, #72]	; 0x48
   16bb8:	str	r5, [sp, #76]	; 0x4c
   16bbc:	str	r5, [sp, #80]	; 0x50
   16bc0:	str	r5, [sp, #84]	; 0x54
   16bc4:	str	r5, [sp, #88]	; 0x58
   16bc8:	str	r5, [sp, #92]	; 0x5c
   16bcc:	str	r5, [sp, #32]
   16bd0:	str	r5, [sp, #36]	; 0x24
   16bd4:	str	r5, [sp, #40]	; 0x28
   16bd8:	str	r5, [sp, #44]	; 0x2c
   16bdc:	str	r5, [sp, #48]	; 0x30
   16be0:	str	r5, [sp, #52]	; 0x34
   16be4:	str	r5, [sp, #56]	; 0x38
   16be8:	str	r5, [sp, #60]	; 0x3c
   16bec:	str	r5, [sp]
   16bf0:	str	r5, [sp, #4]
   16bf4:	str	r5, [sp, #8]
   16bf8:	str	r5, [sp, #12]
   16bfc:	str	r5, [sp, #16]
   16c00:	str	r5, [sp, #20]
   16c04:	str	r5, [sp, #24]
   16c08:	str	r5, [sp, #28]
   16c0c:	mov	r2, r5
   16c10:	mov	r3, r5
   16c14:	ldr	r1, [pc, #728]	; 16ef4 <__flatcc_fb_gen_common_c_header@@Base+0xd74>
   16c18:	add	r1, pc, r1
   16c1c:	bl	148bc <fprintf@plt>
   16c20:	ldr	r0, [r5, #212]	; 0xd4
   16c24:	ldr	r0, [r0, #136]	; 0x88
   16c28:	cmp	r0, #0
   16c2c:	beq	16c44 <__flatcc_fb_gen_common_c_header@@Base+0xac4>
   16c30:	ldr	r0, [r5, #204]	; 0xcc
   16c34:	ldr	r1, [pc, #700]	; 16ef8 <__flatcc_fb_gen_common_c_header@@Base+0xd78>
   16c38:	mov	r2, r5
   16c3c:	add	r1, pc, r1
   16c40:	bl	148bc <fprintf@plt>
   16c44:	ldr	r0, [r5, #204]	; 0xcc
   16c48:	ldr	r1, [pc, #684]	; 16efc <__flatcc_fb_gen_common_c_header@@Base+0xd7c>
   16c4c:	mov	r2, r5
   16c50:	mov	r3, r5
   16c54:	add	r1, pc, r1
   16c58:	bl	148bc <fprintf@plt>
   16c5c:	ldr	r0, [r5, #212]	; 0xd4
   16c60:	ldr	r2, [r5, #204]	; 0xcc
   16c64:	ldr	r0, [r0, #32]
   16c68:	cmp	r0, #0
   16c6c:	beq	16c88 <__flatcc_fb_gen_common_c_header@@Base+0xb08>
   16c70:	ldr	r1, [pc, #648]	; 16f00 <__flatcc_fb_gen_common_c_header@@Base+0xd80>
   16c74:	mov	r0, r2
   16c78:	mov	r2, r5
   16c7c:	add	r1, pc, r1
   16c80:	bl	148bc <fprintf@plt>
   16c84:	b	16c94 <__flatcc_fb_gen_common_c_header@@Base+0xb14>
   16c88:	mov	r0, #10
   16c8c:	mov	r1, r2
   16c90:	bl	1491c <fputc@plt>
   16c94:	ldr	r0, [r5, #204]	; 0xcc
   16c98:	ldr	r1, [pc, #612]	; 16f04 <__flatcc_fb_gen_common_c_header@@Base+0xd84>
   16c9c:	mov	r2, r5
   16ca0:	add	r1, pc, r1
   16ca4:	bl	148bc <fprintf@plt>
   16ca8:	ldr	r0, [r5, #204]	; 0xcc
   16cac:	str	r5, [sp, #32]
   16cb0:	str	r5, [sp, #36]	; 0x24
   16cb4:	str	r5, [sp, #40]	; 0x28
   16cb8:	str	r5, [sp, #44]	; 0x2c
   16cbc:	str	r5, [sp]
   16cc0:	str	r5, [sp, #4]
   16cc4:	str	r5, [sp, #8]
   16cc8:	str	r5, [sp, #12]
   16ccc:	str	r5, [sp, #16]
   16cd0:	str	r5, [sp, #20]
   16cd4:	str	r5, [sp, #24]
   16cd8:	str	r5, [sp, #28]
   16cdc:	mov	r2, r5
   16ce0:	mov	r3, r5
   16ce4:	ldr	r1, [pc, #540]	; 16f08 <__flatcc_fb_gen_common_c_header@@Base+0xd88>
   16ce8:	add	r1, pc, r1
   16cec:	bl	148bc <fprintf@plt>
   16cf0:	ldr	r0, [r5, #204]	; 0xcc
   16cf4:	str	r5, [sp]
   16cf8:	mov	r2, r5
   16cfc:	mov	r3, r5
   16d00:	ldr	r1, [pc, #516]	; 16f0c <__flatcc_fb_gen_common_c_header@@Base+0xd8c>
   16d04:	add	r1, pc, r1
   16d08:	bl	148bc <fprintf@plt>
   16d0c:	ldr	r0, [r5, #204]	; 0xcc
   16d10:	str	r5, [sp]
   16d14:	str	r5, [sp, #4]
   16d18:	str	r5, [sp, #8]
   16d1c:	str	r5, [sp, #12]
   16d20:	mov	r2, r5
   16d24:	mov	r3, r5
   16d28:	ldr	r1, [pc, #480]	; 16f10 <__flatcc_fb_gen_common_c_header@@Base+0xd90>
   16d2c:	add	r1, pc, r1
   16d30:	bl	148bc <fprintf@plt>
   16d34:	ldr	r0, [r5, #204]	; 0xcc
   16d38:	str	r5, [sp]
   16d3c:	str	r5, [sp, #4]
   16d40:	mov	r2, r5
   16d44:	mov	r3, r5
   16d48:	ldr	r1, [pc, #452]	; 16f14 <__flatcc_fb_gen_common_c_header@@Base+0xd94>
   16d4c:	add	r1, pc, r1
   16d50:	bl	148bc <fprintf@plt>
   16d54:	ldr	r0, [r5, #204]	; 0xcc
   16d58:	str	r5, [sp]
   16d5c:	str	r5, [sp, #4]
   16d60:	str	r5, [sp, #8]
   16d64:	str	r5, [sp, #12]
   16d68:	str	r5, [sp, #16]
   16d6c:	str	r5, [sp, #20]
   16d70:	str	r5, [sp, #24]
   16d74:	str	r5, [sp, #28]
   16d78:	mov	r2, r5
   16d7c:	mov	r3, r5
   16d80:	ldr	r1, [pc, #400]	; 16f18 <__flatcc_fb_gen_common_c_header@@Base+0xd98>
   16d84:	add	r1, pc, r1
   16d88:	bl	148bc <fprintf@plt>
   16d8c:	ldr	r1, [r5, #204]	; 0xcc
   16d90:	mov	r0, #10
   16d94:	bl	1491c <fputc@plt>
   16d98:	ldr	r0, [r5, #212]	; 0xd4
   16d9c:	ldr	r0, [r0, #140]	; 0x8c
   16da0:	cmp	r0, #0
   16da4:	beq	16dc0 <__flatcc_fb_gen_common_c_header@@Base+0xc40>
   16da8:	ldr	r3, [r5, #204]	; 0xcc
   16dac:	ldr	r0, [pc, #360]	; 16f1c <__flatcc_fb_gen_common_c_header@@Base+0xd9c>
   16db0:	mov	r1, #36	; 0x24
   16db4:	mov	r2, #1
   16db8:	add	r0, pc, r0
   16dbc:	bl	14850 <fwrite@plt>
   16dc0:	ldr	r0, [r5, #204]	; 0xcc
   16dc4:	ldr	r1, [pc, #340]	; 16f20 <__flatcc_fb_gen_common_c_header@@Base+0xda0>
   16dc8:	mov	r2, r4
   16dcc:	add	r1, pc, r1
   16dd0:	bl	148bc <fprintf@plt>
   16dd4:	mov	r0, #0
   16dd8:	sub	sp, fp, #8
   16ddc:	pop	{r4, r5, fp, pc}
   16de0:	andeq	r9, r2, r2, lsl #5
   16de4:	andeq	r9, r2, r1, lsr #5
   16de8:	ldrdeq	r9, [r2], -fp
   16dec:	andeq	r9, r2, r8, ror #5
   16df0:	andeq	r9, r2, ip, lsr #8
   16df4:	andeq	r9, r2, r9, lsr r4
   16df8:	andeq	r9, r2, r3, asr r4
   16dfc:	andeq	r9, r2, r4, lsr r4
   16e00:	andeq	r9, r2, r3, ror #9
   16e04:	andeq	r9, r2, r1, lsl #8
   16e08:	andeq	r9, r2, r2, lsl r6
   16e0c:	andeq	r9, r2, r0, ror #16
   16e10:	muleq	r2, r8, r8
   16e14:	strdeq	r9, [r2], -r9	; <UNPREDICTABLE>
   16e18:	andeq	r9, r2, r4, asr sl
   16e1c:	andeq	r9, r2, r9, lsl #21
   16e20:	andeq	r9, r2, r6, lsl #23
   16e24:	andeq	r9, r2, fp, lsl #23
   16e28:	andeq	r9, r2, sl, lsr ip
   16e2c:	andeq	r9, r2, r0, asr #27
   16e30:	andeq	r9, r2, r4, asr #28
   16e34:	andeq	r9, r2, r2, lsl #30
   16e38:	andeq	r9, r2, r0, asr #31
   16e3c:	andeq	sl, r2, r4, ror r0
   16e40:	andeq	sl, r2, r4, lsr r1
   16e44:	andeq	sl, r2, lr, lsr #2
   16e48:			; <UNDEFINED> instruction: 0x0002a1b5
   16e4c:	ldrdeq	sl, [r2], -fp
   16e50:	andeq	sl, r2, sp, asr #4
   16e54:	muleq	r2, pc, r2	; <UNPREDICTABLE>
   16e58:	andeq	sl, r2, r7, lsr #7
   16e5c:	andeq	sl, r2, r6, lsl #8
   16e60:	andeq	sl, r2, r6, ror #8
   16e64:	andeq	sl, r2, r9, lsl #9
   16e68:	muleq	r2, r6, r5
   16e6c:	muleq	r2, r8, r5
   16e70:	andeq	sl, r2, fp, asr #11
   16e74:	andeq	fp, r2, sp, asr #30
   16e78:	strdeq	fp, [r2], -r0
   16e7c:	andeq	ip, r2, r9, rrx
   16e80:	andeq	ip, r2, ip, asr #1
   16e84:	andeq	ip, r2, r9, lsl #7
   16e88:	andeq	ip, r2, r7, lsl #12
   16e8c:	andeq	ip, r2, r4, ror r6
   16e90:	andeq	ip, r2, lr, asr #13
   16e94:	muleq	r2, r2, r8
   16e98:	andeq	ip, r2, r3, lsl r9
   16e9c:	ldrdeq	ip, [r2], -r2
   16ea0:			; <UNDEFINED> instruction: 0x0002ccb0
   16ea4:	andeq	ip, r2, pc, ror #27
   16ea8:	andeq	ip, r2, r2, lsr #29
   16eac:	andeq	ip, r2, fp, lsr pc
   16eb0:	ldrdeq	sp, [r2], -ip
   16eb4:	andeq	sp, r2, r2, ror r1
   16eb8:	andeq	sp, r2, r7, lsl #5
   16ebc:			; <UNDEFINED> instruction: 0x0002d3bf
   16ec0:	andeq	sp, r2, r7, asr r4
   16ec4:	muleq	r2, r6, r5
   16ec8:	andeq	sp, r2, fp, ror #13
   16ecc:	andeq	sp, r2, r4, lsl #20
   16ed0:	andeq	sp, r2, r0, ror #25
   16ed4:	muleq	r2, r5, r3
   16ed8:	ldrdeq	lr, [r2], -r1
   16edc:	ldrdeq	sl, [r2], -lr
   16ee0:	andeq	sl, r2, pc, asr #7
   16ee4:	andeq	sl, r2, r8, lsl #9
   16ee8:	andeq	sl, r2, r0, ror r4
   16eec:	andeq	sl, r2, r8, ror r4
   16ef0:	andeq	sl, r2, fp, asr #12
   16ef4:	muleq	r2, r5, r6
   16ef8:	andeq	sl, r2, sl, lsr #26
   16efc:	andeq	sl, r2, ip, lsr #26
   16f00:	andeq	r9, r2, r6, lsl #5
   16f04:	andeq	sl, r2, r9, ror sp
   16f08:			; <UNDEFINED> instruction: 0x0002adb0
   16f0c:	ldrdeq	fp, [r2], -sp
   16f10:	andeq	fp, r2, ip, ror #2
   16f14:	andeq	fp, r2, r3, lsl r3
   16f18:	andeq	fp, r2, r7, asr r5
   16f1c:	andeq	lr, r2, r2, lsl #13
   16f20:	andeq	r8, r2, r0, lsr #15

00016f24 <__flatcc_fb_gen_c_reader@@Base>:
   16f24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16f28:	add	fp, sp, #28
   16f2c:	sub	sp, sp, #52	; 0x34
   16f30:	sub	sp, sp, #1024	; 0x400
   16f34:	mov	r7, r0
   16f38:	mov	r6, r0
   16f3c:	ldr	r0, [r7, #204]!	; 0xcc
   16f40:	ldmib	r7, {r1, r2}
   16f44:	ldr	r5, [r2, #132]	; 0x84
   16f48:	ldr	r2, [r1, #164]	; 0xa4
   16f4c:	ldr	r1, [pc, #4024]	; 17f0c <__flatcc_fb_gen_c_reader@@Base+0xfe8>
   16f50:	add	r1, pc, r1
   16f54:	mov	r3, r2
   16f58:	bl	148bc <fprintf@plt>
   16f5c:	ldr	r3, [r7]
   16f60:	ldr	r0, [pc, #4008]	; 17f10 <__flatcc_fb_gen_c_reader@@Base+0xfec>
   16f64:	mov	r1, #81	; 0x51
   16f68:	mov	r2, #1
   16f6c:	add	r0, pc, r0
   16f70:	bl	14850 <fwrite@plt>
   16f74:	ldr	r3, [r7]
   16f78:	sub	r4, r7, #102	; 0x66
   16f7c:	cmp	r5, #0
   16f80:	beq	16fdc <__flatcc_fb_gen_c_reader@@Base+0xb8>
   16f84:	ldr	r0, [pc, #3976]	; 17f14 <__flatcc_fb_gen_c_reader@@Base+0xff0>
   16f88:	movw	r1, #443	; 0x1bb
   16f8c:	mov	r2, #1
   16f90:	add	r0, pc, r0
   16f94:	bl	14850 <fwrite@plt>
   16f98:	ldr	r0, [r6, #204]	; 0xcc
   16f9c:	ldr	r1, [pc, #3956]	; 17f18 <__flatcc_fb_gen_c_reader@@Base+0xff4>
   16fa0:	mov	r2, r4
   16fa4:	mov	r3, r6
   16fa8:	add	r1, pc, r1
   16fac:	bl	148bc <fprintf@plt>
   16fb0:	ldr	r1, [pc, #3940]	; 17f1c <__flatcc_fb_gen_c_reader@@Base+0xff8>
   16fb4:	ldr	r2, [pc, #3940]	; 17f20 <__flatcc_fb_gen_c_reader@@Base+0xffc>
   16fb8:	mov	r0, r6
   16fbc:	add	r1, pc, r1
   16fc0:	add	r2, pc, r2
   16fc4:	bl	159d4 <__flatcc_fb_gen_c_includes@@Base>
   16fc8:	ldr	r3, [r6, #204]	; 0xcc
   16fcc:	ldr	r0, [pc, #3920]	; 17f24 <__flatcc_fb_gen_c_reader@@Base+0x1000>
   16fd0:	mov	r1, #39	; 0x27
   16fd4:	add	r0, pc, r0
   16fd8:	b	17034 <__flatcc_fb_gen_c_reader@@Base+0x110>
   16fdc:	ldr	r1, [pc, #4084]	; 17fd8 <__flatcc_fb_gen_c_reader@@Base+0x10b4>
   16fe0:	mov	r0, r3
   16fe4:	mov	r2, r4
   16fe8:	mov	r3, r6
   16fec:	add	r1, pc, r1
   16ff0:	bl	148bc <fprintf@plt>
   16ff4:	ldr	r1, [pc, #4064]	; 17fdc <__flatcc_fb_gen_c_reader@@Base+0x10b8>
   16ff8:	ldr	r2, [pc, #4064]	; 17fe0 <__flatcc_fb_gen_c_reader@@Base+0x10bc>
   16ffc:	mov	r0, r6
   17000:	add	r1, pc, r1
   17004:	add	r2, pc, r2
   17008:	bl	159d4 <__flatcc_fb_gen_c_includes@@Base>
   1700c:	ldr	r3, [r6, #204]	; 0xcc
   17010:	ldr	r0, [pc, #4044]	; 17fe4 <__flatcc_fb_gen_c_reader@@Base+0x10c0>
   17014:	mov	r1, #39	; 0x27
   17018:	mov	r2, #1
   1701c:	add	r0, pc, r0
   17020:	bl	14850 <fwrite@plt>
   17024:	ldr	r3, [r6, #204]	; 0xcc
   17028:	ldr	r0, [pc, #4024]	; 17fe8 <__flatcc_fb_gen_c_reader@@Base+0x10c4>
   1702c:	mov	r1, #58	; 0x3a
   17030:	add	r0, pc, r0
   17034:	mov	r2, #1
   17038:	bl	14850 <fwrite@plt>
   1703c:	ldr	r0, [r6, #212]	; 0xd4
   17040:	ldr	r0, [r0, #140]	; 0x8c
   17044:	cmp	r0, #0
   17048:	beq	17064 <__flatcc_fb_gen_c_reader@@Base+0x140>
   1704c:	ldr	r3, [r7]
   17050:	ldr	r0, [pc, #3988]	; 17fec <__flatcc_fb_gen_c_reader@@Base+0x10c8>
   17054:	mov	r1, #36	; 0x24
   17058:	mov	r2, #1
   1705c:	add	r0, pc, r0
   17060:	bl	14850 <fwrite@plt>
   17064:	ldr	r1, [r6, #208]	; 0xd0
   17068:	ldr	r0, [r6, #204]	; 0xcc
   1706c:	ldrh	r2, [r1, #16]
   17070:	cmp	r2, #2
   17074:	bne	17090 <__flatcc_fb_gen_c_reader@@Base+0x16c>
   17078:	ldrd	r2, [r1, #8]
   1707c:	str	r3, [sp]
   17080:	str	r2, [sp, #4]
   17084:	ldr	r1, [pc, #3940]	; 17ff0 <__flatcc_fb_gen_c_reader@@Base+0x10cc>
   17088:	add	r1, pc, r1
   1708c:	b	17098 <__flatcc_fb_gen_c_reader@@Base+0x174>
   17090:	ldr	r1, [pc, #4088]	; 18090 <__flatcc_fb_gen_c_reader@@Base+0x116c>
   17094:	add	r1, pc, r1
   17098:	mov	r2, r6
   1709c:	mov	r3, r6
   170a0:	bl	148bc <fprintf@plt>
   170a4:	ldr	r1, [r6, #208]	; 0xd0
   170a8:	ldr	r0, [r6, #204]	; 0xcc
   170ac:	ldrh	r2, [r1, #32]
   170b0:	cmp	r2, #2
   170b4:	bne	170d0 <__flatcc_fb_gen_c_reader@@Base+0x1ac>
   170b8:	ldrd	r2, [r1, #24]
   170bc:	str	r3, [sp]
   170c0:	str	r2, [sp, #4]
   170c4:	ldr	r1, [pc, #4040]	; 18094 <__flatcc_fb_gen_c_reader@@Base+0x1170>
   170c8:	add	r1, pc, r1
   170cc:	b	170e4 <__flatcc_fb_gen_c_reader@@Base+0x1c0>
   170d0:	ldr	r1, [r6, #212]	; 0xd4
   170d4:	ldr	r1, [r1, #104]	; 0x68
   170d8:	str	r1, [sp]
   170dc:	ldr	r1, [pc, #4020]	; 18098 <__flatcc_fb_gen_c_reader@@Base+0x1174>
   170e0:	add	r1, pc, r1
   170e4:	mov	r2, r6
   170e8:	mov	r3, r6
   170ec:	bl	148bc <fprintf@plt>
   170f0:	ldr	r1, [r6, #204]	; 0xcc
   170f4:	mov	r0, #10
   170f8:	bl	1491c <fputc@plt>
   170fc:	ldr	r0, [r6, #208]	; 0xd0
   17100:	ldr	r4, [r0, #44]	; 0x2c
   17104:	cmp	r4, #0
   17108:	beq	17124 <__flatcc_fb_gen_c_reader@@Base+0x200>
   1710c:	mov	r0, r6
   17110:	mov	r1, r4
   17114:	bl	190d4 <__flatcc_fb_gen_c_reader@@Base+0x21b0>
   17118:	ldr	r4, [r4, #120]	; 0x78
   1711c:	cmp	r4, #0
   17120:	bne	1710c <__flatcc_fb_gen_c_reader@@Base+0x1e8>
   17124:	ldr	r1, [r6, #204]	; 0xcc
   17128:	mov	r0, #10
   1712c:	bl	1491c <fputc@plt>
   17130:	ldr	r0, [r6, #208]	; 0xd0
   17134:	str	r6, [sp, #64]	; 0x40
   17138:	str	r7, [sp, #72]	; 0x48
   1713c:	ldr	r4, [r0, #40]	; 0x28
   17140:	cmp	r4, #0
   17144:	beq	17310 <__flatcc_fb_gen_c_reader@@Base+0x3ec>
   17148:	ldr	r5, [sp, #64]	; 0x40
   1714c:	b	1715c <__flatcc_fb_gen_c_reader@@Base+0x238>
   17150:	ldr	r4, [r4]
   17154:	cmp	r4, #0
   17158:	beq	17178 <__flatcc_fb_gen_c_reader@@Base+0x254>
   1715c:	ldrh	r0, [r4, #8]
   17160:	cmp	r0, #0
   17164:	bne	17150 <__flatcc_fb_gen_c_reader@@Base+0x22c>
   17168:	mov	r0, r5
   1716c:	mov	r1, r4
   17170:	bl	190d4 <__flatcc_fb_gen_c_reader@@Base+0x21b0>
   17174:	b	17150 <__flatcc_fb_gen_c_reader@@Base+0x22c>
   17178:	ldr	r0, [r5, #208]	; 0xd0
   1717c:	ldr	r4, [r0, #40]	; 0x28
   17180:	cmp	r4, #0
   17184:	beq	17310 <__flatcc_fb_gen_c_reader@@Base+0x3ec>
   17188:	ldr	r6, [sp, #64]	; 0x40
   1718c:	sub	r5, fp, #256	; 0x100
   17190:	mov	sl, #0
   17194:	movw	r8, #30812	; 0x785c
   17198:	sub	r7, fp, #480	; 0x1e0
   1719c:	b	171ac <__flatcc_fb_gen_c_reader@@Base+0x288>
   171a0:	ldr	r4, [r4]
   171a4:	cmp	r4, #0
   171a8:	beq	17310 <__flatcc_fb_gen_c_reader@@Base+0x3ec>
   171ac:	ldrh	r0, [r4, #8]
   171b0:	cmp	r0, #1
   171b4:	bhi	171a0 <__flatcc_fb_gen_c_reader@@Base+0x27c>
   171b8:	mov	r0, r5
   171bc:	mov	r1, #0
   171c0:	mov	r2, #220	; 0xdc
   171c4:	bl	148d4 <memset@plt>
   171c8:	ldr	r0, [r4, #12]
   171cc:	mov	r1, r4
   171d0:	mov	r2, r5
   171d4:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   171d8:	ldr	r9, [r4, #88]	; 0x58
   171dc:	ldr	r0, [r6, #204]	; 0xcc
   171e0:	str	r6, [sp]
   171e4:	mov	r2, r5
   171e8:	mov	r3, r5
   171ec:	ldr	r1, [pc, #3968]	; 18174 <__flatcc_fb_gen_c_reader@@Base+0x1250>
   171f0:	add	r1, pc, r1
   171f4:	bl	148bc <fprintf@plt>
   171f8:	ldr	r0, [r6, #204]	; 0xcc
   171fc:	str	r9, [sp]
   17200:	mov	r2, r5
   17204:	mov	r3, r6
   17208:	ldr	r1, [pc, #3944]	; 18178 <__flatcc_fb_gen_c_reader@@Base+0x1254>
   1720c:	add	r1, pc, r1
   17210:	bl	148bc <fprintf@plt>
   17214:	and	r0, r9, #15
   17218:	mov	r1, #48	; 0x30
   1721c:	mov	r2, r5
   17220:	mov	r3, r7
   17224:	cmp	r0, #9
   17228:	movwhi	r1, #87	; 0x57
   1722c:	add	r0, r1, r0
   17230:	mov	r1, #48	; 0x30
   17234:	strb	r0, [fp, #-477]	; 0xfffffe23
   17238:	sub	r0, fp, #480	; 0x1e0
   1723c:	strh	r8, [r0]
   17240:	ubfx	r0, r9, #8, #4
   17244:	cmp	r0, #9
   17248:	movwhi	r1, #87	; 0x57
   1724c:	add	r0, r1, r0
   17250:	mov	r1, #48	; 0x30
   17254:	strb	r0, [fp, #-473]	; 0xfffffe27
   17258:	sub	r0, fp, #480	; 0x1e0
   1725c:	strh	r8, [r0, #4]
   17260:	ubfx	r0, r9, #4, #4
   17264:	cmp	r0, #9
   17268:	movwhi	r1, #87	; 0x57
   1726c:	add	r0, r1, r0
   17270:	mov	r1, #48	; 0x30
   17274:	strb	r0, [fp, #-478]	; 0xfffffe22
   17278:	ubfx	r0, r9, #16, #4
   1727c:	cmp	r0, #9
   17280:	movwhi	r1, #87	; 0x57
   17284:	add	r0, r1, r0
   17288:	mov	r1, #48	; 0x30
   1728c:	strb	r0, [fp, #-469]	; 0xfffffe2b
   17290:	sub	r0, fp, #480	; 0x1e0
   17294:	strh	r8, [r0, #8]
   17298:	ubfx	r0, r9, #12, #4
   1729c:	cmp	r0, #9
   172a0:	movwhi	r1, #87	; 0x57
   172a4:	add	r0, r1, r0
   172a8:	mov	r1, #48	; 0x30
   172ac:	strb	r0, [fp, #-474]	; 0xfffffe26
   172b0:	ubfx	r0, r9, #24, #4
   172b4:	cmp	r0, #9
   172b8:	movwhi	r1, #87	; 0x57
   172bc:	add	r0, r1, r0
   172c0:	mov	r1, #48	; 0x30
   172c4:	strb	r0, [fp, #-465]	; 0xfffffe2f
   172c8:	sub	r0, fp, #480	; 0x1e0
   172cc:	strh	r8, [r0, #12]
   172d0:	ubfx	r0, r9, #20, #4
   172d4:	cmp	r0, #9
   172d8:	movwhi	r1, #87	; 0x57
   172dc:	cmn	r9, #1610612737	; 0x60000001
   172e0:	add	r0, r1, r0
   172e4:	strb	r0, [fp, #-470]	; 0xfffffe2a
   172e8:	mov	r0, #48	; 0x30
   172ec:	movwhi	r0, #87	; 0x57
   172f0:	strb	sl, [fp, #-464]	; 0xfffffe30
   172f4:	add	r0, r0, r9, lsr #28
   172f8:	strb	r0, [fp, #-466]	; 0xfffffe2e
   172fc:	ldr	r0, [r6, #204]	; 0xcc
   17300:	ldr	r1, [pc, #3980]	; 18294 <__flatcc_fb_gen_c_reader@@Base+0x1370>
   17304:	add	r1, pc, r1
   17308:	bl	148bc <fprintf@plt>
   1730c:	b	171a0 <__flatcc_fb_gen_c_reader@@Base+0x27c>
   17310:	ldr	r8, [sp, #64]	; 0x40
   17314:	mov	r0, #10
   17318:	ldr	r1, [r8, #204]	; 0xcc
   1731c:	bl	1491c <fputc@plt>
   17320:	ldr	r0, [r8, #208]	; 0xd0
   17324:	ldr	r4, [r0, #40]	; 0x28
   17328:	cmp	r4, #0
   1732c:	beq	17350 <__flatcc_fb_gen_c_reader@@Base+0x42c>
   17330:	ldrh	r0, [r4, #8]
   17334:	cmp	r0, #3
   17338:	moveq	r0, r8
   1733c:	moveq	r1, r4
   17340:	bleq	1925c <__flatcc_fb_gen_c_reader@@Base+0x2338>
   17344:	ldr	r4, [r4]
   17348:	cmp	r4, #0
   1734c:	bne	17330 <__flatcc_fb_gen_c_reader@@Base+0x40c>
   17350:	ldr	r1, [r8, #204]	; 0xcc
   17354:	mov	r0, #10
   17358:	bl	1491c <fputc@plt>
   1735c:	ldr	r0, [r8, #208]	; 0xd0
   17360:	ldr	r7, [r0, #44]	; 0x2c
   17364:	ldr	r6, [pc, #3884]	; 18298 <__flatcc_fb_gen_c_reader@@Base+0x1374>
   17368:	cmp	r7, #0
   1736c:	add	r6, pc, r6
   17370:	beq	17d9c <__flatcc_fb_gen_c_reader@@Base+0xe78>
   17374:	ldr	r9, [pc, #3872]	; 1829c <__flatcc_fb_gen_c_reader@@Base+0x1378>
   17378:	add	r9, pc, r9
   1737c:	b	173b4 <__flatcc_fb_gen_c_reader@@Base+0x490>
   17380:	ldr	r0, [sp, #72]	; 0x48
   17384:	ldr	r1, [r0]
   17388:	mov	r0, #10
   1738c:	bl	1491c <fputc@plt>
   17390:	ldr	r7, [sp, #48]	; 0x30
   17394:	ldr	r8, [sp, #64]	; 0x40
   17398:	ldr	r7, [r7, #120]	; 0x78
   1739c:	ldr	r6, [pc, #3836]	; 182a0 <__flatcc_fb_gen_c_reader@@Base+0x137c>
   173a0:	ldr	r9, [pc, #3836]	; 182a4 <__flatcc_fb_gen_c_reader@@Base+0x1380>
   173a4:	cmp	r7, #0
   173a8:	add	r6, pc, r6
   173ac:	add	r9, pc, r9
   173b0:	beq	17d98 <__flatcc_fb_gen_c_reader@@Base+0xe74>
   173b4:	ldr	r0, [r8, #212]	; 0xd4
   173b8:	sub	r4, fp, #256	; 0x100
   173bc:	mov	r1, #0
   173c0:	mov	r2, #220	; 0xdc
   173c4:	ldr	r0, [r0, #132]	; 0x84
   173c8:	str	r0, [sp, #52]	; 0x34
   173cc:	mov	r0, r4
   173d0:	bl	148d4 <memset@plt>
   173d4:	sub	r0, fp, #480	; 0x1e0
   173d8:	mov	r1, #0
   173dc:	mov	r2, #220	; 0xdc
   173e0:	bl	148d4 <memset@plt>
   173e4:	ldrh	r0, [r7, #8]
   173e8:	cmp	r0, #1
   173ec:	bne	18cc0 <__flatcc_fb_gen_c_reader@@Base+0x1d9c>
   173f0:	mov	r2, r7
   173f4:	add	r0, r7, #96	; 0x60
   173f8:	ldrh	r1, [r2, #104]!	; 0x68
   173fc:	str	r2, [sp, #60]	; 0x3c
   17400:	cmp	r1, #0
   17404:	bne	17414 <__flatcc_fb_gen_c_reader@@Base+0x4f0>
   17408:	ldrd	r2, [r0]
   1740c:	orrs	r1, r2, r3
   17410:	bne	18de4 <__flatcc_fb_gen_c_reader@@Base+0x1ec0>
   17414:	add	sl, r7, #112	; 0x70
   17418:	ldrd	r2, [sl]
   1741c:	orrs	r1, r2, r3
   17420:	bne	17430 <__flatcc_fb_gen_c_reader@@Base+0x50c>
   17424:	ldrd	r0, [r0]
   17428:	orrs	r0, r0, r1
   1742c:	bne	18e04 <__flatcc_fb_gen_c_reader@@Base+0x1ee0>
   17430:	ldr	r0, [r7, #12]
   17434:	mov	r1, r7
   17438:	mov	r2, r4
   1743c:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   17440:	mov	r8, r7
   17444:	ldr	r7, [r7, #32]
   17448:	cmp	r7, #0
   1744c:	beq	17524 <__flatcc_fb_gen_c_reader@@Base+0x600>
   17450:	ldr	r0, [r7, #4]
   17454:	ldr	r4, [sp, #72]	; 0x48
   17458:	ldr	r0, [r0, #8]
   1745c:	cmp	r0, #0
   17460:	beq	17478 <__flatcc_fb_gen_c_reader@@Base+0x554>
   17464:	ldr	r0, [r4]
   17468:	ldr	r1, [pc, #4016]	; 18420 <__flatcc_fb_gen_c_reader@@Base+0x14fc>
   1746c:	mov	r2, r6
   17470:	add	r1, pc, r1
   17474:	bl	148bc <fprintf@plt>
   17478:	ldr	r1, [r7, #4]
   1747c:	ldr	r0, [r4]
   17480:	ldr	r3, [r1]
   17484:	ldr	r2, [r1, #4]
   17488:	mov	r1, r9
   1748c:	bl	148bc <fprintf@plt>
   17490:	ldr	r4, [r7]
   17494:	cmp	r4, #0
   17498:	beq	17508 <__flatcc_fb_gen_c_reader@@Base+0x5e4>
   1749c:	ldr	r0, [r7, #4]
   174a0:	ldr	r0, [r0, #8]
   174a4:	b	174dc <__flatcc_fb_gen_c_reader@@Base+0x5b8>
   174a8:	ldr	r0, [sp, #72]	; 0x48
   174ac:	ldr	r1, [r4, #4]
   174b0:	ldr	r0, [r0]
   174b4:	ldr	r3, [r1]
   174b8:	ldr	r2, [r1, #4]
   174bc:	mov	r1, r9
   174c0:	bl	148bc <fprintf@plt>
   174c4:	ldr	r0, [r4, #4]
   174c8:	ldr	r1, [r4]
   174cc:	ldr	r0, [r0, #8]
   174d0:	cmp	r1, #0
   174d4:	mov	r4, r1
   174d8:	beq	17508 <__flatcc_fb_gen_c_reader@@Base+0x5e4>
   174dc:	ldr	r1, [r4, #4]
   174e0:	ldr	r1, [r1, #8]
   174e4:	cmp	r0, r1
   174e8:	beq	174a8 <__flatcc_fb_gen_c_reader@@Base+0x584>
   174ec:	ldr	r0, [sp, #72]	; 0x48
   174f0:	mov	r2, r6
   174f4:	ldr	r0, [r0]
   174f8:	ldr	r1, [pc, #3876]	; 18424 <__flatcc_fb_gen_c_reader@@Base+0x1500>
   174fc:	add	r1, pc, r1
   17500:	bl	148bc <fprintf@plt>
   17504:	b	174a8 <__flatcc_fb_gen_c_reader@@Base+0x584>
   17508:	ldr	r0, [sp, #72]	; 0x48
   1750c:	mov	r1, #4
   17510:	mov	r2, #1
   17514:	ldr	r3, [r0]
   17518:	ldr	r0, [pc, #3848]	; 18428 <__flatcc_fb_gen_c_reader@@Base+0x1504>
   1751c:	add	r0, pc, r0
   17520:	bl	14850 <fwrite@plt>
   17524:	ldrd	r0, [sl]
   17528:	str	r8, [sp, #48]	; 0x30
   1752c:	orrs	r0, r0, r1
   17530:	beq	178a4 <__flatcc_fb_gen_c_reader@@Base+0x980>
   17534:	ldr	r6, [sp, #52]	; 0x34
   17538:	ldr	r5, [sp, #72]	; 0x48
   1753c:	sub	r4, fp, #256	; 0x100
   17540:	mov	r7, r8
   17544:	str	sl, [sp, #44]	; 0x2c
   17548:	cmp	r6, #0
   1754c:	beq	17568 <__flatcc_fb_gen_c_reader@@Base+0x644>
   17550:	ldr	r3, [r5]
   17554:	ldr	r0, [pc, #3792]	; 1842c <__flatcc_fb_gen_c_reader@@Base+0x1508>
   17558:	mov	r1, #16
   1755c:	mov	r2, #1
   17560:	add	r0, pc, r0
   17564:	bl	14850 <fwrite@plt>
   17568:	ldr	r0, [r5]
   1756c:	ldr	r1, [pc, #3772]	; 18430 <__flatcc_fb_gen_c_reader@@Base+0x150c>
   17570:	mov	r2, r4
   17574:	add	r1, pc, r1
   17578:	bl	148bc <fprintf@plt>
   1757c:	ldr	sl, [r7, #20]
   17580:	cmp	sl, #0
   17584:	beq	17920 <__flatcc_fb_gen_c_reader@@Base+0x9fc>
   17588:	mov	r0, #0
   1758c:	mov	r8, #0
   17590:	mov	r4, #0
   17594:	str	r0, [sp, #56]	; 0x38
   17598:	b	175f4 <__flatcc_fb_gen_c_reader@@Base+0x6d0>
   1759c:	str	r3, [sp]
   175a0:	mov	r3, r5
   175a4:	ldr	r1, [pc, #3720]	; 18434 <__flatcc_fb_gen_c_reader@@Base+0x1510>
   175a8:	add	r1, pc, r1
   175ac:	bl	148bc <fprintf@plt>
   175b0:	ldr	r0, [sp, #72]	; 0x48
   175b4:	mov	r2, r4
   175b8:	mov	r3, r7
   175bc:	ldr	r0, [r0]
   175c0:	ldr	r1, [pc, #3696]	; 18438 <__flatcc_fb_gen_c_reader@@Base+0x1514>
   175c4:	add	r1, pc, r1
   175c8:	bl	148bc <fprintf@plt>
   175cc:	ldr	r4, [sp, #68]	; 0x44
   175d0:	add	r5, r9, #8
   175d4:	ldr	r0, [r9]
   175d8:	ldr	r1, [r5]
   175dc:	ldr	sl, [sl]
   175e0:	ldr	r9, [pc, #3668]	; 1843c <__flatcc_fb_gen_c_reader@@Base+0x1518>
   175e4:	adds	r8, r1, r0
   175e8:	cmp	sl, #0
   175ec:	add	r9, pc, r9
   175f0:	beq	17898 <__flatcc_fb_gen_c_reader@@Base+0x974>
   175f4:	ldr	r7, [sl, #68]	; 0x44
   175f8:	str	r4, [sp, #68]	; 0x44
   175fc:	cmp	r7, #0
   17600:	beq	176dc <__flatcc_fb_gen_c_reader@@Base+0x7b8>
   17604:	ldr	r0, [r7, #4]
   17608:	ldr	r5, [sp, #72]	; 0x48
   1760c:	ldr	r0, [r0, #8]
   17610:	cmp	r0, #0
   17614:	beq	17630 <__flatcc_fb_gen_c_reader@@Base+0x70c>
   17618:	ldr	r0, [r5]
   1761c:	ldr	r1, [pc, #3612]	; 18440 <__flatcc_fb_gen_c_reader@@Base+0x151c>
   17620:	ldr	r2, [pc, #3612]	; 18444 <__flatcc_fb_gen_c_reader@@Base+0x1520>
   17624:	add	r1, pc, r1
   17628:	add	r2, pc, r2
   1762c:	bl	148bc <fprintf@plt>
   17630:	ldr	r1, [r7, #4]
   17634:	ldr	r0, [r5]
   17638:	ldr	r3, [r1]
   1763c:	ldr	r2, [r1, #4]
   17640:	mov	r1, r9
   17644:	bl	148bc <fprintf@plt>
   17648:	ldr	r4, [r7]
   1764c:	ldr	r6, [pc, #3572]	; 18448 <__flatcc_fb_gen_c_reader@@Base+0x1524>
   17650:	cmp	r4, #0
   17654:	add	r6, pc, r6
   17658:	beq	176c0 <__flatcc_fb_gen_c_reader@@Base+0x79c>
   1765c:	ldr	r0, [r7, #4]
   17660:	ldr	r0, [r0, #8]
   17664:	b	17698 <__flatcc_fb_gen_c_reader@@Base+0x774>
   17668:	ldr	r1, [r4, #4]
   1766c:	ldr	r0, [r5]
   17670:	ldr	r3, [r1]
   17674:	ldr	r2, [r1, #4]
   17678:	mov	r1, r9
   1767c:	bl	148bc <fprintf@plt>
   17680:	ldr	r0, [r4, #4]
   17684:	ldr	r1, [r4]
   17688:	ldr	r0, [r0, #8]
   1768c:	cmp	r1, #0
   17690:	mov	r4, r1
   17694:	beq	176c0 <__flatcc_fb_gen_c_reader@@Base+0x79c>
   17698:	ldr	r1, [r4, #4]
   1769c:	ldr	r1, [r1, #8]
   176a0:	cmp	r0, r1
   176a4:	beq	17668 <__flatcc_fb_gen_c_reader@@Base+0x744>
   176a8:	ldr	r0, [r5]
   176ac:	ldr	r2, [pc, #4064]	; 18694 <__flatcc_fb_gen_c_reader@@Base+0x1770>
   176b0:	mov	r1, r6
   176b4:	add	r2, pc, r2
   176b8:	bl	148bc <fprintf@plt>
   176bc:	b	17668 <__flatcc_fb_gen_c_reader@@Base+0x744>
   176c0:	ldr	r3, [r5]
   176c4:	ldr	r0, [pc, #4044]	; 18698 <__flatcc_fb_gen_c_reader@@Base+0x1774>
   176c8:	mov	r1, #4
   176cc:	mov	r2, #1
   176d0:	add	r0, pc, r0
   176d4:	bl	14850 <fwrite@plt>
   176d8:	ldr	r6, [sp, #52]	; 0x34
   176dc:	cmp	r8, #0
   176e0:	ldr	r0, [sp, #60]	; 0x3c
   176e4:	add	r9, sl, #80	; 0x50
   176e8:	addne	r0, sl, #74	; 0x4a
   176ec:	cmp	r6, #0
   176f0:	ldrh	r2, [r0]
   176f4:	ldr	r0, [sl, #4]
   176f8:	ldr	r7, [r0]
   176fc:	ldr	r4, [r0, #4]
   17700:	ldrne	r0, [r9]
   17704:	subsne	r3, r0, r8
   17708:	beq	17750 <__flatcc_fb_gen_c_reader@@Base+0x82c>
   1770c:	ldr	r0, [sp, #72]	; 0x48
   17710:	mov	r8, r4
   17714:	mov	r4, r7
   17718:	mov	r7, r6
   1771c:	mov	r6, r2
   17720:	ldr	r0, [r0]
   17724:	ldr	r1, [pc, #4004]	; 186d0 <__flatcc_fb_gen_c_reader@@Base+0x17ac>
   17728:	ldr	r5, [sp, #56]	; 0x38
   1772c:	add	r1, pc, r1
   17730:	mov	r2, r5
   17734:	bl	148bc <fprintf@plt>
   17738:	mov	r2, r6
   1773c:	mov	r6, r7
   17740:	mov	r7, r4
   17744:	mov	r4, r8
   17748:	add	r5, r5, #1
   1774c:	str	r5, [sp, #56]	; 0x38
   17750:	ldrb	r0, [sl, #72]	; 0x48
   17754:	tst	r0, #4
   17758:	bne	177c0 <__flatcc_fb_gen_c_reader@@Base+0x89c>
   1775c:	ldrh	r0, [sl, #24]
   17760:	cmp	r0, #14
   17764:	beq	177f0 <__flatcc_fb_gen_c_reader@@Base+0x8cc>
   17768:	cmp	r0, #8
   1776c:	bne	18b80 <__flatcc_fb_gen_c_reader@@Base+0x1c5c>
   17770:	ldr	r0, [sl, #16]
   17774:	ldr	r5, [pc, #4088]	; 18774 <__flatcc_fb_gen_c_reader@@Base+0x1850>
   17778:	ldr	r1, [sp, #64]	; 0x40
   1777c:	cmp	r0, #5
   17780:	sub	r0, r0, #1
   17784:	add	r5, pc, r5
   17788:	moveq	r5, r1
   1778c:	cmp	r0, #11
   17790:	bcs	18b28 <__flatcc_fb_gen_c_reader@@Base+0x1c04>
   17794:	ldr	r1, [pc, #4080]	; 1878c <__flatcc_fb_gen_c_reader@@Base+0x1868>
   17798:	cmp	r6, #0
   1779c:	add	r1, pc, r1
   177a0:	ldr	r3, [r1, r0, lsl #2]
   177a4:	ldr	r0, [sp, #72]	; 0x48
   177a8:	ldr	r0, [r0]
   177ac:	beq	1759c <__flatcc_fb_gen_c_reader@@Base+0x678>
   177b0:	ldr	r1, [pc, #4056]	; 18790 <__flatcc_fb_gen_c_reader@@Base+0x186c>
   177b4:	mov	r2, r5
   177b8:	add	r1, pc, r1
   177bc:	b	175ac <__flatcc_fb_gen_c_reader@@Base+0x688>
   177c0:	ldr	r0, [sp, #72]	; 0x48
   177c4:	mov	r5, r9
   177c8:	cmp	r6, #0
   177cc:	ldr	r3, [r5, #8]!
   177d0:	ldr	r0, [r0]
   177d4:	beq	17854 <__flatcc_fb_gen_c_reader@@Base+0x930>
   177d8:	stm	sp, {r4, r7}
   177dc:	ldr	r1, [pc, #4072]	; 187cc <__flatcc_fb_gen_c_reader@@Base+0x18a8>
   177e0:	ldr	r4, [sp, #68]	; 0x44
   177e4:	add	r1, pc, r1
   177e8:	mov	r2, r4
   177ec:	b	17868 <__flatcc_fb_gen_c_reader@@Base+0x944>
   177f0:	ldr	r1, [sl, #16]
   177f4:	ldrh	r5, [r1, #8]
   177f8:	orr	r0, r5, #2
   177fc:	cmp	r0, #3
   17800:	bne	18c48 <__flatcc_fb_gen_c_reader@@Base+0x1d24>
   17804:	ldr	r0, [r1, #12]
   17808:	mov	r8, r4
   1780c:	mov	r4, r7
   17810:	mov	r7, r2
   17814:	sub	r2, fp, #480	; 0x1e0
   17818:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   1781c:	ldr	r3, [pc, #4064]	; 18804 <__flatcc_fb_gen_c_reader@@Base+0x18e0>
   17820:	ldr	r0, [pc, #4064]	; 18808 <__flatcc_fb_gen_c_reader@@Base+0x18e4>
   17824:	cmp	r5, #1
   17828:	add	r0, pc, r0
   1782c:	add	r3, pc, r3
   17830:	moveq	r3, r0
   17834:	ldr	r0, [sp, #72]	; 0x48
   17838:	cmp	r6, #0
   1783c:	ldr	r0, [r0]
   17840:	beq	17874 <__flatcc_fb_gen_c_reader@@Base+0x950>
   17844:	ldr	r1, [pc, #4032]	; 1880c <__flatcc_fb_gen_c_reader@@Base+0x18e8>
   17848:	sub	r2, fp, #480	; 0x1e0
   1784c:	add	r1, pc, r1
   17850:	b	17888 <__flatcc_fb_gen_c_reader@@Base+0x964>
   17854:	stm	sp, {r3, r4, r7}
   17858:	ldr	r1, [pc, #4084]	; 18854 <__flatcc_fb_gen_c_reader@@Base+0x1930>
   1785c:	ldr	r4, [sp, #68]	; 0x44
   17860:	add	r1, pc, r1
   17864:	mov	r3, r4
   17868:	bl	148bc <fprintf@plt>
   1786c:	add	r4, r4, #1
   17870:	b	175d4 <__flatcc_fb_gen_c_reader@@Base+0x6b0>
   17874:	str	r3, [sp]
   17878:	mov	r2, r7
   1787c:	sub	r3, fp, #480	; 0x1e0
   17880:	ldr	r1, [pc, #4048]	; 18858 <__flatcc_fb_gen_c_reader@@Base+0x1934>
   17884:	add	r1, pc, r1
   17888:	bl	148bc <fprintf@plt>
   1788c:	mov	r7, r4
   17890:	mov	r4, r8
   17894:	b	175b0 <__flatcc_fb_gen_c_reader@@Base+0x68c>
   17898:	ldr	r7, [sp, #48]	; 0x30
   1789c:	ldr	r2, [sp, #56]	; 0x38
   178a0:	b	17928 <__flatcc_fb_gen_c_reader@@Base+0xa04>
   178a4:	ldr	r4, [sp, #72]	; 0x48
   178a8:	sub	r5, fp, #256	; 0x100
   178ac:	mov	r2, r5
   178b0:	ldr	r0, [r4]
   178b4:	ldr	r1, [pc, #4000]	; 1885c <__flatcc_fb_gen_c_reader@@Base+0x1938>
   178b8:	add	r1, pc, r1
   178bc:	bl	148bc <fprintf@plt>
   178c0:	ldr	r0, [r4]
   178c4:	str	r5, [sp]
   178c8:	mov	r2, r5
   178cc:	mov	r3, r5
   178d0:	ldr	r1, [pc, #4088]	; 188d0 <__flatcc_fb_gen_c_reader@@Base+0x19ac>
   178d4:	add	r1, pc, r1
   178d8:	bl	148bc <fprintf@plt>
   178dc:	ldr	r0, [r4]
   178e0:	str	r5, [sp]
   178e4:	mov	r2, r5
   178e8:	mov	r3, r5
   178ec:	ldr	r1, [pc, #4064]	; 188d4 <__flatcc_fb_gen_c_reader@@Base+0x19b0>
   178f0:	add	r1, pc, r1
   178f4:	bl	148bc <fprintf@plt>
   178f8:	ldr	r0, [r4]
   178fc:	str	r5, [sp]
   17900:	mov	r2, r5
   17904:	mov	r3, r5
   17908:	ldr	r1, [pc, #4040]	; 188d8 <__flatcc_fb_gen_c_reader@@Base+0x19b4>
   1790c:	add	r1, pc, r1
   17910:	bl	148bc <fprintf@plt>
   17914:	ldr	r4, [sp, #64]	; 0x40
   17918:	mov	r7, r8
   1791c:	b	17a18 <__flatcc_fb_gen_c_reader@@Base+0xaf4>
   17920:	mov	r2, #0
   17924:	mov	r8, #0
   17928:	ldr	sl, [sp, #44]	; 0x2c
   1792c:	cmp	r6, #0
   17930:	beq	17980 <__flatcc_fb_gen_c_reader@@Base+0xa5c>
   17934:	ldr	r0, [sl]
   17938:	ldr	r4, [sp, #72]	; 0x48
   1793c:	subs	r3, r0, r8
   17940:	beq	17954 <__flatcc_fb_gen_c_reader@@Base+0xa30>
   17944:	ldr	r0, [r4]
   17948:	ldr	r1, [pc, #3980]	; 188dc <__flatcc_fb_gen_c_reader@@Base+0x19b8>
   1794c:	add	r1, pc, r1
   17950:	bl	148bc <fprintf@plt>
   17954:	ldr	r3, [r4]
   17958:	ldr	r0, [pc, #3968]	; 188e0 <__flatcc_fb_gen_c_reader@@Base+0x19bc>
   1795c:	mov	r1, #3
   17960:	mov	r2, #1
   17964:	add	r0, pc, r0
   17968:	bl	14850 <fwrite@plt>
   1796c:	ldr	r3, [r4]
   17970:	ldr	r0, [pc, #3948]	; 188e4 <__flatcc_fb_gen_c_reader@@Base+0x19c0>
   17974:	mov	r1, #15
   17978:	add	r0, pc, r0
   1797c:	b	17994 <__flatcc_fb_gen_c_reader@@Base+0xa70>
   17980:	ldr	r0, [sp, #72]	; 0x48
   17984:	mov	r1, #3
   17988:	ldr	r3, [r0]
   1798c:	ldr	r0, [pc, #3924]	; 188e8 <__flatcc_fb_gen_c_reader@@Base+0x19c4>
   17990:	add	r0, pc, r0
   17994:	mov	r2, #1
   17998:	bl	14850 <fwrite@plt>
   1799c:	ldr	r4, [sp, #64]	; 0x40
   179a0:	ldrd	r2, [sl]
   179a4:	sub	r5, fp, #256	; 0x100
   179a8:	ldr	r0, [r4, #204]	; 0xcc
   179ac:	stm	sp, {r2, r3}
   179b0:	mov	r2, r5
   179b4:	ldr	r1, [pc, #3888]	; 188ec <__flatcc_fb_gen_c_reader@@Base+0x19c8>
   179b8:	add	r1, pc, r1
   179bc:	bl	148bc <fprintf@plt>
   179c0:	ldr	r0, [r4, #204]	; 0xcc
   179c4:	str	r5, [sp]
   179c8:	mov	r2, r5
   179cc:	mov	r3, r5
   179d0:	ldr	r1, [pc, #3864]	; 188f0 <__flatcc_fb_gen_c_reader@@Base+0x19cc>
   179d4:	add	r1, pc, r1
   179d8:	bl	148bc <fprintf@plt>
   179dc:	ldr	r0, [r4, #204]	; 0xcc
   179e0:	str	r5, [sp]
   179e4:	mov	r2, r5
   179e8:	mov	r3, r5
   179ec:	ldr	r1, [pc, #3840]	; 188f4 <__flatcc_fb_gen_c_reader@@Base+0x19d0>
   179f0:	add	r1, pc, r1
   179f4:	bl	148bc <fprintf@plt>
   179f8:	ldr	r0, [r4, #204]	; 0xcc
   179fc:	str	r5, [sp]
   17a00:	str	r4, [sp, #4]
   17a04:	mov	r2, r5
   17a08:	mov	r3, r5
   17a0c:	ldr	r1, [pc, #3812]	; 188f8 <__flatcc_fb_gen_c_reader@@Base+0x19d4>
   17a10:	add	r1, pc, r1
   17a14:	bl	148bc <fprintf@plt>
   17a18:	ldrd	r2, [sl]
   17a1c:	ldr	r0, [r4, #204]	; 0xcc
   17a20:	stm	sp, {r2, r3}
   17a24:	mov	r2, r5
   17a28:	ldr	r1, [pc, #3788]	; 188fc <__flatcc_fb_gen_c_reader@@Base+0x19d8>
   17a2c:	add	r1, pc, r1
   17a30:	bl	148bc <fprintf@plt>
   17a34:	ldr	r0, [r4, #204]	; 0xcc
   17a38:	str	r4, [sp]
   17a3c:	mov	r2, r5
   17a40:	mov	r3, r5
   17a44:	ldr	r1, [pc, #3764]	; 18900 <__flatcc_fb_gen_c_reader@@Base+0x19dc>
   17a48:	add	r1, pc, r1
   17a4c:	bl	148bc <fprintf@plt>
   17a50:	ldr	r0, [r4, #204]	; 0xcc
   17a54:	ldr	r1, [pc, #3752]	; 18904 <__flatcc_fb_gen_c_reader@@Base+0x19e0>
   17a58:	mov	r2, r4
   17a5c:	mov	r3, r5
   17a60:	add	r1, pc, r1
   17a64:	bl	148bc <fprintf@plt>
   17a68:	ldr	r1, [r4, #204]	; 0xcc
   17a6c:	mov	r0, #10
   17a70:	bl	1491c <fputc@plt>
   17a74:	ldr	r4, [r7, #20]
   17a78:	cmp	r4, #0
   17a7c:	beq	17380 <__flatcc_fb_gen_c_reader@@Base+0x45c>
   17a80:	mov	sl, #0
   17a84:	mov	r9, #0
   17a88:	b	17aa0 <__flatcc_fb_gen_c_reader@@Base+0xb7c>
   17a8c:	mov	sl, #1
   17a90:	mov	r5, r8
   17a94:	ldr	r4, [r4]
   17a98:	cmp	r4, #0
   17a9c:	beq	17380 <__flatcc_fb_gen_c_reader@@Base+0x45c>
   17aa0:	ldrb	r0, [r4, #72]	; 0x48
   17aa4:	tst	r0, #4
   17aa8:	bne	17a94 <__flatcc_fb_gen_c_reader@@Base+0xb70>
   17aac:	ldr	r1, [r4, #4]
   17ab0:	ldrh	r0, [r4, #24]
   17ab4:	ldm	r1, {r6, r7}
   17ab8:	cmp	r0, #14
   17abc:	beq	17b30 <__flatcc_fb_gen_c_reader@@Base+0xc0c>
   17ac0:	cmp	r0, #8
   17ac4:	bne	17d5c <__flatcc_fb_gen_c_reader@@Base+0xe38>
   17ac8:	ldr	r5, [r4, #16]
   17acc:	sub	r1, r5, #1
   17ad0:	cmp	r1, #11
   17ad4:	bcs	18b28 <__flatcc_fb_gen_c_reader@@Base+0x1c04>
   17ad8:	ldr	r0, [pc, #4060]	; 18abc <__flatcc_fb_gen_c_reader@@Base+0x1b98>
   17adc:	ldr	r2, [sp, #64]	; 0x40
   17ae0:	cmp	r5, #5
   17ae4:	sub	r5, fp, #256	; 0x100
   17ae8:	add	r0, pc, r0
   17aec:	ldr	r3, [r0, r1, lsl #2]
   17af0:	ldr	r0, [r2, #204]	; 0xcc
   17af4:	str	r3, [sp, #20]
   17af8:	ldr	r3, [pc, #4032]	; 18ac0 <__flatcc_fb_gen_c_reader@@Base+0x1b9c>
   17afc:	add	r3, pc, r3
   17b00:	moveq	r3, r2
   17b04:	str	r3, [sp, #16]
   17b08:	ldr	r3, [pc, #4020]	; 18ac4 <__flatcc_fb_gen_c_reader@@Base+0x1ba0>
   17b0c:	str	r2, [sp, #8]
   17b10:	str	r6, [sp, #4]
   17b14:	str	r7, [sp]
   17b18:	add	r3, pc, r3
   17b1c:	ldr	r1, [r3, r1, lsl #2]
   17b20:	str	r1, [sp, #12]
   17b24:	ldr	r1, [pc, #4088]	; 18b24 <__flatcc_fb_gen_c_reader@@Base+0x1c00>
   17b28:	add	r1, pc, r1
   17b2c:	b	17d54 <__flatcc_fb_gen_c_reader@@Base+0xe30>
   17b30:	ldr	r1, [r4, #16]
   17b34:	sub	r2, fp, #480	; 0x1e0
   17b38:	ldr	r0, [r1, #12]
   17b3c:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   17b40:	ldr	r0, [r4, #16]
   17b44:	ldrh	r1, [r0, #8]
   17b48:	cmp	r1, #1
   17b4c:	beq	17d34 <__flatcc_fb_gen_c_reader@@Base+0xe10>
   17b50:	cmp	r1, #3
   17b54:	bne	17d5c <__flatcc_fb_gen_c_reader@@Base+0xe38>
   17b58:	ldr	r0, [r0, #40]	; 0x28
   17b5c:	sub	r0, r0, #1
   17b60:	cmp	r0, #11
   17b64:	bcs	18c6c <__flatcc_fb_gen_c_reader@@Base+0x1d48>
   17b68:	ldr	r5, [sp, #64]	; 0x40
   17b6c:	sub	r1, fp, #480	; 0x1e0
   17b70:	sub	r8, fp, #256	; 0x100
   17b74:	mov	r3, r8
   17b78:	ldr	r0, [r5, #204]	; 0xcc
   17b7c:	str	r7, [sp]
   17b80:	str	r6, [sp, #4]
   17b84:	str	r1, [sp, #8]
   17b88:	str	r1, [sp, #12]
   17b8c:	mov	r2, r5
   17b90:	ldr	r1, [pc, #4064]	; 18b78 <__flatcc_fb_gen_c_reader@@Base+0x1c54>
   17b94:	add	r1, pc, r1
   17b98:	bl	148bc <fprintf@plt>
   17b9c:	ldr	r0, [r5, #212]	; 0xd4
   17ba0:	mov	r5, r8
   17ba4:	ldr	r0, [r0, #32]
   17ba8:	cmp	r0, #0
   17bac:	bne	17be4 <__flatcc_fb_gen_c_reader@@Base+0xcc0>
   17bb0:	ldrb	r0, [r4, #72]	; 0x48
   17bb4:	tst	r0, #128	; 0x80
   17bb8:	beq	17be4 <__flatcc_fb_gen_c_reader@@Base+0xcc0>
   17bbc:	ldr	r2, [sp, #64]	; 0x40
   17bc0:	sub	r1, fp, #480	; 0x1e0
   17bc4:	mov	r3, r5
   17bc8:	ldr	r0, [r2, #204]	; 0xcc
   17bcc:	str	r7, [sp]
   17bd0:	str	r6, [sp, #4]
   17bd4:	str	r1, [sp, #8]
   17bd8:	ldr	r1, [pc, #3996]	; 18b7c <__flatcc_fb_gen_c_reader@@Base+0x1c58>
   17bdc:	add	r1, pc, r1
   17be0:	bl	148bc <fprintf@plt>
   17be4:	ldrb	r0, [r4, #72]	; 0x48
   17be8:	tst	r0, #128	; 0x80
   17bec:	beq	17d5c <__flatcc_fb_gen_c_reader@@Base+0xe38>
   17bf0:	cmp	sl, #0
   17bf4:	beq	17c14 <__flatcc_fb_gen_c_reader@@Base+0xcf0>
   17bf8:	ldr	r0, [sp, #72]	; 0x48
   17bfc:	mov	r1, #66	; 0x42
   17c00:	mov	r2, #1
   17c04:	ldr	r3, [r0]
   17c08:	ldr	r0, [pc, #4060]	; 18bec <__flatcc_fb_gen_c_reader@@Base+0x1cc8>
   17c0c:	add	r0, pc, r0
   17c10:	bl	14850 <fwrite@plt>
   17c14:	ldr	r5, [sp, #64]	; 0x40
   17c18:	mov	r1, #61	; 0x3d
   17c1c:	mov	r2, #1
   17c20:	ldr	r3, [r5, #204]	; 0xcc
   17c24:	ldr	r0, [pc, #4036]	; 18bf0 <__flatcc_fb_gen_c_reader@@Base+0x1ccc>
   17c28:	add	r0, pc, r0
   17c2c:	bl	14850 <fwrite@plt>
   17c30:	sub	r9, fp, #480	; 0x1e0
   17c34:	ldr	r0, [r5, #204]	; 0xcc
   17c38:	str	r7, [sp]
   17c3c:	str	r6, [sp, #4]
   17c40:	sub	r8, fp, #256	; 0x100
   17c44:	mov	r2, r5
   17c48:	str	r9, [sp, #8]
   17c4c:	mov	r3, r8
   17c50:	ldr	r1, [pc, #4076]	; 18c44 <__flatcc_fb_gen_c_reader@@Base+0x1d20>
   17c54:	add	r1, pc, r1
   17c58:	bl	148bc <fprintf@plt>
   17c5c:	ldr	r0, [r5, #212]	; 0xd4
   17c60:	ldr	r0, [r0, #136]	; 0x88
   17c64:	cmp	r0, #0
   17c68:	beq	17c90 <__flatcc_fb_gen_c_reader@@Base+0xd6c>
   17c6c:	ldr	r0, [r5, #204]	; 0xcc
   17c70:	str	r7, [sp]
   17c74:	stmib	sp, {r6, r9}
   17c78:	str	r8, [sp, #12]
   17c7c:	mov	r2, r5
   17c80:	mov	r3, r8
   17c84:	ldr	r1, [pc, #4060]	; 18c68 <__flatcc_fb_gen_c_reader@@Base+0x1d44>
   17c88:	add	r1, pc, r1
   17c8c:	bl	148bc <fprintf@plt>
   17c90:	mov	r9, #1
   17c94:	cmp	sl, #0
   17c98:	mov	r5, r8
   17c9c:	bne	17a94 <__flatcc_fb_gen_c_reader@@Base+0xb70>
   17ca0:	mov	r9, r5
   17ca4:	ldr	r5, [sp, #64]	; 0x40
   17ca8:	sub	r1, fp, #480	; 0x1e0
   17cac:	mov	r8, r1
   17cb0:	mov	r3, r9
   17cb4:	ldr	r0, [r5, #204]	; 0xcc
   17cb8:	str	r7, [sp]
   17cbc:	str	r6, [sp, #4]
   17cc0:	str	r1, [sp, #8]
   17cc4:	mov	r2, r5
   17cc8:	ldr	r1, [pc, #4076]	; 18cbc <__flatcc_fb_gen_c_reader@@Base+0x1d98>
   17ccc:	add	r1, pc, r1
   17cd0:	bl	148bc <fprintf@plt>
   17cd4:	ldr	r0, [r5, #204]	; 0xcc
   17cd8:	str	r7, [sp]
   17cdc:	stmib	sp, {r6, r8}
   17ce0:	mov	r2, r5
   17ce4:	mov	r3, r9
   17ce8:	mov	r8, r9
   17cec:	ldr	r1, [pc, #4076]	; 18ce0 <__flatcc_fb_gen_c_reader@@Base+0x1dbc>
   17cf0:	add	r1, pc, r1
   17cf4:	bl	148bc <fprintf@plt>
   17cf8:	ldr	r0, [r5, #212]	; 0xd4
   17cfc:	mov	r9, #1
   17d00:	ldr	r0, [r0, #136]	; 0x88
   17d04:	cmp	r0, #0
   17d08:	beq	17a8c <__flatcc_fb_gen_c_reader@@Base+0xb68>
   17d0c:	ldr	r0, [sp, #72]	; 0x48
   17d10:	mov	r2, r8
   17d14:	mov	r3, r8
   17d18:	ldr	r0, [r0]
   17d1c:	str	r7, [sp]
   17d20:	str	r6, [sp, #4]
   17d24:	ldr	r1, [pc, #4024]	; 18ce4 <__flatcc_fb_gen_c_reader@@Base+0x1dc0>
   17d28:	add	r1, pc, r1
   17d2c:	bl	148bc <fprintf@plt>
   17d30:	b	17a8c <__flatcc_fb_gen_c_reader@@Base+0xb68>
   17d34:	ldr	r2, [sp, #64]	; 0x40
   17d38:	sub	r1, fp, #480	; 0x1e0
   17d3c:	ldr	r0, [r2, #204]	; 0xcc
   17d40:	str	r7, [sp]
   17d44:	str	r6, [sp, #4]
   17d48:	str	r1, [sp, #8]
   17d4c:	ldr	r1, [pc, #4068]	; 18d38 <__flatcc_fb_gen_c_reader@@Base+0x1e14>
   17d50:	add	r1, pc, r1
   17d54:	mov	r3, r5
   17d58:	bl	148bc <fprintf@plt>
   17d5c:	cmp	r9, #0
   17d60:	bne	17a94 <__flatcc_fb_gen_c_reader@@Base+0xb70>
   17d64:	ldrh	r0, [r4, #72]	; 0x48
   17d68:	ands	r0, r0, #128	; 0x80
   17d6c:	beq	17a94 <__flatcc_fb_gen_c_reader@@Base+0xb70>
   17d70:	ldr	r0, [sp, #72]	; 0x48
   17d74:	mov	r1, #84	; 0x54
   17d78:	mov	r2, #1
   17d7c:	mov	sl, #1
   17d80:	ldr	r3, [r0]
   17d84:	ldr	r0, [pc, #4016]	; 18d3c <__flatcc_fb_gen_c_reader@@Base+0x1e18>
   17d88:	add	r0, pc, r0
   17d8c:	bl	14850 <fwrite@plt>
   17d90:	mov	r9, #0
   17d94:	b	17a94 <__flatcc_fb_gen_c_reader@@Base+0xb70>
   17d98:	ldr	r0, [r8, #208]	; 0xd0
   17d9c:	ldr	r4, [r0, #40]	; 0x28
   17da0:	cmp	r4, #0
   17da4:	beq	18ac8 <__flatcc_fb_gen_c_reader@@Base+0x1ba4>
   17da8:	ldr	r9, [pc, #4064]	; 18d90 <__flatcc_fb_gen_c_reader@@Base+0x1e6c>
   17dac:	add	r7, sp, #400	; 0x190
   17db0:	add	r9, pc, r9
   17db4:	b	17dcc <__flatcc_fb_gen_c_reader@@Base+0xea8>
   17db8:	ldr	r4, [sp, #60]	; 0x3c
   17dbc:	add	r7, sp, #400	; 0x190
   17dc0:	ldr	r4, [r4]
   17dc4:	cmp	r4, #0
   17dc8:	beq	18ac8 <__flatcc_fb_gen_c_reader@@Base+0x1ba4>
   17dcc:	ldrh	r0, [r4, #8]
   17dd0:	sub	r1, r0, #1
   17dd4:	cmp	r1, #3
   17dd8:	bcc	17dc0 <__flatcc_fb_gen_c_reader@@Base+0xe9c>
   17ddc:	cmp	r0, #0
   17de0:	str	r4, [sp, #60]	; 0x3c
   17de4:	beq	17e04 <__flatcc_fb_gen_c_reader@@Base+0xee0>
   17de8:	ldr	r4, [sp, #60]	; 0x3c
   17dec:	cmp	r0, #4
   17df0:	bne	18ce8 <__flatcc_fb_gen_c_reader@@Base+0x1dc4>
   17df4:	mov	r0, r8
   17df8:	mov	r1, r4
   17dfc:	bl	1925c <__flatcc_fb_gen_c_reader@@Base+0x2338>
   17e00:	b	17dc0 <__flatcc_fb_gen_c_reader@@Base+0xe9c>
   17e04:	mov	r0, r7
   17e08:	mov	r1, #0
   17e0c:	mov	r2, #220	; 0xdc
   17e10:	bl	148d4 <memset@plt>
   17e14:	add	r0, sp, #176	; 0xb0
   17e18:	mov	r1, #0
   17e1c:	mov	r2, #220	; 0xdc
   17e20:	bl	148d4 <memset@plt>
   17e24:	ldr	r0, [sp, #72]	; 0x48
   17e28:	ldr	r1, [r0]
   17e2c:	mov	r0, #10
   17e30:	bl	1491c <fputc@plt>
   17e34:	ldr	r4, [sp, #60]	; 0x3c
   17e38:	mov	r2, r7
   17e3c:	ldr	r0, [r4, #12]
   17e40:	mov	r1, r4
   17e44:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   17e48:	ldr	r5, [r4, #32]
   17e4c:	cmp	r5, #0
   17e50:	beq	17f44 <__flatcc_fb_gen_c_reader@@Base+0x1020>
   17e54:	ldr	r0, [r5, #4]
   17e58:	ldr	r4, [sp, #72]	; 0x48
   17e5c:	ldr	r0, [r0, #8]
   17e60:	cmp	r0, #0
   17e64:	beq	17e7c <__flatcc_fb_gen_c_reader@@Base+0xf58>
   17e68:	ldr	r0, [r4]
   17e6c:	ldr	r1, [pc, #4016]	; 18e24 <__flatcc_fb_gen_c_reader@@Base+0x1f00>
   17e70:	mov	r2, r6
   17e74:	add	r1, pc, r1
   17e78:	bl	148bc <fprintf@plt>
   17e7c:	ldr	r1, [r5, #4]
   17e80:	ldr	r0, [r4]
   17e84:	ldr	r3, [r1]
   17e88:	ldr	r2, [r1, #4]
   17e8c:	mov	r1, r9
   17e90:	bl	148bc <fprintf@plt>
   17e94:	ldr	r4, [r5]
   17e98:	cmp	r4, #0
   17e9c:	beq	17f28 <__flatcc_fb_gen_c_reader@@Base+0x1004>
   17ea0:	ldr	r0, [r5, #4]
   17ea4:	ldr	r0, [r0, #8]
   17ea8:	b	17ee0 <__flatcc_fb_gen_c_reader@@Base+0xfbc>
   17eac:	ldr	r0, [sp, #72]	; 0x48
   17eb0:	ldr	r1, [r4, #4]
   17eb4:	ldr	r0, [r0]
   17eb8:	ldr	r3, [r1]
   17ebc:	ldr	r2, [r1, #4]
   17ec0:	mov	r1, r9
   17ec4:	bl	148bc <fprintf@plt>
   17ec8:	ldr	r0, [r4, #4]
   17ecc:	ldr	r1, [r4]
   17ed0:	ldr	r0, [r0, #8]
   17ed4:	cmp	r1, #0
   17ed8:	mov	r4, r1
   17edc:	beq	17f28 <__flatcc_fb_gen_c_reader@@Base+0x1004>
   17ee0:	ldr	r1, [r4, #4]
   17ee4:	ldr	r1, [r1, #8]
   17ee8:	cmp	r0, r1
   17eec:	beq	17eac <__flatcc_fb_gen_c_reader@@Base+0xf88>
   17ef0:	ldr	r0, [sp, #72]	; 0x48
   17ef4:	mov	r2, r6
   17ef8:	ldr	r0, [r0]
   17efc:	ldr	r1, [pc, #4068]	; 18ee8 <__flatcc_fb_gen_c_reader@@Base+0x1fc4>
   17f00:	add	r1, pc, r1
   17f04:	bl	148bc <fprintf@plt>
   17f08:	b	17eac <__flatcc_fb_gen_c_reader@@Base+0xf88>
   17f0c:	andeq	lr, r2, pc, lsl #10
   17f10:	strdeq	r8, [r2], -r1
   17f14:	strdeq	lr, [r2], -r8
   17f18:	muleq	r2, ip, r6
   17f1c:	andeq	pc, r3, r5, lsr #4
   17f20:	andeq	lr, r2, r4, asr #13
   17f24:			; <UNDEFINED> instruction: 0x0002e6ba
   17f28:	ldr	r0, [sp, #72]	; 0x48
   17f2c:	mov	r1, #4
   17f30:	mov	r2, #1
   17f34:	ldr	r3, [r0]
   17f38:	ldr	r0, [pc, #4044]	; 18f0c <__flatcc_fb_gen_c_reader@@Base+0x1fe8>
   17f3c:	add	r0, pc, r0
   17f40:	bl	14850 <fwrite@plt>
   17f44:	ldr	r8, [sp, #64]	; 0x40
   17f48:	mov	r2, r7
   17f4c:	ldr	r0, [r8, #204]	; 0xcc
   17f50:	ldr	r1, [pc, #4024]	; 18f10 <__flatcc_fb_gen_c_reader@@Base+0x1fec>
   17f54:	add	r1, pc, r1
   17f58:	bl	148bc <fprintf@plt>
   17f5c:	ldr	r0, [r8, #204]	; 0xcc
   17f60:	str	r8, [sp]
   17f64:	mov	r2, r7
   17f68:	mov	r3, r7
   17f6c:	ldr	r1, [pc, #4000]	; 18f14 <__flatcc_fb_gen_c_reader@@Base+0x1ff0>
   17f70:	add	r1, pc, r1
   17f74:	bl	148bc <fprintf@plt>
   17f78:	ldr	r0, [r8, #204]	; 0xcc
   17f7c:	stm	sp, {r7, r8}
   17f80:	str	r7, [sp, #8]
   17f84:	mov	r2, r7
   17f88:	mov	r3, r7
   17f8c:	ldr	r1, [pc, #3972]	; 18f18 <__flatcc_fb_gen_c_reader@@Base+0x1ff4>
   17f90:	add	r1, pc, r1
   17f94:	bl	148bc <fprintf@plt>
   17f98:	ldr	r0, [r8, #204]	; 0xcc
   17f9c:	ldr	r1, [pc, #3960]	; 18f1c <__flatcc_fb_gen_c_reader@@Base+0x1ff8>
   17fa0:	mov	r2, r8
   17fa4:	mov	r3, r7
   17fa8:	add	r1, pc, r1
   17fac:	bl	148bc <fprintf@plt>
   17fb0:	ldr	r1, [r8, #204]	; 0xcc
   17fb4:	mov	r0, #10
   17fb8:	bl	1491c <fputc@plt>
   17fbc:	ldr	r0, [sp, #60]	; 0x3c
   17fc0:	ldr	r7, [r0, #20]
   17fc4:	cmp	r7, #0
   17fc8:	beq	17db8 <__flatcc_fb_gen_c_reader@@Base+0xe94>
   17fcc:	mov	r0, #0
   17fd0:	str	r0, [sp, #68]	; 0x44
   17fd4:	b	1802c <__flatcc_fb_gen_c_reader@@Base+0x1108>
   17fd8:	andeq	lr, r2, r8, asr r6
   17fdc:	andeq	pc, r3, r1, ror #3
   17fe0:	andeq	lr, r2, r0, lsl #13
   17fe4:	andeq	lr, r2, r2, ror r6
   17fe8:	andeq	lr, r2, r6, lsl #13
   17fec:	strdeq	r8, [r2], -r4
   17ff0:	andeq	lr, r2, r9, ror #12
   17ff4:	ldr	r0, [sp, #72]	; 0x48
   17ff8:	add	r2, sp, #400	; 0x190
   17ffc:	mov	r3, sl
   18000:	ldr	r0, [r0]
   18004:	str	r4, [sp]
   18008:	ldr	r1, [pc, #3868]	; 18f2c <__flatcc_fb_gen_c_reader@@Base+0x2008>
   1800c:	add	r1, pc, r1
   18010:	bl	148bc <fprintf@plt>
   18014:	ldr	r8, [sp, #64]	; 0x40
   18018:	ldr	r7, [r7]
   1801c:	ldr	r6, [pc, #4032]	; 18fe4 <__flatcc_fb_gen_c_reader@@Base+0x20c0>
   18020:	cmp	r7, #0
   18024:	add	r6, pc, r6
   18028:	beq	17db8 <__flatcc_fb_gen_c_reader@@Base+0xe94>
   1802c:	ldr	r5, [r7, #68]	; 0x44
   18030:	cmp	r5, #0
   18034:	beq	18118 <__flatcc_fb_gen_c_reader@@Base+0x11f4>
   18038:	ldr	r0, [r5, #4]
   1803c:	ldr	r4, [sp, #72]	; 0x48
   18040:	ldr	r0, [r0, #8]
   18044:	cmp	r0, #0
   18048:	beq	18060 <__flatcc_fb_gen_c_reader@@Base+0x113c>
   1804c:	ldr	r0, [r4]
   18050:	ldr	r1, [pc, #3784]	; 18f20 <__flatcc_fb_gen_c_reader@@Base+0x1ffc>
   18054:	mov	r2, r6
   18058:	add	r1, pc, r1
   1805c:	bl	148bc <fprintf@plt>
   18060:	ldr	r1, [r5, #4]
   18064:	ldr	r0, [r4]
   18068:	ldr	r3, [r1]
   1806c:	ldr	r2, [r1, #4]
   18070:	mov	r1, r9
   18074:	bl	148bc <fprintf@plt>
   18078:	ldr	r4, [r5]
   1807c:	cmp	r4, #0
   18080:	beq	180fc <__flatcc_fb_gen_c_reader@@Base+0x11d8>
   18084:	ldr	r0, [r5, #4]
   18088:	ldr	r0, [r0, #8]
   1808c:	b	180d0 <__flatcc_fb_gen_c_reader@@Base+0x11ac>
   18090:	andeq	lr, r2, lr, lsl #13
   18094:	andeq	lr, r2, lr, lsl #13
   18098:	andeq	lr, r2, r6, lsr #13
   1809c:	ldr	r0, [sp, #72]	; 0x48
   180a0:	ldr	r1, [r4, #4]
   180a4:	ldr	r0, [r0]
   180a8:	ldr	r3, [r1]
   180ac:	ldr	r2, [r1, #4]
   180b0:	mov	r1, r9
   180b4:	bl	148bc <fprintf@plt>
   180b8:	ldr	r0, [r4, #4]
   180bc:	ldr	r1, [r4]
   180c0:	ldr	r0, [r0, #8]
   180c4:	cmp	r1, #0
   180c8:	mov	r4, r1
   180cc:	beq	180fc <__flatcc_fb_gen_c_reader@@Base+0x11d8>
   180d0:	ldr	r1, [r4, #4]
   180d4:	ldr	r1, [r1, #8]
   180d8:	cmp	r0, r1
   180dc:	beq	1809c <__flatcc_fb_gen_c_reader@@Base+0x1178>
   180e0:	ldr	r0, [sp, #72]	; 0x48
   180e4:	mov	r2, r6
   180e8:	ldr	r0, [r0]
   180ec:	ldr	r1, [pc, #3632]	; 18f24 <__flatcc_fb_gen_c_reader@@Base+0x2000>
   180f0:	add	r1, pc, r1
   180f4:	bl	148bc <fprintf@plt>
   180f8:	b	1809c <__flatcc_fb_gen_c_reader@@Base+0x1178>
   180fc:	ldr	r0, [sp, #72]	; 0x48
   18100:	mov	r1, #4
   18104:	mov	r2, #1
   18108:	ldr	r3, [r0]
   1810c:	ldr	r0, [pc, #3604]	; 18f28 <__flatcc_fb_gen_c_reader@@Base+0x2004>
   18110:	add	r0, pc, r0
   18114:	bl	14850 <fwrite@plt>
   18118:	ldr	r1, [r7, #4]
   1811c:	ldrh	r0, [r7, #72]	; 0x48
   18120:	ldm	r1, {r4, sl}
   18124:	tst	r0, #4
   18128:	bne	17ff4 <__flatcc_fb_gen_c_reader@@Base+0x10d0>
   1812c:	ubfx	r6, r0, #8, #1
   18130:	ldrh	r0, [r7, #24]
   18134:	sub	r0, r0, #7
   18138:	cmp	r0, #8
   1813c:	bhi	18bf4 <__flatcc_fb_gen_c_reader@@Base+0x1cd0>
   18140:	add	r1, pc, #8
   18144:	add	r5, r7, #96	; 0x60
   18148:	ldr	r0, [r1, r0, lsl #2]
   1814c:	add	pc, r1, r0
   18150:	andeq	r0, r0, ip, lsr #32
   18154:	strdeq	r0, [r0], -ip
   18158:	andeq	r0, r0, ip, asr #10
   1815c:	andeq	r0, r0, r8, asr r1
   18160:	andeq	r0, r0, r4, lsr #21
   18164:	andeq	r0, r0, r4, lsr #21
   18168:	andeq	r0, r0, r4, lsr #21
   1816c:	strdeq	r0, [r0], -r8
   18170:	andeq	r0, r0, r4, lsl #11
   18174:	andeq	lr, r2, r8, lsl #15
   18178:	andeq	lr, r2, sp, lsr #15
   1817c:	ldr	r0, [r7, #16]
   18180:	sub	r1, r0, #1
   18184:	cmp	r1, #11
   18188:	bcs	18e28 <__flatcc_fb_gen_c_reader@@Base+0x1f04>
   1818c:	ldr	r8, [sp, #64]	; 0x40
   18190:	ldr	r3, [r5, #4]
   18194:	ldr	r5, [r5]
   18198:	ldr	r0, [r8, #204]	; 0xcc
   1819c:	str	r6, [sp, #28]
   181a0:	mov	r2, r8
   181a4:	ldr	r6, [pc, #3504]	; 18f5c <__flatcc_fb_gen_c_reader@@Base+0x2038>
   181a8:	str	r8, [sp, #20]
   181ac:	str	r4, [sp, #16]
   181b0:	str	sl, [sp, #12]
   181b4:	str	r3, [sp, #4]
   181b8:	str	r5, [sp]
   181bc:	add	r6, pc, r6
   181c0:	ldr	r1, [r6, r1, lsl #2]
   181c4:	str	r1, [sp, #24]
   181c8:	add	r1, sp, #400	; 0x190
   181cc:	str	r1, [sp, #8]
   181d0:	ldr	r1, [pc, #3464]	; 18f60 <__flatcc_fb_gen_c_reader@@Base+0x203c>
   181d4:	add	r1, pc, r1
   181d8:	bl	148bc <fprintf@plt>
   181dc:	ldr	r4, [r7, #104]	; 0x68
   181e0:	cmp	r4, #0
   181e4:	beq	1889c <__flatcc_fb_gen_c_reader@@Base+0x1978>
   181e8:	sub	r6, fp, #256	; 0x100
   181ec:	mov	r1, #0
   181f0:	mov	r2, #220	; 0xdc
   181f4:	mov	r0, r6
   181f8:	bl	148d4 <memset@plt>
   181fc:	sub	r0, fp, #480	; 0x1e0
   18200:	mov	r1, #0
   18204:	mov	r2, #220	; 0xdc
   18208:	bl	148d4 <memset@plt>
   1820c:	ldrh	r0, [r4, #8]
   18210:	ldr	r5, [pc, #3404]	; 18f64 <__flatcc_fb_gen_c_reader@@Base+0x2040>
   18214:	cmp	r0, #0
   18218:	add	r5, pc, r5
   1821c:	beq	18230 <__flatcc_fb_gen_c_reader@@Base+0x130c>
   18220:	cmp	r0, #1
   18224:	bne	18e78 <__flatcc_fb_gen_c_reader@@Base+0x1f54>
   18228:	ldr	r5, [pc, #3384]	; 18f68 <__flatcc_fb_gen_c_reader@@Base+0x2044>
   1822c:	add	r5, pc, r5
   18230:	ldr	r0, [r4, #12]
   18234:	mov	r1, r4
   18238:	mov	r2, r6
   1823c:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   18240:	ldr	r1, [sp, #60]	; 0x3c
   18244:	ldrh	r0, [r1, #8]
   18248:	cmp	r0, #0
   1824c:	bne	18ec8 <__flatcc_fb_gen_c_reader@@Base+0x1fa4>
   18250:	ldr	r0, [r1, #12]
   18254:	sub	r4, fp, #480	; 0x1e0
   18258:	mov	r2, r4
   1825c:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   18260:	ldr	r1, [r7, #4]
   18264:	ldr	r8, [sp, #64]	; 0x40
   18268:	mov	r3, r4
   1826c:	ldr	r2, [r1]
   18270:	ldr	r1, [r1, #4]
   18274:	ldr	r0, [r8, #204]	; 0xcc
   18278:	stm	sp, {r1, r2, r6}
   1827c:	str	r5, [sp, #12]
   18280:	mov	r2, r8
   18284:	ldr	r1, [pc, #3296]	; 18f6c <__flatcc_fb_gen_c_reader@@Base+0x2048>
   18288:	add	r1, pc, r1
   1828c:	bl	148bc <fprintf@plt>
   18290:	b	1889c <__flatcc_fb_gen_c_reader@@Base+0x1978>
   18294:	ldrdeq	lr, [r2], -lr	; <UNPREDICTABLE>
   18298:	andeq	r8, r2, r2, lsr r3
   1829c:	andeq	r9, r3, r6, ror #1
   182a0:	strdeq	r8, [r2], -r6
   182a4:	strheq	r9, [r3], -r2
   182a8:	ldr	r8, [sp, #64]	; 0x40
   182ac:	ldrd	r2, [r5]
   182b0:	add	r1, sp, #400	; 0x190
   182b4:	ldr	r0, [r8, #204]	; 0xcc
   182b8:	stm	sp, {r2, r3}
   182bc:	str	r1, [sp, #8]
   182c0:	str	sl, [sp, #12]
   182c4:	str	r4, [sp, #16]
   182c8:	str	r6, [sp, #20]
   182cc:	mov	r2, r8
   182d0:	ldr	r1, [pc, #3224]	; 18f70 <__flatcc_fb_gen_c_reader@@Base+0x204c>
   182d4:	add	r1, pc, r1
   182d8:	bl	148bc <fprintf@plt>
   182dc:	ldr	r0, [r8, #212]	; 0xd4
   182e0:	ldr	r0, [r0, #32]
   182e4:	cmp	r0, #0
   182e8:	bne	18318 <__flatcc_fb_gen_c_reader@@Base+0x13f4>
   182ec:	ldrb	r0, [r7, #72]	; 0x48
   182f0:	tst	r0, #128	; 0x80
   182f4:	beq	18318 <__flatcc_fb_gen_c_reader@@Base+0x13f4>
   182f8:	ldr	r0, [r8, #204]	; 0xcc
   182fc:	str	sl, [sp]
   18300:	str	r4, [sp, #4]
   18304:	mov	r2, r8
   18308:	add	r3, sp, #400	; 0x190
   1830c:	ldr	r1, [pc, #3168]	; 18f74 <__flatcc_fb_gen_c_reader@@Base+0x2050>
   18310:	add	r1, pc, r1
   18314:	bl	148bc <fprintf@plt>
   18318:	ldrb	r0, [r7, #72]	; 0x48
   1831c:	tst	r0, #128	; 0x80
   18320:	beq	1889c <__flatcc_fb_gen_c_reader@@Base+0x1978>
   18324:	ldr	r0, [sp, #68]	; 0x44
   18328:	cmp	r0, #0
   1832c:	beq	1834c <__flatcc_fb_gen_c_reader@@Base+0x1428>
   18330:	ldr	r0, [sp, #72]	; 0x48
   18334:	mov	r1, #66	; 0x42
   18338:	mov	r2, #1
   1833c:	ldr	r3, [r0]
   18340:	ldr	r0, [pc, #3120]	; 18f78 <__flatcc_fb_gen_c_reader@@Base+0x2054>
   18344:	add	r0, pc, r0
   18348:	bl	14850 <fwrite@plt>
   1834c:	ldr	r0, [r8, #204]	; 0xcc
   18350:	str	sl, [sp]
   18354:	str	r4, [sp, #4]
   18358:	mov	r5, r4
   1835c:	add	r4, sp, #400	; 0x190
   18360:	mov	r2, r8
   18364:	mov	r6, sl
   18368:	ldr	r1, [pc, #3084]	; 18f7c <__flatcc_fb_gen_c_reader@@Base+0x2058>
   1836c:	mov	r3, r4
   18370:	add	r1, pc, r1
   18374:	bl	148bc <fprintf@plt>
   18378:	ldr	r0, [r8, #212]	; 0xd4
   1837c:	ldr	r0, [r0, #136]	; 0x88
   18380:	cmp	r0, #0
   18384:	beq	183a8 <__flatcc_fb_gen_c_reader@@Base+0x1484>
   18388:	ldr	r0, [r8, #204]	; 0xcc
   1838c:	str	r6, [sp]
   18390:	str	r5, [sp, #4]
   18394:	mov	r2, r8
   18398:	mov	r3, r4
   1839c:	ldr	r1, [pc, #3036]	; 18f80 <__flatcc_fb_gen_c_reader@@Base+0x205c>
   183a0:	add	r1, pc, r1
   183a4:	bl	148bc <fprintf@plt>
   183a8:	ldr	r0, [sp, #68]	; 0x44
   183ac:	cmp	r0, #0
   183b0:	bne	18018 <__flatcc_fb_gen_c_reader@@Base+0x10f4>
   183b4:	ldr	r0, [r8, #204]	; 0xcc
   183b8:	str	sl, [sp]
   183bc:	str	r5, [sp, #4]
   183c0:	add	r4, sp, #400	; 0x190
   183c4:	mov	r2, r8
   183c8:	ldr	r1, [pc, #2996]	; 18f84 <__flatcc_fb_gen_c_reader@@Base+0x2060>
   183cc:	mov	r3, r4
   183d0:	add	r1, pc, r1
   183d4:	bl	148bc <fprintf@plt>
   183d8:	ldr	r0, [r8, #204]	; 0xcc
   183dc:	str	sl, [sp]
   183e0:	str	r5, [sp, #4]
   183e4:	ldr	r1, [pc, #2972]	; 18f88 <__flatcc_fb_gen_c_reader@@Base+0x2064>
   183e8:	add	r1, pc, r1
   183ec:	mov	r2, r8
   183f0:	mov	r3, r4
   183f4:	bl	148bc <fprintf@plt>
   183f8:	ldr	r0, [r8, #212]	; 0xd4
   183fc:	mov	r1, #1
   18400:	ldr	r0, [r0, #136]	; 0x88
   18404:	str	r1, [sp, #68]	; 0x44
   18408:	cmp	r0, #0
   1840c:	beq	18018 <__flatcc_fb_gen_c_reader@@Base+0x10f4>
   18410:	ldr	r0, [sp, #72]	; 0x48
   18414:	ldr	r0, [r0]
   18418:	str	sl, [sp]
   1841c:	b	18678 <__flatcc_fb_gen_c_reader@@Base+0x1754>
   18420:	andeq	lr, r2, fp, lsl #19
   18424:	andeq	lr, r2, r6, lsl #18
   18428:	andeq	sp, r3, sp, lsr #4
   1842c:	andeq	lr, r2, r2, lsr fp
   18430:	andeq	lr, r2, pc, lsr #22
   18434:	andeq	lr, r2, r2, lsr #23
   18438:	andeq	lr, r2, r8, asr #24
   1843c:	andeq	r8, r3, r2, ror lr
   18440:	ldrdeq	lr, [r2], -r7
   18444:	andeq	sp, r3, lr, asr #25
   18448:	andeq	lr, r2, lr, lsr #15
   1844c:	ldr	r0, [r7, #16]
   18450:	str	r4, [sp, #52]	; 0x34
   18454:	str	sl, [sp, #56]	; 0x38
   18458:	ldr	r6, [pc, #2768]	; 18f30 <__flatcc_fb_gen_c_reader@@Base+0x200c>
   1845c:	ldr	r8, [sp, #64]	; 0x40
   18460:	cmp	r0, #5
   18464:	sub	r4, r0, #1
   18468:	add	r6, pc, r6
   1846c:	moveq	r6, r8
   18470:	cmp	r4, #11
   18474:	bcs	18b28 <__flatcc_fb_gen_c_reader@@Base+0x1c04>
   18478:	add	r2, sp, #76	; 0x4c
   1847c:	add	r1, r7, #48	; 0x30
   18480:	mov	sl, r2
   18484:	bl	198e8 <__flatcc_fb_gen_c_reader@@Base+0x29c4>
   18488:	ldr	r0, [r8, #204]	; 0xcc
   1848c:	ldrd	r2, [r5]
   18490:	str	sl, [sp, #36]	; 0x24
   18494:	ldr	r1, [pc, #2712]	; 18f34 <__flatcc_fb_gen_c_reader@@Base+0x2010>
   18498:	str	r6, [sp, #28]
   1849c:	add	r1, pc, r1
   184a0:	ldr	r5, [r1, r4, lsl #2]
   184a4:	str	r5, [sp, #32]
   184a8:	ldr	r1, [pc, #2696]	; 18f38 <__flatcc_fb_gen_c_reader@@Base+0x2014>
   184ac:	str	r8, [sp, #20]
   184b0:	add	r1, pc, r1
   184b4:	ldr	r1, [r1, r4, lsl #2]
   184b8:	ldr	r4, [sp, #52]	; 0x34
   184bc:	str	r1, [sp, #24]
   184c0:	ldr	r1, [sp, #56]	; 0x38
   184c4:	str	r4, [sp, #16]
   184c8:	str	r1, [sp, #12]
   184cc:	add	r1, sp, #400	; 0x190
   184d0:	str	r1, [sp, #8]
   184d4:	stm	sp, {r2, r3}
   184d8:	mov	r2, r8
   184dc:	ldr	r1, [pc, #2648]	; 18f3c <__flatcc_fb_gen_c_reader@@Base+0x2018>
   184e0:	add	r1, pc, r1
   184e4:	bl	148bc <fprintf@plt>
   184e8:	ldr	r0, [r8, #212]	; 0xd4
   184ec:	ldr	r0, [r0, #32]
   184f0:	cmp	r0, #0
   184f4:	bne	18528 <__flatcc_fb_gen_c_reader@@Base+0x1604>
   184f8:	ldrb	r0, [r7, #72]	; 0x48
   184fc:	tst	r0, #128	; 0x80
   18500:	beq	18528 <__flatcc_fb_gen_c_reader@@Base+0x1604>
   18504:	ldr	r1, [sp, #56]	; 0x38
   18508:	ldr	r0, [r8, #204]	; 0xcc
   1850c:	mov	r2, r8
   18510:	add	r3, sp, #400	; 0x190
   18514:	stm	sp, {r1, r4, r6}
   18518:	str	r5, [sp, #12]
   1851c:	ldr	r1, [pc, #2588]	; 18f40 <__flatcc_fb_gen_c_reader@@Base+0x201c>
   18520:	add	r1, pc, r1
   18524:	bl	148bc <fprintf@plt>
   18528:	ldrb	r0, [r7, #72]	; 0x48
   1852c:	tst	r0, #128	; 0x80
   18530:	beq	1889c <__flatcc_fb_gen_c_reader@@Base+0x1978>
   18534:	ldr	r0, [sp, #68]	; 0x44
   18538:	str	r5, [sp, #48]	; 0x30
   1853c:	cmp	r0, #0
   18540:	beq	18560 <__flatcc_fb_gen_c_reader@@Base+0x163c>
   18544:	ldr	r0, [sp, #72]	; 0x48
   18548:	mov	r1, #66	; 0x42
   1854c:	mov	r2, #1
   18550:	ldr	r3, [r0]
   18554:	ldr	r0, [pc, #2536]	; 18f44 <__flatcc_fb_gen_c_reader@@Base+0x2020>
   18558:	add	r0, pc, r0
   1855c:	bl	14850 <fwrite@plt>
   18560:	ldr	r3, [r8, #204]	; 0xcc
   18564:	ldr	r0, [pc, #2524]	; 18f48 <__flatcc_fb_gen_c_reader@@Base+0x2024>
   18568:	mov	r1, #61	; 0x3d
   1856c:	mov	r2, #1
   18570:	add	r0, pc, r0
   18574:	bl	14850 <fwrite@plt>
   18578:	ldr	r5, [sp, #56]	; 0x38
   1857c:	ldr	r1, [sp, #48]	; 0x30
   18580:	ldr	r0, [r8, #204]	; 0xcc
   18584:	mov	r2, r8
   18588:	str	r5, [sp]
   1858c:	stmib	sp, {r4, r6}
   18590:	str	r1, [sp, #12]
   18594:	add	r4, sp, #400	; 0x190
   18598:	ldr	r1, [pc, #2476]	; 18f4c <__flatcc_fb_gen_c_reader@@Base+0x2028>
   1859c:	mov	r3, r4
   185a0:	add	r1, pc, r1
   185a4:	bl	148bc <fprintf@plt>
   185a8:	ldr	r0, [r8, #212]	; 0xd4
   185ac:	ldr	r0, [r0, #136]	; 0x88
   185b0:	cmp	r0, #0
   185b4:	beq	185e8 <__flatcc_fb_gen_c_reader@@Base+0x16c4>
   185b8:	ldr	r1, [sp, #52]	; 0x34
   185bc:	ldr	r0, [r8, #204]	; 0xcc
   185c0:	str	r5, [sp]
   185c4:	mov	r2, r8
   185c8:	mov	r3, r4
   185cc:	stmib	sp, {r1, r6}
   185d0:	ldr	r1, [sp, #48]	; 0x30
   185d4:	str	r8, [sp, #16]
   185d8:	str	r1, [sp, #12]
   185dc:	ldr	r1, [pc, #2412]	; 18f50 <__flatcc_fb_gen_c_reader@@Base+0x202c>
   185e0:	add	r1, pc, r1
   185e4:	bl	148bc <fprintf@plt>
   185e8:	ldr	r0, [sp, #68]	; 0x44
   185ec:	cmp	r0, #0
   185f0:	bne	18018 <__flatcc_fb_gen_c_reader@@Base+0x10f4>
   185f4:	ldr	sl, [sp, #56]	; 0x38
   185f8:	ldr	r5, [sp, #52]	; 0x34
   185fc:	ldr	r1, [sp, #48]	; 0x30
   18600:	ldr	r0, [r8, #204]	; 0xcc
   18604:	add	r4, sp, #400	; 0x190
   18608:	mov	r2, r8
   1860c:	mov	r3, r4
   18610:	str	sl, [sp]
   18614:	stmib	sp, {r5, r6}
   18618:	str	r1, [sp, #12]
   1861c:	ldr	r1, [pc, #2352]	; 18f54 <__flatcc_fb_gen_c_reader@@Base+0x2030>
   18620:	add	r1, pc, r1
   18624:	bl	148bc <fprintf@plt>
   18628:	ldr	r1, [sp, #48]	; 0x30
   1862c:	ldr	r0, [r8, #204]	; 0xcc
   18630:	str	sl, [sp]
   18634:	stmib	sp, {r5, r6}
   18638:	mov	r2, r8
   1863c:	mov	r3, r4
   18640:	str	r1, [sp, #12]
   18644:	ldr	r1, [pc, #2316]	; 18f58 <__flatcc_fb_gen_c_reader@@Base+0x2034>
   18648:	add	r1, pc, r1
   1864c:	bl	148bc <fprintf@plt>
   18650:	ldr	r0, [r8, #212]	; 0xd4
   18654:	mov	r1, #1
   18658:	str	r1, [sp, #68]	; 0x44
   1865c:	ldr	r0, [r0, #136]	; 0x88
   18660:	cmp	r0, #0
   18664:	beq	18018 <__flatcc_fb_gen_c_reader@@Base+0x10f4>
   18668:	ldr	r0, [sp, #72]	; 0x48
   1866c:	ldr	r1, [sp, #56]	; 0x38
   18670:	ldr	r0, [r0]
   18674:	str	r1, [sp]
   18678:	str	r5, [sp, #4]
   1867c:	mov	r2, r4
   18680:	mov	r3, r4
   18684:	ldr	r1, [pc, #2304]	; 18f8c <__flatcc_fb_gen_c_reader@@Base+0x2068>
   18688:	add	r1, pc, r1
   1868c:	bl	148bc <fprintf@plt>
   18690:	b	18018 <__flatcc_fb_gen_c_reader@@Base+0x10f4>
   18694:	andeq	sp, r3, r2, asr #24
   18698:	andeq	sp, r3, r9, ror r0
   1869c:	ldr	r8, [sp, #64]	; 0x40
   186a0:	ldrd	r2, [r5]
   186a4:	add	r1, sp, #400	; 0x190
   186a8:	ldr	r0, [r8, #204]	; 0xcc
   186ac:	stm	sp, {r2, r3}
   186b0:	str	r1, [sp, #8]
   186b4:	str	sl, [sp, #12]
   186b8:	str	r4, [sp, #16]
   186bc:	str	r8, [sp, #20]
   186c0:	str	r6, [sp, #24]
   186c4:	ldr	r1, [pc, #2244]	; 18f90 <__flatcc_fb_gen_c_reader@@Base+0x206c>
   186c8:	add	r1, pc, r1
   186cc:	b	18894 <__flatcc_fb_gen_c_reader@@Base+0x1970>
   186d0:	andeq	lr, r2, r4, lsl #19
   186d4:	ldr	r1, [r7, #16]
   186d8:	add	r2, sp, #176	; 0xb0
   186dc:	ldr	r0, [r1, #12]
   186e0:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   186e4:	ldr	r0, [r7, #16]
   186e8:	ldrh	r3, [r0, #8]
   186ec:	cmp	r3, #4
   186f0:	bhi	18d40 <__flatcc_fb_gen_c_reader@@Base+0x1e1c>
   186f4:	cmp	r3, #2
   186f8:	beq	18d40 <__flatcc_fb_gen_c_reader@@Base+0x1e1c>
   186fc:	ldr	r0, [sp, #72]	; 0x48
   18700:	ldr	r2, [r5]
   18704:	ldr	r1, [r5, #4]
   18708:	cmp	r3, #4
   1870c:	ldr	r0, [r0]
   18710:	bne	187d0 <__flatcc_fb_gen_c_reader@@Base+0x18ac>
   18714:	str	r1, [sp, #4]
   18718:	add	r1, sp, #400	; 0x190
   1871c:	str	r2, [sp]
   18720:	str	sl, [sp, #12]
   18724:	str	r4, [sp, #16]
   18728:	str	r6, [sp, #24]
   1872c:	str	r1, [sp, #8]
   18730:	add	r1, sp, #176	; 0xb0
   18734:	str	r1, [sp, #20]
   18738:	ldr	r1, [pc, #2200]	; 18fd8 <__flatcc_fb_gen_c_reader@@Base+0x20b4>
   1873c:	ldr	r8, [sp, #64]	; 0x40
   18740:	add	r1, pc, r1
   18744:	b	18844 <__flatcc_fb_gen_c_reader@@Base+0x1920>
   18748:	ldr	r1, [r7, #16]
   1874c:	add	r2, sp, #176	; 0xb0
   18750:	ldr	r0, [r1, #12]
   18754:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   18758:	ldr	r0, [r7, #16]
   1875c:	ldrh	r1, [r0, #8]
   18760:	cmp	r1, #4
   18764:	bhi	18d94 <__flatcc_fb_gen_c_reader@@Base+0x1e70>
   18768:	add	r2, pc, #8
   1876c:	ldr	r1, [r2, r1, lsl #2]
   18770:	add	pc, r2, r1
   18774:	andeq	r7, r2, sl, lsl pc
   18778:	andeq	r0, r0, ip, lsl r0
   1877c:	andeq	r0, r0, r8, ror #1
   18780:	andeq	r0, r0, ip, lsl r6
   18784:	muleq	r0, r0, r1
   18788:	muleq	r0, r8, r0
   1878c:	andeq	r3, r5, r8, lsl r6
   18790:	andeq	lr, r2, r8, lsl #19
   18794:	ldr	r8, [sp, #64]	; 0x40
   18798:	ldrd	r2, [r5]
   1879c:	add	r1, sp, #400	; 0x190
   187a0:	ldr	r0, [r8, #204]	; 0xcc
   187a4:	stm	sp, {r2, r3}
   187a8:	str	r1, [sp, #8]
   187ac:	add	r1, sp, #176	; 0xb0
   187b0:	str	sl, [sp, #12]
   187b4:	str	r4, [sp, #16]
   187b8:	str	r6, [sp, #24]
   187bc:	str	r1, [sp, #20]
   187c0:	ldr	r1, [pc, #2000]	; 18f98 <__flatcc_fb_gen_c_reader@@Base+0x2074>
   187c4:	add	r1, pc, r1
   187c8:	b	18894 <__flatcc_fb_gen_c_reader@@Base+0x1970>
   187cc:	andeq	lr, r2, sl, ror #17
   187d0:	str	r1, [sp, #4]
   187d4:	add	r1, sp, #400	; 0x190
   187d8:	str	r2, [sp]
   187dc:	str	sl, [sp, #12]
   187e0:	str	r4, [sp, #16]
   187e4:	str	r6, [sp, #24]
   187e8:	str	r1, [sp, #8]
   187ec:	add	r1, sp, #176	; 0xb0
   187f0:	str	r1, [sp, #20]
   187f4:	ldr	r1, [pc, #2016]	; 18fdc <__flatcc_fb_gen_c_reader@@Base+0x20b8>
   187f8:	ldr	r8, [sp, #64]	; 0x40
   187fc:	add	r1, pc, r1
   18800:	b	18894 <__flatcc_fb_gen_c_reader@@Base+0x1970>
   18804:	andeq	lr, r2, pc, lsl #19
   18808:	andeq	r7, r2, r6, ror lr
   1880c:	andeq	lr, r2, r5, ror r9
   18810:	ldr	r8, [sp, #64]	; 0x40
   18814:	ldrd	r2, [r5]
   18818:	add	r1, sp, #400	; 0x190
   1881c:	ldr	r0, [r8, #204]	; 0xcc
   18820:	stm	sp, {r2, r3}
   18824:	str	r1, [sp, #8]
   18828:	add	r1, sp, #176	; 0xb0
   1882c:	str	sl, [sp, #12]
   18830:	str	r4, [sp, #16]
   18834:	str	r6, [sp, #24]
   18838:	str	r1, [sp, #20]
   1883c:	ldr	r1, [pc, #1912]	; 18fbc <__flatcc_fb_gen_c_reader@@Base+0x2098>
   18840:	add	r1, pc, r1
   18844:	mov	r2, r8
   18848:	mov	r3, r8
   1884c:	bl	148bc <fprintf@plt>
   18850:	b	1889c <__flatcc_fb_gen_c_reader@@Base+0x1978>
   18854:	andeq	lr, r2, r1, lsr #17
   18858:	andeq	lr, r2, r9, asr #18
   1885c:	muleq	r2, r6, r6
   18860:	ldr	r8, [sp, #64]	; 0x40
   18864:	ldrd	r2, [r5]
   18868:	add	r1, sp, #400	; 0x190
   1886c:	ldr	r0, [r8, #204]	; 0xcc
   18870:	stm	sp, {r2, r3}
   18874:	str	r1, [sp, #8]
   18878:	add	r1, sp, #176	; 0xb0
   1887c:	str	sl, [sp, #12]
   18880:	str	r4, [sp, #16]
   18884:	str	r6, [sp, #24]
   18888:	str	r1, [sp, #20]
   1888c:	ldr	r1, [pc, #1792]	; 18f94 <__flatcc_fb_gen_c_reader@@Base+0x2070>
   18890:	add	r1, pc, r1
   18894:	mov	r2, r8
   18898:	bl	148bc <fprintf@plt>
   1889c:	ldrb	r0, [r7, #72]	; 0x48
   188a0:	tst	r0, #128	; 0x80
   188a4:	beq	18018 <__flatcc_fb_gen_c_reader@@Base+0x10f4>
   188a8:	ldr	r0, [sp, #72]	; 0x48
   188ac:	mov	r1, #84	; 0x54
   188b0:	mov	r2, #1
   188b4:	ldr	r3, [r0]
   188b8:	mov	r0, #1
   188bc:	str	r0, [sp, #68]	; 0x44
   188c0:	ldr	r0, [pc, #1816]	; 18fe0 <__flatcc_fb_gen_c_reader@@Base+0x20bc>
   188c4:	add	r0, pc, r0
   188c8:	bl	14850 <fwrite@plt>
   188cc:	b	18018 <__flatcc_fb_gen_c_reader@@Base+0x10f4>
   188d0:	ldrdeq	lr, [r2], -fp
   188d4:	andeq	lr, r2, r3, lsl r7
   188d8:	andeq	lr, r2, r9, lsr r7
   188dc:	andeq	lr, r2, r4, ror #14
   188e0:	muleq	r3, lr, ip
   188e4:	muleq	r2, fp, r8
   188e8:	andeq	r8, r3, r2, ror ip
   188ec:	andeq	lr, r2, fp, ror #16
   188f0:	andeq	lr, r2, lr, lsl #17
   188f4:	andeq	lr, r2, sl, asr #17
   188f8:	strdeq	lr, [r2], -r0
   188fc:	andeq	lr, r2, fp, lsr #18
   18900:	andeq	lr, r2, r1, asr #18
   18904:	andeq	lr, r2, r9, ror #18
   18908:	ldr	r0, [r0, #40]	; 0x28
   1890c:	add	r6, sp, #76	; 0x4c
   18910:	add	r1, r7, #48	; 0x30
   18914:	mov	r2, r6
   18918:	bl	198e8 <__flatcc_fb_gen_c_reader@@Base+0x29c4>
   1891c:	ldr	r8, [sp, #64]	; 0x40
   18920:	ldrd	r2, [r5]
   18924:	add	r1, sp, #400	; 0x190
   18928:	mov	r5, r4
   1892c:	ldr	r0, [r8, #204]	; 0xcc
   18930:	stm	sp, {r2, r3}
   18934:	str	r4, [sp, #16]
   18938:	add	r4, sp, #176	; 0xb0
   1893c:	str	r1, [sp, #8]
   18940:	str	sl, [sp, #12]
   18944:	str	r6, [sp, #28]
   18948:	mov	r2, r8
   1894c:	str	r4, [sp, #20]
   18950:	str	r4, [sp, #24]
   18954:	ldr	r1, [pc, #1600]	; 18f9c <__flatcc_fb_gen_c_reader@@Base+0x2078>
   18958:	add	r1, pc, r1
   1895c:	bl	148bc <fprintf@plt>
   18960:	ldr	r0, [r8, #212]	; 0xd4
   18964:	ldr	r0, [r0, #32]
   18968:	cmp	r0, #0
   1896c:	bne	189a0 <__flatcc_fb_gen_c_reader@@Base+0x1a7c>
   18970:	ldrb	r0, [r7, #72]	; 0x48
   18974:	tst	r0, #128	; 0x80
   18978:	beq	189a0 <__flatcc_fb_gen_c_reader@@Base+0x1a7c>
   1897c:	ldr	r0, [r8, #204]	; 0xcc
   18980:	str	sl, [sp]
   18984:	str	r5, [sp, #4]
   18988:	str	r4, [sp, #8]
   1898c:	mov	r2, r8
   18990:	add	r3, sp, #400	; 0x190
   18994:	ldr	r1, [pc, #1540]	; 18fa0 <__flatcc_fb_gen_c_reader@@Base+0x207c>
   18998:	add	r1, pc, r1
   1899c:	bl	148bc <fprintf@plt>
   189a0:	ldrb	r0, [r7, #72]	; 0x48
   189a4:	str	sl, [sp, #56]	; 0x38
   189a8:	tst	r0, #128	; 0x80
   189ac:	beq	1889c <__flatcc_fb_gen_c_reader@@Base+0x1978>
   189b0:	ldr	r0, [sp, #68]	; 0x44
   189b4:	mov	r4, r5
   189b8:	cmp	r0, #0
   189bc:	beq	189dc <__flatcc_fb_gen_c_reader@@Base+0x1ab8>
   189c0:	ldr	r0, [sp, #72]	; 0x48
   189c4:	mov	r1, #66	; 0x42
   189c8:	mov	r2, #1
   189cc:	ldr	r3, [r0]
   189d0:	ldr	r0, [pc, #1484]	; 18fa4 <__flatcc_fb_gen_c_reader@@Base+0x2080>
   189d4:	add	r0, pc, r0
   189d8:	bl	14850 <fwrite@plt>
   189dc:	ldr	r3, [r8, #204]	; 0xcc
   189e0:	ldr	r0, [pc, #1472]	; 18fa8 <__flatcc_fb_gen_c_reader@@Base+0x2084>
   189e4:	mov	r1, #61	; 0x3d
   189e8:	mov	r2, #1
   189ec:	add	r0, pc, r0
   189f0:	bl	14850 <fwrite@plt>
   189f4:	ldr	sl, [sp, #56]	; 0x38
   189f8:	add	r6, sp, #176	; 0xb0
   189fc:	ldr	r0, [r8, #204]	; 0xcc
   18a00:	str	r4, [sp, #4]
   18a04:	mov	r2, r8
   18a08:	str	r6, [sp, #8]
   18a0c:	mov	r6, r4
   18a10:	add	r4, sp, #400	; 0x190
   18a14:	mov	r3, r4
   18a18:	str	sl, [sp]
   18a1c:	ldr	r1, [pc, #1416]	; 18fac <__flatcc_fb_gen_c_reader@@Base+0x2088>
   18a20:	add	r1, pc, r1
   18a24:	bl	148bc <fprintf@plt>
   18a28:	ldr	r0, [r8, #212]	; 0xd4
   18a2c:	ldr	r0, [r0, #136]	; 0x88
   18a30:	cmp	r0, #0
   18a34:	beq	18a64 <__flatcc_fb_gen_c_reader@@Base+0x1b40>
   18a38:	add	r1, sp, #176	; 0xb0
   18a3c:	ldr	r0, [r8, #204]	; 0xcc
   18a40:	str	sl, [sp]
   18a44:	str	r6, [sp, #4]
   18a48:	str	r8, [sp, #12]
   18a4c:	mov	r2, r8
   18a50:	mov	r3, r4
   18a54:	str	r1, [sp, #8]
   18a58:	ldr	r1, [pc, #1360]	; 18fb0 <__flatcc_fb_gen_c_reader@@Base+0x208c>
   18a5c:	add	r1, pc, r1
   18a60:	bl	148bc <fprintf@plt>
   18a64:	ldr	r0, [sp, #68]	; 0x44
   18a68:	cmp	r0, #0
   18a6c:	bne	18018 <__flatcc_fb_gen_c_reader@@Base+0x10f4>
   18a70:	ldr	sl, [sp, #56]	; 0x38
   18a74:	add	r1, sp, #176	; 0xb0
   18a78:	ldr	r0, [r8, #204]	; 0xcc
   18a7c:	str	r5, [sp, #4]
   18a80:	add	r4, sp, #400	; 0x190
   18a84:	mov	r2, r8
   18a88:	str	r1, [sp, #8]
   18a8c:	mov	r6, r1
   18a90:	mov	r3, r4
   18a94:	str	sl, [sp]
   18a98:	ldr	r1, [pc, #1300]	; 18fb4 <__flatcc_fb_gen_c_reader@@Base+0x2090>
   18a9c:	add	r1, pc, r1
   18aa0:	bl	148bc <fprintf@plt>
   18aa4:	ldr	r0, [r8, #204]	; 0xcc
   18aa8:	str	sl, [sp]
   18aac:	stmib	sp, {r5, r6}
   18ab0:	ldr	r1, [pc, #1280]	; 18fb8 <__flatcc_fb_gen_c_reader@@Base+0x2094>
   18ab4:	add	r1, pc, r1
   18ab8:	b	183ec <__flatcc_fb_gen_c_reader@@Base+0x14c8>
   18abc:	andeq	r3, r5, ip, asr #5
   18ac0:	andeq	r7, r2, r2, lsr #23
   18ac4:	andeq	r3, r5, r4, asr #4
   18ac8:	ldr	r1, [r8, #204]	; 0xcc
   18acc:	mov	r0, #10
   18ad0:	bl	1491c <fputc@plt>
   18ad4:	ldr	r0, [r8, #212]	; 0xd4
   18ad8:	ldr	r0, [r0, #140]	; 0x8c
   18adc:	cmp	r0, #0
   18ae0:	beq	18b00 <__flatcc_fb_gen_c_reader@@Base+0x1bdc>
   18ae4:	ldr	r0, [sp, #72]	; 0x48
   18ae8:	mov	r1, #36	; 0x24
   18aec:	mov	r2, #1
   18af0:	ldr	r3, [r0]
   18af4:	ldr	r0, [pc, #1260]	; 18fe8 <__flatcc_fb_gen_c_reader@@Base+0x20c4>
   18af8:	add	r0, pc, r0
   18afc:	bl	14850 <fwrite@plt>
   18b00:	ldr	r1, [r8, #208]	; 0xd0
   18b04:	ldr	r0, [r8, #204]	; 0xcc
   18b08:	ldr	r2, [r1, #164]	; 0xa4
   18b0c:	ldr	r1, [pc, #1240]	; 18fec <__flatcc_fb_gen_c_reader@@Base+0x20c8>
   18b10:	add	r1, pc, r1
   18b14:	bl	148bc <fprintf@plt>
   18b18:	mov	r0, #0
   18b1c:	sub	sp, fp, #28
   18b20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18b24:			; <UNDEFINED> instruction: 0x0002e8b9
   18b28:	ldr	r0, [pc, #1252]	; 19014 <__flatcc_fb_gen_c_reader@@Base+0x20f0>
   18b2c:	mov	r3, #141	; 0x8d
   18b30:	ldr	r0, [pc, r0]
   18b34:	ldr	r0, [r0]
   18b38:	ldr	r1, [pc, #1240]	; 19018 <__flatcc_fb_gen_c_reader@@Base+0x20f4>
   18b3c:	add	r1, pc, r1
   18b40:	str	r1, [sp]
   18b44:	ldr	r1, [pc, #1232]	; 1901c <__flatcc_fb_gen_c_reader@@Base+0x20f8>
   18b48:	ldr	r4, [pc, #1232]	; 19020 <__flatcc_fb_gen_c_reader@@Base+0x20fc>
   18b4c:	add	r4, pc, r4
   18b50:	add	r1, pc, r1
   18b54:	mov	r2, r4
   18b58:	bl	148bc <fprintf@plt>
   18b5c:	ldr	r0, [pc, #1216]	; 19024 <__flatcc_fb_gen_c_reader@@Base+0x2100>
   18b60:	ldr	r3, [pc, #1216]	; 19028 <__flatcc_fb_gen_c_reader@@Base+0x2104>
   18b64:	mov	r1, r4
   18b68:	mov	r2, #141	; 0x8d
   18b6c:	add	r0, pc, r0
   18b70:	add	r3, pc, r3
   18b74:	bl	1497c <__assert_fail@plt>
   18b78:	andeq	lr, r2, r3, lsl #17
   18b7c:	andeq	lr, r2, r4, ror r8
   18b80:	ldr	r0, [sp, #72]	; 0x48
   18b84:	ldr	r0, [r0]
   18b88:	ldr	r1, [pc, #860]	; 18eec <__flatcc_fb_gen_c_reader@@Base+0x1fc8>
   18b8c:	ldr	r2, [pc, #860]	; 18ef0 <__flatcc_fb_gen_c_reader@@Base+0x1fcc>
   18b90:	add	r1, pc, r1
   18b94:	add	r2, pc, r2
   18b98:	bl	148bc <fprintf@plt>
   18b9c:	ldr	r0, [pc, #848]	; 18ef4 <__flatcc_fb_gen_c_reader@@Base+0x1fd0>
   18ba0:	movw	r3, #1029	; 0x405
   18ba4:	ldr	r0, [pc, r0]
   18ba8:	ldr	r0, [r0]
   18bac:	ldr	r1, [pc, #836]	; 18ef8 <__flatcc_fb_gen_c_reader@@Base+0x1fd4>
   18bb0:	add	r1, pc, r1
   18bb4:	str	r1, [sp]
   18bb8:	ldr	r1, [pc, #828]	; 18efc <__flatcc_fb_gen_c_reader@@Base+0x1fd8>
   18bbc:	ldr	r4, [pc, #828]	; 18f00 <__flatcc_fb_gen_c_reader@@Base+0x1fdc>
   18bc0:	add	r4, pc, r4
   18bc4:	add	r1, pc, r1
   18bc8:	mov	r2, r4
   18bcc:	bl	148bc <fprintf@plt>
   18bd0:	ldr	r0, [pc, #812]	; 18f04 <__flatcc_fb_gen_c_reader@@Base+0x1fe0>
   18bd4:	ldr	r3, [pc, #812]	; 18f08 <__flatcc_fb_gen_c_reader@@Base+0x1fe4>
   18bd8:	mov	r1, r4
   18bdc:	movw	r2, #1029	; 0x405
   18be0:	add	r0, pc, r0
   18be4:	add	r3, pc, r3
   18be8:	bl	1497c <__assert_fail@plt>
   18bec:	andeq	lr, r2, sl, ror r8
   18bf0:	andeq	lr, r2, r1, lsr #17
   18bf4:	ldr	r0, [pc, #1192]	; 190a4 <__flatcc_fb_gen_c_reader@@Base+0x2180>
   18bf8:	movw	r3, #1599	; 0x63f
   18bfc:	ldr	r0, [pc, r0]
   18c00:	ldr	r0, [r0]
   18c04:	ldr	r1, [pc, #1180]	; 190a8 <__flatcc_fb_gen_c_reader@@Base+0x2184>
   18c08:	add	r1, pc, r1
   18c0c:	str	r1, [sp]
   18c10:	ldr	r1, [pc, #1172]	; 190ac <__flatcc_fb_gen_c_reader@@Base+0x2188>
   18c14:	ldr	r4, [pc, #1172]	; 190b0 <__flatcc_fb_gen_c_reader@@Base+0x218c>
   18c18:	add	r4, pc, r4
   18c1c:	add	r1, pc, r1
   18c20:	mov	r2, r4
   18c24:	bl	148bc <fprintf@plt>
   18c28:	ldr	r0, [pc, #1156]	; 190b4 <__flatcc_fb_gen_c_reader@@Base+0x2190>
   18c2c:	ldr	r3, [pc, #1156]	; 190b8 <__flatcc_fb_gen_c_reader@@Base+0x2194>
   18c30:	mov	r1, r4
   18c34:	movw	r2, #1599	; 0x63f
   18c38:	add	r0, pc, r0
   18c3c:	add	r3, pc, r3
   18c40:	bl	1497c <__assert_fail@plt>
   18c44:			; <UNDEFINED> instruction: 0x0002e8b3
   18c48:	ldr	r0, [pc, #988]	; 1902c <__flatcc_fb_gen_c_reader@@Base+0x2108>
   18c4c:	ldr	r1, [pc, #988]	; 19030 <__flatcc_fb_gen_c_reader@@Base+0x210c>
   18c50:	ldr	r3, [pc, #988]	; 19034 <__flatcc_fb_gen_c_reader@@Base+0x2110>
   18c54:	movw	r2, #1018	; 0x3fa
   18c58:	add	r0, pc, r0
   18c5c:	add	r1, pc, r1
   18c60:	add	r3, pc, r3
   18c64:	bl	1497c <__assert_fail@plt>
   18c68:			; <UNDEFINED> instruction: 0x0002e8b5
   18c6c:	ldr	r0, [pc, #964]	; 19038 <__flatcc_fb_gen_c_reader@@Base+0x2114>
   18c70:	mov	r3, #96	; 0x60
   18c74:	ldr	r0, [pc, r0]
   18c78:	ldr	r0, [r0]
   18c7c:	ldr	r1, [pc, #952]	; 1903c <__flatcc_fb_gen_c_reader@@Base+0x2118>
   18c80:	add	r1, pc, r1
   18c84:	str	r1, [sp]
   18c88:	ldr	r1, [pc, #944]	; 19040 <__flatcc_fb_gen_c_reader@@Base+0x211c>
   18c8c:	ldr	r4, [pc, #944]	; 19044 <__flatcc_fb_gen_c_reader@@Base+0x2120>
   18c90:	add	r4, pc, r4
   18c94:	add	r1, pc, r1
   18c98:	mov	r2, r4
   18c9c:	bl	148bc <fprintf@plt>
   18ca0:	ldr	r0, [pc, #928]	; 19048 <__flatcc_fb_gen_c_reader@@Base+0x2124>
   18ca4:	ldr	r3, [pc, #928]	; 1904c <__flatcc_fb_gen_c_reader@@Base+0x2128>
   18ca8:	mov	r1, r4
   18cac:	mov	r2, #96	; 0x60
   18cb0:	add	r0, pc, r0
   18cb4:	add	r3, pc, r3
   18cb8:	bl	1497c <__assert_fail@plt>
   18cbc:	andeq	lr, r2, sp, lsr #17
   18cc0:	ldr	r0, [pc, #808]	; 18ff0 <__flatcc_fb_gen_c_reader@@Base+0x20cc>
   18cc4:	ldr	r1, [pc, #808]	; 18ff4 <__flatcc_fb_gen_c_reader@@Base+0x20d0>
   18cc8:	ldr	r3, [pc, #808]	; 18ff8 <__flatcc_fb_gen_c_reader@@Base+0x20d4>
   18ccc:	mov	r2, #936	; 0x3a8
   18cd0:	add	r0, pc, r0
   18cd4:	add	r1, pc, r1
   18cd8:	add	r3, pc, r3
   18cdc:	bl	1497c <__assert_fail@plt>
   18ce0:	andeq	lr, r2, r7, asr #17
   18ce4:	andeq	lr, r2, sp, asr #17
   18ce8:	ldr	r0, [pc, #972]	; 190bc <__flatcc_fb_gen_c_reader@@Base+0x2198>
   18cec:	movw	r3, #1672	; 0x688
   18cf0:	ldr	r0, [pc, r0]
   18cf4:	ldr	r0, [r0]
   18cf8:	ldr	r1, [pc, #960]	; 190c0 <__flatcc_fb_gen_c_reader@@Base+0x219c>
   18cfc:	add	r1, pc, r1
   18d00:	str	r1, [sp]
   18d04:	ldr	r1, [pc, #952]	; 190c4 <__flatcc_fb_gen_c_reader@@Base+0x21a0>
   18d08:	ldr	r4, [pc, #952]	; 190c8 <__flatcc_fb_gen_c_reader@@Base+0x21a4>
   18d0c:	add	r4, pc, r4
   18d10:	add	r1, pc, r1
   18d14:	mov	r2, r4
   18d18:	bl	148bc <fprintf@plt>
   18d1c:	ldr	r0, [pc, #936]	; 190cc <__flatcc_fb_gen_c_reader@@Base+0x21a8>
   18d20:	ldr	r3, [pc, #936]	; 190d0 <__flatcc_fb_gen_c_reader@@Base+0x21ac>
   18d24:	mov	r1, r4
   18d28:	movw	r2, #1672	; 0x688
   18d2c:	add	r0, pc, r0
   18d30:	add	r3, pc, r3
   18d34:	bl	1497c <__assert_fail@plt>
   18d38:	andeq	lr, r2, lr, asr #17
   18d3c:	andeq	lr, r2, sp, asr #17
   18d40:	ldr	r0, [pc, #836]	; 1908c <__flatcc_fb_gen_c_reader@@Base+0x2168>
   18d44:	mov	r3, #1584	; 0x630
   18d48:	ldr	r0, [pc, r0]
   18d4c:	ldr	r0, [r0]
   18d50:	ldr	r1, [pc, #824]	; 19090 <__flatcc_fb_gen_c_reader@@Base+0x216c>
   18d54:	add	r1, pc, r1
   18d58:	str	r1, [sp]
   18d5c:	ldr	r1, [pc, #816]	; 19094 <__flatcc_fb_gen_c_reader@@Base+0x2170>
   18d60:	ldr	r4, [pc, #816]	; 19098 <__flatcc_fb_gen_c_reader@@Base+0x2174>
   18d64:	add	r4, pc, r4
   18d68:	add	r1, pc, r1
   18d6c:	mov	r2, r4
   18d70:	bl	148bc <fprintf@plt>
   18d74:	ldr	r0, [pc, #800]	; 1909c <__flatcc_fb_gen_c_reader@@Base+0x2178>
   18d78:	ldr	r3, [pc, #800]	; 190a0 <__flatcc_fb_gen_c_reader@@Base+0x217c>
   18d7c:	mov	r1, r4
   18d80:	mov	r2, #1584	; 0x630
   18d84:	add	r0, pc, r0
   18d88:	add	r3, pc, r3
   18d8c:	bl	1497c <__assert_fail@plt>
   18d90:	andeq	r8, r3, lr, lsr #13
   18d94:	ldr	r0, [pc, #548]	; 18fc0 <__flatcc_fb_gen_c_reader@@Base+0x209c>
   18d98:	mov	r3, #1568	; 0x620
   18d9c:	ldr	r0, [pc, r0]
   18da0:	ldr	r0, [r0]
   18da4:	ldr	r1, [pc, #536]	; 18fc4 <__flatcc_fb_gen_c_reader@@Base+0x20a0>
   18da8:	add	r1, pc, r1
   18dac:	str	r1, [sp]
   18db0:	ldr	r1, [pc, #528]	; 18fc8 <__flatcc_fb_gen_c_reader@@Base+0x20a4>
   18db4:	ldr	r4, [pc, #528]	; 18fcc <__flatcc_fb_gen_c_reader@@Base+0x20a8>
   18db8:	add	r4, pc, r4
   18dbc:	add	r1, pc, r1
   18dc0:	mov	r2, r4
   18dc4:	bl	148bc <fprintf@plt>
   18dc8:	ldr	r0, [pc, #512]	; 18fd0 <__flatcc_fb_gen_c_reader@@Base+0x20ac>
   18dcc:	ldr	r3, [pc, #512]	; 18fd4 <__flatcc_fb_gen_c_reader@@Base+0x20b0>
   18dd0:	mov	r1, r4
   18dd4:	mov	r2, #1568	; 0x620
   18dd8:	add	r0, pc, r0
   18ddc:	add	r3, pc, r3
   18de0:	bl	1497c <__assert_fail@plt>
   18de4:	ldr	r0, [pc, #528]	; 18ffc <__flatcc_fb_gen_c_reader@@Base+0x20d8>
   18de8:	ldr	r1, [pc, #528]	; 19000 <__flatcc_fb_gen_c_reader@@Base+0x20dc>
   18dec:	ldr	r3, [pc, #528]	; 19004 <__flatcc_fb_gen_c_reader@@Base+0x20e0>
   18df0:	movw	r2, #937	; 0x3a9
   18df4:	add	r0, pc, r0
   18df8:	add	r1, pc, r1
   18dfc:	add	r3, pc, r3
   18e00:	bl	1497c <__assert_fail@plt>
   18e04:	ldr	r0, [pc, #508]	; 19008 <__flatcc_fb_gen_c_reader@@Base+0x20e4>
   18e08:	ldr	r1, [pc, #508]	; 1900c <__flatcc_fb_gen_c_reader@@Base+0x20e8>
   18e0c:	ldr	r3, [pc, #508]	; 19010 <__flatcc_fb_gen_c_reader@@Base+0x20ec>
   18e10:	movw	r2, #938	; 0x3aa
   18e14:	add	r0, pc, r0
   18e18:	add	r1, pc, r1
   18e1c:	add	r3, pc, r3
   18e20:	bl	1497c <__assert_fail@plt>
   18e24:	andeq	sp, r2, r7, lsl #31
   18e28:	ldr	r0, [pc, #544]	; 19050 <__flatcc_fb_gen_c_reader@@Base+0x212c>
   18e2c:	mov	r3, #186	; 0xba
   18e30:	ldr	r0, [pc, r0]
   18e34:	ldr	r0, [r0]
   18e38:	ldr	r1, [pc, #532]	; 19054 <__flatcc_fb_gen_c_reader@@Base+0x2130>
   18e3c:	add	r1, pc, r1
   18e40:	str	r1, [sp]
   18e44:	ldr	r1, [pc, #524]	; 19058 <__flatcc_fb_gen_c_reader@@Base+0x2134>
   18e48:	ldr	r4, [pc, #524]	; 1905c <__flatcc_fb_gen_c_reader@@Base+0x2138>
   18e4c:	add	r4, pc, r4
   18e50:	add	r1, pc, r1
   18e54:	mov	r2, r4
   18e58:	bl	148bc <fprintf@plt>
   18e5c:	ldr	r0, [pc, #508]	; 19060 <__flatcc_fb_gen_c_reader@@Base+0x213c>
   18e60:	ldr	r3, [pc, #508]	; 19064 <__flatcc_fb_gen_c_reader@@Base+0x2140>
   18e64:	mov	r1, r4
   18e68:	mov	r2, #186	; 0xba
   18e6c:	add	r0, pc, r0
   18e70:	add	r3, pc, r3
   18e74:	bl	1497c <__assert_fail@plt>
   18e78:	ldr	r0, [pc, #488]	; 19068 <__flatcc_fb_gen_c_reader@@Base+0x2144>
   18e7c:	movw	r3, #1339	; 0x53b
   18e80:	ldr	r0, [pc, r0]
   18e84:	ldr	r0, [r0]
   18e88:	ldr	r1, [pc, #476]	; 1906c <__flatcc_fb_gen_c_reader@@Base+0x2148>
   18e8c:	add	r1, pc, r1
   18e90:	str	r1, [sp]
   18e94:	ldr	r1, [pc, #468]	; 19070 <__flatcc_fb_gen_c_reader@@Base+0x214c>
   18e98:	ldr	r4, [pc, #468]	; 19074 <__flatcc_fb_gen_c_reader@@Base+0x2150>
   18e9c:	add	r4, pc, r4
   18ea0:	add	r1, pc, r1
   18ea4:	mov	r2, r4
   18ea8:	bl	148bc <fprintf@plt>
   18eac:	ldr	r0, [pc, #452]	; 19078 <__flatcc_fb_gen_c_reader@@Base+0x2154>
   18eb0:	ldr	r3, [pc, #452]	; 1907c <__flatcc_fb_gen_c_reader@@Base+0x2158>
   18eb4:	mov	r1, r4
   18eb8:	movw	r2, #1339	; 0x53b
   18ebc:	add	r0, pc, r0
   18ec0:	add	r3, pc, r3
   18ec4:	bl	1497c <__assert_fail@plt>
   18ec8:	ldr	r0, [pc, #432]	; 19080 <__flatcc_fb_gen_c_reader@@Base+0x215c>
   18ecc:	ldr	r1, [pc, #432]	; 19084 <__flatcc_fb_gen_c_reader@@Base+0x2160>
   18ed0:	ldr	r3, [pc, #432]	; 19088 <__flatcc_fb_gen_c_reader@@Base+0x2164>
   18ed4:	movw	r2, #1343	; 0x53f
   18ed8:	add	r0, pc, r0
   18edc:	add	r1, pc, r1
   18ee0:	add	r3, pc, r3
   18ee4:	bl	1497c <__assert_fail@plt>
   18ee8:	andeq	sp, r2, r2, lsl #30
   18eec:	andeq	sp, r2, r5, asr r6
   18ef0:	andeq	sp, r2, r9, asr r6
   18ef4:	strdeq	r2, [r5], -r8
   18ef8:	andeq	sp, r2, r5, ror #3
   18efc:	andeq	r6, r2, r2, asr #19
   18f00:	ldrdeq	r6, [r2], -r1
   18f04:	andeq	r7, r3, lr, ror #16
   18f08:	strdeq	sp, [r2], -r6
   18f0c:	andeq	ip, r3, sp, lsl #16
   18f10:	ldrdeq	lr, [r2], -r6
   18f14:	andeq	lr, r2, r9, lsl r4
   18f18:	andeq	lr, r2, r3, asr #15
   18f1c:	andeq	lr, r2, r0, lsl r8
   18f20:	andeq	sp, r2, r3, lsr #27
   18f24:	andeq	sp, r2, r2, lsl sp
   18f28:	andeq	ip, r3, r9, lsr r6
   18f2c:	andeq	lr, r2, r3, asr #15
   18f30:	andeq	r7, r2, r6, lsr r2
   18f34:	andeq	r2, r5, r8, lsl r9
   18f38:	andeq	r2, r5, ip, lsr #17
   18f3c:	andeq	lr, r2, ip, lsl r3
   18f40:	andeq	lr, r2, r5, lsl r3
   18f44:	andeq	sp, r2, lr, lsr #30
   18f48:	andeq	sp, r2, r9, asr pc
   18f4c:	andeq	lr, r2, r6, asr #5
   18f50:			; <UNDEFINED> instruction: 0x0002e2b7
   18f54:			; <UNDEFINED> instruction: 0x0002e2b5
   18f58:	andeq	lr, r2, r6, asr #5
   18f5c:	andeq	r2, r5, ip, asr #23
   18f60:	andeq	lr, r2, r3, ror r7
   18f64:			; <UNDEFINED> instruction: 0x0002ebb4
   18f68:	andeq	lr, r2, r7, lsr #23
   18f6c:	strdeq	lr, [r2], -r7
   18f70:	andeq	lr, r2, r6, lsr #13
   18f74:	muleq	r2, r7, r6
   18f78:	andeq	lr, r2, r2, asr #2
   18f7c:	andeq	lr, r2, r2, ror #12
   18f80:	andeq	lr, r2, sp, asr r6
   18f84:	andeq	lr, r2, r8, asr r6
   18f88:	andeq	lr, r2, r3, ror r6
   18f8c:	andeq	sp, r2, sp, ror #30
   18f90:	andeq	lr, r2, r6, asr #7
   18f94:	andeq	lr, r2, fp, lsr r2
   18f98:	andeq	lr, r2, r1, asr #6
   18f9c:	andeq	lr, r2, r5, ror #3
   18fa0:			; <UNDEFINED> instruction: 0x0002dab8
   18fa4:			; <UNDEFINED> instruction: 0x0002dab2
   18fa8:	ldrdeq	sp, [r2], -sp	; <UNPREDICTABLE>
   18fac:	andeq	sp, r2, r7, ror #21
   18fb0:	andeq	lr, r2, sp, lsl r1
   18fb4:	ldrdeq	sp, [r2], -sp	; <UNPREDICTABLE>
   18fb8:	andeq	sp, r2, r3, lsl #22
   18fbc:	andeq	lr, r2, ip, ror r3
   18fc0:	andeq	r2, r5, r0, lsl #6
   18fc4:	andeq	sp, r2, r8, asr #28
   18fc8:	andeq	r6, r2, sl, asr #15
   18fcc:	ldrdeq	r6, [r2], -r9
   18fd0:	andeq	r7, r3, r6, ror r6
   18fd4:	andeq	sp, r2, sl, lsl r9
   18fd8:	andeq	lr, r2, r9, asr #10
   18fdc:	andeq	lr, r2, r8, asr #9
   18fe0:	muleq	r2, r1, sp
   18fe4:	andeq	r7, r2, sl, ror r6
   18fe8:	andeq	ip, r2, r2, asr #18
   18fec:	muleq	r2, ip, r3
   18ff0:	andeq	sp, r2, sl, ror #3
   18ff4:			; <UNDEFINED> instruction: 0x000268bd
   18ff8:	andeq	sp, r2, r2, lsl #4
   18ffc:	andeq	sp, r2, fp, lsl r1
   19000:	muleq	r2, r9, r7
   19004:	ldrdeq	sp, [r2], -lr
   19008:	andeq	sp, r2, fp, lsl r1
   1900c:	andeq	r6, r2, r9, ror r7
   19010:	strheq	sp, [r2], -lr
   19014:	andeq	r2, r5, ip, ror #10
   19018:	andeq	sp, r2, r9, asr r2
   1901c:	andeq	r6, r2, r6, lsr sl
   19020:	andeq	sp, r2, r9, ror #3
   19024:	andeq	r7, r3, r2, ror #17
   19028:	andeq	sp, r2, ip, asr r2
   1902c:	andeq	sp, r2, r8, lsl #10
   19030:	andeq	r6, r2, r5, lsr r9
   19034:	andeq	sp, r2, sl, ror r2
   19038:	andeq	r2, r5, r8, lsr #8
   1903c:	andeq	sp, r2, r5, lsl r1
   19040:	strdeq	r6, [r2], -r2
   19044:	andeq	sp, r2, r5, lsr #1
   19048:	muleq	r3, lr, r7
   1904c:	andeq	sp, r2, r1, lsl sl
   19050:	andeq	r2, r5, ip, ror #4
   19054:	andeq	ip, r2, r9, asr pc
   19058:	andeq	r6, r2, r6, lsr r7
   1905c:	andeq	ip, r2, r9, ror #29
   19060:	andeq	r7, r3, r2, ror #11
   19064:	andeq	sp, r2, r6, lsr #30
   19068:	andeq	r2, r5, ip, lsl r2
   1906c:	andeq	sp, r2, pc, asr #30
   19070:	andeq	r6, r2, r6, ror #13
   19074:	strdeq	r6, [r2], -r5
   19078:	muleq	r3, r2, r5
   1907c:	andeq	sp, r2, pc, asr #30
   19080:	andeq	sp, r2, r8, lsl #31
   19084:			; <UNDEFINED> instruction: 0x000266b5
   19088:	andeq	sp, r2, pc, lsr #30
   1908c:	andeq	r2, r5, r4, asr r3
   19090:	andeq	sp, r2, r5, ror #29
   19094:	andeq	r6, r2, lr, lsl r8
   19098:	andeq	r6, r2, sp, lsr #16
   1909c:	andeq	r7, r3, sl, asr #13
   190a0:	andeq	sp, r2, lr, ror #18
   190a4:	andeq	r2, r5, r0, lsr #9
   190a8:	strdeq	lr, [r2], -r3
   190ac:	andeq	r6, r2, sl, ror #18
   190b0:	andeq	r6, r2, r9, ror r9
   190b4:	andeq	r7, r3, r6, lsl r8
   190b8:			; <UNDEFINED> instruction: 0x0002daba
   190bc:	andeq	r2, r5, ip, lsr #7
   190c0:	strdeq	r6, [r2], -ip
   190c4:	andeq	r6, r2, r6, ror r8
   190c8:	andeq	r6, r2, r5, lsl #17
   190cc:	andeq	r7, r3, r2, lsr #14
   190d0:	strdeq	r6, [r2], -r4
   190d4:	push	{r4, r5, fp, lr}
   190d8:	add	fp, sp, #8
   190dc:	sub	sp, sp, #224	; 0xe0
   190e0:	mov	r5, r1
   190e4:	mov	r4, r0
   190e8:	mov	r0, sp
   190ec:	mov	r1, #0
   190f0:	mov	r2, #220	; 0xdc
   190f4:	bl	148d4 <memset@plt>
   190f8:	ldrh	r0, [r5, #8]
   190fc:	cmp	r0, #2
   19100:	bcs	1920c <__flatcc_fb_gen_c_reader@@Base+0x22e8>
   19104:	ldr	r0, [r5, #12]
   19108:	mov	r2, sp
   1910c:	mov	r1, r5
   19110:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   19114:	ldrh	r0, [r5, #8]
   19118:	cmp	r0, #1
   1911c:	bne	19148 <__flatcc_fb_gen_c_reader@@Base+0x2224>
   19120:	ldrd	r2, [r5, #112]	; 0x70
   19124:	ldr	r0, [r4, #204]	; 0xcc
   19128:	orrs	r1, r2, r3
   1912c:	beq	19190 <__flatcc_fb_gen_c_reader@@Base+0x226c>
   19130:	ldr	r1, [pc, #248]	; 19230 <__flatcc_fb_gen_c_reader@@Base+0x230c>
   19134:	mov	r2, sp
   19138:	mov	r3, r2
   1913c:	add	r1, pc, r1
   19140:	bl	148bc <fprintf@plt>
   19144:	b	191a0 <__flatcc_fb_gen_c_reader@@Base+0x227c>
   19148:	ldr	r0, [r4, #204]	; 0xcc
   1914c:	ldr	r1, [pc, #240]	; 19244 <__flatcc_fb_gen_c_reader@@Base+0x2320>
   19150:	mov	r5, sp
   19154:	mov	r2, r5
   19158:	mov	r3, r5
   1915c:	add	r1, pc, r1
   19160:	bl	148bc <fprintf@plt>
   19164:	ldr	r0, [r4, #204]	; 0xcc
   19168:	ldr	r1, [pc, #216]	; 19248 <__flatcc_fb_gen_c_reader@@Base+0x2324>
   1916c:	mov	r2, r4
   19170:	mov	r3, r5
   19174:	add	r1, pc, r1
   19178:	bl	148bc <fprintf@plt>
   1917c:	ldr	r0, [r4, #204]	; 0xcc
   19180:	ldr	r1, [pc, #196]	; 1924c <__flatcc_fb_gen_c_reader@@Base+0x2328>
   19184:	mov	r2, r4
   19188:	add	r1, pc, r1
   1918c:	b	191fc <__flatcc_fb_gen_c_reader@@Base+0x22d8>
   19190:	ldr	r1, [pc, #148]	; 1922c <__flatcc_fb_gen_c_reader@@Base+0x2308>
   19194:	mov	r2, sp
   19198:	add	r1, pc, r1
   1919c:	bl	148bc <fprintf@plt>
   191a0:	ldr	r0, [r4, #204]	; 0xcc
   191a4:	ldr	r1, [pc, #136]	; 19234 <__flatcc_fb_gen_c_reader@@Base+0x2310>
   191a8:	mov	r5, sp
   191ac:	mov	r2, r5
   191b0:	mov	r3, r5
   191b4:	add	r1, pc, r1
   191b8:	bl	148bc <fprintf@plt>
   191bc:	ldr	r0, [r4, #204]	; 0xcc
   191c0:	ldr	r1, [pc, #112]	; 19238 <__flatcc_fb_gen_c_reader@@Base+0x2314>
   191c4:	mov	r2, r5
   191c8:	mov	r3, r5
   191cc:	add	r1, pc, r1
   191d0:	bl	148bc <fprintf@plt>
   191d4:	ldr	r0, [r4, #204]	; 0xcc
   191d8:	ldr	r1, [pc, #92]	; 1923c <__flatcc_fb_gen_c_reader@@Base+0x2318>
   191dc:	mov	r2, r5
   191e0:	mov	r3, r5
   191e4:	add	r1, pc, r1
   191e8:	bl	148bc <fprintf@plt>
   191ec:	ldr	r0, [r4, #204]	; 0xcc
   191f0:	ldr	r1, [pc, #72]	; 19240 <__flatcc_fb_gen_c_reader@@Base+0x231c>
   191f4:	mov	r2, r5
   191f8:	add	r1, pc, r1
   191fc:	mov	r3, r5
   19200:	bl	148bc <fprintf@plt>
   19204:	sub	sp, fp, #8
   19208:	pop	{r4, r5, fp, pc}
   1920c:	ldr	r0, [pc, #60]	; 19250 <__flatcc_fb_gen_c_reader@@Base+0x232c>
   19210:	ldr	r1, [pc, #60]	; 19254 <__flatcc_fb_gen_c_reader@@Base+0x2330>
   19214:	ldr	r3, [pc, #60]	; 19258 <__flatcc_fb_gen_c_reader@@Base+0x2334>
   19218:	movw	r2, #863	; 0x35f
   1921c:	add	r0, pc, r0
   19220:	add	r1, pc, r1
   19224:	add	r3, pc, r3
   19228:	bl	1497c <__assert_fail@plt>
   1922c:	andeq	ip, r2, r0, lsr #13
   19230:	andeq	ip, r2, r3, lsr #14
   19234:	andeq	ip, r2, r4, asr #13
   19238:	andeq	ip, r2, lr, asr #13
   1923c:	ldrdeq	ip, [r2], -sl
   19240:	andeq	ip, r2, r5, ror #13
   19244:	andeq	ip, r2, r2, lsr #15
   19248:			; <UNDEFINED> instruction: 0x0002c7b6
   1924c:	andeq	ip, r2, r8, asr #15
   19250:	muleq	r2, pc, r5	; <UNPREDICTABLE>
   19254:	andeq	r6, r2, r1, ror r3
   19258:	ldrdeq	ip, [r2], -r9
   1925c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19260:	add	fp, sp, #28
   19264:	sub	sp, sp, #356	; 0x164
   19268:	mov	r6, r1
   1926c:	mov	r7, r0
   19270:	add	r0, sp, #32
   19274:	mov	r1, #0
   19278:	mov	r2, #220	; 0xdc
   1927c:	bl	148d4 <memset@plt>
   19280:	ldrh	r0, [r6, #8]
   19284:	str	r0, [sp, #20]
   19288:	sub	r0, r0, #3
   1928c:	uxth	r0, r0
   19290:	cmp	r0, #2
   19294:	bcs	197a0 <__flatcc_fb_gen_c_reader@@Base+0x287c>
   19298:	ldrh	r0, [r6, #48]	; 0x30
   1929c:	cmp	r0, #8
   192a0:	bne	197c0 <__flatcc_fb_gen_c_reader@@Base+0x289c>
   192a4:	ldr	r0, [r6, #40]	; 0x28
   192a8:	ldr	sl, [pc, #1408]	; 19830 <__flatcc_fb_gen_c_reader@@Base+0x290c>
   192ac:	cmp	r0, #5
   192b0:	sub	r4, r0, #1
   192b4:	add	sl, pc, sl
   192b8:	moveq	sl, r7
   192bc:	cmp	r4, #11
   192c0:	bcs	197e0 <__flatcc_fb_gen_c_reader@@Base+0x28bc>
   192c4:	ldr	r0, [r6, #12]
   192c8:	ldr	r5, [r6, #112]	; 0x70
   192cc:	add	r2, sp, #32
   192d0:	mov	r1, r6
   192d4:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   192d8:	ldr	r0, [pc, #1364]	; 19834 <__flatcc_fb_gen_c_reader@@Base+0x2910>
   192dc:	ldr	r2, [pc, #1364]	; 19838 <__flatcc_fb_gen_c_reader@@Base+0x2914>
   192e0:	ldr	r1, [sp, #20]
   192e4:	lsl	r8, r5, #3
   192e8:	add	r0, pc, r0
   192ec:	cmp	r1, #3
   192f0:	add	r2, pc, r2
   192f4:	movne	r2, r0
   192f8:	str	r2, [sp, #24]
   192fc:	ldr	r0, [pc, #1336]	; 1983c <__flatcc_fb_gen_c_reader@@Base+0x2918>
   19300:	str	r6, [sp, #28]
   19304:	add	r0, pc, r0
   19308:	ldr	r3, [r0, r4, lsl #2]
   1930c:	ldr	r4, [r6, #32]
   19310:	cmp	r4, #0
   19314:	beq	19400 <__flatcc_fb_gen_c_reader@@Base+0x24dc>
   19318:	ldr	r0, [r4, #4]
   1931c:	str	r3, [sp, #16]
   19320:	ldr	r0, [r0, #8]
   19324:	cmp	r0, #0
   19328:	beq	19344 <__flatcc_fb_gen_c_reader@@Base+0x2420>
   1932c:	ldr	r0, [r7, #204]	; 0xcc
   19330:	ldr	r1, [pc, #1288]	; 19840 <__flatcc_fb_gen_c_reader@@Base+0x291c>
   19334:	ldr	r2, [pc, #1288]	; 19844 <__flatcc_fb_gen_c_reader@@Base+0x2920>
   19338:	add	r1, pc, r1
   1933c:	add	r2, pc, r2
   19340:	bl	148bc <fprintf@plt>
   19344:	ldr	r1, [r4, #4]
   19348:	ldr	r0, [r7, #204]	; 0xcc
   1934c:	ldr	r3, [r1]
   19350:	ldr	r2, [r1, #4]
   19354:	ldr	r1, [pc, #1260]	; 19848 <__flatcc_fb_gen_c_reader@@Base+0x2924>
   19358:	add	r1, pc, r1
   1935c:	bl	148bc <fprintf@plt>
   19360:	ldr	r5, [r4]
   19364:	cmp	r5, #0
   19368:	beq	193e4 <__flatcc_fb_gen_c_reader@@Base+0x24c0>
   1936c:	ldr	r0, [r4, #4]
   19370:	ldr	r0, [r0, #8]
   19374:	ldr	r4, [pc, #1232]	; 1984c <__flatcc_fb_gen_c_reader@@Base+0x2928>
   19378:	ldr	r6, [pc, #1232]	; 19850 <__flatcc_fb_gen_c_reader@@Base+0x292c>
   1937c:	ldr	r9, [pc, #1232]	; 19854 <__flatcc_fb_gen_c_reader@@Base+0x2930>
   19380:	add	r4, pc, r4
   19384:	add	r6, pc, r6
   19388:	add	r9, pc, r9
   1938c:	b	193c0 <__flatcc_fb_gen_c_reader@@Base+0x249c>
   19390:	ldr	r1, [r5, #4]
   19394:	ldr	r0, [r7, #204]	; 0xcc
   19398:	ldr	r3, [r1]
   1939c:	ldr	r2, [r1, #4]
   193a0:	mov	r1, r4
   193a4:	bl	148bc <fprintf@plt>
   193a8:	ldr	r0, [r5, #4]
   193ac:	ldr	r1, [r5]
   193b0:	ldr	r0, [r0, #8]
   193b4:	cmp	r1, #0
   193b8:	mov	r5, r1
   193bc:	beq	193e4 <__flatcc_fb_gen_c_reader@@Base+0x24c0>
   193c0:	ldr	r1, [r5, #4]
   193c4:	ldr	r1, [r1, #8]
   193c8:	cmp	r0, r1
   193cc:	beq	19390 <__flatcc_fb_gen_c_reader@@Base+0x246c>
   193d0:	ldr	r0, [r7, #204]	; 0xcc
   193d4:	mov	r1, r6
   193d8:	mov	r2, r9
   193dc:	bl	148bc <fprintf@plt>
   193e0:	b	19390 <__flatcc_fb_gen_c_reader@@Base+0x246c>
   193e4:	ldr	r3, [r7, #204]	; 0xcc
   193e8:	ldr	r0, [pc, #1128]	; 19858 <__flatcc_fb_gen_c_reader@@Base+0x2934>
   193ec:	mov	r1, #4
   193f0:	mov	r2, #1
   193f4:	add	r0, pc, r0
   193f8:	bl	14850 <fwrite@plt>
   193fc:	ldr	r3, [sp, #16]
   19400:	ldr	r5, [sp, #24]
   19404:	mov	r6, r7
   19408:	add	r4, sp, #32
   1940c:	mov	r2, sl
   19410:	ldr	r0, [r6, #204]!	; 0xcc
   19414:	str	r4, [sp]
   19418:	str	r5, [sp, #4]
   1941c:	ldr	r1, [pc, #1080]	; 1985c <__flatcc_fb_gen_c_reader@@Base+0x2938>
   19420:	add	r1, pc, r1
   19424:	bl	148bc <fprintf@plt>
   19428:	ldr	r0, [r6]
   1942c:	stm	sp, {r4, r5, r8}
   19430:	mov	r2, r7
   19434:	mov	r3, r4
   19438:	ldr	r1, [pc, #1056]	; 19860 <__flatcc_fb_gen_c_reader@@Base+0x293c>
   1943c:	add	r1, pc, r1
   19440:	bl	148bc <fprintf@plt>
   19444:	ldr	r0, [sp, #20]
   19448:	cmp	r0, #3
   1944c:	beq	19470 <__flatcc_fb_gen_c_reader@@Base+0x254c>
   19450:	add	r1, sp, #32
   19454:	ldr	r0, [r7, #204]	; 0xcc
   19458:	mov	r2, r7
   1945c:	mov	r3, r7
   19460:	str	r1, [sp]
   19464:	ldr	r1, [pc, #1016]	; 19864 <__flatcc_fb_gen_c_reader@@Base+0x2940>
   19468:	add	r1, pc, r1
   1946c:	bl	148bc <fprintf@plt>
   19470:	ldr	r0, [sp, #28]
   19474:	ldr	r5, [r0, #20]
   19478:	cmp	r5, #0
   1947c:	beq	195c0 <__flatcc_fb_gen_c_reader@@Base+0x269c>
   19480:	ldr	sl, [pc, #992]	; 19868 <__flatcc_fb_gen_c_reader@@Base+0x2944>
   19484:	ldr	r9, [pc, #992]	; 1986c <__flatcc_fb_gen_c_reader@@Base+0x2948>
   19488:	add	sl, pc, sl
   1948c:	add	r9, pc, r9
   19490:	b	19504 <__flatcc_fb_gen_c_reader@@Base+0x25e0>
   19494:	ldr	r3, [r6]
   19498:	ldr	r0, [pc, #984]	; 19878 <__flatcc_fb_gen_c_reader@@Base+0x2954>
   1949c:	mov	r1, #4
   194a0:	mov	r2, #1
   194a4:	add	r0, pc, r0
   194a8:	bl	14850 <fwrite@plt>
   194ac:	ldr	r0, [r5, #4]
   194b0:	sub	r7, fp, #132	; 0x84
   194b4:	add	r1, r5, #48	; 0x30
   194b8:	mov	r2, r7
   194bc:	ldm	r0, {r4, r8}
   194c0:	ldr	r0, [sp, #28]
   194c4:	ldr	r0, [r0, #40]	; 0x28
   194c8:	bl	198e8 <__flatcc_fb_gen_c_reader@@Base+0x29c4>
   194cc:	ldr	r1, [sp, #24]
   194d0:	add	r2, sp, #32
   194d4:	ldr	r0, [r6]
   194d8:	str	r4, [sp]
   194dc:	str	r7, [sp, #12]
   194e0:	mov	r3, r8
   194e4:	str	r2, [sp, #4]
   194e8:	str	r1, [sp, #8]
   194ec:	ldr	r1, [pc, #904]	; 1987c <__flatcc_fb_gen_c_reader@@Base+0x2958>
   194f0:	add	r1, pc, r1
   194f4:	bl	148bc <fprintf@plt>
   194f8:	ldr	r5, [r5]
   194fc:	cmp	r5, #0
   19500:	beq	195c0 <__flatcc_fb_gen_c_reader@@Base+0x269c>
   19504:	ldr	r4, [r5, #68]	; 0x44
   19508:	cmp	r4, #0
   1950c:	beq	194ac <__flatcc_fb_gen_c_reader@@Base+0x2588>
   19510:	ldr	r0, [r4, #4]
   19514:	ldr	r0, [r0, #8]
   19518:	cmp	r0, #0
   1951c:	beq	19534 <__flatcc_fb_gen_c_reader@@Base+0x2610>
   19520:	ldr	r0, [r6]
   19524:	ldr	r1, [pc, #836]	; 19870 <__flatcc_fb_gen_c_reader@@Base+0x294c>
   19528:	mov	r2, r9
   1952c:	add	r1, pc, r1
   19530:	bl	148bc <fprintf@plt>
   19534:	ldr	r1, [r4, #4]
   19538:	ldr	r0, [r6]
   1953c:	ldr	r3, [r1]
   19540:	ldr	r2, [r1, #4]
   19544:	mov	r1, sl
   19548:	bl	148bc <fprintf@plt>
   1954c:	ldr	r7, [r4]
   19550:	ldr	r8, [pc, #796]	; 19874 <__flatcc_fb_gen_c_reader@@Base+0x2950>
   19554:	cmp	r7, #0
   19558:	add	r8, pc, r8
   1955c:	beq	19494 <__flatcc_fb_gen_c_reader@@Base+0x2570>
   19560:	ldr	r0, [r4, #4]
   19564:	ldr	r0, [r0, #8]
   19568:	b	1959c <__flatcc_fb_gen_c_reader@@Base+0x2678>
   1956c:	ldr	r1, [r7, #4]
   19570:	ldr	r0, [r6]
   19574:	ldr	r3, [r1]
   19578:	ldr	r2, [r1, #4]
   1957c:	mov	r1, sl
   19580:	bl	148bc <fprintf@plt>
   19584:	ldr	r0, [r7, #4]
   19588:	ldr	r1, [r7]
   1958c:	ldr	r0, [r0, #8]
   19590:	cmp	r1, #0
   19594:	mov	r7, r1
   19598:	beq	19494 <__flatcc_fb_gen_c_reader@@Base+0x2570>
   1959c:	ldr	r1, [r7, #4]
   195a0:	ldr	r1, [r1, #8]
   195a4:	cmp	r0, r1
   195a8:	beq	1956c <__flatcc_fb_gen_c_reader@@Base+0x2648>
   195ac:	ldr	r0, [r6]
   195b0:	mov	r1, r8
   195b4:	mov	r2, r9
   195b8:	bl	148bc <fprintf@plt>
   195bc:	b	1956c <__flatcc_fb_gen_c_reader@@Base+0x2648>
   195c0:	ldr	r1, [r6]
   195c4:	mov	r0, #10
   195c8:	bl	1491c <fputc@plt>
   195cc:	ldr	r1, [sp, #20]
   195d0:	ldr	r0, [r6]
   195d4:	cmp	r1, #3
   195d8:	beq	19604 <__flatcc_fb_gen_c_reader@@Base+0x26e0>
   195dc:	ldr	r1, [pc, #668]	; 19880 <__flatcc_fb_gen_c_reader@@Base+0x295c>
   195e0:	add	r2, sp, #32
   195e4:	mov	r3, r2
   195e8:	add	r1, pc, r1
   195ec:	bl	148bc <fprintf@plt>
   195f0:	ldr	r3, [r6]
   195f4:	ldr	r0, [pc, #648]	; 19884 <__flatcc_fb_gen_c_reader@@Base+0x2960>
   195f8:	mov	r1, #20
   195fc:	add	r0, pc, r0
   19600:	b	19628 <__flatcc_fb_gen_c_reader@@Base+0x2704>
   19604:	ldr	r1, [pc, #636]	; 19888 <__flatcc_fb_gen_c_reader@@Base+0x2964>
   19608:	add	r2, sp, #32
   1960c:	mov	r3, r2
   19610:	add	r1, pc, r1
   19614:	bl	148bc <fprintf@plt>
   19618:	ldr	r3, [r6]
   1961c:	ldr	r0, [pc, #616]	; 1988c <__flatcc_fb_gen_c_reader@@Base+0x2968>
   19620:	mov	r1, #21
   19624:	add	r0, pc, r0
   19628:	mov	r2, #1
   1962c:	bl	14850 <fwrite@plt>
   19630:	ldr	r0, [sp, #28]
   19634:	ldr	r5, [r0, #20]
   19638:	cmp	r5, #0
   1963c:	beq	19690 <__flatcc_fb_gen_c_reader@@Base+0x276c>
   19640:	ldr	r8, [pc, #584]	; 19890 <__flatcc_fb_gen_c_reader@@Base+0x296c>
   19644:	ldr	r9, [pc, #584]	; 19894 <__flatcc_fb_gen_c_reader@@Base+0x2970>
   19648:	add	r4, sp, #32
   1964c:	add	r8, pc, r8
   19650:	add	r9, pc, r9
   19654:	ldr	r2, [r5, #4]
   19658:	ldrh	r1, [r5, #10]
   1965c:	ldr	r0, [r6]
   19660:	ldr	r7, [r2]
   19664:	ldr	r3, [r2, #4]
   19668:	tst	r1, #4
   1966c:	mov	r1, r9
   19670:	mov	r2, r4
   19674:	moveq	r1, r8
   19678:	str	r7, [sp]
   1967c:	stmib	sp, {r3, r7}
   19680:	bl	148bc <fprintf@plt>
   19684:	ldr	r5, [r5]
   19688:	cmp	r5, #0
   1968c:	bne	19654 <__flatcc_fb_gen_c_reader@@Base+0x2730>
   19690:	ldr	r3, [r6]
   19694:	ldr	r0, [pc, #508]	; 19898 <__flatcc_fb_gen_c_reader@@Base+0x2974>
   19698:	mov	r1, #32
   1969c:	mov	r2, #1
   196a0:	add	r0, pc, r0
   196a4:	bl	14850 <fwrite@plt>
   196a8:	ldr	r1, [r6]
   196ac:	mov	r0, #10
   196b0:	bl	1491c <fputc@plt>
   196b4:	ldr	r1, [sp, #20]
   196b8:	ldr	r0, [r6]
   196bc:	cmp	r1, #3
   196c0:	beq	196ec <__flatcc_fb_gen_c_reader@@Base+0x27c8>
   196c4:	ldr	r1, [pc, #464]	; 1989c <__flatcc_fb_gen_c_reader@@Base+0x2978>
   196c8:	add	r2, sp, #32
   196cc:	mov	r3, r2
   196d0:	add	r1, pc, r1
   196d4:	bl	148bc <fprintf@plt>
   196d8:	ldr	r3, [r6]
   196dc:	ldr	r0, [pc, #444]	; 198a0 <__flatcc_fb_gen_c_reader@@Base+0x297c>
   196e0:	mov	r1, #20
   196e4:	add	r0, pc, r0
   196e8:	b	19710 <__flatcc_fb_gen_c_reader@@Base+0x27ec>
   196ec:	ldr	r1, [pc, #432]	; 198a4 <__flatcc_fb_gen_c_reader@@Base+0x2980>
   196f0:	add	r2, sp, #32
   196f4:	mov	r3, r2
   196f8:	add	r1, pc, r1
   196fc:	bl	148bc <fprintf@plt>
   19700:	ldr	r3, [r6]
   19704:	ldr	r0, [pc, #412]	; 198a8 <__flatcc_fb_gen_c_reader@@Base+0x2984>
   19708:	mov	r1, #21
   1970c:	add	r0, pc, r0
   19710:	mov	r2, #1
   19714:	bl	14850 <fwrite@plt>
   19718:	ldr	r0, [sp, #28]
   1971c:	ldr	r5, [r0, #20]
   19720:	cmp	r5, #0
   19724:	beq	19774 <__flatcc_fb_gen_c_reader@@Base+0x2850>
   19728:	ldr	r8, [pc, #380]	; 198ac <__flatcc_fb_gen_c_reader@@Base+0x2988>
   1972c:	ldr	r9, [pc, #380]	; 198b0 <__flatcc_fb_gen_c_reader@@Base+0x298c>
   19730:	add	r4, sp, #32
   19734:	add	r8, pc, r8
   19738:	add	r9, pc, r9
   1973c:	ldr	r2, [r5, #4]
   19740:	ldrh	r1, [r5, #10]
   19744:	ldr	r0, [r6]
   19748:	ldr	r7, [r2]
   1974c:	ldr	r3, [r2, #4]
   19750:	tst	r1, #4
   19754:	mov	r1, r9
   19758:	mov	r2, r4
   1975c:	moveq	r1, r8
   19760:	str	r7, [sp]
   19764:	bl	148bc <fprintf@plt>
   19768:	ldr	r5, [r5]
   1976c:	cmp	r5, #0
   19770:	bne	1973c <__flatcc_fb_gen_c_reader@@Base+0x2818>
   19774:	ldr	r3, [r6]
   19778:	ldr	r0, [pc, #308]	; 198b4 <__flatcc_fb_gen_c_reader@@Base+0x2990>
   1977c:	mov	r1, #31
   19780:	mov	r2, #1
   19784:	add	r0, pc, r0
   19788:	bl	14850 <fwrite@plt>
   1978c:	ldr	r1, [r6]
   19790:	mov	r0, #10
   19794:	bl	1491c <fputc@plt>
   19798:	sub	sp, fp, #28
   1979c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   197a0:	ldr	r0, [pc, #272]	; 198b8 <__flatcc_fb_gen_c_reader@@Base+0x2994>
   197a4:	ldr	r1, [pc, #272]	; 198bc <__flatcc_fb_gen_c_reader@@Base+0x2998>
   197a8:	ldr	r3, [pc, #272]	; 198c0 <__flatcc_fb_gen_c_reader@@Base+0x299c>
   197ac:	movw	r2, #1204	; 0x4b4
   197b0:	add	r0, pc, r0
   197b4:	add	r1, pc, r1
   197b8:	add	r3, pc, r3
   197bc:	bl	1497c <__assert_fail@plt>
   197c0:	ldr	r0, [pc, #252]	; 198c4 <__flatcc_fb_gen_c_reader@@Base+0x29a0>
   197c4:	ldr	r1, [pc, #252]	; 198c8 <__flatcc_fb_gen_c_reader@@Base+0x29a4>
   197c8:	ldr	r3, [pc, #252]	; 198cc <__flatcc_fb_gen_c_reader@@Base+0x29a8>
   197cc:	movw	r2, #1205	; 0x4b5
   197d0:	add	r0, pc, r0
   197d4:	add	r1, pc, r1
   197d8:	add	r3, pc, r3
   197dc:	bl	1497c <__assert_fail@plt>
   197e0:	ldr	r0, [pc, #232]	; 198d0 <__flatcc_fb_gen_c_reader@@Base+0x29ac>
   197e4:	mov	r3, #141	; 0x8d
   197e8:	ldr	r0, [pc, r0]
   197ec:	ldr	r0, [r0]
   197f0:	ldr	r1, [pc, #220]	; 198d4 <__flatcc_fb_gen_c_reader@@Base+0x29b0>
   197f4:	add	r1, pc, r1
   197f8:	str	r1, [sp]
   197fc:	ldr	r1, [pc, #212]	; 198d8 <__flatcc_fb_gen_c_reader@@Base+0x29b4>
   19800:	ldr	r4, [pc, #212]	; 198dc <__flatcc_fb_gen_c_reader@@Base+0x29b8>
   19804:	add	r4, pc, r4
   19808:	add	r1, pc, r1
   1980c:	mov	r2, r4
   19810:	bl	148bc <fprintf@plt>
   19814:	ldr	r0, [pc, #196]	; 198e0 <__flatcc_fb_gen_c_reader@@Base+0x29bc>
   19818:	ldr	r3, [pc, #196]	; 198e4 <__flatcc_fb_gen_c_reader@@Base+0x29c0>
   1981c:	mov	r1, r4
   19820:	mov	r2, #141	; 0x8d
   19824:	add	r0, pc, r0
   19828:	add	r3, pc, r3
   1982c:	bl	1497c <__assert_fail@plt>
   19830:	andeq	r6, r2, sl, ror #7
   19834:	andeq	ip, r2, lr, lsr #15
   19838:	andeq	ip, r2, r6, asr #29
   1983c:			; <UNDEFINED> instruction: 0x00051ab0
   19840:	andeq	ip, r2, r3, asr #21
   19844:	andeq	r6, r2, r2, ror #6
   19848:	andeq	r7, r3, r6, lsl #2
   1984c:	ldrdeq	r7, [r3], -lr
   19850:	andeq	ip, r2, lr, ror sl
   19854:	andeq	r6, r2, r6, lsl r3
   19858:	andeq	fp, r3, r5, asr r3
   1985c:	andeq	ip, r2, r1, lsl #13
   19860:	andeq	ip, r2, ip, ror r6
   19864:	andeq	ip, r2, sl, ror r6
   19868:	ldrdeq	r6, [r3], -r6	; <UNPREDICTABLE>
   1986c:	andeq	r6, r2, r2, lsl r2
   19870:	andeq	ip, r2, pc, asr #17
   19874:	andeq	ip, r2, sl, lsr #17
   19878:	andeq	fp, r3, r5, lsr #5
   1987c:	andeq	ip, r2, ip, lsl #12
   19880:	andeq	ip, r2, r3, lsr r5
   19884:	andeq	fp, r3, r2, lsl r7
   19888:	andeq	ip, r2, fp, asr #10
   1988c:	andeq	ip, r2, sp, ror #10
   19890:	andeq	ip, r2, pc, lsl #11
   19894:	andeq	ip, r2, r7, asr r5
   19898:	andeq	ip, r2, sp, asr r5
   1989c:	andeq	ip, r2, lr, asr #10
   198a0:	andeq	fp, r3, sl, lsr #12
   198a4:	andeq	ip, r2, r2, ror #10
   198a8:	andeq	ip, r2, r5, lsl #9
   198ac:	andeq	ip, r2, sp, lsl #11
   198b0:	andeq	ip, r2, sl, asr r5
   198b4:	andeq	ip, r2, sl, asr r5
   198b8:	andeq	ip, r2, r3, asr r2
   198bc:	ldrdeq	r5, [r2], -sp
   198c0:	andeq	ip, r2, fp, lsl #5
   198c4:	andeq	ip, r2, r6, lsr #5
   198c8:			; <UNDEFINED> instruction: 0x00025dbd
   198cc:	andeq	ip, r2, fp, ror #4
   198d0:			; <UNDEFINED> instruction: 0x000518b4
   198d4:	andeq	ip, r2, r1, lsr #11
   198d8:	andeq	r5, r2, lr, ror sp
   198dc:	andeq	ip, r2, r1, lsr r5
   198e0:	andeq	r6, r3, sl, lsr #24
   198e4:	andeq	ip, r2, r4, lsr #11
   198e8:	push	{r4, sl, fp, lr}
   198ec:	add	fp, sp, #8
   198f0:	sub	sp, sp, #8
   198f4:	mov	r4, r2
   198f8:	ldrh	r2, [r1, #8]
   198fc:	sub	r2, r2, #3
   19900:	cmp	r2, #3
   19904:	bhi	199f0 <__flatcc_fb_gen_c_reader@@Base+0x2acc>
   19908:	add	r3, pc, #4
   1990c:	ldr	r2, [r3, r2, lsl #2]
   19910:	add	pc, r3, r2
   19914:	andeq	r0, r0, r0, lsl r0
   19918:	andeq	r0, r0, r8, lsl #1
   1991c:	andeq	r0, r0, r4, lsr r0
   19920:	andeq	r0, r0, r0, rrx
   19924:	vldr	d16, [r1]
   19928:	cmp	r0, #11
   1992c:	bne	199d4 <__flatcc_fb_gen_c_reader@@Base+0x2ab0>
   19930:	vcvt.f32.f64	s0, d16
   19934:	ldr	r1, [pc, #364]	; 19aa8 <__flatcc_fb_gen_c_reader@@Base+0x2b84>
   19938:	add	r1, pc, r1
   1993c:	vcvt.f64.f32	d16, s0
   19940:	vmov	r2, r3, d16
   19944:	b	199e0 <__flatcc_fb_gen_c_reader@@Base+0x2abc>
   19948:	sub	r0, r0, #1
   1994c:	cmp	r0, #9
   19950:	bcs	19a40 <__flatcc_fb_gen_c_reader@@Base+0x2b1c>
   19954:	ldrd	r2, [r1]
   19958:	stm	sp, {r2, r3}
   1995c:	ldr	r1, [pc, #300]	; 19a90 <__flatcc_fb_gen_c_reader@@Base+0x2b6c>
   19960:	add	r1, pc, r1
   19964:	ldr	r2, [r1, r0, lsl #2]
   19968:	ldr	r1, [pc, #292]	; 19a94 <__flatcc_fb_gen_c_reader@@Base+0x2b70>
   1996c:	add	r1, pc, r1
   19970:	b	199c4 <__flatcc_fb_gen_c_reader@@Base+0x2aa0>
   19974:	sub	r0, r0, #1
   19978:	cmp	r0, #9
   1997c:	bcs	19a40 <__flatcc_fb_gen_c_reader@@Base+0x2b1c>
   19980:	ldr	r2, [pc, #280]	; 19aa0 <__flatcc_fb_gen_c_reader@@Base+0x2b7c>
   19984:	ldrb	r3, [r1]
   19988:	ldr	r1, [pc, #276]	; 19aa4 <__flatcc_fb_gen_c_reader@@Base+0x2b80>
   1998c:	add	r2, pc, r2
   19990:	add	r1, pc, r1
   19994:	ldr	r2, [r2, r0, lsl #2]
   19998:	b	199e0 <__flatcc_fb_gen_c_reader@@Base+0x2abc>
   1999c:	sub	r0, r0, #1
   199a0:	cmp	r0, #9
   199a4:	bcs	19a40 <__flatcc_fb_gen_c_reader@@Base+0x2b1c>
   199a8:	ldrd	r2, [r1]
   199ac:	stm	sp, {r2, r3}
   199b0:	ldr	r1, [pc, #224]	; 19a98 <__flatcc_fb_gen_c_reader@@Base+0x2b74>
   199b4:	add	r1, pc, r1
   199b8:	ldr	r2, [r1, r0, lsl #2]
   199bc:	ldr	r1, [pc, #216]	; 19a9c <__flatcc_fb_gen_c_reader@@Base+0x2b78>
   199c0:	add	r1, pc, r1
   199c4:	mov	r0, r4
   199c8:	bl	14928 <sprintf@plt>
   199cc:	sub	sp, fp, #8
   199d0:	pop	{r4, sl, fp, pc}
   199d4:	ldr	r1, [pc, #208]	; 19aac <__flatcc_fb_gen_c_reader@@Base+0x2b88>
   199d8:	vmov	r2, r3, d16
   199dc:	add	r1, pc, r1
   199e0:	mov	r0, r4
   199e4:	sub	sp, fp, #8
   199e8:	pop	{r4, sl, fp, lr}
   199ec:	b	14928 <sprintf@plt>
   199f0:	ldr	r0, [pc, #184]	; 19ab0 <__flatcc_fb_gen_c_reader@@Base+0x2b8c>
   199f4:	mov	r3, #260	; 0x104
   199f8:	ldr	r0, [pc, r0]
   199fc:	ldr	r0, [r0]
   19a00:	ldr	r1, [pc, #172]	; 19ab4 <__flatcc_fb_gen_c_reader@@Base+0x2b90>
   19a04:	add	r1, pc, r1
   19a08:	str	r1, [sp]
   19a0c:	ldr	r1, [pc, #164]	; 19ab8 <__flatcc_fb_gen_c_reader@@Base+0x2b94>
   19a10:	ldr	r4, [pc, #164]	; 19abc <__flatcc_fb_gen_c_reader@@Base+0x2b98>
   19a14:	add	r4, pc, r4
   19a18:	add	r1, pc, r1
   19a1c:	mov	r2, r4
   19a20:	bl	148bc <fprintf@plt>
   19a24:	ldr	r0, [pc, #148]	; 19ac0 <__flatcc_fb_gen_c_reader@@Base+0x2b9c>
   19a28:	ldr	r3, [pc, #148]	; 19ac4 <__flatcc_fb_gen_c_reader@@Base+0x2ba0>
   19a2c:	mov	r1, r4
   19a30:	mov	r2, #260	; 0x104
   19a34:	add	r0, pc, r0
   19a38:	add	r3, pc, r3
   19a3c:	bl	1497c <__assert_fail@plt>
   19a40:	ldr	r0, [pc, #128]	; 19ac8 <__flatcc_fb_gen_c_reader@@Base+0x2ba4>
   19a44:	mov	r3, #226	; 0xe2
   19a48:	ldr	r0, [pc, r0]
   19a4c:	ldr	r0, [r0]
   19a50:	ldr	r1, [pc, #116]	; 19acc <__flatcc_fb_gen_c_reader@@Base+0x2ba8>
   19a54:	add	r1, pc, r1
   19a58:	str	r1, [sp]
   19a5c:	ldr	r1, [pc, #108]	; 19ad0 <__flatcc_fb_gen_c_reader@@Base+0x2bac>
   19a60:	ldr	r4, [pc, #108]	; 19ad4 <__flatcc_fb_gen_c_reader@@Base+0x2bb0>
   19a64:	add	r4, pc, r4
   19a68:	add	r1, pc, r1
   19a6c:	mov	r2, r4
   19a70:	bl	148bc <fprintf@plt>
   19a74:	ldr	r0, [pc, #92]	; 19ad8 <__flatcc_fb_gen_c_reader@@Base+0x2bb4>
   19a78:	ldr	r3, [pc, #92]	; 19adc <__flatcc_fb_gen_c_reader@@Base+0x2bb8>
   19a7c:	mov	r1, r4
   19a80:	mov	r2, #226	; 0xe2
   19a84:	add	r0, pc, r0
   19a88:	add	r3, pc, r3
   19a8c:	bl	1497c <__assert_fail@plt>
   19a90:	andeq	r1, r5, r0, lsl #9
   19a94:	muleq	r2, sp, r4
   19a98:	andeq	r1, r5, ip, lsr #8
   19a9c:	andeq	ip, r2, r2, asr r4
   19aa0:	andeq	r1, r5, r4, asr r4
   19aa4:	andeq	ip, r2, fp, lsl #9
   19aa8:	andeq	ip, r2, sl, ror #9
   19aac:	andeq	ip, r2, sl, asr #8
   19ab0:	andeq	r1, r5, r4, lsr #13
   19ab4:	muleq	r2, r1, r3
   19ab8:	andeq	r5, r2, lr, ror #22
   19abc:	andeq	ip, r2, r1, lsr #6
   19ac0:	andeq	r6, r3, sl, lsl sl
   19ac4:	strdeq	ip, [r2], -r2
   19ac8:	andeq	r1, r5, r4, asr r6
   19acc:	andeq	ip, r2, r1, asr #6
   19ad0:	andeq	r5, r2, lr, lsl fp
   19ad4:	ldrdeq	ip, [r2], -r1
   19ad8:	andeq	r6, r3, sl, asr #19
   19adc:	andeq	ip, r2, r8, lsl #8

00019ae0 <__flatcc_gen_sort@@Base>:
   19ae0:	push	{r4, sl, fp, lr}
   19ae4:	add	fp, sp, #8
   19ae8:	sub	sp, sp, #24
   19aec:	mov	r4, r0
   19af0:	ldr	r0, [r0, #204]	; 0xcc
   19af4:	ldr	r1, [pc, #276]	; 19c10 <__flatcc_gen_sort@@Base+0x130>
   19af8:	mov	r2, r4
   19afc:	add	r1, pc, r1
   19b00:	bl	148bc <fprintf@plt>
   19b04:	ldr	r0, [r4, #204]	; 0xcc
   19b08:	ldr	r1, [pc, #260]	; 19c14 <__flatcc_gen_sort@@Base+0x134>
   19b0c:	mov	r2, r4
   19b10:	mov	r3, r4
   19b14:	add	r1, pc, r1
   19b18:	bl	148bc <fprintf@plt>
   19b1c:	ldr	r0, [r4, #204]	; 0xcc
   19b20:	str	r4, [sp]
   19b24:	mov	r2, r4
   19b28:	mov	r3, r4
   19b2c:	ldr	r1, [pc, #228]	; 19c18 <__flatcc_gen_sort@@Base+0x138>
   19b30:	add	r1, pc, r1
   19b34:	bl	148bc <fprintf@plt>
   19b38:	ldr	r0, [r4, #204]	; 0xcc
   19b3c:	str	r4, [sp]
   19b40:	str	r4, [sp, #4]
   19b44:	mov	r2, r4
   19b48:	mov	r3, r4
   19b4c:	ldr	r1, [pc, #200]	; 19c1c <__flatcc_gen_sort@@Base+0x13c>
   19b50:	add	r1, pc, r1
   19b54:	bl	148bc <fprintf@plt>
   19b58:	ldr	r0, [r4, #204]	; 0xcc
   19b5c:	ldr	r1, [pc, #188]	; 19c20 <__flatcc_gen_sort@@Base+0x140>
   19b60:	mov	r2, r4
   19b64:	mov	r3, r4
   19b68:	add	r1, pc, r1
   19b6c:	bl	148bc <fprintf@plt>
   19b70:	ldr	r0, [r4, #204]	; 0xcc
   19b74:	str	r4, [sp]
   19b78:	str	r4, [sp, #4]
   19b7c:	mov	r2, r4
   19b80:	mov	r3, r4
   19b84:	ldr	r1, [pc, #152]	; 19c24 <__flatcc_gen_sort@@Base+0x144>
   19b88:	add	r1, pc, r1
   19b8c:	bl	148bc <fprintf@plt>
   19b90:	ldr	r0, [r4, #204]	; 0xcc
   19b94:	str	r4, [sp]
   19b98:	str	r4, [sp, #4]
   19b9c:	str	r4, [sp, #8]
   19ba0:	str	r4, [sp, #12]
   19ba4:	mov	r2, r4
   19ba8:	mov	r3, r4
   19bac:	ldr	r1, [pc, #116]	; 19c28 <__flatcc_gen_sort@@Base+0x148>
   19bb0:	add	r1, pc, r1
   19bb4:	bl	148bc <fprintf@plt>
   19bb8:	ldr	r0, [r4, #204]	; 0xcc
   19bbc:	str	r4, [sp]
   19bc0:	str	r4, [sp, #4]
   19bc4:	mov	r2, r4
   19bc8:	mov	r3, r4
   19bcc:	ldr	r1, [pc, #88]	; 19c2c <__flatcc_gen_sort@@Base+0x14c>
   19bd0:	add	r1, pc, r1
   19bd4:	bl	148bc <fprintf@plt>
   19bd8:	ldr	r0, [r4, #204]	; 0xcc
   19bdc:	str	r4, [sp]
   19be0:	str	r4, [sp, #4]
   19be4:	str	r4, [sp, #8]
   19be8:	str	r4, [sp, #12]
   19bec:	str	r4, [sp, #16]
   19bf0:	mov	r2, r4
   19bf4:	mov	r3, r4
   19bf8:	ldr	r1, [pc, #48]	; 19c30 <__flatcc_gen_sort@@Base+0x150>
   19bfc:	add	r1, pc, r1
   19c00:	bl	148bc <fprintf@plt>
   19c04:	mov	r0, #0
   19c08:	sub	sp, fp, #8
   19c0c:	pop	{r4, sl, fp, pc}
   19c10:	andeq	sp, r2, sl, asr #7
   19c14:	andeq	sp, r2, r0, lsl #15
   19c18:	andeq	sp, r2, r4, ror r8
   19c1c:	andeq	sp, r2, r8, lsr #18
   19c20:	andeq	sp, r2, r4, lsr #19
   19c24:	andeq	sp, r2, fp, lsl fp
   19c28:	andeq	sp, r2, r8, ror fp
   19c2c:	andeq	sp, r2, r6, ror #23
   19c30:	andeq	sp, r2, fp, lsl ip

00019c34 <__flatcc_fb_gen_common_c_builder_header@@Base>:
   19c34:	push	{r4, r5, fp, lr}
   19c38:	add	fp, sp, #8
   19c3c:	sub	sp, sp, #8
   19c40:	mov	r5, r0
   19c44:	ldr	r0, [r0, #204]	; 0xcc
   19c48:	ldr	r1, [pc, #2196]	; 1a4e4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8b0>
   19c4c:	add	r4, r5, #102	; 0x66
   19c50:	mov	r2, r4
   19c54:	add	r1, pc, r1
   19c58:	bl	148bc <fprintf@plt>
   19c5c:	ldr	r0, [r5, #204]	; 0xcc
   19c60:	ldr	r1, [pc, #2176]	; 1a4e8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8b4>
   19c64:	mov	r2, r4
   19c68:	add	r1, pc, r1
   19c6c:	bl	148bc <fprintf@plt>
   19c70:	ldr	r3, [r5, #204]	; 0xcc
   19c74:	ldr	r0, [pc, #2160]	; 1a4ec <__flatcc_fb_gen_common_c_builder_header@@Base+0x8b8>
   19c78:	mov	r1, #81	; 0x51
   19c7c:	mov	r2, #1
   19c80:	add	r0, pc, r0
   19c84:	bl	14850 <fwrite@plt>
   19c88:	ldr	r3, [r5, #204]	; 0xcc
   19c8c:	ldr	r0, [pc, #2140]	; 1a4f0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8bc>
   19c90:	mov	r1, #53	; 0x35
   19c94:	mov	r2, #1
   19c98:	add	r0, pc, r0
   19c9c:	bl	14850 <fwrite@plt>
   19ca0:	ldr	r0, [r5, #212]	; 0xd4
   19ca4:	ldr	r0, [r0, #140]	; 0x8c
   19ca8:	cmp	r0, #0
   19cac:	beq	19cc8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x94>
   19cb0:	ldr	r3, [r5, #204]	; 0xcc
   19cb4:	ldr	r0, [pc, #2104]	; 1a4f4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8c0>
   19cb8:	mov	r1, #36	; 0x24
   19cbc:	mov	r2, #1
   19cc0:	add	r0, pc, r0
   19cc4:	bl	14850 <fwrite@plt>
   19cc8:	ldr	r3, [r5, #204]	; 0xcc
   19ccc:	ldr	r0, [pc, #2084]	; 1a4f8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8c4>
   19cd0:	mov	r1, #22
   19cd4:	mov	r2, #1
   19cd8:	add	r0, pc, r0
   19cdc:	bl	14850 <fwrite@plt>
   19ce0:	ldr	r3, [r5, #204]	; 0xcc
   19ce4:	ldr	r0, [pc, #2064]	; 1a4fc <__flatcc_fb_gen_common_c_builder_header@@Base+0x8c8>
   19ce8:	mov	r1, #35	; 0x23
   19cec:	mov	r2, #1
   19cf0:	add	r0, pc, r0
   19cf4:	bl	14850 <fwrite@plt>
   19cf8:	ldr	r3, [r5, #204]	; 0xcc
   19cfc:	ldr	r0, [pc, #2044]	; 1a500 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8cc>
   19d00:	mov	r1, #7
   19d04:	mov	r2, #1
   19d08:	add	r0, pc, r0
   19d0c:	bl	14850 <fwrite@plt>
   19d10:	ldr	r1, [pc, #2028]	; 1a504 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8d0>
   19d14:	mov	r0, r5
   19d18:	add	r1, pc, r1
   19d1c:	bl	147e4 <strcmp@plt>
   19d20:	cmp	r0, #0
   19d24:	beq	19da0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x16c>
   19d28:	ldr	r0, [r5, #204]	; 0xcc
   19d2c:	ldr	r1, [pc, #2004]	; 1a508 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8d4>
   19d30:	mov	r2, r5
   19d34:	add	r1, pc, r1
   19d38:	bl	148bc <fprintf@plt>
   19d3c:	ldr	r0, [r5, #204]	; 0xcc
   19d40:	ldr	r1, [pc, #1988]	; 1a50c <__flatcc_fb_gen_common_c_builder_header@@Base+0x8d8>
   19d44:	mov	r2, r5
   19d48:	add	r1, pc, r1
   19d4c:	bl	148bc <fprintf@plt>
   19d50:	ldr	r0, [r5, #204]	; 0xcc
   19d54:	ldr	r1, [pc, #1972]	; 1a510 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8dc>
   19d58:	mov	r2, r5
   19d5c:	add	r1, pc, r1
   19d60:	bl	148bc <fprintf@plt>
   19d64:	ldr	r0, [r5, #204]	; 0xcc
   19d68:	ldr	r1, [pc, #1956]	; 1a514 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8e0>
   19d6c:	mov	r2, r5
   19d70:	add	r1, pc, r1
   19d74:	bl	148bc <fprintf@plt>
   19d78:	ldr	r0, [r5, #204]	; 0xcc
   19d7c:	ldr	r1, [pc, #1940]	; 1a518 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8e4>
   19d80:	mov	r2, r5
   19d84:	add	r1, pc, r1
   19d88:	bl	148bc <fprintf@plt>
   19d8c:	ldr	r0, [r5, #204]	; 0xcc
   19d90:	ldr	r1, [pc, #1924]	; 1a51c <__flatcc_fb_gen_common_c_builder_header@@Base+0x8e8>
   19d94:	mov	r2, r5
   19d98:	add	r1, pc, r1
   19d9c:	bl	148bc <fprintf@plt>
   19da0:	ldr	r0, [r5, #204]	; 0xcc
   19da4:	ldr	r1, [pc, #1908]	; 1a520 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8ec>
   19da8:	mov	r2, r5
   19dac:	mov	r3, r5
   19db0:	add	r1, pc, r1
   19db4:	bl	148bc <fprintf@plt>
   19db8:	ldr	r0, [r5, #204]	; 0xcc
   19dbc:	ldr	r1, [pc, #1888]	; 1a524 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8f0>
   19dc0:	mov	r2, r5
   19dc4:	mov	r3, r5
   19dc8:	add	r1, pc, r1
   19dcc:	bl	148bc <fprintf@plt>
   19dd0:	ldr	r1, [pc, #1872]	; 1a528 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8f4>
   19dd4:	mov	r0, r5
   19dd8:	add	r1, pc, r1
   19ddc:	bl	147e4 <strcmp@plt>
   19de0:	cmp	r0, #0
   19de4:	beq	19e10 <__flatcc_fb_gen_common_c_builder_header@@Base+0x1dc>
   19de8:	ldr	r0, [r5, #204]	; 0xcc
   19dec:	ldr	r1, [pc, #1848]	; 1a52c <__flatcc_fb_gen_common_c_builder_header@@Base+0x8f8>
   19df0:	mov	r2, r5
   19df4:	add	r1, pc, r1
   19df8:	bl	148bc <fprintf@plt>
   19dfc:	ldr	r0, [r5, #204]	; 0xcc
   19e00:	ldr	r1, [pc, #1832]	; 1a530 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8fc>
   19e04:	mov	r2, r5
   19e08:	add	r1, pc, r1
   19e0c:	bl	148bc <fprintf@plt>
   19e10:	ldr	r1, [r5, #204]	; 0xcc
   19e14:	mov	r0, #10
   19e18:	bl	1491c <fputc@plt>
   19e1c:	ldr	r0, [r5, #204]	; 0xcc
   19e20:	ldr	r1, [pc, #1804]	; 1a534 <__flatcc_fb_gen_common_c_builder_header@@Base+0x900>
   19e24:	mov	r2, r5
   19e28:	add	r1, pc, r1
   19e2c:	bl	148bc <fprintf@plt>
   19e30:	ldr	r0, [r5, #204]	; 0xcc
   19e34:	ldr	r1, [pc, #1788]	; 1a538 <__flatcc_fb_gen_common_c_builder_header@@Base+0x904>
   19e38:	mov	r2, r5
   19e3c:	add	r1, pc, r1
   19e40:	bl	148bc <fprintf@plt>
   19e44:	ldr	r0, [r5, #204]	; 0xcc
   19e48:	str	r5, [sp]
   19e4c:	mov	r2, r5
   19e50:	mov	r3, r5
   19e54:	ldr	r1, [pc, #1760]	; 1a53c <__flatcc_fb_gen_common_c_builder_header@@Base+0x908>
   19e58:	add	r1, pc, r1
   19e5c:	bl	148bc <fprintf@plt>
   19e60:	ldr	r0, [r5, #204]	; 0xcc
   19e64:	ldr	r1, [pc, #1748]	; 1a540 <__flatcc_fb_gen_common_c_builder_header@@Base+0x90c>
   19e68:	mov	r2, r5
   19e6c:	add	r1, pc, r1
   19e70:	bl	148bc <fprintf@plt>
   19e74:	ldr	r0, [r5, #204]	; 0xcc
   19e78:	ldr	r1, [pc, #1732]	; 1a544 <__flatcc_fb_gen_common_c_builder_header@@Base+0x910>
   19e7c:	mov	r2, r5
   19e80:	add	r1, pc, r1
   19e84:	bl	148bc <fprintf@plt>
   19e88:	ldr	r0, [r5, #204]	; 0xcc
   19e8c:	ldr	r1, [pc, #1716]	; 1a548 <__flatcc_fb_gen_common_c_builder_header@@Base+0x914>
   19e90:	mov	r2, r5
   19e94:	add	r1, pc, r1
   19e98:	bl	148bc <fprintf@plt>
   19e9c:	ldr	r0, [r5, #204]	; 0xcc
   19ea0:	ldr	r1, [pc, #1700]	; 1a54c <__flatcc_fb_gen_common_c_builder_header@@Base+0x918>
   19ea4:	mov	r2, r5
   19ea8:	add	r1, pc, r1
   19eac:	bl	148bc <fprintf@plt>
   19eb0:	ldr	r0, [r5, #204]	; 0xcc
   19eb4:	ldr	r1, [pc, #1684]	; 1a550 <__flatcc_fb_gen_common_c_builder_header@@Base+0x91c>
   19eb8:	mov	r2, r5
   19ebc:	mov	r3, r5
   19ec0:	add	r1, pc, r1
   19ec4:	bl	148bc <fprintf@plt>
   19ec8:	ldr	r0, [r5, #204]	; 0xcc
   19ecc:	str	r5, [sp]
   19ed0:	mov	r2, r5
   19ed4:	mov	r3, r5
   19ed8:	ldr	r1, [pc, #1652]	; 1a554 <__flatcc_fb_gen_common_c_builder_header@@Base+0x920>
   19edc:	add	r1, pc, r1
   19ee0:	bl	148bc <fprintf@plt>
   19ee4:	ldr	r0, [r5, #204]	; 0xcc
   19ee8:	ldr	r1, [pc, #1640]	; 1a558 <__flatcc_fb_gen_common_c_builder_header@@Base+0x924>
   19eec:	mov	r2, r5
   19ef0:	add	r1, pc, r1
   19ef4:	bl	148bc <fprintf@plt>
   19ef8:	ldr	r0, [r5, #204]	; 0xcc
   19efc:	ldr	r1, [pc, #1624]	; 1a55c <__flatcc_fb_gen_common_c_builder_header@@Base+0x928>
   19f00:	mov	r2, r5
   19f04:	add	r1, pc, r1
   19f08:	bl	148bc <fprintf@plt>
   19f0c:	ldr	r0, [r5, #204]	; 0xcc
   19f10:	ldr	r1, [pc, #1608]	; 1a560 <__flatcc_fb_gen_common_c_builder_header@@Base+0x92c>
   19f14:	mov	r2, r5
   19f18:	add	r1, pc, r1
   19f1c:	bl	148bc <fprintf@plt>
   19f20:	ldr	r0, [r5, #204]	; 0xcc
   19f24:	ldr	r1, [pc, #1592]	; 1a564 <__flatcc_fb_gen_common_c_builder_header@@Base+0x930>
   19f28:	mov	r2, r5
   19f2c:	mov	r3, r5
   19f30:	add	r1, pc, r1
   19f34:	bl	148bc <fprintf@plt>
   19f38:	ldr	r0, [r5, #204]	; 0xcc
   19f3c:	ldr	r1, [pc, #1572]	; 1a568 <__flatcc_fb_gen_common_c_builder_header@@Base+0x934>
   19f40:	mov	r2, r5
   19f44:	add	r1, pc, r1
   19f48:	bl	148bc <fprintf@plt>
   19f4c:	ldr	r0, [r5, #204]	; 0xcc
   19f50:	str	r5, [sp]
   19f54:	mov	r2, r5
   19f58:	mov	r3, r5
   19f5c:	ldr	r1, [pc, #1544]	; 1a56c <__flatcc_fb_gen_common_c_builder_header@@Base+0x938>
   19f60:	add	r1, pc, r1
   19f64:	bl	148bc <fprintf@plt>
   19f68:	ldr	r0, [r5, #204]	; 0xcc
   19f6c:	str	r5, [sp]
   19f70:	str	r5, [sp, #4]
   19f74:	mov	r2, r5
   19f78:	mov	r3, r5
   19f7c:	ldr	r1, [pc, #1516]	; 1a570 <__flatcc_fb_gen_common_c_builder_header@@Base+0x93c>
   19f80:	add	r1, pc, r1
   19f84:	bl	148bc <fprintf@plt>
   19f88:	ldr	r0, [r5, #204]	; 0xcc
   19f8c:	ldr	r1, [pc, #1504]	; 1a574 <__flatcc_fb_gen_common_c_builder_header@@Base+0x940>
   19f90:	mov	r2, r5
   19f94:	mov	r3, r5
   19f98:	add	r1, pc, r1
   19f9c:	bl	148bc <fprintf@plt>
   19fa0:	ldr	r0, [r5, #204]	; 0xcc
   19fa4:	str	r5, [sp]
   19fa8:	str	r5, [sp, #4]
   19fac:	mov	r2, r5
   19fb0:	mov	r3, r5
   19fb4:	ldr	r1, [pc, #1468]	; 1a578 <__flatcc_fb_gen_common_c_builder_header@@Base+0x944>
   19fb8:	add	r1, pc, r1
   19fbc:	bl	148bc <fprintf@plt>
   19fc0:	ldr	r0, [r5, #204]	; 0xcc
   19fc4:	ldr	r1, [pc, #1456]	; 1a57c <__flatcc_fb_gen_common_c_builder_header@@Base+0x948>
   19fc8:	mov	r2, r5
   19fcc:	mov	r3, r5
   19fd0:	add	r1, pc, r1
   19fd4:	bl	148bc <fprintf@plt>
   19fd8:	ldr	r0, [r5, #204]	; 0xcc
   19fdc:	ldr	r1, [pc, #1436]	; 1a580 <__flatcc_fb_gen_common_c_builder_header@@Base+0x94c>
   19fe0:	mov	r2, r5
   19fe4:	add	r1, pc, r1
   19fe8:	bl	148bc <fprintf@plt>
   19fec:	ldr	r0, [r5, #204]	; 0xcc
   19ff0:	ldr	r1, [pc, #1420]	; 1a584 <__flatcc_fb_gen_common_c_builder_header@@Base+0x950>
   19ff4:	mov	r2, r5
   19ff8:	add	r1, pc, r1
   19ffc:	bl	148bc <fprintf@plt>
   1a000:	ldr	r0, [r5, #204]	; 0xcc
   1a004:	ldr	r1, [pc, #1404]	; 1a588 <__flatcc_fb_gen_common_c_builder_header@@Base+0x954>
   1a008:	mov	r2, r5
   1a00c:	add	r1, pc, r1
   1a010:	bl	148bc <fprintf@plt>
   1a014:	ldr	r0, [r5, #204]	; 0xcc
   1a018:	ldr	r1, [pc, #1388]	; 1a58c <__flatcc_fb_gen_common_c_builder_header@@Base+0x958>
   1a01c:	mov	r2, r5
   1a020:	add	r1, pc, r1
   1a024:	bl	148bc <fprintf@plt>
   1a028:	ldr	r0, [r5, #204]	; 0xcc
   1a02c:	ldr	r1, [pc, #1372]	; 1a590 <__flatcc_fb_gen_common_c_builder_header@@Base+0x95c>
   1a030:	mov	r2, r5
   1a034:	mov	r3, r5
   1a038:	add	r1, pc, r1
   1a03c:	bl	148bc <fprintf@plt>
   1a040:	ldr	r0, [r5, #204]	; 0xcc
   1a044:	ldr	r1, [pc, #1352]	; 1a594 <__flatcc_fb_gen_common_c_builder_header@@Base+0x960>
   1a048:	mov	r2, r5
   1a04c:	add	r1, pc, r1
   1a050:	bl	148bc <fprintf@plt>
   1a054:	ldr	r0, [r5, #204]	; 0xcc
   1a058:	ldr	r1, [pc, #1336]	; 1a598 <__flatcc_fb_gen_common_c_builder_header@@Base+0x964>
   1a05c:	mov	r2, r5
   1a060:	add	r1, pc, r1
   1a064:	bl	148bc <fprintf@plt>
   1a068:	ldr	r0, [r5, #204]	; 0xcc
   1a06c:	ldr	r1, [pc, #1320]	; 1a59c <__flatcc_fb_gen_common_c_builder_header@@Base+0x968>
   1a070:	mov	r2, r5
   1a074:	mov	r3, r5
   1a078:	add	r1, pc, r1
   1a07c:	bl	148bc <fprintf@plt>
   1a080:	ldr	r0, [r5, #204]	; 0xcc
   1a084:	ldr	r1, [pc, #1300]	; 1a5a0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x96c>
   1a088:	mov	r2, r5
   1a08c:	mov	r3, r5
   1a090:	add	r1, pc, r1
   1a094:	bl	148bc <fprintf@plt>
   1a098:	ldr	r0, [r5, #204]	; 0xcc
   1a09c:	ldr	r1, [pc, #1280]	; 1a5a4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x970>
   1a0a0:	mov	r2, r5
   1a0a4:	mov	r3, r5
   1a0a8:	add	r1, pc, r1
   1a0ac:	bl	148bc <fprintf@plt>
   1a0b0:	ldr	r0, [r5, #204]	; 0xcc
   1a0b4:	ldr	r1, [pc, #1260]	; 1a5a8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x974>
   1a0b8:	mov	r2, r5
   1a0bc:	mov	r3, r5
   1a0c0:	add	r1, pc, r1
   1a0c4:	bl	148bc <fprintf@plt>
   1a0c8:	ldr	r0, [r5, #204]	; 0xcc
   1a0cc:	str	r5, [sp]
   1a0d0:	mov	r2, r5
   1a0d4:	mov	r3, r5
   1a0d8:	ldr	r1, [pc, #1228]	; 1a5ac <__flatcc_fb_gen_common_c_builder_header@@Base+0x978>
   1a0dc:	add	r1, pc, r1
   1a0e0:	bl	148bc <fprintf@plt>
   1a0e4:	ldr	r0, [r5, #204]	; 0xcc
   1a0e8:	ldr	r1, [pc, #1216]	; 1a5b0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x97c>
   1a0ec:	mov	r2, r5
   1a0f0:	mov	r3, r5
   1a0f4:	add	r1, pc, r1
   1a0f8:	bl	148bc <fprintf@plt>
   1a0fc:	ldr	r0, [r5, #204]	; 0xcc
   1a100:	ldr	r1, [pc, #1196]	; 1a5b4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x980>
   1a104:	mov	r2, r5
   1a108:	add	r1, pc, r1
   1a10c:	bl	148bc <fprintf@plt>
   1a110:	ldr	r0, [r5, #204]	; 0xcc
   1a114:	ldr	r1, [pc, #1180]	; 1a5b8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x984>
   1a118:	mov	r2, r5
   1a11c:	add	r1, pc, r1
   1a120:	bl	148bc <fprintf@plt>
   1a124:	ldr	r0, [r5, #204]	; 0xcc
   1a128:	ldr	r1, [pc, #1164]	; 1a5bc <__flatcc_fb_gen_common_c_builder_header@@Base+0x988>
   1a12c:	mov	r2, r5
   1a130:	add	r1, pc, r1
   1a134:	bl	148bc <fprintf@plt>
   1a138:	ldr	r0, [r5, #204]	; 0xcc
   1a13c:	str	r5, [sp]
   1a140:	mov	r2, r5
   1a144:	mov	r3, r5
   1a148:	ldr	r1, [pc, #1136]	; 1a5c0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x98c>
   1a14c:	add	r1, pc, r1
   1a150:	bl	148bc <fprintf@plt>
   1a154:	ldr	r0, [r5, #204]	; 0xcc
   1a158:	ldr	r1, [pc, #1124]	; 1a5c4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x990>
   1a15c:	mov	r2, r5
   1a160:	add	r1, pc, r1
   1a164:	bl	148bc <fprintf@plt>
   1a168:	ldr	r0, [r5, #204]	; 0xcc
   1a16c:	ldr	r1, [pc, #1108]	; 1a5c8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x994>
   1a170:	mov	r2, r5
   1a174:	add	r1, pc, r1
   1a178:	bl	148bc <fprintf@plt>
   1a17c:	ldr	r0, [r5, #204]	; 0xcc
   1a180:	ldr	r1, [pc, #1092]	; 1a5cc <__flatcc_fb_gen_common_c_builder_header@@Base+0x998>
   1a184:	mov	r2, r5
   1a188:	add	r1, pc, r1
   1a18c:	bl	148bc <fprintf@plt>
   1a190:	ldr	r0, [r5, #204]	; 0xcc
   1a194:	ldr	r1, [pc, #1076]	; 1a5d0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x99c>
   1a198:	mov	r2, r5
   1a19c:	add	r1, pc, r1
   1a1a0:	bl	148bc <fprintf@plt>
   1a1a4:	ldr	r0, [r5, #204]	; 0xcc
   1a1a8:	ldr	r1, [pc, #1060]	; 1a5d4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9a0>
   1a1ac:	mov	r2, r5
   1a1b0:	mov	r3, r5
   1a1b4:	add	r1, pc, r1
   1a1b8:	bl	148bc <fprintf@plt>
   1a1bc:	ldr	r0, [r5, #204]	; 0xcc
   1a1c0:	ldr	r1, [pc, #1040]	; 1a5d8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9a4>
   1a1c4:	mov	r2, r5
   1a1c8:	add	r1, pc, r1
   1a1cc:	bl	148bc <fprintf@plt>
   1a1d0:	ldr	r0, [r5, #204]	; 0xcc
   1a1d4:	ldr	r1, [pc, #1024]	; 1a5dc <__flatcc_fb_gen_common_c_builder_header@@Base+0x9a8>
   1a1d8:	mov	r2, r5
   1a1dc:	add	r1, pc, r1
   1a1e0:	bl	148bc <fprintf@plt>
   1a1e4:	ldr	r0, [r5, #204]	; 0xcc
   1a1e8:	ldr	r1, [pc, #1008]	; 1a5e0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9ac>
   1a1ec:	mov	r2, r5
   1a1f0:	add	r1, pc, r1
   1a1f4:	bl	148bc <fprintf@plt>
   1a1f8:	ldr	r0, [r5, #204]	; 0xcc
   1a1fc:	ldr	r1, [pc, #992]	; 1a5e4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9b0>
   1a200:	mov	r2, r5
   1a204:	add	r1, pc, r1
   1a208:	bl	148bc <fprintf@plt>
   1a20c:	ldr	r0, [r5, #204]	; 0xcc
   1a210:	ldr	r1, [pc, #976]	; 1a5e8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9b4>
   1a214:	mov	r2, r5
   1a218:	add	r1, pc, r1
   1a21c:	bl	148bc <fprintf@plt>
   1a220:	ldr	r0, [r5, #204]	; 0xcc
   1a224:	ldr	r1, [pc, #960]	; 1a5ec <__flatcc_fb_gen_common_c_builder_header@@Base+0x9b8>
   1a228:	mov	r2, r5
   1a22c:	add	r1, pc, r1
   1a230:	bl	148bc <fprintf@plt>
   1a234:	ldr	r0, [r5, #204]	; 0xcc
   1a238:	ldr	r1, [pc, #944]	; 1a5f0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9bc>
   1a23c:	mov	r2, r5
   1a240:	add	r1, pc, r1
   1a244:	bl	148bc <fprintf@plt>
   1a248:	ldr	r0, [r5, #204]	; 0xcc
   1a24c:	ldr	r1, [pc, #928]	; 1a5f4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9c0>
   1a250:	mov	r2, r5
   1a254:	add	r1, pc, r1
   1a258:	bl	148bc <fprintf@plt>
   1a25c:	ldr	r0, [r5, #204]	; 0xcc
   1a260:	ldr	r1, [pc, #912]	; 1a5f8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9c4>
   1a264:	mov	r2, r5
   1a268:	add	r1, pc, r1
   1a26c:	bl	148bc <fprintf@plt>
   1a270:	ldr	r0, [r5, #204]	; 0xcc
   1a274:	ldr	r1, [pc, #896]	; 1a5fc <__flatcc_fb_gen_common_c_builder_header@@Base+0x9c8>
   1a278:	mov	r2, r5
   1a27c:	add	r1, pc, r1
   1a280:	bl	148bc <fprintf@plt>
   1a284:	ldr	r0, [r5, #204]	; 0xcc
   1a288:	ldr	r1, [pc, #880]	; 1a600 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9cc>
   1a28c:	mov	r2, r5
   1a290:	add	r1, pc, r1
   1a294:	bl	148bc <fprintf@plt>
   1a298:	ldr	r0, [r5, #204]	; 0xcc
   1a29c:	ldr	r1, [pc, #864]	; 1a604 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9d0>
   1a2a0:	mov	r2, r5
   1a2a4:	add	r1, pc, r1
   1a2a8:	bl	148bc <fprintf@plt>
   1a2ac:	ldr	r0, [r5, #204]	; 0xcc
   1a2b0:	ldr	r1, [pc, #848]	; 1a608 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9d4>
   1a2b4:	mov	r2, r5
   1a2b8:	add	r1, pc, r1
   1a2bc:	bl	148bc <fprintf@plt>
   1a2c0:	ldr	r0, [r5, #204]	; 0xcc
   1a2c4:	ldr	r1, [pc, #832]	; 1a60c <__flatcc_fb_gen_common_c_builder_header@@Base+0x9d8>
   1a2c8:	mov	r2, r5
   1a2cc:	add	r1, pc, r1
   1a2d0:	bl	148bc <fprintf@plt>
   1a2d4:	ldr	r0, [r5, #204]	; 0xcc
   1a2d8:	ldr	r1, [pc, #816]	; 1a610 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9dc>
   1a2dc:	mov	r2, r5
   1a2e0:	add	r1, pc, r1
   1a2e4:	bl	148bc <fprintf@plt>
   1a2e8:	ldr	r0, [r5, #204]	; 0xcc
   1a2ec:	ldr	r1, [pc, #800]	; 1a614 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9e0>
   1a2f0:	mov	r2, r5
   1a2f4:	add	r1, pc, r1
   1a2f8:	bl	148bc <fprintf@plt>
   1a2fc:	ldr	r0, [r5, #204]	; 0xcc
   1a300:	ldr	r1, [pc, #784]	; 1a618 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9e4>
   1a304:	mov	r2, r5
   1a308:	add	r1, pc, r1
   1a30c:	bl	148bc <fprintf@plt>
   1a310:	ldr	r1, [r5, #204]	; 0xcc
   1a314:	mov	r0, #10
   1a318:	bl	1491c <fputc@plt>
   1a31c:	ldr	r0, [r5, #204]	; 0xcc
   1a320:	str	r5, [sp]
   1a324:	mov	r2, r5
   1a328:	mov	r3, r5
   1a32c:	ldr	r1, [pc, #744]	; 1a61c <__flatcc_fb_gen_common_c_builder_header@@Base+0x9e8>
   1a330:	add	r1, pc, r1
   1a334:	bl	148bc <fprintf@plt>
   1a338:	ldr	r0, [r5, #204]	; 0xcc
   1a33c:	str	r5, [sp]
   1a340:	mov	r2, r5
   1a344:	mov	r3, r5
   1a348:	ldr	r1, [pc, #720]	; 1a620 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9ec>
   1a34c:	add	r1, pc, r1
   1a350:	bl	148bc <fprintf@plt>
   1a354:	ldr	r0, [r5, #204]	; 0xcc
   1a358:	str	r5, [sp]
   1a35c:	str	r5, [sp, #4]
   1a360:	mov	r2, r5
   1a364:	mov	r3, r5
   1a368:	ldr	r1, [pc, #692]	; 1a624 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9f0>
   1a36c:	add	r1, pc, r1
   1a370:	bl	148bc <fprintf@plt>
   1a374:	ldr	r0, [r5, #204]	; 0xcc
   1a378:	str	r5, [sp]
   1a37c:	mov	r2, r5
   1a380:	mov	r3, r5
   1a384:	ldr	r1, [pc, #668]	; 1a628 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9f4>
   1a388:	add	r1, pc, r1
   1a38c:	bl	148bc <fprintf@plt>
   1a390:	ldr	r0, [r5, #204]	; 0xcc
   1a394:	str	r5, [sp]
   1a398:	mov	r2, r5
   1a39c:	mov	r3, r5
   1a3a0:	ldr	r1, [pc, #644]	; 1a62c <__flatcc_fb_gen_common_c_builder_header@@Base+0x9f8>
   1a3a4:	add	r1, pc, r1
   1a3a8:	bl	148bc <fprintf@plt>
   1a3ac:	ldr	r0, [r5, #204]	; 0xcc
   1a3b0:	str	r5, [sp]
   1a3b4:	mov	r2, r5
   1a3b8:	mov	r3, r5
   1a3bc:	ldr	r1, [pc, #620]	; 1a630 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9fc>
   1a3c0:	add	r1, pc, r1
   1a3c4:	bl	148bc <fprintf@plt>
   1a3c8:	ldr	r0, [r5, #204]	; 0xcc
   1a3cc:	str	r5, [sp]
   1a3d0:	mov	r2, r5
   1a3d4:	mov	r3, r5
   1a3d8:	ldr	r1, [pc, #596]	; 1a634 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa00>
   1a3dc:	add	r1, pc, r1
   1a3e0:	bl	148bc <fprintf@plt>
   1a3e4:	ldr	r0, [r5, #204]	; 0xcc
   1a3e8:	str	r5, [sp]
   1a3ec:	mov	r2, r5
   1a3f0:	mov	r3, r5
   1a3f4:	ldr	r1, [pc, #572]	; 1a638 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa04>
   1a3f8:	add	r1, pc, r1
   1a3fc:	bl	148bc <fprintf@plt>
   1a400:	ldr	r0, [r5, #204]	; 0xcc
   1a404:	str	r5, [sp]
   1a408:	mov	r2, r5
   1a40c:	mov	r3, r5
   1a410:	ldr	r1, [pc, #548]	; 1a63c <__flatcc_fb_gen_common_c_builder_header@@Base+0xa08>
   1a414:	add	r1, pc, r1
   1a418:	bl	148bc <fprintf@plt>
   1a41c:	ldr	r0, [r5, #204]	; 0xcc
   1a420:	str	r5, [sp]
   1a424:	mov	r2, r5
   1a428:	mov	r3, r5
   1a42c:	ldr	r1, [pc, #524]	; 1a640 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa0c>
   1a430:	add	r1, pc, r1
   1a434:	bl	148bc <fprintf@plt>
   1a438:	ldr	r0, [r5, #204]	; 0xcc
   1a43c:	str	r5, [sp]
   1a440:	mov	r2, r5
   1a444:	mov	r3, r5
   1a448:	ldr	r1, [pc, #500]	; 1a644 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa10>
   1a44c:	add	r1, pc, r1
   1a450:	bl	148bc <fprintf@plt>
   1a454:	ldr	r1, [r5, #204]	; 0xcc
   1a458:	mov	r0, #10
   1a45c:	bl	1491c <fputc@plt>
   1a460:	ldr	r0, [r5, #204]	; 0xcc
   1a464:	ldr	r1, [pc, #476]	; 1a648 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa14>
   1a468:	mov	r2, r5
   1a46c:	mov	r3, r5
   1a470:	add	r1, pc, r1
   1a474:	bl	148bc <fprintf@plt>
   1a478:	ldr	r1, [r5, #204]	; 0xcc
   1a47c:	mov	r0, #10
   1a480:	bl	1491c <fputc@plt>
   1a484:	ldr	r0, [r5, #204]	; 0xcc
   1a488:	ldr	r1, [pc, #444]	; 1a64c <__flatcc_fb_gen_common_c_builder_header@@Base+0xa18>
   1a48c:	mov	r2, r5
   1a490:	mov	r3, r5
   1a494:	add	r1, pc, r1
   1a498:	bl	148bc <fprintf@plt>
   1a49c:	ldr	r0, [r5, #212]	; 0xd4
   1a4a0:	ldr	r0, [r0, #140]	; 0x8c
   1a4a4:	cmp	r0, #0
   1a4a8:	beq	1a4c4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x890>
   1a4ac:	ldr	r3, [r5, #204]	; 0xcc
   1a4b0:	ldr	r0, [pc, #408]	; 1a650 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa1c>
   1a4b4:	mov	r1, #36	; 0x24
   1a4b8:	mov	r2, #1
   1a4bc:	add	r0, pc, r0
   1a4c0:	bl	14850 <fwrite@plt>
   1a4c4:	ldr	r0, [r5, #204]	; 0xcc
   1a4c8:	ldr	r1, [pc, #388]	; 1a654 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa20>
   1a4cc:	mov	r2, r4
   1a4d0:	add	r1, pc, r1
   1a4d4:	bl	148bc <fprintf@plt>
   1a4d8:	mov	r0, #0
   1a4dc:	sub	sp, fp, #8
   1a4e0:	pop	{r4, r5, fp, pc}
   1a4e4:	andeq	sp, r2, sl, lsr ip
   1a4e8:	andeq	sp, r2, r3, asr #24
   1a4ec:	ldrdeq	r5, [r2], -sp
   1a4f0:	andeq	sp, r2, r0, lsr ip
   1a4f4:	muleq	r2, r0, r9
   1a4f8:	andeq	sp, r2, r6, lsr #24
   1a4fc:	andeq	sp, r2, r5, lsr #24
   1a500:	andeq	fp, r2, r4, ror r9
   1a504:	andeq	sp, r2, r1, lsr #24
   1a508:	andeq	sp, r2, r5, lsl ip
   1a50c:	andeq	sp, r2, r8, lsr #24
   1a510:	andeq	sp, r2, fp, lsr ip
   1a514:	andeq	sp, r2, r2, asr ip
   1a518:	andeq	sp, r2, r1, ror ip
   1a51c:	muleq	r2, r8, ip
   1a520:	ldrdeq	sp, [r2], -r8
   1a524:	ldrdeq	sp, [r2], -fp
   1a528:	andeq	r5, r2, r7, asr #17
   1a52c:	ldrdeq	sp, [r2], -r6
   1a530:	strdeq	sp, [r2], -r3
   1a534:	strdeq	sp, [r2], -r7
   1a538:	andeq	lr, r2, r6, asr r0
   1a53c:	andeq	lr, r2, r3, lsl #14
   1a540:	andeq	lr, r2, r8, ror r7
   1a544:	andeq	pc, r2, pc, lsl r2	; <UNPREDICTABLE>
   1a548:	andeq	pc, r2, r6, ror #11
   1a54c:	andeq	pc, r2, r8, lsl #24
   1a550:	andeq	r0, r3, ip, rrx
   1a554:	andeq	r0, r3, r3, asr #15
   1a558:	strdeq	r0, [r3], -r7
   1a55c:	andeq	r1, r3, r1, ror #2
   1a560:	ldrdeq	r1, [r3], -fp
   1a564:	andeq	r1, r3, sp, lsl r6
   1a568:	andeq	r1, r3, lr, lsl #16
   1a56c:	andeq	r1, r3, fp, asr fp
   1a570:	andeq	r2, r3, r7, lsr r0
   1a574:	andeq	r2, r3, r8, lsr #2
   1a578:	andeq	r2, r3, r0, ror r4
   1a57c:	andeq	r2, r3, r6, asr sl
   1a580:	strdeq	r2, [r3], -r5
   1a584:	andeq	r2, r3, r6, lsl #28
   1a588:			; <UNDEFINED> instruction: 0x000331b2
   1a58c:	andeq	r3, r3, fp, asr r4
   1a590:	andeq	r3, r3, r7, asr r8
   1a594:	andeq	r3, r3, pc, lsr #18
   1a598:	andeq	r3, r3, ip, ror fp
   1a59c:	ldrdeq	r3, [r3], -fp
   1a5a0:	andeq	r4, r3, r2, lsl r3
   1a5a4:	muleq	r3, r2, r5
   1a5a8:	andeq	r4, r3, r6, ror r9
   1a5ac:	andeq	r4, r3, r6, ror #20
   1a5b0:	ldrdeq	r4, [r3], -r9
   1a5b4:	andeq	r4, r3, r1, lsl lr
   1a5b8:	andeq	r5, r3, r5, lsl #1
   1a5bc:	strdeq	r5, [r3], -pc	; <UNPREDICTABLE>
   1a5c0:	muleq	r3, r9, r8
   1a5c4:	andeq	r5, r3, r4, lsl r9
   1a5c8:	andeq	r5, r3, ip, lsr #18
   1a5cc:	andeq	r5, r3, sl, lsr r9
   1a5d0:	andeq	r5, r3, r0, asr r9
   1a5d4:	andeq	r5, r3, r9, asr r9
   1a5d8:	andeq	r5, r3, r1, ror r9
   1a5dc:	andeq	r5, r3, lr, ror r9
   1a5e0:	muleq	r3, r8, r9
   1a5e4:	andeq	r5, r3, r7, lsr #19
   1a5e8:	andeq	r5, r3, r1, asr #19
   1a5ec:	ldrdeq	r5, [r3], -r0
   1a5f0:	andeq	r5, r3, sl, ror #19
   1a5f4:	strdeq	r5, [r3], -r9
   1a5f8:	andeq	r5, r3, r1, lsl sl
   1a5fc:	andeq	r5, r3, pc, lsl sl
   1a600:	andeq	r5, r3, r7, lsr sl
   1a604:	andeq	r5, r3, r5, asr #20
   1a608:	andeq	r5, r3, sp, asr sl
   1a60c:	andeq	r5, r3, fp, ror #20
   1a610:	andeq	r5, r3, r1, lsl #21
   1a614:	andeq	r5, r3, pc, lsl #21
   1a618:	andeq	r5, r3, r7, lsr #21
   1a61c:	andeq	r5, r3, r2, lsr #21
   1a620:	andeq	r5, r3, lr, lsr #21
   1a624:			; <UNDEFINED> instruction: 0x00035ab4
   1a628:	andeq	r5, r3, r0, asr #21
   1a62c:	andeq	r5, r3, lr, asr #21
   1a630:	ldrdeq	r5, [r3], -ip
   1a634:	andeq	r5, r3, sl, ror #21
   1a638:	strdeq	r5, [r3], -r6
   1a63c:	andeq	r5, r3, r2, lsl #22
   1a640:	andeq	r5, r3, lr, lsl #22
   1a644:	andeq	r5, r3, r8, lsl fp
   1a648:	andeq	r5, r3, ip, lsl fp
   1a64c:	andeq	r5, r3, lr, lsl #22
   1a650:	andeq	sl, r2, lr, ror pc
   1a654:	andeq	r5, r3, r8, ror #21

0001a658 <__flatcc_fb_gen_c_builder@@Base>:
   1a658:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a65c:	add	fp, sp, #28
   1a660:	sub	sp, sp, #620	; 0x26c
   1a664:	mov	r4, r0
   1a668:	mov	sl, r0
   1a66c:	ldr	r1, [r4, #208]	; 0xd0
   1a670:	ldr	r0, [sl, #204]!	; 0xcc
   1a674:	ldr	r2, [r1, #164]	; 0xa4
   1a678:	ldr	r1, [pc, #4080]	; 1b670 <__flatcc_fb_gen_c_builder@@Base+0x1018>
   1a67c:	add	r1, pc, r1
   1a680:	mov	r3, r2
   1a684:	bl	148bc <fprintf@plt>
   1a688:	ldr	r3, [sl]
   1a68c:	ldr	r0, [pc, #4064]	; 1b674 <__flatcc_fb_gen_c_builder@@Base+0x101c>
   1a690:	mov	r1, #81	; 0x51
   1a694:	mov	r2, #1
   1a698:	add	r0, pc, r0
   1a69c:	bl	14850 <fwrite@plt>
   1a6a0:	ldr	r1, [r4, #208]	; 0xd0
   1a6a4:	ldr	r0, [sl]
   1a6a8:	ldr	r2, [r1, #164]	; 0xa4
   1a6ac:	ldr	r1, [pc, #4036]	; 1b678 <__flatcc_fb_gen_c_builder@@Base+0x1020>
   1a6b0:	add	r1, pc, r1
   1a6b4:	bl	148bc <fprintf@plt>
   1a6b8:	ldr	r1, [r4, #208]	; 0xd0
   1a6bc:	ldr	r0, [sl]
   1a6c0:	ldr	r2, [r1, #160]	; 0xa0
   1a6c4:	ldr	r1, [pc, #4016]	; 1b67c <__flatcc_fb_gen_c_builder@@Base+0x1024>
   1a6c8:	add	r1, pc, r1
   1a6cc:	bl	148bc <fprintf@plt>
   1a6d0:	ldr	r3, [sl]
   1a6d4:	ldr	r5, [pc, #4004]	; 1b680 <__flatcc_fb_gen_c_builder@@Base+0x1028>
   1a6d8:	mov	r1, #7
   1a6dc:	mov	r2, #1
   1a6e0:	add	r5, pc, r5
   1a6e4:	mov	r0, r5
   1a6e8:	bl	14850 <fwrite@plt>
   1a6ec:	ldr	r0, [sl]
   1a6f0:	ldr	r1, [pc, #3980]	; 1b684 <__flatcc_fb_gen_c_builder@@Base+0x102c>
   1a6f4:	add	r2, r4, #102	; 0x66
   1a6f8:	add	r1, pc, r1
   1a6fc:	bl	148bc <fprintf@plt>
   1a700:	ldr	r0, [sl]
   1a704:	ldr	r1, [pc, #3964]	; 1b688 <__flatcc_fb_gen_c_builder@@Base+0x1030>
   1a708:	mov	r2, r4
   1a70c:	add	r1, pc, r1
   1a710:	bl	148bc <fprintf@plt>
   1a714:	ldr	r3, [sl]
   1a718:	mov	r0, r5
   1a71c:	mov	r1, #7
   1a720:	mov	r2, #1
   1a724:	bl	14850 <fwrite@plt>
   1a728:	ldr	r1, [pc, #3932]	; 1b68c <__flatcc_fb_gen_c_builder@@Base+0x1034>
   1a72c:	ldr	r2, [pc, #3932]	; 1b690 <__flatcc_fb_gen_c_builder@@Base+0x1038>
   1a730:	mov	r0, r4
   1a734:	add	r1, pc, r1
   1a738:	add	r2, pc, r2
   1a73c:	bl	159d4 <__flatcc_fb_gen_c_includes@@Base>
   1a740:	ldr	r0, [r4, #212]	; 0xd4
   1a744:	ldr	r0, [r0, #140]	; 0x8c
   1a748:	cmp	r0, #0
   1a74c:	beq	1a768 <__flatcc_fb_gen_c_builder@@Base+0x110>
   1a750:	ldr	r3, [sl]
   1a754:	ldr	r0, [pc, #4068]	; 1b740 <__flatcc_fb_gen_c_builder@@Base+0x10e8>
   1a758:	mov	r1, #36	; 0x24
   1a75c:	mov	r2, #1
   1a760:	add	r0, pc, r0
   1a764:	bl	14850 <fwrite@plt>
   1a768:	ldr	r1, [r4, #208]	; 0xd0
   1a76c:	ldr	r0, [r4, #204]	; 0xcc
   1a770:	ldrh	r2, [r1, #16]
   1a774:	cmp	r2, #2
   1a778:	bne	1a794 <__flatcc_fb_gen_c_builder@@Base+0x13c>
   1a77c:	ldrd	r2, [r1, #8]
   1a780:	str	r3, [sp]
   1a784:	str	r2, [sp, #4]
   1a788:	ldr	r1, [pc, #4092]	; 1b78c <__flatcc_fb_gen_c_builder@@Base+0x1134>
   1a78c:	add	r1, pc, r1
   1a790:	b	1a79c <__flatcc_fb_gen_c_builder@@Base+0x144>
   1a794:	ldr	r1, [pc, #4084]	; 1b790 <__flatcc_fb_gen_c_builder@@Base+0x1138>
   1a798:	add	r1, pc, r1
   1a79c:	mov	r2, r4
   1a7a0:	mov	r3, r4
   1a7a4:	bl	148bc <fprintf@plt>
   1a7a8:	ldr	r1, [r4, #208]	; 0xd0
   1a7ac:	ldr	r0, [r4, #204]	; 0xcc
   1a7b0:	ldrh	r2, [r1, #32]
   1a7b4:	cmp	r2, #2
   1a7b8:	bne	1a7d4 <__flatcc_fb_gen_c_builder@@Base+0x17c>
   1a7bc:	ldrd	r2, [r1, #24]
   1a7c0:	str	r3, [sp]
   1a7c4:	str	r2, [sp, #4]
   1a7c8:	ldr	r1, [pc, #4056]	; 1b7a8 <__flatcc_fb_gen_c_builder@@Base+0x1150>
   1a7cc:	add	r1, pc, r1
   1a7d0:	b	1a7e8 <__flatcc_fb_gen_c_builder@@Base+0x190>
   1a7d4:	ldr	r1, [r4, #212]	; 0xd4
   1a7d8:	ldr	r1, [r1, #104]	; 0x68
   1a7dc:	str	r1, [sp]
   1a7e0:	ldr	r1, [pc, #4036]	; 1b7ac <__flatcc_fb_gen_c_builder@@Base+0x1154>
   1a7e4:	add	r1, pc, r1
   1a7e8:	mov	r2, r4
   1a7ec:	mov	r3, r4
   1a7f0:	bl	148bc <fprintf@plt>
   1a7f4:	ldr	r1, [r4, #204]	; 0xcc
   1a7f8:	mov	r0, #10
   1a7fc:	bl	1491c <fputc@plt>
   1a800:	sub	r5, fp, #256	; 0x100
   1a804:	mov	r1, #0
   1a808:	mov	r2, #220	; 0xdc
   1a80c:	mov	r7, #0
   1a810:	mov	r0, r5
   1a814:	bl	148d4 <memset@plt>
   1a818:	ldr	r0, [r4, #208]	; 0xd0
   1a81c:	ldr	r6, [r0, #40]	; 0x28
   1a820:	cmp	r6, #0
   1a824:	beq	1a8b4 <__flatcc_fb_gen_c_builder@@Base+0x25c>
   1a828:	ldr	r8, [pc, #4088]	; 1b828 <__flatcc_fb_gen_c_builder@@Base+0x11d0>
   1a82c:	ldr	r9, [pc, #4088]	; 1b82c <__flatcc_fb_gen_c_builder@@Base+0x11d4>
   1a830:	add	r8, pc, r8
   1a834:	add	r9, pc, r9
   1a838:	b	1a848 <__flatcc_fb_gen_c_builder@@Base+0x1f0>
   1a83c:	ldr	r6, [r6]
   1a840:	cmp	r6, #0
   1a844:	beq	1a8a0 <__flatcc_fb_gen_c_builder@@Base+0x248>
   1a848:	ldrh	r0, [r6, #8]
   1a84c:	cmp	r0, #3
   1a850:	bne	1a83c <__flatcc_fb_gen_c_builder@@Base+0x1e4>
   1a854:	ldr	r0, [r6, #12]
   1a858:	mov	r1, r6
   1a85c:	mov	r2, r5
   1a860:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   1a864:	ldr	r0, [r4, #204]	; 0xcc
   1a868:	mov	r1, r8
   1a86c:	mov	r2, r5
   1a870:	mov	r3, r5
   1a874:	str	r5, [sp]
   1a878:	bl	148bc <fprintf@plt>
   1a87c:	ldr	r0, [r4, #204]	; 0xcc
   1a880:	mov	r1, r9
   1a884:	mov	r2, r4
   1a888:	mov	r3, r4
   1a88c:	str	r5, [sp]
   1a890:	str	r5, [sp, #4]
   1a894:	bl	148bc <fprintf@plt>
   1a898:	mov	r7, #1
   1a89c:	b	1a83c <__flatcc_fb_gen_c_builder@@Base+0x1e4>
   1a8a0:	cmp	r7, #0
   1a8a4:	beq	1a8b4 <__flatcc_fb_gen_c_builder@@Base+0x25c>
   1a8a8:	ldr	r1, [sl]
   1a8ac:	mov	r0, #10
   1a8b0:	bl	1491c <fputc@plt>
   1a8b4:	ldr	r7, [r4, #208]	; 0xd0
   1a8b8:	str	sl, [sp, #64]	; 0x40
   1a8bc:	ldr	r6, [r7, #44]	; 0x2c
   1a8c0:	cmp	r6, #0
   1a8c4:	beq	1ad10 <__flatcc_fb_gen_c_builder@@Base+0x6b8>
   1a8c8:	mov	r9, #1
   1a8cc:	b	1abd4 <__flatcc_fb_gen_c_builder@@Base+0x57c>
   1a8d0:	ldr	r1, [r4, #204]	; 0xcc
   1a8d4:	mov	r0, #10
   1a8d8:	bl	1491c <fputc@plt>
   1a8dc:	ldr	r0, [r4, #204]	; 0xcc
   1a8e0:	str	r5, [sp]
   1a8e4:	mov	r2, r5
   1a8e8:	mov	r3, r5
   1a8ec:	ldr	r1, [pc, #4084]	; 1b8e8 <__flatcc_fb_gen_c_builder@@Base+0x1290>
   1a8f0:	add	r1, pc, r1
   1a8f4:	bl	148bc <fprintf@plt>
   1a8f8:	mov	r8, #0
   1a8fc:	mov	r0, r4
   1a900:	mov	r1, r6
   1a904:	mov	r2, #0
   1a908:	mov	r3, r7
   1a90c:	str	r8, [sp]
   1a910:	bl	1c1fc <__flatcc_fb_gen_c_builder@@Base+0x1ba4>
   1a914:	ldr	r3, [r4, #204]	; 0xcc
   1a918:	ldr	sl, [pc, #4044]	; 1b8ec <__flatcc_fb_gen_c_builder@@Base+0x1294>
   1a91c:	mov	r1, #4
   1a920:	mov	r2, #1
   1a924:	add	sl, pc, sl
   1a928:	mov	r0, sl
   1a92c:	bl	14850 <fwrite@plt>
   1a930:	mov	r0, r4
   1a934:	mov	r1, r6
   1a938:	mov	r2, r7
   1a93c:	mov	r3, #0
   1a940:	str	r8, [sp]
   1a944:	bl	1c4ec <__flatcc_fb_gen_c_builder@@Base+0x1e94>
   1a948:	ldr	r3, [r4, #204]	; 0xcc
   1a94c:	ldr	sl, [pc, #4088]	; 1b94c <__flatcc_fb_gen_c_builder@@Base+0x12f4>
   1a950:	mov	r1, #12
   1a954:	mov	r2, #1
   1a958:	add	sl, pc, sl
   1a95c:	mov	r0, sl
   1a960:	bl	14850 <fwrite@plt>
   1a964:	ldr	r0, [r4, #204]	; 0xcc
   1a968:	str	r5, [sp]
   1a96c:	str	r5, [sp, #4]
   1a970:	mov	r2, r5
   1a974:	mov	r3, r5
   1a978:	ldr	r1, [pc, #4048]	; 1b950 <__flatcc_fb_gen_c_builder@@Base+0x12f8>
   1a97c:	add	r1, pc, r1
   1a980:	bl	148bc <fprintf@plt>
   1a984:	ldr	r3, [r4, #204]	; 0xcc
   1a988:	ldr	r0, [pc, #4036]	; 1b954 <__flatcc_fb_gen_c_builder@@Base+0x12fc>
   1a98c:	mov	r1, #2
   1a990:	mov	r2, #1
   1a994:	add	r0, pc, r0
   1a998:	bl	14850 <fwrite@plt>
   1a99c:	mov	r9, #1
   1a9a0:	mov	r0, r4
   1a9a4:	mov	r1, r6
   1a9a8:	mov	r2, r7
   1a9ac:	mov	r3, #0
   1a9b0:	str	r9, [sp]
   1a9b4:	bl	1c4ec <__flatcc_fb_gen_c_builder@@Base+0x1e94>
   1a9b8:	ldr	r3, [r4, #204]	; 0xcc
   1a9bc:	mov	r0, sl
   1a9c0:	mov	r1, #12
   1a9c4:	mov	r2, #1
   1a9c8:	bl	14850 <fwrite@plt>
   1a9cc:	ldr	r0, [r4, #204]	; 0xcc
   1a9d0:	str	r5, [sp]
   1a9d4:	mov	r2, r5
   1a9d8:	mov	r3, r5
   1a9dc:	ldr	r1, [pc, #4036]	; 1b9a8 <__flatcc_fb_gen_c_builder@@Base+0x1350>
   1a9e0:	add	r1, pc, r1
   1a9e4:	bl	148bc <fprintf@plt>
   1a9e8:	mov	r0, r4
   1a9ec:	mov	r1, r6
   1a9f0:	mov	r2, #0
   1a9f4:	mov	r3, r7
   1a9f8:	str	r8, [sp]
   1a9fc:	bl	1c1fc <__flatcc_fb_gen_c_builder@@Base+0x1ba4>
   1aa00:	ldr	r3, [r4, #204]	; 0xcc
   1aa04:	ldr	r0, [pc, #4060]	; 1b9e8 <__flatcc_fb_gen_c_builder@@Base+0x1390>
   1aa08:	mov	r1, #4
   1aa0c:	mov	r2, #1
   1aa10:	add	r0, pc, r0
   1aa14:	bl	14850 <fwrite@plt>
   1aa18:	mov	r0, r4
   1aa1c:	mov	r1, r6
   1aa20:	mov	r2, r7
   1aa24:	mov	r3, #2
   1aa28:	str	r8, [sp]
   1aa2c:	bl	1c4ec <__flatcc_fb_gen_c_builder@@Base+0x1e94>
   1aa30:	ldr	r3, [r4, #204]	; 0xcc
   1aa34:	mov	r0, sl
   1aa38:	mov	r1, #12
   1aa3c:	mov	r2, #1
   1aa40:	bl	14850 <fwrite@plt>
   1aa44:	ldr	r0, [r4, #204]	; 0xcc
   1aa48:	str	r5, [sp]
   1aa4c:	str	r5, [sp, #4]
   1aa50:	mov	r2, r5
   1aa54:	mov	r3, r5
   1aa58:	ldr	r1, [pc, #4020]	; 1ba14 <__flatcc_fb_gen_c_builder@@Base+0x13bc>
   1aa5c:	add	r1, pc, r1
   1aa60:	bl	148bc <fprintf@plt>
   1aa64:	ldr	r3, [r4, #204]	; 0xcc
   1aa68:	ldr	r0, [pc, #4008]	; 1ba18 <__flatcc_fb_gen_c_builder@@Base+0x13c0>
   1aa6c:	mov	r1, #2
   1aa70:	mov	r2, #1
   1aa74:	add	r0, pc, r0
   1aa78:	bl	14850 <fwrite@plt>
   1aa7c:	mov	r0, r4
   1aa80:	mov	r1, r6
   1aa84:	mov	r2, r7
   1aa88:	mov	r3, #2
   1aa8c:	str	r9, [sp]
   1aa90:	bl	1c4ec <__flatcc_fb_gen_c_builder@@Base+0x1e94>
   1aa94:	ldr	r3, [r4, #204]	; 0xcc
   1aa98:	mov	r0, sl
   1aa9c:	mov	r1, #12
   1aaa0:	mov	r2, #1
   1aaa4:	bl	14850 <fwrite@plt>
   1aaa8:	ldr	r0, [r4, #204]	; 0xcc
   1aaac:	str	r5, [sp]
   1aab0:	mov	r2, r5
   1aab4:	mov	r3, r5
   1aab8:	ldr	r1, [pc, #4024]	; 1ba78 <__flatcc_fb_gen_c_builder@@Base+0x1420>
   1aabc:	add	r1, pc, r1
   1aac0:	bl	148bc <fprintf@plt>
   1aac4:	mov	r0, r4
   1aac8:	mov	r1, r6
   1aacc:	mov	r2, #0
   1aad0:	mov	r3, r7
   1aad4:	str	r8, [sp]
   1aad8:	bl	1c1fc <__flatcc_fb_gen_c_builder@@Base+0x1ba4>
   1aadc:	ldr	r3, [r4, #204]	; 0xcc
   1aae0:	ldr	r0, [pc, #3988]	; 1ba7c <__flatcc_fb_gen_c_builder@@Base+0x1424>
   1aae4:	mov	r1, #4
   1aae8:	mov	r2, #1
   1aaec:	add	r0, pc, r0
   1aaf0:	bl	14850 <fwrite@plt>
   1aaf4:	mov	r0, r4
   1aaf8:	mov	r1, r6
   1aafc:	mov	r2, r7
   1ab00:	mov	r3, #1
   1ab04:	str	r8, [sp]
   1ab08:	bl	1c4ec <__flatcc_fb_gen_c_builder@@Base+0x1e94>
   1ab0c:	ldr	r3, [r4, #204]	; 0xcc
   1ab10:	mov	r0, sl
   1ab14:	mov	r1, #12
   1ab18:	mov	r2, #1
   1ab1c:	bl	14850 <fwrite@plt>
   1ab20:	ldr	r0, [r4, #204]	; 0xcc
   1ab24:	str	r5, [sp]
   1ab28:	str	r5, [sp, #4]
   1ab2c:	mov	r2, r5
   1ab30:	mov	r3, r5
   1ab34:	ldr	r1, [pc, #4044]	; 1bb08 <__flatcc_fb_gen_c_builder@@Base+0x14b0>
   1ab38:	add	r1, pc, r1
   1ab3c:	bl	148bc <fprintf@plt>
   1ab40:	ldr	r3, [r4, #204]	; 0xcc
   1ab44:	ldr	r0, [pc, #4032]	; 1bb0c <__flatcc_fb_gen_c_builder@@Base+0x14b4>
   1ab48:	mov	r1, #2
   1ab4c:	mov	r2, #1
   1ab50:	add	r0, pc, r0
   1ab54:	bl	14850 <fwrite@plt>
   1ab58:	mov	r0, r4
   1ab5c:	mov	r1, r6
   1ab60:	mov	r2, r7
   1ab64:	mov	r3, #1
   1ab68:	str	r9, [sp]
   1ab6c:	bl	1c4ec <__flatcc_fb_gen_c_builder@@Base+0x1e94>
   1ab70:	ldr	r3, [r4, #204]	; 0xcc
   1ab74:	mov	r0, sl
   1ab78:	mov	r1, #12
   1ab7c:	mov	r2, #1
   1ab80:	bl	14850 <fwrite@plt>
   1ab84:	ldrd	r2, [r6, #112]	; 0x70
   1ab88:	ldrh	r1, [r6, #104]	; 0x68
   1ab8c:	ldr	r0, [r4, #204]	; 0xcc
   1ab90:	str	r5, [sp, #20]
   1ab94:	str	r5, [sp, #24]
   1ab98:	str	r5, [sp]
   1ab9c:	str	r2, [sp, #8]
   1aba0:	str	r3, [sp, #12]
   1aba4:	str	r1, [sp, #16]
   1aba8:	mov	r2, r4
   1abac:	mov	r3, r4
   1abb0:	ldr	r1, [pc, #4088]	; 1bbb0 <__flatcc_fb_gen_c_builder@@Base+0x1558>
   1abb4:	add	r1, pc, r1
   1abb8:	bl	148bc <fprintf@plt>
   1abbc:	ldr	r1, [r4, #204]	; 0xcc
   1abc0:	mov	r0, #10
   1abc4:	bl	1491c <fputc@plt>
   1abc8:	ldr	r6, [r6, #120]	; 0x78
   1abcc:	cmp	r6, #0
   1abd0:	beq	1ad08 <__flatcc_fb_gen_c_builder@@Base+0x6b0>
   1abd4:	mov	r0, r5
   1abd8:	mov	r1, #0
   1abdc:	mov	r2, #220	; 0xdc
   1abe0:	bl	148d4 <memset@plt>
   1abe4:	ldrh	r0, [r6, #8]
   1abe8:	cmp	r0, #1
   1abec:	bne	1bd5c <__flatcc_fb_gen_c_builder@@Base+0x1704>
   1abf0:	ldr	r0, [r6, #12]
   1abf4:	mov	r1, r6
   1abf8:	mov	r2, r5
   1abfc:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   1ac00:	mov	r0, r6
   1ac04:	bl	1c18c <__flatcc_fb_gen_c_builder@@Base+0x1b34>
   1ac08:	mov	r7, r0
   1ac0c:	ldr	r0, [r4, #204]	; 0xcc
   1ac10:	ldr	r1, [pc, #4040]	; 1bbe0 <__flatcc_fb_gen_c_builder@@Base+0x1588>
   1ac14:	mov	r2, r5
   1ac18:	add	r1, pc, r1
   1ac1c:	bl	148bc <fprintf@plt>
   1ac20:	mov	r0, r4
   1ac24:	mov	r1, r6
   1ac28:	mov	r2, #0
   1ac2c:	mov	r3, r7
   1ac30:	str	r9, [sp]
   1ac34:	bl	1c1fc <__flatcc_fb_gen_c_builder@@Base+0x1ba4>
   1ac38:	ldr	r0, [r4, #204]	; 0xcc
   1ac3c:	ldr	r1, [pc, #4000]	; 1bbe4 <__flatcc_fb_gen_c_builder@@Base+0x158c>
   1ac40:	mov	r2, r5
   1ac44:	add	r1, pc, r1
   1ac48:	bl	148bc <fprintf@plt>
   1ac4c:	mov	r0, r6
   1ac50:	bl	1c18c <__flatcc_fb_gen_c_builder@@Base+0x1b34>
   1ac54:	cmp	r0, #1
   1ac58:	blt	1a8d0 <__flatcc_fb_gen_c_builder@@Base+0x278>
   1ac5c:	mov	r8, r0
   1ac60:	mov	r9, #0
   1ac64:	mov	sl, r7
   1ac68:	cmp	r7, #0
   1ac6c:	bne	1acb8 <__flatcc_fb_gen_c_builder@@Base+0x660>
   1ac70:	b	1ac88 <__flatcc_fb_gen_c_builder@@Base+0x630>
   1ac74:	ldr	r0, [pc, #4056]	; 1bc54 <__flatcc_fb_gen_c_builder@@Base+0x15fc>
   1ac78:	mov	r1, #2
   1ac7c:	mov	r2, #1
   1ac80:	add	r0, pc, r0
   1ac84:	bl	14850 <fwrite@plt>
   1ac88:	ldr	r0, [sp, #64]	; 0x40
   1ac8c:	mov	r2, r9
   1ac90:	ldr	r0, [r0]
   1ac94:	ldr	r1, [pc, #4028]	; 1bc58 <__flatcc_fb_gen_c_builder@@Base+0x1600>
   1ac98:	add	r1, pc, r1
   1ac9c:	bl	148bc <fprintf@plt>
   1aca0:	add	r9, r9, #1
   1aca4:	sub	sl, sl, #1
   1aca8:	cmp	r8, r9
   1acac:	beq	1a8d0 <__flatcc_fb_gen_c_builder@@Base+0x278>
   1acb0:	cmp	r7, #0
   1acb4:	beq	1ac88 <__flatcc_fb_gen_c_builder@@Base+0x630>
   1acb8:	cmp	r9, #0
   1acbc:	beq	1acdc <__flatcc_fb_gen_c_builder@@Base+0x684>
   1acc0:	ldr	r0, [sp, #64]	; 0x40
   1acc4:	tst	r9, #3
   1acc8:	ldr	r3, [r0]
   1accc:	bne	1ac74 <__flatcc_fb_gen_c_builder@@Base+0x61c>
   1acd0:	cmp	sl, #2
   1acd4:	bgt	1acec <__flatcc_fb_gen_c_builder@@Base+0x694>
   1acd8:	b	1ac74 <__flatcc_fb_gen_c_builder@@Base+0x61c>
   1acdc:	ldr	r0, [sp, #64]	; 0x40
   1ace0:	cmp	r7, #5
   1ace4:	ldr	r3, [r0]
   1ace8:	blt	1ac74 <__flatcc_fb_gen_c_builder@@Base+0x61c>
   1acec:	ldr	r1, [pc, #4028]	; 1bcb0 <__flatcc_fb_gen_c_builder@@Base+0x1658>
   1acf0:	ldr	r2, [pc, #4028]	; 1bcb4 <__flatcc_fb_gen_c_builder@@Base+0x165c>
   1acf4:	mov	r0, r3
   1acf8:	add	r1, pc, r1
   1acfc:	add	r2, pc, r2
   1ad00:	bl	148bc <fprintf@plt>
   1ad04:	b	1ac88 <__flatcc_fb_gen_c_builder@@Base+0x630>
   1ad08:	ldr	r7, [r4, #208]	; 0xd0
   1ad0c:	ldr	sl, [sp, #64]	; 0x40
   1ad10:	sub	r9, fp, #256	; 0x100
   1ad14:	mov	r1, #0
   1ad18:	mov	r2, #220	; 0xdc
   1ad1c:	mov	r5, #0
   1ad20:	mov	r0, r9
   1ad24:	bl	148d4 <memset@plt>
   1ad28:	ldr	r6, [r7, #40]	; 0x28
   1ad2c:	cmp	r6, #0
   1ad30:	beq	1ad9c <__flatcc_fb_gen_c_builder@@Base+0x744>
   1ad34:	ldr	r7, [pc, #4044]	; 1bd08 <__flatcc_fb_gen_c_builder@@Base+0x16b0>
   1ad38:	add	r7, pc, r7
   1ad3c:	b	1ad4c <__flatcc_fb_gen_c_builder@@Base+0x6f4>
   1ad40:	ldr	r6, [r6]
   1ad44:	cmp	r6, #0
   1ad48:	beq	1ad88 <__flatcc_fb_gen_c_builder@@Base+0x730>
   1ad4c:	ldrh	r0, [r6, #8]
   1ad50:	cmp	r0, #4
   1ad54:	bne	1ad40 <__flatcc_fb_gen_c_builder@@Base+0x6e8>
   1ad58:	ldr	r0, [r6, #12]
   1ad5c:	mov	r1, r6
   1ad60:	mov	r2, r9
   1ad64:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   1ad68:	ldr	r0, [r4, #204]	; 0xcc
   1ad6c:	mov	r1, r7
   1ad70:	mov	r2, r4
   1ad74:	mov	r3, r9
   1ad78:	stm	sp, {r4, r9}
   1ad7c:	bl	148bc <fprintf@plt>
   1ad80:	mov	r5, #1
   1ad84:	b	1ad40 <__flatcc_fb_gen_c_builder@@Base+0x6e8>
   1ad88:	cmp	r5, #0
   1ad8c:	beq	1ad9c <__flatcc_fb_gen_c_builder@@Base+0x744>
   1ad90:	ldr	r1, [sl]
   1ad94:	mov	r0, #10
   1ad98:	bl	1491c <fputc@plt>
   1ad9c:	ldr	r0, [r4, #208]	; 0xd0
   1ada0:	ldr	r6, [r0, #40]	; 0x28
   1ada4:	cmp	r6, #0
   1ada8:	beq	1bc5c <__flatcc_fb_gen_c_builder@@Base+0x1604>
   1adac:	ldr	sl, [pc, #4040]	; 1bd7c <__flatcc_fb_gen_c_builder@@Base+0x1724>
   1adb0:	mov	r1, #0
   1adb4:	mov	r7, #1
   1adb8:	add	sl, pc, sl
   1adbc:	b	1ae34 <__flatcc_fb_gen_c_builder@@Base+0x7dc>
   1adc0:	ldr	r0, [sp, #64]	; 0x40
   1adc4:	ldr	r3, [r0]
   1adc8:	ldr	r0, [pc, #4016]	; 1bd80 <__flatcc_fb_gen_c_builder@@Base+0x1728>
   1adcc:	mov	r1, #6
   1add0:	mov	r2, #1
   1add4:	add	r0, pc, r0
   1add8:	bl	14850 <fwrite@plt>
   1addc:	mov	r0, r9
   1ade0:	mov	r1, #0
   1ade4:	mov	r2, #220	; 0xdc
   1ade8:	bl	148d4 <memset@plt>
   1adec:	ldr	r0, [r6, #12]
   1adf0:	mov	r1, r6
   1adf4:	mov	r2, r9
   1adf8:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   1adfc:	ldrd	r2, [r6, #96]	; 0x60
   1ae00:	ldr	r0, [r4, #204]	; 0xcc
   1ae04:	str	r9, [sp]
   1ae08:	str	r2, [sp, #8]
   1ae0c:	str	r3, [sp, #12]
   1ae10:	mov	r2, r4
   1ae14:	mov	r3, r4
   1ae18:	ldr	r1, [pc, #4020]	; 1bdd4 <__flatcc_fb_gen_c_builder@@Base+0x177c>
   1ae1c:	add	r1, pc, r1
   1ae20:	bl	148bc <fprintf@plt>
   1ae24:	mov	r1, #1
   1ae28:	ldr	r6, [r6]
   1ae2c:	cmp	r6, #0
   1ae30:	beq	1af90 <__flatcc_fb_gen_c_builder@@Base+0x938>
   1ae34:	ldrh	r0, [r6, #8]
   1ae38:	cmp	r0, #0
   1ae3c:	bne	1ae28 <__flatcc_fb_gen_c_builder@@Base+0x7d0>
   1ae40:	mov	r0, r9
   1ae44:	mov	r1, #0
   1ae48:	mov	r2, #220	; 0xdc
   1ae4c:	mov	r8, #0
   1ae50:	bl	148d4 <memset@plt>
   1ae54:	ldr	r0, [r6, #20]
   1ae58:	cmp	r0, #0
   1ae5c:	beq	1ae7c <__flatcc_fb_gen_c_builder@@Base+0x824>
   1ae60:	mov	r8, #0
   1ae64:	ldrh	r1, [r0, #72]	; 0x48
   1ae68:	ldr	r0, [r0]
   1ae6c:	bic	r1, r7, r1, lsr #2
   1ae70:	cmp	r0, #0
   1ae74:	add	r8, r8, r1
   1ae78:	bne	1ae64 <__flatcc_fb_gen_c_builder@@Base+0x80c>
   1ae7c:	ldr	r0, [r6, #12]
   1ae80:	mov	r1, r6
   1ae84:	mov	r2, r9
   1ae88:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   1ae8c:	ldr	r0, [r4, #204]	; 0xcc
   1ae90:	ldr	r1, [pc, #4064]	; 1be78 <__flatcc_fb_gen_c_builder@@Base+0x1820>
   1ae94:	mov	r2, r4
   1ae98:	mov	r3, r9
   1ae9c:	add	r1, pc, r1
   1aea0:	bl	148bc <fprintf@plt>
   1aea4:	ldr	r5, [r6, #20]
   1aea8:	cmp	r5, #0
   1aeac:	beq	1adc0 <__flatcc_fb_gen_c_builder@@Base+0x768>
   1aeb0:	mov	r9, #0
   1aeb4:	b	1aeec <__flatcc_fb_gen_c_builder@@Base+0x894>
   1aeb8:	ldr	r0, [sp, #64]	; 0x40
   1aebc:	ldr	r1, [r0]
   1aec0:	mov	r0, #32
   1aec4:	bl	1491c <fputc@plt>
   1aec8:	ldr	r0, [sp, #64]	; 0x40
   1aecc:	ldr	r2, [r5, #96]	; 0x60
   1aed0:	mov	r1, sl
   1aed4:	ldr	r0, [r0]
   1aed8:	bl	148bc <fprintf@plt>
   1aedc:	add	r9, r9, #1
   1aee0:	ldr	r5, [r5]
   1aee4:	cmp	r5, #0
   1aee8:	beq	1af5c <__flatcc_fb_gen_c_builder@@Base+0x904>
   1aeec:	ldrh	r0, [r5, #72]	; 0x48
   1aef0:	and	r0, r0, #260	; 0x104
   1aef4:	cmp	r0, #256	; 0x100
   1aef8:	bne	1aee0 <__flatcc_fb_gen_c_builder@@Base+0x888>
   1aefc:	cmp	r9, #1
   1af00:	blt	1aeb8 <__flatcc_fb_gen_c_builder@@Base+0x860>
   1af04:	cmp	r8, #0
   1af08:	beq	1aec8 <__flatcc_fb_gen_c_builder@@Base+0x870>
   1af0c:	ldr	r0, [sp, #64]	; 0x40
   1af10:	tst	r9, #3
   1af14:	ldr	r3, [r0]
   1af18:	bne	1af44 <__flatcc_fb_gen_c_builder@@Base+0x8ec>
   1af1c:	sub	r0, r8, r9
   1af20:	cmp	r0, #2
   1af24:	ble	1af44 <__flatcc_fb_gen_c_builder@@Base+0x8ec>
   1af28:	ldr	r1, [pc, #4076]	; 1bf1c <__flatcc_fb_gen_c_builder@@Base+0x18c4>
   1af2c:	ldr	r2, [pc, #4076]	; 1bf20 <__flatcc_fb_gen_c_builder@@Base+0x18c8>
   1af30:	mov	r0, r3
   1af34:	add	r1, pc, r1
   1af38:	add	r2, pc, r2
   1af3c:	bl	148bc <fprintf@plt>
   1af40:	b	1aec8 <__flatcc_fb_gen_c_builder@@Base+0x870>
   1af44:	ldr	r0, [pc, #4056]	; 1bf24 <__flatcc_fb_gen_c_builder@@Base+0x18cc>
   1af48:	mov	r1, #2
   1af4c:	mov	r2, #1
   1af50:	add	r0, pc, r0
   1af54:	bl	14850 <fwrite@plt>
   1af58:	b	1aec8 <__flatcc_fb_gen_c_builder@@Base+0x870>
   1af5c:	ldr	r0, [sp, #64]	; 0x40
   1af60:	cmp	r9, #1
   1af64:	ldr	r3, [r0]
   1af68:	blt	1af88 <__flatcc_fb_gen_c_builder@@Base+0x930>
   1af6c:	ldr	r0, [pc, #4020]	; 1bf28 <__flatcc_fb_gen_c_builder@@Base+0x18d0>
   1af70:	mov	r1, #7
   1af74:	mov	r2, #1
   1af78:	add	r0, pc, r0
   1af7c:	bl	14850 <fwrite@plt>
   1af80:	sub	r9, fp, #256	; 0x100
   1af84:	b	1addc <__flatcc_fb_gen_c_builder@@Base+0x784>
   1af88:	sub	r9, fp, #256	; 0x100
   1af8c:	b	1adc8 <__flatcc_fb_gen_c_builder@@Base+0x770>
   1af90:	ldr	r0, [r4, #208]	; 0xd0
   1af94:	ldr	sl, [sp, #64]	; 0x40
   1af98:	str	r1, [sp, #60]	; 0x3c
   1af9c:	ldr	r6, [r0, #40]	; 0x28
   1afa0:	cmp	r6, #0
   1afa4:	beq	1b3f0 <__flatcc_fb_gen_c_builder@@Base+0xd98>
   1afa8:	add	r5, sp, #168	; 0xa8
   1afac:	mov	r8, #1
   1afb0:	b	1aff4 <__flatcc_fb_gen_c_builder@@Base+0x99c>
   1afb4:	ldr	r1, [r4, #204]	; 0xcc
   1afb8:	mov	r0, #10
   1afbc:	bl	1491c <fputc@plt>
   1afc0:	add	r5, sp, #168	; 0xa8
   1afc4:	ldr	r0, [r4, #204]	; 0xcc
   1afc8:	str	r4, [sp]
   1afcc:	str	r5, [sp, #4]
   1afd0:	mov	r2, r5
   1afd4:	mov	r3, r5
   1afd8:	ldr	r1, [pc, #4076]	; 1bfcc <__flatcc_fb_gen_c_builder@@Base+0x1974>
   1afdc:	add	r1, pc, r1
   1afe0:	bl	148bc <fprintf@plt>
   1afe4:	sub	r9, fp, #256	; 0x100
   1afe8:	ldr	r6, [r6]
   1afec:	cmp	r6, #0
   1aff0:	beq	1b3f0 <__flatcc_fb_gen_c_builder@@Base+0xd98>
   1aff4:	ldrh	r0, [r6, #8]
   1aff8:	cmp	r0, #0
   1affc:	bne	1afe8 <__flatcc_fb_gen_c_builder@@Base+0x990>
   1b000:	mov	r0, r5
   1b004:	mov	r1, #0
   1b008:	mov	r2, #220	; 0xdc
   1b00c:	mov	r9, #0
   1b010:	bl	148d4 <memset@plt>
   1b014:	ldr	r0, [r6, #12]
   1b018:	mov	r1, r6
   1b01c:	mov	r2, r5
   1b020:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   1b024:	ldr	r0, [r6, #20]
   1b028:	cmp	r0, #0
   1b02c:	beq	1b04c <__flatcc_fb_gen_c_builder@@Base+0x9f4>
   1b030:	mov	r9, #0
   1b034:	ldrh	r1, [r0, #72]	; 0x48
   1b038:	ldr	r0, [r0]
   1b03c:	bic	r1, r8, r1, lsr #2
   1b040:	cmp	r0, #0
   1b044:	add	r9, r9, r1
   1b048:	bne	1b034 <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   1b04c:	ldr	r0, [sl]
   1b050:	ldr	r1, [pc, #3960]	; 1bfd0 <__flatcc_fb_gen_c_builder@@Base+0x1978>
   1b054:	mov	r2, r5
   1b058:	add	r1, pc, r1
   1b05c:	bl	148bc <fprintf@plt>
   1b060:	sub	r5, fp, #256	; 0x100
   1b064:	mov	r1, #0
   1b068:	mov	r2, #220	; 0xdc
   1b06c:	mov	r0, r5
   1b070:	bl	148d4 <memset@plt>
   1b074:	ldr	r7, [r6, #20]
   1b078:	cmp	r7, #0
   1b07c:	beq	1b32c <__flatcc_fb_gen_c_builder@@Base+0xcd4>
   1b080:	mov	sl, #0
   1b084:	b	1b0bc <__flatcc_fb_gen_c_builder@@Base+0xa64>
   1b088:	cmp	r0, #3
   1b08c:	bne	1becc <__flatcc_fb_gen_c_builder@@Base+0x1874>
   1b090:	ldr	r0, [sp, #64]	; 0x40
   1b094:	ldrd	r2, [r7, #96]	; 0x60
   1b098:	ldr	r0, [r0]
   1b09c:	stm	sp, {r2, r3}
   1b0a0:	ldr	r1, [pc, #3936]	; 1c008 <__flatcc_fb_gen_c_builder@@Base+0x19b0>
   1b0a4:	add	r1, pc, r1
   1b0a8:	mov	r2, r5
   1b0ac:	bl	148bc <fprintf@plt>
   1b0b0:	ldr	r7, [r7]
   1b0b4:	cmp	r7, #0
   1b0b8:	beq	1b32c <__flatcc_fb_gen_c_builder@@Base+0xcd4>
   1b0bc:	ldrb	r0, [r7, #72]	; 0x48
   1b0c0:	tst	r0, #4
   1b0c4:	bne	1b0b0 <__flatcc_fb_gen_c_builder@@Base+0xa58>
   1b0c8:	cmp	r9, #0
   1b0cc:	beq	1b134 <__flatcc_fb_gen_c_builder@@Base+0xadc>
   1b0d0:	cmp	sl, #0
   1b0d4:	beq	1b110 <__flatcc_fb_gen_c_builder@@Base+0xab8>
   1b0d8:	ldr	r0, [sp, #64]	; 0x40
   1b0dc:	tst	sl, #3
   1b0e0:	ldr	r3, [r0]
   1b0e4:	bne	1b120 <__flatcc_fb_gen_c_builder@@Base+0xac8>
   1b0e8:	sub	r0, r9, sl
   1b0ec:	cmp	r0, #2
   1b0f0:	ble	1b120 <__flatcc_fb_gen_c_builder@@Base+0xac8>
   1b0f4:	ldr	r1, [pc, #3804]	; 1bfd8 <__flatcc_fb_gen_c_builder@@Base+0x1980>
   1b0f8:	ldr	r2, [pc, #3804]	; 1bfdc <__flatcc_fb_gen_c_builder@@Base+0x1984>
   1b0fc:	mov	r0, r3
   1b100:	add	r1, pc, r1
   1b104:	add	r2, pc, r2
   1b108:	bl	148bc <fprintf@plt>
   1b10c:	b	1b134 <__flatcc_fb_gen_c_builder@@Base+0xadc>
   1b110:	ldr	r0, [sp, #64]	; 0x40
   1b114:	cmp	r9, #5
   1b118:	ldr	r3, [r0]
   1b11c:	bge	1b0f4 <__flatcc_fb_gen_c_builder@@Base+0xa9c>
   1b120:	ldr	r0, [pc, #3756]	; 1bfd4 <__flatcc_fb_gen_c_builder@@Base+0x197c>
   1b124:	mov	r1, #2
   1b128:	mov	r2, #1
   1b12c:	add	r0, pc, r0
   1b130:	bl	14850 <fwrite@plt>
   1b134:	ldrh	r0, [r7, #24]
   1b138:	sub	r0, r0, #7
   1b13c:	cmp	r0, #8
   1b140:	bhi	1bcb8 <__flatcc_fb_gen_c_builder@@Base+0x1660>
   1b144:	add	r1, pc, #8
   1b148:	add	sl, sl, #1
   1b14c:	ldr	r0, [r1, r0, lsl #2]
   1b150:	add	pc, r1, r0
   1b154:	andeq	r0, r0, r4, lsr #32
   1b158:	andeq	r0, r0, r8, ror r0
   1b15c:	andeq	r0, r0, r8, asr #1
   1b160:	andeq	r0, r0, r0, rrx
   1b164:	andeq	r0, r0, r4, ror #22
   1b168:	andeq	r0, r0, r4, ror #22
   1b16c:	andeq	r0, r0, r4, ror #22
   1b170:	andeq	r0, r0, r8, lsr #2
   1b174:	andeq	r0, r0, r4, ror #1
   1b178:	ldr	r0, [r7, #16]
   1b17c:	sub	r1, r0, #1
   1b180:	cmp	r1, #11
   1b184:	bcs	1bf2c <__flatcc_fb_gen_c_builder@@Base+0x18d4>
   1b188:	ldrd	r2, [r7, #96]	; 0x60
   1b18c:	ldr	r0, [r4, #204]	; 0xcc
   1b190:	stm	sp, {r2, r3}
   1b194:	ldr	r2, [pc, #3736]	; 1c034 <__flatcc_fb_gen_c_builder@@Base+0x19dc>
   1b198:	add	r2, pc, r2
   1b19c:	ldr	r3, [r2, r1, lsl #2]
   1b1a0:	ldr	r1, [pc, #3728]	; 1c038 <__flatcc_fb_gen_c_builder@@Base+0x19e0>
   1b1a4:	mov	r2, r4
   1b1a8:	add	r1, pc, r1
   1b1ac:	bl	148bc <fprintf@plt>
   1b1b0:	b	1b0b0 <__flatcc_fb_gen_c_builder@@Base+0xa58>
   1b1b4:	ldrd	r2, [r7, #96]	; 0x60
   1b1b8:	ldr	r0, [r4, #204]	; 0xcc
   1b1bc:	stm	sp, {r2, r3}
   1b1c0:	ldr	r1, [pc, #3708]	; 1c044 <__flatcc_fb_gen_c_builder@@Base+0x19ec>
   1b1c4:	add	r1, pc, r1
   1b1c8:	b	1b230 <__flatcc_fb_gen_c_builder@@Base+0xbd8>
   1b1cc:	ldr	r2, [r7, #16]
   1b1d0:	sub	r1, r2, #1
   1b1d4:	cmp	r1, #11
   1b1d8:	bcs	1bdd8 <__flatcc_fb_gen_c_builder@@Base+0x1780>
   1b1dc:	ldr	r3, [r7, #96]	; 0x60
   1b1e0:	ldr	r0, [r4, #204]	; 0xcc
   1b1e4:	ldr	r5, [r7, #100]	; 0x64
   1b1e8:	cmp	r2, #5
   1b1ec:	stm	sp, {r3, r5}
   1b1f0:	ldr	r2, [pc, #3632]	; 1c028 <__flatcc_fb_gen_c_builder@@Base+0x19d0>
   1b1f4:	ldr	r3, [pc, #3632]	; 1c02c <__flatcc_fb_gen_c_builder@@Base+0x19d4>
   1b1f8:	add	r3, pc, r3
   1b1fc:	add	r2, pc, r2
   1b200:	moveq	r2, r4
   1b204:	ldr	r3, [r3, r1, lsl #2]
   1b208:	ldr	r1, [pc, #3616]	; 1c030 <__flatcc_fb_gen_c_builder@@Base+0x19d8>
   1b20c:	add	r1, pc, r1
   1b210:	bl	148bc <fprintf@plt>
   1b214:	sub	r5, fp, #256	; 0x100
   1b218:	b	1b0b0 <__flatcc_fb_gen_c_builder@@Base+0xa58>
   1b21c:	ldrd	r2, [r7, #96]	; 0x60
   1b220:	ldr	r0, [r4, #204]	; 0xcc
   1b224:	stm	sp, {r2, r3}
   1b228:	ldr	r1, [pc, #3608]	; 1c048 <__flatcc_fb_gen_c_builder@@Base+0x19f0>
   1b22c:	add	r1, pc, r1
   1b230:	mov	r2, r4
   1b234:	b	1b0ac <__flatcc_fb_gen_c_builder@@Base+0xa54>
   1b238:	ldr	r1, [r7, #16]
   1b23c:	mov	r2, r5
   1b240:	ldr	r0, [r1, #12]
   1b244:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   1b248:	ldr	r0, [r7, #16]
   1b24c:	ldrh	r0, [r0, #8]
   1b250:	cmp	r0, #2
   1b254:	bcc	1b090 <__flatcc_fb_gen_c_builder@@Base+0xa38>
   1b258:	cmp	r0, #4
   1b25c:	bne	1b088 <__flatcc_fb_gen_c_builder@@Base+0xa30>
   1b260:	ldr	r0, [sp, #64]	; 0x40
   1b264:	ldrd	r2, [r7, #96]	; 0x60
   1b268:	ldr	r0, [r0]
   1b26c:	stm	sp, {r2, r3}
   1b270:	ldr	r1, [pc, #3476]	; 1c00c <__flatcc_fb_gen_c_builder@@Base+0x19b4>
   1b274:	add	r1, pc, r1
   1b278:	b	1b0a8 <__flatcc_fb_gen_c_builder@@Base+0xa50>
   1b27c:	ldr	r1, [r7, #16]
   1b280:	mov	r2, r5
   1b284:	ldr	r0, [r1, #12]
   1b288:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   1b28c:	ldr	r0, [r7, #16]
   1b290:	ldrh	r0, [r0, #8]
   1b294:	cmp	r0, #4
   1b298:	bhi	1bd84 <__flatcc_fb_gen_c_builder@@Base+0x172c>
   1b29c:	add	r1, pc, #4
   1b2a0:	ldr	r0, [r1, r0, lsl #2]
   1b2a4:	add	pc, r1, r0
   1b2a8:	andeq	r0, r0, r4, lsl r0
   1b2ac:	andeq	r0, r0, ip, asr #32
   1b2b0:	ldrdeq	r0, [r0], -ip
   1b2b4:	andeq	r0, r0, r8, rrx
   1b2b8:	andeq	r0, r0, r0, lsr r0
   1b2bc:	ldr	r0, [sp, #64]	; 0x40
   1b2c0:	ldrd	r2, [r7, #96]	; 0x60
   1b2c4:	ldr	r0, [r0]
   1b2c8:	stm	sp, {r2, r3}
   1b2cc:	ldr	r1, [pc, #3348]	; 1bfe8 <__flatcc_fb_gen_c_builder@@Base+0x1990>
   1b2d0:	add	r1, pc, r1
   1b2d4:	b	1b0a8 <__flatcc_fb_gen_c_builder@@Base+0xa50>
   1b2d8:	ldr	r0, [sp, #64]	; 0x40
   1b2dc:	ldrd	r2, [r7, #96]	; 0x60
   1b2e0:	ldr	r0, [r0]
   1b2e4:	stm	sp, {r2, r3}
   1b2e8:	ldr	r1, [pc, #3324]	; 1bfec <__flatcc_fb_gen_c_builder@@Base+0x1994>
   1b2ec:	add	r1, pc, r1
   1b2f0:	b	1b0a8 <__flatcc_fb_gen_c_builder@@Base+0xa50>
   1b2f4:	ldr	r0, [sp, #64]	; 0x40
   1b2f8:	ldrd	r2, [r7, #96]	; 0x60
   1b2fc:	ldr	r0, [r0]
   1b300:	stm	sp, {r2, r3}
   1b304:	ldr	r1, [pc, #3284]	; 1bfe0 <__flatcc_fb_gen_c_builder@@Base+0x1988>
   1b308:	add	r1, pc, r1
   1b30c:	b	1b0a8 <__flatcc_fb_gen_c_builder@@Base+0xa50>
   1b310:	ldr	r0, [sp, #64]	; 0x40
   1b314:	ldrd	r2, [r7, #96]	; 0x60
   1b318:	ldr	r0, [r0]
   1b31c:	stm	sp, {r2, r3}
   1b320:	ldr	r1, [pc, #3260]	; 1bfe4 <__flatcc_fb_gen_c_builder@@Base+0x198c>
   1b324:	add	r1, pc, r1
   1b328:	b	1b0a8 <__flatcc_fb_gen_c_builder@@Base+0xa50>
   1b32c:	ldr	sl, [sp, #64]	; 0x40
   1b330:	add	r2, sp, #168	; 0xa8
   1b334:	ldr	r0, [sl]
   1b338:	ldr	r1, [pc, #3324]	; 1c03c <__flatcc_fb_gen_c_builder@@Base+0x19e4>
   1b33c:	add	r1, pc, r1
   1b340:	bl	148bc <fprintf@plt>
   1b344:	ldr	r5, [r6, #20]
   1b348:	cmp	r5, #0
   1b34c:	beq	1afb4 <__flatcc_fb_gen_c_builder@@Base+0x95c>
   1b350:	mov	r7, #0
   1b354:	b	1b390 <__flatcc_fb_gen_c_builder@@Base+0xd38>
   1b358:	ldr	r0, [pc, #3296]	; 1c040 <__flatcc_fb_gen_c_builder@@Base+0x19e8>
   1b35c:	mov	r1, #2
   1b360:	mov	r2, #1
   1b364:	add	r0, pc, r0
   1b368:	bl	14850 <fwrite@plt>
   1b36c:	ldrd	r2, [r5, #96]	; 0x60
   1b370:	ldr	r0, [sl]
   1b374:	ldr	r1, [pc, #3312]	; 1c06c <__flatcc_fb_gen_c_builder@@Base+0x1a14>
   1b378:	add	r1, pc, r1
   1b37c:	bl	148bc <fprintf@plt>
   1b380:	add	r7, r7, #1
   1b384:	ldr	r5, [r5]
   1b388:	cmp	r5, #0
   1b38c:	beq	1afb4 <__flatcc_fb_gen_c_builder@@Base+0x95c>
   1b390:	ldrb	r0, [r5, #72]	; 0x48
   1b394:	tst	r0, #4
   1b398:	bne	1b384 <__flatcc_fb_gen_c_builder@@Base+0xd2c>
   1b39c:	cmp	r9, #0
   1b3a0:	beq	1b36c <__flatcc_fb_gen_c_builder@@Base+0xd14>
   1b3a4:	cmp	r7, #0
   1b3a8:	beq	1b3c8 <__flatcc_fb_gen_c_builder@@Base+0xd70>
   1b3ac:	ldr	r3, [sl]
   1b3b0:	tst	r7, #3
   1b3b4:	bne	1b358 <__flatcc_fb_gen_c_builder@@Base+0xd00>
   1b3b8:	sub	r0, r9, r7
   1b3bc:	cmp	r0, #2
   1b3c0:	bgt	1b3d4 <__flatcc_fb_gen_c_builder@@Base+0xd7c>
   1b3c4:	b	1b358 <__flatcc_fb_gen_c_builder@@Base+0xd00>
   1b3c8:	ldr	r3, [sl]
   1b3cc:	cmp	r9, #5
   1b3d0:	blt	1b358 <__flatcc_fb_gen_c_builder@@Base+0xd00>
   1b3d4:	ldr	r1, [pc, #3208]	; 1c064 <__flatcc_fb_gen_c_builder@@Base+0x1a0c>
   1b3d8:	ldr	r2, [pc, #3208]	; 1c068 <__flatcc_fb_gen_c_builder@@Base+0x1a10>
   1b3dc:	mov	r0, r3
   1b3e0:	add	r1, pc, r1
   1b3e4:	add	r2, pc, r2
   1b3e8:	bl	148bc <fprintf@plt>
   1b3ec:	b	1b36c <__flatcc_fb_gen_c_builder@@Base+0xd14>
   1b3f0:	ldr	r0, [sp, #60]	; 0x3c
   1b3f4:	cmp	r0, #0
   1b3f8:	beq	1bc5c <__flatcc_fb_gen_c_builder@@Base+0x1604>
   1b3fc:	ldr	r1, [r4, #204]	; 0xcc
   1b400:	mov	r0, #10
   1b404:	bl	1491c <fputc@plt>
   1b408:	mov	r0, r4
   1b40c:	bl	1ca3c <__flatcc_fb_gen_c_builder@@Base+0x23e4>
   1b410:	ldr	r0, [r4, #208]	; 0xd0
   1b414:	ldr	r5, [r0, #40]	; 0x28
   1b418:	cmp	r5, #0
   1b41c:	bne	1b49c <__flatcc_fb_gen_c_builder@@Base+0xe44>
   1b420:	b	1bc64 <__flatcc_fb_gen_c_builder@@Base+0x160c>
   1b424:	ldr	r0, [r4, #204]	; 0xcc
   1b428:	ldr	r1, [pc, #3160]	; 1c088 <__flatcc_fb_gen_c_builder@@Base+0x1a30>
   1b42c:	mov	r2, r9
   1b430:	add	r1, pc, r1
   1b434:	bl	148bc <fprintf@plt>
   1b438:	mov	r0, r9
   1b43c:	mov	r1, #0
   1b440:	mov	r2, #220	; 0xdc
   1b444:	bl	148d4 <memset@plt>
   1b448:	ldr	r0, [sp, #60]	; 0x3c
   1b44c:	ldr	r1, [sp, #60]	; 0x3c
   1b450:	mov	r2, r9
   1b454:	ldr	r0, [r0, #12]
   1b458:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   1b45c:	ldr	r0, [r4, #204]	; 0xcc
   1b460:	str	r9, [sp]
   1b464:	str	r9, [sp, #4]
   1b468:	str	r9, [sp, #8]
   1b46c:	mov	r2, r4
   1b470:	mov	r3, r4
   1b474:	ldr	r1, [pc, #3088]	; 1c08c <__flatcc_fb_gen_c_builder@@Base+0x1a34>
   1b478:	add	r1, pc, r1
   1b47c:	bl	148bc <fprintf@plt>
   1b480:	ldr	r1, [r4, #204]	; 0xcc
   1b484:	mov	r0, #10
   1b488:	bl	1491c <fputc@plt>
   1b48c:	ldr	r5, [sp, #60]	; 0x3c
   1b490:	ldr	r5, [r5]
   1b494:	cmp	r5, #0
   1b498:	beq	1bc64 <__flatcc_fb_gen_c_builder@@Base+0x160c>
   1b49c:	ldrh	r0, [r5, #8]
   1b4a0:	cmp	r0, #0
   1b4a4:	bne	1b490 <__flatcc_fb_gen_c_builder@@Base+0xe38>
   1b4a8:	mov	r0, r9
   1b4ac:	mov	r1, #0
   1b4b0:	mov	r2, #220	; 0xdc
   1b4b4:	bl	148d4 <memset@plt>
   1b4b8:	add	r0, sp, #168	; 0xa8
   1b4bc:	mov	r1, #0
   1b4c0:	mov	r2, #220	; 0xdc
   1b4c4:	bl	148d4 <memset@plt>
   1b4c8:	ldr	r0, [r5, #12]
   1b4cc:	mov	r1, r5
   1b4d0:	mov	r2, r9
   1b4d4:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   1b4d8:	ldr	r7, [r5, #20]
   1b4dc:	str	r5, [sp, #60]	; 0x3c
   1b4e0:	cmp	r7, #0
   1b4e4:	bne	1b518 <__flatcc_fb_gen_c_builder@@Base+0xec0>
   1b4e8:	b	1ba80 <__flatcc_fb_gen_c_builder@@Base+0x1428>
   1b4ec:	ldrd	r2, [r5]
   1b4f0:	ldr	r0, [r4, #204]	; 0xcc
   1b4f4:	stm	sp, {r2, r3, r4, r9, sl}
   1b4f8:	str	r8, [sp, #20]
   1b4fc:	ldr	r1, [pc, #3028]	; 1c0d8 <__flatcc_fb_gen_c_builder@@Base+0x1a80>
   1b500:	add	r1, pc, r1
   1b504:	mov	r2, r4
   1b508:	bl	148bc <fprintf@plt>
   1b50c:	ldr	r7, [r7]
   1b510:	cmp	r7, #0
   1b514:	beq	1ba80 <__flatcc_fb_gen_c_builder@@Base+0x1428>
   1b518:	ldr	r0, [r7, #4]
   1b51c:	ldm	r0, {r8, sl}
   1b520:	ldrb	r0, [r7, #72]	; 0x48
   1b524:	tst	r0, #4
   1b528:	bne	1b640 <__flatcc_fb_gen_c_builder@@Base+0xfe8>
   1b52c:	ldrh	r0, [r7, #24]
   1b530:	sub	r0, r0, #7
   1b534:	cmp	r0, #8
   1b538:	bhi	1bd0c <__flatcc_fb_gen_c_builder@@Base+0x16b4>
   1b53c:	add	r1, pc, #12
   1b540:	add	r6, r7, #88	; 0x58
   1b544:	add	r5, r7, #96	; 0x60
   1b548:	ldr	r0, [r1, r0, lsl #2]
   1b54c:	add	pc, r1, r0
   1b550:	andeq	r0, r0, r4, lsr #32
   1b554:	andeq	r0, r0, r4, asr #2
   1b558:	strdeq	r0, [r0], -r4
   1b55c:			; <UNDEFINED> instruction: 0xffffff9c
   1b560:			; <UNDEFINED> instruction: 0x000007bc
   1b564:			; <UNDEFINED> instruction: 0x000007bc
   1b568:			; <UNDEFINED> instruction: 0x000007bc
   1b56c:	andeq	r0, r0, ip, lsr #5
   1b570:	andeq	r0, r0, r0, lsl r2
   1b574:	ldr	r2, [r7, #16]
   1b578:	sub	r1, r2, #1
   1b57c:	cmp	r1, #11
   1b580:	bcs	1bdd8 <__flatcc_fb_gen_c_builder@@Base+0x1780>
   1b584:	ldr	r0, [pc, #2844]	; 1c0a8 <__flatcc_fb_gen_c_builder@@Base+0x1a50>
   1b588:	ldr	r6, [r5]
   1b58c:	ldr	r5, [r5, #4]
   1b590:	cmp	r2, #5
   1b594:	add	r0, pc, r0
   1b598:	ldr	r3, [r0, r1, lsl #2]
   1b59c:	ldr	r0, [r4, #204]	; 0xcc
   1b5a0:	ldr	r2, [pc, #2820]	; 1c0ac <__flatcc_fb_gen_c_builder@@Base+0x1a54>
   1b5a4:	add	r2, pc, r2
   1b5a8:	moveq	r2, r4
   1b5ac:	str	r3, [sp, #36]	; 0x24
   1b5b0:	str	r2, [sp, #32]
   1b5b4:	ldr	r2, [pc, #2804]	; 1c0b0 <__flatcc_fb_gen_c_builder@@Base+0x1a58>
   1b5b8:	str	r6, [sp]
   1b5bc:	str	r5, [sp, #4]
   1b5c0:	add	r2, pc, r2
   1b5c4:	ldr	r1, [r2, r1, lsl #2]
   1b5c8:	add	r2, sp, #8
   1b5cc:	stm	r2, {r4, r9, sl}
   1b5d0:	str	r8, [sp, #20]
   1b5d4:	str	r4, [sp, #24]
   1b5d8:	mov	r2, r4
   1b5dc:	str	r1, [sp, #28]
   1b5e0:	ldr	r1, [pc, #2764]	; 1c0b4 <__flatcc_fb_gen_c_builder@@Base+0x1a5c>
   1b5e4:	add	r1, pc, r1
   1b5e8:	bl	148bc <fprintf@plt>
   1b5ec:	ldr	r1, [r7, #104]	; 0x68
   1b5f0:	cmp	r1, #0
   1b5f4:	beq	1b660 <__flatcc_fb_gen_c_builder@@Base+0x1008>
   1b5f8:	ldrh	r0, [r1, #8]
   1b5fc:	cmp	r0, #1
   1b600:	beq	1b868 <__flatcc_fb_gen_c_builder@@Base+0x1210>
   1b604:	cmp	r0, #0
   1b608:	bne	1bf7c <__flatcc_fb_gen_c_builder@@Base+0x1924>
   1b60c:	ldr	r0, [r1, #12]
   1b610:	add	r5, sp, #168	; 0xa8
   1b614:	mov	r2, r5
   1b618:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   1b61c:	ldr	r0, [r4, #204]	; 0xcc
   1b620:	stm	sp, {r9, sl}
   1b624:	str	r8, [sp, #8]
   1b628:	str	r5, [sp, #12]
   1b62c:	str	r5, [sp, #16]
   1b630:	str	r5, [sp, #20]
   1b634:	ldr	r1, [pc, #2684]	; 1c0b8 <__flatcc_fb_gen_c_builder@@Base+0x1a60>
   1b638:	add	r1, pc, r1
   1b63c:	b	1b8a4 <__flatcc_fb_gen_c_builder@@Base+0x124c>
   1b640:	ldr	r0, [sp, #64]	; 0x40
   1b644:	mov	r2, r9
   1b648:	mov	r3, sl
   1b64c:	ldr	r0, [r0]
   1b650:	str	r8, [sp]
   1b654:	ldr	r1, [pc, #2580]	; 1c070 <__flatcc_fb_gen_c_builder@@Base+0x1a18>
   1b658:	add	r1, pc, r1
   1b65c:	bl	148bc <fprintf@plt>
   1b660:	ldr	r7, [r7]
   1b664:	cmp	r7, #0
   1b668:	bne	1b518 <__flatcc_fb_gen_c_builder@@Base+0xec0>
   1b66c:	b	1ba80 <__flatcc_fb_gen_c_builder@@Base+0x1428>
   1b670:	andeq	r5, r3, lr, asr r9
   1b674:	andeq	r4, r2, r5, asr #27
   1b678:	andeq	r5, r3, r5, asr r9
   1b67c:	andeq	r5, r3, r2, asr r9
   1b680:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   1b684:	muleq	r2, r6, r1
   1b688:	andeq	r5, r3, r6, lsr #18
   1b68c:	muleq	r3, r6, r5
   1b690:	andeq	r5, r3, r9, lsl r9
   1b694:	ldr	r9, [r7, #16]
   1b698:	str	r8, [sp, #56]	; 0x38
   1b69c:	sub	r8, r9, #1
   1b6a0:	cmp	r8, #11
   1b6a4:	bcs	1bdd8 <__flatcc_fb_gen_c_builder@@Base+0x1780>
   1b6a8:	add	r1, r7, #48	; 0x30
   1b6ac:	mov	r0, r9
   1b6b0:	add	r2, sp, #68	; 0x44
   1b6b4:	bl	1cc34 <__flatcc_fb_gen_c_builder@@Base+0x25dc>
   1b6b8:	ldm	r5, {r2, ip}
   1b6bc:	ldr	r1, [r6, #4]
   1b6c0:	ldr	r6, [r6]
   1b6c4:	ldrh	r5, [r7, #74]	; 0x4a
   1b6c8:	add	r3, sp, #68	; 0x44
   1b6cc:	ldr	r0, [r4, #204]	; 0xcc
   1b6d0:	cmp	r9, #5
   1b6d4:	sub	r9, fp, #256	; 0x100
   1b6d8:	str	r3, [sp, #52]	; 0x34
   1b6dc:	str	r5, [sp, #48]	; 0x30
   1b6e0:	str	r1, [sp, #44]	; 0x2c
   1b6e4:	str	r6, [sp, #40]	; 0x28
   1b6e8:	ldr	r1, [pc, #2472]	; 1c098 <__flatcc_fb_gen_c_builder@@Base+0x1a40>
   1b6ec:	add	r1, pc, r1
   1b6f0:	ldr	r1, [r1, r8, lsl #2]
   1b6f4:	str	r1, [sp, #36]	; 0x24
   1b6f8:	ldr	r1, [pc, #2460]	; 1c09c <__flatcc_fb_gen_c_builder@@Base+0x1a44>
   1b6fc:	add	r1, pc, r1
   1b700:	moveq	r1, r4
   1b704:	str	r1, [sp, #32]
   1b708:	ldr	r1, [pc, #2448]	; 1c0a0 <__flatcc_fb_gen_c_builder@@Base+0x1a48>
   1b70c:	stm	sp, {r2, ip}
   1b710:	ldr	r2, [sp, #56]	; 0x38
   1b714:	str	r4, [sp, #8]
   1b718:	str	r9, [sp, #12]
   1b71c:	str	sl, [sp, #16]
   1b720:	str	r4, [sp, #24]
   1b724:	add	r1, pc, r1
   1b728:	str	r2, [sp, #20]
   1b72c:	ldr	r1, [r1, r8, lsl #2]
   1b730:	str	r1, [sp, #28]
   1b734:	ldr	r1, [pc, #2408]	; 1c0a4 <__flatcc_fb_gen_c_builder@@Base+0x1a4c>
   1b738:	add	r1, pc, r1
   1b73c:	b	1b504 <__flatcc_fb_gen_c_builder@@Base+0xeac>
   1b740:	strdeq	r4, [r2], -r0
   1b744:	ldrd	r2, [r5]
   1b748:	ldr	r0, [r4, #204]	; 0xcc
   1b74c:	stm	sp, {r2, r3, r4, r9, sl}
   1b750:	str	r8, [sp, #20]
   1b754:	ldr	r1, [pc, #2432]	; 1c0dc <__flatcc_fb_gen_c_builder@@Base+0x1a84>
   1b758:	add	r1, pc, r1
   1b75c:	b	1b504 <__flatcc_fb_gen_c_builder@@Base+0xeac>
   1b760:	ldr	r1, [r7, #16]
   1b764:	add	r2, sp, #168	; 0xa8
   1b768:	ldr	r0, [r1, #12]
   1b76c:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   1b770:	ldr	r0, [r7, #16]
   1b774:	ldrh	r1, [r0, #8]
   1b778:	cmp	r1, #4
   1b77c:	bhi	1be28 <__flatcc_fb_gen_c_builder@@Base+0x17d0>
   1b780:	add	r2, pc, #12
   1b784:	ldr	r1, [r2, r1, lsl #2]
   1b788:	add	pc, r2, r1
   1b78c:	andeq	sl, r2, r5, ror #30
   1b790:	andeq	sl, r2, sl, lsl #31
   1b794:	andeq	r0, r0, ip, lsl r0
   1b798:	andeq	r0, r0, r4, asr #3
   1b79c:	muleq	r0, r4, r6
   1b7a0:	andeq	r0, r0, r8, asr r2
   1b7a4:	andeq	r0, r0, ip, lsl r1
   1b7a8:	andeq	sl, r2, sl, lsl #31
   1b7ac:	andeq	sl, r2, r2, lsr #31
   1b7b0:	ldrb	r0, [r0, #10]
   1b7b4:	tst	r0, #8
   1b7b8:	beq	1b7d8 <__flatcc_fb_gen_c_builder@@Base+0x1180>
   1b7bc:	ldr	r0, [sp, #64]	; 0x40
   1b7c0:	mov	r1, #32
   1b7c4:	mov	r2, #1
   1b7c8:	ldr	r3, [r0]
   1b7cc:	ldr	r0, [pc, #2364]	; 1c110 <__flatcc_fb_gen_c_builder@@Base+0x1ab8>
   1b7d0:	add	r0, pc, r0
   1b7d4:	bl	14850 <fwrite@plt>
   1b7d8:	ldrd	r2, [r5]
   1b7dc:	add	r1, sp, #168	; 0xa8
   1b7e0:	ldr	r0, [r4, #204]	; 0xcc
   1b7e4:	stm	sp, {r2, r3, r4, r9, sl}
   1b7e8:	str	r8, [sp, #20]
   1b7ec:	str	r1, [sp, #24]
   1b7f0:	ldr	r1, [pc, #2332]	; 1c114 <__flatcc_fb_gen_c_builder@@Base+0x1abc>
   1b7f4:	add	r1, pc, r1
   1b7f8:	b	1b504 <__flatcc_fb_gen_c_builder@@Base+0xeac>
   1b7fc:	ldr	r1, [r7, #16]
   1b800:	add	r2, sp, #168	; 0xa8
   1b804:	ldr	r0, [r1, #12]
   1b808:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   1b80c:	ldr	r0, [r7, #16]
   1b810:	ldrh	r1, [r0, #8]
   1b814:	cmp	r1, #4
   1b818:	bhi	1be7c <__flatcc_fb_gen_c_builder@@Base+0x1824>
   1b81c:	add	r2, pc, #12
   1b820:	ldr	r1, [r2, r1, lsl #2]
   1b824:	add	pc, r2, r1
   1b828:	andeq	r5, r3, ip, lsr #16
   1b82c:	andeq	r5, r3, sp, ror #16
   1b830:	andeq	r0, r0, r4, lsl r0
   1b834:	andeq	r0, r0, ip, ror r1
   1b838:	andeq	r0, r0, ip, asr #12
   1b83c:	andeq	r0, r0, ip, ror #3
   1b840:	andeq	r0, r0, r0, asr #1
   1b844:	ldrd	r2, [r5]
   1b848:	add	r1, sp, #168	; 0xa8
   1b84c:	ldr	r0, [r4, #204]	; 0xcc
   1b850:	stm	sp, {r2, r3, r4, r9, sl}
   1b854:	str	r8, [sp, #20]
   1b858:	str	r1, [sp, #24]
   1b85c:	ldr	r1, [pc, #2176]	; 1c0e4 <__flatcc_fb_gen_c_builder@@Base+0x1a8c>
   1b860:	add	r1, pc, r1
   1b864:	b	1b504 <__flatcc_fb_gen_c_builder@@Base+0xeac>
   1b868:	ldr	r0, [r1, #12]
   1b86c:	add	r5, sp, #168	; 0xa8
   1b870:	mov	r2, r5
   1b874:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   1b878:	ldr	r1, [r7, #104]	; 0x68
   1b87c:	ldr	r0, [r4, #204]	; 0xcc
   1b880:	ldrh	r1, [r1, #104]	; 0x68
   1b884:	stm	sp, {r9, sl}
   1b888:	str	r8, [sp, #8]
   1b88c:	str	r5, [sp, #12]
   1b890:	str	r5, [sp, #20]
   1b894:	str	r5, [sp, #24]
   1b898:	str	r1, [sp, #16]
   1b89c:	ldr	r1, [pc, #2072]	; 1c0bc <__flatcc_fb_gen_c_builder@@Base+0x1a64>
   1b8a0:	add	r1, pc, r1
   1b8a4:	mov	r2, r4
   1b8a8:	mov	r3, r4
   1b8ac:	b	1b65c <__flatcc_fb_gen_c_builder@@Base+0x1004>
   1b8b0:	ldrd	r2, [r5]
   1b8b4:	add	r1, sp, #168	; 0xa8
   1b8b8:	ldr	r0, [r4, #204]	; 0xcc
   1b8bc:	stm	sp, {r2, r3, r4, r9, sl}
   1b8c0:	str	r8, [sp, #20]
   1b8c4:	str	r1, [sp, #24]
   1b8c8:	mov	r2, r4
   1b8cc:	ldr	r1, [pc, #2120]	; 1c11c <__flatcc_fb_gen_c_builder@@Base+0x1ac4>
   1b8d0:	add	r1, pc, r1
   1b8d4:	bl	148bc <fprintf@plt>
   1b8d8:	ldr	r0, [r7, #16]
   1b8dc:	str	r0, [sp]
   1b8e0:	mov	r0, #1
   1b8e4:	b	1b924 <__flatcc_fb_gen_c_builder@@Base+0x12cc>
   1b8e8:	andeq	r5, r3, lr, lsr #17
   1b8ec:	andeq	r5, r3, r0, lsr #17
   1b8f0:	ldrd	r2, [r5]
   1b8f4:	add	r1, sp, #168	; 0xa8
   1b8f8:	ldr	r0, [r4, #204]	; 0xcc
   1b8fc:	stm	sp, {r2, r3, r4, r9, sl}
   1b900:	str	r8, [sp, #20]
   1b904:	str	r1, [sp, #24]
   1b908:	mov	r2, r4
   1b90c:	ldr	r1, [pc, #2008]	; 1c0ec <__flatcc_fb_gen_c_builder@@Base+0x1a94>
   1b910:	add	r1, pc, r1
   1b914:	bl	148bc <fprintf@plt>
   1b918:	ldr	r0, [r7, #16]
   1b91c:	str	r0, [sp]
   1b920:	mov	r0, #0
   1b924:	str	r0, [sp, #4]
   1b928:	mov	r0, r4
   1b92c:	mov	r1, r9
   1b930:	mov	r2, sl
   1b934:	mov	r3, r8
   1b938:	bl	1ce2c <__flatcc_fb_gen_c_builder@@Base+0x27d4>
   1b93c:	ldr	r7, [r7]
   1b940:	cmp	r7, #0
   1b944:	bne	1b518 <__flatcc_fb_gen_c_builder@@Base+0xec0>
   1b948:	b	1ba80 <__flatcc_fb_gen_c_builder@@Base+0x1428>
   1b94c:	muleq	r2, lr, r6
   1b950:	andeq	r5, r3, sp, asr #16
   1b954:	andeq	r5, r3, r2, lsr r8
   1b958:	ldrb	r0, [r0, #10]
   1b95c:	tst	r0, #8
   1b960:	beq	1b980 <__flatcc_fb_gen_c_builder@@Base+0x1328>
   1b964:	ldr	r0, [sp, #64]	; 0x40
   1b968:	mov	r1, #32
   1b96c:	mov	r2, #1
   1b970:	ldr	r3, [r0]
   1b974:	ldr	r0, [pc, #1932]	; 1c108 <__flatcc_fb_gen_c_builder@@Base+0x1ab0>
   1b978:	add	r0, pc, r0
   1b97c:	bl	14850 <fwrite@plt>
   1b980:	ldrd	r2, [r5]
   1b984:	add	r1, sp, #168	; 0xa8
   1b988:	ldr	r0, [r4, #204]	; 0xcc
   1b98c:	stm	sp, {r2, r3, r4, r9, sl}
   1b990:	str	r8, [sp, #20]
   1b994:	str	r1, [sp, #24]
   1b998:	str	r1, [sp, #28]
   1b99c:	ldr	r1, [pc, #1896]	; 1c10c <__flatcc_fb_gen_c_builder@@Base+0x1ab4>
   1b9a0:	add	r1, pc, r1
   1b9a4:	b	1b504 <__flatcc_fb_gen_c_builder@@Base+0xeac>
   1b9a8:	andeq	r5, r3, pc, lsl r8
   1b9ac:	ldr	r1, [r6, #4]
   1b9b0:	ldrd	r2, [r5]
   1b9b4:	ldr	r6, [r6]
   1b9b8:	ldrh	r5, [r7, #74]	; 0x4a
   1b9bc:	ldr	r0, [r4, #204]	; 0xcc
   1b9c0:	str	r1, [sp, #36]	; 0x24
   1b9c4:	add	r1, sp, #168	; 0xa8
   1b9c8:	str	r6, [sp, #32]
   1b9cc:	str	r5, [sp, #40]	; 0x28
   1b9d0:	stm	sp, {r2, r3, r4, r9, sl}
   1b9d4:	str	r8, [sp, #20]
   1b9d8:	str	r1, [sp, #24]
   1b9dc:	ldr	r1, [pc, #1788]	; 1c0e0 <__flatcc_fb_gen_c_builder@@Base+0x1a88>
   1b9e0:	add	r1, pc, r1
   1b9e4:	b	1b504 <__flatcc_fb_gen_c_builder@@Base+0xeac>
   1b9e8:			; <UNDEFINED> instruction: 0x000357b4
   1b9ec:	ldrd	r2, [r5]
   1b9f0:	add	r1, sp, #168	; 0xa8
   1b9f4:	ldr	r0, [r4, #204]	; 0xcc
   1b9f8:	stm	sp, {r2, r3, r4, r9, sl}
   1b9fc:	str	r8, [sp, #20]
   1ba00:	str	r1, [sp, #24]
   1ba04:	str	r1, [sp, #28]
   1ba08:	ldr	r1, [pc, #1800]	; 1c118 <__flatcc_fb_gen_c_builder@@Base+0x1ac0>
   1ba0c:	add	r1, pc, r1
   1ba10:	b	1b504 <__flatcc_fb_gen_c_builder@@Base+0xeac>
   1ba14:	andeq	r5, r3, pc, asr #15
   1ba18:	andeq	r5, r3, r2, asr r7
   1ba1c:	ldr	r0, [r0, #40]	; 0x28
   1ba20:	str	r8, [sp, #56]	; 0x38
   1ba24:	add	r8, sp, #68	; 0x44
   1ba28:	add	r1, r7, #48	; 0x30
   1ba2c:	mov	r2, r8
   1ba30:	bl	1cc34 <__flatcc_fb_gen_c_builder@@Base+0x25dc>
   1ba34:	ldr	r1, [r6, #4]
   1ba38:	ldr	r6, [r6]
   1ba3c:	add	ip, sp, #36	; 0x24
   1ba40:	ldrd	r2, [r5]
   1ba44:	ldr	r0, [r4, #204]	; 0xcc
   1ba48:	ldrh	r5, [r7, #74]	; 0x4a
   1ba4c:	str	r6, [sp, #32]
   1ba50:	stm	ip, {r1, r5, r8}
   1ba54:	ldr	r1, [sp, #56]	; 0x38
   1ba58:	stm	sp, {r2, r3, r4, r9, sl}
   1ba5c:	str	r1, [sp, #20]
   1ba60:	add	r1, sp, #168	; 0xa8
   1ba64:	str	r1, [sp, #24]
   1ba68:	str	r1, [sp, #28]
   1ba6c:	ldr	r1, [pc, #1652]	; 1c0e8 <__flatcc_fb_gen_c_builder@@Base+0x1a90>
   1ba70:	add	r1, pc, r1
   1ba74:	b	1b504 <__flatcc_fb_gen_c_builder@@Base+0xeac>
   1ba78:	andeq	r5, r3, fp, lsr #15
   1ba7c:	ldrdeq	r5, [r3], -r8
   1ba80:	ldr	r1, [r4, #204]	; 0xcc
   1ba84:	mov	r0, #10
   1ba88:	bl	1491c <fputc@plt>
   1ba8c:	ldr	r5, [sp, #60]	; 0x3c
   1ba90:	mov	r0, r9
   1ba94:	mov	r1, #0
   1ba98:	mov	r2, #220	; 0xdc
   1ba9c:	ldrh	r6, [r5, #92]	; 0x5c
   1baa0:	bl	148d4 <memset@plt>
   1baa4:	ldr	r0, [r5, #12]
   1baa8:	mov	r1, r5
   1baac:	mov	r2, r9
   1bab0:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   1bab4:	ldr	r0, [r4, #204]	; 0xcc
   1bab8:	stm	sp, {r4, r9}
   1babc:	mov	r2, r9
   1bac0:	mov	r3, r9
   1bac4:	ldr	r1, [pc, #1448]	; 1c074 <__flatcc_fb_gen_c_builder@@Base+0x1a1c>
   1bac8:	add	r1, pc, r1
   1bacc:	bl	148bc <fprintf@plt>
   1bad0:	ldr	r0, [r4, #204]	; 0xcc
   1bad4:	ldr	r1, [pc, #1436]	; 1c078 <__flatcc_fb_gen_c_builder@@Base+0x1a20>
   1bad8:	mov	r2, r9
   1badc:	add	r1, pc, r1
   1bae0:	bl	148bc <fprintf@plt>
   1bae4:	ldr	r5, [r5, #24]
   1bae8:	ldr	sl, [sp, #64]	; 0x40
   1baec:	cmp	r5, #0
   1baf0:	beq	1b424 <__flatcc_fb_gen_c_builder@@Base+0xdcc>
   1baf4:	ands	r9, r6, #8
   1baf8:	mov	r0, #0
   1bafc:	str	r9, [sp, #56]	; 0x38
   1bb00:	movwne	r9, #1
   1bb04:	b	1bb54 <__flatcc_fb_gen_c_builder@@Base+0x14fc>
   1bb08:	andeq	r5, r3, sp, asr r7
   1bb0c:	andeq	r5, r3, r6, ror r6
   1bb10:	ldr	r1, [pc, #1384]	; 1c080 <__flatcc_fb_gen_c_builder@@Base+0x1a28>
   1bb14:	mov	r6, r0
   1bb18:	add	r1, pc, r1
   1bb1c:	ldr	sl, [sp, #64]	; 0x40
   1bb20:	ldr	r2, [r5, #96]	; 0x60
   1bb24:	ldr	r7, [r5, #100]	; 0x64
   1bb28:	ldr	r0, [sl]
   1bb2c:	str	r2, [sp, #8]
   1bb30:	sub	r2, fp, #256	; 0x100
   1bb34:	str	r7, [sp, #12]
   1bb38:	str	r4, [sp]
   1bb3c:	bl	148bc <fprintf@plt>
   1bb40:	mov	r0, r6
   1bb44:	mov	r4, r8
   1bb48:	ldr	r5, [r5, #108]	; 0x6c
   1bb4c:	cmp	r5, #0
   1bb50:	beq	1bbb4 <__flatcc_fb_gen_c_builder@@Base+0x155c>
   1bb54:	ldrb	r1, [r5, #72]	; 0x48
   1bb58:	tst	r1, #4
   1bb5c:	bne	1bb48 <__flatcc_fb_gen_c_builder@@Base+0x14f0>
   1bb60:	ldr	r1, [r5, #4]
   1bb64:	mov	r8, r4
   1bb68:	ldr	r4, [r1]
   1bb6c:	ldr	r3, [r1, #4]
   1bb70:	ldrh	r1, [r5, #24]
   1bb74:	cmp	r1, #14
   1bb78:	bne	1bb10 <__flatcc_fb_gen_c_builder@@Base+0x14b8>
   1bb7c:	ldr	r1, [r5, #16]
   1bb80:	mov	r6, #1
   1bb84:	ldrh	r1, [r1, #8]
   1bb88:	cmp	r1, #4
   1bb8c:	moveq	r0, r6
   1bb90:	subs	r1, r1, #4
   1bb94:	movwne	r1, #1
   1bb98:	orr	r1, r1, r9
   1bb9c:	cmp	r1, #1
   1bba0:	ldr	r1, [pc, #1236]	; 1c07c <__flatcc_fb_gen_c_builder@@Base+0x1a24>
   1bba4:	add	r1, pc, r1
   1bba8:	beq	1bb10 <__flatcc_fb_gen_c_builder@@Base+0x14b8>
   1bbac:	b	1bb1c <__flatcc_fb_gen_c_builder@@Base+0x14c4>
   1bbb0:	andeq	r5, r3, pc, lsl r7
   1bbb4:	ldr	r1, [sp, #56]	; 0x38
   1bbb8:	sub	r9, fp, #256	; 0x100
   1bbbc:	cmp	r1, #0
   1bbc0:	ldr	r1, [sp, #60]	; 0x3c
   1bbc4:	bne	1b424 <__flatcc_fb_gen_c_builder@@Base+0xdcc>
   1bbc8:	cmp	r0, #0
   1bbcc:	beq	1b424 <__flatcc_fb_gen_c_builder@@Base+0xdcc>
   1bbd0:	ldr	r5, [r1, #24]
   1bbd4:	cmp	r5, #0
   1bbd8:	bne	1bbf4 <__flatcc_fb_gen_c_builder@@Base+0x159c>
   1bbdc:	b	1b424 <__flatcc_fb_gen_c_builder@@Base+0xdcc>
   1bbe0:	andeq	r5, r3, r3, asr r5
   1bbe4:	andeq	r5, r3, r1, asr #10
   1bbe8:	ldr	r5, [r5, #108]	; 0x6c
   1bbec:	cmp	r5, #0
   1bbf0:	beq	1b424 <__flatcc_fb_gen_c_builder@@Base+0xdcc>
   1bbf4:	ldrb	r0, [r5, #72]	; 0x48
   1bbf8:	tst	r0, #4
   1bbfc:	bne	1bbe8 <__flatcc_fb_gen_c_builder@@Base+0x1590>
   1bc00:	ldrh	r0, [r5, #24]
   1bc04:	cmp	r0, #14
   1bc08:	bne	1bbe8 <__flatcc_fb_gen_c_builder@@Base+0x1590>
   1bc0c:	ldr	r0, [r5, #16]
   1bc10:	ldrh	r0, [r0, #8]
   1bc14:	cmp	r0, #4
   1bc18:	bne	1bbe8 <__flatcc_fb_gen_c_builder@@Base+0x1590>
   1bc1c:	ldr	r1, [r5, #4]
   1bc20:	ldr	r2, [r5, #96]	; 0x60
   1bc24:	ldr	r7, [r5, #100]	; 0x64
   1bc28:	ldr	r0, [sl]
   1bc2c:	ldr	r6, [r1]
   1bc30:	ldr	r3, [r1, #4]
   1bc34:	str	r2, [sp, #8]
   1bc38:	str	r7, [sp, #12]
   1bc3c:	mov	r2, r9
   1bc40:	str	r6, [sp]
   1bc44:	ldr	r1, [pc, #1080]	; 1c084 <__flatcc_fb_gen_c_builder@@Base+0x1a2c>
   1bc48:	add	r1, pc, r1
   1bc4c:	bl	148bc <fprintf@plt>
   1bc50:	b	1bbe8 <__flatcc_fb_gen_c_builder@@Base+0x1590>
   1bc54:	strdeq	sl, [r3], -r5
   1bc58:	ldrdeq	r5, [r3], -r5	; <UNPREDICTABLE>
   1bc5c:	mov	r0, r4
   1bc60:	bl	1ca3c <__flatcc_fb_gen_c_builder@@Base+0x23e4>
   1bc64:	ldr	r0, [r4, #212]	; 0xd4
   1bc68:	ldr	r0, [r0, #140]	; 0x8c
   1bc6c:	cmp	r0, #0
   1bc70:	beq	1bc8c <__flatcc_fb_gen_c_builder@@Base+0x1634>
   1bc74:	ldr	r3, [sl]
   1bc78:	ldr	r0, [pc, #1040]	; 1c090 <__flatcc_fb_gen_c_builder@@Base+0x1a38>
   1bc7c:	mov	r1, #36	; 0x24
   1bc80:	mov	r2, #1
   1bc84:	add	r0, pc, r0
   1bc88:	bl	14850 <fwrite@plt>
   1bc8c:	ldr	r1, [r4, #208]	; 0xd0
   1bc90:	ldr	r0, [r4, #204]	; 0xcc
   1bc94:	ldr	r2, [r1, #164]	; 0xa4
   1bc98:	ldr	r1, [pc, #1012]	; 1c094 <__flatcc_fb_gen_c_builder@@Base+0x1a3c>
   1bc9c:	add	r1, pc, r1
   1bca0:	bl	148bc <fprintf@plt>
   1bca4:	mov	r0, #0
   1bca8:	sub	sp, fp, #28
   1bcac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bcb0:			; <UNDEFINED> instruction: 0x000356b7
   1bcb4:	strheq	r6, [r2], -fp
   1bcb8:	ldr	r0, [pc, #908]	; 1c04c <__flatcc_fb_gen_c_builder@@Base+0x19f4>
   1bcbc:	movw	r3, #1209	; 0x4b9
   1bcc0:	ldr	r0, [pc, r0]
   1bcc4:	ldr	r0, [r0]
   1bcc8:	ldr	r1, [pc, #896]	; 1c050 <__flatcc_fb_gen_c_builder@@Base+0x19f8>
   1bccc:	add	r1, pc, r1
   1bcd0:	str	r1, [sp]
   1bcd4:	ldr	r1, [pc, #888]	; 1c054 <__flatcc_fb_gen_c_builder@@Base+0x19fc>
   1bcd8:	ldr	r4, [pc, #888]	; 1c058 <__flatcc_fb_gen_c_builder@@Base+0x1a00>
   1bcdc:	add	r4, pc, r4
   1bce0:	add	r1, pc, r1
   1bce4:	mov	r2, r4
   1bce8:	bl	148bc <fprintf@plt>
   1bcec:	ldr	r0, [pc, #872]	; 1c05c <__flatcc_fb_gen_c_builder@@Base+0x1a04>
   1bcf0:	ldr	r3, [pc, #872]	; 1c060 <__flatcc_fb_gen_c_builder@@Base+0x1a08>
   1bcf4:	mov	r1, r4
   1bcf8:	movw	r2, #1209	; 0x4b9
   1bcfc:	add	r0, pc, r0
   1bd00:	add	r3, pc, r3
   1bd04:	bl	1497c <__assert_fail@plt>
   1bd08:	andeq	r5, r3, r1, asr #16
   1bd0c:	ldr	r0, [pc, #1060]	; 1c138 <__flatcc_fb_gen_c_builder@@Base+0x1ae0>
   1bd10:	movw	r3, #1512	; 0x5e8
   1bd14:	ldr	r0, [pc, r0]
   1bd18:	ldr	r0, [r0]
   1bd1c:	ldr	r1, [pc, #1048]	; 1c13c <__flatcc_fb_gen_c_builder@@Base+0x1ae4>
   1bd20:	add	r1, pc, r1
   1bd24:	str	r1, [sp]
   1bd28:	ldr	r1, [pc, #1040]	; 1c140 <__flatcc_fb_gen_c_builder@@Base+0x1ae8>
   1bd2c:	ldr	r4, [pc, #1040]	; 1c144 <__flatcc_fb_gen_c_builder@@Base+0x1aec>
   1bd30:	add	r4, pc, r4
   1bd34:	add	r1, pc, r1
   1bd38:	mov	r2, r4
   1bd3c:	bl	148bc <fprintf@plt>
   1bd40:	ldr	r0, [pc, #1024]	; 1c148 <__flatcc_fb_gen_c_builder@@Base+0x1af0>
   1bd44:	ldr	r3, [pc, #1024]	; 1c14c <__flatcc_fb_gen_c_builder@@Base+0x1af4>
   1bd48:	mov	r1, r4
   1bd4c:	movw	r2, #1512	; 0x5e8
   1bd50:	add	r0, pc, r0
   1bd54:	add	r3, pc, r3
   1bd58:	bl	1497c <__assert_fail@plt>
   1bd5c:	ldr	r0, [pc, #1004]	; 1c150 <__flatcc_fb_gen_c_builder@@Base+0x1af8>
   1bd60:	ldr	r1, [pc, #1004]	; 1c154 <__flatcc_fb_gen_c_builder@@Base+0x1afc>
   1bd64:	ldr	r3, [pc, #1004]	; 1c158 <__flatcc_fb_gen_c_builder@@Base+0x1b00>
   1bd68:	movw	r2, #1010	; 0x3f2
   1bd6c:	add	r0, pc, r0
   1bd70:	add	r1, pc, r1
   1bd74:	add	r3, pc, r3
   1bd78:	bl	1497c <__assert_fail@plt>
   1bd7c:	andeq	r5, r3, r3, asr #16
   1bd80:	andeq	r5, r3, fp, lsr #16
   1bd84:	ldr	r0, [pc, #612]	; 1bff0 <__flatcc_fb_gen_c_builder@@Base+0x1998>
   1bd88:	movw	r3, #1173	; 0x495
   1bd8c:	ldr	r0, [pc, r0]
   1bd90:	ldr	r0, [r0]
   1bd94:	ldr	r1, [pc, #600]	; 1bff4 <__flatcc_fb_gen_c_builder@@Base+0x199c>
   1bd98:	add	r1, pc, r1
   1bd9c:	str	r1, [sp]
   1bda0:	ldr	r1, [pc, #592]	; 1bff8 <__flatcc_fb_gen_c_builder@@Base+0x19a0>
   1bda4:	ldr	r4, [pc, #592]	; 1bffc <__flatcc_fb_gen_c_builder@@Base+0x19a4>
   1bda8:	add	r4, pc, r4
   1bdac:	add	r1, pc, r1
   1bdb0:	mov	r2, r4
   1bdb4:	bl	148bc <fprintf@plt>
   1bdb8:	ldr	r0, [pc, #576]	; 1c000 <__flatcc_fb_gen_c_builder@@Base+0x19a8>
   1bdbc:	ldr	r3, [pc, #576]	; 1c004 <__flatcc_fb_gen_c_builder@@Base+0x19ac>
   1bdc0:	mov	r1, r4
   1bdc4:	movw	r2, #1173	; 0x495
   1bdc8:	add	r0, pc, r0
   1bdcc:	add	r3, pc, r3
   1bdd0:	bl	1497c <__assert_fail@plt>
   1bdd4:	andeq	r5, r3, sl, ror #15
   1bdd8:	ldr	r0, [pc, #892]	; 1c15c <__flatcc_fb_gen_c_builder@@Base+0x1b04>
   1bddc:	mov	r3, #141	; 0x8d
   1bde0:	ldr	r0, [pc, r0]
   1bde4:	ldr	r0, [r0]
   1bde8:	ldr	r1, [pc, #880]	; 1c160 <__flatcc_fb_gen_c_builder@@Base+0x1b08>
   1bdec:	add	r1, pc, r1
   1bdf0:	str	r1, [sp]
   1bdf4:	ldr	r1, [pc, #872]	; 1c164 <__flatcc_fb_gen_c_builder@@Base+0x1b0c>
   1bdf8:	ldr	r4, [pc, #872]	; 1c168 <__flatcc_fb_gen_c_builder@@Base+0x1b10>
   1bdfc:	add	r4, pc, r4
   1be00:	add	r1, pc, r1
   1be04:	mov	r2, r4
   1be08:	bl	148bc <fprintf@plt>
   1be0c:	ldr	r0, [pc, #856]	; 1c16c <__flatcc_fb_gen_c_builder@@Base+0x1b14>
   1be10:	ldr	r3, [pc, #856]	; 1c170 <__flatcc_fb_gen_c_builder@@Base+0x1b18>
   1be14:	mov	r1, r4
   1be18:	mov	r2, #141	; 0x8d
   1be1c:	add	r0, pc, r0
   1be20:	add	r3, pc, r3
   1be24:	bl	1497c <__assert_fail@plt>
   1be28:	ldr	r0, [pc, #752]	; 1c120 <__flatcc_fb_gen_c_builder@@Base+0x1ac8>
   1be2c:	movw	r3, #1507	; 0x5e3
   1be30:	ldr	r0, [pc, r0]
   1be34:	ldr	r0, [r0]
   1be38:	ldr	r1, [pc, #740]	; 1c124 <__flatcc_fb_gen_c_builder@@Base+0x1acc>
   1be3c:	add	r1, pc, r1
   1be40:	str	r1, [sp]
   1be44:	ldr	r1, [pc, #732]	; 1c128 <__flatcc_fb_gen_c_builder@@Base+0x1ad0>
   1be48:	ldr	r4, [pc, #732]	; 1c12c <__flatcc_fb_gen_c_builder@@Base+0x1ad4>
   1be4c:	add	r4, pc, r4
   1be50:	add	r1, pc, r1
   1be54:	mov	r2, r4
   1be58:	bl	148bc <fprintf@plt>
   1be5c:	ldr	r0, [pc, #716]	; 1c130 <__flatcc_fb_gen_c_builder@@Base+0x1ad8>
   1be60:	ldr	r3, [pc, #716]	; 1c134 <__flatcc_fb_gen_c_builder@@Base+0x1adc>
   1be64:	mov	r1, r4
   1be68:	movw	r2, #1507	; 0x5e3
   1be6c:	add	r0, pc, r0
   1be70:	add	r3, pc, r3
   1be74:	bl	1497c <__assert_fail@plt>
   1be78:	andeq	r5, r3, r2, lsr r7
   1be7c:	ldr	r0, [pc, #620]	; 1c0f0 <__flatcc_fb_gen_c_builder@@Base+0x1a98>
   1be80:	mov	r3, #1472	; 0x5c0
   1be84:	ldr	r0, [pc, r0]
   1be88:	ldr	r0, [r0]
   1be8c:	ldr	r1, [pc, #608]	; 1c0f4 <__flatcc_fb_gen_c_builder@@Base+0x1a9c>
   1be90:	add	r1, pc, r1
   1be94:	str	r1, [sp]
   1be98:	ldr	r1, [pc, #600]	; 1c0f8 <__flatcc_fb_gen_c_builder@@Base+0x1aa0>
   1be9c:	ldr	r4, [pc, #600]	; 1c0fc <__flatcc_fb_gen_c_builder@@Base+0x1aa4>
   1bea0:	add	r4, pc, r4
   1bea4:	add	r1, pc, r1
   1bea8:	mov	r2, r4
   1beac:	bl	148bc <fprintf@plt>
   1beb0:	ldr	r0, [pc, #584]	; 1c100 <__flatcc_fb_gen_c_builder@@Base+0x1aa8>
   1beb4:	ldr	r3, [pc, #584]	; 1c104 <__flatcc_fb_gen_c_builder@@Base+0x1aac>
   1beb8:	mov	r1, r4
   1bebc:	mov	r2, #1472	; 0x5c0
   1bec0:	add	r0, pc, r0
   1bec4:	add	r3, pc, r3
   1bec8:	bl	1497c <__assert_fail@plt>
   1becc:	ldr	r0, [pc, #316]	; 1c010 <__flatcc_fb_gen_c_builder@@Base+0x19b8>
   1bed0:	movw	r3, #1189	; 0x4a5
   1bed4:	ldr	r0, [pc, r0]
   1bed8:	ldr	r0, [r0]
   1bedc:	ldr	r1, [pc, #304]	; 1c014 <__flatcc_fb_gen_c_builder@@Base+0x19bc>
   1bee0:	add	r1, pc, r1
   1bee4:	str	r1, [sp]
   1bee8:	ldr	r1, [pc, #296]	; 1c018 <__flatcc_fb_gen_c_builder@@Base+0x19c0>
   1beec:	ldr	r4, [pc, #296]	; 1c01c <__flatcc_fb_gen_c_builder@@Base+0x19c4>
   1bef0:	add	r4, pc, r4
   1bef4:	add	r1, pc, r1
   1bef8:	mov	r2, r4
   1befc:	bl	148bc <fprintf@plt>
   1bf00:	ldr	r0, [pc, #280]	; 1c020 <__flatcc_fb_gen_c_builder@@Base+0x19c8>
   1bf04:	ldr	r3, [pc, #280]	; 1c024 <__flatcc_fb_gen_c_builder@@Base+0x19cc>
   1bf08:	mov	r1, r4
   1bf0c:	movw	r2, #1189	; 0x4a5
   1bf10:	add	r0, pc, r0
   1bf14:	add	r3, pc, r3
   1bf18:	bl	1497c <__assert_fail@plt>
   1bf1c:	andeq	r5, r3, fp, ror r4
   1bf20:	andeq	r4, r2, r5, ror #14
   1bf24:	andeq	sl, r3, r5, lsr #24
   1bf28:	andeq	r5, r3, r6, lsl #13
   1bf2c:	ldr	r0, [pc, #576]	; 1c174 <__flatcc_fb_gen_c_builder@@Base+0x1b1c>
   1bf30:	mov	r3, #96	; 0x60
   1bf34:	ldr	r0, [pc, r0]
   1bf38:	ldr	r0, [r0]
   1bf3c:	ldr	r1, [pc, #564]	; 1c178 <__flatcc_fb_gen_c_builder@@Base+0x1b20>
   1bf40:	add	r1, pc, r1
   1bf44:	str	r1, [sp]
   1bf48:	ldr	r1, [pc, #556]	; 1c17c <__flatcc_fb_gen_c_builder@@Base+0x1b24>
   1bf4c:	ldr	r4, [pc, #556]	; 1c180 <__flatcc_fb_gen_c_builder@@Base+0x1b28>
   1bf50:	add	r4, pc, r4
   1bf54:	add	r1, pc, r1
   1bf58:	mov	r2, r4
   1bf5c:	bl	148bc <fprintf@plt>
   1bf60:	ldr	r0, [pc, #540]	; 1c184 <__flatcc_fb_gen_c_builder@@Base+0x1b2c>
   1bf64:	ldr	r3, [pc, #540]	; 1c188 <__flatcc_fb_gen_c_builder@@Base+0x1b30>
   1bf68:	mov	r1, r4
   1bf6c:	mov	r2, #96	; 0x60
   1bf70:	add	r0, pc, r0
   1bf74:	add	r3, pc, r3
   1bf78:	bl	1497c <__assert_fail@plt>
   1bf7c:	ldr	r0, [pc, #316]	; 1c0c0 <__flatcc_fb_gen_c_builder@@Base+0x1a68>
   1bf80:	movw	r3, #1430	; 0x596
   1bf84:	ldr	r0, [pc, r0]
   1bf88:	ldr	r0, [r0]
   1bf8c:	ldr	r1, [pc, #304]	; 1c0c4 <__flatcc_fb_gen_c_builder@@Base+0x1a6c>
   1bf90:	add	r1, pc, r1
   1bf94:	str	r1, [sp]
   1bf98:	ldr	r1, [pc, #296]	; 1c0c8 <__flatcc_fb_gen_c_builder@@Base+0x1a70>
   1bf9c:	ldr	r4, [pc, #296]	; 1c0cc <__flatcc_fb_gen_c_builder@@Base+0x1a74>
   1bfa0:	add	r4, pc, r4
   1bfa4:	add	r1, pc, r1
   1bfa8:	mov	r2, r4
   1bfac:	bl	148bc <fprintf@plt>
   1bfb0:	ldr	r0, [pc, #280]	; 1c0d0 <__flatcc_fb_gen_c_builder@@Base+0x1a78>
   1bfb4:	ldr	r3, [pc, #280]	; 1c0d4 <__flatcc_fb_gen_c_builder@@Base+0x1a7c>
   1bfb8:	mov	r1, r4
   1bfbc:	movw	r2, #1430	; 0x596
   1bfc0:	add	r0, pc, r0
   1bfc4:	add	r3, pc, r3
   1bfc8:	bl	1497c <__assert_fail@plt>
   1bfcc:	andeq	r5, r3, r9, asr #12
   1bfd0:	andeq	r5, r3, r3, lsl r1
   1bfd4:	andeq	sl, r3, r9, asr #20
   1bfd8:	andeq	r5, r3, pc, lsr #5
   1bfdc:			; <UNDEFINED> instruction: 0x00025cb3
   1bfe0:	andeq	r5, r3, r1, ror #6
   1bfe4:	andeq	r5, r3, r1, asr r3
   1bfe8:			; <UNDEFINED> instruction: 0x000353b5
   1bfec:	andeq	r5, r3, r8, lsr #7
   1bff0:	andeq	pc, r4, r0, lsl r3	; <UNPREDICTABLE>
   1bff4:	andeq	r4, r3, r1, lsl r9
   1bff8:	ldrdeq	r3, [r2], -sl
   1bffc:	andeq	r4, r3, lr, lsl r3
   1c000:	andeq	r4, r3, r6, lsl #13
   1c004:	andeq	r4, r3, r9, lsl #18
   1c008:	andeq	r5, r3, sp, asr #13
   1c00c:	andeq	r5, r3, fp, lsr #9
   1c010:	andeq	pc, r4, r8, asr #3
   1c014:	andeq	r4, r3, r8, asr r8
   1c018:	muleq	r2, r2, r6
   1c01c:	ldrdeq	r4, [r3], -r6
   1c020:	andeq	r4, r3, lr, lsr r5
   1c024:	andeq	r4, r3, r1, asr #15
   1c028:	andeq	r4, r2, r2, lsr #9
   1c02c:	andeq	pc, r4, ip, lsl #24
   1c030:	andeq	r5, r3, r8, asr r5
   1c034:	muleq	r4, r8, ip
   1c038:	andeq	r5, r3, r7, asr #11
   1c03c:	andeq	r4, r3, r9, asr #28
   1c040:	andeq	sl, r3, r1, lsl r8
   1c044:	andeq	r5, r3, r0, asr #11
   1c048:	andeq	r5, r3, sp, ror #10
   1c04c:	ldrdeq	pc, [r4], -ip
   1c050:	andeq	r4, r3, r5, ror #12
   1c054:	andeq	r3, r2, r6, lsr #17
   1c058:	andeq	r4, r3, sl, ror #7
   1c05c:	andeq	r4, r3, r2, asr r7
   1c060:	ldrdeq	r4, [r3], -r5
   1c064:	andeq	r4, r3, pc, asr #31
   1c068:	ldrdeq	r5, [r2], -r3
   1c06c:	strdeq	r5, [r3], -r1
   1c070:	andeq	r5, r3, sp, asr r3
   1c074:	andeq	r5, r3, r2, ror #8
   1c078:	muleq	r3, r1, r4
   1c07c:	ldrdeq	r5, [r3], -pc	; <UNPREDICTABLE>
   1c080:	muleq	r3, r3, r4
   1c084:	andeq	r5, r3, r5, lsl #7
   1c088:	andeq	r5, r3, r9, asr #23
   1c08c:			; <UNDEFINED> instruction: 0x00035bb6
   1c090:			; <UNDEFINED> instruction: 0x000297b6
   1c094:	ldrdeq	r5, [r3], -r5	; <UNPREDICTABLE>
   1c098:	andeq	pc, r4, r8, lsl r7	; <UNPREDICTABLE>
   1c09c:	andeq	r3, r2, r2, lsr #31
   1c0a0:	andeq	pc, r4, ip, lsl #14
   1c0a4:			; <UNDEFINED> instruction: 0x000352b3
   1c0a8:	andeq	pc, r4, r0, ror r8	; <UNPREDICTABLE>
   1c0ac:	strdeq	r4, [r2], -sl
   1c0b0:	andeq	pc, r4, r0, ror r8	; <UNPREDICTABLE>
   1c0b4:	andeq	r5, r3, ip, asr #8
   1c0b8:	andeq	r5, r3, pc, lsr #8
   1c0bc:	andeq	r5, r3, r8, lsl r2
   1c0c0:	andeq	pc, r4, r8, lsl r1	; <UNPREDICTABLE>
   1c0c4:	andeq	r4, r3, lr, ror fp
   1c0c8:	andeq	r3, r2, r2, ror #11
   1c0cc:	andeq	r4, r3, r6, lsr #2
   1c0d0:	andeq	r4, r3, lr, lsl #9
   1c0d4:	andeq	r4, r3, r1, ror fp
   1c0d8:	andeq	r5, r3, r7, ror r6
   1c0dc:	andeq	r5, r3, sl, asr #8
   1c0e0:	strdeq	r5, [r3], -r4
   1c0e4:	andeq	r5, r3, sp, lsr #7
   1c0e8:	andeq	r5, r3, fp, asr #3
   1c0ec:	andeq	r5, r3, r3, ror r3
   1c0f0:	andeq	pc, r4, r8, lsl r2	; <UNPREDICTABLE>
   1c0f4:	andeq	sl, r2, r0, ror #26
   1c0f8:	andeq	r3, r2, r2, ror #13
   1c0fc:	andeq	r4, r3, r6, lsr #4
   1c100:	andeq	r4, r3, lr, lsl #11
   1c104:	andeq	r4, r3, r1, ror ip
   1c108:	andeq	r5, r3, r9, lsr r3
   1c10c:	andeq	r5, r3, r2, lsr r3
   1c110:	andeq	r5, r3, r1, ror #9
   1c114:	andeq	r5, r3, r3, lsl r5
   1c118:	andeq	r5, r3, r0, lsr r3
   1c11c:	andeq	r5, r3, r6, lsr #9
   1c120:	andeq	pc, r4, ip, ror #4
   1c124:	strdeq	sl, [r2], -sp
   1c128:	andeq	r3, r2, r6, lsr r7
   1c12c:	andeq	r4, r3, sl, ror r2
   1c130:	andeq	r4, r3, r2, ror #11
   1c134:	andeq	r4, r3, r5, asr #25
   1c138:	andeq	pc, r4, r8, lsl #7
   1c13c:	ldrdeq	sl, [r2], -fp
   1c140:	andeq	r3, r2, r2, asr r8
   1c144:	muleq	r3, r6, r3
   1c148:	strdeq	r4, [r3], -lr
   1c14c:	andeq	r4, r3, r1, ror #27
   1c150:	andeq	sl, r2, lr, asr #2
   1c154:	andeq	r4, r3, r6, asr r3
   1c158:			; <UNDEFINED> instruction: 0x000343ba
   1c15c:			; <UNDEFINED> instruction: 0x0004f2bc
   1c160:	andeq	r9, r2, r9, lsr #31
   1c164:	andeq	r3, r2, r6, lsl #15
   1c168:	andeq	r9, r2, r9, lsr pc
   1c16c:	andeq	r4, r3, r2, lsr r6
   1c170:	andeq	r9, r2, ip, lsr #31
   1c174:	andeq	pc, r4, r8, ror #2
   1c178:	andeq	r9, r2, r5, asr lr
   1c17c:	andeq	r3, r2, r2, lsr r6
   1c180:	andeq	r9, r2, r5, ror #27
   1c184:	ldrdeq	r4, [r3], -lr
   1c188:	andeq	sl, r2, r1, asr r7
   1c18c:	push	{r4, r5, fp, lr}
   1c190:	add	fp, sp, #8
   1c194:	ldr	r5, [r0, #20]
   1c198:	mov	r4, #0
   1c19c:	cmp	r5, #0
   1c1a0:	bne	1c1b8 <__flatcc_fb_gen_c_builder@@Base+0x1b60>
   1c1a4:	b	1c1f4 <__flatcc_fb_gen_c_builder@@Base+0x1b9c>
   1c1a8:	add	r4, r4, #1
   1c1ac:	ldr	r5, [r5]
   1c1b0:	cmp	r5, #0
   1c1b4:	beq	1c1f4 <__flatcc_fb_gen_c_builder@@Base+0x1b9c>
   1c1b8:	ldrb	r0, [r5, #72]	; 0x48
   1c1bc:	tst	r0, #4
   1c1c0:	bne	1c1ac <__flatcc_fb_gen_c_builder@@Base+0x1b54>
   1c1c4:	ldrh	r0, [r5, #24]
   1c1c8:	cmp	r0, #14
   1c1cc:	bne	1c1a8 <__flatcc_fb_gen_c_builder@@Base+0x1b50>
   1c1d0:	ldr	r0, [r5, #16]
   1c1d4:	ldrh	r1, [r0, #8]
   1c1d8:	cmp	r1, #1
   1c1dc:	bne	1c1a8 <__flatcc_fb_gen_c_builder@@Base+0x1b50>
   1c1e0:	bl	1c18c <__flatcc_fb_gen_c_builder@@Base+0x1b34>
   1c1e4:	ldr	r5, [r5]
   1c1e8:	add	r4, r0, r4
   1c1ec:	cmp	r5, #0
   1c1f0:	bne	1c1b8 <__flatcc_fb_gen_c_builder@@Base+0x1b60>
   1c1f4:	mov	r0, r4
   1c1f8:	pop	{r4, r5, fp, pc}
   1c1fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c200:	add	fp, sp, #28
   1c204:	sub	sp, sp, #236	; 0xec
   1c208:	mov	r4, r2
   1c20c:	mov	r7, r1
   1c210:	mov	r6, r0
   1c214:	add	r0, sp, #8
   1c218:	mov	r1, #0
   1c21c:	mov	r2, #220	; 0xdc
   1c220:	mov	r5, r3
   1c224:	bl	148d4 <memset@plt>
   1c228:	ldr	sl, [r7, #20]
   1c22c:	cmp	sl, #0
   1c230:	beq	1c3e8 <__flatcc_fb_gen_c_builder@@Base+0x1d90>
   1c234:	ldr	r0, [pc, #600]	; 1c494 <__flatcc_fb_gen_c_builder@@Base+0x1e3c>
   1c238:	ldr	r1, [fp, #8]
   1c23c:	ldr	r7, [pc, #596]	; 1c498 <__flatcc_fb_gen_c_builder@@Base+0x1e40>
   1c240:	ldr	r8, [pc, #596]	; 1c49c <__flatcc_fb_gen_c_builder@@Base+0x1e44>
   1c244:	add	r9, sp, #8
   1c248:	add	r0, pc, r0
   1c24c:	cmp	r1, #0
   1c250:	add	r7, pc, r7
   1c254:	add	r8, pc, r8
   1c258:	moveq	r7, r0
   1c25c:	b	1c2ac <__flatcc_fb_gen_c_builder@@Base+0x1c54>
   1c260:	ldr	r0, [pc, #568]	; 1c4a0 <__flatcc_fb_gen_c_builder@@Base+0x1e48>
   1c264:	mov	r1, #2
   1c268:	mov	r2, #1
   1c26c:	add	r0, pc, r0
   1c270:	bl	14850 <fwrite@plt>
   1c274:	ldr	r1, [sl, #16]
   1c278:	mov	r2, r9
   1c27c:	ldr	r0, [r1, #12]
   1c280:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   1c284:	ldr	r0, [r6, #204]	; 0xcc
   1c288:	ldr	r1, [pc, #536]	; 1c4a8 <__flatcc_fb_gen_c_builder@@Base+0x1e50>
   1c28c:	mov	r2, r9
   1c290:	mov	r3, r4
   1c294:	add	r1, pc, r1
   1c298:	bl	148bc <fprintf@plt>
   1c29c:	add	r4, r4, #1
   1c2a0:	ldr	sl, [sl]
   1c2a4:	cmp	sl, #0
   1c2a8:	beq	1c3e8 <__flatcc_fb_gen_c_builder@@Base+0x1d90>
   1c2ac:	ldrb	r0, [sl, #72]	; 0x48
   1c2b0:	tst	r0, #4
   1c2b4:	bne	1c2a0 <__flatcc_fb_gen_c_builder@@Base+0x1c48>
   1c2b8:	ldrh	r0, [sl, #24]
   1c2bc:	cmp	r0, #8
   1c2c0:	beq	1c2fc <__flatcc_fb_gen_c_builder@@Base+0x1ca4>
   1c2c4:	cmp	r0, #14
   1c2c8:	bne	1c3f4 <__flatcc_fb_gen_c_builder@@Base+0x1d9c>
   1c2cc:	ldr	r1, [sl, #16]
   1c2d0:	ldrh	r0, [r1, #8]
   1c2d4:	cmp	r0, #1
   1c2d8:	bne	1c33c <__flatcc_fb_gen_c_builder@@Base+0x1ce4>
   1c2dc:	ldr	r0, [fp, #8]
   1c2e0:	mov	r2, r4
   1c2e4:	mov	r3, r5
   1c2e8:	str	r0, [sp]
   1c2ec:	mov	r0, r6
   1c2f0:	bl	1c1fc <__flatcc_fb_gen_c_builder@@Base+0x1ba4>
   1c2f4:	mov	r4, r0
   1c2f8:	b	1c2a0 <__flatcc_fb_gen_c_builder@@Base+0x1c48>
   1c2fc:	cmp	r5, #0
   1c300:	beq	1c388 <__flatcc_fb_gen_c_builder@@Base+0x1d30>
   1c304:	cmp	r4, #0
   1c308:	beq	1c368 <__flatcc_fb_gen_c_builder@@Base+0x1d10>
   1c30c:	ldr	r3, [r6, #204]	; 0xcc
   1c310:	tst	r4, #3
   1c314:	bne	1c374 <__flatcc_fb_gen_c_builder@@Base+0x1d1c>
   1c318:	sub	r0, r5, r4
   1c31c:	cmp	r0, #2
   1c320:	ble	1c374 <__flatcc_fb_gen_c_builder@@Base+0x1d1c>
   1c324:	ldr	r1, [pc, #388]	; 1c4b0 <__flatcc_fb_gen_c_builder@@Base+0x1e58>
   1c328:	mov	r0, r3
   1c32c:	mov	r2, r7
   1c330:	add	r1, pc, r1
   1c334:	bl	148bc <fprintf@plt>
   1c338:	b	1c388 <__flatcc_fb_gen_c_builder@@Base+0x1d30>
   1c33c:	cmp	r5, #0
   1c340:	beq	1c274 <__flatcc_fb_gen_c_builder@@Base+0x1c1c>
   1c344:	cmp	r4, #0
   1c348:	beq	1c3c4 <__flatcc_fb_gen_c_builder@@Base+0x1d6c>
   1c34c:	ldr	r3, [r6, #204]	; 0xcc
   1c350:	tst	r4, #3
   1c354:	bne	1c260 <__flatcc_fb_gen_c_builder@@Base+0x1c08>
   1c358:	sub	r0, r5, r4
   1c35c:	cmp	r0, #2
   1c360:	bgt	1c3d0 <__flatcc_fb_gen_c_builder@@Base+0x1d78>
   1c364:	b	1c260 <__flatcc_fb_gen_c_builder@@Base+0x1c08>
   1c368:	ldr	r3, [r6, #204]	; 0xcc
   1c36c:	cmp	r5, #5
   1c370:	bge	1c324 <__flatcc_fb_gen_c_builder@@Base+0x1ccc>
   1c374:	ldr	r0, [pc, #304]	; 1c4ac <__flatcc_fb_gen_c_builder@@Base+0x1e54>
   1c378:	mov	r1, #2
   1c37c:	mov	r2, #1
   1c380:	add	r0, pc, r0
   1c384:	bl	14850 <fwrite@plt>
   1c388:	ldr	r2, [sl, #16]
   1c38c:	sub	r1, r2, #1
   1c390:	cmp	r1, #11
   1c394:	bcs	1c444 <__flatcc_fb_gen_c_builder@@Base+0x1dec>
   1c398:	ldr	r0, [r6, #204]	; 0xcc
   1c39c:	str	r4, [sp]
   1c3a0:	cmp	r2, #5
   1c3a4:	ldr	r2, [pc, #264]	; 1c4b4 <__flatcc_fb_gen_c_builder@@Base+0x1e5c>
   1c3a8:	ldr	r3, [pc, #264]	; 1c4b8 <__flatcc_fb_gen_c_builder@@Base+0x1e60>
   1c3ac:	add	r3, pc, r3
   1c3b0:	add	r2, pc, r2
   1c3b4:	moveq	r2, r6
   1c3b8:	ldr	r3, [r3, r1, lsl #2]
   1c3bc:	mov	r1, r8
   1c3c0:	b	1c298 <__flatcc_fb_gen_c_builder@@Base+0x1c40>
   1c3c4:	ldr	r3, [r6, #204]	; 0xcc
   1c3c8:	cmp	r5, #5
   1c3cc:	blt	1c260 <__flatcc_fb_gen_c_builder@@Base+0x1c08>
   1c3d0:	ldr	r1, [pc, #204]	; 1c4a4 <__flatcc_fb_gen_c_builder@@Base+0x1e4c>
   1c3d4:	mov	r0, r3
   1c3d8:	mov	r2, r7
   1c3dc:	add	r1, pc, r1
   1c3e0:	bl	148bc <fprintf@plt>
   1c3e4:	b	1c274 <__flatcc_fb_gen_c_builder@@Base+0x1c1c>
   1c3e8:	mov	r0, r4
   1c3ec:	sub	sp, fp, #28
   1c3f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c3f4:	ldr	r0, [pc, #216]	; 1c4d4 <__flatcc_fb_gen_c_builder@@Base+0x1e7c>
   1c3f8:	movw	r3, #850	; 0x352
   1c3fc:	ldr	r0, [pc, r0]
   1c400:	ldr	r0, [r0]
   1c404:	ldr	r1, [pc, #204]	; 1c4d8 <__flatcc_fb_gen_c_builder@@Base+0x1e80>
   1c408:	add	r1, pc, r1
   1c40c:	str	r1, [sp]
   1c410:	ldr	r1, [pc, #196]	; 1c4dc <__flatcc_fb_gen_c_builder@@Base+0x1e84>
   1c414:	ldr	r4, [pc, #196]	; 1c4e0 <__flatcc_fb_gen_c_builder@@Base+0x1e88>
   1c418:	add	r4, pc, r4
   1c41c:	add	r1, pc, r1
   1c420:	mov	r2, r4
   1c424:	bl	148bc <fprintf@plt>
   1c428:	ldr	r0, [pc, #180]	; 1c4e4 <__flatcc_fb_gen_c_builder@@Base+0x1e8c>
   1c42c:	ldr	r3, [pc, #180]	; 1c4e8 <__flatcc_fb_gen_c_builder@@Base+0x1e90>
   1c430:	mov	r1, r4
   1c434:	movw	r2, #850	; 0x352
   1c438:	add	r0, pc, r0
   1c43c:	add	r3, pc, r3
   1c440:	bl	1497c <__assert_fail@plt>
   1c444:	ldr	r0, [pc, #112]	; 1c4bc <__flatcc_fb_gen_c_builder@@Base+0x1e64>
   1c448:	mov	r3, #141	; 0x8d
   1c44c:	ldr	r0, [pc, r0]
   1c450:	ldr	r0, [r0]
   1c454:	ldr	r1, [pc, #100]	; 1c4c0 <__flatcc_fb_gen_c_builder@@Base+0x1e68>
   1c458:	add	r1, pc, r1
   1c45c:	str	r1, [sp]
   1c460:	ldr	r1, [pc, #92]	; 1c4c4 <__flatcc_fb_gen_c_builder@@Base+0x1e6c>
   1c464:	ldr	r4, [pc, #92]	; 1c4c8 <__flatcc_fb_gen_c_builder@@Base+0x1e70>
   1c468:	add	r4, pc, r4
   1c46c:	add	r1, pc, r1
   1c470:	mov	r2, r4
   1c474:	bl	148bc <fprintf@plt>
   1c478:	ldr	r0, [pc, #76]	; 1c4cc <__flatcc_fb_gen_c_builder@@Base+0x1e74>
   1c47c:	ldr	r3, [pc, #76]	; 1c4d0 <__flatcc_fb_gen_c_builder@@Base+0x1e78>
   1c480:	mov	r1, r4
   1c484:	mov	r2, #141	; 0x8d
   1c488:	add	r0, pc, r0
   1c48c:	add	r3, pc, r3
   1c490:	bl	1497c <__assert_fail@plt>
   1c494:	andeq	r3, r2, r5, asr r4
   1c498:	andeq	r4, r2, r7, ror #22
   1c49c:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   1c4a0:	andeq	r9, r3, r9, lsl #18
   1c4a4:	ldrdeq	r3, [r3], -r3	; <UNPREDICTABLE>
   1c4a8:	andeq	r4, r3, r6, lsl #1
   1c4ac:	strdeq	r9, [r3], -r5
   1c4b0:	andeq	r4, r3, pc, ror r0
   1c4b4:	andeq	r3, r2, lr, ror #5
   1c4b8:	andeq	lr, r4, r8, asr sl
   1c4bc:	andeq	lr, r4, r0, asr ip
   1c4c0:	andeq	r9, r2, sp, lsr r9
   1c4c4:	andeq	r3, r2, sl, lsl r1
   1c4c8:	andeq	r9, r2, sp, asr #17
   1c4cc:	andeq	r3, r3, r6, asr #31
   1c4d0:	andeq	r9, r2, r0, asr #18
   1c4d4:	andeq	lr, r4, r0, lsr #25
   1c4d8:	andeq	r3, r3, r9, lsr #30
   1c4dc:	andeq	r3, r2, sl, ror #2
   1c4e0:	andeq	r3, r3, lr, lsr #25
   1c4e4:	andeq	r4, r3, r6, lsl r0
   1c4e8:	andeq	r3, r3, r3, lsr #30
   1c4ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c4f0:	add	fp, sp, #28
   1c4f4:	sub	sp, sp, #260	; 0x104
   1c4f8:	str	r2, [sp, #28]
   1c4fc:	mov	r6, r1
   1c500:	mov	r9, r0
   1c504:	add	r0, sp, #32
   1c508:	mov	r1, #0
   1c50c:	mov	r2, #220	; 0xdc
   1c510:	mov	r4, r3
   1c514:	mov	sl, #0
   1c518:	bl	148d4 <memset@plt>
   1c51c:	ldr	r0, [pc, #1156]	; 1c9a8 <__flatcc_fb_gen_c_builder@@Base+0x2350>
   1c520:	ldr	r1, [pc, #1156]	; 1c9ac <__flatcc_fb_gen_c_builder@@Base+0x2354>
   1c524:	cmp	r4, #1
   1c528:	add	r0, pc, r0
   1c52c:	add	r1, pc, r1
   1c530:	moveq	r1, r0
   1c534:	ldr	r0, [pc, #1140]	; 1c9b0 <__flatcc_fb_gen_c_builder@@Base+0x2358>
   1c538:	ldr	r5, [r6, #20]
   1c53c:	cmp	r4, #2
   1c540:	add	r0, pc, r0
   1c544:	movne	r0, r1
   1c548:	cmp	r5, #0
   1c54c:	str	r0, [sp, #20]
   1c550:	beq	1c8dc <__flatcc_fb_gen_c_builder@@Base+0x2284>
   1c554:	ldr	r6, [fp, #8]
   1c558:	mov	r0, #0
   1c55c:	str	r0, [sp, #24]
   1c560:	b	1c588 <__flatcc_fb_gen_c_builder@@Base+0x1f30>
   1c564:	stm	sp, {r7, r8, sl}
   1c568:	ldr	r1, [pc, #1168]	; 1ca00 <__flatcc_fb_gen_c_builder@@Base+0x23a8>
   1c56c:	add	r1, pc, r1
   1c570:	mov	r2, r9
   1c574:	bl	148bc <fprintf@plt>
   1c578:	add	sl, sl, #1
   1c57c:	ldr	r5, [r5]
   1c580:	cmp	r5, #0
   1c584:	beq	1c8dc <__flatcc_fb_gen_c_builder@@Base+0x2284>
   1c588:	ldr	r0, [r5, #4]
   1c58c:	cmp	sl, #1
   1c590:	ldr	r8, [r0]
   1c594:	ldr	r7, [r0, #4]
   1c598:	blt	1c5cc <__flatcc_fb_gen_c_builder@@Base+0x1f74>
   1c59c:	ldr	r3, [r9, #204]	; 0xcc
   1c5a0:	tst	sl, #3
   1c5a4:	beq	1c5b8 <__flatcc_fb_gen_c_builder@@Base+0x1f60>
   1c5a8:	ldr	r0, [pc, #1032]	; 1c9b8 <__flatcc_fb_gen_c_builder@@Base+0x2360>
   1c5ac:	mov	r1, #2
   1c5b0:	add	r0, pc, r0
   1c5b4:	b	1c5c4 <__flatcc_fb_gen_c_builder@@Base+0x1f6c>
   1c5b8:	ldr	r0, [pc, #1012]	; 1c9b4 <__flatcc_fb_gen_c_builder@@Base+0x235c>
   1c5bc:	mov	r1, #4
   1c5c0:	add	r0, pc, r0
   1c5c4:	mov	r2, #1
   1c5c8:	bl	14850 <fwrite@plt>
   1c5cc:	ldrh	r0, [r5, #24]
   1c5d0:	cmp	r0, #8
   1c5d4:	beq	1c63c <__flatcc_fb_gen_c_builder@@Base+0x1fe4>
   1c5d8:	cmp	r0, #14
   1c5dc:	bne	1c908 <__flatcc_fb_gen_c_builder@@Base+0x22b0>
   1c5e0:	ldr	r1, [r5, #16]
   1c5e4:	add	r2, sp, #32
   1c5e8:	ldr	r0, [r1, #12]
   1c5ec:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   1c5f0:	ldrh	r0, [r5, #72]	; 0x48
   1c5f4:	and	r1, r0, #4
   1c5f8:	ldr	r0, [r5, #16]
   1c5fc:	ldrh	r0, [r0, #8]
   1c600:	cmp	r0, #1
   1c604:	bne	1c6a8 <__flatcc_fb_gen_c_builder@@Base+0x2050>
   1c608:	ldr	r0, [r9, #204]	; 0xcc
   1c60c:	cmp	r1, #0
   1c610:	beq	1c6d8 <__flatcc_fb_gen_c_builder@@Base+0x2080>
   1c614:	ldr	r1, [pc, #928]	; 1c9bc <__flatcc_fb_gen_c_builder@@Base+0x2364>
   1c618:	ldr	r7, [sp, #24]
   1c61c:	add	r1, pc, r1
   1c620:	mov	r2, r7
   1c624:	mov	r3, r7
   1c628:	bl	148bc <fprintf@plt>
   1c62c:	ldr	r0, [r5, #16]
   1c630:	bl	1c18c <__flatcc_fb_gen_c_builder@@Base+0x1b34>
   1c634:	add	sl, r0, sl
   1c638:	b	1c6cc <__flatcc_fb_gen_c_builder@@Base+0x2074>
   1c63c:	ldr	r0, [r5, #16]
   1c640:	sub	r0, r0, #1
   1c644:	cmp	r0, #11
   1c648:	bcs	1c958 <__flatcc_fb_gen_c_builder@@Base+0x2300>
   1c64c:	ldrb	r1, [r5, #72]	; 0x48
   1c650:	tst	r1, #4
   1c654:	bne	1c6b0 <__flatcc_fb_gen_c_builder@@Base+0x2058>
   1c658:	ldr	r1, [pc, #920]	; 1c9f8 <__flatcc_fb_gen_c_builder@@Base+0x23a0>
   1c65c:	add	r1, pc, r1
   1c660:	ldr	r3, [r1, r0, lsl #2]
   1c664:	ldrd	r0, [r5, #88]	; 0x58
   1c668:	eor	r0, r0, #1
   1c66c:	orrs	r0, r0, r1
   1c670:	movne	r0, r4
   1c674:	cmp	r0, #2
   1c678:	beq	1c75c <__flatcc_fb_gen_c_builder@@Base+0x2104>
   1c67c:	cmp	r0, #1
   1c680:	bne	1c740 <__flatcc_fb_gen_c_builder@@Base+0x20e8>
   1c684:	ldr	r0, [r9, #204]	; 0xcc
   1c688:	cmp	r6, #0
   1c68c:	beq	1c564 <__flatcc_fb_gen_c_builder@@Base+0x1f0c>
   1c690:	stm	sp, {r7, r8}
   1c694:	str	r7, [sp, #8]
   1c698:	str	r8, [sp, #12]
   1c69c:	ldr	r1, [pc, #856]	; 1c9fc <__flatcc_fb_gen_c_builder@@Base+0x23a4>
   1c6a0:	add	r1, pc, r1
   1c6a4:	b	1c570 <__flatcc_fb_gen_c_builder@@Base+0x1f18>
   1c6a8:	cmp	r1, #0
   1c6ac:	beq	1c700 <__flatcc_fb_gen_c_builder@@Base+0x20a8>
   1c6b0:	ldr	r0, [r9, #204]	; 0xcc
   1c6b4:	ldr	r1, [pc, #800]	; 1c9dc <__flatcc_fb_gen_c_builder@@Base+0x2384>
   1c6b8:	ldr	r7, [sp, #24]
   1c6bc:	add	r1, pc, r1
   1c6c0:	mov	r2, r7
   1c6c4:	bl	148bc <fprintf@plt>
   1c6c8:	add	sl, sl, #1
   1c6cc:	add	r7, r7, #1
   1c6d0:	str	r7, [sp, #24]
   1c6d4:	b	1c57c <__flatcc_fb_gen_c_builder@@Base+0x1f24>
   1c6d8:	cmp	r6, #0
   1c6dc:	beq	1c780 <__flatcc_fb_gen_c_builder@@Base+0x2128>
   1c6e0:	stm	sp, {r7, r8}
   1c6e4:	str	r7, [sp, #8]
   1c6e8:	str	r8, [sp, #12]
   1c6ec:	add	r2, sp, #32
   1c6f0:	ldr	r1, [pc, #712]	; 1c9c0 <__flatcc_fb_gen_c_builder@@Base+0x2368>
   1c6f4:	ldr	r3, [sp, #20]
   1c6f8:	add	r1, pc, r1
   1c6fc:	b	1c574 <__flatcc_fb_gen_c_builder@@Base+0x1f1c>
   1c700:	ldrd	r0, [r5, #88]	; 0x58
   1c704:	eor	r0, r0, #1
   1c708:	orrs	r0, r0, r1
   1c70c:	movne	r0, r4
   1c710:	cmp	r0, #2
   1c714:	beq	1c868 <__flatcc_fb_gen_c_builder@@Base+0x2210>
   1c718:	cmp	r0, #1
   1c71c:	bne	1c740 <__flatcc_fb_gen_c_builder@@Base+0x20e8>
   1c720:	ldr	r0, [r9, #204]	; 0xcc
   1c724:	cmp	r6, #0
   1c728:	beq	1c8b4 <__flatcc_fb_gen_c_builder@@Base+0x225c>
   1c72c:	str	r8, [sp]
   1c730:	stmib	sp, {r7, r8}
   1c734:	ldr	r1, [pc, #676]	; 1c9e0 <__flatcc_fb_gen_c_builder@@Base+0x2388>
   1c738:	add	r1, pc, r1
   1c73c:	b	1c8d0 <__flatcc_fb_gen_c_builder@@Base+0x2278>
   1c740:	ldr	r0, [r9, #204]	; 0xcc
   1c744:	cmp	r6, #0
   1c748:	beq	1c850 <__flatcc_fb_gen_c_builder@@Base+0x21f8>
   1c74c:	stm	sp, {r7, r8}
   1c750:	ldr	r1, [pc, #664]	; 1c9f0 <__flatcc_fb_gen_c_builder@@Base+0x2398>
   1c754:	add	r1, pc, r1
   1c758:	b	1c85c <__flatcc_fb_gen_c_builder@@Base+0x2204>
   1c75c:	ldr	r0, [r9, #204]	; 0xcc
   1c760:	cmp	r6, #0
   1c764:	beq	1c888 <__flatcc_fb_gen_c_builder@@Base+0x2230>
   1c768:	stm	sp, {r7, r8}
   1c76c:	str	r7, [sp, #8]
   1c770:	str	r8, [sp, #12]
   1c774:	ldr	r1, [pc, #648]	; 1ca04 <__flatcc_fb_gen_c_builder@@Base+0x23ac>
   1c778:	add	r1, pc, r1
   1c77c:	b	1c570 <__flatcc_fb_gen_c_builder@@Base+0x1f18>
   1c780:	stm	sp, {r7, r8}
   1c784:	add	r2, sp, #32
   1c788:	ldr	r1, [pc, #564]	; 1c9c4 <__flatcc_fb_gen_c_builder@@Base+0x236c>
   1c78c:	ldr	r3, [sp, #20]
   1c790:	add	r1, pc, r1
   1c794:	bl	148bc <fprintf@plt>
   1c798:	ldr	r0, [r5, #16]
   1c79c:	bl	1c18c <__flatcc_fb_gen_c_builder@@Base+0x1b34>
   1c7a0:	cmp	r0, #1
   1c7a4:	blt	1c8a4 <__flatcc_fb_gen_c_builder@@Base+0x224c>
   1c7a8:	ldr	r7, [sp, #28]
   1c7ac:	str	r4, [sp, #16]
   1c7b0:	mov	r8, r0
   1c7b4:	mov	r4, #0
   1c7b8:	b	1c7f4 <__flatcc_fb_gen_c_builder@@Base+0x219c>
   1c7bc:	ldr	r0, [pc, #516]	; 1c9c8 <__flatcc_fb_gen_c_builder@@Base+0x2370>
   1c7c0:	mov	r1, #2
   1c7c4:	mov	r2, #1
   1c7c8:	add	r0, pc, r0
   1c7cc:	bl	14850 <fwrite@plt>
   1c7d0:	ldr	r0, [r9, #204]	; 0xcc
   1c7d4:	ldr	r1, [pc, #504]	; 1c9d4 <__flatcc_fb_gen_c_builder@@Base+0x237c>
   1c7d8:	mov	r2, r6
   1c7dc:	add	r1, pc, r1
   1c7e0:	bl	148bc <fprintf@plt>
   1c7e4:	add	r4, r4, #1
   1c7e8:	sub	r7, r7, #1
   1c7ec:	cmp	r8, r4
   1c7f0:	beq	1c898 <__flatcc_fb_gen_c_builder@@Base+0x2240>
   1c7f4:	ldr	r0, [sp, #28]
   1c7f8:	add	r6, sl, r4
   1c7fc:	cmp	r0, #0
   1c800:	beq	1c7d0 <__flatcc_fb_gen_c_builder@@Base+0x2178>
   1c804:	cmp	r4, #0
   1c808:	beq	1c824 <__flatcc_fb_gen_c_builder@@Base+0x21cc>
   1c80c:	ldr	r3, [r9, #204]	; 0xcc
   1c810:	tst	r4, #3
   1c814:	bne	1c7bc <__flatcc_fb_gen_c_builder@@Base+0x2164>
   1c818:	cmp	r7, #2
   1c81c:	bgt	1c834 <__flatcc_fb_gen_c_builder@@Base+0x21dc>
   1c820:	b	1c7bc <__flatcc_fb_gen_c_builder@@Base+0x2164>
   1c824:	ldr	r0, [sp, #28]
   1c828:	ldr	r3, [r9, #204]	; 0xcc
   1c82c:	cmp	r0, #5
   1c830:	blt	1c7bc <__flatcc_fb_gen_c_builder@@Base+0x2164>
   1c834:	ldr	r1, [pc, #400]	; 1c9cc <__flatcc_fb_gen_c_builder@@Base+0x2374>
   1c838:	ldr	r2, [pc, #400]	; 1c9d0 <__flatcc_fb_gen_c_builder@@Base+0x2378>
   1c83c:	mov	r0, r3
   1c840:	add	r1, pc, r1
   1c844:	add	r2, pc, r2
   1c848:	bl	148bc <fprintf@plt>
   1c84c:	b	1c7d0 <__flatcc_fb_gen_c_builder@@Base+0x2178>
   1c850:	str	sl, [sp]
   1c854:	ldr	r1, [pc, #408]	; 1c9f4 <__flatcc_fb_gen_c_builder@@Base+0x239c>
   1c858:	add	r1, pc, r1
   1c85c:	mov	r2, r7
   1c860:	mov	r3, r8
   1c864:	b	1c574 <__flatcc_fb_gen_c_builder@@Base+0x1f1c>
   1c868:	ldr	r0, [r9, #204]	; 0xcc
   1c86c:	cmp	r6, #0
   1c870:	beq	1c8c4 <__flatcc_fb_gen_c_builder@@Base+0x226c>
   1c874:	str	r8, [sp]
   1c878:	stmib	sp, {r7, r8}
   1c87c:	ldr	r1, [pc, #356]	; 1c9e8 <__flatcc_fb_gen_c_builder@@Base+0x2390>
   1c880:	add	r1, pc, r1
   1c884:	b	1c8d0 <__flatcc_fb_gen_c_builder@@Base+0x2278>
   1c888:	stm	sp, {r7, r8, sl}
   1c88c:	ldr	r1, [pc, #372]	; 1ca08 <__flatcc_fb_gen_c_builder@@Base+0x23b0>
   1c890:	add	r1, pc, r1
   1c894:	b	1c570 <__flatcc_fb_gen_c_builder@@Base+0x1f18>
   1c898:	add	sl, sl, r4
   1c89c:	ldr	r4, [sp, #16]
   1c8a0:	ldr	r6, [fp, #8]
   1c8a4:	ldr	r1, [r9, #204]	; 0xcc
   1c8a8:	mov	r0, #41	; 0x29
   1c8ac:	bl	1491c <fputc@plt>
   1c8b0:	b	1c57c <__flatcc_fb_gen_c_builder@@Base+0x1f24>
   1c8b4:	stm	sp, {r8, sl}
   1c8b8:	ldr	r1, [pc, #292]	; 1c9e4 <__flatcc_fb_gen_c_builder@@Base+0x238c>
   1c8bc:	add	r1, pc, r1
   1c8c0:	b	1c8d0 <__flatcc_fb_gen_c_builder@@Base+0x2278>
   1c8c4:	stm	sp, {r8, sl}
   1c8c8:	ldr	r1, [pc, #284]	; 1c9ec <__flatcc_fb_gen_c_builder@@Base+0x2394>
   1c8cc:	add	r1, pc, r1
   1c8d0:	add	r2, sp, #32
   1c8d4:	mov	r3, r7
   1c8d8:	b	1c574 <__flatcc_fb_gen_c_builder@@Base+0x1f1c>
   1c8dc:	ldr	r0, [sp, #28]
   1c8e0:	cmp	r0, #1
   1c8e4:	blt	1c900 <__flatcc_fb_gen_c_builder@@Base+0x22a8>
   1c8e8:	ldr	r3, [r9, #204]	; 0xcc
   1c8ec:	ldr	r0, [pc, #228]	; 1c9d8 <__flatcc_fb_gen_c_builder@@Base+0x2380>
   1c8f0:	mov	r1, #4
   1c8f4:	mov	r2, #1
   1c8f8:	add	r0, pc, r0
   1c8fc:	bl	14850 <fwrite@plt>
   1c900:	sub	sp, fp, #28
   1c904:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c908:	ldr	r0, [pc, #252]	; 1ca0c <__flatcc_fb_gen_c_builder@@Base+0x23b4>
   1c90c:	movw	r3, #993	; 0x3e1
   1c910:	ldr	r0, [pc, r0]
   1c914:	ldr	r0, [r0]
   1c918:	ldr	r1, [pc, #240]	; 1ca10 <__flatcc_fb_gen_c_builder@@Base+0x23b8>
   1c91c:	add	r1, pc, r1
   1c920:	str	r1, [sp]
   1c924:	ldr	r1, [pc, #232]	; 1ca14 <__flatcc_fb_gen_c_builder@@Base+0x23bc>
   1c928:	ldr	r4, [pc, #232]	; 1ca18 <__flatcc_fb_gen_c_builder@@Base+0x23c0>
   1c92c:	add	r4, pc, r4
   1c930:	add	r1, pc, r1
   1c934:	mov	r2, r4
   1c938:	bl	148bc <fprintf@plt>
   1c93c:	ldr	r0, [pc, #216]	; 1ca1c <__flatcc_fb_gen_c_builder@@Base+0x23c4>
   1c940:	ldr	r3, [pc, #216]	; 1ca20 <__flatcc_fb_gen_c_builder@@Base+0x23c8>
   1c944:	mov	r1, r4
   1c948:	movw	r2, #993	; 0x3e1
   1c94c:	add	r0, pc, r0
   1c950:	add	r3, pc, r3
   1c954:	bl	1497c <__assert_fail@plt>
   1c958:	ldr	r0, [pc, #196]	; 1ca24 <__flatcc_fb_gen_c_builder@@Base+0x23cc>
   1c95c:	mov	r3, #96	; 0x60
   1c960:	ldr	r0, [pc, r0]
   1c964:	ldr	r0, [r0]
   1c968:	ldr	r1, [pc, #184]	; 1ca28 <__flatcc_fb_gen_c_builder@@Base+0x23d0>
   1c96c:	add	r1, pc, r1
   1c970:	str	r1, [sp]
   1c974:	ldr	r1, [pc, #176]	; 1ca2c <__flatcc_fb_gen_c_builder@@Base+0x23d4>
   1c978:	ldr	r4, [pc, #176]	; 1ca30 <__flatcc_fb_gen_c_builder@@Base+0x23d8>
   1c97c:	add	r4, pc, r4
   1c980:	add	r1, pc, r1
   1c984:	mov	r2, r4
   1c988:	bl	148bc <fprintf@plt>
   1c98c:	ldr	r0, [pc, #160]	; 1ca34 <__flatcc_fb_gen_c_builder@@Base+0x23dc>
   1c990:	ldr	r3, [pc, #160]	; 1ca38 <__flatcc_fb_gen_c_builder@@Base+0x23e0>
   1c994:	mov	r1, r4
   1c998:	mov	r2, #96	; 0x60
   1c99c:	add	r0, pc, r0
   1c9a0:	add	r3, pc, r3
   1c9a4:	bl	1497c <__assert_fail@plt>
   1c9a8:	muleq	r3, r4, lr
   1c9ac:	andeq	r3, r2, r2, ror r1
   1c9b0:	andeq	r3, r3, r5, ror lr
   1c9b4:	andeq	r3, r3, r5, lsl #28
   1c9b8:	andeq	r3, r3, sl, lsl lr
   1c9bc:			; <UNDEFINED> instruction: 0x00033db1
   1c9c0:	andeq	r3, r3, lr, lsl #26
   1c9c4:	muleq	r3, r5, ip
   1c9c8:	andeq	r9, r3, sp, lsr #7
   1c9cc:	andeq	r3, r3, pc, ror #22
   1c9d0:	andeq	r2, r2, r9, asr lr
   1c9d4:	muleq	r3, r1, ip
   1c9d8:	andeq	r3, r3, sp, asr #21
   1c9dc:	andeq	r3, r3, lr, ror sp
   1c9e0:	andeq	r3, r3, fp, lsr sp
   1c9e4:	ldrdeq	r3, [r3], -lr
   1c9e8:	andeq	r3, r3, sp, lsr ip
   1c9ec:	andeq	r3, r3, r6, lsl ip
   1c9f0:	strdeq	r3, [r3], -ip
   1c9f4:	andeq	r3, r3, fp, lsl #24
   1c9f8:	ldrdeq	lr, [r4], -r4
   1c9fc:	ldrdeq	r3, [r3], -r1
   1ca00:	andeq	r3, r3, ip, lsr #30
   1ca04:	andeq	r3, r3, r3, asr #26
   1ca08:	andeq	r3, r3, r0, asr ip
   1ca0c:	andeq	lr, r4, ip, lsl #15
   1ca10:	andeq	r3, r3, r5, ror #23
   1ca14:	andeq	r2, r2, r6, asr ip
   1ca18:	muleq	r3, sl, r7
   1ca1c:	andeq	r3, r3, r2, lsl #22
   1ca20:	andeq	r3, r3, ip, asr #23
   1ca24:	andeq	lr, r4, ip, lsr r7
   1ca28:	andeq	r9, r2, r9, lsr #8
   1ca2c:	andeq	r2, r2, r6, lsl #24
   1ca30:			; <UNDEFINED> instruction: 0x000293b9
   1ca34:			; <UNDEFINED> instruction: 0x00033ab2
   1ca38:	andeq	r9, r2, r5, lsr #26
   1ca3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ca40:	add	fp, sp, #28
   1ca44:	sub	sp, sp, #484	; 0x1e4
   1ca48:	mov	r4, r0
   1ca4c:	ldr	r0, [r0, #208]	; 0xd0
   1ca50:	ldr	r5, [r0, #40]	; 0x28
   1ca54:	cmp	r5, #0
   1ca58:	beq	1cbb4 <__flatcc_fb_gen_c_builder@@Base+0x255c>
   1ca5c:	ldr	sl, [pc, #424]	; 1cc0c <__flatcc_fb_gen_c_builder@@Base+0x25b4>
   1ca60:	ldr	r8, [pc, #424]	; 1cc10 <__flatcc_fb_gen_c_builder@@Base+0x25b8>
   1ca64:	mov	r0, #0
   1ca68:	add	r6, sp, #256	; 0x100
   1ca6c:	add	r7, sp, #32
   1ca70:	add	sl, pc, sl
   1ca74:	add	r8, pc, r8
   1ca78:	b	1caa8 <__flatcc_fb_gen_c_builder@@Base+0x2450>
   1ca7c:	ldr	r0, [r4, #204]	; 0xcc
   1ca80:	str	r6, [sp]
   1ca84:	mov	r2, r4
   1ca88:	mov	r3, r4
   1ca8c:	ldr	r1, [pc, #388]	; 1cc18 <__flatcc_fb_gen_c_builder@@Base+0x25c0>
   1ca90:	add	r1, pc, r1
   1ca94:	bl	148bc <fprintf@plt>
   1ca98:	mov	r0, #1
   1ca9c:	ldr	r5, [r5]
   1caa0:	cmp	r5, #0
   1caa4:	beq	1cba0 <__flatcc_fb_gen_c_builder@@Base+0x2548>
   1caa8:	ldrh	r1, [r5, #8]
   1caac:	cmp	r1, #4
   1cab0:	bne	1ca9c <__flatcc_fb_gen_c_builder@@Base+0x2444>
   1cab4:	mov	r0, r6
   1cab8:	mov	r1, #0
   1cabc:	mov	r2, #220	; 0xdc
   1cac0:	bl	148d4 <memset@plt>
   1cac4:	mov	r0, r7
   1cac8:	mov	r1, #0
   1cacc:	mov	r2, #220	; 0xdc
   1cad0:	bl	148d4 <memset@plt>
   1cad4:	ldr	r0, [r5, #12]
   1cad8:	mov	r1, r5
   1cadc:	mov	r2, r6
   1cae0:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   1cae4:	ldr	r9, [r5, #20]
   1cae8:	cmp	r9, #0
   1caec:	bne	1cb30 <__flatcc_fb_gen_c_builder@@Base+0x24d8>
   1caf0:	b	1ca7c <__flatcc_fb_gen_c_builder@@Base+0x2424>
   1caf4:	ldr	r1, [r9, #4]
   1caf8:	ldr	r0, [r4, #204]	; 0xcc
   1cafc:	ldr	r2, [r1]
   1cb00:	ldr	r1, [r1, #4]
   1cb04:	stm	sp, {r1, r2, r4, r6}
   1cb08:	str	r1, [sp, #20]
   1cb0c:	str	r6, [sp, #16]
   1cb10:	str	r2, [sp, #24]
   1cb14:	mov	r1, sl
   1cb18:	mov	r2, r6
   1cb1c:	mov	r3, r6
   1cb20:	bl	148bc <fprintf@plt>
   1cb24:	ldr	r9, [r9]
   1cb28:	cmp	r9, #0
   1cb2c:	beq	1ca7c <__flatcc_fb_gen_c_builder@@Base+0x2424>
   1cb30:	ldrh	r0, [r9, #24]
   1cb34:	cmp	r0, #0
   1cb38:	beq	1cb88 <__flatcc_fb_gen_c_builder@@Base+0x2530>
   1cb3c:	cmp	r0, #10
   1cb40:	beq	1caf4 <__flatcc_fb_gen_c_builder@@Base+0x249c>
   1cb44:	cmp	r0, #14
   1cb48:	bne	1cbbc <__flatcc_fb_gen_c_builder@@Base+0x2564>
   1cb4c:	ldr	r1, [r9, #16]
   1cb50:	mov	r2, r7
   1cb54:	ldr	r0, [r1, #12]
   1cb58:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   1cb5c:	ldr	r1, [r9, #4]
   1cb60:	ldr	r0, [r4, #204]	; 0xcc
   1cb64:	ldr	r2, [r1]
   1cb68:	ldr	r1, [r1, #4]
   1cb6c:	stm	sp, {r1, r2, r7}
   1cb70:	str	r1, [sp, #20]
   1cb74:	str	r6, [sp, #12]
   1cb78:	str	r6, [sp, #16]
   1cb7c:	str	r2, [sp, #24]
   1cb80:	mov	r1, r8
   1cb84:	b	1cb18 <__flatcc_fb_gen_c_builder@@Base+0x24c0>
   1cb88:	ldr	r0, [r4, #204]	; 0xcc
   1cb8c:	str	r6, [sp]
   1cb90:	str	r6, [sp, #4]
   1cb94:	ldr	r1, [pc, #120]	; 1cc14 <__flatcc_fb_gen_c_builder@@Base+0x25bc>
   1cb98:	add	r1, pc, r1
   1cb9c:	b	1cb18 <__flatcc_fb_gen_c_builder@@Base+0x24c0>
   1cba0:	cmp	r0, #0
   1cba4:	beq	1cbb4 <__flatcc_fb_gen_c_builder@@Base+0x255c>
   1cba8:	ldr	r1, [r4, #204]	; 0xcc
   1cbac:	mov	r0, #10
   1cbb0:	bl	1491c <fputc@plt>
   1cbb4:	sub	sp, fp, #28
   1cbb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cbbc:	ldr	r0, [pc, #88]	; 1cc1c <__flatcc_fb_gen_c_builder@@Base+0x25c4>
   1cbc0:	movw	r3, #1608	; 0x648
   1cbc4:	ldr	r0, [pc, r0]
   1cbc8:	ldr	r0, [r0]
   1cbcc:	ldr	r1, [pc, #76]	; 1cc20 <__flatcc_fb_gen_c_builder@@Base+0x25c8>
   1cbd0:	add	r1, pc, r1
   1cbd4:	str	r1, [sp]
   1cbd8:	ldr	r1, [pc, #68]	; 1cc24 <__flatcc_fb_gen_c_builder@@Base+0x25cc>
   1cbdc:	ldr	r4, [pc, #68]	; 1cc28 <__flatcc_fb_gen_c_builder@@Base+0x25d0>
   1cbe0:	add	r4, pc, r4
   1cbe4:	add	r1, pc, r1
   1cbe8:	mov	r2, r4
   1cbec:	bl	148bc <fprintf@plt>
   1cbf0:	ldr	r0, [pc, #52]	; 1cc2c <__flatcc_fb_gen_c_builder@@Base+0x25d4>
   1cbf4:	ldr	r3, [pc, #52]	; 1cc30 <__flatcc_fb_gen_c_builder@@Base+0x25d8>
   1cbf8:	mov	r1, r4
   1cbfc:	movw	r2, #1608	; 0x648
   1cc00:	add	r0, pc, r0
   1cc04:	add	r3, pc, r3
   1cc08:	bl	1497c <__assert_fail@plt>
   1cc0c:	andeq	r3, r3, r6, asr #27
   1cc10:	andeq	r3, r3, lr, lsr sp
   1cc14:	andeq	r3, r3, r8, lsr #26
   1cc18:	andeq	r3, r3, r5, lsl #30
   1cc1c:	ldrdeq	lr, [r4], -r8
   1cc20:	andeq	r3, r3, r6, ror #26
   1cc24:	andeq	r2, r2, r2, lsr #19
   1cc28:	andeq	r3, r3, r6, ror #9
   1cc2c:	andeq	r3, r3, lr, asr #16
   1cc30:	andeq	r3, r3, lr, asr sp
   1cc34:	push	{r4, sl, fp, lr}
   1cc38:	add	fp, sp, #8
   1cc3c:	sub	sp, sp, #8
   1cc40:	mov	r4, r2
   1cc44:	ldrh	r2, [r1, #8]
   1cc48:	sub	r2, r2, #3
   1cc4c:	cmp	r2, #3
   1cc50:	bhi	1cd3c <__flatcc_fb_gen_c_builder@@Base+0x26e4>
   1cc54:	add	r3, pc, #4
   1cc58:	ldr	r2, [r3, r2, lsl #2]
   1cc5c:	add	pc, r3, r2
   1cc60:	andeq	r0, r0, r0, lsl r0
   1cc64:	andeq	r0, r0, r8, lsl #1
   1cc68:	andeq	r0, r0, r4, lsr r0
   1cc6c:	andeq	r0, r0, r0, rrx
   1cc70:	vldr	d16, [r1]
   1cc74:	cmp	r0, #11
   1cc78:	bne	1cd20 <__flatcc_fb_gen_c_builder@@Base+0x26c8>
   1cc7c:	vcvt.f32.f64	s0, d16
   1cc80:	ldr	r1, [pc, #364]	; 1cdf4 <__flatcc_fb_gen_c_builder@@Base+0x279c>
   1cc84:	add	r1, pc, r1
   1cc88:	vcvt.f64.f32	d16, s0
   1cc8c:	vmov	r2, r3, d16
   1cc90:	b	1cd2c <__flatcc_fb_gen_c_builder@@Base+0x26d4>
   1cc94:	sub	r0, r0, #1
   1cc98:	cmp	r0, #9
   1cc9c:	bcs	1cd8c <__flatcc_fb_gen_c_builder@@Base+0x2734>
   1cca0:	ldrd	r2, [r1]
   1cca4:	stm	sp, {r2, r3}
   1cca8:	ldr	r1, [pc, #300]	; 1cddc <__flatcc_fb_gen_c_builder@@Base+0x2784>
   1ccac:	add	r1, pc, r1
   1ccb0:	ldr	r2, [r1, r0, lsl #2]
   1ccb4:	ldr	r1, [pc, #292]	; 1cde0 <__flatcc_fb_gen_c_builder@@Base+0x2788>
   1ccb8:	add	r1, pc, r1
   1ccbc:	b	1cd10 <__flatcc_fb_gen_c_builder@@Base+0x26b8>
   1ccc0:	sub	r0, r0, #1
   1ccc4:	cmp	r0, #9
   1ccc8:	bcs	1cd8c <__flatcc_fb_gen_c_builder@@Base+0x2734>
   1cccc:	ldr	r2, [pc, #280]	; 1cdec <__flatcc_fb_gen_c_builder@@Base+0x2794>
   1ccd0:	ldrb	r3, [r1]
   1ccd4:	ldr	r1, [pc, #276]	; 1cdf0 <__flatcc_fb_gen_c_builder@@Base+0x2798>
   1ccd8:	add	r2, pc, r2
   1ccdc:	add	r1, pc, r1
   1cce0:	ldr	r2, [r2, r0, lsl #2]
   1cce4:	b	1cd2c <__flatcc_fb_gen_c_builder@@Base+0x26d4>
   1cce8:	sub	r0, r0, #1
   1ccec:	cmp	r0, #9
   1ccf0:	bcs	1cd8c <__flatcc_fb_gen_c_builder@@Base+0x2734>
   1ccf4:	ldrd	r2, [r1]
   1ccf8:	stm	sp, {r2, r3}
   1ccfc:	ldr	r1, [pc, #224]	; 1cde4 <__flatcc_fb_gen_c_builder@@Base+0x278c>
   1cd00:	add	r1, pc, r1
   1cd04:	ldr	r2, [r1, r0, lsl #2]
   1cd08:	ldr	r1, [pc, #216]	; 1cde8 <__flatcc_fb_gen_c_builder@@Base+0x2790>
   1cd0c:	add	r1, pc, r1
   1cd10:	mov	r0, r4
   1cd14:	bl	14928 <sprintf@plt>
   1cd18:	sub	sp, fp, #8
   1cd1c:	pop	{r4, sl, fp, pc}
   1cd20:	ldr	r1, [pc, #208]	; 1cdf8 <__flatcc_fb_gen_c_builder@@Base+0x27a0>
   1cd24:	vmov	r2, r3, d16
   1cd28:	add	r1, pc, r1
   1cd2c:	mov	r0, r4
   1cd30:	sub	sp, fp, #8
   1cd34:	pop	{r4, sl, fp, lr}
   1cd38:	b	14928 <sprintf@plt>
   1cd3c:	ldr	r0, [pc, #184]	; 1cdfc <__flatcc_fb_gen_c_builder@@Base+0x27a4>
   1cd40:	mov	r3, #260	; 0x104
   1cd44:	ldr	r0, [pc, r0]
   1cd48:	ldr	r0, [r0]
   1cd4c:	ldr	r1, [pc, #172]	; 1ce00 <__flatcc_fb_gen_c_builder@@Base+0x27a8>
   1cd50:	add	r1, pc, r1
   1cd54:	str	r1, [sp]
   1cd58:	ldr	r1, [pc, #164]	; 1ce04 <__flatcc_fb_gen_c_builder@@Base+0x27ac>
   1cd5c:	ldr	r4, [pc, #164]	; 1ce08 <__flatcc_fb_gen_c_builder@@Base+0x27b0>
   1cd60:	add	r4, pc, r4
   1cd64:	add	r1, pc, r1
   1cd68:	mov	r2, r4
   1cd6c:	bl	148bc <fprintf@plt>
   1cd70:	ldr	r0, [pc, #148]	; 1ce0c <__flatcc_fb_gen_c_builder@@Base+0x27b4>
   1cd74:	ldr	r3, [pc, #148]	; 1ce10 <__flatcc_fb_gen_c_builder@@Base+0x27b8>
   1cd78:	mov	r1, r4
   1cd7c:	mov	r2, #260	; 0x104
   1cd80:	add	r0, pc, r0
   1cd84:	add	r3, pc, r3
   1cd88:	bl	1497c <__assert_fail@plt>
   1cd8c:	ldr	r0, [pc, #128]	; 1ce14 <__flatcc_fb_gen_c_builder@@Base+0x27bc>
   1cd90:	mov	r3, #226	; 0xe2
   1cd94:	ldr	r0, [pc, r0]
   1cd98:	ldr	r0, [r0]
   1cd9c:	ldr	r1, [pc, #116]	; 1ce18 <__flatcc_fb_gen_c_builder@@Base+0x27c0>
   1cda0:	add	r1, pc, r1
   1cda4:	str	r1, [sp]
   1cda8:	ldr	r1, [pc, #108]	; 1ce1c <__flatcc_fb_gen_c_builder@@Base+0x27c4>
   1cdac:	ldr	r4, [pc, #108]	; 1ce20 <__flatcc_fb_gen_c_builder@@Base+0x27c8>
   1cdb0:	add	r4, pc, r4
   1cdb4:	add	r1, pc, r1
   1cdb8:	mov	r2, r4
   1cdbc:	bl	148bc <fprintf@plt>
   1cdc0:	ldr	r0, [pc, #92]	; 1ce24 <__flatcc_fb_gen_c_builder@@Base+0x27cc>
   1cdc4:	ldr	r3, [pc, #92]	; 1ce28 <__flatcc_fb_gen_c_builder@@Base+0x27d0>
   1cdc8:	mov	r1, r4
   1cdcc:	mov	r2, #226	; 0xe2
   1cdd0:	add	r0, pc, r0
   1cdd4:	add	r3, pc, r3
   1cdd8:	bl	1497c <__assert_fail@plt>
   1cddc:			; <UNDEFINED> instruction: 0x0004e1b0
   1cde0:	andeq	r9, r2, r1, asr r1
   1cde4:	andeq	lr, r4, ip, asr r1
   1cde8:	andeq	r9, r2, r6, lsl #2
   1cdec:	andeq	lr, r4, r4, lsl #3
   1cdf0:	andeq	r9, r2, pc, lsr r1
   1cdf4:	muleq	r2, lr, r1
   1cdf8:	strdeq	r9, [r2], -lr
   1cdfc:	andeq	lr, r4, r8, asr r3
   1ce00:	andeq	r9, r2, r5, asr #32
   1ce04:	andeq	r2, r2, r2, lsr #16
   1ce08:	ldrdeq	r8, [r2], -r5
   1ce0c:	andeq	r3, r3, lr, asr #13
   1ce10:	andeq	r9, r2, r6, lsr #1
   1ce14:	andeq	lr, r4, r8, lsl #6
   1ce18:	strdeq	r8, [r2], -r5
   1ce1c:	ldrdeq	r2, [r2], -r2	; <UNPREDICTABLE>
   1ce20:	andeq	r8, r2, r5, lsl #31
   1ce24:	andeq	r3, r3, lr, ror r6
   1ce28:	strheq	r9, [r2], -ip
   1ce2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ce30:	add	fp, sp, #28
   1ce34:	sub	sp, sp, #492	; 0x1ec
   1ce38:	sub	r4, fp, #256	; 0x100
   1ce3c:	str	r2, [sp, #32]
   1ce40:	mov	r9, r1
   1ce44:	mov	r7, r0
   1ce48:	mov	r1, #0
   1ce4c:	mov	r2, #220	; 0xdc
   1ce50:	str	r3, [sp, #36]	; 0x24
   1ce54:	mov	r0, r4
   1ce58:	bl	148d4 <memset@plt>
   1ce5c:	add	r0, sp, #40	; 0x28
   1ce60:	mov	r1, #0
   1ce64:	mov	r2, #220	; 0xdc
   1ce68:	bl	148d4 <memset@plt>
   1ce6c:	ldr	r5, [fp, #8]
   1ce70:	mov	r2, r4
   1ce74:	ldr	r0, [r5, #12]
   1ce78:	mov	r1, r5
   1ce7c:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   1ce80:	ldr	r1, [pc, #468]	; 1d05c <__flatcc_fb_gen_c_builder@@Base+0x2a04>
   1ce84:	ldr	r0, [fp, #12]
   1ce88:	ldr	r4, [pc, #464]	; 1d060 <__flatcc_fb_gen_c_builder@@Base+0x2a08>
   1ce8c:	ldr	r5, [r5, #20]
   1ce90:	add	r1, pc, r1
   1ce94:	cmp	r0, #0
   1ce98:	add	r4, pc, r4
   1ce9c:	moveq	r4, r1
   1cea0:	cmp	r5, #0
   1cea4:	bne	1cef8 <__flatcc_fb_gen_c_builder@@Base+0x28a0>
   1cea8:	sub	sp, fp, #28
   1ceac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ceb0:	ldr	r1, [sp, #32]
   1ceb4:	ldr	r0, [r7, #204]	; 0xcc
   1ceb8:	stm	sp, {r7, r9}
   1cebc:	str	sl, [sp, #20]
   1cec0:	str	r6, [sp, #24]
   1cec4:	str	r1, [sp, #8]
   1cec8:	ldr	r1, [sp, #36]	; 0x24
   1cecc:	str	r1, [sp, #12]
   1ced0:	sub	r1, fp, #256	; 0x100
   1ced4:	str	r1, [sp, #16]
   1ced8:	ldr	r1, [pc, #420]	; 1d084 <__flatcc_fb_gen_c_builder@@Base+0x2a2c>
   1cedc:	add	r1, pc, r1
   1cee0:	mov	r2, r7
   1cee4:	mov	r3, r4
   1cee8:	bl	148bc <fprintf@plt>
   1ceec:	ldr	r5, [r5]
   1cef0:	cmp	r5, #0
   1cef4:	beq	1cea8 <__flatcc_fb_gen_c_builder@@Base+0x2850>
   1cef8:	ldrh	r0, [r5, #24]
   1cefc:	cmp	r0, #0
   1cf00:	beq	1ceec <__flatcc_fb_gen_c_builder@@Base+0x2894>
   1cf04:	ldr	r1, [r5, #4]
   1cf08:	cmp	r0, #10
   1cf0c:	ldm	r1, {r6, sl}
   1cf10:	beq	1ceb0 <__flatcc_fb_gen_c_builder@@Base+0x2858>
   1cf14:	cmp	r0, #14
   1cf18:	add	r8, sp, #40	; 0x28
   1cf1c:	bne	1cfbc <__flatcc_fb_gen_c_builder@@Base+0x2964>
   1cf20:	ldr	r1, [r5, #16]
   1cf24:	mov	r2, r8
   1cf28:	ldr	r0, [r1, #12]
   1cf2c:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   1cf30:	ldr	r0, [r5, #16]
   1cf34:	ldrh	r0, [r0, #8]
   1cf38:	cmp	r0, #1
   1cf3c:	beq	1cf84 <__flatcc_fb_gen_c_builder@@Base+0x292c>
   1cf40:	cmp	r0, #0
   1cf44:	bne	1d00c <__flatcc_fb_gen_c_builder@@Base+0x29b4>
   1cf48:	ldr	r1, [sp, #32]
   1cf4c:	ldr	r0, [r7, #204]	; 0xcc
   1cf50:	stm	sp, {r7, r9}
   1cf54:	str	sl, [sp, #20]
   1cf58:	str	r6, [sp, #24]
   1cf5c:	str	r1, [sp, #8]
   1cf60:	ldr	r1, [sp, #36]	; 0x24
   1cf64:	str	r1, [sp, #12]
   1cf68:	sub	r1, fp, #256	; 0x100
   1cf6c:	str	r1, [sp, #16]
   1cf70:	add	r1, sp, #40	; 0x28
   1cf74:	str	r1, [sp, #28]
   1cf78:	ldr	r1, [pc, #228]	; 1d064 <__flatcc_fb_gen_c_builder@@Base+0x2a0c>
   1cf7c:	add	r1, pc, r1
   1cf80:	b	1cee0 <__flatcc_fb_gen_c_builder@@Base+0x2888>
   1cf84:	ldr	r1, [sp, #32]
   1cf88:	ldr	r0, [r7, #204]	; 0xcc
   1cf8c:	stm	sp, {r7, r9}
   1cf90:	str	sl, [sp, #20]
   1cf94:	str	r6, [sp, #24]
   1cf98:	str	r8, [sp, #28]
   1cf9c:	str	r1, [sp, #8]
   1cfa0:	ldr	r1, [sp, #36]	; 0x24
   1cfa4:	str	r1, [sp, #12]
   1cfa8:	sub	r1, fp, #256	; 0x100
   1cfac:	str	r1, [sp, #16]
   1cfb0:	ldr	r1, [pc, #176]	; 1d068 <__flatcc_fb_gen_c_builder@@Base+0x2a10>
   1cfb4:	add	r1, pc, r1
   1cfb8:	b	1cee0 <__flatcc_fb_gen_c_builder@@Base+0x2888>
   1cfbc:	ldr	r0, [pc, #196]	; 1d088 <__flatcc_fb_gen_c_builder@@Base+0x2a30>
   1cfc0:	movw	r3, #1368	; 0x558
   1cfc4:	ldr	r0, [pc, r0]
   1cfc8:	ldr	r0, [r0]
   1cfcc:	ldr	r1, [pc, #184]	; 1d08c <__flatcc_fb_gen_c_builder@@Base+0x2a34>
   1cfd0:	add	r1, pc, r1
   1cfd4:	str	r1, [sp]
   1cfd8:	ldr	r1, [pc, #176]	; 1d090 <__flatcc_fb_gen_c_builder@@Base+0x2a38>
   1cfdc:	ldr	r4, [pc, #176]	; 1d094 <__flatcc_fb_gen_c_builder@@Base+0x2a3c>
   1cfe0:	add	r4, pc, r4
   1cfe4:	add	r1, pc, r1
   1cfe8:	mov	r2, r4
   1cfec:	bl	148bc <fprintf@plt>
   1cff0:	ldr	r0, [pc, #160]	; 1d098 <__flatcc_fb_gen_c_builder@@Base+0x2a40>
   1cff4:	ldr	r3, [pc, #160]	; 1d09c <__flatcc_fb_gen_c_builder@@Base+0x2a44>
   1cff8:	mov	r1, r4
   1cffc:	movw	r2, #1368	; 0x558
   1d000:	add	r0, pc, r0
   1d004:	add	r3, pc, r3
   1d008:	bl	1497c <__assert_fail@plt>
   1d00c:	ldr	r0, [pc, #88]	; 1d06c <__flatcc_fb_gen_c_builder@@Base+0x2a14>
   1d010:	movw	r3, #1358	; 0x54e
   1d014:	ldr	r0, [pc, r0]
   1d018:	ldr	r0, [r0]
   1d01c:	ldr	r1, [pc, #76]	; 1d070 <__flatcc_fb_gen_c_builder@@Base+0x2a18>
   1d020:	add	r1, pc, r1
   1d024:	str	r1, [sp]
   1d028:	ldr	r1, [pc, #68]	; 1d074 <__flatcc_fb_gen_c_builder@@Base+0x2a1c>
   1d02c:	ldr	r4, [pc, #68]	; 1d078 <__flatcc_fb_gen_c_builder@@Base+0x2a20>
   1d030:	add	r4, pc, r4
   1d034:	add	r1, pc, r1
   1d038:	mov	r2, r4
   1d03c:	bl	148bc <fprintf@plt>
   1d040:	ldr	r0, [pc, #52]	; 1d07c <__flatcc_fb_gen_c_builder@@Base+0x2a24>
   1d044:	ldr	r3, [pc, #52]	; 1d080 <__flatcc_fb_gen_c_builder@@Base+0x2a28>
   1d048:	mov	r1, r4
   1d04c:	movw	r2, #1358	; 0x54e
   1d050:	add	r0, pc, r0
   1d054:	add	r3, pc, r3
   1d058:	bl	1497c <__assert_fail@plt>
   1d05c:	andeq	fp, r3, r5, lsr #6
   1d060:	andeq	r3, r3, r3, lsl pc
   1d064:	andeq	r3, r3, ip, lsr lr
   1d068:	andeq	r3, r3, pc, lsr lr
   1d06c:	andeq	lr, r4, r8, lsl #1
   1d070:	andeq	r3, r3, pc, lsl #28
   1d074:	andeq	r2, r2, r2, asr r5
   1d078:	muleq	r3, r6, r0
   1d07c:	strdeq	r3, [r3], -lr
   1d080:	andeq	r3, r3, r1, lsl lr
   1d084:	andeq	r3, r3, r9, ror #31
   1d088:	ldrdeq	lr, [r4], -r8
   1d08c:	andeq	r3, r3, sp, lsr #30
   1d090:	andeq	r2, r2, r2, lsr #11
   1d094:	andeq	r3, r3, r6, ror #1
   1d098:	andeq	r3, r3, lr, asr #8
   1d09c:	andeq	r3, r3, r1, ror #28

0001d0a0 <__flatcc_fb_gen_c_verifier@@Base>:
   1d0a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d0a4:	add	fp, sp, #28
   1d0a8:	sub	sp, sp, #492	; 0x1ec
   1d0ac:	mov	r4, r0
   1d0b0:	mov	r8, r0
   1d0b4:	ldr	r1, [r4, #208]	; 0xd0
   1d0b8:	ldr	r0, [r8, #204]!	; 0xcc
   1d0bc:	ldr	r2, [r1, #164]	; 0xa4
   1d0c0:	ldr	r1, [pc, #2588]	; 1dae4 <__flatcc_fb_gen_c_verifier@@Base+0xa44>
   1d0c4:	add	r1, pc, r1
   1d0c8:	mov	r3, r2
   1d0cc:	bl	148bc <fprintf@plt>
   1d0d0:	ldr	r3, [r8]
   1d0d4:	ldr	r0, [pc, #2572]	; 1dae8 <__flatcc_fb_gen_c_verifier@@Base+0xa48>
   1d0d8:	mov	r1, #81	; 0x51
   1d0dc:	mov	r2, #1
   1d0e0:	add	r0, pc, r0
   1d0e4:	bl	14850 <fwrite@plt>
   1d0e8:	ldr	r1, [r4, #208]	; 0xd0
   1d0ec:	ldr	r0, [r8]
   1d0f0:	ldr	r2, [r1, #164]	; 0xa4
   1d0f4:	ldr	r1, [pc, #2544]	; 1daec <__flatcc_fb_gen_c_verifier@@Base+0xa4c>
   1d0f8:	add	r1, pc, r1
   1d0fc:	bl	148bc <fprintf@plt>
   1d100:	ldr	r1, [r4, #208]	; 0xd0
   1d104:	ldr	r0, [r8]
   1d108:	ldr	r2, [r1, #160]	; 0xa0
   1d10c:	ldr	r1, [pc, #2524]	; 1daf0 <__flatcc_fb_gen_c_verifier@@Base+0xa50>
   1d110:	add	r1, pc, r1
   1d114:	bl	148bc <fprintf@plt>
   1d118:	ldr	r3, [r8]
   1d11c:	ldr	r0, [pc, #2512]	; 1daf4 <__flatcc_fb_gen_c_verifier@@Base+0xa54>
   1d120:	mov	r1, #7
   1d124:	mov	r2, #1
   1d128:	add	r0, pc, r0
   1d12c:	bl	14850 <fwrite@plt>
   1d130:	ldr	r3, [r8]
   1d134:	ldr	r0, [pc, #2492]	; 1daf8 <__flatcc_fb_gen_c_verifier@@Base+0xa58>
   1d138:	mov	r1, #36	; 0x24
   1d13c:	mov	r2, #1
   1d140:	add	r0, pc, r0
   1d144:	bl	14850 <fwrite@plt>
   1d148:	ldr	r1, [pc, #2476]	; 1dafc <__flatcc_fb_gen_c_verifier@@Base+0xa5c>
   1d14c:	ldr	r2, [pc, #2476]	; 1db00 <__flatcc_fb_gen_c_verifier@@Base+0xa60>
   1d150:	mov	r0, r4
   1d154:	add	r1, pc, r1
   1d158:	add	r2, pc, r2
   1d15c:	bl	159d4 <__flatcc_fb_gen_c_includes@@Base>
   1d160:	ldr	r0, [r4, #212]	; 0xd4
   1d164:	str	r4, [sp, #36]	; 0x24
   1d168:	ldr	r0, [r0, #140]	; 0x8c
   1d16c:	cmp	r0, #0
   1d170:	beq	1d18c <__flatcc_fb_gen_c_verifier@@Base+0xec>
   1d174:	ldr	r3, [r8]
   1d178:	ldr	r0, [pc, #2436]	; 1db04 <__flatcc_fb_gen_c_verifier@@Base+0xa64>
   1d17c:	mov	r1, #36	; 0x24
   1d180:	mov	r2, #1
   1d184:	add	r0, pc, r0
   1d188:	bl	14850 <fwrite@plt>
   1d18c:	ldr	r4, [sp, #36]	; 0x24
   1d190:	mov	r0, #10
   1d194:	ldr	r1, [r4, #204]	; 0xcc
   1d198:	bl	1491c <fputc@plt>
   1d19c:	sub	r0, fp, #256	; 0x100
   1d1a0:	mov	r1, #0
   1d1a4:	mov	r2, #220	; 0xdc
   1d1a8:	bl	148d4 <memset@plt>
   1d1ac:	ldr	r0, [r4, #208]	; 0xd0
   1d1b0:	ldr	r4, [r0, #40]	; 0x28
   1d1b4:	cmp	r4, #0
   1d1b8:	beq	1d208 <__flatcc_fb_gen_c_verifier@@Base+0x168>
   1d1bc:	ldr	r6, [pc, #2372]	; 1db08 <__flatcc_fb_gen_c_verifier@@Base+0xa68>
   1d1c0:	sub	r5, fp, #256	; 0x100
   1d1c4:	add	r6, pc, r6
   1d1c8:	b	1d1d8 <__flatcc_fb_gen_c_verifier@@Base+0x138>
   1d1cc:	ldr	r4, [r4]
   1d1d0:	cmp	r4, #0
   1d1d4:	beq	1d208 <__flatcc_fb_gen_c_verifier@@Base+0x168>
   1d1d8:	ldrh	r0, [r4, #8]
   1d1dc:	cmp	r0, #0
   1d1e0:	bne	1d1cc <__flatcc_fb_gen_c_verifier@@Base+0x12c>
   1d1e4:	ldr	r0, [r4, #12]
   1d1e8:	mov	r1, r4
   1d1ec:	mov	r2, r5
   1d1f0:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   1d1f4:	ldr	r0, [r8]
   1d1f8:	mov	r1, r6
   1d1fc:	mov	r2, r5
   1d200:	bl	148bc <fprintf@plt>
   1d204:	b	1d1cc <__flatcc_fb_gen_c_verifier@@Base+0x12c>
   1d208:	ldr	r4, [sp, #36]	; 0x24
   1d20c:	mov	r0, #10
   1d210:	ldr	r1, [r4, #204]	; 0xcc
   1d214:	bl	1491c <fputc@plt>
   1d218:	ldr	r0, [r4, #208]	; 0xd0
   1d21c:	ldr	r6, [r0, #40]	; 0x28
   1d220:	cmp	r6, #0
   1d224:	beq	1d950 <__flatcc_fb_gen_c_verifier@@Base+0x8b0>
   1d228:	ldr	r9, [pc, #2268]	; 1db0c <__flatcc_fb_gen_c_verifier@@Base+0xa6c>
   1d22c:	add	r4, sp, #40	; 0x28
   1d230:	add	r9, pc, r9
   1d234:	b	1d25c <__flatcc_fb_gen_c_verifier@@Base+0x1bc>
   1d238:	ldr	r3, [r8]
   1d23c:	ldr	r0, [pc, #2312]	; 1db4c <__flatcc_fb_gen_c_verifier@@Base+0xaac>
   1d240:	mov	r1, #47	; 0x2f
   1d244:	mov	r2, #1
   1d248:	add	r0, pc, r0
   1d24c:	bl	14850 <fwrite@plt>
   1d250:	ldr	r6, [r6]
   1d254:	cmp	r6, #0
   1d258:	beq	1d394 <__flatcc_fb_gen_c_verifier@@Base+0x2f4>
   1d25c:	ldrh	r0, [r6, #8]
   1d260:	cmp	r0, #4
   1d264:	bne	1d250 <__flatcc_fb_gen_c_verifier@@Base+0x1b0>
   1d268:	sub	r5, fp, #256	; 0x100
   1d26c:	mov	r1, #0
   1d270:	mov	r2, #220	; 0xdc
   1d274:	mov	r0, r5
   1d278:	bl	148d4 <memset@plt>
   1d27c:	mov	r0, r4
   1d280:	mov	r1, #0
   1d284:	mov	r2, #220	; 0xdc
   1d288:	bl	148d4 <memset@plt>
   1d28c:	ldr	r0, [r6, #12]
   1d290:	mov	r1, r6
   1d294:	mov	r2, r5
   1d298:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   1d29c:	ldr	r0, [r8]
   1d2a0:	ldr	r1, [pc, #2152]	; 1db10 <__flatcc_fb_gen_c_verifier@@Base+0xa70>
   1d2a4:	mov	r2, r5
   1d2a8:	add	r1, pc, r1
   1d2ac:	bl	148bc <fprintf@plt>
   1d2b0:	ldr	r7, [r6, #20]
   1d2b4:	cmp	r7, #0
   1d2b8:	bne	1d300 <__flatcc_fb_gen_c_verifier@@Base+0x260>
   1d2bc:	b	1d238 <__flatcc_fb_gen_c_verifier@@Base+0x198>
   1d2c0:	ldr	r3, [r1, #112]	; 0x70
   1d2c4:	ldr	r4, [r1, #116]	; 0x74
   1d2c8:	ldrh	r1, [r1, #104]	; 0x68
   1d2cc:	ldr	r2, [r7, #48]	; 0x30
   1d2d0:	ldr	r0, [r8]
   1d2d4:	stm	sp, {r3, r4}
   1d2d8:	str	r1, [sp, #8]
   1d2dc:	str	sl, [sp, #12]
   1d2e0:	str	r5, [sp, #16]
   1d2e4:	add	r4, sp, #40	; 0x28
   1d2e8:	ldr	r1, [pc, #2136]	; 1db48 <__flatcc_fb_gen_c_verifier@@Base+0xaa8>
   1d2ec:	add	r1, pc, r1
   1d2f0:	bl	148bc <fprintf@plt>
   1d2f4:	ldr	r7, [r7]
   1d2f8:	cmp	r7, #0
   1d2fc:	beq	1d238 <__flatcc_fb_gen_c_verifier@@Base+0x198>
   1d300:	ldrh	r0, [r7, #24]
   1d304:	cmp	r0, #0
   1d308:	beq	1d2f4 <__flatcc_fb_gen_c_verifier@@Base+0x254>
   1d30c:	ldr	r1, [r7, #4]
   1d310:	cmp	r0, #10
   1d314:	ldm	r1, {r5, sl}
   1d318:	beq	1d36c <__flatcc_fb_gen_c_verifier@@Base+0x2cc>
   1d31c:	cmp	r0, #14
   1d320:	bne	1d9a4 <__flatcc_fb_gen_c_verifier@@Base+0x904>
   1d324:	ldr	r1, [r7, #16]
   1d328:	mov	r2, r4
   1d32c:	ldr	r0, [r1, #12]
   1d330:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   1d334:	ldr	r1, [r7, #16]
   1d338:	ldrh	r0, [r1, #8]
   1d33c:	cmp	r0, #1
   1d340:	beq	1d2c0 <__flatcc_fb_gen_c_verifier@@Base+0x220>
   1d344:	cmp	r0, #0
   1d348:	bne	1d9f4 <__flatcc_fb_gen_c_verifier@@Base+0x954>
   1d34c:	ldr	r2, [r7, #48]	; 0x30
   1d350:	ldr	r0, [r8]
   1d354:	str	sl, [sp]
   1d358:	str	r5, [sp, #4]
   1d35c:	mov	r3, r4
   1d360:	ldr	r1, [pc, #1964]	; 1db14 <__flatcc_fb_gen_c_verifier@@Base+0xa74>
   1d364:	add	r1, pc, r1
   1d368:	b	1d380 <__flatcc_fb_gen_c_verifier@@Base+0x2e0>
   1d36c:	ldr	r2, [r7, #48]	; 0x30
   1d370:	ldr	r0, [r8]
   1d374:	mov	r1, r9
   1d378:	mov	r3, sl
   1d37c:	str	r5, [sp]
   1d380:	bl	148bc <fprintf@plt>
   1d384:	ldr	r7, [r7]
   1d388:	cmp	r7, #0
   1d38c:	bne	1d300 <__flatcc_fb_gen_c_verifier@@Base+0x260>
   1d390:	b	1d238 <__flatcc_fb_gen_c_verifier@@Base+0x198>
   1d394:	ldr	r0, [sp, #36]	; 0x24
   1d398:	ldr	r0, [r0, #208]	; 0xd0
   1d39c:	ldr	r4, [r0, #40]	; 0x28
   1d3a0:	cmp	r4, #0
   1d3a4:	beq	1d950 <__flatcc_fb_gen_c_verifier@@Base+0x8b0>
   1d3a8:	ldr	r9, [pc, #1952]	; 1db50 <__flatcc_fb_gen_c_verifier@@Base+0xab0>
   1d3ac:	ldr	sl, [pc, #1952]	; 1db54 <__flatcc_fb_gen_c_verifier@@Base+0xab4>
   1d3b0:	ldr	r5, [pc, #1952]	; 1db58 <__flatcc_fb_gen_c_verifier@@Base+0xab8>
   1d3b4:	ldr	r6, [sp, #36]	; 0x24
   1d3b8:	add	r9, pc, r9
   1d3bc:	add	sl, pc, sl
   1d3c0:	add	r5, pc, r5
   1d3c4:	b	1d3d4 <__flatcc_fb_gen_c_verifier@@Base+0x334>
   1d3c8:	ldr	r4, [r4]
   1d3cc:	cmp	r4, #0
   1d3d0:	beq	1d498 <__flatcc_fb_gen_c_verifier@@Base+0x3f8>
   1d3d4:	ldrh	r0, [r4, #8]
   1d3d8:	cmp	r0, #1
   1d3dc:	bne	1d3c8 <__flatcc_fb_gen_c_verifier@@Base+0x328>
   1d3e0:	sub	r7, fp, #256	; 0x100
   1d3e4:	mov	r1, #0
   1d3e8:	mov	r2, #220	; 0xdc
   1d3ec:	mov	r0, r7
   1d3f0:	bl	148d4 <memset@plt>
   1d3f4:	ldr	r0, [r4, #12]
   1d3f8:	mov	r1, r4
   1d3fc:	mov	r2, r7
   1d400:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   1d404:	ldrd	r2, [r4, #112]	; 0x70
   1d408:	ldrh	r1, [r4, #104]	; 0x68
   1d40c:	ldr	r0, [r6, #204]	; 0xcc
   1d410:	stm	sp, {r2, r3}
   1d414:	str	r1, [sp, #8]
   1d418:	mov	r2, r7
   1d41c:	mov	r3, r7
   1d420:	ldr	r1, [pc, #1844]	; 1db5c <__flatcc_fb_gen_c_verifier@@Base+0xabc>
   1d424:	add	r1, pc, r1
   1d428:	bl	148bc <fprintf@plt>
   1d42c:	ldrd	r2, [r4, #112]	; 0x70
   1d430:	ldrh	r1, [r4, #104]	; 0x68
   1d434:	ldr	r0, [r6, #204]	; 0xcc
   1d438:	stm	sp, {r2, r3}
   1d43c:	str	r1, [sp, #8]
   1d440:	mov	r1, r9
   1d444:	mov	r2, r7
   1d448:	mov	r3, r7
   1d44c:	bl	148bc <fprintf@plt>
   1d450:	ldrd	r2, [r4, #112]	; 0x70
   1d454:	ldrh	r1, [r4, #104]	; 0x68
   1d458:	ldr	r0, [r6, #204]	; 0xcc
   1d45c:	stm	sp, {r2, r3}
   1d460:	str	r1, [sp, #8]
   1d464:	mov	r1, sl
   1d468:	mov	r2, r7
   1d46c:	mov	r3, r6
   1d470:	bl	148bc <fprintf@plt>
   1d474:	ldrd	r2, [r4, #112]	; 0x70
   1d478:	ldrh	r1, [r4, #104]	; 0x68
   1d47c:	ldr	r0, [r6, #204]	; 0xcc
   1d480:	stm	sp, {r2, r3}
   1d484:	str	r1, [sp, #8]
   1d488:	mov	r1, r5
   1d48c:	mov	r2, r7
   1d490:	bl	148bc <fprintf@plt>
   1d494:	b	1d3c8 <__flatcc_fb_gen_c_verifier@@Base+0x328>
   1d498:	ldr	r0, [sp, #36]	; 0x24
   1d49c:	ldr	r0, [r0, #208]	; 0xd0
   1d4a0:	ldr	r7, [r0, #40]	; 0x28
   1d4a4:	cmp	r7, #0
   1d4a8:	beq	1d950 <__flatcc_fb_gen_c_verifier@@Base+0x8b0>
   1d4ac:	ldr	r6, [pc, #1708]	; 1db60 <__flatcc_fb_gen_c_verifier@@Base+0xac0>
   1d4b0:	add	r6, pc, r6
   1d4b4:	b	1d570 <__flatcc_fb_gen_c_verifier@@Base+0x4d0>
   1d4b8:	cmp	r0, #0
   1d4bc:	beq	1d934 <__flatcc_fb_gen_c_verifier@@Base+0x894>
   1d4c0:	ldr	r4, [sp, #36]	; 0x24
   1d4c4:	mov	r1, #29
   1d4c8:	mov	r2, #1
   1d4cc:	ldr	r3, [r4, #204]	; 0xcc
   1d4d0:	ldr	r0, [pc, #1796]	; 1dbdc <__flatcc_fb_gen_c_verifier@@Base+0xb3c>
   1d4d4:	add	r0, pc, r0
   1d4d8:	bl	14850 <fwrite@plt>
   1d4dc:	ldr	r3, [r4, #204]	; 0xcc
   1d4e0:	ldr	r0, [pc, #1784]	; 1dbe0 <__flatcc_fb_gen_c_verifier@@Base+0xb40>
   1d4e4:	mov	r1, #3
   1d4e8:	mov	r2, #1
   1d4ec:	add	r0, pc, r0
   1d4f0:	bl	14850 <fwrite@plt>
   1d4f4:	sub	r5, fp, #256	; 0x100
   1d4f8:	ldr	r0, [r4, #204]	; 0xcc
   1d4fc:	str	r5, [sp]
   1d500:	mov	r2, r5
   1d504:	mov	r3, r5
   1d508:	ldr	r1, [pc, #1748]	; 1dbe4 <__flatcc_fb_gen_c_verifier@@Base+0xb44>
   1d50c:	add	r1, pc, r1
   1d510:	bl	148bc <fprintf@plt>
   1d514:	ldr	r0, [r4, #204]	; 0xcc
   1d518:	str	r5, [sp]
   1d51c:	mov	r2, r5
   1d520:	mov	r3, r5
   1d524:	ldr	r1, [pc, #1724]	; 1dbe8 <__flatcc_fb_gen_c_verifier@@Base+0xb48>
   1d528:	add	r1, pc, r1
   1d52c:	bl	148bc <fprintf@plt>
   1d530:	ldr	r0, [r4, #204]	; 0xcc
   1d534:	ldr	r1, [pc, #1712]	; 1dbec <__flatcc_fb_gen_c_verifier@@Base+0xb4c>
   1d538:	mov	r2, r5
   1d53c:	mov	r3, r5
   1d540:	add	r1, pc, r1
   1d544:	bl	148bc <fprintf@plt>
   1d548:	ldr	r0, [r4, #204]	; 0xcc
   1d54c:	str	r5, [sp]
   1d550:	mov	r2, r5
   1d554:	mov	r3, r4
   1d558:	ldr	r1, [pc, #1680]	; 1dbf0 <__flatcc_fb_gen_c_verifier@@Base+0xb50>
   1d55c:	add	r1, pc, r1
   1d560:	bl	148bc <fprintf@plt>
   1d564:	ldr	r7, [r7]
   1d568:	cmp	r7, #0
   1d56c:	beq	1d950 <__flatcc_fb_gen_c_verifier@@Base+0x8b0>
   1d570:	ldrh	r0, [r7, #8]
   1d574:	cmp	r0, #0
   1d578:	bne	1d564 <__flatcc_fb_gen_c_verifier@@Base+0x4c4>
   1d57c:	sub	r4, fp, #256	; 0x100
   1d580:	mov	r1, #0
   1d584:	mov	r2, #220	; 0xdc
   1d588:	mov	r0, r4
   1d58c:	bl	148d4 <memset@plt>
   1d590:	add	r0, sp, #40	; 0x28
   1d594:	mov	r1, #0
   1d598:	mov	r2, #220	; 0xdc
   1d59c:	bl	148d4 <memset@plt>
   1d5a0:	ldr	r0, [r7, #12]
   1d5a4:	mov	r1, r7
   1d5a8:	mov	r2, r4
   1d5ac:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   1d5b0:	ldr	r0, [r8]
   1d5b4:	ldr	r1, [pc, #1448]	; 1db64 <__flatcc_fb_gen_c_verifier@@Base+0xac4>
   1d5b8:	mov	r2, r4
   1d5bc:	add	r1, pc, r1
   1d5c0:	bl	148bc <fprintf@plt>
   1d5c4:	ldr	r5, [r7, #20]
   1d5c8:	cmp	r5, #0
   1d5cc:	beq	1d4c0 <__flatcc_fb_gen_c_verifier@@Base+0x420>
   1d5d0:	mov	r0, #1
   1d5d4:	b	1d630 <__flatcc_fb_gen_c_verifier@@Base+0x590>
   1d5d8:	ldr	r1, [r4, #4]
   1d5dc:	ldr	r4, [r4]
   1d5e0:	ldrd	r2, [sl]
   1d5e4:	ldr	r0, [r8]
   1d5e8:	ldrh	r6, [r5, #74]	; 0x4a
   1d5ec:	str	r4, [sp]
   1d5f0:	stmib	sp, {r1, r6}
   1d5f4:	ldr	r6, [pc, #1416]	; 1db84 <__flatcc_fb_gen_c_verifier@@Base+0xae4>
   1d5f8:	ldr	r1, [pc, #1416]	; 1db88 <__flatcc_fb_gen_c_verifier@@Base+0xae8>
   1d5fc:	add	r6, pc, r6
   1d600:	add	r1, pc, r1
   1d604:	bl	148bc <fprintf@plt>
   1d608:	ldr	r1, [r5, #4]
   1d60c:	ldr	r0, [r8]
   1d610:	ldr	r3, [r1]
   1d614:	ldr	r2, [r1, #4]
   1d618:	mov	r1, r6
   1d61c:	bl	148bc <fprintf@plt>
   1d620:	mov	r0, #0
   1d624:	ldr	r5, [r5]
   1d628:	cmp	r5, #0
   1d62c:	beq	1d4b8 <__flatcc_fb_gen_c_verifier@@Base+0x418>
   1d630:	ldrb	r1, [r5, #72]	; 0x48
   1d634:	tst	r1, #4
   1d638:	bne	1d624 <__flatcc_fb_gen_c_verifier@@Base+0x584>
   1d63c:	ldr	r3, [r8]
   1d640:	cmp	r0, #0
   1d644:	beq	1d658 <__flatcc_fb_gen_c_verifier@@Base+0x5b8>
   1d648:	ldr	r0, [pc, #1304]	; 1db68 <__flatcc_fb_gen_c_verifier@@Base+0xac8>
   1d64c:	mov	r1, #28
   1d650:	add	r0, pc, r0
   1d654:	b	1d664 <__flatcc_fb_gen_c_verifier@@Base+0x5c4>
   1d658:	ldr	r0, [pc, #1292]	; 1db6c <__flatcc_fb_gen_c_verifier@@Base+0xacc>
   1d65c:	mov	r1, #30
   1d660:	add	r0, pc, r0
   1d664:	mov	r2, #1
   1d668:	bl	14850 <fwrite@plt>
   1d66c:	ldrh	r0, [r5, #72]	; 0x48
   1d670:	ubfx	r9, r0, #8, #1
   1d674:	ldrh	r0, [r5, #24]
   1d678:	sub	r0, r0, #7
   1d67c:	cmp	r0, #8
   1d680:	bhi	1d608 <__flatcc_fb_gen_c_verifier@@Base+0x568>
   1d684:	add	r1, pc, #12
   1d688:	add	r4, r5, #88	; 0x58
   1d68c:	add	sl, r5, #96	; 0x60
   1d690:	ldr	r0, [r1, r0, lsl #2]
   1d694:	add	pc, r1, r0
   1d698:	andeq	r0, r0, r4, lsr #32
   1d69c:			; <UNDEFINED> instruction: 0xffffff40
   1d6a0:	andeq	r0, r0, r0, lsl #1
   1d6a4:	andeq	r0, r0, r0, asr #2
   1d6a8:			; <UNDEFINED> instruction: 0xffffff70
   1d6ac:			; <UNDEFINED> instruction: 0xffffff70
   1d6b0:			; <UNDEFINED> instruction: 0xffffff70
   1d6b4:	andeq	r0, r0, r8, asr r1
   1d6b8:	muleq	r0, r8, r0
   1d6bc:	ldr	r1, [r5, #104]	; 0x68
   1d6c0:	cmp	r1, #0
   1d6c4:	beq	1d850 <__flatcc_fb_gen_c_verifier@@Base+0x7b0>
   1d6c8:	ldr	r0, [r1, #12]
   1d6cc:	add	r6, sp, #40	; 0x28
   1d6d0:	mov	r2, r6
   1d6d4:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   1d6d8:	ldr	r1, [r5, #104]	; 0x68
   1d6dc:	ldrd	r2, [sl]
   1d6e0:	ldr	r0, [r8]
   1d6e4:	ldrh	r1, [r1, #8]
   1d6e8:	cmp	r1, #0
   1d6ec:	beq	1d910 <__flatcc_fb_gen_c_verifier@@Base+0x870>
   1d6f0:	ldr	r1, [r4, #4]
   1d6f4:	ldr	r4, [r4]
   1d6f8:	ldrh	r6, [r5, #74]	; 0x4a
   1d6fc:	str	r9, [sp]
   1d700:	str	r4, [sp, #8]
   1d704:	str	r1, [sp, #12]
   1d708:	str	r6, [sp, #16]
   1d70c:	ldr	r1, [pc, #1124]	; 1db78 <__flatcc_fb_gen_c_verifier@@Base+0xad8>
   1d710:	add	r1, pc, r1
   1d714:	b	1d924 <__flatcc_fb_gen_c_verifier@@Base+0x884>
   1d718:	ldrd	r2, [sl]
   1d71c:	ldr	r0, [r8]
   1d720:	str	r9, [sp]
   1d724:	ldr	r1, [pc, #1108]	; 1db80 <__flatcc_fb_gen_c_verifier@@Base+0xae0>
   1d728:	add	r1, pc, r1
   1d72c:	b	1d604 <__flatcc_fb_gen_c_verifier@@Base+0x564>
   1d730:	ldr	r1, [r5, #16]
   1d734:	add	r2, sp, #40	; 0x28
   1d738:	ldr	r0, [r1, #12]
   1d73c:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   1d740:	ldr	r0, [r5, #16]
   1d744:	ldrh	r0, [r0, #8]
   1d748:	cmp	r0, #4
   1d74c:	bhi	1da44 <__flatcc_fb_gen_c_verifier@@Base+0x9a4>
   1d750:	add	r1, pc, #4
   1d754:	ldr	r0, [r1, r0, lsl #2]
   1d758:	add	pc, r1, r0
   1d75c:	andeq	r0, r0, r4, asr r1
   1d760:	andeq	r0, r0, r4, lsl r0
   1d764:	andeq	r0, r0, r8, ror #5
   1d768:	andeq	r0, r0, r4, lsl r0
   1d76c:	andeq	r0, r0, r4, ror r1
   1d770:	ldm	r4, {r4, r6}
   1d774:	mvn	r0, #0
   1d778:	mov	r1, #0
   1d77c:	orrs	r3, r4, r6
   1d780:	mov	r2, r4
   1d784:	movweq	r2, #1
   1d788:	movne	r3, r6
   1d78c:	bl	3df2c <fb_value_set_visit@@Base+0x66c>
   1d790:	ldrh	r3, [r5, #74]	; 0x4a
   1d794:	ldr	lr, [sl]
   1d798:	ldr	ip, [sl, #4]
   1d79c:	ldr	r2, [r8]
   1d7a0:	str	r4, [sp, #8]
   1d7a4:	str	r6, [sp, #12]
   1d7a8:	ldr	r6, [pc, #1024]	; 1dbb0 <__flatcc_fb_gen_c_verifier@@Base+0xb10>
   1d7ac:	str	r0, [sp, #24]
   1d7b0:	str	r9, [sp]
   1d7b4:	str	r1, [sp, #28]
   1d7b8:	str	r3, [sp, #16]
   1d7bc:	mov	r0, r2
   1d7c0:	mov	r2, lr
   1d7c4:	mov	r3, ip
   1d7c8:	ldr	r1, [pc, #996]	; 1dbb4 <__flatcc_fb_gen_c_verifier@@Base+0xb14>
   1d7cc:	add	r6, pc, r6
   1d7d0:	add	r1, pc, r1
   1d7d4:	b	1d604 <__flatcc_fb_gen_c_verifier@@Base+0x564>
   1d7d8:	ldrd	r2, [sl]
   1d7dc:	ldr	r0, [r8]
   1d7e0:	str	r9, [sp]
   1d7e4:	ldr	r1, [pc, #1000]	; 1dbd4 <__flatcc_fb_gen_c_verifier@@Base+0xb34>
   1d7e8:	add	r1, pc, r1
   1d7ec:	b	1d604 <__flatcc_fb_gen_c_verifier@@Base+0x564>
   1d7f0:	ldr	r1, [r5, #16]
   1d7f4:	add	r2, sp, #40	; 0x28
   1d7f8:	ldr	r0, [r1, #12]
   1d7fc:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   1d800:	ldr	r0, [r5, #16]
   1d804:	ldrh	r0, [r0, #8]
   1d808:	cmp	r0, #4
   1d80c:	bhi	1da94 <__flatcc_fb_gen_c_verifier@@Base+0x9f4>
   1d810:	add	r1, pc, #4
   1d814:	ldr	r0, [r1, r0, lsl #2]
   1d818:	add	pc, r1, r0
   1d81c:	andeq	r0, r0, r4, lsl r0
   1d820:			; <UNDEFINED> instruction: 0xfffffdbc
   1d824:	andeq	r0, r0, r8, ror r2
   1d828:			; <UNDEFINED> instruction: 0xfffffdbc
   1d82c:	ldrdeq	r0, [r0], -r4
   1d830:	add	r1, sp, #40	; 0x28
   1d834:	ldrd	r2, [sl]
   1d838:	ldr	r0, [r8]
   1d83c:	str	r9, [sp]
   1d840:	str	r1, [sp, #4]
   1d844:	ldr	r1, [pc, #832]	; 1db8c <__flatcc_fb_gen_c_verifier@@Base+0xaec>
   1d848:	add	r1, pc, r1
   1d84c:	b	1d604 <__flatcc_fb_gen_c_verifier@@Base+0x564>
   1d850:	ldm	r4, {r4, r6}
   1d854:	mvn	r0, #0
   1d858:	mov	r1, #0
   1d85c:	orrs	r3, r4, r6
   1d860:	mov	r2, r4
   1d864:	movweq	r2, #1
   1d868:	movne	r3, r6
   1d86c:	bl	3df2c <fb_value_set_visit@@Base+0x66c>
   1d870:	ldrh	r3, [r5, #74]	; 0x4a
   1d874:	ldr	lr, [sl]
   1d878:	ldr	ip, [sl, #4]
   1d87c:	ldr	r2, [r8]
   1d880:	str	r0, [sp, #24]
   1d884:	str	r4, [sp, #8]
   1d888:	str	r6, [sp, #12]
   1d88c:	str	r9, [sp]
   1d890:	str	r1, [sp, #28]
   1d894:	str	r3, [sp, #16]
   1d898:	mov	r0, r2
   1d89c:	mov	r2, lr
   1d8a0:	mov	r3, ip
   1d8a4:	ldr	r1, [pc, #720]	; 1db7c <__flatcc_fb_gen_c_verifier@@Base+0xadc>
   1d8a8:	add	r1, pc, r1
   1d8ac:	b	1d924 <__flatcc_fb_gen_c_verifier@@Base+0x884>
   1d8b0:	add	r1, sp, #40	; 0x28
   1d8b4:	ldrd	r2, [sl]
   1d8b8:	ldr	r0, [r8]
   1d8bc:	str	r9, [sp]
   1d8c0:	str	r1, [sp, #4]
   1d8c4:	ldr	r1, [pc, #736]	; 1dbac <__flatcc_fb_gen_c_verifier@@Base+0xb0c>
   1d8c8:	add	r1, pc, r1
   1d8cc:	b	1d604 <__flatcc_fb_gen_c_verifier@@Base+0x564>
   1d8d0:	add	r1, sp, #40	; 0x28
   1d8d4:	ldrd	r2, [sl]
   1d8d8:	ldr	r0, [r8]
   1d8dc:	str	r9, [sp]
   1d8e0:	str	r1, [sp, #4]
   1d8e4:	ldr	r1, [pc, #716]	; 1dbb8 <__flatcc_fb_gen_c_verifier@@Base+0xb18>
   1d8e8:	add	r1, pc, r1
   1d8ec:	b	1d604 <__flatcc_fb_gen_c_verifier@@Base+0x564>
   1d8f0:	add	r1, sp, #40	; 0x28
   1d8f4:	ldrd	r2, [sl]
   1d8f8:	ldr	r0, [r8]
   1d8fc:	str	r9, [sp]
   1d900:	str	r1, [sp, #4]
   1d904:	ldr	r1, [pc, #644]	; 1db90 <__flatcc_fb_gen_c_verifier@@Base+0xaf0>
   1d908:	add	r1, pc, r1
   1d90c:	b	1d604 <__flatcc_fb_gen_c_verifier@@Base+0x564>
   1d910:	ldrh	r1, [r5, #74]	; 0x4a
   1d914:	str	r9, [sp]
   1d918:	stmib	sp, {r1, r6}
   1d91c:	ldr	r1, [pc, #588]	; 1db70 <__flatcc_fb_gen_c_verifier@@Base+0xad0>
   1d920:	add	r1, pc, r1
   1d924:	bl	148bc <fprintf@plt>
   1d928:	ldr	r6, [pc, #580]	; 1db74 <__flatcc_fb_gen_c_verifier@@Base+0xad4>
   1d92c:	add	r6, pc, r6
   1d930:	b	1d608 <__flatcc_fb_gen_c_verifier@@Base+0x568>
   1d934:	ldr	r3, [r8]
   1d938:	ldr	r0, [pc, #664]	; 1dbd8 <__flatcc_fb_gen_c_verifier@@Base+0xb38>
   1d93c:	mov	r1, #15
   1d940:	mov	r2, #1
   1d944:	add	r0, pc, r0
   1d948:	bl	14850 <fwrite@plt>
   1d94c:	b	1d4c0 <__flatcc_fb_gen_c_verifier@@Base+0x420>
   1d950:	ldr	r0, [sp, #36]	; 0x24
   1d954:	ldr	r0, [r0, #212]	; 0xd4
   1d958:	ldr	r0, [r0, #140]	; 0x8c
   1d95c:	cmp	r0, #0
   1d960:	beq	1d97c <__flatcc_fb_gen_c_verifier@@Base+0x8dc>
   1d964:	ldr	r3, [r8]
   1d968:	ldr	r0, [pc, #644]	; 1dbf4 <__flatcc_fb_gen_c_verifier@@Base+0xb54>
   1d96c:	mov	r1, #36	; 0x24
   1d970:	mov	r2, #1
   1d974:	add	r0, pc, r0
   1d978:	bl	14850 <fwrite@plt>
   1d97c:	ldr	r1, [sp, #36]	; 0x24
   1d980:	ldr	r0, [r1, #204]	; 0xcc
   1d984:	ldr	r1, [r1, #208]	; 0xd0
   1d988:	ldr	r2, [r1, #164]	; 0xa4
   1d98c:	ldr	r1, [pc, #612]	; 1dbf8 <__flatcc_fb_gen_c_verifier@@Base+0xb58>
   1d990:	add	r1, pc, r1
   1d994:	bl	148bc <fprintf@plt>
   1d998:	mov	r0, #0
   1d99c:	sub	sp, fp, #28
   1d9a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d9a4:	ldr	r0, [pc, #388]	; 1db30 <__flatcc_fb_gen_c_verifier@@Base+0xa90>
   1d9a8:	mov	r3, #83	; 0x53
   1d9ac:	ldr	r0, [pc, r0]
   1d9b0:	ldr	r0, [r0]
   1d9b4:	ldr	r1, [pc, #376]	; 1db34 <__flatcc_fb_gen_c_verifier@@Base+0xa94>
   1d9b8:	add	r1, pc, r1
   1d9bc:	str	r1, [sp]
   1d9c0:	ldr	r1, [pc, #368]	; 1db38 <__flatcc_fb_gen_c_verifier@@Base+0xa98>
   1d9c4:	ldr	r4, [pc, #368]	; 1db3c <__flatcc_fb_gen_c_verifier@@Base+0xa9c>
   1d9c8:	add	r4, pc, r4
   1d9cc:	add	r1, pc, r1
   1d9d0:	mov	r2, r4
   1d9d4:	bl	148bc <fprintf@plt>
   1d9d8:	ldr	r0, [pc, #352]	; 1db40 <__flatcc_fb_gen_c_verifier@@Base+0xaa0>
   1d9dc:	ldr	r3, [pc, #352]	; 1db44 <__flatcc_fb_gen_c_verifier@@Base+0xaa4>
   1d9e0:	mov	r1, r4
   1d9e4:	mov	r2, #83	; 0x53
   1d9e8:	add	r0, pc, r0
   1d9ec:	add	r3, pc, r3
   1d9f0:	bl	1497c <__assert_fail@plt>
   1d9f4:	ldr	r0, [pc, #284]	; 1db18 <__flatcc_fb_gen_c_verifier@@Base+0xa78>
   1d9f8:	mov	r3, #74	; 0x4a
   1d9fc:	ldr	r0, [pc, r0]
   1da00:	ldr	r0, [r0]
   1da04:	ldr	r1, [pc, #272]	; 1db1c <__flatcc_fb_gen_c_verifier@@Base+0xa7c>
   1da08:	add	r1, pc, r1
   1da0c:	str	r1, [sp]
   1da10:	ldr	r1, [pc, #264]	; 1db20 <__flatcc_fb_gen_c_verifier@@Base+0xa80>
   1da14:	ldr	r4, [pc, #264]	; 1db24 <__flatcc_fb_gen_c_verifier@@Base+0xa84>
   1da18:	add	r4, pc, r4
   1da1c:	add	r1, pc, r1
   1da20:	mov	r2, r4
   1da24:	bl	148bc <fprintf@plt>
   1da28:	ldr	r0, [pc, #248]	; 1db28 <__flatcc_fb_gen_c_verifier@@Base+0xa88>
   1da2c:	ldr	r3, [pc, #248]	; 1db2c <__flatcc_fb_gen_c_verifier@@Base+0xa8c>
   1da30:	mov	r1, r4
   1da34:	mov	r2, #74	; 0x4a
   1da38:	add	r0, pc, r0
   1da3c:	add	r3, pc, r3
   1da40:	bl	1497c <__assert_fail@plt>
   1da44:	ldr	r0, [pc, #368]	; 1dbbc <__flatcc_fb_gen_c_verifier@@Base+0xb1c>
   1da48:	mov	r3, #202	; 0xca
   1da4c:	ldr	r0, [pc, r0]
   1da50:	ldr	r0, [r0]
   1da54:	ldr	r1, [pc, #356]	; 1dbc0 <__flatcc_fb_gen_c_verifier@@Base+0xb20>
   1da58:	add	r1, pc, r1
   1da5c:	str	r1, [sp]
   1da60:	ldr	r1, [pc, #348]	; 1dbc4 <__flatcc_fb_gen_c_verifier@@Base+0xb24>
   1da64:	ldr	r4, [pc, #348]	; 1dbc8 <__flatcc_fb_gen_c_verifier@@Base+0xb28>
   1da68:	add	r4, pc, r4
   1da6c:	add	r1, pc, r1
   1da70:	mov	r2, r4
   1da74:	bl	148bc <fprintf@plt>
   1da78:	ldr	r0, [pc, #332]	; 1dbcc <__flatcc_fb_gen_c_verifier@@Base+0xb2c>
   1da7c:	ldr	r3, [pc, #332]	; 1dbd0 <__flatcc_fb_gen_c_verifier@@Base+0xb30>
   1da80:	mov	r1, r4
   1da84:	mov	r2, #202	; 0xca
   1da88:	add	r0, pc, r0
   1da8c:	add	r3, pc, r3
   1da90:	bl	1497c <__assert_fail@plt>
   1da94:	ldr	r0, [pc, #248]	; 1db94 <__flatcc_fb_gen_c_verifier@@Base+0xaf4>
   1da98:	mov	r3, #178	; 0xb2
   1da9c:	ldr	r0, [pc, r0]
   1daa0:	ldr	r0, [r0]
   1daa4:	ldr	r1, [pc, #236]	; 1db98 <__flatcc_fb_gen_c_verifier@@Base+0xaf8>
   1daa8:	add	r1, pc, r1
   1daac:	str	r1, [sp]
   1dab0:	ldr	r1, [pc, #228]	; 1db9c <__flatcc_fb_gen_c_verifier@@Base+0xafc>
   1dab4:	ldr	r4, [pc, #228]	; 1dba0 <__flatcc_fb_gen_c_verifier@@Base+0xb00>
   1dab8:	add	r4, pc, r4
   1dabc:	add	r1, pc, r1
   1dac0:	mov	r2, r4
   1dac4:	bl	148bc <fprintf@plt>
   1dac8:	ldr	r0, [pc, #212]	; 1dba4 <__flatcc_fb_gen_c_verifier@@Base+0xb04>
   1dacc:	ldr	r3, [pc, #212]	; 1dba8 <__flatcc_fb_gen_c_verifier@@Base+0xb08>
   1dad0:	mov	r1, r4
   1dad4:	mov	r2, #178	; 0xb2
   1dad8:	add	r0, pc, r0
   1dadc:	add	r3, pc, r3
   1dae0:	bl	1497c <__assert_fail@plt>
   1dae4:	andeq	r3, r3, r8, asr #31
   1dae8:	andeq	r2, r2, sp, ror r3
   1daec:	andeq	r2, r3, sp, lsl #30
   1daf0:	andeq	r2, r3, sl, lsl #30
   1daf4:	andeq	r8, r2, r4, asr r5
   1daf8:	andeq	r3, r3, r9, ror pc
   1dafc:	andeq	r2, r2, r7, lsr #5
   1db00:	andeq	r3, r3, r6, lsl #31
   1db04:	andeq	r2, r2, ip, asr #9
   1db08:	andeq	r3, r3, r6, lsr #30
   1db0c:	ldrdeq	r4, [r3], -sl
   1db10:	andeq	r3, r3, r7, lsl #29
   1db14:	andeq	r3, r3, fp, lsr #28
   1db18:	andeq	sp, r4, r0, lsr #13
   1db1c:	andeq	r3, r3, sl, lsl #17
   1db20:	andeq	r1, r2, sl, ror #22
   1db24:	andeq	r3, r3, r1, lsl r8
   1db28:	andeq	r2, r3, r6, lsl sl
   1db2c:	muleq	r3, r2, r8
   1db30:	strdeq	sp, [r4], -r0
   1db34:	muleq	r3, r2, r9
   1db38:			; <UNDEFINED> instruction: 0x00021bba
   1db3c:	andeq	r3, r3, r1, ror #16
   1db40:	andeq	r2, r3, r6, ror #20
   1db44:	andeq	r3, r3, r2, ror #17
   1db48:	strdeq	r3, [r3], -r3	; <UNPREDICTABLE>
   1db4c:	andeq	r4, r3, r5, lsr r1
   1db50:	andeq	r4, r3, lr, lsl #1
   1db54:	andeq	r4, r3, lr, lsr #2
   1db58:	andeq	r4, r3, r1, ror #3
   1db5c:	andeq	r3, r3, r9, lsl #31
   1db60:	andeq	r5, r3, sp, asr r0
   1db64:	muleq	r3, r5, r0
   1db68:	andeq	r4, r3, r7, asr #32
   1db6c:	andeq	r4, r3, r4, asr r0
   1db70:	ldrdeq	r3, [r3], -fp
   1db74:	andeq	r4, r3, r1, ror #23
   1db78:	andeq	r4, r3, r4, lsr r0
   1db7c:	ldrdeq	r3, [r3], -ip
   1db80:	andeq	r4, r3, r7, asr #1
   1db84:	andeq	r4, r3, r1, lsl pc
   1db88:	ldrdeq	r4, [r3], -r3
   1db8c:	ldrdeq	r3, [r3], -r7
   1db90:	andeq	r3, r3, r1, asr pc
   1db94:	andeq	sp, r4, r0, lsl #12
   1db98:	andeq	r3, r3, sp, ror #27
   1db9c:	andeq	r1, r2, sl, asr #21
   1dba0:	andeq	r3, r3, r1, ror r7
   1dba4:	andeq	r2, r3, r6, ror r9
   1dba8:	strdeq	r3, [r3], -r5
   1dbac:	andeq	r4, r3, r5, asr #32
   1dbb0:	andeq	r4, r3, r1, asr #26
   1dbb4:			; <UNDEFINED> instruction: 0x00033fb4
   1dbb8:	andeq	r4, r3, r6, rrx
   1dbbc:	andeq	sp, r4, r0, asr r6
   1dbc0:	andeq	r3, r3, r9, lsr pc
   1dbc4:	andeq	r1, r2, sl, lsl fp
   1dbc8:	andeq	r3, r3, r1, asr #15
   1dbcc:	andeq	r2, r3, r6, asr #19
   1dbd0:	andeq	r3, r3, r5, asr #28
   1dbd4:	ldrdeq	r3, [r3], -lr
   1dbd8:	muleq	r3, r0, r0
   1dbdc:	andeq	r4, r3, r0, lsl r5
   1dbe0:	andeq	r8, r3, ip, ror r5
   1dbe4:	strdeq	r4, [r3], -r6
   1dbe8:	andeq	r4, r3, sl, ror r5
   1dbec:	andeq	r4, r3, sp, lsl #12
   1dbf0:	andeq	r4, r3, r8, lsr #13
   1dbf4:	andeq	r7, r2, r6, asr #21
   1dbf8:	andeq	r4, r3, r2, lsr r3

0001dbfc <__flatcc_fb_gen_c_json_parser@@Base>:
   1dbfc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dc00:	add	fp, sp, #28
   1dc04:	sub	sp, sp, #4
   1dc08:	vpush	{d8-d9}
   1dc0c:	sub	sp, sp, #456	; 0x1c8
   1dc10:	mov	r4, r0
   1dc14:	ldr	r0, [r0, #208]	; 0xd0
   1dc18:	ldr	r2, [r0, #164]	; 0xa4
   1dc1c:	ldr	r1, [pc, #4084]	; 1ec18 <__flatcc_fb_gen_c_json_parser@@Base+0x101c>
   1dc20:	mov	r0, r4
   1dc24:	add	r1, pc, r1
   1dc28:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1dc2c:	ldr	r0, [r4, #208]	; 0xd0
   1dc30:	ldr	r2, [r0, #164]	; 0xa4
   1dc34:	ldr	r1, [pc, #4064]	; 1ec1c <__flatcc_fb_gen_c_json_parser@@Base+0x1020>
   1dc38:	mov	r0, r4
   1dc3c:	add	r1, pc, r1
   1dc40:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1dc44:	ldr	r5, [pc, #4052]	; 1ec20 <__flatcc_fb_gen_c_json_parser@@Base+0x1024>
   1dc48:	mov	r0, r4
   1dc4c:	add	r5, pc, r5
   1dc50:	mov	r1, r5
   1dc54:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1dc58:	ldr	r1, [pc, #4036]	; 1ec24 <__flatcc_fb_gen_c_json_parser@@Base+0x1028>
   1dc5c:	mov	r0, r4
   1dc60:	add	r1, pc, r1
   1dc64:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1dc68:	mov	r0, r4
   1dc6c:	mov	r1, r5
   1dc70:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1dc74:	ldr	r1, [pc, #4012]	; 1ec28 <__flatcc_fb_gen_c_json_parser@@Base+0x102c>
   1dc78:	mov	r0, r4
   1dc7c:	add	r1, pc, r1
   1dc80:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1dc84:	ldr	r1, [pc, #4000]	; 1ec2c <__flatcc_fb_gen_c_json_parser@@Base+0x1030>
   1dc88:	ldr	r2, [pc, #4000]	; 1ec30 <__flatcc_fb_gen_c_json_parser@@Base+0x1034>
   1dc8c:	mov	r0, r4
   1dc90:	add	r1, pc, r1
   1dc94:	add	r2, pc, r2
   1dc98:	bl	159d4 <__flatcc_fb_gen_c_includes@@Base>
   1dc9c:	ldr	r0, [r4, #212]	; 0xd4
   1dca0:	ldr	r0, [r0, #140]	; 0x8c
   1dca4:	cmp	r0, #0
   1dca8:	beq	1dcc4 <__flatcc_fb_gen_c_json_parser@@Base+0xc8>
   1dcac:	ldr	r3, [r4, #204]	; 0xcc
   1dcb0:	ldr	r0, [pc, #3964]	; 1ec34 <__flatcc_fb_gen_c_json_parser@@Base+0x1038>
   1dcb4:	mov	r1, #36	; 0x24
   1dcb8:	mov	r2, #1
   1dcbc:	add	r0, pc, r0
   1dcc0:	bl	14850 <fwrite@plt>
   1dcc4:	ldr	r1, [pc, #3948]	; 1ec38 <__flatcc_fb_gen_c_json_parser@@Base+0x103c>
   1dcc8:	mov	r0, r4
   1dccc:	add	r1, pc, r1
   1dcd0:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1dcd4:	ldr	r6, [r4, #208]	; 0xd0
   1dcd8:	add	r0, sp, #232	; 0xe8
   1dcdc:	mov	r1, #0
   1dce0:	mov	r2, #220	; 0xdc
   1dce4:	ldr	r5, [r6, #52]	; 0x34
   1dce8:	bl	148d4 <memset@plt>
   1dcec:	cmp	r5, #0
   1dcf0:	beq	1ddf8 <__flatcc_fb_gen_c_json_parser@@Base+0x1fc>
   1dcf4:	ldrh	r0, [r5, #8]
   1dcf8:	cmp	r0, #1
   1dcfc:	bhi	1ddf8 <__flatcc_fb_gen_c_json_parser@@Base+0x1fc>
   1dd00:	ldr	r1, [pc, #3892]	; 1ec3c <__flatcc_fb_gen_c_json_parser@@Base+0x1040>
   1dd04:	mov	r0, r4
   1dd08:	add	r1, pc, r1
   1dd0c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1dd10:	ldr	r1, [pc, #3880]	; 1ec40 <__flatcc_fb_gen_c_json_parser@@Base+0x1044>
   1dd14:	mov	r0, r4
   1dd18:	add	r1, pc, r1
   1dd1c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1dd20:	ldr	r1, [pc, #3868]	; 1ec44 <__flatcc_fb_gen_c_json_parser@@Base+0x1048>
   1dd24:	mov	r0, r4
   1dd28:	add	r1, pc, r1
   1dd2c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1dd30:	ldr	r1, [pc, #3856]	; 1ec48 <__flatcc_fb_gen_c_json_parser@@Base+0x104c>
   1dd34:	mov	r0, r4
   1dd38:	add	r1, pc, r1
   1dd3c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1dd40:	ldr	r1, [pc, #3844]	; 1ec4c <__flatcc_fb_gen_c_json_parser@@Base+0x1050>
   1dd44:	mov	r0, r4
   1dd48:	add	r1, pc, r1
   1dd4c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1dd50:	ldr	r1, [pc, #3832]	; 1ec50 <__flatcc_fb_gen_c_json_parser@@Base+0x1054>
   1dd54:	mov	r0, r4
   1dd58:	add	r1, pc, r1
   1dd5c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1dd60:	ldr	r1, [pc, #3820]	; 1ec54 <__flatcc_fb_gen_c_json_parser@@Base+0x1058>
   1dd64:	mov	r0, r4
   1dd68:	add	r1, pc, r1
   1dd6c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1dd70:	ldr	r1, [pc, #3808]	; 1ec58 <__flatcc_fb_gen_c_json_parser@@Base+0x105c>
   1dd74:	mov	r0, r4
   1dd78:	add	r1, pc, r1
   1dd7c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1dd80:	ldr	r1, [pc, #3796]	; 1ec5c <__flatcc_fb_gen_c_json_parser@@Base+0x1060>
   1dd84:	mov	r0, r4
   1dd88:	add	r1, pc, r1
   1dd8c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1dd90:	ldr	r0, [r4, #208]	; 0xd0
   1dd94:	ldr	r2, [r0, #160]	; 0xa0
   1dd98:	ldr	r1, [pc, #3776]	; 1ec60 <__flatcc_fb_gen_c_json_parser@@Base+0x1064>
   1dd9c:	mov	r0, r4
   1dda0:	add	r1, pc, r1
   1dda4:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1dda8:	ldr	r0, [r4, #220]	; 0xdc
   1ddac:	add	r0, r0, #2
   1ddb0:	str	r0, [r4, #220]	; 0xdc
   1ddb4:	mov	r0, r4
   1ddb8:	ldr	r1, [pc, #3748]	; 1ec64 <__flatcc_fb_gen_c_json_parser@@Base+0x1068>
   1ddbc:	add	r1, pc, r1
   1ddc0:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1ddc4:	ldr	r0, [r4, #220]	; 0xdc
   1ddc8:	cmp	r0, #0
   1ddcc:	beq	1fe5c <__flatcc_fb_gen_c_json_parser@@Base+0x2260>
   1ddd0:	subs	r1, r0, #1
   1ddd4:	str	r1, [r4, #220]	; 0xdc
   1ddd8:	beq	1fe5c <__flatcc_fb_gen_c_json_parser@@Base+0x2260>
   1dddc:	sub	r0, r0, #2
   1dde0:	str	r0, [r4, #220]	; 0xdc
   1dde4:	mov	r0, r4
   1dde8:	ldr	r1, [pc, #3704]	; 1ec68 <__flatcc_fb_gen_c_json_parser@@Base+0x106c>
   1ddec:	add	r1, pc, r1
   1ddf0:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1ddf4:	ldr	r6, [r4, #208]	; 0xd0
   1ddf8:	ldr	r5, [r6, #40]	; 0x28
   1ddfc:	cmp	r5, #0
   1de00:	beq	1df94 <__flatcc_fb_gen_c_json_parser@@Base+0x398>
   1de04:	ldr	r7, [pc, #3680]	; 1ec6c <__flatcc_fb_gen_c_json_parser@@Base+0x1070>
   1de08:	ldr	r8, [pc, #3680]	; 1ec70 <__flatcc_fb_gen_c_json_parser@@Base+0x1074>
   1de0c:	ldr	r9, [pc, #3680]	; 1ec74 <__flatcc_fb_gen_c_json_parser@@Base+0x1078>
   1de10:	ldr	sl, [pc, #3680]	; 1ec78 <__flatcc_fb_gen_c_json_parser@@Base+0x107c>
   1de14:	add	r6, sp, #232	; 0xe8
   1de18:	add	r7, pc, r7
   1de1c:	add	r8, pc, r8
   1de20:	add	r9, pc, r9
   1de24:	add	sl, pc, sl
   1de28:	b	1de5c <__flatcc_fb_gen_c_json_parser@@Base+0x260>
   1de2c:	ldr	r0, [r5, #12]
   1de30:	mov	r1, r5
   1de34:	mov	r2, r6
   1de38:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   1de3c:	ldr	r1, [pc, #3640]	; 1ec7c <__flatcc_fb_gen_c_json_parser@@Base+0x1080>
   1de40:	mov	r0, r4
   1de44:	add	r1, pc, r1
   1de48:	mov	r2, r6
   1de4c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1de50:	ldr	r5, [r5]
   1de54:	cmp	r5, #0
   1de58:	beq	1df90 <__flatcc_fb_gen_c_json_parser@@Base+0x394>
   1de5c:	ldrh	r0, [r5, #8]
   1de60:	cmp	r0, #4
   1de64:	bhi	1de50 <__flatcc_fb_gen_c_json_parser@@Base+0x254>
   1de68:	add	r1, pc, #4
   1de6c:	ldr	r0, [r1, r0, lsl #2]
   1de70:	add	pc, r1, r0
   1de74:			; <UNDEFINED> instruction: 0xffffffb8
   1de78:	andeq	r0, r0, r4, lsl r0
   1de7c:			; <UNDEFINED> instruction: 0xffffffdc
   1de80:	andeq	r0, r0, r8, asr #32
   1de84:	andeq	r0, r0, r0, lsr #1
   1de88:	ldr	r0, [r5, #12]
   1de8c:	mov	r1, r5
   1de90:	mov	r2, r6
   1de94:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   1de98:	ldr	r1, [pc, #3552]	; 1ec80 <__flatcc_fb_gen_c_json_parser@@Base+0x1084>
   1de9c:	mov	r0, r4
   1dea0:	mov	r2, r6
   1dea4:	add	r1, pc, r1
   1dea8:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1deac:	ldr	r1, [pc, #3536]	; 1ec84 <__flatcc_fb_gen_c_json_parser@@Base+0x1088>
   1deb0:	mov	r0, r4
   1deb4:	add	r1, pc, r1
   1deb8:	b	1de48 <__flatcc_fb_gen_c_json_parser@@Base+0x24c>
   1debc:	ldr	r0, [r5, #12]
   1dec0:	mov	r1, r5
   1dec4:	mov	r2, r6
   1dec8:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   1decc:	mov	r0, r4
   1ded0:	mov	r1, r7
   1ded4:	mov	r2, r6
   1ded8:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1dedc:	ldr	r0, [r4, #220]	; 0xdc
   1dee0:	mov	r1, r8
   1dee4:	mov	r2, r6
   1dee8:	add	r0, r0, #2
   1deec:	str	r0, [r4, #220]	; 0xdc
   1def0:	mov	r0, r4
   1def4:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1def8:	ldr	r0, [r4, #220]	; 0xdc
   1defc:	cmp	r0, #0
   1df00:	beq	1fa68 <__flatcc_fb_gen_c_json_parser@@Base+0x1e6c>
   1df04:	subs	r1, r0, #1
   1df08:	str	r1, [r4, #220]	; 0xdc
   1df0c:	bne	1df84 <__flatcc_fb_gen_c_json_parser@@Base+0x388>
   1df10:	b	1fa68 <__flatcc_fb_gen_c_json_parser@@Base+0x1e6c>
   1df14:	ldr	r0, [r5, #12]
   1df18:	mov	r1, r5
   1df1c:	mov	r2, r6
   1df20:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   1df24:	mov	r0, r4
   1df28:	mov	r1, r9
   1df2c:	mov	r2, r6
   1df30:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1df34:	mov	r0, r4
   1df38:	mov	r1, sl
   1df3c:	mov	r2, r6
   1df40:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1df44:	mov	r0, r4
   1df48:	mov	r1, r7
   1df4c:	mov	r2, r6
   1df50:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1df54:	ldr	r0, [r4, #220]	; 0xdc
   1df58:	mov	r1, r8
   1df5c:	add	r0, r0, #2
   1df60:	str	r0, [r4, #220]	; 0xdc
   1df64:	mov	r0, r4
   1df68:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1df6c:	ldr	r0, [r4, #220]	; 0xdc
   1df70:	cmp	r0, #0
   1df74:	beq	1fa8c <__flatcc_fb_gen_c_json_parser@@Base+0x1e90>
   1df78:	subs	r1, r0, #1
   1df7c:	str	r1, [r4, #220]	; 0xdc
   1df80:	beq	1fa8c <__flatcc_fb_gen_c_json_parser@@Base+0x1e90>
   1df84:	sub	r0, r0, #2
   1df88:	str	r0, [r4, #220]	; 0xdc
   1df8c:	b	1de50 <__flatcc_fb_gen_c_json_parser@@Base+0x254>
   1df90:	ldr	r6, [r4, #208]	; 0xd0
   1df94:	ldr	r0, [r6, #60]	; 0x3c
   1df98:	ldr	r1, [pc, #3976]	; 1ef28 <__flatcc_fb_gen_c_json_parser@@Base+0x132c>
   1df9c:	mov	r2, r4
   1dfa0:	add	r1, pc, r1
   1dfa4:	bl	28ee0 <fb_scope_table_visit@@Base>
   1dfa8:	ldr	r0, [r4, #208]	; 0xd0
   1dfac:	ldr	r2, [r0, #160]	; 0xa0
   1dfb0:	ldr	r1, [pc, #3956]	; 1ef2c <__flatcc_fb_gen_c_json_parser@@Base+0x1330>
   1dfb4:	mov	r0, r4
   1dfb8:	add	r1, pc, r1
   1dfbc:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1dfc0:	ldr	r0, [r4, #220]	; 0xdc
   1dfc4:	add	r0, r0, #2
   1dfc8:	str	r0, [r4, #220]	; 0xdc
   1dfcc:	mov	r0, r4
   1dfd0:	ldr	r1, [pc, #3928]	; 1ef30 <__flatcc_fb_gen_c_json_parser@@Base+0x1334>
   1dfd4:	add	r1, pc, r1
   1dfd8:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1dfdc:	ldr	r0, [r4, #220]	; 0xdc
   1dfe0:	cmp	r0, #0
   1dfe4:	beq	1fde8 <__flatcc_fb_gen_c_json_parser@@Base+0x21ec>
   1dfe8:	subs	r1, r0, #1
   1dfec:	str	r1, [r4, #220]	; 0xdc
   1dff0:	beq	1fde8 <__flatcc_fb_gen_c_json_parser@@Base+0x21ec>
   1dff4:	sub	r0, r0, #2
   1dff8:	str	r0, [r4, #220]	; 0xdc
   1dffc:	mov	r0, r4
   1e000:	ldr	r1, [pc, #3884]	; 1ef34 <__flatcc_fb_gen_c_json_parser@@Base+0x1338>
   1e004:	add	r1, pc, r1
   1e008:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e00c:	ldr	r0, [r4, #208]	; 0xd0
   1e010:	ldr	sl, [r0, #40]	; 0x28
   1e014:	cmp	sl, #0
   1e018:	beq	1ef54 <__flatcc_fb_gen_c_json_parser@@Base+0x1358>
   1e01c:	ldr	r9, [pc, #3860]	; 1ef38 <__flatcc_fb_gen_c_json_parser@@Base+0x133c>
   1e020:	vmov.i32	q4, #0	; 0x00000000
   1e024:	add	r8, sp, #8
   1e028:	add	r5, sp, #232	; 0xe8
   1e02c:	add	r9, pc, r9
   1e030:	b	1e054 <__flatcc_fb_gen_c_json_parser@@Base+0x458>
   1e034:	mov	r0, r4
   1e038:	mov	r1, sl
   1e03c:	bl	2043c <__flatcc_fb_gen_c_json_parser@@Base+0x2840>
   1e040:	ldr	r9, [pc, #3828]	; 1ef3c <__flatcc_fb_gen_c_json_parser@@Base+0x1340>
   1e044:	add	r9, pc, r9
   1e048:	ldr	sl, [sl]
   1e04c:	cmp	sl, #0
   1e050:	beq	1ef50 <__flatcc_fb_gen_c_json_parser@@Base+0x1354>
   1e054:	ldrh	r0, [sl, #8]
   1e058:	cmp	r0, #4
   1e05c:	bhi	1e048 <__flatcc_fb_gen_c_json_parser@@Base+0x44c>
   1e060:	add	r1, pc, #8
   1e064:	add	r7, sl, #96	; 0x60
   1e068:	ldr	r0, [r1, r0, lsl #2]
   1e06c:	add	pc, r1, r0
   1e070:	andeq	r0, r0, r4, lsl r0
   1e074:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1e078:			; <UNDEFINED> instruction: 0xffffffd8
   1e07c:			; <UNDEFINED> instruction: 0xffffffc4
   1e080:	andeq	r0, r0, ip, ror #6
   1e084:	mov	r1, #12
   1e088:	vst1.64	{d8-d9}, [r8], r1
   1e08c:	vst1.32	{d8-d9}, [r8]
   1e090:	ldrh	r0, [sl, #8]
   1e094:	cmp	r0, #0
   1e098:	bne	1fab4 <__flatcc_fb_gen_c_json_parser@@Base+0x1eb8>
   1e09c:	mov	r0, sl
   1e0a0:	add	r1, sp, #228	; 0xe4
   1e0a4:	bl	20b50 <__flatcc_fb_gen_c_json_parser@@Base+0x2f54>
   1e0a8:	str	r0, [sp, #8]
   1e0ac:	ldr	r8, [sp, #228]	; 0xe4
   1e0b0:	cmp	r0, #0
   1e0b4:	ldr	r9, [pc, #3716]	; 1ef40 <__flatcc_fb_gen_c_json_parser@@Base+0x1344>
   1e0b8:	add	r9, pc, r9
   1e0bc:	bne	1e0c8 <__flatcc_fb_gen_c_json_parser@@Base+0x4cc>
   1e0c0:	cmp	r8, #1
   1e0c4:	bge	1fae0 <__flatcc_fb_gen_c_json_parser@@Base+0x1ee4>
   1e0c8:	mov	r5, #0
   1e0cc:	cmp	r8, #1
   1e0d0:	str	r5, [sp, #24]
   1e0d4:	str	sl, [sp, #20]
   1e0d8:	str	r5, [sp, #28]
   1e0dc:	ldr	r1, [pc, #3680]	; 1ef44 <__flatcc_fb_gen_c_json_parser@@Base+0x1348>
   1e0e0:	add	r1, pc, r1
   1e0e4:	str	r1, [sp, #16]
   1e0e8:	ldr	r1, [pc, #3672]	; 1ef48 <__flatcc_fb_gen_c_json_parser@@Base+0x134c>
   1e0ec:	add	r1, pc, r1
   1e0f0:	str	r1, [sp, #12]
   1e0f4:	blt	1e174 <__flatcc_fb_gen_c_json_parser@@Base+0x578>
   1e0f8:	mov	r5, #0
   1e0fc:	cmp	r8, #5
   1e100:	mov	r1, #0
   1e104:	bcc	1e150 <__flatcc_fb_gen_c_json_parser@@Base+0x554>
   1e108:	ands	r1, r8, #3
   1e10c:	vmov.i32	q8, #0	; 0x00000000
   1e110:	add	r2, r0, #12
   1e114:	movweq	r1, #4
   1e118:	sub	r1, r8, r1
   1e11c:	mov	r3, r1
   1e120:	vld4.32	{d18,d20,d22,d24}, [r2]!
   1e124:	subs	r3, r3, #4
   1e128:	vld4.32	{d19,d21,d23,d25}, [r2]!
   1e12c:	vceq.i32	q9, q9, #0
   1e130:	vmvn	q9, q9
   1e134:	vsub.i32	q8, q8, q9
   1e138:	bne	1e120 <__flatcc_fb_gen_c_json_parser@@Base+0x524>
   1e13c:	vext.8	q9, q8, q8, #8
   1e140:	vadd.i32	q8, q8, q9
   1e144:	vdup.32	q9, d16[1]
   1e148:	vadd.i32	q8, q8, q9
   1e14c:	vmov.32	r5, d16[0]
   1e150:	add	r0, r0, r1, lsl #4
   1e154:	sub	r2, r8, r1
   1e158:	add	r0, r0, #12
   1e15c:	ldr	r1, [r0], #16
   1e160:	cmp	r1, #0
   1e164:	addne	r5, r5, #1
   1e168:	subs	r2, r2, #1
   1e16c:	bne	1e15c <__flatcc_fb_gen_c_json_parser@@Base+0x560>
   1e170:	str	r5, [sp, #28]
   1e174:	add	r6, sp, #232	; 0xe8
   1e178:	mov	r1, #0
   1e17c:	mov	r2, #220	; 0xdc
   1e180:	mov	r0, r6
   1e184:	bl	148d4 <memset@plt>
   1e188:	ldr	r0, [sl, #12]
   1e18c:	mov	r1, sl
   1e190:	mov	r2, r6
   1e194:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   1e198:	ldr	r1, [pc, #3500]	; 1ef4c <__flatcc_fb_gen_c_json_parser@@Base+0x1350>
   1e19c:	mov	r0, r4
   1e1a0:	mov	r2, r6
   1e1a4:	add	r1, pc, r1
   1e1a8:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e1ac:	mov	r0, r4
   1e1b0:	mov	r1, r9
   1e1b4:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e1b8:	ldr	r0, [r4, #220]	; 0xdc
   1e1bc:	add	r0, r0, #1
   1e1c0:	str	r0, [r4, #220]	; 0xdc
   1e1c4:	mov	r0, r4
   1e1c8:	ldr	r1, [pc, #4052]	; 1f1a4 <__flatcc_fb_gen_c_json_parser@@Base+0x15a8>
   1e1cc:	add	r1, pc, r1
   1e1d0:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e1d4:	cmp	r8, #1
   1e1d8:	blt	1e220 <__flatcc_fb_gen_c_json_parser@@Base+0x624>
   1e1dc:	ldr	r1, [pc, #4036]	; 1f1a8 <__flatcc_fb_gen_c_json_parser@@Base+0x15ac>
   1e1e0:	mov	r0, r4
   1e1e4:	add	r1, pc, r1
   1e1e8:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e1ec:	ldr	r1, [pc, #4024]	; 1f1ac <__flatcc_fb_gen_c_json_parser@@Base+0x15b0>
   1e1f0:	mov	r0, r4
   1e1f4:	add	r1, pc, r1
   1e1f8:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e1fc:	ldr	r1, [pc, #4012]	; 1f1b0 <__flatcc_fb_gen_c_json_parser@@Base+0x15b4>
   1e200:	mov	r0, r4
   1e204:	add	r1, pc, r1
   1e208:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e20c:	ldr	r1, [pc, #4000]	; 1f1b4 <__flatcc_fb_gen_c_json_parser@@Base+0x15b8>
   1e210:	mov	r0, r4
   1e214:	add	r1, pc, r1
   1e218:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e21c:	ldr	r5, [sp, #28]
   1e220:	cmp	r5, #0
   1e224:	beq	1e884 <__flatcc_fb_gen_c_json_parser@@Base+0xc88>
   1e228:	ldr	r1, [pc, #3976]	; 1f1b8 <__flatcc_fb_gen_c_json_parser@@Base+0x15bc>
   1e22c:	mov	r0, r4
   1e230:	add	r1, pc, r1
   1e234:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e238:	ldr	r9, [sp, #28]
   1e23c:	b	1e888 <__flatcc_fb_gen_c_json_parser@@Base+0xc8c>
   1e240:	mov	r0, r8
   1e244:	mov	r1, #12
   1e248:	vst1.64	{d8-d9}, [r0], r1
   1e24c:	vst1.32	{d8-d9}, [r0]
   1e250:	ldrh	r0, [sl, #8]
   1e254:	cmp	r0, #1
   1e258:	bne	1fb34 <__flatcc_fb_gen_c_json_parser@@Base+0x1f38>
   1e25c:	mov	r0, sl
   1e260:	add	r1, sp, #228	; 0xe4
   1e264:	bl	20b50 <__flatcc_fb_gen_c_json_parser@@Base+0x2f54>
   1e268:	str	r0, [sp, #8]
   1e26c:	ldr	r5, [sp, #228]	; 0xe4
   1e270:	cmp	r0, #0
   1e274:	ldr	r9, [pc, #3904]	; 1f1bc <__flatcc_fb_gen_c_json_parser@@Base+0x15c0>
   1e278:	add	r9, pc, r9
   1e27c:	bne	1e288 <__flatcc_fb_gen_c_json_parser@@Base+0x68c>
   1e280:	cmp	r5, #1
   1e284:	bge	1fb64 <__flatcc_fb_gen_c_json_parser@@Base+0x1f68>
   1e288:	mov	r0, #1
   1e28c:	add	r6, sp, #232	; 0xe8
   1e290:	mov	r1, #0
   1e294:	mov	r2, #220	; 0xdc
   1e298:	str	r0, [sp, #24]
   1e29c:	str	sl, [sp, #20]
   1e2a0:	ldr	r0, [pc, #3864]	; 1f1c0 <__flatcc_fb_gen_c_json_parser@@Base+0x15c4>
   1e2a4:	add	r0, pc, r0
   1e2a8:	str	r0, [sp, #16]
   1e2ac:	ldr	r0, [pc, #3856]	; 1f1c4 <__flatcc_fb_gen_c_json_parser@@Base+0x15c8>
   1e2b0:	add	r0, pc, r0
   1e2b4:	str	r0, [sp, #12]
   1e2b8:	mov	r0, r6
   1e2bc:	bl	148d4 <memset@plt>
   1e2c0:	ldr	r0, [sl, #12]
   1e2c4:	mov	r1, sl
   1e2c8:	mov	r2, r6
   1e2cc:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   1e2d0:	ldr	r1, [pc, #3824]	; 1f1c8 <__flatcc_fb_gen_c_json_parser@@Base+0x15cc>
   1e2d4:	mov	r0, r4
   1e2d8:	mov	r2, r6
   1e2dc:	add	r1, pc, r1
   1e2e0:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e2e4:	ldr	r1, [pc, #4084]	; 1f2e0 <__flatcc_fb_gen_c_json_parser@@Base+0x16e4>
   1e2e8:	mov	r0, r4
   1e2ec:	add	r1, pc, r1
   1e2f0:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e2f4:	ldr	r0, [r4, #220]	; 0xdc
   1e2f8:	add	r0, r0, #1
   1e2fc:	str	r0, [r4, #220]	; 0xdc
   1e300:	mov	r0, r4
   1e304:	ldr	r1, [pc, #4056]	; 1f2e4 <__flatcc_fb_gen_c_json_parser@@Base+0x16e8>
   1e308:	add	r1, pc, r1
   1e30c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e310:	cmp	r5, #1
   1e314:	blt	1e358 <__flatcc_fb_gen_c_json_parser@@Base+0x75c>
   1e318:	ldr	r1, [pc, #4040]	; 1f2e8 <__flatcc_fb_gen_c_json_parser@@Base+0x16ec>
   1e31c:	mov	r0, r4
   1e320:	add	r1, pc, r1
   1e324:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e328:	ldr	r1, [pc, #4028]	; 1f2ec <__flatcc_fb_gen_c_json_parser@@Base+0x16f0>
   1e32c:	mov	r0, r4
   1e330:	add	r1, pc, r1
   1e334:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e338:	ldr	r1, [pc, #4016]	; 1f2f0 <__flatcc_fb_gen_c_json_parser@@Base+0x16f4>
   1e33c:	mov	r0, r4
   1e340:	add	r1, pc, r1
   1e344:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e348:	ldr	r1, [pc, #4004]	; 1f2f4 <__flatcc_fb_gen_c_json_parser@@Base+0x16f8>
   1e34c:	mov	r0, r4
   1e350:	add	r1, pc, r1
   1e354:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e358:	ldr	r1, [pc, #3992]	; 1f2f8 <__flatcc_fb_gen_c_json_parser@@Base+0x16fc>
   1e35c:	mov	r0, r4
   1e360:	add	r1, pc, r1
   1e364:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e368:	ldr	r1, [pc, #3980]	; 1f2fc <__flatcc_fb_gen_c_json_parser@@Base+0x1700>
   1e36c:	mov	r0, r4
   1e370:	add	r1, pc, r1
   1e374:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e378:	ldr	r1, [pc, #3968]	; 1f300 <__flatcc_fb_gen_c_json_parser@@Base+0x1704>
   1e37c:	mov	r0, r4
   1e380:	add	r1, pc, r1
   1e384:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e388:	ldr	r0, [r4, #220]	; 0xdc
   1e38c:	cmp	r5, #0
   1e390:	add	r0, r0, #1
   1e394:	str	r0, [r4, #220]	; 0xdc
   1e398:	mov	r0, r4
   1e39c:	beq	1ec88 <__flatcc_fb_gen_c_json_parser@@Base+0x108c>
   1e3a0:	ldr	r1, [pc, #3932]	; 1f304 <__flatcc_fb_gen_c_json_parser@@Base+0x1708>
   1e3a4:	add	r1, pc, r1
   1e3a8:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e3ac:	ldr	r1, [pc, #3924]	; 1f308 <__flatcc_fb_gen_c_json_parser@@Base+0x170c>
   1e3b0:	mov	r0, r4
   1e3b4:	add	r1, pc, r1
   1e3b8:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e3bc:	mov	r0, #0
   1e3c0:	sub	r3, r5, #1
   1e3c4:	mov	r1, r8
   1e3c8:	mov	r2, #0
   1e3cc:	str	r0, [sp]
   1e3d0:	mov	r0, r4
   1e3d4:	bl	20e70 <__flatcc_fb_gen_c_json_parser@@Base+0x3274>
   1e3d8:	b	1eca4 <__flatcc_fb_gen_c_json_parser@@Base+0x10a8>
   1e3dc:	mov	r0, r5
   1e3e0:	mov	r1, #0
   1e3e4:	mov	r2, #220	; 0xdc
   1e3e8:	bl	148d4 <memset@plt>
   1e3ec:	mov	r0, r8
   1e3f0:	mov	r1, #0
   1e3f4:	mov	r2, #220	; 0xdc
   1e3f8:	bl	148d4 <memset@plt>
   1e3fc:	ldr	r0, [sl, #12]
   1e400:	mov	r1, sl
   1e404:	mov	r2, r5
   1e408:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   1e40c:	ldr	r1, [pc, #3832]	; 1f30c <__flatcc_fb_gen_c_json_parser@@Base+0x1710>
   1e410:	mov	r0, r4
   1e414:	mov	r2, r5
   1e418:	add	r1, pc, r1
   1e41c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e420:	ldr	r1, [pc, #3816]	; 1f310 <__flatcc_fb_gen_c_json_parser@@Base+0x1714>
   1e424:	mov	r0, r4
   1e428:	add	r1, pc, r1
   1e42c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e430:	ldr	r0, [r4, #220]	; 0xdc
   1e434:	mov	r1, r9
   1e438:	add	r0, r0, #1
   1e43c:	str	r0, [r4, #220]	; 0xdc
   1e440:	mov	r0, r4
   1e444:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e448:	ldr	r1, [pc, #3780]	; 1f314 <__flatcc_fb_gen_c_json_parser@@Base+0x1718>
   1e44c:	mov	r0, r4
   1e450:	add	r1, pc, r1
   1e454:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e458:	ldr	r1, [pc, #3768]	; 1f318 <__flatcc_fb_gen_c_json_parser@@Base+0x171c>
   1e45c:	mov	r0, r4
   1e460:	add	r1, pc, r1
   1e464:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e468:	ldr	r1, [pc, #3756]	; 1f31c <__flatcc_fb_gen_c_json_parser@@Base+0x1720>
   1e46c:	mov	r0, r4
   1e470:	add	r1, pc, r1
   1e474:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e478:	ldr	r0, [r4, #220]	; 0xdc
   1e47c:	add	r0, r0, #1
   1e480:	str	r0, [r4, #220]	; 0xdc
   1e484:	mov	r0, r4
   1e488:	ldr	r1, [pc, #3728]	; 1f320 <__flatcc_fb_gen_c_json_parser@@Base+0x1724>
   1e48c:	add	r1, pc, r1
   1e490:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e494:	ldr	r0, [r4, #220]	; 0xdc
   1e498:	cmp	r0, #0
   1e49c:	beq	1fbb8 <__flatcc_fb_gen_c_json_parser@@Base+0x1fbc>
   1e4a0:	sub	r0, r0, #1
   1e4a4:	str	r0, [r4, #220]	; 0xdc
   1e4a8:	ldr	r5, [sl, #20]
   1e4ac:	ldr	r9, [pc, #3696]	; 1f324 <__flatcc_fb_gen_c_json_parser@@Base+0x1728>
   1e4b0:	cmp	r5, #0
   1e4b4:	add	r9, pc, r9
   1e4b8:	bne	1e528 <__flatcc_fb_gen_c_json_parser@@Base+0x92c>
   1e4bc:	b	1e5d8 <__flatcc_fb_gen_c_json_parser@@Base+0x9dc>
   1e4c0:	ldr	r2, [r5, #48]	; 0x30
   1e4c4:	str	r6, [sp]
   1e4c8:	mov	r0, r4
   1e4cc:	mov	r3, r7
   1e4d0:	ldr	r1, [pc, #3664]	; 1f328 <__flatcc_fb_gen_c_json_parser@@Base+0x172c>
   1e4d4:	add	r1, pc, r1
   1e4d8:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e4dc:	ldr	r0, [r4, #220]	; 0xdc
   1e4e0:	add	r0, r0, #1
   1e4e4:	str	r0, [r4, #220]	; 0xdc
   1e4e8:	mov	r0, r4
   1e4ec:	ldr	r1, [pc, #3640]	; 1f32c <__flatcc_fb_gen_c_json_parser@@Base+0x1730>
   1e4f0:	add	r1, pc, r1
   1e4f4:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e4f8:	ldr	r1, [pc, #3632]	; 1f330 <__flatcc_fb_gen_c_json_parser@@Base+0x1734>
   1e4fc:	mov	r0, r4
   1e500:	add	r1, pc, r1
   1e504:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e508:	ldr	r0, [r4, #220]	; 0xdc
   1e50c:	cmp	r0, #0
   1e510:	beq	1f9d4 <__flatcc_fb_gen_c_json_parser@@Base+0x1dd8>
   1e514:	sub	r0, r0, #1
   1e518:	str	r0, [r4, #220]	; 0xdc
   1e51c:	ldr	r5, [r5]
   1e520:	cmp	r5, #0
   1e524:	beq	1e5d8 <__flatcc_fb_gen_c_json_parser@@Base+0x9dc>
   1e528:	ldrh	r0, [r5, #24]
   1e52c:	cmp	r0, #0
   1e530:	beq	1e51c <__flatcc_fb_gen_c_json_parser@@Base+0x920>
   1e534:	ldr	r1, [r5, #4]
   1e538:	cmp	r0, #10
   1e53c:	ldm	r1, {r6, r7}
   1e540:	beq	1e4c0 <__flatcc_fb_gen_c_json_parser@@Base+0x8c4>
   1e544:	cmp	r0, #14
   1e548:	bne	1f980 <__flatcc_fb_gen_c_json_parser@@Base+0x1d84>
   1e54c:	ldr	r1, [r5, #16]
   1e550:	mov	r2, r8
   1e554:	ldr	r0, [r1, #12]
   1e558:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   1e55c:	ldr	r2, [r5, #48]	; 0x30
   1e560:	str	r6, [sp]
   1e564:	mov	r0, r4
   1e568:	mov	r3, r7
   1e56c:	ldr	r1, [pc, #3992]	; 1f50c <__flatcc_fb_gen_c_json_parser@@Base+0x1910>
   1e570:	add	r1, pc, r1
   1e574:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e578:	ldr	r0, [r4, #220]	; 0xdc
   1e57c:	add	r0, r0, #1
   1e580:	str	r0, [r4, #220]	; 0xdc
   1e584:	ldr	r0, [r5, #16]
   1e588:	ldrh	r0, [r0, #8]
   1e58c:	ldr	r1, [pc, #3964]	; 1f510 <__flatcc_fb_gen_c_json_parser@@Base+0x1914>
   1e590:	cmp	r0, #0
   1e594:	add	r1, pc, r1
   1e598:	beq	1e5ac <__flatcc_fb_gen_c_json_parser@@Base+0x9b0>
   1e59c:	cmp	r0, #1
   1e5a0:	bne	1f9f4 <__flatcc_fb_gen_c_json_parser@@Base+0x1df8>
   1e5a4:	ldr	r1, [pc, #3944]	; 1f514 <__flatcc_fb_gen_c_json_parser@@Base+0x1918>
   1e5a8:	add	r1, pc, r1
   1e5ac:	mov	r0, r4
   1e5b0:	mov	r2, r8
   1e5b4:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e5b8:	ldr	r1, [pc, #3928]	; 1f518 <__flatcc_fb_gen_c_json_parser@@Base+0x191c>
   1e5bc:	mov	r0, r4
   1e5c0:	add	r1, pc, r1
   1e5c4:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e5c8:	ldr	r0, [r4, #220]	; 0xdc
   1e5cc:	cmp	r0, #0
   1e5d0:	bne	1e514 <__flatcc_fb_gen_c_json_parser@@Base+0x918>
   1e5d4:	b	1fa48 <__flatcc_fb_gen_c_json_parser@@Base+0x1e4c>
   1e5d8:	ldr	r1, [pc, #3900]	; 1f51c <__flatcc_fb_gen_c_json_parser@@Base+0x1920>
   1e5dc:	mov	r0, r4
   1e5e0:	add	r1, pc, r1
   1e5e4:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e5e8:	ldr	r0, [r4, #220]	; 0xdc
   1e5ec:	add	r0, r0, #1
   1e5f0:	str	r0, [r4, #220]	; 0xdc
   1e5f4:	mov	r0, r4
   1e5f8:	ldr	r1, [pc, #4080]	; 1f5f0 <__flatcc_fb_gen_c_json_parser@@Base+0x19f4>
   1e5fc:	add	r1, pc, r1
   1e600:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e604:	ldr	r0, [r4, #220]	; 0xdc
   1e608:	add	r0, r0, #1
   1e60c:	str	r0, [r4, #220]	; 0xdc
   1e610:	mov	r0, r4
   1e614:	ldr	r1, [pc, #4056]	; 1f5f4 <__flatcc_fb_gen_c_json_parser@@Base+0x19f8>
   1e618:	add	r1, pc, r1
   1e61c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e620:	ldr	r0, [r4, #220]	; 0xdc
   1e624:	cmp	r0, #0
   1e628:	beq	1fbd8 <__flatcc_fb_gen_c_json_parser@@Base+0x1fdc>
   1e62c:	sub	r0, r0, #1
   1e630:	str	r0, [r4, #220]	; 0xdc
   1e634:	mov	r0, r4
   1e638:	ldr	r1, [pc, #4024]	; 1f5f8 <__flatcc_fb_gen_c_json_parser@@Base+0x19fc>
   1e63c:	add	r1, pc, r1
   1e640:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e644:	ldr	r0, [r4, #220]	; 0xdc
   1e648:	add	r0, r0, #1
   1e64c:	str	r0, [r4, #220]	; 0xdc
   1e650:	mov	r0, r4
   1e654:	ldr	r1, [pc, #4000]	; 1f5fc <__flatcc_fb_gen_c_json_parser@@Base+0x1a00>
   1e658:	add	r1, pc, r1
   1e65c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e660:	ldr	r0, [r4, #220]	; 0xdc
   1e664:	ldr	r6, [pc, #3988]	; 1f600 <__flatcc_fb_gen_c_json_parser@@Base+0x1a04>
   1e668:	ldr	r7, [pc, #3988]	; 1f604 <__flatcc_fb_gen_c_json_parser@@Base+0x1a08>
   1e66c:	add	r5, sp, #232	; 0xe8
   1e670:	cmp	r0, #0
   1e674:	add	r6, pc, r6
   1e678:	add	r7, pc, r7
   1e67c:	beq	1fbf8 <__flatcc_fb_gen_c_json_parser@@Base+0x1ffc>
   1e680:	sub	r0, r0, #1
   1e684:	mov	r1, r9
   1e688:	str	r0, [r4, #220]	; 0xdc
   1e68c:	mov	r0, r4
   1e690:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e694:	ldr	r0, [r4, #220]	; 0xdc
   1e698:	cmp	r0, #0
   1e69c:	beq	1fc18 <__flatcc_fb_gen_c_json_parser@@Base+0x201c>
   1e6a0:	sub	r0, r0, #1
   1e6a4:	mov	r1, r9
   1e6a8:	str	r0, [r4, #220]	; 0xdc
   1e6ac:	mov	r0, r4
   1e6b0:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e6b4:	ldr	r1, [pc, #3916]	; 1f608 <__flatcc_fb_gen_c_json_parser@@Base+0x1a0c>
   1e6b8:	mov	r0, r4
   1e6bc:	add	r1, pc, r1
   1e6c0:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e6c4:	ldr	r1, [pc, #3904]	; 1f60c <__flatcc_fb_gen_c_json_parser@@Base+0x1a10>
   1e6c8:	mov	r0, r4
   1e6cc:	add	r1, pc, r1
   1e6d0:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e6d4:	ldr	r0, [r4, #220]	; 0xdc
   1e6d8:	add	r0, r0, #1
   1e6dc:	str	r0, [r4, #220]	; 0xdc
   1e6e0:	mov	r0, r4
   1e6e4:	ldr	r1, [pc, #3876]	; 1f610 <__flatcc_fb_gen_c_json_parser@@Base+0x1a14>
   1e6e8:	add	r1, pc, r1
   1e6ec:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e6f0:	ldr	r0, [r4, #220]	; 0xdc
   1e6f4:	cmp	r0, #0
   1e6f8:	beq	1fc38 <__flatcc_fb_gen_c_json_parser@@Base+0x203c>
   1e6fc:	sub	r0, r0, #1
   1e700:	mov	r1, r9
   1e704:	str	r0, [r4, #220]	; 0xdc
   1e708:	mov	r0, r4
   1e70c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e710:	ldr	r1, [pc, #3836]	; 1f614 <__flatcc_fb_gen_c_json_parser@@Base+0x1a18>
   1e714:	mov	r0, r4
   1e718:	add	r1, pc, r1
   1e71c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e720:	ldr	r0, [r4, #220]	; 0xdc
   1e724:	cmp	r0, #0
   1e728:	beq	1fc58 <__flatcc_fb_gen_c_json_parser@@Base+0x205c>
   1e72c:	sub	r0, r0, #1
   1e730:	mov	r1, r9
   1e734:	str	r0, [r4, #220]	; 0xdc
   1e738:	mov	r0, r4
   1e73c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e740:	ldr	r1, [pc, #4092]	; 1f744 <__flatcc_fb_gen_c_json_parser@@Base+0x1b48>
   1e744:	mov	r0, r4
   1e748:	add	r1, pc, r1
   1e74c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e750:	mov	r0, r5
   1e754:	mov	r1, #0
   1e758:	mov	r2, #220	; 0xdc
   1e75c:	bl	148d4 <memset@plt>
   1e760:	ldr	r0, [sl, #12]
   1e764:	mov	r1, sl
   1e768:	mov	r2, r5
   1e76c:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   1e770:	ldr	r1, [pc, #4060]	; 1f754 <__flatcc_fb_gen_c_json_parser@@Base+0x1b58>
   1e774:	mov	r0, r4
   1e778:	mov	r2, r5
   1e77c:	add	r1, pc, r1
   1e780:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e784:	ldr	r1, [pc, #4044]	; 1f758 <__flatcc_fb_gen_c_json_parser@@Base+0x1b5c>
   1e788:	mov	r0, r4
   1e78c:	add	r1, pc, r1
   1e790:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e794:	ldr	r0, [r4, #220]	; 0xdc
   1e798:	add	r0, r0, #1
   1e79c:	str	r0, [r4, #220]	; 0xdc
   1e7a0:	mov	r0, r4
   1e7a4:	ldr	r1, [pc, #4016]	; 1f75c <__flatcc_fb_gen_c_json_parser@@Base+0x1b60>
   1e7a8:	add	r1, pc, r1
   1e7ac:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e7b0:	ldr	r5, [sl, #20]
   1e7b4:	cmp	r5, #0
   1e7b8:	bne	1e7d8 <__flatcc_fb_gen_c_json_parser@@Base+0xbdc>
   1e7bc:	b	1e80c <__flatcc_fb_gen_c_json_parser@@Base+0xc10>
   1e7c0:	mov	r0, r4
   1e7c4:	mov	r1, r6
   1e7c8:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e7cc:	ldr	r5, [r5]
   1e7d0:	cmp	r5, #0
   1e7d4:	beq	1e80c <__flatcc_fb_gen_c_json_parser@@Base+0xc10>
   1e7d8:	ldrh	r0, [r5, #24]
   1e7dc:	cmp	r0, #0
   1e7e0:	beq	1e7c0 <__flatcc_fb_gen_c_json_parser@@Base+0xbc4>
   1e7e4:	ldr	r0, [r5, #4]
   1e7e8:	ldr	r2, [r5, #48]	; 0x30
   1e7ec:	ldm	r0, {r1, r3}
   1e7f0:	mov	r0, r4
   1e7f4:	str	r1, [sp]
   1e7f8:	mov	r1, r7
   1e7fc:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e800:	ldr	r5, [r5]
   1e804:	cmp	r5, #0
   1e808:	bne	1e7d8 <__flatcc_fb_gen_c_json_parser@@Base+0xbdc>
   1e80c:	ldr	r1, [pc, #3916]	; 1f760 <__flatcc_fb_gen_c_json_parser@@Base+0x1b64>
   1e810:	mov	r0, r4
   1e814:	add	r1, pc, r1
   1e818:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e81c:	ldr	r0, [r4, #220]	; 0xdc
   1e820:	adds	r1, r0, #1
   1e824:	str	r1, [r4, #220]	; 0xdc
   1e828:	bcs	1fc80 <__flatcc_fb_gen_c_json_parser@@Base+0x2084>
   1e82c:	str	r0, [r4, #220]	; 0xdc
   1e830:	mov	r0, r4
   1e834:	mov	r1, r9
   1e838:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e83c:	ldr	r0, [r4, #220]	; 0xdc
   1e840:	add	r5, sp, #232	; 0xe8
   1e844:	cmp	r0, #0
   1e848:	beq	1fca4 <__flatcc_fb_gen_c_json_parser@@Base+0x20a8>
   1e84c:	sub	r0, r0, #1
   1e850:	mov	r1, r9
   1e854:	str	r0, [r4, #220]	; 0xdc
   1e858:	mov	r0, r4
   1e85c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e860:	ldr	r9, [pc, #3836]	; 1f764 <__flatcc_fb_gen_c_json_parser@@Base+0x1b68>
   1e864:	mov	r0, r4
   1e868:	add	r9, pc, r9
   1e86c:	mov	r1, r9
   1e870:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e874:	mov	r0, r4
   1e878:	mov	r1, sl
   1e87c:	bl	2043c <__flatcc_fb_gen_c_json_parser@@Base+0x2840>
   1e880:	b	1e048 <__flatcc_fb_gen_c_json_parser@@Base+0x44c>
   1e884:	mov	r9, #0
   1e888:	ldr	r1, [pc, #3800]	; 1f768 <__flatcc_fb_gen_c_json_parser@@Base+0x1b6c>
   1e88c:	mov	r0, r4
   1e890:	add	r5, sp, #232	; 0xe8
   1e894:	add	r1, pc, r1
   1e898:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e89c:	ldr	r1, [pc, #3784]	; 1f76c <__flatcc_fb_gen_c_json_parser@@Base+0x1b70>
   1e8a0:	mov	r0, r4
   1e8a4:	add	r1, pc, r1
   1e8a8:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e8ac:	ldrd	r2, [r7]
   1e8b0:	ldr	r1, [pc, #3768]	; 1f770 <__flatcc_fb_gen_c_json_parser@@Base+0x1b74>
   1e8b4:	mov	r0, r4
   1e8b8:	add	r1, pc, r1
   1e8bc:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e8c0:	cmp	r9, #0
   1e8c4:	beq	1e8e0 <__flatcc_fb_gen_c_json_parser@@Base+0xce4>
   1e8c8:	ldr	r1, [pc, #3748]	; 1f774 <__flatcc_fb_gen_c_json_parser@@Base+0x1b78>
   1e8cc:	asr	r3, r9, #31
   1e8d0:	mov	r0, r4
   1e8d4:	mov	r2, r9
   1e8d8:	add	r1, pc, r1
   1e8dc:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e8e0:	ldr	r1, [pc, #4080]	; 1f8d8 <__flatcc_fb_gen_c_json_parser@@Base+0x1cdc>
   1e8e4:	mov	r0, r4
   1e8e8:	add	r1, pc, r1
   1e8ec:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e8f0:	ldr	r1, [pc, #4068]	; 1f8dc <__flatcc_fb_gen_c_json_parser@@Base+0x1ce0>
   1e8f4:	mov	r0, r4
   1e8f8:	add	r1, pc, r1
   1e8fc:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e900:	ldr	r0, [r4, #220]	; 0xdc
   1e904:	add	r0, r0, #1
   1e908:	str	r0, [r4, #220]	; 0xdc
   1e90c:	mov	r0, r4
   1e910:	ldr	r1, [pc, #4040]	; 1f8e0 <__flatcc_fb_gen_c_json_parser@@Base+0x1ce4>
   1e914:	add	r1, pc, r1
   1e918:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e91c:	mov	r0, r4
   1e920:	cmp	r8, #1
   1e924:	blt	1e954 <__flatcc_fb_gen_c_json_parser@@Base+0xd58>
   1e928:	ldr	r1, [pc, #4020]	; 1f8e4 <__flatcc_fb_gen_c_json_parser@@Base+0x1ce8>
   1e92c:	add	r1, pc, r1
   1e930:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e934:	mov	r0, #0
   1e938:	sub	r3, r8, #1
   1e93c:	add	r1, sp, #8
   1e940:	mov	r2, #0
   1e944:	str	r0, [sp]
   1e948:	mov	r0, r4
   1e94c:	bl	20e70 <__flatcc_fb_gen_c_json_parser@@Base+0x3274>
   1e950:	b	1e970 <__flatcc_fb_gen_c_json_parser@@Base+0xd74>
   1e954:	ldr	r1, [pc, #3980]	; 1f8e8 <__flatcc_fb_gen_c_json_parser@@Base+0x1cec>
   1e958:	add	r1, pc, r1
   1e95c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e960:	ldr	r1, [pc, #3972]	; 1f8ec <__flatcc_fb_gen_c_json_parser@@Base+0x1cf0>
   1e964:	mov	r0, r4
   1e968:	add	r1, pc, r1
   1e96c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e970:	ldr	r9, [pc, #4092]	; 1f974 <__flatcc_fb_gen_c_json_parser@@Base+0x1d78>
   1e974:	ldr	r1, [pc, #4092]	; 1f978 <__flatcc_fb_gen_c_json_parser@@Base+0x1d7c>
   1e978:	mov	r0, r4
   1e97c:	add	r1, pc, r1
   1e980:	add	r9, pc, r9
   1e984:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e988:	ldr	r0, [r4, #220]	; 0xdc
   1e98c:	cmp	r0, #0
   1e990:	beq	1fcc8 <__flatcc_fb_gen_c_json_parser@@Base+0x20cc>
   1e994:	sub	r0, r0, #1
   1e998:	mov	r1, r9
   1e99c:	str	r0, [r4, #220]	; 0xdc
   1e9a0:	mov	r0, r4
   1e9a4:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e9a8:	ldr	r1, [pc, #4044]	; 1f97c <__flatcc_fb_gen_c_json_parser@@Base+0x1d80>
   1e9ac:	mov	r0, r4
   1e9b0:	add	r1, pc, r1
   1e9b4:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e9b8:	cmp	r8, #1
   1e9bc:	blt	1eae8 <__flatcc_fb_gen_c_json_parser@@Base+0xeec>
   1e9c0:	mov	r5, #0
   1e9c4:	mov	r0, #1
   1e9c8:	b	1e9ec <__flatcc_fb_gen_c_json_parser@@Base+0xdf0>
   1e9cc:	ldr	r1, [pc, #4092]	; 1f9d0 <__flatcc_fb_gen_c_json_parser@@Base+0x1dd4>
   1e9d0:	mov	r0, r4
   1e9d4:	add	r1, pc, r1
   1e9d8:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1e9dc:	mov	r0, #0
   1e9e0:	add	r5, r5, #1
   1e9e4:	cmp	r8, r5
   1e9e8:	beq	1ea6c <__flatcc_fb_gen_c_json_parser@@Base+0xe70>
   1e9ec:	ldr	r1, [sp, #8]
   1e9f0:	add	r1, r1, r5, lsl #4
   1e9f4:	ldr	r1, [r1, #8]
   1e9f8:	ldrh	r2, [r1, #72]	; 0x48
   1e9fc:	tst	r2, #4
   1ea00:	bne	1e9e0 <__flatcc_fb_gen_c_json_parser@@Base+0xde4>
   1ea04:	ldrh	r3, [r1, #24]
   1ea08:	bic	r7, r3, #1
   1ea0c:	mov	r3, #0
   1ea10:	cmp	r7, #14
   1ea14:	bne	1ea2c <__flatcc_fb_gen_c_json_parser@@Base+0xe30>
   1ea18:	ldr	r3, [r1, #16]
   1ea1c:	ldrh	r3, [r3, #8]
   1ea20:	sub	r3, r3, #4
   1ea24:	clz	r3, r3
   1ea28:	lsr	r3, r3, #5
   1ea2c:	tst	r2, #256	; 0x100
   1ea30:	beq	1e9e0 <__flatcc_fb_gen_c_json_parser@@Base+0xde4>
   1ea34:	ldr	r2, [r1, #96]	; 0x60
   1ea38:	ldr	r1, [r1, #100]	; 0x64
   1ea3c:	subs	r2, r2, r3
   1ea40:	sbc	r3, r1, #0
   1ea44:	cmp	r0, #0
   1ea48:	beq	1e9cc <__flatcc_fb_gen_c_json_parser@@Base+0xdd0>
   1ea4c:	ldr	r1, [pc, #4080]	; 1fa44 <__flatcc_fb_gen_c_json_parser@@Base+0x1e48>
   1ea50:	mov	r0, r4
   1ea54:	add	r1, pc, r1
   1ea58:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1ea5c:	ldr	r0, [r4, #220]	; 0xdc
   1ea60:	add	r0, r0, #1
   1ea64:	str	r0, [r4, #220]	; 0xdc
   1ea68:	b	1e9dc <__flatcc_fb_gen_c_json_parser@@Base+0xde0>
   1ea6c:	cmp	r0, #0
   1ea70:	add	r5, sp, #232	; 0xe8
   1ea74:	bne	1eae8 <__flatcc_fb_gen_c_json_parser@@Base+0xeec>
   1ea78:	ldr	r0, [r4, #220]	; 0xdc
   1ea7c:	cmp	r0, #0
   1ea80:	beq	1fe10 <__flatcc_fb_gen_c_json_parser@@Base+0x2214>
   1ea84:	sub	r0, r0, #1
   1ea88:	str	r0, [r4, #220]	; 0xdc
   1ea8c:	mov	r0, r4
   1ea90:	ldr	r1, [pc, #4080]	; 1fa88 <__flatcc_fb_gen_c_json_parser@@Base+0x1e8c>
   1ea94:	add	r1, pc, r1
   1ea98:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1ea9c:	ldr	r0, [r4, #220]	; 0xdc
   1eaa0:	add	r0, r0, #1
   1eaa4:	str	r0, [r4, #220]	; 0xdc
   1eaa8:	mov	r0, r4
   1eaac:	ldr	r1, [pc, #4088]	; 1faac <__flatcc_fb_gen_c_json_parser@@Base+0x1eb0>
   1eab0:	add	r1, pc, r1
   1eab4:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1eab8:	ldr	r1, [pc, #4080]	; 1fab0 <__flatcc_fb_gen_c_json_parser@@Base+0x1eb4>
   1eabc:	mov	r0, r4
   1eac0:	add	r1, pc, r1
   1eac4:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1eac8:	ldr	r0, [r4, #220]	; 0xdc
   1eacc:	cmp	r0, #0
   1ead0:	beq	1fe38 <__flatcc_fb_gen_c_json_parser@@Base+0x223c>
   1ead4:	sub	r0, r0, #1
   1ead8:	mov	r1, r9
   1eadc:	str	r0, [r4, #220]	; 0xdc
   1eae0:	mov	r0, r4
   1eae4:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1eae8:	ldr	r0, [sp, #28]
   1eaec:	cmp	r0, #0
   1eaf0:	beq	1eb04 <__flatcc_fb_gen_c_json_parser@@Base+0xf08>
   1eaf4:	ldr	r1, [pc, #4056]	; 1fad4 <__flatcc_fb_gen_c_json_parser@@Base+0x1ed8>
   1eaf8:	mov	r0, r4
   1eafc:	add	r1, pc, r1
   1eb00:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1eb04:	ldr	r1, [pc, #4044]	; 1fad8 <__flatcc_fb_gen_c_json_parser@@Base+0x1edc>
   1eb08:	mov	r0, r4
   1eb0c:	add	r1, pc, r1
   1eb10:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1eb14:	ldr	r1, [pc, #4032]	; 1fadc <__flatcc_fb_gen_c_json_parser@@Base+0x1ee0>
   1eb18:	mov	r0, r4
   1eb1c:	add	r1, pc, r1
   1eb20:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1eb24:	ldr	r0, [r4, #220]	; 0xdc
   1eb28:	mov	r1, #0
   1eb2c:	str	r1, [r4, #220]	; 0xdc
   1eb30:	str	r0, [r4, #228]	; 0xe4
   1eb34:	mov	r0, r4
   1eb38:	ldr	r1, [pc, #4080]	; 1fb30 <__flatcc_fb_gen_c_json_parser@@Base+0x1f34>
   1eb3c:	add	r1, pc, r1
   1eb40:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1eb44:	ldr	r0, [r4, #228]	; 0xe4
   1eb48:	str	r0, [r4, #220]	; 0xdc
   1eb4c:	mov	r0, r4
   1eb50:	ldr	r1, [pc, #4092]	; 1fb54 <__flatcc_fb_gen_c_json_parser@@Base+0x1f58>
   1eb54:	add	r1, pc, r1
   1eb58:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1eb5c:	ldr	r0, [r4, #220]	; 0xdc
   1eb60:	add	r8, sp, #8
   1eb64:	cmp	r0, #0
   1eb68:	beq	1fcec <__flatcc_fb_gen_c_json_parser@@Base+0x20f0>
   1eb6c:	sub	r0, r0, #1
   1eb70:	mov	r1, r9
   1eb74:	str	r0, [r4, #220]	; 0xdc
   1eb78:	mov	r0, r4
   1eb7c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1eb80:	ldr	r6, [pc, #4048]	; 1fb58 <__flatcc_fb_gen_c_json_parser@@Base+0x1f5c>
   1eb84:	mov	r0, r4
   1eb88:	add	r6, pc, r6
   1eb8c:	mov	r1, r6
   1eb90:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1eb94:	ldr	r1, [pc, #4032]	; 1fb5c <__flatcc_fb_gen_c_json_parser@@Base+0x1f60>
   1eb98:	mov	r0, r4
   1eb9c:	mov	r2, r5
   1eba0:	add	r1, pc, r1
   1eba4:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1eba8:	ldr	r1, [pc, #4016]	; 1fb60 <__flatcc_fb_gen_c_json_parser@@Base+0x1f64>
   1ebac:	mov	r0, r4
   1ebb0:	add	r1, pc, r1
   1ebb4:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1ebb8:	ldr	r0, [r4, #220]	; 0xdc
   1ebbc:	mov	r2, r5
   1ebc0:	add	r0, r0, #1
   1ebc4:	str	r0, [r4, #220]	; 0xdc
   1ebc8:	mov	r0, r4
   1ebcc:	ldr	r1, [pc, #4064]	; 1fbb4 <__flatcc_fb_gen_c_json_parser@@Base+0x1fb8>
   1ebd0:	add	r1, pc, r1
   1ebd4:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1ebd8:	ldr	r0, [r4, #220]	; 0xdc
   1ebdc:	cmp	r0, #0
   1ebe0:	beq	1fd10 <__flatcc_fb_gen_c_json_parser@@Base+0x2114>
   1ebe4:	sub	r0, r0, #1
   1ebe8:	mov	r1, r9
   1ebec:	str	r0, [r4, #220]	; 0xdc
   1ebf0:	mov	r0, r4
   1ebf4:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1ebf8:	mov	r0, r4
   1ebfc:	mov	r1, r6
   1ec00:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1ec04:	ldr	r0, [sp, #8]
   1ec08:	cmp	r0, #0
   1ec0c:	beq	1e040 <__flatcc_fb_gen_c_json_parser@@Base+0x444>
   1ec10:	bl	147fc <free@plt>
   1ec14:	b	1e040 <__flatcc_fb_gen_c_json_parser@@Base+0x444>
   1ec18:	strheq	r4, [r3], -sl
   1ec1c:	strheq	r4, [r3], -fp
   1ec20:	andeq	r1, r2, r2, asr sl
   1ec24:	strheq	r4, [r3], -r0
   1ec28:	andeq	r4, r3, r3, ror #1
   1ec2c:	andeq	r1, r2, r7, ror r7
   1ec30:	andeq	r4, r3, sp, rrx
   1ec34:	muleq	r2, r4, r9
   1ec38:	ldrdeq	r1, [r2], -r2
   1ec3c:	andeq	r4, r3, lr, ror r0
   1ec40:	andeq	r4, r3, r1, ror r0
   1ec44:	strheq	r4, [r3], -r7
   1ec48:	andeq	r4, r3, sl, lsr #1
   1ec4c:	ldrdeq	r4, [r3], -lr
   1ec50:	andeq	r4, r3, r4, lsl #2
   1ec54:	andeq	r4, r3, ip, lsl r1
   1ec58:	andeq	r4, r3, r4, asr r1
   1ec5c:	andeq	r4, r3, ip, asr pc
   1ec60:	andeq	r4, r3, sl, ror #2
   1ec64:	muleq	r3, r7, r1
   1ec68:			; <UNDEFINED> instruction: 0x000218b2
   1ec6c:	ldrdeq	r4, [r3], -r0
   1ec70:	andeq	r4, r3, pc, lsr #6
   1ec74:	andeq	r4, r3, r5, lsl #4
   1ec78:	muleq	r3, r0, r2
   1ec7c:	andeq	r4, r3, lr, lsr r4
   1ec80:	ldrdeq	r4, [r3], -sl
   1ec84:	andeq	r4, r3, sl, asr #6
   1ec88:	ldr	r1, [pc, #4072]	; 1fc78 <__flatcc_fb_gen_c_json_parser@@Base+0x207c>
   1ec8c:	add	r1, pc, r1
   1ec90:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1ec94:	ldr	r1, [pc, #4064]	; 1fc7c <__flatcc_fb_gen_c_json_parser@@Base+0x2080>
   1ec98:	mov	r0, r4
   1ec9c:	add	r1, pc, r1
   1eca0:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1eca4:	ldr	r1, [pc, #4084]	; 1fca0 <__flatcc_fb_gen_c_json_parser@@Base+0x20a4>
   1eca8:	mov	r0, r4
   1ecac:	add	r1, pc, r1
   1ecb0:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1ecb4:	ldr	r0, [r4, #220]	; 0xdc
   1ecb8:	cmp	r0, #0
   1ecbc:	beq	1fd34 <__flatcc_fb_gen_c_json_parser@@Base+0x2138>
   1ecc0:	sub	r0, r0, #1
   1ecc4:	mov	r1, r9
   1ecc8:	str	r0, [r4, #220]	; 0xdc
   1eccc:	mov	r0, r4
   1ecd0:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1ecd4:	ldr	r1, [pc, #4072]	; 1fcc4 <__flatcc_fb_gen_c_json_parser@@Base+0x20c8>
   1ecd8:	mov	r0, r4
   1ecdc:	add	r1, pc, r1
   1ece0:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1ece4:	cmp	r5, #1
   1ece8:	blt	1ed24 <__flatcc_fb_gen_c_json_parser@@Base+0x1128>
   1ecec:	ldr	r0, [r4, #220]	; 0xdc
   1ecf0:	mov	r1, #0
   1ecf4:	str	r1, [r4, #220]	; 0xdc
   1ecf8:	str	r0, [r4, #228]	; 0xe4
   1ecfc:	mov	r0, r4
   1ed00:	ldr	r1, [pc, #4064]	; 1fce8 <__flatcc_fb_gen_c_json_parser@@Base+0x20ec>
   1ed04:	add	r1, pc, r1
   1ed08:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1ed0c:	ldr	r0, [r4, #228]	; 0xe4
   1ed10:	str	r0, [r4, #220]	; 0xdc
   1ed14:	mov	r0, r4
   1ed18:	ldr	r1, [pc, #4076]	; 1fd0c <__flatcc_fb_gen_c_json_parser@@Base+0x2110>
   1ed1c:	add	r1, pc, r1
   1ed20:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1ed24:	ldr	r0, [r4, #220]	; 0xdc
   1ed28:	add	r5, sp, #232	; 0xe8
   1ed2c:	cmp	r0, #0
   1ed30:	beq	1fd54 <__flatcc_fb_gen_c_json_parser@@Base+0x2158>
   1ed34:	sub	r0, r0, #1
   1ed38:	mov	r1, r9
   1ed3c:	str	r0, [r4, #220]	; 0xdc
   1ed40:	mov	r0, r4
   1ed44:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1ed48:	ldr	r1, [pc, #4064]	; 1fd30 <__flatcc_fb_gen_c_json_parser@@Base+0x2134>
   1ed4c:	mov	r0, r4
   1ed50:	add	r1, pc, r1
   1ed54:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1ed58:	ldr	r0, [sp, #8]
   1ed5c:	cmp	r0, #0
   1ed60:	beq	1ed68 <__flatcc_fb_gen_c_json_parser@@Base+0x116c>
   1ed64:	bl	147fc <free@plt>
   1ed68:	ldrh	r0, [sl, #8]
   1ed6c:	cmp	r0, #1
   1ed70:	bne	1fd74 <__flatcc_fb_gen_c_json_parser@@Base+0x2178>
   1ed74:	mov	r0, r5
   1ed78:	mov	r1, #0
   1ed7c:	mov	r2, #220	; 0xdc
   1ed80:	bl	148d4 <memset@plt>
   1ed84:	ldr	r0, [sl, #12]
   1ed88:	mov	r1, sl
   1ed8c:	mov	r2, r5
   1ed90:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   1ed94:	ldr	r1, [pc, #4088]	; 1fd94 <__flatcc_fb_gen_c_json_parser@@Base+0x2198>
   1ed98:	mov	r0, r4
   1ed9c:	mov	r2, r5
   1eda0:	add	r1, pc, r1
   1eda4:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1eda8:	ldr	r6, [pc, #4072]	; 1fd98 <__flatcc_fb_gen_c_json_parser@@Base+0x219c>
   1edac:	mov	r0, r4
   1edb0:	add	r6, pc, r6
   1edb4:	mov	r1, r6
   1edb8:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1edbc:	ldr	r0, [r4, #220]	; 0xdc
   1edc0:	add	r0, r0, #1
   1edc4:	str	r0, [r4, #220]	; 0xdc
   1edc8:	mov	r0, r4
   1edcc:	ldr	r1, [pc, #4072]	; 1fdbc <__flatcc_fb_gen_c_json_parser@@Base+0x21c0>
   1edd0:	add	r1, pc, r1
   1edd4:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1edd8:	ldr	r9, [pc, #4064]	; 1fdc0 <__flatcc_fb_gen_c_json_parser@@Base+0x21c4>
   1eddc:	mov	r0, r4
   1ede0:	add	r9, pc, r9
   1ede4:	mov	r1, r9
   1ede8:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1edec:	ldr	r1, [pc, #4080]	; 1fde4 <__flatcc_fb_gen_c_json_parser@@Base+0x21e8>
   1edf0:	mov	r0, r4
   1edf4:	add	r1, pc, r1
   1edf8:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1edfc:	ldrh	r0, [sl, #104]	; 0x68
   1ee00:	ldrd	r2, [r7, #16]
   1ee04:	str	r0, [sp]
   1ee08:	mov	r0, r4
   1ee0c:	ldr	r1, [pc, #4084]	; 1fe08 <__flatcc_fb_gen_c_json_parser@@Base+0x220c>
   1ee10:	add	r1, pc, r1
   1ee14:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1ee18:	ldr	r1, [pc, #4076]	; 1fe0c <__flatcc_fb_gen_c_json_parser@@Base+0x2210>
   1ee1c:	mov	r0, r4
   1ee20:	mov	r2, r5
   1ee24:	add	r1, pc, r1
   1ee28:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1ee2c:	ldr	r1, [pc, #4092]	; 1fe30 <__flatcc_fb_gen_c_json_parser@@Base+0x2234>
   1ee30:	mov	r0, r4
   1ee34:	add	r1, pc, r1
   1ee38:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1ee3c:	ldr	r1, [pc, #4080]	; 1fe34 <__flatcc_fb_gen_c_json_parser@@Base+0x2238>
   1ee40:	mov	r0, r4
   1ee44:	add	r1, pc, r1
   1ee48:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1ee4c:	ldr	r0, [r4, #220]	; 0xdc
   1ee50:	mov	r1, #0
   1ee54:	str	r1, [r4, #220]	; 0xdc
   1ee58:	str	r0, [r4, #228]	; 0xe4
   1ee5c:	mov	r0, r4
   1ee60:	ldr	r1, [pc, #4080]	; 1fe58 <__flatcc_fb_gen_c_json_parser@@Base+0x225c>
   1ee64:	add	r1, pc, r1
   1ee68:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1ee6c:	ldr	r0, [r4, #228]	; 0xe4
   1ee70:	str	r0, [r4, #220]	; 0xdc
   1ee74:	mov	r0, r4
   1ee78:	ldr	r1, [pc, #4092]	; 1fe7c <__flatcc_fb_gen_c_json_parser@@Base+0x2280>
   1ee7c:	add	r1, pc, r1
   1ee80:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1ee84:	ldr	r0, [r4, #220]	; 0xdc
   1ee88:	cmp	r0, #0
   1ee8c:	beq	1fd9c <__flatcc_fb_gen_c_json_parser@@Base+0x21a0>
   1ee90:	sub	r0, r0, #1
   1ee94:	str	r0, [r4, #220]	; 0xdc
   1ee98:	mov	r0, r4
   1ee9c:	ldr	r7, [pc, #4092]	; 1fea0 <__flatcc_fb_gen_c_json_parser@@Base+0x22a4>
   1eea0:	add	r7, pc, r7
   1eea4:	mov	r1, r7
   1eea8:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1eeac:	mov	r0, r4
   1eeb0:	mov	r1, r9
   1eeb4:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1eeb8:	ldr	r1, [pc, #4068]	; 1fea4 <__flatcc_fb_gen_c_json_parser@@Base+0x22a8>
   1eebc:	mov	r0, r4
   1eec0:	mov	r2, r5
   1eec4:	add	r1, pc, r1
   1eec8:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1eecc:	mov	r0, r4
   1eed0:	mov	r1, r6
   1eed4:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1eed8:	ldr	r0, [r4, #220]	; 0xdc
   1eedc:	mov	r2, r5
   1eee0:	add	r0, r0, #1
   1eee4:	str	r0, [r4, #220]	; 0xdc
   1eee8:	mov	r0, r4
   1eeec:	ldr	r1, [pc, #4084]	; 1fee8 <__flatcc_fb_gen_c_json_parser@@Base+0x22ec>
   1eef0:	add	r1, pc, r1
   1eef4:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1eef8:	ldr	r0, [r4, #220]	; 0xdc
   1eefc:	cmp	r0, #0
   1ef00:	beq	1fdc4 <__flatcc_fb_gen_c_json_parser@@Base+0x21c8>
   1ef04:	sub	r0, r0, #1
   1ef08:	mov	r1, r7
   1ef0c:	str	r0, [r4, #220]	; 0xdc
   1ef10:	mov	r0, r4
   1ef14:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1ef18:	mov	r0, r4
   1ef1c:	mov	r1, r9
   1ef20:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1ef24:	b	1e048 <__flatcc_fb_gen_c_json_parser@@Base+0x44c>
   1ef28:	andeq	r2, r0, r8, lsr r4
   1ef2c:	andeq	r4, r3, sp, asr #6
   1ef30:	andeq	r4, r3, r7, ror r1
   1ef34:	muleq	r2, sl, r6
   1ef38:	andeq	r1, r2, r2, ror r6
   1ef3c:	andeq	r1, r2, sl, asr r6
   1ef40:	andeq	r7, r3, fp, lsr r2
   1ef44:	andeq	r5, r0, r4, ror r2
   1ef48:	andeq	r4, r0, r4, lsl r2
   1ef4c:	strdeq	r5, [r3], -r5	; <UNPREDICTABLE>
   1ef50:	ldr	r0, [r4, #208]	; 0xd0
   1ef54:	ldr	r0, [r0, #60]	; 0x3c
   1ef58:	ldr	r1, [pc, #4076]	; 1ff4c <__flatcc_fb_gen_c_json_parser@@Base+0x2350>
   1ef5c:	mov	r2, r4
   1ef60:	add	r1, pc, r1
   1ef64:	bl	28ee0 <fb_scope_table_visit@@Base>
   1ef68:	vmov.i32	q8, #0	; 0x00000000
   1ef6c:	mov	r0, #12
   1ef70:	add	r1, sp, #8
   1ef74:	add	r2, sp, #232	; 0xe8
   1ef78:	vst1.64	{d16-d17}, [r1], r0
   1ef7c:	vst1.32	{d16-d17}, [r1]
   1ef80:	add	r1, r2, #20
   1ef84:	ldr	r0, [r4, #208]	; 0xd0
   1ef88:	ldr	r8, [r0, #60]	; 0x3c
   1ef8c:	vst1.32	{d16-d17}, [r1]
   1ef90:	orr	r1, r2, #4
   1ef94:	vst1.32	{d16-d17}, [r1]
   1ef98:	mov	r1, #0
   1ef9c:	str	r1, [sp, #268]	; 0x10c
   1efa0:	str	r0, [sp, #272]	; 0x110
   1efa4:	mov	r0, #1
   1efa8:	str	r0, [sp, #232]	; 0xe8
   1efac:	ldr	r1, [pc, #4084]	; 1ffa8 <__flatcc_fb_gen_c_json_parser@@Base+0x23ac>
   1efb0:	mov	r0, r8
   1efb4:	add	r1, pc, r1
   1efb8:	bl	28ee0 <fb_scope_table_visit@@Base>
   1efbc:	ldr	r5, [sp, #236]	; 0xec
   1efc0:	mov	r1, #8
   1efc4:	mov	r0, r5
   1efc8:	bl	147cc <calloc@plt>
   1efcc:	str	r0, [sp, #248]	; 0xf8
   1efd0:	mov	r7, r0
   1efd4:	mov	r1, #8
   1efd8:	ldr	sl, [sp, #240]	; 0xf0
   1efdc:	mov	r0, sl
   1efe0:	bl	147cc <calloc@plt>
   1efe4:	str	r0, [sp, #252]	; 0xfc
   1efe8:	mov	r6, r0
   1efec:	ldr	r9, [sp, #244]	; 0xf4
   1eff0:	mov	r0, r9
   1eff4:	bl	14868 <malloc@plt>
   1eff8:	cmp	r5, #1
   1effc:	str	r0, [sp, #268]	; 0x10c
   1f000:	str	r6, [sp, #264]	; 0x108
   1f004:	str	r7, [sp, #260]	; 0x104
   1f008:	str	r0, [sp, #256]	; 0x100
   1f00c:	blt	1f018 <__flatcc_fb_gen_c_json_parser@@Base+0x141c>
   1f010:	cmp	r7, #0
   1f014:	beq	1f04c <__flatcc_fb_gen_c_json_parser@@Base+0x1450>
   1f018:	cmp	sl, #1
   1f01c:	blt	1f028 <__flatcc_fb_gen_c_json_parser@@Base+0x142c>
   1f020:	cmp	r6, #0
   1f024:	beq	1f038 <__flatcc_fb_gen_c_json_parser@@Base+0x143c>
   1f028:	cmp	r9, #0
   1f02c:	beq	1f334 <__flatcc_fb_gen_c_json_parser@@Base+0x1738>
   1f030:	cmp	r0, #0
   1f034:	bne	1f334 <__flatcc_fb_gen_c_json_parser@@Base+0x1738>
   1f038:	cmp	r7, #0
   1f03c:	beq	1f04c <__flatcc_fb_gen_c_json_parser@@Base+0x1450>
   1f040:	mov	r0, r7
   1f044:	bl	147fc <free@plt>
   1f048:	ldr	r6, [sp, #252]	; 0xfc
   1f04c:	cmp	r6, #0
   1f050:	beq	1f05c <__flatcc_fb_gen_c_json_parser@@Base+0x1460>
   1f054:	mov	r0, r6
   1f058:	bl	147fc <free@plt>
   1f05c:	ldr	r0, [sp, #256]	; 0x100
   1f060:	cmp	r0, #0
   1f064:	beq	1f06c <__flatcc_fb_gen_c_json_parser@@Base+0x1470>
   1f068:	bl	147fc <free@plt>
   1f06c:	ldr	r0, [r4, #208]	; 0xd0
   1f070:	ldr	r5, [r0, #52]	; 0x34
   1f074:	cmp	r5, #0
   1f078:	beq	1f6f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1af4>
   1f07c:	ldrh	r0, [r5, #8]
   1f080:	cmp	r0, #1
   1f084:	beq	1f1cc <__flatcc_fb_gen_c_json_parser@@Base+0x15d0>
   1f088:	cmp	r0, #0
   1f08c:	bne	1f6f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1af4>
   1f090:	add	r6, sp, #232	; 0xe8
   1f094:	mov	r1, #0
   1f098:	mov	r2, #220	; 0xdc
   1f09c:	mov	r0, r6
   1f0a0:	bl	148d4 <memset@plt>
   1f0a4:	ldr	r0, [r5, #12]
   1f0a8:	mov	r1, r5
   1f0ac:	mov	r2, r6
   1f0b0:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   1f0b4:	ldr	r0, [r4, #208]	; 0xd0
   1f0b8:	ldr	r2, [r0, #160]	; 0xa0
   1f0bc:	ldr	r1, [pc, #3996]	; 20060 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   1f0c0:	mov	r0, r4
   1f0c4:	add	r1, pc, r1
   1f0c8:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f0cc:	ldr	r0, [r4, #220]	; 0xdc
   1f0d0:	add	r0, r0, #2
   1f0d4:	str	r0, [r4, #220]	; 0xdc
   1f0d8:	mov	r0, r4
   1f0dc:	ldr	r1, [pc, #3968]	; 20064 <__flatcc_fb_gen_c_json_parser@@Base+0x2468>
   1f0e0:	add	r1, pc, r1
   1f0e4:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f0e8:	ldr	r0, [r4, #220]	; 0xdc
   1f0ec:	cmp	r0, #0
   1f0f0:	beq	1fe80 <__flatcc_fb_gen_c_json_parser@@Base+0x2284>
   1f0f4:	subs	r1, r0, #1
   1f0f8:	str	r1, [r4, #220]	; 0xdc
   1f0fc:	beq	1fe80 <__flatcc_fb_gen_c_json_parser@@Base+0x2284>
   1f100:	sub	r0, r0, #2
   1f104:	str	r0, [r4, #220]	; 0xdc
   1f108:	mov	r0, r4
   1f10c:	ldr	r1, [pc, #3924]	; 20068 <__flatcc_fb_gen_c_json_parser@@Base+0x246c>
   1f110:	add	r1, pc, r1
   1f114:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f118:	ldr	r0, [r4, #220]	; 0xdc
   1f11c:	add	r0, r0, #1
   1f120:	str	r0, [r4, #220]	; 0xdc
   1f124:	mov	r0, r4
   1f128:	ldr	r1, [pc, #3900]	; 2006c <__flatcc_fb_gen_c_json_parser@@Base+0x2470>
   1f12c:	add	r1, pc, r1
   1f130:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f134:	ldr	r1, [pc, #3892]	; 20070 <__flatcc_fb_gen_c_json_parser@@Base+0x2474>
   1f138:	mov	r0, r4
   1f13c:	add	r1, pc, r1
   1f140:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f144:	ldr	r1, [pc, #3880]	; 20074 <__flatcc_fb_gen_c_json_parser@@Base+0x2478>
   1f148:	mov	r0, r4
   1f14c:	add	r1, pc, r1
   1f150:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f154:	ldr	r1, [pc, #3868]	; 20078 <__flatcc_fb_gen_c_json_parser@@Base+0x247c>
   1f158:	mov	r0, r4
   1f15c:	add	r1, pc, r1
   1f160:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f164:	ldr	r1, [pc, #3856]	; 2007c <__flatcc_fb_gen_c_json_parser@@Base+0x2480>
   1f168:	mov	r0, r4
   1f16c:	add	r1, pc, r1
   1f170:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f174:	ldr	r0, [r4, #208]	; 0xd0
   1f178:	ldrh	r1, [r0, #16]
   1f17c:	cmp	r1, #2
   1f180:	bne	1f520 <__flatcc_fb_gen_c_json_parser@@Base+0x1924>
   1f184:	ldrd	r6, [r0, #8]
   1f188:	ldr	r1, [pc, #3824]	; 20080 <__flatcc_fb_gen_c_json_parser@@Base+0x2484>
   1f18c:	mov	r0, r4
   1f190:	add	r1, pc, r1
   1f194:	mov	r2, r7
   1f198:	mov	r3, r6
   1f19c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f1a0:	b	1f530 <__flatcc_fb_gen_c_json_parser@@Base+0x1934>
   1f1a4:	andeq	r4, r3, r4, asr ip
   1f1a8:	andeq	r4, r3, r0, ror #24
   1f1ac:	andeq	r5, r3, r7, lsr #22
   1f1b0:	andeq	r4, r3, pc, asr #14
   1f1b4:	andeq	r4, r3, r1, asr r7
   1f1b8:	andeq	r5, r3, ip, lsl #22
   1f1bc:	muleq	r2, pc, r7	; <UNPREDICTABLE>
   1f1c0:	strheq	r5, [r0], -r0
   1f1c4:	andeq	r4, r0, r0, asr r0
   1f1c8:	andeq	r4, r3, r5, asr #21
   1f1cc:	add	r6, sp, #232	; 0xe8
   1f1d0:	mov	r1, #0
   1f1d4:	mov	r2, #220	; 0xdc
   1f1d8:	mov	r0, r6
   1f1dc:	bl	148d4 <memset@plt>
   1f1e0:	ldr	r0, [r5, #12]
   1f1e4:	mov	r1, r5
   1f1e8:	mov	r2, r6
   1f1ec:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   1f1f0:	ldr	r0, [r4, #208]	; 0xd0
   1f1f4:	ldr	r2, [r0, #160]	; 0xa0
   1f1f8:	ldr	r1, [pc, #3760]	; 200b0 <__flatcc_fb_gen_c_json_parser@@Base+0x24b4>
   1f1fc:	mov	r0, r4
   1f200:	add	r1, pc, r1
   1f204:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f208:	ldr	r0, [r4, #220]	; 0xdc
   1f20c:	add	r0, r0, #2
   1f210:	str	r0, [r4, #220]	; 0xdc
   1f214:	mov	r0, r4
   1f218:	ldr	r1, [pc, #3732]	; 200b4 <__flatcc_fb_gen_c_json_parser@@Base+0x24b8>
   1f21c:	add	r1, pc, r1
   1f220:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f224:	ldr	r0, [r4, #220]	; 0xdc
   1f228:	cmp	r0, #0
   1f22c:	beq	1fea8 <__flatcc_fb_gen_c_json_parser@@Base+0x22ac>
   1f230:	subs	r1, r0, #1
   1f234:	str	r1, [r4, #220]	; 0xdc
   1f238:	beq	1fea8 <__flatcc_fb_gen_c_json_parser@@Base+0x22ac>
   1f23c:	sub	r0, r0, #2
   1f240:	str	r0, [r4, #220]	; 0xdc
   1f244:	mov	r0, r4
   1f248:	ldr	r1, [pc, #3688]	; 200b8 <__flatcc_fb_gen_c_json_parser@@Base+0x24bc>
   1f24c:	add	r1, pc, r1
   1f250:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f254:	ldr	r0, [r4, #220]	; 0xdc
   1f258:	add	r0, r0, #1
   1f25c:	str	r0, [r4, #220]	; 0xdc
   1f260:	mov	r0, r4
   1f264:	ldr	r1, [pc, #3664]	; 200bc <__flatcc_fb_gen_c_json_parser@@Base+0x24c0>
   1f268:	add	r1, pc, r1
   1f26c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f270:	ldr	r1, [pc, #3656]	; 200c0 <__flatcc_fb_gen_c_json_parser@@Base+0x24c4>
   1f274:	mov	r0, r4
   1f278:	add	r1, pc, r1
   1f27c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f280:	ldr	r1, [pc, #3644]	; 200c4 <__flatcc_fb_gen_c_json_parser@@Base+0x24c8>
   1f284:	mov	r0, r4
   1f288:	add	r1, pc, r1
   1f28c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f290:	ldr	r1, [pc, #3632]	; 200c8 <__flatcc_fb_gen_c_json_parser@@Base+0x24cc>
   1f294:	mov	r0, r4
   1f298:	add	r1, pc, r1
   1f29c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f2a0:	ldr	r1, [pc, #3620]	; 200cc <__flatcc_fb_gen_c_json_parser@@Base+0x24d0>
   1f2a4:	mov	r0, r4
   1f2a8:	add	r1, pc, r1
   1f2ac:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f2b0:	ldr	r0, [r4, #208]	; 0xd0
   1f2b4:	ldrh	r1, [r0, #16]
   1f2b8:	cmp	r1, #2
   1f2bc:	bne	1f618 <__flatcc_fb_gen_c_json_parser@@Base+0x1a1c>
   1f2c0:	ldrd	r6, [r0, #8]
   1f2c4:	ldr	r1, [pc, #3588]	; 200d0 <__flatcc_fb_gen_c_json_parser@@Base+0x24d4>
   1f2c8:	mov	r0, r4
   1f2cc:	add	r1, pc, r1
   1f2d0:	mov	r2, r7
   1f2d4:	mov	r3, r6
   1f2d8:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f2dc:	b	1f628 <__flatcc_fb_gen_c_json_parser@@Base+0x1a2c>
   1f2e0:	andeq	r7, r3, r7
   1f2e4:	andeq	r4, r3, r8, lsl fp
   1f2e8:	andeq	r4, r3, sl, lsl #22
   1f2ec:	andeq	r4, r3, r4, lsl fp
   1f2f0:	andeq	r4, r3, r3, lsl r6
   1f2f4:	andeq	r4, r3, r5, lsl r6
   1f2f8:	andeq	r1, r2, lr, lsr r3
   1f2fc:	andeq	r4, r3, r0, ror #21
   1f300:	andeq	r4, r3, sp, lsl #22
   1f304:	andeq	r4, r3, r6, asr #22
   1f308:			; <UNDEFINED> instruction: 0x000345bd
   1f30c:	andeq	r3, r3, r4, asr #31
   1f310:	andeq	r6, r3, fp, asr #29
   1f314:	andeq	r4, r3, ip, lsl r0
   1f318:	andeq	r4, r3, r9, lsl r0
   1f31c:	andeq	r4, r3, r9, lsl r0
   1f320:	andeq	r4, r3, r0, lsl r0
   1f324:	andeq	r3, r2, r3, ror #10
   1f328:	andeq	r4, r3, r1, lsr r0
   1f32c:	andeq	r4, r3, ip, asr #1
   1f330:	strheq	r4, [r3], -r5
   1f334:	ldr	r1, [pc, #3276]	; 20008 <__flatcc_fb_gen_c_json_parser@@Base+0x240c>
   1f338:	add	r2, sp, #232	; 0xe8
   1f33c:	mov	r0, r8
   1f340:	add	r1, pc, r1
   1f344:	bl	28ee0 <fb_scope_table_visit@@Base>
   1f348:	ldr	r6, [sp, #236]	; 0xec
   1f34c:	ldr	r5, [sp, #248]	; 0xf8
   1f350:	ldr	r3, [pc, #3252]	; 2000c <__flatcc_fb_gen_c_json_parser@@Base+0x2410>
   1f354:	mov	r2, #8
   1f358:	add	r3, pc, r3
   1f35c:	mov	r0, r5
   1f360:	mov	r1, r6
   1f364:	bl	14940 <qsort@plt>
   1f368:	cmp	r6, #1
   1f36c:	blt	1f3e8 <__flatcc_fb_gen_c_json_parser@@Base+0x17ec>
   1f370:	sub	r2, r6, #1
   1f374:	and	r0, r6, #3
   1f378:	mov	r1, #0
   1f37c:	cmp	r2, #3
   1f380:	bcc	1f3cc <__flatcc_fb_gen_c_json_parser@@Base+0x17d0>
   1f384:	sub	r2, r6, r0
   1f388:	add	r3, r5, #16
   1f38c:	mov	r1, #0
   1f390:	ldr	r7, [r3, #-16]
   1f394:	add	r6, r1, #1
   1f398:	str	r1, [r7, #124]	; 0x7c
   1f39c:	ldr	r7, [r3, #-8]
   1f3a0:	str	r6, [r7, #124]	; 0x7c
   1f3a4:	add	r6, r1, #2
   1f3a8:	ldr	r7, [r3]
   1f3ac:	str	r6, [r7, #124]	; 0x7c
   1f3b0:	add	r6, r1, #3
   1f3b4:	add	r1, r1, #4
   1f3b8:	ldr	r7, [r3, #8]
   1f3bc:	add	r3, r3, #32
   1f3c0:	cmp	r2, r1
   1f3c4:	str	r6, [r7, #124]	; 0x7c
   1f3c8:	bne	1f390 <__flatcc_fb_gen_c_json_parser@@Base+0x1794>
   1f3cc:	cmp	r0, #0
   1f3d0:	beq	1f3e8 <__flatcc_fb_gen_c_json_parser@@Base+0x17ec>
   1f3d4:	ldr	r2, [r5, r1, lsl #3]
   1f3d8:	subs	r0, r0, #1
   1f3dc:	str	r1, [r2, #124]	; 0x7c
   1f3e0:	add	r1, r1, #1
   1f3e4:	bne	1f3d4 <__flatcc_fb_gen_c_json_parser@@Base+0x17d8>
   1f3e8:	ldr	r6, [sp, #240]	; 0xf0
   1f3ec:	ldr	r5, [sp, #252]	; 0xfc
   1f3f0:	ldr	r3, [pc, #3096]	; 20010 <__flatcc_fb_gen_c_json_parser@@Base+0x2414>
   1f3f4:	mov	r2, #8
   1f3f8:	add	r3, pc, r3
   1f3fc:	mov	r0, r5
   1f400:	mov	r1, r6
   1f404:	bl	14940 <qsort@plt>
   1f408:	cmp	r6, #1
   1f40c:	blt	1f488 <__flatcc_fb_gen_c_json_parser@@Base+0x188c>
   1f410:	sub	r2, r6, #1
   1f414:	and	r0, r6, #3
   1f418:	mov	r1, #0
   1f41c:	cmp	r2, #3
   1f420:	bcc	1f46c <__flatcc_fb_gen_c_json_parser@@Base+0x1870>
   1f424:	sub	r2, r6, r0
   1f428:	add	r3, r5, #16
   1f42c:	mov	r1, #0
   1f430:	ldr	r7, [r3, #-16]
   1f434:	add	r6, r1, #1
   1f438:	str	r1, [r7, #124]	; 0x7c
   1f43c:	ldr	r7, [r3, #-8]
   1f440:	str	r6, [r7, #124]	; 0x7c
   1f444:	add	r6, r1, #2
   1f448:	ldr	r7, [r3]
   1f44c:	str	r6, [r7, #124]	; 0x7c
   1f450:	add	r6, r1, #3
   1f454:	add	r1, r1, #4
   1f458:	ldr	r7, [r3, #8]
   1f45c:	add	r3, r3, #32
   1f460:	cmp	r2, r1
   1f464:	str	r6, [r7, #124]	; 0x7c
   1f468:	bne	1f430 <__flatcc_fb_gen_c_json_parser@@Base+0x1834>
   1f46c:	cmp	r0, #0
   1f470:	beq	1f488 <__flatcc_fb_gen_c_json_parser@@Base+0x188c>
   1f474:	ldr	r2, [r5, r1, lsl #3]
   1f478:	subs	r0, r0, #1
   1f47c:	str	r1, [r2, #124]	; 0x7c
   1f480:	add	r1, r1, #1
   1f484:	bne	1f474 <__flatcc_fb_gen_c_json_parser@@Base+0x1878>
   1f488:	ldr	r9, [sp, #240]	; 0xf0
   1f48c:	cmp	r9, #0
   1f490:	beq	1f748 <__flatcc_fb_gen_c_json_parser@@Base+0x1b4c>
   1f494:	lsl	r0, r9, #4
   1f498:	bl	14868 <malloc@plt>
   1f49c:	cmp	r0, #0
   1f4a0:	beq	1f778 <__flatcc_fb_gen_c_json_parser@@Base+0x1b7c>
   1f4a4:	mov	r8, r0
   1f4a8:	cmp	r9, #1
   1f4ac:	blt	1f4ec <__flatcc_fb_gen_c_json_parser@@Base+0x18f0>
   1f4b0:	ldr	r0, [sp, #252]	; 0xfc
   1f4b4:	add	r7, r8, #8
   1f4b8:	mov	sl, #0
   1f4bc:	mov	r5, r9
   1f4c0:	add	r6, r0, #4
   1f4c4:	ldr	r0, [r6]
   1f4c8:	str	r0, [r7, #-8]
   1f4cc:	bl	148b0 <strlen@plt>
   1f4d0:	str	r0, [r7, #-4]
   1f4d4:	subs	r5, r5, #1
   1f4d8:	ldr	r0, [r6, #-4]
   1f4dc:	add	r6, r6, #8
   1f4e0:	stm	r7, {r0, sl}
   1f4e4:	add	r7, r7, #16
   1f4e8:	bne	1f4c4 <__flatcc_fb_gen_c_json_parser@@Base+0x18c8>
   1f4ec:	ldr	r3, [pc, #2848]	; 20014 <__flatcc_fb_gen_c_json_parser@@Base+0x2418>
   1f4f0:	mov	r0, r8
   1f4f4:	mov	r1, r9
   1f4f8:	mov	r2, #16
   1f4fc:	add	r3, pc, r3
   1f500:	bl	14940 <qsort@plt>
   1f504:	ldr	r9, [sp, #240]	; 0xf0
   1f508:	b	1f77c <__flatcc_fb_gen_c_json_parser@@Base+0x1b80>
   1f50c:	muleq	r3, r5, pc	; <UNPREDICTABLE>
   1f510:	andeq	r3, r3, r5, lsl #31
   1f514:	andeq	r3, r3, r3, lsr #31
   1f518:	strdeq	r3, [r3], -r5
   1f51c:	andeq	r4, r3, r8, asr #32
   1f520:	ldr	r1, [pc, #2908]	; 20084 <__flatcc_fb_gen_c_json_parser@@Base+0x2488>
   1f524:	mov	r0, r4
   1f528:	add	r1, pc, r1
   1f52c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f530:	ldr	r1, [pc, #2896]	; 20088 <__flatcc_fb_gen_c_json_parser@@Base+0x248c>
   1f534:	add	r2, sp, #232	; 0xe8
   1f538:	mov	r0, r4
   1f53c:	add	r1, pc, r1
   1f540:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f544:	ldr	r1, [pc, #2880]	; 2008c <__flatcc_fb_gen_c_json_parser@@Base+0x2490>
   1f548:	mov	r0, r4
   1f54c:	add	r1, pc, r1
   1f550:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f554:	ldr	r0, [r4, #220]	; 0xdc
   1f558:	add	r0, r0, #1
   1f55c:	str	r0, [r4, #220]	; 0xdc
   1f560:	mov	r0, r4
   1f564:	ldr	r1, [pc, #2852]	; 20090 <__flatcc_fb_gen_c_json_parser@@Base+0x2494>
   1f568:	add	r1, pc, r1
   1f56c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f570:	ldr	r0, [r4, #220]	; 0xdc
   1f574:	cmp	r0, #0
   1f578:	beq	1feec <__flatcc_fb_gen_c_json_parser@@Base+0x22f0>
   1f57c:	sub	r0, r0, #1
   1f580:	str	r0, [r4, #220]	; 0xdc
   1f584:	mov	r0, r4
   1f588:	ldr	r1, [pc, #2820]	; 20094 <__flatcc_fb_gen_c_json_parser@@Base+0x2498>
   1f58c:	add	r1, pc, r1
   1f590:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f594:	ldr	r1, [pc, #2812]	; 20098 <__flatcc_fb_gen_c_json_parser@@Base+0x249c>
   1f598:	mov	r0, r4
   1f59c:	add	r1, pc, r1
   1f5a0:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f5a4:	ldr	r1, [pc, #2800]	; 2009c <__flatcc_fb_gen_c_json_parser@@Base+0x24a0>
   1f5a8:	mov	r0, r4
   1f5ac:	add	r1, pc, r1
   1f5b0:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f5b4:	ldr	r1, [pc, #2788]	; 200a0 <__flatcc_fb_gen_c_json_parser@@Base+0x24a4>
   1f5b8:	mov	r0, r4
   1f5bc:	add	r1, pc, r1
   1f5c0:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f5c4:	ldr	r0, [r4, #220]	; 0xdc
   1f5c8:	cmp	r0, #0
   1f5cc:	bne	1f6c8 <__flatcc_fb_gen_c_json_parser@@Base+0x1acc>
   1f5d0:	ldr	r0, [pc, #2764]	; 200a4 <__flatcc_fb_gen_c_json_parser@@Base+0x24a8>
   1f5d4:	ldr	r1, [pc, #2764]	; 200a8 <__flatcc_fb_gen_c_json_parser@@Base+0x24ac>
   1f5d8:	ldr	r3, [pc, #2764]	; 200ac <__flatcc_fb_gen_c_json_parser@@Base+0x24b0>
   1f5dc:	movw	r2, #1630	; 0x65e
   1f5e0:	add	r0, pc, r0
   1f5e4:	add	r1, pc, r1
   1f5e8:	add	r3, pc, r3
   1f5ec:	bl	1497c <__assert_fail@plt>
   1f5f0:	andeq	r4, r3, r5, lsr r0
   1f5f4:	andeq	r4, r3, r2, asr r0
   1f5f8:	andeq	r4, r3, sl, lsl #1
   1f5fc:	andeq	r4, r3, r7, ror r0
   1f600:	andeq	r4, r3, r7, asr #2
   1f604:	andeq	r4, r3, r0, ror #2
   1f608:	andeq	r4, r3, sl, asr #32
   1f60c:	andeq	r4, r3, r6, asr r0
   1f610:	andeq	r4, r3, sl, asr #32
   1f614:	strdeq	r3, [r3], -lr
   1f618:	ldr	r1, [pc, #2740]	; 200d4 <__flatcc_fb_gen_c_json_parser@@Base+0x24d8>
   1f61c:	mov	r0, r4
   1f620:	add	r1, pc, r1
   1f624:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f628:	ldr	r1, [pc, #2728]	; 200d8 <__flatcc_fb_gen_c_json_parser@@Base+0x24dc>
   1f62c:	add	r2, sp, #232	; 0xe8
   1f630:	mov	r0, r4
   1f634:	add	r1, pc, r1
   1f638:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f63c:	ldr	r1, [pc, #2712]	; 200dc <__flatcc_fb_gen_c_json_parser@@Base+0x24e0>
   1f640:	mov	r0, r4
   1f644:	add	r1, pc, r1
   1f648:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f64c:	ldr	r0, [r4, #220]	; 0xdc
   1f650:	add	r0, r0, #1
   1f654:	str	r0, [r4, #220]	; 0xdc
   1f658:	mov	r0, r4
   1f65c:	ldr	r1, [pc, #2684]	; 200e0 <__flatcc_fb_gen_c_json_parser@@Base+0x24e4>
   1f660:	add	r1, pc, r1
   1f664:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f668:	ldr	r0, [r4, #220]	; 0xdc
   1f66c:	cmp	r0, #0
   1f670:	beq	1ff0c <__flatcc_fb_gen_c_json_parser@@Base+0x2310>
   1f674:	sub	r0, r0, #1
   1f678:	str	r0, [r4, #220]	; 0xdc
   1f67c:	mov	r0, r4
   1f680:	ldr	r1, [pc, #2652]	; 200e4 <__flatcc_fb_gen_c_json_parser@@Base+0x24e8>
   1f684:	add	r1, pc, r1
   1f688:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f68c:	ldr	r1, [pc, #2644]	; 200e8 <__flatcc_fb_gen_c_json_parser@@Base+0x24ec>
   1f690:	mov	r0, r4
   1f694:	add	r1, pc, r1
   1f698:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f69c:	ldr	r1, [pc, #2632]	; 200ec <__flatcc_fb_gen_c_json_parser@@Base+0x24f0>
   1f6a0:	mov	r0, r4
   1f6a4:	add	r1, pc, r1
   1f6a8:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f6ac:	ldr	r1, [pc, #2620]	; 200f0 <__flatcc_fb_gen_c_json_parser@@Base+0x24f4>
   1f6b0:	mov	r0, r4
   1f6b4:	add	r1, pc, r1
   1f6b8:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f6bc:	ldr	r0, [r4, #220]	; 0xdc
   1f6c0:	cmp	r0, #0
   1f6c4:	beq	1ff2c <__flatcc_fb_gen_c_json_parser@@Base+0x2330>
   1f6c8:	sub	r0, r0, #1
   1f6cc:	str	r0, [r4, #220]	; 0xdc
   1f6d0:	mov	r0, r4
   1f6d4:	ldr	r1, [pc, #2584]	; 200f4 <__flatcc_fb_gen_c_json_parser@@Base+0x24f8>
   1f6d8:	add	r1, pc, r1
   1f6dc:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f6e0:	ldr	r1, [pc, #2576]	; 200f8 <__flatcc_fb_gen_c_json_parser@@Base+0x24fc>
   1f6e4:	mov	r0, r4
   1f6e8:	add	r1, pc, r1
   1f6ec:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f6f0:	ldr	r0, [r4, #212]	; 0xd4
   1f6f4:	ldr	r0, [r0, #140]	; 0x8c
   1f6f8:	cmp	r0, #0
   1f6fc:	beq	1f718 <__flatcc_fb_gen_c_json_parser@@Base+0x1b1c>
   1f700:	ldr	r3, [r4, #204]	; 0xcc
   1f704:	ldr	r0, [pc, #2544]	; 200fc <__flatcc_fb_gen_c_json_parser@@Base+0x2500>
   1f708:	mov	r1, #36	; 0x24
   1f70c:	mov	r2, #1
   1f710:	add	r0, pc, r0
   1f714:	bl	14850 <fwrite@plt>
   1f718:	ldr	r0, [r4, #208]	; 0xd0
   1f71c:	ldr	r2, [r0, #164]	; 0xa4
   1f720:	ldr	r1, [pc, #2520]	; 20100 <__flatcc_fb_gen_c_json_parser@@Base+0x2504>
   1f724:	mov	r0, r4
   1f728:	add	r1, pc, r1
   1f72c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f730:	mov	r0, #0
   1f734:	sub	sp, fp, #48	; 0x30
   1f738:	vpop	{d8-d9}
   1f73c:	add	sp, sp, #4
   1f740:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f744:	andeq	r0, r2, r6, asr pc
   1f748:	mov	r9, #0
   1f74c:	str	r9, [sp, #8]
   1f750:	b	1f790 <__flatcc_fb_gen_c_json_parser@@Base+0x1b94>
   1f754:	andeq	r4, r3, ip
   1f758:	andeq	r6, r3, r7, ror #22
   1f75c:	ldrdeq	r3, [r3], -r1
   1f760:	andeq	r3, r3, r2, ror #31
   1f764:	andeq	r0, r2, r6, lsr lr
   1f768:	andeq	r0, r2, sl, lsl #28
   1f76c:	andeq	r3, r3, r8, asr #23
   1f770:	muleq	r3, r5, r4
   1f774:			; <UNDEFINED> instruction: 0x000354b2
   1f778:	mov	r8, #0
   1f77c:	cmp	r9, #1
   1f780:	str	r8, [sp, #8]
   1f784:	blt	1f790 <__flatcc_fb_gen_c_json_parser@@Base+0x1b94>
   1f788:	cmp	r8, #0
   1f78c:	beq	1ff50 <__flatcc_fb_gen_c_json_parser@@Base+0x2354>
   1f790:	mov	r0, #4
   1f794:	str	r0, [sp, #24]
   1f798:	mov	r0, #0
   1f79c:	str	r0, [sp, #20]
   1f7a0:	ldr	r0, [pc, #2160]	; 20018 <__flatcc_fb_gen_c_json_parser@@Base+0x241c>
   1f7a4:	add	r0, pc, r0
   1f7a8:	str	r0, [sp, #16]
   1f7ac:	ldr	r0, [pc, #2152]	; 2001c <__flatcc_fb_gen_c_json_parser@@Base+0x2420>
   1f7b0:	add	r0, pc, r0
   1f7b4:	str	r0, [sp, #12]
   1f7b8:	ldr	r0, [r4, #208]	; 0xd0
   1f7bc:	ldr	r2, [r0, #160]	; 0xa0
   1f7c0:	ldr	r1, [pc, #2136]	; 20020 <__flatcc_fb_gen_c_json_parser@@Base+0x2424>
   1f7c4:	mov	r0, r4
   1f7c8:	add	r1, pc, r1
   1f7cc:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f7d0:	ldr	r0, [r4, #220]	; 0xdc
   1f7d4:	add	r0, r0, #2
   1f7d8:	str	r0, [r4, #220]	; 0xdc
   1f7dc:	mov	r0, r4
   1f7e0:	ldr	r1, [pc, #2108]	; 20024 <__flatcc_fb_gen_c_json_parser@@Base+0x2428>
   1f7e4:	add	r1, pc, r1
   1f7e8:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f7ec:	ldr	r0, [r4, #220]	; 0xdc
   1f7f0:	cmp	r0, #0
   1f7f4:	beq	1fec8 <__flatcc_fb_gen_c_json_parser@@Base+0x22cc>
   1f7f8:	subs	r1, r0, #1
   1f7fc:	str	r1, [r4, #220]	; 0xdc
   1f800:	beq	1fec8 <__flatcc_fb_gen_c_json_parser@@Base+0x22cc>
   1f804:	sub	r0, r0, #2
   1f808:	str	r0, [r4, #220]	; 0xdc
   1f80c:	mov	r0, r4
   1f810:	ldr	r1, [pc, #2064]	; 20028 <__flatcc_fb_gen_c_json_parser@@Base+0x242c>
   1f814:	add	r1, pc, r1
   1f818:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f81c:	ldr	r0, [r4, #220]	; 0xdc
   1f820:	cmp	r9, #0
   1f824:	add	r0, r0, #1
   1f828:	str	r0, [r4, #220]	; 0xdc
   1f82c:	beq	1f8f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1cf4>
   1f830:	ldr	r1, [pc, #2056]	; 20040 <__flatcc_fb_gen_c_json_parser@@Base+0x2444>
   1f834:	mov	r0, r4
   1f838:	add	r1, pc, r1
   1f83c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f840:	ldr	r1, [pc, #2044]	; 20044 <__flatcc_fb_gen_c_json_parser@@Base+0x2448>
   1f844:	mov	r0, r4
   1f848:	add	r1, pc, r1
   1f84c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f850:	ldr	r1, [pc, #2032]	; 20048 <__flatcc_fb_gen_c_json_parser@@Base+0x244c>
   1f854:	mov	r0, r4
   1f858:	add	r1, pc, r1
   1f85c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f860:	ldr	r1, [pc, #2020]	; 2004c <__flatcc_fb_gen_c_json_parser@@Base+0x2450>
   1f864:	mov	r0, r4
   1f868:	add	r1, pc, r1
   1f86c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f870:	ldr	r1, [pc, #2008]	; 20050 <__flatcc_fb_gen_c_json_parser@@Base+0x2454>
   1f874:	mov	r0, r4
   1f878:	add	r1, pc, r1
   1f87c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f880:	mov	r0, #0
   1f884:	sub	r3, r9, #1
   1f888:	add	r1, sp, #8
   1f88c:	mov	r2, #0
   1f890:	str	r0, [sp]
   1f894:	mov	r0, r4
   1f898:	bl	20e70 <__flatcc_fb_gen_c_json_parser@@Base+0x3274>
   1f89c:	ldr	r1, [pc, #1968]	; 20054 <__flatcc_fb_gen_c_json_parser@@Base+0x2458>
   1f8a0:	mov	r0, r4
   1f8a4:	add	r1, pc, r1
   1f8a8:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f8ac:	ldr	r0, [r4, #220]	; 0xdc
   1f8b0:	cmp	r0, #0
   1f8b4:	bne	1f91c <__flatcc_fb_gen_c_json_parser@@Base+0x1d20>
   1f8b8:	ldr	r0, [pc, #2500]	; 20284 <__flatcc_fb_gen_c_json_parser@@Base+0x2688>
   1f8bc:	ldr	r1, [pc, #2500]	; 20288 <__flatcc_fb_gen_c_json_parser@@Base+0x268c>
   1f8c0:	ldr	r3, [pc, #2500]	; 2028c <__flatcc_fb_gen_c_json_parser@@Base+0x2690>
   1f8c4:	movw	r2, #1219	; 0x4c3
   1f8c8:	add	r0, pc, r0
   1f8cc:	add	r1, pc, r1
   1f8d0:	add	r3, pc, r3
   1f8d4:	bl	1497c <__assert_fail@plt>
   1f8d8:	andeq	r4, r3, r8, ror #10
   1f8dc:	muleq	r3, r5, r5
   1f8e0:	ldrdeq	r4, [r3], -r6
   1f8e4:	andeq	r4, r3, r5, asr #32
   1f8e8:	andeq	r5, r3, sp, lsl #9
   1f8ec:	andeq	r4, r3, r8, asr #10
   1f8f0:	ldr	r1, [pc, #1844]	; 2002c <__flatcc_fb_gen_c_json_parser@@Base+0x2430>
   1f8f4:	mov	r0, r4
   1f8f8:	add	r1, pc, r1
   1f8fc:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f900:	ldr	r1, [pc, #1832]	; 20030 <__flatcc_fb_gen_c_json_parser@@Base+0x2434>
   1f904:	mov	r0, r4
   1f908:	add	r1, pc, r1
   1f90c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f910:	ldr	r0, [r4, #220]	; 0xdc
   1f914:	cmp	r0, #0
   1f918:	beq	1ffac <__flatcc_fb_gen_c_json_parser@@Base+0x23b0>
   1f91c:	sub	r0, r0, #1
   1f920:	str	r0, [r4, #220]	; 0xdc
   1f924:	mov	r0, r4
   1f928:	ldr	r1, [pc, #1832]	; 20058 <__flatcc_fb_gen_c_json_parser@@Base+0x245c>
   1f92c:	add	r1, pc, r1
   1f930:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f934:	ldr	r1, [pc, #1824]	; 2005c <__flatcc_fb_gen_c_json_parser@@Base+0x2460>
   1f938:	mov	r0, r4
   1f93c:	add	r1, pc, r1
   1f940:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   1f944:	ldr	r0, [sp, #8]
   1f948:	cmp	r0, #0
   1f94c:	beq	1f954 <__flatcc_fb_gen_c_json_parser@@Base+0x1d58>
   1f950:	bl	147fc <free@plt>
   1f954:	ldr	r0, [sp, #248]	; 0xf8
   1f958:	cmp	r0, #0
   1f95c:	beq	1f964 <__flatcc_fb_gen_c_json_parser@@Base+0x1d68>
   1f960:	bl	147fc <free@plt>
   1f964:	ldr	r0, [sp, #252]	; 0xfc
   1f968:	cmp	r0, #0
   1f96c:	bne	1f058 <__flatcc_fb_gen_c_json_parser@@Base+0x145c>
   1f970:	b	1f05c <__flatcc_fb_gen_c_json_parser@@Base+0x1460>
   1f974:	muleq	r2, r7, r0
   1f978:	andeq	r5, r3, r4, lsl #9
   1f97c:	andeq	r5, r3, fp, lsl #9
   1f980:	ldr	r0, [pc, #1640]	; 1fff0 <__flatcc_fb_gen_c_json_parser@@Base+0x23f4>
   1f984:	movw	r3, #1535	; 0x5ff
   1f988:	ldr	r0, [pc, r0]
   1f98c:	ldr	r0, [r0]
   1f990:	ldr	r1, [pc, #1628]	; 1fff4 <__flatcc_fb_gen_c_json_parser@@Base+0x23f8>
   1f994:	add	r1, pc, r1
   1f998:	str	r1, [sp]
   1f99c:	ldr	r1, [pc, #1620]	; 1fff8 <__flatcc_fb_gen_c_json_parser@@Base+0x23fc>
   1f9a0:	ldr	r4, [pc, #1620]	; 1fffc <__flatcc_fb_gen_c_json_parser@@Base+0x2400>
   1f9a4:	add	r4, pc, r4
   1f9a8:	add	r1, pc, r1
   1f9ac:	mov	r2, r4
   1f9b0:	bl	148bc <fprintf@plt>
   1f9b4:	ldr	r0, [pc, #1604]	; 20000 <__flatcc_fb_gen_c_json_parser@@Base+0x2404>
   1f9b8:	ldr	r3, [pc, #1604]	; 20004 <__flatcc_fb_gen_c_json_parser@@Base+0x2408>
   1f9bc:	mov	r1, r4
   1f9c0:	movw	r2, #1535	; 0x5ff
   1f9c4:	add	r0, pc, r0
   1f9c8:	add	r3, pc, r3
   1f9cc:	bl	1497c <__assert_fail@plt>
   1f9d0:			; <UNDEFINED> instruction: 0x000354bd
   1f9d4:	ldr	r0, [pc, #1544]	; 1ffe4 <__flatcc_fb_gen_c_json_parser@@Base+0x23e8>
   1f9d8:	ldr	r1, [pc, #1544]	; 1ffe8 <__flatcc_fb_gen_c_json_parser@@Base+0x23ec>
   1f9dc:	ldr	r3, [pc, #1544]	; 1ffec <__flatcc_fb_gen_c_json_parser@@Base+0x23f0>
   1f9e0:	movw	r2, #1532	; 0x5fc
   1f9e4:	add	r0, pc, r0
   1f9e8:	add	r1, pc, r1
   1f9ec:	add	r3, pc, r3
   1f9f0:	bl	1497c <__assert_fail@plt>
   1f9f4:	ldr	r0, [pc, #1848]	; 20134 <__flatcc_fb_gen_c_json_parser@@Base+0x2538>
   1f9f8:	movw	r3, #1522	; 0x5f2
   1f9fc:	ldr	r0, [pc, r0]
   1fa00:	ldr	r0, [r0]
   1fa04:	ldr	r1, [pc, #1836]	; 20138 <__flatcc_fb_gen_c_json_parser@@Base+0x253c>
   1fa08:	add	r1, pc, r1
   1fa0c:	str	r1, [sp]
   1fa10:	ldr	r1, [pc, #1828]	; 2013c <__flatcc_fb_gen_c_json_parser@@Base+0x2540>
   1fa14:	ldr	r4, [pc, #1828]	; 20140 <__flatcc_fb_gen_c_json_parser@@Base+0x2544>
   1fa18:	add	r4, pc, r4
   1fa1c:	add	r1, pc, r1
   1fa20:	mov	r2, r4
   1fa24:	bl	148bc <fprintf@plt>
   1fa28:	ldr	r0, [pc, #1812]	; 20144 <__flatcc_fb_gen_c_json_parser@@Base+0x2548>
   1fa2c:	ldr	r3, [pc, #1812]	; 20148 <__flatcc_fb_gen_c_json_parser@@Base+0x254c>
   1fa30:	mov	r1, r4
   1fa34:	movw	r2, #1522	; 0x5f2
   1fa38:	add	r0, pc, r0
   1fa3c:	add	r3, pc, r3
   1fa40:	bl	1497c <__assert_fail@plt>
   1fa44:	andeq	r5, r3, r4, lsl #8
   1fa48:	ldr	r0, [pc, #1416]	; 1ffd8 <__flatcc_fb_gen_c_json_parser@@Base+0x23dc>
   1fa4c:	ldr	r1, [pc, #1416]	; 1ffdc <__flatcc_fb_gen_c_json_parser@@Base+0x23e0>
   1fa50:	ldr	r3, [pc, #1416]	; 1ffe0 <__flatcc_fb_gen_c_json_parser@@Base+0x23e4>
   1fa54:	movw	r2, #1526	; 0x5f6
   1fa58:	add	r0, pc, r0
   1fa5c:	add	r1, pc, r1
   1fa60:	add	r3, pc, r3
   1fa64:	bl	1497c <__assert_fail@plt>
   1fa68:	ldr	r0, [pc, #1696]	; 20110 <__flatcc_fb_gen_c_json_parser@@Base+0x2514>
   1fa6c:	ldr	r1, [pc, #1696]	; 20114 <__flatcc_fb_gen_c_json_parser@@Base+0x2518>
   1fa70:	ldr	r3, [pc, #1696]	; 20118 <__flatcc_fb_gen_c_json_parser@@Base+0x251c>
   1fa74:	movw	r2, #1747	; 0x6d3
   1fa78:	add	r0, pc, r0
   1fa7c:	add	r1, pc, r1
   1fa80:	add	r3, pc, r3
   1fa84:	bl	1497c <__assert_fail@plt>
   1fa88:	andeq	r4, r3, r0, lsl sl
   1fa8c:	ldr	r0, [pc, #1336]	; 1ffcc <__flatcc_fb_gen_c_json_parser@@Base+0x23d0>
   1fa90:	ldr	r1, [pc, #1336]	; 1ffd0 <__flatcc_fb_gen_c_json_parser@@Base+0x23d4>
   1fa94:	ldr	r3, [pc, #1336]	; 1ffd4 <__flatcc_fb_gen_c_json_parser@@Base+0x23d8>
   1fa98:	movw	r2, #1731	; 0x6c3
   1fa9c:	add	r0, pc, r0
   1faa0:	add	r1, pc, r1
   1faa4:	add	r3, pc, r3
   1faa8:	bl	1497c <__assert_fail@plt>
   1faac:	andeq	r5, r3, sl, lsl r4
   1fab0:	andeq	r4, r3, r7, lsl #16
   1fab4:	ldr	r0, [pc, #1860]	; 20200 <__flatcc_fb_gen_c_json_parser@@Base+0x2604>
   1fab8:	ldr	r1, [pc, #1860]	; 20204 <__flatcc_fb_gen_c_json_parser@@Base+0x2608>
   1fabc:	ldr	r3, [pc, #1860]	; 20208 <__flatcc_fb_gen_c_json_parser@@Base+0x260c>
   1fac0:	movw	r2, #1390	; 0x56e
   1fac4:	add	r0, pc, r0
   1fac8:	add	r1, pc, r1
   1facc:	add	r3, pc, r3
   1fad0:	bl	1497c <__assert_fail@plt>
   1fad4:	andeq	r5, r3, r4, lsr #8
   1fad8:	andeq	r5, r3, r7, asr r4
   1fadc:	strdeq	r3, [r3], -sl
   1fae0:	ldr	r0, [pc, #1828]	; 2020c <__flatcc_fb_gen_c_json_parser@@Base+0x2610>
   1fae4:	mov	r3, #1392	; 0x570
   1fae8:	ldr	r0, [pc, r0]
   1faec:	ldr	r0, [r0]
   1faf0:	ldr	r1, [pc, #1816]	; 20210 <__flatcc_fb_gen_c_json_parser@@Base+0x2614>
   1faf4:	add	r1, pc, r1
   1faf8:	str	r1, [sp]
   1fafc:	ldr	r1, [pc, #1808]	; 20214 <__flatcc_fb_gen_c_json_parser@@Base+0x2618>
   1fb00:	ldr	r4, [pc, #1808]	; 20218 <__flatcc_fb_gen_c_json_parser@@Base+0x261c>
   1fb04:	add	r4, pc, r4
   1fb08:	add	r1, pc, r1
   1fb0c:	mov	r2, r4
   1fb10:	bl	148bc <fprintf@plt>
   1fb14:	ldr	r0, [pc, #1792]	; 2021c <__flatcc_fb_gen_c_json_parser@@Base+0x2620>
   1fb18:	ldr	r3, [pc, #1792]	; 20220 <__flatcc_fb_gen_c_json_parser@@Base+0x2624>
   1fb1c:	mov	r1, r4
   1fb20:	mov	r2, #1392	; 0x570
   1fb24:	add	r0, pc, r0
   1fb28:	add	r3, pc, r3
   1fb2c:	bl	1497c <__assert_fail@plt>
   1fb30:	andeq	r4, r3, r0, lsr #8
   1fb34:	ldr	r0, [pc, #1636]	; 201a0 <__flatcc_fb_gen_c_json_parser@@Base+0x25a4>
   1fb38:	ldr	r1, [pc, #1636]	; 201a4 <__flatcc_fb_gen_c_json_parser@@Base+0x25a8>
   1fb3c:	ldr	r3, [pc, #1636]	; 201a8 <__flatcc_fb_gen_c_json_parser@@Base+0x25ac>
   1fb40:	movw	r2, #1301	; 0x515
   1fb44:	add	r0, pc, r0
   1fb48:	add	r1, pc, r1
   1fb4c:	add	r3, pc, r3
   1fb50:	bl	1497c <__assert_fail@plt>
   1fb54:	ldrdeq	r3, [r3], -lr
   1fb58:	andeq	r0, r2, r6, lsl fp
   1fb5c:	andeq	r4, r3, sl, asr #31
   1fb60:	andeq	r6, r3, r3, asr #14
   1fb64:	ldr	r0, [pc, #1600]	; 201ac <__flatcc_fb_gen_c_json_parser@@Base+0x25b0>
   1fb68:	movw	r3, #1303	; 0x517
   1fb6c:	ldr	r0, [pc, r0]
   1fb70:	ldr	r0, [r0]
   1fb74:	ldr	r1, [pc, #1588]	; 201b0 <__flatcc_fb_gen_c_json_parser@@Base+0x25b4>
   1fb78:	add	r1, pc, r1
   1fb7c:	str	r1, [sp]
   1fb80:	ldr	r1, [pc, #1580]	; 201b4 <__flatcc_fb_gen_c_json_parser@@Base+0x25b8>
   1fb84:	ldr	r4, [pc, #1580]	; 201b8 <__flatcc_fb_gen_c_json_parser@@Base+0x25bc>
   1fb88:	add	r4, pc, r4
   1fb8c:	add	r1, pc, r1
   1fb90:	mov	r2, r4
   1fb94:	bl	148bc <fprintf@plt>
   1fb98:	ldr	r0, [pc, #1564]	; 201bc <__flatcc_fb_gen_c_json_parser@@Base+0x25c0>
   1fb9c:	ldr	r3, [pc, #1564]	; 201c0 <__flatcc_fb_gen_c_json_parser@@Base+0x25c4>
   1fba0:	mov	r1, r4
   1fba4:	movw	r2, #1303	; 0x517
   1fba8:	add	r0, pc, r0
   1fbac:	add	r3, pc, r3
   1fbb0:	bl	1497c <__assert_fail@plt>
   1fbb4:	ldrdeq	r5, [r3], -r5	; <UNPREDICTABLE>
   1fbb8:	ldr	r0, [pc, #1384]	; 20128 <__flatcc_fb_gen_c_json_parser@@Base+0x252c>
   1fbbc:	ldr	r1, [pc, #1384]	; 2012c <__flatcc_fb_gen_c_json_parser@@Base+0x2530>
   1fbc0:	ldr	r3, [pc, #1384]	; 20130 <__flatcc_fb_gen_c_json_parser@@Base+0x2534>
   1fbc4:	movw	r2, #1503	; 0x5df
   1fbc8:	add	r0, pc, r0
   1fbcc:	add	r1, pc, r1
   1fbd0:	add	r3, pc, r3
   1fbd4:	bl	1497c <__assert_fail@plt>
   1fbd8:	ldr	r0, [pc, #1388]	; 2014c <__flatcc_fb_gen_c_json_parser@@Base+0x2550>
   1fbdc:	ldr	r1, [pc, #1388]	; 20150 <__flatcc_fb_gen_c_json_parser@@Base+0x2554>
   1fbe0:	ldr	r3, [pc, #1388]	; 20154 <__flatcc_fb_gen_c_json_parser@@Base+0x2558>
   1fbe4:	movw	r2, #1543	; 0x607
   1fbe8:	add	r0, pc, r0
   1fbec:	add	r1, pc, r1
   1fbf0:	add	r3, pc, r3
   1fbf4:	bl	1497c <__assert_fail@plt>
   1fbf8:	ldr	r0, [pc, #1368]	; 20158 <__flatcc_fb_gen_c_json_parser@@Base+0x255c>
   1fbfc:	ldr	r1, [pc, #1368]	; 2015c <__flatcc_fb_gen_c_json_parser@@Base+0x2560>
   1fc00:	ldr	r3, [pc, #1368]	; 20160 <__flatcc_fb_gen_c_json_parser@@Base+0x2564>
   1fc04:	movw	r2, #1545	; 0x609
   1fc08:	add	r0, pc, r0
   1fc0c:	add	r1, pc, r1
   1fc10:	add	r3, pc, r3
   1fc14:	bl	1497c <__assert_fail@plt>
   1fc18:	ldr	r0, [pc, #1348]	; 20164 <__flatcc_fb_gen_c_json_parser@@Base+0x2568>
   1fc1c:	ldr	r1, [pc, #1348]	; 20168 <__flatcc_fb_gen_c_json_parser@@Base+0x256c>
   1fc20:	ldr	r3, [pc, #1348]	; 2016c <__flatcc_fb_gen_c_json_parser@@Base+0x2570>
   1fc24:	movw	r2, #1546	; 0x60a
   1fc28:	add	r0, pc, r0
   1fc2c:	add	r1, pc, r1
   1fc30:	add	r3, pc, r3
   1fc34:	bl	1497c <__assert_fail@plt>
   1fc38:	ldr	r0, [pc, #1328]	; 20170 <__flatcc_fb_gen_c_json_parser@@Base+0x2574>
   1fc3c:	ldr	r1, [pc, #1328]	; 20174 <__flatcc_fb_gen_c_json_parser@@Base+0x2578>
   1fc40:	ldr	r3, [pc, #1328]	; 20178 <__flatcc_fb_gen_c_json_parser@@Base+0x257c>
   1fc44:	movw	r2, #1550	; 0x60e
   1fc48:	add	r0, pc, r0
   1fc4c:	add	r1, pc, r1
   1fc50:	add	r3, pc, r3
   1fc54:	bl	1497c <__assert_fail@plt>
   1fc58:	ldr	r0, [pc, #1308]	; 2017c <__flatcc_fb_gen_c_json_parser@@Base+0x2580>
   1fc5c:	ldr	r1, [pc, #1308]	; 20180 <__flatcc_fb_gen_c_json_parser@@Base+0x2584>
   1fc60:	ldr	r3, [pc, #1308]	; 20184 <__flatcc_fb_gen_c_json_parser@@Base+0x2588>
   1fc64:	mov	r2, #1552	; 0x610
   1fc68:	add	r0, pc, r0
   1fc6c:	add	r1, pc, r1
   1fc70:	add	r3, pc, r3
   1fc74:	bl	1497c <__assert_fail@plt>
   1fc78:	andeq	r4, r3, r0, lsl r2
   1fc7c:	andeq	r4, r3, r4, lsl r2
   1fc80:	ldr	r0, [pc, #1280]	; 20188 <__flatcc_fb_gen_c_json_parser@@Base+0x258c>
   1fc84:	ldr	r1, [pc, #1280]	; 2018c <__flatcc_fb_gen_c_json_parser@@Base+0x2590>
   1fc88:	ldr	r3, [pc, #1280]	; 20190 <__flatcc_fb_gen_c_json_parser@@Base+0x2594>
   1fc8c:	movw	r2, #1582	; 0x62e
   1fc90:	add	r0, pc, r0
   1fc94:	add	r1, pc, r1
   1fc98:	add	r3, pc, r3
   1fc9c:	bl	1497c <__assert_fail@plt>
   1fca0:	andeq	r4, r3, r4, ror r2
   1fca4:	ldr	r0, [pc, #1256]	; 20194 <__flatcc_fb_gen_c_json_parser@@Base+0x2598>
   1fca8:	ldr	r1, [pc, #1256]	; 20198 <__flatcc_fb_gen_c_json_parser@@Base+0x259c>
   1fcac:	ldr	r3, [pc, #1256]	; 2019c <__flatcc_fb_gen_c_json_parser@@Base+0x25a0>
   1fcb0:	movw	r2, #1583	; 0x62f
   1fcb4:	add	r0, pc, r0
   1fcb8:	add	r1, pc, r1
   1fcbc:	add	r3, pc, r3
   1fcc0:	bl	1497c <__assert_fail@plt>
   1fcc4:	andeq	r3, r3, sl, lsr sl
   1fcc8:	ldr	r0, [pc, #1364]	; 20224 <__flatcc_fb_gen_c_json_parser@@Base+0x2628>
   1fccc:	ldr	r1, [pc, #1364]	; 20228 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1fcd0:	ldr	r3, [pc, #1364]	; 2022c <__flatcc_fb_gen_c_json_parser@@Base+0x2630>
   1fcd4:	movw	r2, #1438	; 0x59e
   1fcd8:	add	r0, pc, r0
   1fcdc:	add	r1, pc, r1
   1fce0:	add	r3, pc, r3
   1fce4:	bl	1497c <__assert_fail@plt>
   1fce8:	andeq	r4, r3, r8, asr r2
   1fcec:	ldr	r0, [pc, #1364]	; 20248 <__flatcc_fb_gen_c_json_parser@@Base+0x264c>
   1fcf0:	ldr	r1, [pc, #1364]	; 2024c <__flatcc_fb_gen_c_json_parser@@Base+0x2650>
   1fcf4:	ldr	r3, [pc, #1364]	; 20250 <__flatcc_fb_gen_c_json_parser@@Base+0x2654>
   1fcf8:	movw	r2, #1473	; 0x5c1
   1fcfc:	add	r0, pc, r0
   1fd00:	add	r1, pc, r1
   1fd04:	add	r3, pc, r3
   1fd08:	bl	1497c <__assert_fail@plt>
   1fd0c:	andeq	r3, r3, r6, lsl sl
   1fd10:	ldr	r0, [pc, #1340]	; 20254 <__flatcc_fb_gen_c_json_parser@@Base+0x2658>
   1fd14:	ldr	r1, [pc, #1340]	; 20258 <__flatcc_fb_gen_c_json_parser@@Base+0x265c>
   1fd18:	ldr	r3, [pc, #1340]	; 2025c <__flatcc_fb_gen_c_json_parser@@Base+0x2660>
   1fd1c:	movw	r2, #1479	; 0x5c7
   1fd20:	add	r0, pc, r0
   1fd24:	add	r1, pc, r1
   1fd28:	add	r3, pc, r3
   1fd2c:	bl	1497c <__assert_fail@plt>
   1fd30:	andeq	r0, r2, lr, asr #18
   1fd34:	ldr	r0, [pc, #1160]	; 201c4 <__flatcc_fb_gen_c_json_parser@@Base+0x25c8>
   1fd38:	ldr	r1, [pc, #1160]	; 201c8 <__flatcc_fb_gen_c_json_parser@@Base+0x25cc>
   1fd3c:	ldr	r3, [pc, #1160]	; 201cc <__flatcc_fb_gen_c_json_parser@@Base+0x25d0>
   1fd40:	movw	r2, #1334	; 0x536
   1fd44:	add	r0, pc, r0
   1fd48:	add	r1, pc, r1
   1fd4c:	add	r3, pc, r3
   1fd50:	bl	1497c <__assert_fail@plt>
   1fd54:	ldr	r0, [pc, #1140]	; 201d0 <__flatcc_fb_gen_c_json_parser@@Base+0x25d4>
   1fd58:	ldr	r1, [pc, #1140]	; 201d4 <__flatcc_fb_gen_c_json_parser@@Base+0x25d8>
   1fd5c:	ldr	r3, [pc, #1140]	; 201d8 <__flatcc_fb_gen_c_json_parser@@Base+0x25dc>
   1fd60:	movw	r2, #1343	; 0x53f
   1fd64:	add	r0, pc, r0
   1fd68:	add	r1, pc, r1
   1fd6c:	add	r3, pc, r3
   1fd70:	bl	1497c <__assert_fail@plt>
   1fd74:	ldr	r0, [pc, #1120]	; 201dc <__flatcc_fb_gen_c_json_parser@@Base+0x25e0>
   1fd78:	ldr	r1, [pc, #1120]	; 201e0 <__flatcc_fb_gen_c_json_parser@@Base+0x25e4>
   1fd7c:	ldr	r3, [pc, #1120]	; 201e4 <__flatcc_fb_gen_c_json_parser@@Base+0x25e8>
   1fd80:	movw	r2, #1353	; 0x549
   1fd84:	add	r0, pc, r0
   1fd88:	add	r1, pc, r1
   1fd8c:	add	r3, pc, r3
   1fd90:	bl	1497c <__assert_fail@plt>
   1fd94:	andeq	r4, r3, sl, lsr #25
   1fd98:	andeq	r6, r3, r3, asr #10
   1fd9c:	ldr	r0, [pc, #1092]	; 201e8 <__flatcc_fb_gen_c_json_parser@@Base+0x25ec>
   1fda0:	ldr	r1, [pc, #1092]	; 201ec <__flatcc_fb_gen_c_json_parser@@Base+0x25f0>
   1fda4:	ldr	r3, [pc, #1092]	; 201f0 <__flatcc_fb_gen_c_json_parser@@Base+0x25f4>
   1fda8:	movw	r2, #1370	; 0x55a
   1fdac:	add	r0, pc, r0
   1fdb0:	add	r1, pc, r1
   1fdb4:	add	r3, pc, r3
   1fdb8:	bl	1497c <__assert_fail@plt>
   1fdbc:	andeq	r4, r3, r4, ror r0
   1fdc0:			; <UNDEFINED> instruction: 0x000208be
   1fdc4:	ldr	r0, [pc, #1064]	; 201f4 <__flatcc_fb_gen_c_json_parser@@Base+0x25f8>
   1fdc8:	ldr	r1, [pc, #1064]	; 201f8 <__flatcc_fb_gen_c_json_parser@@Base+0x25fc>
   1fdcc:	ldr	r3, [pc, #1064]	; 201fc <__flatcc_fb_gen_c_json_parser@@Base+0x2600>
   1fdd0:	mov	r2, #1376	; 0x560
   1fdd4:	add	r0, pc, r0
   1fdd8:	add	r1, pc, r1
   1fddc:	add	r3, pc, r3
   1fde0:	bl	1497c <__assert_fail@plt>
   1fde4:	andeq	r3, r3, r8, ror r6
   1fde8:	ldr	r0, [pc, #812]	; 2011c <__flatcc_fb_gen_c_json_parser@@Base+0x2520>
   1fdec:	ldr	r1, [pc, #812]	; 20120 <__flatcc_fb_gen_c_json_parser@@Base+0x2524>
   1fdf0:	ldr	r3, [pc, #812]	; 20124 <__flatcc_fb_gen_c_json_parser@@Base+0x2528>
   1fdf4:	movw	r2, #1755	; 0x6db
   1fdf8:	add	r0, pc, r0
   1fdfc:	add	r1, pc, r1
   1fe00:	add	r3, pc, r3
   1fe04:	bl	1497c <__assert_fail@plt>
   1fe08:			; <UNDEFINED> instruction: 0x00034cbd
   1fe0c:	andeq	r4, r3, r3, ror #14
   1fe10:	ldr	r0, [pc, #1048]	; 20230 <__flatcc_fb_gen_c_json_parser@@Base+0x2634>
   1fe14:	ldr	r1, [pc, #1048]	; 20234 <__flatcc_fb_gen_c_json_parser@@Base+0x2638>
   1fe18:	ldr	r3, [pc, #1048]	; 20238 <__flatcc_fb_gen_c_json_parser@@Base+0x263c>
   1fe1c:	movw	r2, #1458	; 0x5b2
   1fe20:	add	r0, pc, r0
   1fe24:	add	r1, pc, r1
   1fe28:	add	r3, pc, r3
   1fe2c:	bl	1497c <__assert_fail@plt>
   1fe30:	andeq	r4, r3, r5, ror #25
   1fe34:	ldrdeq	r3, [r3], -r2
   1fe38:	ldr	r0, [pc, #1020]	; 2023c <__flatcc_fb_gen_c_json_parser@@Base+0x2640>
   1fe3c:	ldr	r1, [pc, #1020]	; 20240 <__flatcc_fb_gen_c_json_parser@@Base+0x2644>
   1fe40:	ldr	r3, [pc, #1020]	; 20244 <__flatcc_fb_gen_c_json_parser@@Base+0x2648>
   1fe44:	movw	r2, #1461	; 0x5b5
   1fe48:	add	r0, pc, r0
   1fe4c:	add	r1, pc, r1
   1fe50:	add	r3, pc, r3
   1fe54:	bl	1497c <__assert_fail@plt>
   1fe58:	strdeq	r4, [r3], -r8
   1fe5c:	ldr	r0, [pc, #672]	; 20104 <__flatcc_fb_gen_c_json_parser@@Base+0x2508>
   1fe60:	ldr	r1, [pc, #672]	; 20108 <__flatcc_fb_gen_c_json_parser@@Base+0x250c>
   1fe64:	ldr	r3, [pc, #672]	; 2010c <__flatcc_fb_gen_c_json_parser@@Base+0x2510>
   1fe68:	movw	r2, #1716	; 0x6b4
   1fe6c:	add	r0, pc, r0
   1fe70:	add	r1, pc, r1
   1fe74:	add	r3, pc, r3
   1fe78:	bl	1497c <__assert_fail@plt>
   1fe7c:			; <UNDEFINED> instruction: 0x000338b6
   1fe80:	ldr	r0, [pc, #1032]	; 20290 <__flatcc_fb_gen_c_json_parser@@Base+0x2694>
   1fe84:	ldr	r1, [pc, #1032]	; 20294 <__flatcc_fb_gen_c_json_parser@@Base+0x2698>
   1fe88:	ldr	r3, [pc, #1032]	; 20298 <__flatcc_fb_gen_c_json_parser@@Base+0x269c>
   1fe8c:	movw	r2, #1610	; 0x64a
   1fe90:	add	r0, pc, r0
   1fe94:	add	r1, pc, r1
   1fe98:	add	r3, pc, r3
   1fe9c:	bl	1497c <__assert_fail@plt>
   1fea0:	andeq	r2, r2, r7, ror fp
   1fea4:	andeq	r4, r3, r6, lsr #25
   1fea8:	ldr	r0, [pc, #1016]	; 202a8 <__flatcc_fb_gen_c_json_parser@@Base+0x26ac>
   1feac:	ldr	r1, [pc, #1016]	; 202ac <__flatcc_fb_gen_c_json_parser@@Base+0x26b0>
   1feb0:	ldr	r3, [pc, #1016]	; 202b0 <__flatcc_fb_gen_c_json_parser@@Base+0x26b4>
   1feb4:	movw	r2, #1645	; 0x66d
   1feb8:	add	r0, pc, r0
   1febc:	add	r1, pc, r1
   1fec0:	add	r3, pc, r3
   1fec4:	bl	1497c <__assert_fail@plt>
   1fec8:	ldr	r0, [pc, #936]	; 20278 <__flatcc_fb_gen_c_json_parser@@Base+0x267c>
   1fecc:	ldr	r1, [pc, #936]	; 2027c <__flatcc_fb_gen_c_json_parser@@Base+0x2680>
   1fed0:	ldr	r3, [pc, #936]	; 20280 <__flatcc_fb_gen_c_json_parser@@Base+0x2684>
   1fed4:	movw	r2, #1205	; 0x4b5
   1fed8:	add	r0, pc, r0
   1fedc:	add	r1, pc, r1
   1fee0:	add	r3, pc, r3
   1fee4:	bl	1497c <__assert_fail@plt>
   1fee8:	andeq	r4, r3, lr, lsl #26
   1feec:	ldr	r0, [pc, #936]	; 2029c <__flatcc_fb_gen_c_json_parser@@Base+0x26a0>
   1fef0:	ldr	r1, [pc, #936]	; 202a0 <__flatcc_fb_gen_c_json_parser@@Base+0x26a4>
   1fef4:	ldr	r3, [pc, #936]	; 202a4 <__flatcc_fb_gen_c_json_parser@@Base+0x26a8>
   1fef8:	movw	r2, #1626	; 0x65a
   1fefc:	add	r0, pc, r0
   1ff00:	add	r1, pc, r1
   1ff04:	add	r3, pc, r3
   1ff08:	bl	1497c <__assert_fail@plt>
   1ff0c:	ldr	r0, [pc, #928]	; 202b4 <__flatcc_fb_gen_c_json_parser@@Base+0x26b8>
   1ff10:	ldr	r1, [pc, #928]	; 202b8 <__flatcc_fb_gen_c_json_parser@@Base+0x26bc>
   1ff14:	ldr	r3, [pc, #928]	; 202bc <__flatcc_fb_gen_c_json_parser@@Base+0x26c0>
   1ff18:	movw	r2, #1661	; 0x67d
   1ff1c:	add	r0, pc, r0
   1ff20:	add	r1, pc, r1
   1ff24:	add	r3, pc, r3
   1ff28:	bl	1497c <__assert_fail@plt>
   1ff2c:	ldr	r0, [pc, #908]	; 202c0 <__flatcc_fb_gen_c_json_parser@@Base+0x26c4>
   1ff30:	ldr	r1, [pc, #908]	; 202c4 <__flatcc_fb_gen_c_json_parser@@Base+0x26c8>
   1ff34:	ldr	r3, [pc, #908]	; 202c8 <__flatcc_fb_gen_c_json_parser@@Base+0x26cc>
   1ff38:	movw	r2, #1665	; 0x681
   1ff3c:	add	r0, pc, r0
   1ff40:	add	r1, pc, r1
   1ff44:	add	r3, pc, r3
   1ff48:	bl	1497c <__assert_fail@plt>
   1ff4c:	andeq	r1, r0, r4, asr r8
   1ff50:	add	r0, sp, #232	; 0xe8
   1ff54:	bl	23544 <__flatcc_fb_gen_c_json_parser@@Base+0x5948>
   1ff58:	ldr	r0, [pc, #768]	; 20260 <__flatcc_fb_gen_c_json_parser@@Base+0x2664>
   1ff5c:	movw	r3, #1194	; 0x4aa
   1ff60:	ldr	r0, [pc, r0]
   1ff64:	ldr	r0, [r0]
   1ff68:	ldr	r1, [pc, #756]	; 20264 <__flatcc_fb_gen_c_json_parser@@Base+0x2668>
   1ff6c:	add	r1, pc, r1
   1ff70:	str	r1, [sp]
   1ff74:	ldr	r1, [pc, #748]	; 20268 <__flatcc_fb_gen_c_json_parser@@Base+0x266c>
   1ff78:	ldr	r4, [pc, #748]	; 2026c <__flatcc_fb_gen_c_json_parser@@Base+0x2670>
   1ff7c:	add	r4, pc, r4
   1ff80:	add	r1, pc, r1
   1ff84:	mov	r2, r4
   1ff88:	bl	148bc <fprintf@plt>
   1ff8c:	ldr	r0, [pc, #732]	; 20270 <__flatcc_fb_gen_c_json_parser@@Base+0x2674>
   1ff90:	ldr	r3, [pc, #732]	; 20274 <__flatcc_fb_gen_c_json_parser@@Base+0x2678>
   1ff94:	mov	r1, r4
   1ff98:	movw	r2, #1194	; 0x4aa
   1ff9c:	add	r0, pc, r0
   1ffa0:	add	r3, pc, r3
   1ffa4:	bl	1497c <__assert_fail@plt>
   1ffa8:	andeq	r4, r0, r0, ror #11
   1ffac:	ldr	r0, [pc, #128]	; 20034 <__flatcc_fb_gen_c_json_parser@@Base+0x2438>
   1ffb0:	ldr	r1, [pc, #128]	; 20038 <__flatcc_fb_gen_c_json_parser@@Base+0x243c>
   1ffb4:	ldr	r3, [pc, #128]	; 2003c <__flatcc_fb_gen_c_json_parser@@Base+0x2440>
   1ffb8:	movw	r2, #1210	; 0x4ba
   1ffbc:	add	r0, pc, r0
   1ffc0:	add	r1, pc, r1
   1ffc4:	add	r3, pc, r3
   1ffc8:	bl	1497c <__assert_fail@plt>
   1ffcc:	andeq	r2, r3, r3, ror #9
   1ffd0:	andeq	r2, r3, fp, ror #9
   1ffd4:	andeq	r2, r3, r3, asr r5
   1ffd8:	andeq	r2, r3, r7, lsr #10
   1ffdc:	andeq	r2, r3, pc, lsr #10
   1ffe0:	andeq	r2, r3, fp, ror #20
   1ffe4:	muleq	r3, fp, r5
   1ffe8:	andeq	r2, r3, r3, lsr #11
   1ffec:	ldrdeq	r2, [r3], -pc	; <UNPREDICTABLE>
   1fff0:	andeq	fp, r4, r4, lsl r7
   1fff4:	andeq	r2, r3, r6, ror #24
   1fff8:	ldrdeq	pc, [r1], -lr
   1fffc:	andeq	r2, r3, r7, ror #11
   20000:	andeq	r0, r3, sl, lsl #21
   20004:	andeq	r2, r3, r3, lsl #22
   20008:	andeq	r4, r0, ip, ror #4
   2000c:	andeq	r4, r0, ip, lsr r4
   20010:	muleq	r0, ip, r3
   20014:	andeq	r2, r0, r4, lsl #17
   20018:	andeq	r3, r0, ip, ror #25
   2001c:			; <UNDEFINED> instruction: 0x00003bb4
   20020:	andeq	r2, r3, sp, lsr fp
   20024:	andeq	r4, r3, r2, asr r8
   20028:	ldrdeq	r5, [r3], -pc	; <UNPREDICTABLE>
   2002c:	strdeq	r4, [r3], -r1
   20030:	andeq	r3, r3, r1, lsl r0
   20034:	andeq	r1, r3, r3, asr #31
   20038:	andeq	r1, r3, fp, asr #31
   2003c:	strdeq	r4, [r3], -sl
   20040:	strdeq	r3, [r3], -lr
   20044:	andeq	r3, r3, fp, lsl #2
   20048:	andeq	r3, r3, sp, lsl #2
   2004c:	andeq	pc, r1, r6, lsr lr	; <UNPREDICTABLE>
   20050:	strdeq	r3, [r3], -r9
   20054:	andeq	r2, r3, r2, ror lr
   20058:	andeq	r2, r2, fp, ror #1
   2005c:	andeq	pc, r1, r2, ror #26
   20060:	andeq	r2, r3, r6, asr #28
   20064:	andeq	r5, r3, r2, asr #2
   20068:	andeq	r6, r3, r3, ror #3
   2006c:	andeq	r5, r3, r0, ror #2
   20070:	andeq	r5, r3, sp, ror #2
   20074:	andeq	r0, r2, r2, asr r5
   20078:	andeq	r5, r3, r8, ror #2
   2007c:	andeq	r5, r3, r3, ror r1
   20080:	andeq	r5, r3, sl, lsl #3
   20084:	andeq	r4, r3, pc, lsr #28
   20088:	andeq	r4, r3, r3, asr lr
   2008c:	andeq	r4, r3, r7, ror lr
   20090:	andeq	r4, r3, sp, ror #28
   20094:	andeq	r2, r2, fp, lsl #9
   20098:	andeq	r4, r3, ip, asr #28
   2009c:	andeq	r4, r3, r0, ror lr
   200a0:	andeq	r3, r3, r3, asr #4
   200a4:	muleq	r3, pc, r9	; <UNPREDICTABLE>
   200a8:	andeq	r2, r3, r7, lsr #19
   200ac:	andeq	r4, r3, r5, ror #24
   200b0:	andeq	r2, r3, sl, lsl #26
   200b4:	andeq	r5, r3, r6
   200b8:	andeq	r6, r3, r7, lsr #1
   200bc:	andeq	r5, r3, r8, lsl #4
   200c0:	andeq	r5, r3, r1, lsr r0
   200c4:	andeq	r0, r2, r6, lsl r4
   200c8:	strdeq	r5, [r3], -r3
   200cc:	andeq	r5, r3, r7, lsr r0
   200d0:	andeq	r5, r3, lr, asr #32
   200d4:	andeq	r4, r3, r7, lsr sp
   200d8:	andeq	r4, r3, r0, ror lr
   200dc:	andeq	r4, r3, pc, ror sp
   200e0:	andeq	r4, r3, r5, ror sp
   200e4:	muleq	r2, r3, r3
   200e8:	andeq	r4, r3, r4, asr sp
   200ec:	andeq	r4, r3, r8, ror sp
   200f0:	andeq	r3, r3, fp, asr #2
   200f4:	andeq	r2, r2, pc, lsr r3
   200f8:			; <UNDEFINED> instruction: 0x0001ffb6
   200fc:	andeq	r5, r2, sl, lsr #26
   20100:			; <UNDEFINED> instruction: 0x00034db7
   20104:	andeq	r2, r3, r3, lsl r1
   20108:	andeq	r2, r3, fp, lsl r1
   2010c:	andeq	r2, r3, r3, lsl #3
   20110:	andeq	r2, r3, r7, lsl #10
   20114:	andeq	r2, r3, pc, lsl #10
   20118:	andeq	r2, r3, r7, ror r5
   2011c:	andeq	r2, r3, r7, lsl #3
   20120:	andeq	r2, r3, pc, lsl #3
   20124:	strdeq	r2, [r3], -r7
   20128:			; <UNDEFINED> instruction: 0x000323b7
   2012c:			; <UNDEFINED> instruction: 0x000323bf
   20130:	strdeq	r2, [r3], -fp
   20134:	andeq	fp, r4, r0, lsr #13
   20138:	andeq	r2, r3, r6, ror fp
   2013c:	andeq	pc, r1, sl, ror #22
   20140:	andeq	r2, r3, r3, ror r5
   20144:	andeq	r0, r3, r6, lsl sl
   20148:	andeq	r2, r3, pc, lsl #21
   2014c:	muleq	r3, r7, r3
   20150:	muleq	r3, pc, r3	; <UNPREDICTABLE>
   20154:	ldrdeq	r2, [r3], -fp
   20158:	andeq	r2, r3, r7, ror r3
   2015c:	andeq	r2, r3, pc, ror r3
   20160:			; <UNDEFINED> instruction: 0x000328bb
   20164:	andeq	r2, r3, r7, asr r3
   20168:	andeq	r2, r3, pc, asr r3
   2016c:	muleq	r3, fp, r8
   20170:	andeq	r2, r3, r7, lsr r3
   20174:	andeq	r2, r3, pc, lsr r3
   20178:	andeq	r2, r3, fp, ror r8
   2017c:	andeq	r2, r3, r7, lsl r3
   20180:	andeq	r2, r3, pc, lsl r3
   20184:	andeq	r2, r3, fp, asr r8
   20188:	andeq	r2, r3, pc, ror #5
   2018c:	strdeq	r2, [r3], -r7
   20190:	andeq	r2, r3, r1, ror fp
   20194:	andeq	r2, r3, fp, asr #5
   20198:	ldrdeq	r2, [r3], -r3
   2019c:	andeq	r2, r3, sp, asr #22
   201a0:	andeq	r6, r2, r6, ror r3
   201a4:	andeq	r2, r3, r3, asr #8
   201a8:	andeq	r3, r3, r3, lsl r2
   201ac:	andeq	fp, r4, r0, lsr r5
   201b0:	andeq	r2, r3, r9, lsl #26
   201b4:	strdeq	pc, [r1], -sl
   201b8:	andeq	r2, r3, r3, lsl #8
   201bc:	andeq	r0, r3, r6, lsr #17
   201c0:			; <UNDEFINED> instruction: 0x000331b3
   201c4:	andeq	r2, r3, fp, lsr r2
   201c8:	andeq	r2, r3, r3, asr #4
   201cc:	andeq	r3, r3, r3, lsl r0
   201d0:	andeq	r2, r3, fp, lsl r2
   201d4:	andeq	r2, r3, r3, lsr #4
   201d8:	strdeq	r2, [r3], -r3
   201dc:	andeq	r6, r2, r6, lsr r1
   201e0:	andeq	r2, r3, r3, lsl #4
   201e4:	andeq	r3, r3, r3, lsl #25
   201e8:	ldrdeq	r2, [r3], -r3
   201ec:	ldrdeq	r2, [r3], -fp
   201f0:	andeq	r3, r3, fp, asr ip
   201f4:	andeq	r2, r3, fp, lsr #3
   201f8:			; <UNDEFINED> instruction: 0x000321b3
   201fc:	andeq	r3, r3, r3, lsr ip
   20200:	andeq	r5, r2, sl, lsl sp
   20204:	andeq	r2, r3, r3, asr #9
   20208:	muleq	r3, r3, r1
   2020c:			; <UNDEFINED> instruction: 0x0004b5b4
   20210:	andeq	r2, r3, sp, lsl #27
   20214:	andeq	pc, r1, lr, ror sl	; <UNPREDICTABLE>
   20218:	andeq	r2, r3, r7, lsl #9
   2021c:	andeq	r0, r3, sl, lsr #18
   20220:	andeq	r4, r3, r7, lsr r1
   20224:	andeq	r2, r3, r7, lsr #5
   20228:	andeq	r2, r3, pc, lsr #5
   2022c:	andeq	r3, r3, pc, ror pc
   20230:	andeq	r2, r3, pc, asr r1
   20234:	andeq	r2, r3, r7, ror #2
   20238:	andeq	r3, r3, r7, lsr lr
   2023c:	andeq	r2, r3, r7, lsr r1
   20240:	andeq	r2, r3, pc, lsr r1
   20244:	andeq	r3, r3, pc, lsl #28
   20248:	andeq	r2, r3, r3, lsl #5
   2024c:	andeq	r2, r3, fp, lsl #5
   20250:	andeq	r3, r3, fp, asr pc
   20254:	andeq	r2, r3, pc, asr r2
   20258:	andeq	r2, r3, r7, ror #4
   2025c:	andeq	r3, r3, r7, lsr pc
   20260:	andeq	fp, r4, ip, lsr r1
   20264:	andeq	r2, r3, r5, lsl r9
   20268:	andeq	pc, r1, r6, lsl #12
   2026c:	andeq	r2, r3, pc
   20270:			; <UNDEFINED> instruction: 0x000304b2
   20274:	andeq	r4, r3, lr, lsl r2
   20278:	andeq	r2, r3, r7, lsr #1
   2027c:	andeq	r2, r3, pc, lsr #1
   20280:	ldrdeq	r4, [r3], -lr
   20284:			; <UNDEFINED> instruction: 0x000326b7
   20288:			; <UNDEFINED> instruction: 0x000326bf
   2028c:	andeq	r4, r3, lr, ror #17
   20290:	andeq	r2, r3, pc, ror #1
   20294:	strdeq	r2, [r3], -r7
   20298:			; <UNDEFINED> instruction: 0x000343b5
   2029c:	andeq	r2, r3, r3, lsl #1
   202a0:	andeq	r2, r3, fp, lsl #1
   202a4:	andeq	r4, r3, r9, asr #6
   202a8:	andeq	r2, r3, r7, asr #1
   202ac:	andeq	r2, r3, pc, asr #1
   202b0:	andeq	r4, r3, r0, ror r5
   202b4:	andeq	r2, r3, r3, rrx
   202b8:	andeq	r2, r3, fp, rrx
   202bc:	andeq	r4, r3, ip, lsl #10
   202c0:	andeq	r2, r3, r3, asr #32
   202c4:	andeq	r2, r3, fp, asr #32
   202c8:	andeq	r4, r3, ip, ror #9
   202cc:	sub	sp, sp, #8
   202d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   202d4:	add	fp, sp, #28
   202d8:	sub	sp, sp, #4
   202dc:	str	r2, [fp, #8]
   202e0:	str	r3, [fp, #12]
   202e4:	mov	r4, r0
   202e8:	mov	r8, r1
   202ec:	ldr	r0, [r0, #212]	; 0xd4
   202f0:	ldr	r5, [r4, #220]	; 0xdc
   202f4:	ldr	r6, [r0, #176]	; 0xb0
   202f8:	ldr	r0, [pc, #200]	; 203c8 <__flatcc_fb_gen_c_json_parser@@Base+0x27cc>
   202fc:	add	r0, pc, r0
   20300:	ldrb	r0, [r0]
   20304:	cmp	r0, #0
   20308:	bne	20320 <__flatcc_fb_gen_c_json_parser@@Base+0x2724>
   2030c:	ldr	r0, [pc, #184]	; 203cc <__flatcc_fb_gen_c_json_parser@@Base+0x27d0>
   20310:	mov	r1, #32
   20314:	mov	r2, #64	; 0x40
   20318:	add	r0, pc, r0
   2031c:	bl	148d4 <memset@plt>
   20320:	ldrb	r0, [r8]
   20324:	cmp	r0, #0
   20328:	beq	203ac <__flatcc_fb_gen_c_json_parser@@Base+0x27b0>
   2032c:	mul	sl, r6, r5
   20330:	ldr	r0, [r4, #204]	; 0xcc
   20334:	cmp	sl, #65	; 0x41
   20338:	blt	20380 <__flatcc_fb_gen_c_json_parser@@Base+0x2784>
   2033c:	ldr	r7, [pc, #140]	; 203d0 <__flatcc_fb_gen_c_json_parser@@Base+0x27d4>
   20340:	ldr	r5, [pc, #140]	; 203d4 <__flatcc_fb_gen_c_json_parser@@Base+0x27d8>
   20344:	sub	r1, sl, #65	; 0x41
   20348:	mov	r6, sl
   2034c:	bic	r9, r1, #63	; 0x3f
   20350:	add	r7, pc, r7
   20354:	add	r5, pc, r5
   20358:	mov	r1, r7
   2035c:	mov	r2, #64	; 0x40
   20360:	mov	r3, r5
   20364:	bl	148bc <fprintf@plt>
   20368:	ldr	r0, [r4, #204]	; 0xcc
   2036c:	sub	r6, r6, #64	; 0x40
   20370:	cmp	r6, #64	; 0x40
   20374:	bgt	20358 <__flatcc_fb_gen_c_json_parser@@Base+0x275c>
   20378:	sub	r1, sl, r9
   2037c:	sub	sl, r1, #64	; 0x40
   20380:	ldr	r1, [pc, #80]	; 203d8 <__flatcc_fb_gen_c_json_parser@@Base+0x27dc>
   20384:	ldr	r3, [pc, #80]	; 203dc <__flatcc_fb_gen_c_json_parser@@Base+0x27e0>
   20388:	mov	r2, sl
   2038c:	add	r1, pc, r1
   20390:	add	r3, pc, r3
   20394:	bl	148bc <fprintf@plt>
   20398:	add	r2, fp, #8
   2039c:	mov	r1, r8
   203a0:	str	r2, [sp]
   203a4:	ldr	r0, [r4, #204]	; 0xcc
   203a8:	bl	14910 <vfprintf@plt>
   203ac:	ldr	r1, [r4, #204]	; 0xcc
   203b0:	mov	r0, #10
   203b4:	bl	1491c <fputc@plt>
   203b8:	sub	sp, fp, #28
   203bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   203c0:	add	sp, sp, #8
   203c4:	bx	lr
   203c8:	andeq	sl, r4, ip, asr #27
   203cc:			; <UNDEFINED> instruction: 0x0004adb0
   203d0:	andeq	r0, r3, lr, lsl #2
   203d4:	andeq	sl, r4, r4, ror sp
   203d8:	ldrdeq	r0, [r3], -r2
   203dc:	andeq	sl, r4, r8, lsr sp
   203e0:	push	{r4, r5, fp, lr}
   203e4:	add	fp, sp, #8
   203e8:	sub	sp, sp, #208	; 0xd0
   203ec:	add	r5, sp, #4
   203f0:	mov	r4, r0
   203f4:	mov	r0, r1
   203f8:	mov	r1, r5
   203fc:	bl	15b40 <__flatcc_fb_copy_scope@@Base>
   20400:	ldr	r0, [r4, #208]	; 0xd0
   20404:	mov	r3, r5
   20408:	ldr	r2, [r0, #160]	; 0xa0
   2040c:	ldr	r1, [pc, #32]	; 20434 <__flatcc_fb_gen_c_json_parser@@Base+0x2838>
   20410:	mov	r0, r4
   20414:	add	r1, pc, r1
   20418:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   2041c:	ldr	r1, [pc, #20]	; 20438 <__flatcc_fb_gen_c_json_parser@@Base+0x283c>
   20420:	mov	r0, r4
   20424:	add	r1, pc, r1
   20428:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   2042c:	sub	sp, fp, #8
   20430:	pop	{r4, r5, fp, pc}
   20434:	andeq	r1, r3, ip, asr pc
   20438:	andeq	r1, r3, r7, lsr #26
   2043c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   20440:	add	fp, sp, #24
   20444:	sub	sp, sp, #264	; 0x108
   20448:	vmov.i32	q8, #0	; 0x00000000
   2044c:	mov	r4, r0
   20450:	mov	r0, #0
   20454:	mov	r5, r1
   20458:	add	r1, sp, #8
   2045c:	str	r0, [sp, #36]	; 0x24
   20460:	mov	r0, #12
   20464:	vst1.64	{d16-d17}, [r1], r0
   20468:	vst1.32	{d16-d17}, [r1]
   2046c:	ldrh	r0, [r5, #8]
   20470:	sub	r0, r0, #3
   20474:	uxth	r0, r0
   20478:	cmp	r0, #2
   2047c:	bcs	206a4 <__flatcc_fb_gen_c_json_parser@@Base+0x2aa8>
   20480:	add	r1, sp, #36	; 0x24
   20484:	mov	r0, r5
   20488:	bl	20b50 <__flatcc_fb_gen_c_json_parser@@Base+0x2f54>
   2048c:	ldr	r7, [sp, #36]	; 0x24
   20490:	cmp	r0, #0
   20494:	str	r0, [sp, #8]
   20498:	bne	204a4 <__flatcc_fb_gen_c_json_parser@@Base+0x28a8>
   2049c:	cmp	r7, #1
   204a0:	bge	206c4 <__flatcc_fb_gen_c_json_parser@@Base+0x2ac8>
   204a4:	mov	r0, #2
   204a8:	add	r6, sp, #40	; 0x28
   204ac:	mov	r1, #0
   204b0:	mov	r2, #220	; 0xdc
   204b4:	str	r0, [sp, #24]
   204b8:	str	r5, [sp, #20]
   204bc:	ldr	r0, [pc, #624]	; 20734 <__flatcc_fb_gen_c_json_parser@@Base+0x2b38>
   204c0:	add	r0, pc, r0
   204c4:	str	r0, [sp, #16]
   204c8:	ldr	r0, [pc, #616]	; 20738 <__flatcc_fb_gen_c_json_parser@@Base+0x2b3c>
   204cc:	add	r0, pc, r0
   204d0:	str	r0, [sp, #12]
   204d4:	mov	r0, r6
   204d8:	bl	148d4 <memset@plt>
   204dc:	ldr	r0, [r5, #12]
   204e0:	mov	r1, r5
   204e4:	mov	r2, r6
   204e8:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   204ec:	ldr	r1, [pc, #584]	; 2073c <__flatcc_fb_gen_c_json_parser@@Base+0x2b40>
   204f0:	mov	r0, r4
   204f4:	mov	r2, r6
   204f8:	add	r1, pc, r1
   204fc:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   20500:	ldr	r0, [r4, #220]	; 0xdc
   20504:	add	r0, r0, #2
   20508:	str	r0, [r4, #220]	; 0xdc
   2050c:	mov	r0, r4
   20510:	ldr	r1, [pc, #552]	; 20740 <__flatcc_fb_gen_c_json_parser@@Base+0x2b44>
   20514:	add	r1, pc, r1
   20518:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   2051c:	ldr	r0, [r4, #220]	; 0xdc
   20520:	cmp	r0, #0
   20524:	beq	20684 <__flatcc_fb_gen_c_json_parser@@Base+0x2a88>
   20528:	subs	r1, r0, #1
   2052c:	str	r1, [r4, #220]	; 0xdc
   20530:	beq	20684 <__flatcc_fb_gen_c_json_parser@@Base+0x2a88>
   20534:	sub	r0, r0, #2
   20538:	str	r0, [r4, #220]	; 0xdc
   2053c:	mov	r0, r4
   20540:	ldr	r1, [pc, #508]	; 20744 <__flatcc_fb_gen_c_json_parser@@Base+0x2b48>
   20544:	add	r1, pc, r1
   20548:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   2054c:	ldr	r0, [r4, #220]	; 0xdc
   20550:	cmp	r7, #0
   20554:	add	r0, r0, #1
   20558:	str	r0, [r4, #220]	; 0xdc
   2055c:	beq	20608 <__flatcc_fb_gen_c_json_parser@@Base+0x2a0c>
   20560:	ldr	r1, [pc, #504]	; 20760 <__flatcc_fb_gen_c_json_parser@@Base+0x2b64>
   20564:	mov	r0, r4
   20568:	add	r1, pc, r1
   2056c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   20570:	ldr	r1, [pc, #492]	; 20764 <__flatcc_fb_gen_c_json_parser@@Base+0x2b68>
   20574:	mov	r0, r4
   20578:	add	r1, pc, r1
   2057c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   20580:	ldr	r1, [pc, #480]	; 20768 <__flatcc_fb_gen_c_json_parser@@Base+0x2b6c>
   20584:	mov	r0, r4
   20588:	add	r1, pc, r1
   2058c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   20590:	ldr	r1, [pc, #468]	; 2076c <__flatcc_fb_gen_c_json_parser@@Base+0x2b70>
   20594:	mov	r0, r4
   20598:	add	r1, pc, r1
   2059c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   205a0:	ldr	r1, [pc, #456]	; 20770 <__flatcc_fb_gen_c_json_parser@@Base+0x2b74>
   205a4:	mov	r0, r4
   205a8:	add	r1, pc, r1
   205ac:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   205b0:	mov	r0, #0
   205b4:	sub	r3, r7, #1
   205b8:	add	r1, sp, #8
   205bc:	mov	r2, #0
   205c0:	str	r0, [sp]
   205c4:	mov	r0, r4
   205c8:	bl	20e70 <__flatcc_fb_gen_c_json_parser@@Base+0x3274>
   205cc:	ldr	r1, [pc, #416]	; 20774 <__flatcc_fb_gen_c_json_parser@@Base+0x2b78>
   205d0:	mov	r0, r4
   205d4:	add	r1, pc, r1
   205d8:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   205dc:	ldr	r0, [r4, #220]	; 0xdc
   205e0:	cmp	r0, #0
   205e4:	bne	20644 <__flatcc_fb_gen_c_json_parser@@Base+0x2a48>
   205e8:	ldr	r0, [pc, #448]	; 207b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2bb4>
   205ec:	ldr	r1, [pc, #448]	; 207b4 <__flatcc_fb_gen_c_json_parser@@Base+0x2bb8>
   205f0:	ldr	r3, [pc, #448]	; 207b8 <__flatcc_fb_gen_c_json_parser@@Base+0x2bbc>
   205f4:	movw	r2, #1278	; 0x4fe
   205f8:	add	r0, pc, r0
   205fc:	add	r1, pc, r1
   20600:	add	r3, pc, r3
   20604:	bl	1497c <__assert_fail@plt>
   20608:	ldr	r1, [pc, #312]	; 20748 <__flatcc_fb_gen_c_json_parser@@Base+0x2b4c>
   2060c:	mov	r0, r4
   20610:	add	r1, pc, r1
   20614:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   20618:	ldr	r1, [pc, #300]	; 2074c <__flatcc_fb_gen_c_json_parser@@Base+0x2b50>
   2061c:	mov	r0, r4
   20620:	add	r1, pc, r1
   20624:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   20628:	ldr	r1, [pc, #288]	; 20750 <__flatcc_fb_gen_c_json_parser@@Base+0x2b54>
   2062c:	mov	r0, r4
   20630:	add	r1, pc, r1
   20634:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   20638:	ldr	r0, [r4, #220]	; 0xdc
   2063c:	cmp	r0, #0
   20640:	beq	20714 <__flatcc_fb_gen_c_json_parser@@Base+0x2b18>
   20644:	sub	r0, r0, #1
   20648:	str	r0, [r4, #220]	; 0xdc
   2064c:	mov	r0, r4
   20650:	ldr	r1, [pc, #288]	; 20778 <__flatcc_fb_gen_c_json_parser@@Base+0x2b7c>
   20654:	add	r1, pc, r1
   20658:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   2065c:	ldr	r1, [pc, #280]	; 2077c <__flatcc_fb_gen_c_json_parser@@Base+0x2b80>
   20660:	mov	r0, r4
   20664:	add	r1, pc, r1
   20668:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   2066c:	ldr	r0, [sp, #8]
   20670:	cmp	r0, #0
   20674:	beq	2067c <__flatcc_fb_gen_c_json_parser@@Base+0x2a80>
   20678:	bl	147fc <free@plt>
   2067c:	sub	sp, fp, #24
   20680:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   20684:	ldr	r0, [pc, #280]	; 207a4 <__flatcc_fb_gen_c_json_parser@@Base+0x2ba8>
   20688:	ldr	r1, [pc, #280]	; 207a8 <__flatcc_fb_gen_c_json_parser@@Base+0x2bac>
   2068c:	ldr	r3, [pc, #280]	; 207ac <__flatcc_fb_gen_c_json_parser@@Base+0x2bb0>
   20690:	movw	r2, #1263	; 0x4ef
   20694:	add	r0, pc, r0
   20698:	add	r1, pc, r1
   2069c:	add	r3, pc, r3
   206a0:	bl	1497c <__assert_fail@plt>
   206a4:	ldr	r0, [pc, #212]	; 20780 <__flatcc_fb_gen_c_json_parser@@Base+0x2b84>
   206a8:	ldr	r1, [pc, #212]	; 20784 <__flatcc_fb_gen_c_json_parser@@Base+0x2b88>
   206ac:	ldr	r3, [pc, #212]	; 20788 <__flatcc_fb_gen_c_json_parser@@Base+0x2b8c>
   206b0:	movw	r2, #1246	; 0x4de
   206b4:	add	r0, pc, r0
   206b8:	add	r1, pc, r1
   206bc:	add	r3, pc, r3
   206c0:	bl	1497c <__assert_fail@plt>
   206c4:	ldr	r0, [pc, #192]	; 2078c <__flatcc_fb_gen_c_json_parser@@Base+0x2b90>
   206c8:	movw	r3, #1249	; 0x4e1
   206cc:	ldr	r0, [pc, r0]
   206d0:	ldr	r0, [r0]
   206d4:	ldr	r1, [pc, #180]	; 20790 <__flatcc_fb_gen_c_json_parser@@Base+0x2b94>
   206d8:	add	r1, pc, r1
   206dc:	str	r1, [sp]
   206e0:	ldr	r1, [pc, #172]	; 20794 <__flatcc_fb_gen_c_json_parser@@Base+0x2b98>
   206e4:	ldr	r4, [pc, #172]	; 20798 <__flatcc_fb_gen_c_json_parser@@Base+0x2b9c>
   206e8:	add	r4, pc, r4
   206ec:	add	r1, pc, r1
   206f0:	mov	r2, r4
   206f4:	bl	148bc <fprintf@plt>
   206f8:	ldr	r0, [pc, #156]	; 2079c <__flatcc_fb_gen_c_json_parser@@Base+0x2ba0>
   206fc:	ldr	r3, [pc, #156]	; 207a0 <__flatcc_fb_gen_c_json_parser@@Base+0x2ba4>
   20700:	mov	r1, r4
   20704:	movw	r2, #1249	; 0x4e1
   20708:	add	r0, pc, r0
   2070c:	add	r3, pc, r3
   20710:	bl	1497c <__assert_fail@plt>
   20714:	ldr	r0, [pc, #56]	; 20754 <__flatcc_fb_gen_c_json_parser@@Base+0x2b58>
   20718:	ldr	r1, [pc, #56]	; 20758 <__flatcc_fb_gen_c_json_parser@@Base+0x2b5c>
   2071c:	ldr	r3, [pc, #56]	; 2075c <__flatcc_fb_gen_c_json_parser@@Base+0x2b60>
   20720:	movw	r2, #1269	; 0x4f5
   20724:	add	r0, pc, r0
   20728:	add	r1, pc, r1
   2072c:	add	r3, pc, r3
   20730:	bl	1497c <__assert_fail@plt>
   20734:	muleq	r0, r8, r9
   20738:	andeq	r0, r0, ip, lsl r8
   2073c:	strdeq	r1, [r3], -r0
   20740:	andeq	r2, r3, r9, lsr #7
   20744:	andeq	r4, r3, pc, lsr #27
   20748:	ldrdeq	r2, [r3], -pc	; <UNPREDICTABLE>
   2074c:	andeq	r2, r3, r9, ror #5
   20750:	andeq	r2, r3, r9, ror #5
   20754:	andeq	r1, r3, fp, asr r8
   20758:	andeq	r1, r3, r3, ror #16
   2075c:	andeq	r2, r3, ip, lsl r1
   20760:	andeq	r2, r3, lr, asr #7
   20764:	ldrdeq	r2, [r3], -fp
   20768:	ldrdeq	r2, [r3], -sp
   2076c:	andeq	pc, r1, r6, lsl #2
   20770:	andeq	r2, r3, r9, asr #7
   20774:	andeq	r2, r3, r2, asr #2
   20778:	andeq	r1, r2, r3, asr #7
   2077c:	andeq	pc, r1, sl, lsr r0	; <UNPREDICTABLE>
   20780:	andeq	r5, r2, pc, asr #6
   20784:	ldrdeq	r1, [r3], -r3
   20788:	andeq	r2, r3, ip, lsl #3
   2078c:	ldrdeq	sl, [r4], -r0
   20790:	andeq	r2, r3, r9, lsr #3
   20794:	muleq	r1, sl, lr
   20798:	andeq	r1, r3, r3, lsr #17
   2079c:	andeq	pc, r2, r6, asr #26
   207a0:	andeq	r2, r3, ip, lsr r1
   207a4:	andeq	r1, r3, fp, ror #17
   207a8:	strdeq	r1, [r3], -r3
   207ac:	andeq	r2, r3, ip, lsr #3
   207b0:	andeq	r1, r3, r7, lsl #19
   207b4:	andeq	r1, r3, pc, lsl #19
   207b8:	andeq	r2, r3, r8, asr #4
   207bc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   207c0:	add	fp, sp, #24
   207c4:	sub	sp, sp, #256	; 0x100
   207c8:	vmov.i32	q8, #0	; 0x00000000
   207cc:	mov	r5, r1
   207d0:	mov	r4, r0
   207d4:	mov	r0, #12
   207d8:	sub	r1, fp, #72	; 0x48
   207dc:	vst1.64	{d16-d17}, [r1], r0
   207e0:	mov	r0, r5
   207e4:	vst1.32	{d16-d17}, [r1]
   207e8:	add	r1, sp, #4
   207ec:	bl	15b40 <__flatcc_fb_copy_scope@@Base>
   207f0:	ldr	r0, [r4, #208]	; 0xd0
   207f4:	mov	r6, #0
   207f8:	add	r5, r5, #4
   207fc:	sub	r2, fp, #40	; 0x28
   20800:	str	r6, [fp, #-40]	; 0xffffffd8
   20804:	str	r6, [fp, #-32]	; 0xffffffe0
   20808:	str	r0, [fp, #-36]	; 0xffffffdc
   2080c:	mov	r0, r5
   20810:	ldr	r1, [pc, #692]	; 20acc <__flatcc_fb_gen_c_json_parser@@Base+0x2ed0>
   20814:	add	r1, pc, r1
   20818:	bl	28068 <fb_symbol_table_visit@@Base>
   2081c:	ldr	r8, [fp, #-40]	; 0xffffffd8
   20820:	cmp	r8, #0
   20824:	beq	20870 <__flatcc_fb_gen_c_json_parser@@Base+0x2c74>
   20828:	lsl	r0, r8, #4
   2082c:	bl	14868 <malloc@plt>
   20830:	cmp	r0, #0
   20834:	beq	20870 <__flatcc_fb_gen_c_json_parser@@Base+0x2c74>
   20838:	str	r0, [fp, #-32]	; 0xffffffe0
   2083c:	mov	r7, r0
   20840:	sub	r2, fp, #40	; 0x28
   20844:	mov	r0, r5
   20848:	ldr	r1, [pc, #640]	; 20ad0 <__flatcc_fb_gen_c_json_parser@@Base+0x2ed4>
   2084c:	add	r1, pc, r1
   20850:	bl	28068 <fb_symbol_table_visit@@Base>
   20854:	ldr	r1, [fp, #-40]	; 0xffffffd8
   20858:	ldr	r3, [pc, #628]	; 20ad4 <__flatcc_fb_gen_c_json_parser@@Base+0x2ed8>
   2085c:	mov	r0, r7
   20860:	mov	r2, #16
   20864:	add	r3, pc, r3
   20868:	bl	14940 <qsort@plt>
   2086c:	mov	r6, r7
   20870:	cmp	r8, #1
   20874:	str	r6, [fp, #-72]	; 0xffffffb8
   20878:	blt	20884 <__flatcc_fb_gen_c_json_parser@@Base+0x2c88>
   2087c:	cmp	r6, #0
   20880:	beq	20a5c <__flatcc_fb_gen_c_json_parser@@Base+0x2e60>
   20884:	mov	r0, #3
   20888:	add	r3, sp, #4
   2088c:	str	r0, [fp, #-56]	; 0xffffffc8
   20890:	mov	r0, #0
   20894:	str	r0, [fp, #-60]	; 0xffffffc4
   20898:	ldr	r0, [pc, #568]	; 20ad8 <__flatcc_fb_gen_c_json_parser@@Base+0x2edc>
   2089c:	add	r0, pc, r0
   208a0:	str	r0, [fp, #-64]	; 0xffffffc0
   208a4:	ldr	r0, [pc, #560]	; 20adc <__flatcc_fb_gen_c_json_parser@@Base+0x2ee0>
   208a8:	add	r0, pc, r0
   208ac:	str	r0, [fp, #-68]	; 0xffffffbc
   208b0:	ldr	r0, [r4, #208]	; 0xd0
   208b4:	ldr	r2, [r0, #160]	; 0xa0
   208b8:	ldr	r1, [pc, #544]	; 20ae0 <__flatcc_fb_gen_c_json_parser@@Base+0x2ee4>
   208bc:	mov	r0, r4
   208c0:	add	r1, pc, r1
   208c4:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   208c8:	ldr	r0, [r4, #220]	; 0xdc
   208cc:	add	r0, r0, #2
   208d0:	str	r0, [r4, #220]	; 0xdc
   208d4:	mov	r0, r4
   208d8:	ldr	r1, [pc, #516]	; 20ae4 <__flatcc_fb_gen_c_json_parser@@Base+0x2ee8>
   208dc:	add	r1, pc, r1
   208e0:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   208e4:	ldr	r0, [r4, #220]	; 0xdc
   208e8:	cmp	r0, #0
   208ec:	beq	20a3c <__flatcc_fb_gen_c_json_parser@@Base+0x2e40>
   208f0:	subs	r1, r0, #1
   208f4:	str	r1, [r4, #220]	; 0xdc
   208f8:	beq	20a3c <__flatcc_fb_gen_c_json_parser@@Base+0x2e40>
   208fc:	sub	r0, r0, #2
   20900:	str	r0, [r4, #220]	; 0xdc
   20904:	mov	r0, r4
   20908:	ldr	r1, [pc, #472]	; 20ae8 <__flatcc_fb_gen_c_json_parser@@Base+0x2eec>
   2090c:	add	r1, pc, r1
   20910:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   20914:	ldr	r0, [r4, #220]	; 0xdc
   20918:	cmp	r8, #0
   2091c:	add	r0, r0, #1
   20920:	str	r0, [r4, #220]	; 0xdc
   20924:	beq	209d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2dd4>
   20928:	ldr	r1, [pc, #464]	; 20b00 <__flatcc_fb_gen_c_json_parser@@Base+0x2f04>
   2092c:	mov	r0, r4
   20930:	add	r1, pc, r1
   20934:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   20938:	ldr	r1, [pc, #452]	; 20b04 <__flatcc_fb_gen_c_json_parser@@Base+0x2f08>
   2093c:	mov	r0, r4
   20940:	add	r1, pc, r1
   20944:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   20948:	ldr	r1, [pc, #440]	; 20b08 <__flatcc_fb_gen_c_json_parser@@Base+0x2f0c>
   2094c:	mov	r0, r4
   20950:	add	r1, pc, r1
   20954:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   20958:	ldr	r1, [pc, #428]	; 20b0c <__flatcc_fb_gen_c_json_parser@@Base+0x2f10>
   2095c:	mov	r0, r4
   20960:	add	r1, pc, r1
   20964:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   20968:	ldr	r1, [pc, #416]	; 20b10 <__flatcc_fb_gen_c_json_parser@@Base+0x2f14>
   2096c:	mov	r0, r4
   20970:	add	r1, pc, r1
   20974:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   20978:	mov	r0, #0
   2097c:	sub	r3, r8, #1
   20980:	sub	r1, fp, #72	; 0x48
   20984:	mov	r2, #0
   20988:	str	r0, [sp]
   2098c:	mov	r0, r4
   20990:	bl	20e70 <__flatcc_fb_gen_c_json_parser@@Base+0x3274>
   20994:	ldr	r1, [pc, #376]	; 20b14 <__flatcc_fb_gen_c_json_parser@@Base+0x2f18>
   20998:	mov	r0, r4
   2099c:	add	r1, pc, r1
   209a0:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   209a4:	ldr	r0, [r4, #220]	; 0xdc
   209a8:	cmp	r0, #0
   209ac:	bne	209fc <__flatcc_fb_gen_c_json_parser@@Base+0x2e00>
   209b0:	ldr	r0, [pc, #396]	; 20b44 <__flatcc_fb_gen_c_json_parser@@Base+0x2f48>
   209b4:	ldr	r1, [pc, #396]	; 20b48 <__flatcc_fb_gen_c_json_parser@@Base+0x2f4c>
   209b8:	ldr	r3, [pc, #396]	; 20b4c <__flatcc_fb_gen_c_json_parser@@Base+0x2f50>
   209bc:	movw	r2, #1166	; 0x48e
   209c0:	add	r0, pc, r0
   209c4:	add	r1, pc, r1
   209c8:	add	r3, pc, r3
   209cc:	bl	1497c <__assert_fail@plt>
   209d0:	ldr	r1, [pc, #276]	; 20aec <__flatcc_fb_gen_c_json_parser@@Base+0x2ef0>
   209d4:	mov	r0, r4
   209d8:	add	r1, pc, r1
   209dc:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   209e0:	ldr	r1, [pc, #264]	; 20af0 <__flatcc_fb_gen_c_json_parser@@Base+0x2ef4>
   209e4:	mov	r0, r4
   209e8:	add	r1, pc, r1
   209ec:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   209f0:	ldr	r0, [r4, #220]	; 0xdc
   209f4:	cmp	r0, #0
   209f8:	beq	20aac <__flatcc_fb_gen_c_json_parser@@Base+0x2eb0>
   209fc:	sub	r0, r0, #1
   20a00:	str	r0, [r4, #220]	; 0xdc
   20a04:	mov	r0, r4
   20a08:	ldr	r1, [pc, #264]	; 20b18 <__flatcc_fb_gen_c_json_parser@@Base+0x2f1c>
   20a0c:	add	r1, pc, r1
   20a10:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   20a14:	ldr	r1, [pc, #256]	; 20b1c <__flatcc_fb_gen_c_json_parser@@Base+0x2f20>
   20a18:	mov	r0, r4
   20a1c:	add	r1, pc, r1
   20a20:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   20a24:	ldr	r0, [fp, #-72]	; 0xffffffb8
   20a28:	cmp	r0, #0
   20a2c:	beq	20a34 <__flatcc_fb_gen_c_json_parser@@Base+0x2e38>
   20a30:	bl	147fc <free@plt>
   20a34:	sub	sp, fp, #24
   20a38:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   20a3c:	ldr	r0, [pc, #244]	; 20b38 <__flatcc_fb_gen_c_json_parser@@Base+0x2f3c>
   20a40:	ldr	r1, [pc, #244]	; 20b3c <__flatcc_fb_gen_c_json_parser@@Base+0x2f40>
   20a44:	ldr	r3, [pc, #244]	; 20b40 <__flatcc_fb_gen_c_json_parser@@Base+0x2f44>
   20a48:	mov	r2, #1152	; 0x480
   20a4c:	add	r0, pc, r0
   20a50:	add	r1, pc, r1
   20a54:	add	r3, pc, r3
   20a58:	bl	1497c <__assert_fail@plt>
   20a5c:	ldr	r0, [pc, #188]	; 20b20 <__flatcc_fb_gen_c_json_parser@@Base+0x2f24>
   20a60:	movw	r3, #1140	; 0x474
   20a64:	ldr	r0, [pc, r0]
   20a68:	ldr	r0, [r0]
   20a6c:	ldr	r1, [pc, #176]	; 20b24 <__flatcc_fb_gen_c_json_parser@@Base+0x2f28>
   20a70:	add	r1, pc, r1
   20a74:	str	r1, [sp]
   20a78:	ldr	r1, [pc, #168]	; 20b28 <__flatcc_fb_gen_c_json_parser@@Base+0x2f2c>
   20a7c:	ldr	r4, [pc, #168]	; 20b2c <__flatcc_fb_gen_c_json_parser@@Base+0x2f30>
   20a80:	add	r4, pc, r4
   20a84:	add	r1, pc, r1
   20a88:	mov	r2, r4
   20a8c:	bl	148bc <fprintf@plt>
   20a90:	ldr	r0, [pc, #152]	; 20b30 <__flatcc_fb_gen_c_json_parser@@Base+0x2f34>
   20a94:	ldr	r3, [pc, #152]	; 20b34 <__flatcc_fb_gen_c_json_parser@@Base+0x2f38>
   20a98:	mov	r1, r4
   20a9c:	movw	r2, #1140	; 0x474
   20aa0:	add	r0, pc, r0
   20aa4:	add	r3, pc, r3
   20aa8:	bl	1497c <__assert_fail@plt>
   20aac:	ldr	r0, [pc, #64]	; 20af4 <__flatcc_fb_gen_c_json_parser@@Base+0x2ef8>
   20ab0:	ldr	r1, [pc, #64]	; 20af8 <__flatcc_fb_gen_c_json_parser@@Base+0x2efc>
   20ab4:	ldr	r3, [pc, #64]	; 20afc <__flatcc_fb_gen_c_json_parser@@Base+0x2f00>
   20ab8:	movw	r2, #1157	; 0x485
   20abc:	add	r0, pc, r0
   20ac0:	add	r1, pc, r1
   20ac4:	add	r3, pc, r3
   20ac8:	bl	1497c <__assert_fail@plt>
   20acc:	andeq	r2, r0, ip, lsl #25
   20ad0:	muleq	r0, r4, ip
   20ad4:	andeq	r1, r0, ip, lsl r5
   20ad8:	strdeq	r2, [r0], -r4
   20adc:			; <UNDEFINED> instruction: 0x00002abc
   20ae0:			; <UNDEFINED> instruction: 0x00031ab0
   20ae4:	andeq	r3, r3, sl, asr r7
   20ae8:	andeq	r4, r3, r7, ror #19
   20aec:	muleq	r3, r0, r6
   20af0:	andeq	r1, r3, r1, lsr pc
   20af4:	andeq	r1, r3, r3, asr #9
   20af8:	andeq	r1, r3, fp, asr #9
   20afc:	andeq	r3, r3, r0, asr #10
   20b00:	andeq	r2, r3, r6
   20b04:	andeq	r2, r3, r3, lsl r0
   20b08:	andeq	r2, r3, r5, lsl r0
   20b0c:	andeq	lr, r1, lr, lsr sp
   20b10:	andeq	r2, r3, r1
   20b14:	andeq	r1, r3, sl, ror sp
   20b18:	andeq	r1, r2, fp
   20b1c:	andeq	lr, r1, r2, lsl #25
   20b20:	andeq	sl, r4, r8, lsr r6
   20b24:	andeq	r1, r3, r1, lsl lr
   20b28:	andeq	lr, r1, r2, lsl #22
   20b2c:	andeq	r1, r3, fp, lsl #10
   20b30:	andeq	pc, r2, lr, lsr #19
   20b34:	andeq	r3, r3, r0, ror #10
   20b38:	andeq	r1, r3, r3, lsr r5
   20b3c:	andeq	r1, r3, fp, lsr r5
   20b40:			; <UNDEFINED> instruction: 0x000335b0
   20b44:			; <UNDEFINED> instruction: 0x000315bf
   20b48:	andeq	r1, r3, r7, asr #11
   20b4c:	andeq	r3, r3, ip, lsr r6
   20b50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20b54:	add	fp, sp, #28
   20b58:	sub	sp, sp, #4
   20b5c:	ldr	r7, [r0, #20]
   20b60:	cmp	r7, #0
   20b64:	beq	20cb8 <__flatcc_fb_gen_c_json_parser@@Base+0x30bc>
   20b68:	mov	r0, #0
   20b6c:	mov	r2, r7
   20b70:	mov	r4, #0
   20b74:	b	20b88 <__flatcc_fb_gen_c_json_parser@@Base+0x2f8c>
   20b78:	add	r4, r4, #1
   20b7c:	ldr	r2, [r2]
   20b80:	cmp	r2, #0
   20b84:	beq	20bcc <__flatcc_fb_gen_c_json_parser@@Base+0x2fd0>
   20b88:	ldrb	r3, [r2, #72]	; 0x48
   20b8c:	tst	r3, #4
   20b90:	bne	20b7c <__flatcc_fb_gen_c_json_parser@@Base+0x2f80>
   20b94:	ldrh	r3, [r2, #24]
   20b98:	bic	r3, r3, #1
   20b9c:	cmp	r3, #14
   20ba0:	bne	20b78 <__flatcc_fb_gen_c_json_parser@@Base+0x2f7c>
   20ba4:	ldr	r3, [r2, #16]
   20ba8:	ldrh	r3, [r3, #8]
   20bac:	cmp	r3, #4
   20bb0:	bne	20b78 <__flatcc_fb_gen_c_json_parser@@Base+0x2f7c>
   20bb4:	ldr	r3, [r2, #4]
   20bb8:	add	r4, r4, #1
   20bbc:	ldr	r3, [r3, #4]
   20bc0:	add	r0, r0, r3
   20bc4:	add	r0, r0, #6
   20bc8:	b	20b78 <__flatcc_fb_gen_c_json_parser@@Base+0x2f7c>
   20bcc:	mov	r6, #0
   20bd0:	cmp	r4, #0
   20bd4:	str	r4, [r1]
   20bd8:	beq	20ce0 <__flatcc_fb_gen_c_json_parser@@Base+0x30e4>
   20bdc:	add	r0, r0, r4, lsl #4
   20be0:	bl	14868 <malloc@plt>
   20be4:	cmp	r0, #0
   20be8:	beq	20ce0 <__flatcc_fb_gen_c_json_parser@@Base+0x30e4>
   20bec:	mov	r9, r0
   20bf0:	cmp	r7, #0
   20bf4:	beq	20cc4 <__flatcc_fb_gen_c_json_parser@@Base+0x30c8>
   20bf8:	lsl	r0, r4, #4
   20bfc:	mov	r5, #0
   20c00:	mov	sl, #0
   20c04:	mov	r8, r9
   20c08:	add	r6, r9, r0
   20c0c:	b	20c20 <__flatcc_fb_gen_c_json_parser@@Base+0x3024>
   20c10:	mov	r8, r0
   20c14:	ldr	r7, [r7]
   20c18:	cmp	r7, #0
   20c1c:	beq	20cc4 <__flatcc_fb_gen_c_json_parser@@Base+0x30c8>
   20c20:	ldrb	r0, [r7, #72]	; 0x48
   20c24:	tst	r0, #4
   20c28:	bne	20c14 <__flatcc_fb_gen_c_json_parser@@Base+0x3018>
   20c2c:	ldr	r0, [r7, #4]
   20c30:	ldr	r1, [r0]
   20c34:	str	r1, [r8]
   20c38:	ldr	r2, [r0, #4]
   20c3c:	str	r5, [r8, #12]
   20c40:	add	r0, r8, #16
   20c44:	stmib	r8, {r2, r7}
   20c48:	ldrh	r3, [r7, #24]
   20c4c:	bic	r3, r3, #1
   20c50:	cmp	r3, #14
   20c54:	bne	20c10 <__flatcc_fb_gen_c_json_parser@@Base+0x3014>
   20c58:	ldr	r3, [r7, #16]
   20c5c:	ldrh	r3, [r3, #8]
   20c60:	cmp	r3, #4
   20c64:	bne	20c10 <__flatcc_fb_gen_c_json_parser@@Base+0x3014>
   20c68:	add	r0, r2, #5
   20c6c:	str	sl, [r7, #112]	; 0x70
   20c70:	str	r6, [r8, #16]
   20c74:	str	r0, [r8, #20]
   20c78:	mov	r0, r6
   20c7c:	bl	14808 <memcpy@plt>
   20c80:	ldr	r0, [r7, #4]
   20c84:	movw	r1, #29791	; 0x745f
   20c88:	add	sl, sl, #1
   20c8c:	movt	r1, #28793	; 0x7079
   20c90:	ldr	r0, [r0, #4]
   20c94:	str	r1, [r6, r0]!
   20c98:	mov	r0, #101	; 0x65
   20c9c:	strh	r0, [r6, #4]
   20ca0:	mov	r0, #1
   20ca4:	str	r7, [r8, #24]
   20ca8:	add	r6, r6, #6
   20cac:	str	r0, [r8, #28]
   20cb0:	add	r8, r8, #32
   20cb4:	b	20c14 <__flatcc_fb_gen_c_json_parser@@Base+0x3018>
   20cb8:	mov	r6, #0
   20cbc:	str	r6, [r1]
   20cc0:	b	20ce0 <__flatcc_fb_gen_c_json_parser@@Base+0x30e4>
   20cc4:	ldr	r3, [pc, #32]	; 20cec <__flatcc_fb_gen_c_json_parser@@Base+0x30f0>
   20cc8:	mov	r0, r9
   20ccc:	mov	r1, r4
   20cd0:	mov	r2, #16
   20cd4:	add	r3, pc, r3
   20cd8:	bl	14940 <qsort@plt>
   20cdc:	mov	r6, r9
   20ce0:	mov	r0, r6
   20ce4:	sub	sp, fp, #28
   20ce8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20cec:	andeq	r1, r0, ip, lsr #1
   20cf0:	push	{r4, r5, r6, sl, fp, lr}
   20cf4:	add	fp, sp, #16
   20cf8:	sub	sp, sp, #8
   20cfc:	mov	r6, r1
   20d00:	ldr	r1, [pc, #288]	; 20e28 <__flatcc_fb_gen_c_json_parser@@Base+0x322c>
   20d04:	mov	r5, r2
   20d08:	ldr	r2, [fp, #8]
   20d0c:	mov	r4, r0
   20d10:	add	r1, pc, r1
   20d14:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   20d18:	ldr	r1, [pc, #268]	; 20e2c <__flatcc_fb_gen_c_json_parser@@Base+0x3230>
   20d1c:	mov	r0, r4
   20d20:	add	r1, pc, r1
   20d24:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   20d28:	ldr	r0, [r4, #220]	; 0xdc
   20d2c:	add	r0, r0, #1
   20d30:	str	r0, [r4, #220]	; 0xdc
   20d34:	ldr	r0, [r6, #40]	; 0x28
   20d38:	sub	r1, r0, #1
   20d3c:	cmp	r1, #5
   20d40:	bcs	20d4c <__flatcc_fb_gen_c_json_parser@@Base+0x3150>
   20d44:	ldrd	r2, [r5, #48]	; 0x30
   20d48:	b	20d64 <__flatcc_fb_gen_c_json_parser@@Base+0x3168>
   20d4c:	sub	r0, r0, #6
   20d50:	cmp	r0, #4
   20d54:	bcs	20db8 <__flatcc_fb_gen_c_json_parser@@Base+0x31bc>
   20d58:	ldrd	r2, [r5, #48]	; 0x30
   20d5c:	cmn	r3, #1
   20d60:	ble	20dac <__flatcc_fb_gen_c_json_parser@@Base+0x31b0>
   20d64:	ldr	r1, [pc, #204]	; 20e38 <__flatcc_fb_gen_c_json_parser@@Base+0x323c>
   20d68:	add	r1, pc, r1
   20d6c:	mov	r0, r4
   20d70:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   20d74:	ldr	r0, [r4, #220]	; 0xdc
   20d78:	cmp	r0, #0
   20d7c:	beq	20e08 <__flatcc_fb_gen_c_json_parser@@Base+0x320c>
   20d80:	sub	r0, r0, #1
   20d84:	str	r0, [r4, #220]	; 0xdc
   20d88:	mov	r0, r4
   20d8c:	ldr	r1, [pc, #160]	; 20e34 <__flatcc_fb_gen_c_json_parser@@Base+0x3238>
   20d90:	add	r1, pc, r1
   20d94:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   20d98:	ldr	r0, [r4, #220]	; 0xdc
   20d9c:	add	r0, r0, #1
   20da0:	str	r0, [r4, #220]	; 0xdc
   20da4:	sub	sp, fp, #16
   20da8:	pop	{r4, r5, r6, sl, fp, pc}
   20dac:	ldr	r1, [pc, #124]	; 20e30 <__flatcc_fb_gen_c_json_parser@@Base+0x3234>
   20db0:	add	r1, pc, r1
   20db4:	b	20d6c <__flatcc_fb_gen_c_json_parser@@Base+0x3170>
   20db8:	ldr	r0, [pc, #124]	; 20e3c <__flatcc_fb_gen_c_json_parser@@Base+0x3240>
   20dbc:	movw	r3, #710	; 0x2c6
   20dc0:	ldr	r0, [pc, r0]
   20dc4:	ldr	r0, [r0]
   20dc8:	ldr	r1, [pc, #112]	; 20e40 <__flatcc_fb_gen_c_json_parser@@Base+0x3244>
   20dcc:	add	r1, pc, r1
   20dd0:	str	r1, [sp]
   20dd4:	ldr	r1, [pc, #104]	; 20e44 <__flatcc_fb_gen_c_json_parser@@Base+0x3248>
   20dd8:	ldr	r4, [pc, #104]	; 20e48 <__flatcc_fb_gen_c_json_parser@@Base+0x324c>
   20ddc:	add	r4, pc, r4
   20de0:	add	r1, pc, r1
   20de4:	mov	r2, r4
   20de8:	bl	148bc <fprintf@plt>
   20dec:	ldr	r0, [pc, #88]	; 20e4c <__flatcc_fb_gen_c_json_parser@@Base+0x3250>
   20df0:	ldr	r3, [pc, #88]	; 20e50 <__flatcc_fb_gen_c_json_parser@@Base+0x3254>
   20df4:	mov	r1, r4
   20df8:	movw	r2, #710	; 0x2c6
   20dfc:	add	r0, pc, r0
   20e00:	add	r3, pc, r3
   20e04:	bl	1497c <__assert_fail@plt>
   20e08:	ldr	r0, [pc, #68]	; 20e54 <__flatcc_fb_gen_c_json_parser@@Base+0x3258>
   20e0c:	ldr	r1, [pc, #68]	; 20e58 <__flatcc_fb_gen_c_json_parser@@Base+0x325c>
   20e10:	ldr	r3, [pc, #68]	; 20e5c <__flatcc_fb_gen_c_json_parser@@Base+0x3260>
   20e14:	movw	r2, #719	; 0x2cf
   20e18:	add	r0, pc, r0
   20e1c:	add	r1, pc, r1
   20e20:	add	r3, pc, r3
   20e24:	bl	1497c <__assert_fail@plt>
   20e28:	andeq	r1, r3, pc, lsl #25
   20e2c:	andeq	r1, r3, pc, asr #25
   20e30:	andeq	r1, r3, r7, asr #25
   20e34:	andeq	r1, r3, r6, lsr r9
   20e38:	andeq	r1, r3, r5, ror #25
   20e3c:	ldrdeq	sl, [r4], -ip
   20e40:	ldrdeq	r1, [r3], -r5
   20e44:	andeq	lr, r1, r6, lsr #15
   20e48:	andeq	r1, r3, pc, lsr #3
   20e4c:	andeq	pc, r2, r2, asr r6	; <UNPREDICTABLE>
   20e50:	andeq	r1, r3, r4, asr #25
   20e54:	andeq	r1, r3, r7, ror #2
   20e58:	andeq	r1, r3, pc, ror #2
   20e5c:	andeq	r1, r3, r2, ror #23
   20e60:	ldr	r1, [pc, #4]	; 20e6c <__flatcc_fb_gen_c_json_parser@@Base+0x3270>
   20e64:	add	r1, pc, r1
   20e68:	b	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   20e6c:	andeq	r1, r3, lr, lsr #25
   20e70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20e74:	add	fp, sp, #28
   20e78:	sub	sp, sp, #92	; 0x5c
   20e7c:	ldr	lr, [r1]
   20e80:	ldr	r5, [fp, #8]
   20e84:	str	r2, [sp, #44]	; 0x2c
   20e88:	mvn	r7, #7
   20e8c:	add	r2, lr, r2, lsl #4
   20e90:	sub	r6, r7, r5
   20e94:	add	r7, r5, #8
   20e98:	ldr	r4, [r2, #4]
   20e9c:	cmp	r7, r4
   20ea0:	bgt	211dc <__flatcc_fb_gen_c_json_parser@@Base+0x35e0>
   20ea4:	rsb	r2, r4, #0
   20ea8:	cmp	r6, r2
   20eac:	beq	211dc <__flatcc_fb_gen_c_json_parser@@Base+0x35e0>
   20eb0:	str	r4, [sp, #16]
   20eb4:	str	r6, [sp, #12]
   20eb8:	str	r7, [sp, #20]
   20ebc:	str	r1, [sp, #28]
   20ec0:	str	r0, [sp, #24]
   20ec4:	str	r3, [sp, #36]	; 0x24
   20ec8:	vmov.i64	d17, #0xffffffff00000000
   20ecc:	vmov.i8	d18, #255	; 0xff
   20ed0:	vmov.i32	d19, #56	; 0x00000038
   20ed4:	vmov.i64	q10, #0x00000000000000ff
   20ed8:	vmvn.i32	d16, #1	; 0x00000001
   20edc:	mov	r9, #0
   20ee0:	mov	r7, #0
   20ee4:	mov	r2, #0
   20ee8:	ldr	r1, [sp, #44]	; 0x2c
   20eec:	sub	r0, r3, r1
   20ef0:	mov	r3, #0
   20ef4:	add	r0, r0, r0, lsr #31
   20ef8:	add	r0, r1, r0, asr #1
   20efc:	sub	r1, r5, #1
   20f00:	str	r1, [sp, #40]	; 0x28
   20f04:	mov	r1, #0
   20f08:	str	r1, [sp, #48]	; 0x30
   20f0c:	mov	r1, #0
   20f10:	str	r1, [sp, #52]	; 0x34
   20f14:	str	r0, [sp, #32]
   20f18:	str	r0, [sp, #56]	; 0x38
   20f1c:	str	r5, [fp, #-56]	; 0xffffffc8
   20f20:	str	lr, [sp, #60]	; 0x3c
   20f24:	b	20f54 <__flatcc_fb_gen_c_json_parser@@Base+0x3358>
   20f28:	mov	r2, #0
   20f2c:	ldr	r1, [sp, #48]	; 0x30
   20f30:	ldr	r6, [sp, #52]	; 0x34
   20f34:	eor	r0, r3, r9
   20f38:	ldr	r5, [fp, #-56]	; 0xffffffc8
   20f3c:	ldr	lr, [sp, #60]	; 0x3c
   20f40:	and	r0, r0, r1
   20f44:	eor	r1, r2, r7
   20f48:	and	r1, r1, r6
   20f4c:	orrs	r0, r0, r1
   20f50:	bne	214e4 <__flatcc_fb_gen_c_json_parser@@Base+0x38e8>
   20f54:	ldr	sl, [sp, #56]	; 0x38
   20f58:	ldr	r0, [sp, #44]	; 0x2c
   20f5c:	cmp	sl, r0
   20f60:	ble	21204 <__flatcc_fb_gen_c_json_parser@@Base+0x3608>
   20f64:	sub	r1, sl, #1
   20f68:	mov	r0, r1
   20f6c:	add	r0, lr, r1, lsl #4
   20f70:	str	r1, [sp, #56]	; 0x38
   20f74:	ldr	r0, [r0, #4]
   20f78:	cmp	r0, r5
   20f7c:	blt	210c4 <__flatcc_fb_gen_c_json_parser@@Base+0x34c8>
   20f80:	sub	ip, r0, r5
   20f84:	mov	r0, #8
   20f88:	mov	r9, #0
   20f8c:	cmp	ip, #8
   20f90:	movge	ip, r0
   20f94:	cmp	ip, #0
   20f98:	beq	21084 <__flatcc_fb_gen_c_json_parser@@Base+0x3488>
   20f9c:	ldr	r0, [sp, #56]	; 0x38
   20fa0:	cmp	ip, #1
   20fa4:	mov	r1, ip
   20fa8:	mov	r7, #0
   20fac:	ldr	r4, [lr, r0, lsl #4]
   20fb0:	beq	21040 <__flatcc_fb_gen_c_json_parser@@Base+0x3444>
   20fb4:	vdup.32	d24, ip
   20fb8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   20fbc:	vmov.i32	q11, #0	; 0x00000000
   20fc0:	bic	r8, ip, #1
   20fc4:	sub	r5, fp, #44	; 0x2c
   20fc8:	sub	r1, ip, r8
   20fcc:	mov	r6, r8
   20fd0:	add	r0, r4, r0
   20fd4:	sub	r7, r0, #1
   20fd8:	vadd.i32	d24, d24, d17
   20fdc:	vadd.i32	d25, d24, d18
   20fe0:	vadd.i32	d24, d24, d16
   20fe4:	subs	r6, r6, #2
   20fe8:	vmov.32	r0, d25[0]
   20fec:	vshl.s32	d25, d25, #3
   20ff0:	vsub.i32	d25, d19, d25
   20ff4:	add	r0, r7, r0
   20ff8:	vmovl.u32	q14, d25
   20ffc:	ldrh	r0, [r0]
   21000:	strh	r0, [fp, #-44]	; 0xffffffd4
   21004:	vld1.16	{d26[0]}, [r5 :16]
   21008:	vmovl.u8	q13, d26
   2100c:	vmovl.u16	q13, d26
   21010:	vrev64.32	d26, d26
   21014:	vmovl.u32	q13, d26
   21018:	vand	q13, q13, q10
   2101c:	vshl.u64	q13, q13, q14
   21020:	vorr	q11, q13, q11
   21024:	bne	20fdc <__flatcc_fb_gen_c_json_parser@@Base+0x33e0>
   21028:	vorr	d24, d23, d23
   2102c:	cmp	ip, r8
   21030:	vorr	q11, q11, q12
   21034:	vmov.32	r7, d22[1]
   21038:	vmov.32	r9, d22[0]
   2103c:	beq	21088 <__flatcc_fb_gen_c_json_parser@@Base+0x348c>
   21040:	ldr	r0, [sp, #40]	; 0x28
   21044:	add	r8, r4, r0
   21048:	mov	r0, #64	; 0x40
   2104c:	sub	r6, r0, r1, lsl #3
   21050:	ldrb	r5, [r8, r1]
   21054:	rsb	r4, r6, #32
   21058:	subs	r0, r6, #32
   2105c:	lsr	r4, r5, r4
   21060:	lslpl	r4, r5, r0
   21064:	lsl	r0, r5, r6
   21068:	movwpl	r0, #0
   2106c:	add	r6, r6, #8
   21070:	subs	r1, r1, #1
   21074:	orr	r9, r0, r9
   21078:	orr	r7, r4, r7
   2107c:	bne	21050 <__flatcc_fb_gen_c_json_parser@@Base+0x3454>
   21080:	b	21088 <__flatcc_fb_gen_c_json_parser@@Base+0x348c>
   21084:	mov	r7, #0
   21088:	mov	r0, #64	; 0x40
   2108c:	mvn	r4, #0
   21090:	sub	r0, r0, ip, lsl #3
   21094:	rsb	r1, r0, #32
   21098:	lsr	r1, r4, r1
   2109c:	orr	r5, r1, r4, lsl r0
   210a0:	mov	r1, #32
   210a4:	lsl	r0, r4, r0
   210a8:	sub	r6, r1, ip, lsl #3
   210ac:	cmp	r6, #0
   210b0:	lslpl	r5, r4, r6
   210b4:	movwpl	r0, #0
   210b8:	str	r5, [sp, #52]	; 0x34
   210bc:	str	r0, [sp, #48]	; 0x30
   210c0:	ldr	r5, [fp, #-56]	; 0xffffffc8
   210c4:	add	r0, lr, sl, lsl #4
   210c8:	ldr	ip, [r0, #4]
   210cc:	cmp	ip, r5
   210d0:	blt	20f2c <__flatcc_fb_gen_c_json_parser@@Base+0x3330>
   210d4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   210d8:	mov	r1, #8
   210dc:	mov	r3, #0
   210e0:	sub	r6, ip, r0
   210e4:	cmp	r6, #8
   210e8:	movge	r6, r1
   210ec:	cmp	r6, #0
   210f0:	beq	20f28 <__flatcc_fb_gen_c_json_parser@@Base+0x332c>
   210f4:	ldr	r1, [sp, #60]	; 0x3c
   210f8:	cmp	r6, #1
   210fc:	ldr	r4, [r1, sl, lsl #4]
   21100:	bne	21110 <__flatcc_fb_gen_c_json_parser@@Base+0x3514>
   21104:	mov	r8, r6
   21108:	mov	r2, #0
   2110c:	b	21198 <__flatcc_fb_gen_c_json_parser@@Base+0x359c>
   21110:	vdup.32	d24, r6
   21114:	add	r0, r4, r0
   21118:	vmov.i32	q11, #0	; 0x00000000
   2111c:	sub	r1, fp, #48	; 0x30
   21120:	sub	r2, r0, #1
   21124:	bic	r0, r6, #1
   21128:	sub	r8, r6, r0
   2112c:	mov	r3, r0
   21130:	vadd.i32	d24, d24, d17
   21134:	vadd.i32	d25, d24, d18
   21138:	vadd.i32	d24, d24, d16
   2113c:	subs	r3, r3, #2
   21140:	vmov.32	r5, d25[0]
   21144:	vshl.s32	d25, d25, #3
   21148:	vsub.i32	d25, d19, d25
   2114c:	add	r5, r2, r5
   21150:	vmovl.u32	q14, d25
   21154:	ldrh	r5, [r5]
   21158:	strh	r5, [fp, #-48]	; 0xffffffd0
   2115c:	vld1.16	{d26[0]}, [r1 :16]
   21160:	vmovl.u8	q13, d26
   21164:	vmovl.u16	q13, d26
   21168:	vrev64.32	d26, d26
   2116c:	vmovl.u32	q13, d26
   21170:	vand	q13, q13, q10
   21174:	vshl.u64	q13, q13, q14
   21178:	vorr	q11, q13, q11
   2117c:	bne	21134 <__flatcc_fb_gen_c_json_parser@@Base+0x3538>
   21180:	vorr	d24, d23, d23
   21184:	cmp	r6, r0
   21188:	vorr	q11, q11, q12
   2118c:	vmov.32	r2, d22[1]
   21190:	vmov.32	r3, d22[0]
   21194:	beq	20f2c <__flatcc_fb_gen_c_json_parser@@Base+0x3330>
   21198:	ldr	r0, [sp, #40]	; 0x28
   2119c:	mov	r1, #64	; 0x40
   211a0:	sub	r6, r1, r8, lsl #3
   211a4:	add	r0, r4, r0
   211a8:	ldrb	r5, [r0, r8]
   211ac:	rsb	lr, r6, #32
   211b0:	subs	r4, r6, #32
   211b4:	lsr	r1, r5, lr
   211b8:	lslpl	r1, r5, r4
   211bc:	orr	r2, r1, r2
   211c0:	lsl	r1, r5, r6
   211c4:	movwpl	r1, #0
   211c8:	add	r6, r6, #8
   211cc:	subs	r8, r8, #1
   211d0:	orr	r3, r1, r3
   211d4:	bne	211a8 <__flatcc_fb_gen_c_json_parser@@Base+0x35ac>
   211d8:	b	20f2c <__flatcc_fb_gen_c_json_parser@@Base+0x3330>
   211dc:	ldr	r2, [sp, #44]	; 0x2c
   211e0:	cmp	r3, r2
   211e4:	bne	21504 <__flatcc_fb_gen_c_json_parser@@Base+0x3908>
   211e8:	mov	r2, #0
   211ec:	str	r5, [sp]
   211f0:	str	r2, [sp, #4]
   211f4:	ldr	r2, [sp, #44]	; 0x2c
   211f8:	bl	21dbc <__flatcc_fb_gen_c_json_parser@@Base+0x41c0>
   211fc:	sub	sp, fp, #28
   21200:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21204:	ldr	r2, [sp, #32]
   21208:	vmov.i64	d17, #0xffffffff00000000
   2120c:	vmov.i8	d18, #255	; 0xff
   21210:	vmov.i32	d19, #56	; 0x00000038
   21214:	vmov.i64	q10, #0x00000000000000ff
   21218:	mov	ip, #0
   2121c:	mov	r7, #0
   21220:	mov	r3, #0
   21224:	mov	r1, #0
   21228:	mov	lr, #0
   2122c:	mov	sl, #0
   21230:	b	21258 <__flatcc_fb_gen_c_json_parser@@Base+0x365c>
   21234:	mov	r1, #0
   21238:	ldr	r5, [fp, #-56]	; 0xffffffc8
   2123c:	eor	r0, r3, ip
   21240:	eor	r2, r1, r7
   21244:	and	r0, r0, lr
   21248:	and	r2, r2, sl
   2124c:	orrs	r0, r0, r2
   21250:	mov	r2, r9
   21254:	bne	21538 <__flatcc_fb_gen_c_json_parser@@Base+0x393c>
   21258:	ldr	r0, [sp, #36]	; 0x24
   2125c:	cmp	r2, r0
   21260:	bge	21534 <__flatcc_fb_gen_c_json_parser@@Base+0x3938>
   21264:	ldr	r0, [sp, #60]	; 0x3c
   21268:	add	r0, r0, r2, lsl #4
   2126c:	ldr	r0, [r0, #4]
   21270:	cmp	r0, r5
   21274:	blt	213c0 <__flatcc_fb_gen_c_json_parser@@Base+0x37c4>
   21278:	sub	r8, r0, r5
   2127c:	mov	r0, #8
   21280:	mov	ip, #0
   21284:	cmp	r8, #8
   21288:	movge	r8, r0
   2128c:	cmp	r8, #0
   21290:	beq	21380 <__flatcc_fb_gen_c_json_parser@@Base+0x3784>
   21294:	ldr	r0, [sp, #60]	; 0x3c
   21298:	mov	r9, r2
   2129c:	cmp	r8, #1
   212a0:	mov	r4, r8
   212a4:	mov	r7, #0
   212a8:	ldr	lr, [r0, r2, lsl #4]
   212ac:	beq	2133c <__flatcc_fb_gen_c_json_parser@@Base+0x3740>
   212b0:	vdup.32	d24, r8
   212b4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   212b8:	vmov.i32	q11, #0	; 0x00000000
   212bc:	sub	r2, fp, #32
   212c0:	add	r0, lr, r0
   212c4:	sub	r5, r0, #1
   212c8:	bic	r0, r8, #1
   212cc:	sub	r4, r8, r0
   212d0:	mov	r7, r0
   212d4:	vadd.i32	d24, d24, d17
   212d8:	vadd.i32	d25, d24, d18
   212dc:	vadd.i32	d24, d24, d16
   212e0:	subs	r7, r7, #2
   212e4:	vmov.32	r6, d25[0]
   212e8:	vshl.s32	d25, d25, #3
   212ec:	vsub.i32	d25, d19, d25
   212f0:	add	r6, r5, r6
   212f4:	vmovl.u32	q14, d25
   212f8:	ldrh	r6, [r6]
   212fc:	strh	r6, [fp, #-32]	; 0xffffffe0
   21300:	vld1.16	{d26[0]}, [r2 :16]
   21304:	vmovl.u8	q13, d26
   21308:	vmovl.u16	q13, d26
   2130c:	vrev64.32	d26, d26
   21310:	vmovl.u32	q13, d26
   21314:	vand	q13, q13, q10
   21318:	vshl.u64	q13, q13, q14
   2131c:	vorr	q11, q13, q11
   21320:	bne	212d8 <__flatcc_fb_gen_c_json_parser@@Base+0x36dc>
   21324:	vorr	d24, d23, d23
   21328:	cmp	r8, r0
   2132c:	vorr	q11, q11, q12
   21330:	vmov.32	r7, d22[1]
   21334:	vmov.32	ip, d22[0]
   21338:	beq	21388 <__flatcc_fb_gen_c_json_parser@@Base+0x378c>
   2133c:	ldr	r0, [sp, #40]	; 0x28
   21340:	add	lr, lr, r0
   21344:	mov	r0, #64	; 0x40
   21348:	sub	r6, r0, r4, lsl #3
   2134c:	ldrb	r2, [lr, r4]
   21350:	rsb	r0, r6, #32
   21354:	subs	r5, r6, #32
   21358:	lsr	r0, r2, r0
   2135c:	lslpl	r0, r2, r5
   21360:	orr	r7, r0, r7
   21364:	lsl	r0, r2, r6
   21368:	movwpl	r0, #0
   2136c:	add	r6, r6, #8
   21370:	subs	r4, r4, #1
   21374:	orr	ip, r0, ip
   21378:	bne	2134c <__flatcc_fb_gen_c_json_parser@@Base+0x3750>
   2137c:	b	21388 <__flatcc_fb_gen_c_json_parser@@Base+0x378c>
   21380:	mov	r9, r2
   21384:	mov	r7, #0
   21388:	mov	r0, #64	; 0x40
   2138c:	mvn	r6, #0
   21390:	ldr	r5, [fp, #-56]	; 0xffffffc8
   21394:	sub	r0, r0, r8, lsl #3
   21398:	rsb	r2, r0, #32
   2139c:	lsl	lr, r6, r0
   213a0:	lsr	r2, r6, r2
   213a4:	orr	sl, r2, r6, lsl r0
   213a8:	mov	r2, #32
   213ac:	sub	r2, r2, r8, lsl #3
   213b0:	cmp	r2, #0
   213b4:	lslpl	sl, r6, r2
   213b8:	movwpl	lr, #0
   213bc:	mov	r2, r9
   213c0:	ldr	r0, [sp, #60]	; 0x3c
   213c4:	add	r2, r2, #1
   213c8:	mov	r9, r2
   213cc:	add	r0, r0, r2, lsl #4
   213d0:	ldr	r0, [r0, #4]
   213d4:	cmp	r0, r5
   213d8:	blt	21238 <__flatcc_fb_gen_c_json_parser@@Base+0x363c>
   213dc:	ldr	r1, [fp, #-56]	; 0xffffffc8
   213e0:	mov	r3, #0
   213e4:	sub	r4, r0, r1
   213e8:	mov	r0, #8
   213ec:	cmp	r4, #8
   213f0:	movge	r4, r0
   213f4:	cmp	r4, #0
   213f8:	beq	21234 <__flatcc_fb_gen_c_json_parser@@Base+0x3638>
   213fc:	ldr	r0, [sp, #60]	; 0x3c
   21400:	cmp	r4, #1
   21404:	ldr	r8, [r0, r9, lsl #4]
   21408:	bne	21418 <__flatcc_fb_gen_c_json_parser@@Base+0x381c>
   2140c:	mov	r2, r4
   21410:	mov	r1, #0
   21414:	b	214a0 <__flatcc_fb_gen_c_json_parser@@Base+0x38a4>
   21418:	vdup.32	d24, r4
   2141c:	add	r0, r8, r1
   21420:	vmov.i32	q11, #0	; 0x00000000
   21424:	sub	r6, fp, #36	; 0x24
   21428:	sub	r1, r0, #1
   2142c:	bic	r0, r4, #1
   21430:	sub	r2, r4, r0
   21434:	mov	r3, r0
   21438:	vadd.i32	d24, d24, d17
   2143c:	vadd.i32	d25, d24, d18
   21440:	vadd.i32	d24, d24, d16
   21444:	subs	r3, r3, #2
   21448:	vmov.32	r5, d25[0]
   2144c:	vshl.s32	d25, d25, #3
   21450:	vsub.i32	d25, d19, d25
   21454:	add	r5, r1, r5
   21458:	vmovl.u32	q14, d25
   2145c:	ldrh	r5, [r5]
   21460:	strh	r5, [fp, #-36]	; 0xffffffdc
   21464:	vld1.16	{d26[0]}, [r6 :16]
   21468:	vmovl.u8	q13, d26
   2146c:	vmovl.u16	q13, d26
   21470:	vrev64.32	d26, d26
   21474:	vmovl.u32	q13, d26
   21478:	vand	q13, q13, q10
   2147c:	vshl.u64	q13, q13, q14
   21480:	vorr	q11, q13, q11
   21484:	bne	2143c <__flatcc_fb_gen_c_json_parser@@Base+0x3840>
   21488:	vorr	d24, d23, d23
   2148c:	cmp	r4, r0
   21490:	vorr	q11, q11, q12
   21494:	vmov.32	r1, d22[1]
   21498:	vmov.32	r3, d22[0]
   2149c:	beq	21238 <__flatcc_fb_gen_c_json_parser@@Base+0x363c>
   214a0:	ldr	r0, [sp, #40]	; 0x28
   214a4:	add	r8, r8, r0
   214a8:	mov	r0, #64	; 0x40
   214ac:	sub	r4, r0, r2, lsl #3
   214b0:	ldrb	r5, [r8, r2]
   214b4:	rsb	r6, r4, #32
   214b8:	subs	r0, r4, #32
   214bc:	lsr	r6, r5, r6
   214c0:	lslpl	r6, r5, r0
   214c4:	lsl	r0, r5, r4
   214c8:	movwpl	r0, #0
   214cc:	add	r4, r4, #8
   214d0:	subs	r2, r2, #1
   214d4:	orr	r3, r0, r3
   214d8:	orr	r1, r6, r1
   214dc:	bne	214b0 <__flatcc_fb_gen_c_json_parser@@Base+0x38b4>
   214e0:	b	21238 <__flatcc_fb_gen_c_json_parser@@Base+0x363c>
   214e4:	cmp	ip, r5
   214e8:	bge	2163c <__flatcc_fb_gen_c_json_parser@@Base+0x3a40>
   214ec:	ldr	r9, [sp, #28]
   214f0:	mov	r2, #0
   214f4:	mov	r3, #0
   214f8:	mov	r8, #0
   214fc:	mov	r6, #0
   21500:	b	21880 <__flatcc_fb_gen_c_json_parser@@Base+0x3c84>
   21504:	ldr	r2, [sp, #44]	; 0x2c
   21508:	add	r2, r2, #1
   2150c:	cmp	r2, r3
   21510:	bne	20eb0 <__flatcc_fb_gen_c_json_parser@@Base+0x32b4>
   21514:	add	r2, lr, r3, lsl #4
   21518:	ldr	r2, [r2, #4]
   2151c:	cmp	r7, r2
   21520:	bgt	211e8 <__flatcc_fb_gen_c_json_parser@@Base+0x35ec>
   21524:	rsb	r2, r2, #0
   21528:	cmp	r6, r2
   2152c:	bne	20eb0 <__flatcc_fb_gen_c_json_parser@@Base+0x32b4>
   21530:	b	211e8 <__flatcc_fb_gen_c_json_parser@@Base+0x35ec>
   21534:	add	r2, r2, #1
   21538:	ldr	r9, [sp, #44]	; 0x2c
   2153c:	str	r2, [sp, #32]
   21540:	sub	sl, r2, #1
   21544:	ldr	r7, [sp, #20]
   21548:	ldr	r6, [sp, #60]	; 0x3c
   2154c:	ldr	r1, [sp, #16]
   21550:	cmp	r2, r9
   21554:	ble	215b0 <__flatcc_fb_gen_c_json_parser@@Base+0x39b4>
   21558:	cmp	r7, r1
   2155c:	bgt	21574 <__flatcc_fb_gen_c_json_parser@@Base+0x3978>
   21560:	ldr	r0, [sp, #12]
   21564:	ldr	r9, [sp, #44]	; 0x2c
   21568:	add	r0, r1, r0
   2156c:	cmp	r0, #0
   21570:	bgt	215b0 <__flatcc_fb_gen_c_json_parser@@Base+0x39b4>
   21574:	ldr	r2, [sp, #44]	; 0x2c
   21578:	ldr	r4, [sp, #12]
   2157c:	add	r0, r6, #20
   21580:	mov	r1, r2
   21584:	cmp	r2, sl
   21588:	bge	215a8 <__flatcc_fb_gen_c_json_parser@@Base+0x39ac>
   2158c:	ldr	r3, [r0, r1, lsl #4]
   21590:	add	r2, r1, #1
   21594:	cmp	r7, r3
   21598:	bgt	21580 <__flatcc_fb_gen_c_json_parser@@Base+0x3984>
   2159c:	add	r3, r3, r4
   215a0:	cmp	r3, #1
   215a4:	blt	21580 <__flatcc_fb_gen_c_json_parser@@Base+0x3984>
   215a8:	ldr	r2, [sp, #32]
   215ac:	add	r9, r1, #1
   215b0:	mov	r0, #0
   215b4:	cmp	r9, r2
   215b8:	str	r0, [sp, #56]	; 0x38
   215bc:	bge	21620 <__flatcc_fb_gen_c_json_parser@@Base+0x3a24>
   215c0:	ldr	r0, [sp, #44]	; 0x2c
   215c4:	mov	r2, #0
   215c8:	mov	r1, #0
   215cc:	cmp	r9, r0
   215d0:	ble	215fc <__flatcc_fb_gen_c_json_parser@@Base+0x3a00>
   215d4:	add	r0, r6, r9, lsl #4
   215d8:	mov	r1, #0
   215dc:	ldr	r0, [r0, #-12]
   215e0:	cmp	r7, r0
   215e4:	sub	r0, r0, r5
   215e8:	sub	r0, r0, #8
   215ec:	movwge	r1, #1
   215f0:	clz	r0, r0
   215f4:	lsr	r0, r0, #5
   215f8:	and	r1, r1, r0
   215fc:	add	r0, r6, r9, lsl #4
   21600:	str	r1, [sp, #52]	; 0x34
   21604:	ldr	r0, [r0, #4]
   21608:	cmp	r0, r5
   2160c:	bge	21760 <__flatcc_fb_gen_c_json_parser@@Base+0x3b64>
   21610:	mov	r3, #0
   21614:	mov	r4, #0
   21618:	mov	r8, #0
   2161c:	b	21940 <__flatcc_fb_gen_c_json_parser@@Base+0x3d44>
   21620:	ldr	sl, [pc, #1768]	; 21d10 <__flatcc_fb_gen_c_json_parser@@Base+0x4114>
   21624:	ldr	r5, [sp, #24]
   21628:	ldr	r6, [sp, #36]	; 0x24
   2162c:	mov	r8, #0
   21630:	mov	r7, r9
   21634:	add	sl, pc, sl
   21638:	b	21ac8 <__flatcc_fb_gen_c_json_parser@@Base+0x3ecc>
   2163c:	ldr	r1, [lr, sl, lsl #4]
   21640:	sub	r8, ip, r5
   21644:	ldr	r9, [sp, #28]
   21648:	mov	r2, #0
   2164c:	cmp	r8, #8
   21650:	movge	r8, #8
   21654:	cmp	r8, #0
   21658:	add	r6, r1, r5
   2165c:	beq	2187c <__flatcc_fb_gen_c_json_parser@@Base+0x3c80>
   21660:	cmp	r8, #1
   21664:	mov	r0, r8
   21668:	mov	r3, #0
   2166c:	beq	21710 <__flatcc_fb_gen_c_json_parser@@Base+0x3b14>
   21670:	vdup.32	d20, r8
   21674:	vmov.i64	d17, #0xffffffff00000000
   21678:	vmov.i32	q9, #0	; 0x00000000
   2167c:	vmov.i32	d21, #56	; 0x00000038
   21680:	vmov.i64	q11, #0x00000000000000ff
   21684:	mov	r4, r6
   21688:	sub	r2, r6, #1
   2168c:	bic	r6, r8, #1
   21690:	sub	r3, fp, #52	; 0x34
   21694:	sub	r0, r8, r6
   21698:	mov	r7, r6
   2169c:	vadd.i32	d17, d20, d17
   216a0:	vmov.i8	d20, #255	; 0xff
   216a4:	vadd.i32	d24, d17, d20
   216a8:	vadd.i32	d17, d17, d16
   216ac:	subs	r7, r7, #2
   216b0:	vmov.32	r5, d24[0]
   216b4:	vshl.s32	d24, d24, #3
   216b8:	vsub.i32	d24, d21, d24
   216bc:	add	r5, r2, r5
   216c0:	ldrh	r5, [r5]
   216c4:	strh	r5, [fp, #-52]	; 0xffffffcc
   216c8:	vld1.16	{d25[0]}, [r3 :16]
   216cc:	vmovl.u8	q13, d25
   216d0:	vmovl.u16	q13, d26
   216d4:	vrev64.32	d25, d26
   216d8:	vmovl.u32	q13, d25
   216dc:	vmovl.u32	q12, d24
   216e0:	vand	q13, q13, q11
   216e4:	vshl.u64	q12, q13, q12
   216e8:	vorr	q9, q12, q9
   216ec:	bne	216a4 <__flatcc_fb_gen_c_json_parser@@Base+0x3aa8>
   216f0:	vorr	d16, d19, d19
   216f4:	ldr	r5, [fp, #-56]	; 0xffffffc8
   216f8:	cmp	r8, r6
   216fc:	mov	r6, r4
   21700:	vorr	q8, q9, q8
   21704:	vmov.32	r3, d16[1]
   21708:	vmov.32	r2, d16[0]
   2170c:	beq	21880 <__flatcc_fb_gen_c_json_parser@@Base+0x3c84>
   21710:	mov	r7, #64	; 0x40
   21714:	add	r1, r1, r5
   21718:	mov	ip, r6
   2171c:	sub	r7, r7, r0, lsl #3
   21720:	sub	r1, r1, #1
   21724:	ldrb	r6, [r1, r0]
   21728:	rsb	r5, r7, #32
   2172c:	subs	r4, r7, #32
   21730:	lsr	r5, r6, r5
   21734:	lslpl	r5, r6, r4
   21738:	lsl	r6, r6, r7
   2173c:	movwpl	r6, #0
   21740:	add	r7, r7, #8
   21744:	subs	r0, r0, #1
   21748:	orr	r2, r6, r2
   2174c:	orr	r3, r5, r3
   21750:	bne	21724 <__flatcc_fb_gen_c_json_parser@@Base+0x3b28>
   21754:	ldr	r5, [fp, #-56]	; 0xffffffc8
   21758:	mov	r6, ip
   2175c:	b	21880 <__flatcc_fb_gen_c_json_parser@@Base+0x3c84>
   21760:	ldr	lr, [r6, r9, lsl #4]
   21764:	sub	r4, r0, r5
   21768:	mov	r2, #0
   2176c:	cmp	r4, #8
   21770:	movge	r4, #8
   21774:	cmp	r4, #0
   21778:	add	r8, lr, r5
   2177c:	beq	2193c <__flatcc_fb_gen_c_json_parser@@Base+0x3d40>
   21780:	cmp	r4, #1
   21784:	mov	r0, r4
   21788:	mov	r3, #0
   2178c:	beq	2182c <__flatcc_fb_gen_c_json_parser@@Base+0x3c30>
   21790:	vdup.32	d20, r4
   21794:	vmov.i64	d17, #0xffffffff00000000
   21798:	vmov.i32	q9, #0	; 0x00000000
   2179c:	vmov.i32	d21, #56	; 0x00000038
   217a0:	vmov.i64	q11, #0x00000000000000ff
   217a4:	bic	ip, r4, #1
   217a8:	sub	r2, r8, #1
   217ac:	mov	r6, r4
   217b0:	sub	r3, fp, #40	; 0x28
   217b4:	sub	r0, r4, ip
   217b8:	mov	r4, ip
   217bc:	vadd.i32	d17, d20, d17
   217c0:	vmov.i8	d20, #255	; 0xff
   217c4:	vadd.i32	d24, d17, d20
   217c8:	vadd.i32	d17, d17, d16
   217cc:	subs	r4, r4, #2
   217d0:	vmov.32	r1, d24[0]
   217d4:	vshl.s32	d24, d24, #3
   217d8:	vsub.i32	d24, d21, d24
   217dc:	add	r1, r2, r1
   217e0:	ldrh	r1, [r1]
   217e4:	strh	r1, [fp, #-40]	; 0xffffffd8
   217e8:	vld1.16	{d25[0]}, [r3 :16]
   217ec:	vmovl.u8	q13, d25
   217f0:	vmovl.u16	q13, d26
   217f4:	vrev64.32	d25, d26
   217f8:	vmovl.u32	q13, d25
   217fc:	vmovl.u32	q12, d24
   21800:	vand	q13, q13, q11
   21804:	vshl.u64	q12, q13, q12
   21808:	vorr	q9, q12, q9
   2180c:	bne	217c4 <__flatcc_fb_gen_c_json_parser@@Base+0x3bc8>
   21810:	vorr	d16, d19, d19
   21814:	mov	r4, r6
   21818:	cmp	r6, ip
   2181c:	vorr	q8, q9, q8
   21820:	vmov.32	r3, d16[1]
   21824:	vmov.32	r2, d16[0]
   21828:	beq	21940 <__flatcc_fb_gen_c_json_parser@@Base+0x3d44>
   2182c:	mov	r1, #64	; 0x40
   21830:	mov	ip, r4
   21834:	sub	r4, r1, r0, lsl #3
   21838:	add	r1, lr, r5
   2183c:	sub	r1, r1, #1
   21840:	ldrb	r7, [r1, r0]
   21844:	rsb	r5, r4, #32
   21848:	subs	r6, r4, #32
   2184c:	lsr	r5, r7, r5
   21850:	lslpl	r5, r7, r6
   21854:	lsl	r7, r7, r4
   21858:	movwpl	r7, #0
   2185c:	add	r4, r4, #8
   21860:	subs	r0, r0, #1
   21864:	orr	r2, r7, r2
   21868:	orr	r3, r5, r3
   2186c:	bne	21840 <__flatcc_fb_gen_c_json_parser@@Base+0x3c44>
   21870:	ldr	r7, [sp, #20]
   21874:	mov	r4, ip
   21878:	b	21940 <__flatcc_fb_gen_c_json_parser@@Base+0x3d44>
   2187c:	mov	r3, #0
   21880:	str	r8, [sp]
   21884:	str	r6, [sp, #4]
   21888:	ldr	r1, [pc, #1140]	; 21d04 <__flatcc_fb_gen_c_json_parser@@Base+0x4108>
   2188c:	ldr	r4, [sp, #24]
   21890:	add	r1, pc, r1
   21894:	mov	r0, r4
   21898:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   2189c:	ldr	r0, [r4, #220]	; 0xdc
   218a0:	mov	r1, r9
   218a4:	add	r0, r0, #1
   218a8:	str	r0, [r4, #220]	; 0xdc
   218ac:	str	r5, [sp]
   218b0:	mov	r0, r4
   218b4:	ldr	r2, [sp, #44]	; 0x2c
   218b8:	ldr	r3, [sp, #56]	; 0x38
   218bc:	bl	20e70 <__flatcc_fb_gen_c_json_parser@@Base+0x3274>
   218c0:	ldr	r0, [r4, #220]	; 0xdc
   218c4:	cmp	r0, #0
   218c8:	beq	21c64 <__flatcc_fb_gen_c_json_parser@@Base+0x4068>
   218cc:	sub	r0, r0, #1
   218d0:	mov	r2, r8
   218d4:	mov	r3, r6
   218d8:	str	r0, [r4, #220]	; 0xdc
   218dc:	mov	r0, r4
   218e0:	ldr	r1, [pc, #1056]	; 21d08 <__flatcc_fb_gen_c_json_parser@@Base+0x410c>
   218e4:	add	r1, pc, r1
   218e8:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   218ec:	ldr	r0, [r4, #220]	; 0xdc
   218f0:	mov	r1, r9
   218f4:	mov	r2, sl
   218f8:	add	r0, r0, #1
   218fc:	str	r0, [r4, #220]	; 0xdc
   21900:	str	r5, [sp]
   21904:	mov	r0, r4
   21908:	ldr	r3, [sp, #36]	; 0x24
   2190c:	bl	20e70 <__flatcc_fb_gen_c_json_parser@@Base+0x3274>
   21910:	ldr	r0, [r4, #220]	; 0xdc
   21914:	cmp	r0, #0
   21918:	beq	21c84 <__flatcc_fb_gen_c_json_parser@@Base+0x4088>
   2191c:	sub	r0, r0, #1
   21920:	mov	r2, r8
   21924:	mov	r3, r6
   21928:	str	r0, [r4, #220]	; 0xdc
   2192c:	mov	r0, r4
   21930:	ldr	r1, [pc, #980]	; 21d0c <__flatcc_fb_gen_c_json_parser@@Base+0x4110>
   21934:	add	r1, pc, r1
   21938:	b	21c50 <__flatcc_fb_gen_c_json_parser@@Base+0x4054>
   2193c:	mov	r3, #0
   21940:	stm	sp, {r4, r8}
   21944:	ldr	r1, [pc, #968]	; 21d14 <__flatcc_fb_gen_c_json_parser@@Base+0x4118>
   21948:	ldr	r5, [sp, #24]
   2194c:	add	r1, pc, r1
   21950:	mov	r0, r5
   21954:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   21958:	ldr	r0, [r5, #220]	; 0xdc
   2195c:	add	r0, r0, #1
   21960:	str	r0, [r5, #220]	; 0xdc
   21964:	ldr	r0, [sp, #52]	; 0x34
   21968:	cmp	r0, #0
   2196c:	beq	21a44 <__flatcc_fb_gen_c_json_parser@@Base+0x3e48>
   21970:	ldr	r1, [pc, #928]	; 21d18 <__flatcc_fb_gen_c_json_parser@@Base+0x411c>
   21974:	mov	r0, r5
   21978:	mov	r2, r4
   2197c:	mov	r3, r8
   21980:	add	r1, pc, r1
   21984:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   21988:	mov	r6, r4
   2198c:	ldr	r4, [sp, #28]
   21990:	sub	r7, r9, #1
   21994:	ldm	r4, {r0, ip}
   21998:	ldr	r1, [r4, #12]
   2199c:	add	r0, r0, r7, lsl #4
   219a0:	ldr	r2, [r0, #8]
   219a4:	ldr	r3, [r0, #12]
   219a8:	mov	r0, #8
   219ac:	str	r0, [sp]
   219b0:	mov	r0, r5
   219b4:	blx	ip
   219b8:	ldr	r1, [pc, #860]	; 21d1c <__flatcc_fb_gen_c_json_parser@@Base+0x4120>
   219bc:	mov	r0, r5
   219c0:	mov	r2, r6
   219c4:	mov	r3, r8
   219c8:	str	r6, [sp, #60]	; 0x3c
   219cc:	add	r1, pc, r1
   219d0:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   219d4:	ldr	r1, [pc, #836]	; 21d20 <__flatcc_fb_gen_c_json_parser@@Base+0x4124>
   219d8:	mov	r0, r5
   219dc:	add	r1, pc, r1
   219e0:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   219e4:	ldr	r1, [pc, #824]	; 21d24 <__flatcc_fb_gen_c_json_parser@@Base+0x4128>
   219e8:	mov	r0, r5
   219ec:	add	r1, pc, r1
   219f0:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   219f4:	ldr	r0, [sp, #20]
   219f8:	mov	r1, r4
   219fc:	mov	r2, r9
   21a00:	mov	r3, sl
   21a04:	str	r0, [sp]
   21a08:	mov	r0, r5
   21a0c:	bl	20e70 <__flatcc_fb_gen_c_json_parser@@Base+0x3274>
   21a10:	ldr	r0, [r5, #220]	; 0xdc
   21a14:	cmp	r0, #0
   21a18:	beq	21ce4 <__flatcc_fb_gen_c_json_parser@@Base+0x40e8>
   21a1c:	sub	r0, r0, #1
   21a20:	mov	r3, r8
   21a24:	str	r0, [r5, #220]	; 0xdc
   21a28:	mov	r0, r5
   21a2c:	ldr	r1, [pc, #756]	; 21d28 <__flatcc_fb_gen_c_json_parser@@Base+0x412c>
   21a30:	ldr	r4, [sp, #60]	; 0x3c
   21a34:	add	r1, pc, r1
   21a38:	mov	r2, r4
   21a3c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   21a40:	b	21a80 <__flatcc_fb_gen_c_json_parser@@Base+0x3e84>
   21a44:	ldr	r1, [pc, #736]	; 21d2c <__flatcc_fb_gen_c_json_parser@@Base+0x4130>
   21a48:	mov	r0, r5
   21a4c:	add	r1, pc, r1
   21a50:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   21a54:	ldr	r1, [pc, #724]	; 21d30 <__flatcc_fb_gen_c_json_parser@@Base+0x4134>
   21a58:	mov	r0, r5
   21a5c:	add	r1, pc, r1
   21a60:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   21a64:	str	r7, [sp]
   21a68:	mov	r0, r5
   21a6c:	mov	r2, r9
   21a70:	mov	r3, sl
   21a74:	ldr	r1, [sp, #28]
   21a78:	bl	20e70 <__flatcc_fb_gen_c_json_parser@@Base+0x3274>
   21a7c:	mov	r7, r9
   21a80:	ldr	r0, [r5, #220]	; 0xdc
   21a84:	ldr	r6, [sp, #36]	; 0x24
   21a88:	mov	sl, r8
   21a8c:	cmp	r0, #0
   21a90:	beq	21ca4 <__flatcc_fb_gen_c_json_parser@@Base+0x40a8>
   21a94:	sub	r0, r0, #1
   21a98:	mov	r2, r4
   21a9c:	mov	r3, sl
   21aa0:	mov	r8, r4
   21aa4:	str	r0, [r5, #220]	; 0xdc
   21aa8:	mov	r0, r5
   21aac:	ldr	r1, [pc, #640]	; 21d34 <__flatcc_fb_gen_c_json_parser@@Base+0x4138>
   21ab0:	add	r1, pc, r1
   21ab4:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   21ab8:	ldr	r0, [r5, #220]	; 0xdc
   21abc:	ldr	r2, [sp, #32]
   21ac0:	add	r0, r0, #1
   21ac4:	str	r0, [r5, #220]	; 0xdc
   21ac8:	ldr	r0, [sp, #44]	; 0x2c
   21acc:	mov	r1, #0
   21ad0:	cmp	r7, r0
   21ad4:	mov	r0, #0
   21ad8:	movwgt	r0, #1
   21adc:	cmp	r2, r6
   21ae0:	movwle	r1, #1
   21ae4:	and	r4, r1, r0
   21ae8:	cmp	r4, #1
   21aec:	bne	21b04 <__flatcc_fb_gen_c_json_parser@@Base+0x3f08>
   21af0:	ldr	r1, [sp, #28]
   21af4:	ldr	r0, [r1, #24]
   21af8:	add	r0, r0, #1
   21afc:	str	r0, [sp, #56]	; 0x38
   21b00:	str	r0, [r1, #24]
   21b04:	ldr	r0, [sp, #44]	; 0x2c
   21b08:	cmp	r7, r0
   21b0c:	ble	21b90 <__flatcc_fb_gen_c_json_parser@@Base+0x3f94>
   21b10:	ldr	r0, [fp, #-56]	; 0xffffffc8
   21b14:	sub	r3, r7, #1
   21b18:	str	r0, [sp]
   21b1c:	ldr	r0, [sp, #56]	; 0x38
   21b20:	str	r0, [sp, #4]
   21b24:	mov	r0, r5
   21b28:	ldr	r1, [sp, #28]
   21b2c:	ldr	r2, [sp, #44]	; 0x2c
   21b30:	bl	21dbc <__flatcc_fb_gen_c_json_parser@@Base+0x41c0>
   21b34:	ldr	r2, [sp, #32]
   21b38:	cmp	r4, #0
   21b3c:	beq	21b90 <__flatcc_fb_gen_c_json_parser@@Base+0x3f94>
   21b40:	ldr	r1, [pc, #496]	; 21d38 <__flatcc_fb_gen_c_json_parser@@Base+0x413c>
   21b44:	str	sl, [sp, #60]	; 0x3c
   21b48:	mov	r0, r5
   21b4c:	ldr	sl, [sp, #56]	; 0x38
   21b50:	add	r1, pc, r1
   21b54:	mov	r2, sl
   21b58:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   21b5c:	ldr	r0, [r5, #220]	; 0xdc
   21b60:	mov	r1, #0
   21b64:	mov	r2, sl
   21b68:	str	r1, [r5, #220]	; 0xdc
   21b6c:	str	r0, [r5, #228]	; 0xe4
   21b70:	mov	r0, r5
   21b74:	ldr	r1, [pc, #448]	; 21d3c <__flatcc_fb_gen_c_json_parser@@Base+0x4140>
   21b78:	ldr	sl, [sp, #60]	; 0x3c
   21b7c:	add	r1, pc, r1
   21b80:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   21b84:	ldr	r0, [r5, #228]	; 0xe4
   21b88:	ldr	r2, [sp, #32]
   21b8c:	str	r0, [r5, #220]	; 0xdc
   21b90:	cmp	r2, r6
   21b94:	ble	21bbc <__flatcc_fb_gen_c_json_parser@@Base+0x3fc0>
   21b98:	ldr	r0, [sp, #44]	; 0x2c
   21b9c:	cmp	r7, r0
   21ba0:	bgt	21bd4 <__flatcc_fb_gen_c_json_parser@@Base+0x3fd8>
   21ba4:	ldr	r0, [sp, #28]
   21ba8:	ldr	r1, [r0, #8]
   21bac:	mov	r0, r5
   21bb0:	blx	r1
   21bb4:	mov	r4, r8
   21bb8:	b	21c1c <__flatcc_fb_gen_c_json_parser@@Base+0x4020>
   21bbc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   21bc0:	mov	r3, r6
   21bc4:	str	r0, [sp]
   21bc8:	mov	r0, r5
   21bcc:	ldr	r1, [sp, #28]
   21bd0:	bl	20e70 <__flatcc_fb_gen_c_json_parser@@Base+0x3274>
   21bd4:	cmp	r4, #0
   21bd8:	mov	r4, r8
   21bdc:	beq	21c1c <__flatcc_fb_gen_c_json_parser@@Base+0x4020>
   21be0:	ldr	r0, [r5, #220]	; 0xdc
   21be4:	mov	r1, #0
   21be8:	str	r1, [r5, #220]	; 0xdc
   21bec:	str	r0, [r5, #228]	; 0xe4
   21bf0:	mov	r0, r5
   21bf4:	ldr	r1, [pc, #324]	; 21d40 <__flatcc_fb_gen_c_json_parser@@Base+0x4144>
   21bf8:	ldr	r2, [sp, #56]	; 0x38
   21bfc:	add	r1, pc, r1
   21c00:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   21c04:	ldr	r0, [r5, #228]	; 0xe4
   21c08:	str	r0, [r5, #220]	; 0xdc
   21c0c:	mov	r0, r5
   21c10:	ldr	r1, [pc, #300]	; 21d44 <__flatcc_fb_gen_c_json_parser@@Base+0x4148>
   21c14:	add	r1, pc, r1
   21c18:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   21c1c:	ldr	r0, [sp, #32]
   21c20:	cmp	r9, r0
   21c24:	bge	21c5c <__flatcc_fb_gen_c_json_parser@@Base+0x4060>
   21c28:	ldr	r0, [r5, #220]	; 0xdc
   21c2c:	cmp	r0, #0
   21c30:	beq	21cc4 <__flatcc_fb_gen_c_json_parser@@Base+0x40c8>
   21c34:	sub	r0, r0, #1
   21c38:	mov	r2, r4
   21c3c:	mov	r3, sl
   21c40:	str	r0, [r5, #220]	; 0xdc
   21c44:	mov	r0, r5
   21c48:	ldr	r1, [pc, #248]	; 21d48 <__flatcc_fb_gen_c_json_parser@@Base+0x414c>
   21c4c:	add	r1, pc, r1
   21c50:	sub	sp, fp, #28
   21c54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21c58:	b	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   21c5c:	sub	sp, fp, #28
   21c60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21c64:	ldr	r0, [pc, #224]	; 21d4c <__flatcc_fb_gen_c_json_parser@@Base+0x4150>
   21c68:	ldr	r1, [pc, #224]	; 21d50 <__flatcc_fb_gen_c_json_parser@@Base+0x4154>
   21c6c:	ldr	r3, [pc, #224]	; 21d54 <__flatcc_fb_gen_c_json_parser@@Base+0x4158>
   21c70:	movw	r2, #973	; 0x3cd
   21c74:	add	r0, pc, r0
   21c78:	add	r1, pc, r1
   21c7c:	add	r3, pc, r3
   21c80:	bl	1497c <__assert_fail@plt>
   21c84:	ldr	r0, [pc, #204]	; 21d58 <__flatcc_fb_gen_c_json_parser@@Base+0x415c>
   21c88:	ldr	r1, [pc, #204]	; 21d5c <__flatcc_fb_gen_c_json_parser@@Base+0x4160>
   21c8c:	ldr	r3, [pc, #204]	; 21d60 <__flatcc_fb_gen_c_json_parser@@Base+0x4164>
   21c90:	movw	r2, #975	; 0x3cf
   21c94:	add	r0, pc, r0
   21c98:	add	r1, pc, r1
   21c9c:	add	r3, pc, r3
   21ca0:	bl	1497c <__assert_fail@plt>
   21ca4:	ldr	r0, [pc, #196]	; 21d70 <__flatcc_fb_gen_c_json_parser@@Base+0x4174>
   21ca8:	ldr	r1, [pc, #196]	; 21d74 <__flatcc_fb_gen_c_json_parser@@Base+0x4178>
   21cac:	ldr	r3, [pc, #196]	; 21d78 <__flatcc_fb_gen_c_json_parser@@Base+0x417c>
   21cb0:	movw	r2, #1044	; 0x414
   21cb4:	add	r0, pc, r0
   21cb8:	add	r1, pc, r1
   21cbc:	add	r3, pc, r3
   21cc0:	bl	1497c <__assert_fail@plt>
   21cc4:	ldr	r0, [pc, #176]	; 21d7c <__flatcc_fb_gen_c_json_parser@@Base+0x4180>
   21cc8:	ldr	r1, [pc, #176]	; 21d80 <__flatcc_fb_gen_c_json_parser@@Base+0x4184>
   21ccc:	ldr	r3, [pc, #176]	; 21d84 <__flatcc_fb_gen_c_json_parser@@Base+0x4188>
   21cd0:	mov	r2, #1072	; 0x430
   21cd4:	add	r0, pc, r0
   21cd8:	add	r1, pc, r1
   21cdc:	add	r3, pc, r3
   21ce0:	bl	1497c <__assert_fail@plt>
   21ce4:	ldr	r0, [pc, #120]	; 21d64 <__flatcc_fb_gen_c_json_parser@@Base+0x4168>
   21ce8:	ldr	r1, [pc, #120]	; 21d68 <__flatcc_fb_gen_c_json_parser@@Base+0x416c>
   21cec:	ldr	r3, [pc, #120]	; 21d6c <__flatcc_fb_gen_c_json_parser@@Base+0x4170>
   21cf0:	mov	r2, #1040	; 0x410
   21cf4:	add	r0, pc, r0
   21cf8:	add	r1, pc, r1
   21cfc:	add	r3, pc, r3
   21d00:	bl	1497c <__assert_fail@plt>
   21d04:	muleq	r3, r4, r2
   21d08:	muleq	r3, ip, r2
   21d0c:	andeq	r1, r3, r9, ror #4
   21d10:	andeq	lr, r1, sl, rrx
   21d14:	andeq	r1, r3, r7, ror #4
   21d18:	andeq	r1, r3, fp, asr r2
   21d1c:	andeq	r1, r3, pc, lsr #4
   21d20:	andeq	r1, r3, fp, lsr r2
   21d24:	andeq	r0, r3, r5, lsl #31
   21d28:	andeq	r1, r3, sp, ror #3
   21d2c:	andeq	r1, r3, fp, asr #3
   21d30:	andeq	r0, r3, r5, lsl pc
   21d34:	andeq	r1, r3, lr, lsl #3
   21d38:	andeq	r1, r3, ip, lsl #2
   21d3c:	strdeq	r1, [r3], -r6
   21d40:	andeq	r1, r3, r3, ror r0
   21d44:	andeq	r1, r3, r9, rrx
   21d48:	andeq	r1, r3, sl, lsr r0
   21d4c:	andeq	r0, r3, fp, lsl #6
   21d50:	andeq	r0, r3, r3, lsl r3
   21d54:	andeq	r0, r3, lr, asr #29
   21d58:	andeq	r0, r3, fp, ror #5
   21d5c:	strdeq	r0, [r3], -r3
   21d60:	andeq	r0, r3, lr, lsr #29
   21d64:	andeq	r0, r3, fp, lsl #5
   21d68:	muleq	r3, r3, r2
   21d6c:	andeq	r0, r3, lr, asr #28
   21d70:	andeq	r0, r3, fp, asr #5
   21d74:	ldrdeq	r0, [r3], -r3
   21d78:	andeq	r0, r3, lr, lsl #29
   21d7c:	andeq	r0, r3, fp, lsr #5
   21d80:			; <UNDEFINED> instruction: 0x000302b3
   21d84:	andeq	r0, r3, lr, ror #28
   21d88:	push	{r4, r5, fp, lr}
   21d8c:	add	fp, sp, #8
   21d90:	ldm	r1, {r3, r4}
   21d94:	ldm	r0, {r1, r5}
   21d98:	cmp	r5, r4
   21d9c:	mov	r2, r5
   21da0:	movgt	r2, r4
   21da4:	mov	r0, r1
   21da8:	mov	r1, r3
   21dac:	bl	14820 <memcmp@plt>
   21db0:	cmp	r0, #0
   21db4:	subeq	r0, r5, r4
   21db8:	pop	{r4, r5, fp, pc}
   21dbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21dc0:	add	fp, sp, #28
   21dc4:	sub	sp, sp, #52	; 0x34
   21dc8:	sub	r5, r3, r2
   21dcc:	mov	r9, r0
   21dd0:	mov	sl, r1
   21dd4:	ldr	r1, [r1]
   21dd8:	str	r3, [sp, #32]
   21ddc:	mov	r7, r2
   21de0:	add	r0, r5, #1
   21de4:	ldr	r4, [fp, #8]
   21de8:	add	r0, r0, r0, lsr #31
   21dec:	add	r3, r2, r0, asr #1
   21df0:	ldr	r2, [fp, #12]
   21df4:	add	r0, r1, r3, lsl #4
   21df8:	ldr	r0, [r0, #4]
   21dfc:	str	r2, [sp, #40]	; 0x28
   21e00:	str	r3, [fp, #-36]	; 0xffffffdc
   21e04:	str	r4, [sp, #36]	; 0x24
   21e08:	str	r5, [sp, #28]
   21e0c:	cmp	r0, r4
   21e10:	bge	21e30 <__flatcc_fb_gen_c_json_parser@@Base+0x4234>
   21e14:	mov	r4, #0
   21e18:	mov	r8, #0
   21e1c:	mov	r2, #0
   21e20:	mov	r3, #0
   21e24:	mov	r6, #0
   21e28:	mov	r5, #0
   21e2c:	b	21fbc <__flatcc_fb_gen_c_json_parser@@Base+0x43c0>
   21e30:	ldr	lr, [r1, r3, lsl #4]
   21e34:	sub	ip, r0, r4
   21e38:	mov	r2, #0
   21e3c:	cmp	ip, #8
   21e40:	mov	r8, ip
   21e44:	movge	r8, #8
   21e48:	cmp	r8, #0
   21e4c:	add	r4, lr, r4
   21e50:	beq	21fa8 <__flatcc_fb_gen_c_json_parser@@Base+0x43ac>
   21e54:	cmp	r8, #1
   21e58:	mov	r1, r8
   21e5c:	mov	r3, #0
   21e60:	str	r7, [sp, #20]
   21e64:	str	r4, [sp, #24]
   21e68:	beq	21f08 <__flatcc_fb_gen_c_json_parser@@Base+0x430c>
   21e6c:	vdup.32	d19, r8
   21e70:	vmov.i64	d18, #0xffffffff00000000
   21e74:	ldr	r0, [sp, #24]
   21e78:	vmov.i32	q8, #0	; 0x00000000
   21e7c:	vmov.i32	d20, #56	; 0x00000038
   21e80:	vmov.i64	q11, #0x00000000000000ff
   21e84:	vmvn.i32	d21, #1	; 0x00000001
   21e88:	sub	r3, fp, #32
   21e8c:	sub	r2, r0, #1
   21e90:	bic	r0, r8, #1
   21e94:	sub	r1, r8, r0
   21e98:	mov	r5, r0
   21e9c:	vadd.i32	d18, d19, d18
   21ea0:	vmov.i8	d19, #255	; 0xff
   21ea4:	vadd.i32	d24, d18, d19
   21ea8:	vadd.i32	d18, d18, d21
   21eac:	subs	r5, r5, #2
   21eb0:	vmov.32	r6, d24[0]
   21eb4:	vshl.s32	d24, d24, #3
   21eb8:	vsub.i32	d24, d20, d24
   21ebc:	add	r6, r2, r6
   21ec0:	ldrh	r6, [r6]
   21ec4:	strh	r6, [fp, #-32]	; 0xffffffe0
   21ec8:	vld1.16	{d25[0]}, [r3 :16]
   21ecc:	vmovl.u8	q13, d25
   21ed0:	vmovl.u16	q13, d26
   21ed4:	vrev64.32	d25, d26
   21ed8:	vmovl.u32	q13, d25
   21edc:	vmovl.u32	q12, d24
   21ee0:	vand	q13, q13, q11
   21ee4:	vshl.u64	q12, q13, q12
   21ee8:	vorr	q8, q12, q8
   21eec:	bne	21ea4 <__flatcc_fb_gen_c_json_parser@@Base+0x42a8>
   21ef0:	vorr	d18, d17, d17
   21ef4:	cmp	r8, r0
   21ef8:	vorr	q8, q8, q9
   21efc:	vmov.32	r3, d16[1]
   21f00:	vmov.32	r2, d16[0]
   21f04:	beq	21f4c <__flatcc_fb_gen_c_json_parser@@Base+0x4350>
   21f08:	ldr	r0, [sp, #36]	; 0x24
   21f0c:	mov	r6, #64	; 0x40
   21f10:	sub	r5, r6, r1, lsl #3
   21f14:	add	r6, lr, r0
   21f18:	sub	r6, r6, #1
   21f1c:	ldrb	r0, [r6, r1]
   21f20:	rsb	r7, r5, #32
   21f24:	subs	r4, r5, #32
   21f28:	lsr	r7, r0, r7
   21f2c:	lslpl	r7, r0, r4
   21f30:	lsl	r0, r0, r5
   21f34:	movwpl	r0, #0
   21f38:	add	r5, r5, #8
   21f3c:	subs	r1, r1, #1
   21f40:	orr	r2, r0, r2
   21f44:	orr	r3, r7, r3
   21f48:	bne	21f1c <__flatcc_fb_gen_c_json_parser@@Base+0x4320>
   21f4c:	mov	r0, #32
   21f50:	mov	r1, #64	; 0x40
   21f54:	mvn	r6, #0
   21f58:	sub	r0, r0, r8, lsl #3
   21f5c:	sub	r1, r1, r8, lsl #3
   21f60:	rsb	r7, r1, #32
   21f64:	cmp	r0, #0
   21f68:	ror	r5, r6, r7
   21f6c:	lslpl	r5, r6, r0
   21f70:	lsl	r6, r6, r1
   21f74:	movwpl	r6, #0
   21f78:	cmp	ip, #8
   21f7c:	blt	21fb0 <__flatcc_fb_gen_c_json_parser@@Base+0x43b4>
   21f80:	str	r8, [sp]
   21f84:	mov	r0, r9
   21f88:	ldr	r4, [sp, #24]
   21f8c:	str	r4, [sp, #4]
   21f90:	ldr	r1, [pc, #816]	; 222c8 <__flatcc_fb_gen_c_json_parser@@Base+0x46cc>
   21f94:	add	r1, pc, r1
   21f98:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   21f9c:	ldr	r7, [sp, #20]
   21fa0:	mov	r8, #8
   21fa4:	b	21fdc <__flatcc_fb_gen_c_json_parser@@Base+0x43e0>
   21fa8:	mov	r3, #0
   21fac:	b	21fbc <__flatcc_fb_gen_c_json_parser@@Base+0x43c0>
   21fb0:	ldr	r4, [sp, #24]
   21fb4:	ldr	r7, [sp, #20]
   21fb8:	mov	r8, ip
   21fbc:	stm	sp, {r2, r3, r8}
   21fc0:	str	r4, [sp, #12]
   21fc4:	mov	r0, r9
   21fc8:	mov	r2, r6
   21fcc:	mov	r3, r5
   21fd0:	ldr	r1, [pc, #716]	; 222a4 <__flatcc_fb_gen_c_json_parser@@Base+0x46a8>
   21fd4:	add	r1, pc, r1
   21fd8:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   21fdc:	ldr	r0, [r9, #220]	; 0xdc
   21fe0:	ldr	r5, [sp, #40]	; 0x28
   21fe4:	ldr	r6, [fp, #-36]	; 0xffffffdc
   21fe8:	ldr	r3, [sp, #32]
   21fec:	add	r0, r0, #1
   21ff0:	str	r0, [r9, #220]	; 0xdc
   21ff4:	ldr	r0, [sp, #28]
   21ff8:	add	r0, r0, #2
   21ffc:	cmp	r0, #2
   22000:	bhi	22044 <__flatcc_fb_gen_c_json_parser@@Base+0x4448>
   22004:	ldm	sl, {r0, r7}
   22008:	ldr	r1, [sl, #12]
   2200c:	add	r0, r0, r6, lsl #4
   22010:	ldr	r2, [r0, #8]
   22014:	ldr	r3, [r0, #12]
   22018:	mov	r0, r9
   2201c:	str	r8, [sp]
   22020:	blx	r7
   22024:	cmp	r5, #1
   22028:	blt	220ac <__flatcc_fb_gen_c_json_parser@@Base+0x44b0>
   2202c:	ldr	r1, [pc, #628]	; 222a8 <__flatcc_fb_gen_c_json_parser@@Base+0x46ac>
   22030:	mov	r0, r9
   22034:	mov	r2, r5
   22038:	add	r1, pc, r1
   2203c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   22040:	b	220b8 <__flatcc_fb_gen_c_json_parser@@Base+0x44bc>
   22044:	cmp	r6, r3
   22048:	bne	22090 <__flatcc_fb_gen_c_json_parser@@Base+0x4494>
   2204c:	mov	r6, r7
   22050:	ldm	sl, {r0, r7}
   22054:	ldr	r1, [sl, #12]
   22058:	add	r0, r0, r3, lsl #4
   2205c:	ldr	r2, [r0, #8]
   22060:	ldr	r3, [r0, #12]
   22064:	mov	r0, r9
   22068:	str	r8, [sp]
   2206c:	blx	r7
   22070:	cmp	r5, #1
   22074:	blt	22144 <__flatcc_fb_gen_c_json_parser@@Base+0x4548>
   22078:	ldr	r1, [pc, #568]	; 222b8 <__flatcc_fb_gen_c_json_parser@@Base+0x46bc>
   2207c:	mov	r0, r9
   22080:	mov	r2, r5
   22084:	add	r1, pc, r1
   22088:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   2208c:	b	22150 <__flatcc_fb_gen_c_json_parser@@Base+0x4554>
   22090:	ldr	r0, [sp, #36]	; 0x24
   22094:	mov	r1, sl
   22098:	mov	r2, r6
   2209c:	stm	sp, {r0, r5}
   220a0:	mov	r0, r9
   220a4:	bl	21dbc <__flatcc_fb_gen_c_json_parser@@Base+0x41c0>
   220a8:	b	2217c <__flatcc_fb_gen_c_json_parser@@Base+0x4580>
   220ac:	ldr	r1, [sl, #8]
   220b0:	mov	r0, r9
   220b4:	blx	r1
   220b8:	ldr	r0, [r9, #220]	; 0xdc
   220bc:	cmp	r0, #0
   220c0:	beq	22224 <__flatcc_fb_gen_c_json_parser@@Base+0x4628>
   220c4:	sub	r0, r0, #1
   220c8:	str	r0, [r9, #220]	; 0xdc
   220cc:	mov	r0, r9
   220d0:	ldr	r1, [pc, #468]	; 222ac <__flatcc_fb_gen_c_json_parser@@Base+0x46b0>
   220d4:	add	r1, pc, r1
   220d8:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   220dc:	ldr	r0, [r9, #220]	; 0xdc
   220e0:	cmp	r0, #0
   220e4:	beq	22244 <__flatcc_fb_gen_c_json_parser@@Base+0x4648>
   220e8:	sub	r0, r0, #1
   220ec:	mov	r2, r8
   220f0:	mov	r3, r4
   220f4:	str	r0, [r9, #220]	; 0xdc
   220f8:	mov	r0, r9
   220fc:	ldr	r1, [pc, #428]	; 222b0 <__flatcc_fb_gen_c_json_parser@@Base+0x46b4>
   22100:	add	r1, pc, r1
   22104:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   22108:	ldr	r0, [r9, #220]	; 0xdc
   2210c:	cmp	r5, #1
   22110:	add	r0, r0, #1
   22114:	str	r0, [r9, #220]	; 0xdc
   22118:	blt	22134 <__flatcc_fb_gen_c_json_parser@@Base+0x4538>
   2211c:	ldr	r1, [pc, #400]	; 222b4 <__flatcc_fb_gen_c_json_parser@@Base+0x46b8>
   22120:	mov	r0, r9
   22124:	mov	r2, r5
   22128:	add	r1, pc, r1
   2212c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   22130:	b	221d0 <__flatcc_fb_gen_c_json_parser@@Base+0x45d4>
   22134:	ldr	r1, [sl, #8]
   22138:	mov	r0, r9
   2213c:	blx	r1
   22140:	b	221d0 <__flatcc_fb_gen_c_json_parser@@Base+0x45d4>
   22144:	ldr	r1, [sl, #8]
   22148:	mov	r0, r9
   2214c:	blx	r1
   22150:	ldr	r0, [r9, #220]	; 0xdc
   22154:	cmp	r0, #0
   22158:	beq	22284 <__flatcc_fb_gen_c_json_parser@@Base+0x4688>
   2215c:	sub	r0, r0, #1
   22160:	mov	r7, r6
   22164:	str	r0, [r9, #220]	; 0xdc
   22168:	mov	r0, r9
   2216c:	ldr	r1, [pc, #328]	; 222bc <__flatcc_fb_gen_c_json_parser@@Base+0x46c0>
   22170:	add	r1, pc, r1
   22174:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   22178:	ldr	r6, [fp, #-36]	; 0xffffffdc
   2217c:	ldr	r0, [r9, #220]	; 0xdc
   22180:	cmp	r0, #0
   22184:	beq	22264 <__flatcc_fb_gen_c_json_parser@@Base+0x4668>
   22188:	sub	r0, r0, #1
   2218c:	mov	r2, r8
   22190:	mov	r3, r4
   22194:	str	r0, [r9, #220]	; 0xdc
   22198:	mov	r0, r9
   2219c:	ldr	r1, [pc, #284]	; 222c0 <__flatcc_fb_gen_c_json_parser@@Base+0x46c4>
   221a0:	add	r1, pc, r1
   221a4:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   221a8:	ldr	r0, [r9, #220]	; 0xdc
   221ac:	sub	r3, r6, #1
   221b0:	mov	r1, sl
   221b4:	mov	r2, r7
   221b8:	add	r0, r0, #1
   221bc:	str	r0, [r9, #220]	; 0xdc
   221c0:	ldr	r0, [sp, #36]	; 0x24
   221c4:	stm	sp, {r0, r5}
   221c8:	mov	r0, r9
   221cc:	bl	21dbc <__flatcc_fb_gen_c_json_parser@@Base+0x41c0>
   221d0:	ldr	r0, [r9, #220]	; 0xdc
   221d4:	cmp	r0, #0
   221d8:	beq	22204 <__flatcc_fb_gen_c_json_parser@@Base+0x4608>
   221dc:	sub	r0, r0, #1
   221e0:	mov	r2, r8
   221e4:	mov	r3, r4
   221e8:	str	r0, [r9, #220]	; 0xdc
   221ec:	mov	r0, r9
   221f0:	ldr	r1, [pc, #204]	; 222c4 <__flatcc_fb_gen_c_json_parser@@Base+0x46c8>
   221f4:	add	r1, pc, r1
   221f8:	sub	sp, fp, #28
   221fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22200:	b	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   22204:	ldr	r0, [pc, #240]	; 222fc <__flatcc_fb_gen_c_json_parser@@Base+0x4700>
   22208:	ldr	r1, [pc, #240]	; 22300 <__flatcc_fb_gen_c_json_parser@@Base+0x4704>
   2220c:	ldr	r3, [pc, #240]	; 22304 <__flatcc_fb_gen_c_json_parser@@Base+0x4708>
   22210:	movw	r2, #910	; 0x38e
   22214:	add	r0, pc, r0
   22218:	add	r1, pc, r1
   2221c:	add	r3, pc, r3
   22220:	bl	1497c <__assert_fail@plt>
   22224:	ldr	r0, [pc, #160]	; 222cc <__flatcc_fb_gen_c_json_parser@@Base+0x46d0>
   22228:	ldr	r1, [pc, #160]	; 222d0 <__flatcc_fb_gen_c_json_parser@@Base+0x46d4>
   2222c:	ldr	r3, [pc, #160]	; 222d4 <__flatcc_fb_gen_c_json_parser@@Base+0x46d8>
   22230:	mov	r2, #888	; 0x378
   22234:	add	r0, pc, r0
   22238:	add	r1, pc, r1
   2223c:	add	r3, pc, r3
   22240:	bl	1497c <__assert_fail@plt>
   22244:	ldr	r0, [pc, #140]	; 222d8 <__flatcc_fb_gen_c_json_parser@@Base+0x46dc>
   22248:	ldr	r1, [pc, #140]	; 222dc <__flatcc_fb_gen_c_json_parser@@Base+0x46e0>
   2224c:	ldr	r3, [pc, #140]	; 222e0 <__flatcc_fb_gen_c_json_parser@@Base+0x46e4>
   22250:	movw	r2, #889	; 0x379
   22254:	add	r0, pc, r0
   22258:	add	r1, pc, r1
   2225c:	add	r3, pc, r3
   22260:	bl	1497c <__assert_fail@plt>
   22264:	ldr	r0, [pc, #132]	; 222f0 <__flatcc_fb_gen_c_json_parser@@Base+0x46f4>
   22268:	ldr	r1, [pc, #132]	; 222f4 <__flatcc_fb_gen_c_json_parser@@Base+0x46f8>
   2226c:	ldr	r3, [pc, #132]	; 222f8 <__flatcc_fb_gen_c_json_parser@@Base+0x46fc>
   22270:	movw	r2, #907	; 0x38b
   22274:	add	r0, pc, r0
   22278:	add	r1, pc, r1
   2227c:	add	r3, pc, r3
   22280:	bl	1497c <__assert_fail@plt>
   22284:	ldr	r0, [pc, #88]	; 222e4 <__flatcc_fb_gen_c_json_parser@@Base+0x46e8>
   22288:	ldr	r1, [pc, #88]	; 222e8 <__flatcc_fb_gen_c_json_parser@@Base+0x46ec>
   2228c:	ldr	r3, [pc, #88]	; 222ec <__flatcc_fb_gen_c_json_parser@@Base+0x46f0>
   22290:	movw	r2, #903	; 0x387
   22294:	add	r0, pc, r0
   22298:	add	r1, pc, r1
   2229c:	add	r3, pc, r3
   222a0:	bl	1497c <__assert_fail@plt>
   222a4:	andeq	r0, r3, r9, ror #25
   222a8:			; <UNDEFINED> instruction: 0x00030cb0
   222ac:	andeq	pc, r1, r3, asr #18
   222b0:	andeq	r0, r3, sl, lsr ip
   222b4:	andeq	r0, r3, r0, asr #23
   222b8:	andeq	r0, r3, r4, ror #24
   222bc:	andeq	pc, r1, r7, lsr #17
   222c0:	muleq	r3, sl, fp
   222c4:	andeq	r0, r3, ip, asr fp
   222c8:	andeq	r0, r3, r9, lsl #26
   222cc:	andeq	pc, r2, fp, asr #26
   222d0:	andeq	pc, r2, r3, asr sp	; <UNPREDICTABLE>
   222d4:			; <UNDEFINED> instruction: 0x00030abc
   222d8:	andeq	pc, r2, fp, lsr #26
   222dc:	andeq	pc, r2, r3, lsr sp	; <UNPREDICTABLE>
   222e0:	muleq	r3, ip, sl
   222e4:	andeq	pc, r2, fp, ror #25
   222e8:	strdeq	pc, [r2], -r3
   222ec:	andeq	r0, r3, ip, asr sl
   222f0:	andeq	pc, r2, fp, lsl #26
   222f4:	andeq	pc, r2, r3, lsl sp	; <UNPREDICTABLE>
   222f8:	andeq	r0, r3, ip, ror sl
   222fc:	andeq	pc, r2, fp, ror #26
   22300:	andeq	pc, r2, r3, ror sp	; <UNPREDICTABLE>
   22304:	ldrdeq	r0, [r3], -ip
   22308:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2230c:	add	fp, sp, #28
   22310:	sub	sp, sp, #540	; 0x21c
   22314:	str	r3, [sp, #32]
   22318:	mov	r5, r1
   2231c:	mov	r9, r2
   22320:	ldr	r2, [fp, #8]
   22324:	mov	r4, r0
   22328:	ldr	r1, [pc, #3656]	; 23178 <__flatcc_fb_gen_c_json_parser@@Base+0x557c>
   2232c:	add	r1, pc, r1
   22330:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   22334:	ldr	r1, [pc, #3648]	; 2317c <__flatcc_fb_gen_c_json_parser@@Base+0x5580>
   22338:	mov	r0, r4
   2233c:	add	r1, pc, r1
   22340:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   22344:	ldr	r0, [r4, #220]	; 0xdc
   22348:	mov	r1, #0
   2234c:	mov	r2, #220	; 0xdc
   22350:	mov	r8, #0
   22354:	add	r0, r0, #1
   22358:	str	r0, [r4, #220]	; 0xdc
   2235c:	sub	r0, fp, #256	; 0x100
   22360:	bl	148d4 <memset@plt>
   22364:	ldr	r0, [r5, #12]
   22368:	add	r1, sp, #108	; 0x6c
   2236c:	bl	15b40 <__flatcc_fb_copy_scope@@Base>
   22370:	ldrh	r0, [r9, #24]
   22374:	ldrh	r1, [r5, #8]
   22378:	mov	sl, #0
   2237c:	cmp	r0, #15
   22380:	str	r1, [sp, #88]	; 0x58
   22384:	bhi	2239c <__flatcc_fb_gen_c_json_parser@@Base+0x47a0>
   22388:	mov	r1, #1
   2238c:	movw	r2, #33408	; 0x8280
   22390:	mov	sl, #0
   22394:	tst	r2, r1, lsl r0
   22398:	movne	sl, #1
   2239c:	sub	r0, r0, #7
   223a0:	cmp	r0, #8
   223a4:	bhi	22f80 <__flatcc_fb_gen_c_json_parser@@Base+0x5384>
   223a8:	add	r5, pc, #76	; 0x4c
   223ac:	mov	r2, #0
   223b0:	mov	r1, #0
   223b4:	mov	ip, #0
   223b8:	mov	r3, #0
   223bc:	mov	lr, #0
   223c0:	mov	r7, #0
   223c4:	ldr	r6, [r5, r0, lsl #2]
   223c8:	str	r2, [sp, #44]	; 0x2c
   223cc:	mov	r2, #0
   223d0:	mov	r0, #0
   223d4:	str	r2, [sp, #36]	; 0x24
   223d8:	mov	r2, #0
   223dc:	str	r0, [sp, #48]	; 0x30
   223e0:	str	r2, [sp, #84]	; 0x54
   223e4:	mov	r2, #0
   223e8:	str	r2, [sp, #92]	; 0x5c
   223ec:	mov	r2, #0
   223f0:	str	r2, [sp, #28]
   223f4:	mov	r2, #0
   223f8:	add	pc, r5, r6
   223fc:	strdeq	r0, [r0], -r8
   22400:	andeq	r0, r0, r0, lsl r1
   22404:	andeq	r0, r0, r4, lsr #32
   22408:	andeq	r0, r0, r4, lsr #32
   2240c:	andeq	r0, r0, r0, asr r1
   22410:	andeq	r0, r0, r0, asr r1
   22414:	andeq	r0, r0, r0, asr r1
   22418:	andeq	r0, r0, r4, asr r0
   2241c:	andeq	r0, r0, r4, asr r0
   22420:	mov	r0, #1
   22424:	str	r0, [sp, #44]	; 0x2c
   22428:	mov	r0, #0
   2242c:	mov	lr, #0
   22430:	str	r0, [sp, #36]	; 0x24
   22434:	mov	r0, #0
   22438:	str	r0, [sp, #84]	; 0x54
   2243c:	mov	r0, #0
   22440:	str	r0, [sp, #92]	; 0x5c
   22444:	mov	r0, #0
   22448:	str	r0, [sp, #28]
   2244c:	b	224e0 <__flatcc_fb_gen_c_json_parser@@Base+0x48e4>
   22450:	ldr	r1, [r9, #16]
   22454:	sub	r2, fp, #256	; 0x100
   22458:	ldr	r0, [r1, #12]
   2245c:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   22460:	ldr	r0, [r9, #16]
   22464:	ldr	r3, [sp, #32]
   22468:	ldrh	r1, [r0, #8]
   2246c:	eor	r2, r1, #4
   22470:	cmp	r1, #3
   22474:	orr	r2, r3, r2
   22478:	clz	r2, r2
   2247c:	lsr	r2, r2, #5
   22480:	str	r2, [sp, #28]
   22484:	clz	r2, r1
   22488:	lsr	r2, r2, #5
   2248c:	str	r2, [sp, #84]	; 0x54
   22490:	sub	r2, r1, #1
   22494:	clz	r2, r2
   22498:	lsr	r2, r2, #5
   2249c:	str	r2, [sp, #92]	; 0x5c
   224a0:	bne	224cc <__flatcc_fb_gen_c_json_parser@@Base+0x48d0>
   224a4:	ldr	r0, [r0, #40]	; 0x28
   224a8:	mov	lr, #1
   224ac:	mov	r2, #0
   224b0:	mov	r7, #0
   224b4:	str	r0, [sp, #48]	; 0x30
   224b8:	mov	r0, #1
   224bc:	str	r0, [sp, #36]	; 0x24
   224c0:	mov	r0, #0
   224c4:	str	r0, [sp, #44]	; 0x2c
   224c8:	b	2254c <__flatcc_fb_gen_c_json_parser@@Base+0x4950>
   224cc:	mov	r0, #0
   224d0:	mov	lr, #0
   224d4:	str	r0, [sp, #44]	; 0x2c
   224d8:	mov	r0, #0
   224dc:	str	r0, [sp, #36]	; 0x24
   224e0:	mov	r0, #0
   224e4:	mov	r2, #0
   224e8:	mov	r7, #0
   224ec:	str	r0, [sp, #48]	; 0x30
   224f0:	b	2254c <__flatcc_fb_gen_c_json_parser@@Base+0x4950>
   224f4:	ldr	r3, [r9, #104]	; 0x68
   224f8:	ldrh	r1, [r9, #72]	; 0x48
   224fc:	cmp	r3, #0
   22500:	and	ip, r1, #2048	; 0x800
   22504:	and	r1, r1, #1024	; 0x400
   22508:	movwne	r3, #1
   2250c:	ldr	r2, [r9, #16]
   22510:	mov	lr, #1
   22514:	mov	r8, r1
   22518:	mov	r7, r3
   2251c:	str	r2, [sp, #48]	; 0x30
   22520:	mov	r2, #0
   22524:	str	r2, [sp, #44]	; 0x2c
   22528:	mov	r2, #0
   2252c:	str	r2, [sp, #36]	; 0x24
   22530:	mov	r2, #0
   22534:	str	r2, [sp, #84]	; 0x54
   22538:	mov	r2, #0
   2253c:	str	r2, [sp, #92]	; 0x5c
   22540:	mov	r2, #0
   22544:	str	r2, [sp, #28]
   22548:	mov	r2, ip
   2254c:	orrs	r0, r2, r8
   22550:	str	r0, [sp, #60]	; 0x3c
   22554:	beq	225c8 <__flatcc_fb_gen_c_json_parser@@Base+0x49cc>
   22558:	cmp	sl, #0
   2255c:	beq	22578 <__flatcc_fb_gen_c_json_parser@@Base+0x497c>
   22560:	ldr	r0, [sp, #48]	; 0x30
   22564:	mov	r3, #0
   22568:	mov	lr, #0
   2256c:	mov	r7, #0
   22570:	cmp	r0, #4
   22574:	beq	225cc <__flatcc_fb_gen_c_json_parser@@Base+0x49d0>
   22578:	ldr	r0, [pc, #3440]	; 232f0 <__flatcc_fb_gen_c_json_parser@@Base+0x56f4>
   2257c:	movw	r3, #466	; 0x1d2
   22580:	ldr	r0, [pc, r0]
   22584:	ldr	r0, [r0]
   22588:	ldr	r1, [pc, #3428]	; 232f4 <__flatcc_fb_gen_c_json_parser@@Base+0x56f8>
   2258c:	add	r1, pc, r1
   22590:	str	r1, [sp]
   22594:	ldr	r1, [pc, #3420]	; 232f8 <__flatcc_fb_gen_c_json_parser@@Base+0x56fc>
   22598:	ldr	r4, [pc, #3420]	; 232fc <__flatcc_fb_gen_c_json_parser@@Base+0x5700>
   2259c:	add	r4, pc, r4
   225a0:	add	r1, pc, r1
   225a4:	mov	r2, r4
   225a8:	bl	148bc <fprintf@plt>
   225ac:	ldr	r0, [pc, #3404]	; 23300 <__flatcc_fb_gen_c_json_parser@@Base+0x5704>
   225b0:	ldr	r3, [pc, #3404]	; 23304 <__flatcc_fb_gen_c_json_parser@@Base+0x5708>
   225b4:	mov	r1, r4
   225b8:	movw	r2, #466	; 0x1d2
   225bc:	add	r0, pc, r0
   225c0:	add	r3, pc, r3
   225c4:	bl	1497c <__assert_fail@plt>
   225c8:	mov	r3, sl
   225cc:	ldr	r2, [sp, #32]
   225d0:	add	r0, r9, #48	; 0x30
   225d4:	cmp	r3, #0
   225d8:	str	r0, [sp, #40]	; 0x28
   225dc:	mov	r0, r3
   225e0:	movwne	r0, #1
   225e4:	cmp	r2, #0
   225e8:	mov	r1, r2
   225ec:	movwne	r1, #1
   225f0:	ands	r0, r1, r0
   225f4:	ldr	r1, [sp, #28]
   225f8:	movwne	r3, #0
   225fc:	str	r0, [sp, #16]
   22600:	cmp	r3, #0
   22604:	mov	r0, r3
   22608:	movwne	r0, #1
   2260c:	cmp	r1, #0
   22610:	movwne	r1, #1
   22614:	ands	r0, r1, r0
   22618:	movwne	r3, #0
   2261c:	cmp	r2, #0
   22620:	str	r0, [sp, #20]
   22624:	movwne	lr, #0
   22628:	cmp	r7, #0
   2262c:	str	r3, [sp, #96]	; 0x60
   22630:	str	lr, [sp, #80]	; 0x50
   22634:	beq	22654 <__flatcc_fb_gen_c_json_parser@@Base+0x4a58>
   22638:	ldr	r1, [pc, #2880]	; 23180 <__flatcc_fb_gen_c_json_parser@@Base+0x5584>
   2263c:	mov	r0, r4
   22640:	add	r1, pc, r1
   22644:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   22648:	ldr	r0, [r4, #220]	; 0xdc
   2264c:	add	r0, r0, #1
   22650:	str	r0, [r4, #220]	; 0xdc
   22654:	ldr	r1, [sp, #40]	; 0x28
   22658:	add	r0, r1, #32
   2265c:	str	r0, [sp, #52]	; 0x34
   22660:	add	r0, r1, #48	; 0x30
   22664:	str	r0, [sp, #56]	; 0x38
   22668:	add	r0, r1, #40	; 0x28
   2266c:	str	r0, [sp, #64]	; 0x40
   22670:	clz	r0, r8
   22674:	lsr	r0, r0, #5
   22678:	str	r0, [sp, #24]
   2267c:	ldr	r0, [sp, #32]
   22680:	clz	r0, r0
   22684:	lsr	r0, r0, #5
   22688:	str	r0, [sp, #76]	; 0x4c
   2268c:	ldr	r0, [pc, #2800]	; 23184 <__flatcc_fb_gen_c_json_parser@@Base+0x5588>
   22690:	str	r9, [sp, #68]	; 0x44
   22694:	add	r0, pc, r0
   22698:	str	r0, [sp, #100]	; 0x64
   2269c:	str	r0, [sp, #72]	; 0x48
   226a0:	b	226c0 <__flatcc_fb_gen_c_json_parser@@Base+0x4ac4>
   226a4:	ldr	r1, [pc, #3112]	; 232d4 <__flatcc_fb_gen_c_json_parser@@Base+0x56d8>
   226a8:	add	r1, pc, r1
   226ac:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   226b0:	ldr	r6, [sp, #104]	; 0x68
   226b4:	mov	r7, #2
   226b8:	cmp	r6, #1
   226bc:	bne	22eb0 <__flatcc_fb_gen_c_json_parser@@Base+0x52b4>
   226c0:	cmp	r7, #2
   226c4:	mov	r1, r7
   226c8:	str	r7, [sp, #104]	; 0x68
   226cc:	bne	22770 <__flatcc_fb_gen_c_json_parser@@Base+0x4b74>
   226d0:	ldr	r0, [r4, #220]	; 0xdc
   226d4:	cmp	r0, #0
   226d8:	beq	22f88 <__flatcc_fb_gen_c_json_parser@@Base+0x538c>
   226dc:	sub	r0, r0, #1
   226e0:	str	r0, [r4, #220]	; 0xdc
   226e4:	mov	r0, r4
   226e8:	ldr	r1, [pc, #2712]	; 23188 <__flatcc_fb_gen_c_json_parser@@Base+0x558c>
   226ec:	add	r1, pc, r1
   226f0:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   226f4:	ldr	r0, [r4, #220]	; 0xdc
   226f8:	sub	r2, fp, #256	; 0x100
   226fc:	add	r0, r0, #1
   22700:	str	r0, [r4, #220]	; 0xdc
   22704:	ldr	r1, [r9, #104]	; 0x68
   22708:	ldr	r0, [r1, #12]
   2270c:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   22710:	ldr	r0, [r9, #104]	; 0x68
   22714:	ldrh	r5, [r0, #8]
   22718:	ldr	r1, [pc, #2668]	; 2318c <__flatcc_fb_gen_c_json_parser@@Base+0x5590>
   2271c:	mov	r0, r4
   22720:	add	r1, pc, r1
   22724:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   22728:	cmp	r5, #0
   2272c:	ldr	r0, [sp, #92]	; 0x5c
   22730:	mov	sl, #0
   22734:	mov	r5, #0
   22738:	movne	r0, #1
   2273c:	str	r0, [sp, #92]	; 0x5c
   22740:	clz	r0, r0
   22744:	lsr	r6, r0, #5
   22748:	ldr	r0, [sp, #76]	; 0x4c
   2274c:	and	r8, r6, r0
   22750:	ldr	r0, [sp, #84]	; 0x54
   22754:	movweq	r0, #1
   22758:	str	r0, [sp, #84]	; 0x54
   2275c:	mov	r0, #0
   22760:	str	r0, [sp, #96]	; 0x60
   22764:	mov	r0, #0
   22768:	str	r0, [sp, #80]	; 0x50
   2276c:	b	22a6c <__flatcc_fb_gen_c_json_parser@@Base+0x4e70>
   22770:	ldr	r7, [sp, #80]	; 0x50
   22774:	cmp	r7, #0
   22778:	beq	22804 <__flatcc_fb_gen_c_json_parser@@Base+0x4c08>
   2277c:	ldr	r0, [sp, #48]	; 0x30
   22780:	sub	r0, r0, #1
   22784:	cmp	r0, #10
   22788:	bhi	23008 <__flatcc_fb_gen_c_json_parser@@Base+0x540c>
   2278c:	add	r2, pc, #48	; 0x30
   22790:	mov	r9, #1
   22794:	ldr	r3, [r2, r0, lsl #2]
   22798:	ldr	r0, [pc, #2544]	; 23190 <__flatcc_fb_gen_c_json_parser@@Base+0x5594>
   2279c:	ldr	r1, [pc, #2544]	; 23194 <__flatcc_fb_gen_c_json_parser@@Base+0x5598>
   227a0:	ldr	r6, [pc, #2544]	; 23198 <__flatcc_fb_gen_c_json_parser@@Base+0x559c>
   227a4:	add	r6, pc, r6
   227a8:	add	r0, pc, r0
   227ac:	add	r1, pc, r1
   227b0:	str	r6, [sp, #100]	; 0x64
   227b4:	ldr	r6, [pc, #2528]	; 2319c <__flatcc_fb_gen_c_json_parser@@Base+0x55a0>
   227b8:	add	r6, pc, r6
   227bc:	str	r6, [sp, #72]	; 0x48
   227c0:	add	pc, r2, r3
   227c4:	andeq	r0, r0, ip, lsr #32
   227c8:	ldrdeq	r0, [r0], -r8
   227cc:	andeq	r0, r0, r8, rrx
   227d0:	andeq	r0, r0, r8, asr #32
   227d4:	andeq	r0, r0, r0, ror #1
   227d8:	muleq	r0, r0, r0
   227dc:	andeq	r0, r0, r4, lsr #1
   227e0:	andeq	r0, r0, ip, ror r0
   227e4:	andeq	r0, r0, r8, asr #1
   227e8:	andeq	r0, r0, ip, asr r0
   227ec:	strheq	r0, [r0], -r8
   227f0:	ldr	r0, [pc, #2472]	; 231a0 <__flatcc_fb_gen_c_json_parser@@Base+0x55a4>
   227f4:	ldr	r1, [pc, #2472]	; 231a4 <__flatcc_fb_gen_c_json_parser@@Base+0x55a8>
   227f8:	add	r0, pc, r0
   227fc:	add	r1, pc, r1
   22800:	b	2289c <__flatcc_fb_gen_c_json_parser@@Base+0x4ca0>
   22804:	mov	r9, #0
   22808:	b	228a4 <__flatcc_fb_gen_c_json_parser@@Base+0x4ca8>
   2280c:	ldr	r0, [pc, #2484]	; 231c8 <__flatcc_fb_gen_c_json_parser@@Base+0x55cc>
   22810:	ldr	r1, [pc, #2484]	; 231cc <__flatcc_fb_gen_c_json_parser@@Base+0x55d0>
   22814:	add	r0, pc, r0
   22818:	add	r1, pc, r1
   2281c:	b	2289c <__flatcc_fb_gen_c_json_parser@@Base+0x4ca0>
   22820:	ldr	r1, [pc, #2508]	; 231f4 <__flatcc_fb_gen_c_json_parser@@Base+0x55f8>
   22824:	add	r1, pc, r1
   22828:	b	22884 <__flatcc_fb_gen_c_json_parser@@Base+0x4c88>
   2282c:	ldr	r0, [pc, #2444]	; 231c0 <__flatcc_fb_gen_c_json_parser@@Base+0x55c4>
   22830:	ldr	r1, [pc, #2444]	; 231c4 <__flatcc_fb_gen_c_json_parser@@Base+0x55c8>
   22834:	add	r0, pc, r0
   22838:	add	r1, pc, r1
   2283c:	b	2289c <__flatcc_fb_gen_c_json_parser@@Base+0x4ca0>
   22840:	ldr	r0, [pc, #2456]	; 231e0 <__flatcc_fb_gen_c_json_parser@@Base+0x55e4>
   22844:	ldr	r1, [pc, #2456]	; 231e4 <__flatcc_fb_gen_c_json_parser@@Base+0x55e8>
   22848:	add	r0, pc, r0
   2284c:	add	r1, pc, r1
   22850:	b	2289c <__flatcc_fb_gen_c_json_parser@@Base+0x4ca0>
   22854:	ldr	r0, [pc, #2420]	; 231d0 <__flatcc_fb_gen_c_json_parser@@Base+0x55d4>
   22858:	ldr	r1, [pc, #2420]	; 231d4 <__flatcc_fb_gen_c_json_parser@@Base+0x55d8>
   2285c:	add	r0, pc, r0
   22860:	add	r1, pc, r1
   22864:	b	2289c <__flatcc_fb_gen_c_json_parser@@Base+0x4ca0>
   22868:	ldr	r0, [pc, #2408]	; 231d8 <__flatcc_fb_gen_c_json_parser@@Base+0x55dc>
   2286c:	ldr	r1, [pc, #2408]	; 231dc <__flatcc_fb_gen_c_json_parser@@Base+0x55e0>
   22870:	add	r0, pc, r0
   22874:	add	r1, pc, r1
   22878:	b	2289c <__flatcc_fb_gen_c_json_parser@@Base+0x4ca0>
   2287c:	ldr	r1, [pc, #2412]	; 231f0 <__flatcc_fb_gen_c_json_parser@@Base+0x55f4>
   22880:	add	r1, pc, r1
   22884:	mov	r0, r1
   22888:	b	2289c <__flatcc_fb_gen_c_json_parser@@Base+0x4ca0>
   2288c:	ldr	r0, [pc, #2388]	; 231e8 <__flatcc_fb_gen_c_json_parser@@Base+0x55ec>
   22890:	ldr	r1, [pc, #2388]	; 231ec <__flatcc_fb_gen_c_json_parser@@Base+0x55f0>
   22894:	add	r0, pc, r0
   22898:	add	r1, pc, r1
   2289c:	str	r0, [sp, #100]	; 0x64
   228a0:	str	r1, [sp, #72]	; 0x48
   228a4:	ldr	r1, [sp, #92]	; 0x5c
   228a8:	ldr	r2, [sp, #76]	; 0x4c
   228ac:	orr	r0, r1, r7
   228b0:	clz	r0, r0
   228b4:	lsr	r0, r0, #5
   228b8:	and	r8, r0, r2
   228bc:	clz	r0, r1
   228c0:	lsr	r6, r0, #5
   228c4:	ldr	r0, [sp, #96]	; 0x60
   228c8:	cmp	r0, #0
   228cc:	beq	228ec <__flatcc_fb_gen_c_json_parser@@Base+0x4cf0>
   228d0:	cmp	r8, #0
   228d4:	beq	2290c <__flatcc_fb_gen_c_json_parser@@Base+0x4d10>
   228d8:	ldr	r1, [pc, #2328]	; 231f8 <__flatcc_fb_gen_c_json_parser@@Base+0x55fc>
   228dc:	mov	r0, r4
   228e0:	add	r1, pc, r1
   228e4:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   228e8:	b	2295c <__flatcc_fb_gen_c_json_parser@@Base+0x4d60>
   228ec:	cmp	r9, #0
   228f0:	ldr	r9, [sp, #68]	; 0x44
   228f4:	mov	sl, #0
   228f8:	bne	2299c <__flatcc_fb_gen_c_json_parser@@Base+0x4da0>
   228fc:	mov	r0, #0
   22900:	mov	r5, #0
   22904:	str	r0, [sp, #96]	; 0x60
   22908:	b	22a6c <__flatcc_fb_gen_c_json_parser@@Base+0x4e70>
   2290c:	ldr	r0, [sp, #64]	; 0x40
   22910:	mov	r1, #0
   22914:	ldm	r0, {r5, r7}
   22918:	mvn	r0, #0
   2291c:	orrs	r3, r5, r7
   22920:	mov	r2, r5
   22924:	movweq	r2, #1
   22928:	movne	r3, r7
   2292c:	bl	3df2c <fb_value_set_visit@@Base+0x66c>
   22930:	ldr	r2, [sp, #68]	; 0x44
   22934:	mov	r3, r7
   22938:	ldrsh	r2, [r2, #74]	; 0x4a
   2293c:	str	r0, [sp, #8]
   22940:	str	r1, [sp, #12]
   22944:	mov	r0, r4
   22948:	str	r2, [sp]
   2294c:	mov	r2, r5
   22950:	ldr	r1, [pc, #2212]	; 231fc <__flatcc_fb_gen_c_json_parser@@Base+0x5600>
   22954:	add	r1, pc, r1
   22958:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   2295c:	ldr	r1, [pc, #2204]	; 23200 <__flatcc_fb_gen_c_json_parser@@Base+0x5604>
   22960:	mov	r0, r4
   22964:	add	r1, pc, r1
   22968:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   2296c:	ldr	r1, [pc, #2192]	; 23204 <__flatcc_fb_gen_c_json_parser@@Base+0x5608>
   22970:	mov	r0, r4
   22974:	add	r1, pc, r1
   22978:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   2297c:	ldr	r0, [r4, #220]	; 0xdc
   22980:	cmp	r9, #0
   22984:	ldr	r9, [sp, #68]	; 0x44
   22988:	mov	r5, #0
   2298c:	mov	sl, #1
   22990:	add	r0, r0, #1
   22994:	str	r0, [r4, #220]	; 0xdc
   22998:	beq	22a44 <__flatcc_fb_gen_c_json_parser@@Base+0x4e48>
   2299c:	ldr	r1, [pc, #2148]	; 23208 <__flatcc_fb_gen_c_json_parser@@Base+0x560c>
   229a0:	ldr	r2, [sp, #72]	; 0x48
   229a4:	mov	r0, r4
   229a8:	add	r1, pc, r1
   229ac:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   229b0:	ldr	r1, [pc, #2132]	; 2320c <__flatcc_fb_gen_c_json_parser@@Base+0x5610>
   229b4:	mov	r0, r4
   229b8:	add	r1, pc, r1
   229bc:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   229c0:	ldr	r0, [r4, #220]	; 0xdc
   229c4:	add	r0, r0, #2
   229c8:	str	r0, [r4, #220]	; 0xdc
   229cc:	ldr	r0, [sp, #36]	; 0x24
   229d0:	cmp	r0, #0
   229d4:	beq	229ec <__flatcc_fb_gen_c_json_parser@@Base+0x4df0>
   229d8:	ldr	r1, [pc, #2096]	; 23210 <__flatcc_fb_gen_c_json_parser@@Base+0x5614>
   229dc:	mov	r0, r4
   229e0:	sub	r2, fp, #256	; 0x100
   229e4:	add	r1, pc, r1
   229e8:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   229ec:	ldr	r0, [r4, #208]	; 0xd0
   229f0:	add	r3, sp, #108	; 0x6c
   229f4:	ldr	r2, [r0, #160]	; 0xa0
   229f8:	ldr	r1, [pc, #2068]	; 23214 <__flatcc_fb_gen_c_json_parser@@Base+0x5618>
   229fc:	mov	r0, r4
   22a00:	add	r1, pc, r1
   22a04:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   22a08:	ldr	r0, [r4, #208]	; 0xd0
   22a0c:	ldr	r2, [r0, #160]	; 0xa0
   22a10:	ldr	r1, [pc, #2048]	; 23218 <__flatcc_fb_gen_c_json_parser@@Base+0x561c>
   22a14:	mov	r0, r4
   22a18:	add	r1, pc, r1
   22a1c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   22a20:	ldr	r0, [r4, #220]	; 0xdc
   22a24:	cmp	r0, #0
   22a28:	beq	22fa8 <__flatcc_fb_gen_c_json_parser@@Base+0x53ac>
   22a2c:	subs	r1, r0, #1
   22a30:	str	r1, [r4, #220]	; 0xdc
   22a34:	beq	22fa8 <__flatcc_fb_gen_c_json_parser@@Base+0x53ac>
   22a38:	sub	r0, r0, #2
   22a3c:	mov	r5, #1
   22a40:	str	r0, [r4, #220]	; 0xdc
   22a44:	ldr	r0, [sp, #96]	; 0x60
   22a48:	clz	r0, r0
   22a4c:	lsr	r0, r0, #5
   22a50:	orrs	r0, r0, r8
   22a54:	bne	22a6c <__flatcc_fb_gen_c_json_parser@@Base+0x4e70>
   22a58:	ldr	r1, [pc, #1992]	; 23228 <__flatcc_fb_gen_c_json_parser@@Base+0x562c>
   22a5c:	mov	r0, r4
   22a60:	add	r1, pc, r1
   22a64:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   22a68:	mov	r8, #0
   22a6c:	ldr	r0, [sp, #88]	; 0x58
   22a70:	cmp	r0, #1
   22a74:	bne	22a90 <__flatcc_fb_gen_c_json_parser@@Base+0x4e94>
   22a78:	ldr	r0, [sp, #52]	; 0x34
   22a7c:	ldrd	r2, [r0]
   22a80:	ldr	r1, [pc, #1956]	; 2322c <__flatcc_fb_gen_c_json_parser@@Base+0x5630>
   22a84:	mov	r0, r4
   22a88:	add	r1, pc, r1
   22a8c:	b	22abc <__flatcc_fb_gen_c_json_parser@@Base+0x4ec0>
   22a90:	orrs	r0, sl, r6
   22a94:	bne	22ac0 <__flatcc_fb_gen_c_json_parser@@Base+0x4ec4>
   22a98:	ldr	r0, [sp, #56]	; 0x38
   22a9c:	ldrh	r7, [r9, #74]	; 0x4a
   22aa0:	ldrd	r2, [r0]
   22aa4:	ldr	r0, [sp, #64]	; 0x40
   22aa8:	ldrd	r0, [r0]
   22aac:	stm	sp, {r0, r1, r7}
   22ab0:	mov	r0, r4
   22ab4:	ldr	r1, [pc, #1908]	; 23230 <__flatcc_fb_gen_c_json_parser@@Base+0x5634>
   22ab8:	add	r1, pc, r1
   22abc:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   22ac0:	cmp	r5, #0
   22ac4:	beq	22ba0 <__flatcc_fb_gen_c_json_parser@@Base+0x4fa4>
   22ac8:	ldr	r1, [pc, #1892]	; 23234 <__flatcc_fb_gen_c_json_parser@@Base+0x5638>
   22acc:	ldr	r5, [sp, #100]	; 0x64
   22ad0:	mov	r0, r4
   22ad4:	add	r1, pc, r1
   22ad8:	mov	r2, r5
   22adc:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   22ae0:	ldr	r1, [pc, #1872]	; 23238 <__flatcc_fb_gen_c_json_parser@@Base+0x563c>
   22ae4:	mov	r0, r4
   22ae8:	add	r1, pc, r1
   22aec:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   22af0:	ldr	r0, [r4, #220]	; 0xdc
   22af4:	mov	r2, r5
   22af8:	add	r0, r0, #1
   22afc:	str	r0, [r4, #220]	; 0xdc
   22b00:	mov	r0, r4
   22b04:	ldr	r1, [pc, #1840]	; 2323c <__flatcc_fb_gen_c_json_parser@@Base+0x5640>
   22b08:	add	r1, pc, r1
   22b0c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   22b10:	ldr	r1, [pc, #1832]	; 23240 <__flatcc_fb_gen_c_json_parser@@Base+0x5644>
   22b14:	mov	r0, r4
   22b18:	add	r1, pc, r1
   22b1c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   22b20:	ldr	r0, [r4, #220]	; 0xdc
   22b24:	cmp	r0, #0
   22b28:	beq	22fc8 <__flatcc_fb_gen_c_json_parser@@Base+0x53cc>
   22b2c:	sub	r0, r0, #1
   22b30:	str	r0, [r4, #220]	; 0xdc
   22b34:	mov	r0, r4
   22b38:	ldr	r1, [pc, #1796]	; 23244 <__flatcc_fb_gen_c_json_parser@@Base+0x5648>
   22b3c:	add	r1, pc, r1
   22b40:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   22b44:	ldr	r0, [sp, #88]	; 0x58
   22b48:	sub	r0, r0, #1
   22b4c:	clz	r0, r0
   22b50:	lsr	r0, r0, #5
   22b54:	orr	r5, r0, sl
   22b58:	ldr	r0, [sp, #60]	; 0x3c
   22b5c:	cmp	r0, #0
   22b60:	cmpeq	r5, #0
   22b64:	bne	22c78 <__flatcc_fb_gen_c_json_parser@@Base+0x507c>
   22b68:	ldrh	r0, [r9, #56]	; 0x38
   22b6c:	sub	r1, r0, #5
   22b70:	cmp	r1, #2
   22b74:	bcc	22c10 <__flatcc_fb_gen_c_json_parser@@Base+0x5014>
   22b78:	cmp	r0, #3
   22b7c:	beq	22c28 <__flatcc_fb_gen_c_json_parser@@Base+0x502c>
   22b80:	cmp	r0, #4
   22b84:	bne	23078 <__flatcc_fb_gen_c_json_parser@@Base+0x547c>
   22b88:	ldr	r0, [sp, #40]	; 0x28
   22b8c:	ldrd	r2, [r0]
   22b90:	ldr	r1, [pc, #1712]	; 23248 <__flatcc_fb_gen_c_json_parser@@Base+0x564c>
   22b94:	mov	r0, r4
   22b98:	add	r1, pc, r1
   22b9c:	b	22c40 <__flatcc_fb_gen_c_json_parser@@Base+0x5044>
   22ba0:	cmp	r6, #0
   22ba4:	beq	22bd0 <__flatcc_fb_gen_c_json_parser@@Base+0x4fd4>
   22ba8:	ldr	r0, [sp, #44]	; 0x2c
   22bac:	cmp	r0, #0
   22bb0:	beq	22bf0 <__flatcc_fb_gen_c_json_parser@@Base+0x4ff4>
   22bb4:	ldr	r1, [pc, #1728]	; 2327c <__flatcc_fb_gen_c_json_parser@@Base+0x5680>
   22bb8:	mov	r0, r4
   22bbc:	add	r1, pc, r1
   22bc0:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   22bc4:	cmp	sl, #0
   22bc8:	beq	226b0 <__flatcc_fb_gen_c_json_parser@@Base+0x4ab4>
   22bcc:	b	22ca0 <__flatcc_fb_gen_c_json_parser@@Base+0x50a4>
   22bd0:	ldr	r1, [pc, #1696]	; 23278 <__flatcc_fb_gen_c_json_parser@@Base+0x567c>
   22bd4:	mov	r0, r4
   22bd8:	add	r1, pc, r1
   22bdc:	sub	r2, fp, #256	; 0x100
   22be0:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   22be4:	cmp	sl, #0
   22be8:	beq	226b0 <__flatcc_fb_gen_c_json_parser@@Base+0x4ab4>
   22bec:	b	22ca0 <__flatcc_fb_gen_c_json_parser@@Base+0x50a4>
   22bf0:	ldr	r0, [sp, #60]	; 0x3c
   22bf4:	cmp	r0, #0
   22bf8:	beq	22d38 <__flatcc_fb_gen_c_json_parser@@Base+0x513c>
   22bfc:	ldr	r1, [pc, #1660]	; 23280 <__flatcc_fb_gen_c_json_parser@@Base+0x5684>
   22c00:	ldr	r2, [sp, #24]
   22c04:	mov	r0, r4
   22c08:	add	r1, pc, r1
   22c0c:	b	22be0 <__flatcc_fb_gen_c_json_parser@@Base+0x4fe4>
   22c10:	ldr	r0, [sp, #40]	; 0x28
   22c14:	ldrd	r2, [r0]
   22c18:	ldr	r1, [pc, #1608]	; 23268 <__flatcc_fb_gen_c_json_parser@@Base+0x566c>
   22c1c:	mov	r0, r4
   22c20:	add	r1, pc, r1
   22c24:	b	22c40 <__flatcc_fb_gen_c_json_parser@@Base+0x5044>
   22c28:	ldr	r0, [sp, #40]	; 0x28
   22c2c:	vldr	d16, [r0]
   22c30:	ldr	r1, [pc, #1556]	; 2324c <__flatcc_fb_gen_c_json_parser@@Base+0x5650>
   22c34:	mov	r0, r4
   22c38:	add	r1, pc, r1
   22c3c:	vmov	r2, r3, d16
   22c40:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   22c44:	ldr	r0, [r4, #220]	; 0xdc
   22c48:	add	r0, r0, #1
   22c4c:	str	r0, [r4, #220]	; 0xdc
   22c50:	ldr	r0, [sp, #56]	; 0x38
   22c54:	ldrsh	r7, [r9, #74]	; 0x4a
   22c58:	ldrd	r2, [r0]
   22c5c:	ldr	r0, [sp, #64]	; 0x40
   22c60:	ldrd	r0, [r0]
   22c64:	stm	sp, {r0, r1, r7}
   22c68:	mov	r0, r4
   22c6c:	ldr	r1, [pc, #1528]	; 2326c <__flatcc_fb_gen_c_json_parser@@Base+0x5670>
   22c70:	add	r1, pc, r1
   22c74:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   22c78:	ldr	r1, [pc, #1520]	; 23270 <__flatcc_fb_gen_c_json_parser@@Base+0x5674>
   22c7c:	ldr	r3, [sp, #100]	; 0x64
   22c80:	mov	r0, r4
   22c84:	mov	r2, r4
   22c88:	add	r1, pc, r1
   22c8c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   22c90:	cmp	r5, #0
   22c94:	beq	22d14 <__flatcc_fb_gen_c_json_parser@@Base+0x5118>
   22c98:	cmp	sl, #0
   22c9c:	beq	226b0 <__flatcc_fb_gen_c_json_parser@@Base+0x4ab4>
   22ca0:	cmp	r8, #0
   22ca4:	beq	22cc8 <__flatcc_fb_gen_c_json_parser@@Base+0x50cc>
   22ca8:	ldr	r1, [pc, #1500]	; 2328c <__flatcc_fb_gen_c_json_parser@@Base+0x5690>
   22cac:	mov	r0, r4
   22cb0:	add	r1, pc, r1
   22cb4:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   22cb8:	ldr	r1, [pc, #1488]	; 23290 <__flatcc_fb_gen_c_json_parser@@Base+0x5694>
   22cbc:	mov	r0, r4
   22cc0:	add	r1, pc, r1
   22cc4:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   22cc8:	ldr	r1, [pc, #1476]	; 23294 <__flatcc_fb_gen_c_json_parser@@Base+0x5698>
   22ccc:	mov	r0, r4
   22cd0:	add	r1, pc, r1
   22cd4:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   22cd8:	ldr	r0, [r4, #220]	; 0xdc
   22cdc:	cmp	r0, #0
   22ce0:	beq	22fe8 <__flatcc_fb_gen_c_json_parser@@Base+0x53ec>
   22ce4:	sub	r0, r0, #1
   22ce8:	str	r0, [r4, #220]	; 0xdc
   22cec:	mov	r0, r4
   22cf0:	ldr	r1, [pc, #1440]	; 23298 <__flatcc_fb_gen_c_json_parser@@Base+0x569c>
   22cf4:	add	r1, pc, r1
   22cf8:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   22cfc:	mov	r0, r4
   22d00:	cmp	r8, #0
   22d04:	beq	226a4 <__flatcc_fb_gen_c_json_parser@@Base+0x4aa8>
   22d08:	ldr	r1, [pc, #1420]	; 2329c <__flatcc_fb_gen_c_json_parser@@Base+0x56a0>
   22d0c:	add	r1, pc, r1
   22d10:	b	226ac <__flatcc_fb_gen_c_json_parser@@Base+0x4ab0>
   22d14:	ldr	r0, [r4, #220]	; 0xdc
   22d18:	cmp	r0, #0
   22d1c:	beq	23058 <__flatcc_fb_gen_c_json_parser@@Base+0x545c>
   22d20:	sub	r0, r0, #1
   22d24:	str	r0, [r4, #220]	; 0xdc
   22d28:	mov	r0, r4
   22d2c:	ldr	r1, [pc, #1344]	; 23274 <__flatcc_fb_gen_c_json_parser@@Base+0x5678>
   22d30:	add	r1, pc, r1
   22d34:	b	226ac <__flatcc_fb_gen_c_json_parser@@Base+0x4ab0>
   22d38:	ldr	r0, [sp, #84]	; 0x54
   22d3c:	cmp	r0, #0
   22d40:	beq	22d54 <__flatcc_fb_gen_c_json_parser@@Base+0x5158>
   22d44:	ldr	r1, [pc, #1336]	; 23284 <__flatcc_fb_gen_c_json_parser@@Base+0x5688>
   22d48:	mov	r0, r4
   22d4c:	add	r1, pc, r1
   22d50:	b	22bdc <__flatcc_fb_gen_c_json_parser@@Base+0x4fe0>
   22d54:	ldr	r0, [sp, #28]
   22d58:	cmp	r0, #0
   22d5c:	beq	22d94 <__flatcc_fb_gen_c_json_parser@@Base+0x5198>
   22d60:	ldr	r0, [sp, #56]	; 0x38
   22d64:	ldr	r3, [sp, #20]
   22d68:	ldr	r2, [r9, #112]	; 0x70
   22d6c:	ldrd	r0, [r0]
   22d70:	cmp	r3, #0
   22d74:	beq	22e5c <__flatcc_fb_gen_c_json_parser@@Base+0x5260>
   22d78:	stm	sp, {r0, r1}
   22d7c:	sub	r0, fp, #256	; 0x100
   22d80:	str	r0, [sp, #8]
   22d84:	mov	r0, r4
   22d88:	ldr	r1, [pc, #1272]	; 23288 <__flatcc_fb_gen_c_json_parser@@Base+0x568c>
   22d8c:	add	r1, pc, r1
   22d90:	b	22e9c <__flatcc_fb_gen_c_json_parser@@Base+0x52a0>
   22d94:	ldr	r0, [sp, #32]
   22d98:	cmp	r0, #0
   22d9c:	beq	22e78 <__flatcc_fb_gen_c_json_parser@@Base+0x527c>
   22da0:	ldr	r1, [pc, #1276]	; 232a4 <__flatcc_fb_gen_c_json_parser@@Base+0x56a8>
   22da4:	mov	r0, r4
   22da8:	add	r1, pc, r1
   22dac:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   22db0:	ldr	r0, [r4, #220]	; 0xdc
   22db4:	sub	r2, fp, #256	; 0x100
   22db8:	add	r0, r0, #2
   22dbc:	str	r0, [r4, #220]	; 0xdc
   22dc0:	mov	r0, r4
   22dc4:	ldr	r1, [pc, #1244]	; 232a8 <__flatcc_fb_gen_c_json_parser@@Base+0x56ac>
   22dc8:	add	r1, pc, r1
   22dcc:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   22dd0:	ldr	r0, [r4, #208]	; 0xd0
   22dd4:	add	r3, sp, #108	; 0x6c
   22dd8:	ldr	r2, [r0, #160]	; 0xa0
   22ddc:	ldr	r1, [pc, #1224]	; 232ac <__flatcc_fb_gen_c_json_parser@@Base+0x56b0>
   22de0:	mov	r0, r4
   22de4:	add	r1, pc, r1
   22de8:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   22dec:	ldr	r0, [r4, #208]	; 0xd0
   22df0:	ldr	r2, [r0, #160]	; 0xa0
   22df4:	ldr	r1, [pc, #1204]	; 232b0 <__flatcc_fb_gen_c_json_parser@@Base+0x56b4>
   22df8:	mov	r0, r4
   22dfc:	add	r1, pc, r1
   22e00:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   22e04:	ldr	r0, [r4, #220]	; 0xdc
   22e08:	cmp	r0, #0
   22e0c:	beq	230c8 <__flatcc_fb_gen_c_json_parser@@Base+0x54cc>
   22e10:	subs	r1, r0, #1
   22e14:	str	r1, [r4, #220]	; 0xdc
   22e18:	beq	230c8 <__flatcc_fb_gen_c_json_parser@@Base+0x54cc>
   22e1c:	sub	r0, r0, #2
   22e20:	ldr	r3, [sp, #16]
   22e24:	str	r0, [r4, #220]	; 0xdc
   22e28:	ldr	r0, [sp, #56]	; 0x38
   22e2c:	ldr	r2, [r9, #112]	; 0x70
   22e30:	cmp	r3, #0
   22e34:	ldrd	r0, [r0]
   22e38:	beq	22e84 <__flatcc_fb_gen_c_json_parser@@Base+0x5288>
   22e3c:	stm	sp, {r0, r1}
   22e40:	sub	r0, fp, #256	; 0x100
   22e44:	str	r0, [sp, #8]
   22e48:	str	r0, [sp, #12]
   22e4c:	mov	r0, r4
   22e50:	ldr	r1, [pc, #1116]	; 232b4 <__flatcc_fb_gen_c_json_parser@@Base+0x56b8>
   22e54:	add	r1, pc, r1
   22e58:	b	22e9c <__flatcc_fb_gen_c_json_parser@@Base+0x52a0>
   22e5c:	stm	sp, {r0, r1}
   22e60:	sub	r0, fp, #256	; 0x100
   22e64:	str	r0, [sp, #8]
   22e68:	mov	r0, r4
   22e6c:	ldr	r1, [pc, #1068]	; 232a0 <__flatcc_fb_gen_c_json_parser@@Base+0x56a4>
   22e70:	add	r1, pc, r1
   22e74:	b	22e9c <__flatcc_fb_gen_c_json_parser@@Base+0x52a0>
   22e78:	cmp	sl, #0
   22e7c:	bne	22ca0 <__flatcc_fb_gen_c_json_parser@@Base+0x50a4>
   22e80:	b	230e8 <__flatcc_fb_gen_c_json_parser@@Base+0x54ec>
   22e84:	stm	sp, {r0, r1}
   22e88:	sub	r0, fp, #256	; 0x100
   22e8c:	str	r0, [sp, #8]
   22e90:	mov	r0, r4
   22e94:	ldr	r1, [pc, #1052]	; 232b8 <__flatcc_fb_gen_c_json_parser@@Base+0x56bc>
   22e98:	add	r1, pc, r1
   22e9c:	mov	r3, #0
   22ea0:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   22ea4:	cmp	sl, #0
   22ea8:	beq	226b0 <__flatcc_fb_gen_c_json_parser@@Base+0x4ab4>
   22eac:	b	22ca0 <__flatcc_fb_gen_c_json_parser@@Base+0x50a4>
   22eb0:	ldr	r5, [sp, #96]	; 0x60
   22eb4:	cmp	r6, #2
   22eb8:	bne	22f00 <__flatcc_fb_gen_c_json_parser@@Base+0x5304>
   22ebc:	ldr	r1, [pc, #1044]	; 232d8 <__flatcc_fb_gen_c_json_parser@@Base+0x56dc>
   22ec0:	mov	r0, r4
   22ec4:	add	r1, pc, r1
   22ec8:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   22ecc:	ldr	r1, [pc, #1032]	; 232dc <__flatcc_fb_gen_c_json_parser@@Base+0x56e0>
   22ed0:	mov	r0, r4
   22ed4:	add	r1, pc, r1
   22ed8:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   22edc:	ldr	r0, [r4, #220]	; 0xdc
   22ee0:	cmp	r0, #0
   22ee4:	beq	23158 <__flatcc_fb_gen_c_json_parser@@Base+0x555c>
   22ee8:	sub	r0, r0, #1
   22eec:	str	r0, [r4, #220]	; 0xdc
   22ef0:	mov	r0, r4
   22ef4:	ldr	r1, [pc, #996]	; 232e0 <__flatcc_fb_gen_c_json_parser@@Base+0x56e4>
   22ef8:	add	r1, pc, r1
   22efc:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   22f00:	ldr	r0, [sp, #44]	; 0x2c
   22f04:	ldr	r1, [sp, #60]	; 0x3c
   22f08:	orr	r0, r1, r0
   22f0c:	ldr	r1, [sp, #84]	; 0x54
   22f10:	orr	r0, r0, r6
   22f14:	orr	r0, r0, r5
   22f18:	orrs	r0, r0, r1
   22f1c:	beq	22f48 <__flatcc_fb_gen_c_json_parser@@Base+0x534c>
   22f20:	ldr	r0, [sp, #56]	; 0x38
   22f24:	ldrd	r2, [r0]
   22f28:	ldr	r1, [pc, #948]	; 232e4 <__flatcc_fb_gen_c_json_parser@@Base+0x56e8>
   22f2c:	mov	r0, r4
   22f30:	add	r1, pc, r1
   22f34:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   22f38:	ldr	r1, [pc, #936]	; 232e8 <__flatcc_fb_gen_c_json_parser@@Base+0x56ec>
   22f3c:	mov	r0, r4
   22f40:	add	r1, pc, r1
   22f44:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   22f48:	ldr	r0, [r4, #220]	; 0xdc
   22f4c:	cmp	r0, #0
   22f50:	beq	23138 <__flatcc_fb_gen_c_json_parser@@Base+0x553c>
   22f54:	sub	r0, r0, #1
   22f58:	str	r0, [r4, #220]	; 0xdc
   22f5c:	mov	r0, r4
   22f60:	ldr	r1, [pc, #900]	; 232ec <__flatcc_fb_gen_c_json_parser@@Base+0x56f0>
   22f64:	add	r1, pc, r1
   22f68:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   22f6c:	ldr	r0, [r4, #220]	; 0xdc
   22f70:	add	r0, r0, #1
   22f74:	str	r0, [r4, #220]	; 0xdc
   22f78:	sub	sp, fp, #28
   22f7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22f80:	mov	r0, #0
   22f84:	b	22424 <__flatcc_fb_gen_c_json_parser@@Base+0x4828>
   22f88:	ldr	r0, [pc, #888]	; 23308 <__flatcc_fb_gen_c_json_parser@@Base+0x570c>
   22f8c:	ldr	r1, [pc, #888]	; 2330c <__flatcc_fb_gen_c_json_parser@@Base+0x5710>
   22f90:	ldr	r3, [pc, #888]	; 23310 <__flatcc_fb_gen_c_json_parser@@Base+0x5714>
   22f94:	movw	r2, #490	; 0x1ea
   22f98:	add	r0, pc, r0
   22f9c:	add	r1, pc, r1
   22fa0:	add	r3, pc, r3
   22fa4:	bl	1497c <__assert_fail@plt>
   22fa8:	ldr	r0, [pc, #620]	; 2321c <__flatcc_fb_gen_c_json_parser@@Base+0x5620>
   22fac:	ldr	r1, [pc, #620]	; 23220 <__flatcc_fb_gen_c_json_parser@@Base+0x5624>
   22fb0:	ldr	r3, [pc, #620]	; 23224 <__flatcc_fb_gen_c_json_parser@@Base+0x5628>
   22fb4:	movw	r2, #539	; 0x21b
   22fb8:	add	r0, pc, r0
   22fbc:	add	r1, pc, r1
   22fc0:	add	r3, pc, r3
   22fc4:	bl	1497c <__assert_fail@plt>
   22fc8:	ldr	r0, [pc, #836]	; 23314 <__flatcc_fb_gen_c_json_parser@@Base+0x5718>
   22fcc:	ldr	r1, [pc, #836]	; 23318 <__flatcc_fb_gen_c_json_parser@@Base+0x571c>
   22fd0:	ldr	r3, [pc, #836]	; 2331c <__flatcc_fb_gen_c_json_parser@@Base+0x5720>
   22fd4:	movw	r2, #559	; 0x22f
   22fd8:	add	r0, pc, r0
   22fdc:	add	r1, pc, r1
   22fe0:	add	r3, pc, r3
   22fe4:	bl	1497c <__assert_fail@plt>
   22fe8:	ldr	r0, [pc, #840]	; 23338 <__flatcc_fb_gen_c_json_parser@@Base+0x573c>
   22fec:	ldr	r1, [pc, #840]	; 2333c <__flatcc_fb_gen_c_json_parser@@Base+0x5740>
   22ff0:	ldr	r3, [pc, #840]	; 23340 <__flatcc_fb_gen_c_json_parser@@Base+0x5744>
   22ff4:	movw	r2, #647	; 0x287
   22ff8:	add	r0, pc, r0
   22ffc:	add	r1, pc, r1
   23000:	add	r3, pc, r3
   23004:	bl	1497c <__assert_fail@plt>
   23008:	ldr	r0, [pc, #408]	; 231a8 <__flatcc_fb_gen_c_json_parser@@Base+0x55ac>
   2300c:	mov	r3, #96	; 0x60
   23010:	ldr	r0, [pc, r0]
   23014:	ldr	r0, [r0]
   23018:	ldr	r1, [pc, #396]	; 231ac <__flatcc_fb_gen_c_json_parser@@Base+0x55b0>
   2301c:	add	r1, pc, r1
   23020:	str	r1, [sp]
   23024:	ldr	r1, [pc, #388]	; 231b0 <__flatcc_fb_gen_c_json_parser@@Base+0x55b4>
   23028:	ldr	r4, [pc, #388]	; 231b4 <__flatcc_fb_gen_c_json_parser@@Base+0x55b8>
   2302c:	add	r4, pc, r4
   23030:	add	r1, pc, r1
   23034:	mov	r2, r4
   23038:	bl	148bc <fprintf@plt>
   2303c:	ldr	r0, [pc, #372]	; 231b8 <__flatcc_fb_gen_c_json_parser@@Base+0x55bc>
   23040:	ldr	r3, [pc, #372]	; 231bc <__flatcc_fb_gen_c_json_parser@@Base+0x55c0>
   23044:	mov	r1, r4
   23048:	mov	r2, #96	; 0x60
   2304c:	add	r0, pc, r0
   23050:	add	r3, pc, r3
   23054:	bl	1497c <__assert_fail@plt>
   23058:	ldr	r0, [pc, #704]	; 23320 <__flatcc_fb_gen_c_json_parser@@Base+0x5724>
   2305c:	ldr	r1, [pc, #704]	; 23324 <__flatcc_fb_gen_c_json_parser@@Base+0x5728>
   23060:	ldr	r3, [pc, #704]	; 23328 <__flatcc_fb_gen_c_json_parser@@Base+0x572c>
   23064:	movw	r2, #602	; 0x25a
   23068:	add	r0, pc, r0
   2306c:	add	r1, pc, r1
   23070:	add	r3, pc, r3
   23074:	bl	1497c <__assert_fail@plt>
   23078:	ldr	r0, [pc, #464]	; 23250 <__flatcc_fb_gen_c_json_parser@@Base+0x5654>
   2307c:	movw	r3, #590	; 0x24e
   23080:	ldr	r0, [pc, r0]
   23084:	ldr	r0, [r0]
   23088:	ldr	r1, [pc, #452]	; 23254 <__flatcc_fb_gen_c_json_parser@@Base+0x5658>
   2308c:	add	r1, pc, r1
   23090:	str	r1, [sp]
   23094:	ldr	r1, [pc, #444]	; 23258 <__flatcc_fb_gen_c_json_parser@@Base+0x565c>
   23098:	ldr	r4, [pc, #444]	; 2325c <__flatcc_fb_gen_c_json_parser@@Base+0x5660>
   2309c:	add	r4, pc, r4
   230a0:	add	r1, pc, r1
   230a4:	mov	r2, r4
   230a8:	bl	148bc <fprintf@plt>
   230ac:	ldr	r0, [pc, #428]	; 23260 <__flatcc_fb_gen_c_json_parser@@Base+0x5664>
   230b0:	ldr	r3, [pc, #428]	; 23264 <__flatcc_fb_gen_c_json_parser@@Base+0x5668>
   230b4:	mov	r1, r4
   230b8:	movw	r2, #590	; 0x24e
   230bc:	add	r0, pc, r0
   230c0:	add	r3, pc, r3
   230c4:	bl	1497c <__assert_fail@plt>
   230c8:	ldr	r0, [pc, #604]	; 2332c <__flatcc_fb_gen_c_json_parser@@Base+0x5730>
   230cc:	ldr	r1, [pc, #604]	; 23330 <__flatcc_fb_gen_c_json_parser@@Base+0x5734>
   230d0:	ldr	r3, [pc, #604]	; 23334 <__flatcc_fb_gen_c_json_parser@@Base+0x5738>
   230d4:	movw	r2, #627	; 0x273
   230d8:	add	r0, pc, r0
   230dc:	add	r1, pc, r1
   230e0:	add	r3, pc, r3
   230e4:	bl	1497c <__assert_fail@plt>
   230e8:	ldr	r0, [pc, #460]	; 232bc <__flatcc_fb_gen_c_json_parser@@Base+0x56c0>
   230ec:	mov	r3, #636	; 0x27c
   230f0:	ldr	r0, [pc, r0]
   230f4:	ldr	r0, [r0]
   230f8:	ldr	r1, [pc, #448]	; 232c0 <__flatcc_fb_gen_c_json_parser@@Base+0x56c4>
   230fc:	add	r1, pc, r1
   23100:	str	r1, [sp]
   23104:	ldr	r1, [pc, #440]	; 232c4 <__flatcc_fb_gen_c_json_parser@@Base+0x56c8>
   23108:	ldr	r4, [pc, #440]	; 232c8 <__flatcc_fb_gen_c_json_parser@@Base+0x56cc>
   2310c:	add	r4, pc, r4
   23110:	add	r1, pc, r1
   23114:	mov	r2, r4
   23118:	bl	148bc <fprintf@plt>
   2311c:	ldr	r0, [pc, #424]	; 232cc <__flatcc_fb_gen_c_json_parser@@Base+0x56d0>
   23120:	ldr	r3, [pc, #424]	; 232d0 <__flatcc_fb_gen_c_json_parser@@Base+0x56d4>
   23124:	mov	r1, r4
   23128:	mov	r2, #636	; 0x27c
   2312c:	add	r0, pc, r0
   23130:	add	r3, pc, r3
   23134:	bl	1497c <__assert_fail@plt>
   23138:	ldr	r0, [pc, #528]	; 23350 <__flatcc_fb_gen_c_json_parser@@Base+0x5754>
   2313c:	ldr	r1, [pc, #528]	; 23354 <__flatcc_fb_gen_c_json_parser@@Base+0x5758>
   23140:	ldr	r3, [pc, #528]	; 23358 <__flatcc_fb_gen_c_json_parser@@Base+0x575c>
   23144:	movw	r2, #675	; 0x2a3
   23148:	add	r0, pc, r0
   2314c:	add	r1, pc, r1
   23150:	add	r3, pc, r3
   23154:	bl	1497c <__assert_fail@plt>
   23158:	ldr	r0, [pc, #484]	; 23344 <__flatcc_fb_gen_c_json_parser@@Base+0x5748>
   2315c:	ldr	r1, [pc, #484]	; 23348 <__flatcc_fb_gen_c_json_parser@@Base+0x574c>
   23160:	ldr	r3, [pc, #484]	; 2334c <__flatcc_fb_gen_c_json_parser@@Base+0x5750>
   23164:	movw	r2, #661	; 0x295
   23168:	add	r0, pc, r0
   2316c:	add	r1, pc, r1
   23170:	add	r3, pc, r3
   23174:	bl	1497c <__assert_fail@plt>
   23178:	andeq	r0, r3, r8, lsr ip
   2317c:	andeq	r0, r3, fp, ror #24
   23180:	andeq	r0, r3, r3, asr sl
   23184:	andeq	r0, r3, r2, ror r9
   23188:	ldrdeq	r0, [r3], -fp
   2318c:			; <UNDEFINED> instruction: 0x000309bd
   23190:	andeq	r3, r2, r9, lsl #30
   23194:	andeq	r3, r2, fp, asr r5
   23198:	andeq	r4, r3, pc, ror #26
   2319c:	andeq	r3, r2, r1, ror #10
   231a0:			; <UNDEFINED> instruction: 0x00023eb2
   231a4:	andeq	r3, r2, r2, lsl #10
   231a8:	andeq	r8, r4, ip, lsl #1
   231ac:	andeq	r2, r2, r9, ror sp
   231b0:	andeq	ip, r1, r6, asr r5
   231b4:	andeq	r2, r2, r9, lsl #26
   231b8:	andeq	sp, r2, r2, lsl #8
   231bc:	andeq	r3, r2, r5, ror r6
   231c0:	andeq	r3, r2, r4, lsl #29
   231c4:	ldrdeq	r3, [r2], -r8
   231c8:	andeq	r3, r2, fp, lsr #29
   231cc:	andeq	r3, r2, r1, lsl #10
   231d0:	andeq	r3, r2, pc, asr #28
   231d4:	muleq	r2, pc, r4	; <UNPREDICTABLE>
   231d8:	andeq	r3, r2, r2, asr #28
   231dc:	muleq	r2, r4, r4
   231e0:	andeq	r3, r2, r1, ror lr
   231e4:	andeq	r3, r2, r5, asr #9
   231e8:	andeq	r3, r2, ip, lsr #28
   231ec:	andeq	r3, r2, r2, lsl #9
   231f0:	andeq	r3, r2, r8, lsr #9
   231f4:	andeq	r3, r2, sl, lsl #10
   231f8:	andeq	r0, r3, lr, lsr r8
   231fc:	andeq	r0, r3, r9, lsl #16
   23200:	andeq	r0, r3, ip, asr #16
   23204:	andeq	r0, r3, r9, lsl r5
   23208:	andeq	r0, r3, r4, asr #16
   2320c:	andeq	r0, r3, r0, asr #16
   23210:	andeq	r0, r3, r8, asr r8
   23214:	andeq	r0, r3, r0, asr r8
   23218:	andeq	r0, r3, r5, asr r8
   2321c:	andeq	lr, r2, r7, asr #31
   23220:	andeq	lr, r2, pc, asr #31
   23224:	andeq	r0, r3, r5, lsl #1
   23228:	andeq	r0, r3, lr, lsr #16
   2322c:	andeq	r0, r3, ip, asr #16
   23230:	andeq	r0, r3, r9, asr #16
   23234:	andeq	r0, r3, ip, ror r8
   23238:	andeq	r0, r3, r3, lsr #17
   2323c:	muleq	r3, r6, r8
   23240:	ldrdeq	r0, [r3], -ip
   23244:	ldrdeq	lr, [r1], -fp
   23248:	andeq	r0, r3, ip, asr #17
   2324c:	andeq	r0, r3, r0, ror r8
   23250:	andeq	r8, r4, ip, lsl r0
   23254:	andeq	r0, r3, pc, asr r4
   23258:	andeq	ip, r1, r6, ror #9
   2325c:	andeq	lr, r2, pc, ror #29
   23260:	muleq	r2, r2, r3
   23264:	andeq	pc, r2, r5, lsl #31
   23268:	andeq	r0, r3, r0, lsl #16
   2326c:	andeq	r0, r3, sl, lsr #17
   23270:	andeq	r0, r3, r2, ror #17
   23274:	andeq	lr, r1, r7, ror #25
   23278:	andeq	r0, r3, pc, lsr #19
   2327c:	andeq	r0, r3, r3, lsl #20
   23280:	strdeq	r0, [r3], -r3
   23284:	strdeq	r0, [r3], -ip
   23288:	andeq	r0, r3, ip, ror #17
   2328c:			; <UNDEFINED> instruction: 0x00030bb8
   23290:	strdeq	r0, [r3], -sp
   23294:	strdeq	r0, [r3], -sl
   23298:	andeq	lr, r1, r3, lsr #26
   2329c:	strdeq	r0, [r3], -r8
   232a0:	andeq	r0, r3, r9, ror #16
   232a4:	andeq	r0, r3, r0, asr r4
   232a8:	andeq	r0, r3, r4, ror r4
   232ac:	andeq	r0, r3, ip, ror #8
   232b0:	andeq	r0, r3, r1, ror r4
   232b4:	ldrdeq	r0, [r3], -pc	; <UNPREDICTABLE>
   232b8:	andeq	r0, r3, lr, lsr #18
   232bc:	andeq	r7, r4, ip, lsr #31
   232c0:	andeq	r0, r3, fp, lsr r7
   232c4:	andeq	ip, r1, r6, ror r4
   232c8:	andeq	lr, r2, pc, ror lr
   232cc:	andeq	sp, r2, r2, lsr #6
   232d0:	andeq	pc, r2, r5, lsl pc	; <UNPREDICTABLE>
   232d4:	andeq	r1, r3, lr, lsl #5
   232d8:	muleq	r3, sp, sl
   232dc:	andeq	r0, r3, r4, lsr #21
   232e0:			; <UNDEFINED> instruction: 0x00030ab0
   232e4:	andeq	r0, r3, fp, lsl #21
   232e8:	andeq	r0, r3, sp, ror r9
   232ec:	andeq	pc, r2, r2, ror #14
   232f0:	andeq	r8, r4, ip, lsl fp
   232f4:	andeq	r0, r3, lr, ror sl
   232f8:	andeq	ip, r1, r6, ror #31
   232fc:	andeq	pc, r2, pc, ror #19
   23300:	muleq	r2, r2, lr
   23304:	andeq	r0, r3, r5, lsl #21
   23308:	andeq	lr, r2, r7, ror #31
   2330c:	andeq	lr, r2, pc, ror #31
   23310:	andeq	r0, r3, r5, lsr #1
   23314:	andeq	lr, r2, r7, lsr #31
   23318:	andeq	lr, r2, pc, lsr #31
   2331c:	andeq	r0, r3, r5, rrx
   23320:	andeq	lr, r2, r7, lsl pc
   23324:	andeq	lr, r2, pc, lsl pc
   23328:	ldrdeq	pc, [r2], -r5
   2332c:	andeq	lr, r2, r7, lsr #29
   23330:	andeq	lr, r2, pc, lsr #29
   23334:	andeq	pc, r2, r5, ror #30
   23338:	andeq	lr, r2, r7, lsl #31
   2333c:	andeq	lr, r2, pc, lsl #31
   23340:	andeq	r0, r3, r5, asr #32
   23344:	andeq	lr, r2, r7, lsl lr
   23348:	andeq	lr, r2, pc, lsl lr
   2334c:	ldrdeq	pc, [r2], -r5
   23350:	andeq	lr, r2, r7, lsr lr
   23354:	andeq	lr, r2, pc, lsr lr
   23358:	andeq	pc, r2, sl, ror #28
   2335c:	ldr	r1, [pc, #4]	; 23368 <__flatcc_fb_gen_c_json_parser@@Base+0x576c>
   23360:	add	r1, pc, r1
   23364:	b	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   23368:	andeq	pc, r2, r0, asr fp	; <UNPREDICTABLE>
   2336c:	push	{r4, r5, r6, sl, fp, lr}
   23370:	add	fp, sp, #16
   23374:	sub	sp, sp, #224	; 0xe0
   23378:	ldr	r1, [pc, #240]	; 23470 <__flatcc_fb_gen_c_json_parser@@Base+0x5874>
   2337c:	mov	r5, r2
   23380:	ldr	r2, [fp, #8]
   23384:	mov	r4, r0
   23388:	add	r1, pc, r1
   2338c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   23390:	ldr	r1, [pc, #220]	; 23474 <__flatcc_fb_gen_c_json_parser@@Base+0x5878>
   23394:	mov	r0, r4
   23398:	add	r1, pc, r1
   2339c:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   233a0:	ldr	r0, [r4, #220]	; 0xdc
   233a4:	add	r0, r0, #1
   233a8:	str	r0, [r4, #220]	; 0xdc
   233ac:	ldrh	r0, [r5, #8]
   233b0:	sub	r0, r0, #3
   233b4:	uxth	r0, r0
   233b8:	cmp	r0, #2
   233bc:	bcs	23430 <__flatcc_fb_gen_c_json_parser@@Base+0x5834>
   233c0:	mov	r6, sp
   233c4:	mov	r1, #0
   233c8:	mov	r2, #220	; 0xdc
   233cc:	mov	r0, r6
   233d0:	bl	148d4 <memset@plt>
   233d4:	ldr	r0, [r5, #12]
   233d8:	mov	r1, r5
   233dc:	mov	r2, r6
   233e0:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   233e4:	ldr	r1, [pc, #140]	; 23478 <__flatcc_fb_gen_c_json_parser@@Base+0x587c>
   233e8:	mov	r0, r4
   233ec:	mov	r2, r6
   233f0:	add	r1, pc, r1
   233f4:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   233f8:	ldr	r0, [r4, #220]	; 0xdc
   233fc:	cmp	r0, #0
   23400:	beq	23450 <__flatcc_fb_gen_c_json_parser@@Base+0x5854>
   23404:	sub	r0, r0, #1
   23408:	str	r0, [r4, #220]	; 0xdc
   2340c:	mov	r0, r4
   23410:	ldr	r1, [pc, #100]	; 2347c <__flatcc_fb_gen_c_json_parser@@Base+0x5880>
   23414:	add	r1, pc, r1
   23418:	bl	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   2341c:	ldr	r0, [r4, #220]	; 0xdc
   23420:	add	r0, r0, #1
   23424:	str	r0, [r4, #220]	; 0xdc
   23428:	sub	sp, fp, #16
   2342c:	pop	{r4, r5, r6, sl, fp, pc}
   23430:	ldr	r0, [pc, #72]	; 23480 <__flatcc_fb_gen_c_json_parser@@Base+0x5884>
   23434:	ldr	r1, [pc, #72]	; 23484 <__flatcc_fb_gen_c_json_parser@@Base+0x5888>
   23438:	ldr	r3, [pc, #72]	; 23488 <__flatcc_fb_gen_c_json_parser@@Base+0x588c>
   2343c:	movw	r2, #729	; 0x2d9
   23440:	add	r0, pc, r0
   23444:	add	r1, pc, r1
   23448:	add	r3, pc, r3
   2344c:	bl	1497c <__assert_fail@plt>
   23450:	ldr	r0, [pc, #52]	; 2348c <__flatcc_fb_gen_c_json_parser@@Base+0x5890>
   23454:	ldr	r1, [pc, #52]	; 23490 <__flatcc_fb_gen_c_json_parser@@Base+0x5894>
   23458:	ldr	r3, [pc, #52]	; 23494 <__flatcc_fb_gen_c_json_parser@@Base+0x5898>
   2345c:	movw	r2, #742	; 0x2e6
   23460:	add	r0, pc, r0
   23464:	add	r1, pc, r1
   23468:	add	r3, pc, r3
   2346c:	bl	1497c <__assert_fail@plt>
   23470:	andeq	r0, r3, r2, lsl sp
   23474:	andeq	pc, r2, r7, asr r6	; <UNPREDICTABLE>
   23478:	andeq	r0, r3, r7, lsl #27
   2347c:			; <UNDEFINED> instruction: 0x0002f2b2
   23480:	andeq	r2, r2, r3, asr #11
   23484:	andeq	lr, r2, r7, asr #22
   23488:	andeq	r0, r3, r0, ror #25
   2348c:	andeq	lr, r2, pc, lsl fp
   23490:	andeq	lr, r2, r7, lsr #22
   23494:	andeq	r0, r3, r4, ror ip
   23498:	ldr	r1, [pc, #4]	; 234a4 <__flatcc_fb_gen_c_json_parser@@Base+0x58a8>
   2349c:	add	r1, pc, r1
   234a0:	b	202cc <__flatcc_fb_gen_c_json_parser@@Base+0x26d0>
   234a4:	andeq	pc, r2, r6, ror r6	; <UNPREDICTABLE>
   234a8:	push	{r4, sl, fp, lr}
   234ac:	add	fp, sp, #8
   234b0:	mov	r4, r0
   234b4:	ldrh	r0, [r1, #8]
   234b8:	sub	r0, r0, #3
   234bc:	cmp	r0, #1
   234c0:	pophi	{r4, sl, fp, pc}
   234c4:	ldr	r0, [r4, #4]
   234c8:	ldr	r1, [r1, #16]
   234cc:	add	r0, r0, #172	; 0xac
   234d0:	bl	276f8 <ptr_set_find_item@@Base>
   234d4:	cmp	r0, #0
   234d8:	ldrne	r0, [r4]
   234dc:	addne	r0, r0, #1
   234e0:	strne	r0, [r4]
   234e4:	pop	{r4, sl, fp, pc}
   234e8:	push	{r4, r5, fp, lr}
   234ec:	add	fp, sp, #8
   234f0:	mov	r4, r0
   234f4:	ldrh	r0, [r1, #8]
   234f8:	sub	r0, r0, #3
   234fc:	cmp	r0, #1
   23500:	bhi	23540 <__flatcc_fb_gen_c_json_parser@@Base+0x5944>
   23504:	ldr	r0, [r4, #4]
   23508:	mov	r5, r1
   2350c:	ldr	r1, [r1, #16]
   23510:	add	r0, r0, #172	; 0xac
   23514:	bl	276f8 <ptr_set_find_item@@Base>
   23518:	cmp	r0, #0
   2351c:	popeq	{r4, r5, fp, pc}
   23520:	ldr	r1, [r5, #4]
   23524:	ldr	r0, [r4, #8]
   23528:	ldr	r2, [r1]
   2352c:	str	r2, [r0]
   23530:	ldr	r1, [r1, #4]
   23534:	stmib	r0, {r1, r5}
   23538:	add	r0, r0, #16
   2353c:	str	r0, [r4, #8]
   23540:	pop	{r4, r5, fp, pc}
   23544:	push	{r4, sl, fp, lr}
   23548:	add	fp, sp, #8
   2354c:	mov	r4, r0
   23550:	ldr	r0, [r0, #16]
   23554:	cmp	r0, #0
   23558:	beq	23560 <__flatcc_fb_gen_c_json_parser@@Base+0x5964>
   2355c:	bl	147fc <free@plt>
   23560:	ldr	r0, [r4, #20]
   23564:	cmp	r0, #0
   23568:	beq	23570 <__flatcc_fb_gen_c_json_parser@@Base+0x5974>
   2356c:	bl	147fc <free@plt>
   23570:	ldr	r0, [r4, #24]
   23574:	cmp	r0, #0
   23578:	beq	23580 <__flatcc_fb_gen_c_json_parser@@Base+0x5984>
   2357c:	bl	147fc <free@plt>
   23580:	vmov.i32	q8, #0	; 0x00000000
   23584:	mov	r0, #28
   23588:	add	r1, r4, #16
   2358c:	vst1.32	{d16-d17}, [r4], r0
   23590:	vst1.32	{d16-d17}, [r4]
   23594:	vst1.32	{d16-d17}, [r1]
   23598:	pop	{r4, sl, fp, pc}
   2359c:	mov	r2, r0
   235a0:	add	r0, r1, #4
   235a4:	ldr	r1, [pc, #4]	; 235b0 <__flatcc_fb_gen_c_json_parser@@Base+0x59b4>
   235a8:	add	r1, pc, r1
   235ac:	b	28068 <fb_symbol_table_visit@@Base>
   235b0:	andeq	r0, r0, ip, lsl r0
   235b4:	mov	r2, r0
   235b8:	add	r0, r1, #4
   235bc:	ldr	r1, [pc, #4]	; 235c8 <__flatcc_fb_gen_c_json_parser@@Base+0x59cc>
   235c0:	add	r1, pc, r1
   235c4:	b	28068 <fb_symbol_table_visit@@Base>
   235c8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   235cc:	push	{r4, r5, fp, lr}
   235d0:	add	fp, sp, #8
   235d4:	mov	r4, r0
   235d8:	ldrh	r0, [r1, #8]
   235dc:	cmp	r0, #4
   235e0:	bhi	23694 <__flatcc_fb_gen_c_json_parser@@Base+0x5a98>
   235e4:	ldr	r0, [r4, #40]	; 0x28
   235e8:	mov	r5, r1
   235ec:	ldr	r1, [r1, #16]
   235f0:	add	r0, r0, #172	; 0xac
   235f4:	bl	276f8 <ptr_set_find_item@@Base>
   235f8:	cmp	r0, #0
   235fc:	popeq	{r4, r5, fp, pc}
   23600:	ldr	r1, [r4]
   23604:	mov	r0, #1
   23608:	cmp	r1, #0
   2360c:	beq	23648 <__flatcc_fb_gen_c_json_parser@@Base+0x5a4c>
   23610:	ldr	r1, [r5, #12]
   23614:	ldr	r1, [r1]
   23618:	cmp	r1, #0
   2361c:	beq	23648 <__flatcc_fb_gen_c_json_parser@@Base+0x5a4c>
   23620:	mov	r0, #0
   23624:	ldr	r2, [r1]
   23628:	ldr	r1, [r1, #4]
   2362c:	ldr	r1, [r1, #4]
   23630:	cmp	r2, #0
   23634:	add	r0, r0, r1
   23638:	mov	r1, r2
   2363c:	add	r0, r0, #1
   23640:	bne	23624 <__flatcc_fb_gen_c_json_parser@@Base+0x5a28>
   23644:	add	r0, r0, #1
   23648:	ldr	r1, [r5, #4]
   2364c:	ldr	r1, [r1, #4]
   23650:	add	r0, r0, r1
   23654:	ldr	r1, [r4, #12]
   23658:	add	r0, r0, r1
   2365c:	str	r0, [r4, #12]
   23660:	ldrh	r0, [r5, #8]
   23664:	sub	r1, r0, #3
   23668:	cmp	r1, #2
   2366c:	bcc	23688 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8c>
   23670:	cmp	r0, #1
   23674:	bhi	23694 <__flatcc_fb_gen_c_json_parser@@Base+0x5a98>
   23678:	ldr	r0, [r4, #4]
   2367c:	add	r0, r0, #1
   23680:	str	r0, [r4, #4]
   23684:	pop	{r4, r5, fp, pc}
   23688:	ldr	r0, [r4, #8]
   2368c:	add	r0, r0, #1
   23690:	str	r0, [r4, #8]
   23694:	pop	{r4, r5, fp, pc}
   23698:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2369c:	add	fp, sp, #28
   236a0:	sub	sp, sp, #4
   236a4:	mov	r9, r0
   236a8:	ldrh	r0, [r1, #8]
   236ac:	cmp	r0, #4
   236b0:	bhi	23794 <__flatcc_fb_gen_c_json_parser@@Base+0x5b98>
   236b4:	ldr	r0, [r9, #40]	; 0x28
   236b8:	mov	sl, r1
   236bc:	ldr	r1, [r1, #16]
   236c0:	add	r0, r0, #172	; 0xac
   236c4:	bl	276f8 <ptr_set_find_item@@Base>
   236c8:	cmp	r0, #0
   236cc:	beq	23794 <__flatcc_fb_gen_c_json_parser@@Base+0x5b98>
   236d0:	ldr	r0, [r9]
   236d4:	ldr	r8, [r9, #36]	; 0x24
   236d8:	cmp	r0, #0
   236dc:	mov	r6, r8
   236e0:	beq	23728 <__flatcc_fb_gen_c_json_parser@@Base+0x5b2c>
   236e4:	ldr	r0, [sl, #12]
   236e8:	mov	r6, r8
   236ec:	ldr	r4, [r0]
   236f0:	cmp	r4, #0
   236f4:	beq	23728 <__flatcc_fb_gen_c_json_parser@@Base+0x5b2c>
   236f8:	mov	r5, #46	; 0x2e
   236fc:	mov	r6, r8
   23700:	ldr	r0, [r4, #4]
   23704:	ldm	r0, {r1, r7}
   23708:	mov	r0, r6
   2370c:	mov	r2, r7
   23710:	bl	14808 <memcpy@plt>
   23714:	strb	r5, [r6, r7]!
   23718:	ldr	r4, [r4]
   2371c:	add	r6, r6, #1
   23720:	cmp	r4, #0
   23724:	bne	23700 <__flatcc_fb_gen_c_json_parser@@Base+0x5b04>
   23728:	ldr	r0, [sl, #4]
   2372c:	ldm	r0, {r1, r7}
   23730:	mov	r0, r6
   23734:	mov	r2, r7
   23738:	bl	14808 <memcpy@plt>
   2373c:	mov	r0, #0
   23740:	strb	r0, [r6, r7]!
   23744:	add	r0, r6, #1
   23748:	str	r0, [r9, #36]	; 0x24
   2374c:	ldrh	r0, [sl, #8]
   23750:	sub	r1, r0, #3
   23754:	cmp	r1, #2
   23758:	bcc	23780 <__flatcc_fb_gen_c_json_parser@@Base+0x5b84>
   2375c:	cmp	r0, #1
   23760:	bhi	23794 <__flatcc_fb_gen_c_json_parser@@Base+0x5b98>
   23764:	ldr	r0, [r9, #28]
   23768:	str	sl, [r0]
   2376c:	str	r8, [r0, #4]
   23770:	add	r0, r0, #8
   23774:	str	r0, [r9, #28]
   23778:	sub	sp, fp, #28
   2377c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23780:	ldr	r0, [r9, #32]
   23784:	str	sl, [r0]
   23788:	str	r8, [r0, #4]
   2378c:	add	r0, r0, #8
   23790:	str	r0, [r9, #32]
   23794:	sub	sp, fp, #28
   23798:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2379c:	ldr	r1, [r1, #4]
   237a0:	ldr	r0, [r0, #4]
   237a4:	b	147e4 <strcmp@plt>

000237a8 <__flatcc_fb_gen_c_json_printer@@Base>:
   237a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   237ac:	add	fp, sp, #28
   237b0:	sub	sp, sp, #508	; 0x1fc
   237b4:	mov	r4, r0
   237b8:	mov	r9, r0
   237bc:	ldr	r1, [r4, #208]	; 0xd0
   237c0:	ldr	r0, [r9, #204]!	; 0xcc
   237c4:	ldr	r2, [r1, #164]	; 0xa4
   237c8:	ldr	r1, [pc, #4028]	; 2478c <__flatcc_fb_gen_c_json_printer@@Base+0xfe4>
   237cc:	add	r1, pc, r1
   237d0:	mov	r3, r2
   237d4:	bl	148bc <fprintf@plt>
   237d8:	ldr	r3, [r9]
   237dc:	ldr	r0, [pc, #4012]	; 24790 <__flatcc_fb_gen_c_json_printer@@Base+0xfe8>
   237e0:	mov	r1, #81	; 0x51
   237e4:	mov	r2, #1
   237e8:	add	r0, pc, r0
   237ec:	bl	14850 <fwrite@plt>
   237f0:	ldr	r3, [r9]
   237f4:	ldr	r0, [pc, #3992]	; 24794 <__flatcc_fb_gen_c_json_printer@@Base+0xfec>
   237f8:	mov	r1, #40	; 0x28
   237fc:	mov	r2, #1
   23800:	add	r0, pc, r0
   23804:	bl	14850 <fwrite@plt>
   23808:	ldr	r1, [pc, #3976]	; 24798 <__flatcc_fb_gen_c_json_printer@@Base+0xff0>
   2380c:	ldr	r2, [pc, #3976]	; 2479c <__flatcc_fb_gen_c_json_printer@@Base+0xff4>
   23810:	mov	r0, r4
   23814:	add	r1, pc, r1
   23818:	add	r2, pc, r2
   2381c:	bl	159d4 <__flatcc_fb_gen_c_includes@@Base>
   23820:	ldr	r0, [r4, #212]	; 0xd4
   23824:	str	r4, [sp, #48]	; 0x30
   23828:	ldr	r0, [r0, #140]	; 0x8c
   2382c:	cmp	r0, #0
   23830:	beq	2384c <__flatcc_fb_gen_c_json_printer@@Base+0xa4>
   23834:	ldr	r3, [r9]
   23838:	ldr	r0, [pc, #4060]	; 2481c <__flatcc_fb_gen_c_json_printer@@Base+0x1074>
   2383c:	mov	r1, #36	; 0x24
   23840:	mov	r2, #1
   23844:	add	r0, pc, r0
   23848:	bl	14850 <fwrite@plt>
   2384c:	ldr	r4, [sp, #48]	; 0x30
   23850:	mov	r0, #10
   23854:	ldr	r1, [r4, #204]	; 0xcc
   23858:	bl	1491c <fputc@plt>
   2385c:	ldr	r4, [r4, #208]	; 0xd0
   23860:	sub	r0, fp, #256	; 0x100
   23864:	mov	r1, #0
   23868:	mov	r2, #220	; 0xdc
   2386c:	ldr	r5, [r4, #52]	; 0x34
   23870:	bl	148d4 <memset@plt>
   23874:	cmp	r5, #0
   23878:	beq	238c0 <__flatcc_fb_gen_c_json_printer@@Base+0x118>
   2387c:	ldrh	r0, [r5, #8]
   23880:	cmp	r0, #1
   23884:	bhi	238c0 <__flatcc_fb_gen_c_json_printer@@Base+0x118>
   23888:	ldr	r4, [sp, #48]	; 0x30
   2388c:	movw	r1, #482	; 0x1e2
   23890:	mov	r2, #1
   23894:	ldr	r3, [r4, #204]	; 0xcc
   23898:	ldr	r0, [pc, #4064]	; 24880 <__flatcc_fb_gen_c_json_printer@@Base+0x10d8>
   2389c:	add	r0, pc, r0
   238a0:	bl	14850 <fwrite@plt>
   238a4:	ldr	r1, [r4, #208]	; 0xd0
   238a8:	ldr	r0, [r4, #204]	; 0xcc
   238ac:	ldr	r2, [r1, #160]	; 0xa0
   238b0:	ldr	r1, [pc, #4044]	; 24884 <__flatcc_fb_gen_c_json_printer@@Base+0x10dc>
   238b4:	add	r1, pc, r1
   238b8:	bl	148bc <fprintf@plt>
   238bc:	ldr	r4, [r4, #208]	; 0xd0
   238c0:	ldr	r4, [r4, #40]	; 0x28
   238c4:	cmp	r4, #0
   238c8:	beq	23978 <__flatcc_fb_gen_c_json_printer@@Base+0x1d0>
   238cc:	ldr	r8, [pc, #4020]	; 24888 <__flatcc_fb_gen_c_json_printer@@Base+0x10e0>
   238d0:	ldr	r7, [pc, #4020]	; 2488c <__flatcc_fb_gen_c_json_printer@@Base+0x10e4>
   238d4:	ldr	r6, [pc, #4020]	; 24890 <__flatcc_fb_gen_c_json_printer@@Base+0x10e8>
   238d8:	sub	r5, fp, #256	; 0x100
   238dc:	add	r8, pc, r8
   238e0:	add	r7, pc, r7
   238e4:	add	r6, pc, r6
   238e8:	b	23918 <__flatcc_fb_gen_c_json_printer@@Base+0x170>
   238ec:	ldr	r0, [r4, #12]
   238f0:	mov	r1, r4
   238f4:	mov	r2, r5
   238f8:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   238fc:	ldr	r0, [r9]
   23900:	mov	r1, r7
   23904:	mov	r2, r5
   23908:	bl	148bc <fprintf@plt>
   2390c:	ldr	r4, [r4]
   23910:	cmp	r4, #0
   23914:	beq	23978 <__flatcc_fb_gen_c_json_printer@@Base+0x1d0>
   23918:	ldrh	r0, [r4, #8]
   2391c:	cmp	r0, #0
   23920:	beq	2395c <__flatcc_fb_gen_c_json_printer@@Base+0x1b4>
   23924:	cmp	r0, #1
   23928:	beq	238ec <__flatcc_fb_gen_c_json_printer@@Base+0x144>
   2392c:	cmp	r0, #4
   23930:	bne	2390c <__flatcc_fb_gen_c_json_printer@@Base+0x164>
   23934:	ldr	r0, [r4, #12]
   23938:	mov	r1, r4
   2393c:	mov	r2, r5
   23940:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   23944:	ldr	r0, [r9]
   23948:	mov	r1, r6
   2394c:	mov	r2, r5
   23950:	mov	r3, r5
   23954:	bl	148bc <fprintf@plt>
   23958:	b	2390c <__flatcc_fb_gen_c_json_printer@@Base+0x164>
   2395c:	ldr	r0, [r4, #12]
   23960:	mov	r1, r4
   23964:	mov	r2, r5
   23968:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   2396c:	ldr	r0, [r9]
   23970:	mov	r1, r8
   23974:	b	23904 <__flatcc_fb_gen_c_json_printer@@Base+0x15c>
   23978:	ldr	r4, [sp, #48]	; 0x30
   2397c:	mov	r0, #10
   23980:	ldr	r1, [r4, #204]	; 0xcc
   23984:	bl	1491c <fputc@plt>
   23988:	ldr	r0, [r4, #208]	; 0xd0
   2398c:	ldr	r5, [r0, #40]	; 0x28
   23990:	cmp	r5, #0
   23994:	beq	24948 <__flatcc_fb_gen_c_json_printer@@Base+0x11a0>
   23998:	ldr	sl, [pc, #3988]	; 24934 <__flatcc_fb_gen_c_json_printer@@Base+0x118c>
   2399c:	sub	r8, fp, #256	; 0x100
   239a0:	add	sl, pc, sl
   239a4:	b	239e0 <__flatcc_fb_gen_c_json_printer@@Base+0x238>
   239a8:	ldr	r0, [r9]
   239ac:	ldr	r1, [pc, #3972]	; 24938 <__flatcc_fb_gen_c_json_printer@@Base+0x1190>
   239b0:	ldr	r2, [sp, #52]	; 0x34
   239b4:	add	r1, pc, r1
   239b8:	bl	148bc <fprintf@plt>
   239bc:	ldr	r3, [r9]
   239c0:	ldr	r0, [pc, #3956]	; 2493c <__flatcc_fb_gen_c_json_printer@@Base+0x1194>
   239c4:	mov	r1, #3
   239c8:	mov	r2, #1
   239cc:	add	r0, pc, r0
   239d0:	bl	14850 <fwrite@plt>
   239d4:	ldr	r5, [r5]
   239d8:	cmp	r5, #0
   239dc:	beq	23db0 <__flatcc_fb_gen_c_json_printer@@Base+0x608>
   239e0:	ldrh	r0, [r5, #8]
   239e4:	cmp	r0, #3
   239e8:	bne	239d4 <__flatcc_fb_gen_c_json_printer@@Base+0x22c>
   239ec:	mov	r0, r8
   239f0:	mov	r1, #0
   239f4:	mov	r2, #220	; 0xdc
   239f8:	bl	148d4 <memset@plt>
   239fc:	ldr	r0, [r5, #12]
   23a00:	mov	r1, r5
   23a04:	mov	r2, r8
   23a08:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   23a0c:	ldr	r1, [r5, #40]	; 0x28
   23a10:	sub	r0, r1, #1
   23a14:	cmp	r0, #11
   23a18:	bcs	24be4 <__flatcc_fb_gen_c_json_printer@@Base+0x143c>
   23a1c:	cmp	r1, #5
   23a20:	ldr	r1, [sp, #48]	; 0x30
   23a24:	mov	r3, sl
   23a28:	moveq	r3, r1
   23a2c:	ldr	r1, [pc, #4020]	; 249e8 <__flatcc_fb_gen_c_json_printer@@Base+0x1240>
   23a30:	add	r1, pc, r1
   23a34:	ldr	ip, [r1, r0, lsl #2]
   23a38:	ldr	r1, [pc, #4012]	; 249ec <__flatcc_fb_gen_c_json_printer@@Base+0x1244>
   23a3c:	add	r1, pc, r1
   23a40:	ldr	r0, [r1, r0, lsl #2]
   23a44:	str	r0, [sp, #52]	; 0x34
   23a48:	ldrb	r0, [r5, #92]	; 0x5c
   23a4c:	tst	r0, #32
   23a50:	bne	23b3c <__flatcc_fb_gen_c_json_printer@@Base+0x394>
   23a54:	ldr	r0, [r9]
   23a58:	str	ip, [sp]
   23a5c:	mov	r2, r8
   23a60:	ldr	r1, [pc, #3976]	; 249f0 <__flatcc_fb_gen_c_json_printer@@Base+0x1248>
   23a64:	add	r1, pc, r1
   23a68:	bl	148bc <fprintf@plt>
   23a6c:	ldr	r3, [r9]
   23a70:	ldr	r0, [pc, #4092]	; 24a74 <__flatcc_fb_gen_c_json_printer@@Base+0x12cc>
   23a74:	mov	r1, #18
   23a78:	mov	r2, #1
   23a7c:	add	r0, pc, r0
   23a80:	bl	14850 <fwrite@plt>
   23a84:	ldr	r4, [r5, #20]
   23a88:	ldr	r6, [pc, #4072]	; 24a78 <__flatcc_fb_gen_c_json_printer@@Base+0x12d0>
   23a8c:	cmp	r4, #0
   23a90:	add	r6, pc, r6
   23a94:	bne	23ad0 <__flatcc_fb_gen_c_json_printer@@Base+0x328>
   23a98:	b	239a8 <__flatcc_fb_gen_c_json_printer@@Base+0x200>
   23a9c:	ldr	r1, [r4, #4]
   23aa0:	ldrb	r2, [r4, #48]	; 0x30
   23aa4:	ldr	r0, [r9]
   23aa8:	ldr	r7, [r1]
   23aac:	ldr	r3, [r1, #4]
   23ab0:	str	r7, [sp]
   23ab4:	str	r3, [sp, #4]
   23ab8:	ldr	r1, [pc, #4028]	; 24a7c <__flatcc_fb_gen_c_json_printer@@Base+0x12d4>
   23abc:	add	r1, pc, r1
   23ac0:	bl	148bc <fprintf@plt>
   23ac4:	ldr	r4, [r4]
   23ac8:	cmp	r4, #0
   23acc:	beq	239a8 <__flatcc_fb_gen_c_json_printer@@Base+0x200>
   23ad0:	ldrh	r1, [r4, #56]	; 0x38
   23ad4:	add	r0, r4, #48	; 0x30
   23ad8:	cmp	r1, #4
   23adc:	beq	23b18 <__flatcc_fb_gen_c_json_printer@@Base+0x370>
   23ae0:	cmp	r1, #6
   23ae4:	beq	23a9c <__flatcc_fb_gen_c_json_printer@@Base+0x2f4>
   23ae8:	cmp	r1, #5
   23aec:	bne	24ad4 <__flatcc_fb_gen_c_json_printer@@Base+0x132c>
   23af0:	ldr	r1, [r4, #4]
   23af4:	ldrd	r2, [r0]
   23af8:	ldr	r0, [r9]
   23afc:	ldr	r7, [r1]
   23b00:	ldr	r1, [r1, #4]
   23b04:	stm	sp, {r1, r7}
   23b08:	str	r1, [sp, #8]
   23b0c:	ldr	r1, [pc, #4028]	; 24ad0 <__flatcc_fb_gen_c_json_printer@@Base+0x1328>
   23b10:	add	r1, pc, r1
   23b14:	b	23ac0 <__flatcc_fb_gen_c_json_printer@@Base+0x318>
   23b18:	ldr	r1, [r4, #4]
   23b1c:	ldrd	r2, [r0]
   23b20:	ldr	r0, [r9]
   23b24:	ldr	r7, [r1]
   23b28:	ldr	r1, [r1, #4]
   23b2c:	stm	sp, {r1, r7}
   23b30:	str	r1, [sp, #8]
   23b34:	mov	r1, r6
   23b38:	b	23ac0 <__flatcc_fb_gen_c_json_printer@@Base+0x318>
   23b3c:	ldrd	r0, [r5, #112]	; 0x70
   23b40:	mov	r6, #0
   23b44:	eor	r2, r0, #1
   23b48:	orrs	r2, r2, r1
   23b4c:	beq	23b98 <__flatcc_fb_gen_c_json_printer@@Base+0x3f0>
   23b50:	eor	r2, r0, #4
   23b54:	orrs	r2, r2, r1
   23b58:	beq	23b80 <__flatcc_fb_gen_c_json_printer@@Base+0x3d8>
   23b5c:	eor	r0, r0, #2
   23b60:	orrs	r0, r0, r1
   23b64:	bne	23bb0 <__flatcc_fb_gen_c_json_printer@@Base+0x408>
   23b68:	ldr	sl, [pc, #4020]	; 24b24 <__flatcc_fb_gen_c_json_printer@@Base+0x137c>
   23b6c:	ldr	r4, [pc, #4020]	; 24b28 <__flatcc_fb_gen_c_json_printer@@Base+0x1380>
   23b70:	movw	r7, #65535	; 0xffff
   23b74:	add	sl, pc, sl
   23b78:	add	r4, pc, r4
   23b7c:	b	23bc8 <__flatcc_fb_gen_c_json_printer@@Base+0x420>
   23b80:	ldr	sl, [pc, #4084]	; 24b7c <__flatcc_fb_gen_c_json_printer@@Base+0x13d4>
   23b84:	ldr	r4, [pc, #4084]	; 24b80 <__flatcc_fb_gen_c_json_printer@@Base+0x13d8>
   23b88:	mvn	r7, #0
   23b8c:	add	sl, pc, sl
   23b90:	add	r4, pc, r4
   23b94:	b	23bc8 <__flatcc_fb_gen_c_json_printer@@Base+0x420>
   23b98:	ldr	sl, [pc, #4068]	; 24b84 <__flatcc_fb_gen_c_json_printer@@Base+0x13dc>
   23b9c:	ldr	r4, [pc, #4068]	; 24b88 <__flatcc_fb_gen_c_json_printer@@Base+0x13e0>
   23ba0:	mov	r7, #255	; 0xff
   23ba4:	add	sl, pc, sl
   23ba8:	add	r4, pc, r4
   23bac:	b	23bc8 <__flatcc_fb_gen_c_json_printer@@Base+0x420>
   23bb0:	ldr	sl, [pc, #4052]	; 24b8c <__flatcc_fb_gen_c_json_printer@@Base+0x13e4>
   23bb4:	ldr	r4, [pc, #4052]	; 24b90 <__flatcc_fb_gen_c_json_printer@@Base+0x13e8>
   23bb8:	mvn	r7, #0
   23bbc:	mvn	r6, #0
   23bc0:	add	sl, pc, sl
   23bc4:	add	r4, pc, r4
   23bc8:	ldr	r0, [r5, #20]
   23bcc:	cmp	r0, #0
   23bd0:	bne	23bf4 <__flatcc_fb_gen_c_json_printer@@Base+0x44c>
   23bd4:	b	23c2c <__flatcc_fb_gen_c_json_printer@@Base+0x484>
   23bd8:	ldr	r2, [r1]
   23bdc:	ldr	r1, [r1, #4]
   23be0:	ldr	r0, [r0]
   23be4:	bic	r6, r6, r1
   23be8:	bic	r7, r7, r2
   23bec:	cmp	r0, #0
   23bf0:	beq	23c2c <__flatcc_fb_gen_c_json_printer@@Base+0x484>
   23bf4:	ldrh	r2, [r0, #56]	; 0x38
   23bf8:	add	r1, r0, #48	; 0x30
   23bfc:	cmp	r2, #4
   23c00:	beq	23bd8 <__flatcc_fb_gen_c_json_printer@@Base+0x430>
   23c04:	cmp	r2, #6
   23c08:	beq	23c18 <__flatcc_fb_gen_c_json_printer@@Base+0x470>
   23c0c:	cmp	r2, #5
   23c10:	beq	23bd8 <__flatcc_fb_gen_c_json_printer@@Base+0x430>
   23c14:	b	23c20 <__flatcc_fb_gen_c_json_printer@@Base+0x478>
   23c18:	ldrb	r1, [r1]
   23c1c:	bic	r7, r7, r1
   23c20:	ldr	r0, [r0]
   23c24:	cmp	r0, #0
   23c28:	bne	23bf4 <__flatcc_fb_gen_c_json_printer@@Base+0x44c>
   23c2c:	ldr	r0, [r9]
   23c30:	str	ip, [sp]
   23c34:	sub	r2, fp, #256	; 0x100
   23c38:	mov	r8, ip
   23c3c:	ldr	r1, [pc, #4080]	; 24c34 <__flatcc_fb_gen_c_json_printer@@Base+0x148c>
   23c40:	add	r1, pc, r1
   23c44:	bl	148bc <fprintf@plt>
   23c48:	mov	r0, r4
   23c4c:	mov	r1, r8
   23c50:	bl	147e4 <strcmp@plt>
   23c54:	mov	r1, r0
   23c58:	ldr	r0, [r9]
   23c5c:	cmp	r1, #0
   23c60:	beq	23c7c <__flatcc_fb_gen_c_json_printer@@Base+0x4d4>
   23c64:	ldr	r1, [pc, #4044]	; 24c38 <__flatcc_fb_gen_c_json_printer@@Base+0x1490>
   23c68:	mov	r2, r4
   23c6c:	mov	r3, r4
   23c70:	add	r1, pc, r1
   23c74:	bl	148bc <fprintf@plt>
   23c78:	b	23c8c <__flatcc_fb_gen_c_json_printer@@Base+0x4e4>
   23c7c:	ldr	r1, [pc, #4024]	; 24c3c <__flatcc_fb_gen_c_json_printer@@Base+0x1494>
   23c80:	mov	r2, r4
   23c84:	add	r1, pc, r1
   23c88:	bl	148bc <fprintf@plt>
   23c8c:	ldr	r3, [r9]
   23c90:	ldr	r0, [pc, #4088]	; 24c90 <__flatcc_fb_gen_c_json_printer@@Base+0x14e8>
   23c94:	mov	r1, #54	; 0x36
   23c98:	mov	r2, #1
   23c9c:	add	r0, pc, r0
   23ca0:	bl	14850 <fwrite@plt>
   23ca4:	ldr	r1, [r9]
   23ca8:	mov	r0, #10
   23cac:	bl	1491c <fputc@plt>
   23cb0:	orrs	r0, r7, r6
   23cb4:	beq	23cd8 <__flatcc_fb_gen_c_json_printer@@Base+0x530>
   23cb8:	ldr	r1, [sp, #52]	; 0x34
   23cbc:	ldr	r0, [r9]
   23cc0:	mov	r2, r7
   23cc4:	mov	r3, r6
   23cc8:	str	r1, [sp]
   23ccc:	ldr	r1, [pc, #4032]	; 24c94 <__flatcc_fb_gen_c_json_printer@@Base+0x14ec>
   23cd0:	add	r1, pc, r1
   23cd4:	bl	148bc <fprintf@plt>
   23cd8:	ldr	r3, [r9]
   23cdc:	ldr	r0, [pc, #4020]	; 24c98 <__flatcc_fb_gen_c_json_printer@@Base+0x14f0>
   23ce0:	mov	r1, #59	; 0x3b
   23ce4:	mov	r2, #1
   23ce8:	add	r0, pc, r0
   23cec:	bl	14850 <fwrite@plt>
   23cf0:	ldr	r4, [r5, #20]
   23cf4:	ldr	r6, [pc, #4080]	; 24cec <__flatcc_fb_gen_c_json_printer@@Base+0x1544>
   23cf8:	cmp	r4, #0
   23cfc:	add	r6, pc, r6
   23d00:	bne	23d40 <__flatcc_fb_gen_c_json_printer@@Base+0x598>
   23d04:	b	23d88 <__flatcc_fb_gen_c_json_printer@@Base+0x5e0>
   23d08:	ldr	r1, [r4, #4]
   23d0c:	ldrb	r2, [r4, #48]	; 0x30
   23d10:	ldr	r0, [r9]
   23d14:	ldr	r3, [r1]
   23d18:	ldr	r1, [r1, #4]
   23d1c:	str	sl, [sp]
   23d20:	stmib	sp, {r1, r3}
   23d24:	str	r1, [sp, #12]
   23d28:	mov	r1, r6
   23d2c:	mov	r3, #0
   23d30:	bl	148bc <fprintf@plt>
   23d34:	ldr	r4, [r4]
   23d38:	cmp	r4, #0
   23d3c:	beq	23d88 <__flatcc_fb_gen_c_json_printer@@Base+0x5e0>
   23d40:	ldrh	r1, [r4, #56]	; 0x38
   23d44:	add	r0, r4, #48	; 0x30
   23d48:	cmp	r1, #4
   23d4c:	beq	23d60 <__flatcc_fb_gen_c_json_printer@@Base+0x5b8>
   23d50:	cmp	r1, #6
   23d54:	beq	23d08 <__flatcc_fb_gen_c_json_printer@@Base+0x560>
   23d58:	cmp	r1, #5
   23d5c:	bne	24b2c <__flatcc_fb_gen_c_json_printer@@Base+0x1384>
   23d60:	ldr	r1, [r4, #4]
   23d64:	ldrd	r2, [r0]
   23d68:	ldr	r0, [r9]
   23d6c:	ldr	r7, [r1]
   23d70:	ldr	r1, [r1, #4]
   23d74:	str	sl, [sp]
   23d78:	stmib	sp, {r1, r7}
   23d7c:	str	r1, [sp, #12]
   23d80:	mov	r1, r6
   23d84:	b	23d30 <__flatcc_fb_gen_c_json_printer@@Base+0x588>
   23d88:	ldr	r3, [r9]
   23d8c:	ldr	r0, [pc, #4092]	; 24d90 <__flatcc_fb_gen_c_json_printer@@Base+0x15e8>
   23d90:	mov	r1, #59	; 0x3b
   23d94:	mov	r2, #1
   23d98:	add	r0, pc, r0
   23d9c:	bl	14850 <fwrite@plt>
   23da0:	ldr	sl, [pc, #4076]	; 24d94 <__flatcc_fb_gen_c_json_printer@@Base+0x15ec>
   23da4:	sub	r8, fp, #256	; 0x100
   23da8:	add	sl, pc, sl
   23dac:	b	239bc <__flatcc_fb_gen_c_json_printer@@Base+0x214>
   23db0:	ldr	r0, [sp, #48]	; 0x30
   23db4:	ldr	r0, [r0, #208]	; 0xd0
   23db8:	ldr	r4, [r0, #40]	; 0x28
   23dbc:	cmp	r4, #0
   23dc0:	beq	24948 <__flatcc_fb_gen_c_json_printer@@Base+0x11a0>
   23dc4:	ldr	sl, [pc, #4044]	; 24d98 <__flatcc_fb_gen_c_json_printer@@Base+0x15f0>
   23dc8:	ldr	r7, [pc, #4044]	; 24d9c <__flatcc_fb_gen_c_json_printer@@Base+0x15f4>
   23dcc:	sub	r8, fp, #256	; 0x100
   23dd0:	add	r6, sp, #56	; 0x38
   23dd4:	add	sl, pc, sl
   23dd8:	add	r7, pc, r7
   23ddc:	b	23e1c <__flatcc_fb_gen_c_json_printer@@Base+0x674>
   23de0:	ldr	r3, [r9]
   23de4:	ldr	r0, [pc, #4020]	; 24da0 <__flatcc_fb_gen_c_json_printer@@Base+0x15f8>
   23de8:	mov	r1, #28
   23dec:	mov	r2, #1
   23df0:	add	r0, pc, r0
   23df4:	bl	14850 <fwrite@plt>
   23df8:	ldr	r3, [r9]
   23dfc:	ldr	r0, [pc, #4080]	; 24df4 <__flatcc_fb_gen_c_json_printer@@Base+0x164c>
   23e00:	mov	r1, #9
   23e04:	mov	r2, #1
   23e08:	add	r0, pc, r0
   23e0c:	bl	14850 <fwrite@plt>
   23e10:	ldr	r4, [r4]
   23e14:	cmp	r4, #0
   23e18:	beq	23fd0 <__flatcc_fb_gen_c_json_printer@@Base+0x828>
   23e1c:	ldrh	r0, [r4, #8]
   23e20:	cmp	r0, #4
   23e24:	bne	23e10 <__flatcc_fb_gen_c_json_printer@@Base+0x668>
   23e28:	mov	r0, r8
   23e2c:	mov	r1, #0
   23e30:	mov	r2, #220	; 0xdc
   23e34:	bl	148d4 <memset@plt>
   23e38:	ldr	r0, [r4, #12]
   23e3c:	mov	r1, r4
   23e40:	mov	r2, r8
   23e44:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   23e48:	ldr	r0, [r9]
   23e4c:	ldr	r1, [pc, #4052]	; 24e28 <__flatcc_fb_gen_c_json_printer@@Base+0x1680>
   23e50:	mov	r2, r8
   23e54:	add	r1, pc, r1
   23e58:	bl	148bc <fprintf@plt>
   23e5c:	ldr	r5, [r4, #20]
   23e60:	cmp	r5, #0
   23e64:	bne	23e78 <__flatcc_fb_gen_c_json_printer@@Base+0x6d0>
   23e68:	b	23eb0 <__flatcc_fb_gen_c_json_printer@@Base+0x708>
   23e6c:	ldr	r5, [r5]
   23e70:	cmp	r5, #0
   23e74:	beq	23eb0 <__flatcc_fb_gen_c_json_printer@@Base+0x708>
   23e78:	ldrh	r0, [r5, #24]
   23e7c:	cmp	r0, #0
   23e80:	beq	23e6c <__flatcc_fb_gen_c_json_printer@@Base+0x6c4>
   23e84:	ldr	r1, [r5, #4]
   23e88:	ldr	r0, [r9]
   23e8c:	ldr	r2, [r5, #48]	; 0x30
   23e90:	ldr	r6, [r1]
   23e94:	ldr	r3, [r1, #4]
   23e98:	mov	r1, r7
   23e9c:	str	r6, [sp]
   23ea0:	add	r6, sp, #56	; 0x38
   23ea4:	str	r3, [sp, #4]
   23ea8:	bl	148bc <fprintf@plt>
   23eac:	b	23e6c <__flatcc_fb_gen_c_json_printer@@Base+0x6c4>
   23eb0:	ldr	r3, [r9]
   23eb4:	ldr	r0, [pc, #3952]	; 24e2c <__flatcc_fb_gen_c_json_printer@@Base+0x1684>
   23eb8:	mov	r1, #78	; 0x4e
   23ebc:	mov	r2, #1
   23ec0:	add	r0, pc, r0
   23ec4:	bl	14850 <fwrite@plt>
   23ec8:	ldr	r3, [r9]
   23ecc:	ldr	r0, [pc, #3932]	; 24e30 <__flatcc_fb_gen_c_json_printer@@Base+0x1688>
   23ed0:	mov	r1, #9
   23ed4:	mov	r2, #1
   23ed8:	add	r0, pc, r0
   23edc:	bl	14850 <fwrite@plt>
   23ee0:	mov	r0, r8
   23ee4:	mov	r1, #0
   23ee8:	mov	r2, #220	; 0xdc
   23eec:	bl	148d4 <memset@plt>
   23ef0:	mov	r0, r6
   23ef4:	mov	r1, #0
   23ef8:	mov	r2, #220	; 0xdc
   23efc:	bl	148d4 <memset@plt>
   23f00:	ldr	r0, [r4, #12]
   23f04:	mov	r1, r4
   23f08:	mov	r2, r8
   23f0c:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   23f10:	ldr	r0, [r9]
   23f14:	ldr	r1, [pc, #3864]	; 24e34 <__flatcc_fb_gen_c_json_printer@@Base+0x168c>
   23f18:	mov	r2, r8
   23f1c:	add	r1, pc, r1
   23f20:	bl	148bc <fprintf@plt>
   23f24:	ldr	r5, [r4, #20]
   23f28:	cmp	r5, #0
   23f2c:	bne	23f50 <__flatcc_fb_gen_c_json_printer@@Base+0x7a8>
   23f30:	b	23de0 <__flatcc_fb_gen_c_json_printer@@Base+0x638>
   23f34:	ldr	r2, [r5, #48]	; 0x30
   23f38:	ldr	r0, [r9]
   23f3c:	mov	r1, sl
   23f40:	bl	148bc <fprintf@plt>
   23f44:	ldr	r5, [r5]
   23f48:	cmp	r5, #0
   23f4c:	beq	23de0 <__flatcc_fb_gen_c_json_printer@@Base+0x638>
   23f50:	ldrh	r0, [r5, #24]
   23f54:	cmp	r0, #0
   23f58:	beq	23f44 <__flatcc_fb_gen_c_json_printer@@Base+0x79c>
   23f5c:	cmp	r0, #10
   23f60:	beq	23f34 <__flatcc_fb_gen_c_json_printer@@Base+0x78c>
   23f64:	cmp	r0, #14
   23f68:	bne	24a80 <__flatcc_fb_gen_c_json_printer@@Base+0x12d8>
   23f6c:	ldr	r1, [r5, #16]
   23f70:	mov	r2, r6
   23f74:	ldr	r0, [r1, #12]
   23f78:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   23f7c:	ldr	r0, [r5, #16]
   23f80:	ldrh	r0, [r0, #8]
   23f84:	cmp	r0, #1
   23f88:	beq	23fa8 <__flatcc_fb_gen_c_json_printer@@Base+0x800>
   23f8c:	cmp	r0, #0
   23f90:	bne	24b94 <__flatcc_fb_gen_c_json_printer@@Base+0x13ec>
   23f94:	ldr	r2, [r5, #48]	; 0x30
   23f98:	ldr	r0, [r9]
   23f9c:	ldr	r1, [pc, #3732]	; 24e38 <__flatcc_fb_gen_c_json_printer@@Base+0x1690>
   23fa0:	add	r1, pc, r1
   23fa4:	b	23fb8 <__flatcc_fb_gen_c_json_printer@@Base+0x810>
   23fa8:	ldr	r2, [r5, #48]	; 0x30
   23fac:	ldr	r0, [r9]
   23fb0:	ldr	r1, [pc, #3716]	; 24e3c <__flatcc_fb_gen_c_json_printer@@Base+0x1694>
   23fb4:	add	r1, pc, r1
   23fb8:	mov	r3, r6
   23fbc:	bl	148bc <fprintf@plt>
   23fc0:	ldr	r5, [r5]
   23fc4:	cmp	r5, #0
   23fc8:	bne	23f50 <__flatcc_fb_gen_c_json_printer@@Base+0x7a8>
   23fcc:	b	23de0 <__flatcc_fb_gen_c_json_printer@@Base+0x638>
   23fd0:	ldr	r0, [sp, #48]	; 0x30
   23fd4:	ldr	r0, [r0, #208]	; 0xd0
   23fd8:	ldr	r4, [r0, #40]	; 0x28
   23fdc:	cmp	r4, #0
   23fe0:	beq	24948 <__flatcc_fb_gen_c_json_printer@@Base+0x11a0>
   23fe4:	sub	r8, fp, #256	; 0x100
   23fe8:	b	24028 <__flatcc_fb_gen_c_json_printer@@Base+0x880>
   23fec:	ldr	r3, [r9]
   23ff0:	ldr	r0, [pc, #3728]	; 24e88 <__flatcc_fb_gen_c_json_printer@@Base+0x16e0>
   23ff4:	mov	r1, #3
   23ff8:	mov	r2, #1
   23ffc:	add	r0, pc, r0
   24000:	bl	14850 <fwrite@plt>
   24004:	ldr	r0, [r9]
   24008:	ldr	r1, [pc, #3708]	; 24e8c <__flatcc_fb_gen_c_json_printer@@Base+0x16e4>
   2400c:	mov	r2, r8
   24010:	mov	r3, r8
   24014:	add	r1, pc, r1
   24018:	bl	148bc <fprintf@plt>
   2401c:	ldr	r4, [r4]
   24020:	cmp	r4, #0
   24024:	beq	241d4 <__flatcc_fb_gen_c_json_printer@@Base+0xa2c>
   24028:	ldrh	r0, [r4, #8]
   2402c:	cmp	r0, #1
   24030:	bne	2401c <__flatcc_fb_gen_c_json_printer@@Base+0x874>
   24034:	mov	r0, r8
   24038:	mov	r1, #0
   2403c:	mov	r2, #220	; 0xdc
   24040:	bl	148d4 <memset@plt>
   24044:	mov	r0, r6
   24048:	mov	r1, #0
   2404c:	mov	r2, #220	; 0xdc
   24050:	bl	148d4 <memset@plt>
   24054:	ldr	r0, [r4, #12]
   24058:	mov	r1, r4
   2405c:	mov	r2, r8
   24060:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   24064:	ldr	r0, [r9]
   24068:	ldr	r1, [pc, #3584]	; 24e70 <__flatcc_fb_gen_c_json_printer@@Base+0x16c8>
   2406c:	mov	r2, r8
   24070:	add	r1, pc, r1
   24074:	bl	148bc <fprintf@plt>
   24078:	ldr	r5, [r4, #20]
   2407c:	cmp	r5, #0
   24080:	beq	23fec <__flatcc_fb_gen_c_json_printer@@Base+0x844>
   24084:	mov	sl, #0
   24088:	b	240d4 <__flatcc_fb_gen_c_json_printer@@Base+0x92c>
   2408c:	ldr	r1, [r5, #4]
   24090:	ldrd	r2, [r5, #80]	; 0x50
   24094:	ldr	r0, [r9]
   24098:	ldr	r7, [r1]
   2409c:	ldr	r1, [r1, #4]
   240a0:	stm	sp, {r2, r3}
   240a4:	str	r6, [sp, #20]
   240a8:	mov	r2, sl
   240ac:	str	r1, [sp, #8]
   240b0:	str	r7, [sp, #12]
   240b4:	str	r1, [sp, #16]
   240b8:	ldr	r1, [pc, #3524]	; 24e84 <__flatcc_fb_gen_c_json_printer@@Base+0x16dc>
   240bc:	add	r1, pc, r1
   240c0:	bl	148bc <fprintf@plt>
   240c4:	ldr	r5, [r5]
   240c8:	add	sl, sl, #1
   240cc:	cmp	r5, #0
   240d0:	beq	23fec <__flatcc_fb_gen_c_json_printer@@Base+0x844>
   240d4:	ldrb	r0, [r5, #72]	; 0x48
   240d8:	tst	r0, #4
   240dc:	bne	240c4 <__flatcc_fb_gen_c_json_printer@@Base+0x91c>
   240e0:	ldrh	r0, [r5, #24]
   240e4:	cmp	r0, #14
   240e8:	beq	24150 <__flatcc_fb_gen_c_json_printer@@Base+0x9a8>
   240ec:	cmp	r0, #8
   240f0:	bne	240c4 <__flatcc_fb_gen_c_json_printer@@Base+0x91c>
   240f4:	ldr	r0, [r5, #16]
   240f8:	sub	r1, r0, #1
   240fc:	cmp	r1, #11
   24100:	bcs	24be4 <__flatcc_fb_gen_c_json_printer@@Base+0x143c>
   24104:	ldr	r2, [r5, #4]
   24108:	ldr	r3, [r5, #80]	; 0x50
   2410c:	ldr	r0, [r9]
   24110:	ldr	r7, [r5, #84]	; 0x54
   24114:	ldr	r6, [r2]
   24118:	ldr	r2, [r2, #4]
   2411c:	stm	sp, {r3, r7}
   24120:	mov	r3, sl
   24124:	str	r2, [sp, #8]
   24128:	str	r6, [sp, #12]
   2412c:	str	r2, [sp, #16]
   24130:	ldr	r2, [pc, #3388]	; 24e74 <__flatcc_fb_gen_c_json_printer@@Base+0x16cc>
   24134:	add	r2, pc, r2
   24138:	ldr	r2, [r2, r1, lsl #2]
   2413c:	ldr	r1, [pc, #3380]	; 24e78 <__flatcc_fb_gen_c_json_printer@@Base+0x16d0>
   24140:	add	r1, pc, r1
   24144:	bl	148bc <fprintf@plt>
   24148:	add	r6, sp, #56	; 0x38
   2414c:	b	240c4 <__flatcc_fb_gen_c_json_printer@@Base+0x91c>
   24150:	ldr	r1, [r5, #16]
   24154:	mov	r2, r6
   24158:	ldr	r0, [r1, #12]
   2415c:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   24160:	ldr	r0, [r5, #16]
   24164:	ldrh	r1, [r0, #8]
   24168:	cmp	r1, #1
   2416c:	beq	2408c <__flatcc_fb_gen_c_json_printer@@Base+0x8e4>
   24170:	cmp	r1, #3
   24174:	bne	240c4 <__flatcc_fb_gen_c_json_printer@@Base+0x91c>
   24178:	ldr	r0, [r0, #40]	; 0x28
   2417c:	sub	r1, r0, #1
   24180:	cmp	r1, #11
   24184:	bcs	24be4 <__flatcc_fb_gen_c_json_printer@@Base+0x143c>
   24188:	ldr	r2, [r5, #4]
   2418c:	ldrd	r6, [r5, #80]	; 0x50
   24190:	ldr	r0, [r9]
   24194:	ldr	r3, [r2]
   24198:	ldr	r2, [r2, #4]
   2419c:	stm	sp, {r6, r7}
   241a0:	add	r6, sp, #56	; 0x38
   241a4:	str	r6, [sp, #20]
   241a8:	str	r3, [sp, #12]
   241ac:	str	r2, [sp, #8]
   241b0:	str	r2, [sp, #16]
   241b4:	mov	r3, sl
   241b8:	ldr	r2, [pc, #3260]	; 24e7c <__flatcc_fb_gen_c_json_printer@@Base+0x16d4>
   241bc:	add	r2, pc, r2
   241c0:	ldr	r2, [r2, r1, lsl #2]
   241c4:	ldr	r1, [pc, #3252]	; 24e80 <__flatcc_fb_gen_c_json_printer@@Base+0x16d8>
   241c8:	add	r1, pc, r1
   241cc:	bl	148bc <fprintf@plt>
   241d0:	b	240c4 <__flatcc_fb_gen_c_json_printer@@Base+0x91c>
   241d4:	ldr	r0, [sp, #48]	; 0x30
   241d8:	ldr	r0, [r0, #208]	; 0xd0
   241dc:	ldr	r5, [r0, #40]	; 0x28
   241e0:	cmp	r5, #0
   241e4:	beq	24948 <__flatcc_fb_gen_c_json_printer@@Base+0x11a0>
   241e8:	sub	r8, fp, #256	; 0x100
   241ec:	b	24204 <__flatcc_fb_gen_c_json_printer@@Base+0xa5c>
   241f0:	ldr	r5, [sp, #44]	; 0x2c
   241f4:	add	r6, sp, #56	; 0x38
   241f8:	ldr	r5, [r5]
   241fc:	cmp	r5, #0
   24200:	beq	24940 <__flatcc_fb_gen_c_json_printer@@Base+0x1198>
   24204:	ldrh	r0, [r5, #8]
   24208:	cmp	r0, #0
   2420c:	bne	241f8 <__flatcc_fb_gen_c_json_printer@@Base+0xa50>
   24210:	mov	r0, r8
   24214:	mov	r1, #0
   24218:	mov	r2, #220	; 0xdc
   2421c:	add	r4, r5, #96	; 0x60
   24220:	bl	148d4 <memset@plt>
   24224:	mov	r0, r6
   24228:	mov	r1, #0
   2422c:	mov	r2, #220	; 0xdc
   24230:	bl	148d4 <memset@plt>
   24234:	ldr	r0, [r5, #12]
   24238:	mov	r1, r5
   2423c:	mov	r2, r8
   24240:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   24244:	str	r4, [sp, #52]	; 0x34
   24248:	mov	r1, #4
   2424c:	ldrd	r6, [r4]
   24250:	mov	r0, r6
   24254:	bl	147cc <calloc@plt>
   24258:	mov	r4, r0
   2425c:	orrs	r0, r6, r7
   24260:	beq	2426c <__flatcc_fb_gen_c_json_printer@@Base+0xac4>
   24264:	cmp	r4, #0
   24268:	beq	24da4 <__flatcc_fb_gen_c_json_printer@@Base+0x15fc>
   2426c:	ldr	r0, [r5, #20]
   24270:	str	r5, [sp, #44]	; 0x2c
   24274:	cmp	r0, #0
   24278:	beq	24290 <__flatcc_fb_gen_c_json_printer@@Base+0xae8>
   2427c:	ldr	r1, [r0, #96]	; 0x60
   24280:	str	r0, [r4, r1, lsl #2]
   24284:	ldr	r0, [r0]
   24288:	cmp	r0, #0
   2428c:	bne	2427c <__flatcc_fb_gen_c_json_printer@@Base+0xad4>
   24290:	ldr	r0, [r9]
   24294:	ldr	r1, [pc, #3060]	; 24e90 <__flatcc_fb_gen_c_json_printer@@Base+0x16e8>
   24298:	mov	r2, r8
   2429c:	add	r1, pc, r1
   242a0:	bl	148bc <fprintf@plt>
   242a4:	ldr	r0, [sp, #52]	; 0x34
   242a8:	ldrd	r0, [r0]
   242ac:	orrs	r0, r0, r1
   242b0:	beq	248ec <__flatcc_fb_gen_c_json_printer@@Base+0x1144>
   242b4:	ldr	r0, [sp, #52]	; 0x34
   242b8:	mov	r7, #0
   242bc:	mov	r8, #0
   242c0:	add	r0, r0, #16
   242c4:	str	r0, [sp, #40]	; 0x28
   242c8:	b	24330 <__flatcc_fb_gen_c_json_printer@@Base+0xb88>
   242cc:	ldr	r3, [r5, #4]
   242d0:	ldr	lr, [r6]
   242d4:	ldr	ip, [r6, #4]
   242d8:	ldr	r6, [sl]
   242dc:	ldr	r1, [sl, #4]
   242e0:	ldr	r0, [r9]
   242e4:	ldr	r5, [r3]
   242e8:	ldr	r3, [r3, #4]
   242ec:	str	r6, [sp, #24]
   242f0:	str	r1, [sp, #28]
   242f4:	str	lr, [sp]
   242f8:	str	ip, [sp, #4]
   242fc:	str	r3, [sp, #8]
   24300:	str	r5, [sp, #12]
   24304:	str	r3, [sp, #16]
   24308:	ldr	r1, [pc, #3128]	; 24f48 <__flatcc_fb_gen_c_json_printer@@Base+0x17a0>
   2430c:	add	r1, pc, r1
   24310:	bl	148bc <fprintf@plt>
   24314:	ldr	r0, [sp, #52]	; 0x34
   24318:	adds	r7, r7, #1
   2431c:	adc	r8, r8, #0
   24320:	ldrd	r0, [r0]
   24324:	subs	r0, r7, r0
   24328:	sbcs	r0, r8, r1
   2432c:	bcs	248ec <__flatcc_fb_gen_c_json_printer@@Base+0x1144>
   24330:	ldr	r5, [r4, r7, lsl #2]
   24334:	cmp	r5, #0
   24338:	beq	24314 <__flatcc_fb_gen_c_json_printer@@Base+0xb6c>
   2433c:	ldrb	r0, [r5, #72]	; 0x48
   24340:	tst	r0, #4
   24344:	bne	24314 <__flatcc_fb_gen_c_json_printer@@Base+0xb6c>
   24348:	ldr	r3, [r9]
   2434c:	ldr	r0, [pc, #2880]	; 24e94 <__flatcc_fb_gen_c_json_printer@@Base+0x16ec>
   24350:	mov	r1, #5
   24354:	mov	r2, #1
   24358:	add	r0, pc, r0
   2435c:	bl	14850 <fwrite@plt>
   24360:	ldrh	r0, [r5, #24]
   24364:	sub	r0, r0, #7
   24368:	cmp	r0, #8
   2436c:	bhi	24314 <__flatcc_fb_gen_c_json_printer@@Base+0xb6c>
   24370:	add	r1, pc, #12
   24374:	add	sl, r5, #48	; 0x30
   24378:	add	r6, r5, #96	; 0x60
   2437c:	ldr	r0, [r1, r0, lsl #2]
   24380:	add	pc, r1, r0
   24384:	andeq	r0, r0, r4, lsr #32
   24388:	andeq	r0, r0, r4, lsl #2
   2438c:	andeq	r0, r0, r4, rrx
   24390:	andeq	r0, r0, r8, lsl #3
   24394:			; <UNDEFINED> instruction: 0xffffff90
   24398:			; <UNDEFINED> instruction: 0xffffff90
   2439c:			; <UNDEFINED> instruction: 0xffffff90
   243a0:			; <UNDEFINED> instruction: 0x000001b4
   243a4:	muleq	r0, r0, r0
   243a8:	ldrh	r0, [r5, #72]	; 0x48
   243ac:	tst	r0, #3072	; 0xc00
   243b0:	beq	245ac <__flatcc_fb_gen_c_json_printer@@Base+0xe04>
   243b4:	ldrd	r2, [r6]
   243b8:	ldr	r6, [r5, #4]
   243bc:	mov	r1, #1
   243c0:	bic	r1, r1, r0, lsr #10
   243c4:	ldr	r0, [r9]
   243c8:	ldm	r6, {r5, r6}
   243cc:	str	r6, [sp]
   243d0:	stmib	sp, {r5, r6}
   243d4:	str	r1, [sp, #12]
   243d8:	ldr	r1, [pc, #2780]	; 24ebc <__flatcc_fb_gen_c_json_printer@@Base+0x1714>
   243dc:	add	r1, pc, r1
   243e0:	bl	148bc <fprintf@plt>
   243e4:	b	24314 <__flatcc_fb_gen_c_json_printer@@Base+0xb6c>
   243e8:	ldr	r1, [r5, #4]
   243ec:	ldrd	r2, [r6]
   243f0:	ldr	r0, [r9]
   243f4:	ldr	r6, [r1]
   243f8:	ldr	r1, [r1, #4]
   243fc:	stm	sp, {r1, r6}
   24400:	str	r1, [sp, #8]
   24404:	ldr	r1, [pc, #2760]	; 24ed4 <__flatcc_fb_gen_c_json_printer@@Base+0x172c>
   24408:	add	r1, pc, r1
   2440c:	bl	148bc <fprintf@plt>
   24410:	b	24314 <__flatcc_fb_gen_c_json_printer@@Base+0xb6c>
   24414:	ldr	r1, [r5, #16]
   24418:	add	r2, sp, #56	; 0x38
   2441c:	ldr	r0, [r1, #12]
   24420:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   24424:	ldr	r0, [r5, #16]
   24428:	ldrh	r1, [r0, #8]
   2442c:	cmp	r1, #4
   24430:	bhi	24c40 <__flatcc_fb_gen_c_json_printer@@Base+0x1498>
   24434:	add	r2, pc, #4
   24438:	ldr	r1, [r2, r1, lsl #2]
   2443c:	add	pc, r2, r1
   24440:	andeq	r0, r0, r4, lsl r0
   24444:	andeq	r0, r0, r0, lsl #4
   24448:	andeq	r0, r0, r0, lsl #16
   2444c:	andeq	r0, r0, r4, asr #4
   24450:	andeq	r0, r0, r8, asr #3
   24454:	ldr	r1, [r5, #4]
   24458:	ldrd	r2, [r6]
   2445c:	ldr	r0, [r9]
   24460:	ldr	r6, [r1]
   24464:	ldr	r1, [r1, #4]
   24468:	stm	sp, {r1, r6}
   2446c:	str	r1, [sp, #8]
   24470:	add	r1, sp, #56	; 0x38
   24474:	str	r1, [sp, #12]
   24478:	ldr	r1, [pc, #2716]	; 24f1c <__flatcc_fb_gen_c_json_printer@@Base+0x1774>
   2447c:	add	r1, pc, r1
   24480:	bl	148bc <fprintf@plt>
   24484:	b	24314 <__flatcc_fb_gen_c_json_printer@@Base+0xb6c>
   24488:	ldr	r0, [r5, #16]
   2448c:	sub	r0, r0, #1
   24490:	cmp	r0, #11
   24494:	bcs	24be4 <__flatcc_fb_gen_c_json_printer@@Base+0x143c>
   24498:	ldr	r1, [pc, #2552]	; 24e98 <__flatcc_fb_gen_c_json_printer@@Base+0x16f0>
   2449c:	add	r1, pc, r1
   244a0:	ldr	r2, [r1, r0, lsl #2]
   244a4:	ldrh	r0, [r5, #56]	; 0x38
   244a8:	sub	r1, r0, #5
   244ac:	cmp	r1, #2
   244b0:	bcc	242cc <__flatcc_fb_gen_c_json_printer@@Base+0xb24>
   244b4:	cmp	r0, #3
   244b8:	beq	246e8 <__flatcc_fb_gen_c_json_printer@@Base+0xf40>
   244bc:	cmp	r0, #4
   244c0:	bne	24c9c <__flatcc_fb_gen_c_json_printer@@Base+0x14f4>
   244c4:	ldr	r3, [r5, #4]
   244c8:	ldr	lr, [r6]
   244cc:	ldr	ip, [r6, #4]
   244d0:	ldr	r6, [sl]
   244d4:	ldr	r1, [sl, #4]
   244d8:	ldr	r0, [r9]
   244dc:	ldr	r5, [r3]
   244e0:	ldr	r3, [r3, #4]
   244e4:	str	r6, [sp, #24]
   244e8:	str	r1, [sp, #28]
   244ec:	str	lr, [sp]
   244f0:	str	ip, [sp, #4]
   244f4:	str	r3, [sp, #8]
   244f8:	str	r5, [sp, #12]
   244fc:	str	r3, [sp, #16]
   24500:	ldr	r1, [pc, #2452]	; 24e9c <__flatcc_fb_gen_c_json_printer@@Base+0x16f4>
   24504:	add	r1, pc, r1
   24508:	b	24310 <__flatcc_fb_gen_c_json_printer@@Base+0xb68>
   2450c:	ldr	r1, [r5, #4]
   24510:	ldrd	r2, [r6]
   24514:	ldr	r0, [r9]
   24518:	ldr	r6, [r1]
   2451c:	ldr	r1, [r1, #4]
   24520:	stm	sp, {r1, r6}
   24524:	str	r1, [sp, #8]
   24528:	ldr	r1, [pc, #2464]	; 24ed0 <__flatcc_fb_gen_c_json_printer@@Base+0x1728>
   2452c:	add	r1, pc, r1
   24530:	bl	148bc <fprintf@plt>
   24534:	b	24314 <__flatcc_fb_gen_c_json_printer@@Base+0xb6c>
   24538:	ldr	r1, [r5, #16]
   2453c:	add	r2, sp, #56	; 0x38
   24540:	ldr	r0, [r1, #12]
   24544:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   24548:	ldr	r0, [r5, #16]
   2454c:	ldrh	r1, [r0, #8]
   24550:	cmp	r1, #4
   24554:	bhi	24cf0 <__flatcc_fb_gen_c_json_printer@@Base+0x1548>
   24558:	add	r2, pc, #4
   2455c:	ldr	r1, [r2, r1, lsl #2]
   24560:	add	pc, r2, r1
   24564:	andeq	r0, r0, r4, lsl r0
   24568:	strdeq	r0, [r0], -r4
   2456c:	andeq	r0, r0, ip, lsl #15
   24570:	andeq	r0, r0, ip, lsr r2
   24574:			; <UNDEFINED> instruction: 0x000001bc
   24578:	ldr	r1, [r5, #4]
   2457c:	ldrd	r2, [r6]
   24580:	ldr	r0, [r9]
   24584:	ldr	r6, [r1]
   24588:	ldr	r1, [r1, #4]
   2458c:	stm	sp, {r1, r6}
   24590:	str	r1, [sp, #8]
   24594:	add	r1, sp, #56	; 0x38
   24598:	str	r1, [sp, #12]
   2459c:	ldr	r1, [pc, #2392]	; 24efc <__flatcc_fb_gen_c_json_printer@@Base+0x1754>
   245a0:	add	r1, pc, r1
   245a4:	bl	148bc <fprintf@plt>
   245a8:	b	24314 <__flatcc_fb_gen_c_json_printer@@Base+0xb6c>
   245ac:	ldr	r1, [r5, #104]	; 0x68
   245b0:	cmp	r1, #0
   245b4:	beq	24820 <__flatcc_fb_gen_c_json_printer@@Base+0x1078>
   245b8:	ldr	r0, [r1, #12]
   245bc:	add	sl, sp, #56	; 0x38
   245c0:	mov	r2, sl
   245c4:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   245c8:	ldr	r1, [r5, #4]
   245cc:	ldr	r5, [r5, #104]	; 0x68
   245d0:	ldrd	r2, [r6]
   245d4:	ldr	r0, [r9]
   245d8:	ldrh	r5, [r5, #8]
   245dc:	ldr	r6, [r1]
   245e0:	ldr	r1, [r1, #4]
   245e4:	cmp	r5, #0
   245e8:	beq	24864 <__flatcc_fb_gen_c_json_printer@@Base+0x10bc>
   245ec:	stm	sp, {r1, r6}
   245f0:	str	r1, [sp, #8]
   245f4:	str	sl, [sp, #12]
   245f8:	ldr	r1, [pc, #2244]	; 24ec4 <__flatcc_fb_gen_c_json_printer@@Base+0x171c>
   245fc:	add	r1, pc, r1
   24600:	bl	148bc <fprintf@plt>
   24604:	b	24314 <__flatcc_fb_gen_c_json_printer@@Base+0xb6c>
   24608:	ldr	r1, [r5, #4]
   2460c:	ldrd	r2, [r6]
   24610:	ldr	r0, [r9]
   24614:	ldr	r6, [r1]
   24618:	ldr	r1, [r1, #4]
   2461c:	stm	sp, {r1, r6}
   24620:	str	r1, [sp, #8]
   24624:	add	r1, sp, #56	; 0x38
   24628:	str	r1, [sp, #12]
   2462c:	str	r1, [sp, #16]
   24630:	ldr	r1, [pc, #2292]	; 24f2c <__flatcc_fb_gen_c_json_printer@@Base+0x1784>
   24634:	add	r1, pc, r1
   24638:	bl	148bc <fprintf@plt>
   2463c:	b	24314 <__flatcc_fb_gen_c_json_printer@@Base+0xb6c>
   24640:	ldm	r6, {r2, ip}
   24644:	ldr	r6, [r5, #4]
   24648:	add	r1, r5, #88	; 0x58
   2464c:	ldr	r0, [r9]
   24650:	ldm	r1, {r1, r3}
   24654:	ldm	r6, {r5, r6}
   24658:	str	r3, [sp, #20]
   2465c:	str	r6, [sp]
   24660:	mov	r3, ip
   24664:	str	r1, [sp, #16]
   24668:	add	r1, sp, #56	; 0x38
   2466c:	str	r1, [sp, #24]
   24670:	stmib	sp, {r5, r6}
   24674:	ldr	r1, [pc, #2220]	; 24f28 <__flatcc_fb_gen_c_json_printer@@Base+0x1780>
   24678:	add	r1, pc, r1
   2467c:	bl	148bc <fprintf@plt>
   24680:	b	24314 <__flatcc_fb_gen_c_json_printer@@Base+0xb6c>
   24684:	sub	r1, r0, #1
   24688:	cmp	r1, #11
   2468c:	bcs	24be4 <__flatcc_fb_gen_c_json_printer@@Base+0x143c>
   24690:	ldr	r2, [sp, #40]	; 0x28
   24694:	ldr	lr, [r6]
   24698:	ldr	ip, [r6, #4]
   2469c:	ldr	r6, [r5, #4]
   246a0:	ldr	r0, [r9]
   246a4:	ldrd	r2, [r2]
   246a8:	ldm	r6, {r5, r6}
   246ac:	str	lr, [sp]
   246b0:	str	ip, [sp, #4]
   246b4:	str	r6, [sp, #8]
   246b8:	str	r6, [sp, #16]
   246bc:	str	r2, [sp, #24]
   246c0:	add	r2, sp, #56	; 0x38
   246c4:	str	r3, [sp, #28]
   246c8:	str	r5, [sp, #12]
   246cc:	str	r2, [sp, #32]
   246d0:	ldr	r2, [pc, #2120]	; 24f20 <__flatcc_fb_gen_c_json_printer@@Base+0x1778>
   246d4:	add	r2, pc, r2
   246d8:	ldr	r2, [r2, r1, lsl #2]
   246dc:	ldr	r1, [pc, #2112]	; 24f24 <__flatcc_fb_gen_c_json_printer@@Base+0x177c>
   246e0:	add	r1, pc, r1
   246e4:	b	24310 <__flatcc_fb_gen_c_json_printer@@Base+0xb68>
   246e8:	ldr	r3, [r5, #4]
   246ec:	vldr	d16, [r5, #48]	; 0x30
   246f0:	ldr	r1, [r6, #4]
   246f4:	ldr	r6, [r6]
   246f8:	ldr	r0, [r9]
   246fc:	ldr	r5, [r3]
   24700:	ldr	r3, [r3, #4]
   24704:	str	r6, [sp]
   24708:	vstr	d16, [sp, #24]
   2470c:	stmib	sp, {r1, r3, r5}
   24710:	str	r3, [sp, #16]
   24714:	ldr	r1, [pc, #1924]	; 24ea0 <__flatcc_fb_gen_c_json_printer@@Base+0x16f8>
   24718:	add	r1, pc, r1
   2471c:	b	24310 <__flatcc_fb_gen_c_json_printer@@Base+0xb68>
   24720:	ldr	r1, [r5, #4]
   24724:	ldrd	r2, [r6]
   24728:	ldr	r0, [r9]
   2472c:	ldr	r6, [r1]
   24730:	ldr	r1, [r1, #4]
   24734:	stm	sp, {r1, r6}
   24738:	str	r1, [sp, #8]
   2473c:	add	r1, sp, #56	; 0x38
   24740:	str	r1, [sp, #12]
   24744:	str	r1, [sp, #16]
   24748:	ldr	r1, [pc, #1968]	; 24f00 <__flatcc_fb_gen_c_json_printer@@Base+0x1758>
   2474c:	add	r1, pc, r1
   24750:	bl	148bc <fprintf@plt>
   24754:	b	24314 <__flatcc_fb_gen_c_json_printer@@Base+0xb6c>
   24758:	ldr	r1, [r5, #4]
   2475c:	ldrd	r2, [r6]
   24760:	ldr	r0, [r9]
   24764:	ldr	r6, [r1]
   24768:	ldr	r1, [r1, #4]
   2476c:	stm	sp, {r1, r6}
   24770:	str	r1, [sp, #8]
   24774:	add	r1, sp, #56	; 0x38
   24778:	str	r1, [sp, #12]
   2477c:	ldr	r1, [pc, #1908]	; 24ef8 <__flatcc_fb_gen_c_json_printer@@Base+0x1750>
   24780:	add	r1, pc, r1
   24784:	bl	148bc <fprintf@plt>
   24788:	b	24314 <__flatcc_fb_gen_c_json_printer@@Base+0xb6c>
   2478c:	andeq	r0, r3, r1, lsr sp
   24790:	andeq	fp, r1, r5, ror ip
   24794:	andeq	r0, r3, r2, lsr sp
   24798:	andeq	fp, r1, r2, lsl #24
   2479c:	andeq	r0, r3, r3, asr #26
   247a0:	ldr	r0, [r0, #40]	; 0x28
   247a4:	sub	r0, r0, #1
   247a8:	cmp	r0, #11
   247ac:	bcs	24be4 <__flatcc_fb_gen_c_json_printer@@Base+0x143c>
   247b0:	ldr	r1, [pc, #1824]	; 24ed8 <__flatcc_fb_gen_c_json_printer@@Base+0x1730>
   247b4:	add	r1, pc, r1
   247b8:	ldr	r2, [r1, r0, lsl #2]
   247bc:	ldrh	r0, [r5, #56]	; 0x38
   247c0:	sub	r1, r0, #5
   247c4:	cmp	r1, #2
   247c8:	bcs	24894 <__flatcc_fb_gen_c_json_printer@@Base+0x10ec>
   247cc:	ldr	r3, [r5, #4]
   247d0:	ldr	r1, [sl, #4]
   247d4:	ldr	lr, [r6]
   247d8:	ldr	ip, [r6, #4]
   247dc:	ldr	r6, [sl]
   247e0:	ldr	r0, [r9]
   247e4:	ldr	r5, [r3]
   247e8:	ldr	r3, [r3, #4]
   247ec:	str	r1, [sp, #28]
   247f0:	add	r1, sp, #56	; 0x38
   247f4:	str	r6, [sp, #24]
   247f8:	str	lr, [sp]
   247fc:	str	ip, [sp, #4]
   24800:	str	r1, [sp, #32]
   24804:	str	r3, [sp, #8]
   24808:	str	r5, [sp, #12]
   2480c:	str	r3, [sp, #16]
   24810:	ldr	r1, [pc, #1928]	; 24fa0 <__flatcc_fb_gen_c_json_printer@@Base+0x17f8>
   24814:	add	r1, pc, r1
   24818:	b	24310 <__flatcc_fb_gen_c_json_printer@@Base+0xb68>
   2481c:	andeq	fp, r1, ip, lsl #28
   24820:	ldr	r0, [r5, #16]
   24824:	sub	r1, r0, #1
   24828:	cmp	r1, #11
   2482c:	bcs	24be4 <__flatcc_fb_gen_c_json_printer@@Base+0x143c>
   24830:	ldrd	r2, [r6]
   24834:	ldr	r6, [r5, #4]
   24838:	ldr	r0, [r9]
   2483c:	ldm	r6, {r5, r6}
   24840:	stm	sp, {r2, r3, r6}
   24844:	str	r6, [sp, #16]
   24848:	str	r5, [sp, #12]
   2484c:	ldr	r2, [pc, #1652]	; 24ec8 <__flatcc_fb_gen_c_json_printer@@Base+0x1720>
   24850:	add	r2, pc, r2
   24854:	ldr	r2, [r2, r1, lsl #2]
   24858:	ldr	r1, [pc, #1644]	; 24ecc <__flatcc_fb_gen_c_json_printer@@Base+0x1724>
   2485c:	add	r1, pc, r1
   24860:	b	24310 <__flatcc_fb_gen_c_json_printer@@Base+0xb68>
   24864:	stm	sp, {r1, r6}
   24868:	str	r1, [sp, #8]
   2486c:	str	sl, [sp, #12]
   24870:	ldr	r1, [pc, #1608]	; 24ec0 <__flatcc_fb_gen_c_json_printer@@Base+0x1718>
   24874:	add	r1, pc, r1
   24878:	bl	148bc <fprintf@plt>
   2487c:	b	24314 <__flatcc_fb_gen_c_json_printer@@Base+0xb6c>
   24880:	andeq	r0, r3, pc, asr #25
   24884:	muleq	r3, sl, lr
   24888:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   2488c:	strdeq	r0, [r3], -r6
   24890:	andeq	r0, r3, r2, asr #29
   24894:	cmp	r0, #4
   24898:	bne	24d40 <__flatcc_fb_gen_c_json_printer@@Base+0x1598>
   2489c:	ldr	r3, [r5, #4]
   248a0:	ldr	r1, [sl, #4]
   248a4:	ldr	lr, [r6]
   248a8:	ldr	ip, [r6, #4]
   248ac:	ldr	r6, [sl]
   248b0:	ldr	r0, [r9]
   248b4:	ldr	r5, [r3]
   248b8:	ldr	r3, [r3, #4]
   248bc:	str	r1, [sp, #28]
   248c0:	add	r1, sp, #56	; 0x38
   248c4:	str	r6, [sp, #24]
   248c8:	str	lr, [sp]
   248cc:	str	ip, [sp, #4]
   248d0:	str	r1, [sp, #32]
   248d4:	str	r3, [sp, #8]
   248d8:	str	r5, [sp, #12]
   248dc:	str	r3, [sp, #16]
   248e0:	ldr	r1, [pc, #1524]	; 24edc <__flatcc_fb_gen_c_json_printer@@Base+0x1734>
   248e4:	add	r1, pc, r1
   248e8:	b	24310 <__flatcc_fb_gen_c_json_printer@@Base+0xb68>
   248ec:	ldr	r3, [r9]
   248f0:	ldr	r0, [pc, #1620]	; 24f4c <__flatcc_fb_gen_c_json_printer@@Base+0x17a4>
   248f4:	mov	r1, #4
   248f8:	mov	r2, #1
   248fc:	add	r0, pc, r0
   24900:	bl	14850 <fwrite@plt>
   24904:	ldr	r0, [r9]
   24908:	ldr	r1, [pc, #1600]	; 24f50 <__flatcc_fb_gen_c_json_printer@@Base+0x17a8>
   2490c:	sub	r8, fp, #256	; 0x100
   24910:	mov	r2, r8
   24914:	mov	r3, r8
   24918:	add	r1, pc, r1
   2491c:	bl	148bc <fprintf@plt>
   24920:	cmp	r4, #0
   24924:	beq	241f0 <__flatcc_fb_gen_c_json_printer@@Base+0xa48>
   24928:	mov	r0, r4
   2492c:	bl	147fc <free@plt>
   24930:	b	241f0 <__flatcc_fb_gen_c_json_printer@@Base+0xa48>
   24934:	strdeq	fp, [r1], -lr
   24938:	andeq	r1, r3, r2, asr #5
   2493c:	muleq	r3, ip, r0
   24940:	ldr	r0, [sp, #48]	; 0x30
   24944:	ldr	r0, [r0, #208]	; 0xd0
   24948:	ldr	r4, [r0, #52]	; 0x34
   2494c:	cmp	r4, #0
   24950:	beq	24a20 <__flatcc_fb_gen_c_json_printer@@Base+0x1278>
   24954:	ldrh	r0, [r4, #8]
   24958:	cmp	r0, #1
   2495c:	bhi	24a20 <__flatcc_fb_gen_c_json_printer@@Base+0x1278>
   24960:	sub	r5, fp, #256	; 0x100
   24964:	mov	r1, #0
   24968:	mov	r2, #220	; 0xdc
   2496c:	mov	r0, r5
   24970:	bl	148d4 <memset@plt>
   24974:	ldr	r0, [r4, #12]
   24978:	mov	r1, r4
   2497c:	mov	r2, r5
   24980:	bl	15bf8 <__flatcc_fb_scoped_symbol_name@@Base>
   24984:	ldr	r4, [sp, #48]	; 0x30
   24988:	ldr	r1, [r4, #208]	; 0xd0
   2498c:	ldr	r0, [r4, #204]	; 0xcc
   24990:	ldr	r2, [r1, #160]	; 0xa0
   24994:	ldr	r1, [pc, #1464]	; 24f54 <__flatcc_fb_gen_c_json_printer@@Base+0x17ac>
   24998:	add	r1, pc, r1
   2499c:	bl	148bc <fprintf@plt>
   249a0:	ldr	r0, [r4, #204]	; 0xcc
   249a4:	ldr	r1, [pc, #1452]	; 24f58 <__flatcc_fb_gen_c_json_printer@@Base+0x17b0>
   249a8:	mov	r2, r5
   249ac:	add	r1, pc, r1
   249b0:	bl	148bc <fprintf@plt>
   249b4:	ldr	r0, [r4, #208]	; 0xd0
   249b8:	ldr	r3, [r4, #204]	; 0xcc
   249bc:	ldrh	r1, [r0, #16]
   249c0:	cmp	r1, #2
   249c4:	bne	249f4 <__flatcc_fb_gen_c_json_printer@@Base+0x124c>
   249c8:	ldrd	r4, [r0, #8]
   249cc:	ldr	r1, [pc, #1416]	; 24f5c <__flatcc_fb_gen_c_json_printer@@Base+0x17b4>
   249d0:	mov	r0, r3
   249d4:	add	r1, pc, r1
   249d8:	mov	r2, r5
   249dc:	mov	r3, r4
   249e0:	bl	148bc <fprintf@plt>
   249e4:	b	24a08 <__flatcc_fb_gen_c_json_printer@@Base+0x1260>
   249e8:	andeq	r7, r4, r0, asr r4
   249ec:	andeq	r7, r4, r0, ror r4
   249f0:	andeq	r0, r3, r9, asr #29
   249f4:	ldr	r0, [pc, #1380]	; 24f60 <__flatcc_fb_gen_c_json_printer@@Base+0x17b8>
   249f8:	mov	r1, #3
   249fc:	mov	r2, #1
   24a00:	add	r0, pc, r0
   24a04:	bl	14850 <fwrite@plt>
   24a08:	ldr	r3, [r9]
   24a0c:	ldr	r0, [pc, #1360]	; 24f64 <__flatcc_fb_gen_c_json_printer@@Base+0x17bc>
   24a10:	mov	r1, #3
   24a14:	mov	r2, #1
   24a18:	add	r0, pc, r0
   24a1c:	bl	14850 <fwrite@plt>
   24a20:	ldr	r0, [sp, #48]	; 0x30
   24a24:	ldr	r0, [r0, #212]	; 0xd4
   24a28:	ldr	r0, [r0, #140]	; 0x8c
   24a2c:	cmp	r0, #0
   24a30:	beq	24a4c <__flatcc_fb_gen_c_json_printer@@Base+0x12a4>
   24a34:	ldr	r3, [r9]
   24a38:	ldr	r0, [pc, #1320]	; 24f68 <__flatcc_fb_gen_c_json_printer@@Base+0x17c0>
   24a3c:	mov	r1, #36	; 0x24
   24a40:	mov	r2, #1
   24a44:	add	r0, pc, r0
   24a48:	bl	14850 <fwrite@plt>
   24a4c:	ldr	r1, [sp, #48]	; 0x30
   24a50:	ldr	r0, [r1, #204]	; 0xcc
   24a54:	ldr	r1, [r1, #208]	; 0xd0
   24a58:	ldr	r2, [r1, #164]	; 0xa4
   24a5c:	ldr	r1, [pc, #1288]	; 24f6c <__flatcc_fb_gen_c_json_printer@@Base+0x17c4>
   24a60:	add	r1, pc, r1
   24a64:	bl	148bc <fprintf@plt>
   24a68:	mov	r0, #0
   24a6c:	sub	sp, fp, #28
   24a70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24a74:	andeq	r1, r3, r0, lsr #2
   24a78:	andeq	r1, r3, r2, ror #2
   24a7c:	andeq	r1, r3, r9, ror r1
   24a80:	ldr	r0, [pc, #976]	; 24e58 <__flatcc_fb_gen_c_json_printer@@Base+0x16b0>
   24a84:	mov	r3, #251	; 0xfb
   24a88:	ldr	r0, [pc, r0]
   24a8c:	ldr	r0, [r0]
   24a90:	ldr	r1, [pc, #964]	; 24e5c <__flatcc_fb_gen_c_json_printer@@Base+0x16b4>
   24a94:	add	r1, pc, r1
   24a98:	str	r1, [sp]
   24a9c:	ldr	r1, [pc, #956]	; 24e60 <__flatcc_fb_gen_c_json_printer@@Base+0x16b8>
   24aa0:	ldr	r4, [pc, #956]	; 24e64 <__flatcc_fb_gen_c_json_printer@@Base+0x16bc>
   24aa4:	add	r4, pc, r4
   24aa8:	add	r1, pc, r1
   24aac:	mov	r2, r4
   24ab0:	bl	148bc <fprintf@plt>
   24ab4:	ldr	r0, [pc, #940]	; 24e68 <__flatcc_fb_gen_c_json_printer@@Base+0x16c0>
   24ab8:	ldr	r3, [pc, #940]	; 24e6c <__flatcc_fb_gen_c_json_printer@@Base+0x16c4>
   24abc:	mov	r1, r4
   24ac0:	mov	r2, #251	; 0xfb
   24ac4:	add	r0, pc, r0
   24ac8:	add	r3, pc, r3
   24acc:	bl	1497c <__assert_fail@plt>
   24ad0:	muleq	r3, pc, r0	; <UNPREDICTABLE>
   24ad4:	ldr	r0, [pc, #820]	; 24e10 <__flatcc_fb_gen_c_json_printer@@Base+0x1668>
   24ad8:	mov	r3, #157	; 0x9d
   24adc:	ldr	r0, [pc, r0]
   24ae0:	ldr	r0, [r0]
   24ae4:	ldr	r1, [pc, #808]	; 24e14 <__flatcc_fb_gen_c_json_printer@@Base+0x166c>
   24ae8:	add	r1, pc, r1
   24aec:	str	r1, [sp]
   24af0:	ldr	r1, [pc, #800]	; 24e18 <__flatcc_fb_gen_c_json_printer@@Base+0x1670>
   24af4:	ldr	r4, [pc, #800]	; 24e1c <__flatcc_fb_gen_c_json_printer@@Base+0x1674>
   24af8:	add	r4, pc, r4
   24afc:	add	r1, pc, r1
   24b00:	mov	r2, r4
   24b04:	bl	148bc <fprintf@plt>
   24b08:	ldr	r0, [pc, #784]	; 24e20 <__flatcc_fb_gen_c_json_printer@@Base+0x1678>
   24b0c:	ldr	r3, [pc, #784]	; 24e24 <__flatcc_fb_gen_c_json_printer@@Base+0x167c>
   24b10:	mov	r1, r4
   24b14:	mov	r2, #157	; 0x9d
   24b18:	add	r0, pc, r0
   24b1c:	add	r3, pc, r3
   24b20:	bl	1497c <__assert_fail@plt>
   24b24:			; <UNDEFINED> instruction: 0x00030db0
   24b28:	muleq	r2, r8, r1
   24b2c:	ldr	r0, [pc, #708]	; 24df8 <__flatcc_fb_gen_c_json_printer@@Base+0x1650>
   24b30:	mov	r3, #134	; 0x86
   24b34:	ldr	r0, [pc, r0]
   24b38:	ldr	r0, [r0]
   24b3c:	ldr	r1, [pc, #696]	; 24dfc <__flatcc_fb_gen_c_json_printer@@Base+0x1654>
   24b40:	add	r1, pc, r1
   24b44:	str	r1, [sp]
   24b48:	ldr	r1, [pc, #688]	; 24e00 <__flatcc_fb_gen_c_json_printer@@Base+0x1658>
   24b4c:	ldr	r4, [pc, #688]	; 24e04 <__flatcc_fb_gen_c_json_printer@@Base+0x165c>
   24b50:	add	r4, pc, r4
   24b54:	add	r1, pc, r1
   24b58:	mov	r2, r4
   24b5c:	bl	148bc <fprintf@plt>
   24b60:	ldr	r0, [pc, #672]	; 24e08 <__flatcc_fb_gen_c_json_printer@@Base+0x1660>
   24b64:	ldr	r3, [pc, #672]	; 24e0c <__flatcc_fb_gen_c_json_printer@@Base+0x1664>
   24b68:	mov	r1, r4
   24b6c:	mov	r2, #134	; 0x86
   24b70:	add	r0, pc, r0
   24b74:	add	r3, pc, r3
   24b78:	bl	1497c <__assert_fail@plt>
   24b7c:	muleq	r3, sl, sp
   24b80:	andeq	r2, r2, r7, ror r1
   24b84:	andeq	r0, r3, r0, lsl #27
   24b88:	andeq	r2, r2, r1, ror r1
   24b8c:	andeq	r0, r3, r9, ror #26
   24b90:	andeq	r2, r2, sl, lsr r1
   24b94:	ldr	r0, [pc, #676]	; 24e40 <__flatcc_fb_gen_c_json_printer@@Base+0x1698>
   24b98:	mov	r3, #240	; 0xf0
   24b9c:	ldr	r0, [pc, r0]
   24ba0:	ldr	r0, [r0]
   24ba4:	ldr	r1, [pc, #664]	; 24e44 <__flatcc_fb_gen_c_json_printer@@Base+0x169c>
   24ba8:	add	r1, pc, r1
   24bac:	str	r1, [sp]
   24bb0:	ldr	r1, [pc, #656]	; 24e48 <__flatcc_fb_gen_c_json_printer@@Base+0x16a0>
   24bb4:	ldr	r4, [pc, #656]	; 24e4c <__flatcc_fb_gen_c_json_printer@@Base+0x16a4>
   24bb8:	add	r4, pc, r4
   24bbc:	add	r1, pc, r1
   24bc0:	mov	r2, r4
   24bc4:	bl	148bc <fprintf@plt>
   24bc8:	ldr	r0, [pc, #640]	; 24e50 <__flatcc_fb_gen_c_json_printer@@Base+0x16a8>
   24bcc:	ldr	r3, [pc, #640]	; 24e54 <__flatcc_fb_gen_c_json_printer@@Base+0x16ac>
   24bd0:	mov	r1, r4
   24bd4:	mov	r2, #240	; 0xf0
   24bd8:	add	r0, pc, r0
   24bdc:	add	r3, pc, r3
   24be0:	bl	1497c <__assert_fail@plt>
   24be4:	ldr	r0, [pc, #900]	; 24f70 <__flatcc_fb_gen_c_json_printer@@Base+0x17c8>
   24be8:	mov	r3, #96	; 0x60
   24bec:	ldr	r0, [pc, r0]
   24bf0:	ldr	r0, [r0]
   24bf4:	ldr	r1, [pc, #888]	; 24f74 <__flatcc_fb_gen_c_json_printer@@Base+0x17cc>
   24bf8:	add	r1, pc, r1
   24bfc:	str	r1, [sp]
   24c00:	ldr	r1, [pc, #880]	; 24f78 <__flatcc_fb_gen_c_json_printer@@Base+0x17d0>
   24c04:	ldr	r4, [pc, #880]	; 24f7c <__flatcc_fb_gen_c_json_printer@@Base+0x17d4>
   24c08:	add	r4, pc, r4
   24c0c:	add	r1, pc, r1
   24c10:	mov	r2, r4
   24c14:	bl	148bc <fprintf@plt>
   24c18:	ldr	r0, [pc, #864]	; 24f80 <__flatcc_fb_gen_c_json_printer@@Base+0x17d8>
   24c1c:	ldr	r3, [pc, #864]	; 24f84 <__flatcc_fb_gen_c_json_printer@@Base+0x17dc>
   24c20:	mov	r1, r4
   24c24:	mov	r2, #96	; 0x60
   24c28:	add	r0, pc, r0
   24c2c:	add	r3, pc, r3
   24c30:	bl	1497c <__assert_fail@plt>
   24c34:	andeq	r0, r3, sp, ror #25
   24c38:	andeq	r0, r3, r3, lsl #26
   24c3c:	andeq	r0, r3, r2, lsl #26
   24c40:	ldr	r0, [pc, #744]	; 24f30 <__flatcc_fb_gen_c_json_printer@@Base+0x1788>
   24c44:	movw	r3, #543	; 0x21f
   24c48:	ldr	r0, [pc, r0]
   24c4c:	ldr	r0, [r0]
   24c50:	ldr	r1, [pc, #732]	; 24f34 <__flatcc_fb_gen_c_json_printer@@Base+0x178c>
   24c54:	add	r1, pc, r1
   24c58:	str	r1, [sp]
   24c5c:	ldr	r1, [pc, #724]	; 24f38 <__flatcc_fb_gen_c_json_printer@@Base+0x1790>
   24c60:	ldr	r4, [pc, #724]	; 24f3c <__flatcc_fb_gen_c_json_printer@@Base+0x1794>
   24c64:	add	r4, pc, r4
   24c68:	add	r1, pc, r1
   24c6c:	mov	r2, r4
   24c70:	bl	148bc <fprintf@plt>
   24c74:	ldr	r0, [pc, #708]	; 24f40 <__flatcc_fb_gen_c_json_printer@@Base+0x1798>
   24c78:	ldr	r3, [pc, #708]	; 24f44 <__flatcc_fb_gen_c_json_printer@@Base+0x179c>
   24c7c:	mov	r1, r4
   24c80:	movw	r2, #543	; 0x21f
   24c84:	add	r0, pc, r0
   24c88:	add	r3, pc, r3
   24c8c:	bl	1497c <__assert_fail@plt>
   24c90:	strdeq	r0, [r3], -r9
   24c94:	strdeq	r0, [r3], -ip
   24c98:	andeq	r0, r3, r5, asr #26
   24c9c:	ldr	r0, [pc, #512]	; 24ea4 <__flatcc_fb_gen_c_json_printer@@Base+0x16fc>
   24ca0:	movw	r3, #406	; 0x196
   24ca4:	ldr	r0, [pc, r0]
   24ca8:	ldr	r0, [r0]
   24cac:	ldr	r1, [pc, #500]	; 24ea8 <__flatcc_fb_gen_c_json_printer@@Base+0x1700>
   24cb0:	add	r1, pc, r1
   24cb4:	str	r1, [sp]
   24cb8:	ldr	r1, [pc, #492]	; 24eac <__flatcc_fb_gen_c_json_printer@@Base+0x1704>
   24cbc:	ldr	r4, [pc, #492]	; 24eb0 <__flatcc_fb_gen_c_json_printer@@Base+0x1708>
   24cc0:	add	r4, pc, r4
   24cc4:	add	r1, pc, r1
   24cc8:	mov	r2, r4
   24ccc:	bl	148bc <fprintf@plt>
   24cd0:	ldr	r0, [pc, #476]	; 24eb4 <__flatcc_fb_gen_c_json_printer@@Base+0x170c>
   24cd4:	ldr	r3, [pc, #476]	; 24eb8 <__flatcc_fb_gen_c_json_printer@@Base+0x1710>
   24cd8:	mov	r1, r4
   24cdc:	movw	r2, #406	; 0x196
   24ce0:	add	r0, pc, r0
   24ce4:	add	r3, pc, r3
   24ce8:	bl	1497c <__assert_fail@plt>
   24cec:	andeq	r0, r3, sp, ror #26
   24cf0:	ldr	r0, [pc, #524]	; 24f04 <__flatcc_fb_gen_c_json_printer@@Base+0x175c>
   24cf4:	mov	r3, #504	; 0x1f8
   24cf8:	ldr	r0, [pc, r0]
   24cfc:	ldr	r0, [r0]
   24d00:	ldr	r1, [pc, #512]	; 24f08 <__flatcc_fb_gen_c_json_printer@@Base+0x1760>
   24d04:	add	r1, pc, r1
   24d08:	str	r1, [sp]
   24d0c:	ldr	r1, [pc, #504]	; 24f0c <__flatcc_fb_gen_c_json_printer@@Base+0x1764>
   24d10:	ldr	r4, [pc, #504]	; 24f10 <__flatcc_fb_gen_c_json_printer@@Base+0x1768>
   24d14:	add	r4, pc, r4
   24d18:	add	r1, pc, r1
   24d1c:	mov	r2, r4
   24d20:	bl	148bc <fprintf@plt>
   24d24:	ldr	r0, [pc, #488]	; 24f14 <__flatcc_fb_gen_c_json_printer@@Base+0x176c>
   24d28:	ldr	r3, [pc, #488]	; 24f18 <__flatcc_fb_gen_c_json_printer@@Base+0x1770>
   24d2c:	mov	r1, r4
   24d30:	mov	r2, #504	; 0x1f8
   24d34:	add	r0, pc, r0
   24d38:	add	r3, pc, r3
   24d3c:	bl	1497c <__assert_fail@plt>
   24d40:	ldr	r0, [pc, #408]	; 24ee0 <__flatcc_fb_gen_c_json_printer@@Base+0x1738>
   24d44:	movw	r3, #483	; 0x1e3
   24d48:	ldr	r0, [pc, r0]
   24d4c:	ldr	r0, [r0]
   24d50:	ldr	r1, [pc, #396]	; 24ee4 <__flatcc_fb_gen_c_json_printer@@Base+0x173c>
   24d54:	add	r1, pc, r1
   24d58:	str	r1, [sp]
   24d5c:	ldr	r1, [pc, #388]	; 24ee8 <__flatcc_fb_gen_c_json_printer@@Base+0x1740>
   24d60:	ldr	r4, [pc, #388]	; 24eec <__flatcc_fb_gen_c_json_printer@@Base+0x1744>
   24d64:	add	r4, pc, r4
   24d68:	add	r1, pc, r1
   24d6c:	mov	r2, r4
   24d70:	bl	148bc <fprintf@plt>
   24d74:	ldr	r0, [pc, #372]	; 24ef0 <__flatcc_fb_gen_c_json_printer@@Base+0x1748>
   24d78:	ldr	r3, [pc, #372]	; 24ef4 <__flatcc_fb_gen_c_json_printer@@Base+0x174c>
   24d7c:	mov	r1, r4
   24d80:	movw	r2, #483	; 0x1e3
   24d84:	add	r0, pc, r0
   24d88:	add	r3, pc, r3
   24d8c:	bl	1497c <__assert_fail@plt>
   24d90:	muleq	r3, r5, ip
   24d94:	strdeq	fp, [r1], -r6
   24d98:	andeq	r1, r3, sl, lsr #3
   24d9c:	andeq	r0, r3, fp, asr #30
   24da0:	ldrdeq	r1, [r3], -lr
   24da4:	ldr	r0, [pc, #476]	; 24f88 <__flatcc_fb_gen_c_json_printer@@Base+0x17e0>
   24da8:	movw	r3, #361	; 0x169
   24dac:	ldr	r0, [pc, r0]
   24db0:	ldr	r0, [r0]
   24db4:	ldr	r1, [pc, #464]	; 24f8c <__flatcc_fb_gen_c_json_printer@@Base+0x17e4>
   24db8:	add	r1, pc, r1
   24dbc:	str	r1, [sp]
   24dc0:	ldr	r1, [pc, #456]	; 24f90 <__flatcc_fb_gen_c_json_printer@@Base+0x17e8>
   24dc4:	ldr	r4, [pc, #456]	; 24f94 <__flatcc_fb_gen_c_json_printer@@Base+0x17ec>
   24dc8:	add	r4, pc, r4
   24dcc:	add	r1, pc, r1
   24dd0:	mov	r2, r4
   24dd4:	bl	148bc <fprintf@plt>
   24dd8:	ldr	r0, [pc, #440]	; 24f98 <__flatcc_fb_gen_c_json_printer@@Base+0x17f0>
   24ddc:	ldr	r3, [pc, #440]	; 24f9c <__flatcc_fb_gen_c_json_printer@@Base+0x17f4>
   24de0:	mov	r1, r4
   24de4:	movw	r2, #361	; 0x169
   24de8:	add	r0, pc, r0
   24dec:	add	r3, pc, r3
   24df0:	bl	1497c <__assert_fail@plt>
   24df4:	muleq	r2, fp, r5
   24df8:	andeq	r6, r4, r8, ror #10
   24dfc:	andeq	pc, r2, r3, ror #31
   24e00:	andeq	sl, r1, r2, lsr sl
   24e04:	andeq	pc, r2, r6, ror #30
   24e08:	ldrdeq	fp, [r2], -lr
   24e0c:	andeq	pc, r2, r9, ror #31
   24e10:	andeq	r6, r4, r0, asr #11
   24e14:	andeq	r0, r3, fp, lsr r0
   24e18:	andeq	sl, r1, sl, lsl #21
   24e1c:			; <UNDEFINED> instruction: 0x0002ffbe
   24e20:	andeq	fp, r2, r6, lsr r9
   24e24:	andeq	r0, r3, r1, asr #32
   24e28:	andeq	r0, r3, sp, asr lr
   24e2c:			; <UNDEFINED> instruction: 0x00030eb4
   24e30:	andeq	sp, r2, fp, asr #9
   24e34:	andeq	r0, r3, r7, lsr #29
   24e38:	andeq	r0, r3, r6, lsr #29
   24e3c:	strdeq	r0, [r3], -r6
   24e40:	andeq	r6, r4, r0, lsl #10
   24e44:	andeq	r0, r3, r8, ror #6
   24e48:	andeq	sl, r1, sl, asr #19
   24e4c:	strdeq	pc, [r2], -lr
   24e50:	andeq	fp, r2, r6, ror r8
   24e54:	andeq	r0, r3, fp, asr r3
   24e58:	andeq	r6, r4, r4, lsl r6
   24e5c:	andeq	r0, r3, ip, ror r4
   24e60:	ldrdeq	sl, [r1], -lr
   24e64:	andeq	r0, r3, r2, lsl r0
   24e68:	andeq	fp, r2, sl, lsl #19
   24e6c:	andeq	r0, r3, pc, ror #8
   24e70:	andeq	r0, r3, fp, ror pc
   24e74:	andeq	r6, r4, r8, ror sp
   24e78:	strdeq	r0, [r3], -sl
   24e7c:	strdeq	r6, [r4], -r0
   24e80:			; <UNDEFINED> instruction: 0x00030ebb
   24e84:	andeq	r1, r3, r9, lsr #32
   24e88:	andeq	r1, r3, ip, ror #20
   24e8c:	andeq	r1, r3, r6, lsr r1
   24e90:	andeq	r0, r3, pc, ror #31
   24e94:	muleq	r3, sp, pc	; <UNPREDICTABLE>
   24e98:	andeq	r6, r4, r0, lsl sl
   24e9c:	andeq	r0, r3, r7, lsr lr
   24ea0:	andeq	r0, r3, r3, ror #24
   24ea4:	strdeq	r6, [r4], -r8
   24ea8:	andeq	lr, r2, fp, lsr r8
   24eac:	andeq	sl, r1, r2, asr #17
   24eb0:	strdeq	pc, [r2], -r6
   24eb4:	andeq	fp, r2, lr, ror #14
   24eb8:	andeq	r0, r3, r7, ror #10
   24ebc:	ldrdeq	r0, [r3], -lr
   24ec0:	muleq	r3, r5, fp
   24ec4:	andeq	r0, r3, fp, ror #28
   24ec8:	andeq	r6, r4, ip, asr r6
   24ecc:	andeq	r0, r3, fp, ror #24
   24ed0:	ldrdeq	r0, [r3], -ip
   24ed4:	andeq	r1, r3, lr, lsr r1
   24ed8:	strdeq	r6, [r4], -r8
   24edc:	andeq	r0, r3, r0, lsl #26
   24ee0:	andeq	r6, r4, r4, asr r3
   24ee4:	andeq	r0, r3, r9, ror #17
   24ee8:	andeq	sl, r1, lr, lsl r8
   24eec:	andeq	pc, r2, r2, asr sp	; <UNPREDICTABLE>
   24ef0:	andeq	fp, r2, sl, asr #13
   24ef4:	andeq	r0, r3, r3, asr #9
   24ef8:	strdeq	r0, [r3], -r5
   24efc:	andeq	r1, r3, r9, lsr #2
   24f00:	andeq	r0, r3, pc, asr #31
   24f04:	andeq	r6, r4, r4, lsr #7
   24f08:	andeq	r0, r3, r3, lsl #21
   24f0c:	andeq	sl, r1, lr, ror #16
   24f10:	andeq	pc, r2, r2, lsr #27
   24f14:	andeq	fp, r2, sl, lsl r7
   24f18:	andeq	r0, r3, r3, lsl r5
   24f1c:	andeq	r1, r3, r9, asr #6
   24f20:	ldrdeq	r6, [r4], -r8
   24f24:	andeq	r1, r3, lr, lsr r1
   24f28:	andeq	r1, r3, r6, lsl #4
   24f2c:	andeq	r1, r3, fp, lsr #5
   24f30:	andeq	r6, r4, r4, asr r4
   24f34:	strdeq	r0, [r3], -lr
   24f38:	andeq	sl, r1, lr, lsl r9
   24f3c:	andeq	pc, r2, r2, asr lr	; <UNPREDICTABLE>
   24f40:	andeq	fp, r2, sl, asr #15
   24f44:	andeq	r0, r3, r3, asr #11
   24f48:	andeq	r0, r3, pc, ror #31
   24f4c:	andeq	r1, r3, fp, ror #2
   24f50:	andeq	r1, r3, pc, ror r0
   24f54:	ldrdeq	r1, [r3], -r4
   24f58:	andeq	r1, r3, r6, lsl r1
   24f5c:	andeq	r1, r3, r4, lsr #3
   24f60:	andeq	r1, r3, r2, lsl #3
   24f64:	andeq	r1, r3, r0, asr r0
   24f68:	strdeq	r0, [r2], -r6
   24f6c:	andeq	r1, r3, r6, lsr #2
   24f70:			; <UNDEFINED> instruction: 0x000464b0
   24f74:	muleq	r2, sp, r1
   24f78:	andeq	sl, r1, sl, ror r9
   24f7c:	andeq	r1, r2, sp, lsr #2
   24f80:	andeq	fp, r2, r6, lsr #16
   24f84:	muleq	r2, r9, sl
   24f88:	strdeq	r6, [r4], -r0
   24f8c:	andeq	r0, r3, r9, ror #8
   24f90:			; <UNDEFINED> instruction: 0x0001a7ba
   24f94:	andeq	pc, r2, lr, ror #25
   24f98:	andeq	fp, r2, r6, ror #12
   24f9c:	andeq	r0, r3, pc, asr r4
   24fa0:	andeq	r0, r3, r7, ror sp

00024fa4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base>:
   24fa4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   24fa8:	add	fp, sp, #24
   24fac:	sub	sp, sp, #232	; 0xe8
   24fb0:	mov	r5, sp
   24fb4:	mov	r7, r0
   24fb8:	mov	r8, r3
   24fbc:	mov	r4, r2
   24fc0:	mov	r6, r1
   24fc4:	mov	r0, r5
   24fc8:	bl	36ba4 <flatcc_builder_init@@Base>
   24fcc:	mov	r0, r5
   24fd0:	mov	r1, r7
   24fd4:	mov	r2, r6
   24fd8:	bl	2501c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x78>
   24fdc:	ldr	r2, [r8]
   24fe0:	mov	r0, r5
   24fe4:	mov	r1, r4
   24fe8:	bl	3b5c0 <flatcc_builder_copy_buffer@@Base>
   24fec:	cmp	r0, #0
   24ff0:	movne	r0, r4
   24ff4:	blne	25f1c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf78>
   24ff8:	mov	r5, sp
   24ffc:	mov	r0, r5
   25000:	bl	3b4e8 <flatcc_builder_get_buffer_size@@Base>
   25004:	str	r0, [r8]
   25008:	mov	r0, r5
   2500c:	bl	36f14 <flatcc_builder_clear@@Base>
   25010:	mov	r0, r4
   25014:	sub	sp, fp, #24
   25018:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2501c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25020:	add	fp, sp, #28
   25024:	sub	sp, sp, #4
   25028:	vpush	{d8}
   2502c:	sub	sp, sp, #104	; 0x68
   25030:	vmov.i32	q8, #0	; 0x00000000
   25034:	ldr	r3, [r1, #184]	; 0xb8
   25038:	add	r6, sp, #56	; 0x38
   2503c:	str	r1, [sp, #48]	; 0x30
   25040:	str	r0, [sp, #52]	; 0x34
   25044:	ldr	r0, [r2, #60]	; 0x3c
   25048:	str	r2, [sp, #8]
   2504c:	add	r1, r6, #20
   25050:	vst1.32	{d16-d17}, [r1]
   25054:	orr	r1, r6, #4
   25058:	vst1.32	{d16-d17}, [r1]
   2505c:	mov	r1, #0
   25060:	mov	r5, r0
   25064:	str	r1, [sp, #92]	; 0x5c
   25068:	str	r2, [sp, #96]	; 0x60
   2506c:	str	r3, [sp, #56]	; 0x38
   25070:	mov	r2, r6
   25074:	ldr	r1, [pc, #3620]	; 25ea0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xefc>
   25078:	add	r1, pc, r1
   2507c:	bl	28ee0 <fb_scope_table_visit@@Base>
   25080:	ldr	r9, [sp, #60]	; 0x3c
   25084:	mov	r1, #8
   25088:	mov	r0, r9
   2508c:	bl	147cc <calloc@plt>
   25090:	str	r0, [sp, #72]	; 0x48
   25094:	mov	r7, r0
   25098:	mov	r1, #8
   2509c:	ldr	sl, [sp, #64]	; 0x40
   250a0:	mov	r0, sl
   250a4:	bl	147cc <calloc@plt>
   250a8:	str	r0, [sp, #76]	; 0x4c
   250ac:	mov	r4, r0
   250b0:	ldr	r8, [sp, #68]	; 0x44
   250b4:	mov	r0, r8
   250b8:	bl	14868 <malloc@plt>
   250bc:	cmp	r9, #1
   250c0:	str	r0, [sp, #92]	; 0x5c
   250c4:	str	r4, [sp, #88]	; 0x58
   250c8:	str	r7, [sp, #84]	; 0x54
   250cc:	str	r0, [sp, #80]	; 0x50
   250d0:	blt	250dc <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x138>
   250d4:	cmp	r7, #0
   250d8:	beq	25110 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x16c>
   250dc:	cmp	sl, #1
   250e0:	blt	250ec <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x148>
   250e4:	cmp	r4, #0
   250e8:	beq	250fc <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x158>
   250ec:	cmp	r8, #0
   250f0:	beq	25160 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1bc>
   250f4:	cmp	r0, #0
   250f8:	bne	25160 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1bc>
   250fc:	cmp	r7, #0
   25100:	beq	25110 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x16c>
   25104:	mov	r0, r7
   25108:	bl	147fc <free@plt>
   2510c:	ldr	r4, [sp, #76]	; 0x4c
   25110:	cmp	r4, #0
   25114:	beq	25120 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x17c>
   25118:	mov	r0, r4
   2511c:	bl	147fc <free@plt>
   25120:	ldr	r0, [sp, #80]	; 0x50
   25124:	cmp	r0, #0
   25128:	beq	25130 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x18c>
   2512c:	bl	147fc <free@plt>
   25130:	vmov.i32	q8, #0	; 0x00000000
   25134:	mov	r0, #28
   25138:	add	r1, r6, #16
   2513c:	vst1.64	{d16-d17}, [r6], r0
   25140:	vst1.32	{d16-d17}, [r6]
   25144:	vst1.64	{d16-d17}, [r1]
   25148:	mvn	r4, #0
   2514c:	mov	r0, r4
   25150:	sub	sp, fp, #40	; 0x28
   25154:	vpop	{d8}
   25158:	add	sp, sp, #4
   2515c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25160:	ldr	r1, [pc, #3388]	; 25ea4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf00>
   25164:	add	r2, sp, #56	; 0x38
   25168:	mov	r0, r5
   2516c:	add	r1, pc, r1
   25170:	bl	28ee0 <fb_scope_table_visit@@Base>
   25174:	ldr	r4, [sp, #60]	; 0x3c
   25178:	ldr	r6, [sp, #72]	; 0x48
   2517c:	ldr	r3, [pc, #3364]	; 25ea8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf04>
   25180:	mov	r2, #8
   25184:	add	r3, pc, r3
   25188:	mov	r0, r6
   2518c:	mov	r1, r4
   25190:	bl	14940 <qsort@plt>
   25194:	ldr	r9, [sp, #52]	; 0x34
   25198:	cmp	r4, #1
   2519c:	blt	2521c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x278>
   251a0:	sub	r2, r4, #1
   251a4:	and	r0, r4, #3
   251a8:	mov	r1, #0
   251ac:	cmp	r2, #3
   251b0:	bcc	25200 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x25c>
   251b4:	sub	r2, r4, r0
   251b8:	add	r3, r6, #16
   251bc:	mov	r1, #0
   251c0:	ldr	r7, [r3, #-16]
   251c4:	add	r5, r1, #1
   251c8:	str	r1, [r7, #124]	; 0x7c
   251cc:	ldr	r7, [r3, #-8]
   251d0:	str	r5, [r7, #124]	; 0x7c
   251d4:	add	r5, r1, #2
   251d8:	ldr	r7, [r3]
   251dc:	str	r5, [r7, #124]	; 0x7c
   251e0:	add	r5, r1, #3
   251e4:	add	r1, r1, #4
   251e8:	ldr	r7, [r3, #8]
   251ec:	add	r3, r3, #32
   251f0:	cmp	r2, r1
   251f4:	str	r5, [r7, #124]	; 0x7c
   251f8:	bne	251c0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x21c>
   251fc:	ldr	r9, [sp, #52]	; 0x34
   25200:	cmp	r0, #0
   25204:	beq	2521c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x278>
   25208:	ldr	r2, [r6, r1, lsl #3]
   2520c:	subs	r0, r0, #1
   25210:	str	r1, [r2, #124]	; 0x7c
   25214:	add	r1, r1, #1
   25218:	bne	25208 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x264>
   2521c:	ldr	r4, [sp, #64]	; 0x40
   25220:	ldr	r6, [sp, #76]	; 0x4c
   25224:	ldr	r3, [pc, #3200]	; 25eac <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf08>
   25228:	mov	r2, #8
   2522c:	add	r3, pc, r3
   25230:	mov	r0, r6
   25234:	mov	r1, r4
   25238:	bl	14940 <qsort@plt>
   2523c:	cmp	r4, #1
   25240:	blt	252c0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x31c>
   25244:	sub	r2, r4, #1
   25248:	and	r0, r4, #3
   2524c:	mov	r1, #0
   25250:	cmp	r2, #3
   25254:	bcc	252a4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x300>
   25258:	sub	r2, r4, r0
   2525c:	add	r3, r6, #16
   25260:	mov	r1, #0
   25264:	ldr	r7, [r3, #-16]
   25268:	add	r5, r1, #1
   2526c:	str	r1, [r7, #124]	; 0x7c
   25270:	ldr	r7, [r3, #-8]
   25274:	str	r5, [r7, #124]	; 0x7c
   25278:	add	r5, r1, #2
   2527c:	ldr	r7, [r3]
   25280:	str	r5, [r7, #124]	; 0x7c
   25284:	add	r5, r1, #3
   25288:	add	r1, r1, #4
   2528c:	ldr	r7, [r3, #8]
   25290:	add	r3, r3, #32
   25294:	cmp	r2, r1
   25298:	str	r5, [r7, #124]	; 0x7c
   2529c:	bne	25264 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x2c0>
   252a0:	ldr	r9, [sp, #52]	; 0x34
   252a4:	cmp	r0, #0
   252a8:	beq	252c0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x31c>
   252ac:	ldr	r2, [r6, r1, lsl #3]
   252b0:	subs	r0, r0, #1
   252b4:	str	r1, [r2, #124]	; 0x7c
   252b8:	add	r1, r1, #1
   252bc:	bne	252ac <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x308>
   252c0:	ldr	r0, [sp, #60]	; 0x3c
   252c4:	cmp	r0, #1
   252c8:	blt	252e4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x340>
   252cc:	lsl	r0, r0, #2
   252d0:	bl	14868 <malloc@plt>
   252d4:	cmp	r0, #0
   252d8:	beq	25d90 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xdec>
   252dc:	mov	r6, r0
   252e0:	b	252e8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x344>
   252e4:	mov	r6, #0
   252e8:	ldr	r0, [sp, #48]	; 0x30
   252ec:	mov	r2, #0
   252f0:	ldr	r0, [r0, #188]	; 0xbc
   252f4:	ldr	r1, [pc, #2996]	; 25eb0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf0c>
   252f8:	cmp	r0, #0
   252fc:	add	r1, pc, r1
   25300:	mov	r0, r9
   25304:	moveq	r3, #0
   25308:	movne	r3, #2
   2530c:	bl	3794c <flatcc_builder_start_buffer@@Base>
   25310:	cmp	r0, #0
   25314:	bne	25324 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x380>
   25318:	mov	r0, r9
   2531c:	mov	r1, #5
   25320:	bl	38f28 <flatcc_builder_start_table@@Base>
   25324:	ldr	r1, [sp, #8]
   25328:	ldrh	r0, [r1, #16]
   2532c:	cmp	r0, #2
   25330:	bne	25374 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x3d0>
   25334:	ldr	r0, [sp, #8]
   25338:	ldrd	r2, [r0, #8]
   2533c:	mov	r0, r9
   25340:	mov	r1, r2
   25344:	mov	r2, r3
   25348:	bl	3b144 <flatcc_builder_create_string@@Base>
   2534c:	ldr	r1, [sp, #8]
   25350:	cmp	r0, #0
   25354:	beq	25374 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x3d0>
   25358:	mov	r4, r0
   2535c:	mov	r0, r9
   25360:	mov	r1, #2
   25364:	bl	3a210 <flatcc_builder_table_add_offset@@Base>
   25368:	ldr	r1, [sp, #8]
   2536c:	cmp	r0, #0
   25370:	strne	r4, [r0]
   25374:	ldrh	r0, [r1, #32]
   25378:	cmp	r0, #2
   2537c:	bne	253b8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x414>
   25380:	ldr	r0, [sp, #8]
   25384:	ldrd	r2, [r0, #24]
   25388:	mov	r0, r9
   2538c:	mov	r1, r2
   25390:	mov	r2, r3
   25394:	bl	3b144 <flatcc_builder_create_string@@Base>
   25398:	cmp	r0, #0
   2539c:	beq	253b8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x414>
   253a0:	mov	r4, r0
   253a4:	mov	r0, r9
   253a8:	mov	r1, #3
   253ac:	bl	3a210 <flatcc_builder_table_add_offset@@Base>
   253b0:	cmp	r0, #0
   253b4:	strne	r4, [r0]
   253b8:	ldr	r0, [sp, #60]	; 0x3c
   253bc:	str	r6, [sp, #20]
   253c0:	cmp	r0, #1
   253c4:	str	r0, [sp, #16]
   253c8:	blt	259e4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xa40>
   253cc:	ldr	r0, [sp, #72]	; 0x48
   253d0:	mov	r1, #0
   253d4:	str	r0, [sp, #12]
   253d8:	ldr	r4, [sp, #12]
   253dc:	str	r1, [sp, #24]
   253e0:	mov	r0, r9
   253e4:	ldr	sl, [r4, r1, lsl #3]!
   253e8:	mov	r1, #5
   253ec:	bl	38f28 <flatcc_builder_start_table@@Base>
   253f0:	ldr	r1, [r4, #4]
   253f4:	mov	r0, r9
   253f8:	bl	3b260 <flatcc_builder_create_string_str@@Base>
   253fc:	cmp	r0, #0
   25400:	beq	2541c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x478>
   25404:	mov	r7, r0
   25408:	mov	r0, r9
   2540c:	mov	r1, #0
   25410:	bl	3a210 <flatcc_builder_table_add_offset@@Base>
   25414:	cmp	r0, #0
   25418:	strne	r7, [r0]
   2541c:	mov	r0, r9
   25420:	bl	38aa4 <flatcc_builder_start_offset_vector@@Base>
   25424:	ldr	r5, [sl, #20]
   25428:	cmp	r5, #0
   2542c:	beq	25900 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x95c>
   25430:	mov	r7, #0
   25434:	str	sl, [sp, #28]
   25438:	b	2544c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x4a8>
   2543c:	ldr	r5, [r5]
   25440:	orr	r7, r7, r8
   25444:	cmp	r5, #0
   25448:	beq	25900 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x95c>
   2544c:	mov	sl, r5
   25450:	ldrh	r0, [sl, #24]!
   25454:	ldrh	r6, [sl, #48]	; 0x30
   25458:	sub	r4, sl, #8
   2545c:	cmp	r0, #14
   25460:	ubfx	r1, r6, #2, #1
   25464:	str	r1, [sp, #48]	; 0x30
   25468:	ubfx	r1, r6, #8, #1
   2546c:	str	r1, [sp, #32]
   25470:	add	r1, sl, #72	; 0x48
   25474:	str	r1, [sp, #44]	; 0x2c
   25478:	bne	255e0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x63c>
   2547c:	ldr	r0, [r4]
   25480:	ldrh	r0, [r0, #8]
   25484:	cmp	r0, #4
   25488:	bne	255e0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x63c>
   2548c:	mov	r0, r9
   25490:	mov	r1, #9
   25494:	str	r4, [sp, #40]	; 0x28
   25498:	mov	r8, r7
   2549c:	bl	38f28 <flatcc_builder_start_table@@Base>
   254a0:	mov	r0, r9
   254a4:	bl	38d70 <flatcc_builder_start_string@@Base>
   254a8:	ldr	r0, [r5, #4]
   254ac:	ldm	r0, {r1, r2}
   254b0:	mov	r0, r9
   254b4:	bl	38658 <flatcc_builder_append_string@@Base>
   254b8:	ldr	r1, [pc, #2548]	; 25eb4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf10>
   254bc:	mov	r0, r9
   254c0:	mov	r2, #5
   254c4:	add	r1, pc, r1
   254c8:	bl	38658 <flatcc_builder_append_string@@Base>
   254cc:	mov	r0, r9
   254d0:	bl	3b2c8 <flatcc_builder_end_string@@Base>
   254d4:	cmp	r0, #0
   254d8:	beq	254f4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x550>
   254dc:	mov	r7, r0
   254e0:	mov	r0, r9
   254e4:	mov	r1, #0
   254e8:	bl	3a210 <flatcc_builder_table_add_offset@@Base>
   254ec:	cmp	r0, #0
   254f0:	strne	r7, [r0]
   254f4:	mov	r0, r9
   254f8:	mov	r1, #3
   254fc:	bl	38f28 <flatcc_builder_start_table@@Base>
   25500:	cmp	r0, #0
   25504:	beq	25720 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x77c>
   25508:	ldr	r0, [sp, #44]	; 0x2c
   2550c:	mov	r1, #2
   25510:	ldrh	r0, [r0]
   25514:	add	r7, r1, r0, lsl #1
   25518:	movw	r0, #65535	; 0xffff
   2551c:	tst	r7, r0
   25520:	beq	25540 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x59c>
   25524:	ldr	r0, [sp, #52]	; 0x34
   25528:	mov	r1, #3
   2552c:	mov	r2, #2
   25530:	mov	r3, #2
   25534:	bl	3a3c4 <flatcc_builder_table_add@@Base>
   25538:	cmp	r0, #0
   2553c:	strhne	r7, [r0]
   25540:	ldr	r0, [sp, #44]	; 0x2c
   25544:	mov	r7, r8
   25548:	ldrh	r0, [r0]
   2554c:	sub	r9, r0, #1
   25550:	movw	r0, #65535	; 0xffff
   25554:	tst	r9, r0
   25558:	beq	25578 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x5d4>
   2555c:	ldr	r0, [sp, #52]	; 0x34
   25560:	mov	r1, #2
   25564:	mov	r2, #2
   25568:	mov	r3, #2
   2556c:	bl	3a3c4 <flatcc_builder_table_add@@Base>
   25570:	cmp	r0, #0
   25574:	strhne	r9, [r0]
   25578:	ldr	r8, [sp, #48]	; 0x30
   2557c:	ldr	r9, [sp, #52]	; 0x34
   25580:	cmp	r8, #0
   25584:	beq	255a4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x600>
   25588:	mov	r0, r9
   2558c:	mov	r1, #6
   25590:	mov	r2, #1
   25594:	mov	r3, #1
   25598:	bl	3a3c4 <flatcc_builder_table_add@@Base>
   2559c:	cmp	r0, #0
   255a0:	strbne	r8, [r0]
   255a4:	ldr	r1, [pc, #2320]	; 25ebc <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf18>
   255a8:	mov	r0, r9
   255ac:	mov	r2, #2
   255b0:	add	r1, pc, r1
   255b4:	bl	398c4 <flatcc_builder_check_required@@Base>
   255b8:	cmp	r0, #0
   255bc:	beq	25de0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe3c>
   255c0:	mov	r0, r9
   255c4:	bl	39950 <flatcc_builder_end_table@@Base>
   255c8:	ldr	r4, [sp, #40]	; 0x28
   255cc:	cmp	r0, #0
   255d0:	beq	255e0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x63c>
   255d4:	mov	r1, r0
   255d8:	mov	r0, r9
   255dc:	bl	382ec <flatcc_builder_offset_vector_push@@Base>
   255e0:	uxtb	r0, r7
   255e4:	mov	r1, #9
   255e8:	str	r7, [sp, #40]	; 0x28
   255ec:	clz	r8, r0
   255f0:	mov	r0, r9
   255f4:	bl	38f28 <flatcc_builder_start_table@@Base>
   255f8:	ldr	r0, [r5, #4]
   255fc:	str	r5, [sp, #36]	; 0x24
   25600:	ldm	r0, {r1, r2}
   25604:	mov	r0, r9
   25608:	bl	3b144 <flatcc_builder_create_string@@Base>
   2560c:	cmp	r0, #0
   25610:	beq	2562c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x688>
   25614:	mov	r7, r0
   25618:	mov	r0, r9
   2561c:	mov	r1, #0
   25620:	bl	3a210 <flatcc_builder_table_add_offset@@Base>
   25624:	cmp	r0, #0
   25628:	strne	r7, [r0]
   2562c:	lsr	r5, r8, #5
   25630:	ldrd	r2, [r4]
   25634:	ldr	r8, [sl]
   25638:	ldr	r1, [sl, #4]
   2563c:	mov	r0, r9
   25640:	uxtb	r6, r6
   25644:	str	r8, [sp]
   25648:	str	r1, [sp, #4]
   2564c:	bl	2659c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x430>
   25650:	cmp	r0, #0
   25654:	beq	25670 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x6cc>
   25658:	mov	r7, r0
   2565c:	ldr	r0, [sp, #52]	; 0x34
   25660:	mov	r1, #1
   25664:	bl	3a210 <flatcc_builder_table_add_offset@@Base>
   25668:	cmp	r0, #0
   2566c:	strne	r7, [r0]
   25670:	add	r0, sl, #24
   25674:	ldr	sl, [sp, #28]
   25678:	and	r8, r5, r6, lsr #7
   2567c:	ldrh	r1, [sl, #8]
   25680:	cmp	r1, #1
   25684:	beq	256dc <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x738>
   25688:	ldr	r9, [sp, #52]	; 0x34
   2568c:	ldr	r7, [sp, #40]	; 0x28
   25690:	ldr	r5, [sp, #36]	; 0x24
   25694:	ldr	r6, [sp, #48]	; 0x30
   25698:	cmp	r1, #0
   2569c:	bne	258a0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x8fc>
   256a0:	ldrh	r1, [r5, #56]	; 0x38
   256a4:	sub	r1, r1, #3
   256a8:	cmp	r1, #3
   256ac:	bhi	257e8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x844>
   256b0:	add	r2, pc, #4
   256b4:	ldr	r1, [r2, r1, lsl #2]
   256b8:	add	pc, r2, r1
   256bc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   256c0:	andeq	r0, r0, r0, lsl r0
   256c4:	andeq	r0, r0, r0, lsl r0
   256c8:	andeq	r0, r0, r0, lsl #2
   256cc:	ldm	r0, {r4, r9}
   256d0:	orrs	r0, r4, r9
   256d4:	bne	257cc <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x828>
   256d8:	b	257e8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x844>
   256dc:	ldrh	r4, [r0, #32]
   256e0:	ldr	r9, [sp, #52]	; 0x34
   256e4:	ldr	r7, [sp, #40]	; 0x28
   256e8:	ldr	r5, [sp, #36]	; 0x24
   256ec:	ldr	r6, [sp, #48]	; 0x30
   256f0:	cmp	r4, #0
   256f4:	beq	258a0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x8fc>
   256f8:	mov	r0, r9
   256fc:	mov	r1, #3
   25700:	mov	r2, #2
   25704:	mov	r3, #2
   25708:	bl	3a3c4 <flatcc_builder_table_add@@Base>
   2570c:	cmp	r0, #0
   25710:	strhne	r4, [r0]
   25714:	cmp	r6, #0
   25718:	bne	258a8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x904>
   2571c:	b	258c4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x920>
   25720:	mov	r0, r9
   25724:	mov	r1, #0
   25728:	mov	r2, #1
   2572c:	mov	r3, #1
   25730:	bl	3a3c4 <flatcc_builder_table_add@@Base>
   25734:	cmp	r0, #0
   25738:	beq	25508 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x564>
   2573c:	mov	r1, #1
   25740:	mov	r2, #0
   25744:	strb	r1, [r0]
   25748:	mov	r0, r9
   2574c:	ldr	r1, [pc, #1892]	; 25eb8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf14>
   25750:	add	r1, pc, r1
   25754:	bl	398c4 <flatcc_builder_check_required@@Base>
   25758:	cmp	r0, #0
   2575c:	beq	25e20 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe7c>
   25760:	mov	r0, r9
   25764:	bl	39950 <flatcc_builder_end_table@@Base>
   25768:	cmp	r0, #0
   2576c:	beq	25508 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x564>
   25770:	mov	r7, r0
   25774:	mov	r0, r9
   25778:	mov	r1, #1
   2577c:	bl	3a210 <flatcc_builder_table_add_offset@@Base>
   25780:	cmp	r0, #0
   25784:	strne	r7, [r0]
   25788:	b	25508 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x564>
   2578c:	vldr	d8, [r0]
   25790:	vcmp.f64	d8, #0.0
   25794:	vmrs	APSR_nzcv, fpscr
   25798:	beq	257e8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x844>
   2579c:	ldr	r0, [sp, #52]	; 0x34
   257a0:	mov	r1, #5
   257a4:	mov	r2, #8
   257a8:	mov	r3, #8
   257ac:	bl	3a3c4 <flatcc_builder_table_add@@Base>
   257b0:	cmp	r0, #0
   257b4:	vstrne	d8, [r0]
   257b8:	b	257e8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x844>
   257bc:	ldrb	r4, [r0]
   257c0:	mov	r9, #0
   257c4:	orrs	r0, r4, r9
   257c8:	beq	257e8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x844>
   257cc:	ldr	r0, [sp, #52]	; 0x34
   257d0:	mov	r1, #4
   257d4:	mov	r2, #8
   257d8:	mov	r3, #8
   257dc:	bl	3a3c4 <flatcc_builder_table_add@@Base>
   257e0:	cmp	r0, #0
   257e4:	stmne	r0, {r4, r9}
   257e8:	ldr	r0, [sp, #44]	; 0x2c
   257ec:	ldr	r9, [sp, #52]	; 0x34
   257f0:	ldrh	r4, [r0]
   257f4:	cmp	r4, #0
   257f8:	beq	25818 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x874>
   257fc:	mov	r0, r9
   25800:	mov	r1, #2
   25804:	mov	r2, #2
   25808:	mov	r3, #2
   2580c:	bl	3a3c4 <flatcc_builder_table_add@@Base>
   25810:	cmp	r0, #0
   25814:	strhne	r4, [r0]
   25818:	ldr	r0, [sp, #44]	; 0x2c
   2581c:	mov	r1, #4
   25820:	ldrh	r0, [r0]
   25824:	add	r4, r1, r0, lsl #1
   25828:	movw	r0, #65535	; 0xffff
   2582c:	tst	r4, r0
   25830:	beq	25850 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x8ac>
   25834:	mov	r0, r9
   25838:	mov	r1, #3
   2583c:	mov	r2, #2
   25840:	mov	r3, #2
   25844:	bl	3a3c4 <flatcc_builder_table_add@@Base>
   25848:	cmp	r0, #0
   2584c:	strhne	r4, [r0]
   25850:	cmp	r8, #0
   25854:	beq	25874 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x8d0>
   25858:	mov	r0, r9
   2585c:	mov	r1, #8
   25860:	mov	r2, #1
   25864:	mov	r3, #1
   25868:	bl	3a3c4 <flatcc_builder_table_add@@Base>
   2586c:	cmp	r0, #0
   25870:	strbne	r8, [r0]
   25874:	ldr	r0, [sp, #32]
   25878:	cmp	r0, #0
   2587c:	beq	258a0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x8fc>
   25880:	mov	r0, r9
   25884:	mov	r1, #7
   25888:	mov	r2, #1
   2588c:	mov	r3, #1
   25890:	bl	3a3c4 <flatcc_builder_table_add@@Base>
   25894:	cmp	r0, #0
   25898:	ldrne	r1, [sp, #32]
   2589c:	strbne	r1, [r0]
   258a0:	cmp	r6, #0
   258a4:	beq	258c4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x920>
   258a8:	mov	r0, r9
   258ac:	mov	r1, #6
   258b0:	mov	r2, #1
   258b4:	mov	r3, #1
   258b8:	bl	3a3c4 <flatcc_builder_table_add@@Base>
   258bc:	cmp	r0, #0
   258c0:	strbne	r6, [r0]
   258c4:	ldr	r1, [pc, #1524]	; 25ec0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf1c>
   258c8:	mov	r0, r9
   258cc:	mov	r2, #2
   258d0:	add	r1, pc, r1
   258d4:	bl	398c4 <flatcc_builder_check_required@@Base>
   258d8:	cmp	r0, #0
   258dc:	beq	25de0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe3c>
   258e0:	mov	r0, r9
   258e4:	bl	39950 <flatcc_builder_end_table@@Base>
   258e8:	cmp	r0, #0
   258ec:	beq	2543c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x498>
   258f0:	mov	r1, r0
   258f4:	mov	r0, r9
   258f8:	bl	382ec <flatcc_builder_offset_vector_push@@Base>
   258fc:	b	2543c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x498>
   25900:	mov	r0, r9
   25904:	bl	38c8c <flatcc_builder_end_offset_vector@@Base>
   25908:	cmp	r0, #0
   2590c:	beq	25928 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x984>
   25910:	mov	r7, r0
   25914:	mov	r0, r9
   25918:	mov	r1, #1
   2591c:	bl	3a210 <flatcc_builder_table_add_offset@@Base>
   25920:	cmp	r0, #0
   25924:	strne	r7, [r0]
   25928:	ldrh	r0, [sl, #8]
   2592c:	ldr	r6, [sp, #20]
   25930:	cmp	r0, #1
   25934:	bne	25980 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x9dc>
   25938:	ldr	r4, [sl, #112]	; 0x70
   2593c:	cmp	r4, #0
   25940:	beq	25960 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x9bc>
   25944:	mov	r0, r9
   25948:	mov	r1, #4
   2594c:	mov	r2, #4
   25950:	mov	r3, #4
   25954:	bl	3a3c4 <flatcc_builder_table_add@@Base>
   25958:	cmp	r0, #0
   2595c:	strne	r4, [r0]
   25960:	mov	r0, r9
   25964:	mov	r1, #2
   25968:	mov	r2, #1
   2596c:	mov	r3, #1
   25970:	bl	3a3c4 <flatcc_builder_table_add@@Base>
   25974:	cmp	r0, #0
   25978:	movne	r1, #1
   2597c:	strbne	r1, [r0]
   25980:	ldrh	r4, [sl, #104]	; 0x68
   25984:	cmp	r4, #0
   25988:	beq	259a8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xa04>
   2598c:	mov	r0, r9
   25990:	mov	r1, #3
   25994:	mov	r2, #4
   25998:	mov	r3, #4
   2599c:	bl	3a3c4 <flatcc_builder_table_add@@Base>
   259a0:	cmp	r0, #0
   259a4:	strne	r4, [r0]
   259a8:	ldr	r1, [pc, #1300]	; 25ec4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf20>
   259ac:	mov	r0, r9
   259b0:	mov	r2, #2
   259b4:	add	r1, pc, r1
   259b8:	bl	398c4 <flatcc_builder_check_required@@Base>
   259bc:	cmp	r0, #0
   259c0:	beq	25e40 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe9c>
   259c4:	mov	r0, r9
   259c8:	bl	39950 <flatcc_builder_end_table@@Base>
   259cc:	ldr	r1, [sp, #24]
   259d0:	str	r0, [r6, r1, lsl #2]
   259d4:	ldr	r0, [sp, #16]
   259d8:	add	r1, r1, #1
   259dc:	cmp	r1, r0
   259e0:	bne	253d8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x434>
   259e4:	ldr	r2, [sp, #16]
   259e8:	mov	r0, r9
   259ec:	mov	r1, r6
   259f0:	bl	38b1c <flatcc_builder_create_offset_vector@@Base>
   259f4:	cmp	r0, #0
   259f8:	beq	25a14 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xa70>
   259fc:	mov	r4, r0
   25a00:	mov	r0, r9
   25a04:	mov	r1, #0
   25a08:	bl	3a210 <flatcc_builder_table_add_offset@@Base>
   25a0c:	cmp	r0, #0
   25a10:	strne	r4, [r0]
   25a14:	ldr	r0, [sp, #76]	; 0x4c
   25a18:	ldr	r4, [sp, #64]	; 0x40
   25a1c:	str	r0, [sp, #40]	; 0x28
   25a20:	mov	r0, r9
   25a24:	bl	38aa4 <flatcc_builder_start_offset_vector@@Base>
   25a28:	cmp	r4, #1
   25a2c:	str	r4, [sp, #44]	; 0x2c
   25a30:	blt	25c8c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xce8>
   25a34:	ldr	r6, [pc, #1164]	; 25ec8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf24>
   25a38:	mov	r4, #0
   25a3c:	add	r6, pc, r6
   25a40:	b	25a54 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xab0>
   25a44:	ldr	r0, [sp, #44]	; 0x2c
   25a48:	add	r4, r4, #1
   25a4c:	cmp	r4, r0
   25a50:	beq	25c8c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xce8>
   25a54:	ldr	r5, [sp, #40]	; 0x28
   25a58:	mov	r1, #4
   25a5c:	ldr	r8, [r5, r4, lsl #3]!
   25a60:	ldrh	r0, [r8, #8]
   25a64:	str	r0, [sp, #48]	; 0x30
   25a68:	ldr	r0, [sp, #52]	; 0x34
   25a6c:	bl	38f28 <flatcc_builder_start_table@@Base>
   25a70:	ldr	r1, [r5, #4]
   25a74:	ldr	r5, [sp, #52]	; 0x34
   25a78:	mov	r0, r5
   25a7c:	bl	3b260 <flatcc_builder_create_string_str@@Base>
   25a80:	cmp	r0, #0
   25a84:	beq	25aa0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xafc>
   25a88:	mov	r7, r0
   25a8c:	mov	r0, r5
   25a90:	mov	r1, #0
   25a94:	bl	3a210 <flatcc_builder_table_add_offset@@Base>
   25a98:	cmp	r0, #0
   25a9c:	strne	r7, [r0]
   25aa0:	mov	r0, r5
   25aa4:	bl	38aa4 <flatcc_builder_start_offset_vector@@Base>
   25aa8:	ldr	sl, [r8, #20]
   25aac:	cmp	sl, #0
   25ab0:	beq	25bb8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xc14>
   25ab4:	ldr	r0, [sp, #48]	; 0x30
   25ab8:	mov	r9, #0
   25abc:	cmp	r0, #4
   25ac0:	ldr	r0, [sp, #20]
   25ac4:	moveq	r9, r0
   25ac8:	b	25ad8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xb34>
   25acc:	ldr	sl, [sl]
   25ad0:	cmp	sl, #0
   25ad4:	beq	25bb8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xc14>
   25ad8:	mov	r0, r5
   25adc:	mov	r1, #3
   25ae0:	bl	38f28 <flatcc_builder_start_table@@Base>
   25ae4:	ldr	r0, [sl, #4]
   25ae8:	ldm	r0, {r1, r2}
   25aec:	mov	r0, r5
   25af0:	bl	3b144 <flatcc_builder_create_string@@Base>
   25af4:	cmp	r0, #0
   25af8:	beq	25b14 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xb70>
   25afc:	mov	r7, r0
   25b00:	mov	r0, r5
   25b04:	mov	r1, #0
   25b08:	bl	3a210 <flatcc_builder_table_add_offset@@Base>
   25b0c:	cmp	r0, #0
   25b10:	strne	r7, [r0]
   25b14:	cmp	r9, #0
   25b18:	beq	25b50 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xbac>
   25b1c:	ldrh	r0, [sl, #24]
   25b20:	cmp	r0, #14
   25b24:	bne	25b50 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xbac>
   25b28:	ldr	r0, [sl, #16]
   25b2c:	ldr	r0, [r0, #124]	; 0x7c
   25b30:	ldr	r5, [r9, r0, lsl #2]
   25b34:	cmp	r5, #0
   25b38:	beq	25b50 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xbac>
   25b3c:	ldr	r0, [sp, #52]	; 0x34
   25b40:	mov	r1, #2
   25b44:	bl	3a210 <flatcc_builder_table_add_offset@@Base>
   25b48:	cmp	r0, #0
   25b4c:	strne	r5, [r0]
   25b50:	ldr	r5, [sl, #48]	; 0x30
   25b54:	ldr	r7, [sl, #52]	; 0x34
   25b58:	orrs	r0, r5, r7
   25b5c:	beq	25b7c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xbd8>
   25b60:	ldr	r0, [sp, #52]	; 0x34
   25b64:	mov	r1, #1
   25b68:	mov	r2, #8
   25b6c:	mov	r3, #8
   25b70:	bl	3a3c4 <flatcc_builder_table_add@@Base>
   25b74:	cmp	r0, #0
   25b78:	stmne	r0, {r5, r7}
   25b7c:	ldr	r5, [sp, #52]	; 0x34
   25b80:	mov	r1, r6
   25b84:	mov	r2, #1
   25b88:	mov	r0, r5
   25b8c:	bl	398c4 <flatcc_builder_check_required@@Base>
   25b90:	cmp	r0, #0
   25b94:	beq	25e00 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe5c>
   25b98:	mov	r0, r5
   25b9c:	bl	39950 <flatcc_builder_end_table@@Base>
   25ba0:	cmp	r0, #0
   25ba4:	beq	25acc <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xb28>
   25ba8:	mov	r1, r0
   25bac:	mov	r0, r5
   25bb0:	bl	382ec <flatcc_builder_offset_vector_push@@Base>
   25bb4:	b	25acc <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xb28>
   25bb8:	mov	r0, r5
   25bbc:	bl	38c8c <flatcc_builder_end_offset_vector@@Base>
   25bc0:	cmp	r0, #0
   25bc4:	beq	25be0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xc3c>
   25bc8:	mov	r7, r0
   25bcc:	mov	r0, r5
   25bd0:	mov	r1, #1
   25bd4:	bl	3a210 <flatcc_builder_table_add_offset@@Base>
   25bd8:	cmp	r0, #0
   25bdc:	strne	r7, [r0]
   25be0:	ldr	r0, [sp, #48]	; 0x30
   25be4:	add	r5, r8, #40	; 0x28
   25be8:	subs	r7, r0, #4
   25bec:	bne	25c14 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xc70>
   25bf0:	ldr	r0, [sp, #52]	; 0x34
   25bf4:	mov	r1, #2
   25bf8:	mov	r2, #1
   25bfc:	mov	r3, #1
   25c00:	bl	3a3c4 <flatcc_builder_table_add@@Base>
   25c04:	cmp	r0, #0
   25c08:	clzne	r1, r7
   25c0c:	lsrne	r1, r1, #5
   25c10:	strbne	r1, [r0]
   25c14:	ldr	r0, [r5, #8]
   25c18:	ldr	r9, [sp, #52]	; 0x34
   25c1c:	ldm	r5, {r2, r3}
   25c20:	ldr	r1, [r5, #12]
   25c24:	stm	sp, {r0, r1}
   25c28:	mov	r0, r9
   25c2c:	bl	2659c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x430>
   25c30:	cmp	r0, #0
   25c34:	beq	25c50 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xcac>
   25c38:	mov	r7, r0
   25c3c:	mov	r0, r9
   25c40:	mov	r1, #3
   25c44:	bl	3a210 <flatcc_builder_table_add_offset@@Base>
   25c48:	cmp	r0, #0
   25c4c:	strne	r7, [r0]
   25c50:	ldr	r1, [pc, #628]	; 25ecc <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf28>
   25c54:	mov	r0, r9
   25c58:	mov	r2, #3
   25c5c:	add	r1, pc, r1
   25c60:	bl	398c4 <flatcc_builder_check_required@@Base>
   25c64:	cmp	r0, #0
   25c68:	beq	25e60 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xebc>
   25c6c:	mov	r0, r9
   25c70:	bl	39950 <flatcc_builder_end_table@@Base>
   25c74:	cmp	r0, #0
   25c78:	beq	25a44 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xaa0>
   25c7c:	mov	r1, r0
   25c80:	mov	r0, r9
   25c84:	bl	382ec <flatcc_builder_offset_vector_push@@Base>
   25c88:	b	25a44 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xaa0>
   25c8c:	mov	r0, r9
   25c90:	bl	38c8c <flatcc_builder_end_offset_vector@@Base>
   25c94:	cmp	r0, #0
   25c98:	beq	25cb4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd10>
   25c9c:	mov	r4, r0
   25ca0:	mov	r0, r9
   25ca4:	mov	r1, #1
   25ca8:	bl	3a210 <flatcc_builder_table_add_offset@@Base>
   25cac:	cmp	r0, #0
   25cb0:	strne	r4, [r0]
   25cb4:	ldr	r0, [sp, #8]
   25cb8:	ldr	r6, [sp, #20]
   25cbc:	ldr	r0, [r0, #52]	; 0x34
   25cc0:	cmp	r0, #0
   25cc4:	beq	25cf8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd54>
   25cc8:	ldrh	r1, [r0, #8]
   25ccc:	cmp	r1, #0
   25cd0:	bne	25cf8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd54>
   25cd4:	ldr	r0, [r0, #124]	; 0x7c
   25cd8:	ldr	r4, [r6, r0, lsl #2]
   25cdc:	cmp	r4, #0
   25ce0:	beq	25cf8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd54>
   25ce4:	mov	r0, r9
   25ce8:	mov	r1, #4
   25cec:	bl	3a210 <flatcc_builder_table_add_offset@@Base>
   25cf0:	cmp	r0, #0
   25cf4:	strne	r4, [r0]
   25cf8:	ldr	r1, [pc, #464]	; 25ed0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf2c>
   25cfc:	mov	r0, r9
   25d00:	mov	r2, #2
   25d04:	add	r1, pc, r1
   25d08:	bl	398c4 <flatcc_builder_check_required@@Base>
   25d0c:	cmp	r0, #0
   25d10:	beq	25e80 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xedc>
   25d14:	mov	r0, r9
   25d18:	bl	39950 <flatcc_builder_end_table@@Base>
   25d1c:	mov	r1, r0
   25d20:	mov	r0, r9
   25d24:	bl	37b4c <flatcc_builder_end_buffer@@Base>
   25d28:	ldr	r0, [sp, #72]	; 0x48
   25d2c:	cmp	r0, #0
   25d30:	beq	25d38 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd94>
   25d34:	bl	147fc <free@plt>
   25d38:	ldr	r0, [sp, #76]	; 0x4c
   25d3c:	cmp	r0, #0
   25d40:	beq	25d48 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xda4>
   25d44:	bl	147fc <free@plt>
   25d48:	ldr	r0, [sp, #80]	; 0x50
   25d4c:	cmp	r0, #0
   25d50:	beq	25d58 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xdb4>
   25d54:	bl	147fc <free@plt>
   25d58:	vmov.i32	q8, #0	; 0x00000000
   25d5c:	add	r1, sp, #56	; 0x38
   25d60:	mov	r0, #28
   25d64:	mov	r4, #0
   25d68:	cmp	r6, #0
   25d6c:	mov	r2, r1
   25d70:	add	r1, r1, #16
   25d74:	vst1.64	{d16-d17}, [r2], r0
   25d78:	vst1.32	{d16-d17}, [r2]
   25d7c:	vst1.64	{d16-d17}, [r1]
   25d80:	beq	2514c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1a8>
   25d84:	mov	r0, r6
   25d88:	bl	147fc <free@plt>
   25d8c:	b	2514c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1a8>
   25d90:	ldr	r0, [sp, #72]	; 0x48
   25d94:	cmp	r0, #0
   25d98:	beq	25da0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xdfc>
   25d9c:	bl	147fc <free@plt>
   25da0:	ldr	r0, [sp, #76]	; 0x4c
   25da4:	cmp	r0, #0
   25da8:	beq	25db0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe0c>
   25dac:	bl	147fc <free@plt>
   25db0:	ldr	r0, [sp, #80]	; 0x50
   25db4:	cmp	r0, #0
   25db8:	beq	25dc0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe1c>
   25dbc:	bl	147fc <free@plt>
   25dc0:	vmov.i32	q8, #0	; 0x00000000
   25dc4:	add	r1, sp, #56	; 0x38
   25dc8:	mov	r0, #28
   25dcc:	mov	r2, r1
   25dd0:	add	r1, r1, #16
   25dd4:	vst1.64	{d16-d17}, [r2], r0
   25dd8:	vst1.32	{d16-d17}, [r2]
   25ddc:	b	25144 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1a0>
   25de0:	ldr	r0, [pc, #248]	; 25ee0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf3c>
   25de4:	ldr	r1, [pc, #248]	; 25ee4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf40>
   25de8:	ldr	r3, [pc, #248]	; 25ee8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf44>
   25dec:	mov	r2, #29
   25df0:	add	r0, pc, r0
   25df4:	add	r1, pc, r1
   25df8:	add	r3, pc, r3
   25dfc:	bl	1497c <__assert_fail@plt>
   25e00:	ldr	r0, [pc, #240]	; 25ef8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf54>
   25e04:	ldr	r1, [pc, #240]	; 25efc <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf58>
   25e08:	ldr	r3, [pc, #240]	; 25f00 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf5c>
   25e0c:	mov	r2, #25
   25e10:	add	r0, pc, r0
   25e14:	add	r1, pc, r1
   25e18:	add	r3, pc, r3
   25e1c:	bl	1497c <__assert_fail@plt>
   25e20:	ldr	r0, [pc, #172]	; 25ed4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf30>
   25e24:	ldr	r1, [pc, #172]	; 25ed8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf34>
   25e28:	ldr	r3, [pc, #172]	; 25edc <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf38>
   25e2c:	mov	r2, #23
   25e30:	add	r0, pc, r0
   25e34:	add	r1, pc, r1
   25e38:	add	r3, pc, r3
   25e3c:	bl	1497c <__assert_fail@plt>
   25e40:	ldr	r0, [pc, #164]	; 25eec <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf48>
   25e44:	ldr	r1, [pc, #164]	; 25ef0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf4c>
   25e48:	ldr	r3, [pc, #164]	; 25ef4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf50>
   25e4c:	mov	r2, #31
   25e50:	add	r0, pc, r0
   25e54:	add	r1, pc, r1
   25e58:	add	r3, pc, r3
   25e5c:	bl	1497c <__assert_fail@plt>
   25e60:	ldr	r0, [pc, #156]	; 25f04 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf60>
   25e64:	ldr	r1, [pc, #156]	; 25f08 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf64>
   25e68:	ldr	r3, [pc, #156]	; 25f0c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf68>
   25e6c:	mov	r2, #27
   25e70:	add	r0, pc, r0
   25e74:	add	r1, pc, r1
   25e78:	add	r3, pc, r3
   25e7c:	bl	1497c <__assert_fail@plt>
   25e80:	ldr	r0, [pc, #136]	; 25f10 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf6c>
   25e84:	ldr	r1, [pc, #136]	; 25f14 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf70>
   25e88:	ldr	r3, [pc, #136]	; 25f18 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf74>
   25e8c:	mov	r2, #33	; 0x21
   25e90:	add	r0, pc, r0
   25e94:	add	r1, pc, r1
   25e98:	add	r3, pc, r3
   25e9c:	bl	1497c <__assert_fail@plt>
   25ea0:	andeq	r1, r0, r0, lsl r3
   25ea4:	andeq	r1, r0, r4, lsr r2
   25ea8:	andeq	r1, r0, r4, lsl #8
   25eac:	andeq	r1, r0, ip, asr r3
   25eb0:	ldrdeq	r0, [r3], -r1
   25eb4:	ldrdeq	r0, [r2], -r7
   25eb8:	andeq	r0, r3, r4, ror ip
   25ebc:	andeq	r0, r3, r6, lsl lr
   25ec0:	strdeq	r0, [r3], -r6
   25ec4:	andeq	r0, r3, r8, lsl sl
   25ec8:	muleq	r3, r6, r9
   25ecc:	andeq	r0, r3, sl, ror r7
   25ed0:	ldrdeq	r0, [r3], -sl
   25ed4:	andeq	pc, r2, r2, lsr #27
   25ed8:	andeq	pc, r2, fp, lsr #28
   25edc:	muleq	r2, sp, lr
   25ee0:	andeq	pc, r2, r8, lsr #30
   25ee4:	andeq	pc, r2, fp, ror #28
   25ee8:			; <UNDEFINED> instruction: 0x0002ffb0
   25eec:	muleq	r2, sp, pc	; <UNPREDICTABLE>
   25ef0:	andeq	pc, r2, fp, lsl #28
   25ef4:	andeq	r0, r3, r8, lsr #32
   25ef8:	strheq	r0, [r3], -r7
   25efc:	andeq	pc, r2, fp, asr #28
   25f00:	andeq	r0, r3, r5, asr #2
   25f04:	andeq	r0, r3, r6, lsr r1
   25f08:	andeq	pc, r2, fp, ror #27
   25f0c:			; <UNDEFINED> instruction: 0x000301bb
   25f10:	andeq	r0, r3, r6, ror #3
   25f14:	andeq	pc, r2, fp, asr #27
   25f18:	andeq	r0, r3, r1, ror r2
   25f1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25f20:	add	fp, sp, #28
   25f24:	sub	sp, sp, #12
   25f28:	cmp	r0, #0
   25f2c:	beq	260b0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x110c>
   25f30:	ldr	r1, [r0, #4]
   25f34:	movw	r2, #17986	; 0x4642
   25f38:	movt	r2, #21314	; 0x5342
   25f3c:	cmp	r1, r2
   25f40:	bne	260b0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x110c>
   25f44:	ldr	r1, [r0]
   25f48:	ldr	r2, [r0, r1]!
   25f4c:	mov	r1, r0
   25f50:	ldrh	r2, [r1, -r2]!	; <UNPREDICTABLE>
   25f54:	cmp	r2, #5
   25f58:	bls	260bc <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1118>
   25f5c:	ldrh	r1, [r1, #4]
   25f60:	cmp	r1, #0
   25f64:	beq	260bc <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1118>
   25f68:	ldr	r1, [r0, r1]!
   25f6c:	ldr	r1, [r0, r1]!
   25f70:	cmp	r1, #0
   25f74:	beq	26088 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x10e4>
   25f78:	add	r1, r0, #4
   25f7c:	mov	r2, #0
   25f80:	str	r1, [sp, #8]
   25f84:	str	r1, [sp]
   25f88:	b	25fb0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x100c>
   25f8c:	ldr	r0, [sp, #8]
   25f90:	ldr	r1, [sp]
   25f94:	ldr	r2, [sp, #4]
   25f98:	add	r0, r0, #4
   25f9c:	add	r2, r2, #1
   25fa0:	str	r0, [sp, #8]
   25fa4:	ldr	r0, [r1, #-4]
   25fa8:	cmp	r2, r0
   25fac:	bcs	26088 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x10e4>
   25fb0:	mov	r0, r1
   25fb4:	str	r2, [sp, #4]
   25fb8:	ldr	r7, [r0, r2, lsl #2]!
   25fbc:	ldr	r2, [r0, r7]!
   25fc0:	mov	r1, r0
   25fc4:	ldrh	r2, [r1, -r2]!	; <UNPREDICTABLE>
   25fc8:	cmp	r2, #8
   25fcc:	bcc	26090 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x10ec>
   25fd0:	ldrh	r9, [r1, #6]
   25fd4:	cmp	r9, #0
   25fd8:	beq	26090 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x10ec>
   25fdc:	ldr	r8, [r0, r9]!
   25fe0:	ldr	sl, [r0, r8]!
   25fe4:	cmp	sl, #0
   25fe8:	beq	25f8c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xfe8>
   25fec:	add	r4, r0, #4
   25ff0:	lsr	r6, sl, #1
   25ff4:	sub	r5, sl, #1
   25ff8:	mov	r0, r4
   25ffc:	mov	r1, r6
   26000:	mov	r2, r5
   26004:	bl	26884 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x718>
   26008:	sub	r6, r6, #1
   2600c:	cmn	r6, #1
   26010:	bne	25ff8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1054>
   26014:	cmp	r5, #0
   26018:	beq	25f8c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xfe8>
   2601c:	mvn	r0, #3
   26020:	mov	r1, r8
   26024:	sub	r5, sl, #2
   26028:	add	r6, r0, sl, lsl #2
   2602c:	mov	r0, #4
   26030:	sub	r8, r0, sl, lsl #2
   26034:	add	r0, r1, r7
   26038:	ldr	r1, [sp, #8]
   2603c:	add	r0, r0, sl, lsl #2
   26040:	add	r0, r0, r9
   26044:	add	r7, r1, r0
   26048:	ldr	r0, [r7]
   2604c:	ldr	r1, [r4]
   26050:	mov	r2, r5
   26054:	add	r0, r6, r0
   26058:	str	r0, [r4]
   2605c:	add	r0, r8, r1
   26060:	mov	r1, #0
   26064:	str	r0, [r7], #-4
   26068:	mov	r0, r4
   2606c:	bl	26884 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x718>
   26070:	sub	r5, r5, #1
   26074:	sub	r6, r6, #4
   26078:	add	r8, r8, #4
   2607c:	cmn	r5, #1
   26080:	bne	26048 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x10a4>
   26084:	b	25f8c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xfe8>
   26088:	sub	sp, fp, #28
   2608c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26090:	ldr	r0, [pc, #84]	; 260ec <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1148>
   26094:	ldr	r1, [pc, #84]	; 260f0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x114c>
   26098:	ldr	r3, [pc, #84]	; 260f4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1150>
   2609c:	mov	r2, #224	; 0xe0
   260a0:	add	r0, pc, r0
   260a4:	add	r1, pc, r1
   260a8:	add	r3, pc, r3
   260ac:	bl	1497c <__assert_fail@plt>
   260b0:	ldr	r0, [pc, #40]	; 260e0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x113c>
   260b4:	add	r0, pc, r0
   260b8:	b	260c4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1120>
   260bc:	ldr	r0, [pc, #24]	; 260dc <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1138>
   260c0:	add	r0, pc, r0
   260c4:	ldr	r1, [pc, #24]	; 260e4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1140>
   260c8:	ldr	r3, [pc, #24]	; 260e8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1144>
   260cc:	mov	r2, #237	; 0xed
   260d0:	add	r1, pc, r1
   260d4:	add	r3, pc, r3
   260d8:	bl	1497c <__assert_fail@plt>
   260dc:	andeq	r0, r3, r8, ror r1
   260e0:	muleq	r3, ip, r0
   260e4:	andeq	r0, r3, r6, lsr #1
   260e8:	andeq	r0, r3, r7, lsl r1
   260ec:	muleq	r3, r8, r1
   260f0:	ldrdeq	r0, [r3], -r2
   260f4:	andeq	r0, r3, r8, ror #3

000260f8 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>:
   260f8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   260fc:	add	fp, sp, #24
   26100:	sub	sp, sp, #232	; 0xe8
   26104:	mov	r7, sp
   26108:	mov	r6, r0
   2610c:	mov	r5, r2
   26110:	mov	r4, r1
   26114:	mov	r0, r7
   26118:	bl	36ba4 <flatcc_builder_init@@Base>
   2611c:	mov	r0, r7
   26120:	mov	r1, r6
   26124:	mov	r2, r4
   26128:	bl	2501c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x78>
   2612c:	mov	r4, #0
   26130:	cmp	r0, #0
   26134:	bne	26158 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x60>
   26138:	mov	r0, sp
   2613c:	mov	r1, r5
   26140:	bl	3b618 <flatcc_builder_finalize_buffer@@Base>
   26144:	cmp	r0, #0
   26148:	beq	26158 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x60>
   2614c:	mov	r5, r0
   26150:	bl	25f1c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf78>
   26154:	mov	r4, r5
   26158:	mov	r0, sp
   2615c:	bl	36f14 <flatcc_builder_clear@@Base>
   26160:	mov	r0, r4
   26164:	sub	sp, fp, #24
   26168:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0002616c <__flatcc_fb_codegen_bfbs_to_file@@Base>:
   2616c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   26170:	add	fp, sp, #24
   26174:	sub	sp, sp, #248	; 0xf8
   26178:	mov	r6, r0
   2617c:	mov	r8, r1
   26180:	ldr	r0, [r0, #108]	; 0x6c
   26184:	ldr	r1, [r6, #216]	; 0xd8
   26188:	ldr	r4, [pc, #464]	; 26360 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1f4>
   2618c:	cmp	r1, #0
   26190:	add	r4, pc, r4
   26194:	movne	r4, r1
   26198:	cmp	r0, #0
   2619c:	beq	2623c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xd0>
   261a0:	ldr	r0, [pc, #444]	; 26364 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1f8>
   261a4:	ldr	r0, [pc, r0]
   261a8:	ldr	r4, [r0]
   261ac:	cmp	r4, #0
   261b0:	beq	262b0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x144>
   261b4:	add	r5, sp, #16
   261b8:	mov	r0, r5
   261bc:	bl	36ba4 <flatcc_builder_init@@Base>
   261c0:	mov	r0, r5
   261c4:	mov	r1, r6
   261c8:	mov	r2, r8
   261cc:	bl	2501c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x78>
   261d0:	mov	r5, #0
   261d4:	cmp	r0, #0
   261d8:	bne	261fc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x90>
   261dc:	add	r0, sp, #16
   261e0:	add	r1, sp, #12
   261e4:	bl	3b618 <flatcc_builder_finalize_buffer@@Base>
   261e8:	cmp	r0, #0
   261ec:	beq	261fc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x90>
   261f0:	mov	r6, r0
   261f4:	bl	25f1c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf78>
   261f8:	mov	r5, r6
   261fc:	add	r0, sp, #16
   26200:	bl	36f14 <flatcc_builder_clear@@Base>
   26204:	cmp	r5, #0
   26208:	beq	262b8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x14c>
   2620c:	ldr	r7, [sp, #12]
   26210:	mov	r0, r5
   26214:	mov	r1, #1
   26218:	mov	r3, r4
   2621c:	mov	r2, r7
   26220:	bl	14850 <fwrite@plt>
   26224:	mov	r6, #0
   26228:	cmp	r7, r0
   2622c:	bne	262f0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x184>
   26230:	mov	r0, r5
   26234:	bl	147fc <free@plt>
   26238:	b	262c8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x15c>
   2623c:	ldr	r7, [r8, #160]	; 0xa0
   26240:	mov	r0, r7
   26244:	bl	148b0 <strlen@plt>
   26248:	mov	r5, r0
   2624c:	mov	r0, r4
   26250:	bl	148b0 <strlen@plt>
   26254:	ldr	r2, [pc, #268]	; 26368 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1fc>
   26258:	mov	r1, r0
   2625c:	mov	r0, #1
   26260:	mov	r3, r5
   26264:	str	r0, [sp, #4]
   26268:	mov	r0, r4
   2626c:	add	r2, pc, r2
   26270:	str	r2, [sp]
   26274:	mov	r2, r7
   26278:	bl	297bc <__flatcc_fb_create_join_path_n@@Base>
   2627c:	cmp	r0, #0
   26280:	beq	26338 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1cc>
   26284:	ldr	r1, [pc, #224]	; 2636c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x200>
   26288:	mov	r7, r0
   2628c:	add	r1, pc, r1
   26290:	bl	147f0 <fopen@plt>
   26294:	mov	r4, r0
   26298:	cmp	r0, #0
   2629c:	beq	26318 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1ac>
   262a0:	mov	r0, r7
   262a4:	bl	147fc <free@plt>
   262a8:	cmp	r4, #0
   262ac:	bne	261b4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x48>
   262b0:	mvn	r6, #0
   262b4:	b	262e4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x178>
   262b8:	ldr	r0, [pc, #204]	; 2638c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x220>
   262bc:	add	r0, pc, r0
   262c0:	bl	1485c <puts@plt>
   262c4:	mvn	r6, #0
   262c8:	ldr	r0, [pc, #176]	; 26380 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x214>
   262cc:	ldr	r0, [pc, r0]
   262d0:	ldr	r0, [r0]
   262d4:	cmp	r0, r4
   262d8:	beq	262e4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x178>
   262dc:	mov	r0, r4
   262e0:	bl	14904 <fclose@plt>
   262e4:	mov	r0, r6
   262e8:	sub	sp, fp, #24
   262ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   262f0:	ldr	r0, [pc, #128]	; 26378 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x20c>
   262f4:	mov	r1, #38	; 0x26
   262f8:	mov	r2, #1
   262fc:	ldr	r0, [pc, r0]
   26300:	ldr	r3, [r0]
   26304:	ldr	r0, [pc, #112]	; 2637c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x210>
   26308:	add	r0, pc, r0
   2630c:	bl	14850 <fwrite@plt>
   26310:	mvn	r6, #0
   26314:	b	26230 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xc4>
   26318:	ldr	r0, [pc, #80]	; 26370 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x204>
   2631c:	mov	r2, r7
   26320:	ldr	r0, [pc, r0]
   26324:	ldr	r0, [r0]
   26328:	ldr	r1, [pc, #68]	; 26374 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x208>
   2632c:	add	r1, pc, r1
   26330:	bl	148bc <fprintf@plt>
   26334:	b	262a0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x134>
   26338:	ldr	r0, [pc, #68]	; 26384 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x218>
   2633c:	mov	r1, #34	; 0x22
   26340:	mov	r2, #1
   26344:	ldr	r0, [pc, r0]
   26348:	ldr	r3, [r0]
   2634c:	ldr	r0, [pc, #52]	; 26388 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x21c>
   26350:	add	r0, pc, r0
   26354:	bl	14850 <fwrite@plt>
   26358:	mov	r0, #1
   2635c:	bl	14898 <exit@plt>
   26360:	andeq	r9, r1, lr, lsl #10
   26364:	andeq	r4, r4, r4, lsl #30
   26368:	andeq	r8, r1, r4, lsl #30
   2636c:	andeq	r9, r1, r2, asr #32
   26370:	andeq	r4, r4, ip, ror sp
   26374:	andeq	r0, r3, r5, asr #32
   26378:	andeq	r4, r4, r0, lsr #27
   2637c:	muleq	r2, lr, r8
   26380:	ldrdeq	r4, [r4], -ip
   26384:	andeq	r4, r4, r8, asr sp
   26388:	andeq	r8, r1, r7, ror lr
   2638c:	andeq	r0, r3, r7, ror #1
   26390:	mov	r2, r0
   26394:	add	r0, r1, #4
   26398:	ldr	r1, [pc, #4]	; 263a4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x238>
   2639c:	add	r1, pc, r1
   263a0:	b	28068 <fb_symbol_table_visit@@Base>
   263a4:	andeq	r0, r0, ip, lsl r0
   263a8:	mov	r2, r0
   263ac:	add	r0, r1, #4
   263b0:	ldr	r1, [pc, #4]	; 263bc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x250>
   263b4:	add	r1, pc, r1
   263b8:	b	28068 <fb_symbol_table_visit@@Base>
   263bc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   263c0:	push	{r4, r5, fp, lr}
   263c4:	add	fp, sp, #8
   263c8:	mov	r4, r0
   263cc:	ldrh	r0, [r1, #8]
   263d0:	cmp	r0, #4
   263d4:	bhi	26488 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x31c>
   263d8:	ldr	r0, [r4, #40]	; 0x28
   263dc:	mov	r5, r1
   263e0:	ldr	r1, [r1, #16]
   263e4:	add	r0, r0, #172	; 0xac
   263e8:	bl	276f8 <ptr_set_find_item@@Base>
   263ec:	cmp	r0, #0
   263f0:	popeq	{r4, r5, fp, pc}
   263f4:	ldr	r1, [r4]
   263f8:	mov	r0, #1
   263fc:	cmp	r1, #0
   26400:	beq	2643c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2d0>
   26404:	ldr	r1, [r5, #12]
   26408:	ldr	r1, [r1]
   2640c:	cmp	r1, #0
   26410:	beq	2643c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2d0>
   26414:	mov	r0, #0
   26418:	ldr	r2, [r1]
   2641c:	ldr	r1, [r1, #4]
   26420:	ldr	r1, [r1, #4]
   26424:	cmp	r2, #0
   26428:	add	r0, r0, r1
   2642c:	mov	r1, r2
   26430:	add	r0, r0, #1
   26434:	bne	26418 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2ac>
   26438:	add	r0, r0, #1
   2643c:	ldr	r1, [r5, #4]
   26440:	ldr	r1, [r1, #4]
   26444:	add	r0, r0, r1
   26448:	ldr	r1, [r4, #12]
   2644c:	add	r0, r0, r1
   26450:	str	r0, [r4, #12]
   26454:	ldrh	r0, [r5, #8]
   26458:	sub	r1, r0, #3
   2645c:	cmp	r1, #2
   26460:	bcc	2647c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x310>
   26464:	cmp	r0, #1
   26468:	bhi	26488 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x31c>
   2646c:	ldr	r0, [r4, #4]
   26470:	add	r0, r0, #1
   26474:	str	r0, [r4, #4]
   26478:	pop	{r4, r5, fp, pc}
   2647c:	ldr	r0, [r4, #8]
   26480:	add	r0, r0, #1
   26484:	str	r0, [r4, #8]
   26488:	pop	{r4, r5, fp, pc}
   2648c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26490:	add	fp, sp, #28
   26494:	sub	sp, sp, #4
   26498:	mov	r9, r0
   2649c:	ldrh	r0, [r1, #8]
   264a0:	cmp	r0, #4
   264a4:	bhi	26588 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x41c>
   264a8:	ldr	r0, [r9, #40]	; 0x28
   264ac:	mov	sl, r1
   264b0:	ldr	r1, [r1, #16]
   264b4:	add	r0, r0, #172	; 0xac
   264b8:	bl	276f8 <ptr_set_find_item@@Base>
   264bc:	cmp	r0, #0
   264c0:	beq	26588 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x41c>
   264c4:	ldr	r0, [r9]
   264c8:	ldr	r8, [r9, #36]	; 0x24
   264cc:	cmp	r0, #0
   264d0:	mov	r6, r8
   264d4:	beq	2651c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3b0>
   264d8:	ldr	r0, [sl, #12]
   264dc:	mov	r6, r8
   264e0:	ldr	r4, [r0]
   264e4:	cmp	r4, #0
   264e8:	beq	2651c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3b0>
   264ec:	mov	r5, #46	; 0x2e
   264f0:	mov	r6, r8
   264f4:	ldr	r0, [r4, #4]
   264f8:	ldm	r0, {r1, r7}
   264fc:	mov	r0, r6
   26500:	mov	r2, r7
   26504:	bl	14808 <memcpy@plt>
   26508:	strb	r5, [r6, r7]!
   2650c:	ldr	r4, [r4]
   26510:	add	r6, r6, #1
   26514:	cmp	r4, #0
   26518:	bne	264f4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x388>
   2651c:	ldr	r0, [sl, #4]
   26520:	ldm	r0, {r1, r7}
   26524:	mov	r0, r6
   26528:	mov	r2, r7
   2652c:	bl	14808 <memcpy@plt>
   26530:	mov	r0, #0
   26534:	strb	r0, [r6, r7]!
   26538:	add	r0, r6, #1
   2653c:	str	r0, [r9, #36]	; 0x24
   26540:	ldrh	r0, [sl, #8]
   26544:	sub	r1, r0, #3
   26548:	cmp	r1, #2
   2654c:	bcc	26574 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x408>
   26550:	cmp	r0, #1
   26554:	bhi	26588 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x41c>
   26558:	ldr	r0, [r9, #28]
   2655c:	str	sl, [r0]
   26560:	str	r8, [r0, #4]
   26564:	add	r0, r0, #8
   26568:	str	r0, [r9, #28]
   2656c:	sub	sp, fp, #28
   26570:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26574:	ldr	r0, [r9, #32]
   26578:	str	sl, [r0]
   2657c:	str	r8, [r0, #4]
   26580:	add	r0, r0, #8
   26584:	str	r0, [r9, #32]
   26588:	sub	sp, fp, #28
   2658c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26590:	ldr	r1, [r1, #4]
   26594:	ldr	r0, [r0, #4]
   26598:	b	147e4 <strcmp@plt>
   2659c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   265a0:	add	fp, sp, #24
   265a4:	mov	r4, r0
   265a8:	ldrh	r0, [fp, #8]
   265ac:	mov	r8, #0
   265b0:	mvn	r9, #0
   265b4:	sub	r0, r0, #2
   265b8:	cmp	r0, #13
   265bc:	bhi	266c8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x55c>
   265c0:	add	r5, pc, #20
   265c4:	mov	r1, #13
   265c8:	mov	r3, #13
   265cc:	mov	r7, #0
   265d0:	ldr	r6, [r5, r0, lsl #2]
   265d4:	mov	r0, #0
   265d8:	add	pc, r5, r6
   265dc:			; <UNDEFINED> instruction: 0x000001b8
   265e0:			; <UNDEFINED> instruction: 0x000001bc
   265e4:			; <UNDEFINED> instruction: 0x000001bc
   265e8:			; <UNDEFINED> instruction: 0x000001bc
   265ec:			; <UNDEFINED> instruction: 0x000001bc
   265f0:	andeq	r0, r0, r8, lsr r0
   265f4:	andeq	r0, r0, ip, lsr r0
   265f8:	andeq	r0, r0, r4, lsr #3
   265fc:			; <UNDEFINED> instruction: 0x000001bc
   26600:			; <UNDEFINED> instruction: 0x000001bc
   26604:			; <UNDEFINED> instruction: 0x000001bc
   26608:			; <UNDEFINED> instruction: 0x000001bc
   2660c:	strheq	r0, [r0], -r8
   26610:	muleq	r0, r4, r0
   26614:	mov	r0, #14
   26618:	sub	r2, r2, #1
   2661c:	mov	r1, #0
   26620:	cmp	r2, #10
   26624:	bhi	2676c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x600>
   26628:	add	r1, pc, #4
   2662c:	ldr	r2, [r1, r2, lsl #2]
   26630:	add	pc, r1, r2
   26634:	andeq	r0, r0, ip, lsr #32
   26638:	strdeq	r0, [r0], -r4
   2663c:	andeq	r0, r0, r4, asr #1
   26640:	ldrdeq	r0, [r0], -r4
   26644:	muleq	r0, ip, r0
   26648:	andeq	r0, r0, r4, lsl #2
   2664c:	andeq	r0, r0, r4, lsl r1
   26650:	andeq	r0, r0, r4, ror #1
   26654:	andeq	r0, r0, r4, lsr #2
   26658:	andeq	r0, r0, ip, lsr #1
   2665c:	andeq	r0, r0, r4, lsr r1
   26660:	mov	r1, #10
   26664:	cmp	r0, #0
   26668:	bne	26774 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x608>
   2666c:	b	266ec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x580>
   26670:	ldrh	r0, [r2, #8]
   26674:	ldr	r9, [r2, #124]	; 0x7c
   26678:	mov	r1, #15
   2667c:	cmp	r0, #2
   26680:	bcc	26780 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x614>
   26684:	cmp	r0, #3
   26688:	bne	266c8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x55c>
   2668c:	ldr	r2, [r2, #40]	; 0x28
   26690:	b	26614 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4a8>
   26694:	ldrh	r1, [r2, #8]
   26698:	ldr	r0, [r2, #124]	; 0x7c
   2669c:	mov	r3, #15
   266a0:	cmp	r1, #2
   266a4:	bcc	26790 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x624>
   266a8:	cmp	r1, #4
   266ac:	beq	2678c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x620>
   266b0:	cmp	r1, #3
   266b4:	bne	266c8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x55c>
   266b8:	ldr	r2, [r2, #40]	; 0x28
   266bc:	mov	r9, r0
   266c0:	mov	r0, #0
   266c4:	b	26618 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4ac>
   266c8:	mov	r7, #0
   266cc:	b	26798 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x62c>
   266d0:	mov	r1, #2
   266d4:	cmp	r0, #0
   266d8:	bne	26774 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x608>
   266dc:	b	266ec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x580>
   266e0:	mov	r1, #12
   266e4:	cmp	r0, #0
   266e8:	bne	26774 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x608>
   266ec:	mov	r7, r1
   266f0:	mov	r8, #0
   266f4:	b	26798 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x62c>
   266f8:	mov	r1, #6
   266fc:	cmp	r0, #0
   26700:	bne	26774 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x608>
   26704:	b	266ec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x580>
   26708:	mov	r1, #4
   2670c:	cmp	r0, #0
   26710:	bne	26774 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x608>
   26714:	b	266ec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x580>
   26718:	mov	r1, #5
   2671c:	cmp	r0, #0
   26720:	bne	26774 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x608>
   26724:	b	266ec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x580>
   26728:	mov	r1, #8
   2672c:	cmp	r0, #0
   26730:	bne	26774 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x608>
   26734:	b	266ec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x580>
   26738:	mov	r1, #9
   2673c:	cmp	r0, #0
   26740:	bne	26774 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x608>
   26744:	b	266ec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x580>
   26748:	mov	r1, #7
   2674c:	cmp	r0, #0
   26750:	bne	26774 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x608>
   26754:	b	266ec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x580>
   26758:	mov	r1, #3
   2675c:	cmp	r0, #0
   26760:	bne	26774 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x608>
   26764:	b	266ec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x580>
   26768:	mov	r1, #11
   2676c:	cmp	r0, #0
   26770:	beq	266ec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x580>
   26774:	cmp	r0, #14
   26778:	mov	r3, r0
   2677c:	bne	26794 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x628>
   26780:	mov	r7, #14
   26784:	mov	r8, r1
   26788:	b	26798 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x62c>
   2678c:	mov	r3, #16
   26790:	mov	r9, r0
   26794:	mov	r7, r3
   26798:	mov	r0, r4
   2679c:	mov	r1, #3
   267a0:	bl	38f28 <flatcc_builder_start_table@@Base>
   267a4:	cmp	r0, #0
   267a8:	beq	267b4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x648>
   267ac:	mov	r0, #0
   267b0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   267b4:	cmn	r9, #1
   267b8:	beq	267dc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x670>
   267bc:	mov	r0, r4
   267c0:	mov	r1, #2
   267c4:	mov	r2, #4
   267c8:	mov	r3, #4
   267cc:	bl	3a3c4 <flatcc_builder_table_add@@Base>
   267d0:	cmp	r0, #0
   267d4:	beq	267ac <__flatcc_fb_codegen_bfbs_to_file@@Base+0x640>
   267d8:	str	r9, [r0]
   267dc:	cmp	r7, #0
   267e0:	beq	26804 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x698>
   267e4:	mov	r0, r4
   267e8:	mov	r1, #0
   267ec:	mov	r2, #1
   267f0:	mov	r3, #1
   267f4:	bl	3a3c4 <flatcc_builder_table_add@@Base>
   267f8:	cmp	r0, #0
   267fc:	beq	267ac <__flatcc_fb_codegen_bfbs_to_file@@Base+0x640>
   26800:	strb	r7, [r0]
   26804:	cmp	r8, #0
   26808:	beq	2682c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6c0>
   2680c:	mov	r0, r4
   26810:	mov	r1, #1
   26814:	mov	r2, #1
   26818:	mov	r3, #1
   2681c:	bl	3a3c4 <flatcc_builder_table_add@@Base>
   26820:	cmp	r0, #0
   26824:	beq	267ac <__flatcc_fb_codegen_bfbs_to_file@@Base+0x640>
   26828:	strb	r8, [r0]
   2682c:	ldr	r1, [pc, #64]	; 26874 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x708>
   26830:	mov	r0, r4
   26834:	mov	r2, #0
   26838:	add	r1, pc, r1
   2683c:	bl	398c4 <flatcc_builder_check_required@@Base>
   26840:	cmp	r0, #0
   26844:	beq	26854 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6e8>
   26848:	mov	r0, r4
   2684c:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   26850:	b	39950 <flatcc_builder_end_table@@Base>
   26854:	ldr	r0, [pc, #28]	; 26878 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x70c>
   26858:	ldr	r1, [pc, #28]	; 2687c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x710>
   2685c:	ldr	r3, [pc, #28]	; 26880 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x714>
   26860:	mov	r2, #23
   26864:	add	r0, pc, r0
   26868:	add	r1, pc, r1
   2686c:	add	r3, pc, r3
   26870:	bl	1497c <__assert_fail@plt>
   26874:	andeq	pc, r2, ip, lsl #23
   26878:	andeq	pc, r2, lr, ror #6
   2687c:	strdeq	pc, [r2], -r7
   26880:	andeq	pc, r2, r9, ror #8
   26884:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26888:	add	fp, sp, #28
   2688c:	sub	sp, sp, #20
   26890:	cmp	r2, r1, lsl #1
   26894:	bcs	268a0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x734>
   26898:	sub	sp, fp, #28
   2689c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   268a0:	mov	sl, r2
   268a4:	lsl	r7, r1, #1
   268a8:	str	r0, [sp, #4]
   268ac:	str	r2, [sp]
   268b0:	cmp	r7, sl
   268b4:	bcs	2697c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x810>
   268b8:	cmp	r0, #0
   268bc:	ldrne	r8, [r0, #-4]
   268c0:	cmpne	r8, r7
   268c4:	bls	26a9c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x930>
   268c8:	mov	r4, r0
   268cc:	ldr	r2, [r4, r7, lsl #2]!
   268d0:	ldr	r2, [r4, r2]!
   268d4:	mov	r3, r4
   268d8:	ldrh	r2, [r3, -r2]!	; <UNPREDICTABLE>
   268dc:	cmp	r2, #6
   268e0:	bcc	26abc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x950>
   268e4:	ldrh	r2, [r3, #4]
   268e8:	cmp	r2, #0
   268ec:	beq	26abc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x950>
   268f0:	orr	r5, r7, #1
   268f4:	cmp	r8, r5
   268f8:	bls	26a9c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x930>
   268fc:	mov	r9, r1
   26900:	mov	r1, r0
   26904:	ldr	r3, [r1, r5, lsl #2]!
   26908:	ldr	r6, [r1, r3]!
   2690c:	mov	r3, r1
   26910:	ldrh	r6, [r3, -r6]!	; <UNPREDICTABLE>
   26914:	cmp	r6, #6
   26918:	bcc	26abc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x950>
   2691c:	ldrh	r3, [r3, #4]
   26920:	cmp	r3, #0
   26924:	beq	26abc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x950>
   26928:	ldr	r2, [r4, r2]!
   2692c:	add	r0, r4, r2
   26930:	ldr	r2, [r1, r3]!
   26934:	add	r0, r0, #4
   26938:	ldr	r4, [r0, #-4]
   2693c:	ldr	r6, [r1, r2]!
   26940:	add	r1, r1, #4
   26944:	cmp	r4, r6
   26948:	mov	r2, r6
   2694c:	movcc	r2, r4
   26950:	bl	14964 <strncmp@plt>
   26954:	cmp	r0, #0
   26958:	mov	r0, r5
   2695c:	mov	r1, r9
   26960:	movne	r0, r7
   26964:	movmi	r0, r5
   26968:	movne	r7, r0
   2696c:	cmp	r4, r6
   26970:	movcc	r7, r0
   26974:	ldr	r0, [sp, #4]
   26978:	b	26988 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x81c>
   2697c:	cmp	r0, #0
   26980:	beq	26a9c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x930>
   26984:	ldr	r8, [r0, #-4]
   26988:	mov	r5, r7
   2698c:	cmp	r8, r1
   26990:	bls	26a9c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x930>
   26994:	mov	r9, r0
   26998:	ldr	r4, [r9, r1, lsl #2]!
   2699c:	mov	r7, r9
   269a0:	ldr	r2, [r7, r4]!
   269a4:	mov	r3, r7
   269a8:	ldrh	r2, [r3, -r2]!	; <UNPREDICTABLE>
   269ac:	cmp	r2, #6
   269b0:	bcc	26abc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x950>
   269b4:	ldrh	r6, [r3, #4]
   269b8:	cmp	r6, #0
   269bc:	beq	26abc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x950>
   269c0:	cmp	r8, r5
   269c4:	bls	26a9c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x930>
   269c8:	str	r4, [sp, #8]
   269cc:	mov	r4, r0
   269d0:	str	r5, [sp, #12]
   269d4:	str	r1, [sp, #16]
   269d8:	ldr	r8, [r4, r5, lsl #2]!
   269dc:	mov	r3, r4
   269e0:	ldr	r5, [r3, r8]!
   269e4:	mov	r2, r3
   269e8:	ldrh	r5, [r2, -r5]!	; <UNPREDICTABLE>
   269ec:	cmp	r5, #6
   269f0:	bcc	26abc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x950>
   269f4:	ldrh	r2, [r2, #4]
   269f8:	cmp	r2, #0
   269fc:	beq	26abc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x950>
   26a00:	ldr	r1, [r7, r6]!
   26a04:	add	r0, r7, r1
   26a08:	ldr	r1, [r3, r2]!
   26a0c:	add	r0, r0, #4
   26a10:	ldr	sl, [r0, #-4]
   26a14:	ldr	r5, [r3, r1]!
   26a18:	add	r1, r3, #4
   26a1c:	cmp	sl, r5
   26a20:	mov	r2, r5
   26a24:	movcc	r2, sl
   26a28:	bl	14964 <strncmp@plt>
   26a2c:	cmp	r0, #1
   26a30:	mov	r1, #0
   26a34:	mov	r2, #0
   26a38:	movwlt	r1, #1
   26a3c:	cmp	r0, #0
   26a40:	movwne	r0, #1
   26a44:	cmp	sl, r5
   26a48:	ldr	sl, [sp]
   26a4c:	movwcc	r2, #1
   26a50:	orr	r0, r2, r0
   26a54:	ldr	r2, [sp, #16]
   26a58:	cmp	r0, #1
   26a5c:	ldr	r0, [sp, #4]
   26a60:	bne	26898 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x72c>
   26a64:	cmp	r1, #0
   26a68:	beq	26898 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x72c>
   26a6c:	ldr	r3, [sp, #12]
   26a70:	sub	r2, r2, r3
   26a74:	cmp	sl, r3, lsl #1
   26a78:	lsl	r7, r3, #1
   26a7c:	sub	r1, r8, r2, lsl #2
   26a80:	str	r1, [r9]
   26a84:	ldr	r1, [sp, #8]
   26a88:	add	r1, r1, r2, lsl #2
   26a8c:	str	r1, [r4]
   26a90:	mov	r1, r3
   26a94:	bcs	268b0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x744>
   26a98:	b	26898 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x72c>
   26a9c:	ldr	r0, [pc, #56]	; 26adc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x970>
   26aa0:	ldr	r1, [pc, #56]	; 26ae0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x974>
   26aa4:	ldr	r3, [pc, #56]	; 26ae4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x978>
   26aa8:	mov	r2, #192	; 0xc0
   26aac:	add	r0, pc, r0
   26ab0:	add	r1, pc, r1
   26ab4:	add	r3, pc, r3
   26ab8:	bl	1497c <__assert_fail@plt>
   26abc:	ldr	r0, [pc, #36]	; 26ae8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x97c>
   26ac0:	ldr	r1, [pc, #36]	; 26aec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x980>
   26ac4:	ldr	r3, [pc, #36]	; 26af0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x984>
   26ac8:	mov	r2, #195	; 0xc3
   26acc:	add	r0, pc, r0
   26ad0:	add	r1, pc, r1
   26ad4:	add	r3, pc, r3
   26ad8:	bl	1497c <__assert_fail@plt>
   26adc:	andeq	pc, r2, sp, lsr #15
   26ae0:	andeq	pc, r2, r6, asr #13
   26ae4:	andeq	pc, r2, ip, ror #16
   26ae8:	andeq	pc, r2, ip, ror #14
   26aec:	andeq	pc, r2, r6, lsr #13
   26af0:	andeq	pc, r2, r7, lsl #16

00026af4 <str_set_clear@@Base>:
   26af4:	push	{r4, sl, fp, lr}
   26af8:	add	fp, sp, #8
   26afc:	mov	r4, r0
   26b00:	ldr	r0, [r0]
   26b04:	cmp	r0, #0
   26b08:	beq	26b10 <str_set_clear@@Base+0x1c>
   26b0c:	bl	147fc <free@plt>
   26b10:	vmov.i32	q8, #0	; 0x00000000
   26b14:	vst1.32	{d16-d17}, [r4]
   26b18:	pop	{r4, sl, fp, pc}

00026b1c <str_set_destroy@@Base>:
   26b1c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   26b20:	add	fp, sp, #24
   26b24:	mov	r4, r0
   26b28:	cmp	r1, #0
   26b2c:	beq	26b7c <str_set_destroy@@Base+0x60>
   26b30:	ldr	r0, [r4, #12]
   26b34:	cmp	r0, #0
   26b38:	beq	26b7c <str_set_destroy@@Base+0x60>
   26b3c:	ldr	r7, [r4]
   26b40:	mov	r8, r2
   26b44:	mov	r6, r1
   26b48:	mov	r5, #0
   26b4c:	b	26b5c <str_set_destroy@@Base+0x40>
   26b50:	add	r5, r5, #1
   26b54:	cmp	r5, r0
   26b58:	bcs	26b7c <str_set_destroy@@Base+0x60>
   26b5c:	ldr	r1, [r7, r5, lsl #2]
   26b60:	orr	r2, r1, #2
   26b64:	cmp	r2, #2
   26b68:	beq	26b50 <str_set_destroy@@Base+0x34>
   26b6c:	mov	r0, r8
   26b70:	blx	r6
   26b74:	ldr	r0, [r4, #12]
   26b78:	b	26b50 <str_set_destroy@@Base+0x34>
   26b7c:	ldr	r0, [r4]
   26b80:	cmp	r0, #0
   26b84:	beq	26b8c <str_set_destroy@@Base+0x70>
   26b88:	bl	147fc <free@plt>
   26b8c:	vmov.i32	q8, #0	; 0x00000000
   26b90:	vst1.32	{d16-d17}, [r4]
   26b94:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00026b98 <str_set_init@@Base>:
   26b98:	push	{r4, r5, fp, lr}
   26b9c:	add	fp, sp, #8
   26ba0:	mov	r4, r0
   26ba4:	mov	r2, #4
   26ba8:	mov	r0, #179	; 0xb3
   26bac:	mul	r3, r2, r0
   26bb0:	mov	r5, r2
   26bb4:	lsl	r2, r2, #1
   26bb8:	cmp	r1, r3, lsr #8
   26bbc:	bhi	26bac <str_set_init@@Base+0x14>
   26bc0:	mov	r0, r5
   26bc4:	mov	r1, #4
   26bc8:	bl	147cc <calloc@plt>
   26bcc:	cmp	r0, #0
   26bd0:	str	r0, [r4]
   26bd4:	mvneq	r0, #0
   26bd8:	movne	r0, #0
   26bdc:	strne	r0, [r4, #4]
   26be0:	strne	r0, [r4, #8]
   26be4:	strne	r5, [r4, #12]
   26be8:	pop	{r4, r5, fp, pc}

00026bec <str_set_resize@@Base>:
   26bec:	b	26bf0 <str_set_resize@@Base+0x4>
   26bf0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   26bf4:	add	fp, sp, #24
   26bf8:	sub	sp, sp, #24
   26bfc:	mov	r4, r0
   26c00:	ldr	r5, [r0]
   26c04:	ldr	r0, [r0, #8]
   26c08:	mov	r2, #4
   26c0c:	cmp	r0, r1
   26c10:	movhi	r1, r0
   26c14:	mov	r0, #179	; 0xb3
   26c18:	mul	r3, r2, r0
   26c1c:	mov	r6, r2
   26c20:	lsl	r2, r2, #1
   26c24:	cmp	r1, r3, lsr #8
   26c28:	bhi	26c18 <str_set_resize@@Base+0x2c>
   26c2c:	mov	r0, r6
   26c30:	mov	r1, #4
   26c34:	bl	147cc <calloc@plt>
   26c38:	cmp	r0, #0
   26c3c:	str	r0, [sp, #8]
   26c40:	beq	26cb0 <str_set_resize@@Base+0xc4>
   26c44:	str	r6, [sp, #20]
   26c48:	mov	r6, #0
   26c4c:	str	r6, [sp, #12]
   26c50:	str	r6, [sp, #16]
   26c54:	ldr	r0, [r4, #12]
   26c58:	cmp	r0, #0
   26c5c:	beq	26cc0 <str_set_resize@@Base+0xd4>
   26c60:	mov	r9, #3
   26c64:	add	r8, sp, #8
   26c68:	b	26c78 <str_set_resize@@Base+0x8c>
   26c6c:	add	r6, r6, #1
   26c70:	cmp	r6, r0
   26c74:	bcs	26cbc <str_set_resize@@Base+0xd0>
   26c78:	ldr	r7, [r5, r6, lsl #2]
   26c7c:	orr	r1, r7, #2
   26c80:	cmp	r1, #2
   26c84:	beq	26c6c <str_set_resize@@Base+0x80>
   26c88:	mov	r0, r7
   26c8c:	bl	148b0 <strlen@plt>
   26c90:	mov	r2, r0
   26c94:	mov	r0, r8
   26c98:	mov	r1, r7
   26c9c:	mov	r3, r7
   26ca0:	str	r9, [sp]
   26ca4:	bl	26cec <str_set_insert@@Base+0x4>
   26ca8:	ldr	r0, [r4, #12]
   26cac:	b	26c6c <str_set_resize@@Base+0x80>
   26cb0:	mvn	r0, #0
   26cb4:	sub	sp, fp, #24
   26cb8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   26cbc:	ldr	r5, [r4]
   26cc0:	cmp	r5, #0
   26cc4:	beq	26cd0 <str_set_resize@@Base+0xe4>
   26cc8:	mov	r0, r5
   26ccc:	bl	147fc <free@plt>
   26cd0:	add	r0, sp, #8
   26cd4:	vld1.64	{d16-d17}, [r0]
   26cd8:	mov	r0, #0
   26cdc:	vst1.32	{d16-d17}, [r4]
   26ce0:	sub	sp, fp, #24
   26ce4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00026ce8 <str_set_insert@@Base>:
   26ce8:	b	26cec <str_set_insert@@Base+0x4>
   26cec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26cf0:	add	fp, sp, #28
   26cf4:	sub	sp, sp, #36	; 0x24
   26cf8:	cmp	r3, #2
   26cfc:	str	r2, [sp, #20]
   26d00:	beq	26e60 <str_set_insert@@Base+0x178>
   26d04:	mov	sl, r3
   26d08:	cmp	r3, #1
   26d0c:	beq	26e80 <str_set_insert@@Base+0x198>
   26d10:	cmp	sl, #0
   26d14:	beq	26ea0 <str_set_insert@@Base+0x1b8>
   26d18:	mov	r5, r0
   26d1c:	mov	r7, r1
   26d20:	ldr	r0, [r0, #8]
   26d24:	mov	r1, #179	; 0xb3
   26d28:	ldr	r4, [r5, #12]
   26d2c:	mul	r1, r4, r1
   26d30:	cmp	r0, r1, lsr #8
   26d34:	bcc	26d50 <str_set_insert@@Base+0x68>
   26d38:	lsl	r1, r0, #1
   26d3c:	mov	r0, r5
   26d40:	bl	26bf0 <str_set_resize@@Base+0x4>
   26d44:	cmp	r0, #0
   26d48:	bne	26ec0 <str_set_insert@@Base+0x1d8>
   26d4c:	ldr	r4, [r5, #12]
   26d50:	ldr	r2, [sp, #20]
   26d54:	movw	r1, #15186	; 0x3b52
   26d58:	ldr	r9, [r5]
   26d5c:	add	r0, sp, #24
   26d60:	mov	r3, #0
   26d64:	mov	r8, #0
   26d68:	movt	r1, #12137	; 0x2f69
   26d6c:	str	r0, [sp, #4]
   26d70:	mov	r0, r7
   26d74:	str	r1, [sp]
   26d78:	bl	3bdcc <cmetrohash64_1@@Base>
   26d7c:	ldr	r2, [fp, #8]
   26d80:	ldr	r1, [sp, #24]
   26d84:	sub	r6, r4, #1
   26d88:	orr	r2, r2, #1
   26d8c:	and	r0, r6, r1
   26d90:	cmp	r2, #3
   26d94:	bne	26dc4 <str_set_insert@@Base+0xdc>
   26d98:	ldr	r2, [r5, #8]
   26d9c:	add	r2, r2, #1
   26da0:	str	r2, [r5, #8]
   26da4:	mov	r5, r9
   26da8:	add	r1, r1, #1
   26dac:	ldr	r0, [r5, r0, lsl #2]!
   26db0:	orr	r0, r0, #2
   26db4:	cmp	r0, #2
   26db8:	beq	26e28 <str_set_insert@@Base+0x140>
   26dbc:	and	r0, r1, r6
   26dc0:	b	26da4 <str_set_insert@@Base+0xbc>
   26dc4:	str	sl, [sp, #16]
   26dc8:	add	sl, r1, #1
   26dcc:	str	r5, [sp, #12]
   26dd0:	b	26de4 <str_set_insert@@Base+0xfc>
   26dd4:	cmp	r8, #0
   26dd8:	moveq	r8, r5
   26ddc:	and	r0, sl, r6
   26de0:	add	sl, sl, #1
   26de4:	mov	r5, r9
   26de8:	ldr	r4, [r5, r0, lsl #2]!
   26dec:	cmp	r4, #2
   26df0:	beq	26dd4 <str_set_insert@@Base+0xec>
   26df4:	cmp	r4, #0
   26df8:	beq	26e30 <str_set_insert@@Base+0x148>
   26dfc:	ldr	r2, [sp, #20]
   26e00:	mov	r0, r7
   26e04:	mov	r1, r4
   26e08:	bl	14964 <strncmp@plt>
   26e0c:	cmp	r0, #0
   26e10:	bne	26ddc <str_set_insert@@Base+0xf4>
   26e14:	ldr	r0, [fp, #8]
   26e18:	ldr	sl, [sp, #16]
   26e1c:	cmp	r0, #0
   26e20:	streq	sl, [r5]
   26e24:	b	26e54 <str_set_insert@@Base+0x16c>
   26e28:	mov	r4, #0
   26e2c:	b	26e50 <str_set_insert@@Base+0x168>
   26e30:	ldr	r1, [sp, #12]
   26e34:	ldr	sl, [sp, #16]
   26e38:	cmp	r8, #0
   26e3c:	mov	r4, #0
   26e40:	movne	r5, r8
   26e44:	ldr	r0, [r1, #8]
   26e48:	add	r0, r0, #1
   26e4c:	str	r0, [r1, #8]
   26e50:	str	sl, [r5]
   26e54:	mov	r0, r4
   26e58:	sub	sp, fp, #28
   26e5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26e60:	ldr	r0, [pc, #140]	; 26ef4 <str_set_insert@@Base+0x20c>
   26e64:	ldr	r1, [pc, #140]	; 26ef8 <str_set_insert@@Base+0x210>
   26e68:	ldr	r3, [pc, #140]	; 26efc <str_set_insert@@Base+0x214>
   26e6c:	mov	r2, #115	; 0x73
   26e70:	add	r0, pc, r0
   26e74:	add	r1, pc, r1
   26e78:	add	r3, pc, r3
   26e7c:	bl	1497c <__assert_fail@plt>
   26e80:	ldr	r0, [pc, #120]	; 26f00 <str_set_insert@@Base+0x218>
   26e84:	ldr	r1, [pc, #120]	; 26f04 <str_set_insert@@Base+0x21c>
   26e88:	ldr	r3, [pc, #120]	; 26f08 <str_set_insert@@Base+0x220>
   26e8c:	mov	r2, #116	; 0x74
   26e90:	add	r0, pc, r0
   26e94:	add	r1, pc, r1
   26e98:	add	r3, pc, r3
   26e9c:	bl	1497c <__assert_fail@plt>
   26ea0:	ldr	r0, [pc, #64]	; 26ee8 <str_set_insert@@Base+0x200>
   26ea4:	ldr	r1, [pc, #64]	; 26eec <str_set_insert@@Base+0x204>
   26ea8:	ldr	r3, [pc, #64]	; 26ef0 <str_set_insert@@Base+0x208>
   26eac:	mov	r2, #114	; 0x72
   26eb0:	add	r0, pc, r0
   26eb4:	add	r1, pc, r1
   26eb8:	add	r3, pc, r3
   26ebc:	bl	1497c <__assert_fail@plt>
   26ec0:	ldr	r0, [pc, #68]	; 26f0c <str_set_insert@@Base+0x224>
   26ec4:	ldr	r0, [pc, r0]
   26ec8:	ldr	r0, [r0]
   26ecc:	ldr	r1, [pc, #60]	; 26f10 <str_set_insert@@Base+0x228>
   26ed0:	ldr	r2, [pc, #60]	; 26f14 <str_set_insert@@Base+0x22c>
   26ed4:	add	r1, pc, r1
   26ed8:	add	r2, pc, r2
   26edc:	bl	148bc <fprintf@plt>
   26ee0:	mov	r0, #1
   26ee4:	bl	14898 <exit@plt>
   26ee8:	andeq	pc, r2, r0, asr #10
   26eec:	andeq	pc, r2, r3, asr r5	; <UNPREDICTABLE>
   26ef0:			; <UNDEFINED> instruction: 0x0002f5b6
   26ef4:	andeq	pc, r2, r8, asr #12
   26ef8:	muleq	r2, r3, r5
   26efc:	strdeq	pc, [r2], -r6
   26f00:	andeq	pc, r2, pc, lsr r6	; <UNPREDICTABLE>
   26f04:	andeq	pc, r2, r3, ror r5	; <UNPREDICTABLE>
   26f08:	ldrdeq	pc, [r2], -r6
   26f0c:	ldrdeq	r4, [r4], -r8
   26f10:	andeq	pc, r2, r0, lsl r6	; <UNPREDICTABLE>
   26f14:	andeq	pc, r2, r3, lsr #12

00026f18 <str_set_insert_item@@Base>:
   26f18:	push	{r4, r5, r6, sl, fp, lr}
   26f1c:	add	fp, sp, #16
   26f20:	sub	sp, sp, #8
   26f24:	mov	r6, r0
   26f28:	mov	r0, r1
   26f2c:	mov	r4, r2
   26f30:	mov	r5, r1
   26f34:	bl	148b0 <strlen@plt>
   26f38:	mov	r2, r0
   26f3c:	mov	r0, r6
   26f40:	mov	r1, r5
   26f44:	mov	r3, r5
   26f48:	str	r4, [sp]
   26f4c:	bl	26cec <str_set_insert@@Base+0x4>
   26f50:	sub	sp, fp, #16
   26f54:	pop	{r4, r5, r6, sl, fp, pc}

00026f58 <str_set_find@@Base>:
   26f58:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   26f5c:	add	fp, sp, #24
   26f60:	sub	sp, sp, #16
   26f64:	ldr	r7, [r0]
   26f68:	cmp	r7, #0
   26f6c:	beq	26fe0 <str_set_find@@Base+0x88>
   26f70:	mov	r9, r1
   26f74:	movw	r1, #15186	; 0x3b52
   26f78:	ldr	r5, [r0, #12]
   26f7c:	add	r0, sp, #8
   26f80:	mov	r3, #0
   26f84:	mov	r8, r2
   26f88:	movt	r1, #12137	; 0x2f69
   26f8c:	str	r0, [sp, #4]
   26f90:	mov	r0, r9
   26f94:	str	r1, [sp]
   26f98:	bl	3bdcc <cmetrohash64_1@@Base>
   26f9c:	ldr	r4, [sp, #8]
   26fa0:	sub	r5, r5, #1
   26fa4:	b	26fac <str_set_find@@Base+0x54>
   26fa8:	add	r4, r4, #1
   26fac:	and	r0, r4, r5
   26fb0:	ldr	r6, [r7, r0, lsl #2]
   26fb4:	cmp	r6, #2
   26fb8:	beq	26fa8 <str_set_find@@Base+0x50>
   26fbc:	cmp	r6, #0
   26fc0:	beq	26fe0 <str_set_find@@Base+0x88>
   26fc4:	mov	r0, r9
   26fc8:	mov	r1, r6
   26fcc:	mov	r2, r8
   26fd0:	bl	14964 <strncmp@plt>
   26fd4:	cmp	r0, #0
   26fd8:	bne	26fa8 <str_set_find@@Base+0x50>
   26fdc:	b	26fe4 <str_set_find@@Base+0x8c>
   26fe0:	mov	r6, #0
   26fe4:	mov	r0, r6
   26fe8:	sub	sp, fp, #24
   26fec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00026ff0 <str_set_find_item@@Base>:
   26ff0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   26ff4:	add	fp, sp, #24
   26ff8:	sub	sp, sp, #16
   26ffc:	mov	r6, r0
   27000:	mov	r0, r1
   27004:	mov	r9, r1
   27008:	bl	148b0 <strlen@plt>
   2700c:	ldr	r7, [r6]
   27010:	cmp	r7, #0
   27014:	beq	27088 <str_set_find_item@@Base+0x98>
   27018:	movw	r1, #15186	; 0x3b52
   2701c:	ldr	r4, [r6, #12]
   27020:	mov	r8, r0
   27024:	add	r0, sp, #8
   27028:	mov	r3, #0
   2702c:	movt	r1, #12137	; 0x2f69
   27030:	str	r0, [sp, #4]
   27034:	mov	r0, r9
   27038:	mov	r2, r8
   2703c:	str	r1, [sp]
   27040:	bl	3bdcc <cmetrohash64_1@@Base>
   27044:	ldr	r5, [sp, #8]
   27048:	sub	r4, r4, #1
   2704c:	b	27054 <str_set_find_item@@Base+0x64>
   27050:	add	r5, r5, #1
   27054:	and	r0, r5, r4
   27058:	ldr	r6, [r7, r0, lsl #2]
   2705c:	cmp	r6, #2
   27060:	beq	27050 <str_set_find_item@@Base+0x60>
   27064:	cmp	r6, #0
   27068:	beq	27088 <str_set_find_item@@Base+0x98>
   2706c:	mov	r0, r9
   27070:	mov	r1, r6
   27074:	mov	r2, r8
   27078:	bl	14964 <strncmp@plt>
   2707c:	cmp	r0, #0
   27080:	bne	27050 <str_set_find_item@@Base+0x60>
   27084:	b	2708c <str_set_find_item@@Base+0x9c>
   27088:	mov	r6, #0
   2708c:	mov	r0, r6
   27090:	sub	sp, fp, #24
   27094:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00027098 <str_set_remove@@Base>:
   27098:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2709c:	add	fp, sp, #28
   270a0:	sub	sp, sp, #28
   270a4:	ldr	r4, [r0]
   270a8:	cmp	r4, #0
   270ac:	beq	2713c <str_set_remove@@Base+0xa4>
   270b0:	mov	sl, r1
   270b4:	movw	r1, #15186	; 0x3b52
   270b8:	ldr	r6, [r0, #12]
   270bc:	str	r0, [sp, #12]
   270c0:	add	r0, sp, #16
   270c4:	mov	r3, #0
   270c8:	mov	r9, r2
   270cc:	movt	r1, #12137	; 0x2f69
   270d0:	str	r0, [sp, #4]
   270d4:	mov	r0, sl
   270d8:	str	r1, [sp]
   270dc:	bl	3bdcc <cmetrohash64_1@@Base>
   270e0:	ldr	r5, [sp, #16]
   270e4:	sub	r6, r6, #1
   270e8:	b	270f0 <str_set_remove@@Base+0x58>
   270ec:	add	r5, r5, #1
   270f0:	and	r8, r5, r6
   270f4:	ldr	r7, [r4, r8, lsl #2]
   270f8:	cmp	r7, #2
   270fc:	beq	270ec <str_set_remove@@Base+0x54>
   27100:	cmp	r7, #0
   27104:	beq	2713c <str_set_remove@@Base+0xa4>
   27108:	mov	r0, sl
   2710c:	mov	r1, r7
   27110:	mov	r2, r9
   27114:	bl	14964 <strncmp@plt>
   27118:	cmp	r0, #0
   2711c:	bne	270ec <str_set_remove@@Base+0x54>
   27120:	ldr	r1, [sp, #12]
   27124:	mov	r0, #2
   27128:	str	r0, [r4, r8, lsl #2]
   2712c:	ldr	r0, [r1, #8]
   27130:	sub	r0, r0, #1
   27134:	str	r0, [r1, #8]
   27138:	b	27140 <str_set_remove@@Base+0xa8>
   2713c:	mov	r7, #0
   27140:	mov	r0, r7
   27144:	sub	sp, fp, #28
   27148:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002714c <str_set_remove_item@@Base>:
   2714c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27150:	add	fp, sp, #28
   27154:	sub	sp, sp, #28
   27158:	mov	r5, r0
   2715c:	mov	r0, r1
   27160:	mov	sl, r1
   27164:	bl	148b0 <strlen@plt>
   27168:	ldr	r4, [r5]
   2716c:	cmp	r4, #0
   27170:	beq	27200 <str_set_remove_item@@Base+0xb4>
   27174:	movw	r1, #15186	; 0x3b52
   27178:	str	r5, [sp, #12]
   2717c:	ldr	r5, [r5, #12]
   27180:	mov	r9, r0
   27184:	add	r0, sp, #16
   27188:	mov	r3, #0
   2718c:	movt	r1, #12137	; 0x2f69
   27190:	str	r0, [sp, #4]
   27194:	mov	r0, sl
   27198:	mov	r2, r9
   2719c:	str	r1, [sp]
   271a0:	bl	3bdcc <cmetrohash64_1@@Base>
   271a4:	ldr	r6, [sp, #16]
   271a8:	sub	r5, r5, #1
   271ac:	b	271b4 <str_set_remove_item@@Base+0x68>
   271b0:	add	r6, r6, #1
   271b4:	and	r8, r6, r5
   271b8:	ldr	r7, [r4, r8, lsl #2]
   271bc:	cmp	r7, #2
   271c0:	beq	271b0 <str_set_remove_item@@Base+0x64>
   271c4:	cmp	r7, #0
   271c8:	beq	27200 <str_set_remove_item@@Base+0xb4>
   271cc:	mov	r0, sl
   271d0:	mov	r1, r7
   271d4:	mov	r2, r9
   271d8:	bl	14964 <strncmp@plt>
   271dc:	cmp	r0, #0
   271e0:	bne	271b0 <str_set_remove_item@@Base+0x64>
   271e4:	ldr	r1, [sp, #12]
   271e8:	mov	r0, #2
   271ec:	str	r0, [r4, r8, lsl #2]
   271f0:	ldr	r0, [r1, #8]
   271f4:	sub	r0, r0, #1
   271f8:	str	r0, [r1, #8]
   271fc:	b	27204 <str_set_remove_item@@Base+0xb8>
   27200:	mov	r7, #0
   27204:	mov	r0, r7
   27208:	sub	sp, fp, #28
   2720c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00027210 <str_set_visit@@Base>:
   27210:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   27214:	add	fp, sp, #24
   27218:	mov	r6, r0
   2721c:	ldr	r0, [r0, #12]
   27220:	cmp	r0, #0
   27224:	beq	27268 <str_set_visit@@Base+0x58>
   27228:	ldr	r7, [r6]
   2722c:	mov	r8, r2
   27230:	mov	r5, r1
   27234:	mov	r4, #0
   27238:	b	27248 <str_set_visit@@Base+0x38>
   2723c:	add	r4, r4, #1
   27240:	cmp	r4, r0
   27244:	bcs	27268 <str_set_visit@@Base+0x58>
   27248:	ldr	r1, [r7, r4, lsl #2]
   2724c:	orr	r2, r1, #2
   27250:	cmp	r2, #2
   27254:	beq	2723c <str_set_visit@@Base+0x2c>
   27258:	mov	r0, r8
   2725c:	blx	r5
   27260:	ldr	r0, [r6, #12]
   27264:	b	2723c <str_set_visit@@Base+0x2c>
   27268:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002726c <ptr_set_clear@@Base>:
   2726c:	push	{r4, sl, fp, lr}
   27270:	add	fp, sp, #8
   27274:	mov	r4, r0
   27278:	ldr	r0, [r0]
   2727c:	cmp	r0, #0
   27280:	beq	27288 <ptr_set_clear@@Base+0x1c>
   27284:	bl	147fc <free@plt>
   27288:	vmov.i32	q8, #0	; 0x00000000
   2728c:	vst1.32	{d16-d17}, [r4]
   27290:	pop	{r4, sl, fp, pc}

00027294 <ptr_set_destroy@@Base>:
   27294:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   27298:	add	fp, sp, #24
   2729c:	mov	r4, r0
   272a0:	cmp	r1, #0
   272a4:	beq	272f4 <ptr_set_destroy@@Base+0x60>
   272a8:	ldr	r0, [r4, #12]
   272ac:	cmp	r0, #0
   272b0:	beq	272f4 <ptr_set_destroy@@Base+0x60>
   272b4:	ldr	r7, [r4]
   272b8:	mov	r8, r2
   272bc:	mov	r6, r1
   272c0:	mov	r5, #0
   272c4:	b	272d4 <ptr_set_destroy@@Base+0x40>
   272c8:	add	r5, r5, #1
   272cc:	cmp	r5, r0
   272d0:	bcs	272f4 <ptr_set_destroy@@Base+0x60>
   272d4:	ldr	r1, [r7, r5, lsl #2]
   272d8:	orr	r2, r1, #2
   272dc:	cmp	r2, #2
   272e0:	beq	272c8 <ptr_set_destroy@@Base+0x34>
   272e4:	mov	r0, r8
   272e8:	blx	r6
   272ec:	ldr	r0, [r4, #12]
   272f0:	b	272c8 <ptr_set_destroy@@Base+0x34>
   272f4:	ldr	r0, [r4]
   272f8:	cmp	r0, #0
   272fc:	beq	27304 <ptr_set_destroy@@Base+0x70>
   27300:	bl	147fc <free@plt>
   27304:	vmov.i32	q8, #0	; 0x00000000
   27308:	vst1.32	{d16-d17}, [r4]
   2730c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00027310 <ptr_set_init@@Base>:
   27310:	push	{r4, r5, fp, lr}
   27314:	add	fp, sp, #8
   27318:	mov	r4, r0
   2731c:	mov	r2, #4
   27320:	mov	r0, #179	; 0xb3
   27324:	mul	r3, r2, r0
   27328:	mov	r5, r2
   2732c:	lsl	r2, r2, #1
   27330:	cmp	r1, r3, lsr #8
   27334:	bhi	27324 <ptr_set_init@@Base+0x14>
   27338:	mov	r0, r5
   2733c:	mov	r1, #4
   27340:	bl	147cc <calloc@plt>
   27344:	cmp	r0, #0
   27348:	str	r0, [r4]
   2734c:	mvneq	r0, #0
   27350:	movne	r0, #0
   27354:	strne	r0, [r4, #4]
   27358:	strne	r0, [r4, #8]
   2735c:	strne	r5, [r4, #12]
   27360:	pop	{r4, r5, fp, pc}

00027364 <ptr_set_resize@@Base>:
   27364:	b	27368 <ptr_set_resize@@Base+0x4>
   27368:	push	{r4, r5, r6, r7, fp, lr}
   2736c:	add	fp, sp, #16
   27370:	sub	sp, sp, #16
   27374:	mov	r4, r0
   27378:	ldr	r5, [r0]
   2737c:	ldr	r0, [r0, #8]
   27380:	mov	r2, #4
   27384:	cmp	r0, r1
   27388:	movhi	r1, r0
   2738c:	mov	r0, #179	; 0xb3
   27390:	mul	r3, r2, r0
   27394:	mov	r6, r2
   27398:	lsl	r2, r2, #1
   2739c:	cmp	r1, r3, lsr #8
   273a0:	bhi	27390 <ptr_set_resize@@Base+0x2c>
   273a4:	mov	r0, r6
   273a8:	mov	r1, #4
   273ac:	bl	147cc <calloc@plt>
   273b0:	cmp	r0, #0
   273b4:	str	r0, [sp]
   273b8:	beq	27414 <ptr_set_resize@@Base+0xb0>
   273bc:	mov	r7, #0
   273c0:	str	r6, [sp, #12]
   273c4:	str	r7, [sp, #4]
   273c8:	str	r7, [sp, #8]
   273cc:	ldr	r0, [r4, #12]
   273d0:	cmp	r0, #0
   273d4:	beq	27424 <ptr_set_resize@@Base+0xc0>
   273d8:	mov	r6, sp
   273dc:	b	273ec <ptr_set_resize@@Base+0x88>
   273e0:	add	r7, r7, #1
   273e4:	cmp	r7, r0
   273e8:	bcs	27420 <ptr_set_resize@@Base+0xbc>
   273ec:	ldr	r1, [r5, r7, lsl #2]
   273f0:	orr	r2, r1, #2
   273f4:	cmp	r2, #2
   273f8:	beq	273e0 <ptr_set_resize@@Base+0x7c>
   273fc:	mov	r0, r6
   27400:	mov	r2, r1
   27404:	mov	r3, #3
   27408:	bl	27458 <ptr_set_insert@@Base+0xc>
   2740c:	ldr	r0, [r4, #12]
   27410:	b	273e0 <ptr_set_resize@@Base+0x7c>
   27414:	mvn	r0, #0
   27418:	sub	sp, fp, #16
   2741c:	pop	{r4, r5, r6, r7, fp, pc}
   27420:	ldr	r5, [r4]
   27424:	cmp	r5, #0
   27428:	beq	27434 <ptr_set_resize@@Base+0xd0>
   2742c:	mov	r0, r5
   27430:	bl	147fc <free@plt>
   27434:	mov	r0, sp
   27438:	vld1.64	{d16-d17}, [r0]
   2743c:	mov	r0, #0
   27440:	vst1.32	{d16-d17}, [r4]
   27444:	sub	sp, fp, #16
   27448:	pop	{r4, r5, r6, r7, fp, pc}

0002744c <ptr_set_insert@@Base>:
   2744c:	mov	r2, r3
   27450:	ldr	r3, [sp]
   27454:	b	27458 <ptr_set_insert@@Base+0xc>
   27458:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2745c:	add	fp, sp, #28
   27460:	sub	sp, sp, #28
   27464:	cmp	r2, #2
   27468:	beq	275a0 <ptr_set_insert@@Base+0x154>
   2746c:	mov	r9, r2
   27470:	cmp	r2, #1
   27474:	beq	275c0 <ptr_set_insert@@Base+0x174>
   27478:	cmp	r9, #0
   2747c:	beq	275e0 <ptr_set_insert@@Base+0x194>
   27480:	mov	sl, r0
   27484:	mov	r5, r1
   27488:	ldr	r0, [r0, #8]
   2748c:	mov	r1, #179	; 0xb3
   27490:	mov	r8, r3
   27494:	ldr	r6, [sl, #12]
   27498:	mul	r1, r6, r1
   2749c:	cmp	r0, r1, lsr #8
   274a0:	bcc	274bc <ptr_set_insert@@Base+0x70>
   274a4:	lsl	r1, r0, #1
   274a8:	mov	r0, sl
   274ac:	bl	27368 <ptr_set_resize@@Base+0x4>
   274b0:	cmp	r0, #0
   274b4:	bne	27600 <ptr_set_insert@@Base+0x1b4>
   274b8:	ldr	r6, [sl, #12]
   274bc:	movw	r1, #15186	; 0x3b52
   274c0:	ldr	r7, [sl]
   274c4:	add	r0, sp, #16
   274c8:	mov	r2, #4
   274cc:	mov	r3, #0
   274d0:	str	r5, [sp, #12]
   274d4:	mov	r4, #0
   274d8:	movt	r1, #12137	; 0x2f69
   274dc:	str	r0, [sp, #4]
   274e0:	add	r0, sp, #12
   274e4:	str	r1, [sp]
   274e8:	bl	3bdcc <cmetrohash64_1@@Base>
   274ec:	ldr	r1, [sp, #16]
   274f0:	sub	r0, r6, #1
   274f4:	orr	r3, r8, #1
   274f8:	cmp	r3, #3
   274fc:	and	r2, r0, r1
   27500:	bne	27534 <ptr_set_insert@@Base+0xe8>
   27504:	ldr	r3, [sl, #8]
   27508:	add	r3, r3, #1
   2750c:	str	r3, [sl, #8]
   27510:	add	r3, r1, #1
   27514:	mov	r1, r7
   27518:	ldr	r2, [r1, r2, lsl #2]!
   2751c:	orr	r2, r2, #2
   27520:	cmp	r2, #2
   27524:	beq	2758c <ptr_set_insert@@Base+0x140>
   27528:	and	r2, r3, r0
   2752c:	add	r3, r3, #1
   27530:	b	27514 <ptr_set_insert@@Base+0xc8>
   27534:	add	r3, r1, #1
   27538:	b	2754c <ptr_set_insert@@Base+0x100>
   2753c:	cmp	r4, #0
   27540:	moveq	r4, r1
   27544:	and	r2, r3, r0
   27548:	add	r3, r3, #1
   2754c:	mov	r1, r7
   27550:	ldr	r2, [r1, r2, lsl #2]!
   27554:	cmp	r2, #2
   27558:	beq	2753c <ptr_set_insert@@Base+0xf0>
   2755c:	cmp	r2, #0
   27560:	beq	27578 <ptr_set_insert@@Base+0x12c>
   27564:	cmp	r2, r5
   27568:	bne	27544 <ptr_set_insert@@Base+0xf8>
   2756c:	cmp	r8, #0
   27570:	streq	r9, [r1]
   27574:	b	27594 <ptr_set_insert@@Base+0x148>
   27578:	ldr	r0, [sl, #8]
   2757c:	cmp	r4, #0
   27580:	movne	r1, r4
   27584:	add	r0, r0, #1
   27588:	str	r0, [sl, #8]
   2758c:	mov	r5, #0
   27590:	str	r9, [r1]
   27594:	mov	r0, r5
   27598:	sub	sp, fp, #28
   2759c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   275a0:	ldr	r0, [pc, #140]	; 27634 <ptr_set_insert@@Base+0x1e8>
   275a4:	ldr	r1, [pc, #140]	; 27638 <ptr_set_insert@@Base+0x1ec>
   275a8:	ldr	r3, [pc, #140]	; 2763c <ptr_set_insert@@Base+0x1f0>
   275ac:	mov	r2, #115	; 0x73
   275b0:	add	r0, pc, r0
   275b4:	add	r1, pc, r1
   275b8:	add	r3, pc, r3
   275bc:	bl	1497c <__assert_fail@plt>
   275c0:	ldr	r0, [pc, #120]	; 27640 <ptr_set_insert@@Base+0x1f4>
   275c4:	ldr	r1, [pc, #120]	; 27644 <ptr_set_insert@@Base+0x1f8>
   275c8:	ldr	r3, [pc, #120]	; 27648 <ptr_set_insert@@Base+0x1fc>
   275cc:	mov	r2, #116	; 0x74
   275d0:	add	r0, pc, r0
   275d4:	add	r1, pc, r1
   275d8:	add	r3, pc, r3
   275dc:	bl	1497c <__assert_fail@plt>
   275e0:	ldr	r0, [pc, #64]	; 27628 <ptr_set_insert@@Base+0x1dc>
   275e4:	ldr	r1, [pc, #64]	; 2762c <ptr_set_insert@@Base+0x1e0>
   275e8:	ldr	r3, [pc, #64]	; 27630 <ptr_set_insert@@Base+0x1e4>
   275ec:	mov	r2, #114	; 0x72
   275f0:	add	r0, pc, r0
   275f4:	add	r1, pc, r1
   275f8:	add	r3, pc, r3
   275fc:	bl	1497c <__assert_fail@plt>
   27600:	ldr	r0, [pc, #68]	; 2764c <ptr_set_insert@@Base+0x200>
   27604:	ldr	r0, [pc, r0]
   27608:	ldr	r0, [r0]
   2760c:	ldr	r1, [pc, #60]	; 27650 <ptr_set_insert@@Base+0x204>
   27610:	ldr	r2, [pc, #60]	; 27654 <ptr_set_insert@@Base+0x208>
   27614:	add	r1, pc, r1
   27618:	add	r2, pc, r2
   2761c:	bl	148bc <fprintf@plt>
   27620:	mov	r0, #1
   27624:	bl	14898 <exit@plt>
   27628:	andeq	lr, r2, r0, lsl #28
   2762c:	andeq	lr, r2, r3, lsl lr
   27630:	andeq	lr, r2, r6, ror lr
   27634:	andeq	lr, r2, r8, lsl #30
   27638:	andeq	lr, r2, r3, asr lr
   2763c:			; <UNDEFINED> instruction: 0x0002eeb6
   27640:	strdeq	lr, [r2], -pc	; <UNPREDICTABLE>
   27644:	andeq	lr, r2, r3, lsr lr
   27648:	muleq	r2, r6, lr
   2764c:	muleq	r4, r8, sl
   27650:	ldrdeq	lr, [r2], -r0
   27654:	andeq	lr, r2, r3, ror #29

00027658 <ptr_set_insert_item@@Base>:
   27658:	mov	r3, r2
   2765c:	mov	r2, r1
   27660:	b	27458 <ptr_set_insert@@Base+0xc>

00027664 <ptr_set_find@@Base>:
   27664:	push	{r4, r5, r6, r7, fp, lr}
   27668:	add	fp, sp, #16
   2766c:	sub	sp, sp, #24
   27670:	ldr	r6, [r0]
   27674:	cmp	r6, #0
   27678:	beq	276e8 <ptr_set_find@@Base+0x84>
   2767c:	ldr	r7, [r0, #12]
   27680:	mov	r4, r1
   27684:	str	r1, [sp, #12]
   27688:	movw	r1, #15186	; 0x3b52
   2768c:	add	r0, sp, #16
   27690:	mov	r2, #4
   27694:	mov	r3, #0
   27698:	mov	r5, #0
   2769c:	movt	r1, #12137	; 0x2f69
   276a0:	str	r0, [sp, #4]
   276a4:	add	r0, sp, #12
   276a8:	str	r1, [sp]
   276ac:	bl	3bdcc <cmetrohash64_1@@Base>
   276b0:	ldr	r0, [sp, #16]
   276b4:	sub	r1, r7, #1
   276b8:	b	276c0 <ptr_set_find@@Base+0x5c>
   276bc:	add	r0, r0, #1
   276c0:	and	r2, r0, r1
   276c4:	ldr	r2, [r6, r2, lsl #2]
   276c8:	cmp	r2, #2
   276cc:	beq	276bc <ptr_set_find@@Base+0x58>
   276d0:	cmp	r2, #0
   276d4:	beq	276ec <ptr_set_find@@Base+0x88>
   276d8:	cmp	r2, r4
   276dc:	bne	276bc <ptr_set_find@@Base+0x58>
   276e0:	mov	r5, r4
   276e4:	b	276ec <ptr_set_find@@Base+0x88>
   276e8:	mov	r5, #0
   276ec:	mov	r0, r5
   276f0:	sub	sp, fp, #16
   276f4:	pop	{r4, r5, r6, r7, fp, pc}

000276f8 <ptr_set_find_item@@Base>:
   276f8:	push	{r4, r5, r6, r7, fp, lr}
   276fc:	add	fp, sp, #16
   27700:	sub	sp, sp, #24
   27704:	ldr	r6, [r0]
   27708:	cmp	r6, #0
   2770c:	beq	2777c <ptr_set_find_item@@Base+0x84>
   27710:	ldr	r7, [r0, #12]
   27714:	mov	r4, r1
   27718:	str	r1, [sp, #12]
   2771c:	movw	r1, #15186	; 0x3b52
   27720:	add	r0, sp, #16
   27724:	mov	r2, #4
   27728:	mov	r3, #0
   2772c:	mov	r5, #0
   27730:	movt	r1, #12137	; 0x2f69
   27734:	str	r0, [sp, #4]
   27738:	add	r0, sp, #12
   2773c:	str	r1, [sp]
   27740:	bl	3bdcc <cmetrohash64_1@@Base>
   27744:	ldr	r0, [sp, #16]
   27748:	sub	r1, r7, #1
   2774c:	b	27754 <ptr_set_find_item@@Base+0x5c>
   27750:	add	r0, r0, #1
   27754:	and	r2, r0, r1
   27758:	ldr	r2, [r6, r2, lsl #2]
   2775c:	cmp	r2, #2
   27760:	beq	27750 <ptr_set_find_item@@Base+0x58>
   27764:	cmp	r2, #0
   27768:	beq	27780 <ptr_set_find_item@@Base+0x88>
   2776c:	cmp	r2, r4
   27770:	bne	27750 <ptr_set_find_item@@Base+0x58>
   27774:	mov	r5, r4
   27778:	b	27780 <ptr_set_find_item@@Base+0x88>
   2777c:	mov	r5, #0
   27780:	mov	r0, r5
   27784:	sub	sp, fp, #16
   27788:	pop	{r4, r5, r6, r7, fp, pc}

0002778c <ptr_set_remove@@Base>:
   2778c:	push	{r4, r5, r6, r7, fp, lr}
   27790:	add	fp, sp, #16
   27794:	sub	sp, sp, #24
   27798:	ldr	r6, [r0]
   2779c:	cmp	r6, #0
   277a0:	beq	27820 <ptr_set_remove@@Base+0x94>
   277a4:	ldr	r7, [r0, #12]
   277a8:	mov	r4, r1
   277ac:	str	r1, [sp, #12]
   277b0:	movw	r1, #15186	; 0x3b52
   277b4:	mov	r5, r0
   277b8:	add	r0, sp, #16
   277bc:	mov	r2, #4
   277c0:	mov	r3, #0
   277c4:	movt	r1, #12137	; 0x2f69
   277c8:	str	r0, [sp, #4]
   277cc:	add	r0, sp, #12
   277d0:	str	r1, [sp]
   277d4:	bl	3bdcc <cmetrohash64_1@@Base>
   277d8:	ldr	r0, [sp, #16]
   277dc:	sub	r1, r7, #1
   277e0:	b	277e8 <ptr_set_remove@@Base+0x5c>
   277e4:	add	r0, r0, #1
   277e8:	and	r2, r0, r1
   277ec:	ldr	r3, [r6, r2, lsl #2]
   277f0:	cmp	r3, #2
   277f4:	beq	277e4 <ptr_set_remove@@Base+0x58>
   277f8:	cmp	r3, #0
   277fc:	beq	27820 <ptr_set_remove@@Base+0x94>
   27800:	cmp	r3, r4
   27804:	bne	277e4 <ptr_set_remove@@Base+0x58>
   27808:	mov	r0, #2
   2780c:	str	r0, [r6, r2, lsl #2]
   27810:	ldr	r0, [r5, #8]
   27814:	sub	r0, r0, #1
   27818:	str	r0, [r5, #8]
   2781c:	b	27824 <ptr_set_remove@@Base+0x98>
   27820:	mov	r4, #0
   27824:	mov	r0, r4
   27828:	sub	sp, fp, #16
   2782c:	pop	{r4, r5, r6, r7, fp, pc}

00027830 <ptr_set_remove_item@@Base>:
   27830:	push	{r4, r5, r6, r7, fp, lr}
   27834:	add	fp, sp, #16
   27838:	sub	sp, sp, #24
   2783c:	ldr	r6, [r0]
   27840:	cmp	r6, #0
   27844:	beq	278c4 <ptr_set_remove_item@@Base+0x94>
   27848:	ldr	r7, [r0, #12]
   2784c:	mov	r4, r1
   27850:	str	r1, [sp, #12]
   27854:	movw	r1, #15186	; 0x3b52
   27858:	mov	r5, r0
   2785c:	add	r0, sp, #16
   27860:	mov	r2, #4
   27864:	mov	r3, #0
   27868:	movt	r1, #12137	; 0x2f69
   2786c:	str	r0, [sp, #4]
   27870:	add	r0, sp, #12
   27874:	str	r1, [sp]
   27878:	bl	3bdcc <cmetrohash64_1@@Base>
   2787c:	ldr	r0, [sp, #16]
   27880:	sub	r1, r7, #1
   27884:	b	2788c <ptr_set_remove_item@@Base+0x5c>
   27888:	add	r0, r0, #1
   2788c:	and	r2, r0, r1
   27890:	ldr	r3, [r6, r2, lsl #2]
   27894:	cmp	r3, #2
   27898:	beq	27888 <ptr_set_remove_item@@Base+0x58>
   2789c:	cmp	r3, #0
   278a0:	beq	278c4 <ptr_set_remove_item@@Base+0x94>
   278a4:	cmp	r3, r4
   278a8:	bne	27888 <ptr_set_remove_item@@Base+0x58>
   278ac:	mov	r0, #2
   278b0:	str	r0, [r6, r2, lsl #2]
   278b4:	ldr	r0, [r5, #8]
   278b8:	sub	r0, r0, #1
   278bc:	str	r0, [r5, #8]
   278c0:	b	278c8 <ptr_set_remove_item@@Base+0x98>
   278c4:	mov	r4, #0
   278c8:	mov	r0, r4
   278cc:	sub	sp, fp, #16
   278d0:	pop	{r4, r5, r6, r7, fp, pc}

000278d4 <ptr_set_visit@@Base>:
   278d4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   278d8:	add	fp, sp, #24
   278dc:	mov	r6, r0
   278e0:	ldr	r0, [r0, #12]
   278e4:	cmp	r0, #0
   278e8:	beq	2792c <ptr_set_visit@@Base+0x58>
   278ec:	ldr	r7, [r6]
   278f0:	mov	r8, r2
   278f4:	mov	r5, r1
   278f8:	mov	r4, #0
   278fc:	b	2790c <ptr_set_visit@@Base+0x38>
   27900:	add	r4, r4, #1
   27904:	cmp	r4, r0
   27908:	bcs	2792c <ptr_set_visit@@Base+0x58>
   2790c:	ldr	r1, [r7, r4, lsl #2]
   27910:	orr	r2, r1, #2
   27914:	cmp	r2, #2
   27918:	beq	27900 <ptr_set_visit@@Base+0x2c>
   2791c:	mov	r0, r8
   27920:	blx	r5
   27924:	ldr	r0, [r6, #12]
   27928:	b	27900 <ptr_set_visit@@Base+0x2c>
   2792c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00027930 <fb_symbol_table_clear@@Base>:
   27930:	push	{r4, sl, fp, lr}
   27934:	add	fp, sp, #8
   27938:	mov	r4, r0
   2793c:	ldr	r0, [r0]
   27940:	cmp	r0, #0
   27944:	beq	2794c <fb_symbol_table_clear@@Base+0x1c>
   27948:	bl	147fc <free@plt>
   2794c:	vmov.i32	q8, #0	; 0x00000000
   27950:	vst1.32	{d16-d17}, [r4]
   27954:	pop	{r4, sl, fp, pc}

00027958 <fb_symbol_table_destroy@@Base>:
   27958:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2795c:	add	fp, sp, #24
   27960:	mov	r4, r0
   27964:	cmp	r1, #0
   27968:	beq	279b8 <fb_symbol_table_destroy@@Base+0x60>
   2796c:	ldr	r0, [r4, #12]
   27970:	cmp	r0, #0
   27974:	beq	279b8 <fb_symbol_table_destroy@@Base+0x60>
   27978:	ldr	r7, [r4]
   2797c:	mov	r8, r2
   27980:	mov	r6, r1
   27984:	mov	r5, #0
   27988:	b	27998 <fb_symbol_table_destroy@@Base+0x40>
   2798c:	add	r5, r5, #1
   27990:	cmp	r5, r0
   27994:	bcs	279b8 <fb_symbol_table_destroy@@Base+0x60>
   27998:	ldr	r1, [r7, r5, lsl #2]
   2799c:	orr	r2, r1, #2
   279a0:	cmp	r2, #2
   279a4:	beq	2798c <fb_symbol_table_destroy@@Base+0x34>
   279a8:	mov	r0, r8
   279ac:	blx	r6
   279b0:	ldr	r0, [r4, #12]
   279b4:	b	2798c <fb_symbol_table_destroy@@Base+0x34>
   279b8:	ldr	r0, [r4]
   279bc:	cmp	r0, #0
   279c0:	beq	279c8 <fb_symbol_table_destroy@@Base+0x70>
   279c4:	bl	147fc <free@plt>
   279c8:	vmov.i32	q8, #0	; 0x00000000
   279cc:	vst1.32	{d16-d17}, [r4]
   279d0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000279d4 <fb_symbol_table_init@@Base>:
   279d4:	push	{r4, r5, fp, lr}
   279d8:	add	fp, sp, #8
   279dc:	mov	r4, r0
   279e0:	mov	r2, #4
   279e4:	mov	r0, #179	; 0xb3
   279e8:	mul	r3, r2, r0
   279ec:	mov	r5, r2
   279f0:	lsl	r2, r2, #1
   279f4:	cmp	r1, r3, lsr #8
   279f8:	bhi	279e8 <fb_symbol_table_init@@Base+0x14>
   279fc:	mov	r0, r5
   27a00:	mov	r1, #4
   27a04:	bl	147cc <calloc@plt>
   27a08:	cmp	r0, #0
   27a0c:	str	r0, [r4]
   27a10:	mvneq	r0, #0
   27a14:	movne	r0, #0
   27a18:	strne	r0, [r4, #4]
   27a1c:	strne	r0, [r4, #8]
   27a20:	strne	r5, [r4, #12]
   27a24:	pop	{r4, r5, fp, pc}

00027a28 <fb_symbol_table_resize@@Base>:
   27a28:	b	27a2c <fb_symbol_table_resize@@Base+0x4>
   27a2c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   27a30:	add	fp, sp, #24
   27a34:	sub	sp, sp, #24
   27a38:	mov	r4, r0
   27a3c:	ldr	r5, [r0]
   27a40:	ldr	r0, [r0, #8]
   27a44:	mov	r2, #4
   27a48:	cmp	r0, r1
   27a4c:	movhi	r1, r0
   27a50:	mov	r0, #179	; 0xb3
   27a54:	mul	r3, r2, r0
   27a58:	mov	r6, r2
   27a5c:	lsl	r2, r2, #1
   27a60:	cmp	r1, r3, lsr #8
   27a64:	bhi	27a54 <fb_symbol_table_resize@@Base+0x2c>
   27a68:	mov	r0, r6
   27a6c:	mov	r1, #4
   27a70:	bl	147cc <calloc@plt>
   27a74:	cmp	r0, #0
   27a78:	str	r0, [sp, #8]
   27a7c:	beq	27ae0 <fb_symbol_table_resize@@Base+0xb8>
   27a80:	mov	r7, #0
   27a84:	str	r6, [sp, #20]
   27a88:	str	r7, [sp, #12]
   27a8c:	str	r7, [sp, #16]
   27a90:	ldr	r0, [r4, #12]
   27a94:	cmp	r0, #0
   27a98:	beq	27af0 <fb_symbol_table_resize@@Base+0xc8>
   27a9c:	mov	r8, #3
   27aa0:	add	r6, sp, #8
   27aa4:	b	27ab4 <fb_symbol_table_resize@@Base+0x8c>
   27aa8:	add	r7, r7, #1
   27aac:	cmp	r7, r0
   27ab0:	bcs	27aec <fb_symbol_table_resize@@Base+0xc4>
   27ab4:	ldr	r3, [r5, r7, lsl #2]
   27ab8:	orr	r1, r3, #2
   27abc:	cmp	r1, #2
   27ac0:	beq	27aa8 <fb_symbol_table_resize@@Base+0x80>
   27ac4:	ldr	r0, [r3, #4]
   27ac8:	ldm	r0, {r1, r2}
   27acc:	mov	r0, r6
   27ad0:	str	r8, [sp]
   27ad4:	bl	27b1c <fb_symbol_table_insert@@Base+0x4>
   27ad8:	ldr	r0, [r4, #12]
   27adc:	b	27aa8 <fb_symbol_table_resize@@Base+0x80>
   27ae0:	mvn	r0, #0
   27ae4:	sub	sp, fp, #24
   27ae8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   27aec:	ldr	r5, [r4]
   27af0:	cmp	r5, #0
   27af4:	beq	27b00 <fb_symbol_table_resize@@Base+0xd8>
   27af8:	mov	r0, r5
   27afc:	bl	147fc <free@plt>
   27b00:	add	r0, sp, #8
   27b04:	vld1.64	{d16-d17}, [r0]
   27b08:	mov	r0, #0
   27b0c:	vst1.32	{d16-d17}, [r4]
   27b10:	sub	sp, fp, #24
   27b14:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00027b18 <fb_symbol_table_insert@@Base>:
   27b18:	b	27b1c <fb_symbol_table_insert@@Base+0x4>
   27b1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27b20:	add	fp, sp, #28
   27b24:	sub	sp, sp, #36	; 0x24
   27b28:	cmp	r3, #2
   27b2c:	str	r1, [sp, #20]
   27b30:	beq	27ca0 <fb_symbol_table_insert@@Base+0x188>
   27b34:	mov	sl, r3
   27b38:	cmp	r3, #1
   27b3c:	beq	27cc0 <fb_symbol_table_insert@@Base+0x1a8>
   27b40:	cmp	sl, #0
   27b44:	beq	27ce0 <fb_symbol_table_insert@@Base+0x1c8>
   27b48:	mov	r7, r0
   27b4c:	ldr	r0, [r0, #8]
   27b50:	mov	r1, #179	; 0xb3
   27b54:	mov	r6, r2
   27b58:	ldr	r4, [r7, #12]
   27b5c:	mul	r1, r4, r1
   27b60:	cmp	r0, r1, lsr #8
   27b64:	bcc	27b80 <fb_symbol_table_insert@@Base+0x68>
   27b68:	lsl	r1, r0, #1
   27b6c:	mov	r0, r7
   27b70:	bl	27a2c <fb_symbol_table_resize@@Base+0x4>
   27b74:	cmp	r0, #0
   27b78:	bne	27d00 <fb_symbol_table_insert@@Base+0x1e8>
   27b7c:	ldr	r4, [r7, #12]
   27b80:	add	r0, sp, #24
   27b84:	ldr	r9, [r7]
   27b88:	movw	r1, #15186	; 0x3b52
   27b8c:	mov	r2, r6
   27b90:	mov	r3, #0
   27b94:	mov	r8, #0
   27b98:	str	r0, [sp, #4]
   27b9c:	ldr	r0, [sp, #20]
   27ba0:	movt	r1, #12137	; 0x2f69
   27ba4:	str	r1, [sp]
   27ba8:	bl	3bdcc <cmetrohash64_1@@Base>
   27bac:	ldr	r2, [fp, #8]
   27bb0:	ldr	r1, [sp, #24]
   27bb4:	sub	r5, r4, #1
   27bb8:	orr	r2, r2, #1
   27bbc:	and	r0, r5, r1
   27bc0:	cmp	r2, #3
   27bc4:	bne	27bf4 <fb_symbol_table_insert@@Base+0xdc>
   27bc8:	ldr	r2, [r7, #8]
   27bcc:	add	r2, r2, #1
   27bd0:	str	r2, [r7, #8]
   27bd4:	mov	r7, r9
   27bd8:	add	r1, r1, #1
   27bdc:	ldr	r0, [r7, r0, lsl #2]!
   27be0:	orr	r0, r0, #2
   27be4:	cmp	r0, #2
   27be8:	beq	27c68 <fb_symbol_table_insert@@Base+0x150>
   27bec:	and	r0, r1, r5
   27bf0:	b	27bd4 <fb_symbol_table_insert@@Base+0xbc>
   27bf4:	str	sl, [sp, #16]
   27bf8:	add	sl, r1, #1
   27bfc:	str	r7, [sp, #12]
   27c00:	b	27c14 <fb_symbol_table_insert@@Base+0xfc>
   27c04:	cmp	r8, #0
   27c08:	moveq	r8, r7
   27c0c:	and	r0, sl, r5
   27c10:	add	sl, sl, #1
   27c14:	mov	r7, r9
   27c18:	ldr	r4, [r7, r0, lsl #2]!
   27c1c:	cmp	r4, #2
   27c20:	beq	27c04 <fb_symbol_table_insert@@Base+0xec>
   27c24:	cmp	r4, #0
   27c28:	beq	27c70 <fb_symbol_table_insert@@Base+0x158>
   27c2c:	ldr	r0, [r4, #4]
   27c30:	ldr	r1, [r0, #4]
   27c34:	cmp	r1, r6
   27c38:	bne	27c0c <fb_symbol_table_insert@@Base+0xf4>
   27c3c:	ldr	r1, [r0]
   27c40:	ldr	r0, [sp, #20]
   27c44:	mov	r2, r6
   27c48:	bl	148a4 <bcmp@plt>
   27c4c:	cmp	r0, #0
   27c50:	bne	27c0c <fb_symbol_table_insert@@Base+0xf4>
   27c54:	ldr	r0, [fp, #8]
   27c58:	ldr	sl, [sp, #16]
   27c5c:	cmp	r0, #0
   27c60:	streq	sl, [r7]
   27c64:	b	27c94 <fb_symbol_table_insert@@Base+0x17c>
   27c68:	mov	r4, #0
   27c6c:	b	27c90 <fb_symbol_table_insert@@Base+0x178>
   27c70:	ldr	r1, [sp, #12]
   27c74:	ldr	sl, [sp, #16]
   27c78:	cmp	r8, #0
   27c7c:	mov	r4, #0
   27c80:	movne	r7, r8
   27c84:	ldr	r0, [r1, #8]
   27c88:	add	r0, r0, #1
   27c8c:	str	r0, [r1, #8]
   27c90:	str	sl, [r7]
   27c94:	mov	r0, r4
   27c98:	sub	sp, fp, #28
   27c9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27ca0:	ldr	r0, [pc, #140]	; 27d34 <fb_symbol_table_insert@@Base+0x21c>
   27ca4:	ldr	r1, [pc, #140]	; 27d38 <fb_symbol_table_insert@@Base+0x220>
   27ca8:	ldr	r3, [pc, #140]	; 27d3c <fb_symbol_table_insert@@Base+0x224>
   27cac:	mov	r2, #115	; 0x73
   27cb0:	add	r0, pc, r0
   27cb4:	add	r1, pc, r1
   27cb8:	add	r3, pc, r3
   27cbc:	bl	1497c <__assert_fail@plt>
   27cc0:	ldr	r0, [pc, #120]	; 27d40 <fb_symbol_table_insert@@Base+0x228>
   27cc4:	ldr	r1, [pc, #120]	; 27d44 <fb_symbol_table_insert@@Base+0x22c>
   27cc8:	ldr	r3, [pc, #120]	; 27d48 <fb_symbol_table_insert@@Base+0x230>
   27ccc:	mov	r2, #116	; 0x74
   27cd0:	add	r0, pc, r0
   27cd4:	add	r1, pc, r1
   27cd8:	add	r3, pc, r3
   27cdc:	bl	1497c <__assert_fail@plt>
   27ce0:	ldr	r0, [pc, #64]	; 27d28 <fb_symbol_table_insert@@Base+0x210>
   27ce4:	ldr	r1, [pc, #64]	; 27d2c <fb_symbol_table_insert@@Base+0x214>
   27ce8:	ldr	r3, [pc, #64]	; 27d30 <fb_symbol_table_insert@@Base+0x218>
   27cec:	mov	r2, #114	; 0x72
   27cf0:	add	r0, pc, r0
   27cf4:	add	r1, pc, r1
   27cf8:	add	r3, pc, r3
   27cfc:	bl	1497c <__assert_fail@plt>
   27d00:	ldr	r0, [pc, #68]	; 27d4c <fb_symbol_table_insert@@Base+0x234>
   27d04:	ldr	r0, [pc, r0]
   27d08:	ldr	r0, [r0]
   27d0c:	ldr	r1, [pc, #60]	; 27d50 <fb_symbol_table_insert@@Base+0x238>
   27d10:	ldr	r2, [pc, #60]	; 27d54 <fb_symbol_table_insert@@Base+0x23c>
   27d14:	add	r1, pc, r1
   27d18:	add	r2, pc, r2
   27d1c:	bl	148bc <fprintf@plt>
   27d20:	mov	r0, #1
   27d24:	bl	14898 <exit@plt>
   27d28:	andeq	lr, r2, r0, lsl #14
   27d2c:	andeq	lr, r2, r3, lsl r7
   27d30:	andeq	lr, r2, r6, ror r7
   27d34:	andeq	lr, r2, r8, lsl #16
   27d38:	andeq	lr, r2, r3, asr r7
   27d3c:			; <UNDEFINED> instruction: 0x0002e7b6
   27d40:	strdeq	lr, [r2], -pc	; <UNPREDICTABLE>
   27d44:	andeq	lr, r2, r3, lsr r7
   27d48:	muleq	r2, r6, r7
   27d4c:	muleq	r4, r8, r3
   27d50:	ldrdeq	lr, [r2], -r0
   27d54:	andeq	lr, r2, r3, ror #15

00027d58 <fb_symbol_table_insert_item@@Base>:
   27d58:	push	{fp, lr}
   27d5c:	mov	fp, sp
   27d60:	sub	sp, sp, #8
   27d64:	ldr	r3, [r1, #4]
   27d68:	mov	lr, r1
   27d6c:	ldm	r3, {r1, ip}
   27d70:	str	r2, [sp]
   27d74:	mov	r2, ip
   27d78:	mov	r3, lr
   27d7c:	bl	27b1c <fb_symbol_table_insert@@Base+0x4>
   27d80:	mov	sp, fp
   27d84:	pop	{fp, pc}

00027d88 <fb_symbol_table_find@@Base>:
   27d88:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   27d8c:	add	fp, sp, #24
   27d90:	sub	sp, sp, #16
   27d94:	ldr	r7, [r0]
   27d98:	cmp	r7, #0
   27d9c:	beq	27e20 <fb_symbol_table_find@@Base+0x98>
   27da0:	mov	r8, r1
   27da4:	movw	r1, #15186	; 0x3b52
   27da8:	ldr	r4, [r0, #12]
   27dac:	add	r0, sp, #8
   27db0:	mov	r3, #0
   27db4:	mov	r9, r2
   27db8:	movt	r1, #12137	; 0x2f69
   27dbc:	str	r0, [sp, #4]
   27dc0:	mov	r0, r8
   27dc4:	str	r1, [sp]
   27dc8:	bl	3bdcc <cmetrohash64_1@@Base>
   27dcc:	ldr	r5, [sp, #8]
   27dd0:	sub	r4, r4, #1
   27dd4:	b	27ddc <fb_symbol_table_find@@Base+0x54>
   27dd8:	add	r5, r5, #1
   27ddc:	and	r0, r5, r4
   27de0:	ldr	r6, [r7, r0, lsl #2]
   27de4:	cmp	r6, #2
   27de8:	beq	27dd8 <fb_symbol_table_find@@Base+0x50>
   27dec:	cmp	r6, #0
   27df0:	beq	27e20 <fb_symbol_table_find@@Base+0x98>
   27df4:	ldr	r0, [r6, #4]
   27df8:	ldr	r1, [r0, #4]
   27dfc:	cmp	r1, r9
   27e00:	bne	27dd8 <fb_symbol_table_find@@Base+0x50>
   27e04:	ldr	r1, [r0]
   27e08:	mov	r0, r8
   27e0c:	mov	r2, r9
   27e10:	bl	148a4 <bcmp@plt>
   27e14:	cmp	r0, #0
   27e18:	bne	27dd8 <fb_symbol_table_find@@Base+0x50>
   27e1c:	b	27e24 <fb_symbol_table_find@@Base+0x9c>
   27e20:	mov	r6, #0
   27e24:	mov	r0, r6
   27e28:	sub	sp, fp, #24
   27e2c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00027e30 <fb_symbol_table_find_item@@Base>:
   27e30:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   27e34:	add	fp, sp, #24
   27e38:	sub	sp, sp, #16
   27e3c:	ldr	r7, [r0]
   27e40:	cmp	r7, #0
   27e44:	beq	27ecc <fb_symbol_table_find_item@@Base+0x9c>
   27e48:	ldr	r1, [r1, #4]
   27e4c:	ldr	r5, [r0, #12]
   27e50:	add	r0, sp, #8
   27e54:	mov	r3, #0
   27e58:	ldm	r1, {r8, r9}
   27e5c:	movw	r1, #15186	; 0x3b52
   27e60:	str	r0, [sp, #4]
   27e64:	mov	r2, r9
   27e68:	movt	r1, #12137	; 0x2f69
   27e6c:	mov	r0, r8
   27e70:	str	r1, [sp]
   27e74:	bl	3bdcc <cmetrohash64_1@@Base>
   27e78:	ldr	r4, [sp, #8]
   27e7c:	sub	r5, r5, #1
   27e80:	b	27e88 <fb_symbol_table_find_item@@Base+0x58>
   27e84:	add	r4, r4, #1
   27e88:	and	r0, r4, r5
   27e8c:	ldr	r6, [r7, r0, lsl #2]
   27e90:	cmp	r6, #2
   27e94:	beq	27e84 <fb_symbol_table_find_item@@Base+0x54>
   27e98:	cmp	r6, #0
   27e9c:	beq	27ecc <fb_symbol_table_find_item@@Base+0x9c>
   27ea0:	ldr	r0, [r6, #4]
   27ea4:	ldr	r1, [r0, #4]
   27ea8:	cmp	r1, r9
   27eac:	bne	27e84 <fb_symbol_table_find_item@@Base+0x54>
   27eb0:	ldr	r1, [r0]
   27eb4:	mov	r0, r8
   27eb8:	mov	r2, r9
   27ebc:	bl	148a4 <bcmp@plt>
   27ec0:	cmp	r0, #0
   27ec4:	bne	27e84 <fb_symbol_table_find_item@@Base+0x54>
   27ec8:	b	27ed0 <fb_symbol_table_find_item@@Base+0xa0>
   27ecc:	mov	r6, #0
   27ed0:	mov	r0, r6
   27ed4:	sub	sp, fp, #24
   27ed8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00027edc <fb_symbol_table_remove@@Base>:
   27edc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27ee0:	add	fp, sp, #28
   27ee4:	sub	sp, sp, #28
   27ee8:	ldr	r4, [r0]
   27eec:	cmp	r4, #0
   27ef0:	beq	27f90 <fb_symbol_table_remove@@Base+0xb4>
   27ef4:	mov	r9, r1
   27ef8:	movw	r1, #15186	; 0x3b52
   27efc:	ldr	r5, [r0, #12]
   27f00:	str	r0, [sp, #12]
   27f04:	add	r0, sp, #16
   27f08:	mov	r3, #0
   27f0c:	mov	sl, r2
   27f10:	movt	r1, #12137	; 0x2f69
   27f14:	str	r0, [sp, #4]
   27f18:	mov	r0, r9
   27f1c:	str	r1, [sp]
   27f20:	bl	3bdcc <cmetrohash64_1@@Base>
   27f24:	ldr	r6, [sp, #16]
   27f28:	sub	r5, r5, #1
   27f2c:	b	27f34 <fb_symbol_table_remove@@Base+0x58>
   27f30:	add	r6, r6, #1
   27f34:	and	r8, r6, r5
   27f38:	ldr	r7, [r4, r8, lsl #2]
   27f3c:	cmp	r7, #2
   27f40:	beq	27f30 <fb_symbol_table_remove@@Base+0x54>
   27f44:	cmp	r7, #0
   27f48:	beq	27f90 <fb_symbol_table_remove@@Base+0xb4>
   27f4c:	ldr	r0, [r7, #4]
   27f50:	ldr	r1, [r0, #4]
   27f54:	cmp	r1, sl
   27f58:	bne	27f30 <fb_symbol_table_remove@@Base+0x54>
   27f5c:	ldr	r1, [r0]
   27f60:	mov	r0, r9
   27f64:	mov	r2, sl
   27f68:	bl	148a4 <bcmp@plt>
   27f6c:	cmp	r0, #0
   27f70:	bne	27f30 <fb_symbol_table_remove@@Base+0x54>
   27f74:	ldr	r1, [sp, #12]
   27f78:	mov	r0, #2
   27f7c:	str	r0, [r4, r8, lsl #2]
   27f80:	ldr	r0, [r1, #8]
   27f84:	sub	r0, r0, #1
   27f88:	str	r0, [r1, #8]
   27f8c:	b	27f94 <fb_symbol_table_remove@@Base+0xb8>
   27f90:	mov	r7, #0
   27f94:	mov	r0, r7
   27f98:	sub	sp, fp, #28
   27f9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00027fa0 <fb_symbol_table_remove_item@@Base>:
   27fa0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27fa4:	add	fp, sp, #28
   27fa8:	sub	sp, sp, #28
   27fac:	ldr	r4, [r0]
   27fb0:	cmp	r4, #0
   27fb4:	beq	28058 <fb_symbol_table_remove_item@@Base+0xb8>
   27fb8:	ldr	r1, [r1, #4]
   27fbc:	ldr	r6, [r0, #12]
   27fc0:	mov	r3, #0
   27fc4:	ldm	r1, {r9, sl}
   27fc8:	movw	r1, #15186	; 0x3b52
   27fcc:	str	r0, [sp, #12]
   27fd0:	add	r0, sp, #16
   27fd4:	mov	r2, sl
   27fd8:	movt	r1, #12137	; 0x2f69
   27fdc:	str	r0, [sp, #4]
   27fe0:	mov	r0, r9
   27fe4:	str	r1, [sp]
   27fe8:	bl	3bdcc <cmetrohash64_1@@Base>
   27fec:	ldr	r5, [sp, #16]
   27ff0:	sub	r6, r6, #1
   27ff4:	b	27ffc <fb_symbol_table_remove_item@@Base+0x5c>
   27ff8:	add	r5, r5, #1
   27ffc:	and	r8, r5, r6
   28000:	ldr	r7, [r4, r8, lsl #2]
   28004:	cmp	r7, #2
   28008:	beq	27ff8 <fb_symbol_table_remove_item@@Base+0x58>
   2800c:	cmp	r7, #0
   28010:	beq	28058 <fb_symbol_table_remove_item@@Base+0xb8>
   28014:	ldr	r0, [r7, #4]
   28018:	ldr	r1, [r0, #4]
   2801c:	cmp	r1, sl
   28020:	bne	27ff8 <fb_symbol_table_remove_item@@Base+0x58>
   28024:	ldr	r1, [r0]
   28028:	mov	r0, r9
   2802c:	mov	r2, sl
   28030:	bl	148a4 <bcmp@plt>
   28034:	cmp	r0, #0
   28038:	bne	27ff8 <fb_symbol_table_remove_item@@Base+0x58>
   2803c:	ldr	r1, [sp, #12]
   28040:	mov	r0, #2
   28044:	str	r0, [r4, r8, lsl #2]
   28048:	ldr	r0, [r1, #8]
   2804c:	sub	r0, r0, #1
   28050:	str	r0, [r1, #8]
   28054:	b	2805c <fb_symbol_table_remove_item@@Base+0xbc>
   28058:	mov	r7, #0
   2805c:	mov	r0, r7
   28060:	sub	sp, fp, #28
   28064:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00028068 <fb_symbol_table_visit@@Base>:
   28068:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2806c:	add	fp, sp, #24
   28070:	mov	r6, r0
   28074:	ldr	r0, [r0, #12]
   28078:	cmp	r0, #0
   2807c:	beq	280c0 <fb_symbol_table_visit@@Base+0x58>
   28080:	ldr	r7, [r6]
   28084:	mov	r8, r2
   28088:	mov	r5, r1
   2808c:	mov	r4, #0
   28090:	b	280a0 <fb_symbol_table_visit@@Base+0x38>
   28094:	add	r4, r4, #1
   28098:	cmp	r4, r0
   2809c:	bcs	280c0 <fb_symbol_table_visit@@Base+0x58>
   280a0:	ldr	r1, [r7, r4, lsl #2]
   280a4:	orr	r2, r1, #2
   280a8:	cmp	r2, #2
   280ac:	beq	28094 <fb_symbol_table_visit@@Base+0x2c>
   280b0:	mov	r0, r8
   280b4:	blx	r5
   280b8:	ldr	r0, [r6, #12]
   280bc:	b	28094 <fb_symbol_table_visit@@Base+0x2c>
   280c0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000280c4 <fb_scope_table_clear@@Base>:
   280c4:	push	{r4, sl, fp, lr}
   280c8:	add	fp, sp, #8
   280cc:	mov	r4, r0
   280d0:	ldr	r0, [r0]
   280d4:	cmp	r0, #0
   280d8:	beq	280e0 <fb_scope_table_clear@@Base+0x1c>
   280dc:	bl	147fc <free@plt>
   280e0:	vmov.i32	q8, #0	; 0x00000000
   280e4:	vst1.32	{d16-d17}, [r4]
   280e8:	pop	{r4, sl, fp, pc}

000280ec <fb_scope_table_destroy@@Base>:
   280ec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   280f0:	add	fp, sp, #24
   280f4:	mov	r4, r0
   280f8:	cmp	r1, #0
   280fc:	beq	2814c <fb_scope_table_destroy@@Base+0x60>
   28100:	ldr	r0, [r4, #12]
   28104:	cmp	r0, #0
   28108:	beq	2814c <fb_scope_table_destroy@@Base+0x60>
   2810c:	ldr	r7, [r4]
   28110:	mov	r8, r2
   28114:	mov	r6, r1
   28118:	mov	r5, #0
   2811c:	b	2812c <fb_scope_table_destroy@@Base+0x40>
   28120:	add	r5, r5, #1
   28124:	cmp	r5, r0
   28128:	bcs	2814c <fb_scope_table_destroy@@Base+0x60>
   2812c:	ldr	r1, [r7, r5, lsl #2]
   28130:	orr	r2, r1, #2
   28134:	cmp	r2, #2
   28138:	beq	28120 <fb_scope_table_destroy@@Base+0x34>
   2813c:	mov	r0, r8
   28140:	blx	r6
   28144:	ldr	r0, [r4, #12]
   28148:	b	28120 <fb_scope_table_destroy@@Base+0x34>
   2814c:	ldr	r0, [r4]
   28150:	cmp	r0, #0
   28154:	beq	2815c <fb_scope_table_destroy@@Base+0x70>
   28158:	bl	147fc <free@plt>
   2815c:	vmov.i32	q8, #0	; 0x00000000
   28160:	vst1.32	{d16-d17}, [r4]
   28164:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00028168 <fb_scope_table_init@@Base>:
   28168:	push	{r4, r5, fp, lr}
   2816c:	add	fp, sp, #8
   28170:	mov	r4, r0
   28174:	mov	r2, #4
   28178:	mov	r0, #179	; 0xb3
   2817c:	mul	r3, r2, r0
   28180:	mov	r5, r2
   28184:	lsl	r2, r2, #1
   28188:	cmp	r1, r3, lsr #8
   2818c:	bhi	2817c <fb_scope_table_init@@Base+0x14>
   28190:	mov	r0, r5
   28194:	mov	r1, #4
   28198:	bl	147cc <calloc@plt>
   2819c:	cmp	r0, #0
   281a0:	str	r0, [r4]
   281a4:	mvneq	r0, #0
   281a8:	movne	r0, #0
   281ac:	strne	r0, [r4, #4]
   281b0:	strne	r0, [r4, #8]
   281b4:	strne	r5, [r4, #12]
   281b8:	pop	{r4, r5, fp, pc}

000281bc <fb_scope_table_resize@@Base>:
   281bc:	b	281c0 <fb_scope_table_resize@@Base+0x4>
   281c0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   281c4:	add	fp, sp, #24
   281c8:	sub	sp, sp, #24
   281cc:	mov	r4, r0
   281d0:	ldr	r5, [r0]
   281d4:	ldr	r0, [r0, #8]
   281d8:	mov	r2, #4
   281dc:	cmp	r0, r1
   281e0:	movhi	r1, r0
   281e4:	mov	r0, #179	; 0xb3
   281e8:	mul	r3, r2, r0
   281ec:	mov	r6, r2
   281f0:	lsl	r2, r2, #1
   281f4:	cmp	r1, r3, lsr #8
   281f8:	bhi	281e8 <fb_scope_table_resize@@Base+0x2c>
   281fc:	mov	r0, r6
   28200:	mov	r1, #4
   28204:	bl	147cc <calloc@plt>
   28208:	cmp	r0, #0
   2820c:	str	r0, [sp, #8]
   28210:	beq	28274 <fb_scope_table_resize@@Base+0xb8>
   28214:	mov	r7, #0
   28218:	str	r6, [sp, #20]
   2821c:	str	r7, [sp, #12]
   28220:	str	r7, [sp, #16]
   28224:	ldr	r0, [r4, #12]
   28228:	cmp	r0, #0
   2822c:	beq	28284 <fb_scope_table_resize@@Base+0xc8>
   28230:	mov	r8, #3
   28234:	add	r6, sp, #8
   28238:	b	28248 <fb_scope_table_resize@@Base+0x8c>
   2823c:	add	r7, r7, #1
   28240:	cmp	r7, r0
   28244:	bcs	28280 <fb_scope_table_resize@@Base+0xc4>
   28248:	ldr	r3, [r5, r7, lsl #2]
   2824c:	orr	r1, r3, #2
   28250:	cmp	r1, #2
   28254:	beq	2823c <fb_scope_table_resize@@Base+0x80>
   28258:	ldr	r1, [r3]
   2825c:	mov	r0, r6
   28260:	mov	r2, #0
   28264:	str	r8, [sp]
   28268:	bl	282b0 <fb_scope_table_insert@@Base+0x4>
   2826c:	ldr	r0, [r4, #12]
   28270:	b	2823c <fb_scope_table_resize@@Base+0x80>
   28274:	mvn	r0, #0
   28278:	sub	sp, fp, #24
   2827c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   28280:	ldr	r5, [r4]
   28284:	cmp	r5, #0
   28288:	beq	28294 <fb_scope_table_resize@@Base+0xd8>
   2828c:	mov	r0, r5
   28290:	bl	147fc <free@plt>
   28294:	add	r0, sp, #8
   28298:	vld1.64	{d16-d17}, [r0]
   2829c:	mov	r0, #0
   282a0:	vst1.32	{d16-d17}, [r4]
   282a4:	sub	sp, fp, #24
   282a8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000282ac <fb_scope_table_insert@@Base>:
   282ac:	b	282b0 <fb_scope_table_insert@@Base+0x4>
   282b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   282b4:	add	fp, sp, #28
   282b8:	sub	sp, sp, #36	; 0x24
   282bc:	cmp	r3, #2
   282c0:	str	r2, [sp, #12]
   282c4:	str	r1, [sp, #20]
   282c8:	beq	28680 <fb_scope_table_insert@@Base+0x3d4>
   282cc:	mov	r9, r3
   282d0:	cmp	r3, #1
   282d4:	beq	286a0 <fb_scope_table_insert@@Base+0x3f4>
   282d8:	cmp	r9, #0
   282dc:	beq	286c0 <fb_scope_table_insert@@Base+0x414>
   282e0:	mov	sl, r0
   282e4:	ldr	r1, [r0, #8]
   282e8:	ldr	r0, [r0, #12]
   282ec:	mov	r2, #179	; 0xb3
   282f0:	mul	r2, r0, r2
   282f4:	cmp	r1, r2, lsr #8
   282f8:	bcc	28314 <fb_scope_table_insert@@Base+0x68>
   282fc:	lsl	r1, r1, #1
   28300:	mov	r0, sl
   28304:	bl	281c0 <fb_scope_table_resize@@Base+0x4>
   28308:	cmp	r0, #0
   2830c:	bne	286e0 <fb_scope_table_insert@@Base+0x434>
   28310:	ldr	r0, [sl, #12]
   28314:	sub	r0, r0, #1
   28318:	ldr	r5, [sp, #12]
   2831c:	movw	r6, #11863	; 0x2e57
   28320:	movw	ip, #15186	; 0x3b52
   28324:	movw	lr, #31153	; 0x79b1
   28328:	mov	r8, #0
   2832c:	str	r0, [sp, #28]
   28330:	ldr	r0, [sl]
   28334:	movt	r6, #12137	; 0x2f69
   28338:	movt	ip, #12137	; 0x2f69
   2833c:	movt	lr, #40503	; 0x9e37
   28340:	cmp	r5, #1
   28344:	str	r0, [sp, #24]
   28348:	blt	283e8 <fb_scope_table_insert@@Base+0x13c>
   2834c:	ldr	r1, [sp, #20]
   28350:	cmp	r5, #0
   28354:	beq	2838c <fb_scope_table_insert@@Base+0xe0>
   28358:	mov	r3, #0
   2835c:	ldrb	r0, [r1, r3]
   28360:	cmp	r0, #46	; 0x2e
   28364:	beq	28378 <fb_scope_table_insert@@Base+0xcc>
   28368:	add	r3, r3, #1
   2836c:	cmp	r5, r3
   28370:	bne	2835c <fb_scope_table_insert@@Base+0xb0>
   28374:	mov	r3, r5
   28378:	subs	r4, r3, #1
   2837c:	bne	28394 <fb_scope_table_insert@@Base+0xe8>
   28380:	mov	r3, #1
   28384:	mov	r0, r6
   28388:	b	283bc <fb_scope_table_insert@@Base+0x110>
   2838c:	mvn	r4, #0
   28390:	mov	r3, #0
   28394:	mov	r0, r6
   28398:	mov	r7, r1
   2839c:	ldrb	r2, [r7]
   283a0:	cmp	r2, #0
   283a4:	beq	283bc <fb_scope_table_insert@@Base+0x110>
   283a8:	add	r0, r0, r0, lsl #5
   283ac:	subs	r4, r4, #1
   283b0:	add	r7, r7, #1
   283b4:	eor	r0, r0, r2
   283b8:	bne	2839c <fb_scope_table_insert@@Base+0xf0>
   283bc:	eor	r2, r8, ip
   283c0:	cmp	r3, r5
   283c4:	eor	r0, r2, r0
   283c8:	mul	r8, r0, lr
   283cc:	beq	2845c <fb_scope_table_insert@@Base+0x1b0>
   283d0:	add	r0, r3, #1
   283d4:	add	r1, r1, r0
   283d8:	sub	r5, r5, r0
   283dc:	cmp	r5, #0
   283e0:	bne	28358 <fb_scope_table_insert@@Base+0xac>
   283e4:	b	2838c <fb_scope_table_insert@@Base+0xe0>
   283e8:	ldr	r7, [sp, #20]
   283ec:	mov	r3, r5
   283f0:	cmp	r7, #0
   283f4:	bne	2841c <fb_scope_table_insert@@Base+0x170>
   283f8:	b	2845c <fb_scope_table_insert@@Base+0x1b0>
   283fc:	eor	r1, r8, ip
   28400:	ldr	r7, [r7]
   28404:	adds	r3, r3, #1
   28408:	eor	r0, r1, r0
   2840c:	mul	r8, r0, lr
   28410:	bcs	2845c <fb_scope_table_insert@@Base+0x1b0>
   28414:	cmp	r7, #0
   28418:	beq	2845c <fb_scope_table_insert@@Base+0x1b0>
   2841c:	ldr	r1, [r7, #4]
   28420:	ldr	r0, [r1, #4]
   28424:	subs	r5, r0, #1
   28428:	mov	r0, r6
   2842c:	beq	283fc <fb_scope_table_insert@@Base+0x150>
   28430:	ldr	r4, [r1]
   28434:	mov	r0, r6
   28438:	ldrb	r1, [r4]
   2843c:	cmp	r1, #0
   28440:	beq	283fc <fb_scope_table_insert@@Base+0x150>
   28444:	add	r0, r0, r0, lsl #5
   28448:	subs	r5, r5, #1
   2844c:	add	r4, r4, #1
   28450:	eor	r0, r0, r1
   28454:	bne	28438 <fb_scope_table_insert@@Base+0x18c>
   28458:	b	283fc <fb_scope_table_insert@@Base+0x150>
   2845c:	ldr	r1, [fp, #8]
   28460:	ldr	r2, [sp, #28]
   28464:	str	r9, [sp, #8]
   28468:	orr	r1, r1, #1
   2846c:	and	r0, r8, r2
   28470:	cmp	r1, #3
   28474:	bne	284ac <fb_scope_table_insert@@Base+0x200>
   28478:	ldr	r1, [sl, #8]
   2847c:	ldr	r3, [sp, #24]
   28480:	add	r1, r1, #1
   28484:	str	r1, [sl, #8]
   28488:	add	r1, r8, #1
   2848c:	mov	r7, r3
   28490:	ldr	r0, [r7, r0, lsl #2]!
   28494:	orr	r0, r0, #2
   28498:	cmp	r0, #2
   2849c:	beq	28668 <fb_scope_table_insert@@Base+0x3bc>
   284a0:	and	r0, r1, r2
   284a4:	add	r1, r1, #1
   284a8:	b	2848c <fb_scope_table_insert@@Base+0x1e0>
   284ac:	ldr	r9, [sp, #12]
   284b0:	ldr	r1, [sp, #24]
   284b4:	mov	r3, #0
   284b8:	mov	r4, #0
   284bc:	str	sl, [sp, #4]
   284c0:	b	284d8 <fb_scope_table_insert@@Base+0x22c>
   284c4:	cmp	r4, #0
   284c8:	moveq	r4, r7
   284cc:	add	r3, r3, #1
   284d0:	add	r0, r3, r8
   284d4:	and	r0, r0, r2
   284d8:	mov	r7, r1
   284dc:	ldr	sl, [r7, r0, lsl #2]!
   284e0:	cmp	sl, #2
   284e4:	beq	284c4 <fb_scope_table_insert@@Base+0x218>
   284e8:	cmp	sl, #0
   284ec:	beq	28650 <fb_scope_table_insert@@Base+0x3a4>
   284f0:	ldr	r5, [sl]
   284f4:	cmp	r9, #0
   284f8:	str	r3, [sp, #32]
   284fc:	ble	28590 <fb_scope_table_insert@@Base+0x2e4>
   28500:	ldr	ip, [sp, #20]
   28504:	cmp	r5, #0
   28508:	mov	lr, r9
   2850c:	str	r4, [sp, #16]
   28510:	beq	28608 <fb_scope_table_insert@@Base+0x35c>
   28514:	ldr	r0, [r5, #4]
   28518:	ldr	r4, [r0, #4]
   2851c:	cmp	r4, lr
   28520:	bhi	28608 <fb_scope_table_insert@@Base+0x35c>
   28524:	cmp	r4, #0
   28528:	beq	28558 <fb_scope_table_insert@@Base+0x2ac>
   2852c:	ldr	r3, [r0]
   28530:	mov	r0, ip
   28534:	mov	r2, r4
   28538:	ldrb	r6, [r0]
   2853c:	ldrb	r1, [r3]
   28540:	cmp	r1, r6
   28544:	bne	28600 <fb_scope_table_insert@@Base+0x354>
   28548:	add	r3, r3, #1
   2854c:	add	r0, r0, #1
   28550:	subs	r2, r2, #1
   28554:	bne	28538 <fb_scope_table_insert@@Base+0x28c>
   28558:	cmp	r4, lr
   2855c:	beq	28624 <fb_scope_table_insert@@Base+0x378>
   28560:	ldrb	r0, [ip, r4]
   28564:	ldr	r2, [sp, #28]
   28568:	ldr	r1, [sp, #24]
   2856c:	cmp	r0, #46	; 0x2e
   28570:	bne	28608 <fb_scope_table_insert@@Base+0x35c>
   28574:	ldr	r5, [r5]
   28578:	add	r0, r4, #1
   2857c:	add	ip, ip, r0
   28580:	sub	lr, lr, r0
   28584:	cmp	r5, #0
   28588:	bne	28514 <fb_scope_table_insert@@Base+0x268>
   2858c:	b	28608 <fb_scope_table_insert@@Base+0x35c>
   28590:	ldr	r6, [sp, #20]
   28594:	cmp	r5, #0
   28598:	cmpne	r6, #0
   2859c:	beq	285e4 <fb_scope_table_insert@@Base+0x338>
   285a0:	ldr	r0, [r5, #4]
   285a4:	ldr	r1, [r6, #4]
   285a8:	ldr	r2, [r0, #4]
   285ac:	ldr	r3, [r1, #4]
   285b0:	cmp	r2, r3
   285b4:	bne	28614 <fb_scope_table_insert@@Base+0x368>
   285b8:	ldr	r1, [r1]
   285bc:	ldr	r0, [r0]
   285c0:	bl	14964 <strncmp@plt>
   285c4:	cmp	r0, #0
   285c8:	bne	28614 <fb_scope_table_insert@@Base+0x368>
   285cc:	ldr	r6, [r6]
   285d0:	ldr	r5, [r5]
   285d4:	adds	r9, r9, #1
   285d8:	bcc	28594 <fb_scope_table_insert@@Base+0x2e8>
   285dc:	cmp	r5, #0
   285e0:	b	285e8 <fb_scope_table_insert@@Base+0x33c>
   285e4:	orrs	r0, r5, r6
   285e8:	ldr	r9, [sp, #12]
   285ec:	ldr	r2, [sp, #28]
   285f0:	ldr	r1, [sp, #24]
   285f4:	ldr	r3, [sp, #32]
   285f8:	bne	284cc <fb_scope_table_insert@@Base+0x220>
   285fc:	b	28640 <fb_scope_table_insert@@Base+0x394>
   28600:	ldr	r2, [sp, #28]
   28604:	ldr	r1, [sp, #24]
   28608:	ldr	r4, [sp, #16]
   2860c:	ldr	r3, [sp, #32]
   28610:	b	284cc <fb_scope_table_insert@@Base+0x220>
   28614:	add	r3, sp, #24
   28618:	ldr	r9, [sp, #12]
   2861c:	ldm	r3, {r1, r2, r3}
   28620:	b	284cc <fb_scope_table_insert@@Base+0x220>
   28624:	ldr	r0, [r5]
   28628:	ldr	r2, [sp, #28]
   2862c:	ldr	r1, [sp, #24]
   28630:	ldr	r4, [sp, #16]
   28634:	cmp	r0, #0
   28638:	ldr	r3, [sp, #32]
   2863c:	bne	284cc <fb_scope_table_insert@@Base+0x220>
   28640:	ldr	r0, [fp, #8]
   28644:	cmp	r0, #0
   28648:	bne	28674 <fb_scope_table_insert@@Base+0x3c8>
   2864c:	b	2866c <fb_scope_table_insert@@Base+0x3c0>
   28650:	ldr	r1, [sp, #4]
   28654:	cmp	r4, #0
   28658:	movne	r7, r4
   2865c:	ldr	r0, [r1, #8]
   28660:	add	r0, r0, #1
   28664:	str	r0, [r1, #8]
   28668:	mov	sl, #0
   2866c:	ldr	r0, [sp, #8]
   28670:	str	r0, [r7]
   28674:	mov	r0, sl
   28678:	sub	sp, fp, #28
   2867c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28680:	ldr	r0, [pc, #140]	; 28714 <fb_scope_table_insert@@Base+0x468>
   28684:	ldr	r1, [pc, #140]	; 28718 <fb_scope_table_insert@@Base+0x46c>
   28688:	ldr	r3, [pc, #140]	; 2871c <fb_scope_table_insert@@Base+0x470>
   2868c:	mov	r2, #115	; 0x73
   28690:	add	r0, pc, r0
   28694:	add	r1, pc, r1
   28698:	add	r3, pc, r3
   2869c:	bl	1497c <__assert_fail@plt>
   286a0:	ldr	r0, [pc, #120]	; 28720 <fb_scope_table_insert@@Base+0x474>
   286a4:	ldr	r1, [pc, #120]	; 28724 <fb_scope_table_insert@@Base+0x478>
   286a8:	ldr	r3, [pc, #120]	; 28728 <fb_scope_table_insert@@Base+0x47c>
   286ac:	mov	r2, #116	; 0x74
   286b0:	add	r0, pc, r0
   286b4:	add	r1, pc, r1
   286b8:	add	r3, pc, r3
   286bc:	bl	1497c <__assert_fail@plt>
   286c0:	ldr	r0, [pc, #64]	; 28708 <fb_scope_table_insert@@Base+0x45c>
   286c4:	ldr	r1, [pc, #64]	; 2870c <fb_scope_table_insert@@Base+0x460>
   286c8:	ldr	r3, [pc, #64]	; 28710 <fb_scope_table_insert@@Base+0x464>
   286cc:	mov	r2, #114	; 0x72
   286d0:	add	r0, pc, r0
   286d4:	add	r1, pc, r1
   286d8:	add	r3, pc, r3
   286dc:	bl	1497c <__assert_fail@plt>
   286e0:	ldr	r0, [pc, #68]	; 2872c <fb_scope_table_insert@@Base+0x480>
   286e4:	ldr	r0, [pc, r0]
   286e8:	ldr	r0, [r0]
   286ec:	ldr	r1, [pc, #60]	; 28730 <fb_scope_table_insert@@Base+0x484>
   286f0:	ldr	r2, [pc, #60]	; 28734 <fb_scope_table_insert@@Base+0x488>
   286f4:	add	r1, pc, r1
   286f8:	add	r2, pc, r2
   286fc:	bl	148bc <fprintf@plt>
   28700:	mov	r0, #1
   28704:	bl	14898 <exit@plt>
   28708:	andeq	sp, r2, r0, lsr #26
   2870c:	andeq	sp, r2, r3, lsr sp
   28710:	muleq	r2, r6, sp
   28714:	andeq	sp, r2, r8, lsr #28
   28718:	andeq	sp, r2, r3, ror sp
   2871c:	ldrdeq	sp, [r2], -r6
   28720:	andeq	sp, r2, pc, lsl lr
   28724:	andeq	sp, r2, r3, asr sp
   28728:			; <UNDEFINED> instruction: 0x0002ddb6
   2872c:			; <UNDEFINED> instruction: 0x000429b8
   28730:	strdeq	sp, [r2], -r0
   28734:	andeq	sp, r2, r3, lsl #28

00028738 <fb_scope_table_insert_item@@Base>:
   28738:	push	{fp, lr}
   2873c:	mov	fp, sp
   28740:	sub	sp, sp, #8
   28744:	mov	r3, r1
   28748:	ldr	r1, [r1]
   2874c:	str	r2, [sp]
   28750:	mov	r2, #0
   28754:	bl	282b0 <fb_scope_table_insert@@Base+0x4>
   28758:	mov	sp, fp
   2875c:	pop	{fp, pc}

00028760 <fb_scope_table_find@@Base>:
   28760:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28764:	add	fp, sp, #28
   28768:	sub	sp, sp, #28
   2876c:	str	r1, [sp, #4]
   28770:	ldr	r1, [r0]
   28774:	cmp	r1, #0
   28778:	str	r1, [sp, #16]
   2877c:	beq	28a34 <fb_scope_table_find@@Base+0x2d4>
   28780:	ldr	ip, [r0, #12]
   28784:	mov	sl, #0
   28788:	cmp	r2, #1
   2878c:	blt	28848 <fb_scope_table_find@@Base+0xe8>
   28790:	ldr	r6, [sp, #4]
   28794:	movw	r8, #11863	; 0x2e57
   28798:	movw	lr, #15186	; 0x3b52
   2879c:	movw	r9, #31153	; 0x79b1
   287a0:	mov	r4, r2
   287a4:	movt	r8, #12137	; 0x2f69
   287a8:	movt	lr, #12137	; 0x2f69
   287ac:	movt	r9, #40503	; 0x9e37
   287b0:	cmp	r4, #0
   287b4:	beq	287ec <fb_scope_table_find@@Base+0x8c>
   287b8:	mov	r7, #0
   287bc:	ldrb	r0, [r6, r7]
   287c0:	cmp	r0, #46	; 0x2e
   287c4:	beq	287d8 <fb_scope_table_find@@Base+0x78>
   287c8:	add	r7, r7, #1
   287cc:	cmp	r4, r7
   287d0:	bne	287bc <fb_scope_table_find@@Base+0x5c>
   287d4:	mov	r7, r4
   287d8:	subs	r3, r7, #1
   287dc:	bne	287f4 <fb_scope_table_find@@Base+0x94>
   287e0:	mov	r7, #1
   287e4:	mov	r1, r8
   287e8:	b	2881c <fb_scope_table_find@@Base+0xbc>
   287ec:	mvn	r3, #0
   287f0:	mov	r7, #0
   287f4:	mov	r1, r8
   287f8:	mov	r5, r6
   287fc:	ldrb	r0, [r5]
   28800:	cmp	r0, #0
   28804:	beq	2881c <fb_scope_table_find@@Base+0xbc>
   28808:	add	r1, r1, r1, lsl #5
   2880c:	subs	r3, r3, #1
   28810:	add	r5, r5, #1
   28814:	eor	r1, r1, r0
   28818:	bne	287fc <fb_scope_table_find@@Base+0x9c>
   2881c:	eor	r0, sl, lr
   28820:	cmp	r7, r4
   28824:	eor	r0, r0, r1
   28828:	mul	sl, r0, r9
   2882c:	beq	288d4 <fb_scope_table_find@@Base+0x174>
   28830:	add	r0, r7, #1
   28834:	add	r6, r6, r0
   28838:	sub	r4, r4, r0
   2883c:	cmp	r4, #0
   28840:	bne	287b8 <fb_scope_table_find@@Base+0x58>
   28844:	b	287ec <fb_scope_table_find@@Base+0x8c>
   28848:	ldr	r6, [sp, #4]
   2884c:	movw	r1, #11863	; 0x2e57
   28850:	movw	lr, #15186	; 0x3b52
   28854:	movw	r8, #31153	; 0x79b1
   28858:	mov	r7, r2
   2885c:	movt	r1, #12137	; 0x2f69
   28860:	movt	lr, #12137	; 0x2f69
   28864:	movt	r8, #40503	; 0x9e37
   28868:	cmp	r6, #0
   2886c:	bne	28894 <fb_scope_table_find@@Base+0x134>
   28870:	b	288d4 <fb_scope_table_find@@Base+0x174>
   28874:	eor	r3, sl, lr
   28878:	ldr	r6, [r6]
   2887c:	adds	r7, r7, #1
   28880:	eor	r0, r3, r0
   28884:	mul	sl, r0, r8
   28888:	bcs	288d4 <fb_scope_table_find@@Base+0x174>
   2888c:	cmp	r6, #0
   28890:	beq	288d4 <fb_scope_table_find@@Base+0x174>
   28894:	ldr	r3, [r6, #4]
   28898:	ldr	r0, [r3, #4]
   2889c:	subs	r4, r0, #1
   288a0:	mov	r0, r1
   288a4:	beq	28874 <fb_scope_table_find@@Base+0x114>
   288a8:	ldr	r3, [r3]
   288ac:	mov	r0, r1
   288b0:	ldrb	r5, [r3]
   288b4:	cmp	r5, #0
   288b8:	beq	28874 <fb_scope_table_find@@Base+0x114>
   288bc:	add	r0, r0, r0, lsl #5
   288c0:	subs	r4, r4, #1
   288c4:	add	r3, r3, #1
   288c8:	eor	r0, r0, r5
   288cc:	bne	288b0 <fb_scope_table_find@@Base+0x150>
   288d0:	b	28874 <fb_scope_table_find@@Base+0x114>
   288d4:	sub	r0, ip, #1
   288d8:	mov	r1, #0
   288dc:	str	r2, [sp]
   288e0:	str	sl, [sp, #8]
   288e4:	str	r0, [sp, #12]
   288e8:	mov	r0, sl
   288ec:	str	r1, [sp, #24]
   288f0:	b	28910 <fb_scope_table_find@@Base+0x1b0>
   288f4:	orrs	r0, r8, r9
   288f8:	beq	28a3c <fb_scope_table_find@@Base+0x2dc>
   288fc:	ldr	r1, [sp, #24]
   28900:	ldr	r0, [sp, #8]
   28904:	add	r1, r1, #1
   28908:	str	r1, [sp, #24]
   2890c:	add	r0, r1, r0
   28910:	ldr	r1, [sp, #12]
   28914:	and	r0, r0, r1
   28918:	ldr	r1, [sp, #16]
   2891c:	ldr	r0, [r1, r0, lsl #2]
   28920:	cmp	r0, #2
   28924:	str	r0, [sp, #20]
   28928:	beq	288fc <fb_scope_table_find@@Base+0x19c>
   2892c:	ldr	r0, [sp, #20]
   28930:	cmp	r0, #0
   28934:	beq	28a34 <fb_scope_table_find@@Base+0x2d4>
   28938:	ldr	r1, [sp]
   2893c:	ldr	r8, [r0]
   28940:	cmp	r1, #0
   28944:	ble	289c8 <fb_scope_table_find@@Base+0x268>
   28948:	ldr	r4, [sp, #4]
   2894c:	cmp	r8, #0
   28950:	beq	288fc <fb_scope_table_find@@Base+0x19c>
   28954:	ldr	r0, [r8, #4]
   28958:	ldr	r5, [r0, #4]
   2895c:	cmp	r5, r1
   28960:	bhi	288fc <fb_scope_table_find@@Base+0x19c>
   28964:	cmp	r5, #0
   28968:	beq	28998 <fb_scope_table_find@@Base+0x238>
   2896c:	ldr	r3, [r0]
   28970:	mov	r0, r4
   28974:	mov	r2, r5
   28978:	ldrb	r7, [r0]
   2897c:	ldrb	r6, [r3]
   28980:	cmp	r6, r7
   28984:	bne	288fc <fb_scope_table_find@@Base+0x19c>
   28988:	add	r3, r3, #1
   2898c:	add	r0, r0, #1
   28990:	subs	r2, r2, #1
   28994:	bne	28978 <fb_scope_table_find@@Base+0x218>
   28998:	cmp	r5, r1
   2899c:	beq	28a24 <fb_scope_table_find@@Base+0x2c4>
   289a0:	ldrb	r0, [r4, r5]
   289a4:	cmp	r0, #46	; 0x2e
   289a8:	bne	288fc <fb_scope_table_find@@Base+0x19c>
   289ac:	ldr	r8, [r8]
   289b0:	add	r0, r5, #1
   289b4:	add	r4, r4, r0
   289b8:	sub	r1, r1, r0
   289bc:	cmp	r8, #0
   289c0:	bne	28954 <fb_scope_table_find@@Base+0x1f4>
   289c4:	b	288fc <fb_scope_table_find@@Base+0x19c>
   289c8:	ldr	r9, [sp, #4]
   289cc:	mov	sl, r1
   289d0:	cmp	r8, #0
   289d4:	cmpne	r9, #0
   289d8:	beq	288f4 <fb_scope_table_find@@Base+0x194>
   289dc:	ldr	r0, [r8, #4]
   289e0:	ldr	r1, [r9, #4]
   289e4:	ldr	r2, [r0, #4]
   289e8:	ldr	r3, [r1, #4]
   289ec:	cmp	r2, r3
   289f0:	bne	288fc <fb_scope_table_find@@Base+0x19c>
   289f4:	ldr	r1, [r1]
   289f8:	ldr	r0, [r0]
   289fc:	bl	14964 <strncmp@plt>
   28a00:	cmp	r0, #0
   28a04:	bne	288fc <fb_scope_table_find@@Base+0x19c>
   28a08:	ldr	r9, [r9]
   28a0c:	ldr	r8, [r8]
   28a10:	adds	sl, sl, #1
   28a14:	bcc	289d0 <fb_scope_table_find@@Base+0x270>
   28a18:	cmp	r8, #0
   28a1c:	bne	288fc <fb_scope_table_find@@Base+0x19c>
   28a20:	b	28a3c <fb_scope_table_find@@Base+0x2dc>
   28a24:	ldr	r0, [r8]
   28a28:	cmp	r0, #0
   28a2c:	bne	288fc <fb_scope_table_find@@Base+0x19c>
   28a30:	b	28a3c <fb_scope_table_find@@Base+0x2dc>
   28a34:	mov	r0, #0
   28a38:	str	r0, [sp, #20]
   28a3c:	ldr	r0, [sp, #20]
   28a40:	sub	sp, fp, #28
   28a44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00028a48 <fb_scope_table_find_item@@Base>:
   28a48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28a4c:	add	fp, sp, #28
   28a50:	sub	sp, sp, #12
   28a54:	ldr	r9, [r0]
   28a58:	cmp	r9, #0
   28a5c:	beq	28bcc <fb_scope_table_find_item@@Base+0x184>
   28a60:	ldr	r1, [r1]
   28a64:	ldr	ip, [r0, #12]
   28a68:	mov	r7, #0
   28a6c:	mov	r6, #0
   28a70:	cmp	r1, #0
   28a74:	str	r1, [sp, #8]
   28a78:	beq	28af8 <fb_scope_table_find_item@@Base+0xb0>
   28a7c:	ldr	r5, [sp, #8]
   28a80:	movw	r0, #11863	; 0x2e57
   28a84:	movw	lr, #15186	; 0x3b52
   28a88:	movw	r8, #31153	; 0x79b1
   28a8c:	mov	r6, #0
   28a90:	movt	r0, #12137	; 0x2f69
   28a94:	movt	lr, #12137	; 0x2f69
   28a98:	movt	r8, #40503	; 0x9e37
   28a9c:	b	28ab8 <fb_scope_table_find_item@@Base+0x70>
   28aa0:	eor	r1, r6, r1
   28aa4:	ldr	r5, [r5]
   28aa8:	eor	r1, r1, lr
   28aac:	mul	r6, r1, r8
   28ab0:	cmp	r5, #0
   28ab4:	beq	28af8 <fb_scope_table_find_item@@Base+0xb0>
   28ab8:	ldr	r2, [r5, #4]
   28abc:	ldr	r1, [r2, #4]
   28ac0:	subs	r4, r1, #1
   28ac4:	mov	r1, r0
   28ac8:	beq	28aa0 <fb_scope_table_find_item@@Base+0x58>
   28acc:	ldr	r2, [r2]
   28ad0:	mov	r1, r0
   28ad4:	ldrb	r3, [r2]
   28ad8:	cmp	r3, #0
   28adc:	beq	28aa0 <fb_scope_table_find_item@@Base+0x58>
   28ae0:	add	r1, r1, r1, lsl #5
   28ae4:	subs	r4, r4, #1
   28ae8:	add	r2, r2, #1
   28aec:	eor	r1, r1, r3
   28af0:	bne	28ad4 <fb_scope_table_find_item@@Base+0x8c>
   28af4:	b	28aa0 <fb_scope_table_find_item@@Base+0x58>
   28af8:	ldr	r0, [sp, #8]
   28afc:	sub	r5, ip, #1
   28b00:	cmp	r0, #0
   28b04:	movwne	r0, #1
   28b08:	str	r0, [sp, #4]
   28b0c:	mov	r0, r6
   28b10:	b	28b2c <fb_scope_table_find_item@@Base+0xe4>
   28b14:	ldr	r1, [sp, #4]
   28b18:	cmp	r1, #0
   28b1c:	cmpeq	r0, #0
   28b20:	beq	28bd0 <fb_scope_table_find_item@@Base+0x188>
   28b24:	add	r7, r7, #1
   28b28:	add	r0, r7, r6
   28b2c:	and	r0, r0, r5
   28b30:	ldr	r4, [r9, r0, lsl #2]
   28b34:	cmp	r4, #2
   28b38:	beq	28b24 <fb_scope_table_find_item@@Base+0xdc>
   28b3c:	cmp	r4, #0
   28b40:	beq	28bcc <fb_scope_table_find_item@@Base+0x184>
   28b44:	ldr	r8, [r4]
   28b48:	ldr	r1, [sp, #8]
   28b4c:	cmp	r8, #0
   28b50:	mov	r0, r8
   28b54:	movwne	r0, #1
   28b58:	cmp	r1, #0
   28b5c:	beq	28b14 <fb_scope_table_find_item@@Base+0xcc>
   28b60:	ldr	r1, [sp, #4]
   28b64:	cmp	r8, #0
   28b68:	beq	28b18 <fb_scope_table_find_item@@Base+0xd0>
   28b6c:	ldr	sl, [sp, #8]
   28b70:	ldr	r0, [r8, #4]
   28b74:	ldr	r1, [sl, #4]
   28b78:	ldr	r2, [r0, #4]
   28b7c:	ldr	r3, [r1, #4]
   28b80:	cmp	r2, r3
   28b84:	bne	28b24 <fb_scope_table_find_item@@Base+0xdc>
   28b88:	ldr	r1, [r1]
   28b8c:	ldr	r0, [r0]
   28b90:	bl	14964 <strncmp@plt>
   28b94:	cmp	r0, #0
   28b98:	bne	28b24 <fb_scope_table_find_item@@Base+0xdc>
   28b9c:	ldr	sl, [sl]
   28ba0:	ldr	r8, [r8]
   28ba4:	cmp	sl, #0
   28ba8:	mov	r1, sl
   28bac:	mov	r0, r8
   28bb0:	movwne	r1, #1
   28bb4:	cmp	r8, #0
   28bb8:	movwne	r0, #1
   28bbc:	cmp	sl, #0
   28bc0:	cmpne	r8, #0
   28bc4:	bne	28b70 <fb_scope_table_find_item@@Base+0x128>
   28bc8:	b	28b18 <fb_scope_table_find_item@@Base+0xd0>
   28bcc:	mov	r4, #0
   28bd0:	mov	r0, r4
   28bd4:	sub	sp, fp, #28
   28bd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00028bdc <fb_scope_table_remove@@Base>:
   28bdc:	b	28be0 <fb_scope_table_remove@@Base+0x4>
   28be0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28be4:	add	fp, sp, #28
   28be8:	sub	sp, sp, #28
   28bec:	str	r1, [sp, #8]
   28bf0:	ldr	r1, [r0]
   28bf4:	cmp	r1, #0
   28bf8:	str	r1, [sp, #24]
   28bfc:	beq	28ec4 <fb_scope_table_remove@@Base+0x2e8>
   28c00:	ldr	ip, [r0, #12]
   28c04:	cmp	r2, #1
   28c08:	mov	r6, #0
   28c0c:	stm	sp, {r0, r2}
   28c10:	blt	28ccc <fb_scope_table_remove@@Base+0xf0>
   28c14:	ldr	r4, [sp, #8]
   28c18:	movw	r8, #11863	; 0x2e57
   28c1c:	movw	lr, #15186	; 0x3b52
   28c20:	movw	r9, #31153	; 0x79b1
   28c24:	mov	r0, r2
   28c28:	movt	r8, #12137	; 0x2f69
   28c2c:	movt	lr, #12137	; 0x2f69
   28c30:	movt	r9, #40503	; 0x9e37
   28c34:	cmp	r0, #0
   28c38:	beq	28c70 <fb_scope_table_remove@@Base+0x94>
   28c3c:	mov	r7, #0
   28c40:	ldrb	r1, [r4, r7]
   28c44:	cmp	r1, #46	; 0x2e
   28c48:	beq	28c5c <fb_scope_table_remove@@Base+0x80>
   28c4c:	add	r7, r7, #1
   28c50:	cmp	r0, r7
   28c54:	bne	28c40 <fb_scope_table_remove@@Base+0x64>
   28c58:	mov	r7, r0
   28c5c:	subs	r2, r7, #1
   28c60:	bne	28c78 <fb_scope_table_remove@@Base+0x9c>
   28c64:	mov	r7, #1
   28c68:	mov	r1, r8
   28c6c:	b	28ca0 <fb_scope_table_remove@@Base+0xc4>
   28c70:	mvn	r2, #0
   28c74:	mov	r7, #0
   28c78:	mov	r1, r8
   28c7c:	mov	r5, r4
   28c80:	ldrb	r3, [r5]
   28c84:	cmp	r3, #0
   28c88:	beq	28ca0 <fb_scope_table_remove@@Base+0xc4>
   28c8c:	add	r1, r1, r1, lsl #5
   28c90:	subs	r2, r2, #1
   28c94:	add	r5, r5, #1
   28c98:	eor	r1, r1, r3
   28c9c:	bne	28c80 <fb_scope_table_remove@@Base+0xa4>
   28ca0:	eor	r2, r6, lr
   28ca4:	cmp	r7, r0
   28ca8:	eor	r1, r2, r1
   28cac:	mul	r6, r1, r9
   28cb0:	beq	28d58 <fb_scope_table_remove@@Base+0x17c>
   28cb4:	add	r1, r7, #1
   28cb8:	add	r4, r4, r1
   28cbc:	sub	r0, r0, r1
   28cc0:	cmp	r0, #0
   28cc4:	bne	28c3c <fb_scope_table_remove@@Base+0x60>
   28cc8:	b	28c70 <fb_scope_table_remove@@Base+0x94>
   28ccc:	ldr	r7, [sp, #8]
   28cd0:	movw	r5, #11863	; 0x2e57
   28cd4:	movw	lr, #15186	; 0x3b52
   28cd8:	movw	r8, #31153	; 0x79b1
   28cdc:	mov	r3, r2
   28ce0:	movt	r5, #12137	; 0x2f69
   28ce4:	movt	lr, #12137	; 0x2f69
   28ce8:	movt	r8, #40503	; 0x9e37
   28cec:	cmp	r7, #0
   28cf0:	bne	28d18 <fb_scope_table_remove@@Base+0x13c>
   28cf4:	b	28d58 <fb_scope_table_remove@@Base+0x17c>
   28cf8:	eor	r1, r6, lr
   28cfc:	ldr	r7, [r7]
   28d00:	adds	r3, r3, #1
   28d04:	eor	r0, r1, r0
   28d08:	mul	r6, r0, r8
   28d0c:	bcs	28d58 <fb_scope_table_remove@@Base+0x17c>
   28d10:	cmp	r7, #0
   28d14:	beq	28d58 <fb_scope_table_remove@@Base+0x17c>
   28d18:	ldr	r1, [r7, #4]
   28d1c:	ldr	r0, [r1, #4]
   28d20:	subs	r4, r0, #1
   28d24:	mov	r0, r5
   28d28:	beq	28cf8 <fb_scope_table_remove@@Base+0x11c>
   28d2c:	ldr	r1, [r1]
   28d30:	mov	r0, r5
   28d34:	ldrb	r2, [r1]
   28d38:	cmp	r2, #0
   28d3c:	beq	28cf8 <fb_scope_table_remove@@Base+0x11c>
   28d40:	add	r0, r0, r0, lsl #5
   28d44:	subs	r4, r4, #1
   28d48:	add	r1, r1, #1
   28d4c:	eor	r0, r0, r2
   28d50:	bne	28d34 <fb_scope_table_remove@@Base+0x158>
   28d54:	b	28cf8 <fb_scope_table_remove@@Base+0x11c>
   28d58:	sub	r0, ip, #1
   28d5c:	mov	r8, #0
   28d60:	str	r6, [sp, #12]
   28d64:	str	r0, [sp, #20]
   28d68:	mov	r0, r6
   28d6c:	b	28d84 <fb_scope_table_remove@@Base+0x1a8>
   28d70:	orrs	r0, sl, r4
   28d74:	beq	28ea0 <fb_scope_table_remove@@Base+0x2c4>
   28d78:	ldr	r0, [sp, #12]
   28d7c:	add	r8, r8, #1
   28d80:	add	r0, r8, r0
   28d84:	ldr	r1, [sp, #20]
   28d88:	and	r1, r0, r1
   28d8c:	ldr	r0, [sp, #24]
   28d90:	str	r1, [sp, #16]
   28d94:	ldr	r9, [r0, r1, lsl #2]
   28d98:	cmp	r9, #2
   28d9c:	beq	28d78 <fb_scope_table_remove@@Base+0x19c>
   28da0:	cmp	r9, #0
   28da4:	beq	28ec4 <fb_scope_table_remove@@Base+0x2e8>
   28da8:	ldr	r1, [sp, #4]
   28dac:	ldr	sl, [r9]
   28db0:	cmp	r1, #0
   28db4:	ble	28e38 <fb_scope_table_remove@@Base+0x25c>
   28db8:	ldr	r5, [sp, #8]
   28dbc:	cmp	sl, #0
   28dc0:	beq	28d78 <fb_scope_table_remove@@Base+0x19c>
   28dc4:	ldr	r0, [sl, #4]
   28dc8:	ldr	r4, [r0, #4]
   28dcc:	cmp	r4, r1
   28dd0:	bhi	28d78 <fb_scope_table_remove@@Base+0x19c>
   28dd4:	cmp	r4, #0
   28dd8:	beq	28e08 <fb_scope_table_remove@@Base+0x22c>
   28ddc:	ldr	r3, [r0]
   28de0:	mov	r0, r5
   28de4:	mov	r2, r4
   28de8:	ldrb	r6, [r0]
   28dec:	ldrb	r7, [r3]
   28df0:	cmp	r7, r6
   28df4:	bne	28d78 <fb_scope_table_remove@@Base+0x19c>
   28df8:	add	r3, r3, #1
   28dfc:	add	r0, r0, #1
   28e00:	subs	r2, r2, #1
   28e04:	bne	28de8 <fb_scope_table_remove@@Base+0x20c>
   28e08:	cmp	r4, r1
   28e0c:	beq	28e94 <fb_scope_table_remove@@Base+0x2b8>
   28e10:	ldrb	r0, [r5, r4]
   28e14:	cmp	r0, #46	; 0x2e
   28e18:	bne	28d78 <fb_scope_table_remove@@Base+0x19c>
   28e1c:	ldr	sl, [sl]
   28e20:	add	r0, r4, #1
   28e24:	add	r5, r5, r0
   28e28:	sub	r1, r1, r0
   28e2c:	cmp	sl, #0
   28e30:	bne	28dc4 <fb_scope_table_remove@@Base+0x1e8>
   28e34:	b	28d78 <fb_scope_table_remove@@Base+0x19c>
   28e38:	ldr	r4, [sp, #8]
   28e3c:	mov	r5, r1
   28e40:	cmp	sl, #0
   28e44:	cmpne	r4, #0
   28e48:	beq	28d70 <fb_scope_table_remove@@Base+0x194>
   28e4c:	ldr	r0, [sl, #4]
   28e50:	ldr	r1, [r4, #4]
   28e54:	ldr	r2, [r0, #4]
   28e58:	ldr	r3, [r1, #4]
   28e5c:	cmp	r2, r3
   28e60:	bne	28d78 <fb_scope_table_remove@@Base+0x19c>
   28e64:	ldr	r1, [r1]
   28e68:	ldr	r0, [r0]
   28e6c:	bl	14964 <strncmp@plt>
   28e70:	cmp	r0, #0
   28e74:	bne	28d78 <fb_scope_table_remove@@Base+0x19c>
   28e78:	ldr	r4, [r4]
   28e7c:	ldr	sl, [sl]
   28e80:	adds	r5, r5, #1
   28e84:	bcc	28e40 <fb_scope_table_remove@@Base+0x264>
   28e88:	cmp	sl, #0
   28e8c:	bne	28d78 <fb_scope_table_remove@@Base+0x19c>
   28e90:	b	28ea0 <fb_scope_table_remove@@Base+0x2c4>
   28e94:	ldr	r0, [sl]
   28e98:	cmp	r0, #0
   28e9c:	bne	28d78 <fb_scope_table_remove@@Base+0x19c>
   28ea0:	ldr	r1, [sp, #24]
   28ea4:	ldr	r2, [sp, #16]
   28ea8:	mov	r0, #2
   28eac:	str	r0, [r1, r2, lsl #2]
   28eb0:	ldr	r1, [sp]
   28eb4:	ldr	r0, [r1, #8]
   28eb8:	sub	r0, r0, #1
   28ebc:	str	r0, [r1, #8]
   28ec0:	b	28ec8 <fb_scope_table_remove@@Base+0x2ec>
   28ec4:	mov	r9, #0
   28ec8:	mov	r0, r9
   28ecc:	sub	sp, fp, #28
   28ed0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00028ed4 <fb_scope_table_remove_item@@Base>:
   28ed4:	ldr	r1, [r1]
   28ed8:	mov	r2, #0
   28edc:	b	28be0 <fb_scope_table_remove@@Base+0x4>

00028ee0 <fb_scope_table_visit@@Base>:
   28ee0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   28ee4:	add	fp, sp, #24
   28ee8:	mov	r6, r0
   28eec:	ldr	r0, [r0, #12]
   28ef0:	cmp	r0, #0
   28ef4:	beq	28f38 <fb_scope_table_visit@@Base+0x58>
   28ef8:	ldr	r7, [r6]
   28efc:	mov	r8, r2
   28f00:	mov	r5, r1
   28f04:	mov	r4, #0
   28f08:	b	28f18 <fb_scope_table_visit@@Base+0x38>
   28f0c:	add	r4, r4, #1
   28f10:	cmp	r4, r0
   28f14:	bcs	28f38 <fb_scope_table_visit@@Base+0x58>
   28f18:	ldr	r1, [r7, r4, lsl #2]
   28f1c:	orr	r2, r1, #2
   28f20:	cmp	r2, #2
   28f24:	beq	28f0c <fb_scope_table_visit@@Base+0x2c>
   28f28:	mov	r0, r8
   28f2c:	blx	r5
   28f30:	ldr	r0, [r6, #12]
   28f34:	b	28f0c <fb_scope_table_visit@@Base+0x2c>
   28f38:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00028f3c <fb_schema_table_clear@@Base>:
   28f3c:	push	{r4, sl, fp, lr}
   28f40:	add	fp, sp, #8
   28f44:	mov	r4, r0
   28f48:	ldr	r0, [r0]
   28f4c:	cmp	r0, #0
   28f50:	beq	28f58 <fb_schema_table_clear@@Base+0x1c>
   28f54:	bl	147fc <free@plt>
   28f58:	vmov.i32	q8, #0	; 0x00000000
   28f5c:	vst1.32	{d16-d17}, [r4]
   28f60:	pop	{r4, sl, fp, pc}

00028f64 <fb_schema_table_destroy@@Base>:
   28f64:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   28f68:	add	fp, sp, #24
   28f6c:	mov	r4, r0
   28f70:	cmp	r1, #0
   28f74:	beq	28fc4 <fb_schema_table_destroy@@Base+0x60>
   28f78:	ldr	r0, [r4, #12]
   28f7c:	cmp	r0, #0
   28f80:	beq	28fc4 <fb_schema_table_destroy@@Base+0x60>
   28f84:	ldr	r7, [r4]
   28f88:	mov	r8, r2
   28f8c:	mov	r6, r1
   28f90:	mov	r5, #0
   28f94:	b	28fa4 <fb_schema_table_destroy@@Base+0x40>
   28f98:	add	r5, r5, #1
   28f9c:	cmp	r5, r0
   28fa0:	bcs	28fc4 <fb_schema_table_destroy@@Base+0x60>
   28fa4:	ldr	r1, [r7, r5, lsl #2]
   28fa8:	orr	r2, r1, #2
   28fac:	cmp	r2, #2
   28fb0:	beq	28f98 <fb_schema_table_destroy@@Base+0x34>
   28fb4:	mov	r0, r8
   28fb8:	blx	r6
   28fbc:	ldr	r0, [r4, #12]
   28fc0:	b	28f98 <fb_schema_table_destroy@@Base+0x34>
   28fc4:	ldr	r0, [r4]
   28fc8:	cmp	r0, #0
   28fcc:	beq	28fd4 <fb_schema_table_destroy@@Base+0x70>
   28fd0:	bl	147fc <free@plt>
   28fd4:	vmov.i32	q8, #0	; 0x00000000
   28fd8:	vst1.32	{d16-d17}, [r4]
   28fdc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00028fe0 <fb_schema_table_init@@Base>:
   28fe0:	push	{r4, r5, fp, lr}
   28fe4:	add	fp, sp, #8
   28fe8:	mov	r4, r0
   28fec:	mov	r2, #4
   28ff0:	mov	r0, #179	; 0xb3
   28ff4:	mul	r3, r2, r0
   28ff8:	mov	r5, r2
   28ffc:	lsl	r2, r2, #1
   29000:	cmp	r1, r3, lsr #8
   29004:	bhi	28ff4 <fb_schema_table_init@@Base+0x14>
   29008:	mov	r0, r5
   2900c:	mov	r1, #4
   29010:	bl	147cc <calloc@plt>
   29014:	cmp	r0, #0
   29018:	str	r0, [r4]
   2901c:	mvneq	r0, #0
   29020:	movne	r0, #0
   29024:	strne	r0, [r4, #4]
   29028:	strne	r0, [r4, #8]
   2902c:	strne	r5, [r4, #12]
   29030:	pop	{r4, r5, fp, pc}

00029034 <fb_schema_table_resize@@Base>:
   29034:	b	29038 <fb_schema_table_resize@@Base+0x4>
   29038:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2903c:	add	fp, sp, #24
   29040:	sub	sp, sp, #24
   29044:	mov	r4, r0
   29048:	ldr	r5, [r0]
   2904c:	ldr	r0, [r0, #8]
   29050:	mov	r2, #4
   29054:	cmp	r0, r1
   29058:	movhi	r1, r0
   2905c:	mov	r0, #179	; 0xb3
   29060:	mul	r3, r2, r0
   29064:	mov	r6, r2
   29068:	lsl	r2, r2, #1
   2906c:	cmp	r1, r3, lsr #8
   29070:	bhi	29060 <fb_schema_table_resize@@Base+0x2c>
   29074:	mov	r0, r6
   29078:	mov	r1, #4
   2907c:	bl	147cc <calloc@plt>
   29080:	cmp	r0, #0
   29084:	str	r0, [sp, #8]
   29088:	beq	290f4 <fb_schema_table_resize@@Base+0xc0>
   2908c:	mov	r7, #0
   29090:	str	r6, [sp, #20]
   29094:	str	r7, [sp, #12]
   29098:	str	r7, [sp, #16]
   2909c:	ldr	r0, [r4, #12]
   290a0:	cmp	r0, #0
   290a4:	beq	29104 <fb_schema_table_resize@@Base+0xd0>
   290a8:	mov	r8, #3
   290ac:	add	r6, sp, #8
   290b0:	b	290c0 <fb_schema_table_resize@@Base+0x8c>
   290b4:	add	r7, r7, #1
   290b8:	cmp	r7, r0
   290bc:	bcs	29100 <fb_schema_table_resize@@Base+0xcc>
   290c0:	ldr	r3, [r5, r7, lsl #2]
   290c4:	orr	r1, r3, #2
   290c8:	cmp	r1, #2
   290cc:	beq	290b4 <fb_schema_table_resize@@Base+0x80>
   290d0:	ldr	r2, [r3, #144]	; 0x90
   290d4:	ldr	r9, [r3, #148]	; 0x94
   290d8:	mov	r0, r6
   290dc:	str	r8, [sp]
   290e0:	mov	r1, r2
   290e4:	mov	r2, r9
   290e8:	bl	29130 <fb_schema_table_insert@@Base+0x4>
   290ec:	ldr	r0, [r4, #12]
   290f0:	b	290b4 <fb_schema_table_resize@@Base+0x80>
   290f4:	mvn	r0, #0
   290f8:	sub	sp, fp, #24
   290fc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   29100:	ldr	r5, [r4]
   29104:	cmp	r5, #0
   29108:	beq	29114 <fb_schema_table_resize@@Base+0xe0>
   2910c:	mov	r0, r5
   29110:	bl	147fc <free@plt>
   29114:	add	r0, sp, #8
   29118:	vld1.64	{d16-d17}, [r0]
   2911c:	mov	r0, #0
   29120:	vst1.32	{d16-d17}, [r4]
   29124:	sub	sp, fp, #24
   29128:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0002912c <fb_schema_table_insert@@Base>:
   2912c:	b	29130 <fb_schema_table_insert@@Base+0x4>
   29130:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29134:	add	fp, sp, #28
   29138:	sub	sp, sp, #36	; 0x24
   2913c:	cmp	r3, #2
   29140:	str	r1, [sp, #20]
   29144:	beq	292b0 <fb_schema_table_insert@@Base+0x184>
   29148:	mov	sl, r3
   2914c:	cmp	r3, #1
   29150:	beq	292d0 <fb_schema_table_insert@@Base+0x1a4>
   29154:	cmp	sl, #0
   29158:	beq	292f0 <fb_schema_table_insert@@Base+0x1c4>
   2915c:	mov	r7, r0
   29160:	ldr	r0, [r0, #8]
   29164:	mov	r1, #179	; 0xb3
   29168:	mov	r6, r2
   2916c:	ldr	r4, [r7, #12]
   29170:	mul	r1, r4, r1
   29174:	cmp	r0, r1, lsr #8
   29178:	bcc	29194 <fb_schema_table_insert@@Base+0x68>
   2917c:	lsl	r1, r0, #1
   29180:	mov	r0, r7
   29184:	bl	29038 <fb_schema_table_resize@@Base+0x4>
   29188:	cmp	r0, #0
   2918c:	bne	29310 <fb_schema_table_insert@@Base+0x1e4>
   29190:	ldr	r4, [r7, #12]
   29194:	add	r0, sp, #24
   29198:	ldr	r9, [r7]
   2919c:	movw	r1, #15186	; 0x3b52
   291a0:	mov	r2, r6
   291a4:	mov	r3, #0
   291a8:	mov	r8, #0
   291ac:	str	r0, [sp, #4]
   291b0:	ldr	r0, [sp, #20]
   291b4:	movt	r1, #12137	; 0x2f69
   291b8:	str	r1, [sp]
   291bc:	bl	3bdcc <cmetrohash64_1@@Base>
   291c0:	ldr	r2, [fp, #8]
   291c4:	ldr	r1, [sp, #24]
   291c8:	sub	r5, r4, #1
   291cc:	orr	r2, r2, #1
   291d0:	and	r0, r5, r1
   291d4:	cmp	r2, #3
   291d8:	bne	29208 <fb_schema_table_insert@@Base+0xdc>
   291dc:	ldr	r2, [r7, #8]
   291e0:	add	r2, r2, #1
   291e4:	str	r2, [r7, #8]
   291e8:	mov	r7, r9
   291ec:	add	r1, r1, #1
   291f0:	ldr	r0, [r7, r0, lsl #2]!
   291f4:	orr	r0, r0, #2
   291f8:	cmp	r0, #2
   291fc:	beq	29278 <fb_schema_table_insert@@Base+0x14c>
   29200:	and	r0, r1, r5
   29204:	b	291e8 <fb_schema_table_insert@@Base+0xbc>
   29208:	str	sl, [sp, #16]
   2920c:	add	sl, r1, #1
   29210:	str	r7, [sp, #12]
   29214:	b	29228 <fb_schema_table_insert@@Base+0xfc>
   29218:	cmp	r8, #0
   2921c:	moveq	r8, r7
   29220:	and	r0, sl, r5
   29224:	add	sl, sl, #1
   29228:	mov	r7, r9
   2922c:	ldr	r4, [r7, r0, lsl #2]!
   29230:	cmp	r4, #2
   29234:	beq	29218 <fb_schema_table_insert@@Base+0xec>
   29238:	cmp	r4, #0
   2923c:	beq	29280 <fb_schema_table_insert@@Base+0x154>
   29240:	ldr	r0, [r4, #148]	; 0x94
   29244:	cmp	r0, r6
   29248:	bne	29220 <fb_schema_table_insert@@Base+0xf4>
   2924c:	ldr	r1, [r4, #144]	; 0x90
   29250:	ldr	r0, [sp, #20]
   29254:	mov	r2, r6
   29258:	bl	148a4 <bcmp@plt>
   2925c:	cmp	r0, #0
   29260:	bne	29220 <fb_schema_table_insert@@Base+0xf4>
   29264:	ldr	r0, [fp, #8]
   29268:	ldr	sl, [sp, #16]
   2926c:	cmp	r0, #0
   29270:	streq	sl, [r7]
   29274:	b	292a4 <fb_schema_table_insert@@Base+0x178>
   29278:	mov	r4, #0
   2927c:	b	292a0 <fb_schema_table_insert@@Base+0x174>
   29280:	ldr	r1, [sp, #12]
   29284:	ldr	sl, [sp, #16]
   29288:	cmp	r8, #0
   2928c:	mov	r4, #0
   29290:	movne	r7, r8
   29294:	ldr	r0, [r1, #8]
   29298:	add	r0, r0, #1
   2929c:	str	r0, [r1, #8]
   292a0:	str	sl, [r7]
   292a4:	mov	r0, r4
   292a8:	sub	sp, fp, #28
   292ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   292b0:	ldr	r0, [pc, #140]	; 29344 <fb_schema_table_insert@@Base+0x218>
   292b4:	ldr	r1, [pc, #140]	; 29348 <fb_schema_table_insert@@Base+0x21c>
   292b8:	ldr	r3, [pc, #140]	; 2934c <fb_schema_table_insert@@Base+0x220>
   292bc:	mov	r2, #115	; 0x73
   292c0:	add	r0, pc, r0
   292c4:	add	r1, pc, r1
   292c8:	add	r3, pc, r3
   292cc:	bl	1497c <__assert_fail@plt>
   292d0:	ldr	r0, [pc, #120]	; 29350 <fb_schema_table_insert@@Base+0x224>
   292d4:	ldr	r1, [pc, #120]	; 29354 <fb_schema_table_insert@@Base+0x228>
   292d8:	ldr	r3, [pc, #120]	; 29358 <fb_schema_table_insert@@Base+0x22c>
   292dc:	mov	r2, #116	; 0x74
   292e0:	add	r0, pc, r0
   292e4:	add	r1, pc, r1
   292e8:	add	r3, pc, r3
   292ec:	bl	1497c <__assert_fail@plt>
   292f0:	ldr	r0, [pc, #64]	; 29338 <fb_schema_table_insert@@Base+0x20c>
   292f4:	ldr	r1, [pc, #64]	; 2933c <fb_schema_table_insert@@Base+0x210>
   292f8:	ldr	r3, [pc, #64]	; 29340 <fb_schema_table_insert@@Base+0x214>
   292fc:	mov	r2, #114	; 0x72
   29300:	add	r0, pc, r0
   29304:	add	r1, pc, r1
   29308:	add	r3, pc, r3
   2930c:	bl	1497c <__assert_fail@plt>
   29310:	ldr	r0, [pc, #68]	; 2935c <fb_schema_table_insert@@Base+0x230>
   29314:	ldr	r0, [pc, r0]
   29318:	ldr	r0, [r0]
   2931c:	ldr	r1, [pc, #60]	; 29360 <fb_schema_table_insert@@Base+0x234>
   29320:	ldr	r2, [pc, #60]	; 29364 <fb_schema_table_insert@@Base+0x238>
   29324:	add	r1, pc, r1
   29328:	add	r2, pc, r2
   2932c:	bl	148bc <fprintf@plt>
   29330:	mov	r0, #1
   29334:	bl	14898 <exit@plt>
   29338:	strdeq	sp, [r2], -r0
   2933c:	andeq	sp, r2, r3, lsl #2
   29340:	andeq	sp, r2, r6, ror #2
   29344:	strdeq	sp, [r2], -r8
   29348:	andeq	sp, r2, r3, asr #2
   2934c:	andeq	sp, r2, r6, lsr #3
   29350:	andeq	sp, r2, pc, ror #3
   29354:	andeq	sp, r2, r3, lsr #2
   29358:	andeq	sp, r2, r6, lsl #3
   2935c:	andeq	r1, r4, r8, lsl #27
   29360:	andeq	sp, r2, r0, asr #3
   29364:	ldrdeq	sp, [r2], -r3

00029368 <fb_schema_table_insert_item@@Base>:
   29368:	push	{r4, r5, fp, lr}
   2936c:	add	fp, sp, #8
   29370:	sub	sp, sp, #8
   29374:	ldrd	r4, [r1, #144]	; 0x90
   29378:	mov	r3, r1
   2937c:	str	r2, [sp]
   29380:	mov	r1, r4
   29384:	mov	r2, r5
   29388:	bl	29130 <fb_schema_table_insert@@Base+0x4>
   2938c:	sub	sp, fp, #8
   29390:	pop	{r4, r5, fp, pc}

00029394 <fb_schema_table_find@@Base>:
   29394:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   29398:	add	fp, sp, #24
   2939c:	sub	sp, sp, #16
   293a0:	ldr	r7, [r0]
   293a4:	cmp	r7, #0
   293a8:	beq	29428 <fb_schema_table_find@@Base+0x94>
   293ac:	mov	r8, r1
   293b0:	movw	r1, #15186	; 0x3b52
   293b4:	ldr	r4, [r0, #12]
   293b8:	add	r0, sp, #8
   293bc:	mov	r3, #0
   293c0:	mov	r9, r2
   293c4:	movt	r1, #12137	; 0x2f69
   293c8:	str	r0, [sp, #4]
   293cc:	mov	r0, r8
   293d0:	str	r1, [sp]
   293d4:	bl	3bdcc <cmetrohash64_1@@Base>
   293d8:	ldr	r5, [sp, #8]
   293dc:	sub	r4, r4, #1
   293e0:	b	293e8 <fb_schema_table_find@@Base+0x54>
   293e4:	add	r5, r5, #1
   293e8:	and	r0, r5, r4
   293ec:	ldr	r6, [r7, r0, lsl #2]
   293f0:	cmp	r6, #2
   293f4:	beq	293e4 <fb_schema_table_find@@Base+0x50>
   293f8:	cmp	r6, #0
   293fc:	beq	29428 <fb_schema_table_find@@Base+0x94>
   29400:	ldr	r0, [r6, #148]	; 0x94
   29404:	cmp	r0, r9
   29408:	bne	293e4 <fb_schema_table_find@@Base+0x50>
   2940c:	ldr	r1, [r6, #144]	; 0x90
   29410:	mov	r0, r8
   29414:	mov	r2, r9
   29418:	bl	148a4 <bcmp@plt>
   2941c:	cmp	r0, #0
   29420:	bne	293e4 <fb_schema_table_find@@Base+0x50>
   29424:	b	2942c <fb_schema_table_find@@Base+0x98>
   29428:	mov	r6, #0
   2942c:	mov	r0, r6
   29430:	sub	sp, fp, #24
   29434:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00029438 <fb_schema_table_find_item@@Base>:
   29438:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2943c:	add	fp, sp, #24
   29440:	sub	sp, sp, #16
   29444:	ldr	r5, [r0]
   29448:	cmp	r5, #0
   2944c:	beq	294cc <fb_schema_table_find_item@@Base+0x94>
   29450:	ldrd	r8, [r1, #144]	; 0x90
   29454:	movw	r1, #15186	; 0x3b52
   29458:	ldr	r4, [r0, #12]
   2945c:	add	r0, sp, #8
   29460:	mov	r3, #0
   29464:	movt	r1, #12137	; 0x2f69
   29468:	str	r0, [sp, #4]
   2946c:	str	r1, [sp]
   29470:	mov	r0, r8
   29474:	mov	r2, r9
   29478:	bl	3bdcc <cmetrohash64_1@@Base>
   2947c:	ldr	r6, [sp, #8]
   29480:	sub	r7, r4, #1
   29484:	b	2948c <fb_schema_table_find_item@@Base+0x54>
   29488:	add	r6, r6, #1
   2948c:	and	r0, r6, r7
   29490:	ldr	r4, [r5, r0, lsl #2]
   29494:	cmp	r4, #2
   29498:	beq	29488 <fb_schema_table_find_item@@Base+0x50>
   2949c:	cmp	r4, #0
   294a0:	beq	294cc <fb_schema_table_find_item@@Base+0x94>
   294a4:	ldr	r0, [r4, #148]	; 0x94
   294a8:	cmp	r0, r9
   294ac:	bne	29488 <fb_schema_table_find_item@@Base+0x50>
   294b0:	ldr	r1, [r4, #144]	; 0x90
   294b4:	mov	r0, r8
   294b8:	mov	r2, r9
   294bc:	bl	148a4 <bcmp@plt>
   294c0:	cmp	r0, #0
   294c4:	bne	29488 <fb_schema_table_find_item@@Base+0x50>
   294c8:	b	294d0 <fb_schema_table_find_item@@Base+0x98>
   294cc:	mov	r4, #0
   294d0:	mov	r0, r4
   294d4:	sub	sp, fp, #24
   294d8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000294dc <fb_schema_table_remove@@Base>:
   294dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   294e0:	add	fp, sp, #28
   294e4:	sub	sp, sp, #28
   294e8:	ldr	r4, [r0]
   294ec:	cmp	r4, #0
   294f0:	beq	2958c <fb_schema_table_remove@@Base+0xb0>
   294f4:	mov	r9, r1
   294f8:	movw	r1, #15186	; 0x3b52
   294fc:	ldr	r5, [r0, #12]
   29500:	str	r0, [sp, #12]
   29504:	add	r0, sp, #16
   29508:	mov	r3, #0
   2950c:	mov	sl, r2
   29510:	movt	r1, #12137	; 0x2f69
   29514:	str	r0, [sp, #4]
   29518:	mov	r0, r9
   2951c:	str	r1, [sp]
   29520:	bl	3bdcc <cmetrohash64_1@@Base>
   29524:	ldr	r6, [sp, #16]
   29528:	sub	r5, r5, #1
   2952c:	b	29534 <fb_schema_table_remove@@Base+0x58>
   29530:	add	r6, r6, #1
   29534:	and	r8, r6, r5
   29538:	ldr	r7, [r4, r8, lsl #2]
   2953c:	cmp	r7, #2
   29540:	beq	29530 <fb_schema_table_remove@@Base+0x54>
   29544:	cmp	r7, #0
   29548:	beq	2958c <fb_schema_table_remove@@Base+0xb0>
   2954c:	ldr	r0, [r7, #148]	; 0x94
   29550:	cmp	r0, sl
   29554:	bne	29530 <fb_schema_table_remove@@Base+0x54>
   29558:	ldr	r1, [r7, #144]	; 0x90
   2955c:	mov	r0, r9
   29560:	mov	r2, sl
   29564:	bl	148a4 <bcmp@plt>
   29568:	cmp	r0, #0
   2956c:	bne	29530 <fb_schema_table_remove@@Base+0x54>
   29570:	ldr	r1, [sp, #12]
   29574:	mov	r0, #2
   29578:	str	r0, [r4, r8, lsl #2]
   2957c:	ldr	r0, [r1, #8]
   29580:	sub	r0, r0, #1
   29584:	str	r0, [r1, #8]
   29588:	b	29590 <fb_schema_table_remove@@Base+0xb4>
   2958c:	mov	r7, #0
   29590:	mov	r0, r7
   29594:	sub	sp, fp, #28
   29598:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002959c <fb_schema_table_remove_item@@Base>:
   2959c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   295a0:	add	fp, sp, #28
   295a4:	sub	sp, sp, #28
   295a8:	ldr	r6, [r0]
   295ac:	cmp	r6, #0
   295b0:	beq	2964c <fb_schema_table_remove_item@@Base+0xb0>
   295b4:	ldrd	r8, [r1, #144]	; 0x90
   295b8:	movw	r1, #15186	; 0x3b52
   295bc:	ldr	r4, [r0, #12]
   295c0:	str	r0, [sp, #12]
   295c4:	add	r0, sp, #16
   295c8:	mov	r3, #0
   295cc:	movt	r1, #12137	; 0x2f69
   295d0:	str	r0, [sp, #4]
   295d4:	str	r1, [sp]
   295d8:	mov	r0, r8
   295dc:	mov	r2, r9
   295e0:	bl	3bdcc <cmetrohash64_1@@Base>
   295e4:	ldr	r7, [sp, #16]
   295e8:	sub	r4, r4, #1
   295ec:	b	295f4 <fb_schema_table_remove_item@@Base+0x58>
   295f0:	add	r7, r7, #1
   295f4:	and	sl, r7, r4
   295f8:	ldr	r5, [r6, sl, lsl #2]
   295fc:	cmp	r5, #2
   29600:	beq	295f0 <fb_schema_table_remove_item@@Base+0x54>
   29604:	cmp	r5, #0
   29608:	beq	2964c <fb_schema_table_remove_item@@Base+0xb0>
   2960c:	ldr	r0, [r5, #148]	; 0x94
   29610:	cmp	r0, r9
   29614:	bne	295f0 <fb_schema_table_remove_item@@Base+0x54>
   29618:	ldr	r1, [r5, #144]	; 0x90
   2961c:	mov	r0, r8
   29620:	mov	r2, r9
   29624:	bl	148a4 <bcmp@plt>
   29628:	cmp	r0, #0
   2962c:	bne	295f0 <fb_schema_table_remove_item@@Base+0x54>
   29630:	ldr	r1, [sp, #12]
   29634:	mov	r0, #2
   29638:	str	r0, [r6, sl, lsl #2]
   2963c:	ldr	r0, [r1, #8]
   29640:	sub	r0, r0, #1
   29644:	str	r0, [r1, #8]
   29648:	b	29650 <fb_schema_table_remove_item@@Base+0xb4>
   2964c:	mov	r5, #0
   29650:	mov	r0, r5
   29654:	sub	sp, fp, #28
   29658:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002965c <fb_schema_table_visit@@Base>:
   2965c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   29660:	add	fp, sp, #24
   29664:	mov	r6, r0
   29668:	ldr	r0, [r0, #12]
   2966c:	cmp	r0, #0
   29670:	beq	296b4 <fb_schema_table_visit@@Base+0x58>
   29674:	ldr	r7, [r6]
   29678:	mov	r8, r2
   2967c:	mov	r5, r1
   29680:	mov	r4, #0
   29684:	b	29694 <fb_schema_table_visit@@Base+0x38>
   29688:	add	r4, r4, #1
   2968c:	cmp	r4, r0
   29690:	bcs	296b4 <fb_schema_table_visit@@Base+0x58>
   29694:	ldr	r1, [r7, r4, lsl #2]
   29698:	orr	r2, r1, #2
   2969c:	cmp	r2, #2
   296a0:	beq	29688 <fb_schema_table_visit@@Base+0x2c>
   296a4:	mov	r0, r8
   296a8:	blx	r5
   296ac:	ldr	r0, [r6, #12]
   296b0:	b	29688 <fb_schema_table_visit@@Base+0x2c>
   296b4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000296b8 <__flatcc_fb_copy_path_n@@Base>:
   296b8:	push	{r4, r5, r6, r7, fp, lr}
   296bc:	add	fp, sp, #16
   296c0:	mov	r4, r1
   296c4:	mov	r1, #0
   296c8:	mov	r5, r0
   296cc:	mov	r7, #0
   296d0:	mov	r2, r4
   296d4:	bl	148f8 <memchr@plt>
   296d8:	cmp	r0, #0
   296dc:	subne	r4, r0, r5
   296e0:	add	r0, r4, #1
   296e4:	bl	14868 <malloc@plt>
   296e8:	mov	r6, r0
   296ec:	cmp	r0, #0
   296f0:	beq	29708 <__flatcc_fb_copy_path_n@@Base+0x50>
   296f4:	mov	r0, r6
   296f8:	mov	r1, r5
   296fc:	mov	r2, r4
   29700:	bl	14808 <memcpy@plt>
   29704:	strb	r7, [r6, r4]
   29708:	mov	r0, r6
   2970c:	pop	{r4, r5, r6, r7, fp, pc}

00029710 <__flatcc_fb_copy_path@@Base>:
   29710:	push	{r4, r5, r6, sl, fp, lr}
   29714:	add	fp, sp, #16
   29718:	mov	r5, r0
   2971c:	bl	148b0 <strlen@plt>
   29720:	mov	r4, r0
   29724:	add	r0, r0, #1
   29728:	bl	14868 <malloc@plt>
   2972c:	mov	r6, r0
   29730:	cmp	r0, #0
   29734:	beq	29750 <__flatcc_fb_copy_path@@Base+0x40>
   29738:	mov	r0, r6
   2973c:	mov	r1, r5
   29740:	mov	r2, r4
   29744:	bl	14808 <memcpy@plt>
   29748:	mov	r0, #0
   2974c:	strb	r0, [r6, r4]
   29750:	mov	r0, r6
   29754:	pop	{r4, r5, r6, sl, fp, pc}

00029758 <__flatcc_fb_chomp@@Base>:
   29758:	push	{r4, r5, r6, r7, fp, lr}
   2975c:	add	fp, sp, #16
   29760:	mov	r5, r2
   29764:	mov	r4, r1
   29768:	mov	r7, r0
   2976c:	cmp	r2, #0
   29770:	beq	297ac <__flatcc_fb_chomp@@Base+0x54>
   29774:	mov	r0, r5
   29778:	bl	148b0 <strlen@plt>
   2977c:	mov	r6, r0
   29780:	cmp	r6, r4
   29784:	bcs	297a4 <__flatcc_fb_chomp@@Base+0x4c>
   29788:	add	r0, r7, r4
   2978c:	mov	r1, r5
   29790:	mov	r2, r6
   29794:	sub	r0, r0, r6
   29798:	bl	14964 <strncmp@plt>
   2979c:	cmp	r0, #0
   297a0:	subeq	r4, r4, r6
   297a4:	mov	r0, r4
   297a8:	pop	{r4, r5, r6, r7, fp, pc}
   297ac:	mov	r6, #0
   297b0:	cmp	r6, r4
   297b4:	bcc	29788 <__flatcc_fb_chomp@@Base+0x30>
   297b8:	b	297a4 <__flatcc_fb_chomp@@Base+0x4c>

000297bc <__flatcc_fb_create_join_path_n@@Base>:
   297bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   297c0:	add	fp, sp, #28
   297c4:	sub	sp, sp, #12
   297c8:	mov	r6, r0
   297cc:	ldr	r0, [fp, #8]
   297d0:	mov	r7, r3
   297d4:	mov	r4, r2
   297d8:	mov	r5, r1
   297dc:	cmp	r0, #0
   297e0:	beq	297ec <__flatcc_fb_create_join_path_n@@Base+0x30>
   297e4:	bl	148b0 <strlen@plt>
   297e8:	b	297f0 <__flatcc_fb_create_join_path_n@@Base+0x34>
   297ec:	mov	r0, #0
   297f0:	ldr	r8, [fp, #12]
   297f4:	cmp	r6, #0
   297f8:	beq	29814 <__flatcc_fb_create_join_path_n@@Base+0x58>
   297fc:	cmp	r7, #0
   29800:	beq	29818 <__flatcc_fb_create_join_path_n@@Base+0x5c>
   29804:	ldrb	r1, [r4]
   29808:	cmp	r1, #47	; 0x2f
   2980c:	cmpne	r1, #92	; 0x5c
   29810:	bne	298d8 <__flatcc_fb_create_join_path_n@@Base+0x11c>
   29814:	mov	r5, #0
   29818:	cmp	r8, #0
   2981c:	str	r4, [sp, #8]
   29820:	cmpne	r5, #0
   29824:	bne	29830 <__flatcc_fb_create_join_path_n@@Base+0x74>
   29828:	mov	r8, #0
   2982c:	b	29844 <__flatcc_fb_create_join_path_n@@Base+0x88>
   29830:	add	r1, r5, r6
   29834:	ldrb	r1, [r1, #-1]
   29838:	cmp	r1, #92	; 0x5c
   2983c:	cmpne	r1, #47	; 0x2f
   29840:	moveq	r8, #0
   29844:	add	r4, r5, #1
   29848:	str	r0, [sp, #4]
   2984c:	str	r7, [sp]
   29850:	add	sl, r4, r7
   29854:	add	r9, sl, r0
   29858:	add	r0, r9, r8
   2985c:	bl	14868 <malloc@plt>
   29860:	mov	r7, r0
   29864:	cmp	r0, #0
   29868:	beq	298cc <__flatcc_fb_create_join_path_n@@Base+0x110>
   2986c:	mov	r0, r7
   29870:	mov	r1, r6
   29874:	mov	r2, r5
   29878:	bl	14808 <memcpy@plt>
   2987c:	cmp	r8, #0
   29880:	beq	29898 <__flatcc_fb_create_join_path_n@@Base+0xdc>
   29884:	mov	r0, #47	; 0x2f
   29888:	strb	r0, [r7, r5]
   2988c:	mov	r5, r4
   29890:	ldm	sp, {r2, r4}
   29894:	b	298a8 <__flatcc_fb_create_join_path_n@@Base+0xec>
   29898:	ldr	r2, [sp]
   2989c:	ldr	r4, [sp, #4]
   298a0:	add	sl, r5, r2
   298a4:	add	r9, sl, r4
   298a8:	ldr	r1, [sp, #8]
   298ac:	add	r0, r7, r5
   298b0:	bl	14808 <memcpy@plt>
   298b4:	ldr	r1, [fp, #8]
   298b8:	add	r0, r7, sl
   298bc:	mov	r2, r4
   298c0:	bl	14808 <memcpy@plt>
   298c4:	mov	r0, #0
   298c8:	strb	r0, [r7, r9]
   298cc:	mov	r0, r7
   298d0:	sub	sp, fp, #28
   298d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   298d8:	cmp	r7, #2
   298dc:	bcc	29818 <__flatcc_fb_create_join_path_n@@Base+0x5c>
   298e0:	ldrb	r1, [r4, #1]
   298e4:	cmp	r1, #58	; 0x3a
   298e8:	moveq	r5, #0
   298ec:	b	29818 <__flatcc_fb_create_join_path_n@@Base+0x5c>

000298f0 <__flatcc_fb_create_join_path@@Base>:
   298f0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   298f4:	add	fp, sp, #24
   298f8:	sub	sp, sp, #8
   298fc:	mov	r8, r3
   29900:	mov	r9, r2
   29904:	mov	r4, r1
   29908:	mov	r6, r0
   2990c:	mov	r5, #0
   29910:	cmp	r0, #0
   29914:	mov	r7, #0
   29918:	beq	29928 <__flatcc_fb_create_join_path@@Base+0x38>
   2991c:	mov	r0, r6
   29920:	bl	148b0 <strlen@plt>
   29924:	mov	r7, r0
   29928:	cmp	r4, #0
   2992c:	beq	2993c <__flatcc_fb_create_join_path@@Base+0x4c>
   29930:	mov	r0, r4
   29934:	bl	148b0 <strlen@plt>
   29938:	mov	r5, r0
   2993c:	mov	r0, r6
   29940:	mov	r1, r7
   29944:	mov	r2, r4
   29948:	mov	r3, r5
   2994c:	str	r9, [sp]
   29950:	str	r8, [sp, #4]
   29954:	bl	297bc <__flatcc_fb_create_join_path_n@@Base>
   29958:	sub	sp, fp, #24
   2995c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00029960 <__flatcc_fb_create_path_ext_n@@Base>:
   29960:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   29964:	add	fp, sp, #24
   29968:	mov	r4, r2
   2996c:	mov	r5, r1
   29970:	mov	r8, r0
   29974:	cmp	r2, #0
   29978:	beq	2998c <__flatcc_fb_create_path_ext_n@@Base+0x2c>
   2997c:	mov	r0, r4
   29980:	bl	148b0 <strlen@plt>
   29984:	mov	r9, r0
   29988:	b	29990 <__flatcc_fb_create_path_ext_n@@Base+0x30>
   2998c:	mov	r9, #0
   29990:	add	r7, r9, r5
   29994:	add	r0, r7, #1
   29998:	bl	14868 <malloc@plt>
   2999c:	mov	r6, r0
   299a0:	cmp	r0, #0
   299a4:	beq	299d0 <__flatcc_fb_create_path_ext_n@@Base+0x70>
   299a8:	mov	r0, r6
   299ac:	mov	r1, r8
   299b0:	mov	r2, r5
   299b4:	bl	14808 <memcpy@plt>
   299b8:	add	r0, r6, r5
   299bc:	mov	r1, r4
   299c0:	mov	r2, r9
   299c4:	bl	14808 <memcpy@plt>
   299c8:	mov	r0, #0
   299cc:	strb	r0, [r6, r7]
   299d0:	mov	r0, r6
   299d4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000299d8 <__flatcc_fb_create_path_ext@@Base>:
   299d8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   299dc:	add	fp, sp, #24
   299e0:	mov	r8, r1
   299e4:	mov	r6, r0
   299e8:	mov	r9, #0
   299ec:	cmp	r0, #0
   299f0:	mov	r7, #0
   299f4:	beq	29a04 <__flatcc_fb_create_path_ext@@Base+0x2c>
   299f8:	mov	r0, r6
   299fc:	bl	148b0 <strlen@plt>
   29a00:	mov	r7, r0
   29a04:	cmp	r8, #0
   29a08:	beq	29a18 <__flatcc_fb_create_path_ext@@Base+0x40>
   29a0c:	mov	r0, r8
   29a10:	bl	148b0 <strlen@plt>
   29a14:	mov	r9, r0
   29a18:	add	r5, r9, r7
   29a1c:	add	r0, r5, #1
   29a20:	bl	14868 <malloc@plt>
   29a24:	mov	r4, r0
   29a28:	cmp	r0, #0
   29a2c:	beq	29a58 <__flatcc_fb_create_path_ext@@Base+0x80>
   29a30:	mov	r0, r4
   29a34:	mov	r1, r6
   29a38:	mov	r2, r7
   29a3c:	bl	14808 <memcpy@plt>
   29a40:	add	r0, r4, r7
   29a44:	mov	r1, r8
   29a48:	mov	r2, r9
   29a4c:	bl	14808 <memcpy@plt>
   29a50:	mov	r0, #0
   29a54:	strb	r0, [r4, r5]
   29a58:	mov	r0, r4
   29a5c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00029a60 <__flatcc_fb_create_make_path_n@@Base>:
   29a60:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   29a64:	add	fp, sp, #24
   29a68:	mov	r6, r1
   29a6c:	mov	r8, r0
   29a70:	cmp	r1, #0
   29a74:	beq	29ac0 <__flatcc_fb_create_make_path_n@@Base+0x60>
   29a78:	cmp	r6, #1
   29a7c:	bne	29b0c <__flatcc_fb_create_make_path_n@@Base+0xac>
   29a80:	ldrb	r5, [r8]
   29a84:	cmp	r5, #92	; 0x5c
   29a88:	cmpne	r5, #32
   29a8c:	bne	29ac0 <__flatcc_fb_create_make_path_n@@Base+0x60>
   29a90:	mov	r0, #3
   29a94:	bl	14868 <malloc@plt>
   29a98:	cmp	r0, #0
   29a9c:	beq	29bc8 <__flatcc_fb_create_make_path_n@@Base+0x168>
   29aa0:	mov	r4, r0
   29aa4:	mov	r0, #0
   29aa8:	strb	r0, [r4, #2]
   29aac:	mov	r0, #92	; 0x5c
   29ab0:	strb	r5, [r4, #1]
   29ab4:	strb	r0, [r4]
   29ab8:	mov	r0, r4
   29abc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   29ac0:	mov	r0, r8
   29ac4:	mov	r1, #0
   29ac8:	mov	r2, r6
   29acc:	mov	r4, #0
   29ad0:	bl	148f8 <memchr@plt>
   29ad4:	cmp	r0, #0
   29ad8:	subne	r6, r0, r8
   29adc:	add	r0, r6, #1
   29ae0:	bl	14868 <malloc@plt>
   29ae4:	cmp	r0, #0
   29ae8:	beq	29bf4 <__flatcc_fb_create_make_path_n@@Base+0x194>
   29aec:	mov	r1, r8
   29af0:	mov	r2, r6
   29af4:	mov	r7, r0
   29af8:	bl	14808 <memcpy@plt>
   29afc:	mov	r0, #0
   29b00:	strb	r0, [r7, r6]
   29b04:	mov	r0, r7
   29b08:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   29b0c:	mov	r0, r8
   29b10:	sub	r5, r6, #1
   29b14:	ldrb	r7, [r0], #1
   29b18:	mov	r1, r5
   29b1c:	mov	r3, r7
   29b20:	b	29b3c <__flatcc_fb_create_make_path_n@@Base+0xdc>
   29b24:	cmp	r3, #32
   29b28:	add	r0, r0, #1
   29b2c:	mov	r3, r2
   29b30:	addeq	r6, r6, #1
   29b34:	subs	r1, r1, #1
   29b38:	beq	29b58 <__flatcc_fb_create_make_path_n@@Base+0xf8>
   29b3c:	ldrb	r2, [r0]
   29b40:	uxtb	r3, r3
   29b44:	cmp	r3, #92	; 0x5c
   29b48:	bne	29b24 <__flatcc_fb_create_make_path_n@@Base+0xc4>
   29b4c:	cmp	r2, #32
   29b50:	addeq	r6, r6, #1
   29b54:	b	29b24 <__flatcc_fb_create_make_path_n@@Base+0xc4>
   29b58:	cmp	r2, #32
   29b5c:	addeq	r6, r6, #1
   29b60:	add	r0, r6, #1
   29b64:	bl	14868 <malloc@plt>
   29b68:	cmp	r0, #0
   29b6c:	beq	29bc8 <__flatcc_fb_create_make_path_n@@Base+0x168>
   29b70:	mov	r4, r0
   29b74:	add	r0, r8, #1
   29b78:	mov	r1, #0
   29b7c:	mov	r2, #92	; 0x5c
   29b80:	b	29ba0 <__flatcc_fb_create_make_path_n@@Base+0x140>
   29b84:	add	r3, r1, #1
   29b88:	strb	r2, [r4, r1]
   29b8c:	strb	r7, [r4, r3]
   29b90:	subs	r5, r5, #1
   29b94:	add	r1, r3, #1
   29b98:	ldrb	r7, [r0], #1
   29b9c:	beq	29bd4 <__flatcc_fb_create_make_path_n@@Base+0x174>
   29ba0:	uxtb	r3, r7
   29ba4:	cmp	r3, #32
   29ba8:	beq	29b84 <__flatcc_fb_create_make_path_n@@Base+0x124>
   29bac:	cmp	r3, #92	; 0x5c
   29bb0:	bne	29bc0 <__flatcc_fb_create_make_path_n@@Base+0x160>
   29bb4:	ldrb	r3, [r0]
   29bb8:	cmp	r3, #32
   29bbc:	beq	29b84 <__flatcc_fb_create_make_path_n@@Base+0x124>
   29bc0:	mov	r3, r1
   29bc4:	b	29b8c <__flatcc_fb_create_make_path_n@@Base+0x12c>
   29bc8:	mov	r4, #0
   29bcc:	mov	r0, r4
   29bd0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   29bd4:	cmp	r7, #32
   29bd8:	moveq	r0, #92	; 0x5c
   29bdc:	strbeq	r0, [r4, r1]
   29be0:	addeq	r1, r3, #2
   29be4:	mov	r0, r4
   29be8:	strb	r7, [r0, r1]!
   29bec:	mov	r1, #0
   29bf0:	strb	r1, [r0, #1]
   29bf4:	mov	r0, r4
   29bf8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00029bfc <__flatcc_fb_create_make_path@@Base>:
   29bfc:	push	{r4, sl, fp, lr}
   29c00:	add	fp, sp, #8
   29c04:	mov	r4, r0
   29c08:	bl	148b0 <strlen@plt>
   29c0c:	mov	r1, r0
   29c10:	mov	r0, r4
   29c14:	pop	{r4, sl, fp, lr}
   29c18:	b	29a60 <__flatcc_fb_create_make_path_n@@Base>

00029c1c <__flatcc_fb_find_basename@@Base>:
   29c1c:	cmp	r1, #0
   29c20:	subeq	r0, r0, r0
   29c24:	bxeq	lr
   29c28:	add	r2, r0, r1
   29c2c:	sub	r1, r1, #1
   29c30:	ldrb	r2, [r2, #-1]
   29c34:	cmp	r2, #92	; 0x5c
   29c38:	cmpne	r2, #47	; 0x2f
   29c3c:	bne	29c1c <__flatcc_fb_find_basename@@Base>
   29c40:	add	r1, r0, r1
   29c44:	add	r1, r1, #1
   29c48:	sub	r0, r1, r0
   29c4c:	bx	lr

00029c50 <__flatcc_fb_create_basename@@Base>:
   29c50:	push	{r4, r5, r6, r7, fp, lr}
   29c54:	add	fp, sp, #16
   29c58:	mov	r6, r2
   29c5c:	mov	r2, r1
   29c60:	cmp	r2, #0
   29c64:	beq	29c8c <__flatcc_fb_create_basename@@Base+0x3c>
   29c68:	add	r3, r0, r2
   29c6c:	sub	r2, r2, #1
   29c70:	ldrb	r3, [r3, #-1]
   29c74:	cmp	r3, #92	; 0x5c
   29c78:	cmpne	r3, #47	; 0x2f
   29c7c:	bne	29c60 <__flatcc_fb_create_basename@@Base+0x10>
   29c80:	add	r2, r0, r2
   29c84:	add	r4, r2, #1
   29c88:	b	29c90 <__flatcc_fb_create_basename@@Base+0x40>
   29c8c:	mov	r4, r0
   29c90:	sub	r0, r0, r4
   29c94:	cmp	r6, #0
   29c98:	add	r5, r0, r1
   29c9c:	beq	29d04 <__flatcc_fb_create_basename@@Base+0xb4>
   29ca0:	mov	r0, r6
   29ca4:	bl	148b0 <strlen@plt>
   29ca8:	mov	r7, r0
   29cac:	cmp	r7, r5
   29cb0:	bcs	29cd0 <__flatcc_fb_create_basename@@Base+0x80>
   29cb4:	add	r0, r4, r5
   29cb8:	mov	r1, r6
   29cbc:	mov	r2, r7
   29cc0:	sub	r0, r0, r7
   29cc4:	bl	14964 <strncmp@plt>
   29cc8:	cmp	r0, #0
   29ccc:	subeq	r5, r5, r7
   29cd0:	add	r0, r5, #1
   29cd4:	bl	14868 <malloc@plt>
   29cd8:	mov	r6, r0
   29cdc:	cmp	r0, #0
   29ce0:	beq	29cfc <__flatcc_fb_create_basename@@Base+0xac>
   29ce4:	mov	r0, r6
   29ce8:	mov	r1, r4
   29cec:	mov	r2, r5
   29cf0:	bl	14808 <memcpy@plt>
   29cf4:	mov	r0, #0
   29cf8:	strb	r0, [r6, r5]
   29cfc:	mov	r0, r6
   29d00:	pop	{r4, r5, r6, r7, fp, pc}
   29d04:	mov	r7, #0
   29d08:	cmp	r7, r5
   29d0c:	bcc	29cb4 <__flatcc_fb_create_basename@@Base+0x64>
   29d10:	b	29cd0 <__flatcc_fb_create_basename@@Base+0x80>

00029d14 <__flatcc_fb_read_file@@Base>:
   29d14:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   29d18:	add	fp, sp, #24
   29d1c:	sub	sp, sp, #8
   29d20:	mov	r6, r1
   29d24:	ldr	r1, [pc, #208]	; 29dfc <__flatcc_fb_read_file@@Base+0xe8>
   29d28:	cmp	r2, #0
   29d2c:	add	r8, sp, #4
   29d30:	movne	r8, r2
   29d34:	add	r1, pc, r1
   29d38:	bl	147f0 <fopen@plt>
   29d3c:	cmp	r0, #0
   29d40:	beq	29de4 <__flatcc_fb_read_file@@Base+0xd0>
   29d44:	mov	r1, #0
   29d48:	mov	r2, #2
   29d4c:	mov	r5, r0
   29d50:	bl	14958 <fseek@plt>
   29d54:	mov	r0, r5
   29d58:	bl	14814 <ftell@plt>
   29d5c:	mov	r4, r0
   29d60:	cmp	r6, #0
   29d64:	str	r0, [r8]
   29d68:	cmpne	r4, r6
   29d6c:	bhi	29dd8 <__flatcc_fb_read_file@@Base+0xc4>
   29d70:	mov	r0, r5
   29d74:	bl	14838 <rewind@plt>
   29d78:	cmp	r4, #0
   29d7c:	mov	r0, r4
   29d80:	movweq	r0, #1
   29d84:	bl	14868 <malloc@plt>
   29d88:	cmp	r0, #0
   29d8c:	beq	29dd8 <__flatcc_fb_read_file@@Base+0xc4>
   29d90:	mov	r6, r0
   29d94:	mov	r1, #0
   29d98:	mov	r7, r1
   29d9c:	add	r0, r6, r1
   29da0:	sub	r2, r4, r1
   29da4:	mov	r1, #1
   29da8:	mov	r3, r5
   29dac:	bl	1494c <fread_unlocked@plt>
   29db0:	add	r1, r0, r7
   29db4:	cmp	r0, #0
   29db8:	bne	29d98 <__flatcc_fb_read_file@@Base+0x84>
   29dbc:	mov	r0, r5
   29dc0:	bl	14904 <fclose@plt>
   29dc4:	cmp	r4, r7
   29dc8:	beq	29dec <__flatcc_fb_read_file@@Base+0xd8>
   29dcc:	mov	r0, r6
   29dd0:	bl	147fc <free@plt>
   29dd4:	b	29de8 <__flatcc_fb_read_file@@Base+0xd4>
   29dd8:	mov	r0, r5
   29ddc:	bl	14904 <fclose@plt>
   29de0:	b	29de8 <__flatcc_fb_read_file@@Base+0xd4>
   29de4:	mov	r4, #0
   29de8:	mov	r6, #0
   29dec:	str	r4, [r8]
   29df0:	mov	r0, r6
   29df4:	sub	sp, fp, #24
   29df8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   29dfc:	andeq	ip, r2, ip, lsr #16

00029e00 <__flatcc_fb_default_error_out@@Base>:
   29e00:	mov	r0, r1
   29e04:	ldr	r1, [pc, #12]	; 29e18 <__flatcc_fb_default_error_out@@Base+0x18>
   29e08:	ldr	r1, [pc, r1]
   29e0c:	ldr	r3, [r1]
   29e10:	mov	r1, #1
   29e14:	b	14850 <fwrite@plt>
   29e18:	muleq	r4, r4, r2

00029e1c <__flatcc_fb_print_error@@Base>:
   29e1c:	sub	sp, sp, #8
   29e20:	push	{r4, r5, fp, lr}
   29e24:	add	fp, sp, #8
   29e28:	sub	sp, sp, #208	; 0xd0
   29e2c:	mov	r5, r1
   29e30:	mov	r4, r0
   29e34:	str	r2, [fp, #8]
   29e38:	str	r3, [fp, #12]
   29e3c:	add	r3, fp, #8
   29e40:	add	r0, sp, #4
   29e44:	mov	r1, #200	; 0xc8
   29e48:	mov	r2, r5
   29e4c:	str	r3, [fp, #-12]
   29e50:	bl	14934 <vsnprintf@plt>
   29e54:	mov	r5, r0
   29e58:	cmp	r0, #200	; 0xc8
   29e5c:	blt	29e78 <__flatcc_fb_print_error@@Base+0x5c>
   29e60:	mov	r0, #0
   29e64:	mov	r5, #199	; 0xc7
   29e68:	strb	r0, [sp, #203]	; 0xcb
   29e6c:	movw	r0, #11822	; 0x2e2e
   29e70:	movt	r0, #2606	; 0xa2e
   29e74:	str	r0, [sp, #199]	; 0xc7
   29e78:	ldr	r3, [r4, #12]
   29e7c:	ldr	r4, [r4, #8]
   29e80:	add	r1, sp, #4
   29e84:	mov	r2, r5
   29e88:	mov	r0, r3
   29e8c:	blx	r4
   29e90:	mov	r0, r5
   29e94:	sub	sp, fp, #8
   29e98:	pop	{r4, r5, fp, lr}
   29e9c:	add	sp, sp, #8
   29ea0:	bx	lr

00029ea4 <__flatcc_error_find_file_of_token@@Base>:
   29ea4:	mov	r2, r0
   29ea8:	ldr	r0, [pc, #48]	; 29ee0 <__flatcc_error_find_file_of_token@@Base+0x3c>
   29eac:	add	r0, pc, r0
   29eb0:	b	29eb8 <__flatcc_error_find_file_of_token@@Base+0x14>
   29eb4:	ldr	r2, [r2]
   29eb8:	cmp	r2, #0
   29ebc:	bxeq	lr
   29ec0:	ldr	r3, [r2, #20]
   29ec4:	cmp	r3, r1
   29ec8:	bhi	29eb4 <__flatcc_error_find_file_of_token@@Base+0x10>
   29ecc:	ldr	r3, [r2, #24]
   29ed0:	cmp	r3, r1
   29ed4:	bls	29eb4 <__flatcc_error_find_file_of_token@@Base+0x10>
   29ed8:	ldr	r0, [r2, #520]	; 0x208
   29edc:	bx	lr
   29ee0:	strdeq	r5, [r1], -r2

00029ee4 <__flatcc_error_report@@Base>:
   29ee4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   29ee8:	add	fp, sp, #24
   29eec:	sub	sp, sp, #40	; 0x28
   29ef0:	mov	r7, r0
   29ef4:	ldr	r5, [fp, #12]
   29ef8:	ldr	r0, [fp, #8]
   29efc:	cmp	r1, #0
   29f00:	beq	29f0c <__flatcc_error_report@@Base+0x28>
   29f04:	cmp	r0, #0
   29f08:	ldmeq	r1, {r0, r5}
   29f0c:	ldr	r4, [pc, #536]	; 2a12c <__flatcc_error_report@@Base+0x248>
   29f10:	cmp	r0, #0
   29f14:	moveq	r5, r0
   29f18:	add	r4, pc, r4
   29f1c:	moveq	r0, r4
   29f20:	cmp	r2, #0
   29f24:	moveq	r2, r4
   29f28:	cmp	r1, #0
   29f2c:	beq	29f98 <__flatcc_error_report@@Base+0xb4>
   29f30:	cmp	r3, #0
   29f34:	bne	29f98 <__flatcc_error_report@@Base+0xb4>
   29f38:	cmp	r7, #0
   29f3c:	beq	29f70 <__flatcc_error_report@@Base+0x8c>
   29f40:	mov	r3, r7
   29f44:	b	29f54 <__flatcc_error_report@@Base+0x70>
   29f48:	ldr	r3, [r3]
   29f4c:	cmp	r3, #0
   29f50:	beq	29f70 <__flatcc_error_report@@Base+0x8c>
   29f54:	ldr	r6, [r3, #20]
   29f58:	cmp	r6, r1
   29f5c:	bhi	29f48 <__flatcc_error_report@@Base+0x64>
   29f60:	ldr	r6, [r3, #24]
   29f64:	cmp	r6, r1
   29f68:	bls	29f48 <__flatcc_error_report@@Base+0x64>
   29f6c:	ldr	r4, [r3, #520]	; 0x208
   29f70:	ldr	r3, [r1, #8]
   29f74:	ldr	r1, [r1, #12]
   29f78:	stm	sp, {r1, r5}
   29f7c:	str	r0, [sp, #8]
   29f80:	str	r2, [sp, #12]
   29f84:	mov	r0, r7
   29f88:	mov	r2, r4
   29f8c:	ldr	r1, [pc, #412]	; 2a130 <__flatcc_error_report@@Base+0x24c>
   29f90:	add	r1, pc, r1
   29f94:	b	2a114 <__flatcc_error_report@@Base+0x230>
   29f98:	cmp	r1, #0
   29f9c:	cmpne	r3, #0
   29fa0:	bne	2a020 <__flatcc_error_report@@Base+0x13c>
   29fa4:	orrs	r0, r1, r3
   29fa8:	beq	2a064 <__flatcc_error_report@@Base+0x180>
   29fac:	cmp	r3, #0
   29fb0:	beq	2a0b0 <__flatcc_error_report@@Base+0x1cc>
   29fb4:	ldr	r4, [pc, #392]	; 2a144 <__flatcc_error_report@@Base+0x260>
   29fb8:	cmp	r7, #0
   29fbc:	add	r4, pc, r4
   29fc0:	beq	29ff4 <__flatcc_error_report@@Base+0x110>
   29fc4:	mov	r0, r7
   29fc8:	b	29fd8 <__flatcc_error_report@@Base+0xf4>
   29fcc:	ldr	r0, [r0]
   29fd0:	cmp	r0, #0
   29fd4:	beq	29ff4 <__flatcc_error_report@@Base+0x110>
   29fd8:	ldr	r1, [r0, #20]
   29fdc:	cmp	r1, r3
   29fe0:	bhi	29fcc <__flatcc_error_report@@Base+0xe8>
   29fe4:	ldr	r1, [r0, #24]
   29fe8:	cmp	r1, r3
   29fec:	bls	29fcc <__flatcc_error_report@@Base+0xe8>
   29ff0:	ldr	r4, [r0, #520]	; 0x208
   29ff4:	ldm	r3, {r0, r1, r6}
   29ff8:	ldr	r3, [r3, #12]
   29ffc:	str	r6, [sp]
   2a000:	str	r1, [sp, #8]
   2a004:	str	r0, [sp, #12]
   2a008:	mov	r0, r7
   2a00c:	str	r3, [sp, #4]
   2a010:	mov	r3, r4
   2a014:	ldr	r1, [pc, #300]	; 2a148 <__flatcc_error_report@@Base+0x264>
   2a018:	add	r1, pc, r1
   2a01c:	b	2a114 <__flatcc_error_report@@Base+0x230>
   2a020:	cmp	r7, #0
   2a024:	beq	2a0c4 <__flatcc_error_report@@Base+0x1e0>
   2a028:	ldr	lr, [pc, #264]	; 2a138 <__flatcc_error_report@@Base+0x254>
   2a02c:	mov	r6, r7
   2a030:	add	lr, pc, lr
   2a034:	b	2a044 <__flatcc_error_report@@Base+0x160>
   2a038:	ldr	r6, [r6]
   2a03c:	cmp	r6, #0
   2a040:	beq	2a078 <__flatcc_error_report@@Base+0x194>
   2a044:	ldr	r4, [r6, #20]
   2a048:	cmp	r4, r1
   2a04c:	bhi	2a038 <__flatcc_error_report@@Base+0x154>
   2a050:	ldr	r4, [r6, #24]
   2a054:	cmp	r4, r1
   2a058:	bls	2a038 <__flatcc_error_report@@Base+0x154>
   2a05c:	ldr	ip, [r6, #520]	; 0x208
   2a060:	b	2a07c <__flatcc_error_report@@Base+0x198>
   2a064:	ldr	r1, [pc, #212]	; 2a140 <__flatcc_error_report@@Base+0x25c>
   2a068:	mov	r0, r7
   2a06c:	add	r1, pc, r1
   2a070:	bl	29e1c <__flatcc_fb_print_error@@Base>
   2a074:	b	2a118 <__flatcc_error_report@@Base+0x234>
   2a078:	mov	ip, lr
   2a07c:	mov	r4, r7
   2a080:	b	2a090 <__flatcc_error_report@@Base+0x1ac>
   2a084:	ldr	r4, [r4]
   2a088:	cmp	r4, #0
   2a08c:	beq	2a0d0 <__flatcc_error_report@@Base+0x1ec>
   2a090:	ldr	r6, [r4, #20]
   2a094:	cmp	r6, r3
   2a098:	bhi	2a084 <__flatcc_error_report@@Base+0x1a0>
   2a09c:	ldr	r6, [r4, #24]
   2a0a0:	cmp	r6, r3
   2a0a4:	bls	2a084 <__flatcc_error_report@@Base+0x1a0>
   2a0a8:	ldr	lr, [r4, #520]	; 0x208
   2a0ac:	b	2a0d0 <__flatcc_error_report@@Base+0x1ec>
   2a0b0:	ldr	r1, [pc, #148]	; 2a14c <__flatcc_error_report@@Base+0x268>
   2a0b4:	mov	r0, r7
   2a0b8:	add	r1, pc, r1
   2a0bc:	bl	29e1c <__flatcc_fb_print_error@@Base>
   2a0c0:	b	2a118 <__flatcc_error_report@@Base+0x234>
   2a0c4:	ldr	ip, [pc, #104]	; 2a134 <__flatcc_error_report@@Base+0x250>
   2a0c8:	add	ip, pc, ip
   2a0cc:	mov	lr, ip
   2a0d0:	ldr	r8, [r1, #8]
   2a0d4:	ldr	r1, [r1, #12]
   2a0d8:	ldm	r3, {r6, r9}
   2a0dc:	ldr	r4, [r3, #8]
   2a0e0:	ldr	r3, [r3, #12]
   2a0e4:	str	r6, [sp, #32]
   2a0e8:	stm	sp, {r1, r5}
   2a0ec:	add	r1, sp, #8
   2a0f0:	stm	r1, {r0, r2, lr}
   2a0f4:	str	r3, [sp, #24]
   2a0f8:	str	r4, [sp, #20]
   2a0fc:	str	r9, [sp, #28]
   2a100:	mov	r0, r7
   2a104:	mov	r2, ip
   2a108:	mov	r3, r8
   2a10c:	ldr	r1, [pc, #40]	; 2a13c <__flatcc_error_report@@Base+0x258>
   2a110:	add	r1, pc, r1
   2a114:	bl	29e1c <__flatcc_fb_print_error@@Base>
   2a118:	ldr	r0, [r7, #108]	; 0x6c
   2a11c:	add	r0, r0, #1
   2a120:	str	r0, [r7, #108]	; 0x6c
   2a124:	sub	sp, fp, #24
   2a128:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2a12c:	andeq	r5, r1, r6, lsl #15
   2a130:	ldrdeq	ip, [r2], -r3
   2a134:	ldrdeq	r5, [r1], -r6
   2a138:	andeq	r5, r1, lr, ror #12
   2a13c:	andeq	ip, r2, r2, ror r4
   2a140:	andeq	ip, r2, r9, asr #10
   2a144:	andeq	r5, r1, r2, ror #13
   2a148:	andeq	ip, r2, r8, lsr #11
   2a14c:	andeq	ip, r2, r7, lsr #10

0002a150 <error_ref_sym@@Base>:
   2a150:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a154:	add	fp, sp, #28
   2a158:	sub	sp, sp, #76	; 0x4c
   2a15c:	mov	sl, r1
   2a160:	cmp	r1, #0
   2a164:	beq	2a1e8 <error_ref_sym@@Base+0x98>
   2a168:	mov	r5, #50	; 0x32
   2a16c:	mov	r6, #0
   2a170:	add	r8, sp, #25
   2a174:	mov	r9, #46	; 0x2e
   2a178:	mov	r7, sl
   2a17c:	str	r3, [sp, #12]
   2a180:	str	r0, [sp, #16]
   2a184:	str	r2, [sp, #20]
   2a188:	ldr	r2, [r7, #4]
   2a18c:	add	r0, r8, r6
   2a190:	ldm	r2, {r1, r4}
   2a194:	cmp	r5, r4
   2a198:	movlt	r4, r5
   2a19c:	mov	r2, r4
   2a1a0:	bl	14808 <memcpy@plt>
   2a1a4:	add	r0, r4, r6
   2a1a8:	mvn	r1, r4
   2a1ac:	strb	r9, [r8, r0]
   2a1b0:	add	r5, r5, r1
   2a1b4:	add	r6, r0, #1
   2a1b8:	ldr	r7, [r7]
   2a1bc:	cmp	r7, #0
   2a1c0:	beq	2a1cc <error_ref_sym@@Base+0x7c>
   2a1c4:	cmp	r5, #0
   2a1c8:	bgt	2a188 <error_ref_sym@@Base+0x38>
   2a1cc:	mov	r1, #0
   2a1d0:	cmp	r5, #0
   2a1d4:	strb	r1, [r8, r6]
   2a1d8:	ble	2a1f4 <error_ref_sym@@Base+0xa4>
   2a1dc:	mvn	r0, r0
   2a1e0:	add	r6, r6, r0, asr #31
   2a1e4:	b	2a204 <error_ref_sym@@Base+0xb4>
   2a1e8:	mov	r6, #0
   2a1ec:	strb	r6, [sp, #25]
   2a1f0:	b	2a210 <error_ref_sym@@Base+0xc0>
   2a1f4:	movw	r0, #11822	; 0x2e2e
   2a1f8:	mov	r6, #50	; 0x32
   2a1fc:	movt	r0, #46	; 0x2e
   2a200:	str	r0, [sp, #72]	; 0x48
   2a204:	ldr	r2, [sp, #20]
   2a208:	ldr	r0, [sp, #16]
   2a20c:	ldr	r3, [sp, #12]
   2a210:	ldr	r1, [sl, #4]
   2a214:	cmp	r3, #0
   2a218:	beq	2a224 <error_ref_sym@@Base+0xd4>
   2a21c:	ldr	r3, [r3, #4]
   2a220:	b	2a228 <error_ref_sym@@Base+0xd8>
   2a224:	mov	r3, #0
   2a228:	add	r7, sp, #25
   2a22c:	str	r6, [sp, #4]
   2a230:	str	r7, [sp]
   2a234:	bl	29ee4 <__flatcc_error_report@@Base>
   2a238:	sub	sp, fp, #28
   2a23c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002a240 <__flatcc_fb_init_parser@@Base>:
   2a240:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a244:	add	fp, sp, #28
   2a248:	sub	sp, sp, #12
   2a24c:	mov	r8, r2
   2a250:	mov	r7, r1
   2a254:	mov	r1, #0
   2a258:	mov	r2, #560	; 0x230
   2a25c:	mov	r6, r3
   2a260:	mov	r4, r0
   2a264:	bl	148d4 <memset@plt>
   2a268:	cmp	r6, #0
   2a26c:	beq	2a280 <__flatcc_fb_init_parser@@Base+0x40>
   2a270:	ldr	r1, [fp, #8]
   2a274:	str	r6, [r4, #8]
   2a278:	str	r1, [r4, #12]
   2a27c:	b	2a28c <__flatcc_fb_init_parser@@Base+0x4c>
   2a280:	ldr	r0, [pc, #636]	; 2a504 <__flatcc_fb_init_parser@@Base+0x2c4>
   2a284:	ldr	r0, [pc, r0]
   2a288:	str	r0, [r4, #8]
   2a28c:	ldr	r5, [fp, #12]
   2a290:	add	r0, r4, #128	; 0x80
   2a294:	cmp	r7, #0
   2a298:	beq	2a2ac <__flatcc_fb_init_parser@@Base+0x6c>
   2a29c:	mov	r1, r7
   2a2a0:	mov	r2, #224	; 0xe0
   2a2a4:	bl	14808 <memcpy@plt>
   2a2a8:	b	2a2b0 <__flatcc_fb_init_parser@@Base+0x70>
   2a2ac:	bl	14c00 <flatcc_init_options@@Base>
   2a2b0:	cmp	r5, #0
   2a2b4:	addeq	r5, r4, #416	; 0x1a0
   2a2b8:	str	r5, [r4, #412]	; 0x19c
   2a2bc:	ldr	r0, [r4, #192]	; 0xc0
   2a2c0:	ldr	r2, [pc, #576]	; 2a508 <__flatcc_fb_init_parser@@Base+0x2c8>
   2a2c4:	add	r2, pc, r2
   2a2c8:	cmp	r0, #8
   2a2cc:	bhi	2a4b0 <__flatcc_fb_init_parser@@Base+0x270>
   2a2d0:	mov	r1, #1
   2a2d4:	mov	r3, #276	; 0x114
   2a2d8:	tst	r3, r1, lsl r0
   2a2dc:	beq	2a4b0 <__flatcc_fb_init_parser@@Base+0x270>
   2a2e0:	ldr	r0, [r4, #196]	; 0xc4
   2a2e4:	ldr	r2, [pc, #544]	; 2a50c <__flatcc_fb_init_parser@@Base+0x2cc>
   2a2e8:	add	r2, pc, r2
   2a2ec:	cmp	r0, #8
   2a2f0:	bhi	2a4b0 <__flatcc_fb_init_parser@@Base+0x270>
   2a2f4:	mov	r1, #1
   2a2f8:	mov	r3, #276	; 0x114
   2a2fc:	tst	r3, r1, lsl r0
   2a300:	beq	2a4b0 <__flatcc_fb_init_parser@@Base+0x270>
   2a304:	ldr	sl, [pc, #516]	; 2a510 <__flatcc_fb_init_parser@@Base+0x2d0>
   2a308:	cmp	r8, #0
   2a30c:	add	sl, pc, sl
   2a310:	movne	sl, r8
   2a314:	mov	r0, sl
   2a318:	bl	148b0 <strlen@plt>
   2a31c:	ldr	r2, [r7, #96]	; 0x60
   2a320:	mov	r6, r0
   2a324:	mov	r0, sl
   2a328:	mov	r1, r6
   2a32c:	bl	29c50 <__flatcc_fb_create_basename@@Base>
   2a330:	cmp	r0, #0
   2a334:	str	r0, [r4, #512]	; 0x200
   2a338:	beq	2a4dc <__flatcc_fb_init_parser@@Base+0x29c>
   2a33c:	mov	r5, r0
   2a340:	stmib	sp, {r6, r7}
   2a344:	bl	148b0 <strlen@plt>
   2a348:	mov	r8, r0
   2a34c:	mov	r0, r5
   2a350:	mov	r1, r8
   2a354:	bl	296b8 <__flatcc_fb_copy_path_n@@Base>
   2a358:	cmp	r0, #0
   2a35c:	beq	2a4dc <__flatcc_fb_init_parser@@Base+0x29c>
   2a360:	mov	r6, r0
   2a364:	cmp	r8, #0
   2a368:	beq	2a398 <__flatcc_fb_init_parser@@Base+0x158>
   2a36c:	mov	r5, r6
   2a370:	mov	r7, r8
   2a374:	ldrb	r9, [r5]
   2a378:	cmp	r9, #0
   2a37c:	beq	2a398 <__flatcc_fb_init_parser@@Base+0x158>
   2a380:	bl	14880 <__ctype_toupper_loc@plt>
   2a384:	ldr	r0, [r0]
   2a388:	subs	r7, r7, #1
   2a38c:	ldr	r0, [r0, r9, lsl #2]
   2a390:	strb	r0, [r5], #1
   2a394:	bne	2a374 <__flatcc_fb_init_parser@@Base+0x134>
   2a398:	str	r6, [r4, #496]	; 0x1f0
   2a39c:	str	r8, [r4, #500]	; 0x1f4
   2a3a0:	str	r6, [r4, #516]	; 0x204
   2a3a4:	mov	r0, sl
   2a3a8:	ldr	r2, [pc, #356]	; 2a514 <__flatcc_fb_init_parser@@Base+0x2d4>
   2a3ac:	ldr	r1, [sp, #4]
   2a3b0:	add	r2, pc, r2
   2a3b4:	bl	29c50 <__flatcc_fb_create_basename@@Base>
   2a3b8:	cmp	r0, #0
   2a3bc:	str	r0, [r4, #520]	; 0x208
   2a3c0:	beq	2a4dc <__flatcc_fb_init_parser@@Base+0x29c>
   2a3c4:	ldr	r0, [sp, #8]
   2a3c8:	ldr	r0, [r0, #192]	; 0xc0
   2a3cc:	cmp	r0, #0
   2a3d0:	beq	2a3e0 <__flatcc_fb_init_parser@@Base+0x1a0>
   2a3d4:	str	r0, [r4, #476]	; 0x1dc
   2a3d8:	bl	148b0 <strlen@plt>
   2a3dc:	str	r0, [r4, #480]	; 0x1e0
   2a3e0:	ldr	r0, [r4, #412]	; 0x19c
   2a3e4:	mov	r1, #0
   2a3e8:	mov	r2, #0
   2a3ec:	mov	r5, #0
   2a3f0:	bl	28760 <fb_scope_table_find@@Base>
   2a3f4:	mov	r6, r0
   2a3f8:	cmp	r0, #0
   2a3fc:	bne	2a474 <__flatcc_fb_init_parser@@Base+0x234>
   2a400:	ldr	r6, [r4, #52]	; 0x34
   2a404:	ldr	r0, [r4, #44]	; 0x2c
   2a408:	add	r1, r6, #32
   2a40c:	cmp	r1, r0
   2a410:	bls	2a448 <__flatcc_fb_init_parser@@Base+0x208>
   2a414:	mov	r0, #65536	; 0x10000
   2a418:	mov	r1, #1
   2a41c:	bl	147cc <calloc@plt>
   2a420:	cmp	r0, #0
   2a424:	beq	2a4dc <__flatcc_fb_init_parser@@Base+0x29c>
   2a428:	ldr	r2, [r4, #48]	; 0x30
   2a42c:	mov	r1, r0
   2a430:	add	r6, r0, #16
   2a434:	str	r2, [r1], #48	; 0x30
   2a438:	add	r2, r0, #65536	; 0x10000
   2a43c:	str	r2, [r4, #44]	; 0x2c
   2a440:	str	r0, [r4, #48]	; 0x30
   2a444:	str	r6, [r4, #52]	; 0x34
   2a448:	mov	r0, #0
   2a44c:	str	r1, [r4, #52]	; 0x34
   2a450:	mov	r2, #1
   2a454:	str	r0, [r6]
   2a458:	ldr	r0, [r4, #476]	; 0x1dc
   2a45c:	ldr	r1, [r4, #480]	; 0x1e0
   2a460:	str	r1, [r6, #24]
   2a464:	str	r0, [r6, #20]
   2a468:	mov	r1, r6
   2a46c:	ldr	r0, [r4, #412]	; 0x19c
   2a470:	bl	28738 <fb_scope_table_insert_item@@Base>
   2a474:	str	r6, [r4, #544]	; 0x220
   2a478:	mov	r1, #0
   2a47c:	mov	r2, #0
   2a480:	ldr	r0, [r4, #412]	; 0x19c
   2a484:	bl	28760 <fb_scope_table_find@@Base>
   2a488:	cmp	r6, r0
   2a48c:	beq	2a4d0 <__flatcc_fb_init_parser@@Base+0x290>
   2a490:	ldr	r0, [pc, #128]	; 2a518 <__flatcc_fb_init_parser@@Base+0x2d8>
   2a494:	ldr	r1, [pc, #128]	; 2a51c <__flatcc_fb_init_parser@@Base+0x2dc>
   2a498:	ldr	r3, [pc, #128]	; 2a520 <__flatcc_fb_init_parser@@Base+0x2e0>
   2a49c:	movw	r2, #1331	; 0x533
   2a4a0:	add	r0, pc, r0
   2a4a4:	add	r1, pc, r1
   2a4a8:	add	r3, pc, r3
   2a4ac:	bl	1497c <__assert_fail@plt>
   2a4b0:	ldr	r1, [pc, #108]	; 2a524 <__flatcc_fb_init_parser@@Base+0x2e4>
   2a4b4:	mov	r0, r4
   2a4b8:	add	r1, pc, r1
   2a4bc:	bl	29e1c <__flatcc_fb_print_error@@Base>
   2a4c0:	ldr	r0, [r4, #108]	; 0x6c
   2a4c4:	mvn	r5, #0
   2a4c8:	add	r0, r0, #1
   2a4cc:	str	r0, [r4, #108]	; 0x6c
   2a4d0:	mov	r0, r5
   2a4d4:	sub	sp, fp, #28
   2a4d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a4dc:	ldr	r0, [pc, #68]	; 2a528 <__flatcc_fb_init_parser@@Base+0x2e8>
   2a4e0:	mov	r1, #34	; 0x22
   2a4e4:	mov	r2, #1
   2a4e8:	ldr	r0, [pc, r0]
   2a4ec:	ldr	r3, [r0]
   2a4f0:	ldr	r0, [pc, #52]	; 2a52c <__flatcc_fb_init_parser@@Base+0x2ec>
   2a4f4:	add	r0, pc, r0
   2a4f8:	bl	14850 <fwrite@plt>
   2a4fc:	mov	r0, #1
   2a500:	bl	14898 <exit@plt>
   2a504:	andeq	r0, r4, r8, lsr #28
   2a508:	andeq	ip, r2, sp, lsr r3
   2a50c:	andeq	ip, r2, r1, asr r3
   2a510:	andeq	ip, r2, r6, ror #6
   2a514:	andeq	r5, r1, lr, ror #5
   2a518:	ldrdeq	ip, [r2], -r7
   2a51c:	andeq	ip, r2, r6, lsr #4
   2a520:	andeq	ip, r2, pc, ror r2
   2a524:	strdeq	ip, [r2], -sp
   2a528:			; <UNDEFINED> instruction: 0x00040bb4
   2a52c:	ldrdeq	r4, [r1], -r3

0002a530 <__flatcc_fb_parse@@Base>:
   2a530:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a534:	add	fp, sp, #28
   2a538:	sub	sp, sp, #60	; 0x3c
   2a53c:	mov	sl, r0
   2a540:	ldr	r0, [pc, #4060]	; 2b524 <__flatcc_fb_parse@@Base+0xff4>
   2a544:	cmp	r3, #0
   2a548:	mov	r4, sl
   2a54c:	add	r0, pc, r0
   2a550:	str	r0, [r4, #68]!	; 0x44
   2a554:	ldr	r0, [pc, #4080]	; 2b54c <__flatcc_fb_parse@@Base+0x101c>
   2a558:	add	r7, pc, #208	; 0xd0
   2a55c:	add	r6, pc, #220	; 0xdc
   2a560:	str	r4, [sp, #40]	; 0x28
   2a564:	vld1.64	{d16-d17}, [r6 :128]
   2a568:	vld1.64	{d18-d19}, [r7 :128]
   2a56c:	add	r0, pc, r0
   2a570:	str	r0, [r4, #20]
   2a574:	mov	r0, #1
   2a578:	str	r1, [r4, #-8]
   2a57c:	str	r0, [r4, #-4]
   2a580:	add	r0, r4, #24
   2a584:	vst1.32	{d16-d17}, [r0]
   2a588:	add	r0, r4, #4
   2a58c:	vst1.32	{d18-d19}, [r0]
   2a590:	add	r0, r4, #148	; 0x94
   2a594:	strne	r1, [sl, #16]
   2a598:	str	r0, [sp, #44]	; 0x2c
   2a59c:	mov	r0, r1
   2a5a0:	mov	r1, r2
   2a5a4:	mov	r2, sl
   2a5a8:	bl	2cc44 <__flatcc_fb_parse@@Base+0x2714>
   2a5ac:	mov	r4, sl
   2a5b0:	ldr	r0, [r4, #40]!	; 0x28
   2a5b4:	ldr	r5, [r4, #-20]	; 0xffffffec
   2a5b8:	str	r5, [r4]
   2a5bc:	str	r0, [r4, #-16]
   2a5c0:	ldr	r0, [sp, #44]	; 0x2c
   2a5c4:	ldr	r0, [r0]
   2a5c8:	bl	14868 <malloc@plt>
   2a5cc:	cmp	r0, #0
   2a5d0:	str	r0, [r4, #72]	; 0x48
   2a5d4:	beq	2ca74 <__flatcc_fb_parse@@Base+0x2544>
   2a5d8:	movw	r1, #64565	; 0xfc35
   2a5dc:	ldr	r0, [r5, #16]
   2a5e0:	movt	r1, #65535	; 0xffff
   2a5e4:	add	r1, r1, #7
   2a5e8:	cmp	r0, r1
   2a5ec:	bne	2a600 <__flatcc_fb_parse@@Base+0xd0>
   2a5f0:	mov	r0, sl
   2a5f4:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   2a5f8:	ldr	r5, [sl, #40]	; 0x28
   2a5fc:	ldr	r0, [r5, #16]
   2a600:	movw	r1, #64565	; 0xfc35
   2a604:	movt	r1, #65535	; 0xffff
   2a608:	cmp	r0, r1
   2a60c:	bne	2a960 <__flatcc_fb_parse@@Base+0x430>
   2a610:	ldr	r9, [pc, #4080]	; 2b608 <__flatcc_fb_parse@@Base+0x10d8>
   2a614:	ldr	r7, [pc, #4080]	; 2b60c <__flatcc_fb_parse@@Base+0x10dc>
   2a618:	mov	r6, r5
   2a61c:	add	r9, pc, r9
   2a620:	add	r7, pc, r7
   2a624:	b	2a670 <__flatcc_fb_parse@@Base+0x140>
   2a628:	nop	{0}
   2a62c:	nop	{0}
   2a630:	andeq	r0, r0, r4
	...
   2a63c:	andeq	r0, r0, r9
   2a640:	andeq	r0, r0, r5
	...
   2a64c:			; <UNDEFINED> instruction: 0xfffffc2a
   2a650:	mov	r0, sl
   2a654:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   2a658:	ldr	r6, [r4]
   2a65c:	movw	r1, #64565	; 0xfc35
   2a660:	movt	r1, #65535	; 0xffff
   2a664:	ldr	r0, [r6, #16]
   2a668:	cmp	r0, r1
   2a66c:	bne	2a95c <__flatcc_fb_parse@@Base+0x42c>
   2a670:	mov	r0, sl
   2a674:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   2a678:	cmp	r6, #0
   2a67c:	beq	2a95c <__flatcc_fb_parse@@Base+0x42c>
   2a680:	ldr	r0, [sl, #140]	; 0x8c
   2a684:	cmp	r0, #0
   2a688:	beq	2a6e0 <__flatcc_fb_parse@@Base+0x1b0>
   2a68c:	cmp	r5, #0
   2a690:	beq	2a720 <__flatcc_fb_parse@@Base+0x1f0>
   2a694:	ldr	r2, [r5]
   2a698:	ldr	r0, [r5, #4]
   2a69c:	cmp	r2, #0
   2a6a0:	mov	r1, r2
   2a6a4:	moveq	r0, r2
   2a6a8:	moveq	r1, r9
   2a6ac:	mov	r2, sl
   2a6b0:	b	2a6c0 <__flatcc_fb_parse@@Base+0x190>
   2a6b4:	ldr	r2, [r2]
   2a6b8:	cmp	r2, #0
   2a6bc:	beq	2a6f0 <__flatcc_fb_parse@@Base+0x1c0>
   2a6c0:	ldr	r3, [r2, #20]
   2a6c4:	cmp	r3, r5
   2a6c8:	bhi	2a6b4 <__flatcc_fb_parse@@Base+0x184>
   2a6cc:	ldr	r3, [r2, #24]
   2a6d0:	cmp	r3, r5
   2a6d4:	bls	2a6b4 <__flatcc_fb_parse@@Base+0x184>
   2a6d8:	ldr	r2, [r2, #520]	; 0x208
   2a6dc:	b	2a6f4 <__flatcc_fb_parse@@Base+0x1c4>
   2a6e0:	ldr	r0, [sl, #108]	; 0x6c
   2a6e4:	cmp	r0, #9
   2a6e8:	ble	2a74c <__flatcc_fb_parse@@Base+0x21c>
   2a6ec:	b	2a95c <__flatcc_fb_parse@@Base+0x42c>
   2a6f0:	mov	r2, r9
   2a6f4:	ldr	r6, [r5, #12]
   2a6f8:	ldr	r3, [r5, #8]
   2a6fc:	str	r6, [sp]
   2a700:	stmib	sp, {r0, r1}
   2a704:	mov	r1, r7
   2a708:	ldr	r0, [pc, #4040]	; 2b6d8 <__flatcc_fb_parse@@Base+0x11a8>
   2a70c:	add	r0, pc, r0
   2a710:	str	r0, [sp, #12]
   2a714:	mov	r0, sl
   2a718:	bl	29e1c <__flatcc_fb_print_error@@Base>
   2a71c:	b	2a738 <__flatcc_fb_parse@@Base+0x208>
   2a720:	ldr	r1, [pc, #4020]	; 2b6dc <__flatcc_fb_parse@@Base+0x11ac>
   2a724:	ldr	r2, [pc, #4020]	; 2b6e0 <__flatcc_fb_parse@@Base+0x11b0>
   2a728:	mov	r0, sl
   2a72c:	add	r1, pc, r1
   2a730:	add	r2, pc, r2
   2a734:	bl	29e1c <__flatcc_fb_print_error@@Base>
   2a738:	ldr	r0, [sl, #108]	; 0x6c
   2a73c:	add	r0, r0, #1
   2a740:	str	r0, [sl, #108]	; 0x6c
   2a744:	cmp	r0, #9
   2a748:	bgt	2a95c <__flatcc_fb_parse@@Base+0x42c>
   2a74c:	ldr	r8, [r4]
   2a750:	ldr	r0, [r8, #16]
   2a754:	cmp	r0, #19
   2a758:	bne	2a770 <__flatcc_fb_parse@@Base+0x240>
   2a75c:	mov	r0, sl
   2a760:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   2a764:	cmp	r8, #0
   2a768:	bne	2a840 <__flatcc_fb_parse@@Base+0x310>
   2a76c:	b	2a818 <__flatcc_fb_parse@@Base+0x2e8>
   2a770:	cmp	r8, #0
   2a774:	beq	2a7f4 <__flatcc_fb_parse@@Base+0x2c4>
   2a778:	ldr	r2, [r8]
   2a77c:	ldr	r0, [r8, #4]
   2a780:	cmp	r2, #0
   2a784:	mov	r1, r2
   2a788:	moveq	r0, r2
   2a78c:	moveq	r1, r9
   2a790:	mov	r2, sl
   2a794:	b	2a7a4 <__flatcc_fb_parse@@Base+0x274>
   2a798:	ldr	r2, [r2]
   2a79c:	cmp	r2, #0
   2a7a0:	beq	2a7c4 <__flatcc_fb_parse@@Base+0x294>
   2a7a4:	ldr	r3, [r2, #20]
   2a7a8:	cmp	r3, r8
   2a7ac:	bhi	2a798 <__flatcc_fb_parse@@Base+0x268>
   2a7b0:	ldr	r3, [r2, #24]
   2a7b4:	cmp	r3, r8
   2a7b8:	bls	2a798 <__flatcc_fb_parse@@Base+0x268>
   2a7bc:	ldr	r2, [r2, #520]	; 0x208
   2a7c0:	b	2a7c8 <__flatcc_fb_parse@@Base+0x298>
   2a7c4:	mov	r2, r9
   2a7c8:	ldr	r6, [r8, #12]
   2a7cc:	ldr	r3, [r8, #8]
   2a7d0:	str	r6, [sp]
   2a7d4:	stmib	sp, {r0, r1}
   2a7d8:	mov	r1, r7
   2a7dc:	ldr	r0, [pc, #3840]	; 2b6e4 <__flatcc_fb_parse@@Base+0x11b4>
   2a7e0:	add	r0, pc, r0
   2a7e4:	str	r0, [sp, #12]
   2a7e8:	mov	r0, sl
   2a7ec:	bl	29e1c <__flatcc_fb_print_error@@Base>
   2a7f0:	b	2a80c <__flatcc_fb_parse@@Base+0x2dc>
   2a7f4:	ldr	r1, [pc, #4092]	; 2b7f8 <__flatcc_fb_parse@@Base+0x12c8>
   2a7f8:	ldr	r2, [pc, #4092]	; 2b7fc <__flatcc_fb_parse@@Base+0x12cc>
   2a7fc:	mov	r0, sl
   2a800:	add	r1, pc, r1
   2a804:	add	r2, pc, r2
   2a808:	bl	29e1c <__flatcc_fb_print_error@@Base>
   2a80c:	ldr	r0, [sl, #108]	; 0x6c
   2a810:	add	r0, r0, #1
   2a814:	str	r0, [sl, #108]	; 0x6c
   2a818:	ldr	r0, [r4]
   2a81c:	ldr	r6, [r0, #16]
   2a820:	cmp	r6, #0
   2a824:	beq	2a840 <__flatcc_fb_parse@@Base+0x310>
   2a828:	mov	r0, sl
   2a82c:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   2a830:	cmp	r6, #59	; 0x3b
   2a834:	bne	2a818 <__flatcc_fb_parse@@Base+0x2e8>
   2a838:	mov	r0, #0
   2a83c:	str	r0, [sl, #36]	; 0x24
   2a840:	ldr	r2, [sl, #52]	; 0x34
   2a844:	ldr	r0, [sl, #44]	; 0x2c
   2a848:	add	r1, r2, #32
   2a84c:	cmp	r1, r0
   2a850:	bls	2a888 <__flatcc_fb_parse@@Base+0x358>
   2a854:	mov	r0, #65536	; 0x10000
   2a858:	mov	r1, #1
   2a85c:	bl	147cc <calloc@plt>
   2a860:	cmp	r0, #0
   2a864:	beq	2ca74 <__flatcc_fb_parse@@Base+0x2544>
   2a868:	ldr	r2, [sl, #48]	; 0x30
   2a86c:	mov	r1, r0
   2a870:	add	r3, r0, #65536	; 0x10000
   2a874:	str	r2, [r1], #48	; 0x30
   2a878:	add	r2, r0, #16
   2a87c:	str	r3, [sl, #44]	; 0x2c
   2a880:	str	r0, [sl, #48]	; 0x30
   2a884:	str	r2, [sl, #52]	; 0x34
   2a888:	str	r1, [sl, #52]	; 0x34
   2a88c:	mov	r1, r2
   2a890:	ldr	r0, [sl, #352]	; 0x160
   2a894:	str	r0, [r1], #8
   2a898:	mov	r0, sl
   2a89c:	str	r2, [sl, #352]	; 0x160
   2a8a0:	bl	31510 <__flatcc_fb_clear_parser@@Base+0x124>
   2a8a4:	ldr	r0, [sl, #40]	; 0x28
   2a8a8:	ldr	r1, [r0, #16]
   2a8ac:	cmp	r1, #59	; 0x3b
   2a8b0:	beq	2a650 <__flatcc_fb_parse@@Base+0x120>
   2a8b4:	cmp	r0, #0
   2a8b8:	beq	2a934 <__flatcc_fb_parse@@Base+0x404>
   2a8bc:	ldr	r2, [r0]
   2a8c0:	ldr	r1, [r0, #4]
   2a8c4:	cmp	r2, #0
   2a8c8:	mov	r6, r2
   2a8cc:	moveq	r1, r2
   2a8d0:	moveq	r6, r9
   2a8d4:	mov	r2, sl
   2a8d8:	b	2a8e8 <__flatcc_fb_parse@@Base+0x3b8>
   2a8dc:	ldr	r2, [r2]
   2a8e0:	cmp	r2, #0
   2a8e4:	beq	2a908 <__flatcc_fb_parse@@Base+0x3d8>
   2a8e8:	ldr	r3, [r2, #20]
   2a8ec:	cmp	r3, r0
   2a8f0:	bhi	2a8dc <__flatcc_fb_parse@@Base+0x3ac>
   2a8f4:	ldr	r3, [r2, #24]
   2a8f8:	cmp	r3, r0
   2a8fc:	bls	2a8dc <__flatcc_fb_parse@@Base+0x3ac>
   2a900:	ldr	r2, [r2, #520]	; 0x208
   2a904:	b	2a90c <__flatcc_fb_parse@@Base+0x3dc>
   2a908:	mov	r2, r9
   2a90c:	ldr	r3, [r0, #8]
   2a910:	ldr	r0, [r0, #12]
   2a914:	stm	sp, {r0, r1, r6}
   2a918:	mov	r1, r7
   2a91c:	ldr	r0, [pc, #4092]	; 2b920 <__flatcc_fb_parse@@Base+0x13f0>
   2a920:	add	r0, pc, r0
   2a924:	str	r0, [sp, #12]
   2a928:	mov	r0, sl
   2a92c:	bl	29e1c <__flatcc_fb_print_error@@Base>
   2a930:	b	2a94c <__flatcc_fb_parse@@Base+0x41c>
   2a934:	ldr	r1, [pc, #4072]	; 2b924 <__flatcc_fb_parse@@Base+0x13f4>
   2a938:	ldr	r2, [pc, #4072]	; 2b928 <__flatcc_fb_parse@@Base+0x13f8>
   2a93c:	mov	r0, sl
   2a940:	add	r1, pc, r1
   2a944:	add	r2, pc, r2
   2a948:	bl	29e1c <__flatcc_fb_print_error@@Base>
   2a94c:	ldr	r0, [sl, #108]	; 0x6c
   2a950:	add	r0, r0, #1
   2a954:	str	r0, [sl, #108]	; 0x6c
   2a958:	b	2a658 <__flatcc_fb_parse@@Base+0x128>
   2a95c:	ldr	r5, [r4]
   2a960:	ldr	r0, [sp, #40]	; 0x28
   2a964:	add	r0, r0, #408	; 0x198
   2a968:	str	r0, [sp, #24]
   2a96c:	add	r0, sl, #376	; 0x178
   2a970:	str	r0, [sp, #28]
   2a974:	add	r0, sl, #360	; 0x168
   2a978:	str	r0, [sp, #32]
   2a97c:	add	r0, sl, #400	; 0x190
   2a980:	str	r0, [sp, #36]	; 0x24
   2a984:	add	r0, sl, #108	; 0x6c
   2a988:	str	r0, [fp, #-40]	; 0xffffffd8
   2a98c:	b	2a9e0 <__flatcc_fb_parse@@Base+0x4b0>
   2a990:	ldr	r2, [pc, #3988]	; 2b92c <__flatcc_fb_parse@@Base+0x13fc>
   2a994:	add	r2, pc, r2
   2a998:	ldr	r7, [r8, #12]
   2a99c:	ldr	r3, [r8, #8]
   2a9a0:	str	r7, [sp]
   2a9a4:	stmib	sp, {r0, r1}
   2a9a8:	ldr	r0, [pc, #3968]	; 2b930 <__flatcc_fb_parse@@Base+0x1400>
   2a9ac:	add	r0, pc, r0
   2a9b0:	str	r0, [sp, #12]
   2a9b4:	mov	r0, sl
   2a9b8:	ldr	r1, [pc, #3956]	; 2b934 <__flatcc_fb_parse@@Base+0x1404>
   2a9bc:	add	r1, pc, r1
   2a9c0:	bl	29e1c <__flatcc_fb_print_error@@Base>
   2a9c4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2a9c8:	ldr	r0, [r1]
   2a9cc:	add	r0, r0, #1
   2a9d0:	str	r0, [r1]
   2a9d4:	ldr	r5, [r4]
   2a9d8:	cmp	r5, r8
   2a9dc:	beq	2c9a0 <__flatcc_fb_parse@@Base+0x2470>
   2a9e0:	ldr	r1, [r5, #16]
   2a9e4:	cmp	r1, #0
   2a9e8:	beq	2c934 <__flatcc_fb_parse@@Base+0x2404>
   2a9ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2a9f0:	ldr	r0, [r0]
   2a9f4:	cmp	r0, #9
   2a9f8:	bgt	2c9b0 <__flatcc_fb_parse@@Base+0x2480>
   2a9fc:	mov	r8, r5
   2aa00:	cmp	r1, #4
   2aa04:	bgt	2ab48 <__flatcc_fb_parse@@Base+0x618>
   2aa08:	movw	r0, #997	; 0x3e5
   2aa0c:	mov	r5, #0
   2aa10:	add	r0, r1, r0
   2aa14:	cmp	r0, #32
   2aa18:	bhi	2b2f4 <__flatcc_fb_parse@@Base+0xdc4>
   2aa1c:	add	r1, pc, #4
   2aa20:	ldr	r0, [r1, r0, lsl #2]
   2aa24:	add	pc, r1, r0
   2aa28:	andeq	r0, r0, r4, lsl #1
   2aa2c:	andeq	r0, r0, ip, asr #17
   2aa30:	andeq	r0, r0, ip, asr #17
   2aa34:	andeq	r0, r0, ip, asr #17
   2aa38:	andeq	r0, r0, ip, asr #17
   2aa3c:	andeq	r0, r0, ip, asr #17
   2aa40:	andeq	r0, r0, ip, asr #17
   2aa44:	andeq	r0, r0, ip, asr #17
   2aa48:	andeq	r0, r0, ip, asr #17
   2aa4c:	andeq	r0, r0, ip, asr #17
   2aa50:	andeq	r0, r0, ip, asr #17
   2aa54:	andeq	r0, r0, ip, asr #17
   2aa58:	andeq	r0, r0, ip, asr #17
   2aa5c:	andeq	r0, r0, ip, asr #17
   2aa60:			; <UNDEFINED> instruction: 0x000003b8
   2aa64:	andeq	r0, r0, ip, asr #17
   2aa68:	andeq	r0, r0, ip, asr #17
   2aa6c:	andeq	r0, r0, ip, asr #17
   2aa70:	andeq	r0, r0, ip, asr #17
   2aa74:	andeq	r0, r0, ip, asr #17
   2aa78:	andeq	r0, r0, ip, asr #17
   2aa7c:	ldrdeq	r0, [r0], -ip
   2aa80:	andeq	r0, r0, ip, asr #17
   2aa84:	andeq	r0, r0, ip, asr #17
   2aa88:	andeq	r0, r0, r8, ror #8
   2aa8c:	andeq	r0, r0, ip, asr #17
   2aa90:	andeq	r0, r0, ip, ror #13
   2aa94:	andeq	r0, r0, r8, asr #14
   2aa98:	andeq	r0, r0, r4, ror #5
   2aa9c:	andeq	r0, r0, r8, ror r6
   2aaa0:	andeq	r0, r0, ip, lsl r3
   2aaa4:	andeq	r0, r0, r4, lsl #10
   2aaa8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2aaac:	mov	r0, sl
   2aab0:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   2aab4:	ldr	r6, [sl, #52]	; 0x34
   2aab8:	ldr	r0, [sl, #44]	; 0x2c
   2aabc:	add	r1, r6, #128	; 0x80
   2aac0:	cmp	r1, r0
   2aac4:	bls	2aafc <__flatcc_fb_parse@@Base+0x5cc>
   2aac8:	mov	r0, #65536	; 0x10000
   2aacc:	mov	r1, #1
   2aad0:	bl	147cc <calloc@plt>
   2aad4:	cmp	r0, #0
   2aad8:	beq	2ca74 <__flatcc_fb_parse@@Base+0x2544>
   2aadc:	ldr	r2, [sl, #48]	; 0x30
   2aae0:	mov	r1, r0
   2aae4:	add	r6, r0, #16
   2aae8:	str	r2, [r1], #144	; 0x90
   2aaec:	add	r2, r0, #65536	; 0x10000
   2aaf0:	str	r2, [sl, #44]	; 0x2c
   2aaf4:	str	r0, [sl, #48]	; 0x30
   2aaf8:	str	r6, [sl, #52]	; 0x34
   2aafc:	str	r1, [sl, #52]	; 0x34
   2ab00:	mov	r1, #3
   2ab04:	ldr	r0, [sl, #392]	; 0x188
   2ab08:	strh	r1, [r6, #8]
   2ab0c:	str	r0, [r6]
   2ab10:	str	r6, [sl, #392]	; 0x188
   2ab14:	ldr	r0, [sl, #544]	; 0x220
   2ab18:	str	r0, [r6, #12]
   2ab1c:	ldr	r0, [sl, #36]	; 0x24
   2ab20:	cmp	r0, #0
   2ab24:	beq	2b550 <__flatcc_fb_parse@@Base+0x1020>
   2ab28:	mov	r2, #0
   2ab2c:	mov	r1, r0
   2ab30:	ldr	r0, [r0]
   2ab34:	str	r2, [r1]
   2ab38:	mov	r2, r1
   2ab3c:	cmp	r0, #0
   2ab40:	bne	2ab2c <__flatcc_fb_parse@@Base+0x5fc>
   2ab44:	b	2b554 <__flatcc_fb_parse@@Base+0x1024>
   2ab48:	cmp	r1, #26
   2ab4c:	bgt	2abac <__flatcc_fb_parse@@Base+0x67c>
   2ab50:	cmp	r1, #5
   2ab54:	beq	2b25c <__flatcc_fb_parse@@Base+0xd2c>
   2ab58:	cmp	r1, #7
   2ab5c:	bne	2b2f4 <__flatcc_fb_parse@@Base+0xdc4>
   2ab60:	mov	r0, sl
   2ab64:	cmp	r8, #0
   2ab68:	bne	2ab8c <__flatcc_fb_parse@@Base+0x65c>
   2ab6c:	ldr	r1, [pc, #4008]	; 2bb1c <__flatcc_fb_parse@@Base+0x15ec>
   2ab70:	ldr	r2, [pc, #4008]	; 2bb20 <__flatcc_fb_parse@@Base+0x15f0>
   2ab74:	add	r1, pc, r1
   2ab78:	add	r2, pc, r2
   2ab7c:	b	2c300 <__flatcc_fb_parse@@Base+0x1dd0>
   2ab80:	ldr	r0, [r0]
   2ab84:	cmp	r0, #0
   2ab88:	beq	2b464 <__flatcc_fb_parse@@Base+0xf34>
   2ab8c:	ldr	r1, [r0, #20]
   2ab90:	cmp	r1, r8
   2ab94:	bhi	2ab80 <__flatcc_fb_parse@@Base+0x650>
   2ab98:	ldr	r1, [r0, #24]
   2ab9c:	cmp	r1, r8
   2aba0:	bls	2ab80 <__flatcc_fb_parse@@Base+0x650>
   2aba4:	ldr	r2, [r0, #520]	; 0x208
   2aba8:	b	2b46c <__flatcc_fb_parse@@Base+0xf3c>
   2abac:	cmp	r1, #27
   2abb0:	beq	2b2a8 <__flatcc_fb_parse@@Base+0xd78>
   2abb4:	cmp	r1, #123	; 0x7b
   2abb8:	bne	2b2f4 <__flatcc_fb_parse@@Base+0xdc4>
   2abbc:	cmp	r8, #0
   2abc0:	beq	2bab4 <__flatcc_fb_parse@@Base+0x1584>
   2abc4:	ldr	r2, [r8]
   2abc8:	ldr	r0, [r8, #4]
   2abcc:	ldr	r3, [pc, #4088]	; 2bbcc <__flatcc_fb_parse@@Base+0x169c>
   2abd0:	cmp	r2, #0
   2abd4:	add	r3, pc, r3
   2abd8:	mov	r1, r2
   2abdc:	moveq	r0, r2
   2abe0:	moveq	r1, r3
   2abe4:	mov	r2, sl
   2abe8:	b	2abf8 <__flatcc_fb_parse@@Base+0x6c8>
   2abec:	ldr	r2, [r2]
   2abf0:	cmp	r2, #0
   2abf4:	beq	2b498 <__flatcc_fb_parse@@Base+0xf68>
   2abf8:	ldr	r3, [r2, #20]
   2abfc:	cmp	r3, r8
   2ac00:	bhi	2abec <__flatcc_fb_parse@@Base+0x6bc>
   2ac04:	ldr	r3, [r2, #24]
   2ac08:	cmp	r3, r8
   2ac0c:	bls	2abec <__flatcc_fb_parse@@Base+0x6bc>
   2ac10:	ldr	r2, [r2, #520]	; 0x208
   2ac14:	b	2b4a0 <__flatcc_fb_parse@@Base+0xf70>
   2ac18:	mov	r0, sl
   2ac1c:	mov	r6, #0
   2ac20:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   2ac24:	ldr	r0, [sp, #44]	; 0x2c
   2ac28:	ldrh	r0, [r0, #152]	; 0x98
   2ac2c:	cmp	r0, #0
   2ac30:	beq	2ac58 <__flatcc_fb_parse@@Base+0x728>
   2ac34:	ldr	r0, [sl, #360]	; 0x168
   2ac38:	ldr	r1, [sl, #40]	; 0x28
   2ac3c:	ldr	r2, [sl, #364]	; 0x16c
   2ac40:	mov	r3, #0
   2ac44:	stm	sp, {r0, r2}
   2ac48:	mov	r0, sl
   2ac4c:	ldr	r2, [pc, #4076]	; 2bc40 <__flatcc_fb_parse@@Base+0x1710>
   2ac50:	add	r2, pc, r2
   2ac54:	bl	29ee4 <__flatcc_error_report@@Base>
   2ac58:	ldr	r5, [r4]
   2ac5c:	ldr	r0, [r5, #16]
   2ac60:	cmp	r0, #19
   2ac64:	bne	2b350 <__flatcc_fb_parse@@Base+0xe20>
   2ac68:	mov	r0, sl
   2ac6c:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   2ac70:	cmp	r5, #0
   2ac74:	beq	2bd7c <__flatcc_fb_parse@@Base+0x184c>
   2ac78:	ldr	r1, [sp, #32]
   2ac7c:	ldr	r5, [sl, #40]	; 0x28
   2ac80:	mov	r0, sl
   2ac84:	bl	31510 <__flatcc_fb_clear_parser@@Base+0x124>
   2ac88:	ldr	r0, [sl, #360]	; 0x168
   2ac8c:	cmp	r0, #0
   2ac90:	beq	2c244 <__flatcc_fb_parse@@Base+0x1d14>
   2ac94:	ldr	r0, [sp, #32]
   2ac98:	ldr	r0, [r0, #4]
   2ac9c:	cmp	r0, #4
   2aca0:	beq	2c244 <__flatcc_fb_parse@@Base+0x1d14>
   2aca4:	ldr	r0, [sp, #44]	; 0x2c
   2aca8:	mov	r1, #1
   2acac:	cmp	r5, #0
   2acb0:	strh	r1, [r0, #152]	; 0x98
   2acb4:	beq	2c21c <__flatcc_fb_parse@@Base+0x1cec>
   2acb8:	ldr	r2, [r5]
   2acbc:	ldr	r0, [r5, #4]
   2acc0:	ldr	r3, [pc, #4076]	; 2bcb4 <__flatcc_fb_parse@@Base+0x1784>
   2acc4:	cmp	r2, #0
   2acc8:	add	r3, pc, r3
   2accc:	mov	r1, r2
   2acd0:	moveq	r0, r2
   2acd4:	moveq	r1, r3
   2acd8:	mov	r2, sl
   2acdc:	b	2acec <__flatcc_fb_parse@@Base+0x7bc>
   2ace0:	ldr	r2, [r2]
   2ace4:	cmp	r2, #0
   2ace8:	beq	2c1e4 <__flatcc_fb_parse@@Base+0x1cb4>
   2acec:	ldr	r3, [r2, #20]
   2acf0:	cmp	r3, r5
   2acf4:	bhi	2ace0 <__flatcc_fb_parse@@Base+0x7b0>
   2acf8:	ldr	r3, [r2, #24]
   2acfc:	cmp	r3, r5
   2ad00:	bls	2ace0 <__flatcc_fb_parse@@Base+0x7b0>
   2ad04:	ldr	r2, [r2, #520]	; 0x208
   2ad08:	b	2c1ec <__flatcc_fb_parse@@Base+0x1cbc>
   2ad0c:	mov	r0, sl
   2ad10:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   2ad14:	str	r5, [fp, #-36]	; 0xffffffdc
   2ad18:	ldr	r6, [sl, #40]	; 0x28
   2ad1c:	ldr	r1, [r6, #16]
   2ad20:	mov	r0, r6
   2ad24:	cmp	r1, #59	; 0x3b
   2ad28:	bne	2bcc0 <__flatcc_fb_parse@@Base+0x1790>
   2ad2c:	mov	r0, sl
   2ad30:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   2ad34:	cmp	r6, #0
   2ad38:	beq	2bcb8 <__flatcc_fb_parse@@Base+0x1788>
   2ad3c:	str	r5, [sl, #544]	; 0x220
   2ad40:	b	2a9d4 <__flatcc_fb_parse@@Base+0x4a4>
   2ad44:	mov	r0, sl
   2ad48:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   2ad4c:	ldr	r1, [sl, #52]	; 0x34
   2ad50:	ldr	r0, [sl, #44]	; 0x2c
   2ad54:	add	r2, r1, #128	; 0x80
   2ad58:	cmp	r2, r0
   2ad5c:	bls	2ad94 <__flatcc_fb_parse@@Base+0x864>
   2ad60:	mov	r0, #65536	; 0x10000
   2ad64:	mov	r1, #1
   2ad68:	bl	147cc <calloc@plt>
   2ad6c:	cmp	r0, #0
   2ad70:	beq	2ca74 <__flatcc_fb_parse@@Base+0x2544>
   2ad74:	ldr	r1, [sl, #48]	; 0x30
   2ad78:	mov	r2, r0
   2ad7c:	add	r3, r0, #65536	; 0x10000
   2ad80:	str	r1, [r2], #144	; 0x90
   2ad84:	add	r1, r0, #16
   2ad88:	str	r3, [sl, #44]	; 0x2c
   2ad8c:	str	r0, [sl, #48]	; 0x30
   2ad90:	str	r1, [sl, #52]	; 0x34
   2ad94:	str	r2, [sl, #52]	; 0x34
   2ad98:	mov	r2, #2
   2ad9c:	ldr	r0, [sl, #392]	; 0x188
   2ada0:	strh	r2, [r1, #8]
   2ada4:	str	r0, [r1]
   2ada8:	str	r1, [sl, #392]	; 0x188
   2adac:	ldr	r0, [sl, #544]	; 0x220
   2adb0:	str	r0, [r1, #12]
   2adb4:	ldr	r0, [sl, #36]	; 0x24
   2adb8:	cmp	r0, #0
   2adbc:	beq	2b698 <__flatcc_fb_parse@@Base+0x1168>
   2adc0:	mov	r3, #0
   2adc4:	mov	r2, r0
   2adc8:	ldr	r0, [r0]
   2adcc:	str	r3, [r2]
   2add0:	mov	r3, r2
   2add4:	cmp	r0, #0
   2add8:	bne	2adc4 <__flatcc_fb_parse@@Base+0x894>
   2addc:	b	2b69c <__flatcc_fb_parse@@Base+0x116c>
   2ade0:	mov	r0, sl
   2ade4:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   2ade8:	ldr	r1, [sl, #52]	; 0x34
   2adec:	ldr	r0, [sl, #44]	; 0x2c
   2adf0:	add	r2, r1, #128	; 0x80
   2adf4:	cmp	r2, r0
   2adf8:	bls	2ae30 <__flatcc_fb_parse@@Base+0x900>
   2adfc:	mov	r0, #65536	; 0x10000
   2ae00:	mov	r1, #1
   2ae04:	bl	147cc <calloc@plt>
   2ae08:	cmp	r0, #0
   2ae0c:	beq	2ca74 <__flatcc_fb_parse@@Base+0x2544>
   2ae10:	ldr	r1, [sl, #48]	; 0x30
   2ae14:	mov	r2, r0
   2ae18:	add	r3, r0, #65536	; 0x10000
   2ae1c:	str	r1, [r2], #144	; 0x90
   2ae20:	add	r1, r0, #16
   2ae24:	str	r3, [sl, #44]	; 0x2c
   2ae28:	str	r0, [sl, #48]	; 0x30
   2ae2c:	str	r1, [sl, #52]	; 0x34
   2ae30:	str	r2, [sl, #52]	; 0x34
   2ae34:	mov	r0, #0
   2ae38:	ldr	r2, [sl, #392]	; 0x188
   2ae3c:	strh	r0, [r1, #8]
   2ae40:	str	r2, [r1]
   2ae44:	str	r1, [sl, #392]	; 0x188
   2ae48:	ldr	r2, [sl, #544]	; 0x220
   2ae4c:	str	r2, [r1, #12]
   2ae50:	ldr	r2, [sl, #36]	; 0x24
   2ae54:	cmp	r2, #0
   2ae58:	beq	2ae78 <__flatcc_fb_parse@@Base+0x948>
   2ae5c:	mov	r3, #0
   2ae60:	mov	r0, r2
   2ae64:	ldr	r2, [r2]
   2ae68:	str	r3, [r0]
   2ae6c:	mov	r3, r0
   2ae70:	cmp	r2, #0
   2ae74:	bne	2ae60 <__flatcc_fb_parse@@Base+0x930>
   2ae78:	str	r0, [r1, #32]
   2ae7c:	movw	r0, #64565	; 0xfc35
   2ae80:	str	r5, [sl, #36]	; 0x24
   2ae84:	movt	r0, #65535	; 0xffff
   2ae88:	sub	r2, r0, #12
   2ae8c:	b	2b6b0 <__flatcc_fb_parse@@Base+0x1180>
   2ae90:	mov	r0, sl
   2ae94:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   2ae98:	ldr	r1, [sl, #52]	; 0x34
   2ae9c:	ldr	r0, [sl, #44]	; 0x2c
   2aea0:	add	r2, r1, #128	; 0x80
   2aea4:	cmp	r2, r0
   2aea8:	bls	2aee0 <__flatcc_fb_parse@@Base+0x9b0>
   2aeac:	mov	r0, #65536	; 0x10000
   2aeb0:	mov	r1, #1
   2aeb4:	bl	147cc <calloc@plt>
   2aeb8:	cmp	r0, #0
   2aebc:	beq	2ca74 <__flatcc_fb_parse@@Base+0x2544>
   2aec0:	ldr	r1, [sl, #48]	; 0x30
   2aec4:	mov	r2, r0
   2aec8:	add	r3, r0, #65536	; 0x10000
   2aecc:	str	r1, [r2], #144	; 0x90
   2aed0:	add	r1, r0, #16
   2aed4:	str	r3, [sl, #44]	; 0x2c
   2aed8:	str	r0, [sl, #48]	; 0x30
   2aedc:	str	r1, [sl, #52]	; 0x34
   2aee0:	str	r2, [sl, #52]	; 0x34
   2aee4:	mov	r2, #1
   2aee8:	ldr	r0, [sl, #392]	; 0x188
   2aeec:	strh	r2, [r1, #8]
   2aef0:	str	r0, [r1]
   2aef4:	str	r1, [sl, #392]	; 0x188
   2aef8:	ldr	r0, [sl, #544]	; 0x220
   2aefc:	str	r0, [r1, #12]
   2af00:	ldr	r0, [sl, #36]	; 0x24
   2af04:	cmp	r0, #0
   2af08:	beq	2b6bc <__flatcc_fb_parse@@Base+0x118c>
   2af0c:	mov	r3, #0
   2af10:	mov	r2, r0
   2af14:	ldr	r0, [r0]
   2af18:	str	r3, [r2]
   2af1c:	mov	r3, r2
   2af20:	cmp	r0, #0
   2af24:	bne	2af10 <__flatcc_fb_parse@@Base+0x9e0>
   2af28:	b	2b6c0 <__flatcc_fb_parse@@Base+0x1190>
   2af2c:	mov	r0, sl
   2af30:	mov	r6, #0
   2af34:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   2af38:	ldr	r0, [sp, #44]	; 0x2c
   2af3c:	ldrh	r0, [r0, #168]	; 0xa8
   2af40:	cmp	r0, #2
   2af44:	bne	2af6c <__flatcc_fb_parse@@Base+0xa3c>
   2af48:	ldr	r0, [sl, #376]	; 0x178
   2af4c:	ldr	r1, [sl, #40]	; 0x28
   2af50:	ldr	r2, [sl, #380]	; 0x17c
   2af54:	mov	r3, #0
   2af58:	stm	sp, {r0, r2}
   2af5c:	mov	r0, sl
   2af60:	ldr	r2, [pc, #4024]	; 2bf20 <__flatcc_fb_parse@@Base+0x19f0>
   2af64:	add	r2, pc, r2
   2af68:	bl	29ee4 <__flatcc_error_report@@Base>
   2af6c:	ldr	r5, [r4]
   2af70:	ldr	r0, [r5, #16]
   2af74:	cmp	r0, #19
   2af78:	bne	2b3ac <__flatcc_fb_parse@@Base+0xe7c>
   2af7c:	mov	r0, sl
   2af80:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   2af84:	cmp	r5, #0
   2af88:	beq	2bdc8 <__flatcc_fb_parse@@Base+0x1898>
   2af8c:	ldr	r1, [sp, #28]
   2af90:	mov	r0, sl
   2af94:	bl	31510 <__flatcc_fb_clear_parser@@Base+0x124>
   2af98:	ldr	r0, [sl, #40]	; 0x28
   2af9c:	ldr	r1, [r0, #16]
   2afa0:	cmp	r1, #59	; 0x3b
   2afa4:	beq	2c254 <__flatcc_fb_parse@@Base+0x1d24>
   2afa8:	cmp	r0, #0
   2afac:	beq	2c154 <__flatcc_fb_parse@@Base+0x1c24>
   2afb0:	ldr	r2, [r0]
   2afb4:	ldr	r1, [r0, #4]
   2afb8:	ldr	r3, [pc, #3940]	; 2bf24 <__flatcc_fb_parse@@Base+0x19f4>
   2afbc:	cmp	r2, #0
   2afc0:	add	r3, pc, r3
   2afc4:	mov	r7, r2
   2afc8:	moveq	r1, r2
   2afcc:	moveq	r7, r3
   2afd0:	mov	r2, sl
   2afd4:	b	2afe4 <__flatcc_fb_parse@@Base+0xab4>
   2afd8:	ldr	r2, [r2]
   2afdc:	cmp	r2, #0
   2afe0:	beq	2c110 <__flatcc_fb_parse@@Base+0x1be0>
   2afe4:	ldr	r3, [r2, #20]
   2afe8:	cmp	r3, r0
   2afec:	bhi	2afd8 <__flatcc_fb_parse@@Base+0xaa8>
   2aff0:	ldr	r3, [r2, #24]
   2aff4:	cmp	r3, r0
   2aff8:	bls	2afd8 <__flatcc_fb_parse@@Base+0xaa8>
   2affc:	ldr	r2, [r2, #520]	; 0x208
   2b000:	b	2c118 <__flatcc_fb_parse@@Base+0x1be8>
   2b004:	mov	r0, sl
   2b008:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   2b00c:	ldr	r7, [sl, #52]	; 0x34
   2b010:	ldr	r0, [sl, #44]	; 0x2c
   2b014:	add	r1, r7, #128	; 0x80
   2b018:	cmp	r1, r0
   2b01c:	bls	2b054 <__flatcc_fb_parse@@Base+0xb24>
   2b020:	mov	r0, #65536	; 0x10000
   2b024:	mov	r1, #1
   2b028:	bl	147cc <calloc@plt>
   2b02c:	cmp	r0, #0
   2b030:	beq	2ca74 <__flatcc_fb_parse@@Base+0x2544>
   2b034:	ldr	r2, [sl, #48]	; 0x30
   2b038:	mov	r1, r0
   2b03c:	add	r7, r0, #16
   2b040:	str	r2, [r1], #144	; 0x90
   2b044:	add	r2, r0, #65536	; 0x10000
   2b048:	str	r2, [sl, #44]	; 0x2c
   2b04c:	str	r0, [sl, #48]	; 0x30
   2b050:	str	r7, [sl, #52]	; 0x34
   2b054:	str	r1, [sl, #52]	; 0x34
   2b058:	mov	r1, #4
   2b05c:	ldr	r0, [sl, #392]	; 0x188
   2b060:	strh	r1, [r7, #8]
   2b064:	str	r0, [r7]
   2b068:	str	r7, [sl, #392]	; 0x188
   2b06c:	ldr	r0, [sl, #544]	; 0x220
   2b070:	str	r0, [r7, #12]
   2b074:	ldr	r0, [sl, #36]	; 0x24
   2b078:	cmp	r0, #0
   2b07c:	beq	2b6e8 <__flatcc_fb_parse@@Base+0x11b8>
   2b080:	mov	r2, #0
   2b084:	mov	r1, r0
   2b088:	ldr	r0, [r0]
   2b08c:	str	r2, [r1]
   2b090:	mov	r2, r1
   2b094:	cmp	r0, #0
   2b098:	bne	2b084 <__flatcc_fb_parse@@Base+0xb54>
   2b09c:	b	2b6ec <__flatcc_fb_parse@@Base+0x11bc>
   2b0a0:	mov	r0, sl
   2b0a4:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   2b0a8:	ldr	r0, [sl, #400]	; 0x190
   2b0ac:	ldr	r6, [sl, #40]	; 0x28
   2b0b0:	cmp	r0, #0
   2b0b4:	beq	2bb4c <__flatcc_fb_parse@@Base+0x161c>
   2b0b8:	cmp	r6, #0
   2b0bc:	beq	2bb24 <__flatcc_fb_parse@@Base+0x15f4>
   2b0c0:	ldr	r2, [r6]
   2b0c4:	ldr	r0, [r6, #4]
   2b0c8:	ldr	r3, [pc, #4084]	; 2c0c4 <__flatcc_fb_parse@@Base+0x1b94>
   2b0cc:	cmp	r2, #0
   2b0d0:	add	r3, pc, r3
   2b0d4:	mov	r1, r2
   2b0d8:	moveq	r0, r2
   2b0dc:	moveq	r1, r3
   2b0e0:	mov	r2, sl
   2b0e4:	b	2b0f4 <__flatcc_fb_parse@@Base+0xbc4>
   2b0e8:	ldr	r2, [r2]
   2b0ec:	cmp	r2, #0
   2b0f0:	beq	2bae4 <__flatcc_fb_parse@@Base+0x15b4>
   2b0f4:	ldr	r3, [r2, #20]
   2b0f8:	cmp	r3, r6
   2b0fc:	bhi	2b0e8 <__flatcc_fb_parse@@Base+0xbb8>
   2b100:	ldr	r3, [r2, #24]
   2b104:	cmp	r3, r6
   2b108:	bls	2b0e8 <__flatcc_fb_parse@@Base+0xbb8>
   2b10c:	ldr	r2, [r2, #520]	; 0x208
   2b110:	b	2baec <__flatcc_fb_parse@@Base+0x15bc>
   2b114:	cmp	r8, #0
   2b118:	beq	2ba9c <__flatcc_fb_parse@@Base+0x156c>
   2b11c:	ldr	r2, [r8]
   2b120:	ldr	r0, [r8, #4]
   2b124:	ldr	r3, [pc, #4064]	; 2c10c <__flatcc_fb_parse@@Base+0x1bdc>
   2b128:	cmp	r2, #0
   2b12c:	add	r3, pc, r3
   2b130:	mov	r1, r2
   2b134:	moveq	r0, r2
   2b138:	moveq	r1, r3
   2b13c:	mov	r2, sl
   2b140:	b	2b150 <__flatcc_fb_parse@@Base+0xc20>
   2b144:	ldr	r2, [r2]
   2b148:	cmp	r2, #0
   2b14c:	beq	2a990 <__flatcc_fb_parse@@Base+0x460>
   2b150:	ldr	r3, [r2, #20]
   2b154:	cmp	r3, r8
   2b158:	bhi	2b144 <__flatcc_fb_parse@@Base+0xc14>
   2b15c:	ldr	r3, [r2, #24]
   2b160:	cmp	r3, r8
   2b164:	bls	2b144 <__flatcc_fb_parse@@Base+0xc14>
   2b168:	ldr	r2, [r2, #520]	; 0x208
   2b16c:	b	2a998 <__flatcc_fb_parse@@Base+0x468>
   2b170:	mov	r0, sl
   2b174:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   2b178:	ldr	r6, [sl, #52]	; 0x34
   2b17c:	ldr	r0, [sl, #44]	; 0x2c
   2b180:	add	r1, r6, #32
   2b184:	cmp	r1, r0
   2b188:	bls	2b1c0 <__flatcc_fb_parse@@Base+0xc90>
   2b18c:	mov	r0, #65536	; 0x10000
   2b190:	mov	r1, #1
   2b194:	bl	147cc <calloc@plt>
   2b198:	cmp	r0, #0
   2b19c:	beq	2ca74 <__flatcc_fb_parse@@Base+0x2544>
   2b1a0:	ldr	r2, [sl, #48]	; 0x30
   2b1a4:	mov	r1, r0
   2b1a8:	add	r6, r0, #16
   2b1ac:	str	r2, [r1], #48	; 0x30
   2b1b0:	add	r2, r0, #65536	; 0x10000
   2b1b4:	str	r2, [sl, #44]	; 0x2c
   2b1b8:	str	r0, [sl, #48]	; 0x30
   2b1bc:	str	r6, [sl, #52]	; 0x34
   2b1c0:	str	r1, [sl, #52]	; 0x34
   2b1c4:	ldr	r0, [sl, #356]	; 0x164
   2b1c8:	str	r0, [r6]
   2b1cc:	str	r6, [sl, #356]	; 0x164
   2b1d0:	ldr	r5, [sl, #40]	; 0x28
   2b1d4:	ldr	r0, [r5, #16]
   2b1d8:	cmp	r0, #19
   2b1dc:	bne	2b408 <__flatcc_fb_parse@@Base+0xed8>
   2b1e0:	mov	r0, sl
   2b1e4:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   2b1e8:	cmp	r5, #0
   2b1ec:	beq	2be7c <__flatcc_fb_parse@@Base+0x194c>
   2b1f0:	add	r1, r6, #8
   2b1f4:	mov	r0, sl
   2b1f8:	bl	31510 <__flatcc_fb_clear_parser@@Base+0x124>
   2b1fc:	ldr	r0, [r6, #12]
   2b200:	cmp	r0, #0
   2b204:	bne	2be7c <__flatcc_fb_parse@@Base+0x194c>
   2b208:	ldr	r2, [r5]
   2b20c:	ldr	r0, [r5, #4]
   2b210:	ldr	r3, [pc, #4040]	; 2c1e0 <__flatcc_fb_parse@@Base+0x1cb0>
   2b214:	cmp	r2, #0
   2b218:	add	r3, pc, r3
   2b21c:	mov	r1, r2
   2b220:	moveq	r0, r2
   2b224:	moveq	r1, r3
   2b228:	mov	r2, sl
   2b22c:	b	2b23c <__flatcc_fb_parse@@Base+0xd0c>
   2b230:	ldr	r2, [r2]
   2b234:	cmp	r2, #0
   2b238:	beq	2c0c8 <__flatcc_fb_parse@@Base+0x1b98>
   2b23c:	ldr	r3, [r2, #20]
   2b240:	cmp	r3, r5
   2b244:	bhi	2b230 <__flatcc_fb_parse@@Base+0xd00>
   2b248:	ldr	r3, [r2, #24]
   2b24c:	cmp	r3, r5
   2b250:	bls	2b230 <__flatcc_fb_parse@@Base+0xd00>
   2b254:	ldr	r2, [r2, #520]	; 0x208
   2b258:	b	2c0d0 <__flatcc_fb_parse@@Base+0x1ba0>
   2b25c:	mov	r0, sl
   2b260:	cmp	r8, #0
   2b264:	bne	2b288 <__flatcc_fb_parse@@Base+0xd58>
   2b268:	ldr	r1, [pc, #4080]	; 2c260 <__flatcc_fb_parse@@Base+0x1d30>
   2b26c:	ldr	r2, [pc, #4080]	; 2c264 <__flatcc_fb_parse@@Base+0x1d34>
   2b270:	add	r1, pc, r1
   2b274:	add	r2, pc, r2
   2b278:	b	2c300 <__flatcc_fb_parse@@Base+0x1dd0>
   2b27c:	ldr	r0, [r0]
   2b280:	cmp	r0, #0
   2b284:	beq	2b4bc <__flatcc_fb_parse@@Base+0xf8c>
   2b288:	ldr	r1, [r0, #20]
   2b28c:	cmp	r1, r8
   2b290:	bhi	2b27c <__flatcc_fb_parse@@Base+0xd4c>
   2b294:	ldr	r1, [r0, #24]
   2b298:	cmp	r1, r8
   2b29c:	bls	2b27c <__flatcc_fb_parse@@Base+0xd4c>
   2b2a0:	ldr	r2, [r0, #520]	; 0x208
   2b2a4:	b	2b4c4 <__flatcc_fb_parse@@Base+0xf94>
   2b2a8:	mov	r0, sl
   2b2ac:	cmp	r8, #0
   2b2b0:	bne	2b2d4 <__flatcc_fb_parse@@Base+0xda4>
   2b2b4:	ldr	r1, [pc, #4060]	; 2c298 <__flatcc_fb_parse@@Base+0x1d68>
   2b2b8:	ldr	r2, [pc, #4060]	; 2c29c <__flatcc_fb_parse@@Base+0x1d6c>
   2b2bc:	add	r1, pc, r1
   2b2c0:	add	r2, pc, r2
   2b2c4:	b	2c300 <__flatcc_fb_parse@@Base+0x1dd0>
   2b2c8:	ldr	r0, [r0]
   2b2cc:	cmp	r0, #0
   2b2d0:	beq	2b4f0 <__flatcc_fb_parse@@Base+0xfc0>
   2b2d4:	ldr	r1, [r0, #20]
   2b2d8:	cmp	r1, r8
   2b2dc:	bhi	2b2c8 <__flatcc_fb_parse@@Base+0xd98>
   2b2e0:	ldr	r1, [r0, #24]
   2b2e4:	cmp	r1, r8
   2b2e8:	bls	2b2c8 <__flatcc_fb_parse@@Base+0xd98>
   2b2ec:	ldr	r2, [r0, #520]	; 0x208
   2b2f0:	b	2b4f8 <__flatcc_fb_parse@@Base+0xfc8>
   2b2f4:	cmp	r8, #0
   2b2f8:	beq	2bacc <__flatcc_fb_parse@@Base+0x159c>
   2b2fc:	ldr	r2, [r8]
   2b300:	ldr	r0, [r8, #4]
   2b304:	ldr	r3, [pc, #4092]	; 2c308 <__flatcc_fb_parse@@Base+0x1dd8>
   2b308:	cmp	r2, #0
   2b30c:	add	r3, pc, r3
   2b310:	mov	r1, r2
   2b314:	moveq	r0, r2
   2b318:	moveq	r1, r3
   2b31c:	mov	r2, sl
   2b320:	b	2b330 <__flatcc_fb_parse@@Base+0xe00>
   2b324:	ldr	r2, [r2]
   2b328:	cmp	r2, #0
   2b32c:	beq	2b528 <__flatcc_fb_parse@@Base+0xff8>
   2b330:	ldr	r3, [r2, #20]
   2b334:	cmp	r3, r8
   2b338:	bhi	2b324 <__flatcc_fb_parse@@Base+0xdf4>
   2b33c:	ldr	r3, [r2, #24]
   2b340:	cmp	r3, r8
   2b344:	bls	2b324 <__flatcc_fb_parse@@Base+0xdf4>
   2b348:	ldr	r2, [r2, #520]	; 0x208
   2b34c:	b	2b530 <__flatcc_fb_parse@@Base+0x1000>
   2b350:	cmp	r5, #0
   2b354:	beq	2bd54 <__flatcc_fb_parse@@Base+0x1824>
   2b358:	ldr	r2, [r5]
   2b35c:	ldr	r0, [r5, #4]
   2b360:	ldr	r3, [pc, #4068]	; 2c34c <__flatcc_fb_parse@@Base+0x1e1c>
   2b364:	cmp	r2, #0
   2b368:	add	r3, pc, r3
   2b36c:	mov	r1, r2
   2b370:	moveq	r0, r2
   2b374:	moveq	r1, r3
   2b378:	mov	r2, sl
   2b37c:	b	2b38c <__flatcc_fb_parse@@Base+0xe5c>
   2b380:	ldr	r2, [r2]
   2b384:	cmp	r2, #0
   2b388:	beq	2bb94 <__flatcc_fb_parse@@Base+0x1664>
   2b38c:	ldr	r3, [r2, #20]
   2b390:	cmp	r3, r5
   2b394:	bhi	2b380 <__flatcc_fb_parse@@Base+0xe50>
   2b398:	ldr	r3, [r2, #24]
   2b39c:	cmp	r3, r5
   2b3a0:	bls	2b380 <__flatcc_fb_parse@@Base+0xe50>
   2b3a4:	ldr	r2, [r2, #520]	; 0x208
   2b3a8:	b	2bb9c <__flatcc_fb_parse@@Base+0x166c>
   2b3ac:	cmp	r5, #0
   2b3b0:	beq	2bda0 <__flatcc_fb_parse@@Base+0x1870>
   2b3b4:	ldr	r2, [r5]
   2b3b8:	ldr	r0, [r5, #4]
   2b3bc:	ldr	r3, [pc, #4036]	; 2c388 <__flatcc_fb_parse@@Base+0x1e58>
   2b3c0:	cmp	r2, #0
   2b3c4:	add	r3, pc, r3
   2b3c8:	mov	r1, r2
   2b3cc:	moveq	r0, r2
   2b3d0:	moveq	r1, r3
   2b3d4:	mov	r2, sl
   2b3d8:	b	2b3e8 <__flatcc_fb_parse@@Base+0xeb8>
   2b3dc:	ldr	r2, [r2]
   2b3e0:	cmp	r2, #0
   2b3e4:	beq	2bbd0 <__flatcc_fb_parse@@Base+0x16a0>
   2b3e8:	ldr	r3, [r2, #20]
   2b3ec:	cmp	r3, r5
   2b3f0:	bhi	2b3dc <__flatcc_fb_parse@@Base+0xeac>
   2b3f4:	ldr	r3, [r2, #24]
   2b3f8:	cmp	r3, r5
   2b3fc:	bls	2b3dc <__flatcc_fb_parse@@Base+0xeac>
   2b400:	ldr	r2, [r2, #520]	; 0x208
   2b404:	b	2bbd8 <__flatcc_fb_parse@@Base+0x16a8>
   2b408:	cmp	r5, #0
   2b40c:	beq	2be54 <__flatcc_fb_parse@@Base+0x1924>
   2b410:	ldr	r2, [r5]
   2b414:	ldr	r0, [r5, #4]
   2b418:	ldr	r3, [pc, #4048]	; 2c3f0 <__flatcc_fb_parse@@Base+0x1ec0>
   2b41c:	cmp	r2, #0
   2b420:	add	r3, pc, r3
   2b424:	mov	r1, r2
   2b428:	moveq	r0, r2
   2b42c:	moveq	r1, r3
   2b430:	mov	r2, sl
   2b434:	b	2b444 <__flatcc_fb_parse@@Base+0xf14>
   2b438:	ldr	r2, [r2]
   2b43c:	cmp	r2, #0
   2b440:	beq	2bc7c <__flatcc_fb_parse@@Base+0x174c>
   2b444:	ldr	r3, [r2, #20]
   2b448:	cmp	r3, r5
   2b44c:	bhi	2b438 <__flatcc_fb_parse@@Base+0xf08>
   2b450:	ldr	r3, [r2, #24]
   2b454:	cmp	r3, r5
   2b458:	bls	2b438 <__flatcc_fb_parse@@Base+0xf08>
   2b45c:	ldr	r2, [r2, #520]	; 0x208
   2b460:	b	2bc84 <__flatcc_fb_parse@@Base+0x1754>
   2b464:	ldr	r2, [pc, #4028]	; 2c428 <__flatcc_fb_parse@@Base+0x1ef8>
   2b468:	add	r2, pc, r2
   2b46c:	ldr	r0, [r8, #12]
   2b470:	ldr	r3, [r8, #8]
   2b474:	str	r0, [sp]
   2b478:	mov	r0, #1
   2b47c:	str	r0, [sp, #4]
   2b480:	ldr	r0, [pc, #4004]	; 2c42c <__flatcc_fb_parse@@Base+0x1efc>
   2b484:	add	r0, pc, r0
   2b488:	str	r0, [sp, #8]
   2b48c:	ldr	r0, [pc, #3996]	; 2c430 <__flatcc_fb_parse@@Base+0x1f00>
   2b490:	add	r0, pc, r0
   2b494:	b	2a9b0 <__flatcc_fb_parse@@Base+0x480>
   2b498:	ldr	r2, [pc, #3988]	; 2c434 <__flatcc_fb_parse@@Base+0x1f04>
   2b49c:	add	r2, pc, r2
   2b4a0:	ldr	r7, [r8, #12]
   2b4a4:	ldr	r3, [r8, #8]
   2b4a8:	str	r7, [sp]
   2b4ac:	stmib	sp, {r0, r1}
   2b4b0:	ldr	r0, [pc, #3968]	; 2c438 <__flatcc_fb_parse@@Base+0x1f08>
   2b4b4:	add	r0, pc, r0
   2b4b8:	b	2a9b0 <__flatcc_fb_parse@@Base+0x480>
   2b4bc:	ldr	r2, [pc, #3960]	; 2c43c <__flatcc_fb_parse@@Base+0x1f0c>
   2b4c0:	add	r2, pc, r2
   2b4c4:	ldr	r0, [r8, #12]
   2b4c8:	ldr	r3, [r8, #8]
   2b4cc:	str	r0, [sp]
   2b4d0:	mov	r0, #1
   2b4d4:	str	r0, [sp, #4]
   2b4d8:	ldr	r0, [pc, #3936]	; 2c440 <__flatcc_fb_parse@@Base+0x1f10>
   2b4dc:	add	r0, pc, r0
   2b4e0:	str	r0, [sp, #8]
   2b4e4:	ldr	r0, [pc, #3928]	; 2c444 <__flatcc_fb_parse@@Base+0x1f14>
   2b4e8:	add	r0, pc, r0
   2b4ec:	b	2a9b0 <__flatcc_fb_parse@@Base+0x480>
   2b4f0:	ldr	r2, [pc, #3920]	; 2c448 <__flatcc_fb_parse@@Base+0x1f18>
   2b4f4:	add	r2, pc, r2
   2b4f8:	ldr	r0, [r8, #12]
   2b4fc:	ldr	r3, [r8, #8]
   2b500:	str	r0, [sp]
   2b504:	mov	r0, #5
   2b508:	str	r0, [sp, #4]
   2b50c:	ldr	r0, [pc, #3896]	; 2c44c <__flatcc_fb_parse@@Base+0x1f1c>
   2b510:	add	r0, pc, r0
   2b514:	str	r0, [sp, #8]
   2b518:	ldr	r0, [pc, #3888]	; 2c450 <__flatcc_fb_parse@@Base+0x1f20>
   2b51c:	add	r0, pc, r0
   2b520:	b	2a9b0 <__flatcc_fb_parse@@Base+0x480>
   2b524:	andeq	ip, r2, lr, asr #4
   2b528:	ldr	r2, [pc, #3876]	; 2c454 <__flatcc_fb_parse@@Base+0x1f24>
   2b52c:	add	r2, pc, r2
   2b530:	ldr	r7, [r8, #12]
   2b534:	ldr	r3, [r8, #8]
   2b538:	str	r7, [sp]
   2b53c:	stmib	sp, {r0, r1}
   2b540:	ldr	r0, [pc, #3856]	; 2c458 <__flatcc_fb_parse@@Base+0x1f28>
   2b544:	add	r0, pc, r0
   2b548:	b	2a9b0 <__flatcc_fb_parse@@Base+0x480>
   2b54c:	andeq	sp, r2, r4, lsl #19
   2b550:	mov	r1, #0
   2b554:	str	r1, [r6, #32]
   2b558:	str	r5, [sl, #36]	; 0x24
   2b55c:	ldr	r5, [sl, #40]	; 0x28
   2b560:	ldr	r0, [r5, #16]
   2b564:	cmp	r0, #9
   2b568:	bne	2b63c <__flatcc_fb_parse@@Base+0x110c>
   2b56c:	mov	r0, sl
   2b570:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   2b574:	cmp	r5, #0
   2b578:	str	r5, [r6, #4]
   2b57c:	beq	2c760 <__flatcc_fb_parse@@Base+0x2230>
   2b580:	ldr	r5, [r4]
   2b584:	ldr	r0, [r5, #16]
   2b588:	cmp	r0, #58	; 0x3a
   2b58c:	bne	2c484 <__flatcc_fb_parse@@Base+0x1f54>
   2b590:	mov	r0, sl
   2b594:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   2b598:	cmp	r5, #0
   2b59c:	beq	2c484 <__flatcc_fb_parse@@Base+0x1f54>
   2b5a0:	add	r1, r6, #40	; 0x28
   2b5a4:	mov	r0, sl
   2b5a8:	bl	32e24 <__flatcc_fb_clear_parser@@Base+0x1a38>
   2b5ac:	ldrh	r1, [r6, #48]	; 0x30
   2b5b0:	ldr	r0, [r6, #40]	; 0x28
   2b5b4:	cmp	r1, #8
   2b5b8:	bne	2c184 <__flatcc_fb_parse@@Base+0x1c54>
   2b5bc:	ldr	r1, [r0, #16]
   2b5c0:	add	r1, r1, #996	; 0x3e4
   2b5c4:	cmp	r1, #21
   2b5c8:	bhi	2c484 <__flatcc_fb_parse@@Base+0x1f54>
   2b5cc:	movw	r3, #2051	; 0x803
   2b5d0:	mov	r2, #1
   2b5d4:	movt	r3, #32
   2b5d8:	tst	r3, r2, lsl r1
   2b5dc:	beq	2c484 <__flatcc_fb_parse@@Base+0x1f54>
   2b5e0:	ldr	r2, [r0]
   2b5e4:	ldr	r1, [r0, #4]
   2b5e8:	ldr	r3, [pc, #3976]	; 2c578 <__flatcc_fb_parse@@Base+0x2048>
   2b5ec:	cmp	r2, #0
   2b5f0:	add	r3, pc, r3
   2b5f4:	mov	r7, r2
   2b5f8:	moveq	r1, r2
   2b5fc:	moveq	r7, r3
   2b600:	mov	r2, sl
   2b604:	b	2b61c <__flatcc_fb_parse@@Base+0x10ec>
   2b608:	andeq	r5, r1, r2, lsl #1
   2b60c:	andeq	fp, r2, r3, asr #30
   2b610:	ldr	r2, [r2]
   2b614:	cmp	r2, #0
   2b618:	beq	2c30c <__flatcc_fb_parse@@Base+0x1ddc>
   2b61c:	ldr	r3, [r2, #20]
   2b620:	cmp	r3, r0
   2b624:	bhi	2b610 <__flatcc_fb_parse@@Base+0x10e0>
   2b628:	ldr	r3, [r2, #24]
   2b62c:	cmp	r3, r0
   2b630:	bls	2b610 <__flatcc_fb_parse@@Base+0x10e0>
   2b634:	ldr	r2, [r2, #520]	; 0x208
   2b638:	b	2c314 <__flatcc_fb_parse@@Base+0x1de4>
   2b63c:	cmp	r5, #0
   2b640:	beq	2bdec <__flatcc_fb_parse@@Base+0x18bc>
   2b644:	ldr	r2, [r5]
   2b648:	ldr	r0, [r5, #4]
   2b64c:	ldr	r3, [pc, #4068]	; 2c638 <__flatcc_fb_parse@@Base+0x2108>
   2b650:	cmp	r2, #0
   2b654:	add	r3, pc, r3
   2b658:	mov	r1, r2
   2b65c:	moveq	r0, r2
   2b660:	moveq	r1, r3
   2b664:	mov	r2, sl
   2b668:	b	2b678 <__flatcc_fb_parse@@Base+0x1148>
   2b66c:	ldr	r2, [r2]
   2b670:	cmp	r2, #0
   2b674:	beq	2bc08 <__flatcc_fb_parse@@Base+0x16d8>
   2b678:	ldr	r3, [r2, #20]
   2b67c:	cmp	r3, r5
   2b680:	bhi	2b66c <__flatcc_fb_parse@@Base+0x113c>
   2b684:	ldr	r3, [r2, #24]
   2b688:	cmp	r3, r5
   2b68c:	bls	2b66c <__flatcc_fb_parse@@Base+0x113c>
   2b690:	ldr	r2, [r2, #520]	; 0x208
   2b694:	b	2bc10 <__flatcc_fb_parse@@Base+0x16e0>
   2b698:	mov	r2, #0
   2b69c:	movw	r0, #64565	; 0xfc35
   2b6a0:	str	r2, [r1, #32]
   2b6a4:	str	r5, [sl, #36]	; 0x24
   2b6a8:	movt	r0, #65535	; 0xffff
   2b6ac:	add	r2, r0, #4
   2b6b0:	mov	r0, sl
   2b6b4:	bl	31800 <__flatcc_fb_clear_parser@@Base+0x414>
   2b6b8:	b	2a9d4 <__flatcc_fb_parse@@Base+0x4a4>
   2b6bc:	mov	r2, #0
   2b6c0:	str	r2, [r1, #32]
   2b6c4:	mov	r0, sl
   2b6c8:	mvn	r2, #972	; 0x3cc
   2b6cc:	str	r5, [sl, #36]	; 0x24
   2b6d0:	bl	31800 <__flatcc_fb_clear_parser@@Base+0x414>
   2b6d4:	b	2a9d4 <__flatcc_fb_parse@@Base+0x4a4>
   2b6d8:	andeq	ip, r2, r2, asr #2
   2b6dc:	andeq	fp, r2, r9, lsl #29
   2b6e0:	andeq	ip, r2, lr, lsl r1
   2b6e4:	andeq	ip, r2, r6, lsr #1
   2b6e8:	mov	r1, #0
   2b6ec:	str	r1, [r7, #32]
   2b6f0:	str	r5, [sl, #36]	; 0x24
   2b6f4:	ldr	r5, [sl, #40]	; 0x28
   2b6f8:	ldr	r0, [r5, #16]
   2b6fc:	cmp	r0, #9
   2b700:	bne	2ba40 <__flatcc_fb_parse@@Base+0x1510>
   2b704:	mov	r0, sl
   2b708:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   2b70c:	str	r5, [r7, #4]
   2b710:	cmp	r5, #0
   2b714:	mov	r5, #0
   2b718:	beq	2c3b4 <__flatcc_fb_parse@@Base+0x1e84>
   2b71c:	mov	r0, sl
   2b720:	bl	3253c <__flatcc_fb_clear_parser@@Base+0x1150>
   2b724:	str	r0, [r7, #28]
   2b728:	ldr	r6, [sl, #40]	; 0x28
   2b72c:	ldr	r0, [r6, #16]
   2b730:	cmp	r0, #123	; 0x7b
   2b734:	bne	2bfdc <__flatcc_fb_parse@@Base+0x1aac>
   2b738:	mov	r0, sl
   2b73c:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   2b740:	cmp	r6, #0
   2b744:	str	r6, [sp, #16]
   2b748:	beq	2c3b4 <__flatcc_fb_parse@@Base+0x1e84>
   2b74c:	ldr	r9, [r4]
   2b750:	ldr	r0, [r9, #16]
   2b754:	cmp	r0, #9
   2b758:	bne	2b9e4 <__flatcc_fb_parse@@Base+0x14b4>
   2b75c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2b760:	ldr	r0, [r0]
   2b764:	cmp	r0, #9
   2b768:	bgt	2c3b4 <__flatcc_fb_parse@@Base+0x1e84>
   2b76c:	ldr	r6, [sl, #52]	; 0x34
   2b770:	ldr	r0, [sl, #44]	; 0x2c
   2b774:	add	r1, r6, #128	; 0x80
   2b778:	cmp	r1, r0
   2b77c:	bls	2b7b4 <__flatcc_fb_parse@@Base+0x1284>
   2b780:	mov	r0, #65536	; 0x10000
   2b784:	mov	r1, #1
   2b788:	bl	147cc <calloc@plt>
   2b78c:	cmp	r0, #0
   2b790:	beq	2ca74 <__flatcc_fb_parse@@Base+0x2544>
   2b794:	ldr	r2, [sl, #48]	; 0x30
   2b798:	mov	r1, r0
   2b79c:	add	r6, r0, #16
   2b7a0:	str	r2, [r1], #144	; 0x90
   2b7a4:	add	r2, r0, #65536	; 0x10000
   2b7a8:	str	r2, [sl, #44]	; 0x2c
   2b7ac:	str	r0, [sl, #48]	; 0x30
   2b7b0:	str	r6, [sl, #52]	; 0x34
   2b7b4:	str	r1, [sl, #52]	; 0x34
   2b7b8:	mov	r1, #5
   2b7bc:	ldr	r0, [r7, #20]
   2b7c0:	strh	r1, [r6, #8]
   2b7c4:	str	r0, [r6]
   2b7c8:	str	r6, [r7, #20]
   2b7cc:	ldr	r0, [sl, #36]	; 0x24
   2b7d0:	cmp	r0, #0
   2b7d4:	beq	2b800 <__flatcc_fb_parse@@Base+0x12d0>
   2b7d8:	mov	r2, #0
   2b7dc:	mov	r1, r0
   2b7e0:	ldr	r0, [r0]
   2b7e4:	str	r2, [r1]
   2b7e8:	mov	r2, r1
   2b7ec:	cmp	r0, #0
   2b7f0:	bne	2b7dc <__flatcc_fb_parse@@Base+0x12ac>
   2b7f4:	b	2b804 <__flatcc_fb_parse@@Base+0x12d4>
   2b7f8:			; <UNDEFINED> instruction: 0x0002bdb5
   2b7fc:	andeq	ip, r2, r2, lsl #1
   2b800:	mov	r1, #0
   2b804:	str	r1, [r6, #68]	; 0x44
   2b808:	mov	r0, sl
   2b80c:	sub	r1, fp, #32
   2b810:	str	r5, [sl, #36]	; 0x24
   2b814:	bl	323b4 <__flatcc_fb_clear_parser@@Base+0xfc8>
   2b818:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2b81c:	mov	r2, r6
   2b820:	mov	r1, #12
   2b824:	str	r0, [r2, #16]!
   2b828:	strh	r1, [r2, #8]
   2b82c:	ldr	r1, [r0]
   2b830:	cmp	r1, #0
   2b834:	beq	2b84c <__flatcc_fb_parse@@Base+0x131c>
   2b838:	mov	r0, r1
   2b83c:	ldr	r1, [r1]
   2b840:	cmp	r1, #0
   2b844:	bne	2b838 <__flatcc_fb_parse@@Base+0x1308>
   2b848:	str	r0, [fp, #-32]	; 0xffffffe0
   2b84c:	ldr	r0, [r0, #4]
   2b850:	str	r0, [r6, #4]
   2b854:	ldr	r5, [r4]
   2b858:	ldr	r0, [r5, #16]
   2b85c:	cmp	r0, #58	; 0x3a
   2b860:	bne	2b974 <__flatcc_fb_parse@@Base+0x1444>
   2b864:	mov	r0, sl
   2b868:	str	r2, [sp, #20]
   2b86c:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   2b870:	cmp	r5, #0
   2b874:	beq	2b96c <__flatcc_fb_parse@@Base+0x143c>
   2b878:	ldr	r1, [sp, #20]
   2b87c:	ldr	r0, [r1]
   2b880:	ldr	r0, [r0]
   2b884:	cmp	r0, #0
   2b888:	beq	2b964 <__flatcc_fb_parse@@Base+0x1434>
   2b88c:	cmp	r9, #0
   2b890:	beq	2b938 <__flatcc_fb_parse@@Base+0x1408>
   2b894:	ldr	r2, [r9]
   2b898:	ldr	r0, [r9, #4]
   2b89c:	ldr	r3, [pc, #4072]	; 2c88c <__flatcc_fb_parse@@Base+0x235c>
   2b8a0:	cmp	r2, #0
   2b8a4:	add	r3, pc, r3
   2b8a8:	mov	r1, r2
   2b8ac:	moveq	r0, r2
   2b8b0:	moveq	r1, r3
   2b8b4:	mov	r2, sl
   2b8b8:	b	2b8c8 <__flatcc_fb_parse@@Base+0x1398>
   2b8bc:	ldr	r2, [r2]
   2b8c0:	cmp	r2, #0
   2b8c4:	beq	2b8e8 <__flatcc_fb_parse@@Base+0x13b8>
   2b8c8:	ldr	r3, [r2, #20]
   2b8cc:	cmp	r3, r9
   2b8d0:	bhi	2b8bc <__flatcc_fb_parse@@Base+0x138c>
   2b8d4:	ldr	r3, [r2, #24]
   2b8d8:	cmp	r3, r9
   2b8dc:	bls	2b8bc <__flatcc_fb_parse@@Base+0x138c>
   2b8e0:	ldr	r2, [r2, #520]	; 0x208
   2b8e4:	b	2b8f0 <__flatcc_fb_parse@@Base+0x13c0>
   2b8e8:	ldr	r2, [pc, #4052]	; 2c8c4 <__flatcc_fb_parse@@Base+0x2394>
   2b8ec:	add	r2, pc, r2
   2b8f0:	ldr	r5, [r9, #12]
   2b8f4:	ldr	r3, [r9, #8]
   2b8f8:	str	r5, [sp]
   2b8fc:	stmib	sp, {r0, r1}
   2b900:	ldr	r0, [pc, #4032]	; 2c8c8 <__flatcc_fb_parse@@Base+0x2398>
   2b904:	add	r0, pc, r0
   2b908:	str	r0, [sp, #12]
   2b90c:	mov	r0, sl
   2b910:	ldr	r1, [pc, #4020]	; 2c8cc <__flatcc_fb_parse@@Base+0x239c>
   2b914:	add	r1, pc, r1
   2b918:	bl	29e1c <__flatcc_fb_print_error@@Base>
   2b91c:	b	2b950 <__flatcc_fb_parse@@Base+0x1420>
   2b920:	muleq	r2, r4, pc	; <UNPREDICTABLE>
   2b924:	andeq	fp, r2, r5, ror ip
   2b928:	andeq	fp, r2, r0, ror pc
   2b92c:	andeq	r4, r1, sl, lsl #26
   2b930:	andeq	fp, r2, pc, asr #31
   2b934:	andeq	fp, r2, r7, lsr #23
   2b938:	ldr	r1, [pc, #4072]	; 2c928 <__flatcc_fb_parse@@Base+0x23f8>
   2b93c:	ldr	r2, [pc, #4072]	; 2c92c <__flatcc_fb_parse@@Base+0x23fc>
   2b940:	mov	r0, sl
   2b944:	add	r1, pc, r1
   2b948:	add	r2, pc, r2
   2b94c:	bl	29e1c <__flatcc_fb_print_error@@Base>
   2b950:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2b954:	ldr	r0, [r1]
   2b958:	add	r0, r0, #1
   2b95c:	str	r0, [r1]
   2b960:	ldr	r1, [sp, #20]
   2b964:	mov	r0, sl
   2b968:	bl	32e24 <__flatcc_fb_clear_parser@@Base+0x1a38>
   2b96c:	ldr	r5, [r4]
   2b970:	ldr	r0, [r5, #16]
   2b974:	cmp	r0, #61	; 0x3d
   2b978:	bne	2b9a4 <__flatcc_fb_parse@@Base+0x1474>
   2b97c:	mov	r0, sl
   2b980:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   2b984:	cmp	r5, #0
   2b988:	beq	2b9a4 <__flatcc_fb_parse@@Base+0x1474>
   2b98c:	ldr	r3, [pc, #3996]	; 2c930 <__flatcc_fb_parse@@Base+0x2400>
   2b990:	add	r1, r6, #48	; 0x30
   2b994:	mov	r0, sl
   2b998:	mov	r2, #0
   2b99c:	add	r3, pc, r3
   2b9a0:	bl	327f8 <__flatcc_fb_clear_parser@@Base+0x140c>
   2b9a4:	ldr	r5, [r4]
   2b9a8:	ldr	r0, [r5, #16]
   2b9ac:	cmp	r0, #44	; 0x2c
   2b9b0:	bne	2c78c <__flatcc_fb_parse@@Base+0x225c>
   2b9b4:	mov	r0, sl
   2b9b8:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   2b9bc:	ldr	r9, [sl, #40]	; 0x28
   2b9c0:	cmp	r5, #0
   2b9c4:	ldr	r0, [r9, #16]
   2b9c8:	beq	2c790 <__flatcc_fb_parse@@Base+0x2260>
   2b9cc:	mov	r5, #0
   2b9d0:	cmp	r0, #9
   2b9d4:	str	r5, [sl, #36]	; 0x24
   2b9d8:	beq	2b75c <__flatcc_fb_parse@@Base+0x122c>
   2b9dc:	cmp	r0, #125	; 0x7d
   2b9e0:	beq	2c7a0 <__flatcc_fb_parse@@Base+0x2270>
   2b9e4:	cmp	r9, #0
   2b9e8:	beq	2c38c <__flatcc_fb_parse@@Base+0x1e5c>
   2b9ec:	ldr	r2, [r9]
   2b9f0:	ldr	r0, [r9, #4]
   2b9f4:	ldr	r3, [pc, #4076]	; 2c9e8 <__flatcc_fb_parse@@Base+0x24b8>
   2b9f8:	cmp	r2, #0
   2b9fc:	add	r3, pc, r3
   2ba00:	mov	r1, r2
   2ba04:	moveq	r0, r2
   2ba08:	moveq	r1, r3
   2ba0c:	mov	r2, sl
   2ba10:	b	2ba20 <__flatcc_fb_parse@@Base+0x14f0>
   2ba14:	ldr	r2, [r2]
   2ba18:	cmp	r2, #0
   2ba1c:	beq	2c350 <__flatcc_fb_parse@@Base+0x1e20>
   2ba20:	ldr	r3, [r2, #20]
   2ba24:	cmp	r3, r9
   2ba28:	bhi	2ba14 <__flatcc_fb_parse@@Base+0x14e4>
   2ba2c:	ldr	r3, [r2, #24]
   2ba30:	cmp	r3, r9
   2ba34:	bls	2ba14 <__flatcc_fb_parse@@Base+0x14e4>
   2ba38:	ldr	r2, [r2, #520]	; 0x208
   2ba3c:	b	2c358 <__flatcc_fb_parse@@Base+0x1e28>
   2ba40:	cmp	r5, #0
   2ba44:	beq	2be20 <__flatcc_fb_parse@@Base+0x18f0>
   2ba48:	ldr	r2, [r5]
   2ba4c:	ldr	r0, [r5, #4]
   2ba50:	ldr	r3, [pc, #4072]	; 2ca40 <__flatcc_fb_parse@@Base+0x2510>
   2ba54:	cmp	r2, #0
   2ba58:	add	r3, pc, r3
   2ba5c:	mov	r1, r2
   2ba60:	moveq	r0, r2
   2ba64:	moveq	r1, r3
   2ba68:	mov	r2, sl
   2ba6c:	b	2ba7c <__flatcc_fb_parse@@Base+0x154c>
   2ba70:	ldr	r2, [r2]
   2ba74:	cmp	r2, #0
   2ba78:	beq	2bc44 <__flatcc_fb_parse@@Base+0x1714>
   2ba7c:	ldr	r3, [r2, #20]
   2ba80:	cmp	r3, r5
   2ba84:	bhi	2ba70 <__flatcc_fb_parse@@Base+0x1540>
   2ba88:	ldr	r3, [r2, #24]
   2ba8c:	cmp	r3, r5
   2ba90:	bls	2ba70 <__flatcc_fb_parse@@Base+0x1540>
   2ba94:	ldr	r2, [r2, #520]	; 0x208
   2ba98:	b	2bc4c <__flatcc_fb_parse@@Base+0x171c>
   2ba9c:	ldr	r1, [pc, #4088]	; 2ca9c <__flatcc_fb_parse@@Base+0x256c>
   2baa0:	ldr	r2, [pc, #4088]	; 2caa0 <__flatcc_fb_parse@@Base+0x2570>
   2baa4:	mov	r0, sl
   2baa8:	add	r1, pc, r1
   2baac:	add	r2, pc, r2
   2bab0:	b	2c300 <__flatcc_fb_parse@@Base+0x1dd0>
   2bab4:	ldr	r1, [pc, #4072]	; 2caa4 <__flatcc_fb_parse@@Base+0x2574>
   2bab8:	ldr	r2, [pc, #4072]	; 2caa8 <__flatcc_fb_parse@@Base+0x2578>
   2babc:	mov	r0, sl
   2bac0:	add	r1, pc, r1
   2bac4:	add	r2, pc, r2
   2bac8:	b	2c300 <__flatcc_fb_parse@@Base+0x1dd0>
   2bacc:	ldr	r1, [pc, #4056]	; 2caac <__flatcc_fb_parse@@Base+0x257c>
   2bad0:	ldr	r2, [pc, #4056]	; 2cab0 <__flatcc_fb_parse@@Base+0x2580>
   2bad4:	mov	r0, sl
   2bad8:	add	r1, pc, r1
   2badc:	add	r2, pc, r2
   2bae0:	b	2c300 <__flatcc_fb_parse@@Base+0x1dd0>
   2bae4:	ldr	r2, [pc, #4040]	; 2cab4 <__flatcc_fb_parse@@Base+0x2584>
   2bae8:	add	r2, pc, r2
   2baec:	ldr	r7, [r6, #12]
   2baf0:	ldr	r3, [r6, #8]
   2baf4:	str	r7, [sp]
   2baf8:	stmib	sp, {r0, r1}
   2bafc:	ldr	r0, [pc, #4020]	; 2cab8 <__flatcc_fb_parse@@Base+0x2588>
   2bb00:	add	r0, pc, r0
   2bb04:	str	r0, [sp, #12]
   2bb08:	mov	r0, sl
   2bb0c:	ldr	r1, [pc, #4008]	; 2cabc <__flatcc_fb_parse@@Base+0x258c>
   2bb10:	add	r1, pc, r1
   2bb14:	bl	29e1c <__flatcc_fb_print_error@@Base>
   2bb18:	b	2bb3c <__flatcc_fb_parse@@Base+0x160c>
   2bb1c:	andeq	fp, r2, r1, asr #20
   2bb20:	andeq	fp, r2, sp, asr #29
   2bb24:	ldr	r1, [pc, #3988]	; 2cac0 <__flatcc_fb_parse@@Base+0x2590>
   2bb28:	ldr	r2, [pc, #3988]	; 2cac4 <__flatcc_fb_parse@@Base+0x2594>
   2bb2c:	mov	r0, sl
   2bb30:	add	r1, pc, r1
   2bb34:	add	r2, pc, r2
   2bb38:	bl	29e1c <__flatcc_fb_print_error@@Base>
   2bb3c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2bb40:	ldr	r0, [r1]
   2bb44:	add	r0, r0, #1
   2bb48:	str	r0, [r1]
   2bb4c:	ldr	r1, [sp, #36]	; 0x24
   2bb50:	mov	r0, sl
   2bb54:	bl	323b4 <__flatcc_fb_clear_parser@@Base+0xfc8>
   2bb58:	str	r5, [sl, #36]	; 0x24
   2bb5c:	ldr	r0, [sl, #544]	; 0x220
   2bb60:	ldr	r1, [sl, #40]	; 0x28
   2bb64:	str	r0, [sl, #408]	; 0x198
   2bb68:	ldr	r0, [r1, #16]
   2bb6c:	cmp	r0, #59	; 0x3b
   2bb70:	beq	2c254 <__flatcc_fb_parse@@Base+0x1d24>
   2bb74:	str	r5, [sp]
   2bb78:	str	r5, [sp, #4]
   2bb7c:	mov	r0, sl
   2bb80:	mov	r3, r6
   2bb84:	ldr	r2, [pc, #4024]	; 2cb44 <__flatcc_fb_parse@@Base+0x2614>
   2bb88:	add	r2, pc, r2
   2bb8c:	bl	29ee4 <__flatcc_error_report@@Base>
   2bb90:	b	2a9d4 <__flatcc_fb_parse@@Base+0x4a4>
   2bb94:	ldr	r2, [pc, #3948]	; 2cb08 <__flatcc_fb_parse@@Base+0x25d8>
   2bb98:	add	r2, pc, r2
   2bb9c:	ldr	r7, [r5, #12]
   2bba0:	ldr	r3, [r5, #8]
   2bba4:	str	r7, [sp]
   2bba8:	stmib	sp, {r0, r1}
   2bbac:	ldr	r0, [pc, #3928]	; 2cb0c <__flatcc_fb_parse@@Base+0x25dc>
   2bbb0:	add	r0, pc, r0
   2bbb4:	str	r0, [sp, #12]
   2bbb8:	mov	r0, sl
   2bbbc:	ldr	r1, [pc, #3916]	; 2cb10 <__flatcc_fb_parse@@Base+0x25e0>
   2bbc0:	add	r1, pc, r1
   2bbc4:	bl	29e1c <__flatcc_fb_print_error@@Base>
   2bbc8:	b	2bd6c <__flatcc_fb_parse@@Base+0x183c>
   2bbcc:	andeq	r4, r1, sl, asr #21
   2bbd0:	ldr	r2, [pc, #3852]	; 2cae4 <__flatcc_fb_parse@@Base+0x25b4>
   2bbd4:	add	r2, pc, r2
   2bbd8:	ldr	r7, [r5, #12]
   2bbdc:	ldr	r3, [r5, #8]
   2bbe0:	str	r7, [sp]
   2bbe4:	stmib	sp, {r0, r1}
   2bbe8:	ldr	r0, [pc, #3832]	; 2cae8 <__flatcc_fb_parse@@Base+0x25b8>
   2bbec:	add	r0, pc, r0
   2bbf0:	str	r0, [sp, #12]
   2bbf4:	mov	r0, sl
   2bbf8:	ldr	r1, [pc, #3820]	; 2caec <__flatcc_fb_parse@@Base+0x25bc>
   2bbfc:	add	r1, pc, r1
   2bc00:	bl	29e1c <__flatcc_fb_print_error@@Base>
   2bc04:	b	2bdb8 <__flatcc_fb_parse@@Base+0x1888>
   2bc08:	ldr	r2, [pc, #3948]	; 2cb7c <__flatcc_fb_parse@@Base+0x264c>
   2bc0c:	add	r2, pc, r2
   2bc10:	ldr	r7, [r5, #12]
   2bc14:	ldr	r3, [r5, #8]
   2bc18:	str	r7, [sp]
   2bc1c:	stmib	sp, {r0, r1}
   2bc20:	ldr	r0, [pc, #3928]	; 2cb80 <__flatcc_fb_parse@@Base+0x2650>
   2bc24:	add	r0, pc, r0
   2bc28:	str	r0, [sp, #12]
   2bc2c:	mov	r0, sl
   2bc30:	ldr	r1, [pc, #3916]	; 2cb84 <__flatcc_fb_parse@@Base+0x2654>
   2bc34:	add	r1, pc, r1
   2bc38:	bl	29e1c <__flatcc_fb_print_error@@Base>
   2bc3c:	b	2be04 <__flatcc_fb_parse@@Base+0x18d4>
   2bc40:	andeq	fp, r2, r6, lsr #30
   2bc44:	ldr	r2, [pc, #3996]	; 2cbe8 <__flatcc_fb_parse@@Base+0x26b8>
   2bc48:	add	r2, pc, r2
   2bc4c:	ldr	r6, [r5, #12]
   2bc50:	ldr	r3, [r5, #8]
   2bc54:	str	r6, [sp]
   2bc58:	stmib	sp, {r0, r1}
   2bc5c:	ldr	r0, [pc, #3976]	; 2cbec <__flatcc_fb_parse@@Base+0x26bc>
   2bc60:	add	r0, pc, r0
   2bc64:	str	r0, [sp, #12]
   2bc68:	mov	r0, sl
   2bc6c:	ldr	r1, [pc, #3964]	; 2cbf0 <__flatcc_fb_parse@@Base+0x26c0>
   2bc70:	add	r1, pc, r1
   2bc74:	bl	29e1c <__flatcc_fb_print_error@@Base>
   2bc78:	b	2be38 <__flatcc_fb_parse@@Base+0x1908>
   2bc7c:	ldr	r2, [pc, #3780]	; 2cb48 <__flatcc_fb_parse@@Base+0x2618>
   2bc80:	add	r2, pc, r2
   2bc84:	ldr	r7, [r5, #12]
   2bc88:	ldr	r3, [r5, #8]
   2bc8c:	str	r7, [sp]
   2bc90:	stmib	sp, {r0, r1}
   2bc94:	ldr	r0, [pc, #3760]	; 2cb4c <__flatcc_fb_parse@@Base+0x261c>
   2bc98:	add	r0, pc, r0
   2bc9c:	str	r0, [sp, #12]
   2bca0:	mov	r0, sl
   2bca4:	ldr	r1, [pc, #3748]	; 2cb50 <__flatcc_fb_parse@@Base+0x2620>
   2bca8:	add	r1, pc, r1
   2bcac:	bl	29e1c <__flatcc_fb_print_error@@Base>
   2bcb0:	b	2be6c <__flatcc_fb_parse@@Base+0x193c>
   2bcb4:	ldrdeq	r4, [r1], -r6
   2bcb8:	ldr	r0, [r4]
   2bcbc:	ldr	r1, [r0, #16]
   2bcc0:	cmp	r1, #9
   2bcc4:	bne	2bcf4 <__flatcc_fb_parse@@Base+0x17c4>
   2bcc8:	mov	r0, sl
   2bccc:	sub	r1, fp, #36	; 0x24
   2bcd0:	bl	323b4 <__flatcc_fb_clear_parser@@Base+0xfc8>
   2bcd4:	str	r5, [sl, #36]	; 0x24
   2bcd8:	ldr	r1, [sl, #40]	; 0x28
   2bcdc:	ldr	r0, [r1, #16]
   2bce0:	cmp	r0, #59	; 0x3b
   2bce4:	bne	2bf28 <__flatcc_fb_parse@@Base+0x19f8>
   2bce8:	mov	r0, sl
   2bcec:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   2bcf0:	b	2bf44 <__flatcc_fb_parse@@Base+0x1a14>
   2bcf4:	cmp	r0, #0
   2bcf8:	beq	2c070 <__flatcc_fb_parse@@Base+0x1b40>
   2bcfc:	ldr	r2, [r0]
   2bd00:	ldr	r1, [r0, #4]
   2bd04:	ldr	r3, [pc, #3516]	; 2cac8 <__flatcc_fb_parse@@Base+0x2598>
   2bd08:	cmp	r2, #0
   2bd0c:	add	r3, pc, r3
   2bd10:	mov	r7, r2
   2bd14:	moveq	r1, r2
   2bd18:	moveq	r7, r3
   2bd1c:	mov	r2, sl
   2bd20:	b	2bd30 <__flatcc_fb_parse@@Base+0x1800>
   2bd24:	ldr	r2, [r2]
   2bd28:	cmp	r2, #0
   2bd2c:	beq	2c038 <__flatcc_fb_parse@@Base+0x1b08>
   2bd30:	ldr	r3, [r2, #20]
   2bd34:	cmp	r3, r0
   2bd38:	bhi	2bd24 <__flatcc_fb_parse@@Base+0x17f4>
   2bd3c:	ldr	r3, [r2, #24]
   2bd40:	cmp	r3, r0
   2bd44:	bls	2bd24 <__flatcc_fb_parse@@Base+0x17f4>
   2bd48:	ldr	r2, [r2, #520]	; 0x208
   2bd4c:	mov	r6, #0
   2bd50:	b	2c044 <__flatcc_fb_parse@@Base+0x1b14>
   2bd54:	ldr	r1, [pc, #3512]	; 2cb14 <__flatcc_fb_parse@@Base+0x25e4>
   2bd58:	ldr	r2, [pc, #3512]	; 2cb18 <__flatcc_fb_parse@@Base+0x25e8>
   2bd5c:	mov	r0, sl
   2bd60:	add	r1, pc, r1
   2bd64:	add	r2, pc, r2
   2bd68:	bl	29e1c <__flatcc_fb_print_error@@Base>
   2bd6c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2bd70:	ldr	r0, [r1]
   2bd74:	add	r0, r0, #1
   2bd78:	str	r0, [r1]
   2bd7c:	ldr	r0, [r4]
   2bd80:	ldr	r5, [r0, #16]
   2bd84:	cmp	r5, #0
   2bd88:	beq	2a9d4 <__flatcc_fb_parse@@Base+0x4a4>
   2bd8c:	mov	r0, sl
   2bd90:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   2bd94:	cmp	r5, #59	; 0x3b
   2bd98:	bne	2bd7c <__flatcc_fb_parse@@Base+0x184c>
   2bd9c:	b	2c0bc <__flatcc_fb_parse@@Base+0x1b8c>
   2bda0:	ldr	r1, [pc, #3400]	; 2caf0 <__flatcc_fb_parse@@Base+0x25c0>
   2bda4:	ldr	r2, [pc, #3400]	; 2caf4 <__flatcc_fb_parse@@Base+0x25c4>
   2bda8:	mov	r0, sl
   2bdac:	add	r1, pc, r1
   2bdb0:	add	r2, pc, r2
   2bdb4:	bl	29e1c <__flatcc_fb_print_error@@Base>
   2bdb8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2bdbc:	ldr	r0, [r1]
   2bdc0:	add	r0, r0, #1
   2bdc4:	str	r0, [r1]
   2bdc8:	ldr	r0, [r4]
   2bdcc:	ldr	r5, [r0, #16]
   2bdd0:	cmp	r5, #0
   2bdd4:	beq	2a9d4 <__flatcc_fb_parse@@Base+0x4a4>
   2bdd8:	mov	r0, sl
   2bddc:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   2bde0:	cmp	r5, #59	; 0x3b
   2bde4:	bne	2bdc8 <__flatcc_fb_parse@@Base+0x1898>
   2bde8:	b	2c0bc <__flatcc_fb_parse@@Base+0x1b8c>
   2bdec:	ldr	r1, [pc, #3476]	; 2cb88 <__flatcc_fb_parse@@Base+0x2658>
   2bdf0:	ldr	r2, [pc, #3476]	; 2cb8c <__flatcc_fb_parse@@Base+0x265c>
   2bdf4:	mov	r0, sl
   2bdf8:	add	r1, pc, r1
   2bdfc:	add	r2, pc, r2
   2be00:	bl	29e1c <__flatcc_fb_print_error@@Base>
   2be04:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2be08:	ldr	r0, [r1]
   2be0c:	add	r0, r0, #1
   2be10:	str	r0, [r1]
   2be14:	mov	r0, #0
   2be18:	str	r0, [r6, #4]
   2be1c:	b	2c760 <__flatcc_fb_parse@@Base+0x2230>
   2be20:	ldr	r1, [pc, #3532]	; 2cbf4 <__flatcc_fb_parse@@Base+0x26c4>
   2be24:	ldr	r2, [pc, #3532]	; 2cbf8 <__flatcc_fb_parse@@Base+0x26c8>
   2be28:	mov	r0, sl
   2be2c:	add	r1, pc, r1
   2be30:	add	r2, pc, r2
   2be34:	bl	29e1c <__flatcc_fb_print_error@@Base>
   2be38:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2be3c:	mov	r5, #0
   2be40:	ldr	r0, [r1]
   2be44:	add	r0, r0, #1
   2be48:	str	r0, [r1]
   2be4c:	str	r5, [r7, #4]
   2be50:	b	2c3b4 <__flatcc_fb_parse@@Base+0x1e84>
   2be54:	ldr	r1, [pc, #3320]	; 2cb54 <__flatcc_fb_parse@@Base+0x2624>
   2be58:	ldr	r2, [pc, #3320]	; 2cb58 <__flatcc_fb_parse@@Base+0x2628>
   2be5c:	mov	r0, sl
   2be60:	add	r1, pc, r1
   2be64:	add	r2, pc, r2
   2be68:	bl	29e1c <__flatcc_fb_print_error@@Base>
   2be6c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2be70:	ldr	r0, [r1]
   2be74:	add	r0, r0, #1
   2be78:	str	r0, [r1]
   2be7c:	ldr	r0, [r4]
   2be80:	ldr	r1, [r0, #16]
   2be84:	cmp	r1, #59	; 0x3b
   2be88:	beq	2c254 <__flatcc_fb_parse@@Base+0x1d24>
   2be8c:	cmp	r0, #0
   2be90:	beq	2bf08 <__flatcc_fb_parse@@Base+0x19d8>
   2be94:	ldr	r2, [r0]
   2be98:	ldr	r1, [r0, #4]
   2be9c:	ldr	r3, [pc, #3268]	; 2cb68 <__flatcc_fb_parse@@Base+0x2638>
   2bea0:	cmp	r2, #0
   2bea4:	add	r3, pc, r3
   2bea8:	mov	r7, r2
   2beac:	moveq	r1, r2
   2beb0:	moveq	r7, r3
   2beb4:	mov	r2, sl
   2beb8:	b	2bec8 <__flatcc_fb_parse@@Base+0x1998>
   2bebc:	ldr	r2, [r2]
   2bec0:	cmp	r2, #0
   2bec4:	beq	2bee8 <__flatcc_fb_parse@@Base+0x19b8>
   2bec8:	ldr	r3, [r2, #20]
   2becc:	cmp	r3, r0
   2bed0:	bhi	2bebc <__flatcc_fb_parse@@Base+0x198c>
   2bed4:	ldr	r3, [r2, #24]
   2bed8:	cmp	r3, r0
   2bedc:	bls	2bebc <__flatcc_fb_parse@@Base+0x198c>
   2bee0:	ldr	r2, [r2, #520]	; 0x208
   2bee4:	b	2bef0 <__flatcc_fb_parse@@Base+0x19c0>
   2bee8:	ldr	r2, [pc, #3196]	; 2cb6c <__flatcc_fb_parse@@Base+0x263c>
   2beec:	add	r2, pc, r2
   2bef0:	ldr	r3, [r0, #8]
   2bef4:	ldr	r0, [r0, #12]
   2bef8:	stm	sp, {r0, r1, r7}
   2befc:	ldr	r0, [pc, #3180]	; 2cb70 <__flatcc_fb_parse@@Base+0x2640>
   2bf00:	add	r0, pc, r0
   2bf04:	b	2a9b0 <__flatcc_fb_parse@@Base+0x480>
   2bf08:	ldr	r1, [pc, #3172]	; 2cb74 <__flatcc_fb_parse@@Base+0x2644>
   2bf0c:	ldr	r2, [pc, #3172]	; 2cb78 <__flatcc_fb_parse@@Base+0x2648>
   2bf10:	mov	r0, sl
   2bf14:	add	r1, pc, r1
   2bf18:	add	r2, pc, r2
   2bf1c:	b	2c300 <__flatcc_fb_parse@@Base+0x1dd0>
   2bf20:			; <UNDEFINED> instruction: 0x0002bbb4
   2bf24:	ldrdeq	r4, [r1], -lr
   2bf28:	str	r5, [sp]
   2bf2c:	str	r5, [sp, #4]
   2bf30:	mov	r0, sl
   2bf34:	mov	r3, r6
   2bf38:	ldr	r2, [pc, #2976]	; 2cae0 <__flatcc_fb_parse@@Base+0x25b0>
   2bf3c:	add	r2, pc, r2
   2bf40:	bl	29ee4 <__flatcc_error_report@@Base>
   2bf44:	ldr	r6, [fp, #-36]	; 0xffffffdc
   2bf48:	ldr	r0, [sl, #412]	; 0x19c
   2bf4c:	mov	r2, #0
   2bf50:	mov	r1, r6
   2bf54:	bl	28760 <fb_scope_table_find@@Base>
   2bf58:	mov	r7, r0
   2bf5c:	cmp	r0, #0
   2bf60:	bne	2bfd4 <__flatcc_fb_parse@@Base+0x1aa4>
   2bf64:	ldr	r7, [sl, #52]	; 0x34
   2bf68:	ldr	r0, [sl, #44]	; 0x2c
   2bf6c:	add	r1, r7, #32
   2bf70:	cmp	r1, r0
   2bf74:	bls	2bfac <__flatcc_fb_parse@@Base+0x1a7c>
   2bf78:	mov	r0, #65536	; 0x10000
   2bf7c:	mov	r1, #1
   2bf80:	bl	147cc <calloc@plt>
   2bf84:	cmp	r0, #0
   2bf88:	beq	2ca74 <__flatcc_fb_parse@@Base+0x2544>
   2bf8c:	ldr	r2, [sl, #48]	; 0x30
   2bf90:	mov	r1, r0
   2bf94:	add	r7, r0, #16
   2bf98:	str	r2, [r1], #48	; 0x30
   2bf9c:	add	r2, r0, #65536	; 0x10000
   2bfa0:	str	r2, [sl, #44]	; 0x2c
   2bfa4:	str	r0, [sl, #48]	; 0x30
   2bfa8:	str	r7, [sl, #52]	; 0x34
   2bfac:	str	r1, [sl, #52]	; 0x34
   2bfb0:	ldr	r1, [sp, #24]
   2bfb4:	str	r6, [r7]
   2bfb8:	mov	r2, #1
   2bfbc:	ldm	r1, {r0, r1}
   2bfc0:	str	r1, [r7, #24]
   2bfc4:	mov	r1, r7
   2bfc8:	str	r0, [r7, #20]
   2bfcc:	ldr	r0, [sl, #412]	; 0x19c
   2bfd0:	bl	28738 <fb_scope_table_insert_item@@Base>
   2bfd4:	str	r7, [sl, #544]	; 0x220
   2bfd8:	b	2a9d4 <__flatcc_fb_parse@@Base+0x4a4>
   2bfdc:	cmp	r6, #0
   2bfe0:	beq	2c16c <__flatcc_fb_parse@@Base+0x1c3c>
   2bfe4:	ldr	r2, [r6]
   2bfe8:	ldr	r0, [r6, #4]
   2bfec:	ldr	r3, [pc, #3080]	; 2cbfc <__flatcc_fb_parse@@Base+0x26cc>
   2bff0:	cmp	r2, #0
   2bff4:	add	r3, pc, r3
   2bff8:	mov	r1, r2
   2bffc:	moveq	r0, r2
   2c000:	moveq	r1, r3
   2c004:	mov	r2, sl
   2c008:	b	2c018 <__flatcc_fb_parse@@Base+0x1ae8>
   2c00c:	ldr	r2, [r2]
   2c010:	cmp	r2, #0
   2c014:	beq	2c130 <__flatcc_fb_parse@@Base+0x1c00>
   2c018:	ldr	r3, [r2, #20]
   2c01c:	cmp	r3, r6
   2c020:	bhi	2c00c <__flatcc_fb_parse@@Base+0x1adc>
   2c024:	ldr	r3, [r2, #24]
   2c028:	cmp	r3, r6
   2c02c:	bls	2c00c <__flatcc_fb_parse@@Base+0x1adc>
   2c030:	ldr	r2, [r2, #520]	; 0x208
   2c034:	b	2c138 <__flatcc_fb_parse@@Base+0x1c08>
   2c038:	ldr	r2, [pc, #2700]	; 2cacc <__flatcc_fb_parse@@Base+0x259c>
   2c03c:	mov	r6, #0
   2c040:	add	r2, pc, r2
   2c044:	ldr	r3, [r0, #8]
   2c048:	ldr	r0, [r0, #12]
   2c04c:	stm	sp, {r0, r1, r7}
   2c050:	ldr	r0, [pc, #2680]	; 2cad0 <__flatcc_fb_parse@@Base+0x25a0>
   2c054:	add	r0, pc, r0
   2c058:	str	r0, [sp, #12]
   2c05c:	mov	r0, sl
   2c060:	ldr	r1, [pc, #2668]	; 2cad4 <__flatcc_fb_parse@@Base+0x25a4>
   2c064:	add	r1, pc, r1
   2c068:	bl	29e1c <__flatcc_fb_print_error@@Base>
   2c06c:	b	2c08c <__flatcc_fb_parse@@Base+0x1b5c>
   2c070:	ldr	r1, [pc, #2656]	; 2cad8 <__flatcc_fb_parse@@Base+0x25a8>
   2c074:	ldr	r2, [pc, #2656]	; 2cadc <__flatcc_fb_parse@@Base+0x25ac>
   2c078:	mov	r0, sl
   2c07c:	mov	r6, #0
   2c080:	add	r1, pc, r1
   2c084:	add	r2, pc, r2
   2c088:	bl	29e1c <__flatcc_fb_print_error@@Base>
   2c08c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2c090:	ldr	r0, [r1]
   2c094:	add	r0, r0, #1
   2c098:	str	r0, [r1]
   2c09c:	ldr	r0, [r4]
   2c0a0:	ldr	r5, [r0, #16]
   2c0a4:	cmp	r5, #0
   2c0a8:	beq	2a9d4 <__flatcc_fb_parse@@Base+0x4a4>
   2c0ac:	mov	r0, sl
   2c0b0:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   2c0b4:	cmp	r5, #59	; 0x3b
   2c0b8:	bne	2c09c <__flatcc_fb_parse@@Base+0x1b6c>
   2c0bc:	str	r6, [sl, #36]	; 0x24
   2c0c0:	b	2a9d4 <__flatcc_fb_parse@@Base+0x4a4>
   2c0c4:	andeq	r4, r1, lr, asr #11
   2c0c8:	ldr	r2, [pc, #2700]	; 2cb5c <__flatcc_fb_parse@@Base+0x262c>
   2c0cc:	add	r2, pc, r2
   2c0d0:	ldr	r7, [r5, #12]
   2c0d4:	ldr	r3, [r5, #8]
   2c0d8:	str	r7, [sp]
   2c0dc:	stmib	sp, {r0, r1}
   2c0e0:	ldr	r0, [pc, #2680]	; 2cb60 <__flatcc_fb_parse@@Base+0x2630>
   2c0e4:	add	r0, pc, r0
   2c0e8:	str	r0, [sp, #12]
   2c0ec:	mov	r0, sl
   2c0f0:	ldr	r1, [pc, #2668]	; 2cb64 <__flatcc_fb_parse@@Base+0x2634>
   2c0f4:	add	r1, pc, r1
   2c0f8:	bl	29e1c <__flatcc_fb_print_error@@Base>
   2c0fc:	ldr	r0, [sl, #108]	; 0x6c
   2c100:	add	r0, r0, #1
   2c104:	str	r0, [sl, #108]	; 0x6c
   2c108:	b	2be7c <__flatcc_fb_parse@@Base+0x194c>
   2c10c:	andeq	r4, r1, r2, ror r5
   2c110:	ldr	r2, [pc, #2528]	; 2caf8 <__flatcc_fb_parse@@Base+0x25c8>
   2c114:	add	r2, pc, r2
   2c118:	ldr	r3, [r0, #8]
   2c11c:	ldr	r0, [r0, #12]
   2c120:	stm	sp, {r0, r1, r7}
   2c124:	ldr	r0, [pc, #2512]	; 2cafc <__flatcc_fb_parse@@Base+0x25cc>
   2c128:	add	r0, pc, r0
   2c12c:	b	2a9b0 <__flatcc_fb_parse@@Base+0x480>
   2c130:	ldr	r2, [pc, #2760]	; 2cc00 <__flatcc_fb_parse@@Base+0x26d0>
   2c134:	add	r2, pc, r2
   2c138:	ldr	r7, [r6, #12]
   2c13c:	ldr	r3, [r6, #8]
   2c140:	str	r7, [sp]
   2c144:	stmib	sp, {r0, r1}
   2c148:	ldr	r0, [pc, #2740]	; 2cc04 <__flatcc_fb_parse@@Base+0x26d4>
   2c14c:	add	r0, pc, r0
   2c150:	b	2c370 <__flatcc_fb_parse@@Base+0x1e40>
   2c154:	ldr	r1, [pc, #2468]	; 2cb00 <__flatcc_fb_parse@@Base+0x25d0>
   2c158:	ldr	r2, [pc, #2468]	; 2cb04 <__flatcc_fb_parse@@Base+0x25d4>
   2c15c:	mov	r0, sl
   2c160:	add	r1, pc, r1
   2c164:	add	r2, pc, r2
   2c168:	b	2c300 <__flatcc_fb_parse@@Base+0x1dd0>
   2c16c:	ldr	r1, [pc, #2712]	; 2cc0c <__flatcc_fb_parse@@Base+0x26dc>
   2c170:	ldr	r2, [pc, #2712]	; 2cc10 <__flatcc_fb_parse@@Base+0x26e0>
   2c174:	mov	r0, sl
   2c178:	add	r1, pc, r1
   2c17c:	add	r2, pc, r2
   2c180:	b	2c3a0 <__flatcc_fb_parse@@Base+0x1e70>
   2c184:	cmp	r0, #0
   2c188:	beq	2c45c <__flatcc_fb_parse@@Base+0x1f2c>
   2c18c:	ldr	r2, [r0]
   2c190:	ldr	r1, [r0, #4]
   2c194:	ldr	r3, [pc, #2548]	; 2cb90 <__flatcc_fb_parse@@Base+0x2660>
   2c198:	cmp	r2, #0
   2c19c:	add	r3, pc, r3
   2c1a0:	mov	r7, r2
   2c1a4:	moveq	r1, r2
   2c1a8:	moveq	r7, r3
   2c1ac:	mov	r2, sl
   2c1b0:	b	2c1c0 <__flatcc_fb_parse@@Base+0x1c90>
   2c1b4:	ldr	r2, [r2]
   2c1b8:	cmp	r2, #0
   2c1bc:	beq	2c3f4 <__flatcc_fb_parse@@Base+0x1ec4>
   2c1c0:	ldr	r3, [r2, #20]
   2c1c4:	cmp	r3, r0
   2c1c8:	bhi	2c1b4 <__flatcc_fb_parse@@Base+0x1c84>
   2c1cc:	ldr	r3, [r2, #24]
   2c1d0:	cmp	r3, r0
   2c1d4:	bls	2c1b4 <__flatcc_fb_parse@@Base+0x1c84>
   2c1d8:	ldr	r2, [r2, #520]	; 0x208
   2c1dc:	b	2c3fc <__flatcc_fb_parse@@Base+0x1ecc>
   2c1e0:	andeq	r4, r1, r6, lsl #9
   2c1e4:	ldr	r2, [pc, #2352]	; 2cb1c <__flatcc_fb_parse@@Base+0x25ec>
   2c1e8:	add	r2, pc, r2
   2c1ec:	ldr	r7, [r5, #12]
   2c1f0:	ldr	r3, [r5, #8]
   2c1f4:	str	r7, [sp]
   2c1f8:	stmib	sp, {r0, r1}
   2c1fc:	ldr	r0, [pc, #2332]	; 2cb20 <__flatcc_fb_parse@@Base+0x25f0>
   2c200:	add	r0, pc, r0
   2c204:	str	r0, [sp, #12]
   2c208:	mov	r0, sl
   2c20c:	ldr	r1, [pc, #2320]	; 2cb24 <__flatcc_fb_parse@@Base+0x25f4>
   2c210:	add	r1, pc, r1
   2c214:	bl	29e1c <__flatcc_fb_print_error@@Base>
   2c218:	b	2c234 <__flatcc_fb_parse@@Base+0x1d04>
   2c21c:	ldr	r1, [pc, #2308]	; 2cb28 <__flatcc_fb_parse@@Base+0x25f8>
   2c220:	ldr	r2, [pc, #2308]	; 2cb2c <__flatcc_fb_parse@@Base+0x25fc>
   2c224:	mov	r0, sl
   2c228:	add	r1, pc, r1
   2c22c:	add	r2, pc, r2
   2c230:	bl	29e1c <__flatcc_fb_print_error@@Base>
   2c234:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2c238:	ldr	r0, [r1]
   2c23c:	add	r0, r0, #1
   2c240:	str	r0, [r1]
   2c244:	ldr	r0, [r4]
   2c248:	ldr	r1, [r0, #16]
   2c24c:	cmp	r1, #59	; 0x3b
   2c250:	bne	2c268 <__flatcc_fb_parse@@Base+0x1d38>
   2c254:	mov	r0, sl
   2c258:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   2c25c:	b	2a9d4 <__flatcc_fb_parse@@Base+0x4a4>
   2c260:	andeq	fp, r2, r5, asr #6
   2c264:	muleq	r2, pc, r7	; <UNPREDICTABLE>
   2c268:	cmp	r0, #0
   2c26c:	beq	2c2ec <__flatcc_fb_parse@@Base+0x1dbc>
   2c270:	ldr	r2, [r0]
   2c274:	ldr	r1, [r0, #4]
   2c278:	ldr	r3, [pc, #2224]	; 2cb30 <__flatcc_fb_parse@@Base+0x2600>
   2c27c:	cmp	r2, #0
   2c280:	add	r3, pc, r3
   2c284:	mov	r7, r2
   2c288:	moveq	r1, r2
   2c28c:	moveq	r7, r3
   2c290:	mov	r2, sl
   2c294:	b	2c2ac <__flatcc_fb_parse@@Base+0x1d7c>
   2c298:	strdeq	fp, [r2], -r9
   2c29c:	andeq	fp, r2, sp, lsr #15
   2c2a0:	ldr	r2, [r2]
   2c2a4:	cmp	r2, #0
   2c2a8:	beq	2c2cc <__flatcc_fb_parse@@Base+0x1d9c>
   2c2ac:	ldr	r3, [r2, #20]
   2c2b0:	cmp	r3, r0
   2c2b4:	bhi	2c2a0 <__flatcc_fb_parse@@Base+0x1d70>
   2c2b8:	ldr	r3, [r2, #24]
   2c2bc:	cmp	r3, r0
   2c2c0:	bls	2c2a0 <__flatcc_fb_parse@@Base+0x1d70>
   2c2c4:	ldr	r2, [r2, #520]	; 0x208
   2c2c8:	b	2c2d4 <__flatcc_fb_parse@@Base+0x1da4>
   2c2cc:	ldr	r2, [pc, #2144]	; 2cb34 <__flatcc_fb_parse@@Base+0x2604>
   2c2d0:	add	r2, pc, r2
   2c2d4:	ldr	r3, [r0, #8]
   2c2d8:	ldr	r0, [r0, #12]
   2c2dc:	stm	sp, {r0, r1, r7}
   2c2e0:	ldr	r0, [pc, #2128]	; 2cb38 <__flatcc_fb_parse@@Base+0x2608>
   2c2e4:	add	r0, pc, r0
   2c2e8:	b	2a9b0 <__flatcc_fb_parse@@Base+0x480>
   2c2ec:	ldr	r1, [pc, #2120]	; 2cb3c <__flatcc_fb_parse@@Base+0x260c>
   2c2f0:	ldr	r2, [pc, #2120]	; 2cb40 <__flatcc_fb_parse@@Base+0x2610>
   2c2f4:	mov	r0, sl
   2c2f8:	add	r1, pc, r1
   2c2fc:	add	r2, pc, r2
   2c300:	bl	29e1c <__flatcc_fb_print_error@@Base>
   2c304:	b	2a9c4 <__flatcc_fb_parse@@Base+0x494>
   2c308:	muleq	r1, r2, r3
   2c30c:	ldr	r2, [pc, #2196]	; 2cba8 <__flatcc_fb_parse@@Base+0x2678>
   2c310:	add	r2, pc, r2
   2c314:	ldr	r3, [r0, #8]
   2c318:	ldr	r0, [r0, #12]
   2c31c:	stm	sp, {r0, r1, r7}
   2c320:	ldr	r0, [pc, #2180]	; 2cbac <__flatcc_fb_parse@@Base+0x267c>
   2c324:	add	r0, pc, r0
   2c328:	str	r0, [sp, #12]
   2c32c:	mov	r0, sl
   2c330:	ldr	r1, [pc, #2168]	; 2cbb0 <__flatcc_fb_parse@@Base+0x2680>
   2c334:	add	r1, pc, r1
   2c338:	bl	29e1c <__flatcc_fb_print_error@@Base>
   2c33c:	ldr	r0, [sl, #108]	; 0x6c
   2c340:	add	r0, r0, #1
   2c344:	str	r0, [sl, #108]	; 0x6c
   2c348:	b	2c484 <__flatcc_fb_parse@@Base+0x1f54>
   2c34c:	andeq	r4, r1, r6, lsr r3
   2c350:	ldr	r2, [pc, #2236]	; 2cc14 <__flatcc_fb_parse@@Base+0x26e4>
   2c354:	add	r2, pc, r2
   2c358:	ldr	r7, [r9, #12]
   2c35c:	ldr	r3, [r9, #8]
   2c360:	str	r7, [sp]
   2c364:	stmib	sp, {r0, r1}
   2c368:	ldr	r0, [pc, #2216]	; 2cc18 <__flatcc_fb_parse@@Base+0x26e8>
   2c36c:	add	r0, pc, r0
   2c370:	str	r0, [sp, #12]
   2c374:	mov	r0, sl
   2c378:	ldr	r1, [pc, #2184]	; 2cc08 <__flatcc_fb_parse@@Base+0x26d8>
   2c37c:	add	r1, pc, r1
   2c380:	bl	29e1c <__flatcc_fb_print_error@@Base>
   2c384:	b	2c3a4 <__flatcc_fb_parse@@Base+0x1e74>
   2c388:	ldrdeq	r4, [r1], -sl
   2c38c:	ldr	r1, [pc, #2184]	; 2cc1c <__flatcc_fb_parse@@Base+0x26ec>
   2c390:	ldr	r2, [pc, #2184]	; 2cc20 <__flatcc_fb_parse@@Base+0x26f0>
   2c394:	mov	r0, sl
   2c398:	add	r1, pc, r1
   2c39c:	add	r2, pc, r2
   2c3a0:	bl	29e1c <__flatcc_fb_print_error@@Base>
   2c3a4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2c3a8:	ldr	r0, [r1]
   2c3ac:	add	r0, r0, #1
   2c3b0:	str	r0, [r1]
   2c3b4:	ldr	r0, [r4]
   2c3b8:	ldr	r0, [r0, #16]
   2c3bc:	cmp	r0, #0
   2c3c0:	beq	2a9d4 <__flatcc_fb_parse@@Base+0x4a4>
   2c3c4:	cmp	r0, #125	; 0x7d
   2c3c8:	beq	2c3e8 <__flatcc_fb_parse@@Base+0x1eb8>
   2c3cc:	cmp	r0, #59	; 0x3b
   2c3d0:	beq	2c3e0 <__flatcc_fb_parse@@Base+0x1eb0>
   2c3d4:	mov	r0, sl
   2c3d8:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   2c3dc:	b	2c3b4 <__flatcc_fb_parse@@Base+0x1e84>
   2c3e0:	mov	r0, sl
   2c3e4:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   2c3e8:	str	r5, [sl, #36]	; 0x24
   2c3ec:	b	2a9d4 <__flatcc_fb_parse@@Base+0x4a4>
   2c3f0:	andeq	r4, r1, lr, ror r2
   2c3f4:	ldr	r2, [pc, #1944]	; 2cb94 <__flatcc_fb_parse@@Base+0x2664>
   2c3f8:	add	r2, pc, r2
   2c3fc:	ldr	r3, [r0, #8]
   2c400:	ldr	r0, [r0, #12]
   2c404:	stm	sp, {r0, r1, r7}
   2c408:	ldr	r0, [pc, #1928]	; 2cb98 <__flatcc_fb_parse@@Base+0x2668>
   2c40c:	add	r0, pc, r0
   2c410:	str	r0, [sp, #12]
   2c414:	mov	r0, sl
   2c418:	ldr	r1, [pc, #1916]	; 2cb9c <__flatcc_fb_parse@@Base+0x266c>
   2c41c:	add	r1, pc, r1
   2c420:	bl	29e1c <__flatcc_fb_print_error@@Base>
   2c424:	b	2c474 <__flatcc_fb_parse@@Base+0x1f44>
   2c428:	andeq	r4, r1, r6, lsr r2
   2c42c:	muleq	r2, r7, r4
   2c430:			; <UNDEFINED> instruction: 0x0002b5b5
   2c434:	andeq	r4, r1, r2, lsl #4
   2c438:	strdeq	fp, [r2], -sp
   2c43c:	ldrdeq	r4, [r1], -lr
   2c440:	andeq	fp, r2, pc, lsr r4
   2c444:	andeq	fp, r2, fp, lsr #10
   2c448:	andeq	r4, r1, sl, lsr #3
   2c44c:	andeq	fp, r2, r2, ror r5
   2c450:	andeq	fp, r2, r1, asr r5
   2c454:	andeq	r4, r1, r2, ror r1
   2c458:	andeq	fp, r2, r4, asr #10
   2c45c:	ldr	r1, [pc, #1852]	; 2cba0 <__flatcc_fb_parse@@Base+0x2670>
   2c460:	ldr	r2, [pc, #1852]	; 2cba4 <__flatcc_fb_parse@@Base+0x2674>
   2c464:	mov	r0, sl
   2c468:	add	r1, pc, r1
   2c46c:	add	r2, pc, r2
   2c470:	bl	29e1c <__flatcc_fb_print_error@@Base>
   2c474:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2c478:	ldr	r0, [r1]
   2c47c:	add	r0, r0, #1
   2c480:	str	r0, [r1]
   2c484:	mov	r0, sl
   2c488:	bl	3253c <__flatcc_fb_clear_parser@@Base+0x1150>
   2c48c:	str	r0, [r6, #28]
   2c490:	ldr	r7, [sl, #40]	; 0x28
   2c494:	ldr	r0, [r7, #16]
   2c498:	cmp	r0, #123	; 0x7b
   2c49c:	bne	2c668 <__flatcc_fb_parse@@Base+0x2138>
   2c4a0:	mov	r0, sl
   2c4a4:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   2c4a8:	cmp	r7, #0
   2c4ac:	beq	2c760 <__flatcc_fb_parse@@Base+0x2230>
   2c4b0:	ldr	r1, [r4]
   2c4b4:	ldr	r0, [r1, #16]
   2c4b8:	cmp	r0, #9
   2c4bc:	bne	2c608 <__flatcc_fb_parse@@Base+0x20d8>
   2c4c0:	mov	r0, sl
   2c4c4:	mov	r9, r1
   2c4c8:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   2c4cc:	cmp	r9, #0
   2c4d0:	beq	2c760 <__flatcc_fb_parse@@Base+0x2230>
   2c4d4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2c4d8:	ldr	r0, [r0]
   2c4dc:	cmp	r0, #9
   2c4e0:	bgt	2c760 <__flatcc_fb_parse@@Base+0x2230>
   2c4e4:	ldr	r5, [sl, #52]	; 0x34
   2c4e8:	ldr	r0, [sl, #44]	; 0x2c
   2c4ec:	mov	r3, r9
   2c4f0:	add	r1, r5, #128	; 0x80
   2c4f4:	cmp	r1, r0
   2c4f8:	bls	2c534 <__flatcc_fb_parse@@Base+0x2004>
   2c4fc:	mov	r0, #65536	; 0x10000
   2c500:	mov	r1, #1
   2c504:	bl	147cc <calloc@plt>
   2c508:	cmp	r0, #0
   2c50c:	beq	2ca74 <__flatcc_fb_parse@@Base+0x2544>
   2c510:	ldr	r2, [sl, #48]	; 0x30
   2c514:	mov	r1, r0
   2c518:	add	r5, r0, #16
   2c51c:	mov	r3, r9
   2c520:	str	r2, [r1], #144	; 0x90
   2c524:	add	r2, r0, #65536	; 0x10000
   2c528:	str	r2, [sl, #44]	; 0x2c
   2c52c:	str	r0, [sl, #48]	; 0x30
   2c530:	str	r5, [sl, #52]	; 0x34
   2c534:	str	r1, [sl, #52]	; 0x34
   2c538:	mov	r1, #5
   2c53c:	ldr	r0, [r6, #20]
   2c540:	strh	r1, [r5, #8]
   2c544:	str	r0, [r5]
   2c548:	str	r5, [r6, #20]
   2c54c:	ldr	r0, [sl, #36]	; 0x24
   2c550:	cmp	r0, #0
   2c554:	beq	2c57c <__flatcc_fb_parse@@Base+0x204c>
   2c558:	mov	r2, #0
   2c55c:	mov	r1, r0
   2c560:	ldr	r0, [r0]
   2c564:	str	r2, [r1]
   2c568:	mov	r2, r1
   2c56c:	cmp	r0, #0
   2c570:	bne	2c55c <__flatcc_fb_parse@@Base+0x202c>
   2c574:	b	2c580 <__flatcc_fb_parse@@Base+0x2050>
   2c578:	andeq	r4, r1, lr, lsr #1
   2c57c:	mov	r1, #0
   2c580:	mov	r0, #0
   2c584:	str	r1, [r5, #68]	; 0x44
   2c588:	str	r0, [sl, #36]	; 0x24
   2c58c:	str	r3, [r5, #4]
   2c590:	ldr	r9, [sl, #40]	; 0x28
   2c594:	ldr	r0, [r9, #16]
   2c598:	cmp	r0, #61	; 0x3d
   2c59c:	bne	2c5d0 <__flatcc_fb_parse@@Base+0x20a0>
   2c5a0:	mov	r0, sl
   2c5a4:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   2c5a8:	cmp	r9, #0
   2c5ac:	beq	2c5c8 <__flatcc_fb_parse@@Base+0x2098>
   2c5b0:	ldr	r3, [pc, #1576]	; 2cbe0 <__flatcc_fb_parse@@Base+0x26b0>
   2c5b4:	add	r1, r5, #48	; 0x30
   2c5b8:	mov	r0, sl
   2c5bc:	mov	r2, #0
   2c5c0:	add	r3, pc, r3
   2c5c4:	bl	327f8 <__flatcc_fb_clear_parser@@Base+0x140c>
   2c5c8:	ldr	r9, [r4]
   2c5cc:	ldr	r0, [r9, #16]
   2c5d0:	cmp	r0, #44	; 0x2c
   2c5d4:	mov	r5, #0
   2c5d8:	bne	2c8a8 <__flatcc_fb_parse@@Base+0x2378>
   2c5dc:	mov	r0, sl
   2c5e0:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   2c5e4:	ldr	r1, [sl, #40]	; 0x28
   2c5e8:	cmp	r9, #0
   2c5ec:	ldr	r0, [r1, #16]
   2c5f0:	beq	2c8ac <__flatcc_fb_parse@@Base+0x237c>
   2c5f4:	cmp	r0, #9
   2c5f8:	str	r5, [sl, #36]	; 0x24
   2c5fc:	beq	2c4c0 <__flatcc_fb_parse@@Base+0x1f90>
   2c600:	cmp	r0, #125	; 0x7d
   2c604:	beq	2c8b8 <__flatcc_fb_parse@@Base+0x2388>
   2c608:	cmp	r1, #0
   2c60c:	beq	2c738 <__flatcc_fb_parse@@Base+0x2208>
   2c610:	ldr	r2, [r1]
   2c614:	ldr	r0, [r1, #4]
   2c618:	ldr	r3, [pc, #1452]	; 2cbcc <__flatcc_fb_parse@@Base+0x269c>
   2c61c:	cmp	r2, #0
   2c620:	add	r3, pc, r3
   2c624:	mov	r6, r2
   2c628:	moveq	r0, r2
   2c62c:	moveq	r6, r3
   2c630:	mov	r2, sl
   2c634:	b	2c648 <__flatcc_fb_parse@@Base+0x2118>
   2c638:	andeq	r4, r1, sl, asr #32
   2c63c:	ldr	r2, [r2]
   2c640:	cmp	r2, #0
   2c644:	beq	2c700 <__flatcc_fb_parse@@Base+0x21d0>
   2c648:	ldr	r3, [r2, #20]
   2c64c:	cmp	r3, r1
   2c650:	bhi	2c63c <__flatcc_fb_parse@@Base+0x210c>
   2c654:	ldr	r3, [r2, #24]
   2c658:	cmp	r3, r1
   2c65c:	bls	2c63c <__flatcc_fb_parse@@Base+0x210c>
   2c660:	ldr	r2, [r2, #520]	; 0x208
   2c664:	b	2c708 <__flatcc_fb_parse@@Base+0x21d8>
   2c668:	cmp	r7, #0
   2c66c:	beq	2c6e8 <__flatcc_fb_parse@@Base+0x21b8>
   2c670:	ldr	r2, [r7]
   2c674:	ldr	r0, [r7, #4]
   2c678:	ldr	r3, [pc, #1332]	; 2cbb4 <__flatcc_fb_parse@@Base+0x2684>
   2c67c:	cmp	r2, #0
   2c680:	add	r3, pc, r3
   2c684:	mov	r1, r2
   2c688:	moveq	r0, r2
   2c68c:	moveq	r1, r3
   2c690:	mov	r2, sl
   2c694:	b	2c6a4 <__flatcc_fb_parse@@Base+0x2174>
   2c698:	ldr	r2, [r2]
   2c69c:	cmp	r2, #0
   2c6a0:	beq	2c6c4 <__flatcc_fb_parse@@Base+0x2194>
   2c6a4:	ldr	r3, [r2, #20]
   2c6a8:	cmp	r3, r7
   2c6ac:	bhi	2c698 <__flatcc_fb_parse@@Base+0x2168>
   2c6b0:	ldr	r3, [r2, #24]
   2c6b4:	cmp	r3, r7
   2c6b8:	bls	2c698 <__flatcc_fb_parse@@Base+0x2168>
   2c6bc:	ldr	r2, [r2, #520]	; 0x208
   2c6c0:	b	2c6cc <__flatcc_fb_parse@@Base+0x219c>
   2c6c4:	ldr	r2, [pc, #1260]	; 2cbb8 <__flatcc_fb_parse@@Base+0x2688>
   2c6c8:	add	r2, pc, r2
   2c6cc:	ldr	r3, [r7, #8]
   2c6d0:	ldr	r7, [r7, #12]
   2c6d4:	str	r7, [sp]
   2c6d8:	stmib	sp, {r0, r1}
   2c6dc:	ldr	r0, [pc, #1240]	; 2cbbc <__flatcc_fb_parse@@Base+0x268c>
   2c6e0:	add	r0, pc, r0
   2c6e4:	b	2c720 <__flatcc_fb_parse@@Base+0x21f0>
   2c6e8:	ldr	r1, [pc, #1236]	; 2cbc4 <__flatcc_fb_parse@@Base+0x2694>
   2c6ec:	ldr	r2, [pc, #1236]	; 2cbc8 <__flatcc_fb_parse@@Base+0x2698>
   2c6f0:	mov	r0, sl
   2c6f4:	add	r1, pc, r1
   2c6f8:	add	r2, pc, r2
   2c6fc:	b	2c74c <__flatcc_fb_parse@@Base+0x221c>
   2c700:	ldr	r2, [pc, #1224]	; 2cbd0 <__flatcc_fb_parse@@Base+0x26a0>
   2c704:	add	r2, pc, r2
   2c708:	ldr	r7, [r1, #12]
   2c70c:	ldr	r3, [r1, #8]
   2c710:	str	r7, [sp]
   2c714:	stmib	sp, {r0, r6}
   2c718:	ldr	r0, [pc, #1204]	; 2cbd4 <__flatcc_fb_parse@@Base+0x26a4>
   2c71c:	add	r0, pc, r0
   2c720:	str	r0, [sp, #12]
   2c724:	mov	r0, sl
   2c728:	ldr	r1, [pc, #1168]	; 2cbc0 <__flatcc_fb_parse@@Base+0x2690>
   2c72c:	add	r1, pc, r1
   2c730:	bl	29e1c <__flatcc_fb_print_error@@Base>
   2c734:	b	2c750 <__flatcc_fb_parse@@Base+0x2220>
   2c738:	ldr	r1, [pc, #1176]	; 2cbd8 <__flatcc_fb_parse@@Base+0x26a8>
   2c73c:	ldr	r2, [pc, #1176]	; 2cbdc <__flatcc_fb_parse@@Base+0x26ac>
   2c740:	mov	r0, sl
   2c744:	add	r1, pc, r1
   2c748:	add	r2, pc, r2
   2c74c:	bl	29e1c <__flatcc_fb_print_error@@Base>
   2c750:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2c754:	ldr	r0, [r1]
   2c758:	add	r0, r0, #1
   2c75c:	str	r0, [r1]
   2c760:	ldr	r0, [r4]
   2c764:	ldr	r5, [r0, #16]
   2c768:	cmp	r5, #0
   2c76c:	beq	2a9d4 <__flatcc_fb_parse@@Base+0x4a4>
   2c770:	mov	r0, sl
   2c774:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   2c778:	cmp	r5, #125	; 0x7d
   2c77c:	bne	2c760 <__flatcc_fb_parse@@Base+0x2230>
   2c780:	mov	r0, #0
   2c784:	str	r0, [sl, #36]	; 0x24
   2c788:	b	2a9d4 <__flatcc_fb_parse@@Base+0x4a4>
   2c78c:	mov	r9, r5
   2c790:	mov	r5, #0
   2c794:	cmp	r0, #125	; 0x7d
   2c798:	str	r5, [sl, #36]	; 0x24
   2c79c:	bne	2c7ac <__flatcc_fb_parse@@Base+0x227c>
   2c7a0:	mov	r0, sl
   2c7a4:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   2c7a8:	b	2c7cc <__flatcc_fb_parse@@Base+0x229c>
   2c7ac:	str	r5, [sp]
   2c7b0:	str	r5, [sp, #4]
   2c7b4:	mov	r0, sl
   2c7b8:	mov	r1, r9
   2c7bc:	ldr	r2, [pc, #1120]	; 2cc24 <__flatcc_fb_parse@@Base+0x26f4>
   2c7c0:	ldr	r3, [sp, #16]
   2c7c4:	add	r2, pc, r2
   2c7c8:	bl	29ee4 <__flatcc_error_report@@Base>
   2c7cc:	ldr	r1, [r7, #20]
   2c7d0:	cmp	r1, #0
   2c7d4:	beq	2c7f8 <__flatcc_fb_parse@@Base+0x22c8>
   2c7d8:	mov	r2, #0
   2c7dc:	mov	r0, r1
   2c7e0:	ldr	r1, [r1]
   2c7e4:	str	r2, [r0]
   2c7e8:	mov	r2, r0
   2c7ec:	cmp	r1, #0
   2c7f0:	bne	2c7dc <__flatcc_fb_parse@@Base+0x22ac>
   2c7f4:	b	2c7fc <__flatcc_fb_parse@@Base+0x22cc>
   2c7f8:	mov	r0, #0
   2c7fc:	str	r0, [r7, #20]
   2c800:	ldr	r1, [sl, #52]	; 0x34
   2c804:	ldr	r3, [sl, #44]	; 0x2c
   2c808:	add	r2, r1, #128	; 0x80
   2c80c:	cmp	r2, r3
   2c810:	bls	2c84c <__flatcc_fb_parse@@Base+0x231c>
   2c814:	mov	r0, #65536	; 0x10000
   2c818:	mov	r1, #1
   2c81c:	bl	147cc <calloc@plt>
   2c820:	cmp	r0, #0
   2c824:	beq	2ca74 <__flatcc_fb_parse@@Base+0x2544>
   2c828:	ldr	r1, [sl, #48]	; 0x30
   2c82c:	mov	r2, r0
   2c830:	add	r3, r0, #65536	; 0x10000
   2c834:	str	r1, [r2], #144	; 0x90
   2c838:	add	r1, r0, #16
   2c83c:	str	r3, [sl, #44]	; 0x2c
   2c840:	str	r0, [sl, #48]	; 0x30
   2c844:	str	r1, [sl, #52]	; 0x34
   2c848:	ldr	r0, [r7, #20]
   2c84c:	str	r2, [sl, #52]	; 0x34
   2c850:	mov	r2, #5
   2c854:	strh	r2, [r1, #8]
   2c858:	str	r0, [r1]
   2c85c:	str	r1, [r7, #20]
   2c860:	ldr	r0, [sl, #36]	; 0x24
   2c864:	cmp	r0, #0
   2c868:	beq	2c890 <__flatcc_fb_parse@@Base+0x2360>
   2c86c:	mov	r3, #0
   2c870:	mov	r2, r0
   2c874:	ldr	r0, [r0]
   2c878:	str	r3, [r2]
   2c87c:	mov	r3, r2
   2c880:	cmp	r0, #0
   2c884:	bne	2c870 <__flatcc_fb_parse@@Base+0x2340>
   2c888:	b	2c894 <__flatcc_fb_parse@@Base+0x2364>
   2c88c:	strdeq	r3, [r1], -sl
   2c890:	mov	r2, #0
   2c894:	ldr	r0, [sp, #40]	; 0x28
   2c898:	str	r2, [r1, #68]	; 0x44
   2c89c:	str	r5, [sl, #36]	; 0x24
   2c8a0:	str	r0, [r1, #4]
   2c8a4:	b	2a9d4 <__flatcc_fb_parse@@Base+0x4a4>
   2c8a8:	mov	r1, r9
   2c8ac:	cmp	r0, #125	; 0x7d
   2c8b0:	str	r5, [sl, #36]	; 0x24
   2c8b4:	bne	2c8d0 <__flatcc_fb_parse@@Base+0x23a0>
   2c8b8:	mov	r0, sl
   2c8bc:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   2c8c0:	b	2c8ec <__flatcc_fb_parse@@Base+0x23bc>
   2c8c4:			; <UNDEFINED> instruction: 0x00013db2
   2c8c8:	andeq	fp, r2, lr, lsr r8
   2c8cc:	andeq	sl, r2, pc, asr #24
   2c8d0:	str	r5, [sp]
   2c8d4:	str	r5, [sp, #4]
   2c8d8:	mov	r0, sl
   2c8dc:	mov	r3, r7
   2c8e0:	ldr	r2, [pc, #764]	; 2cbe4 <__flatcc_fb_parse@@Base+0x26b4>
   2c8e4:	add	r2, pc, r2
   2c8e8:	bl	29ee4 <__flatcc_error_report@@Base>
   2c8ec:	ldr	r0, [r6, #20]
   2c8f0:	cmp	r0, #0
   2c8f4:	beq	2c91c <__flatcc_fb_parse@@Base+0x23ec>
   2c8f8:	mov	r2, #0
   2c8fc:	mov	r1, r0
   2c900:	ldr	r0, [r0]
   2c904:	str	r2, [r1]
   2c908:	mov	r2, r1
   2c90c:	cmp	r0, #0
   2c910:	bne	2c8fc <__flatcc_fb_parse@@Base+0x23cc>
   2c914:	str	r1, [r6, #20]
   2c918:	b	2a9d4 <__flatcc_fb_parse@@Base+0x4a4>
   2c91c:	mov	r1, #0
   2c920:	str	r1, [r6, #20]
   2c924:	b	2a9d4 <__flatcc_fb_parse@@Base+0x4a4>
   2c928:	andeq	sl, r2, r1, ror ip
   2c92c:	strdeq	fp, [r2], -sl
   2c930:	andeq	fp, r2, r8, lsl #14
   2c934:	ldr	r1, [sl, #356]	; 0x164
   2c938:	mov	r0, #0
   2c93c:	mov	r2, #0
   2c940:	cmp	r1, #0
   2c944:	beq	2c964 <__flatcc_fb_parse@@Base+0x2434>
   2c948:	mov	r3, #0
   2c94c:	mov	r2, r1
   2c950:	ldr	r1, [r1]
   2c954:	str	r3, [r2]
   2c958:	mov	r3, r2
   2c95c:	cmp	r1, #0
   2c960:	bne	2c94c <__flatcc_fb_parse@@Base+0x241c>
   2c964:	str	r2, [sl, #356]	; 0x164
   2c968:	ldr	r1, [sl, #392]	; 0x188
   2c96c:	cmp	r1, #0
   2c970:	beq	2c990 <__flatcc_fb_parse@@Base+0x2460>
   2c974:	mov	r2, #0
   2c978:	mov	r0, r1
   2c97c:	ldr	r1, [r1]
   2c980:	str	r2, [r0]
   2c984:	mov	r2, r0
   2c988:	cmp	r1, #0
   2c98c:	bne	2c978 <__flatcc_fb_parse@@Base+0x2448>
   2c990:	str	r0, [sl, #392]	; 0x188
   2c994:	ldr	r0, [sl, #108]	; 0x6c
   2c998:	sub	sp, fp, #28
   2c99c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c9a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2c9a4:	ldr	r0, [r0]
   2c9a8:	cmp	r0, #0
   2c9ac:	beq	2c9b8 <__flatcc_fb_parse@@Base+0x2488>
   2c9b0:	sub	sp, fp, #28
   2c9b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c9b8:	cmp	r8, #0
   2c9bc:	beq	2ca44 <__flatcc_fb_parse@@Base+0x2514>
   2c9c0:	ldr	r3, [r8]
   2c9c4:	ldr	r0, [r8, #4]
   2c9c8:	ldr	r2, [pc, #600]	; 2cc28 <__flatcc_fb_parse@@Base+0x26f8>
   2c9cc:	cmp	r3, #0
   2c9d0:	add	r2, pc, r2
   2c9d4:	mov	r1, r3
   2c9d8:	moveq	r0, r3
   2c9dc:	moveq	r1, r2
   2c9e0:	mov	r3, sl
   2c9e4:	b	2c9f8 <__flatcc_fb_parse@@Base+0x24c8>
   2c9e8:	andeq	r3, r1, r2, lsr #25
   2c9ec:	ldr	r3, [r3]
   2c9f0:	cmp	r3, #0
   2c9f4:	beq	2ca14 <__flatcc_fb_parse@@Base+0x24e4>
   2c9f8:	ldr	r7, [r3, #20]
   2c9fc:	cmp	r7, r8
   2ca00:	bhi	2c9ec <__flatcc_fb_parse@@Base+0x24bc>
   2ca04:	ldr	r7, [r3, #24]
   2ca08:	cmp	r7, r8
   2ca0c:	bls	2c9ec <__flatcc_fb_parse@@Base+0x24bc>
   2ca10:	ldr	r2, [r3, #520]	; 0x208
   2ca14:	ldr	r3, [r8, #8]
   2ca18:	ldr	r7, [r8, #12]
   2ca1c:	ldr	r6, [pc, #520]	; 2cc2c <__flatcc_fb_parse@@Base+0x26fc>
   2ca20:	add	r6, pc, r6
   2ca24:	str	r7, [sp]
   2ca28:	stmib	sp, {r0, r1, r6}
   2ca2c:	mov	r0, sl
   2ca30:	ldr	r1, [pc, #504]	; 2cc30 <__flatcc_fb_parse@@Base+0x2700>
   2ca34:	add	r1, pc, r1
   2ca38:	bl	29e1c <__flatcc_fb_print_error@@Base>
   2ca3c:	b	2ca5c <__flatcc_fb_parse@@Base+0x252c>
   2ca40:	andeq	r3, r1, r6, asr #24
   2ca44:	ldr	r1, [pc, #488]	; 2cc34 <__flatcc_fb_parse@@Base+0x2704>
   2ca48:	ldr	r2, [pc, #488]	; 2cc38 <__flatcc_fb_parse@@Base+0x2708>
   2ca4c:	mov	r0, sl
   2ca50:	add	r1, pc, r1
   2ca54:	add	r2, pc, r2
   2ca58:	bl	29e1c <__flatcc_fb_print_error@@Base>
   2ca5c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2ca60:	ldr	r0, [r1]
   2ca64:	add	r0, r0, #1
   2ca68:	str	r0, [r1]
   2ca6c:	sub	sp, fp, #28
   2ca70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ca74:	ldr	r0, [pc, #448]	; 2cc3c <__flatcc_fb_parse@@Base+0x270c>
   2ca78:	mov	r1, #34	; 0x22
   2ca7c:	mov	r2, #1
   2ca80:	ldr	r0, [pc, r0]
   2ca84:	ldr	r3, [r0]
   2ca88:	ldr	r0, [pc, #432]	; 2cc40 <__flatcc_fb_parse@@Base+0x2710>
   2ca8c:	add	r0, pc, r0
   2ca90:	bl	14850 <fwrite@plt>
   2ca94:	mov	r0, #1
   2ca98:	bl	14898 <exit@plt>
   2ca9c:	andeq	sl, r2, sp, lsl #22
   2caa0:	andeq	sl, r2, pc, asr #29
   2caa4:	strdeq	sl, [r2], -r5
   2caa8:	andeq	sl, r2, sp, ror #29
   2caac:	ldrdeq	sl, [r2], -sp
   2cab0:	andeq	sl, r2, ip, lsr #31
   2cab4:			; <UNDEFINED> instruction: 0x00013bb6
   2cab8:	strdeq	fp, [r2], -ip
   2cabc:	andeq	sl, r2, r3, asr sl
   2cac0:	andeq	sl, r2, r5, lsl #21
   2cac4:	andeq	fp, r2, r8, asr #1
   2cac8:	muleq	r1, r2, r9
   2cacc:	andeq	r3, r1, lr, asr r6
   2cad0:	andeq	sl, r2, sl, asr sl
   2cad4:	strdeq	sl, [r2], -pc	; <UNPREDICTABLE>
   2cad8:	andeq	sl, r2, r5, lsr r5
   2cadc:	andeq	sl, r2, sl, lsr #20
   2cae0:	muleq	r2, r2, fp
   2cae4:	andeq	r3, r1, sl, asr #21
   2cae8:	andeq	sl, r2, r7, asr #30
   2caec:	andeq	sl, r2, r7, ror #18
   2caf0:	andeq	sl, r2, r9, lsl #16
   2caf4:	andeq	sl, r2, r3, lsl #27
   2caf8:	andeq	r3, r1, sl, lsl #11
   2cafc:	andeq	sl, r2, r2, lsr sl
   2cb00:	andeq	sl, r2, r5, asr r4
   2cb04:	strdeq	sl, [r2], -r6
   2cb08:	andeq	r3, r1, r6, lsl #22
   2cb0c:	andeq	sl, r2, r2, ror #31
   2cb10:	andeq	sl, r2, r3, lsr #19
   2cb14:	andeq	sl, r2, r5, asr r8
   2cb18:	andeq	sl, r2, lr, lsr #28
   2cb1c:			; <UNDEFINED> instruction: 0x000134b6
   2cb20:			; <UNDEFINED> instruction: 0x0002a9ba
   2cb24:	andeq	sl, r2, r3, asr r3
   2cb28:	andeq	sl, r2, sp, lsl #7
   2cb2c:	andeq	sl, r2, lr, lsl #19
   2cb30:	andeq	r3, r1, lr, lsl r4
   2cb34:	andeq	r3, r1, lr, asr #7
   2cb38:	strdeq	sl, [r2], -fp
   2cb3c:			; <UNDEFINED> instruction: 0x0002a2bd
   2cb40:	andeq	sl, r2, r3, ror #17
   2cb44:	andeq	fp, r2, sl, lsl #1
   2cb48:	andeq	r3, r1, lr, lsl sl
   2cb4c:	muleq	r2, pc, pc	; <UNPREDICTABLE>
   2cb50:			; <UNDEFINED> instruction: 0x0002a8bb
   2cb54:	andeq	sl, r2, r5, asr r7
   2cb58:	ldrdeq	sl, [r2], -r3
   2cb5c:	ldrdeq	r3, [r1], -r2
   2cb60:	andeq	sl, r2, r5, ror fp
   2cb64:	andeq	sl, r2, pc, ror #8
   2cb68:	strdeq	r3, [r1], -sl
   2cb6c:			; <UNDEFINED> instruction: 0x000137b2
   2cb70:	andeq	sl, r2, r8, ror sp
   2cb74:	andeq	sl, r2, r1, lsr #13
   2cb78:	andeq	sl, r2, r0, ror #26
   2cb7c:	muleq	r1, r2, sl
   2cb80:	andeq	fp, r2, fp, lsl #8
   2cb84:	andeq	sl, r2, pc, lsr #18
   2cb88:			; <UNDEFINED> instruction: 0x0002a7bd
   2cb8c:	andeq	fp, r2, r3, lsr r2
   2cb90:	andeq	r3, r1, r2, lsl #10
   2cb94:	andeq	r3, r1, r6, lsr #5
   2cb98:	andeq	sl, r2, r8, asr #24
   2cb9c:	andeq	sl, r2, r7, asr #2
   2cba0:	andeq	sl, r2, sp, asr #2
   2cba4:	andeq	sl, r2, r8, ror #23
   2cba8:	andeq	r3, r1, lr, lsl #7
   2cbac:	andeq	sl, r2, r0, lsr sp
   2cbb0:	andeq	sl, r2, pc, lsr #4
   2cbb4:	andeq	r3, r1, lr, lsl r0
   2cbb8:	ldrdeq	r2, [r1], -r6
   2cbbc:	andeq	sl, r2, fp, lsl #19
   2cbc0:	andeq	r9, r2, r7, lsr lr
   2cbc4:	andeq	r9, r2, r1, asr #29
   2cbc8:	andeq	sl, r2, r3, ror r9
   2cbcc:	andeq	r3, r1, lr, ror r0
   2cbd0:	muleq	r1, sl, pc	; <UNPREDICTABLE>
   2cbd4:	andeq	sl, r2, sp, ror #18
   2cbd8:	andeq	r9, r2, r1, ror lr
   2cbdc:	andeq	sl, r2, r1, asr #18
   2cbe0:	andeq	sl, r2, r4, ror #21
   2cbe4:	ldrdeq	sl, [r2], -fp
   2cbe8:	andeq	r3, r1, r6, asr sl
   2cbec:	andeq	fp, r2, r1, lsl #9
   2cbf0:	strdeq	sl, [r2], -r3
   2cbf4:	andeq	sl, r2, r9, lsl #15
   2cbf8:			; <UNDEFINED> instruction: 0x0002b2b1
   2cbfc:	andeq	r3, r1, sl, lsr #13
   2cc00:	andeq	r3, r1, sl, ror #10
   2cc04:			; <UNDEFINED> instruction: 0x0002afbb
   2cc08:	andeq	sl, r2, r7, ror #3
   2cc0c:	andeq	sl, r2, sp, lsr r4
   2cc10:	andeq	sl, r2, fp, lsl #31
   2cc14:	andeq	r3, r1, sl, asr #6
   2cc18:			; <UNDEFINED> instruction: 0x0002adba
   2cc1c:	andeq	sl, r2, sp, lsl r2
   2cc20:	andeq	sl, r2, sl, lsl #27
   2cc24:			; <UNDEFINED> instruction: 0x0002a9b7
   2cc28:	andeq	r2, r1, lr, asr #25
   2cc2c:	andeq	r9, r2, r8, lsl lr
   2cc30:	andeq	r9, r2, pc, lsr #22
   2cc34:	andeq	r9, r2, r5, ror #22
   2cc38:	andeq	r9, r2, r4, ror #27
   2cc3c:	andeq	lr, r3, ip, lsl r6
   2cc40:	andeq	r2, r1, fp, lsr r7
   2cc44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2cc48:	add	fp, sp, #28
   2cc4c:	sub	sp, sp, #52	; 0x34
   2cc50:	mov	r5, r0
   2cc54:	add	r0, r0, r1
   2cc58:	cmp	r1, #0
   2cc5c:	str	r2, [sp, #16]
   2cc60:	str	r0, [fp, #-32]	; 0xffffffe0
   2cc64:	beq	30f54 <__flatcc_fb_parse@@Base+0x6a24>
   2cc68:	add	r0, r5, r1
   2cc6c:	add	sl, r2, #60	; 0x3c
   2cc70:	add	r7, r2, #40	; 0x28
   2cc74:	add	lr, r2, #24
   2cc78:	add	ip, r2, #28
   2cc7c:	add	r8, r2, #20
   2cc80:	sub	r1, r0, #1
   2cc84:	sub	r0, r0, #2
   2cc88:	str	r0, [sp, #4]
   2cc8c:	add	r0, r2, #64	; 0x40
   2cc90:	str	r1, [sp, #12]
   2cc94:	str	r0, [sp, #40]	; 0x28
   2cc98:	movw	r0, #15934	; 0x3e3e
   2cc9c:	movt	r0, #61	; 0x3d
   2cca0:	add	r0, r0, #65536	; 0x10000
   2cca4:	str	r0, [sp]
   2cca8:	ldr	r9, [pc, #4072]	; 2dc98 <__flatcc_fb_parse@@Base+0x3768>
   2ccac:	str	r7, [sp, #20]
   2ccb0:	str	sl, [sp, #32]
   2ccb4:	str	lr, [fp, #-36]	; 0xffffffdc
   2ccb8:	str	ip, [sp, #28]
   2ccbc:	str	r8, [sp, #24]
   2ccc0:	add	r9, pc, r9
   2ccc4:	b	2cd48 <__flatcc_fb_parse@@Base+0x2818>
   2ccc8:	ldr	r1, [r8]
   2cccc:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2ccd0:	mov	ip, r8
   2ccd4:	ldr	r8, [sp, #24]
   2ccd8:	add	r1, r1, r1, lsl #2
   2ccdc:	add	r1, r0, r1, lsl #2
   2cce0:	str	r1, [lr]
   2cce4:	add	r1, r0, r7, lsl #2
   2cce8:	str	r1, [r5]
   2ccec:	ldr	r9, [pc, #4060]	; 2dcd0 <__flatcc_fb_parse@@Base+0x37a0>
   2ccf0:	add	r9, pc, r9
   2ccf4:	ldr	r0, [sp, #36]	; 0x24
   2ccf8:	ldr	r2, [sp, #32]
   2ccfc:	mov	r7, r5
   2cd00:	str	r0, [r1, #4]
   2cd04:	ldr	r0, [sp, #40]	; 0x28
   2cd08:	str	r6, [r1]
   2cd0c:	str	r4, [r1, #16]
   2cd10:	ldr	r0, [r0]
   2cd14:	str	r0, [r1, #8]
   2cd18:	ldr	r0, [r2]
   2cd1c:	sub	r0, r6, r0
   2cd20:	mov	r6, sl
   2cd24:	mov	sl, r2
   2cd28:	add	r0, r0, #1
   2cd2c:	str	r0, [r1, #12]
   2cd30:	add	r0, r1, #20
   2cd34:	str	r0, [r5]
   2cd38:	mov	r5, r6
   2cd3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2cd40:	cmp	r5, r0
   2cd44:	beq	30f80 <__flatcc_fb_parse@@Base+0x6a50>
   2cd48:	ldrb	r4, [r5]
   2cd4c:	cmp	r4, #126	; 0x7e
   2cd50:	bhi	2e544 <__flatcc_fb_parse@@Base+0x4014>
   2cd54:	add	r0, pc, #4
   2cd58:	ldr	r1, [r0, r4, lsl #2]
   2cd5c:	add	pc, r0, r1
   2cd60:	andeq	r4, r0, r0, lsr r2
   2cd64:	andeq	r1, r0, r4, ror #15
   2cd68:	andeq	r1, r0, r4, ror #15
   2cd6c:	andeq	r1, r0, r4, ror #15
   2cd70:	andeq	r1, r0, r4, ror #15
   2cd74:	andeq	r1, r0, r4, ror #15
   2cd78:	andeq	r1, r0, r4, ror #15
   2cd7c:	andeq	r1, r0, r4, ror #15
   2cd80:	andeq	r1, r0, r4, ror #15
   2cd84:			; <UNDEFINED> instruction: 0x00000bb0
   2cd88:	andeq	r1, r0, r0, lsl #9
   2cd8c:	andeq	r1, r0, r4, ror #15
   2cd90:	andeq	r1, r0, r4, ror #15
   2cd94:	andeq	r1, r0, r8, lsl #7
   2cd98:	andeq	r1, r0, r4, ror #15
   2cd9c:	andeq	r1, r0, r4, ror #15
   2cda0:	andeq	r1, r0, r4, ror #15
   2cda4:	andeq	r1, r0, r4, ror #15
   2cda8:	andeq	r1, r0, r4, ror #15
   2cdac:	andeq	r1, r0, r4, ror #15
   2cdb0:	andeq	r1, r0, r4, ror #15
   2cdb4:	andeq	r1, r0, r4, ror #15
   2cdb8:	andeq	r1, r0, r4, ror #15
   2cdbc:	andeq	r1, r0, r4, ror #15
   2cdc0:	andeq	r1, r0, r4, ror #15
   2cdc4:	andeq	r1, r0, r4, ror #15
   2cdc8:	andeq	r1, r0, r4, ror #15
   2cdcc:	andeq	r1, r0, r4, ror #15
   2cdd0:	andeq	r1, r0, r4, ror #15
   2cdd4:	andeq	r1, r0, r4, ror #15
   2cdd8:	andeq	r1, r0, r4, ror #15
   2cddc:	andeq	r1, r0, r4, ror #15
   2cde0:			; <UNDEFINED> instruction: 0x00000bb0
   2cde4:	andeq	r0, r0, ip, ror #14
   2cde8:	andeq	r1, r0, r4, lsr #7
   2cdec:	andeq	r1, r0, r4, ror #15
   2cdf0:	andeq	r1, r0, r4, ror #15
   2cdf4:	andeq	r0, r0, ip, ror #14
   2cdf8:	ldrdeq	r1, [r0], -r4
   2cdfc:	andeq	r1, r0, r4, ror #15
   2ce00:	muleq	r0, r4, r4
   2ce04:	muleq	r0, r4, r4
   2ce08:	andeq	r1, r0, r4, lsr #11
   2ce0c:	andeq	r1, r0, ip, lsr #1
   2ce10:	muleq	r0, r4, r4
   2ce14:	andeq	r1, r0, ip, ror r6
   2ce18:			; <UNDEFINED> instruction: 0x000014bc
   2ce1c:	andeq	r1, r0, r4, asr r1
   2ce20:			; <UNDEFINED> instruction: 0x000011b4
   2ce24:	andeq	r0, r0, r4, asr #10
   2ce28:	andeq	r0, r0, r4, asr #10
   2ce2c:	andeq	r0, r0, r4, asr #10
   2ce30:	andeq	r0, r0, r4, asr #10
   2ce34:	andeq	r0, r0, r4, asr #10
   2ce38:	andeq	r0, r0, r4, asr #10
   2ce3c:	andeq	r0, r0, r4, asr #10
   2ce40:	andeq	r0, r0, r4, asr #10
   2ce44:	andeq	r0, r0, r4, asr #10
   2ce48:	andeq	r1, r0, r0, lsr r2
   2ce4c:	muleq	r0, r4, r4
   2ce50:	strdeq	r0, [r0], -ip
   2ce54:	andeq	r1, r0, r0, lsr r7
   2ce58:	andeq	r1, r0, r0, ror #5
   2ce5c:	muleq	r0, r4, r4
   2ce60:	andeq	r1, r0, r4, ror #15
   2ce64:	strdeq	r0, [r0], -ip
   2ce68:	strdeq	r0, [r0], -ip
   2ce6c:	strdeq	r0, [r0], -ip
   2ce70:	strdeq	r0, [r0], -ip
   2ce74:	strdeq	r0, [r0], -ip
   2ce78:	strdeq	r0, [r0], -ip
   2ce7c:	strdeq	r0, [r0], -ip
   2ce80:	strdeq	r0, [r0], -ip
   2ce84:	strdeq	r0, [r0], -ip
   2ce88:	strdeq	r0, [r0], -ip
   2ce8c:	strdeq	r0, [r0], -ip
   2ce90:	strdeq	r0, [r0], -ip
   2ce94:	strdeq	r0, [r0], -ip
   2ce98:	strdeq	r0, [r0], -ip
   2ce9c:	strdeq	r0, [r0], -ip
   2cea0:	strdeq	r0, [r0], -ip
   2cea4:	strdeq	r0, [r0], -ip
   2cea8:	strdeq	r0, [r0], -ip
   2ceac:	strdeq	r0, [r0], -ip
   2ceb0:	strdeq	r0, [r0], -ip
   2ceb4:	strdeq	r0, [r0], -ip
   2ceb8:	strdeq	r0, [r0], -ip
   2cebc:	strdeq	r0, [r0], -ip
   2cec0:	strdeq	r0, [r0], -ip
   2cec4:	strdeq	r0, [r0], -ip
   2cec8:	strdeq	r0, [r0], -ip
   2cecc:	muleq	r0, r4, r4
   2ced0:	muleq	r0, r4, r4
   2ced4:	muleq	r0, r4, r4
   2ced8:	andeq	r0, r0, ip, ror #14
   2cedc:	strdeq	r0, [r0], -ip
   2cee0:	andeq	r1, r0, r4, ror #15
   2cee4:	strdeq	r0, [r0], -ip
   2cee8:	strdeq	r0, [r0], -ip
   2ceec:	strdeq	r0, [r0], -ip
   2cef0:	strdeq	r0, [r0], -ip
   2cef4:	strdeq	r0, [r0], -ip
   2cef8:	strdeq	r0, [r0], -ip
   2cefc:	strdeq	r0, [r0], -ip
   2cf00:	strdeq	r0, [r0], -ip
   2cf04:	strdeq	r0, [r0], -ip
   2cf08:	strdeq	r0, [r0], -ip
   2cf0c:	strdeq	r0, [r0], -ip
   2cf10:	strdeq	r0, [r0], -ip
   2cf14:	strdeq	r0, [r0], -ip
   2cf18:	strdeq	r0, [r0], -ip
   2cf1c:	strdeq	r0, [r0], -ip
   2cf20:	strdeq	r0, [r0], -ip
   2cf24:	strdeq	r0, [r0], -ip
   2cf28:	strdeq	r0, [r0], -ip
   2cf2c:	strdeq	r0, [r0], -ip
   2cf30:	strdeq	r0, [r0], -ip
   2cf34:	strdeq	r0, [r0], -ip
   2cf38:	strdeq	r0, [r0], -ip
   2cf3c:	strdeq	r0, [r0], -ip
   2cf40:	strdeq	r0, [r0], -ip
   2cf44:	strdeq	r0, [r0], -ip
   2cf48:	strdeq	r0, [r0], -ip
   2cf4c:	muleq	r0, r4, r4
   2cf50:	strdeq	r1, [r0], -r4
   2cf54:	muleq	r0, r4, r4
   2cf58:	andeq	r0, r0, ip, ror #14
   2cf5c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2cf60:	add	sl, r5, #1
   2cf64:	lsl	r0, r4, #8
   2cf68:	cmp	sl, r1
   2cf6c:	beq	2cfac <__flatcc_fb_parse@@Base+0x2a7c>
   2cf70:	ldrb	r1, [sl]
   2cf74:	ldrb	r2, [r9, r1]
   2cf78:	cmp	r2, #0
   2cf7c:	beq	2cfb0 <__flatcc_fb_parse@@Base+0x2a80>
   2cf80:	orr	r0, r0, r1, lsl #16
   2cf84:	add	r1, r5, #2
   2cf88:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2cf8c:	cmp	r2, r1
   2cf90:	beq	2cfac <__flatcc_fb_parse@@Base+0x2a7c>
   2cf94:	ldrb	r2, [r1], #1
   2cf98:	ldrb	r2, [r9, r2]
   2cf9c:	cmp	r2, #0
   2cfa0:	bne	2cf88 <__flatcc_fb_parse@@Base+0x2a58>
   2cfa4:	sub	sl, r1, #1
   2cfa8:	b	2cfb0 <__flatcc_fb_parse@@Base+0x2a80>
   2cfac:	ldr	sl, [fp, #-32]	; 0xffffffe0
   2cfb0:	ldrb	r2, [sl, #-1]
   2cfb4:	sub	r3, sl, r5
   2cfb8:	mov	r1, #48	; 0x30
   2cfbc:	uxtab	r1, r1, r3
   2cfc0:	str	r3, [sp, #36]	; 0x24
   2cfc4:	orr	r0, r0, r2, lsl #24
   2cfc8:	orr	r0, r0, r1
   2cfcc:	movw	r1, #29242	; 0x723a
   2cfd0:	movt	r1, #25968	; 0x6570
   2cfd4:	cmp	r0, r1
   2cfd8:	ble	2d068 <__flatcc_fb_parse@@Base+0x2b38>
   2cfdc:	movw	r1, #26173	; 0x663d
   2cfe0:	movt	r1, #28265	; 0x6e69
   2cfe4:	cmp	r0, r1
   2cfe8:	bgt	2d0fc <__flatcc_fb_parse@@Base+0x2bcc>
   2cfec:	movw	r1, #30004	; 0x7534
   2cff0:	movt	r1, #26476	; 0x676c
   2cff4:	cmp	r0, r1
   2cff8:	ble	2d344 <__flatcc_fb_parse@@Base+0x2e14>
   2cffc:	movw	r1, #29493	; 0x7335
   2d000:	movt	r1, #26484	; 0x6774
   2d004:	cmp	r0, r1
   2d008:	ble	2d6a8 <__flatcc_fb_parse@@Base+0x3178>
   2d00c:	movw	r1, #29494	; 0x7336
   2d010:	movt	r1, #26484	; 0x6774
   2d014:	cmp	r0, r1
   2d018:	beq	2da6c <__flatcc_fb_parse@@Base+0x353c>
   2d01c:	movw	r1, #25140	; 0x6234
   2d020:	movt	r1, #27759	; 0x6c6f
   2d024:	cmp	r0, r1
   2d028:	beq	2daa0 <__flatcc_fb_parse@@Base+0x3570>
   2d02c:	movw	r1, #25908	; 0x6534
   2d030:	movt	r1, #28014	; 0x6d6e
   2d034:	cmp	r0, r1
   2d038:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2d03c:	ldr	r0, [pc, #4084]	; 2e038 <__flatcc_fb_parse@@Base+0x3b08>
   2d040:	mov	r1, r5
   2d044:	mov	r2, #4
   2d048:	add	r0, pc, r0
   2d04c:	bl	148a4 <bcmp@plt>
   2d050:	cmp	r0, #0
   2d054:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2d058:	mov	r6, r5
   2d05c:	mov	r1, r7
   2d060:	mvn	r4, #996	; 0x3e4
   2d064:	b	2dcfc <__flatcc_fb_parse@@Base+0x37cc>
   2d068:	movw	r1, #30004	; 0x7534
   2d06c:	movt	r1, #14441	; 0x3869
   2d070:	cmp	r0, r1
   2d074:	ble	2d180 <__flatcc_fb_parse@@Base+0x2c50>
   2d078:	movw	r1, #29748	; 0x7434
   2d07c:	movt	r1, #25953	; 0x6561
   2d080:	cmp	r0, r1
   2d084:	ble	2d3a8 <__flatcc_fb_parse@@Base+0x2e78>
   2d088:	movw	r1, #26934	; 0x6936
   2d08c:	movt	r1, #25966	; 0x656e
   2d090:	cmp	r0, r1
   2d094:	ble	2d6f4 <__flatcc_fb_parse@@Base+0x31c4>
   2d098:	movw	r1, #26935	; 0x6937
   2d09c:	movt	r1, #25966	; 0x656e
   2d0a0:	cmp	r0, r1
   2d0a4:	beq	2dad4 <__flatcc_fb_parse@@Base+0x35a4>
   2d0a8:	movw	r1, #25654	; 0x6436
   2d0ac:	movt	r1, #25967	; 0x656f
   2d0b0:	cmp	r0, r1
   2d0b4:	beq	2db08 <__flatcc_fb_parse@@Base+0x35d8>
   2d0b8:	movw	r1, #29241	; 0x7239
   2d0bc:	movt	r1, #25967	; 0x656f
   2d0c0:	cmp	r0, r1
   2d0c4:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2d0c8:	ldr	r0, [pc, #3948]	; 2e03c <__flatcc_fb_parse@@Base+0x3b0c>
   2d0cc:	mov	r1, r5
   2d0d0:	mov	r2, #9
   2d0d4:	add	r0, pc, r0
   2d0d8:	bl	148a4 <bcmp@plt>
   2d0dc:	cmp	r0, #0
   2d0e0:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2d0e4:	movw	r0, #64572	; 0xfc3c
   2d0e8:	mov	r6, r5
   2d0ec:	mov	r1, r7
   2d0f0:	movt	r0, #65535	; 0xffff
   2d0f4:	sub	r4, r0, #4
   2d0f8:	b	2dcfc <__flatcc_fb_parse@@Base+0x37cc>
   2d0fc:	movw	r1, #30003	; 0x7533
   2d100:	movt	r1, #29801	; 0x7469
   2d104:	cmp	r0, r1
   2d108:	ble	2d404 <__flatcc_fb_parse@@Base+0x2ed4>
   2d10c:	movw	r1, #26930	; 0x6932
   2d110:	movt	r1, #29806	; 0x746e
   2d114:	cmp	r0, r1
   2d118:	ble	2d748 <__flatcc_fb_parse@@Base+0x3218>
   2d11c:	movw	r1, #29494	; 0x7336
   2d120:	movt	r1, #29812	; 0x7474
   2d124:	cmp	r0, r1
   2d128:	beq	2db3c <__flatcc_fb_parse@@Base+0x360c>
   2d12c:	movw	r1, #30006	; 0x7536
   2d130:	movt	r1, #29811	; 0x7473
   2d134:	cmp	r0, r1
   2d138:	beq	2db68 <__flatcc_fb_parse@@Base+0x3638>
   2d13c:	movw	r1, #26931	; 0x6933
   2d140:	movt	r1, #29806	; 0x746e
   2d144:	cmp	r0, r1
   2d148:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2d14c:	ldr	r0, [pc, #4056]	; 2e12c <__flatcc_fb_parse@@Base+0x3bfc>
   2d150:	mov	r1, r5
   2d154:	mov	r2, #3
   2d158:	add	r0, pc, r0
   2d15c:	bl	148a4 <bcmp@plt>
   2d160:	cmp	r0, #0
   2d164:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2d168:	movw	r0, #64572	; 0xfc3c
   2d16c:	mov	r6, r5
   2d170:	mov	r1, r7
   2d174:	movt	r0, #65535	; 0xffff
   2d178:	sub	r4, r0, #30
   2d17c:	b	2dcfc <__flatcc_fb_parse@@Base+0x37cc>
   2d180:	movw	r1, #26166	; 0x6636
   2d184:	movt	r1, #13420	; 0x346c
   2d188:	cmp	r0, r1
   2d18c:	bgt	2d468 <__flatcc_fb_parse@@Base+0x2f38>
   2d190:	movw	r1, #26932	; 0x6934
   2d194:	movt	r1, #12910	; 0x326e
   2d198:	cmp	r0, r1
   2d19c:	bgt	2d794 <__flatcc_fb_parse@@Base+0x3264>
   2d1a0:	movw	r1, #30006	; 0x7536
   2d1a4:	movt	r1, #12905	; 0x3269
   2d1a8:	cmp	r0, r1
   2d1ac:	beq	2db9c <__flatcc_fb_parse@@Base+0x366c>
   2d1b0:	movw	r1, #26167	; 0x6637
   2d1b4:	movt	r1, #12908	; 0x326c
   2d1b8:	cmp	r0, r1
   2d1bc:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2d1c0:	ldr	r0, [pc, #3944]	; 2e130 <__flatcc_fb_parse@@Base+0x3c00>
   2d1c4:	mov	r1, r5
   2d1c8:	mov	r2, #7
   2d1cc:	add	r0, pc, r0
   2d1d0:	bl	148a4 <bcmp@plt>
   2d1d4:	cmp	r0, #0
   2d1d8:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2d1dc:	movw	r0, #64572	; 0xfc3c
   2d1e0:	mov	r6, r5
   2d1e4:	mov	r1, r7
   2d1e8:	movt	r0, #65535	; 0xffff
   2d1ec:	sub	r4, r0, #32
   2d1f0:	b	2dcfc <__flatcc_fb_parse@@Base+0x37cc>
   2d1f4:	ldr	r2, [ip]
   2d1f8:	ldr	r0, [r8]
   2d1fc:	add	r6, r2, r2, lsl #2
   2d200:	add	r3, r0, r6, lsl #2
   2d204:	str	r3, [lr]
   2d208:	ldr	r1, [r7]
   2d20c:	cmp	r1, r3
   2d210:	bne	2d28c <__flatcc_fb_parse@@Base+0x2d5c>
   2d214:	cmp	r2, #0
   2d218:	lsl	r1, r2, #1
   2d21c:	mov	r9, r8
   2d220:	mov	r8, sl
   2d224:	mov	sl, r5
   2d228:	mov	r5, r7
   2d22c:	mov	r7, ip
   2d230:	movweq	r1, #1024	; 0x400
   2d234:	str	r1, [ip]
   2d238:	add	r1, r1, r1, lsl #2
   2d23c:	lsl	r1, r1, #2
   2d240:	bl	14844 <realloc@plt>
   2d244:	cmp	r0, #0
   2d248:	str	r0, [r9]
   2d24c:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2d250:	ldr	r1, [r7]
   2d254:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2d258:	mov	ip, r7
   2d25c:	mov	r2, r9
   2d260:	mov	r7, r5
   2d264:	add	r1, r1, r1, lsl #2
   2d268:	add	r1, r0, r1, lsl #2
   2d26c:	str	r1, [lr]
   2d270:	add	r1, r0, r6, lsl #2
   2d274:	str	r1, [r5]
   2d278:	mov	r5, sl
   2d27c:	mov	sl, r8
   2d280:	mov	r8, r9
   2d284:	ldr	r9, [pc, #4036]	; 2e250 <__flatcc_fb_parse@@Base+0x3d20>
   2d288:	add	r9, pc, r9
   2d28c:	mov	r2, #1
   2d290:	add	r0, r5, #1
   2d294:	str	r2, [r1, #4]
   2d298:	str	r5, [r1]
   2d29c:	str	r4, [r1, #16]
   2d2a0:	b	2fd84 <__flatcc_fb_parse@@Base+0x5854>
   2d2a4:	mov	r4, r5
   2d2a8:	ldrb	r0, [r4, #1]!
   2d2ac:	sub	r1, r0, #48	; 0x30
   2d2b0:	uxtb	r1, r1
   2d2b4:	cmp	r1, #10
   2d2b8:	bcc	2d2a8 <__flatcc_fb_parse@@Base+0x2d78>
   2d2bc:	ldr	r2, [sp, #12]
   2d2c0:	cmp	r0, #46	; 0x2e
   2d2c4:	mov	r9, r4
   2d2c8:	bne	2d2f4 <__flatcc_fb_parse@@Base+0x2dc4>
   2d2cc:	cmp	r2, r4
   2d2d0:	beq	2e654 <__flatcc_fb_parse@@Base+0x4124>
   2d2d4:	ldrb	r1, [r4, #1]
   2d2d8:	add	r0, r4, #1
   2d2dc:	mov	r4, r0
   2d2e0:	sub	r1, r1, #48	; 0x30
   2d2e4:	uxtb	r1, r1
   2d2e8:	cmp	r1, #10
   2d2ec:	bcc	2d2cc <__flatcc_fb_parse@@Base+0x2d9c>
   2d2f0:	mov	r4, r0
   2d2f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d2f8:	cmp	r4, r0
   2d2fc:	beq	2e654 <__flatcc_fb_parse@@Base+0x4124>
   2d300:	ldrb	r0, [r4]
   2d304:	orr	r0, r0, #32
   2d308:	cmp	r0, #101	; 0x65
   2d30c:	bne	2e658 <__flatcc_fb_parse@@Base+0x4128>
   2d310:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d314:	add	r1, r4, #1
   2d318:	cmp	r1, r0
   2d31c:	beq	2e624 <__flatcc_fb_parse@@Base+0x40f4>
   2d320:	ldrb	r0, [r1]
   2d324:	cmp	r0, #43	; 0x2b
   2d328:	beq	2e620 <__flatcc_fb_parse@@Base+0x40f0>
   2d32c:	cmp	r0, #45	; 0x2d
   2d330:	mov	r0, r1
   2d334:	movne	r0, r4
   2d338:	cmp	r2, r0
   2d33c:	bne	2e62c <__flatcc_fb_parse@@Base+0x40fc>
   2d340:	b	2e654 <__flatcc_fb_parse@@Base+0x4124>
   2d344:	movw	r1, #24888	; 0x6138
   2d348:	movt	r1, #25972	; 0x6574
   2d34c:	cmp	r0, r1
   2d350:	bgt	2d5b4 <__flatcc_fb_parse@@Base+0x3084>
   2d354:	movw	r1, #29243	; 0x723b
   2d358:	movt	r1, #25968	; 0x6570
   2d35c:	cmp	r0, r1
   2d360:	beq	2d944 <__flatcc_fb_parse@@Base+0x3414>
   2d364:	movw	r1, #29748	; 0x7434
   2d368:	movt	r1, #25970	; 0x6572
   2d36c:	cmp	r0, r1
   2d370:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2d374:	ldr	r0, [pc, #3972]	; 2e300 <__flatcc_fb_parse@@Base+0x3dd0>
   2d378:	mov	r1, r5
   2d37c:	mov	r2, #4
   2d380:	add	r0, pc, r0
   2d384:	bl	148a4 <bcmp@plt>
   2d388:	cmp	r0, #0
   2d38c:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2d390:	movw	r0, #64572	; 0xfc3c
   2d394:	mov	r6, r5
   2d398:	mov	r1, r7
   2d39c:	movt	r0, #65535	; 0xffff
   2d3a0:	sub	r4, r0, #24
   2d3a4:	b	2dcfc <__flatcc_fb_parse@@Base+0x37cc>
   2d3a8:	movw	r1, #26164	; 0x6634
   2d3ac:	movt	r1, #25953	; 0x6561
   2d3b0:	cmp	r0, r1
   2d3b4:	bgt	2d608 <__flatcc_fb_parse@@Base+0x30d8>
   2d3b8:	movw	r1, #30005	; 0x7535
   2d3bc:	movt	r1, #14441	; 0x3869
   2d3c0:	cmp	r0, r1
   2d3c4:	beq	2d978 <__flatcc_fb_parse@@Base+0x3448>
   2d3c8:	movw	r1, #26932	; 0x6934
   2d3cc:	movt	r1, #14446	; 0x386e
   2d3d0:	cmp	r0, r1
   2d3d4:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2d3d8:	ldr	r0, [pc, #4084]	; 2e3d4 <__flatcc_fb_parse@@Base+0x3ea4>
   2d3dc:	mov	r1, r5
   2d3e0:	mov	r2, #4
   2d3e4:	add	r0, pc, r0
   2d3e8:	bl	148a4 <bcmp@plt>
   2d3ec:	cmp	r0, #0
   2d3f0:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2d3f4:	mov	r6, r5
   2d3f8:	mov	r1, r7
   2d3fc:	mvn	r4, #992	; 0x3e0
   2d400:	b	2dcfc <__flatcc_fb_parse@@Base+0x37cc>
   2d404:	movw	r1, #26174	; 0x663e
   2d408:	movt	r1, #29289	; 0x7269
   2d40c:	cmp	r0, r1
   2d410:	bgt	2d654 <__flatcc_fb_parse@@Base+0x3124>
   2d414:	movw	r1, #26174	; 0x663e
   2d418:	movt	r1, #28265	; 0x6e69
   2d41c:	cmp	r0, r1
   2d420:	beq	2d9a4 <__flatcc_fb_parse@@Base+0x3474>
   2d424:	movw	r1, #30005	; 0x7535
   2d428:	movt	r1, #28270	; 0x6e6e
   2d42c:	cmp	r0, r1
   2d430:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2d434:	ldr	r0, [pc, #3996]	; 2e3d8 <__flatcc_fb_parse@@Base+0x3ea8>
   2d438:	mov	r1, r5
   2d43c:	mov	r2, #5
   2d440:	add	r0, pc, r0
   2d444:	bl	148a4 <bcmp@plt>
   2d448:	cmp	r0, #0
   2d44c:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2d450:	movw	r0, #64572	; 0xfc3c
   2d454:	mov	r6, r5
   2d458:	mov	r1, r7
   2d45c:	movt	r0, #65535	; 0xffff
   2d460:	sub	r4, r0, #12
   2d464:	b	2dcfc <__flatcc_fb_parse@@Base+0x37cc>
   2d468:	movw	r1, #30005	; 0x7535
   2d46c:	movt	r1, #13929	; 0x3669
   2d470:	cmp	r0, r1
   2d474:	bgt	2d7e8 <__flatcc_fb_parse@@Base+0x32b8>
   2d478:	movw	r1, #26167	; 0x6637
   2d47c:	movt	r1, #13420	; 0x346c
   2d480:	cmp	r0, r1
   2d484:	beq	2dbd0 <__flatcc_fb_parse@@Base+0x36a0>
   2d488:	movw	r1, #26933	; 0x6935
   2d48c:	movt	r1, #13422	; 0x346e
   2d490:	cmp	r0, r1
   2d494:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2d498:	ldr	r0, [pc, #4076]	; 2e48c <__flatcc_fb_parse@@Base+0x3f5c>
   2d49c:	mov	r1, r5
   2d4a0:	mov	r2, #5
   2d4a4:	add	r0, pc, r0
   2d4a8:	bl	148a4 <bcmp@plt>
   2d4ac:	cmp	r0, #0
   2d4b0:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2d4b4:	movw	r0, #64572	; 0xfc3c
   2d4b8:	mov	r6, r5
   2d4bc:	mov	r1, r7
   2d4c0:	movt	r0, #65535	; 0xffff
   2d4c4:	sub	r4, r0, #26
   2d4c8:	b	2dcfc <__flatcc_fb_parse@@Base+0x37cc>
   2d4cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d4d0:	add	r6, r5, #1
   2d4d4:	cmp	r6, r0
   2d4d8:	beq	2d83c <__flatcc_fb_parse@@Base+0x330c>
   2d4dc:	ldrb	r0, [r6]
   2d4e0:	cmp	r0, #61	; 0x3d
   2d4e4:	bne	2d83c <__flatcc_fb_parse@@Base+0x330c>
   2d4e8:	ldr	r2, [ip]
   2d4ec:	ldr	r0, [r8]
   2d4f0:	add	r6, r2, r2, lsl #2
   2d4f4:	add	r3, r0, r6, lsl #2
   2d4f8:	str	r3, [lr]
   2d4fc:	ldr	r1, [r7]
   2d500:	cmp	r1, r3
   2d504:	bne	2d580 <__flatcc_fb_parse@@Base+0x3050>
   2d508:	cmp	r2, #0
   2d50c:	lsl	r1, r2, #1
   2d510:	mov	r9, r8
   2d514:	mov	r8, sl
   2d518:	mov	sl, r5
   2d51c:	mov	r5, r7
   2d520:	mov	r7, ip
   2d524:	movweq	r1, #1024	; 0x400
   2d528:	str	r1, [ip]
   2d52c:	add	r1, r1, r1, lsl #2
   2d530:	lsl	r1, r1, #2
   2d534:	bl	14844 <realloc@plt>
   2d538:	cmp	r0, #0
   2d53c:	str	r0, [r9]
   2d540:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2d544:	ldr	r1, [r7]
   2d548:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2d54c:	mov	ip, r7
   2d550:	mov	r2, r9
   2d554:	mov	r7, r5
   2d558:	add	r1, r1, r1, lsl #2
   2d55c:	add	r1, r0, r1, lsl #2
   2d560:	str	r1, [lr]
   2d564:	add	r1, r0, r6, lsl #2
   2d568:	str	r1, [r5]
   2d56c:	mov	r5, sl
   2d570:	mov	sl, r8
   2d574:	mov	r8, r9
   2d578:	ldr	r9, [pc, #4028]	; 2e53c <__flatcc_fb_parse@@Base+0x400c>
   2d57c:	add	r9, pc, r9
   2d580:	mov	r3, #2
   2d584:	orr	r0, r4, #15616	; 0x3d00
   2d588:	add	r2, r5, #2
   2d58c:	str	r3, [r1, #4]
   2d590:	str	r5, [r1]
   2d594:	str	r0, [r1, #16]
   2d598:	ldr	r0, [sp, #40]	; 0x28
   2d59c:	ldr	r0, [r0]
   2d5a0:	str	r0, [r1, #8]
   2d5a4:	ldr	r0, [sl]
   2d5a8:	sub	r0, r5, r0
   2d5ac:	mov	r5, r2
   2d5b0:	b	30364 <__flatcc_fb_parse@@Base+0x5e34>
   2d5b4:	movw	r1, #24889	; 0x6139
   2d5b8:	movt	r1, #25972	; 0x6574
   2d5bc:	cmp	r0, r1
   2d5c0:	beq	2d9d8 <__flatcc_fb_parse@@Base+0x34a8>
   2d5c4:	movw	r1, #25140	; 0x6234
   2d5c8:	movt	r1, #25977	; 0x6579
   2d5cc:	cmp	r0, r1
   2d5d0:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2d5d4:	ldr	r0, [pc, #3940]	; 2e540 <__flatcc_fb_parse@@Base+0x4010>
   2d5d8:	mov	r1, r5
   2d5dc:	mov	r2, #4
   2d5e0:	add	r0, pc, r0
   2d5e4:	bl	148a4 <bcmp@plt>
   2d5e8:	cmp	r0, #0
   2d5ec:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2d5f0:	movw	r0, #64572	; 0xfc3c
   2d5f4:	mov	r6, r5
   2d5f8:	mov	r1, r7
   2d5fc:	movt	r0, #65535	; 0xffff
   2d600:	sub	r4, r0, #34	; 0x22
   2d604:	b	2dcfc <__flatcc_fb_parse@@Base+0x37cc>
   2d608:	movw	r1, #26165	; 0x6635
   2d60c:	movt	r1, #25953	; 0x6561
   2d610:	cmp	r0, r1
   2d614:	beq	2da0c <__flatcc_fb_parse@@Base+0x34dc>
   2d618:	movw	r1, #28217	; 0x6e39
   2d61c:	movt	r1, #25953	; 0x6561
   2d620:	cmp	r0, r1
   2d624:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2d628:	ldr	r0, [pc, #4076]	; 2e61c <__flatcc_fb_parse@@Base+0x40ec>
   2d62c:	mov	r1, r5
   2d630:	mov	r2, #9
   2d634:	add	r0, pc, r0
   2d638:	bl	148a4 <bcmp@plt>
   2d63c:	cmp	r0, #0
   2d640:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2d644:	mov	r6, r5
   2d648:	mov	r1, r7
   2d64c:	mvn	r4, #968	; 0x3c8
   2d650:	b	2dcfc <__flatcc_fb_parse@@Base+0x37cc>
   2d654:	movw	r1, #26175	; 0x663f
   2d658:	movt	r1, #29289	; 0x7269
   2d65c:	cmp	r0, r1
   2d660:	beq	2da40 <__flatcc_fb_parse@@Base+0x3510>
   2d664:	movw	r1, #29493	; 0x7335
   2d668:	movt	r1, #29800	; 0x7468
   2d66c:	cmp	r0, r1
   2d670:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2d674:	ldr	r0, [pc, #4048]	; 2e64c <__flatcc_fb_parse@@Base+0x411c>
   2d678:	mov	r1, r5
   2d67c:	mov	r2, #5
   2d680:	add	r0, pc, r0
   2d684:	bl	148a4 <bcmp@plt>
   2d688:	cmp	r0, #0
   2d68c:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2d690:	movw	r0, #64572	; 0xfc3c
   2d694:	mov	r6, r5
   2d698:	mov	r1, r7
   2d69c:	movt	r0, #65535	; 0xffff
   2d6a0:	sub	r4, r0, #20
   2d6a4:	b	2dcfc <__flatcc_fb_parse@@Base+0x37cc>
   2d6a8:	movw	r1, #30005	; 0x7535
   2d6ac:	movt	r1, #26476	; 0x676c
   2d6b0:	cmp	r0, r1
   2d6b4:	beq	2dc04 <__flatcc_fb_parse@@Base+0x36d4>
   2d6b8:	movw	r1, #27700	; 0x6c34
   2d6bc:	movt	r1, #26479	; 0x676f
   2d6c0:	cmp	r0, r1
   2d6c4:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2d6c8:	ldr	r0, [pc, #3968]	; 2e650 <__flatcc_fb_parse@@Base+0x4120>
   2d6cc:	mov	r1, r5
   2d6d0:	mov	r2, #4
   2d6d4:	add	r0, pc, r0
   2d6d8:	bl	148a4 <bcmp@plt>
   2d6dc:	cmp	r0, #0
   2d6e0:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2d6e4:	mov	r6, r5
   2d6e8:	mov	r1, r7
   2d6ec:	mvn	r4, #988	; 0x3dc
   2d6f0:	b	2dcfc <__flatcc_fb_parse@@Base+0x37cc>
   2d6f4:	movw	r1, #29749	; 0x7435
   2d6f8:	movt	r1, #25953	; 0x6561
   2d6fc:	cmp	r0, r1
   2d700:	beq	2dc30 <__flatcc_fb_parse@@Base+0x3700>
   2d704:	movw	r1, #30005	; 0x7535
   2d708:	movt	r1, #25954	; 0x6562
   2d70c:	cmp	r0, r1
   2d710:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2d714:	ldr	r0, [pc, #4056]	; 2e6f4 <__flatcc_fb_parse@@Base+0x41c4>
   2d718:	mov	r1, r5
   2d71c:	mov	r2, #5
   2d720:	add	r0, pc, r0
   2d724:	bl	148a4 <bcmp@plt>
   2d728:	cmp	r0, #0
   2d72c:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2d730:	movw	r0, #64572	; 0xfc3c
   2d734:	mov	r6, r5
   2d738:	mov	r1, r7
   2d73c:	movt	r0, #65535	; 0xffff
   2d740:	sub	r4, r0, #18
   2d744:	b	2dcfc <__flatcc_fb_parse@@Base+0x37cc>
   2d748:	movw	r1, #30004	; 0x7534
   2d74c:	movt	r1, #29801	; 0x7469
   2d750:	cmp	r0, r1
   2d754:	beq	2dc64 <__flatcc_fb_parse@@Base+0x3734>
   2d758:	movw	r1, #26165	; 0x6635
   2d75c:	movt	r1, #29804	; 0x746c
   2d760:	cmp	r0, r1
   2d764:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2d768:	ldr	r0, [pc, #3976]	; 2e6f8 <__flatcc_fb_parse@@Base+0x41c8>
   2d76c:	mov	r1, r5
   2d770:	mov	r2, #5
   2d774:	add	r0, pc, r0
   2d778:	bl	148a4 <bcmp@plt>
   2d77c:	cmp	r0, #0
   2d780:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2d784:	mov	r6, r5
   2d788:	mov	r1, r7
   2d78c:	mvn	r4, #984	; 0x3d8
   2d790:	b	2dcfc <__flatcc_fb_parse@@Base+0x37cc>
   2d794:	movw	r1, #26933	; 0x6935
   2d798:	movt	r1, #12910	; 0x326e
   2d79c:	cmp	r0, r1
   2d7a0:	beq	2dc9c <__flatcc_fb_parse@@Base+0x376c>
   2d7a4:	movw	r1, #30006	; 0x7536
   2d7a8:	movt	r1, #13417	; 0x3469
   2d7ac:	cmp	r0, r1
   2d7b0:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2d7b4:	ldr	r0, [pc, #4076]	; 2e7a8 <__flatcc_fb_parse@@Base+0x4278>
   2d7b8:	mov	r1, r5
   2d7bc:	mov	r2, #6
   2d7c0:	add	r0, pc, r0
   2d7c4:	bl	148a4 <bcmp@plt>
   2d7c8:	cmp	r0, #0
   2d7cc:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2d7d0:	movw	r0, #64572	; 0xfc3c
   2d7d4:	mov	r6, r5
   2d7d8:	mov	r1, r7
   2d7dc:	movt	r0, #65535	; 0xffff
   2d7e0:	sub	r4, r0, #14
   2d7e4:	b	2dcfc <__flatcc_fb_parse@@Base+0x37cc>
   2d7e8:	movw	r1, #30006	; 0x7536
   2d7ec:	movt	r1, #13929	; 0x3669
   2d7f0:	cmp	r0, r1
   2d7f4:	beq	2dcd4 <__flatcc_fb_parse@@Base+0x37a4>
   2d7f8:	movw	r1, #26933	; 0x6935
   2d7fc:	movt	r1, #13934	; 0x366e
   2d800:	cmp	r0, r1
   2d804:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2d808:	ldr	r0, [pc, #3996]	; 2e7ac <__flatcc_fb_parse@@Base+0x427c>
   2d80c:	mov	r1, r5
   2d810:	mov	r2, #5
   2d814:	add	r0, pc, r0
   2d818:	bl	148a4 <bcmp@plt>
   2d81c:	cmp	r0, #0
   2d820:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2d824:	movw	r0, #64572	; 0xfc3c
   2d828:	mov	r6, r5
   2d82c:	mov	r1, r7
   2d830:	movt	r0, #65535	; 0xffff
   2d834:	sub	r4, r0, #28
   2d838:	b	2dcfc <__flatcc_fb_parse@@Base+0x37cc>
   2d83c:	ldr	r2, [ip]
   2d840:	ldr	r0, [r8]
   2d844:	add	r9, r2, r2, lsl #2
   2d848:	add	r3, r0, r9, lsl #2
   2d84c:	str	r3, [lr]
   2d850:	ldr	r1, [r7]
   2d854:	cmp	r1, r3
   2d858:	bne	2d8cc <__flatcc_fb_parse@@Base+0x339c>
   2d85c:	cmp	r2, #0
   2d860:	lsl	r1, r2, #1
   2d864:	mov	r8, sl
   2d868:	mov	sl, r5
   2d86c:	mov	r5, r7
   2d870:	mov	r7, ip
   2d874:	movweq	r1, #1024	; 0x400
   2d878:	str	r1, [ip]
   2d87c:	add	r1, r1, r1, lsl #2
   2d880:	lsl	r1, r1, #2
   2d884:	bl	14844 <realloc@plt>
   2d888:	ldr	r1, [sp, #24]
   2d88c:	cmp	r0, #0
   2d890:	str	r0, [r1]
   2d894:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2d898:	mov	r2, r1
   2d89c:	ldr	r1, [r7]
   2d8a0:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2d8a4:	mov	ip, r7
   2d8a8:	mov	r7, r5
   2d8ac:	add	r1, r1, r1, lsl #2
   2d8b0:	add	r1, r0, r1, lsl #2
   2d8b4:	str	r1, [lr]
   2d8b8:	add	r1, r0, r9, lsl #2
   2d8bc:	str	r1, [r5]
   2d8c0:	mov	r5, sl
   2d8c4:	mov	sl, r8
   2d8c8:	mov	r8, r2
   2d8cc:	mov	r0, #1
   2d8d0:	str	r0, [r1, #4]
   2d8d4:	ldr	r0, [sp, #40]	; 0x28
   2d8d8:	str	r5, [r1]
   2d8dc:	str	r4, [r1, #16]
   2d8e0:	ldr	r0, [r0]
   2d8e4:	str	r0, [r1, #8]
   2d8e8:	ldr	r0, [sl]
   2d8ec:	sub	r0, r5, r0
   2d8f0:	mov	r5, r6
   2d8f4:	add	r0, r0, #1
   2d8f8:	str	r0, [r1, #12]
   2d8fc:	add	r0, r1, #20
   2d900:	str	r0, [r7]
   2d904:	ldr	r9, [pc, #4092]	; 2e908 <__flatcc_fb_parse@@Base+0x43d8>
   2d908:	add	r9, pc, r9
   2d90c:	b	2cd3c <__flatcc_fb_parse@@Base+0x280c>
   2d910:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d914:	add	r5, r5, #1
   2d918:	cmp	r5, r0
   2d91c:	beq	30f80 <__flatcc_fb_parse@@Base+0x6a50>
   2d920:	ldrb	r0, [r5]
   2d924:	cmp	r0, #32
   2d928:	cmpne	r0, #9
   2d92c:	bne	2cd3c <__flatcc_fb_parse@@Base+0x280c>
   2d930:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d934:	add	r5, r5, #1
   2d938:	cmp	r0, r5
   2d93c:	bne	2d920 <__flatcc_fb_parse@@Base+0x33f0>
   2d940:	b	30f80 <__flatcc_fb_parse@@Base+0x6a50>
   2d944:	ldr	r0, [pc, #4032]	; 2e90c <__flatcc_fb_parse@@Base+0x43dc>
   2d948:	mov	r1, r5
   2d94c:	mov	r2, #11
   2d950:	add	r0, pc, r0
   2d954:	bl	148a4 <bcmp@plt>
   2d958:	cmp	r0, #0
   2d95c:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2d960:	movw	r0, #64572	; 0xfc3c
   2d964:	mov	r6, r5
   2d968:	mov	r1, r7
   2d96c:	movt	r0, #65535	; 0xffff
   2d970:	sub	r4, r0, #3
   2d974:	b	2dcfc <__flatcc_fb_parse@@Base+0x37cc>
   2d978:	ldr	r0, [pc, #3984]	; 2e910 <__flatcc_fb_parse@@Base+0x43e0>
   2d97c:	mov	r1, r5
   2d980:	mov	r2, #5
   2d984:	add	r0, pc, r0
   2d988:	bl	148a4 <bcmp@plt>
   2d98c:	cmp	r0, #0
   2d990:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2d994:	mov	r6, r5
   2d998:	mov	r1, r7
   2d99c:	mvn	r4, #980	; 0x3d4
   2d9a0:	b	2dcfc <__flatcc_fb_parse@@Base+0x37cc>
   2d9a4:	ldr	r0, [pc, #3944]	; 2e914 <__flatcc_fb_parse@@Base+0x43e4>
   2d9a8:	mov	r1, r5
   2d9ac:	mov	r2, #14
   2d9b0:	add	r0, pc, r0
   2d9b4:	bl	148a4 <bcmp@plt>
   2d9b8:	cmp	r0, #0
   2d9bc:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2d9c0:	movw	r0, #64572	; 0xfc3c
   2d9c4:	mov	r6, r5
   2d9c8:	mov	r1, r7
   2d9cc:	movt	r0, #65535	; 0xffff
   2d9d0:	sub	r4, r0, #2
   2d9d4:	b	2dcfc <__flatcc_fb_parse@@Base+0x37cc>
   2d9d8:	ldr	r0, [pc, #4068]	; 2e9c4 <__flatcc_fb_parse@@Base+0x4494>
   2d9dc:	mov	r1, r5
   2d9e0:	mov	r2, #9
   2d9e4:	add	r0, pc, r0
   2d9e8:	bl	148a4 <bcmp@plt>
   2d9ec:	cmp	r0, #0
   2d9f0:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2d9f4:	movw	r0, #64572	; 0xfc3c
   2d9f8:	mov	r6, r5
   2d9fc:	mov	r1, r7
   2da00:	movt	r0, #65535	; 0xffff
   2da04:	sub	r4, r0, #6
   2da08:	b	2dcfc <__flatcc_fb_parse@@Base+0x37cc>
   2da0c:	ldr	r0, [pc, #4020]	; 2e9c8 <__flatcc_fb_parse@@Base+0x4498>
   2da10:	mov	r1, r5
   2da14:	mov	r2, #5
   2da18:	add	r0, pc, r0
   2da1c:	bl	148a4 <bcmp@plt>
   2da20:	cmp	r0, #0
   2da24:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2da28:	movw	r0, #64572	; 0xfc3c
   2da2c:	mov	r6, r5
   2da30:	mov	r1, r7
   2da34:	movt	r0, #65535	; 0xffff
   2da38:	sub	r4, r0, #22
   2da3c:	b	2dcfc <__flatcc_fb_parse@@Base+0x37cc>
   2da40:	ldr	r0, [pc, #3972]	; 2e9cc <__flatcc_fb_parse@@Base+0x449c>
   2da44:	mov	r1, r5
   2da48:	mov	r2, #15
   2da4c:	add	r0, pc, r0
   2da50:	bl	148a4 <bcmp@plt>
   2da54:	cmp	r0, #0
   2da58:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2da5c:	mov	r6, r5
   2da60:	mov	r1, r7
   2da64:	mvn	r4, #964	; 0x3c4
   2da68:	b	2dcfc <__flatcc_fb_parse@@Base+0x37cc>
   2da6c:	ldr	r0, [pc, #3932]	; 2e9d0 <__flatcc_fb_parse@@Base+0x44a0>
   2da70:	mov	r1, r5
   2da74:	mov	r2, #6
   2da78:	add	r0, pc, r0
   2da7c:	bl	148a4 <bcmp@plt>
   2da80:	cmp	r0, #0
   2da84:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2da88:	movw	r0, #64572	; 0xfc3c
   2da8c:	mov	r6, r5
   2da90:	mov	r1, r7
   2da94:	movt	r0, #65535	; 0xffff
   2da98:	sub	r4, r0, #10
   2da9c:	b	2dcfc <__flatcc_fb_parse@@Base+0x37cc>
   2daa0:	ldr	r0, [pc, #4080]	; 2ea98 <__flatcc_fb_parse@@Base+0x4568>
   2daa4:	mov	r1, r5
   2daa8:	mov	r2, #4
   2daac:	add	r0, pc, r0
   2dab0:	bl	148a4 <bcmp@plt>
   2dab4:	cmp	r0, #0
   2dab8:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2dabc:	movw	r0, #64572	; 0xfc3c
   2dac0:	mov	r6, r5
   2dac4:	mov	r1, r7
   2dac8:	movt	r0, #65535	; 0xffff
   2dacc:	sub	r4, r0, #35	; 0x23
   2dad0:	b	2dcfc <__flatcc_fb_parse@@Base+0x37cc>
   2dad4:	ldr	r0, [pc, #4032]	; 2ea9c <__flatcc_fb_parse@@Base+0x456c>
   2dad8:	mov	r1, r5
   2dadc:	mov	r2, #7
   2dae0:	add	r0, pc, r0
   2dae4:	bl	148a4 <bcmp@plt>
   2dae8:	cmp	r0, #0
   2daec:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2daf0:	movw	r0, #64572	; 0xfc3c
   2daf4:	mov	r6, r5
   2daf8:	mov	r1, r7
   2dafc:	movt	r0, #65535	; 0xffff
   2db00:	sub	r4, r0, #7
   2db04:	b	2dcfc <__flatcc_fb_parse@@Base+0x37cc>
   2db08:	ldr	r0, [pc, #3984]	; 2eaa0 <__flatcc_fb_parse@@Base+0x4570>
   2db0c:	mov	r1, r5
   2db10:	mov	r2, #6
   2db14:	add	r0, pc, r0
   2db18:	bl	148a4 <bcmp@plt>
   2db1c:	cmp	r0, #0
   2db20:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2db24:	movw	r0, #64572	; 0xfc3c
   2db28:	mov	r6, r5
   2db2c:	mov	r1, r7
   2db30:	movt	r0, #65535	; 0xffff
   2db34:	sub	r4, r0, #11
   2db38:	b	2dcfc <__flatcc_fb_parse@@Base+0x37cc>
   2db3c:	ldr	r0, [pc, #3936]	; 2eaa4 <__flatcc_fb_parse@@Base+0x4574>
   2db40:	mov	r1, r5
   2db44:	mov	r2, #6
   2db48:	add	r0, pc, r0
   2db4c:	bl	148a4 <bcmp@plt>
   2db50:	cmp	r0, #0
   2db54:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2db58:	mov	r6, r5
   2db5c:	mov	r1, r7
   2db60:	mvn	r4, #972	; 0x3cc
   2db64:	b	2dcfc <__flatcc_fb_parse@@Base+0x37cc>
   2db68:	ldr	r0, [pc, #4068]	; 2eb54 <__flatcc_fb_parse@@Base+0x4624>
   2db6c:	mov	r1, r5
   2db70:	mov	r2, #6
   2db74:	add	r0, pc, r0
   2db78:	bl	148a4 <bcmp@plt>
   2db7c:	cmp	r0, #0
   2db80:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2db84:	movw	r0, #64572	; 0xfc3c
   2db88:	mov	r6, r5
   2db8c:	mov	r1, r7
   2db90:	movt	r0, #65535	; 0xffff
   2db94:	sub	r4, r0, #8
   2db98:	b	2dcfc <__flatcc_fb_parse@@Base+0x37cc>
   2db9c:	ldr	r0, [pc, #4020]	; 2eb58 <__flatcc_fb_parse@@Base+0x4628>
   2dba0:	mov	r1, r5
   2dba4:	mov	r2, #6
   2dba8:	add	r0, pc, r0
   2dbac:	bl	148a4 <bcmp@plt>
   2dbb0:	cmp	r0, #0
   2dbb4:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2dbb8:	movw	r0, #64572	; 0xfc3c
   2dbbc:	mov	r6, r5
   2dbc0:	mov	r1, r7
   2dbc4:	movt	r0, #65535	; 0xffff
   2dbc8:	sub	r4, r0, #15
   2dbcc:	b	2dcfc <__flatcc_fb_parse@@Base+0x37cc>
   2dbd0:	ldr	r0, [pc, #3972]	; 2eb5c <__flatcc_fb_parse@@Base+0x462c>
   2dbd4:	mov	r1, r5
   2dbd8:	mov	r2, #7
   2dbdc:	add	r0, pc, r0
   2dbe0:	bl	148a4 <bcmp@plt>
   2dbe4:	cmp	r0, #0
   2dbe8:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2dbec:	movw	r0, #64572	; 0xfc3c
   2dbf0:	mov	r6, r5
   2dbf4:	mov	r1, r7
   2dbf8:	movt	r0, #65535	; 0xffff
   2dbfc:	sub	r4, r0, #31
   2dc00:	b	2dcfc <__flatcc_fb_parse@@Base+0x37cc>
   2dc04:	ldr	r0, [pc, #4072]	; 2ebf4 <__flatcc_fb_parse@@Base+0x46c4>
   2dc08:	mov	r1, r5
   2dc0c:	mov	r2, #5
   2dc10:	add	r0, pc, r0
   2dc14:	bl	148a4 <bcmp@plt>
   2dc18:	cmp	r0, #0
   2dc1c:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2dc20:	mov	r6, r5
   2dc24:	mov	r1, r7
   2dc28:	mvn	r4, #976	; 0x3d0
   2dc2c:	b	2dcfc <__flatcc_fb_parse@@Base+0x37cc>
   2dc30:	ldr	r0, [pc, #4032]	; 2ebf8 <__flatcc_fb_parse@@Base+0x46c8>
   2dc34:	mov	r1, r5
   2dc38:	mov	r2, #5
   2dc3c:	add	r0, pc, r0
   2dc40:	bl	148a4 <bcmp@plt>
   2dc44:	cmp	r0, #0
   2dc48:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2dc4c:	movw	r0, #64572	; 0xfc3c
   2dc50:	mov	r6, r5
   2dc54:	mov	r1, r7
   2dc58:	movt	r0, #65535	; 0xffff
   2dc5c:	sub	r4, r0, #19
   2dc60:	b	2dcfc <__flatcc_fb_parse@@Base+0x37cc>
   2dc64:	ldr	r0, [pc, #3984]	; 2ebfc <__flatcc_fb_parse@@Base+0x46cc>
   2dc68:	mov	r1, r5
   2dc6c:	mov	r2, #4
   2dc70:	add	r0, pc, r0
   2dc74:	bl	148a4 <bcmp@plt>
   2dc78:	cmp	r0, #0
   2dc7c:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2dc80:	movw	r0, #64572	; 0xfc3c
   2dc84:	mov	r6, r5
   2dc88:	mov	r1, r7
   2dc8c:	movt	r0, #65535	; 0xffff
   2dc90:	sub	r4, r0, #23
   2dc94:	b	2dcfc <__flatcc_fb_parse@@Base+0x37cc>
   2dc98:	ldrdeq	sl, [r2], -lr
   2dc9c:	ldr	r0, [pc, #3932]	; 2ec00 <__flatcc_fb_parse@@Base+0x46d0>
   2dca0:	mov	r1, r5
   2dca4:	mov	r2, #5
   2dca8:	add	r0, pc, r0
   2dcac:	bl	148a4 <bcmp@plt>
   2dcb0:	cmp	r0, #0
   2dcb4:	bne	2dcf0 <__flatcc_fb_parse@@Base+0x37c0>
   2dcb8:	movw	r0, #64572	; 0xfc3c
   2dcbc:	mov	r6, r5
   2dcc0:	mov	r1, r7
   2dcc4:	movt	r0, #65535	; 0xffff
   2dcc8:	sub	r4, r0, #27
   2dccc:	b	2dcfc <__flatcc_fb_parse@@Base+0x37cc>
   2dcd0:	andeq	sl, r2, lr, lsr #9
   2dcd4:	ldr	r0, [pc, #4052]	; 2ecb0 <__flatcc_fb_parse@@Base+0x4780>
   2dcd8:	mov	r1, r5
   2dcdc:	mov	r2, #6
   2dce0:	add	r0, pc, r0
   2dce4:	bl	148a4 <bcmp@plt>
   2dce8:	cmp	r0, #0
   2dcec:	beq	2ea80 <__flatcc_fb_parse@@Base+0x4550>
   2dcf0:	mov	r6, r5
   2dcf4:	mov	r1, r7
   2dcf8:	mov	r4, #9
   2dcfc:	ldr	ip, [sp, #28]
   2dd00:	ldr	r0, [r8]
   2dd04:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2dd08:	mov	r5, r1
   2dd0c:	ldr	r2, [ip]
   2dd10:	add	r7, r2, r2, lsl #2
   2dd14:	add	r3, r0, r7, lsl #2
   2dd18:	str	r3, [lr]
   2dd1c:	ldr	r1, [r1]
   2dd20:	cmp	r1, r3
   2dd24:	bne	2ccf4 <__flatcc_fb_parse@@Base+0x27c4>
   2dd28:	cmp	r2, #0
   2dd2c:	lsl	r1, r2, #1
   2dd30:	mov	r9, r8
   2dd34:	mov	r8, ip
   2dd38:	movweq	r1, #1024	; 0x400
   2dd3c:	str	r1, [ip]
   2dd40:	add	r1, r1, r1, lsl #2
   2dd44:	lsl	r1, r1, #2
   2dd48:	bl	14844 <realloc@plt>
   2dd4c:	cmp	r0, #0
   2dd50:	str	r0, [r9]
   2dd54:	bne	2ccc8 <__flatcc_fb_parse@@Base+0x2798>
   2dd58:	b	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2dd5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2dd60:	add	r4, r5, #1
   2dd64:	cmp	r4, r0
   2dd68:	beq	2eaa8 <__flatcc_fb_parse@@Base+0x4578>
   2dd6c:	ldrb	r0, [r4]
   2dd70:	cmp	r0, #61	; 0x3d
   2dd74:	beq	2fa8c <__flatcc_fb_parse@@Base+0x555c>
   2dd78:	cmp	r0, #60	; 0x3c
   2dd7c:	beq	2fb14 <__flatcc_fb_parse@@Base+0x55e4>
   2dd80:	cmp	r0, #45	; 0x2d
   2dd84:	bne	2eaa8 <__flatcc_fb_parse@@Base+0x4578>
   2dd88:	ldr	r2, [ip]
   2dd8c:	ldr	r0, [r8]
   2dd90:	add	r4, r2, r2, lsl #2
   2dd94:	add	r3, r0, r4, lsl #2
   2dd98:	str	r3, [lr]
   2dd9c:	ldr	r1, [r7]
   2dda0:	cmp	r1, r3
   2dda4:	bne	2ddf4 <__flatcc_fb_parse@@Base+0x38c4>
   2dda8:	cmp	r2, #0
   2ddac:	lsl	r1, r2, #1
   2ddb0:	mov	r6, ip
   2ddb4:	movweq	r1, #1024	; 0x400
   2ddb8:	str	r1, [ip]
   2ddbc:	add	r1, r1, r1, lsl #2
   2ddc0:	lsl	r1, r1, #2
   2ddc4:	bl	14844 <realloc@plt>
   2ddc8:	cmp	r0, #0
   2ddcc:	str	r0, [r8]
   2ddd0:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2ddd4:	ldr	r1, [r6]
   2ddd8:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2dddc:	mov	ip, r6
   2dde0:	add	r1, r1, r1, lsl #2
   2dde4:	add	r1, r0, r1, lsl #2
   2dde8:	str	r1, [lr]
   2ddec:	add	r1, r0, r4, lsl #2
   2ddf0:	str	r1, [r7]
   2ddf4:	mov	r2, #2
   2ddf8:	add	r0, r5, #2
   2ddfc:	str	r2, [r1, #4]
   2de00:	str	r5, [r1]
   2de04:	movw	r2, #11580	; 0x2d3c
   2de08:	b	2fd80 <__flatcc_fb_parse@@Base+0x5850>
   2de0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2de10:	add	r4, r5, #1
   2de14:	cmp	r4, r0
   2de18:	beq	2e7b0 <__flatcc_fb_parse@@Base+0x4280>
   2de1c:	ldrb	r0, [r4]
   2de20:	cmp	r0, #43	; 0x2b
   2de24:	beq	2f42c <__flatcc_fb_parse@@Base+0x4efc>
   2de28:	cmp	r0, #61	; 0x3d
   2de2c:	bne	2e7b0 <__flatcc_fb_parse@@Base+0x4280>
   2de30:	ldr	r2, [ip]
   2de34:	ldr	r0, [r8]
   2de38:	add	r4, r2, r2, lsl #2
   2de3c:	add	r3, r0, r4, lsl #2
   2de40:	str	r3, [lr]
   2de44:	ldr	r1, [r7]
   2de48:	cmp	r1, r3
   2de4c:	bne	2de9c <__flatcc_fb_parse@@Base+0x396c>
   2de50:	cmp	r2, #0
   2de54:	lsl	r1, r2, #1
   2de58:	mov	r6, ip
   2de5c:	movweq	r1, #1024	; 0x400
   2de60:	str	r1, [ip]
   2de64:	add	r1, r1, r1, lsl #2
   2de68:	lsl	r1, r1, #2
   2de6c:	bl	14844 <realloc@plt>
   2de70:	cmp	r0, #0
   2de74:	str	r0, [r8]
   2de78:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2de7c:	ldr	r1, [r6]
   2de80:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2de84:	mov	ip, r6
   2de88:	add	r1, r1, r1, lsl #2
   2de8c:	add	r1, r0, r1, lsl #2
   2de90:	str	r1, [lr]
   2de94:	add	r1, r0, r4, lsl #2
   2de98:	str	r1, [r7]
   2de9c:	mov	r2, #2
   2dea0:	add	r0, r5, #2
   2dea4:	str	r2, [r1, #4]
   2dea8:	str	r5, [r1]
   2deac:	movw	r2, #15659	; 0x3d2b
   2deb0:	b	2fd80 <__flatcc_fb_parse@@Base+0x5850>
   2deb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2deb8:	add	r4, r5, #1
   2debc:	cmp	r4, r0
   2dec0:	beq	2eb60 <__flatcc_fb_parse@@Base+0x4630>
   2dec4:	ldrb	r0, [r4]
   2dec8:	cmp	r0, #42	; 0x2a
   2decc:	beq	2fbc0 <__flatcc_fb_parse@@Base+0x5690>
   2ded0:	cmp	r0, #61	; 0x3d
   2ded4:	beq	2fbf4 <__flatcc_fb_parse@@Base+0x56c4>
   2ded8:	cmp	r0, #47	; 0x2f
   2dedc:	bne	2eb60 <__flatcc_fb_parse@@Base+0x4630>
   2dee0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2dee4:	add	r0, r5, #2
   2dee8:	cmp	r0, r1
   2deec:	beq	30424 <__flatcc_fb_parse@@Base+0x5ef4>
   2def0:	ldrb	r1, [r0]
   2def4:	sub	r2, r1, #33	; 0x21
   2def8:	sub	r1, r1, #47	; 0x2f
   2defc:	clz	r2, r2
   2df00:	clz	r1, r1
   2df04:	lsr	r2, r2, #5
   2df08:	lsr	r1, r1, #5
   2df0c:	orr	r1, r1, r2
   2df10:	b	30428 <__flatcc_fb_parse@@Base+0x5ef8>
   2df14:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2df18:	add	r0, r5, #1
   2df1c:	mov	r4, r5
   2df20:	cmp	r0, r1
   2df24:	beq	2d2a8 <__flatcc_fb_parse@@Base+0x2d78>
   2df28:	ldrb	r0, [r0]
   2df2c:	mov	r4, r5
   2df30:	orr	r0, r0, #32
   2df34:	cmp	r0, #120	; 0x78
   2df38:	bne	2d2a8 <__flatcc_fb_parse@@Base+0x2d78>
   2df3c:	ldr	r4, [fp, #-32]	; 0xffffffe0
   2df40:	add	r0, r5, #2
   2df44:	cmp	r0, r4
   2df48:	bne	2df60 <__flatcc_fb_parse@@Base+0x3a30>
   2df4c:	b	2f94c <__flatcc_fb_parse@@Base+0x541c>
   2df50:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2df54:	add	r0, r0, #1
   2df58:	cmp	r1, r0
   2df5c:	beq	2f948 <__flatcc_fb_parse@@Base+0x5418>
   2df60:	ldrb	r1, [r0]
   2df64:	sub	r2, r1, #48	; 0x30
   2df68:	uxtb	r2, r2
   2df6c:	cmp	r2, #10
   2df70:	bcc	2df50 <__flatcc_fb_parse@@Base+0x3a20>
   2df74:	orr	r1, r1, #32
   2df78:	sub	r1, r1, #97	; 0x61
   2df7c:	uxtb	r1, r1
   2df80:	cmp	r1, #5
   2df84:	bls	2df50 <__flatcc_fb_parse@@Base+0x3a20>
   2df88:	mov	r4, r0
   2df8c:	b	2f94c <__flatcc_fb_parse@@Base+0x541c>
   2df90:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2df94:	add	r4, r5, #1
   2df98:	cmp	r4, r0
   2df9c:	beq	2e85c <__flatcc_fb_parse@@Base+0x432c>
   2dfa0:	ldrb	r0, [r4]
   2dfa4:	cmp	r0, #58	; 0x3a
   2dfa8:	beq	2f390 <__flatcc_fb_parse@@Base+0x4e60>
   2dfac:	cmp	r0, #61	; 0x3d
   2dfb0:	bne	2e85c <__flatcc_fb_parse@@Base+0x432c>
   2dfb4:	ldr	r2, [ip]
   2dfb8:	ldr	r0, [r8]
   2dfbc:	add	r4, r2, r2, lsl #2
   2dfc0:	add	r3, r0, r4, lsl #2
   2dfc4:	str	r3, [lr]
   2dfc8:	ldr	r1, [r7]
   2dfcc:	cmp	r1, r3
   2dfd0:	bne	2e020 <__flatcc_fb_parse@@Base+0x3af0>
   2dfd4:	cmp	r2, #0
   2dfd8:	lsl	r1, r2, #1
   2dfdc:	mov	r6, ip
   2dfe0:	movweq	r1, #1024	; 0x400
   2dfe4:	str	r1, [ip]
   2dfe8:	add	r1, r1, r1, lsl #2
   2dfec:	lsl	r1, r1, #2
   2dff0:	bl	14844 <realloc@plt>
   2dff4:	cmp	r0, #0
   2dff8:	str	r0, [r8]
   2dffc:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2e000:	ldr	r1, [r6]
   2e004:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2e008:	mov	ip, r6
   2e00c:	add	r1, r1, r1, lsl #2
   2e010:	add	r1, r0, r1, lsl #2
   2e014:	str	r1, [lr]
   2e018:	add	r1, r0, r4, lsl #2
   2e01c:	str	r1, [r7]
   2e020:	mov	r2, #2
   2e024:	add	r0, r5, #2
   2e028:	str	r2, [r1, #4]
   2e02c:	str	r5, [r1]
   2e030:	movw	r2, #15674	; 0x3d3a
   2e034:	b	2fd80 <__flatcc_fb_parse@@Base+0x5850>
   2e038:	andeq	r9, r1, lr, ror #2
   2e03c:	andeq	r9, r2, pc, lsl #14
   2e040:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2e044:	add	r4, r5, #1
   2e048:	cmp	r4, r0
   2e04c:	beq	2e918 <__flatcc_fb_parse@@Base+0x43e8>
   2e050:	ldrb	r0, [r4]
   2e054:	cmp	r0, #62	; 0x3e
   2e058:	beq	2f4b0 <__flatcc_fb_parse@@Base+0x4f80>
   2e05c:	cmp	r0, #61	; 0x3d
   2e060:	bne	2e918 <__flatcc_fb_parse@@Base+0x43e8>
   2e064:	ldr	r2, [ip]
   2e068:	ldr	r0, [r8]
   2e06c:	add	r4, r2, r2, lsl #2
   2e070:	add	r3, r0, r4, lsl #2
   2e074:	str	r3, [lr]
   2e078:	ldr	r1, [r7]
   2e07c:	cmp	r1, r3
   2e080:	bne	2e0d0 <__flatcc_fb_parse@@Base+0x3ba0>
   2e084:	cmp	r2, #0
   2e088:	lsl	r1, r2, #1
   2e08c:	mov	r6, ip
   2e090:	movweq	r1, #1024	; 0x400
   2e094:	str	r1, [ip]
   2e098:	add	r1, r1, r1, lsl #2
   2e09c:	lsl	r1, r1, #2
   2e0a0:	bl	14844 <realloc@plt>
   2e0a4:	cmp	r0, #0
   2e0a8:	str	r0, [r8]
   2e0ac:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2e0b0:	ldr	r1, [r6]
   2e0b4:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2e0b8:	mov	ip, r6
   2e0bc:	add	r1, r1, r1, lsl #2
   2e0c0:	add	r1, r0, r1, lsl #2
   2e0c4:	str	r1, [lr]
   2e0c8:	add	r1, r0, r4, lsl #2
   2e0cc:	str	r1, [r7]
   2e0d0:	mov	r2, #2
   2e0d4:	add	r0, r5, #2
   2e0d8:	str	r2, [r1, #4]
   2e0dc:	str	r5, [r1]
   2e0e0:	movw	r2, #15678	; 0x3d3e
   2e0e4:	b	2fd80 <__flatcc_fb_parse@@Base+0x5850>
   2e0e8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2e0ec:	add	r0, r5, #1
   2e0f0:	cmp	r0, r1
   2e0f4:	beq	2e200 <__flatcc_fb_parse@@Base+0x3cd0>
   2e0f8:	ldrb	r1, [r5, #1]
   2e0fc:	cmp	r1, #10
   2e100:	b	2e1f8 <__flatcc_fb_parse@@Base+0x3cc8>
   2e104:	ldr	r1, [ip]
   2e108:	ldr	r0, [r8]
   2e10c:	add	r4, r1, r1, lsl #2
   2e110:	add	r3, r0, r4, lsl #2
   2e114:	str	r3, [lr]
   2e118:	ldr	r2, [r7]
   2e11c:	cmp	r2, r3
   2e120:	beq	2ecb4 <__flatcc_fb_parse@@Base+0x4784>
   2e124:	str	r1, [sp, #36]	; 0x24
   2e128:	b	2ed00 <__flatcc_fb_parse@@Base+0x47d0>
   2e12c:	andeq	r8, r2, r9, ror #12
   2e130:	andeq	r9, r2, fp, ror #11
   2e134:	ldr	r4, [fp, #-32]	; 0xffffffe0
   2e138:	add	r0, r5, #1
   2e13c:	cmp	r0, r4
   2e140:	beq	2f600 <__flatcc_fb_parse@@Base+0x50d0>
   2e144:	ldrb	r1, [r0]
   2e148:	cmp	r1, #38	; 0x26
   2e14c:	beq	2f558 <__flatcc_fb_parse@@Base+0x5028>
   2e150:	cmp	r1, #61	; 0x3d
   2e154:	mov	r4, r0
   2e158:	bne	2f600 <__flatcc_fb_parse@@Base+0x50d0>
   2e15c:	ldr	r2, [ip]
   2e160:	ldr	r0, [r8]
   2e164:	add	r4, r2, r2, lsl #2
   2e168:	add	r3, r0, r4, lsl #2
   2e16c:	str	r3, [lr]
   2e170:	ldr	r1, [r7]
   2e174:	cmp	r1, r3
   2e178:	bne	2e1c8 <__flatcc_fb_parse@@Base+0x3c98>
   2e17c:	cmp	r2, #0
   2e180:	lsl	r1, r2, #1
   2e184:	mov	r6, ip
   2e188:	movweq	r1, #1024	; 0x400
   2e18c:	str	r1, [ip]
   2e190:	add	r1, r1, r1, lsl #2
   2e194:	lsl	r1, r1, #2
   2e198:	bl	14844 <realloc@plt>
   2e19c:	cmp	r0, #0
   2e1a0:	str	r0, [r8]
   2e1a4:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2e1a8:	ldr	r1, [r6]
   2e1ac:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2e1b0:	mov	ip, r6
   2e1b4:	add	r1, r1, r1, lsl #2
   2e1b8:	add	r1, r0, r1, lsl #2
   2e1bc:	str	r1, [lr]
   2e1c0:	add	r1, r0, r4, lsl #2
   2e1c4:	str	r1, [r7]
   2e1c8:	mov	r2, #2
   2e1cc:	add	r0, r5, #2
   2e1d0:	str	r2, [r1, #4]
   2e1d4:	str	r5, [r1]
   2e1d8:	movw	r2, #15654	; 0x3d26
   2e1dc:	b	2fd80 <__flatcc_fb_parse@@Base+0x5850>
   2e1e0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2e1e4:	add	r0, r5, #1
   2e1e8:	cmp	r0, r1
   2e1ec:	beq	2e200 <__flatcc_fb_parse@@Base+0x3cd0>
   2e1f0:	ldrb	r1, [r5, #1]
   2e1f4:	cmp	r1, #13
   2e1f8:	addeq	r0, r5, #2
   2e1fc:	mov	r1, r0
   2e200:	ldr	r2, [sp, #40]	; 0x28
   2e204:	mov	r5, r1
   2e208:	ldr	r0, [r2]
   2e20c:	add	r0, r0, #1
   2e210:	str	r0, [r2]
   2e214:	str	r1, [sl]
   2e218:	b	2cd3c <__flatcc_fb_parse@@Base+0x280c>
   2e21c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2e220:	add	r4, r5, #1
   2e224:	cmp	r4, r0
   2e228:	beq	302a0 <__flatcc_fb_parse@@Base+0x5d70>
   2e22c:	ldrb	r0, [r4]
   2e230:	sub	r1, r0, #48	; 0x30
   2e234:	cmp	r1, #10
   2e238:	bcs	301ec <__flatcc_fb_parse@@Base+0x5cbc>
   2e23c:	ldr	r2, [sp, #12]
   2e240:	mov	r9, r5
   2e244:	cmp	r2, r4
   2e248:	bne	2d2d4 <__flatcc_fb_parse@@Base+0x2da4>
   2e24c:	b	2e654 <__flatcc_fb_parse@@Base+0x4124>
   2e250:	andeq	r9, r2, r6, lsl pc
   2e254:	ldr	r4, [fp, #-32]	; 0xffffffe0
   2e258:	add	r0, r5, #1
   2e25c:	cmp	r0, r4
   2e260:	beq	2f750 <__flatcc_fb_parse@@Base+0x5220>
   2e264:	ldrb	r1, [r0]
   2e268:	cmp	r1, #124	; 0x7c
   2e26c:	beq	2f6a8 <__flatcc_fb_parse@@Base+0x5178>
   2e270:	cmp	r1, #61	; 0x3d
   2e274:	mov	r4, r0
   2e278:	bne	2f750 <__flatcc_fb_parse@@Base+0x5220>
   2e27c:	ldr	r2, [ip]
   2e280:	ldr	r0, [r8]
   2e284:	add	r4, r2, r2, lsl #2
   2e288:	add	r3, r0, r4, lsl #2
   2e28c:	str	r3, [lr]
   2e290:	ldr	r1, [r7]
   2e294:	cmp	r1, r3
   2e298:	bne	2e2e8 <__flatcc_fb_parse@@Base+0x3db8>
   2e29c:	cmp	r2, #0
   2e2a0:	lsl	r1, r2, #1
   2e2a4:	mov	r6, ip
   2e2a8:	movweq	r1, #1024	; 0x400
   2e2ac:	str	r1, [ip]
   2e2b0:	add	r1, r1, r1, lsl #2
   2e2b4:	lsl	r1, r1, #2
   2e2b8:	bl	14844 <realloc@plt>
   2e2bc:	cmp	r0, #0
   2e2c0:	str	r0, [r8]
   2e2c4:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2e2c8:	ldr	r1, [r6]
   2e2cc:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2e2d0:	mov	ip, r6
   2e2d4:	add	r1, r1, r1, lsl #2
   2e2d8:	add	r1, r0, r1, lsl #2
   2e2dc:	str	r1, [lr]
   2e2e0:	add	r1, r0, r4, lsl #2
   2e2e4:	str	r1, [r7]
   2e2e8:	mov	r2, #2
   2e2ec:	add	r0, r5, #2
   2e2f0:	str	r2, [r1, #4]
   2e2f4:	str	r5, [r1]
   2e2f8:	movw	r2, #15740	; 0x3d7c
   2e2fc:	b	2fd80 <__flatcc_fb_parse@@Base+0x5850>
   2e300:	andeq	sl, r2, r7, lsr #7
   2e304:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2e308:	add	r4, r5, #1
   2e30c:	cmp	r4, r0
   2e310:	beq	2e9d4 <__flatcc_fb_parse@@Base+0x44a4>
   2e314:	ldrb	r0, [r4]
   2e318:	cmp	r0, #42	; 0x2a
   2e31c:	beq	2f7f8 <__flatcc_fb_parse@@Base+0x52c8>
   2e320:	cmp	r0, #61	; 0x3d
   2e324:	bne	2e9d4 <__flatcc_fb_parse@@Base+0x44a4>
   2e328:	ldr	r2, [ip]
   2e32c:	ldr	r0, [r8]
   2e330:	add	r6, r2, r2, lsl #2
   2e334:	add	r3, r0, r6, lsl #2
   2e338:	str	r3, [lr]
   2e33c:	ldr	r1, [r7]
   2e340:	cmp	r1, r3
   2e344:	bne	2e3c0 <__flatcc_fb_parse@@Base+0x3e90>
   2e348:	cmp	r2, #0
   2e34c:	lsl	r1, r2, #1
   2e350:	mov	r9, r8
   2e354:	mov	r8, sl
   2e358:	mov	sl, r5
   2e35c:	mov	r5, r7
   2e360:	mov	r7, ip
   2e364:	movweq	r1, #1024	; 0x400
   2e368:	str	r1, [ip]
   2e36c:	add	r1, r1, r1, lsl #2
   2e370:	lsl	r1, r1, #2
   2e374:	bl	14844 <realloc@plt>
   2e378:	cmp	r0, #0
   2e37c:	str	r0, [r9]
   2e380:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2e384:	ldr	r1, [r7]
   2e388:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2e38c:	mov	ip, r7
   2e390:	mov	r2, r9
   2e394:	mov	r7, r5
   2e398:	add	r1, r1, r1, lsl #2
   2e39c:	add	r1, r0, r1, lsl #2
   2e3a0:	str	r1, [lr]
   2e3a4:	add	r1, r0, r6, lsl #2
   2e3a8:	str	r1, [r5]
   2e3ac:	mov	r5, sl
   2e3b0:	mov	sl, r8
   2e3b4:	mov	r8, r9
   2e3b8:	ldr	r9, [pc, #4044]	; 2f38c <__flatcc_fb_parse@@Base+0x4e5c>
   2e3bc:	add	r9, pc, r9
   2e3c0:	mov	r0, #1
   2e3c4:	str	r0, [r1, #4]
   2e3c8:	str	r5, [r1]
   2e3cc:	movw	r0, #15658	; 0x3d2a
   2e3d0:	b	30348 <__flatcc_fb_parse@@Base+0x5e18>
   2e3d4:	ldrdeq	r9, [r1], -ip
   2e3d8:	strdeq	r8, [r1], -sp
   2e3dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2e3e0:	add	r4, r5, #1
   2e3e4:	cmp	r4, r0
   2e3e8:	beq	2ec04 <__flatcc_fb_parse@@Base+0x46d4>
   2e3ec:	ldrb	r0, [r4]
   2e3f0:	cmp	r0, #45	; 0x2d
   2e3f4:	beq	2fc7c <__flatcc_fb_parse@@Base+0x574c>
   2e3f8:	cmp	r0, #62	; 0x3e
   2e3fc:	beq	2fd00 <__flatcc_fb_parse@@Base+0x57d0>
   2e400:	cmp	r0, #61	; 0x3d
   2e404:	bne	2ec04 <__flatcc_fb_parse@@Base+0x46d4>
   2e408:	ldr	r2, [ip]
   2e40c:	ldr	r0, [r8]
   2e410:	add	r4, r2, r2, lsl #2
   2e414:	add	r3, r0, r4, lsl #2
   2e418:	str	r3, [lr]
   2e41c:	ldr	r1, [r7]
   2e420:	cmp	r1, r3
   2e424:	bne	2e474 <__flatcc_fb_parse@@Base+0x3f44>
   2e428:	cmp	r2, #0
   2e42c:	lsl	r1, r2, #1
   2e430:	mov	r6, ip
   2e434:	movweq	r1, #1024	; 0x400
   2e438:	str	r1, [ip]
   2e43c:	add	r1, r1, r1, lsl #2
   2e440:	lsl	r1, r1, #2
   2e444:	bl	14844 <realloc@plt>
   2e448:	cmp	r0, #0
   2e44c:	str	r0, [r8]
   2e450:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2e454:	ldr	r1, [r6]
   2e458:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2e45c:	mov	ip, r6
   2e460:	add	r1, r1, r1, lsl #2
   2e464:	add	r1, r0, r1, lsl #2
   2e468:	str	r1, [lr]
   2e46c:	add	r1, r0, r4, lsl #2
   2e470:	str	r1, [r7]
   2e474:	mov	r2, #2
   2e478:	add	r0, r5, #2
   2e47c:	str	r2, [r1, #4]
   2e480:	str	r5, [r1]
   2e484:	movw	r2, #15661	; 0x3d2d
   2e488:	b	2fd80 <__flatcc_fb_parse@@Base+0x5850>
   2e48c:	andeq	r9, r1, r7, lsl #4
   2e490:	ldr	r4, [fp, #-32]	; 0xffffffe0
   2e494:	add	r0, r5, #1
   2e498:	cmp	r0, r4
   2e49c:	beq	2ff2c <__flatcc_fb_parse@@Base+0x59fc>
   2e4a0:	ldrb	r1, [r0]
   2e4a4:	cmp	r1, #61	; 0x3d
   2e4a8:	beq	2f8a8 <__flatcc_fb_parse@@Base+0x5378>
   2e4ac:	cmp	r1, #62	; 0x3e
   2e4b0:	mov	r4, r0
   2e4b4:	bne	2ff2c <__flatcc_fb_parse@@Base+0x59fc>
   2e4b8:	ldr	r2, [ip]
   2e4bc:	ldr	r0, [r8]
   2e4c0:	add	r4, r2, r2, lsl #2
   2e4c4:	add	r3, r0, r4, lsl #2
   2e4c8:	str	r3, [lr]
   2e4cc:	ldr	r1, [r7]
   2e4d0:	cmp	r1, r3
   2e4d4:	bne	2e524 <__flatcc_fb_parse@@Base+0x3ff4>
   2e4d8:	cmp	r2, #0
   2e4dc:	lsl	r1, r2, #1
   2e4e0:	mov	r6, ip
   2e4e4:	movweq	r1, #1024	; 0x400
   2e4e8:	str	r1, [ip]
   2e4ec:	add	r1, r1, r1, lsl #2
   2e4f0:	lsl	r1, r1, #2
   2e4f4:	bl	14844 <realloc@plt>
   2e4f8:	cmp	r0, #0
   2e4fc:	str	r0, [r8]
   2e500:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2e504:	ldr	r1, [r6]
   2e508:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2e50c:	mov	ip, r6
   2e510:	add	r1, r1, r1, lsl #2
   2e514:	add	r1, r0, r1, lsl #2
   2e518:	str	r1, [lr]
   2e51c:	add	r1, r0, r4, lsl #2
   2e520:	str	r1, [r7]
   2e524:	mov	r2, #2
   2e528:	add	r0, r5, #2
   2e52c:	str	r2, [r1, #4]
   2e530:	str	r5, [r1]
   2e534:	movw	r2, #15933	; 0x3e3d
   2e538:	b	2fd80 <__flatcc_fb_parse@@Base+0x5850>
   2e53c:	andeq	r9, r2, r2, lsr #24
   2e540:	andeq	sl, r2, r1, lsl r9
   2e544:	add	r6, r5, #1
   2e548:	cmp	r4, #32
   2e54c:	bcc	2e558 <__flatcc_fb_parse@@Base+0x4028>
   2e550:	cmp	r4, #127	; 0x7f
   2e554:	bne	2e564 <__flatcc_fb_parse@@Base+0x4034>
   2e558:	cmp	r4, #9
   2e55c:	cmpne	r4, #32
   2e560:	bne	300a8 <__flatcc_fb_parse@@Base+0x5b78>
   2e564:	ldr	r2, [ip]
   2e568:	ldr	r0, [r8]
   2e56c:	add	r4, r2, r2, lsl #2
   2e570:	add	r3, r0, r4, lsl #2
   2e574:	str	r3, [lr]
   2e578:	ldr	r1, [r7]
   2e57c:	cmp	r1, r3
   2e580:	bne	2e5e8 <__flatcc_fb_parse@@Base+0x40b8>
   2e584:	cmp	r2, #0
   2e588:	lsl	r1, r2, #1
   2e58c:	mov	sl, r6
   2e590:	mov	r6, r5
   2e594:	mov	r5, r7
   2e598:	mov	r7, ip
   2e59c:	movweq	r1, #1024	; 0x400
   2e5a0:	str	r1, [ip]
   2e5a4:	add	r1, r1, r1, lsl #2
   2e5a8:	lsl	r1, r1, #2
   2e5ac:	bl	14844 <realloc@plt>
   2e5b0:	cmp	r0, #0
   2e5b4:	str	r0, [r8]
   2e5b8:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2e5bc:	ldr	r1, [r7]
   2e5c0:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2e5c4:	mov	ip, r7
   2e5c8:	mov	r7, r5
   2e5cc:	add	r1, r1, r1, lsl #2
   2e5d0:	add	r1, r0, r1, lsl #2
   2e5d4:	str	r1, [lr]
   2e5d8:	add	r1, r0, r4, lsl #2
   2e5dc:	str	r1, [r5]
   2e5e0:	mov	r5, r6
   2e5e4:	mov	r6, sl
   2e5e8:	mov	r0, #1
   2e5ec:	str	r0, [r1, #4]
   2e5f0:	str	r5, [r1]
   2e5f4:	mov	r0, #8
   2e5f8:	str	r0, [r1, #16]
   2e5fc:	ldr	r0, [sp, #40]	; 0x28
   2e600:	ldr	r0, [r0]
   2e604:	str	r0, [r1, #8]
   2e608:	ldr	sl, [sp, #32]
   2e60c:	ldr	r0, [sl]
   2e610:	sub	r0, r5, r0
   2e614:	mov	r5, r6
   2e618:	b	30364 <__flatcc_fb_parse@@Base+0x5e34>
   2e61c:	andeq	r9, r2, r5, lsr #3
   2e620:	mov	r0, r1
   2e624:	cmp	r2, r0
   2e628:	beq	2e654 <__flatcc_fb_parse@@Base+0x4124>
   2e62c:	add	r4, r0, #1
   2e630:	ldrb	r0, [r0, #1]
   2e634:	sub	r0, r0, #48	; 0x30
   2e638:	uxtb	r0, r0
   2e63c:	cmp	r0, #10
   2e640:	mov	r0, r4
   2e644:	bcc	2e624 <__flatcc_fb_parse@@Base+0x40f4>
   2e648:	b	2e658 <__flatcc_fb_parse@@Base+0x4128>
   2e64c:	andeq	r9, r2, r1, lsr r1
   2e650:	ldrdeq	r9, [r2], -r7
   2e654:	ldr	r4, [fp, #-32]	; 0xffffffe0
   2e658:	mov	sl, r5
   2e65c:	mov	r5, r8
   2e660:	mov	r8, r7
   2e664:	ldr	r2, [ip]
   2e668:	ldr	r0, [r5]
   2e66c:	cmp	r9, r4
   2e670:	add	r7, r2, r2, lsl #2
   2e674:	add	r3, r0, r7, lsl #2
   2e678:	str	r3, [lr]
   2e67c:	ldr	r1, [r8]
   2e680:	beq	2e6fc <__flatcc_fb_parse@@Base+0x41cc>
   2e684:	ldr	r9, [pc, #3784]	; 2f554 <__flatcc_fb_parse@@Base+0x5024>
   2e688:	cmp	r1, r3
   2e68c:	add	r9, pc, r9
   2e690:	bne	2e6e0 <__flatcc_fb_parse@@Base+0x41b0>
   2e694:	cmp	r2, #0
   2e698:	lsl	r1, r2, #1
   2e69c:	mov	r6, ip
   2e6a0:	movweq	r1, #1024	; 0x400
   2e6a4:	str	r1, [ip]
   2e6a8:	add	r1, r1, r1, lsl #2
   2e6ac:	lsl	r1, r1, #2
   2e6b0:	bl	14844 <realloc@plt>
   2e6b4:	cmp	r0, #0
   2e6b8:	str	r0, [r5]
   2e6bc:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2e6c0:	ldr	r1, [r6]
   2e6c4:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2e6c8:	mov	ip, r6
   2e6cc:	add	r1, r1, r1, lsl #2
   2e6d0:	add	r1, r0, r1, lsl #2
   2e6d4:	str	r1, [lr]
   2e6d8:	add	r1, r0, r7, lsl #2
   2e6dc:	str	r1, [r8]
   2e6e0:	mov	r0, #11
   2e6e4:	str	sl, [r1]
   2e6e8:	str	r0, [r1, #16]
   2e6ec:	sub	r0, r4, sl
   2e6f0:	b	2e768 <__flatcc_fb_parse@@Base+0x4238>
   2e6f4:	ldrdeq	sl, [r2], -r0
   2e6f8:			; <UNDEFINED> instruction: 0x000185b4
   2e6fc:	cmp	r1, r3
   2e700:	bne	2e750 <__flatcc_fb_parse@@Base+0x4220>
   2e704:	cmp	r2, #0
   2e708:	lsl	r1, r2, #1
   2e70c:	mov	r6, ip
   2e710:	movweq	r1, #1024	; 0x400
   2e714:	str	r1, [ip]
   2e718:	add	r1, r1, r1, lsl #2
   2e71c:	lsl	r1, r1, #2
   2e720:	bl	14844 <realloc@plt>
   2e724:	cmp	r0, #0
   2e728:	str	r0, [r5]
   2e72c:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2e730:	ldr	r1, [r6]
   2e734:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2e738:	mov	ip, r6
   2e73c:	add	r1, r1, r1, lsl #2
   2e740:	add	r1, r0, r1, lsl #2
   2e744:	str	r1, [lr]
   2e748:	add	r1, r0, r7, lsl #2
   2e74c:	str	r1, [r8]
   2e750:	mov	r0, #10
   2e754:	str	sl, [r1]
   2e758:	str	r0, [r1, #16]
   2e75c:	sub	r0, r9, sl
   2e760:	ldr	r9, [pc, #3900]	; 2f6a4 <__flatcc_fb_parse@@Base+0x5174>
   2e764:	add	r9, pc, r9
   2e768:	str	r0, [r1, #4]
   2e76c:	ldr	r0, [sp, #40]	; 0x28
   2e770:	ldr	r2, [sp, #32]
   2e774:	mov	r7, r8
   2e778:	ldr	r0, [r0]
   2e77c:	str	r0, [r1, #8]
   2e780:	ldr	r0, [r2]
   2e784:	sub	r0, sl, r0
   2e788:	mov	sl, r2
   2e78c:	add	r0, r0, #1
   2e790:	str	r0, [r1, #12]
   2e794:	add	r0, r1, #20
   2e798:	str	r0, [r8]
   2e79c:	mov	r8, r5
   2e7a0:	mov	r5, r4
   2e7a4:	b	2cd3c <__flatcc_fb_parse@@Base+0x280c>
   2e7a8:	andeq	r8, r1, sl, ror #29
   2e7ac:	andeq	r8, r1, r5, lsr #29
   2e7b0:	ldr	r2, [ip]
   2e7b4:	ldr	r0, [r8]
   2e7b8:	add	r6, r2, r2, lsl #2
   2e7bc:	add	r3, r0, r6, lsl #2
   2e7c0:	str	r3, [lr]
   2e7c4:	ldr	r1, [r7]
   2e7c8:	cmp	r1, r3
   2e7cc:	bne	2e848 <__flatcc_fb_parse@@Base+0x4318>
   2e7d0:	cmp	r2, #0
   2e7d4:	lsl	r1, r2, #1
   2e7d8:	mov	r9, r8
   2e7dc:	mov	r8, sl
   2e7e0:	mov	sl, r5
   2e7e4:	mov	r5, r7
   2e7e8:	mov	r7, ip
   2e7ec:	movweq	r1, #1024	; 0x400
   2e7f0:	str	r1, [ip]
   2e7f4:	add	r1, r1, r1, lsl #2
   2e7f8:	lsl	r1, r1, #2
   2e7fc:	bl	14844 <realloc@plt>
   2e800:	cmp	r0, #0
   2e804:	str	r0, [r9]
   2e808:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2e80c:	ldr	r1, [r7]
   2e810:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2e814:	mov	ip, r7
   2e818:	mov	r2, r9
   2e81c:	mov	r7, r5
   2e820:	add	r1, r1, r1, lsl #2
   2e824:	add	r1, r0, r1, lsl #2
   2e828:	str	r1, [lr]
   2e82c:	add	r1, r0, r6, lsl #2
   2e830:	str	r1, [r5]
   2e834:	mov	r5, sl
   2e838:	mov	sl, r8
   2e83c:	mov	r8, r9
   2e840:	ldr	r9, [pc, #4012]	; 2f7f4 <__flatcc_fb_parse@@Base+0x52c4>
   2e844:	add	r9, pc, r9
   2e848:	mov	r0, #1
   2e84c:	str	r0, [r1, #4]
   2e850:	str	r5, [r1]
   2e854:	mov	r0, #43	; 0x2b
   2e858:	b	30348 <__flatcc_fb_parse@@Base+0x5e18>
   2e85c:	ldr	r2, [ip]
   2e860:	ldr	r0, [r8]
   2e864:	add	r6, r2, r2, lsl #2
   2e868:	add	r3, r0, r6, lsl #2
   2e86c:	str	r3, [lr]
   2e870:	ldr	r1, [r7]
   2e874:	cmp	r1, r3
   2e878:	bne	2e8f4 <__flatcc_fb_parse@@Base+0x43c4>
   2e87c:	cmp	r2, #0
   2e880:	lsl	r1, r2, #1
   2e884:	mov	r9, r8
   2e888:	mov	r8, sl
   2e88c:	mov	sl, r5
   2e890:	mov	r5, r7
   2e894:	mov	r7, ip
   2e898:	movweq	r1, #1024	; 0x400
   2e89c:	str	r1, [ip]
   2e8a0:	add	r1, r1, r1, lsl #2
   2e8a4:	lsl	r1, r1, #2
   2e8a8:	bl	14844 <realloc@plt>
   2e8ac:	cmp	r0, #0
   2e8b0:	str	r0, [r9]
   2e8b4:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2e8b8:	ldr	r1, [r7]
   2e8bc:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2e8c0:	mov	ip, r7
   2e8c4:	mov	r2, r9
   2e8c8:	mov	r7, r5
   2e8cc:	add	r1, r1, r1, lsl #2
   2e8d0:	add	r1, r0, r1, lsl #2
   2e8d4:	str	r1, [lr]
   2e8d8:	add	r1, r0, r6, lsl #2
   2e8dc:	str	r1, [r5]
   2e8e0:	mov	r5, sl
   2e8e4:	mov	sl, r8
   2e8e8:	mov	r8, r9
   2e8ec:	ldr	r9, [pc, #4016]	; 2f8a4 <__flatcc_fb_parse@@Base+0x5374>
   2e8f0:	add	r9, pc, r9
   2e8f4:	mov	r0, #1
   2e8f8:	str	r0, [r1, #4]
   2e8fc:	str	r5, [r1]
   2e900:	mov	r0, #58	; 0x3a
   2e904:	b	30348 <__flatcc_fb_parse@@Base+0x5e18>
   2e908:	muleq	r2, r6, r8
   2e90c:	muleq	r2, sp, lr
   2e910:	andeq	r8, r1, fp, lsr sp
   2e914:	andeq	r8, r2, r9, asr #28
   2e918:	ldr	r2, [ip]
   2e91c:	ldr	r0, [r8]
   2e920:	add	r6, r2, r2, lsl #2
   2e924:	add	r3, r0, r6, lsl #2
   2e928:	str	r3, [lr]
   2e92c:	ldr	r1, [r7]
   2e930:	cmp	r1, r3
   2e934:	bne	2e9b0 <__flatcc_fb_parse@@Base+0x4480>
   2e938:	cmp	r2, #0
   2e93c:	lsl	r1, r2, #1
   2e940:	mov	r9, r8
   2e944:	mov	r8, sl
   2e948:	mov	sl, r5
   2e94c:	mov	r5, r7
   2e950:	mov	r7, ip
   2e954:	movweq	r1, #1024	; 0x400
   2e958:	str	r1, [ip]
   2e95c:	add	r1, r1, r1, lsl #2
   2e960:	lsl	r1, r1, #2
   2e964:	bl	14844 <realloc@plt>
   2e968:	cmp	r0, #0
   2e96c:	str	r0, [r9]
   2e970:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2e974:	ldr	r1, [r7]
   2e978:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2e97c:	mov	ip, r7
   2e980:	mov	r2, r9
   2e984:	mov	r7, r5
   2e988:	add	r1, r1, r1, lsl #2
   2e98c:	add	r1, r0, r1, lsl #2
   2e990:	str	r1, [lr]
   2e994:	add	r1, r0, r6, lsl #2
   2e998:	str	r1, [r5]
   2e99c:	mov	r5, sl
   2e9a0:	mov	sl, r8
   2e9a4:	mov	r8, r9
   2e9a8:	ldr	r9, [pc, #3988]	; 2f944 <__flatcc_fb_parse@@Base+0x5414>
   2e9ac:	add	r9, pc, r9
   2e9b0:	mov	r0, #1
   2e9b4:	str	r0, [r1, #4]
   2e9b8:	str	r5, [r1]
   2e9bc:	mov	r0, #62	; 0x3e
   2e9c0:	b	30348 <__flatcc_fb_parse@@Base+0x5e18>
   2e9c4:	andeq	r8, r2, fp, ror #27
   2e9c8:	andeq	r8, r2, ip, lsl #27
   2e9cc:			; <UNDEFINED> instruction: 0x00028dbc
   2e9d0:	andeq	r9, r2, fp, ror #29
   2e9d4:	ldr	r2, [ip]
   2e9d8:	ldr	r0, [r8]
   2e9dc:	add	r6, r2, r2, lsl #2
   2e9e0:	add	r3, r0, r6, lsl #2
   2e9e4:	str	r3, [lr]
   2e9e8:	ldr	r1, [r7]
   2e9ec:	cmp	r1, r3
   2e9f0:	bne	2ea6c <__flatcc_fb_parse@@Base+0x453c>
   2e9f4:	cmp	r2, #0
   2e9f8:	lsl	r1, r2, #1
   2e9fc:	mov	r9, r8
   2ea00:	mov	r8, sl
   2ea04:	mov	sl, r5
   2ea08:	mov	r5, r7
   2ea0c:	mov	r7, ip
   2ea10:	movweq	r1, #1024	; 0x400
   2ea14:	str	r1, [ip]
   2ea18:	add	r1, r1, r1, lsl #2
   2ea1c:	lsl	r1, r1, #2
   2ea20:	bl	14844 <realloc@plt>
   2ea24:	cmp	r0, #0
   2ea28:	str	r0, [r9]
   2ea2c:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2ea30:	ldr	r1, [r7]
   2ea34:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2ea38:	mov	ip, r7
   2ea3c:	mov	r2, r9
   2ea40:	mov	r7, r5
   2ea44:	add	r1, r1, r1, lsl #2
   2ea48:	add	r1, r0, r1, lsl #2
   2ea4c:	str	r1, [lr]
   2ea50:	add	r1, r0, r6, lsl #2
   2ea54:	str	r1, [r5]
   2ea58:	mov	r5, sl
   2ea5c:	mov	sl, r8
   2ea60:	mov	r8, r9
   2ea64:	ldr	r9, [pc, #3972]	; 2f9f0 <__flatcc_fb_parse@@Base+0x54c0>
   2ea68:	add	r9, pc, r9
   2ea6c:	mov	r0, #1
   2ea70:	str	r0, [r1, #4]
   2ea74:	str	r5, [r1]
   2ea78:	mov	r0, #42	; 0x2a
   2ea7c:	b	30348 <__flatcc_fb_parse@@Base+0x5e18>
   2ea80:	movw	r0, #64572	; 0xfc3c
   2ea84:	mov	r6, r5
   2ea88:	mov	r1, r7
   2ea8c:	movt	r0, #65535	; 0xffff
   2ea90:	sub	r4, r0, #16
   2ea94:	b	2dcfc <__flatcc_fb_parse@@Base+0x37cc>
   2ea98:	andeq	r9, r2, r7, ror #20
   2ea9c:	andeq	r8, r2, r7, ror #25
   2eaa0:	andeq	r8, r1, sl, lsl r2
   2eaa4:	andeq	r9, r2, r4, lsl #22
   2eaa8:	ldr	r2, [ip]
   2eaac:	ldr	r0, [r8]
   2eab0:	add	r6, r2, r2, lsl #2
   2eab4:	add	r3, r0, r6, lsl #2
   2eab8:	str	r3, [lr]
   2eabc:	ldr	r1, [r7]
   2eac0:	cmp	r1, r3
   2eac4:	bne	2eb40 <__flatcc_fb_parse@@Base+0x4610>
   2eac8:	cmp	r2, #0
   2eacc:	lsl	r1, r2, #1
   2ead0:	mov	r9, r8
   2ead4:	mov	r8, sl
   2ead8:	mov	sl, r5
   2eadc:	mov	r5, r7
   2eae0:	mov	r7, ip
   2eae4:	movweq	r1, #1024	; 0x400
   2eae8:	str	r1, [ip]
   2eaec:	add	r1, r1, r1, lsl #2
   2eaf0:	lsl	r1, r1, #2
   2eaf4:	bl	14844 <realloc@plt>
   2eaf8:	cmp	r0, #0
   2eafc:	str	r0, [r9]
   2eb00:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2eb04:	ldr	r1, [r7]
   2eb08:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2eb0c:	mov	ip, r7
   2eb10:	mov	r2, r9
   2eb14:	mov	r7, r5
   2eb18:	add	r1, r1, r1, lsl #2
   2eb1c:	add	r1, r0, r1, lsl #2
   2eb20:	str	r1, [lr]
   2eb24:	add	r1, r0, r6, lsl #2
   2eb28:	str	r1, [r5]
   2eb2c:	mov	r5, sl
   2eb30:	mov	sl, r8
   2eb34:	mov	r8, r9
   2eb38:	ldr	r9, [pc, #4048]	; 2fb10 <__flatcc_fb_parse@@Base+0x55e0>
   2eb3c:	add	r9, pc, r9
   2eb40:	mov	r0, #1
   2eb44:	str	r0, [r1, #4]
   2eb48:	str	r5, [r1]
   2eb4c:	mov	r0, #60	; 0x3c
   2eb50:	b	30348 <__flatcc_fb_parse@@Base+0x5e18>
   2eb54:	andeq	r8, r2, ip, lsr ip
   2eb58:	andeq	r8, r1, r9, lsl #22
   2eb5c:	andeq	r8, r2, r3, ror #23
   2eb60:	ldr	r2, [ip]
   2eb64:	ldr	r0, [r8]
   2eb68:	add	r6, r2, r2, lsl #2
   2eb6c:	add	r3, r0, r6, lsl #2
   2eb70:	str	r3, [lr]
   2eb74:	ldr	r1, [r7]
   2eb78:	cmp	r1, r3
   2eb7c:	bne	2ebe0 <__flatcc_fb_parse@@Base+0x46b0>
   2eb80:	cmp	r2, #0
   2eb84:	lsl	r1, r2, #1
   2eb88:	mov	sl, r5
   2eb8c:	mov	r5, r7
   2eb90:	mov	r7, ip
   2eb94:	movweq	r1, #1024	; 0x400
   2eb98:	str	r1, [ip]
   2eb9c:	add	r1, r1, r1, lsl #2
   2eba0:	lsl	r1, r1, #2
   2eba4:	bl	14844 <realloc@plt>
   2eba8:	cmp	r0, #0
   2ebac:	str	r0, [r8]
   2ebb0:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2ebb4:	ldr	r1, [r7]
   2ebb8:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2ebbc:	mov	ip, r7
   2ebc0:	mov	r7, r5
   2ebc4:	add	r1, r1, r1, lsl #2
   2ebc8:	add	r1, r0, r1, lsl #2
   2ebcc:	str	r1, [lr]
   2ebd0:	add	r1, r0, r6, lsl #2
   2ebd4:	str	r1, [r5]
   2ebd8:	mov	r5, sl
   2ebdc:	ldr	sl, [sp, #32]
   2ebe0:	mov	r0, #1
   2ebe4:	str	r0, [r1, #4]
   2ebe8:	mov	r0, #47	; 0x2f
   2ebec:	str	r5, [r1]
   2ebf0:	b	30348 <__flatcc_fb_parse@@Base+0x5e18>
   2ebf4:	muleq	r2, sl, fp
   2ebf8:	strdeq	r9, [r2], -r1
   2ebfc:	andeq	r8, r2, pc, lsr #22
   2ec00:	andeq	r8, r1, sl, lsl #20
   2ec04:	ldr	r2, [ip]
   2ec08:	ldr	r0, [r8]
   2ec0c:	add	r6, r2, r2, lsl #2
   2ec10:	add	r3, r0, r6, lsl #2
   2ec14:	str	r3, [lr]
   2ec18:	ldr	r1, [r7]
   2ec1c:	cmp	r1, r3
   2ec20:	bne	2ec9c <__flatcc_fb_parse@@Base+0x476c>
   2ec24:	cmp	r2, #0
   2ec28:	lsl	r1, r2, #1
   2ec2c:	mov	r9, r8
   2ec30:	mov	r8, sl
   2ec34:	mov	sl, r5
   2ec38:	mov	r5, r7
   2ec3c:	mov	r7, ip
   2ec40:	movweq	r1, #1024	; 0x400
   2ec44:	str	r1, [ip]
   2ec48:	add	r1, r1, r1, lsl #2
   2ec4c:	lsl	r1, r1, #2
   2ec50:	bl	14844 <realloc@plt>
   2ec54:	cmp	r0, #0
   2ec58:	str	r0, [r9]
   2ec5c:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2ec60:	ldr	r1, [r7]
   2ec64:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2ec68:	mov	ip, r7
   2ec6c:	mov	r2, r9
   2ec70:	mov	r7, r5
   2ec74:	add	r1, r1, r1, lsl #2
   2ec78:	add	r1, r0, r1, lsl #2
   2ec7c:	str	r1, [lr]
   2ec80:	add	r1, r0, r6, lsl #2
   2ec84:	str	r1, [r5]
   2ec88:	mov	r5, sl
   2ec8c:	mov	sl, r8
   2ec90:	mov	r8, r9
   2ec94:	ldr	r9, [pc, #4060]	; 2fc78 <__flatcc_fb_parse@@Base+0x5748>
   2ec98:	add	r9, pc, r9
   2ec9c:	mov	r0, #1
   2eca0:	str	r0, [r1, #4]
   2eca4:	str	r5, [r1]
   2eca8:	mov	r0, #45	; 0x2d
   2ecac:	b	30348 <__flatcc_fb_parse@@Base+0x5e18>
   2ecb0:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   2ecb4:	cmp	r1, #0
   2ecb8:	lsl	r2, r1, #1
   2ecbc:	mov	r6, ip
   2ecc0:	movweq	r2, #1024	; 0x400
   2ecc4:	add	r1, r2, r2, lsl #2
   2ecc8:	str	r2, [ip]
   2eccc:	lsl	r1, r1, #2
   2ecd0:	bl	14844 <realloc@plt>
   2ecd4:	cmp	r0, #0
   2ecd8:	str	r0, [r8]
   2ecdc:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2ece0:	ldr	r1, [r6]
   2ece4:	add	r2, r1, r1, lsl #2
   2ece8:	str	r1, [sp, #36]	; 0x24
   2ecec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2ecf0:	add	r2, r0, r2, lsl #2
   2ecf4:	str	r2, [r1]
   2ecf8:	add	r2, r0, r4, lsl #2
   2ecfc:	str	r2, [r7]
   2ed00:	mov	r1, #1
   2ed04:	add	r6, r5, #1
   2ed08:	str	r1, [r2, #4]
   2ed0c:	mov	r1, #19
   2ed10:	str	r5, [r2]
   2ed14:	mov	r4, r6
   2ed18:	str	r1, [r2, #16]
   2ed1c:	ldr	r1, [sp, #40]	; 0x28
   2ed20:	ldr	r9, [r1]
   2ed24:	str	r9, [r2, #8]
   2ed28:	ldr	r1, [sl]
   2ed2c:	sub	r3, r5, r1
   2ed30:	mov	lr, r1
   2ed34:	add	r3, r3, #1
   2ed38:	str	r3, [r2, #12]
   2ed3c:	add	r2, r2, #20
   2ed40:	str	r2, [r7]
   2ed44:	b	2ed88 <__flatcc_fb_parse@@Base+0x4858>
   2ed48:	str	lr, [sp, #36]	; 0x24
   2ed4c:	mov	r1, #1
   2ed50:	str	r9, [r2]
   2ed54:	sub	r3, r9, sl
   2ed58:	mov	lr, sl
   2ed5c:	add	r6, r4, #1
   2ed60:	stmib	r2, {r1, ip}
   2ed64:	add	r3, r3, #1
   2ed68:	mov	r1, #6
   2ed6c:	mov	r4, r6
   2ed70:	ldr	sl, [sp, #32]
   2ed74:	str	r3, [r2, #12]
   2ed78:	str	r1, [r2, #16]
   2ed7c:	add	r2, r2, #20
   2ed80:	str	r2, [r7]
   2ed84:	mov	r9, ip
   2ed88:	sub	r5, r6, #1
   2ed8c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2ed90:	mov	r7, r6
   2ed94:	cmp	r1, r6
   2ed98:	beq	2eea4 <__flatcc_fb_parse@@Base+0x4974>
   2ed9c:	ldrb	r3, [r7]
   2eda0:	cmp	r3, #34	; 0x22
   2eda4:	cmpne	r3, #92	; 0x5c
   2eda8:	beq	2edcc <__flatcc_fb_parse@@Base+0x489c>
   2edac:	add	r5, r5, #1
   2edb0:	mov	r8, #0
   2edb4:	cmp	r3, #32
   2edb8:	bcc	2edd4 <__flatcc_fb_parse@@Base+0x48a4>
   2edbc:	add	r6, r7, #1
   2edc0:	cmp	r3, #127	; 0x7f
   2edc4:	bne	2ed8c <__flatcc_fb_parse@@Base+0x485c>
   2edc8:	b	2edd4 <__flatcc_fb_parse@@Base+0x48a4>
   2edcc:	mov	r8, #0
   2edd0:	mov	r5, r7
   2edd4:	cmp	r4, r5
   2edd8:	beq	2eeb4 <__flatcc_fb_parse@@Base+0x4984>
   2eddc:	str	r4, [sp, #8]
   2ede0:	ldr	r4, [sp, #36]	; 0x24
   2ede4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2ede8:	add	r6, r4, r4, lsl #2
   2edec:	add	r3, r0, r6, lsl #2
   2edf0:	cmp	r2, r3
   2edf4:	str	r3, [r1]
   2edf8:	beq	2ee0c <__flatcc_fb_parse@@Base+0x48dc>
   2edfc:	ldr	r1, [sp, #20]
   2ee00:	mov	sl, lr
   2ee04:	mov	lr, r4
   2ee08:	b	2ee68 <__flatcc_fb_parse@@Base+0x4938>
   2ee0c:	cmp	r4, #0
   2ee10:	lsl	r2, r4, #1
   2ee14:	ldr	r9, [sp, #28]
   2ee18:	movweq	r2, #1024	; 0x400
   2ee1c:	add	r1, r2, r2, lsl #2
   2ee20:	lsl	r1, r1, #2
   2ee24:	str	r2, [r9]
   2ee28:	bl	14844 <realloc@plt>
   2ee2c:	ldr	r1, [sp, #24]
   2ee30:	cmp	r0, #0
   2ee34:	str	r0, [r1]
   2ee38:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2ee3c:	ldr	lr, [r9]
   2ee40:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2ee44:	ldr	r3, [sp, #40]	; 0x28
   2ee48:	add	r2, lr, lr, lsl #2
   2ee4c:	add	r2, r0, r2, lsl #2
   2ee50:	str	r2, [r1]
   2ee54:	ldr	r1, [sp, #20]
   2ee58:	add	r2, r0, r6, lsl #2
   2ee5c:	str	r2, [r1]
   2ee60:	ldr	sl, [sl]
   2ee64:	ldr	r9, [r3]
   2ee68:	ldr	r4, [sp, #8]
   2ee6c:	mov	ip, r9
   2ee70:	sub	r6, r4, sl
   2ee74:	sub	r3, r5, r4
   2ee78:	str	r4, [r2]
   2ee7c:	str	r3, [r2, #4]
   2ee80:	add	r6, r6, #1
   2ee84:	mov	r3, #20
   2ee88:	str	r9, [r2, #8]
   2ee8c:	mov	r9, r5
   2ee90:	str	r6, [r2, #12]
   2ee94:	str	r3, [r2, #16]
   2ee98:	add	r2, r2, #20
   2ee9c:	str	r2, [r1]
   2eea0:	b	2eec4 <__flatcc_fb_parse@@Base+0x4994>
   2eea4:	ldr	r5, [fp, #-32]	; 0xffffffe0
   2eea8:	mov	r8, #1
   2eeac:	cmp	r4, r5
   2eeb0:	bne	2eddc <__flatcc_fb_parse@@Base+0x48ac>
   2eeb4:	mov	sl, lr
   2eeb8:	ldr	lr, [sp, #36]	; 0x24
   2eebc:	mov	ip, r9
   2eec0:	mov	r9, r4
   2eec4:	ldrb	r6, [r5]
   2eec8:	cmp	r6, #34	; 0x22
   2eecc:	beq	2f238 <__flatcc_fb_parse@@Base+0x4d08>
   2eed0:	cmp	r6, #0
   2eed4:	mov	r3, r6
   2eed8:	mvn	r4, r8
   2eedc:	movwne	r3, #1
   2eee0:	tst	r4, r3
   2eee4:	beq	2f300 <__flatcc_fb_parse@@Base+0x4dd0>
   2eee8:	ldr	r8, [sp, #24]
   2eeec:	cmp	r6, #92	; 0x5c
   2eef0:	bne	2ef20 <__flatcc_fb_parse@@Base+0x49f0>
   2eef4:	add	r4, lr, lr, lsl #2
   2eef8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2eefc:	ldr	r8, [sp, #20]
   2ef00:	add	r3, r0, r4, lsl #2
   2ef04:	cmp	r2, r3
   2ef08:	str	r3, [r1]
   2ef0c:	beq	2efac <__flatcc_fb_parse@@Base+0x4a7c>
   2ef10:	str	lr, [sp, #36]	; 0x24
   2ef14:	mov	r6, r8
   2ef18:	mov	r1, ip
   2ef1c:	b	2f010 <__flatcc_fb_parse@@Base+0x4ae0>
   2ef20:	ldr	r7, [sp, #20]
   2ef24:	mov	r4, r5
   2ef28:	cmp	r6, #13
   2ef2c:	cmpne	r6, #10
   2ef30:	beq	2f9f4 <__flatcc_fb_parse@@Base+0x54c4>
   2ef34:	add	r5, lr, lr, lsl #2
   2ef38:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2ef3c:	add	r3, r0, r5, lsl #2
   2ef40:	cmp	r2, r3
   2ef44:	str	r3, [r1]
   2ef48:	bne	2ed48 <__flatcc_fb_parse@@Base+0x4818>
   2ef4c:	cmp	lr, #0
   2ef50:	lsl	r2, lr, #1
   2ef54:	ldr	r6, [sp, #28]
   2ef58:	movweq	r2, #1024	; 0x400
   2ef5c:	add	r1, r2, r2, lsl #2
   2ef60:	lsl	r1, r1, #2
   2ef64:	str	r2, [r6]
   2ef68:	bl	14844 <realloc@plt>
   2ef6c:	cmp	r0, #0
   2ef70:	str	r0, [r8]
   2ef74:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2ef78:	ldr	r1, [r6]
   2ef7c:	add	r2, r1, r1, lsl #2
   2ef80:	str	r1, [sp, #36]	; 0x24
   2ef84:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2ef88:	add	r2, r0, r2, lsl #2
   2ef8c:	str	r2, [r1]
   2ef90:	ldr	r1, [sp, #32]
   2ef94:	add	r2, r0, r5, lsl #2
   2ef98:	str	r2, [r7]
   2ef9c:	ldr	sl, [r1]
   2efa0:	ldr	r1, [sp, #40]	; 0x28
   2efa4:	ldr	ip, [r1]
   2efa8:	b	2ed4c <__flatcc_fb_parse@@Base+0x481c>
   2efac:	cmp	lr, #0
   2efb0:	lsl	r2, lr, #1
   2efb4:	ldr	r5, [sp, #28]
   2efb8:	movweq	r2, #1024	; 0x400
   2efbc:	add	r1, r2, r2, lsl #2
   2efc0:	lsl	r1, r1, #2
   2efc4:	str	r2, [r5]
   2efc8:	bl	14844 <realloc@plt>
   2efcc:	ldr	r1, [sp, #24]
   2efd0:	cmp	r0, #0
   2efd4:	str	r0, [r1]
   2efd8:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2efdc:	ldr	r1, [r5]
   2efe0:	mov	r6, r8
   2efe4:	add	r2, r1, r1, lsl #2
   2efe8:	str	r1, [sp, #36]	; 0x24
   2efec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2eff0:	add	r2, r0, r2, lsl #2
   2eff4:	str	r2, [r1]
   2eff8:	ldr	r1, [sp, #32]
   2effc:	add	r2, r0, r4, lsl #2
   2f000:	str	r2, [r8]
   2f004:	ldr	sl, [r1]
   2f008:	ldr	r1, [sp, #40]	; 0x28
   2f00c:	ldr	r1, [r1]
   2f010:	add	r4, r7, #1
   2f014:	sub	r5, r9, sl
   2f018:	str	r9, [r2]
   2f01c:	mov	ip, r1
   2f020:	mov	lr, sl
   2f024:	sub	r3, r4, r9
   2f028:	add	r5, r5, #1
   2f02c:	str	r3, [r2, #4]
   2f030:	str	r1, [r2, #8]
   2f034:	mov	r1, #21
   2f038:	str	r5, [r2, #12]
   2f03c:	str	r1, [r2, #16]
   2f040:	ldr	r1, [sp, #12]
   2f044:	add	r2, r2, #20
   2f048:	str	r2, [r6]
   2f04c:	cmp	r1, r7
   2f050:	beq	2ffdc <__flatcc_fb_parse@@Base+0x5aac>
   2f054:	ldrb	r6, [r4]
   2f058:	ldr	sl, [sp, #32]
   2f05c:	ldr	r9, [pc, #3980]	; 2fff0 <__flatcc_fb_parse@@Base+0x5ac0>
   2f060:	cmp	r6, #34	; 0x22
   2f064:	add	r9, pc, r9
   2f068:	bhi	2f124 <__flatcc_fb_parse@@Base+0x4bf4>
   2f06c:	add	r3, pc, #4
   2f070:	ldr	r5, [r3, r6, lsl #2]
   2f074:	add	pc, r3, r5
   2f078:	andeq	r0, r0, ip, ror pc
   2f07c:	strheq	r0, [r0], -ip
   2f080:	strheq	r0, [r0], -ip
   2f084:	strheq	r0, [r0], -ip
   2f088:	strheq	r0, [r0], -ip
   2f08c:	strheq	r0, [r0], -ip
   2f090:	strheq	r0, [r0], -ip
   2f094:	strheq	r0, [r0], -ip
   2f098:	strheq	r0, [r0], -ip
   2f09c:	strheq	r0, [r0], -ip
   2f0a0:	andeq	r0, r0, ip, lsl #1
   2f0a4:	strheq	r0, [r0], -ip
   2f0a8:	strheq	r0, [r0], -ip
   2f0ac:	ldrdeq	r0, [r0], -r4
   2f0b0:	strheq	r0, [r0], -ip
   2f0b4:	strheq	r0, [r0], -ip
   2f0b8:	strheq	r0, [r0], -ip
   2f0bc:	strheq	r0, [r0], -ip
   2f0c0:	strheq	r0, [r0], -ip
   2f0c4:	strheq	r0, [r0], -ip
   2f0c8:	strheq	r0, [r0], -ip
   2f0cc:	strheq	r0, [r0], -ip
   2f0d0:	strheq	r0, [r0], -ip
   2f0d4:	strheq	r0, [r0], -ip
   2f0d8:	strheq	r0, [r0], -ip
   2f0dc:	strheq	r0, [r0], -ip
   2f0e0:	strheq	r0, [r0], -ip
   2f0e4:	strheq	r0, [r0], -ip
   2f0e8:	strheq	r0, [r0], -ip
   2f0ec:	strheq	r0, [r0], -ip
   2f0f0:	strheq	r0, [r0], -ip
   2f0f4:	strheq	r0, [r0], -ip
   2f0f8:	strheq	r0, [r0], -ip
   2f0fc:	strheq	r0, [r0], -ip
   2f100:	strheq	r0, [r0], -r4
   2f104:	ldr	r1, [sp, #4]
   2f108:	ldr	r6, [fp, #-32]	; 0xffffffe0
   2f10c:	cmp	r1, r7
   2f110:	beq	2f16c <__flatcc_fb_parse@@Base+0x4c3c>
   2f114:	ldrb	r3, [r7, #2]
   2f118:	add	r6, r7, #2
   2f11c:	cmp	r3, #13
   2f120:	b	2f168 <__flatcc_fb_parse@@Base+0x4c38>
   2f124:	cmp	r6, #92	; 0x5c
   2f128:	bne	2f134 <__flatcc_fb_parse@@Base+0x4c04>
   2f12c:	add	r6, r7, #2
   2f130:	b	2ed84 <__flatcc_fb_parse@@Base+0x4854>
   2f134:	mov	r7, r8
   2f138:	mov	sl, lr
   2f13c:	ldr	r8, [sp, #24]
   2f140:	ldr	lr, [sp, #36]	; 0x24
   2f144:	mov	r9, r4
   2f148:	b	2ef28 <__flatcc_fb_parse@@Base+0x49f8>
   2f14c:	ldr	r1, [sp, #4]
   2f150:	ldr	r6, [fp, #-32]	; 0xffffffe0
   2f154:	cmp	r1, r7
   2f158:	beq	2f16c <__flatcc_fb_parse@@Base+0x4c3c>
   2f15c:	ldrb	r3, [r7, #2]
   2f160:	add	r6, r7, #2
   2f164:	cmp	r3, #10
   2f168:	addeq	r6, r7, #3
   2f16c:	ldr	r7, [sp, #36]	; 0x24
   2f170:	ldr	r1, [sp, #40]	; 0x28
   2f174:	mov	r9, ip
   2f178:	add	r9, ip, #1
   2f17c:	add	r5, r7, r7, lsl #2
   2f180:	str	r9, [r1]
   2f184:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2f188:	str	r6, [sl]
   2f18c:	add	r3, r0, r5, lsl #2
   2f190:	cmp	r2, r3
   2f194:	str	r3, [r1]
   2f198:	beq	2f1a4 <__flatcc_fb_parse@@Base+0x4c74>
   2f19c:	mov	r5, r6
   2f1a0:	b	2f200 <__flatcc_fb_parse@@Base+0x4cd0>
   2f1a4:	cmp	r7, #0
   2f1a8:	lsl	r2, r7, #1
   2f1ac:	ldr	r7, [sp, #28]
   2f1b0:	movweq	r2, #1024	; 0x400
   2f1b4:	add	r1, r2, r2, lsl #2
   2f1b8:	lsl	r1, r1, #2
   2f1bc:	str	r2, [r7]
   2f1c0:	bl	14844 <realloc@plt>
   2f1c4:	ldr	r1, [sp, #24]
   2f1c8:	cmp	r0, #0
   2f1cc:	str	r0, [r1]
   2f1d0:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2f1d4:	ldr	r1, [r7]
   2f1d8:	add	r2, r1, r1, lsl #2
   2f1dc:	str	r1, [sp, #36]	; 0x24
   2f1e0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2f1e4:	add	r2, r0, r2, lsl #2
   2f1e8:	str	r2, [r1]
   2f1ec:	add	r2, r0, r5, lsl #2
   2f1f0:	str	r2, [r8]
   2f1f4:	ldr	r1, [sp, #40]	; 0x28
   2f1f8:	ldr	r5, [sl]
   2f1fc:	ldr	r9, [r1]
   2f200:	mov	lr, r5
   2f204:	sub	r5, r4, r5
   2f208:	sub	r3, r6, r4
   2f20c:	mov	r1, #18
   2f210:	str	r4, [r2]
   2f214:	mov	r4, r6
   2f218:	add	r5, r5, #1
   2f21c:	str	r3, [r2, #4]
   2f220:	str	r9, [r2, #8]
   2f224:	str	r5, [r2, #12]
   2f228:	str	r1, [r2, #16]
   2f22c:	add	r2, r2, #20
   2f230:	str	r2, [r8]
   2f234:	b	2ed88 <__flatcc_fb_parse@@Base+0x4858>
   2f238:	add	r4, lr, lr, lsl #2
   2f23c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2f240:	ldr	r8, [sp, #24]
   2f244:	add	r3, r0, r4, lsl #2
   2f248:	str	r3, [r1]
   2f24c:	cmp	r2, r3
   2f250:	ldr	r3, [sp, #20]
   2f254:	bne	2f2b8 <__flatcc_fb_parse@@Base+0x4d88>
   2f258:	cmp	lr, #0
   2f25c:	lsl	r2, lr, #1
   2f260:	ldr	r5, [sp, #28]
   2f264:	mov	r6, r3
   2f268:	movweq	r2, #1024	; 0x400
   2f26c:	add	r1, r2, r2, lsl #2
   2f270:	lsl	r1, r1, #2
   2f274:	str	r2, [r5]
   2f278:	bl	14844 <realloc@plt>
   2f27c:	cmp	r0, #0
   2f280:	str	r0, [r8]
   2f284:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2f288:	ldr	r1, [r5]
   2f28c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2f290:	mov	r3, r6
   2f294:	add	r1, r1, r1, lsl #2
   2f298:	add	r1, r0, r1, lsl #2
   2f29c:	str	r1, [r2]
   2f2a0:	add	r2, r0, r4, lsl #2
   2f2a4:	ldr	r0, [sp, #32]
   2f2a8:	str	r2, [r6]
   2f2ac:	ldr	sl, [r0]
   2f2b0:	ldr	r0, [sp, #40]	; 0x28
   2f2b4:	ldr	ip, [r0]
   2f2b8:	add	r5, r7, #1
   2f2bc:	sub	r1, r9, sl
   2f2c0:	str	r9, [r2]
   2f2c4:	mov	r7, r3
   2f2c8:	sub	r0, r5, r9
   2f2cc:	add	r1, r1, #1
   2f2d0:	stmib	r2, {r0, ip}
   2f2d4:	mov	r0, #22
   2f2d8:	str	r1, [r2, #12]
   2f2dc:	str	r0, [r2, #16]
   2f2e0:	add	r0, r2, #20
   2f2e4:	ldr	sl, [sp, #32]
   2f2e8:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2f2ec:	ldr	ip, [sp, #28]
   2f2f0:	str	r0, [r3]
   2f2f4:	ldr	r9, [pc, #3996]	; 30298 <__flatcc_fb_parse@@Base+0x5d68>
   2f2f8:	add	r9, pc, r9
   2f2fc:	b	2cd3c <__flatcc_fb_parse@@Base+0x280c>
   2f300:	add	r4, lr, lr, lsl #2
   2f304:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2f308:	mov	r6, sl
   2f30c:	ldr	r7, [sp, #20]
   2f310:	ldr	sl, [sp, #32]
   2f314:	ldr	r8, [sp, #24]
   2f318:	add	r3, r0, r4, lsl #2
   2f31c:	str	r3, [r1]
   2f320:	cmp	r2, r3
   2f324:	ldr	r9, [pc, #3952]	; 3029c <__flatcc_fb_parse@@Base+0x5d6c>
   2f328:	add	r9, pc, r9
   2f32c:	bne	2f384 <__flatcc_fb_parse@@Base+0x4e54>
   2f330:	cmp	lr, #0
   2f334:	lsl	r2, lr, #1
   2f338:	ldr	r6, [sp, #28]
   2f33c:	movweq	r2, #1024	; 0x400
   2f340:	add	r1, r2, r2, lsl #2
   2f344:	lsl	r1, r1, #2
   2f348:	str	r2, [r6]
   2f34c:	bl	14844 <realloc@plt>
   2f350:	cmp	r0, #0
   2f354:	str	r0, [r8]
   2f358:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2f35c:	ldr	r1, [r6]
   2f360:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2f364:	add	r1, r1, r1, lsl #2
   2f368:	add	r1, r0, r1, lsl #2
   2f36c:	str	r1, [r2]
   2f370:	add	r2, r0, r4, lsl #2
   2f374:	ldr	r0, [sp, #40]	; 0x28
   2f378:	str	r2, [r7]
   2f37c:	ldr	r6, [sl]
   2f380:	ldr	ip, [r0]
   2f384:	sub	r0, r5, r6
   2f388:	b	30074 <__flatcc_fb_parse@@Base+0x5b44>
   2f38c:	andeq	r8, r2, r2, ror #27
   2f390:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2f394:	add	r4, r5, #2
   2f398:	cmp	r4, r0
   2f39c:	beq	2fdb0 <__flatcc_fb_parse@@Base+0x5880>
   2f3a0:	ldrb	r0, [r4]
   2f3a4:	cmp	r0, #61	; 0x3d
   2f3a8:	bne	2fdb0 <__flatcc_fb_parse@@Base+0x5880>
   2f3ac:	ldr	r2, [ip]
   2f3b0:	ldr	r0, [r8]
   2f3b4:	add	r4, r2, r2, lsl #2
   2f3b8:	add	r3, r0, r4, lsl #2
   2f3bc:	str	r3, [lr]
   2f3c0:	ldr	r1, [r7]
   2f3c4:	cmp	r1, r3
   2f3c8:	bne	2f418 <__flatcc_fb_parse@@Base+0x4ee8>
   2f3cc:	cmp	r2, #0
   2f3d0:	lsl	r1, r2, #1
   2f3d4:	mov	r6, ip
   2f3d8:	movweq	r1, #1024	; 0x400
   2f3dc:	str	r1, [ip]
   2f3e0:	add	r1, r1, r1, lsl #2
   2f3e4:	lsl	r1, r1, #2
   2f3e8:	bl	14844 <realloc@plt>
   2f3ec:	cmp	r0, #0
   2f3f0:	str	r0, [r8]
   2f3f4:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2f3f8:	ldr	r1, [r6]
   2f3fc:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2f400:	mov	ip, r6
   2f404:	add	r1, r1, r1, lsl #2
   2f408:	add	r1, r0, r1, lsl #2
   2f40c:	str	r1, [lr]
   2f410:	add	r1, r0, r4, lsl #2
   2f414:	str	r1, [r7]
   2f418:	mov	r2, #3
   2f41c:	add	r0, r5, #3
   2f420:	str	r2, [r1, #4]
   2f424:	movw	r2, #14906	; 0x3a3a
   2f428:	b	2fbb4 <__flatcc_fb_parse@@Base+0x5684>
   2f42c:	ldr	r2, [ip]
   2f430:	ldr	r0, [r8]
   2f434:	add	r4, r2, r2, lsl #2
   2f438:	add	r3, r0, r4, lsl #2
   2f43c:	str	r3, [lr]
   2f440:	ldr	r1, [r7]
   2f444:	cmp	r1, r3
   2f448:	bne	2f498 <__flatcc_fb_parse@@Base+0x4f68>
   2f44c:	cmp	r2, #0
   2f450:	lsl	r1, r2, #1
   2f454:	mov	r6, ip
   2f458:	movweq	r1, #1024	; 0x400
   2f45c:	str	r1, [ip]
   2f460:	add	r1, r1, r1, lsl #2
   2f464:	lsl	r1, r1, #2
   2f468:	bl	14844 <realloc@plt>
   2f46c:	cmp	r0, #0
   2f470:	str	r0, [r8]
   2f474:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2f478:	ldr	r1, [r6]
   2f47c:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2f480:	mov	ip, r6
   2f484:	add	r1, r1, r1, lsl #2
   2f488:	add	r1, r0, r1, lsl #2
   2f48c:	str	r1, [lr]
   2f490:	add	r1, r0, r4, lsl #2
   2f494:	str	r1, [r7]
   2f498:	mov	r2, #2
   2f49c:	add	r0, r5, #2
   2f4a0:	str	r2, [r1, #4]
   2f4a4:	str	r5, [r1]
   2f4a8:	movw	r2, #11051	; 0x2b2b
   2f4ac:	b	2fd80 <__flatcc_fb_parse@@Base+0x5850>
   2f4b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2f4b4:	add	r4, r5, #2
   2f4b8:	cmp	r4, r0
   2f4bc:	beq	30140 <__flatcc_fb_parse@@Base+0x5c10>
   2f4c0:	ldrb	r0, [r4]
   2f4c4:	cmp	r0, #62	; 0x3e
   2f4c8:	beq	3089c <__flatcc_fb_parse@@Base+0x636c>
   2f4cc:	cmp	r0, #61	; 0x3d
   2f4d0:	bne	30140 <__flatcc_fb_parse@@Base+0x5c10>
   2f4d4:	ldr	r2, [ip]
   2f4d8:	ldr	r0, [r8]
   2f4dc:	add	r4, r2, r2, lsl #2
   2f4e0:	add	r3, r0, r4, lsl #2
   2f4e4:	str	r3, [lr]
   2f4e8:	ldr	r1, [r7]
   2f4ec:	cmp	r1, r3
   2f4f0:	bne	2f540 <__flatcc_fb_parse@@Base+0x5010>
   2f4f4:	cmp	r2, #0
   2f4f8:	lsl	r1, r2, #1
   2f4fc:	mov	r6, ip
   2f500:	movweq	r1, #1024	; 0x400
   2f504:	str	r1, [ip]
   2f508:	add	r1, r1, r1, lsl #2
   2f50c:	lsl	r1, r1, #2
   2f510:	bl	14844 <realloc@plt>
   2f514:	cmp	r0, #0
   2f518:	str	r0, [r8]
   2f51c:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2f520:	ldr	r1, [r6]
   2f524:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2f528:	mov	ip, r6
   2f52c:	add	r1, r1, r1, lsl #2
   2f530:	add	r1, r0, r1, lsl #2
   2f534:	str	r1, [lr]
   2f538:	add	r1, r0, r4, lsl #2
   2f53c:	str	r1, [r7]
   2f540:	mov	r2, #3
   2f544:	add	r0, r5, #3
   2f548:	str	r2, [r1, #4]
   2f54c:	movw	r2, #15934	; 0x3e3e
   2f550:	b	2fbb4 <__flatcc_fb_parse@@Base+0x5684>
   2f554:	andeq	r8, r2, r2, lsl fp
   2f558:	ldr	r2, [ip]
   2f55c:	ldr	r0, [r8]
   2f560:	add	r4, r2, r2, lsl #2
   2f564:	add	r3, r0, r4, lsl #2
   2f568:	str	r3, [lr]
   2f56c:	ldr	r1, [r7]
   2f570:	cmp	r1, r3
   2f574:	bne	2f5c4 <__flatcc_fb_parse@@Base+0x5094>
   2f578:	cmp	r2, #0
   2f57c:	lsl	r1, r2, #1
   2f580:	mov	r6, ip
   2f584:	movweq	r1, #1024	; 0x400
   2f588:	str	r1, [ip]
   2f58c:	add	r1, r1, r1, lsl #2
   2f590:	lsl	r1, r1, #2
   2f594:	bl	14844 <realloc@plt>
   2f598:	cmp	r0, #0
   2f59c:	str	r0, [r8]
   2f5a0:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2f5a4:	ldr	r1, [r6]
   2f5a8:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2f5ac:	mov	ip, r6
   2f5b0:	add	r1, r1, r1, lsl #2
   2f5b4:	add	r1, r0, r1, lsl #2
   2f5b8:	str	r1, [lr]
   2f5bc:	add	r1, r0, r4, lsl #2
   2f5c0:	str	r1, [r7]
   2f5c4:	mov	r0, #2
   2f5c8:	add	r4, r5, #2
   2f5cc:	str	r0, [r1, #4]
   2f5d0:	movw	r0, #9766	; 0x2626
   2f5d4:	str	r5, [r1]
   2f5d8:	str	r0, [r1, #16]
   2f5dc:	ldr	r0, [sp, #40]	; 0x28
   2f5e0:	ldr	r0, [r0]
   2f5e4:	str	r0, [r1, #8]
   2f5e8:	ldr	r0, [sl]
   2f5ec:	sub	r0, r5, r0
   2f5f0:	add	r0, r0, #1
   2f5f4:	str	r0, [r1, #12]
   2f5f8:	add	r0, r1, #20
   2f5fc:	str	r0, [r7]
   2f600:	ldr	r2, [ip]
   2f604:	ldr	r0, [r8]
   2f608:	add	r6, r2, r2, lsl #2
   2f60c:	add	r3, r0, r6, lsl #2
   2f610:	str	r3, [lr]
   2f614:	ldr	r1, [r7]
   2f618:	cmp	r1, r3
   2f61c:	bne	2f698 <__flatcc_fb_parse@@Base+0x5168>
   2f620:	cmp	r2, #0
   2f624:	lsl	r1, r2, #1
   2f628:	mov	r9, r8
   2f62c:	mov	r8, sl
   2f630:	mov	sl, r5
   2f634:	mov	r5, r7
   2f638:	mov	r7, ip
   2f63c:	movweq	r1, #1024	; 0x400
   2f640:	str	r1, [ip]
   2f644:	add	r1, r1, r1, lsl #2
   2f648:	lsl	r1, r1, #2
   2f64c:	bl	14844 <realloc@plt>
   2f650:	cmp	r0, #0
   2f654:	str	r0, [r9]
   2f658:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2f65c:	ldr	r1, [r7]
   2f660:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2f664:	mov	ip, r7
   2f668:	mov	r2, r9
   2f66c:	mov	r7, r5
   2f670:	add	r1, r1, r1, lsl #2
   2f674:	add	r1, r0, r1, lsl #2
   2f678:	str	r1, [lr]
   2f67c:	add	r1, r0, r6, lsl #2
   2f680:	str	r1, [r5]
   2f684:	mov	r5, sl
   2f688:	mov	sl, r8
   2f68c:	mov	r8, r9
   2f690:	ldr	r9, [pc, #3916]	; 305e4 <__flatcc_fb_parse@@Base+0x60b4>
   2f694:	add	r9, pc, r9
   2f698:	str	r5, [r1]
   2f69c:	mov	r0, #38	; 0x26
   2f6a0:	b	2ffcc <__flatcc_fb_parse@@Base+0x5a9c>
   2f6a4:	andeq	r8, r2, sl, lsr sl
   2f6a8:	ldr	r2, [ip]
   2f6ac:	ldr	r0, [r8]
   2f6b0:	add	r4, r2, r2, lsl #2
   2f6b4:	add	r3, r0, r4, lsl #2
   2f6b8:	str	r3, [lr]
   2f6bc:	ldr	r1, [r7]
   2f6c0:	cmp	r1, r3
   2f6c4:	bne	2f714 <__flatcc_fb_parse@@Base+0x51e4>
   2f6c8:	cmp	r2, #0
   2f6cc:	lsl	r1, r2, #1
   2f6d0:	mov	r6, ip
   2f6d4:	movweq	r1, #1024	; 0x400
   2f6d8:	str	r1, [ip]
   2f6dc:	add	r1, r1, r1, lsl #2
   2f6e0:	lsl	r1, r1, #2
   2f6e4:	bl	14844 <realloc@plt>
   2f6e8:	cmp	r0, #0
   2f6ec:	str	r0, [r8]
   2f6f0:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2f6f4:	ldr	r1, [r6]
   2f6f8:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2f6fc:	mov	ip, r6
   2f700:	add	r1, r1, r1, lsl #2
   2f704:	add	r1, r0, r1, lsl #2
   2f708:	str	r1, [lr]
   2f70c:	add	r1, r0, r4, lsl #2
   2f710:	str	r1, [r7]
   2f714:	mov	r0, #2
   2f718:	add	r4, r5, #2
   2f71c:	str	r0, [r1, #4]
   2f720:	movw	r0, #31868	; 0x7c7c
   2f724:	str	r5, [r1]
   2f728:	str	r0, [r1, #16]
   2f72c:	ldr	r0, [sp, #40]	; 0x28
   2f730:	ldr	r0, [r0]
   2f734:	str	r0, [r1, #8]
   2f738:	ldr	r0, [sl]
   2f73c:	sub	r0, r5, r0
   2f740:	add	r0, r0, #1
   2f744:	str	r0, [r1, #12]
   2f748:	add	r0, r1, #20
   2f74c:	str	r0, [r7]
   2f750:	ldr	r2, [ip]
   2f754:	ldr	r0, [r8]
   2f758:	add	r6, r2, r2, lsl #2
   2f75c:	add	r3, r0, r6, lsl #2
   2f760:	str	r3, [lr]
   2f764:	ldr	r1, [r7]
   2f768:	cmp	r1, r3
   2f76c:	bne	2f7e8 <__flatcc_fb_parse@@Base+0x52b8>
   2f770:	cmp	r2, #0
   2f774:	lsl	r1, r2, #1
   2f778:	mov	r9, r8
   2f77c:	mov	r8, sl
   2f780:	mov	sl, r5
   2f784:	mov	r5, r7
   2f788:	mov	r7, ip
   2f78c:	movweq	r1, #1024	; 0x400
   2f790:	str	r1, [ip]
   2f794:	add	r1, r1, r1, lsl #2
   2f798:	lsl	r1, r1, #2
   2f79c:	bl	14844 <realloc@plt>
   2f7a0:	cmp	r0, #0
   2f7a4:	str	r0, [r9]
   2f7a8:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2f7ac:	ldr	r1, [r7]
   2f7b0:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2f7b4:	mov	ip, r7
   2f7b8:	mov	r2, r9
   2f7bc:	mov	r7, r5
   2f7c0:	add	r1, r1, r1, lsl #2
   2f7c4:	add	r1, r0, r1, lsl #2
   2f7c8:	str	r1, [lr]
   2f7cc:	add	r1, r0, r6, lsl #2
   2f7d0:	str	r1, [r5]
   2f7d4:	mov	r5, sl
   2f7d8:	mov	sl, r8
   2f7dc:	mov	r8, r9
   2f7e0:	ldr	r9, [pc, #4076]	; 307d4 <__flatcc_fb_parse@@Base+0x62a4>
   2f7e4:	add	r9, pc, r9
   2f7e8:	mov	r0, #124	; 0x7c
   2f7ec:	str	r5, [r1]
   2f7f0:	b	2ffcc <__flatcc_fb_parse@@Base+0x5a9c>
   2f7f4:	andeq	r8, r2, sl, asr r9
   2f7f8:	ldr	r2, [ip]
   2f7fc:	ldr	r0, [r8]
   2f800:	add	r6, r2, r2, lsl #2
   2f804:	add	r3, r0, r6, lsl #2
   2f808:	str	r3, [lr]
   2f80c:	ldr	r1, [r7]
   2f810:	cmp	r1, r3
   2f814:	bne	2f890 <__flatcc_fb_parse@@Base+0x5360>
   2f818:	cmp	r2, #0
   2f81c:	lsl	r1, r2, #1
   2f820:	mov	r9, r8
   2f824:	mov	r8, sl
   2f828:	mov	sl, r5
   2f82c:	mov	r5, r7
   2f830:	mov	r7, ip
   2f834:	movweq	r1, #1024	; 0x400
   2f838:	str	r1, [ip]
   2f83c:	add	r1, r1, r1, lsl #2
   2f840:	lsl	r1, r1, #2
   2f844:	bl	14844 <realloc@plt>
   2f848:	cmp	r0, #0
   2f84c:	str	r0, [r9]
   2f850:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2f854:	ldr	r1, [r7]
   2f858:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2f85c:	mov	ip, r7
   2f860:	mov	r2, r9
   2f864:	mov	r7, r5
   2f868:	add	r1, r1, r1, lsl #2
   2f86c:	add	r1, r0, r1, lsl #2
   2f870:	str	r1, [lr]
   2f874:	add	r1, r0, r6, lsl #2
   2f878:	str	r1, [r5]
   2f87c:	mov	r5, sl
   2f880:	mov	sl, r8
   2f884:	mov	r8, r9
   2f888:	ldr	r9, [pc, #3912]	; 307d8 <__flatcc_fb_parse@@Base+0x62a8>
   2f88c:	add	r9, pc, r9
   2f890:	mov	r0, #1
   2f894:	str	r0, [r1, #4]
   2f898:	str	r5, [r1]
   2f89c:	movw	r0, #10794	; 0x2a2a
   2f8a0:	b	30348 <__flatcc_fb_parse@@Base+0x5e18>
   2f8a4:	andeq	r8, r2, lr, lsr #17
   2f8a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2f8ac:	add	r4, r5, #2
   2f8b0:	cmp	r4, r0
   2f8b4:	beq	2fe5c <__flatcc_fb_parse@@Base+0x592c>
   2f8b8:	ldrb	r0, [r4]
   2f8bc:	cmp	r0, #61	; 0x3d
   2f8c0:	bne	2fe5c <__flatcc_fb_parse@@Base+0x592c>
   2f8c4:	ldr	r2, [ip]
   2f8c8:	ldr	r0, [r8]
   2f8cc:	add	r4, r2, r2, lsl #2
   2f8d0:	add	r3, r0, r4, lsl #2
   2f8d4:	str	r3, [lr]
   2f8d8:	ldr	r1, [r7]
   2f8dc:	cmp	r1, r3
   2f8e0:	bne	2f930 <__flatcc_fb_parse@@Base+0x5400>
   2f8e4:	cmp	r2, #0
   2f8e8:	lsl	r1, r2, #1
   2f8ec:	mov	r6, ip
   2f8f0:	movweq	r1, #1024	; 0x400
   2f8f4:	str	r1, [ip]
   2f8f8:	add	r1, r1, r1, lsl #2
   2f8fc:	lsl	r1, r1, #2
   2f900:	bl	14844 <realloc@plt>
   2f904:	cmp	r0, #0
   2f908:	str	r0, [r8]
   2f90c:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2f910:	ldr	r1, [r6]
   2f914:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2f918:	mov	ip, r6
   2f91c:	add	r1, r1, r1, lsl #2
   2f920:	add	r1, r0, r1, lsl #2
   2f924:	str	r1, [lr]
   2f928:	add	r1, r0, r4, lsl #2
   2f92c:	str	r1, [r7]
   2f930:	mov	r2, #3
   2f934:	add	r0, r5, #3
   2f938:	str	r2, [r1, #4]
   2f93c:	movw	r2, #15677	; 0x3d3d
   2f940:	b	2fbb4 <__flatcc_fb_parse@@Base+0x5684>
   2f944:	strdeq	r8, [r2], -r2
   2f948:	ldr	r4, [fp, #-32]	; 0xffffffe0
   2f94c:	ldr	r2, [ip]
   2f950:	ldr	r0, [r8]
   2f954:	add	r6, r2, r2, lsl #2
   2f958:	add	r3, r0, r6, lsl #2
   2f95c:	str	r3, [lr]
   2f960:	ldr	r1, [r7]
   2f964:	cmp	r1, r3
   2f968:	bne	2f9e4 <__flatcc_fb_parse@@Base+0x54b4>
   2f96c:	cmp	r2, #0
   2f970:	lsl	r1, r2, #1
   2f974:	mov	r9, r8
   2f978:	mov	r8, sl
   2f97c:	mov	sl, r5
   2f980:	mov	r5, r7
   2f984:	mov	r7, ip
   2f988:	movweq	r1, #1024	; 0x400
   2f98c:	str	r1, [ip]
   2f990:	add	r1, r1, r1, lsl #2
   2f994:	lsl	r1, r1, #2
   2f998:	bl	14844 <realloc@plt>
   2f99c:	cmp	r0, #0
   2f9a0:	str	r0, [r9]
   2f9a4:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2f9a8:	ldr	r1, [r7]
   2f9ac:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2f9b0:	mov	ip, r7
   2f9b4:	mov	r2, r9
   2f9b8:	mov	r7, r5
   2f9bc:	add	r1, r1, r1, lsl #2
   2f9c0:	add	r1, r0, r1, lsl #2
   2f9c4:	str	r1, [lr]
   2f9c8:	add	r1, r0, r6, lsl #2
   2f9cc:	str	r1, [r5]
   2f9d0:	mov	r5, sl
   2f9d4:	mov	sl, r8
   2f9d8:	mov	r8, r9
   2f9dc:	ldr	r9, [pc, #3932]	; 30940 <__flatcc_fb_parse@@Base+0x6410>
   2f9e0:	add	r9, pc, r9
   2f9e4:	str	r5, [r1]
   2f9e8:	mov	r0, #14
   2f9ec:	b	2ffcc <__flatcc_fb_parse@@Base+0x5a9c>
   2f9f0:	andeq	r8, r2, r6, lsr r7
   2f9f4:	add	r5, lr, lr, lsl #2
   2f9f8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2f9fc:	mov	r6, sl
   2fa00:	ldr	sl, [sp, #32]
   2fa04:	add	r3, r0, r5, lsl #2
   2fa08:	str	r3, [r1]
   2fa0c:	cmp	r2, r3
   2fa10:	ldr	r9, [pc, #4056]	; 309f0 <__flatcc_fb_parse@@Base+0x64c0>
   2fa14:	add	r9, pc, r9
   2fa18:	bne	2fa70 <__flatcc_fb_parse@@Base+0x5540>
   2fa1c:	cmp	lr, #0
   2fa20:	lsl	r2, lr, #1
   2fa24:	ldr	r6, [sp, #28]
   2fa28:	movweq	r2, #1024	; 0x400
   2fa2c:	add	r1, r2, r2, lsl #2
   2fa30:	lsl	r1, r1, #2
   2fa34:	str	r2, [r6]
   2fa38:	bl	14844 <realloc@plt>
   2fa3c:	cmp	r0, #0
   2fa40:	str	r0, [r8]
   2fa44:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2fa48:	ldr	r1, [r6]
   2fa4c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2fa50:	add	r1, r1, r1, lsl #2
   2fa54:	add	r1, r0, r1, lsl #2
   2fa58:	str	r1, [r2]
   2fa5c:	add	r2, r0, r5, lsl #2
   2fa60:	ldr	r0, [sp, #40]	; 0x28
   2fa64:	str	r2, [r7]
   2fa68:	ldr	r6, [sl]
   2fa6c:	ldr	ip, [r0]
   2fa70:	sub	r0, r4, r6
   2fa74:	mov	r1, #0
   2fa78:	str	r4, [r2]
   2fa7c:	mov	r5, r4
   2fa80:	add	r0, r0, #1
   2fa84:	stmib	r2, {r1, ip}
   2fa88:	b	30088 <__flatcc_fb_parse@@Base+0x5b58>
   2fa8c:	ldr	r2, [ip]
   2fa90:	ldr	r0, [r8]
   2fa94:	add	r4, r2, r2, lsl #2
   2fa98:	add	r3, r0, r4, lsl #2
   2fa9c:	str	r3, [lr]
   2faa0:	ldr	r1, [r7]
   2faa4:	cmp	r1, r3
   2faa8:	bne	2faf8 <__flatcc_fb_parse@@Base+0x55c8>
   2faac:	cmp	r2, #0
   2fab0:	lsl	r1, r2, #1
   2fab4:	mov	r6, ip
   2fab8:	movweq	r1, #1024	; 0x400
   2fabc:	str	r1, [ip]
   2fac0:	add	r1, r1, r1, lsl #2
   2fac4:	lsl	r1, r1, #2
   2fac8:	bl	14844 <realloc@plt>
   2facc:	cmp	r0, #0
   2fad0:	str	r0, [r8]
   2fad4:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2fad8:	ldr	r1, [r6]
   2fadc:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2fae0:	mov	ip, r6
   2fae4:	add	r1, r1, r1, lsl #2
   2fae8:	add	r1, r0, r1, lsl #2
   2faec:	str	r1, [lr]
   2faf0:	add	r1, r0, r4, lsl #2
   2faf4:	str	r1, [r7]
   2faf8:	mov	r2, #2
   2fafc:	add	r0, r5, #2
   2fb00:	str	r2, [r1, #4]
   2fb04:	str	r5, [r1]
   2fb08:	movw	r2, #15676	; 0x3d3c
   2fb0c:	b	2fd80 <__flatcc_fb_parse@@Base+0x5850>
   2fb10:	andeq	r8, r2, r2, ror #12
   2fb14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2fb18:	add	r4, r5, #2
   2fb1c:	cmp	r4, r0
   2fb20:	beq	30378 <__flatcc_fb_parse@@Base+0x5e48>
   2fb24:	ldrb	r0, [r4]
   2fb28:	cmp	r0, #60	; 0x3c
   2fb2c:	beq	309f4 <__flatcc_fb_parse@@Base+0x64c4>
   2fb30:	cmp	r0, #61	; 0x3d
   2fb34:	bne	30378 <__flatcc_fb_parse@@Base+0x5e48>
   2fb38:	ldr	r2, [ip]
   2fb3c:	ldr	r0, [r8]
   2fb40:	add	r4, r2, r2, lsl #2
   2fb44:	add	r3, r0, r4, lsl #2
   2fb48:	str	r3, [lr]
   2fb4c:	ldr	r1, [r7]
   2fb50:	cmp	r1, r3
   2fb54:	bne	2fba4 <__flatcc_fb_parse@@Base+0x5674>
   2fb58:	cmp	r2, #0
   2fb5c:	lsl	r1, r2, #1
   2fb60:	mov	r6, ip
   2fb64:	movweq	r1, #1024	; 0x400
   2fb68:	str	r1, [ip]
   2fb6c:	add	r1, r1, r1, lsl #2
   2fb70:	lsl	r1, r1, #2
   2fb74:	bl	14844 <realloc@plt>
   2fb78:	cmp	r0, #0
   2fb7c:	str	r0, [r8]
   2fb80:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2fb84:	ldr	r1, [r6]
   2fb88:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2fb8c:	mov	ip, r6
   2fb90:	add	r1, r1, r1, lsl #2
   2fb94:	add	r1, r0, r1, lsl #2
   2fb98:	str	r1, [lr]
   2fb9c:	add	r1, r0, r4, lsl #2
   2fba0:	str	r1, [r7]
   2fba4:	mov	r2, #3
   2fba8:	add	r0, r5, #3
   2fbac:	str	r2, [r1, #4]
   2fbb0:	movw	r2, #15420	; 0x3c3c
   2fbb4:	str	r5, [r1]
   2fbb8:	movt	r2, #61	; 0x3d
   2fbbc:	b	2fd80 <__flatcc_fb_parse@@Base+0x5850>
   2fbc0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2fbc4:	add	r0, r5, #2
   2fbc8:	cmp	r0, r1
   2fbcc:	beq	307dc <__flatcc_fb_parse@@Base+0x62ac>
   2fbd0:	ldrb	r1, [r0]
   2fbd4:	sub	r2, r1, #33	; 0x21
   2fbd8:	sub	r1, r1, #42	; 0x2a
   2fbdc:	clz	r2, r2
   2fbe0:	clz	r1, r1
   2fbe4:	lsr	r2, r2, #5
   2fbe8:	lsr	r1, r1, #5
   2fbec:	orr	r1, r1, r2
   2fbf0:	b	307e0 <__flatcc_fb_parse@@Base+0x62b0>
   2fbf4:	ldr	r2, [ip]
   2fbf8:	ldr	r0, [r8]
   2fbfc:	add	r4, r2, r2, lsl #2
   2fc00:	add	r3, r0, r4, lsl #2
   2fc04:	str	r3, [lr]
   2fc08:	ldr	r1, [r7]
   2fc0c:	cmp	r1, r3
   2fc10:	bne	2fc60 <__flatcc_fb_parse@@Base+0x5730>
   2fc14:	cmp	r2, #0
   2fc18:	lsl	r1, r2, #1
   2fc1c:	mov	r6, ip
   2fc20:	movweq	r1, #1024	; 0x400
   2fc24:	str	r1, [ip]
   2fc28:	add	r1, r1, r1, lsl #2
   2fc2c:	lsl	r1, r1, #2
   2fc30:	bl	14844 <realloc@plt>
   2fc34:	cmp	r0, #0
   2fc38:	str	r0, [r8]
   2fc3c:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2fc40:	ldr	r1, [r6]
   2fc44:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2fc48:	mov	ip, r6
   2fc4c:	add	r1, r1, r1, lsl #2
   2fc50:	add	r1, r0, r1, lsl #2
   2fc54:	str	r1, [lr]
   2fc58:	add	r1, r0, r4, lsl #2
   2fc5c:	str	r1, [r7]
   2fc60:	mov	r2, #2
   2fc64:	add	r0, r5, #2
   2fc68:	str	r2, [r1, #4]
   2fc6c:	movw	r2, #15663	; 0x3d2f
   2fc70:	str	r5, [r1]
   2fc74:	b	2fd80 <__flatcc_fb_parse@@Base+0x5850>
   2fc78:	andeq	r8, r2, r6, lsl #10
   2fc7c:	ldr	r2, [ip]
   2fc80:	ldr	r0, [r8]
   2fc84:	add	r4, r2, r2, lsl #2
   2fc88:	add	r3, r0, r4, lsl #2
   2fc8c:	str	r3, [lr]
   2fc90:	ldr	r1, [r7]
   2fc94:	cmp	r1, r3
   2fc98:	bne	2fce8 <__flatcc_fb_parse@@Base+0x57b8>
   2fc9c:	cmp	r2, #0
   2fca0:	lsl	r1, r2, #1
   2fca4:	mov	r6, ip
   2fca8:	movweq	r1, #1024	; 0x400
   2fcac:	str	r1, [ip]
   2fcb0:	add	r1, r1, r1, lsl #2
   2fcb4:	lsl	r1, r1, #2
   2fcb8:	bl	14844 <realloc@plt>
   2fcbc:	cmp	r0, #0
   2fcc0:	str	r0, [r8]
   2fcc4:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2fcc8:	ldr	r1, [r6]
   2fccc:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2fcd0:	mov	ip, r6
   2fcd4:	add	r1, r1, r1, lsl #2
   2fcd8:	add	r1, r0, r1, lsl #2
   2fcdc:	str	r1, [lr]
   2fce0:	add	r1, r0, r4, lsl #2
   2fce4:	str	r1, [r7]
   2fce8:	mov	r2, #2
   2fcec:	add	r0, r5, #2
   2fcf0:	str	r2, [r1, #4]
   2fcf4:	str	r5, [r1]
   2fcf8:	movw	r2, #11565	; 0x2d2d
   2fcfc:	b	2fd80 <__flatcc_fb_parse@@Base+0x5850>
   2fd00:	ldr	r2, [ip]
   2fd04:	ldr	r0, [r8]
   2fd08:	add	r4, r2, r2, lsl #2
   2fd0c:	add	r3, r0, r4, lsl #2
   2fd10:	str	r3, [lr]
   2fd14:	ldr	r1, [r7]
   2fd18:	cmp	r1, r3
   2fd1c:	bne	2fd6c <__flatcc_fb_parse@@Base+0x583c>
   2fd20:	cmp	r2, #0
   2fd24:	lsl	r1, r2, #1
   2fd28:	mov	r6, ip
   2fd2c:	movweq	r1, #1024	; 0x400
   2fd30:	str	r1, [ip]
   2fd34:	add	r1, r1, r1, lsl #2
   2fd38:	lsl	r1, r1, #2
   2fd3c:	bl	14844 <realloc@plt>
   2fd40:	cmp	r0, #0
   2fd44:	str	r0, [r8]
   2fd48:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2fd4c:	ldr	r1, [r6]
   2fd50:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2fd54:	mov	ip, r6
   2fd58:	add	r1, r1, r1, lsl #2
   2fd5c:	add	r1, r0, r1, lsl #2
   2fd60:	str	r1, [lr]
   2fd64:	add	r1, r0, r4, lsl #2
   2fd68:	str	r1, [r7]
   2fd6c:	mov	r2, #2
   2fd70:	add	r0, r5, #2
   2fd74:	str	r2, [r1, #4]
   2fd78:	str	r5, [r1]
   2fd7c:	movw	r2, #15917	; 0x3e2d
   2fd80:	str	r2, [r1, #16]
   2fd84:	ldr	r2, [sp, #40]	; 0x28
   2fd88:	ldr	r2, [r2]
   2fd8c:	str	r2, [r1, #8]
   2fd90:	ldr	r2, [sl]
   2fd94:	sub	r2, r5, r2
   2fd98:	mov	r5, r0
   2fd9c:	add	r2, r2, #1
   2fda0:	str	r2, [r1, #12]
   2fda4:	add	r1, r1, #20
   2fda8:	str	r1, [r7]
   2fdac:	b	2cd3c <__flatcc_fb_parse@@Base+0x280c>
   2fdb0:	ldr	r2, [ip]
   2fdb4:	ldr	r0, [r8]
   2fdb8:	add	r6, r2, r2, lsl #2
   2fdbc:	add	r3, r0, r6, lsl #2
   2fdc0:	str	r3, [lr]
   2fdc4:	ldr	r1, [r7]
   2fdc8:	cmp	r1, r3
   2fdcc:	bne	2fe48 <__flatcc_fb_parse@@Base+0x5918>
   2fdd0:	cmp	r2, #0
   2fdd4:	lsl	r1, r2, #1
   2fdd8:	mov	r9, r8
   2fddc:	mov	r8, sl
   2fde0:	mov	sl, r5
   2fde4:	mov	r5, r7
   2fde8:	mov	r7, ip
   2fdec:	movweq	r1, #1024	; 0x400
   2fdf0:	str	r1, [ip]
   2fdf4:	add	r1, r1, r1, lsl #2
   2fdf8:	lsl	r1, r1, #2
   2fdfc:	bl	14844 <realloc@plt>
   2fe00:	cmp	r0, #0
   2fe04:	str	r0, [r9]
   2fe08:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2fe0c:	ldr	r1, [r7]
   2fe10:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2fe14:	mov	ip, r7
   2fe18:	mov	r2, r9
   2fe1c:	mov	r7, r5
   2fe20:	add	r1, r1, r1, lsl #2
   2fe24:	add	r1, r0, r1, lsl #2
   2fe28:	str	r1, [lr]
   2fe2c:	add	r1, r0, r6, lsl #2
   2fe30:	str	r1, [r5]
   2fe34:	mov	r5, sl
   2fe38:	mov	sl, r8
   2fe3c:	mov	r8, r9
   2fe40:	ldr	r9, [pc, #3996]	; 30de4 <__flatcc_fb_parse@@Base+0x68b4>
   2fe44:	add	r9, pc, r9
   2fe48:	mov	r0, #2
   2fe4c:	str	r0, [r1, #4]
   2fe50:	str	r5, [r1]
   2fe54:	movw	r0, #14906	; 0x3a3a
   2fe58:	b	30348 <__flatcc_fb_parse@@Base+0x5e18>
   2fe5c:	ldr	r2, [ip]
   2fe60:	ldr	r0, [r8]
   2fe64:	add	r6, r2, r2, lsl #2
   2fe68:	add	r3, r0, r6, lsl #2
   2fe6c:	str	r3, [lr]
   2fe70:	ldr	r1, [r7]
   2fe74:	cmp	r1, r3
   2fe78:	bne	2fef4 <__flatcc_fb_parse@@Base+0x59c4>
   2fe7c:	cmp	r2, #0
   2fe80:	lsl	r1, r2, #1
   2fe84:	mov	r9, r8
   2fe88:	mov	r8, sl
   2fe8c:	mov	sl, r5
   2fe90:	mov	r5, r7
   2fe94:	mov	r7, ip
   2fe98:	movweq	r1, #1024	; 0x400
   2fe9c:	str	r1, [ip]
   2fea0:	add	r1, r1, r1, lsl #2
   2fea4:	lsl	r1, r1, #2
   2fea8:	bl	14844 <realloc@plt>
   2feac:	cmp	r0, #0
   2feb0:	str	r0, [r9]
   2feb4:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2feb8:	ldr	r1, [r7]
   2febc:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2fec0:	mov	ip, r7
   2fec4:	mov	r2, r9
   2fec8:	mov	r7, r5
   2fecc:	add	r1, r1, r1, lsl #2
   2fed0:	add	r1, r0, r1, lsl #2
   2fed4:	str	r1, [lr]
   2fed8:	add	r1, r0, r6, lsl #2
   2fedc:	str	r1, [r5]
   2fee0:	mov	r5, sl
   2fee4:	mov	sl, r8
   2fee8:	mov	r8, r9
   2feec:	ldr	r9, [pc, #3976]	; 30e7c <__flatcc_fb_parse@@Base+0x694c>
   2fef0:	add	r9, pc, r9
   2fef4:	mov	r0, #2
   2fef8:	str	r0, [r1, #4]
   2fefc:	movw	r0, #15677	; 0x3d3d
   2ff00:	str	r5, [r1]
   2ff04:	str	r0, [r1, #16]
   2ff08:	ldr	r0, [sp, #40]	; 0x28
   2ff0c:	ldr	r0, [r0]
   2ff10:	str	r0, [r1, #8]
   2ff14:	ldr	r0, [sl]
   2ff18:	sub	r0, r5, r0
   2ff1c:	add	r0, r0, #1
   2ff20:	str	r0, [r1, #12]
   2ff24:	add	r0, r1, #20
   2ff28:	str	r0, [r7]
   2ff2c:	ldr	r2, [ip]
   2ff30:	ldr	r0, [r8]
   2ff34:	add	r6, r2, r2, lsl #2
   2ff38:	add	r3, r0, r6, lsl #2
   2ff3c:	str	r3, [lr]
   2ff40:	ldr	r1, [r7]
   2ff44:	cmp	r1, r3
   2ff48:	bne	2ffc4 <__flatcc_fb_parse@@Base+0x5a94>
   2ff4c:	cmp	r2, #0
   2ff50:	lsl	r1, r2, #1
   2ff54:	mov	r9, r8
   2ff58:	mov	r8, sl
   2ff5c:	mov	sl, r5
   2ff60:	mov	r5, r7
   2ff64:	mov	r7, ip
   2ff68:	movweq	r1, #1024	; 0x400
   2ff6c:	str	r1, [ip]
   2ff70:	add	r1, r1, r1, lsl #2
   2ff74:	lsl	r1, r1, #2
   2ff78:	bl	14844 <realloc@plt>
   2ff7c:	cmp	r0, #0
   2ff80:	str	r0, [r9]
   2ff84:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   2ff88:	ldr	r1, [r7]
   2ff8c:	ldr	lr, [fp, #-36]	; 0xffffffdc
   2ff90:	mov	ip, r7
   2ff94:	mov	r2, r9
   2ff98:	mov	r7, r5
   2ff9c:	add	r1, r1, r1, lsl #2
   2ffa0:	add	r1, r0, r1, lsl #2
   2ffa4:	str	r1, [lr]
   2ffa8:	add	r1, r0, r6, lsl #2
   2ffac:	str	r1, [r5]
   2ffb0:	mov	r5, sl
   2ffb4:	mov	sl, r8
   2ffb8:	mov	r8, r9
   2ffbc:	ldr	r9, [pc, #4036]	; 30f88 <__flatcc_fb_parse@@Base+0x6a58>
   2ffc0:	add	r9, pc, r9
   2ffc4:	str	r5, [r1]
   2ffc8:	mov	r0, #61	; 0x3d
   2ffcc:	str	r0, [r1, #16]
   2ffd0:	sub	r0, r4, r5
   2ffd4:	str	r0, [r1, #4]
   2ffd8:	b	3034c <__flatcc_fb_parse@@Base+0x5e1c>
   2ffdc:	ldr	r5, [fp, #-32]	; 0xffffffe0
   2ffe0:	ldr	sl, [sp, #32]
   2ffe4:	ldr	r9, [pc, #4000]	; 30f8c <__flatcc_fb_parse@@Base+0x6a5c>
   2ffe8:	add	r9, pc, r9
   2ffec:	b	2fff8 <__flatcc_fb_parse@@Base+0x5ac8>
   2fff0:	andeq	r8, r2, sl, lsr r1
   2fff4:	add	r5, r7, #1
   2fff8:	ldr	r6, [sp, #36]	; 0x24
   2fffc:	mov	r7, r8
   30000:	ldr	r1, [fp, #-36]	; 0xffffffdc
   30004:	ldr	r8, [sp, #24]
   30008:	add	r4, r6, r6, lsl #2
   3000c:	add	r3, r0, r4, lsl #2
   30010:	cmp	r2, r3
   30014:	str	r3, [r1]
   30018:	bne	30070 <__flatcc_fb_parse@@Base+0x5b40>
   3001c:	cmp	r6, #0
   30020:	lsl	r2, r6, #1
   30024:	ldr	r6, [sp, #28]
   30028:	movweq	r2, #1024	; 0x400
   3002c:	add	r1, r2, r2, lsl #2
   30030:	lsl	r1, r1, #2
   30034:	str	r2, [r6]
   30038:	bl	14844 <realloc@plt>
   3003c:	cmp	r0, #0
   30040:	str	r0, [r8]
   30044:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   30048:	ldr	r1, [r6]
   3004c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   30050:	add	r1, r1, r1, lsl #2
   30054:	add	r1, r0, r1, lsl #2
   30058:	str	r1, [r2]
   3005c:	add	r2, r0, r4, lsl #2
   30060:	ldr	r0, [sp, #40]	; 0x28
   30064:	str	r2, [r7]
   30068:	ldr	lr, [sl]
   3006c:	ldr	ip, [r0]
   30070:	sub	r0, r5, lr
   30074:	add	r0, r0, #1
   30078:	mov	r1, #0
   3007c:	str	r5, [r2]
   30080:	str	r1, [r2, #4]
   30084:	str	ip, [r2, #8]
   30088:	str	r0, [r2, #12]
   3008c:	mov	r0, #23
   30090:	str	r0, [r2, #16]
   30094:	add	r0, r2, #20
   30098:	str	r0, [r7]
   3009c:	ldr	lr, [fp, #-36]	; 0xffffffdc
   300a0:	ldr	ip, [sp, #28]
   300a4:	b	2cd3c <__flatcc_fb_parse@@Base+0x280c>
   300a8:	ldr	r2, [ip]
   300ac:	ldr	r0, [r8]
   300b0:	add	r4, r2, r2, lsl #2
   300b4:	add	r3, r0, r4, lsl #2
   300b8:	str	r3, [lr]
   300bc:	ldr	r1, [r7]
   300c0:	cmp	r1, r3
   300c4:	bne	3012c <__flatcc_fb_parse@@Base+0x5bfc>
   300c8:	cmp	r2, #0
   300cc:	lsl	r1, r2, #1
   300d0:	str	r6, [sp, #36]	; 0x24
   300d4:	mov	r6, r5
   300d8:	mov	r5, r7
   300dc:	mov	r7, ip
   300e0:	movweq	r1, #1024	; 0x400
   300e4:	str	r1, [ip]
   300e8:	add	r1, r1, r1, lsl #2
   300ec:	lsl	r1, r1, #2
   300f0:	bl	14844 <realloc@plt>
   300f4:	cmp	r0, #0
   300f8:	str	r0, [r8]
   300fc:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   30100:	ldr	r1, [r7]
   30104:	ldr	lr, [fp, #-36]	; 0xffffffdc
   30108:	mov	ip, r7
   3010c:	mov	r7, r5
   30110:	add	r1, r1, r1, lsl #2
   30114:	add	r1, r0, r1, lsl #2
   30118:	str	r1, [lr]
   3011c:	add	r1, r0, r4, lsl #2
   30120:	str	r1, [r5]
   30124:	mov	r5, r6
   30128:	ldr	r6, [sp, #36]	; 0x24
   3012c:	mov	r0, #1
   30130:	str	r0, [r1, #4]
   30134:	mov	r0, #5
   30138:	str	r5, [r1]
   3013c:	b	2e5f8 <__flatcc_fb_parse@@Base+0x40c8>
   30140:	ldr	r2, [ip]
   30144:	ldr	r0, [r8]
   30148:	add	r6, r2, r2, lsl #2
   3014c:	add	r3, r0, r6, lsl #2
   30150:	str	r3, [lr]
   30154:	ldr	r1, [r7]
   30158:	cmp	r1, r3
   3015c:	bne	301d8 <__flatcc_fb_parse@@Base+0x5ca8>
   30160:	cmp	r2, #0
   30164:	lsl	r1, r2, #1
   30168:	mov	r9, r8
   3016c:	mov	r8, sl
   30170:	mov	sl, r5
   30174:	mov	r5, r7
   30178:	mov	r7, ip
   3017c:	movweq	r1, #1024	; 0x400
   30180:	str	r1, [ip]
   30184:	add	r1, r1, r1, lsl #2
   30188:	lsl	r1, r1, #2
   3018c:	bl	14844 <realloc@plt>
   30190:	cmp	r0, #0
   30194:	str	r0, [r9]
   30198:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   3019c:	ldr	r1, [r7]
   301a0:	ldr	lr, [fp, #-36]	; 0xffffffdc
   301a4:	mov	ip, r7
   301a8:	mov	r2, r9
   301ac:	mov	r7, r5
   301b0:	add	r1, r1, r1, lsl #2
   301b4:	add	r1, r0, r1, lsl #2
   301b8:	str	r1, [lr]
   301bc:	add	r1, r0, r6, lsl #2
   301c0:	str	r1, [r5]
   301c4:	mov	r5, sl
   301c8:	mov	sl, r8
   301cc:	mov	r8, r9
   301d0:	ldr	r9, [pc, #3964]	; 31154 <__flatcc_fb_parse@@Base+0x6c24>
   301d4:	add	r9, pc, r9
   301d8:	mov	r0, #2
   301dc:	str	r0, [r1, #4]
   301e0:	str	r5, [r1]
   301e4:	movw	r0, #15934	; 0x3e3e
   301e8:	b	30348 <__flatcc_fb_parse@@Base+0x5e18>
   301ec:	cmp	r0, #46	; 0x2e
   301f0:	bne	302a0 <__flatcc_fb_parse@@Base+0x5d70>
   301f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   301f8:	add	r4, r5, #2
   301fc:	cmp	r4, r0
   30200:	beq	30944 <__flatcc_fb_parse@@Base+0x6414>
   30204:	ldrb	r0, [r4]
   30208:	cmp	r0, #46	; 0x2e
   3020c:	bne	30944 <__flatcc_fb_parse@@Base+0x6414>
   30210:	ldr	r2, [ip]
   30214:	ldr	r0, [r8]
   30218:	add	r4, r2, r2, lsl #2
   3021c:	add	r3, r0, r4, lsl #2
   30220:	str	r3, [lr]
   30224:	ldr	r1, [r7]
   30228:	cmp	r1, r3
   3022c:	bne	3027c <__flatcc_fb_parse@@Base+0x5d4c>
   30230:	cmp	r2, #0
   30234:	lsl	r1, r2, #1
   30238:	mov	r6, ip
   3023c:	movweq	r1, #1024	; 0x400
   30240:	str	r1, [ip]
   30244:	add	r1, r1, r1, lsl #2
   30248:	lsl	r1, r1, #2
   3024c:	bl	14844 <realloc@plt>
   30250:	cmp	r0, #0
   30254:	str	r0, [r8]
   30258:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   3025c:	ldr	r1, [r6]
   30260:	ldr	lr, [fp, #-36]	; 0xffffffdc
   30264:	mov	ip, r6
   30268:	add	r1, r1, r1, lsl #2
   3026c:	add	r1, r0, r1, lsl #2
   30270:	str	r1, [lr]
   30274:	add	r1, r0, r4, lsl #2
   30278:	str	r1, [r7]
   3027c:	mov	r2, #3
   30280:	add	r0, r5, #3
   30284:	str	r2, [r1, #4]
   30288:	movw	r2, #11822	; 0x2e2e
   3028c:	str	r5, [r1]
   30290:	movt	r2, #46	; 0x2e
   30294:	b	2fd80 <__flatcc_fb_parse@@Base+0x5850>
   30298:	andeq	r7, r2, r6, lsr #29
   3029c:	andeq	r7, r2, r6, ror lr
   302a0:	ldr	r2, [ip]
   302a4:	ldr	r0, [r8]
   302a8:	add	r6, r2, r2, lsl #2
   302ac:	add	r3, r0, r6, lsl #2
   302b0:	str	r3, [lr]
   302b4:	ldr	r1, [r7]
   302b8:	cmp	r1, r3
   302bc:	bne	30338 <__flatcc_fb_parse@@Base+0x5e08>
   302c0:	cmp	r2, #0
   302c4:	lsl	r1, r2, #1
   302c8:	mov	r9, r8
   302cc:	mov	r8, sl
   302d0:	mov	sl, r5
   302d4:	mov	r5, r7
   302d8:	mov	r7, ip
   302dc:	movweq	r1, #1024	; 0x400
   302e0:	str	r1, [ip]
   302e4:	add	r1, r1, r1, lsl #2
   302e8:	lsl	r1, r1, #2
   302ec:	bl	14844 <realloc@plt>
   302f0:	cmp	r0, #0
   302f4:	str	r0, [r9]
   302f8:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   302fc:	ldr	r1, [r7]
   30300:	ldr	lr, [fp, #-36]	; 0xffffffdc
   30304:	mov	ip, r7
   30308:	mov	r2, r9
   3030c:	mov	r7, r5
   30310:	add	r1, r1, r1, lsl #2
   30314:	add	r1, r0, r1, lsl #2
   30318:	str	r1, [lr]
   3031c:	add	r1, r0, r6, lsl #2
   30320:	str	r1, [r5]
   30324:	mov	r5, sl
   30328:	mov	sl, r8
   3032c:	mov	r8, r9
   30330:	ldr	r9, [pc, #3988]	; 312cc <__flatcc_fb_parse@@Base+0x6d9c>
   30334:	add	r9, pc, r9
   30338:	mov	r0, #1
   3033c:	str	r0, [r1, #4]
   30340:	str	r5, [r1]
   30344:	mov	r0, #46	; 0x2e
   30348:	str	r0, [r1, #16]
   3034c:	ldr	r0, [sp, #40]	; 0x28
   30350:	ldr	r0, [r0]
   30354:	str	r0, [r1, #8]
   30358:	ldr	r0, [sl]
   3035c:	sub	r0, r5, r0
   30360:	mov	r5, r4
   30364:	add	r0, r0, #1
   30368:	str	r0, [r1, #12]
   3036c:	add	r0, r1, #20
   30370:	str	r0, [r7]
   30374:	b	2cd3c <__flatcc_fb_parse@@Base+0x280c>
   30378:	ldr	r2, [ip]
   3037c:	ldr	r0, [r8]
   30380:	add	r6, r2, r2, lsl #2
   30384:	add	r3, r0, r6, lsl #2
   30388:	str	r3, [lr]
   3038c:	ldr	r1, [r7]
   30390:	cmp	r1, r3
   30394:	bne	30410 <__flatcc_fb_parse@@Base+0x5ee0>
   30398:	cmp	r2, #0
   3039c:	lsl	r1, r2, #1
   303a0:	mov	r9, r8
   303a4:	mov	r8, sl
   303a8:	mov	sl, r5
   303ac:	mov	r5, r7
   303b0:	mov	r7, ip
   303b4:	movweq	r1, #1024	; 0x400
   303b8:	str	r1, [ip]
   303bc:	add	r1, r1, r1, lsl #2
   303c0:	lsl	r1, r1, #2
   303c4:	bl	14844 <realloc@plt>
   303c8:	cmp	r0, #0
   303cc:	str	r0, [r9]
   303d0:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   303d4:	ldr	r1, [r7]
   303d8:	ldr	lr, [fp, #-36]	; 0xffffffdc
   303dc:	mov	ip, r7
   303e0:	mov	r2, r9
   303e4:	mov	r7, r5
   303e8:	add	r1, r1, r1, lsl #2
   303ec:	add	r1, r0, r1, lsl #2
   303f0:	str	r1, [lr]
   303f4:	add	r1, r0, r6, lsl #2
   303f8:	str	r1, [r5]
   303fc:	mov	r5, sl
   30400:	mov	sl, r8
   30404:	mov	r8, r9
   30408:	ldr	r9, [pc, #3760]	; 312c0 <__flatcc_fb_parse@@Base+0x6d90>
   3040c:	add	r9, pc, r9
   30410:	mov	r0, #2
   30414:	str	r0, [r1, #4]
   30418:	str	r5, [r1]
   3041c:	movw	r0, #15420	; 0x3c3c
   30420:	b	30348 <__flatcc_fb_parse@@Base+0x5e18>
   30424:	mov	r1, #0
   30428:	add	r7, r0, r1
   3042c:	ldr	r1, [sp, #16]
   30430:	sub	r0, r7, r5
   30434:	subs	r0, r0, #3
   30438:	clz	r0, r0
   3043c:	lsr	r0, r0, #5
   30440:	str	r0, [r1, #32]
   30444:	bne	30670 <__flatcc_fb_parse@@Base+0x6140>
   30448:	ldr	r2, [ip]
   3044c:	ldr	r0, [r8]
   30450:	mov	r6, r7
   30454:	ldr	r7, [sp, #20]
   30458:	add	r4, r2, r2, lsl #2
   3045c:	add	r3, r0, r4, lsl #2
   30460:	str	r3, [lr]
   30464:	ldr	r1, [r7]
   30468:	cmp	r1, r3
   3046c:	bne	304c0 <__flatcc_fb_parse@@Base+0x5f90>
   30470:	cmp	r2, #0
   30474:	lsl	r1, r2, #1
   30478:	mov	r5, ip
   3047c:	movweq	r1, #1024	; 0x400
   30480:	str	r1, [ip]
   30484:	add	r1, r1, r1, lsl #2
   30488:	lsl	r1, r1, #2
   3048c:	bl	14844 <realloc@plt>
   30490:	cmp	r0, #0
   30494:	str	r0, [r8]
   30498:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   3049c:	ldr	r1, [r5]
   304a0:	ldr	lr, [fp, #-36]	; 0xffffffdc
   304a4:	ldr	r7, [sp, #20]
   304a8:	mov	ip, r5
   304ac:	add	r1, r1, r1, lsl #2
   304b0:	add	r1, r0, r1, lsl #2
   304b4:	str	r1, [lr]
   304b8:	add	r1, r0, r4, lsl #2
   304bc:	str	r1, [r7]
   304c0:	mov	r0, #0
   304c4:	str	r0, [r1, #4]
   304c8:	movw	r0, #64572	; 0xfc3c
   304cc:	str	r6, [r1]
   304d0:	movt	r0, #65535	; 0xffff
   304d4:	str	r0, [r1, #16]
   304d8:	ldr	r0, [sp, #40]	; 0x28
   304dc:	ldr	r0, [r0]
   304e0:	str	r0, [r1, #8]
   304e4:	ldr	r0, [sl]
   304e8:	sub	r0, r6, r0
   304ec:	add	r0, r0, #1
   304f0:	str	r0, [r1, #12]
   304f4:	add	r0, r1, #20
   304f8:	str	r0, [r7]
   304fc:	mov	r7, r6
   30500:	b	30670 <__flatcc_fb_parse@@Base+0x6140>
   30504:	cmp	r0, #0
   30508:	beq	31210 <__flatcc_fb_parse@@Base+0x6ce0>
   3050c:	ldrb	r0, [sl]
   30510:	add	r7, r6, #1
   30514:	cmp	r0, #32
   30518:	cmpne	r0, #9
   3051c:	bne	305b4 <__flatcc_fb_parse@@Base+0x6084>
   30520:	ldr	r0, [sp, #16]
   30524:	ldr	r0, [r0, #32]
   30528:	cmp	r0, #0
   3052c:	beq	30670 <__flatcc_fb_parse@@Base+0x6140>
   30530:	ldr	r2, [ip]
   30534:	ldr	r0, [r8]
   30538:	ldr	r6, [sp, #20]
   3053c:	movw	r4, #64572	; 0xfc3c
   30540:	movt	r4, #65535	; 0xffff
   30544:	add	r5, r2, r2, lsl #2
   30548:	add	r3, r0, r5, lsl #2
   3054c:	str	r3, [lr]
   30550:	ldr	r1, [r6]
   30554:	cmp	r1, r3
   30558:	bne	30638 <__flatcc_fb_parse@@Base+0x6108>
   3055c:	cmp	r2, #0
   30560:	lsl	r1, r2, #1
   30564:	mov	r4, r5
   30568:	mov	r5, ip
   3056c:	movweq	r1, #1024	; 0x400
   30570:	str	r1, [ip]
   30574:	add	r1, r1, r1, lsl #2
   30578:	lsl	r1, r1, #2
   3057c:	bl	14844 <realloc@plt>
   30580:	cmp	r0, #0
   30584:	str	r0, [r8]
   30588:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   3058c:	ldr	r1, [r5]
   30590:	ldr	lr, [fp, #-36]	; 0xffffffdc
   30594:	ldr	r6, [sp, #20]
   30598:	add	r1, r1, r1, lsl #2
   3059c:	add	r1, r0, r1, lsl #2
   305a0:	str	r1, [lr]
   305a4:	add	r1, r0, r4, lsl #2
   305a8:	movw	r4, #64572	; 0xfc3c
   305ac:	movt	r4, #65535	; 0xffff
   305b0:	b	30630 <__flatcc_fb_parse@@Base+0x6100>
   305b4:	ldr	r2, [ip]
   305b8:	ldr	r0, [r8]
   305bc:	ldr	r1, [sp, #20]
   305c0:	mov	r4, #7
   305c4:	add	r6, r2, r2, lsl #2
   305c8:	add	r3, r0, r6, lsl #2
   305cc:	str	r3, [lr]
   305d0:	ldr	r1, [r1]
   305d4:	cmp	r1, r3
   305d8:	beq	305e8 <__flatcc_fb_parse@@Base+0x60b8>
   305dc:	ldr	r6, [sp, #20]
   305e0:	b	30638 <__flatcc_fb_parse@@Base+0x6108>
   305e4:	andeq	r7, r2, sl, lsl #22
   305e8:	cmp	r2, #0
   305ec:	lsl	r1, r2, #1
   305f0:	mov	r5, ip
   305f4:	movweq	r1, #1024	; 0x400
   305f8:	str	r1, [ip]
   305fc:	add	r1, r1, r1, lsl #2
   30600:	lsl	r1, r1, #2
   30604:	bl	14844 <realloc@plt>
   30608:	cmp	r0, #0
   3060c:	str	r0, [r8]
   30610:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   30614:	ldr	r1, [r5]
   30618:	ldr	lr, [fp, #-36]	; 0xffffffdc
   3061c:	add	r1, r1, r1, lsl #2
   30620:	add	r1, r0, r1, lsl #2
   30624:	str	r1, [lr]
   30628:	add	r1, r0, r6, lsl #2
   3062c:	ldr	r6, [sp, #20]
   30630:	str	r1, [r6]
   30634:	mov	ip, r5
   30638:	mov	r0, #1
   3063c:	str	r0, [r1, #4]
   30640:	ldr	r0, [sp, #40]	; 0x28
   30644:	str	sl, [r1]
   30648:	str	r4, [r1, #16]
   3064c:	ldr	r0, [r0]
   30650:	str	r0, [r1, #8]
   30654:	ldr	r0, [sp, #32]
   30658:	ldr	r0, [r0]
   3065c:	sub	r0, sl, r0
   30660:	add	r0, r0, #1
   30664:	str	r0, [r1, #12]
   30668:	add	r0, r1, #20
   3066c:	str	r0, [r6]
   30670:	mov	r0, r7
   30674:	mov	r6, r0
   30678:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3067c:	cmp	r0, r6
   30680:	beq	306b4 <__flatcc_fb_parse@@Base+0x6184>
   30684:	mov	r0, r6
   30688:	ldrb	r1, [r0], #1
   3068c:	cmp	r1, #32
   30690:	bcc	3069c <__flatcc_fb_parse@@Base+0x616c>
   30694:	cmp	r1, #127	; 0x7f
   30698:	bne	30674 <__flatcc_fb_parse@@Base+0x6144>
   3069c:	sub	r5, r0, #1
   306a0:	mov	r4, #0
   306a4:	cmp	r7, r5
   306a8:	bne	306c4 <__flatcc_fb_parse@@Base+0x6194>
   306ac:	mov	sl, r7
   306b0:	b	307a4 <__flatcc_fb_parse@@Base+0x6274>
   306b4:	ldr	r5, [fp, #-32]	; 0xffffffe0
   306b8:	mov	r4, #1
   306bc:	cmp	r7, r5
   306c0:	beq	306ac <__flatcc_fb_parse@@Base+0x617c>
   306c4:	ldr	r0, [sp, #16]
   306c8:	mov	sl, r5
   306cc:	ldr	r0, [r0, #32]
   306d0:	cmp	r0, #0
   306d4:	beq	307a4 <__flatcc_fb_parse@@Base+0x6274>
   306d8:	ldr	r2, [ip]
   306dc:	ldr	r0, [r8]
   306e0:	mov	sl, r7
   306e4:	ldr	r7, [sp, #20]
   306e8:	add	r9, r2, r2, lsl #2
   306ec:	add	r3, r0, r9, lsl #2
   306f0:	str	r3, [lr]
   306f4:	ldr	r1, [r7]
   306f8:	cmp	r1, r3
   306fc:	bne	30758 <__flatcc_fb_parse@@Base+0x6228>
   30700:	cmp	r2, #0
   30704:	lsl	r1, r2, #1
   30708:	mov	r7, r8
   3070c:	mov	r8, ip
   30710:	movweq	r1, #1024	; 0x400
   30714:	str	r1, [ip]
   30718:	add	r1, r1, r1, lsl #2
   3071c:	lsl	r1, r1, #2
   30720:	bl	14844 <realloc@plt>
   30724:	cmp	r0, #0
   30728:	str	r0, [r7]
   3072c:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   30730:	ldr	r1, [r8]
   30734:	ldr	lr, [fp, #-36]	; 0xffffffdc
   30738:	mov	ip, r8
   3073c:	ldr	r7, [sp, #20]
   30740:	ldr	r8, [sp, #24]
   30744:	add	r1, r1, r1, lsl #2
   30748:	add	r1, r0, r1, lsl #2
   3074c:	str	r1, [lr]
   30750:	add	r1, r0, r9, lsl #2
   30754:	str	r1, [r7]
   30758:	movw	r0, #64572	; 0xfc3c
   3075c:	str	sl, [r1]
   30760:	movt	r0, #65535	; 0xffff
   30764:	str	r0, [r1, #16]
   30768:	sub	r0, r5, sl
   3076c:	str	r0, [r1, #4]
   30770:	ldr	r0, [sp, #40]	; 0x28
   30774:	ldr	r0, [r0]
   30778:	str	r0, [r1, #8]
   3077c:	ldr	r0, [sp, #32]
   30780:	ldr	r0, [r0]
   30784:	sub	r0, sl, r0
   30788:	mov	sl, r5
   3078c:	add	r0, r0, #1
   30790:	str	r0, [r1, #12]
   30794:	add	r0, r1, #20
   30798:	str	r0, [r7]
   3079c:	ldr	r9, [pc, #2836]	; 312b8 <__flatcc_fb_parse@@Base+0x6d88>
   307a0:	add	r9, pc, r9
   307a4:	ldr	r7, [sp, #20]
   307a8:	cmp	r4, #0
   307ac:	bne	31210 <__flatcc_fb_parse@@Base+0x6ce0>
   307b0:	ldrb	r0, [r5]
   307b4:	cmp	r0, #13
   307b8:	cmpne	r0, #10
   307bc:	bne	30504 <__flatcc_fb_parse@@Base+0x5fd4>
   307c0:	ldr	r0, [sp, #16]
   307c4:	ldr	sl, [sp, #32]
   307c8:	mov	r1, #0
   307cc:	str	r1, [r0, #32]
   307d0:	b	2cd3c <__flatcc_fb_parse@@Base+0x280c>
   307d4:			; <UNDEFINED> instruction: 0x000279ba
   307d8:	andeq	r7, r2, r2, lsl r9
   307dc:	mov	r1, #0
   307e0:	add	r4, r0, r1
   307e4:	ldr	r1, [sp, #16]
   307e8:	sub	r0, r4, r5
   307ec:	subs	r0, r0, #3
   307f0:	clz	r0, r0
   307f4:	lsr	r0, r0, #5
   307f8:	str	r0, [r1, #32]
   307fc:	bne	30c28 <__flatcc_fb_parse@@Base+0x66f8>
   30800:	ldr	r2, [ip]
   30804:	ldr	r0, [r8]
   30808:	add	r5, r2, r2, lsl #2
   3080c:	add	r3, r0, r5, lsl #2
   30810:	str	r3, [lr]
   30814:	ldr	r1, [r7]
   30818:	cmp	r1, r3
   3081c:	bne	3086c <__flatcc_fb_parse@@Base+0x633c>
   30820:	cmp	r2, #0
   30824:	lsl	r1, r2, #1
   30828:	mov	r6, ip
   3082c:	movweq	r1, #1024	; 0x400
   30830:	str	r1, [ip]
   30834:	add	r1, r1, r1, lsl #2
   30838:	lsl	r1, r1, #2
   3083c:	bl	14844 <realloc@plt>
   30840:	cmp	r0, #0
   30844:	str	r0, [r8]
   30848:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   3084c:	ldr	r1, [r6]
   30850:	ldr	lr, [fp, #-36]	; 0xffffffdc
   30854:	mov	ip, r6
   30858:	add	r1, r1, r1, lsl #2
   3085c:	add	r1, r0, r1, lsl #2
   30860:	str	r1, [lr]
   30864:	add	r1, r0, r5, lsl #2
   30868:	str	r1, [r7]
   3086c:	mov	r0, #0
   30870:	str	r0, [r1, #4]
   30874:	movw	r0, #64572	; 0xfc3c
   30878:	str	r4, [r1]
   3087c:	movt	r0, #65535	; 0xffff
   30880:	str	r0, [r1, #16]
   30884:	ldr	r0, [sp, #40]	; 0x28
   30888:	ldr	r0, [r0]
   3088c:	str	r0, [r1, #8]
   30890:	ldr	r0, [sl]
   30894:	sub	r0, r4, r0
   30898:	b	30f2c <__flatcc_fb_parse@@Base+0x69fc>
   3089c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   308a0:	add	r4, r5, #3
   308a4:	cmp	r4, r0
   308a8:	beq	30a98 <__flatcc_fb_parse@@Base+0x6568>
   308ac:	ldrb	r0, [r4]
   308b0:	cmp	r0, #61	; 0x3d
   308b4:	bne	30a98 <__flatcc_fb_parse@@Base+0x6568>
   308b8:	ldr	r2, [ip]
   308bc:	ldr	r0, [r8]
   308c0:	add	r4, r2, r2, lsl #2
   308c4:	add	r3, r0, r4, lsl #2
   308c8:	str	r3, [lr]
   308cc:	ldr	r1, [r7]
   308d0:	cmp	r1, r3
   308d4:	bne	30924 <__flatcc_fb_parse@@Base+0x63f4>
   308d8:	cmp	r2, #0
   308dc:	lsl	r1, r2, #1
   308e0:	mov	r6, ip
   308e4:	movweq	r1, #1024	; 0x400
   308e8:	str	r1, [ip]
   308ec:	add	r1, r1, r1, lsl #2
   308f0:	lsl	r1, r1, #2
   308f4:	bl	14844 <realloc@plt>
   308f8:	cmp	r0, #0
   308fc:	str	r0, [r8]
   30900:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   30904:	ldr	r1, [r6]
   30908:	ldr	lr, [fp, #-36]	; 0xffffffdc
   3090c:	mov	ip, r6
   30910:	add	r1, r1, r1, lsl #2
   30914:	add	r1, r0, r1, lsl #2
   30918:	str	r1, [lr]
   3091c:	add	r1, r0, r4, lsl #2
   30920:	str	r1, [r7]
   30924:	mov	r2, #4
   30928:	add	r0, r5, #4
   3092c:	str	r2, [r1, #4]
   30930:	movw	r2, #15934	; 0x3e3e
   30934:	str	r5, [r1]
   30938:	movt	r2, #15678	; 0x3d3e
   3093c:	b	2fd80 <__flatcc_fb_parse@@Base+0x5850>
   30940:			; <UNDEFINED> instruction: 0x000277be
   30944:	ldr	r2, [ip]
   30948:	ldr	r0, [r8]
   3094c:	add	r6, r2, r2, lsl #2
   30950:	add	r3, r0, r6, lsl #2
   30954:	str	r3, [lr]
   30958:	ldr	r1, [r7]
   3095c:	cmp	r1, r3
   30960:	bne	309dc <__flatcc_fb_parse@@Base+0x64ac>
   30964:	cmp	r2, #0
   30968:	lsl	r1, r2, #1
   3096c:	mov	r9, r8
   30970:	mov	r8, sl
   30974:	mov	sl, r5
   30978:	mov	r5, r7
   3097c:	mov	r7, ip
   30980:	movweq	r1, #1024	; 0x400
   30984:	str	r1, [ip]
   30988:	add	r1, r1, r1, lsl #2
   3098c:	lsl	r1, r1, #2
   30990:	bl	14844 <realloc@plt>
   30994:	cmp	r0, #0
   30998:	str	r0, [r9]
   3099c:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   309a0:	ldr	r1, [r7]
   309a4:	ldr	lr, [fp, #-36]	; 0xffffffdc
   309a8:	mov	ip, r7
   309ac:	mov	r2, r9
   309b0:	mov	r7, r5
   309b4:	add	r1, r1, r1, lsl #2
   309b8:	add	r1, r0, r1, lsl #2
   309bc:	str	r1, [lr]
   309c0:	add	r1, r0, r6, lsl #2
   309c4:	str	r1, [r5]
   309c8:	mov	r5, sl
   309cc:	mov	sl, r8
   309d0:	mov	r8, r9
   309d4:	ldr	r9, [pc, #2284]	; 312c8 <__flatcc_fb_parse@@Base+0x6d98>
   309d8:	add	r9, pc, r9
   309dc:	mov	r0, #2
   309e0:	str	r0, [r1, #4]
   309e4:	str	r5, [r1]
   309e8:	movw	r0, #11822	; 0x2e2e
   309ec:	b	30348 <__flatcc_fb_parse@@Base+0x5e18>
   309f0:	andeq	r7, r2, sl, lsl #15
   309f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   309f8:	add	r4, r5, #3
   309fc:	cmp	r4, r0
   30a00:	beq	30b44 <__flatcc_fb_parse@@Base+0x6614>
   30a04:	ldrb	r0, [r4]
   30a08:	cmp	r0, #61	; 0x3d
   30a0c:	bne	30b44 <__flatcc_fb_parse@@Base+0x6614>
   30a10:	ldr	r2, [ip]
   30a14:	ldr	r0, [r8]
   30a18:	add	r4, r2, r2, lsl #2
   30a1c:	add	r3, r0, r4, lsl #2
   30a20:	str	r3, [lr]
   30a24:	ldr	r1, [r7]
   30a28:	cmp	r1, r3
   30a2c:	bne	30a7c <__flatcc_fb_parse@@Base+0x654c>
   30a30:	cmp	r2, #0
   30a34:	lsl	r1, r2, #1
   30a38:	mov	r6, ip
   30a3c:	movweq	r1, #1024	; 0x400
   30a40:	str	r1, [ip]
   30a44:	add	r1, r1, r1, lsl #2
   30a48:	lsl	r1, r1, #2
   30a4c:	bl	14844 <realloc@plt>
   30a50:	cmp	r0, #0
   30a54:	str	r0, [r8]
   30a58:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   30a5c:	ldr	r1, [r6]
   30a60:	ldr	lr, [fp, #-36]	; 0xffffffdc
   30a64:	mov	ip, r6
   30a68:	add	r1, r1, r1, lsl #2
   30a6c:	add	r1, r0, r1, lsl #2
   30a70:	str	r1, [lr]
   30a74:	add	r1, r0, r4, lsl #2
   30a78:	str	r1, [r7]
   30a7c:	mov	r2, #4
   30a80:	add	r0, r5, #4
   30a84:	str	r2, [r1, #4]
   30a88:	movw	r2, #15420	; 0x3c3c
   30a8c:	str	r5, [r1]
   30a90:	movt	r2, #15676	; 0x3d3c
   30a94:	b	2fd80 <__flatcc_fb_parse@@Base+0x5850>
   30a98:	ldr	r2, [ip]
   30a9c:	ldr	r0, [r8]
   30aa0:	add	r6, r2, r2, lsl #2
   30aa4:	add	r3, r0, r6, lsl #2
   30aa8:	str	r3, [lr]
   30aac:	ldr	r1, [r7]
   30ab0:	cmp	r1, r3
   30ab4:	bne	30b30 <__flatcc_fb_parse@@Base+0x6600>
   30ab8:	cmp	r2, #0
   30abc:	lsl	r1, r2, #1
   30ac0:	mov	r9, r8
   30ac4:	mov	r8, sl
   30ac8:	mov	sl, r5
   30acc:	mov	r5, r7
   30ad0:	mov	r7, ip
   30ad4:	movweq	r1, #1024	; 0x400
   30ad8:	str	r1, [ip]
   30adc:	add	r1, r1, r1, lsl #2
   30ae0:	lsl	r1, r1, #2
   30ae4:	bl	14844 <realloc@plt>
   30ae8:	cmp	r0, #0
   30aec:	str	r0, [r9]
   30af0:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   30af4:	ldr	r1, [r7]
   30af8:	ldr	lr, [fp, #-36]	; 0xffffffdc
   30afc:	mov	ip, r7
   30b00:	mov	r2, r9
   30b04:	mov	r7, r5
   30b08:	add	r1, r1, r1, lsl #2
   30b0c:	add	r1, r0, r1, lsl #2
   30b10:	str	r1, [lr]
   30b14:	add	r1, r0, r6, lsl #2
   30b18:	str	r1, [r5]
   30b1c:	mov	r5, sl
   30b20:	mov	sl, r8
   30b24:	mov	r8, r9
   30b28:	ldr	r9, [pc, #1940]	; 312c4 <__flatcc_fb_parse@@Base+0x6d94>
   30b2c:	add	r9, pc, r9
   30b30:	mov	r0, #3
   30b34:	str	r0, [r1, #4]
   30b38:	ldr	r0, [sp]
   30b3c:	str	r5, [r1]
   30b40:	b	30348 <__flatcc_fb_parse@@Base+0x5e18>
   30b44:	ldr	r2, [ip]
   30b48:	ldr	r0, [r8]
   30b4c:	add	r6, r2, r2, lsl #2
   30b50:	add	r3, r0, r6, lsl #2
   30b54:	str	r3, [lr]
   30b58:	ldr	r1, [r7]
   30b5c:	cmp	r1, r3
   30b60:	bne	30bdc <__flatcc_fb_parse@@Base+0x66ac>
   30b64:	cmp	r2, #0
   30b68:	lsl	r1, r2, #1
   30b6c:	mov	r9, r8
   30b70:	mov	r8, sl
   30b74:	mov	sl, r5
   30b78:	mov	r5, r7
   30b7c:	mov	r7, ip
   30b80:	movweq	r1, #1024	; 0x400
   30b84:	str	r1, [ip]
   30b88:	add	r1, r1, r1, lsl #2
   30b8c:	lsl	r1, r1, #2
   30b90:	bl	14844 <realloc@plt>
   30b94:	cmp	r0, #0
   30b98:	str	r0, [r9]
   30b9c:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   30ba0:	ldr	r1, [r7]
   30ba4:	ldr	lr, [fp, #-36]	; 0xffffffdc
   30ba8:	mov	ip, r7
   30bac:	mov	r2, r9
   30bb0:	mov	r7, r5
   30bb4:	add	r1, r1, r1, lsl #2
   30bb8:	add	r1, r0, r1, lsl #2
   30bbc:	str	r1, [lr]
   30bc0:	add	r1, r0, r6, lsl #2
   30bc4:	str	r1, [r5]
   30bc8:	mov	r5, sl
   30bcc:	mov	sl, r8
   30bd0:	mov	r8, r9
   30bd4:	ldr	r9, [pc, #1760]	; 312bc <__flatcc_fb_parse@@Base+0x6d8c>
   30bd8:	add	r9, pc, r9
   30bdc:	mov	r0, #3
   30be0:	str	r0, [r1, #4]
   30be4:	movw	r0, #15420	; 0x3c3c
   30be8:	str	r5, [r1]
   30bec:	movt	r0, #60	; 0x3c
   30bf0:	b	30348 <__flatcc_fb_parse@@Base+0x5e18>
   30bf4:	ldr	r4, [fp, #-32]	; 0xffffffe0
   30bf8:	add	r0, r6, #1
   30bfc:	cmp	r0, r4
   30c00:	beq	30c14 <__flatcc_fb_parse@@Base+0x66e4>
   30c04:	ldrb	r1, [r6, #1]
   30c08:	cmp	r1, #10
   30c0c:	addeq	r0, r6, #2
   30c10:	mov	r4, r0
   30c14:	ldr	r1, [sp, #40]	; 0x28
   30c18:	ldr	r0, [r1]
   30c1c:	add	r0, r0, #1
   30c20:	str	r0, [r1]
   30c24:	str	r4, [sl]
   30c28:	ldr	r6, [fp, #-32]	; 0xffffffe0
   30c2c:	cmp	r4, r6
   30c30:	beq	30c8c <__flatcc_fb_parse@@Base+0x675c>
   30c34:	mov	r6, r4
   30c38:	b	30c4c <__flatcc_fb_parse@@Base+0x671c>
   30c3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30c40:	add	r6, r6, #1
   30c44:	cmp	r0, r6
   30c48:	beq	30c88 <__flatcc_fb_parse@@Base+0x6758>
   30c4c:	ldrb	r0, [r6]
   30c50:	cmp	r0, #32
   30c54:	bcc	30c8c <__flatcc_fb_parse@@Base+0x675c>
   30c58:	cmp	r0, #127	; 0x7f
   30c5c:	beq	30c8c <__flatcc_fb_parse@@Base+0x675c>
   30c60:	cmp	r0, #47	; 0x2f
   30c64:	bne	30c3c <__flatcc_fb_parse@@Base+0x670c>
   30c68:	ldrb	r0, [r6, #-1]
   30c6c:	cmp	r0, #42	; 0x2a
   30c70:	bne	30c3c <__flatcc_fb_parse@@Base+0x670c>
   30c74:	sub	r6, r6, #1
   30c78:	cmp	r4, r6
   30c7c:	bne	30c94 <__flatcc_fb_parse@@Base+0x6764>
   30c80:	mov	r5, r4
   30c84:	b	30d68 <__flatcc_fb_parse@@Base+0x6838>
   30c88:	ldr	r6, [fp, #-32]	; 0xffffffe0
   30c8c:	cmp	r4, r6
   30c90:	beq	30c80 <__flatcc_fb_parse@@Base+0x6750>
   30c94:	ldr	r0, [sp, #16]
   30c98:	mov	r5, r6
   30c9c:	ldr	r0, [r0, #32]
   30ca0:	cmp	r0, #0
   30ca4:	beq	30d68 <__flatcc_fb_parse@@Base+0x6838>
   30ca8:	ldr	r2, [ip]
   30cac:	ldr	r0, [r8]
   30cb0:	add	r5, r2, r2, lsl #2
   30cb4:	add	r3, r0, r5, lsl #2
   30cb8:	str	r3, [lr]
   30cbc:	ldr	r1, [r7]
   30cc0:	cmp	r1, r3
   30cc4:	bne	30d28 <__flatcc_fb_parse@@Base+0x67f8>
   30cc8:	cmp	r2, #0
   30ccc:	lsl	r1, r2, #1
   30cd0:	mov	r8, r7
   30cd4:	mov	r7, ip
   30cd8:	movweq	r1, #1024	; 0x400
   30cdc:	str	r1, [ip]
   30ce0:	add	r1, r1, r1, lsl #2
   30ce4:	lsl	r1, r1, #2
   30ce8:	bl	14844 <realloc@plt>
   30cec:	ldr	r1, [sp, #24]
   30cf0:	cmp	r0, #0
   30cf4:	str	r0, [r1]
   30cf8:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   30cfc:	mov	r2, r1
   30d00:	ldr	r1, [r7]
   30d04:	ldr	lr, [fp, #-36]	; 0xffffffdc
   30d08:	mov	ip, r7
   30d0c:	mov	r7, r8
   30d10:	add	r1, r1, r1, lsl #2
   30d14:	add	r1, r0, r1, lsl #2
   30d18:	str	r1, [lr]
   30d1c:	add	r1, r0, r5, lsl #2
   30d20:	str	r1, [r8]
   30d24:	mov	r8, r2
   30d28:	movw	r0, #64572	; 0xfc3c
   30d2c:	str	r4, [r1]
   30d30:	mov	r5, r6
   30d34:	movt	r0, #65535	; 0xffff
   30d38:	str	r0, [r1, #16]
   30d3c:	sub	r0, r6, r4
   30d40:	str	r0, [r1, #4]
   30d44:	ldr	r0, [sp, #40]	; 0x28
   30d48:	ldr	r0, [r0]
   30d4c:	str	r0, [r1, #8]
   30d50:	ldr	r0, [sl]
   30d54:	sub	r0, r4, r0
   30d58:	add	r0, r0, #1
   30d5c:	str	r0, [r1, #12]
   30d60:	add	r0, r1, #20
   30d64:	str	r0, [r7]
   30d68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30d6c:	cmp	r6, r0
   30d70:	beq	31158 <__flatcc_fb_parse@@Base+0x6c28>
   30d74:	ldrb	r0, [r6]
   30d78:	cmp	r0, #10
   30d7c:	beq	30dc8 <__flatcc_fb_parse@@Base+0x6898>
   30d80:	cmp	r0, #13
   30d84:	beq	30bf4 <__flatcc_fb_parse@@Base+0x66c4>
   30d88:	cmp	r0, #0
   30d8c:	beq	3115c <__flatcc_fb_parse@@Base+0x6c2c>
   30d90:	cmp	r0, #32
   30d94:	bcc	30da0 <__flatcc_fb_parse@@Base+0x6870>
   30d98:	cmp	r0, #127	; 0x7f
   30d9c:	bne	30f40 <__flatcc_fb_parse@@Base+0x6a10>
   30da0:	ldrb	r0, [r5]
   30da4:	add	r4, r6, #1
   30da8:	cmp	r0, #32
   30dac:	cmpne	r0, #9
   30db0:	bne	30de8 <__flatcc_fb_parse@@Base+0x68b8>
   30db4:	ldr	r0, [sp, #16]
   30db8:	ldr	r0, [r0, #32]
   30dbc:	cmp	r0, #0
   30dc0:	beq	30c28 <__flatcc_fb_parse@@Base+0x66f8>
   30dc4:	b	30e80 <__flatcc_fb_parse@@Base+0x6950>
   30dc8:	ldr	r4, [fp, #-32]	; 0xffffffe0
   30dcc:	add	r0, r6, #1
   30dd0:	cmp	r0, r4
   30dd4:	beq	30c14 <__flatcc_fb_parse@@Base+0x66e4>
   30dd8:	ldrb	r1, [r6, #1]
   30ddc:	cmp	r1, #13
   30de0:	b	30c0c <__flatcc_fb_parse@@Base+0x66dc>
   30de4:	andeq	r7, r2, sl, asr r3
   30de8:	ldr	r2, [ip]
   30dec:	ldr	r0, [r8]
   30df0:	add	r6, r2, r2, lsl #2
   30df4:	add	r3, r0, r6, lsl #2
   30df8:	str	r3, [lr]
   30dfc:	ldr	r1, [r7]
   30e00:	cmp	r1, r3
   30e04:	bne	30e68 <__flatcc_fb_parse@@Base+0x6938>
   30e08:	cmp	r2, #0
   30e0c:	lsl	r1, r2, #1
   30e10:	mov	sl, r5
   30e14:	mov	r5, r7
   30e18:	mov	r7, ip
   30e1c:	movweq	r1, #1024	; 0x400
   30e20:	str	r1, [ip]
   30e24:	add	r1, r1, r1, lsl #2
   30e28:	lsl	r1, r1, #2
   30e2c:	bl	14844 <realloc@plt>
   30e30:	cmp	r0, #0
   30e34:	str	r0, [r8]
   30e38:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   30e3c:	ldr	r1, [r7]
   30e40:	ldr	lr, [fp, #-36]	; 0xffffffdc
   30e44:	mov	ip, r7
   30e48:	mov	r7, r5
   30e4c:	add	r1, r1, r1, lsl #2
   30e50:	add	r1, r0, r1, lsl #2
   30e54:	str	r1, [lr]
   30e58:	add	r1, r0, r6, lsl #2
   30e5c:	str	r1, [r5]
   30e60:	mov	r5, sl
   30e64:	ldr	sl, [sp, #32]
   30e68:	mov	r0, #1
   30e6c:	str	r0, [r1, #4]
   30e70:	str	r5, [r1]
   30e74:	mov	r0, #7
   30e78:	b	30f14 <__flatcc_fb_parse@@Base+0x69e4>
   30e7c:	andeq	r7, r2, lr, lsr #5
   30e80:	ldr	r2, [ip]
   30e84:	ldr	r0, [r8]
   30e88:	add	r6, r2, r2, lsl #2
   30e8c:	add	r3, r0, r6, lsl #2
   30e90:	str	r3, [lr]
   30e94:	ldr	r1, [r7]
   30e98:	cmp	r1, r3
   30e9c:	bne	30f00 <__flatcc_fb_parse@@Base+0x69d0>
   30ea0:	cmp	r2, #0
   30ea4:	lsl	r1, r2, #1
   30ea8:	mov	sl, r5
   30eac:	mov	r5, r7
   30eb0:	mov	r7, ip
   30eb4:	movweq	r1, #1024	; 0x400
   30eb8:	str	r1, [ip]
   30ebc:	add	r1, r1, r1, lsl #2
   30ec0:	lsl	r1, r1, #2
   30ec4:	bl	14844 <realloc@plt>
   30ec8:	cmp	r0, #0
   30ecc:	str	r0, [r8]
   30ed0:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   30ed4:	ldr	r1, [r7]
   30ed8:	ldr	lr, [fp, #-36]	; 0xffffffdc
   30edc:	mov	ip, r7
   30ee0:	mov	r7, r5
   30ee4:	add	r1, r1, r1, lsl #2
   30ee8:	add	r1, r0, r1, lsl #2
   30eec:	str	r1, [lr]
   30ef0:	add	r1, r0, r6, lsl #2
   30ef4:	str	r1, [r5]
   30ef8:	mov	r5, sl
   30efc:	ldr	sl, [sp, #32]
   30f00:	mov	r0, #1
   30f04:	str	r0, [r1, #4]
   30f08:	movw	r0, #64572	; 0xfc3c
   30f0c:	str	r5, [r1]
   30f10:	movt	r0, #65535	; 0xffff
   30f14:	str	r0, [r1, #16]
   30f18:	ldr	r0, [sp, #40]	; 0x28
   30f1c:	ldr	r0, [r0]
   30f20:	str	r0, [r1, #8]
   30f24:	ldr	r0, [sl]
   30f28:	sub	r0, r5, r0
   30f2c:	add	r0, r0, #1
   30f30:	str	r0, [r1, #12]
   30f34:	add	r0, r1, #20
   30f38:	str	r0, [r7]
   30f3c:	b	30c28 <__flatcc_fb_parse@@Base+0x66f8>
   30f40:	ldr	r0, [sp, #16]
   30f44:	mov	r1, #0
   30f48:	add	r5, r6, #2
   30f4c:	str	r1, [r0, #32]
   30f50:	b	2cd3c <__flatcc_fb_parse@@Base+0x280c>
   30f54:	mov	r6, r5
   30f58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30f5c:	cmp	r6, r0
   30f60:	beq	31014 <__flatcc_fb_parse@@Base+0x6ae4>
   30f64:	ldrb	r0, [r6]
   30f68:	mov	r9, r5
   30f6c:	ldr	r5, [sp, #16]
   30f70:	cmp	r0, #0
   30f74:	beq	310c8 <__flatcc_fb_parse@@Base+0x6b98>
   30f78:	mov	r8, r6
   30f7c:	b	3101c <__flatcc_fb_parse@@Base+0x6aec>
   30f80:	ldr	r8, [fp, #-32]	; 0xffffffe0
   30f84:	b	31018 <__flatcc_fb_parse@@Base+0x6ae8>
   30f88:	ldrdeq	r7, [r2], -lr
   30f8c:			; <UNDEFINED> instruction: 0x000271b6
   30f90:	ldr	r2, [ip]
   30f94:	ldr	r0, [r8]
   30f98:	add	r4, r2, r2, lsl #2
   30f9c:	add	r3, r0, r4, lsl #2
   30fa0:	str	r3, [lr]
   30fa4:	ldr	r1, [r7]
   30fa8:	cmp	r1, r3
   30fac:	bne	30ff8 <__flatcc_fb_parse@@Base+0x6ac8>
   30fb0:	cmp	r2, #0
   30fb4:	lsl	r1, r2, #1
   30fb8:	mov	r6, ip
   30fbc:	movweq	r1, #1024	; 0x400
   30fc0:	str	r1, [ip]
   30fc4:	add	r1, r1, r1, lsl #2
   30fc8:	lsl	r1, r1, #2
   30fcc:	bl	14844 <realloc@plt>
   30fd0:	cmp	r0, #0
   30fd4:	str	r0, [r8]
   30fd8:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   30fdc:	ldr	r1, [r6]
   30fe0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   30fe4:	add	r1, r1, r1, lsl #2
   30fe8:	add	r1, r0, r1, lsl #2
   30fec:	str	r1, [r2]
   30ff0:	add	r1, r0, r4, lsl #2
   30ff4:	str	r1, [r7]
   30ff8:	mov	r0, #0
   30ffc:	str	r0, [r1, #4]
   31000:	str	r5, [r1]
   31004:	str	r0, [r1, #16]
   31008:	ldr	r0, [sp, #40]	; 0x28
   3100c:	ldr	r0, [r0]
   31010:	b	310a4 <__flatcc_fb_parse@@Base+0x6b74>
   31014:	mov	r8, r6
   31018:	ldr	r5, [sp, #16]
   3101c:	mov	r7, r5
   31020:	ldr	r1, [r7, #40]!	; 0x28
   31024:	ldr	r2, [r7, #-12]
   31028:	ldr	r0, [r7, #-20]	; 0xffffffec
   3102c:	mov	r6, r7
   31030:	add	r4, r2, r2, lsl #2
   31034:	add	r3, r0, r4, lsl #2
   31038:	cmp	r1, r3
   3103c:	str	r3, [r7, #-16]
   31040:	bne	31084 <__flatcc_fb_parse@@Base+0x6b54>
   31044:	cmp	r2, #0
   31048:	lsl	r1, r2, #1
   3104c:	movweq	r1, #1024	; 0x400
   31050:	str	r1, [r5, #28]
   31054:	add	r1, r1, r1, lsl #2
   31058:	lsl	r1, r1, #2
   3105c:	bl	14844 <realloc@plt>
   31060:	cmp	r0, #0
   31064:	str	r0, [r5, #20]
   31068:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   3106c:	add	r1, r0, r4, lsl #2
   31070:	str	r1, [r5, #40]	; 0x28
   31074:	ldr	r2, [r5, #28]
   31078:	add	r2, r2, r2, lsl #2
   3107c:	add	r0, r0, r2, lsl #2
   31080:	str	r0, [r5, #24]
   31084:	mov	r0, #0
   31088:	add	sl, r5, #60	; 0x3c
   3108c:	mov	r7, r6
   31090:	str	r0, [r1, #4]
   31094:	str	r8, [r1]
   31098:	str	r0, [r1, #16]
   3109c:	ldr	r0, [r5, #64]	; 0x40
   310a0:	mov	r5, r8
   310a4:	str	r0, [r1, #8]
   310a8:	ldr	r0, [sl]
   310ac:	sub	r0, r5, r0
   310b0:	add	r0, r0, #1
   310b4:	str	r0, [r1, #12]
   310b8:	add	r0, r1, #20
   310bc:	str	r0, [r7]
   310c0:	sub	sp, fp, #28
   310c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   310c8:	mov	r4, r5
   310cc:	ldr	r1, [r4, #40]!	; 0x28
   310d0:	ldr	r2, [r4, #-12]
   310d4:	ldr	r0, [r4, #-20]	; 0xffffffec
   310d8:	mov	r7, r4
   310dc:	add	r8, r2, r2, lsl #2
   310e0:	add	r3, r0, r8, lsl #2
   310e4:	cmp	r1, r3
   310e8:	str	r3, [r4, #-16]
   310ec:	bne	31130 <__flatcc_fb_parse@@Base+0x6c00>
   310f0:	cmp	r2, #0
   310f4:	lsl	r1, r2, #1
   310f8:	movweq	r1, #1024	; 0x400
   310fc:	str	r1, [r5, #28]
   31100:	add	r1, r1, r1, lsl #2
   31104:	lsl	r1, r1, #2
   31108:	bl	14844 <realloc@plt>
   3110c:	cmp	r0, #0
   31110:	str	r0, [r5, #20]
   31114:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   31118:	add	r1, r0, r8, lsl #2
   3111c:	str	r1, [r5, #40]	; 0x28
   31120:	ldr	r2, [r5, #28]
   31124:	add	r2, r2, r2, lsl #2
   31128:	add	r0, r0, r2, lsl #2
   3112c:	str	r0, [r5, #24]
   31130:	mov	r0, #0
   31134:	str	r9, [r1]
   31138:	add	sl, r5, #60	; 0x3c
   3113c:	str	r0, [r1, #16]
   31140:	sub	r0, r6, r9
   31144:	str	r0, [r1, #4]
   31148:	ldr	r0, [r5, #64]	; 0x40
   3114c:	mov	r5, r9
   31150:	b	310a4 <__flatcc_fb_parse@@Base+0x6b74>
   31154:	andeq	r6, r2, sl, asr #31
   31158:	ldr	r6, [fp, #-32]	; 0xffffffe0
   3115c:	ldr	r2, [ip]
   31160:	ldr	r0, [r8]
   31164:	add	r4, r2, r2, lsl #2
   31168:	add	r3, r0, r4, lsl #2
   3116c:	str	r3, [lr]
   31170:	ldr	r1, [r7]
   31174:	cmp	r1, r3
   31178:	bne	311d4 <__flatcc_fb_parse@@Base+0x6ca4>
   3117c:	cmp	r2, #0
   31180:	lsl	r1, r2, #1
   31184:	mov	r9, r5
   31188:	mov	r5, r7
   3118c:	mov	r7, ip
   31190:	movweq	r1, #1024	; 0x400
   31194:	str	r1, [ip]
   31198:	add	r1, r1, r1, lsl #2
   3119c:	lsl	r1, r1, #2
   311a0:	bl	14844 <realloc@plt>
   311a4:	cmp	r0, #0
   311a8:	str	r0, [r8]
   311ac:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   311b0:	ldr	r1, [r7]
   311b4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   311b8:	mov	r7, r5
   311bc:	add	r1, r1, r1, lsl #2
   311c0:	add	r1, r0, r1, lsl #2
   311c4:	str	r1, [r2]
   311c8:	add	r1, r0, r4, lsl #2
   311cc:	str	r1, [r5]
   311d0:	mov	r5, r9
   311d4:	mov	r0, #0
   311d8:	str	r0, [r1, #4]
   311dc:	mov	r0, #27
   311e0:	str	r6, [r1]
   311e4:	str	r0, [r1, #16]
   311e8:	ldr	r0, [sp, #40]	; 0x28
   311ec:	ldr	r0, [r0]
   311f0:	str	r0, [r1, #8]
   311f4:	ldr	r0, [sl]
   311f8:	sub	r0, r6, r0
   311fc:	add	r0, r0, #1
   31200:	str	r0, [r1, #12]
   31204:	add	r0, r1, #20
   31208:	str	r0, [r7]
   3120c:	b	30f58 <__flatcc_fb_parse@@Base+0x6a28>
   31210:	ldr	r2, [ip]
   31214:	ldr	r0, [r8]
   31218:	add	r4, r2, r2, lsl #2
   3121c:	add	r3, r0, r4, lsl #2
   31220:	str	r3, [lr]
   31224:	ldr	r1, [r7]
   31228:	cmp	r1, r3
   3122c:	bne	31278 <__flatcc_fb_parse@@Base+0x6d48>
   31230:	cmp	r2, #0
   31234:	lsl	r1, r2, #1
   31238:	mov	r6, ip
   3123c:	movweq	r1, #1024	; 0x400
   31240:	str	r1, [ip]
   31244:	add	r1, r1, r1, lsl #2
   31248:	lsl	r1, r1, #2
   3124c:	bl	14844 <realloc@plt>
   31250:	cmp	r0, #0
   31254:	str	r0, [r8]
   31258:	beq	31288 <__flatcc_fb_parse@@Base+0x6d58>
   3125c:	ldr	r1, [r6]
   31260:	ldr	r2, [fp, #-36]	; 0xffffffdc
   31264:	add	r1, r1, r1, lsl #2
   31268:	add	r1, r0, r1, lsl #2
   3126c:	str	r1, [r2]
   31270:	add	r1, r0, r4, lsl #2
   31274:	str	r1, [r7]
   31278:	mov	r6, r5
   3127c:	mov	r5, sl
   31280:	ldr	sl, [sp, #32]
   31284:	b	311d4 <__flatcc_fb_parse@@Base+0x6ca4>
   31288:	ldr	r0, [pc, #32]	; 312b0 <__flatcc_fb_parse@@Base+0x6d80>
   3128c:	mov	r1, #34	; 0x22
   31290:	mov	r2, #1
   31294:	ldr	r0, [pc, r0]
   31298:	ldr	r3, [r0]
   3129c:	ldr	r0, [pc, #16]	; 312b4 <__flatcc_fb_parse@@Base+0x6d84>
   312a0:	add	r0, pc, r0
   312a4:	bl	14850 <fwrite@plt>
   312a8:	mov	r0, #1
   312ac:	bl	14898 <exit@plt>
   312b0:	andeq	r9, r3, r8, lsl #28
   312b4:	andeq	sp, r0, r7, lsr #30
   312b8:	strdeq	r6, [r2], -lr
   312bc:	andeq	r6, r2, r6, asr #11
   312c0:	muleq	r2, r2, sp
   312c4:	andeq	r6, r2, r2, ror r6
   312c8:	andeq	r6, r2, r6, asr #15
   312cc:	andeq	r6, r2, sl, ror #28
   312d0:	push	{r4, r5, r6, r7, fp, lr}
   312d4:	add	fp, sp, #16
   312d8:	mov	r4, r0
   312dc:	ldr	r0, [r0, #24]
   312e0:	ldr	r6, [r4, #40]	; 0x28
   312e4:	add	r1, r6, #20
   312e8:	cmp	r1, r0
   312ec:	str	r1, [r4, #40]	; 0x28
   312f0:	beq	313b0 <__flatcc_fb_parse@@Base+0x6e80>
   312f4:	sub	r7, r0, #20
   312f8:	b	31324 <__flatcc_fb_parse@@Base+0x6df4>
   312fc:	str	r2, [r4, #52]	; 0x34
   31300:	str	r5, [r1, #4]
   31304:	cmp	r7, r5
   31308:	ldr	r0, [r4, #36]	; 0x24
   3130c:	str	r0, [r1]
   31310:	add	r0, r6, #40	; 0x28
   31314:	mov	r6, r5
   31318:	str	r1, [r4, #36]	; 0x24
   3131c:	str	r0, [r4, #40]	; 0x28
   31320:	beq	313b4 <__flatcc_fb_parse@@Base+0x6e84>
   31324:	ldr	r0, [r6, #36]	; 0x24
   31328:	add	r5, r6, #20
   3132c:	cmn	r0, #964	; 0x3c4
   31330:	bne	31380 <__flatcc_fb_parse@@Base+0x6e50>
   31334:	ldr	r1, [r4, #52]	; 0x34
   31338:	ldr	r0, [r4, #44]	; 0x2c
   3133c:	add	r2, r1, #16
   31340:	cmp	r2, r0
   31344:	bls	312fc <__flatcc_fb_parse@@Base+0x6dcc>
   31348:	mov	r0, #65536	; 0x10000
   3134c:	mov	r1, #1
   31350:	bl	147cc <calloc@plt>
   31354:	cmp	r0, #0
   31358:	beq	31388 <__flatcc_fb_parse@@Base+0x6e58>
   3135c:	ldr	r1, [r4, #48]	; 0x30
   31360:	mov	r2, r0
   31364:	add	r3, r0, #65536	; 0x10000
   31368:	str	r1, [r2], #32
   3136c:	add	r1, r0, #16
   31370:	str	r3, [r4, #44]	; 0x2c
   31374:	str	r0, [r4, #48]	; 0x30
   31378:	str	r1, [r4, #52]	; 0x34
   3137c:	b	312fc <__flatcc_fb_parse@@Base+0x6dcc>
   31380:	mov	r0, r5
   31384:	pop	{r4, r5, r6, r7, fp, pc}
   31388:	ldr	r0, [pc, #84]	; 313e4 <__flatcc_fb_parse@@Base+0x6eb4>
   3138c:	mov	r1, #34	; 0x22
   31390:	mov	r2, #1
   31394:	ldr	r0, [pc, r0]
   31398:	ldr	r3, [r0]
   3139c:	ldr	r0, [pc, #68]	; 313e8 <__flatcc_fb_parse@@Base+0x6eb8>
   313a0:	add	r0, pc, r0
   313a4:	bl	14850 <fwrite@plt>
   313a8:	mov	r0, #1
   313ac:	bl	14898 <exit@plt>
   313b0:	mov	r5, r6
   313b4:	str	r5, [r4, #40]	; 0x28
   313b8:	movw	r2, #341	; 0x155
   313bc:	ldr	r0, [pc, #20]	; 313d8 <__flatcc_fb_parse@@Base+0x6ea8>
   313c0:	ldr	r1, [pc, #20]	; 313dc <__flatcc_fb_parse@@Base+0x6eac>
   313c4:	ldr	r3, [pc, #20]	; 313e0 <__flatcc_fb_parse@@Base+0x6eb0>
   313c8:	add	r0, pc, r0
   313cc:	add	r1, pc, r1
   313d0:	add	r3, pc, r3
   313d4:	bl	1497c <__assert_fail@plt>
   313d8:	andeq	pc, r1, r6, lsl #1
   313dc:	strdeq	r5, [r2], -lr
   313e0:	andeq	r5, r2, r8, asr #8
   313e4:	andeq	r9, r3, r8, lsl #26
   313e8:	andeq	sp, r0, r7, lsr #28

000313ec <__flatcc_fb_clear_parser@@Base>:
   313ec:	push	{r4, r5, fp, lr}
   313f0:	add	fp, sp, #8
   313f4:	ldr	r5, [r0, #392]	; 0x188
   313f8:	mov	r4, r0
   313fc:	cmp	r5, #0
   31400:	bne	31414 <__flatcc_fb_clear_parser@@Base+0x28>
   31404:	b	31434 <__flatcc_fb_clear_parser@@Base+0x48>
   31408:	ldr	r5, [r5]
   3140c:	cmp	r5, #0
   31410:	beq	31434 <__flatcc_fb_clear_parser@@Base+0x48>
   31414:	ldrh	r0, [r5, #8]
   31418:	cmp	r0, #4
   3141c:	bhi	31408 <__flatcc_fb_clear_parser@@Base+0x1c>
   31420:	add	r0, r5, #56	; 0x38
   31424:	bl	27930 <fb_symbol_table_clear@@Base>
   31428:	add	r0, r5, #72	; 0x48
   3142c:	bl	3d114 <fb_value_set_clear@@Base>
   31430:	b	31408 <__flatcc_fb_clear_parser@@Base+0x1c>
   31434:	add	r0, r4, #448	; 0x1c0
   31438:	bl	28f3c <fb_schema_table_clear@@Base>
   3143c:	add	r0, r4, #432	; 0x1b0
   31440:	bl	3c998 <fb_name_table_clear@@Base>
   31444:	add	r0, r4, #524	; 0x20c
   31448:	bl	2726c <ptr_set_clear@@Base>
   3144c:	ldr	r0, [r4, #112]	; 0x70
   31450:	cmp	r0, #0
   31454:	beq	3145c <__flatcc_fb_clear_parser@@Base+0x70>
   31458:	bl	147fc <free@plt>
   3145c:	ldr	r0, [r4, #20]
   31460:	cmp	r0, #0
   31464:	beq	3146c <__flatcc_fb_clear_parser@@Base+0x80>
   31468:	bl	147fc <free@plt>
   3146c:	ldr	r0, [r4, #512]	; 0x200
   31470:	cmp	r0, #0
   31474:	beq	3147c <__flatcc_fb_clear_parser@@Base+0x90>
   31478:	bl	147fc <free@plt>
   3147c:	ldr	r0, [r4, #516]	; 0x204
   31480:	cmp	r0, #0
   31484:	beq	3148c <__flatcc_fb_clear_parser@@Base+0xa0>
   31488:	bl	147fc <free@plt>
   3148c:	ldr	r0, [r4, #520]	; 0x208
   31490:	cmp	r0, #0
   31494:	beq	3149c <__flatcc_fb_clear_parser@@Base+0xb0>
   31498:	bl	147fc <free@plt>
   3149c:	ldr	r0, [r4, #548]	; 0x224
   314a0:	cmp	r0, #0
   314a4:	beq	314ac <__flatcc_fb_clear_parser@@Base+0xc0>
   314a8:	bl	147fc <free@plt>
   314ac:	ldr	r1, [pc, #80]	; 31504 <__flatcc_fb_clear_parser@@Base+0x118>
   314b0:	add	r0, r4, #416	; 0x1a0
   314b4:	mov	r2, #0
   314b8:	add	r1, pc, r1
   314bc:	bl	280ec <fb_scope_table_destroy@@Base>
   314c0:	ldr	r0, [r4, #48]	; 0x30
   314c4:	cmp	r0, #0
   314c8:	beq	314e0 <__flatcc_fb_clear_parser@@Base+0xf4>
   314cc:	ldr	r5, [r0]
   314d0:	bl	147fc <free@plt>
   314d4:	cmp	r5, #0
   314d8:	mov	r0, r5
   314dc:	bne	314cc <__flatcc_fb_clear_parser@@Base+0xe0>
   314e0:	ldr	r0, [r4, #16]
   314e4:	cmp	r0, #0
   314e8:	beq	314f0 <__flatcc_fb_clear_parser@@Base+0x104>
   314ec:	bl	147fc <free@plt>
   314f0:	mov	r0, r4
   314f4:	mov	r1, #0
   314f8:	mov	r2, #560	; 0x230
   314fc:	pop	{r4, r5, fp, lr}
   31500:	b	148d4 <memset@plt>
   31504:	andeq	r0, r0, r8, asr #32
   31508:	add	r0, r1, #4
   3150c:	b	27930 <fb_symbol_table_clear@@Base>
   31510:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31514:	add	fp, sp, #28
   31518:	sub	sp, sp, #20
   3151c:	mov	r5, r0
   31520:	mov	r8, #0
   31524:	mov	r0, #2
   31528:	mov	r4, r1
   3152c:	mov	r9, #1
   31530:	str	r8, [r1]
   31534:	str	r8, [r1, #4]
   31538:	strh	r0, [r1, #8]
   3153c:	ldr	sl, [pc, #648]	; 317cc <__flatcc_fb_clear_parser@@Base+0x3e0>
   31540:	ldr	r6, [pc, #648]	; 317d0 <__flatcc_fb_clear_parser@@Base+0x3e4>
   31544:	ldr	r7, [pc, #648]	; 317d4 <__flatcc_fb_clear_parser@@Base+0x3e8>
   31548:	add	sl, pc, sl
   3154c:	add	r6, pc, r6
   31550:	add	r7, pc, r7
   31554:	b	3157c <__flatcc_fb_clear_parser@@Base+0x190>
   31558:	mov	r0, r5
   3155c:	mov	r2, r7
   31560:	strh	r9, [r4, #8]
   31564:	str	r8, [sp]
   31568:	str	r8, [sp, #4]
   3156c:	mov	r3, #0
   31570:	bl	29ee4 <__flatcc_error_report@@Base>
   31574:	mov	r0, r5
   31578:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   3157c:	ldr	r1, [r5, #40]	; 0x28
   31580:	ldr	r0, [r1, #16]
   31584:	sub	r0, r0, #6
   31588:	cmp	r0, #17
   3158c:	bhi	316a8 <__flatcc_fb_clear_parser@@Base+0x2bc>
   31590:	add	r2, pc, #4
   31594:	ldr	r0, [r2, r0, lsl #2]
   31598:	add	pc, r2, r0
   3159c:	andeq	r0, r0, r8, asr #32
   315a0:	andeq	r0, r0, ip, lsl #2
   315a4:	andeq	r0, r0, ip, lsl #2
   315a8:	andeq	r0, r0, ip, lsl #2
   315ac:	andeq	r0, r0, ip, lsl #2
   315b0:	andeq	r0, r0, ip, lsl #2
   315b4:	andeq	r0, r0, ip, lsl #2
   315b8:	andeq	r0, r0, ip, lsl #2
   315bc:	andeq	r0, r0, ip, lsl #2
   315c0:	andeq	r0, r0, ip, lsl #2
   315c4:	andeq	r0, r0, ip, lsl #2
   315c8:	andeq	r0, r0, ip, lsl #2
   315cc:	muleq	r0, r8, r0
   315d0:	andeq	r0, r0, ip, lsl #2
   315d4:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   315d8:			; <UNDEFINED> instruction: 0xffffffbc
   315dc:	andeq	r0, r0, r4, lsr r1
   315e0:	andeq	r0, r0, r4, lsr r1
   315e4:	mov	r0, r5
   315e8:	cmp	r1, #0
   315ec:	strh	r9, [r4, #8]
   315f0:	bne	31614 <__flatcc_fb_clear_parser@@Base+0x228>
   315f4:	ldr	r1, [pc, #488]	; 317e4 <__flatcc_fb_clear_parser@@Base+0x3f8>
   315f8:	mov	r2, sl
   315fc:	add	r1, pc, r1
   31600:	bl	29e1c <__flatcc_fb_print_error@@Base>
   31604:	b	31698 <__flatcc_fb_clear_parser@@Base+0x2ac>
   31608:	ldr	r0, [r0]
   3160c:	cmp	r0, #0
   31610:	beq	31664 <__flatcc_fb_clear_parser@@Base+0x278>
   31614:	ldr	r2, [r0, #20]
   31618:	cmp	r2, r1
   3161c:	bhi	31608 <__flatcc_fb_clear_parser@@Base+0x21c>
   31620:	ldr	r2, [r0, #24]
   31624:	cmp	r2, r1
   31628:	bls	31608 <__flatcc_fb_clear_parser@@Base+0x21c>
   3162c:	ldr	r2, [r0, #520]	; 0x208
   31630:	b	3166c <__flatcc_fb_clear_parser@@Base+0x280>
   31634:	strh	r9, [r4, #8]
   31638:	str	r8, [sp]
   3163c:	str	r8, [sp, #4]
   31640:	mov	r0, r5
   31644:	mov	r2, r6
   31648:	b	3156c <__flatcc_fb_clear_parser@@Base+0x180>
   3164c:	ldr	r0, [r4]
   31650:	cmp	r0, #0
   31654:	bne	31574 <__flatcc_fb_clear_parser@@Base+0x188>
   31658:	ldr	r0, [r1]
   3165c:	str	r0, [r4]
   31660:	b	31574 <__flatcc_fb_clear_parser@@Base+0x188>
   31664:	ldr	r2, [pc, #364]	; 317d8 <__flatcc_fb_clear_parser@@Base+0x3ec>
   31668:	add	r2, pc, r2
   3166c:	ldr	r0, [r1, #12]
   31670:	ldr	r3, [r1, #8]
   31674:	stm	sp, {r0, r9}
   31678:	ldr	r0, [pc, #348]	; 317dc <__flatcc_fb_clear_parser@@Base+0x3f0>
   3167c:	str	sl, [sp, #12]
   31680:	add	r0, pc, r0
   31684:	str	r0, [sp, #8]
   31688:	mov	r0, r5
   3168c:	ldr	r1, [pc, #332]	; 317e0 <__flatcc_fb_clear_parser@@Base+0x3f4>
   31690:	add	r1, pc, r1
   31694:	bl	29e1c <__flatcc_fb_print_error@@Base>
   31698:	ldr	r0, [r5, #108]	; 0x6c
   3169c:	add	r0, r0, #1
   316a0:	str	r0, [r5, #108]	; 0x6c
   316a4:	b	31574 <__flatcc_fb_clear_parser@@Base+0x188>
   316a8:	mov	r0, #0
   316ac:	mov	r3, #0
   316b0:	str	r0, [sp]
   316b4:	str	r0, [sp, #4]
   316b8:	mov	r0, r5
   316bc:	ldr	r2, [pc, #292]	; 317e8 <__flatcc_fb_clear_parser@@Base+0x3fc>
   316c0:	add	r2, pc, r2
   316c4:	bl	29ee4 <__flatcc_error_report@@Base>
   316c8:	mov	r0, #1
   316cc:	strh	r0, [r4, #8]
   316d0:	ldr	r0, [r4]
   316d4:	cmp	r0, #0
   316d8:	beq	316ec <__flatcc_fb_clear_parser@@Base+0x300>
   316dc:	ldr	r1, [r5, #40]	; 0x28
   316e0:	ldr	r1, [r1]
   316e4:	sub	r0, r1, r0
   316e8:	str	r0, [r4, #4]
   316ec:	ldr	r6, [r5, #40]	; 0x28
   316f0:	ldr	r0, [r6, #16]
   316f4:	cmp	r0, #22
   316f8:	bne	31714 <__flatcc_fb_clear_parser@@Base+0x328>
   316fc:	mov	r0, r5
   31700:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   31704:	cmp	r6, #0
   31708:	beq	317bc <__flatcc_fb_clear_parser@@Base+0x3d0>
   3170c:	sub	sp, fp, #28
   31710:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31714:	cmp	r6, #0
   31718:	beq	31798 <__flatcc_fb_clear_parser@@Base+0x3ac>
   3171c:	ldr	r3, [r6]
   31720:	ldr	r0, [r6, #4]
   31724:	ldr	r2, [pc, #192]	; 317ec <__flatcc_fb_clear_parser@@Base+0x400>
   31728:	cmp	r3, #0
   3172c:	add	r2, pc, r2
   31730:	mov	r1, r3
   31734:	moveq	r0, r3
   31738:	moveq	r1, r2
   3173c:	mov	r3, r5
   31740:	b	31750 <__flatcc_fb_clear_parser@@Base+0x364>
   31744:	ldr	r3, [r3]
   31748:	cmp	r3, #0
   3174c:	beq	3176c <__flatcc_fb_clear_parser@@Base+0x380>
   31750:	ldr	r7, [r3, #20]
   31754:	cmp	r7, r6
   31758:	bhi	31744 <__flatcc_fb_clear_parser@@Base+0x358>
   3175c:	ldr	r7, [r3, #24]
   31760:	cmp	r7, r6
   31764:	bls	31744 <__flatcc_fb_clear_parser@@Base+0x358>
   31768:	ldr	r2, [r3, #520]	; 0x208
   3176c:	ldr	r3, [r6, #8]
   31770:	ldr	r7, [r6, #12]
   31774:	ldr	r6, [pc, #116]	; 317f0 <__flatcc_fb_clear_parser@@Base+0x404>
   31778:	add	r6, pc, r6
   3177c:	str	r7, [sp]
   31780:	stmib	sp, {r0, r1, r6}
   31784:	mov	r0, r5
   31788:	ldr	r1, [pc, #100]	; 317f4 <__flatcc_fb_clear_parser@@Base+0x408>
   3178c:	add	r1, pc, r1
   31790:	bl	29e1c <__flatcc_fb_print_error@@Base>
   31794:	b	317b0 <__flatcc_fb_clear_parser@@Base+0x3c4>
   31798:	ldr	r1, [pc, #88]	; 317f8 <__flatcc_fb_clear_parser@@Base+0x40c>
   3179c:	ldr	r2, [pc, #88]	; 317fc <__flatcc_fb_clear_parser@@Base+0x410>
   317a0:	mov	r0, r5
   317a4:	add	r1, pc, r1
   317a8:	add	r2, pc, r2
   317ac:	bl	29e1c <__flatcc_fb_print_error@@Base>
   317b0:	ldr	r0, [r5, #108]	; 0x6c
   317b4:	add	r0, r0, #1
   317b8:	str	r0, [r5, #108]	; 0x6c
   317bc:	mov	r0, #1
   317c0:	strh	r0, [r4, #8]
   317c4:	sub	sp, fp, #28
   317c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   317cc:	andeq	r5, r2, r9, lsr #7
   317d0:	ldrdeq	r5, [r2], -r1
   317d4:	andeq	r5, r2, r3, lsl #7
   317d8:	andeq	lr, r0, r6, lsr r0
   317dc:	muleq	r2, fp, r2
   317e0:	ldrdeq	r4, [r2], -r3
   317e4:			; <UNDEFINED> instruction: 0x00024fb9
   317e8:	andeq	r5, r2, ip, ror r2
   317ec:	andeq	sp, r0, r2, ror pc
   317f0:	andeq	r5, r2, pc, ror #3
   317f4:	ldrdeq	r4, [r2], -r7
   317f8:	andeq	r4, r2, r1, lsl lr
   317fc:			; <UNDEFINED> instruction: 0x000251bf
   31800:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31804:	add	fp, sp, #28
   31808:	sub	sp, sp, #20
   3180c:	ldr	r7, [r0, #40]	; 0x28
   31810:	mov	r4, r0
   31814:	ldr	r0, [r7, #16]
   31818:	cmp	r0, #9
   3181c:	bne	320d0 <__flatcc_fb_clear_parser@@Base+0xce4>
   31820:	mov	r0, r4
   31824:	mov	r8, r2
   31828:	mov	r5, r1
   3182c:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   31830:	cmp	r7, #0
   31834:	beq	32260 <__flatcc_fb_clear_parser@@Base+0xe74>
   31838:	mov	r0, r4
   3183c:	str	r7, [r5, #4]
   31840:	bl	3253c <__flatcc_fb_clear_parser@@Base+0x1150>
   31844:	str	r0, [r5, #28]
   31848:	ldr	r7, [r4, #40]	; 0x28
   3184c:	ldr	r0, [r7, #16]
   31850:	cmp	r0, #123	; 0x7b
   31854:	bne	32150 <__flatcc_fb_clear_parser@@Base+0xd64>
   31858:	mov	r0, r4
   3185c:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   31860:	cmp	r7, #0
   31864:	beq	32260 <__flatcc_fb_clear_parser@@Base+0xe74>
   31868:	ldr	r6, [r4, #40]	; 0x28
   3186c:	ldr	r0, [r6, #16]
   31870:	str	r6, [sp, #16]
   31874:	cmp	r0, #125	; 0x7d
   31878:	beq	321d4 <__flatcc_fb_clear_parser@@Base+0xde8>
   3187c:	mov	r9, #0
   31880:	ldr	r7, [r4, #52]	; 0x34
   31884:	ldr	r0, [r4, #44]	; 0x2c
   31888:	add	r1, r7, #128	; 0x80
   3188c:	cmp	r1, r0
   31890:	bls	318c8 <__flatcc_fb_clear_parser@@Base+0x4dc>
   31894:	mov	r0, #65536	; 0x10000
   31898:	mov	r1, #1
   3189c:	bl	147cc <calloc@plt>
   318a0:	cmp	r0, #0
   318a4:	beq	322a0 <__flatcc_fb_clear_parser@@Base+0xeb4>
   318a8:	ldr	r2, [r4, #48]	; 0x30
   318ac:	mov	r1, r0
   318b0:	add	r7, r0, #16
   318b4:	str	r2, [r1], #144	; 0x90
   318b8:	add	r2, r0, #65536	; 0x10000
   318bc:	str	r2, [r4, #44]	; 0x2c
   318c0:	str	r0, [r4, #48]	; 0x30
   318c4:	str	r7, [r4, #52]	; 0x34
   318c8:	str	r1, [r4, #52]	; 0x34
   318cc:	mov	r1, #5
   318d0:	ldr	r0, [r5, #20]
   318d4:	strh	r1, [r7, #8]
   318d8:	str	r0, [r7]
   318dc:	str	r7, [r5, #20]
   318e0:	ldr	r0, [r4, #36]	; 0x24
   318e4:	cmp	r0, #0
   318e8:	beq	3190c <__flatcc_fb_clear_parser@@Base+0x520>
   318ec:	mov	r2, #0
   318f0:	mov	r1, r0
   318f4:	ldr	r0, [r0]
   318f8:	str	r2, [r1]
   318fc:	mov	r2, r1
   31900:	cmp	r0, #0
   31904:	bne	318f0 <__flatcc_fb_clear_parser@@Base+0x504>
   31908:	b	31910 <__flatcc_fb_clear_parser@@Base+0x524>
   3190c:	mov	r1, #0
   31910:	str	r1, [r7, #68]	; 0x44
   31914:	str	r9, [r4, #36]	; 0x24
   31918:	movw	r1, #64569	; 0xfc39
   3191c:	ldr	sl, [r4, #40]	; 0x28
   31920:	movt	r1, #65535	; 0xffff
   31924:	cmp	r8, r1
   31928:	ldr	r0, [sl, #16]
   3192c:	bne	31a0c <__flatcc_fb_clear_parser@@Base+0x620>
   31930:	cmp	r0, #9
   31934:	bne	31ab8 <__flatcc_fb_clear_parser@@Base+0x6cc>
   31938:	mov	r0, r4
   3193c:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   31940:	cmp	sl, #0
   31944:	beq	32040 <__flatcc_fb_clear_parser@@Base+0xc54>
   31948:	str	sl, [r7, #4]
   3194c:	ldr	r6, [r4, #40]	; 0x28
   31950:	ldr	r0, [r6, #16]
   31954:	cmp	r0, #40	; 0x28
   31958:	bne	31be8 <__flatcc_fb_clear_parser@@Base+0x7fc>
   3195c:	mov	r0, r4
   31960:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   31964:	cmp	r6, #0
   31968:	beq	32040 <__flatcc_fb_clear_parser@@Base+0xc54>
   3196c:	add	r1, r7, #32
   31970:	mov	r0, r4
   31974:	bl	32e24 <__flatcc_fb_clear_parser@@Base+0x1a38>
   31978:	ldr	r6, [r4, #40]	; 0x28
   3197c:	ldr	r0, [r6, #16]
   31980:	cmp	r0, #41	; 0x29
   31984:	bne	31d90 <__flatcc_fb_clear_parser@@Base+0x9a4>
   31988:	mov	r0, r4
   3198c:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   31990:	cmp	r6, #0
   31994:	beq	32040 <__flatcc_fb_clear_parser@@Base+0xc54>
   31998:	ldr	r6, [r4, #40]	; 0x28
   3199c:	ldr	r0, [r6, #16]
   319a0:	cmp	r0, #58	; 0x3a
   319a4:	bne	31ee8 <__flatcc_fb_clear_parser@@Base+0xafc>
   319a8:	mov	r0, r4
   319ac:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   319b0:	cmp	r6, #0
   319b4:	beq	32040 <__flatcc_fb_clear_parser@@Base+0xc54>
   319b8:	add	r1, r7, #16
   319bc:	mov	r0, r4
   319c0:	bl	32e24 <__flatcc_fb_clear_parser@@Base+0x1a38>
   319c4:	ldr	r6, [r4, #40]	; 0x28
   319c8:	ldr	r0, [r6, #16]
   319cc:	cmp	r0, #61	; 0x3d
   319d0:	bne	31f44 <__flatcc_fb_clear_parser@@Base+0xb58>
   319d4:	mov	r0, r4
   319d8:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   319dc:	cmp	r6, #0
   319e0:	beq	31f44 <__flatcc_fb_clear_parser@@Base+0xb58>
   319e4:	ldr	r2, [r6]
   319e8:	ldr	r0, [r6, #4]
   319ec:	ldr	r3, [pc, #2380]	; 32340 <__flatcc_fb_clear_parser@@Base+0xf54>
   319f0:	cmp	r2, #0
   319f4:	add	r3, pc, r3
   319f8:	mov	r1, r2
   319fc:	moveq	r0, r2
   31a00:	moveq	r1, r3
   31a04:	mov	r2, r4
   31a08:	b	31d08 <__flatcc_fb_clear_parser@@Base+0x91c>
   31a0c:	cmp	r0, #9
   31a10:	bne	31b14 <__flatcc_fb_clear_parser@@Base+0x728>
   31a14:	mov	r0, r4
   31a18:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   31a1c:	cmp	sl, #0
   31a20:	beq	31d64 <__flatcc_fb_clear_parser@@Base+0x978>
   31a24:	str	sl, [r7, #4]
   31a28:	ldr	r6, [r4, #40]	; 0x28
   31a2c:	ldr	r0, [r6, #16]
   31a30:	cmp	r0, #58	; 0x3a
   31a34:	bne	31c44 <__flatcc_fb_clear_parser@@Base+0x858>
   31a38:	mov	r0, r4
   31a3c:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   31a40:	cmp	r6, #0
   31a44:	beq	31d64 <__flatcc_fb_clear_parser@@Base+0x978>
   31a48:	add	r1, r7, #16
   31a4c:	mov	r0, r4
   31a50:	bl	32e24 <__flatcc_fb_clear_parser@@Base+0x1a38>
   31a54:	ldr	r6, [r4, #40]	; 0x28
   31a58:	ldr	r0, [r6, #16]
   31a5c:	cmp	r0, #61	; 0x3d
   31a60:	bne	31a8c <__flatcc_fb_clear_parser@@Base+0x6a0>
   31a64:	mov	r0, r4
   31a68:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   31a6c:	cmp	r6, #0
   31a70:	beq	31a8c <__flatcc_fb_clear_parser@@Base+0x6a0>
   31a74:	ldr	r3, [pc, #2324]	; 32390 <__flatcc_fb_clear_parser@@Base+0xfa4>
   31a78:	add	r1, r7, #48	; 0x30
   31a7c:	mov	r0, r4
   31a80:	mov	r2, #2
   31a84:	add	r3, pc, r3
   31a88:	bl	327f8 <__flatcc_fb_clear_parser@@Base+0x140c>
   31a8c:	mov	r0, r4
   31a90:	bl	3253c <__flatcc_fb_clear_parser@@Base+0x1150>
   31a94:	str	r0, [r7, #64]	; 0x40
   31a98:	str	r9, [r4, #36]	; 0x24
   31a9c:	ldr	r0, [r4, #40]	; 0x28
   31aa0:	ldr	r1, [r0, #16]
   31aa4:	cmp	r1, #59	; 0x3b
   31aa8:	bne	31dec <__flatcc_fb_clear_parser@@Base+0xa00>
   31aac:	mov	r0, r4
   31ab0:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   31ab4:	b	32078 <__flatcc_fb_clear_parser@@Base+0xc8c>
   31ab8:	cmp	sl, #0
   31abc:	beq	31bb8 <__flatcc_fb_clear_parser@@Base+0x7cc>
   31ac0:	ldr	r2, [sl]
   31ac4:	ldr	r0, [sl, #4]
   31ac8:	ldr	r3, [pc, #2076]	; 322ec <__flatcc_fb_clear_parser@@Base+0xf00>
   31acc:	cmp	r2, #0
   31ad0:	add	r3, pc, r3
   31ad4:	mov	r1, r2
   31ad8:	moveq	r0, r2
   31adc:	moveq	r1, r3
   31ae0:	mov	r2, r4
   31ae4:	b	31af4 <__flatcc_fb_clear_parser@@Base+0x708>
   31ae8:	ldr	r2, [r2]
   31aec:	cmp	r2, #0
   31af0:	beq	31b70 <__flatcc_fb_clear_parser@@Base+0x784>
   31af4:	ldr	r3, [r2, #20]
   31af8:	cmp	r3, sl
   31afc:	bhi	31ae8 <__flatcc_fb_clear_parser@@Base+0x6fc>
   31b00:	ldr	r3, [r2, #24]
   31b04:	cmp	r3, sl
   31b08:	bls	31ae8 <__flatcc_fb_clear_parser@@Base+0x6fc>
   31b0c:	ldr	r2, [r2, #520]	; 0x208
   31b10:	b	31b78 <__flatcc_fb_clear_parser@@Base+0x78c>
   31b14:	cmp	sl, #0
   31b18:	beq	31bd0 <__flatcc_fb_clear_parser@@Base+0x7e4>
   31b1c:	ldr	r2, [sl]
   31b20:	ldr	r0, [sl, #4]
   31b24:	ldr	r3, [pc, #2104]	; 32364 <__flatcc_fb_clear_parser@@Base+0xf78>
   31b28:	cmp	r2, #0
   31b2c:	add	r3, pc, r3
   31b30:	mov	r1, r2
   31b34:	moveq	r0, r2
   31b38:	moveq	r1, r3
   31b3c:	mov	r2, r4
   31b40:	b	31b50 <__flatcc_fb_clear_parser@@Base+0x764>
   31b44:	ldr	r2, [r2]
   31b48:	cmp	r2, #0
   31b4c:	beq	31b94 <__flatcc_fb_clear_parser@@Base+0x7a8>
   31b50:	ldr	r3, [r2, #20]
   31b54:	cmp	r3, sl
   31b58:	bhi	31b44 <__flatcc_fb_clear_parser@@Base+0x758>
   31b5c:	ldr	r3, [r2, #24]
   31b60:	cmp	r3, sl
   31b64:	bls	31b44 <__flatcc_fb_clear_parser@@Base+0x758>
   31b68:	ldr	r2, [r2, #520]	; 0x208
   31b6c:	b	31b9c <__flatcc_fb_clear_parser@@Base+0x7b0>
   31b70:	ldr	r2, [pc, #1912]	; 322f0 <__flatcc_fb_clear_parser@@Base+0xf04>
   31b74:	add	r2, pc, r2
   31b78:	ldr	r7, [sl, #12]
   31b7c:	ldr	r3, [sl, #8]
   31b80:	str	r7, [sp]
   31b84:	stmib	sp, {r0, r1}
   31b88:	ldr	r0, [pc, #1892]	; 322f4 <__flatcc_fb_clear_parser@@Base+0xf08>
   31b8c:	add	r0, pc, r0
   31b90:	b	32020 <__flatcc_fb_clear_parser@@Base+0xc34>
   31b94:	ldr	r2, [pc, #1996]	; 32368 <__flatcc_fb_clear_parser@@Base+0xf7c>
   31b98:	add	r2, pc, r2
   31b9c:	ldr	r7, [sl, #12]
   31ba0:	ldr	r3, [sl, #8]
   31ba4:	str	r7, [sp]
   31ba8:	stmib	sp, {r0, r1}
   31bac:	ldr	r0, [pc, #1976]	; 3236c <__flatcc_fb_clear_parser@@Base+0xf80>
   31bb0:	add	r0, pc, r0
   31bb4:	b	31ce4 <__flatcc_fb_clear_parser@@Base+0x8f8>
   31bb8:	ldr	r1, [pc, #1852]	; 322fc <__flatcc_fb_clear_parser@@Base+0xf10>
   31bbc:	ldr	r2, [pc, #1852]	; 32300 <__flatcc_fb_clear_parser@@Base+0xf14>
   31bc0:	mov	r0, r4
   31bc4:	add	r1, pc, r1
   31bc8:	add	r2, pc, r2
   31bcc:	b	31ff8 <__flatcc_fb_clear_parser@@Base+0xc0c>
   31bd0:	ldr	r1, [pc, #1948]	; 32374 <__flatcc_fb_clear_parser@@Base+0xf88>
   31bd4:	ldr	r2, [pc, #1948]	; 32378 <__flatcc_fb_clear_parser@@Base+0xf8c>
   31bd8:	mov	r0, r4
   31bdc:	add	r1, pc, r1
   31be0:	add	r2, pc, r2
   31be4:	b	31d54 <__flatcc_fb_clear_parser@@Base+0x968>
   31be8:	cmp	r6, #0
   31bec:	beq	31d28 <__flatcc_fb_clear_parser@@Base+0x93c>
   31bf0:	ldr	r2, [r6]
   31bf4:	ldr	r0, [r6, #4]
   31bf8:	ldr	r3, [pc, #1796]	; 32304 <__flatcc_fb_clear_parser@@Base+0xf18>
   31bfc:	cmp	r2, #0
   31c00:	add	r3, pc, r3
   31c04:	mov	r1, r2
   31c08:	moveq	r0, r2
   31c0c:	moveq	r1, r3
   31c10:	mov	r2, r4
   31c14:	b	31c24 <__flatcc_fb_clear_parser@@Base+0x838>
   31c18:	ldr	r2, [r2]
   31c1c:	cmp	r2, #0
   31c20:	beq	31ca0 <__flatcc_fb_clear_parser@@Base+0x8b4>
   31c24:	ldr	r3, [r2, #20]
   31c28:	cmp	r3, r6
   31c2c:	bhi	31c18 <__flatcc_fb_clear_parser@@Base+0x82c>
   31c30:	ldr	r3, [r2, #24]
   31c34:	cmp	r3, r6
   31c38:	bls	31c18 <__flatcc_fb_clear_parser@@Base+0x82c>
   31c3c:	ldr	r2, [r2, #520]	; 0x208
   31c40:	b	31ca8 <__flatcc_fb_clear_parser@@Base+0x8bc>
   31c44:	cmp	r6, #0
   31c48:	beq	31d40 <__flatcc_fb_clear_parser@@Base+0x954>
   31c4c:	ldr	r2, [r6]
   31c50:	ldr	r0, [r6, #4]
   31c54:	ldr	r3, [pc, #1824]	; 3237c <__flatcc_fb_clear_parser@@Base+0xf90>
   31c58:	cmp	r2, #0
   31c5c:	add	r3, pc, r3
   31c60:	mov	r1, r2
   31c64:	moveq	r0, r2
   31c68:	moveq	r1, r3
   31c6c:	mov	r2, r4
   31c70:	b	31c80 <__flatcc_fb_clear_parser@@Base+0x894>
   31c74:	ldr	r2, [r2]
   31c78:	cmp	r2, #0
   31c7c:	beq	31cc4 <__flatcc_fb_clear_parser@@Base+0x8d8>
   31c80:	ldr	r3, [r2, #20]
   31c84:	cmp	r3, r6
   31c88:	bhi	31c74 <__flatcc_fb_clear_parser@@Base+0x888>
   31c8c:	ldr	r3, [r2, #24]
   31c90:	cmp	r3, r6
   31c94:	bls	31c74 <__flatcc_fb_clear_parser@@Base+0x888>
   31c98:	ldr	r2, [r2, #520]	; 0x208
   31c9c:	b	31ccc <__flatcc_fb_clear_parser@@Base+0x8e0>
   31ca0:	ldr	r2, [pc, #1632]	; 32308 <__flatcc_fb_clear_parser@@Base+0xf1c>
   31ca4:	add	r2, pc, r2
   31ca8:	ldr	r7, [r6, #12]
   31cac:	ldr	r3, [r6, #8]
   31cb0:	str	r7, [sp]
   31cb4:	stmib	sp, {r0, r1}
   31cb8:	ldr	r0, [pc, #1612]	; 3230c <__flatcc_fb_clear_parser@@Base+0xf20>
   31cbc:	add	r0, pc, r0
   31cc0:	b	32020 <__flatcc_fb_clear_parser@@Base+0xc34>
   31cc4:	ldr	r2, [pc, #1716]	; 32380 <__flatcc_fb_clear_parser@@Base+0xf94>
   31cc8:	add	r2, pc, r2
   31ccc:	ldr	r7, [r6, #12]
   31cd0:	ldr	r3, [r6, #8]
   31cd4:	str	r7, [sp]
   31cd8:	stmib	sp, {r0, r1}
   31cdc:	ldr	r0, [pc, #1696]	; 32384 <__flatcc_fb_clear_parser@@Base+0xf98>
   31ce0:	add	r0, pc, r0
   31ce4:	str	r0, [sp, #12]
   31ce8:	mov	r0, r4
   31cec:	ldr	r1, [pc, #1660]	; 32370 <__flatcc_fb_clear_parser@@Base+0xf84>
   31cf0:	add	r1, pc, r1
   31cf4:	bl	29e1c <__flatcc_fb_print_error@@Base>
   31cf8:	b	31d58 <__flatcc_fb_clear_parser@@Base+0x96c>
   31cfc:	ldr	r2, [r2]
   31d00:	cmp	r2, #0
   31d04:	beq	32000 <__flatcc_fb_clear_parser@@Base+0xc14>
   31d08:	ldr	r3, [r2, #20]
   31d0c:	cmp	r3, r6
   31d10:	bhi	31cfc <__flatcc_fb_clear_parser@@Base+0x910>
   31d14:	ldr	r3, [r2, #24]
   31d18:	cmp	r3, r6
   31d1c:	bls	31cfc <__flatcc_fb_clear_parser@@Base+0x910>
   31d20:	ldr	r2, [r2, #520]	; 0x208
   31d24:	b	32008 <__flatcc_fb_clear_parser@@Base+0xc1c>
   31d28:	ldr	r1, [pc, #1504]	; 32310 <__flatcc_fb_clear_parser@@Base+0xf24>
   31d2c:	ldr	r2, [pc, #1504]	; 32314 <__flatcc_fb_clear_parser@@Base+0xf28>
   31d30:	mov	r0, r4
   31d34:	add	r1, pc, r1
   31d38:	add	r2, pc, r2
   31d3c:	b	31ff8 <__flatcc_fb_clear_parser@@Base+0xc0c>
   31d40:	ldr	r1, [pc, #1600]	; 32388 <__flatcc_fb_clear_parser@@Base+0xf9c>
   31d44:	ldr	r2, [pc, #1600]	; 3238c <__flatcc_fb_clear_parser@@Base+0xfa0>
   31d48:	mov	r0, r4
   31d4c:	add	r1, pc, r1
   31d50:	add	r2, pc, r2
   31d54:	bl	29e1c <__flatcc_fb_print_error@@Base>
   31d58:	ldr	r0, [r4, #108]	; 0x6c
   31d5c:	add	r0, r0, #1
   31d60:	str	r0, [r4, #108]	; 0x6c
   31d64:	ldr	r0, [r4, #40]	; 0x28
   31d68:	ldr	r0, [r0, #16]
   31d6c:	cmp	r0, #0
   31d70:	beq	32078 <__flatcc_fb_clear_parser@@Base+0xc8c>
   31d74:	cmp	r0, #125	; 0x7d
   31d78:	beq	32074 <__flatcc_fb_clear_parser@@Base+0xc88>
   31d7c:	cmp	r0, #59	; 0x3b
   31d80:	beq	3206c <__flatcc_fb_clear_parser@@Base+0xc80>
   31d84:	mov	r0, r4
   31d88:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   31d8c:	b	31d64 <__flatcc_fb_clear_parser@@Base+0x978>
   31d90:	cmp	r6, #0
   31d94:	beq	31ea0 <__flatcc_fb_clear_parser@@Base+0xab4>
   31d98:	ldr	r2, [r6]
   31d9c:	ldr	r0, [r6, #4]
   31da0:	ldr	r3, [pc, #1392]	; 32318 <__flatcc_fb_clear_parser@@Base+0xf2c>
   31da4:	cmp	r2, #0
   31da8:	add	r3, pc, r3
   31dac:	mov	r1, r2
   31db0:	moveq	r0, r2
   31db4:	moveq	r1, r3
   31db8:	mov	r2, r4
   31dbc:	b	31dcc <__flatcc_fb_clear_parser@@Base+0x9e0>
   31dc0:	ldr	r2, [r2]
   31dc4:	cmp	r2, #0
   31dc8:	beq	31e48 <__flatcc_fb_clear_parser@@Base+0xa5c>
   31dcc:	ldr	r3, [r2, #20]
   31dd0:	cmp	r3, r6
   31dd4:	bhi	31dc0 <__flatcc_fb_clear_parser@@Base+0x9d4>
   31dd8:	ldr	r3, [r2, #24]
   31ddc:	cmp	r3, r6
   31de0:	bls	31dc0 <__flatcc_fb_clear_parser@@Base+0x9d4>
   31de4:	ldr	r2, [r2, #520]	; 0x208
   31de8:	b	31e50 <__flatcc_fb_clear_parser@@Base+0xa64>
   31dec:	cmp	r0, #0
   31df0:	beq	31eb8 <__flatcc_fb_clear_parser@@Base+0xacc>
   31df4:	ldr	r2, [r0]
   31df8:	ldr	r1, [r0, #4]
   31dfc:	ldr	r3, [pc, #1424]	; 32394 <__flatcc_fb_clear_parser@@Base+0xfa8>
   31e00:	cmp	r2, #0
   31e04:	add	r3, pc, r3
   31e08:	mov	r7, r2
   31e0c:	moveq	r1, r2
   31e10:	moveq	r7, r3
   31e14:	mov	r2, r4
   31e18:	b	31e28 <__flatcc_fb_clear_parser@@Base+0xa3c>
   31e1c:	ldr	r2, [r2]
   31e20:	cmp	r2, #0
   31e24:	beq	31e6c <__flatcc_fb_clear_parser@@Base+0xa80>
   31e28:	ldr	r3, [r2, #20]
   31e2c:	cmp	r3, r0
   31e30:	bhi	31e1c <__flatcc_fb_clear_parser@@Base+0xa30>
   31e34:	ldr	r3, [r2, #24]
   31e38:	cmp	r3, r0
   31e3c:	bls	31e1c <__flatcc_fb_clear_parser@@Base+0xa30>
   31e40:	ldr	r2, [r2, #520]	; 0x208
   31e44:	b	31e74 <__flatcc_fb_clear_parser@@Base+0xa88>
   31e48:	ldr	r2, [pc, #1228]	; 3231c <__flatcc_fb_clear_parser@@Base+0xf30>
   31e4c:	add	r2, pc, r2
   31e50:	ldr	r7, [r6, #12]
   31e54:	ldr	r3, [r6, #8]
   31e58:	str	r7, [sp]
   31e5c:	stmib	sp, {r0, r1}
   31e60:	ldr	r0, [pc, #1208]	; 32320 <__flatcc_fb_clear_parser@@Base+0xf34>
   31e64:	add	r0, pc, r0
   31e68:	b	32020 <__flatcc_fb_clear_parser@@Base+0xc34>
   31e6c:	ldr	r2, [pc, #1316]	; 32398 <__flatcc_fb_clear_parser@@Base+0xfac>
   31e70:	add	r2, pc, r2
   31e74:	ldr	r3, [r0, #8]
   31e78:	ldr	r0, [r0, #12]
   31e7c:	stm	sp, {r0, r1, r7}
   31e80:	ldr	r0, [pc, #1300]	; 3239c <__flatcc_fb_clear_parser@@Base+0xfb0>
   31e84:	add	r0, pc, r0
   31e88:	str	r0, [sp, #12]
   31e8c:	mov	r0, r4
   31e90:	ldr	r1, [pc, #1216]	; 32358 <__flatcc_fb_clear_parser@@Base+0xf6c>
   31e94:	add	r1, pc, r1
   31e98:	bl	29e1c <__flatcc_fb_print_error@@Base>
   31e9c:	b	31ed0 <__flatcc_fb_clear_parser@@Base+0xae4>
   31ea0:	ldr	r1, [pc, #1148]	; 32324 <__flatcc_fb_clear_parser@@Base+0xf38>
   31ea4:	ldr	r2, [pc, #1148]	; 32328 <__flatcc_fb_clear_parser@@Base+0xf3c>
   31ea8:	mov	r0, r4
   31eac:	add	r1, pc, r1
   31eb0:	add	r2, pc, r2
   31eb4:	b	31ff8 <__flatcc_fb_clear_parser@@Base+0xc0c>
   31eb8:	ldr	r1, [pc, #1248]	; 323a0 <__flatcc_fb_clear_parser@@Base+0xfb4>
   31ebc:	ldr	r2, [pc, #1248]	; 323a4 <__flatcc_fb_clear_parser@@Base+0xfb8>
   31ec0:	mov	r0, r4
   31ec4:	add	r1, pc, r1
   31ec8:	add	r2, pc, r2
   31ecc:	bl	29e1c <__flatcc_fb_print_error@@Base>
   31ed0:	ldr	r0, [r4, #108]	; 0x6c
   31ed4:	add	r0, r0, #1
   31ed8:	str	r0, [r4, #108]	; 0x6c
   31edc:	cmp	r0, #9
   31ee0:	ble	32084 <__flatcc_fb_clear_parser@@Base+0xc98>
   31ee4:	b	32260 <__flatcc_fb_clear_parser@@Base+0xe74>
   31ee8:	cmp	r6, #0
   31eec:	beq	31fe4 <__flatcc_fb_clear_parser@@Base+0xbf8>
   31ef0:	ldr	r2, [r6]
   31ef4:	ldr	r0, [r6, #4]
   31ef8:	ldr	r3, [pc, #1068]	; 3232c <__flatcc_fb_clear_parser@@Base+0xf40>
   31efc:	cmp	r2, #0
   31f00:	add	r3, pc, r3
   31f04:	mov	r1, r2
   31f08:	moveq	r0, r2
   31f0c:	moveq	r1, r3
   31f10:	mov	r2, r4
   31f14:	b	31f24 <__flatcc_fb_clear_parser@@Base+0xb38>
   31f18:	ldr	r2, [r2]
   31f1c:	cmp	r2, #0
   31f20:	beq	31fc0 <__flatcc_fb_clear_parser@@Base+0xbd4>
   31f24:	ldr	r3, [r2, #20]
   31f28:	cmp	r3, r6
   31f2c:	bhi	31f18 <__flatcc_fb_clear_parser@@Base+0xb2c>
   31f30:	ldr	r3, [r2, #24]
   31f34:	cmp	r3, r6
   31f38:	bls	31f18 <__flatcc_fb_clear_parser@@Base+0xb2c>
   31f3c:	ldr	r2, [r2, #520]	; 0x208
   31f40:	b	31fc8 <__flatcc_fb_clear_parser@@Base+0xbdc>
   31f44:	mov	r0, r4
   31f48:	bl	3253c <__flatcc_fb_clear_parser@@Base+0x1150>
   31f4c:	str	r0, [r7, #64]	; 0x40
   31f50:	str	r9, [r4, #36]	; 0x24
   31f54:	ldr	r0, [r4, #40]	; 0x28
   31f58:	ldr	r1, [r0, #16]
   31f5c:	cmp	r1, #59	; 0x3b
   31f60:	beq	31aac <__flatcc_fb_clear_parser@@Base+0x6c0>
   31f64:	cmp	r0, #0
   31f68:	beq	320b8 <__flatcc_fb_clear_parser@@Base+0xccc>
   31f6c:	ldr	r2, [r0]
   31f70:	ldr	r1, [r0, #4]
   31f74:	ldr	r3, [pc, #976]	; 3234c <__flatcc_fb_clear_parser@@Base+0xf60>
   31f78:	cmp	r2, #0
   31f7c:	add	r3, pc, r3
   31f80:	mov	r7, r2
   31f84:	moveq	r1, r2
   31f88:	moveq	r7, r3
   31f8c:	mov	r2, r4
   31f90:	b	31fa0 <__flatcc_fb_clear_parser@@Base+0xbb4>
   31f94:	ldr	r2, [r2]
   31f98:	cmp	r2, #0
   31f9c:	beq	32098 <__flatcc_fb_clear_parser@@Base+0xcac>
   31fa0:	ldr	r3, [r2, #20]
   31fa4:	cmp	r3, r0
   31fa8:	bhi	31f94 <__flatcc_fb_clear_parser@@Base+0xba8>
   31fac:	ldr	r3, [r2, #24]
   31fb0:	cmp	r3, r0
   31fb4:	bls	31f94 <__flatcc_fb_clear_parser@@Base+0xba8>
   31fb8:	ldr	r2, [r2, #520]	; 0x208
   31fbc:	b	320a0 <__flatcc_fb_clear_parser@@Base+0xcb4>
   31fc0:	ldr	r2, [pc, #872]	; 32330 <__flatcc_fb_clear_parser@@Base+0xf44>
   31fc4:	add	r2, pc, r2
   31fc8:	ldr	r7, [r6, #12]
   31fcc:	ldr	r3, [r6, #8]
   31fd0:	str	r7, [sp]
   31fd4:	stmib	sp, {r0, r1}
   31fd8:	ldr	r0, [pc, #852]	; 32334 <__flatcc_fb_clear_parser@@Base+0xf48>
   31fdc:	add	r0, pc, r0
   31fe0:	b	32020 <__flatcc_fb_clear_parser@@Base+0xc34>
   31fe4:	ldr	r1, [pc, #844]	; 32338 <__flatcc_fb_clear_parser@@Base+0xf4c>
   31fe8:	ldr	r2, [pc, #844]	; 3233c <__flatcc_fb_clear_parser@@Base+0xf50>
   31fec:	mov	r0, r4
   31ff0:	add	r1, pc, r1
   31ff4:	add	r2, pc, r2
   31ff8:	bl	29e1c <__flatcc_fb_print_error@@Base>
   31ffc:	b	32034 <__flatcc_fb_clear_parser@@Base+0xc48>
   32000:	ldr	r2, [pc, #828]	; 32344 <__flatcc_fb_clear_parser@@Base+0xf58>
   32004:	add	r2, pc, r2
   32008:	ldr	r7, [r6, #12]
   3200c:	ldr	r3, [r6, #8]
   32010:	str	r7, [sp]
   32014:	stmib	sp, {r0, r1}
   32018:	ldr	r0, [pc, #808]	; 32348 <__flatcc_fb_clear_parser@@Base+0xf5c>
   3201c:	add	r0, pc, r0
   32020:	str	r0, [sp, #12]
   32024:	mov	r0, r4
   32028:	ldr	r1, [pc, #712]	; 322f8 <__flatcc_fb_clear_parser@@Base+0xf0c>
   3202c:	add	r1, pc, r1
   32030:	bl	29e1c <__flatcc_fb_print_error@@Base>
   32034:	ldr	r0, [r4, #108]	; 0x6c
   32038:	add	r0, r0, #1
   3203c:	str	r0, [r4, #108]	; 0x6c
   32040:	ldr	r0, [r4, #40]	; 0x28
   32044:	ldr	r0, [r0, #16]
   32048:	cmp	r0, #0
   3204c:	beq	32078 <__flatcc_fb_clear_parser@@Base+0xc8c>
   32050:	cmp	r0, #125	; 0x7d
   32054:	beq	32074 <__flatcc_fb_clear_parser@@Base+0xc88>
   32058:	cmp	r0, #59	; 0x3b
   3205c:	beq	3206c <__flatcc_fb_clear_parser@@Base+0xc80>
   32060:	mov	r0, r4
   32064:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   32068:	b	32040 <__flatcc_fb_clear_parser@@Base+0xc54>
   3206c:	mov	r0, r4
   32070:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   32074:	str	r9, [r4, #36]	; 0x24
   32078:	ldr	r0, [r4, #108]	; 0x6c
   3207c:	cmp	r0, #9
   32080:	bgt	32260 <__flatcc_fb_clear_parser@@Base+0xe74>
   32084:	ldr	r6, [r4, #40]	; 0x28
   32088:	ldr	r0, [r6, #16]
   3208c:	cmp	r0, #125	; 0x7d
   32090:	bne	31880 <__flatcc_fb_clear_parser@@Base+0x494>
   32094:	b	321d4 <__flatcc_fb_clear_parser@@Base+0xde8>
   32098:	ldr	r2, [pc, #688]	; 32350 <__flatcc_fb_clear_parser@@Base+0xf64>
   3209c:	add	r2, pc, r2
   320a0:	ldr	r3, [r0, #8]
   320a4:	ldr	r0, [r0, #12]
   320a8:	stm	sp, {r0, r1, r7}
   320ac:	ldr	r0, [pc, #672]	; 32354 <__flatcc_fb_clear_parser@@Base+0xf68>
   320b0:	add	r0, pc, r0
   320b4:	b	31e88 <__flatcc_fb_clear_parser@@Base+0xa9c>
   320b8:	ldr	r1, [pc, #668]	; 3235c <__flatcc_fb_clear_parser@@Base+0xf70>
   320bc:	ldr	r2, [pc, #668]	; 32360 <__flatcc_fb_clear_parser@@Base+0xf74>
   320c0:	mov	r0, r4
   320c4:	add	r1, pc, r1
   320c8:	add	r2, pc, r2
   320cc:	b	31ecc <__flatcc_fb_clear_parser@@Base+0xae0>
   320d0:	cmp	r7, #0
   320d4:	beq	3213c <__flatcc_fb_clear_parser@@Base+0xd50>
   320d8:	ldr	r3, [r7]
   320dc:	ldr	r0, [r7, #4]
   320e0:	ldr	r2, [pc, #480]	; 322c8 <__flatcc_fb_clear_parser@@Base+0xedc>
   320e4:	cmp	r3, #0
   320e8:	add	r2, pc, r2
   320ec:	mov	r1, r3
   320f0:	moveq	r0, r3
   320f4:	moveq	r1, r2
   320f8:	mov	r3, r4
   320fc:	b	3210c <__flatcc_fb_clear_parser@@Base+0xd20>
   32100:	ldr	r3, [r3]
   32104:	cmp	r3, #0
   32108:	beq	32128 <__flatcc_fb_clear_parser@@Base+0xd3c>
   3210c:	ldr	r6, [r3, #20]
   32110:	cmp	r6, r7
   32114:	bhi	32100 <__flatcc_fb_clear_parser@@Base+0xd14>
   32118:	ldr	r6, [r3, #24]
   3211c:	cmp	r6, r7
   32120:	bls	32100 <__flatcc_fb_clear_parser@@Base+0xd14>
   32124:	ldr	r2, [r3, #520]	; 0x208
   32128:	ldr	r3, [r7, #8]
   3212c:	ldr	r7, [r7, #12]
   32130:	ldr	r6, [pc, #404]	; 322cc <__flatcc_fb_clear_parser@@Base+0xee0>
   32134:	add	r6, pc, r6
   32138:	b	321b8 <__flatcc_fb_clear_parser@@Base+0xdcc>
   3213c:	ldr	r1, [pc, #400]	; 322d4 <__flatcc_fb_clear_parser@@Base+0xee8>
   32140:	ldr	r2, [pc, #400]	; 322d8 <__flatcc_fb_clear_parser@@Base+0xeec>
   32144:	add	r1, pc, r1
   32148:	add	r2, pc, r2
   3214c:	b	3224c <__flatcc_fb_clear_parser@@Base+0xe60>
   32150:	cmp	r7, #0
   32154:	beq	3223c <__flatcc_fb_clear_parser@@Base+0xe50>
   32158:	ldr	r3, [r7]
   3215c:	ldr	r0, [r7, #4]
   32160:	ldr	r2, [pc, #372]	; 322dc <__flatcc_fb_clear_parser@@Base+0xef0>
   32164:	cmp	r3, #0
   32168:	add	r2, pc, r2
   3216c:	mov	r1, r3
   32170:	moveq	r0, r3
   32174:	moveq	r1, r2
   32178:	mov	r3, r4
   3217c:	b	3218c <__flatcc_fb_clear_parser@@Base+0xda0>
   32180:	ldr	r3, [r3]
   32184:	cmp	r3, #0
   32188:	beq	321a8 <__flatcc_fb_clear_parser@@Base+0xdbc>
   3218c:	ldr	r6, [r3, #20]
   32190:	cmp	r6, r7
   32194:	bhi	32180 <__flatcc_fb_clear_parser@@Base+0xd94>
   32198:	ldr	r6, [r3, #24]
   3219c:	cmp	r6, r7
   321a0:	bls	32180 <__flatcc_fb_clear_parser@@Base+0xd94>
   321a4:	ldr	r2, [r3, #520]	; 0x208
   321a8:	ldr	r3, [r7, #8]
   321ac:	ldr	r7, [r7, #12]
   321b0:	ldr	r6, [pc, #296]	; 322e0 <__flatcc_fb_clear_parser@@Base+0xef4>
   321b4:	add	r6, pc, r6
   321b8:	str	r7, [sp]
   321bc:	stmib	sp, {r0, r1, r6}
   321c0:	mov	r0, r4
   321c4:	ldr	r1, [pc, #260]	; 322d0 <__flatcc_fb_clear_parser@@Base+0xee4>
   321c8:	add	r1, pc, r1
   321cc:	bl	29e1c <__flatcc_fb_print_error@@Base>
   321d0:	b	32254 <__flatcc_fb_clear_parser@@Base+0xe68>
   321d4:	mov	r0, r4
   321d8:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   321dc:	ldr	r3, [sp, #16]
   321e0:	cmp	r3, #0
   321e4:	beq	32210 <__flatcc_fb_clear_parser@@Base+0xe24>
   321e8:	cmp	r6, #0
   321ec:	bne	32210 <__flatcc_fb_clear_parser@@Base+0xe24>
   321f0:	mov	r0, #0
   321f4:	ldr	r1, [r4, #40]	; 0x28
   321f8:	str	r0, [sp]
   321fc:	str	r0, [sp, #4]
   32200:	mov	r0, r4
   32204:	ldr	r2, [pc, #412]	; 323a8 <__flatcc_fb_clear_parser@@Base+0xfbc>
   32208:	add	r2, pc, r2
   3220c:	bl	29ee4 <__flatcc_error_report@@Base>
   32210:	ldr	r0, [r5, #20]
   32214:	cmp	r0, #0
   32218:	beq	32290 <__flatcc_fb_clear_parser@@Base+0xea4>
   3221c:	mov	r2, #0
   32220:	mov	r1, r0
   32224:	ldr	r0, [r0]
   32228:	str	r2, [r1]
   3222c:	mov	r2, r1
   32230:	cmp	r0, #0
   32234:	bne	32220 <__flatcc_fb_clear_parser@@Base+0xe34>
   32238:	b	32294 <__flatcc_fb_clear_parser@@Base+0xea8>
   3223c:	ldr	r1, [pc, #160]	; 322e4 <__flatcc_fb_clear_parser@@Base+0xef8>
   32240:	ldr	r2, [pc, #160]	; 322e8 <__flatcc_fb_clear_parser@@Base+0xefc>
   32244:	add	r1, pc, r1
   32248:	add	r2, pc, r2
   3224c:	mov	r0, r4
   32250:	bl	29e1c <__flatcc_fb_print_error@@Base>
   32254:	ldr	r0, [r4, #108]	; 0x6c
   32258:	add	r0, r0, #1
   3225c:	str	r0, [r4, #108]	; 0x6c
   32260:	ldr	r0, [r4, #40]	; 0x28
   32264:	ldr	r5, [r0, #16]
   32268:	cmp	r5, #0
   3226c:	beq	32298 <__flatcc_fb_clear_parser@@Base+0xeac>
   32270:	mov	r0, r4
   32274:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   32278:	cmp	r5, #125	; 0x7d
   3227c:	bne	32260 <__flatcc_fb_clear_parser@@Base+0xe74>
   32280:	mov	r0, #0
   32284:	str	r0, [r4, #36]	; 0x24
   32288:	sub	sp, fp, #28
   3228c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32290:	mov	r1, #0
   32294:	str	r1, [r5, #20]
   32298:	sub	sp, fp, #28
   3229c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   322a0:	ldr	r0, [pc, #260]	; 323ac <__flatcc_fb_clear_parser@@Base+0xfc0>
   322a4:	mov	r1, #34	; 0x22
   322a8:	mov	r2, #1
   322ac:	ldr	r0, [pc, r0]
   322b0:	ldr	r3, [r0]
   322b4:	ldr	r0, [pc, #244]	; 323b0 <__flatcc_fb_clear_parser@@Base+0xfc4>
   322b8:	add	r0, pc, r0
   322bc:	bl	14850 <fwrite@plt>
   322c0:	mov	r0, #1
   322c4:	bl	14898 <exit@plt>
   322c8:			; <UNDEFINED> instruction: 0x0000d5b6
   322cc:	andeq	r4, r2, fp, asr fp
   322d0:	muleq	r2, fp, r3
   322d4:	andeq	r4, r2, r1, ror r4
   322d8:	andeq	r4, r2, r7, asr #22
   322dc:	andeq	sp, r0, r6, lsr r5
   322e0:	strdeq	r4, [r2], -lr
   322e4:	andeq	r4, r2, r1, ror r3
   322e8:	andeq	r4, r2, sl, ror #20
   322ec:	andeq	sp, r0, lr, asr #23
   322f0:	andeq	sp, r0, sl, lsr #22
   322f4:	andeq	r5, r2, r5, lsr #5
   322f8:	andeq	r4, r2, r7, lsr r5
   322fc:	strdeq	r4, [r2], -r1
   32300:	andeq	r5, r2, r9, ror #4
   32304:	muleq	r0, lr, sl
   32308:	strdeq	sp, [r0], -sl
   3230c:	muleq	r2, r0, r1
   32310:	andeq	r4, r2, r1, lsl #17
   32314:	andeq	r5, r2, r4, lsl r1
   32318:	strdeq	sp, [r0], -r6
   3231c:	andeq	sp, r0, r2, asr r8
   32320:	andeq	r5, r2, sp
   32324:	andeq	r4, r2, r9, lsl #14
   32328:	andeq	r4, r2, r1, asr #31
   3232c:	muleq	r0, lr, r7
   32330:	ldrdeq	sp, [r0], -sl
   32334:			; <UNDEFINED> instruction: 0x00024ebc
   32338:	andeq	r4, r2, r5, asr #11
   3233c:	andeq	r4, r2, r4, lsr #29
   32340:	andeq	sp, r0, sl, lsr #25
   32344:	muleq	r0, sl, r6
   32348:	andeq	r4, r2, pc, lsr #29
   3234c:	andeq	sp, r0, r2, lsr #14
   32350:	andeq	sp, r0, r2, lsl #12
   32354:	andeq	r4, r2, r1, asr #28
   32358:	andeq	r4, r2, pc, asr #13
   3235c:	strdeq	r4, [r2], -r1
   32360:	andeq	r4, r2, r9, lsr #28
   32364:	andeq	sp, r0, r2, ror fp
   32368:	andeq	sp, r0, r6, lsl #22
   3236c:	strdeq	r5, [r2], -r7
   32370:	andeq	r4, r2, r3, ror r8
   32374:	ldrdeq	r4, [r2], -r9
   32378:	andeq	r5, r2, r7, asr #7
   3237c:	andeq	sp, r0, r2, asr #20
   32380:	ldrdeq	sp, [r0], -r6
   32384:	andeq	r5, r2, r1, ror #5
   32388:	andeq	r4, r2, r9, ror #16
   3238c:	andeq	r5, r2, r1, ror r2
   32390:	andeq	r5, r2, r6, ror #10
   32394:	muleq	r0, sl, r8
   32398:	andeq	sp, r0, lr, lsr #16
   3239c:	andeq	r5, r2, r9, lsl #3
   323a0:	strdeq	r4, [r2], -r1
   323a4:	andeq	r5, r2, r5, asr #2
   323a8:	andeq	r4, r2, r3, asr #21
   323ac:	strdeq	r8, [r3], -r0
   323b0:	andeq	ip, r0, pc, lsl #30
   323b4:	push	{r4, r5, r6, r7, fp, lr}
   323b8:	add	fp, sp, #16
   323bc:	sub	sp, sp, #8
   323c0:	mov	r7, r1
   323c4:	ldr	r1, [r0, #52]	; 0x34
   323c8:	ldr	r3, [r0, #44]	; 0x2c
   323cc:	ldr	r6, [r0, #40]	; 0x28
   323d0:	mov	r4, r0
   323d4:	add	r2, r1, #16
   323d8:	cmp	r2, r3
   323dc:	bls	32414 <__flatcc_fb_clear_parser@@Base+0x1028>
   323e0:	mov	r0, #65536	; 0x10000
   323e4:	mov	r1, #1
   323e8:	bl	147cc <calloc@plt>
   323ec:	cmp	r0, #0
   323f0:	beq	32508 <__flatcc_fb_clear_parser@@Base+0x111c>
   323f4:	ldr	r1, [r4, #48]	; 0x30
   323f8:	mov	r2, r0
   323fc:	add	r3, r0, #65536	; 0x10000
   32400:	str	r1, [r2], #32
   32404:	add	r1, r0, #16
   32408:	str	r3, [r4, #44]	; 0x2c
   3240c:	str	r0, [r4, #48]	; 0x30
   32410:	str	r1, [r4, #52]	; 0x34
   32414:	mov	r0, r4
   32418:	str	r2, [r4, #52]	; 0x34
   3241c:	str	r6, [r1, #4]
   32420:	str	r1, [r7]
   32424:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   32428:	ldr	r5, [r4, #40]	; 0x28
   3242c:	ldr	r0, [r5, #16]
   32430:	cmp	r0, #46	; 0x2e
   32434:	bne	324d4 <__flatcc_fb_clear_parser@@Base+0x10e8>
   32438:	ldr	r6, [r7]
   3243c:	b	32468 <__flatcc_fb_clear_parser@@Base+0x107c>
   32440:	mov	r0, r4
   32444:	str	r1, [r4, #52]	; 0x34
   32448:	str	r5, [r7, #4]
   3244c:	str	r7, [r6]
   32450:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   32454:	ldr	r5, [r4, #40]	; 0x28
   32458:	mov	r6, r7
   3245c:	ldr	r0, [r5, #16]
   32460:	cmp	r0, #46	; 0x2e
   32464:	bne	324d4 <__flatcc_fb_clear_parser@@Base+0x10e8>
   32468:	mov	r0, r4
   3246c:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   32470:	cmp	r5, #0
   32474:	beq	324d4 <__flatcc_fb_clear_parser@@Base+0x10e8>
   32478:	ldr	r5, [r4, #40]	; 0x28
   3247c:	ldr	r0, [r5, #16]
   32480:	cmp	r0, #9
   32484:	bne	324dc <__flatcc_fb_clear_parser@@Base+0x10f0>
   32488:	ldr	r7, [r4, #52]	; 0x34
   3248c:	ldr	r0, [r4, #44]	; 0x2c
   32490:	add	r1, r7, #16
   32494:	cmp	r1, r0
   32498:	bls	32440 <__flatcc_fb_clear_parser@@Base+0x1054>
   3249c:	mov	r0, #65536	; 0x10000
   324a0:	mov	r1, #1
   324a4:	bl	147cc <calloc@plt>
   324a8:	cmp	r0, #0
   324ac:	beq	32508 <__flatcc_fb_clear_parser@@Base+0x111c>
   324b0:	ldr	r2, [r4, #48]	; 0x30
   324b4:	mov	r1, r0
   324b8:	add	r7, r0, #16
   324bc:	str	r2, [r1], #32
   324c0:	add	r2, r0, #65536	; 0x10000
   324c4:	str	r2, [r4, #44]	; 0x2c
   324c8:	str	r0, [r4, #48]	; 0x30
   324cc:	str	r7, [r4, #52]	; 0x34
   324d0:	b	32440 <__flatcc_fb_clear_parser@@Base+0x1054>
   324d4:	sub	sp, fp, #16
   324d8:	pop	{r4, r5, r6, r7, fp, pc}
   324dc:	mov	r0, #0
   324e0:	mov	r1, r5
   324e4:	mov	r3, #0
   324e8:	str	r0, [sp]
   324ec:	str	r0, [sp, #4]
   324f0:	mov	r0, r4
   324f4:	ldr	r2, [pc, #60]	; 32538 <__flatcc_fb_clear_parser@@Base+0x114c>
   324f8:	add	r2, pc, r2
   324fc:	bl	29ee4 <__flatcc_error_report@@Base>
   32500:	sub	sp, fp, #16
   32504:	pop	{r4, r5, r6, r7, fp, pc}
   32508:	ldr	r0, [pc, #32]	; 32530 <__flatcc_fb_clear_parser@@Base+0x1144>
   3250c:	mov	r1, #34	; 0x22
   32510:	mov	r2, #1
   32514:	ldr	r0, [pc, r0]
   32518:	ldr	r3, [r0]
   3251c:	ldr	r0, [pc, #16]	; 32534 <__flatcc_fb_clear_parser@@Base+0x1148>
   32520:	add	r0, pc, r0
   32524:	bl	14850 <fwrite@plt>
   32528:	mov	r0, #1
   3252c:	bl	14898 <exit@plt>
   32530:	andeq	r8, r3, r8, lsl #23
   32534:	andeq	ip, r0, r7, lsr #25
   32538:	strdeq	r4, [r2], -fp
   3253c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32540:	add	fp, sp, #28
   32544:	sub	sp, sp, #20
   32548:	ldr	r5, [r0, #40]	; 0x28
   3254c:	mov	r4, r0
   32550:	mov	r6, #0
   32554:	ldr	r0, [r5, #16]
   32558:	cmp	r0, #40	; 0x28
   3255c:	bne	327a0 <__flatcc_fb_clear_parser@@Base+0x13b4>
   32560:	mov	r0, r4
   32564:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   32568:	cmp	r5, #0
   3256c:	beq	327a0 <__flatcc_fb_clear_parser@@Base+0x13b4>
   32570:	ldr	r9, [r4, #40]	; 0x28
   32574:	mov	sl, #0
   32578:	mov	r7, #0
   3257c:	ldr	r0, [r9, #16]
   32580:	cmp	r0, #9
   32584:	bne	32730 <__flatcc_fb_clear_parser@@Base+0x1344>
   32588:	mov	r0, r4
   3258c:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   32590:	cmp	r9, #0
   32594:	mov	r7, #0
   32598:	beq	32730 <__flatcc_fb_clear_parser@@Base+0x1344>
   3259c:	ldr	r8, [pc, #560]	; 327d4 <__flatcc_fb_clear_parser@@Base+0x13e8>
   325a0:	mov	r6, #0
   325a4:	add	r8, pc, r8
   325a8:	ldr	r7, [r4, #52]	; 0x34
   325ac:	ldr	r0, [r4, #44]	; 0x2c
   325b0:	add	r1, r7, #32
   325b4:	cmp	r1, r0
   325b8:	bls	325f0 <__flatcc_fb_clear_parser@@Base+0x1204>
   325bc:	mov	r0, #65536	; 0x10000
   325c0:	mov	r1, #1
   325c4:	bl	147cc <calloc@plt>
   325c8:	cmp	r0, #0
   325cc:	beq	327ac <__flatcc_fb_clear_parser@@Base+0x13c0>
   325d0:	ldr	r2, [r4, #48]	; 0x30
   325d4:	mov	r1, r0
   325d8:	add	r7, r0, #16
   325dc:	str	r2, [r1], #48	; 0x30
   325e0:	add	r2, r0, #65536	; 0x10000
   325e4:	str	r2, [r4, #44]	; 0x2c
   325e8:	str	r0, [r4, #48]	; 0x30
   325ec:	str	r7, [r4, #52]	; 0x34
   325f0:	str	r1, [r4, #52]	; 0x34
   325f4:	stm	r7, {r6, r9}
   325f8:	ldr	r6, [r4, #40]	; 0x28
   325fc:	ldr	r0, [r6, #16]
   32600:	cmp	r0, #58	; 0x3a
   32604:	bne	3262c <__flatcc_fb_clear_parser@@Base+0x1240>
   32608:	mov	r0, r4
   3260c:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   32610:	cmp	r6, #0
   32614:	beq	3262c <__flatcc_fb_clear_parser@@Base+0x1240>
   32618:	add	r1, r7, #8
   3261c:	mov	r0, r4
   32620:	mov	r2, #1
   32624:	mov	r3, r8
   32628:	bl	327f8 <__flatcc_fb_clear_parser@@Base+0x140c>
   3262c:	ldr	r0, [r4, #108]	; 0x6c
   32630:	cmp	r0, #9
   32634:	bgt	32680 <__flatcc_fb_clear_parser@@Base+0x1294>
   32638:	ldr	r6, [r4, #40]	; 0x28
   3263c:	ldr	r0, [r6, #16]
   32640:	cmp	r0, #44	; 0x2c
   32644:	bne	32730 <__flatcc_fb_clear_parser@@Base+0x1344>
   32648:	mov	r0, r4
   3264c:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   32650:	cmp	r6, #0
   32654:	beq	32730 <__flatcc_fb_clear_parser@@Base+0x1344>
   32658:	ldr	r9, [r4, #40]	; 0x28
   3265c:	ldr	r0, [r9, #16]
   32660:	cmp	r0, #9
   32664:	bne	32688 <__flatcc_fb_clear_parser@@Base+0x129c>
   32668:	mov	r0, r4
   3266c:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   32670:	cmp	r9, #0
   32674:	mov	r6, r7
   32678:	bne	325a8 <__flatcc_fb_clear_parser@@Base+0x11bc>
   3267c:	b	32730 <__flatcc_fb_clear_parser@@Base+0x1344>
   32680:	mov	r6, r7
   32684:	b	327a0 <__flatcc_fb_clear_parser@@Base+0x13b4>
   32688:	cmp	r9, #0
   3268c:	beq	3270c <__flatcc_fb_clear_parser@@Base+0x1320>
   32690:	ldr	r3, [r9]
   32694:	ldr	r0, [r9, #4]
   32698:	ldr	r2, [pc, #312]	; 327d8 <__flatcc_fb_clear_parser@@Base+0x13ec>
   3269c:	cmp	r3, #0
   326a0:	add	r2, pc, r2
   326a4:	mov	r1, r3
   326a8:	moveq	r0, r3
   326ac:	moveq	r1, r2
   326b0:	mov	r3, r4
   326b4:	b	326c4 <__flatcc_fb_clear_parser@@Base+0x12d8>
   326b8:	ldr	r3, [r3]
   326bc:	cmp	r3, #0
   326c0:	beq	326e0 <__flatcc_fb_clear_parser@@Base+0x12f4>
   326c4:	ldr	r6, [r3, #20]
   326c8:	cmp	r6, r9
   326cc:	bhi	326b8 <__flatcc_fb_clear_parser@@Base+0x12cc>
   326d0:	ldr	r6, [r3, #24]
   326d4:	cmp	r6, r9
   326d8:	bls	326b8 <__flatcc_fb_clear_parser@@Base+0x12cc>
   326dc:	ldr	r2, [r3, #520]	; 0x208
   326e0:	ldr	r3, [r9, #8]
   326e4:	ldr	r6, [r9, #12]
   326e8:	ldr	ip, [pc, #236]	; 327dc <__flatcc_fb_clear_parser@@Base+0x13f0>
   326ec:	add	ip, pc, ip
   326f0:	str	r6, [sp]
   326f4:	stmib	sp, {r0, r1, ip}
   326f8:	mov	r0, r4
   326fc:	ldr	r1, [pc, #220]	; 327e0 <__flatcc_fb_clear_parser@@Base+0x13f4>
   32700:	add	r1, pc, r1
   32704:	bl	29e1c <__flatcc_fb_print_error@@Base>
   32708:	b	32724 <__flatcc_fb_clear_parser@@Base+0x1338>
   3270c:	ldr	r1, [pc, #208]	; 327e4 <__flatcc_fb_clear_parser@@Base+0x13f8>
   32710:	ldr	r2, [pc, #208]	; 327e8 <__flatcc_fb_clear_parser@@Base+0x13fc>
   32714:	mov	r0, r4
   32718:	add	r1, pc, r1
   3271c:	add	r2, pc, r2
   32720:	bl	29e1c <__flatcc_fb_print_error@@Base>
   32724:	ldr	r0, [r4, #108]	; 0x6c
   32728:	add	r0, r0, #1
   3272c:	str	r0, [r4, #108]	; 0x6c
   32730:	str	sl, [r4, #36]	; 0x24
   32734:	ldr	r1, [r4, #40]	; 0x28
   32738:	ldr	r0, [r1, #16]
   3273c:	cmp	r0, #41	; 0x29
   32740:	bne	32774 <__flatcc_fb_clear_parser@@Base+0x1388>
   32744:	mov	r0, r4
   32748:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   3274c:	cmp	r7, #0
   32750:	beq	3279c <__flatcc_fb_clear_parser@@Base+0x13b0>
   32754:	mov	r0, #0
   32758:	mov	r6, r7
   3275c:	ldr	r7, [r7]
   32760:	str	r0, [r6]
   32764:	mov	r0, r6
   32768:	cmp	r7, #0
   3276c:	bne	32758 <__flatcc_fb_clear_parser@@Base+0x136c>
   32770:	b	327a0 <__flatcc_fb_clear_parser@@Base+0x13b4>
   32774:	mov	r0, #0
   32778:	mov	r3, r5
   3277c:	str	r0, [sp]
   32780:	str	r0, [sp, #4]
   32784:	mov	r0, r4
   32788:	ldr	r2, [pc, #92]	; 327ec <__flatcc_fb_clear_parser@@Base+0x1400>
   3278c:	add	r2, pc, r2
   32790:	bl	29ee4 <__flatcc_error_report@@Base>
   32794:	cmp	r7, #0
   32798:	bne	32754 <__flatcc_fb_clear_parser@@Base+0x1368>
   3279c:	mov	r6, #0
   327a0:	mov	r0, r6
   327a4:	sub	sp, fp, #28
   327a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   327ac:	ldr	r0, [pc, #60]	; 327f0 <__flatcc_fb_clear_parser@@Base+0x1404>
   327b0:	mov	r1, #34	; 0x22
   327b4:	mov	r2, #1
   327b8:	ldr	r0, [pc, r0]
   327bc:	ldr	r3, [r0]
   327c0:	ldr	r0, [pc, #44]	; 327f4 <__flatcc_fb_clear_parser@@Base+0x1408>
   327c4:	add	r0, pc, r0
   327c8:	bl	14850 <fwrite@plt>
   327cc:	mov	r0, #1
   327d0:	bl	14898 <exit@plt>
   327d4:	andeq	r4, r2, r0, asr r7
   327d8:	strdeq	ip, [r0], -lr
   327dc:	andeq	r4, r2, r8, lsr #12
   327e0:	andeq	r3, r2, r3, ror #28
   327e4:	muleq	r2, sp, lr
   327e8:	strdeq	r4, [r2], -r8
   327ec:			; <UNDEFINED> instruction: 0x000245b5
   327f0:	andeq	r8, r3, r4, ror #17
   327f4:	andeq	ip, r0, r3, lsl #20
   327f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   327fc:	add	fp, sp, #28
   32800:	sub	sp, sp, #36	; 0x24
   32804:	ldr	r9, [r0, #40]	; 0x28
   32808:	mov	r4, r0
   3280c:	mov	r7, r3
   32810:	mov	r6, r2
   32814:	mov	r8, r1
   32818:	ldr	r0, [r9, #16]
   3281c:	cmp	r0, #45	; 0x2d
   32820:	bne	32838 <__flatcc_fb_clear_parser@@Base+0x144c>
   32824:	mov	r0, r4
   32828:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   3282c:	ldr	r5, [r4, #40]	; 0x28
   32830:	ldr	r0, [r5, #16]
   32834:	b	32840 <__flatcc_fb_clear_parser@@Base+0x1454>
   32838:	mov	r5, r9
   3283c:	mov	r9, #0
   32840:	sub	r1, r0, #9
   32844:	cmp	r1, #10
   32848:	bhi	328c0 <__flatcc_fb_clear_parser@@Base+0x14d4>
   3284c:	add	r0, pc, #4
   32850:	ldr	r1, [r0, r1, lsl #2]
   32854:	add	pc, r0, r1
   32858:	andeq	r0, r0, ip, lsr #32
   3285c:	muleq	r0, r0, r0
   32860:	andeq	r0, r0, r4, lsr r1
   32864:	andeq	r0, r0, r8, ror #5
   32868:	andeq	r0, r0, r8, ror #5
   3286c:	andeq	r0, r0, r0, asr #3
   32870:	andeq	r0, r0, r8, ror #5
   32874:	andeq	r0, r0, r8, ror #5
   32878:	andeq	r0, r0, r8, ror #5
   3287c:	andeq	r0, r0, r8, ror #5
   32880:	andeq	r0, r0, r4, asr #5
   32884:	mov	r0, r4
   32888:	mov	r1, r8
   3288c:	bl	323b4 <__flatcc_fb_clear_parser@@Base+0xfc8>
   32890:	mov	r0, #13
   32894:	cmp	r9, #0
   32898:	strh	r0, [r8, #8]
   3289c:	beq	32bac <__flatcc_fb_clear_parser@@Base+0x17c0>
   328a0:	mov	r0, #1
   328a4:	strh	r0, [r8, #8]
   328a8:	mov	r0, #0
   328ac:	str	r0, [sp]
   328b0:	str	r0, [sp, #4]
   328b4:	ldr	r2, [pc, #1376]	; 32e1c <__flatcc_fb_clear_parser@@Base+0x1a30>
   328b8:	add	r2, pc, r2
   328bc:	b	32b9c <__flatcc_fb_clear_parser@@Base+0x17b0>
   328c0:	cmn	r0, #988	; 0x3dc
   328c4:	beq	32b5c <__flatcc_fb_clear_parser@@Base+0x1770>
   328c8:	movw	r1, #64550	; 0xfc26
   328cc:	movt	r1, #65535	; 0xffff
   328d0:	cmp	r0, r1
   328d4:	bne	32b40 <__flatcc_fb_clear_parser@@Base+0x1754>
   328d8:	mov	r0, #6
   328dc:	strh	r0, [r8, #8]
   328e0:	mov	r0, #0
   328e4:	b	32b68 <__flatcc_fb_clear_parser@@Base+0x177c>
   328e8:	mov	r0, #5
   328ec:	strh	r0, [r8, #8]
   328f0:	ldr	ip, [r5, #4]
   328f4:	cmp	ip, #0
   328f8:	beq	32c84 <__flatcc_fb_clear_parser@@Base+0x1898>
   328fc:	ldr	lr, [r5]
   32900:	ldrb	r0, [lr]
   32904:	str	r0, [sp, #28]
   32908:	sub	r0, r0, #45	; 0x2d
   3290c:	clz	r0, r0
   32910:	lsr	r1, r0, #5
   32914:	cmp	ip, r1
   32918:	beq	32c84 <__flatcc_fb_clear_parser@@Base+0x1898>
   3291c:	add	r0, lr, ip
   32920:	mov	r2, #0
   32924:	mov	r7, #0
   32928:	str	r0, [sp, #20]
   3292c:	add	r0, lr, r1
   32930:	str	r0, [sp, #24]
   32934:	mov	r0, #10
   32938:	ldrb	r3, [lr, r1]
   3293c:	sub	r6, r3, #48	; 0x30
   32940:	uxtb	r6, r6
   32944:	cmp	r6, #9
   32948:	bhi	32c60 <__flatcc_fb_clear_parser@@Base+0x1874>
   3294c:	add	r6, r7, r7, lsl #2
   32950:	lsl	sl, r6, #1
   32954:	umlal	r3, sl, r2, r0
   32958:	subs	r6, r3, #48	; 0x30
   3295c:	sbc	r3, sl, #0
   32960:	subs	r2, r6, r2
   32964:	sbcs	r2, r3, r7
   32968:	bcc	32c84 <__flatcc_fb_clear_parser@@Base+0x1898>
   3296c:	add	r1, r1, #1
   32970:	mov	r2, r6
   32974:	mov	r7, r3
   32978:	cmp	ip, r1
   3297c:	bne	32938 <__flatcc_fb_clear_parser@@Base+0x154c>
   32980:	ldr	r1, [sp, #20]
   32984:	mov	r0, #0
   32988:	b	32c70 <__flatcc_fb_clear_parser@@Base+0x1884>
   3298c:	mov	r0, #3
   32990:	add	r1, sp, #32
   32994:	strh	r0, [r8, #8]
   32998:	ldr	r0, [r5]
   3299c:	bl	148ec <strtod@plt>
   329a0:	vstr	d0, [r8]
   329a4:	ldm	r5, {r0, r1}
   329a8:	ldr	r3, [sp, #32]
   329ac:	add	r2, r0, r1
   329b0:	cmp	r3, r2
   329b4:	beq	32bb4 <__flatcc_fb_clear_parser@@Base+0x17c8>
   329b8:	mov	r2, #1
   329bc:	cmp	r0, #0
   329c0:	mov	r3, r4
   329c4:	strh	r2, [r8, #8]
   329c8:	moveq	r1, r0
   329cc:	ldr	r2, [pc, #1072]	; 32e04 <__flatcc_fb_clear_parser@@Base+0x1a18>
   329d0:	add	r2, pc, r2
   329d4:	moveq	r0, r2
   329d8:	b	329e8 <__flatcc_fb_clear_parser@@Base+0x15fc>
   329dc:	ldr	r3, [r3]
   329e0:	cmp	r3, #0
   329e4:	beq	32a04 <__flatcc_fb_clear_parser@@Base+0x1618>
   329e8:	ldr	r7, [r3, #20]
   329ec:	cmp	r7, r5
   329f0:	bhi	329dc <__flatcc_fb_clear_parser@@Base+0x15f0>
   329f4:	ldr	r7, [r3, #24]
   329f8:	cmp	r7, r5
   329fc:	bls	329dc <__flatcc_fb_clear_parser@@Base+0x15f0>
   32a00:	ldr	r2, [r3, #520]	; 0x208
   32a04:	ldr	r3, [r5, #8]
   32a08:	ldr	r7, [r5, #12]
   32a0c:	ldr	r6, [pc, #1012]	; 32e08 <__flatcc_fb_clear_parser@@Base+0x1a1c>
   32a10:	add	r6, pc, r6
   32a14:	b	32c10 <__flatcc_fb_clear_parser@@Base+0x1824>
   32a18:	mov	r0, #5
   32a1c:	strh	r0, [r8, #8]
   32a20:	ldr	r0, [r5, #4]
   32a24:	cmp	r0, #0
   32a28:	beq	32d40 <__flatcc_fb_clear_parser@@Base+0x1954>
   32a2c:	ldr	r2, [r5]
   32a30:	ldrb	r1, [r2]
   32a34:	add	r3, r2, r0
   32a38:	sub	r0, r1, #45	; 0x2d
   32a3c:	clz	r0, r0
   32a40:	lsr	r0, r0, #5
   32a44:	add	r6, r2, r0
   32a48:	sub	r0, r3, r6
   32a4c:	cmp	r0, #2
   32a50:	blt	32d40 <__flatcc_fb_clear_parser@@Base+0x1954>
   32a54:	ldrb	r0, [r6]
   32a58:	cmp	r0, #48	; 0x30
   32a5c:	bne	32d40 <__flatcc_fb_clear_parser@@Base+0x1954>
   32a60:	ldrb	r0, [r6, #1]
   32a64:	orr	r0, r0, #32
   32a68:	cmp	r0, #120	; 0x78
   32a6c:	bne	32d40 <__flatcc_fb_clear_parser@@Base+0x1954>
   32a70:	add	r0, r6, #2
   32a74:	sub	r2, r3, r0
   32a78:	cmp	r2, #16
   32a7c:	mov	r2, r3
   32a80:	addgt	r2, r6, #18
   32a84:	cmp	r0, r2
   32a88:	beq	32d40 <__flatcc_fb_clear_parser@@Base+0x1954>
   32a8c:	str	r3, [sp, #24]
   32a90:	str	r1, [sp, #28]
   32a94:	str	r2, [sp, #20]
   32a98:	sub	r0, r2, r6
   32a9c:	mov	r2, #0
   32aa0:	mov	r7, #2
   32aa4:	mov	r3, #0
   32aa8:	b	32ad0 <__flatcc_fb_clear_parser@@Base+0x16e4>
   32aac:	lsl	r1, r3, #4
   32ab0:	add	r7, r7, #1
   32ab4:	orr	r1, r1, r2, lsr #28
   32ab8:	adds	r2, sl, r2, lsl #4
   32abc:	adc	r1, r1, ip
   32ac0:	adds	r2, r2, lr
   32ac4:	adc	r3, r1, #0
   32ac8:	cmp	r0, r7
   32acc:	beq	32cd0 <__flatcc_fb_clear_parser@@Base+0x18e4>
   32ad0:	ldrb	lr, [r6, r7]
   32ad4:	mvn	r1, #86	; 0x56
   32ad8:	adds	sl, r1, #39	; 0x27
   32adc:	mvn	r1, #0
   32ae0:	adc	ip, r1, #0
   32ae4:	sub	r1, lr, #48	; 0x30
   32ae8:	uxtb	r1, r1
   32aec:	cmp	r1, #10
   32af0:	bcc	32aac <__flatcc_fb_clear_parser@@Base+0x16c0>
   32af4:	orr	lr, lr, #32
   32af8:	mvn	sl, #86	; 0x56
   32afc:	mvn	ip, #0
   32b00:	sub	r1, lr, #97	; 0x61
   32b04:	uxtb	r1, r1
   32b08:	cmp	r1, #5
   32b0c:	bls	32aac <__flatcc_fb_clear_parser@@Base+0x16c0>
   32b10:	add	r1, r6, r7
   32b14:	mov	r6, #0
   32b18:	b	32cd8 <__flatcc_fb_clear_parser@@Base+0x18ec>
   32b1c:	mov	r0, r4
   32b20:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   32b24:	mov	r0, r4
   32b28:	mov	r1, r8
   32b2c:	bl	31510 <__flatcc_fb_clear_parser@@Base+0x124>
   32b30:	tst	r6, #1
   32b34:	bne	32b78 <__flatcc_fb_clear_parser@@Base+0x178c>
   32b38:	mov	r0, #1
   32b3c:	strh	r0, [r8, #8]
   32b40:	mov	r0, #0
   32b44:	mov	r1, r5
   32b48:	mov	r2, r7
   32b4c:	str	r0, [sp]
   32b50:	str	r0, [sp, #4]
   32b54:	mov	r0, r4
   32b58:	b	32ba4 <__flatcc_fb_clear_parser@@Base+0x17b8>
   32b5c:	mov	r0, #6
   32b60:	strh	r0, [r8, #8]
   32b64:	mov	r0, #1
   32b68:	strb	r0, [r8]
   32b6c:	cmp	r9, #0
   32b70:	bne	32d8c <__flatcc_fb_clear_parser@@Base+0x19a0>
   32b74:	b	32dc4 <__flatcc_fb_clear_parser@@Base+0x19d8>
   32b78:	cmp	r9, #0
   32b7c:	beq	32bac <__flatcc_fb_clear_parser@@Base+0x17c0>
   32b80:	mov	r0, #1
   32b84:	strh	r0, [r8, #8]
   32b88:	mov	r0, #0
   32b8c:	str	r0, [sp]
   32b90:	str	r0, [sp, #4]
   32b94:	ldr	r2, [pc, #636]	; 32e18 <__flatcc_fb_clear_parser@@Base+0x1a2c>
   32b98:	add	r2, pc, r2
   32b9c:	mov	r0, r4
   32ba0:	mov	r1, r5
   32ba4:	mov	r3, #0
   32ba8:	bl	29ee4 <__flatcc_error_report@@Base>
   32bac:	sub	sp, fp, #28
   32bb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32bb4:	ldrb	r2, [r0]
   32bb8:	cmp	r2, #46	; 0x2e
   32bbc:	bne	32c48 <__flatcc_fb_clear_parser@@Base+0x185c>
   32bc0:	mov	r2, #1
   32bc4:	mov	r3, r4
   32bc8:	strh	r2, [r8, #8]
   32bcc:	ldr	r2, [pc, #572]	; 32e10 <__flatcc_fb_clear_parser@@Base+0x1a24>
   32bd0:	add	r2, pc, r2
   32bd4:	b	32be4 <__flatcc_fb_clear_parser@@Base+0x17f8>
   32bd8:	ldr	r3, [r3]
   32bdc:	cmp	r3, #0
   32be0:	beq	32c00 <__flatcc_fb_clear_parser@@Base+0x1814>
   32be4:	ldr	r7, [r3, #20]
   32be8:	cmp	r7, r5
   32bec:	bhi	32bd8 <__flatcc_fb_clear_parser@@Base+0x17ec>
   32bf0:	ldr	r7, [r3, #24]
   32bf4:	cmp	r7, r5
   32bf8:	bls	32bd8 <__flatcc_fb_clear_parser@@Base+0x17ec>
   32bfc:	ldr	r2, [r3, #520]	; 0x208
   32c00:	ldr	r3, [r5, #8]
   32c04:	ldr	r7, [r5, #12]
   32c08:	ldr	r6, [pc, #516]	; 32e14 <__flatcc_fb_clear_parser@@Base+0x1a28>
   32c0c:	add	r6, pc, r6
   32c10:	str	r0, [sp, #8]
   32c14:	str	r7, [sp]
   32c18:	str	r1, [sp, #4]
   32c1c:	str	r6, [sp, #12]
   32c20:	mov	r0, r4
   32c24:	ldr	r1, [pc, #480]	; 32e0c <__flatcc_fb_clear_parser@@Base+0x1a20>
   32c28:	add	r1, pc, r1
   32c2c:	bl	29e1c <__flatcc_fb_print_error@@Base>
   32c30:	ldr	r0, [r4, #108]	; 0x6c
   32c34:	add	r0, r0, #1
   32c38:	str	r0, [r4, #108]	; 0x6c
   32c3c:	cmp	r9, #0
   32c40:	bne	32d8c <__flatcc_fb_clear_parser@@Base+0x19a0>
   32c44:	b	32dc4 <__flatcc_fb_clear_parser@@Base+0x19d8>
   32c48:	cmp	r9, #0
   32c4c:	vnegne.f64	d16, d0
   32c50:	vstrne	d16, [r8]
   32c54:	cmp	r9, #0
   32c58:	bne	32d8c <__flatcc_fb_clear_parser@@Base+0x19a0>
   32c5c:	b	32dc4 <__flatcc_fb_clear_parser@@Base+0x19d8>
   32c60:	add	r1, lr, r1
   32c64:	mov	r0, #1
   32c68:	mov	r6, r2
   32c6c:	mov	r3, r7
   32c70:	cmp	r1, lr
   32c74:	movne	r2, r1
   32c78:	ldrne	r1, [sp, #24]
   32c7c:	cmpne	r2, r1
   32c80:	bne	32ca4 <__flatcc_fb_clear_parser@@Base+0x18b8>
   32c84:	mov	r0, #1
   32c88:	strh	r0, [r8, #8]
   32c8c:	mov	r0, #0
   32c90:	str	r0, [sp]
   32c94:	str	r0, [sp, #4]
   32c98:	ldr	r2, [pc, #352]	; 32e00 <__flatcc_fb_clear_parser@@Base+0x1a14>
   32c9c:	add	r2, pc, r2
   32ca0:	b	32d5c <__flatcc_fb_clear_parser@@Base+0x1970>
   32ca4:	cmp	r0, #0
   32ca8:	beq	32de4 <__flatcc_fb_clear_parser@@Base+0x19f8>
   32cac:	ldrb	r0, [r2]
   32cb0:	cmp	r0, #79	; 0x4f
   32cb4:	ble	32dd4 <__flatcc_fb_clear_parser@@Base+0x19e8>
   32cb8:	cmp	r0, #80	; 0x50
   32cbc:	beq	32c84 <__flatcc_fb_clear_parser@@Base+0x1898>
   32cc0:	cmp	r0, #101	; 0x65
   32cc4:	cmpne	r0, #112	; 0x70
   32cc8:	beq	32c84 <__flatcc_fb_clear_parser@@Base+0x1898>
   32ccc:	b	32de4 <__flatcc_fb_clear_parser@@Base+0x19f8>
   32cd0:	ldr	r1, [sp, #20]
   32cd4:	mov	r6, #1
   32cd8:	cmp	r7, #2
   32cdc:	ldr	r7, [sp, #28]
   32ce0:	ldr	r0, [sp, #24]
   32ce4:	beq	32d40 <__flatcc_fb_clear_parser@@Base+0x1954>
   32ce8:	cmp	r1, r0
   32cec:	beq	32d34 <__flatcc_fb_clear_parser@@Base+0x1948>
   32cf0:	ldrb	r0, [r1]
   32cf4:	cmp	r6, #0
   32cf8:	beq	32d20 <__flatcc_fb_clear_parser@@Base+0x1934>
   32cfc:	sub	r1, r0, #48	; 0x30
   32d00:	uxtb	r1, r1
   32d04:	cmp	r1, #10
   32d08:	bcc	32d40 <__flatcc_fb_clear_parser@@Base+0x1954>
   32d0c:	orr	r0, r0, #32
   32d10:	sub	r1, r0, #97	; 0x61
   32d14:	uxtb	r1, r1
   32d18:	cmp	r1, #6
   32d1c:	bcc	32d40 <__flatcc_fb_clear_parser@@Base+0x1954>
   32d20:	cmp	r0, #46	; 0x2e
   32d24:	beq	32d40 <__flatcc_fb_clear_parser@@Base+0x1954>
   32d28:	cmp	r0, #80	; 0x50
   32d2c:	cmpne	r0, #112	; 0x70
   32d30:	beq	32d40 <__flatcc_fb_clear_parser@@Base+0x1954>
   32d34:	cmp	r7, #45	; 0x2d
   32d38:	strd	r2, [r8]
   32d3c:	bne	32d6c <__flatcc_fb_clear_parser@@Base+0x1980>
   32d40:	mov	r0, #1
   32d44:	strh	r0, [r8, #8]
   32d48:	mov	r0, #0
   32d4c:	str	r0, [sp]
   32d50:	str	r0, [sp, #4]
   32d54:	ldr	r2, [pc, #160]	; 32dfc <__flatcc_fb_clear_parser@@Base+0x1a10>
   32d58:	add	r2, pc, r2
   32d5c:	mov	r0, r4
   32d60:	mov	r1, r5
   32d64:	mov	r3, #0
   32d68:	bl	29ee4 <__flatcc_error_report@@Base>
   32d6c:	cmp	r9, #0
   32d70:	beq	32dc4 <__flatcc_fb_clear_parser@@Base+0x19d8>
   32d74:	mov	r0, #4
   32d78:	strh	r0, [r8, #8]
   32d7c:	ldrd	r0, [r8]
   32d80:	rsbs	r0, r0, #0
   32d84:	rsc	r1, r1, #0
   32d88:	strd	r0, [r8]
   32d8c:	ldrh	r0, [r8, #8]
   32d90:	cmp	r0, #6
   32d94:	bne	32dc4 <__flatcc_fb_clear_parser@@Base+0x19d8>
   32d98:	mov	r0, #1
   32d9c:	mov	r1, r5
   32da0:	mov	r3, #0
   32da4:	strh	r0, [r8, #8]
   32da8:	mov	r0, #0
   32dac:	str	r0, [sp]
   32db0:	str	r0, [sp, #4]
   32db4:	mov	r0, r4
   32db8:	ldr	r2, [pc, #96]	; 32e20 <__flatcc_fb_clear_parser@@Base+0x1a34>
   32dbc:	add	r2, pc, r2
   32dc0:	bl	29ee4 <__flatcc_error_report@@Base>
   32dc4:	mov	r0, r4
   32dc8:	sub	sp, fp, #28
   32dcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32dd0:	b	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   32dd4:	cmp	r0, #46	; 0x2e
   32dd8:	beq	32c84 <__flatcc_fb_clear_parser@@Base+0x1898>
   32ddc:	cmp	r0, #69	; 0x45
   32de0:	beq	32c84 <__flatcc_fb_clear_parser@@Base+0x1898>
   32de4:	str	r6, [r8]
   32de8:	str	r3, [r8, #4]
   32dec:	ldr	r0, [sp, #28]
   32df0:	cmp	r0, #45	; 0x2d
   32df4:	beq	32c84 <__flatcc_fb_clear_parser@@Base+0x1898>
   32df8:	b	32d6c <__flatcc_fb_clear_parser@@Base+0x1980>
   32dfc:	andeq	r4, r2, fp, rrx
   32e00:	andeq	r4, r2, r2, asr #2
   32e04:	andeq	ip, r0, lr, asr #25
   32e08:	andeq	r4, r2, r5, ror #7
   32e0c:	andeq	r3, r2, fp, lsr r9
   32e10:	andeq	ip, r0, lr, asr #21
   32e14:	strdeq	r4, [r2], -lr
   32e18:	andeq	r4, r2, r8, asr #3
   32e1c:	andeq	r4, r2, sl, asr #9
   32e20:	andeq	r3, r2, r4, ror #31
   32e24:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   32e28:	add	fp, sp, #24
   32e2c:	sub	sp, sp, #16
   32e30:	ldr	r8, [r0, #40]	; 0x28
   32e34:	mov	r4, r0
   32e38:	mov	r0, #1
   32e3c:	mov	r6, r1
   32e40:	mov	r7, #0
   32e44:	strh	r0, [r1, #8]
   32e48:	ldr	r0, [r8, #16]
   32e4c:	cmp	r0, #91	; 0x5b
   32e50:	bne	32eac <__flatcc_fb_clear_parser@@Base+0x1ac0>
   32e54:	mov	r7, #0
   32e58:	mov	r5, r8
   32e5c:	mov	r0, r4
   32e60:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   32e64:	cmp	r5, #0
   32e68:	beq	32e80 <__flatcc_fb_clear_parser@@Base+0x1a94>
   32e6c:	ldr	r5, [r4, #40]	; 0x28
   32e70:	add	r7, r7, #1
   32e74:	ldr	r0, [r5, #16]
   32e78:	cmp	r0, #91	; 0x5b
   32e7c:	beq	32e5c <__flatcc_fb_clear_parser@@Base+0x1a70>
   32e80:	cmp	r7, #2
   32e84:	bcc	32eac <__flatcc_fb_clear_parser@@Base+0x1ac0>
   32e88:	mov	r0, #0
   32e8c:	mov	r1, r8
   32e90:	mov	r3, #0
   32e94:	str	r0, [sp]
   32e98:	str	r0, [sp, #4]
   32e9c:	mov	r0, r4
   32ea0:	ldr	r2, [pc, #516]	; 330ac <__flatcc_fb_clear_parser@@Base+0x1cc0>
   32ea4:	add	r2, pc, r2
   32ea8:	bl	29ee4 <__flatcc_error_report@@Base>
   32eac:	ldr	r1, [r4, #40]	; 0x28
   32eb0:	movw	r2, #999	; 0x3e7
   32eb4:	ldr	r0, [r1, #16]
   32eb8:	add	r2, r0, r2
   32ebc:	cmp	r2, #27
   32ec0:	bhi	33048 <__flatcc_fb_clear_parser@@Base+0x1c5c>
   32ec4:	movw	r5, #55291	; 0xd7fb
   32ec8:	mov	r3, #1
   32ecc:	movt	r5, #2430	; 0x97e
   32ed0:	tst	r5, r3, lsl r2
   32ed4:	beq	3302c <__flatcc_fb_clear_parser@@Base+0x1c40>
   32ed8:	cmp	r7, #0
   32edc:	mov	r0, #7
   32ee0:	str	r1, [r6]
   32ee4:	movweq	r0, #8
   32ee8:	strh	r0, [r6, #8]
   32eec:	mov	r0, r4
   32ef0:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   32ef4:	rsb	r6, r7, #0
   32ef8:	ldr	r5, [r4, #40]	; 0x28
   32efc:	ldr	r0, [r5, #16]
   32f00:	cmp	r0, #93	; 0x5d
   32f04:	bne	32f28 <__flatcc_fb_clear_parser@@Base+0x1b3c>
   32f08:	mov	r0, r4
   32f0c:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   32f10:	cmp	r5, #0
   32f14:	beq	32f28 <__flatcc_fb_clear_parser@@Base+0x1b3c>
   32f18:	add	r6, r6, #1
   32f1c:	cmp	r6, #1
   32f20:	bne	32ef8 <__flatcc_fb_clear_parser@@Base+0x1b0c>
   32f24:	b	32f30 <__flatcc_fb_clear_parser@@Base+0x1b44>
   32f28:	cmp	r6, #0
   32f2c:	beq	32fc0 <__flatcc_fb_clear_parser@@Base+0x1bd4>
   32f30:	cmp	r8, #0
   32f34:	beq	32f9c <__flatcc_fb_clear_parser@@Base+0x1bb0>
   32f38:	ldr	r3, [pc, #380]	; 330bc <__flatcc_fb_clear_parser@@Base+0x1cd0>
   32f3c:	mov	r0, r4
   32f40:	add	r3, pc, r3
   32f44:	b	32f54 <__flatcc_fb_clear_parser@@Base+0x1b68>
   32f48:	ldr	r0, [r0]
   32f4c:	cmp	r0, #0
   32f50:	beq	32f70 <__flatcc_fb_clear_parser@@Base+0x1b84>
   32f54:	ldr	r1, [r0, #20]
   32f58:	cmp	r1, r8
   32f5c:	bhi	32f48 <__flatcc_fb_clear_parser@@Base+0x1b5c>
   32f60:	ldr	r1, [r0, #24]
   32f64:	cmp	r1, r8
   32f68:	bls	32f48 <__flatcc_fb_clear_parser@@Base+0x1b5c>
   32f6c:	ldr	r3, [r0, #520]	; 0x208
   32f70:	ldm	r8, {r0, r1, r2, r7}
   32f74:	stm	sp, {r2, r7}
   32f78:	str	r1, [sp, #8]
   32f7c:	str	r0, [sp, #12]
   32f80:	mov	r0, r4
   32f84:	ldr	r1, [pc, #308]	; 330c0 <__flatcc_fb_clear_parser@@Base+0x1cd4>
   32f88:	ldr	r2, [pc, #308]	; 330c4 <__flatcc_fb_clear_parser@@Base+0x1cd8>
   32f8c:	add	r1, pc, r1
   32f90:	add	r2, pc, r2
   32f94:	bl	29e1c <__flatcc_fb_print_error@@Base>
   32f98:	b	32fb4 <__flatcc_fb_clear_parser@@Base+0x1bc8>
   32f9c:	ldr	r1, [pc, #296]	; 330cc <__flatcc_fb_clear_parser@@Base+0x1ce0>
   32fa0:	ldr	r2, [pc, #296]	; 330d0 <__flatcc_fb_clear_parser@@Base+0x1ce4>
   32fa4:	mov	r0, r4
   32fa8:	add	r1, pc, r1
   32fac:	add	r2, pc, r2
   32fb0:	bl	29e1c <__flatcc_fb_print_error@@Base>
   32fb4:	ldr	r0, [r4, #108]	; 0x6c
   32fb8:	add	r0, r0, #1
   32fbc:	str	r0, [r4, #108]	; 0x6c
   32fc0:	ldr	r6, [r4, #40]	; 0x28
   32fc4:	ldr	r0, [r6, #16]
   32fc8:	cmp	r0, #93	; 0x5d
   32fcc:	bne	33024 <__flatcc_fb_clear_parser@@Base+0x1c38>
   32fd0:	mov	r0, r4
   32fd4:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   32fd8:	cmp	r6, #0
   32fdc:	beq	33024 <__flatcc_fb_clear_parser@@Base+0x1c38>
   32fe0:	mov	r0, #0
   32fe4:	mov	r1, r6
   32fe8:	mov	r3, r8
   32fec:	str	r0, [sp]
   32ff0:	str	r0, [sp, #4]
   32ff4:	mov	r0, r4
   32ff8:	ldr	r2, [pc, #200]	; 330c8 <__flatcc_fb_clear_parser@@Base+0x1cdc>
   32ffc:	add	r2, pc, r2
   33000:	bl	29ee4 <__flatcc_error_report@@Base>
   33004:	ldr	r5, [r4, #40]	; 0x28
   33008:	ldr	r0, [r5, #16]
   3300c:	cmp	r0, #93	; 0x5d
   33010:	bne	33024 <__flatcc_fb_clear_parser@@Base+0x1c38>
   33014:	mov	r0, r4
   33018:	bl	312d0 <__flatcc_fb_parse@@Base+0x6da0>
   3301c:	cmp	r5, #0
   33020:	bne	33004 <__flatcc_fb_clear_parser@@Base+0x1c18>
   33024:	sub	sp, fp, #24
   33028:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3302c:	cmp	r2, #25
   33030:	bne	33048 <__flatcc_fb_clear_parser@@Base+0x1c5c>
   33034:	cmp	r7, #0
   33038:	mov	r0, #9
   3303c:	str	r1, [r6]
   33040:	movweq	r0, #10
   33044:	b	32ee8 <__flatcc_fb_clear_parser@@Base+0x1afc>
   33048:	cmp	r0, #9
   3304c:	beq	3306c <__flatcc_fb_clear_parser@@Base+0x1c80>
   33050:	ldr	r1, [pc, #88]	; 330b0 <__flatcc_fb_clear_parser@@Base+0x1cc4>
   33054:	cmp	r0, #93	; 0x5d
   33058:	add	r1, pc, r1
   3305c:	bne	3308c <__flatcc_fb_clear_parser@@Base+0x1ca0>
   33060:	ldr	r2, [pc, #76]	; 330b4 <__flatcc_fb_clear_parser@@Base+0x1cc8>
   33064:	add	r2, pc, r2
   33068:	b	33094 <__flatcc_fb_clear_parser@@Base+0x1ca8>
   3306c:	mov	r0, r4
   33070:	mov	r1, r6
   33074:	bl	323b4 <__flatcc_fb_clear_parser@@Base+0xfc8>
   33078:	cmp	r7, #0
   3307c:	mov	r0, #11
   33080:	movweq	r0, #12
   33084:	strh	r0, [r6, #8]
   33088:	b	32ef4 <__flatcc_fb_clear_parser@@Base+0x1b08>
   3308c:	ldr	r2, [pc, #36]	; 330b8 <__flatcc_fb_clear_parser@@Base+0x1ccc>
   33090:	add	r2, pc, r2
   33094:	mov	r0, r4
   33098:	bl	29e1c <__flatcc_fb_print_error@@Base>
   3309c:	ldr	r0, [r4, #108]	; 0x6c
   330a0:	add	r0, r0, #1
   330a4:	str	r0, [r4, #108]	; 0x6c
   330a8:	b	32ef4 <__flatcc_fb_clear_parser@@Base+0x1b08>
   330ac:	andeq	r4, r2, r0, ror r0
   330b0:	andeq	r3, r2, sp, asr r5
   330b4:	ldrdeq	r3, [r2], -r8
   330b8:	andeq	r3, r2, r8, asr #29
   330bc:	andeq	ip, r0, lr, asr r7
   330c0:	andeq	r3, r2, r4, lsr r6
   330c4:	ldrdeq	r3, [r2], -pc	; <UNPREDICTABLE>
   330c8:	muleq	r2, r4, pc	; <UNPREDICTABLE>
   330cc:	andeq	r3, r2, sp, lsl #12
   330d0:	andeq	r3, r2, r3, asr #31

000330d4 <__flatcc_fb_build_schema@@Base>:
   330d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   330d8:	add	fp, sp, #28
   330dc:	sub	sp, sp, #220	; 0xdc
   330e0:	mov	r9, r0
   330e4:	add	r0, r0, #524	; 0x20c
   330e8:	add	r8, r9, #352	; 0x160
   330ec:	str	r0, [sp, #16]
   330f0:	mov	r1, r8
   330f4:	bl	276f8 <ptr_set_find_item@@Base>
   330f8:	cmp	r0, #0
   330fc:	beq	35018 <__flatcc_fb_build_schema@@Base+0x1f44>
   33100:	ldr	r6, [r9, #392]	; 0x188
   33104:	cmp	r6, #0
   33108:	beq	332a0 <__flatcc_fb_build_schema@@Base+0x1cc>
   3310c:	movw	r7, #403	; 0x193
   33110:	movw	sl, #40389	; 0x9dc5
   33114:	movt	r7, #256	; 0x100
   33118:	movt	sl, #33052	; 0x811c
   3311c:	b	3312c <__flatcc_fb_build_schema@@Base+0x58>
   33120:	ldr	r6, [r6]
   33124:	cmp	r6, #0
   33128:	beq	332a0 <__flatcc_fb_build_schema@@Base+0x1cc>
   3312c:	ldrh	r0, [r6, #8]
   33130:	cmp	r0, #4
   33134:	bhi	33120 <__flatcc_fb_build_schema@@Base+0x4c>
   33138:	ldr	ip, [r6, #12]
   3313c:	mov	r1, sl
   33140:	cmp	ip, #0
   33144:	beq	331e0 <__flatcc_fb_build_schema@@Base+0x10c>
   33148:	ldr	r2, [ip]
   3314c:	mov	r1, sl
   33150:	cmp	r2, #0
   33154:	beq	331e0 <__flatcc_fb_build_schema@@Base+0x10c>
   33158:	mov	r1, sl
   3315c:	b	33174 <__flatcc_fb_build_schema@@Base+0xa0>
   33160:	ldr	r2, [r2]
   33164:	eor	r0, r1, #46	; 0x2e
   33168:	mul	r1, r0, r7
   3316c:	cmp	r2, #0
   33170:	beq	331e0 <__flatcc_fb_build_schema@@Base+0x10c>
   33174:	ldr	r3, [r2, #4]
   33178:	ldr	r5, [r3, #4]
   3317c:	cmp	r5, #0
   33180:	beq	33160 <__flatcc_fb_build_schema@@Base+0x8c>
   33184:	ldr	r3, [r3]
   33188:	tst	r5, #1
   3318c:	bne	331a0 <__flatcc_fb_build_schema@@Base+0xcc>
   33190:	mov	r4, r5
   33194:	cmp	r5, #1
   33198:	bne	331b8 <__flatcc_fb_build_schema@@Base+0xe4>
   3319c:	b	33160 <__flatcc_fb_build_schema@@Base+0x8c>
   331a0:	ldrb	r4, [r3], #1
   331a4:	eor	r1, r1, r4
   331a8:	sub	r4, r5, #1
   331ac:	mul	r1, r1, r7
   331b0:	cmp	r5, #1
   331b4:	beq	33160 <__flatcc_fb_build_schema@@Base+0x8c>
   331b8:	ldrb	r5, [r3]
   331bc:	ldrb	r0, [r3, #1]
   331c0:	add	r3, r3, #2
   331c4:	subs	r4, r4, #2
   331c8:	eor	r1, r1, r5
   331cc:	mul	r1, r1, r7
   331d0:	eor	r0, r1, r0
   331d4:	mul	r1, r0, r7
   331d8:	bne	331b8 <__flatcc_fb_build_schema@@Base+0xe4>
   331dc:	b	33160 <__flatcc_fb_build_schema@@Base+0x8c>
   331e0:	ldr	r2, [r6, #4]
   331e4:	ldr	r5, [r2, #4]
   331e8:	cmp	r5, #0
   331ec:	beq	33248 <__flatcc_fb_build_schema@@Base+0x174>
   331f0:	ldr	r2, [r2]
   331f4:	tst	r5, #1
   331f8:	bne	3320c <__flatcc_fb_build_schema@@Base+0x138>
   331fc:	mov	r3, r5
   33200:	cmp	r5, #1
   33204:	bne	33224 <__flatcc_fb_build_schema@@Base+0x150>
   33208:	b	33248 <__flatcc_fb_build_schema@@Base+0x174>
   3320c:	ldrb	r0, [r2], #1
   33210:	sub	r3, r5, #1
   33214:	eor	r0, r1, r0
   33218:	mul	r1, r0, r7
   3321c:	cmp	r5, #1
   33220:	beq	33248 <__flatcc_fb_build_schema@@Base+0x174>
   33224:	ldrb	r0, [r2]
   33228:	ldrb	r5, [r2, #1]
   3322c:	add	r2, r2, #2
   33230:	subs	r3, r3, #2
   33234:	eor	r0, r1, r0
   33238:	mul	r0, r0, r7
   3323c:	eor	r0, r0, r5
   33240:	mul	r1, r0, r7
   33244:	bne	33224 <__flatcc_fb_build_schema@@Base+0x150>
   33248:	cmp	r1, #0
   3324c:	str	r8, [r6, #16]
   33250:	moveq	r1, sl
   33254:	cmp	ip, #0
   33258:	str	r1, [r6, #88]	; 0x58
   3325c:	beq	33120 <__flatcc_fb_build_schema@@Base+0x4c>
   33260:	add	r0, ip, #4
   33264:	mov	r1, r6
   33268:	mov	r2, #1
   3326c:	bl	27d58 <fb_symbol_table_insert_item@@Base>
   33270:	cmp	r0, #0
   33274:	beq	33120 <__flatcc_fb_build_schema@@Base+0x4c>
   33278:	ldr	r3, [r0, #4]
   3327c:	mov	r0, #0
   33280:	ldr	r1, [r6, #4]
   33284:	str	r0, [sp]
   33288:	str	r0, [sp, #4]
   3328c:	mov	r0, r9
   33290:	ldr	r2, [pc, #4048]	; 34268 <__flatcc_fb_build_schema@@Base+0x1194>
   33294:	add	r2, pc, r2
   33298:	bl	29ee4 <__flatcc_error_report@@Base>
   3329c:	b	33120 <__flatcc_fb_build_schema@@Base+0x4c>
   332a0:	ldr	r5, [r9, #356]	; 0x164
   332a4:	cmp	r5, #0
   332a8:	beq	33300 <__flatcc_fb_build_schema@@Base+0x22c>
   332ac:	ldr	r6, [pc, #4024]	; 3426c <__flatcc_fb_build_schema@@Base+0x1198>
   332b0:	add	r6, pc, r6
   332b4:	b	332c4 <__flatcc_fb_build_schema@@Base+0x1f0>
   332b8:	ldr	r5, [r5]
   332bc:	cmp	r5, #0
   332c0:	beq	33300 <__flatcc_fb_build_schema@@Base+0x22c>
   332c4:	ldr	r0, [r9, #412]	; 0x19c
   332c8:	mov	r1, r5
   332cc:	mov	r2, #1
   332d0:	add	r0, r0, #16
   332d4:	bl	3cdc4 <fb_name_table_insert_item@@Base>
   332d8:	cmp	r0, #0
   332dc:	beq	332b8 <__flatcc_fb_build_schema@@Base+0x1e4>
   332e0:	ldrd	r0, [r5, #8]
   332e4:	mov	r2, r6
   332e8:	mov	r3, #0
   332ec:	stm	sp, {r0, r1}
   332f0:	mov	r0, r9
   332f4:	mov	r1, #0
   332f8:	bl	29ee4 <__flatcc_error_report@@Base>
   332fc:	b	332b8 <__flatcc_fb_build_schema@@Base+0x1e4>
   33300:	ldr	r7, [pc, #4092]	; 34304 <__flatcc_fb_build_schema@@Base+0x1230>
   33304:	mov	r8, #0
   33308:	mov	r4, #2
   3330c:	mov	r6, #0
   33310:	add	r7, pc, r7
   33314:	b	33360 <__flatcc_fb_build_schema@@Base+0x28c>
   33318:	ldr	r0, [r7, r6, lsl #2]
   3331c:	str	r1, [r9, #52]	; 0x34
   33320:	str	r6, [r5, #24]
   33324:	str	r0, [r5, #8]
   33328:	bl	148b0 <strlen@plt>
   3332c:	strh	r4, [r5, #16]
   33330:	str	r0, [r5, #12]
   33334:	str	r8, [r5]
   33338:	mov	r1, r5
   3333c:	mov	r2, #1
   33340:	ldr	r0, [r9, #412]	; 0x19c
   33344:	add	r0, r0, #16
   33348:	bl	3cdc4 <fb_name_table_insert_item@@Base>
   3334c:	cmp	r0, #0
   33350:	strne	r6, [r0, #24]
   33354:	add	r6, r6, #1
   33358:	cmp	r6, #12
   3335c:	beq	333ac <__flatcc_fb_build_schema@@Base+0x2d8>
   33360:	ldr	r5, [r9, #52]	; 0x34
   33364:	ldr	r0, [r9, #44]	; 0x2c
   33368:	add	r1, r5, #32
   3336c:	cmp	r1, r0
   33370:	bls	33318 <__flatcc_fb_build_schema@@Base+0x244>
   33374:	mov	r0, #65536	; 0x10000
   33378:	mov	r1, #1
   3337c:	bl	147cc <calloc@plt>
   33380:	cmp	r0, #0
   33384:	beq	34fec <__flatcc_fb_build_schema@@Base+0x1f18>
   33388:	ldr	r2, [r9, #48]	; 0x30
   3338c:	mov	r1, r0
   33390:	add	r5, r0, #16
   33394:	str	r2, [r1], #48	; 0x30
   33398:	add	r2, r0, #65536	; 0x10000
   3339c:	str	r2, [r9, #44]	; 0x2c
   333a0:	str	r0, [r9, #48]	; 0x30
   333a4:	str	r5, [r9, #52]	; 0x34
   333a8:	b	33318 <__flatcc_fb_build_schema@@Base+0x244>
   333ac:	ldr	r0, [r9, #184]	; 0xb8
   333b0:	cmp	r0, #0
   333b4:	bne	333fc <__flatcc_fb_build_schema@@Base+0x328>
   333b8:	ldr	r5, [r9, #392]	; 0x188
   333bc:	cmp	r5, #0
   333c0:	beq	34c6c <__flatcc_fb_build_schema@@Base+0x1b98>
   333c4:	mov	r4, #1
   333c8:	b	333d8 <__flatcc_fb_build_schema@@Base+0x304>
   333cc:	ldr	r5, [r5]
   333d0:	cmp	r5, #0
   333d4:	beq	333fc <__flatcc_fb_build_schema@@Base+0x328>
   333d8:	ldrh	r0, [r5, #8]
   333dc:	cmp	r0, #3
   333e0:	bne	333cc <__flatcc_fb_build_schema@@Base+0x2f8>
   333e4:	mov	r0, r9
   333e8:	mov	r1, r5
   333ec:	bl	3518c <__flatcc_fb_build_schema@@Base+0x20b8>
   333f0:	cmp	r0, #0
   333f4:	strhne	r4, [r5, #48]	; 0x30
   333f8:	b	333cc <__flatcc_fb_build_schema@@Base+0x2f8>
   333fc:	ldr	r6, [r9, #392]	; 0x188
   33400:	cmp	r6, #0
   33404:	beq	34c6c <__flatcc_fb_build_schema@@Base+0x1b98>
   33408:	ldr	sl, [pc, #4040]	; 343d8 <__flatcc_fb_build_schema@@Base+0x1304>
   3340c:	ldr	r5, [pc, #4040]	; 343dc <__flatcc_fb_build_schema@@Base+0x1308>
   33410:	mov	r4, #1
   33414:	mov	r7, #0
   33418:	add	sl, pc, sl
   3341c:	add	r5, pc, r5
   33420:	b	33450 <__flatcc_fb_build_schema@@Base+0x37c>
   33424:	ldr	r0, [r9, #184]	; 0xb8
   33428:	cmp	r0, #0
   3342c:	beq	33444 <__flatcc_fb_build_schema@@Base+0x370>
   33430:	mov	r0, r9
   33434:	mov	r1, r6
   33438:	bl	3518c <__flatcc_fb_build_schema@@Base+0x20b8>
   3343c:	cmp	r0, #0
   33440:	strhne	r4, [r6, #48]	; 0x30
   33444:	ldr	r6, [r6]
   33448:	cmp	r6, #0
   3344c:	beq	3380c <__flatcc_fb_build_schema@@Base+0x738>
   33450:	ldrh	r0, [r6, #8]
   33454:	cmp	r0, #4
   33458:	bhi	337dc <__flatcc_fb_build_schema@@Base+0x708>
   3345c:	add	r1, pc, #4
   33460:	ldr	r0, [r1, r0, lsl #2]
   33464:	add	pc, r1, r0
   33468:			; <UNDEFINED> instruction: 0xffffffdc
   3346c:	andeq	r0, r0, r4, lsl r0
   33470:			; <UNDEFINED> instruction: 0xffffffdc
   33474:			; <UNDEFINED> instruction: 0xffffffbc
   33478:			; <UNDEFINED> instruction: 0xffffffc8
   3347c:	ldrh	r0, [r6, #48]	; 0x30
   33480:	cmp	r0, #0
   33484:	beq	334ac <__flatcc_fb_build_schema@@Base+0x3d8>
   33488:	ldr	r1, [r6, #4]
   3348c:	mov	r0, r9
   33490:	mov	r2, r5
   33494:	mov	r3, #0
   33498:	str	r7, [sp]
   3349c:	str	r7, [sp, #4]
   334a0:	bl	29ee4 <__flatcc_error_report@@Base>
   334a4:	strh	r4, [r6, #48]	; 0x30
   334a8:	b	33444 <__flatcc_fb_build_schema@@Base+0x370>
   334ac:	ldr	r1, [r6, #28]
   334b0:	mov	r0, r9
   334b4:	mov	r2, #16
   334b8:	add	r3, sp, #64	; 0x40
   334bc:	bl	35f78 <__flatcc_fb_build_schema@@Base+0x2ea4>
   334c0:	strh	r0, [r6, #92]	; 0x5c
   334c4:	ldr	r0, [sp, #80]	; 0x50
   334c8:	cmp	r0, #0
   334cc:	beq	33548 <__flatcc_fb_build_schema@@Base+0x474>
   334d0:	ldrd	r0, [r0, #8]
   334d4:	subs	r2, r0, #1
   334d8:	sbc	r3, r1, #0
   334dc:	orrs	r5, r0, r1
   334e0:	beq	33520 <__flatcc_fb_build_schema@@Base+0x44c>
   334e4:	rsbs	r2, r2, #255	; 0xff
   334e8:	rscs	r2, r3, #0
   334ec:	bcc	33520 <__flatcc_fb_build_schema@@Base+0x44c>
   334f0:	mov	r3, #0
   334f4:	mov	r2, #1
   334f8:	eor	r5, r2, r0
   334fc:	eor	r4, r3, r1
   33500:	orrs	r5, r5, r4
   33504:	beq	33544 <__flatcc_fb_build_schema@@Base+0x470>
   33508:	lsl	r3, r3, #1
   3350c:	orr	r3, r3, r2, lsr #31
   33510:	lsl	r2, r2, #1
   33514:	subs	r5, r0, r2
   33518:	sbcs	r5, r1, r3
   3351c:	bcs	334f8 <__flatcc_fb_build_schema@@Base+0x424>
   33520:	ldr	r1, [r6, #4]
   33524:	str	r7, [sp]
   33528:	str	r7, [sp, #4]
   3352c:	mov	r0, r9
   33530:	mov	r3, #0
   33534:	ldr	r2, [pc, #4092]	; 34538 <__flatcc_fb_build_schema@@Base+0x1464>
   33538:	add	r2, pc, r2
   3353c:	bl	29ee4 <__flatcc_error_report@@Base>
   33540:	b	33548 <__flatcc_fb_build_schema@@Base+0x474>
   33544:	strh	r0, [r6, #104]	; 0x68
   33548:	ldr	r8, [r6, #20]
   3354c:	cmp	r8, #0
   33550:	beq	336e8 <__flatcc_fb_build_schema@@Base+0x614>
   33554:	add	r4, r6, #56	; 0x38
   33558:	mov	r5, #0
   3355c:	b	33588 <__flatcc_fb_build_schema@@Base+0x4b4>
   33560:	ldr	r3, [r0, #4]
   33564:	ldr	r1, [r8, #4]
   33568:	str	r7, [sp]
   3356c:	str	r7, [sp, #4]
   33570:	mov	r0, r9
   33574:	mov	r2, sl
   33578:	bl	29ee4 <__flatcc_error_report@@Base>
   3357c:	ldr	r8, [r8]
   33580:	cmp	r8, #0
   33584:	beq	336c0 <__flatcc_fb_build_schema@@Base+0x5ec>
   33588:	mov	r0, r4
   3358c:	mov	r1, r8
   33590:	mov	r2, #1
   33594:	bl	27d58 <fb_symbol_table_insert_item@@Base>
   33598:	cmp	r0, #0
   3359c:	bne	33560 <__flatcc_fb_build_schema@@Base+0x48c>
   335a0:	ldrh	r0, [r8, #8]
   335a4:	cmp	r0, #5
   335a8:	bne	336f8 <__flatcc_fb_build_schema@@Base+0x624>
   335ac:	ldrd	r0, [r9, #168]	; 0xa8
   335b0:	mov	r2, #4
   335b4:	add	r3, sp, #64	; 0x40
   335b8:	cmp	r1, #0
   335bc:	movwne	r1, #1
   335c0:	cmp	r0, #0
   335c4:	mov	r0, r9
   335c8:	orr	r2, r2, r1, lsl #7
   335cc:	lsleq	r2, r1, #7
   335d0:	ldr	r1, [r8, #64]	; 0x40
   335d4:	bl	35f78 <__flatcc_fb_build_schema@@Base+0x2ea4>
   335d8:	strh	r0, [r8, #72]	; 0x48
   335dc:	ldrh	r1, [r8, #24]
   335e0:	cmp	r1, #8
   335e4:	beq	33634 <__flatcc_fb_build_schema@@Base+0x560>
   335e8:	cmp	r1, #12
   335ec:	bne	33714 <__flatcc_fb_build_schema@@Base+0x640>
   335f0:	ldr	r2, [r8, #16]
   335f4:	ldr	r1, [r6, #12]
   335f8:	mov	r0, r9
   335fc:	mov	r3, #0
   33600:	bl	361a0 <__flatcc_fb_build_schema@@Base+0x30cc>
   33604:	cmp	r0, #0
   33608:	beq	33668 <__flatcc_fb_build_schema@@Base+0x594>
   3360c:	mov	r1, #14
   33610:	strh	r1, [r8, #24]
   33614:	str	r0, [r8, #16]
   33618:	ldrh	r1, [r0, #8]
   3361c:	cmp	r1, #1
   33620:	bne	3368c <__flatcc_fb_build_schema@@Base+0x5b8>
   33624:	ldrb	r0, [r8, #72]	; 0x48
   33628:	tst	r0, #128	; 0x80
   3362c:	beq	3363c <__flatcc_fb_build_schema@@Base+0x568>
   33630:	b	33764 <__flatcc_fb_build_schema@@Base+0x690>
   33634:	ubfx	r0, r0, #7, #1
   33638:	add	r5, r5, r0
   3363c:	ldrh	r0, [r8, #56]	; 0x38
   33640:	cmp	r0, #0
   33644:	beq	3357c <__flatcc_fb_build_schema@@Base+0x4a8>
   33648:	ldr	r1, [r8, #4]
   3364c:	str	r7, [sp]
   33650:	str	r7, [sp, #4]
   33654:	mov	r0, r9
   33658:	mov	r3, #0
   3365c:	ldr	r2, [pc, #3836]	; 34560 <__flatcc_fb_build_schema@@Base+0x148c>
   33660:	add	r2, pc, r2
   33664:	b	33578 <__flatcc_fb_build_schema@@Base+0x4a4>
   33668:	ldr	r1, [r8, #16]
   3366c:	ldr	r2, [pc, #3824]	; 34564 <__flatcc_fb_build_schema@@Base+0x1490>
   33670:	mov	r0, r9
   33674:	mov	r3, r8
   33678:	add	r2, pc, r2
   3367c:	bl	2a150 <error_ref_sym@@Base>
   33680:	mov	r0, #1
   33684:	strh	r0, [r8, #24]
   33688:	b	3357c <__flatcc_fb_build_schema@@Base+0x4a8>
   3368c:	ldr	r2, [r9, #152]	; 0x98
   33690:	cmp	r2, #0
   33694:	beq	33784 <__flatcc_fb_build_schema@@Base+0x6b0>
   33698:	cmp	r1, #3
   3369c:	bne	337a4 <__flatcc_fb_build_schema@@Base+0x6d0>
   336a0:	ldrb	r0, [r8, #72]	; 0x48
   336a4:	tst	r0, #128	; 0x80
   336a8:	beq	3363c <__flatcc_fb_build_schema@@Base+0x568>
   336ac:	ldr	r0, [r9, #148]	; 0x94
   336b0:	cmp	r0, #0
   336b4:	beq	33764 <__flatcc_fb_build_schema@@Base+0x690>
   336b8:	add	r5, r5, #1
   336bc:	b	3363c <__flatcc_fb_build_schema@@Base+0x568>
   336c0:	cmp	r5, #0
   336c4:	beq	336e8 <__flatcc_fb_build_schema@@Base+0x614>
   336c8:	ldrh	r0, [r6, #10]
   336cc:	cmp	r5, #2
   336d0:	orr	r0, r0, #8
   336d4:	strh	r0, [r6, #10]
   336d8:	blt	336e8 <__flatcc_fb_build_schema@@Base+0x614>
   336dc:	ldr	r0, [r9, #156]	; 0x9c
   336e0:	cmp	r0, #0
   336e4:	beq	33730 <__flatcc_fb_build_schema@@Base+0x65c>
   336e8:	ldr	r5, [pc, #4080]	; 346e0 <__flatcc_fb_build_schema@@Base+0x160c>
   336ec:	mov	r4, #1
   336f0:	add	r5, pc, r5
   336f4:	b	33444 <__flatcc_fb_build_schema@@Base+0x370>
   336f8:	ldr	r1, [r8, #4]
   336fc:	str	r7, [sp]
   33700:	str	r7, [sp, #4]
   33704:	mov	r0, r9
   33708:	ldr	r2, [pc, #4052]	; 346e4 <__flatcc_fb_build_schema@@Base+0x1610>
   3370c:	add	r2, pc, r2
   33710:	b	33748 <__flatcc_fb_build_schema@@Base+0x674>
   33714:	ldr	r1, [r8, #4]
   33718:	str	r7, [sp]
   3371c:	str	r7, [sp, #4]
   33720:	mov	r0, r9
   33724:	ldr	r2, [pc, #4028]	; 346e8 <__flatcc_fb_build_schema@@Base+0x1614>
   33728:	add	r2, pc, r2
   3372c:	b	33748 <__flatcc_fb_build_schema@@Base+0x674>
   33730:	ldr	r1, [r6, #4]
   33734:	str	r7, [sp]
   33738:	str	r7, [sp, #4]
   3373c:	mov	r0, r9
   33740:	ldr	r2, [pc, #4004]	; 346ec <__flatcc_fb_build_schema@@Base+0x1618>
   33744:	add	r2, pc, r2
   33748:	mov	r3, #0
   3374c:	bl	29ee4 <__flatcc_error_report@@Base>
   33750:	ldr	r5, [pc, #3992]	; 346f0 <__flatcc_fb_build_schema@@Base+0x161c>
   33754:	mov	r4, #1
   33758:	strh	r4, [r6, #48]	; 0x30
   3375c:	add	r5, pc, r5
   33760:	b	33444 <__flatcc_fb_build_schema@@Base+0x370>
   33764:	ldr	r1, [r8, #4]
   33768:	str	r7, [sp]
   3376c:	str	r7, [sp, #4]
   33770:	mov	r0, r9
   33774:	mov	r3, #0
   33778:	ldr	r2, [pc, #4088]	; 34778 <__flatcc_fb_build_schema@@Base+0x16a4>
   3377c:	add	r2, pc, r2
   33780:	b	337c0 <__flatcc_fb_build_schema@@Base+0x6ec>
   33784:	ldr	r3, [r0, #4]
   33788:	ldr	r1, [r8, #4]
   3378c:	str	r7, [sp]
   33790:	str	r7, [sp, #4]
   33794:	mov	r0, r9
   33798:	ldr	r2, [pc, #4060]	; 3477c <__flatcc_fb_build_schema@@Base+0x16a8>
   3379c:	add	r2, pc, r2
   337a0:	b	337c0 <__flatcc_fb_build_schema@@Base+0x6ec>
   337a4:	ldr	r3, [r0, #4]
   337a8:	ldr	r1, [r8, #4]
   337ac:	str	r7, [sp]
   337b0:	str	r7, [sp, #4]
   337b4:	mov	r0, r9
   337b8:	ldr	r2, [pc, #4068]	; 347a4 <__flatcc_fb_build_schema@@Base+0x16d0>
   337bc:	add	r2, pc, r2
   337c0:	bl	29ee4 <__flatcc_error_report@@Base>
   337c4:	mov	r4, #1
   337c8:	strh	r4, [r8, #24]
   337cc:	ldr	r5, [pc, #4052]	; 347a8 <__flatcc_fb_build_schema@@Base+0x16d4>
   337d0:	strh	r4, [r6, #48]	; 0x30
   337d4:	add	r5, pc, r5
   337d8:	b	33444 <__flatcc_fb_build_schema@@Base+0x370>
   337dc:	mov	r0, #0
   337e0:	ldr	r1, [r6, #4]
   337e4:	mov	r3, #0
   337e8:	str	r0, [sp]
   337ec:	str	r0, [sp, #4]
   337f0:	mov	r0, r9
   337f4:	ldr	r2, [pc, #4060]	; 347d8 <__flatcc_fb_build_schema@@Base+0x1704>
   337f8:	add	r2, pc, r2
   337fc:	bl	29ee4 <__flatcc_error_report@@Base>
   33800:	mvn	r0, #0
   33804:	sub	sp, fp, #28
   33808:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3380c:	ldr	r5, [r9, #392]	; 0x188
   33810:	cmp	r5, #0
   33814:	beq	34c6c <__flatcc_fb_build_schema@@Base+0x1b98>
   33818:	mov	r4, #1
   3381c:	b	3382c <__flatcc_fb_build_schema@@Base+0x758>
   33820:	ldr	r5, [r5]
   33824:	cmp	r5, #0
   33828:	beq	3385c <__flatcc_fb_build_schema@@Base+0x788>
   3382c:	ldrh	r0, [r5, #8]
   33830:	cmp	r0, #1
   33834:	bne	33820 <__flatcc_fb_build_schema@@Base+0x74c>
   33838:	ldrh	r0, [r5, #48]	; 0x30
   3383c:	cmp	r0, #1
   33840:	beq	33820 <__flatcc_fb_build_schema@@Base+0x74c>
   33844:	mov	r0, r9
   33848:	mov	r1, r5
   3384c:	bl	35a14 <__flatcc_fb_build_schema@@Base+0x2940>
   33850:	cmp	r0, #0
   33854:	strhne	r4, [r5, #48]	; 0x30
   33858:	b	33820 <__flatcc_fb_build_schema@@Base+0x74c>
   3385c:	ldr	r4, [r9, #392]	; 0x188
   33860:	cmp	r4, #0
   33864:	beq	34c6c <__flatcc_fb_build_schema@@Base+0x1b98>
   33868:	add	r0, r9, #216	; 0xd8
   3386c:	mov	r8, #0
   33870:	str	r0, [sp, #24]
   33874:	ldr	r5, [pc, #4092]	; 34878 <__flatcc_fb_build_schema@@Base+0x17a4>
   33878:	add	r5, pc, r5
   3387c:	b	338bc <__flatcc_fb_build_schema@@Base+0x7e8>
   33880:	ldr	r1, [r5, #4]
   33884:	str	r8, [sp]
   33888:	str	r8, [sp, #4]
   3388c:	mov	r0, r9
   33890:	mov	r3, #0
   33894:	ldr	r2, [pc, #4064]	; 3487c <__flatcc_fb_build_schema@@Base+0x17a8>
   33898:	add	r2, pc, r2
   3389c:	bl	29ee4 <__flatcc_error_report@@Base>
   338a0:	mov	r0, #1
   338a4:	strh	r0, [r4, #48]	; 0x30
   338a8:	ldr	r5, [pc, #4080]	; 348a0 <__flatcc_fb_build_schema@@Base+0x17cc>
   338ac:	add	r5, pc, r5
   338b0:	ldr	r4, [r4]
   338b4:	cmp	r4, #0
   338b8:	beq	34c6c <__flatcc_fb_build_schema@@Base+0x1b98>
   338bc:	ldrh	r0, [r4, #8]
   338c0:	cmp	r0, #2
   338c4:	beq	33950 <__flatcc_fb_build_schema@@Base+0x87c>
   338c8:	cmp	r0, #0
   338cc:	bne	338b0 <__flatcc_fb_build_schema@@Base+0x7dc>
   338d0:	ldrh	r0, [r4, #48]	; 0x30
   338d4:	cmp	r0, #1
   338d8:	beq	338b0 <__flatcc_fb_build_schema@@Base+0x7dc>
   338dc:	cmp	r0, #0
   338e0:	bne	35038 <__flatcc_fb_build_schema@@Base+0x1f64>
   338e4:	ldr	r1, [r4, #28]
   338e8:	mov	r0, r9
   338ec:	mov	r2, #8
   338f0:	add	r3, sp, #64	; 0x40
   338f4:	bl	35f78 <__flatcc_fb_build_schema@@Base+0x2ea4>
   338f8:	strh	r0, [r4, #92]	; 0x5c
   338fc:	ldr	r6, [r4, #20]
   33900:	cmp	r6, #0
   33904:	beq	34a94 <__flatcc_fb_build_schema@@Base+0x19c0>
   33908:	add	r0, r4, #56	; 0x38
   3390c:	mov	r7, #0
   33910:	mov	sl, #0
   33914:	str	r4, [sp, #36]	; 0x24
   33918:	str	r0, [sp, #60]	; 0x3c
   3391c:	mov	r0, #0
   33920:	str	r0, [sp, #40]	; 0x28
   33924:	mov	r0, #0
   33928:	str	r0, [sp, #20]
   3392c:	mov	r0, #0
   33930:	str	r0, [sp, #28]
   33934:	mov	r0, #0
   33938:	str	r0, [sp, #48]	; 0x30
   3393c:	mov	r0, #0
   33940:	str	r0, [sp, #52]	; 0x34
   33944:	mov	r0, #0
   33948:	str	r0, [sp, #32]
   3394c:	b	33b98 <__flatcc_fb_build_schema@@Base+0xac4>
   33950:	ldrh	r0, [r4, #48]	; 0x30
   33954:	cmp	r0, #1
   33958:	beq	338b0 <__flatcc_fb_build_schema@@Base+0x7dc>
   3395c:	cmp	r0, #0
   33960:	bne	35058 <__flatcc_fb_build_schema@@Base+0x1f84>
   33964:	ldr	r0, [r4, #28]
   33968:	cmp	r0, #0
   3396c:	beq	33990 <__flatcc_fb_build_schema@@Base+0x8bc>
   33970:	ldr	r1, [r4, #4]
   33974:	str	r8, [sp]
   33978:	str	r8, [sp, #4]
   3397c:	mov	r0, r9
   33980:	mov	r3, #0
   33984:	ldr	r2, [pc, #3980]	; 34918 <__flatcc_fb_build_schema@@Base+0x1844>
   33988:	add	r2, pc, r2
   3398c:	bl	29ee4 <__flatcc_error_report@@Base>
   33990:	ldr	r5, [r4, #20]
   33994:	cmp	r5, #0
   33998:	beq	338a8 <__flatcc_fb_build_schema@@Base+0x7d4>
   3399c:	add	r6, r4, #56	; 0x38
   339a0:	b	339d0 <__flatcc_fb_build_schema@@Base+0x8fc>
   339a4:	ldr	r3, [r0, #4]
   339a8:	ldr	r1, [r5, #4]
   339ac:	str	r8, [sp]
   339b0:	str	r8, [sp, #4]
   339b4:	mov	r0, r9
   339b8:	ldr	r2, [pc, #4064]	; 349a0 <__flatcc_fb_build_schema@@Base+0x18cc>
   339bc:	add	r2, pc, r2
   339c0:	bl	29ee4 <__flatcc_error_report@@Base>
   339c4:	ldr	r5, [r5]
   339c8:	cmp	r5, #0
   339cc:	beq	338a8 <__flatcc_fb_build_schema@@Base+0x7d4>
   339d0:	mov	r0, r6
   339d4:	mov	r1, r5
   339d8:	mov	r2, #1
   339dc:	bl	27d58 <fb_symbol_table_insert_item@@Base>
   339e0:	cmp	r0, #0
   339e4:	bne	339a4 <__flatcc_fb_build_schema@@Base+0x8d0>
   339e8:	ldrh	r0, [r5, #8]
   339ec:	cmp	r0, #5
   339f0:	bne	33880 <__flatcc_fb_build_schema@@Base+0x7ac>
   339f4:	ldrh	r0, [r5, #56]	; 0x38
   339f8:	cmp	r0, #0
   339fc:	beq	33a20 <__flatcc_fb_build_schema@@Base+0x94c>
   33a00:	ldr	r1, [r5, #4]
   33a04:	str	r8, [sp]
   33a08:	str	r8, [sp, #4]
   33a0c:	mov	r0, r9
   33a10:	mov	r3, #0
   33a14:	ldr	r2, [pc, #4076]	; 34a08 <__flatcc_fb_build_schema@@Base+0x1934>
   33a18:	add	r2, pc, r2
   33a1c:	bl	29ee4 <__flatcc_error_report@@Base>
   33a20:	ldrh	r0, [r5, #24]
   33a24:	cmp	r0, #1
   33a28:	beq	339c4 <__flatcc_fb_build_schema@@Base+0x8f0>
   33a2c:	cmp	r0, #12
   33a30:	beq	33a54 <__flatcc_fb_build_schema@@Base+0x980>
   33a34:	ldr	r1, [r5, #4]
   33a38:	str	r8, [sp]
   33a3c:	str	r8, [sp, #4]
   33a40:	mov	r0, r9
   33a44:	mov	r3, #0
   33a48:	ldr	r2, [pc, #4048]	; 34a20 <__flatcc_fb_build_schema@@Base+0x194c>
   33a4c:	add	r2, pc, r2
   33a50:	bl	29ee4 <__flatcc_error_report@@Base>
   33a54:	ldr	r2, [r5, #32]
   33a58:	ldr	r1, [r4, #12]
   33a5c:	mov	r0, r9
   33a60:	mov	r3, #0
   33a64:	bl	361a0 <__flatcc_fb_build_schema@@Base+0x30cc>
   33a68:	cmp	r0, #0
   33a6c:	beq	33aa0 <__flatcc_fb_build_schema@@Base+0x9cc>
   33a70:	ldrh	r1, [r0, #8]
   33a74:	cmp	r1, #0
   33a78:	beq	33ac4 <__flatcc_fb_build_schema@@Base+0x9f0>
   33a7c:	ldr	r3, [r0, #4]
   33a80:	ldr	r1, [r5, #4]
   33a84:	str	r8, [sp]
   33a88:	str	r8, [sp, #4]
   33a8c:	mov	r0, r9
   33a90:	ldr	r2, [pc, #4076]	; 34a84 <__flatcc_fb_build_schema@@Base+0x19b0>
   33a94:	add	r2, pc, r2
   33a98:	bl	29ee4 <__flatcc_error_report@@Base>
   33a9c:	b	33ab8 <__flatcc_fb_build_schema@@Base+0x9e4>
   33aa0:	ldr	r1, [r5, #32]
   33aa4:	ldr	r2, [pc, #4060]	; 34a88 <__flatcc_fb_build_schema@@Base+0x19b4>
   33aa8:	mov	r0, r9
   33aac:	add	r2, pc, r2
   33ab0:	mov	r3, r5
   33ab4:	bl	2a150 <error_ref_sym@@Base>
   33ab8:	mov	r0, #1
   33abc:	strh	r0, [r5, #24]
   33ac0:	b	339c4 <__flatcc_fb_build_schema@@Base+0x8f0>
   33ac4:	str	r0, [r5, #32]
   33ac8:	mov	r0, #14
   33acc:	mov	r3, #0
   33ad0:	strh	r0, [r5, #40]	; 0x28
   33ad4:	mov	r0, r9
   33ad8:	ldr	r2, [r5, #16]
   33adc:	ldr	r1, [r4, #12]
   33ae0:	bl	361a0 <__flatcc_fb_build_schema@@Base+0x30cc>
   33ae4:	cmp	r0, #0
   33ae8:	beq	33b18 <__flatcc_fb_build_schema@@Base+0xa44>
   33aec:	ldrh	r1, [r0, #8]
   33af0:	cmp	r1, #0
   33af4:	beq	33b2c <__flatcc_fb_build_schema@@Base+0xa58>
   33af8:	ldr	r3, [r0, #4]
   33afc:	ldr	r1, [r5, #4]
   33b00:	str	r8, [sp]
   33b04:	str	r8, [sp, #4]
   33b08:	mov	r0, r9
   33b0c:	ldr	r2, [pc, #3960]	; 34a8c <__flatcc_fb_build_schema@@Base+0x19b8>
   33b10:	add	r2, pc, r2
   33b14:	b	33a98 <__flatcc_fb_build_schema@@Base+0x9c4>
   33b18:	ldr	r1, [r5, #16]
   33b1c:	ldr	r2, [pc, #3948]	; 34a90 <__flatcc_fb_build_schema@@Base+0x19bc>
   33b20:	mov	r0, r9
   33b24:	add	r2, pc, r2
   33b28:	b	33ab0 <__flatcc_fb_build_schema@@Base+0x9dc>
   33b2c:	str	r8, [r5, #88]	; 0x58
   33b30:	str	r8, [r5, #92]	; 0x5c
   33b34:	str	r0, [r5, #16]
   33b38:	mov	r0, #14
   33b3c:	mov	r2, #4
   33b40:	add	r3, sp, #64	; 0x40
   33b44:	strh	r0, [r5, #24]
   33b48:	mov	r0, r9
   33b4c:	ldr	r1, [r5, #64]	; 0x40
   33b50:	bl	35f78 <__flatcc_fb_build_schema@@Base+0x2ea4>
   33b54:	strh	r0, [r5, #72]	; 0x48
   33b58:	b	339c4 <__flatcc_fb_build_schema@@Base+0x8f0>
   33b5c:	mov	r8, #0
   33b60:	ldr	r1, [r6, #4]
   33b64:	mov	r0, r9
   33b68:	mov	r3, #0
   33b6c:	str	r8, [sp]
   33b70:	str	r8, [sp, #4]
   33b74:	ldr	r2, [pc, #4024]	; 34b34 <__flatcc_fb_build_schema@@Base+0x1a60>
   33b78:	add	r2, pc, r2
   33b7c:	bl	29ee4 <__flatcc_error_report@@Base>
   33b80:	ldr	r4, [sp, #36]	; 0x24
   33b84:	mov	r0, #1
   33b88:	strh	r0, [r6, #24]
   33b8c:	ldr	r6, [r6]
   33b90:	cmp	r6, #0
   33b94:	beq	34a6c <__flatcc_fb_build_schema@@Base+0x1998>
   33b98:	ldr	r0, [sp, #60]	; 0x3c
   33b9c:	mov	r1, r6
   33ba0:	mov	r2, #1
   33ba4:	bl	27d58 <fb_symbol_table_insert_item@@Base>
   33ba8:	cmp	r0, #0
   33bac:	beq	33bd0 <__flatcc_fb_build_schema@@Base+0xafc>
   33bb0:	ldr	r3, [r0, #4]
   33bb4:	ldr	r1, [r6, #4]
   33bb8:	str	r8, [sp]
   33bbc:	str	r8, [sp, #4]
   33bc0:	mov	r0, r9
   33bc4:	mov	r2, r5
   33bc8:	bl	29ee4 <__flatcc_error_report@@Base>
   33bcc:	b	33b8c <__flatcc_fb_build_schema@@Base+0xab8>
   33bd0:	ldrh	r0, [r6, #8]
   33bd4:	cmp	r0, #5
   33bd8:	bne	34bac <__flatcc_fb_build_schema@@Base+0x1ad8>
   33bdc:	ldrh	r0, [r6, #24]
   33be0:	sub	r1, r0, #7
   33be4:	cmp	r1, #2
   33be8:	bcs	33c1c <__flatcc_fb_build_schema@@Base+0xb48>
   33bec:	ldr	r0, [r6, #16]
   33bf0:	movw	r1, #999	; 0x3e7
   33bf4:	ldr	r0, [r0, #16]
   33bf8:	add	r1, r0, r1
   33bfc:	mov	r0, #0
   33c00:	cmp	r1, #27
   33c04:	bhi	33c14 <__flatcc_fb_build_schema@@Base+0xb40>
   33c08:	ldr	r0, [pc, #4032]	; 34bd0 <__flatcc_fb_build_schema@@Base+0x1afc>
   33c0c:	add	r0, pc, r0
   33c10:	ldr	r0, [r0, r1, lsl #2]
   33c14:	str	r0, [r6, #16]
   33c18:	b	33c24 <__flatcc_fb_build_schema@@Base+0xb50>
   33c1c:	cmp	r0, #1
   33c20:	beq	33b8c <__flatcc_fb_build_schema@@Base+0xab8>
   33c24:	ldr	r1, [r6, #64]	; 0x40
   33c28:	mov	r0, r9
   33c2c:	movw	r2, #4038	; 0xfc6
   33c30:	add	r3, sp, #64	; 0x40
   33c34:	str	sl, [sp, #56]	; 0x38
   33c38:	str	r7, [sp, #44]	; 0x2c
   33c3c:	bl	35f78 <__flatcc_fb_build_schema@@Base+0x2ea4>
   33c40:	strh	r0, [r6, #72]	; 0x48
   33c44:	ldr	sl, [sp, #88]	; 0x58
   33c48:	cmp	sl, #0
   33c4c:	beq	33cd4 <__flatcc_fb_build_schema@@Base+0xc00>
   33c50:	ldrh	r0, [r6, #24]
   33c54:	cmp	r0, #7
   33c58:	bne	33cb4 <__flatcc_fb_build_schema@@Base+0xbe0>
   33c5c:	ldr	r0, [r6, #16]
   33c60:	cmp	r0, #4
   33c64:	bne	33cb4 <__flatcc_fb_build_schema@@Base+0xbe0>
   33c68:	ldrh	r0, [sl, #16]
   33c6c:	cmp	r0, #2
   33c70:	bne	33cd4 <__flatcc_fb_build_schema@@Base+0xc00>
   33c74:	ldr	r3, [sl, #12]
   33c78:	ldr	r8, [r4, #12]
   33c7c:	ldr	r1, [sl, #8]
   33c80:	sub	r0, r3, #1
   33c84:	add	r2, r0, #1
   33c88:	cmp	r2, #1
   33c8c:	blt	34308 <__flatcc_fb_build_schema@@Base+0x1234>
   33c90:	ldrb	r2, [r1, r0]
   33c94:	sub	r0, r0, #1
   33c98:	cmp	r2, #46	; 0x2e
   33c9c:	bne	33c84 <__flatcc_fb_build_schema@@Base+0xbb0>
   33ca0:	add	r2, r1, r0
   33ca4:	sub	r3, r3, #1
   33ca8:	add	r4, r2, #2
   33cac:	add	r2, r0, #1
   33cb0:	b	3430c <__flatcc_fb_build_schema@@Base+0x1238>
   33cb4:	ldr	r1, [sl, #4]
   33cb8:	str	r8, [sp]
   33cbc:	str	r8, [sp, #4]
   33cc0:	mov	r0, r9
   33cc4:	mov	r3, #0
   33cc8:	ldr	r2, [pc, #4040]	; 34c98 <__flatcc_fb_build_schema@@Base+0x1bc4>
   33ccc:	add	r2, pc, r2
   33cd0:	bl	29ee4 <__flatcc_error_report@@Base>
   33cd4:	ldrh	r0, [r6, #72]	; 0x48
   33cd8:	tst	r0, #256	; 0x100
   33cdc:	bne	33cf4 <__flatcc_fb_build_schema@@Base+0xc20>
   33ce0:	ldr	r7, [sp, #44]	; 0x2c
   33ce4:	ldr	sl, [sp, #56]	; 0x38
   33ce8:	tst	r0, #1024	; 0x400
   33cec:	bne	33d34 <__flatcc_fb_build_schema@@Base+0xc60>
   33cf0:	b	33d70 <__flatcc_fb_build_schema@@Base+0xc9c>
   33cf4:	ldrh	r1, [r6, #24]
   33cf8:	ldr	r7, [sp, #44]	; 0x2c
   33cfc:	ldr	sl, [sp, #56]	; 0x38
   33d00:	cmp	r1, #8
   33d04:	bne	33d2c <__flatcc_fb_build_schema@@Base+0xc58>
   33d08:	ldr	r1, [r6, #4]
   33d0c:	str	r8, [sp]
   33d10:	str	r8, [sp, #4]
   33d14:	mov	r0, r9
   33d18:	mov	r3, #0
   33d1c:	ldr	r2, [pc, #4036]	; 34ce8 <__flatcc_fb_build_schema@@Base+0x1c14>
   33d20:	add	r2, pc, r2
   33d24:	bl	29ee4 <__flatcc_error_report@@Base>
   33d28:	ldrh	r0, [r6, #72]	; 0x48
   33d2c:	tst	r0, #1024	; 0x400
   33d30:	beq	33d70 <__flatcc_fb_build_schema@@Base+0xc9c>
   33d34:	ldrh	r1, [r6, #24]
   33d38:	cmp	r1, #7
   33d3c:	bne	33d4c <__flatcc_fb_build_schema@@Base+0xc78>
   33d40:	ldr	r1, [r6, #16]
   33d44:	cmp	r1, #4
   33d48:	beq	33d70 <__flatcc_fb_build_schema@@Base+0xc9c>
   33d4c:	ldr	r1, [r6, #4]
   33d50:	str	r8, [sp]
   33d54:	str	r8, [sp, #4]
   33d58:	mov	r0, r9
   33d5c:	mov	r3, #0
   33d60:	ldr	r2, [pc, #4084]	; 34d5c <__flatcc_fb_build_schema@@Base+0x1c88>
   33d64:	add	r2, pc, r2
   33d68:	bl	29ee4 <__flatcc_error_report@@Base>
   33d6c:	ldrh	r0, [r6, #72]	; 0x48
   33d70:	tst	r0, #2048	; 0x800
   33d74:	beq	33db4 <__flatcc_fb_build_schema@@Base+0xce0>
   33d78:	ldrh	r1, [r6, #24]
   33d7c:	cmp	r1, #7
   33d80:	bne	33d90 <__flatcc_fb_build_schema@@Base+0xcbc>
   33d84:	ldr	r1, [r6, #16]
   33d88:	cmp	r1, #4
   33d8c:	beq	33db4 <__flatcc_fb_build_schema@@Base+0xce0>
   33d90:	ldr	r1, [r6, #4]
   33d94:	str	r8, [sp]
   33d98:	str	r8, [sp, #4]
   33d9c:	mov	r0, r9
   33da0:	mov	r3, #0
   33da4:	ldr	r2, [pc, #4020]	; 34d60 <__flatcc_fb_build_schema@@Base+0x1c8c>
   33da8:	add	r2, pc, r2
   33dac:	bl	29ee4 <__flatcc_error_report@@Base>
   33db0:	ldrh	r0, [r6, #72]	; 0x48
   33db4:	and	r0, r0, #3072	; 0xc00
   33db8:	cmp	r0, #3072	; 0xc00
   33dbc:	bne	33de0 <__flatcc_fb_build_schema@@Base+0xd0c>
   33dc0:	ldr	r1, [r6, #4]
   33dc4:	str	r8, [sp]
   33dc8:	str	r8, [sp, #4]
   33dcc:	mov	r0, r9
   33dd0:	mov	r3, #0
   33dd4:	ldr	r2, [pc, #4088]	; 34dd4 <__flatcc_fb_build_schema@@Base+0x1d00>
   33dd8:	add	r2, pc, r2
   33ddc:	bl	29ee4 <__flatcc_error_report@@Base>
   33de0:	ldr	r8, [sp, #68]	; 0x44
   33de4:	orrs	r0, r7, sl
   33de8:	bne	33e14 <__flatcc_fb_build_schema@@Base+0xd40>
   33dec:	cmp	r8, #0
   33df0:	beq	33e14 <__flatcc_fb_build_schema@@Base+0xd40>
   33df4:	ldr	r0, [sp, #24]
   33df8:	mov	r1, #0
   33dfc:	ldr	r2, [r0]
   33e00:	ldr	r0, [r9, #112]	; 0x70
   33e04:	str	r0, [sp, #40]	; 0x28
   33e08:	bl	148d4 <memset@plt>
   33e0c:	mov	r0, #1
   33e10:	str	r0, [sp, #32]
   33e14:	ldr	r0, [sp, #52]	; 0x34
   33e18:	add	r4, r6, #96	; 0x60
   33e1c:	cmp	r0, #0
   33e20:	bne	33e98 <__flatcc_fb_build_schema@@Base+0xdc4>
   33e24:	ldr	r0, [sp, #24]
   33e28:	ldrd	r0, [r0]
   33e2c:	subs	r0, r7, r0
   33e30:	sbcs	r0, sl, r1
   33e34:	bcs	33e64 <__flatcc_fb_build_schema@@Base+0xd90>
   33e38:	mov	r0, #0
   33e3c:	str	r0, [sp, #52]	; 0x34
   33e40:	ldr	r0, [sp, #32]
   33e44:	cmp	r0, #0
   33e48:	bne	33e90 <__flatcc_fb_build_schema@@Base+0xdbc>
   33e4c:	uxth	r0, r7
   33e50:	mov	r1, #0
   33e54:	mov	r2, #0
   33e58:	str	r1, [sp, #52]	; 0x34
   33e5c:	stm	r4, {r0, r2}
   33e60:	b	33e90 <__flatcc_fb_build_schema@@Base+0xdbc>
   33e64:	mov	r0, #0
   33e68:	ldr	r1, [r6, #4]
   33e6c:	mov	r3, #0
   33e70:	str	r0, [sp]
   33e74:	str	r0, [sp, #4]
   33e78:	mov	r0, r9
   33e7c:	ldr	r2, [pc, #4064]	; 34e64 <__flatcc_fb_build_schema@@Base+0x1d90>
   33e80:	add	r2, pc, r2
   33e84:	bl	29ee4 <__flatcc_error_report@@Base>
   33e88:	mov	r0, #1
   33e8c:	str	r0, [sp, #52]	; 0x34
   33e90:	adds	r7, r7, #1
   33e94:	adc	sl, sl, #0
   33e98:	ldrh	r0, [r6, #24]
   33e9c:	sub	r0, r0, #7
   33ea0:	cmp	r0, #5
   33ea4:	bhi	33b5c <__flatcc_fb_build_schema@@Base+0xa88>
   33ea8:	str	sl, [sp, #56]	; 0x38
   33eac:	add	r1, pc, #8
   33eb0:	add	sl, r6, #48	; 0x30
   33eb4:	ldr	r0, [r1, r0, lsl #2]
   33eb8:	add	pc, r1, r0
   33ebc:	andeq	r0, r0, r8, lsl r0
   33ec0:	andeq	r0, r0, r0, ror r1
   33ec4:	andeq	r0, r0, ip, lsl #2
   33ec8:	andeq	r0, r0, r8, lsr r1
   33ecc:	andeq	r0, r0, r4, rrx
   33ed0:	andeq	r0, r0, r4, asr #4
   33ed4:	mov	r5, #0
   33ed8:	ldr	r0, [r6, #16]
   33edc:	str	r5, [sl, #44]	; 0x2c
   33ee0:	ldr	r1, [pc, #4092]	; 34ee4 <__flatcc_fb_build_schema@@Base+0x1e10>
   33ee4:	add	r1, pc, r1
   33ee8:	ldr	r0, [r1, r0, lsl #2]
   33eec:	str	r0, [sl, #40]	; 0x28
   33ef0:	strh	r0, [r6, #74]	; 0x4a
   33ef4:	ldrh	r0, [r6, #56]	; 0x38
   33ef8:	cmp	r0, #0
   33efc:	beq	341d8 <__flatcc_fb_build_schema@@Base+0x1104>
   33f00:	mov	r8, #0
   33f04:	ldr	r1, [r6, #4]
   33f08:	mov	r0, r9
   33f0c:	str	r8, [sp]
   33f10:	str	r8, [sp, #4]
   33f14:	ldr	r2, [pc, #4044]	; 34ee8 <__flatcc_fb_build_schema@@Base+0x1e14>
   33f18:	add	r2, pc, r2
   33f1c:	b	346bc <__flatcc_fb_build_schema@@Base+0x15e8>
   33f20:	ldr	r0, [sp, #36]	; 0x24
   33f24:	ldr	r2, [r6, #16]
   33f28:	mov	r3, #0
   33f2c:	ldr	r1, [r0, #12]
   33f30:	mov	r0, r9
   33f34:	bl	361a0 <__flatcc_fb_build_schema@@Base+0x30cc>
   33f38:	cmp	r0, #0
   33f3c:	beq	341b0 <__flatcc_fb_build_schema@@Base+0x10dc>
   33f40:	mov	r5, r0
   33f44:	ldrh	r0, [r0, #8]
   33f48:	cmp	r0, #4
   33f4c:	bhi	3453c <__flatcc_fb_build_schema@@Base+0x1468>
   33f50:	cmp	r0, #2
   33f54:	beq	3453c <__flatcc_fb_build_schema@@Base+0x1468>
   33f58:	ldrh	r0, [r6, #56]	; 0x38
   33f5c:	cmp	r0, #0
   33f60:	bne	346a0 <__flatcc_fb_build_schema@@Base+0x15cc>
   33f64:	mov	r0, #15
   33f68:	str	r5, [r6, #16]
   33f6c:	mov	ip, #0
   33f70:	strh	r0, [r6, #24]
   33f74:	ldrd	r0, [r5, #112]	; 0x70
   33f78:	strd	r0, [sl, #40]	; 0x28
   33f7c:	ldrh	r0, [r5, #104]	; 0x68
   33f80:	strh	r0, [r6, #74]	; 0x4a
   33f84:	ldr	r0, [sp, #52]	; 0x34
   33f88:	cmp	r0, #0
   33f8c:	bne	341e8 <__flatcc_fb_build_schema@@Base+0x1114>
   33f90:	ldrh	r0, [r5, #8]
   33f94:	ldr	r2, [sp, #40]	; 0x28
   33f98:	ldr	sl, [sp, #56]	; 0x38
   33f9c:	cmp	r0, #4
   33fa0:	bne	341f0 <__flatcc_fb_build_schema@@Base+0x111c>
   33fa4:	ldr	r0, [sp, #32]
   33fa8:	mov	ip, #0
   33fac:	cmp	r0, #0
   33fb0:	uxtheq	r0, r7
   33fb4:	moveq	r1, #0
   33fb8:	strdeq	r0, [r4]
   33fbc:	adds	r7, r7, #1
   33fc0:	adc	sl, sl, #0
   33fc4:	b	34204 <__flatcc_fb_build_schema@@Base+0x1130>
   33fc8:	ldrh	r0, [r6, #56]	; 0x38
   33fcc:	cmp	r0, #0
   33fd0:	beq	341d4 <__flatcc_fb_build_schema@@Base+0x1100>
   33fd4:	mov	r8, #0
   33fd8:	ldr	r1, [r6, #4]
   33fdc:	mov	r0, r9
   33fe0:	str	r8, [sp]
   33fe4:	str	r8, [sp, #4]
   33fe8:	ldr	r2, [pc, #4088]	; 34fe8 <__flatcc_fb_build_schema@@Base+0x1f14>
   33fec:	add	r2, pc, r2
   33ff0:	b	3401c <__flatcc_fb_build_schema@@Base+0xf48>
   33ff4:	ldrh	r0, [r6, #56]	; 0x38
   33ff8:	cmp	r0, #0
   33ffc:	beq	341e0 <__flatcc_fb_build_schema@@Base+0x110c>
   34000:	mov	r8, #0
   34004:	ldr	r1, [r6, #4]
   34008:	mov	r0, r9
   3400c:	str	r8, [sp]
   34010:	str	r8, [sp, #4]
   34014:	ldr	r2, [pc, #4088]	; 35014 <__flatcc_fb_build_schema@@Base+0x1f40>
   34018:	add	r2, pc, r2
   3401c:	mov	r3, #0
   34020:	bl	29ee4 <__flatcc_error_report@@Base>
   34024:	mov	r0, #1
   34028:	b	341a0 <__flatcc_fb_build_schema@@Base+0x10cc>
   3402c:	ldrh	r0, [r6, #56]	; 0x38
   34030:	cmp	r0, #13
   34034:	bne	340a0 <__flatcc_fb_build_schema@@Base+0xfcc>
   34038:	ldr	r0, [sp, #36]	; 0x24
   3403c:	ldr	r2, [sl]
   34040:	ldr	r1, [r0, #12]
   34044:	mov	r0, #0
   34048:	cmp	r2, #0
   3404c:	str	r0, [fp, #-36]	; 0xffffffdc
   34050:	beq	35078 <__flatcc_fb_build_schema@@Base+0x1fa4>
   34054:	mov	r0, r9
   34058:	sub	r3, fp, #36	; 0x24
   3405c:	bl	361a0 <__flatcc_fb_build_schema@@Base+0x30cc>
   34060:	cmp	r0, #0
   34064:	beq	34180 <__flatcc_fb_build_schema@@Base+0x10ac>
   34068:	ldrh	r1, [r0, #8]
   3406c:	cmp	r1, #3
   34070:	bne	34180 <__flatcc_fb_build_schema@@Base+0x10ac>
   34074:	ldr	r1, [fp, #-36]	; 0xffffffdc
   34078:	add	r0, r0, #56	; 0x38
   3407c:	ldr	r2, [r1, #4]
   34080:	ldm	r2, {r1, r2}
   34084:	bl	27d88 <fb_symbol_table_find@@Base>
   34088:	cmp	r0, #0
   3408c:	beq	34180 <__flatcc_fb_build_schema@@Base+0x10ac>
   34090:	add	r0, r0, #48	; 0x30
   34094:	vld1.64	{d16-d17}, [r0]
   34098:	vst1.64	{d16-d17}, [sl]
   3409c:	ldrh	r0, [r6, #56]	; 0x38
   340a0:	cmp	r0, #0
   340a4:	bne	340bc <__flatcc_fb_build_schema@@Base+0xfe8>
   340a8:	mov	r0, #5
   340ac:	strh	r0, [r6, #56]	; 0x38
   340b0:	mov	r0, #0
   340b4:	str	r0, [sl]
   340b8:	str	r0, [sl, #4]
   340bc:	ldr	r2, [r6, #16]
   340c0:	mov	r0, r9
   340c4:	mov	r1, r6
   340c8:	mov	r3, sl
   340cc:	bl	36358 <__flatcc_fb_coerce_scalar_type@@Base>
   340d0:	cmp	r0, #0
   340d4:	bne	34198 <__flatcc_fb_build_schema@@Base+0x10c4>
   340d8:	mov	r5, #0
   340dc:	ldr	r0, [r6, #16]
   340e0:	mov	ip, #1
   340e4:	str	r5, [sl, #44]	; 0x2c
   340e8:	ldr	r1, [pc, #4028]	; 350ac <__flatcc_fb_build_schema@@Base+0x1fd8>
   340ec:	add	r1, pc, r1
   340f0:	ldr	r0, [r1, r0, lsl #2]
   340f4:	str	r0, [sl, #40]	; 0x28
   340f8:	strh	r0, [r6, #74]	; 0x4a
   340fc:	b	341e8 <__flatcc_fb_build_schema@@Base+0x1114>
   34100:	ldr	r0, [sp, #36]	; 0x24
   34104:	ldr	r2, [r6, #16]
   34108:	mov	r3, #0
   3410c:	str	r4, [sp, #44]	; 0x2c
   34110:	ldr	r1, [r0, #12]
   34114:	mov	r0, r9
   34118:	bl	361a0 <__flatcc_fb_build_schema@@Base+0x30cc>
   3411c:	cmp	r0, #0
   34120:	beq	34238 <__flatcc_fb_build_schema@@Base+0x1164>
   34124:	mov	r5, r0
   34128:	ldrh	r0, [r0, #8]
   3412c:	cmp	r0, #4
   34130:	bhi	34780 <__flatcc_fb_build_schema@@Base+0x16ac>
   34134:	add	r1, pc, #12
   34138:	ldr	r4, [sp, #44]	; 0x2c
   3413c:	mov	ip, #0
   34140:	ldr	r0, [r1, r0, lsl #2]
   34144:	add	pc, r1, r0
   34148:	andeq	r0, r0, r8, asr r4
   3414c:	andeq	r0, r0, r8, asr r4
   34150:	andeq	r0, r0, r4, lsl r0
   34154:	andeq	r0, r0, r0, lsr #8
   34158:	andeq	r0, r0, r8, asr r4
   3415c:	mov	r8, #0
   34160:	ldr	r3, [r5, #4]
   34164:	ldr	r1, [r6, #4]
   34168:	mov	r0, r9
   3416c:	str	r8, [sp]
   34170:	str	r8, [sp, #4]
   34174:	ldr	r2, [pc, #3904]	; 350bc <__flatcc_fb_build_schema@@Base+0x1fe8>
   34178:	add	r2, pc, r2
   3417c:	b	346c0 <__flatcc_fb_build_schema@@Base+0x15ec>
   34180:	ldr	r1, [r6, #48]	; 0x30
   34184:	ldr	r2, [pc, #4080]	; 3517c <__flatcc_fb_build_schema@@Base+0x20a8>
   34188:	mov	r0, r9
   3418c:	mov	r3, r6
   34190:	add	r2, pc, r2
   34194:	bl	2a150 <error_ref_sym@@Base>
   34198:	mov	r0, #1
   3419c:	mov	r8, #0
   341a0:	strh	r0, [r6, #24]
   341a4:	ldr	r4, [sp, #36]	; 0x24
   341a8:	ldr	sl, [sp, #56]	; 0x38
   341ac:	b	33b8c <__flatcc_fb_build_schema@@Base+0xab8>
   341b0:	ldr	r1, [r6, #16]
   341b4:	ldr	r2, [pc, #3864]	; 350d4 <__flatcc_fb_build_schema@@Base+0x2000>
   341b8:	mov	r0, r9
   341bc:	add	r2, pc, r2
   341c0:	mov	r3, r6
   341c4:	bl	2a150 <error_ref_sym@@Base>
   341c8:	mov	r0, #1
   341cc:	strh	r0, [r6, #24]
   341d0:	b	34260 <__flatcc_fb_build_schema@@Base+0x118c>
   341d4:	mov	r5, #0
   341d8:	mov	ip, #0
   341dc:	b	341e8 <__flatcc_fb_build_schema@@Base+0x1114>
   341e0:	ldr	ip, [r9, #164]	; 0xa4
   341e4:	mov	r5, #0
   341e8:	ldr	r2, [sp, #40]	; 0x28
   341ec:	ldr	sl, [sp, #56]	; 0x38
   341f0:	ldr	r0, [sp, #52]	; 0x34
   341f4:	cmp	r0, #0
   341f8:	beq	34204 <__flatcc_fb_build_schema@@Base+0x1130>
   341fc:	mov	r8, #0
   34200:	b	342b8 <__flatcc_fb_build_schema@@Base+0x11e4>
   34204:	cmp	r8, #0
   34208:	beq	34270 <__flatcc_fb_build_schema@@Base+0x119c>
   3420c:	ldr	r0, [sp, #32]
   34210:	cmp	r0, #0
   34214:	bne	34270 <__flatcc_fb_build_schema@@Base+0x119c>
   34218:	ldr	r1, [r8, #4]
   3421c:	mov	r8, #0
   34220:	mov	r0, r9
   34224:	str	r8, [sp]
   34228:	str	r8, [sp, #4]
   3422c:	ldr	r2, [pc, #3756]	; 350e0 <__flatcc_fb_build_schema@@Base+0x200c>
   34230:	add	r2, pc, r2
   34234:	b	342a0 <__flatcc_fb_build_schema@@Base+0x11cc>
   34238:	ldr	r1, [r6, #16]
   3423c:	ldr	r2, [pc, #3692]	; 350b0 <__flatcc_fb_build_schema@@Base+0x1fdc>
   34240:	mov	r0, r9
   34244:	mov	r3, r6
   34248:	add	r2, pc, r2
   3424c:	bl	2a150 <error_ref_sym@@Base>
   34250:	mov	r1, #1
   34254:	mov	r0, #1
   34258:	str	r0, [sp, #52]	; 0x34
   3425c:	strh	r1, [r6, #24]
   34260:	mov	r8, #0
   34264:	b	346cc <__flatcc_fb_build_schema@@Base+0x15f8>
   34268:	andeq	r4, r2, ip, asr #1
   3426c:	andeq	r4, r2, ip, asr #1
   34270:	cmp	r8, #0
   34274:	bne	34464 <__flatcc_fb_build_schema@@Base+0x1390>
   34278:	ldr	r0, [sp, #32]
   3427c:	cmp	r0, #0
   34280:	beq	34464 <__flatcc_fb_build_schema@@Base+0x1390>
   34284:	mov	r8, #0
   34288:	ldr	r1, [r6, #4]
   3428c:	mov	r0, r9
   34290:	str	r8, [sp]
   34294:	str	r8, [sp, #4]
   34298:	ldr	r2, [pc, #3652]	; 350e4 <__flatcc_fb_build_schema@@Base+0x2010>
   3429c:	add	r2, pc, r2
   342a0:	mov	r3, #0
   342a4:	mov	r4, ip
   342a8:	bl	29ee4 <__flatcc_error_report@@Base>
   342ac:	mov	r0, #1
   342b0:	mov	ip, r4
   342b4:	str	r0, [sp, #52]	; 0x34
   342b8:	ldr	r4, [sp, #36]	; 0x24
   342bc:	ldr	r5, [pc, #3608]	; 350dc <__flatcc_fb_build_schema@@Base+0x2008>
   342c0:	add	r5, pc, r5
   342c4:	ldrb	r0, [r6, #72]	; 0x48
   342c8:	tst	r0, #128	; 0x80
   342cc:	beq	33b8c <__flatcc_fb_build_schema@@Base+0xab8>
   342d0:	ldr	r0, [sp, #20]
   342d4:	cmp	ip, #0
   342d8:	add	r0, r0, #1
   342dc:	str	r0, [sp, #20]
   342e0:	bne	33b8c <__flatcc_fb_build_schema@@Base+0xab8>
   342e4:	ldr	r1, [r6, #4]
   342e8:	str	r8, [sp]
   342ec:	str	r8, [sp, #4]
   342f0:	mov	r0, r9
   342f4:	mov	r3, #0
   342f8:	ldr	r2, [pc, #3616]	; 35120 <__flatcc_fb_build_schema@@Base+0x204c>
   342fc:	add	r2, pc, r2
   34300:	b	33bc8 <__flatcc_fb_build_schema@@Base+0xaf4>
   34304:	andeq	r7, r3, r8, asr #23
   34308:	mov	r4, r1
   3430c:	sub	r0, r3, r2
   34310:	cmp	r8, #0
   34314:	str	r0, [sp, #12]
   34318:	beq	34324 <__flatcc_fb_build_schema@@Base+0x1250>
   3431c:	cmp	r2, #0
   34320:	beq	34370 <__flatcc_fb_build_schema@@Base+0x129c>
   34324:	ldr	r0, [r9, #412]	; 0x19c
   34328:	cmp	r0, #0
   3432c:	beq	34430 <__flatcc_fb_build_schema@@Base+0x135c>
   34330:	cmp	r2, #0
   34334:	moveq	r1, r2
   34338:	bl	28760 <fb_scope_table_find@@Base>
   3433c:	cmp	r0, #0
   34340:	beq	34430 <__flatcc_fb_build_schema@@Base+0x135c>
   34344:	ldr	r2, [sp, #12]
   34348:	add	r0, r0, #4
   3434c:	mov	r1, r4
   34350:	bl	27d88 <fb_symbol_table_find@@Base>
   34354:	mov	r5, r0
   34358:	cmp	r0, #0
   3435c:	bne	347ac <__flatcc_fb_build_schema@@Base+0x16d8>
   34360:	b	34430 <__flatcc_fb_build_schema@@Base+0x135c>
   34364:	cmp	r0, #0
   34368:	mov	r8, r0
   3436c:	beq	34430 <__flatcc_fb_build_schema@@Base+0x135c>
   34370:	ldr	r2, [sp, #12]
   34374:	add	r0, r8, #4
   34378:	mov	r1, r4
   3437c:	bl	27d88 <fb_symbol_table_find@@Base>
   34380:	cmp	r0, #0
   34384:	beq	343ac <__flatcc_fb_build_schema@@Base+0x12d8>
   34388:	mov	r5, r0
   3438c:	ldrh	r0, [r0, #8]
   34390:	cmp	r0, #4
   34394:	bhi	343ac <__flatcc_fb_build_schema@@Base+0x12d8>
   34398:	ldr	r1, [r5, #16]
   3439c:	ldr	r0, [sp, #16]
   343a0:	bl	276f8 <ptr_set_find_item@@Base>
   343a4:	cmp	r0, #0
   343a8:	bne	347ac <__flatcc_fb_build_schema@@Base+0x16d8>
   343ac:	ldr	r0, [r8]
   343b0:	cmp	r0, #0
   343b4:	beq	34430 <__flatcc_fb_build_schema@@Base+0x135c>
   343b8:	mov	r7, #0
   343bc:	ldr	r0, [r0]
   343c0:	mov	r1, r7
   343c4:	add	r7, r7, #1
   343c8:	cmp	r0, #0
   343cc:	bne	343bc <__flatcc_fb_build_schema@@Base+0x12e8>
   343d0:	rsb	r5, r1, #0
   343d4:	b	343fc <__flatcc_fb_build_schema@@Base+0x1328>
   343d8:	andeq	r4, r2, r5, lsl #12
   343dc:	andeq	r4, r2, lr, lsl #11
   343e0:	ldr	r1, [r8]
   343e4:	mov	r2, r5
   343e8:	bl	28760 <fb_scope_table_find@@Base>
   343ec:	sub	r7, r7, #1
   343f0:	add	r5, r5, #1
   343f4:	cmp	r0, #0
   343f8:	bne	34364 <__flatcc_fb_build_schema@@Base+0x1290>
   343fc:	ldr	r0, [r9, #412]	; 0x19c
   34400:	cmp	r7, #2
   34404:	blt	34418 <__flatcc_fb_build_schema@@Base+0x1344>
   34408:	cmp	r0, #0
   3440c:	bne	343e0 <__flatcc_fb_build_schema@@Base+0x130c>
   34410:	mov	r0, #0
   34414:	b	343ec <__flatcc_fb_build_schema@@Base+0x1318>
   34418:	cmp	r0, #0
   3441c:	beq	34430 <__flatcc_fb_build_schema@@Base+0x135c>
   34420:	mov	r1, #0
   34424:	mov	r2, #0
   34428:	bl	28760 <fb_scope_table_find@@Base>
   3442c:	b	34364 <__flatcc_fb_build_schema@@Base+0x1290>
   34430:	ldr	r0, [sl, #8]
   34434:	ldr	r1, [sl, #4]
   34438:	ldr	r2, [sl, #12]
   3443c:	mov	r3, #0
   34440:	stm	sp, {r0, r2}
   34444:	mov	r0, r9
   34448:	ldr	r2, [pc, #3148]	; 3509c <__flatcc_fb_build_schema@@Base+0x1fc8>
   3444c:	add	r2, pc, r2
   34450:	bl	29ee4 <__flatcc_error_report@@Base>
   34454:	mov	r8, #0
   34458:	ldr	r5, [pc, #3144]	; 350a8 <__flatcc_fb_build_schema@@Base+0x1fd4>
   3445c:	add	r5, pc, r5
   34460:	b	33cd4 <__flatcc_fb_build_schema@@Base+0xc00>
   34464:	cmp	r8, #0
   34468:	beq	344cc <__flatcc_fb_build_schema@@Base+0x13f8>
   3446c:	ldrh	r0, [r8, #16]
   34470:	cmp	r0, #5
   34474:	bne	34830 <__flatcc_fb_build_schema@@Base+0x175c>
   34478:	ldr	r2, [sp, #24]
   3447c:	ldrd	r0, [r8, #8]
   34480:	ldrd	r2, [r2]
   34484:	subs	r2, r0, r2
   34488:	sbcs	r1, r1, r3
   3448c:	bcs	34880 <__flatcc_fb_build_schema@@Base+0x17ac>
   34490:	uxth	r0, r0
   34494:	mov	r1, #0
   34498:	strd	r0, [r4]
   3449c:	ldr	r2, [sp, #28]
   344a0:	ldr	r3, [sp, #48]	; 0x30
   344a4:	subs	r1, r2, r0
   344a8:	sbcs	r1, r3, #0
   344ac:	mov	r1, #0
   344b0:	movwcc	r1, #1
   344b4:	cmp	r1, #0
   344b8:	movne	r2, r0
   344bc:	movwne	r3, #0
   344c0:	str	r2, [sp, #28]
   344c4:	ldr	r2, [sp, #40]	; 0x28
   344c8:	str	r3, [sp, #48]	; 0x30
   344cc:	mov	r0, #0
   344d0:	str	r0, [sp, #52]	; 0x34
   344d4:	ldr	r0, [sp, #32]
   344d8:	cmp	r0, #0
   344dc:	beq	341fc <__flatcc_fb_build_schema@@Base+0x1128>
   344e0:	ldr	r0, [r4]
   344e4:	ldrb	r1, [r2, r0]
   344e8:	cmp	r1, #0
   344ec:	beq	34904 <__flatcc_fb_build_schema@@Base+0x1830>
   344f0:	cmp	r1, #2
   344f4:	str	ip, [sp, #12]
   344f8:	bne	3491c <__flatcc_fb_build_schema@@Base+0x1848>
   344fc:	ldr	r1, [r8, #4]
   34500:	mov	r8, #0
   34504:	mov	r0, r9
   34508:	mov	r3, #0
   3450c:	str	r8, [sp]
   34510:	str	r8, [sp, #4]
   34514:	ldr	r2, [pc, #3036]	; 350f8 <__flatcc_fb_build_schema@@Base+0x2024>
   34518:	add	r2, pc, r2
   3451c:	bl	29ee4 <__flatcc_error_report@@Base>
   34520:	mov	r0, #1
   34524:	ldr	r4, [sp, #36]	; 0x24
   34528:	str	r0, [sp, #52]	; 0x34
   3452c:	ldr	r5, [pc, #3016]	; 350fc <__flatcc_fb_build_schema@@Base+0x2028>
   34530:	add	r5, pc, r5
   34534:	b	34a64 <__flatcc_fb_build_schema@@Base+0x1990>
   34538:	muleq	r2, ip, r4
   3453c:	mov	r8, #0
   34540:	ldr	r1, [r6, #4]
   34544:	ldr	r3, [r6, #16]
   34548:	mov	r0, r9
   3454c:	str	r8, [sp]
   34550:	str	r8, [sp, #4]
   34554:	ldr	r2, [pc, #2940]	; 350d8 <__flatcc_fb_build_schema@@Base+0x2004>
   34558:	add	r2, pc, r2
   3455c:	b	346c0 <__flatcc_fb_build_schema@@Base+0x15ec>
   34560:	andeq	r4, r2, ip, lsl r5
   34564:	andeq	r4, r2, fp, ror #7
   34568:	ldrb	r0, [r6, #73]	; 0x49
   3456c:	tst	r0, #1
   34570:	beq	3459c <__flatcc_fb_build_schema@@Base+0x14c8>
   34574:	mov	r0, #0
   34578:	ldr	r1, [r6, #4]
   3457c:	mov	r3, #0
   34580:	str	r0, [sp]
   34584:	str	r0, [sp, #4]
   34588:	mov	r0, r9
   3458c:	ldr	r2, [pc, #2848]	; 350b4 <__flatcc_fb_build_schema@@Base+0x1fe0>
   34590:	add	r2, pc, r2
   34594:	bl	29ee4 <__flatcc_error_report@@Base>
   34598:	ldr	r4, [sp, #44]	; 0x2c
   3459c:	ldr	ip, [r9, #148]	; 0x94
   345a0:	mov	r0, #14
   345a4:	str	r5, [r6, #16]
   345a8:	strh	r0, [r6, #24]
   345ac:	ldrd	r0, [r5, #112]	; 0x70
   345b0:	strd	r0, [sl, #40]	; 0x28
   345b4:	ldrh	r0, [r5, #104]	; 0x68
   345b8:	ldr	r1, [sp, #52]	; 0x34
   345bc:	ldr	r2, [sp, #40]	; 0x28
   345c0:	strh	r0, [r6, #74]	; 0x4a
   345c4:	cmp	r1, #0
   345c8:	ldrh	r0, [r5, #8]
   345cc:	cmpeq	r0, #4
   345d0:	bne	34604 <__flatcc_fb_build_schema@@Base+0x1530>
   345d4:	ldr	r1, [sp, #32]
   345d8:	cmp	r1, #0
   345dc:	bne	345f4 <__flatcc_fb_build_schema@@Base+0x1520>
   345e0:	uxth	r2, r7
   345e4:	mov	r1, #0
   345e8:	str	r2, [r4]
   345ec:	str	r1, [r4, #4]
   345f0:	ldr	r2, [sp, #40]	; 0x28
   345f4:	ldr	r1, [sp, #56]	; 0x38
   345f8:	adds	r7, r7, #1
   345fc:	adc	r1, r1, #0
   34600:	str	r1, [sp, #56]	; 0x38
   34604:	ldrh	r1, [r6, #56]	; 0x38
   34608:	cmp	r1, #0
   3460c:	beq	346f4 <__flatcc_fb_build_schema@@Base+0x1620>
   34610:	cmp	r0, #3
   34614:	bne	346a0 <__flatcc_fb_build_schema@@Base+0x15cc>
   34618:	cmp	r1, #13
   3461c:	str	ip, [sp, #12]
   34620:	bne	347dc <__flatcc_fb_build_schema@@Base+0x1708>
   34624:	ldr	r0, [sp, #36]	; 0x24
   34628:	ldr	r4, [sl]
   3462c:	ldr	r1, [r0, #12]
   34630:	mov	r0, #0
   34634:	cmp	r4, #0
   34638:	str	r0, [fp, #-36]	; 0xffffffdc
   3463c:	beq	35078 <__flatcc_fb_build_schema@@Base+0x1fa4>
   34640:	mov	r0, r9
   34644:	mov	r2, r4
   34648:	sub	r3, fp, #36	; 0x24
   3464c:	bl	361a0 <__flatcc_fb_build_schema@@Base+0x30cc>
   34650:	cmp	r0, #0
   34654:	beq	34664 <__flatcc_fb_build_schema@@Base+0x1590>
   34658:	ldrh	r1, [r0, #8]
   3465c:	cmp	r1, #3
   34660:	beq	34674 <__flatcc_fb_build_schema@@Base+0x15a0>
   34664:	ldr	r0, [r4]
   34668:	cmp	r0, #0
   3466c:	mov	r0, r5
   34670:	bne	34864 <__flatcc_fb_build_schema@@Base+0x1790>
   34674:	ldr	r1, [fp, #-36]	; 0xffffffdc
   34678:	add	r0, r0, #56	; 0x38
   3467c:	ldr	r2, [r1, #4]
   34680:	ldm	r2, {r1, r2}
   34684:	bl	27d88 <fb_symbol_table_find@@Base>
   34688:	cmp	r0, #0
   3468c:	beq	34864 <__flatcc_fb_build_schema@@Base+0x1790>
   34690:	add	r0, r0, #48	; 0x30
   34694:	vld1.64	{d16-d17}, [r0]
   34698:	vst1.64	{d16-d17}, [sl]
   3469c:	b	3481c <__flatcc_fb_build_schema@@Base+0x1748>
   346a0:	mov	r8, #0
   346a4:	ldr	r1, [r6, #4]
   346a8:	mov	r0, r9
   346ac:	str	r8, [sp]
   346b0:	str	r8, [sp, #4]
   346b4:	ldr	r2, [pc, #2556]	; 350b8 <__flatcc_fb_build_schema@@Base+0x1fe4>
   346b8:	add	r2, pc, r2
   346bc:	mov	r3, #0
   346c0:	bl	29ee4 <__flatcc_error_report@@Base>
   346c4:	mov	r0, #1
   346c8:	strh	r0, [r6, #24]
   346cc:	ldr	r4, [sp, #36]	; 0x24
   346d0:	ldr	r5, [pc, #2544]	; 350c8 <__flatcc_fb_build_schema@@Base+0x1ff4>
   346d4:	ldr	sl, [sp, #56]	; 0x38
   346d8:	add	r5, pc, r5
   346dc:	b	33b8c <__flatcc_fb_build_schema@@Base+0xab8>
   346e0:			; <UNDEFINED> instruction: 0x000242ba
   346e4:	andeq	r4, r2, r3, lsr r3
   346e8:	andeq	r4, r2, sl, lsl r4
   346ec:	andeq	r4, r2, r9, ror #8
   346f0:	andeq	r4, r2, lr, asr #4
   346f4:	cmp	r0, #3
   346f8:	bne	341ec <__flatcc_fb_build_schema@@Base+0x1118>
   346fc:	mov	r0, #5
   34700:	mov	r1, r5
   34704:	mov	r3, sl
   34708:	str	ip, [sp, #12]
   3470c:	strh	r0, [r6, #56]	; 0x38
   34710:	mov	r0, #0
   34714:	str	r0, [sl]
   34718:	str	r0, [sl, #4]
   3471c:	mov	r0, r9
   34720:	ldr	r2, [r5, #40]	; 0x28
   34724:	bl	36358 <__flatcc_fb_coerce_scalar_type@@Base>
   34728:	cmp	r0, #0
   3472c:	bne	341c8 <__flatcc_fb_build_schema@@Base+0x10f4>
   34730:	ldr	r0, [r9, #212]	; 0xd4
   34734:	cmp	r0, #0
   34738:	beq	3481c <__flatcc_fb_build_schema@@Base+0x1748>
   3473c:	ldr	r0, [r6, #16]
   34740:	mov	r1, sl
   34744:	add	r0, r0, #72	; 0x48
   34748:	bl	3d6a4 <fb_value_set_find_item@@Base>
   3474c:	cmp	r0, #0
   34750:	bne	3481c <__flatcc_fb_build_schema@@Base+0x1748>
   34754:	mov	r8, #0
   34758:	ldr	r3, [r5, #4]
   3475c:	ldr	r1, [r6, #4]
   34760:	mov	r0, r9
   34764:	str	r8, [sp]
   34768:	str	r8, [sp, #4]
   3476c:	ldr	r2, [pc, #2396]	; 350d0 <__flatcc_fb_build_schema@@Base+0x1ffc>
   34770:	add	r2, pc, r2
   34774:	b	346c0 <__flatcc_fb_build_schema@@Base+0x15ec>
   34778:	andeq	r4, r2, r9, asr r3
   3477c:	andeq	r4, r2, sl, ror #6
   34780:	mov	r8, #0
   34784:	ldr	r3, [r5, #4]
   34788:	ldr	r1, [r6, #4]
   3478c:	mov	r0, r9
   34790:	str	r8, [sp]
   34794:	str	r8, [sp, #4]
   34798:	ldr	r2, [pc, #2336]	; 350c0 <__flatcc_fb_build_schema@@Base+0x1fec>
   3479c:	add	r2, pc, r2
   347a0:	b	346c0 <__flatcc_fb_build_schema@@Base+0x15ec>
   347a4:	ldrdeq	r4, [r2], -r5
   347a8:	ldrdeq	r4, [r2], -r6
   347ac:	ldrh	r0, [r5, #8]
   347b0:	mov	r8, #0
   347b4:	cmp	r0, #0
   347b8:	beq	347d0 <__flatcc_fb_build_schema@@Base+0x16fc>
   347bc:	ldr	r1, [r9, #176]	; 0xb0
   347c0:	cmp	r1, #0
   347c4:	beq	348bc <__flatcc_fb_build_schema@@Base+0x17e8>
   347c8:	cmp	r0, #1
   347cc:	bne	348e0 <__flatcc_fb_build_schema@@Base+0x180c>
   347d0:	str	r5, [r6, #104]	; 0x68
   347d4:	b	34458 <__flatcc_fb_build_schema@@Base+0x1384>
   347d8:	muleq	r2, lr, fp
   347dc:	ldr	r2, [r5, #40]	; 0x28
   347e0:	mov	r0, r9
   347e4:	mov	r1, r6
   347e8:	mov	r3, sl
   347ec:	bl	36358 <__flatcc_fb_coerce_scalar_type@@Base>
   347f0:	cmp	r0, #0
   347f4:	bne	341c8 <__flatcc_fb_build_schema@@Base+0x10f4>
   347f8:	ldr	r0, [r9, #212]	; 0xd4
   347fc:	cmp	r0, #0
   34800:	beq	3481c <__flatcc_fb_build_schema@@Base+0x1748>
   34804:	ldr	r0, [r6, #16]
   34808:	mov	r1, sl
   3480c:	add	r0, r0, #72	; 0x48
   34810:	bl	3d6a4 <fb_value_set_find_item@@Base>
   34814:	cmp	r0, #0
   34818:	beq	349e8 <__flatcc_fb_build_schema@@Base+0x1914>
   3481c:	ldr	r2, [sp, #40]	; 0x28
   34820:	ldr	sl, [sp, #56]	; 0x38
   34824:	ldr	ip, [sp, #12]
   34828:	ldr	r4, [sp, #44]	; 0x2c
   3482c:	b	341f0 <__flatcc_fb_build_schema@@Base+0x111c>
   34830:	str	ip, [sp, #12]
   34834:	ldr	r1, [r8, #4]
   34838:	cmp	r0, #4
   3483c:	mov	r8, #0
   34840:	ldr	r5, [pc, #2212]	; 350ec <__flatcc_fb_build_schema@@Base+0x2018>
   34844:	add	r5, pc, r5
   34848:	bne	348a4 <__flatcc_fb_build_schema@@Base+0x17d0>
   3484c:	str	r8, [sp]
   34850:	str	r8, [sp, #4]
   34854:	mov	r0, r9
   34858:	ldr	r2, [pc, #2192]	; 350f0 <__flatcc_fb_build_schema@@Base+0x201c>
   3485c:	add	r2, pc, r2
   34860:	b	34a50 <__flatcc_fb_build_schema@@Base+0x197c>
   34864:	ldr	r1, [r6, #48]	; 0x30
   34868:	ldr	r2, [pc, #2132]	; 350c4 <__flatcc_fb_build_schema@@Base+0x1ff0>
   3486c:	mov	r0, r9
   34870:	add	r2, pc, r2
   34874:	b	341c0 <__flatcc_fb_build_schema@@Base+0x10ec>
   34878:	andeq	r4, r2, r3, asr #11
   3487c:	andeq	r4, r2, r5, asr #11
   34880:	mov	r8, #0
   34884:	ldr	r1, [r6, #4]
   34888:	mov	r0, r9
   3488c:	str	r8, [sp]
   34890:	str	r8, [sp, #4]
   34894:	ldr	r2, [pc, #2124]	; 350e8 <__flatcc_fb_build_schema@@Base+0x2014>
   34898:	add	r2, pc, r2
   3489c:	b	342a0 <__flatcc_fb_build_schema@@Base+0x11cc>
   348a0:	andeq	r4, r2, pc, lsl #11
   348a4:	str	r8, [sp]
   348a8:	str	r8, [sp, #4]
   348ac:	mov	r0, r9
   348b0:	ldr	r2, [pc, #2108]	; 350f4 <__flatcc_fb_build_schema@@Base+0x2020>
   348b4:	add	r2, pc, r2
   348b8:	b	34a50 <__flatcc_fb_build_schema@@Base+0x197c>
   348bc:	ldr	r3, [r5, #4]
   348c0:	ldr	r1, [sl, #4]
   348c4:	str	r8, [sp]
   348c8:	str	r8, [sp, #4]
   348cc:	mov	r0, r9
   348d0:	ldr	r2, [pc, #1992]	; 350a0 <__flatcc_fb_build_schema@@Base+0x1fcc>
   348d4:	add	r2, pc, r2
   348d8:	bl	29ee4 <__flatcc_error_report@@Base>
   348dc:	b	34458 <__flatcc_fb_build_schema@@Base+0x1384>
   348e0:	ldr	r3, [r5, #4]
   348e4:	ldr	r1, [sl, #4]
   348e8:	str	r8, [sp]
   348ec:	str	r8, [sp, #4]
   348f0:	mov	r0, r9
   348f4:	ldr	r2, [pc, #1960]	; 350a4 <__flatcc_fb_build_schema@@Base+0x1fd0>
   348f8:	add	r2, pc, r2
   348fc:	bl	29ee4 <__flatcc_error_report@@Base>
   34900:	b	34458 <__flatcc_fb_build_schema@@Base+0x1384>
   34904:	mov	r1, #1
   34908:	strb	r1, [r2, r0]
   3490c:	cmp	r5, #0
   34910:	bne	3494c <__flatcc_fb_build_schema@@Base+0x1878>
   34914:	b	341fc <__flatcc_fb_build_schema@@Base+0x1128>
   34918:	ldrdeq	r4, [r2], -lr
   3491c:	mov	r0, #0
   34920:	ldr	r1, [r8, #4]
   34924:	mov	r3, #0
   34928:	str	r0, [sp]
   3492c:	str	r0, [sp, #4]
   34930:	mov	r0, r9
   34934:	ldr	r2, [pc, #1988]	; 35100 <__flatcc_fb_build_schema@@Base+0x202c>
   34938:	add	r2, pc, r2
   3493c:	bl	29ee4 <__flatcc_error_report@@Base>
   34940:	ldr	ip, [sp, #12]
   34944:	cmp	r5, #0
   34948:	beq	341fc <__flatcc_fb_build_schema@@Base+0x1128>
   3494c:	ldrh	r0, [r5, #8]
   34950:	cmp	r0, #4
   34954:	bne	341fc <__flatcc_fb_build_schema@@Base+0x1128>
   34958:	str	ip, [sp, #12]
   3495c:	ldrh	r0, [r6, #24]
   34960:	ldrd	r2, [r4]
   34964:	ldr	r5, [pc, #1944]	; 35104 <__flatcc_fb_build_schema@@Base+0x2030>
   34968:	rsbs	r1, r2, #1
   3496c:	add	r5, pc, r5
   34970:	rscs	r1, r3, #0
   34974:	bcc	349a4 <__flatcc_fb_build_schema@@Base+0x18d0>
   34978:	ldr	r1, [r8, #4]
   3497c:	mov	r8, #0
   34980:	cmp	r0, #11
   34984:	str	r8, [sp]
   34988:	str	r8, [sp, #4]
   3498c:	ldr	r2, [pc, #1908]	; 35108 <__flatcc_fb_build_schema@@Base+0x2034>
   34990:	ldr	r0, [pc, #1908]	; 3510c <__flatcc_fb_build_schema@@Base+0x2038>
   34994:	add	r2, pc, r2
   34998:	add	r0, pc, r0
   3499c:	b	34a48 <__flatcc_fb_build_schema@@Base+0x1974>
   349a0:	andeq	r4, r2, lr, asr #27
   349a4:	sub	r1, r2, #1
   349a8:	ldr	r2, [sp, #40]	; 0x28
   349ac:	ldrb	r2, [r2, r1]
   349b0:	cmp	r2, #0
   349b4:	beq	34a0c <__flatcc_fb_build_schema@@Base+0x1938>
   349b8:	cmp	r2, #2
   349bc:	bne	34a24 <__flatcc_fb_build_schema@@Base+0x1950>
   349c0:	ldr	r1, [r8, #4]
   349c4:	mov	r8, #0
   349c8:	cmp	r0, #11
   349cc:	str	r8, [sp]
   349d0:	str	r8, [sp, #4]
   349d4:	ldr	r2, [pc, #1844]	; 35110 <__flatcc_fb_build_schema@@Base+0x203c>
   349d8:	ldr	r0, [pc, #1844]	; 35114 <__flatcc_fb_build_schema@@Base+0x2040>
   349dc:	add	r2, pc, r2
   349e0:	add	r0, pc, r0
   349e4:	b	34a48 <__flatcc_fb_build_schema@@Base+0x1974>
   349e8:	mov	r8, #0
   349ec:	ldr	r1, [r6, #4]
   349f0:	mov	r0, r9
   349f4:	str	r8, [sp]
   349f8:	str	r8, [sp, #4]
   349fc:	ldr	r2, [pc, #1736]	; 350cc <__flatcc_fb_build_schema@@Base+0x1ff8>
   34a00:	add	r2, pc, r2
   34a04:	b	346bc <__flatcc_fb_build_schema@@Base+0x15e8>
   34a08:	muleq	r2, r2, sp
   34a0c:	ldr	r2, [sp, #40]	; 0x28
   34a10:	mov	r0, #2
   34a14:	mov	r8, #0
   34a18:	strb	r0, [r2, r1]
   34a1c:	b	34a60 <__flatcc_fb_build_schema@@Base+0x198c>
   34a20:	muleq	r2, lr, sp
   34a24:	ldr	r1, [r8, #4]
   34a28:	mov	r8, #0
   34a2c:	cmp	r0, #11
   34a30:	str	r8, [sp]
   34a34:	str	r8, [sp, #4]
   34a38:	ldr	r2, [pc, #1752]	; 35118 <__flatcc_fb_build_schema@@Base+0x2044>
   34a3c:	ldr	r0, [pc, #1752]	; 3511c <__flatcc_fb_build_schema@@Base+0x2048>
   34a40:	add	r2, pc, r2
   34a44:	add	r0, pc, r0
   34a48:	moveq	r2, r0
   34a4c:	mov	r0, r9
   34a50:	mov	r3, #0
   34a54:	bl	29ee4 <__flatcc_error_report@@Base>
   34a58:	mov	r0, #1
   34a5c:	str	r0, [sp, #52]	; 0x34
   34a60:	ldr	r4, [sp, #36]	; 0x24
   34a64:	ldr	ip, [sp, #12]
   34a68:	b	342c4 <__flatcc_fb_build_schema@@Base+0x11f0>
   34a6c:	ldr	r1, [sp, #52]	; 0x34
   34a70:	ldr	r2, [sp, #20]
   34a74:	mov	r0, #0
   34a78:	cmp	r1, #0
   34a7c:	bne	34ad4 <__flatcc_fb_build_schema@@Base+0x1a00>
   34a80:	b	34ac0 <__flatcc_fb_build_schema@@Base+0x19ec>
   34a84:	andeq	r4, r2, r5, asr #27
   34a88:	andeq	r4, r2, fp, ror sp
   34a8c:			; <UNDEFINED> instruction: 0x00024db2
   34a90:	andeq	r4, r2, fp, ror #26
   34a94:	mov	r0, #0
   34a98:	mov	r2, #0
   34a9c:	mov	r7, #0
   34aa0:	mov	sl, #0
   34aa4:	str	r0, [sp, #40]	; 0x28
   34aa8:	mov	r0, #0
   34aac:	str	r0, [sp, #28]
   34ab0:	mov	r0, #0
   34ab4:	str	r0, [sp, #48]	; 0x30
   34ab8:	mov	r0, #0
   34abc:	str	r0, [sp, #32]
   34ac0:	mov	r0, #1
   34ac4:	mov	r1, #0
   34ac8:	str	r7, [r4, #96]	; 0x60
   34acc:	str	sl, [r4, #100]	; 0x64
   34ad0:	str	r1, [sp, #52]	; 0x34
   34ad4:	ldr	r1, [sp, #28]
   34ad8:	subs	r1, r1, r7
   34adc:	ldr	r1, [sp, #48]	; 0x30
   34ae0:	sbcs	r1, r1, sl
   34ae4:	bcc	34c00 <__flatcc_fb_build_schema@@Base+0x1b2c>
   34ae8:	orrs	r1, r7, sl
   34aec:	beq	34c00 <__flatcc_fb_build_schema@@Base+0x1b2c>
   34af0:	cmp	r0, #0
   34af4:	ldrne	r0, [sp, #32]
   34af8:	cmpne	r0, #0
   34afc:	beq	34c00 <__flatcc_fb_build_schema@@Base+0x1b2c>
   34b00:	ldr	r0, [sp, #28]
   34b04:	ldr	r1, [sp, #48]	; 0x30
   34b08:	orrs	r0, r0, r1
   34b0c:	mov	r0, #1
   34b10:	str	r0, [sp, #52]	; 0x34
   34b14:	beq	34c00 <__flatcc_fb_build_schema@@Base+0x1b2c>
   34b18:	str	r2, [sp, #20]
   34b1c:	ldr	r1, [sp, #40]	; 0x28
   34b20:	ldr	r2, [sp, #28]
   34b24:	mov	r5, #0
   34b28:	mov	r7, #10
   34b2c:	mov	r6, #0
   34b30:	b	34b50 <__flatcc_fb_build_schema@@Base+0x1a7c>
   34b34:	andeq	r4, r2, r2, asr #13
   34b38:	adds	r5, r5, #1
   34b3c:	adc	r6, r6, #0
   34b40:	subs	r0, r5, r2
   34b44:	ldr	r0, [sp, #48]	; 0x30
   34b48:	sbcs	r0, r6, r0
   34b4c:	bcs	34bf4 <__flatcc_fb_build_schema@@Base+0x1b20>
   34b50:	ldrb	r0, [r1, r5]
   34b54:	cmp	r0, #0
   34b58:	bne	34b38 <__flatcc_fb_build_schema@@Base+0x1a64>
   34b5c:	cmp	r7, #0
   34b60:	beq	34bd4 <__flatcc_fb_build_schema@@Base+0x1b00>
   34b64:	ldr	r1, [pc, #1468]	; 35128 <__flatcc_fb_build_schema@@Base+0x2054>
   34b68:	add	sl, sp, #112	; 0x70
   34b6c:	mov	r2, r5
   34b70:	mov	r3, r6
   34b74:	mov	r0, sl
   34b78:	add	r1, pc, r1
   34b7c:	bl	14928 <sprintf@plt>
   34b80:	ldr	r1, [r4, #4]
   34b84:	mov	r0, r9
   34b88:	mov	r2, sl
   34b8c:	mov	r3, #0
   34b90:	str	r8, [sp]
   34b94:	str	r8, [sp, #4]
   34b98:	bl	29ee4 <__flatcc_error_report@@Base>
   34b9c:	ldr	r2, [sp, #28]
   34ba0:	ldr	r1, [sp, #40]	; 0x28
   34ba4:	sub	r7, r7, #1
   34ba8:	b	34b38 <__flatcc_fb_build_schema@@Base+0x1a64>
   34bac:	ldr	r1, [r6, #4]
   34bb0:	str	r8, [sp]
   34bb4:	str	r8, [sp, #4]
   34bb8:	mov	r0, r9
   34bbc:	mov	r3, #0
   34bc0:	ldr	r2, [pc, #1232]	; 35098 <__flatcc_fb_build_schema@@Base+0x1fc4>
   34bc4:	add	r2, pc, r2
   34bc8:	bl	29ee4 <__flatcc_error_report@@Base>
   34bcc:	b	34c60 <__flatcc_fb_build_schema@@Base+0x1b8c>
   34bd0:	andeq	r4, r2, r4, ror #26
   34bd4:	ldr	r1, [r4, #4]
   34bd8:	str	r8, [sp]
   34bdc:	str	r8, [sp, #4]
   34be0:	mov	r0, r9
   34be4:	mov	r3, #0
   34be8:	ldr	r2, [pc, #1332]	; 35124 <__flatcc_fb_build_schema@@Base+0x2050>
   34bec:	add	r2, pc, r2
   34bf0:	bl	29ee4 <__flatcc_error_report@@Base>
   34bf4:	ldr	r5, [pc, #1328]	; 3512c <__flatcc_fb_build_schema@@Base+0x2058>
   34bf8:	ldr	r2, [sp, #20]
   34bfc:	add	r5, pc, r5
   34c00:	mov	r0, #0
   34c04:	cmp	r2, #0
   34c08:	beq	34c50 <__flatcc_fb_build_schema@@Base+0x1b7c>
   34c0c:	ldrh	r1, [r4, #10]
   34c10:	cmp	r2, #2
   34c14:	orr	r1, r1, #8
   34c18:	strh	r1, [r4, #10]
   34c1c:	blt	34c50 <__flatcc_fb_build_schema@@Base+0x1b7c>
   34c20:	ldr	r1, [r9, #156]	; 0x9c
   34c24:	cmp	r1, #0
   34c28:	bne	34c50 <__flatcc_fb_build_schema@@Base+0x1b7c>
   34c2c:	ldr	r1, [r4, #4]
   34c30:	str	r8, [sp]
   34c34:	str	r8, [sp, #4]
   34c38:	mov	r0, r9
   34c3c:	mov	r3, #0
   34c40:	ldr	r2, [pc, #1256]	; 35130 <__flatcc_fb_build_schema@@Base+0x205c>
   34c44:	add	r2, pc, r2
   34c48:	bl	29ee4 <__flatcc_error_report@@Base>
   34c4c:	mvn	r0, #0
   34c50:	ldr	r1, [sp, #52]	; 0x34
   34c54:	cmp	r1, #0
   34c58:	cmpeq	r0, #0
   34c5c:	beq	338b0 <__flatcc_fb_build_schema@@Base+0x7dc>
   34c60:	mov	r0, #1
   34c64:	strh	r0, [r4, #48]	; 0x30
   34c68:	b	338b0 <__flatcc_fb_build_schema@@Base+0x7dc>
   34c6c:	ldr	r0, [r9, #396]	; 0x18c
   34c70:	cmp	r0, #0
   34c74:	beq	34c9c <__flatcc_fb_build_schema@@Base+0x1bc8>
   34c78:	mov	r2, #0
   34c7c:	mov	r1, r0
   34c80:	ldr	r0, [r0, #120]	; 0x78
   34c84:	str	r2, [r1, #120]	; 0x78
   34c88:	mov	r2, r1
   34c8c:	cmp	r0, #0
   34c90:	bne	34c7c <__flatcc_fb_build_schema@@Base+0x1ba8>
   34c94:	b	34ca0 <__flatcc_fb_build_schema@@Base+0x1bcc>
   34c98:	andeq	r4, r2, sp, lsr r9
   34c9c:	mov	r1, #0
   34ca0:	str	r1, [r9, #396]	; 0x18c
   34ca4:	ldr	r0, [r9, #392]	; 0x188
   34ca8:	cmp	r0, #0
   34cac:	beq	34eec <__flatcc_fb_build_schema@@Base+0x1e18>
   34cb0:	add	lr, sp, #112	; 0x70
   34cb4:	vmov.i32	q8, #0	; 0x00000000
   34cb8:	add	r5, sp, #64	; 0x40
   34cbc:	mov	r6, #0
   34cc0:	movw	r3, #65535	; 0xffff
   34cc4:	mov	r8, #1
   34cc8:	movw	r2, #34432	; 0x8680
   34ccc:	add	r1, lr, #32
   34cd0:	str	r1, [sp, #52]	; 0x34
   34cd4:	add	r1, lr, #16
   34cd8:	str	r1, [sp, #60]	; 0x3c
   34cdc:	add	r1, r5, #16
   34ce0:	str	r1, [sp, #56]	; 0x38
   34ce4:	b	34d04 <__flatcc_fb_build_schema@@Base+0x1c30>
   34ce8:	andeq	r4, r2, r2, ror #2
   34cec:	str	r6, [r1]
   34cf0:	ldr	r1, [sp, #112]	; 0x70
   34cf4:	str	r1, [r0, #24]
   34cf8:	ldr	r0, [r0]
   34cfc:	cmp	r0, #0
   34d00:	beq	34eec <__flatcc_fb_build_schema@@Base+0x1e18>
   34d04:	ldrh	r1, [r0, #8]
   34d08:	cmp	r1, #0
   34d0c:	bne	34cf8 <__flatcc_fb_build_schema@@Base+0x1c24>
   34d10:	ldrb	r1, [r0, #92]	; 0x5c
   34d14:	ldr	sl, [r0, #20]
   34d18:	tst	r1, #8
   34d1c:	bne	34e28 <__flatcc_fb_build_schema@@Base+0x1d54>
   34d20:	mov	r1, lr
   34d24:	mov	r7, #32
   34d28:	cmp	sl, #0
   34d2c:	vst1.64	{d16-d17}, [r1], r7
   34d30:	str	r6, [r1]
   34d34:	ldr	r1, [sp, #60]	; 0x3c
   34d38:	vst1.64	{d16-d17}, [r1]
   34d3c:	ldr	r1, [sp, #56]	; 0x38
   34d40:	vst1.64	{d16-d17}, [r1]
   34d44:	mov	r1, r5
   34d48:	vst1.64	{d16-d17}, [r1], r7
   34d4c:	str	r6, [r1]
   34d50:	beq	34e54 <__flatcc_fb_build_schema@@Base+0x1d80>
   34d54:	mov	ip, sl
   34d58:	b	34d80 <__flatcc_fb_build_schema@@Base+0x1cac>
   34d5c:	andeq	r4, r2, r6, asr r1
   34d60:	andeq	r4, r2, lr, asr #2
   34d64:	add	r4, lr, r1, lsl #2
   34d68:	str	ip, [r4]
   34d6c:	add	r4, ip, #108	; 0x6c
   34d70:	str	r4, [r5, r1, lsl #2]
   34d74:	ldr	ip, [ip]
   34d78:	cmp	ip, #0
   34d7c:	beq	34e54 <__flatcc_fb_build_schema@@Base+0x1d80>
   34d80:	ldrh	r1, [ip, #24]
   34d84:	cmp	r1, #15
   34d88:	bhi	34e18 <__flatcc_fb_build_schema@@Base+0x1d44>
   34d8c:	tst	r2, r8, lsl r1
   34d90:	beq	34dd8 <__flatcc_fb_build_schema@@Base+0x1d04>
   34d94:	ldr	r4, [r9, #192]	; 0xc0
   34d98:	tst	r4, r3
   34d9c:	beq	34fc8 <__flatcc_fb_build_schema@@Base+0x1ef4>
   34da0:	uxth	r1, r4
   34da4:	lsr	r1, r1, #1
   34da8:	clz	r1, r1
   34dac:	rsb	r1, r1, #32
   34db0:	uxth	r4, r1
   34db4:	cmp	r4, #7
   34db8:	movcs	r1, #7
   34dbc:	uxth	r1, r1
   34dc0:	ldr	r4, [lr, r1, lsl #2]
   34dc4:	cmp	r4, #0
   34dc8:	beq	34d64 <__flatcc_fb_build_schema@@Base+0x1c90>
   34dcc:	ldr	r4, [r5, r1, lsl #2]
   34dd0:	b	34d68 <__flatcc_fb_build_schema@@Base+0x1c94>
   34dd4:	andeq	r4, r2, sp, asr r1
   34dd8:	cmp	r1, #14
   34ddc:	bne	34e10 <__flatcc_fb_build_schema@@Base+0x1d3c>
   34de0:	ldr	r1, [ip, #16]
   34de4:	ldrh	r4, [r1, #8]
   34de8:	cmp	r4, #1
   34dec:	beq	34e00 <__flatcc_fb_build_schema@@Base+0x1d2c>
   34df0:	cmp	r4, #4
   34df4:	beq	34d94 <__flatcc_fb_build_schema@@Base+0x1cc0>
   34df8:	cmp	r4, #3
   34dfc:	bne	34d94 <__flatcc_fb_build_schema@@Base+0x1cc0>
   34e00:	ldrh	r4, [r1, #104]	; 0x68
   34e04:	tst	r4, r3
   34e08:	bne	34da0 <__flatcc_fb_build_schema@@Base+0x1ccc>
   34e0c:	b	34fc8 <__flatcc_fb_build_schema@@Base+0x1ef4>
   34e10:	cmp	r1, #1
   34e14:	beq	34eb8 <__flatcc_fb_build_schema@@Base+0x1de4>
   34e18:	ldrh	r4, [ip, #74]	; 0x4a
   34e1c:	tst	r4, r3
   34e20:	bne	34da0 <__flatcc_fb_build_schema@@Base+0x1ccc>
   34e24:	b	34fc8 <__flatcc_fb_build_schema@@Base+0x1ef4>
   34e28:	cmp	sl, #0
   34e2c:	mov	r1, lr
   34e30:	str	r6, [sp, #112]	; 0x70
   34e34:	beq	34cec <__flatcc_fb_build_schema@@Base+0x1c18>
   34e38:	mov	r1, lr
   34e3c:	str	sl, [r1]
   34e40:	mov	r1, sl
   34e44:	ldr	sl, [r1], #108	; 0x6c
   34e48:	cmp	sl, #0
   34e4c:	bne	34e3c <__flatcc_fb_build_schema@@Base+0x1d68>
   34e50:	b	34cec <__flatcc_fb_build_schema@@Base+0x1c18>
   34e54:	ldr	r1, [sp, #52]	; 0x34
   34e58:	mov	r4, #8
   34e5c:	str	r1, [sp, #96]	; 0x60
   34e60:	b	34e84 <__flatcc_fb_build_schema@@Base+0x1db0>
   34e64:	andeq	r4, r2, ip, ror #1
   34e68:	mov	r4, #0
   34e6c:	ldr	r1, [r5, r7, lsl #2]
   34e70:	uxth	r7, r4
   34e74:	ldr	r6, [lr, r7, lsl #2]
   34e78:	cmp	r7, #0
   34e7c:	str	r6, [r1]
   34e80:	beq	34eac <__flatcc_fb_build_schema@@Base+0x1dd8>
   34e84:	uxth	r7, r4
   34e88:	mov	r4, r7
   34e8c:	cmp	r4, #0
   34e90:	beq	34e68 <__flatcc_fb_build_schema@@Base+0x1d94>
   34e94:	sub	r4, r4, #1
   34e98:	uxth	r1, r4
   34e9c:	ldr	r1, [lr, r1, lsl #2]
   34ea0:	cmp	r1, #0
   34ea4:	beq	34e8c <__flatcc_fb_build_schema@@Base+0x1db8>
   34ea8:	b	34e6c <__flatcc_fb_build_schema@@Base+0x1d98>
   34eac:	ldr	r7, [sp, #144]	; 0x90
   34eb0:	mov	r6, #0
   34eb4:	b	34edc <__flatcc_fb_build_schema@@Base+0x1e08>
   34eb8:	sub	r1, fp, #36	; 0x24
   34ebc:	str	r6, [fp, #-36]	; 0xffffffdc
   34ec0:	str	sl, [r1]
   34ec4:	mov	r1, sl
   34ec8:	ldr	sl, [r1], #108	; 0x6c
   34ecc:	cmp	sl, #0
   34ed0:	bne	34ec0 <__flatcc_fb_build_schema@@Base+0x1dec>
   34ed4:	ldr	r7, [fp, #-36]	; 0xffffffdc
   34ed8:	str	r6, [r1]
   34edc:	str	r7, [r0, #24]
   34ee0:	b	34cf8 <__flatcc_fb_build_schema@@Base+0x1c24>
   34ee4:	andeq	r4, r2, ip, asr sl
   34ee8:	andeq	r4, r2, r6, lsr #1
   34eec:	ldr	r2, [r9, #400]	; 0x190
   34ef0:	cmp	r2, #0
   34ef4:	beq	34f3c <__flatcc_fb_build_schema@@Base+0x1e68>
   34ef8:	ldr	r1, [r9, #408]	; 0x198
   34efc:	mov	r0, r9
   34f00:	mov	r3, #0
   34f04:	bl	361a0 <__flatcc_fb_build_schema@@Base+0x30cc>
   34f08:	cmp	r0, #0
   34f0c:	str	r0, [r9, #404]	; 0x194
   34f10:	beq	34f70 <__flatcc_fb_build_schema@@Base+0x1e9c>
   34f14:	ldr	r2, [r9, #176]	; 0xb0
   34f18:	ldrh	r1, [r0, #8]
   34f1c:	cmp	r2, #0
   34f20:	beq	34f80 <__flatcc_fb_build_schema@@Base+0x1eac>
   34f24:	cmp	r1, #2
   34f28:	bcc	34fa4 <__flatcc_fb_build_schema@@Base+0x1ed0>
   34f2c:	ldr	r1, [r9, #400]	; 0x190
   34f30:	ldr	r2, [pc, #528]	; 35148 <__flatcc_fb_build_schema@@Base+0x2074>
   34f34:	add	r2, pc, r2
   34f38:	b	34f94 <__flatcc_fb_build_schema@@Base+0x1ec0>
   34f3c:	ldr	r0, [r9, #208]	; 0xd0
   34f40:	cmp	r0, #0
   34f44:	beq	34fb0 <__flatcc_fb_build_schema@@Base+0x1edc>
   34f48:	mov	r0, #0
   34f4c:	mov	r1, #0
   34f50:	mov	r3, #0
   34f54:	str	r0, [sp]
   34f58:	str	r0, [sp, #4]
   34f5c:	mov	r0, r9
   34f60:	ldr	r2, [pc, #472]	; 35140 <__flatcc_fb_build_schema@@Base+0x206c>
   34f64:	add	r2, pc, r2
   34f68:	bl	29ee4 <__flatcc_error_report@@Base>
   34f6c:	b	34fb0 <__flatcc_fb_build_schema@@Base+0x1edc>
   34f70:	ldr	r1, [r9, #400]	; 0x190
   34f74:	ldr	r2, [pc, #456]	; 35144 <__flatcc_fb_build_schema@@Base+0x2070>
   34f78:	add	r2, pc, r2
   34f7c:	b	34f94 <__flatcc_fb_build_schema@@Base+0x1ec0>
   34f80:	cmp	r1, #0
   34f84:	beq	34fa4 <__flatcc_fb_build_schema@@Base+0x1ed0>
   34f88:	ldr	r1, [r9, #400]	; 0x190
   34f8c:	ldr	r2, [pc, #440]	; 3514c <__flatcc_fb_build_schema@@Base+0x2078>
   34f90:	add	r2, pc, r2
   34f94:	mov	r0, r9
   34f98:	mov	r3, #0
   34f9c:	bl	2a150 <error_ref_sym@@Base>
   34fa0:	b	34fa8 <__flatcc_fb_build_schema@@Base+0x1ed4>
   34fa4:	str	r0, [r9, #404]	; 0x194
   34fa8:	mov	r0, #0
   34fac:	str	r0, [r9, #400]	; 0x190
   34fb0:	ldr	r0, [r9, #108]	; 0x6c
   34fb4:	clz	r1, r0
   34fb8:	lsr	r1, r1, #5
   34fbc:	str	r1, [r9, #120]	; 0x78
   34fc0:	sub	sp, fp, #28
   34fc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34fc8:	ldr	r0, [pc, #356]	; 35134 <__flatcc_fb_build_schema@@Base+0x2060>
   34fcc:	ldr	r1, [pc, #356]	; 35138 <__flatcc_fb_build_schema@@Base+0x2064>
   34fd0:	ldr	r3, [pc, #356]	; 3513c <__flatcc_fb_build_schema@@Base+0x2068>
   34fd4:	movw	r2, #1521	; 0x5f1
   34fd8:	add	r0, pc, r0
   34fdc:	add	r1, pc, r1
   34fe0:	add	r3, pc, r3
   34fe4:	bl	1497c <__assert_fail@plt>
   34fe8:	andeq	r4, r2, pc, lsl r0
   34fec:	ldr	r0, [pc, #360]	; 3515c <__flatcc_fb_build_schema@@Base+0x2088>
   34ff0:	mov	r1, #34	; 0x22
   34ff4:	mov	r2, #1
   34ff8:	ldr	r0, [pc, r0]
   34ffc:	ldr	r3, [r0]
   35000:	ldr	r0, [pc, #344]	; 35160 <__flatcc_fb_build_schema@@Base+0x208c>
   35004:	add	r0, pc, r0
   35008:	bl	14850 <fwrite@plt>
   3500c:	mov	r0, #1
   35010:	bl	14898 <exit@plt>
   35014:	ldrdeq	r3, [r2], -r0
   35018:	ldr	r0, [pc, #304]	; 35150 <__flatcc_fb_build_schema@@Base+0x207c>
   3501c:	ldr	r1, [pc, #304]	; 35154 <__flatcc_fb_build_schema@@Base+0x2080>
   35020:	ldr	r3, [pc, #304]	; 35158 <__flatcc_fb_build_schema@@Base+0x2084>
   35024:	movw	r2, #1558	; 0x616
   35028:	add	r0, pc, r0
   3502c:	add	r1, pc, r1
   35030:	add	r3, pc, r3
   35034:	bl	1497c <__assert_fail@plt>
   35038:	ldr	r0, [pc, #292]	; 35164 <__flatcc_fb_build_schema@@Base+0x2090>
   3503c:	ldr	r1, [pc, #292]	; 35168 <__flatcc_fb_build_schema@@Base+0x2094>
   35040:	ldr	r3, [pc, #292]	; 3516c <__flatcc_fb_build_schema@@Base+0x2098>
   35044:	movw	r2, #770	; 0x302
   35048:	add	r0, pc, r0
   3504c:	add	r1, pc, r1
   35050:	add	r3, pc, r3
   35054:	bl	1497c <__assert_fail@plt>
   35058:	ldr	r0, [pc, #288]	; 35180 <__flatcc_fb_build_schema@@Base+0x20ac>
   3505c:	ldr	r1, [pc, #288]	; 35184 <__flatcc_fb_build_schema@@Base+0x20b0>
   35060:	ldr	r3, [pc, #288]	; 35188 <__flatcc_fb_build_schema@@Base+0x20b4>
   35064:	movw	r2, #1129	; 0x469
   35068:	add	r0, pc, r0
   3506c:	add	r1, pc, r1
   35070:	add	r3, pc, r3
   35074:	bl	1497c <__assert_fail@plt>
   35078:	ldr	r0, [pc, #240]	; 35170 <__flatcc_fb_build_schema@@Base+0x209c>
   3507c:	ldr	r1, [pc, #240]	; 35174 <__flatcc_fb_build_schema@@Base+0x20a0>
   35080:	ldr	r3, [pc, #240]	; 35178 <__flatcc_fb_build_schema@@Base+0x20a4>
   35084:	movw	r2, #347	; 0x15b
   35088:	add	r0, pc, r0
   3508c:	add	r1, pc, r1
   35090:	add	r3, pc, r3
   35094:	bl	1497c <__assert_fail@plt>
   35098:	muleq	r2, r9, r2
   3509c:	strdeq	r4, [r2], -sl
   350a0:	andeq	r3, r2, sp, lsl #27
   350a4:	muleq	r2, r4, sp
   350a8:	ldrdeq	r3, [r2], -pc	; <UNPREDICTABLE>
   350ac:	andeq	r4, r2, r4, asr r8
   350b0:	andeq	r3, r2, sp, ror #27
   350b4:	ldrdeq	r3, [r2], -r2
   350b8:	andeq	r3, r2, r2, lsr sl
   350bc:	andeq	r3, r2, r0, lsr #30
   350c0:	andeq	r3, r2, r8, lsr #18
   350c4:	andeq	r3, r2, r6, lsr #17
   350c8:	andeq	r3, r2, r3, ror #14
   350cc:	andeq	r3, r2, r6, asr #14
   350d0:	andeq	r3, r2, r6, lsl #20
   350d4:	strdeq	r3, [r2], -pc	; <UNPREDICTABLE>
   350d8:	muleq	r2, r7, ip
   350dc:	andeq	r3, r2, fp, ror fp
   350e0:	andeq	r4, r2, r2, lsr r0
   350e4:	andeq	r4, r2, r3
   350e8:	andeq	r3, r2, r1, asr #20
   350ec:	strdeq	r3, [r2], -r7
   350f0:	muleq	r2, fp, sl
   350f4:	andeq	r3, r2, r3, ror #20
   350f8:	andeq	r3, r2, fp, lsl lr
   350fc:	andeq	r3, r2, fp, lsl #18
   35100:	andeq	r3, r2, r1, lsr sl
   35104:	andeq	r3, r2, pc, asr #9
   35108:	andeq	r3, r2, r5, asr sl
   3510c:	andeq	r3, r2, r1, lsl #20
   35110:			; <UNDEFINED> instruction: 0x00023ab7
   35114:	andeq	r3, r2, r2, asr sl
   35118:	andeq	r3, r2, r2, lsl #22
   3511c:	andeq	r3, r2, r9, lsr #21
   35120:	muleq	r2, r4, r2
   35124:	ldrdeq	r3, [r2], -r5
   35128:	andeq	r3, r2, pc, asr sl
   3512c:	andeq	r3, r2, pc, lsr r2
   35130:	andeq	r2, r2, r9, ror #30
   35134:	andeq	r3, r2, r1, lsr #18
   35138:	strdeq	r2, [r2], -r8
   3513c:	andeq	r3, r2, pc, lsl r9
   35140:	andeq	r2, r2, r4, ror #8
   35144:	andeq	r2, r2, r7, ror #8
   35148:			; <UNDEFINED> instruction: 0x000224bf
   3514c:	andeq	r2, r2, r9, lsl #9
   35150:	andeq	r2, r2, r6, ror r2
   35154:	andeq	r2, r2, r8, lsr #5
   35158:	andeq	r2, r2, r4, lsl #6
   3515c:	andeq	r6, r3, r4, lsr #1
   35160:	andeq	sl, r0, r3, asr #3
   35164:	andeq	r2, r2, r4, ror #27
   35168:	andeq	r2, r2, r8, lsl #5
   3516c:	andeq	r2, r2, r5, lsr #27
   35170:	andeq	r3, r2, fp, lsr r6
   35174:	andeq	r2, r2, r8, asr #4
   35178:	andeq	r3, r2, r7, lsr r6
   3517c:	strdeq	r3, [r2], -ip
   35180:	andeq	r2, r2, r4, asr #27
   35184:	andeq	r2, r2, r8, ror #4
   35188:			; <UNDEFINED> instruction: 0x000236b9
   3518c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35190:	add	fp, sp, #28
   35194:	sub	sp, sp, #108	; 0x6c
   35198:	ldrh	sl, [r1, #8]
   3519c:	mov	r8, r1
   351a0:	mov	r7, r0
   351a4:	cmp	sl, #4
   351a8:	bne	351d4 <__flatcc_fb_build_schema@@Base+0x2100>
   351ac:	ldrh	r0, [r8, #48]	; 0x30
   351b0:	cmp	r0, #0
   351b4:	beq	35214 <__flatcc_fb_build_schema@@Base+0x2140>
   351b8:	mov	r0, #0
   351bc:	ldr	r1, [r8, #4]
   351c0:	str	r0, [sp]
   351c4:	str	r0, [sp, #4]
   351c8:	ldr	r2, [pc, #2016]	; 359b0 <__flatcc_fb_build_schema@@Base+0x28dc>
   351cc:	add	r2, pc, r2
   351d0:	b	35830 <__flatcc_fb_build_schema@@Base+0x275c>
   351d4:	cmp	sl, #3
   351d8:	bne	35980 <__flatcc_fb_build_schema@@Base+0x28ac>
   351dc:	ldrh	r0, [r8, #48]	; 0x30
   351e0:	cmp	r0, #8
   351e4:	beq	35234 <__flatcc_fb_build_schema@@Base+0x2160>
   351e8:	cmp	r0, #0
   351ec:	bne	35818 <__flatcc_fb_build_schema@@Base+0x2744>
   351f0:	mov	r0, #1
   351f4:	strh	r0, [r8, #48]	; 0x30
   351f8:	mov	r0, #0
   351fc:	ldr	r1, [r8, #4]
   35200:	str	r0, [sp]
   35204:	str	r0, [sp, #4]
   35208:	ldr	r2, [pc, #1936]	; 359a0 <__flatcc_fb_build_schema@@Base+0x28cc>
   3520c:	add	r2, pc, r2
   35210:	b	35830 <__flatcc_fb_build_schema@@Base+0x275c>
   35214:	mov	r0, #1
   35218:	mov	r1, #0
   3521c:	strd	r0, [r8, #112]	; 0x70
   35220:	mov	r1, #4
   35224:	str	r1, [r8, #40]	; 0x28
   35228:	mov	r1, #8
   3522c:	strh	r1, [r8, #48]	; 0x30
   35230:	b	35278 <__flatcc_fb_build_schema@@Base+0x21a4>
   35234:	ldr	r0, [r8, #40]	; 0x28
   35238:	movw	r1, #999	; 0x3e7
   3523c:	ldr	r0, [r0, #16]
   35240:	add	r2, r0, r1
   35244:	mov	r0, #0
   35248:	mov	r1, #0
   3524c:	cmp	r2, #27
   35250:	bhi	35260 <__flatcc_fb_build_schema@@Base+0x218c>
   35254:	ldr	r1, [pc, #1864]	; 359a4 <__flatcc_fb_build_schema@@Base+0x28d0>
   35258:	add	r1, pc, r1
   3525c:	ldr	r1, [r1, r2, lsl #2]
   35260:	str	r0, [r8, #116]	; 0x74
   35264:	str	r1, [r8, #40]	; 0x28
   35268:	ldr	r0, [pc, #1848]	; 359a8 <__flatcc_fb_build_schema@@Base+0x28d4>
   3526c:	add	r0, pc, r0
   35270:	ldr	r0, [r0, r1, lsl #2]
   35274:	str	r0, [r8, #112]	; 0x70
   35278:	strh	r0, [r8, #104]	; 0x68
   3527c:	add	r3, sp, #60	; 0x3c
   35280:	mov	r0, r7
   35284:	mov	r2, #32
   35288:	ldr	r1, [r8, #28]
   3528c:	bl	35f78 <__flatcc_fb_build_schema@@Base+0x2ea4>
   35290:	mov	r1, #0
   35294:	tst	r0, #32
   35298:	strh	r0, [r8, #92]	; 0x5c
   3529c:	str	r1, [sp, #32]
   352a0:	beq	352c0 <__flatcc_fb_build_schema@@Base+0x21ec>
   352a4:	mov	r0, #0
   352a8:	str	r0, [sp, #44]	; 0x2c
   352ac:	str	r0, [sp, #40]	; 0x28
   352b0:	mov	r0, #5
   352b4:	strh	r0, [sp, #48]	; 0x30
   352b8:	mov	r0, #1
   352bc:	str	r0, [sp, #32]
   352c0:	ldr	r2, [r8, #40]	; 0x28
   352c4:	cmp	r2, #5
   352c8:	bne	352e0 <__flatcc_fb_build_schema@@Base+0x220c>
   352cc:	mov	r0, #6
   352d0:	strh	r0, [sp, #48]	; 0x30
   352d4:	mov	r0, #0
   352d8:	strb	r0, [sp, #40]	; 0x28
   352dc:	b	35328 <__flatcc_fb_build_schema@@Base+0x2254>
   352e0:	mov	r6, #0
   352e4:	mov	r0, #4
   352e8:	add	r3, sp, #40	; 0x28
   352ec:	mov	r1, r8
   352f0:	str	r6, [sp, #44]	; 0x2c
   352f4:	str	r6, [sp, #40]	; 0x28
   352f8:	strh	r0, [sp, #48]	; 0x30
   352fc:	mov	r0, r7
   35300:	bl	36358 <__flatcc_fb_coerce_scalar_type@@Base>
   35304:	cmp	r0, #0
   35308:	beq	35328 <__flatcc_fb_build_schema@@Base+0x2254>
   3530c:	str	r6, [sp]
   35310:	str	r6, [sp, #4]
   35314:	mov	r0, r7
   35318:	mov	r1, #0
   3531c:	ldr	r2, [pc, #1680]	; 359b4 <__flatcc_fb_build_schema@@Base+0x28e0>
   35320:	add	r2, pc, r2
   35324:	b	35834 <__flatcc_fb_build_schema@@Base+0x2760>
   35328:	ldr	r6, [r8, #20]
   3532c:	cmp	r6, #0
   35330:	beq	3584c <__flatcc_fb_build_schema@@Base+0x2778>
   35334:	ldr	r1, [sp, #40]	; 0x28
   35338:	ldr	r0, [sp, #44]	; 0x2c
   3533c:	add	r5, r8, #56	; 0x38
   35340:	mov	r4, #1
   35344:	mov	r9, #1
   35348:	str	r5, [sp, #28]
   3534c:	mov	r2, r1
   35350:	str	r1, [sp, #24]
   35354:	lsr	r1, r1, #8
   35358:	orr	r1, r1, r0, lsl #24
   3535c:	lsr	r0, r0, #8
   35360:	str	r0, [sp, #16]
   35364:	str	r1, [sp, #20]
   35368:	add	r1, r8, #72	; 0x48
   3536c:	str	r1, [sp, #12]
   35370:	add	r1, r7, #68	; 0x44
   35374:	str	r1, [sp, #36]	; 0x24
   35378:	b	353ac <__flatcc_fb_build_schema@@Base+0x22d8>
   3537c:	mov	r0, #0
   35380:	str	r0, [sp]
   35384:	str	r0, [sp, #4]
   35388:	mov	r0, r7
   3538c:	ldr	r2, [pc, #1576]	; 359bc <__flatcc_fb_build_schema@@Base+0x28e8>
   35390:	add	r2, pc, r2
   35394:	bl	29ee4 <__flatcc_error_report@@Base>
   35398:	strh	r4, [r6, #24]
   3539c:	ldr	r6, [r6]
   353a0:	mov	r9, #0
   353a4:	cmp	r6, #0
   353a8:	beq	35840 <__flatcc_fb_build_schema@@Base+0x276c>
   353ac:	mov	r0, r5
   353b0:	mov	r1, r6
   353b4:	mov	r2, #1
   353b8:	bl	27d58 <fb_symbol_table_insert_item@@Base>
   353bc:	cmp	r0, #0
   353c0:	beq	353f8 <__flatcc_fb_build_schema@@Base+0x2324>
   353c4:	ldr	r3, [r0, #4]
   353c8:	ldr	r0, [sp, #36]	; 0x24
   353cc:	ldr	r1, [r6, #4]
   353d0:	cmp	r3, r0
   353d4:	bne	3537c <__flatcc_fb_build_schema@@Base+0x22a8>
   353d8:	mov	r0, #0
   353dc:	mov	r3, #0
   353e0:	str	r0, [sp]
   353e4:	str	r0, [sp, #4]
   353e8:	mov	r0, r7
   353ec:	ldr	r2, [pc, #1476]	; 359b8 <__flatcc_fb_build_schema@@Base+0x28e4>
   353f0:	add	r2, pc, r2
   353f4:	b	35394 <__flatcc_fb_build_schema@@Base+0x22c0>
   353f8:	ldrh	r0, [r6, #8]
   353fc:	cmp	r0, #5
   35400:	bne	35854 <__flatcc_fb_build_schema@@Base+0x2780>
   35404:	ldr	r0, [r6, #64]	; 0x40
   35408:	cmp	r0, #0
   3540c:	bne	35960 <__flatcc_fb_build_schema@@Base+0x288c>
   35410:	add	r5, r6, #48	; 0x30
   35414:	cmp	sl, #4
   35418:	bne	354b4 <__flatcc_fb_build_schema@@Base+0x23e0>
   3541c:	ldr	r1, [r6, #4]
   35420:	ldr	r0, [sp, #36]	; 0x24
   35424:	cmp	r1, r0
   35428:	beq	35468 <__flatcc_fb_build_schema@@Base+0x2394>
   3542c:	ldrh	r0, [r6, #24]
   35430:	cmp	r0, #1
   35434:	beq	3551c <__flatcc_fb_build_schema@@Base+0x2448>
   35438:	cmp	r0, #12
   3543c:	beq	35474 <__flatcc_fb_build_schema@@Base+0x23a0>
   35440:	cmp	r0, #10
   35444:	beq	354a8 <__flatcc_fb_build_schema@@Base+0x23d4>
   35448:	mov	r0, #0
   3544c:	mov	r3, #0
   35450:	str	r0, [sp]
   35454:	str	r0, [sp, #4]
   35458:	mov	r0, r7
   3545c:	ldr	r2, [pc, #1376]	; 359c4 <__flatcc_fb_build_schema@@Base+0x28f0>
   35460:	add	r2, pc, r2
   35464:	b	35808 <__flatcc_fb_build_schema@@Base+0x2734>
   35468:	mov	r0, #0
   3546c:	strh	r0, [r6, #24]
   35470:	b	354b4 <__flatcc_fb_build_schema@@Base+0x23e0>
   35474:	ldr	r2, [r6, #16]
   35478:	ldr	r1, [r8, #12]
   3547c:	mov	r0, r7
   35480:	mov	r3, #0
   35484:	bl	361a0 <__flatcc_fb_build_schema@@Base+0x30cc>
   35488:	cmp	r0, #0
   3548c:	beq	357cc <__flatcc_fb_build_schema@@Base+0x26f8>
   35490:	ldrh	r1, [r0, #8]
   35494:	cmp	r1, #2
   35498:	bcs	357e8 <__flatcc_fb_build_schema@@Base+0x2714>
   3549c:	str	r0, [r6, #16]
   354a0:	mov	r0, #14
   354a4:	strh	r0, [r6, #24]
   354a8:	mov	r0, #0
   354ac:	str	r0, [r5, #40]	; 0x28
   354b0:	str	r0, [r5, #44]	; 0x2c
   354b4:	ldrh	r0, [r6, #56]	; 0x38
   354b8:	cmp	r9, #0
   354bc:	cmpeq	r0, #0
   354c0:	bne	355c0 <__flatcc_fb_build_schema@@Base+0x24ec>
   354c4:	ldrh	r0, [sp, #48]	; 0x30
   354c8:	cmp	r0, #4
   354cc:	beq	3555c <__flatcc_fb_build_schema@@Base+0x2488>
   354d0:	cmp	r0, #6
   354d4:	beq	35524 <__flatcc_fb_build_schema@@Base+0x2450>
   354d8:	cmp	r0, #5
   354dc:	bne	355bc <__flatcc_fb_build_schema@@Base+0x24e8>
   354e0:	ldr	r2, [r8, #40]	; 0x28
   354e4:	ldr	r0, [sp, #40]	; 0x28
   354e8:	ldr	r1, [sp, #44]	; 0x2c
   354ec:	cmp	r2, #6
   354f0:	andeq	r2, r0, r1
   354f4:	cmneq	r2, #1
   354f8:	bne	355ac <__flatcc_fb_build_schema@@Base+0x24d8>
   354fc:	mov	r0, #0
   35500:	ldr	r1, [r6, #4]
   35504:	str	r0, [sp]
   35508:	str	r0, [sp, #4]
   3550c:	mov	r0, r7
   35510:	ldr	r2, [pc, #1208]	; 359d0 <__flatcc_fb_build_schema@@Base+0x28fc>
   35514:	add	r2, pc, r2
   35518:	b	3559c <__flatcc_fb_build_schema@@Base+0x24c8>
   3551c:	ldr	r5, [sp, #28]
   35520:	b	3539c <__flatcc_fb_build_schema@@Base+0x22c8>
   35524:	ldrb	r0, [sp, #40]	; 0x28
   35528:	cmp	r0, #1
   3552c:	bne	35554 <__flatcc_fb_build_schema@@Base+0x2480>
   35530:	mov	r0, #0
   35534:	ldr	r1, [r6, #4]
   35538:	mov	r3, #0
   3553c:	str	r0, [sp]
   35540:	str	r0, [sp, #4]
   35544:	mov	r0, r7
   35548:	ldr	r2, [pc, #1160]	; 359d8 <__flatcc_fb_build_schema@@Base+0x2904>
   3554c:	add	r2, pc, r2
   35550:	bl	29ee4 <__flatcc_error_report@@Base>
   35554:	strb	r4, [sp, #40]	; 0x28
   35558:	b	355bc <__flatcc_fb_build_schema@@Base+0x24e8>
   3555c:	ldr	r2, [r8, #40]	; 0x28
   35560:	ldr	r0, [sp, #40]	; 0x28
   35564:	ldr	r1, [sp, #44]	; 0x2c
   35568:	cmp	r2, #6
   3556c:	mvneq	r2, #-2147483648	; 0x80000000
   35570:	mvneq	r3, r0
   35574:	eoreq	r2, r1, r2
   35578:	orrseq	r2, r3, r2
   3557c:	bne	355ac <__flatcc_fb_build_schema@@Base+0x24d8>
   35580:	mov	r0, #0
   35584:	ldr	r1, [r6, #4]
   35588:	str	r0, [sp]
   3558c:	str	r0, [sp, #4]
   35590:	mov	r0, r7
   35594:	ldr	r2, [pc, #1080]	; 359d4 <__flatcc_fb_build_schema@@Base+0x2900>
   35598:	add	r2, pc, r2
   3559c:	mov	r3, #0
   355a0:	bl	29ee4 <__flatcc_error_report@@Base>
   355a4:	ldr	r0, [sp, #40]	; 0x28
   355a8:	ldr	r1, [sp, #44]	; 0x2c
   355ac:	adds	r0, r0, #1
   355b0:	str	r0, [sp, #40]	; 0x28
   355b4:	adc	r0, r1, #0
   355b8:	str	r0, [sp, #44]	; 0x2c
   355bc:	ldrh	r0, [r6, #56]	; 0x38
   355c0:	ldr	r1, [sp, #32]
   355c4:	cmp	r1, #0
   355c8:	beq	35658 <__flatcc_fb_build_schema@@Base+0x2584>
   355cc:	cmp	r0, #0
   355d0:	beq	355e8 <__flatcc_fb_build_schema@@Base+0x2514>
   355d4:	cmp	r0, #5
   355d8:	bne	358ac <__flatcc_fb_build_schema@@Base+0x27d8>
   355dc:	vld1.64	{d16-d17}, [r5]
   355e0:	add	r0, sp, #40	; 0x28
   355e4:	vst1.64	{d16-d17}, [r0]
   355e8:	ldr	r0, [r8, #40]	; 0x28
   355ec:	ldr	r1, [pc, #1004]	; 359e0 <__flatcc_fb_build_schema@@Base+0x290c>
   355f0:	ldr	r2, [sp, #44]	; 0x2c
   355f4:	add	r1, pc, r1
   355f8:	ldr	r1, [r1, r0, lsl #2]
   355fc:	ldr	r0, [sp, #40]	; 0x28
   35600:	subs	r1, r0, r1, lsl #3
   35604:	sbcs	r1, r2, #0
   35608:	bcs	35870 <__flatcc_fb_build_schema@@Base+0x279c>
   3560c:	lsl	r2, r4, r0
   35610:	subs	r1, r0, #32
   35614:	rsb	r0, r0, #32
   35618:	lsr	r3, r4, r0
   3561c:	lslpl	r3, r4, r1
   35620:	movwpl	r2, #0
   35624:	mov	r0, #5
   35628:	mov	r1, r6
   3562c:	strd	r2, [r5]
   35630:	strh	r0, [r6, #56]	; 0x38
   35634:	mov	r0, r7
   35638:	mov	r3, r5
   3563c:	ldr	r2, [r8, #40]	; 0x28
   35640:	bl	36358 <__flatcc_fb_coerce_scalar_type@@Base>
   35644:	cmp	r0, #0
   35648:	bne	35870 <__flatcc_fb_build_schema@@Base+0x279c>
   3564c:	cmp	r9, #0
   35650:	bne	3573c <__flatcc_fb_build_schema@@Base+0x2668>
   35654:	b	35698 <__flatcc_fb_build_schema@@Base+0x25c4>
   35658:	cmp	r0, #0
   3565c:	add	r4, sp, #40	; 0x28
   35660:	beq	35688 <__flatcc_fb_build_schema@@Base+0x25b4>
   35664:	vld1.64	{d16-d17}, [r5]
   35668:	mov	r0, r7
   3566c:	mov	r1, r6
   35670:	mov	r3, r4
   35674:	vst1.64	{d16-d17}, [r4]
   35678:	ldr	r2, [r8, #40]	; 0x28
   3567c:	bl	36358 <__flatcc_fb_coerce_scalar_type@@Base>
   35680:	cmp	r0, #0
   35684:	bne	3583c <__flatcc_fb_build_schema@@Base+0x2768>
   35688:	vld1.64	{d16-d17}, [r4]
   3568c:	vst1.64	{d16-d17}, [r5]
   35690:	cmp	r9, #0
   35694:	bne	3573c <__flatcc_fb_build_schema@@Base+0x2668>
   35698:	ldr	r0, [r7, #180]	; 0xb4
   3569c:	cmp	r0, #0
   356a0:	beq	3573c <__flatcc_fb_build_schema@@Base+0x2668>
   356a4:	ldrh	r0, [sp, #48]	; 0x30
   356a8:	cmp	r0, #4
   356ac:	beq	356f4 <__flatcc_fb_build_schema@@Base+0x2620>
   356b0:	cmp	r0, #6
   356b4:	beq	35728 <__flatcc_fb_build_schema@@Base+0x2654>
   356b8:	cmp	r0, #5
   356bc:	bne	3573c <__flatcc_fb_build_schema@@Base+0x2668>
   356c0:	ldr	r1, [sp, #24]
   356c4:	ldr	r0, [sp, #16]
   356c8:	ldr	r2, [sp, #20]
   356cc:	ldr	r3, [sp, #44]	; 0x2c
   356d0:	uxtb	r1, r1
   356d4:	lsl	r0, r0, #8
   356d8:	orr	r0, r0, r2, lsr #24
   356dc:	orr	r1, r1, r2, lsl #8
   356e0:	ldr	r2, [sp, #40]	; 0x28
   356e4:	subs	r1, r1, r2
   356e8:	sbcs	r0, r0, r3
   356ec:	bcc	3573c <__flatcc_fb_build_schema@@Base+0x2668>
   356f0:	b	358c8 <__flatcc_fb_build_schema@@Base+0x27f4>
   356f4:	ldr	r1, [sp, #24]
   356f8:	ldr	r0, [sp, #16]
   356fc:	ldr	r2, [sp, #20]
   35700:	ldr	r3, [sp, #44]	; 0x2c
   35704:	uxtb	r1, r1
   35708:	lsl	r0, r0, #8
   3570c:	orr	r0, r0, r2, lsr #24
   35710:	orr	r1, r1, r2, lsl #8
   35714:	ldr	r2, [sp, #40]	; 0x28
   35718:	subs	r1, r1, r2
   3571c:	sbcs	r0, r0, r3
   35720:	blt	3573c <__flatcc_fb_build_schema@@Base+0x2668>
   35724:	b	358c8 <__flatcc_fb_build_schema@@Base+0x27f4>
   35728:	ldr	r0, [sp, #24]
   3572c:	ldrb	r1, [sp, #40]	; 0x28
   35730:	uxtb	r0, r0
   35734:	cmp	r1, r0
   35738:	bls	35910 <__flatcc_fb_build_schema@@Base+0x283c>
   3573c:	ldr	r0, [sp, #12]
   35740:	mov	r9, r7
   35744:	ldr	r4, [sp, #40]	; 0x28
   35748:	ldr	r7, [sp, #44]	; 0x2c
   3574c:	mov	r1, r5
   35750:	mov	r2, #1
   35754:	bl	3d59c <fb_value_set_insert_item@@Base>
   35758:	ldr	r5, [sp, #28]
   3575c:	cmp	r0, #0
   35760:	beq	35778 <__flatcc_fb_build_schema@@Base+0x26a4>
   35764:	cmp	sl, #4
   35768:	beq	3588c <__flatcc_fb_build_schema@@Base+0x27b8>
   3576c:	ldrh	r0, [r6, #10]
   35770:	orr	r0, r0, #4
   35774:	strh	r0, [r6, #10]
   35778:	lsr	r0, r4, #8
   3577c:	str	r4, [sp, #24]
   35780:	orr	r0, r0, r7, lsl #24
   35784:	str	r0, [sp, #20]
   35788:	lsr	r0, r7, #8
   3578c:	str	r0, [sp, #16]
   35790:	ldr	r0, [r6, #64]	; 0x40
   35794:	cmp	r0, #0
   35798:	beq	357c0 <__flatcc_fb_build_schema@@Base+0x26ec>
   3579c:	mov	r0, #0
   357a0:	ldr	r1, [r6, #4]
   357a4:	mov	r3, #0
   357a8:	str	r0, [sp]
   357ac:	str	r0, [sp, #4]
   357b0:	mov	r0, r9
   357b4:	ldr	r2, [pc, #572]	; 359f8 <__flatcc_fb_build_schema@@Base+0x2924>
   357b8:	add	r2, pc, r2
   357bc:	bl	29ee4 <__flatcc_error_report@@Base>
   357c0:	mov	r7, r9
   357c4:	mov	r4, #1
   357c8:	b	3539c <__flatcc_fb_build_schema@@Base+0x22c8>
   357cc:	ldr	r1, [r6, #16]
   357d0:	ldr	r2, [pc, #496]	; 359c8 <__flatcc_fb_build_schema@@Base+0x28f4>
   357d4:	mov	r0, r7
   357d8:	mov	r3, r6
   357dc:	add	r2, pc, r2
   357e0:	bl	2a150 <error_ref_sym@@Base>
   357e4:	b	3580c <__flatcc_fb_build_schema@@Base+0x2738>
   357e8:	ldr	r3, [r0, #4]
   357ec:	mov	r0, #0
   357f0:	ldr	r1, [r6, #4]
   357f4:	str	r0, [sp]
   357f8:	str	r0, [sp, #4]
   357fc:	mov	r0, r7
   35800:	ldr	r2, [pc, #452]	; 359cc <__flatcc_fb_build_schema@@Base+0x28f8>
   35804:	add	r2, pc, r2
   35808:	bl	29ee4 <__flatcc_error_report@@Base>
   3580c:	strh	r4, [r6, #24]
   35810:	ldr	r5, [sp, #28]
   35814:	b	3539c <__flatcc_fb_build_schema@@Base+0x22c8>
   35818:	mov	r0, #0
   3581c:	ldr	r1, [r8, #4]
   35820:	str	r0, [sp]
   35824:	str	r0, [sp, #4]
   35828:	ldr	r2, [pc, #380]	; 359ac <__flatcc_fb_build_schema@@Base+0x28d8>
   3582c:	add	r2, pc, r2
   35830:	mov	r0, r7
   35834:	mov	r3, #0
   35838:	bl	29ee4 <__flatcc_error_report@@Base>
   3583c:	mvn	r9, #0
   35840:	mov	r0, r9
   35844:	sub	sp, fp, #28
   35848:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3584c:	mov	r9, #0
   35850:	b	35840 <__flatcc_fb_build_schema@@Base+0x276c>
   35854:	mov	r0, #0
   35858:	ldr	r1, [r6, #4]
   3585c:	str	r0, [sp]
   35860:	str	r0, [sp, #4]
   35864:	ldr	r2, [pc, #340]	; 359c0 <__flatcc_fb_build_schema@@Base+0x28ec>
   35868:	add	r2, pc, r2
   3586c:	b	35830 <__flatcc_fb_build_schema@@Base+0x275c>
   35870:	mov	r0, #0
   35874:	ldr	r1, [r6, #4]
   35878:	str	r0, [sp]
   3587c:	str	r0, [sp, #4]
   35880:	ldr	r2, [pc, #348]	; 359e4 <__flatcc_fb_build_schema@@Base+0x2910>
   35884:	add	r2, pc, r2
   35888:	b	35830 <__flatcc_fb_build_schema@@Base+0x275c>
   3588c:	mov	r0, #0
   35890:	ldr	r1, [r6, #4]
   35894:	str	r0, [sp]
   35898:	str	r0, [sp, #4]
   3589c:	mov	r0, r9
   358a0:	ldr	r2, [pc, #320]	; 359e8 <__flatcc_fb_build_schema@@Base+0x2914>
   358a4:	add	r2, pc, r2
   358a8:	b	35948 <__flatcc_fb_build_schema@@Base+0x2874>
   358ac:	mov	r0, #0
   358b0:	ldr	r1, [r6, #4]
   358b4:	str	r0, [sp]
   358b8:	str	r0, [sp, #4]
   358bc:	ldr	r2, [pc, #280]	; 359dc <__flatcc_fb_build_schema@@Base+0x2908>
   358c0:	add	r2, pc, r2
   358c4:	b	35830 <__flatcc_fb_build_schema@@Base+0x275c>
   358c8:	cmp	sl, #4
   358cc:	bne	358f4 <__flatcc_fb_build_schema@@Base+0x2820>
   358d0:	ldr	r0, [sp, #24]
   358d4:	ldr	r1, [sp, #16]
   358d8:	ldr	r2, [sp, #20]
   358dc:	uxtb	r0, r0
   358e0:	lsl	r1, r1, #8
   358e4:	orr	r1, r1, r2, lsr #24
   358e8:	orr	r0, r0, r2, lsl #8
   358ec:	orrs	r0, r0, r1
   358f0:	beq	3592c <__flatcc_fb_build_schema@@Base+0x2858>
   358f4:	mov	r0, #0
   358f8:	ldr	r1, [r6, #4]
   358fc:	str	r0, [sp]
   35900:	str	r0, [sp, #4]
   35904:	ldr	r2, [pc, #228]	; 359f0 <__flatcc_fb_build_schema@@Base+0x291c>
   35908:	add	r2, pc, r2
   3590c:	b	35944 <__flatcc_fb_build_schema@@Base+0x2870>
   35910:	mov	r0, #0
   35914:	ldr	r1, [r6, #4]
   35918:	str	r0, [sp]
   3591c:	str	r0, [sp, #4]
   35920:	ldr	r2, [pc, #204]	; 359f4 <__flatcc_fb_build_schema@@Base+0x2920>
   35924:	add	r2, pc, r2
   35928:	b	35944 <__flatcc_fb_build_schema@@Base+0x2870>
   3592c:	mov	r0, #0
   35930:	ldr	r1, [r6, #4]
   35934:	str	r0, [sp]
   35938:	str	r0, [sp, #4]
   3593c:	ldr	r2, [pc, #168]	; 359ec <__flatcc_fb_build_schema@@Base+0x2918>
   35940:	add	r2, pc, r2
   35944:	mov	r0, r7
   35948:	mov	r3, #0
   3594c:	bl	29ee4 <__flatcc_error_report@@Base>
   35950:	mov	r0, #1
   35954:	mvn	r9, #0
   35958:	strh	r0, [r6, #56]	; 0x38
   3595c:	b	35840 <__flatcc_fb_build_schema@@Base+0x276c>
   35960:	ldr	r0, [pc, #160]	; 35a08 <__flatcc_fb_build_schema@@Base+0x2934>
   35964:	ldr	r1, [pc, #160]	; 35a0c <__flatcc_fb_build_schema@@Base+0x2938>
   35968:	ldr	r3, [pc, #160]	; 35a10 <__flatcc_fb_build_schema@@Base+0x293c>
   3596c:	movw	r2, #1315	; 0x523
   35970:	add	r0, pc, r0
   35974:	add	r1, pc, r1
   35978:	add	r3, pc, r3
   3597c:	bl	1497c <__assert_fail@plt>
   35980:	ldr	r0, [pc, #116]	; 359fc <__flatcc_fb_build_schema@@Base+0x2928>
   35984:	ldr	r1, [pc, #116]	; 35a00 <__flatcc_fb_build_schema@@Base+0x292c>
   35988:	ldr	r3, [pc, #116]	; 35a04 <__flatcc_fb_build_schema@@Base+0x2930>
   3598c:	movw	r2, #1229	; 0x4cd
   35990:	add	r0, pc, r0
   35994:	add	r1, pc, r1
   35998:	add	r3, pc, r3
   3599c:	bl	1497c <__assert_fail@plt>
   359a0:	andeq	r2, r2, r5, asr #5
   359a4:	andeq	r3, r2, r8, lsl r7
   359a8:	ldrdeq	r3, [r2], -r4
   359ac:			; <UNDEFINED> instruction: 0x00021cbb
   359b0:	andeq	r2, r2, ip, asr #6
   359b4:	andeq	r2, r2, r7, lsr r2
   359b8:	andeq	r2, r2, r5, lsr #3
   359bc:	andeq	r2, r2, r2, lsr #4
   359c0:	andeq	r1, r2, r5, ror #26
   359c4:	andeq	r2, r2, ip, lsr #3
   359c8:	andeq	r1, r2, r7, ror lr
   359cc:	andeq	r1, r2, sp, ror lr
   359d0:			; <UNDEFINED> instruction: 0x000221b3
   359d4:	andeq	r2, r2, ip, asr #2
   359d8:			; <UNDEFINED> instruction: 0x000221b3
   359dc:	andeq	r1, r2, ip, ror #28
   359e0:	andeq	r3, r2, ip, asr #6
   359e4:	andeq	r1, r2, r3, ror #29
   359e8:	muleq	r2, lr, pc	; <UNPREDICTABLE>
   359ec:	andeq	r1, r2, sl, asr lr
   359f0:	ldrdeq	r1, [r2], -r3
   359f4:	ldrdeq	r1, [r2], -lr
   359f8:	ldrdeq	r2, [r2], -r4
   359fc:	andeq	r0, r1, sp, lsl #16
   35a00:	andeq	r1, r2, r0, asr #18
   35a04:	andeq	r1, r2, r3, lsl #22
   35a08:	andeq	r1, r2, r6, lsl #25
   35a0c:	andeq	r1, r2, r0, ror #18
   35a10:	andeq	r1, r2, r3, lsr #22
   35a14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35a18:	add	fp, sp, #28
   35a1c:	sub	sp, sp, #28
   35a20:	mov	sl, r0
   35a24:	ldrh	r0, [r1, #8]
   35a28:	cmp	r0, #1
   35a2c:	bne	35ebc <__flatcc_fb_build_schema@@Base+0x2de8>
   35a30:	ldrh	r0, [r1, #10]
   35a34:	tst	r0, #1
   35a38:	bne	35edc <__flatcc_fb_build_schema@@Base+0x2e08>
   35a3c:	mov	r4, #0
   35a40:	tst	r0, #2
   35a44:	bne	35e88 <__flatcc_fb_build_schema@@Base+0x2db4>
   35a48:	ldr	r2, [r1, #120]	; 0x78
   35a4c:	cmp	r2, #0
   35a50:	bne	35efc <__flatcc_fb_build_schema@@Base+0x2e28>
   35a54:	orr	r0, r0, #1
   35a58:	str	r1, [sp, #12]
   35a5c:	strh	r0, [r1, #10]
   35a60:	ldr	r8, [r1, #20]
   35a64:	cmp	r8, #0
   35a68:	beq	35cc8 <__flatcc_fb_build_schema@@Base+0x2bf4>
   35a6c:	add	r0, r1, #112	; 0x70
   35a70:	mov	r9, #0
   35a74:	mov	r5, #1
   35a78:	str	sl, [sp, #16]
   35a7c:	str	r0, [sp, #24]
   35a80:	b	35ad8 <__flatcc_fb_build_schema@@Base+0x2a04>
   35a84:	mov	r0, #0
   35a88:	ldr	r1, [r8, #4]
   35a8c:	mov	r3, #0
   35a90:	mov	r9, #0
   35a94:	str	r0, [sp]
   35a98:	str	r0, [sp, #4]
   35a9c:	mov	r0, sl
   35aa0:	ldr	r2, [pc, #1176]	; 35f40 <__flatcc_fb_build_schema@@Base+0x2e6c>
   35aa4:	add	r2, pc, r2
   35aa8:	bl	29ee4 <__flatcc_error_report@@Base>
   35aac:	ldrh	r6, [r8, #74]	; 0x4a
   35ab0:	ldr	r0, [sp, #24]
   35ab4:	strd	r4, [r0]
   35ab8:	uxth	r0, r6
   35abc:	ldr	r5, [sp, #20]
   35ac0:	ldr	r8, [r8]
   35ac4:	uxth	r1, r5
   35ac8:	cmp	r1, r0
   35acc:	movcc	r5, r6
   35ad0:	cmp	r8, #0
   35ad4:	beq	35ccc <__flatcc_fb_build_schema@@Base+0x2bf8>
   35ad8:	ldr	r0, [sl, #116]	; 0x74
   35adc:	cmp	r0, #100	; 0x64
   35ae0:	bge	35df0 <__flatcc_fb_build_schema@@Base+0x2d1c>
   35ae4:	ldrh	r1, [r8, #24]
   35ae8:	mvn	r4, #0
   35aec:	str	r5, [sp, #20]
   35af0:	cmp	r1, #8
   35af4:	beq	35b24 <__flatcc_fb_build_schema@@Base+0x2a50>
   35af8:	cmp	r1, #14
   35afc:	bne	35e1c <__flatcc_fb_build_schema@@Base+0x2d48>
   35b00:	ldr	r7, [r8, #16]
   35b04:	ldrh	r1, [r7, #8]
   35b08:	cmp	r1, #1
   35b0c:	beq	35b7c <__flatcc_fb_build_schema@@Base+0x2aa8>
   35b10:	cmp	r1, #3
   35b14:	bne	35e64 <__flatcc_fb_build_schema@@Base+0x2d90>
   35b18:	ldr	ip, [r7, #112]	; 0x70
   35b1c:	ldr	r7, [r7, #116]	; 0x74
   35b20:	b	35b70 <__flatcc_fb_build_schema@@Base+0x2a9c>
   35b24:	ldr	r3, [r8, #16]
   35b28:	movw	r1, #999	; 0x3e7
   35b2c:	ldr	r0, [r3, #16]
   35b30:	add	r0, r0, r1
   35b34:	cmp	r0, #28
   35b38:	bcs	35e40 <__flatcc_fb_build_schema@@Base+0x2d6c>
   35b3c:	movw	r2, #55291	; 0xd7fb
   35b40:	mov	r1, #1
   35b44:	movt	r2, #2430	; 0x97e
   35b48:	tst	r1, r2, lsr r0
   35b4c:	beq	35e40 <__flatcc_fb_build_schema@@Base+0x2d6c>
   35b50:	ldr	r1, [pc, #976]	; 35f28 <__flatcc_fb_build_schema@@Base+0x2e54>
   35b54:	mov	r7, #0
   35b58:	add	r1, pc, r1
   35b5c:	ldr	r0, [r1, r0, lsl #2]
   35b60:	str	r0, [r8, #16]
   35b64:	ldr	r1, [pc, #960]	; 35f2c <__flatcc_fb_build_schema@@Base+0x2e58>
   35b68:	add	r1, pc, r1
   35b6c:	ldr	ip, [r1, r0, lsl #2]
   35b70:	strh	ip, [r8, #74]	; 0x4a
   35b74:	mov	r6, ip
   35b78:	b	35c00 <__flatcc_fb_build_schema@@Base+0x2b2c>
   35b7c:	ldrh	r1, [r7, #10]
   35b80:	tst	r1, #1
   35b84:	bne	35e94 <__flatcc_fb_build_schema@@Base+0x2dc0>
   35b88:	tst	r1, #2
   35b8c:	bne	35bf0 <__flatcc_fb_build_schema@@Base+0x2b1c>
   35b90:	ldr	r1, [sl, #188]	; 0xbc
   35b94:	cmp	r1, #0
   35b98:	beq	35bc8 <__flatcc_fb_build_schema@@Base+0x2af4>
   35b9c:	mov	r0, #0
   35ba0:	ldr	r3, [r7, #4]
   35ba4:	ldr	r1, [r8, #4]
   35ba8:	mov	r9, #0
   35bac:	str	r0, [sp]
   35bb0:	str	r0, [sp, #4]
   35bb4:	mov	r0, sl
   35bb8:	ldr	r2, [pc, #884]	; 35f34 <__flatcc_fb_build_schema@@Base+0x2e60>
   35bbc:	add	r2, pc, r2
   35bc0:	bl	29ee4 <__flatcc_error_report@@Base>
   35bc4:	ldr	r0, [sl, #116]	; 0x74
   35bc8:	add	r0, r0, #1
   35bcc:	mov	r1, r7
   35bd0:	str	r0, [sl, #116]	; 0x74
   35bd4:	mov	r0, sl
   35bd8:	bl	35a14 <__flatcc_fb_build_schema@@Base+0x2940>
   35bdc:	ldr	r1, [sl, #116]	; 0x74
   35be0:	cmp	r0, #0
   35be4:	sub	r1, r1, #1
   35be8:	str	r1, [sl, #116]	; 0x74
   35bec:	bne	35eb4 <__flatcc_fb_build_schema@@Base+0x2de0>
   35bf0:	ldrh	r6, [r7, #104]	; 0x68
   35bf4:	strh	r6, [r8, #74]	; 0x4a
   35bf8:	ldr	ip, [r7, #112]	; 0x70
   35bfc:	ldr	r7, [r7, #116]	; 0x74
   35c00:	uxth	r5, r6
   35c04:	add	r1, r8, #80	; 0x50
   35c08:	str	ip, [r1, #8]
   35c0c:	str	r7, [r1, #12]
   35c10:	subs	r4, r5, #1
   35c14:	sbc	r3, r9, #0
   35c18:	cmp	r5, #0
   35c1c:	beq	35d70 <__flatcc_fb_build_schema@@Base+0x2c9c>
   35c20:	rsbs	r0, r4, #255	; 0xff
   35c24:	rscs	r0, r3, #0
   35c28:	bcc	35d70 <__flatcc_fb_build_schema@@Base+0x2c9c>
   35c2c:	ldr	r0, [sp, #24]
   35c30:	mov	r9, #0
   35c34:	ldm	r0, {sl, lr}
   35c38:	mov	r0, #1
   35c3c:	eor	r2, r0, r5
   35c40:	orrs	r2, r2, r9
   35c44:	beq	35c64 <__flatcc_fb_build_schema@@Base+0x2b90>
   35c48:	lsl	r2, r9, #1
   35c4c:	orr	r9, r2, r0, lsr #31
   35c50:	lsl	r0, r0, #1
   35c54:	subs	r2, r5, r0
   35c58:	rscs	r2, r9, #0
   35c5c:	bcs	35c3c <__flatcc_fb_build_schema@@Base+0x2b68>
   35c60:	b	35d70 <__flatcc_fb_build_schema@@Base+0x2c9c>
   35c64:	adds	r0, r4, sl
   35c68:	mov	r2, #0
   35c6c:	adc	r4, r3, lr
   35c70:	rsbs	r3, r5, #0
   35c74:	and	r0, r0, r3
   35c78:	sbc	r3, r2, #0
   35c7c:	and	r3, r4, r3
   35c80:	stm	r1, {r0, r3}
   35c84:	subs	r1, r0, sl
   35c88:	sbcs	r1, r3, lr
   35c8c:	bcc	35dd0 <__flatcc_fb_build_schema@@Base+0x2cfc>
   35c90:	adds	r4, ip, r0
   35c94:	adcs	r5, r7, r3
   35c98:	adc	r0, r2, #0
   35c9c:	cmp	r0, #1
   35ca0:	beq	35dd0 <__flatcc_fb_build_schema@@Base+0x2cfc>
   35ca4:	subs	r0, r4, sl
   35ca8:	ldr	sl, [sp, #16]
   35cac:	mov	r9, #0
   35cb0:	sbcs	r0, r5, lr
   35cb4:	bcc	35a84 <__flatcc_fb_build_schema@@Base+0x29b0>
   35cb8:	subs	r0, r4, #65536	; 0x10000
   35cbc:	sbcs	r0, r5, #0
   35cc0:	bcc	35ab0 <__flatcc_fb_build_schema@@Base+0x29dc>
   35cc4:	b	35a84 <__flatcc_fb_build_schema@@Base+0x29b0>
   35cc8:	mov	r5, #1
   35ccc:	ldr	r7, [sp, #12]
   35cd0:	ldrh	r0, [r7, #104]	; 0x68
   35cd4:	cmp	r0, #0
   35cd8:	beq	35d0c <__flatcc_fb_build_schema@@Base+0x2c38>
   35cdc:	uxth	r1, r5
   35ce0:	cmp	r1, r0
   35ce4:	bls	35d14 <__flatcc_fb_build_schema@@Base+0x2c40>
   35ce8:	mov	r0, #0
   35cec:	ldr	r1, [r7, #4]
   35cf0:	mov	r3, #0
   35cf4:	str	r0, [sp]
   35cf8:	str	r0, [sp, #4]
   35cfc:	mov	r0, sl
   35d00:	ldr	r2, [pc, #572]	; 35f44 <__flatcc_fb_build_schema@@Base+0x2e70>
   35d04:	add	r2, pc, r2
   35d08:	bl	29ee4 <__flatcc_error_report@@Base>
   35d0c:	mov	r0, r5
   35d10:	strh	r5, [r7, #104]	; 0x68
   35d14:	uxth	r0, r0
   35d18:	mov	r2, #0
   35d1c:	subs	r1, r0, #1
   35d20:	sbc	r2, r2, #0
   35d24:	cmp	r0, #0
   35d28:	beq	35d70 <__flatcc_fb_build_schema@@Base+0x2c9c>
   35d2c:	rsbs	r3, r1, #255	; 0xff
   35d30:	rscs	r3, r2, #0
   35d34:	bcc	35d70 <__flatcc_fb_build_schema@@Base+0x2c9c>
   35d38:	mov	r3, r7
   35d3c:	mov	r4, #0
   35d40:	mov	r5, #1
   35d44:	ldr	lr, [r3, #112]!	; 0x70
   35d48:	ldr	ip, [r3, #4]
   35d4c:	eor	r6, r5, r0
   35d50:	orrs	r6, r6, r4
   35d54:	beq	35d90 <__flatcc_fb_build_schema@@Base+0x2cbc>
   35d58:	lsl	r4, r4, #1
   35d5c:	orr	r4, r4, r5, lsr #31
   35d60:	lsl	r5, r5, #1
   35d64:	subs	r6, r0, r5
   35d68:	rscs	r6, r4, #0
   35d6c:	bcs	35d4c <__flatcc_fb_build_schema@@Base+0x2c78>
   35d70:	ldr	r0, [pc, #500]	; 35f6c <__flatcc_fb_build_schema@@Base+0x2e98>
   35d74:	ldr	r1, [pc, #500]	; 35f70 <__flatcc_fb_build_schema@@Base+0x2e9c>
   35d78:	ldr	r3, [pc, #500]	; 35f74 <__flatcc_fb_build_schema@@Base+0x2ea0>
   35d7c:	mov	r2, #108	; 0x6c
   35d80:	add	r0, pc, r0
   35d84:	add	r1, pc, r1
   35d88:	add	r3, pc, r3
   35d8c:	bl	1497c <__assert_fail@plt>
   35d90:	adds	r1, r1, lr
   35d94:	mov	r4, #0
   35d98:	adc	r2, r2, ip
   35d9c:	rsbs	r0, r0, #0
   35da0:	and	r0, r1, r0
   35da4:	sbc	r1, r4, #0
   35da8:	and	r1, r2, r1
   35dac:	strd	r0, [r3]
   35db0:	ldrh	r0, [r7, #10]
   35db4:	orr	r0, r0, #2
   35db8:	bic	r0, r0, #1
   35dbc:	strh	r0, [r7, #10]
   35dc0:	ldr	r0, [sl, #396]	; 0x18c
   35dc4:	str	r0, [r7, #120]	; 0x78
   35dc8:	str	r7, [sl, #396]	; 0x18c
   35dcc:	b	35e88 <__flatcc_fb_build_schema@@Base+0x2db4>
   35dd0:	mov	r0, #0
   35dd4:	ldr	r1, [r8, #4]
   35dd8:	str	r0, [sp]
   35ddc:	str	r0, [sp, #4]
   35de0:	ldr	r2, [pc, #340]	; 35f3c <__flatcc_fb_build_schema@@Base+0x2e68>
   35de4:	ldr	r0, [sp, #16]
   35de8:	add	r2, pc, r2
   35dec:	b	35e0c <__flatcc_fb_build_schema@@Base+0x2d38>
   35df0:	mov	r0, #0
   35df4:	mov	r1, #0
   35df8:	str	r0, [sp]
   35dfc:	str	r0, [sp, #4]
   35e00:	mov	r0, sl
   35e04:	ldr	r2, [pc, #272]	; 35f1c <__flatcc_fb_build_schema@@Base+0x2e48>
   35e08:	add	r2, pc, r2
   35e0c:	mov	r3, #0
   35e10:	bl	29ee4 <__flatcc_error_report@@Base>
   35e14:	mvn	r4, #0
   35e18:	b	35e88 <__flatcc_fb_build_schema@@Base+0x2db4>
   35e1c:	cmp	r1, #1
   35e20:	beq	35e88 <__flatcc_fb_build_schema@@Base+0x2db4>
   35e24:	mov	r0, #0
   35e28:	ldr	r1, [r8, #4]
   35e2c:	str	r0, [sp]
   35e30:	str	r0, [sp, #4]
   35e34:	ldr	r2, [pc, #228]	; 35f20 <__flatcc_fb_build_schema@@Base+0x2e4c>
   35e38:	add	r2, pc, r2
   35e3c:	b	35e7c <__flatcc_fb_build_schema@@Base+0x2da8>
   35e40:	mov	r0, #0
   35e44:	str	r0, [r8, #16]
   35e48:	ldr	r1, [r8, #4]
   35e4c:	str	r0, [sp]
   35e50:	str	r0, [sp, #4]
   35e54:	ldr	r2, [pc, #200]	; 35f24 <__flatcc_fb_build_schema@@Base+0x2e50>
   35e58:	add	r2, pc, r2
   35e5c:	mov	r0, sl
   35e60:	b	35e84 <__flatcc_fb_build_schema@@Base+0x2db0>
   35e64:	mov	r0, #0
   35e68:	ldr	r1, [r8, #4]
   35e6c:	str	r0, [sp]
   35e70:	str	r0, [sp, #4]
   35e74:	ldr	r2, [pc, #188]	; 35f38 <__flatcc_fb_build_schema@@Base+0x2e64>
   35e78:	add	r2, pc, r2
   35e7c:	mov	r0, sl
   35e80:	mov	r3, #0
   35e84:	bl	29ee4 <__flatcc_error_report@@Base>
   35e88:	mov	r0, r4
   35e8c:	sub	sp, fp, #28
   35e90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35e94:	mov	r0, #0
   35e98:	ldr	r3, [r7, #4]
   35e9c:	ldr	r1, [r8, #4]
   35ea0:	str	r0, [sp]
   35ea4:	str	r0, [sp, #4]
   35ea8:	ldr	r2, [pc, #128]	; 35f30 <__flatcc_fb_build_schema@@Base+0x2e5c>
   35eac:	add	r2, pc, r2
   35eb0:	b	35e5c <__flatcc_fb_build_schema@@Base+0x2d88>
   35eb4:	mov	r4, r0
   35eb8:	b	35e88 <__flatcc_fb_build_schema@@Base+0x2db4>
   35ebc:	ldr	r0, [pc, #132]	; 35f48 <__flatcc_fb_build_schema@@Base+0x2e74>
   35ec0:	ldr	r1, [pc, #132]	; 35f4c <__flatcc_fb_build_schema@@Base+0x2e78>
   35ec4:	ldr	r3, [pc, #132]	; 35f50 <__flatcc_fb_build_schema@@Base+0x2e7c>
   35ec8:	movw	r2, #502	; 0x1f6
   35ecc:	add	r0, pc, r0
   35ed0:	add	r1, pc, r1
   35ed4:	add	r3, pc, r3
   35ed8:	bl	1497c <__assert_fail@plt>
   35edc:	ldr	r0, [pc, #112]	; 35f54 <__flatcc_fb_build_schema@@Base+0x2e80>
   35ee0:	ldr	r1, [pc, #112]	; 35f58 <__flatcc_fb_build_schema@@Base+0x2e84>
   35ee4:	ldr	r3, [pc, #112]	; 35f5c <__flatcc_fb_build_schema@@Base+0x2e88>
   35ee8:	mov	r2, #504	; 0x1f8
   35eec:	add	r0, pc, r0
   35ef0:	add	r1, pc, r1
   35ef4:	add	r3, pc, r3
   35ef8:	bl	1497c <__assert_fail@plt>
   35efc:	ldr	r0, [pc, #92]	; 35f60 <__flatcc_fb_build_schema@@Base+0x2e8c>
   35f00:	ldr	r1, [pc, #92]	; 35f64 <__flatcc_fb_build_schema@@Base+0x2e90>
   35f04:	ldr	r3, [pc, #92]	; 35f68 <__flatcc_fb_build_schema@@Base+0x2e94>
   35f08:	mov	r2, #508	; 0x1fc
   35f0c:	add	r0, pc, r0
   35f10:	add	r1, pc, r1
   35f14:	add	r3, pc, r3
   35f18:	bl	1497c <__assert_fail@plt>
   35f1c:	andeq	r1, r2, fp, asr #28
   35f20:	andeq	r1, r2, r4, ror #28
   35f24:	andeq	r1, r2, r4, asr #28
   35f28:	andeq	r2, r2, r8, lsl #29
   35f2c:	ldrdeq	r2, [r2], -r8
   35f30:	andeq	r1, r2, r0, lsl #28
   35f34:	andeq	r2, r2, r0, lsl r1
   35f38:	muleq	r2, fp, lr
   35f3c:	andeq	r1, r2, lr, asr #30
   35f40:	andeq	r2, r2, r7, lsr #5
   35f44:	andeq	r2, r2, sl, ror r0
   35f48:	andeq	pc, r0, lr, ror #31
   35f4c:	andeq	r1, r2, r4, lsl #8
   35f50:	andeq	r1, r2, r5, lsl sp
   35f54:	andeq	r1, r2, r5, lsr sp
   35f58:	andeq	r1, r2, r4, ror #7
   35f5c:	strdeq	r1, [r2], -r5
   35f60:	andeq	r1, r2, ip, lsr sp
   35f64:	andeq	r1, r2, r4, asr #7
   35f68:	ldrdeq	r1, [r2], -r5
   35f6c:	andeq	r2, r2, r9, lsr r0
   35f70:	andeq	r1, r2, r0, asr r5
   35f74:	andeq	r2, r2, r7, asr #32
   35f78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35f7c:	add	fp, sp, #28
   35f80:	sub	sp, sp, #12
   35f84:	vmov.i32	q8, #0	; 0x00000000
   35f88:	mov	r5, r1
   35f8c:	mov	r4, r0
   35f90:	mov	r0, #32
   35f94:	mov	r1, r3
   35f98:	cmp	r5, #0
   35f9c:	vst1.32	{d16-d17}, [r1], r0
   35fa0:	add	r0, r3, #16
   35fa4:	vst1.32	{d16-d17}, [r1]
   35fa8:	vst1.32	{d16-d17}, [r0]
   35fac:	beq	36174 <__flatcc_fb_build_schema@@Base+0x30a0>
   35fb0:	mov	r6, r3
   35fb4:	mov	r7, r2
   35fb8:	mov	sl, #0
   35fbc:	mvn	r8, #98	; 0x62
   35fc0:	mov	r9, #0
   35fc4:	b	35ffc <__flatcc_fb_build_schema@@Base+0x2f28>
   35fc8:	ldr	r1, [r5, #4]
   35fcc:	str	sl, [sp]
   35fd0:	str	sl, [sp, #4]
   35fd4:	mov	r0, r4
   35fd8:	ldr	r2, [pc, #420]	; 36184 <__flatcc_fb_build_schema@@Base+0x30b0>
   35fdc:	add	r2, pc, r2
   35fe0:	mov	r3, #0
   35fe4:	bl	29ee4 <__flatcc_error_report@@Base>
   35fe8:	ldr	r5, [r5]
   35fec:	cmp	r8, #0
   35ff0:	addne	r8, r8, #1
   35ff4:	cmpne	r5, #0
   35ff8:	beq	36144 <__flatcc_fb_build_schema@@Base+0x3070>
   35ffc:	ldr	r0, [r5, #4]
   36000:	ldm	r0, {r1, r2}
   36004:	ldr	r0, [r4, #412]	; 0x19c
   36008:	add	r0, r0, #16
   3600c:	bl	3cdf0 <fb_name_table_find@@Base>
   36010:	cmp	r0, #0
   36014:	beq	35fc8 <__flatcc_fb_build_schema@@Base+0x2ef4>
   36018:	ldr	r0, [r0, #24]
   3601c:	cmp	r0, #0
   36020:	beq	35fe8 <__flatcc_fb_build_schema@@Base+0x2f14>
   36024:	mov	r1, #1
   36028:	tst	r7, r1, lsl r0
   3602c:	beq	36064 <__flatcc_fb_build_schema@@Base+0x2f90>
   36030:	ldr	r2, [r6, r0, lsl #2]
   36034:	mov	r3, #1
   36038:	lsl	r1, r3, r0
   3603c:	orr	r9, r9, r1
   36040:	cmp	r2, #0
   36044:	beq	36080 <__flatcc_fb_build_schema@@Base+0x2fac>
   36048:	ldr	r1, [r5, #4]
   3604c:	str	sl, [sp]
   36050:	str	sl, [sp, #4]
   36054:	mov	r0, r4
   36058:	ldr	r2, [pc, #300]	; 3618c <__flatcc_fb_build_schema@@Base+0x30b8>
   3605c:	add	r2, pc, r2
   36060:	b	35fe0 <__flatcc_fb_build_schema@@Base+0x2f0c>
   36064:	ldr	r1, [r5, #4]
   36068:	str	sl, [sp]
   3606c:	str	sl, [sp, #4]
   36070:	mov	r0, r4
   36074:	ldr	r2, [pc, #268]	; 36188 <__flatcc_fb_build_schema@@Base+0x30b4>
   36078:	add	r2, pc, r2
   3607c:	b	35fe0 <__flatcc_fb_build_schema@@Base+0x2f0c>
   36080:	movw	r1, #3500	; 0xdac
   36084:	str	r5, [r6, r0, lsl #2]
   36088:	tst	r3, r1, lsr r0
   3608c:	beq	360b8 <__flatcc_fb_build_schema@@Base+0x2fe4>
   36090:	ldrh	r1, [r5, #16]
   36094:	cmp	r1, #0
   36098:	beq	360b8 <__flatcc_fb_build_schema@@Base+0x2fe4>
   3609c:	ldr	r1, [r5, #4]
   360a0:	str	sl, [sp]
   360a4:	str	sl, [sp, #4]
   360a8:	mov	r0, r4
   360ac:	ldr	r2, [pc, #220]	; 36190 <__flatcc_fb_build_schema@@Base+0x30bc>
   360b0:	add	r2, pc, r2
   360b4:	b	35fe0 <__flatcc_fb_build_schema@@Base+0x2f0c>
   360b8:	sub	r0, r0, #1
   360bc:	cmp	r0, #8
   360c0:	bhi	35fe8 <__flatcc_fb_build_schema@@Base+0x2f14>
   360c4:	add	r1, pc, #4
   360c8:	ldr	r0, [r1, r0, lsl #2]
   360cc:	add	pc, r1, r0
   360d0:	andeq	r0, r0, r4, lsr #32
   360d4:			; <UNDEFINED> instruction: 0xffffff18
   360d8:			; <UNDEFINED> instruction: 0xffffff18
   360dc:	andeq	r0, r0, r4, lsr #32
   360e0:			; <UNDEFINED> instruction: 0xffffff18
   360e4:	andeq	r0, r0, ip, asr #32
   360e8:			; <UNDEFINED> instruction: 0xffffff18
   360ec:			; <UNDEFINED> instruction: 0xffffff18
   360f0:	andeq	r0, r0, ip, asr #32
   360f4:	ldrh	r0, [r5, #16]
   360f8:	cmp	r0, #5
   360fc:	beq	35fe8 <__flatcc_fb_build_schema@@Base+0x2f14>
   36100:	ldr	r1, [r5, #4]
   36104:	str	sl, [sp]
   36108:	str	sl, [sp, #4]
   3610c:	mov	r0, r4
   36110:	ldr	r2, [pc, #128]	; 36198 <__flatcc_fb_build_schema@@Base+0x30c4>
   36114:	add	r2, pc, r2
   36118:	b	35fe0 <__flatcc_fb_build_schema@@Base+0x2f0c>
   3611c:	ldrh	r0, [r5, #16]
   36120:	cmp	r0, #2
   36124:	beq	35fe8 <__flatcc_fb_build_schema@@Base+0x2f14>
   36128:	ldr	r1, [r5, #4]
   3612c:	str	sl, [sp]
   36130:	str	sl, [sp, #4]
   36134:	mov	r0, r4
   36138:	ldr	r2, [pc, #84]	; 36194 <__flatcc_fb_build_schema@@Base+0x30c0>
   3613c:	add	r2, pc, r2
   36140:	b	35fe0 <__flatcc_fb_build_schema@@Base+0x2f0c>
   36144:	cmp	r5, #0
   36148:	beq	36178 <__flatcc_fb_build_schema@@Base+0x30a4>
   3614c:	mov	r0, #0
   36150:	ldr	r1, [r5, #4]
   36154:	mov	r3, #0
   36158:	str	r0, [sp]
   3615c:	str	r0, [sp, #4]
   36160:	mov	r0, r4
   36164:	ldr	r2, [pc, #48]	; 3619c <__flatcc_fb_build_schema@@Base+0x30c8>
   36168:	add	r2, pc, r2
   3616c:	bl	29ee4 <__flatcc_error_report@@Base>
   36170:	b	36178 <__flatcc_fb_build_schema@@Base+0x30a4>
   36174:	mov	r9, #0
   36178:	uxth	r0, r9
   3617c:	sub	sp, fp, #28
   36180:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36184:	ldrdeq	r1, [r2], -r3
   36188:	andeq	r1, r2, r6, asr r8
   3618c:	muleq	r2, pc, r8	; <UNPREDICTABLE>
   36190:	andeq	r1, r2, r1, ror r8
   36194:	andeq	r1, r2, sp, lsl #16
   36198:	andeq	r1, r2, r6, asr r8
   3619c:	andeq	r1, r2, lr, lsr #16
   361a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   361a4:	add	fp, sp, #28
   361a8:	sub	sp, sp, #4
   361ac:	mov	r5, r1
   361b0:	mov	sl, r0
   361b4:	cmp	r2, #0
   361b8:	beq	361e4 <__flatcc_fb_build_schema@@Base+0x3110>
   361bc:	mov	r7, #0
   361c0:	mov	r1, r2
   361c4:	mov	r0, #0
   361c8:	mov	r6, r0
   361cc:	mov	r0, r1
   361d0:	ldr	r1, [r1]
   361d4:	add	r7, r7, #1
   361d8:	cmp	r1, #0
   361dc:	bne	361c8 <__flatcc_fb_build_schema@@Base+0x30f4>
   361e0:	b	361f0 <__flatcc_fb_build_schema@@Base+0x311c>
   361e4:	mov	r6, #0
   361e8:	mov	r0, #0
   361ec:	mov	r7, #0
   361f0:	cmp	r3, #0
   361f4:	mov	r9, #0
   361f8:	moveq	r6, r0
   361fc:	strne	r0, [r3]
   36200:	subne	r7, r7, #1
   36204:	cmp	r6, #0
   36208:	beq	3634c <__flatcc_fb_build_schema@@Base+0x3278>
   3620c:	cmp	r5, #0
   36210:	beq	362e4 <__flatcc_fb_build_schema@@Base+0x3210>
   36214:	cmp	r7, #1
   36218:	bne	362e4 <__flatcc_fb_build_schema@@Base+0x3210>
   3621c:	add	r8, sl, #524	; 0x20c
   36220:	b	36244 <__flatcc_fb_build_schema@@Base+0x3170>
   36224:	cmp	r0, #0
   36228:	beq	36348 <__flatcc_fb_build_schema@@Base+0x3274>
   3622c:	mov	r1, #0
   36230:	mov	r2, #0
   36234:	bl	28760 <fb_scope_table_find@@Base>
   36238:	cmp	r0, #0
   3623c:	mov	r5, r0
   36240:	beq	36348 <__flatcc_fb_build_schema@@Base+0x3274>
   36244:	ldr	r0, [r6, #4]
   36248:	ldm	r0, {r1, r2}
   3624c:	add	r0, r5, #4
   36250:	bl	27d88 <fb_symbol_table_find@@Base>
   36254:	cmp	r0, #0
   36258:	beq	36280 <__flatcc_fb_build_schema@@Base+0x31ac>
   3625c:	mov	r9, r0
   36260:	ldrh	r0, [r0, #8]
   36264:	cmp	r0, #4
   36268:	bhi	36280 <__flatcc_fb_build_schema@@Base+0x31ac>
   3626c:	ldr	r1, [r9, #16]
   36270:	mov	r0, r8
   36274:	bl	276f8 <ptr_set_find_item@@Base>
   36278:	cmp	r0, #0
   3627c:	bne	3634c <__flatcc_fb_build_schema@@Base+0x3278>
   36280:	ldr	r0, [r5]
   36284:	cmp	r0, #0
   36288:	beq	36348 <__flatcc_fb_build_schema@@Base+0x3274>
   3628c:	mov	r4, #0
   36290:	ldr	r0, [r0]
   36294:	mov	r1, r4
   36298:	add	r4, r4, #1
   3629c:	cmp	r0, #0
   362a0:	bne	36290 <__flatcc_fb_build_schema@@Base+0x31bc>
   362a4:	rsb	r7, r1, #0
   362a8:	b	362c8 <__flatcc_fb_build_schema@@Base+0x31f4>
   362ac:	ldr	r1, [r5]
   362b0:	mov	r2, r7
   362b4:	bl	28760 <fb_scope_table_find@@Base>
   362b8:	sub	r4, r4, #1
   362bc:	add	r7, r7, #1
   362c0:	cmp	r0, #0
   362c4:	bne	36238 <__flatcc_fb_build_schema@@Base+0x3164>
   362c8:	ldr	r0, [sl, #412]	; 0x19c
   362cc:	cmp	r4, #2
   362d0:	blt	36224 <__flatcc_fb_build_schema@@Base+0x3150>
   362d4:	cmp	r0, #0
   362d8:	bne	362ac <__flatcc_fb_build_schema@@Base+0x31d8>
   362dc:	mov	r0, #0
   362e0:	b	362b8 <__flatcc_fb_build_schema@@Base+0x31e4>
   362e4:	ldr	r0, [sl, #412]	; 0x19c
   362e8:	cmp	r0, #0
   362ec:	beq	3634c <__flatcc_fb_build_schema@@Base+0x3278>
   362f0:	subs	r1, r7, #1
   362f4:	movne	r1, r2
   362f8:	rsb	r2, r7, #1
   362fc:	bl	28760 <fb_scope_table_find@@Base>
   36300:	cmp	r0, #0
   36304:	beq	3634c <__flatcc_fb_build_schema@@Base+0x3278>
   36308:	ldr	r2, [r6, #4]
   3630c:	add	r0, r0, #4
   36310:	ldm	r2, {r1, r2}
   36314:	bl	27d88 <fb_symbol_table_find@@Base>
   36318:	cmp	r0, #0
   3631c:	beq	36348 <__flatcc_fb_build_schema@@Base+0x3274>
   36320:	mov	r9, r0
   36324:	ldrh	r0, [r0, #8]
   36328:	cmp	r0, #4
   3632c:	bhi	36348 <__flatcc_fb_build_schema@@Base+0x3274>
   36330:	ldr	r1, [r9, #16]
   36334:	add	r0, sl, #524	; 0x20c
   36338:	bl	276f8 <ptr_set_find_item@@Base>
   3633c:	cmp	r0, #0
   36340:	moveq	r9, #0
   36344:	b	3634c <__flatcc_fb_build_schema@@Base+0x3278>
   36348:	mov	r9, #0
   3634c:	mov	r0, r9
   36350:	sub	sp, fp, #28
   36354:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00036358 <__flatcc_fb_coerce_scalar_type@@Base>:
   36358:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3635c:	add	fp, sp, #28
   36360:	sub	sp, sp, #20
   36364:	mov	r4, r3
   36368:	mov	sl, r0
   3636c:	mov	r5, #0
   36370:	ldrh	r0, [r4, #8]!
   36374:	cmp	r0, #2
   36378:	bcc	3695c <__flatcc_fb_coerce_scalar_type@@Base+0x604>
   3637c:	mov	r7, r3
   36380:	mov	r6, r1
   36384:	cmp	r0, #4
   36388:	bne	363b4 <__flatcc_fb_coerce_scalar_type@@Base+0x5c>
   3638c:	ldrd	r8, [r7]
   36390:	mvn	r0, #127	; 0x7f
   36394:	mvn	r3, #0
   36398:	orr	r1, r0, #127	; 0x7f
   3639c:	mov	r0, #4
   363a0:	subs	r1, r1, r8
   363a4:	sbcs	r1, r3, r9
   363a8:	movlt	r0, #5
   363ac:	strhlt	r0, [r4]
   363b0:	b	36414 <__flatcc_fb_coerce_scalar_type@@Base+0xbc>
   363b4:	cmp	r2, #5
   363b8:	beq	36414 <__flatcc_fb_coerce_scalar_type@@Base+0xbc>
   363bc:	cmp	r0, #6
   363c0:	bne	36414 <__flatcc_fb_coerce_scalar_type@@Base+0xbc>
   363c4:	ldr	r0, [sl, #144]	; 0x90
   363c8:	cmp	r0, #0
   363cc:	beq	36410 <__flatcc_fb_coerce_scalar_type@@Base+0xb8>
   363d0:	mov	r0, #0
   363d4:	str	r0, [r7, #4]
   363d8:	mov	r0, #5
   363dc:	strh	r0, [r7, #8]
   363e0:	ldrb	r1, [r7]
   363e4:	cmp	r1, #2
   363e8:	str	r1, [r7]
   363ec:	bcc	36414 <__flatcc_fb_coerce_scalar_type@@Base+0xbc>
   363f0:	ldr	r0, [pc, #1492]	; 369cc <__flatcc_fb_coerce_scalar_type@@Base+0x674>
   363f4:	ldr	r1, [pc, #1492]	; 369d0 <__flatcc_fb_coerce_scalar_type@@Base+0x678>
   363f8:	ldr	r3, [pc, #1492]	; 369d4 <__flatcc_fb_coerce_scalar_type@@Base+0x67c>
   363fc:	mov	r2, #52	; 0x34
   36400:	add	r0, pc, r0
   36404:	add	r1, pc, r1
   36408:	add	r3, pc, r3
   3640c:	bl	1497c <__assert_fail@plt>
   36410:	mov	r0, #6
   36414:	sub	r1, r2, #1
   36418:	cmp	r1, #10
   3641c:	bhi	366cc <__flatcc_fb_coerce_scalar_type@@Base+0x374>
   36420:	add	r2, pc, #4
   36424:	ldr	r1, [r2, r1, lsl #2]
   36428:	add	pc, r2, r1
   3642c:	andeq	r0, r0, ip, lsr #32
   36430:	andeq	r0, r0, ip, ror r1
   36434:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   36438:	andeq	r0, r0, r4, lsl #2
   3643c:	andeq	r0, r0, r0, asr r0
   36440:	andeq	r0, r0, ip, lsr #3
   36444:	andeq	r0, r0, r4, ror #3
   36448:	andeq	r0, r0, r8, lsr r1
   3644c:	andeq	r0, r0, r8, lsr #4
   36450:	muleq	r0, r8, r0
   36454:	andeq	r0, r0, ip, ror #4
   36458:	cmp	r0, #5
   3645c:	beq	3695c <__flatcc_fb_coerce_scalar_type@@Base+0x604>
   36460:	mov	r0, #0
   36464:	ldr	r1, [r6, #4]
   36468:	str	r0, [sp]
   3646c:	str	r0, [sp, #4]
   36470:	ldr	r2, [pc, #1264]	; 36968 <__flatcc_fb_coerce_scalar_type@@Base+0x610>
   36474:	add	r2, pc, r2
   36478:	b	36944 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   3647c:	cmp	r0, #6
   36480:	beq	3695c <__flatcc_fb_coerce_scalar_type@@Base+0x604>
   36484:	cmp	r0, #5
   36488:	bne	3673c <__flatcc_fb_coerce_scalar_type@@Base+0x3e4>
   3648c:	ldr	r0, [sl, #144]	; 0x90
   36490:	cmp	r0, #0
   36494:	beq	3673c <__flatcc_fb_coerce_scalar_type@@Base+0x3e4>
   36498:	ldrd	r0, [r7]
   3649c:	subs	r0, r0, #2
   364a0:	sbcs	r0, r1, #0
   364a4:	bcc	3695c <__flatcc_fb_coerce_scalar_type@@Base+0x604>
   364a8:	mov	r0, #0
   364ac:	ldr	r1, [r6, #4]
   364b0:	str	r0, [sp]
   364b4:	str	r0, [sp, #4]
   364b8:	ldr	r2, [pc, #1264]	; 369b0 <__flatcc_fb_coerce_scalar_type@@Base+0x658>
   364bc:	add	r2, pc, r2
   364c0:	b	36944 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   364c4:	cmp	r0, #3
   364c8:	beq	3695c <__flatcc_fb_coerce_scalar_type@@Base+0x604>
   364cc:	cmp	r0, #5
   364d0:	beq	36854 <__flatcc_fb_coerce_scalar_type@@Base+0x4fc>
   364d4:	cmp	r0, #4
   364d8:	bne	368b0 <__flatcc_fb_coerce_scalar_type@@Base+0x558>
   364dc:	ldrd	r8, [r7]
   364e0:	mov	r0, r8
   364e4:	mov	r1, r9
   364e8:	bl	3dc7c <fb_value_set_visit@@Base+0x3bc>
   364ec:	str	r0, [sp, #16]
   364f0:	str	r1, [sp, #12]
   364f4:	bl	3dfa4 <fb_value_set_visit@@Base+0x6e4>
   364f8:	b	36870 <__flatcc_fb_coerce_scalar_type@@Base+0x518>
   364fc:	cmp	r0, #5
   36500:	bne	366e8 <__flatcc_fb_coerce_scalar_type@@Base+0x390>
   36504:	ldrd	r0, [r7]
   36508:	subs	r0, r0, #65536	; 0x10000
   3650c:	sbcs	r0, r1, #0
   36510:	bcc	3695c <__flatcc_fb_coerce_scalar_type@@Base+0x604>
   36514:	mov	r0, #0
   36518:	ldr	r1, [r6, #4]
   3651c:	str	r0, [sp]
   36520:	str	r0, [sp, #4]
   36524:	ldr	r2, [pc, #1100]	; 36978 <__flatcc_fb_coerce_scalar_type@@Base+0x620>
   36528:	add	r2, pc, r2
   3652c:	b	36944 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   36530:	cmp	r0, #5
   36534:	bne	36704 <__flatcc_fb_coerce_scalar_type@@Base+0x3ac>
   36538:	ldrd	r0, [r7]
   3653c:	subs	r0, r0, #256	; 0x100
   36540:	sbcs	r0, r1, #0
   36544:	bcc	3695c <__flatcc_fb_coerce_scalar_type@@Base+0x604>
   36548:	mov	r0, #0
   3654c:	ldr	r1, [r6, #4]
   36550:	str	r0, [sp]
   36554:	str	r0, [sp, #4]
   36558:	ldr	r2, [pc, #1056]	; 36980 <__flatcc_fb_coerce_scalar_type@@Base+0x628>
   3655c:	add	r2, pc, r2
   36560:	b	36944 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   36564:	cmp	r0, #5
   36568:	beq	36758 <__flatcc_fb_coerce_scalar_type@@Base+0x400>
   3656c:	cmp	r0, #4
   36570:	bne	367e4 <__flatcc_fb_coerce_scalar_type@@Base+0x48c>
   36574:	ldrd	r0, [r7]
   36578:	mvn	r3, #32768	; 0x8000
   3657c:	mvn	r2, #0
   36580:	subs	r0, r3, r0
   36584:	sbcs	r0, r2, r1
   36588:	blt	3695c <__flatcc_fb_coerce_scalar_type@@Base+0x604>
   3658c:	mov	r0, #0
   36590:	ldr	r1, [r6, #4]
   36594:	str	r0, [sp]
   36598:	str	r0, [sp, #4]
   3659c:	ldr	r2, [pc, #1012]	; 36998 <__flatcc_fb_coerce_scalar_type@@Base+0x640>
   365a0:	add	r2, pc, r2
   365a4:	b	36944 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   365a8:	cmp	r0, #5
   365ac:	bne	36720 <__flatcc_fb_coerce_scalar_type@@Base+0x3c8>
   365b0:	ldr	r0, [r7, #4]
   365b4:	cmp	r0, #0
   365b8:	beq	3695c <__flatcc_fb_coerce_scalar_type@@Base+0x604>
   365bc:	mov	r0, #0
   365c0:	ldr	r1, [r6, #4]
   365c4:	str	r0, [sp]
   365c8:	str	r0, [sp, #4]
   365cc:	ldr	r2, [pc, #924]	; 36970 <__flatcc_fb_coerce_scalar_type@@Base+0x618>
   365d0:	add	r2, pc, r2
   365d4:	b	36944 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   365d8:	cmp	r0, #4
   365dc:	beq	3695c <__flatcc_fb_coerce_scalar_type@@Base+0x604>
   365e0:	cmp	r0, #5
   365e4:	bne	36800 <__flatcc_fb_coerce_scalar_type@@Base+0x4a8>
   365e8:	ldr	r0, [r7, #4]
   365ec:	cmn	r0, #1
   365f0:	bgt	367dc <__flatcc_fb_coerce_scalar_type@@Base+0x484>
   365f4:	mov	r0, #0
   365f8:	ldr	r1, [r6, #4]
   365fc:	str	r0, [sp]
   36600:	str	r0, [sp, #4]
   36604:	ldr	r2, [pc, #888]	; 36984 <__flatcc_fb_coerce_scalar_type@@Base+0x62c>
   36608:	add	r2, pc, r2
   3660c:	b	36944 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   36610:	cmp	r0, #5
   36614:	beq	36784 <__flatcc_fb_coerce_scalar_type@@Base+0x42c>
   36618:	cmp	r0, #4
   3661c:	bne	3681c <__flatcc_fb_coerce_scalar_type@@Base+0x4c4>
   36620:	ldrd	r0, [r7]
   36624:	mvn	r3, #-2147483648	; 0x80000000
   36628:	mvn	r2, #0
   3662c:	subs	r0, r3, r0
   36630:	sbcs	r0, r2, r1
   36634:	blt	3695c <__flatcc_fb_coerce_scalar_type@@Base+0x604>
   36638:	mov	r0, #0
   3663c:	ldr	r1, [r6, #4]
   36640:	str	r0, [sp]
   36644:	str	r0, [sp, #4]
   36648:	ldr	r2, [pc, #828]	; 3698c <__flatcc_fb_coerce_scalar_type@@Base+0x634>
   3664c:	add	r2, pc, r2
   36650:	b	36944 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   36654:	cmp	r0, #5
   36658:	beq	367b0 <__flatcc_fb_coerce_scalar_type@@Base+0x458>
   3665c:	cmp	r0, #4
   36660:	bne	36838 <__flatcc_fb_coerce_scalar_type@@Base+0x4e0>
   36664:	ldrd	r0, [r7]
   36668:	mvn	r3, #128	; 0x80
   3666c:	mvn	r2, #0
   36670:	subs	r0, r3, r0
   36674:	sbcs	r0, r2, r1
   36678:	blt	3695c <__flatcc_fb_coerce_scalar_type@@Base+0x604>
   3667c:	mov	r0, #0
   36680:	ldr	r1, [r6, #4]
   36684:	str	r0, [sp]
   36688:	str	r0, [sp, #4]
   3668c:	ldr	r2, [pc, #784]	; 369a4 <__flatcc_fb_coerce_scalar_type@@Base+0x64c>
   36690:	add	r2, pc, r2
   36694:	b	36944 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   36698:	cmp	r0, #3
   3669c:	beq	3695c <__flatcc_fb_coerce_scalar_type@@Base+0x604>
   366a0:	cmp	r0, #5
   366a4:	beq	368cc <__flatcc_fb_coerce_scalar_type@@Base+0x574>
   366a8:	cmp	r0, #4
   366ac:	bne	3692c <__flatcc_fb_coerce_scalar_type@@Base+0x5d4>
   366b0:	ldrd	r8, [r7]
   366b4:	mov	r0, r8
   366b8:	mov	r1, r9
   366bc:	bl	3deb0 <fb_value_set_visit@@Base+0x5f0>
   366c0:	str	r0, [sp, #16]
   366c4:	bl	3df78 <fb_value_set_visit@@Base+0x6b8>
   366c8:	b	368e4 <__flatcc_fb_coerce_scalar_type@@Base+0x58c>
   366cc:	mov	r0, #0
   366d0:	ldr	r1, [r6, #4]
   366d4:	str	r0, [sp]
   366d8:	str	r0, [sp, #4]
   366dc:	ldr	r2, [pc, #740]	; 369c8 <__flatcc_fb_coerce_scalar_type@@Base+0x670>
   366e0:	add	r2, pc, r2
   366e4:	b	36944 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   366e8:	mov	r0, #0
   366ec:	ldr	r1, [r6, #4]
   366f0:	str	r0, [sp]
   366f4:	str	r0, [sp, #4]
   366f8:	ldr	r2, [pc, #628]	; 36974 <__flatcc_fb_coerce_scalar_type@@Base+0x61c>
   366fc:	add	r2, pc, r2
   36700:	b	36944 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   36704:	mov	r0, #0
   36708:	ldr	r1, [r6, #4]
   3670c:	str	r0, [sp]
   36710:	str	r0, [sp, #4]
   36714:	ldr	r2, [pc, #608]	; 3697c <__flatcc_fb_coerce_scalar_type@@Base+0x624>
   36718:	add	r2, pc, r2
   3671c:	b	36944 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   36720:	mov	r0, #0
   36724:	ldr	r1, [r6, #4]
   36728:	str	r0, [sp]
   3672c:	str	r0, [sp, #4]
   36730:	ldr	r2, [pc, #564]	; 3696c <__flatcc_fb_coerce_scalar_type@@Base+0x614>
   36734:	add	r2, pc, r2
   36738:	b	36944 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   3673c:	mov	r0, #0
   36740:	ldr	r1, [r6, #4]
   36744:	str	r0, [sp]
   36748:	str	r0, [sp, #4]
   3674c:	ldr	r2, [pc, #608]	; 369b4 <__flatcc_fb_coerce_scalar_type@@Base+0x65c>
   36750:	add	r2, pc, r2
   36754:	b	36944 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   36758:	ldrd	r0, [r7]
   3675c:	subs	r0, r0, #32768	; 0x8000
   36760:	sbcs	r0, r1, #0
   36764:	blt	367dc <__flatcc_fb_coerce_scalar_type@@Base+0x484>
   36768:	mov	r0, #0
   3676c:	ldr	r1, [r6, #4]
   36770:	str	r0, [sp]
   36774:	str	r0, [sp, #4]
   36778:	ldr	r2, [pc, #540]	; 3699c <__flatcc_fb_coerce_scalar_type@@Base+0x644>
   3677c:	add	r2, pc, r2
   36780:	b	36944 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   36784:	ldrd	r0, [r7]
   36788:	subs	r0, r0, #-2147483648	; 0x80000000
   3678c:	sbcs	r0, r1, #0
   36790:	blt	367dc <__flatcc_fb_coerce_scalar_type@@Base+0x484>
   36794:	mov	r0, #0
   36798:	ldr	r1, [r6, #4]
   3679c:	str	r0, [sp]
   367a0:	str	r0, [sp, #4]
   367a4:	ldr	r2, [pc, #484]	; 36990 <__flatcc_fb_coerce_scalar_type@@Base+0x638>
   367a8:	add	r2, pc, r2
   367ac:	b	36944 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   367b0:	ldrd	r0, [r7]
   367b4:	subs	r0, r0, #128	; 0x80
   367b8:	sbcs	r0, r1, #0
   367bc:	blt	367dc <__flatcc_fb_coerce_scalar_type@@Base+0x484>
   367c0:	mov	r0, #0
   367c4:	ldr	r1, [r6, #4]
   367c8:	str	r0, [sp]
   367cc:	str	r0, [sp, #4]
   367d0:	ldr	r2, [pc, #464]	; 369a8 <__flatcc_fb_coerce_scalar_type@@Base+0x650>
   367d4:	add	r2, pc, r2
   367d8:	b	36944 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   367dc:	mov	r0, #4
   367e0:	b	36958 <__flatcc_fb_coerce_scalar_type@@Base+0x600>
   367e4:	mov	r0, #0
   367e8:	ldr	r1, [r6, #4]
   367ec:	str	r0, [sp]
   367f0:	str	r0, [sp, #4]
   367f4:	ldr	r2, [pc, #420]	; 369a0 <__flatcc_fb_coerce_scalar_type@@Base+0x648>
   367f8:	add	r2, pc, r2
   367fc:	b	36944 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   36800:	mov	r0, #0
   36804:	ldr	r1, [r6, #4]
   36808:	str	r0, [sp]
   3680c:	str	r0, [sp, #4]
   36810:	ldr	r2, [pc, #368]	; 36988 <__flatcc_fb_coerce_scalar_type@@Base+0x630>
   36814:	add	r2, pc, r2
   36818:	b	36944 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   3681c:	mov	r0, #0
   36820:	ldr	r1, [r6, #4]
   36824:	str	r0, [sp]
   36828:	str	r0, [sp, #4]
   3682c:	ldr	r2, [pc, #352]	; 36994 <__flatcc_fb_coerce_scalar_type@@Base+0x63c>
   36830:	add	r2, pc, r2
   36834:	b	36944 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   36838:	mov	r0, #0
   3683c:	ldr	r1, [r6, #4]
   36840:	str	r0, [sp]
   36844:	str	r0, [sp, #4]
   36848:	ldr	r2, [pc, #348]	; 369ac <__flatcc_fb_coerce_scalar_type@@Base+0x654>
   3684c:	add	r2, pc, r2
   36850:	b	36944 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   36854:	ldrd	r8, [r7]
   36858:	mov	r0, r8
   3685c:	mov	r1, r9
   36860:	bl	3dc68 <fb_value_set_visit@@Base+0x3a8>
   36864:	str	r0, [sp, #16]
   36868:	str	r1, [sp, #12]
   3686c:	bl	3e010 <fb_value_set_visit@@Base+0x750>
   36870:	eor	r1, r9, r1
   36874:	eor	r0, r8, r0
   36878:	orrs	r0, r0, r1
   3687c:	bne	36894 <__flatcc_fb_coerce_scalar_type@@Base+0x53c>
   36880:	ldr	r0, [sp, #16]
   36884:	ldr	r1, [sp, #12]
   36888:	vmov	d16, r0, r1
   3688c:	mov	r0, #3
   36890:	b	36904 <__flatcc_fb_coerce_scalar_type@@Base+0x5ac>
   36894:	mov	r0, #0
   36898:	ldr	r1, [r6, #4]
   3689c:	str	r0, [sp]
   368a0:	str	r0, [sp, #4]
   368a4:	ldr	r2, [pc, #268]	; 369b8 <__flatcc_fb_coerce_scalar_type@@Base+0x660>
   368a8:	add	r2, pc, r2
   368ac:	b	36944 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   368b0:	mov	r0, #0
   368b4:	ldr	r1, [r6, #4]
   368b8:	str	r0, [sp]
   368bc:	str	r0, [sp, #4]
   368c0:	ldr	r2, [pc, #244]	; 369bc <__flatcc_fb_coerce_scalar_type@@Base+0x664>
   368c4:	add	r2, pc, r2
   368c8:	b	36944 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   368cc:	ldrd	r8, [r7]
   368d0:	mov	r0, r8
   368d4:	mov	r1, r9
   368d8:	bl	3dea0 <fb_value_set_visit@@Base+0x5e0>
   368dc:	str	r0, [sp, #16]
   368e0:	bl	3dfd0 <fb_value_set_visit@@Base+0x710>
   368e4:	eor	r1, r9, r1
   368e8:	eor	r0, r8, r0
   368ec:	orrs	r0, r0, r1
   368f0:	bne	36910 <__flatcc_fb_coerce_scalar_type@@Base+0x5b8>
   368f4:	ldr	r0, [sp, #16]
   368f8:	vmov	s0, r0
   368fc:	mov	r0, #3
   36900:	vcvt.f64.f32	d16, s0
   36904:	strh	r0, [r7, #8]
   36908:	vstr	d16, [r7]
   3690c:	b	3695c <__flatcc_fb_coerce_scalar_type@@Base+0x604>
   36910:	mov	r0, #0
   36914:	ldr	r1, [r6, #4]
   36918:	str	r0, [sp]
   3691c:	str	r0, [sp, #4]
   36920:	ldr	r2, [pc, #152]	; 369c0 <__flatcc_fb_coerce_scalar_type@@Base+0x668>
   36924:	add	r2, pc, r2
   36928:	b	36944 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   3692c:	mov	r0, #0
   36930:	ldr	r1, [r6, #4]
   36934:	str	r0, [sp]
   36938:	str	r0, [sp, #4]
   3693c:	ldr	r2, [pc, #128]	; 369c4 <__flatcc_fb_coerce_scalar_type@@Base+0x66c>
   36940:	add	r2, pc, r2
   36944:	mov	r0, sl
   36948:	mov	r3, #0
   3694c:	bl	29ee4 <__flatcc_error_report@@Base>
   36950:	mov	r0, #1
   36954:	mvn	r5, #0
   36958:	strh	r0, [r4]
   3695c:	mov	r0, r5
   36960:	sub	sp, fp, #28
   36964:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36968:			; <UNDEFINED> instruction: 0x000226b9
   3696c:	andeq	r2, r2, sp, lsr #8
   36970:	andeq	r2, r2, r9, asr #11
   36974:			; <UNDEFINED> instruction: 0x000224ba
   36978:	andeq	r2, r2, r8, asr #13
   3697c:	strdeq	r2, [r2], -r7
   36980:	andeq	r2, r2, fp, ror #13
   36984:	andeq	r2, r2, ip, asr r6
   36988:	andeq	r2, r2, pc, ror #8
   3698c:	andeq	r2, r2, r1, ror #12
   36990:	andeq	r2, r2, r1, lsr #10
   36994:			; <UNDEFINED> instruction: 0x000224b4
   36998:	andeq	r2, r2, r1, ror r7
   3699c:			; <UNDEFINED> instruction: 0x000225b3
   369a0:	andeq	r2, r2, r4, asr r5
   369a4:	andeq	r2, r2, fp, ror #13
   369a8:	andeq	r2, r2, r3, asr #11
   369ac:	andeq	r2, r2, r6, ror #10
   369b0:	andeq	r2, r2, r3, lsr #18
   369b4:	andeq	r2, r2, sp, asr #13
   369b8:	andeq	r2, r2, fp, lsr #11
   369bc:			; <UNDEFINED> instruction: 0x000225bf
   369c0:	muleq	r2, r8, r5
   369c4:	andeq	r2, r2, fp, lsr #11
   369c8:	andeq	r2, r2, r3, asr #16
   369cc:	andeq	r2, r2, r0, asr r6
   369d0:	andeq	r2, r2, fp, ror #12
   369d4:	andeq	r2, r2, r4, asr #13

000369d8 <flatcc_builder_default_alloc@@Base>:
   369d8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   369dc:	add	fp, sp, #24
   369e0:	mov	r4, r1
   369e4:	cmp	r2, #0
   369e8:	beq	36a34 <flatcc_builder_default_alloc@@Base+0x5c>
   369ec:	ldr	r0, [fp, #8]
   369f0:	mov	r8, r3
   369f4:	sub	r1, r0, #1
   369f8:	cmp	r1, #6
   369fc:	bhi	36a64 <flatcc_builder_default_alloc@@Base+0x8c>
   36a00:	add	r3, pc, #8
   36a04:	mov	r0, #256	; 0x100
   36a08:	ldr	r1, [r3, r1, lsl #2]
   36a0c:	add	pc, r3, r1
   36a10:	andeq	r0, r0, r8, rrx
   36a14:	andeq	r0, r0, r4, asr r0
   36a18:	andeq	r0, r0, r4, asr r0
   36a1c:	andeq	r0, r0, ip, lsl r0
   36a20:	andeq	r0, r0, ip, asr r0
   36a24:	andeq	r0, r0, r4, asr r0
   36a28:	andeq	r0, r0, r4, rrx
   36a2c:	mov	r0, #288	; 0x120
   36a30:	b	36a78 <flatcc_builder_default_alloc@@Base+0xa0>
   36a34:	ldr	r0, [r4]
   36a38:	cmp	r0, #0
   36a3c:	beq	36a58 <flatcc_builder_default_alloc@@Base+0x80>
   36a40:	bl	147fc <free@plt>
   36a44:	mov	r6, #0
   36a48:	mov	r0, r6
   36a4c:	str	r6, [r4]
   36a50:	str	r6, [r4, #4]
   36a54:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   36a58:	mov	r6, #0
   36a5c:	mov	r0, r6
   36a60:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   36a64:	mov	r0, #32
   36a68:	b	36a78 <flatcc_builder_default_alloc@@Base+0xa0>
   36a6c:	mov	r0, r2
   36a70:	b	36a78 <flatcc_builder_default_alloc@@Base+0xa0>
   36a74:	mov	r0, #64	; 0x40
   36a78:	mov	r7, r0
   36a7c:	lsl	r0, r0, #1
   36a80:	cmp	r7, r2
   36a84:	bcc	36a78 <flatcc_builder_default_alloc@@Base+0xa0>
   36a88:	ldr	r0, [r4, #4]
   36a8c:	mov	r6, #0
   36a90:	cmp	r0, r2
   36a94:	lsrcs	r0, r0, #1
   36a98:	cmpcs	r0, r7
   36a9c:	bcs	36ae0 <flatcc_builder_default_alloc@@Base+0x108>
   36aa0:	ldr	r0, [r4]
   36aa4:	mov	r1, r7
   36aa8:	bl	14844 <realloc@plt>
   36aac:	cmp	r0, #0
   36ab0:	beq	36ae8 <flatcc_builder_default_alloc@@Base+0x110>
   36ab4:	mov	r5, r0
   36ab8:	cmp	r8, #0
   36abc:	beq	36adc <flatcc_builder_default_alloc@@Base+0x104>
   36ac0:	ldr	r1, [r4, #4]
   36ac4:	cmp	r7, r1
   36ac8:	bls	36adc <flatcc_builder_default_alloc@@Base+0x104>
   36acc:	add	r0, r5, r1
   36ad0:	sub	r2, r7, r1
   36ad4:	mov	r1, #0
   36ad8:	bl	148d4 <memset@plt>
   36adc:	stm	r4, {r5, r7}
   36ae0:	mov	r0, r6
   36ae4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   36ae8:	mvn	r6, #0
   36aec:	mov	r0, r6
   36af0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00036af4 <flatcc_builder_flush_vtable_cache@@Base>:
   36af4:	push	{r4, r5, fp, lr}
   36af8:	add	fp, sp, #8
   36afc:	mov	r4, r0
   36b00:	ldr	r0, [r0, #116]	; 0x74
   36b04:	cmp	r0, #0
   36b08:	popeq	{r4, r5, fp, pc}
   36b0c:	ldr	r0, [r4, #92]	; 0x5c
   36b10:	ldr	r2, [r4, #96]	; 0x60
   36b14:	mov	r1, #0
   36b18:	mov	r5, #0
   36b1c:	bl	148d4 <memset@plt>
   36b20:	mov	r0, #16
   36b24:	str	r5, [r4, #120]	; 0x78
   36b28:	str	r0, [r4, #124]	; 0x7c
   36b2c:	pop	{r4, r5, fp, pc}

00036b30 <flatcc_builder_custom_init@@Base>:
   36b30:	push	{r4, r5, r6, r7, fp, lr}
   36b34:	add	fp, sp, #16
   36b38:	mov	r6, r2
   36b3c:	mov	r7, r1
   36b40:	mov	r1, #0
   36b44:	mov	r2, #232	; 0xe8
   36b48:	mov	r5, r3
   36b4c:	mov	r4, r0
   36b50:	bl	148d4 <memset@plt>
   36b54:	ldr	r0, [fp, #8]
   36b58:	cmp	r7, #0
   36b5c:	bne	36b74 <flatcc_builder_custom_init@@Base+0x44>
   36b60:	mov	r1, #1
   36b64:	add	r6, r4, #188	; 0xbc
   36b68:	str	r1, [r4, #184]	; 0xb8
   36b6c:	ldr	r7, [pc, #40]	; 36b9c <flatcc_builder_custom_init@@Base+0x6c>
   36b70:	ldr	r7, [pc, r7]
   36b74:	ldr	r1, [pc, #36]	; 36ba0 <flatcc_builder_custom_init@@Base+0x70>
   36b78:	cmp	r5, #0
   36b7c:	ldr	r1, [pc, r1]
   36b80:	str	r6, [r4, #36]	; 0x24
   36b84:	str	r0, [r4, #40]	; 0x28
   36b88:	mov	r0, #0
   36b8c:	movne	r1, r5
   36b90:	str	r7, [r4, #44]	; 0x2c
   36b94:	str	r1, [r4, #48]	; 0x30
   36b98:	pop	{r4, r5, r6, r7, fp, pc}
   36b9c:	andeq	r4, r3, r0, asr #10
   36ba0:	andeq	r4, r3, r8, lsr #10

00036ba4 <flatcc_builder_init@@Base>:
   36ba4:	push	{r4, r5, fp, lr}
   36ba8:	add	fp, sp, #8
   36bac:	mov	r1, #0
   36bb0:	mov	r2, #232	; 0xe8
   36bb4:	mov	r4, r0
   36bb8:	mov	r5, #0
   36bbc:	bl	148d4 <memset@plt>
   36bc0:	mov	r0, #1
   36bc4:	str	r0, [r4, #184]	; 0xb8
   36bc8:	add	r0, r4, #188	; 0xbc
   36bcc:	ldr	r1, [pc, #32]	; 36bf4 <flatcc_builder_init@@Base+0x50>
   36bd0:	ldr	r1, [pc, r1]
   36bd4:	ldr	r2, [pc, #28]	; 36bf8 <flatcc_builder_init@@Base+0x54>
   36bd8:	ldr	r2, [pc, r2]
   36bdc:	str	r0, [r4, #36]	; 0x24
   36be0:	mov	r0, #0
   36be4:	str	r5, [r4, #40]	; 0x28
   36be8:	str	r2, [r4, #44]	; 0x2c
   36bec:	str	r1, [r4, #48]	; 0x30
   36bf0:	pop	{r4, r5, fp, pc}
   36bf4:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   36bf8:	ldrdeq	r4, [r3], -r8

00036bfc <flatcc_builder_custom_reset@@Base>:
   36bfc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   36c00:	add	fp, sp, #28
   36c04:	sub	sp, sp, #4
   36c08:	mov	r9, r2
   36c0c:	mov	r8, r1
   36c10:	mov	sl, r0
   36c14:	add	r7, r0, #52	; 0x34
   36c18:	mov	r5, #0
   36c1c:	b	36c3c <flatcc_builder_custom_reset@@Base+0x40>
   36c20:	ldr	r0, [r6, #56]	; 0x38
   36c24:	cmp	r0, #0
   36c28:	bne	36d24 <flatcc_builder_custom_reset@@Base+0x128>
   36c2c:	add	r5, r5, #1
   36c30:	add	r7, r7, #8
   36c34:	cmp	r5, #8
   36c38:	beq	36c90 <flatcc_builder_custom_reset@@Base+0x94>
   36c3c:	add	r6, sl, r5, lsl #3
   36c40:	ldr	r0, [r6, #52]	; 0x34
   36c44:	cmp	r0, #0
   36c48:	beq	36c20 <flatcc_builder_custom_reset@@Base+0x24>
   36c4c:	cmp	r9, #0
   36c50:	cmpne	r5, #5
   36c54:	beq	36c80 <flatcc_builder_custom_reset@@Base+0x84>
   36c58:	ldr	r0, [sl, #40]	; 0x28
   36c5c:	ldr	r4, [sl, #48]	; 0x30
   36c60:	mov	r1, r7
   36c64:	mov	r2, #1
   36c68:	mov	r3, #1
   36c6c:	str	r5, [sp]
   36c70:	blx	r4
   36c74:	cmp	r0, #0
   36c78:	bne	36d14 <flatcc_builder_custom_reset@@Base+0x118>
   36c7c:	ldr	r0, [r6, #52]	; 0x34
   36c80:	ldr	r2, [r6, #56]	; 0x38
   36c84:	mov	r1, #0
   36c88:	bl	148d4 <memset@plt>
   36c8c:	b	36c2c <flatcc_builder_custom_reset@@Base+0x30>
   36c90:	mov	r0, #0
   36c94:	vmov.i32	q8, #0	; 0x00000000
   36c98:	mov	r5, #0
   36c9c:	str	r0, [sl, #120]	; 0x78
   36ca0:	ldr	r1, [sl, #124]	; 0x7c
   36ca4:	cmp	r1, #0
   36ca8:	movne	r1, #16
   36cac:	strne	r1, [sl, #124]	; 0x7c
   36cb0:	add	r1, sl, #148	; 0x94
   36cb4:	str	r0, [sl, #136]	; 0x88
   36cb8:	str	r0, [sl, #140]	; 0x8c
   36cbc:	strh	r0, [sl, #128]	; 0x80
   36cc0:	str	r0, [sl, #32]
   36cc4:	cmp	r8, #0
   36cc8:	vst1.32	{d16-d17}, [r1]
   36ccc:	ldr	r2, [sl, #60]	; 0x3c
   36cd0:	ldr	r1, [sl, #52]	; 0x34
   36cd4:	ldr	r3, [sl, #76]	; 0x4c
   36cd8:	str	r2, [sl, #16]
   36cdc:	str	r0, [sl, #20]
   36ce0:	str	r0, [sl, #24]
   36ce4:	movne	r0, #0
   36ce8:	str	r3, [sl]
   36cec:	str	r1, [sl, #4]
   36cf0:	strne	r0, [sl, #172]	; 0xac
   36cf4:	strne	r0, [sl, #176]	; 0xb0
   36cf8:	strne	r0, [sl, #180]	; 0xb4
   36cfc:	ldr	r0, [sl, #184]	; 0xb8
   36d00:	cmp	r0, #0
   36d04:	beq	36d18 <flatcc_builder_custom_reset@@Base+0x11c>
   36d08:	add	r0, sl, #188	; 0xbc
   36d0c:	bl	3b898 <flatcc_emitter_reset@@Base>
   36d10:	b	36d18 <flatcc_builder_custom_reset@@Base+0x11c>
   36d14:	mvn	r5, #0
   36d18:	mov	r0, r5
   36d1c:	sub	sp, fp, #28
   36d20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36d24:	ldr	r0, [pc, #24]	; 36d44 <flatcc_builder_custom_reset@@Base+0x148>
   36d28:	ldr	r1, [pc, #24]	; 36d48 <flatcc_builder_custom_reset@@Base+0x14c>
   36d2c:	ldr	r3, [pc, #24]	; 36d4c <flatcc_builder_custom_reset@@Base+0x150>
   36d30:	movw	r2, #434	; 0x1b2
   36d34:	add	r0, pc, r0
   36d38:	add	r1, pc, r1
   36d3c:	add	r3, pc, r3
   36d40:	bl	1497c <__assert_fail@plt>
   36d44:	andeq	r2, r2, r4, lsl #8
   36d48:	andeq	r2, r2, r2, lsl r4
   36d4c:	andeq	r2, r2, fp, ror #8

00036d50 <flatcc_builder_reset@@Base>:
   36d50:	push	{r4, sl, fp, lr}
   36d54:	add	fp, sp, #8
   36d58:	mov	r4, r0
   36d5c:	ldr	r0, [r0, #52]	; 0x34
   36d60:	ldr	r2, [r4, #56]	; 0x38
   36d64:	cmp	r0, #0
   36d68:	beq	36d78 <flatcc_builder_reset@@Base+0x28>
   36d6c:	mov	r1, #0
   36d70:	bl	148d4 <memset@plt>
   36d74:	b	36d80 <flatcc_builder_reset@@Base+0x30>
   36d78:	cmp	r2, #0
   36d7c:	bne	36ee8 <flatcc_builder_reset@@Base+0x198>
   36d80:	ldr	r0, [r4, #60]	; 0x3c
   36d84:	ldr	r2, [r4, #64]	; 0x40
   36d88:	cmp	r0, #0
   36d8c:	beq	36d9c <flatcc_builder_reset@@Base+0x4c>
   36d90:	mov	r1, #0
   36d94:	bl	148d4 <memset@plt>
   36d98:	b	36da4 <flatcc_builder_reset@@Base+0x54>
   36d9c:	cmp	r2, #0
   36da0:	bne	36ee8 <flatcc_builder_reset@@Base+0x198>
   36da4:	ldr	r0, [r4, #68]	; 0x44
   36da8:	ldr	r2, [r4, #72]	; 0x48
   36dac:	cmp	r0, #0
   36db0:	beq	36dc0 <flatcc_builder_reset@@Base+0x70>
   36db4:	mov	r1, #0
   36db8:	bl	148d4 <memset@plt>
   36dbc:	b	36dc8 <flatcc_builder_reset@@Base+0x78>
   36dc0:	cmp	r2, #0
   36dc4:	bne	36ee8 <flatcc_builder_reset@@Base+0x198>
   36dc8:	ldr	r0, [r4, #76]	; 0x4c
   36dcc:	ldr	r2, [r4, #80]	; 0x50
   36dd0:	cmp	r0, #0
   36dd4:	beq	36de4 <flatcc_builder_reset@@Base+0x94>
   36dd8:	mov	r1, #0
   36ddc:	bl	148d4 <memset@plt>
   36de0:	b	36dec <flatcc_builder_reset@@Base+0x9c>
   36de4:	cmp	r2, #0
   36de8:	bne	36ee8 <flatcc_builder_reset@@Base+0x198>
   36dec:	ldr	r0, [r4, #84]	; 0x54
   36df0:	ldr	r2, [r4, #88]	; 0x58
   36df4:	cmp	r0, #0
   36df8:	beq	36e08 <flatcc_builder_reset@@Base+0xb8>
   36dfc:	mov	r1, #0
   36e00:	bl	148d4 <memset@plt>
   36e04:	b	36e10 <flatcc_builder_reset@@Base+0xc0>
   36e08:	cmp	r2, #0
   36e0c:	bne	36ee8 <flatcc_builder_reset@@Base+0x198>
   36e10:	ldr	r0, [r4, #92]	; 0x5c
   36e14:	ldr	r2, [r4, #96]	; 0x60
   36e18:	cmp	r0, #0
   36e1c:	beq	36e2c <flatcc_builder_reset@@Base+0xdc>
   36e20:	mov	r1, #0
   36e24:	bl	148d4 <memset@plt>
   36e28:	b	36e34 <flatcc_builder_reset@@Base+0xe4>
   36e2c:	cmp	r2, #0
   36e30:	bne	36ee8 <flatcc_builder_reset@@Base+0x198>
   36e34:	ldr	r0, [r4, #100]	; 0x64
   36e38:	ldr	r2, [r4, #104]	; 0x68
   36e3c:	cmp	r0, #0
   36e40:	beq	36e50 <flatcc_builder_reset@@Base+0x100>
   36e44:	mov	r1, #0
   36e48:	bl	148d4 <memset@plt>
   36e4c:	b	36e58 <flatcc_builder_reset@@Base+0x108>
   36e50:	cmp	r2, #0
   36e54:	bne	36ee8 <flatcc_builder_reset@@Base+0x198>
   36e58:	ldr	r0, [r4, #108]	; 0x6c
   36e5c:	ldr	r2, [r4, #112]	; 0x70
   36e60:	cmp	r0, #0
   36e64:	beq	36e74 <flatcc_builder_reset@@Base+0x124>
   36e68:	mov	r1, #0
   36e6c:	bl	148d4 <memset@plt>
   36e70:	b	36e7c <flatcc_builder_reset@@Base+0x12c>
   36e74:	cmp	r2, #0
   36e78:	bne	36ee8 <flatcc_builder_reset@@Base+0x198>
   36e7c:	mov	r0, #0
   36e80:	str	r0, [r4, #120]	; 0x78
   36e84:	ldr	r1, [r4, #124]	; 0x7c
   36e88:	cmp	r1, #0
   36e8c:	movne	r1, #16
   36e90:	strne	r1, [r4, #124]	; 0x7c
   36e94:	vmov.i32	q8, #0	; 0x00000000
   36e98:	add	r1, r4, #148	; 0x94
   36e9c:	str	r0, [r4, #136]	; 0x88
   36ea0:	str	r0, [r4, #140]	; 0x8c
   36ea4:	strh	r0, [r4, #128]	; 0x80
   36ea8:	str	r0, [r4, #32]
   36eac:	vst1.32	{d16-d17}, [r1]
   36eb0:	ldr	r1, [r4, #184]	; 0xb8
   36eb4:	ldr	r2, [r4, #60]	; 0x3c
   36eb8:	ldr	r3, [r4, #76]	; 0x4c
   36ebc:	ldr	ip, [r4, #52]	; 0x34
   36ec0:	cmp	r1, #0
   36ec4:	str	r2, [r4, #16]
   36ec8:	str	r0, [r4, #20]
   36ecc:	str	r0, [r4, #24]
   36ed0:	stm	r4, {r3, ip}
   36ed4:	beq	36ee0 <flatcc_builder_reset@@Base+0x190>
   36ed8:	add	r0, r4, #188	; 0xbc
   36edc:	bl	3b898 <flatcc_emitter_reset@@Base>
   36ee0:	mov	r0, #0
   36ee4:	pop	{r4, sl, fp, pc}
   36ee8:	ldr	r0, [pc, #24]	; 36f08 <flatcc_builder_reset@@Base+0x1b8>
   36eec:	ldr	r1, [pc, #24]	; 36f0c <flatcc_builder_reset@@Base+0x1bc>
   36ef0:	ldr	r3, [pc, #24]	; 36f10 <flatcc_builder_reset@@Base+0x1c0>
   36ef4:	movw	r2, #434	; 0x1b2
   36ef8:	add	r0, pc, r0
   36efc:	add	r1, pc, r1
   36f00:	add	r3, pc, r3
   36f04:	bl	1497c <__assert_fail@plt>
   36f08:	andeq	r2, r2, r0, asr #4
   36f0c:	andeq	r2, r2, lr, asr #4
   36f10:	andeq	r2, r2, r7, lsr #5

00036f14 <flatcc_builder_clear@@Base>:
   36f14:	push	{r4, sl, fp, lr}
   36f18:	add	fp, sp, #8
   36f1c:	sub	sp, sp, #8
   36f20:	mov	r4, r0
   36f24:	ldr	r0, [r0, #40]	; 0x28
   36f28:	mov	r1, #0
   36f2c:	mov	r2, #0
   36f30:	mov	r3, #0
   36f34:	ldr	ip, [r4, #48]	; 0x30
   36f38:	str	r1, [sp]
   36f3c:	add	r1, r4, #52	; 0x34
   36f40:	blx	ip
   36f44:	ldr	r0, [r4, #40]	; 0x28
   36f48:	ldr	ip, [r4, #48]	; 0x30
   36f4c:	mov	r1, #1
   36f50:	mov	r2, #0
   36f54:	mov	r3, #0
   36f58:	str	r1, [sp]
   36f5c:	add	r1, r4, #60	; 0x3c
   36f60:	blx	ip
   36f64:	ldr	r0, [r4, #40]	; 0x28
   36f68:	ldr	ip, [r4, #48]	; 0x30
   36f6c:	mov	r1, #2
   36f70:	mov	r2, #0
   36f74:	mov	r3, #0
   36f78:	str	r1, [sp]
   36f7c:	add	r1, r4, #68	; 0x44
   36f80:	blx	ip
   36f84:	ldr	r0, [r4, #40]	; 0x28
   36f88:	ldr	ip, [r4, #48]	; 0x30
   36f8c:	mov	r1, #3
   36f90:	mov	r2, #0
   36f94:	mov	r3, #0
   36f98:	str	r1, [sp]
   36f9c:	add	r1, r4, #76	; 0x4c
   36fa0:	blx	ip
   36fa4:	ldr	r0, [r4, #40]	; 0x28
   36fa8:	ldr	ip, [r4, #48]	; 0x30
   36fac:	mov	r1, #4
   36fb0:	mov	r2, #0
   36fb4:	mov	r3, #0
   36fb8:	str	r1, [sp]
   36fbc:	add	r1, r4, #84	; 0x54
   36fc0:	blx	ip
   36fc4:	ldr	r0, [r4, #40]	; 0x28
   36fc8:	ldr	ip, [r4, #48]	; 0x30
   36fcc:	mov	r1, #5
   36fd0:	mov	r2, #0
   36fd4:	mov	r3, #0
   36fd8:	str	r1, [sp]
   36fdc:	add	r1, r4, #92	; 0x5c
   36fe0:	blx	ip
   36fe4:	ldr	r0, [r4, #40]	; 0x28
   36fe8:	ldr	ip, [r4, #48]	; 0x30
   36fec:	mov	r1, #6
   36ff0:	mov	r2, #0
   36ff4:	mov	r3, #0
   36ff8:	str	r1, [sp]
   36ffc:	add	r1, r4, #100	; 0x64
   37000:	blx	ip
   37004:	ldr	r0, [r4, #40]	; 0x28
   37008:	ldr	ip, [r4, #48]	; 0x30
   3700c:	mov	r1, #7
   37010:	mov	r2, #0
   37014:	mov	r3, #0
   37018:	str	r1, [sp]
   3701c:	add	r1, r4, #108	; 0x6c
   37020:	blx	ip
   37024:	ldr	r0, [r4, #184]	; 0xb8
   37028:	cmp	r0, #0
   3702c:	beq	37038 <flatcc_builder_clear@@Base+0x124>
   37030:	add	r0, r4, #188	; 0xbc
   37034:	bl	3b964 <flatcc_emitter_clear@@Base>
   37038:	mov	r0, r4
   3703c:	mov	r1, #0
   37040:	mov	r2, #232	; 0xe8
   37044:	sub	sp, fp, #8
   37048:	pop	{r4, sl, fp, lr}
   3704c:	b	148d4 <memset@plt>

00037050 <flatcc_builder_enter_user_frame_ptr@@Base>:
   37050:	push	{r4, r5, r6, r7, fp, lr}
   37054:	add	fp, sp, #16
   37058:	sub	sp, sp, #8
   3705c:	mov	r4, r0
   37060:	ldr	r0, [r0, #112]	; 0x70
   37064:	add	r1, r1, #7
   37068:	ldr	r7, [r4, #228]	; 0xe4
   3706c:	bic	r5, r1, #3
   37070:	add	r6, r4, #108	; 0x6c
   37074:	add	r2, r7, r5
   37078:	cmp	r2, r0
   3707c:	bls	370a4 <flatcc_builder_enter_user_frame_ptr@@Base+0x54>
   37080:	ldr	r0, [r4, #40]	; 0x28
   37084:	ldr	ip, [r4, #48]	; 0x30
   37088:	mov	r1, #7
   3708c:	mov	r3, #0
   37090:	str	r1, [sp]
   37094:	mov	r1, r6
   37098:	blx	ip
   3709c:	cmp	r0, #0
   370a0:	bne	370f0 <flatcc_builder_enter_user_frame_ptr@@Base+0xa0>
   370a4:	ldr	r0, [r6]
   370a8:	adds	r6, r0, r7
   370ac:	beq	370e0 <flatcc_builder_enter_user_frame_ptr@@Base+0x90>
   370b0:	mov	r0, r6
   370b4:	mov	r1, #0
   370b8:	mov	r2, r5
   370bc:	bl	148d4 <memset@plt>
   370c0:	ldr	r0, [r4, #224]	; 0xe0
   370c4:	str	r0, [r6], #4
   370c8:	ldr	r0, [r4, #228]	; 0xe4
   370cc:	add	r1, r0, #4
   370d0:	add	r0, r0, r5
   370d4:	str	r1, [r4, #224]	; 0xe0
   370d8:	str	r0, [r4, #228]	; 0xe4
   370dc:	b	370e4 <flatcc_builder_enter_user_frame_ptr@@Base+0x94>
   370e0:	mov	r6, #0
   370e4:	mov	r0, r6
   370e8:	sub	sp, fp, #16
   370ec:	pop	{r4, r5, r6, r7, fp, pc}
   370f0:	ldr	r0, [pc, #24]	; 37110 <flatcc_builder_enter_user_frame_ptr@@Base+0xc0>
   370f4:	ldr	r1, [pc, #24]	; 37114 <flatcc_builder_enter_user_frame_ptr@@Base+0xc4>
   370f8:	ldr	r3, [pc, #24]	; 37118 <flatcc_builder_enter_user_frame_ptr@@Base+0xc8>
   370fc:	mov	r2, #308	; 0x134
   37100:	add	r0, pc, r0
   37104:	add	r1, pc, r1
   37108:	add	r3, pc, r3
   3710c:	bl	1497c <__assert_fail@plt>
   37110:	andeq	r9, r1, lr, asr #6
   37114:	andeq	r2, r2, r6, asr #32
   37118:	andeq	r3, r2, r9, lsr r0

0003711c <flatcc_builder_enter_user_frame@@Base>:
   3711c:	push	{r4, r5, r6, r7, fp, lr}
   37120:	add	fp, sp, #16
   37124:	sub	sp, sp, #8
   37128:	mov	r4, r0
   3712c:	ldr	r0, [r0, #112]	; 0x70
   37130:	add	r1, r1, #7
   37134:	ldr	r7, [r4, #228]	; 0xe4
   37138:	bic	r5, r1, #3
   3713c:	add	r6, r4, #108	; 0x6c
   37140:	add	r2, r7, r5
   37144:	cmp	r2, r0
   37148:	bls	37170 <flatcc_builder_enter_user_frame@@Base+0x54>
   3714c:	ldr	r0, [r4, #40]	; 0x28
   37150:	ldr	ip, [r4, #48]	; 0x30
   37154:	mov	r1, #7
   37158:	mov	r3, #0
   3715c:	str	r1, [sp]
   37160:	mov	r1, r6
   37164:	blx	ip
   37168:	cmp	r0, #0
   3716c:	bne	371bc <flatcc_builder_enter_user_frame@@Base+0xa0>
   37170:	ldr	r0, [r6]
   37174:	adds	r6, r0, r7
   37178:	beq	371b0 <flatcc_builder_enter_user_frame@@Base+0x94>
   3717c:	mov	r0, r6
   37180:	mov	r1, #0
   37184:	mov	r2, r5
   37188:	bl	148d4 <memset@plt>
   3718c:	ldr	r0, [r4, #224]	; 0xe0
   37190:	str	r0, [r6]
   37194:	ldr	r1, [r4, #228]	; 0xe4
   37198:	add	r0, r1, #4
   3719c:	add	r1, r1, r5
   371a0:	str	r0, [r4, #224]	; 0xe0
   371a4:	str	r1, [r4, #228]	; 0xe4
   371a8:	sub	sp, fp, #16
   371ac:	pop	{r4, r5, r6, r7, fp, pc}
   371b0:	mov	r0, #0
   371b4:	sub	sp, fp, #16
   371b8:	pop	{r4, r5, r6, r7, fp, pc}
   371bc:	ldr	r0, [pc, #24]	; 371dc <flatcc_builder_enter_user_frame@@Base+0xc0>
   371c0:	ldr	r1, [pc, #24]	; 371e0 <flatcc_builder_enter_user_frame@@Base+0xc4>
   371c4:	ldr	r3, [pc, #24]	; 371e4 <flatcc_builder_enter_user_frame@@Base+0xc8>
   371c8:	mov	r2, #308	; 0x134
   371cc:	add	r0, pc, r0
   371d0:	add	r1, pc, r1
   371d4:	add	r3, pc, r3
   371d8:	bl	1497c <__assert_fail@plt>
   371dc:	andeq	r9, r1, r2, lsl #5
   371e0:	andeq	r1, r2, sl, ror pc
   371e4:	andeq	r2, r2, sp, ror #30

000371e8 <flatcc_builder_exit_user_frame@@Base>:
   371e8:	push	{fp, lr}
   371ec:	mov	fp, sp
   371f0:	ldr	r1, [r0, #224]	; 0xe0
   371f4:	cmp	r1, #0
   371f8:	subne	r2, r1, #4
   371fc:	strne	r2, [r0, #228]	; 0xe4
   37200:	ldrne	r2, [r0, #108]	; 0x6c
   37204:	addne	r1, r2, r1
   37208:	ldrne	r1, [r1, #-4]
   3720c:	strne	r1, [r0, #224]	; 0xe0
   37210:	movne	r0, r1
   37214:	popne	{fp, pc}
   37218:	ldr	r0, [pc, #24]	; 37238 <flatcc_builder_exit_user_frame@@Base+0x50>
   3721c:	ldr	r1, [pc, #24]	; 3723c <flatcc_builder_exit_user_frame@@Base+0x54>
   37220:	ldr	r3, [pc, #24]	; 37240 <flatcc_builder_exit_user_frame@@Base+0x58>
   37224:	movw	r2, #542	; 0x21e
   37228:	add	r0, pc, r0
   3722c:	add	r1, pc, r1
   37230:	add	r3, pc, r3
   37234:	bl	1497c <__assert_fail@plt>
   37238:			; <UNDEFINED> instruction: 0x00021fbd
   3723c:	andeq	r1, r2, lr, lsl pc
   37240:	andeq	r1, r2, lr, asr #31

00037244 <flatcc_builder_exit_user_frame_at@@Base>:
   37244:	push	{fp, lr}
   37248:	mov	fp, sp
   3724c:	ldr	r2, [r0, #224]	; 0xe0
   37250:	cmp	r2, r1
   37254:	bcc	372a0 <flatcc_builder_exit_user_frame_at@@Base+0x5c>
   37258:	cmp	r1, #0
   3725c:	str	r1, [r0, #224]	; 0xe0
   37260:	subne	r2, r1, #4
   37264:	strne	r2, [r0, #228]	; 0xe4
   37268:	ldrne	r2, [r0, #108]	; 0x6c
   3726c:	addne	r1, r2, r1
   37270:	ldrne	r1, [r1, #-4]
   37274:	strne	r1, [r0, #224]	; 0xe0
   37278:	movne	r0, r1
   3727c:	popne	{fp, pc}
   37280:	ldr	r0, [pc, #68]	; 372cc <flatcc_builder_exit_user_frame_at@@Base+0x88>
   37284:	ldr	r1, [pc, #68]	; 372d0 <flatcc_builder_exit_user_frame_at@@Base+0x8c>
   37288:	ldr	r3, [pc, #68]	; 372d4 <flatcc_builder_exit_user_frame_at@@Base+0x90>
   3728c:	movw	r2, #542	; 0x21e
   37290:	add	r0, pc, r0
   37294:	add	r1, pc, r1
   37298:	add	r3, pc, r3
   3729c:	bl	1497c <__assert_fail@plt>
   372a0:	ldr	r0, [pc, #24]	; 372c0 <flatcc_builder_exit_user_frame_at@@Base+0x7c>
   372a4:	ldr	r1, [pc, #24]	; 372c4 <flatcc_builder_exit_user_frame_at@@Base+0x80>
   372a8:	ldr	r3, [pc, #24]	; 372c8 <flatcc_builder_exit_user_frame_at@@Base+0x84>
   372ac:	movw	r2, #551	; 0x227
   372b0:	add	r0, pc, r0
   372b4:	add	r1, pc, r1
   372b8:	add	r3, pc, r3
   372bc:	bl	1497c <__assert_fail@plt>
   372c0:	andeq	r1, r2, r8, lsl #31
   372c4:	muleq	r2, r6, lr
   372c8:	muleq	r2, pc, pc	; <UNPREDICTABLE>
   372cc:	andeq	r1, r2, r5, asr pc
   372d0:			; <UNDEFINED> instruction: 0x00021eb6
   372d4:	andeq	r1, r2, r6, ror #30

000372d8 <flatcc_builder_get_current_user_frame@@Base>:
   372d8:	ldr	r0, [r0, #224]	; 0xe0
   372dc:	bx	lr

000372e0 <flatcc_builder_get_user_frame_ptr@@Base>:
   372e0:	ldr	r0, [r0, #108]	; 0x6c
   372e4:	add	r0, r0, r1
   372e8:	bx	lr

000372ec <flatcc_builder_embed_buffer@@Base>:
   372ec:	push	{r4, r5, r6, r7, fp, lr}
   372f0:	add	fp, sp, #16
   372f4:	sub	sp, sp, #88	; 0x58
   372f8:	mov	r4, r0
   372fc:	ldr	r0, [fp, #8]
   37300:	mov	r5, r3
   37304:	mov	r7, r2
   37308:	mov	r2, r1
   3730c:	sub	r1, fp, #18
   37310:	strh	r0, [fp, #-18]	; 0xffffffee
   37314:	mov	r0, r4
   37318:	ldr	r3, [r4, #152]	; 0x98
   3731c:	cmp	r3, #0
   37320:	movwne	r3, #1
   37324:	bl	37478 <flatcc_builder_embed_buffer@@Base+0x18c>
   37328:	ldr	r1, [fp, #12]
   3732c:	ldrh	r3, [fp, #-18]	; 0xffffffee
   37330:	ldr	r0, [r4, #136]	; 0x88
   37334:	mov	r2, #0
   37338:	str	r2, [sp, #12]
   3733c:	str	r2, [sp, #8]
   37340:	and	r1, r1, #2
   37344:	sub	r3, r3, #1
   37348:	add	r1, r5, r1, lsl #1
   3734c:	sub	r1, r0, r1
   37350:	and	r3, r1, r3
   37354:	add	r1, r3, r5
   37358:	str	r1, [fp, #-24]	; 0xffffffe8
   3735c:	ldr	r1, [r4, #152]	; 0x98
   37360:	cmp	r1, #0
   37364:	mov	r1, #0
   37368:	beq	37388 <flatcc_builder_embed_buffer@@Base+0x9c>
   3736c:	mov	r1, #4
   37370:	sub	r2, fp, #24
   37374:	str	r1, [sp, #20]
   37378:	str	r2, [sp, #16]
   3737c:	mov	r2, #1
   37380:	str	r1, [sp, #8]
   37384:	str	r2, [sp, #12]
   37388:	cmp	r5, #0
   3738c:	beq	373b0 <flatcc_builder_embed_buffer@@Base+0xc4>
   37390:	add	r6, sp, #8
   37394:	add	r1, r1, r5
   37398:	add	r6, r6, r2, lsl #3
   3739c:	add	r2, r2, #1
   373a0:	str	r1, [sp, #8]
   373a4:	str	r7, [r6, #8]
   373a8:	str	r5, [r6, #12]
   373ac:	str	r2, [sp, #12]
   373b0:	cmp	r3, #0
   373b4:	beq	373e0 <flatcc_builder_embed_buffer@@Base+0xf4>
   373b8:	add	r1, r1, r3
   373bc:	add	r7, sp, #8
   373c0:	str	r1, [sp, #8]
   373c4:	add	r7, r7, r2, lsl #3
   373c8:	add	r2, r2, #1
   373cc:	ldr	r6, [pc, #136]	; 3745c <flatcc_builder_embed_buffer@@Base+0x170>
   373d0:	ldr	r6, [pc, r6]
   373d4:	str	r6, [r7, #8]
   373d8:	str	r3, [r7, #12]
   373dc:	str	r2, [sp, #12]
   373e0:	cmp	r1, #0
   373e4:	ble	3743c <flatcc_builder_embed_buffer@@Base+0x150>
   373e8:	sub	r5, r0, r1
   373ec:	ldr	r0, [r4, #36]	; 0x24
   373f0:	ldr	r7, [r4, #44]	; 0x2c
   373f4:	str	r1, [sp]
   373f8:	add	r1, sp, #8
   373fc:	add	r1, r1, #8
   37400:	mov	r3, r5
   37404:	blx	r7
   37408:	cmp	r0, #0
   3740c:	streq	r5, [r4, #136]	; 0x88
   37410:	moveq	r0, r5
   37414:	subeq	sp, fp, #16
   37418:	popeq	{r4, r5, r6, r7, fp, pc}
   3741c:	ldr	r0, [pc, #72]	; 3746c <flatcc_builder_embed_buffer@@Base+0x180>
   37420:	ldr	r1, [pc, #72]	; 37470 <flatcc_builder_embed_buffer@@Base+0x184>
   37424:	ldr	r3, [pc, #72]	; 37474 <flatcc_builder_embed_buffer@@Base+0x188>
   37428:	movw	r2, #651	; 0x28b
   3742c:	add	r0, pc, r0
   37430:	add	r1, pc, r1
   37434:	add	r3, pc, r3
   37438:	bl	1497c <__assert_fail@plt>
   3743c:	ldr	r0, [pc, #28]	; 37460 <flatcc_builder_embed_buffer@@Base+0x174>
   37440:	ldr	r1, [pc, #28]	; 37464 <flatcc_builder_embed_buffer@@Base+0x178>
   37444:	ldr	r3, [pc, #28]	; 37468 <flatcc_builder_embed_buffer@@Base+0x17c>
   37448:	movw	r2, #647	; 0x287
   3744c:	add	r0, pc, r0
   37450:	add	r1, pc, r1
   37454:	add	r3, pc, r3
   37458:	bl	1497c <__assert_fail@plt>
   3745c:	andeq	r3, r3, r8, asr #25
   37460:	andeq	r9, r1, r2
   37464:	strdeq	r1, [r2], -sl
   37468:	andeq	r2, r2, r2, ror sp
   3746c:	andeq	r9, r1, r2, lsr #32
   37470:	andeq	r1, r2, sl, lsl sp
   37474:	muleq	r2, r2, sp
   37478:	push	{r4, sl, fp, lr}
   3747c:	add	fp, sp, #8
   37480:	sub	sp, sp, #80	; 0x50
   37484:	cmp	r2, #0
   37488:	bne	37498 <flatcc_builder_embed_buffer@@Base+0x1ac>
   3748c:	ldrh	r2, [r0, #132]	; 0x84
   37490:	cmp	r2, #0
   37494:	movweq	r2, #1
   37498:	ldrh	r4, [r1]
   3749c:	cmp	r4, #4
   374a0:	movwcc	r4, #4
   374a4:	cmpcs	r4, r2
   374a8:	bcs	374b8 <flatcc_builder_embed_buffer@@Base+0x1cc>
   374ac:	cmp	r4, r2
   374b0:	movcc	r4, r2
   374b4:	strh	r4, [r1]
   374b8:	cmp	r3, #0
   374bc:	bne	37530 <flatcc_builder_embed_buffer@@Base+0x244>
   374c0:	ldr	r4, [r0, #140]	; 0x8c
   374c4:	sub	r1, r2, #1
   374c8:	ands	r1, r4, r1
   374cc:	beq	37530 <flatcc_builder_embed_buffer@@Base+0x244>
   374d0:	mov	r2, #1
   374d4:	str	r1, [sp, #20]
   374d8:	str	r1, [sp, #8]
   374dc:	cmn	r1, #1
   374e0:	str	r2, [sp, #12]
   374e4:	ldr	r2, [pc, #172]	; 37598 <flatcc_builder_embed_buffer@@Base+0x2ac>
   374e8:	ldr	r2, [pc, r2]
   374ec:	str	r2, [sp, #16]
   374f0:	add	r2, r1, r4
   374f4:	str	r2, [r0, #140]	; 0x8c
   374f8:	ble	37538 <flatcc_builder_embed_buffer@@Base+0x24c>
   374fc:	ldr	r2, [r0, #36]	; 0x24
   37500:	ldr	ip, [r0, #44]	; 0x2c
   37504:	add	r0, sp, #8
   37508:	str	r1, [sp]
   3750c:	mov	r3, r4
   37510:	add	r1, r0, #8
   37514:	mov	r0, r2
   37518:	mov	r2, #1
   3751c:	blx	ip
   37520:	cmp	r0, #0
   37524:	bne	37558 <flatcc_builder_embed_buffer@@Base+0x26c>
   37528:	cmn	r4, #1
   3752c:	beq	37578 <flatcc_builder_embed_buffer@@Base+0x28c>
   37530:	sub	sp, fp, #8
   37534:	pop	{r4, sl, fp, pc}
   37538:	ldr	r0, [pc, #92]	; 3759c <flatcc_builder_embed_buffer@@Base+0x2b0>
   3753c:	ldr	r1, [pc, #92]	; 375a0 <flatcc_builder_embed_buffer@@Base+0x2b4>
   37540:	ldr	r3, [pc, #92]	; 375a4 <flatcc_builder_embed_buffer@@Base+0x2b8>
   37544:	movw	r2, #673	; 0x2a1
   37548:	add	r0, pc, r0
   3754c:	add	r1, pc, r1
   37550:	add	r3, pc, r3
   37554:	bl	1497c <__assert_fail@plt>
   37558:	ldr	r0, [pc, #72]	; 375a8 <flatcc_builder_embed_buffer@@Base+0x2bc>
   3755c:	ldr	r1, [pc, #72]	; 375ac <flatcc_builder_embed_buffer@@Base+0x2c0>
   37560:	ldr	r3, [pc, #72]	; 375b0 <flatcc_builder_embed_buffer@@Base+0x2c4>
   37564:	movw	r2, #677	; 0x2a5
   37568:	add	r0, pc, r0
   3756c:	add	r1, pc, r1
   37570:	add	r3, pc, r3
   37574:	bl	1497c <__assert_fail@plt>
   37578:	ldr	r0, [pc, #52]	; 375b4 <flatcc_builder_embed_buffer@@Base+0x2c8>
   3757c:	ldr	r1, [pc, #52]	; 375b8 <flatcc_builder_embed_buffer@@Base+0x2cc>
   37580:	ldr	r3, [pc, #52]	; 375bc <flatcc_builder_embed_buffer@@Base+0x2d0>
   37584:	movw	r2, #702	; 0x2be
   37588:	add	r0, pc, r0
   3758c:	add	r1, pc, r1
   37590:	add	r3, pc, r3
   37594:	bl	1497c <__assert_fail@plt>
   37598:			; <UNDEFINED> instruction: 0x00033bb0
   3759c:	andeq	r8, r1, r6, lsl #30
   375a0:	strdeq	r1, [r2], -lr
   375a4:	andeq	r2, r2, r2, lsr sp
   375a8:	andeq	r8, r1, r6, ror #29
   375ac:	ldrdeq	r1, [r2], -lr
   375b0:	andeq	r2, r2, r2, lsl sp
   375b4:	andeq	r8, r1, r6, asr #29
   375b8:			; <UNDEFINED> instruction: 0x00021bbe
   375bc:	strdeq	r2, [r2], -r4

000375c0 <flatcc_builder_create_buffer@@Base>:
   375c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   375c4:	add	fp, sp, #28
   375c8:	sub	sp, sp, #100	; 0x64
   375cc:	ldr	sl, [fp, #12]
   375d0:	mov	r4, r0
   375d4:	ldr	r0, [fp, #8]
   375d8:	mov	r7, r1
   375dc:	mov	r5, #0
   375e0:	mov	r6, r3
   375e4:	sub	r1, fp, #30
   375e8:	str	r5, [sp, #12]
   375ec:	and	r9, sl, #1
   375f0:	strh	r0, [fp, #-30]	; 0xffffffe2
   375f4:	mov	r0, r4
   375f8:	mov	r3, r9
   375fc:	bl	37478 <flatcc_builder_embed_buffer@@Base+0x18c>
   37600:	ldrh	r0, [r4, #128]	; 0x80
   37604:	ldrh	r1, [fp, #-30]	; 0xffffffe2
   37608:	str	r6, [sp, #8]
   3760c:	cmp	r0, r1
   37610:	strhcc	r1, [r4, #128]	; 0x80
   37614:	cmp	r7, #0
   37618:	beq	37634 <flatcc_builder_create_buffer@@Base+0x74>
   3761c:	ldr	r5, [r7]
   37620:	cmp	r5, #0
   37624:	str	r5, [sp, #12]
   37628:	movwne	r5, #1
   3762c:	lsl	r7, r5, #2
   37630:	b	37638 <flatcc_builder_create_buffer@@Base+0x78>
   37634:	mov	r7, #0
   37638:	ldr	r0, [r4, #136]	; 0x88
   3763c:	and	r2, sl, #2
   37640:	mov	r3, #0
   37644:	sub	r6, r1, #1
   37648:	ands	ip, sl, #3
   3764c:	mov	sl, #4
   37650:	mov	r1, #4
   37654:	str	r3, [sp, #20]
   37658:	str	r3, [sp, #16]
   3765c:	sub	r2, r0, r2, lsl #1
   37660:	sub	r2, r2, r7
   37664:	sub	r2, r2, #4
   37668:	beq	3768c <flatcc_builder_create_buffer@@Base+0xcc>
   3766c:	mov	r1, #4
   37670:	sub	r3, fp, #40	; 0x28
   37674:	str	r1, [sp, #28]
   37678:	str	r3, [sp, #24]
   3767c:	str	r1, [sp, #16]
   37680:	mov	r3, #1
   37684:	mov	r1, #8
   37688:	str	r3, [sp, #20]
   3768c:	add	lr, sp, #16
   37690:	and	r6, r2, r6
   37694:	sub	r8, fp, #36	; 0x24
   37698:	str	r1, [sp, #16]
   3769c:	cmp	r5, #0
   376a0:	add	r2, lr, r3, lsl #3
   376a4:	str	r8, [r2, #8]
   376a8:	str	sl, [r2, #12]
   376ac:	add	r2, r3, #1
   376b0:	str	r2, [sp, #20]
   376b4:	beq	376d8 <flatcc_builder_create_buffer@@Base+0x118>
   376b8:	add	r2, lr, r2, lsl #3
   376bc:	add	r1, r1, r7
   376c0:	add	r5, sp, #12
   376c4:	str	r1, [sp, #16]
   376c8:	str	r5, [r2, #8]
   376cc:	str	r7, [r2, #12]
   376d0:	orr	r2, r3, #2
   376d4:	str	r2, [sp, #20]
   376d8:	cmp	r6, #0
   376dc:	beq	37704 <flatcc_builder_create_buffer@@Base+0x144>
   376e0:	add	r1, r1, r6
   376e4:	add	r3, lr, r2, lsl #3
   376e8:	add	r2, r2, #1
   376ec:	str	r1, [sp, #16]
   376f0:	ldr	r5, [pc, #220]	; 377d4 <flatcc_builder_create_buffer@@Base+0x214>
   376f4:	ldr	r5, [pc, r5]
   376f8:	str	r5, [r3, #8]
   376fc:	str	r6, [r3, #12]
   37700:	str	r2, [sp, #20]
   37704:	sub	r7, r0, r1
   37708:	cmp	ip, #0
   3770c:	mov	r6, #144	; 0x90
   37710:	ldr	r3, [sp, #8]
   37714:	mov	r0, r7
   37718:	addne	r0, r0, #4
   3771c:	cmp	r9, #0
   37720:	movweq	r6, #140	; 0x8c
   37724:	cmp	r1, #0
   37728:	ldr	r6, [r4, r6]
   3772c:	sub	r3, r3, r0
   37730:	str	r3, [fp, #-36]	; 0xffffffdc
   37734:	sub	r0, r6, r0
   37738:	str	r0, [fp, #-40]	; 0xffffffd8
   3773c:	ble	37794 <flatcc_builder_create_buffer@@Base+0x1d4>
   37740:	ldr	r0, [r4, #36]	; 0x24
   37744:	ldr	r6, [r4, #44]	; 0x2c
   37748:	str	r1, [sp]
   3774c:	add	r1, lr, #8
   37750:	mov	r3, r7
   37754:	blx	r6
   37758:	cmp	r0, #0
   3775c:	bne	377b4 <flatcc_builder_create_buffer@@Base+0x1f4>
   37760:	cmp	r7, #0
   37764:	str	r7, [r4, #136]	; 0x88
   37768:	movne	r0, r7
   3776c:	subne	sp, fp, #28
   37770:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37774:	ldr	r0, [pc, #116]	; 377f0 <flatcc_builder_create_buffer@@Base+0x230>
   37778:	ldr	r1, [pc, #116]	; 377f4 <flatcc_builder_create_buffer@@Base+0x234>
   3777c:	ldr	r3, [pc, #116]	; 377f8 <flatcc_builder_create_buffer@@Base+0x238>
   37780:	mov	r2, #772	; 0x304
   37784:	add	r0, pc, r0
   37788:	add	r1, pc, r1
   3778c:	add	r3, pc, r3
   37790:	bl	1497c <__assert_fail@plt>
   37794:	ldr	r0, [pc, #60]	; 377d8 <flatcc_builder_create_buffer@@Base+0x218>
   37798:	ldr	r1, [pc, #60]	; 377dc <flatcc_builder_create_buffer@@Base+0x21c>
   3779c:	ldr	r3, [pc, #60]	; 377e0 <flatcc_builder_create_buffer@@Base+0x220>
   377a0:	movw	r2, #647	; 0x287
   377a4:	add	r0, pc, r0
   377a8:	add	r1, pc, r1
   377ac:	add	r3, pc, r3
   377b0:	bl	1497c <__assert_fail@plt>
   377b4:	ldr	r0, [pc, #40]	; 377e4 <flatcc_builder_create_buffer@@Base+0x224>
   377b8:	ldr	r1, [pc, #40]	; 377e8 <flatcc_builder_create_buffer@@Base+0x228>
   377bc:	ldr	r3, [pc, #40]	; 377ec <flatcc_builder_create_buffer@@Base+0x22c>
   377c0:	movw	r2, #651	; 0x28b
   377c4:	add	r0, pc, r0
   377c8:	add	r1, pc, r1
   377cc:	add	r3, pc, r3
   377d0:	bl	1497c <__assert_fail@plt>
   377d4:	andeq	r3, r3, r4, lsr #19
   377d8:	andeq	r8, r1, sl, lsr #25
   377dc:	andeq	r1, r2, r2, lsr #19
   377e0:	andeq	r2, r2, sl, lsl sl
   377e4:	andeq	r8, r1, sl, lsl #25
   377e8:	andeq	r1, r2, r2, lsl #19
   377ec:	strdeq	r2, [r2], -sl
   377f0:	andeq	r8, r1, sl, asr #25
   377f4:	andeq	r1, r2, r2, asr #19
   377f8:	andeq	r1, r2, r0, lsl fp

000377fc <flatcc_builder_create_struct@@Base>:
   377fc:	push	{r4, r5, r6, sl, fp, lr}
   37800:	add	fp, sp, #16
   37804:	sub	sp, sp, #80	; 0x50
   37808:	cmp	r3, #0
   3780c:	beq	378e4 <flatcc_builder_create_struct@@Base+0xe8>
   37810:	mov	r5, r0
   37814:	ldrh	r0, [r0, #128]	; 0x80
   37818:	mov	r4, #0
   3781c:	cmp	r0, r3
   37820:	strhcc	r3, [r5, #128]	; 0x80
   37824:	sub	r3, r3, #1
   37828:	cmp	r2, #0
   3782c:	ldr	r0, [r5, #136]	; 0x88
   37830:	str	r4, [sp, #12]
   37834:	str	r4, [sp, #8]
   37838:	movne	r4, #1
   3783c:	strne	r2, [sp, #20]
   37840:	strne	r1, [sp, #16]
   37844:	strne	r2, [sp, #8]
   37848:	strne	r4, [sp, #12]
   3784c:	sub	r6, r0, r2
   37850:	and	r3, r6, r3
   37854:	cmp	r3, #0
   37858:	beq	37884 <flatcc_builder_create_struct@@Base+0x88>
   3785c:	add	r2, r3, r2
   37860:	add	r1, sp, #8
   37864:	str	r2, [sp, #8]
   37868:	add	r1, r1, r4, lsl #3
   3786c:	add	r4, r4, #1
   37870:	ldr	r6, [pc, #172]	; 37924 <flatcc_builder_create_struct@@Base+0x128>
   37874:	ldr	r6, [pc, r6]
   37878:	str	r6, [r1, #8]
   3787c:	str	r3, [r1, #12]
   37880:	str	r4, [sp, #12]
   37884:	cmp	r2, #0
   37888:	ble	37904 <flatcc_builder_create_struct@@Base+0x108>
   3788c:	sub	r6, r0, r2
   37890:	ldr	r0, [r5, #36]	; 0x24
   37894:	ldr	ip, [r5, #44]	; 0x2c
   37898:	add	r1, sp, #8
   3789c:	str	r2, [sp]
   378a0:	mov	r2, r4
   378a4:	add	r1, r1, #8
   378a8:	mov	r3, r6
   378ac:	blx	ip
   378b0:	cmp	r0, #0
   378b4:	streq	r6, [r5, #136]	; 0x88
   378b8:	moveq	r0, r6
   378bc:	subeq	sp, fp, #16
   378c0:	popeq	{r4, r5, r6, sl, fp, pc}
   378c4:	ldr	r0, [pc, #116]	; 37940 <flatcc_builder_create_struct@@Base+0x144>
   378c8:	ldr	r1, [pc, #116]	; 37944 <flatcc_builder_create_struct@@Base+0x148>
   378cc:	ldr	r3, [pc, #116]	; 37948 <flatcc_builder_create_struct@@Base+0x14c>
   378d0:	movw	r2, #651	; 0x28b
   378d4:	add	r0, pc, r0
   378d8:	add	r1, pc, r1
   378dc:	add	r3, pc, r3
   378e0:	bl	1497c <__assert_fail@plt>
   378e4:	ldr	r0, [pc, #60]	; 37928 <flatcc_builder_create_struct@@Base+0x12c>
   378e8:	ldr	r1, [pc, #60]	; 3792c <flatcc_builder_create_struct@@Base+0x130>
   378ec:	ldr	r3, [pc, #60]	; 37930 <flatcc_builder_create_struct@@Base+0x134>
   378f0:	movw	r2, #783	; 0x30f
   378f4:	add	r0, pc, r0
   378f8:	add	r1, pc, r1
   378fc:	add	r3, pc, r3
   37900:	bl	1497c <__assert_fail@plt>
   37904:	ldr	r0, [pc, #40]	; 37934 <flatcc_builder_create_struct@@Base+0x138>
   37908:	ldr	r1, [pc, #40]	; 37938 <flatcc_builder_create_struct@@Base+0x13c>
   3790c:	ldr	r3, [pc, #40]	; 3793c <flatcc_builder_create_struct@@Base+0x140>
   37910:	movw	r2, #647	; 0x287
   37914:	add	r0, pc, r0
   37918:	add	r1, pc, r1
   3791c:	add	r3, pc, r3
   37920:	bl	1497c <__assert_fail@plt>
   37924:	andeq	r3, r3, r4, lsr #16
   37928:	andeq	r1, r2, fp, lsr #20
   3792c:	andeq	r1, r2, r2, asr r8
   37930:	andeq	r1, r2, lr, lsr #20
   37934:	andeq	r8, r1, sl, lsr fp
   37938:	andeq	r1, r2, r2, lsr r8
   3793c:	andeq	r2, r2, sl, lsr #17
   37940:	andeq	r8, r1, sl, ror fp
   37944:	andeq	r1, r2, r2, ror r8
   37948:	andeq	r2, r2, sl, ror #17

0003794c <flatcc_builder_start_buffer@@Base>:
   3794c:	push	{r4, r5, r6, r7, fp, lr}
   37950:	add	fp, sp, #16
   37954:	mov	r5, r1
   37958:	ldrh	r1, [r0, #128]	; 0x80
   3795c:	mov	r6, r3
   37960:	mov	r7, r2
   37964:	mov	r4, r0
   37968:	bl	37a0c <flatcc_builder_start_buffer@@Base+0xc0>
   3796c:	mov	r1, r0
   37970:	mvn	r0, #0
   37974:	cmp	r1, #0
   37978:	popne	{r4, r5, r6, r7, fp, pc}
   3797c:	mov	r0, #1
   37980:	cmp	r5, #0
   37984:	strh	r0, [r4, #128]	; 0x80
   37988:	ldrh	r1, [r4, #132]	; 0x84
   3798c:	ldr	r2, [r4, #32]
   37990:	strh	r1, [r2, #34]	; 0x22
   37994:	strh	r7, [r4, #132]	; 0x84
   37998:	ldrh	r1, [r4, #164]	; 0xa4
   3799c:	ldr	r2, [r4, #32]
   379a0:	strh	r1, [r2, #32]
   379a4:	strh	r6, [r4, #164]	; 0xa4
   379a8:	ldr	r1, [r4, #32]
   379ac:	ldr	r2, [r4, #144]	; 0x90
   379b0:	str	r2, [r1, #20]
   379b4:	ldr	r1, [r4, #32]
   379b8:	ldr	r2, [r4, #152]	; 0x98
   379bc:	str	r2, [r1, #28]
   379c0:	ldr	r3, [r4, #148]	; 0x94
   379c4:	ldr	r1, [r4, #32]
   379c8:	ldr	r2, [r4, #136]	; 0x88
   379cc:	ldr	r7, [r4, #168]	; 0xa8
   379d0:	add	r6, r3, #1
   379d4:	str	r2, [r4, #144]	; 0x90
   379d8:	str	r6, [r4, #148]	; 0x94
   379dc:	str	r3, [r4, #152]	; 0x98
   379e0:	str	r7, [r1, #16]
   379e4:	ldr	r1, [pc, #28]	; 37a08 <flatcc_builder_start_buffer@@Base+0xbc>
   379e8:	ldr	r1, [pc, r1]
   379ec:	movne	r1, r5
   379f0:	ldr	r1, [r1]
   379f4:	str	r1, [r4, #168]	; 0xa8
   379f8:	ldr	r1, [r4, #32]
   379fc:	strh	r0, [r1, #14]
   37a00:	mov	r0, #0
   37a04:	pop	{r4, r5, r6, r7, fp, pc}
   37a08:			; <UNDEFINED> instruction: 0x000336b0
   37a0c:	push	{r4, r5, r6, r7, fp, lr}
   37a10:	add	fp, sp, #16
   37a14:	sub	sp, sp, #8
   37a18:	mov	r5, r1
   37a1c:	ldr	r1, [r0, #156]	; 0x9c
   37a20:	ldr	r2, [r0, #160]	; 0xa0
   37a24:	mov	r4, r0
   37a28:	add	r0, r1, #1
   37a2c:	cmp	r1, r2
   37a30:	str	r0, [r4, #156]	; 0x9c
   37a34:	bge	37a48 <flatcc_builder_start_buffer@@Base+0xfc>
   37a38:	ldr	r0, [r4, #32]
   37a3c:	add	r0, r0, #36	; 0x24
   37a40:	str	r0, [r4, #32]
   37a44:	b	37adc <flatcc_builder_start_buffer@@Base+0x190>
   37a48:	ldr	r2, [r4, #176]	; 0xb0
   37a4c:	mvn	r6, #0
   37a50:	cmp	r2, #1
   37a54:	cmpge	r1, r2
   37a58:	bge	37b14 <flatcc_builder_start_buffer@@Base+0x1c8>
   37a5c:	add	r7, r0, r0, lsl #3
   37a60:	ldr	r0, [r4, #88]	; 0x58
   37a64:	lsl	r2, r7, #2
   37a68:	cmp	r2, r0
   37a6c:	bls	37a94 <flatcc_builder_start_buffer@@Base+0x148>
   37a70:	ldr	r0, [r4, #40]	; 0x28
   37a74:	ldr	ip, [r4, #48]	; 0x30
   37a78:	mov	r3, #4
   37a7c:	add	r1, r4, #84	; 0x54
   37a80:	str	r3, [sp]
   37a84:	mov	r3, #0
   37a88:	blx	ip
   37a8c:	cmp	r0, #0
   37a90:	bne	37b20 <flatcc_builder_start_buffer@@Base+0x1d4>
   37a94:	ldr	r1, [r4, #84]	; 0x54
   37a98:	mvn	r0, #35	; 0x23
   37a9c:	add	r0, r0, r7, lsl #2
   37aa0:	adds	r0, r0, r1
   37aa4:	str	r0, [r4, #32]
   37aa8:	beq	37b14 <flatcc_builder_start_buffer@@Base+0x1c8>
   37aac:	ldr	r1, [r4, #88]	; 0x58
   37ab0:	movw	r3, #36409	; 0x8e39
   37ab4:	ldr	r2, [r4, #176]	; 0xb0
   37ab8:	movt	r3, #14563	; 0x38e3
   37abc:	umull	r1, r3, r1, r3
   37ac0:	cmp	r2, r3, lsr #3
   37ac4:	lsr	r1, r3, #3
   37ac8:	mov	r3, r1
   37acc:	movlt	r3, r2
   37ad0:	cmp	r2, #0
   37ad4:	movle	r3, r1
   37ad8:	str	r3, [r4, #160]	; 0xa0
   37adc:	ldr	r1, [r4, #20]
   37ae0:	mvn	r3, #3
   37ae4:	mov	r6, #0
   37ae8:	str	r1, [r0, #8]
   37aec:	ldrh	r2, [r4, #130]	; 0x82
   37af0:	strh	r2, [r0, #12]
   37af4:	strh	r5, [r4, #130]	; 0x82
   37af8:	ldr	r2, [r4, #28]
   37afc:	stm	r0, {r2, r3}
   37b00:	add	r0, r1, r2
   37b04:	str	r6, [r4, #20]
   37b08:	add	r0, r0, #7
   37b0c:	bic	r0, r0, #7
   37b10:	str	r0, [r4, #28]
   37b14:	mov	r0, r6
   37b18:	sub	sp, fp, #16
   37b1c:	pop	{r4, r5, r6, r7, fp, pc}
   37b20:	ldr	r0, [pc, #24]	; 37b40 <flatcc_builder_start_buffer@@Base+0x1f4>
   37b24:	ldr	r1, [pc, #24]	; 37b44 <flatcc_builder_start_buffer@@Base+0x1f8>
   37b28:	ldr	r3, [pc, #24]	; 37b48 <flatcc_builder_start_buffer@@Base+0x1fc>
   37b2c:	mov	r2, #308	; 0x134
   37b30:	add	r0, pc, r0
   37b34:	add	r1, pc, r1
   37b38:	add	r3, pc, r3
   37b3c:	bl	1497c <__assert_fail@plt>
   37b40:	andeq	r8, r1, lr, lsl r9
   37b44:	andeq	r1, r2, r6, lsl r6
   37b48:	andeq	r2, r2, r9, lsl #12

00037b4c <flatcc_builder_end_buffer@@Base>:
   37b4c:	push	{r4, r5, r6, sl, fp, lr}
   37b50:	add	fp, sp, #16
   37b54:	sub	sp, sp, #8
   37b58:	mov	r4, r0
   37b5c:	ldr	r0, [r0, #32]
   37b60:	ldrh	r0, [r0, #14]
   37b64:	cmp	r0, #1
   37b68:	bne	37c5c <flatcc_builder_end_buffer@@Base+0x110>
   37b6c:	mov	r3, r1
   37b70:	ldr	r1, [r4, #152]	; 0x98
   37b74:	ldrh	r0, [r4, #164]	; 0xa4
   37b78:	ldrh	r2, [r4, #132]	; 0x84
   37b7c:	cmp	r1, #0
   37b80:	ldrh	r1, [r4, #128]	; 0x80
   37b84:	and	r0, r0, #2
   37b88:	orrne	r0, r0, #1
   37b8c:	cmp	r1, r2
   37b90:	movcc	r1, r2
   37b94:	strhcc	r2, [r4, #128]	; 0x80
   37b98:	str	r0, [sp, #4]
   37b9c:	mov	r0, r4
   37ba0:	str	r1, [sp]
   37ba4:	add	r1, r4, #168	; 0xa8
   37ba8:	bl	375c0 <flatcc_builder_create_buffer@@Base>
   37bac:	mov	r6, r0
   37bb0:	cmp	r0, #0
   37bb4:	beq	37c50 <flatcc_builder_end_buffer@@Base+0x104>
   37bb8:	ldr	r1, [r4, #32]
   37bbc:	ldr	r0, [r4, #16]
   37bc0:	ldr	r2, [r4, #20]
   37bc4:	ldr	r3, [r1, #20]
   37bc8:	str	r3, [r4, #144]	; 0x90
   37bcc:	ldr	r3, [r1, #28]
   37bd0:	str	r3, [r4, #152]	; 0x98
   37bd4:	ldr	r3, [r1, #16]
   37bd8:	str	r3, [r4, #168]	; 0xa8
   37bdc:	ldrh	r1, [r1, #32]
   37be0:	strh	r1, [r4, #164]	; 0xa4
   37be4:	mov	r1, #0
   37be8:	bl	148d4 <memset@plt>
   37bec:	ldr	r0, [r4, #32]
   37bf0:	ldr	r1, [r4, #60]	; 0x3c
   37bf4:	ldr	r2, [r4, #64]	; 0x40
   37bf8:	ldr	r3, [r0, #8]
   37bfc:	str	r3, [r4, #20]
   37c00:	ldr	r3, [r0]
   37c04:	str	r3, [r4, #28]
   37c08:	add	r1, r1, r3
   37c0c:	ldr	r5, [r0, #4]
   37c10:	str	r1, [r4, #16]
   37c14:	sub	r1, r2, r3
   37c18:	cmp	r1, r5
   37c1c:	movhi	r1, r5
   37c20:	str	r1, [r4, #24]
   37c24:	ldrh	r1, [r4, #130]	; 0x82
   37c28:	ldrh	r2, [r4, #128]	; 0x80
   37c2c:	cmp	r2, r1
   37c30:	strhcc	r1, [r4, #128]	; 0x80
   37c34:	ldrh	r1, [r0, #12]
   37c38:	sub	r0, r0, #36	; 0x24
   37c3c:	str	r0, [r4, #32]
   37c40:	strh	r1, [r4, #130]	; 0x82
   37c44:	ldr	r0, [r4, #156]	; 0x9c
   37c48:	sub	r0, r0, #1
   37c4c:	str	r0, [r4, #156]	; 0x9c
   37c50:	mov	r0, r6
   37c54:	sub	sp, fp, #16
   37c58:	pop	{r4, r5, r6, sl, fp, pc}
   37c5c:	ldr	r0, [pc, #24]	; 37c7c <flatcc_builder_end_buffer@@Base+0x130>
   37c60:	ldr	r1, [pc, #24]	; 37c80 <flatcc_builder_end_buffer@@Base+0x134>
   37c64:	ldr	r3, [pc, #24]	; 37c84 <flatcc_builder_end_buffer@@Base+0x138>
   37c68:	movw	r2, #838	; 0x346
   37c6c:	add	r0, pc, r0
   37c70:	add	r1, pc, r1
   37c74:	add	r3, pc, r3
   37c78:	bl	1497c <__assert_fail@plt>
   37c7c:	andeq	r1, r2, r4, lsr #14
   37c80:	ldrdeq	r1, [r2], -sl
   37c84:	andeq	r1, r2, r8, asr #14

00037c88 <flatcc_builder_start_struct@@Base>:
   37c88:	push	{r4, r5, r6, r7, fp, lr}
   37c8c:	add	fp, sp, #16
   37c90:	sub	sp, sp, #8
   37c94:	mov	r6, r1
   37c98:	mov	r1, r2
   37c9c:	mov	r4, r0
   37ca0:	bl	37a0c <flatcc_builder_start_buffer@@Base+0xc0>
   37ca4:	mov	r5, #0
   37ca8:	cmp	r0, #0
   37cac:	bne	37d5c <flatcc_builder_start_struct@@Base+0xd4>
   37cb0:	ldr	r2, [r4, #32]
   37cb4:	mov	r0, #2
   37cb8:	mvn	r7, #3
   37cbc:	strh	r0, [r2, #14]
   37cc0:	ldr	r1, [r4, #28]
   37cc4:	ldr	r3, [r4, #64]	; 0x40
   37cc8:	ldr	r0, [r4, #60]	; 0x3c
   37ccc:	sub	r3, r3, r1
   37cd0:	add	r0, r0, r1
   37cd4:	cmn	r3, #4
   37cd8:	str	r0, [r4, #16]
   37cdc:	movcs	r3, r7
   37ce0:	str	r3, [r4, #24]
   37ce4:	str	r7, [r2, #4]
   37ce8:	ldr	r7, [r4, #20]
   37cec:	add	r2, r7, r6
   37cf0:	cmp	r2, r3
   37cf4:	str	r2, [r4, #20]
   37cf8:	bcc	37d58 <flatcc_builder_start_struct@@Base+0xd0>
   37cfc:	ldr	r0, [r4, #40]	; 0x28
   37d00:	ldr	r6, [r4, #48]	; 0x30
   37d04:	add	r1, r1, r2
   37d08:	mov	r3, #1
   37d0c:	str	r3, [sp]
   37d10:	add	r2, r1, #1
   37d14:	add	r1, r4, #60	; 0x3c
   37d18:	mov	r3, #1
   37d1c:	blx	r6
   37d20:	cmp	r0, #0
   37d24:	bne	37d5c <flatcc_builder_start_struct@@Base+0xd4>
   37d28:	ldr	r1, [r4, #28]
   37d2c:	ldr	r0, [r4, #60]	; 0x3c
   37d30:	ldr	r3, [r4, #64]	; 0x40
   37d34:	ldr	r2, [r4, #32]
   37d38:	add	r0, r0, r1
   37d3c:	sub	r1, r3, r1
   37d40:	mvn	r3, #3
   37d44:	cmn	r1, #4
   37d48:	str	r0, [r4, #16]
   37d4c:	movcs	r1, r3
   37d50:	str	r1, [r4, #24]
   37d54:	str	r3, [r2, #4]
   37d58:	add	r5, r0, r7
   37d5c:	mov	r0, r5
   37d60:	sub	sp, fp, #16
   37d64:	pop	{r4, r5, r6, r7, fp, pc}

00037d68 <flatcc_builder_struct_edit@@Base>:
   37d68:	ldr	r0, [r0, #16]
   37d6c:	bx	lr

00037d70 <flatcc_builder_end_struct@@Base>:
   37d70:	push	{r4, r5, fp, lr}
   37d74:	add	fp, sp, #8
   37d78:	mov	r4, r0
   37d7c:	ldr	r0, [r0, #32]
   37d80:	ldrh	r0, [r0, #14]
   37d84:	cmp	r0, #2
   37d88:	bne	37e28 <flatcc_builder_end_struct@@Base+0xb8>
   37d8c:	ldrh	r3, [r4, #130]	; 0x82
   37d90:	ldr	r1, [r4, #16]
   37d94:	ldr	r2, [r4, #20]
   37d98:	mov	r0, r4
   37d9c:	bl	377fc <flatcc_builder_create_struct@@Base>
   37da0:	mov	r5, r0
   37da4:	cmp	r0, #0
   37da8:	beq	37e20 <flatcc_builder_end_struct@@Base+0xb0>
   37dac:	ldr	r0, [r4, #16]
   37db0:	ldr	r2, [r4, #20]
   37db4:	mov	r1, #0
   37db8:	bl	148d4 <memset@plt>
   37dbc:	ldr	r0, [r4, #32]
   37dc0:	ldr	r1, [r4, #60]	; 0x3c
   37dc4:	ldr	ip, [r4, #64]	; 0x40
   37dc8:	ldr	r3, [r0, #8]
   37dcc:	str	r3, [r4, #20]
   37dd0:	ldr	r3, [r0]
   37dd4:	str	r3, [r4, #28]
   37dd8:	add	r1, r1, r3
   37ddc:	ldr	r2, [r0, #4]
   37de0:	str	r1, [r4, #16]
   37de4:	sub	r1, ip, r3
   37de8:	cmp	r1, r2
   37dec:	movhi	r1, r2
   37df0:	str	r1, [r4, #24]
   37df4:	ldrh	r1, [r4, #130]	; 0x82
   37df8:	ldrh	r2, [r4, #128]	; 0x80
   37dfc:	cmp	r2, r1
   37e00:	strhcc	r1, [r4, #128]	; 0x80
   37e04:	ldrh	r1, [r0, #12]
   37e08:	sub	r0, r0, #36	; 0x24
   37e0c:	str	r0, [r4, #32]
   37e10:	strh	r1, [r4, #130]	; 0x82
   37e14:	ldr	r0, [r4, #156]	; 0x9c
   37e18:	sub	r0, r0, #1
   37e1c:	str	r0, [r4, #156]	; 0x9c
   37e20:	mov	r0, r5
   37e24:	pop	{r4, r5, fp, pc}
   37e28:	ldr	r0, [pc, #24]	; 37e48 <flatcc_builder_end_struct@@Base+0xd8>
   37e2c:	ldr	r1, [pc, #24]	; 37e4c <flatcc_builder_end_struct@@Base+0xdc>
   37e30:	ldr	r3, [pc, #24]	; 37e50 <flatcc_builder_end_struct@@Base+0xe0>
   37e34:	mov	r2, #872	; 0x368
   37e38:	add	r0, pc, r0
   37e3c:	add	r1, pc, r1
   37e40:	add	r3, pc, r3
   37e44:	bl	1497c <__assert_fail@plt>
   37e48:	ldrdeq	r1, [r2], -sp
   37e4c:	andeq	r1, r2, lr, lsl #6
   37e50:	andeq	r1, r2, r1, lsl #12

00037e54 <flatcc_builder_extend_vector@@Base>:
   37e54:	push	{r4, r5, fp, lr}
   37e58:	add	fp, sp, #8
   37e5c:	sub	sp, sp, #8
   37e60:	mov	r4, r0
   37e64:	ldr	r0, [r0, #32]
   37e68:	ldr	r2, [r0, #20]
   37e6c:	adds	r2, r2, r1
   37e70:	bcs	37f28 <flatcc_builder_extend_vector@@Base+0xd4>
   37e74:	ldr	r3, [r0, #24]
   37e78:	cmp	r2, r3
   37e7c:	bhi	37f28 <flatcc_builder_extend_vector@@Base+0xd4>
   37e80:	str	r2, [r0, #20]
   37e84:	ldr	r2, [r4, #32]
   37e88:	ldr	r5, [r4, #20]
   37e8c:	ldr	r0, [r4, #24]
   37e90:	ldr	r2, [r2, #16]
   37e94:	mla	r1, r2, r1, r5
   37e98:	cmp	r1, r0
   37e9c:	str	r1, [r4, #20]
   37ea0:	bcs	37eac <flatcc_builder_extend_vector@@Base+0x58>
   37ea4:	ldr	r0, [r4, #16]
   37ea8:	b	37f1c <flatcc_builder_extend_vector@@Base+0xc8>
   37eac:	ldr	r2, [r4, #28]
   37eb0:	ldr	r0, [r4, #40]	; 0x28
   37eb4:	ldr	ip, [r4, #48]	; 0x30
   37eb8:	mov	r3, #1
   37ebc:	str	r3, [sp]
   37ec0:	mov	r3, #1
   37ec4:	add	r1, r1, r2
   37ec8:	add	r2, r1, #1
   37ecc:	add	r1, r4, #60	; 0x3c
   37ed0:	blx	ip
   37ed4:	mov	r1, r0
   37ed8:	mov	r0, #0
   37edc:	cmp	r1, #0
   37ee0:	beq	37eec <flatcc_builder_extend_vector@@Base+0x98>
   37ee4:	sub	sp, fp, #8
   37ee8:	pop	{r4, r5, fp, pc}
   37eec:	ldr	r1, [r4, #28]
   37ef0:	ldr	r0, [r4, #60]	; 0x3c
   37ef4:	ldr	r3, [r4, #64]	; 0x40
   37ef8:	ldr	r2, [r4, #32]
   37efc:	add	r0, r0, r1
   37f00:	sub	r1, r3, r1
   37f04:	mvn	r3, #3
   37f08:	cmn	r1, #4
   37f0c:	str	r0, [r4, #16]
   37f10:	movcs	r1, r3
   37f14:	str	r1, [r4, #24]
   37f18:	str	r3, [r2, #4]
   37f1c:	add	r0, r0, r5
   37f20:	sub	sp, fp, #8
   37f24:	pop	{r4, r5, fp, pc}
   37f28:	ldr	r0, [pc, #24]	; 37f48 <flatcc_builder_extend_vector@@Base+0xf4>
   37f2c:	ldr	r1, [pc, #24]	; 37f4c <flatcc_builder_extend_vector@@Base+0xf8>
   37f30:	ldr	r3, [pc, #24]	; 37f50 <flatcc_builder_extend_vector@@Base+0xfc>
   37f34:	mov	r2, #892	; 0x37c
   37f38:	add	r0, pc, r0
   37f3c:	add	r1, pc, r1
   37f40:	add	r3, pc, r3
   37f44:	bl	1497c <__assert_fail@plt>
   37f48:	ldrdeq	r2, [r2], -r8
   37f4c:	andeq	r1, r2, lr, lsl #4
   37f50:	andeq	r2, r2, fp, ror #5

00037f54 <flatcc_builder_vector_push@@Base>:
   37f54:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   37f58:	add	fp, sp, #24
   37f5c:	sub	sp, sp, #8
   37f60:	mov	r5, r0
   37f64:	ldr	r0, [r0, #32]
   37f68:	mov	r8, r1
   37f6c:	ldrh	r1, [r0, #14]
   37f70:	cmp	r1, #4
   37f74:	bne	3804c <flatcc_builder_vector_push@@Base+0xf8>
   37f78:	ldr	r1, [r0, #20]
   37f7c:	ldr	r2, [r0, #24]
   37f80:	cmp	r1, r2
   37f84:	bhi	3806c <flatcc_builder_vector_push@@Base+0x118>
   37f88:	add	r1, r1, #1
   37f8c:	str	r1, [r0, #20]
   37f90:	ldr	r1, [r5, #32]
   37f94:	ldr	r4, [r5, #20]
   37f98:	ldr	r0, [r5, #24]
   37f9c:	ldr	r6, [r1, #16]
   37fa0:	add	r1, r4, r6
   37fa4:	cmp	r1, r0
   37fa8:	str	r1, [r5, #20]
   37fac:	bcs	37fd0 <flatcc_builder_vector_push@@Base+0x7c>
   37fb0:	ldr	r0, [r5, #16]
   37fb4:	adds	r7, r0, r4
   37fb8:	beq	3803c <flatcc_builder_vector_push@@Base+0xe8>
   37fbc:	mov	r0, r7
   37fc0:	mov	r1, r8
   37fc4:	mov	r2, r6
   37fc8:	bl	14808 <memcpy@plt>
   37fcc:	b	38040 <flatcc_builder_vector_push@@Base+0xec>
   37fd0:	ldr	r2, [r5, #28]
   37fd4:	ldr	r0, [r5, #40]	; 0x28
   37fd8:	ldr	r7, [r5, #48]	; 0x30
   37fdc:	mov	r3, #1
   37fe0:	str	r3, [sp]
   37fe4:	mov	r3, #1
   37fe8:	add	r1, r1, r2
   37fec:	add	r2, r1, #1
   37ff0:	add	r1, r5, #60	; 0x3c
   37ff4:	blx	r7
   37ff8:	mov	r7, #0
   37ffc:	cmp	r0, #0
   38000:	bne	38040 <flatcc_builder_vector_push@@Base+0xec>
   38004:	ldr	r1, [r5, #28]
   38008:	ldr	r0, [r5, #60]	; 0x3c
   3800c:	ldr	r3, [r5, #64]	; 0x40
   38010:	ldr	r2, [r5, #32]
   38014:	add	r0, r0, r1
   38018:	sub	r1, r3, r1
   3801c:	mvn	r3, #3
   38020:	cmn	r1, #4
   38024:	str	r0, [r5, #16]
   38028:	movcs	r1, r3
   3802c:	str	r1, [r5, #24]
   38030:	str	r3, [r2, #4]
   38034:	adds	r7, r0, r4
   38038:	bne	37fbc <flatcc_builder_vector_push@@Base+0x68>
   3803c:	mov	r7, #0
   38040:	mov	r0, r7
   38044:	sub	sp, fp, #24
   38048:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3804c:	ldr	r0, [pc, #56]	; 3808c <flatcc_builder_vector_push@@Base+0x138>
   38050:	ldr	r1, [pc, #56]	; 38090 <flatcc_builder_vector_push@@Base+0x13c>
   38054:	ldr	r3, [pc, #56]	; 38094 <flatcc_builder_vector_push@@Base+0x140>
   38058:	movw	r2, #907	; 0x38b
   3805c:	add	r0, pc, r0
   38060:	add	r1, pc, r1
   38064:	add	r3, pc, r3
   38068:	bl	1497c <__assert_fail@plt>
   3806c:	ldr	r0, [pc, #36]	; 38098 <flatcc_builder_vector_push@@Base+0x144>
   38070:	ldr	r1, [pc, #36]	; 3809c <flatcc_builder_vector_push@@Base+0x148>
   38074:	ldr	r3, [pc, #36]	; 380a0 <flatcc_builder_vector_push@@Base+0x14c>
   38078:	mov	r2, #908	; 0x38c
   3807c:	add	r0, pc, r0
   38080:	add	r1, pc, r1
   38084:	add	r3, pc, r3
   38088:	bl	1497c <__assert_fail@plt>
   3808c:	andeq	r1, r2, r8, lsr #8
   38090:	andeq	r1, r2, sl, ror #1
   38094:	andeq	r1, r2, ip, asr #8
   38098:	andeq	r1, r2, r7, ror r4
   3809c:	andeq	r1, r2, sl, asr #1
   380a0:	andeq	r1, r2, ip, lsr #8

000380a4 <flatcc_builder_append_vector@@Base>:
   380a4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   380a8:	add	fp, sp, #24
   380ac:	sub	sp, sp, #8
   380b0:	mov	r6, r0
   380b4:	ldr	r0, [r0, #32]
   380b8:	mov	r8, r1
   380bc:	ldrh	r1, [r0, #14]
   380c0:	cmp	r1, #4
   380c4:	bne	381c4 <flatcc_builder_append_vector@@Base+0x120>
   380c8:	ldr	r1, [r0, #20]
   380cc:	mov	r5, r2
   380d0:	adds	r1, r1, r2
   380d4:	bcs	381a4 <flatcc_builder_append_vector@@Base+0x100>
   380d8:	ldr	r2, [r0, #24]
   380dc:	cmp	r1, r2
   380e0:	bhi	381a4 <flatcc_builder_append_vector@@Base+0x100>
   380e4:	str	r1, [r0, #20]
   380e8:	ldr	r1, [r6, #32]
   380ec:	ldr	r4, [r6, #20]
   380f0:	ldr	r0, [r6, #24]
   380f4:	ldr	r9, [r1, #16]
   380f8:	mla	r1, r9, r5, r4
   380fc:	cmp	r1, r0
   38100:	str	r1, [r6, #20]
   38104:	bcs	38128 <flatcc_builder_append_vector@@Base+0x84>
   38108:	ldr	r0, [r6, #16]
   3810c:	adds	r7, r0, r4
   38110:	beq	38194 <flatcc_builder_append_vector@@Base+0xf0>
   38114:	mul	r2, r9, r5
   38118:	mov	r0, r7
   3811c:	mov	r1, r8
   38120:	bl	14808 <memcpy@plt>
   38124:	b	38198 <flatcc_builder_append_vector@@Base+0xf4>
   38128:	ldr	r2, [r6, #28]
   3812c:	ldr	r0, [r6, #40]	; 0x28
   38130:	ldr	r7, [r6, #48]	; 0x30
   38134:	mov	r3, #1
   38138:	str	r3, [sp]
   3813c:	mov	r3, #1
   38140:	add	r1, r1, r2
   38144:	add	r2, r1, #1
   38148:	add	r1, r6, #60	; 0x3c
   3814c:	blx	r7
   38150:	mov	r7, #0
   38154:	cmp	r0, #0
   38158:	bne	38198 <flatcc_builder_append_vector@@Base+0xf4>
   3815c:	ldr	r1, [r6, #28]
   38160:	ldr	r0, [r6, #60]	; 0x3c
   38164:	ldr	r3, [r6, #64]	; 0x40
   38168:	ldr	r2, [r6, #32]
   3816c:	add	r0, r0, r1
   38170:	sub	r1, r3, r1
   38174:	mvn	r3, #3
   38178:	cmn	r1, #4
   3817c:	str	r0, [r6, #16]
   38180:	movcs	r1, r3
   38184:	str	r1, [r6, #24]
   38188:	str	r3, [r2, #4]
   3818c:	adds	r7, r0, r4
   38190:	bne	38114 <flatcc_builder_append_vector@@Base+0x70>
   38194:	mov	r7, #0
   38198:	mov	r0, r7
   3819c:	sub	sp, fp, #24
   381a0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   381a4:	ldr	r0, [pc, #68]	; 381f0 <flatcc_builder_append_vector@@Base+0x14c>
   381a8:	ldr	r1, [pc, #68]	; 381f4 <flatcc_builder_append_vector@@Base+0x150>
   381ac:	ldr	r3, [pc, #68]	; 381f8 <flatcc_builder_append_vector@@Base+0x154>
   381b0:	mov	r2, #892	; 0x37c
   381b4:	add	r0, pc, r0
   381b8:	add	r1, pc, r1
   381bc:	add	r3, pc, r3
   381c0:	bl	1497c <__assert_fail@plt>
   381c4:	ldr	r0, [pc, #24]	; 381e4 <flatcc_builder_append_vector@@Base+0x140>
   381c8:	ldr	r1, [pc, #24]	; 381e8 <flatcc_builder_append_vector@@Base+0x144>
   381cc:	ldr	r3, [pc, #24]	; 381ec <flatcc_builder_append_vector@@Base+0x148>
   381d0:	movw	r2, #915	; 0x393
   381d4:	add	r0, pc, r0
   381d8:	add	r1, pc, r1
   381dc:	add	r3, pc, r3
   381e0:	bl	1497c <__assert_fail@plt>
   381e4:			; <UNDEFINED> instruction: 0x000212b0
   381e8:	andeq	r0, r2, r2, ror pc
   381ec:	andeq	r1, r2, r4, asr r3
   381f0:	andeq	r2, r2, ip, asr r0
   381f4:	muleq	r2, r2, pc	; <UNPREDICTABLE>
   381f8:	andeq	r2, r2, pc, rrx

000381fc <flatcc_builder_extend_offset_vector@@Base>:
   381fc:	push	{r4, r5, fp, lr}
   38200:	add	fp, sp, #8
   38204:	sub	sp, sp, #8
   38208:	mov	r4, r0
   3820c:	ldr	r0, [r0, #32]
   38210:	ldr	r2, [r0, #20]
   38214:	adds	r2, r2, r1
   38218:	cmpcc	r2, #1073741824	; 0x40000000
   3821c:	bcc	38240 <flatcc_builder_extend_offset_vector@@Base+0x44>
   38220:	ldr	r0, [pc, #184]	; 382e0 <flatcc_builder_extend_offset_vector@@Base+0xe4>
   38224:	ldr	r1, [pc, #184]	; 382e4 <flatcc_builder_extend_offset_vector@@Base+0xe8>
   38228:	ldr	r3, [pc, #184]	; 382e8 <flatcc_builder_extend_offset_vector@@Base+0xec>
   3822c:	mov	r2, #892	; 0x37c
   38230:	add	r0, pc, r0
   38234:	add	r1, pc, r1
   38238:	add	r3, pc, r3
   3823c:	bl	1497c <__assert_fail@plt>
   38240:	str	r2, [r0, #20]
   38244:	ldr	r5, [r4, #20]
   38248:	ldr	r0, [r4, #24]
   3824c:	add	r1, r5, r1, lsl #2
   38250:	cmp	r1, r0
   38254:	str	r1, [r4, #20]
   38258:	bcs	38264 <flatcc_builder_extend_offset_vector@@Base+0x68>
   3825c:	ldr	r0, [r4, #16]
   38260:	b	382d4 <flatcc_builder_extend_offset_vector@@Base+0xd8>
   38264:	ldr	r2, [r4, #28]
   38268:	ldr	r0, [r4, #40]	; 0x28
   3826c:	ldr	ip, [r4, #48]	; 0x30
   38270:	mov	r3, #1
   38274:	str	r3, [sp]
   38278:	mov	r3, #1
   3827c:	add	r1, r1, r2
   38280:	add	r2, r1, #1
   38284:	add	r1, r4, #60	; 0x3c
   38288:	blx	ip
   3828c:	mov	r1, r0
   38290:	mov	r0, #0
   38294:	cmp	r1, #0
   38298:	beq	382a4 <flatcc_builder_extend_offset_vector@@Base+0xa8>
   3829c:	sub	sp, fp, #8
   382a0:	pop	{r4, r5, fp, pc}
   382a4:	ldr	r1, [r4, #28]
   382a8:	ldr	r0, [r4, #60]	; 0x3c
   382ac:	ldr	r3, [r4, #64]	; 0x40
   382b0:	ldr	r2, [r4, #32]
   382b4:	add	r0, r0, r1
   382b8:	sub	r1, r3, r1
   382bc:	mvn	r3, #3
   382c0:	cmn	r1, #4
   382c4:	str	r0, [r4, #16]
   382c8:	movcs	r1, r3
   382cc:	str	r1, [r4, #24]
   382d0:	str	r3, [r2, #4]
   382d4:	add	r0, r0, r5
   382d8:	sub	sp, fp, #8
   382dc:	pop	{r4, r5, fp, pc}
   382e0:	andeq	r1, r2, r0, ror #31
   382e4:	andeq	r0, r2, r6, lsl pc
   382e8:	strdeq	r1, [r2], -r3

000382ec <flatcc_builder_offset_vector_push@@Base>:
   382ec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   382f0:	add	fp, sp, #24
   382f4:	sub	sp, sp, #8
   382f8:	mov	r6, r0
   382fc:	ldr	r0, [r0, #32]
   38300:	mov	r8, r1
   38304:	ldrh	r1, [r0, #14]
   38308:	cmp	r1, #5
   3830c:	bne	383c0 <flatcc_builder_offset_vector_push@@Base+0xd4>
   38310:	ldr	r1, [r0, #20]
   38314:	mov	r5, #0
   38318:	cmn	r1, #-1073741823	; 0xc0000001
   3831c:	beq	383b4 <flatcc_builder_offset_vector_push@@Base+0xc8>
   38320:	add	r1, r1, #1
   38324:	str	r1, [r0, #20]
   38328:	ldr	r7, [r6, #20]
   3832c:	ldr	r0, [r6, #24]
   38330:	add	r1, r7, #4
   38334:	cmp	r1, r0
   38338:	str	r1, [r6, #20]
   3833c:	bcs	38348 <flatcc_builder_offset_vector_push@@Base+0x5c>
   38340:	ldr	r0, [r6, #16]
   38344:	b	383a8 <flatcc_builder_offset_vector_push@@Base+0xbc>
   38348:	ldr	r1, [r6, #28]
   3834c:	ldr	r0, [r6, #40]	; 0x28
   38350:	ldr	r4, [r6, #48]	; 0x30
   38354:	mov	r2, #1
   38358:	mov	r3, #1
   3835c:	str	r2, [sp]
   38360:	add	r1, r7, r1
   38364:	add	r2, r1, #5
   38368:	add	r1, r6, #60	; 0x3c
   3836c:	blx	r4
   38370:	cmp	r0, #0
   38374:	bne	383b4 <flatcc_builder_offset_vector_push@@Base+0xc8>
   38378:	ldr	r1, [r6, #28]
   3837c:	ldr	r0, [r6, #60]	; 0x3c
   38380:	ldr	r3, [r6, #64]	; 0x40
   38384:	ldr	r2, [r6, #32]
   38388:	add	r0, r0, r1
   3838c:	sub	r1, r3, r1
   38390:	mvn	r3, #3
   38394:	cmn	r1, #4
   38398:	str	r0, [r6, #16]
   3839c:	movcs	r1, r3
   383a0:	str	r1, [r6, #24]
   383a4:	str	r3, [r2, #4]
   383a8:	adds	r0, r0, r7
   383ac:	movne	r5, r0
   383b0:	strne	r8, [r0]
   383b4:	mov	r0, r5
   383b8:	sub	sp, fp, #24
   383bc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   383c0:	ldr	r0, [pc, #24]	; 383e0 <flatcc_builder_offset_vector_push@@Base+0xf4>
   383c4:	ldr	r1, [pc, #24]	; 383e4 <flatcc_builder_offset_vector_push@@Base+0xf8>
   383c8:	ldr	r3, [pc, #24]	; 383e8 <flatcc_builder_offset_vector_push@@Base+0xfc>
   383cc:	movw	r2, #934	; 0x3a6
   383d0:	add	r0, pc, r0
   383d4:	add	r1, pc, r1
   383d8:	add	r3, pc, r3
   383dc:	bl	1497c <__assert_fail@plt>
   383e0:	andeq	r1, r2, sp, lsr #3
   383e4:	andeq	r0, r2, r6, ror sp
   383e8:	ldrdeq	r1, [r2], -r8

000383ec <flatcc_builder_append_offset_vector@@Base>:
   383ec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   383f0:	add	fp, sp, #24
   383f4:	sub	sp, sp, #8
   383f8:	mov	r6, r0
   383fc:	ldr	r0, [r0, #32]
   38400:	mov	r8, r1
   38404:	ldrh	r1, [r0, #14]
   38408:	cmp	r1, #5
   3840c:	bne	384fc <flatcc_builder_append_offset_vector@@Base+0x110>
   38410:	ldr	r1, [r0, #20]
   38414:	mov	r5, r2
   38418:	adds	r1, r1, r2
   3841c:	cmpcc	r1, #1073741824	; 0x40000000
   38420:	bcc	38444 <flatcc_builder_append_offset_vector@@Base+0x58>
   38424:	ldr	r0, [pc, #252]	; 38528 <flatcc_builder_append_offset_vector@@Base+0x13c>
   38428:	ldr	r1, [pc, #252]	; 3852c <flatcc_builder_append_offset_vector@@Base+0x140>
   3842c:	ldr	r3, [pc, #252]	; 38530 <flatcc_builder_append_offset_vector@@Base+0x144>
   38430:	mov	r2, #892	; 0x37c
   38434:	add	r0, pc, r0
   38438:	add	r1, pc, r1
   3843c:	add	r3, pc, r3
   38440:	bl	1497c <__assert_fail@plt>
   38444:	str	r1, [r0, #20]
   38448:	ldr	r4, [r6, #20]
   3844c:	ldr	r0, [r6, #24]
   38450:	add	r1, r4, r5, lsl #2
   38454:	cmp	r1, r0
   38458:	str	r1, [r6, #20]
   3845c:	bcs	38480 <flatcc_builder_append_offset_vector@@Base+0x94>
   38460:	ldr	r0, [r6, #16]
   38464:	adds	r7, r0, r4
   38468:	beq	384ec <flatcc_builder_append_offset_vector@@Base+0x100>
   3846c:	lsl	r2, r5, #2
   38470:	mov	r0, r7
   38474:	mov	r1, r8
   38478:	bl	14808 <memcpy@plt>
   3847c:	b	384f0 <flatcc_builder_append_offset_vector@@Base+0x104>
   38480:	ldr	r2, [r6, #28]
   38484:	ldr	r0, [r6, #40]	; 0x28
   38488:	ldr	r7, [r6, #48]	; 0x30
   3848c:	mov	r3, #1
   38490:	str	r3, [sp]
   38494:	mov	r3, #1
   38498:	add	r1, r1, r2
   3849c:	add	r2, r1, #1
   384a0:	add	r1, r6, #60	; 0x3c
   384a4:	blx	r7
   384a8:	mov	r7, #0
   384ac:	cmp	r0, #0
   384b0:	bne	384f0 <flatcc_builder_append_offset_vector@@Base+0x104>
   384b4:	ldr	r1, [r6, #28]
   384b8:	ldr	r0, [r6, #60]	; 0x3c
   384bc:	ldr	r3, [r6, #64]	; 0x40
   384c0:	ldr	r2, [r6, #32]
   384c4:	add	r0, r0, r1
   384c8:	sub	r1, r3, r1
   384cc:	mvn	r3, #3
   384d0:	cmn	r1, #4
   384d4:	str	r0, [r6, #16]
   384d8:	movcs	r1, r3
   384dc:	str	r1, [r6, #24]
   384e0:	str	r3, [r2, #4]
   384e4:	adds	r7, r0, r4
   384e8:	bne	3846c <flatcc_builder_append_offset_vector@@Base+0x80>
   384ec:	mov	r7, #0
   384f0:	mov	r0, r7
   384f4:	sub	sp, fp, #24
   384f8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   384fc:	ldr	r0, [pc, #24]	; 3851c <flatcc_builder_append_offset_vector@@Base+0x130>
   38500:	ldr	r1, [pc, #24]	; 38520 <flatcc_builder_append_offset_vector@@Base+0x134>
   38504:	ldr	r3, [pc, #24]	; 38524 <flatcc_builder_append_offset_vector@@Base+0x138>
   38508:	mov	r2, #948	; 0x3b4
   3850c:	add	r0, pc, r0
   38510:	add	r1, pc, r1
   38514:	add	r3, pc, r3
   38518:	bl	1497c <__assert_fail@plt>
   3851c:	andeq	r1, r2, r1, ror r0
   38520:	andeq	r0, r2, sl, lsr ip
   38524:	strdeq	r1, [r2], -lr
   38528:	ldrdeq	r1, [r2], -ip
   3852c:	andeq	r0, r2, r2, lsl sp
   38530:	andeq	r1, r2, pc, ror #27

00038534 <flatcc_builder_extend_string@@Base>:
   38534:	push	{r4, r5, fp, lr}
   38538:	add	fp, sp, #8
   3853c:	sub	sp, sp, #8
   38540:	mov	r4, r0
   38544:	ldr	r0, [r0, #32]
   38548:	ldrh	r2, [r0, #14]
   3854c:	cmp	r2, #6
   38550:	bne	38600 <flatcc_builder_extend_string@@Base+0xcc>
   38554:	ldr	r2, [r0, #20]
   38558:	adds	r2, r2, r1
   3855c:	bcs	38620 <flatcc_builder_extend_string@@Base+0xec>
   38560:	str	r2, [r0, #20]
   38564:	ldr	r5, [r4, #20]
   38568:	ldr	r0, [r4, #24]
   3856c:	add	r1, r5, r1
   38570:	cmp	r1, r0
   38574:	str	r1, [r4, #20]
   38578:	bcs	38584 <flatcc_builder_extend_string@@Base+0x50>
   3857c:	ldr	r0, [r4, #16]
   38580:	b	385f4 <flatcc_builder_extend_string@@Base+0xc0>
   38584:	ldr	r2, [r4, #28]
   38588:	ldr	r0, [r4, #40]	; 0x28
   3858c:	ldr	ip, [r4, #48]	; 0x30
   38590:	mov	r3, #1
   38594:	str	r3, [sp]
   38598:	mov	r3, #1
   3859c:	add	r1, r1, r2
   385a0:	add	r2, r1, #1
   385a4:	add	r1, r4, #60	; 0x3c
   385a8:	blx	ip
   385ac:	mov	r1, r0
   385b0:	mov	r0, #0
   385b4:	cmp	r1, #0
   385b8:	beq	385c4 <flatcc_builder_extend_string@@Base+0x90>
   385bc:	sub	sp, fp, #8
   385c0:	pop	{r4, r5, fp, pc}
   385c4:	ldr	r1, [r4, #28]
   385c8:	ldr	r0, [r4, #60]	; 0x3c
   385cc:	ldr	r3, [r4, #64]	; 0x40
   385d0:	ldr	r2, [r4, #32]
   385d4:	add	r0, r0, r1
   385d8:	sub	r1, r3, r1
   385dc:	mvn	r3, #3
   385e0:	cmn	r1, #4
   385e4:	str	r0, [r4, #16]
   385e8:	movcs	r1, r3
   385ec:	str	r1, [r4, #24]
   385f0:	str	r3, [r2, #4]
   385f4:	add	r0, r0, r5
   385f8:	sub	sp, fp, #8
   385fc:	pop	{r4, r5, fp, pc}
   38600:	ldr	r0, [pc, #56]	; 38640 <flatcc_builder_extend_string@@Base+0x10c>
   38604:	ldr	r1, [pc, #56]	; 38644 <flatcc_builder_extend_string@@Base+0x110>
   38608:	ldr	r3, [pc, #56]	; 38648 <flatcc_builder_extend_string@@Base+0x114>
   3860c:	movw	r2, #957	; 0x3bd
   38610:	add	r0, pc, r0
   38614:	add	r1, pc, r1
   38618:	add	r3, pc, r3
   3861c:	bl	1497c <__assert_fail@plt>
   38620:	ldr	r0, [pc, #36]	; 3864c <flatcc_builder_extend_string@@Base+0x118>
   38624:	ldr	r1, [pc, #36]	; 38650 <flatcc_builder_extend_string@@Base+0x11c>
   38628:	ldr	r3, [pc, #36]	; 38654 <flatcc_builder_extend_string@@Base+0x120>
   3862c:	mov	r2, #892	; 0x37c
   38630:	add	r0, pc, r0
   38634:	add	r1, pc, r1
   38638:	add	r3, pc, r3
   3863c:	bl	1497c <__assert_fail@plt>
   38640:	andeq	r1, r2, r6, ror r0
   38644:	andeq	r0, r2, r6, lsr fp
   38648:	muleq	r2, sl, r0
   3864c:	andeq	r1, r2, r0, ror #23
   38650:	andeq	r0, r2, r6, lsl fp
   38654:	strdeq	r1, [r2], -r3

00038658 <flatcc_builder_append_string@@Base>:
   38658:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3865c:	add	fp, sp, #24
   38660:	sub	sp, sp, #8
   38664:	mov	r6, r0
   38668:	ldr	r0, [r0, #32]
   3866c:	mov	r8, r1
   38670:	ldrh	r1, [r0, #14]
   38674:	cmp	r1, #6
   38678:	bne	38744 <flatcc_builder_append_string@@Base+0xec>
   3867c:	ldr	r1, [r0, #20]
   38680:	mov	r4, r2
   38684:	adds	r1, r1, r2
   38688:	bcs	38764 <flatcc_builder_append_string@@Base+0x10c>
   3868c:	str	r1, [r0, #20]
   38690:	ldr	r5, [r6, #20]
   38694:	ldr	r0, [r6, #24]
   38698:	add	r1, r5, r4
   3869c:	cmp	r1, r0
   386a0:	str	r1, [r6, #20]
   386a4:	bcs	386c8 <flatcc_builder_append_string@@Base+0x70>
   386a8:	ldr	r0, [r6, #16]
   386ac:	adds	r7, r0, r5
   386b0:	beq	38734 <flatcc_builder_append_string@@Base+0xdc>
   386b4:	mov	r0, r7
   386b8:	mov	r1, r8
   386bc:	mov	r2, r4
   386c0:	bl	14808 <memcpy@plt>
   386c4:	b	38738 <flatcc_builder_append_string@@Base+0xe0>
   386c8:	ldr	r2, [r6, #28]
   386cc:	ldr	r0, [r6, #40]	; 0x28
   386d0:	ldr	r7, [r6, #48]	; 0x30
   386d4:	mov	r3, #1
   386d8:	str	r3, [sp]
   386dc:	mov	r3, #1
   386e0:	add	r1, r1, r2
   386e4:	add	r2, r1, #1
   386e8:	add	r1, r6, #60	; 0x3c
   386ec:	blx	r7
   386f0:	mov	r7, #0
   386f4:	cmp	r0, #0
   386f8:	bne	38738 <flatcc_builder_append_string@@Base+0xe0>
   386fc:	ldr	r1, [r6, #28]
   38700:	ldr	r0, [r6, #60]	; 0x3c
   38704:	ldr	r3, [r6, #64]	; 0x40
   38708:	ldr	r2, [r6, #32]
   3870c:	add	r0, r0, r1
   38710:	sub	r1, r3, r1
   38714:	mvn	r3, #3
   38718:	cmn	r1, #4
   3871c:	str	r0, [r6, #16]
   38720:	movcs	r1, r3
   38724:	str	r1, [r6, #24]
   38728:	str	r3, [r2, #4]
   3872c:	adds	r7, r0, r5
   38730:	bne	386b4 <flatcc_builder_append_string@@Base+0x5c>
   38734:	mov	r7, #0
   38738:	mov	r0, r7
   3873c:	sub	sp, fp, #24
   38740:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   38744:	ldr	r0, [pc, #56]	; 38784 <flatcc_builder_append_string@@Base+0x12c>
   38748:	ldr	r1, [pc, #56]	; 38788 <flatcc_builder_append_string@@Base+0x130>
   3874c:	ldr	r3, [pc, #56]	; 3878c <flatcc_builder_append_string@@Base+0x134>
   38750:	movw	r2, #966	; 0x3c6
   38754:	add	r0, pc, r0
   38758:	add	r1, pc, r1
   3875c:	add	r3, pc, r3
   38760:	bl	1497c <__assert_fail@plt>
   38764:	ldr	r0, [pc, #36]	; 38790 <flatcc_builder_append_string@@Base+0x138>
   38768:	ldr	r1, [pc, #36]	; 38794 <flatcc_builder_append_string@@Base+0x13c>
   3876c:	ldr	r3, [pc, #36]	; 38798 <flatcc_builder_append_string@@Base+0x140>
   38770:	mov	r2, #892	; 0x37c
   38774:	add	r0, pc, r0
   38778:	add	r1, pc, r1
   3877c:	add	r3, pc, r3
   38780:	bl	1497c <__assert_fail@plt>
   38784:	andeq	r0, r2, r2, lsr pc
   38788:	strdeq	r0, [r2], -r2
   3878c:	muleq	r2, r5, pc	; <UNPREDICTABLE>
   38790:	muleq	r2, ip, sl
   38794:	ldrdeq	r0, [r2], -r2
   38798:	andeq	r1, r2, pc, lsr #21

0003879c <flatcc_builder_append_string_str@@Base>:
   3879c:	push	{r4, r5, fp, lr}
   387a0:	add	fp, sp, #8
   387a4:	mov	r5, r0
   387a8:	mov	r0, r1
   387ac:	mov	r4, r1
   387b0:	bl	148b0 <strlen@plt>
   387b4:	mov	r2, r0
   387b8:	mov	r0, r5
   387bc:	mov	r1, r4
   387c0:	pop	{r4, r5, fp, lr}
   387c4:	b	38658 <flatcc_builder_append_string@@Base>

000387c8 <flatcc_builder_append_string_strn@@Base>:
   387c8:	push	{r4, r5, r6, sl, fp, lr}
   387cc:	add	fp, sp, #16
   387d0:	mov	r6, r0
   387d4:	mov	r5, r1
   387d8:	mov	r0, r1
   387dc:	mov	r1, #0
   387e0:	mov	r4, r2
   387e4:	bl	148f8 <memchr@plt>
   387e8:	cmp	r0, #0
   387ec:	mov	r1, r5
   387f0:	subne	r4, r0, r5
   387f4:	mov	r0, r6
   387f8:	mov	r2, r4
   387fc:	pop	{r4, r5, r6, sl, fp, lr}
   38800:	b	38658 <flatcc_builder_append_string@@Base>

00038804 <flatcc_builder_truncate_vector@@Base>:
   38804:	push	{fp, lr}
   38808:	mov	fp, sp
   3880c:	ldr	r2, [r0, #32]
   38810:	ldrh	r3, [r2, #14]
   38814:	cmp	r3, #4
   38818:	bne	38860 <flatcc_builder_truncate_vector@@Base+0x5c>
   3881c:	ldr	r3, [r2, #20]
   38820:	cmp	r3, r1
   38824:	bcc	38880 <flatcc_builder_truncate_vector@@Base+0x7c>
   38828:	sub	r3, r3, r1
   3882c:	str	r3, [r2, #20]
   38830:	ldr	r2, [r0, #32]
   38834:	ldr	r3, [r0, #20]
   38838:	ldr	ip, [r0, #16]
   3883c:	ldr	r2, [r2, #16]
   38840:	mls	r3, r2, r1, r3
   38844:	mul	r2, r2, r1
   38848:	mov	r1, #0
   3884c:	str	r3, [r0, #20]
   38850:	add	r0, ip, r3
   38854:	bl	148d4 <memset@plt>
   38858:	mov	r0, #0
   3885c:	pop	{fp, pc}
   38860:	ldr	r0, [pc, #56]	; 388a0 <flatcc_builder_truncate_vector@@Base+0x9c>
   38864:	ldr	r1, [pc, #56]	; 388a4 <flatcc_builder_truncate_vector@@Base+0xa0>
   38868:	ldr	r3, [pc, #56]	; 388a8 <flatcc_builder_truncate_vector@@Base+0xa4>
   3886c:	movw	r2, #985	; 0x3d9
   38870:	add	r0, pc, r0
   38874:	add	r1, pc, r1
   38878:	add	r3, pc, r3
   3887c:	bl	1497c <__assert_fail@plt>
   38880:	ldr	r0, [pc, #36]	; 388ac <flatcc_builder_truncate_vector@@Base+0xa8>
   38884:	ldr	r1, [pc, #36]	; 388b0 <flatcc_builder_truncate_vector@@Base+0xac>
   38888:	ldr	r3, [pc, #36]	; 388b4 <flatcc_builder_truncate_vector@@Base+0xb0>
   3888c:	movw	r2, #986	; 0x3da
   38890:	add	r0, pc, r0
   38894:	add	r1, pc, r1
   38898:	add	r3, pc, r3
   3889c:	bl	1497c <__assert_fail@plt>
   388a0:	andeq	r0, r2, r4, lsl ip
   388a4:	ldrdeq	r0, [r2], -r6
   388a8:	andeq	r0, r2, r6, asr #29
   388ac:	andeq	r0, r2, sp, ror #29
   388b0:			; <UNDEFINED> instruction: 0x000208b6
   388b4:	andeq	r0, r2, r6, lsr #29

000388b8 <flatcc_builder_truncate_offset_vector@@Base>:
   388b8:	push	{fp, lr}
   388bc:	mov	fp, sp
   388c0:	ldr	r2, [r0, #32]
   388c4:	ldrh	r3, [r2, #14]
   388c8:	cmp	r3, #5
   388cc:	bne	38914 <flatcc_builder_truncate_offset_vector@@Base+0x5c>
   388d0:	ldr	r3, [r2, #20]
   388d4:	cmp	r3, r1
   388d8:	bcc	38934 <flatcc_builder_truncate_offset_vector@@Base+0x7c>
   388dc:	sub	r3, r3, r1
   388e0:	str	r3, [r2, #20]
   388e4:	ldr	r2, [r0, #32]
   388e8:	ldr	r3, [r0, #20]
   388ec:	ldr	ip, [r0, #16]
   388f0:	ldr	r2, [r2, #16]
   388f4:	mls	r3, r2, r1, r3
   388f8:	mul	r2, r2, r1
   388fc:	mov	r1, #0
   38900:	str	r3, [r0, #20]
   38904:	add	r0, ip, r3
   38908:	bl	148d4 <memset@plt>
   3890c:	mov	r0, #0
   38910:	pop	{fp, pc}
   38914:	ldr	r0, [pc, #56]	; 38954 <flatcc_builder_truncate_offset_vector@@Base+0x9c>
   38918:	ldr	r1, [pc, #56]	; 38958 <flatcc_builder_truncate_offset_vector@@Base+0xa0>
   3891c:	ldr	r3, [pc, #56]	; 3895c <flatcc_builder_truncate_offset_vector@@Base+0xa4>
   38920:	movw	r2, #994	; 0x3e2
   38924:	add	r0, pc, r0
   38928:	add	r1, pc, r1
   3892c:	add	r3, pc, r3
   38930:	bl	1497c <__assert_fail@plt>
   38934:	ldr	r0, [pc, #36]	; 38960 <flatcc_builder_truncate_offset_vector@@Base+0xa8>
   38938:	ldr	r1, [pc, #36]	; 38964 <flatcc_builder_truncate_offset_vector@@Base+0xac>
   3893c:	ldr	r3, [pc, #36]	; 38968 <flatcc_builder_truncate_offset_vector@@Base+0xb0>
   38940:	movw	r2, #995	; 0x3e3
   38944:	add	r0, pc, r0
   38948:	add	r1, pc, r1
   3894c:	add	r3, pc, r3
   38950:	bl	1497c <__assert_fail@plt>
   38954:	andeq	r0, r2, r9, asr ip
   38958:	andeq	r0, r2, r2, lsr #16
   3895c:	andeq	r0, r2, r5, ror lr
   38960:	andeq	r0, r2, r3, lsr #29
   38964:	andeq	r0, r2, r2, lsl #16
   38968:	andeq	r0, r2, r5, asr lr

0003896c <flatcc_builder_truncate_string@@Base>:
   3896c:	push	{fp, lr}
   38970:	mov	fp, sp
   38974:	mov	r2, r1
   38978:	ldr	r1, [r0, #32]
   3897c:	ldrh	r3, [r1, #14]
   38980:	cmp	r3, #6
   38984:	bne	389c0 <flatcc_builder_truncate_string@@Base+0x54>
   38988:	ldr	r3, [r1, #20]
   3898c:	cmp	r3, r2
   38990:	bcc	389e0 <flatcc_builder_truncate_string@@Base+0x74>
   38994:	sub	r3, r3, r2
   38998:	str	r3, [r1, #20]
   3899c:	ldr	r3, [r0, #20]
   389a0:	ldr	r1, [r0, #16]
   389a4:	sub	r3, r3, r2
   389a8:	str	r3, [r0, #20]
   389ac:	add	r0, r1, r3
   389b0:	mov	r1, #0
   389b4:	bl	148d4 <memset@plt>
   389b8:	mov	r0, #0
   389bc:	pop	{fp, pc}
   389c0:	ldr	r0, [pc, #56]	; 38a00 <flatcc_builder_truncate_string@@Base+0x94>
   389c4:	ldr	r1, [pc, #56]	; 38a04 <flatcc_builder_truncate_string@@Base+0x98>
   389c8:	ldr	r3, [pc, #56]	; 38a08 <flatcc_builder_truncate_string@@Base+0x9c>
   389cc:	movw	r2, #1003	; 0x3eb
   389d0:	add	r0, pc, r0
   389d4:	add	r1, pc, r1
   389d8:	add	r3, pc, r3
   389dc:	bl	1497c <__assert_fail@plt>
   389e0:	ldr	r0, [pc, #36]	; 38a0c <flatcc_builder_truncate_string@@Base+0xa0>
   389e4:	ldr	r1, [pc, #36]	; 38a10 <flatcc_builder_truncate_string@@Base+0xa4>
   389e8:	ldr	r3, [pc, #36]	; 38a14 <flatcc_builder_truncate_string@@Base+0xa8>
   389ec:	mov	r2, #1004	; 0x3ec
   389f0:	add	r0, pc, r0
   389f4:	add	r1, pc, r1
   389f8:	add	r3, pc, r3
   389fc:	bl	1497c <__assert_fail@plt>
   38a00:			; <UNDEFINED> instruction: 0x00020cb6
   38a04:	andeq	r0, r2, r6, ror r7
   38a08:	andeq	r0, r2, sl, asr #28
   38a0c:	andeq	r0, r2, r1, ror lr
   38a10:	andeq	r0, r2, r6, asr r7
   38a14:	andeq	r0, r2, sl, lsr #28

00038a18 <flatcc_builder_start_vector@@Base>:
   38a18:	push	{r4, r5, r6, r7, fp, lr}
   38a1c:	add	fp, sp, #16
   38a20:	mov	r7, #4
   38a24:	cmp	r2, #4
   38a28:	mov	r6, r1
   38a2c:	mov	r5, r3
   38a30:	mov	r4, r0
   38a34:	movls	r2, r7
   38a38:	mov	r1, r2
   38a3c:	bl	37a0c <flatcc_builder_start_buffer@@Base+0xc0>
   38a40:	mov	r1, r0
   38a44:	mvn	r0, #0
   38a48:	cmp	r1, #0
   38a4c:	popne	{r4, r5, r6, r7, fp, pc}
   38a50:	ldr	r0, [r4, #32]
   38a54:	str	r6, [r0, #16]
   38a58:	mov	r0, #0
   38a5c:	ldr	r1, [r4, #32]
   38a60:	str	r0, [r1, #20]
   38a64:	ldr	r1, [r4, #32]
   38a68:	str	r5, [r1, #24]
   38a6c:	ldr	r1, [r4, #32]
   38a70:	strh	r7, [r1, #14]
   38a74:	ldr	r2, [r4, #28]
   38a78:	ldr	r3, [r4, #60]	; 0x3c
   38a7c:	ldr	r7, [r4, #64]	; 0x40
   38a80:	add	r3, r3, r2
   38a84:	sub	r2, r7, r2
   38a88:	str	r3, [r4, #16]
   38a8c:	mvn	r3, #3
   38a90:	cmn	r2, #4
   38a94:	movcs	r2, r3
   38a98:	str	r2, [r4, #24]
   38a9c:	str	r3, [r1, #4]
   38aa0:	pop	{r4, r5, r6, r7, fp, pc}

00038aa4 <flatcc_builder_start_offset_vector@@Base>:
   38aa4:	push	{r4, r5, fp, lr}
   38aa8:	add	fp, sp, #8
   38aac:	mov	r1, #4
   38ab0:	mov	r4, r0
   38ab4:	mov	r5, #4
   38ab8:	bl	37a0c <flatcc_builder_start_buffer@@Base+0xc0>
   38abc:	mov	r1, r0
   38ac0:	mvn	r0, #0
   38ac4:	cmp	r1, #0
   38ac8:	popne	{r4, r5, fp, pc}
   38acc:	ldr	r0, [r4, #32]
   38ad0:	mov	r2, #5
   38ad4:	str	r5, [r0, #16]
   38ad8:	mov	r0, #0
   38adc:	ldr	r1, [r4, #32]
   38ae0:	str	r0, [r1, #20]
   38ae4:	ldr	r1, [r4, #32]
   38ae8:	strh	r2, [r1, #14]
   38aec:	ldr	r2, [r4, #28]
   38af0:	ldr	r3, [r4, #60]	; 0x3c
   38af4:	ldr	r5, [r4, #64]	; 0x40
   38af8:	add	r3, r3, r2
   38afc:	sub	r2, r5, r2
   38b00:	str	r3, [r4, #16]
   38b04:	mvn	r3, #3
   38b08:	cmn	r2, #4
   38b0c:	movcs	r2, r3
   38b10:	str	r2, [r4, #24]
   38b14:	str	r3, [r1, #4]
   38b18:	pop	{r4, r5, fp, pc}

00038b1c <flatcc_builder_create_offset_vector@@Base>:
   38b1c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   38b20:	add	fp, sp, #24
   38b24:	sub	sp, sp, #8
   38b28:	mov	r8, r1
   38b2c:	mov	r1, #4
   38b30:	mov	r6, r2
   38b34:	mov	r4, r0
   38b38:	mov	r7, #4
   38b3c:	bl	37a0c <flatcc_builder_start_buffer@@Base+0xc0>
   38b40:	cmp	r0, #0
   38b44:	beq	38b54 <flatcc_builder_create_offset_vector@@Base+0x38>
   38b48:	mov	r0, #0
   38b4c:	sub	sp, fp, #24
   38b50:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   38b54:	ldr	r0, [r4, #32]
   38b58:	mov	r1, #0
   38b5c:	str	r7, [r0, #16]
   38b60:	ldr	r0, [r4, #32]
   38b64:	str	r1, [r0, #20]
   38b68:	mov	r1, #5
   38b6c:	ldr	r0, [r4, #32]
   38b70:	strh	r1, [r0, #14]
   38b74:	ldr	r1, [r4, #28]
   38b78:	ldr	r2, [r4, #60]	; 0x3c
   38b7c:	ldr	r3, [r4, #64]	; 0x40
   38b80:	add	r2, r2, r1
   38b84:	sub	r1, r3, r1
   38b88:	str	r2, [r4, #16]
   38b8c:	mvn	r2, #3
   38b90:	cmn	r1, #4
   38b94:	movcs	r1, r2
   38b98:	str	r1, [r4, #24]
   38b9c:	str	r2, [r0, #4]
   38ba0:	ldr	r1, [r0, #20]
   38ba4:	adds	r1, r1, r6
   38ba8:	cmpcc	r1, #1073741824	; 0x40000000
   38bac:	bcc	38bd0 <flatcc_builder_create_offset_vector@@Base+0xb4>
   38bb0:	ldr	r0, [pc, #200]	; 38c80 <flatcc_builder_create_offset_vector@@Base+0x164>
   38bb4:	ldr	r1, [pc, #200]	; 38c84 <flatcc_builder_create_offset_vector@@Base+0x168>
   38bb8:	ldr	r3, [pc, #200]	; 38c88 <flatcc_builder_create_offset_vector@@Base+0x16c>
   38bbc:	mov	r2, #892	; 0x37c
   38bc0:	add	r0, pc, r0
   38bc4:	add	r1, pc, r1
   38bc8:	add	r3, pc, r3
   38bcc:	bl	1497c <__assert_fail@plt>
   38bd0:	str	r1, [r0, #20]
   38bd4:	ldr	r7, [r4, #20]
   38bd8:	ldr	r0, [r4, #24]
   38bdc:	add	r1, r7, r6, lsl #2
   38be0:	cmp	r1, r0
   38be4:	str	r1, [r4, #20]
   38be8:	bcs	38bfc <flatcc_builder_create_offset_vector@@Base+0xe0>
   38bec:	ldr	r0, [r4, #16]
   38bf0:	adds	r0, r0, r7
   38bf4:	bne	38c64 <flatcc_builder_create_offset_vector@@Base+0x148>
   38bf8:	b	38b48 <flatcc_builder_create_offset_vector@@Base+0x2c>
   38bfc:	ldr	r2, [r4, #28]
   38c00:	ldr	r0, [r4, #40]	; 0x28
   38c04:	ldr	r5, [r4, #48]	; 0x30
   38c08:	mov	r3, #1
   38c0c:	str	r3, [sp]
   38c10:	mov	r3, #1
   38c14:	add	r1, r1, r2
   38c18:	add	r2, r1, #1
   38c1c:	add	r1, r4, #60	; 0x3c
   38c20:	blx	r5
   38c24:	cmp	r0, #0
   38c28:	bne	38b48 <flatcc_builder_create_offset_vector@@Base+0x2c>
   38c2c:	ldr	r1, [r4, #28]
   38c30:	ldr	r0, [r4, #60]	; 0x3c
   38c34:	ldr	r3, [r4, #64]	; 0x40
   38c38:	ldr	r2, [r4, #32]
   38c3c:	add	r0, r0, r1
   38c40:	sub	r1, r3, r1
   38c44:	mvn	r3, #3
   38c48:	cmn	r1, #4
   38c4c:	str	r0, [r4, #16]
   38c50:	movcs	r1, r3
   38c54:	str	r1, [r4, #24]
   38c58:	str	r3, [r2, #4]
   38c5c:	adds	r0, r0, r7
   38c60:	beq	38b48 <flatcc_builder_create_offset_vector@@Base+0x2c>
   38c64:	lsl	r2, r6, #2
   38c68:	mov	r1, r8
   38c6c:	bl	14808 <memcpy@plt>
   38c70:	mov	r0, r4
   38c74:	sub	sp, fp, #24
   38c78:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   38c7c:	b	38c8c <flatcc_builder_end_offset_vector@@Base>
   38c80:	andeq	r1, r2, r0, asr r6
   38c84:	andeq	r0, r2, r6, lsl #11
   38c88:	andeq	r1, r2, r3, ror #12

00038c8c <flatcc_builder_end_offset_vector@@Base>:
   38c8c:	push	{r4, r5, fp, lr}
   38c90:	add	fp, sp, #8
   38c94:	mov	r4, r0
   38c98:	ldr	r0, [r0, #32]
   38c9c:	ldrh	r1, [r0, #14]
   38ca0:	cmp	r1, #5
   38ca4:	bne	38d44 <flatcc_builder_end_offset_vector@@Base+0xb8>
   38ca8:	ldr	r2, [r0, #20]
   38cac:	ldr	r1, [r4, #16]
   38cb0:	mov	r0, r4
   38cb4:	mov	r3, #0
   38cb8:	bl	39da8 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   38cbc:	mov	r5, r0
   38cc0:	cmp	r0, #0
   38cc4:	beq	38d3c <flatcc_builder_end_offset_vector@@Base+0xb0>
   38cc8:	ldr	r0, [r4, #16]
   38ccc:	ldr	r2, [r4, #20]
   38cd0:	mov	r1, #0
   38cd4:	bl	148d4 <memset@plt>
   38cd8:	ldr	r0, [r4, #32]
   38cdc:	ldr	r1, [r4, #60]	; 0x3c
   38ce0:	ldr	ip, [r4, #64]	; 0x40
   38ce4:	ldr	r3, [r0, #8]
   38ce8:	str	r3, [r4, #20]
   38cec:	ldr	r3, [r0]
   38cf0:	str	r3, [r4, #28]
   38cf4:	add	r1, r1, r3
   38cf8:	ldr	r2, [r0, #4]
   38cfc:	str	r1, [r4, #16]
   38d00:	sub	r1, ip, r3
   38d04:	cmp	r1, r2
   38d08:	movhi	r1, r2
   38d0c:	str	r1, [r4, #24]
   38d10:	ldrh	r1, [r4, #130]	; 0x82
   38d14:	ldrh	r2, [r4, #128]	; 0x80
   38d18:	cmp	r2, r1
   38d1c:	strhcc	r1, [r4, #128]	; 0x80
   38d20:	ldrh	r1, [r0, #12]
   38d24:	sub	r0, r0, #36	; 0x24
   38d28:	str	r0, [r4, #32]
   38d2c:	strh	r1, [r4, #130]	; 0x82
   38d30:	ldr	r0, [r4, #156]	; 0x9c
   38d34:	sub	r0, r0, #1
   38d38:	str	r0, [r4, #156]	; 0x9c
   38d3c:	mov	r0, r5
   38d40:	pop	{r4, r5, fp, pc}
   38d44:	ldr	r0, [pc, #24]	; 38d64 <flatcc_builder_end_offset_vector@@Base+0xd8>
   38d48:	ldr	r1, [pc, #24]	; 38d68 <flatcc_builder_end_offset_vector@@Base+0xdc>
   38d4c:	ldr	r3, [pc, #24]	; 38d6c <flatcc_builder_end_offset_vector@@Base+0xe0>
   38d50:	movw	r2, #1480	; 0x5c8
   38d54:	add	r0, pc, r0
   38d58:	add	r1, pc, r1
   38d5c:	add	r3, pc, r3
   38d60:	bl	1497c <__assert_fail@plt>
   38d64:	andeq	r0, r2, r9, lsr #16
   38d68:	strdeq	r0, [r2], -r2
   38d6c:	andeq	r0, r2, r0, asr lr

00038d70 <flatcc_builder_start_string@@Base>:
   38d70:	push	{r4, r5, fp, lr}
   38d74:	add	fp, sp, #8
   38d78:	mov	r1, #1
   38d7c:	mov	r4, r0
   38d80:	mov	r5, #1
   38d84:	bl	37a0c <flatcc_builder_start_buffer@@Base+0xc0>
   38d88:	mov	r1, r0
   38d8c:	mvn	r0, #0
   38d90:	cmp	r1, #0
   38d94:	popne	{r4, r5, fp, pc}
   38d98:	ldr	r0, [r4, #32]
   38d9c:	mov	r2, #6
   38da0:	str	r5, [r0, #16]
   38da4:	mov	r0, #0
   38da8:	ldr	r1, [r4, #32]
   38dac:	str	r0, [r1, #20]
   38db0:	ldr	r1, [r4, #32]
   38db4:	strh	r2, [r1, #14]
   38db8:	ldr	r2, [r4, #28]
   38dbc:	ldr	r3, [r4, #60]	; 0x3c
   38dc0:	ldr	r5, [r4, #64]	; 0x40
   38dc4:	add	r3, r3, r2
   38dc8:	sub	r2, r5, r2
   38dcc:	str	r3, [r4, #16]
   38dd0:	mvn	r3, #3
   38dd4:	cmn	r2, #4
   38dd8:	movcs	r2, r3
   38ddc:	str	r2, [r4, #24]
   38de0:	str	r3, [r1, #4]
   38de4:	pop	{r4, r5, fp, pc}

00038de8 <flatcc_builder_reserve_table@@Base>:
   38de8:	push	{r4, r5, r6, sl, fp, lr}
   38dec:	add	fp, sp, #16
   38df0:	sub	sp, sp, #8
   38df4:	cmn	r1, #1
   38df8:	ble	38ed0 <flatcc_builder_reserve_table@@Base+0xe8>
   38dfc:	mov	r4, r0
   38e00:	ldr	r0, [r0, #32]
   38e04:	mov	r5, r1
   38e08:	ldr	r1, [r4, #56]	; 0x38
   38e0c:	ldrh	r2, [r0, #28]
   38e10:	ldr	r0, [r0, #16]
   38e14:	add	r6, r0, r2, lsl #1
   38e18:	add	r0, r6, r5, lsl #1
   38e1c:	add	r2, r0, #4
   38e20:	cmp	r2, r1
   38e24:	bls	38e4c <flatcc_builder_reserve_table@@Base+0x64>
   38e28:	ldr	r0, [r4, #40]	; 0x28
   38e2c:	ldr	ip, [r4, #48]	; 0x30
   38e30:	mov	r3, #0
   38e34:	add	r1, r4, #52	; 0x34
   38e38:	str	r3, [sp]
   38e3c:	mov	r3, #1
   38e40:	blx	ip
   38e44:	cmp	r0, #0
   38e48:	bne	38ef0 <flatcc_builder_reserve_table@@Base+0x108>
   38e4c:	ldr	r0, [r4, #52]	; 0x34
   38e50:	adds	r0, r0, r6
   38e54:	str	r0, [r4, #4]
   38e58:	beq	38ec4 <flatcc_builder_reserve_table@@Base+0xdc>
   38e5c:	add	r0, r0, #4
   38e60:	lsl	r1, r5, #1
   38e64:	str	r0, [r4, #4]
   38e68:	ldr	r0, [r4, #32]
   38e6c:	ldr	r3, [r4, #80]	; 0x50
   38e70:	ldr	r5, [r0, #20]
   38e74:	orr	r0, r1, #1
   38e78:	add	r2, r5, r0
   38e7c:	cmp	r2, r3
   38e80:	bls	38ea8 <flatcc_builder_reserve_table@@Base+0xc0>
   38e84:	ldr	r0, [r4, #40]	; 0x28
   38e88:	ldr	r6, [r4, #48]	; 0x30
   38e8c:	mov	r3, #3
   38e90:	add	r1, r4, #76	; 0x4c
   38e94:	str	r3, [sp]
   38e98:	mov	r3, #0
   38e9c:	blx	r6
   38ea0:	cmp	r0, #0
   38ea4:	bne	38ef0 <flatcc_builder_reserve_table@@Base+0x108>
   38ea8:	ldr	r0, [r4, #76]	; 0x4c
   38eac:	adds	r0, r0, r5
   38eb0:	str	r0, [r4]
   38eb4:	mov	r0, #0
   38eb8:	mvneq	r0, #0
   38ebc:	sub	sp, fp, #16
   38ec0:	pop	{r4, r5, r6, sl, fp, pc}
   38ec4:	mvn	r0, #0
   38ec8:	sub	sp, fp, #16
   38ecc:	pop	{r4, r5, r6, sl, fp, pc}
   38ed0:	ldr	r0, [pc, #56]	; 38f10 <flatcc_builder_reserve_table@@Base+0x128>
   38ed4:	ldr	r1, [pc, #56]	; 38f14 <flatcc_builder_reserve_table@@Base+0x12c>
   38ed8:	ldr	r3, [pc, #56]	; 38f18 <flatcc_builder_reserve_table@@Base+0x130>
   38edc:	movw	r2, #1065	; 0x429
   38ee0:	add	r0, pc, r0
   38ee4:	add	r1, pc, r1
   38ee8:	add	r3, pc, r3
   38eec:	bl	1497c <__assert_fail@plt>
   38ef0:	ldr	r0, [pc, #36]	; 38f1c <flatcc_builder_reserve_table@@Base+0x134>
   38ef4:	ldr	r1, [pc, #36]	; 38f20 <flatcc_builder_reserve_table@@Base+0x138>
   38ef8:	ldr	r3, [pc, #36]	; 38f24 <flatcc_builder_reserve_table@@Base+0x13c>
   38efc:	mov	r2, #308	; 0x134
   38f00:	add	r0, pc, r0
   38f04:	add	r1, pc, r1
   38f08:	add	r3, pc, r3
   38f0c:	bl	1497c <__assert_fail@plt>
   38f10:	andeq	r0, r2, r4, ror #19
   38f14:	andeq	r0, r2, r6, ror #4
   38f18:	muleq	r2, fp, r9
   38f1c:	andeq	r7, r1, lr, asr #10
   38f20:	andeq	r0, r2, r6, asr #4
   38f24:	andeq	r1, r2, r9, lsr r2

00038f28 <flatcc_builder_start_table@@Base>:
   38f28:	push	{r4, r5, r6, r7, fp, lr}
   38f2c:	add	fp, sp, #16
   38f30:	sub	sp, sp, #8
   38f34:	mov	r6, r1
   38f38:	mov	r1, #4
   38f3c:	mov	r4, r0
   38f40:	bl	37a0c <flatcc_builder_start_buffer@@Base+0xc0>
   38f44:	mvn	r5, #0
   38f48:	cmp	r0, #0
   38f4c:	beq	38f5c <flatcc_builder_start_table@@Base+0x34>
   38f50:	mov	r0, r5
   38f54:	sub	sp, fp, #16
   38f58:	pop	{r4, r5, r6, r7, fp, pc}
   38f5c:	mov	r1, r4
   38f60:	ldr	r2, [r4, #4]
   38f64:	ldr	r3, [r4, #32]
   38f68:	ldr	r0, [r1, #52]!	; 0x34
   38f6c:	sub	r0, r2, r0
   38f70:	str	r0, [r3, #16]
   38f74:	ldr	r0, [r4]
   38f78:	ldr	r3, [r4, #76]	; 0x4c
   38f7c:	ldr	r2, [r4, #32]
   38f80:	sub	r0, r0, r3
   38f84:	mov	r3, #0
   38f88:	str	r0, [r2, #20]
   38f8c:	ldr	r0, [r4, #12]
   38f90:	ldr	r2, [r4, #32]
   38f94:	str	r0, [r2, #24]
   38f98:	ldr	r0, [r4, #32]
   38f9c:	ldrh	r2, [r4, #8]
   38fa0:	strh	r2, [r0, #28]
   38fa4:	movw	r0, #15186	; 0x3b52
   38fa8:	strh	r3, [r4, #8]
   38fac:	mov	r2, #3
   38fb0:	movt	r0, #12137	; 0x2f69
   38fb4:	str	r0, [r4, #12]
   38fb8:	ldr	r0, [r4, #32]
   38fbc:	strh	r2, [r0, #14]
   38fc0:	ldrh	r2, [r0, #28]
   38fc4:	ldr	r0, [r0, #16]
   38fc8:	add	r7, r0, r2, lsl #1
   38fcc:	add	r0, r7, r6, lsl #1
   38fd0:	add	r2, r0, #4
   38fd4:	ldr	r0, [r4, #56]	; 0x38
   38fd8:	cmp	r2, r0
   38fdc:	bls	38ffc <flatcc_builder_start_table@@Base+0xd4>
   38fe0:	ldr	r0, [r4, #40]	; 0x28
   38fe4:	ldr	ip, [r4, #48]	; 0x30
   38fe8:	str	r3, [sp]
   38fec:	mov	r3, #1
   38ff0:	blx	ip
   38ff4:	cmp	r0, #0
   38ff8:	bne	390a0 <flatcc_builder_start_table@@Base+0x178>
   38ffc:	ldr	r0, [r4, #52]	; 0x34
   39000:	adds	r0, r0, r7
   39004:	str	r0, [r4, #4]
   39008:	beq	38f50 <flatcc_builder_start_table@@Base+0x28>
   3900c:	add	r0, r0, #4
   39010:	lsl	r1, r6, #1
   39014:	str	r0, [r4, #4]
   39018:	ldr	r0, [r4, #32]
   3901c:	ldr	r3, [r4, #80]	; 0x50
   39020:	ldr	r6, [r0, #20]
   39024:	orr	r0, r1, #1
   39028:	add	r2, r6, r0
   3902c:	cmp	r2, r3
   39030:	bls	39058 <flatcc_builder_start_table@@Base+0x130>
   39034:	ldr	r0, [r4, #40]	; 0x28
   39038:	ldr	r7, [r4, #48]	; 0x30
   3903c:	mov	r3, #3
   39040:	add	r1, r4, #76	; 0x4c
   39044:	str	r3, [sp]
   39048:	mov	r3, #0
   3904c:	blx	r7
   39050:	cmp	r0, #0
   39054:	bne	390a0 <flatcc_builder_start_table@@Base+0x178>
   39058:	ldr	r0, [r4, #76]	; 0x4c
   3905c:	adds	r0, r0, r6
   39060:	str	r0, [r4]
   39064:	beq	38f50 <flatcc_builder_start_table@@Base+0x28>
   39068:	ldr	r0, [r4, #28]
   3906c:	ldr	r2, [r4, #60]	; 0x3c
   39070:	ldr	r3, [r4, #64]	; 0x40
   39074:	ldr	r1, [r4, #32]
   39078:	mov	r5, #0
   3907c:	add	r2, r2, r0
   39080:	sub	r0, r3, r0
   39084:	str	r2, [r4, #16]
   39088:	movw	r2, #65532	; 0xfffc
   3908c:	cmp	r0, r2
   39090:	movcs	r0, r2
   39094:	str	r0, [r4, #24]
   39098:	str	r2, [r1, #4]
   3909c:	b	38f50 <flatcc_builder_start_table@@Base+0x28>
   390a0:	ldr	r0, [pc, #24]	; 390c0 <flatcc_builder_start_table@@Base+0x198>
   390a4:	ldr	r1, [pc, #24]	; 390c4 <flatcc_builder_start_table@@Base+0x19c>
   390a8:	ldr	r3, [pc, #24]	; 390c8 <flatcc_builder_start_table@@Base+0x1a0>
   390ac:	mov	r2, #308	; 0x134
   390b0:	add	r0, pc, r0
   390b4:	add	r1, pc, r1
   390b8:	add	r3, pc, r3
   390bc:	bl	1497c <__assert_fail@plt>
   390c0:	muleq	r1, lr, r3
   390c4:	muleq	r2, r6, r0
   390c8:	andeq	r1, r2, r9, lsl #1

000390cc <flatcc_builder_create_vtable@@Base>:
   390cc:	push	{r4, r5, fp, lr}
   390d0:	add	fp, sp, #8
   390d4:	sub	sp, sp, #80	; 0x50
   390d8:	mov	r3, r2
   390dc:	mov	r2, #0
   390e0:	mov	r4, r0
   390e4:	cmp	r3, #0
   390e8:	str	r2, [sp, #12]
   390ec:	str	r2, [sp, #8]
   390f0:	movne	r2, #1
   390f4:	strne	r3, [sp, #20]
   390f8:	strne	r1, [sp, #16]
   390fc:	strne	r3, [sp, #8]
   39100:	strne	r2, [sp, #12]
   39104:	ldr	r0, [r4, #152]	; 0x98
   39108:	cmp	r0, #0
   3910c:	bne	3911c <flatcc_builder_create_vtable@@Base+0x50>
   39110:	ldr	r0, [r4, #180]	; 0xb4
   39114:	cmp	r0, #0
   39118:	beq	39178 <flatcc_builder_create_vtable@@Base+0xac>
   3911c:	cmp	r3, #0
   39120:	beq	391bc <flatcc_builder_create_vtable@@Base+0xf0>
   39124:	ldr	r0, [r4, #136]	; 0x88
   39128:	ldr	ip, [r4, #44]	; 0x2c
   3912c:	add	r1, sp, #8
   39130:	add	r1, r1, #8
   39134:	sub	r5, r0, r3
   39138:	ldr	r0, [r4, #36]	; 0x24
   3913c:	str	r3, [sp]
   39140:	mov	r3, r5
   39144:	blx	ip
   39148:	cmp	r0, #0
   3914c:	bne	391dc <flatcc_builder_create_vtable@@Base+0x110>
   39150:	cmp	r5, #0
   39154:	str	r5, [r4, #136]	; 0x88
   39158:	beq	3916c <flatcc_builder_create_vtable@@Base+0xa0>
   3915c:	add	r1, r5, #1
   39160:	mov	r0, r1
   39164:	sub	sp, fp, #8
   39168:	pop	{r4, r5, fp, pc}
   3916c:	mov	r0, #0
   39170:	sub	sp, fp, #8
   39174:	pop	{r4, r5, fp, pc}
   39178:	ldr	r5, [r4, #140]	; 0x8c
   3917c:	ldr	r0, [r4, #36]	; 0x24
   39180:	ldr	ip, [r4, #44]	; 0x2c
   39184:	add	r1, r5, r3
   39188:	str	r1, [r4, #140]	; 0x8c
   3918c:	add	r1, sp, #8
   39190:	str	r3, [sp]
   39194:	mov	r3, r5
   39198:	add	r1, r1, #8
   3919c:	blx	ip
   391a0:	cmp	r0, #0
   391a4:	bne	391fc <flatcc_builder_create_vtable@@Base+0x130>
   391a8:	adds	r1, r5, #1
   391ac:	mov	r0, #0
   391b0:	movcc	r0, r1
   391b4:	sub	sp, fp, #8
   391b8:	pop	{r4, r5, fp, pc}
   391bc:	ldr	r0, [pc, #100]	; 39228 <flatcc_builder_create_vtable@@Base+0x15c>
   391c0:	ldr	r1, [pc, #100]	; 3922c <flatcc_builder_create_vtable@@Base+0x160>
   391c4:	ldr	r3, [pc, #100]	; 39230 <flatcc_builder_create_vtable@@Base+0x164>
   391c8:	movw	r2, #647	; 0x287
   391cc:	add	r0, pc, r0
   391d0:	add	r1, pc, r1
   391d4:	add	r3, pc, r3
   391d8:	bl	1497c <__assert_fail@plt>
   391dc:	ldr	r0, [pc, #80]	; 39234 <flatcc_builder_create_vtable@@Base+0x168>
   391e0:	ldr	r1, [pc, #80]	; 39238 <flatcc_builder_create_vtable@@Base+0x16c>
   391e4:	ldr	r3, [pc, #80]	; 3923c <flatcc_builder_create_vtable@@Base+0x170>
   391e8:	movw	r2, #651	; 0x28b
   391ec:	add	r0, pc, r0
   391f0:	add	r1, pc, r1
   391f4:	add	r3, pc, r3
   391f8:	bl	1497c <__assert_fail@plt>
   391fc:	ldr	r0, [pc, #24]	; 3921c <flatcc_builder_create_vtable@@Base+0x150>
   39200:	ldr	r1, [pc, #24]	; 39220 <flatcc_builder_create_vtable@@Base+0x154>
   39204:	ldr	r3, [pc, #24]	; 39224 <flatcc_builder_create_vtable@@Base+0x158>
   39208:	movw	r2, #677	; 0x2a5
   3920c:	add	r0, pc, r0
   39210:	add	r1, pc, r1
   39214:	add	r3, pc, r3
   39218:	bl	1497c <__assert_fail@plt>
   3921c:	andeq	r7, r1, r2, asr #4
   39220:	andeq	pc, r1, sl, lsr pc	; <UNPREDICTABLE>
   39224:	andeq	r1, r2, lr, rrx
   39228:	andeq	r7, r1, r2, lsl #5
   3922c:	andeq	pc, r1, sl, ror pc	; <UNPREDICTABLE>
   39230:	strdeq	r0, [r2], -r2
   39234:	andeq	r7, r1, r2, ror #4
   39238:	andeq	pc, r1, sl, asr pc	; <UNPREDICTABLE>
   3923c:	ldrdeq	r0, [r2], -r2

00039240 <flatcc_builder_create_cached_vtable@@Base>:
   39240:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39244:	add	fp, sp, #28
   39248:	sub	sp, sp, #20
   3924c:	mov	sl, r0
   39250:	ldr	r0, [r0, #116]	; 0x74
   39254:	mov	r8, r3
   39258:	mov	r5, r2
   3925c:	str	r1, [sp, #16]
   39260:	cmp	r0, #0
   39264:	beq	39308 <flatcc_builder_create_cached_vtable@@Base+0xc8>
   39268:	ldr	r1, [sl, #92]	; 0x5c
   3926c:	rsb	r0, r0, #32
   39270:	lsr	r0, r8, r0
   39274:	add	r6, r1, r0, lsl #2
   39278:	cmp	r6, #0
   3927c:	beq	393cc <flatcc_builder_create_cached_vtable@@Base+0x18c>
   39280:	ldr	r7, [r6]
   39284:	str	r6, [sp, #12]
   39288:	cmp	r7, #0
   3928c:	beq	393d4 <flatcc_builder_create_cached_vtable@@Base+0x194>
   39290:	ldr	r4, [sl, #68]	; 0x44
   39294:	ldr	r8, [sl, #100]	; 0x64
   39298:	mov	r0, #0
   3929c:	str	r0, [sp, #8]
   392a0:	b	392b4 <flatcc_builder_create_cached_vtable@@Base+0x74>
   392a4:	ldr	r7, [r9, #12]!
   392a8:	mov	r6, r9
   392ac:	cmp	r7, #0
   392b0:	beq	393c4 <flatcc_builder_create_cached_vtable@@Base+0x184>
   392b4:	add	r9, r8, r7
   392b8:	mov	r1, r4
   392bc:	ldr	r0, [r9, #8]
   392c0:	ldrh	r0, [r1, r0]!	; <UNPREDICTABLE>
   392c4:	cmp	r0, r5
   392c8:	bne	392a4 <flatcc_builder_create_cached_vtable@@Base+0x64>
   392cc:	ldr	r0, [sp, #16]
   392d0:	mov	r2, r5
   392d4:	bl	148a4 <bcmp@plt>
   392d8:	cmp	r0, #0
   392dc:	bne	392a4 <flatcc_builder_create_cached_vtable@@Base+0x64>
   392e0:	ldr	r0, [sl, #152]	; 0x98
   392e4:	ldr	r1, [r9, #4]
   392e8:	cmp	r1, r0
   392ec:	beq	39538 <flatcc_builder_create_cached_vtable@@Base+0x2f8>
   392f0:	mov	r6, r9
   392f4:	mov	r0, r9
   392f8:	ldr	r7, [r6, #12]!
   392fc:	cmp	r7, #0
   39300:	bne	3929c <flatcc_builder_create_cached_vtable@@Base+0x5c>
   39304:	b	393d8 <flatcc_builder_create_cached_vtable@@Base+0x198>
   39308:	ldr	r0, [sl, #124]	; 0x7c
   3930c:	cmp	r0, #0
   39310:	bne	39584 <flatcc_builder_create_cached_vtable@@Base+0x344>
   39314:	ldr	r0, [sl, #104]	; 0x68
   39318:	add	r7, sl, #100	; 0x64
   3931c:	cmp	r0, #15
   39320:	bhi	3934c <flatcc_builder_create_cached_vtable@@Base+0x10c>
   39324:	ldr	r0, [sl, #40]	; 0x28
   39328:	ldr	r6, [sl, #48]	; 0x30
   3932c:	mov	r1, #6
   39330:	mov	r2, #16
   39334:	mov	r3, #0
   39338:	str	r1, [sp]
   3933c:	mov	r1, r7
   39340:	blx	r6
   39344:	cmp	r0, #0
   39348:	bne	39564 <flatcc_builder_create_cached_vtable@@Base+0x324>
   3934c:	ldr	r0, [r7]
   39350:	mov	r7, #0
   39354:	cmp	r0, #0
   39358:	beq	39478 <flatcc_builder_create_cached_vtable@@Base+0x238>
   3935c:	mov	r0, #16
   39360:	mov	r2, #5
   39364:	add	r1, sl, #92	; 0x5c
   39368:	mov	r3, #1
   3936c:	mov	r4, #256	; 0x100
   39370:	str	r0, [sl, #124]	; 0x7c
   39374:	ldr	r0, [sl, #40]	; 0x28
   39378:	ldr	r6, [sl, #48]	; 0x30
   3937c:	str	r2, [sp]
   39380:	mov	r2, #256	; 0x100
   39384:	blx	r6
   39388:	cmp	r0, #0
   3938c:	bne	39478 <flatcc_builder_create_cached_vtable@@Base+0x238>
   39390:	ldr	r0, [sl, #96]	; 0x60
   39394:	mov	r1, r4
   39398:	lsl	r4, r4, #1
   3939c:	cmp	r0, r1, lsl #1
   393a0:	bcs	39394 <flatcc_builder_create_cached_vtable@@Base+0x154>
   393a4:	lsr	r1, r1, #2
   393a8:	mvn	r0, #0
   393ac:	mov	r2, #1
   393b0:	add	r0, r0, #1
   393b4:	cmp	r1, r2, lsl r0
   393b8:	bhi	393b0 <flatcc_builder_create_cached_vtable@@Base+0x170>
   393bc:	str	r0, [sl, #116]	; 0x74
   393c0:	b	39268 <flatcc_builder_create_cached_vtable@@Base+0x28>
   393c4:	ldr	r9, [sp, #8]
   393c8:	b	393d8 <flatcc_builder_create_cached_vtable@@Base+0x198>
   393cc:	mov	r7, #0
   393d0:	b	39478 <flatcc_builder_create_cached_vtable@@Base+0x238>
   393d4:	mov	r9, #0
   393d8:	ldr	r4, [sl, #124]	; 0x7c
   393dc:	ldr	r0, [sl, #104]	; 0x68
   393e0:	add	r7, sl, #100	; 0x64
   393e4:	add	r2, r4, #16
   393e8:	cmp	r2, r0
   393ec:	bls	39414 <flatcc_builder_create_cached_vtable@@Base+0x1d4>
   393f0:	ldr	r0, [sl, #40]	; 0x28
   393f4:	ldr	r6, [sl, #48]	; 0x30
   393f8:	mov	r1, #6
   393fc:	mov	r3, #0
   39400:	str	r1, [sp]
   39404:	mov	r1, r7
   39408:	blx	r6
   3940c:	cmp	r0, #0
   39410:	bne	39564 <flatcc_builder_create_cached_vtable@@Base+0x324>
   39414:	ldr	r0, [r7]
   39418:	mov	r7, #0
   3941c:	adds	r4, r0, r4
   39420:	beq	39478 <flatcc_builder_create_cached_vtable@@Base+0x238>
   39424:	ldr	r0, [sl, #124]	; 0x7c
   39428:	ldr	r1, [sl, #152]	; 0x98
   3942c:	add	r2, r0, #16
   39430:	str	r2, [sl, #124]	; 0x7c
   39434:	ldr	r2, [sp, #12]
   39438:	str	r1, [r4, #4]
   3943c:	ldr	r1, [r2]
   39440:	str	r1, [r4, #12]
   39444:	ldr	r1, [sp, #16]
   39448:	str	r0, [r2]
   3944c:	mov	r0, sl
   39450:	mov	r2, r5
   39454:	bl	390cc <flatcc_builder_create_vtable@@Base>
   39458:	cmp	r0, #0
   3945c:	str	r0, [r4]
   39460:	beq	39478 <flatcc_builder_create_cached_vtable@@Base+0x238>
   39464:	cmp	r9, #0
   39468:	beq	39484 <flatcc_builder_create_cached_vtable@@Base+0x244>
   3946c:	ldr	r0, [r9, #8]
   39470:	str	r0, [r4, #8]
   39474:	ldr	r7, [r4]
   39478:	mov	r0, r7
   3947c:	sub	sp, fp, #28
   39480:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39484:	ldr	r6, [sl, #120]	; 0x78
   39488:	ldr	r0, [sl, #172]	; 0xac
   3948c:	add	r2, r6, r5
   39490:	cmp	r0, #0
   39494:	beq	394d0 <flatcc_builder_create_cached_vtable@@Base+0x290>
   39498:	cmp	r0, r2
   3949c:	bcs	394d0 <flatcc_builder_create_cached_vtable@@Base+0x290>
   394a0:	ldr	r0, [sl, #116]	; 0x74
   394a4:	cmp	r0, #0
   394a8:	beq	39474 <flatcc_builder_create_cached_vtable@@Base+0x234>
   394ac:	ldr	r0, [sl, #92]	; 0x5c
   394b0:	ldr	r2, [sl, #96]	; 0x60
   394b4:	mov	r1, #0
   394b8:	mov	r5, #0
   394bc:	bl	148d4 <memset@plt>
   394c0:	mov	r0, #16
   394c4:	str	r5, [sl, #120]	; 0x78
   394c8:	str	r0, [sl, #124]	; 0x7c
   394cc:	b	39474 <flatcc_builder_create_cached_vtable@@Base+0x234>
   394d0:	ldr	r0, [sl, #72]	; 0x48
   394d4:	add	r7, sl, #68	; 0x44
   394d8:	cmp	r2, r0
   394dc:	bls	39504 <flatcc_builder_create_cached_vtable@@Base+0x2c4>
   394e0:	ldr	r0, [sl, #40]	; 0x28
   394e4:	ldr	ip, [sl, #48]	; 0x30
   394e8:	mov	r1, #2
   394ec:	mov	r3, #0
   394f0:	str	r1, [sp]
   394f4:	mov	r1, r7
   394f8:	blx	ip
   394fc:	cmp	r0, #0
   39500:	bne	39564 <flatcc_builder_create_cached_vtable@@Base+0x324>
   39504:	ldr	r0, [r7]
   39508:	adds	r0, r0, r6
   3950c:	beq	39530 <flatcc_builder_create_cached_vtable@@Base+0x2f0>
   39510:	ldr	r1, [sl, #120]	; 0x78
   39514:	mov	r2, r5
   39518:	str	r1, [r4, #8]
   3951c:	add	r1, r1, r5
   39520:	str	r1, [sl, #120]	; 0x78
   39524:	ldr	r1, [sp, #16]
   39528:	bl	14808 <memcpy@plt>
   3952c:	b	39474 <flatcc_builder_create_cached_vtable@@Base+0x234>
   39530:	mvn	r7, #0
   39534:	b	39478 <flatcc_builder_create_cached_vtable@@Base+0x238>
   39538:	ldr	r0, [sp, #12]
   3953c:	cmp	r6, r0
   39540:	beq	3955c <flatcc_builder_create_cached_vtable@@Base+0x31c>
   39544:	mov	r1, r0
   39548:	ldr	r0, [r9, #12]
   3954c:	str	r0, [r6]
   39550:	ldr	r0, [r1]
   39554:	str	r0, [r9, #12]
   39558:	str	r7, [r1]
   3955c:	ldr	r7, [r9]
   39560:	b	39478 <flatcc_builder_create_cached_vtable@@Base+0x238>
   39564:	ldr	r0, [pc, #68]	; 395b0 <flatcc_builder_create_cached_vtable@@Base+0x370>
   39568:	ldr	r1, [pc, #68]	; 395b4 <flatcc_builder_create_cached_vtable@@Base+0x374>
   3956c:	ldr	r3, [pc, #68]	; 395b8 <flatcc_builder_create_cached_vtable@@Base+0x378>
   39570:	mov	r2, #308	; 0x134
   39574:	add	r0, pc, r0
   39578:	add	r1, pc, r1
   3957c:	add	r3, pc, r3
   39580:	bl	1497c <__assert_fail@plt>
   39584:	ldr	r0, [pc, #24]	; 395a4 <flatcc_builder_create_cached_vtable@@Base+0x364>
   39588:	ldr	r1, [pc, #24]	; 395a8 <flatcc_builder_create_cached_vtable@@Base+0x368>
   3958c:	ldr	r3, [pc, #24]	; 395ac <flatcc_builder_create_cached_vtable@@Base+0x36c>
   39590:	movw	r2, #342	; 0x156
   39594:	add	r0, pc, r0
   39598:	add	r1, pc, r1
   3959c:	add	r3, pc, r3
   395a0:	bl	1497c <__assert_fail@plt>
   395a4:	andeq	r0, r2, r7, lsr sp
   395a8:			; <UNDEFINED> instruction: 0x0001fbb2
   395ac:	andeq	r0, r2, lr, lsr sp
   395b0:	ldrdeq	r6, [r1], -sl
   395b4:	ldrdeq	pc, [r1], -r2
   395b8:	andeq	r0, r2, r5, asr #23

000395bc <flatcc_builder_create_table@@Base>:
   395bc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   395c0:	add	fp, sp, #24
   395c4:	sub	sp, sp, #80	; 0x50
   395c8:	ldr	r5, [fp, #12]
   395cc:	cmn	r5, #1
   395d0:	ble	3971c <flatcc_builder_create_table@@Base+0x160>
   395d4:	ldr	ip, [fp, #16]
   395d8:	tst	ip, #1
   395dc:	beq	3973c <flatcc_builder_create_table@@Base+0x180>
   395e0:	mov	r8, r0
   395e4:	ldrh	r0, [r0, #128]	; 0x80
   395e8:	cmp	r3, #4
   395ec:	movls	r3, #4
   395f0:	cmp	r0, r3
   395f4:	strhcc	r3, [r8, #128]	; 0x80
   395f8:	cmp	r5, #1
   395fc:	ldr	r0, [r8, #136]	; 0x88
   39600:	sub	r4, r0, r2
   39604:	sub	r0, r3, #1
   39608:	and	r0, r4, r0
   3960c:	sub	r4, r4, #4
   39610:	add	r3, ip, r0
   39614:	sub	r3, r4, r3
   39618:	add	r3, r3, #1
   3961c:	str	r3, [fp, #-28]	; 0xffffffe4
   39620:	blt	39650 <flatcc_builder_create_table@@Base+0x94>
   39624:	ldr	r3, [fp, #8]
   39628:	sub	ip, r4, r0
   3962c:	mvn	r4, #3
   39630:	sub	r4, r4, ip
   39634:	ldrh	r6, [r3], #2
   39638:	subs	r5, r5, #1
   3963c:	ldr	r7, [r6, r1]
   39640:	add	r7, r4, r7
   39644:	sub	r7, r7, r6
   39648:	str	r7, [r6, r1]
   3964c:	bne	39634 <flatcc_builder_create_table@@Base+0x78>
   39650:	mov	r4, #4
   39654:	sub	r3, fp, #28
   39658:	cmp	r2, #0
   3965c:	str	r4, [sp, #16]
   39660:	str	r3, [sp, #12]
   39664:	mov	r3, #1
   39668:	str	r4, [sp, #4]
   3966c:	addne	r4, r2, #4
   39670:	str	r3, [sp, #8]
   39674:	movne	r3, #2
   39678:	strne	r2, [sp, #24]
   3967c:	strne	r1, [sp, #20]
   39680:	strne	r3, [sp, #8]
   39684:	strne	r4, [sp, #4]
   39688:	cmp	r0, #0
   3968c:	beq	396b8 <flatcc_builder_create_table@@Base+0xfc>
   39690:	add	r4, r4, r0
   39694:	add	r1, sp, #4
   39698:	str	r4, [sp, #4]
   3969c:	add	r1, r1, r3, lsl #3
   396a0:	add	r3, r3, #1
   396a4:	ldr	r2, [pc, #208]	; 3977c <flatcc_builder_create_table@@Base+0x1c0>
   396a8:	ldr	r2, [pc, r2]
   396ac:	str	r2, [r1, #8]
   396b0:	str	r0, [r1, #12]
   396b4:	str	r3, [sp, #8]
   396b8:	cmp	r4, #0
   396bc:	ble	3975c <flatcc_builder_create_table@@Base+0x1a0>
   396c0:	ldr	r0, [r8, #136]	; 0x88
   396c4:	ldr	r7, [r8, #44]	; 0x2c
   396c8:	add	r1, sp, #4
   396cc:	mov	r2, r3
   396d0:	add	r1, r1, #8
   396d4:	sub	r5, r0, r4
   396d8:	ldr	r0, [r8, #36]	; 0x24
   396dc:	str	r4, [sp]
   396e0:	mov	r3, r5
   396e4:	blx	r7
   396e8:	cmp	r0, #0
   396ec:	streq	r5, [r8, #136]	; 0x88
   396f0:	moveq	r0, r5
   396f4:	subeq	sp, fp, #24
   396f8:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   396fc:	ldr	r0, [pc, #160]	; 397a4 <flatcc_builder_create_table@@Base+0x1e8>
   39700:	ldr	r1, [pc, #160]	; 397a8 <flatcc_builder_create_table@@Base+0x1ec>
   39704:	ldr	r3, [pc, #160]	; 397ac <flatcc_builder_create_table@@Base+0x1f0>
   39708:	movw	r2, #651	; 0x28b
   3970c:	add	r0, pc, r0
   39710:	add	r1, pc, r1
   39714:	add	r3, pc, r3
   39718:	bl	1497c <__assert_fail@plt>
   3971c:	ldr	r0, [pc, #92]	; 39780 <flatcc_builder_create_table@@Base+0x1c4>
   39720:	ldr	r1, [pc, #92]	; 39784 <flatcc_builder_create_table@@Base+0x1c8>
   39724:	ldr	r3, [pc, #92]	; 39788 <flatcc_builder_create_table@@Base+0x1cc>
   39728:	movw	r2, #1237	; 0x4d5
   3972c:	add	r0, pc, r0
   39730:	add	r1, pc, r1
   39734:	add	r3, pc, r3
   39738:	bl	1497c <__assert_fail@plt>
   3973c:	ldr	r0, [pc, #72]	; 3978c <flatcc_builder_create_table@@Base+0x1d0>
   39740:	ldr	r1, [pc, #72]	; 39790 <flatcc_builder_create_table@@Base+0x1d4>
   39744:	ldr	r3, [pc, #72]	; 39794 <flatcc_builder_create_table@@Base+0x1d8>
   39748:	movw	r2, #1243	; 0x4db
   3974c:	add	r0, pc, r0
   39750:	add	r1, pc, r1
   39754:	add	r3, pc, r3
   39758:	bl	1497c <__assert_fail@plt>
   3975c:	ldr	r0, [pc, #52]	; 39798 <flatcc_builder_create_table@@Base+0x1dc>
   39760:	ldr	r1, [pc, #52]	; 3979c <flatcc_builder_create_table@@Base+0x1e0>
   39764:	ldr	r3, [pc, #52]	; 397a0 <flatcc_builder_create_table@@Base+0x1e4>
   39768:	movw	r2, #647	; 0x287
   3976c:	add	r0, pc, r0
   39770:	add	r1, pc, r1
   39774:	add	r3, pc, r3
   39778:	bl	1497c <__assert_fail@plt>
   3977c:	strdeq	r1, [r3], -r0
   39780:	muleq	r2, r1, r1
   39784:	andeq	pc, r1, sl, lsl sl	; <UNPREDICTABLE>
   39788:	muleq	r2, fp, r1
   3978c:	andeq	r0, r2, pc, lsl r2
   39790:	strdeq	pc, [r1], -sl
   39794:	andeq	r0, r2, fp, ror r1
   39798:	andeq	r6, r1, r2, ror #25
   3979c:	ldrdeq	pc, [r1], -sl
   397a0:	andeq	r0, r2, r2, asr sl
   397a4:	andeq	r6, r1, r2, asr #26
   397a8:	andeq	pc, r1, sl, lsr sl	; <UNPREDICTABLE>
   397ac:			; <UNDEFINED> instruction: 0x00020ab2

000397b0 <flatcc_builder_check_required_field@@Base>:
   397b0:	push	{fp, lr}
   397b4:	mov	fp, sp
   397b8:	ldr	r2, [r0, #32]
   397bc:	ldrh	r2, [r2, #14]
   397c0:	cmp	r2, #3
   397c4:	bne	397f4 <flatcc_builder_check_required_field@@Base+0x44>
   397c8:	ldrh	r3, [r0, #8]
   397cc:	mov	r2, #0
   397d0:	cmp	r3, r1
   397d4:	bls	397ec <flatcc_builder_check_required_field@@Base+0x3c>
   397d8:	ldr	r0, [r0, #4]
   397dc:	add	r0, r0, r1, lsl #1
   397e0:	ldrh	r2, [r0]
   397e4:	cmp	r2, #0
   397e8:	movwne	r2, #1
   397ec:	mov	r0, r2
   397f0:	pop	{fp, pc}
   397f4:	ldr	r0, [pc, #24]	; 39814 <flatcc_builder_check_required_field@@Base+0x64>
   397f8:	ldr	r1, [pc, #24]	; 39818 <flatcc_builder_check_required_field@@Base+0x68>
   397fc:	ldr	r3, [pc, #24]	; 3981c <flatcc_builder_check_required_field@@Base+0x6c>
   39800:	movw	r2, #1272	; 0x4f8
   39804:	add	r0, pc, r0
   39808:	add	r1, pc, r1
   3980c:	add	r3, pc, r3
   39810:	bl	1497c <__assert_fail@plt>
   39814:	andeq	r0, r2, r2, ror r1
   39818:	andeq	pc, r1, r2, asr #18
   3981c:	muleq	r2, r5, r1

00039820 <flatcc_builder_check_union_field@@Base>:
   39820:	push	{fp, lr}
   39824:	mov	fp, sp
   39828:	mov	r2, r0
   3982c:	ldr	r0, [r0, #32]
   39830:	ldrh	r0, [r0, #14]
   39834:	cmp	r0, #3
   39838:	bne	39898 <flatcc_builder_check_union_field@@Base+0x78>
   3983c:	mov	r0, #0
   39840:	cmp	r1, #0
   39844:	beq	39884 <flatcc_builder_check_union_field@@Base+0x64>
   39848:	ldrh	r3, [r2, #8]
   3984c:	cmp	r3, r1
   39850:	popls	{fp, pc}
   39854:	ldr	r0, [r2, #4]
   39858:	add	r0, r0, r1, lsl #1
   3985c:	ldrh	r1, [r0, #-2]
   39860:	cmp	r1, #0
   39864:	beq	39888 <flatcc_builder_check_union_field@@Base+0x68>
   39868:	ldr	r2, [r2, #16]
   3986c:	ldrh	r0, [r0]
   39870:	ldrb	r1, [r2, r1]
   39874:	cmp	r1, #0
   39878:	beq	3988c <flatcc_builder_check_union_field@@Base+0x6c>
   3987c:	cmp	r0, #0
   39880:	movwne	r0, #1
   39884:	pop	{fp, pc}
   39888:	ldrh	r0, [r0]
   3988c:	clz	r0, r0
   39890:	lsr	r0, r0, #5
   39894:	pop	{fp, pc}
   39898:	ldr	r0, [pc, #24]	; 398b8 <flatcc_builder_check_union_field@@Base+0x98>
   3989c:	ldr	r1, [pc, #24]	; 398bc <flatcc_builder_check_union_field@@Base+0x9c>
   398a0:	ldr	r3, [pc, #24]	; 398c0 <flatcc_builder_check_union_field@@Base+0xa0>
   398a4:	movw	r2, #1279	; 0x4ff
   398a8:	add	r0, pc, r0
   398ac:	add	r1, pc, r1
   398b0:	add	r3, pc, r3
   398b4:	bl	1497c <__assert_fail@plt>
   398b8:	andeq	r0, r2, lr, asr #1
   398bc:	muleq	r1, lr, r8
   398c0:	andeq	r0, r2, r4, asr #2

000398c4 <flatcc_builder_check_required@@Base>:
   398c4:	push	{fp, lr}
   398c8:	mov	fp, sp
   398cc:	mov	r3, r0
   398d0:	ldr	r0, [r0, #32]
   398d4:	ldrh	r0, [r0, #14]
   398d8:	cmp	r0, #3
   398dc:	bne	39924 <flatcc_builder_check_required@@Base+0x60>
   398e0:	ldrh	ip, [r3, #8]
   398e4:	mov	r0, #0
   398e8:	cmp	ip, r2
   398ec:	poplt	{fp, pc}
   398f0:	cmp	r2, #1
   398f4:	blt	3991c <flatcc_builder_check_required@@Base+0x58>
   398f8:	ldr	ip, [r3, #4]
   398fc:	ldrh	r3, [r1]
   39900:	add	r3, ip, r3, lsl #1
   39904:	ldrh	r3, [r3]
   39908:	cmp	r3, #0
   3990c:	beq	39920 <flatcc_builder_check_required@@Base+0x5c>
   39910:	add	r1, r1, #2
   39914:	subs	r2, r2, #1
   39918:	bne	398fc <flatcc_builder_check_required@@Base+0x38>
   3991c:	mov	r0, #1
   39920:	pop	{fp, pc}
   39924:	ldr	r0, [pc, #24]	; 39944 <flatcc_builder_check_required@@Base+0x80>
   39928:	ldr	r1, [pc, #24]	; 39948 <flatcc_builder_check_required@@Base+0x84>
   3992c:	ldr	r3, [pc, #24]	; 3994c <flatcc_builder_check_required@@Base+0x88>
   39930:	movw	r2, #1297	; 0x511
   39934:	add	r0, pc, r0
   39938:	add	r1, pc, r1
   3993c:	add	r3, pc, r3
   39940:	bl	1497c <__assert_fail@plt>
   39944:	andeq	r0, r2, r2, asr #32
   39948:	andeq	pc, r1, r2, lsl r8	; <UNPREDICTABLE>
   3994c:	andeq	r0, r2, r8, lsl #2

00039950 <flatcc_builder_end_table@@Base>:
   39950:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   39954:	add	fp, sp, #24
   39958:	sub	sp, sp, #16
   3995c:	mov	r4, r0
   39960:	ldr	r0, [r0, #32]
   39964:	ldrh	r0, [r0, #14]
   39968:	cmp	r0, #3
   3996c:	bne	39ae8 <flatcc_builder_end_table@@Base+0x198>
   39970:	ldrh	r0, [r4, #8]
   39974:	ldr	r5, [r4, #4]
   39978:	mov	r1, #4
   3997c:	movw	r2, #31153	; 0x79b1
   39980:	movt	r2, #40503	; 0x9e37
   39984:	add	r0, r1, r0, lsl #1
   39988:	strh	r0, [r5, #-4]!
   3998c:	ldrh	r1, [r4, #20]
   39990:	uxth	r6, r0
   39994:	add	r1, r1, #4
   39998:	strh	r1, [r5, #2]
   3999c:	uxth	r1, r1
   399a0:	ldr	r0, [r4, #12]
   399a4:	eor	r0, r0, r6
   399a8:	mul	r0, r0, r2
   399ac:	eor	r0, r0, r1
   399b0:	mov	r1, r5
   399b4:	mul	r3, r0, r2
   399b8:	mov	r0, r4
   399bc:	mov	r2, r6
   399c0:	str	r3, [r4, #12]
   399c4:	bl	39240 <flatcc_builder_create_cached_vtable@@Base>
   399c8:	cmp	r0, #0
   399cc:	beq	39ad8 <flatcc_builder_end_table@@Base+0x188>
   399d0:	mov	r7, r0
   399d4:	mov	r0, r5
   399d8:	mov	r1, #0
   399dc:	mov	r2, r6
   399e0:	mov	r8, #0
   399e4:	bl	148d4 <memset@plt>
   399e8:	ldr	r5, [r4, #32]
   399ec:	ldr	r0, [r4, #76]	; 0x4c
   399f0:	ldr	r6, [r4]
   399f4:	ldrh	r3, [r4, #130]	; 0x82
   399f8:	ldr	r1, [r4, #16]
   399fc:	ldr	r2, [r4, #20]
   39a00:	ldr	r5, [r5, #20]
   39a04:	add	r0, r0, r5
   39a08:	sub	r6, r6, r0
   39a0c:	asr	r6, r6, #1
   39a10:	stm	sp, {r0, r6, r7}
   39a14:	mov	r0, r4
   39a18:	bl	395bc <flatcc_builder_create_table@@Base>
   39a1c:	cmp	r0, #0
   39a20:	beq	39adc <flatcc_builder_end_table@@Base+0x18c>
   39a24:	ldr	r1, [r4, #32]
   39a28:	mov	r5, r0
   39a2c:	ldr	r0, [r4, #16]
   39a30:	ldr	r2, [r4, #20]
   39a34:	ldr	r3, [r4, #52]	; 0x34
   39a38:	ldr	r7, [r1, #24]
   39a3c:	str	r7, [r4, #12]
   39a40:	ldrh	r7, [r1, #28]
   39a44:	strh	r7, [r4, #8]
   39a48:	ldr	r7, [r1, #16]
   39a4c:	add	r3, r3, r7
   39a50:	str	r3, [r4, #4]
   39a54:	ldr	r3, [r4, #76]	; 0x4c
   39a58:	ldr	r1, [r1, #20]
   39a5c:	add	r1, r3, r1
   39a60:	str	r1, [r4]
   39a64:	mov	r1, #0
   39a68:	bl	148d4 <memset@plt>
   39a6c:	ldr	r0, [r4, #32]
   39a70:	ldr	r1, [r4, #60]	; 0x3c
   39a74:	ldr	r2, [r4, #64]	; 0x40
   39a78:	mov	r8, r5
   39a7c:	ldr	r3, [r0, #8]
   39a80:	str	r3, [r4, #20]
   39a84:	ldr	r3, [r0]
   39a88:	str	r3, [r4, #28]
   39a8c:	add	r1, r1, r3
   39a90:	ldr	r7, [r0, #4]
   39a94:	str	r1, [r4, #16]
   39a98:	sub	r1, r2, r3
   39a9c:	cmp	r1, r7
   39aa0:	movhi	r1, r7
   39aa4:	str	r1, [r4, #24]
   39aa8:	ldrh	r1, [r4, #130]	; 0x82
   39aac:	ldrh	r2, [r4, #128]	; 0x80
   39ab0:	cmp	r2, r1
   39ab4:	strhcc	r1, [r4, #128]	; 0x80
   39ab8:	ldrh	r1, [r0, #12]
   39abc:	sub	r0, r0, #36	; 0x24
   39ac0:	str	r0, [r4, #32]
   39ac4:	strh	r1, [r4, #130]	; 0x82
   39ac8:	ldr	r0, [r4, #156]	; 0x9c
   39acc:	sub	r0, r0, #1
   39ad0:	str	r0, [r4, #156]	; 0x9c
   39ad4:	b	39adc <flatcc_builder_end_table@@Base+0x18c>
   39ad8:	mov	r8, #0
   39adc:	mov	r0, r8
   39ae0:	sub	sp, fp, #24
   39ae4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   39ae8:	ldr	r0, [pc, #24]	; 39b08 <flatcc_builder_end_table@@Base+0x1b8>
   39aec:	ldr	r1, [pc, #24]	; 39b0c <flatcc_builder_end_table@@Base+0x1bc>
   39af0:	ldr	r3, [pc, #24]	; 39b10 <flatcc_builder_end_table@@Base+0x1c0>
   39af4:	movw	r2, #1317	; 0x525
   39af8:	add	r0, pc, r0
   39afc:	add	r1, pc, r1
   39b00:	add	r3, pc, r3
   39b04:	bl	1497c <__assert_fail@plt>
   39b08:	andeq	pc, r1, lr, ror lr	; <UNPREDICTABLE>
   39b0c:	andeq	pc, r1, lr, asr #12
   39b10:	muleq	r1, lr, pc	; <UNPREDICTABLE>

00039b14 <flatcc_builder_create_vector@@Base>:
   39b14:	push	{r4, r5, r6, r7, fp, lr}
   39b18:	add	fp, sp, #16
   39b1c:	sub	sp, sp, #80	; 0x50
   39b20:	mov	r7, r0
   39b24:	ldr	r0, [fp, #12]
   39b28:	cmp	r2, r0
   39b2c:	bhi	39c28 <flatcc_builder_create_vector@@Base+0x114>
   39b30:	ldr	r0, [fp, #8]
   39b34:	mov	r4, r2
   39b38:	ldrh	r2, [r7, #128]	; 0x80
   39b3c:	mov	r5, #4
   39b40:	cmp	r0, #4
   39b44:	movls	r0, r5
   39b48:	cmp	r2, r0
   39b4c:	sub	r2, fp, #20
   39b50:	strhcc	r0, [r7, #128]	; 0x80
   39b54:	str	r4, [fp, #-20]	; 0xffffffec
   39b58:	sub	r0, r0, #1
   39b5c:	ldr	ip, [r7, #136]	; 0x88
   39b60:	str	r5, [sp, #16]
   39b64:	str	r2, [sp, #12]
   39b68:	mov	r2, #1
   39b6c:	str	r5, [sp, #4]
   39b70:	str	r2, [sp, #8]
   39b74:	mls	r6, r3, r4, ip
   39b78:	mul	r3, r3, r4
   39b7c:	cmp	r3, #0
   39b80:	and	r0, r6, r0
   39b84:	movne	r2, #2
   39b88:	addne	r5, r3, #4
   39b8c:	strne	r3, [sp, #24]
   39b90:	strne	r1, [sp, #20]
   39b94:	strne	r2, [sp, #8]
   39b98:	strne	r5, [sp, #4]
   39b9c:	cmp	r0, #0
   39ba0:	beq	39bcc <flatcc_builder_create_vector@@Base+0xb8>
   39ba4:	add	r5, r5, r0
   39ba8:	add	r1, sp, #4
   39bac:	str	r5, [sp, #4]
   39bb0:	add	r1, r1, r2, lsl #3
   39bb4:	add	r2, r2, #1
   39bb8:	ldr	r3, [pc, #168]	; 39c68 <flatcc_builder_create_vector@@Base+0x154>
   39bbc:	ldr	r3, [pc, r3]
   39bc0:	str	r3, [r1, #8]
   39bc4:	str	r0, [r1, #12]
   39bc8:	str	r2, [sp, #8]
   39bcc:	cmp	r5, #0
   39bd0:	ble	39c48 <flatcc_builder_create_vector@@Base+0x134>
   39bd4:	ldr	r0, [r7, #36]	; 0x24
   39bd8:	ldr	r6, [r7, #44]	; 0x2c
   39bdc:	add	r1, sp, #4
   39be0:	sub	r4, ip, r5
   39be4:	str	r5, [sp]
   39be8:	add	r1, r1, #8
   39bec:	mov	r3, r4
   39bf0:	blx	r6
   39bf4:	cmp	r0, #0
   39bf8:	streq	r4, [r7, #136]	; 0x88
   39bfc:	moveq	r0, r4
   39c00:	subeq	sp, fp, #16
   39c04:	popeq	{r4, r5, r6, r7, fp, pc}
   39c08:	ldr	r0, [pc, #116]	; 39c84 <flatcc_builder_create_vector@@Base+0x170>
   39c0c:	ldr	r1, [pc, #116]	; 39c88 <flatcc_builder_create_vector@@Base+0x174>
   39c10:	ldr	r3, [pc, #116]	; 39c8c <flatcc_builder_create_vector@@Base+0x178>
   39c14:	movw	r2, #651	; 0x28b
   39c18:	add	r0, pc, r0
   39c1c:	add	r1, pc, r1
   39c20:	add	r3, pc, r3
   39c24:	bl	1497c <__assert_fail@plt>
   39c28:	ldr	r0, [pc, #60]	; 39c6c <flatcc_builder_create_vector@@Base+0x158>
   39c2c:	ldr	r1, [pc, #60]	; 39c70 <flatcc_builder_create_vector@@Base+0x15c>
   39c30:	ldr	r3, [pc, #60]	; 39c74 <flatcc_builder_create_vector@@Base+0x160>
   39c34:	movw	r2, #1365	; 0x555
   39c38:	add	r0, pc, r0
   39c3c:	add	r1, pc, r1
   39c40:	add	r3, pc, r3
   39c44:	bl	1497c <__assert_fail@plt>
   39c48:	ldr	r0, [pc, #40]	; 39c78 <flatcc_builder_create_vector@@Base+0x164>
   39c4c:	ldr	r1, [pc, #40]	; 39c7c <flatcc_builder_create_vector@@Base+0x168>
   39c50:	ldr	r3, [pc, #40]	; 39c80 <flatcc_builder_create_vector@@Base+0x16c>
   39c54:	movw	r2, #647	; 0x287
   39c58:	add	r0, pc, r0
   39c5c:	add	r1, pc, r1
   39c60:	add	r3, pc, r3
   39c64:	bl	1497c <__assert_fail@plt>
   39c68:	ldrdeq	r1, [r3], -ip
   39c6c:	andeq	pc, r1, r8, lsr #29
   39c70:	andeq	pc, r1, lr, lsl #10
   39c74:			; <UNDEFINED> instruction: 0x0001feb3
   39c78:	strdeq	r6, [r1], -r6	; <UNPREDICTABLE>
   39c7c:	andeq	pc, r1, lr, ror #9
   39c80:	andeq	r0, r2, r6, ror #10
   39c84:	andeq	r6, r1, r6, lsr r8
   39c88:	andeq	pc, r1, lr, lsr #10
   39c8c:	andeq	r0, r2, r6, lsr #11

00039c90 <flatcc_builder_end_vector@@Base>:
   39c90:	push	{r4, r5, fp, lr}
   39c94:	add	fp, sp, #8
   39c98:	sub	sp, sp, #8
   39c9c:	mov	r4, r0
   39ca0:	ldr	r0, [r0, #32]
   39ca4:	ldrh	r1, [r0, #14]
   39ca8:	cmp	r1, #4
   39cac:	bne	39d60 <flatcc_builder_end_vector@@Base+0xd0>
   39cb0:	ldr	r3, [r0, #16]
   39cb4:	ldr	r2, [r0, #20]
   39cb8:	ldr	r0, [r0, #24]
   39cbc:	ldr	r1, [r4, #16]
   39cc0:	ldrh	r5, [r4, #130]	; 0x82
   39cc4:	str	r0, [sp, #4]
   39cc8:	mov	r0, r4
   39ccc:	str	r5, [sp]
   39cd0:	bl	39b14 <flatcc_builder_create_vector@@Base>
   39cd4:	mov	r5, r0
   39cd8:	cmp	r0, #0
   39cdc:	beq	39d54 <flatcc_builder_end_vector@@Base+0xc4>
   39ce0:	ldr	r0, [r4, #16]
   39ce4:	ldr	r2, [r4, #20]
   39ce8:	mov	r1, #0
   39cec:	bl	148d4 <memset@plt>
   39cf0:	ldr	r0, [r4, #32]
   39cf4:	ldr	r1, [r4, #60]	; 0x3c
   39cf8:	ldr	ip, [r4, #64]	; 0x40
   39cfc:	ldr	r3, [r0, #8]
   39d00:	str	r3, [r4, #20]
   39d04:	ldr	r3, [r0]
   39d08:	str	r3, [r4, #28]
   39d0c:	add	r1, r1, r3
   39d10:	ldr	r2, [r0, #4]
   39d14:	str	r1, [r4, #16]
   39d18:	sub	r1, ip, r3
   39d1c:	cmp	r1, r2
   39d20:	movhi	r1, r2
   39d24:	str	r1, [r4, #24]
   39d28:	ldrh	r1, [r4, #130]	; 0x82
   39d2c:	ldrh	r2, [r4, #128]	; 0x80
   39d30:	cmp	r2, r1
   39d34:	strhcc	r1, [r4, #128]	; 0x80
   39d38:	ldrh	r1, [r0, #12]
   39d3c:	sub	r0, r0, #36	; 0x24
   39d40:	str	r0, [r4, #32]
   39d44:	strh	r1, [r4, #130]	; 0x82
   39d48:	ldr	r0, [r4, #156]	; 0x9c
   39d4c:	sub	r0, r0, #1
   39d50:	str	r0, [r4, #156]	; 0x9c
   39d54:	mov	r0, r5
   39d58:	sub	sp, fp, #8
   39d5c:	pop	{r4, r5, fp, pc}
   39d60:	ldr	r0, [pc, #24]	; 39d80 <flatcc_builder_end_vector@@Base+0xf0>
   39d64:	ldr	r1, [pc, #24]	; 39d84 <flatcc_builder_end_vector@@Base+0xf4>
   39d68:	ldr	r3, [pc, #24]	; 39d88 <flatcc_builder_end_vector@@Base+0xf8>
   39d6c:	movw	r2, #1400	; 0x578
   39d70:	add	r0, pc, r0
   39d74:	add	r1, pc, r1
   39d78:	add	r3, pc, r3
   39d7c:	bl	1497c <__assert_fail@plt>
   39d80:	andeq	pc, r1, r4, lsl r7	; <UNPREDICTABLE>
   39d84:	ldrdeq	pc, [r1], -r6
   39d88:	strdeq	pc, [r1], -r1

00039d8c <flatcc_builder_vector_count@@Base>:
   39d8c:	ldr	r0, [r0, #32]
   39d90:	ldr	r0, [r0, #20]
   39d94:	bx	lr

00039d98 <flatcc_builder_vector_edit@@Base>:
   39d98:	ldr	r0, [r0, #16]
   39d9c:	bx	lr

00039da0 <flatcc_builder_create_offset_vector_direct@@Base>:
   39da0:	mov	r3, #0
   39da4:	b	39da8 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   39da8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   39dac:	add	fp, sp, #24
   39db0:	sub	sp, sp, #80	; 0x50
   39db4:	mov	r6, #0
   39db8:	cmn	r2, #-1073741823	; 0xc0000001
   39dbc:	bhi	39f1c <flatcc_builder_create_offset_vector_direct@@Base+0x17c>
   39dc0:	mov	r8, r0
   39dc4:	ldrh	r0, [r0, #128]	; 0x80
   39dc8:	mov	r5, #4
   39dcc:	sub	r7, fp, #28
   39dd0:	mov	r4, #1
   39dd4:	cmp	r0, #3
   39dd8:	movls	r0, #4
   39ddc:	strhls	r0, [r8, #128]	; 0x80
   39de0:	str	r2, [fp, #-28]	; 0xffffffe4
   39de4:	ldr	ip, [r8, #136]	; 0x88
   39de8:	str	r5, [sp, #16]
   39dec:	str	r7, [sp, #12]
   39df0:	mov	r7, #0
   39df4:	str	r5, [sp, #4]
   39df8:	str	r4, [sp, #8]
   39dfc:	cmp	r7, r2, lsl #2
   39e00:	and	r6, ip, #3
   39e04:	beq	39e24 <flatcc_builder_create_offset_vector_direct@@Base+0x84>
   39e08:	lsl	r7, r2, #2
   39e0c:	mov	r4, #2
   39e10:	add	r5, r7, #4
   39e14:	str	r7, [sp, #24]
   39e18:	str	r1, [sp, #20]
   39e1c:	str	r4, [sp, #8]
   39e20:	str	r5, [sp, #4]
   39e24:	cmp	r6, #0
   39e28:	beq	39e54 <flatcc_builder_create_offset_vector_direct@@Base+0xb4>
   39e2c:	add	r5, r5, r6
   39e30:	add	r7, sp, #4
   39e34:	str	r5, [sp, #4]
   39e38:	add	r7, r7, r4, lsl #3
   39e3c:	add	r4, r4, #1
   39e40:	ldr	r0, [pc, #352]	; 39fa8 <flatcc_builder_create_offset_vector_direct@@Base+0x208>
   39e44:	ldr	r0, [pc, r0]
   39e48:	str	r0, [r7, #8]
   39e4c:	str	r6, [r7, #12]
   39e50:	str	r4, [sp, #8]
   39e54:	cmp	r2, #0
   39e58:	beq	39ee4 <flatcc_builder_create_offset_vector_direct@@Base+0x144>
   39e5c:	sub	r0, r5, ip
   39e60:	mov	r6, r3
   39e64:	sub	r0, r0, #4
   39e68:	b	39e80 <flatcc_builder_create_offset_vector_direct@@Base+0xe0>
   39e6c:	sub	r0, r0, #4
   39e70:	add	r1, r1, #4
   39e74:	add	r6, r6, #1
   39e78:	subs	r2, r2, #1
   39e7c:	beq	39ee0 <flatcc_builder_create_offset_vector_direct@@Base+0x140>
   39e80:	ldr	r7, [r1]
   39e84:	cmp	r7, #0
   39e88:	beq	39eac <flatcc_builder_create_offset_vector_direct@@Base+0x10c>
   39e8c:	add	r7, r0, r7
   39e90:	cmp	r3, #0
   39e94:	str	r7, [r1]
   39e98:	beq	39e6c <flatcc_builder_create_offset_vector_direct@@Base+0xcc>
   39e9c:	ldrb	r7, [r6]
   39ea0:	cmp	r7, #0
   39ea4:	bne	39e6c <flatcc_builder_create_offset_vector_direct@@Base+0xcc>
   39ea8:	b	39f28 <flatcc_builder_create_offset_vector_direct@@Base+0x188>
   39eac:	cmp	r3, #0
   39eb0:	beq	39f48 <flatcc_builder_create_offset_vector_direct@@Base+0x1a8>
   39eb4:	ldrb	r7, [r6]
   39eb8:	cmp	r7, #0
   39ebc:	beq	39e6c <flatcc_builder_create_offset_vector_direct@@Base+0xcc>
   39ec0:	ldr	r0, [pc, #240]	; 39fb8 <flatcc_builder_create_offset_vector_direct@@Base+0x218>
   39ec4:	ldr	r1, [pc, #240]	; 39fbc <flatcc_builder_create_offset_vector_direct@@Base+0x21c>
   39ec8:	ldr	r3, [pc, #240]	; 39fc0 <flatcc_builder_create_offset_vector_direct@@Base+0x220>
   39ecc:	movw	r2, #1461	; 0x5b5
   39ed0:	add	r0, pc, r0
   39ed4:	add	r1, pc, r1
   39ed8:	add	r3, pc, r3
   39edc:	bl	1497c <__assert_fail@plt>
   39ee0:	ldr	ip, [r8, #136]	; 0x88
   39ee4:	cmp	r5, #0
   39ee8:	ble	39f68 <flatcc_builder_create_offset_vector_direct@@Base+0x1c8>
   39eec:	ldr	r0, [r8, #36]	; 0x24
   39ef0:	ldr	r7, [r8, #44]	; 0x2c
   39ef4:	add	r1, sp, #4
   39ef8:	sub	r6, ip, r5
   39efc:	mov	r2, r4
   39f00:	str	r5, [sp]
   39f04:	add	r1, r1, #8
   39f08:	mov	r3, r6
   39f0c:	blx	r7
   39f10:	cmp	r0, #0
   39f14:	bne	39f88 <flatcc_builder_create_offset_vector_direct@@Base+0x1e8>
   39f18:	str	r6, [r8, #136]	; 0x88
   39f1c:	mov	r0, r6
   39f20:	sub	sp, fp, #24
   39f24:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   39f28:	ldr	r0, [pc, #124]	; 39fac <flatcc_builder_create_offset_vector_direct@@Base+0x20c>
   39f2c:	ldr	r1, [pc, #124]	; 39fb0 <flatcc_builder_create_offset_vector_direct@@Base+0x210>
   39f30:	ldr	r3, [pc, #124]	; 39fb4 <flatcc_builder_create_offset_vector_direct@@Base+0x214>
   39f34:	movw	r2, #1457	; 0x5b1
   39f38:	add	r0, pc, r0
   39f3c:	add	r1, pc, r1
   39f40:	add	r3, pc, r3
   39f44:	bl	1497c <__assert_fail@plt>
   39f48:	ldr	r0, [pc, #116]	; 39fc4 <flatcc_builder_create_offset_vector_direct@@Base+0x224>
   39f4c:	ldr	r1, [pc, #116]	; 39fc8 <flatcc_builder_create_offset_vector_direct@@Base+0x228>
   39f50:	ldr	r3, [pc, #116]	; 39fcc <flatcc_builder_create_offset_vector_direct@@Base+0x22c>
   39f54:	movw	r2, #1463	; 0x5b7
   39f58:	add	r0, pc, r0
   39f5c:	add	r1, pc, r1
   39f60:	add	r3, pc, r3
   39f64:	bl	1497c <__assert_fail@plt>
   39f68:	ldr	r0, [pc, #96]	; 39fd0 <flatcc_builder_create_offset_vector_direct@@Base+0x230>
   39f6c:	ldr	r1, [pc, #96]	; 39fd4 <flatcc_builder_create_offset_vector_direct@@Base+0x234>
   39f70:	ldr	r3, [pc, #96]	; 39fd8 <flatcc_builder_create_offset_vector_direct@@Base+0x238>
   39f74:	movw	r2, #647	; 0x287
   39f78:	add	r0, pc, r0
   39f7c:	add	r1, pc, r1
   39f80:	add	r3, pc, r3
   39f84:	bl	1497c <__assert_fail@plt>
   39f88:	ldr	r0, [pc, #76]	; 39fdc <flatcc_builder_create_offset_vector_direct@@Base+0x23c>
   39f8c:	ldr	r1, [pc, #76]	; 39fe0 <flatcc_builder_create_offset_vector_direct@@Base+0x240>
   39f90:	ldr	r3, [pc, #76]	; 39fe4 <flatcc_builder_create_offset_vector_direct@@Base+0x244>
   39f94:	movw	r2, #651	; 0x28b
   39f98:	add	r0, pc, r0
   39f9c:	add	r1, pc, r1
   39fa0:	add	r3, pc, r3
   39fa4:	bl	1497c <__assert_fail@plt>
   39fa8:	andeq	r1, r3, r4, asr r2
   39fac:	andeq	r0, r2, r3, asr #7
   39fb0:	andeq	pc, r1, lr, lsl #4
   39fb4:	andeq	r0, r2, r9, asr #7
   39fb8:			; <UNDEFINED> instruction: 0x000204bc
   39fbc:	andeq	pc, r1, r6, ror r2	; <UNPREDICTABLE>
   39fc0:	andeq	r0, r2, r1, lsr r4
   39fc4:	strdeq	r6, [r1], -r6	; <UNPREDICTABLE>
   39fc8:	andeq	pc, r1, lr, ror #3
   39fcc:	andeq	r0, r2, r9, lsr #7
   39fd0:	ldrdeq	r6, [r1], -r6	; <UNPREDICTABLE>
   39fd4:	andeq	pc, r1, lr, asr #3
   39fd8:	andeq	r0, r2, r6, asr #4
   39fdc:			; <UNDEFINED> instruction: 0x000164b6
   39fe0:	andeq	pc, r1, lr, lsr #3
   39fe4:	andeq	r0, r2, r6, lsr #4

00039fe8 <flatcc_builder_end_offset_vector_for_unions@@Base>:
   39fe8:	push	{r4, r5, fp, lr}
   39fec:	add	fp, sp, #8
   39ff0:	mov	r4, r0
   39ff4:	ldr	r0, [r0, #32]
   39ff8:	mov	r3, r1
   39ffc:	ldrh	r1, [r0, #14]
   3a000:	cmp	r1, #5
   3a004:	bne	3a0a0 <flatcc_builder_end_offset_vector_for_unions@@Base+0xb8>
   3a008:	ldr	r2, [r0, #20]
   3a00c:	ldr	r1, [r4, #16]
   3a010:	mov	r0, r4
   3a014:	bl	39da8 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   3a018:	mov	r5, r0
   3a01c:	cmp	r0, #0
   3a020:	beq	3a098 <flatcc_builder_end_offset_vector_for_unions@@Base+0xb0>
   3a024:	ldr	r0, [r4, #16]
   3a028:	ldr	r2, [r4, #20]
   3a02c:	mov	r1, #0
   3a030:	bl	148d4 <memset@plt>
   3a034:	ldr	r0, [r4, #32]
   3a038:	ldr	r1, [r4, #60]	; 0x3c
   3a03c:	ldr	ip, [r4, #64]	; 0x40
   3a040:	ldr	r3, [r0, #8]
   3a044:	str	r3, [r4, #20]
   3a048:	ldr	r3, [r0]
   3a04c:	str	r3, [r4, #28]
   3a050:	add	r1, r1, r3
   3a054:	ldr	r2, [r0, #4]
   3a058:	str	r1, [r4, #16]
   3a05c:	sub	r1, ip, r3
   3a060:	cmp	r1, r2
   3a064:	movhi	r1, r2
   3a068:	str	r1, [r4, #24]
   3a06c:	ldrh	r1, [r4, #130]	; 0x82
   3a070:	ldrh	r2, [r4, #128]	; 0x80
   3a074:	cmp	r2, r1
   3a078:	strhcc	r1, [r4, #128]	; 0x80
   3a07c:	ldrh	r1, [r0, #12]
   3a080:	sub	r0, r0, #36	; 0x24
   3a084:	str	r0, [r4, #32]
   3a088:	strh	r1, [r4, #130]	; 0x82
   3a08c:	ldr	r0, [r4, #156]	; 0x9c
   3a090:	sub	r0, r0, #1
   3a094:	str	r0, [r4, #156]	; 0x9c
   3a098:	mov	r0, r5
   3a09c:	pop	{r4, r5, fp, pc}
   3a0a0:	ldr	r0, [pc, #24]	; 3a0c0 <flatcc_builder_end_offset_vector_for_unions@@Base+0xd8>
   3a0a4:	ldr	r1, [pc, #24]	; 3a0c4 <flatcc_builder_end_offset_vector_for_unions@@Base+0xdc>
   3a0a8:	ldr	r3, [pc, #24]	; 3a0c8 <flatcc_builder_end_offset_vector_for_unions@@Base+0xe0>
   3a0ac:	movw	r2, #1493	; 0x5d5
   3a0b0:	add	r0, pc, r0
   3a0b4:	add	r1, pc, r1
   3a0b8:	add	r3, pc, r3
   3a0bc:	bl	1497c <__assert_fail@plt>
   3a0c0:	andeq	pc, r1, sp, asr #9
   3a0c4:	muleq	r1, r6, r0
   3a0c8:	andeq	pc, r1, lr, lsr fp	; <UNPREDICTABLE>

0003a0cc <flatcc_builder_offset_vector_edit@@Base>:
   3a0cc:	ldr	r0, [r0, #16]
   3a0d0:	bx	lr

0003a0d4 <flatcc_builder_offset_vector_count@@Base>:
   3a0d4:	ldr	r0, [r0, #32]
   3a0d8:	ldr	r0, [r0, #20]
   3a0dc:	bx	lr

0003a0e0 <flatcc_builder_table_add_union@@Base>:
   3a0e0:	push	{r4, r5, r6, r7, fp, lr}
   3a0e4:	add	fp, sp, #16
   3a0e8:	mov	r5, r0
   3a0ec:	ldr	r0, [r0, #32]
   3a0f0:	ldrh	r0, [r0, #14]
   3a0f4:	cmp	r0, #3
   3a0f8:	bne	3a180 <flatcc_builder_table_add_union@@Base+0xa0>
   3a0fc:	mov	r7, r3
   3a100:	mov	r4, r2
   3a104:	mov	r6, r1
   3a108:	cmp	r3, #0
   3a10c:	beq	3a11c <flatcc_builder_table_add_union@@Base+0x3c>
   3a110:	uxtb	r0, r4
   3a114:	cmp	r0, #0
   3a118:	beq	3a1a0 <flatcc_builder_table_add_union@@Base+0xc0>
   3a11c:	cmp	r7, #0
   3a120:	beq	3a13c <flatcc_builder_table_add_union@@Base+0x5c>
   3a124:	mov	r0, r5
   3a128:	mov	r1, r6
   3a12c:	bl	3a210 <flatcc_builder_table_add_offset@@Base>
   3a130:	cmp	r0, #0
   3a134:	beq	3a1c0 <flatcc_builder_table_add_union@@Base+0xe0>
   3a138:	str	r7, [r0]
   3a13c:	sub	r1, r6, #1
   3a140:	mov	r0, r5
   3a144:	mov	r2, #1
   3a148:	mov	r3, #1
   3a14c:	bl	3a3c4 <flatcc_builder_table_add@@Base>
   3a150:	cmp	r0, #0
   3a154:	strbne	r4, [r0]
   3a158:	movne	r0, #0
   3a15c:	popne	{r4, r5, r6, r7, fp, pc}
   3a160:	ldr	r0, [pc, #156]	; 3a204 <flatcc_builder_table_add_union@@Base+0x124>
   3a164:	ldr	r1, [pc, #156]	; 3a208 <flatcc_builder_table_add_union@@Base+0x128>
   3a168:	ldr	r3, [pc, #156]	; 3a20c <flatcc_builder_table_add_union@@Base+0x12c>
   3a16c:	movw	r2, #1526	; 0x5f6
   3a170:	add	r0, pc, r0
   3a174:	add	r1, pc, r1
   3a178:	add	r3, pc, r3
   3a17c:	bl	1497c <__assert_fail@plt>
   3a180:	ldr	r0, [pc, #88]	; 3a1e0 <flatcc_builder_table_add_union@@Base+0x100>
   3a184:	ldr	r1, [pc, #88]	; 3a1e4 <flatcc_builder_table_add_union@@Base+0x104>
   3a188:	ldr	r3, [pc, #88]	; 3a1e8 <flatcc_builder_table_add_union@@Base+0x108>
   3a18c:	movw	r2, #1518	; 0x5ee
   3a190:	add	r0, pc, r0
   3a194:	add	r1, pc, r1
   3a198:	add	r3, pc, r3
   3a19c:	bl	1497c <__assert_fail@plt>
   3a1a0:	ldr	r0, [pc, #68]	; 3a1ec <flatcc_builder_table_add_union@@Base+0x10c>
   3a1a4:	ldr	r1, [pc, #68]	; 3a1f0 <flatcc_builder_table_add_union@@Base+0x110>
   3a1a8:	ldr	r3, [pc, #68]	; 3a1f4 <flatcc_builder_table_add_union@@Base+0x114>
   3a1ac:	movw	r2, #1519	; 0x5ef
   3a1b0:	add	r0, pc, r0
   3a1b4:	add	r1, pc, r1
   3a1b8:	add	r3, pc, r3
   3a1bc:	bl	1497c <__assert_fail@plt>
   3a1c0:	ldr	r0, [pc, #48]	; 3a1f8 <flatcc_builder_table_add_union@@Base+0x118>
   3a1c4:	ldr	r1, [pc, #48]	; 3a1fc <flatcc_builder_table_add_union@@Base+0x11c>
   3a1c8:	ldr	r3, [pc, #48]	; 3a200 <flatcc_builder_table_add_union@@Base+0x120>
   3a1cc:	movw	r2, #1522	; 0x5f2
   3a1d0:	add	r0, pc, r0
   3a1d4:	add	r1, pc, r1
   3a1d8:	add	r3, pc, r3
   3a1dc:	bl	1497c <__assert_fail@plt>
   3a1e0:	andeq	pc, r1, r6, ror #15
   3a1e4:			; <UNDEFINED> instruction: 0x0001efb6
   3a1e8:	ldrdeq	pc, [r1], -r0
   3a1ec:	andeq	pc, r1, r0, lsl fp	; <UNPREDICTABLE>
   3a1f0:	muleq	r1, r6, pc	; <UNPREDICTABLE>
   3a1f4:			; <UNDEFINED> instruction: 0x0001fab0
   3a1f8:	andeq	pc, r1, r2, lsl fp	; <UNPREDICTABLE>
   3a1fc:	andeq	lr, r1, r6, ror pc
   3a200:	muleq	r1, r0, sl
   3a204:	andeq	pc, r1, ip, ror fp	; <UNPREDICTABLE>
   3a208:	ldrdeq	lr, [r1], -r6
   3a20c:	strdeq	pc, [r1], -r0

0003a210 <flatcc_builder_table_add_offset@@Base>:
   3a210:	push	{r4, r5, r6, r7, fp, lr}
   3a214:	add	fp, sp, #16
   3a218:	sub	sp, sp, #8
   3a21c:	mov	r4, r0
   3a220:	ldr	r0, [r0, #32]
   3a224:	ldrh	r0, [r0, #14]
   3a228:	cmp	r0, #3
   3a22c:	bne	3a340 <flatcc_builder_table_add_offset@@Base+0x130>
   3a230:	movw	r0, #32765	; 0x7ffd
   3a234:	mov	r5, r1
   3a238:	cmp	r1, r0
   3a23c:	bcs	3a360 <flatcc_builder_table_add_offset@@Base+0x150>
   3a240:	ldr	r0, [r4, #4]
   3a244:	add	r1, r0, r5, lsl #1
   3a248:	ldrh	r1, [r1]
   3a24c:	cmp	r1, #0
   3a250:	bne	3a380 <flatcc_builder_table_add_offset@@Base+0x170>
   3a254:	ldr	r2, [r4, #20]
   3a258:	ldr	r1, [r4, #12]
   3a25c:	ldr	r3, [r4, #24]
   3a260:	add	r2, r2, #3
   3a264:	eor	r1, r1, r5
   3a268:	bic	r6, r2, #3
   3a26c:	movw	r2, #31153	; 0x79b1
   3a270:	movt	r2, #40503	; 0x9e37
   3a274:	add	r7, r6, #4
   3a278:	cmp	r7, r3
   3a27c:	str	r7, [r4, #20]
   3a280:	mul	r1, r1, r2
   3a284:	eor	r1, r1, #4
   3a288:	mul	r1, r1, r2
   3a28c:	str	r1, [r4, #12]
   3a290:	bls	3a304 <flatcc_builder_table_add_offset@@Base+0xf4>
   3a294:	ldr	r1, [r4, #28]
   3a298:	ldr	r0, [r4, #40]	; 0x28
   3a29c:	ldr	ip, [r4, #48]	; 0x30
   3a2a0:	mov	r2, #1
   3a2a4:	mov	r3, #1
   3a2a8:	str	r2, [sp]
   3a2ac:	add	r2, r1, r7
   3a2b0:	add	r1, r4, #60	; 0x3c
   3a2b4:	blx	ip
   3a2b8:	mov	r1, r0
   3a2bc:	mov	r0, #0
   3a2c0:	cmp	r1, #0
   3a2c4:	beq	3a2d0 <flatcc_builder_table_add_offset@@Base+0xc0>
   3a2c8:	sub	sp, fp, #16
   3a2cc:	pop	{r4, r5, r6, r7, fp, pc}
   3a2d0:	ldr	r0, [r4, #28]
   3a2d4:	ldr	r2, [r4, #60]	; 0x3c
   3a2d8:	ldr	r3, [r4, #64]	; 0x40
   3a2dc:	ldr	r1, [r4, #32]
   3a2e0:	add	r2, r2, r0
   3a2e4:	sub	r0, r3, r0
   3a2e8:	str	r2, [r4, #16]
   3a2ec:	movw	r2, #65532	; 0xfffc
   3a2f0:	cmp	r0, r2
   3a2f4:	movcs	r0, r2
   3a2f8:	str	r0, [r4, #24]
   3a2fc:	str	r2, [r1, #4]
   3a300:	ldr	r0, [r4, #4]
   3a304:	uxth	r1, r5
   3a308:	add	r0, r0, r1, lsl #1
   3a30c:	strh	r7, [r0]
   3a310:	ldrh	r0, [r4, #8]
   3a314:	cmp	r0, r1
   3a318:	addls	r0, r5, #1
   3a31c:	strhls	r0, [r4, #8]
   3a320:	ldr	r0, [r4]
   3a324:	add	r1, r0, #2
   3a328:	str	r1, [r4]
   3a32c:	strh	r6, [r0]
   3a330:	ldr	r0, [r4, #16]
   3a334:	add	r0, r0, r6
   3a338:	sub	sp, fp, #16
   3a33c:	pop	{r4, r5, r6, r7, fp, pc}
   3a340:	ldr	r0, [pc, #88]	; 3a3a0 <flatcc_builder_table_add_offset@@Base+0x190>
   3a344:	ldr	r1, [pc, #88]	; 3a3a4 <flatcc_builder_table_add_offset@@Base+0x194>
   3a348:	ldr	r3, [pc, #88]	; 3a3a8 <flatcc_builder_table_add_offset@@Base+0x198>
   3a34c:	movw	r2, #1811	; 0x713
   3a350:	add	r0, pc, r0
   3a354:	add	r1, pc, r1
   3a358:	add	r3, pc, r3
   3a35c:	bl	1497c <__assert_fail@plt>
   3a360:	ldr	r0, [pc, #68]	; 3a3ac <flatcc_builder_table_add_offset@@Base+0x19c>
   3a364:	ldr	r1, [pc, #68]	; 3a3b0 <flatcc_builder_table_add_offset@@Base+0x1a0>
   3a368:	ldr	r3, [pc, #68]	; 3a3b4 <flatcc_builder_table_add_offset@@Base+0x1a4>
   3a36c:	movw	r2, #1812	; 0x714
   3a370:	add	r0, pc, r0
   3a374:	add	r1, pc, r1
   3a378:	add	r3, pc, r3
   3a37c:	bl	1497c <__assert_fail@plt>
   3a380:	ldr	r0, [pc, #48]	; 3a3b8 <flatcc_builder_table_add_offset@@Base+0x1a8>
   3a384:	ldr	r1, [pc, #48]	; 3a3bc <flatcc_builder_table_add_offset@@Base+0x1ac>
   3a388:	ldr	r3, [pc, #48]	; 3a3c0 <flatcc_builder_table_add_offset@@Base+0x1b0>
   3a38c:	movw	r2, #1819	; 0x71b
   3a390:	add	r0, pc, r0
   3a394:	add	r1, pc, r1
   3a398:	add	r3, pc, r3
   3a39c:	bl	1497c <__assert_fail@plt>
   3a3a0:	andeq	pc, r1, r6, lsr #12
   3a3a4:	strdeq	lr, [r1], -r6
   3a3a8:	andeq	pc, r1, r2, lsl sp	; <UNPREDICTABLE>
   3a3ac:	andeq	pc, r1, sl, ror ip	; <UNPREDICTABLE>
   3a3b0:	ldrdeq	lr, [r1], -r6
   3a3b4:	strdeq	pc, [r1], -r2
   3a3b8:	strheq	r6, [r1], -lr
   3a3bc:			; <UNDEFINED> instruction: 0x0001edb6
   3a3c0:	ldrdeq	pc, [r1], -r2

0003a3c4 <flatcc_builder_table_add@@Base>:
   3a3c4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3a3c8:	add	fp, sp, #24
   3a3cc:	sub	sp, sp, #8
   3a3d0:	mov	r4, r0
   3a3d4:	ldr	r0, [r0, #32]
   3a3d8:	ldrh	r0, [r0, #14]
   3a3dc:	cmp	r0, #3
   3a3e0:	bne	3a500 <flatcc_builder_table_add@@Base+0x13c>
   3a3e4:	movw	r0, #32765	; 0x7ffd
   3a3e8:	mov	r8, r1
   3a3ec:	cmp	r1, r0
   3a3f0:	bcs	3a520 <flatcc_builder_table_add@@Base+0x15c>
   3a3f4:	ldrh	r0, [r4, #130]	; 0x82
   3a3f8:	cmp	r0, r3
   3a3fc:	strhcc	r3, [r4, #130]	; 0x82
   3a400:	ldr	r0, [r4, #4]
   3a404:	add	r1, r0, r8, lsl #1
   3a408:	ldrh	r1, [r1]
   3a40c:	cmp	r1, #0
   3a410:	bne	3a540 <flatcc_builder_table_add@@Base+0x17c>
   3a414:	ldr	r1, [r4, #12]
   3a418:	movw	r7, #31153	; 0x79b1
   3a41c:	ldr	r6, [r4, #20]
   3a420:	ldr	r5, [r4, #24]
   3a424:	movt	r7, #40503	; 0x9e37
   3a428:	eor	r1, r1, r8
   3a42c:	mul	r1, r1, r7
   3a430:	eor	r1, r1, r2
   3a434:	mul	r1, r1, r7
   3a438:	str	r1, [r4, #12]
   3a43c:	add	r1, r3, r6
   3a440:	rsb	r3, r3, #0
   3a444:	sub	r1, r1, #1
   3a448:	and	r6, r1, r3
   3a44c:	add	r1, r6, r2
   3a450:	cmp	r1, r5
   3a454:	str	r1, [r4, #20]
   3a458:	bcc	3a4d0 <flatcc_builder_table_add@@Base+0x10c>
   3a45c:	ldr	r2, [r4, #28]
   3a460:	ldr	r0, [r4, #40]	; 0x28
   3a464:	ldr	r7, [r4, #48]	; 0x30
   3a468:	mov	r3, #1
   3a46c:	str	r3, [sp]
   3a470:	mov	r3, #1
   3a474:	add	r1, r1, r2
   3a478:	add	r2, r1, #1
   3a47c:	add	r1, r4, #60	; 0x3c
   3a480:	blx	r7
   3a484:	mov	r1, r0
   3a488:	mov	r0, #0
   3a48c:	cmp	r1, #0
   3a490:	beq	3a49c <flatcc_builder_table_add@@Base+0xd8>
   3a494:	sub	sp, fp, #24
   3a498:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3a49c:	ldr	r0, [r4, #28]
   3a4a0:	ldr	r2, [r4, #60]	; 0x3c
   3a4a4:	ldr	r3, [r4, #64]	; 0x40
   3a4a8:	ldr	r1, [r4, #32]
   3a4ac:	add	r2, r2, r0
   3a4b0:	sub	r0, r3, r0
   3a4b4:	str	r2, [r4, #16]
   3a4b8:	movw	r2, #65532	; 0xfffc
   3a4bc:	cmp	r0, r2
   3a4c0:	movcs	r0, r2
   3a4c4:	str	r0, [r4, #24]
   3a4c8:	str	r2, [r1, #4]
   3a4cc:	ldr	r0, [r4, #4]
   3a4d0:	uxth	r1, r8
   3a4d4:	add	r2, r6, #4
   3a4d8:	add	r0, r0, r1, lsl #1
   3a4dc:	strh	r2, [r0]
   3a4e0:	ldrh	r0, [r4, #8]
   3a4e4:	cmp	r0, r1
   3a4e8:	addls	r0, r8, #1
   3a4ec:	strhls	r0, [r4, #8]
   3a4f0:	ldr	r0, [r4, #16]
   3a4f4:	add	r0, r0, r6
   3a4f8:	sub	sp, fp, #24
   3a4fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3a500:	ldr	r0, [pc, #88]	; 3a560 <flatcc_builder_table_add@@Base+0x19c>
   3a504:	ldr	r1, [pc, #88]	; 3a564 <flatcc_builder_table_add@@Base+0x1a0>
   3a508:	ldr	r3, [pc, #88]	; 3a568 <flatcc_builder_table_add@@Base+0x1a4>
   3a50c:	movw	r2, #1773	; 0x6ed
   3a510:	add	r0, pc, r0
   3a514:	add	r1, pc, r1
   3a518:	add	r3, pc, r3
   3a51c:	bl	1497c <__assert_fail@plt>
   3a520:	ldr	r0, [pc, #68]	; 3a56c <flatcc_builder_table_add@@Base+0x1a8>
   3a524:	ldr	r1, [pc, #68]	; 3a570 <flatcc_builder_table_add@@Base+0x1ac>
   3a528:	ldr	r3, [pc, #68]	; 3a574 <flatcc_builder_table_add@@Base+0x1b0>
   3a52c:	movw	r2, #1774	; 0x6ee
   3a530:	add	r0, pc, r0
   3a534:	add	r1, pc, r1
   3a538:	add	r3, pc, r3
   3a53c:	bl	1497c <__assert_fail@plt>
   3a540:	ldr	r0, [pc, #48]	; 3a578 <flatcc_builder_table_add@@Base+0x1b4>
   3a544:	ldr	r1, [pc, #48]	; 3a57c <flatcc_builder_table_add@@Base+0x1b8>
   3a548:	ldr	r3, [pc, #48]	; 3a580 <flatcc_builder_table_add@@Base+0x1bc>
   3a54c:	movw	r2, #1784	; 0x6f8
   3a550:	add	r0, pc, r0
   3a554:	add	r1, pc, r1
   3a558:	add	r3, pc, r3
   3a55c:	bl	1497c <__assert_fail@plt>
   3a560:	andeq	pc, r1, r6, ror #8
   3a564:	andeq	lr, r1, r6, lsr ip
   3a568:	andeq	pc, r1, r8, lsl #21
   3a56c:			; <UNDEFINED> instruction: 0x0001faba
   3a570:	andeq	lr, r1, r6, lsl ip
   3a574:	andeq	pc, r1, r8, ror #20
   3a578:	strdeq	r5, [r1], -lr
   3a57c:	strdeq	lr, [r1], -r6
   3a580:	andeq	pc, r1, r8, asr #20

0003a584 <flatcc_builder_table_add_union_vector@@Base>:
   3a584:	push	{r4, r5, r6, r7, fp, lr}
   3a588:	add	fp, sp, #16
   3a58c:	mov	r6, r0
   3a590:	ldr	r0, [r0, #32]
   3a594:	ldrh	r0, [r0, #14]
   3a598:	cmp	r0, #3
   3a59c:	bne	3a608 <flatcc_builder_table_add_union_vector@@Base+0x84>
   3a5a0:	mov	r5, r1
   3a5a4:	clz	r1, r3
   3a5a8:	cmp	r2, #0
   3a5ac:	mov	r0, r2
   3a5b0:	mov	r4, r3
   3a5b4:	mov	r7, r2
   3a5b8:	movwne	r0, #1
   3a5bc:	lsr	r1, r1, #5
   3a5c0:	teq	r1, r0
   3a5c4:	beq	3a628 <flatcc_builder_table_add_union_vector@@Base+0xa4>
   3a5c8:	cmp	r7, #0
   3a5cc:	beq	3a600 <flatcc_builder_table_add_union_vector@@Base+0x7c>
   3a5d0:	sub	r1, r5, #1
   3a5d4:	mov	r0, r6
   3a5d8:	bl	3a210 <flatcc_builder_table_add_offset@@Base>
   3a5dc:	cmp	r0, #0
   3a5e0:	beq	3a648 <flatcc_builder_table_add_union_vector@@Base+0xc4>
   3a5e4:	str	r7, [r0]
   3a5e8:	mov	r0, r6
   3a5ec:	mov	r1, r5
   3a5f0:	bl	3a210 <flatcc_builder_table_add_offset@@Base>
   3a5f4:	cmp	r0, #0
   3a5f8:	beq	3a668 <flatcc_builder_table_add_union_vector@@Base+0xe4>
   3a5fc:	str	r4, [r0]
   3a600:	mov	r0, #0
   3a604:	pop	{r4, r5, r6, r7, fp, pc}
   3a608:	ldr	r0, [pc, #120]	; 3a688 <flatcc_builder_table_add_union_vector@@Base+0x104>
   3a60c:	ldr	r1, [pc, #120]	; 3a68c <flatcc_builder_table_add_union_vector@@Base+0x108>
   3a610:	ldr	r3, [pc, #120]	; 3a690 <flatcc_builder_table_add_union_vector@@Base+0x10c>
   3a614:	mov	r2, #1536	; 0x600
   3a618:	add	r0, pc, r0
   3a61c:	add	r1, pc, r1
   3a620:	add	r3, pc, r3
   3a624:	bl	1497c <__assert_fail@plt>
   3a628:	ldr	r0, [pc, #100]	; 3a694 <flatcc_builder_table_add_union_vector@@Base+0x110>
   3a62c:	ldr	r1, [pc, #100]	; 3a698 <flatcc_builder_table_add_union_vector@@Base+0x114>
   3a630:	ldr	r3, [pc, #100]	; 3a69c <flatcc_builder_table_add_union_vector@@Base+0x118>
   3a634:	movw	r2, #1537	; 0x601
   3a638:	add	r0, pc, r0
   3a63c:	add	r1, pc, r1
   3a640:	add	r3, pc, r3
   3a644:	bl	1497c <__assert_fail@plt>
   3a648:	ldr	r0, [pc, #80]	; 3a6a0 <flatcc_builder_table_add_union_vector@@Base+0x11c>
   3a64c:	ldr	r1, [pc, #80]	; 3a6a4 <flatcc_builder_table_add_union_vector@@Base+0x120>
   3a650:	ldr	r3, [pc, #80]	; 3a6a8 <flatcc_builder_table_add_union_vector@@Base+0x124>
   3a654:	movw	r2, #1540	; 0x604
   3a658:	add	r0, pc, r0
   3a65c:	add	r1, pc, r1
   3a660:	add	r3, pc, r3
   3a664:	bl	1497c <__assert_fail@plt>
   3a668:	ldr	r0, [pc, #60]	; 3a6ac <flatcc_builder_table_add_union_vector@@Base+0x128>
   3a66c:	ldr	r1, [pc, #60]	; 3a6b0 <flatcc_builder_table_add_union_vector@@Base+0x12c>
   3a670:	ldr	r3, [pc, #60]	; 3a6b4 <flatcc_builder_table_add_union_vector@@Base+0x130>
   3a674:	movw	r2, #1544	; 0x608
   3a678:	add	r0, pc, r0
   3a67c:	add	r1, pc, r1
   3a680:	add	r3, pc, r3
   3a684:	bl	1497c <__assert_fail@plt>
   3a688:	andeq	pc, r1, lr, asr r3	; <UNPREDICTABLE>
   3a68c:	andeq	lr, r1, lr, lsr #22
   3a690:	ldrdeq	pc, [r1], -r8
   3a694:	andeq	pc, r1, r3, lsr #14
   3a698:	andeq	lr, r1, lr, lsl #22
   3a69c:			; <UNDEFINED> instruction: 0x0001f6b8
   3a6a0:	andeq	pc, r1, sl, lsl #13
   3a6a4:	andeq	lr, r1, lr, ror #21
   3a6a8:	muleq	r1, r8, r6
   3a6ac:	andeq	pc, r1, sl, ror #12
   3a6b0:	andeq	lr, r1, lr, asr #21
   3a6b4:	andeq	pc, r1, r8, ror r6	; <UNPREDICTABLE>

0003a6b8 <flatcc_builder_create_union_vector@@Base>:
   3a6b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a6bc:	add	fp, sp, #28
   3a6c0:	sub	sp, sp, #12
   3a6c4:	mov	r6, #0
   3a6c8:	mov	r4, r1
   3a6cc:	mov	r8, r0
   3a6d0:	mov	sl, r3
   3a6d4:	mov	r9, r2
   3a6d8:	mov	r7, #4
   3a6dc:	str	r6, [r0]
   3a6e0:	str	r6, [r0, #4]
   3a6e4:	mov	r0, r1
   3a6e8:	mov	r1, #4
   3a6ec:	bl	37a0c <flatcc_builder_start_buffer@@Base+0xc0>
   3a6f0:	cmp	r0, #0
   3a6f4:	beq	3a700 <flatcc_builder_create_union_vector@@Base+0x48>
   3a6f8:	sub	sp, fp, #28
   3a6fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a700:	ldr	r0, [r4, #32]
   3a704:	mov	r1, #5
   3a708:	str	r7, [r0, #16]
   3a70c:	ldr	r0, [r4, #32]
   3a710:	str	r6, [r0, #20]
   3a714:	ldr	r0, [r4, #32]
   3a718:	strh	r1, [r0, #14]
   3a71c:	ldr	r1, [r4, #28]
   3a720:	ldr	r2, [r4, #60]	; 0x3c
   3a724:	ldr	r3, [r4, #64]	; 0x40
   3a728:	add	r2, r2, r1
   3a72c:	sub	r1, r3, r1
   3a730:	str	r2, [r4, #16]
   3a734:	mvn	r2, #3
   3a738:	cmn	r1, #4
   3a73c:	movcs	r1, r2
   3a740:	str	r1, [r4, #24]
   3a744:	str	r2, [r0, #4]
   3a748:	ldr	r1, [r0, #20]
   3a74c:	adds	r1, r1, sl
   3a750:	cmpcc	r1, #1073741824	; 0x40000000
   3a754:	bcc	3a778 <flatcc_builder_create_union_vector@@Base+0xc0>
   3a758:	ldr	r0, [pc, #644]	; 3a9e4 <flatcc_builder_create_union_vector@@Base+0x32c>
   3a75c:	ldr	r1, [pc, #644]	; 3a9e8 <flatcc_builder_create_union_vector@@Base+0x330>
   3a760:	ldr	r3, [pc, #644]	; 3a9ec <flatcc_builder_create_union_vector@@Base+0x334>
   3a764:	mov	r2, #892	; 0x37c
   3a768:	add	r0, pc, r0
   3a76c:	add	r1, pc, r1
   3a770:	add	r3, pc, r3
   3a774:	bl	1497c <__assert_fail@plt>
   3a778:	str	r1, [r0, #20]
   3a77c:	ldr	r7, [r4, #20]
   3a780:	ldr	r0, [r4, #24]
   3a784:	add	r1, r7, sl, lsl #2
   3a788:	cmp	r1, r0
   3a78c:	str	r1, [r4, #20]
   3a790:	bcs	3a7a4 <flatcc_builder_create_union_vector@@Base+0xec>
   3a794:	ldr	r1, [r4, #16]
   3a798:	adds	r2, r1, r7
   3a79c:	bne	3a80c <flatcc_builder_create_union_vector@@Base+0x154>
   3a7a0:	b	3a6f8 <flatcc_builder_create_union_vector@@Base+0x40>
   3a7a4:	ldr	r2, [r4, #28]
   3a7a8:	ldr	r0, [r4, #40]	; 0x28
   3a7ac:	ldr	r6, [r4, #48]	; 0x30
   3a7b0:	mov	r3, #1
   3a7b4:	str	r3, [sp]
   3a7b8:	mov	r3, #1
   3a7bc:	add	r1, r1, r2
   3a7c0:	add	r2, r1, #1
   3a7c4:	add	r1, r4, #60	; 0x3c
   3a7c8:	blx	r6
   3a7cc:	cmp	r0, #0
   3a7d0:	bne	3a6f8 <flatcc_builder_create_union_vector@@Base+0x40>
   3a7d4:	ldr	r0, [r4, #28]
   3a7d8:	ldr	r1, [r4, #60]	; 0x3c
   3a7dc:	ldr	r3, [r4, #64]	; 0x40
   3a7e0:	ldr	r2, [r4, #32]
   3a7e4:	add	r1, r1, r0
   3a7e8:	sub	r0, r3, r0
   3a7ec:	mvn	r3, #3
   3a7f0:	cmn	r0, #4
   3a7f4:	str	r1, [r4, #16]
   3a7f8:	movcs	r0, r3
   3a7fc:	str	r0, [r4, #24]
   3a800:	str	r3, [r2, #4]
   3a804:	adds	r2, r1, r7
   3a808:	beq	3a6f8 <flatcc_builder_create_union_vector@@Base+0x40>
   3a80c:	ldr	r7, [r4, #20]
   3a810:	add	r2, r7, sl
   3a814:	cmp	r2, r0
   3a818:	str	r2, [r4, #20]
   3a81c:	bcc	3a880 <flatcc_builder_create_union_vector@@Base+0x1c8>
   3a820:	ldr	r1, [r4, #28]
   3a824:	ldr	r0, [r4, #40]	; 0x28
   3a828:	ldr	r6, [r4, #48]	; 0x30
   3a82c:	mov	r3, #1
   3a830:	str	r3, [sp]
   3a834:	mov	r3, #1
   3a838:	add	r1, r2, r1
   3a83c:	add	r2, r1, #1
   3a840:	add	r1, r4, #60	; 0x3c
   3a844:	blx	r6
   3a848:	cmp	r0, #0
   3a84c:	bne	3a6f8 <flatcc_builder_create_union_vector@@Base+0x40>
   3a850:	ldr	r0, [r4, #28]
   3a854:	ldr	r1, [r4, #60]	; 0x3c
   3a858:	ldr	r3, [r4, #64]	; 0x40
   3a85c:	ldr	r2, [r4, #32]
   3a860:	add	r1, r1, r0
   3a864:	sub	r0, r3, r0
   3a868:	mvn	r3, #3
   3a86c:	cmn	r0, #4
   3a870:	str	r1, [r4, #16]
   3a874:	movcs	r0, r3
   3a878:	str	r0, [r4, #24]
   3a87c:	str	r3, [r2, #4]
   3a880:	adds	r5, r1, r7
   3a884:	beq	3a6f8 <flatcc_builder_create_union_vector@@Base+0x40>
   3a888:	cmp	sl, #0
   3a88c:	beq	3a914 <flatcc_builder_create_union_vector@@Base+0x25c>
   3a890:	and	ip, sl, #1
   3a894:	mov	r0, #0
   3a898:	cmp	sl, #1
   3a89c:	str	r5, [sp, #8]
   3a8a0:	beq	3a8f8 <flatcc_builder_create_union_vector@@Base+0x240>
   3a8a4:	ldr	r0, [sp, #8]
   3a8a8:	sub	lr, sl, ip
   3a8ac:	add	r2, r1, #4
   3a8b0:	add	r6, r9, #8
   3a8b4:	add	r7, r0, #1
   3a8b8:	mov	r0, #0
   3a8bc:	ldrb	r3, [r6, #-8]
   3a8c0:	add	r5, r7, r0
   3a8c4:	strb	r3, [r5, #-1]
   3a8c8:	add	r3, r9, r0, lsl #3
   3a8cc:	ldr	r5, [r3, #4]
   3a8d0:	str	r5, [r2, #-4]
   3a8d4:	ldrb	r5, [r6]
   3a8d8:	add	r6, r6, #16
   3a8dc:	strb	r5, [r7, r0]
   3a8e0:	add	r0, r0, #2
   3a8e4:	ldr	r3, [r3, #12]
   3a8e8:	cmp	lr, r0
   3a8ec:	str	r3, [r2]
   3a8f0:	add	r2, r2, #8
   3a8f4:	bne	3a8bc <flatcc_builder_create_union_vector@@Base+0x204>
   3a8f8:	ldr	r5, [sp, #8]
   3a8fc:	cmp	ip, #0
   3a900:	beq	3a914 <flatcc_builder_create_union_vector@@Base+0x25c>
   3a904:	ldrb	r2, [r9, r0, lsl #3]!
   3a908:	strb	r2, [r5, r0]
   3a90c:	ldr	r2, [r9, #4]
   3a910:	str	r2, [r1, r0, lsl #2]
   3a914:	mov	r0, r4
   3a918:	mov	r2, sl
   3a91c:	mov	r3, r5
   3a920:	bl	39da8 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   3a924:	mov	r7, r0
   3a928:	mov	r6, #0
   3a92c:	cmp	r0, #0
   3a930:	beq	3a95c <flatcc_builder_create_union_vector@@Base+0x2a4>
   3a934:	mvn	r0, #0
   3a938:	mov	r1, #1
   3a93c:	mov	r2, sl
   3a940:	mov	r3, #1
   3a944:	str	r1, [sp]
   3a948:	str	r0, [sp, #4]
   3a94c:	mov	r0, r4
   3a950:	mov	r1, r5
   3a954:	bl	39b14 <flatcc_builder_create_vector@@Base>
   3a958:	b	3a960 <flatcc_builder_create_union_vector@@Base+0x2a8>
   3a95c:	mov	r0, #0
   3a960:	orr	r1, r6, r7
   3a964:	stm	r8, {r0, r1}
   3a968:	mov	r1, #0
   3a96c:	ldr	r0, [r4, #16]
   3a970:	ldr	r2, [r4, #20]
   3a974:	bl	148d4 <memset@plt>
   3a978:	ldr	r0, [r4, #32]
   3a97c:	ldr	r1, [r4, #60]	; 0x3c
   3a980:	ldr	r2, [r4, #64]	; 0x40
   3a984:	ldr	r3, [r0, #8]
   3a988:	str	r3, [r4, #20]
   3a98c:	ldr	r3, [r0]
   3a990:	str	r3, [r4, #28]
   3a994:	add	r1, r1, r3
   3a998:	ldr	r7, [r0, #4]
   3a99c:	str	r1, [r4, #16]
   3a9a0:	sub	r1, r2, r3
   3a9a4:	cmp	r1, r7
   3a9a8:	movhi	r1, r7
   3a9ac:	str	r1, [r4, #24]
   3a9b0:	ldrh	r1, [r4, #130]	; 0x82
   3a9b4:	ldrh	r2, [r4, #128]	; 0x80
   3a9b8:	cmp	r2, r1
   3a9bc:	strhcc	r1, [r4, #128]	; 0x80
   3a9c0:	ldrh	r1, [r0, #12]
   3a9c4:	sub	r0, r0, #36	; 0x24
   3a9c8:	str	r0, [r4, #32]
   3a9cc:	strh	r1, [r4, #130]	; 0x82
   3a9d0:	ldr	r0, [r4, #156]	; 0x9c
   3a9d4:	sub	r0, r0, #1
   3a9d8:	str	r0, [r4, #156]	; 0x9c
   3a9dc:	sub	sp, fp, #28
   3a9e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a9e4:	andeq	pc, r1, r8, lsr #21
   3a9e8:	ldrdeq	lr, [r1], -lr	; <UNPREDICTABLE>
   3a9ec:			; <UNDEFINED> instruction: 0x0001fabb

0003a9f0 <flatcc_builder_create_union_vector_direct@@Base>:
   3a9f0:	push	{r4, r5, r6, r7, fp, lr}
   3a9f4:	add	fp, sp, #16
   3a9f8:	sub	sp, sp, #8
   3a9fc:	ldr	r7, [fp, #8]
   3aa00:	mov	r5, r2
   3aa04:	mov	r4, r0
   3aa08:	mov	r0, #0
   3aa0c:	mov	r6, r1
   3aa10:	str	r0, [r4]
   3aa14:	str	r0, [r4, #4]
   3aa18:	mov	r0, r1
   3aa1c:	mov	r1, r3
   3aa20:	mov	r3, r5
   3aa24:	mov	r2, r7
   3aa28:	bl	39da8 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   3aa2c:	cmp	r0, #0
   3aa30:	str	r0, [r4, #4]
   3aa34:	beq	3aa60 <flatcc_builder_create_union_vector_direct@@Base+0x70>
   3aa38:	mvn	r0, #0
   3aa3c:	mov	r1, #1
   3aa40:	mov	r2, r7
   3aa44:	mov	r3, #1
   3aa48:	str	r1, [sp]
   3aa4c:	str	r0, [sp, #4]
   3aa50:	mov	r0, r6
   3aa54:	mov	r1, r5
   3aa58:	bl	39b14 <flatcc_builder_create_vector@@Base>
   3aa5c:	str	r0, [r4]
   3aa60:	sub	sp, fp, #16
   3aa64:	pop	{r4, r5, r6, r7, fp, pc}

0003aa68 <flatcc_builder_start_union_vector@@Base>:
   3aa68:	push	{r4, sl, fp, lr}
   3aa6c:	add	fp, sp, #8
   3aa70:	mov	r1, #4
   3aa74:	mov	r4, r0
   3aa78:	bl	37a0c <flatcc_builder_start_buffer@@Base+0xc0>
   3aa7c:	mov	r1, r0
   3aa80:	mvn	r0, #0
   3aa84:	cmp	r1, #0
   3aa88:	popne	{r4, sl, fp, pc}
   3aa8c:	ldr	r0, [r4, #32]
   3aa90:	mov	r1, #8
   3aa94:	mov	r2, #7
   3aa98:	str	r1, [r0, #16]
   3aa9c:	mov	r0, #0
   3aaa0:	ldr	r1, [r4, #32]
   3aaa4:	str	r0, [r1, #20]
   3aaa8:	ldr	r1, [r4, #32]
   3aaac:	strh	r2, [r1, #14]
   3aab0:	ldr	r2, [r4, #28]
   3aab4:	ldr	r3, [r4, #60]	; 0x3c
   3aab8:	ldr	ip, [r4, #64]	; 0x40
   3aabc:	add	r3, r3, r2
   3aac0:	sub	r2, ip, r2
   3aac4:	str	r3, [r4, #16]
   3aac8:	mvn	r3, #3
   3aacc:	cmn	r2, #4
   3aad0:	movcs	r2, r3
   3aad4:	str	r2, [r4, #24]
   3aad8:	str	r3, [r1, #4]
   3aadc:	pop	{r4, sl, fp, pc}

0003aae0 <flatcc_builder_end_union_vector@@Base>:
   3aae0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3aae4:	add	fp, sp, #28
   3aae8:	sub	sp, sp, #20
   3aaec:	mov	r4, r0
   3aaf0:	mov	r0, #0
   3aaf4:	mov	r8, r1
   3aaf8:	str	r0, [r4]
   3aafc:	str	r0, [r4, #4]
   3ab00:	ldr	r0, [r1, #32]
   3ab04:	ldrh	r1, [r0, #14]
   3ab08:	cmp	r1, #7
   3ab0c:	bne	3ad10 <flatcc_builder_end_union_vector@@Base+0x230>
   3ab10:	ldr	r9, [r0, #20]
   3ab14:	ldr	r5, [r8, #20]
   3ab18:	ldr	r2, [r8, #24]
   3ab1c:	add	r0, r9, r9, lsl #2
   3ab20:	add	r1, r5, r0
   3ab24:	cmp	r1, r2
   3ab28:	str	r1, [r8, #20]
   3ab2c:	bcs	3ab40 <flatcc_builder_end_union_vector@@Base+0x60>
   3ab30:	ldr	r0, [r8, #16]
   3ab34:	adds	r1, r0, r5
   3ab38:	bne	3aba8 <flatcc_builder_end_union_vector@@Base+0xc8>
   3ab3c:	b	3ad08 <flatcc_builder_end_union_vector@@Base+0x228>
   3ab40:	ldr	r2, [r8, #28]
   3ab44:	ldr	r0, [r8, #40]	; 0x28
   3ab48:	ldr	r7, [r8, #48]	; 0x30
   3ab4c:	mov	r3, #1
   3ab50:	str	r3, [sp]
   3ab54:	mov	r3, #1
   3ab58:	add	r1, r1, r2
   3ab5c:	add	r2, r1, #1
   3ab60:	add	r1, r8, #60	; 0x3c
   3ab64:	blx	r7
   3ab68:	cmp	r0, #0
   3ab6c:	bne	3ad08 <flatcc_builder_end_union_vector@@Base+0x228>
   3ab70:	ldr	r1, [r8, #28]
   3ab74:	ldr	r0, [r8, #60]	; 0x3c
   3ab78:	ldr	r3, [r8, #64]	; 0x40
   3ab7c:	ldr	r2, [r8, #32]
   3ab80:	add	r0, r0, r1
   3ab84:	sub	r1, r3, r1
   3ab88:	mvn	r3, #3
   3ab8c:	cmn	r1, #4
   3ab90:	str	r0, [r8, #16]
   3ab94:	movcs	r1, r3
   3ab98:	str	r1, [r8, #24]
   3ab9c:	str	r3, [r2, #4]
   3aba0:	adds	r1, r0, r5
   3aba4:	beq	3ad08 <flatcc_builder_end_union_vector@@Base+0x228>
   3aba8:	add	sl, r1, r9, lsl #2
   3abac:	cmp	r9, #0
   3abb0:	beq	3ac40 <flatcc_builder_end_union_vector@@Base+0x160>
   3abb4:	and	r2, r9, #1
   3abb8:	cmp	r9, #1
   3abbc:	str	r4, [sp, #12]
   3abc0:	str	r2, [sp, #16]
   3abc4:	mov	r2, #0
   3abc8:	beq	3ac20 <flatcc_builder_end_union_vector@@Base+0x140>
   3abcc:	ldr	r2, [sp, #16]
   3abd0:	add	r5, r5, #4
   3abd4:	add	r6, r0, #8
   3abd8:	sub	lr, r9, r2
   3abdc:	mov	r2, #0
   3abe0:	ldrb	r7, [r6, #-8]
   3abe4:	mov	r4, sl
   3abe8:	add	r3, r0, r2, lsl #3
   3abec:	strb	r7, [r4, r2]!
   3abf0:	add	r7, r0, r5
   3abf4:	add	r2, r2, #2
   3abf8:	ldr	ip, [r3, #4]
   3abfc:	cmp	lr, r2
   3ac00:	str	ip, [r7, #-4]
   3ac04:	ldrb	r7, [r6]
   3ac08:	add	r6, r6, #16
   3ac0c:	strb	r7, [r4, #1]
   3ac10:	ldr	r3, [r3, #12]
   3ac14:	str	r3, [r0, r5]
   3ac18:	add	r5, r5, #8
   3ac1c:	bne	3abe0 <flatcc_builder_end_union_vector@@Base+0x100>
   3ac20:	ldr	r3, [sp, #16]
   3ac24:	ldr	r4, [sp, #12]
   3ac28:	cmp	r3, #0
   3ac2c:	beq	3ac40 <flatcc_builder_end_union_vector@@Base+0x160>
   3ac30:	ldrb	r3, [r0, r2, lsl #3]!
   3ac34:	strb	r3, [sl, r2]
   3ac38:	ldr	r0, [r0, #4]
   3ac3c:	str	r0, [r1, r2, lsl #2]
   3ac40:	mov	r0, r8
   3ac44:	mov	r2, r9
   3ac48:	mov	r3, sl
   3ac4c:	bl	39da8 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   3ac50:	mov	r5, r0
   3ac54:	mov	r6, #0
   3ac58:	cmp	r0, #0
   3ac5c:	beq	3ac88 <flatcc_builder_end_union_vector@@Base+0x1a8>
   3ac60:	mvn	r0, #0
   3ac64:	mov	r1, #1
   3ac68:	mov	r2, r9
   3ac6c:	mov	r3, #1
   3ac70:	str	r1, [sp]
   3ac74:	str	r0, [sp, #4]
   3ac78:	mov	r0, r8
   3ac7c:	mov	r1, sl
   3ac80:	bl	39b14 <flatcc_builder_create_vector@@Base>
   3ac84:	b	3ac8c <flatcc_builder_end_union_vector@@Base+0x1ac>
   3ac88:	mov	r0, #0
   3ac8c:	orr	r1, r6, r5
   3ac90:	stm	r4, {r0, r1}
   3ac94:	mov	r1, #0
   3ac98:	ldr	r0, [r8, #16]
   3ac9c:	ldr	r2, [r8, #20]
   3aca0:	bl	148d4 <memset@plt>
   3aca4:	ldr	r0, [r8, #32]
   3aca8:	ldr	r1, [r8, #60]	; 0x3c
   3acac:	ldr	r2, [r8, #64]	; 0x40
   3acb0:	ldr	r3, [r0, #8]
   3acb4:	str	r3, [r8, #20]
   3acb8:	ldr	r3, [r0]
   3acbc:	str	r3, [r8, #28]
   3acc0:	add	r1, r1, r3
   3acc4:	ldr	r7, [r0, #4]
   3acc8:	str	r1, [r8, #16]
   3accc:	sub	r1, r2, r3
   3acd0:	cmp	r1, r7
   3acd4:	movhi	r1, r7
   3acd8:	str	r1, [r8, #24]
   3acdc:	ldrh	r1, [r8, #130]	; 0x82
   3ace0:	ldrh	r2, [r8, #128]	; 0x80
   3ace4:	cmp	r2, r1
   3ace8:	strhcc	r1, [r8, #128]	; 0x80
   3acec:	ldrh	r1, [r0, #12]
   3acf0:	sub	r0, r0, #36	; 0x24
   3acf4:	str	r0, [r8, #32]
   3acf8:	strh	r1, [r8, #130]	; 0x82
   3acfc:	ldr	r0, [r8, #156]	; 0x9c
   3ad00:	sub	r0, r0, #1
   3ad04:	str	r0, [r8, #156]	; 0x9c
   3ad08:	sub	sp, fp, #28
   3ad0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3ad10:	ldr	r0, [pc, #24]	; 3ad30 <flatcc_builder_end_union_vector@@Base+0x250>
   3ad14:	ldr	r1, [pc, #24]	; 3ad34 <flatcc_builder_end_union_vector@@Base+0x254>
   3ad18:	ldr	r3, [pc, #24]	; 3ad38 <flatcc_builder_end_union_vector@@Base+0x258>
   3ad1c:	movw	r2, #1617	; 0x651
   3ad20:	add	r0, pc, r0
   3ad24:	add	r1, pc, r1
   3ad28:	add	r3, pc, r3
   3ad2c:	bl	1497c <__assert_fail@plt>
   3ad30:	andeq	pc, r1, r3, rrx
   3ad34:	andeq	lr, r1, r6, lsr #8
   3ad38:	andeq	pc, r1, sp, lsl #1

0003ad3c <flatcc_builder_union_vector_count@@Base>:
   3ad3c:	ldr	r0, [r0, #32]
   3ad40:	ldr	r0, [r0, #20]
   3ad44:	bx	lr

0003ad48 <flatcc_builder_union_vector_edit@@Base>:
   3ad48:	ldr	r0, [r0, #16]
   3ad4c:	bx	lr

0003ad50 <flatcc_builder_extend_union_vector@@Base>:
   3ad50:	push	{r4, r5, fp, lr}
   3ad54:	add	fp, sp, #8
   3ad58:	sub	sp, sp, #8
   3ad5c:	mov	r4, r0
   3ad60:	ldr	r0, [r0, #32]
   3ad64:	ldr	r2, [r0, #20]
   3ad68:	adds	r2, r2, r1
   3ad6c:	cmpcc	r2, #536870912	; 0x20000000
   3ad70:	bcc	3ad94 <flatcc_builder_extend_union_vector@@Base+0x44>
   3ad74:	ldr	r0, [pc, #184]	; 3ae34 <flatcc_builder_extend_union_vector@@Base+0xe4>
   3ad78:	ldr	r1, [pc, #184]	; 3ae38 <flatcc_builder_extend_union_vector@@Base+0xe8>
   3ad7c:	ldr	r3, [pc, #184]	; 3ae3c <flatcc_builder_extend_union_vector@@Base+0xec>
   3ad80:	mov	r2, #892	; 0x37c
   3ad84:	add	r0, pc, r0
   3ad88:	add	r1, pc, r1
   3ad8c:	add	r3, pc, r3
   3ad90:	bl	1497c <__assert_fail@plt>
   3ad94:	str	r2, [r0, #20]
   3ad98:	ldr	r5, [r4, #20]
   3ad9c:	ldr	r0, [r4, #24]
   3ada0:	add	r1, r5, r1, lsl #3
   3ada4:	cmp	r1, r0
   3ada8:	str	r1, [r4, #20]
   3adac:	bcs	3adb8 <flatcc_builder_extend_union_vector@@Base+0x68>
   3adb0:	ldr	r0, [r4, #16]
   3adb4:	b	3ae28 <flatcc_builder_extend_union_vector@@Base+0xd8>
   3adb8:	ldr	r2, [r4, #28]
   3adbc:	ldr	r0, [r4, #40]	; 0x28
   3adc0:	ldr	ip, [r4, #48]	; 0x30
   3adc4:	mov	r3, #1
   3adc8:	str	r3, [sp]
   3adcc:	mov	r3, #1
   3add0:	add	r1, r1, r2
   3add4:	add	r2, r1, #1
   3add8:	add	r1, r4, #60	; 0x3c
   3addc:	blx	ip
   3ade0:	mov	r1, r0
   3ade4:	mov	r0, #0
   3ade8:	cmp	r1, #0
   3adec:	beq	3adf8 <flatcc_builder_extend_union_vector@@Base+0xa8>
   3adf0:	sub	sp, fp, #8
   3adf4:	pop	{r4, r5, fp, pc}
   3adf8:	ldr	r1, [r4, #28]
   3adfc:	ldr	r0, [r4, #60]	; 0x3c
   3ae00:	ldr	r3, [r4, #64]	; 0x40
   3ae04:	ldr	r2, [r4, #32]
   3ae08:	add	r0, r0, r1
   3ae0c:	sub	r1, r3, r1
   3ae10:	mvn	r3, #3
   3ae14:	cmn	r1, #4
   3ae18:	str	r0, [r4, #16]
   3ae1c:	movcs	r1, r3
   3ae20:	str	r1, [r4, #24]
   3ae24:	str	r3, [r2, #4]
   3ae28:	add	r0, r0, r5
   3ae2c:	sub	sp, fp, #8
   3ae30:	pop	{r4, r5, fp, pc}
   3ae34:	andeq	pc, r1, ip, lsl #9
   3ae38:	andeq	lr, r1, r2, asr #7
   3ae3c:	muleq	r1, pc, r4	; <UNPREDICTABLE>

0003ae40 <flatcc_builder_truncate_union_vector@@Base>:
   3ae40:	push	{fp, lr}
   3ae44:	mov	fp, sp
   3ae48:	ldr	r2, [r0, #32]
   3ae4c:	ldrh	r3, [r2, #14]
   3ae50:	cmp	r3, #7
   3ae54:	bne	3ae9c <flatcc_builder_truncate_union_vector@@Base+0x5c>
   3ae58:	ldr	r3, [r2, #20]
   3ae5c:	cmp	r3, r1
   3ae60:	bcc	3aebc <flatcc_builder_truncate_union_vector@@Base+0x7c>
   3ae64:	sub	r3, r3, r1
   3ae68:	str	r3, [r2, #20]
   3ae6c:	ldr	r2, [r0, #32]
   3ae70:	ldr	r3, [r0, #20]
   3ae74:	ldr	ip, [r0, #16]
   3ae78:	ldr	r2, [r2, #16]
   3ae7c:	mls	r3, r2, r1, r3
   3ae80:	mul	r2, r2, r1
   3ae84:	mov	r1, #0
   3ae88:	str	r3, [r0, #20]
   3ae8c:	add	r0, ip, r3
   3ae90:	bl	148d4 <memset@plt>
   3ae94:	mov	r0, #0
   3ae98:	pop	{fp, pc}
   3ae9c:	ldr	r0, [pc, #56]	; 3aedc <flatcc_builder_truncate_union_vector@@Base+0x9c>
   3aea0:	ldr	r1, [pc, #56]	; 3aee0 <flatcc_builder_truncate_union_vector@@Base+0xa0>
   3aea4:	ldr	r3, [pc, #56]	; 3aee4 <flatcc_builder_truncate_union_vector@@Base+0xa4>
   3aea8:	movw	r2, #1665	; 0x681
   3aeac:	add	r0, pc, r0
   3aeb0:	add	r1, pc, r1
   3aeb4:	add	r3, pc, r3
   3aeb8:	bl	1497c <__assert_fail@plt>
   3aebc:	ldr	r0, [pc, #36]	; 3aee8 <flatcc_builder_truncate_union_vector@@Base+0xa8>
   3aec0:	ldr	r1, [pc, #36]	; 3aeec <flatcc_builder_truncate_union_vector@@Base+0xac>
   3aec4:	ldr	r3, [pc, #36]	; 3aef0 <flatcc_builder_truncate_union_vector@@Base+0xb0>
   3aec8:	movw	r2, #1666	; 0x682
   3aecc:	add	r0, pc, r0
   3aed0:	add	r1, pc, r1
   3aed4:	add	r3, pc, r3
   3aed8:	bl	1497c <__assert_fail@plt>
   3aedc:	ldrdeq	lr, [r1], -r7
   3aee0:	muleq	r1, sl, r2
   3aee4:	andeq	lr, r1, r4, asr pc
   3aee8:	andeq	lr, r1, fp, lsl r9
   3aeec:	andeq	lr, r1, sl, ror r2
   3aef0:	andeq	lr, r1, r4, lsr pc

0003aef4 <flatcc_builder_union_vector_push@@Base>:
   3aef4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3aef8:	add	fp, sp, #24
   3aefc:	sub	sp, sp, #8
   3af00:	mov	r7, r0
   3af04:	ldr	r0, [r0, #32]
   3af08:	mov	r9, r1
   3af0c:	ldrh	r1, [r0, #14]
   3af10:	cmp	r1, #7
   3af14:	bne	3afd0 <flatcc_builder_union_vector_push@@Base+0xdc>
   3af18:	ldr	r1, [r0, #20]
   3af1c:	mov	r6, #0
   3af20:	cmn	r1, #-536870911	; 0xe0000001
   3af24:	beq	3afc4 <flatcc_builder_union_vector_push@@Base+0xd0>
   3af28:	add	r1, r1, #1
   3af2c:	mov	r8, r2
   3af30:	str	r1, [r0, #20]
   3af34:	ldr	r4, [r7, #20]
   3af38:	ldr	r0, [r7, #24]
   3af3c:	add	r1, r4, #8
   3af40:	cmp	r1, r0
   3af44:	str	r1, [r7, #20]
   3af48:	bcs	3af54 <flatcc_builder_union_vector_push@@Base+0x60>
   3af4c:	ldr	r0, [r7, #16]
   3af50:	b	3afb4 <flatcc_builder_union_vector_push@@Base+0xc0>
   3af54:	ldr	r1, [r7, #28]
   3af58:	ldr	r0, [r7, #40]	; 0x28
   3af5c:	ldr	r5, [r7, #48]	; 0x30
   3af60:	mov	r2, #1
   3af64:	mov	r3, #1
   3af68:	str	r2, [sp]
   3af6c:	add	r1, r4, r1
   3af70:	add	r2, r1, #9
   3af74:	add	r1, r7, #60	; 0x3c
   3af78:	blx	r5
   3af7c:	cmp	r0, #0
   3af80:	bne	3afc4 <flatcc_builder_union_vector_push@@Base+0xd0>
   3af84:	ldr	r1, [r7, #28]
   3af88:	ldr	r0, [r7, #60]	; 0x3c
   3af8c:	ldr	r3, [r7, #64]	; 0x40
   3af90:	ldr	r2, [r7, #32]
   3af94:	add	r0, r0, r1
   3af98:	sub	r1, r3, r1
   3af9c:	mvn	r3, #3
   3afa0:	cmn	r1, #4
   3afa4:	str	r0, [r7, #16]
   3afa8:	movcs	r1, r3
   3afac:	str	r1, [r7, #24]
   3afb0:	str	r3, [r2, #4]
   3afb4:	adds	r0, r0, r4
   3afb8:	movne	r6, r0
   3afbc:	strne	r9, [r0]
   3afc0:	strne	r8, [r0, #4]
   3afc4:	mov	r0, r6
   3afc8:	sub	sp, fp, #24
   3afcc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3afd0:	ldr	r0, [pc, #24]	; 3aff0 <flatcc_builder_union_vector_push@@Base+0xfc>
   3afd4:	ldr	r1, [pc, #24]	; 3aff4 <flatcc_builder_union_vector_push@@Base+0x100>
   3afd8:	ldr	r3, [pc, #24]	; 3aff8 <flatcc_builder_union_vector_push@@Base+0x104>
   3afdc:	movw	r2, #1677	; 0x68d
   3afe0:	add	r0, pc, r0
   3afe4:	add	r1, pc, r1
   3afe8:	add	r3, pc, r3
   3afec:	bl	1497c <__assert_fail@plt>
   3aff0:	andeq	lr, r1, r3, lsr #27
   3aff4:	andeq	lr, r1, r6, ror #2
   3aff8:	andeq	lr, r1, r5, ror #28

0003affc <flatcc_builder_append_union_vector@@Base>:
   3affc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3b000:	add	fp, sp, #24
   3b004:	sub	sp, sp, #8
   3b008:	mov	r6, r0
   3b00c:	ldr	r0, [r0, #32]
   3b010:	mov	r8, r1
   3b014:	ldrh	r1, [r0, #14]
   3b018:	cmp	r1, #7
   3b01c:	bne	3b10c <flatcc_builder_append_union_vector@@Base+0x110>
   3b020:	ldr	r1, [r0, #20]
   3b024:	mov	r5, r2
   3b028:	adds	r1, r1, r2
   3b02c:	cmpcc	r1, #536870912	; 0x20000000
   3b030:	bcc	3b054 <flatcc_builder_append_union_vector@@Base+0x58>
   3b034:	ldr	r0, [pc, #252]	; 3b138 <flatcc_builder_append_union_vector@@Base+0x13c>
   3b038:	ldr	r1, [pc, #252]	; 3b13c <flatcc_builder_append_union_vector@@Base+0x140>
   3b03c:	ldr	r3, [pc, #252]	; 3b140 <flatcc_builder_append_union_vector@@Base+0x144>
   3b040:	mov	r2, #892	; 0x37c
   3b044:	add	r0, pc, r0
   3b048:	add	r1, pc, r1
   3b04c:	add	r3, pc, r3
   3b050:	bl	1497c <__assert_fail@plt>
   3b054:	str	r1, [r0, #20]
   3b058:	ldr	r4, [r6, #20]
   3b05c:	ldr	r0, [r6, #24]
   3b060:	add	r1, r4, r5, lsl #3
   3b064:	cmp	r1, r0
   3b068:	str	r1, [r6, #20]
   3b06c:	bcs	3b090 <flatcc_builder_append_union_vector@@Base+0x94>
   3b070:	ldr	r0, [r6, #16]
   3b074:	adds	r7, r0, r4
   3b078:	beq	3b0fc <flatcc_builder_append_union_vector@@Base+0x100>
   3b07c:	lsl	r2, r5, #3
   3b080:	mov	r0, r7
   3b084:	mov	r1, r8
   3b088:	bl	14808 <memcpy@plt>
   3b08c:	b	3b100 <flatcc_builder_append_union_vector@@Base+0x104>
   3b090:	ldr	r2, [r6, #28]
   3b094:	ldr	r0, [r6, #40]	; 0x28
   3b098:	ldr	r7, [r6, #48]	; 0x30
   3b09c:	mov	r3, #1
   3b0a0:	str	r3, [sp]
   3b0a4:	mov	r3, #1
   3b0a8:	add	r1, r1, r2
   3b0ac:	add	r2, r1, #1
   3b0b0:	add	r1, r6, #60	; 0x3c
   3b0b4:	blx	r7
   3b0b8:	mov	r7, #0
   3b0bc:	cmp	r0, #0
   3b0c0:	bne	3b100 <flatcc_builder_append_union_vector@@Base+0x104>
   3b0c4:	ldr	r1, [r6, #28]
   3b0c8:	ldr	r0, [r6, #60]	; 0x3c
   3b0cc:	ldr	r3, [r6, #64]	; 0x40
   3b0d0:	ldr	r2, [r6, #32]
   3b0d4:	add	r0, r0, r1
   3b0d8:	sub	r1, r3, r1
   3b0dc:	mvn	r3, #3
   3b0e0:	cmn	r1, #4
   3b0e4:	str	r0, [r6, #16]
   3b0e8:	movcs	r1, r3
   3b0ec:	str	r1, [r6, #24]
   3b0f0:	str	r3, [r2, #4]
   3b0f4:	adds	r7, r0, r4
   3b0f8:	bne	3b07c <flatcc_builder_append_union_vector@@Base+0x80>
   3b0fc:	mov	r7, #0
   3b100:	mov	r0, r7
   3b104:	sub	sp, fp, #24
   3b108:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3b10c:	ldr	r0, [pc, #24]	; 3b12c <flatcc_builder_append_union_vector@@Base+0x130>
   3b110:	ldr	r1, [pc, #24]	; 3b130 <flatcc_builder_append_union_vector@@Base+0x134>
   3b114:	ldr	r3, [pc, #24]	; 3b134 <flatcc_builder_append_union_vector@@Base+0x138>
   3b118:	movw	r2, #1692	; 0x69c
   3b11c:	add	r0, pc, r0
   3b120:	add	r1, pc, r1
   3b124:	add	r3, pc, r3
   3b128:	bl	1497c <__assert_fail@plt>
   3b12c:	andeq	lr, r1, r7, ror #24
   3b130:	andeq	lr, r1, sl, lsr #32
   3b134:	muleq	r1, r6, sp
   3b138:	andeq	pc, r1, ip, asr #3
   3b13c:	andeq	lr, r1, r2, lsl #2
   3b140:	ldrdeq	pc, [r1], -pc	; <UNPREDICTABLE>

0003b144 <flatcc_builder_create_string@@Base>:
   3b144:	push	{r4, r5, r6, sl, fp, lr}
   3b148:	add	fp, sp, #16
   3b14c:	sub	sp, sp, #80	; 0x50
   3b150:	str	r2, [fp, #-20]	; 0xffffffec
   3b154:	mvn	r5, r2
   3b158:	mov	r6, r0
   3b15c:	sub	r3, fp, #20
   3b160:	cmp	r2, #0
   3b164:	add	lr, sp, #4
   3b168:	ldr	ip, [r0, #136]	; 0x88
   3b16c:	mov	r0, #4
   3b170:	str	r0, [sp, #16]
   3b174:	str	r3, [sp, #12]
   3b178:	str	r0, [sp, #4]
   3b17c:	mov	r3, #1
   3b180:	addne	r0, r2, #4
   3b184:	str	r3, [sp, #8]
   3b188:	strne	r2, [sp, #24]
   3b18c:	strne	r1, [sp, #20]
   3b190:	movne	r3, #2
   3b194:	strne	r3, [sp, #8]
   3b198:	strne	r0, [sp, #4]
   3b19c:	add	r5, ip, r5
   3b1a0:	and	r5, r5, #3
   3b1a4:	add	r5, r5, #1
   3b1a8:	add	r1, r0, r5
   3b1ac:	add	r0, lr, r3, lsl #3
   3b1b0:	str	r1, [sp, #4]
   3b1b4:	cmp	r1, #0
   3b1b8:	ldr	r2, [pc, #132]	; 3b244 <flatcc_builder_create_string@@Base+0x100>
   3b1bc:	ldr	r2, [pc, r2]
   3b1c0:	str	r2, [r0, #8]
   3b1c4:	add	r2, r3, #1
   3b1c8:	str	r5, [r0, #12]
   3b1cc:	str	r2, [sp, #8]
   3b1d0:	ble	3b224 <flatcc_builder_create_string@@Base+0xe0>
   3b1d4:	ldr	r0, [r6, #36]	; 0x24
   3b1d8:	ldr	r4, [r6, #44]	; 0x2c
   3b1dc:	sub	r5, ip, r1
   3b1e0:	str	r1, [sp]
   3b1e4:	add	r1, lr, #8
   3b1e8:	mov	r3, r5
   3b1ec:	blx	r4
   3b1f0:	cmp	r0, #0
   3b1f4:	streq	r5, [r6, #136]	; 0x88
   3b1f8:	moveq	r0, r5
   3b1fc:	subeq	sp, fp, #16
   3b200:	popeq	{r4, r5, r6, sl, fp, pc}
   3b204:	ldr	r0, [pc, #72]	; 3b254 <flatcc_builder_create_string@@Base+0x110>
   3b208:	ldr	r1, [pc, #72]	; 3b258 <flatcc_builder_create_string@@Base+0x114>
   3b20c:	ldr	r3, [pc, #72]	; 3b25c <flatcc_builder_create_string@@Base+0x118>
   3b210:	movw	r2, #651	; 0x28b
   3b214:	add	r0, pc, r0
   3b218:	add	r1, pc, r1
   3b21c:	add	r3, pc, r3
   3b220:	bl	1497c <__assert_fail@plt>
   3b224:	ldr	r0, [pc, #28]	; 3b248 <flatcc_builder_create_string@@Base+0x104>
   3b228:	ldr	r1, [pc, #28]	; 3b24c <flatcc_builder_create_string@@Base+0x108>
   3b22c:	ldr	r3, [pc, #28]	; 3b250 <flatcc_builder_create_string@@Base+0x10c>
   3b230:	movw	r2, #647	; 0x287
   3b234:	add	r0, pc, r0
   3b238:	add	r1, pc, r1
   3b23c:	add	r3, pc, r3
   3b240:	bl	1497c <__assert_fail@plt>
   3b244:	ldrdeq	pc, [r2], -ip
   3b248:	andeq	r5, r1, sl, lsl r2
   3b24c:	andeq	sp, r1, r2, lsl pc
   3b250:	andeq	lr, r1, sl, lsl #31
   3b254:	andeq	r5, r1, sl, lsr r2
   3b258:	andeq	sp, r1, r2, lsr pc
   3b25c:	andeq	lr, r1, sl, lsr #31

0003b260 <flatcc_builder_create_string_str@@Base>:
   3b260:	push	{r4, r5, fp, lr}
   3b264:	add	fp, sp, #8
   3b268:	mov	r5, r0
   3b26c:	mov	r0, r1
   3b270:	mov	r4, r1
   3b274:	bl	148b0 <strlen@plt>
   3b278:	mov	r2, r0
   3b27c:	mov	r0, r5
   3b280:	mov	r1, r4
   3b284:	pop	{r4, r5, fp, lr}
   3b288:	b	3b144 <flatcc_builder_create_string@@Base>

0003b28c <flatcc_builder_create_string_strn@@Base>:
   3b28c:	push	{r4, r5, r6, sl, fp, lr}
   3b290:	add	fp, sp, #16
   3b294:	mov	r6, r0
   3b298:	mov	r5, r1
   3b29c:	mov	r0, r1
   3b2a0:	mov	r1, #0
   3b2a4:	mov	r4, r2
   3b2a8:	bl	148f8 <memchr@plt>
   3b2ac:	cmp	r0, #0
   3b2b0:	mov	r1, r5
   3b2b4:	subne	r4, r0, r5
   3b2b8:	mov	r0, r6
   3b2bc:	mov	r2, r4
   3b2c0:	pop	{r4, r5, r6, sl, fp, lr}
   3b2c4:	b	3b144 <flatcc_builder_create_string@@Base>

0003b2c8 <flatcc_builder_end_string@@Base>:
   3b2c8:	push	{r4, r5, fp, lr}
   3b2cc:	add	fp, sp, #8
   3b2d0:	mov	r4, r0
   3b2d4:	ldr	r0, [r0, #32]
   3b2d8:	ldrh	r1, [r0, #14]
   3b2dc:	cmp	r1, #6
   3b2e0:	bne	3b388 <flatcc_builder_end_string@@Base+0xc0>
   3b2e4:	ldr	r2, [r0, #20]
   3b2e8:	ldr	r0, [r4, #20]
   3b2ec:	cmp	r2, r0
   3b2f0:	bne	3b3a8 <flatcc_builder_end_string@@Base+0xe0>
   3b2f4:	ldr	r1, [r4, #16]
   3b2f8:	mov	r0, r4
   3b2fc:	bl	3b144 <flatcc_builder_create_string@@Base>
   3b300:	mov	r5, r0
   3b304:	cmp	r0, #0
   3b308:	beq	3b380 <flatcc_builder_end_string@@Base+0xb8>
   3b30c:	ldr	r0, [r4, #16]
   3b310:	ldr	r2, [r4, #20]
   3b314:	mov	r1, #0
   3b318:	bl	148d4 <memset@plt>
   3b31c:	ldr	r0, [r4, #32]
   3b320:	ldr	r1, [r4, #60]	; 0x3c
   3b324:	ldr	ip, [r4, #64]	; 0x40
   3b328:	ldr	r3, [r0, #8]
   3b32c:	str	r3, [r4, #20]
   3b330:	ldr	r3, [r0]
   3b334:	str	r3, [r4, #28]
   3b338:	add	r1, r1, r3
   3b33c:	ldr	r2, [r0, #4]
   3b340:	str	r1, [r4, #16]
   3b344:	sub	r1, ip, r3
   3b348:	cmp	r1, r2
   3b34c:	movhi	r1, r2
   3b350:	str	r1, [r4, #24]
   3b354:	ldrh	r1, [r4, #130]	; 0x82
   3b358:	ldrh	r2, [r4, #128]	; 0x80
   3b35c:	cmp	r2, r1
   3b360:	strhcc	r1, [r4, #128]	; 0x80
   3b364:	ldrh	r1, [r0, #12]
   3b368:	sub	r0, r0, #36	; 0x24
   3b36c:	str	r0, [r4, #32]
   3b370:	strh	r1, [r4, #130]	; 0x82
   3b374:	ldr	r0, [r4, #156]	; 0x9c
   3b378:	sub	r0, r0, #1
   3b37c:	str	r0, [r4, #156]	; 0x9c
   3b380:	mov	r0, r5
   3b384:	pop	{r4, r5, fp, pc}
   3b388:	ldr	r0, [pc, #56]	; 3b3c8 <flatcc_builder_end_string@@Base+0x100>
   3b38c:	ldr	r1, [pc, #56]	; 3b3cc <flatcc_builder_end_string@@Base+0x104>
   3b390:	ldr	r3, [pc, #56]	; 3b3d0 <flatcc_builder_end_string@@Base+0x108>
   3b394:	movw	r2, #1732	; 0x6c4
   3b398:	add	r0, pc, r0
   3b39c:	add	r1, pc, r1
   3b3a0:	add	r3, pc, r3
   3b3a4:	bl	1497c <__assert_fail@plt>
   3b3a8:	ldr	r0, [pc, #36]	; 3b3d4 <flatcc_builder_end_string@@Base+0x10c>
   3b3ac:	ldr	r1, [pc, #36]	; 3b3d8 <flatcc_builder_end_string@@Base+0x110>
   3b3b0:	ldr	r3, [pc, #36]	; 3b3dc <flatcc_builder_end_string@@Base+0x114>
   3b3b4:	movw	r2, #1733	; 0x6c5
   3b3b8:	add	r0, pc, r0
   3b3bc:	add	r1, pc, r1
   3b3c0:	add	r3, pc, r3
   3b3c4:	bl	1497c <__assert_fail@plt>
   3b3c8:	andeq	lr, r1, lr, ror #5
   3b3cc:	andeq	sp, r1, lr, lsr #27
   3b3d0:	muleq	r1, r9, fp
   3b3d4:	andeq	lr, r1, r4, asr #23
   3b3d8:	andeq	sp, r1, lr, lsl #27
   3b3dc:	andeq	lr, r1, r9, ror fp

0003b3e0 <flatcc_builder_string_edit@@Base>:
   3b3e0:	ldr	r0, [r0, #16]
   3b3e4:	bx	lr

0003b3e8 <flatcc_builder_string_len@@Base>:
   3b3e8:	ldr	r0, [r0, #32]
   3b3ec:	ldr	r0, [r0, #20]
   3b3f0:	bx	lr

0003b3f4 <flatcc_builder_table_edit@@Base>:
   3b3f4:	push	{fp, lr}
   3b3f8:	mov	fp, sp
   3b3fc:	ldr	r2, [r0, #32]
   3b400:	ldrh	r2, [r2, #14]
   3b404:	cmp	r2, #3
   3b408:	ldreq	r2, [r0, #16]
   3b40c:	ldreq	r0, [r0, #20]
   3b410:	addeq	r0, r2, r0
   3b414:	subeq	r0, r0, r1
   3b418:	popeq	{fp, pc}
   3b41c:	ldr	r0, [pc, #24]	; 3b43c <flatcc_builder_table_edit@@Base+0x48>
   3b420:	ldr	r1, [pc, #24]	; 3b440 <flatcc_builder_table_edit@@Base+0x4c>
   3b424:	ldr	r3, [pc, #24]	; 3b444 <flatcc_builder_table_edit@@Base+0x50>
   3b428:	movw	r2, #1794	; 0x702
   3b42c:	add	r0, pc, r0
   3b430:	add	r1, pc, r1
   3b434:	add	r3, pc, r3
   3b438:	bl	1497c <__assert_fail@plt>
   3b43c:	andeq	lr, r1, sl, asr #10
   3b440:	andeq	sp, r1, sl, lsl sp
   3b444:	strdeq	lr, [r1], -sl

0003b448 <flatcc_builder_table_add_copy@@Base>:
   3b448:	push	{r4, r5, r6, sl, fp, lr}
   3b44c:	add	fp, sp, #16
   3b450:	mov	r4, r3
   3b454:	ldr	r3, [fp, #8]
   3b458:	mov	r5, r2
   3b45c:	mov	r2, r4
   3b460:	bl	3a3c4 <flatcc_builder_table_add@@Base>
   3b464:	mov	r6, r0
   3b468:	cmp	r0, #0
   3b46c:	beq	3b480 <flatcc_builder_table_add_copy@@Base+0x38>
   3b470:	mov	r0, r6
   3b474:	mov	r1, r5
   3b478:	mov	r2, r4
   3b47c:	bl	14808 <memcpy@plt>
   3b480:	mov	r0, r6
   3b484:	pop	{r4, r5, r6, sl, fp, pc}

0003b488 <flatcc_builder_push_buffer_alignment@@Base>:
   3b488:	ldrh	r1, [r0, #128]	; 0x80
   3b48c:	mov	r2, #4
   3b490:	strh	r2, [r0, #128]	; 0x80
   3b494:	mov	r0, r1
   3b498:	bx	lr

0003b49c <flatcc_builder_pop_buffer_alignment@@Base>:
   3b49c:	ldrh	r2, [r0, #128]	; 0x80
   3b4a0:	cmp	r2, r1
   3b4a4:	strhcc	r1, [r0, #128]	; 0x80
   3b4a8:	bx	lr

0003b4ac <flatcc_builder_get_buffer_alignment@@Base>:
   3b4ac:	ldrh	r0, [r0, #128]	; 0x80
   3b4b0:	bx	lr

0003b4b4 <flatcc_builder_set_vtable_clustering@@Base>:
   3b4b4:	clz	r1, r1
   3b4b8:	lsr	r1, r1, #5
   3b4bc:	str	r1, [r0, #180]	; 0xb4
   3b4c0:	bx	lr

0003b4c4 <flatcc_builder_set_block_align@@Base>:
   3b4c4:	strh	r1, [r0, #132]	; 0x84
   3b4c8:	bx	lr

0003b4cc <flatcc_builder_get_level@@Base>:
   3b4cc:	ldr	r0, [r0, #156]	; 0x9c
   3b4d0:	bx	lr

0003b4d4 <flatcc_builder_set_max_level@@Base>:
   3b4d4:	str	r1, [r0, #176]	; 0xb0
   3b4d8:	ldr	r2, [r0, #160]	; 0xa0
   3b4dc:	cmp	r2, r1
   3b4e0:	strlt	r1, [r0, #160]	; 0xa0
   3b4e4:	bx	lr

0003b4e8 <flatcc_builder_get_buffer_size@@Base>:
   3b4e8:	ldr	r1, [r0, #136]	; 0x88
   3b4ec:	ldr	r0, [r0, #140]	; 0x8c
   3b4f0:	sub	r0, r0, r1
   3b4f4:	bx	lr

0003b4f8 <flatcc_builder_get_buffer_start@@Base>:
   3b4f8:	ldr	r0, [r0, #136]	; 0x88
   3b4fc:	bx	lr

0003b500 <flatcc_builder_get_buffer_end@@Base>:
   3b500:	ldr	r0, [r0, #140]	; 0x8c
   3b504:	bx	lr

0003b508 <flatcc_builder_set_vtable_cache_limit@@Base>:
   3b508:	str	r1, [r0, #172]	; 0xac
   3b50c:	bx	lr

0003b510 <flatcc_builder_set_identifier@@Base>:
   3b510:	ldr	r2, [pc, #20]	; 3b52c <flatcc_builder_set_identifier@@Base+0x1c>
   3b514:	cmp	r1, #0
   3b518:	ldr	r2, [pc, r2]
   3b51c:	movne	r2, r1
   3b520:	ldr	r1, [r2]
   3b524:	str	r1, [r0, #168]	; 0xa8
   3b528:	bx	lr
   3b52c:	andeq	pc, r2, r0, lsl #23

0003b530 <flatcc_builder_get_type@@Base>:
   3b530:	ldr	r0, [r0, #32]
   3b534:	cmp	r0, #0
   3b538:	ldrhne	r0, [r0, #14]
   3b53c:	moveq	r0, #0
   3b540:	bx	lr

0003b544 <flatcc_builder_get_type_at@@Base>:
   3b544:	mov	r2, r0
   3b548:	mov	r0, #0
   3b54c:	cmp	r1, #1
   3b550:	blt	3b574 <flatcc_builder_get_type_at@@Base+0x30>
   3b554:	ldr	r3, [r2, #156]	; 0x9c
   3b558:	cmp	r3, r1
   3b55c:	bxlt	lr
   3b560:	sub	r0, r1, r3
   3b564:	ldr	r1, [r2, #32]
   3b568:	add	r0, r0, r0, lsl #3
   3b56c:	add	r0, r1, r0, lsl #2
   3b570:	ldrh	r0, [r0, #14]
   3b574:	bx	lr

0003b578 <flatcc_builder_get_direct_buffer@@Base>:
   3b578:	ldr	r2, [r0, #184]	; 0xb8
   3b57c:	cmp	r2, #0
   3b580:	beq	3b594 <flatcc_builder_get_direct_buffer@@Base+0x1c>
   3b584:	ldr	r2, [r0, #188]	; 0xbc
   3b588:	ldr	r3, [r0, #192]	; 0xc0
   3b58c:	cmp	r2, r3
   3b590:	beq	3b5ac <flatcc_builder_get_direct_buffer@@Base+0x34>
   3b594:	cmp	r1, #0
   3b598:	moveq	r0, #0
   3b59c:	bxeq	lr
   3b5a0:	mov	r0, #0
   3b5a4:	str	r0, [r1]
   3b5a8:	bx	lr
   3b5ac:	cmp	r1, #0
   3b5b0:	ldrne	r2, [r0, #212]	; 0xd4
   3b5b4:	strne	r2, [r1]
   3b5b8:	ldr	r0, [r0, #196]	; 0xc4
   3b5bc:	bx	lr

0003b5c0 <flatcc_builder_copy_buffer@@Base>:
   3b5c0:	push	{fp, lr}
   3b5c4:	mov	fp, sp
   3b5c8:	ldr	r3, [r0, #184]	; 0xb8
   3b5cc:	cmp	r3, #0
   3b5d0:	beq	3b604 <flatcc_builder_copy_buffer@@Base+0x44>
   3b5d4:	add	r0, r0, #188	; 0xbc
   3b5d8:	bl	3bd10 <flatcc_emitter_copy_buffer@@Base>
   3b5dc:	cmp	r0, #0
   3b5e0:	popne	{fp, pc}
   3b5e4:	ldr	r0, [pc, #32]	; 3b60c <flatcc_builder_copy_buffer@@Base+0x4c>
   3b5e8:	ldr	r1, [pc, #32]	; 3b610 <flatcc_builder_copy_buffer@@Base+0x50>
   3b5ec:	ldr	r3, [pc, #32]	; 3b614 <flatcc_builder_copy_buffer@@Base+0x54>
   3b5f0:	movw	r2, #1926	; 0x786
   3b5f4:	add	r0, pc, r0
   3b5f8:	add	r1, pc, r1
   3b5fc:	add	r3, pc, r3
   3b600:	bl	1497c <__assert_fail@plt>
   3b604:	mov	r0, #0
   3b608:	pop	{fp, pc}
   3b60c:	andeq	sp, r1, r1, asr #27
   3b610:	andeq	sp, r1, r2, asr fp
   3b614:			; <UNDEFINED> instruction: 0x0001eabd

0003b618 <flatcc_builder_finalize_buffer@@Base>:
   3b618:	push	{r4, r5, r6, sl, fp, lr}
   3b61c:	add	fp, sp, #16
   3b620:	mov	r5, r0
   3b624:	ldr	r0, [r0, #136]	; 0x88
   3b628:	cmp	r1, #0
   3b62c:	ldr	r2, [r5, #140]	; 0x8c
   3b630:	sub	r4, r2, r0
   3b634:	mov	r0, r4
   3b638:	strne	r4, [r1]
   3b63c:	bl	14868 <malloc@plt>
   3b640:	cmp	r0, #0
   3b644:	beq	3b694 <flatcc_builder_finalize_buffer@@Base+0x7c>
   3b648:	mov	r6, r0
   3b64c:	ldr	r0, [r5, #184]	; 0xb8
   3b650:	cmp	r0, #0
   3b654:	beq	3b6b4 <flatcc_builder_finalize_buffer@@Base+0x9c>
   3b658:	add	r0, r5, #188	; 0xbc
   3b65c:	mov	r1, r6
   3b660:	mov	r2, r4
   3b664:	bl	3bd10 <flatcc_emitter_copy_buffer@@Base>
   3b668:	cmp	r0, #0
   3b66c:	movne	r0, r6
   3b670:	popne	{r4, r5, r6, sl, fp, pc}
   3b674:	ldr	r0, [pc, #88]	; 3b6d4 <flatcc_builder_finalize_buffer@@Base+0xbc>
   3b678:	ldr	r1, [pc, #88]	; 3b6d8 <flatcc_builder_finalize_buffer@@Base+0xc0>
   3b67c:	ldr	r3, [pc, #88]	; 3b6dc <flatcc_builder_finalize_buffer@@Base+0xc4>
   3b680:	movw	r2, #1926	; 0x786
   3b684:	add	r0, pc, r0
   3b688:	add	r1, pc, r1
   3b68c:	add	r3, pc, r3
   3b690:	bl	1497c <__assert_fail@plt>
   3b694:	ldr	r0, [pc, #80]	; 3b6ec <flatcc_builder_finalize_buffer@@Base+0xd4>
   3b698:	ldr	r1, [pc, #80]	; 3b6f0 <flatcc_builder_finalize_buffer@@Base+0xd8>
   3b69c:	ldr	r3, [pc, #80]	; 3b6f4 <flatcc_builder_finalize_buffer@@Base+0xdc>
   3b6a0:	movw	r2, #1944	; 0x798
   3b6a4:	add	r0, pc, r0
   3b6a8:	add	r1, pc, r1
   3b6ac:	add	r3, pc, r3
   3b6b0:	bl	1497c <__assert_fail@plt>
   3b6b4:	ldr	r0, [pc, #36]	; 3b6e0 <flatcc_builder_finalize_buffer@@Base+0xc8>
   3b6b8:	ldr	r1, [pc, #36]	; 3b6e4 <flatcc_builder_finalize_buffer@@Base+0xcc>
   3b6bc:	ldr	r3, [pc, #36]	; 3b6e8 <flatcc_builder_finalize_buffer@@Base+0xd0>
   3b6c0:	movw	r2, #1948	; 0x79c
   3b6c4:	add	r0, pc, r0
   3b6c8:	add	r1, pc, r1
   3b6cc:	add	r3, pc, r3
   3b6d0:	bl	1497c <__assert_fail@plt>
   3b6d4:	andeq	sp, r1, r1, lsr sp
   3b6d8:	andeq	sp, r1, r2, asr #21
   3b6dc:	andeq	lr, r1, sp, lsr #20
   3b6e0:	andeq	r4, r1, sl, lsl #27
   3b6e4:	andeq	sp, r1, r2, lsl #21
   3b6e8:	andeq	lr, r1, r2, lsr sl
   3b6ec:	andeq	r4, r1, sl, lsr #27
   3b6f0:	andeq	sp, r1, r2, lsr #21
   3b6f4:	andeq	lr, r1, r2, asr sl

0003b6f8 <flatcc_builder_finalize_aligned_buffer@@Base>:
   3b6f8:	push	{r4, r5, r6, r7, fp, lr}
   3b6fc:	add	fp, sp, #16
   3b700:	sub	sp, sp, #8
   3b704:	mov	r5, r0
   3b708:	mov	r4, r1
   3b70c:	ldr	r0, [r0, #136]	; 0x88
   3b710:	ldr	r1, [r5, #140]	; 0x8c
   3b714:	cmp	r4, #0
   3b718:	sub	r0, r1, r0
   3b71c:	mov	r1, #0
   3b720:	strne	r0, [r4]
   3b724:	ldrh	r2, [r5, #128]	; 0x80
   3b728:	str	r1, [sp, #4]
   3b72c:	add	r0, r0, r2
   3b730:	cmp	r2, #4
   3b734:	mov	r1, r2
   3b738:	rsb	r2, r2, #0
   3b73c:	sub	r0, r0, #1
   3b740:	movls	r1, #4
   3b744:	and	r7, r0, r2
   3b748:	add	r0, sp, #4
   3b74c:	mov	r2, r7
   3b750:	bl	148c8 <posix_memalign@plt>
   3b754:	ldr	r6, [sp, #4]
   3b758:	cmp	r0, #0
   3b75c:	cmpne	r6, #0
   3b760:	bne	3b7b0 <flatcc_builder_finalize_aligned_buffer@@Base+0xb8>
   3b764:	cmp	r6, #0
   3b768:	beq	3b7b8 <flatcc_builder_finalize_aligned_buffer@@Base+0xc0>
   3b76c:	ldr	r0, [r5, #184]	; 0xb8
   3b770:	cmp	r0, #0
   3b774:	beq	3b7b0 <flatcc_builder_finalize_aligned_buffer@@Base+0xb8>
   3b778:	add	r0, r5, #188	; 0xbc
   3b77c:	mov	r1, r6
   3b780:	mov	r2, r7
   3b784:	bl	3bd10 <flatcc_emitter_copy_buffer@@Base>
   3b788:	cmp	r0, #0
   3b78c:	bne	3b7c4 <flatcc_builder_finalize_aligned_buffer@@Base+0xcc>
   3b790:	ldr	r0, [pc, #56]	; 3b7d0 <flatcc_builder_finalize_aligned_buffer@@Base+0xd8>
   3b794:	ldr	r1, [pc, #56]	; 3b7d4 <flatcc_builder_finalize_aligned_buffer@@Base+0xdc>
   3b798:	ldr	r3, [pc, #56]	; 3b7d8 <flatcc_builder_finalize_aligned_buffer@@Base+0xe0>
   3b79c:	movw	r2, #1926	; 0x786
   3b7a0:	add	r0, pc, r0
   3b7a4:	add	r1, pc, r1
   3b7a8:	add	r3, pc, r3
   3b7ac:	bl	1497c <__assert_fail@plt>
   3b7b0:	mov	r0, r6
   3b7b4:	bl	147fc <free@plt>
   3b7b8:	mov	r6, #0
   3b7bc:	cmp	r4, #0
   3b7c0:	strne	r6, [r4]
   3b7c4:	mov	r0, r6
   3b7c8:	sub	sp, fp, #16
   3b7cc:	pop	{r4, r5, r6, r7, fp, pc}
   3b7d0:	andeq	sp, r1, r5, lsl ip
   3b7d4:	andeq	sp, r1, r6, lsr #19
   3b7d8:	andeq	lr, r1, r1, lsl r9

0003b7dc <flatcc_builder_aligned_alloc@@Base>:
   3b7dc:	push	{fp, lr}
   3b7e0:	mov	fp, sp
   3b7e4:	sub	sp, sp, #8
   3b7e8:	mov	r2, r1
   3b7ec:	mov	r1, r0
   3b7f0:	mov	r0, #0
   3b7f4:	cmp	r1, #4
   3b7f8:	str	r0, [sp, #4]
   3b7fc:	add	r0, sp, #4
   3b800:	movls	r1, #4
   3b804:	bl	148c8 <posix_memalign@plt>
   3b808:	mov	r1, r0
   3b80c:	ldr	r0, [sp, #4]
   3b810:	cmp	r1, #0
   3b814:	cmpne	r0, #0
   3b818:	bne	3b824 <flatcc_builder_aligned_alloc@@Base+0x48>
   3b81c:	mov	sp, fp
   3b820:	pop	{fp, pc}
   3b824:	bl	147fc <free@plt>
   3b828:	mov	r0, #0
   3b82c:	str	r0, [sp, #4]
   3b830:	mov	sp, fp
   3b834:	pop	{fp, pc}

0003b838 <flatcc_builder_aligned_free@@Base>:
   3b838:	b	147fc <free@plt>

0003b83c <flatcc_builder_get_emit_context@@Base>:
   3b83c:	ldr	r0, [r0, #36]	; 0x24
   3b840:	bx	lr

0003b844 <flatcc_emitter_recycle_page@@Base>:
   3b844:	ldr	r3, [r0]
   3b848:	mov	r2, r0
   3b84c:	mvn	r0, #0
   3b850:	cmp	r3, r1
   3b854:	beq	3b894 <flatcc_emitter_recycle_page@@Base+0x50>
   3b858:	ldr	r2, [r2, #4]
   3b85c:	cmp	r2, r1
   3b860:	bxeq	lr
   3b864:	ldr	r0, [r1, #2944]	; 0xb80
   3b868:	ldr	r2, [r1, #2948]	; 0xb84
   3b86c:	str	r2, [r0, #2948]	; 0xb84
   3b870:	ldr	r2, [r1, #2948]	; 0xb84
   3b874:	str	r0, [r2, #2944]	; 0xb80
   3b878:	ldr	r0, [r3, #2948]	; 0xb84
   3b87c:	str	r3, [r1, #2944]	; 0xb80
   3b880:	str	r0, [r1, #2948]	; 0xb84
   3b884:	str	r1, [r0, #2944]	; 0xb80
   3b888:	ldr	r0, [r1, #2944]	; 0xb80
   3b88c:	str	r1, [r0, #2948]	; 0xb84
   3b890:	mov	r0, #0
   3b894:	bx	lr

0003b898 <flatcc_emitter_reset@@Base>:
   3b898:	push	{r4, sl, fp, lr}
   3b89c:	add	fp, sp, #8
   3b8a0:	ldr	r1, [r0]
   3b8a4:	cmp	r1, #0
   3b8a8:	beq	3b960 <flatcc_emitter_reset@@Base+0xc8>
   3b8ac:	mov	r4, r0
   3b8b0:	add	r2, r1, #1472	; 0x5c0
   3b8b4:	mov	r0, #1472	; 0x5c0
   3b8b8:	mov	r3, #0
   3b8bc:	stmib	r4, {r1, r2}
   3b8c0:	str	r0, [r4, #12]
   3b8c4:	str	r2, [r4, #16]
   3b8c8:	str	r0, [r4, #20]
   3b8cc:	movw	r0, #64064	; 0xfa40
   3b8d0:	movt	r0, #65535	; 0xffff
   3b8d4:	str	r0, [r1, #2952]	; 0xb88
   3b8d8:	ldr	r2, [r4, #32]
   3b8dc:	ldr	r0, [r4, #24]
   3b8e0:	cmp	r2, #0
   3b8e4:	moveq	r2, r0
   3b8e8:	streq	r0, [r4, #32]
   3b8ec:	str	r3, [r4, #24]
   3b8f0:	add	r2, r2, r2, lsl #1
   3b8f4:	lsr	r2, r2, #2
   3b8f8:	add	r0, r2, r0, lsr #2
   3b8fc:	str	r0, [r4, #32]
   3b900:	ldr	r2, [r4, #28]
   3b904:	cmp	r2, r0, lsl #1
   3b908:	bls	3b960 <flatcc_emitter_reset@@Base+0xc8>
   3b90c:	mov	r2, r1
   3b910:	ldr	r0, [r2, #2944]!	; 0xb80
   3b914:	cmp	r0, r1
   3b918:	popeq	{r4, sl, fp, pc}
   3b91c:	ldr	r3, [r0, #2944]	; 0xb80
   3b920:	str	r3, [r2]
   3b924:	ldr	r2, [r0, #2944]	; 0xb80
   3b928:	str	r1, [r2, #2948]	; 0xb84
   3b92c:	bl	147fc <free@plt>
   3b930:	ldr	r0, [r4, #28]
   3b934:	ldr	r1, [r4, #32]
   3b938:	sub	r0, r0, #2944	; 0xb80
   3b93c:	cmp	r0, r1, lsl #1
   3b940:	str	r0, [r4, #28]
   3b944:	bls	3b960 <flatcc_emitter_reset@@Base+0xc8>
   3b948:	ldr	r1, [r4, #4]
   3b94c:	ldr	r3, [r4]
   3b950:	mov	r2, r1
   3b954:	ldr	r0, [r2, #2944]!	; 0xb80
   3b958:	cmp	r0, r3
   3b95c:	bne	3b91c <flatcc_emitter_reset@@Base+0x84>
   3b960:	pop	{r4, sl, fp, pc}

0003b964 <flatcc_emitter_clear@@Base>:
   3b964:	push	{r4, r5, r6, sl, fp, lr}
   3b968:	add	fp, sp, #16
   3b96c:	ldr	r5, [r0]
   3b970:	cmp	r5, #0
   3b974:	beq	3b9c4 <flatcc_emitter_clear@@Base+0x60>
   3b978:	mov	r4, r0
   3b97c:	ldr	r0, [r5, #2948]	; 0xb84
   3b980:	mov	r6, #0
   3b984:	str	r6, [r0, #2944]	; 0xb80
   3b988:	ldr	r0, [r5, #2944]	; 0xb80
   3b98c:	cmp	r0, #0
   3b990:	beq	3b9a4 <flatcc_emitter_clear@@Base+0x40>
   3b994:	mov	r5, r0
   3b998:	ldr	r0, [r0, #2948]	; 0xb84
   3b99c:	bl	147fc <free@plt>
   3b9a0:	b	3b988 <flatcc_emitter_clear@@Base+0x24>
   3b9a4:	mov	r0, r5
   3b9a8:	bl	147fc <free@plt>
   3b9ac:	vmov.i32	q8, #0	; 0x00000000
   3b9b0:	add	r0, r4, #16
   3b9b4:	vst1.32	{d16-d17}, [r0]
   3b9b8:	mov	r0, #32
   3b9bc:	vst1.32	{d16-d17}, [r4], r0
   3b9c0:	str	r6, [r4]
   3b9c4:	pop	{r4, r5, r6, sl, fp, pc}

0003b9c8 <flatcc_emitter@@Base>:
   3b9c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3b9cc:	add	fp, sp, #28
   3b9d0:	sub	sp, sp, #4
   3b9d4:	mov	r6, r0
   3b9d8:	mov	r7, r1
   3b9dc:	ldr	r0, [r0, #24]
   3b9e0:	ldr	r1, [fp, #8]
   3b9e4:	mov	r4, r2
   3b9e8:	cmn	r3, #1
   3b9ec:	mov	r9, r6
   3b9f0:	add	r0, r0, r1
   3b9f4:	str	r0, [r6, #24]
   3b9f8:	ble	3bb4c <flatcc_emitter@@Base+0x184>
   3b9fc:	ldr	r0, [r9, #20]!
   3ba00:	cmp	r0, r1
   3ba04:	bcs	3bcac <flatcc_emitter@@Base+0x2e4>
   3ba08:	mov	r8, #0
   3ba0c:	cmp	r4, #0
   3ba10:	beq	3bd04 <flatcc_emitter@@Base+0x33c>
   3ba14:	movw	sl, #64064	; 0xfa40
   3ba18:	movt	sl, #65535	; 0xffff
   3ba1c:	ldr	r8, [r7, #4]
   3ba20:	cmp	r8, #0
   3ba24:	beq	3bb38 <flatcc_emitter@@Base+0x170>
   3ba28:	ldr	r9, [r7]
   3ba2c:	b	3ba68 <flatcc_emitter@@Base+0xa0>
   3ba30:	mov	r5, r8
   3ba34:	ldr	r0, [r6, #16]
   3ba38:	mov	r1, r9
   3ba3c:	mov	r2, r5
   3ba40:	bl	14808 <memcpy@plt>
   3ba44:	ldr	r0, [r6, #16]
   3ba48:	ldr	r1, [r6, #20]
   3ba4c:	add	r9, r9, r5
   3ba50:	subs	r8, r8, r5
   3ba54:	add	r2, r0, r5
   3ba58:	sub	r0, r1, r5
   3ba5c:	str	r2, [r6, #16]
   3ba60:	str	r0, [r6, #20]
   3ba64:	beq	3bb38 <flatcc_emitter@@Base+0x170>
   3ba68:	cmp	r8, r0
   3ba6c:	mov	r5, r8
   3ba70:	bls	3ba34 <flatcc_emitter@@Base+0x6c>
   3ba74:	mov	r5, r0
   3ba78:	cmp	r5, #0
   3ba7c:	beq	3bac8 <flatcc_emitter@@Base+0x100>
   3ba80:	b	3ba34 <flatcc_emitter@@Base+0x6c>
   3ba84:	ldr	r1, [r6]
   3ba88:	str	r1, [r0, #2944]	; 0xb80
   3ba8c:	str	r5, [r0, #2948]	; 0xb84
   3ba90:	str	r0, [r1, #2948]	; 0xb84
   3ba94:	str	r0, [r5, #2944]	; 0xb80
   3ba98:	mov	r5, #2944	; 0xb80
   3ba9c:	str	r0, [r6, #4]
   3baa0:	str	r0, [r6, #16]
   3baa4:	str	r5, [r6, #20]
   3baa8:	ldr	r1, [r0, #2948]	; 0xb84
   3baac:	ldr	r1, [r1, #2952]	; 0xb88
   3bab0:	add	r1, r1, #2944	; 0xb80
   3bab4:	str	r1, [r0, #2952]	; 0xb88
   3bab8:	cmp	r8, r5
   3babc:	bls	3ba30 <flatcc_emitter@@Base+0x68>
   3bac0:	cmp	r5, #0
   3bac4:	bne	3ba34 <flatcc_emitter@@Base+0x6c>
   3bac8:	ldr	r5, [r6, #4]
   3bacc:	cmp	r5, #0
   3bad0:	beq	3bae4 <flatcc_emitter@@Base+0x11c>
   3bad4:	ldr	r0, [r5, #2944]	; 0xb80
   3bad8:	ldr	r1, [r6]
   3badc:	cmp	r0, r1
   3bae0:	bne	3ba98 <flatcc_emitter@@Base+0xd0>
   3bae4:	movw	r0, #2956	; 0xb8c
   3bae8:	bl	14868 <malloc@plt>
   3baec:	cmp	r0, #0
   3baf0:	beq	3bcbc <flatcc_emitter@@Base+0x2f4>
   3baf4:	ldr	r1, [r6, #28]
   3baf8:	cmp	r5, #0
   3bafc:	add	r1, r1, #2944	; 0xb80
   3bb00:	str	r1, [r6, #28]
   3bb04:	bne	3ba84 <flatcc_emitter@@Base+0xbc>
   3bb08:	add	r1, r0, #1472	; 0x5c0
   3bb0c:	mov	r5, #1472	; 0x5c0
   3bb10:	str	r0, [r6]
   3bb14:	stmib	r6, {r0, r1, r5}
   3bb18:	str	r1, [r6, #16]
   3bb1c:	str	r5, [r6, #20]
   3bb20:	str	r0, [r0, #2944]	; 0xb80
   3bb24:	str	r0, [r0, #2948]	; 0xb84
   3bb28:	str	sl, [r0, #2952]	; 0xb88
   3bb2c:	cmp	r8, r5
   3bb30:	bhi	3bac0 <flatcc_emitter@@Base+0xf8>
   3bb34:	b	3ba30 <flatcc_emitter@@Base+0x68>
   3bb38:	subs	r4, r4, #1
   3bb3c:	add	r7, r7, #8
   3bb40:	bne	3ba1c <flatcc_emitter@@Base+0x54>
   3bb44:	mov	r8, #0
   3bb48:	b	3bd04 <flatcc_emitter@@Base+0x33c>
   3bb4c:	ldr	r0, [r9, #12]!
   3bb50:	cmp	r0, r1
   3bb54:	bcs	3bcc4 <flatcc_emitter@@Base+0x2fc>
   3bb58:	mov	r8, #0
   3bb5c:	cmp	r4, #0
   3bb60:	beq	3bd04 <flatcc_emitter@@Base+0x33c>
   3bb64:	add	r0, r7, r4, lsl #3
   3bb68:	ldr	sl, [r0, #-4]
   3bb6c:	sub	r1, r0, #8
   3bb70:	str	r1, [sp]
   3bb74:	cmp	sl, #0
   3bb78:	beq	3bc9c <flatcc_emitter@@Base+0x2d4>
   3bb7c:	ldr	r0, [sp]
   3bb80:	ldr	r0, [r0]
   3bb84:	add	r7, r0, sl
   3bb88:	ldr	r1, [r9]
   3bb8c:	cmp	sl, r1
   3bb90:	bhi	3bbd0 <flatcc_emitter@@Base+0x208>
   3bb94:	b	3bc6c <flatcc_emitter@@Base+0x2a4>
   3bb98:	ldr	r1, [r5, #2952]	; 0xb88
   3bb9c:	sub	r1, r1, #2944	; 0xb80
   3bba0:	str	r1, [r0, #2952]	; 0xb88
   3bba4:	mov	r1, #2944	; 0xb80
   3bba8:	add	r2, r0, #2944	; 0xb80
   3bbac:	str	r0, [r6]
   3bbb0:	str	r2, [r6, #8]
   3bbb4:	str	r1, [r6, #12]
   3bbb8:	ldr	r2, [r0, #2944]	; 0xb80
   3bbbc:	ldr	r2, [r2, #2952]	; 0xb88
   3bbc0:	sub	r2, r2, #2944	; 0xb80
   3bbc4:	str	r2, [r0, #2952]	; 0xb88
   3bbc8:	cmp	sl, r1
   3bbcc:	bls	3bc6c <flatcc_emitter@@Base+0x2a4>
   3bbd0:	cmp	r1, #0
   3bbd4:	mov	r5, r1
   3bbd8:	bne	3bc70 <flatcc_emitter@@Base+0x2a8>
   3bbdc:	ldr	r5, [r6]
   3bbe0:	cmp	r5, #0
   3bbe4:	beq	3bbf8 <flatcc_emitter@@Base+0x230>
   3bbe8:	ldr	r0, [r5, #2948]	; 0xb84
   3bbec:	ldr	r1, [r6, #4]
   3bbf0:	cmp	r0, r1
   3bbf4:	bne	3bb98 <flatcc_emitter@@Base+0x1d0>
   3bbf8:	movw	r0, #2956	; 0xb8c
   3bbfc:	bl	14868 <malloc@plt>
   3bc00:	cmp	r0, #0
   3bc04:	beq	3bcbc <flatcc_emitter@@Base+0x2f4>
   3bc08:	ldr	r1, [r6, #28]
   3bc0c:	cmp	r5, #0
   3bc10:	add	r1, r1, #2944	; 0xb80
   3bc14:	str	r1, [r6, #28]
   3bc18:	beq	3bc34 <flatcc_emitter@@Base+0x26c>
   3bc1c:	ldr	r1, [r6, #4]
   3bc20:	str	r5, [r0, #2944]	; 0xb80
   3bc24:	str	r1, [r0, #2948]	; 0xb84
   3bc28:	str	r0, [r5, #2948]	; 0xb84
   3bc2c:	str	r0, [r1, #2944]	; 0xb80
   3bc30:	b	3bba4 <flatcc_emitter@@Base+0x1dc>
   3bc34:	add	r2, r0, #1472	; 0x5c0
   3bc38:	mov	r1, #1472	; 0x5c0
   3bc3c:	str	r0, [r6]
   3bc40:	stmib	r6, {r0, r2}
   3bc44:	str	r1, [r6, #12]
   3bc48:	str	r2, [r6, #16]
   3bc4c:	movw	r2, #64064	; 0xfa40
   3bc50:	str	r1, [r6, #20]
   3bc54:	str	r0, [r0, #2944]	; 0xb80
   3bc58:	str	r0, [r0, #2948]	; 0xb84
   3bc5c:	movt	r2, #65535	; 0xffff
   3bc60:	str	r2, [r0, #2952]	; 0xb88
   3bc64:	cmp	sl, r1
   3bc68:	bhi	3bbd0 <flatcc_emitter@@Base+0x208>
   3bc6c:	mov	r5, sl
   3bc70:	sub	r0, r1, r5
   3bc74:	sub	r7, r7, r5
   3bc78:	mov	r2, r5
   3bc7c:	str	r0, [r6, #12]
   3bc80:	mov	r1, r7
   3bc84:	ldr	r0, [r6, #8]
   3bc88:	sub	r0, r0, r5
   3bc8c:	str	r0, [r6, #8]
   3bc90:	bl	14808 <memcpy@plt>
   3bc94:	subs	sl, sl, r5
   3bc98:	bne	3bb88 <flatcc_emitter@@Base+0x1c0>
   3bc9c:	ldr	r0, [sp]
   3bca0:	subs	r4, r4, #1
   3bca4:	bne	3bb68 <flatcc_emitter@@Base+0x1a0>
   3bca8:	b	3bd04 <flatcc_emitter@@Base+0x33c>
   3bcac:	ldr	r5, [r6, #16]
   3bcb0:	add	r2, r5, r1
   3bcb4:	str	r2, [r6, #16]
   3bcb8:	b	3bcd0 <flatcc_emitter@@Base+0x308>
   3bcbc:	mvn	r8, #0
   3bcc0:	b	3bd04 <flatcc_emitter@@Base+0x33c>
   3bcc4:	ldr	r2, [r6, #8]
   3bcc8:	sub	r5, r2, r1
   3bccc:	str	r5, [r6, #8]
   3bcd0:	sub	r0, r0, r1
   3bcd4:	mov	r8, #0
   3bcd8:	cmp	r4, #0
   3bcdc:	str	r0, [r9]
   3bce0:	beq	3bd04 <flatcc_emitter@@Base+0x33c>
   3bce4:	ldm	r7, {r1, r2}
   3bce8:	mov	r0, r5
   3bcec:	bl	14808 <memcpy@plt>
   3bcf0:	ldr	r0, [r7, #4]
   3bcf4:	add	r7, r7, #8
   3bcf8:	subs	r4, r4, #1
   3bcfc:	add	r5, r5, r0
   3bd00:	bne	3bce4 <flatcc_emitter@@Base+0x31c>
   3bd04:	mov	r0, r8
   3bd08:	sub	sp, fp, #28
   3bd0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003bd10 <flatcc_emitter_copy_buffer@@Base>:
   3bd10:	push	{r4, r5, r6, sl, fp, lr}
   3bd14:	add	fp, sp, #16
   3bd18:	mov	r3, r2
   3bd1c:	ldr	r2, [r0, #24]
   3bd20:	mov	r5, #0
   3bd24:	cmp	r2, r3
   3bd28:	bhi	3bdb0 <flatcc_emitter_copy_buffer@@Base+0xa0>
   3bd2c:	mov	r4, r0
   3bd30:	ldr	r0, [r0]
   3bd34:	cmp	r0, #0
   3bd38:	beq	3bdb0 <flatcc_emitter_copy_buffer@@Base+0xa0>
   3bd3c:	mov	r6, r1
   3bd40:	ldr	r1, [r4, #4]
   3bd44:	cmp	r0, r1
   3bd48:	beq	3bdb8 <flatcc_emitter_copy_buffer@@Base+0xa8>
   3bd4c:	ldr	r0, [r4, #12]
   3bd50:	ldr	r1, [r4, #8]
   3bd54:	rsb	r5, r0, #2944	; 0xb80
   3bd58:	mov	r0, r6
   3bd5c:	mov	r2, r5
   3bd60:	bl	14808 <memcpy@plt>
   3bd64:	ldm	r4, {r0, r1}
   3bd68:	add	r5, r6, r5
   3bd6c:	ldr	r6, [r0, #2944]	; 0xb80
   3bd70:	cmp	r6, r1
   3bd74:	beq	3bd9c <flatcc_emitter_copy_buffer@@Base+0x8c>
   3bd78:	mov	r0, r5
   3bd7c:	mov	r1, r6
   3bd80:	mov	r2, #2944	; 0xb80
   3bd84:	bl	14808 <memcpy@plt>
   3bd88:	ldr	r6, [r6, #2944]	; 0xb80
   3bd8c:	ldr	r0, [r4, #4]
   3bd90:	add	r5, r5, #2944	; 0xb80
   3bd94:	cmp	r6, r0
   3bd98:	bne	3bd78 <flatcc_emitter_copy_buffer@@Base+0x68>
   3bd9c:	ldr	r0, [r4, #20]
   3bda0:	mov	r1, r6
   3bda4:	rsb	r2, r0, #2944	; 0xb80
   3bda8:	mov	r0, r5
   3bdac:	bl	14808 <memcpy@plt>
   3bdb0:	mov	r0, r5
   3bdb4:	pop	{r4, r5, r6, sl, fp, pc}
   3bdb8:	ldr	r1, [r4, #8]
   3bdbc:	mov	r0, r6
   3bdc0:	bl	14808 <memcpy@plt>
   3bdc4:	mov	r0, r6
   3bdc8:	pop	{r4, r5, r6, sl, fp, pc}

0003bdcc <cmetrohash64_1@@Base>:
   3bdcc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3bdd0:	add	fp, sp, #28
   3bdd4:	sub	sp, sp, #44	; 0x2c
   3bdd8:	ldr	r1, [fp, #8]
   3bddc:	movw	r5, #37345	; 0x91e1
   3bde0:	mov	r7, r2
   3bde4:	mov	r6, r3
   3bde8:	movw	r8, #56283	; 0xdbdb
   3bdec:	movt	r5, #51258	; 0xc83a
   3bdf0:	movt	r8, #34376	; 0x8648
   3bdf4:	umlal	r7, r6, r1, r5
   3bdf8:	movw	r5, #24283	; 0x5edb
   3bdfc:	movw	r1, #23867	; 0x5d3b
   3be00:	movt	r5, #44806	; 0xaf06
   3be04:	movt	r1, #24802	; 0x60e2
   3be08:	adds	sl, r7, r5
   3be0c:	movw	r5, #49211	; 0xc03b
   3be10:	adc	r4, r6, r1
   3be14:	subs	r1, r2, #32
   3be18:	movt	r5, #31710	; 0x7bde
   3be1c:	add	r6, r0, r2
   3be20:	sbcs	r1, r3, #0
   3be24:	str	r6, [sp, #4]
   3be28:	bcc	3c0f0 <cmetrohash64_1@@Base+0x324>
   3be2c:	movw	r8, #28837	; 0x70a5
   3be30:	sub	r1, r6, #32
   3be34:	mov	lr, sl
   3be38:	mov	r5, r4
   3be3c:	str	sl, [fp, #-32]	; 0xffffffe0
   3be40:	str	r4, [sp, #36]	; 0x24
   3be44:	str	sl, [sp, #32]
   3be48:	str	r4, [sp, #28]
   3be4c:	str	sl, [sp]
   3be50:	str	r4, [sp, #8]
   3be54:	movt	r8, #12120	; 0x2f58
   3be58:	str	r1, [sp, #12]
   3be5c:	mov	r1, r4
   3be60:	ldr	r2, [r0]
   3be64:	ldr	r7, [r0, #8]
   3be68:	movw	r6, #56283	; 0xdbdb
   3be6c:	str	r1, [sp, #24]
   3be70:	ldr	r1, [sp, #32]
   3be74:	ldr	r9, [r0, #12]
   3be78:	movw	r3, #37345	; 0x91e1
   3be7c:	mov	r4, sl
   3be80:	mov	ip, lr
   3be84:	movt	r6, #34376	; 0x8648
   3be88:	movt	r3, #51258	; 0xc83a
   3be8c:	mov	lr, r3
   3be90:	ldr	r3, [r0, #28]
   3be94:	str	r2, [sp, #20]
   3be98:	ldr	r2, [r0, #4]
   3be9c:	str	r2, [sp, #16]
   3bea0:	umull	r7, r2, r7, r6
   3bea4:	mla	r2, r9, r6, r2
   3bea8:	mov	r9, r5
   3beac:	ldr	r5, [sp, #36]	; 0x24
   3beb0:	adds	r7, r7, r1
   3beb4:	ldr	r1, [sp, #28]
   3beb8:	lsl	r6, r7, #3
   3bebc:	lsr	r7, r7, #29
   3bec0:	adc	r2, r2, r1
   3bec4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3bec8:	orr	r6, r6, r2, lsr #29
   3becc:	orr	r2, r7, r2, lsl #3
   3bed0:	adds	sl, r2, r1
   3bed4:	ldr	r2, [r0, #24]
   3bed8:	adc	r6, r6, r5
   3bedc:	str	sl, [sp, #32]
   3bee0:	str	r6, [sp, #28]
   3bee4:	umull	r2, r7, r2, r8
   3bee8:	mla	r3, r3, r8, r7
   3beec:	adds	r1, r2, r1
   3bef0:	adc	r2, r3, r5
   3bef4:	lsl	r3, r1, #3
   3bef8:	lsr	r1, r1, #29
   3befc:	orr	r1, r1, r2, lsl #3
   3bf00:	orr	r3, r3, r2, lsr #29
   3bf04:	adds	r1, r1, sl
   3bf08:	str	r1, [fp, #-32]	; 0xffffffe0
   3bf0c:	adc	r1, r3, r6
   3bf10:	str	r1, [sp, #36]	; 0x24
   3bf14:	ldr	r1, [sp, #20]
   3bf18:	umull	r2, r3, r1, lr
   3bf1c:	ldr	r1, [sp, #16]
   3bf20:	mla	r3, r1, lr, r3
   3bf24:	ldr	r1, [sp, #24]
   3bf28:	adds	r2, r2, r4
   3bf2c:	lsl	r4, r2, #3
   3bf30:	lsr	r2, r2, #29
   3bf34:	adc	r3, r3, r1
   3bf38:	orr	r2, r2, r3, lsl #3
   3bf3c:	orr	r4, r4, r3, lsr #29
   3bf40:	movw	r3, #49211	; 0xc03b
   3bf44:	movt	r3, #31710	; 0x7bde
   3bf48:	adds	sl, r2, ip
   3bf4c:	ldr	r2, [r0, #16]
   3bf50:	adc	r1, r4, r9
   3bf54:	ldr	r4, [r0, #20]
   3bf58:	mov	r6, r3
   3bf5c:	add	r0, r0, #32
   3bf60:	umull	r2, r3, r2, r3
   3bf64:	mla	r3, r4, r6, r3
   3bf68:	adds	r2, r2, ip
   3bf6c:	lsl	r7, r2, #3
   3bf70:	adc	r3, r3, r9
   3bf74:	lsr	r2, r2, #29
   3bf78:	orr	r2, r2, r3, lsl #3
   3bf7c:	orr	r4, r7, r3, lsr #29
   3bf80:	adds	lr, r2, sl
   3bf84:	ldr	r2, [sp, #12]
   3bf88:	adc	r5, r4, r1
   3bf8c:	cmp	r0, r2
   3bf90:	bls	3be60 <cmetrohash64_1@@Base+0x94>
   3bf94:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3bf98:	movw	r6, #37345	; 0x91e1
   3bf9c:	ldr	r3, [sp, #36]	; 0x24
   3bfa0:	ldr	ip, [sp, #32]
   3bfa4:	str	sl, [sp, #20]
   3bfa8:	movw	r9, #56283	; 0xdbdb
   3bfac:	str	r1, [sp, #24]
   3bfb0:	movt	r6, #51258	; 0xc83a
   3bfb4:	movt	r9, #34376	; 0x8648
   3bfb8:	adds	r2, r2, sl
   3bfbc:	ldr	sl, [sp, #28]
   3bfc0:	umull	r2, r4, r2, r6
   3bfc4:	adc	r3, r3, r1
   3bfc8:	mla	r3, r3, r6, r4
   3bfcc:	adds	r2, r2, ip
   3bfd0:	adc	r3, r3, sl
   3bfd4:	lsl	r4, r2, #31
   3bfd8:	orr	r4, r4, r3, lsr #1
   3bfdc:	lsl	r3, r3, #31
   3bfe0:	orr	r2, r3, r2, lsr #1
   3bfe4:	umull	r4, r7, r4, r9
   3bfe8:	mla	r2, r2, r9, r7
   3bfec:	eor	r3, r4, lr
   3bff0:	adds	r7, r3, ip
   3bff4:	eor	r8, r2, r5
   3bff8:	ldr	r5, [sp, #20]
   3bffc:	umull	r7, r2, r7, r9
   3c000:	adc	r4, r8, sl
   3c004:	mla	r2, r4, r9, r2
   3c008:	adds	r7, r7, r5
   3c00c:	adc	r2, r2, r1
   3c010:	lsl	r4, r7, #31
   3c014:	ldr	r1, [sp, #36]	; 0x24
   3c018:	orr	r4, r4, r2, lsr #1
   3c01c:	lsl	r2, r2, #31
   3c020:	orr	r2, r2, r7, lsr #1
   3c024:	umull	lr, r4, r4, r6
   3c028:	mla	r2, r2, r6, r4
   3c02c:	eor	r2, r2, r1
   3c030:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3c034:	eor	r9, lr, r1
   3c038:	movw	r1, #56283	; 0xdbdb
   3c03c:	movt	r1, #34376	; 0x8648
   3c040:	adds	r7, r9, ip
   3c044:	mov	ip, r2
   3c048:	adc	lr, r2, sl
   3c04c:	umull	r7, r2, r7, r1
   3c050:	mla	r2, lr, r1, r2
   3c054:	adds	r7, r7, r3
   3c058:	adc	r2, r2, r8
   3c05c:	lsl	r4, r7, #31
   3c060:	adds	r3, r3, r5
   3c064:	orr	r4, r4, r2, lsr #1
   3c068:	lsl	r2, r2, #31
   3c06c:	orr	r2, r2, r7, lsr #1
   3c070:	umull	r3, r7, r3, r6
   3c074:	umull	r1, r4, r4, r6
   3c078:	mla	lr, r2, r6, r4
   3c07c:	ldr	r2, [sp, #24]
   3c080:	str	r1, [fp, #-32]	; 0xffffffe0
   3c084:	adc	r4, r8, r2
   3c088:	adds	r1, r9, r3
   3c08c:	movw	r8, #56283	; 0xdbdb
   3c090:	mla	r4, r4, r6, r7
   3c094:	lsl	r7, r1, #31
   3c098:	movt	r8, #34376	; 0x8648
   3c09c:	ldr	r6, [sp, #4]
   3c0a0:	adc	r3, ip, r4
   3c0a4:	orr	r7, r7, r3, lsr #1
   3c0a8:	lsl	r3, r3, #31
   3c0ac:	orr	r1, r3, r1, lsr #1
   3c0b0:	eor	r3, sl, r2
   3c0b4:	ldr	r2, [sp, #32]
   3c0b8:	ldr	sl, [sp]
   3c0bc:	umull	r7, r4, r7, r8
   3c0c0:	mla	r1, r1, r8, r4
   3c0c4:	ldr	r4, [sp, #8]
   3c0c8:	eor	r2, r2, r5
   3c0cc:	movw	r5, #49211	; 0xc03b
   3c0d0:	eor	r2, r2, r7
   3c0d4:	movt	r5, #31710	; 0x7bde
   3c0d8:	eor	r1, r3, r1
   3c0dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3c0e0:	eor	r1, r1, lr
   3c0e4:	eor	r2, r2, r3
   3c0e8:	adds	sl, r2, sl
   3c0ec:	adc	r4, r1, r4
   3c0f0:	sub	r1, r6, r0
   3c0f4:	cmp	r1, #16
   3c0f8:	blt	3c244 <cmetrohash64_1@@Base+0x478>
   3c0fc:	ldr	r1, [r0, #8]
   3c100:	ldr	r2, [r0, #12]
   3c104:	ldr	r7, [r0]
   3c108:	ldr	lr, [r0, #4]
   3c10c:	str	r4, [sp, #8]
   3c110:	movw	r9, #18043	; 0x467b
   3c114:	str	sl, [sp]
   3c118:	movt	r9, #12846	; 0x322e
   3c11c:	umull	r1, r3, r1, r8
   3c120:	mla	r2, r2, r8, r3
   3c124:	adds	r1, r1, sl
   3c128:	adc	r2, r2, r4
   3c12c:	lsl	r3, r2, #31
   3c130:	orr	ip, r3, r1, lsr #1
   3c134:	lsl	r1, r1, #31
   3c138:	orr	r6, r1, r2, lsr #1
   3c13c:	umull	r3, r2, r6, r5
   3c140:	mla	r1, ip, r5, r2
   3c144:	mov	r2, r0
   3c148:	str	r1, [fp, #-32]	; 0xffffffe0
   3c14c:	movw	r1, #37345	; 0x91e1
   3c150:	movt	r1, #51258	; 0xc83a
   3c154:	umull	r7, r4, r7, r1
   3c158:	mov	r0, r1
   3c15c:	mov	r0, r2
   3c160:	add	r0, r0, #16
   3c164:	mla	r5, lr, r1, r4
   3c168:	ldr	r1, [sp, #8]
   3c16c:	adds	r7, r7, sl
   3c170:	lsl	r4, r7, #31
   3c174:	adc	r5, r5, r1
   3c178:	mov	r1, #1610612736	; 0x60000000
   3c17c:	orr	r4, r4, r5, lsr #1
   3c180:	umull	lr, r2, r4, r1
   3c184:	movw	r1, #51407	; 0xc8cf
   3c188:	movt	r1, #17989	; 0x4645
   3c18c:	mla	r1, r4, r1, r2
   3c190:	lsl	r2, r5, #31
   3c194:	orr	r2, r2, r7, lsr #1
   3c198:	add	r5, r2, r2, lsl #1
   3c19c:	add	r1, r1, r5, lsl #29
   3c1a0:	umull	r7, r5, r4, r9
   3c1a4:	movw	r7, #42186	; 0xa4ca
   3c1a8:	movt	r7, #26887	; 0x6907
   3c1ac:	mla	r5, r4, r7, r5
   3c1b0:	mla	r5, r2, r9, r5
   3c1b4:	ldr	r9, [fp, #-32]	; 0xffffffe0
   3c1b8:	orr	r5, lr, r5, lsr #3
   3c1bc:	mov	lr, r8
   3c1c0:	adds	r7, r3, r5
   3c1c4:	movw	r5, #30400	; 0x76c0
   3c1c8:	str	r7, [sp, #36]	; 0x24
   3c1cc:	umull	sl, r7, r4, r8
   3c1d0:	adc	r1, r9, r1
   3c1d4:	movt	r5, #50814	; 0xc67e
   3c1d8:	mla	r2, r2, r8, r7
   3c1dc:	eor	r8, r1, r2
   3c1e0:	mov	r2, #-536870912	; 0xe0000000
   3c1e4:	umull	r2, r7, r6, r2
   3c1e8:	mla	r5, r6, r5, r7
   3c1ec:	movw	r7, #46599	; 0xb607
   3c1f0:	movt	r7, #13299	; 0x33f3
   3c1f4:	umull	r1, r4, r6, r7
   3c1f8:	movw	r1, #45150	; 0xb05e
   3c1fc:	sub	r5, r5, ip, lsl #29
   3c200:	movt	r1, #5864	; 0x16e8
   3c204:	mla	r1, r6, r1, r4
   3c208:	ldr	r6, [sp, #4]
   3c20c:	ldr	r4, [sp, #8]
   3c210:	mla	r1, ip, r7, r1
   3c214:	orr	r1, r2, r1, lsr #3
   3c218:	ldr	r2, [sp, #36]	; 0x24
   3c21c:	eor	r2, r2, sl
   3c220:	ldr	sl, [sp]
   3c224:	adds	r1, r1, r2
   3c228:	adc	r2, r5, r8
   3c22c:	eor	r1, r1, r3
   3c230:	eor	r2, r2, r9
   3c234:	adds	sl, r1, sl
   3c238:	sub	r1, r6, r0
   3c23c:	adc	r4, r2, r4
   3c240:	b	3c248 <cmetrohash64_1@@Base+0x47c>
   3c244:	mov	lr, r8
   3c248:	movw	ip, #28837	; 0x70a5
   3c24c:	cmp	r1, #8
   3c250:	movt	ip, #12120	; 0x2f58
   3c254:	bge	3c334 <cmetrohash64_1@@Base+0x568>
   3c258:	cmp	r1, #4
   3c25c:	bge	3c384 <cmetrohash64_1@@Base+0x5b8>
   3c260:	cmp	r1, #2
   3c264:	blt	3c2a0 <cmetrohash64_1@@Base+0x4d4>
   3c268:	ldrb	r1, [r0]
   3c26c:	ldrb	r2, [r0, #1]
   3c270:	add	r0, r0, #2
   3c274:	orr	r1, r1, r2, lsl #8
   3c278:	umlal	sl, r4, r1, ip
   3c27c:	lsr	r2, sl, #13
   3c280:	lsl	r1, sl, #19
   3c284:	orr	r2, r2, r4, lsl #19
   3c288:	orr	r1, r1, r4, lsr #13
   3c28c:	umull	r2, r3, r2, lr
   3c290:	mla	r1, r1, lr, r3
   3c294:	eor	sl, r2, sl
   3c298:	eor	r4, r1, r4
   3c29c:	sub	r1, r6, r0
   3c2a0:	ldr	r2, [fp, #12]
   3c2a4:	cmp	r1, #1
   3c2a8:	blt	3c2d4 <cmetrohash64_1@@Base+0x508>
   3c2ac:	ldrb	r0, [r0]
   3c2b0:	umlal	sl, r4, r0, ip
   3c2b4:	lsr	r1, sl, #25
   3c2b8:	lsl	r0, sl, #7
   3c2bc:	orr	r1, r1, r4, lsl #7
   3c2c0:	orr	r0, r0, r4, lsr #25
   3c2c4:	umull	r1, r3, r1, lr
   3c2c8:	mla	r0, r0, lr, r3
   3c2cc:	eor	sl, r1, sl
   3c2d0:	eor	r4, r0, r4
   3c2d4:	lsl	r0, sl, #31
   3c2d8:	movw	r1, #37345	; 0x91e1
   3c2dc:	lsl	r7, r4, #31
   3c2e0:	orr	r0, r0, r4, lsr #1
   3c2e4:	movt	r1, #51258	; 0xc83a
   3c2e8:	orr	r7, r7, sl, lsr #1
   3c2ec:	eor	r0, r0, sl
   3c2f0:	mov	r6, r1
   3c2f4:	eor	r7, r7, r4
   3c2f8:	movw	r4, #18672	; 0x48f0
   3c2fc:	umull	r1, r3, r0, r1
   3c300:	movt	r4, #25629	; 0x641d
   3c304:	mla	r3, r7, r6, r3
   3c308:	mov	r6, #-2147483648	; 0x80000000
   3c30c:	umull	r6, r5, r0, r6
   3c310:	mla	r0, r0, r4, r5
   3c314:	add	r0, r0, r7, lsl #31
   3c318:	eor	r0, r0, r3
   3c31c:	str	r0, [r2, #4]
   3c320:	orr	r0, r6, r3, lsr #1
   3c324:	eor	r0, r0, r1
   3c328:	str	r0, [r2]
   3c32c:	sub	sp, fp, #28
   3c330:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3c334:	ldr	r1, [r0]
   3c338:	ldr	r2, [r0, #4]
   3c33c:	add	r0, r0, #8
   3c340:	umull	r1, r3, r1, ip
   3c344:	mla	r2, r2, ip, r3
   3c348:	adds	r1, r1, sl
   3c34c:	adc	r2, r2, r4
   3c350:	lsl	r3, r1, #31
   3c354:	mov	r4, r6
   3c358:	orr	r3, r3, r2, lsr #1
   3c35c:	lsl	r6, r2, #31
   3c360:	orr	r6, r6, r1, lsr #1
   3c364:	umull	r3, r7, r3, lr
   3c368:	mla	r7, r6, lr, r7
   3c36c:	mov	r6, r4
   3c370:	eor	sl, r3, r1
   3c374:	sub	r1, r6, r0
   3c378:	eor	r4, r7, r2
   3c37c:	cmp	r1, #4
   3c380:	blt	3c260 <cmetrohash64_1@@Base+0x494>
   3c384:	ldr	r1, [r0], #4
   3c388:	umlal	sl, r4, r1, ip
   3c38c:	lsr	r2, sl, #15
   3c390:	lsl	r1, sl, #17
   3c394:	orr	r2, r2, r4, lsl #17
   3c398:	orr	r1, r1, r4, lsr #15
   3c39c:	umull	r2, r3, r2, lr
   3c3a0:	mla	r1, r1, lr, r3
   3c3a4:	eor	sl, r2, sl
   3c3a8:	eor	r4, r1, r4
   3c3ac:	sub	r1, r6, r0
   3c3b0:	cmp	r1, #2
   3c3b4:	bge	3c268 <cmetrohash64_1@@Base+0x49c>
   3c3b8:	b	3c2a0 <cmetrohash64_1@@Base+0x4d4>

0003c3bc <cmetrohash64_2@@Base>:
   3c3bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3c3c0:	add	fp, sp, #28
   3c3c4:	sub	sp, sp, #36	; 0x24
   3c3c8:	ldr	r1, [fp, #8]
   3c3cc:	movw	sl, #6389	; 0x18f5
   3c3d0:	mov	r7, r2
   3c3d4:	mov	r6, r3
   3c3d8:	movw	r5, #52149	; 0xcbb5
   3c3dc:	movw	r4, #827	; 0x33b
   3c3e0:	add	ip, r0, r2
   3c3e4:	movt	sl, #54992	; 0xd6d0
   3c3e8:	movt	r5, #56292	; 0xdbe4
   3c3ec:	movt	r4, #41642	; 0xa2aa
   3c3f0:	str	ip, [sp, #12]
   3c3f4:	umlal	r7, r6, r1, sl
   3c3f8:	movw	r1, #13310	; 0x33fe
   3c3fc:	movt	r1, #21180	; 0x52bc
   3c400:	adds	r5, r7, r5
   3c404:	movw	r7, #12225	; 0x2fc1
   3c408:	adc	lr, r6, r1
   3c40c:	movw	r6, #23337	; 0x5b29
   3c410:	subs	r1, r2, #32
   3c414:	movt	r7, #25241	; 0x6299
   3c418:	movt	r6, #12476	; 0x30bc
   3c41c:	sbcs	r1, r3, #0
   3c420:	bcc	3c6bc <cmetrohash64_2@@Base+0x300>
   3c424:	sub	r1, ip, #32
   3c428:	mov	r9, r0
   3c42c:	mov	ip, r5
   3c430:	mov	r8, lr
   3c434:	mov	r0, r5
   3c438:	mov	r4, lr
   3c43c:	mov	r6, lr
   3c440:	mov	r2, lr
   3c444:	str	lr, [sp, #28]
   3c448:	str	r5, [sp, #32]
   3c44c:	str	r5, [sp, #4]
   3c450:	str	lr, [sp]
   3c454:	str	r1, [sp, #16]
   3c458:	ldr	r1, [r9, #4]
   3c45c:	ldr	r7, [r9, #8]
   3c460:	movw	r2, #827	; 0x33b
   3c464:	str	r6, [sp, #20]
   3c468:	ldr	lr, [r9]
   3c46c:	movt	r2, #41642	; 0xa2aa
   3c470:	mov	r3, r2
   3c474:	str	r1, [sp, #24]
   3c478:	mov	r1, r5
   3c47c:	ldr	r5, [r9, #12]
   3c480:	umull	r7, r2, r7, r2
   3c484:	mla	r2, r5, r3, r2
   3c488:	adds	r7, r7, r0
   3c48c:	ldr	r0, [sp, #28]
   3c490:	movw	r3, #23337	; 0x5b29
   3c494:	lsl	r6, r7, #3
   3c498:	lsr	r7, r7, #29
   3c49c:	movt	r3, #12476	; 0x30bc
   3c4a0:	adc	r2, r2, r4
   3c4a4:	orr	r6, r6, r2, lsr #29
   3c4a8:	orr	r2, r7, r2, lsl #3
   3c4ac:	adds	r5, r2, ip
   3c4b0:	ldr	r2, [r9, #24]
   3c4b4:	adc	r4, r6, r0
   3c4b8:	mov	r6, r3
   3c4bc:	umull	r2, r7, r2, r3
   3c4c0:	ldr	r3, [r9, #28]
   3c4c4:	mla	r3, r3, r6, r7
   3c4c8:	adds	r2, r2, ip
   3c4cc:	lsl	r7, r2, #3
   3c4d0:	lsr	r2, r2, #29
   3c4d4:	adc	r3, r3, r0
   3c4d8:	mov	r0, r5
   3c4dc:	orr	r2, r2, r3, lsl #3
   3c4e0:	orr	r7, r7, r3, lsr #29
   3c4e4:	adds	ip, r2, r5
   3c4e8:	adc	r2, r7, r4
   3c4ec:	ldr	r7, [sp, #24]
   3c4f0:	str	r2, [sp, #28]
   3c4f4:	umull	r2, r3, lr, sl
   3c4f8:	ldr	lr, [sp, #32]
   3c4fc:	mla	r3, r7, sl, r3
   3c500:	ldr	r7, [r9, #20]
   3c504:	adds	r2, r2, r1
   3c508:	ldr	r1, [sp, #20]
   3c50c:	adc	r1, r3, r1
   3c510:	lsl	r3, r2, #3
   3c514:	lsr	r2, r2, #29
   3c518:	orr	r3, r3, r1, lsr #29
   3c51c:	orr	r1, r2, r1, lsl #3
   3c520:	ldr	r2, [r9, #16]
   3c524:	add	r9, r9, #32
   3c528:	adds	r5, r1, lr
   3c52c:	movw	r1, #12225	; 0x2fc1
   3c530:	movt	r1, #25241	; 0x6299
   3c534:	adc	r6, r3, r8
   3c538:	umull	r2, r3, r2, r1
   3c53c:	mla	r3, r7, r1, r3
   3c540:	adds	r2, r2, lr
   3c544:	lsl	r7, r2, #3
   3c548:	adc	r3, r3, r8
   3c54c:	lsr	r2, r2, #29
   3c550:	orr	r2, r2, r3, lsl #3
   3c554:	orr	r7, r7, r3, lsr #29
   3c558:	adds	r1, r2, r5
   3c55c:	str	r1, [sp, #32]
   3c560:	ldr	r1, [sp, #16]
   3c564:	adc	r8, r7, r6
   3c568:	cmp	r9, r1
   3c56c:	bls	3c458 <cmetrohash64_2@@Base+0x9c>
   3c570:	ldr	lr, [sp, #28]
   3c574:	adds	r2, ip, r5
   3c578:	movw	r1, #827	; 0x33b
   3c57c:	str	r0, [sp, #8]
   3c580:	str	ip, [sp, #20]
   3c584:	str	r5, [sp, #24]
   3c588:	umull	r2, r7, r2, sl
   3c58c:	movt	r1, #41642	; 0xa2aa
   3c590:	adc	r3, lr, r6
   3c594:	mla	r3, r3, sl, r7
   3c598:	adds	r2, r2, r0
   3c59c:	mov	r0, r1
   3c5a0:	lsl	r7, r2, #2
   3c5a4:	lsr	r2, r2, #30
   3c5a8:	adc	r3, r3, r4
   3c5ac:	orr	r2, r2, r3, lsl #2
   3c5b0:	orr	r7, r7, r3, lsr #30
   3c5b4:	umull	r2, r3, r2, r1
   3c5b8:	mla	r3, r7, r1, r3
   3c5bc:	mov	r1, r4
   3c5c0:	eor	ip, r3, r8
   3c5c4:	ldr	r3, [sp, #32]
   3c5c8:	ldr	r8, [sp, #8]
   3c5cc:	eor	r2, r2, r3
   3c5d0:	adds	r7, r2, r8
   3c5d4:	umull	r7, r3, r7, r0
   3c5d8:	adc	r4, ip, r4
   3c5dc:	mla	r3, r4, r0, r3
   3c5e0:	adds	r4, r7, r5
   3c5e4:	lsl	r7, r4, #2
   3c5e8:	adc	r3, r3, r6
   3c5ec:	lsr	r4, r4, #30
   3c5f0:	orr	r7, r7, r3, lsr #30
   3c5f4:	orr	r3, r4, r3, lsl #2
   3c5f8:	umull	r3, r4, r3, sl
   3c5fc:	mla	r4, r7, sl, r4
   3c600:	eor	lr, r4, lr
   3c604:	ldr	r4, [sp, #20]
   3c608:	eor	r3, r3, r4
   3c60c:	adds	r5, r3, r8
   3c610:	umull	r5, r7, r5, r0
   3c614:	adc	r4, lr, r1
   3c618:	eor	r1, r1, r6
   3c61c:	mla	r4, r4, r0, r7
   3c620:	ldr	r0, [sp, #24]
   3c624:	adds	r5, r5, r2
   3c628:	adc	r4, r4, ip
   3c62c:	lsl	r7, r5, #2
   3c630:	lsr	r5, r5, #30
   3c634:	orr	r7, r7, r4, lsr #30
   3c638:	orr	r4, r5, r4, lsl #2
   3c63c:	adds	r2, r2, r0
   3c640:	umull	r8, r5, r4, sl
   3c644:	umull	r2, r4, r2, sl
   3c648:	mla	r5, r7, sl, r5
   3c64c:	adc	r7, ip, r6
   3c650:	ldr	ip, [sp, #12]
   3c654:	movw	r6, #23337	; 0x5b29
   3c658:	mla	r7, r7, sl, r4
   3c65c:	movw	r4, #827	; 0x33b
   3c660:	movt	r6, #12476	; 0x30bc
   3c664:	adds	r2, r3, r2
   3c668:	movt	r4, #41642	; 0xa2aa
   3c66c:	adc	r3, lr, r7
   3c670:	lsl	r7, r2, #2
   3c674:	lsr	r2, r2, #30
   3c678:	ldr	lr, [sp]
   3c67c:	orr	r2, r2, r3, lsl #2
   3c680:	orr	r7, r7, r3, lsr #30
   3c684:	umull	r2, r3, r2, r4
   3c688:	mla	r3, r7, r4, r3
   3c68c:	movw	r7, #12225	; 0x2fc1
   3c690:	movt	r7, #25241	; 0x6299
   3c694:	eor	r1, r1, r3
   3c698:	ldr	r3, [sp, #8]
   3c69c:	eor	r1, r1, r5
   3c6a0:	ldr	r5, [sp, #4]
   3c6a4:	eor	r3, r3, r0
   3c6a8:	mov	r0, r9
   3c6ac:	eor	r2, r3, r2
   3c6b0:	eor	r2, r2, r8
   3c6b4:	adds	r5, r2, r5
   3c6b8:	adc	lr, r1, lr
   3c6bc:	movw	r9, #50575	; 0xc58f
   3c6c0:	sub	r1, ip, r0
   3c6c4:	movt	r9, #43271	; 0xa907
   3c6c8:	cmp	r1, #16
   3c6cc:	blt	3c824 <cmetrohash64_2@@Base+0x468>
   3c6d0:	ldr	r4, [r0, #12]
   3c6d4:	ldr	r1, [r0]
   3c6d8:	ldr	r3, [r0, #4]
   3c6dc:	mov	r2, r6
   3c6e0:	movw	r6, #50575	; 0xc58f
   3c6e4:	ldr	r8, [r0, #8]
   3c6e8:	add	r0, r0, #16
   3c6ec:	movt	r6, #43271	; 0xa907
   3c6f0:	str	r4, [sp, #32]
   3c6f4:	umull	r1, r4, r1, r7
   3c6f8:	mla	r3, r3, r7, r4
   3c6fc:	adds	r1, r1, r5
   3c700:	adc	sl, r3, lr
   3c704:	lsr	r4, r1, #29
   3c708:	mov	r3, #1073741824	; 0x40000000
   3c70c:	lsl	r1, r1, #3
   3c710:	orr	r4, r4, sl, lsl #3
   3c714:	orr	r1, r1, sl, lsr #29
   3c718:	mov	sl, r5
   3c71c:	umull	r9, r3, r4, r3
   3c720:	mla	r3, r4, r6, r3
   3c724:	mov	r6, #1073741824	; 0x40000000
   3c728:	mla	ip, r1, r6, r3
   3c72c:	movw	r3, #5693	; 0x163d
   3c730:	movt	r3, #42015	; 0xa41f
   3c734:	umull	r5, r6, r4, r3
   3c738:	movw	r5, #4606	; 0x11fe
   3c73c:	movt	r5, #10469	; 0x28e5
   3c740:	mla	r5, r4, r5, r6
   3c744:	mla	r5, r1, r3, r5
   3c748:	ldr	r3, [sp, #32]
   3c74c:	orr	r9, r9, r5, lsr #2
   3c750:	umull	r5, r6, r8, r7
   3c754:	mla	r6, r3, r7, r6
   3c758:	adds	r5, r5, sl
   3c75c:	lsl	r7, r5, #3
   3c760:	adc	r6, r6, lr
   3c764:	lsr	r5, r5, #29
   3c768:	orr	r5, r5, r6, lsl #3
   3c76c:	orr	r7, r7, r6, lsr #29
   3c770:	umull	r8, r3, r5, r2
   3c774:	mla	r3, r7, r2, r3
   3c778:	adds	r6, r8, r9
   3c77c:	str	r6, [sp, #32]
   3c780:	umull	r6, r4, r4, r2
   3c784:	adc	ip, r3, ip
   3c788:	mla	r1, r1, r2, r4
   3c78c:	str	r6, [sp, #28]
   3c790:	eor	r9, ip, r1
   3c794:	mov	r1, #1073741824	; 0x40000000
   3c798:	umull	r2, r4, r5, r1
   3c79c:	movw	r1, #35620	; 0x8b24
   3c7a0:	movt	r1, #22827	; 0x592b
   3c7a4:	mla	r1, r5, r1, r4
   3c7a8:	movw	r4, #11409	; 0x2c91
   3c7ac:	movt	r4, #25774	; 0x64ae
   3c7b0:	add	r6, r1, r7, lsl #30
   3c7b4:	mov	r1, lr
   3c7b8:	umull	ip, lr, r5, r4
   3c7bc:	movw	r4, #11461	; 0x2cc5
   3c7c0:	ldr	ip, [sp, #12]
   3c7c4:	movt	r4, #2375	; 0x947
   3c7c8:	mla	r5, r5, r4, lr
   3c7cc:	mov	lr, r1
   3c7d0:	movw	r1, #11409	; 0x2c91
   3c7d4:	movw	r4, #827	; 0x33b
   3c7d8:	movt	r1, #25774	; 0x64ae
   3c7dc:	movt	r4, #41642	; 0xa2aa
   3c7e0:	mla	r7, r7, r1, r5
   3c7e4:	ldr	r1, [sp, #32]
   3c7e8:	mov	r5, sl
   3c7ec:	movw	sl, #6389	; 0x18f5
   3c7f0:	movt	sl, #54992	; 0xd6d0
   3c7f4:	orr	r2, r2, r7, lsr #2
   3c7f8:	ldr	r7, [sp, #28]
   3c7fc:	eor	r7, r1, r7
   3c800:	adds	r2, r2, r7
   3c804:	adc	r1, r6, r9
   3c808:	movw	r9, #50575	; 0xc58f
   3c80c:	eor	r2, r2, r8
   3c810:	movt	r9, #43271	; 0xa907
   3c814:	eor	r1, r1, r3
   3c818:	adds	r5, r2, r5
   3c81c:	adc	lr, r1, lr
   3c820:	sub	r1, ip, r0
   3c824:	cmp	r1, #8
   3c828:	blt	3c880 <cmetrohash64_2@@Base+0x4c4>
   3c82c:	ldr	r1, [r0]
   3c830:	movw	r8, #23337	; 0x5b29
   3c834:	ldr	r2, [r0, #4]
   3c838:	add	r0, r0, #8
   3c83c:	movt	r8, #12476	; 0x30bc
   3c840:	umull	r1, r3, r1, r8
   3c844:	mla	r2, r2, r8, r3
   3c848:	adds	r1, r1, r5
   3c84c:	adc	r2, r2, lr
   3c850:	lsl	r3, r1, #28
   3c854:	orr	r3, r3, r2, lsr #4
   3c858:	lsl	r6, r2, #28
   3c85c:	orr	r6, r6, r1, lsr #4
   3c860:	umull	r3, r7, r3, r4
   3c864:	mla	r7, r6, r4, r7
   3c868:	eor	r5, r3, r1
   3c86c:	sub	r1, ip, r0
   3c870:	eor	lr, r7, r2
   3c874:	cmp	r1, #4
   3c878:	bge	3c890 <cmetrohash64_2@@Base+0x4d4>
   3c87c:	b	3c8bc <cmetrohash64_2@@Base+0x500>
   3c880:	movw	r8, #23337	; 0x5b29
   3c884:	movt	r8, #12476	; 0x30bc
   3c888:	cmp	r1, #4
   3c88c:	blt	3c8bc <cmetrohash64_2@@Base+0x500>
   3c890:	ldr	r1, [r0], #4
   3c894:	umlal	r5, lr, r1, r8
   3c898:	lsr	r2, r5, #15
   3c89c:	lsl	r1, r5, #17
   3c8a0:	orr	r2, r2, lr, lsl #17
   3c8a4:	orr	r1, r1, lr, lsr #15
   3c8a8:	umull	r2, r3, r2, r4
   3c8ac:	mla	r1, r1, r4, r3
   3c8b0:	eor	r5, r2, r5
   3c8b4:	eor	lr, r1, lr
   3c8b8:	sub	r1, ip, r0
   3c8bc:	cmp	r1, #2
   3c8c0:	blt	3c8fc <cmetrohash64_2@@Base+0x540>
   3c8c4:	ldrb	r1, [r0]
   3c8c8:	ldrb	r2, [r0, #1]
   3c8cc:	add	r0, r0, #2
   3c8d0:	orr	r1, r1, r2, lsl #8
   3c8d4:	umlal	r5, lr, r1, r8
   3c8d8:	lsr	r2, r5, #15
   3c8dc:	lsl	r1, r5, #17
   3c8e0:	orr	r2, r2, lr, lsl #17
   3c8e4:	orr	r1, r1, lr, lsr #15
   3c8e8:	umull	r2, r3, r2, r4
   3c8ec:	mla	r1, r1, r4, r3
   3c8f0:	eor	r5, r2, r5
   3c8f4:	eor	lr, r1, lr
   3c8f8:	sub	r1, ip, r0
   3c8fc:	ldr	ip, [fp, #12]
   3c900:	cmp	r1, #1
   3c904:	blt	3c930 <cmetrohash64_2@@Base+0x574>
   3c908:	ldrb	r0, [r0]
   3c90c:	umlal	r5, lr, r0, r8
   3c910:	lsr	r1, r5, #23
   3c914:	lsl	r0, r5, #9
   3c918:	orr	r1, r1, lr, lsl #9
   3c91c:	orr	r0, r0, lr, lsr #23
   3c920:	umull	r1, r2, r1, r4
   3c924:	mla	r0, r0, r4, r2
   3c928:	eor	r5, r1, r5
   3c92c:	eor	lr, r0, lr
   3c930:	lsr	r1, r5, #28
   3c934:	movw	r6, #536	; 0x218
   3c938:	mov	r7, #1073741824	; 0x40000000
   3c93c:	lsl	r0, r5, #4
   3c940:	orr	r1, r1, lr, lsl #4
   3c944:	movt	r6, #3449	; 0xd79
   3c948:	orr	r0, r0, lr, lsr #28
   3c94c:	eor	r1, r1, r5
   3c950:	adds	r5, r7, #-1073741824	; 0xc0000000
   3c954:	eor	r0, r0, lr
   3c958:	umull	r4, r7, r1, r5
   3c95c:	umull	r2, r3, r1, sl
   3c960:	adc	r6, r9, r6
   3c964:	mla	r1, r1, r6, r7
   3c968:	mla	r3, r0, sl, r3
   3c96c:	mla	r0, r0, r5, r1
   3c970:	orr	r0, r0, r3, lsr #29
   3c974:	eor	r0, r0, r3
   3c978:	str	r0, [ip, #4]
   3c97c:	lsr	r0, r2, #29
   3c980:	orr	r0, r0, r3, lsl #3
   3c984:	orr	r0, r0, r4
   3c988:	eor	r0, r0, r2
   3c98c:	str	r0, [ip]
   3c990:	sub	sp, fp, #28
   3c994:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003c998 <fb_name_table_clear@@Base>:
   3c998:	push	{r4, sl, fp, lr}
   3c99c:	add	fp, sp, #8
   3c9a0:	mov	r4, r0
   3c9a4:	ldr	r0, [r0]
   3c9a8:	cmp	r0, #0
   3c9ac:	beq	3c9b4 <fb_name_table_clear@@Base+0x1c>
   3c9b0:	bl	147fc <free@plt>
   3c9b4:	vmov.i32	q8, #0	; 0x00000000
   3c9b8:	vst1.32	{d16-d17}, [r4]
   3c9bc:	pop	{r4, sl, fp, pc}

0003c9c0 <fb_name_table_destroy@@Base>:
   3c9c0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3c9c4:	add	fp, sp, #24
   3c9c8:	mov	r4, r0
   3c9cc:	cmp	r1, #0
   3c9d0:	beq	3ca20 <fb_name_table_destroy@@Base+0x60>
   3c9d4:	ldr	r0, [r4, #12]
   3c9d8:	cmp	r0, #0
   3c9dc:	beq	3ca20 <fb_name_table_destroy@@Base+0x60>
   3c9e0:	ldr	r7, [r4]
   3c9e4:	mov	r8, r2
   3c9e8:	mov	r6, r1
   3c9ec:	mov	r5, #0
   3c9f0:	b	3ca00 <fb_name_table_destroy@@Base+0x40>
   3c9f4:	add	r5, r5, #1
   3c9f8:	cmp	r5, r0
   3c9fc:	bcs	3ca20 <fb_name_table_destroy@@Base+0x60>
   3ca00:	ldr	r1, [r7, r5, lsl #2]
   3ca04:	orr	r2, r1, #2
   3ca08:	cmp	r2, #2
   3ca0c:	beq	3c9f4 <fb_name_table_destroy@@Base+0x34>
   3ca10:	mov	r0, r8
   3ca14:	blx	r6
   3ca18:	ldr	r0, [r4, #12]
   3ca1c:	b	3c9f4 <fb_name_table_destroy@@Base+0x34>
   3ca20:	ldr	r0, [r4]
   3ca24:	cmp	r0, #0
   3ca28:	beq	3ca30 <fb_name_table_destroy@@Base+0x70>
   3ca2c:	bl	147fc <free@plt>
   3ca30:	vmov.i32	q8, #0	; 0x00000000
   3ca34:	vst1.32	{d16-d17}, [r4]
   3ca38:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0003ca3c <fb_name_table_init@@Base>:
   3ca3c:	push	{r4, r5, fp, lr}
   3ca40:	add	fp, sp, #8
   3ca44:	mov	r4, r0
   3ca48:	mov	r2, #4
   3ca4c:	mov	r0, #179	; 0xb3
   3ca50:	mul	r3, r2, r0
   3ca54:	mov	r5, r2
   3ca58:	lsl	r2, r2, #1
   3ca5c:	cmp	r1, r3, lsr #8
   3ca60:	bhi	3ca50 <fb_name_table_init@@Base+0x14>
   3ca64:	mov	r0, r5
   3ca68:	mov	r1, #4
   3ca6c:	bl	147cc <calloc@plt>
   3ca70:	cmp	r0, #0
   3ca74:	str	r0, [r4]
   3ca78:	mvneq	r0, #0
   3ca7c:	movne	r0, #0
   3ca80:	strne	r0, [r4, #4]
   3ca84:	strne	r0, [r4, #8]
   3ca88:	strne	r5, [r4, #12]
   3ca8c:	pop	{r4, r5, fp, pc}

0003ca90 <fb_name_table_resize@@Base>:
   3ca90:	b	3ca94 <fb_name_table_resize@@Base+0x4>
   3ca94:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3ca98:	add	fp, sp, #24
   3ca9c:	sub	sp, sp, #24
   3caa0:	mov	r4, r0
   3caa4:	ldr	r5, [r0]
   3caa8:	ldr	r0, [r0, #8]
   3caac:	mov	r2, #4
   3cab0:	cmp	r0, r1
   3cab4:	movhi	r1, r0
   3cab8:	mov	r0, #179	; 0xb3
   3cabc:	mul	r3, r2, r0
   3cac0:	mov	r6, r2
   3cac4:	lsl	r2, r2, #1
   3cac8:	cmp	r1, r3, lsr #8
   3cacc:	bhi	3cabc <fb_name_table_resize@@Base+0x2c>
   3cad0:	mov	r0, r6
   3cad4:	mov	r1, #4
   3cad8:	bl	147cc <calloc@plt>
   3cadc:	cmp	r0, #0
   3cae0:	str	r0, [sp, #8]
   3cae4:	beq	3cb50 <fb_name_table_resize@@Base+0xc0>
   3cae8:	mov	r7, #0
   3caec:	str	r6, [sp, #20]
   3caf0:	str	r7, [sp, #12]
   3caf4:	str	r7, [sp, #16]
   3caf8:	ldr	r0, [r4, #12]
   3cafc:	cmp	r0, #0
   3cb00:	beq	3cb60 <fb_name_table_resize@@Base+0xd0>
   3cb04:	mov	r8, #3
   3cb08:	add	r6, sp, #8
   3cb0c:	b	3cb1c <fb_name_table_resize@@Base+0x8c>
   3cb10:	add	r7, r7, #1
   3cb14:	cmp	r7, r0
   3cb18:	bcs	3cb5c <fb_name_table_resize@@Base+0xcc>
   3cb1c:	ldr	r3, [r5, r7, lsl #2]
   3cb20:	orr	r1, r3, #2
   3cb24:	cmp	r1, #2
   3cb28:	beq	3cb10 <fb_name_table_resize@@Base+0x80>
   3cb2c:	ldr	r2, [r3, #8]
   3cb30:	ldr	r9, [r3, #12]
   3cb34:	mov	r0, r6
   3cb38:	str	r8, [sp]
   3cb3c:	mov	r1, r2
   3cb40:	mov	r2, r9
   3cb44:	bl	3cb8c <fb_name_table_insert@@Base+0x4>
   3cb48:	ldr	r0, [r4, #12]
   3cb4c:	b	3cb10 <fb_name_table_resize@@Base+0x80>
   3cb50:	mvn	r0, #0
   3cb54:	sub	sp, fp, #24
   3cb58:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3cb5c:	ldr	r5, [r4]
   3cb60:	cmp	r5, #0
   3cb64:	beq	3cb70 <fb_name_table_resize@@Base+0xe0>
   3cb68:	mov	r0, r5
   3cb6c:	bl	147fc <free@plt>
   3cb70:	add	r0, sp, #8
   3cb74:	vld1.64	{d16-d17}, [r0]
   3cb78:	mov	r0, #0
   3cb7c:	vst1.32	{d16-d17}, [r4]
   3cb80:	sub	sp, fp, #24
   3cb84:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0003cb88 <fb_name_table_insert@@Base>:
   3cb88:	b	3cb8c <fb_name_table_insert@@Base+0x4>
   3cb8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3cb90:	add	fp, sp, #28
   3cb94:	sub	sp, sp, #36	; 0x24
   3cb98:	cmp	r3, #2
   3cb9c:	str	r1, [sp, #20]
   3cba0:	beq	3cd0c <fb_name_table_insert@@Base+0x184>
   3cba4:	mov	sl, r3
   3cba8:	cmp	r3, #1
   3cbac:	beq	3cd2c <fb_name_table_insert@@Base+0x1a4>
   3cbb0:	cmp	sl, #0
   3cbb4:	beq	3cd4c <fb_name_table_insert@@Base+0x1c4>
   3cbb8:	mov	r7, r0
   3cbbc:	ldr	r0, [r0, #8]
   3cbc0:	mov	r1, #179	; 0xb3
   3cbc4:	mov	r6, r2
   3cbc8:	ldr	r4, [r7, #12]
   3cbcc:	mul	r1, r4, r1
   3cbd0:	cmp	r0, r1, lsr #8
   3cbd4:	bcc	3cbf0 <fb_name_table_insert@@Base+0x68>
   3cbd8:	lsl	r1, r0, #1
   3cbdc:	mov	r0, r7
   3cbe0:	bl	3ca94 <fb_name_table_resize@@Base+0x4>
   3cbe4:	cmp	r0, #0
   3cbe8:	bne	3cd6c <fb_name_table_insert@@Base+0x1e4>
   3cbec:	ldr	r4, [r7, #12]
   3cbf0:	add	r0, sp, #24
   3cbf4:	ldr	r9, [r7]
   3cbf8:	movw	r1, #15186	; 0x3b52
   3cbfc:	mov	r2, r6
   3cc00:	mov	r3, #0
   3cc04:	mov	r8, #0
   3cc08:	str	r0, [sp, #4]
   3cc0c:	ldr	r0, [sp, #20]
   3cc10:	movt	r1, #12137	; 0x2f69
   3cc14:	str	r1, [sp]
   3cc18:	bl	3bdcc <cmetrohash64_1@@Base>
   3cc1c:	ldr	r2, [fp, #8]
   3cc20:	ldr	r1, [sp, #24]
   3cc24:	sub	r5, r4, #1
   3cc28:	orr	r2, r2, #1
   3cc2c:	and	r0, r5, r1
   3cc30:	cmp	r2, #3
   3cc34:	bne	3cc64 <fb_name_table_insert@@Base+0xdc>
   3cc38:	ldr	r2, [r7, #8]
   3cc3c:	add	r2, r2, #1
   3cc40:	str	r2, [r7, #8]
   3cc44:	mov	r7, r9
   3cc48:	add	r1, r1, #1
   3cc4c:	ldr	r0, [r7, r0, lsl #2]!
   3cc50:	orr	r0, r0, #2
   3cc54:	cmp	r0, #2
   3cc58:	beq	3ccd4 <fb_name_table_insert@@Base+0x14c>
   3cc5c:	and	r0, r1, r5
   3cc60:	b	3cc44 <fb_name_table_insert@@Base+0xbc>
   3cc64:	str	sl, [sp, #16]
   3cc68:	add	sl, r1, #1
   3cc6c:	str	r7, [sp, #12]
   3cc70:	b	3cc84 <fb_name_table_insert@@Base+0xfc>
   3cc74:	cmp	r8, #0
   3cc78:	moveq	r8, r7
   3cc7c:	and	r0, sl, r5
   3cc80:	add	sl, sl, #1
   3cc84:	mov	r7, r9
   3cc88:	ldr	r4, [r7, r0, lsl #2]!
   3cc8c:	cmp	r4, #2
   3cc90:	beq	3cc74 <fb_name_table_insert@@Base+0xec>
   3cc94:	cmp	r4, #0
   3cc98:	beq	3ccdc <fb_name_table_insert@@Base+0x154>
   3cc9c:	ldr	r0, [r4, #12]
   3cca0:	cmp	r0, r6
   3cca4:	bne	3cc7c <fb_name_table_insert@@Base+0xf4>
   3cca8:	ldr	r1, [r4, #8]
   3ccac:	ldr	r0, [sp, #20]
   3ccb0:	mov	r2, r6
   3ccb4:	bl	148a4 <bcmp@plt>
   3ccb8:	cmp	r0, #0
   3ccbc:	bne	3cc7c <fb_name_table_insert@@Base+0xf4>
   3ccc0:	ldr	r0, [fp, #8]
   3ccc4:	ldr	sl, [sp, #16]
   3ccc8:	cmp	r0, #0
   3cccc:	streq	sl, [r7]
   3ccd0:	b	3cd00 <fb_name_table_insert@@Base+0x178>
   3ccd4:	mov	r4, #0
   3ccd8:	b	3ccfc <fb_name_table_insert@@Base+0x174>
   3ccdc:	ldr	r1, [sp, #12]
   3cce0:	ldr	sl, [sp, #16]
   3cce4:	cmp	r8, #0
   3cce8:	mov	r4, #0
   3ccec:	movne	r7, r8
   3ccf0:	ldr	r0, [r1, #8]
   3ccf4:	add	r0, r0, #1
   3ccf8:	str	r0, [r1, #8]
   3ccfc:	str	sl, [r7]
   3cd00:	mov	r0, r4
   3cd04:	sub	sp, fp, #28
   3cd08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3cd0c:	ldr	r0, [pc, #140]	; 3cda0 <fb_name_table_insert@@Base+0x218>
   3cd10:	ldr	r1, [pc, #140]	; 3cda4 <fb_name_table_insert@@Base+0x21c>
   3cd14:	ldr	r3, [pc, #140]	; 3cda8 <fb_name_table_insert@@Base+0x220>
   3cd18:	mov	r2, #115	; 0x73
   3cd1c:	add	r0, pc, r0
   3cd20:	add	r1, pc, r1
   3cd24:	add	r3, pc, r3
   3cd28:	bl	1497c <__assert_fail@plt>
   3cd2c:	ldr	r0, [pc, #120]	; 3cdac <fb_name_table_insert@@Base+0x224>
   3cd30:	ldr	r1, [pc, #120]	; 3cdb0 <fb_name_table_insert@@Base+0x228>
   3cd34:	ldr	r3, [pc, #120]	; 3cdb4 <fb_name_table_insert@@Base+0x22c>
   3cd38:	mov	r2, #116	; 0x74
   3cd3c:	add	r0, pc, r0
   3cd40:	add	r1, pc, r1
   3cd44:	add	r3, pc, r3
   3cd48:	bl	1497c <__assert_fail@plt>
   3cd4c:	ldr	r0, [pc, #64]	; 3cd94 <fb_name_table_insert@@Base+0x20c>
   3cd50:	ldr	r1, [pc, #64]	; 3cd98 <fb_name_table_insert@@Base+0x210>
   3cd54:	ldr	r3, [pc, #64]	; 3cd9c <fb_name_table_insert@@Base+0x214>
   3cd58:	mov	r2, #114	; 0x72
   3cd5c:	add	r0, pc, r0
   3cd60:	add	r1, pc, r1
   3cd64:	add	r3, pc, r3
   3cd68:	bl	1497c <__assert_fail@plt>
   3cd6c:	ldr	r0, [pc, #68]	; 3cdb8 <fb_name_table_insert@@Base+0x230>
   3cd70:	ldr	r0, [pc, r0]
   3cd74:	ldr	r0, [r0]
   3cd78:	ldr	r1, [pc, #60]	; 3cdbc <fb_name_table_insert@@Base+0x234>
   3cd7c:	ldr	r2, [pc, #60]	; 3cdc0 <fb_name_table_insert@@Base+0x238>
   3cd80:	add	r1, pc, r1
   3cd84:	add	r2, pc, r2
   3cd88:	bl	148bc <fprintf@plt>
   3cd8c:	mov	r0, #1
   3cd90:	bl	14898 <exit@plt>
   3cd94:	muleq	r1, r4, r6
   3cd98:	andeq	r9, r1, r7, lsr #13
   3cd9c:	andeq	r9, r1, sl, lsl #14
   3cda0:	muleq	r1, ip, r7
   3cda4:	andeq	r9, r1, r7, ror #13
   3cda8:	andeq	r9, r1, sl, asr #14
   3cdac:	muleq	r1, r3, r7
   3cdb0:	andeq	r9, r1, r7, asr #13
   3cdb4:	andeq	r9, r1, sl, lsr #14
   3cdb8:	andeq	lr, r2, ip, lsr #6
   3cdbc:	andeq	r9, r1, r4, ror #14
   3cdc0:	andeq	r9, r1, r7, ror r7

0003cdc4 <fb_name_table_insert_item@@Base>:
   3cdc4:	push	{r4, r5, fp, lr}
   3cdc8:	add	fp, sp, #8
   3cdcc:	sub	sp, sp, #8
   3cdd0:	ldrd	r4, [r1, #8]
   3cdd4:	mov	r3, r1
   3cdd8:	str	r2, [sp]
   3cddc:	mov	r1, r4
   3cde0:	mov	r2, r5
   3cde4:	bl	3cb8c <fb_name_table_insert@@Base+0x4>
   3cde8:	sub	sp, fp, #8
   3cdec:	pop	{r4, r5, fp, pc}

0003cdf0 <fb_name_table_find@@Base>:
   3cdf0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3cdf4:	add	fp, sp, #24
   3cdf8:	sub	sp, sp, #16
   3cdfc:	ldr	r7, [r0]
   3ce00:	cmp	r7, #0
   3ce04:	beq	3ce84 <fb_name_table_find@@Base+0x94>
   3ce08:	mov	r8, r1
   3ce0c:	movw	r1, #15186	; 0x3b52
   3ce10:	ldr	r4, [r0, #12]
   3ce14:	add	r0, sp, #8
   3ce18:	mov	r3, #0
   3ce1c:	mov	r9, r2
   3ce20:	movt	r1, #12137	; 0x2f69
   3ce24:	str	r0, [sp, #4]
   3ce28:	mov	r0, r8
   3ce2c:	str	r1, [sp]
   3ce30:	bl	3bdcc <cmetrohash64_1@@Base>
   3ce34:	ldr	r5, [sp, #8]
   3ce38:	sub	r4, r4, #1
   3ce3c:	b	3ce44 <fb_name_table_find@@Base+0x54>
   3ce40:	add	r5, r5, #1
   3ce44:	and	r0, r5, r4
   3ce48:	ldr	r6, [r7, r0, lsl #2]
   3ce4c:	cmp	r6, #2
   3ce50:	beq	3ce40 <fb_name_table_find@@Base+0x50>
   3ce54:	cmp	r6, #0
   3ce58:	beq	3ce84 <fb_name_table_find@@Base+0x94>
   3ce5c:	ldr	r0, [r6, #12]
   3ce60:	cmp	r0, r9
   3ce64:	bne	3ce40 <fb_name_table_find@@Base+0x50>
   3ce68:	ldr	r1, [r6, #8]
   3ce6c:	mov	r0, r8
   3ce70:	mov	r2, r9
   3ce74:	bl	148a4 <bcmp@plt>
   3ce78:	cmp	r0, #0
   3ce7c:	bne	3ce40 <fb_name_table_find@@Base+0x50>
   3ce80:	b	3ce88 <fb_name_table_find@@Base+0x98>
   3ce84:	mov	r6, #0
   3ce88:	mov	r0, r6
   3ce8c:	sub	sp, fp, #24
   3ce90:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0003ce94 <fb_name_table_find_item@@Base>:
   3ce94:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3ce98:	add	fp, sp, #24
   3ce9c:	sub	sp, sp, #16
   3cea0:	ldr	r5, [r0]
   3cea4:	cmp	r5, #0
   3cea8:	beq	3cf28 <fb_name_table_find_item@@Base+0x94>
   3ceac:	ldrd	r8, [r1, #8]
   3ceb0:	movw	r1, #15186	; 0x3b52
   3ceb4:	ldr	r4, [r0, #12]
   3ceb8:	add	r0, sp, #8
   3cebc:	mov	r3, #0
   3cec0:	movt	r1, #12137	; 0x2f69
   3cec4:	str	r0, [sp, #4]
   3cec8:	str	r1, [sp]
   3cecc:	mov	r0, r8
   3ced0:	mov	r2, r9
   3ced4:	bl	3bdcc <cmetrohash64_1@@Base>
   3ced8:	ldr	r6, [sp, #8]
   3cedc:	sub	r7, r4, #1
   3cee0:	b	3cee8 <fb_name_table_find_item@@Base+0x54>
   3cee4:	add	r6, r6, #1
   3cee8:	and	r0, r6, r7
   3ceec:	ldr	r4, [r5, r0, lsl #2]
   3cef0:	cmp	r4, #2
   3cef4:	beq	3cee4 <fb_name_table_find_item@@Base+0x50>
   3cef8:	cmp	r4, #0
   3cefc:	beq	3cf28 <fb_name_table_find_item@@Base+0x94>
   3cf00:	ldr	r0, [r4, #12]
   3cf04:	cmp	r0, r9
   3cf08:	bne	3cee4 <fb_name_table_find_item@@Base+0x50>
   3cf0c:	ldr	r1, [r4, #8]
   3cf10:	mov	r0, r8
   3cf14:	mov	r2, r9
   3cf18:	bl	148a4 <bcmp@plt>
   3cf1c:	cmp	r0, #0
   3cf20:	bne	3cee4 <fb_name_table_find_item@@Base+0x50>
   3cf24:	b	3cf2c <fb_name_table_find_item@@Base+0x98>
   3cf28:	mov	r4, #0
   3cf2c:	mov	r0, r4
   3cf30:	sub	sp, fp, #24
   3cf34:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0003cf38 <fb_name_table_remove@@Base>:
   3cf38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3cf3c:	add	fp, sp, #28
   3cf40:	sub	sp, sp, #28
   3cf44:	ldr	r4, [r0]
   3cf48:	cmp	r4, #0
   3cf4c:	beq	3cfe8 <fb_name_table_remove@@Base+0xb0>
   3cf50:	mov	r9, r1
   3cf54:	movw	r1, #15186	; 0x3b52
   3cf58:	ldr	r5, [r0, #12]
   3cf5c:	str	r0, [sp, #12]
   3cf60:	add	r0, sp, #16
   3cf64:	mov	r3, #0
   3cf68:	mov	sl, r2
   3cf6c:	movt	r1, #12137	; 0x2f69
   3cf70:	str	r0, [sp, #4]
   3cf74:	mov	r0, r9
   3cf78:	str	r1, [sp]
   3cf7c:	bl	3bdcc <cmetrohash64_1@@Base>
   3cf80:	ldr	r6, [sp, #16]
   3cf84:	sub	r5, r5, #1
   3cf88:	b	3cf90 <fb_name_table_remove@@Base+0x58>
   3cf8c:	add	r6, r6, #1
   3cf90:	and	r8, r6, r5
   3cf94:	ldr	r7, [r4, r8, lsl #2]
   3cf98:	cmp	r7, #2
   3cf9c:	beq	3cf8c <fb_name_table_remove@@Base+0x54>
   3cfa0:	cmp	r7, #0
   3cfa4:	beq	3cfe8 <fb_name_table_remove@@Base+0xb0>
   3cfa8:	ldr	r0, [r7, #12]
   3cfac:	cmp	r0, sl
   3cfb0:	bne	3cf8c <fb_name_table_remove@@Base+0x54>
   3cfb4:	ldr	r1, [r7, #8]
   3cfb8:	mov	r0, r9
   3cfbc:	mov	r2, sl
   3cfc0:	bl	148a4 <bcmp@plt>
   3cfc4:	cmp	r0, #0
   3cfc8:	bne	3cf8c <fb_name_table_remove@@Base+0x54>
   3cfcc:	ldr	r1, [sp, #12]
   3cfd0:	mov	r0, #2
   3cfd4:	str	r0, [r4, r8, lsl #2]
   3cfd8:	ldr	r0, [r1, #8]
   3cfdc:	sub	r0, r0, #1
   3cfe0:	str	r0, [r1, #8]
   3cfe4:	b	3cfec <fb_name_table_remove@@Base+0xb4>
   3cfe8:	mov	r7, #0
   3cfec:	mov	r0, r7
   3cff0:	sub	sp, fp, #28
   3cff4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003cff8 <fb_name_table_remove_item@@Base>:
   3cff8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3cffc:	add	fp, sp, #28
   3d000:	sub	sp, sp, #28
   3d004:	ldr	r6, [r0]
   3d008:	cmp	r6, #0
   3d00c:	beq	3d0a8 <fb_name_table_remove_item@@Base+0xb0>
   3d010:	ldrd	r8, [r1, #8]
   3d014:	movw	r1, #15186	; 0x3b52
   3d018:	ldr	r4, [r0, #12]
   3d01c:	str	r0, [sp, #12]
   3d020:	add	r0, sp, #16
   3d024:	mov	r3, #0
   3d028:	movt	r1, #12137	; 0x2f69
   3d02c:	str	r0, [sp, #4]
   3d030:	str	r1, [sp]
   3d034:	mov	r0, r8
   3d038:	mov	r2, r9
   3d03c:	bl	3bdcc <cmetrohash64_1@@Base>
   3d040:	ldr	r7, [sp, #16]
   3d044:	sub	r4, r4, #1
   3d048:	b	3d050 <fb_name_table_remove_item@@Base+0x58>
   3d04c:	add	r7, r7, #1
   3d050:	and	sl, r7, r4
   3d054:	ldr	r5, [r6, sl, lsl #2]
   3d058:	cmp	r5, #2
   3d05c:	beq	3d04c <fb_name_table_remove_item@@Base+0x54>
   3d060:	cmp	r5, #0
   3d064:	beq	3d0a8 <fb_name_table_remove_item@@Base+0xb0>
   3d068:	ldr	r0, [r5, #12]
   3d06c:	cmp	r0, r9
   3d070:	bne	3d04c <fb_name_table_remove_item@@Base+0x54>
   3d074:	ldr	r1, [r5, #8]
   3d078:	mov	r0, r8
   3d07c:	mov	r2, r9
   3d080:	bl	148a4 <bcmp@plt>
   3d084:	cmp	r0, #0
   3d088:	bne	3d04c <fb_name_table_remove_item@@Base+0x54>
   3d08c:	ldr	r1, [sp, #12]
   3d090:	mov	r0, #2
   3d094:	str	r0, [r6, sl, lsl #2]
   3d098:	ldr	r0, [r1, #8]
   3d09c:	sub	r0, r0, #1
   3d0a0:	str	r0, [r1, #8]
   3d0a4:	b	3d0ac <fb_name_table_remove_item@@Base+0xb4>
   3d0a8:	mov	r5, #0
   3d0ac:	mov	r0, r5
   3d0b0:	sub	sp, fp, #28
   3d0b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003d0b8 <fb_name_table_visit@@Base>:
   3d0b8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3d0bc:	add	fp, sp, #24
   3d0c0:	mov	r6, r0
   3d0c4:	ldr	r0, [r0, #12]
   3d0c8:	cmp	r0, #0
   3d0cc:	beq	3d110 <fb_name_table_visit@@Base+0x58>
   3d0d0:	ldr	r7, [r6]
   3d0d4:	mov	r8, r2
   3d0d8:	mov	r5, r1
   3d0dc:	mov	r4, #0
   3d0e0:	b	3d0f0 <fb_name_table_visit@@Base+0x38>
   3d0e4:	add	r4, r4, #1
   3d0e8:	cmp	r4, r0
   3d0ec:	bcs	3d110 <fb_name_table_visit@@Base+0x58>
   3d0f0:	ldr	r1, [r7, r4, lsl #2]
   3d0f4:	orr	r2, r1, #2
   3d0f8:	cmp	r2, #2
   3d0fc:	beq	3d0e4 <fb_name_table_visit@@Base+0x2c>
   3d100:	mov	r0, r8
   3d104:	blx	r5
   3d108:	ldr	r0, [r6, #12]
   3d10c:	b	3d0e4 <fb_name_table_visit@@Base+0x2c>
   3d110:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0003d114 <fb_value_set_clear@@Base>:
   3d114:	push	{r4, sl, fp, lr}
   3d118:	add	fp, sp, #8
   3d11c:	mov	r4, r0
   3d120:	ldr	r0, [r0]
   3d124:	cmp	r0, #0
   3d128:	beq	3d130 <fb_value_set_clear@@Base+0x1c>
   3d12c:	bl	147fc <free@plt>
   3d130:	vmov.i32	q8, #0	; 0x00000000
   3d134:	vst1.32	{d16-d17}, [r4]
   3d138:	pop	{r4, sl, fp, pc}

0003d13c <fb_value_set_destroy@@Base>:
   3d13c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3d140:	add	fp, sp, #24
   3d144:	mov	r4, r0
   3d148:	cmp	r1, #0
   3d14c:	beq	3d19c <fb_value_set_destroy@@Base+0x60>
   3d150:	ldr	r0, [r4, #12]
   3d154:	cmp	r0, #0
   3d158:	beq	3d19c <fb_value_set_destroy@@Base+0x60>
   3d15c:	ldr	r7, [r4]
   3d160:	mov	r8, r2
   3d164:	mov	r6, r1
   3d168:	mov	r5, #0
   3d16c:	b	3d17c <fb_value_set_destroy@@Base+0x40>
   3d170:	add	r5, r5, #1
   3d174:	cmp	r5, r0
   3d178:	bcs	3d19c <fb_value_set_destroy@@Base+0x60>
   3d17c:	ldr	r1, [r7, r5, lsl #2]
   3d180:	orr	r2, r1, #2
   3d184:	cmp	r2, #2
   3d188:	beq	3d170 <fb_value_set_destroy@@Base+0x34>
   3d18c:	mov	r0, r8
   3d190:	blx	r6
   3d194:	ldr	r0, [r4, #12]
   3d198:	b	3d170 <fb_value_set_destroy@@Base+0x34>
   3d19c:	ldr	r0, [r4]
   3d1a0:	cmp	r0, #0
   3d1a4:	beq	3d1ac <fb_value_set_destroy@@Base+0x70>
   3d1a8:	bl	147fc <free@plt>
   3d1ac:	vmov.i32	q8, #0	; 0x00000000
   3d1b0:	vst1.32	{d16-d17}, [r4]
   3d1b4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0003d1b8 <fb_value_set_init@@Base>:
   3d1b8:	push	{r4, r5, fp, lr}
   3d1bc:	add	fp, sp, #8
   3d1c0:	mov	r4, r0
   3d1c4:	mov	r2, #4
   3d1c8:	mov	r0, #179	; 0xb3
   3d1cc:	mul	r3, r2, r0
   3d1d0:	mov	r5, r2
   3d1d4:	lsl	r2, r2, #1
   3d1d8:	cmp	r1, r3, lsr #8
   3d1dc:	bhi	3d1cc <fb_value_set_init@@Base+0x14>
   3d1e0:	mov	r0, r5
   3d1e4:	mov	r1, #4
   3d1e8:	bl	147cc <calloc@plt>
   3d1ec:	cmp	r0, #0
   3d1f0:	str	r0, [r4]
   3d1f4:	mvneq	r0, #0
   3d1f8:	movne	r0, #0
   3d1fc:	strne	r0, [r4, #4]
   3d200:	strne	r0, [r4, #8]
   3d204:	strne	r5, [r4, #12]
   3d208:	pop	{r4, r5, fp, pc}

0003d20c <fb_value_set_resize@@Base>:
   3d20c:	b	3d210 <fb_value_set_resize@@Base+0x4>
   3d210:	push	{r4, r5, r6, r7, fp, lr}
   3d214:	add	fp, sp, #16
   3d218:	sub	sp, sp, #16
   3d21c:	mov	r4, r0
   3d220:	ldr	r5, [r0]
   3d224:	ldr	r0, [r0, #8]
   3d228:	mov	r2, #4
   3d22c:	cmp	r0, r1
   3d230:	movhi	r1, r0
   3d234:	mov	r0, #179	; 0xb3
   3d238:	mul	r3, r2, r0
   3d23c:	mov	r6, r2
   3d240:	lsl	r2, r2, #1
   3d244:	cmp	r1, r3, lsr #8
   3d248:	bhi	3d238 <fb_value_set_resize@@Base+0x2c>
   3d24c:	mov	r0, r6
   3d250:	mov	r1, #4
   3d254:	bl	147cc <calloc@plt>
   3d258:	cmp	r0, #0
   3d25c:	str	r0, [sp]
   3d260:	beq	3d2bc <fb_value_set_resize@@Base+0xb0>
   3d264:	mov	r7, #0
   3d268:	str	r6, [sp, #12]
   3d26c:	str	r7, [sp, #4]
   3d270:	str	r7, [sp, #8]
   3d274:	ldr	r0, [r4, #12]
   3d278:	cmp	r0, #0
   3d27c:	beq	3d2cc <fb_value_set_resize@@Base+0xc0>
   3d280:	mov	r6, sp
   3d284:	b	3d294 <fb_value_set_resize@@Base+0x88>
   3d288:	add	r7, r7, #1
   3d28c:	cmp	r7, r0
   3d290:	bcs	3d2c8 <fb_value_set_resize@@Base+0xbc>
   3d294:	ldr	r1, [r5, r7, lsl #2]
   3d298:	orr	r2, r1, #2
   3d29c:	cmp	r2, #2
   3d2a0:	beq	3d288 <fb_value_set_resize@@Base+0x7c>
   3d2a4:	mov	r0, r6
   3d2a8:	mov	r2, r1
   3d2ac:	mov	r3, #3
   3d2b0:	bl	3d300 <fb_value_set_insert@@Base+0xc>
   3d2b4:	ldr	r0, [r4, #12]
   3d2b8:	b	3d288 <fb_value_set_resize@@Base+0x7c>
   3d2bc:	mvn	r0, #0
   3d2c0:	sub	sp, fp, #16
   3d2c4:	pop	{r4, r5, r6, r7, fp, pc}
   3d2c8:	ldr	r5, [r4]
   3d2cc:	cmp	r5, #0
   3d2d0:	beq	3d2dc <fb_value_set_resize@@Base+0xd0>
   3d2d4:	mov	r0, r5
   3d2d8:	bl	147fc <free@plt>
   3d2dc:	mov	r0, sp
   3d2e0:	vld1.64	{d16-d17}, [r0]
   3d2e4:	mov	r0, #0
   3d2e8:	vst1.32	{d16-d17}, [r4]
   3d2ec:	sub	sp, fp, #16
   3d2f0:	pop	{r4, r5, r6, r7, fp, pc}

0003d2f4 <fb_value_set_insert@@Base>:
   3d2f4:	mov	r2, r3
   3d2f8:	ldr	r3, [sp]
   3d2fc:	b	3d300 <fb_value_set_insert@@Base+0xc>
   3d300:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d304:	add	fp, sp, #28
   3d308:	sub	sp, sp, #12
   3d30c:	cmp	r2, #2
   3d310:	beq	3d4e4 <fb_value_set_insert@@Base+0x1f0>
   3d314:	mov	r5, r2
   3d318:	cmp	r2, #1
   3d31c:	beq	3d504 <fb_value_set_insert@@Base+0x210>
   3d320:	cmp	r5, #0
   3d324:	beq	3d524 <fb_value_set_insert@@Base+0x230>
   3d328:	mov	sl, r1
   3d32c:	mov	r8, r0
   3d330:	ldr	r1, [r0, #8]
   3d334:	ldr	r0, [r0, #12]
   3d338:	mov	r2, #179	; 0xb3
   3d33c:	mov	r6, r3
   3d340:	mul	r2, r0, r2
   3d344:	cmp	r1, r2, lsr #8
   3d348:	bcc	3d364 <fb_value_set_insert@@Base+0x70>
   3d34c:	lsl	r1, r1, #1
   3d350:	mov	r0, r8
   3d354:	bl	3d210 <fb_value_set_resize@@Base+0x4>
   3d358:	cmp	r0, #0
   3d35c:	bne	3d544 <fb_value_set_insert@@Base+0x250>
   3d360:	ldr	r0, [r8, #12]
   3d364:	ldrh	r3, [sl, #8]
   3d368:	ldr	r4, [r8]
   3d36c:	sub	r9, r0, #1
   3d370:	cmp	r3, #6
   3d374:	beq	3d3b4 <fb_value_set_insert@@Base+0xc0>
   3d378:	cmp	r3, #5
   3d37c:	beq	3d3a0 <fb_value_set_insert@@Base+0xac>
   3d380:	mov	r2, #0
   3d384:	cmp	r3, #4
   3d388:	bne	3d3d0 <fb_value_set_insert@@Base+0xdc>
   3d38c:	movw	r2, #15188	; 0x3b54
   3d390:	ldr	r0, [sl]
   3d394:	movt	r2, #12137	; 0x2f69
   3d398:	orr	r2, r2, #2
   3d39c:	b	3d3c0 <fb_value_set_insert@@Base+0xcc>
   3d3a0:	movw	r2, #15188	; 0x3b54
   3d3a4:	ldr	r0, [sl]
   3d3a8:	movt	r2, #12137	; 0x2f69
   3d3ac:	orr	r2, r2, #3
   3d3b0:	b	3d3c0 <fb_value_set_insert@@Base+0xcc>
   3d3b4:	ldrb	r0, [sl]
   3d3b8:	movw	r2, #15188	; 0x3b54
   3d3bc:	movt	r2, #12137	; 0x2f69
   3d3c0:	eor	r0, r0, r2
   3d3c4:	movw	r2, #31153	; 0x79b1
   3d3c8:	movt	r2, #40503	; 0x9e37
   3d3cc:	mul	r2, r0, r2
   3d3d0:	orr	r7, r6, #1
   3d3d4:	and	r0, r2, r9
   3d3d8:	cmp	r7, #3
   3d3dc:	bne	3d410 <fb_value_set_insert@@Base+0x11c>
   3d3e0:	ldr	r3, [r8, #8]
   3d3e4:	add	r3, r3, #1
   3d3e8:	str	r3, [r8, #8]
   3d3ec:	add	r3, r2, #1
   3d3f0:	mov	r2, r4
   3d3f4:	ldr	r0, [r2, r0, lsl #2]!
   3d3f8:	orr	r0, r0, #2
   3d3fc:	cmp	r0, #2
   3d400:	beq	3d4d4 <fb_value_set_insert@@Base+0x1e0>
   3d404:	and	r0, r3, r9
   3d408:	add	r3, r3, #1
   3d40c:	b	3d3f0 <fb_value_set_insert@@Base+0xfc>
   3d410:	str	r6, [sp, #4]
   3d414:	add	r7, r2, #1
   3d418:	mov	r6, #0
   3d41c:	str	r5, [sp, #8]
   3d420:	b	3d434 <fb_value_set_insert@@Base+0x140>
   3d424:	cmp	r6, #0
   3d428:	moveq	r6, r2
   3d42c:	and	r0, r7, r9
   3d430:	add	r7, r7, #1
   3d434:	mov	r2, r4
   3d438:	ldr	r0, [r2, r0, lsl #2]!
   3d43c:	cmp	r0, #2
   3d440:	beq	3d424 <fb_value_set_insert@@Base+0x130>
   3d444:	cmp	r0, #0
   3d448:	beq	3d4bc <fb_value_set_insert@@Base+0x1c8>
   3d44c:	ldrh	r5, [r0, #8]
   3d450:	cmp	r3, r5
   3d454:	bne	3d42c <fb_value_set_insert@@Base+0x138>
   3d458:	cmp	r3, #4
   3d45c:	beq	3d470 <fb_value_set_insert@@Base+0x17c>
   3d460:	cmp	r3, #6
   3d464:	beq	3d494 <fb_value_set_insert@@Base+0x1a0>
   3d468:	cmp	r3, #5
   3d46c:	bne	3d42c <fb_value_set_insert@@Base+0x138>
   3d470:	ldr	ip, [r0]
   3d474:	ldr	r5, [r0, #4]
   3d478:	ldr	r1, [sl, #4]
   3d47c:	ldr	lr, [sl]
   3d480:	eor	r1, r1, r5
   3d484:	eor	r5, lr, ip
   3d488:	orrs	r1, r5, r1
   3d48c:	bne	3d42c <fb_value_set_insert@@Base+0x138>
   3d490:	b	3d4a4 <fb_value_set_insert@@Base+0x1b0>
   3d494:	ldrb	r1, [r0]
   3d498:	ldrb	r5, [sl]
   3d49c:	cmp	r5, r1
   3d4a0:	bne	3d42c <fb_value_set_insert@@Base+0x138>
   3d4a4:	ldr	r1, [sp, #4]
   3d4a8:	ldr	r5, [sp, #8]
   3d4ac:	cmp	r1, #0
   3d4b0:	streq	r5, [r2]
   3d4b4:	sub	sp, fp, #28
   3d4b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3d4bc:	ldr	r0, [r8, #8]
   3d4c0:	ldr	r5, [sp, #8]
   3d4c4:	cmp	r6, #0
   3d4c8:	movne	r2, r6
   3d4cc:	add	r0, r0, #1
   3d4d0:	str	r0, [r8, #8]
   3d4d4:	mov	r0, #0
   3d4d8:	str	r5, [r2]
   3d4dc:	sub	sp, fp, #28
   3d4e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3d4e4:	ldr	r0, [pc, #140]	; 3d578 <fb_value_set_insert@@Base+0x284>
   3d4e8:	ldr	r1, [pc, #140]	; 3d57c <fb_value_set_insert@@Base+0x288>
   3d4ec:	ldr	r3, [pc, #140]	; 3d580 <fb_value_set_insert@@Base+0x28c>
   3d4f0:	mov	r2, #115	; 0x73
   3d4f4:	add	r0, pc, r0
   3d4f8:	add	r1, pc, r1
   3d4fc:	add	r3, pc, r3
   3d500:	bl	1497c <__assert_fail@plt>
   3d504:	ldr	r0, [pc, #120]	; 3d584 <fb_value_set_insert@@Base+0x290>
   3d508:	ldr	r1, [pc, #120]	; 3d588 <fb_value_set_insert@@Base+0x294>
   3d50c:	ldr	r3, [pc, #120]	; 3d58c <fb_value_set_insert@@Base+0x298>
   3d510:	mov	r2, #116	; 0x74
   3d514:	add	r0, pc, r0
   3d518:	add	r1, pc, r1
   3d51c:	add	r3, pc, r3
   3d520:	bl	1497c <__assert_fail@plt>
   3d524:	ldr	r0, [pc, #64]	; 3d56c <fb_value_set_insert@@Base+0x278>
   3d528:	ldr	r1, [pc, #64]	; 3d570 <fb_value_set_insert@@Base+0x27c>
   3d52c:	ldr	r3, [pc, #64]	; 3d574 <fb_value_set_insert@@Base+0x280>
   3d530:	mov	r2, #114	; 0x72
   3d534:	add	r0, pc, r0
   3d538:	add	r1, pc, r1
   3d53c:	add	r3, pc, r3
   3d540:	bl	1497c <__assert_fail@plt>
   3d544:	ldr	r0, [pc, #68]	; 3d590 <fb_value_set_insert@@Base+0x29c>
   3d548:	ldr	r0, [pc, r0]
   3d54c:	ldr	r0, [r0]
   3d550:	ldr	r1, [pc, #60]	; 3d594 <fb_value_set_insert@@Base+0x2a0>
   3d554:	ldr	r2, [pc, #60]	; 3d598 <fb_value_set_insert@@Base+0x2a4>
   3d558:	add	r1, pc, r1
   3d55c:	add	r2, pc, r2
   3d560:	bl	148bc <fprintf@plt>
   3d564:	mov	r0, #1
   3d568:	bl	14898 <exit@plt>
   3d56c:			; <UNDEFINED> instruction: 0x00018ebc
   3d570:	andeq	r8, r1, pc, asr #29
   3d574:	andeq	r8, r1, r2, lsr pc
   3d578:	andeq	r8, r1, r4, asr #31
   3d57c:	andeq	r8, r1, pc, lsl #30
   3d580:	andeq	r8, r1, r2, ror pc
   3d584:			; <UNDEFINED> instruction: 0x00018fbb
   3d588:	andeq	r8, r1, pc, ror #29
   3d58c:	andeq	r8, r1, r2, asr pc
   3d590:	andeq	sp, r2, r4, asr fp
   3d594:	andeq	r8, r1, ip, lsl #31
   3d598:	muleq	r1, pc, pc	; <UNPREDICTABLE>

0003d59c <fb_value_set_insert_item@@Base>:
   3d59c:	mov	r3, r2
   3d5a0:	mov	r2, r1
   3d5a4:	b	3d300 <fb_value_set_insert@@Base+0xc>

0003d5a8 <fb_value_set_find@@Base>:
   3d5a8:	push	{r4, r5, r6, r7, fp, lr}
   3d5ac:	add	fp, sp, #16
   3d5b0:	ldr	ip, [r0]
   3d5b4:	cmp	ip, #0
   3d5b8:	beq	3d69c <fb_value_set_find@@Base+0xf4>
   3d5bc:	ldrh	lr, [r1, #8]
   3d5c0:	ldr	r0, [r0, #12]
   3d5c4:	cmp	lr, #6
   3d5c8:	beq	3d5f4 <fb_value_set_find@@Base+0x4c>
   3d5cc:	cmp	lr, #5
   3d5d0:	beq	3d604 <fb_value_set_find@@Base+0x5c>
   3d5d4:	mov	r2, #0
   3d5d8:	cmp	lr, #4
   3d5dc:	bne	3d624 <fb_value_set_find@@Base+0x7c>
   3d5e0:	movw	r3, #15188	; 0x3b54
   3d5e4:	ldr	r2, [r1]
   3d5e8:	movt	r3, #12137	; 0x2f69
   3d5ec:	orr	r3, r3, #2
   3d5f0:	b	3d614 <fb_value_set_find@@Base+0x6c>
   3d5f4:	ldrb	r2, [r1]
   3d5f8:	movw	r3, #15188	; 0x3b54
   3d5fc:	movt	r3, #12137	; 0x2f69
   3d600:	b	3d614 <fb_value_set_find@@Base+0x6c>
   3d604:	movw	r3, #15188	; 0x3b54
   3d608:	ldr	r2, [r1]
   3d60c:	movt	r3, #12137	; 0x2f69
   3d610:	orr	r3, r3, #3
   3d614:	eor	r2, r2, r3
   3d618:	movw	r3, #31153	; 0x79b1
   3d61c:	movt	r3, #40503	; 0x9e37
   3d620:	mul	r2, r2, r3
   3d624:	sub	r3, r0, #1
   3d628:	b	3d648 <fb_value_set_find@@Base+0xa0>
   3d62c:	ldrd	r4, [r0]
   3d630:	ldrd	r6, [r1]
   3d634:	eor	r5, r7, r5
   3d638:	eor	r4, r6, r4
   3d63c:	orrs	r4, r4, r5
   3d640:	beq	3d698 <fb_value_set_find@@Base+0xf0>
   3d644:	add	r2, r2, #1
   3d648:	and	r0, r2, r3
   3d64c:	ldr	r0, [ip, r0, lsl #2]
   3d650:	cmp	r0, #2
   3d654:	beq	3d644 <fb_value_set_find@@Base+0x9c>
   3d658:	cmp	r0, #0
   3d65c:	beq	3d69c <fb_value_set_find@@Base+0xf4>
   3d660:	ldrh	r4, [r0, #8]
   3d664:	cmp	lr, r4
   3d668:	bne	3d644 <fb_value_set_find@@Base+0x9c>
   3d66c:	cmp	lr, #4
   3d670:	beq	3d62c <fb_value_set_find@@Base+0x84>
   3d674:	cmp	lr, #6
   3d678:	beq	3d688 <fb_value_set_find@@Base+0xe0>
   3d67c:	cmp	lr, #5
   3d680:	beq	3d62c <fb_value_set_find@@Base+0x84>
   3d684:	b	3d644 <fb_value_set_find@@Base+0x9c>
   3d688:	ldrb	r4, [r0]
   3d68c:	ldrb	r5, [r1]
   3d690:	cmp	r5, r4
   3d694:	bne	3d644 <fb_value_set_find@@Base+0x9c>
   3d698:	pop	{r4, r5, r6, r7, fp, pc}
   3d69c:	mov	r0, #0
   3d6a0:	pop	{r4, r5, r6, r7, fp, pc}

0003d6a4 <fb_value_set_find_item@@Base>:
   3d6a4:	push	{r4, r5, r6, r7, fp, lr}
   3d6a8:	add	fp, sp, #16
   3d6ac:	ldr	ip, [r0]
   3d6b0:	cmp	ip, #0
   3d6b4:	beq	3d798 <fb_value_set_find_item@@Base+0xf4>
   3d6b8:	ldrh	lr, [r1, #8]
   3d6bc:	ldr	r0, [r0, #12]
   3d6c0:	cmp	lr, #6
   3d6c4:	beq	3d6f0 <fb_value_set_find_item@@Base+0x4c>
   3d6c8:	cmp	lr, #5
   3d6cc:	beq	3d700 <fb_value_set_find_item@@Base+0x5c>
   3d6d0:	mov	r2, #0
   3d6d4:	cmp	lr, #4
   3d6d8:	bne	3d720 <fb_value_set_find_item@@Base+0x7c>
   3d6dc:	movw	r3, #15188	; 0x3b54
   3d6e0:	ldr	r2, [r1]
   3d6e4:	movt	r3, #12137	; 0x2f69
   3d6e8:	orr	r3, r3, #2
   3d6ec:	b	3d710 <fb_value_set_find_item@@Base+0x6c>
   3d6f0:	ldrb	r2, [r1]
   3d6f4:	movw	r3, #15188	; 0x3b54
   3d6f8:	movt	r3, #12137	; 0x2f69
   3d6fc:	b	3d710 <fb_value_set_find_item@@Base+0x6c>
   3d700:	movw	r3, #15188	; 0x3b54
   3d704:	ldr	r2, [r1]
   3d708:	movt	r3, #12137	; 0x2f69
   3d70c:	orr	r3, r3, #3
   3d710:	eor	r2, r2, r3
   3d714:	movw	r3, #31153	; 0x79b1
   3d718:	movt	r3, #40503	; 0x9e37
   3d71c:	mul	r2, r2, r3
   3d720:	sub	r3, r0, #1
   3d724:	b	3d744 <fb_value_set_find_item@@Base+0xa0>
   3d728:	ldrd	r4, [r0]
   3d72c:	ldrd	r6, [r1]
   3d730:	eor	r5, r7, r5
   3d734:	eor	r4, r6, r4
   3d738:	orrs	r4, r4, r5
   3d73c:	beq	3d794 <fb_value_set_find_item@@Base+0xf0>
   3d740:	add	r2, r2, #1
   3d744:	and	r0, r2, r3
   3d748:	ldr	r0, [ip, r0, lsl #2]
   3d74c:	cmp	r0, #2
   3d750:	beq	3d740 <fb_value_set_find_item@@Base+0x9c>
   3d754:	cmp	r0, #0
   3d758:	beq	3d798 <fb_value_set_find_item@@Base+0xf4>
   3d75c:	ldrh	r4, [r0, #8]
   3d760:	cmp	lr, r4
   3d764:	bne	3d740 <fb_value_set_find_item@@Base+0x9c>
   3d768:	cmp	lr, #4
   3d76c:	beq	3d728 <fb_value_set_find_item@@Base+0x84>
   3d770:	cmp	lr, #6
   3d774:	beq	3d784 <fb_value_set_find_item@@Base+0xe0>
   3d778:	cmp	lr, #5
   3d77c:	beq	3d728 <fb_value_set_find_item@@Base+0x84>
   3d780:	b	3d740 <fb_value_set_find_item@@Base+0x9c>
   3d784:	ldrb	r4, [r0]
   3d788:	ldrb	r5, [r1]
   3d78c:	cmp	r5, r4
   3d790:	bne	3d740 <fb_value_set_find_item@@Base+0x9c>
   3d794:	pop	{r4, r5, r6, r7, fp, pc}
   3d798:	mov	r0, #0
   3d79c:	pop	{r4, r5, r6, r7, fp, pc}

0003d7a0 <fb_value_set_remove@@Base>:
   3d7a0:	b	3d7a4 <fb_value_set_remove@@Base+0x4>
   3d7a4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3d7a8:	add	fp, sp, #24
   3d7ac:	ldr	ip, [r0]
   3d7b0:	cmp	ip, #0
   3d7b4:	beq	3d8b0 <fb_value_set_remove@@Base+0x110>
   3d7b8:	ldrh	lr, [r1, #8]
   3d7bc:	ldr	r2, [r0, #12]
   3d7c0:	cmp	lr, #6
   3d7c4:	beq	3d7f0 <fb_value_set_remove@@Base+0x50>
   3d7c8:	cmp	lr, #5
   3d7cc:	beq	3d800 <fb_value_set_remove@@Base+0x60>
   3d7d0:	mov	r3, #0
   3d7d4:	cmp	lr, #4
   3d7d8:	bne	3d820 <fb_value_set_remove@@Base+0x80>
   3d7dc:	movw	r4, #15188	; 0x3b54
   3d7e0:	ldr	r3, [r1]
   3d7e4:	movt	r4, #12137	; 0x2f69
   3d7e8:	orr	r4, r4, #2
   3d7ec:	b	3d810 <fb_value_set_remove@@Base+0x70>
   3d7f0:	ldrb	r3, [r1]
   3d7f4:	movw	r4, #15188	; 0x3b54
   3d7f8:	movt	r4, #12137	; 0x2f69
   3d7fc:	b	3d810 <fb_value_set_remove@@Base+0x70>
   3d800:	movw	r4, #15188	; 0x3b54
   3d804:	ldr	r3, [r1]
   3d808:	movt	r4, #12137	; 0x2f69
   3d80c:	orr	r4, r4, #3
   3d810:	eor	r3, r3, r4
   3d814:	movw	r4, #31153	; 0x79b1
   3d818:	movt	r4, #40503	; 0x9e37
   3d81c:	mul	r3, r3, r4
   3d820:	sub	r4, r2, #1
   3d824:	b	3d844 <fb_value_set_remove@@Base+0xa4>
   3d828:	ldrd	r6, [r2]
   3d82c:	ldrd	r8, [r1]
   3d830:	eor	r7, r9, r7
   3d834:	eor	r6, r8, r6
   3d838:	orrs	r6, r6, r7
   3d83c:	beq	3d894 <fb_value_set_remove@@Base+0xf4>
   3d840:	add	r3, r3, #1
   3d844:	and	r5, r3, r4
   3d848:	ldr	r2, [ip, r5, lsl #2]
   3d84c:	cmp	r2, #2
   3d850:	beq	3d840 <fb_value_set_remove@@Base+0xa0>
   3d854:	cmp	r2, #0
   3d858:	beq	3d8b0 <fb_value_set_remove@@Base+0x110>
   3d85c:	ldrh	r6, [r2, #8]
   3d860:	cmp	lr, r6
   3d864:	bne	3d840 <fb_value_set_remove@@Base+0xa0>
   3d868:	cmp	lr, #4
   3d86c:	beq	3d828 <fb_value_set_remove@@Base+0x88>
   3d870:	cmp	lr, #6
   3d874:	beq	3d884 <fb_value_set_remove@@Base+0xe4>
   3d878:	cmp	lr, #5
   3d87c:	beq	3d828 <fb_value_set_remove@@Base+0x88>
   3d880:	b	3d840 <fb_value_set_remove@@Base+0xa0>
   3d884:	ldrb	r6, [r2]
   3d888:	ldrb	r7, [r1]
   3d88c:	cmp	r7, r6
   3d890:	bne	3d840 <fb_value_set_remove@@Base+0xa0>
   3d894:	mov	r1, #2
   3d898:	str	r1, [ip, r5, lsl #2]
   3d89c:	ldr	r1, [r0, #8]
   3d8a0:	sub	r1, r1, #1
   3d8a4:	str	r1, [r0, #8]
   3d8a8:	mov	r0, r2
   3d8ac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3d8b0:	mov	r2, #0
   3d8b4:	mov	r0, r2
   3d8b8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0003d8bc <fb_value_set_remove_item@@Base>:
   3d8bc:	b	3d7a4 <fb_value_set_remove@@Base+0x4>

0003d8c0 <fb_value_set_visit@@Base>:
   3d8c0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3d8c4:	add	fp, sp, #24
   3d8c8:	mov	r6, r0
   3d8cc:	ldr	r0, [r0, #12]
   3d8d0:	cmp	r0, #0
   3d8d4:	beq	3d918 <fb_value_set_visit@@Base+0x58>
   3d8d8:	ldr	r7, [r6]
   3d8dc:	mov	r8, r2
   3d8e0:	mov	r5, r1
   3d8e4:	mov	r4, #0
   3d8e8:	b	3d8f8 <fb_value_set_visit@@Base+0x38>
   3d8ec:	add	r4, r4, #1
   3d8f0:	cmp	r4, r0
   3d8f4:	bcs	3d918 <fb_value_set_visit@@Base+0x58>
   3d8f8:	ldr	r1, [r7, r4, lsl #2]
   3d8fc:	orr	r2, r1, #2
   3d900:	cmp	r2, #2
   3d904:	beq	3d8ec <fb_value_set_visit@@Base+0x2c>
   3d908:	mov	r0, r8
   3d90c:	blx	r5
   3d910:	ldr	r0, [r6, #12]
   3d914:	b	3d8ec <fb_value_set_visit@@Base+0x2c>
   3d918:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3d91c:	eor	r1, r1, #-2147483648	; 0x80000000
   3d920:	b	3d928 <fb_value_set_visit@@Base+0x68>
   3d924:	eor	r3, r3, #-2147483648	; 0x80000000
   3d928:	push	{r4, r5, lr}
   3d92c:	lsl	r4, r1, #1
   3d930:	lsl	r5, r3, #1
   3d934:	teq	r4, r5
   3d938:	teqeq	r0, r2
   3d93c:	orrsne	ip, r4, r0
   3d940:	orrsne	ip, r5, r2
   3d944:	mvnsne	ip, r4, asr #21
   3d948:	mvnsne	ip, r5, asr #21
   3d94c:	beq	3db38 <fb_value_set_visit@@Base+0x278>
   3d950:	lsr	r4, r4, #21
   3d954:	rsbs	r5, r4, r5, lsr #21
   3d958:	rsblt	r5, r5, #0
   3d95c:	ble	3d97c <fb_value_set_visit@@Base+0xbc>
   3d960:	add	r4, r4, r5
   3d964:	eor	r2, r0, r2
   3d968:	eor	r3, r1, r3
   3d96c:	eor	r0, r2, r0
   3d970:	eor	r1, r3, r1
   3d974:	eor	r2, r0, r2
   3d978:	eor	r3, r1, r3
   3d97c:	cmp	r5, #54	; 0x36
   3d980:	pophi	{r4, r5, pc}
   3d984:	tst	r1, #-2147483648	; 0x80000000
   3d988:	lsl	r1, r1, #12
   3d98c:	mov	ip, #1048576	; 0x100000
   3d990:	orr	r1, ip, r1, lsr #12
   3d994:	beq	3d9a0 <fb_value_set_visit@@Base+0xe0>
   3d998:	rsbs	r0, r0, #0
   3d99c:	rsc	r1, r1, #0
   3d9a0:	tst	r3, #-2147483648	; 0x80000000
   3d9a4:	lsl	r3, r3, #12
   3d9a8:	orr	r3, ip, r3, lsr #12
   3d9ac:	beq	3d9b8 <fb_value_set_visit@@Base+0xf8>
   3d9b0:	rsbs	r2, r2, #0
   3d9b4:	rsc	r3, r3, #0
   3d9b8:	teq	r4, r5
   3d9bc:	beq	3db20 <fb_value_set_visit@@Base+0x260>
   3d9c0:	sub	r4, r4, #1
   3d9c4:	rsbs	lr, r5, #32
   3d9c8:	blt	3d9e4 <fb_value_set_visit@@Base+0x124>
   3d9cc:	lsl	ip, r2, lr
   3d9d0:	adds	r0, r0, r2, lsr r5
   3d9d4:	adc	r1, r1, #0
   3d9d8:	adds	r0, r0, r3, lsl lr
   3d9dc:	adcs	r1, r1, r3, asr r5
   3d9e0:	b	3da00 <fb_value_set_visit@@Base+0x140>
   3d9e4:	sub	r5, r5, #32
   3d9e8:	add	lr, lr, #32
   3d9ec:	cmp	r2, #1
   3d9f0:	lsl	ip, r3, lr
   3d9f4:	orrcs	ip, ip, #2
   3d9f8:	adds	r0, r0, r3, asr r5
   3d9fc:	adcs	r1, r1, r3, asr #31
   3da00:	and	r5, r1, #-2147483648	; 0x80000000
   3da04:	bpl	3da14 <fb_value_set_visit@@Base+0x154>
   3da08:	rsbs	ip, ip, #0
   3da0c:	rscs	r0, r0, #0
   3da10:	rsc	r1, r1, #0
   3da14:	cmp	r1, #1048576	; 0x100000
   3da18:	bcc	3da58 <fb_value_set_visit@@Base+0x198>
   3da1c:	cmp	r1, #2097152	; 0x200000
   3da20:	bcc	3da40 <fb_value_set_visit@@Base+0x180>
   3da24:	lsrs	r1, r1, #1
   3da28:	rrxs	r0, r0
   3da2c:	rrx	ip, ip
   3da30:	add	r4, r4, #1
   3da34:	lsl	r2, r4, #21
   3da38:	cmn	r2, #4194304	; 0x400000
   3da3c:	bcs	3db98 <fb_value_set_visit@@Base+0x2d8>
   3da40:	cmp	ip, #-2147483648	; 0x80000000
   3da44:	lsrseq	ip, r0, #1
   3da48:	adcs	r0, r0, #0
   3da4c:	adc	r1, r1, r4, lsl #20
   3da50:	orr	r1, r1, r5
   3da54:	pop	{r4, r5, pc}
   3da58:	lsls	ip, ip, #1
   3da5c:	adcs	r0, r0, r0
   3da60:	adc	r1, r1, r1
   3da64:	tst	r1, #1048576	; 0x100000
   3da68:	sub	r4, r4, #1
   3da6c:	bne	3da40 <fb_value_set_visit@@Base+0x180>
   3da70:	teq	r1, #0
   3da74:	moveq	r1, r0
   3da78:	moveq	r0, #0
   3da7c:	clz	r3, r1
   3da80:	addeq	r3, r3, #32
   3da84:	sub	r3, r3, #11
   3da88:	subs	r2, r3, #32
   3da8c:	bge	3dab0 <fb_value_set_visit@@Base+0x1f0>
   3da90:	adds	r2, r2, #12
   3da94:	ble	3daac <fb_value_set_visit@@Base+0x1ec>
   3da98:	add	ip, r2, #20
   3da9c:	rsb	r2, r2, #12
   3daa0:	lsl	r0, r1, ip
   3daa4:	lsr	r1, r1, r2
   3daa8:	b	3dac0 <fb_value_set_visit@@Base+0x200>
   3daac:	add	r2, r2, #20
   3dab0:	rsble	ip, r2, #32
   3dab4:	lsl	r1, r1, r2
   3dab8:	orrle	r1, r1, r0, lsr ip
   3dabc:	lslle	r0, r0, r2
   3dac0:	subs	r4, r4, r3
   3dac4:	addge	r1, r1, r4, lsl #20
   3dac8:	orrge	r1, r1, r5
   3dacc:	popge	{r4, r5, pc}
   3dad0:	mvn	r4, r4
   3dad4:	subs	r4, r4, #31
   3dad8:	bge	3db14 <fb_value_set_visit@@Base+0x254>
   3dadc:	adds	r4, r4, #12
   3dae0:	bgt	3dafc <fb_value_set_visit@@Base+0x23c>
   3dae4:	add	r4, r4, #20
   3dae8:	rsb	r2, r4, #32
   3daec:	lsr	r0, r0, r4
   3daf0:	orr	r0, r0, r1, lsl r2
   3daf4:	orr	r1, r5, r1, lsr r4
   3daf8:	pop	{r4, r5, pc}
   3dafc:	rsb	r4, r4, #12
   3db00:	rsb	r2, r4, #32
   3db04:	lsr	r0, r0, r2
   3db08:	orr	r0, r0, r1, lsl r4
   3db0c:	mov	r1, r5
   3db10:	pop	{r4, r5, pc}
   3db14:	lsr	r0, r1, r4
   3db18:	mov	r1, r5
   3db1c:	pop	{r4, r5, pc}
   3db20:	teq	r4, #0
   3db24:	eor	r3, r3, #1048576	; 0x100000
   3db28:	eoreq	r1, r1, #1048576	; 0x100000
   3db2c:	addeq	r4, r4, #1
   3db30:	subne	r5, r5, #1
   3db34:	b	3d9c0 <fb_value_set_visit@@Base+0x100>
   3db38:	mvns	ip, r4, asr #21
   3db3c:	mvnsne	ip, r5, asr #21
   3db40:	beq	3dba8 <fb_value_set_visit@@Base+0x2e8>
   3db44:	teq	r4, r5
   3db48:	teqeq	r0, r2
   3db4c:	beq	3db60 <fb_value_set_visit@@Base+0x2a0>
   3db50:	orrs	ip, r4, r0
   3db54:	moveq	r1, r3
   3db58:	moveq	r0, r2
   3db5c:	pop	{r4, r5, pc}
   3db60:	teq	r1, r3
   3db64:	movne	r1, #0
   3db68:	movne	r0, #0
   3db6c:	popne	{r4, r5, pc}
   3db70:	lsrs	ip, r4, #21
   3db74:	bne	3db88 <fb_value_set_visit@@Base+0x2c8>
   3db78:	lsls	r0, r0, #1
   3db7c:	adcs	r1, r1, r1
   3db80:	orrcs	r1, r1, #-2147483648	; 0x80000000
   3db84:	pop	{r4, r5, pc}
   3db88:	adds	r4, r4, #4194304	; 0x400000
   3db8c:	addcc	r1, r1, #1048576	; 0x100000
   3db90:	popcc	{r4, r5, pc}
   3db94:	and	r5, r1, #-2147483648	; 0x80000000
   3db98:	orr	r1, r5, #2130706432	; 0x7f000000
   3db9c:	orr	r1, r1, #15728640	; 0xf00000
   3dba0:	mov	r0, #0
   3dba4:	pop	{r4, r5, pc}
   3dba8:	mvns	ip, r4, asr #21
   3dbac:	movne	r1, r3
   3dbb0:	movne	r0, r2
   3dbb4:	mvnseq	ip, r5, asr #21
   3dbb8:	movne	r3, r1
   3dbbc:	movne	r2, r0
   3dbc0:	orrs	r4, r0, r1, lsl #12
   3dbc4:	orrseq	r5, r2, r3, lsl #12
   3dbc8:	teqeq	r1, r3
   3dbcc:	orrne	r1, r1, #524288	; 0x80000
   3dbd0:	pop	{r4, r5, pc}
   3dbd4:	teq	r0, #0
   3dbd8:	moveq	r1, #0
   3dbdc:	bxeq	lr
   3dbe0:	push	{r4, r5, lr}
   3dbe4:	mov	r4, #1024	; 0x400
   3dbe8:	add	r4, r4, #50	; 0x32
   3dbec:	mov	r5, #0
   3dbf0:	mov	r1, #0
   3dbf4:	b	3da70 <fb_value_set_visit@@Base+0x1b0>
   3dbf8:	teq	r0, #0
   3dbfc:	moveq	r1, #0
   3dc00:	bxeq	lr
   3dc04:	push	{r4, r5, lr}
   3dc08:	mov	r4, #1024	; 0x400
   3dc0c:	add	r4, r4, #50	; 0x32
   3dc10:	ands	r5, r0, #-2147483648	; 0x80000000
   3dc14:	rsbmi	r0, r0, #0
   3dc18:	mov	r1, #0
   3dc1c:	b	3da70 <fb_value_set_visit@@Base+0x1b0>
   3dc20:	lsls	r2, r0, #1
   3dc24:	asr	r1, r2, #3
   3dc28:	rrx	r1, r1
   3dc2c:	lsl	r0, r2, #28
   3dc30:	andsne	r3, r2, #-16777216	; 0xff000000
   3dc34:	teqne	r3, #-16777216	; 0xff000000
   3dc38:	eorne	r1, r1, #939524096	; 0x38000000
   3dc3c:	bxne	lr
   3dc40:	bics	r2, r2, #-16777216	; 0xff000000
   3dc44:	bxeq	lr
   3dc48:	teq	r3, #-16777216	; 0xff000000
   3dc4c:	orreq	r1, r1, #524288	; 0x80000
   3dc50:	bxeq	lr
   3dc54:	push	{r4, r5, lr}
   3dc58:	mov	r4, #896	; 0x380
   3dc5c:	and	r5, r1, #-2147483648	; 0x80000000
   3dc60:	bic	r1, r1, #-2147483648	; 0x80000000
   3dc64:	b	3da70 <fb_value_set_visit@@Base+0x1b0>
   3dc68:	orrs	r2, r0, r1
   3dc6c:	bxeq	lr
   3dc70:	push	{r4, r5, lr}
   3dc74:	mov	r5, #0
   3dc78:	b	3dc98 <fb_value_set_visit@@Base+0x3d8>
   3dc7c:	orrs	r2, r0, r1
   3dc80:	bxeq	lr
   3dc84:	push	{r4, r5, lr}
   3dc88:	ands	r5, r1, #-2147483648	; 0x80000000
   3dc8c:	bpl	3dc98 <fb_value_set_visit@@Base+0x3d8>
   3dc90:	rsbs	r0, r0, #0
   3dc94:	rsc	r1, r1, #0
   3dc98:	mov	r4, #1024	; 0x400
   3dc9c:	add	r4, r4, #50	; 0x32
   3dca0:	lsrs	ip, r1, #22
   3dca4:	beq	3da14 <fb_value_set_visit@@Base+0x154>
   3dca8:	mov	r2, #3
   3dcac:	lsrs	ip, ip, #3
   3dcb0:	addne	r2, r2, #3
   3dcb4:	lsrs	ip, ip, #3
   3dcb8:	addne	r2, r2, #3
   3dcbc:	add	r2, r2, ip, lsr #3
   3dcc0:	rsb	r3, r2, #32
   3dcc4:	lsl	ip, r0, r3
   3dcc8:	lsr	r0, r0, r2
   3dccc:	orr	r0, r0, r1, lsl r3
   3dcd0:	lsr	r1, r1, r2
   3dcd4:	add	r4, r4, r2
   3dcd8:	b	3da14 <fb_value_set_visit@@Base+0x154>
   3dcdc:	eor	r0, r0, #-2147483648	; 0x80000000
   3dce0:	b	3dce8 <fb_value_set_visit@@Base+0x428>
   3dce4:	eor	r1, r1, #-2147483648	; 0x80000000
   3dce8:	lsls	r2, r0, #1
   3dcec:	lslsne	r3, r1, #1
   3dcf0:	teqne	r2, r3
   3dcf4:	mvnsne	ip, r2, asr #24
   3dcf8:	mvnsne	ip, r3, asr #24
   3dcfc:	beq	3ddf4 <fb_value_set_visit@@Base+0x534>
   3dd00:	lsr	r2, r2, #24
   3dd04:	rsbs	r3, r2, r3, lsr #24
   3dd08:	addgt	r2, r2, r3
   3dd0c:	eorgt	r1, r0, r1
   3dd10:	eorgt	r0, r1, r0
   3dd14:	eorgt	r1, r0, r1
   3dd18:	rsblt	r3, r3, #0
   3dd1c:	cmp	r3, #25
   3dd20:	bxhi	lr
   3dd24:	tst	r0, #-2147483648	; 0x80000000
   3dd28:	orr	r0, r0, #8388608	; 0x800000
   3dd2c:	bic	r0, r0, #-16777216	; 0xff000000
   3dd30:	rsbne	r0, r0, #0
   3dd34:	tst	r1, #-2147483648	; 0x80000000
   3dd38:	orr	r1, r1, #8388608	; 0x800000
   3dd3c:	bic	r1, r1, #-16777216	; 0xff000000
   3dd40:	rsbne	r1, r1, #0
   3dd44:	teq	r2, r3
   3dd48:	beq	3dddc <fb_value_set_visit@@Base+0x51c>
   3dd4c:	sub	r2, r2, #1
   3dd50:	adds	r0, r0, r1, asr r3
   3dd54:	rsb	r3, r3, #32
   3dd58:	lsl	r1, r1, r3
   3dd5c:	and	r3, r0, #-2147483648	; 0x80000000
   3dd60:	bpl	3dd6c <fb_value_set_visit@@Base+0x4ac>
   3dd64:	rsbs	r1, r1, #0
   3dd68:	rsc	r0, r0, #0
   3dd6c:	cmp	r0, #8388608	; 0x800000
   3dd70:	bcc	3dda4 <fb_value_set_visit@@Base+0x4e4>
   3dd74:	cmp	r0, #16777216	; 0x1000000
   3dd78:	bcc	3dd90 <fb_value_set_visit@@Base+0x4d0>
   3dd7c:	lsrs	r0, r0, #1
   3dd80:	rrx	r1, r1
   3dd84:	add	r2, r2, #1
   3dd88:	cmp	r2, #254	; 0xfe
   3dd8c:	bcs	3de48 <fb_value_set_visit@@Base+0x588>
   3dd90:	cmp	r1, #-2147483648	; 0x80000000
   3dd94:	adc	r0, r0, r2, lsl #23
   3dd98:	biceq	r0, r0, #1
   3dd9c:	orr	r0, r0, r3
   3dda0:	bx	lr
   3dda4:	lsls	r1, r1, #1
   3dda8:	adc	r0, r0, r0
   3ddac:	tst	r0, #8388608	; 0x800000
   3ddb0:	sub	r2, r2, #1
   3ddb4:	bne	3dd90 <fb_value_set_visit@@Base+0x4d0>
   3ddb8:	clz	ip, r0
   3ddbc:	sub	ip, ip, #8
   3ddc0:	subs	r2, r2, ip
   3ddc4:	lsl	r0, r0, ip
   3ddc8:	addge	r0, r0, r2, lsl #23
   3ddcc:	rsblt	r2, r2, #0
   3ddd0:	orrge	r0, r0, r3
   3ddd4:	orrlt	r0, r3, r0, lsr r2
   3ddd8:	bx	lr
   3dddc:	teq	r2, #0
   3dde0:	eor	r1, r1, #8388608	; 0x800000
   3dde4:	eoreq	r0, r0, #8388608	; 0x800000
   3dde8:	addeq	r2, r2, #1
   3ddec:	subne	r3, r3, #1
   3ddf0:	b	3dd4c <fb_value_set_visit@@Base+0x48c>
   3ddf4:	lsl	r3, r1, #1
   3ddf8:	mvns	ip, r2, asr #24
   3ddfc:	mvnsne	ip, r3, asr #24
   3de00:	beq	3de54 <fb_value_set_visit@@Base+0x594>
   3de04:	teq	r2, r3
   3de08:	beq	3de18 <fb_value_set_visit@@Base+0x558>
   3de0c:	teq	r2, #0
   3de10:	moveq	r0, r1
   3de14:	bx	lr
   3de18:	teq	r0, r1
   3de1c:	movne	r0, #0
   3de20:	bxne	lr
   3de24:	tst	r2, #-16777216	; 0xff000000
   3de28:	bne	3de38 <fb_value_set_visit@@Base+0x578>
   3de2c:	lsls	r0, r0, #1
   3de30:	orrcs	r0, r0, #-2147483648	; 0x80000000
   3de34:	bx	lr
   3de38:	adds	r2, r2, #33554432	; 0x2000000
   3de3c:	addcc	r0, r0, #8388608	; 0x800000
   3de40:	bxcc	lr
   3de44:	and	r3, r0, #-2147483648	; 0x80000000
   3de48:	orr	r0, r3, #2130706432	; 0x7f000000
   3de4c:	orr	r0, r0, #8388608	; 0x800000
   3de50:	bx	lr
   3de54:	mvns	r2, r2, asr #24
   3de58:	movne	r0, r1
   3de5c:	mvnseq	r3, r3, asr #24
   3de60:	movne	r1, r0
   3de64:	lsls	r2, r0, #9
   3de68:	lslseq	r3, r1, #9
   3de6c:	teqeq	r0, r1
   3de70:	orrne	r0, r0, #4194304	; 0x400000
   3de74:	bx	lr
   3de78:	mov	r3, #0
   3de7c:	b	3de88 <fb_value_set_visit@@Base+0x5c8>
   3de80:	ands	r3, r0, #-2147483648	; 0x80000000
   3de84:	rsbmi	r0, r0, #0
   3de88:	movs	ip, r0
   3de8c:	bxeq	lr
   3de90:	orr	r3, r3, #1258291200	; 0x4b000000
   3de94:	mov	r1, r0
   3de98:	mov	r0, #0
   3de9c:	b	3dee0 <fb_value_set_visit@@Base+0x620>
   3dea0:	orrs	r2, r0, r1
   3dea4:	bxeq	lr
   3dea8:	mov	r3, #0
   3deac:	b	3dec8 <fb_value_set_visit@@Base+0x608>
   3deb0:	orrs	r2, r0, r1
   3deb4:	bxeq	lr
   3deb8:	ands	r3, r1, #-2147483648	; 0x80000000
   3debc:	bpl	3dec8 <fb_value_set_visit@@Base+0x608>
   3dec0:	rsbs	r0, r0, #0
   3dec4:	rsc	r1, r1, #0
   3dec8:	movs	ip, r1
   3decc:	moveq	ip, r0
   3ded0:	moveq	r1, r0
   3ded4:	moveq	r0, #0
   3ded8:	orr	r3, r3, #1526726656	; 0x5b000000
   3dedc:	subeq	r3, r3, #268435456	; 0x10000000
   3dee0:	sub	r3, r3, #8388608	; 0x800000
   3dee4:	clz	r2, ip
   3dee8:	subs	r2, r2, #8
   3deec:	sub	r3, r3, r2, lsl #23
   3def0:	blt	3df10 <fb_value_set_visit@@Base+0x650>
   3def4:	add	r3, r3, r1, lsl r2
   3def8:	lsl	ip, r0, r2
   3defc:	rsb	r2, r2, #32
   3df00:	cmp	ip, #-2147483648	; 0x80000000
   3df04:	adc	r0, r3, r0, lsr r2
   3df08:	biceq	r0, r0, #1
   3df0c:	bx	lr
   3df10:	add	r2, r2, #32
   3df14:	lsl	ip, r1, r2
   3df18:	rsb	r2, r2, #32
   3df1c:	orrs	r0, r0, ip, lsl #1
   3df20:	adc	r0, r3, r1, lsr r2
   3df24:	biceq	r0, r0, ip, lsr #31
   3df28:	bx	lr
   3df2c:	cmp	r3, #0
   3df30:	cmpeq	r2, #0
   3df34:	bne	3df4c <fb_value_set_visit@@Base+0x68c>
   3df38:	cmp	r1, #0
   3df3c:	cmpeq	r0, #0
   3df40:	mvnne	r1, #0
   3df44:	mvnne	r0, #0
   3df48:	b	3df68 <fb_value_set_visit@@Base+0x6a8>
   3df4c:	sub	sp, sp, #8
   3df50:	push	{sp, lr}
   3df54:	bl	3e050 <fb_value_set_visit@@Base+0x790>
   3df58:	ldr	lr, [sp, #4]
   3df5c:	add	sp, sp, #8
   3df60:	pop	{r2, r3}
   3df64:	bx	lr
   3df68:	push	{r1, lr}
   3df6c:	mov	r0, #8
   3df70:	bl	147d8 <raise@plt>
   3df74:	pop	{r1, pc}
   3df78:	vmov	s15, r0
   3df7c:	vcmpe.f32	s15, #0.0
   3df80:	vmrs	APSR_nzcv, fpscr
   3df84:	bmi	3df8c <fb_value_set_visit@@Base+0x6cc>
   3df88:	b	3dfd0 <fb_value_set_visit@@Base+0x710>
   3df8c:	push	{r4, lr}
   3df90:	eor	r0, r0, #-2147483648	; 0x80000000
   3df94:	bl	3dfd0 <fb_value_set_visit@@Base+0x710>
   3df98:	rsbs	r0, r0, #0
   3df9c:	rsc	r1, r1, #0
   3dfa0:	pop	{r4, pc}
   3dfa4:	vmov	d7, r0, r1
   3dfa8:	vcmpe.f64	d7, #0.0
   3dfac:	vmrs	APSR_nzcv, fpscr
   3dfb0:	bmi	3dfb8 <fb_value_set_visit@@Base+0x6f8>
   3dfb4:	b	3e010 <fb_value_set_visit@@Base+0x750>
   3dfb8:	push	{r4, lr}
   3dfbc:	eor	r1, r1, #-2147483648	; 0x80000000
   3dfc0:	bl	3e010 <fb_value_set_visit@@Base+0x750>
   3dfc4:	rsbs	r0, r0, #0
   3dfc8:	rsc	r1, r1, #0
   3dfcc:	pop	{r4, pc}
   3dfd0:	vmov	s15, r0
   3dfd4:	vldr	d5, [pc, #36]	; 3e000 <fb_value_set_visit@@Base+0x740>
   3dfd8:	vcvt.f64.f32	d6, s15
   3dfdc:	vldr	d7, [pc, #36]	; 3e008 <fb_value_set_visit@@Base+0x748>
   3dfe0:	vmul.f64	d7, d6, d7
   3dfe4:	vcvt.u32.f64	s14, d7
   3dfe8:	vcvt.f64.u32	d4, s14
   3dfec:	vmov	r1, s14
   3dff0:	vmls.f64	d6, d4, d5
   3dff4:	vcvt.u32.f64	s15, d6
   3dff8:	vmov	r0, s15
   3dffc:	bx	lr
   3e000:	andeq	r0, r0, r0
   3e004:	mvnsmi	r0, r0
   3e008:	andeq	r0, r0, r0
   3e00c:	ldclcc	0, cr0, [r0]
   3e010:	vmov	d6, r0, r1
   3e014:	vldr	d7, [pc, #36]	; 3e040 <fb_value_set_visit@@Base+0x780>
   3e018:	vldr	d5, [pc, #40]	; 3e048 <fb_value_set_visit@@Base+0x788>
   3e01c:	vmul.f64	d7, d6, d7
   3e020:	vcvt.u32.f64	s14, d7
   3e024:	vcvt.f64.u32	d4, s14
   3e028:	vmov	r1, s14
   3e02c:	vmls.f64	d6, d4, d5
   3e030:	vcvt.u32.f64	s15, d6
   3e034:	vmov	r0, s15
   3e038:	bx	lr
   3e03c:	nop			; (mov r0, r0)
   3e040:	andeq	r0, r0, r0
   3e044:	ldclcc	0, cr0, [r0]
   3e048:	andeq	r0, r0, r0
   3e04c:	mvnsmi	r0, r0
   3e050:	cmp	r1, r3
   3e054:	cmpeq	r0, r2
   3e058:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3e05c:	mov	r4, r0
   3e060:	movcc	r0, #0
   3e064:	mov	r5, r1
   3e068:	ldr	lr, [sp, #36]	; 0x24
   3e06c:	movcc	r1, r0
   3e070:	bcc	3e16c <fb_value_set_visit@@Base+0x8ac>
   3e074:	cmp	r3, #0
   3e078:	clzeq	ip, r2
   3e07c:	clzne	ip, r3
   3e080:	addeq	ip, ip, #32
   3e084:	cmp	r5, #0
   3e088:	clzeq	r1, r4
   3e08c:	addeq	r1, r1, #32
   3e090:	clzne	r1, r5
   3e094:	sub	ip, ip, r1
   3e098:	sub	sl, ip, #32
   3e09c:	lsl	r9, r3, ip
   3e0a0:	rsb	fp, ip, #32
   3e0a4:	orr	r9, r9, r2, lsl sl
   3e0a8:	orr	r9, r9, r2, lsr fp
   3e0ac:	lsl	r8, r2, ip
   3e0b0:	cmp	r5, r9
   3e0b4:	cmpeq	r4, r8
   3e0b8:	movcc	r0, #0
   3e0bc:	movcc	r1, r0
   3e0c0:	bcc	3e0dc <fb_value_set_visit@@Base+0x81c>
   3e0c4:	mov	r0, #1
   3e0c8:	subs	r4, r4, r8
   3e0cc:	lsl	r1, r0, sl
   3e0d0:	orr	r1, r1, r0, lsr fp
   3e0d4:	lsl	r0, r0, ip
   3e0d8:	sbc	r5, r5, r9
   3e0dc:	cmp	ip, #0
   3e0e0:	beq	3e16c <fb_value_set_visit@@Base+0x8ac>
   3e0e4:	lsr	r6, r8, #1
   3e0e8:	orr	r6, r6, r9, lsl #31
   3e0ec:	lsr	r7, r9, #1
   3e0f0:	mov	r2, ip
   3e0f4:	b	3e118 <fb_value_set_visit@@Base+0x858>
   3e0f8:	subs	r3, r4, r6
   3e0fc:	sbc	r8, r5, r7
   3e100:	adds	r3, r3, r3
   3e104:	adc	r8, r8, r8
   3e108:	adds	r4, r3, #1
   3e10c:	adc	r5, r8, #0
   3e110:	subs	r2, r2, #1
   3e114:	beq	3e134 <fb_value_set_visit@@Base+0x874>
   3e118:	cmp	r5, r7
   3e11c:	cmpeq	r4, r6
   3e120:	bcs	3e0f8 <fb_value_set_visit@@Base+0x838>
   3e124:	adds	r4, r4, r4
   3e128:	adc	r5, r5, r5
   3e12c:	subs	r2, r2, #1
   3e130:	bne	3e118 <fb_value_set_visit@@Base+0x858>
   3e134:	lsr	r3, r4, ip
   3e138:	orr	r3, r3, r5, lsl fp
   3e13c:	lsr	r2, r5, ip
   3e140:	orr	r3, r3, r5, lsr sl
   3e144:	adds	r0, r0, r4
   3e148:	mov	r4, r3
   3e14c:	lsl	r3, r2, ip
   3e150:	orr	r3, r3, r4, lsl sl
   3e154:	lsl	ip, r4, ip
   3e158:	orr	r3, r3, r4, lsr fp
   3e15c:	adc	r1, r1, r5
   3e160:	subs	r0, r0, ip
   3e164:	mov	r5, r2
   3e168:	sbc	r1, r1, r3
   3e16c:	cmp	lr, #0
   3e170:	strdne	r4, [lr]
   3e174:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003e178 <__libc_csu_init@@Base>:
   3e178:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3e17c:	mov	r7, r0
   3e180:	ldr	r6, [pc, #72]	; 3e1d0 <__libc_csu_init@@Base+0x58>
   3e184:	ldr	r5, [pc, #72]	; 3e1d4 <__libc_csu_init@@Base+0x5c>
   3e188:	add	r6, pc, r6
   3e18c:	add	r5, pc, r5
   3e190:	sub	r6, r6, r5
   3e194:	mov	r8, r1
   3e198:	mov	r9, r2
   3e19c:	bl	147ac <calloc@plt-0x20>
   3e1a0:	asrs	r6, r6, #2
   3e1a4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   3e1a8:	mov	r4, #0
   3e1ac:	add	r4, r4, #1
   3e1b0:	ldr	r3, [r5], #4
   3e1b4:	mov	r2, r9
   3e1b8:	mov	r1, r8
   3e1bc:	mov	r0, r7
   3e1c0:	blx	r3
   3e1c4:	cmp	r6, r4
   3e1c8:	bne	3e1ac <__libc_csu_init@@Base+0x34>
   3e1cc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3e1d0:	ldrdeq	ip, [r2], -r0
   3e1d4:	andeq	ip, r2, r8, asr #23

0003e1d8 <__libc_csu_fini@@Base>:
   3e1d8:	bx	lr

Disassembly of section .fini:

0003e1dc <.fini>:
   3e1dc:	push	{r3, lr}
   3e1e0:	pop	{r3, pc}
