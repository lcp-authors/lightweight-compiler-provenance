
../repos/charybdis/modules/.libs/m_testmask.so:     file format elf32-littlearm


Disassembly of section .init:

00000650 <_init>:
 650:	push	{r3, lr}
 654:	bl	70c <call_weak_fn>
 658:	pop	{r3, pc}

Disassembly of section .plt:

0000065c <.plt>:
 65c:	push	{lr}		; (str lr, [sp, #-4]!)
 660:	ldr	lr, [pc, #4]	; 66c <.plt+0x10>
 664:	add	lr, pc, lr
 668:	ldr	pc, [lr, #8]!
 66c:	.word	0x00010994

00000670 <__cxa_finalize@plt>:
 670:	add	ip, pc, #0, 12
 674:	add	ip, ip, #16, 20	; 0x10000
 678:	ldr	pc, [ip, #2452]!	; 0x994

0000067c <match_esc@plt>:
 67c:	add	ip, pc, #0, 12
 680:	add	ip, ip, #16, 20	; 0x10000
 684:	ldr	pc, [ip, #2444]!	; 0x98c

00000688 <sendto_one@plt>:
 688:	add	ip, pc, #0, 12
 68c:	add	ip, ip, #16, 20	; 0x10000
 690:	ldr	pc, [ip, #2436]!	; 0x984

00000694 <collapse_esc@plt>:
 694:	add	ip, pc, #0, 12
 698:	add	ip, ip, #16, 20	; 0x10000
 69c:	ldr	pc, [ip, #2428]!	; 0x97c

000006a0 <match_ips@plt>:
 6a0:	add	ip, pc, #0, 12
 6a4:	add	ip, ip, #16, 20	; 0x10000
 6a8:	ldr	pc, [ip, #2420]!	; 0x974

000006ac <strcpy@plt>:
 6ac:	add	ip, pc, #0, 12
 6b0:	add	ip, ip, #16, 20	; 0x10000
 6b4:	ldr	pc, [ip, #2412]!	; 0x96c

000006b8 <__gmon_start__@plt>:
 6b8:	add	ip, pc, #0, 12
 6bc:	add	ip, ip, #16, 20	; 0x10000
 6c0:	ldr	pc, [ip, #2404]!	; 0x964

000006c4 <strlen@plt>:
 6c4:	add	ip, pc, #0, 12
 6c8:	add	ip, ip, #16, 20	; 0x10000
 6cc:	ldr	pc, [ip, #2396]!	; 0x95c

000006d0 <strchr@plt>:
 6d0:	add	ip, pc, #0, 12
 6d4:	add	ip, ip, #16, 20	; 0x10000
 6d8:	ldr	pc, [ip, #2388]!	; 0x954

000006dc <collapse@plt>:
 6dc:	add	ip, pc, #0, 12
 6e0:	add	ip, ip, #16, 20	; 0x10000
 6e4:	ldr	pc, [ip, #2380]!	; 0x94c

000006e8 <match@plt>:
 6e8:	add	ip, pc, #0, 12
 6ec:	add	ip, ip, #16, 20	; 0x10000
 6f0:	ldr	pc, [ip, #2372]!	; 0x944

000006f4 <sendto_one_notice@plt>:
 6f4:	add	ip, pc, #0, 12
 6f8:	add	ip, ip, #16, 20	; 0x10000
 6fc:	ldr	pc, [ip, #2364]!	; 0x93c

00000700 <show_ip@plt>:
 700:	add	ip, pc, #0, 12
 704:	add	ip, ip, #16, 20	; 0x10000
 708:	ldr	pc, [ip, #2356]!	; 0x934

Disassembly of section .text:

0000070c <call_weak_fn>:
 70c:	ldr	r3, [pc, #20]	; 728 <call_weak_fn+0x1c>
 710:	ldr	r2, [pc, #20]	; 72c <call_weak_fn+0x20>
 714:	add	r3, pc, r3
 718:	ldr	r2, [r3, r2]
 71c:	cmp	r2, #0
 720:	bxeq	lr
 724:	b	6b8 <__gmon_start__@plt>
 728:	.word	0x000108e4
 72c:	.word	0x00000048

00000730 <deregister_tm_clones>:
 730:	ldr	r0, [pc, #44]	; 764 <deregister_tm_clones+0x34>
 734:	ldr	r3, [pc, #44]	; 768 <deregister_tm_clones+0x38>
 738:	add	r0, pc, r0
 73c:	add	r3, pc, r3
 740:	cmp	r3, r0
 744:	ldr	r3, [pc, #32]	; 76c <deregister_tm_clones+0x3c>
 748:	add	r3, pc, r3
 74c:	bxeq	lr
 750:	ldr	r2, [pc, #24]	; 770 <deregister_tm_clones+0x40>
 754:	ldr	r3, [r3, r2]
 758:	cmp	r3, #0
 75c:	bxeq	lr
 760:	bx	r3
 764:	.word	0x00010990
 768:	.word	0x0001098c
 76c:	.word	0x000108b0
 770:	.word	0x00000044

00000774 <register_tm_clones>:
 774:	ldr	r0, [pc, #56]	; 7b4 <register_tm_clones+0x40>
 778:	ldr	r3, [pc, #56]	; 7b8 <register_tm_clones+0x44>
 77c:	add	r0, pc, r0
 780:	add	r3, pc, r3
 784:	sub	r1, r3, r0
 788:	ldr	r3, [pc, #44]	; 7bc <register_tm_clones+0x48>
 78c:	asr	r1, r1, #2
 790:	add	r3, pc, r3
 794:	add	r1, r1, r1, lsr #31
 798:	asrs	r1, r1, #1
 79c:	bxeq	lr
 7a0:	ldr	r2, [pc, #24]	; 7c0 <register_tm_clones+0x4c>
 7a4:	ldr	r3, [r3, r2]
 7a8:	cmp	r3, #0
 7ac:	bxeq	lr
 7b0:	bx	r3
 7b4:	.word	0x0001094c
 7b8:	.word	0x00010948
 7bc:	.word	0x00010868
 7c0:	.word	0x00000050

000007c4 <__do_global_dtors_aux>:
 7c4:	ldr	r3, [pc, #76]	; 818 <__do_global_dtors_aux+0x54>
 7c8:	ldr	r2, [pc, #76]	; 81c <__do_global_dtors_aux+0x58>
 7cc:	add	r3, pc, r3
 7d0:	add	r2, pc, r2
 7d4:	ldrb	r3, [r3]
 7d8:	cmp	r3, #0
 7dc:	bxne	lr
 7e0:	ldr	r3, [pc, #56]	; 820 <__do_global_dtors_aux+0x5c>
 7e4:	push	{r4, lr}
 7e8:	ldr	r3, [r2, r3]
 7ec:	cmp	r3, #0
 7f0:	beq	800 <__do_global_dtors_aux+0x3c>
 7f4:	ldr	r3, [pc, #40]	; 824 <__do_global_dtors_aux+0x60>
 7f8:	ldr	r0, [pc, r3]
 7fc:	bl	670 <__cxa_finalize@plt>
 800:	bl	730 <deregister_tm_clones>
 804:	ldr	r3, [pc, #28]	; 828 <__do_global_dtors_aux+0x64>
 808:	mov	r2, #1
 80c:	add	r3, pc, r3
 810:	strb	r2, [r3]
 814:	pop	{r4, pc}
 818:	.word	0x000108fc
 81c:	.word	0x00010828
 820:	.word	0x00000040
 824:	.word	0x00010858
 828:	.word	0x000108bc

0000082c <frame_dummy>:
 82c:	b	774 <register_tm_clones>

00000830 <mo_testmask>:
 830:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 834:	add	fp, sp, #28
 838:	sub	sp, sp, #28
 83c:	ldr	r8, [fp, #8]
 840:	mov	r4, r3
 844:	mov	r7, r2
 848:	ldr	r6, [r8, #4]
 84c:	mov	r0, r6
 850:	bl	6c4 <strlen@plt>
 854:	add	r0, r0, #8
 858:	bic	r0, r0, #7
 85c:	sub	sl, sp, r0
 860:	mov	sp, sl
 864:	mov	r0, sl
 868:	mov	r1, r6
 86c:	bl	6ac <strcpy@plt>
 870:	mov	r0, sl
 874:	bl	6dc <collapse@plt>
 878:	mov	r0, sl
 87c:	mov	r1, #64	; 0x40
 880:	bl	6d0 <strchr@plt>
 884:	cmp	r0, #0
 888:	beq	acc <mo_testmask+0x29c>
 88c:	mov	r1, #0
 890:	strb	r1, [r0], #1
 894:	mov	r1, #33	; 0x21
 898:	str	r0, [fp, #-36]	; 0xffffffdc
 89c:	mov	r0, sl
 8a0:	bl	6d0 <strchr@plt>
 8a4:	cmp	r0, #0
 8a8:	beq	ab8 <mo_testmask+0x288>
 8ac:	mov	r5, r0
 8b0:	mov	r0, #0
 8b4:	strb	r0, [r5], #1
 8b8:	ldrb	r0, [r5]
 8bc:	cmp	r0, #0
 8c0:	beq	acc <mo_testmask+0x29c>
 8c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
 8c8:	ldrb	r0, [r0]
 8cc:	cmp	r0, #0
 8d0:	beq	acc <mo_testmask+0x29c>
 8d4:	mov	r0, #0
 8d8:	cmp	r4, #3
 8dc:	mov	r6, #0
 8e0:	str	r7, [fp, #-48]	; 0xffffffd0
 8e4:	str	r0, [fp, #-44]	; 0xffffffd4
 8e8:	blt	938 <mo_testmask+0x108>
 8ec:	ldr	r4, [r8, #8]
 8f0:	mov	r6, #0
 8f4:	cmp	r4, #0
 8f8:	beq	938 <mo_testmask+0x108>
 8fc:	ldrb	r0, [r4]
 900:	mov	r6, #0
 904:	cmp	r0, #0
 908:	beq	938 <mo_testmask+0x108>
 90c:	mov	r0, r4
 910:	bl	6c4 <strlen@plt>
 914:	add	r0, r0, #8
 918:	bic	r0, r0, #7
 91c:	sub	r6, sp, r0
 920:	mov	sp, r6
 924:	mov	r0, r6
 928:	mov	r1, r4
 92c:	bl	6ac <strcpy@plt>
 930:	mov	r0, r6
 934:	bl	694 <collapse_esc@plt>
 938:	str	r6, [fp, #-40]	; 0xffffffd8
 93c:	ldr	r0, [pc, #844]	; c90 <mo_testmask+0x460>
 940:	ldr	r0, [pc, r0]
 944:	ldr	r8, [r0]
 948:	mov	r0, #0
 94c:	str	r0, [fp, #-52]	; 0xffffffcc
 950:	cmp	r8, #0
 954:	beq	c20 <mo_testmask+0x3f0>
 958:	mov	r0, #0
 95c:	cmp	sl, #0
 960:	beq	ae4 <mo_testmask+0x2b4>
 964:	str	r0, [fp, #-52]	; 0xffffffcc
 968:	mov	r0, #0
 96c:	ldr	r9, [pc, #800]	; c94 <mo_testmask+0x464>
 970:	str	r0, [fp, #-44]	; 0xffffffd4
 974:	add	r9, pc, r9
 978:	ldr	r6, [r8]
 97c:	ldrh	r0, [r6, #80]	; 0x50
 980:	cmp	r0, #64	; 0x40
 984:	bne	a8c <mo_testmask+0x25c>
 988:	ldr	r0, [r6, #24]
 98c:	cmp	r0, #0
 990:	beq	a8c <mo_testmask+0x25c>
 994:	mov	r4, r6
 998:	mov	r7, r9
 99c:	ldrb	r0, [r4, #291]!	; 0x123
 9a0:	cmp	r0, #0
 9a4:	beq	9c8 <mo_testmask+0x198>
 9a8:	ldr	r0, [fp, #-48]	; 0xffffffd0
 9ac:	mov	r1, r6
 9b0:	bl	700 <show_ip@plt>
 9b4:	cmp	r0, #0
 9b8:	ldr	r0, [pc, #728]	; c98 <mo_testmask+0x468>
 9bc:	add	r0, pc, r0
 9c0:	moveq	r4, r0
 9c4:	mov	r7, r4
 9c8:	add	r1, r6, #152	; 0x98
 9cc:	mov	r0, r5
 9d0:	bl	6e8 <match@plt>
 9d4:	cmp	r0, #0
 9d8:	beq	a8c <mo_testmask+0x25c>
 9dc:	ldr	r4, [fp, #-36]	; 0xffffffdc
 9e0:	add	r1, r6, #163	; 0xa3
 9e4:	mov	r0, r4
 9e8:	bl	6e8 <match@plt>
 9ec:	cmp	r0, #0
 9f0:	bne	a30 <mo_testmask+0x200>
 9f4:	add	r1, r6, #227	; 0xe3
 9f8:	mov	r0, r4
 9fc:	bl	6e8 <match@plt>
 a00:	cmp	r0, #0
 a04:	bne	a30 <mo_testmask+0x200>
 a08:	mov	r0, r4
 a0c:	mov	r1, r7
 a10:	bl	6e8 <match@plt>
 a14:	cmp	r0, #0
 a18:	bne	a30 <mo_testmask+0x200>
 a1c:	mov	r0, r4
 a20:	mov	r1, r7
 a24:	bl	6a0 <match_ips@plt>
 a28:	cmp	r0, #0
 a2c:	beq	a8c <mo_testmask+0x25c>
 a30:	add	r1, r6, #88	; 0x58
 a34:	mov	r0, sl
 a38:	bl	6e8 <match@plt>
 a3c:	cmp	r0, #0
 a40:	beq	a8c <mo_testmask+0x25c>
 a44:	ldr	r0, [fp, #-40]	; 0xffffffd8
 a48:	cmp	r0, #0
 a4c:	beq	a68 <mo_testmask+0x238>
 a50:	movw	r0, #345	; 0x159
 a54:	add	r1, r6, r0
 a58:	ldr	r0, [fp, #-40]	; 0xffffffd8
 a5c:	bl	67c <match_esc@plt>
 a60:	cmp	r0, #0
 a64:	beq	a8c <mo_testmask+0x25c>
 a68:	ldrb	r0, [r6, #65]	; 0x41
 a6c:	tst	r0, #32
 a70:	beq	a9c <mo_testmask+0x26c>
 a74:	ldrh	r0, [r6, #80]	; 0x50
 a78:	cmp	r0, #64	; 0x40
 a7c:	bne	a9c <mo_testmask+0x26c>
 a80:	ldr	r0, [fp, #-52]	; 0xffffffcc
 a84:	add	r0, r0, #1
 a88:	str	r0, [fp, #-52]	; 0xffffffcc
 a8c:	ldr	r8, [r8, #8]
 a90:	cmp	r8, #0
 a94:	bne	978 <mo_testmask+0x148>
 a98:	b	c20 <mo_testmask+0x3f0>
 a9c:	ldr	r0, [fp, #-44]	; 0xffffffd4
 aa0:	add	r0, r0, #1
 aa4:	str	r0, [fp, #-44]	; 0xffffffd4
 aa8:	ldr	r8, [r8, #8]
 aac:	cmp	r8, #0
 ab0:	bne	978 <mo_testmask+0x148>
 ab4:	b	c20 <mo_testmask+0x3f0>
 ab8:	mov	r5, sl
 abc:	mov	sl, #0
 ac0:	ldrb	r0, [r5]
 ac4:	cmp	r0, #0
 ac8:	bne	8c4 <mo_testmask+0x94>
 acc:	ldr	r1, [pc, #440]	; c8c <mo_testmask+0x45c>
 ad0:	mov	r0, r7
 ad4:	add	r1, pc, r1
 ad8:	bl	6f4 <sendto_one_notice@plt>
 adc:	sub	sp, fp, #28
 ae0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 ae4:	str	r0, [fp, #-52]	; 0xffffffcc
 ae8:	mov	r0, #0
 aec:	ldr	r6, [pc, #424]	; c9c <mo_testmask+0x46c>
 af0:	str	r0, [fp, #-44]	; 0xffffffd4
 af4:	add	r6, pc, r6
 af8:	ldr	r9, [r8]
 afc:	ldrh	r0, [r9, #80]	; 0x50
 b00:	cmp	r0, #64	; 0x40
 b04:	bne	bf8 <mo_testmask+0x3c8>
 b08:	ldr	r0, [r9, #24]
 b0c:	cmp	r0, #0
 b10:	beq	bf8 <mo_testmask+0x3c8>
 b14:	mov	r4, r9
 b18:	mov	r7, r6
 b1c:	ldrb	r0, [r4, #291]!	; 0x123
 b20:	cmp	r0, #0
 b24:	beq	b48 <mo_testmask+0x318>
 b28:	ldr	r0, [fp, #-48]	; 0xffffffd0
 b2c:	mov	r1, r9
 b30:	bl	700 <show_ip@plt>
 b34:	cmp	r0, #0
 b38:	ldr	r0, [pc, #352]	; ca0 <mo_testmask+0x470>
 b3c:	add	r0, pc, r0
 b40:	moveq	r4, r0
 b44:	mov	r7, r4
 b48:	add	r1, r9, #152	; 0x98
 b4c:	mov	r0, r5
 b50:	bl	6e8 <match@plt>
 b54:	cmp	r0, #0
 b58:	beq	bf8 <mo_testmask+0x3c8>
 b5c:	ldr	r4, [fp, #-36]	; 0xffffffdc
 b60:	add	r1, r9, #163	; 0xa3
 b64:	mov	r0, r4
 b68:	bl	6e8 <match@plt>
 b6c:	cmp	r0, #0
 b70:	bne	bb0 <mo_testmask+0x380>
 b74:	add	r1, r9, #227	; 0xe3
 b78:	mov	r0, r4
 b7c:	bl	6e8 <match@plt>
 b80:	cmp	r0, #0
 b84:	bne	bb0 <mo_testmask+0x380>
 b88:	mov	r0, r4
 b8c:	mov	r1, r7
 b90:	bl	6e8 <match@plt>
 b94:	cmp	r0, #0
 b98:	bne	bb0 <mo_testmask+0x380>
 b9c:	mov	r0, r4
 ba0:	mov	r1, r7
 ba4:	bl	6a0 <match_ips@plt>
 ba8:	cmp	r0, #0
 bac:	beq	bf8 <mo_testmask+0x3c8>
 bb0:	ldr	r0, [fp, #-40]	; 0xffffffd8
 bb4:	cmp	r0, #0
 bb8:	beq	bd4 <mo_testmask+0x3a4>
 bbc:	movw	r0, #345	; 0x159
 bc0:	add	r1, r9, r0
 bc4:	ldr	r0, [fp, #-40]	; 0xffffffd8
 bc8:	bl	67c <match_esc@plt>
 bcc:	cmp	r0, #0
 bd0:	beq	bf8 <mo_testmask+0x3c8>
 bd4:	ldrb	r0, [r9, #65]	; 0x41
 bd8:	tst	r0, #32
 bdc:	beq	c08 <mo_testmask+0x3d8>
 be0:	ldrh	r0, [r9, #80]	; 0x50
 be4:	cmp	r0, #64	; 0x40
 be8:	bne	c08 <mo_testmask+0x3d8>
 bec:	ldr	r0, [fp, #-52]	; 0xffffffcc
 bf0:	add	r0, r0, #1
 bf4:	str	r0, [fp, #-52]	; 0xffffffcc
 bf8:	ldr	r8, [r8, #8]
 bfc:	cmp	r8, #0
 c00:	bne	af8 <mo_testmask+0x2c8>
 c04:	b	c20 <mo_testmask+0x3f0>
 c08:	ldr	r0, [fp, #-44]	; 0xffffffd4
 c0c:	add	r0, r0, #1
 c10:	str	r0, [fp, #-44]	; 0xffffffd4
 c14:	ldr	r8, [r8, #8]
 c18:	cmp	r8, #0
 c1c:	bne	af8 <mo_testmask+0x2c8>
 c20:	ldr	r0, [pc, #124]	; ca4 <mo_testmask+0x474>
 c24:	ldr	r1, [fp, #-40]	; 0xffffffd8
 c28:	add	r0, pc, r0
 c2c:	cmp	r1, #0
 c30:	moveq	r1, r0
 c34:	sub	sp, sp, #24
 c38:	cmp	sl, #0
 c3c:	moveq	sl, r0
 c40:	ldr	r0, [fp, #-52]	; 0xffffffcc
 c44:	str	r0, [sp]
 c48:	ldr	r0, [fp, #-44]	; 0xffffffd4
 c4c:	stmib	sp, {r0, sl}
 c50:	str	r5, [sp, #12]
 c54:	str	r1, [sp, #20]
 c58:	ldr	r0, [fp, #-36]	; 0xffffffdc
 c5c:	str	r0, [sp, #16]
 c60:	ldr	r0, [fp, #-48]	; 0xffffffd0
 c64:	ldr	r1, [pc, #60]	; ca8 <mo_testmask+0x478>
 c68:	add	r3, r0, #88	; 0x58
 c6c:	ldr	r1, [pc, r1]
 c70:	add	r2, r1, #88	; 0x58
 c74:	ldr	r1, [pc, #48]	; cac <mo_testmask+0x47c>
 c78:	add	r1, pc, r1
 c7c:	bl	688 <sendto_one@plt>
 c80:	add	sp, sp, #24
 c84:	sub	sp, fp, #28
 c88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 c8c:	.word	0x000001e5
 c90:	.word	0x00010704
 c94:	.word	0x00000394
 c98:	.word	0x0000035c
 c9c:	.word	0x00000214
 ca0:	.word	0x000001dc
 ca4:	.word	0x000000de
 ca8:	.word	0x000103e0
 cac:	.word	0x00000055

Disassembly of section .fini:

00000cb0 <_fini>:
 cb0:	push	{r3, lr}
 cb4:	pop	{r3, pc}
