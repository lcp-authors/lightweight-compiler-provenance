
../repos/eddieantonio-ocreval-3ab279a/wordaccdist/wordaccdist:     file format elf32-littlearm


Disassembly of section .init:

0001079c <.init>:
   1079c:	push	{r3, lr}
   107a0:	bl	108f4 <abort@plt+0x48>
   107a4:	pop	{r3, pc}

Disassembly of section .plt:

000107a8 <calloc@plt-0x14>:
   107a8:	push	{lr}		; (str lr, [sp, #-4]!)
   107ac:	ldr	lr, [pc, #4]	; 107b8 <calloc@plt-0x4>
   107b0:	add	lr, pc, lr
   107b4:	ldr	pc, [lr, #8]!
   107b8:	andeq	r3, r1, r8, asr #16

000107bc <calloc@plt>:
   107bc:	add	ip, pc, #0, 12
   107c0:	add	ip, ip, #77824	; 0x13000
   107c4:	ldr	pc, [ip, #2120]!	; 0x848

000107c8 <strcmp@plt>:
   107c8:	add	ip, pc, #0, 12
   107cc:	add	ip, ip, #77824	; 0x13000
   107d0:	ldr	pc, [ip, #2112]!	; 0x840

000107d4 <fopen@plt>:
   107d4:	add	ip, pc, #0, 12
   107d8:	add	ip, ip, #77824	; 0x13000
   107dc:	ldr	pc, [ip, #2104]!	; 0x838

000107e0 <free@plt>:
   107e0:	add	ip, pc, #0, 12
   107e4:	add	ip, ip, #77824	; 0x13000
   107e8:	ldr	pc, [ip, #2096]!	; 0x830

000107ec <fgets@plt>:
   107ec:	add	ip, pc, #0, 12
   107f0:	add	ip, ip, #77824	; 0x13000
   107f4:	ldr	pc, [ip, #2088]!	; 0x828

000107f8 <strdup@plt>:
   107f8:	add	ip, pc, #0, 12
   107fc:	add	ip, ip, #77824	; 0x13000
   10800:	ldr	pc, [ip, #2080]!	; 0x820

00010804 <__xstat@plt>:
   10804:	add	ip, pc, #0, 12
   10808:	add	ip, ip, #77824	; 0x13000
   1080c:	ldr	pc, [ip, #2072]!	; 0x818

00010810 <__libc_start_main@plt>:
   10810:	add	ip, pc, #0, 12
   10814:	add	ip, ip, #77824	; 0x13000
   10818:	ldr	pc, [ip, #2064]!	; 0x810

0001081c <__sysv_signal@plt>:
   1081c:	add	ip, pc, #0, 12
   10820:	add	ip, ip, #77824	; 0x13000
   10824:	ldr	pc, [ip, #2056]!	; 0x808

00010828 <__gmon_start__@plt>:
   10828:	add	ip, pc, #0, 12
   1082c:	add	ip, ip, #77824	; 0x13000
   10830:	ldr	pc, [ip, #2048]!	; 0x800

00010834 <exit@plt>:
   10834:	add	ip, pc, #0, 12
   10838:	add	ip, ip, #77824	; 0x13000
   1083c:	ldr	pc, [ip, #2040]!	; 0x7f8

00010840 <strlen@plt>:
   10840:	add	ip, pc, #0, 12
   10844:	add	ip, ip, #77824	; 0x13000
   10848:	ldr	pc, [ip, #2032]!	; 0x7f0

0001084c <fprintf@plt>:
   1084c:	add	ip, pc, #0, 12
   10850:	add	ip, ip, #77824	; 0x13000
   10854:	ldr	pc, [ip, #2024]!	; 0x7e8

00010858 <__isoc99_sscanf@plt>:
   10858:	add	ip, pc, #0, 12
   1085c:	add	ip, ip, #77824	; 0x13000
   10860:	ldr	pc, [ip, #2016]!	; 0x7e0

00010864 <fclose@plt>:
   10864:	add	ip, pc, #0, 12
   10868:	add	ip, ip, #77824	; 0x13000
   1086c:	ldr	pc, [ip, #2008]!	; 0x7d8

00010870 <fputc@plt>:
   10870:	add	ip, pc, #0, 12
   10874:	add	ip, ip, #77824	; 0x13000
   10878:	ldr	pc, [ip, #2000]!	; 0x7d0

0001087c <sprintf@plt>:
   1087c:	add	ip, pc, #0, 12
   10880:	add	ip, ip, #77824	; 0x13000
   10884:	ldr	pc, [ip, #1992]!	; 0x7c8

00010888 <atoi@plt>:
   10888:	add	ip, pc, #0, 12
   1088c:	add	ip, ip, #77824	; 0x13000
   10890:	ldr	pc, [ip, #1984]!	; 0x7c0

00010894 <fputs@plt>:
   10894:	add	ip, pc, #0, 12
   10898:	add	ip, ip, #77824	; 0x13000
   1089c:	ldr	pc, [ip, #1976]!	; 0x7b8

000108a0 <strncmp@plt>:
   108a0:	add	ip, pc, #0, 12
   108a4:	add	ip, ip, #77824	; 0x13000
   108a8:	ldr	pc, [ip, #1968]!	; 0x7b0

000108ac <abort@plt>:
   108ac:	add	ip, pc, #0, 12
   108b0:	add	ip, ip, #77824	; 0x13000
   108b4:	ldr	pc, [ip, #1960]!	; 0x7a8

Disassembly of section .text:

000108b8 <error@@Base-0xb08>:
   108b8:	mov	fp, #0
   108bc:	mov	lr, #0
   108c0:	pop	{r1}		; (ldr r1, [sp], #4)
   108c4:	mov	r2, sp
   108c8:	push	{r2}		; (str r2, [sp, #-4]!)
   108cc:	push	{r0}		; (str r0, [sp, #-4]!)
   108d0:	ldr	ip, [pc, #16]	; 108e8 <abort@plt+0x3c>
   108d4:	push	{ip}		; (str ip, [sp, #-4]!)
   108d8:	ldr	r0, [pc, #12]	; 108ec <abort@plt+0x40>
   108dc:	ldr	r3, [pc, #12]	; 108f0 <abort@plt+0x44>
   108e0:	bl	10810 <__libc_start_main@plt>
   108e4:	bl	108ac <abort@plt>
   108e8:	strdeq	r3, [r1], -r4
   108ec:	andeq	r0, r1, r8, asr #20
   108f0:	muleq	r1, r4, r1
   108f4:	ldr	r3, [pc, #20]	; 10910 <abort@plt+0x64>
   108f8:	ldr	r2, [pc, #20]	; 10914 <abort@plt+0x68>
   108fc:	add	r3, pc, r3
   10900:	ldr	r2, [r3, r2]
   10904:	cmp	r2, #0
   10908:	bxeq	lr
   1090c:	b	10828 <__gmon_start__@plt>
   10910:	strdeq	r3, [r1], -ip
   10914:	muleq	r0, ip, r0
   10918:	ldr	r0, [pc, #24]	; 10938 <abort@plt+0x8c>
   1091c:	ldr	r3, [pc, #24]	; 1093c <abort@plt+0x90>
   10920:	cmp	r3, r0
   10924:	bxeq	lr
   10928:	ldr	r3, [pc, #16]	; 10940 <abort@plt+0x94>
   1092c:	cmp	r3, #0
   10930:	bxeq	lr
   10934:	bx	r3
   10938:	andeq	r4, r2, ip, ror #1
   1093c:	andeq	r4, r2, ip, ror #1
   10940:	andeq	r0, r0, r0
   10944:	ldr	r0, [pc, #36]	; 10970 <abort@plt+0xc4>
   10948:	ldr	r1, [pc, #36]	; 10974 <abort@plt+0xc8>
   1094c:	sub	r1, r1, r0
   10950:	asr	r1, r1, #2
   10954:	add	r1, r1, r1, lsr #31
   10958:	asrs	r1, r1, #1
   1095c:	bxeq	lr
   10960:	ldr	r3, [pc, #16]	; 10978 <abort@plt+0xcc>
   10964:	cmp	r3, #0
   10968:	bxeq	lr
   1096c:	bx	r3
   10970:	andeq	r4, r2, ip, ror #1
   10974:	andeq	r4, r2, ip, ror #1
   10978:	andeq	r0, r0, r0
   1097c:	push	{r4, lr}
   10980:	ldr	r4, [pc, #24]	; 109a0 <abort@plt+0xf4>
   10984:	ldrb	r3, [r4]
   10988:	cmp	r3, #0
   1098c:	popne	{r4, pc}
   10990:	bl	10918 <abort@plt+0x6c>
   10994:	mov	r3, #1
   10998:	strb	r3, [r4]
   1099c:	pop	{r4, pc}
   109a0:	andeq	r4, r2, ip, ror #1
   109a4:	b	10944 <abort@plt+0x98>
   109a8:	push	{fp, lr}
   109ac:	mov	fp, sp
   109b0:	sub	sp, sp, #24
   109b4:	ldr	r1, [pc, #132]	; 10a40 <abort@plt+0x194>
   109b8:	ldr	r1, [pc, r1]
   109bc:	ldr	r2, [pc, #128]	; 10a44 <abort@plt+0x198>
   109c0:	ldr	r2, [pc, r2]
   109c4:	str	r0, [fp, #-4]
   109c8:	ldr	r0, [r1]
   109cc:	str	r0, [fp, #-8]
   109d0:	ldr	r0, [r1, #4]
   109d4:	str	r0, [sp, #12]
   109d8:	ldr	r0, [fp, #-4]
   109dc:	str	r0, [sp, #8]
   109e0:	mov	r0, r1
   109e4:	ldr	r1, [sp, #8]
   109e8:	blx	r2
   109ec:	ldr	r0, [pc, #64]	; 10a34 <abort@plt+0x188>
   109f0:	ldr	r0, [pc, r0]
   109f4:	ldr	r1, [pc, #60]	; 10a38 <abort@plt+0x18c>
   109f8:	ldr	r1, [pc, r1]
   109fc:	ldr	r2, [pc, #56]	; 10a3c <abort@plt+0x190>
   10a00:	ldr	r2, [pc, r2]
   10a04:	ldr	lr, [r2]
   10a08:	ldr	r3, [fp, #-8]
   10a0c:	sub	r3, lr, r3
   10a10:	ldr	r2, [r2, #4]
   10a14:	ldr	lr, [sp, #12]
   10a18:	sub	r2, r2, lr
   10a1c:	str	r1, [sp, #4]
   10a20:	mov	r1, r3
   10a24:	ldr	r3, [sp, #4]
   10a28:	blx	r3
   10a2c:	mov	sp, fp
   10a30:	pop	{fp, pc}
   10a34:			; <UNDEFINED> instruction: 0x000136bc
   10a38:	andeq	r3, r1, ip, lsl #13
   10a3c:	muleq	r1, ip, r6
   10a40:	andeq	r3, r1, r4, ror #13
   10a44:			; <UNDEFINED> instruction: 0x000136bc
   10a48:	push	{fp, lr}
   10a4c:	mov	fp, sp
   10a50:	sub	sp, sp, #24
   10a54:	ldr	r2, [pc, #156]	; 10af8 <abort@plt+0x24c>
   10a58:	add	r2, pc, r2
   10a5c:	ldr	r3, [pc, #152]	; 10afc <abort@plt+0x250>
   10a60:	ldr	r3, [pc, r3]
   10a64:	movw	ip, #0
   10a68:	str	ip, [fp, #-4]
   10a6c:	str	r0, [fp, #-8]
   10a70:	str	r1, [sp, #12]
   10a74:	ldr	r1, [sp, #12]
   10a78:	sub	r0, fp, #8
   10a7c:	str	r3, [sp, #4]
   10a80:	mov	r3, ip
   10a84:	ldr	ip, [sp, #4]
   10a88:	blx	ip
   10a8c:	movw	r0, #0
   10a90:	str	r0, [sp, #8]
   10a94:	ldr	r0, [sp, #8]
   10a98:	ldr	r1, [fp, #-8]
   10a9c:	cmp	r0, r1
   10aa0:	bge	10ac8 <abort@plt+0x21c>
   10aa4:	ldr	r0, [sp, #12]
   10aa8:	ldr	r1, [sp, #8]
   10aac:	add	r0, r0, r1, lsl #2
   10ab0:	ldr	r0, [r0]
   10ab4:	bl	109a8 <abort@plt+0xfc>
   10ab8:	ldr	r0, [sp, #8]
   10abc:	add	r0, r0, #1
   10ac0:	str	r0, [sp, #8]
   10ac4:	b	10a94 <abort@plt+0x1e8>
   10ac8:	ldr	r0, [pc, #52]	; 10b04 <abort@plt+0x258>
   10acc:	ldr	r0, [pc, r0]
   10ad0:	ldr	r1, [pc, #48]	; 10b08 <abort@plt+0x25c>
   10ad4:	ldr	r1, [pc, r1]
   10ad8:	movw	r2, #0
   10adc:	str	r1, [sp]
   10ae0:	mov	r1, r2
   10ae4:	ldr	r2, [sp]
   10ae8:	blx	r2
   10aec:	ldr	r0, [pc, #12]	; 10b00 <abort@plt+0x254>
   10af0:	ldr	r0, [pc, r0]
   10af4:	blx	r0
   10af8:			; <UNDEFINED> instruction: 0x000027b4
   10afc:	andeq	r3, r1, ip, lsr #12
   10b00:	andeq	r3, r1, r0, asr #11
   10b04:	andeq	r3, r1, r0, ror #11
   10b08:	muleq	r1, ip, r5
   10b0c:	andeq	r0, r0, r0
   10b10:	sub	sp, sp, #32
   10b14:	str	r0, [sp, #28]
   10b18:	str	r1, [sp, #24]
   10b1c:	str	r2, [sp, #20]
   10b20:	ldr	r0, [sp, #24]
   10b24:	cmp	r0, #0
   10b28:	bne	10b30 <abort@plt+0x284>
   10b2c:	b	10bc8 <abort@plt+0x31c>
   10b30:	vldr	d16, [pc, #152]	; 10bd0 <abort@plt+0x324>
   10b34:	ldr	r0, [sp, #24]
   10b38:	ldr	r1, [sp, #20]
   10b3c:	sub	r0, r0, r1
   10b40:	vmov	s0, r0
   10b44:	vcvt.f64.s32	d17, s0
   10b48:	vmul.f64	d16, d16, d17
   10b4c:	ldr	r0, [sp, #24]
   10b50:	vmov	s0, r0
   10b54:	vcvt.f64.s32	d17, s0
   10b58:	vdiv.f64	d16, d16, d17
   10b5c:	vstr	d16, [sp, #8]
   10b60:	movw	r0, #0
   10b64:	strh	r0, [sp, #6]
   10b68:	vldr	d16, [sp, #8]
   10b6c:	ldrsh	r0, [sp, #6]
   10b70:	vmov	s0, r0
   10b74:	vcvt.f64.s32	d17, s0
   10b78:	vcmpe.f64	d16, d17
   10b7c:	vmrs	APSR_nzcv, fpscr
   10b80:	blt	10bb4 <abort@plt+0x308>
   10b84:	ldr	r0, [sp, #24]
   10b88:	ldr	r1, [sp, #28]
   10b8c:	ldrsh	r2, [sp, #6]
   10b90:	add	r1, r1, r2, lsl #2
   10b94:	ldr	r2, [r1]
   10b98:	add	r0, r2, r0
   10b9c:	str	r0, [r1]
   10ba0:	ldrh	r0, [sp, #6]
   10ba4:	movw	r1, #1
   10ba8:	add	r0, r0, r1
   10bac:	strh	r0, [sp, #6]
   10bb0:	b	10b68 <abort@plt+0x2bc>
   10bb4:	ldr	r0, [sp, #24]
   10bb8:	ldr	r1, [sp, #28]
   10bbc:	ldr	r2, [r1, #404]	; 0x194
   10bc0:	add	r0, r2, r0
   10bc4:	str	r0, [r1, #404]	; 0x194
   10bc8:	add	sp, sp, #32
   10bcc:	bx	lr
   10bd0:	andeq	r0, r0, r0
   10bd4:	subsmi	r0, r9, r0
   10bd8:	push	{fp, lr}
   10bdc:	mov	fp, sp
   10be0:	sub	sp, sp, #40	; 0x28
   10be4:	str	r0, [fp, #-4]
   10be8:	str	r1, [fp, #-8]
   10bec:	ldr	r0, [fp, #-4]
   10bf0:	ldr	r0, [r0, #404]	; 0x194
   10bf4:	cmp	r0, #0
   10bf8:	bne	10c00 <abort@plt+0x354>
   10bfc:	b	10cc0 <abort@plt+0x414>
   10c00:	ldr	r0, [pc, #200]	; 10cd0 <abort@plt+0x424>
   10c04:	add	r1, pc, r0
   10c08:	ldr	r0, [pc, #196]	; 10cd4 <abort@plt+0x428>
   10c0c:	ldr	r0, [pc, r0]
   10c10:	ldr	r2, [fp, #-8]
   10c14:	str	r0, [sp, #20]
   10c18:	mov	r0, r2
   10c1c:	ldr	r2, [sp, #20]
   10c20:	blx	r2
   10c24:	str	r0, [fp, #-12]
   10c28:	movw	r0, #0
   10c2c:	strh	r0, [fp, #-14]
   10c30:	ldrsh	r0, [fp, #-14]
   10c34:	cmp	r0, #100	; 0x64
   10c38:	bgt	10ca4 <abort@plt+0x3f8>
   10c3c:	ldr	r0, [pc, #152]	; 10cdc <abort@plt+0x430>
   10c40:	add	r1, pc, r0
   10c44:	vldr	d16, [pc, #124]	; 10cc8 <abort@plt+0x41c>
   10c48:	ldr	r0, [fp, #-12]
   10c4c:	ldrsh	r2, [fp, #-14]
   10c50:	ldr	r3, [fp, #-4]
   10c54:	mov	ip, r2
   10c58:	add	r3, r3, r2, lsl #2
   10c5c:	ldr	r3, [r3]
   10c60:	vmov	s0, r3
   10c64:	vcvt.f64.s32	d17, s0
   10c68:	vmul.f64	d16, d16, d17
   10c6c:	ldr	r3, [fp, #-4]
   10c70:	ldr	r3, [r3, #404]	; 0x194
   10c74:	vmov	s0, r3
   10c78:	vcvt.f64.s32	d17, s0
   10c7c:	vdiv.f64	d16, d16, d17
   10c80:	vstr	d16, [sp]
   10c84:	str	ip, [sp, #16]
   10c88:	bl	1084c <fprintf@plt>
   10c8c:	str	r0, [sp, #12]
   10c90:	ldrh	r0, [fp, #-14]
   10c94:	movw	r1, #1
   10c98:	add	r0, r0, r1
   10c9c:	strh	r0, [fp, #-14]
   10ca0:	b	10c30 <abort@plt+0x384>
   10ca4:	ldr	r0, [pc, #44]	; 10cd8 <abort@plt+0x42c>
   10ca8:	ldr	r0, [pc, r0]
   10cac:	ldr	r1, [fp, #-12]
   10cb0:	str	r0, [sp, #8]
   10cb4:	mov	r0, r1
   10cb8:	ldr	r1, [sp, #8]
   10cbc:	blx	r1
   10cc0:	mov	sp, fp
   10cc4:	pop	{fp, pc}
   10cc8:	andeq	r0, r0, r0
   10ccc:	subsmi	r0, r9, r0
   10cd0:	andeq	r2, r0, r4, lsr r6
   10cd4:	andeq	r3, r1, r0, ror #8
   10cd8:			; <UNDEFINED> instruction: 0x000133b0
   10cdc:	strdeq	r2, [r0], -sl
   10ce0:	push	{fp, lr}
   10ce4:	mov	fp, sp
   10ce8:	sub	sp, sp, #16
   10cec:	str	r0, [fp, #-4]
   10cf0:	str	r1, [sp, #8]
   10cf4:	ldr	r0, [fp, #-4]
   10cf8:	ldr	r1, [sp, #8]
   10cfc:	bl	107bc <calloc@plt>
   10d00:	str	r0, [sp, #4]
   10d04:	ldr	r0, [sp, #4]
   10d08:	movw	r1, #0
   10d0c:	cmp	r0, r1
   10d10:	bne	10d20 <abort@plt+0x474>
   10d14:	ldr	r0, [pc, #16]	; 10d2c <abort@plt+0x480>
   10d18:	add	r0, pc, r0
   10d1c:	bl	113c0 <error@@Base>
   10d20:	ldr	r0, [sp, #4]
   10d24:	mov	sp, fp
   10d28:	pop	{fp, pc}
   10d2c:	andeq	r2, r0, sp, lsr #10
   10d30:	sub	sp, sp, #20
   10d34:	str	r0, [sp, #12]
   10d38:	str	r1, [sp, #8]
   10d3c:	movw	r0, #0
   10d40:	str	r0, [sp, #4]
   10d44:	ldr	r0, [sp, #12]
   10d48:	ldr	r1, [sp, #4]
   10d4c:	add	r0, r0, r1
   10d50:	ldrb	r0, [r0]
   10d54:	cmp	r0, #0
   10d58:	movw	r0, #0
   10d5c:	str	r0, [sp]
   10d60:	beq	10d94 <abort@plt+0x4e8>
   10d64:	ldr	r0, [sp, #12]
   10d68:	ldr	r1, [sp, #4]
   10d6c:	add	r0, r0, r1
   10d70:	ldrb	r0, [r0]
   10d74:	ldr	r1, [sp, #8]
   10d78:	ldr	r2, [sp, #4]
   10d7c:	add	r1, r1, r2
   10d80:	ldrb	r1, [r1]
   10d84:	cmp	r0, r1
   10d88:	movw	r0, #0
   10d8c:	moveq	r0, #1
   10d90:	str	r0, [sp]
   10d94:	ldr	r0, [sp]
   10d98:	tst	r0, #1
   10d9c:	beq	10db4 <abort@plt+0x508>
   10da0:	b	10da4 <abort@plt+0x4f8>
   10da4:	ldr	r0, [sp, #4]
   10da8:	add	r0, r0, #1
   10dac:	str	r0, [sp, #4]
   10db0:	b	10d44 <abort@plt+0x498>
   10db4:	ldr	r0, [sp, #12]
   10db8:	ldr	r1, [sp, #4]
   10dbc:	add	r0, r0, r1
   10dc0:	ldrb	r0, [r0]
   10dc4:	cmp	r0, #0
   10dc8:	bne	10de4 <abort@plt+0x538>
   10dcc:	ldr	r0, [sp, #8]
   10dd0:	ldr	r1, [sp, #4]
   10dd4:	add	r0, r0, r1
   10dd8:	ldrb	r0, [r0]
   10ddc:	cmp	r0, #0
   10de0:	beq	10e24 <abort@plt+0x578>
   10de4:	ldr	r0, [sp, #12]
   10de8:	ldr	r1, [sp, #4]
   10dec:	add	r0, r0, r1
   10df0:	ldrb	r0, [r0]
   10df4:	ldr	r1, [sp, #8]
   10df8:	ldr	r2, [sp, #4]
   10dfc:	add	r1, r1, r2
   10e00:	ldrb	r1, [r1]
   10e04:	cmp	r0, r1
   10e08:	movw	r0, #0
   10e0c:	movlt	r0, #1
   10e10:	tst	r0, #1
   10e14:	mvn	r0, #0
   10e18:	moveq	r0, #1
   10e1c:	str	r0, [sp, #16]
   10e20:	b	10e2c <abort@plt+0x580>
   10e24:	movw	r0, #0
   10e28:	str	r0, [sp, #16]
   10e2c:	ldr	r0, [sp, #16]
   10e30:	add	sp, sp, #20
   10e34:	bx	lr
   10e38:	push	{fp, lr}
   10e3c:	mov	fp, sp
   10e40:	sub	sp, sp, #24
   10e44:	str	r0, [fp, #-8]
   10e48:	str	r1, [sp, #12]
   10e4c:	ldr	r0, [fp, #-8]
   10e50:	movw	r1, #0
   10e54:	cmp	r0, r1
   10e58:	bne	10e9c <abort@plt+0x5f0>
   10e5c:	ldr	r0, [sp, #12]
   10e60:	ldrb	r0, [r0]
   10e64:	cmp	r0, #114	; 0x72
   10e68:	bne	10e80 <abort@plt+0x5d4>
   10e6c:	ldr	r0, [pc, #148]	; 10f08 <abort@plt+0x65c>
   10e70:	ldr	r0, [pc, r0]
   10e74:	ldr	r0, [r0]
   10e78:	str	r0, [sp, #4]
   10e7c:	b	10e90 <abort@plt+0x5e4>
   10e80:	ldr	r0, [pc, #124]	; 10f04 <abort@plt+0x658>
   10e84:	ldr	r0, [pc, r0]
   10e88:	ldr	r0, [r0]
   10e8c:	str	r0, [sp, #4]
   10e90:	ldr	r0, [sp, #4]
   10e94:	str	r0, [fp, #-4]
   10e98:	b	10ef8 <abort@plt+0x64c>
   10e9c:	ldr	r0, [fp, #-8]
   10ea0:	ldr	r1, [sp, #12]
   10ea4:	bl	107d4 <fopen@plt>
   10ea8:	str	r0, [sp, #8]
   10eac:	ldr	r0, [sp, #8]
   10eb0:	movw	r1, #0
   10eb4:	cmp	r0, r1
   10eb8:	beq	10ec8 <abort@plt+0x61c>
   10ebc:	ldr	r0, [sp, #8]
   10ec0:	str	r0, [fp, #-4]
   10ec4:	b	10ef8 <abort@plt+0x64c>
   10ec8:	ldr	r0, [sp, #12]
   10ecc:	ldrb	r0, [r0]
   10ed0:	cmp	r0, #119	; 0x77
   10ed4:	bne	10ee8 <abort@plt+0x63c>
   10ed8:	ldr	r0, [pc, #48]	; 10f10 <abort@plt+0x664>
   10edc:	add	r0, pc, r0
   10ee0:	ldr	r1, [fp, #-8]
   10ee4:	bl	11420 <error@@Base+0x60>
   10ee8:	ldr	r0, [pc, #28]	; 10f0c <abort@plt+0x660>
   10eec:	add	r0, pc, r0
   10ef0:	ldr	r1, [fp, #-8]
   10ef4:	bl	11420 <error@@Base+0x60>
   10ef8:	ldr	r0, [fp, #-4]
   10efc:	mov	sp, fp
   10f00:	pop	{fp, pc}
   10f04:	andeq	r3, r1, r0, lsr r2
   10f08:	andeq	r3, r1, r8, lsr r2
   10f0c:	andeq	r2, r0, r9, lsl #7
   10f10:	andeq	r2, r0, r3, lsl #7
   10f14:	push	{fp, lr}
   10f18:	mov	fp, sp
   10f1c:	sub	sp, sp, #8
   10f20:	ldr	r1, [pc, #64]	; 10f68 <abort@plt+0x6bc>
   10f24:	ldr	r1, [pc, r1]
   10f28:	str	r0, [sp, #4]
   10f2c:	ldr	r0, [sp, #4]
   10f30:	ldr	r1, [r1]
   10f34:	cmp	r0, r1
   10f38:	beq	10f60 <abort@plt+0x6b4>
   10f3c:	ldr	r0, [pc, #40]	; 10f6c <abort@plt+0x6c0>
   10f40:	ldr	r0, [pc, r0]
   10f44:	ldr	r1, [sp, #4]
   10f48:	ldr	r0, [r0]
   10f4c:	cmp	r1, r0
   10f50:	beq	10f60 <abort@plt+0x6b4>
   10f54:	ldr	r0, [sp, #4]
   10f58:	bl	10864 <fclose@plt>
   10f5c:	str	r0, [sp]
   10f60:	mov	sp, fp
   10f64:	pop	{fp, pc}
   10f68:	andeq	r3, r1, r4, lsl #3
   10f6c:	andeq	r3, r1, r4, ror r1
   10f70:	push	{fp, lr}
   10f74:	mov	fp, sp
   10f78:	sub	sp, sp, #96	; 0x60
   10f7c:	str	r0, [fp, #-4]
   10f80:	ldr	r0, [fp, #-4]
   10f84:	mov	r1, sp
   10f88:	bl	131f8 <error@@Base+0x1e38>
   10f8c:	cmp	r0, #0
   10f90:	movw	r0, #0
   10f94:	moveq	r0, #1
   10f98:	tst	r0, #1
   10f9c:	movw	r0, #1
   10fa0:	moveq	r0, #0
   10fa4:	and	r0, r0, #255	; 0xff
   10fa8:	mov	sp, fp
   10fac:	pop	{fp, pc}
   10fb0:	push	{fp, lr}
   10fb4:	mov	fp, sp
   10fb8:	sub	sp, sp, #8
   10fbc:	ldr	r0, [pc, #68]	; 11008 <abort@plt+0x75c>
   10fc0:	add	r0, pc, r0
   10fc4:	ldrh	r1, [r0]
   10fc8:	movw	r2, #1
   10fcc:	add	r1, r1, r2
   10fd0:	strh	r1, [r0]
   10fd4:	sxth	r0, r1
   10fd8:	bl	1100c <abort@plt+0x760>
   10fdc:	ldr	r1, [pc, #32]	; 11004 <abort@plt+0x758>
   10fe0:	ldr	r1, [pc, r1]
   10fe4:	str	r0, [sp, #4]
   10fe8:	ldr	r0, [sp, #4]
   10fec:	blx	r1
   10ff0:	ldr	r1, [sp, #4]
   10ff4:	str	r0, [sp]
   10ff8:	mov	r0, r1
   10ffc:	mov	sp, fp
   11000:	pop	{fp, pc}
   11004:	muleq	r1, r4, r0
   11008:	andeq	r3, r1, r6, lsr #2
   1100c:	push	{fp, lr}
   11010:	mov	fp, sp
   11014:	sub	sp, sp, #128	; 0x80
   11018:	ldr	r1, [pc, #112]	; 11090 <abort@plt+0x7e4>
   1101c:	ldr	r1, [pc, r1]
   11020:	ldr	r2, [pc, #108]	; 11094 <abort@plt+0x7e8>
   11024:	ldr	r2, [pc, r2]
   11028:	add	r3, sp, #26
   1102c:	strh	r0, [fp, #-2]
   11030:	ldr	r2, [r2]
   11034:	str	r3, [sp, #20]
   11038:	str	r2, [sp, #16]
   1103c:	blx	r1
   11040:	ldr	r1, [pc, #68]	; 1108c <abort@plt+0x7e0>
   11044:	add	r1, pc, r1
   11048:	ldrsh	r2, [fp, #-2]
   1104c:	ldr	r3, [sp, #20]
   11050:	str	r0, [sp, #12]
   11054:	mov	r0, r3
   11058:	ldr	lr, [sp, #16]
   1105c:	str	r2, [sp, #8]
   11060:	mov	r2, lr
   11064:	ldr	r3, [sp, #12]
   11068:	ldr	ip, [sp, #8]
   1106c:	str	ip, [sp]
   11070:	bl	1087c <sprintf@plt>
   11074:	add	r1, sp, #26
   11078:	str	r0, [sp, #4]
   1107c:	mov	r0, r1
   11080:	bl	107f8 <strdup@plt>
   11084:	mov	sp, fp
   11088:	pop	{fp, pc}
   1108c:	andeq	r2, r0, sl, asr r2
   11090:	andeq	r3, r1, r4, lsl #1
   11094:	andeq	r3, r1, r4, ror r0
   11098:	push	{fp, lr}
   1109c:	mov	fp, sp
   110a0:	sub	sp, sp, #16
   110a4:	str	r0, [fp, #-4]
   110a8:	movw	r0, #47	; 0x2f
   110ac:	strb	r0, [fp, #-5]
   110b0:	ldr	r0, [fp, #-4]
   110b4:	bl	10840 <strlen@plt>
   110b8:	sub	r0, r0, #1
   110bc:	strh	r0, [sp, #8]
   110c0:	ldrsh	r0, [sp, #8]
   110c4:	cmp	r0, #0
   110c8:	movw	r0, #0
   110cc:	str	r0, [sp, #4]
   110d0:	blt	110f8 <abort@plt+0x84c>
   110d4:	ldr	r0, [fp, #-4]
   110d8:	ldrsh	r1, [sp, #8]
   110dc:	add	r0, r0, r1
   110e0:	ldrb	r0, [r0]
   110e4:	ldrb	r1, [fp, #-5]
   110e8:	cmp	r0, r1
   110ec:	movw	r0, #0
   110f0:	movne	r0, #1
   110f4:	str	r0, [sp, #4]
   110f8:	ldr	r0, [sp, #4]
   110fc:	tst	r0, #1
   11100:	beq	1111c <abort@plt+0x870>
   11104:	b	11108 <abort@plt+0x85c>
   11108:	ldrh	r0, [sp, #8]
   1110c:	movw	r1, #65535	; 0xffff
   11110:	add	r0, r0, r1
   11114:	strh	r0, [sp, #8]
   11118:	b	110c0 <abort@plt+0x814>
   1111c:	ldr	r0, [fp, #-4]
   11120:	ldrsh	r1, [sp, #8]
   11124:	add	r1, r1, #1
   11128:	add	r0, r0, r1
   1112c:	mov	sp, fp
   11130:	pop	{fp, pc}
   11134:	push	{fp, lr}
   11138:	mov	fp, sp
   1113c:	sub	sp, sp, #16
   11140:	str	r0, [fp, #-4]
   11144:	str	r1, [sp, #8]
   11148:	str	r2, [sp, #4]
   1114c:	str	r3, [sp]
   11150:	ldr	r0, [sp, #8]
   11154:	ldr	r0, [r0]
   11158:	bl	11098 <abort@plt+0x7ec>
   1115c:	ldr	r1, [pc, #36]	; 11188 <abort@plt+0x8dc>
   11160:	ldr	r1, [pc, r1]
   11164:	str	r0, [r1]
   11168:	bl	11500 <error@@Base+0x140>
   1116c:	ldr	r0, [fp, #-4]
   11170:	ldr	r1, [sp, #8]
   11174:	ldr	r2, [sp, #4]
   11178:	ldr	r3, [sp]
   1117c:	bl	1118c <abort@plt+0x8e0>
   11180:	mov	sp, fp
   11184:	pop	{fp, pc}
   11188:	andeq	r2, r1, r8, lsr pc
   1118c:	push	{fp, lr}
   11190:	mov	fp, sp
   11194:	sub	sp, sp, #48	; 0x30
   11198:	str	r0, [fp, #-4]
   1119c:	str	r1, [fp, #-8]
   111a0:	str	r2, [fp, #-12]
   111a4:	str	r3, [fp, #-16]
   111a8:	movw	r0, #0
   111ac:	strh	r0, [fp, #-20]	; 0xffffffec
   111b0:	ldr	r0, [fp, #-4]
   111b4:	ldr	r0, [r0]
   111b8:	cmp	r0, #1
   111bc:	bne	111dc <abort@plt+0x930>
   111c0:	ldr	r0, [pc, #404]	; 1135c <abort@plt+0xab0>
   111c4:	ldr	r0, [pc, r0]
   111c8:	ldrb	r0, [r0]
   111cc:	cmp	r0, #0
   111d0:	beq	111dc <abort@plt+0x930>
   111d4:	ldr	r0, [fp, #-12]
   111d8:	bl	1159c <error@@Base+0x1dc>
   111dc:	movw	r0, #1
   111e0:	strh	r0, [fp, #-18]	; 0xffffffee
   111e4:	ldrsh	r0, [fp, #-18]	; 0xffffffee
   111e8:	ldr	r1, [fp, #-4]
   111ec:	ldr	r1, [r1]
   111f0:	cmp	r0, r1
   111f4:	bge	11348 <abort@plt+0xa9c>
   111f8:	ldr	r0, [fp, #-8]
   111fc:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   11200:	add	r0, r0, r1, lsl #2
   11204:	ldr	r0, [r0]
   11208:	ldrb	r0, [r0]
   1120c:	cmp	r0, #45	; 0x2d
   11210:	bne	11310 <abort@plt+0xa64>
   11214:	ldr	r0, [fp, #-8]
   11218:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   1121c:	add	r0, r0, r1, lsl #2
   11220:	ldr	r0, [r0]
   11224:	ldrb	r0, [r0, #1]
   11228:	cmp	r0, #0
   1122c:	beq	11310 <abort@plt+0xa64>
   11230:	ldr	r0, [pc, #296]	; 11360 <abort@plt+0xab4>
   11234:	add	r0, pc, r0
   11238:	ldr	r1, [fp, #-8]
   1123c:	ldrsh	r2, [fp, #-18]	; 0xffffffee
   11240:	ldr	r2, [r1, r2, lsl #2]!
   11244:	ldr	r1, [r1]
   11248:	str	r0, [sp, #24]
   1124c:	mov	r0, r1
   11250:	str	r2, [sp, #20]
   11254:	bl	10840 <strlen@plt>
   11258:	ldr	r1, [sp, #24]
   1125c:	str	r0, [sp, #16]
   11260:	mov	r0, r1
   11264:	ldr	r1, [sp, #20]
   11268:	ldr	r2, [sp, #16]
   1126c:	bl	108a0 <strncmp@plt>
   11270:	cmp	r0, #0
   11274:	bne	11280 <abort@plt+0x9d4>
   11278:	ldr	r0, [fp, #-12]
   1127c:	bl	1159c <error@@Base+0x1dc>
   11280:	ldr	r0, [fp, #-8]
   11284:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   11288:	add	r0, r0, r1, lsl #2
   1128c:	ldr	r0, [r0]
   11290:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   11294:	add	r1, r1, #1
   11298:	ldr	r2, [fp, #-4]
   1129c:	ldr	r2, [r2]
   112a0:	cmp	r1, r2
   112a4:	str	r0, [sp, #12]
   112a8:	bge	112c8 <abort@plt+0xa1c>
   112ac:	ldr	r0, [fp, #-8]
   112b0:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   112b4:	add	r1, r1, #1
   112b8:	add	r0, r0, r1, lsl #2
   112bc:	ldr	r0, [r0]
   112c0:	str	r0, [sp, #8]
   112c4:	b	112d4 <abort@plt+0xa28>
   112c8:	movw	r0, #0
   112cc:	str	r0, [sp, #8]
   112d0:	b	112d4 <abort@plt+0xa28>
   112d4:	ldr	r0, [sp, #8]
   112d8:	ldr	r2, [fp, #-16]
   112dc:	ldr	r1, [sp, #12]
   112e0:	str	r0, [sp, #4]
   112e4:	mov	r0, r1
   112e8:	ldr	r1, [sp, #4]
   112ec:	bl	11628 <error@@Base+0x268>
   112f0:	sxtb	r0, r0
   112f4:	cmp	r0, #0
   112f8:	beq	1130c <abort@plt+0xa60>
   112fc:	ldrh	r0, [fp, #-18]	; 0xffffffee
   11300:	movw	r1, #1
   11304:	add	r0, r0, r1
   11308:	strh	r0, [fp, #-18]	; 0xffffffee
   1130c:	b	11330 <abort@plt+0xa84>
   11310:	ldr	r0, [fp, #-8]
   11314:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   11318:	ldr	r1, [r0, r1, lsl #2]
   1131c:	ldrsh	r2, [fp, #-20]	; 0xffffffec
   11320:	add	r3, r2, #1
   11324:	strh	r3, [fp, #-20]	; 0xffffffec
   11328:	add	r0, r0, r2, lsl #2
   1132c:	str	r1, [r0]
   11330:	b	11334 <abort@plt+0xa88>
   11334:	ldrh	r0, [fp, #-18]	; 0xffffffee
   11338:	movw	r1, #1
   1133c:	add	r0, r0, r1
   11340:	strh	r0, [fp, #-18]	; 0xffffffee
   11344:	b	111e4 <abort@plt+0x938>
   11348:	ldrsh	r0, [fp, #-20]	; 0xffffffec
   1134c:	ldr	r1, [fp, #-4]
   11350:	str	r0, [r1]
   11354:	mov	sp, fp
   11358:	pop	{fp, pc}
   1135c:	muleq	r1, r8, lr
   11360:	andeq	r2, r0, r7, lsl #1
   11364:	push	{fp, lr}
   11368:	mov	fp, sp
   1136c:	movw	r0, #0
   11370:	bl	11374 <abort@plt+0xac8>
   11374:	push	{fp, lr}
   11378:	mov	fp, sp
   1137c:	sub	sp, sp, #8
   11380:	ldr	r1, [pc, #48]	; 113b8 <abort@plt+0xb0c>
   11384:	ldr	r1, [pc, r1]
   11388:	str	r0, [sp, #4]
   1138c:	ldr	r0, [r1]
   11390:	movw	r1, #0
   11394:	cmp	r0, r1
   11398:	beq	113ac <abort@plt+0xb00>
   1139c:	ldr	r0, [pc, #24]	; 113bc <abort@plt+0xb10>
   113a0:	ldr	r0, [pc, r0]
   113a4:	ldr	r0, [r0]
   113a8:	blx	r0
   113ac:	bl	1189c <error@@Base+0x4dc>
   113b0:	ldr	r0, [sp, #4]
   113b4:	bl	10834 <exit@plt>
   113b8:	andeq	r2, r1, r0, lsr #26
   113bc:	andeq	r2, r1, r4, lsl #26

000113c0 <error@@Base>:
   113c0:	push	{fp, lr}
   113c4:	mov	fp, sp
   113c8:	sub	sp, sp, #8
   113cc:	ldr	r1, [pc, #64]	; 11414 <error@@Base+0x54>
   113d0:	add	r1, pc, r1
   113d4:	ldr	r2, [pc, #60]	; 11418 <error@@Base+0x58>
   113d8:	ldr	r2, [pc, r2]
   113dc:	ldr	r3, [pc, #56]	; 1141c <error@@Base+0x5c>
   113e0:	ldr	r3, [pc, r3]
   113e4:	str	r0, [sp, #4]
   113e8:	ldr	r0, [r3]
   113ec:	ldr	r2, [r2]
   113f0:	ldr	r3, [sp, #4]
   113f4:	bl	1084c <fprintf@plt>
   113f8:	ldr	r1, [pc, #16]	; 11410 <error@@Base+0x50>
   113fc:	ldr	r1, [pc, r1]
   11400:	ldr	r1, [r1]
   11404:	str	r0, [sp]
   11408:	mov	r0, r1
   1140c:	bl	11374 <abort@plt+0xac8>
   11410:	andeq	r2, r1, r4, asr #25
   11414:			; <UNDEFINED> instruction: 0x00001eb9
   11418:	andeq	r2, r1, r0, asr #25
   1141c:	andeq	r2, r1, r0, lsr #25
   11420:	push	{fp, lr}
   11424:	mov	fp, sp
   11428:	sub	sp, sp, #24
   1142c:	ldr	r2, [pc, #88]	; 1148c <error@@Base+0xcc>
   11430:	add	r2, pc, r2
   11434:	ldr	r3, [pc, #84]	; 11490 <error@@Base+0xd0>
   11438:	ldr	r3, [pc, r3]
   1143c:	ldr	ip, [pc, #80]	; 11494 <error@@Base+0xd4>
   11440:	ldr	ip, [pc, ip]
   11444:	str	r0, [fp, #-4]
   11448:	str	r1, [fp, #-8]
   1144c:	ldr	r0, [ip]
   11450:	ldr	r1, [r3]
   11454:	ldr	r3, [fp, #-4]
   11458:	ldr	ip, [fp, #-8]
   1145c:	str	r1, [sp, #12]
   11460:	mov	r1, r2
   11464:	ldr	r2, [sp, #12]
   11468:	str	ip, [sp]
   1146c:	bl	1084c <fprintf@plt>
   11470:	ldr	r1, [pc, #16]	; 11488 <error@@Base+0xc8>
   11474:	ldr	r1, [pc, r1]
   11478:	ldr	r1, [r1]
   1147c:	str	r0, [sp, #8]
   11480:	mov	r0, r1
   11484:	bl	11374 <abort@plt+0xac8>
   11488:	andeq	r2, r1, ip, asr #24
   1148c:	andeq	r1, r0, r1, ror #28
   11490:	andeq	r2, r1, r0, ror #24
   11494:	andeq	r2, r1, r0, asr #24
   11498:	push	{fp, lr}
   1149c:	mov	fp, sp
   114a0:	sub	sp, sp, #24
   114a4:	ldr	r2, [pc, #72]	; 114f4 <error@@Base+0x134>
   114a8:	add	r2, pc, r2
   114ac:	ldr	r3, [pc, #68]	; 114f8 <error@@Base+0x138>
   114b0:	ldr	r3, [pc, r3]
   114b4:	ldr	ip, [pc, #64]	; 114fc <error@@Base+0x13c>
   114b8:	ldr	ip, [pc, ip]
   114bc:	str	r0, [fp, #-4]
   114c0:	str	r1, [fp, #-8]
   114c4:	ldr	r0, [ip]
   114c8:	ldr	r1, [r3]
   114cc:	ldr	r3, [fp, #-4]
   114d0:	ldr	ip, [fp, #-8]
   114d4:	str	r1, [sp, #12]
   114d8:	mov	r1, r2
   114dc:	ldr	r2, [sp, #12]
   114e0:	str	ip, [sp]
   114e4:	bl	1084c <fprintf@plt>
   114e8:	str	r0, [sp, #8]
   114ec:	mov	sp, fp
   114f0:	pop	{fp, pc}
   114f4:	andeq	r1, r0, r9, ror #27
   114f8:	andeq	r2, r1, r8, ror #23
   114fc:	andeq	r2, r1, r8, asr #23
   11500:	push	{fp, lr}
   11504:	mov	fp, sp
   11508:	sub	sp, sp, #8
   1150c:	ldr	r0, [pc, #48]	; 11544 <error@@Base+0x184>
   11510:	add	r1, pc, r0
   11514:	movw	r0, #2
   11518:	bl	1081c <__sysv_signal@plt>
   1151c:	ldr	r1, [pc, #28]	; 11540 <error@@Base+0x180>
   11520:	add	r1, pc, r1
   11524:	movw	lr, #15
   11528:	str	r0, [sp, #4]
   1152c:	mov	r0, lr
   11530:	bl	1081c <__sysv_signal@plt>
   11534:	str	r0, [sp]
   11538:	mov	sp, fp
   1153c:	pop	{fp, pc}
   11540:	andeq	r0, r0, r0, lsr #32
   11544:	andeq	r0, r0, r0, lsr r0
   11548:	push	{fp, lr}
   1154c:	mov	fp, sp
   11550:	sub	sp, sp, #8
   11554:	ldr	r1, [pc, #52]	; 11590 <error@@Base+0x1d0>
   11558:	add	r1, pc, r1
   1155c:	str	r0, [sp, #4]
   11560:	ldrsb	r0, [r1]
   11564:	cmp	r0, #0
   11568:	beq	11574 <error@@Base+0x1b4>
   1156c:	mov	sp, fp
   11570:	pop	{fp, pc}
   11574:	ldr	r0, [pc, #24]	; 11594 <error@@Base+0x1d4>
   11578:	add	r0, pc, r0
   1157c:	ldr	r1, [pc, #20]	; 11598 <error@@Base+0x1d8>
   11580:	add	r1, pc, r1
   11584:	movw	r2, #1
   11588:	strb	r2, [r1]
   1158c:	bl	113c0 <error@@Base>
   11590:	muleq	r1, r0, fp
   11594:	andeq	r1, r0, r4, lsr sp
   11598:	andeq	r2, r1, r8, ror #22
   1159c:	push	{fp, lr}
   115a0:	mov	fp, sp
   115a4:	sub	sp, sp, #16
   115a8:	ldr	r1, [pc, #100]	; 11614 <error@@Base+0x254>
   115ac:	ldr	r1, [pc, r1]
   115b0:	str	r0, [fp, #-4]
   115b4:	ldr	r0, [r1]
   115b8:	movw	r1, #0
   115bc:	cmp	r0, r1
   115c0:	beq	115d8 <error@@Base+0x218>
   115c4:	ldr	r0, [pc, #88]	; 11624 <error@@Base+0x264>
   115c8:	ldr	r0, [pc, r0]
   115cc:	ldr	r0, [r0]
   115d0:	blx	r0
   115d4:	b	11610 <error@@Base+0x250>
   115d8:	ldr	r0, [pc, #56]	; 11618 <error@@Base+0x258>
   115dc:	add	r1, pc, r0
   115e0:	ldr	r0, [pc, #52]	; 1161c <error@@Base+0x25c>
   115e4:	ldr	r0, [pc, r0]
   115e8:	ldr	r2, [pc, #48]	; 11620 <error@@Base+0x260>
   115ec:	ldr	r2, [pc, r2]
   115f0:	ldr	r2, [r2]
   115f4:	ldr	r0, [r0]
   115f8:	ldr	r3, [fp, #-4]
   115fc:	str	r0, [sp, #8]
   11600:	mov	r0, r2
   11604:	ldr	r2, [sp, #8]
   11608:	bl	1084c <fprintf@plt>
   1160c:	str	r0, [sp, #4]
   11610:	bl	11364 <abort@plt+0xab8>
   11614:			; <UNDEFINED> instruction: 0x00012abc
   11618:	andeq	r1, r0, r5, ror #25
   1161c:			; <UNDEFINED> instruction: 0x00012ab4
   11620:	muleq	r1, r4, sl
   11624:	andeq	r2, r1, r0, lsr #21
   11628:	push	{fp, lr}
   1162c:	mov	fp, sp
   11630:	sub	sp, sp, #32
   11634:	str	r0, [fp, #-8]
   11638:	str	r1, [fp, #-12]
   1163c:	str	r2, [sp, #16]
   11640:	ldr	r0, [sp, #16]
   11644:	movw	r1, #0
   11648:	cmp	r0, r1
   1164c:	bne	11654 <error@@Base+0x294>
   11650:	b	11868 <error@@Base+0x4a8>
   11654:	movw	r0, #0
   11658:	strh	r0, [sp, #14]
   1165c:	ldr	r0, [sp, #16]
   11660:	ldrsh	r1, [sp, #14]
   11664:	movw	r2, #12
   11668:	mul	r1, r1, r2
   1166c:	add	r0, r0, r1
   11670:	ldrb	r0, [r0]
   11674:	cmp	r0, #0
   11678:	movw	r0, #0
   1167c:	str	r0, [sp, #8]
   11680:	beq	116b4 <error@@Base+0x2f4>
   11684:	ldr	r0, [fp, #-8]
   11688:	ldrb	r0, [r0, #1]
   1168c:	ldr	r1, [sp, #16]
   11690:	ldrsh	r2, [sp, #14]
   11694:	movw	r3, #12
   11698:	mul	r2, r2, r3
   1169c:	add	r1, r1, r2
   116a0:	ldrb	r1, [r1]
   116a4:	cmp	r0, r1
   116a8:	movw	r0, #0
   116ac:	movne	r0, #1
   116b0:	str	r0, [sp, #8]
   116b4:	ldr	r0, [sp, #8]
   116b8:	tst	r0, #1
   116bc:	beq	116d8 <error@@Base+0x318>
   116c0:	b	116c4 <error@@Base+0x304>
   116c4:	ldrh	r0, [sp, #14]
   116c8:	movw	r1, #1
   116cc:	add	r0, r0, r1
   116d0:	strh	r0, [sp, #14]
   116d4:	b	1165c <error@@Base+0x29c>
   116d8:	ldr	r0, [sp, #16]
   116dc:	ldrsh	r1, [sp, #14]
   116e0:	movw	r2, #12
   116e4:	mul	r1, r1, r2
   116e8:	add	r0, r0, r1
   116ec:	ldrsb	r0, [r0]
   116f0:	cmp	r0, #0
   116f4:	bne	116fc <error@@Base+0x33c>
   116f8:	b	11868 <error@@Base+0x4a8>
   116fc:	ldr	r0, [sp, #16]
   11700:	ldrsh	r1, [sp, #14]
   11704:	movw	r2, #12
   11708:	mul	r1, r1, r2
   1170c:	add	r0, r0, r1
   11710:	ldr	r0, [r0, #4]
   11714:	movw	r1, #0
   11718:	cmp	r0, r1
   1171c:	beq	117dc <error@@Base+0x41c>
   11720:	ldr	r0, [fp, #-8]
   11724:	ldrb	r0, [r0, #2]
   11728:	cmp	r0, #0
   1172c:	bne	11740 <error@@Base+0x380>
   11730:	ldr	r0, [fp, #-12]
   11734:	movw	r1, #0
   11738:	cmp	r0, r1
   1173c:	beq	117dc <error@@Base+0x41c>
   11740:	ldr	r0, [sp, #16]
   11744:	ldrsh	r1, [sp, #14]
   11748:	movw	r2, #12
   1174c:	mul	r1, r1, r2
   11750:	add	r0, r0, r1
   11754:	ldr	r0, [r0, #4]
   11758:	ldr	r0, [r0]
   1175c:	movw	r1, #0
   11760:	cmp	r0, r1
   11764:	beq	1176c <error@@Base+0x3ac>
   11768:	b	11878 <error@@Base+0x4b8>
   1176c:	ldr	r0, [fp, #-8]
   11770:	ldrb	r0, [r0, #2]
   11774:	cmp	r0, #0
   11778:	beq	1178c <error@@Base+0x3cc>
   1177c:	ldr	r0, [fp, #-8]
   11780:	add	r0, r0, #2
   11784:	str	r0, [sp, #4]
   11788:	b	11794 <error@@Base+0x3d4>
   1178c:	ldr	r0, [fp, #-12]
   11790:	str	r0, [sp, #4]
   11794:	ldr	r0, [sp, #4]
   11798:	ldr	r1, [sp, #16]
   1179c:	ldrsh	r2, [sp, #14]
   117a0:	movw	r3, #12
   117a4:	mul	r2, r2, r3
   117a8:	add	r1, r1, r2
   117ac:	ldr	r1, [r1, #4]
   117b0:	str	r0, [r1]
   117b4:	ldr	r0, [fp, #-8]
   117b8:	ldrb	r0, [r0, #2]
   117bc:	cmp	r0, #0
   117c0:	movw	r0, #0
   117c4:	movne	r0, #1
   117c8:	tst	r0, #1
   117cc:	movw	r0, #0
   117d0:	moveq	r0, #1
   117d4:	strb	r0, [fp, #-1]
   117d8:	b	11888 <error@@Base+0x4c8>
   117dc:	ldr	r0, [sp, #16]
   117e0:	ldrsh	r1, [sp, #14]
   117e4:	movw	r2, #12
   117e8:	mul	r1, r1, r2
   117ec:	add	r0, r0, r1
   117f0:	ldr	r0, [r0, #8]
   117f4:	movw	r1, #0
   117f8:	cmp	r0, r1
   117fc:	beq	11864 <error@@Base+0x4a4>
   11800:	ldr	r0, [fp, #-8]
   11804:	ldrsb	r0, [r0, #2]
   11808:	cmp	r0, #0
   1180c:	bne	11864 <error@@Base+0x4a4>
   11810:	ldr	r0, [sp, #16]
   11814:	ldrsh	r1, [sp, #14]
   11818:	movw	r2, #12
   1181c:	mul	r1, r1, r2
   11820:	add	r0, r0, r1
   11824:	ldr	r0, [r0, #8]
   11828:	ldrsb	r0, [r0]
   1182c:	cmp	r0, #0
   11830:	beq	11838 <error@@Base+0x478>
   11834:	b	11878 <error@@Base+0x4b8>
   11838:	ldr	r0, [sp, #16]
   1183c:	ldrsh	r1, [sp, #14]
   11840:	movw	r2, #12
   11844:	mul	r1, r1, r2
   11848:	add	r0, r0, r1
   1184c:	ldr	r0, [r0, #8]
   11850:	movw	r1, #1
   11854:	strb	r1, [r0]
   11858:	movw	r0, #0
   1185c:	strb	r0, [fp, #-1]
   11860:	b	11888 <error@@Base+0x4c8>
   11864:	b	11868 <error@@Base+0x4a8>
   11868:	ldr	r0, [pc, #36]	; 11894 <error@@Base+0x4d4>
   1186c:	add	r0, pc, r0
   11870:	ldr	r1, [fp, #-8]
   11874:	bl	11420 <error@@Base+0x60>
   11878:	ldr	r0, [pc, #24]	; 11898 <error@@Base+0x4d8>
   1187c:	add	r0, pc, r0
   11880:	ldr	r1, [fp, #-8]
   11884:	bl	11420 <error@@Base+0x60>
   11888:	ldrb	r0, [fp, #-1]
   1188c:	mov	sp, fp
   11890:	pop	{fp, pc}
   11894:	andeq	r1, r0, r4, ror #20
   11898:	andeq	r1, r0, r3, ror #20
   1189c:	push	{fp, lr}
   118a0:	mov	fp, sp
   118a4:	sub	sp, sp, #16
   118a8:	movw	r0, #1
   118ac:	strh	r0, [fp, #-2]
   118b0:	ldr	r0, [pc, #88]	; 11910 <error@@Base+0x550>
   118b4:	add	r0, pc, r0
   118b8:	ldrsh	r1, [fp, #-2]
   118bc:	ldrsh	r0, [r0]
   118c0:	cmp	r1, r0
   118c4:	bgt	11908 <error@@Base+0x548>
   118c8:	ldrsh	r0, [fp, #-2]
   118cc:	bl	1100c <abort@plt+0x760>
   118d0:	ldr	lr, [pc, #60]	; 11914 <error@@Base+0x554>
   118d4:	ldr	lr, [pc, lr]
   118d8:	str	r0, [sp, #8]
   118dc:	ldr	r0, [sp, #8]
   118e0:	blx	lr
   118e4:	ldr	lr, [sp, #8]
   118e8:	str	r0, [sp, #4]
   118ec:	mov	r0, lr
   118f0:	bl	107e0 <free@plt>
   118f4:	ldrh	r0, [fp, #-2]
   118f8:	movw	r1, #1
   118fc:	add	r0, r0, r1
   11900:	strh	r0, [fp, #-2]
   11904:	b	118b0 <error@@Base+0x4f0>
   11908:	mov	sp, fp
   1190c:	pop	{fp, pc}
   11910:	andeq	r2, r1, r2, lsr r8
   11914:	andeq	r2, r1, r0, lsr #15
   11918:	sub	sp, sp, #12
   1191c:	str	r0, [sp, #8]
   11920:	str	r1, [sp, #4]
   11924:	str	r2, [sp]
   11928:	ldr	r0, [sp, #4]
   1192c:	ldr	r1, [sp, #8]
   11930:	ldr	r2, [r1]
   11934:	add	r0, r2, r0
   11938:	str	r0, [r1]
   1193c:	ldr	r0, [sp]
   11940:	ldr	r1, [sp, #8]
   11944:	ldr	r2, [r1, #4]
   11948:	add	r0, r2, r0
   1194c:	str	r0, [r1, #4]
   11950:	add	sp, sp, #12
   11954:	bx	lr
   11958:	push	{fp, lr}
   1195c:	mov	fp, sp
   11960:	sub	sp, sp, #32
   11964:	ldr	ip, [pc, #160]	; 11a0c <error@@Base+0x64c>
   11968:	ldr	ip, [pc, ip]
   1196c:	str	r0, [fp, #-4]
   11970:	str	r1, [fp, #-8]
   11974:	str	r2, [fp, #-12]
   11978:	str	r3, [sp, #16]
   1197c:	ldr	r0, [fp, #-4]
   11980:	ldr	r1, [fp, #-8]
   11984:	blx	ip
   11988:	str	r0, [sp, #12]
   1198c:	ldr	r0, [sp, #12]
   11990:	movw	r1, #0
   11994:	cmp	r0, r1
   11998:	bne	119f0 <error@@Base+0x630>
   1199c:	ldr	r0, [pc, #112]	; 11a14 <error@@Base+0x654>
   119a0:	ldr	r0, [pc, r0]
   119a4:	movw	r1, #1
   119a8:	str	r0, [sp, #8]
   119ac:	mov	r0, r1
   119b0:	movw	r1, #20
   119b4:	ldr	r2, [sp, #8]
   119b8:	blx	r2
   119bc:	str	r0, [sp, #12]
   119c0:	ldr	r0, [fp, #-8]
   119c4:	bl	107f8 <strdup@plt>
   119c8:	ldr	r1, [pc, #64]	; 11a10 <error@@Base+0x650>
   119cc:	ldr	r1, [pc, r1]
   119d0:	ldr	r2, [sp, #12]
   119d4:	str	r0, [r2, #8]
   119d8:	ldr	r0, [fp, #-4]
   119dc:	ldr	r2, [sp, #12]
   119e0:	str	r1, [sp, #4]
   119e4:	mov	r1, r2
   119e8:	ldr	r2, [sp, #4]
   119ec:	blx	r2
   119f0:	ldr	r0, [sp, #12]
   119f4:	add	r0, r0, #12
   119f8:	ldr	r1, [fp, #-12]
   119fc:	ldr	r2, [sp, #16]
   11a00:	bl	11918 <error@@Base+0x558>
   11a04:	mov	sp, fp
   11a08:	pop	{fp, pc}
   11a0c:	andeq	r2, r1, r8, lsr #14
   11a10:	muleq	r1, r8, r6
   11a14:	andeq	r2, r1, r4, lsr #14
   11a18:	push	{fp, lr}
   11a1c:	mov	fp, sp
   11a20:	sub	sp, sp, #48	; 0x30
   11a24:	ldr	r2, [pc, #512]	; 11c2c <error@@Base+0x86c>
   11a28:	add	r2, pc, r2
   11a2c:	ldr	r3, [pc, #508]	; 11c30 <error@@Base+0x870>
   11a30:	ldr	r3, [pc, r3]
   11a34:	str	r0, [fp, #-4]
   11a38:	str	r1, [fp, #-8]
   11a3c:	ldr	r0, [fp, #-8]
   11a40:	mov	r1, r2
   11a44:	blx	r3
   11a48:	str	r0, [fp, #-12]
   11a4c:	ldr	r0, [fp, #-12]
   11a50:	bl	11c54 <error@@Base+0x894>
   11a54:	and	r0, r0, #255	; 0xff
   11a58:	cmp	r0, #0
   11a5c:	beq	11bb8 <error@@Base+0x7f8>
   11a60:	ldr	r0, [pc, #460]	; 11c34 <error@@Base+0x874>
   11a64:	add	r0, pc, r0
   11a68:	ldr	r1, [pc, #456]	; 11c38 <error@@Base+0x878>
   11a6c:	add	r1, pc, r1
   11a70:	movw	r2, #45	; 0x2d
   11a74:	bl	108a0 <strncmp@plt>
   11a78:	cmp	r0, #0
   11a7c:	bne	11bb8 <error@@Base+0x7f8>
   11a80:	ldr	r0, [fp, #-12]
   11a84:	bl	11c54 <error@@Base+0x894>
   11a88:	and	r0, r0, #255	; 0xff
   11a8c:	cmp	r0, #0
   11a90:	beq	11bb8 <error@@Base+0x7f8>
   11a94:	ldr	r0, [pc, #432]	; 11c4c <error@@Base+0x88c>
   11a98:	add	r0, pc, r0
   11a9c:	ldr	r1, [pc, #428]	; 11c50 <error@@Base+0x890>
   11aa0:	add	r1, pc, r1
   11aa4:	bl	107c8 <strcmp@plt>
   11aa8:	cmp	r0, #0
   11aac:	bne	11bb8 <error@@Base+0x7f8>
   11ab0:	ldr	r0, [fp, #-12]
   11ab4:	sub	r1, fp, #16
   11ab8:	bl	11ca8 <error@@Base+0x8e8>
   11abc:	and	r0, r0, #255	; 0xff
   11ac0:	cmp	r0, #0
   11ac4:	beq	11bb8 <error@@Base+0x7f8>
   11ac8:	ldr	r0, [fp, #-12]
   11acc:	sub	r1, fp, #20
   11ad0:	bl	11ca8 <error@@Base+0x8e8>
   11ad4:	and	r0, r0, #255	; 0xff
   11ad8:	cmp	r0, #0
   11adc:	beq	11bb8 <error@@Base+0x7f8>
   11ae0:	ldr	r0, [fp, #-12]
   11ae4:	bl	11c54 <error@@Base+0x894>
   11ae8:	and	r0, r0, #255	; 0xff
   11aec:	cmp	r0, #0
   11af0:	beq	11bb8 <error@@Base+0x7f8>
   11af4:	ldr	r0, [fp, #-12]
   11af8:	bl	11c54 <error@@Base+0x894>
   11afc:	and	r0, r0, #255	; 0xff
   11b00:	cmp	r0, #0
   11b04:	beq	11bb8 <error@@Base+0x7f8>
   11b08:	ldr	r0, [fp, #-4]
   11b0c:	ldr	r1, [fp, #-16]
   11b10:	ldr	r2, [fp, #-20]	; 0xffffffec
   11b14:	bl	11918 <error@@Base+0x558>
   11b18:	ldr	r0, [fp, #-12]
   11b1c:	ldr	r1, [fp, #-4]
   11b20:	add	r1, r1, #8
   11b24:	bl	11d24 <error@@Base+0x964>
   11b28:	str	r0, [sp, #24]
   11b2c:	ldr	r0, [fp, #-12]
   11b30:	ldr	r1, [fp, #-4]
   11b34:	add	r1, r1, #416	; 0x1a0
   11b38:	bl	11d24 <error@@Base+0x964>
   11b3c:	str	r0, [sp, #20]
   11b40:	ldr	r0, [fp, #-12]
   11b44:	ldr	r1, [fp, #-4]
   11b48:	add	r1, r1, #824	; 0x338
   11b4c:	bl	11d24 <error@@Base+0x964>
   11b50:	ldr	r1, [fp, #-16]
   11b54:	cmp	r1, #0
   11b58:	str	r0, [sp, #16]
   11b5c:	ble	11bb4 <error@@Base+0x7f4>
   11b60:	ldr	r0, [fp, #-12]
   11b64:	ldr	r1, [fp, #-4]
   11b68:	add	r1, r1, #920	; 0x398
   11b6c:	bl	11d24 <error@@Base+0x964>
   11b70:	ldr	r1, [sp, #24]
   11b74:	cmp	r1, #0
   11b78:	str	r0, [sp, #12]
   11b7c:	ble	11b90 <error@@Base+0x7d0>
   11b80:	ldr	r0, [fp, #-12]
   11b84:	ldr	r1, [fp, #-4]
   11b88:	add	r1, r1, #992	; 0x3e0
   11b8c:	bl	11e18 <error@@Base+0xa58>
   11b90:	ldr	r0, [sp, #20]
   11b94:	cmp	r0, #0
   11b98:	ble	11bb0 <error@@Base+0x7f0>
   11b9c:	ldr	r0, [fp, #-12]
   11ba0:	ldr	r1, [fp, #-4]
   11ba4:	movw	r2, #9048	; 0x2358
   11ba8:	add	r1, r1, r2
   11bac:	bl	11e18 <error@@Base+0xa58>
   11bb0:	b	11bb4 <error@@Base+0x7f4>
   11bb4:	b	11c08 <error@@Base+0x848>
   11bb8:	ldr	r0, [fp, #-8]
   11bbc:	movw	r1, #0
   11bc0:	cmp	r0, r1
   11bc4:	beq	11bd4 <error@@Base+0x814>
   11bc8:	ldr	r0, [fp, #-8]
   11bcc:	str	r0, [sp, #8]
   11bd0:	b	11be4 <error@@Base+0x824>
   11bd4:	ldr	r0, [pc, #96]	; 11c3c <error@@Base+0x87c>
   11bd8:	add	r0, pc, r0
   11bdc:	str	r0, [sp, #8]
   11be0:	b	11be4 <error@@Base+0x824>
   11be4:	ldr	r0, [sp, #8]
   11be8:	ldr	r1, [pc, #80]	; 11c40 <error@@Base+0x880>
   11bec:	add	r1, pc, r1
   11bf0:	ldr	r2, [pc, #76]	; 11c44 <error@@Base+0x884>
   11bf4:	ldr	r2, [pc, r2]
   11bf8:	str	r0, [sp, #4]
   11bfc:	mov	r0, r1
   11c00:	ldr	r1, [sp, #4]
   11c04:	blx	r2
   11c08:	ldr	r0, [pc, #56]	; 11c48 <error@@Base+0x888>
   11c0c:	ldr	r0, [pc, r0]
   11c10:	ldr	r1, [fp, #-12]
   11c14:	str	r0, [sp]
   11c18:	mov	r0, r1
   11c1c:	ldr	r1, [sp]
   11c20:	blx	r1
   11c24:	mov	sp, fp
   11c28:	pop	{fp, pc}
   11c2c:	andeq	r1, r0, r8, asr #17
   11c30:	andeq	r2, r1, ip, lsr r6
   11c34:	andeq	r2, r1, r5, lsl #13
   11c38:	andeq	r1, r0, r6, lsl #17
   11c3c:	andeq	r1, r0, ip, lsl #15
   11c40:	andeq	r1, r0, r6, ror #14
   11c44:	ldrdeq	r2, [r1], -r4
   11c48:	andeq	r2, r1, ip, asr #8
   11c4c:	andeq	r2, r1, r1, asr r6
   11c50:	andeq	r1, r0, r2, lsl #17
   11c54:	push	{fp, lr}
   11c58:	mov	fp, sp
   11c5c:	sub	sp, sp, #8
   11c60:	ldr	r1, [pc, #60]	; 11ca4 <error@@Base+0x8e4>
   11c64:	add	r1, pc, r1
   11c68:	str	r0, [sp, #4]
   11c6c:	ldr	r2, [sp, #4]
   11c70:	mov	r0, r1
   11c74:	movw	r1, #99	; 0x63
   11c78:	bl	107ec <fgets@plt>
   11c7c:	movw	r1, #0
   11c80:	cmp	r0, r1
   11c84:	movw	r0, #0
   11c88:	movne	r0, #1
   11c8c:	tst	r0, #1
   11c90:	movw	r0, #1
   11c94:	moveq	r0, #0
   11c98:	and	r0, r0, #255	; 0xff
   11c9c:	mov	sp, fp
   11ca0:	pop	{fp, pc}
   11ca4:	andeq	r2, r1, r5, lsl #9
   11ca8:	push	{fp, lr}
   11cac:	mov	fp, sp
   11cb0:	sub	sp, sp, #16
   11cb4:	str	r0, [fp, #-4]
   11cb8:	str	r1, [sp, #8]
   11cbc:	ldr	r0, [fp, #-4]
   11cc0:	bl	11c54 <error@@Base+0x894>
   11cc4:	and	r0, r0, #255	; 0xff
   11cc8:	cmp	r0, #0
   11ccc:	movw	r0, #0
   11cd0:	str	r0, [sp, #4]
   11cd4:	beq	11d00 <error@@Base+0x940>
   11cd8:	ldr	r0, [pc, #60]	; 11d1c <error@@Base+0x95c>
   11cdc:	add	r0, pc, r0
   11ce0:	ldr	r1, [pc, #56]	; 11d20 <error@@Base+0x960>
   11ce4:	add	r1, pc, r1
   11ce8:	ldr	r2, [sp, #8]
   11cec:	bl	10858 <__isoc99_sscanf@plt>
   11cf0:	cmp	r0, #1
   11cf4:	movw	r0, #0
   11cf8:	moveq	r0, #1
   11cfc:	str	r0, [sp, #4]
   11d00:	ldr	r0, [sp, #4]
   11d04:	tst	r0, #1
   11d08:	movw	r0, #1
   11d0c:	moveq	r0, #0
   11d10:	and	r0, r0, #255	; 0xff
   11d14:	mov	sp, fp
   11d18:	pop	{fp, pc}
   11d1c:	andeq	r2, r1, sp, lsl #8
   11d20:	strdeq	r1, [r0], -r1	; <UNPREDICTABLE>
   11d24:	push	{fp, lr}
   11d28:	mov	fp, sp
   11d2c:	sub	sp, sp, #24
   11d30:	str	r0, [fp, #-4]
   11d34:	str	r1, [fp, #-8]
   11d38:	movw	r0, #0
   11d3c:	str	r0, [sp]
   11d40:	ldr	r0, [fp, #-4]
   11d44:	bl	11c54 <error@@Base+0x894>
   11d48:	and	r0, r0, #255	; 0xff
   11d4c:	cmp	r0, #0
   11d50:	beq	11e00 <error@@Base+0xa40>
   11d54:	ldr	r0, [fp, #-4]
   11d58:	bl	11c54 <error@@Base+0x894>
   11d5c:	and	r0, r0, #255	; 0xff
   11d60:	cmp	r0, #0
   11d64:	beq	11e00 <error@@Base+0xa40>
   11d68:	b	11d6c <error@@Base+0x9ac>
   11d6c:	ldr	r0, [fp, #-4]
   11d70:	add	r1, sp, #12
   11d74:	add	r2, sp, #8
   11d78:	bl	124d0 <error@@Base+0x1110>
   11d7c:	sxtb	r0, r0
   11d80:	cmp	r0, #0
   11d84:	beq	11dfc <error@@Base+0xa3c>
   11d88:	ldr	r0, [pc, #124]	; 11e0c <error@@Base+0xa4c>
   11d8c:	add	r0, pc, r0
   11d90:	add	r0, r0, #29
   11d94:	bl	10888 <atoi@plt>
   11d98:	str	r0, [sp, #4]
   11d9c:	ldr	r0, [sp, #4]
   11da0:	cmp	r0, #0
   11da4:	bne	11de0 <error@@Base+0xa20>
   11da8:	ldr	r0, [pc, #96]	; 11e10 <error@@Base+0xa50>
   11dac:	add	r0, pc, r0
   11db0:	add	r0, r0, #29
   11db4:	ldr	r1, [pc, #88]	; 11e14 <error@@Base+0xa54>
   11db8:	add	r1, pc, r1
   11dbc:	bl	107c8 <strcmp@plt>
   11dc0:	cmp	r0, #0
   11dc4:	bne	11dd4 <error@@Base+0xa14>
   11dc8:	ldr	r0, [sp, #12]
   11dcc:	str	r0, [sp]
   11dd0:	b	11ddc <error@@Base+0xa1c>
   11dd4:	movw	r0, #11
   11dd8:	str	r0, [sp, #4]
   11ddc:	b	11de0 <error@@Base+0xa20>
   11de0:	ldr	r0, [fp, #-8]
   11de4:	ldr	r1, [sp, #4]
   11de8:	add	r0, r0, r1, lsl #3
   11dec:	ldr	r1, [sp, #12]
   11df0:	ldr	r2, [sp, #8]
   11df4:	bl	11918 <error@@Base+0x558>
   11df8:	b	11d6c <error@@Base+0x9ac>
   11dfc:	b	11e00 <error@@Base+0xa40>
   11e00:	ldr	r0, [sp]
   11e04:	mov	sp, fp
   11e08:	pop	{fp, pc}
   11e0c:	andeq	r2, r1, sp, asr r3
   11e10:	andeq	r2, r1, sp, lsr r3
   11e14:	andeq	r1, r0, r1, lsl r6
   11e18:	push	{fp, lr}
   11e1c:	mov	fp, sp
   11e20:	sub	sp, sp, #24
   11e24:	str	r0, [fp, #-4]
   11e28:	str	r1, [fp, #-8]
   11e2c:	ldr	r0, [fp, #-4]
   11e30:	bl	11c54 <error@@Base+0x894>
   11e34:	and	r0, r0, #255	; 0xff
   11e38:	cmp	r0, #0
   11e3c:	beq	11ec8 <error@@Base+0xb08>
   11e40:	ldr	r0, [fp, #-4]
   11e44:	bl	11c54 <error@@Base+0x894>
   11e48:	and	r0, r0, #255	; 0xff
   11e4c:	cmp	r0, #0
   11e50:	beq	11ec8 <error@@Base+0xb08>
   11e54:	b	11e58 <error@@Base+0xa98>
   11e58:	ldr	r0, [fp, #-4]
   11e5c:	add	r1, sp, #12
   11e60:	add	r2, sp, #8
   11e64:	bl	124d0 <error@@Base+0x1110>
   11e68:	sxtb	r0, r0
   11e6c:	cmp	r0, #0
   11e70:	beq	11ec4 <error@@Base+0xb04>
   11e74:	ldr	r0, [pc, #84]	; 11ed0 <error@@Base+0xb10>
   11e78:	add	r0, pc, r0
   11e7c:	add	r1, r0, #29
   11e80:	ldr	r2, [pc, #76]	; 11ed4 <error@@Base+0xb14>
   11e84:	add	r2, pc, r2
   11e88:	str	r0, [sp, #4]
   11e8c:	mov	r0, r2
   11e90:	str	r1, [sp]
   11e94:	bl	10840 <strlen@plt>
   11e98:	sub	r0, r0, #1
   11e9c:	ldr	r1, [sp, #4]
   11ea0:	add	r0, r1, r0
   11ea4:	movw	r2, #0
   11ea8:	strb	r2, [r0]
   11eac:	ldr	r0, [fp, #-8]
   11eb0:	ldr	r2, [sp, #12]
   11eb4:	ldr	r3, [sp, #8]
   11eb8:	ldr	r1, [sp]
   11ebc:	bl	11958 <error@@Base+0x598>
   11ec0:	b	11e58 <error@@Base+0xa98>
   11ec4:	b	11ec8 <error@@Base+0xb08>
   11ec8:	mov	sp, fp
   11ecc:	pop	{fp, pc}
   11ed0:	andeq	r2, r1, r1, ror r2
   11ed4:	andeq	r2, r1, r5, ror #4
   11ed8:	push	{fp, lr}
   11edc:	mov	fp, sp
   11ee0:	sub	sp, sp, #40	; 0x28
   11ee4:	ldr	r2, [pc, #532]	; 12100 <error@@Base+0xd40>
   11ee8:	add	r2, pc, r2
   11eec:	ldr	r3, [pc, #528]	; 12104 <error@@Base+0xd44>
   11ef0:	ldr	r3, [pc, r3]
   11ef4:	str	r0, [fp, #-4]
   11ef8:	str	r1, [fp, #-8]
   11efc:	ldr	r0, [fp, #-8]
   11f00:	mov	r1, r2
   11f04:	blx	r3
   11f08:	ldr	r1, [pc, #484]	; 120f4 <error@@Base+0xd34>
   11f0c:	add	r1, pc, r1
   11f10:	ldr	r2, [pc, #480]	; 120f8 <error@@Base+0xd38>
   11f14:	add	r2, pc, r2
   11f18:	ldr	r3, [pc, #476]	; 120fc <error@@Base+0xd3c>
   11f1c:	add	r3, pc, r3
   11f20:	str	r0, [fp, #-12]
   11f24:	ldr	r0, [fp, #-12]
   11f28:	bl	1084c <fprintf@plt>
   11f2c:	ldr	r1, [pc, #444]	; 120f0 <error@@Base+0xd30>
   11f30:	add	r1, pc, r1
   11f34:	ldr	r2, [fp, #-12]
   11f38:	ldr	r3, [fp, #-4]
   11f3c:	ldr	r3, [r3]
   11f40:	str	r0, [fp, #-16]
   11f44:	mov	r0, r2
   11f48:	mov	r2, r3
   11f4c:	bl	1084c <fprintf@plt>
   11f50:	ldr	r1, [pc, #404]	; 120ec <error@@Base+0xd2c>
   11f54:	add	r1, pc, r1
   11f58:	ldr	r2, [fp, #-12]
   11f5c:	ldr	r3, [fp, #-4]
   11f60:	ldr	r3, [r3, #4]
   11f64:	str	r0, [sp, #20]
   11f68:	mov	r0, r2
   11f6c:	mov	r2, r3
   11f70:	bl	1084c <fprintf@plt>
   11f74:	ldr	r1, [fp, #-12]
   11f78:	ldr	r2, [fp, #-4]
   11f7c:	str	r0, [sp, #16]
   11f80:	mov	r0, r1
   11f84:	mov	r1, r2
   11f88:	bl	12118 <error@@Base+0xd58>
   11f8c:	ldr	r0, [pc, #340]	; 120e8 <error@@Base+0xd28>
   11f90:	add	r0, pc, r0
   11f94:	ldr	r1, [fp, #-12]
   11f98:	bl	10894 <fputs@plt>
   11f9c:	ldr	r1, [pc, #320]	; 120e4 <error@@Base+0xd24>
   11fa0:	add	r3, pc, r1
   11fa4:	ldr	r1, [fp, #-12]
   11fa8:	ldr	r2, [fp, #-4]
   11fac:	add	r2, r2, #8
   11fb0:	str	r0, [sp, #12]
   11fb4:	mov	r0, r1
   11fb8:	mov	r1, r2
   11fbc:	movw	r2, #50	; 0x32
   11fc0:	movw	lr, #0
   11fc4:	str	lr, [sp]
   11fc8:	movw	lr, #1
   11fcc:	str	lr, [sp, #4]
   11fd0:	bl	121c0 <error@@Base+0xe00>
   11fd4:	ldr	r0, [pc, #260]	; 120e0 <error@@Base+0xd20>
   11fd8:	add	r3, pc, r0
   11fdc:	ldr	r0, [fp, #-12]
   11fe0:	ldr	r1, [fp, #-4]
   11fe4:	add	r1, r1, #416	; 0x1a0
   11fe8:	movw	r2, #50	; 0x32
   11fec:	movw	lr, #0
   11ff0:	str	lr, [sp]
   11ff4:	movw	lr, #1
   11ff8:	str	lr, [sp, #4]
   11ffc:	bl	121c0 <error@@Base+0xe00>
   12000:	ldr	r0, [pc, #212]	; 120dc <error@@Base+0xd1c>
   12004:	add	r3, pc, r0
   12008:	ldr	r0, [fp, #-12]
   1200c:	ldr	r1, [fp, #-4]
   12010:	add	r1, r1, #824	; 0x338
   12014:	movw	r2, #10
   12018:	movw	lr, #1
   1201c:	str	lr, [sp]
   12020:	str	lr, [sp, #4]
   12024:	bl	121c0 <error@@Base+0xe00>
   12028:	ldr	r0, [fp, #-4]
   1202c:	ldr	r0, [r0]
   12030:	cmp	r0, #0
   12034:	ble	120b8 <error@@Base+0xcf8>
   12038:	ldr	r0, [pc, #200]	; 12108 <error@@Base+0xd48>
   1203c:	add	r3, pc, r0
   12040:	ldr	r0, [fp, #-12]
   12044:	ldr	r1, [fp, #-4]
   12048:	add	r1, r1, #920	; 0x398
   1204c:	movw	r2, #8
   12050:	movw	ip, #0
   12054:	str	ip, [sp]
   12058:	str	ip, [sp, #4]
   1205c:	bl	121c0 <error@@Base+0xe00>
   12060:	ldr	r0, [fp, #-4]
   12064:	ldr	r0, [r0, #8]
   12068:	cmp	r0, #0
   1206c:	ble	12088 <error@@Base+0xcc8>
   12070:	ldr	r0, [pc, #148]	; 1210c <error@@Base+0xd4c>
   12074:	add	r2, pc, r0
   12078:	ldr	r0, [fp, #-12]
   1207c:	ldr	r1, [fp, #-4]
   12080:	add	r1, r1, #992	; 0x3e0
   12084:	bl	12374 <error@@Base+0xfb4>
   12088:	ldr	r0, [fp, #-4]
   1208c:	ldr	r0, [r0, #416]	; 0x1a0
   12090:	cmp	r0, #0
   12094:	ble	120b4 <error@@Base+0xcf4>
   12098:	ldr	r0, [pc, #112]	; 12110 <error@@Base+0xd50>
   1209c:	add	r2, pc, r0
   120a0:	ldr	r0, [fp, #-12]
   120a4:	ldr	r1, [fp, #-4]
   120a8:	movw	r3, #9048	; 0x2358
   120ac:	add	r1, r1, r3
   120b0:	bl	12374 <error@@Base+0xfb4>
   120b4:	b	120b8 <error@@Base+0xcf8>
   120b8:	ldr	r0, [pc, #84]	; 12114 <error@@Base+0xd54>
   120bc:	ldr	r0, [pc, r0]
   120c0:	ldr	r1, [fp, #-12]
   120c4:	str	r0, [sp, #8]
   120c8:	mov	r0, r1
   120cc:	ldr	r1, [sp, #8]
   120d0:	blx	r1
   120d4:	mov	sp, fp
   120d8:	pop	{fp, pc}
   120dc:	andeq	r1, r0, r6, lsr #7
   120e0:	ldrdeq	r1, [r0], -fp
   120e4:	andeq	r1, r0, r0, lsl #8
   120e8:	andeq	r1, r0, r3, lsl #8
   120ec:	andeq	r1, r0, r9, lsr #8
   120f0:	andeq	r1, r0, pc, lsr r4
   120f4:	andeq	r1, r0, lr, asr r4
   120f8:	ldrdeq	r1, [r0], -lr
   120fc:	andeq	r1, r0, r6, lsl #8
   12100:	andeq	r1, r0, r0, asr r3
   12104:	andeq	r2, r1, ip, ror r1
   12108:	andeq	r1, r0, r5, lsl #7
   1210c:	andeq	r1, r0, ip, lsr #6
   12110:	andeq	r1, r0, r7, lsl r3
   12114:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   12118:	push	{fp, lr}
   1211c:	mov	fp, sp
   12120:	sub	sp, sp, #16
   12124:	str	r0, [fp, #-4]
   12128:	str	r1, [sp, #8]
   1212c:	ldr	r0, [sp, #8]
   12130:	ldr	r0, [r0]
   12134:	cmp	r0, #0
   12138:	bne	12154 <error@@Base+0xd94>
   1213c:	ldr	r0, [pc, #120]	; 121bc <error@@Base+0xdfc>
   12140:	add	r0, pc, r0
   12144:	ldr	r1, [fp, #-4]
   12148:	bl	10894 <fputs@plt>
   1214c:	str	r0, [sp, #4]
   12150:	b	121a4 <error@@Base+0xde4>
   12154:	ldr	r0, [pc, #92]	; 121b8 <error@@Base+0xdf8>
   12158:	add	r1, pc, r0
   1215c:	vldr	d16, [pc, #76]	; 121b0 <error@@Base+0xdf0>
   12160:	ldr	r0, [fp, #-4]
   12164:	ldr	r2, [sp, #8]
   12168:	ldr	r2, [r2]
   1216c:	ldr	r3, [sp, #8]
   12170:	ldr	r3, [r3, #4]
   12174:	sub	r2, r2, r3
   12178:	vmov	s0, r2
   1217c:	vcvt.f64.s32	d17, s0
   12180:	vmul.f64	d16, d16, d17
   12184:	ldr	r2, [sp, #8]
   12188:	ldr	r2, [r2]
   1218c:	vmov	s0, r2
   12190:	vcvt.f64.s32	d17, s0
   12194:	vdiv.f64	d16, d16, d17
   12198:	vmov	r2, r3, d16
   1219c:	bl	1084c <fprintf@plt>
   121a0:	str	r0, [sp]
   121a4:	mov	sp, fp
   121a8:	pop	{fp, pc}
   121ac:	nop	{0}
   121b0:	andeq	r0, r0, r0
   121b4:	subsmi	r0, r9, r0
   121b8:	andeq	r1, r0, sl, lsl #5
   121bc:	muleq	r0, r9, r2
   121c0:	push	{r4, sl, fp, lr}
   121c4:	add	fp, sp, #8
   121c8:	sub	sp, sp, #40	; 0x28
   121cc:	ldr	ip, [fp, #12]
   121d0:	ldr	lr, [fp, #8]
   121d4:	ldr	r4, [pc, #392]	; 12364 <error@@Base+0xfa4>
   121d8:	add	r4, pc, r4
   121dc:	str	r0, [fp, #-12]
   121e0:	str	r1, [fp, #-16]
   121e4:	strh	r2, [fp, #-18]	; 0xffffffee
   121e8:	str	r3, [sp, #24]
   121ec:	strb	lr, [sp, #23]
   121f0:	strb	ip, [sp, #22]
   121f4:	ldr	r0, [fp, #-12]
   121f8:	ldr	r2, [sp, #24]
   121fc:	mov	r1, r4
   12200:	bl	1084c <fprintf@plt>
   12204:	ldr	r1, [fp, #-12]
   12208:	str	r0, [sp, #16]
   1220c:	mov	r0, r1
   12210:	movw	r1, #0
   12214:	bl	12554 <error@@Base+0x1194>
   12218:	ldr	r0, [pc, #312]	; 12358 <error@@Base+0xf98>
   1221c:	add	r1, pc, r0
   12220:	ldr	r0, [pc, #308]	; 1235c <error@@Base+0xf9c>
   12224:	add	r0, pc, r0
   12228:	ldr	r2, [pc, #304]	; 12360 <error@@Base+0xfa0>
   1222c:	add	r2, pc, r2
   12230:	ldr	r3, [fp, #-12]
   12234:	ldrb	ip, [sp, #23]
   12238:	cmp	ip, #0
   1223c:	movw	ip, #0
   12240:	movne	ip, #1
   12244:	tst	ip, #1
   12248:	movne	r2, r0
   1224c:	mov	r0, r3
   12250:	bl	1084c <fprintf@plt>
   12254:	movw	r1, #1
   12258:	strh	r1, [sp, #20]
   1225c:	str	r0, [sp, #12]
   12260:	ldrsh	r0, [sp, #20]
   12264:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   12268:	cmp	r0, r1
   1226c:	bgt	122cc <error@@Base+0xf0c>
   12270:	ldr	r0, [fp, #-16]
   12274:	ldrsh	r1, [sp, #20]
   12278:	add	r0, r0, r1, lsl #3
   1227c:	ldr	r0, [r0]
   12280:	cmp	r0, #0
   12284:	ble	122b4 <error@@Base+0xef4>
   12288:	ldr	r0, [fp, #-12]
   1228c:	ldr	r1, [fp, #-16]
   12290:	ldrsh	r2, [sp, #20]
   12294:	add	r1, r1, r2, lsl #3
   12298:	bl	12554 <error@@Base+0x1194>
   1229c:	ldr	r0, [pc, #204]	; 12370 <error@@Base+0xfb0>
   122a0:	add	r1, pc, r0
   122a4:	ldr	r0, [fp, #-12]
   122a8:	ldrsh	r2, [sp, #20]
   122ac:	bl	1084c <fprintf@plt>
   122b0:	str	r0, [sp, #8]
   122b4:	b	122b8 <error@@Base+0xef8>
   122b8:	ldrh	r0, [sp, #20]
   122bc:	movw	r1, #1
   122c0:	add	r0, r0, r1
   122c4:	strh	r0, [sp, #20]
   122c8:	b	12260 <error@@Base+0xea0>
   122cc:	ldrb	r0, [sp, #23]
   122d0:	cmp	r0, #0
   122d4:	beq	12324 <error@@Base+0xf64>
   122d8:	ldr	r0, [fp, #-16]
   122dc:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   122e0:	add	r1, r1, #1
   122e4:	add	r0, r0, r1, lsl #3
   122e8:	ldr	r0, [r0]
   122ec:	cmp	r0, #0
   122f0:	ble	12324 <error@@Base+0xf64>
   122f4:	ldr	r0, [fp, #-12]
   122f8:	ldr	r1, [fp, #-16]
   122fc:	ldrsh	r2, [fp, #-18]	; 0xffffffee
   12300:	add	r2, r2, #1
   12304:	add	r1, r1, r2, lsl #3
   12308:	bl	12554 <error@@Base+0x1194>
   1230c:	ldr	r0, [pc, #84]	; 12368 <error@@Base+0xfa8>
   12310:	add	r1, pc, r0
   12314:	ldr	r0, [fp, #-12]
   12318:	ldrsh	r2, [fp, #-18]	; 0xffffffee
   1231c:	bl	1084c <fprintf@plt>
   12320:	str	r0, [sp, #4]
   12324:	ldrsb	r0, [sp, #22]
   12328:	cmp	r0, #0
   1232c:	beq	12350 <error@@Base+0xf90>
   12330:	ldr	r0, [fp, #-12]
   12334:	ldr	r1, [fp, #-16]
   12338:	bl	12554 <error@@Base+0x1194>
   1233c:	ldr	r0, [pc, #40]	; 1236c <error@@Base+0xfac>
   12340:	add	r0, pc, r0
   12344:	ldr	r1, [fp, #-12]
   12348:	bl	10894 <fputs@plt>
   1234c:	str	r0, [sp]
   12350:	sub	sp, fp, #8
   12354:	pop	{r4, sl, fp, pc}
   12358:	andeq	r1, r0, sp, asr #3
   1235c:	andeq	r1, r0, r9, asr #3
   12360:	andeq	r1, r0, r8, asr #3
   12364:	andeq	r1, r0, r0, lsl r2
   12368:	strdeq	r1, [r0], -r4
   1236c:	andeq	r1, r0, r9, lsl #1
   12370:	andeq	r1, r0, fp, asr r1
   12374:	push	{fp, lr}
   12378:	mov	fp, sp
   1237c:	sub	sp, sp, #48	; 0x30
   12380:	ldr	r3, [pc, #320]	; 124c8 <error@@Base+0x1108>
   12384:	ldr	r3, [pc, r3]
   12388:	str	r0, [fp, #-4]
   1238c:	str	r1, [fp, #-8]
   12390:	str	r2, [fp, #-12]
   12394:	ldr	r0, [fp, #-8]
   12398:	blx	r3
   1239c:	ldr	r0, [pc, #284]	; 124c0 <error@@Base+0x1100>
   123a0:	add	r0, pc, r0
   123a4:	ldr	r1, [pc, #280]	; 124c4 <error@@Base+0x1104>
   123a8:	ldr	r1, [pc, r1]
   123ac:	ldr	r2, [fp, #-8]
   123b0:	movw	r3, #8052	; 0x1f74
   123b4:	add	r2, r2, r3
   123b8:	ldr	r2, [r2]
   123bc:	ldr	r3, [fp, #-8]
   123c0:	movw	lr, #8048	; 0x1f70
   123c4:	add	r3, r3, lr
   123c8:	ldr	r3, [r3]
   123cc:	str	r0, [fp, #-20]	; 0xffffffec
   123d0:	mov	r0, r2
   123d4:	str	r1, [sp, #24]
   123d8:	mov	r1, r3
   123dc:	ldr	r2, [fp, #-20]	; 0xffffffec
   123e0:	ldr	r3, [sp, #24]
   123e4:	blx	r3
   123e8:	ldr	r0, [pc, #204]	; 124bc <error@@Base+0x10fc>
   123ec:	add	r1, pc, r0
   123f0:	ldr	r0, [fp, #-4]
   123f4:	ldr	r2, [fp, #-12]
   123f8:	bl	1084c <fprintf@plt>
   123fc:	ldr	r1, [fp, #-4]
   12400:	str	r0, [sp, #20]
   12404:	mov	r0, r1
   12408:	movw	r1, #0
   1240c:	bl	12554 <error@@Base+0x1194>
   12410:	ldr	r1, [fp, #-4]
   12414:	movw	r0, #10
   12418:	bl	10870 <fputc@plt>
   1241c:	movw	r1, #0
   12420:	str	r1, [fp, #-16]
   12424:	str	r0, [sp, #16]
   12428:	ldr	r0, [fp, #-16]
   1242c:	ldr	r1, [fp, #-8]
   12430:	movw	r2, #8052	; 0x1f74
   12434:	add	r1, r1, r2
   12438:	ldr	r1, [r1]
   1243c:	cmp	r0, r1
   12440:	bge	124b4 <error@@Base+0x10f4>
   12444:	ldr	r0, [pc, #128]	; 124cc <error@@Base+0x110c>
   12448:	add	r1, pc, r0
   1244c:	ldr	r0, [fp, #-4]
   12450:	ldr	r2, [fp, #-8]
   12454:	movw	r3, #8048	; 0x1f70
   12458:	ldr	r2, [r2, r3]
   1245c:	ldr	ip, [fp, #-16]
   12460:	ldr	r2, [r2, ip, lsl #2]
   12464:	add	r2, r2, #12
   12468:	str	r1, [sp, #12]
   1246c:	mov	r1, r2
   12470:	str	r3, [sp, #8]
   12474:	bl	12554 <error@@Base+0x1194>
   12478:	ldr	r0, [fp, #-4]
   1247c:	ldr	r1, [fp, #-8]
   12480:	ldr	r2, [sp, #8]
   12484:	ldr	r1, [r1, r2]
   12488:	ldr	r3, [fp, #-16]
   1248c:	add	r1, r1, r3, lsl #2
   12490:	ldr	r1, [r1]
   12494:	ldr	r2, [r1, #8]
   12498:	ldr	r1, [sp, #12]
   1249c:	bl	1084c <fprintf@plt>
   124a0:	str	r0, [sp, #4]
   124a4:	ldr	r0, [fp, #-16]
   124a8:	add	r0, r0, #1
   124ac:	str	r0, [fp, #-16]
   124b0:	b	12428 <error@@Base+0x1068>
   124b4:	mov	sp, fp
   124b8:	pop	{fp, pc}
   124bc:	strdeq	r0, [r0], -ip
   124c0:	andeq	r0, r0, r8, asr #4
   124c4:	ldrdeq	r1, [r1], -r0
   124c8:	andeq	r1, r1, r4, lsl #26
   124cc:	andeq	r0, r0, r1, lsr #31
   124d0:	push	{fp, lr}
   124d4:	mov	fp, sp
   124d8:	sub	sp, sp, #16
   124dc:	str	r0, [fp, #-4]
   124e0:	str	r1, [sp, #8]
   124e4:	str	r2, [sp, #4]
   124e8:	ldr	r0, [fp, #-4]
   124ec:	bl	11c54 <error@@Base+0x894>
   124f0:	and	r0, r0, #255	; 0xff
   124f4:	cmp	r0, #0
   124f8:	movw	r0, #0
   124fc:	str	r0, [sp]
   12500:	beq	12530 <error@@Base+0x1170>
   12504:	ldr	r0, [pc, #64]	; 1254c <error@@Base+0x118c>
   12508:	add	r0, pc, r0
   1250c:	ldr	r1, [pc, #60]	; 12550 <error@@Base+0x1190>
   12510:	add	r1, pc, r1
   12514:	ldr	r2, [sp, #8]
   12518:	ldr	r3, [sp, #4]
   1251c:	bl	10858 <__isoc99_sscanf@plt>
   12520:	cmp	r0, #2
   12524:	movw	r0, #0
   12528:	moveq	r0, #1
   1252c:	str	r0, [sp]
   12530:	ldr	r0, [sp]
   12534:	tst	r0, #1
   12538:	movw	r0, #1
   1253c:	moveq	r0, #0
   12540:	and	r0, r0, #255	; 0xff
   12544:	mov	sp, fp
   12548:	pop	{fp, pc}
   1254c:	andeq	r1, r1, r1, ror #23
   12550:	andeq	r0, r0, r1, asr #29
   12554:	push	{fp, lr}
   12558:	mov	fp, sp
   1255c:	sub	sp, sp, #24
   12560:	str	r0, [fp, #-4]
   12564:	str	r1, [fp, #-8]
   12568:	ldr	r0, [fp, #-8]
   1256c:	movw	r1, #0
   12570:	cmp	r0, r1
   12574:	beq	125b4 <error@@Base+0x11f4>
   12578:	ldr	r0, [pc, #104]	; 125e8 <error@@Base+0x1228>
   1257c:	add	r1, pc, r0
   12580:	ldr	r0, [fp, #-4]
   12584:	ldr	r2, [fp, #-8]
   12588:	ldr	r2, [r2]
   1258c:	ldr	r3, [fp, #-8]
   12590:	ldr	r3, [r3, #4]
   12594:	bl	1084c <fprintf@plt>
   12598:	ldr	r1, [fp, #-4]
   1259c:	ldr	r2, [fp, #-8]
   125a0:	str	r0, [sp, #12]
   125a4:	mov	r0, r1
   125a8:	mov	r1, r2
   125ac:	bl	12118 <error@@Base+0xd58>
   125b0:	b	125c8 <error@@Base+0x1208>
   125b4:	ldr	r0, [pc, #40]	; 125e4 <error@@Base+0x1224>
   125b8:	add	r0, pc, r0
   125bc:	ldr	r1, [fp, #-4]
   125c0:	bl	10894 <fputs@plt>
   125c4:	str	r0, [sp, #8]
   125c8:	ldr	r0, [pc, #28]	; 125ec <error@@Base+0x122c>
   125cc:	add	r0, pc, r0
   125d0:	ldr	r1, [fp, #-4]
   125d4:	bl	10894 <fputs@plt>
   125d8:	str	r0, [sp, #4]
   125dc:	mov	sp, fp
   125e0:	pop	{fp, pc}
   125e4:	andeq	r0, r0, r0, ror #28
   125e8:	muleq	r0, r1, lr
   125ec:	andeq	r0, r0, r7, ror #28
   125f0:	push	{fp, lr}
   125f4:	mov	fp, sp
   125f8:	sub	sp, sp, #8
   125fc:	ldr	r2, [pc, #36]	; 12628 <error@@Base+0x1268>
   12600:	ldr	r2, [pc, r2]
   12604:	str	r0, [sp, #4]
   12608:	str	r1, [sp]
   1260c:	ldr	r0, [sp, #4]
   12610:	ldr	r0, [r0, #8]
   12614:	ldr	r1, [sp]
   12618:	ldr	r1, [r1, #8]
   1261c:	blx	r2
   12620:	mov	sp, fp
   12624:	pop	{fp, pc}
   12628:			; <UNDEFINED> instruction: 0x00011abc
   1262c:	push	{fp, lr}
   12630:	mov	fp, sp
   12634:	sub	sp, sp, #16
   12638:	str	r0, [fp, #-4]
   1263c:	str	r1, [sp, #8]
   12640:	str	r2, [sp, #4]
   12644:	ldr	r0, [fp, #-4]
   12648:	cmp	r0, #2
   1264c:	bge	12654 <error@@Base+0x1294>
   12650:	b	12684 <error@@Base+0x12c4>
   12654:	ldr	r0, [pc, #48]	; 1268c <error@@Base+0x12cc>
   12658:	add	r0, pc, r0
   1265c:	ldr	r1, [pc, #44]	; 12690 <error@@Base+0x12d0>
   12660:	add	r1, pc, r1
   12664:	ldr	r2, [sp, #8]
   12668:	str	r2, [r1]
   1266c:	ldr	r1, [sp, #4]
   12670:	str	r1, [r0]
   12674:	ldr	r0, [fp, #-4]
   12678:	sub	r1, r0, #1
   1267c:	movw	r0, #0
   12680:	bl	12694 <error@@Base+0x12d4>
   12684:	mov	sp, fp
   12688:	pop	{fp, pc}
   1268c:	strdeq	r1, [r1], -ip
   12690:	strdeq	r1, [r1], -r0
   12694:	push	{fp, lr}
   12698:	mov	fp, sp
   1269c:	sub	sp, sp, #40	; 0x28
   126a0:	str	r0, [fp, #-4]
   126a4:	str	r1, [fp, #-8]
   126a8:	ldr	r0, [fp, #-4]
   126ac:	str	r0, [fp, #-12]
   126b0:	ldr	r0, [fp, #-8]
   126b4:	str	r0, [fp, #-16]
   126b8:	ldr	r0, [pc, #500]	; 128b4 <error@@Base+0x14f4>
   126bc:	ldr	r0, [pc, r0]
   126c0:	ldr	r1, [fp, #-12]
   126c4:	add	r0, r0, r1, lsl #2
   126c8:	ldr	r0, [r0]
   126cc:	str	r0, [sp, #20]
   126d0:	ldr	r0, [fp, #-12]
   126d4:	ldr	r1, [fp, #-16]
   126d8:	cmp	r0, r1
   126dc:	bge	12848 <error@@Base+0x1488>
   126e0:	b	126e4 <error@@Base+0x1324>
   126e4:	ldr	r0, [fp, #-12]
   126e8:	ldr	r1, [fp, #-16]
   126ec:	cmp	r0, r1
   126f0:	movw	r0, #0
   126f4:	str	r0, [sp, #16]
   126f8:	bge	12740 <error@@Base+0x1380>
   126fc:	ldr	r0, [pc, #436]	; 128b8 <error@@Base+0x14f8>
   12700:	ldr	r0, [pc, r0]
   12704:	ldr	r1, [sp, #20]
   12708:	ldr	r2, [pc, #428]	; 128bc <error@@Base+0x14fc>
   1270c:	ldr	r2, [pc, r2]
   12710:	ldr	r3, [fp, #-16]
   12714:	add	r2, r2, r3, lsl #2
   12718:	ldr	r2, [r2]
   1271c:	str	r0, [sp, #12]
   12720:	mov	r0, r1
   12724:	mov	r1, r2
   12728:	ldr	r2, [sp, #12]
   1272c:	blx	r2
   12730:	cmp	r0, #0
   12734:	movw	r0, #0
   12738:	movlt	r0, #1
   1273c:	str	r0, [sp, #16]
   12740:	ldr	r0, [sp, #16]
   12744:	tst	r0, #1
   12748:	beq	12760 <error@@Base+0x13a0>
   1274c:	ldr	r0, [fp, #-16]
   12750:	mvn	r1, #0
   12754:	add	r0, r0, r1
   12758:	str	r0, [fp, #-16]
   1275c:	b	126e4 <error@@Base+0x1324>
   12760:	ldr	r0, [fp, #-12]
   12764:	ldr	r1, [fp, #-16]
   12768:	cmp	r0, r1
   1276c:	beq	12794 <error@@Base+0x13d4>
   12770:	ldr	r0, [pc, #328]	; 128c0 <error@@Base+0x1500>
   12774:	ldr	r0, [pc, r0]
   12778:	ldr	r1, [fp, #-16]
   1277c:	ldr	r1, [r0, r1, lsl #2]
   12780:	ldr	r2, [fp, #-12]
   12784:	add	r3, r2, #1
   12788:	str	r3, [fp, #-12]
   1278c:	add	r0, r0, r2, lsl #2
   12790:	str	r1, [r0]
   12794:	b	12798 <error@@Base+0x13d8>
   12798:	ldr	r0, [fp, #-12]
   1279c:	ldr	r1, [fp, #-16]
   127a0:	cmp	r0, r1
   127a4:	movw	r0, #0
   127a8:	str	r0, [sp, #8]
   127ac:	bge	127f4 <error@@Base+0x1434>
   127b0:	ldr	r0, [pc, #268]	; 128c4 <error@@Base+0x1504>
   127b4:	ldr	r0, [pc, r0]
   127b8:	ldr	r1, [sp, #20]
   127bc:	ldr	r2, [pc, #260]	; 128c8 <error@@Base+0x1508>
   127c0:	ldr	r2, [pc, r2]
   127c4:	ldr	r3, [fp, #-12]
   127c8:	add	r2, r2, r3, lsl #2
   127cc:	ldr	r2, [r2]
   127d0:	str	r0, [sp, #4]
   127d4:	mov	r0, r1
   127d8:	mov	r1, r2
   127dc:	ldr	r2, [sp, #4]
   127e0:	blx	r2
   127e4:	cmp	r0, #0
   127e8:	movw	r0, #0
   127ec:	movgt	r0, #1
   127f0:	str	r0, [sp, #8]
   127f4:	ldr	r0, [sp, #8]
   127f8:	tst	r0, #1
   127fc:	beq	12810 <error@@Base+0x1450>
   12800:	ldr	r0, [fp, #-12]
   12804:	add	r0, r0, #1
   12808:	str	r0, [fp, #-12]
   1280c:	b	12798 <error@@Base+0x13d8>
   12810:	ldr	r0, [fp, #-12]
   12814:	ldr	r1, [fp, #-16]
   12818:	cmp	r0, r1
   1281c:	beq	12844 <error@@Base+0x1484>
   12820:	ldr	r0, [pc, #164]	; 128cc <error@@Base+0x150c>
   12824:	ldr	r0, [pc, r0]
   12828:	ldr	r1, [fp, #-12]
   1282c:	ldr	r1, [r0, r1, lsl #2]
   12830:	ldr	r2, [fp, #-16]
   12834:	sub	r3, r2, #1
   12838:	str	r3, [fp, #-16]
   1283c:	add	r0, r0, r2, lsl #2
   12840:	str	r1, [r0]
   12844:	b	126d0 <error@@Base+0x1310>
   12848:	ldr	r0, [sp, #20]
   1284c:	ldr	r1, [pc, #124]	; 128d0 <error@@Base+0x1510>
   12850:	ldr	r1, [pc, r1]
   12854:	ldr	r2, [fp, #-16]
   12858:	add	r1, r1, r2, lsl #2
   1285c:	str	r0, [r1]
   12860:	ldr	r0, [fp, #-4]
   12864:	ldr	r1, [fp, #-16]
   12868:	mvn	r2, #0
   1286c:	add	r1, r1, r2
   12870:	str	r1, [fp, #-16]
   12874:	cmp	r0, r1
   12878:	bge	12888 <error@@Base+0x14c8>
   1287c:	ldr	r0, [fp, #-4]
   12880:	ldr	r1, [fp, #-16]
   12884:	bl	12694 <error@@Base+0x12d4>
   12888:	ldr	r0, [fp, #-12]
   1288c:	add	r0, r0, #1
   12890:	str	r0, [fp, #-12]
   12894:	ldr	r1, [fp, #-8]
   12898:	cmp	r0, r1
   1289c:	bge	128ac <error@@Base+0x14ec>
   128a0:	ldr	r0, [fp, #-12]
   128a4:	ldr	r1, [fp, #-8]
   128a8:	bl	12694 <error@@Base+0x12d4>
   128ac:	mov	sp, fp
   128b0:	pop	{fp, pc}
   128b4:	muleq	r1, r4, sl
   128b8:	andeq	r1, r1, r4, asr sl
   128bc:	andeq	r1, r1, r4, asr #20
   128c0:	ldrdeq	r1, [r1], -ip
   128c4:	andeq	r1, r1, r0, lsr #19
   128c8:	muleq	r1, r0, r9
   128cc:	andeq	r1, r1, ip, lsr #18
   128d0:	andeq	r1, r1, r0, lsl #18
   128d4:	push	{fp, lr}
   128d8:	mov	fp, sp
   128dc:	sub	sp, sp, #16
   128e0:	str	r0, [fp, #-4]
   128e4:	movw	r0, #0
   128e8:	strh	r0, [fp, #-6]
   128ec:	ldrsh	r0, [fp, #-6]
   128f0:	movw	r1, #503	; 0x1f7
   128f4:	cmp	r0, r1
   128f8:	bge	12934 <error@@Base+0x1574>
   128fc:	ldr	r0, [pc, #92]	; 12960 <error@@Base+0x15a0>
   12900:	ldr	r0, [pc, r0]
   12904:	ldr	r1, [fp, #-4]
   12908:	ldrsh	r2, [fp, #-6]
   1290c:	add	r1, r1, r2, lsl #4
   12910:	str	r0, [sp, #4]
   12914:	mov	r0, r1
   12918:	ldr	r1, [sp, #4]
   1291c:	blx	r1
   12920:	ldrh	r0, [fp, #-6]
   12924:	movw	r1, #1
   12928:	add	r0, r0, r1
   1292c:	strh	r0, [fp, #-6]
   12930:	b	128ec <error@@Base+0x152c>
   12934:	ldr	r0, [fp, #-4]
   12938:	movw	r1, #8048	; 0x1f70
   1293c:	add	r0, r0, r1
   12940:	movw	r1, #0
   12944:	str	r1, [r0]
   12948:	ldr	r0, [fp, #-4]
   1294c:	movw	r2, #8052	; 0x1f74
   12950:	add	r0, r0, r2
   12954:	str	r1, [r0]
   12958:	mov	sp, fp
   1295c:	pop	{fp, pc}
   12960:			; <UNDEFINED> instruction: 0x000117b8
   12964:	push	{fp, lr}
   12968:	mov	fp, sp
   1296c:	sub	sp, sp, #24
   12970:	str	r0, [fp, #-4]
   12974:	str	r1, [fp, #-8]
   12978:	ldr	r0, [fp, #-4]
   1297c:	ldr	r1, [fp, #-8]
   12980:	str	r0, [sp, #8]
   12984:	mov	r0, r1
   12988:	bl	12a08 <error@@Base+0x1648>
   1298c:	mov	r1, r0
   12990:	ldr	lr, [sp, #8]
   12994:	add	r0, lr, r0, lsl #4
   12998:	ldr	r0, [r0]
   1299c:	str	r0, [sp, #12]
   129a0:	str	r1, [sp, #4]
   129a4:	ldr	r0, [sp, #12]
   129a8:	movw	r1, #0
   129ac:	cmp	r0, r1
   129b0:	movw	r0, #0
   129b4:	str	r0, [sp]
   129b8:	beq	129dc <error@@Base+0x161c>
   129bc:	ldr	r0, [fp, #-8]
   129c0:	ldr	r1, [sp, #12]
   129c4:	ldr	r1, [r1, #8]
   129c8:	bl	107c8 <strcmp@plt>
   129cc:	cmp	r0, #0
   129d0:	movw	r0, #0
   129d4:	movne	r0, #1
   129d8:	str	r0, [sp]
   129dc:	ldr	r0, [sp]
   129e0:	tst	r0, #1
   129e4:	beq	129fc <error@@Base+0x163c>
   129e8:	b	129ec <error@@Base+0x162c>
   129ec:	ldr	r0, [sp, #12]
   129f0:	ldr	r0, [r0, #4]
   129f4:	str	r0, [sp, #12]
   129f8:	b	129a4 <error@@Base+0x15e4>
   129fc:	ldr	r0, [sp, #12]
   12a00:	mov	sp, fp
   12a04:	pop	{fp, pc}
   12a08:	sub	sp, sp, #16
   12a0c:	str	r0, [sp, #12]
   12a10:	ldr	r0, [sp, #12]
   12a14:	str	r0, [sp, #8]
   12a18:	movw	r0, #0
   12a1c:	str	r0, [sp]
   12a20:	str	r0, [sp, #4]
   12a24:	ldr	r0, [sp, #8]
   12a28:	ldr	r1, [sp, #4]
   12a2c:	add	r0, r0, r1
   12a30:	ldrsb	r0, [r0]
   12a34:	cmp	r0, #0
   12a38:	beq	12a68 <error@@Base+0x16a8>
   12a3c:	ldr	r0, [sp, #8]
   12a40:	ldr	r1, [sp, #4]
   12a44:	add	r0, r0, r1
   12a48:	ldrb	r0, [r0]
   12a4c:	ldr	r1, [sp]
   12a50:	add	r0, r1, r0
   12a54:	str	r0, [sp]
   12a58:	ldr	r0, [sp, #4]
   12a5c:	add	r0, r0, #1
   12a60:	str	r0, [sp, #4]
   12a64:	b	12a24 <error@@Base+0x1664>
   12a68:	ldr	r0, [sp]
   12a6c:	movw	r1, #20065	; 0x4e61
   12a70:	movt	r1, #33354	; 0x824a
   12a74:	smmla	r1, r0, r1, r0
   12a78:	asr	r2, r1, #8
   12a7c:	add	r1, r2, r1, lsr #31
   12a80:	movw	r2, #503	; 0x1f7
   12a84:	mls	r0, r1, r2, r0
   12a88:	sxth	r0, r0
   12a8c:	add	sp, sp, #16
   12a90:	bx	lr
   12a94:	push	{fp, lr}
   12a98:	mov	fp, sp
   12a9c:	sub	sp, sp, #24
   12aa0:	ldr	r2, [pc, #112]	; 12b18 <error@@Base+0x1758>
   12aa4:	ldr	r2, [pc, r2]
   12aa8:	str	r0, [fp, #-4]
   12aac:	str	r1, [fp, #-8]
   12ab0:	ldr	r0, [fp, #-4]
   12ab4:	ldr	r1, [fp, #-8]
   12ab8:	ldr	r1, [r1, #8]
   12abc:	str	r0, [sp, #12]
   12ac0:	mov	r0, r1
   12ac4:	str	r2, [sp, #8]
   12ac8:	bl	12a08 <error@@Base+0x1648>
   12acc:	mov	r1, r0
   12ad0:	ldr	r2, [sp, #12]
   12ad4:	add	r0, r2, r0, lsl #4
   12ad8:	ldr	lr, [fp, #-8]
   12adc:	str	r1, [sp, #4]
   12ae0:	mov	r1, lr
   12ae4:	ldr	lr, [sp, #8]
   12ae8:	blx	lr
   12aec:	ldr	r0, [fp, #-4]
   12af0:	bl	12b1c <error@@Base+0x175c>
   12af4:	ldr	r0, [fp, #-4]
   12af8:	movw	r1, #8052	; 0x1f74
   12afc:	add	r2, r0, r1
   12b00:	ldr	r2, [r2]
   12b04:	add	r2, r2, #1
   12b08:	add	r0, r0, r1
   12b0c:	str	r2, [r0]
   12b10:	mov	sp, fp
   12b14:	pop	{fp, pc}
   12b18:			; <UNDEFINED> instruction: 0x000115bc
   12b1c:	push	{fp, lr}
   12b20:	mov	fp, sp
   12b24:	sub	sp, sp, #8
   12b28:	str	r0, [sp, #4]
   12b2c:	ldr	r0, [sp, #4]
   12b30:	movw	r1, #8048	; 0x1f70
   12b34:	add	r0, r0, r1
   12b38:	ldr	r0, [r0]
   12b3c:	movw	r1, #0
   12b40:	cmp	r0, r1
   12b44:	beq	12b70 <error@@Base+0x17b0>
   12b48:	ldr	r0, [sp, #4]
   12b4c:	movw	r1, #8048	; 0x1f70
   12b50:	add	r0, r0, r1
   12b54:	ldr	r0, [r0]
   12b58:	bl	107e0 <free@plt>
   12b5c:	ldr	r0, [sp, #4]
   12b60:	movw	r1, #8048	; 0x1f70
   12b64:	add	r0, r0, r1
   12b68:	movw	r1, #0
   12b6c:	str	r1, [r0]
   12b70:	mov	sp, fp
   12b74:	pop	{fp, pc}
   12b78:	push	{fp, lr}
   12b7c:	mov	fp, sp
   12b80:	sub	sp, sp, #24
   12b84:	ldr	r2, [pc, #116]	; 12c00 <error@@Base+0x1840>
   12b88:	ldr	r2, [pc, r2]
   12b8c:	str	r0, [fp, #-4]
   12b90:	str	r1, [fp, #-8]
   12b94:	ldr	r0, [fp, #-4]
   12b98:	ldr	r1, [fp, #-8]
   12b9c:	ldr	r1, [r1, #8]
   12ba0:	str	r0, [sp, #12]
   12ba4:	mov	r0, r1
   12ba8:	str	r2, [sp, #8]
   12bac:	bl	12a08 <error@@Base+0x1648>
   12bb0:	mov	r1, r0
   12bb4:	ldr	r2, [sp, #12]
   12bb8:	add	r0, r2, r0, lsl #4
   12bbc:	ldr	lr, [fp, #-8]
   12bc0:	str	r1, [sp, #4]
   12bc4:	mov	r1, lr
   12bc8:	ldr	lr, [sp, #8]
   12bcc:	blx	lr
   12bd0:	ldr	r0, [fp, #-4]
   12bd4:	bl	12b1c <error@@Base+0x175c>
   12bd8:	ldr	r0, [fp, #-4]
   12bdc:	movw	r1, #8052	; 0x1f74
   12be0:	add	r2, r0, r1
   12be4:	ldr	r2, [r2]
   12be8:	mvn	lr, #0
   12bec:	add	r2, r2, lr
   12bf0:	add	r0, r0, r1
   12bf4:	str	r2, [r0]
   12bf8:	mov	sp, fp
   12bfc:	pop	{fp, pc}
   12c00:	andeq	r1, r1, r8, asr #10
   12c04:	push	{fp, lr}
   12c08:	mov	fp, sp
   12c0c:	sub	sp, sp, #24
   12c10:	str	r0, [fp, #-4]
   12c14:	movw	r0, #0
   12c18:	str	r0, [sp, #8]
   12c1c:	ldr	r1, [fp, #-4]
   12c20:	movw	r2, #8048	; 0x1f70
   12c24:	add	r1, r1, r2
   12c28:	ldr	r1, [r1]
   12c2c:	cmp	r1, r0
   12c30:	bne	12c4c <error@@Base+0x188c>
   12c34:	ldr	r0, [fp, #-4]
   12c38:	movw	r1, #8052	; 0x1f74
   12c3c:	add	r0, r0, r1
   12c40:	ldr	r0, [r0]
   12c44:	cmp	r0, #0
   12c48:	bne	12c50 <error@@Base+0x1890>
   12c4c:	b	12d10 <error@@Base+0x1950>
   12c50:	ldr	r0, [pc, #192]	; 12d18 <error@@Base+0x1958>
   12c54:	ldr	r0, [pc, r0]
   12c58:	ldr	r1, [fp, #-4]
   12c5c:	movw	r2, #8052	; 0x1f74
   12c60:	add	r1, r1, r2
   12c64:	ldr	r1, [r1]
   12c68:	str	r0, [sp, #4]
   12c6c:	mov	r0, r1
   12c70:	movw	r1, #4
   12c74:	ldr	r2, [sp, #4]
   12c78:	blx	r2
   12c7c:	ldr	r1, [fp, #-4]
   12c80:	movw	r2, #8048	; 0x1f70
   12c84:	add	r1, r1, r2
   12c88:	str	r0, [r1]
   12c8c:	movw	r0, #0
   12c90:	str	r0, [sp, #12]
   12c94:	ldr	r0, [sp, #12]
   12c98:	movw	r1, #503	; 0x1f7
   12c9c:	cmp	r0, r1
   12ca0:	bge	12d10 <error@@Base+0x1950>
   12ca4:	ldr	r0, [fp, #-4]
   12ca8:	ldr	r1, [sp, #12]
   12cac:	add	r0, r0, r1, lsl #4
   12cb0:	ldr	r0, [r0]
   12cb4:	str	r0, [fp, #-8]
   12cb8:	ldr	r0, [fp, #-8]
   12cbc:	movw	r1, #0
   12cc0:	cmp	r0, r1
   12cc4:	beq	12cfc <error@@Base+0x193c>
   12cc8:	ldr	r0, [fp, #-8]
   12ccc:	ldr	r1, [fp, #-4]
   12cd0:	movw	r2, #8048	; 0x1f70
   12cd4:	ldr	r1, [r1, r2]
   12cd8:	ldr	r2, [sp, #8]
   12cdc:	add	r3, r2, #1
   12ce0:	str	r3, [sp, #8]
   12ce4:	add	r1, r1, r2, lsl #2
   12ce8:	str	r0, [r1]
   12cec:	ldr	r0, [fp, #-8]
   12cf0:	ldr	r0, [r0, #4]
   12cf4:	str	r0, [fp, #-8]
   12cf8:	b	12cb8 <error@@Base+0x18f8>
   12cfc:	b	12d00 <error@@Base+0x1940>
   12d00:	ldr	r0, [sp, #12]
   12d04:	add	r0, r0, #1
   12d08:	str	r0, [sp, #12]
   12d0c:	b	12c94 <error@@Base+0x18d4>
   12d10:	mov	sp, fp
   12d14:	pop	{fp, pc}
   12d18:	andeq	r1, r1, r0, ror r4
   12d1c:	push	{fp, lr}
   12d20:	mov	fp, sp
   12d24:	sub	sp, sp, #16
   12d28:	str	r0, [fp, #-4]
   12d2c:	str	r1, [sp, #8]
   12d30:	movw	r0, #0
   12d34:	strh	r0, [sp, #6]
   12d38:	ldrsh	r0, [sp, #6]
   12d3c:	movw	r1, #503	; 0x1f7
   12d40:	cmp	r0, r1
   12d44:	bge	12d88 <error@@Base+0x19c8>
   12d48:	ldr	r0, [pc, #92]	; 12dac <error@@Base+0x19ec>
   12d4c:	ldr	r0, [pc, r0]
   12d50:	ldr	r1, [fp, #-4]
   12d54:	ldrsh	r2, [sp, #6]
   12d58:	add	r1, r1, r2, lsl #4
   12d5c:	ldr	r2, [sp, #8]
   12d60:	str	r0, [sp]
   12d64:	mov	r0, r1
   12d68:	mov	r1, r2
   12d6c:	ldr	r2, [sp]
   12d70:	blx	r2
   12d74:	ldrh	r0, [sp, #6]
   12d78:	movw	r1, #1
   12d7c:	add	r0, r0, r1
   12d80:	strh	r0, [sp, #6]
   12d84:	b	12d38 <error@@Base+0x1978>
   12d88:	ldr	r0, [fp, #-4]
   12d8c:	bl	12b1c <error@@Base+0x175c>
   12d90:	ldr	r0, [fp, #-4]
   12d94:	movw	lr, #8052	; 0x1f74
   12d98:	add	r0, r0, lr
   12d9c:	movw	lr, #0
   12da0:	str	lr, [r0]
   12da4:	mov	sp, fp
   12da8:	pop	{fp, pc}
   12dac:	andeq	r1, r1, r0, lsl #7
   12db0:	sub	sp, sp, #4
   12db4:	str	r0, [sp]
   12db8:	ldr	r0, [sp]
   12dbc:	movw	r1, #0
   12dc0:	str	r1, [r0, #4]
   12dc4:	ldr	r0, [sp]
   12dc8:	str	r1, [r0]
   12dcc:	ldr	r0, [sp]
   12dd0:	str	r1, [r0, #8]
   12dd4:	ldr	r0, [sp]
   12dd8:	str	r1, [r0, #12]
   12ddc:	add	sp, sp, #4
   12de0:	bx	lr
   12de4:	push	{fp, lr}
   12de8:	mov	fp, sp
   12dec:	sub	sp, sp, #8
   12df0:	str	r0, [sp, #4]
   12df4:	str	r1, [sp]
   12df8:	ldr	r0, [sp, #4]
   12dfc:	ldr	r2, [sp]
   12e00:	ldr	r1, [sp, #4]
   12e04:	ldr	r3, [r1]
   12e08:	movw	r1, #0
   12e0c:	bl	12e18 <error@@Base+0x1a58>
   12e10:	mov	sp, fp
   12e14:	pop	{fp, pc}
   12e18:	push	{fp, lr}
   12e1c:	mov	fp, sp
   12e20:	sub	sp, sp, #16
   12e24:	str	r0, [fp, #-4]
   12e28:	str	r1, [sp, #8]
   12e2c:	str	r2, [sp, #4]
   12e30:	str	r3, [sp]
   12e34:	ldr	r0, [sp, #8]
   12e38:	ldr	r1, [sp, #4]
   12e3c:	str	r0, [r1]
   12e40:	ldr	r0, [sp]
   12e44:	ldr	r1, [sp, #4]
   12e48:	str	r0, [r1, #4]
   12e4c:	ldr	r0, [sp, #8]
   12e50:	movw	r1, #0
   12e54:	cmp	r0, r1
   12e58:	beq	12e6c <error@@Base+0x1aac>
   12e5c:	ldr	r0, [sp, #4]
   12e60:	ldr	r1, [sp, #8]
   12e64:	str	r0, [r1, #4]
   12e68:	b	12e78 <error@@Base+0x1ab8>
   12e6c:	ldr	r0, [sp, #4]
   12e70:	ldr	r1, [fp, #-4]
   12e74:	str	r0, [r1]
   12e78:	ldr	r0, [sp]
   12e7c:	movw	r1, #0
   12e80:	cmp	r0, r1
   12e84:	beq	12e98 <error@@Base+0x1ad8>
   12e88:	ldr	r0, [sp, #4]
   12e8c:	ldr	r1, [sp]
   12e90:	str	r0, [r1]
   12e94:	b	12ea4 <error@@Base+0x1ae4>
   12e98:	ldr	r0, [sp, #4]
   12e9c:	ldr	r1, [fp, #-4]
   12ea0:	str	r0, [r1, #4]
   12ea4:	ldr	r0, [fp, #-4]
   12ea8:	bl	1302c <error@@Base+0x1c6c>
   12eac:	ldr	r0, [fp, #-4]
   12eb0:	ldr	lr, [r0, #12]
   12eb4:	add	lr, lr, #1
   12eb8:	str	lr, [r0, #12]
   12ebc:	mov	sp, fp
   12ec0:	pop	{fp, pc}
   12ec4:	push	{fp, lr}
   12ec8:	mov	fp, sp
   12ecc:	sub	sp, sp, #8
   12ed0:	str	r0, [sp, #4]
   12ed4:	str	r1, [sp]
   12ed8:	ldr	r0, [sp, #4]
   12edc:	ldr	r1, [sp, #4]
   12ee0:	ldr	r1, [r1, #4]
   12ee4:	ldr	r2, [sp]
   12ee8:	movw	r3, #0
   12eec:	bl	12e18 <error@@Base+0x1a58>
   12ef0:	mov	sp, fp
   12ef4:	pop	{fp, pc}
   12ef8:	push	{fp, lr}
   12efc:	mov	fp, sp
   12f00:	sub	sp, sp, #16
   12f04:	str	r0, [fp, #-4]
   12f08:	str	r1, [sp, #8]
   12f0c:	str	r2, [sp, #4]
   12f10:	ldr	r0, [fp, #-4]
   12f14:	ldr	r1, [sp, #4]
   12f18:	ldr	r1, [r1]
   12f1c:	ldr	r2, [sp, #8]
   12f20:	ldr	r3, [sp, #4]
   12f24:	bl	12e18 <error@@Base+0x1a58>
   12f28:	mov	sp, fp
   12f2c:	pop	{fp, pc}
   12f30:	push	{fp, lr}
   12f34:	mov	fp, sp
   12f38:	sub	sp, sp, #16
   12f3c:	str	r0, [fp, #-4]
   12f40:	str	r1, [sp, #8]
   12f44:	str	r2, [sp, #4]
   12f48:	ldr	r0, [fp, #-4]
   12f4c:	ldr	r1, [sp, #8]
   12f50:	ldr	r2, [sp, #4]
   12f54:	ldr	r3, [sp, #8]
   12f58:	ldr	r3, [r3, #4]
   12f5c:	bl	12e18 <error@@Base+0x1a58>
   12f60:	mov	sp, fp
   12f64:	pop	{fp, pc}
   12f68:	push	{fp, lr}
   12f6c:	mov	fp, sp
   12f70:	sub	sp, sp, #8
   12f74:	str	r0, [sp, #4]
   12f78:	str	r1, [sp]
   12f7c:	ldr	r0, [sp]
   12f80:	ldr	r0, [r0]
   12f84:	movw	r1, #0
   12f88:	cmp	r0, r1
   12f8c:	beq	12fa8 <error@@Base+0x1be8>
   12f90:	ldr	r0, [sp]
   12f94:	ldr	r0, [r0, #4]
   12f98:	ldr	r1, [sp]
   12f9c:	ldr	r1, [r1]
   12fa0:	str	r0, [r1, #4]
   12fa4:	b	12fb8 <error@@Base+0x1bf8>
   12fa8:	ldr	r0, [sp]
   12fac:	ldr	r0, [r0, #4]
   12fb0:	ldr	r1, [sp, #4]
   12fb4:	str	r0, [r1]
   12fb8:	ldr	r0, [sp]
   12fbc:	ldr	r0, [r0, #4]
   12fc0:	movw	r1, #0
   12fc4:	cmp	r0, r1
   12fc8:	beq	12fe4 <error@@Base+0x1c24>
   12fcc:	ldr	r0, [sp]
   12fd0:	ldr	r0, [r0]
   12fd4:	ldr	r1, [sp]
   12fd8:	ldr	r1, [r1, #4]
   12fdc:	str	r0, [r1]
   12fe0:	b	12ff4 <error@@Base+0x1c34>
   12fe4:	ldr	r0, [sp]
   12fe8:	ldr	r0, [r0]
   12fec:	ldr	r1, [sp, #4]
   12ff0:	str	r0, [r1, #4]
   12ff4:	ldr	r0, [sp]
   12ff8:	movw	r1, #0
   12ffc:	str	r1, [r0, #4]
   13000:	ldr	r0, [sp]
   13004:	str	r1, [r0]
   13008:	ldr	r0, [sp, #4]
   1300c:	bl	1302c <error@@Base+0x1c6c>
   13010:	ldr	r0, [sp, #4]
   13014:	ldr	r1, [r0, #12]
   13018:	mvn	lr, #0
   1301c:	add	r1, r1, lr
   13020:	str	r1, [r0, #12]
   13024:	mov	sp, fp
   13028:	pop	{fp, pc}
   1302c:	push	{fp, lr}
   13030:	mov	fp, sp
   13034:	sub	sp, sp, #8
   13038:	str	r0, [sp, #4]
   1303c:	ldr	r0, [sp, #4]
   13040:	ldr	r0, [r0, #8]
   13044:	movw	r1, #0
   13048:	cmp	r0, r1
   1304c:	beq	13068 <error@@Base+0x1ca8>
   13050:	ldr	r0, [sp, #4]
   13054:	ldr	r0, [r0, #8]
   13058:	bl	107e0 <free@plt>
   1305c:	ldr	r0, [sp, #4]
   13060:	movw	lr, #0
   13064:	str	lr, [r0, #8]
   13068:	mov	sp, fp
   1306c:	pop	{fp, pc}
   13070:	push	{fp, lr}
   13074:	mov	fp, sp
   13078:	sub	sp, sp, #16
   1307c:	str	r0, [fp, #-4]
   13080:	movw	r0, #0
   13084:	str	r0, [sp, #4]
   13088:	ldr	r1, [fp, #-4]
   1308c:	ldr	r1, [r1, #8]
   13090:	cmp	r1, r0
   13094:	bne	130a8 <error@@Base+0x1ce8>
   13098:	ldr	r0, [fp, #-4]
   1309c:	ldr	r0, [r0, #12]
   130a0:	cmp	r0, #0
   130a4:	bne	130ac <error@@Base+0x1cec>
   130a8:	b	13124 <error@@Base+0x1d64>
   130ac:	ldr	r0, [pc, #120]	; 1312c <error@@Base+0x1d6c>
   130b0:	ldr	r0, [pc, r0]
   130b4:	ldr	r1, [fp, #-4]
   130b8:	ldr	r1, [r1, #12]
   130bc:	str	r0, [sp]
   130c0:	mov	r0, r1
   130c4:	movw	r1, #4
   130c8:	ldr	r2, [sp]
   130cc:	blx	r2
   130d0:	ldr	r1, [fp, #-4]
   130d4:	str	r0, [r1, #8]
   130d8:	ldr	r0, [fp, #-4]
   130dc:	ldr	r0, [r0]
   130e0:	str	r0, [sp, #8]
   130e4:	ldr	r0, [sp, #8]
   130e8:	movw	r1, #0
   130ec:	cmp	r0, r1
   130f0:	beq	13124 <error@@Base+0x1d64>
   130f4:	ldr	r0, [sp, #8]
   130f8:	ldr	r1, [fp, #-4]
   130fc:	ldr	r1, [r1, #8]
   13100:	ldr	r2, [sp, #4]
   13104:	add	r3, r2, #1
   13108:	str	r3, [sp, #4]
   1310c:	add	r1, r1, r2, lsl #2
   13110:	str	r0, [r1]
   13114:	ldr	r0, [sp, #8]
   13118:	ldr	r0, [r0, #4]
   1311c:	str	r0, [sp, #8]
   13120:	b	130e4 <error@@Base+0x1d24>
   13124:	mov	sp, fp
   13128:	pop	{fp, pc}
   1312c:	andeq	r1, r1, r4, lsl r0
   13130:	push	{fp, lr}
   13134:	mov	fp, sp
   13138:	sub	sp, sp, #16
   1313c:	str	r0, [fp, #-4]
   13140:	str	r1, [sp, #8]
   13144:	ldr	r0, [fp, #-4]
   13148:	ldr	r0, [r0]
   1314c:	movw	r1, #0
   13150:	cmp	r0, r1
   13154:	beq	1318c <error@@Base+0x1dcc>
   13158:	ldr	r0, [fp, #-4]
   1315c:	ldr	r0, [r0]
   13160:	str	r0, [sp, #4]
   13164:	ldr	r0, [fp, #-4]
   13168:	ldr	r1, [sp, #4]
   1316c:	bl	12f68 <error@@Base+0x1ba8>
   13170:	ldr	r0, [sp, #8]
   13174:	ldr	r1, [sp, #4]
   13178:	str	r0, [sp]
   1317c:	mov	r0, r1
   13180:	ldr	r1, [sp]
   13184:	blx	r1
   13188:	b	13144 <error@@Base+0x1d84>
   1318c:	mov	sp, fp
   13190:	pop	{fp, pc}
   13194:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13198:	mov	r7, r0
   1319c:	ldr	r6, [pc, #72]	; 131ec <error@@Base+0x1e2c>
   131a0:	ldr	r5, [pc, #72]	; 131f0 <error@@Base+0x1e30>
   131a4:	add	r6, pc, r6
   131a8:	add	r5, pc, r5
   131ac:	sub	r6, r6, r5
   131b0:	mov	r8, r1
   131b4:	mov	r9, r2
   131b8:	bl	1079c <calloc@plt-0x20>
   131bc:	asrs	r6, r6, #2
   131c0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   131c4:	mov	r4, #0
   131c8:	add	r4, r4, #1
   131cc:	ldr	r3, [r5], #4
   131d0:	mov	r2, r9
   131d4:	mov	r1, r8
   131d8:	mov	r0, r7
   131dc:	blx	r3
   131e0:	cmp	r6, r4
   131e4:	bne	131c8 <error@@Base+0x1e08>
   131e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   131ec:	andeq	r0, r1, r0, asr sp
   131f0:	andeq	r0, r1, r8, asr #26
   131f4:	bx	lr
   131f8:	mov	r2, r1
   131fc:	mov	r1, r0
   13200:	mov	r0, #3
   13204:	b	10804 <__xstat@plt>

Disassembly of section .fini:

00013208 <.fini>:
   13208:	push	{r3, lr}
   1320c:	pop	{r3, pc}
