
../repos/coreutils/src/wc:     file format elf32-littlearm


Disassembly of section .init:

00011298 <.init>:
   11298:	push	{r3, lr}
   1129c:	bl	11624 <__assert_fail@plt+0x48>
   112a0:	pop	{r3, pc}

Disassembly of section .plt:

000112a4 <calloc@plt-0x14>:
   112a4:	push	{lr}		; (str lr, [sp, #-4]!)
   112a8:	ldr	lr, [pc, #4]	; 112b4 <calloc@plt-0x4>
   112ac:	add	lr, pc, lr
   112b0:	ldr	pc, [lr, #8]!
   112b4:	andeq	lr, r1, ip, asr #26

000112b8 <calloc@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #122880	; 0x1e000
   112c0:	ldr	pc, [ip, #3404]!	; 0xd4c

000112c4 <fputs_unlocked@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #122880	; 0x1e000
   112cc:	ldr	pc, [ip, #3396]!	; 0xd44

000112d0 <raise@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #122880	; 0x1e000
   112d8:	ldr	pc, [ip, #3388]!	; 0xd3c

000112dc <strcmp@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #122880	; 0x1e000
   112e4:	ldr	pc, [ip, #3380]!	; 0xd34

000112e8 <posix_fadvise64@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #122880	; 0x1e000
   112f0:	ldr	pc, [ip, #3372]!	; 0xd2c

000112f4 <printf@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #122880	; 0x1e000
   112fc:	ldr	pc, [ip, #3364]!	; 0xd24

00011300 <read@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #122880	; 0x1e000
   11308:	ldr	pc, [ip, #3356]!	; 0xd1c

0001130c <fflush@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #122880	; 0x1e000
   11314:	ldr	pc, [ip, #3348]!	; 0xd14

00011318 <wcwidth@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #122880	; 0x1e000
   11320:	ldr	pc, [ip, #3340]!	; 0xd0c

00011324 <memmove@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #122880	; 0x1e000
   1132c:	ldr	pc, [ip, #3332]!	; 0xd04

00011330 <free@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #122880	; 0x1e000
   11338:	ldr	pc, [ip, #3324]!	; 0xcfc

0001133c <ferror@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #122880	; 0x1e000
   11344:	ldr	pc, [ip, #3316]!	; 0xcf4

00011348 <_exit@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #122880	; 0x1e000
   11350:	ldr	pc, [ip, #3308]!	; 0xcec

00011354 <memcpy@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #122880	; 0x1e000
   1135c:	ldr	pc, [ip, #3300]!	; 0xce4

00011360 <mbsinit@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #122880	; 0x1e000
   11368:	ldr	pc, [ip, #3292]!	; 0xcdc

0001136c <memcmp@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #122880	; 0x1e000
   11374:	ldr	pc, [ip, #3284]!	; 0xcd4

00011378 <sysconf@plt>:
   11378:	add	ip, pc, #0, 12
   1137c:	add	ip, ip, #122880	; 0x1e000
   11380:	ldr	pc, [ip, #3276]!	; 0xccc

00011384 <realloc@plt>:
   11384:	add	ip, pc, #0, 12
   11388:	add	ip, ip, #122880	; 0x1e000
   1138c:	ldr	pc, [ip, #3268]!	; 0xcc4

00011390 <textdomain@plt>:
   11390:	add	ip, pc, #0, 12
   11394:	add	ip, ip, #122880	; 0x1e000
   11398:	ldr	pc, [ip, #3260]!	; 0xcbc

0001139c <iswcntrl@plt>:
   1139c:	add	ip, pc, #0, 12
   113a0:	add	ip, ip, #122880	; 0x1e000
   113a4:	ldr	pc, [ip, #3252]!	; 0xcb4

000113a8 <rawmemchr@plt>:
   113a8:	add	ip, pc, #0, 12
   113ac:	add	ip, ip, #122880	; 0x1e000
   113b0:	ldr	pc, [ip, #3244]!	; 0xcac

000113b4 <iswprint@plt>:
   113b4:	add	ip, pc, #0, 12
   113b8:	add	ip, ip, #122880	; 0x1e000
   113bc:	ldr	pc, [ip, #3236]!	; 0xca4

000113c0 <__fxstat64@plt>:
   113c0:	add	ip, pc, #0, 12
   113c4:	add	ip, ip, #122880	; 0x1e000
   113c8:	ldr	pc, [ip, #3228]!	; 0xc9c

000113cc <lseek64@plt>:
   113cc:	add	ip, pc, #0, 12
   113d0:	add	ip, ip, #122880	; 0x1e000
   113d4:	ldr	pc, [ip, #3220]!	; 0xc94

000113d8 <__ctype_get_mb_cur_max@plt>:
   113d8:	add	ip, pc, #0, 12
   113dc:	add	ip, ip, #122880	; 0x1e000
   113e0:	ldr	pc, [ip, #3212]!	; 0xc8c

000113e4 <__fpending@plt>:
   113e4:	add	ip, pc, #0, 12
   113e8:	add	ip, ip, #122880	; 0x1e000
   113ec:	ldr	pc, [ip, #3204]!	; 0xc84

000113f0 <ferror_unlocked@plt>:
   113f0:	add	ip, pc, #0, 12
   113f4:	add	ip, ip, #122880	; 0x1e000
   113f8:	ldr	pc, [ip, #3196]!	; 0xc7c

000113fc <mbrtowc@plt>:
   113fc:	add	ip, pc, #0, 12
   11400:	add	ip, ip, #122880	; 0x1e000
   11404:	ldr	pc, [ip, #3188]!	; 0xc74

00011408 <error@plt>:
   11408:	add	ip, pc, #0, 12
   1140c:	add	ip, ip, #122880	; 0x1e000
   11410:	ldr	pc, [ip, #3180]!	; 0xc6c

00011414 <open64@plt>:
   11414:	add	ip, pc, #0, 12
   11418:	add	ip, ip, #122880	; 0x1e000
   1141c:	ldr	pc, [ip, #3172]!	; 0xc64

00011420 <getenv@plt>:
   11420:	add	ip, pc, #0, 12
   11424:	add	ip, ip, #122880	; 0x1e000
   11428:	ldr	pc, [ip, #3164]!	; 0xc5c

0001142c <sysinfo@plt>:
   1142c:	add	ip, pc, #0, 12
   11430:	add	ip, ip, #122880	; 0x1e000
   11434:	ldr	pc, [ip, #3156]!	; 0xc54

00011438 <malloc@plt>:
   11438:	add	ip, pc, #0, 12
   1143c:	add	ip, ip, #122880	; 0x1e000
   11440:	ldr	pc, [ip, #3148]!	; 0xc4c

00011444 <__libc_start_main@plt>:
   11444:	add	ip, pc, #0, 12
   11448:	add	ip, ip, #122880	; 0x1e000
   1144c:	ldr	pc, [ip, #3140]!	; 0xc44

00011450 <__freading@plt>:
   11450:	add	ip, pc, #0, 12
   11454:	add	ip, ip, #122880	; 0x1e000
   11458:	ldr	pc, [ip, #3132]!	; 0xc3c

0001145c <__gmon_start__@plt>:
   1145c:	add	ip, pc, #0, 12
   11460:	add	ip, ip, #122880	; 0x1e000
   11464:	ldr	pc, [ip, #3124]!	; 0xc34

00011468 <getopt_long@plt>:
   11468:	add	ip, pc, #0, 12
   1146c:	add	ip, ip, #122880	; 0x1e000
   11470:	ldr	pc, [ip, #3116]!	; 0xc2c

00011474 <__ctype_b_loc@plt>:
   11474:	add	ip, pc, #0, 12
   11478:	add	ip, ip, #122880	; 0x1e000
   1147c:	ldr	pc, [ip, #3108]!	; 0xc24

00011480 <exit@plt>:
   11480:	add	ip, pc, #0, 12
   11484:	add	ip, ip, #122880	; 0x1e000
   11488:	ldr	pc, [ip, #3100]!	; 0xc1c

0001148c <feof@plt>:
   1148c:	add	ip, pc, #0, 12
   11490:	add	ip, ip, #122880	; 0x1e000
   11494:	ldr	pc, [ip, #3092]!	; 0xc14

00011498 <iswspace@plt>:
   11498:	add	ip, pc, #0, 12
   1149c:	add	ip, ip, #122880	; 0x1e000
   114a0:	ldr	pc, [ip, #3084]!	; 0xc0c

000114a4 <gettext@plt>:
   114a4:	add	ip, pc, #0, 12
   114a8:	add	ip, ip, #122880	; 0x1e000
   114ac:	ldr	pc, [ip, #3076]!	; 0xc04

000114b0 <strlen@plt>:
   114b0:	add	ip, pc, #0, 12
   114b4:	add	ip, ip, #122880	; 0x1e000
   114b8:	ldr	pc, [ip, #3068]!	; 0xbfc

000114bc <strchr@plt>:
   114bc:	add	ip, pc, #0, 12
   114c0:	add	ip, ip, #122880	; 0x1e000
   114c4:	ldr	pc, [ip, #3060]!	; 0xbf4

000114c8 <fprintf@plt>:
   114c8:	add	ip, pc, #0, 12
   114cc:	add	ip, ip, #122880	; 0x1e000
   114d0:	ldr	pc, [ip, #3052]!	; 0xbec

000114d4 <getpagesize@plt>:
   114d4:	add	ip, pc, #0, 12
   114d8:	add	ip, ip, #122880	; 0x1e000
   114dc:	ldr	pc, [ip, #3044]!	; 0xbe4

000114e0 <__errno_location@plt>:
   114e0:	add	ip, pc, #0, 12
   114e4:	add	ip, ip, #122880	; 0x1e000
   114e8:	ldr	pc, [ip, #3036]!	; 0xbdc

000114ec <__cxa_atexit@plt>:
   114ec:	add	ip, pc, #0, 12
   114f0:	add	ip, ip, #122880	; 0x1e000
   114f4:	ldr	pc, [ip, #3028]!	; 0xbd4

000114f8 <setvbuf@plt>:
   114f8:	add	ip, pc, #0, 12
   114fc:	add	ip, ip, #122880	; 0x1e000
   11500:	ldr	pc, [ip, #3020]!	; 0xbcc

00011504 <memset@plt>:
   11504:	add	ip, pc, #0, 12
   11508:	add	ip, ip, #122880	; 0x1e000
   1150c:	ldr	pc, [ip, #3012]!	; 0xbc4

00011510 <btowc@plt>:
   11510:	add	ip, pc, #0, 12
   11514:	add	ip, ip, #122880	; 0x1e000
   11518:	ldr	pc, [ip, #3004]!	; 0xbbc

0001151c <fgetc@plt>:
   1151c:	add	ip, pc, #0, 12
   11520:	add	ip, ip, #122880	; 0x1e000
   11524:	ldr	pc, [ip, #2996]!	; 0xbb4

00011528 <fileno@plt>:
   11528:	add	ip, pc, #0, 12
   1152c:	add	ip, ip, #122880	; 0x1e000
   11530:	ldr	pc, [ip, #2988]!	; 0xbac

00011534 <fclose@plt>:
   11534:	add	ip, pc, #0, 12
   11538:	add	ip, ip, #122880	; 0x1e000
   1153c:	ldr	pc, [ip, #2980]!	; 0xba4

00011540 <fseeko64@plt>:
   11540:	add	ip, pc, #0, 12
   11544:	add	ip, ip, #122880	; 0x1e000
   11548:	ldr	pc, [ip, #2972]!	; 0xb9c

0001154c <setlocale@plt>:
   1154c:	add	ip, pc, #0, 12
   11550:	add	ip, ip, #122880	; 0x1e000
   11554:	ldr	pc, [ip, #2964]!	; 0xb94

00011558 <strrchr@plt>:
   11558:	add	ip, pc, #0, 12
   1155c:	add	ip, ip, #122880	; 0x1e000
   11560:	ldr	pc, [ip, #2956]!	; 0xb8c

00011564 <nl_langinfo@plt>:
   11564:	add	ip, pc, #0, 12
   11568:	add	ip, ip, #122880	; 0x1e000
   1156c:	ldr	pc, [ip, #2948]!	; 0xb84

00011570 <fopen64@plt>:
   11570:	add	ip, pc, #0, 12
   11574:	add	ip, ip, #122880	; 0x1e000
   11578:	ldr	pc, [ip, #2940]!	; 0xb7c

0001157c <bindtextdomain@plt>:
   1157c:	add	ip, pc, #0, 12
   11580:	add	ip, ip, #122880	; 0x1e000
   11584:	ldr	pc, [ip, #2932]!	; 0xb74

00011588 <getdelim@plt>:
   11588:	add	ip, pc, #0, 12
   1158c:	add	ip, ip, #122880	; 0x1e000
   11590:	ldr	pc, [ip, #2924]!	; 0xb6c

00011594 <__xstat64@plt>:
   11594:	add	ip, pc, #0, 12
   11598:	add	ip, ip, #122880	; 0x1e000
   1159c:	ldr	pc, [ip, #2916]!	; 0xb64

000115a0 <fputs@plt>:
   115a0:	add	ip, pc, #0, 12
   115a4:	add	ip, ip, #122880	; 0x1e000
   115a8:	ldr	pc, [ip, #2908]!	; 0xb5c

000115ac <strncmp@plt>:
   115ac:	add	ip, pc, #0, 12
   115b0:	add	ip, ip, #122880	; 0x1e000
   115b4:	ldr	pc, [ip, #2900]!	; 0xb54

000115b8 <abort@plt>:
   115b8:	add	ip, pc, #0, 12
   115bc:	add	ip, ip, #122880	; 0x1e000
   115c0:	ldr	pc, [ip, #2892]!	; 0xb4c

000115c4 <close@plt>:
   115c4:	add	ip, pc, #0, 12
   115c8:	add	ip, ip, #122880	; 0x1e000
   115cc:	ldr	pc, [ip, #2884]!	; 0xb44

000115d0 <putchar_unlocked@plt>:
   115d0:	add	ip, pc, #0, 12
   115d4:	add	ip, ip, #122880	; 0x1e000
   115d8:	ldr	pc, [ip, #2876]!	; 0xb3c

000115dc <__assert_fail@plt>:
   115dc:	add	ip, pc, #0, 12
   115e0:	add	ip, ip, #122880	; 0x1e000
   115e4:	ldr	pc, [ip, #2868]!	; 0xb34

Disassembly of section .text:

000115e8 <_obstack_begin@@Base-0xa418>:
   115e8:	mov	fp, #0
   115ec:	mov	lr, #0
   115f0:	pop	{r1}		; (ldr r1, [sp], #4)
   115f4:	mov	r2, sp
   115f8:	push	{r2}		; (str r2, [sp, #-4]!)
   115fc:	push	{r0}		; (str r0, [sp, #-4]!)
   11600:	ldr	ip, [pc, #16]	; 11618 <__assert_fail@plt+0x3c>
   11604:	push	{ip}		; (str ip, [sp, #-4]!)
   11608:	ldr	r0, [pc, #12]	; 1161c <__assert_fail@plt+0x40>
   1160c:	ldr	r3, [pc, #12]	; 11620 <__assert_fail@plt+0x44>
   11610:	bl	11444 <__libc_start_main@plt>
   11614:	bl	115b8 <abort@plt>
   11618:	strdeq	lr, [r1], -ip
   1161c:	andeq	r1, r1, r0, lsl sl
   11620:	muleq	r1, ip, r2
   11624:	ldr	r3, [pc, #20]	; 11640 <__assert_fail@plt+0x64>
   11628:	ldr	r2, [pc, #20]	; 11644 <__assert_fail@plt+0x68>
   1162c:	add	r3, pc, r3
   11630:	ldr	r2, [r3, r2]
   11634:	cmp	r2, #0
   11638:	bxeq	lr
   1163c:	b	1145c <__gmon_start__@plt>
   11640:	andeq	lr, r1, ip, asr #19
   11644:	andeq	r0, r0, ip, lsl r1
   11648:	ldr	r0, [pc, #24]	; 11668 <__assert_fail@plt+0x8c>
   1164c:	ldr	r3, [pc, #24]	; 1166c <__assert_fail@plt+0x90>
   11650:	cmp	r3, r0
   11654:	bxeq	lr
   11658:	ldr	r3, [pc, #16]	; 11670 <__assert_fail@plt+0x94>
   1165c:	cmp	r3, #0
   11660:	bxeq	lr
   11664:	bx	r3
   11668:	andeq	r0, r3, r8, ror r1
   1166c:	andeq	r0, r3, r8, ror r1
   11670:	andeq	r0, r0, r0
   11674:	ldr	r0, [pc, #36]	; 116a0 <__assert_fail@plt+0xc4>
   11678:	ldr	r1, [pc, #36]	; 116a4 <__assert_fail@plt+0xc8>
   1167c:	sub	r1, r1, r0
   11680:	asr	r1, r1, #2
   11684:	add	r1, r1, r1, lsr #31
   11688:	asrs	r1, r1, #1
   1168c:	bxeq	lr
   11690:	ldr	r3, [pc, #16]	; 116a8 <__assert_fail@plt+0xcc>
   11694:	cmp	r3, #0
   11698:	bxeq	lr
   1169c:	bx	r3
   116a0:	andeq	r0, r3, r8, ror r1
   116a4:	andeq	r0, r3, r8, ror r1
   116a8:	andeq	r0, r0, r0
   116ac:	push	{r4, lr}
   116b0:	ldr	r4, [pc, #24]	; 116d0 <__assert_fail@plt+0xf4>
   116b4:	ldrb	r3, [r4]
   116b8:	cmp	r3, #0
   116bc:	popne	{r4, pc}
   116c0:	bl	11648 <__assert_fail@plt+0x6c>
   116c4:	mov	r3, #1
   116c8:	strb	r3, [r4]
   116cc:	pop	{r4, pc}
   116d0:	muleq	r3, ip, r1
   116d4:	b	11674 <__assert_fail@plt+0x98>
   116d8:	push	{fp, lr}
   116dc:	mov	fp, sp
   116e0:	sub	sp, sp, #40	; 0x28
   116e4:	str	r0, [fp, #-4]
   116e8:	ldr	r0, [fp, #-4]
   116ec:	cmp	r0, #0
   116f0:	beq	1173c <__assert_fail@plt+0x160>
   116f4:	b	116f8 <__assert_fail@plt+0x11c>
   116f8:	movw	r0, #392	; 0x188
   116fc:	movt	r0, #3
   11700:	ldr	r0, [r0]
   11704:	movw	r1, #58180	; 0xe344
   11708:	movt	r1, #1
   1170c:	str	r0, [fp, #-8]
   11710:	mov	r0, r1
   11714:	bl	114a4 <gettext@plt>
   11718:	movw	r1, #496	; 0x1f0
   1171c:	movt	r1, #3
   11720:	ldr	r2, [r1]
   11724:	ldr	r1, [fp, #-8]
   11728:	str	r0, [fp, #-12]
   1172c:	mov	r0, r1
   11730:	ldr	r1, [fp, #-12]
   11734:	bl	114c8 <fprintf@plt>
   11738:	b	11830 <__assert_fail@plt+0x254>
   1173c:	movw	r0, #58219	; 0xe36b
   11740:	movt	r0, #1
   11744:	bl	114a4 <gettext@plt>
   11748:	movw	r1, #496	; 0x1f0
   1174c:	movt	r1, #3
   11750:	ldr	r2, [r1]
   11754:	ldr	r1, [r1]
   11758:	str	r1, [fp, #-16]
   1175c:	mov	r1, r2
   11760:	ldr	r2, [fp, #-16]
   11764:	bl	112f4 <printf@plt>
   11768:	movw	r1, #58290	; 0xe3b2
   1176c:	movt	r1, #1
   11770:	str	r0, [sp, #20]
   11774:	mov	r0, r1
   11778:	bl	114a4 <gettext@plt>
   1177c:	movw	r1, #404	; 0x194
   11780:	movt	r1, #3
   11784:	ldr	r1, [r1]
   11788:	bl	112c4 <fputs_unlocked@plt>
   1178c:	str	r0, [sp, #16]
   11790:	bl	11838 <__assert_fail@plt+0x25c>
   11794:	movw	r0, #58484	; 0xe474
   11798:	movt	r0, #1
   1179c:	bl	114a4 <gettext@plt>
   117a0:	movw	r1, #404	; 0x194
   117a4:	movt	r1, #3
   117a8:	ldr	r1, [r1]
   117ac:	bl	112c4 <fputs_unlocked@plt>
   117b0:	movw	r1, #58785	; 0xe5a1
   117b4:	movt	r1, #1
   117b8:	str	r0, [sp, #12]
   117bc:	mov	r0, r1
   117c0:	bl	114a4 <gettext@plt>
   117c4:	movw	r1, #404	; 0x194
   117c8:	movt	r1, #3
   117cc:	ldr	r1, [r1]
   117d0:	bl	112c4 <fputs_unlocked@plt>
   117d4:	movw	r1, #59086	; 0xe6ce
   117d8:	movt	r1, #1
   117dc:	str	r0, [sp, #8]
   117e0:	mov	r0, r1
   117e4:	bl	114a4 <gettext@plt>
   117e8:	movw	r1, #404	; 0x194
   117ec:	movt	r1, #3
   117f0:	ldr	r1, [r1]
   117f4:	bl	112c4 <fputs_unlocked@plt>
   117f8:	movw	r1, #59131	; 0xe6fb
   117fc:	movt	r1, #1
   11800:	str	r0, [sp, #4]
   11804:	mov	r0, r1
   11808:	bl	114a4 <gettext@plt>
   1180c:	movw	r1, #404	; 0x194
   11810:	movt	r1, #3
   11814:	ldr	r1, [r1]
   11818:	bl	112c4 <fputs_unlocked@plt>
   1181c:	movw	r1, #59185	; 0xe731
   11820:	movt	r1, #1
   11824:	str	r0, [sp]
   11828:	mov	r0, r1
   1182c:	bl	11860 <__assert_fail@plt+0x284>
   11830:	ldr	r0, [fp, #-4]
   11834:	bl	11480 <exit@plt>
   11838:	push	{fp, lr}
   1183c:	mov	fp, sp
   11840:	movw	r0, #59599	; 0xe8cf
   11844:	movt	r0, #1
   11848:	bl	114a4 <gettext@plt>
   1184c:	movw	r1, #404	; 0x194
   11850:	movt	r1, #3
   11854:	ldr	r1, [r1]
   11858:	bl	112c4 <fputs_unlocked@plt>
   1185c:	pop	{fp, pc}
   11860:	push	{fp, lr}
   11864:	mov	fp, sp
   11868:	sub	sp, sp, #88	; 0x58
   1186c:	add	r1, sp, #28
   11870:	movw	r2, #60200	; 0xeb28
   11874:	movt	r2, #1
   11878:	str	r0, [fp, #-4]
   1187c:	mov	r0, r1
   11880:	str	r1, [sp, #12]
   11884:	mov	r1, r2
   11888:	movw	r2, #56	; 0x38
   1188c:	bl	11354 <memcpy@plt>
   11890:	ldr	r0, [fp, #-4]
   11894:	str	r0, [sp, #24]
   11898:	ldr	r0, [sp, #12]
   1189c:	str	r0, [sp, #20]
   118a0:	ldr	r0, [sp, #20]
   118a4:	ldr	r0, [r0]
   118a8:	movw	r1, #0
   118ac:	cmp	r0, r1
   118b0:	movw	r0, #0
   118b4:	str	r0, [sp, #8]
   118b8:	beq	118e4 <__assert_fail@plt+0x308>
   118bc:	ldr	r0, [fp, #-4]
   118c0:	ldr	r1, [sp, #20]
   118c4:	ldr	r1, [r1]
   118c8:	bl	112dc <strcmp@plt>
   118cc:	cmp	r0, #0
   118d0:	movw	r0, #0
   118d4:	moveq	r0, #1
   118d8:	mvn	r1, #0
   118dc:	eor	r0, r0, r1
   118e0:	str	r0, [sp, #8]
   118e4:	ldr	r0, [sp, #8]
   118e8:	tst	r0, #1
   118ec:	beq	11900 <__assert_fail@plt+0x324>
   118f0:	ldr	r0, [sp, #20]
   118f4:	add	r0, r0, #8
   118f8:	str	r0, [sp, #20]
   118fc:	b	118a0 <__assert_fail@plt+0x2c4>
   11900:	ldr	r0, [sp, #20]
   11904:	ldr	r0, [r0, #4]
   11908:	movw	r1, #0
   1190c:	cmp	r0, r1
   11910:	beq	11920 <__assert_fail@plt+0x344>
   11914:	ldr	r0, [sp, #20]
   11918:	ldr	r0, [r0, #4]
   1191c:	str	r0, [sp, #24]
   11920:	movw	r0, #59750	; 0xe966
   11924:	movt	r0, #1
   11928:	bl	114a4 <gettext@plt>
   1192c:	movw	r1, #59234	; 0xe762
   11930:	movt	r1, #1
   11934:	movw	r2, #59773	; 0xe97d
   11938:	movt	r2, #1
   1193c:	bl	112f4 <printf@plt>
   11940:	movw	r1, #5
   11944:	str	r0, [sp, #4]
   11948:	mov	r0, r1
   1194c:	movw	r1, #0
   11950:	bl	1154c <setlocale@plt>
   11954:	str	r0, [sp, #16]
   11958:	ldr	r0, [sp, #16]
   1195c:	movw	r1, #0
   11960:	cmp	r0, r1
   11964:	beq	119a0 <__assert_fail@plt+0x3c4>
   11968:	ldr	r0, [sp, #16]
   1196c:	movw	r1, #59813	; 0xe9a5
   11970:	movt	r1, #1
   11974:	movw	r2, #3
   11978:	bl	115ac <strncmp@plt>
   1197c:	cmp	r0, #0
   11980:	beq	119a0 <__assert_fail@plt+0x3c4>
   11984:	movw	r0, #59817	; 0xe9a9
   11988:	movt	r0, #1
   1198c:	bl	114a4 <gettext@plt>
   11990:	movw	r1, #404	; 0x194
   11994:	movt	r1, #3
   11998:	ldr	r1, [r1]
   1199c:	bl	112c4 <fputs_unlocked@plt>
   119a0:	movw	r0, #59888	; 0xe9f0
   119a4:	movt	r0, #1
   119a8:	bl	114a4 <gettext@plt>
   119ac:	ldr	r2, [fp, #-4]
   119b0:	movw	r1, #59773	; 0xe97d
   119b4:	movt	r1, #1
   119b8:	bl	112f4 <printf@plt>
   119bc:	movw	r1, #59915	; 0xea0b
   119c0:	movt	r1, #1
   119c4:	str	r0, [sp]
   119c8:	mov	r0, r1
   119cc:	bl	114a4 <gettext@plt>
   119d0:	ldr	r1, [sp, #24]
   119d4:	ldr	r2, [sp, #24]
   119d8:	ldr	r3, [fp, #-4]
   119dc:	cmp	r2, r3
   119e0:	movw	r2, #0
   119e4:	moveq	r2, #1
   119e8:	tst	r2, #1
   119ec:	movw	r2, #59965	; 0xea3d
   119f0:	movt	r2, #1
   119f4:	movw	r3, #59683	; 0xe923
   119f8:	movt	r3, #1
   119fc:	movne	r2, r3
   11a00:	bl	112f4 <printf@plt>
   11a04:	mov	sp, fp
   11a08:	pop	{fp, pc}
   11a0c:	nop	{0}
   11a10:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11a14:	add	fp, sp, #24
   11a18:	sub	sp, sp, #536	; 0x218
   11a1c:	mov	r2, #0
   11a20:	str	r2, [fp, #-28]	; 0xffffffe4
   11a24:	str	r0, [fp, #-32]	; 0xffffffe0
   11a28:	str	r1, [fp, #-36]	; 0xffffffdc
   11a2c:	str	r2, [fp, #-56]	; 0xffffffc8
   11a30:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11a34:	ldr	r0, [r0]
   11a38:	str	r2, [sp, #216]	; 0xd8
   11a3c:	bl	14d28 <__assert_fail@plt+0x374c>
   11a40:	movw	r1, #59965	; 0xea3d
   11a44:	movt	r1, #1
   11a48:	mov	r0, #6
   11a4c:	bl	1154c <setlocale@plt>
   11a50:	movw	r1, #59238	; 0xe766
   11a54:	movt	r1, #1
   11a58:	movw	r2, #59188	; 0xe734
   11a5c:	movt	r2, #1
   11a60:	str	r0, [sp, #212]	; 0xd4
   11a64:	mov	r0, r1
   11a68:	str	r1, [sp, #208]	; 0xd0
   11a6c:	mov	r1, r2
   11a70:	bl	1157c <bindtextdomain@plt>
   11a74:	ldr	r1, [sp, #208]	; 0xd0
   11a78:	str	r0, [sp, #204]	; 0xcc
   11a7c:	mov	r0, r1
   11a80:	bl	11390 <textdomain@plt>
   11a84:	movw	r1, #17288	; 0x4388
   11a88:	movt	r1, #1
   11a8c:	str	r0, [sp, #200]	; 0xc8
   11a90:	mov	r0, r1
   11a94:	bl	1e300 <_obstack_memory_used@@Base+0x220c>
   11a98:	str	r0, [sp, #196]	; 0xc4
   11a9c:	bl	114d4 <getpagesize@plt>
   11aa0:	movw	r1, #416	; 0x1a0
   11aa4:	movt	r1, #3
   11aa8:	str	r0, [r1]
   11aac:	movw	r0, #404	; 0x194
   11ab0:	movt	r0, #3
   11ab4:	ldr	r0, [r0]
   11ab8:	mov	r2, #1
   11abc:	ldr	r1, [sp, #216]	; 0xd8
   11ac0:	ldr	r3, [sp, #216]	; 0xd8
   11ac4:	bl	114f8 <setvbuf@plt>
   11ac8:	movw	r1, #59212	; 0xe74c
   11acc:	movt	r1, #1
   11ad0:	str	r0, [sp, #192]	; 0xc0
   11ad4:	mov	r0, r1
   11ad8:	bl	11420 <getenv@plt>
   11adc:	cmp	r0, #0
   11ae0:	movwne	r0, #1
   11ae4:	movw	r1, #420	; 0x1a4
   11ae8:	movt	r1, #3
   11aec:	strb	r0, [r1]
   11af0:	movw	r0, #421	; 0x1a5
   11af4:	movt	r0, #3
   11af8:	ldr	r1, [sp, #216]	; 0xd8
   11afc:	strb	r1, [r0]
   11b00:	movw	r0, #422	; 0x1a6
   11b04:	movt	r0, #3
   11b08:	strb	r1, [r0]
   11b0c:	movw	r0, #423	; 0x1a7
   11b10:	movt	r0, #3
   11b14:	strb	r1, [r0]
   11b18:	movw	r0, #424	; 0x1a8
   11b1c:	movt	r0, #3
   11b20:	strb	r1, [r0]
   11b24:	movw	r0, #425	; 0x1a9
   11b28:	movt	r0, #3
   11b2c:	strb	r1, [r0]
   11b30:	movw	r0, #432	; 0x1b0
   11b34:	movt	r0, #3
   11b38:	str	r1, [r0, #4]
   11b3c:	str	r1, [r0]
   11b40:	movw	r0, #440	; 0x1b8
   11b44:	movt	r0, #3
   11b48:	str	r1, [r0, #4]
   11b4c:	str	r1, [r0]
   11b50:	movw	r0, #448	; 0x1c0
   11b54:	movt	r0, #3
   11b58:	str	r1, [r0, #4]
   11b5c:	str	r1, [r0]
   11b60:	movw	r0, #456	; 0x1c8
   11b64:	movt	r0, #3
   11b68:	str	r1, [r0, #4]
   11b6c:	str	r1, [r0]
   11b70:	movw	r0, #464	; 0x1d0
   11b74:	movt	r0, #3
   11b78:	str	r1, [r0, #4]
   11b7c:	str	r1, [r0]
   11b80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11b84:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11b88:	movw	r2, #59228	; 0xe75c
   11b8c:	movt	r2, #1
   11b90:	movw	r3, #60040	; 0xea88
   11b94:	movt	r3, #1
   11b98:	movw	ip, #0
   11b9c:	str	ip, [sp]
   11ba0:	bl	11468 <getopt_long@plt>
   11ba4:	str	r0, [fp, #-44]	; 0xffffffd4
   11ba8:	cmn	r0, #1
   11bac:	beq	11d3c <__assert_fail@plt+0x760>
   11bb0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   11bb4:	cmn	r0, #3
   11bb8:	str	r0, [sp, #188]	; 0xbc
   11bbc:	beq	11cdc <__assert_fail@plt+0x700>
   11bc0:	b	11bc4 <__assert_fail@plt+0x5e8>
   11bc4:	ldr	r0, [sp, #188]	; 0xbc
   11bc8:	cmn	r0, #2
   11bcc:	beq	11cd4 <__assert_fail@plt+0x6f8>
   11bd0:	b	11bd4 <__assert_fail@plt+0x5f8>
   11bd4:	ldr	r0, [sp, #188]	; 0xbc
   11bd8:	cmp	r0, #76	; 0x4c
   11bdc:	beq	11c98 <__assert_fail@plt+0x6bc>
   11be0:	b	11be4 <__assert_fail@plt+0x608>
   11be4:	ldr	r0, [sp, #188]	; 0xbc
   11be8:	cmp	r0, #99	; 0x63
   11bec:	beq	11c48 <__assert_fail@plt+0x66c>
   11bf0:	b	11bf4 <__assert_fail@plt+0x618>
   11bf4:	ldr	r0, [sp, #188]	; 0xbc
   11bf8:	cmp	r0, #108	; 0x6c
   11bfc:	beq	11c70 <__assert_fail@plt+0x694>
   11c00:	b	11c04 <__assert_fail@plt+0x628>
   11c04:	ldr	r0, [sp, #188]	; 0xbc
   11c08:	cmp	r0, #109	; 0x6d
   11c0c:	beq	11c5c <__assert_fail@plt+0x680>
   11c10:	b	11c14 <__assert_fail@plt+0x638>
   11c14:	ldr	r0, [sp, #188]	; 0xbc
   11c18:	cmp	r0, #119	; 0x77
   11c1c:	beq	11c84 <__assert_fail@plt+0x6a8>
   11c20:	b	11c24 <__assert_fail@plt+0x648>
   11c24:	ldr	r0, [sp, #188]	; 0xbc
   11c28:	cmp	r0, #256	; 0x100
   11c2c:	beq	11cac <__assert_fail@plt+0x6d0>
   11c30:	b	11c34 <__assert_fail@plt+0x658>
   11c34:	movw	r0, #257	; 0x101
   11c38:	ldr	r1, [sp, #188]	; 0xbc
   11c3c:	cmp	r1, r0
   11c40:	beq	11cc0 <__assert_fail@plt+0x6e4>
   11c44:	b	11d30 <__assert_fail@plt+0x754>
   11c48:	movw	r0, #421	; 0x1a5
   11c4c:	movt	r0, #3
   11c50:	movw	r1, #1
   11c54:	strb	r1, [r0]
   11c58:	b	11d38 <__assert_fail@plt+0x75c>
   11c5c:	movw	r0, #422	; 0x1a6
   11c60:	movt	r0, #3
   11c64:	movw	r1, #1
   11c68:	strb	r1, [r0]
   11c6c:	b	11d38 <__assert_fail@plt+0x75c>
   11c70:	movw	r0, #424	; 0x1a8
   11c74:	movt	r0, #3
   11c78:	movw	r1, #1
   11c7c:	strb	r1, [r0]
   11c80:	b	11d38 <__assert_fail@plt+0x75c>
   11c84:	movw	r0, #423	; 0x1a7
   11c88:	movt	r0, #3
   11c8c:	movw	r1, #1
   11c90:	strb	r1, [r0]
   11c94:	b	11d38 <__assert_fail@plt+0x75c>
   11c98:	movw	r0, #425	; 0x1a9
   11c9c:	movt	r0, #3
   11ca0:	movw	r1, #1
   11ca4:	strb	r1, [r0]
   11ca8:	b	11d38 <__assert_fail@plt+0x75c>
   11cac:	movw	r0, #472	; 0x1d8
   11cb0:	movt	r0, #3
   11cb4:	movw	r1, #1
   11cb8:	strb	r1, [r0]
   11cbc:	b	11d38 <__assert_fail@plt+0x75c>
   11cc0:	movw	r0, #408	; 0x198
   11cc4:	movt	r0, #3
   11cc8:	ldr	r0, [r0]
   11ccc:	str	r0, [fp, #-56]	; 0xffffffc8
   11cd0:	b	11d38 <__assert_fail@plt+0x75c>
   11cd4:	movw	r0, #0
   11cd8:	bl	116d8 <__assert_fail@plt+0xfc>
   11cdc:	movw	r0, #404	; 0x194
   11ce0:	movt	r0, #3
   11ce4:	ldr	r0, [r0]
   11ce8:	movw	r1, #300	; 0x12c
   11cec:	movt	r1, #3
   11cf0:	ldr	r3, [r1]
   11cf4:	movw	r1, #59185	; 0xe731
   11cf8:	movt	r1, #1
   11cfc:	movw	r2, #59234	; 0xe762
   11d00:	movt	r2, #1
   11d04:	movw	ip, #59248	; 0xe770
   11d08:	movt	ip, #1
   11d0c:	str	ip, [sp]
   11d10:	movw	ip, #59259	; 0xe77b
   11d14:	movt	ip, #1
   11d18:	str	ip, [sp, #4]
   11d1c:	movw	ip, #0
   11d20:	str	ip, [sp, #8]
   11d24:	bl	18474 <__assert_fail@plt+0x6e98>
   11d28:	movw	r0, #0
   11d2c:	bl	11480 <exit@plt>
   11d30:	movw	r0, #1
   11d34:	bl	116d8 <__assert_fail@plt+0xfc>
   11d38:	b	11b80 <__assert_fail@plt+0x5a4>
   11d3c:	movw	r0, #424	; 0x1a8
   11d40:	movt	r0, #3
   11d44:	ldrb	r0, [r0]
   11d48:	tst	r0, #1
   11d4c:	bne	11dc8 <__assert_fail@plt+0x7ec>
   11d50:	movw	r0, #423	; 0x1a7
   11d54:	movt	r0, #3
   11d58:	ldrb	r0, [r0]
   11d5c:	tst	r0, #1
   11d60:	bne	11dc8 <__assert_fail@plt+0x7ec>
   11d64:	movw	r0, #422	; 0x1a6
   11d68:	movt	r0, #3
   11d6c:	ldrb	r0, [r0]
   11d70:	tst	r0, #1
   11d74:	bne	11dc8 <__assert_fail@plt+0x7ec>
   11d78:	movw	r0, #421	; 0x1a5
   11d7c:	movt	r0, #3
   11d80:	ldrb	r0, [r0]
   11d84:	tst	r0, #1
   11d88:	bne	11dc8 <__assert_fail@plt+0x7ec>
   11d8c:	movw	r0, #425	; 0x1a9
   11d90:	movt	r0, #3
   11d94:	ldrb	r0, [r0]
   11d98:	tst	r0, #1
   11d9c:	bne	11dc8 <__assert_fail@plt+0x7ec>
   11da0:	movw	r0, #421	; 0x1a5
   11da4:	movt	r0, #3
   11da8:	movw	r1, #1
   11dac:	strb	r1, [r0]
   11db0:	movw	r0, #423	; 0x1a7
   11db4:	movt	r0, #3
   11db8:	strb	r1, [r0]
   11dbc:	movw	r0, #424	; 0x1a8
   11dc0:	movt	r0, #3
   11dc4:	strb	r1, [r0]
   11dc8:	movw	r0, #0
   11dcc:	strb	r0, [fp, #-205]	; 0xffffff33
   11dd0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11dd4:	movw	r1, #0
   11dd8:	cmp	r0, r1
   11ddc:	beq	12060 <__assert_fail@plt+0xa84>
   11de0:	movw	r0, #384	; 0x180
   11de4:	movt	r0, #3
   11de8:	ldr	r0, [r0]
   11dec:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11df0:	cmp	r0, r1
   11df4:	bge	11e90 <__assert_fail@plt+0x8b4>
   11df8:	movw	r0, #59275	; 0xe78b
   11dfc:	movt	r0, #1
   11e00:	bl	114a4 <gettext@plt>
   11e04:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11e08:	movw	r2, #384	; 0x180
   11e0c:	movt	r2, #3
   11e10:	ldr	r2, [r2]
   11e14:	add	r1, r1, r2, lsl #2
   11e18:	ldr	r1, [r1]
   11e1c:	movw	r2, #4
   11e20:	str	r0, [sp, #184]	; 0xb8
   11e24:	mov	r0, r2
   11e28:	bl	16fec <__assert_fail@plt+0x5a10>
   11e2c:	movw	r1, #0
   11e30:	str	r0, [sp, #180]	; 0xb4
   11e34:	mov	r0, r1
   11e38:	ldr	r2, [sp, #184]	; 0xb8
   11e3c:	ldr	r3, [sp, #180]	; 0xb4
   11e40:	bl	11408 <error@plt>
   11e44:	movw	r0, #392	; 0x188
   11e48:	movt	r0, #3
   11e4c:	ldr	r0, [r0]
   11e50:	movw	r1, #59292	; 0xe79c
   11e54:	movt	r1, #1
   11e58:	str	r0, [sp, #176]	; 0xb0
   11e5c:	mov	r0, r1
   11e60:	bl	114a4 <gettext@plt>
   11e64:	ldr	r1, [sp, #176]	; 0xb0
   11e68:	str	r0, [sp, #172]	; 0xac
   11e6c:	mov	r0, r1
   11e70:	movw	r1, #60600	; 0xecb8
   11e74:	movt	r1, #1
   11e78:	ldr	r2, [sp, #172]	; 0xac
   11e7c:	bl	114c8 <fprintf@plt>
   11e80:	movw	r1, #1
   11e84:	str	r0, [sp, #168]	; 0xa8
   11e88:	mov	r0, r1
   11e8c:	bl	116d8 <__assert_fail@plt+0xfc>
   11e90:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11e94:	movw	r1, #60394	; 0xebea
   11e98:	movt	r1, #1
   11e9c:	bl	112dc <strcmp@plt>
   11ea0:	cmp	r0, #0
   11ea4:	bne	11ebc <__assert_fail@plt+0x8e0>
   11ea8:	movw	r0, #400	; 0x190
   11eac:	movt	r0, #3
   11eb0:	ldr	r0, [r0]
   11eb4:	str	r0, [fp, #-216]	; 0xffffff28
   11eb8:	b	11f2c <__assert_fail@plt+0x950>
   11ebc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11ec0:	movw	r1, #59415	; 0xe817
   11ec4:	movt	r1, #1
   11ec8:	bl	11570 <fopen64@plt>
   11ecc:	str	r0, [fp, #-216]	; 0xffffff28
   11ed0:	ldr	r0, [fp, #-216]	; 0xffffff28
   11ed4:	movw	r1, #0
   11ed8:	cmp	r0, r1
   11edc:	bne	11f28 <__assert_fail@plt+0x94c>
   11ee0:	bl	114e0 <__errno_location@plt>
   11ee4:	ldr	r1, [r0]
   11ee8:	movw	r0, #59344	; 0xe7d0
   11eec:	movt	r0, #1
   11ef0:	str	r1, [sp, #164]	; 0xa4
   11ef4:	bl	114a4 <gettext@plt>
   11ef8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   11efc:	movw	r2, #4
   11f00:	str	r0, [sp, #160]	; 0xa0
   11f04:	mov	r0, r2
   11f08:	bl	16fec <__assert_fail@plt+0x5a10>
   11f0c:	movw	r1, #1
   11f10:	str	r0, [sp, #156]	; 0x9c
   11f14:	mov	r0, r1
   11f18:	ldr	r1, [sp, #164]	; 0xa4
   11f1c:	ldr	r2, [sp, #160]	; 0xa0
   11f20:	ldr	r3, [sp, #156]	; 0x9c
   11f24:	bl	11408 <error@plt>
   11f28:	b	11f2c <__assert_fail@plt+0x950>
   11f2c:	ldr	r0, [fp, #-216]	; 0xffffff28
   11f30:	bl	11528 <fileno@plt>
   11f34:	add	r1, sp, #240	; 0xf0
   11f38:	bl	1e328 <_obstack_memory_used@@Base+0x2234>
   11f3c:	cmp	r0, #0
   11f40:	bne	12044 <__assert_fail@plt+0xa68>
   11f44:	ldr	r0, [sp, #256]	; 0x100
   11f48:	and	r0, r0, #61440	; 0xf000
   11f4c:	cmp	r0, #32768	; 0x8000
   11f50:	bne	12044 <__assert_fail@plt+0xa68>
   11f54:	ldr	r0, [sp, #288]	; 0x120
   11f58:	ldr	r1, [sp, #292]	; 0x124
   11f5c:	bl	1dff4 <_obstack_memory_used@@Base+0x1f00>
   11f60:	vmov	d16, r0, r1
   11f64:	vstr	d16, [sp, #144]	; 0x90
   11f68:	bl	14c50 <__assert_fail@plt+0x3674>
   11f6c:	vldr	d16, [pc, #900]	; 122f8 <__assert_fail@plt+0xd1c>
   11f70:	vmov.f64	d17, #0	; 0x40000000  2.0
   11f74:	vdiv.f64	d17, d0, d17
   11f78:	vcmpe.f64	d16, d17
   11f7c:	vmrs	APSR_nzcv, fpscr
   11f80:	bpl	11f90 <__assert_fail@plt+0x9b4>
   11f84:	vldr	d16, [pc, #876]	; 122f8 <__assert_fail@plt+0xd1c>
   11f88:	vstr	d16, [sp, #136]	; 0x88
   11f8c:	b	11fa0 <__assert_fail@plt+0x9c4>
   11f90:	bl	14c50 <__assert_fail@plt+0x3674>
   11f94:	vmov.f64	d16, #0	; 0x40000000  2.0
   11f98:	vdiv.f64	d16, d0, d16
   11f9c:	vstr	d16, [sp, #136]	; 0x88
   11fa0:	vldr	d16, [sp, #136]	; 0x88
   11fa4:	vldr	d17, [sp, #144]	; 0x90
   11fa8:	vcmpe.f64	d17, d16
   11fac:	vmrs	APSR_nzcv, fpscr
   11fb0:	bhi	12044 <__assert_fail@plt+0xa68>
   11fb4:	movw	r0, #1
   11fb8:	strb	r0, [fp, #-205]	; 0xffffff33
   11fbc:	sub	r0, fp, #204	; 0xcc
   11fc0:	bl	174bc <__assert_fail@plt+0x5ee0>
   11fc4:	ldr	r0, [fp, #-216]	; 0xffffff28
   11fc8:	sub	r1, fp, #204	; 0xcc
   11fcc:	bl	176b8 <__assert_fail@plt+0x60dc>
   11fd0:	tst	r0, #1
   11fd4:	beq	11fe8 <__assert_fail@plt+0xa0c>
   11fd8:	ldr	r0, [fp, #-216]	; 0xffffff28
   11fdc:	bl	14564 <__assert_fail@plt+0x2f88>
   11fe0:	cmp	r0, #0
   11fe4:	beq	12024 <__assert_fail@plt+0xa48>
   11fe8:	movw	r0, #59371	; 0xe7eb
   11fec:	movt	r0, #1
   11ff0:	bl	114a4 <gettext@plt>
   11ff4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   11ff8:	movw	r2, #4
   11ffc:	str	r0, [sp, #132]	; 0x84
   12000:	mov	r0, r2
   12004:	bl	16fec <__assert_fail@plt+0x5a10>
   12008:	movw	r1, #1
   1200c:	str	r0, [sp, #128]	; 0x80
   12010:	mov	r0, r1
   12014:	movw	r1, #0
   12018:	ldr	r2, [sp, #132]	; 0x84
   1201c:	ldr	r3, [sp, #128]	; 0x80
   12020:	bl	11408 <error@plt>
   12024:	ldr	r0, [fp, #-200]	; 0xffffff38
   12028:	str	r0, [fp, #-52]	; 0xffffffcc
   1202c:	ldr	r0, [fp, #-204]	; 0xffffff34
   12030:	str	r0, [fp, #-48]	; 0xffffffd0
   12034:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12038:	bl	140a8 <__assert_fail@plt+0x2acc>
   1203c:	str	r0, [fp, #-212]	; 0xffffff2c
   12040:	b	1205c <__assert_fail@plt+0xa80>
   12044:	movw	r0, #0
   12048:	str	r0, [fp, #-52]	; 0xffffffcc
   1204c:	str	r0, [fp, #-48]	; 0xffffffd0
   12050:	ldr	r0, [fp, #-216]	; 0xffffff28
   12054:	bl	14118 <__assert_fail@plt+0x2b3c>
   12058:	str	r0, [fp, #-212]	; 0xffffff2c
   1205c:	b	12100 <__assert_fail@plt+0xb24>
   12060:	movw	r0, #384	; 0x180
   12064:	movt	r0, #3
   12068:	ldr	r0, [r0]
   1206c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12070:	cmp	r0, r1
   12074:	bge	12094 <__assert_fail@plt+0xab8>
   12078:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1207c:	movw	r1, #384	; 0x180
   12080:	movt	r1, #3
   12084:	ldr	r1, [r1]
   12088:	add	r0, r0, r1, lsl #2
   1208c:	str	r0, [sp, #124]	; 0x7c
   12090:	b	120a4 <__assert_fail@plt+0xac8>
   12094:	movw	r0, #476	; 0x1dc
   12098:	movt	r0, #3
   1209c:	str	r0, [sp, #124]	; 0x7c
   120a0:	b	120a4 <__assert_fail@plt+0xac8>
   120a4:	ldr	r0, [sp, #124]	; 0x7c
   120a8:	str	r0, [fp, #-52]	; 0xffffffcc
   120ac:	movw	r0, #384	; 0x180
   120b0:	movt	r0, #3
   120b4:	ldr	r0, [r0]
   120b8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   120bc:	cmp	r0, r1
   120c0:	bge	120e0 <__assert_fail@plt+0xb04>
   120c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   120c8:	movw	r1, #384	; 0x180
   120cc:	movt	r1, #3
   120d0:	ldr	r1, [r1]
   120d4:	sub	r0, r0, r1
   120d8:	str	r0, [sp, #120]	; 0x78
   120dc:	b	120ec <__assert_fail@plt+0xb10>
   120e0:	movw	r0, #1
   120e4:	str	r0, [sp, #120]	; 0x78
   120e8:	b	120ec <__assert_fail@plt+0xb10>
   120ec:	ldr	r0, [sp, #120]	; 0x78
   120f0:	str	r0, [fp, #-48]	; 0xffffffd0
   120f4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   120f8:	bl	140a8 <__assert_fail@plt+0x2acc>
   120fc:	str	r0, [fp, #-212]	; 0xffffff2c
   12100:	ldr	r0, [fp, #-212]	; 0xffffff2c
   12104:	movw	r1, #0
   12108:	cmp	r0, r1
   1210c:	bne	12114 <__assert_fail@plt+0xb38>
   12110:	bl	1b334 <__assert_fail@plt+0x9d58>
   12114:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12118:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1211c:	bl	125e0 <__assert_fail@plt+0x1004>
   12120:	str	r0, [fp, #-60]	; 0xffffffc4
   12124:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12128:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1212c:	bl	127a4 <__assert_fail@plt+0x11c8>
   12130:	movw	r1, #480	; 0x1e0
   12134:	movt	r1, #3
   12138:	str	r0, [r1]
   1213c:	movw	r0, #1
   12140:	strb	r0, [fp, #-37]	; 0xffffffdb
   12144:	movw	r0, #0
   12148:	str	r0, [sp, #236]	; 0xec
   1214c:	movw	r0, #0
   12150:	strb	r0, [sp, #235]	; 0xeb
   12154:	ldr	r0, [fp, #-212]	; 0xffffff2c
   12158:	add	r1, sp, #228	; 0xe4
   1215c:	bl	14194 <__assert_fail@plt+0x2bb8>
   12160:	str	r0, [sp, #224]	; 0xe0
   12164:	ldr	r0, [sp, #224]	; 0xe0
   12168:	movw	r1, #0
   1216c:	cmp	r0, r1
   12170:	bne	12228 <__assert_fail@plt+0xc4c>
   12174:	ldr	r0, [sp, #228]	; 0xe4
   12178:	cmp	r0, #2
   1217c:	str	r0, [sp, #116]	; 0x74
   12180:	beq	121a8 <__assert_fail@plt+0xbcc>
   12184:	b	12188 <__assert_fail@plt+0xbac>
   12188:	ldr	r0, [sp, #116]	; 0x74
   1218c:	cmp	r0, #3
   12190:	beq	12204 <__assert_fail@plt+0xc28>
   12194:	b	12198 <__assert_fail@plt+0xbbc>
   12198:	ldr	r0, [sp, #116]	; 0x74
   1219c:	cmp	r0, #4
   121a0:	beq	121ac <__assert_fail@plt+0xbd0>
   121a4:	b	12208 <__assert_fail@plt+0xc2c>
   121a8:	b	12424 <__assert_fail@plt+0xe48>
   121ac:	bl	114e0 <__errno_location@plt>
   121b0:	ldr	r1, [r0]
   121b4:	movw	r0, #59402	; 0xe80a
   121b8:	movt	r0, #1
   121bc:	str	r1, [sp, #112]	; 0x70
   121c0:	bl	114a4 <gettext@plt>
   121c4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   121c8:	movw	r1, #0
   121cc:	str	r0, [sp, #108]	; 0x6c
   121d0:	mov	r0, r1
   121d4:	movw	r1, #3
   121d8:	bl	17140 <__assert_fail@plt+0x5b64>
   121dc:	movw	r1, #0
   121e0:	str	r0, [sp, #104]	; 0x68
   121e4:	mov	r0, r1
   121e8:	ldr	r1, [sp, #112]	; 0x70
   121ec:	ldr	r2, [sp, #108]	; 0x6c
   121f0:	ldr	r3, [sp, #104]	; 0x68
   121f4:	bl	11408 <error@plt>
   121f8:	movw	r0, #0
   121fc:	strb	r0, [fp, #-37]	; 0xffffffdb
   12200:	b	12424 <__assert_fail@plt+0xe48>
   12204:	bl	1b334 <__assert_fail@plt+0x9d58>
   12208:	movw	r0, #59417	; 0xe819
   1220c:	movt	r0, #1
   12210:	movw	r1, #59457	; 0xe841
   12214:	movt	r1, #1
   12218:	movw	r2, #938	; 0x3aa
   1221c:	movw	r3, #59466	; 0xe84a
   12220:	movt	r3, #1
   12224:	bl	115dc <__assert_fail@plt>
   12228:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1222c:	movw	r1, #0
   12230:	cmp	r0, r1
   12234:	beq	122a8 <__assert_fail@plt+0xccc>
   12238:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1223c:	movw	r1, #60394	; 0xebea
   12240:	movt	r1, #1
   12244:	bl	112dc <strcmp@plt>
   12248:	cmp	r0, #0
   1224c:	bne	122a8 <__assert_fail@plt+0xccc>
   12250:	ldr	r0, [sp, #224]	; 0xe0
   12254:	movw	r1, #60394	; 0xebea
   12258:	movt	r1, #1
   1225c:	bl	112dc <strcmp@plt>
   12260:	cmp	r0, #0
   12264:	bne	122a8 <__assert_fail@plt+0xccc>
   12268:	movw	r0, #59489	; 0xe861
   1226c:	movt	r0, #1
   12270:	bl	114a4 <gettext@plt>
   12274:	ldr	r1, [sp, #224]	; 0xe0
   12278:	movw	r2, #4
   1227c:	str	r0, [sp, #100]	; 0x64
   12280:	mov	r0, r2
   12284:	bl	16fec <__assert_fail@plt+0x5a10>
   12288:	movw	r1, #0
   1228c:	str	r0, [sp, #96]	; 0x60
   12290:	mov	r0, r1
   12294:	ldr	r2, [sp, #100]	; 0x64
   12298:	ldr	r3, [sp, #96]	; 0x60
   1229c:	bl	11408 <error@plt>
   122a0:	movw	r0, #1
   122a4:	strb	r0, [sp, #235]	; 0xeb
   122a8:	ldr	r0, [sp, #224]	; 0xe0
   122ac:	ldrsb	r0, [r0]
   122b0:	cmp	r0, #0
   122b4:	bne	1236c <__assert_fail@plt+0xd90>
   122b8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   122bc:	movw	r1, #0
   122c0:	cmp	r0, r1
   122c4:	bne	12300 <__assert_fail@plt+0xd24>
   122c8:	movw	r0, #59552	; 0xe8a0
   122cc:	movt	r0, #1
   122d0:	bl	114a4 <gettext@plt>
   122d4:	movw	r1, #0
   122d8:	str	r0, [sp, #92]	; 0x5c
   122dc:	mov	r0, r1
   122e0:	movw	r2, #60292	; 0xeb84
   122e4:	movt	r2, #1
   122e8:	ldr	r3, [sp, #92]	; 0x5c
   122ec:	bl	11408 <error@plt>
   122f0:	b	12364 <__assert_fail@plt+0xd88>
   122f4:	nop	{0}
   122f8:	andeq	r0, r0, r0
   122fc:	cmnmi	r4, r0
   12300:	ldr	r0, [fp, #-212]	; 0xffffff2c
   12304:	bl	142b0 <__assert_fail@plt+0x2cd4>
   12308:	str	r0, [sp, #220]	; 0xdc
   1230c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12310:	movw	r0, #0
   12314:	movw	r1, #3
   12318:	bl	17140 <__assert_fail@plt+0x5b64>
   1231c:	ldr	r1, [sp, #220]	; 0xdc
   12320:	movw	r2, #59552	; 0xe8a0
   12324:	movt	r2, #1
   12328:	str	r0, [sp, #88]	; 0x58
   1232c:	mov	r0, r2
   12330:	str	r1, [sp, #84]	; 0x54
   12334:	bl	114a4 <gettext@plt>
   12338:	movw	r1, #0
   1233c:	str	r0, [sp, #80]	; 0x50
   12340:	mov	r0, r1
   12344:	movw	r2, #59582	; 0xe8be
   12348:	movt	r2, #1
   1234c:	ldr	r3, [sp, #88]	; 0x58
   12350:	ldr	ip, [sp, #84]	; 0x54
   12354:	str	ip, [sp]
   12358:	ldr	lr, [sp, #80]	; 0x50
   1235c:	str	lr, [sp, #4]
   12360:	bl	11408 <error@plt>
   12364:	movw	r0, #1
   12368:	strb	r0, [sp, #235]	; 0xeb
   1236c:	ldrb	r0, [sp, #235]	; 0xeb
   12370:	tst	r0, #1
   12374:	beq	12384 <__assert_fail@plt+0xda8>
   12378:	movw	r0, #0
   1237c:	strb	r0, [fp, #-37]	; 0xffffffdb
   12380:	b	123f8 <__assert_fail@plt+0xe1c>
   12384:	ldr	r0, [sp, #224]	; 0xe0
   12388:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1238c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   12390:	cmp	r2, #0
   12394:	str	r0, [sp, #76]	; 0x4c
   12398:	str	r1, [sp, #72]	; 0x48
   1239c:	beq	123ac <__assert_fail@plt+0xdd0>
   123a0:	ldr	r0, [sp, #236]	; 0xec
   123a4:	str	r0, [sp, #68]	; 0x44
   123a8:	b	123b8 <__assert_fail@plt+0xddc>
   123ac:	movw	r0, #0
   123b0:	str	r0, [sp, #68]	; 0x44
   123b4:	b	123b8 <__assert_fail@plt+0xddc>
   123b8:	ldr	r0, [sp, #68]	; 0x44
   123bc:	movw	r1, #112	; 0x70
   123c0:	mul	r0, r0, r1
   123c4:	ldr	r1, [sp, #72]	; 0x48
   123c8:	add	r1, r1, r0
   123cc:	ldr	r0, [sp, #76]	; 0x4c
   123d0:	bl	12914 <__assert_fail@plt+0x1338>
   123d4:	and	r0, r0, #1
   123d8:	ldrb	r1, [fp, #-37]	; 0xffffffdb
   123dc:	and	r1, r1, #1
   123e0:	and	r0, r1, r0
   123e4:	cmp	r0, #0
   123e8:	movw	r0, #0
   123ec:	movne	r0, #1
   123f0:	and	r0, r0, #1
   123f4:	strb	r0, [fp, #-37]	; 0xffffffdb
   123f8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   123fc:	cmp	r0, #0
   12400:	bne	12410 <__assert_fail@plt+0xe34>
   12404:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12408:	movw	r1, #1
   1240c:	str	r1, [r0]
   12410:	b	12414 <__assert_fail@plt+0xe38>
   12414:	ldr	r0, [sp, #236]	; 0xec
   12418:	add	r0, r0, #1
   1241c:	str	r0, [sp, #236]	; 0xec
   12420:	b	1214c <__assert_fail@plt+0xb70>
   12424:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   12428:	tst	r0, #1
   1242c:	beq	12480 <__assert_fail@plt+0xea4>
   12430:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12434:	movw	r1, #0
   12438:	cmp	r0, r1
   1243c:	bne	12480 <__assert_fail@plt+0xea4>
   12440:	ldr	r0, [fp, #-212]	; 0xffffff2c
   12444:	bl	142b0 <__assert_fail@plt+0x2cd4>
   12448:	cmp	r0, #0
   1244c:	bne	12480 <__assert_fail@plt+0xea4>
   12450:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12454:	movw	r0, #0
   12458:	bl	12914 <__assert_fail@plt+0x1338>
   1245c:	and	r0, r0, #1
   12460:	ldrb	r1, [fp, #-37]	; 0xffffffdb
   12464:	and	r1, r1, #1
   12468:	and	r0, r1, r0
   1246c:	cmp	r0, #0
   12470:	movw	r0, #0
   12474:	movne	r0, #1
   12478:	and	r0, r0, #1
   1247c:	strb	r0, [fp, #-37]	; 0xffffffdb
   12480:	ldrb	r0, [fp, #-205]	; 0xffffff33
   12484:	tst	r0, #1
   12488:	beq	12494 <__assert_fail@plt+0xeb8>
   1248c:	sub	r0, fp, #204	; 0xcc
   12490:	bl	17580 <__assert_fail@plt+0x5fa4>
   12494:	ldr	r0, [fp, #-212]	; 0xffffff2c
   12498:	bl	142b0 <__assert_fail@plt+0x2cd4>
   1249c:	movw	r1, #1
   124a0:	cmp	r1, r0
   124a4:	bcs	1257c <__assert_fail@plt+0xfa0>
   124a8:	movw	r0, #464	; 0x1d0
   124ac:	movt	r0, #3
   124b0:	ldr	r1, [r0]
   124b4:	ldr	r0, [r0, #4]
   124b8:	movw	r2, #456	; 0x1c8
   124bc:	movt	r2, #3
   124c0:	ldr	r3, [r2]
   124c4:	ldr	r2, [r2, #4]
   124c8:	movw	ip, #448	; 0x1c0
   124cc:	movt	ip, #3
   124d0:	ldr	lr, [ip]
   124d4:	ldr	ip, [ip, #4]
   124d8:	movw	r4, #440	; 0x1b8
   124dc:	movt	r4, #3
   124e0:	ldr	r5, [r4]
   124e4:	ldr	r4, [r4, #4]
   124e8:	movw	r6, #432	; 0x1b0
   124ec:	movt	r6, #3
   124f0:	ldr	r7, [r6]
   124f4:	ldr	r6, [r6, #4]
   124f8:	movw	r8, #59593	; 0xe8c9
   124fc:	movt	r8, #1
   12500:	str	r0, [sp, #64]	; 0x40
   12504:	mov	r0, r8
   12508:	str	r1, [sp, #60]	; 0x3c
   1250c:	str	r3, [sp, #56]	; 0x38
   12510:	str	r2, [sp, #52]	; 0x34
   12514:	str	lr, [sp, #48]	; 0x30
   12518:	str	ip, [sp, #44]	; 0x2c
   1251c:	str	r5, [sp, #40]	; 0x28
   12520:	str	r4, [sp, #36]	; 0x24
   12524:	str	r7, [sp, #32]
   12528:	str	r6, [sp, #28]
   1252c:	bl	114a4 <gettext@plt>
   12530:	mov	r1, sp
   12534:	str	r0, [r1, #24]
   12538:	ldr	r0, [sp, #28]
   1253c:	str	r0, [r1, #20]
   12540:	ldr	r2, [sp, #32]
   12544:	str	r2, [r1, #16]
   12548:	ldr	r3, [sp, #36]	; 0x24
   1254c:	str	r3, [r1, #12]
   12550:	ldr	ip, [sp, #40]	; 0x28
   12554:	str	ip, [r1, #8]
   12558:	ldr	lr, [sp, #44]	; 0x2c
   1255c:	str	lr, [r1, #4]
   12560:	ldr	r4, [sp, #48]	; 0x30
   12564:	str	r4, [r1]
   12568:	ldr	r0, [sp, #60]	; 0x3c
   1256c:	ldr	r1, [sp, #64]	; 0x40
   12570:	ldr	r2, [sp, #56]	; 0x38
   12574:	ldr	r3, [sp, #52]	; 0x34
   12578:	bl	12aac <__assert_fail@plt+0x14d0>
   1257c:	ldr	r0, [fp, #-212]	; 0xffffff2c
   12580:	bl	14300 <__assert_fail@plt+0x2d24>
   12584:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12588:	bl	146fc <__assert_fail@plt+0x3120>
   1258c:	movw	r0, #484	; 0x1e4
   12590:	movt	r0, #3
   12594:	ldrb	r0, [r0]
   12598:	tst	r0, #1
   1259c:	beq	125c8 <__assert_fail@plt+0xfec>
   125a0:	movw	r0, #0
   125a4:	bl	115c4 <close@plt>
   125a8:	cmp	r0, #0
   125ac:	beq	125c8 <__assert_fail@plt+0xfec>
   125b0:	bl	114e0 <__errno_location@plt>
   125b4:	ldr	r1, [r0]
   125b8:	movw	r0, #1
   125bc:	movw	r2, #60394	; 0xebea
   125c0:	movt	r2, #1
   125c4:	bl	11408 <error@plt>
   125c8:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   125cc:	tst	r0, #1
   125d0:	movw	r0, #0
   125d4:	moveq	r0, #1
   125d8:	sub	sp, fp, #24
   125dc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   125e0:	push	{fp, lr}
   125e4:	mov	fp, sp
   125e8:	sub	sp, sp, #24
   125ec:	str	r0, [fp, #-4]
   125f0:	str	r1, [fp, #-8]
   125f4:	ldr	r0, [fp, #-4]
   125f8:	cmp	r0, #0
   125fc:	beq	1260c <__assert_fail@plt+0x1030>
   12600:	ldr	r0, [fp, #-4]
   12604:	str	r0, [sp, #4]
   12608:	b	12618 <__assert_fail@plt+0x103c>
   1260c:	movw	r0, #1
   12610:	str	r0, [sp, #4]
   12614:	b	12618 <__assert_fail@plt+0x103c>
   12618:	ldr	r0, [sp, #4]
   1261c:	movw	r1, #112	; 0x70
   12620:	bl	18754 <__assert_fail@plt+0x7178>
   12624:	str	r0, [sp, #12]
   12628:	ldr	r0, [fp, #-4]
   1262c:	cmp	r0, #0
   12630:	beq	126a8 <__assert_fail@plt+0x10cc>
   12634:	ldr	r0, [fp, #-4]
   12638:	cmp	r0, #1
   1263c:	bne	126b8 <__assert_fail@plt+0x10dc>
   12640:	movw	r0, #424	; 0x1a8
   12644:	movt	r0, #3
   12648:	ldrb	r0, [r0]
   1264c:	and	r0, r0, #1
   12650:	movw	r1, #423	; 0x1a7
   12654:	movt	r1, #3
   12658:	ldrb	r1, [r1]
   1265c:	and	r1, r1, #1
   12660:	add	r0, r0, r1
   12664:	movw	r1, #422	; 0x1a6
   12668:	movt	r1, #3
   1266c:	ldrb	r1, [r1]
   12670:	and	r1, r1, #1
   12674:	add	r0, r0, r1
   12678:	movw	r1, #421	; 0x1a5
   1267c:	movt	r1, #3
   12680:	ldrb	r1, [r1]
   12684:	and	r1, r1, #1
   12688:	add	r0, r0, r1
   1268c:	movw	r1, #425	; 0x1a9
   12690:	movt	r1, #3
   12694:	ldrb	r1, [r1]
   12698:	and	r1, r1, #1
   1269c:	add	r0, r0, r1
   126a0:	cmp	r0, #1
   126a4:	bne	126b8 <__assert_fail@plt+0x10dc>
   126a8:	ldr	r0, [sp, #12]
   126ac:	movw	r1, #1
   126b0:	str	r1, [r0]
   126b4:	b	12798 <__assert_fail@plt+0x11bc>
   126b8:	movw	r0, #0
   126bc:	str	r0, [sp, #8]
   126c0:	ldr	r0, [sp, #8]
   126c4:	ldr	r1, [fp, #-4]
   126c8:	cmp	r0, r1
   126cc:	bcs	12794 <__assert_fail@plt+0x11b8>
   126d0:	ldr	r0, [fp, #-8]
   126d4:	ldr	r1, [sp, #8]
   126d8:	add	r0, r0, r1, lsl #2
   126dc:	ldr	r0, [r0]
   126e0:	movw	r1, #0
   126e4:	cmp	r0, r1
   126e8:	beq	12710 <__assert_fail@plt+0x1134>
   126ec:	ldr	r0, [fp, #-8]
   126f0:	ldr	r1, [sp, #8]
   126f4:	add	r0, r0, r1, lsl #2
   126f8:	ldr	r0, [r0]
   126fc:	movw	r1, #60394	; 0xebea
   12700:	movt	r1, #1
   12704:	bl	112dc <strcmp@plt>
   12708:	cmp	r0, #0
   1270c:	bne	12738 <__assert_fail@plt+0x115c>
   12710:	ldr	r0, [sp, #12]
   12714:	ldr	r1, [sp, #8]
   12718:	movw	r2, #112	; 0x70
   1271c:	mul	r1, r1, r2
   12720:	add	r0, r0, r1
   12724:	add	r1, r0, #8
   12728:	movw	r0, #0
   1272c:	bl	1e328 <_obstack_memory_used@@Base+0x2234>
   12730:	str	r0, [sp]
   12734:	b	12768 <__assert_fail@plt+0x118c>
   12738:	ldr	r0, [fp, #-8]
   1273c:	ldr	r1, [sp, #8]
   12740:	add	r0, r0, r1, lsl #2
   12744:	ldr	r0, [r0]
   12748:	ldr	r1, [sp, #12]
   1274c:	ldr	r2, [sp, #8]
   12750:	movw	r3, #112	; 0x70
   12754:	mul	r2, r2, r3
   12758:	add	r1, r1, r2
   1275c:	add	r1, r1, #8
   12760:	bl	1e318 <_obstack_memory_used@@Base+0x2224>
   12764:	str	r0, [sp]
   12768:	ldr	r0, [sp]
   1276c:	ldr	r1, [sp, #12]
   12770:	ldr	r2, [sp, #8]
   12774:	movw	r3, #112	; 0x70
   12778:	mul	r2, r2, r3
   1277c:	add	r1, r1, r2
   12780:	str	r0, [r1]
   12784:	ldr	r0, [sp, #8]
   12788:	add	r0, r0, #1
   1278c:	str	r0, [sp, #8]
   12790:	b	126c0 <__assert_fail@plt+0x10e4>
   12794:	b	12798 <__assert_fail@plt+0x11bc>
   12798:	ldr	r0, [sp, #12]
   1279c:	mov	sp, fp
   127a0:	pop	{fp, pc}
   127a4:	push	{fp, lr}
   127a8:	mov	fp, sp
   127ac:	sub	sp, sp, #32
   127b0:	str	r0, [fp, #-4]
   127b4:	str	r1, [fp, #-8]
   127b8:	movw	r0, #1
   127bc:	str	r0, [fp, #-12]
   127c0:	ldr	r0, [fp, #-4]
   127c4:	movw	r1, #0
   127c8:	cmp	r1, r0
   127cc:	bcs	12908 <__assert_fail@plt+0x132c>
   127d0:	ldr	r0, [fp, #-8]
   127d4:	ldr	r0, [r0]
   127d8:	cmp	r0, #0
   127dc:	bgt	12908 <__assert_fail@plt+0x132c>
   127e0:	mov	r0, #1
   127e4:	str	r0, [sp, #16]
   127e8:	mov	r0, #0
   127ec:	str	r0, [sp, #12]
   127f0:	str	r0, [sp, #8]
   127f4:	movw	r0, #0
   127f8:	str	r0, [sp, #4]
   127fc:	ldr	r0, [sp, #4]
   12800:	ldr	r1, [fp, #-4]
   12804:	cmp	r0, r1
   12808:	bcs	128a4 <__assert_fail@plt+0x12c8>
   1280c:	ldr	r0, [fp, #-8]
   12810:	ldr	r1, [sp, #4]
   12814:	movw	r2, #112	; 0x70
   12818:	mul	r1, r1, r2
   1281c:	add	r0, r0, r1
   12820:	ldr	r0, [r0]
   12824:	cmp	r0, #0
   12828:	bne	12890 <__assert_fail@plt+0x12b4>
   1282c:	ldr	r0, [fp, #-8]
   12830:	ldr	r1, [sp, #4]
   12834:	movw	r2, #112	; 0x70
   12838:	mul	r1, r1, r2
   1283c:	add	r0, r0, r1
   12840:	ldr	r0, [r0, #24]
   12844:	and	r0, r0, #61440	; 0xf000
   12848:	cmp	r0, #32768	; 0x8000
   1284c:	bne	12884 <__assert_fail@plt+0x12a8>
   12850:	ldr	r0, [fp, #-8]
   12854:	ldr	r1, [sp, #4]
   12858:	rsb	r1, r1, r1, lsl #3
   1285c:	add	r0, r0, r1, lsl #4
   12860:	ldr	r1, [r0, #56]	; 0x38
   12864:	ldr	r0, [r0, #60]	; 0x3c
   12868:	ldr	r2, [sp, #8]
   1286c:	ldr	r3, [sp, #12]
   12870:	adds	r1, r2, r1
   12874:	adc	r0, r3, r0
   12878:	str	r1, [sp, #8]
   1287c:	str	r0, [sp, #12]
   12880:	b	1288c <__assert_fail@plt+0x12b0>
   12884:	movw	r0, #7
   12888:	str	r0, [sp, #16]
   1288c:	b	12890 <__assert_fail@plt+0x12b4>
   12890:	b	12894 <__assert_fail@plt+0x12b8>
   12894:	ldr	r0, [sp, #4]
   12898:	add	r0, r0, #1
   1289c:	str	r0, [sp, #4]
   128a0:	b	127fc <__assert_fail@plt+0x1220>
   128a4:	b	128a8 <__assert_fail@plt+0x12cc>
   128a8:	ldr	r0, [sp, #8]
   128ac:	ldr	r1, [sp, #12]
   128b0:	subs	r0, r0, #10
   128b4:	sbcs	r1, r1, #0
   128b8:	bcc	128ec <__assert_fail@plt+0x1310>
   128bc:	b	128c0 <__assert_fail@plt+0x12e4>
   128c0:	ldr	r0, [fp, #-12]
   128c4:	add	r0, r0, #1
   128c8:	str	r0, [fp, #-12]
   128cc:	ldr	r0, [sp, #8]
   128d0:	ldr	r1, [sp, #12]
   128d4:	mov	r2, #10
   128d8:	mov	r3, #0
   128dc:	bl	1e128 <_obstack_memory_used@@Base+0x2034>
   128e0:	str	r1, [sp, #12]
   128e4:	str	r0, [sp, #8]
   128e8:	b	128a8 <__assert_fail@plt+0x12cc>
   128ec:	ldr	r0, [fp, #-12]
   128f0:	ldr	r1, [sp, #16]
   128f4:	cmp	r0, r1
   128f8:	bge	12904 <__assert_fail@plt+0x1328>
   128fc:	ldr	r0, [sp, #16]
   12900:	str	r0, [fp, #-12]
   12904:	b	12908 <__assert_fail@plt+0x132c>
   12908:	ldr	r0, [fp, #-12]
   1290c:	mov	sp, fp
   12910:	pop	{fp, pc}
   12914:	push	{fp, lr}
   12918:	mov	fp, sp
   1291c:	sub	sp, sp, #48	; 0x30
   12920:	str	r0, [fp, #-8]
   12924:	str	r1, [fp, #-12]
   12928:	ldr	r0, [fp, #-8]
   1292c:	movw	r1, #0
   12930:	cmp	r0, r1
   12934:	beq	12950 <__assert_fail@plt+0x1374>
   12938:	ldr	r0, [fp, #-8]
   1293c:	movw	r1, #60394	; 0xebea
   12940:	movt	r1, #1
   12944:	bl	112dc <strcmp@plt>
   12948:	cmp	r0, #0
   1294c:	bne	1299c <__assert_fail@plt+0x13c0>
   12950:	movw	r0, #484	; 0x1e4
   12954:	movt	r0, #3
   12958:	movw	r1, #1
   1295c:	strb	r1, [r0]
   12960:	movw	r0, #0
   12964:	str	r0, [sp, #24]
   12968:	ldr	r1, [sp, #24]
   1296c:	bl	1b388 <__assert_fail@plt+0x9dac>
   12970:	ldr	r1, [fp, #-8]
   12974:	ldr	r2, [fp, #-12]
   12978:	mov	r0, sp
   1297c:	mvn	r3, #0
   12980:	str	r3, [r0, #4]
   12984:	str	r3, [r0]
   12988:	mov	r0, #0
   1298c:	bl	12d7c <__assert_fail@plt+0x17a0>
   12990:	and	r0, r0, #1
   12994:	strb	r0, [fp, #-1]
   12998:	b	12a9c <__assert_fail@plt+0x14c0>
   1299c:	ldr	r0, [fp, #-8]
   129a0:	movw	r1, #0
   129a4:	bl	11414 <open64@plt>
   129a8:	str	r0, [fp, #-16]
   129ac:	ldr	r0, [fp, #-16]
   129b0:	cmn	r0, #1
   129b4:	bne	12a08 <__assert_fail@plt+0x142c>
   129b8:	bl	114e0 <__errno_location@plt>
   129bc:	ldr	r1, [r0]
   129c0:	ldr	r2, [fp, #-8]
   129c4:	movw	r0, #0
   129c8:	movw	r3, #3
   129cc:	str	r1, [sp, #20]
   129d0:	mov	r1, r3
   129d4:	bl	17140 <__assert_fail@plt+0x5b64>
   129d8:	movw	r1, #0
   129dc:	str	r0, [sp, #16]
   129e0:	mov	r0, r1
   129e4:	ldr	r1, [sp, #20]
   129e8:	movw	r2, #60292	; 0xeb84
   129ec:	movt	r2, #1
   129f0:	ldr	r3, [sp, #16]
   129f4:	bl	11408 <error@plt>
   129f8:	movw	r0, #0
   129fc:	and	r0, r0, #1
   12a00:	strb	r0, [fp, #-1]
   12a04:	b	12a9c <__assert_fail@plt+0x14c0>
   12a08:	ldr	r0, [fp, #-16]
   12a0c:	ldr	r1, [fp, #-8]
   12a10:	ldr	r2, [fp, #-12]
   12a14:	mov	r3, sp
   12a18:	mov	ip, #0
   12a1c:	str	ip, [r3, #4]
   12a20:	str	ip, [r3]
   12a24:	bl	12d7c <__assert_fail@plt+0x17a0>
   12a28:	and	r0, r0, #1
   12a2c:	strb	r0, [fp, #-17]	; 0xffffffef
   12a30:	ldr	r0, [fp, #-16]
   12a34:	bl	115c4 <close@plt>
   12a38:	cmp	r0, #0
   12a3c:	beq	12a90 <__assert_fail@plt+0x14b4>
   12a40:	bl	114e0 <__errno_location@plt>
   12a44:	ldr	r1, [r0]
   12a48:	ldr	r2, [fp, #-8]
   12a4c:	movw	r0, #0
   12a50:	movw	r3, #3
   12a54:	str	r1, [sp, #12]
   12a58:	mov	r1, r3
   12a5c:	bl	17140 <__assert_fail@plt+0x5b64>
   12a60:	movw	r1, #0
   12a64:	str	r0, [sp, #8]
   12a68:	mov	r0, r1
   12a6c:	ldr	r1, [sp, #12]
   12a70:	movw	r2, #60292	; 0xeb84
   12a74:	movt	r2, #1
   12a78:	ldr	r3, [sp, #8]
   12a7c:	bl	11408 <error@plt>
   12a80:	movw	r0, #0
   12a84:	and	r0, r0, #1
   12a88:	strb	r0, [fp, #-1]
   12a8c:	b	12a9c <__assert_fail@plt+0x14c0>
   12a90:	ldrb	r0, [fp, #-17]	; 0xffffffef
   12a94:	and	r0, r0, #1
   12a98:	strb	r0, [fp, #-1]
   12a9c:	ldrb	r0, [fp, #-1]
   12aa0:	and	r0, r0, #1
   12aa4:	mov	sp, fp
   12aa8:	pop	{fp, pc}
   12aac:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12ab0:	add	fp, sp, #24
   12ab4:	sub	sp, sp, #136	; 0x88
   12ab8:	ldr	ip, [fp, #28]
   12abc:	ldr	lr, [fp, #24]
   12ac0:	ldr	r4, [fp, #20]
   12ac4:	ldr	r5, [fp, #16]
   12ac8:	ldr	r6, [fp, #12]
   12acc:	ldr	r7, [fp, #8]
   12ad0:	ldr	r8, [fp, #32]
   12ad4:	movw	r9, #60256	; 0xeb60
   12ad8:	movt	r9, #1
   12adc:	add	r9, r9, #1
   12ae0:	str	r0, [fp, #-32]	; 0xffffffe0
   12ae4:	str	r1, [fp, #-28]	; 0xffffffe4
   12ae8:	str	r3, [fp, #-36]	; 0xffffffdc
   12aec:	str	r2, [fp, #-40]	; 0xffffffd8
   12af0:	str	r6, [fp, #-44]	; 0xffffffd4
   12af4:	str	r7, [fp, #-48]	; 0xffffffd0
   12af8:	str	r4, [fp, #-52]	; 0xffffffcc
   12afc:	str	r5, [fp, #-56]	; 0xffffffc8
   12b00:	str	ip, [fp, #-60]	; 0xffffffc4
   12b04:	str	lr, [fp, #-64]	; 0xffffffc0
   12b08:	str	r9, [fp, #-68]	; 0xffffffbc
   12b0c:	movw	r0, #424	; 0x1a8
   12b10:	movt	r0, #3
   12b14:	ldrb	r0, [r0]
   12b18:	tst	r0, #1
   12b1c:	beq	12b74 <__assert_fail@plt+0x1598>
   12b20:	add	r2, sp, #71	; 0x47
   12b24:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12b28:	movw	r1, #480	; 0x1e0
   12b2c:	movt	r1, #3
   12b30:	ldr	r1, [r1]
   12b34:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12b38:	ldr	ip, [fp, #-28]	; 0xffffffe4
   12b3c:	str	r0, [sp, #64]	; 0x40
   12b40:	mov	r0, r3
   12b44:	str	r1, [sp, #60]	; 0x3c
   12b48:	mov	r1, ip
   12b4c:	bl	14844 <__assert_fail@plt+0x3268>
   12b50:	ldr	r1, [sp, #64]	; 0x40
   12b54:	str	r0, [sp, #56]	; 0x38
   12b58:	mov	r0, r1
   12b5c:	ldr	r1, [sp, #60]	; 0x3c
   12b60:	ldr	r2, [sp, #56]	; 0x38
   12b64:	bl	112f4 <printf@plt>
   12b68:	movw	r1, #60256	; 0xeb60
   12b6c:	movt	r1, #1
   12b70:	str	r1, [fp, #-68]	; 0xffffffbc
   12b74:	movw	r0, #423	; 0x1a7
   12b78:	movt	r0, #3
   12b7c:	ldrb	r0, [r0]
   12b80:	tst	r0, #1
   12b84:	beq	12bdc <__assert_fail@plt+0x1600>
   12b88:	add	r2, sp, #71	; 0x47
   12b8c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12b90:	movw	r1, #480	; 0x1e0
   12b94:	movt	r1, #3
   12b98:	ldr	r1, [r1]
   12b9c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12ba0:	ldr	ip, [fp, #-36]	; 0xffffffdc
   12ba4:	str	r0, [sp, #52]	; 0x34
   12ba8:	mov	r0, r3
   12bac:	str	r1, [sp, #48]	; 0x30
   12bb0:	mov	r1, ip
   12bb4:	bl	14844 <__assert_fail@plt+0x3268>
   12bb8:	ldr	r1, [sp, #52]	; 0x34
   12bbc:	str	r0, [sp, #44]	; 0x2c
   12bc0:	mov	r0, r1
   12bc4:	ldr	r1, [sp, #48]	; 0x30
   12bc8:	ldr	r2, [sp, #44]	; 0x2c
   12bcc:	bl	112f4 <printf@plt>
   12bd0:	movw	r1, #60256	; 0xeb60
   12bd4:	movt	r1, #1
   12bd8:	str	r1, [fp, #-68]	; 0xffffffbc
   12bdc:	movw	r0, #422	; 0x1a6
   12be0:	movt	r0, #3
   12be4:	ldrb	r0, [r0]
   12be8:	tst	r0, #1
   12bec:	beq	12c44 <__assert_fail@plt+0x1668>
   12bf0:	add	r2, sp, #71	; 0x47
   12bf4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12bf8:	movw	r1, #480	; 0x1e0
   12bfc:	movt	r1, #3
   12c00:	ldr	r1, [r1]
   12c04:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12c08:	ldr	ip, [fp, #-44]	; 0xffffffd4
   12c0c:	str	r0, [sp, #40]	; 0x28
   12c10:	mov	r0, r3
   12c14:	str	r1, [sp, #36]	; 0x24
   12c18:	mov	r1, ip
   12c1c:	bl	14844 <__assert_fail@plt+0x3268>
   12c20:	ldr	r1, [sp, #40]	; 0x28
   12c24:	str	r0, [sp, #32]
   12c28:	mov	r0, r1
   12c2c:	ldr	r1, [sp, #36]	; 0x24
   12c30:	ldr	r2, [sp, #32]
   12c34:	bl	112f4 <printf@plt>
   12c38:	movw	r1, #60256	; 0xeb60
   12c3c:	movt	r1, #1
   12c40:	str	r1, [fp, #-68]	; 0xffffffbc
   12c44:	movw	r0, #421	; 0x1a5
   12c48:	movt	r0, #3
   12c4c:	ldrb	r0, [r0]
   12c50:	tst	r0, #1
   12c54:	beq	12cac <__assert_fail@plt+0x16d0>
   12c58:	add	r2, sp, #71	; 0x47
   12c5c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12c60:	movw	r1, #480	; 0x1e0
   12c64:	movt	r1, #3
   12c68:	ldr	r1, [r1]
   12c6c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12c70:	ldr	ip, [fp, #-52]	; 0xffffffcc
   12c74:	str	r0, [sp, #28]
   12c78:	mov	r0, r3
   12c7c:	str	r1, [sp, #24]
   12c80:	mov	r1, ip
   12c84:	bl	14844 <__assert_fail@plt+0x3268>
   12c88:	ldr	r1, [sp, #28]
   12c8c:	str	r0, [sp, #20]
   12c90:	mov	r0, r1
   12c94:	ldr	r1, [sp, #24]
   12c98:	ldr	r2, [sp, #20]
   12c9c:	bl	112f4 <printf@plt>
   12ca0:	movw	r1, #60256	; 0xeb60
   12ca4:	movt	r1, #1
   12ca8:	str	r1, [fp, #-68]	; 0xffffffbc
   12cac:	movw	r0, #425	; 0x1a9
   12cb0:	movt	r0, #3
   12cb4:	ldrb	r0, [r0]
   12cb8:	tst	r0, #1
   12cbc:	beq	12d08 <__assert_fail@plt+0x172c>
   12cc0:	add	r2, sp, #71	; 0x47
   12cc4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12cc8:	movw	r1, #480	; 0x1e0
   12ccc:	movt	r1, #3
   12cd0:	ldr	r1, [r1]
   12cd4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   12cd8:	ldr	ip, [fp, #-60]	; 0xffffffc4
   12cdc:	str	r0, [sp, #16]
   12ce0:	mov	r0, r3
   12ce4:	str	r1, [sp, #12]
   12ce8:	mov	r1, ip
   12cec:	bl	14844 <__assert_fail@plt+0x3268>
   12cf0:	ldr	r1, [sp, #16]
   12cf4:	str	r0, [sp, #8]
   12cf8:	mov	r0, r1
   12cfc:	ldr	r1, [sp, #12]
   12d00:	ldr	r2, [sp, #8]
   12d04:	bl	112f4 <printf@plt>
   12d08:	ldr	r0, [fp, #32]
   12d0c:	movw	r1, #0
   12d10:	cmp	r0, r1
   12d14:	beq	12d6c <__assert_fail@plt+0x1790>
   12d18:	ldr	r0, [fp, #32]
   12d1c:	movw	r1, #10
   12d20:	bl	114bc <strchr@plt>
   12d24:	movw	r1, #0
   12d28:	cmp	r0, r1
   12d2c:	beq	12d48 <__assert_fail@plt+0x176c>
   12d30:	ldr	r2, [fp, #32]
   12d34:	movw	r0, #0
   12d38:	movw	r1, #3
   12d3c:	bl	17140 <__assert_fail@plt+0x5b64>
   12d40:	str	r0, [sp, #4]
   12d44:	b	12d50 <__assert_fail@plt+0x1774>
   12d48:	ldr	r0, [fp, #32]
   12d4c:	str	r0, [sp, #4]
   12d50:	ldr	r0, [sp, #4]
   12d54:	movw	r1, #60291	; 0xeb83
   12d58:	movt	r1, #1
   12d5c:	str	r0, [sp]
   12d60:	mov	r0, r1
   12d64:	ldr	r1, [sp]
   12d68:	bl	112f4 <printf@plt>
   12d6c:	movw	r0, #10
   12d70:	bl	115d0 <putchar_unlocked@plt>
   12d74:	sub	sp, fp, #24
   12d78:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12d7c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12d80:	add	fp, sp, #24
   12d84:	sub	sp, sp, #304	; 0x130
   12d88:	sub	sp, sp, #16384	; 0x4000
   12d8c:	ldr	r3, [fp, #12]
   12d90:	ldr	ip, [fp, #8]
   12d94:	str	r0, [fp, #-32]	; 0xffffffe0
   12d98:	str	r1, [fp, #-36]	; 0xffffffdc
   12d9c:	str	r2, [fp, #-40]	; 0xffffffd8
   12da0:	str	r3, [fp, #-44]	; 0xffffffd4
   12da4:	str	ip, [fp, #-48]	; 0xffffffd0
   12da8:	movw	r0, #1
   12dac:	strb	r0, [fp, #-49]	; 0xffffffcf
   12db0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12db4:	movw	r1, #0
   12db8:	cmp	r0, r1
   12dbc:	beq	12dcc <__assert_fail@plt+0x17f0>
   12dc0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12dc4:	str	r0, [sp, #128]	; 0x80
   12dc8:	b	12ddc <__assert_fail@plt+0x1800>
   12dcc:	movw	r0, #60025	; 0xea79
   12dd0:	movt	r0, #1
   12dd4:	bl	114a4 <gettext@plt>
   12dd8:	str	r0, [sp, #128]	; 0x80
   12ddc:	ldr	r0, [sp, #128]	; 0x80
   12de0:	str	r0, [sp, #224]	; 0xe0
   12de4:	mov	r0, #0
   12de8:	str	r0, [sp, #236]	; 0xec
   12dec:	str	r0, [sp, #232]	; 0xe8
   12df0:	str	r0, [sp, #244]	; 0xf4
   12df4:	str	r0, [sp, #240]	; 0xf0
   12df8:	str	r0, [sp, #252]	; 0xfc
   12dfc:	str	r0, [sp, #248]	; 0xf8
   12e00:	str	r0, [sp, #260]	; 0x104
   12e04:	str	r0, [sp, #256]	; 0x100
   12e08:	str	r0, [sp, #268]	; 0x10c
   12e0c:	str	r0, [sp, #264]	; 0x108
   12e10:	bl	113d8 <__ctype_get_mb_cur_max@plt>
   12e14:	cmp	r0, #1
   12e18:	bls	12e48 <__assert_fail@plt+0x186c>
   12e1c:	movw	r0, #421	; 0x1a5
   12e20:	movt	r0, #3
   12e24:	ldrb	r0, [r0]
   12e28:	and	r0, r0, #1
   12e2c:	strb	r0, [sp, #231]	; 0xe7
   12e30:	movw	r0, #422	; 0x1a6
   12e34:	movt	r0, #3
   12e38:	ldrb	r0, [r0]
   12e3c:	and	r0, r0, #1
   12e40:	strb	r0, [sp, #230]	; 0xe6
   12e44:	b	12e88 <__assert_fail@plt+0x18ac>
   12e48:	movw	r0, #421	; 0x1a5
   12e4c:	movt	r0, #3
   12e50:	ldrb	r0, [r0]
   12e54:	tst	r0, #1
   12e58:	movw	r0, #1
   12e5c:	str	r0, [sp, #124]	; 0x7c
   12e60:	bne	12e74 <__assert_fail@plt+0x1898>
   12e64:	movw	r0, #422	; 0x1a6
   12e68:	movt	r0, #3
   12e6c:	ldrb	r0, [r0]
   12e70:	str	r0, [sp, #124]	; 0x7c
   12e74:	ldr	r0, [sp, #124]	; 0x7c
   12e78:	and	r0, r0, #1
   12e7c:	strb	r0, [sp, #231]	; 0xe7
   12e80:	movw	r0, #0
   12e84:	strb	r0, [sp, #230]	; 0xe6
   12e88:	movw	r0, #423	; 0x1a7
   12e8c:	movt	r0, #3
   12e90:	ldrb	r0, [r0]
   12e94:	tst	r0, #1
   12e98:	movw	r0, #1
   12e9c:	str	r0, [sp, #120]	; 0x78
   12ea0:	bne	12eb4 <__assert_fail@plt+0x18d8>
   12ea4:	movw	r0, #425	; 0x1a9
   12ea8:	movt	r0, #3
   12eac:	ldrb	r0, [r0]
   12eb0:	str	r0, [sp, #120]	; 0x78
   12eb4:	ldr	r0, [sp, #120]	; 0x78
   12eb8:	and	r0, r0, #1
   12ebc:	strb	r0, [sp, #229]	; 0xe5
   12ec0:	ldrb	r0, [sp, #231]	; 0xe7
   12ec4:	tst	r0, #1
   12ec8:	beq	12ef8 <__assert_fail@plt+0x191c>
   12ecc:	ldrb	r0, [sp, #230]	; 0xe6
   12ed0:	tst	r0, #1
   12ed4:	bne	12ef8 <__assert_fail@plt+0x191c>
   12ed8:	movw	r0, #424	; 0x1a8
   12edc:	movt	r0, #3
   12ee0:	ldrb	r0, [r0]
   12ee4:	tst	r0, #1
   12ee8:	bne	12ef8 <__assert_fail@plt+0x191c>
   12eec:	ldrb	r0, [sp, #229]	; 0xe5
   12ef0:	tst	r0, #1
   12ef4:	beq	12f20 <__assert_fail@plt+0x1944>
   12ef8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12efc:	mov	r1, sp
   12f00:	mov	r2, #2
   12f04:	str	r2, [r1, #8]
   12f08:	mov	r2, #0
   12f0c:	str	r2, [r1, #4]
   12f10:	str	r2, [r1]
   12f14:	str	r2, [sp, #116]	; 0x74
   12f18:	ldr	r3, [sp, #116]	; 0x74
   12f1c:	bl	144a8 <__assert_fail@plt+0x2ecc>
   12f20:	ldrb	r0, [sp, #231]	; 0xe7
   12f24:	tst	r0, #1
   12f28:	beq	13264 <__assert_fail@plt+0x1c88>
   12f2c:	ldrb	r0, [sp, #230]	; 0xe6
   12f30:	tst	r0, #1
   12f34:	bne	13264 <__assert_fail@plt+0x1c88>
   12f38:	movw	r0, #424	; 0x1a8
   12f3c:	movt	r0, #3
   12f40:	ldrb	r0, [r0]
   12f44:	tst	r0, #1
   12f48:	bne	13264 <__assert_fail@plt+0x1c88>
   12f4c:	ldrb	r0, [sp, #229]	; 0xe5
   12f50:	tst	r0, #1
   12f54:	bne	13264 <__assert_fail@plt+0x1c88>
   12f58:	movw	r0, #0
   12f5c:	strb	r0, [sp, #223]	; 0xdf
   12f60:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12f64:	ldr	r0, [r0]
   12f68:	movw	r1, #0
   12f6c:	cmp	r1, r0
   12f70:	bge	12f8c <__assert_fail@plt+0x19b0>
   12f74:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12f78:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12f7c:	add	r1, r1, #8
   12f80:	bl	1e328 <_obstack_memory_used@@Base+0x2234>
   12f84:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12f88:	str	r0, [r1]
   12f8c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12f90:	ldr	r0, [r0]
   12f94:	cmp	r0, #0
   12f98:	bne	13190 <__assert_fail@plt+0x1bb4>
   12f9c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12fa0:	add	r0, r0, #8
   12fa4:	bl	13cec <__assert_fail@plt+0x2710>
   12fa8:	tst	r0, #1
   12fac:	beq	13190 <__assert_fail@plt+0x1bb4>
   12fb0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12fb4:	ldr	r0, [r0, #60]	; 0x3c
   12fb8:	cmp	r0, #0
   12fbc:	bmi	13190 <__assert_fail@plt+0x1bb4>
   12fc0:	b	12fc4 <__assert_fail@plt+0x19e8>
   12fc4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12fc8:	ldr	r0, [r0, #56]	; 0x38
   12fcc:	str	r0, [sp, #216]	; 0xd8
   12fd0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12fd4:	cmn	r0, #1
   12fd8:	bgt	13008 <__assert_fail@plt+0x1a2c>
   12fdc:	b	12fe0 <__assert_fail@plt+0x1a04>
   12fe0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12fe4:	mov	r1, sp
   12fe8:	mov	r2, #1
   12fec:	str	r2, [r1]
   12ff0:	mov	r1, #0
   12ff4:	mov	r2, r1
   12ff8:	mov	r3, r1
   12ffc:	bl	113cc <lseek64@plt>
   13000:	str	r1, [fp, #-44]	; 0xffffffd4
   13004:	str	r0, [fp, #-48]	; 0xffffffd0
   13008:	ldr	r0, [sp, #216]	; 0xd8
   1300c:	movw	r1, #416	; 0x1a0
   13010:	movt	r1, #3
   13014:	ldr	r1, [r1]
   13018:	udiv	r2, r0, r1
   1301c:	mls	r0, r2, r1, r0
   13020:	cmp	r0, #0
   13024:	beq	13094 <__assert_fail@plt+0x1ab8>
   13028:	ldr	r0, [sp, #216]	; 0xd8
   1302c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   13030:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13034:	subs	r0, r0, r1
   13038:	rscs	r1, r2, #0
   1303c:	bge	13058 <__assert_fail@plt+0x1a7c>
   13040:	b	13044 <__assert_fail@plt+0x1a68>
   13044:	mov	r0, #0
   13048:	mov	r1, r0
   1304c:	str	r1, [sp, #112]	; 0x70
   13050:	str	r0, [sp, #108]	; 0x6c
   13054:	b	13078 <__assert_fail@plt+0x1a9c>
   13058:	ldr	r0, [sp, #216]	; 0xd8
   1305c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   13060:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13064:	subs	r0, r0, r1
   13068:	rsc	r1, r2, #0
   1306c:	str	r0, [sp, #112]	; 0x70
   13070:	str	r1, [sp, #108]	; 0x6c
   13074:	b	13078 <__assert_fail@plt+0x1a9c>
   13078:	ldr	r0, [sp, #108]	; 0x6c
   1307c:	ldr	r1, [sp, #112]	; 0x70
   13080:	str	r1, [sp, #240]	; 0xf0
   13084:	str	r0, [sp, #244]	; 0xf4
   13088:	movw	r0, #1
   1308c:	strb	r0, [sp, #223]	; 0xdf
   13090:	b	1318c <__assert_fail@plt+0x1bb0>
   13094:	ldr	r0, [sp, #216]	; 0xd8
   13098:	ldr	r1, [sp, #216]	; 0xd8
   1309c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   130a0:	ldr	r2, [r2, #64]	; 0x40
   130a4:	movw	r3, #0
   130a8:	cmp	r3, r2
   130ac:	str	r0, [sp, #104]	; 0x68
   130b0:	str	r1, [sp, #100]	; 0x64
   130b4:	bge	130d8 <__assert_fail@plt+0x1afc>
   130b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   130bc:	ldr	r0, [r0, #64]	; 0x40
   130c0:	cmp	r0, #536870912	; 0x20000000
   130c4:	bhi	130d8 <__assert_fail@plt+0x1afc>
   130c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   130cc:	ldr	r0, [r0, #64]	; 0x40
   130d0:	str	r0, [sp, #96]	; 0x60
   130d4:	b	130e4 <__assert_fail@plt+0x1b08>
   130d8:	movw	r0, #512	; 0x200
   130dc:	str	r0, [sp, #96]	; 0x60
   130e0:	b	130e4 <__assert_fail@plt+0x1b08>
   130e4:	ldr	r0, [sp, #96]	; 0x60
   130e8:	add	r0, r0, #1
   130ec:	ldr	r1, [sp, #100]	; 0x64
   130f0:	udiv	r2, r1, r0
   130f4:	mul	r0, r2, r0
   130f8:	sub	r0, r0, r1
   130fc:	ldr	r2, [sp, #104]	; 0x68
   13100:	add	r0, r2, r0
   13104:	mov	r3, #0
   13108:	str	r3, [sp, #212]	; 0xd4
   1310c:	str	r0, [sp, #208]	; 0xd0
   13110:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13114:	cmp	r0, #0
   13118:	bmi	13188 <__assert_fail@plt+0x1bac>
   1311c:	b	13120 <__assert_fail@plt+0x1b44>
   13120:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13124:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13128:	ldr	r2, [sp, #208]	; 0xd0
   1312c:	ldr	r3, [sp, #212]	; 0xd4
   13130:	subs	r0, r0, r2
   13134:	sbcs	r1, r1, r3
   13138:	bge	13188 <__assert_fail@plt+0x1bac>
   1313c:	b	13140 <__assert_fail@plt+0x1b64>
   13140:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13144:	ldr	r2, [sp, #208]	; 0xd0
   13148:	ldr	r3, [sp, #212]	; 0xd4
   1314c:	mov	r1, sp
   13150:	mov	ip, #1
   13154:	str	ip, [r1]
   13158:	bl	113cc <lseek64@plt>
   1315c:	cmp	r1, #0
   13160:	bmi	13188 <__assert_fail@plt+0x1bac>
   13164:	b	13168 <__assert_fail@plt+0x1b8c>
   13168:	ldr	r0, [sp, #208]	; 0xd0
   1316c:	ldr	r1, [sp, #212]	; 0xd4
   13170:	ldr	r2, [fp, #-48]	; 0xffffffd0
   13174:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13178:	subs	r0, r0, r2
   1317c:	sbc	r1, r1, r3
   13180:	str	r0, [sp, #240]	; 0xf0
   13184:	str	r1, [sp, #244]	; 0xf4
   13188:	b	1318c <__assert_fail@plt+0x1bb0>
   1318c:	b	13190 <__assert_fail@plt+0x1bb4>
   13190:	ldrb	r0, [sp, #223]	; 0xdf
   13194:	tst	r0, #1
   13198:	bne	13260 <__assert_fail@plt+0x1c84>
   1319c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   131a0:	mov	r1, sp
   131a4:	mov	r2, #2
   131a8:	str	r2, [r1, #8]
   131ac:	mov	r2, #0
   131b0:	str	r2, [r1, #4]
   131b4:	str	r2, [r1]
   131b8:	str	r2, [sp, #92]	; 0x5c
   131bc:	ldr	r3, [sp, #92]	; 0x5c
   131c0:	bl	144a8 <__assert_fail@plt+0x2ecc>
   131c4:	add	lr, sp, #256	; 0x100
   131c8:	add	r1, lr, #22
   131cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   131d0:	movw	r2, #16384	; 0x4000
   131d4:	bl	17c80 <__assert_fail@plt+0x66a4>
   131d8:	str	r0, [sp, #272]	; 0x110
   131dc:	cmp	r0, #0
   131e0:	bls	1325c <__assert_fail@plt+0x1c80>
   131e4:	ldr	r0, [sp, #272]	; 0x110
   131e8:	cmn	r0, #1
   131ec:	bne	1323c <__assert_fail@plt+0x1c60>
   131f0:	bl	114e0 <__errno_location@plt>
   131f4:	ldr	r1, [r0]
   131f8:	ldr	r2, [sp, #224]	; 0xe0
   131fc:	movw	r0, #0
   13200:	movw	r3, #3
   13204:	str	r1, [sp, #88]	; 0x58
   13208:	mov	r1, r3
   1320c:	bl	17140 <__assert_fail@plt+0x5b64>
   13210:	movw	r1, #0
   13214:	str	r0, [sp, #84]	; 0x54
   13218:	mov	r0, r1
   1321c:	ldr	r1, [sp, #88]	; 0x58
   13220:	movw	r2, #60292	; 0xeb84
   13224:	movt	r2, #1
   13228:	ldr	r3, [sp, #84]	; 0x54
   1322c:	bl	11408 <error@plt>
   13230:	movw	r0, #0
   13234:	strb	r0, [fp, #-49]	; 0xffffffcf
   13238:	b	1325c <__assert_fail@plt+0x1c80>
   1323c:	ldr	r0, [sp, #272]	; 0x110
   13240:	ldr	r1, [sp, #240]	; 0xf0
   13244:	ldr	r2, [sp, #244]	; 0xf4
   13248:	adds	r0, r1, r0
   1324c:	adc	r1, r2, #0
   13250:	str	r0, [sp, #240]	; 0xf0
   13254:	str	r1, [sp, #244]	; 0xf4
   13258:	b	131c4 <__assert_fail@plt+0x1be8>
   1325c:	b	13260 <__assert_fail@plt+0x1c84>
   13260:	b	13b7c <__assert_fail@plt+0x25a0>
   13264:	ldrb	r0, [sp, #230]	; 0xe6
   13268:	tst	r0, #1
   1326c:	bne	132b8 <__assert_fail@plt+0x1cdc>
   13270:	ldrb	r0, [sp, #229]	; 0xe5
   13274:	tst	r0, #1
   13278:	bne	132b8 <__assert_fail@plt+0x1cdc>
   1327c:	movw	r0, #296	; 0x128
   13280:	movt	r0, #3
   13284:	ldr	r0, [r0]
   13288:	ldr	r1, [sp, #224]	; 0xe0
   1328c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13290:	str	r0, [sp, #80]	; 0x50
   13294:	mov	r0, r1
   13298:	mov	r1, r2
   1329c:	add	r2, sp, #264	; 0x108
   132a0:	add	r3, sp, #240	; 0xf0
   132a4:	ldr	ip, [sp, #80]	; 0x50
   132a8:	blx	ip
   132ac:	and	r0, r0, #1
   132b0:	strb	r0, [fp, #-49]	; 0xffffffcf
   132b4:	b	13b78 <__assert_fail@plt+0x259c>
   132b8:	bl	113d8 <__ctype_get_mb_cur_max@plt>
   132bc:	cmp	r0, #1
   132c0:	bls	13840 <__assert_fail@plt+0x2264>
   132c4:	mov	r0, #0
   132c8:	strb	r0, [sp, #207]	; 0xcf
   132cc:	str	r0, [sp, #196]	; 0xc4
   132d0:	str	r0, [sp, #192]	; 0xc0
   132d4:	add	r0, sp, #184	; 0xb8
   132d8:	movw	r1, #0
   132dc:	and	r2, r1, #255	; 0xff
   132e0:	str	r1, [sp, #76]	; 0x4c
   132e4:	mov	r1, r2
   132e8:	movw	r2, #8
   132ec:	bl	11504 <memset@plt>
   132f0:	ldr	r0, [sp, #76]	; 0x4c
   132f4:	strb	r0, [sp, #183]	; 0xb7
   132f8:	movw	r1, #0
   132fc:	str	r1, [sp, #176]	; 0xb0
   13300:	add	lr, sp, #256	; 0x100
   13304:	add	r0, lr, #22
   13308:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1330c:	ldr	r2, [sp, #176]	; 0xb0
   13310:	add	r0, r0, r2
   13314:	ldr	r2, [sp, #176]	; 0xb0
   13318:	movw	r3, #16384	; 0x4000
   1331c:	sub	r2, r3, r2
   13320:	str	r0, [sp, #72]	; 0x48
   13324:	mov	r0, r1
   13328:	ldr	r1, [sp, #72]	; 0x48
   1332c:	bl	17c80 <__assert_fail@plt+0x66a4>
   13330:	str	r0, [sp, #272]	; 0x110
   13334:	cmp	r0, #0
   13338:	bls	137ec <__assert_fail@plt+0x2210>
   1333c:	ldr	r0, [sp, #272]	; 0x110
   13340:	cmn	r0, #1
   13344:	bne	13394 <__assert_fail@plt+0x1db8>
   13348:	bl	114e0 <__errno_location@plt>
   1334c:	ldr	r1, [r0]
   13350:	ldr	r2, [sp, #224]	; 0xe0
   13354:	movw	r0, #0
   13358:	movw	r3, #3
   1335c:	str	r1, [sp, #68]	; 0x44
   13360:	mov	r1, r3
   13364:	bl	17140 <__assert_fail@plt+0x5b64>
   13368:	movw	r1, #0
   1336c:	str	r0, [sp, #64]	; 0x40
   13370:	mov	r0, r1
   13374:	ldr	r1, [sp, #68]	; 0x44
   13378:	movw	r2, #60292	; 0xeb84
   1337c:	movt	r2, #1
   13380:	ldr	r3, [sp, #64]	; 0x40
   13384:	bl	11408 <error@plt>
   13388:	movw	r0, #0
   1338c:	strb	r0, [fp, #-49]	; 0xffffffcf
   13390:	b	137ec <__assert_fail@plt+0x2210>
   13394:	add	lr, sp, #256	; 0x100
   13398:	add	r0, lr, #22
   1339c:	ldr	r1, [sp, #272]	; 0x110
   133a0:	ldr	r2, [sp, #240]	; 0xf0
   133a4:	ldr	r3, [sp, #244]	; 0xf4
   133a8:	adds	r1, r2, r1
   133ac:	adc	r2, r3, #0
   133b0:	str	r1, [sp, #240]	; 0xf0
   133b4:	str	r2, [sp, #244]	; 0xf4
   133b8:	str	r0, [sp, #172]	; 0xac
   133bc:	ldr	r0, [sp, #176]	; 0xb0
   133c0:	ldr	r1, [sp, #272]	; 0x110
   133c4:	add	r0, r1, r0
   133c8:	str	r0, [sp, #272]	; 0x110
   133cc:	movw	r0, #1
   133d0:	strb	r0, [sp, #155]	; 0x9b
   133d4:	ldrb	r0, [sp, #183]	; 0xb7
   133d8:	tst	r0, #1
   133dc:	bne	13414 <__assert_fail@plt+0x1e38>
   133e0:	ldr	r0, [sp, #172]	; 0xac
   133e4:	ldrb	r0, [r0]
   133e8:	bl	14a88 <__assert_fail@plt+0x34ac>
   133ec:	tst	r0, #1
   133f0:	beq	13414 <__assert_fail@plt+0x1e38>
   133f4:	movw	r0, #1
   133f8:	str	r0, [sp, #156]	; 0x9c
   133fc:	ldr	r0, [sp, #172]	; 0xac
   13400:	ldrb	r0, [r0]
   13404:	str	r0, [sp, #160]	; 0xa0
   13408:	movw	r0, #0
   1340c:	strb	r0, [sp, #155]	; 0x9b
   13410:	b	134c8 <__assert_fail@plt+0x1eec>
   13414:	movw	r0, #1
   13418:	strb	r0, [sp, #183]	; 0xb7
   1341c:	ldr	r0, [sp, #184]	; 0xb8
   13420:	str	r0, [sp, #164]	; 0xa4
   13424:	ldr	r0, [sp, #188]	; 0xbc
   13428:	str	r0, [sp, #168]	; 0xa8
   1342c:	ldr	r1, [sp, #172]	; 0xac
   13430:	ldr	r2, [sp, #272]	; 0x110
   13434:	add	r0, sp, #160	; 0xa0
   13438:	add	r3, sp, #184	; 0xb8
   1343c:	bl	14ad8 <__assert_fail@plt+0x34fc>
   13440:	str	r0, [sp, #156]	; 0x9c
   13444:	ldr	r0, [sp, #156]	; 0x9c
   13448:	cmn	r0, #2
   1344c:	bne	13464 <__assert_fail@plt+0x1e88>
   13450:	ldr	r0, [sp, #164]	; 0xa4
   13454:	str	r0, [sp, #184]	; 0xb8
   13458:	ldr	r0, [sp, #168]	; 0xa8
   1345c:	str	r0, [sp, #188]	; 0xbc
   13460:	b	13798 <__assert_fail@plt+0x21bc>
   13464:	ldr	r0, [sp, #156]	; 0x9c
   13468:	cmn	r0, #1
   1346c:	bne	13490 <__assert_fail@plt+0x1eb4>
   13470:	ldr	r0, [sp, #172]	; 0xac
   13474:	add	r0, r0, #1
   13478:	str	r0, [sp, #172]	; 0xac
   1347c:	ldr	r0, [sp, #272]	; 0x110
   13480:	mvn	r1, #0
   13484:	add	r0, r0, r1
   13488:	str	r0, [sp, #272]	; 0x110
   1348c:	b	1378c <__assert_fail@plt+0x21b0>
   13490:	add	r0, sp, #184	; 0xb8
   13494:	bl	11360 <mbsinit@plt>
   13498:	cmp	r0, #0
   1349c:	beq	134a8 <__assert_fail@plt+0x1ecc>
   134a0:	movw	r0, #0
   134a4:	strb	r0, [sp, #183]	; 0xb7
   134a8:	ldr	r0, [sp, #156]	; 0x9c
   134ac:	cmp	r0, #0
   134b0:	bne	134c4 <__assert_fail@plt+0x1ee8>
   134b4:	movw	r0, #0
   134b8:	str	r0, [sp, #160]	; 0xa0
   134bc:	movw	r0, #1
   134c0:	str	r0, [sp, #156]	; 0x9c
   134c4:	b	134c8 <__assert_fail@plt+0x1eec>
   134c8:	ldr	r0, [sp, #160]	; 0xa0
   134cc:	sub	r0, r0, #9
   134d0:	cmp	r0, #23
   134d4:	str	r0, [sp, #60]	; 0x3c
   134d8:	bhi	13614 <__assert_fail@plt+0x2038>
   134dc:	add	r0, pc, #8
   134e0:	ldr	r1, [sp, #60]	; 0x3c
   134e4:	ldr	r0, [r0, r1, lsl #2]
   134e8:	mov	pc, r0
   134ec:	andeq	r3, r1, r4, lsr #11
   134f0:	andeq	r3, r1, ip, asr #10
   134f4:	andeq	r3, r1, r4, ror #11
   134f8:	andeq	r3, r1, r4, ror #10
   134fc:	andeq	r3, r1, r4, ror #10
   13500:	andeq	r3, r1, r4, lsl r6
   13504:	andeq	r3, r1, r4, lsl r6
   13508:	andeq	r3, r1, r4, lsl r6
   1350c:	andeq	r3, r1, r4, lsl r6
   13510:	andeq	r3, r1, r4, lsl r6
   13514:	andeq	r3, r1, r4, lsl r6
   13518:	andeq	r3, r1, r4, lsl r6
   1351c:	andeq	r3, r1, r4, lsl r6
   13520:	andeq	r3, r1, r4, lsl r6
   13524:	andeq	r3, r1, r4, lsl r6
   13528:	andeq	r3, r1, r4, lsl r6
   1352c:	andeq	r3, r1, r4, lsl r6
   13530:	andeq	r3, r1, r4, lsl r6
   13534:	andeq	r3, r1, r4, lsl r6
   13538:	andeq	r3, r1, r4, lsl r6
   1353c:	andeq	r3, r1, r4, lsl r6
   13540:	andeq	r3, r1, r4, lsl r6
   13544:	andeq	r3, r1, r4, lsl r6
   13548:	andeq	r3, r1, ip, asr #11
   1354c:	ldr	r0, [sp, #264]	; 0x108
   13550:	ldr	r1, [sp, #268]	; 0x10c
   13554:	adds	r0, r0, #1
   13558:	adc	r1, r1, #0
   1355c:	str	r0, [sp, #264]	; 0x108
   13560:	str	r1, [sp, #268]	; 0x10c
   13564:	ldr	r0, [sp, #192]	; 0xc0
   13568:	ldr	r1, [sp, #196]	; 0xc4
   1356c:	ldr	r2, [sp, #232]	; 0xe8
   13570:	ldr	r3, [sp, #236]	; 0xec
   13574:	subs	r0, r2, r0
   13578:	sbcs	r1, r3, r1
   1357c:	bcs	13594 <__assert_fail@plt+0x1fb8>
   13580:	b	13584 <__assert_fail@plt+0x1fa8>
   13584:	ldr	r0, [sp, #192]	; 0xc0
   13588:	ldr	r1, [sp, #196]	; 0xc4
   1358c:	str	r1, [sp, #236]	; 0xec
   13590:	str	r0, [sp, #232]	; 0xe8
   13594:	mov	r0, #0
   13598:	str	r0, [sp, #196]	; 0xc4
   1359c:	str	r0, [sp, #192]	; 0xc0
   135a0:	b	135e8 <__assert_fail@plt+0x200c>
   135a4:	ldr	r0, [sp, #192]	; 0xc0
   135a8:	ldr	r1, [sp, #196]	; 0xc4
   135ac:	and	r2, r0, #7
   135b0:	subs	r0, r0, r2
   135b4:	sbc	r1, r1, #0
   135b8:	adds	r0, r0, #8
   135bc:	adc	r1, r1, #0
   135c0:	str	r0, [sp, #192]	; 0xc0
   135c4:	str	r1, [sp, #196]	; 0xc4
   135c8:	b	135e8 <__assert_fail@plt+0x200c>
   135cc:	ldr	r0, [sp, #192]	; 0xc0
   135d0:	ldr	r1, [sp, #196]	; 0xc4
   135d4:	adds	r0, r0, #1
   135d8:	adc	r1, r1, #0
   135dc:	str	r0, [sp, #192]	; 0xc0
   135e0:	str	r1, [sp, #196]	; 0xc4
   135e4:	b	135e8 <__assert_fail@plt+0x200c>
   135e8:	ldrb	r0, [sp, #207]	; 0xcf
   135ec:	and	r0, r0, #1
   135f0:	ldr	r1, [sp, #256]	; 0x100
   135f4:	ldr	r2, [sp, #260]	; 0x104
   135f8:	adds	r0, r1, r0
   135fc:	adc	r1, r2, #0
   13600:	str	r0, [sp, #256]	; 0x100
   13604:	str	r1, [sp, #260]	; 0x104
   13608:	movw	r0, #0
   1360c:	strb	r0, [sp, #207]	; 0xcf
   13610:	b	13754 <__assert_fail@plt+0x2178>
   13614:	ldrb	r0, [sp, #155]	; 0x9b
   13618:	tst	r0, #1
   1361c:	beq	136ac <__assert_fail@plt+0x20d0>
   13620:	ldr	r0, [sp, #160]	; 0xa0
   13624:	bl	113b4 <iswprint@plt>
   13628:	cmp	r0, #0
   1362c:	beq	136ac <__assert_fail@plt+0x20d0>
   13630:	movw	r0, #425	; 0x1a9
   13634:	movt	r0, #3
   13638:	ldrb	r0, [r0]
   1363c:	tst	r0, #1
   13640:	beq	1367c <__assert_fail@plt+0x20a0>
   13644:	ldr	r0, [sp, #160]	; 0xa0
   13648:	bl	11318 <wcwidth@plt>
   1364c:	str	r0, [sp, #148]	; 0x94
   13650:	ldr	r0, [sp, #148]	; 0x94
   13654:	cmp	r0, #0
   13658:	ble	13678 <__assert_fail@plt+0x209c>
   1365c:	ldr	r0, [sp, #148]	; 0x94
   13660:	ldr	r1, [sp, #192]	; 0xc0
   13664:	ldr	r2, [sp, #196]	; 0xc4
   13668:	adds	r1, r1, r0
   1366c:	adc	r0, r2, r0, asr #31
   13670:	str	r1, [sp, #192]	; 0xc0
   13674:	str	r0, [sp, #196]	; 0xc4
   13678:	b	1367c <__assert_fail@plt+0x20a0>
   1367c:	ldr	r0, [sp, #160]	; 0xa0
   13680:	bl	11498 <iswspace@plt>
   13684:	cmp	r0, #0
   13688:	bne	1369c <__assert_fail@plt+0x20c0>
   1368c:	ldr	r0, [sp, #160]	; 0xa0
   13690:	bl	13d6c <__assert_fail@plt+0x2790>
   13694:	cmp	r0, #0
   13698:	beq	136a0 <__assert_fail@plt+0x20c4>
   1369c:	b	135e8 <__assert_fail@plt+0x200c>
   136a0:	movw	r0, #1
   136a4:	strb	r0, [sp, #207]	; 0xcf
   136a8:	b	13750 <__assert_fail@plt+0x2174>
   136ac:	ldrb	r0, [sp, #155]	; 0x9b
   136b0:	tst	r0, #1
   136b4:	bne	1374c <__assert_fail@plt+0x2170>
   136b8:	bl	11474 <__ctype_b_loc@plt>
   136bc:	ldr	r0, [r0]
   136c0:	ldr	r1, [sp, #172]	; 0xac
   136c4:	ldrb	r1, [r1]
   136c8:	str	r0, [sp, #56]	; 0x38
   136cc:	mov	r0, r1
   136d0:	bl	13e04 <__assert_fail@plt+0x2828>
   136d4:	mov	r1, r0
   136d8:	ldr	r2, [sp, #56]	; 0x38
   136dc:	add	r0, r2, r0, lsl #1
   136e0:	ldrh	r0, [r0]
   136e4:	and	r0, r0, #16384	; 0x4000
   136e8:	cmp	r0, #0
   136ec:	beq	1374c <__assert_fail@plt+0x2170>
   136f0:	ldr	r0, [sp, #192]	; 0xc0
   136f4:	ldr	r1, [sp, #196]	; 0xc4
   136f8:	adds	r0, r0, #1
   136fc:	adc	r1, r1, #0
   13700:	str	r0, [sp, #192]	; 0xc0
   13704:	str	r1, [sp, #196]	; 0xc4
   13708:	bl	11474 <__ctype_b_loc@plt>
   1370c:	ldr	r0, [r0]
   13710:	ldr	r1, [sp, #172]	; 0xac
   13714:	ldrb	r1, [r1]
   13718:	str	r0, [sp, #52]	; 0x34
   1371c:	mov	r0, r1
   13720:	bl	13e04 <__assert_fail@plt+0x2828>
   13724:	mov	r1, r0
   13728:	ldr	r2, [sp, #52]	; 0x34
   1372c:	add	r0, r2, r0, lsl #1
   13730:	ldrh	r0, [r0]
   13734:	and	r0, r0, #8192	; 0x2000
   13738:	cmp	r0, #0
   1373c:	beq	13744 <__assert_fail@plt+0x2168>
   13740:	b	135e8 <__assert_fail@plt+0x200c>
   13744:	movw	r0, #1
   13748:	strb	r0, [sp, #207]	; 0xcf
   1374c:	b	13750 <__assert_fail@plt+0x2174>
   13750:	b	13754 <__assert_fail@plt+0x2178>
   13754:	ldr	r0, [sp, #156]	; 0x9c
   13758:	ldr	r1, [sp, #172]	; 0xac
   1375c:	add	r0, r1, r0
   13760:	str	r0, [sp, #172]	; 0xac
   13764:	ldr	r0, [sp, #156]	; 0x9c
   13768:	ldr	r1, [sp, #272]	; 0x110
   1376c:	sub	r0, r1, r0
   13770:	str	r0, [sp, #272]	; 0x110
   13774:	ldr	r0, [sp, #248]	; 0xf8
   13778:	ldr	r1, [sp, #252]	; 0xfc
   1377c:	adds	r0, r0, #1
   13780:	adc	r1, r1, #0
   13784:	str	r0, [sp, #248]	; 0xf8
   13788:	str	r1, [sp, #252]	; 0xfc
   1378c:	ldr	r0, [sp, #272]	; 0x110
   13790:	cmp	r0, #0
   13794:	bhi	133cc <__assert_fail@plt+0x1df0>
   13798:	ldr	r0, [sp, #272]	; 0x110
   1379c:	cmp	r0, #0
   137a0:	bls	137e0 <__assert_fail@plt+0x2204>
   137a4:	ldr	r0, [sp, #272]	; 0x110
   137a8:	cmp	r0, #16384	; 0x4000
   137ac:	bne	137cc <__assert_fail@plt+0x21f0>
   137b0:	ldr	r0, [sp, #172]	; 0xac
   137b4:	add	r0, r0, #1
   137b8:	str	r0, [sp, #172]	; 0xac
   137bc:	ldr	r0, [sp, #272]	; 0x110
   137c0:	mvn	r1, #0
   137c4:	add	r0, r0, r1
   137c8:	str	r0, [sp, #272]	; 0x110
   137cc:	add	lr, sp, #256	; 0x100
   137d0:	add	r0, lr, #22
   137d4:	ldr	r1, [sp, #172]	; 0xac
   137d8:	ldr	r2, [sp, #272]	; 0x110
   137dc:	bl	11324 <memmove@plt>
   137e0:	ldr	r0, [sp, #272]	; 0x110
   137e4:	str	r0, [sp, #176]	; 0xb0
   137e8:	b	13300 <__assert_fail@plt+0x1d24>
   137ec:	ldr	r0, [sp, #192]	; 0xc0
   137f0:	ldr	r1, [sp, #196]	; 0xc4
   137f4:	ldr	r2, [sp, #232]	; 0xe8
   137f8:	ldr	r3, [sp, #236]	; 0xec
   137fc:	subs	r0, r2, r0
   13800:	sbcs	r1, r3, r1
   13804:	bcs	1381c <__assert_fail@plt+0x2240>
   13808:	b	1380c <__assert_fail@plt+0x2230>
   1380c:	ldr	r0, [sp, #192]	; 0xc0
   13810:	ldr	r1, [sp, #196]	; 0xc4
   13814:	str	r1, [sp, #236]	; 0xec
   13818:	str	r0, [sp, #232]	; 0xe8
   1381c:	ldrb	r0, [sp, #207]	; 0xcf
   13820:	and	r0, r0, #1
   13824:	ldr	r1, [sp, #256]	; 0x100
   13828:	ldr	r2, [sp, #260]	; 0x104
   1382c:	adds	r0, r1, r0
   13830:	adc	r1, r2, #0
   13834:	str	r0, [sp, #256]	; 0x100
   13838:	str	r1, [sp, #260]	; 0x104
   1383c:	b	13b74 <__assert_fail@plt+0x2598>
   13840:	mov	r0, #0
   13844:	strb	r0, [sp, #147]	; 0x93
   13848:	str	r0, [sp, #140]	; 0x8c
   1384c:	str	r0, [sp, #136]	; 0x88
   13850:	add	lr, sp, #256	; 0x100
   13854:	add	r1, lr, #22
   13858:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1385c:	movw	r2, #16384	; 0x4000
   13860:	bl	17c80 <__assert_fail@plt+0x66a4>
   13864:	str	r0, [sp, #272]	; 0x110
   13868:	cmp	r0, #0
   1386c:	bls	13b24 <__assert_fail@plt+0x2548>
   13870:	add	lr, sp, #256	; 0x100
   13874:	add	r0, lr, #22
   13878:	str	r0, [sp, #132]	; 0x84
   1387c:	ldr	r0, [sp, #272]	; 0x110
   13880:	cmn	r0, #1
   13884:	bne	138d4 <__assert_fail@plt+0x22f8>
   13888:	bl	114e0 <__errno_location@plt>
   1388c:	ldr	r1, [r0]
   13890:	ldr	r2, [sp, #224]	; 0xe0
   13894:	movw	r0, #0
   13898:	movw	r3, #3
   1389c:	str	r1, [sp, #48]	; 0x30
   138a0:	mov	r1, r3
   138a4:	bl	17140 <__assert_fail@plt+0x5b64>
   138a8:	movw	r1, #0
   138ac:	str	r0, [sp, #44]	; 0x2c
   138b0:	mov	r0, r1
   138b4:	ldr	r1, [sp, #48]	; 0x30
   138b8:	movw	r2, #60292	; 0xeb84
   138bc:	movt	r2, #1
   138c0:	ldr	r3, [sp, #44]	; 0x2c
   138c4:	bl	11408 <error@plt>
   138c8:	movw	r0, #0
   138cc:	strb	r0, [fp, #-49]	; 0xffffffcf
   138d0:	b	13b24 <__assert_fail@plt+0x2548>
   138d4:	ldr	r0, [sp, #272]	; 0x110
   138d8:	ldr	r1, [sp, #240]	; 0xf0
   138dc:	ldr	r2, [sp, #244]	; 0xf4
   138e0:	adds	r0, r1, r0
   138e4:	adc	r1, r2, #0
   138e8:	str	r0, [sp, #240]	; 0xf0
   138ec:	str	r1, [sp, #244]	; 0xf4
   138f0:	ldr	r0, [sp, #132]	; 0x84
   138f4:	add	r1, r0, #1
   138f8:	str	r1, [sp, #132]	; 0x84
   138fc:	ldrb	r0, [r0]
   13900:	sub	r0, r0, #9
   13904:	cmp	r0, #23
   13908:	str	r0, [sp, #40]	; 0x28
   1390c:	bhi	13a48 <__assert_fail@plt+0x246c>
   13910:	add	r0, pc, #8
   13914:	ldr	r1, [sp, #40]	; 0x28
   13918:	ldr	r0, [r0, r1, lsl #2]
   1391c:	mov	pc, r0
   13920:	ldrdeq	r3, [r1], -r8
   13924:	andeq	r3, r1, r0, lsl #19
   13928:	andeq	r3, r1, r8, lsl sl
   1392c:	muleq	r1, r8, r9
   13930:	muleq	r1, r8, r9
   13934:	andeq	r3, r1, r8, asr #20
   13938:	andeq	r3, r1, r8, asr #20
   1393c:	andeq	r3, r1, r8, asr #20
   13940:	andeq	r3, r1, r8, asr #20
   13944:	andeq	r3, r1, r8, asr #20
   13948:	andeq	r3, r1, r8, asr #20
   1394c:	andeq	r3, r1, r8, asr #20
   13950:	andeq	r3, r1, r8, asr #20
   13954:	andeq	r3, r1, r8, asr #20
   13958:	andeq	r3, r1, r8, asr #20
   1395c:	andeq	r3, r1, r8, asr #20
   13960:	andeq	r3, r1, r8, asr #20
   13964:	andeq	r3, r1, r8, asr #20
   13968:	andeq	r3, r1, r8, asr #20
   1396c:	andeq	r3, r1, r8, asr #20
   13970:	andeq	r3, r1, r8, asr #20
   13974:	andeq	r3, r1, r8, asr #20
   13978:	andeq	r3, r1, r8, asr #20
   1397c:	andeq	r3, r1, r0, lsl #20
   13980:	ldr	r0, [sp, #264]	; 0x108
   13984:	ldr	r1, [sp, #268]	; 0x10c
   13988:	adds	r0, r0, #1
   1398c:	adc	r1, r1, #0
   13990:	str	r0, [sp, #264]	; 0x108
   13994:	str	r1, [sp, #268]	; 0x10c
   13998:	ldr	r0, [sp, #136]	; 0x88
   1399c:	ldr	r1, [sp, #140]	; 0x8c
   139a0:	ldr	r2, [sp, #232]	; 0xe8
   139a4:	ldr	r3, [sp, #236]	; 0xec
   139a8:	subs	r0, r2, r0
   139ac:	sbcs	r1, r3, r1
   139b0:	bcs	139c8 <__assert_fail@plt+0x23ec>
   139b4:	b	139b8 <__assert_fail@plt+0x23dc>
   139b8:	ldr	r0, [sp, #136]	; 0x88
   139bc:	ldr	r1, [sp, #140]	; 0x8c
   139c0:	str	r1, [sp, #236]	; 0xec
   139c4:	str	r0, [sp, #232]	; 0xe8
   139c8:	mov	r0, #0
   139cc:	str	r0, [sp, #140]	; 0x8c
   139d0:	str	r0, [sp, #136]	; 0x88
   139d4:	b	13a1c <__assert_fail@plt+0x2440>
   139d8:	ldr	r0, [sp, #136]	; 0x88
   139dc:	ldr	r1, [sp, #140]	; 0x8c
   139e0:	and	r2, r0, #7
   139e4:	subs	r0, r0, r2
   139e8:	sbc	r1, r1, #0
   139ec:	adds	r0, r0, #8
   139f0:	adc	r1, r1, #0
   139f4:	str	r0, [sp, #136]	; 0x88
   139f8:	str	r1, [sp, #140]	; 0x8c
   139fc:	b	13a1c <__assert_fail@plt+0x2440>
   13a00:	ldr	r0, [sp, #136]	; 0x88
   13a04:	ldr	r1, [sp, #140]	; 0x8c
   13a08:	adds	r0, r0, #1
   13a0c:	adc	r1, r1, #0
   13a10:	str	r0, [sp, #136]	; 0x88
   13a14:	str	r1, [sp, #140]	; 0x8c
   13a18:	b	13a1c <__assert_fail@plt+0x2440>
   13a1c:	ldrb	r0, [sp, #147]	; 0x93
   13a20:	and	r0, r0, #1
   13a24:	ldr	r1, [sp, #256]	; 0x100
   13a28:	ldr	r2, [sp, #260]	; 0x104
   13a2c:	adds	r0, r1, r0
   13a30:	adc	r1, r2, #0
   13a34:	str	r0, [sp, #256]	; 0x100
   13a38:	str	r1, [sp, #260]	; 0x104
   13a3c:	movw	r0, #0
   13a40:	strb	r0, [sp, #147]	; 0x93
   13a44:	b	13b04 <__assert_fail@plt+0x2528>
   13a48:	bl	11474 <__ctype_b_loc@plt>
   13a4c:	ldr	r0, [r0]
   13a50:	ldr	r1, [sp, #132]	; 0x84
   13a54:	ldrb	r1, [r1, #-1]
   13a58:	str	r0, [sp, #36]	; 0x24
   13a5c:	mov	r0, r1
   13a60:	bl	13e04 <__assert_fail@plt+0x2828>
   13a64:	mov	r1, r0
   13a68:	ldr	r2, [sp, #36]	; 0x24
   13a6c:	add	r0, r2, r0, lsl #1
   13a70:	ldrh	r0, [r0]
   13a74:	and	r0, r0, #16384	; 0x4000
   13a78:	cmp	r0, #0
   13a7c:	beq	13b00 <__assert_fail@plt+0x2524>
   13a80:	ldr	r0, [sp, #136]	; 0x88
   13a84:	ldr	r1, [sp, #140]	; 0x8c
   13a88:	adds	r0, r0, #1
   13a8c:	adc	r1, r1, #0
   13a90:	str	r0, [sp, #136]	; 0x88
   13a94:	str	r1, [sp, #140]	; 0x8c
   13a98:	bl	11474 <__ctype_b_loc@plt>
   13a9c:	ldr	r0, [r0]
   13aa0:	ldr	r1, [sp, #132]	; 0x84
   13aa4:	ldrb	r1, [r1, #-1]
   13aa8:	str	r0, [sp, #32]
   13aac:	mov	r0, r1
   13ab0:	bl	13e04 <__assert_fail@plt+0x2828>
   13ab4:	mov	r1, r0
   13ab8:	ldr	r2, [sp, #32]
   13abc:	add	r0, r2, r0, lsl #1
   13ac0:	ldrh	r0, [r0]
   13ac4:	and	r0, r0, #8192	; 0x2000
   13ac8:	cmp	r0, #0
   13acc:	bne	13af4 <__assert_fail@plt+0x2518>
   13ad0:	ldr	r0, [sp, #132]	; 0x84
   13ad4:	mvn	r1, #0
   13ad8:	add	r0, r0, r1
   13adc:	ldrb	r0, [r0]
   13ae0:	bl	13e04 <__assert_fail@plt+0x2828>
   13ae4:	and	r0, r0, #255	; 0xff
   13ae8:	bl	13e18 <__assert_fail@plt+0x283c>
   13aec:	cmp	r0, #0
   13af0:	beq	13af8 <__assert_fail@plt+0x251c>
   13af4:	b	13a1c <__assert_fail@plt+0x2440>
   13af8:	movw	r0, #1
   13afc:	strb	r0, [sp, #147]	; 0x93
   13b00:	b	13b04 <__assert_fail@plt+0x2528>
   13b04:	b	13b08 <__assert_fail@plt+0x252c>
   13b08:	ldr	r0, [sp, #272]	; 0x110
   13b0c:	mvn	r1, #0
   13b10:	add	r0, r0, r1
   13b14:	str	r0, [sp, #272]	; 0x110
   13b18:	cmp	r0, #0
   13b1c:	bne	138f0 <__assert_fail@plt+0x2314>
   13b20:	b	13850 <__assert_fail@plt+0x2274>
   13b24:	ldr	r0, [sp, #136]	; 0x88
   13b28:	ldr	r1, [sp, #140]	; 0x8c
   13b2c:	ldr	r2, [sp, #232]	; 0xe8
   13b30:	ldr	r3, [sp, #236]	; 0xec
   13b34:	subs	r0, r2, r0
   13b38:	sbcs	r1, r3, r1
   13b3c:	bcs	13b54 <__assert_fail@plt+0x2578>
   13b40:	b	13b44 <__assert_fail@plt+0x2568>
   13b44:	ldr	r0, [sp, #136]	; 0x88
   13b48:	ldr	r1, [sp, #140]	; 0x8c
   13b4c:	str	r1, [sp, #236]	; 0xec
   13b50:	str	r0, [sp, #232]	; 0xe8
   13b54:	ldrb	r0, [sp, #147]	; 0x93
   13b58:	and	r0, r0, #1
   13b5c:	ldr	r1, [sp, #256]	; 0x100
   13b60:	ldr	r2, [sp, #260]	; 0x104
   13b64:	adds	r0, r1, r0
   13b68:	adc	r1, r2, #0
   13b6c:	str	r0, [sp, #256]	; 0x100
   13b70:	str	r1, [sp, #260]	; 0x104
   13b74:	b	13b78 <__assert_fail@plt+0x259c>
   13b78:	b	13b7c <__assert_fail@plt+0x25a0>
   13b7c:	ldrb	r0, [sp, #230]	; 0xe6
   13b80:	and	r0, r0, #1
   13b84:	movw	r1, #422	; 0x1a6
   13b88:	movt	r1, #3
   13b8c:	ldrb	r1, [r1]
   13b90:	and	r1, r1, #1
   13b94:	cmp	r0, r1
   13b98:	bge	13bac <__assert_fail@plt+0x25d0>
   13b9c:	ldr	r0, [sp, #240]	; 0xf0
   13ba0:	ldr	r1, [sp, #244]	; 0xf4
   13ba4:	str	r1, [sp, #252]	; 0xfc
   13ba8:	str	r0, [sp, #248]	; 0xf8
   13bac:	ldr	r0, [sp, #264]	; 0x108
   13bb0:	ldr	r1, [sp, #268]	; 0x10c
   13bb4:	ldr	r2, [sp, #256]	; 0x100
   13bb8:	ldr	r3, [sp, #260]	; 0x104
   13bbc:	ldr	ip, [sp, #248]	; 0xf8
   13bc0:	ldr	lr, [sp, #252]	; 0xfc
   13bc4:	ldr	r4, [sp, #240]	; 0xf0
   13bc8:	ldr	r5, [sp, #244]	; 0xf4
   13bcc:	ldr	r6, [sp, #232]	; 0xe8
   13bd0:	ldr	r7, [sp, #236]	; 0xec
   13bd4:	ldr	r8, [fp, #-36]	; 0xffffffdc
   13bd8:	mov	r9, sp
   13bdc:	str	r8, [r9, #24]
   13be0:	str	r7, [r9, #20]
   13be4:	str	r6, [r9, #16]
   13be8:	str	r5, [r9, #12]
   13bec:	str	r4, [r9, #8]
   13bf0:	str	lr, [r9, #4]
   13bf4:	str	ip, [r9]
   13bf8:	bl	12aac <__assert_fail@plt+0x14d0>
   13bfc:	ldr	r0, [sp, #264]	; 0x108
   13c00:	ldr	r1, [sp, #268]	; 0x10c
   13c04:	movw	r2, #464	; 0x1d0
   13c08:	movt	r2, #3
   13c0c:	ldr	r3, [r2]
   13c10:	ldr	ip, [r2, #4]
   13c14:	adds	r0, r3, r0
   13c18:	adc	r1, ip, r1
   13c1c:	str	r0, [r2]
   13c20:	str	r1, [r2, #4]
   13c24:	ldr	r0, [sp, #256]	; 0x100
   13c28:	ldr	r1, [sp, #260]	; 0x104
   13c2c:	movw	r2, #456	; 0x1c8
   13c30:	movt	r2, #3
   13c34:	ldr	r3, [r2]
   13c38:	ldr	ip, [r2, #4]
   13c3c:	adds	r0, r3, r0
   13c40:	adc	r1, ip, r1
   13c44:	str	r0, [r2]
   13c48:	str	r1, [r2, #4]
   13c4c:	ldr	r0, [sp, #248]	; 0xf8
   13c50:	ldr	r1, [sp, #252]	; 0xfc
   13c54:	movw	r2, #448	; 0x1c0
   13c58:	movt	r2, #3
   13c5c:	ldr	r3, [r2]
   13c60:	ldr	ip, [r2, #4]
   13c64:	adds	r0, r3, r0
   13c68:	adc	r1, ip, r1
   13c6c:	str	r0, [r2]
   13c70:	str	r1, [r2, #4]
   13c74:	ldr	r0, [sp, #240]	; 0xf0
   13c78:	ldr	r1, [sp, #244]	; 0xf4
   13c7c:	movw	r2, #440	; 0x1b8
   13c80:	movt	r2, #3
   13c84:	ldr	r3, [r2]
   13c88:	ldr	ip, [r2, #4]
   13c8c:	adds	r0, r3, r0
   13c90:	adc	r1, ip, r1
   13c94:	str	r0, [r2]
   13c98:	str	r1, [r2, #4]
   13c9c:	ldr	r0, [sp, #232]	; 0xe8
   13ca0:	ldr	r1, [sp, #236]	; 0xec
   13ca4:	movw	r2, #432	; 0x1b0
   13ca8:	movt	r2, #3
   13cac:	ldr	r3, [r2]
   13cb0:	ldr	r2, [r2, #4]
   13cb4:	subs	r0, r3, r0
   13cb8:	sbcs	r1, r2, r1
   13cbc:	bcs	13cdc <__assert_fail@plt+0x2700>
   13cc0:	b	13cc4 <__assert_fail@plt+0x26e8>
   13cc4:	ldr	r0, [sp, #232]	; 0xe8
   13cc8:	ldr	r1, [sp, #236]	; 0xec
   13ccc:	movw	r2, #432	; 0x1b0
   13cd0:	movt	r2, #3
   13cd4:	str	r1, [r2, #4]
   13cd8:	str	r0, [r2]
   13cdc:	ldrb	r0, [fp, #-49]	; 0xffffffcf
   13ce0:	and	r0, r0, #1
   13ce4:	sub	sp, fp, #24
   13ce8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13cec:	sub	sp, sp, #8
   13cf0:	str	r0, [sp, #4]
   13cf4:	ldr	r0, [sp, #4]
   13cf8:	ldr	r0, [r0, #16]
   13cfc:	and	r0, r0, #61440	; 0xf000
   13d00:	cmp	r0, #32768	; 0x8000
   13d04:	movw	r0, #1
   13d08:	str	r0, [sp]
   13d0c:	beq	13d5c <__assert_fail@plt+0x2780>
   13d10:	ldr	r0, [sp, #4]
   13d14:	ldr	r0, [r0, #16]
   13d18:	and	r0, r0, #61440	; 0xf000
   13d1c:	cmp	r0, #40960	; 0xa000
   13d20:	movw	r0, #1
   13d24:	str	r0, [sp]
   13d28:	beq	13d5c <__assert_fail@plt+0x2780>
   13d2c:	ldr	r0, [sp, #4]
   13d30:	ldr	r0, [r0, #16]
   13d34:	ldr	r1, [sp, #4]
   13d38:	ldr	r1, [r1, #16]
   13d3c:	sub	r0, r0, r1
   13d40:	cmp	r0, #0
   13d44:	movw	r0, #1
   13d48:	str	r0, [sp]
   13d4c:	bne	13d5c <__assert_fail@plt+0x2780>
   13d50:	movw	r0, #0
   13d54:	str	r0, [sp]
   13d58:	b	13d5c <__assert_fail@plt+0x2780>
   13d5c:	ldr	r0, [sp]
   13d60:	and	r0, r0, #1
   13d64:	add	sp, sp, #8
   13d68:	bx	lr
   13d6c:	sub	sp, sp, #12
   13d70:	str	r0, [sp, #8]
   13d74:	movw	r0, #420	; 0x1a4
   13d78:	movt	r0, #3
   13d7c:	ldrb	r0, [r0]
   13d80:	tst	r0, #1
   13d84:	movw	r0, #0
   13d88:	str	r0, [sp, #4]
   13d8c:	bne	13df4 <__assert_fail@plt+0x2818>
   13d90:	ldr	r0, [sp, #8]
   13d94:	cmp	r0, #160	; 0xa0
   13d98:	movw	r0, #1
   13d9c:	str	r0, [sp]
   13da0:	beq	13dec <__assert_fail@plt+0x2810>
   13da4:	ldr	r0, [sp, #8]
   13da8:	movw	r1, #8199	; 0x2007
   13dac:	cmp	r0, r1
   13db0:	movw	r0, #1
   13db4:	str	r0, [sp]
   13db8:	beq	13dec <__assert_fail@plt+0x2810>
   13dbc:	ldr	r0, [sp, #8]
   13dc0:	movw	r1, #8239	; 0x202f
   13dc4:	cmp	r0, r1
   13dc8:	movw	r0, #1
   13dcc:	str	r0, [sp]
   13dd0:	beq	13dec <__assert_fail@plt+0x2810>
   13dd4:	ldr	r0, [sp, #8]
   13dd8:	movw	r1, #8288	; 0x2060
   13ddc:	cmp	r0, r1
   13de0:	movw	r0, #0
   13de4:	moveq	r0, #1
   13de8:	str	r0, [sp]
   13dec:	ldr	r0, [sp]
   13df0:	str	r0, [sp, #4]
   13df4:	ldr	r0, [sp, #4]
   13df8:	and	r0, r0, #1
   13dfc:	add	sp, sp, #12
   13e00:	bx	lr
   13e04:	sub	sp, sp, #4
   13e08:	strb	r0, [sp, #3]
   13e0c:	ldrb	r0, [sp, #3]
   13e10:	add	sp, sp, #4
   13e14:	bx	lr
   13e18:	push	{fp, lr}
   13e1c:	mov	fp, sp
   13e20:	sub	sp, sp, #8
   13e24:	str	r0, [sp, #4]
   13e28:	ldr	r0, [sp, #4]
   13e2c:	bl	11510 <btowc@plt>
   13e30:	bl	13d6c <__assert_fail@plt+0x2790>
   13e34:	mov	sp, fp
   13e38:	pop	{fp, pc}
   13e3c:	push	{r4, r5, fp, lr}
   13e40:	add	fp, sp, #8
   13e44:	sub	sp, sp, #72	; 0x48
   13e48:	sub	sp, sp, #16384	; 0x4000
   13e4c:	str	r0, [fp, #-16]
   13e50:	str	r1, [fp, #-20]	; 0xffffffec
   13e54:	str	r2, [fp, #-24]	; 0xffffffe8
   13e58:	str	r3, [fp, #-28]	; 0xffffffe4
   13e5c:	movw	r0, #0
   13e60:	strb	r0, [sp, #30]
   13e64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13e68:	movw	r1, #0
   13e6c:	cmp	r0, r1
   13e70:	beq	13e84 <__assert_fail@plt+0x28a8>
   13e74:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13e78:	movw	r1, #0
   13e7c:	cmp	r0, r1
   13e80:	bne	13e94 <__assert_fail@plt+0x28b8>
   13e84:	movw	r0, #0
   13e88:	and	r0, r0, #1
   13e8c:	strb	r0, [fp, #-9]
   13e90:	b	14098 <__assert_fail@plt+0x2abc>
   13e94:	mov	r0, #0
   13e98:	str	r0, [fp, #-44]	; 0xffffffd4
   13e9c:	str	r0, [fp, #-48]	; 0xffffffd0
   13ea0:	str	r0, [fp, #-36]	; 0xffffffdc
   13ea4:	str	r0, [fp, #-40]	; 0xffffffd8
   13ea8:	add	r1, sp, #31
   13eac:	ldr	r0, [fp, #-20]	; 0xffffffec
   13eb0:	movw	r2, #16384	; 0x4000
   13eb4:	bl	17c80 <__assert_fail@plt+0x66a4>
   13eb8:	str	r0, [fp, #-32]	; 0xffffffe0
   13ebc:	cmp	r0, #0
   13ec0:	bls	14064 <__assert_fail@plt+0x2a88>
   13ec4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13ec8:	cmn	r0, #1
   13ecc:	bne	13f20 <__assert_fail@plt+0x2944>
   13ed0:	bl	114e0 <__errno_location@plt>
   13ed4:	ldr	r1, [r0]
   13ed8:	ldr	r2, [fp, #-16]
   13edc:	movw	r0, #0
   13ee0:	movw	r3, #3
   13ee4:	str	r1, [sp, #4]
   13ee8:	mov	r1, r3
   13eec:	bl	17140 <__assert_fail@plt+0x5b64>
   13ef0:	movw	r1, #0
   13ef4:	str	r0, [sp]
   13ef8:	mov	r0, r1
   13efc:	ldr	r1, [sp, #4]
   13f00:	movw	r2, #60292	; 0xeb84
   13f04:	movt	r2, #1
   13f08:	ldr	r3, [sp]
   13f0c:	bl	11408 <error@plt>
   13f10:	movw	r0, #0
   13f14:	and	r0, r0, #1
   13f18:	strb	r0, [fp, #-9]
   13f1c:	b	14098 <__assert_fail@plt+0x2abc>
   13f20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13f24:	ldr	r1, [fp, #-48]	; 0xffffffd0
   13f28:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13f2c:	adds	r0, r1, r0
   13f30:	adc	r1, r2, #0
   13f34:	str	r0, [fp, #-48]	; 0xffffffd0
   13f38:	str	r1, [fp, #-44]	; 0xffffffd4
   13f3c:	add	r0, sp, #31
   13f40:	str	r0, [sp, #24]
   13f44:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13f48:	add	r0, r0, r1
   13f4c:	str	r0, [sp, #20]
   13f50:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13f54:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13f58:	str	r1, [sp, #12]
   13f5c:	str	r0, [sp, #8]
   13f60:	ldrb	r0, [sp, #30]
   13f64:	tst	r0, #1
   13f68:	bne	13fc0 <__assert_fail@plt+0x29e4>
   13f6c:	b	13f70 <__assert_fail@plt+0x2994>
   13f70:	ldr	r0, [sp, #24]
   13f74:	ldr	r1, [sp, #20]
   13f78:	cmp	r0, r1
   13f7c:	beq	13fbc <__assert_fail@plt+0x29e0>
   13f80:	ldr	r0, [sp, #24]
   13f84:	add	r1, r0, #1
   13f88:	str	r1, [sp, #24]
   13f8c:	ldrb	r0, [r0]
   13f90:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13f94:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13f98:	adds	r3, r1, #1
   13f9c:	adc	ip, r2, #0
   13fa0:	cmp	r0, #10
   13fa4:	moveq	r1, r3
   13fa8:	cmp	r0, #10
   13fac:	moveq	r2, ip
   13fb0:	str	r1, [fp, #-40]	; 0xffffffd8
   13fb4:	str	r2, [fp, #-36]	; 0xffffffdc
   13fb8:	b	13f70 <__assert_fail@plt+0x2994>
   13fbc:	b	14014 <__assert_fail@plt+0x2a38>
   13fc0:	ldr	r0, [sp, #20]
   13fc4:	movw	r1, #10
   13fc8:	strb	r1, [r0]
   13fcc:	ldr	r0, [sp, #24]
   13fd0:	movw	r1, #10
   13fd4:	bl	113a8 <rawmemchr@plt>
   13fd8:	str	r0, [sp, #24]
   13fdc:	ldr	r1, [sp, #20]
   13fe0:	cmp	r0, r1
   13fe4:	bcs	14010 <__assert_fail@plt+0x2a34>
   13fe8:	ldr	r0, [sp, #24]
   13fec:	add	r0, r0, #1
   13ff0:	str	r0, [sp, #24]
   13ff4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13ff8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13ffc:	adds	r0, r0, #1
   14000:	adc	r1, r1, #0
   14004:	str	r0, [fp, #-40]	; 0xffffffd8
   14008:	str	r1, [fp, #-36]	; 0xffffffdc
   1400c:	b	13fcc <__assert_fail@plt+0x29f0>
   14010:	b	14014 <__assert_fail@plt+0x2a38>
   14014:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14018:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1401c:	ldr	r2, [sp, #8]
   14020:	ldr	r3, [sp, #12]
   14024:	subs	r0, r0, r2
   14028:	sbc	r1, r1, r3
   1402c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14030:	movw	r3, #34953	; 0x8889
   14034:	movt	r3, #34952	; 0x8888
   14038:	umull	r2, r3, r2, r3
   1403c:	rsbs	r0, r0, r3, lsr #3
   14040:	rscs	r1, r1, #0
   14044:	bcc	14058 <__assert_fail@plt+0x2a7c>
   14048:	b	1404c <__assert_fail@plt+0x2a70>
   1404c:	movw	r0, #1
   14050:	strb	r0, [sp, #30]
   14054:	b	14060 <__assert_fail@plt+0x2a84>
   14058:	movw	r0, #0
   1405c:	strb	r0, [sp, #30]
   14060:	b	13ea8 <__assert_fail@plt+0x28cc>
   14064:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14068:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1406c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14070:	str	r1, [r2, #4]
   14074:	str	r0, [r2]
   14078:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1407c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14080:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14084:	str	r1, [r2, #4]
   14088:	str	r0, [r2]
   1408c:	movw	r0, #1
   14090:	and	r0, r0, #1
   14094:	strb	r0, [fp, #-9]
   14098:	ldrb	r0, [fp, #-9]
   1409c:	and	r0, r0, #1
   140a0:	sub	sp, fp, #8
   140a4:	pop	{r4, r5, fp, pc}
   140a8:	push	{fp, lr}
   140ac:	mov	fp, sp
   140b0:	sub	sp, sp, #16
   140b4:	str	r0, [sp, #8]
   140b8:	movw	r0, #24
   140bc:	bl	1b458 <__assert_fail@plt+0x9e7c>
   140c0:	str	r0, [sp, #4]
   140c4:	ldr	r0, [sp, #4]
   140c8:	movw	r1, #0
   140cc:	cmp	r0, r1
   140d0:	bne	140e0 <__assert_fail@plt+0x2b04>
   140d4:	movw	r0, #0
   140d8:	str	r0, [fp, #-4]
   140dc:	b	1410c <__assert_fail@plt+0x2b30>
   140e0:	ldr	r0, [sp, #4]
   140e4:	movw	r1, #0
   140e8:	str	r1, [r0]
   140ec:	ldr	r0, [sp, #8]
   140f0:	ldr	r1, [sp, #4]
   140f4:	str	r0, [r1, #16]
   140f8:	ldr	r0, [sp, #8]
   140fc:	ldr	r1, [sp, #4]
   14100:	str	r0, [r1, #20]
   14104:	ldr	r0, [sp, #4]
   14108:	str	r0, [fp, #-4]
   1410c:	ldr	r0, [fp, #-4]
   14110:	mov	sp, fp
   14114:	pop	{fp, pc}
   14118:	push	{fp, lr}
   1411c:	mov	fp, sp
   14120:	sub	sp, sp, #16
   14124:	str	r0, [sp, #8]
   14128:	movw	r0, #24
   1412c:	bl	1b458 <__assert_fail@plt+0x9e7c>
   14130:	str	r0, [sp, #4]
   14134:	ldr	r0, [sp, #4]
   14138:	movw	r1, #0
   1413c:	cmp	r0, r1
   14140:	bne	14150 <__assert_fail@plt+0x2b74>
   14144:	movw	r0, #0
   14148:	str	r0, [fp, #-4]
   1414c:	b	14188 <__assert_fail@plt+0x2bac>
   14150:	ldr	r0, [sp, #8]
   14154:	ldr	r1, [sp, #4]
   14158:	str	r0, [r1]
   1415c:	ldr	r0, [sp, #4]
   14160:	movw	r1, #0
   14164:	str	r1, [r0, #8]
   14168:	ldr	r0, [sp, #4]
   1416c:	str	r1, [r0, #12]
   14170:	ldr	r0, [sp, #4]
   14174:	str	r1, [r0, #4]
   14178:	ldr	r0, [sp, #4]
   1417c:	str	r1, [r0, #16]
   14180:	ldr	r0, [sp, #4]
   14184:	str	r0, [fp, #-4]
   14188:	ldr	r0, [fp, #-4]
   1418c:	mov	sp, fp
   14190:	pop	{fp, pc}
   14194:	push	{fp, lr}
   14198:	mov	fp, sp
   1419c:	sub	sp, sp, #16
   141a0:	str	r0, [sp, #8]
   141a4:	str	r1, [sp, #4]
   141a8:	ldr	r0, [sp, #8]
   141ac:	ldr	r0, [r0]
   141b0:	movw	r1, #0
   141b4:	cmp	r0, r1
   141b8:	beq	14250 <__assert_fail@plt+0x2c74>
   141bc:	ldr	r0, [sp, #8]
   141c0:	add	r0, r0, #8
   141c4:	ldr	r1, [sp, #8]
   141c8:	add	r1, r1, #12
   141cc:	ldr	r2, [sp, #8]
   141d0:	ldr	r3, [r2]
   141d4:	movw	r2, #0
   141d8:	bl	11588 <getdelim@plt>
   141dc:	str	r0, [sp]
   141e0:	ldr	r0, [sp]
   141e4:	cmp	r0, #0
   141e8:	bge	14224 <__assert_fail@plt+0x2c48>
   141ec:	ldr	r0, [sp, #8]
   141f0:	ldr	r0, [r0]
   141f4:	bl	1148c <feof@plt>
   141f8:	cmp	r0, #0
   141fc:	movw	r0, #0
   14200:	movne	r0, #1
   14204:	tst	r0, #1
   14208:	movw	r0, #2
   1420c:	moveq	r0, #4
   14210:	ldr	r1, [sp, #4]
   14214:	str	r0, [r1]
   14218:	movw	r0, #0
   1421c:	str	r0, [fp, #-4]
   14220:	b	142a4 <__assert_fail@plt+0x2cc8>
   14224:	ldr	r0, [sp, #4]
   14228:	movw	r1, #1
   1422c:	str	r1, [r0]
   14230:	ldr	r0, [sp, #8]
   14234:	ldr	r1, [r0, #4]
   14238:	add	r1, r1, #1
   1423c:	str	r1, [r0, #4]
   14240:	ldr	r0, [sp, #8]
   14244:	ldr	r0, [r0, #8]
   14248:	str	r0, [fp, #-4]
   1424c:	b	142a4 <__assert_fail@plt+0x2cc8>
   14250:	ldr	r0, [sp, #8]
   14254:	ldr	r0, [r0, #20]
   14258:	ldr	r0, [r0]
   1425c:	movw	r1, #0
   14260:	cmp	r0, r1
   14264:	bne	14280 <__assert_fail@plt+0x2ca4>
   14268:	ldr	r0, [sp, #4]
   1426c:	movw	r1, #2
   14270:	str	r1, [r0]
   14274:	movw	r0, #0
   14278:	str	r0, [fp, #-4]
   1427c:	b	142a4 <__assert_fail@plt+0x2cc8>
   14280:	ldr	r0, [sp, #4]
   14284:	movw	r1, #1
   14288:	str	r1, [r0]
   1428c:	ldr	r0, [sp, #8]
   14290:	ldr	r1, [r0, #20]
   14294:	add	r2, r1, #4
   14298:	str	r2, [r0, #20]
   1429c:	ldr	r0, [r1]
   142a0:	str	r0, [fp, #-4]
   142a4:	ldr	r0, [fp, #-4]
   142a8:	mov	sp, fp
   142ac:	pop	{fp, pc}
   142b0:	sub	sp, sp, #8
   142b4:	str	r0, [sp, #4]
   142b8:	ldr	r0, [sp, #4]
   142bc:	ldr	r0, [r0]
   142c0:	movw	r1, #0
   142c4:	cmp	r0, r1
   142c8:	beq	142dc <__assert_fail@plt+0x2d00>
   142cc:	ldr	r0, [sp, #4]
   142d0:	ldr	r0, [r0, #4]
   142d4:	str	r0, [sp]
   142d8:	b	142f4 <__assert_fail@plt+0x2d18>
   142dc:	ldr	r0, [sp, #4]
   142e0:	ldr	r1, [r0, #16]
   142e4:	ldr	r0, [r0, #20]
   142e8:	sub	r0, r0, r1
   142ec:	asr	r0, r0, #2
   142f0:	str	r0, [sp]
   142f4:	ldr	r0, [sp]
   142f8:	add	sp, sp, #8
   142fc:	bx	lr
   14300:	push	{fp, lr}
   14304:	mov	fp, sp
   14308:	sub	sp, sp, #8
   1430c:	str	r0, [sp, #4]
   14310:	ldr	r0, [sp, #4]
   14314:	ldr	r0, [r0]
   14318:	movw	r1, #0
   1431c:	cmp	r0, r1
   14320:	beq	14330 <__assert_fail@plt+0x2d54>
   14324:	ldr	r0, [sp, #4]
   14328:	ldr	r0, [r0, #8]
   1432c:	bl	146fc <__assert_fail@plt+0x3120>
   14330:	ldr	r0, [sp, #4]
   14334:	bl	146fc <__assert_fail@plt+0x3120>
   14338:	mov	sp, fp
   1433c:	pop	{fp, pc}
   14340:	sub	sp, sp, #4
   14344:	str	r0, [sp]
   14348:	ldr	r0, [sp]
   1434c:	movw	r1, #488	; 0x1e8
   14350:	movt	r1, #3
   14354:	str	r0, [r1]
   14358:	add	sp, sp, #4
   1435c:	bx	lr
   14360:	sub	sp, sp, #4
   14364:	and	r0, r0, #1
   14368:	strb	r0, [sp, #3]
   1436c:	ldrb	r0, [sp, #3]
   14370:	and	r0, r0, #1
   14374:	movw	r1, #492	; 0x1ec
   14378:	movt	r1, #3
   1437c:	strb	r0, [r1]
   14380:	add	sp, sp, #4
   14384:	bx	lr
   14388:	push	{fp, lr}
   1438c:	mov	fp, sp
   14390:	sub	sp, sp, #24
   14394:	movw	r0, #404	; 0x194
   14398:	movt	r0, #3
   1439c:	ldr	r0, [r0]
   143a0:	bl	1b664 <__assert_fail@plt+0xa088>
   143a4:	cmp	r0, #0
   143a8:	beq	14478 <__assert_fail@plt+0x2e9c>
   143ac:	movw	r0, #492	; 0x1ec
   143b0:	movt	r0, #3
   143b4:	ldrb	r0, [r0]
   143b8:	tst	r0, #1
   143bc:	beq	143d0 <__assert_fail@plt+0x2df4>
   143c0:	bl	114e0 <__errno_location@plt>
   143c4:	ldr	r0, [r0]
   143c8:	cmp	r0, #32
   143cc:	beq	14478 <__assert_fail@plt+0x2e9c>
   143d0:	movw	r0, #60276	; 0xeb74
   143d4:	movt	r0, #1
   143d8:	bl	114a4 <gettext@plt>
   143dc:	str	r0, [fp, #-4]
   143e0:	movw	r0, #488	; 0x1e8
   143e4:	movt	r0, #3
   143e8:	ldr	r0, [r0]
   143ec:	movw	r1, #0
   143f0:	cmp	r0, r1
   143f4:	beq	1444c <__assert_fail@plt+0x2e70>
   143f8:	bl	114e0 <__errno_location@plt>
   143fc:	ldr	r1, [r0]
   14400:	movw	r0, #488	; 0x1e8
   14404:	movt	r0, #3
   14408:	ldr	r0, [r0]
   1440c:	str	r1, [fp, #-8]
   14410:	bl	170e8 <__assert_fail@plt+0x5b0c>
   14414:	ldr	r1, [fp, #-4]
   14418:	movw	r2, #0
   1441c:	str	r0, [sp, #12]
   14420:	mov	r0, r2
   14424:	ldr	r2, [fp, #-8]
   14428:	str	r1, [sp, #8]
   1442c:	mov	r1, r2
   14430:	movw	r2, #60288	; 0xeb80
   14434:	movt	r2, #1
   14438:	ldr	r3, [sp, #12]
   1443c:	ldr	ip, [sp, #8]
   14440:	str	ip, [sp]
   14444:	bl	11408 <error@plt>
   14448:	b	14468 <__assert_fail@plt+0x2e8c>
   1444c:	bl	114e0 <__errno_location@plt>
   14450:	ldr	r1, [r0]
   14454:	ldr	r3, [fp, #-4]
   14458:	movw	r0, #0
   1445c:	movw	r2, #60292	; 0xeb84
   14460:	movt	r2, #1
   14464:	bl	11408 <error@plt>
   14468:	movw	r0, #304	; 0x130
   1446c:	movt	r0, #3
   14470:	ldr	r0, [r0]
   14474:	bl	11348 <_exit@plt>
   14478:	movw	r0, #392	; 0x188
   1447c:	movt	r0, #3
   14480:	ldr	r0, [r0]
   14484:	bl	1b664 <__assert_fail@plt+0xa088>
   14488:	cmp	r0, #0
   1448c:	beq	144a0 <__assert_fail@plt+0x2ec4>
   14490:	movw	r0, #304	; 0x130
   14494:	movt	r0, #3
   14498:	ldr	r0, [r0]
   1449c:	bl	11348 <_exit@plt>
   144a0:	mov	sp, fp
   144a4:	pop	{fp, pc}
   144a8:	push	{r4, r5, fp, lr}
   144ac:	add	fp, sp, #8
   144b0:	sub	sp, sp, #40	; 0x28
   144b4:	ldr	r1, [fp, #12]
   144b8:	ldr	ip, [fp, #8]
   144bc:	ldr	lr, [fp, #16]
   144c0:	str	r0, [fp, #-12]
   144c4:	str	r3, [sp, #28]
   144c8:	str	r2, [sp, #24]
   144cc:	str	r1, [sp, #20]
   144d0:	str	ip, [sp, #16]
   144d4:	ldr	r0, [fp, #-12]
   144d8:	ldr	r2, [sp, #24]
   144dc:	ldr	r3, [sp, #28]
   144e0:	ldr	r1, [sp, #16]
   144e4:	ldr	ip, [sp, #20]
   144e8:	ldr	r4, [fp, #16]
   144ec:	mov	r5, sp
   144f0:	str	r4, [r5, #8]
   144f4:	str	ip, [r5, #4]
   144f8:	str	r1, [r5]
   144fc:	str	lr, [sp, #12]
   14500:	bl	112e8 <posix_fadvise64@plt>
   14504:	sub	sp, fp, #8
   14508:	pop	{r4, r5, fp, pc}
   1450c:	push	{fp, lr}
   14510:	mov	fp, sp
   14514:	sub	sp, sp, #24
   14518:	str	r0, [fp, #-4]
   1451c:	str	r1, [fp, #-8]
   14520:	ldr	r0, [fp, #-4]
   14524:	movw	r1, #0
   14528:	cmp	r0, r1
   1452c:	beq	1455c <__assert_fail@plt+0x2f80>
   14530:	ldr	r0, [fp, #-4]
   14534:	bl	11528 <fileno@plt>
   14538:	ldr	r1, [fp, #-8]
   1453c:	mov	r2, sp
   14540:	str	r1, [r2, #8]
   14544:	mov	r1, #0
   14548:	str	r1, [r2, #4]
   1454c:	str	r1, [r2]
   14550:	mov	r2, r1
   14554:	mov	r3, r1
   14558:	bl	144a8 <__assert_fail@plt+0x2ecc>
   1455c:	mov	sp, fp
   14560:	pop	{fp, pc}
   14564:	push	{fp, lr}
   14568:	mov	fp, sp
   1456c:	sub	sp, sp, #32
   14570:	str	r0, [fp, #-8]
   14574:	movw	r0, #0
   14578:	str	r0, [fp, #-12]
   1457c:	str	r0, [sp, #12]
   14580:	ldr	r0, [fp, #-8]
   14584:	bl	11528 <fileno@plt>
   14588:	str	r0, [sp, #16]
   1458c:	ldr	r0, [sp, #16]
   14590:	cmp	r0, #0
   14594:	bge	145a8 <__assert_fail@plt+0x2fcc>
   14598:	ldr	r0, [fp, #-8]
   1459c:	bl	11534 <fclose@plt>
   145a0:	str	r0, [fp, #-4]
   145a4:	b	14644 <__assert_fail@plt+0x3068>
   145a8:	ldr	r0, [fp, #-8]
   145ac:	bl	11450 <__freading@plt>
   145b0:	cmp	r0, #0
   145b4:	beq	145ec <__assert_fail@plt+0x3010>
   145b8:	ldr	r0, [fp, #-8]
   145bc:	bl	11528 <fileno@plt>
   145c0:	mov	r1, sp
   145c4:	mov	r2, #1
   145c8:	str	r2, [r1]
   145cc:	mov	r1, #0
   145d0:	mov	r2, r1
   145d4:	mov	r3, r1
   145d8:	bl	113cc <lseek64@plt>
   145dc:	and	r0, r0, r1
   145e0:	cmn	r0, #1
   145e4:	beq	14608 <__assert_fail@plt+0x302c>
   145e8:	b	145ec <__assert_fail@plt+0x3010>
   145ec:	ldr	r0, [fp, #-8]
   145f0:	bl	14650 <__assert_fail@plt+0x3074>
   145f4:	cmp	r0, #0
   145f8:	beq	14608 <__assert_fail@plt+0x302c>
   145fc:	bl	114e0 <__errno_location@plt>
   14600:	ldr	r0, [r0]
   14604:	str	r0, [fp, #-12]
   14608:	ldr	r0, [fp, #-8]
   1460c:	bl	11534 <fclose@plt>
   14610:	str	r0, [sp, #12]
   14614:	ldr	r0, [fp, #-12]
   14618:	cmp	r0, #0
   1461c:	beq	1463c <__assert_fail@plt+0x3060>
   14620:	ldr	r0, [fp, #-12]
   14624:	str	r0, [sp, #8]
   14628:	bl	114e0 <__errno_location@plt>
   1462c:	ldr	r1, [sp, #8]
   14630:	str	r1, [r0]
   14634:	mvn	r0, #0
   14638:	str	r0, [sp, #12]
   1463c:	ldr	r0, [sp, #12]
   14640:	str	r0, [fp, #-4]
   14644:	ldr	r0, [fp, #-4]
   14648:	mov	sp, fp
   1464c:	pop	{fp, pc}
   14650:	push	{fp, lr}
   14654:	mov	fp, sp
   14658:	sub	sp, sp, #8
   1465c:	str	r0, [sp]
   14660:	ldr	r0, [sp]
   14664:	movw	r1, #0
   14668:	cmp	r0, r1
   1466c:	beq	14680 <__assert_fail@plt+0x30a4>
   14670:	ldr	r0, [sp]
   14674:	bl	11450 <__freading@plt>
   14678:	cmp	r0, #0
   1467c:	bne	14690 <__assert_fail@plt+0x30b4>
   14680:	ldr	r0, [sp]
   14684:	bl	1130c <fflush@plt>
   14688:	str	r0, [sp, #4]
   1468c:	b	146a4 <__assert_fail@plt+0x30c8>
   14690:	ldr	r0, [sp]
   14694:	bl	146b0 <__assert_fail@plt+0x30d4>
   14698:	ldr	r0, [sp]
   1469c:	bl	1130c <fflush@plt>
   146a0:	str	r0, [sp, #4]
   146a4:	ldr	r0, [sp, #4]
   146a8:	mov	sp, fp
   146ac:	pop	{fp, pc}
   146b0:	push	{fp, lr}
   146b4:	mov	fp, sp
   146b8:	sub	sp, sp, #8
   146bc:	str	r0, [sp, #4]
   146c0:	ldr	r0, [sp, #4]
   146c4:	ldr	r0, [r0]
   146c8:	and	r0, r0, #256	; 0x100
   146cc:	cmp	r0, #0
   146d0:	beq	146f4 <__assert_fail@plt+0x3118>
   146d4:	ldr	r0, [sp, #4]
   146d8:	mov	r1, sp
   146dc:	mov	r2, #1
   146e0:	str	r2, [r1]
   146e4:	mov	r1, #0
   146e8:	mov	r2, r1
   146ec:	mov	r3, r1
   146f0:	bl	1473c <__assert_fail@plt+0x3160>
   146f4:	mov	sp, fp
   146f8:	pop	{fp, pc}
   146fc:	push	{fp, lr}
   14700:	mov	fp, sp
   14704:	sub	sp, sp, #16
   14708:	str	r0, [fp, #-4]
   1470c:	bl	114e0 <__errno_location@plt>
   14710:	ldr	r0, [r0]
   14714:	str	r0, [sp, #8]
   14718:	ldr	r0, [fp, #-4]
   1471c:	bl	11330 <free@plt>
   14720:	ldr	r0, [sp, #8]
   14724:	str	r0, [sp, #4]
   14728:	bl	114e0 <__errno_location@plt>
   1472c:	ldr	r1, [sp, #4]
   14730:	str	r1, [r0]
   14734:	mov	sp, fp
   14738:	pop	{fp, pc}
   1473c:	push	{fp, lr}
   14740:	mov	fp, sp
   14744:	sub	sp, sp, #32
   14748:	ldr	r1, [fp, #8]
   1474c:	str	r0, [fp, #-8]
   14750:	str	r3, [sp, #20]
   14754:	str	r2, [sp, #16]
   14758:	ldr	r0, [fp, #-8]
   1475c:	ldr	r0, [r0, #8]
   14760:	ldr	r2, [fp, #-8]
   14764:	ldr	r2, [r2, #4]
   14768:	cmp	r0, r2
   1476c:	bne	14818 <__assert_fail@plt+0x323c>
   14770:	ldr	r0, [fp, #-8]
   14774:	ldr	r0, [r0, #20]
   14778:	ldr	r1, [fp, #-8]
   1477c:	ldr	r1, [r1, #16]
   14780:	cmp	r0, r1
   14784:	bne	14818 <__assert_fail@plt+0x323c>
   14788:	ldr	r0, [fp, #-8]
   1478c:	ldr	r0, [r0, #36]	; 0x24
   14790:	movw	r1, #0
   14794:	cmp	r0, r1
   14798:	bne	14818 <__assert_fail@plt+0x323c>
   1479c:	ldr	r0, [fp, #-8]
   147a0:	bl	11528 <fileno@plt>
   147a4:	ldr	r2, [sp, #16]
   147a8:	ldr	r3, [sp, #20]
   147ac:	ldr	r1, [fp, #8]
   147b0:	mov	ip, sp
   147b4:	str	r1, [ip]
   147b8:	bl	113cc <lseek64@plt>
   147bc:	str	r1, [sp, #12]
   147c0:	str	r0, [sp, #8]
   147c4:	ldr	r0, [sp, #8]
   147c8:	ldr	r1, [sp, #12]
   147cc:	and	r0, r0, r1
   147d0:	cmn	r0, #1
   147d4:	bne	147e8 <__assert_fail@plt+0x320c>
   147d8:	b	147dc <__assert_fail@plt+0x3200>
   147dc:	mvn	r0, #0
   147e0:	str	r0, [fp, #-4]
   147e4:	b	14838 <__assert_fail@plt+0x325c>
   147e8:	ldr	r0, [fp, #-8]
   147ec:	ldr	r1, [r0]
   147f0:	bic	r1, r1, #16
   147f4:	str	r1, [r0]
   147f8:	ldr	r0, [sp, #8]
   147fc:	ldr	r1, [sp, #12]
   14800:	ldr	r2, [fp, #-8]
   14804:	str	r1, [r2, #84]	; 0x54
   14808:	str	r0, [r2, #80]	; 0x50
   1480c:	movw	r0, #0
   14810:	str	r0, [fp, #-4]
   14814:	b	14838 <__assert_fail@plt+0x325c>
   14818:	ldr	r0, [fp, #-8]
   1481c:	ldr	r2, [sp, #16]
   14820:	ldr	r3, [sp, #20]
   14824:	ldr	r1, [fp, #8]
   14828:	mov	ip, sp
   1482c:	str	r1, [ip]
   14830:	bl	11540 <fseeko64@plt>
   14834:	str	r0, [fp, #-4]
   14838:	ldr	r0, [fp, #-4]
   1483c:	mov	sp, fp
   14840:	pop	{fp, pc}
   14844:	push	{fp, lr}
   14848:	mov	fp, sp
   1484c:	sub	sp, sp, #16
   14850:	str	r0, [sp, #8]
   14854:	str	r1, [sp, #12]
   14858:	str	r2, [sp, #4]
   1485c:	ldr	r0, [sp, #4]
   14860:	add	r0, r0, #20
   14864:	str	r0, [sp]
   14868:	ldr	r0, [sp]
   1486c:	mov	r1, #0
   14870:	strb	r1, [r0]
   14874:	mov	r0, #1
   14878:	cmp	r0, #0
   1487c:	bne	14904 <__assert_fail@plt+0x3328>
   14880:	b	14884 <__assert_fail@plt+0x32a8>
   14884:	b	14888 <__assert_fail@plt+0x32ac>
   14888:	ldr	r0, [sp, #8]
   1488c:	ldr	r1, [sp, #12]
   14890:	mov	r2, #10
   14894:	mov	r3, #0
   14898:	bl	1e128 <_obstack_memory_used@@Base+0x2034>
   1489c:	rsb	r2, r2, #48	; 0x30
   148a0:	ldr	r3, [sp]
   148a4:	mvn	ip, #0
   148a8:	add	lr, r3, ip
   148ac:	str	lr, [sp]
   148b0:	add	r3, r3, ip
   148b4:	strb	r2, [r3]
   148b8:	ldr	r0, [sp, #8]
   148bc:	ldr	r1, [sp, #12]
   148c0:	mov	r2, #10
   148c4:	mov	r3, #0
   148c8:	bl	1e128 <_obstack_memory_used@@Base+0x2034>
   148cc:	str	r1, [sp, #12]
   148d0:	str	r0, [sp, #8]
   148d4:	orr	r0, r0, r1
   148d8:	cmp	r0, #0
   148dc:	bne	14888 <__assert_fail@plt+0x32ac>
   148e0:	b	148e4 <__assert_fail@plt+0x3308>
   148e4:	ldr	r0, [sp]
   148e8:	mvn	r1, #0
   148ec:	add	r2, r0, r1
   148f0:	str	r2, [sp]
   148f4:	add	r0, r0, r1
   148f8:	movw	r1, #45	; 0x2d
   148fc:	strb	r1, [r0]
   14900:	b	14968 <__assert_fail@plt+0x338c>
   14904:	b	14908 <__assert_fail@plt+0x332c>
   14908:	ldr	r0, [sp, #8]
   1490c:	ldr	r1, [sp, #12]
   14910:	mov	r2, #10
   14914:	mov	r3, #0
   14918:	bl	1e128 <_obstack_memory_used@@Base+0x2034>
   1491c:	orr	r2, r2, #48	; 0x30
   14920:	ldr	r3, [sp]
   14924:	mvn	ip, #0
   14928:	add	lr, r3, ip
   1492c:	str	lr, [sp]
   14930:	add	r3, r3, ip
   14934:	strb	r2, [r3]
   14938:	ldr	r0, [sp, #8]
   1493c:	ldr	r1, [sp, #12]
   14940:	mov	r2, #10
   14944:	mov	r3, #0
   14948:	bl	1e128 <_obstack_memory_used@@Base+0x2034>
   1494c:	str	r1, [sp, #12]
   14950:	str	r0, [sp, #8]
   14954:	orr	r0, r0, r1
   14958:	cmp	r0, #0
   1495c:	bne	14908 <__assert_fail@plt+0x332c>
   14960:	b	14964 <__assert_fail@plt+0x3388>
   14964:	b	14968 <__assert_fail@plt+0x338c>
   14968:	ldr	r0, [sp]
   1496c:	mov	sp, fp
   14970:	pop	{fp, pc}
   14974:	push	{fp, lr}
   14978:	mov	fp, sp
   1497c:	sub	sp, sp, #16
   14980:	str	r0, [fp, #-4]
   14984:	ldr	r0, [fp, #-4]
   14988:	bl	11318 <wcwidth@plt>
   1498c:	str	r0, [sp, #8]
   14990:	ldr	r0, [sp, #8]
   14994:	cmp	r0, #0
   14998:	blt	149a8 <__assert_fail@plt+0x33cc>
   1499c:	ldr	r0, [sp, #8]
   149a0:	str	r0, [sp, #4]
   149a4:	b	149cc <__assert_fail@plt+0x33f0>
   149a8:	ldr	r0, [fp, #-4]
   149ac:	bl	1139c <iswcntrl@plt>
   149b0:	cmp	r0, #0
   149b4:	movw	r0, #0
   149b8:	movne	r0, #1
   149bc:	tst	r0, #1
   149c0:	movw	r0, #0
   149c4:	moveq	r0, #1
   149c8:	str	r0, [sp, #4]
   149cc:	ldr	r0, [sp, #4]
   149d0:	mov	sp, fp
   149d4:	pop	{fp, pc}
   149d8:	push	{fp, lr}
   149dc:	mov	fp, sp
   149e0:	sub	sp, sp, #8
   149e4:	str	r0, [sp, #4]
   149e8:	str	r1, [sp]
   149ec:	ldr	r0, [sp]
   149f0:	ldr	r0, [r0]
   149f4:	ldr	r1, [sp]
   149f8:	add	r1, r1, #16
   149fc:	cmp	r0, r1
   14a00:	bne	14a34 <__assert_fail@plt+0x3458>
   14a04:	ldr	r0, [sp, #4]
   14a08:	add	r0, r0, #16
   14a0c:	ldr	r1, [sp]
   14a10:	add	r1, r1, #16
   14a14:	ldr	r2, [sp]
   14a18:	ldr	r2, [r2, #4]
   14a1c:	bl	11354 <memcpy@plt>
   14a20:	ldr	r0, [sp, #4]
   14a24:	add	r0, r0, #16
   14a28:	ldr	r1, [sp, #4]
   14a2c:	str	r0, [r1]
   14a30:	b	14a44 <__assert_fail@plt+0x3468>
   14a34:	ldr	r0, [sp]
   14a38:	ldr	r0, [r0]
   14a3c:	ldr	r1, [sp, #4]
   14a40:	str	r0, [r1]
   14a44:	ldr	r0, [sp]
   14a48:	ldr	r0, [r0, #4]
   14a4c:	ldr	r1, [sp, #4]
   14a50:	str	r0, [r1, #4]
   14a54:	ldr	r0, [sp]
   14a58:	ldrb	r0, [r0, #8]
   14a5c:	ldr	r1, [sp, #4]
   14a60:	and	r2, r0, #1
   14a64:	strb	r2, [r1, #8]
   14a68:	tst	r0, #1
   14a6c:	beq	14a80 <__assert_fail@plt+0x34a4>
   14a70:	ldr	r0, [sp]
   14a74:	ldr	r0, [r0, #12]
   14a78:	ldr	r1, [sp, #4]
   14a7c:	str	r0, [r1, #12]
   14a80:	mov	sp, fp
   14a84:	pop	{fp, pc}
   14a88:	sub	sp, sp, #4
   14a8c:	movw	r1, #60296	; 0xeb88
   14a90:	movt	r1, #1
   14a94:	strb	r0, [sp, #3]
   14a98:	ldrb	r0, [sp, #3]
   14a9c:	lsr	r0, r0, #5
   14aa0:	movw	r2, #60296	; 0xeb88
   14aa4:	movt	r2, #1
   14aa8:	add	r0, r2, r0, lsl #2
   14aac:	ldr	r0, [r0]
   14ab0:	ldrb	r2, [sp, #3]
   14ab4:	and	r2, r2, #31
   14ab8:	lsr	r0, r0, r2
   14abc:	and	r0, r0, #1
   14ac0:	cmp	r0, #0
   14ac4:	movw	r0, #0
   14ac8:	movne	r0, #1
   14acc:	and	r0, r0, #1
   14ad0:	add	sp, sp, #4
   14ad4:	bx	lr
   14ad8:	push	{fp, lr}
   14adc:	mov	fp, sp
   14ae0:	sub	sp, sp, #32
   14ae4:	str	r0, [fp, #-8]
   14ae8:	str	r1, [fp, #-12]
   14aec:	str	r2, [sp, #16]
   14af0:	str	r3, [sp, #12]
   14af4:	ldr	r0, [fp, #-8]
   14af8:	movw	r1, #0
   14afc:	cmp	r0, r1
   14b00:	bne	14b0c <__assert_fail@plt+0x3530>
   14b04:	add	r0, sp, #4
   14b08:	str	r0, [fp, #-8]
   14b0c:	ldr	r0, [fp, #-8]
   14b10:	ldr	r1, [fp, #-12]
   14b14:	ldr	r2, [sp, #16]
   14b18:	ldr	r3, [sp, #12]
   14b1c:	bl	113fc <mbrtowc@plt>
   14b20:	str	r0, [sp, #8]
   14b24:	ldr	r0, [sp, #8]
   14b28:	mvn	r1, #1
   14b2c:	cmp	r1, r0
   14b30:	bhi	14b74 <__assert_fail@plt+0x3598>
   14b34:	ldr	r0, [sp, #16]
   14b38:	cmp	r0, #0
   14b3c:	beq	14b74 <__assert_fail@plt+0x3598>
   14b40:	movw	r0, #0
   14b44:	bl	1b734 <__assert_fail@plt+0xa158>
   14b48:	tst	r0, #1
   14b4c:	bne	14b74 <__assert_fail@plt+0x3598>
   14b50:	ldr	r0, [fp, #-12]
   14b54:	ldrb	r0, [r0]
   14b58:	strb	r0, [sp, #3]
   14b5c:	ldrb	r0, [sp, #3]
   14b60:	ldr	r1, [fp, #-8]
   14b64:	str	r0, [r1]
   14b68:	movw	r0, #1
   14b6c:	str	r0, [fp, #-4]
   14b70:	b	14b7c <__assert_fail@plt+0x35a0>
   14b74:	ldr	r0, [sp, #8]
   14b78:	str	r0, [fp, #-4]
   14b7c:	ldr	r0, [fp, #-4]
   14b80:	mov	sp, fp
   14b84:	pop	{fp, pc}
   14b88:	push	{fp, lr}
   14b8c:	mov	fp, sp
   14b90:	sub	sp, sp, #88	; 0x58
   14b94:	movw	r0, #85	; 0x55
   14b98:	bl	11378 <sysconf@plt>
   14b9c:	vmov	s0, r0
   14ba0:	vcvt.f64.s32	d16, s0
   14ba4:	vstr	d16, [fp, #-16]
   14ba8:	movw	r0, #30
   14bac:	bl	11378 <sysconf@plt>
   14bb0:	vldr	d16, [pc, #136]	; 14c40 <__assert_fail@plt+0x3664>
   14bb4:	vmov	s0, r0
   14bb8:	vcvt.f64.s32	d17, s0
   14bbc:	vstr	d17, [fp, #-24]	; 0xffffffe8
   14bc0:	vldr	d17, [fp, #-16]
   14bc4:	vcmpe.f64	d16, d17
   14bc8:	vmrs	APSR_nzcv, fpscr
   14bcc:	bhi	14bf8 <__assert_fail@plt+0x361c>
   14bd0:	vldr	d16, [pc, #104]	; 14c40 <__assert_fail@plt+0x3664>
   14bd4:	vldr	d17, [fp, #-24]	; 0xffffffe8
   14bd8:	vcmpe.f64	d16, d17
   14bdc:	vmrs	APSR_nzcv, fpscr
   14be0:	bhi	14bf8 <__assert_fail@plt+0x361c>
   14be4:	vldr	d16, [fp, #-16]
   14be8:	vldr	d17, [fp, #-24]	; 0xffffffe8
   14bec:	vmul.f64	d16, d16, d17
   14bf0:	vstr	d16, [fp, #-8]
   14bf4:	b	14c34 <__assert_fail@plt+0x3658>
   14bf8:	mov	r0, sp
   14bfc:	bl	1142c <sysinfo@plt>
   14c00:	cmp	r0, #0
   14c04:	bne	14c2c <__assert_fail@plt+0x3650>
   14c08:	ldr	r0, [sp, #16]
   14c0c:	vmov	s0, r0
   14c10:	vcvt.f64.u32	d16, s0
   14c14:	ldr	r0, [sp, #52]	; 0x34
   14c18:	vmov	s0, r0
   14c1c:	vcvt.f64.u32	d17, s0
   14c20:	vmul.f64	d16, d16, d17
   14c24:	vstr	d16, [fp, #-8]
   14c28:	b	14c34 <__assert_fail@plt+0x3658>
   14c2c:	vldr	d16, [pc, #20]	; 14c48 <__assert_fail@plt+0x366c>
   14c30:	vstr	d16, [fp, #-8]
   14c34:	vldr	d0, [fp, #-8]
   14c38:	mov	sp, fp
   14c3c:	pop	{fp, pc}
	...
   14c4c:	orrsmi	r0, r0, r0
   14c50:	push	{fp, lr}
   14c54:	mov	fp, sp
   14c58:	sub	sp, sp, #88	; 0x58
   14c5c:	movw	r0, #86	; 0x56
   14c60:	bl	11378 <sysconf@plt>
   14c64:	vmov	s0, r0
   14c68:	vcvt.f64.s32	d16, s0
   14c6c:	vstr	d16, [fp, #-16]
   14c70:	movw	r0, #30
   14c74:	bl	11378 <sysconf@plt>
   14c78:	vldr	d16, [pc, #160]	; 14d20 <__assert_fail@plt+0x3744>
   14c7c:	vmov	s0, r0
   14c80:	vcvt.f64.s32	d17, s0
   14c84:	vstr	d17, [fp, #-24]	; 0xffffffe8
   14c88:	vldr	d17, [fp, #-16]
   14c8c:	vcmpe.f64	d16, d17
   14c90:	vmrs	APSR_nzcv, fpscr
   14c94:	bhi	14cc0 <__assert_fail@plt+0x36e4>
   14c98:	vldr	d16, [pc, #128]	; 14d20 <__assert_fail@plt+0x3744>
   14c9c:	vldr	d17, [fp, #-24]	; 0xffffffe8
   14ca0:	vcmpe.f64	d16, d17
   14ca4:	vmrs	APSR_nzcv, fpscr
   14ca8:	bhi	14cc0 <__assert_fail@plt+0x36e4>
   14cac:	vldr	d16, [fp, #-16]
   14cb0:	vldr	d17, [fp, #-24]	; 0xffffffe8
   14cb4:	vmul.f64	d16, d16, d17
   14cb8:	vstr	d16, [fp, #-8]
   14cbc:	b	14d14 <__assert_fail@plt+0x3738>
   14cc0:	mov	r0, sp
   14cc4:	bl	1142c <sysinfo@plt>
   14cc8:	cmp	r0, #0
   14ccc:	bne	14d04 <__assert_fail@plt+0x3728>
   14cd0:	ldr	r0, [sp, #20]
   14cd4:	vmov	s0, r0
   14cd8:	vcvt.f64.u32	d16, s0
   14cdc:	ldr	r0, [sp, #28]
   14ce0:	vmov	s0, r0
   14ce4:	vcvt.f64.u32	d17, s0
   14ce8:	vadd.f64	d16, d16, d17
   14cec:	ldr	r0, [sp, #52]	; 0x34
   14cf0:	vmov	s0, r0
   14cf4:	vcvt.f64.u32	d17, s0
   14cf8:	vmul.f64	d16, d16, d17
   14cfc:	vstr	d16, [fp, #-8]
   14d00:	b	14d14 <__assert_fail@plt+0x3738>
   14d04:	bl	14b88 <__assert_fail@plt+0x35ac>
   14d08:	vmov.f64	d16, #16	; 0x40800000  4.0
   14d0c:	vdiv.f64	d16, d0, d16
   14d10:	vstr	d16, [fp, #-8]
   14d14:	vldr	d0, [fp, #-8]
   14d18:	mov	sp, fp
   14d1c:	pop	{fp, pc}
	...
   14d28:	push	{fp, lr}
   14d2c:	mov	fp, sp
   14d30:	sub	sp, sp, #24
   14d34:	str	r0, [fp, #-4]
   14d38:	ldr	r0, [fp, #-4]
   14d3c:	movw	r1, #0
   14d40:	cmp	r0, r1
   14d44:	bne	14d68 <__assert_fail@plt+0x378c>
   14d48:	movw	r0, #392	; 0x188
   14d4c:	movt	r0, #3
   14d50:	ldr	r1, [r0]
   14d54:	movw	r0, #60328	; 0xeba8
   14d58:	movt	r0, #1
   14d5c:	bl	115a0 <fputs@plt>
   14d60:	str	r0, [sp, #8]
   14d64:	bl	115b8 <abort@plt>
   14d68:	ldr	r0, [fp, #-4]
   14d6c:	movw	r1, #47	; 0x2f
   14d70:	bl	11558 <strrchr@plt>
   14d74:	str	r0, [fp, #-8]
   14d78:	ldr	r0, [fp, #-8]
   14d7c:	movw	r1, #0
   14d80:	cmp	r0, r1
   14d84:	beq	14d98 <__assert_fail@plt+0x37bc>
   14d88:	ldr	r0, [fp, #-8]
   14d8c:	add	r0, r0, #1
   14d90:	str	r0, [sp, #4]
   14d94:	b	14da0 <__assert_fail@plt+0x37c4>
   14d98:	ldr	r0, [fp, #-4]
   14d9c:	str	r0, [sp, #4]
   14da0:	ldr	r0, [sp, #4]
   14da4:	str	r0, [sp, #12]
   14da8:	ldr	r0, [sp, #12]
   14dac:	ldr	r1, [fp, #-4]
   14db0:	sub	r0, r0, r1
   14db4:	cmp	r0, #7
   14db8:	blt	14e24 <__assert_fail@plt+0x3848>
   14dbc:	ldr	r0, [sp, #12]
   14dc0:	mvn	r1, #6
   14dc4:	add	r0, r0, r1
   14dc8:	movw	r1, #60384	; 0xebe0
   14dcc:	movt	r1, #1
   14dd0:	movw	r2, #7
   14dd4:	bl	115ac <strncmp@plt>
   14dd8:	cmp	r0, #0
   14ddc:	bne	14e24 <__assert_fail@plt+0x3848>
   14de0:	ldr	r0, [sp, #12]
   14de4:	str	r0, [fp, #-4]
   14de8:	ldr	r0, [sp, #12]
   14dec:	movw	r1, #60392	; 0xebe8
   14df0:	movt	r1, #1
   14df4:	movw	r2, #3
   14df8:	bl	115ac <strncmp@plt>
   14dfc:	cmp	r0, #0
   14e00:	bne	14e20 <__assert_fail@plt+0x3844>
   14e04:	ldr	r0, [sp, #12]
   14e08:	add	r0, r0, #3
   14e0c:	str	r0, [fp, #-4]
   14e10:	ldr	r0, [fp, #-4]
   14e14:	movw	r1, #376	; 0x178
   14e18:	movt	r1, #3
   14e1c:	str	r0, [r1]
   14e20:	b	14e24 <__assert_fail@plt+0x3848>
   14e24:	ldr	r0, [fp, #-4]
   14e28:	movw	r1, #496	; 0x1f0
   14e2c:	movt	r1, #3
   14e30:	str	r0, [r1]
   14e34:	ldr	r0, [fp, #-4]
   14e38:	movw	r1, #380	; 0x17c
   14e3c:	movt	r1, #3
   14e40:	str	r0, [r1]
   14e44:	mov	sp, fp
   14e48:	pop	{fp, pc}
   14e4c:	push	{fp, lr}
   14e50:	mov	fp, sp
   14e54:	sub	sp, sp, #24
   14e58:	str	r0, [fp, #-4]
   14e5c:	bl	114e0 <__errno_location@plt>
   14e60:	ldr	r0, [r0]
   14e64:	str	r0, [fp, #-8]
   14e68:	ldr	r0, [fp, #-4]
   14e6c:	movw	r1, #0
   14e70:	cmp	r0, r1
   14e74:	beq	14e84 <__assert_fail@plt+0x38a8>
   14e78:	ldr	r0, [fp, #-4]
   14e7c:	str	r0, [sp, #8]
   14e80:	b	14e94 <__assert_fail@plt+0x38b8>
   14e84:	movw	r0, #500	; 0x1f4
   14e88:	movt	r0, #3
   14e8c:	str	r0, [sp, #8]
   14e90:	b	14e94 <__assert_fail@plt+0x38b8>
   14e94:	ldr	r0, [sp, #8]
   14e98:	movw	r1, #48	; 0x30
   14e9c:	bl	1b234 <__assert_fail@plt+0x9c58>
   14ea0:	str	r0, [sp, #12]
   14ea4:	ldr	r0, [fp, #-8]
   14ea8:	str	r0, [sp, #4]
   14eac:	bl	114e0 <__errno_location@plt>
   14eb0:	ldr	r1, [sp, #4]
   14eb4:	str	r1, [r0]
   14eb8:	ldr	r0, [sp, #12]
   14ebc:	mov	sp, fp
   14ec0:	pop	{fp, pc}
   14ec4:	sub	sp, sp, #8
   14ec8:	str	r0, [sp, #4]
   14ecc:	ldr	r0, [sp, #4]
   14ed0:	movw	r1, #0
   14ed4:	cmp	r0, r1
   14ed8:	beq	14ee8 <__assert_fail@plt+0x390c>
   14edc:	ldr	r0, [sp, #4]
   14ee0:	str	r0, [sp]
   14ee4:	b	14ef8 <__assert_fail@plt+0x391c>
   14ee8:	movw	r0, #500	; 0x1f4
   14eec:	movt	r0, #3
   14ef0:	str	r0, [sp]
   14ef4:	b	14ef8 <__assert_fail@plt+0x391c>
   14ef8:	ldr	r0, [sp]
   14efc:	ldr	r0, [r0]
   14f00:	add	sp, sp, #8
   14f04:	bx	lr
   14f08:	sub	sp, sp, #16
   14f0c:	str	r0, [sp, #12]
   14f10:	str	r1, [sp, #8]
   14f14:	ldr	r0, [sp, #8]
   14f18:	ldr	r1, [sp, #12]
   14f1c:	movw	r2, #0
   14f20:	cmp	r1, r2
   14f24:	str	r0, [sp, #4]
   14f28:	beq	14f38 <__assert_fail@plt+0x395c>
   14f2c:	ldr	r0, [sp, #12]
   14f30:	str	r0, [sp]
   14f34:	b	14f48 <__assert_fail@plt+0x396c>
   14f38:	movw	r0, #500	; 0x1f4
   14f3c:	movt	r0, #3
   14f40:	str	r0, [sp]
   14f44:	b	14f48 <__assert_fail@plt+0x396c>
   14f48:	ldr	r0, [sp]
   14f4c:	ldr	r1, [sp, #4]
   14f50:	str	r1, [r0]
   14f54:	add	sp, sp, #16
   14f58:	bx	lr
   14f5c:	sub	sp, sp, #32
   14f60:	str	r0, [sp, #28]
   14f64:	strb	r1, [sp, #27]
   14f68:	str	r2, [sp, #20]
   14f6c:	ldrb	r0, [sp, #27]
   14f70:	strb	r0, [sp, #19]
   14f74:	ldr	r0, [sp, #28]
   14f78:	movw	r1, #0
   14f7c:	cmp	r0, r1
   14f80:	beq	14f90 <__assert_fail@plt+0x39b4>
   14f84:	ldr	r0, [sp, #28]
   14f88:	str	r0, [sp]
   14f8c:	b	14fa0 <__assert_fail@plt+0x39c4>
   14f90:	movw	r0, #500	; 0x1f4
   14f94:	movt	r0, #3
   14f98:	str	r0, [sp]
   14f9c:	b	14fa0 <__assert_fail@plt+0x39c4>
   14fa0:	ldr	r0, [sp]
   14fa4:	add	r0, r0, #8
   14fa8:	ldrb	r1, [sp, #19]
   14fac:	lsr	r1, r1, #5
   14fb0:	add	r0, r0, r1, lsl #2
   14fb4:	str	r0, [sp, #12]
   14fb8:	ldrb	r0, [sp, #19]
   14fbc:	and	r0, r0, #31
   14fc0:	str	r0, [sp, #8]
   14fc4:	ldr	r0, [sp, #12]
   14fc8:	ldr	r0, [r0]
   14fcc:	ldr	r1, [sp, #8]
   14fd0:	lsr	r0, r0, r1
   14fd4:	and	r0, r0, #1
   14fd8:	str	r0, [sp, #4]
   14fdc:	ldr	r0, [sp, #20]
   14fe0:	and	r0, r0, #1
   14fe4:	ldr	r1, [sp, #4]
   14fe8:	eor	r0, r0, r1
   14fec:	ldr	r1, [sp, #8]
   14ff0:	lsl	r0, r0, r1
   14ff4:	ldr	r1, [sp, #12]
   14ff8:	ldr	r2, [r1]
   14ffc:	eor	r0, r2, r0
   15000:	str	r0, [r1]
   15004:	ldr	r0, [sp, #4]
   15008:	add	sp, sp, #32
   1500c:	bx	lr
   15010:	sub	sp, sp, #12
   15014:	str	r0, [sp, #8]
   15018:	str	r1, [sp, #4]
   1501c:	ldr	r0, [sp, #8]
   15020:	movw	r1, #0
   15024:	cmp	r0, r1
   15028:	bne	15038 <__assert_fail@plt+0x3a5c>
   1502c:	movw	r0, #500	; 0x1f4
   15030:	movt	r0, #3
   15034:	str	r0, [sp, #8]
   15038:	ldr	r0, [sp, #8]
   1503c:	ldr	r0, [r0, #4]
   15040:	str	r0, [sp]
   15044:	ldr	r0, [sp, #4]
   15048:	ldr	r1, [sp, #8]
   1504c:	str	r0, [r1, #4]
   15050:	ldr	r0, [sp]
   15054:	add	sp, sp, #12
   15058:	bx	lr
   1505c:	push	{fp, lr}
   15060:	mov	fp, sp
   15064:	sub	sp, sp, #16
   15068:	str	r0, [fp, #-4]
   1506c:	str	r1, [sp, #8]
   15070:	str	r2, [sp, #4]
   15074:	ldr	r0, [fp, #-4]
   15078:	movw	r1, #0
   1507c:	cmp	r0, r1
   15080:	bne	15090 <__assert_fail@plt+0x3ab4>
   15084:	movw	r0, #500	; 0x1f4
   15088:	movt	r0, #3
   1508c:	str	r0, [fp, #-4]
   15090:	ldr	r0, [fp, #-4]
   15094:	movw	r1, #10
   15098:	str	r1, [r0]
   1509c:	ldr	r0, [sp, #8]
   150a0:	movw	r1, #0
   150a4:	cmp	r0, r1
   150a8:	beq	150bc <__assert_fail@plt+0x3ae0>
   150ac:	ldr	r0, [sp, #4]
   150b0:	movw	r1, #0
   150b4:	cmp	r0, r1
   150b8:	bne	150c0 <__assert_fail@plt+0x3ae4>
   150bc:	bl	115b8 <abort@plt>
   150c0:	ldr	r0, [sp, #8]
   150c4:	ldr	r1, [fp, #-4]
   150c8:	str	r0, [r1, #40]	; 0x28
   150cc:	ldr	r0, [sp, #4]
   150d0:	ldr	r1, [fp, #-4]
   150d4:	str	r0, [r1, #44]	; 0x2c
   150d8:	mov	sp, fp
   150dc:	pop	{fp, pc}
   150e0:	push	{r4, r5, r6, sl, fp, lr}
   150e4:	add	fp, sp, #16
   150e8:	sub	sp, sp, #56	; 0x38
   150ec:	ldr	ip, [fp, #8]
   150f0:	str	r0, [fp, #-20]	; 0xffffffec
   150f4:	str	r1, [fp, #-24]	; 0xffffffe8
   150f8:	str	r2, [fp, #-28]	; 0xffffffe4
   150fc:	str	r3, [fp, #-32]	; 0xffffffe0
   15100:	ldr	r0, [fp, #8]
   15104:	movw	r1, #0
   15108:	cmp	r0, r1
   1510c:	beq	1511c <__assert_fail@plt+0x3b40>
   15110:	ldr	r0, [fp, #8]
   15114:	str	r0, [sp, #24]
   15118:	b	1512c <__assert_fail@plt+0x3b50>
   1511c:	movw	r0, #500	; 0x1f4
   15120:	movt	r0, #3
   15124:	str	r0, [sp, #24]
   15128:	b	1512c <__assert_fail@plt+0x3b50>
   1512c:	ldr	r0, [sp, #24]
   15130:	str	r0, [sp, #36]	; 0x24
   15134:	bl	114e0 <__errno_location@plt>
   15138:	ldr	r0, [r0]
   1513c:	str	r0, [sp, #32]
   15140:	ldr	r0, [fp, #-20]	; 0xffffffec
   15144:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15148:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1514c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15150:	ldr	ip, [sp, #36]	; 0x24
   15154:	ldr	ip, [ip]
   15158:	ldr	lr, [sp, #36]	; 0x24
   1515c:	ldr	lr, [lr, #4]
   15160:	ldr	r4, [sp, #36]	; 0x24
   15164:	add	r4, r4, #8
   15168:	ldr	r5, [sp, #36]	; 0x24
   1516c:	ldr	r5, [r5, #40]	; 0x28
   15170:	ldr	r6, [sp, #36]	; 0x24
   15174:	ldr	r6, [r6, #44]	; 0x2c
   15178:	str	ip, [sp]
   1517c:	str	lr, [sp, #4]
   15180:	str	r4, [sp, #8]
   15184:	str	r5, [sp, #12]
   15188:	str	r6, [sp, #16]
   1518c:	bl	151b4 <__assert_fail@plt+0x3bd8>
   15190:	str	r0, [sp, #28]
   15194:	ldr	r0, [sp, #32]
   15198:	str	r0, [sp, #20]
   1519c:	bl	114e0 <__errno_location@plt>
   151a0:	ldr	r1, [sp, #20]
   151a4:	str	r1, [r0]
   151a8:	ldr	r0, [sp, #28]
   151ac:	sub	sp, fp, #16
   151b0:	pop	{r4, r5, r6, sl, fp, pc}
   151b4:	push	{r4, r5, r6, sl, fp, lr}
   151b8:	add	fp, sp, #16
   151bc:	sub	sp, sp, #160	; 0xa0
   151c0:	ldr	ip, [fp, #24]
   151c4:	ldr	lr, [fp, #20]
   151c8:	ldr	r4, [fp, #16]
   151cc:	ldr	r5, [fp, #12]
   151d0:	ldr	r6, [fp, #8]
   151d4:	str	r0, [fp, #-24]	; 0xffffffe8
   151d8:	str	r1, [fp, #-28]	; 0xffffffe4
   151dc:	str	r2, [fp, #-32]	; 0xffffffe0
   151e0:	str	r3, [fp, #-36]	; 0xffffffdc
   151e4:	movw	r0, #0
   151e8:	str	r0, [fp, #-44]	; 0xffffffd4
   151ec:	str	r0, [fp, #-48]	; 0xffffffd0
   151f0:	str	r0, [fp, #-52]	; 0xffffffcc
   151f4:	str	r0, [fp, #-56]	; 0xffffffc8
   151f8:	movw	r0, #0
   151fc:	strb	r0, [fp, #-57]	; 0xffffffc7
   15200:	str	ip, [sp, #72]	; 0x48
   15204:	str	lr, [sp, #68]	; 0x44
   15208:	str	r4, [sp, #64]	; 0x40
   1520c:	str	r5, [sp, #60]	; 0x3c
   15210:	str	r6, [sp, #56]	; 0x38
   15214:	bl	113d8 <__ctype_get_mb_cur_max@plt>
   15218:	cmp	r0, #1
   1521c:	movw	r0, #0
   15220:	moveq	r0, #1
   15224:	and	r0, r0, #1
   15228:	strb	r0, [fp, #-58]	; 0xffffffc6
   1522c:	ldr	r0, [fp, #12]
   15230:	and	r0, r0, #2
   15234:	cmp	r0, #0
   15238:	movw	r0, #0
   1523c:	movne	r0, #1
   15240:	and	r0, r0, #1
   15244:	strb	r0, [fp, #-59]	; 0xffffffc5
   15248:	movw	r0, #0
   1524c:	strb	r0, [fp, #-60]	; 0xffffffc4
   15250:	strb	r0, [fp, #-61]	; 0xffffffc3
   15254:	movw	r0, #1
   15258:	strb	r0, [fp, #-62]	; 0xffffffc2
   1525c:	ldr	r0, [fp, #8]
   15260:	cmp	r0, #10
   15264:	str	r0, [sp, #52]	; 0x34
   15268:	bhi	15490 <__assert_fail@plt+0x3eb4>
   1526c:	add	r0, pc, #8
   15270:	ldr	r1, [sp, #52]	; 0x34
   15274:	ldr	r0, [r0, r1, lsl #2]
   15278:	mov	pc, r0
   1527c:	andeq	r5, r1, r4, lsl #9
   15280:	andeq	r5, r1, r0, lsl #8
   15284:	andeq	r5, r1, r0, lsr #8
   15288:	strdeq	r5, [r1], -r8
   1528c:	andeq	r5, r1, r8, lsl #8
   15290:			; <UNDEFINED> instruction: 0x000152b8
   15294:	andeq	r5, r1, r8, lsr #5
   15298:	andeq	r5, r1, ip, lsl r3
   1529c:	andeq	r5, r1, r0, lsr r3
   152a0:	andeq	r5, r1, r0, lsr r3
   152a4:	andeq	r5, r1, r0, lsr r3
   152a8:	movw	r0, #5
   152ac:	str	r0, [fp, #8]
   152b0:	movw	r0, #1
   152b4:	strb	r0, [fp, #-59]	; 0xffffffc5
   152b8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   152bc:	tst	r0, #1
   152c0:	bne	152fc <__assert_fail@plt+0x3d20>
   152c4:	b	152c8 <__assert_fail@plt+0x3cec>
   152c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   152cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   152d0:	cmp	r0, r1
   152d4:	bcs	152ec <__assert_fail@plt+0x3d10>
   152d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   152dc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   152e0:	add	r0, r0, r1
   152e4:	movw	r1, #34	; 0x22
   152e8:	strb	r1, [r0]
   152ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   152f0:	add	r0, r0, #1
   152f4:	str	r0, [fp, #-44]	; 0xffffffd4
   152f8:	b	152fc <__assert_fail@plt+0x3d20>
   152fc:	movw	r0, #1
   15300:	strb	r0, [fp, #-57]	; 0xffffffc7
   15304:	movw	r0, #59455	; 0xe83f
   15308:	movt	r0, #1
   1530c:	str	r0, [fp, #-52]	; 0xffffffcc
   15310:	movw	r0, #1
   15314:	str	r0, [fp, #-56]	; 0xffffffc8
   15318:	b	15494 <__assert_fail@plt+0x3eb8>
   1531c:	movw	r0, #1
   15320:	strb	r0, [fp, #-57]	; 0xffffffc7
   15324:	movw	r0, #0
   15328:	strb	r0, [fp, #-59]	; 0xffffffc5
   1532c:	b	15494 <__assert_fail@plt+0x3eb8>
   15330:	ldr	r0, [fp, #8]
   15334:	cmp	r0, #10
   15338:	beq	15364 <__assert_fail@plt+0x3d88>
   1533c:	ldr	r1, [fp, #8]
   15340:	movw	r0, #60472	; 0xec38
   15344:	movt	r0, #1
   15348:	bl	173a8 <__assert_fail@plt+0x5dcc>
   1534c:	str	r0, [fp, #20]
   15350:	ldr	r1, [fp, #8]
   15354:	movw	r0, #60474	; 0xec3a
   15358:	movt	r0, #1
   1535c:	bl	173a8 <__assert_fail@plt+0x5dcc>
   15360:	str	r0, [fp, #24]
   15364:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15368:	tst	r0, #1
   1536c:	bne	153d8 <__assert_fail@plt+0x3dfc>
   15370:	ldr	r0, [fp, #20]
   15374:	str	r0, [fp, #-52]	; 0xffffffcc
   15378:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1537c:	ldrsb	r0, [r0]
   15380:	cmp	r0, #0
   15384:	beq	153d4 <__assert_fail@plt+0x3df8>
   15388:	b	1538c <__assert_fail@plt+0x3db0>
   1538c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15390:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15394:	cmp	r0, r1
   15398:	bcs	153b4 <__assert_fail@plt+0x3dd8>
   1539c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   153a0:	ldrb	r0, [r0]
   153a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   153a8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   153ac:	add	r1, r1, r2
   153b0:	strb	r0, [r1]
   153b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   153b8:	add	r0, r0, #1
   153bc:	str	r0, [fp, #-44]	; 0xffffffd4
   153c0:	b	153c4 <__assert_fail@plt+0x3de8>
   153c4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   153c8:	add	r0, r0, #1
   153cc:	str	r0, [fp, #-52]	; 0xffffffcc
   153d0:	b	15378 <__assert_fail@plt+0x3d9c>
   153d4:	b	153d8 <__assert_fail@plt+0x3dfc>
   153d8:	movw	r0, #1
   153dc:	strb	r0, [fp, #-57]	; 0xffffffc7
   153e0:	ldr	r0, [fp, #24]
   153e4:	str	r0, [fp, #-52]	; 0xffffffcc
   153e8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   153ec:	bl	114b0 <strlen@plt>
   153f0:	str	r0, [fp, #-56]	; 0xffffffc8
   153f4:	b	15494 <__assert_fail@plt+0x3eb8>
   153f8:	movw	r0, #1
   153fc:	strb	r0, [fp, #-57]	; 0xffffffc7
   15400:	movw	r0, #1
   15404:	strb	r0, [fp, #-59]	; 0xffffffc5
   15408:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1540c:	tst	r0, #1
   15410:	bne	1541c <__assert_fail@plt+0x3e40>
   15414:	movw	r0, #1
   15418:	strb	r0, [fp, #-57]	; 0xffffffc7
   1541c:	b	15420 <__assert_fail@plt+0x3e44>
   15420:	movw	r0, #2
   15424:	str	r0, [fp, #8]
   15428:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1542c:	tst	r0, #1
   15430:	bne	1546c <__assert_fail@plt+0x3e90>
   15434:	b	15438 <__assert_fail@plt+0x3e5c>
   15438:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1543c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15440:	cmp	r0, r1
   15444:	bcs	1545c <__assert_fail@plt+0x3e80>
   15448:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1544c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15450:	add	r0, r0, r1
   15454:	movw	r1, #39	; 0x27
   15458:	strb	r1, [r0]
   1545c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15460:	add	r0, r0, #1
   15464:	str	r0, [fp, #-44]	; 0xffffffd4
   15468:	b	1546c <__assert_fail@plt+0x3e90>
   1546c:	movw	r0, #60474	; 0xec3a
   15470:	movt	r0, #1
   15474:	str	r0, [fp, #-52]	; 0xffffffcc
   15478:	movw	r0, #1
   1547c:	str	r0, [fp, #-56]	; 0xffffffc8
   15480:	b	15494 <__assert_fail@plt+0x3eb8>
   15484:	movw	r0, #0
   15488:	strb	r0, [fp, #-59]	; 0xffffffc5
   1548c:	b	15494 <__assert_fail@plt+0x3eb8>
   15490:	bl	115b8 <abort@plt>
   15494:	movw	r0, #0
   15498:	str	r0, [fp, #-40]	; 0xffffffd8
   1549c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   154a0:	cmn	r0, #1
   154a4:	bne	154d0 <__assert_fail@plt+0x3ef4>
   154a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   154ac:	ldr	r1, [fp, #-40]	; 0xffffffd8
   154b0:	add	r0, r0, r1
   154b4:	ldrb	r0, [r0]
   154b8:	cmp	r0, #0
   154bc:	movw	r0, #0
   154c0:	moveq	r0, #1
   154c4:	and	r0, r0, #1
   154c8:	str	r0, [sp, #48]	; 0x30
   154cc:	b	154ec <__assert_fail@plt+0x3f10>
   154d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   154d4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   154d8:	cmp	r0, r1
   154dc:	movw	r0, #0
   154e0:	moveq	r0, #1
   154e4:	and	r0, r0, #1
   154e8:	str	r0, [sp, #48]	; 0x30
   154ec:	ldr	r0, [sp, #48]	; 0x30
   154f0:	cmp	r0, #0
   154f4:	movw	r0, #0
   154f8:	movne	r0, #1
   154fc:	mvn	r1, #0
   15500:	eor	r0, r0, r1
   15504:	tst	r0, #1
   15508:	beq	166f4 <__assert_fail@plt+0x5118>
   1550c:	movw	r0, #0
   15510:	strb	r0, [fp, #-65]	; 0xffffffbf
   15514:	strb	r0, [fp, #-66]	; 0xffffffbe
   15518:	strb	r0, [fp, #-67]	; 0xffffffbd
   1551c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15520:	tst	r0, #1
   15524:	beq	155d0 <__assert_fail@plt+0x3ff4>
   15528:	ldr	r0, [fp, #8]
   1552c:	cmp	r0, #2
   15530:	beq	155d0 <__assert_fail@plt+0x3ff4>
   15534:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15538:	cmp	r0, #0
   1553c:	beq	155d0 <__assert_fail@plt+0x3ff4>
   15540:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15544:	ldr	r1, [fp, #-56]	; 0xffffffc8
   15548:	add	r0, r0, r1
   1554c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15550:	cmn	r1, #1
   15554:	str	r0, [sp, #44]	; 0x2c
   15558:	bne	15580 <__assert_fail@plt+0x3fa4>
   1555c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15560:	movw	r1, #1
   15564:	cmp	r1, r0
   15568:	bcs	15580 <__assert_fail@plt+0x3fa4>
   1556c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15570:	bl	114b0 <strlen@plt>
   15574:	str	r0, [fp, #-36]	; 0xffffffdc
   15578:	str	r0, [sp, #40]	; 0x28
   1557c:	b	15588 <__assert_fail@plt+0x3fac>
   15580:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15584:	str	r0, [sp, #40]	; 0x28
   15588:	ldr	r0, [sp, #40]	; 0x28
   1558c:	ldr	r1, [sp, #44]	; 0x2c
   15590:	cmp	r1, r0
   15594:	bhi	155d0 <__assert_fail@plt+0x3ff4>
   15598:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1559c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   155a0:	add	r0, r0, r1
   155a4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   155a8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   155ac:	bl	1136c <memcmp@plt>
   155b0:	cmp	r0, #0
   155b4:	bne	155d0 <__assert_fail@plt+0x3ff4>
   155b8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   155bc:	tst	r0, #1
   155c0:	beq	155c8 <__assert_fail@plt+0x3fec>
   155c4:	b	16874 <__assert_fail@plt+0x5298>
   155c8:	movw	r0, #1
   155cc:	strb	r0, [fp, #-65]	; 0xffffffbf
   155d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   155d4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   155d8:	ldrb	r0, [r0, r1]
   155dc:	strb	r0, [fp, #-63]	; 0xffffffc1
   155e0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   155e4:	mov	r1, r0
   155e8:	cmp	r0, #126	; 0x7e
   155ec:	str	r1, [sp, #36]	; 0x24
   155f0:	bhi	15e60 <__assert_fail@plt+0x4884>
   155f4:	add	r0, pc, #8
   155f8:	ldr	r1, [sp, #36]	; 0x24
   155fc:	ldr	r0, [r0, r1, lsl #2]
   15600:	mov	pc, r0
   15604:	andeq	r5, r1, r0, lsl #16
   15608:	andeq	r5, r1, r0, ror #28
   1560c:	andeq	r5, r1, r0, ror #28
   15610:	andeq	r5, r1, r0, ror #28
   15614:	andeq	r5, r1, r0, ror #28
   15618:	andeq	r5, r1, r0, ror #28
   1561c:	andeq	r5, r1, r0, ror #28
   15620:	andeq	r5, r1, r8, lsl #24
   15624:	andeq	r5, r1, r4, lsl ip
   15628:	andeq	r5, r1, r4, asr #24
   1562c:	andeq	r5, r1, ip, lsr #24
   15630:	andeq	r5, r1, r0, asr ip
   15634:	andeq	r5, r1, r0, lsr #24
   15638:	andeq	r5, r1, r8, lsr ip
   1563c:	andeq	r5, r1, r0, ror #28
   15640:	andeq	r5, r1, r0, ror #28
   15644:	andeq	r5, r1, r0, ror #28
   15648:	andeq	r5, r1, r0, ror #28
   1564c:	andeq	r5, r1, r0, ror #28
   15650:	andeq	r5, r1, r0, ror #28
   15654:	andeq	r5, r1, r0, ror #28
   15658:	andeq	r5, r1, r0, ror #28
   1565c:	andeq	r5, r1, r0, ror #28
   15660:	andeq	r5, r1, r0, ror #28
   15664:	andeq	r5, r1, r0, ror #28
   15668:	andeq	r5, r1, r0, ror #28
   1566c:	andeq	r5, r1, r0, ror #28
   15670:	andeq	r5, r1, r0, ror #28
   15674:	andeq	r5, r1, r0, ror #28
   15678:	andeq	r5, r1, r0, ror #28
   1567c:	andeq	r5, r1, r0, ror #28
   15680:	andeq	r5, r1, r0, ror #28
   15684:	andeq	r5, r1, r4, lsr sp
   15688:	andeq	r5, r1, ip, lsr sp
   1568c:	andeq	r5, r1, ip, lsr sp
   15690:	andeq	r5, r1, r0, lsr #26
   15694:	andeq	r5, r1, ip, lsr sp
   15698:	andeq	r5, r1, r4, asr lr
   1569c:	andeq	r5, r1, ip, lsr sp
   156a0:	andeq	r5, r1, ip, asr sp
   156a4:	andeq	r5, r1, ip, lsr sp
   156a8:	andeq	r5, r1, ip, lsr sp
   156ac:	andeq	r5, r1, ip, lsr sp
   156b0:	andeq	r5, r1, r4, asr lr
   156b4:	andeq	r5, r1, r4, asr lr
   156b8:	andeq	r5, r1, r4, asr lr
   156bc:	andeq	r5, r1, r4, asr lr
   156c0:	andeq	r5, r1, r4, asr lr
   156c4:	andeq	r5, r1, r4, asr lr
   156c8:	andeq	r5, r1, r4, asr lr
   156cc:	andeq	r5, r1, r4, asr lr
   156d0:	andeq	r5, r1, r4, asr lr
   156d4:	andeq	r5, r1, r4, asr lr
   156d8:	andeq	r5, r1, r4, asr lr
   156dc:	andeq	r5, r1, r4, asr lr
   156e0:	andeq	r5, r1, r4, asr lr
   156e4:	andeq	r5, r1, r4, asr lr
   156e8:	andeq	r5, r1, r4, asr lr
   156ec:	andeq	r5, r1, r4, asr lr
   156f0:	andeq	r5, r1, ip, lsr sp
   156f4:	andeq	r5, r1, ip, lsr sp
   156f8:	andeq	r5, r1, ip, lsr sp
   156fc:	andeq	r5, r1, ip, lsr sp
   15700:	andeq	r5, r1, ip, lsl #20
   15704:	andeq	r5, r1, r0, ror #28
   15708:	andeq	r5, r1, r4, asr lr
   1570c:	andeq	r5, r1, r4, asr lr
   15710:	andeq	r5, r1, r4, asr lr
   15714:	andeq	r5, r1, r4, asr lr
   15718:	andeq	r5, r1, r4, asr lr
   1571c:	andeq	r5, r1, r4, asr lr
   15720:	andeq	r5, r1, r4, asr lr
   15724:	andeq	r5, r1, r4, asr lr
   15728:	andeq	r5, r1, r4, asr lr
   1572c:	andeq	r5, r1, r4, asr lr
   15730:	andeq	r5, r1, r4, asr lr
   15734:	andeq	r5, r1, r4, asr lr
   15738:	andeq	r5, r1, r4, asr lr
   1573c:	andeq	r5, r1, r4, asr lr
   15740:	andeq	r5, r1, r4, asr lr
   15744:	andeq	r5, r1, r4, asr lr
   15748:	andeq	r5, r1, r4, asr lr
   1574c:	andeq	r5, r1, r4, asr lr
   15750:	andeq	r5, r1, r4, asr lr
   15754:	andeq	r5, r1, r4, asr lr
   15758:	andeq	r5, r1, r4, asr lr
   1575c:	andeq	r5, r1, r4, asr lr
   15760:	andeq	r5, r1, r4, asr lr
   15764:	andeq	r5, r1, r4, asr lr
   15768:	andeq	r5, r1, r4, asr lr
   1576c:	andeq	r5, r1, r4, asr lr
   15770:	andeq	r5, r1, ip, lsr sp
   15774:	andeq	r5, r1, ip, asr ip
   15778:	andeq	r5, r1, r4, asr lr
   1577c:	andeq	r5, r1, ip, lsr sp
   15780:	andeq	r5, r1, r4, asr lr
   15784:	andeq	r5, r1, ip, lsr sp
   15788:	andeq	r5, r1, r4, asr lr
   1578c:	andeq	r5, r1, r4, asr lr
   15790:	andeq	r5, r1, r4, asr lr
   15794:	andeq	r5, r1, r4, asr lr
   15798:	andeq	r5, r1, r4, asr lr
   1579c:	andeq	r5, r1, r4, asr lr
   157a0:	andeq	r5, r1, r4, asr lr
   157a4:	andeq	r5, r1, r4, asr lr
   157a8:	andeq	r5, r1, r4, asr lr
   157ac:	andeq	r5, r1, r4, asr lr
   157b0:	andeq	r5, r1, r4, asr lr
   157b4:	andeq	r5, r1, r4, asr lr
   157b8:	andeq	r5, r1, r4, asr lr
   157bc:	andeq	r5, r1, r4, asr lr
   157c0:	andeq	r5, r1, r4, asr lr
   157c4:	andeq	r5, r1, r4, asr lr
   157c8:	andeq	r5, r1, r4, asr lr
   157cc:	andeq	r5, r1, r4, asr lr
   157d0:	andeq	r5, r1, r4, asr lr
   157d4:	andeq	r5, r1, r4, asr lr
   157d8:	andeq	r5, r1, r4, asr lr
   157dc:	andeq	r5, r1, r4, asr lr
   157e0:	andeq	r5, r1, r4, asr lr
   157e4:	andeq	r5, r1, r4, asr lr
   157e8:	andeq	r5, r1, r4, asr lr
   157ec:	andeq	r5, r1, r4, asr lr
   157f0:	andeq	r5, r1, ip, ror #25
   157f4:	andeq	r5, r1, ip, lsr sp
   157f8:	andeq	r5, r1, ip, ror #25
   157fc:	andeq	r5, r1, r0, lsr #26
   15800:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15804:	tst	r0, #1
   15808:	beq	159f0 <__assert_fail@plt+0x4414>
   1580c:	b	15810 <__assert_fail@plt+0x4234>
   15810:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15814:	tst	r0, #1
   15818:	beq	15820 <__assert_fail@plt+0x4244>
   1581c:	b	16874 <__assert_fail@plt+0x5298>
   15820:	movw	r0, #1
   15824:	strb	r0, [fp, #-66]	; 0xffffffbe
   15828:	ldr	r0, [fp, #8]
   1582c:	cmp	r0, #2
   15830:	bne	158e4 <__assert_fail@plt+0x4308>
   15834:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   15838:	tst	r0, #1
   1583c:	bne	158e4 <__assert_fail@plt+0x4308>
   15840:	b	15844 <__assert_fail@plt+0x4268>
   15844:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15848:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1584c:	cmp	r0, r1
   15850:	bcs	15868 <__assert_fail@plt+0x428c>
   15854:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15858:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1585c:	add	r0, r0, r1
   15860:	movw	r1, #39	; 0x27
   15864:	strb	r1, [r0]
   15868:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1586c:	add	r0, r0, #1
   15870:	str	r0, [fp, #-44]	; 0xffffffd4
   15874:	b	15878 <__assert_fail@plt+0x429c>
   15878:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1587c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15880:	cmp	r0, r1
   15884:	bcs	1589c <__assert_fail@plt+0x42c0>
   15888:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1588c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15890:	add	r0, r0, r1
   15894:	movw	r1, #36	; 0x24
   15898:	strb	r1, [r0]
   1589c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   158a0:	add	r0, r0, #1
   158a4:	str	r0, [fp, #-44]	; 0xffffffd4
   158a8:	b	158ac <__assert_fail@plt+0x42d0>
   158ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   158b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   158b4:	cmp	r0, r1
   158b8:	bcs	158d0 <__assert_fail@plt+0x42f4>
   158bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   158c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   158c4:	add	r0, r0, r1
   158c8:	movw	r1, #39	; 0x27
   158cc:	strb	r1, [r0]
   158d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   158d4:	add	r0, r0, #1
   158d8:	str	r0, [fp, #-44]	; 0xffffffd4
   158dc:	movw	r0, #1
   158e0:	strb	r0, [fp, #-60]	; 0xffffffc4
   158e4:	b	158e8 <__assert_fail@plt+0x430c>
   158e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   158ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   158f0:	cmp	r0, r1
   158f4:	bcs	1590c <__assert_fail@plt+0x4330>
   158f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   158fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15900:	add	r0, r0, r1
   15904:	movw	r1, #92	; 0x5c
   15908:	strb	r1, [r0]
   1590c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15910:	add	r0, r0, #1
   15914:	str	r0, [fp, #-44]	; 0xffffffd4
   15918:	b	1591c <__assert_fail@plt+0x4340>
   1591c:	ldr	r0, [fp, #8]
   15920:	cmp	r0, #2
   15924:	beq	159e4 <__assert_fail@plt+0x4408>
   15928:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1592c:	add	r0, r0, #1
   15930:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15934:	cmp	r0, r1
   15938:	bcs	159e4 <__assert_fail@plt+0x4408>
   1593c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15940:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15944:	add	r1, r1, #1
   15948:	add	r0, r0, r1
   1594c:	ldrb	r0, [r0]
   15950:	movw	r1, #48	; 0x30
   15954:	cmp	r1, r0
   15958:	bgt	159e4 <__assert_fail@plt+0x4408>
   1595c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15960:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15964:	add	r1, r1, #1
   15968:	add	r0, r0, r1
   1596c:	ldrb	r0, [r0]
   15970:	cmp	r0, #57	; 0x39
   15974:	bgt	159e4 <__assert_fail@plt+0x4408>
   15978:	b	1597c <__assert_fail@plt+0x43a0>
   1597c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15980:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15984:	cmp	r0, r1
   15988:	bcs	159a0 <__assert_fail@plt+0x43c4>
   1598c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15990:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15994:	add	r0, r0, r1
   15998:	movw	r1, #48	; 0x30
   1599c:	strb	r1, [r0]
   159a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   159a4:	add	r0, r0, #1
   159a8:	str	r0, [fp, #-44]	; 0xffffffd4
   159ac:	b	159b0 <__assert_fail@plt+0x43d4>
   159b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   159b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   159b8:	cmp	r0, r1
   159bc:	bcs	159d4 <__assert_fail@plt+0x43f8>
   159c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   159c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   159c8:	add	r0, r0, r1
   159cc:	movw	r1, #48	; 0x30
   159d0:	strb	r1, [r0]
   159d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   159d8:	add	r0, r0, #1
   159dc:	str	r0, [fp, #-44]	; 0xffffffd4
   159e0:	b	159e4 <__assert_fail@plt+0x4408>
   159e4:	movw	r0, #48	; 0x30
   159e8:	strb	r0, [fp, #-63]	; 0xffffffc1
   159ec:	b	15a08 <__assert_fail@plt+0x442c>
   159f0:	ldr	r0, [fp, #12]
   159f4:	and	r0, r0, #1
   159f8:	cmp	r0, #0
   159fc:	beq	15a04 <__assert_fail@plt+0x4428>
   15a00:	b	166e4 <__assert_fail@plt+0x5108>
   15a04:	b	15a08 <__assert_fail@plt+0x442c>
   15a08:	b	16480 <__assert_fail@plt+0x4ea4>
   15a0c:	ldr	r0, [fp, #8]
   15a10:	cmp	r0, #2
   15a14:	str	r0, [sp, #32]
   15a18:	beq	15a30 <__assert_fail@plt+0x4454>
   15a1c:	b	15a20 <__assert_fail@plt+0x4444>
   15a20:	ldr	r0, [sp, #32]
   15a24:	cmp	r0, #5
   15a28:	beq	15a44 <__assert_fail@plt+0x4468>
   15a2c:	b	15c00 <__assert_fail@plt+0x4624>
   15a30:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15a34:	tst	r0, #1
   15a38:	beq	15a40 <__assert_fail@plt+0x4464>
   15a3c:	b	16874 <__assert_fail@plt+0x5298>
   15a40:	b	15c04 <__assert_fail@plt+0x4628>
   15a44:	ldr	r0, [fp, #12]
   15a48:	and	r0, r0, #4
   15a4c:	cmp	r0, #0
   15a50:	beq	15bfc <__assert_fail@plt+0x4620>
   15a54:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15a58:	add	r0, r0, #2
   15a5c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15a60:	cmp	r0, r1
   15a64:	bcs	15bfc <__assert_fail@plt+0x4620>
   15a68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15a6c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15a70:	add	r1, r1, #1
   15a74:	add	r0, r0, r1
   15a78:	ldrb	r0, [r0]
   15a7c:	cmp	r0, #63	; 0x3f
   15a80:	bne	15bfc <__assert_fail@plt+0x4620>
   15a84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15a88:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15a8c:	add	r0, r1, r0
   15a90:	ldrb	r0, [r0, #2]
   15a94:	mov	r1, r0
   15a98:	cmp	r0, #33	; 0x21
   15a9c:	str	r1, [sp, #28]
   15aa0:	beq	15af0 <__assert_fail@plt+0x4514>
   15aa4:	b	15aa8 <__assert_fail@plt+0x44cc>
   15aa8:	ldr	r0, [sp, #28]
   15aac:	sub	r1, r0, #39	; 0x27
   15ab0:	cmp	r1, #3
   15ab4:	bcc	15af0 <__assert_fail@plt+0x4514>
   15ab8:	b	15abc <__assert_fail@plt+0x44e0>
   15abc:	ldr	r0, [sp, #28]
   15ac0:	cmp	r0, #45	; 0x2d
   15ac4:	beq	15af0 <__assert_fail@plt+0x4514>
   15ac8:	b	15acc <__assert_fail@plt+0x44f0>
   15acc:	ldr	r0, [sp, #28]
   15ad0:	cmp	r0, #47	; 0x2f
   15ad4:	beq	15af0 <__assert_fail@plt+0x4514>
   15ad8:	b	15adc <__assert_fail@plt+0x4500>
   15adc:	ldr	r0, [sp, #28]
   15ae0:	sub	r1, r0, #60	; 0x3c
   15ae4:	cmp	r1, #2
   15ae8:	bhi	15bf4 <__assert_fail@plt+0x4618>
   15aec:	b	15af0 <__assert_fail@plt+0x4514>
   15af0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15af4:	tst	r0, #1
   15af8:	beq	15b00 <__assert_fail@plt+0x4524>
   15afc:	b	16874 <__assert_fail@plt+0x5298>
   15b00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15b04:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15b08:	add	r1, r1, #2
   15b0c:	add	r0, r0, r1
   15b10:	ldrb	r0, [r0]
   15b14:	strb	r0, [fp, #-63]	; 0xffffffc1
   15b18:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15b1c:	add	r0, r0, #2
   15b20:	str	r0, [fp, #-40]	; 0xffffffd8
   15b24:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15b2c:	cmp	r0, r1
   15b30:	bcs	15b48 <__assert_fail@plt+0x456c>
   15b34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b38:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15b3c:	add	r0, r0, r1
   15b40:	movw	r1, #63	; 0x3f
   15b44:	strb	r1, [r0]
   15b48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b4c:	add	r0, r0, #1
   15b50:	str	r0, [fp, #-44]	; 0xffffffd4
   15b54:	b	15b58 <__assert_fail@plt+0x457c>
   15b58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15b60:	cmp	r0, r1
   15b64:	bcs	15b7c <__assert_fail@plt+0x45a0>
   15b68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b6c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15b70:	add	r0, r0, r1
   15b74:	movw	r1, #34	; 0x22
   15b78:	strb	r1, [r0]
   15b7c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b80:	add	r0, r0, #1
   15b84:	str	r0, [fp, #-44]	; 0xffffffd4
   15b88:	b	15b8c <__assert_fail@plt+0x45b0>
   15b8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b90:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15b94:	cmp	r0, r1
   15b98:	bcs	15bb0 <__assert_fail@plt+0x45d4>
   15b9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ba0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15ba4:	add	r0, r0, r1
   15ba8:	movw	r1, #34	; 0x22
   15bac:	strb	r1, [r0]
   15bb0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15bb4:	add	r0, r0, #1
   15bb8:	str	r0, [fp, #-44]	; 0xffffffd4
   15bbc:	b	15bc0 <__assert_fail@plt+0x45e4>
   15bc0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15bc4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15bc8:	cmp	r0, r1
   15bcc:	bcs	15be4 <__assert_fail@plt+0x4608>
   15bd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15bd4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15bd8:	add	r0, r0, r1
   15bdc:	movw	r1, #63	; 0x3f
   15be0:	strb	r1, [r0]
   15be4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15be8:	add	r0, r0, #1
   15bec:	str	r0, [fp, #-44]	; 0xffffffd4
   15bf0:	b	15bf8 <__assert_fail@plt+0x461c>
   15bf4:	b	15bf8 <__assert_fail@plt+0x461c>
   15bf8:	b	15bfc <__assert_fail@plt+0x4620>
   15bfc:	b	15c04 <__assert_fail@plt+0x4628>
   15c00:	b	15c04 <__assert_fail@plt+0x4628>
   15c04:	b	16480 <__assert_fail@plt+0x4ea4>
   15c08:	movw	r0, #97	; 0x61
   15c0c:	strb	r0, [fp, #-64]	; 0xffffffc0
   15c10:	b	15cd0 <__assert_fail@plt+0x46f4>
   15c14:	movw	r0, #98	; 0x62
   15c18:	strb	r0, [fp, #-64]	; 0xffffffc0
   15c1c:	b	15cd0 <__assert_fail@plt+0x46f4>
   15c20:	movw	r0, #102	; 0x66
   15c24:	strb	r0, [fp, #-64]	; 0xffffffc0
   15c28:	b	15cd0 <__assert_fail@plt+0x46f4>
   15c2c:	movw	r0, #110	; 0x6e
   15c30:	strb	r0, [fp, #-64]	; 0xffffffc0
   15c34:	b	15cb0 <__assert_fail@plt+0x46d4>
   15c38:	movw	r0, #114	; 0x72
   15c3c:	strb	r0, [fp, #-64]	; 0xffffffc0
   15c40:	b	15cb0 <__assert_fail@plt+0x46d4>
   15c44:	movw	r0, #116	; 0x74
   15c48:	strb	r0, [fp, #-64]	; 0xffffffc0
   15c4c:	b	15cb0 <__assert_fail@plt+0x46d4>
   15c50:	movw	r0, #118	; 0x76
   15c54:	strb	r0, [fp, #-64]	; 0xffffffc0
   15c58:	b	15cd0 <__assert_fail@plt+0x46f4>
   15c5c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15c60:	strb	r0, [fp, #-64]	; 0xffffffc0
   15c64:	ldr	r0, [fp, #8]
   15c68:	cmp	r0, #2
   15c6c:	bne	15c84 <__assert_fail@plt+0x46a8>
   15c70:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15c74:	tst	r0, #1
   15c78:	beq	15c80 <__assert_fail@plt+0x46a4>
   15c7c:	b	16874 <__assert_fail@plt+0x5298>
   15c80:	b	16608 <__assert_fail@plt+0x502c>
   15c84:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15c88:	tst	r0, #1
   15c8c:	beq	15cac <__assert_fail@plt+0x46d0>
   15c90:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15c94:	tst	r0, #1
   15c98:	beq	15cac <__assert_fail@plt+0x46d0>
   15c9c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15ca0:	cmp	r0, #0
   15ca4:	beq	15cac <__assert_fail@plt+0x46d0>
   15ca8:	b	16608 <__assert_fail@plt+0x502c>
   15cac:	b	15cb0 <__assert_fail@plt+0x46d4>
   15cb0:	ldr	r0, [fp, #8]
   15cb4:	cmp	r0, #2
   15cb8:	bne	15ccc <__assert_fail@plt+0x46f0>
   15cbc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15cc0:	tst	r0, #1
   15cc4:	beq	15ccc <__assert_fail@plt+0x46f0>
   15cc8:	b	16874 <__assert_fail@plt+0x5298>
   15ccc:	b	15cd0 <__assert_fail@plt+0x46f4>
   15cd0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15cd4:	tst	r0, #1
   15cd8:	beq	15ce8 <__assert_fail@plt+0x470c>
   15cdc:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   15ce0:	strb	r0, [fp, #-63]	; 0xffffffc1
   15ce4:	b	164f4 <__assert_fail@plt+0x4f18>
   15ce8:	b	16480 <__assert_fail@plt+0x4ea4>
   15cec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15cf0:	cmn	r0, #1
   15cf4:	bne	15d0c <__assert_fail@plt+0x4730>
   15cf8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15cfc:	ldrb	r0, [r0, #1]
   15d00:	cmp	r0, #0
   15d04:	beq	15d1c <__assert_fail@plt+0x4740>
   15d08:	b	15d18 <__assert_fail@plt+0x473c>
   15d0c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15d10:	cmp	r0, #1
   15d14:	beq	15d1c <__assert_fail@plt+0x4740>
   15d18:	b	16480 <__assert_fail@plt+0x4ea4>
   15d1c:	b	15d20 <__assert_fail@plt+0x4744>
   15d20:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15d24:	cmp	r0, #0
   15d28:	beq	15d30 <__assert_fail@plt+0x4754>
   15d2c:	b	16480 <__assert_fail@plt+0x4ea4>
   15d30:	b	15d34 <__assert_fail@plt+0x4758>
   15d34:	movw	r0, #1
   15d38:	strb	r0, [fp, #-67]	; 0xffffffbd
   15d3c:	ldr	r0, [fp, #8]
   15d40:	cmp	r0, #2
   15d44:	bne	15d58 <__assert_fail@plt+0x477c>
   15d48:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15d4c:	tst	r0, #1
   15d50:	beq	15d58 <__assert_fail@plt+0x477c>
   15d54:	b	16874 <__assert_fail@plt+0x5298>
   15d58:	b	16480 <__assert_fail@plt+0x4ea4>
   15d5c:	movw	r0, #1
   15d60:	strb	r0, [fp, #-61]	; 0xffffffc3
   15d64:	strb	r0, [fp, #-67]	; 0xffffffbd
   15d68:	ldr	r0, [fp, #8]
   15d6c:	cmp	r0, #2
   15d70:	bne	15e50 <__assert_fail@plt+0x4874>
   15d74:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15d78:	tst	r0, #1
   15d7c:	beq	15d84 <__assert_fail@plt+0x47a8>
   15d80:	b	16874 <__assert_fail@plt+0x5298>
   15d84:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15d88:	cmp	r0, #0
   15d8c:	beq	15dac <__assert_fail@plt+0x47d0>
   15d90:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15d94:	cmp	r0, #0
   15d98:	bne	15dac <__assert_fail@plt+0x47d0>
   15d9c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15da0:	str	r0, [fp, #-48]	; 0xffffffd0
   15da4:	movw	r0, #0
   15da8:	str	r0, [fp, #-28]	; 0xffffffe4
   15dac:	b	15db0 <__assert_fail@plt+0x47d4>
   15db0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15db4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15db8:	cmp	r0, r1
   15dbc:	bcs	15dd4 <__assert_fail@plt+0x47f8>
   15dc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15dc4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15dc8:	add	r0, r0, r1
   15dcc:	movw	r1, #39	; 0x27
   15dd0:	strb	r1, [r0]
   15dd4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15dd8:	add	r0, r0, #1
   15ddc:	str	r0, [fp, #-44]	; 0xffffffd4
   15de0:	b	15de4 <__assert_fail@plt+0x4808>
   15de4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15de8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15dec:	cmp	r0, r1
   15df0:	bcs	15e08 <__assert_fail@plt+0x482c>
   15df4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15df8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15dfc:	add	r0, r0, r1
   15e00:	movw	r1, #92	; 0x5c
   15e04:	strb	r1, [r0]
   15e08:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15e0c:	add	r0, r0, #1
   15e10:	str	r0, [fp, #-44]	; 0xffffffd4
   15e14:	b	15e18 <__assert_fail@plt+0x483c>
   15e18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15e1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15e20:	cmp	r0, r1
   15e24:	bcs	15e3c <__assert_fail@plt+0x4860>
   15e28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e2c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15e30:	add	r0, r0, r1
   15e34:	movw	r1, #39	; 0x27
   15e38:	strb	r1, [r0]
   15e3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15e40:	add	r0, r0, #1
   15e44:	str	r0, [fp, #-44]	; 0xffffffd4
   15e48:	movw	r0, #0
   15e4c:	strb	r0, [fp, #-60]	; 0xffffffc4
   15e50:	b	16480 <__assert_fail@plt+0x4ea4>
   15e54:	movw	r0, #1
   15e58:	strb	r0, [fp, #-67]	; 0xffffffbd
   15e5c:	b	16480 <__assert_fail@plt+0x4ea4>
   15e60:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   15e64:	tst	r0, #1
   15e68:	beq	15ea8 <__assert_fail@plt+0x48cc>
   15e6c:	mov	r0, #1
   15e70:	str	r0, [fp, #-72]	; 0xffffffb8
   15e74:	bl	11474 <__ctype_b_loc@plt>
   15e78:	ldr	r0, [r0]
   15e7c:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   15e80:	mov	r2, r1
   15e84:	add	r0, r0, r1, lsl #1
   15e88:	ldrh	r0, [r0]
   15e8c:	and	r0, r0, #16384	; 0x4000
   15e90:	cmp	r0, #0
   15e94:	movw	r0, #0
   15e98:	movne	r0, #1
   15e9c:	and	r0, r0, #1
   15ea0:	strb	r0, [fp, #-73]	; 0xffffffb7
   15ea4:	b	16134 <__assert_fail@plt+0x4b58>
   15ea8:	sub	r0, fp, #84	; 0x54
   15eac:	movw	r1, #0
   15eb0:	and	r1, r1, #255	; 0xff
   15eb4:	movw	r2, #8
   15eb8:	bl	11504 <memset@plt>
   15ebc:	movw	r0, #0
   15ec0:	str	r0, [fp, #-72]	; 0xffffffb8
   15ec4:	movw	r0, #1
   15ec8:	strb	r0, [fp, #-73]	; 0xffffffb7
   15ecc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15ed0:	cmn	r0, #1
   15ed4:	bne	15ee4 <__assert_fail@plt+0x4908>
   15ed8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15edc:	bl	114b0 <strlen@plt>
   15ee0:	str	r0, [fp, #-36]	; 0xffffffdc
   15ee4:	b	15ee8 <__assert_fail@plt+0x490c>
   15ee8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15eec:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15ef0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15ef4:	add	r1, r1, r2
   15ef8:	add	r1, r0, r1
   15efc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15f00:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15f04:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15f08:	add	r2, r2, r3
   15f0c:	sub	r2, r0, r2
   15f10:	add	r0, sp, #88	; 0x58
   15f14:	sub	r3, fp, #84	; 0x54
   15f18:	bl	14ad8 <__assert_fail@plt+0x34fc>
   15f1c:	str	r0, [sp, #84]	; 0x54
   15f20:	ldr	r0, [sp, #84]	; 0x54
   15f24:	cmp	r0, #0
   15f28:	bne	15f30 <__assert_fail@plt+0x4954>
   15f2c:	b	16130 <__assert_fail@plt+0x4b54>
   15f30:	ldr	r0, [sp, #84]	; 0x54
   15f34:	cmn	r0, #1
   15f38:	bne	15f48 <__assert_fail@plt+0x496c>
   15f3c:	movw	r0, #0
   15f40:	strb	r0, [fp, #-73]	; 0xffffffb7
   15f44:	b	16130 <__assert_fail@plt+0x4b54>
   15f48:	ldr	r0, [sp, #84]	; 0x54
   15f4c:	cmn	r0, #2
   15f50:	bne	15fc4 <__assert_fail@plt+0x49e8>
   15f54:	movw	r0, #0
   15f58:	strb	r0, [fp, #-73]	; 0xffffffb7
   15f5c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15f60:	ldr	r1, [fp, #-72]	; 0xffffffb8
   15f64:	add	r0, r0, r1
   15f68:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15f6c:	cmp	r0, r1
   15f70:	movw	r0, #0
   15f74:	str	r0, [sp, #24]
   15f78:	bcs	15fa4 <__assert_fail@plt+0x49c8>
   15f7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15f80:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15f84:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15f88:	add	r1, r1, r2
   15f8c:	add	r0, r0, r1
   15f90:	ldrb	r0, [r0]
   15f94:	cmp	r0, #0
   15f98:	movw	r0, #0
   15f9c:	movne	r0, #1
   15fa0:	str	r0, [sp, #24]
   15fa4:	ldr	r0, [sp, #24]
   15fa8:	tst	r0, #1
   15fac:	beq	15fc0 <__assert_fail@plt+0x49e4>
   15fb0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   15fb4:	add	r0, r0, #1
   15fb8:	str	r0, [fp, #-72]	; 0xffffffb8
   15fbc:	b	15f5c <__assert_fail@plt+0x4980>
   15fc0:	b	16130 <__assert_fail@plt+0x4b54>
   15fc4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15fc8:	tst	r0, #1
   15fcc:	beq	160d8 <__assert_fail@plt+0x4afc>
   15fd0:	ldr	r0, [fp, #8]
   15fd4:	cmp	r0, #2
   15fd8:	bne	160d8 <__assert_fail@plt+0x4afc>
   15fdc:	movw	r0, #1
   15fe0:	str	r0, [sp, #80]	; 0x50
   15fe4:	ldr	r0, [sp, #80]	; 0x50
   15fe8:	ldr	r1, [sp, #84]	; 0x54
   15fec:	cmp	r0, r1
   15ff0:	bcs	160d4 <__assert_fail@plt+0x4af8>
   15ff4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15ff8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15ffc:	ldr	r2, [fp, #-72]	; 0xffffffb8
   16000:	add	r1, r1, r2
   16004:	ldr	r2, [sp, #80]	; 0x50
   16008:	add	r1, r1, r2
   1600c:	ldrb	r0, [r0, r1]
   16010:	sub	r0, r0, #91	; 0x5b
   16014:	cmp	r0, #33	; 0x21
   16018:	str	r0, [sp, #20]
   1601c:	bhi	160bc <__assert_fail@plt+0x4ae0>
   16020:	add	r0, pc, #8
   16024:	ldr	r1, [sp, #20]
   16028:	ldr	r0, [r0, r1, lsl #2]
   1602c:	mov	pc, r0
   16030:	strheq	r6, [r1], -r8
   16034:	strheq	r6, [r1], -r8
   16038:	strheq	r6, [r1], -ip
   1603c:	strheq	r6, [r1], -r8
   16040:	strheq	r6, [r1], -ip
   16044:	strheq	r6, [r1], -r8
   16048:	strheq	r6, [r1], -ip
   1604c:	strheq	r6, [r1], -ip
   16050:	strheq	r6, [r1], -ip
   16054:	strheq	r6, [r1], -ip
   16058:	strheq	r6, [r1], -ip
   1605c:	strheq	r6, [r1], -ip
   16060:	strheq	r6, [r1], -ip
   16064:	strheq	r6, [r1], -ip
   16068:	strheq	r6, [r1], -ip
   1606c:	strheq	r6, [r1], -ip
   16070:	strheq	r6, [r1], -ip
   16074:	strheq	r6, [r1], -ip
   16078:	strheq	r6, [r1], -ip
   1607c:	strheq	r6, [r1], -ip
   16080:	strheq	r6, [r1], -ip
   16084:	strheq	r6, [r1], -ip
   16088:	strheq	r6, [r1], -ip
   1608c:	strheq	r6, [r1], -ip
   16090:	strheq	r6, [r1], -ip
   16094:	strheq	r6, [r1], -ip
   16098:	strheq	r6, [r1], -ip
   1609c:	strheq	r6, [r1], -ip
   160a0:	strheq	r6, [r1], -ip
   160a4:	strheq	r6, [r1], -ip
   160a8:	strheq	r6, [r1], -ip
   160ac:	strheq	r6, [r1], -ip
   160b0:	strheq	r6, [r1], -ip
   160b4:	strheq	r6, [r1], -r8
   160b8:	b	16874 <__assert_fail@plt+0x5298>
   160bc:	b	160c0 <__assert_fail@plt+0x4ae4>
   160c0:	b	160c4 <__assert_fail@plt+0x4ae8>
   160c4:	ldr	r0, [sp, #80]	; 0x50
   160c8:	add	r0, r0, #1
   160cc:	str	r0, [sp, #80]	; 0x50
   160d0:	b	15fe4 <__assert_fail@plt+0x4a08>
   160d4:	b	160d8 <__assert_fail@plt+0x4afc>
   160d8:	ldr	r0, [sp, #88]	; 0x58
   160dc:	bl	113b4 <iswprint@plt>
   160e0:	cmp	r0, #0
   160e4:	bne	160f0 <__assert_fail@plt+0x4b14>
   160e8:	movw	r0, #0
   160ec:	strb	r0, [fp, #-73]	; 0xffffffb7
   160f0:	ldr	r0, [sp, #84]	; 0x54
   160f4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   160f8:	add	r0, r1, r0
   160fc:	str	r0, [fp, #-72]	; 0xffffffb8
   16100:	b	16104 <__assert_fail@plt+0x4b28>
   16104:	b	16108 <__assert_fail@plt+0x4b2c>
   16108:	b	1610c <__assert_fail@plt+0x4b30>
   1610c:	sub	r0, fp, #84	; 0x54
   16110:	bl	11360 <mbsinit@plt>
   16114:	cmp	r0, #0
   16118:	movw	r0, #0
   1611c:	movne	r0, #1
   16120:	mvn	r1, #0
   16124:	eor	r0, r0, r1
   16128:	tst	r0, #1
   1612c:	bne	15ee8 <__assert_fail@plt+0x490c>
   16130:	b	16134 <__assert_fail@plt+0x4b58>
   16134:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   16138:	and	r0, r0, #1
   1613c:	strb	r0, [fp, #-67]	; 0xffffffbd
   16140:	ldr	r0, [fp, #-72]	; 0xffffffb8
   16144:	movw	r1, #1
   16148:	cmp	r1, r0
   1614c:	bcc	16168 <__assert_fail@plt+0x4b8c>
   16150:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   16154:	tst	r0, #1
   16158:	beq	1647c <__assert_fail@plt+0x4ea0>
   1615c:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   16160:	tst	r0, #1
   16164:	bne	1647c <__assert_fail@plt+0x4ea0>
   16168:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1616c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   16170:	add	r0, r0, r1
   16174:	str	r0, [sp, #76]	; 0x4c
   16178:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1617c:	tst	r0, #1
   16180:	beq	16330 <__assert_fail@plt+0x4d54>
   16184:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   16188:	tst	r0, #1
   1618c:	bne	16330 <__assert_fail@plt+0x4d54>
   16190:	b	16194 <__assert_fail@plt+0x4bb8>
   16194:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   16198:	tst	r0, #1
   1619c:	beq	161a4 <__assert_fail@plt+0x4bc8>
   161a0:	b	16874 <__assert_fail@plt+0x5298>
   161a4:	movw	r0, #1
   161a8:	strb	r0, [fp, #-66]	; 0xffffffbe
   161ac:	ldr	r0, [fp, #8]
   161b0:	cmp	r0, #2
   161b4:	bne	16268 <__assert_fail@plt+0x4c8c>
   161b8:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   161bc:	tst	r0, #1
   161c0:	bne	16268 <__assert_fail@plt+0x4c8c>
   161c4:	b	161c8 <__assert_fail@plt+0x4bec>
   161c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   161cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   161d0:	cmp	r0, r1
   161d4:	bcs	161ec <__assert_fail@plt+0x4c10>
   161d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   161dc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   161e0:	add	r0, r0, r1
   161e4:	movw	r1, #39	; 0x27
   161e8:	strb	r1, [r0]
   161ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   161f0:	add	r0, r0, #1
   161f4:	str	r0, [fp, #-44]	; 0xffffffd4
   161f8:	b	161fc <__assert_fail@plt+0x4c20>
   161fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16200:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16204:	cmp	r0, r1
   16208:	bcs	16220 <__assert_fail@plt+0x4c44>
   1620c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16210:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16214:	add	r0, r0, r1
   16218:	movw	r1, #36	; 0x24
   1621c:	strb	r1, [r0]
   16220:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16224:	add	r0, r0, #1
   16228:	str	r0, [fp, #-44]	; 0xffffffd4
   1622c:	b	16230 <__assert_fail@plt+0x4c54>
   16230:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16234:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16238:	cmp	r0, r1
   1623c:	bcs	16254 <__assert_fail@plt+0x4c78>
   16240:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16244:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16248:	add	r0, r0, r1
   1624c:	movw	r1, #39	; 0x27
   16250:	strb	r1, [r0]
   16254:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16258:	add	r0, r0, #1
   1625c:	str	r0, [fp, #-44]	; 0xffffffd4
   16260:	movw	r0, #1
   16264:	strb	r0, [fp, #-60]	; 0xffffffc4
   16268:	b	1626c <__assert_fail@plt+0x4c90>
   1626c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16270:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16274:	cmp	r0, r1
   16278:	bcs	16290 <__assert_fail@plt+0x4cb4>
   1627c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16280:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16284:	add	r0, r0, r1
   16288:	movw	r1, #92	; 0x5c
   1628c:	strb	r1, [r0]
   16290:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16294:	add	r0, r0, #1
   16298:	str	r0, [fp, #-44]	; 0xffffffd4
   1629c:	b	162a0 <__assert_fail@plt+0x4cc4>
   162a0:	b	162a4 <__assert_fail@plt+0x4cc8>
   162a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   162a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   162ac:	cmp	r0, r1
   162b0:	bcs	162d0 <__assert_fail@plt+0x4cf4>
   162b4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   162b8:	asr	r0, r0, #6
   162bc:	add	r0, r0, #48	; 0x30
   162c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   162c4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   162c8:	add	r1, r1, r2
   162cc:	strb	r0, [r1]
   162d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   162d4:	add	r0, r0, #1
   162d8:	str	r0, [fp, #-44]	; 0xffffffd4
   162dc:	b	162e0 <__assert_fail@plt+0x4d04>
   162e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   162e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   162e8:	cmp	r0, r1
   162ec:	bcs	16310 <__assert_fail@plt+0x4d34>
   162f0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   162f4:	asr	r0, r0, #3
   162f8:	and	r0, r0, #7
   162fc:	add	r0, r0, #48	; 0x30
   16300:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16304:	ldr	r2, [fp, #-44]	; 0xffffffd4
   16308:	add	r1, r1, r2
   1630c:	strb	r0, [r1]
   16310:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16314:	add	r0, r0, #1
   16318:	str	r0, [fp, #-44]	; 0xffffffd4
   1631c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   16320:	and	r0, r0, #7
   16324:	add	r0, r0, #48	; 0x30
   16328:	strb	r0, [fp, #-63]	; 0xffffffc1
   1632c:	b	1637c <__assert_fail@plt+0x4da0>
   16330:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   16334:	tst	r0, #1
   16338:	beq	16378 <__assert_fail@plt+0x4d9c>
   1633c:	b	16340 <__assert_fail@plt+0x4d64>
   16340:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16344:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16348:	cmp	r0, r1
   1634c:	bcs	16364 <__assert_fail@plt+0x4d88>
   16350:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16354:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16358:	add	r0, r0, r1
   1635c:	movw	r1, #92	; 0x5c
   16360:	strb	r1, [r0]
   16364:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16368:	add	r0, r0, #1
   1636c:	str	r0, [fp, #-44]	; 0xffffffd4
   16370:	movw	r0, #0
   16374:	strb	r0, [fp, #-65]	; 0xffffffbf
   16378:	b	1637c <__assert_fail@plt+0x4da0>
   1637c:	ldr	r0, [sp, #76]	; 0x4c
   16380:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16384:	add	r1, r1, #1
   16388:	cmp	r0, r1
   1638c:	bhi	16394 <__assert_fail@plt+0x4db8>
   16390:	b	16478 <__assert_fail@plt+0x4e9c>
   16394:	b	16398 <__assert_fail@plt+0x4dbc>
   16398:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1639c:	tst	r0, #1
   163a0:	beq	16420 <__assert_fail@plt+0x4e44>
   163a4:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   163a8:	tst	r0, #1
   163ac:	bne	16420 <__assert_fail@plt+0x4e44>
   163b0:	b	163b4 <__assert_fail@plt+0x4dd8>
   163b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   163b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   163bc:	cmp	r0, r1
   163c0:	bcs	163d8 <__assert_fail@plt+0x4dfc>
   163c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   163c8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   163cc:	add	r0, r0, r1
   163d0:	movw	r1, #39	; 0x27
   163d4:	strb	r1, [r0]
   163d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   163dc:	add	r0, r0, #1
   163e0:	str	r0, [fp, #-44]	; 0xffffffd4
   163e4:	b	163e8 <__assert_fail@plt+0x4e0c>
   163e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   163ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   163f0:	cmp	r0, r1
   163f4:	bcs	1640c <__assert_fail@plt+0x4e30>
   163f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   163fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16400:	add	r0, r0, r1
   16404:	movw	r1, #39	; 0x27
   16408:	strb	r1, [r0]
   1640c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16410:	add	r0, r0, #1
   16414:	str	r0, [fp, #-44]	; 0xffffffd4
   16418:	movw	r0, #0
   1641c:	strb	r0, [fp, #-60]	; 0xffffffc4
   16420:	b	16424 <__assert_fail@plt+0x4e48>
   16424:	b	16428 <__assert_fail@plt+0x4e4c>
   16428:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1642c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16430:	cmp	r0, r1
   16434:	bcs	1644c <__assert_fail@plt+0x4e70>
   16438:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1643c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16440:	ldr	r2, [fp, #-44]	; 0xffffffd4
   16444:	add	r1, r1, r2
   16448:	strb	r0, [r1]
   1644c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16450:	add	r0, r0, #1
   16454:	str	r0, [fp, #-44]	; 0xffffffd4
   16458:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1645c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16460:	add	r1, r1, #1
   16464:	str	r1, [fp, #-40]	; 0xffffffd8
   16468:	add	r0, r0, r1
   1646c:	ldrb	r0, [r0]
   16470:	strb	r0, [fp, #-63]	; 0xffffffc1
   16474:	b	16178 <__assert_fail@plt+0x4b9c>
   16478:	b	16608 <__assert_fail@plt+0x502c>
   1647c:	b	16480 <__assert_fail@plt+0x4ea4>
   16480:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   16484:	tst	r0, #1
   16488:	beq	16498 <__assert_fail@plt+0x4ebc>
   1648c:	ldr	r0, [fp, #8]
   16490:	cmp	r0, #2
   16494:	bne	164a4 <__assert_fail@plt+0x4ec8>
   16498:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1649c:	tst	r0, #1
   164a0:	beq	164e0 <__assert_fail@plt+0x4f04>
   164a4:	ldr	r0, [fp, #16]
   164a8:	movw	r1, #0
   164ac:	cmp	r0, r1
   164b0:	beq	164e0 <__assert_fail@plt+0x4f04>
   164b4:	ldr	r0, [fp, #16]
   164b8:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   164bc:	lsr	r1, r1, #5
   164c0:	add	r0, r0, r1, lsl #2
   164c4:	ldr	r0, [r0]
   164c8:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   164cc:	and	r1, r1, #31
   164d0:	lsr	r0, r0, r1
   164d4:	and	r0, r0, #1
   164d8:	cmp	r0, #0
   164dc:	bne	164f0 <__assert_fail@plt+0x4f14>
   164e0:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   164e4:	tst	r0, #1
   164e8:	bne	164f0 <__assert_fail@plt+0x4f14>
   164ec:	b	16608 <__assert_fail@plt+0x502c>
   164f0:	b	164f4 <__assert_fail@plt+0x4f18>
   164f4:	b	164f8 <__assert_fail@plt+0x4f1c>
   164f8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   164fc:	tst	r0, #1
   16500:	beq	16508 <__assert_fail@plt+0x4f2c>
   16504:	b	16874 <__assert_fail@plt+0x5298>
   16508:	movw	r0, #1
   1650c:	strb	r0, [fp, #-66]	; 0xffffffbe
   16510:	ldr	r0, [fp, #8]
   16514:	cmp	r0, #2
   16518:	bne	165cc <__assert_fail@plt+0x4ff0>
   1651c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   16520:	tst	r0, #1
   16524:	bne	165cc <__assert_fail@plt+0x4ff0>
   16528:	b	1652c <__assert_fail@plt+0x4f50>
   1652c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16530:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16534:	cmp	r0, r1
   16538:	bcs	16550 <__assert_fail@plt+0x4f74>
   1653c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16540:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16544:	add	r0, r0, r1
   16548:	movw	r1, #39	; 0x27
   1654c:	strb	r1, [r0]
   16550:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16554:	add	r0, r0, #1
   16558:	str	r0, [fp, #-44]	; 0xffffffd4
   1655c:	b	16560 <__assert_fail@plt+0x4f84>
   16560:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16564:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16568:	cmp	r0, r1
   1656c:	bcs	16584 <__assert_fail@plt+0x4fa8>
   16570:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16574:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16578:	add	r0, r0, r1
   1657c:	movw	r1, #36	; 0x24
   16580:	strb	r1, [r0]
   16584:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16588:	add	r0, r0, #1
   1658c:	str	r0, [fp, #-44]	; 0xffffffd4
   16590:	b	16594 <__assert_fail@plt+0x4fb8>
   16594:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16598:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1659c:	cmp	r0, r1
   165a0:	bcs	165b8 <__assert_fail@plt+0x4fdc>
   165a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   165a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   165ac:	add	r0, r0, r1
   165b0:	movw	r1, #39	; 0x27
   165b4:	strb	r1, [r0]
   165b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   165bc:	add	r0, r0, #1
   165c0:	str	r0, [fp, #-44]	; 0xffffffd4
   165c4:	movw	r0, #1
   165c8:	strb	r0, [fp, #-60]	; 0xffffffc4
   165cc:	b	165d0 <__assert_fail@plt+0x4ff4>
   165d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   165d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   165d8:	cmp	r0, r1
   165dc:	bcs	165f4 <__assert_fail@plt+0x5018>
   165e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   165e4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   165e8:	add	r0, r0, r1
   165ec:	movw	r1, #92	; 0x5c
   165f0:	strb	r1, [r0]
   165f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   165f8:	add	r0, r0, #1
   165fc:	str	r0, [fp, #-44]	; 0xffffffd4
   16600:	b	16604 <__assert_fail@plt+0x5028>
   16604:	b	16608 <__assert_fail@plt+0x502c>
   16608:	b	1660c <__assert_fail@plt+0x5030>
   1660c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   16610:	tst	r0, #1
   16614:	beq	16694 <__assert_fail@plt+0x50b8>
   16618:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   1661c:	tst	r0, #1
   16620:	bne	16694 <__assert_fail@plt+0x50b8>
   16624:	b	16628 <__assert_fail@plt+0x504c>
   16628:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1662c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16630:	cmp	r0, r1
   16634:	bcs	1664c <__assert_fail@plt+0x5070>
   16638:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1663c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16640:	add	r0, r0, r1
   16644:	movw	r1, #39	; 0x27
   16648:	strb	r1, [r0]
   1664c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16650:	add	r0, r0, #1
   16654:	str	r0, [fp, #-44]	; 0xffffffd4
   16658:	b	1665c <__assert_fail@plt+0x5080>
   1665c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16660:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16664:	cmp	r0, r1
   16668:	bcs	16680 <__assert_fail@plt+0x50a4>
   1666c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16670:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16674:	add	r0, r0, r1
   16678:	movw	r1, #39	; 0x27
   1667c:	strb	r1, [r0]
   16680:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16684:	add	r0, r0, #1
   16688:	str	r0, [fp, #-44]	; 0xffffffd4
   1668c:	movw	r0, #0
   16690:	strb	r0, [fp, #-60]	; 0xffffffc4
   16694:	b	16698 <__assert_fail@plt+0x50bc>
   16698:	b	1669c <__assert_fail@plt+0x50c0>
   1669c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   166a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   166a4:	cmp	r0, r1
   166a8:	bcs	166c0 <__assert_fail@plt+0x50e4>
   166ac:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   166b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   166b4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   166b8:	add	r1, r1, r2
   166bc:	strb	r0, [r1]
   166c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   166c4:	add	r0, r0, #1
   166c8:	str	r0, [fp, #-44]	; 0xffffffd4
   166cc:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   166d0:	tst	r0, #1
   166d4:	bne	166e0 <__assert_fail@plt+0x5104>
   166d8:	movw	r0, #0
   166dc:	strb	r0, [fp, #-62]	; 0xffffffc2
   166e0:	b	166e4 <__assert_fail@plt+0x5108>
   166e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   166e8:	add	r0, r0, #1
   166ec:	str	r0, [fp, #-40]	; 0xffffffd8
   166f0:	b	1549c <__assert_fail@plt+0x3ec0>
   166f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   166f8:	cmp	r0, #0
   166fc:	bne	1671c <__assert_fail@plt+0x5140>
   16700:	ldr	r0, [fp, #8]
   16704:	cmp	r0, #2
   16708:	bne	1671c <__assert_fail@plt+0x5140>
   1670c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   16710:	tst	r0, #1
   16714:	beq	1671c <__assert_fail@plt+0x5140>
   16718:	b	16874 <__assert_fail@plt+0x5298>
   1671c:	ldr	r0, [fp, #8]
   16720:	cmp	r0, #2
   16724:	bne	167c4 <__assert_fail@plt+0x51e8>
   16728:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1672c:	tst	r0, #1
   16730:	bne	167c4 <__assert_fail@plt+0x51e8>
   16734:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   16738:	tst	r0, #1
   1673c:	beq	167c4 <__assert_fail@plt+0x51e8>
   16740:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   16744:	tst	r0, #1
   16748:	beq	16790 <__assert_fail@plt+0x51b4>
   1674c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16750:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16754:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16758:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1675c:	ldr	ip, [fp, #12]
   16760:	ldr	lr, [fp, #16]
   16764:	ldr	r4, [fp, #20]
   16768:	ldr	r5, [fp, #24]
   1676c:	movw	r6, #5
   16770:	str	r6, [sp]
   16774:	str	ip, [sp, #4]
   16778:	str	lr, [sp, #8]
   1677c:	str	r4, [sp, #12]
   16780:	str	r5, [sp, #16]
   16784:	bl	151b4 <__assert_fail@plt+0x3bd8>
   16788:	str	r0, [fp, #-20]	; 0xffffffec
   1678c:	b	168dc <__assert_fail@plt+0x5300>
   16790:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16794:	cmp	r0, #0
   16798:	bne	167bc <__assert_fail@plt+0x51e0>
   1679c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   167a0:	cmp	r0, #0
   167a4:	beq	167bc <__assert_fail@plt+0x51e0>
   167a8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   167ac:	str	r0, [fp, #-28]	; 0xffffffe4
   167b0:	movw	r0, #0
   167b4:	str	r0, [fp, #-44]	; 0xffffffd4
   167b8:	b	1525c <__assert_fail@plt+0x3c80>
   167bc:	b	167c0 <__assert_fail@plt+0x51e4>
   167c0:	b	167c4 <__assert_fail@plt+0x51e8>
   167c4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   167c8:	movw	r1, #0
   167cc:	cmp	r0, r1
   167d0:	beq	16844 <__assert_fail@plt+0x5268>
   167d4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   167d8:	tst	r0, #1
   167dc:	bne	16844 <__assert_fail@plt+0x5268>
   167e0:	b	167e4 <__assert_fail@plt+0x5208>
   167e4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   167e8:	ldrsb	r0, [r0]
   167ec:	cmp	r0, #0
   167f0:	beq	16840 <__assert_fail@plt+0x5264>
   167f4:	b	167f8 <__assert_fail@plt+0x521c>
   167f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   167fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16800:	cmp	r0, r1
   16804:	bcs	16820 <__assert_fail@plt+0x5244>
   16808:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1680c:	ldrb	r0, [r0]
   16810:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16814:	ldr	r2, [fp, #-44]	; 0xffffffd4
   16818:	add	r1, r1, r2
   1681c:	strb	r0, [r1]
   16820:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16824:	add	r0, r0, #1
   16828:	str	r0, [fp, #-44]	; 0xffffffd4
   1682c:	b	16830 <__assert_fail@plt+0x5254>
   16830:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16834:	add	r0, r0, #1
   16838:	str	r0, [fp, #-52]	; 0xffffffcc
   1683c:	b	167e4 <__assert_fail@plt+0x5208>
   16840:	b	16844 <__assert_fail@plt+0x5268>
   16844:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16848:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1684c:	cmp	r0, r1
   16850:	bcs	16868 <__assert_fail@plt+0x528c>
   16854:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16858:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1685c:	add	r0, r0, r1
   16860:	movw	r1, #0
   16864:	strb	r1, [r0]
   16868:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1686c:	str	r0, [fp, #-20]	; 0xffffffec
   16870:	b	168dc <__assert_fail@plt+0x5300>
   16874:	ldr	r0, [fp, #8]
   16878:	cmp	r0, #2
   1687c:	bne	16894 <__assert_fail@plt+0x52b8>
   16880:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   16884:	tst	r0, #1
   16888:	beq	16894 <__assert_fail@plt+0x52b8>
   1688c:	movw	r0, #4
   16890:	str	r0, [fp, #8]
   16894:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16898:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1689c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   168a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   168a4:	ldr	ip, [fp, #8]
   168a8:	ldr	lr, [fp, #12]
   168ac:	mvn	r4, #2
   168b0:	and	lr, lr, r4
   168b4:	ldr	r4, [fp, #20]
   168b8:	ldr	r5, [fp, #24]
   168bc:	str	ip, [sp]
   168c0:	str	lr, [sp, #4]
   168c4:	movw	ip, #0
   168c8:	str	ip, [sp, #8]
   168cc:	str	r4, [sp, #12]
   168d0:	str	r5, [sp, #16]
   168d4:	bl	151b4 <__assert_fail@plt+0x3bd8>
   168d8:	str	r0, [fp, #-20]	; 0xffffffec
   168dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   168e0:	sub	sp, fp, #16
   168e4:	pop	{r4, r5, r6, sl, fp, pc}
   168e8:	push	{fp, lr}
   168ec:	mov	fp, sp
   168f0:	sub	sp, sp, #16
   168f4:	str	r0, [fp, #-4]
   168f8:	str	r1, [sp, #8]
   168fc:	str	r2, [sp, #4]
   16900:	ldr	r0, [fp, #-4]
   16904:	ldr	r1, [sp, #8]
   16908:	ldr	r3, [sp, #4]
   1690c:	movw	r2, #0
   16910:	bl	1691c <__assert_fail@plt+0x5340>
   16914:	mov	sp, fp
   16918:	pop	{fp, pc}
   1691c:	push	{r4, r5, r6, sl, fp, lr}
   16920:	add	fp, sp, #16
   16924:	sub	sp, sp, #80	; 0x50
   16928:	str	r0, [fp, #-20]	; 0xffffffec
   1692c:	str	r1, [fp, #-24]	; 0xffffffe8
   16930:	str	r2, [fp, #-28]	; 0xffffffe4
   16934:	str	r3, [fp, #-32]	; 0xffffffe0
   16938:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1693c:	movw	r1, #0
   16940:	cmp	r0, r1
   16944:	beq	16954 <__assert_fail@plt+0x5378>
   16948:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1694c:	str	r0, [sp, #40]	; 0x28
   16950:	b	16964 <__assert_fail@plt+0x5388>
   16954:	movw	r0, #500	; 0x1f4
   16958:	movt	r0, #3
   1695c:	str	r0, [sp, #40]	; 0x28
   16960:	b	16964 <__assert_fail@plt+0x5388>
   16964:	ldr	r0, [sp, #40]	; 0x28
   16968:	str	r0, [fp, #-36]	; 0xffffffdc
   1696c:	bl	114e0 <__errno_location@plt>
   16970:	ldr	r0, [r0]
   16974:	str	r0, [fp, #-40]	; 0xffffffd8
   16978:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1697c:	ldr	r0, [r0, #4]
   16980:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16984:	movw	r2, #0
   16988:	cmp	r1, r2
   1698c:	movw	r1, #0
   16990:	movne	r1, #1
   16994:	tst	r1, #1
   16998:	mov	r1, r2
   1699c:	moveq	r1, #1
   169a0:	orr	r0, r0, r1
   169a4:	str	r0, [fp, #-44]	; 0xffffffd4
   169a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   169ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   169b0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   169b4:	ldr	r1, [r1]
   169b8:	ldr	ip, [fp, #-44]	; 0xffffffd4
   169bc:	ldr	lr, [fp, #-36]	; 0xffffffdc
   169c0:	add	lr, lr, #8
   169c4:	ldr	r4, [fp, #-36]	; 0xffffffdc
   169c8:	ldr	r4, [r4, #40]	; 0x28
   169cc:	ldr	r5, [fp, #-36]	; 0xffffffdc
   169d0:	ldr	r5, [r5, #44]	; 0x2c
   169d4:	str	r0, [sp, #36]	; 0x24
   169d8:	mov	r0, r2
   169dc:	str	r1, [sp, #32]
   169e0:	mov	r1, r2
   169e4:	ldr	r2, [sp, #36]	; 0x24
   169e8:	ldr	r6, [sp, #32]
   169ec:	str	r6, [sp]
   169f0:	str	ip, [sp, #4]
   169f4:	str	lr, [sp, #8]
   169f8:	str	r4, [sp, #12]
   169fc:	str	r5, [sp, #16]
   16a00:	bl	151b4 <__assert_fail@plt+0x3bd8>
   16a04:	add	r0, r0, #1
   16a08:	str	r0, [sp, #48]	; 0x30
   16a0c:	ldr	r0, [sp, #48]	; 0x30
   16a10:	bl	18674 <__assert_fail@plt+0x7098>
   16a14:	str	r0, [sp, #44]	; 0x2c
   16a18:	ldr	r0, [sp, #44]	; 0x2c
   16a1c:	ldr	r1, [sp, #48]	; 0x30
   16a20:	ldr	r2, [fp, #-20]	; 0xffffffec
   16a24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16a28:	ldr	ip, [fp, #-36]	; 0xffffffdc
   16a2c:	ldr	ip, [ip]
   16a30:	ldr	lr, [fp, #-44]	; 0xffffffd4
   16a34:	ldr	r4, [fp, #-36]	; 0xffffffdc
   16a38:	add	r4, r4, #8
   16a3c:	ldr	r5, [fp, #-36]	; 0xffffffdc
   16a40:	ldr	r5, [r5, #40]	; 0x28
   16a44:	ldr	r6, [fp, #-36]	; 0xffffffdc
   16a48:	ldr	r6, [r6, #44]	; 0x2c
   16a4c:	str	ip, [sp]
   16a50:	str	lr, [sp, #4]
   16a54:	str	r4, [sp, #8]
   16a58:	str	r5, [sp, #12]
   16a5c:	str	r6, [sp, #16]
   16a60:	bl	151b4 <__assert_fail@plt+0x3bd8>
   16a64:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16a68:	str	r0, [sp, #28]
   16a6c:	str	r1, [sp, #24]
   16a70:	bl	114e0 <__errno_location@plt>
   16a74:	ldr	r1, [sp, #24]
   16a78:	str	r1, [r0]
   16a7c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16a80:	movw	r2, #0
   16a84:	cmp	r0, r2
   16a88:	beq	16a9c <__assert_fail@plt+0x54c0>
   16a8c:	ldr	r0, [sp, #48]	; 0x30
   16a90:	sub	r0, r0, #1
   16a94:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16a98:	str	r0, [r1]
   16a9c:	ldr	r0, [sp, #44]	; 0x2c
   16aa0:	sub	sp, fp, #16
   16aa4:	pop	{r4, r5, r6, sl, fp, pc}
   16aa8:	push	{fp, lr}
   16aac:	mov	fp, sp
   16ab0:	sub	sp, sp, #8
   16ab4:	movw	r0, #308	; 0x134
   16ab8:	movt	r0, #3
   16abc:	ldr	r0, [r0]
   16ac0:	str	r0, [sp, #4]
   16ac4:	movw	r0, #1
   16ac8:	str	r0, [sp]
   16acc:	ldr	r0, [sp]
   16ad0:	movw	r1, #312	; 0x138
   16ad4:	movt	r1, #3
   16ad8:	ldr	r1, [r1]
   16adc:	cmp	r0, r1
   16ae0:	bge	16b08 <__assert_fail@plt+0x552c>
   16ae4:	ldr	r0, [sp, #4]
   16ae8:	ldr	r1, [sp]
   16aec:	add	r0, r0, r1, lsl #3
   16af0:	ldr	r0, [r0, #4]
   16af4:	bl	146fc <__assert_fail@plt+0x3120>
   16af8:	ldr	r0, [sp]
   16afc:	add	r0, r0, #1
   16b00:	str	r0, [sp]
   16b04:	b	16acc <__assert_fail@plt+0x54f0>
   16b08:	ldr	r0, [sp, #4]
   16b0c:	ldr	r0, [r0, #4]
   16b10:	movw	r1, #548	; 0x224
   16b14:	movt	r1, #3
   16b18:	cmp	r0, r1
   16b1c:	beq	16b48 <__assert_fail@plt+0x556c>
   16b20:	ldr	r0, [sp, #4]
   16b24:	ldr	r0, [r0, #4]
   16b28:	bl	146fc <__assert_fail@plt+0x3120>
   16b2c:	movw	r0, #256	; 0x100
   16b30:	movw	r1, #316	; 0x13c
   16b34:	movt	r1, #3
   16b38:	str	r0, [r1]
   16b3c:	movw	r0, #548	; 0x224
   16b40:	movt	r0, #3
   16b44:	str	r0, [r1, #4]
   16b48:	ldr	r0, [sp, #4]
   16b4c:	movw	r1, #316	; 0x13c
   16b50:	movt	r1, #3
   16b54:	cmp	r0, r1
   16b58:	beq	16b78 <__assert_fail@plt+0x559c>
   16b5c:	ldr	r0, [sp, #4]
   16b60:	bl	146fc <__assert_fail@plt+0x3120>
   16b64:	movw	r0, #308	; 0x134
   16b68:	movt	r0, #3
   16b6c:	movw	r1, #316	; 0x13c
   16b70:	movt	r1, #3
   16b74:	str	r1, [r0]
   16b78:	movw	r0, #312	; 0x138
   16b7c:	movt	r0, #3
   16b80:	movw	r1, #1
   16b84:	str	r1, [r0]
   16b88:	mov	sp, fp
   16b8c:	pop	{fp, pc}
   16b90:	push	{fp, lr}
   16b94:	mov	fp, sp
   16b98:	sub	sp, sp, #8
   16b9c:	str	r0, [sp, #4]
   16ba0:	str	r1, [sp]
   16ba4:	ldr	r0, [sp, #4]
   16ba8:	ldr	r1, [sp]
   16bac:	mvn	r2, #0
   16bb0:	movw	r3, #500	; 0x1f4
   16bb4:	movt	r3, #3
   16bb8:	bl	16bc4 <__assert_fail@plt+0x55e8>
   16bbc:	mov	sp, fp
   16bc0:	pop	{fp, pc}
   16bc4:	push	{r4, r5, r6, sl, fp, lr}
   16bc8:	add	fp, sp, #16
   16bcc:	sub	sp, sp, #80	; 0x50
   16bd0:	str	r0, [fp, #-20]	; 0xffffffec
   16bd4:	str	r1, [fp, #-24]	; 0xffffffe8
   16bd8:	str	r2, [fp, #-28]	; 0xffffffe4
   16bdc:	str	r3, [fp, #-32]	; 0xffffffe0
   16be0:	bl	114e0 <__errno_location@plt>
   16be4:	ldr	r1, [pc, #672]	; 16e8c <__assert_fail@plt+0x58b0>
   16be8:	ldr	r0, [r0]
   16bec:	str	r0, [fp, #-36]	; 0xffffffdc
   16bf0:	movw	r0, #308	; 0x134
   16bf4:	movt	r0, #3
   16bf8:	ldr	r0, [r0]
   16bfc:	str	r0, [fp, #-40]	; 0xffffffd8
   16c00:	str	r1, [fp, #-44]	; 0xffffffd4
   16c04:	ldr	r0, [fp, #-20]	; 0xffffffec
   16c08:	movw	r1, #0
   16c0c:	cmp	r1, r0
   16c10:	bgt	16c24 <__assert_fail@plt+0x5648>
   16c14:	ldr	r0, [fp, #-20]	; 0xffffffec
   16c18:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16c1c:	cmp	r0, r1
   16c20:	blt	16c28 <__assert_fail@plt+0x564c>
   16c24:	bl	115b8 <abort@plt>
   16c28:	movw	r0, #312	; 0x138
   16c2c:	movt	r0, #3
   16c30:	ldr	r0, [r0]
   16c34:	ldr	r1, [fp, #-20]	; 0xffffffec
   16c38:	cmp	r0, r1
   16c3c:	bgt	16d34 <__assert_fail@plt+0x5758>
   16c40:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16c44:	movw	r1, #316	; 0x13c
   16c48:	movt	r1, #3
   16c4c:	cmp	r0, r1
   16c50:	movw	r0, #0
   16c54:	moveq	r0, #1
   16c58:	and	r0, r0, #1
   16c5c:	strb	r0, [fp, #-45]	; 0xffffffd3
   16c60:	movw	r0, #312	; 0x138
   16c64:	movt	r0, #3
   16c68:	ldr	r0, [r0]
   16c6c:	str	r0, [sp, #44]	; 0x2c
   16c70:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   16c74:	tst	r0, #1
   16c78:	beq	16c88 <__assert_fail@plt+0x56ac>
   16c7c:	movw	r0, #0
   16c80:	str	r0, [sp, #24]
   16c84:	b	16c90 <__assert_fail@plt+0x56b4>
   16c88:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16c8c:	str	r0, [sp, #24]
   16c90:	ldr	r0, [sp, #24]
   16c94:	ldr	r1, [fp, #-20]	; 0xffffffec
   16c98:	movw	r2, #312	; 0x138
   16c9c:	movt	r2, #3
   16ca0:	ldr	r2, [r2]
   16ca4:	sub	r1, r1, r2
   16ca8:	add	r2, r1, #1
   16cac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16cb0:	add	r1, sp, #44	; 0x2c
   16cb4:	movw	ip, #8
   16cb8:	str	ip, [sp]
   16cbc:	bl	188b0 <__assert_fail@plt+0x72d4>
   16cc0:	str	r0, [fp, #-40]	; 0xffffffd8
   16cc4:	movw	r1, #308	; 0x134
   16cc8:	movt	r1, #3
   16ccc:	str	r0, [r1]
   16cd0:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   16cd4:	tst	r0, #1
   16cd8:	beq	16cf8 <__assert_fail@plt+0x571c>
   16cdc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16ce0:	movw	r1, #316	; 0x13c
   16ce4:	movt	r1, #3
   16ce8:	ldr	r2, [r1]
   16cec:	str	r2, [r0]
   16cf0:	ldr	r1, [r1, #4]
   16cf4:	str	r1, [r0, #4]
   16cf8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16cfc:	movw	r1, #312	; 0x138
   16d00:	movt	r1, #3
   16d04:	ldr	r1, [r1]
   16d08:	add	r0, r0, r1, lsl #3
   16d0c:	ldr	r2, [sp, #44]	; 0x2c
   16d10:	sub	r1, r2, r1
   16d14:	lsl	r2, r1, #3
   16d18:	movw	r1, #0
   16d1c:	and	r1, r1, #255	; 0xff
   16d20:	bl	11504 <memset@plt>
   16d24:	ldr	r0, [sp, #44]	; 0x2c
   16d28:	movw	r1, #312	; 0x138
   16d2c:	movt	r1, #3
   16d30:	str	r0, [r1]
   16d34:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16d38:	ldr	r1, [fp, #-20]	; 0xffffffec
   16d3c:	ldr	r0, [r0, r1, lsl #3]
   16d40:	str	r0, [sp, #40]	; 0x28
   16d44:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16d48:	ldr	r1, [fp, #-20]	; 0xffffffec
   16d4c:	add	r0, r0, r1, lsl #3
   16d50:	ldr	r0, [r0, #4]
   16d54:	str	r0, [sp, #36]	; 0x24
   16d58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16d5c:	ldr	r0, [r0, #4]
   16d60:	orr	r0, r0, #1
   16d64:	str	r0, [sp, #32]
   16d68:	ldr	r0, [sp, #36]	; 0x24
   16d6c:	ldr	r1, [sp, #40]	; 0x28
   16d70:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16d74:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16d78:	ldr	ip, [fp, #-32]	; 0xffffffe0
   16d7c:	ldr	ip, [ip]
   16d80:	ldr	lr, [sp, #32]
   16d84:	ldr	r4, [fp, #-32]	; 0xffffffe0
   16d88:	add	r4, r4, #8
   16d8c:	ldr	r5, [fp, #-32]	; 0xffffffe0
   16d90:	ldr	r5, [r5, #40]	; 0x28
   16d94:	ldr	r6, [fp, #-32]	; 0xffffffe0
   16d98:	ldr	r6, [r6, #44]	; 0x2c
   16d9c:	str	ip, [sp]
   16da0:	str	lr, [sp, #4]
   16da4:	str	r4, [sp, #8]
   16da8:	str	r5, [sp, #12]
   16dac:	str	r6, [sp, #16]
   16db0:	bl	151b4 <__assert_fail@plt+0x3bd8>
   16db4:	str	r0, [sp, #28]
   16db8:	ldr	r0, [sp, #40]	; 0x28
   16dbc:	ldr	r1, [sp, #28]
   16dc0:	cmp	r0, r1
   16dc4:	bhi	16e6c <__assert_fail@plt+0x5890>
   16dc8:	ldr	r0, [sp, #28]
   16dcc:	add	r0, r0, #1
   16dd0:	str	r0, [sp, #40]	; 0x28
   16dd4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16dd8:	ldr	r2, [fp, #-20]	; 0xffffffec
   16ddc:	add	r1, r1, r2, lsl #3
   16de0:	str	r0, [r1]
   16de4:	ldr	r0, [sp, #36]	; 0x24
   16de8:	movw	r1, #548	; 0x224
   16dec:	movt	r1, #3
   16df0:	cmp	r0, r1
   16df4:	beq	16e00 <__assert_fail@plt+0x5824>
   16df8:	ldr	r0, [sp, #36]	; 0x24
   16dfc:	bl	146fc <__assert_fail@plt+0x3120>
   16e00:	ldr	r0, [sp, #40]	; 0x28
   16e04:	bl	18674 <__assert_fail@plt+0x7098>
   16e08:	mov	r1, r0
   16e0c:	str	r0, [sp, #36]	; 0x24
   16e10:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16e14:	ldr	r2, [fp, #-20]	; 0xffffffec
   16e18:	add	r0, r0, r2, lsl #3
   16e1c:	str	r1, [r0, #4]
   16e20:	ldr	r0, [sp, #36]	; 0x24
   16e24:	ldr	r1, [sp, #40]	; 0x28
   16e28:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16e2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16e30:	ldr	ip, [fp, #-32]	; 0xffffffe0
   16e34:	ldr	ip, [ip]
   16e38:	ldr	lr, [sp, #32]
   16e3c:	ldr	r4, [fp, #-32]	; 0xffffffe0
   16e40:	add	r4, r4, #8
   16e44:	ldr	r5, [fp, #-32]	; 0xffffffe0
   16e48:	ldr	r5, [r5, #40]	; 0x28
   16e4c:	ldr	r6, [fp, #-32]	; 0xffffffe0
   16e50:	ldr	r6, [r6, #44]	; 0x2c
   16e54:	str	ip, [sp]
   16e58:	str	lr, [sp, #4]
   16e5c:	str	r4, [sp, #8]
   16e60:	str	r5, [sp, #12]
   16e64:	str	r6, [sp, #16]
   16e68:	bl	151b4 <__assert_fail@plt+0x3bd8>
   16e6c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16e70:	str	r0, [sp, #20]
   16e74:	bl	114e0 <__errno_location@plt>
   16e78:	ldr	r1, [sp, #20]
   16e7c:	str	r1, [r0]
   16e80:	ldr	r0, [sp, #36]	; 0x24
   16e84:	sub	sp, fp, #16
   16e88:	pop	{r4, r5, r6, sl, fp, pc}
   16e8c:	svcvc	0x00ffffff
   16e90:	push	{fp, lr}
   16e94:	mov	fp, sp
   16e98:	sub	sp, sp, #16
   16e9c:	str	r0, [fp, #-4]
   16ea0:	str	r1, [sp, #8]
   16ea4:	str	r2, [sp, #4]
   16ea8:	ldr	r0, [fp, #-4]
   16eac:	ldr	r1, [sp, #8]
   16eb0:	ldr	r2, [sp, #4]
   16eb4:	movw	r3, #500	; 0x1f4
   16eb8:	movt	r3, #3
   16ebc:	bl	16bc4 <__assert_fail@plt+0x55e8>
   16ec0:	mov	sp, fp
   16ec4:	pop	{fp, pc}
   16ec8:	push	{fp, lr}
   16ecc:	mov	fp, sp
   16ed0:	sub	sp, sp, #8
   16ed4:	str	r0, [sp, #4]
   16ed8:	ldr	r1, [sp, #4]
   16edc:	movw	r0, #0
   16ee0:	bl	16b90 <__assert_fail@plt+0x55b4>
   16ee4:	mov	sp, fp
   16ee8:	pop	{fp, pc}
   16eec:	push	{fp, lr}
   16ef0:	mov	fp, sp
   16ef4:	sub	sp, sp, #8
   16ef8:	str	r0, [sp, #4]
   16efc:	str	r1, [sp]
   16f00:	ldr	r1, [sp, #4]
   16f04:	ldr	r2, [sp]
   16f08:	movw	r0, #0
   16f0c:	bl	16e90 <__assert_fail@plt+0x58b4>
   16f10:	mov	sp, fp
   16f14:	pop	{fp, pc}
   16f18:	push	{fp, lr}
   16f1c:	mov	fp, sp
   16f20:	sub	sp, sp, #64	; 0x40
   16f24:	str	r0, [fp, #-4]
   16f28:	str	r1, [fp, #-8]
   16f2c:	str	r2, [fp, #-12]
   16f30:	ldr	r1, [fp, #-8]
   16f34:	add	r0, sp, #4
   16f38:	bl	16f58 <__assert_fail@plt+0x597c>
   16f3c:	ldr	r0, [fp, #-4]
   16f40:	ldr	r1, [fp, #-12]
   16f44:	mvn	r2, #0
   16f48:	add	r3, sp, #4
   16f4c:	bl	16bc4 <__assert_fail@plt+0x55e8>
   16f50:	mov	sp, fp
   16f54:	pop	{fp, pc}
   16f58:	push	{fp, lr}
   16f5c:	mov	fp, sp
   16f60:	sub	sp, sp, #8
   16f64:	str	r1, [sp, #4]
   16f68:	mov	r1, r0
   16f6c:	str	r0, [sp]
   16f70:	mov	r0, r1
   16f74:	movw	r1, #0
   16f78:	and	r1, r1, #255	; 0xff
   16f7c:	movw	r2, #48	; 0x30
   16f80:	bl	11504 <memset@plt>
   16f84:	ldr	r0, [sp, #4]
   16f88:	cmp	r0, #10
   16f8c:	bne	16f94 <__assert_fail@plt+0x59b8>
   16f90:	bl	115b8 <abort@plt>
   16f94:	ldr	r0, [sp, #4]
   16f98:	ldr	r1, [sp]
   16f9c:	str	r0, [r1]
   16fa0:	mov	sp, fp
   16fa4:	pop	{fp, pc}
   16fa8:	push	{fp, lr}
   16fac:	mov	fp, sp
   16fb0:	sub	sp, sp, #64	; 0x40
   16fb4:	str	r0, [fp, #-4]
   16fb8:	str	r1, [fp, #-8]
   16fbc:	str	r2, [fp, #-12]
   16fc0:	str	r3, [fp, #-16]
   16fc4:	ldr	r1, [fp, #-8]
   16fc8:	mov	r0, sp
   16fcc:	bl	16f58 <__assert_fail@plt+0x597c>
   16fd0:	ldr	r0, [fp, #-4]
   16fd4:	ldr	r1, [fp, #-12]
   16fd8:	ldr	r2, [fp, #-16]
   16fdc:	mov	r3, sp
   16fe0:	bl	16bc4 <__assert_fail@plt+0x55e8>
   16fe4:	mov	sp, fp
   16fe8:	pop	{fp, pc}
   16fec:	push	{fp, lr}
   16ff0:	mov	fp, sp
   16ff4:	sub	sp, sp, #8
   16ff8:	str	r0, [sp, #4]
   16ffc:	str	r1, [sp]
   17000:	ldr	r1, [sp, #4]
   17004:	ldr	r2, [sp]
   17008:	movw	r0, #0
   1700c:	bl	16f18 <__assert_fail@plt+0x593c>
   17010:	mov	sp, fp
   17014:	pop	{fp, pc}
   17018:	push	{fp, lr}
   1701c:	mov	fp, sp
   17020:	sub	sp, sp, #16
   17024:	str	r0, [fp, #-4]
   17028:	str	r1, [sp, #8]
   1702c:	str	r2, [sp, #4]
   17030:	ldr	r1, [fp, #-4]
   17034:	ldr	r2, [sp, #8]
   17038:	ldr	r3, [sp, #4]
   1703c:	movw	r0, #0
   17040:	bl	16fa8 <__assert_fail@plt+0x59cc>
   17044:	mov	sp, fp
   17048:	pop	{fp, pc}
   1704c:	push	{fp, lr}
   17050:	mov	fp, sp
   17054:	sub	sp, sp, #72	; 0x48
   17058:	movw	r3, #500	; 0x1f4
   1705c:	movt	r3, #3
   17060:	str	r0, [fp, #-4]
   17064:	str	r1, [fp, #-8]
   17068:	strb	r2, [fp, #-9]
   1706c:	add	r0, sp, #12
   17070:	mov	r1, r0
   17074:	str	r0, [sp, #8]
   17078:	mov	r0, r1
   1707c:	mov	r1, r3
   17080:	movw	r2, #48	; 0x30
   17084:	bl	11354 <memcpy@plt>
   17088:	ldr	r0, [sp, #8]
   1708c:	ldrb	r1, [fp, #-9]
   17090:	movw	r2, #1
   17094:	bl	14f5c <__assert_fail@plt+0x3980>
   17098:	ldr	r1, [fp, #-4]
   1709c:	ldr	r2, [fp, #-8]
   170a0:	movw	r3, #0
   170a4:	str	r0, [sp, #4]
   170a8:	mov	r0, r3
   170ac:	add	r3, sp, #12
   170b0:	bl	16bc4 <__assert_fail@plt+0x55e8>
   170b4:	mov	sp, fp
   170b8:	pop	{fp, pc}
   170bc:	push	{fp, lr}
   170c0:	mov	fp, sp
   170c4:	sub	sp, sp, #8
   170c8:	str	r0, [sp, #4]
   170cc:	strb	r1, [sp, #3]
   170d0:	ldr	r0, [sp, #4]
   170d4:	mvn	r1, #0
   170d8:	ldrb	r2, [sp, #3]
   170dc:	bl	1704c <__assert_fail@plt+0x5a70>
   170e0:	mov	sp, fp
   170e4:	pop	{fp, pc}
   170e8:	push	{fp, lr}
   170ec:	mov	fp, sp
   170f0:	sub	sp, sp, #8
   170f4:	str	r0, [sp, #4]
   170f8:	ldr	r0, [sp, #4]
   170fc:	movw	r1, #58	; 0x3a
   17100:	and	r1, r1, #255	; 0xff
   17104:	bl	170bc <__assert_fail@plt+0x5ae0>
   17108:	mov	sp, fp
   1710c:	pop	{fp, pc}
   17110:	push	{fp, lr}
   17114:	mov	fp, sp
   17118:	sub	sp, sp, #8
   1711c:	str	r0, [sp, #4]
   17120:	str	r1, [sp]
   17124:	ldr	r0, [sp, #4]
   17128:	ldr	r1, [sp]
   1712c:	movw	r2, #58	; 0x3a
   17130:	and	r2, r2, #255	; 0xff
   17134:	bl	1704c <__assert_fail@plt+0x5a70>
   17138:	mov	sp, fp
   1713c:	pop	{fp, pc}
   17140:	push	{fp, lr}
   17144:	mov	fp, sp
   17148:	sub	sp, sp, #120	; 0x78
   1714c:	str	r0, [fp, #-4]
   17150:	str	r1, [fp, #-8]
   17154:	str	r2, [fp, #-12]
   17158:	ldr	r1, [fp, #-8]
   1715c:	add	r0, sp, #12
   17160:	bl	16f58 <__assert_fail@plt+0x597c>
   17164:	add	r0, sp, #60	; 0x3c
   17168:	mov	r1, r0
   1716c:	add	r2, sp, #12
   17170:	str	r0, [sp, #8]
   17174:	mov	r0, r1
   17178:	mov	r1, r2
   1717c:	movw	r2, #48	; 0x30
   17180:	bl	11354 <memcpy@plt>
   17184:	ldr	r0, [sp, #8]
   17188:	movw	r1, #58	; 0x3a
   1718c:	and	r1, r1, #255	; 0xff
   17190:	movw	r2, #1
   17194:	bl	14f5c <__assert_fail@plt+0x3980>
   17198:	ldr	r1, [fp, #-4]
   1719c:	ldr	r2, [fp, #-12]
   171a0:	str	r0, [sp, #4]
   171a4:	mov	r0, r1
   171a8:	mov	r1, r2
   171ac:	mvn	r2, #0
   171b0:	add	r3, sp, #60	; 0x3c
   171b4:	bl	16bc4 <__assert_fail@plt+0x55e8>
   171b8:	mov	sp, fp
   171bc:	pop	{fp, pc}
   171c0:	push	{fp, lr}
   171c4:	mov	fp, sp
   171c8:	sub	sp, sp, #24
   171cc:	str	r0, [fp, #-4]
   171d0:	str	r1, [fp, #-8]
   171d4:	str	r2, [sp, #12]
   171d8:	str	r3, [sp, #8]
   171dc:	ldr	r0, [fp, #-4]
   171e0:	ldr	r1, [fp, #-8]
   171e4:	ldr	r2, [sp, #12]
   171e8:	ldr	r3, [sp, #8]
   171ec:	mvn	ip, #0
   171f0:	str	ip, [sp]
   171f4:	bl	17200 <__assert_fail@plt+0x5c24>
   171f8:	mov	sp, fp
   171fc:	pop	{fp, pc}
   17200:	push	{fp, lr}
   17204:	mov	fp, sp
   17208:	sub	sp, sp, #72	; 0x48
   1720c:	ldr	ip, [fp, #8]
   17210:	movw	lr, #500	; 0x1f4
   17214:	movt	lr, #3
   17218:	str	r0, [fp, #-4]
   1721c:	str	r1, [fp, #-8]
   17220:	str	r2, [fp, #-12]
   17224:	str	r3, [fp, #-16]
   17228:	add	r0, sp, #8
   1722c:	mov	r1, r0
   17230:	str	r0, [sp, #4]
   17234:	mov	r0, r1
   17238:	mov	r1, lr
   1723c:	movw	r2, #48	; 0x30
   17240:	str	ip, [sp]
   17244:	bl	11354 <memcpy@plt>
   17248:	ldr	r1, [fp, #-8]
   1724c:	ldr	r2, [fp, #-12]
   17250:	ldr	r0, [sp, #4]
   17254:	bl	1505c <__assert_fail@plt+0x3a80>
   17258:	ldr	r0, [fp, #-4]
   1725c:	ldr	r1, [fp, #-16]
   17260:	ldr	r2, [fp, #8]
   17264:	add	r3, sp, #8
   17268:	bl	16bc4 <__assert_fail@plt+0x55e8>
   1726c:	mov	sp, fp
   17270:	pop	{fp, pc}
   17274:	push	{fp, lr}
   17278:	mov	fp, sp
   1727c:	sub	sp, sp, #16
   17280:	str	r0, [fp, #-4]
   17284:	str	r1, [sp, #8]
   17288:	str	r2, [sp, #4]
   1728c:	ldr	r1, [fp, #-4]
   17290:	ldr	r2, [sp, #8]
   17294:	ldr	r3, [sp, #4]
   17298:	movw	r0, #0
   1729c:	bl	171c0 <__assert_fail@plt+0x5be4>
   172a0:	mov	sp, fp
   172a4:	pop	{fp, pc}
   172a8:	push	{fp, lr}
   172ac:	mov	fp, sp
   172b0:	sub	sp, sp, #24
   172b4:	str	r0, [fp, #-4]
   172b8:	str	r1, [fp, #-8]
   172bc:	str	r2, [sp, #12]
   172c0:	str	r3, [sp, #8]
   172c4:	ldr	r1, [fp, #-4]
   172c8:	ldr	r2, [fp, #-8]
   172cc:	ldr	r3, [sp, #12]
   172d0:	ldr	r0, [sp, #8]
   172d4:	movw	ip, #0
   172d8:	str	r0, [sp, #4]
   172dc:	mov	r0, ip
   172e0:	ldr	ip, [sp, #4]
   172e4:	str	ip, [sp]
   172e8:	bl	17200 <__assert_fail@plt+0x5c24>
   172ec:	mov	sp, fp
   172f0:	pop	{fp, pc}
   172f4:	push	{fp, lr}
   172f8:	mov	fp, sp
   172fc:	sub	sp, sp, #16
   17300:	str	r0, [fp, #-4]
   17304:	str	r1, [sp, #8]
   17308:	str	r2, [sp, #4]
   1730c:	ldr	r0, [fp, #-4]
   17310:	ldr	r1, [sp, #8]
   17314:	ldr	r2, [sp, #4]
   17318:	movw	r3, #324	; 0x144
   1731c:	movt	r3, #3
   17320:	bl	16bc4 <__assert_fail@plt+0x55e8>
   17324:	mov	sp, fp
   17328:	pop	{fp, pc}
   1732c:	push	{fp, lr}
   17330:	mov	fp, sp
   17334:	sub	sp, sp, #8
   17338:	str	r0, [sp, #4]
   1733c:	str	r1, [sp]
   17340:	ldr	r1, [sp, #4]
   17344:	ldr	r2, [sp]
   17348:	movw	r0, #0
   1734c:	bl	172f4 <__assert_fail@plt+0x5d18>
   17350:	mov	sp, fp
   17354:	pop	{fp, pc}
   17358:	push	{fp, lr}
   1735c:	mov	fp, sp
   17360:	sub	sp, sp, #8
   17364:	str	r0, [sp, #4]
   17368:	str	r1, [sp]
   1736c:	ldr	r0, [sp, #4]
   17370:	ldr	r1, [sp]
   17374:	mvn	r2, #0
   17378:	bl	172f4 <__assert_fail@plt+0x5d18>
   1737c:	mov	sp, fp
   17380:	pop	{fp, pc}
   17384:	push	{fp, lr}
   17388:	mov	fp, sp
   1738c:	sub	sp, sp, #8
   17390:	str	r0, [sp, #4]
   17394:	ldr	r1, [sp, #4]
   17398:	movw	r0, #0
   1739c:	bl	17358 <__assert_fail@plt+0x5d7c>
   173a0:	mov	sp, fp
   173a4:	pop	{fp, pc}
   173a8:	push	{fp, lr}
   173ac:	mov	fp, sp
   173b0:	sub	sp, sp, #24
   173b4:	str	r0, [fp, #-8]
   173b8:	str	r1, [sp, #12]
   173bc:	ldr	r0, [fp, #-8]
   173c0:	bl	114a4 <gettext@plt>
   173c4:	str	r0, [sp, #8]
   173c8:	ldr	r0, [sp, #8]
   173cc:	ldr	r1, [fp, #-8]
   173d0:	cmp	r0, r1
   173d4:	beq	173e4 <__assert_fail@plt+0x5e08>
   173d8:	ldr	r0, [sp, #8]
   173dc:	str	r0, [fp, #-4]
   173e0:	b	174b0 <__assert_fail@plt+0x5ed4>
   173e4:	bl	1b9a4 <__assert_fail@plt+0xa3c8>
   173e8:	str	r0, [sp, #4]
   173ec:	ldr	r0, [sp, #4]
   173f0:	movw	r1, #60476	; 0xec3c
   173f4:	movt	r1, #1
   173f8:	bl	1b5ac <__assert_fail@plt+0x9fd0>
   173fc:	cmp	r0, #0
   17400:	bne	17438 <__assert_fail@plt+0x5e5c>
   17404:	ldr	r0, [fp, #-8]
   17408:	ldrb	r0, [r0]
   1740c:	cmp	r0, #96	; 0x60
   17410:	movw	r0, #0
   17414:	moveq	r0, #1
   17418:	tst	r0, #1
   1741c:	movw	r0, #60486	; 0xec46
   17420:	movt	r0, #1
   17424:	movw	r1, #60482	; 0xec42
   17428:	movt	r1, #1
   1742c:	movne	r0, r1
   17430:	str	r0, [fp, #-4]
   17434:	b	174b0 <__assert_fail@plt+0x5ed4>
   17438:	ldr	r0, [sp, #4]
   1743c:	movw	r1, #60490	; 0xec4a
   17440:	movt	r1, #1
   17444:	bl	1b5ac <__assert_fail@plt+0x9fd0>
   17448:	cmp	r0, #0
   1744c:	bne	17484 <__assert_fail@plt+0x5ea8>
   17450:	ldr	r0, [fp, #-8]
   17454:	ldrb	r0, [r0]
   17458:	cmp	r0, #96	; 0x60
   1745c:	movw	r0, #0
   17460:	moveq	r0, #1
   17464:	tst	r0, #1
   17468:	movw	r0, #60502	; 0xec56
   1746c:	movt	r0, #1
   17470:	movw	r1, #60498	; 0xec52
   17474:	movt	r1, #1
   17478:	movne	r0, r1
   1747c:	str	r0, [fp, #-4]
   17480:	b	174b0 <__assert_fail@plt+0x5ed4>
   17484:	ldr	r0, [sp, #12]
   17488:	cmp	r0, #9
   1748c:	movw	r0, #0
   17490:	moveq	r0, #1
   17494:	tst	r0, #1
   17498:	movw	r0, #60474	; 0xec3a
   1749c:	movt	r0, #1
   174a0:	movw	r1, #59455	; 0xe83f
   174a4:	movt	r1, #1
   174a8:	movne	r0, r1
   174ac:	str	r0, [fp, #-4]
   174b0:	ldr	r0, [fp, #-4]
   174b4:	mov	sp, fp
   174b8:	pop	{fp, pc}
   174bc:	push	{fp, lr}
   174c0:	mov	fp, sp
   174c4:	sub	sp, sp, #32
   174c8:	str	r0, [fp, #-4]
   174cc:	ldr	r0, [fp, #-4]
   174d0:	movw	r1, #0
   174d4:	str	r1, [r0]
   174d8:	ldr	r0, [fp, #-4]
   174dc:	str	r1, [r0, #4]
   174e0:	ldr	r0, [fp, #-4]
   174e4:	str	r1, [r0, #8]
   174e8:	ldr	r0, [fp, #-4]
   174ec:	add	r0, r0, #12
   174f0:	str	r1, [fp, #-8]
   174f4:	ldr	r2, [fp, #-8]
   174f8:	movw	r3, #46168	; 0xb458
   174fc:	movt	r3, #1
   17500:	movw	ip, #18172	; 0x46fc
   17504:	movt	ip, #1
   17508:	str	ip, [sp]
   1750c:	bl	1ba00 <_obstack_begin@@Base>
   17510:	ldr	r1, [fp, #-4]
   17514:	add	r1, r1, #56	; 0x38
   17518:	str	r0, [fp, #-12]
   1751c:	mov	r0, r1
   17520:	movw	r1, #0
   17524:	str	r1, [sp, #16]
   17528:	ldr	r2, [sp, #16]
   1752c:	movw	r3, #46168	; 0xb458
   17530:	movt	r3, #1
   17534:	movw	ip, #18172	; 0x46fc
   17538:	movt	ip, #1
   1753c:	str	ip, [sp]
   17540:	bl	1ba00 <_obstack_begin@@Base>
   17544:	ldr	r1, [fp, #-4]
   17548:	add	r1, r1, #100	; 0x64
   1754c:	str	r0, [sp, #12]
   17550:	mov	r0, r1
   17554:	movw	r1, #0
   17558:	str	r1, [sp, #8]
   1755c:	ldr	r2, [sp, #8]
   17560:	movw	r3, #46168	; 0xb458
   17564:	movt	r3, #1
   17568:	movw	ip, #18172	; 0x46fc
   1756c:	movt	ip, #1
   17570:	str	ip, [sp]
   17574:	bl	1ba00 <_obstack_begin@@Base>
   17578:	mov	sp, fp
   1757c:	pop	{fp, pc}
   17580:	push	{fp, lr}
   17584:	mov	fp, sp
   17588:	sub	sp, sp, #32
   1758c:	str	r0, [fp, #-4]
   17590:	ldr	r0, [fp, #-4]
   17594:	add	r0, r0, #12
   17598:	str	r0, [fp, #-8]
   1759c:	movw	r0, #0
   175a0:	str	r0, [fp, #-12]
   175a4:	ldr	r0, [fp, #-12]
   175a8:	ldr	r1, [fp, #-8]
   175ac:	ldr	r1, [r1, #4]
   175b0:	cmp	r0, r1
   175b4:	bls	175e4 <__assert_fail@plt+0x6008>
   175b8:	ldr	r0, [fp, #-12]
   175bc:	ldr	r1, [fp, #-8]
   175c0:	ldr	r1, [r1, #16]
   175c4:	cmp	r0, r1
   175c8:	bcs	175e4 <__assert_fail@plt+0x6008>
   175cc:	ldr	r0, [fp, #-12]
   175d0:	ldr	r1, [fp, #-8]
   175d4:	str	r0, [r1, #8]
   175d8:	ldr	r1, [fp, #-8]
   175dc:	str	r0, [r1, #12]
   175e0:	b	175f0 <__assert_fail@plt+0x6014>
   175e4:	ldr	r0, [fp, #-8]
   175e8:	ldr	r1, [fp, #-12]
   175ec:	bl	1bfd4 <_obstack_free@@Base>
   175f0:	ldr	r0, [fp, #-4]
   175f4:	add	r0, r0, #56	; 0x38
   175f8:	str	r0, [sp, #16]
   175fc:	movw	r0, #0
   17600:	str	r0, [sp, #12]
   17604:	ldr	r0, [sp, #12]
   17608:	ldr	r1, [sp, #16]
   1760c:	ldr	r1, [r1, #4]
   17610:	cmp	r0, r1
   17614:	bls	17644 <__assert_fail@plt+0x6068>
   17618:	ldr	r0, [sp, #12]
   1761c:	ldr	r1, [sp, #16]
   17620:	ldr	r1, [r1, #16]
   17624:	cmp	r0, r1
   17628:	bcs	17644 <__assert_fail@plt+0x6068>
   1762c:	ldr	r0, [sp, #12]
   17630:	ldr	r1, [sp, #16]
   17634:	str	r0, [r1, #8]
   17638:	ldr	r1, [sp, #16]
   1763c:	str	r0, [r1, #12]
   17640:	b	17650 <__assert_fail@plt+0x6074>
   17644:	ldr	r0, [sp, #16]
   17648:	ldr	r1, [sp, #12]
   1764c:	bl	1bfd4 <_obstack_free@@Base>
   17650:	ldr	r0, [fp, #-4]
   17654:	add	r0, r0, #100	; 0x64
   17658:	str	r0, [sp, #8]
   1765c:	movw	r0, #0
   17660:	str	r0, [sp, #4]
   17664:	ldr	r0, [sp, #4]
   17668:	ldr	r1, [sp, #8]
   1766c:	ldr	r1, [r1, #4]
   17670:	cmp	r0, r1
   17674:	bls	176a4 <__assert_fail@plt+0x60c8>
   17678:	ldr	r0, [sp, #4]
   1767c:	ldr	r1, [sp, #8]
   17680:	ldr	r1, [r1, #16]
   17684:	cmp	r0, r1
   17688:	bcs	176a4 <__assert_fail@plt+0x60c8>
   1768c:	ldr	r0, [sp, #4]
   17690:	ldr	r1, [sp, #8]
   17694:	str	r0, [r1, #8]
   17698:	ldr	r1, [sp, #8]
   1769c:	str	r0, [r1, #12]
   176a0:	b	176b0 <__assert_fail@plt+0x60d4>
   176a4:	ldr	r0, [sp, #8]
   176a8:	ldr	r1, [sp, #4]
   176ac:	bl	1bfd4 <_obstack_free@@Base>
   176b0:	mov	sp, fp
   176b4:	pop	{fp, pc}
   176b8:	push	{fp, lr}
   176bc:	mov	fp, sp
   176c0:	sub	sp, sp, #96	; 0x60
   176c4:	str	r0, [fp, #-4]
   176c8:	str	r1, [fp, #-8]
   176cc:	ldr	r0, [fp, #-4]
   176d0:	bl	1151c <fgetc@plt>
   176d4:	str	r0, [fp, #-12]
   176d8:	ldr	r0, [fp, #-12]
   176dc:	cmn	r0, #1
   176e0:	bne	17784 <__assert_fail@plt+0x61a8>
   176e4:	ldr	r0, [fp, #-8]
   176e8:	add	r0, r0, #12
   176ec:	str	r0, [fp, #-20]	; 0xffffffec
   176f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   176f4:	ldr	r0, [r0, #12]
   176f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   176fc:	ldr	r1, [r1, #8]
   17700:	sub	r0, r0, r1
   17704:	str	r0, [fp, #-24]	; 0xffffffe8
   17708:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1770c:	str	r0, [fp, #-16]
   17710:	ldr	r0, [fp, #-16]
   17714:	cmp	r0, #0
   17718:	beq	17780 <__assert_fail@plt+0x61a4>
   1771c:	ldr	r0, [fp, #-8]
   17720:	add	r0, r0, #12
   17724:	str	r0, [fp, #-28]	; 0xffffffe4
   17728:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1772c:	str	r0, [fp, #-32]	; 0xffffffe0
   17730:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17734:	ldr	r0, [r0, #16]
   17738:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1773c:	ldr	r1, [r1, #12]
   17740:	sub	r0, r0, r1
   17744:	str	r0, [fp, #-36]	; 0xffffffdc
   17748:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1774c:	cmp	r0, #1
   17750:	bcs	17760 <__assert_fail@plt+0x6184>
   17754:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17758:	movw	r1, #1
   1775c:	bl	1bc08 <_obstack_newchunk@@Base>
   17760:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17764:	ldr	r1, [r0, #12]
   17768:	add	r2, r1, #1
   1776c:	str	r2, [r0, #12]
   17770:	movw	r0, #0
   17774:	strb	r0, [r1]
   17778:	ldr	r0, [fp, #-8]
   1777c:	bl	17a5c <__assert_fail@plt+0x6480>
   17780:	b	177f8 <__assert_fail@plt+0x621c>
   17784:	ldr	r0, [fp, #-8]
   17788:	add	r0, r0, #12
   1778c:	str	r0, [fp, #-40]	; 0xffffffd8
   17790:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17794:	str	r0, [fp, #-44]	; 0xffffffd4
   17798:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1779c:	ldr	r0, [r0, #16]
   177a0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   177a4:	ldr	r1, [r1, #12]
   177a8:	sub	r0, r0, r1
   177ac:	str	r0, [sp, #48]	; 0x30
   177b0:	ldr	r0, [sp, #48]	; 0x30
   177b4:	cmp	r0, #1
   177b8:	bcs	177c8 <__assert_fail@plt+0x61ec>
   177bc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   177c0:	movw	r1, #1
   177c4:	bl	1bc08 <_obstack_newchunk@@Base>
   177c8:	ldr	r0, [fp, #-12]
   177cc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   177d0:	ldr	r2, [r1, #12]
   177d4:	add	r3, r2, #1
   177d8:	str	r3, [r1, #12]
   177dc:	strb	r0, [r2]
   177e0:	ldr	r0, [fp, #-12]
   177e4:	cmp	r0, #0
   177e8:	bne	177f4 <__assert_fail@plt+0x6218>
   177ec:	ldr	r0, [fp, #-8]
   177f0:	bl	17a5c <__assert_fail@plt+0x6480>
   177f4:	b	176cc <__assert_fail@plt+0x60f0>
   177f8:	ldr	r0, [fp, #-8]
   177fc:	add	r0, r0, #56	; 0x38
   17800:	str	r0, [sp, #44]	; 0x2c
   17804:	ldr	r0, [sp, #44]	; 0x2c
   17808:	str	r0, [sp, #40]	; 0x28
   1780c:	ldr	r0, [sp, #40]	; 0x28
   17810:	ldr	r0, [r0, #16]
   17814:	ldr	r1, [sp, #40]	; 0x28
   17818:	ldr	r1, [r1, #12]
   1781c:	sub	r0, r0, r1
   17820:	str	r0, [sp, #36]	; 0x24
   17824:	ldr	r0, [sp, #36]	; 0x24
   17828:	cmp	r0, #4
   1782c:	bcs	1783c <__assert_fail@plt+0x6260>
   17830:	ldr	r0, [sp, #44]	; 0x2c
   17834:	movw	r1, #4
   17838:	bl	1bc08 <_obstack_newchunk@@Base>
   1783c:	ldr	r0, [sp, #44]	; 0x2c
   17840:	str	r0, [sp, #32]
   17844:	ldr	r0, [sp, #32]
   17848:	ldr	r0, [r0, #12]
   1784c:	str	r0, [sp, #28]
   17850:	ldr	r0, [sp, #28]
   17854:	movw	r1, #0
   17858:	str	r1, [r0]
   1785c:	ldr	r0, [sp, #32]
   17860:	ldr	r1, [r0, #12]
   17864:	add	r1, r1, #4
   17868:	str	r1, [r0, #12]
   1786c:	ldr	r0, [fp, #-8]
   17870:	add	r0, r0, #56	; 0x38
   17874:	str	r0, [sp, #24]
   17878:	ldr	r0, [sp, #24]
   1787c:	ldr	r0, [r0, #8]
   17880:	str	r0, [sp, #20]
   17884:	ldr	r0, [sp, #24]
   17888:	ldr	r0, [r0, #12]
   1788c:	ldr	r1, [sp, #20]
   17890:	cmp	r0, r1
   17894:	bne	178b0 <__assert_fail@plt+0x62d4>
   17898:	ldr	r0, [sp, #24]
   1789c:	ldrb	r1, [r0, #40]	; 0x28
   178a0:	bic	r1, r1, #2
   178a4:	movw	r2, #2
   178a8:	orr	r1, r1, r2
   178ac:	strb	r1, [r0, #40]	; 0x28
   178b0:	ldr	r0, [sp, #24]
   178b4:	ldr	r0, [r0, #12]
   178b8:	sub	r0, r0, #0
   178bc:	ldr	r1, [sp, #24]
   178c0:	ldr	r1, [r1, #24]
   178c4:	add	r0, r0, r1
   178c8:	ldr	r1, [sp, #24]
   178cc:	ldr	r1, [r1, #24]
   178d0:	mvn	r2, #0
   178d4:	eor	r1, r1, r2
   178d8:	and	r0, r0, r1
   178dc:	movw	r1, #0
   178e0:	add	r0, r1, r0
   178e4:	ldr	r1, [sp, #24]
   178e8:	str	r0, [r1, #12]
   178ec:	ldr	r0, [sp, #24]
   178f0:	ldr	r0, [r0, #12]
   178f4:	ldr	r1, [sp, #24]
   178f8:	ldr	r1, [r1, #4]
   178fc:	sub	r0, r0, r1
   17900:	ldr	r1, [sp, #24]
   17904:	ldr	r1, [r1, #16]
   17908:	ldr	r2, [sp, #24]
   1790c:	ldr	r2, [r2, #4]
   17910:	sub	r1, r1, r2
   17914:	cmp	r0, r1
   17918:	bls	1792c <__assert_fail@plt+0x6350>
   1791c:	ldr	r0, [sp, #24]
   17920:	ldr	r0, [r0, #16]
   17924:	ldr	r1, [sp, #24]
   17928:	str	r0, [r1, #12]
   1792c:	ldr	r0, [sp, #24]
   17930:	ldr	r0, [r0, #12]
   17934:	ldr	r1, [sp, #24]
   17938:	str	r0, [r1, #8]
   1793c:	ldr	r0, [sp, #20]
   17940:	str	r0, [sp, #16]
   17944:	ldr	r0, [sp, #16]
   17948:	ldr	r1, [fp, #-8]
   1794c:	str	r0, [r1, #4]
   17950:	ldr	r0, [fp, #-8]
   17954:	add	r0, r0, #100	; 0x64
   17958:	str	r0, [sp, #12]
   1795c:	ldr	r0, [sp, #12]
   17960:	ldr	r0, [r0, #8]
   17964:	str	r0, [sp, #8]
   17968:	ldr	r0, [sp, #12]
   1796c:	ldr	r0, [r0, #12]
   17970:	ldr	r1, [sp, #8]
   17974:	cmp	r0, r1
   17978:	bne	17994 <__assert_fail@plt+0x63b8>
   1797c:	ldr	r0, [sp, #12]
   17980:	ldrb	r1, [r0, #40]	; 0x28
   17984:	bic	r1, r1, #2
   17988:	movw	r2, #2
   1798c:	orr	r1, r1, r2
   17990:	strb	r1, [r0, #40]	; 0x28
   17994:	ldr	r0, [sp, #12]
   17998:	ldr	r0, [r0, #12]
   1799c:	sub	r0, r0, #0
   179a0:	ldr	r1, [sp, #12]
   179a4:	ldr	r1, [r1, #24]
   179a8:	add	r0, r0, r1
   179ac:	ldr	r1, [sp, #12]
   179b0:	ldr	r1, [r1, #24]
   179b4:	mvn	r2, #0
   179b8:	eor	r1, r1, r2
   179bc:	and	r0, r0, r1
   179c0:	movw	r1, #0
   179c4:	add	r0, r1, r0
   179c8:	ldr	r1, [sp, #12]
   179cc:	str	r0, [r1, #12]
   179d0:	ldr	r0, [sp, #12]
   179d4:	ldr	r0, [r0, #12]
   179d8:	ldr	r1, [sp, #12]
   179dc:	ldr	r1, [r1, #4]
   179e0:	sub	r0, r0, r1
   179e4:	ldr	r1, [sp, #12]
   179e8:	ldr	r1, [r1, #16]
   179ec:	ldr	r2, [sp, #12]
   179f0:	ldr	r2, [r2, #4]
   179f4:	sub	r1, r1, r2
   179f8:	cmp	r0, r1
   179fc:	bls	17a10 <__assert_fail@plt+0x6434>
   17a00:	ldr	r0, [sp, #12]
   17a04:	ldr	r0, [r0, #16]
   17a08:	ldr	r1, [sp, #12]
   17a0c:	str	r0, [r1, #12]
   17a10:	ldr	r0, [sp, #12]
   17a14:	ldr	r0, [r0, #12]
   17a18:	ldr	r1, [sp, #12]
   17a1c:	str	r0, [r1, #8]
   17a20:	ldr	r0, [sp, #8]
   17a24:	str	r0, [sp, #4]
   17a28:	ldr	r0, [sp, #4]
   17a2c:	ldr	r1, [fp, #-8]
   17a30:	str	r0, [r1, #8]
   17a34:	ldr	r0, [fp, #-4]
   17a38:	bl	1133c <ferror@plt>
   17a3c:	cmp	r0, #0
   17a40:	movw	r0, #0
   17a44:	movne	r0, #1
   17a48:	mvn	r1, #0
   17a4c:	eor	r0, r0, r1
   17a50:	and	r0, r0, #1
   17a54:	mov	sp, fp
   17a58:	pop	{fp, pc}
   17a5c:	push	{fp, lr}
   17a60:	mov	fp, sp
   17a64:	sub	sp, sp, #72	; 0x48
   17a68:	str	r0, [fp, #-4]
   17a6c:	ldr	r0, [fp, #-4]
   17a70:	add	r0, r0, #12
   17a74:	str	r0, [fp, #-12]
   17a78:	ldr	r0, [fp, #-12]
   17a7c:	ldr	r0, [r0, #12]
   17a80:	ldr	r1, [fp, #-12]
   17a84:	ldr	r1, [r1, #8]
   17a88:	sub	r0, r0, r1
   17a8c:	str	r0, [fp, #-16]
   17a90:	ldr	r0, [fp, #-16]
   17a94:	sub	r0, r0, #1
   17a98:	str	r0, [fp, #-8]
   17a9c:	ldr	r0, [fp, #-4]
   17aa0:	add	r0, r0, #12
   17aa4:	str	r0, [fp, #-24]	; 0xffffffe8
   17aa8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17aac:	ldr	r0, [r0, #8]
   17ab0:	str	r0, [fp, #-28]	; 0xffffffe4
   17ab4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ab8:	ldr	r0, [r0, #12]
   17abc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17ac0:	cmp	r0, r1
   17ac4:	bne	17ae0 <__assert_fail@plt+0x6504>
   17ac8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17acc:	ldrb	r1, [r0, #40]	; 0x28
   17ad0:	bic	r1, r1, #2
   17ad4:	movw	r2, #2
   17ad8:	orr	r1, r1, r2
   17adc:	strb	r1, [r0, #40]	; 0x28
   17ae0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ae4:	ldr	r0, [r0, #12]
   17ae8:	sub	r0, r0, #0
   17aec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17af0:	ldr	r1, [r1, #24]
   17af4:	add	r0, r0, r1
   17af8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17afc:	ldr	r1, [r1, #24]
   17b00:	mvn	r2, #0
   17b04:	eor	r1, r1, r2
   17b08:	and	r0, r0, r1
   17b0c:	movw	r1, #0
   17b10:	add	r0, r1, r0
   17b14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17b18:	str	r0, [r1, #12]
   17b1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b20:	ldr	r0, [r0, #12]
   17b24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17b28:	ldr	r1, [r1, #4]
   17b2c:	sub	r0, r0, r1
   17b30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17b34:	ldr	r1, [r1, #16]
   17b38:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17b3c:	ldr	r2, [r2, #4]
   17b40:	sub	r1, r1, r2
   17b44:	cmp	r0, r1
   17b48:	bls	17b5c <__assert_fail@plt+0x6580>
   17b4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b50:	ldr	r0, [r0, #16]
   17b54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17b58:	str	r0, [r1, #12]
   17b5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b60:	ldr	r0, [r0, #12]
   17b64:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17b68:	str	r0, [r1, #8]
   17b6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17b70:	str	r0, [fp, #-32]	; 0xffffffe0
   17b74:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17b78:	str	r0, [fp, #-20]	; 0xffffffec
   17b7c:	ldr	r0, [fp, #-4]
   17b80:	add	r0, r0, #56	; 0x38
   17b84:	str	r0, [sp, #36]	; 0x24
   17b88:	ldr	r0, [sp, #36]	; 0x24
   17b8c:	str	r0, [sp, #32]
   17b90:	ldr	r0, [sp, #32]
   17b94:	ldr	r0, [r0, #16]
   17b98:	ldr	r1, [sp, #32]
   17b9c:	ldr	r1, [r1, #12]
   17ba0:	sub	r0, r0, r1
   17ba4:	str	r0, [sp, #28]
   17ba8:	ldr	r0, [sp, #28]
   17bac:	cmp	r0, #4
   17bb0:	bcs	17bc0 <__assert_fail@plt+0x65e4>
   17bb4:	ldr	r0, [sp, #36]	; 0x24
   17bb8:	movw	r1, #4
   17bbc:	bl	1bc08 <_obstack_newchunk@@Base>
   17bc0:	ldr	r0, [sp, #36]	; 0x24
   17bc4:	str	r0, [sp, #24]
   17bc8:	ldr	r0, [sp, #24]
   17bcc:	ldr	r0, [r0, #12]
   17bd0:	str	r0, [sp, #20]
   17bd4:	ldr	r0, [fp, #-20]	; 0xffffffec
   17bd8:	ldr	r1, [sp, #20]
   17bdc:	str	r0, [r1]
   17be0:	ldr	r0, [sp, #24]
   17be4:	ldr	r1, [r0, #12]
   17be8:	add	r1, r1, #4
   17bec:	str	r1, [r0, #12]
   17bf0:	ldr	r0, [fp, #-4]
   17bf4:	add	r0, r0, #100	; 0x64
   17bf8:	str	r0, [sp, #16]
   17bfc:	movw	r0, #4
   17c00:	str	r0, [sp, #12]
   17c04:	ldr	r0, [sp, #16]
   17c08:	str	r0, [sp, #8]
   17c0c:	ldr	r0, [sp, #8]
   17c10:	ldr	r0, [r0, #16]
   17c14:	ldr	r1, [sp, #8]
   17c18:	ldr	r1, [r1, #12]
   17c1c:	sub	r0, r0, r1
   17c20:	str	r0, [sp, #4]
   17c24:	ldr	r0, [sp, #4]
   17c28:	ldr	r1, [sp, #12]
   17c2c:	cmp	r0, r1
   17c30:	bcs	17c40 <__assert_fail@plt+0x6664>
   17c34:	ldr	r0, [sp, #16]
   17c38:	ldr	r1, [sp, #12]
   17c3c:	bl	1bc08 <_obstack_newchunk@@Base>
   17c40:	ldr	r0, [sp, #16]
   17c44:	ldr	r0, [r0, #12]
   17c48:	sub	r1, fp, #8
   17c4c:	ldr	r2, [sp, #12]
   17c50:	bl	11354 <memcpy@plt>
   17c54:	ldr	r0, [sp, #12]
   17c58:	ldr	r1, [sp, #16]
   17c5c:	ldr	r2, [r1, #12]
   17c60:	add	r0, r2, r0
   17c64:	str	r0, [r1, #12]
   17c68:	ldr	r0, [fp, #-4]
   17c6c:	ldr	r1, [r0]
   17c70:	add	r1, r1, #1
   17c74:	str	r1, [r0]
   17c78:	mov	sp, fp
   17c7c:	pop	{fp, pc}
   17c80:	push	{fp, lr}
   17c84:	mov	fp, sp
   17c88:	sub	sp, sp, #24
   17c8c:	str	r0, [fp, #-8]
   17c90:	str	r1, [sp, #12]
   17c94:	str	r2, [sp, #8]
   17c98:	ldr	r0, [fp, #-8]
   17c9c:	ldr	r1, [sp, #12]
   17ca0:	ldr	r2, [sp, #8]
   17ca4:	bl	11300 <read@plt>
   17ca8:	str	r0, [sp, #4]
   17cac:	ldr	r0, [sp, #4]
   17cb0:	movw	r1, #0
   17cb4:	cmp	r1, r0
   17cb8:	bgt	17cc8 <__assert_fail@plt+0x66ec>
   17cbc:	ldr	r0, [sp, #4]
   17cc0:	str	r0, [fp, #-4]
   17cc4:	b	17d20 <__assert_fail@plt+0x6744>
   17cc8:	bl	114e0 <__errno_location@plt>
   17ccc:	ldr	r0, [r0]
   17cd0:	cmp	r0, #4
   17cd4:	bne	17cdc <__assert_fail@plt+0x6700>
   17cd8:	b	17c98 <__assert_fail@plt+0x66bc>
   17cdc:	bl	114e0 <__errno_location@plt>
   17ce0:	ldr	r0, [r0]
   17ce4:	cmp	r0, #22
   17ce8:	bne	17d08 <__assert_fail@plt+0x672c>
   17cec:	ldr	r0, [pc, #56]	; 17d2c <__assert_fail@plt+0x6750>
   17cf0:	ldr	r1, [sp, #8]
   17cf4:	cmp	r0, r1
   17cf8:	bcs	17d08 <__assert_fail@plt+0x672c>
   17cfc:	ldr	r0, [pc, #40]	; 17d2c <__assert_fail@plt+0x6750>
   17d00:	str	r0, [sp, #8]
   17d04:	b	17d14 <__assert_fail@plt+0x6738>
   17d08:	ldr	r0, [sp, #4]
   17d0c:	str	r0, [fp, #-4]
   17d10:	b	17d20 <__assert_fail@plt+0x6744>
   17d14:	b	17d18 <__assert_fail@plt+0x673c>
   17d18:	b	17d1c <__assert_fail@plt+0x6740>
   17d1c:	b	17c98 <__assert_fail@plt+0x66bc>
   17d20:	ldr	r0, [fp, #-4]
   17d24:	mov	sp, fp
   17d28:	pop	{fp, pc}
   17d2c:	svcvc	0x00f00000	; IMB
   17d30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17d34:	add	fp, sp, #28
   17d38:	sub	sp, sp, #196	; 0xc4
   17d3c:	ldr	ip, [fp, #12]
   17d40:	ldr	lr, [fp, #8]
   17d44:	str	r0, [fp, #-32]	; 0xffffffe0
   17d48:	str	r1, [fp, #-36]	; 0xffffffdc
   17d4c:	str	r2, [fp, #-40]	; 0xffffffd8
   17d50:	str	r3, [fp, #-44]	; 0xffffffd4
   17d54:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17d58:	movw	r1, #0
   17d5c:	cmp	r0, r1
   17d60:	beq	17d94 <__assert_fail@plt+0x67b8>
   17d64:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17d68:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17d6c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17d70:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17d74:	movw	ip, #60592	; 0xecb0
   17d78:	movt	ip, #1
   17d7c:	str	r1, [fp, #-48]	; 0xffffffd0
   17d80:	mov	r1, ip
   17d84:	ldr	ip, [fp, #-48]	; 0xffffffd0
   17d88:	str	ip, [sp]
   17d8c:	bl	114c8 <fprintf@plt>
   17d90:	b	17dac <__assert_fail@plt+0x67d0>
   17d94:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17d98:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17d9c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17da0:	movw	r1, #60604	; 0xecbc
   17da4:	movt	r1, #1
   17da8:	bl	114c8 <fprintf@plt>
   17dac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17db0:	movw	r1, #60611	; 0xecc3
   17db4:	movt	r1, #1
   17db8:	str	r0, [fp, #-52]	; 0xffffffcc
   17dbc:	mov	r0, r1
   17dc0:	bl	114a4 <gettext@plt>
   17dc4:	movw	r1, #61329	; 0xef91
   17dc8:	movt	r1, #1
   17dcc:	movw	r3, #2022	; 0x7e6
   17dd0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17dd4:	str	r0, [fp, #-56]	; 0xffffffc8
   17dd8:	mov	r0, r2
   17ddc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17de0:	bl	114c8 <fprintf@plt>
   17de4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17de8:	movw	r2, #59964	; 0xea3c
   17dec:	movt	r2, #1
   17df0:	str	r0, [fp, #-60]	; 0xffffffc4
   17df4:	mov	r0, r2
   17df8:	str	r2, [fp, #-64]	; 0xffffffc0
   17dfc:	bl	112c4 <fputs_unlocked@plt>
   17e00:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17e04:	movw	r2, #60615	; 0xecc7
   17e08:	movt	r2, #1
   17e0c:	str	r0, [fp, #-68]	; 0xffffffbc
   17e10:	mov	r0, r2
   17e14:	str	r1, [fp, #-72]	; 0xffffffb8
   17e18:	bl	114a4 <gettext@plt>
   17e1c:	movw	r2, #60786	; 0xed72
   17e20:	movt	r2, #1
   17e24:	ldr	r1, [fp, #-72]	; 0xffffffb8
   17e28:	str	r0, [fp, #-76]	; 0xffffffb4
   17e2c:	mov	r0, r1
   17e30:	ldr	r1, [fp, #-76]	; 0xffffffb4
   17e34:	bl	114c8 <fprintf@plt>
   17e38:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17e3c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   17e40:	str	r0, [fp, #-80]	; 0xffffffb0
   17e44:	mov	r0, r2
   17e48:	bl	112c4 <fputs_unlocked@plt>
   17e4c:	ldr	r1, [fp, #12]
   17e50:	cmp	r1, #9
   17e54:	str	r1, [fp, #-84]	; 0xffffffac
   17e58:	bhi	18274 <__assert_fail@plt+0x6c98>
   17e5c:	add	r0, pc, #8
   17e60:	ldr	r1, [fp, #-84]	; 0xffffffac
   17e64:	ldr	r0, [r0, r1, lsl #2]
   17e68:	mov	pc, r0
   17e6c:	muleq	r1, r4, lr
   17e70:	muleq	r1, r8, lr
   17e74:	ldrdeq	r7, [r1], -r0
   17e78:	andeq	r7, r1, r0, lsl pc
   17e7c:	andeq	r7, r1, r8, ror #30
   17e80:	andeq	r7, r1, ip, asr #31
   17e84:	andeq	r8, r1, ip, lsr r0
   17e88:	strheq	r8, [r1], -r8	; <UNPREDICTABLE>
   17e8c:	andeq	r8, r1, r0, asr #2
   17e90:	ldrdeq	r8, [r1], -r4
   17e94:	b	18310 <__assert_fail@plt+0x6d34>
   17e98:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17e9c:	movw	r1, #60820	; 0xed94
   17ea0:	movt	r1, #1
   17ea4:	str	r0, [fp, #-88]	; 0xffffffa8
   17ea8:	mov	r0, r1
   17eac:	bl	114a4 <gettext@plt>
   17eb0:	ldr	r1, [fp, #8]
   17eb4:	ldr	r2, [r1]
   17eb8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   17ebc:	str	r0, [fp, #-92]	; 0xffffffa4
   17ec0:	mov	r0, r1
   17ec4:	ldr	r1, [fp, #-92]	; 0xffffffa4
   17ec8:	bl	114c8 <fprintf@plt>
   17ecc:	b	18310 <__assert_fail@plt+0x6d34>
   17ed0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17ed4:	movw	r1, #60836	; 0xeda4
   17ed8:	movt	r1, #1
   17edc:	str	r0, [fp, #-96]	; 0xffffffa0
   17ee0:	mov	r0, r1
   17ee4:	bl	114a4 <gettext@plt>
   17ee8:	ldr	r1, [fp, #8]
   17eec:	ldr	r2, [r1]
   17ef0:	ldr	r1, [fp, #8]
   17ef4:	ldr	r3, [r1, #4]
   17ef8:	ldr	r1, [fp, #-96]	; 0xffffffa0
   17efc:	str	r0, [fp, #-100]	; 0xffffff9c
   17f00:	mov	r0, r1
   17f04:	ldr	r1, [fp, #-100]	; 0xffffff9c
   17f08:	bl	114c8 <fprintf@plt>
   17f0c:	b	18310 <__assert_fail@plt+0x6d34>
   17f10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17f14:	movw	r1, #60859	; 0xedbb
   17f18:	movt	r1, #1
   17f1c:	str	r0, [fp, #-104]	; 0xffffff98
   17f20:	mov	r0, r1
   17f24:	bl	114a4 <gettext@plt>
   17f28:	ldr	r1, [fp, #8]
   17f2c:	ldr	r2, [r1]
   17f30:	ldr	r1, [fp, #8]
   17f34:	ldr	r3, [r1, #4]
   17f38:	ldr	r1, [fp, #8]
   17f3c:	ldr	r1, [r1, #8]
   17f40:	ldr	ip, [fp, #-104]	; 0xffffff98
   17f44:	str	r0, [fp, #-108]	; 0xffffff94
   17f48:	mov	r0, ip
   17f4c:	ldr	lr, [fp, #-108]	; 0xffffff94
   17f50:	str	r1, [sp, #112]	; 0x70
   17f54:	mov	r1, lr
   17f58:	ldr	r4, [sp, #112]	; 0x70
   17f5c:	str	r4, [sp]
   17f60:	bl	114c8 <fprintf@plt>
   17f64:	b	18310 <__assert_fail@plt+0x6d34>
   17f68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17f6c:	movw	r1, #60887	; 0xedd7
   17f70:	movt	r1, #1
   17f74:	str	r0, [sp, #108]	; 0x6c
   17f78:	mov	r0, r1
   17f7c:	bl	114a4 <gettext@plt>
   17f80:	ldr	r1, [fp, #8]
   17f84:	ldr	r2, [r1]
   17f88:	ldr	r1, [fp, #8]
   17f8c:	ldr	r3, [r1, #4]
   17f90:	ldr	r1, [fp, #8]
   17f94:	ldr	r1, [r1, #8]
   17f98:	ldr	ip, [fp, #8]
   17f9c:	ldr	ip, [ip, #12]
   17fa0:	ldr	lr, [sp, #108]	; 0x6c
   17fa4:	str	r0, [sp, #104]	; 0x68
   17fa8:	mov	r0, lr
   17fac:	ldr	r4, [sp, #104]	; 0x68
   17fb0:	str	r1, [sp, #100]	; 0x64
   17fb4:	mov	r1, r4
   17fb8:	ldr	r5, [sp, #100]	; 0x64
   17fbc:	str	r5, [sp]
   17fc0:	str	ip, [sp, #4]
   17fc4:	bl	114c8 <fprintf@plt>
   17fc8:	b	18310 <__assert_fail@plt+0x6d34>
   17fcc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17fd0:	movw	r1, #60919	; 0xedf7
   17fd4:	movt	r1, #1
   17fd8:	str	r0, [sp, #96]	; 0x60
   17fdc:	mov	r0, r1
   17fe0:	bl	114a4 <gettext@plt>
   17fe4:	ldr	r1, [fp, #8]
   17fe8:	ldr	r2, [r1]
   17fec:	ldr	r1, [fp, #8]
   17ff0:	ldr	r3, [r1, #4]
   17ff4:	ldr	r1, [fp, #8]
   17ff8:	ldr	r1, [r1, #8]
   17ffc:	ldr	ip, [fp, #8]
   18000:	ldr	ip, [ip, #12]
   18004:	ldr	lr, [fp, #8]
   18008:	ldr	lr, [lr, #16]
   1800c:	ldr	r4, [sp, #96]	; 0x60
   18010:	str	r0, [sp, #92]	; 0x5c
   18014:	mov	r0, r4
   18018:	ldr	r5, [sp, #92]	; 0x5c
   1801c:	str	r1, [sp, #88]	; 0x58
   18020:	mov	r1, r5
   18024:	ldr	r6, [sp, #88]	; 0x58
   18028:	str	r6, [sp]
   1802c:	str	ip, [sp, #4]
   18030:	str	lr, [sp, #8]
   18034:	bl	114c8 <fprintf@plt>
   18038:	b	18310 <__assert_fail@plt+0x6d34>
   1803c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18040:	movw	r1, #60955	; 0xee1b
   18044:	movt	r1, #1
   18048:	str	r0, [sp, #84]	; 0x54
   1804c:	mov	r0, r1
   18050:	bl	114a4 <gettext@plt>
   18054:	ldr	r1, [fp, #8]
   18058:	ldr	r2, [r1]
   1805c:	ldr	r1, [fp, #8]
   18060:	ldr	r3, [r1, #4]
   18064:	ldr	r1, [fp, #8]
   18068:	ldr	r1, [r1, #8]
   1806c:	ldr	ip, [fp, #8]
   18070:	ldr	ip, [ip, #12]
   18074:	ldr	lr, [fp, #8]
   18078:	ldr	lr, [lr, #16]
   1807c:	ldr	r4, [fp, #8]
   18080:	ldr	r4, [r4, #20]
   18084:	ldr	r5, [sp, #84]	; 0x54
   18088:	str	r0, [sp, #80]	; 0x50
   1808c:	mov	r0, r5
   18090:	ldr	r6, [sp, #80]	; 0x50
   18094:	str	r1, [sp, #76]	; 0x4c
   18098:	mov	r1, r6
   1809c:	ldr	r7, [sp, #76]	; 0x4c
   180a0:	str	r7, [sp]
   180a4:	str	ip, [sp, #4]
   180a8:	str	lr, [sp, #8]
   180ac:	str	r4, [sp, #12]
   180b0:	bl	114c8 <fprintf@plt>
   180b4:	b	18310 <__assert_fail@plt+0x6d34>
   180b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   180bc:	movw	r1, #60995	; 0xee43
   180c0:	movt	r1, #1
   180c4:	str	r0, [sp, #72]	; 0x48
   180c8:	mov	r0, r1
   180cc:	bl	114a4 <gettext@plt>
   180d0:	ldr	r1, [fp, #8]
   180d4:	ldr	r2, [r1]
   180d8:	ldr	r1, [fp, #8]
   180dc:	ldr	r3, [r1, #4]
   180e0:	ldr	r1, [fp, #8]
   180e4:	ldr	r1, [r1, #8]
   180e8:	ldr	ip, [fp, #8]
   180ec:	ldr	ip, [ip, #12]
   180f0:	ldr	lr, [fp, #8]
   180f4:	ldr	lr, [lr, #16]
   180f8:	ldr	r4, [fp, #8]
   180fc:	ldr	r4, [r4, #20]
   18100:	ldr	r5, [fp, #8]
   18104:	ldr	r5, [r5, #24]
   18108:	ldr	r6, [sp, #72]	; 0x48
   1810c:	str	r0, [sp, #68]	; 0x44
   18110:	mov	r0, r6
   18114:	ldr	r7, [sp, #68]	; 0x44
   18118:	str	r1, [sp, #64]	; 0x40
   1811c:	mov	r1, r7
   18120:	ldr	r8, [sp, #64]	; 0x40
   18124:	str	r8, [sp]
   18128:	str	ip, [sp, #4]
   1812c:	str	lr, [sp, #8]
   18130:	str	r4, [sp, #12]
   18134:	str	r5, [sp, #16]
   18138:	bl	114c8 <fprintf@plt>
   1813c:	b	18310 <__assert_fail@plt+0x6d34>
   18140:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18144:	movw	r1, #61039	; 0xee6f
   18148:	movt	r1, #1
   1814c:	str	r0, [sp, #60]	; 0x3c
   18150:	mov	r0, r1
   18154:	bl	114a4 <gettext@plt>
   18158:	ldr	r1, [fp, #8]
   1815c:	ldr	r2, [r1]
   18160:	ldr	r1, [fp, #8]
   18164:	ldr	r3, [r1, #4]
   18168:	ldr	r1, [fp, #8]
   1816c:	ldr	r1, [r1, #8]
   18170:	ldr	ip, [fp, #8]
   18174:	ldr	ip, [ip, #12]
   18178:	ldr	lr, [fp, #8]
   1817c:	ldr	lr, [lr, #16]
   18180:	ldr	r4, [fp, #8]
   18184:	ldr	r4, [r4, #20]
   18188:	ldr	r5, [fp, #8]
   1818c:	ldr	r5, [r5, #24]
   18190:	ldr	r6, [fp, #8]
   18194:	ldr	r6, [r6, #28]
   18198:	ldr	r7, [sp, #60]	; 0x3c
   1819c:	str	r0, [sp, #56]	; 0x38
   181a0:	mov	r0, r7
   181a4:	ldr	r8, [sp, #56]	; 0x38
   181a8:	str	r1, [sp, #52]	; 0x34
   181ac:	mov	r1, r8
   181b0:	ldr	r9, [sp, #52]	; 0x34
   181b4:	str	r9, [sp]
   181b8:	str	ip, [sp, #4]
   181bc:	str	lr, [sp, #8]
   181c0:	str	r4, [sp, #12]
   181c4:	str	r5, [sp, #16]
   181c8:	str	r6, [sp, #20]
   181cc:	bl	114c8 <fprintf@plt>
   181d0:	b	18310 <__assert_fail@plt+0x6d34>
   181d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   181d8:	movw	r1, #61087	; 0xee9f
   181dc:	movt	r1, #1
   181e0:	str	r0, [sp, #48]	; 0x30
   181e4:	mov	r0, r1
   181e8:	bl	114a4 <gettext@plt>
   181ec:	ldr	r1, [fp, #8]
   181f0:	ldr	r2, [r1]
   181f4:	ldr	r1, [fp, #8]
   181f8:	ldr	r3, [r1, #4]
   181fc:	ldr	r1, [fp, #8]
   18200:	ldr	r1, [r1, #8]
   18204:	ldr	ip, [fp, #8]
   18208:	ldr	ip, [ip, #12]
   1820c:	ldr	lr, [fp, #8]
   18210:	ldr	lr, [lr, #16]
   18214:	ldr	r4, [fp, #8]
   18218:	ldr	r4, [r4, #20]
   1821c:	ldr	r5, [fp, #8]
   18220:	ldr	r5, [r5, #24]
   18224:	ldr	r6, [fp, #8]
   18228:	ldr	r6, [r6, #28]
   1822c:	ldr	r7, [fp, #8]
   18230:	ldr	r7, [r7, #32]
   18234:	ldr	r8, [sp, #48]	; 0x30
   18238:	str	r0, [sp, #44]	; 0x2c
   1823c:	mov	r0, r8
   18240:	ldr	r9, [sp, #44]	; 0x2c
   18244:	str	r1, [sp, #40]	; 0x28
   18248:	mov	r1, r9
   1824c:	ldr	sl, [sp, #40]	; 0x28
   18250:	str	sl, [sp]
   18254:	str	ip, [sp, #4]
   18258:	str	lr, [sp, #8]
   1825c:	str	r4, [sp, #12]
   18260:	str	r5, [sp, #16]
   18264:	str	r6, [sp, #20]
   18268:	str	r7, [sp, #24]
   1826c:	bl	114c8 <fprintf@plt>
   18270:	b	18310 <__assert_fail@plt+0x6d34>
   18274:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18278:	movw	r1, #61139	; 0xeed3
   1827c:	movt	r1, #1
   18280:	str	r0, [sp, #36]	; 0x24
   18284:	mov	r0, r1
   18288:	bl	114a4 <gettext@plt>
   1828c:	ldr	r1, [fp, #8]
   18290:	ldr	r2, [r1]
   18294:	ldr	r1, [fp, #8]
   18298:	ldr	r3, [r1, #4]
   1829c:	ldr	r1, [fp, #8]
   182a0:	ldr	r1, [r1, #8]
   182a4:	ldr	ip, [fp, #8]
   182a8:	ldr	ip, [ip, #12]
   182ac:	ldr	lr, [fp, #8]
   182b0:	ldr	lr, [lr, #16]
   182b4:	ldr	r4, [fp, #8]
   182b8:	ldr	r4, [r4, #20]
   182bc:	ldr	r5, [fp, #8]
   182c0:	ldr	r5, [r5, #24]
   182c4:	ldr	r6, [fp, #8]
   182c8:	ldr	r6, [r6, #28]
   182cc:	ldr	r7, [fp, #8]
   182d0:	ldr	r7, [r7, #32]
   182d4:	ldr	r8, [sp, #36]	; 0x24
   182d8:	str	r0, [sp, #32]
   182dc:	mov	r0, r8
   182e0:	ldr	r9, [sp, #32]
   182e4:	str	r1, [sp, #28]
   182e8:	mov	r1, r9
   182ec:	ldr	sl, [sp, #28]
   182f0:	str	sl, [sp]
   182f4:	str	ip, [sp, #4]
   182f8:	str	lr, [sp, #8]
   182fc:	str	r4, [sp, #12]
   18300:	str	r5, [sp, #16]
   18304:	str	r6, [sp, #20]
   18308:	str	r7, [sp, #24]
   1830c:	bl	114c8 <fprintf@plt>
   18310:	sub	sp, fp, #28
   18314:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18318:	push	{fp, lr}
   1831c:	mov	fp, sp
   18320:	sub	sp, sp, #32
   18324:	ldr	ip, [fp, #8]
   18328:	str	r0, [fp, #-4]
   1832c:	str	r1, [fp, #-8]
   18330:	str	r2, [fp, #-12]
   18334:	str	r3, [sp, #16]
   18338:	movw	r0, #0
   1833c:	str	r0, [sp, #12]
   18340:	ldr	r0, [fp, #8]
   18344:	ldr	r1, [sp, #12]
   18348:	add	r0, r0, r1, lsl #2
   1834c:	ldr	r0, [r0]
   18350:	movw	r1, #0
   18354:	cmp	r0, r1
   18358:	beq	18370 <__assert_fail@plt+0x6d94>
   1835c:	b	18360 <__assert_fail@plt+0x6d84>
   18360:	ldr	r0, [sp, #12]
   18364:	add	r0, r0, #1
   18368:	str	r0, [sp, #12]
   1836c:	b	18340 <__assert_fail@plt+0x6d64>
   18370:	ldr	r0, [fp, #-4]
   18374:	ldr	r1, [fp, #-8]
   18378:	ldr	r2, [fp, #-12]
   1837c:	ldr	r3, [sp, #16]
   18380:	ldr	ip, [fp, #8]
   18384:	ldr	lr, [sp, #12]
   18388:	str	ip, [sp]
   1838c:	str	lr, [sp, #4]
   18390:	bl	17d30 <__assert_fail@plt+0x6754>
   18394:	mov	sp, fp
   18398:	pop	{fp, pc}
   1839c:	push	{fp, lr}
   183a0:	mov	fp, sp
   183a4:	sub	sp, sp, #80	; 0x50
   183a8:	ldr	ip, [fp, #8]
   183ac:	str	ip, [fp, #-4]
   183b0:	str	r0, [fp, #-8]
   183b4:	str	r1, [fp, #-12]
   183b8:	str	r2, [fp, #-16]
   183bc:	str	r3, [fp, #-20]	; 0xffffffec
   183c0:	movw	r0, #0
   183c4:	str	r0, [fp, #-24]	; 0xffffffe8
   183c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183cc:	cmp	r0, #10
   183d0:	movw	r0, #0
   183d4:	str	r0, [sp, #12]
   183d8:	bcs	18410 <__assert_fail@plt+0x6e34>
   183dc:	ldr	r0, [fp, #-4]
   183e0:	add	r1, r0, #4
   183e4:	str	r1, [fp, #-4]
   183e8:	ldr	r0, [r0]
   183ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   183f0:	add	r2, sp, #16
   183f4:	add	r1, r2, r1, lsl #2
   183f8:	str	r0, [r1]
   183fc:	movw	r1, #0
   18400:	cmp	r0, r1
   18404:	movw	r0, #0
   18408:	movne	r0, #1
   1840c:	str	r0, [sp, #12]
   18410:	ldr	r0, [sp, #12]
   18414:	tst	r0, #1
   18418:	beq	18430 <__assert_fail@plt+0x6e54>
   1841c:	b	18420 <__assert_fail@plt+0x6e44>
   18420:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18424:	add	r0, r0, #1
   18428:	str	r0, [fp, #-24]	; 0xffffffe8
   1842c:	b	183c8 <__assert_fail@plt+0x6dec>
   18430:	add	r0, sp, #16
   18434:	ldr	r1, [fp, #-8]
   18438:	ldr	r2, [fp, #-12]
   1843c:	ldr	r3, [fp, #-16]
   18440:	ldr	ip, [fp, #-20]	; 0xffffffec
   18444:	ldr	lr, [fp, #-24]	; 0xffffffe8
   18448:	str	r0, [sp, #8]
   1844c:	mov	r0, r1
   18450:	mov	r1, r2
   18454:	mov	r2, r3
   18458:	mov	r3, ip
   1845c:	ldr	ip, [sp, #8]
   18460:	str	ip, [sp]
   18464:	str	lr, [sp, #4]
   18468:	bl	17d30 <__assert_fail@plt+0x6754>
   1846c:	mov	sp, fp
   18470:	pop	{fp, pc}
   18474:	push	{fp, lr}
   18478:	mov	fp, sp
   1847c:	sub	sp, sp, #24
   18480:	str	r0, [fp, #-4]
   18484:	str	r1, [fp, #-8]
   18488:	str	r2, [sp, #12]
   1848c:	str	r3, [sp, #8]
   18490:	add	r0, fp, #8
   18494:	str	r0, [sp, #4]
   18498:	ldr	r0, [fp, #-4]
   1849c:	ldr	r1, [fp, #-8]
   184a0:	ldr	r2, [sp, #12]
   184a4:	ldr	r3, [sp, #8]
   184a8:	ldr	ip, [sp, #4]
   184ac:	mov	lr, sp
   184b0:	str	ip, [lr]
   184b4:	bl	1839c <__assert_fail@plt+0x6dc0>
   184b8:	add	r0, sp, #4
   184bc:	mov	sp, fp
   184c0:	pop	{fp, pc}
   184c4:	push	{fp, lr}
   184c8:	mov	fp, sp
   184cc:	sub	sp, sp, #16
   184d0:	movw	r0, #404	; 0x194
   184d4:	movt	r0, #3
   184d8:	ldr	r1, [r0]
   184dc:	movw	r0, #59964	; 0xea3c
   184e0:	movt	r0, #1
   184e4:	bl	112c4 <fputs_unlocked@plt>
   184e8:	movw	r1, #61199	; 0xef0f
   184ec:	movt	r1, #1
   184f0:	str	r0, [fp, #-4]
   184f4:	mov	r0, r1
   184f8:	bl	114a4 <gettext@plt>
   184fc:	movw	r1, #61219	; 0xef23
   18500:	movt	r1, #1
   18504:	bl	112f4 <printf@plt>
   18508:	movw	r1, #61241	; 0xef39
   1850c:	movt	r1, #1
   18510:	str	r0, [sp, #8]
   18514:	mov	r0, r1
   18518:	bl	114a4 <gettext@plt>
   1851c:	movw	r1, #59234	; 0xe762
   18520:	movt	r1, #1
   18524:	movw	r2, #59773	; 0xe97d
   18528:	movt	r2, #1
   1852c:	bl	112f4 <printf@plt>
   18530:	movw	r1, #61261	; 0xef4d
   18534:	movt	r1, #1
   18538:	str	r0, [sp, #4]
   1853c:	mov	r0, r1
   18540:	bl	114a4 <gettext@plt>
   18544:	movw	r1, #61300	; 0xef74
   18548:	movt	r1, #1
   1854c:	bl	112f4 <printf@plt>
   18550:	mov	sp, fp
   18554:	pop	{fp, pc}
   18558:	push	{fp, lr}
   1855c:	mov	fp, sp
   18560:	sub	sp, sp, #16
   18564:	str	r0, [fp, #-4]
   18568:	str	r1, [sp, #8]
   1856c:	str	r2, [sp, #4]
   18570:	ldr	r0, [fp, #-4]
   18574:	ldr	r1, [sp, #8]
   18578:	ldr	r2, [sp, #4]
   1857c:	bl	18588 <__assert_fail@plt+0x6fac>
   18580:	mov	sp, fp
   18584:	pop	{fp, pc}
   18588:	push	{fp, lr}
   1858c:	mov	fp, sp
   18590:	sub	sp, sp, #16
   18594:	str	r0, [fp, #-4]
   18598:	str	r1, [sp, #8]
   1859c:	str	r2, [sp, #4]
   185a0:	ldr	r0, [fp, #-4]
   185a4:	ldr	r1, [sp, #8]
   185a8:	ldr	r2, [sp, #4]
   185ac:	bl	1c1b8 <_obstack_memory_used@@Base+0xc4>
   185b0:	str	r0, [sp]
   185b4:	ldr	r0, [sp]
   185b8:	movw	r1, #0
   185bc:	cmp	r0, r1
   185c0:	bne	185f0 <__assert_fail@plt+0x7014>
   185c4:	ldr	r0, [fp, #-4]
   185c8:	movw	r1, #0
   185cc:	cmp	r0, r1
   185d0:	beq	185ec <__assert_fail@plt+0x7010>
   185d4:	ldr	r0, [sp, #8]
   185d8:	cmp	r0, #0
   185dc:	beq	185f0 <__assert_fail@plt+0x7014>
   185e0:	ldr	r0, [sp, #4]
   185e4:	cmp	r0, #0
   185e8:	beq	185f0 <__assert_fail@plt+0x7014>
   185ec:	bl	1b334 <__assert_fail@plt+0x9d58>
   185f0:	ldr	r0, [sp]
   185f4:	mov	sp, fp
   185f8:	pop	{fp, pc}
   185fc:	push	{fp, lr}
   18600:	mov	fp, sp
   18604:	sub	sp, sp, #8
   18608:	str	r0, [sp, #4]
   1860c:	ldr	r0, [sp, #4]
   18610:	bl	1b458 <__assert_fail@plt+0x9e7c>
   18614:	bl	18620 <__assert_fail@plt+0x7044>
   18618:	mov	sp, fp
   1861c:	pop	{fp, pc}
   18620:	push	{fp, lr}
   18624:	mov	fp, sp
   18628:	sub	sp, sp, #8
   1862c:	str	r0, [sp, #4]
   18630:	ldr	r0, [sp, #4]
   18634:	movw	r1, #0
   18638:	cmp	r0, r1
   1863c:	bne	18644 <__assert_fail@plt+0x7068>
   18640:	bl	1b334 <__assert_fail@plt+0x9d58>
   18644:	ldr	r0, [sp, #4]
   18648:	mov	sp, fp
   1864c:	pop	{fp, pc}
   18650:	push	{fp, lr}
   18654:	mov	fp, sp
   18658:	sub	sp, sp, #8
   1865c:	str	r0, [sp, #4]
   18660:	ldr	r0, [sp, #4]
   18664:	bl	1b7ec <__assert_fail@plt+0xa210>
   18668:	bl	18620 <__assert_fail@plt+0x7044>
   1866c:	mov	sp, fp
   18670:	pop	{fp, pc}
   18674:	push	{fp, lr}
   18678:	mov	fp, sp
   1867c:	sub	sp, sp, #8
   18680:	str	r0, [sp, #4]
   18684:	ldr	r0, [sp, #4]
   18688:	bl	185fc <__assert_fail@plt+0x7020>
   1868c:	mov	sp, fp
   18690:	pop	{fp, pc}
   18694:	push	{fp, lr}
   18698:	mov	fp, sp
   1869c:	sub	sp, sp, #16
   186a0:	str	r0, [fp, #-4]
   186a4:	str	r1, [sp, #8]
   186a8:	ldr	r0, [fp, #-4]
   186ac:	ldr	r1, [sp, #8]
   186b0:	bl	1b4c8 <__assert_fail@plt+0x9eec>
   186b4:	str	r0, [sp, #4]
   186b8:	ldr	r0, [sp, #4]
   186bc:	movw	r1, #0
   186c0:	cmp	r0, r1
   186c4:	bne	186e8 <__assert_fail@plt+0x710c>
   186c8:	ldr	r0, [fp, #-4]
   186cc:	movw	r1, #0
   186d0:	cmp	r0, r1
   186d4:	beq	186e4 <__assert_fail@plt+0x7108>
   186d8:	ldr	r0, [sp, #8]
   186dc:	cmp	r0, #0
   186e0:	beq	186e8 <__assert_fail@plt+0x710c>
   186e4:	bl	1b334 <__assert_fail@plt+0x9d58>
   186e8:	ldr	r0, [sp, #4]
   186ec:	mov	sp, fp
   186f0:	pop	{fp, pc}
   186f4:	push	{fp, lr}
   186f8:	mov	fp, sp
   186fc:	sub	sp, sp, #8
   18700:	str	r0, [sp, #4]
   18704:	str	r1, [sp]
   18708:	ldr	r0, [sp, #4]
   1870c:	ldr	r1, [sp]
   18710:	bl	1b82c <__assert_fail@plt+0xa250>
   18714:	bl	18620 <__assert_fail@plt+0x7044>
   18718:	mov	sp, fp
   1871c:	pop	{fp, pc}
   18720:	push	{fp, lr}
   18724:	mov	fp, sp
   18728:	sub	sp, sp, #16
   1872c:	str	r0, [fp, #-4]
   18730:	str	r1, [sp, #8]
   18734:	str	r2, [sp, #4]
   18738:	ldr	r0, [fp, #-4]
   1873c:	ldr	r1, [sp, #8]
   18740:	ldr	r2, [sp, #4]
   18744:	bl	1b924 <__assert_fail@plt+0xa348>
   18748:	bl	18620 <__assert_fail@plt+0x7044>
   1874c:	mov	sp, fp
   18750:	pop	{fp, pc}
   18754:	push	{fp, lr}
   18758:	mov	fp, sp
   1875c:	sub	sp, sp, #8
   18760:	str	r0, [sp, #4]
   18764:	str	r1, [sp]
   18768:	ldr	r1, [sp, #4]
   1876c:	ldr	r2, [sp]
   18770:	movw	r0, #0
   18774:	bl	18588 <__assert_fail@plt+0x6fac>
   18778:	mov	sp, fp
   1877c:	pop	{fp, pc}
   18780:	push	{fp, lr}
   18784:	mov	fp, sp
   18788:	sub	sp, sp, #8
   1878c:	str	r0, [sp, #4]
   18790:	str	r1, [sp]
   18794:	ldr	r1, [sp, #4]
   18798:	ldr	r2, [sp]
   1879c:	movw	r0, #0
   187a0:	bl	18720 <__assert_fail@plt+0x7144>
   187a4:	mov	sp, fp
   187a8:	pop	{fp, pc}
   187ac:	push	{fp, lr}
   187b0:	mov	fp, sp
   187b4:	sub	sp, sp, #8
   187b8:	str	r0, [sp, #4]
   187bc:	str	r1, [sp]
   187c0:	ldr	r0, [sp, #4]
   187c4:	ldr	r1, [sp]
   187c8:	movw	r2, #1
   187cc:	bl	187d8 <__assert_fail@plt+0x71fc>
   187d0:	mov	sp, fp
   187d4:	pop	{fp, pc}
   187d8:	push	{fp, lr}
   187dc:	mov	fp, sp
   187e0:	sub	sp, sp, #16
   187e4:	str	r0, [fp, #-4]
   187e8:	str	r1, [sp, #8]
   187ec:	str	r2, [sp, #4]
   187f0:	ldr	r0, [sp, #8]
   187f4:	ldr	r0, [r0]
   187f8:	str	r0, [sp]
   187fc:	ldr	r0, [fp, #-4]
   18800:	movw	r1, #0
   18804:	cmp	r0, r1
   18808:	bne	18854 <__assert_fail@plt+0x7278>
   1880c:	ldr	r0, [sp]
   18810:	cmp	r0, #0
   18814:	bne	18850 <__assert_fail@plt+0x7274>
   18818:	ldr	r0, [sp, #4]
   1881c:	movw	r1, #64	; 0x40
   18820:	udiv	r0, r1, r0
   18824:	str	r0, [sp]
   18828:	ldr	r0, [sp]
   1882c:	cmp	r0, #0
   18830:	movw	r0, #0
   18834:	movne	r0, #1
   18838:	mvn	r1, #0
   1883c:	eor	r0, r0, r1
   18840:	and	r0, r0, #1
   18844:	ldr	r1, [sp]
   18848:	add	r0, r1, r0
   1884c:	str	r0, [sp]
   18850:	b	18884 <__assert_fail@plt+0x72a8>
   18854:	ldr	r0, [sp]
   18858:	ldr	r1, [sp]
   1885c:	lsr	r1, r1, #1
   18860:	add	r1, r1, #1
   18864:	adds	r0, r0, r1
   18868:	mov	r1, #0
   1886c:	adc	r1, r1, #0
   18870:	str	r0, [sp]
   18874:	tst	r1, #1
   18878:	beq	18880 <__assert_fail@plt+0x72a4>
   1887c:	bl	1b334 <__assert_fail@plt+0x9d58>
   18880:	b	18884 <__assert_fail@plt+0x72a8>
   18884:	ldr	r0, [fp, #-4]
   18888:	ldr	r1, [sp]
   1888c:	ldr	r2, [sp, #4]
   18890:	bl	18588 <__assert_fail@plt+0x6fac>
   18894:	str	r0, [fp, #-4]
   18898:	ldr	r0, [sp]
   1889c:	ldr	r1, [sp, #8]
   188a0:	str	r0, [r1]
   188a4:	ldr	r0, [fp, #-4]
   188a8:	mov	sp, fp
   188ac:	pop	{fp, pc}
   188b0:	push	{fp, lr}
   188b4:	mov	fp, sp
   188b8:	sub	sp, sp, #216	; 0xd8
   188bc:	ldr	ip, [fp, #8]
   188c0:	str	r0, [fp, #-4]
   188c4:	str	r1, [fp, #-8]
   188c8:	str	r2, [fp, #-12]
   188cc:	str	r3, [fp, #-16]
   188d0:	ldr	r0, [fp, #-8]
   188d4:	ldr	r0, [r0]
   188d8:	str	r0, [fp, #-20]	; 0xffffffec
   188dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   188e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   188e4:	asr	r1, r1, #1
   188e8:	add	r1, r0, r1
   188ec:	mov	r2, #1
   188f0:	cmp	r1, r0
   188f4:	movwvc	r2, #0
   188f8:	str	r1, [fp, #-24]	; 0xffffffe8
   188fc:	tst	r2, #1
   18900:	beq	1890c <__assert_fail@plt+0x7330>
   18904:	ldr	r0, [pc, #4036]	; 198d0 <__assert_fail@plt+0x82f4>
   18908:	str	r0, [fp, #-24]	; 0xffffffe8
   1890c:	ldr	r0, [fp, #-16]
   18910:	movw	r1, #0
   18914:	cmp	r1, r0
   18918:	bgt	18934 <__assert_fail@plt+0x7358>
   1891c:	ldr	r0, [fp, #-16]
   18920:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18924:	cmp	r0, r1
   18928:	bge	18934 <__assert_fail@plt+0x7358>
   1892c:	ldr	r0, [fp, #-16]
   18930:	str	r0, [fp, #-24]	; 0xffffffe8
   18934:	b	18d0c <__assert_fail@plt+0x7730>
   18938:	b	1893c <__assert_fail@plt+0x7360>
   1893c:	ldr	r0, [fp, #8]
   18940:	cmp	r0, #0
   18944:	bge	18a58 <__assert_fail@plt+0x747c>
   18948:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1894c:	cmp	r0, #0
   18950:	bge	189dc <__assert_fail@plt+0x7400>
   18954:	b	18958 <__assert_fail@plt+0x737c>
   18958:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1895c:	ldr	r1, [fp, #8]
   18960:	movw	r2, #127	; 0x7f
   18964:	sdiv	r1, r2, r1
   18968:	cmp	r0, r1
   1896c:	blt	18af8 <__assert_fail@plt+0x751c>
   18970:	b	18b10 <__assert_fail@plt+0x7534>
   18974:	b	18978 <__assert_fail@plt+0x739c>
   18978:	ldr	r0, [pc, #4084]	; 19974 <__assert_fail@plt+0x8398>
   1897c:	ldr	r1, [fp, #8]
   18980:	cmp	r1, r0
   18984:	blt	1899c <__assert_fail@plt+0x73c0>
   18988:	b	189a8 <__assert_fail@plt+0x73cc>
   1898c:	ldr	r0, [fp, #8]
   18990:	movw	r1, #0
   18994:	cmp	r1, r0
   18998:	bge	189a8 <__assert_fail@plt+0x73cc>
   1899c:	movw	r0, #0
   189a0:	str	r0, [fp, #-36]	; 0xffffffdc
   189a4:	b	189c0 <__assert_fail@plt+0x73e4>
   189a8:	ldr	r0, [fp, #8]
   189ac:	movw	r1, #0
   189b0:	sub	r0, r1, r0
   189b4:	movw	r1, #127	; 0x7f
   189b8:	sdiv	r0, r1, r0
   189bc:	str	r0, [fp, #-36]	; 0xffffffdc
   189c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   189c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   189c8:	mvn	r2, #0
   189cc:	sub	r1, r2, r1
   189d0:	cmp	r0, r1
   189d4:	ble	18af8 <__assert_fail@plt+0x751c>
   189d8:	b	18b10 <__assert_fail@plt+0x7534>
   189dc:	b	189e0 <__assert_fail@plt+0x7404>
   189e0:	b	18a3c <__assert_fail@plt+0x7460>
   189e4:	b	18a3c <__assert_fail@plt+0x7460>
   189e8:	ldr	r0, [fp, #8]
   189ec:	cmn	r0, #1
   189f0:	bne	18a3c <__assert_fail@plt+0x7460>
   189f4:	b	189f8 <__assert_fail@plt+0x741c>
   189f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   189fc:	mvn	r1, #127	; 0x7f
   18a00:	add	r0, r0, r1
   18a04:	movw	r1, #0
   18a08:	cmp	r1, r0
   18a0c:	blt	18af8 <__assert_fail@plt+0x751c>
   18a10:	b	18b10 <__assert_fail@plt+0x7534>
   18a14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a18:	movw	r1, #0
   18a1c:	cmp	r1, r0
   18a20:	bge	18b10 <__assert_fail@plt+0x7534>
   18a24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a28:	sub	r0, r0, #1
   18a2c:	movw	r1, #127	; 0x7f
   18a30:	cmp	r1, r0
   18a34:	blt	18af8 <__assert_fail@plt+0x751c>
   18a38:	b	18b10 <__assert_fail@plt+0x7534>
   18a3c:	ldr	r0, [fp, #8]
   18a40:	mvn	r1, #127	; 0x7f
   18a44:	sdiv	r0, r1, r0
   18a48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18a4c:	cmp	r0, r1
   18a50:	blt	18af8 <__assert_fail@plt+0x751c>
   18a54:	b	18b10 <__assert_fail@plt+0x7534>
   18a58:	ldr	r0, [fp, #8]
   18a5c:	cmp	r0, #0
   18a60:	bne	18a68 <__assert_fail@plt+0x748c>
   18a64:	b	18b10 <__assert_fail@plt+0x7534>
   18a68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a6c:	cmp	r0, #0
   18a70:	bge	18ae0 <__assert_fail@plt+0x7504>
   18a74:	b	18a78 <__assert_fail@plt+0x749c>
   18a78:	b	18ac4 <__assert_fail@plt+0x74e8>
   18a7c:	b	18ac4 <__assert_fail@plt+0x74e8>
   18a80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a84:	cmn	r0, #1
   18a88:	bne	18ac4 <__assert_fail@plt+0x74e8>
   18a8c:	b	18a90 <__assert_fail@plt+0x74b4>
   18a90:	ldr	r0, [fp, #8]
   18a94:	mvn	r1, #127	; 0x7f
   18a98:	add	r0, r0, r1
   18a9c:	movw	r1, #0
   18aa0:	cmp	r1, r0
   18aa4:	blt	18af8 <__assert_fail@plt+0x751c>
   18aa8:	b	18b10 <__assert_fail@plt+0x7534>
   18aac:	ldr	r0, [fp, #8]
   18ab0:	sub	r0, r0, #1
   18ab4:	movw	r1, #127	; 0x7f
   18ab8:	cmp	r1, r0
   18abc:	blt	18af8 <__assert_fail@plt+0x751c>
   18ac0:	b	18b10 <__assert_fail@plt+0x7534>
   18ac4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ac8:	mvn	r1, #127	; 0x7f
   18acc:	sdiv	r0, r1, r0
   18ad0:	ldr	r1, [fp, #8]
   18ad4:	cmp	r0, r1
   18ad8:	blt	18af8 <__assert_fail@plt+0x751c>
   18adc:	b	18b10 <__assert_fail@plt+0x7534>
   18ae0:	ldr	r0, [fp, #8]
   18ae4:	movw	r1, #127	; 0x7f
   18ae8:	sdiv	r0, r1, r0
   18aec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18af0:	cmp	r0, r1
   18af4:	bge	18b10 <__assert_fail@plt+0x7534>
   18af8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18afc:	ldr	r1, [fp, #8]
   18b00:	mul	r0, r0, r1
   18b04:	sxtb	r0, r0
   18b08:	str	r0, [fp, #-28]	; 0xffffffe4
   18b0c:	b	19cd4 <__assert_fail@plt+0x86f8>
   18b10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b14:	ldr	r1, [fp, #8]
   18b18:	mul	r0, r0, r1
   18b1c:	sxtb	r0, r0
   18b20:	str	r0, [fp, #-28]	; 0xffffffe4
   18b24:	b	19ce0 <__assert_fail@plt+0x8704>
   18b28:	ldr	r0, [fp, #8]
   18b2c:	cmp	r0, #0
   18b30:	bge	18c40 <__assert_fail@plt+0x7664>
   18b34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b38:	cmp	r0, #0
   18b3c:	bge	18bc8 <__assert_fail@plt+0x75ec>
   18b40:	b	18b44 <__assert_fail@plt+0x7568>
   18b44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b48:	ldr	r1, [fp, #8]
   18b4c:	movw	r2, #255	; 0xff
   18b50:	sdiv	r1, r2, r1
   18b54:	cmp	r0, r1
   18b58:	blt	18cdc <__assert_fail@plt+0x7700>
   18b5c:	b	18cf4 <__assert_fail@plt+0x7718>
   18b60:	b	18b64 <__assert_fail@plt+0x7588>
   18b64:	ldr	r0, [pc, #3592]	; 19974 <__assert_fail@plt+0x8398>
   18b68:	ldr	r1, [fp, #8]
   18b6c:	cmp	r1, r0
   18b70:	blt	18b88 <__assert_fail@plt+0x75ac>
   18b74:	b	18b94 <__assert_fail@plt+0x75b8>
   18b78:	ldr	r0, [fp, #8]
   18b7c:	movw	r1, #0
   18b80:	cmp	r1, r0
   18b84:	bge	18b94 <__assert_fail@plt+0x75b8>
   18b88:	movw	r0, #0
   18b8c:	str	r0, [fp, #-40]	; 0xffffffd8
   18b90:	b	18bac <__assert_fail@plt+0x75d0>
   18b94:	ldr	r0, [fp, #8]
   18b98:	movw	r1, #0
   18b9c:	sub	r0, r1, r0
   18ba0:	movw	r1, #255	; 0xff
   18ba4:	sdiv	r0, r1, r0
   18ba8:	str	r0, [fp, #-40]	; 0xffffffd8
   18bac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18bb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18bb4:	mvn	r2, #0
   18bb8:	sub	r1, r2, r1
   18bbc:	cmp	r0, r1
   18bc0:	ble	18cdc <__assert_fail@plt+0x7700>
   18bc4:	b	18cf4 <__assert_fail@plt+0x7718>
   18bc8:	b	18bcc <__assert_fail@plt+0x75f0>
   18bcc:	b	18c24 <__assert_fail@plt+0x7648>
   18bd0:	b	18c24 <__assert_fail@plt+0x7648>
   18bd4:	ldr	r0, [fp, #8]
   18bd8:	cmn	r0, #1
   18bdc:	bne	18c24 <__assert_fail@plt+0x7648>
   18be0:	b	18be4 <__assert_fail@plt+0x7608>
   18be4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18be8:	add	r0, r0, #0
   18bec:	movw	r1, #0
   18bf0:	cmp	r1, r0
   18bf4:	blt	18cdc <__assert_fail@plt+0x7700>
   18bf8:	b	18cf4 <__assert_fail@plt+0x7718>
   18bfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c00:	movw	r1, #0
   18c04:	cmp	r1, r0
   18c08:	bge	18cf4 <__assert_fail@plt+0x7718>
   18c0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c10:	sub	r0, r0, #1
   18c14:	mvn	r1, #0
   18c18:	cmp	r1, r0
   18c1c:	blt	18cdc <__assert_fail@plt+0x7700>
   18c20:	b	18cf4 <__assert_fail@plt+0x7718>
   18c24:	ldr	r0, [fp, #8]
   18c28:	movw	r1, #0
   18c2c:	sdiv	r0, r1, r0
   18c30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18c34:	cmp	r0, r1
   18c38:	blt	18cdc <__assert_fail@plt+0x7700>
   18c3c:	b	18cf4 <__assert_fail@plt+0x7718>
   18c40:	ldr	r0, [fp, #8]
   18c44:	cmp	r0, #0
   18c48:	bne	18c50 <__assert_fail@plt+0x7674>
   18c4c:	b	18cf4 <__assert_fail@plt+0x7718>
   18c50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c54:	cmp	r0, #0
   18c58:	bge	18cc4 <__assert_fail@plt+0x76e8>
   18c5c:	b	18c60 <__assert_fail@plt+0x7684>
   18c60:	b	18ca8 <__assert_fail@plt+0x76cc>
   18c64:	b	18ca8 <__assert_fail@plt+0x76cc>
   18c68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c6c:	cmn	r0, #1
   18c70:	bne	18ca8 <__assert_fail@plt+0x76cc>
   18c74:	b	18c78 <__assert_fail@plt+0x769c>
   18c78:	ldr	r0, [fp, #8]
   18c7c:	add	r0, r0, #0
   18c80:	movw	r1, #0
   18c84:	cmp	r1, r0
   18c88:	blt	18cdc <__assert_fail@plt+0x7700>
   18c8c:	b	18cf4 <__assert_fail@plt+0x7718>
   18c90:	ldr	r0, [fp, #8]
   18c94:	sub	r0, r0, #1
   18c98:	mvn	r1, #0
   18c9c:	cmp	r1, r0
   18ca0:	blt	18cdc <__assert_fail@plt+0x7700>
   18ca4:	b	18cf4 <__assert_fail@plt+0x7718>
   18ca8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18cac:	movw	r1, #0
   18cb0:	sdiv	r0, r1, r0
   18cb4:	ldr	r1, [fp, #8]
   18cb8:	cmp	r0, r1
   18cbc:	blt	18cdc <__assert_fail@plt+0x7700>
   18cc0:	b	18cf4 <__assert_fail@plt+0x7718>
   18cc4:	ldr	r0, [fp, #8]
   18cc8:	movw	r1, #255	; 0xff
   18ccc:	sdiv	r0, r1, r0
   18cd0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18cd4:	cmp	r0, r1
   18cd8:	bge	18cf4 <__assert_fail@plt+0x7718>
   18cdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ce0:	ldr	r1, [fp, #8]
   18ce4:	mul	r0, r0, r1
   18ce8:	and	r0, r0, #255	; 0xff
   18cec:	str	r0, [fp, #-28]	; 0xffffffe4
   18cf0:	b	19cd4 <__assert_fail@plt+0x86f8>
   18cf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18cf8:	ldr	r1, [fp, #8]
   18cfc:	mul	r0, r0, r1
   18d00:	and	r0, r0, #255	; 0xff
   18d04:	str	r0, [fp, #-28]	; 0xffffffe4
   18d08:	b	19ce0 <__assert_fail@plt+0x8704>
   18d0c:	b	190e4 <__assert_fail@plt+0x7b08>
   18d10:	b	18d14 <__assert_fail@plt+0x7738>
   18d14:	ldr	r0, [fp, #8]
   18d18:	cmp	r0, #0
   18d1c:	bge	18e30 <__assert_fail@plt+0x7854>
   18d20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d24:	cmp	r0, #0
   18d28:	bge	18db4 <__assert_fail@plt+0x77d8>
   18d2c:	b	18d30 <__assert_fail@plt+0x7754>
   18d30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d34:	ldr	r1, [fp, #8]
   18d38:	movw	r2, #32767	; 0x7fff
   18d3c:	sdiv	r1, r2, r1
   18d40:	cmp	r0, r1
   18d44:	blt	18ed0 <__assert_fail@plt+0x78f4>
   18d48:	b	18ee8 <__assert_fail@plt+0x790c>
   18d4c:	b	18d50 <__assert_fail@plt+0x7774>
   18d50:	ldr	r0, [pc, #3100]	; 19974 <__assert_fail@plt+0x8398>
   18d54:	ldr	r1, [fp, #8]
   18d58:	cmp	r1, r0
   18d5c:	blt	18d74 <__assert_fail@plt+0x7798>
   18d60:	b	18d80 <__assert_fail@plt+0x77a4>
   18d64:	ldr	r0, [fp, #8]
   18d68:	movw	r1, #0
   18d6c:	cmp	r1, r0
   18d70:	bge	18d80 <__assert_fail@plt+0x77a4>
   18d74:	movw	r0, #0
   18d78:	str	r0, [fp, #-44]	; 0xffffffd4
   18d7c:	b	18d98 <__assert_fail@plt+0x77bc>
   18d80:	ldr	r0, [fp, #8]
   18d84:	movw	r1, #0
   18d88:	sub	r0, r1, r0
   18d8c:	movw	r1, #32767	; 0x7fff
   18d90:	sdiv	r0, r1, r0
   18d94:	str	r0, [fp, #-44]	; 0xffffffd4
   18d98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18d9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18da0:	mvn	r2, #0
   18da4:	sub	r1, r2, r1
   18da8:	cmp	r0, r1
   18dac:	ble	18ed0 <__assert_fail@plt+0x78f4>
   18db0:	b	18ee8 <__assert_fail@plt+0x790c>
   18db4:	b	18db8 <__assert_fail@plt+0x77dc>
   18db8:	b	18e14 <__assert_fail@plt+0x7838>
   18dbc:	b	18e14 <__assert_fail@plt+0x7838>
   18dc0:	ldr	r0, [fp, #8]
   18dc4:	cmn	r0, #1
   18dc8:	bne	18e14 <__assert_fail@plt+0x7838>
   18dcc:	b	18dd0 <__assert_fail@plt+0x77f4>
   18dd0:	ldr	r0, [pc, #4068]	; 19dbc <__assert_fail@plt+0x87e0>
   18dd4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18dd8:	add	r0, r1, r0
   18ddc:	movw	r1, #0
   18de0:	cmp	r1, r0
   18de4:	blt	18ed0 <__assert_fail@plt+0x78f4>
   18de8:	b	18ee8 <__assert_fail@plt+0x790c>
   18dec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18df0:	movw	r1, #0
   18df4:	cmp	r1, r0
   18df8:	bge	18ee8 <__assert_fail@plt+0x790c>
   18dfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e00:	sub	r0, r0, #1
   18e04:	movw	r1, #32767	; 0x7fff
   18e08:	cmp	r1, r0
   18e0c:	blt	18ed0 <__assert_fail@plt+0x78f4>
   18e10:	b	18ee8 <__assert_fail@plt+0x790c>
   18e14:	ldr	r0, [pc, #4000]	; 19dbc <__assert_fail@plt+0x87e0>
   18e18:	ldr	r1, [fp, #8]
   18e1c:	sdiv	r0, r0, r1
   18e20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18e24:	cmp	r0, r1
   18e28:	blt	18ed0 <__assert_fail@plt+0x78f4>
   18e2c:	b	18ee8 <__assert_fail@plt+0x790c>
   18e30:	ldr	r0, [fp, #8]
   18e34:	cmp	r0, #0
   18e38:	bne	18e40 <__assert_fail@plt+0x7864>
   18e3c:	b	18ee8 <__assert_fail@plt+0x790c>
   18e40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e44:	cmp	r0, #0
   18e48:	bge	18eb8 <__assert_fail@plt+0x78dc>
   18e4c:	b	18e50 <__assert_fail@plt+0x7874>
   18e50:	b	18e9c <__assert_fail@plt+0x78c0>
   18e54:	b	18e9c <__assert_fail@plt+0x78c0>
   18e58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e5c:	cmn	r0, #1
   18e60:	bne	18e9c <__assert_fail@plt+0x78c0>
   18e64:	b	18e68 <__assert_fail@plt+0x788c>
   18e68:	ldr	r0, [pc, #3916]	; 19dbc <__assert_fail@plt+0x87e0>
   18e6c:	ldr	r1, [fp, #8]
   18e70:	add	r0, r1, r0
   18e74:	movw	r1, #0
   18e78:	cmp	r1, r0
   18e7c:	blt	18ed0 <__assert_fail@plt+0x78f4>
   18e80:	b	18ee8 <__assert_fail@plt+0x790c>
   18e84:	ldr	r0, [fp, #8]
   18e88:	sub	r0, r0, #1
   18e8c:	movw	r1, #32767	; 0x7fff
   18e90:	cmp	r1, r0
   18e94:	blt	18ed0 <__assert_fail@plt+0x78f4>
   18e98:	b	18ee8 <__assert_fail@plt+0x790c>
   18e9c:	ldr	r0, [pc, #3864]	; 19dbc <__assert_fail@plt+0x87e0>
   18ea0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18ea4:	sdiv	r0, r0, r1
   18ea8:	ldr	r1, [fp, #8]
   18eac:	cmp	r0, r1
   18eb0:	blt	18ed0 <__assert_fail@plt+0x78f4>
   18eb4:	b	18ee8 <__assert_fail@plt+0x790c>
   18eb8:	ldr	r0, [fp, #8]
   18ebc:	movw	r1, #32767	; 0x7fff
   18ec0:	sdiv	r0, r1, r0
   18ec4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18ec8:	cmp	r0, r1
   18ecc:	bge	18ee8 <__assert_fail@plt+0x790c>
   18ed0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ed4:	ldr	r1, [fp, #8]
   18ed8:	mul	r0, r0, r1
   18edc:	sxth	r0, r0
   18ee0:	str	r0, [fp, #-28]	; 0xffffffe4
   18ee4:	b	19cd4 <__assert_fail@plt+0x86f8>
   18ee8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18eec:	ldr	r1, [fp, #8]
   18ef0:	mul	r0, r0, r1
   18ef4:	sxth	r0, r0
   18ef8:	str	r0, [fp, #-28]	; 0xffffffe4
   18efc:	b	19ce0 <__assert_fail@plt+0x8704>
   18f00:	ldr	r0, [fp, #8]
   18f04:	cmp	r0, #0
   18f08:	bge	19018 <__assert_fail@plt+0x7a3c>
   18f0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f10:	cmp	r0, #0
   18f14:	bge	18fa0 <__assert_fail@plt+0x79c4>
   18f18:	b	18f1c <__assert_fail@plt+0x7940>
   18f1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f20:	ldr	r1, [fp, #8]
   18f24:	movw	r2, #65535	; 0xffff
   18f28:	sdiv	r1, r2, r1
   18f2c:	cmp	r0, r1
   18f30:	blt	190b4 <__assert_fail@plt+0x7ad8>
   18f34:	b	190cc <__assert_fail@plt+0x7af0>
   18f38:	b	18f3c <__assert_fail@plt+0x7960>
   18f3c:	ldr	r0, [pc, #2608]	; 19974 <__assert_fail@plt+0x8398>
   18f40:	ldr	r1, [fp, #8]
   18f44:	cmp	r1, r0
   18f48:	blt	18f60 <__assert_fail@plt+0x7984>
   18f4c:	b	18f6c <__assert_fail@plt+0x7990>
   18f50:	ldr	r0, [fp, #8]
   18f54:	movw	r1, #0
   18f58:	cmp	r1, r0
   18f5c:	bge	18f6c <__assert_fail@plt+0x7990>
   18f60:	movw	r0, #0
   18f64:	str	r0, [fp, #-48]	; 0xffffffd0
   18f68:	b	18f84 <__assert_fail@plt+0x79a8>
   18f6c:	ldr	r0, [fp, #8]
   18f70:	movw	r1, #0
   18f74:	sub	r0, r1, r0
   18f78:	movw	r1, #65535	; 0xffff
   18f7c:	sdiv	r0, r1, r0
   18f80:	str	r0, [fp, #-48]	; 0xffffffd0
   18f84:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18f88:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18f8c:	mvn	r2, #0
   18f90:	sub	r1, r2, r1
   18f94:	cmp	r0, r1
   18f98:	ble	190b4 <__assert_fail@plt+0x7ad8>
   18f9c:	b	190cc <__assert_fail@plt+0x7af0>
   18fa0:	b	18fa4 <__assert_fail@plt+0x79c8>
   18fa4:	b	18ffc <__assert_fail@plt+0x7a20>
   18fa8:	b	18ffc <__assert_fail@plt+0x7a20>
   18fac:	ldr	r0, [fp, #8]
   18fb0:	cmn	r0, #1
   18fb4:	bne	18ffc <__assert_fail@plt+0x7a20>
   18fb8:	b	18fbc <__assert_fail@plt+0x79e0>
   18fbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fc0:	add	r0, r0, #0
   18fc4:	movw	r1, #0
   18fc8:	cmp	r1, r0
   18fcc:	blt	190b4 <__assert_fail@plt+0x7ad8>
   18fd0:	b	190cc <__assert_fail@plt+0x7af0>
   18fd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fd8:	movw	r1, #0
   18fdc:	cmp	r1, r0
   18fe0:	bge	190cc <__assert_fail@plt+0x7af0>
   18fe4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fe8:	sub	r0, r0, #1
   18fec:	mvn	r1, #0
   18ff0:	cmp	r1, r0
   18ff4:	blt	190b4 <__assert_fail@plt+0x7ad8>
   18ff8:	b	190cc <__assert_fail@plt+0x7af0>
   18ffc:	ldr	r0, [fp, #8]
   19000:	movw	r1, #0
   19004:	sdiv	r0, r1, r0
   19008:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1900c:	cmp	r0, r1
   19010:	blt	190b4 <__assert_fail@plt+0x7ad8>
   19014:	b	190cc <__assert_fail@plt+0x7af0>
   19018:	ldr	r0, [fp, #8]
   1901c:	cmp	r0, #0
   19020:	bne	19028 <__assert_fail@plt+0x7a4c>
   19024:	b	190cc <__assert_fail@plt+0x7af0>
   19028:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1902c:	cmp	r0, #0
   19030:	bge	1909c <__assert_fail@plt+0x7ac0>
   19034:	b	19038 <__assert_fail@plt+0x7a5c>
   19038:	b	19080 <__assert_fail@plt+0x7aa4>
   1903c:	b	19080 <__assert_fail@plt+0x7aa4>
   19040:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19044:	cmn	r0, #1
   19048:	bne	19080 <__assert_fail@plt+0x7aa4>
   1904c:	b	19050 <__assert_fail@plt+0x7a74>
   19050:	ldr	r0, [fp, #8]
   19054:	add	r0, r0, #0
   19058:	movw	r1, #0
   1905c:	cmp	r1, r0
   19060:	blt	190b4 <__assert_fail@plt+0x7ad8>
   19064:	b	190cc <__assert_fail@plt+0x7af0>
   19068:	ldr	r0, [fp, #8]
   1906c:	sub	r0, r0, #1
   19070:	mvn	r1, #0
   19074:	cmp	r1, r0
   19078:	blt	190b4 <__assert_fail@plt+0x7ad8>
   1907c:	b	190cc <__assert_fail@plt+0x7af0>
   19080:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19084:	movw	r1, #0
   19088:	sdiv	r0, r1, r0
   1908c:	ldr	r1, [fp, #8]
   19090:	cmp	r0, r1
   19094:	blt	190b4 <__assert_fail@plt+0x7ad8>
   19098:	b	190cc <__assert_fail@plt+0x7af0>
   1909c:	ldr	r0, [fp, #8]
   190a0:	movw	r1, #65535	; 0xffff
   190a4:	sdiv	r0, r1, r0
   190a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   190ac:	cmp	r0, r1
   190b0:	bge	190cc <__assert_fail@plt+0x7af0>
   190b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190b8:	ldr	r1, [fp, #8]
   190bc:	mul	r0, r0, r1
   190c0:	uxth	r0, r0
   190c4:	str	r0, [fp, #-28]	; 0xffffffe4
   190c8:	b	19cd4 <__assert_fail@plt+0x86f8>
   190cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190d0:	ldr	r1, [fp, #8]
   190d4:	mul	r0, r0, r1
   190d8:	uxth	r0, r0
   190dc:	str	r0, [fp, #-28]	; 0xffffffe4
   190e0:	b	19ce0 <__assert_fail@plt+0x8704>
   190e4:	b	190e8 <__assert_fail@plt+0x7b0c>
   190e8:	b	190ec <__assert_fail@plt+0x7b10>
   190ec:	ldr	r0, [fp, #8]
   190f0:	cmp	r0, #0
   190f4:	bge	191f8 <__assert_fail@plt+0x7c1c>
   190f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190fc:	cmp	r0, #0
   19100:	bge	1918c <__assert_fail@plt+0x7bb0>
   19104:	b	19108 <__assert_fail@plt+0x7b2c>
   19108:	ldr	r0, [pc, #1984]	; 198d0 <__assert_fail@plt+0x82f4>
   1910c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19110:	ldr	r2, [fp, #8]
   19114:	sdiv	r0, r0, r2
   19118:	cmp	r1, r0
   1911c:	blt	19288 <__assert_fail@plt+0x7cac>
   19120:	b	1929c <__assert_fail@plt+0x7cc0>
   19124:	b	19128 <__assert_fail@plt+0x7b4c>
   19128:	ldr	r0, [pc, #2116]	; 19974 <__assert_fail@plt+0x8398>
   1912c:	ldr	r1, [fp, #8]
   19130:	cmp	r1, r0
   19134:	blt	1914c <__assert_fail@plt+0x7b70>
   19138:	b	19158 <__assert_fail@plt+0x7b7c>
   1913c:	ldr	r0, [fp, #8]
   19140:	movw	r1, #0
   19144:	cmp	r1, r0
   19148:	bge	19158 <__assert_fail@plt+0x7b7c>
   1914c:	movw	r0, #0
   19150:	str	r0, [fp, #-52]	; 0xffffffcc
   19154:	b	19170 <__assert_fail@plt+0x7b94>
   19158:	ldr	r0, [pc, #1904]	; 198d0 <__assert_fail@plt+0x82f4>
   1915c:	ldr	r1, [fp, #8]
   19160:	movw	r2, #0
   19164:	sub	r1, r2, r1
   19168:	sdiv	r0, r0, r1
   1916c:	str	r0, [fp, #-52]	; 0xffffffcc
   19170:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19174:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19178:	mvn	r2, #0
   1917c:	sub	r1, r2, r1
   19180:	cmp	r0, r1
   19184:	ble	19288 <__assert_fail@plt+0x7cac>
   19188:	b	1929c <__assert_fail@plt+0x7cc0>
   1918c:	ldr	r0, [fp, #8]
   19190:	cmn	r0, #1
   19194:	bne	191dc <__assert_fail@plt+0x7c00>
   19198:	b	1919c <__assert_fail@plt+0x7bc0>
   1919c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191a0:	add	r0, r0, #-2147483648	; 0x80000000
   191a4:	movw	r1, #0
   191a8:	cmp	r1, r0
   191ac:	blt	19288 <__assert_fail@plt+0x7cac>
   191b0:	b	1929c <__assert_fail@plt+0x7cc0>
   191b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191b8:	movw	r1, #0
   191bc:	cmp	r1, r0
   191c0:	bge	1929c <__assert_fail@plt+0x7cc0>
   191c4:	ldr	r0, [pc, #1796]	; 198d0 <__assert_fail@plt+0x82f4>
   191c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   191cc:	sub	r1, r1, #1
   191d0:	cmp	r0, r1
   191d4:	blt	19288 <__assert_fail@plt+0x7cac>
   191d8:	b	1929c <__assert_fail@plt+0x7cc0>
   191dc:	ldr	r0, [pc, #4080]	; 1a1d4 <__assert_fail@plt+0x8bf8>
   191e0:	ldr	r1, [fp, #8]
   191e4:	sdiv	r0, r0, r1
   191e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   191ec:	cmp	r0, r1
   191f0:	blt	19288 <__assert_fail@plt+0x7cac>
   191f4:	b	1929c <__assert_fail@plt+0x7cc0>
   191f8:	ldr	r0, [fp, #8]
   191fc:	cmp	r0, #0
   19200:	bne	19208 <__assert_fail@plt+0x7c2c>
   19204:	b	1929c <__assert_fail@plt+0x7cc0>
   19208:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1920c:	cmp	r0, #0
   19210:	bge	19270 <__assert_fail@plt+0x7c94>
   19214:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19218:	cmn	r0, #1
   1921c:	bne	19254 <__assert_fail@plt+0x7c78>
   19220:	b	19224 <__assert_fail@plt+0x7c48>
   19224:	ldr	r0, [fp, #8]
   19228:	add	r0, r0, #-2147483648	; 0x80000000
   1922c:	movw	r1, #0
   19230:	cmp	r1, r0
   19234:	blt	19288 <__assert_fail@plt+0x7cac>
   19238:	b	1929c <__assert_fail@plt+0x7cc0>
   1923c:	ldr	r0, [pc, #1676]	; 198d0 <__assert_fail@plt+0x82f4>
   19240:	ldr	r1, [fp, #8]
   19244:	sub	r1, r1, #1
   19248:	cmp	r0, r1
   1924c:	blt	19288 <__assert_fail@plt+0x7cac>
   19250:	b	1929c <__assert_fail@plt+0x7cc0>
   19254:	ldr	r0, [pc, #3960]	; 1a1d4 <__assert_fail@plt+0x8bf8>
   19258:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1925c:	sdiv	r0, r0, r1
   19260:	ldr	r1, [fp, #8]
   19264:	cmp	r0, r1
   19268:	blt	19288 <__assert_fail@plt+0x7cac>
   1926c:	b	1929c <__assert_fail@plt+0x7cc0>
   19270:	ldr	r0, [pc, #1624]	; 198d0 <__assert_fail@plt+0x82f4>
   19274:	ldr	r1, [fp, #8]
   19278:	sdiv	r0, r0, r1
   1927c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19280:	cmp	r0, r1
   19284:	bge	1929c <__assert_fail@plt+0x7cc0>
   19288:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1928c:	ldr	r1, [fp, #8]
   19290:	mul	r0, r0, r1
   19294:	str	r0, [fp, #-28]	; 0xffffffe4
   19298:	b	19cd4 <__assert_fail@plt+0x86f8>
   1929c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192a0:	ldr	r1, [fp, #8]
   192a4:	mul	r0, r0, r1
   192a8:	str	r0, [fp, #-28]	; 0xffffffe4
   192ac:	b	19ce0 <__assert_fail@plt+0x8704>
   192b0:	ldr	r0, [fp, #8]
   192b4:	cmp	r0, #0
   192b8:	bge	193c8 <__assert_fail@plt+0x7dec>
   192bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192c0:	cmp	r0, #0
   192c4:	bge	19350 <__assert_fail@plt+0x7d74>
   192c8:	b	192e8 <__assert_fail@plt+0x7d0c>
   192cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192d0:	ldr	r1, [fp, #8]
   192d4:	mvn	r2, #0
   192d8:	udiv	r1, r2, r1
   192dc:	cmp	r0, r1
   192e0:	bcc	19464 <__assert_fail@plt+0x7e88>
   192e4:	b	19478 <__assert_fail@plt+0x7e9c>
   192e8:	b	192ec <__assert_fail@plt+0x7d10>
   192ec:	ldr	r0, [pc, #1664]	; 19974 <__assert_fail@plt+0x8398>
   192f0:	ldr	r1, [fp, #8]
   192f4:	cmp	r1, r0
   192f8:	blt	19310 <__assert_fail@plt+0x7d34>
   192fc:	b	1931c <__assert_fail@plt+0x7d40>
   19300:	ldr	r0, [fp, #8]
   19304:	movw	r1, #0
   19308:	cmp	r1, r0
   1930c:	bge	1931c <__assert_fail@plt+0x7d40>
   19310:	movw	r0, #1
   19314:	str	r0, [fp, #-56]	; 0xffffffc8
   19318:	b	19334 <__assert_fail@plt+0x7d58>
   1931c:	ldr	r0, [fp, #8]
   19320:	movw	r1, #0
   19324:	sub	r0, r1, r0
   19328:	mvn	r1, #0
   1932c:	udiv	r0, r1, r0
   19330:	str	r0, [fp, #-56]	; 0xffffffc8
   19334:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19338:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1933c:	mvn	r2, #0
   19340:	sub	r1, r2, r1
   19344:	cmp	r0, r1
   19348:	bls	19464 <__assert_fail@plt+0x7e88>
   1934c:	b	19478 <__assert_fail@plt+0x7e9c>
   19350:	b	19354 <__assert_fail@plt+0x7d78>
   19354:	b	193ac <__assert_fail@plt+0x7dd0>
   19358:	b	193ac <__assert_fail@plt+0x7dd0>
   1935c:	ldr	r0, [fp, #8]
   19360:	cmn	r0, #1
   19364:	bne	193ac <__assert_fail@plt+0x7dd0>
   19368:	b	1936c <__assert_fail@plt+0x7d90>
   1936c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19370:	add	r0, r0, #0
   19374:	movw	r1, #0
   19378:	cmp	r1, r0
   1937c:	blt	19464 <__assert_fail@plt+0x7e88>
   19380:	b	19478 <__assert_fail@plt+0x7e9c>
   19384:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19388:	movw	r1, #0
   1938c:	cmp	r1, r0
   19390:	bge	19478 <__assert_fail@plt+0x7e9c>
   19394:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19398:	sub	r0, r0, #1
   1939c:	mvn	r1, #0
   193a0:	cmp	r1, r0
   193a4:	blt	19464 <__assert_fail@plt+0x7e88>
   193a8:	b	19478 <__assert_fail@plt+0x7e9c>
   193ac:	ldr	r0, [fp, #8]
   193b0:	movw	r1, #0
   193b4:	sdiv	r0, r1, r0
   193b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   193bc:	cmp	r0, r1
   193c0:	blt	19464 <__assert_fail@plt+0x7e88>
   193c4:	b	19478 <__assert_fail@plt+0x7e9c>
   193c8:	ldr	r0, [fp, #8]
   193cc:	cmp	r0, #0
   193d0:	bne	193d8 <__assert_fail@plt+0x7dfc>
   193d4:	b	19478 <__assert_fail@plt+0x7e9c>
   193d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   193dc:	cmp	r0, #0
   193e0:	bge	1944c <__assert_fail@plt+0x7e70>
   193e4:	b	193e8 <__assert_fail@plt+0x7e0c>
   193e8:	b	19430 <__assert_fail@plt+0x7e54>
   193ec:	b	19430 <__assert_fail@plt+0x7e54>
   193f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   193f4:	cmn	r0, #1
   193f8:	bne	19430 <__assert_fail@plt+0x7e54>
   193fc:	b	19400 <__assert_fail@plt+0x7e24>
   19400:	ldr	r0, [fp, #8]
   19404:	add	r0, r0, #0
   19408:	movw	r1, #0
   1940c:	cmp	r1, r0
   19410:	blt	19464 <__assert_fail@plt+0x7e88>
   19414:	b	19478 <__assert_fail@plt+0x7e9c>
   19418:	ldr	r0, [fp, #8]
   1941c:	sub	r0, r0, #1
   19420:	mvn	r1, #0
   19424:	cmp	r1, r0
   19428:	blt	19464 <__assert_fail@plt+0x7e88>
   1942c:	b	19478 <__assert_fail@plt+0x7e9c>
   19430:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19434:	movw	r1, #0
   19438:	sdiv	r0, r1, r0
   1943c:	ldr	r1, [fp, #8]
   19440:	cmp	r0, r1
   19444:	blt	19464 <__assert_fail@plt+0x7e88>
   19448:	b	19478 <__assert_fail@plt+0x7e9c>
   1944c:	ldr	r0, [fp, #8]
   19450:	mvn	r1, #0
   19454:	udiv	r0, r1, r0
   19458:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1945c:	cmp	r0, r1
   19460:	bcs	19478 <__assert_fail@plt+0x7e9c>
   19464:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19468:	ldr	r1, [fp, #8]
   1946c:	mul	r0, r0, r1
   19470:	str	r0, [fp, #-28]	; 0xffffffe4
   19474:	b	19cd4 <__assert_fail@plt+0x86f8>
   19478:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1947c:	ldr	r1, [fp, #8]
   19480:	mul	r0, r0, r1
   19484:	str	r0, [fp, #-28]	; 0xffffffe4
   19488:	b	19ce0 <__assert_fail@plt+0x8704>
   1948c:	b	19490 <__assert_fail@plt+0x7eb4>
   19490:	b	19494 <__assert_fail@plt+0x7eb8>
   19494:	ldr	r0, [fp, #8]
   19498:	cmp	r0, #0
   1949c:	bge	195a0 <__assert_fail@plt+0x7fc4>
   194a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   194a4:	cmp	r0, #0
   194a8:	bge	19534 <__assert_fail@plt+0x7f58>
   194ac:	b	194b0 <__assert_fail@plt+0x7ed4>
   194b0:	ldr	r0, [pc, #1048]	; 198d0 <__assert_fail@plt+0x82f4>
   194b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   194b8:	ldr	r2, [fp, #8]
   194bc:	sdiv	r0, r0, r2
   194c0:	cmp	r1, r0
   194c4:	blt	19630 <__assert_fail@plt+0x8054>
   194c8:	b	19644 <__assert_fail@plt+0x8068>
   194cc:	b	194d0 <__assert_fail@plt+0x7ef4>
   194d0:	ldr	r0, [pc, #1180]	; 19974 <__assert_fail@plt+0x8398>
   194d4:	ldr	r1, [fp, #8]
   194d8:	cmp	r1, r0
   194dc:	blt	194f4 <__assert_fail@plt+0x7f18>
   194e0:	b	19500 <__assert_fail@plt+0x7f24>
   194e4:	ldr	r0, [fp, #8]
   194e8:	movw	r1, #0
   194ec:	cmp	r1, r0
   194f0:	bge	19500 <__assert_fail@plt+0x7f24>
   194f4:	movw	r0, #0
   194f8:	str	r0, [fp, #-60]	; 0xffffffc4
   194fc:	b	19518 <__assert_fail@plt+0x7f3c>
   19500:	ldr	r0, [pc, #968]	; 198d0 <__assert_fail@plt+0x82f4>
   19504:	ldr	r1, [fp, #8]
   19508:	movw	r2, #0
   1950c:	sub	r1, r2, r1
   19510:	sdiv	r0, r0, r1
   19514:	str	r0, [fp, #-60]	; 0xffffffc4
   19518:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1951c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19520:	mvn	r2, #0
   19524:	sub	r1, r2, r1
   19528:	cmp	r0, r1
   1952c:	ble	19630 <__assert_fail@plt+0x8054>
   19530:	b	19644 <__assert_fail@plt+0x8068>
   19534:	ldr	r0, [fp, #8]
   19538:	cmn	r0, #1
   1953c:	bne	19584 <__assert_fail@plt+0x7fa8>
   19540:	b	19544 <__assert_fail@plt+0x7f68>
   19544:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19548:	add	r0, r0, #-2147483648	; 0x80000000
   1954c:	movw	r1, #0
   19550:	cmp	r1, r0
   19554:	blt	19630 <__assert_fail@plt+0x8054>
   19558:	b	19644 <__assert_fail@plt+0x8068>
   1955c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19560:	movw	r1, #0
   19564:	cmp	r1, r0
   19568:	bge	19644 <__assert_fail@plt+0x8068>
   1956c:	ldr	r0, [pc, #860]	; 198d0 <__assert_fail@plt+0x82f4>
   19570:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19574:	sub	r1, r1, #1
   19578:	cmp	r0, r1
   1957c:	blt	19630 <__assert_fail@plt+0x8054>
   19580:	b	19644 <__assert_fail@plt+0x8068>
   19584:	ldr	r0, [pc, #3144]	; 1a1d4 <__assert_fail@plt+0x8bf8>
   19588:	ldr	r1, [fp, #8]
   1958c:	sdiv	r0, r0, r1
   19590:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19594:	cmp	r0, r1
   19598:	blt	19630 <__assert_fail@plt+0x8054>
   1959c:	b	19644 <__assert_fail@plt+0x8068>
   195a0:	ldr	r0, [fp, #8]
   195a4:	cmp	r0, #0
   195a8:	bne	195b0 <__assert_fail@plt+0x7fd4>
   195ac:	b	19644 <__assert_fail@plt+0x8068>
   195b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   195b4:	cmp	r0, #0
   195b8:	bge	19618 <__assert_fail@plt+0x803c>
   195bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   195c0:	cmn	r0, #1
   195c4:	bne	195fc <__assert_fail@plt+0x8020>
   195c8:	b	195cc <__assert_fail@plt+0x7ff0>
   195cc:	ldr	r0, [fp, #8]
   195d0:	add	r0, r0, #-2147483648	; 0x80000000
   195d4:	movw	r1, #0
   195d8:	cmp	r1, r0
   195dc:	blt	19630 <__assert_fail@plt+0x8054>
   195e0:	b	19644 <__assert_fail@plt+0x8068>
   195e4:	ldr	r0, [pc, #740]	; 198d0 <__assert_fail@plt+0x82f4>
   195e8:	ldr	r1, [fp, #8]
   195ec:	sub	r1, r1, #1
   195f0:	cmp	r0, r1
   195f4:	blt	19630 <__assert_fail@plt+0x8054>
   195f8:	b	19644 <__assert_fail@plt+0x8068>
   195fc:	ldr	r0, [pc, #3024]	; 1a1d4 <__assert_fail@plt+0x8bf8>
   19600:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19604:	sdiv	r0, r0, r1
   19608:	ldr	r1, [fp, #8]
   1960c:	cmp	r0, r1
   19610:	blt	19630 <__assert_fail@plt+0x8054>
   19614:	b	19644 <__assert_fail@plt+0x8068>
   19618:	ldr	r0, [pc, #688]	; 198d0 <__assert_fail@plt+0x82f4>
   1961c:	ldr	r1, [fp, #8]
   19620:	sdiv	r0, r0, r1
   19624:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19628:	cmp	r0, r1
   1962c:	bge	19644 <__assert_fail@plt+0x8068>
   19630:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19634:	ldr	r1, [fp, #8]
   19638:	mul	r0, r0, r1
   1963c:	str	r0, [fp, #-28]	; 0xffffffe4
   19640:	b	19cd4 <__assert_fail@plt+0x86f8>
   19644:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19648:	ldr	r1, [fp, #8]
   1964c:	mul	r0, r0, r1
   19650:	str	r0, [fp, #-28]	; 0xffffffe4
   19654:	b	19ce0 <__assert_fail@plt+0x8704>
   19658:	ldr	r0, [fp, #8]
   1965c:	cmp	r0, #0
   19660:	bge	19770 <__assert_fail@plt+0x8194>
   19664:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19668:	cmp	r0, #0
   1966c:	bge	196f8 <__assert_fail@plt+0x811c>
   19670:	b	19690 <__assert_fail@plt+0x80b4>
   19674:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19678:	ldr	r1, [fp, #8]
   1967c:	mvn	r2, #0
   19680:	udiv	r1, r2, r1
   19684:	cmp	r0, r1
   19688:	bcc	1980c <__assert_fail@plt+0x8230>
   1968c:	b	19820 <__assert_fail@plt+0x8244>
   19690:	b	19694 <__assert_fail@plt+0x80b8>
   19694:	ldr	r0, [pc, #728]	; 19974 <__assert_fail@plt+0x8398>
   19698:	ldr	r1, [fp, #8]
   1969c:	cmp	r1, r0
   196a0:	blt	196b8 <__assert_fail@plt+0x80dc>
   196a4:	b	196c4 <__assert_fail@plt+0x80e8>
   196a8:	ldr	r0, [fp, #8]
   196ac:	movw	r1, #0
   196b0:	cmp	r1, r0
   196b4:	bge	196c4 <__assert_fail@plt+0x80e8>
   196b8:	movw	r0, #1
   196bc:	str	r0, [fp, #-64]	; 0xffffffc0
   196c0:	b	196dc <__assert_fail@plt+0x8100>
   196c4:	ldr	r0, [fp, #8]
   196c8:	movw	r1, #0
   196cc:	sub	r0, r1, r0
   196d0:	mvn	r1, #0
   196d4:	udiv	r0, r1, r0
   196d8:	str	r0, [fp, #-64]	; 0xffffffc0
   196dc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   196e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   196e4:	mvn	r2, #0
   196e8:	sub	r1, r2, r1
   196ec:	cmp	r0, r1
   196f0:	bls	1980c <__assert_fail@plt+0x8230>
   196f4:	b	19820 <__assert_fail@plt+0x8244>
   196f8:	b	196fc <__assert_fail@plt+0x8120>
   196fc:	b	19754 <__assert_fail@plt+0x8178>
   19700:	b	19754 <__assert_fail@plt+0x8178>
   19704:	ldr	r0, [fp, #8]
   19708:	cmn	r0, #1
   1970c:	bne	19754 <__assert_fail@plt+0x8178>
   19710:	b	19714 <__assert_fail@plt+0x8138>
   19714:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19718:	add	r0, r0, #0
   1971c:	movw	r1, #0
   19720:	cmp	r1, r0
   19724:	blt	1980c <__assert_fail@plt+0x8230>
   19728:	b	19820 <__assert_fail@plt+0x8244>
   1972c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19730:	movw	r1, #0
   19734:	cmp	r1, r0
   19738:	bge	19820 <__assert_fail@plt+0x8244>
   1973c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19740:	sub	r0, r0, #1
   19744:	mvn	r1, #0
   19748:	cmp	r1, r0
   1974c:	blt	1980c <__assert_fail@plt+0x8230>
   19750:	b	19820 <__assert_fail@plt+0x8244>
   19754:	ldr	r0, [fp, #8]
   19758:	movw	r1, #0
   1975c:	sdiv	r0, r1, r0
   19760:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19764:	cmp	r0, r1
   19768:	blt	1980c <__assert_fail@plt+0x8230>
   1976c:	b	19820 <__assert_fail@plt+0x8244>
   19770:	ldr	r0, [fp, #8]
   19774:	cmp	r0, #0
   19778:	bne	19780 <__assert_fail@plt+0x81a4>
   1977c:	b	19820 <__assert_fail@plt+0x8244>
   19780:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19784:	cmp	r0, #0
   19788:	bge	197f4 <__assert_fail@plt+0x8218>
   1978c:	b	19790 <__assert_fail@plt+0x81b4>
   19790:	b	197d8 <__assert_fail@plt+0x81fc>
   19794:	b	197d8 <__assert_fail@plt+0x81fc>
   19798:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1979c:	cmn	r0, #1
   197a0:	bne	197d8 <__assert_fail@plt+0x81fc>
   197a4:	b	197a8 <__assert_fail@plt+0x81cc>
   197a8:	ldr	r0, [fp, #8]
   197ac:	add	r0, r0, #0
   197b0:	movw	r1, #0
   197b4:	cmp	r1, r0
   197b8:	blt	1980c <__assert_fail@plt+0x8230>
   197bc:	b	19820 <__assert_fail@plt+0x8244>
   197c0:	ldr	r0, [fp, #8]
   197c4:	sub	r0, r0, #1
   197c8:	mvn	r1, #0
   197cc:	cmp	r1, r0
   197d0:	blt	1980c <__assert_fail@plt+0x8230>
   197d4:	b	19820 <__assert_fail@plt+0x8244>
   197d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   197dc:	movw	r1, #0
   197e0:	sdiv	r0, r1, r0
   197e4:	ldr	r1, [fp, #8]
   197e8:	cmp	r0, r1
   197ec:	blt	1980c <__assert_fail@plt+0x8230>
   197f0:	b	19820 <__assert_fail@plt+0x8244>
   197f4:	ldr	r0, [fp, #8]
   197f8:	mvn	r1, #0
   197fc:	udiv	r0, r1, r0
   19800:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19804:	cmp	r0, r1
   19808:	bcs	19820 <__assert_fail@plt+0x8244>
   1980c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19810:	ldr	r1, [fp, #8]
   19814:	mul	r0, r0, r1
   19818:	str	r0, [fp, #-28]	; 0xffffffe4
   1981c:	b	19cd4 <__assert_fail@plt+0x86f8>
   19820:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19824:	ldr	r1, [fp, #8]
   19828:	mul	r0, r0, r1
   1982c:	str	r0, [fp, #-28]	; 0xffffffe4
   19830:	b	19ce0 <__assert_fail@plt+0x8704>
   19834:	b	19838 <__assert_fail@plt+0x825c>
   19838:	ldr	r0, [fp, #8]
   1983c:	cmp	r0, #0
   19840:	bge	199b0 <__assert_fail@plt+0x83d4>
   19844:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19848:	cmp	r0, #0
   1984c:	bge	19928 <__assert_fail@plt+0x834c>
   19850:	b	19854 <__assert_fail@plt+0x8278>
   19854:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19858:	ldr	r1, [fp, #8]
   1985c:	asr	r3, r1, #31
   19860:	mvn	r2, #0
   19864:	mvn	ip, #-2147483648	; 0x80000000
   19868:	str	r0, [fp, #-68]	; 0xffffffbc
   1986c:	mov	r0, r2
   19870:	str	r1, [fp, #-72]	; 0xffffffb8
   19874:	mov	r1, ip
   19878:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1987c:	bl	1e054 <_obstack_memory_used@@Base+0x1f60>
   19880:	ldr	r2, [fp, #-68]	; 0xffffffbc
   19884:	subs	r0, r2, r0
   19888:	rscs	r1, r1, r2, asr #31
   1988c:	blt	19a78 <__assert_fail@plt+0x849c>
   19890:	b	19a8c <__assert_fail@plt+0x84b0>
   19894:	b	19898 <__assert_fail@plt+0x82bc>
   19898:	ldr	r0, [pc, #212]	; 19974 <__assert_fail@plt+0x8398>
   1989c:	ldr	r1, [fp, #8]
   198a0:	cmp	r1, r0
   198a4:	blt	198bc <__assert_fail@plt+0x82e0>
   198a8:	b	198d4 <__assert_fail@plt+0x82f8>
   198ac:	ldr	r0, [fp, #8]
   198b0:	movw	r1, #0
   198b4:	cmp	r1, r0
   198b8:	bge	198d4 <__assert_fail@plt+0x82f8>
   198bc:	mov	r0, #0
   198c0:	mvn	r1, #0
   198c4:	str	r1, [fp, #-76]	; 0xffffffb4
   198c8:	str	r0, [fp, #-80]	; 0xffffffb0
   198cc:	b	19908 <__assert_fail@plt+0x832c>
   198d0:	svcvc	0x00ffffff
   198d4:	ldr	r0, [fp, #8]
   198d8:	rsb	r0, r0, #0
   198dc:	asr	r3, r0, #31
   198e0:	mvn	r1, #0
   198e4:	mvn	r2, #-2147483648	; 0x80000000
   198e8:	str	r0, [fp, #-84]	; 0xffffffac
   198ec:	mov	r0, r1
   198f0:	mov	r1, r2
   198f4:	ldr	r2, [fp, #-84]	; 0xffffffac
   198f8:	bl	1e054 <_obstack_memory_used@@Base+0x1f60>
   198fc:	str	r0, [fp, #-76]	; 0xffffffb4
   19900:	str	r1, [fp, #-80]	; 0xffffffb0
   19904:	b	19908 <__assert_fail@plt+0x832c>
   19908:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1990c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   19910:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19914:	mvn	r2, r2
   19918:	subs	r1, r2, r1
   1991c:	rscs	r0, r0, r2, asr #31
   19920:	bge	19a78 <__assert_fail@plt+0x849c>
   19924:	b	19a8c <__assert_fail@plt+0x84b0>
   19928:	ldr	r0, [fp, #8]
   1992c:	cmn	r0, #1
   19930:	bne	19978 <__assert_fail@plt+0x839c>
   19934:	b	19938 <__assert_fail@plt+0x835c>
   19938:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1993c:	mov	r1, #-2147483648	; 0x80000000
   19940:	add	r1, r1, r0, asr #31
   19944:	rsbs	r0, r0, #0
   19948:	rscs	r1, r1, #0
   1994c:	blt	19a78 <__assert_fail@plt+0x849c>
   19950:	b	19a8c <__assert_fail@plt+0x84b0>
   19954:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19958:	movw	r1, #0
   1995c:	cmp	r1, r0
   19960:	bge	19a8c <__assert_fail@plt+0x84b0>
   19964:	mov	r0, #0
   19968:	cmp	r0, #0
   1996c:	bne	19a78 <__assert_fail@plt+0x849c>
   19970:	b	19a8c <__assert_fail@plt+0x84b0>
   19974:	andhi	r0, r0, r1
   19978:	ldr	r0, [fp, #8]
   1997c:	asr	r3, r0, #31
   19980:	mov	r1, #0
   19984:	mov	r2, #-2147483648	; 0x80000000
   19988:	str	r0, [fp, #-88]	; 0xffffffa8
   1998c:	mov	r0, r1
   19990:	mov	r1, r2
   19994:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19998:	bl	1e054 <_obstack_memory_used@@Base+0x1f60>
   1999c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   199a0:	subs	r0, r0, r2
   199a4:	sbcs	r1, r1, r2, asr #31
   199a8:	blt	19a78 <__assert_fail@plt+0x849c>
   199ac:	b	19a8c <__assert_fail@plt+0x84b0>
   199b0:	ldr	r0, [fp, #8]
   199b4:	cmp	r0, #0
   199b8:	bne	199c0 <__assert_fail@plt+0x83e4>
   199bc:	b	19a8c <__assert_fail@plt+0x84b0>
   199c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   199c4:	cmp	r0, #0
   199c8:	bge	19a40 <__assert_fail@plt+0x8464>
   199cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   199d0:	cmn	r0, #1
   199d4:	bne	19a08 <__assert_fail@plt+0x842c>
   199d8:	b	199dc <__assert_fail@plt+0x8400>
   199dc:	ldr	r0, [fp, #8]
   199e0:	mov	r1, #-2147483648	; 0x80000000
   199e4:	add	r1, r1, r0, asr #31
   199e8:	rsbs	r0, r0, #0
   199ec:	rscs	r1, r1, #0
   199f0:	blt	19a78 <__assert_fail@plt+0x849c>
   199f4:	b	19a8c <__assert_fail@plt+0x84b0>
   199f8:	mov	r0, #0
   199fc:	cmp	r0, #0
   19a00:	bne	19a78 <__assert_fail@plt+0x849c>
   19a04:	b	19a8c <__assert_fail@plt+0x84b0>
   19a08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a0c:	asr	r3, r0, #31
   19a10:	mov	r1, #0
   19a14:	mov	r2, #-2147483648	; 0x80000000
   19a18:	str	r0, [fp, #-92]	; 0xffffffa4
   19a1c:	mov	r0, r1
   19a20:	mov	r1, r2
   19a24:	ldr	r2, [fp, #-92]	; 0xffffffa4
   19a28:	bl	1e054 <_obstack_memory_used@@Base+0x1f60>
   19a2c:	ldr	r2, [fp, #8]
   19a30:	subs	r0, r0, r2
   19a34:	sbcs	r1, r1, r2, asr #31
   19a38:	blt	19a78 <__assert_fail@plt+0x849c>
   19a3c:	b	19a8c <__assert_fail@plt+0x84b0>
   19a40:	ldr	r0, [fp, #8]
   19a44:	asr	r3, r0, #31
   19a48:	mvn	r1, #0
   19a4c:	mvn	r2, #-2147483648	; 0x80000000
   19a50:	str	r0, [fp, #-96]	; 0xffffffa0
   19a54:	mov	r0, r1
   19a58:	mov	r1, r2
   19a5c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19a60:	bl	1e054 <_obstack_memory_used@@Base+0x1f60>
   19a64:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19a68:	subs	r0, r0, r2
   19a6c:	sbcs	r1, r1, r2, asr #31
   19a70:	bge	19a8c <__assert_fail@plt+0x84b0>
   19a74:	b	19a78 <__assert_fail@plt+0x849c>
   19a78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a7c:	ldr	r1, [fp, #8]
   19a80:	mul	r0, r0, r1
   19a84:	str	r0, [fp, #-28]	; 0xffffffe4
   19a88:	b	19cd4 <__assert_fail@plt+0x86f8>
   19a8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a90:	ldr	r1, [fp, #8]
   19a94:	mul	r0, r0, r1
   19a98:	str	r0, [fp, #-28]	; 0xffffffe4
   19a9c:	b	19ce0 <__assert_fail@plt+0x8704>
   19aa0:	ldr	r0, [fp, #8]
   19aa4:	cmp	r0, #0
   19aa8:	bge	19bf8 <__assert_fail@plt+0x861c>
   19aac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ab0:	cmp	r0, #0
   19ab4:	bge	19b80 <__assert_fail@plt+0x85a4>
   19ab8:	b	19af8 <__assert_fail@plt+0x851c>
   19abc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ac0:	ldr	r1, [fp, #8]
   19ac4:	asr	r3, r1, #31
   19ac8:	mvn	r2, #0
   19acc:	str	r0, [fp, #-100]	; 0xffffff9c
   19ad0:	mov	r0, r2
   19ad4:	str	r1, [fp, #-104]	; 0xffffff98
   19ad8:	mov	r1, r2
   19adc:	ldr	r2, [fp, #-104]	; 0xffffff98
   19ae0:	bl	1e128 <_obstack_memory_used@@Base+0x2034>
   19ae4:	ldr	r2, [fp, #-100]	; 0xffffff9c
   19ae8:	subs	r0, r2, r0
   19aec:	rscs	r1, r1, r2, asr #31
   19af0:	bcc	19cac <__assert_fail@plt+0x86d0>
   19af4:	b	19cc0 <__assert_fail@plt+0x86e4>
   19af8:	b	19afc <__assert_fail@plt+0x8520>
   19afc:	ldr	r0, [pc, #-400]	; 19974 <__assert_fail@plt+0x8398>
   19b00:	ldr	r1, [fp, #8]
   19b04:	cmp	r1, r0
   19b08:	blt	19b20 <__assert_fail@plt+0x8544>
   19b0c:	b	19b34 <__assert_fail@plt+0x8558>
   19b10:	ldr	r0, [fp, #8]
   19b14:	movw	r1, #0
   19b18:	cmp	r1, r0
   19b1c:	bge	19b34 <__assert_fail@plt+0x8558>
   19b20:	mov	r0, #1
   19b24:	mvn	r1, #0
   19b28:	str	r1, [sp, #108]	; 0x6c
   19b2c:	str	r0, [sp, #104]	; 0x68
   19b30:	b	19b60 <__assert_fail@plt+0x8584>
   19b34:	ldr	r0, [fp, #8]
   19b38:	rsb	r0, r0, #0
   19b3c:	asr	r3, r0, #31
   19b40:	mvn	r1, #0
   19b44:	str	r0, [sp, #100]	; 0x64
   19b48:	mov	r0, r1
   19b4c:	ldr	r2, [sp, #100]	; 0x64
   19b50:	bl	1e128 <_obstack_memory_used@@Base+0x2034>
   19b54:	str	r0, [sp, #108]	; 0x6c
   19b58:	str	r1, [sp, #104]	; 0x68
   19b5c:	b	19b60 <__assert_fail@plt+0x8584>
   19b60:	ldr	r0, [sp, #104]	; 0x68
   19b64:	ldr	r1, [sp, #108]	; 0x6c
   19b68:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19b6c:	mvn	r2, r2
   19b70:	subs	r1, r2, r1
   19b74:	rscs	r0, r0, r2, asr #31
   19b78:	bcs	19cac <__assert_fail@plt+0x86d0>
   19b7c:	b	19cc0 <__assert_fail@plt+0x86e4>
   19b80:	b	19b84 <__assert_fail@plt+0x85a8>
   19b84:	b	19bdc <__assert_fail@plt+0x8600>
   19b88:	b	19bdc <__assert_fail@plt+0x8600>
   19b8c:	ldr	r0, [fp, #8]
   19b90:	cmn	r0, #1
   19b94:	bne	19bdc <__assert_fail@plt+0x8600>
   19b98:	b	19b9c <__assert_fail@plt+0x85c0>
   19b9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ba0:	add	r0, r0, #0
   19ba4:	movw	r1, #0
   19ba8:	cmp	r1, r0
   19bac:	blt	19cac <__assert_fail@plt+0x86d0>
   19bb0:	b	19cc0 <__assert_fail@plt+0x86e4>
   19bb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19bb8:	movw	r1, #0
   19bbc:	cmp	r1, r0
   19bc0:	bge	19cc0 <__assert_fail@plt+0x86e4>
   19bc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19bc8:	sub	r0, r0, #1
   19bcc:	mvn	r1, #0
   19bd0:	cmp	r1, r0
   19bd4:	blt	19cac <__assert_fail@plt+0x86d0>
   19bd8:	b	19cc0 <__assert_fail@plt+0x86e4>
   19bdc:	ldr	r0, [fp, #8]
   19be0:	movw	r1, #0
   19be4:	sdiv	r0, r1, r0
   19be8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19bec:	cmp	r0, r1
   19bf0:	blt	19cac <__assert_fail@plt+0x86d0>
   19bf4:	b	19cc0 <__assert_fail@plt+0x86e4>
   19bf8:	ldr	r0, [fp, #8]
   19bfc:	cmp	r0, #0
   19c00:	bne	19c08 <__assert_fail@plt+0x862c>
   19c04:	b	19cc0 <__assert_fail@plt+0x86e4>
   19c08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c0c:	cmp	r0, #0
   19c10:	bge	19c7c <__assert_fail@plt+0x86a0>
   19c14:	b	19c18 <__assert_fail@plt+0x863c>
   19c18:	b	19c60 <__assert_fail@plt+0x8684>
   19c1c:	b	19c60 <__assert_fail@plt+0x8684>
   19c20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c24:	cmn	r0, #1
   19c28:	bne	19c60 <__assert_fail@plt+0x8684>
   19c2c:	b	19c30 <__assert_fail@plt+0x8654>
   19c30:	ldr	r0, [fp, #8]
   19c34:	add	r0, r0, #0
   19c38:	movw	r1, #0
   19c3c:	cmp	r1, r0
   19c40:	blt	19cac <__assert_fail@plt+0x86d0>
   19c44:	b	19cc0 <__assert_fail@plt+0x86e4>
   19c48:	ldr	r0, [fp, #8]
   19c4c:	sub	r0, r0, #1
   19c50:	mvn	r1, #0
   19c54:	cmp	r1, r0
   19c58:	blt	19cac <__assert_fail@plt+0x86d0>
   19c5c:	b	19cc0 <__assert_fail@plt+0x86e4>
   19c60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c64:	movw	r1, #0
   19c68:	sdiv	r0, r1, r0
   19c6c:	ldr	r1, [fp, #8]
   19c70:	cmp	r0, r1
   19c74:	blt	19cac <__assert_fail@plt+0x86d0>
   19c78:	b	19cc0 <__assert_fail@plt+0x86e4>
   19c7c:	ldr	r0, [fp, #8]
   19c80:	asr	r3, r0, #31
   19c84:	mvn	r1, #0
   19c88:	str	r0, [sp, #96]	; 0x60
   19c8c:	mov	r0, r1
   19c90:	ldr	r2, [sp, #96]	; 0x60
   19c94:	bl	1e128 <_obstack_memory_used@@Base+0x2034>
   19c98:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19c9c:	subs	r0, r0, r2
   19ca0:	sbcs	r1, r1, r2, asr #31
   19ca4:	bcs	19cc0 <__assert_fail@plt+0x86e4>
   19ca8:	b	19cac <__assert_fail@plt+0x86d0>
   19cac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19cb0:	ldr	r1, [fp, #8]
   19cb4:	mul	r0, r0, r1
   19cb8:	str	r0, [fp, #-28]	; 0xffffffe4
   19cbc:	b	19cd4 <__assert_fail@plt+0x86f8>
   19cc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19cc4:	ldr	r1, [fp, #8]
   19cc8:	mul	r0, r0, r1
   19ccc:	str	r0, [fp, #-28]	; 0xffffffe4
   19cd0:	b	19ce0 <__assert_fail@plt+0x8704>
   19cd4:	ldr	r0, [pc, #-1036]	; 198d0 <__assert_fail@plt+0x82f4>
   19cd8:	str	r0, [sp, #92]	; 0x5c
   19cdc:	b	19d00 <__assert_fail@plt+0x8724>
   19ce0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19ce4:	cmp	r0, #64	; 0x40
   19ce8:	movw	r0, #0
   19cec:	movlt	r0, #1
   19cf0:	tst	r0, #1
   19cf4:	movw	r0, #64	; 0x40
   19cf8:	moveq	r0, #0
   19cfc:	str	r0, [sp, #92]	; 0x5c
   19d00:	ldr	r0, [sp, #92]	; 0x5c
   19d04:	str	r0, [fp, #-32]	; 0xffffffe0
   19d08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19d0c:	cmp	r0, #0
   19d10:	beq	19d40 <__assert_fail@plt+0x8764>
   19d14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19d18:	ldr	r1, [fp, #8]
   19d1c:	sdiv	r0, r0, r1
   19d20:	str	r0, [fp, #-24]	; 0xffffffe8
   19d24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19d28:	mov	r1, r0
   19d2c:	ldr	r2, [fp, #8]
   19d30:	sdiv	r3, r0, r2
   19d34:	mls	r0, r3, r2, r0
   19d38:	sub	r0, r1, r0
   19d3c:	str	r0, [fp, #-28]	; 0xffffffe4
   19d40:	ldr	r0, [fp, #-4]
   19d44:	movw	r1, #0
   19d48:	cmp	r0, r1
   19d4c:	bne	19d5c <__assert_fail@plt+0x8780>
   19d50:	ldr	r0, [fp, #-8]
   19d54:	movw	r1, #0
   19d58:	str	r1, [r0]
   19d5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d60:	ldr	r1, [fp, #-20]	; 0xffffffec
   19d64:	sub	r0, r0, r1
   19d68:	ldr	r1, [fp, #-12]
   19d6c:	cmp	r0, r1
   19d70:	bge	1b15c <__assert_fail@plt+0x9b80>
   19d74:	ldr	r0, [fp, #-20]	; 0xffffffec
   19d78:	ldr	r1, [fp, #-12]
   19d7c:	add	r1, r0, r1
   19d80:	mov	r2, #1
   19d84:	cmp	r1, r0
   19d88:	movwvc	r2, #0
   19d8c:	str	r1, [fp, #-24]	; 0xffffffe8
   19d90:	tst	r2, #1
   19d94:	bne	1b158 <__assert_fail@plt+0x9b7c>
   19d98:	ldr	r0, [fp, #-16]
   19d9c:	movw	r1, #0
   19da0:	cmp	r1, r0
   19da4:	bgt	19db8 <__assert_fail@plt+0x87dc>
   19da8:	ldr	r0, [fp, #-16]
   19dac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19db0:	cmp	r0, r1
   19db4:	blt	1b158 <__assert_fail@plt+0x9b7c>
   19db8:	b	1a194 <__assert_fail@plt+0x8bb8>
   19dbc:			; <UNDEFINED> instruction: 0xffff8000
   19dc0:	b	19dc4 <__assert_fail@plt+0x87e8>
   19dc4:	ldr	r0, [fp, #8]
   19dc8:	cmp	r0, #0
   19dcc:	bge	19ee0 <__assert_fail@plt+0x8904>
   19dd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19dd4:	cmp	r0, #0
   19dd8:	bge	19e64 <__assert_fail@plt+0x8888>
   19ddc:	b	19de0 <__assert_fail@plt+0x8804>
   19de0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19de4:	ldr	r1, [fp, #8]
   19de8:	movw	r2, #127	; 0x7f
   19dec:	sdiv	r1, r2, r1
   19df0:	cmp	r0, r1
   19df4:	blt	19f80 <__assert_fail@plt+0x89a4>
   19df8:	b	19f98 <__assert_fail@plt+0x89bc>
   19dfc:	b	19e00 <__assert_fail@plt+0x8824>
   19e00:	ldr	r0, [pc, #-1172]	; 19974 <__assert_fail@plt+0x8398>
   19e04:	ldr	r1, [fp, #8]
   19e08:	cmp	r1, r0
   19e0c:	blt	19e24 <__assert_fail@plt+0x8848>
   19e10:	b	19e30 <__assert_fail@plt+0x8854>
   19e14:	ldr	r0, [fp, #8]
   19e18:	movw	r1, #0
   19e1c:	cmp	r1, r0
   19e20:	bge	19e30 <__assert_fail@plt+0x8854>
   19e24:	movw	r0, #0
   19e28:	str	r0, [sp, #88]	; 0x58
   19e2c:	b	19e48 <__assert_fail@plt+0x886c>
   19e30:	ldr	r0, [fp, #8]
   19e34:	movw	r1, #0
   19e38:	sub	r0, r1, r0
   19e3c:	movw	r1, #127	; 0x7f
   19e40:	sdiv	r0, r1, r0
   19e44:	str	r0, [sp, #88]	; 0x58
   19e48:	ldr	r0, [sp, #88]	; 0x58
   19e4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19e50:	mvn	r2, #0
   19e54:	sub	r1, r2, r1
   19e58:	cmp	r0, r1
   19e5c:	ble	19f80 <__assert_fail@plt+0x89a4>
   19e60:	b	19f98 <__assert_fail@plt+0x89bc>
   19e64:	b	19e68 <__assert_fail@plt+0x888c>
   19e68:	b	19ec4 <__assert_fail@plt+0x88e8>
   19e6c:	b	19ec4 <__assert_fail@plt+0x88e8>
   19e70:	ldr	r0, [fp, #8]
   19e74:	cmn	r0, #1
   19e78:	bne	19ec4 <__assert_fail@plt+0x88e8>
   19e7c:	b	19e80 <__assert_fail@plt+0x88a4>
   19e80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e84:	mvn	r1, #127	; 0x7f
   19e88:	add	r0, r0, r1
   19e8c:	movw	r1, #0
   19e90:	cmp	r1, r0
   19e94:	blt	19f80 <__assert_fail@plt+0x89a4>
   19e98:	b	19f98 <__assert_fail@plt+0x89bc>
   19e9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ea0:	movw	r1, #0
   19ea4:	cmp	r1, r0
   19ea8:	bge	19f98 <__assert_fail@plt+0x89bc>
   19eac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19eb0:	sub	r0, r0, #1
   19eb4:	movw	r1, #127	; 0x7f
   19eb8:	cmp	r1, r0
   19ebc:	blt	19f80 <__assert_fail@plt+0x89a4>
   19ec0:	b	19f98 <__assert_fail@plt+0x89bc>
   19ec4:	ldr	r0, [fp, #8]
   19ec8:	mvn	r1, #127	; 0x7f
   19ecc:	sdiv	r0, r1, r0
   19ed0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19ed4:	cmp	r0, r1
   19ed8:	blt	19f80 <__assert_fail@plt+0x89a4>
   19edc:	b	19f98 <__assert_fail@plt+0x89bc>
   19ee0:	ldr	r0, [fp, #8]
   19ee4:	cmp	r0, #0
   19ee8:	bne	19ef0 <__assert_fail@plt+0x8914>
   19eec:	b	19f98 <__assert_fail@plt+0x89bc>
   19ef0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ef4:	cmp	r0, #0
   19ef8:	bge	19f68 <__assert_fail@plt+0x898c>
   19efc:	b	19f00 <__assert_fail@plt+0x8924>
   19f00:	b	19f4c <__assert_fail@plt+0x8970>
   19f04:	b	19f4c <__assert_fail@plt+0x8970>
   19f08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f0c:	cmn	r0, #1
   19f10:	bne	19f4c <__assert_fail@plt+0x8970>
   19f14:	b	19f18 <__assert_fail@plt+0x893c>
   19f18:	ldr	r0, [fp, #8]
   19f1c:	mvn	r1, #127	; 0x7f
   19f20:	add	r0, r0, r1
   19f24:	movw	r1, #0
   19f28:	cmp	r1, r0
   19f2c:	blt	19f80 <__assert_fail@plt+0x89a4>
   19f30:	b	19f98 <__assert_fail@plt+0x89bc>
   19f34:	ldr	r0, [fp, #8]
   19f38:	sub	r0, r0, #1
   19f3c:	movw	r1, #127	; 0x7f
   19f40:	cmp	r1, r0
   19f44:	blt	19f80 <__assert_fail@plt+0x89a4>
   19f48:	b	19f98 <__assert_fail@plt+0x89bc>
   19f4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f50:	mvn	r1, #127	; 0x7f
   19f54:	sdiv	r0, r1, r0
   19f58:	ldr	r1, [fp, #8]
   19f5c:	cmp	r0, r1
   19f60:	blt	19f80 <__assert_fail@plt+0x89a4>
   19f64:	b	19f98 <__assert_fail@plt+0x89bc>
   19f68:	ldr	r0, [fp, #8]
   19f6c:	movw	r1, #127	; 0x7f
   19f70:	sdiv	r0, r1, r0
   19f74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19f78:	cmp	r0, r1
   19f7c:	bge	19f98 <__assert_fail@plt+0x89bc>
   19f80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f84:	ldr	r1, [fp, #8]
   19f88:	mul	r0, r0, r1
   19f8c:	sxtb	r0, r0
   19f90:	str	r0, [fp, #-28]	; 0xffffffe4
   19f94:	b	1b158 <__assert_fail@plt+0x9b7c>
   19f98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f9c:	ldr	r1, [fp, #8]
   19fa0:	mul	r0, r0, r1
   19fa4:	sxtb	r0, r0
   19fa8:	str	r0, [fp, #-28]	; 0xffffffe4
   19fac:	b	1b15c <__assert_fail@plt+0x9b80>
   19fb0:	ldr	r0, [fp, #8]
   19fb4:	cmp	r0, #0
   19fb8:	bge	1a0c8 <__assert_fail@plt+0x8aec>
   19fbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19fc0:	cmp	r0, #0
   19fc4:	bge	1a050 <__assert_fail@plt+0x8a74>
   19fc8:	b	19fcc <__assert_fail@plt+0x89f0>
   19fcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19fd0:	ldr	r1, [fp, #8]
   19fd4:	movw	r2, #255	; 0xff
   19fd8:	sdiv	r1, r2, r1
   19fdc:	cmp	r0, r1
   19fe0:	blt	1a164 <__assert_fail@plt+0x8b88>
   19fe4:	b	1a17c <__assert_fail@plt+0x8ba0>
   19fe8:	b	19fec <__assert_fail@plt+0x8a10>
   19fec:	ldr	r0, [pc, #-1664]	; 19974 <__assert_fail@plt+0x8398>
   19ff0:	ldr	r1, [fp, #8]
   19ff4:	cmp	r1, r0
   19ff8:	blt	1a010 <__assert_fail@plt+0x8a34>
   19ffc:	b	1a01c <__assert_fail@plt+0x8a40>
   1a000:	ldr	r0, [fp, #8]
   1a004:	movw	r1, #0
   1a008:	cmp	r1, r0
   1a00c:	bge	1a01c <__assert_fail@plt+0x8a40>
   1a010:	movw	r0, #0
   1a014:	str	r0, [sp, #84]	; 0x54
   1a018:	b	1a034 <__assert_fail@plt+0x8a58>
   1a01c:	ldr	r0, [fp, #8]
   1a020:	movw	r1, #0
   1a024:	sub	r0, r1, r0
   1a028:	movw	r1, #255	; 0xff
   1a02c:	sdiv	r0, r1, r0
   1a030:	str	r0, [sp, #84]	; 0x54
   1a034:	ldr	r0, [sp, #84]	; 0x54
   1a038:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a03c:	mvn	r2, #0
   1a040:	sub	r1, r2, r1
   1a044:	cmp	r0, r1
   1a048:	ble	1a164 <__assert_fail@plt+0x8b88>
   1a04c:	b	1a17c <__assert_fail@plt+0x8ba0>
   1a050:	b	1a054 <__assert_fail@plt+0x8a78>
   1a054:	b	1a0ac <__assert_fail@plt+0x8ad0>
   1a058:	b	1a0ac <__assert_fail@plt+0x8ad0>
   1a05c:	ldr	r0, [fp, #8]
   1a060:	cmn	r0, #1
   1a064:	bne	1a0ac <__assert_fail@plt+0x8ad0>
   1a068:	b	1a06c <__assert_fail@plt+0x8a90>
   1a06c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a070:	add	r0, r0, #0
   1a074:	movw	r1, #0
   1a078:	cmp	r1, r0
   1a07c:	blt	1a164 <__assert_fail@plt+0x8b88>
   1a080:	b	1a17c <__assert_fail@plt+0x8ba0>
   1a084:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a088:	movw	r1, #0
   1a08c:	cmp	r1, r0
   1a090:	bge	1a17c <__assert_fail@plt+0x8ba0>
   1a094:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a098:	sub	r0, r0, #1
   1a09c:	mvn	r1, #0
   1a0a0:	cmp	r1, r0
   1a0a4:	blt	1a164 <__assert_fail@plt+0x8b88>
   1a0a8:	b	1a17c <__assert_fail@plt+0x8ba0>
   1a0ac:	ldr	r0, [fp, #8]
   1a0b0:	movw	r1, #0
   1a0b4:	sdiv	r0, r1, r0
   1a0b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a0bc:	cmp	r0, r1
   1a0c0:	blt	1a164 <__assert_fail@plt+0x8b88>
   1a0c4:	b	1a17c <__assert_fail@plt+0x8ba0>
   1a0c8:	ldr	r0, [fp, #8]
   1a0cc:	cmp	r0, #0
   1a0d0:	bne	1a0d8 <__assert_fail@plt+0x8afc>
   1a0d4:	b	1a17c <__assert_fail@plt+0x8ba0>
   1a0d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a0dc:	cmp	r0, #0
   1a0e0:	bge	1a14c <__assert_fail@plt+0x8b70>
   1a0e4:	b	1a0e8 <__assert_fail@plt+0x8b0c>
   1a0e8:	b	1a130 <__assert_fail@plt+0x8b54>
   1a0ec:	b	1a130 <__assert_fail@plt+0x8b54>
   1a0f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a0f4:	cmn	r0, #1
   1a0f8:	bne	1a130 <__assert_fail@plt+0x8b54>
   1a0fc:	b	1a100 <__assert_fail@plt+0x8b24>
   1a100:	ldr	r0, [fp, #8]
   1a104:	add	r0, r0, #0
   1a108:	movw	r1, #0
   1a10c:	cmp	r1, r0
   1a110:	blt	1a164 <__assert_fail@plt+0x8b88>
   1a114:	b	1a17c <__assert_fail@plt+0x8ba0>
   1a118:	ldr	r0, [fp, #8]
   1a11c:	sub	r0, r0, #1
   1a120:	mvn	r1, #0
   1a124:	cmp	r1, r0
   1a128:	blt	1a164 <__assert_fail@plt+0x8b88>
   1a12c:	b	1a17c <__assert_fail@plt+0x8ba0>
   1a130:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a134:	movw	r1, #0
   1a138:	sdiv	r0, r1, r0
   1a13c:	ldr	r1, [fp, #8]
   1a140:	cmp	r0, r1
   1a144:	blt	1a164 <__assert_fail@plt+0x8b88>
   1a148:	b	1a17c <__assert_fail@plt+0x8ba0>
   1a14c:	ldr	r0, [fp, #8]
   1a150:	movw	r1, #255	; 0xff
   1a154:	sdiv	r0, r1, r0
   1a158:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a15c:	cmp	r0, r1
   1a160:	bge	1a17c <__assert_fail@plt+0x8ba0>
   1a164:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a168:	ldr	r1, [fp, #8]
   1a16c:	mul	r0, r0, r1
   1a170:	and	r0, r0, #255	; 0xff
   1a174:	str	r0, [fp, #-28]	; 0xffffffe4
   1a178:	b	1b158 <__assert_fail@plt+0x9b7c>
   1a17c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a180:	ldr	r1, [fp, #8]
   1a184:	mul	r0, r0, r1
   1a188:	and	r0, r0, #255	; 0xff
   1a18c:	str	r0, [fp, #-28]	; 0xffffffe4
   1a190:	b	1b15c <__assert_fail@plt+0x9b80>
   1a194:	b	1a570 <__assert_fail@plt+0x8f94>
   1a198:	b	1a19c <__assert_fail@plt+0x8bc0>
   1a19c:	ldr	r0, [fp, #8]
   1a1a0:	cmp	r0, #0
   1a1a4:	bge	1a2bc <__assert_fail@plt+0x8ce0>
   1a1a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a1ac:	cmp	r0, #0
   1a1b0:	bge	1a240 <__assert_fail@plt+0x8c64>
   1a1b4:	b	1a1b8 <__assert_fail@plt+0x8bdc>
   1a1b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a1bc:	ldr	r1, [fp, #8]
   1a1c0:	movw	r2, #32767	; 0x7fff
   1a1c4:	sdiv	r1, r2, r1
   1a1c8:	cmp	r0, r1
   1a1cc:	blt	1a35c <__assert_fail@plt+0x8d80>
   1a1d0:	b	1a374 <__assert_fail@plt+0x8d98>
   1a1d4:	andhi	r0, r0, r0
   1a1d8:	b	1a1dc <__assert_fail@plt+0x8c00>
   1a1dc:	ldr	r0, [pc, #4004]	; 1b188 <__assert_fail@plt+0x9bac>
   1a1e0:	ldr	r1, [fp, #8]
   1a1e4:	cmp	r1, r0
   1a1e8:	blt	1a200 <__assert_fail@plt+0x8c24>
   1a1ec:	b	1a20c <__assert_fail@plt+0x8c30>
   1a1f0:	ldr	r0, [fp, #8]
   1a1f4:	movw	r1, #0
   1a1f8:	cmp	r1, r0
   1a1fc:	bge	1a20c <__assert_fail@plt+0x8c30>
   1a200:	movw	r0, #0
   1a204:	str	r0, [sp, #80]	; 0x50
   1a208:	b	1a224 <__assert_fail@plt+0x8c48>
   1a20c:	ldr	r0, [fp, #8]
   1a210:	movw	r1, #0
   1a214:	sub	r0, r1, r0
   1a218:	movw	r1, #32767	; 0x7fff
   1a21c:	sdiv	r0, r1, r0
   1a220:	str	r0, [sp, #80]	; 0x50
   1a224:	ldr	r0, [sp, #80]	; 0x50
   1a228:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a22c:	mvn	r2, #0
   1a230:	sub	r1, r2, r1
   1a234:	cmp	r0, r1
   1a238:	ble	1a35c <__assert_fail@plt+0x8d80>
   1a23c:	b	1a374 <__assert_fail@plt+0x8d98>
   1a240:	b	1a244 <__assert_fail@plt+0x8c68>
   1a244:	b	1a2a0 <__assert_fail@plt+0x8cc4>
   1a248:	b	1a2a0 <__assert_fail@plt+0x8cc4>
   1a24c:	ldr	r0, [fp, #8]
   1a250:	cmn	r0, #1
   1a254:	bne	1a2a0 <__assert_fail@plt+0x8cc4>
   1a258:	b	1a25c <__assert_fail@plt+0x8c80>
   1a25c:	ldr	r0, [pc, #3884]	; 1b190 <__assert_fail@plt+0x9bb4>
   1a260:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a264:	add	r0, r1, r0
   1a268:	movw	r1, #0
   1a26c:	cmp	r1, r0
   1a270:	blt	1a35c <__assert_fail@plt+0x8d80>
   1a274:	b	1a374 <__assert_fail@plt+0x8d98>
   1a278:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a27c:	movw	r1, #0
   1a280:	cmp	r1, r0
   1a284:	bge	1a374 <__assert_fail@plt+0x8d98>
   1a288:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a28c:	sub	r0, r0, #1
   1a290:	movw	r1, #32767	; 0x7fff
   1a294:	cmp	r1, r0
   1a298:	blt	1a35c <__assert_fail@plt+0x8d80>
   1a29c:	b	1a374 <__assert_fail@plt+0x8d98>
   1a2a0:	ldr	r0, [pc, #3816]	; 1b190 <__assert_fail@plt+0x9bb4>
   1a2a4:	ldr	r1, [fp, #8]
   1a2a8:	sdiv	r0, r0, r1
   1a2ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a2b0:	cmp	r0, r1
   1a2b4:	blt	1a35c <__assert_fail@plt+0x8d80>
   1a2b8:	b	1a374 <__assert_fail@plt+0x8d98>
   1a2bc:	ldr	r0, [fp, #8]
   1a2c0:	cmp	r0, #0
   1a2c4:	bne	1a2cc <__assert_fail@plt+0x8cf0>
   1a2c8:	b	1a374 <__assert_fail@plt+0x8d98>
   1a2cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a2d0:	cmp	r0, #0
   1a2d4:	bge	1a344 <__assert_fail@plt+0x8d68>
   1a2d8:	b	1a2dc <__assert_fail@plt+0x8d00>
   1a2dc:	b	1a328 <__assert_fail@plt+0x8d4c>
   1a2e0:	b	1a328 <__assert_fail@plt+0x8d4c>
   1a2e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a2e8:	cmn	r0, #1
   1a2ec:	bne	1a328 <__assert_fail@plt+0x8d4c>
   1a2f0:	b	1a2f4 <__assert_fail@plt+0x8d18>
   1a2f4:	ldr	r0, [pc, #3732]	; 1b190 <__assert_fail@plt+0x9bb4>
   1a2f8:	ldr	r1, [fp, #8]
   1a2fc:	add	r0, r1, r0
   1a300:	movw	r1, #0
   1a304:	cmp	r1, r0
   1a308:	blt	1a35c <__assert_fail@plt+0x8d80>
   1a30c:	b	1a374 <__assert_fail@plt+0x8d98>
   1a310:	ldr	r0, [fp, #8]
   1a314:	sub	r0, r0, #1
   1a318:	movw	r1, #32767	; 0x7fff
   1a31c:	cmp	r1, r0
   1a320:	blt	1a35c <__assert_fail@plt+0x8d80>
   1a324:	b	1a374 <__assert_fail@plt+0x8d98>
   1a328:	ldr	r0, [pc, #3680]	; 1b190 <__assert_fail@plt+0x9bb4>
   1a32c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a330:	sdiv	r0, r0, r1
   1a334:	ldr	r1, [fp, #8]
   1a338:	cmp	r0, r1
   1a33c:	blt	1a35c <__assert_fail@plt+0x8d80>
   1a340:	b	1a374 <__assert_fail@plt+0x8d98>
   1a344:	ldr	r0, [fp, #8]
   1a348:	movw	r1, #32767	; 0x7fff
   1a34c:	sdiv	r0, r1, r0
   1a350:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a354:	cmp	r0, r1
   1a358:	bge	1a374 <__assert_fail@plt+0x8d98>
   1a35c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a360:	ldr	r1, [fp, #8]
   1a364:	mul	r0, r0, r1
   1a368:	sxth	r0, r0
   1a36c:	str	r0, [fp, #-28]	; 0xffffffe4
   1a370:	b	1b158 <__assert_fail@plt+0x9b7c>
   1a374:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a378:	ldr	r1, [fp, #8]
   1a37c:	mul	r0, r0, r1
   1a380:	sxth	r0, r0
   1a384:	str	r0, [fp, #-28]	; 0xffffffe4
   1a388:	b	1b15c <__assert_fail@plt+0x9b80>
   1a38c:	ldr	r0, [fp, #8]
   1a390:	cmp	r0, #0
   1a394:	bge	1a4a4 <__assert_fail@plt+0x8ec8>
   1a398:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a39c:	cmp	r0, #0
   1a3a0:	bge	1a42c <__assert_fail@plt+0x8e50>
   1a3a4:	b	1a3a8 <__assert_fail@plt+0x8dcc>
   1a3a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a3ac:	ldr	r1, [fp, #8]
   1a3b0:	movw	r2, #65535	; 0xffff
   1a3b4:	sdiv	r1, r2, r1
   1a3b8:	cmp	r0, r1
   1a3bc:	blt	1a540 <__assert_fail@plt+0x8f64>
   1a3c0:	b	1a558 <__assert_fail@plt+0x8f7c>
   1a3c4:	b	1a3c8 <__assert_fail@plt+0x8dec>
   1a3c8:	ldr	r0, [pc, #3512]	; 1b188 <__assert_fail@plt+0x9bac>
   1a3cc:	ldr	r1, [fp, #8]
   1a3d0:	cmp	r1, r0
   1a3d4:	blt	1a3ec <__assert_fail@plt+0x8e10>
   1a3d8:	b	1a3f8 <__assert_fail@plt+0x8e1c>
   1a3dc:	ldr	r0, [fp, #8]
   1a3e0:	movw	r1, #0
   1a3e4:	cmp	r1, r0
   1a3e8:	bge	1a3f8 <__assert_fail@plt+0x8e1c>
   1a3ec:	movw	r0, #0
   1a3f0:	str	r0, [sp, #76]	; 0x4c
   1a3f4:	b	1a410 <__assert_fail@plt+0x8e34>
   1a3f8:	ldr	r0, [fp, #8]
   1a3fc:	movw	r1, #0
   1a400:	sub	r0, r1, r0
   1a404:	movw	r1, #65535	; 0xffff
   1a408:	sdiv	r0, r1, r0
   1a40c:	str	r0, [sp, #76]	; 0x4c
   1a410:	ldr	r0, [sp, #76]	; 0x4c
   1a414:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a418:	mvn	r2, #0
   1a41c:	sub	r1, r2, r1
   1a420:	cmp	r0, r1
   1a424:	ble	1a540 <__assert_fail@plt+0x8f64>
   1a428:	b	1a558 <__assert_fail@plt+0x8f7c>
   1a42c:	b	1a430 <__assert_fail@plt+0x8e54>
   1a430:	b	1a488 <__assert_fail@plt+0x8eac>
   1a434:	b	1a488 <__assert_fail@plt+0x8eac>
   1a438:	ldr	r0, [fp, #8]
   1a43c:	cmn	r0, #1
   1a440:	bne	1a488 <__assert_fail@plt+0x8eac>
   1a444:	b	1a448 <__assert_fail@plt+0x8e6c>
   1a448:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a44c:	add	r0, r0, #0
   1a450:	movw	r1, #0
   1a454:	cmp	r1, r0
   1a458:	blt	1a540 <__assert_fail@plt+0x8f64>
   1a45c:	b	1a558 <__assert_fail@plt+0x8f7c>
   1a460:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a464:	movw	r1, #0
   1a468:	cmp	r1, r0
   1a46c:	bge	1a558 <__assert_fail@plt+0x8f7c>
   1a470:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a474:	sub	r0, r0, #1
   1a478:	mvn	r1, #0
   1a47c:	cmp	r1, r0
   1a480:	blt	1a540 <__assert_fail@plt+0x8f64>
   1a484:	b	1a558 <__assert_fail@plt+0x8f7c>
   1a488:	ldr	r0, [fp, #8]
   1a48c:	movw	r1, #0
   1a490:	sdiv	r0, r1, r0
   1a494:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a498:	cmp	r0, r1
   1a49c:	blt	1a540 <__assert_fail@plt+0x8f64>
   1a4a0:	b	1a558 <__assert_fail@plt+0x8f7c>
   1a4a4:	ldr	r0, [fp, #8]
   1a4a8:	cmp	r0, #0
   1a4ac:	bne	1a4b4 <__assert_fail@plt+0x8ed8>
   1a4b0:	b	1a558 <__assert_fail@plt+0x8f7c>
   1a4b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a4b8:	cmp	r0, #0
   1a4bc:	bge	1a528 <__assert_fail@plt+0x8f4c>
   1a4c0:	b	1a4c4 <__assert_fail@plt+0x8ee8>
   1a4c4:	b	1a50c <__assert_fail@plt+0x8f30>
   1a4c8:	b	1a50c <__assert_fail@plt+0x8f30>
   1a4cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a4d0:	cmn	r0, #1
   1a4d4:	bne	1a50c <__assert_fail@plt+0x8f30>
   1a4d8:	b	1a4dc <__assert_fail@plt+0x8f00>
   1a4dc:	ldr	r0, [fp, #8]
   1a4e0:	add	r0, r0, #0
   1a4e4:	movw	r1, #0
   1a4e8:	cmp	r1, r0
   1a4ec:	blt	1a540 <__assert_fail@plt+0x8f64>
   1a4f0:	b	1a558 <__assert_fail@plt+0x8f7c>
   1a4f4:	ldr	r0, [fp, #8]
   1a4f8:	sub	r0, r0, #1
   1a4fc:	mvn	r1, #0
   1a500:	cmp	r1, r0
   1a504:	blt	1a540 <__assert_fail@plt+0x8f64>
   1a508:	b	1a558 <__assert_fail@plt+0x8f7c>
   1a50c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a510:	movw	r1, #0
   1a514:	sdiv	r0, r1, r0
   1a518:	ldr	r1, [fp, #8]
   1a51c:	cmp	r0, r1
   1a520:	blt	1a540 <__assert_fail@plt+0x8f64>
   1a524:	b	1a558 <__assert_fail@plt+0x8f7c>
   1a528:	ldr	r0, [fp, #8]
   1a52c:	movw	r1, #65535	; 0xffff
   1a530:	sdiv	r0, r1, r0
   1a534:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a538:	cmp	r0, r1
   1a53c:	bge	1a558 <__assert_fail@plt+0x8f7c>
   1a540:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a544:	ldr	r1, [fp, #8]
   1a548:	mul	r0, r0, r1
   1a54c:	uxth	r0, r0
   1a550:	str	r0, [fp, #-28]	; 0xffffffe4
   1a554:	b	1b158 <__assert_fail@plt+0x9b7c>
   1a558:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a55c:	ldr	r1, [fp, #8]
   1a560:	mul	r0, r0, r1
   1a564:	uxth	r0, r0
   1a568:	str	r0, [fp, #-28]	; 0xffffffe4
   1a56c:	b	1b15c <__assert_fail@plt+0x9b80>
   1a570:	b	1a574 <__assert_fail@plt+0x8f98>
   1a574:	b	1a578 <__assert_fail@plt+0x8f9c>
   1a578:	ldr	r0, [fp, #8]
   1a57c:	cmp	r0, #0
   1a580:	bge	1a684 <__assert_fail@plt+0x90a8>
   1a584:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a588:	cmp	r0, #0
   1a58c:	bge	1a618 <__assert_fail@plt+0x903c>
   1a590:	b	1a594 <__assert_fail@plt+0x8fb8>
   1a594:	ldr	r0, [pc, #3048]	; 1b184 <__assert_fail@plt+0x9ba8>
   1a598:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a59c:	ldr	r2, [fp, #8]
   1a5a0:	sdiv	r0, r0, r2
   1a5a4:	cmp	r1, r0
   1a5a8:	blt	1a714 <__assert_fail@plt+0x9138>
   1a5ac:	b	1a728 <__assert_fail@plt+0x914c>
   1a5b0:	b	1a5b4 <__assert_fail@plt+0x8fd8>
   1a5b4:	ldr	r0, [pc, #3020]	; 1b188 <__assert_fail@plt+0x9bac>
   1a5b8:	ldr	r1, [fp, #8]
   1a5bc:	cmp	r1, r0
   1a5c0:	blt	1a5d8 <__assert_fail@plt+0x8ffc>
   1a5c4:	b	1a5e4 <__assert_fail@plt+0x9008>
   1a5c8:	ldr	r0, [fp, #8]
   1a5cc:	movw	r1, #0
   1a5d0:	cmp	r1, r0
   1a5d4:	bge	1a5e4 <__assert_fail@plt+0x9008>
   1a5d8:	movw	r0, #0
   1a5dc:	str	r0, [sp, #72]	; 0x48
   1a5e0:	b	1a5fc <__assert_fail@plt+0x9020>
   1a5e4:	ldr	r0, [pc, #2968]	; 1b184 <__assert_fail@plt+0x9ba8>
   1a5e8:	ldr	r1, [fp, #8]
   1a5ec:	movw	r2, #0
   1a5f0:	sub	r1, r2, r1
   1a5f4:	sdiv	r0, r0, r1
   1a5f8:	str	r0, [sp, #72]	; 0x48
   1a5fc:	ldr	r0, [sp, #72]	; 0x48
   1a600:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a604:	mvn	r2, #0
   1a608:	sub	r1, r2, r1
   1a60c:	cmp	r0, r1
   1a610:	ble	1a714 <__assert_fail@plt+0x9138>
   1a614:	b	1a728 <__assert_fail@plt+0x914c>
   1a618:	ldr	r0, [fp, #8]
   1a61c:	cmn	r0, #1
   1a620:	bne	1a668 <__assert_fail@plt+0x908c>
   1a624:	b	1a628 <__assert_fail@plt+0x904c>
   1a628:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a62c:	add	r0, r0, #-2147483648	; 0x80000000
   1a630:	movw	r1, #0
   1a634:	cmp	r1, r0
   1a638:	blt	1a714 <__assert_fail@plt+0x9138>
   1a63c:	b	1a728 <__assert_fail@plt+0x914c>
   1a640:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a644:	movw	r1, #0
   1a648:	cmp	r1, r0
   1a64c:	bge	1a728 <__assert_fail@plt+0x914c>
   1a650:	ldr	r0, [pc, #2860]	; 1b184 <__assert_fail@plt+0x9ba8>
   1a654:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a658:	sub	r1, r1, #1
   1a65c:	cmp	r0, r1
   1a660:	blt	1a714 <__assert_fail@plt+0x9138>
   1a664:	b	1a728 <__assert_fail@plt+0x914c>
   1a668:	ldr	r0, [pc, #2844]	; 1b18c <__assert_fail@plt+0x9bb0>
   1a66c:	ldr	r1, [fp, #8]
   1a670:	sdiv	r0, r0, r1
   1a674:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a678:	cmp	r0, r1
   1a67c:	blt	1a714 <__assert_fail@plt+0x9138>
   1a680:	b	1a728 <__assert_fail@plt+0x914c>
   1a684:	ldr	r0, [fp, #8]
   1a688:	cmp	r0, #0
   1a68c:	bne	1a694 <__assert_fail@plt+0x90b8>
   1a690:	b	1a728 <__assert_fail@plt+0x914c>
   1a694:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a698:	cmp	r0, #0
   1a69c:	bge	1a6fc <__assert_fail@plt+0x9120>
   1a6a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a6a4:	cmn	r0, #1
   1a6a8:	bne	1a6e0 <__assert_fail@plt+0x9104>
   1a6ac:	b	1a6b0 <__assert_fail@plt+0x90d4>
   1a6b0:	ldr	r0, [fp, #8]
   1a6b4:	add	r0, r0, #-2147483648	; 0x80000000
   1a6b8:	movw	r1, #0
   1a6bc:	cmp	r1, r0
   1a6c0:	blt	1a714 <__assert_fail@plt+0x9138>
   1a6c4:	b	1a728 <__assert_fail@plt+0x914c>
   1a6c8:	ldr	r0, [pc, #2740]	; 1b184 <__assert_fail@plt+0x9ba8>
   1a6cc:	ldr	r1, [fp, #8]
   1a6d0:	sub	r1, r1, #1
   1a6d4:	cmp	r0, r1
   1a6d8:	blt	1a714 <__assert_fail@plt+0x9138>
   1a6dc:	b	1a728 <__assert_fail@plt+0x914c>
   1a6e0:	ldr	r0, [pc, #2724]	; 1b18c <__assert_fail@plt+0x9bb0>
   1a6e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a6e8:	sdiv	r0, r0, r1
   1a6ec:	ldr	r1, [fp, #8]
   1a6f0:	cmp	r0, r1
   1a6f4:	blt	1a714 <__assert_fail@plt+0x9138>
   1a6f8:	b	1a728 <__assert_fail@plt+0x914c>
   1a6fc:	ldr	r0, [pc, #2688]	; 1b184 <__assert_fail@plt+0x9ba8>
   1a700:	ldr	r1, [fp, #8]
   1a704:	sdiv	r0, r0, r1
   1a708:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a70c:	cmp	r0, r1
   1a710:	bge	1a728 <__assert_fail@plt+0x914c>
   1a714:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a718:	ldr	r1, [fp, #8]
   1a71c:	mul	r0, r0, r1
   1a720:	str	r0, [fp, #-28]	; 0xffffffe4
   1a724:	b	1b158 <__assert_fail@plt+0x9b7c>
   1a728:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a72c:	ldr	r1, [fp, #8]
   1a730:	mul	r0, r0, r1
   1a734:	str	r0, [fp, #-28]	; 0xffffffe4
   1a738:	b	1b15c <__assert_fail@plt+0x9b80>
   1a73c:	ldr	r0, [fp, #8]
   1a740:	cmp	r0, #0
   1a744:	bge	1a854 <__assert_fail@plt+0x9278>
   1a748:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a74c:	cmp	r0, #0
   1a750:	bge	1a7dc <__assert_fail@plt+0x9200>
   1a754:	b	1a774 <__assert_fail@plt+0x9198>
   1a758:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a75c:	ldr	r1, [fp, #8]
   1a760:	mvn	r2, #0
   1a764:	udiv	r1, r2, r1
   1a768:	cmp	r0, r1
   1a76c:	bcc	1a8f0 <__assert_fail@plt+0x9314>
   1a770:	b	1a904 <__assert_fail@plt+0x9328>
   1a774:	b	1a778 <__assert_fail@plt+0x919c>
   1a778:	ldr	r0, [pc, #2568]	; 1b188 <__assert_fail@plt+0x9bac>
   1a77c:	ldr	r1, [fp, #8]
   1a780:	cmp	r1, r0
   1a784:	blt	1a79c <__assert_fail@plt+0x91c0>
   1a788:	b	1a7a8 <__assert_fail@plt+0x91cc>
   1a78c:	ldr	r0, [fp, #8]
   1a790:	movw	r1, #0
   1a794:	cmp	r1, r0
   1a798:	bge	1a7a8 <__assert_fail@plt+0x91cc>
   1a79c:	movw	r0, #1
   1a7a0:	str	r0, [sp, #68]	; 0x44
   1a7a4:	b	1a7c0 <__assert_fail@plt+0x91e4>
   1a7a8:	ldr	r0, [fp, #8]
   1a7ac:	movw	r1, #0
   1a7b0:	sub	r0, r1, r0
   1a7b4:	mvn	r1, #0
   1a7b8:	udiv	r0, r1, r0
   1a7bc:	str	r0, [sp, #68]	; 0x44
   1a7c0:	ldr	r0, [sp, #68]	; 0x44
   1a7c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a7c8:	mvn	r2, #0
   1a7cc:	sub	r1, r2, r1
   1a7d0:	cmp	r0, r1
   1a7d4:	bls	1a8f0 <__assert_fail@plt+0x9314>
   1a7d8:	b	1a904 <__assert_fail@plt+0x9328>
   1a7dc:	b	1a7e0 <__assert_fail@plt+0x9204>
   1a7e0:	b	1a838 <__assert_fail@plt+0x925c>
   1a7e4:	b	1a838 <__assert_fail@plt+0x925c>
   1a7e8:	ldr	r0, [fp, #8]
   1a7ec:	cmn	r0, #1
   1a7f0:	bne	1a838 <__assert_fail@plt+0x925c>
   1a7f4:	b	1a7f8 <__assert_fail@plt+0x921c>
   1a7f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a7fc:	add	r0, r0, #0
   1a800:	movw	r1, #0
   1a804:	cmp	r1, r0
   1a808:	blt	1a8f0 <__assert_fail@plt+0x9314>
   1a80c:	b	1a904 <__assert_fail@plt+0x9328>
   1a810:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a814:	movw	r1, #0
   1a818:	cmp	r1, r0
   1a81c:	bge	1a904 <__assert_fail@plt+0x9328>
   1a820:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a824:	sub	r0, r0, #1
   1a828:	mvn	r1, #0
   1a82c:	cmp	r1, r0
   1a830:	blt	1a8f0 <__assert_fail@plt+0x9314>
   1a834:	b	1a904 <__assert_fail@plt+0x9328>
   1a838:	ldr	r0, [fp, #8]
   1a83c:	movw	r1, #0
   1a840:	sdiv	r0, r1, r0
   1a844:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a848:	cmp	r0, r1
   1a84c:	blt	1a8f0 <__assert_fail@plt+0x9314>
   1a850:	b	1a904 <__assert_fail@plt+0x9328>
   1a854:	ldr	r0, [fp, #8]
   1a858:	cmp	r0, #0
   1a85c:	bne	1a864 <__assert_fail@plt+0x9288>
   1a860:	b	1a904 <__assert_fail@plt+0x9328>
   1a864:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a868:	cmp	r0, #0
   1a86c:	bge	1a8d8 <__assert_fail@plt+0x92fc>
   1a870:	b	1a874 <__assert_fail@plt+0x9298>
   1a874:	b	1a8bc <__assert_fail@plt+0x92e0>
   1a878:	b	1a8bc <__assert_fail@plt+0x92e0>
   1a87c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a880:	cmn	r0, #1
   1a884:	bne	1a8bc <__assert_fail@plt+0x92e0>
   1a888:	b	1a88c <__assert_fail@plt+0x92b0>
   1a88c:	ldr	r0, [fp, #8]
   1a890:	add	r0, r0, #0
   1a894:	movw	r1, #0
   1a898:	cmp	r1, r0
   1a89c:	blt	1a8f0 <__assert_fail@plt+0x9314>
   1a8a0:	b	1a904 <__assert_fail@plt+0x9328>
   1a8a4:	ldr	r0, [fp, #8]
   1a8a8:	sub	r0, r0, #1
   1a8ac:	mvn	r1, #0
   1a8b0:	cmp	r1, r0
   1a8b4:	blt	1a8f0 <__assert_fail@plt+0x9314>
   1a8b8:	b	1a904 <__assert_fail@plt+0x9328>
   1a8bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a8c0:	movw	r1, #0
   1a8c4:	sdiv	r0, r1, r0
   1a8c8:	ldr	r1, [fp, #8]
   1a8cc:	cmp	r0, r1
   1a8d0:	blt	1a8f0 <__assert_fail@plt+0x9314>
   1a8d4:	b	1a904 <__assert_fail@plt+0x9328>
   1a8d8:	ldr	r0, [fp, #8]
   1a8dc:	mvn	r1, #0
   1a8e0:	udiv	r0, r1, r0
   1a8e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a8e8:	cmp	r0, r1
   1a8ec:	bcs	1a904 <__assert_fail@plt+0x9328>
   1a8f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a8f4:	ldr	r1, [fp, #8]
   1a8f8:	mul	r0, r0, r1
   1a8fc:	str	r0, [fp, #-28]	; 0xffffffe4
   1a900:	b	1b158 <__assert_fail@plt+0x9b7c>
   1a904:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a908:	ldr	r1, [fp, #8]
   1a90c:	mul	r0, r0, r1
   1a910:	str	r0, [fp, #-28]	; 0xffffffe4
   1a914:	b	1b15c <__assert_fail@plt+0x9b80>
   1a918:	b	1a91c <__assert_fail@plt+0x9340>
   1a91c:	b	1a920 <__assert_fail@plt+0x9344>
   1a920:	ldr	r0, [fp, #8]
   1a924:	cmp	r0, #0
   1a928:	bge	1aa2c <__assert_fail@plt+0x9450>
   1a92c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a930:	cmp	r0, #0
   1a934:	bge	1a9c0 <__assert_fail@plt+0x93e4>
   1a938:	b	1a93c <__assert_fail@plt+0x9360>
   1a93c:	ldr	r0, [pc, #2112]	; 1b184 <__assert_fail@plt+0x9ba8>
   1a940:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a944:	ldr	r2, [fp, #8]
   1a948:	sdiv	r0, r0, r2
   1a94c:	cmp	r1, r0
   1a950:	blt	1aabc <__assert_fail@plt+0x94e0>
   1a954:	b	1aad0 <__assert_fail@plt+0x94f4>
   1a958:	b	1a95c <__assert_fail@plt+0x9380>
   1a95c:	ldr	r0, [pc, #2084]	; 1b188 <__assert_fail@plt+0x9bac>
   1a960:	ldr	r1, [fp, #8]
   1a964:	cmp	r1, r0
   1a968:	blt	1a980 <__assert_fail@plt+0x93a4>
   1a96c:	b	1a98c <__assert_fail@plt+0x93b0>
   1a970:	ldr	r0, [fp, #8]
   1a974:	movw	r1, #0
   1a978:	cmp	r1, r0
   1a97c:	bge	1a98c <__assert_fail@plt+0x93b0>
   1a980:	movw	r0, #0
   1a984:	str	r0, [sp, #64]	; 0x40
   1a988:	b	1a9a4 <__assert_fail@plt+0x93c8>
   1a98c:	ldr	r0, [pc, #2032]	; 1b184 <__assert_fail@plt+0x9ba8>
   1a990:	ldr	r1, [fp, #8]
   1a994:	movw	r2, #0
   1a998:	sub	r1, r2, r1
   1a99c:	sdiv	r0, r0, r1
   1a9a0:	str	r0, [sp, #64]	; 0x40
   1a9a4:	ldr	r0, [sp, #64]	; 0x40
   1a9a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a9ac:	mvn	r2, #0
   1a9b0:	sub	r1, r2, r1
   1a9b4:	cmp	r0, r1
   1a9b8:	ble	1aabc <__assert_fail@plt+0x94e0>
   1a9bc:	b	1aad0 <__assert_fail@plt+0x94f4>
   1a9c0:	ldr	r0, [fp, #8]
   1a9c4:	cmn	r0, #1
   1a9c8:	bne	1aa10 <__assert_fail@plt+0x9434>
   1a9cc:	b	1a9d0 <__assert_fail@plt+0x93f4>
   1a9d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a9d4:	add	r0, r0, #-2147483648	; 0x80000000
   1a9d8:	movw	r1, #0
   1a9dc:	cmp	r1, r0
   1a9e0:	blt	1aabc <__assert_fail@plt+0x94e0>
   1a9e4:	b	1aad0 <__assert_fail@plt+0x94f4>
   1a9e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a9ec:	movw	r1, #0
   1a9f0:	cmp	r1, r0
   1a9f4:	bge	1aad0 <__assert_fail@plt+0x94f4>
   1a9f8:	ldr	r0, [pc, #1924]	; 1b184 <__assert_fail@plt+0x9ba8>
   1a9fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1aa00:	sub	r1, r1, #1
   1aa04:	cmp	r0, r1
   1aa08:	blt	1aabc <__assert_fail@plt+0x94e0>
   1aa0c:	b	1aad0 <__assert_fail@plt+0x94f4>
   1aa10:	ldr	r0, [pc, #1908]	; 1b18c <__assert_fail@plt+0x9bb0>
   1aa14:	ldr	r1, [fp, #8]
   1aa18:	sdiv	r0, r0, r1
   1aa1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1aa20:	cmp	r0, r1
   1aa24:	blt	1aabc <__assert_fail@plt+0x94e0>
   1aa28:	b	1aad0 <__assert_fail@plt+0x94f4>
   1aa2c:	ldr	r0, [fp, #8]
   1aa30:	cmp	r0, #0
   1aa34:	bne	1aa3c <__assert_fail@plt+0x9460>
   1aa38:	b	1aad0 <__assert_fail@plt+0x94f4>
   1aa3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aa40:	cmp	r0, #0
   1aa44:	bge	1aaa4 <__assert_fail@plt+0x94c8>
   1aa48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aa4c:	cmn	r0, #1
   1aa50:	bne	1aa88 <__assert_fail@plt+0x94ac>
   1aa54:	b	1aa58 <__assert_fail@plt+0x947c>
   1aa58:	ldr	r0, [fp, #8]
   1aa5c:	add	r0, r0, #-2147483648	; 0x80000000
   1aa60:	movw	r1, #0
   1aa64:	cmp	r1, r0
   1aa68:	blt	1aabc <__assert_fail@plt+0x94e0>
   1aa6c:	b	1aad0 <__assert_fail@plt+0x94f4>
   1aa70:	ldr	r0, [pc, #1804]	; 1b184 <__assert_fail@plt+0x9ba8>
   1aa74:	ldr	r1, [fp, #8]
   1aa78:	sub	r1, r1, #1
   1aa7c:	cmp	r0, r1
   1aa80:	blt	1aabc <__assert_fail@plt+0x94e0>
   1aa84:	b	1aad0 <__assert_fail@plt+0x94f4>
   1aa88:	ldr	r0, [pc, #1788]	; 1b18c <__assert_fail@plt+0x9bb0>
   1aa8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1aa90:	sdiv	r0, r0, r1
   1aa94:	ldr	r1, [fp, #8]
   1aa98:	cmp	r0, r1
   1aa9c:	blt	1aabc <__assert_fail@plt+0x94e0>
   1aaa0:	b	1aad0 <__assert_fail@plt+0x94f4>
   1aaa4:	ldr	r0, [pc, #1752]	; 1b184 <__assert_fail@plt+0x9ba8>
   1aaa8:	ldr	r1, [fp, #8]
   1aaac:	sdiv	r0, r0, r1
   1aab0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1aab4:	cmp	r0, r1
   1aab8:	bge	1aad0 <__assert_fail@plt+0x94f4>
   1aabc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aac0:	ldr	r1, [fp, #8]
   1aac4:	mul	r0, r0, r1
   1aac8:	str	r0, [fp, #-28]	; 0xffffffe4
   1aacc:	b	1b158 <__assert_fail@plt+0x9b7c>
   1aad0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aad4:	ldr	r1, [fp, #8]
   1aad8:	mul	r0, r0, r1
   1aadc:	str	r0, [fp, #-28]	; 0xffffffe4
   1aae0:	b	1b15c <__assert_fail@plt+0x9b80>
   1aae4:	ldr	r0, [fp, #8]
   1aae8:	cmp	r0, #0
   1aaec:	bge	1abfc <__assert_fail@plt+0x9620>
   1aaf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aaf4:	cmp	r0, #0
   1aaf8:	bge	1ab84 <__assert_fail@plt+0x95a8>
   1aafc:	b	1ab1c <__assert_fail@plt+0x9540>
   1ab00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ab04:	ldr	r1, [fp, #8]
   1ab08:	mvn	r2, #0
   1ab0c:	udiv	r1, r2, r1
   1ab10:	cmp	r0, r1
   1ab14:	bcc	1ac98 <__assert_fail@plt+0x96bc>
   1ab18:	b	1acac <__assert_fail@plt+0x96d0>
   1ab1c:	b	1ab20 <__assert_fail@plt+0x9544>
   1ab20:	ldr	r0, [pc, #1632]	; 1b188 <__assert_fail@plt+0x9bac>
   1ab24:	ldr	r1, [fp, #8]
   1ab28:	cmp	r1, r0
   1ab2c:	blt	1ab44 <__assert_fail@plt+0x9568>
   1ab30:	b	1ab50 <__assert_fail@plt+0x9574>
   1ab34:	ldr	r0, [fp, #8]
   1ab38:	movw	r1, #0
   1ab3c:	cmp	r1, r0
   1ab40:	bge	1ab50 <__assert_fail@plt+0x9574>
   1ab44:	movw	r0, #1
   1ab48:	str	r0, [sp, #60]	; 0x3c
   1ab4c:	b	1ab68 <__assert_fail@plt+0x958c>
   1ab50:	ldr	r0, [fp, #8]
   1ab54:	movw	r1, #0
   1ab58:	sub	r0, r1, r0
   1ab5c:	mvn	r1, #0
   1ab60:	udiv	r0, r1, r0
   1ab64:	str	r0, [sp, #60]	; 0x3c
   1ab68:	ldr	r0, [sp, #60]	; 0x3c
   1ab6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ab70:	mvn	r2, #0
   1ab74:	sub	r1, r2, r1
   1ab78:	cmp	r0, r1
   1ab7c:	bls	1ac98 <__assert_fail@plt+0x96bc>
   1ab80:	b	1acac <__assert_fail@plt+0x96d0>
   1ab84:	b	1ab88 <__assert_fail@plt+0x95ac>
   1ab88:	b	1abe0 <__assert_fail@plt+0x9604>
   1ab8c:	b	1abe0 <__assert_fail@plt+0x9604>
   1ab90:	ldr	r0, [fp, #8]
   1ab94:	cmn	r0, #1
   1ab98:	bne	1abe0 <__assert_fail@plt+0x9604>
   1ab9c:	b	1aba0 <__assert_fail@plt+0x95c4>
   1aba0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aba4:	add	r0, r0, #0
   1aba8:	movw	r1, #0
   1abac:	cmp	r1, r0
   1abb0:	blt	1ac98 <__assert_fail@plt+0x96bc>
   1abb4:	b	1acac <__assert_fail@plt+0x96d0>
   1abb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1abbc:	movw	r1, #0
   1abc0:	cmp	r1, r0
   1abc4:	bge	1acac <__assert_fail@plt+0x96d0>
   1abc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1abcc:	sub	r0, r0, #1
   1abd0:	mvn	r1, #0
   1abd4:	cmp	r1, r0
   1abd8:	blt	1ac98 <__assert_fail@plt+0x96bc>
   1abdc:	b	1acac <__assert_fail@plt+0x96d0>
   1abe0:	ldr	r0, [fp, #8]
   1abe4:	movw	r1, #0
   1abe8:	sdiv	r0, r1, r0
   1abec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1abf0:	cmp	r0, r1
   1abf4:	blt	1ac98 <__assert_fail@plt+0x96bc>
   1abf8:	b	1acac <__assert_fail@plt+0x96d0>
   1abfc:	ldr	r0, [fp, #8]
   1ac00:	cmp	r0, #0
   1ac04:	bne	1ac0c <__assert_fail@plt+0x9630>
   1ac08:	b	1acac <__assert_fail@plt+0x96d0>
   1ac0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ac10:	cmp	r0, #0
   1ac14:	bge	1ac80 <__assert_fail@plt+0x96a4>
   1ac18:	b	1ac1c <__assert_fail@plt+0x9640>
   1ac1c:	b	1ac64 <__assert_fail@plt+0x9688>
   1ac20:	b	1ac64 <__assert_fail@plt+0x9688>
   1ac24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ac28:	cmn	r0, #1
   1ac2c:	bne	1ac64 <__assert_fail@plt+0x9688>
   1ac30:	b	1ac34 <__assert_fail@plt+0x9658>
   1ac34:	ldr	r0, [fp, #8]
   1ac38:	add	r0, r0, #0
   1ac3c:	movw	r1, #0
   1ac40:	cmp	r1, r0
   1ac44:	blt	1ac98 <__assert_fail@plt+0x96bc>
   1ac48:	b	1acac <__assert_fail@plt+0x96d0>
   1ac4c:	ldr	r0, [fp, #8]
   1ac50:	sub	r0, r0, #1
   1ac54:	mvn	r1, #0
   1ac58:	cmp	r1, r0
   1ac5c:	blt	1ac98 <__assert_fail@plt+0x96bc>
   1ac60:	b	1acac <__assert_fail@plt+0x96d0>
   1ac64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ac68:	movw	r1, #0
   1ac6c:	sdiv	r0, r1, r0
   1ac70:	ldr	r1, [fp, #8]
   1ac74:	cmp	r0, r1
   1ac78:	blt	1ac98 <__assert_fail@plt+0x96bc>
   1ac7c:	b	1acac <__assert_fail@plt+0x96d0>
   1ac80:	ldr	r0, [fp, #8]
   1ac84:	mvn	r1, #0
   1ac88:	udiv	r0, r1, r0
   1ac8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ac90:	cmp	r0, r1
   1ac94:	bcs	1acac <__assert_fail@plt+0x96d0>
   1ac98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ac9c:	ldr	r1, [fp, #8]
   1aca0:	mul	r0, r0, r1
   1aca4:	str	r0, [fp, #-28]	; 0xffffffe4
   1aca8:	b	1b158 <__assert_fail@plt+0x9b7c>
   1acac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1acb0:	ldr	r1, [fp, #8]
   1acb4:	mul	r0, r0, r1
   1acb8:	str	r0, [fp, #-28]	; 0xffffffe4
   1acbc:	b	1b15c <__assert_fail@plt+0x9b80>
   1acc0:	b	1acc4 <__assert_fail@plt+0x96e8>
   1acc4:	ldr	r0, [fp, #8]
   1acc8:	cmp	r0, #0
   1accc:	bge	1ae34 <__assert_fail@plt+0x9858>
   1acd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1acd4:	cmp	r0, #0
   1acd8:	bge	1adb0 <__assert_fail@plt+0x97d4>
   1acdc:	b	1ace0 <__assert_fail@plt+0x9704>
   1ace0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ace4:	ldr	r1, [fp, #8]
   1ace8:	asr	r3, r1, #31
   1acec:	mvn	r2, #0
   1acf0:	mvn	ip, #-2147483648	; 0x80000000
   1acf4:	str	r0, [sp, #56]	; 0x38
   1acf8:	mov	r0, r2
   1acfc:	str	r1, [sp, #52]	; 0x34
   1ad00:	mov	r1, ip
   1ad04:	ldr	r2, [sp, #52]	; 0x34
   1ad08:	bl	1e054 <_obstack_memory_used@@Base+0x1f60>
   1ad0c:	ldr	r2, [sp, #56]	; 0x38
   1ad10:	subs	r0, r2, r0
   1ad14:	rscs	r1, r1, r2, asr #31
   1ad18:	blt	1aefc <__assert_fail@plt+0x9920>
   1ad1c:	b	1af10 <__assert_fail@plt+0x9934>
   1ad20:	b	1ad24 <__assert_fail@plt+0x9748>
   1ad24:	ldr	r0, [pc, #1116]	; 1b188 <__assert_fail@plt+0x9bac>
   1ad28:	ldr	r1, [fp, #8]
   1ad2c:	cmp	r1, r0
   1ad30:	blt	1ad48 <__assert_fail@plt+0x976c>
   1ad34:	b	1ad5c <__assert_fail@plt+0x9780>
   1ad38:	ldr	r0, [fp, #8]
   1ad3c:	movw	r1, #0
   1ad40:	cmp	r1, r0
   1ad44:	bge	1ad5c <__assert_fail@plt+0x9780>
   1ad48:	mov	r0, #0
   1ad4c:	mvn	r1, #0
   1ad50:	str	r1, [sp, #48]	; 0x30
   1ad54:	str	r0, [sp, #44]	; 0x2c
   1ad58:	b	1ad90 <__assert_fail@plt+0x97b4>
   1ad5c:	ldr	r0, [fp, #8]
   1ad60:	rsb	r0, r0, #0
   1ad64:	asr	r3, r0, #31
   1ad68:	mvn	r1, #0
   1ad6c:	mvn	r2, #-2147483648	; 0x80000000
   1ad70:	str	r0, [sp, #40]	; 0x28
   1ad74:	mov	r0, r1
   1ad78:	mov	r1, r2
   1ad7c:	ldr	r2, [sp, #40]	; 0x28
   1ad80:	bl	1e054 <_obstack_memory_used@@Base+0x1f60>
   1ad84:	str	r0, [sp, #48]	; 0x30
   1ad88:	str	r1, [sp, #44]	; 0x2c
   1ad8c:	b	1ad90 <__assert_fail@plt+0x97b4>
   1ad90:	ldr	r0, [sp, #44]	; 0x2c
   1ad94:	ldr	r1, [sp, #48]	; 0x30
   1ad98:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ad9c:	mvn	r2, r2
   1ada0:	subs	r1, r2, r1
   1ada4:	rscs	r0, r0, r2, asr #31
   1ada8:	bge	1aefc <__assert_fail@plt+0x9920>
   1adac:	b	1af10 <__assert_fail@plt+0x9934>
   1adb0:	ldr	r0, [fp, #8]
   1adb4:	cmn	r0, #1
   1adb8:	bne	1adfc <__assert_fail@plt+0x9820>
   1adbc:	b	1adc0 <__assert_fail@plt+0x97e4>
   1adc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1adc4:	mov	r1, #-2147483648	; 0x80000000
   1adc8:	add	r1, r1, r0, asr #31
   1adcc:	rsbs	r0, r0, #0
   1add0:	rscs	r1, r1, #0
   1add4:	blt	1aefc <__assert_fail@plt+0x9920>
   1add8:	b	1af10 <__assert_fail@plt+0x9934>
   1addc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ade0:	movw	r1, #0
   1ade4:	cmp	r1, r0
   1ade8:	bge	1af10 <__assert_fail@plt+0x9934>
   1adec:	mov	r0, #0
   1adf0:	cmp	r0, #0
   1adf4:	bne	1aefc <__assert_fail@plt+0x9920>
   1adf8:	b	1af10 <__assert_fail@plt+0x9934>
   1adfc:	ldr	r0, [fp, #8]
   1ae00:	asr	r3, r0, #31
   1ae04:	mov	r1, #0
   1ae08:	mov	r2, #-2147483648	; 0x80000000
   1ae0c:	str	r0, [sp, #36]	; 0x24
   1ae10:	mov	r0, r1
   1ae14:	mov	r1, r2
   1ae18:	ldr	r2, [sp, #36]	; 0x24
   1ae1c:	bl	1e054 <_obstack_memory_used@@Base+0x1f60>
   1ae20:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ae24:	subs	r0, r0, r2
   1ae28:	sbcs	r1, r1, r2, asr #31
   1ae2c:	blt	1aefc <__assert_fail@plt+0x9920>
   1ae30:	b	1af10 <__assert_fail@plt+0x9934>
   1ae34:	ldr	r0, [fp, #8]
   1ae38:	cmp	r0, #0
   1ae3c:	bne	1ae44 <__assert_fail@plt+0x9868>
   1ae40:	b	1af10 <__assert_fail@plt+0x9934>
   1ae44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ae48:	cmp	r0, #0
   1ae4c:	bge	1aec4 <__assert_fail@plt+0x98e8>
   1ae50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ae54:	cmn	r0, #1
   1ae58:	bne	1ae8c <__assert_fail@plt+0x98b0>
   1ae5c:	b	1ae60 <__assert_fail@plt+0x9884>
   1ae60:	ldr	r0, [fp, #8]
   1ae64:	mov	r1, #-2147483648	; 0x80000000
   1ae68:	add	r1, r1, r0, asr #31
   1ae6c:	rsbs	r0, r0, #0
   1ae70:	rscs	r1, r1, #0
   1ae74:	blt	1aefc <__assert_fail@plt+0x9920>
   1ae78:	b	1af10 <__assert_fail@plt+0x9934>
   1ae7c:	mov	r0, #0
   1ae80:	cmp	r0, #0
   1ae84:	bne	1aefc <__assert_fail@plt+0x9920>
   1ae88:	b	1af10 <__assert_fail@plt+0x9934>
   1ae8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ae90:	asr	r3, r0, #31
   1ae94:	mov	r1, #0
   1ae98:	mov	r2, #-2147483648	; 0x80000000
   1ae9c:	str	r0, [sp, #32]
   1aea0:	mov	r0, r1
   1aea4:	mov	r1, r2
   1aea8:	ldr	r2, [sp, #32]
   1aeac:	bl	1e054 <_obstack_memory_used@@Base+0x1f60>
   1aeb0:	ldr	r2, [fp, #8]
   1aeb4:	subs	r0, r0, r2
   1aeb8:	sbcs	r1, r1, r2, asr #31
   1aebc:	blt	1aefc <__assert_fail@plt+0x9920>
   1aec0:	b	1af10 <__assert_fail@plt+0x9934>
   1aec4:	ldr	r0, [fp, #8]
   1aec8:	asr	r3, r0, #31
   1aecc:	mvn	r1, #0
   1aed0:	mvn	r2, #-2147483648	; 0x80000000
   1aed4:	str	r0, [sp, #28]
   1aed8:	mov	r0, r1
   1aedc:	mov	r1, r2
   1aee0:	ldr	r2, [sp, #28]
   1aee4:	bl	1e054 <_obstack_memory_used@@Base+0x1f60>
   1aee8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1aeec:	subs	r0, r0, r2
   1aef0:	sbcs	r1, r1, r2, asr #31
   1aef4:	bge	1af10 <__assert_fail@plt+0x9934>
   1aef8:	b	1aefc <__assert_fail@plt+0x9920>
   1aefc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1af00:	ldr	r1, [fp, #8]
   1af04:	mul	r0, r0, r1
   1af08:	str	r0, [fp, #-28]	; 0xffffffe4
   1af0c:	b	1b158 <__assert_fail@plt+0x9b7c>
   1af10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1af14:	ldr	r1, [fp, #8]
   1af18:	mul	r0, r0, r1
   1af1c:	str	r0, [fp, #-28]	; 0xffffffe4
   1af20:	b	1b15c <__assert_fail@plt+0x9b80>
   1af24:	ldr	r0, [fp, #8]
   1af28:	cmp	r0, #0
   1af2c:	bge	1b07c <__assert_fail@plt+0x9aa0>
   1af30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1af34:	cmp	r0, #0
   1af38:	bge	1b004 <__assert_fail@plt+0x9a28>
   1af3c:	b	1af7c <__assert_fail@plt+0x99a0>
   1af40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1af44:	ldr	r1, [fp, #8]
   1af48:	asr	r3, r1, #31
   1af4c:	mvn	r2, #0
   1af50:	str	r0, [sp, #24]
   1af54:	mov	r0, r2
   1af58:	str	r1, [sp, #20]
   1af5c:	mov	r1, r2
   1af60:	ldr	r2, [sp, #20]
   1af64:	bl	1e128 <_obstack_memory_used@@Base+0x2034>
   1af68:	ldr	r2, [sp, #24]
   1af6c:	subs	r0, r2, r0
   1af70:	rscs	r1, r1, r2, asr #31
   1af74:	bcc	1b130 <__assert_fail@plt+0x9b54>
   1af78:	b	1b144 <__assert_fail@plt+0x9b68>
   1af7c:	b	1af80 <__assert_fail@plt+0x99a4>
   1af80:	ldr	r0, [pc, #512]	; 1b188 <__assert_fail@plt+0x9bac>
   1af84:	ldr	r1, [fp, #8]
   1af88:	cmp	r1, r0
   1af8c:	blt	1afa4 <__assert_fail@plt+0x99c8>
   1af90:	b	1afb8 <__assert_fail@plt+0x99dc>
   1af94:	ldr	r0, [fp, #8]
   1af98:	movw	r1, #0
   1af9c:	cmp	r1, r0
   1afa0:	bge	1afb8 <__assert_fail@plt+0x99dc>
   1afa4:	mov	r0, #1
   1afa8:	mvn	r1, #0
   1afac:	str	r1, [sp, #16]
   1afb0:	str	r0, [sp, #12]
   1afb4:	b	1afe4 <__assert_fail@plt+0x9a08>
   1afb8:	ldr	r0, [fp, #8]
   1afbc:	rsb	r0, r0, #0
   1afc0:	asr	r3, r0, #31
   1afc4:	mvn	r1, #0
   1afc8:	str	r0, [sp, #8]
   1afcc:	mov	r0, r1
   1afd0:	ldr	r2, [sp, #8]
   1afd4:	bl	1e128 <_obstack_memory_used@@Base+0x2034>
   1afd8:	str	r0, [sp, #16]
   1afdc:	str	r1, [sp, #12]
   1afe0:	b	1afe4 <__assert_fail@plt+0x9a08>
   1afe4:	ldr	r0, [sp, #12]
   1afe8:	ldr	r1, [sp, #16]
   1afec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1aff0:	mvn	r2, r2
   1aff4:	subs	r1, r2, r1
   1aff8:	rscs	r0, r0, r2, asr #31
   1affc:	bcs	1b130 <__assert_fail@plt+0x9b54>
   1b000:	b	1b144 <__assert_fail@plt+0x9b68>
   1b004:	b	1b008 <__assert_fail@plt+0x9a2c>
   1b008:	b	1b060 <__assert_fail@plt+0x9a84>
   1b00c:	b	1b060 <__assert_fail@plt+0x9a84>
   1b010:	ldr	r0, [fp, #8]
   1b014:	cmn	r0, #1
   1b018:	bne	1b060 <__assert_fail@plt+0x9a84>
   1b01c:	b	1b020 <__assert_fail@plt+0x9a44>
   1b020:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b024:	add	r0, r0, #0
   1b028:	movw	r1, #0
   1b02c:	cmp	r1, r0
   1b030:	blt	1b130 <__assert_fail@plt+0x9b54>
   1b034:	b	1b144 <__assert_fail@plt+0x9b68>
   1b038:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b03c:	movw	r1, #0
   1b040:	cmp	r1, r0
   1b044:	bge	1b144 <__assert_fail@plt+0x9b68>
   1b048:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b04c:	sub	r0, r0, #1
   1b050:	mvn	r1, #0
   1b054:	cmp	r1, r0
   1b058:	blt	1b130 <__assert_fail@plt+0x9b54>
   1b05c:	b	1b144 <__assert_fail@plt+0x9b68>
   1b060:	ldr	r0, [fp, #8]
   1b064:	movw	r1, #0
   1b068:	sdiv	r0, r1, r0
   1b06c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b070:	cmp	r0, r1
   1b074:	blt	1b130 <__assert_fail@plt+0x9b54>
   1b078:	b	1b144 <__assert_fail@plt+0x9b68>
   1b07c:	ldr	r0, [fp, #8]
   1b080:	cmp	r0, #0
   1b084:	bne	1b08c <__assert_fail@plt+0x9ab0>
   1b088:	b	1b144 <__assert_fail@plt+0x9b68>
   1b08c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b090:	cmp	r0, #0
   1b094:	bge	1b100 <__assert_fail@plt+0x9b24>
   1b098:	b	1b09c <__assert_fail@plt+0x9ac0>
   1b09c:	b	1b0e4 <__assert_fail@plt+0x9b08>
   1b0a0:	b	1b0e4 <__assert_fail@plt+0x9b08>
   1b0a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b0a8:	cmn	r0, #1
   1b0ac:	bne	1b0e4 <__assert_fail@plt+0x9b08>
   1b0b0:	b	1b0b4 <__assert_fail@plt+0x9ad8>
   1b0b4:	ldr	r0, [fp, #8]
   1b0b8:	add	r0, r0, #0
   1b0bc:	movw	r1, #0
   1b0c0:	cmp	r1, r0
   1b0c4:	blt	1b130 <__assert_fail@plt+0x9b54>
   1b0c8:	b	1b144 <__assert_fail@plt+0x9b68>
   1b0cc:	ldr	r0, [fp, #8]
   1b0d0:	sub	r0, r0, #1
   1b0d4:	mvn	r1, #0
   1b0d8:	cmp	r1, r0
   1b0dc:	blt	1b130 <__assert_fail@plt+0x9b54>
   1b0e0:	b	1b144 <__assert_fail@plt+0x9b68>
   1b0e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b0e8:	movw	r1, #0
   1b0ec:	sdiv	r0, r1, r0
   1b0f0:	ldr	r1, [fp, #8]
   1b0f4:	cmp	r0, r1
   1b0f8:	blt	1b130 <__assert_fail@plt+0x9b54>
   1b0fc:	b	1b144 <__assert_fail@plt+0x9b68>
   1b100:	ldr	r0, [fp, #8]
   1b104:	asr	r3, r0, #31
   1b108:	mvn	r1, #0
   1b10c:	str	r0, [sp, #4]
   1b110:	mov	r0, r1
   1b114:	ldr	r2, [sp, #4]
   1b118:	bl	1e128 <_obstack_memory_used@@Base+0x2034>
   1b11c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b120:	subs	r0, r0, r2
   1b124:	sbcs	r1, r1, r2, asr #31
   1b128:	bcs	1b144 <__assert_fail@plt+0x9b68>
   1b12c:	b	1b130 <__assert_fail@plt+0x9b54>
   1b130:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b134:	ldr	r1, [fp, #8]
   1b138:	mul	r0, r0, r1
   1b13c:	str	r0, [fp, #-28]	; 0xffffffe4
   1b140:	b	1b158 <__assert_fail@plt+0x9b7c>
   1b144:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b148:	ldr	r1, [fp, #8]
   1b14c:	mul	r0, r0, r1
   1b150:	str	r0, [fp, #-28]	; 0xffffffe4
   1b154:	b	1b15c <__assert_fail@plt+0x9b80>
   1b158:	bl	1b334 <__assert_fail@plt+0x9d58>
   1b15c:	ldr	r0, [fp, #-4]
   1b160:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b164:	bl	18694 <__assert_fail@plt+0x70b8>
   1b168:	str	r0, [fp, #-4]
   1b16c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b170:	ldr	r1, [fp, #-8]
   1b174:	str	r0, [r1]
   1b178:	ldr	r0, [fp, #-4]
   1b17c:	mov	sp, fp
   1b180:	pop	{fp, pc}
   1b184:	svcvc	0x00ffffff
   1b188:	andhi	r0, r0, r1
   1b18c:	andhi	r0, r0, r0
   1b190:			; <UNDEFINED> instruction: 0xffff8000
   1b194:	push	{fp, lr}
   1b198:	mov	fp, sp
   1b19c:	sub	sp, sp, #8
   1b1a0:	str	r0, [sp, #4]
   1b1a4:	ldr	r0, [sp, #4]
   1b1a8:	movw	r1, #1
   1b1ac:	bl	1b1b8 <__assert_fail@plt+0x9bdc>
   1b1b0:	mov	sp, fp
   1b1b4:	pop	{fp, pc}
   1b1b8:	push	{fp, lr}
   1b1bc:	mov	fp, sp
   1b1c0:	sub	sp, sp, #8
   1b1c4:	str	r0, [sp, #4]
   1b1c8:	str	r1, [sp]
   1b1cc:	ldr	r0, [sp, #4]
   1b1d0:	ldr	r1, [sp]
   1b1d4:	bl	1b3bc <__assert_fail@plt+0x9de0>
   1b1d8:	bl	18620 <__assert_fail@plt+0x7044>
   1b1dc:	mov	sp, fp
   1b1e0:	pop	{fp, pc}
   1b1e4:	push	{fp, lr}
   1b1e8:	mov	fp, sp
   1b1ec:	sub	sp, sp, #8
   1b1f0:	str	r0, [sp, #4]
   1b1f4:	ldr	r0, [sp, #4]
   1b1f8:	movw	r1, #1
   1b1fc:	bl	1b208 <__assert_fail@plt+0x9c2c>
   1b200:	mov	sp, fp
   1b204:	pop	{fp, pc}
   1b208:	push	{fp, lr}
   1b20c:	mov	fp, sp
   1b210:	sub	sp, sp, #8
   1b214:	str	r0, [sp, #4]
   1b218:	str	r1, [sp]
   1b21c:	ldr	r0, [sp, #4]
   1b220:	ldr	r1, [sp]
   1b224:	bl	1b894 <__assert_fail@plt+0xa2b8>
   1b228:	bl	18620 <__assert_fail@plt+0x7044>
   1b22c:	mov	sp, fp
   1b230:	pop	{fp, pc}
   1b234:	push	{fp, lr}
   1b238:	mov	fp, sp
   1b23c:	sub	sp, sp, #16
   1b240:	str	r0, [fp, #-4]
   1b244:	str	r1, [sp, #8]
   1b248:	ldr	r0, [sp, #8]
   1b24c:	bl	185fc <__assert_fail@plt+0x7020>
   1b250:	ldr	r1, [fp, #-4]
   1b254:	ldr	r2, [sp, #8]
   1b258:	str	r0, [sp, #4]
   1b25c:	bl	11354 <memcpy@plt>
   1b260:	ldr	r0, [sp, #4]
   1b264:	mov	sp, fp
   1b268:	pop	{fp, pc}
   1b26c:	push	{fp, lr}
   1b270:	mov	fp, sp
   1b274:	sub	sp, sp, #16
   1b278:	str	r0, [fp, #-4]
   1b27c:	str	r1, [sp, #8]
   1b280:	ldr	r0, [sp, #8]
   1b284:	bl	18650 <__assert_fail@plt+0x7074>
   1b288:	ldr	r1, [fp, #-4]
   1b28c:	ldr	r2, [sp, #8]
   1b290:	str	r0, [sp, #4]
   1b294:	bl	11354 <memcpy@plt>
   1b298:	ldr	r0, [sp, #4]
   1b29c:	mov	sp, fp
   1b2a0:	pop	{fp, pc}
   1b2a4:	push	{fp, lr}
   1b2a8:	mov	fp, sp
   1b2ac:	sub	sp, sp, #16
   1b2b0:	str	r0, [fp, #-4]
   1b2b4:	str	r1, [sp, #8]
   1b2b8:	ldr	r0, [sp, #8]
   1b2bc:	add	r0, r0, #1
   1b2c0:	bl	18650 <__assert_fail@plt+0x7074>
   1b2c4:	str	r0, [sp, #4]
   1b2c8:	ldr	r0, [sp, #4]
   1b2cc:	ldr	r1, [sp, #8]
   1b2d0:	add	r0, r0, r1
   1b2d4:	movw	r1, #0
   1b2d8:	strb	r1, [r0]
   1b2dc:	ldr	r0, [sp, #4]
   1b2e0:	ldr	r1, [fp, #-4]
   1b2e4:	ldr	r2, [sp, #8]
   1b2e8:	str	r0, [sp]
   1b2ec:	bl	11354 <memcpy@plt>
   1b2f0:	ldr	r0, [sp]
   1b2f4:	mov	sp, fp
   1b2f8:	pop	{fp, pc}
   1b2fc:	push	{fp, lr}
   1b300:	mov	fp, sp
   1b304:	sub	sp, sp, #8
   1b308:	str	r0, [sp, #4]
   1b30c:	ldr	r0, [sp, #4]
   1b310:	ldr	r1, [sp, #4]
   1b314:	str	r0, [sp]
   1b318:	mov	r0, r1
   1b31c:	bl	114b0 <strlen@plt>
   1b320:	add	r1, r0, #1
   1b324:	ldr	r0, [sp]
   1b328:	bl	1b234 <__assert_fail@plt+0x9c58>
   1b32c:	mov	sp, fp
   1b330:	pop	{fp, pc}
   1b334:	push	{fp, lr}
   1b338:	mov	fp, sp
   1b33c:	sub	sp, sp, #8
   1b340:	movw	r0, #304	; 0x130
   1b344:	movt	r0, #3
   1b348:	ldr	r0, [r0]
   1b34c:	movw	r1, #61376	; 0xefc0
   1b350:	movt	r1, #1
   1b354:	str	r0, [sp, #4]
   1b358:	mov	r0, r1
   1b35c:	bl	114a4 <gettext@plt>
   1b360:	ldr	r1, [sp, #4]
   1b364:	str	r0, [sp]
   1b368:	mov	r0, r1
   1b36c:	movw	r1, #0
   1b370:	movw	r2, #60292	; 0xeb84
   1b374:	movt	r2, #1
   1b378:	ldr	r3, [sp]
   1b37c:	bl	11408 <error@plt>
   1b380:	bl	115b8 <abort@plt>
   1b384:	bx	lr
   1b388:	push	{fp, lr}
   1b38c:	mov	fp, sp
   1b390:	sub	sp, sp, #8
   1b394:	str	r0, [sp, #4]
   1b398:	str	r1, [sp]
   1b39c:	ldr	r0, [sp, #4]
   1b3a0:	ldr	r1, [sp]
   1b3a4:	bl	1b584 <__assert_fail@plt+0x9fa8>
   1b3a8:	cmp	r0, #0
   1b3ac:	bge	1b3b4 <__assert_fail@plt+0x9dd8>
   1b3b0:	bl	1b384 <__assert_fail@plt+0x9da8>
   1b3b4:	mov	sp, fp
   1b3b8:	pop	{fp, pc}
   1b3bc:	push	{fp, lr}
   1b3c0:	mov	fp, sp
   1b3c4:	sub	sp, sp, #16
   1b3c8:	str	r0, [sp, #8]
   1b3cc:	str	r1, [sp, #4]
   1b3d0:	ldr	r0, [sp, #8]
   1b3d4:	cmp	r0, #0
   1b3d8:	beq	1b3e8 <__assert_fail@plt+0x9e0c>
   1b3dc:	ldr	r0, [sp, #4]
   1b3e0:	cmp	r0, #0
   1b3e4:	bne	1b3f4 <__assert_fail@plt+0x9e18>
   1b3e8:	movw	r0, #1
   1b3ec:	str	r0, [sp, #4]
   1b3f0:	str	r0, [sp, #8]
   1b3f4:	ldr	r0, [sp, #4]
   1b3f8:	cmp	r0, #0
   1b3fc:	beq	1b430 <__assert_fail@plt+0x9e54>
   1b400:	ldr	r0, [pc, #76]	; 1b454 <__assert_fail@plt+0x9e78>
   1b404:	ldr	r1, [sp, #4]
   1b408:	udiv	r0, r0, r1
   1b40c:	ldr	r1, [sp, #8]
   1b410:	cmp	r0, r1
   1b414:	bcs	1b430 <__assert_fail@plt+0x9e54>
   1b418:	bl	114e0 <__errno_location@plt>
   1b41c:	movw	r1, #12
   1b420:	str	r1, [r0]
   1b424:	movw	r0, #0
   1b428:	str	r0, [fp, #-4]
   1b42c:	b	1b448 <__assert_fail@plt+0x9e6c>
   1b430:	ldr	r0, [sp, #8]
   1b434:	ldr	r1, [sp, #4]
   1b438:	bl	112b8 <calloc@plt>
   1b43c:	str	r0, [sp]
   1b440:	ldr	r0, [sp]
   1b444:	str	r0, [fp, #-4]
   1b448:	ldr	r0, [fp, #-4]
   1b44c:	mov	sp, fp
   1b450:	pop	{fp, pc}
   1b454:	svcvc	0x00ffffff
   1b458:	push	{fp, lr}
   1b45c:	mov	fp, sp
   1b460:	sub	sp, sp, #16
   1b464:	str	r0, [sp, #8]
   1b468:	ldr	r0, [sp, #8]
   1b46c:	cmp	r0, #0
   1b470:	bne	1b47c <__assert_fail@plt+0x9ea0>
   1b474:	movw	r0, #1
   1b478:	str	r0, [sp, #8]
   1b47c:	ldr	r0, [pc, #64]	; 1b4c4 <__assert_fail@plt+0x9ee8>
   1b480:	ldr	r1, [sp, #8]
   1b484:	cmp	r0, r1
   1b488:	bcs	1b4a4 <__assert_fail@plt+0x9ec8>
   1b48c:	bl	114e0 <__errno_location@plt>
   1b490:	movw	r1, #12
   1b494:	str	r1, [r0]
   1b498:	movw	r0, #0
   1b49c:	str	r0, [fp, #-4]
   1b4a0:	b	1b4b8 <__assert_fail@plt+0x9edc>
   1b4a4:	ldr	r0, [sp, #8]
   1b4a8:	bl	11438 <malloc@plt>
   1b4ac:	str	r0, [sp, #4]
   1b4b0:	ldr	r0, [sp, #4]
   1b4b4:	str	r0, [fp, #-4]
   1b4b8:	ldr	r0, [fp, #-4]
   1b4bc:	mov	sp, fp
   1b4c0:	pop	{fp, pc}
   1b4c4:	svcvc	0x00ffffff
   1b4c8:	push	{fp, lr}
   1b4cc:	mov	fp, sp
   1b4d0:	sub	sp, sp, #16
   1b4d4:	str	r0, [sp, #8]
   1b4d8:	str	r1, [sp, #4]
   1b4dc:	ldr	r0, [sp, #8]
   1b4e0:	movw	r1, #0
   1b4e4:	cmp	r0, r1
   1b4e8:	bne	1b4fc <__assert_fail@plt+0x9f20>
   1b4ec:	ldr	r0, [sp, #4]
   1b4f0:	bl	1b458 <__assert_fail@plt+0x9e7c>
   1b4f4:	str	r0, [fp, #-4]
   1b4f8:	b	1b55c <__assert_fail@plt+0x9f80>
   1b4fc:	ldr	r0, [sp, #4]
   1b500:	cmp	r0, #0
   1b504:	bne	1b51c <__assert_fail@plt+0x9f40>
   1b508:	ldr	r0, [sp, #8]
   1b50c:	bl	146fc <__assert_fail@plt+0x3120>
   1b510:	movw	r0, #0
   1b514:	str	r0, [fp, #-4]
   1b518:	b	1b55c <__assert_fail@plt+0x9f80>
   1b51c:	ldr	r0, [pc, #68]	; 1b568 <__assert_fail@plt+0x9f8c>
   1b520:	ldr	r1, [sp, #4]
   1b524:	cmp	r0, r1
   1b528:	bcs	1b544 <__assert_fail@plt+0x9f68>
   1b52c:	bl	114e0 <__errno_location@plt>
   1b530:	movw	r1, #12
   1b534:	str	r1, [r0]
   1b538:	movw	r0, #0
   1b53c:	str	r0, [fp, #-4]
   1b540:	b	1b55c <__assert_fail@plt+0x9f80>
   1b544:	ldr	r0, [sp, #8]
   1b548:	ldr	r1, [sp, #4]
   1b54c:	bl	11384 <realloc@plt>
   1b550:	str	r0, [sp]
   1b554:	ldr	r0, [sp]
   1b558:	str	r0, [fp, #-4]
   1b55c:	ldr	r0, [fp, #-4]
   1b560:	mov	sp, fp
   1b564:	pop	{fp, pc}
   1b568:	svcvc	0x00ffffff
   1b56c:	sub	sp, sp, #8
   1b570:	str	r0, [sp, #4]
   1b574:	str	r1, [sp]
   1b578:	movw	r0, #0
   1b57c:	add	sp, sp, #8
   1b580:	bx	lr
   1b584:	push	{fp, lr}
   1b588:	mov	fp, sp
   1b58c:	sub	sp, sp, #8
   1b590:	str	r0, [sp, #4]
   1b594:	str	r1, [sp]
   1b598:	ldr	r0, [sp, #4]
   1b59c:	ldr	r1, [sp]
   1b5a0:	bl	1b56c <__assert_fail@plt+0x9f90>
   1b5a4:	mov	sp, fp
   1b5a8:	pop	{fp, pc}
   1b5ac:	push	{fp, lr}
   1b5b0:	mov	fp, sp
   1b5b4:	sub	sp, sp, #24
   1b5b8:	str	r0, [fp, #-8]
   1b5bc:	str	r1, [sp, #12]
   1b5c0:	ldr	r0, [fp, #-8]
   1b5c4:	str	r0, [sp, #8]
   1b5c8:	ldr	r0, [sp, #12]
   1b5cc:	str	r0, [sp, #4]
   1b5d0:	ldr	r0, [sp, #8]
   1b5d4:	ldr	r1, [sp, #4]
   1b5d8:	cmp	r0, r1
   1b5dc:	bne	1b5ec <__assert_fail@plt+0xa010>
   1b5e0:	movw	r0, #0
   1b5e4:	str	r0, [fp, #-4]
   1b5e8:	b	1b658 <__assert_fail@plt+0xa07c>
   1b5ec:	b	1b5f0 <__assert_fail@plt+0xa014>
   1b5f0:	ldr	r0, [sp, #8]
   1b5f4:	ldrb	r0, [r0]
   1b5f8:	bl	1dc0c <_obstack_memory_used@@Base+0x1b18>
   1b5fc:	strb	r0, [sp, #3]
   1b600:	ldr	r0, [sp, #4]
   1b604:	ldrb	r0, [r0]
   1b608:	bl	1dc0c <_obstack_memory_used@@Base+0x1b18>
   1b60c:	strb	r0, [sp, #2]
   1b610:	ldrb	r0, [sp, #3]
   1b614:	cmp	r0, #0
   1b618:	bne	1b620 <__assert_fail@plt+0xa044>
   1b61c:	b	1b648 <__assert_fail@plt+0xa06c>
   1b620:	ldr	r0, [sp, #8]
   1b624:	add	r0, r0, #1
   1b628:	str	r0, [sp, #8]
   1b62c:	ldr	r0, [sp, #4]
   1b630:	add	r0, r0, #1
   1b634:	str	r0, [sp, #4]
   1b638:	ldrb	r0, [sp, #3]
   1b63c:	ldrb	r1, [sp, #2]
   1b640:	cmp	r0, r1
   1b644:	beq	1b5f0 <__assert_fail@plt+0xa014>
   1b648:	ldrb	r0, [sp, #3]
   1b64c:	ldrb	r1, [sp, #2]
   1b650:	sub	r0, r0, r1
   1b654:	str	r0, [fp, #-4]
   1b658:	ldr	r0, [fp, #-4]
   1b65c:	mov	sp, fp
   1b660:	pop	{fp, pc}
   1b664:	push	{fp, lr}
   1b668:	mov	fp, sp
   1b66c:	sub	sp, sp, #16
   1b670:	str	r0, [sp, #8]
   1b674:	ldr	r0, [sp, #8]
   1b678:	bl	113e4 <__fpending@plt>
   1b67c:	cmp	r0, #0
   1b680:	movw	r0, #0
   1b684:	movne	r0, #1
   1b688:	and	r0, r0, #1
   1b68c:	strb	r0, [sp, #7]
   1b690:	ldr	r0, [sp, #8]
   1b694:	bl	113f0 <ferror_unlocked@plt>
   1b698:	cmp	r0, #0
   1b69c:	movw	r0, #0
   1b6a0:	movne	r0, #1
   1b6a4:	and	r0, r0, #1
   1b6a8:	strb	r0, [sp, #6]
   1b6ac:	ldr	r0, [sp, #8]
   1b6b0:	bl	14564 <__assert_fail@plt+0x2f88>
   1b6b4:	cmp	r0, #0
   1b6b8:	movw	r0, #0
   1b6bc:	movne	r0, #1
   1b6c0:	and	r0, r0, #1
   1b6c4:	strb	r0, [sp, #5]
   1b6c8:	ldrb	r0, [sp, #6]
   1b6cc:	tst	r0, #1
   1b6d0:	bne	1b6fc <__assert_fail@plt+0xa120>
   1b6d4:	ldrb	r0, [sp, #5]
   1b6d8:	tst	r0, #1
   1b6dc:	beq	1b720 <__assert_fail@plt+0xa144>
   1b6e0:	ldrb	r0, [sp, #7]
   1b6e4:	tst	r0, #1
   1b6e8:	bne	1b6fc <__assert_fail@plt+0xa120>
   1b6ec:	bl	114e0 <__errno_location@plt>
   1b6f0:	ldr	r0, [r0]
   1b6f4:	cmp	r0, #9
   1b6f8:	beq	1b720 <__assert_fail@plt+0xa144>
   1b6fc:	ldrb	r0, [sp, #5]
   1b700:	tst	r0, #1
   1b704:	bne	1b714 <__assert_fail@plt+0xa138>
   1b708:	bl	114e0 <__errno_location@plt>
   1b70c:	movw	r1, #0
   1b710:	str	r1, [r0]
   1b714:	mvn	r0, #0
   1b718:	str	r0, [fp, #-4]
   1b71c:	b	1b728 <__assert_fail@plt+0xa14c>
   1b720:	movw	r0, #0
   1b724:	str	r0, [fp, #-4]
   1b728:	ldr	r0, [fp, #-4]
   1b72c:	mov	sp, fp
   1b730:	pop	{fp, pc}
   1b734:	push	{r4, r5, fp, lr}
   1b738:	add	fp, sp, #8
   1b73c:	sub	sp, sp, #272	; 0x110
   1b740:	add	r1, sp, #7
   1b744:	str	r0, [fp, #-16]
   1b748:	ldr	r0, [fp, #-16]
   1b74c:	movw	r2, #257	; 0x101
   1b750:	bl	1d4f8 <_obstack_memory_used@@Base+0x1404>
   1b754:	cmp	r0, #0
   1b758:	beq	1b76c <__assert_fail@plt+0xa190>
   1b75c:	movw	r0, #0
   1b760:	and	r0, r0, #1
   1b764:	strb	r0, [fp, #-9]
   1b768:	b	1b7c0 <__assert_fail@plt+0xa1e4>
   1b76c:	add	r0, sp, #7
   1b770:	movw	r1, #61393	; 0xefd1
   1b774:	movt	r1, #1
   1b778:	bl	112dc <strcmp@plt>
   1b77c:	cmp	r0, #0
   1b780:	movw	r0, #1
   1b784:	str	r0, [sp]
   1b788:	beq	1b7ac <__assert_fail@plt+0xa1d0>
   1b78c:	add	r0, sp, #7
   1b790:	movw	r1, #61395	; 0xefd3
   1b794:	movt	r1, #1
   1b798:	bl	112dc <strcmp@plt>
   1b79c:	cmp	r0, #0
   1b7a0:	movw	r0, #0
   1b7a4:	moveq	r0, #1
   1b7a8:	str	r0, [sp]
   1b7ac:	ldr	r0, [sp]
   1b7b0:	mvn	r1, #0
   1b7b4:	eor	r0, r0, r1
   1b7b8:	and	r0, r0, #1
   1b7bc:	strb	r0, [fp, #-9]
   1b7c0:	ldrb	r0, [fp, #-9]
   1b7c4:	and	r0, r0, #1
   1b7c8:	sub	sp, fp, #8
   1b7cc:	pop	{r4, r5, fp, pc}
   1b7d0:	push	{fp, lr}
   1b7d4:	mov	fp, sp
   1b7d8:	bl	114e0 <__errno_location@plt>
   1b7dc:	movw	r1, #12
   1b7e0:	str	r1, [r0]
   1b7e4:	movw	r0, #0
   1b7e8:	pop	{fp, pc}
   1b7ec:	push	{fp, lr}
   1b7f0:	mov	fp, sp
   1b7f4:	sub	sp, sp, #8
   1b7f8:	str	r0, [sp, #4]
   1b7fc:	ldr	r0, [sp, #4]
   1b800:	cmn	r0, #1
   1b804:	bhi	1b818 <__assert_fail@plt+0xa23c>
   1b808:	ldr	r0, [sp, #4]
   1b80c:	bl	1b458 <__assert_fail@plt+0x9e7c>
   1b810:	str	r0, [sp]
   1b814:	b	1b820 <__assert_fail@plt+0xa244>
   1b818:	bl	1b7d0 <__assert_fail@plt+0xa1f4>
   1b81c:	str	r0, [sp]
   1b820:	ldr	r0, [sp]
   1b824:	mov	sp, fp
   1b828:	pop	{fp, pc}
   1b82c:	push	{fp, lr}
   1b830:	mov	fp, sp
   1b834:	sub	sp, sp, #16
   1b838:	str	r0, [fp, #-4]
   1b83c:	str	r1, [sp, #8]
   1b840:	ldr	r0, [sp, #8]
   1b844:	cmn	r0, #1
   1b848:	bhi	1b880 <__assert_fail@plt+0xa2a4>
   1b84c:	ldr	r0, [fp, #-4]
   1b850:	ldr	r1, [sp, #8]
   1b854:	ldr	r2, [sp, #8]
   1b858:	cmp	r2, #0
   1b85c:	movw	r2, #0
   1b860:	movne	r2, #1
   1b864:	mvn	r3, #0
   1b868:	eor	r2, r2, r3
   1b86c:	and	r2, r2, #1
   1b870:	orr	r1, r1, r2
   1b874:	bl	1b4c8 <__assert_fail@plt+0x9eec>
   1b878:	str	r0, [sp, #4]
   1b87c:	b	1b888 <__assert_fail@plt+0xa2ac>
   1b880:	bl	1b7d0 <__assert_fail@plt+0xa1f4>
   1b884:	str	r0, [sp, #4]
   1b888:	ldr	r0, [sp, #4]
   1b88c:	mov	sp, fp
   1b890:	pop	{fp, pc}
   1b894:	push	{fp, lr}
   1b898:	mov	fp, sp
   1b89c:	sub	sp, sp, #16
   1b8a0:	str	r0, [sp, #8]
   1b8a4:	str	r1, [sp, #4]
   1b8a8:	ldr	r0, [sp, #8]
   1b8ac:	mvn	r1, #0
   1b8b0:	cmp	r1, r0
   1b8b4:	bcs	1b8d8 <__assert_fail@plt+0xa2fc>
   1b8b8:	ldr	r0, [sp, #4]
   1b8bc:	cmp	r0, #0
   1b8c0:	beq	1b8d0 <__assert_fail@plt+0xa2f4>
   1b8c4:	bl	1b7d0 <__assert_fail@plt+0xa1f4>
   1b8c8:	str	r0, [fp, #-4]
   1b8cc:	b	1b918 <__assert_fail@plt+0xa33c>
   1b8d0:	movw	r0, #0
   1b8d4:	str	r0, [sp, #8]
   1b8d8:	ldr	r0, [sp, #4]
   1b8dc:	mvn	r1, #0
   1b8e0:	cmp	r1, r0
   1b8e4:	bcs	1b908 <__assert_fail@plt+0xa32c>
   1b8e8:	ldr	r0, [sp, #8]
   1b8ec:	cmp	r0, #0
   1b8f0:	beq	1b900 <__assert_fail@plt+0xa324>
   1b8f4:	bl	1b7d0 <__assert_fail@plt+0xa1f4>
   1b8f8:	str	r0, [fp, #-4]
   1b8fc:	b	1b918 <__assert_fail@plt+0xa33c>
   1b900:	movw	r0, #0
   1b904:	str	r0, [sp, #4]
   1b908:	ldr	r0, [sp, #8]
   1b90c:	ldr	r1, [sp, #4]
   1b910:	bl	1b3bc <__assert_fail@plt+0x9de0>
   1b914:	str	r0, [fp, #-4]
   1b918:	ldr	r0, [fp, #-4]
   1b91c:	mov	sp, fp
   1b920:	pop	{fp, pc}
   1b924:	push	{fp, lr}
   1b928:	mov	fp, sp
   1b92c:	sub	sp, sp, #16
   1b930:	str	r0, [fp, #-4]
   1b934:	str	r1, [sp, #8]
   1b938:	str	r2, [sp, #4]
   1b93c:	ldr	r0, [sp, #8]
   1b940:	cmp	r0, #0
   1b944:	beq	1b954 <__assert_fail@plt+0xa378>
   1b948:	ldr	r0, [sp, #4]
   1b94c:	cmp	r0, #0
   1b950:	bne	1b960 <__assert_fail@plt+0xa384>
   1b954:	movw	r0, #1
   1b958:	str	r0, [sp, #4]
   1b95c:	str	r0, [sp, #8]
   1b960:	ldr	r0, [sp, #8]
   1b964:	cmn	r0, #1
   1b968:	bhi	1b990 <__assert_fail@plt+0xa3b4>
   1b96c:	ldr	r0, [sp, #4]
   1b970:	cmn	r0, #1
   1b974:	bhi	1b990 <__assert_fail@plt+0xa3b4>
   1b978:	ldr	r0, [fp, #-4]
   1b97c:	ldr	r1, [sp, #8]
   1b980:	ldr	r2, [sp, #4]
   1b984:	bl	1c1b8 <_obstack_memory_used@@Base+0xc4>
   1b988:	str	r0, [sp]
   1b98c:	b	1b998 <__assert_fail@plt+0xa3bc>
   1b990:	bl	1b7d0 <__assert_fail@plt+0xa1f4>
   1b994:	str	r0, [sp]
   1b998:	ldr	r0, [sp]
   1b99c:	mov	sp, fp
   1b9a0:	pop	{fp, pc}
   1b9a4:	push	{fp, lr}
   1b9a8:	mov	fp, sp
   1b9ac:	sub	sp, sp, #8
   1b9b0:	movw	r0, #14
   1b9b4:	bl	11564 <nl_langinfo@plt>
   1b9b8:	str	r0, [sp, #4]
   1b9bc:	ldr	r0, [sp, #4]
   1b9c0:	movw	r1, #0
   1b9c4:	cmp	r0, r1
   1b9c8:	bne	1b9d8 <__assert_fail@plt+0xa3fc>
   1b9cc:	movw	r0, #59965	; 0xea3d
   1b9d0:	movt	r0, #1
   1b9d4:	str	r0, [sp, #4]
   1b9d8:	ldr	r0, [sp, #4]
   1b9dc:	ldrb	r0, [r0]
   1b9e0:	cmp	r0, #0
   1b9e4:	bne	1b9f4 <__assert_fail@plt+0xa418>
   1b9e8:	movw	r0, #61401	; 0xefd9
   1b9ec:	movt	r0, #1
   1b9f0:	str	r0, [sp, #4]
   1b9f4:	ldr	r0, [sp, #4]
   1b9f8:	mov	sp, fp
   1b9fc:	pop	{fp, pc}

0001ba00 <_obstack_begin@@Base>:
   1ba00:	push	{fp, lr}
   1ba04:	mov	fp, sp
   1ba08:	sub	sp, sp, #24
   1ba0c:	ldr	ip, [fp, #8]
   1ba10:	str	r0, [fp, #-4]
   1ba14:	str	r1, [fp, #-8]
   1ba18:	str	r2, [sp, #12]
   1ba1c:	str	r3, [sp, #8]
   1ba20:	ldr	r0, [sp, #8]
   1ba24:	ldr	r1, [fp, #-4]
   1ba28:	str	r0, [r1, #28]
   1ba2c:	ldr	r0, [fp, #8]
   1ba30:	ldr	r1, [fp, #-4]
   1ba34:	str	r0, [r1, #32]
   1ba38:	ldr	r0, [fp, #-4]
   1ba3c:	ldrb	r1, [r0, #40]	; 0x28
   1ba40:	bic	r1, r1, #1
   1ba44:	strb	r1, [r0, #40]	; 0x28
   1ba48:	ldr	r0, [fp, #-4]
   1ba4c:	ldr	r1, [fp, #-8]
   1ba50:	ldr	r2, [sp, #12]
   1ba54:	str	ip, [sp, #4]
   1ba58:	bl	1ba64 <_obstack_begin@@Base+0x64>
   1ba5c:	mov	sp, fp
   1ba60:	pop	{fp, pc}
   1ba64:	push	{fp, lr}
   1ba68:	mov	fp, sp
   1ba6c:	sub	sp, sp, #24
   1ba70:	str	r0, [fp, #-4]
   1ba74:	str	r1, [fp, #-8]
   1ba78:	str	r2, [sp, #12]
   1ba7c:	ldr	r0, [sp, #12]
   1ba80:	cmp	r0, #0
   1ba84:	bne	1ba90 <_obstack_begin@@Base+0x90>
   1ba88:	movw	r0, #8
   1ba8c:	str	r0, [sp, #12]
   1ba90:	ldr	r0, [fp, #-8]
   1ba94:	cmp	r0, #0
   1ba98:	bne	1bab4 <_obstack_begin@@Base+0xb4>
   1ba9c:	movw	r0, #24
   1baa0:	str	r0, [sp, #4]
   1baa4:	ldr	r0, [sp, #4]
   1baa8:	movw	r1, #4096	; 0x1000
   1baac:	sub	r0, r1, r0
   1bab0:	str	r0, [fp, #-8]
   1bab4:	ldr	r0, [fp, #-8]
   1bab8:	ldr	r1, [fp, #-4]
   1babc:	str	r0, [r1]
   1bac0:	ldr	r0, [sp, #12]
   1bac4:	sub	r0, r0, #1
   1bac8:	ldr	r1, [fp, #-4]
   1bacc:	str	r0, [r1, #24]
   1bad0:	ldr	r0, [fp, #-4]
   1bad4:	ldr	r1, [fp, #-4]
   1bad8:	ldr	r1, [r1]
   1badc:	bl	1be20 <_obstack_newchunk@@Base+0x218>
   1bae0:	ldr	r1, [fp, #-4]
   1bae4:	str	r0, [r1, #4]
   1bae8:	str	r0, [sp, #8]
   1baec:	ldr	r0, [sp, #8]
   1baf0:	movw	r1, #0
   1baf4:	cmp	r0, r1
   1baf8:	bne	1bb0c <_obstack_begin@@Base+0x10c>
   1bafc:	movw	r0, #372	; 0x174
   1bb00:	movt	r0, #3
   1bb04:	ldr	r0, [r0]
   1bb08:	blx	r0
   1bb0c:	ldr	r0, [sp, #8]
   1bb10:	ldr	r1, [sp, #12]
   1bb14:	sub	r1, r1, #1
   1bb18:	add	r0, r0, r1
   1bb1c:	add	r0, r0, #8
   1bb20:	bic	r0, r0, r1
   1bb24:	ldr	r1, [fp, #-4]
   1bb28:	str	r0, [r1, #8]
   1bb2c:	ldr	r1, [fp, #-4]
   1bb30:	str	r0, [r1, #12]
   1bb34:	ldr	r0, [sp, #8]
   1bb38:	ldr	r1, [fp, #-4]
   1bb3c:	ldr	r1, [r1]
   1bb40:	add	r1, r0, r1
   1bb44:	str	r1, [r0]
   1bb48:	ldr	r0, [fp, #-4]
   1bb4c:	str	r1, [r0, #16]
   1bb50:	ldr	r0, [sp, #8]
   1bb54:	mov	r1, #0
   1bb58:	str	r1, [r0, #4]
   1bb5c:	ldr	r0, [fp, #-4]
   1bb60:	ldrb	r1, [r0, #40]	; 0x28
   1bb64:	and	r1, r1, #253	; 0xfd
   1bb68:	strb	r1, [r0, #40]	; 0x28
   1bb6c:	ldr	r0, [fp, #-4]
   1bb70:	ldrb	r1, [r0, #40]	; 0x28
   1bb74:	bic	r1, r1, #4
   1bb78:	strb	r1, [r0, #40]	; 0x28
   1bb7c:	movw	r0, #1
   1bb80:	mov	sp, fp
   1bb84:	pop	{fp, pc}

0001bb88 <_obstack_begin_1@@Base>:
   1bb88:	push	{fp, lr}
   1bb8c:	mov	fp, sp
   1bb90:	sub	sp, sp, #24
   1bb94:	ldr	ip, [fp, #12]
   1bb98:	ldr	lr, [fp, #8]
   1bb9c:	str	r0, [fp, #-4]
   1bba0:	str	r1, [fp, #-8]
   1bba4:	str	r2, [sp, #12]
   1bba8:	str	r3, [sp, #8]
   1bbac:	ldr	r0, [sp, #8]
   1bbb0:	ldr	r1, [fp, #-4]
   1bbb4:	str	r0, [r1, #28]
   1bbb8:	ldr	r0, [fp, #8]
   1bbbc:	ldr	r1, [fp, #-4]
   1bbc0:	str	r0, [r1, #32]
   1bbc4:	ldr	r0, [fp, #12]
   1bbc8:	ldr	r1, [fp, #-4]
   1bbcc:	str	r0, [r1, #36]	; 0x24
   1bbd0:	ldr	r0, [fp, #-4]
   1bbd4:	ldrb	r1, [r0, #40]	; 0x28
   1bbd8:	bic	r1, r1, #1
   1bbdc:	movw	r2, #1
   1bbe0:	orr	r1, r1, r2
   1bbe4:	strb	r1, [r0, #40]	; 0x28
   1bbe8:	ldr	r0, [fp, #-4]
   1bbec:	ldr	r1, [fp, #-8]
   1bbf0:	ldr	r2, [sp, #12]
   1bbf4:	str	ip, [sp, #4]
   1bbf8:	str	lr, [sp]
   1bbfc:	bl	1ba64 <_obstack_begin@@Base+0x64>
   1bc00:	mov	sp, fp
   1bc04:	pop	{fp, pc}

0001bc08 <_obstack_newchunk@@Base>:
   1bc08:	push	{fp, lr}
   1bc0c:	mov	fp, sp
   1bc10:	sub	sp, sp, #40	; 0x28
   1bc14:	str	r0, [fp, #-4]
   1bc18:	str	r1, [fp, #-8]
   1bc1c:	ldr	r0, [fp, #-4]
   1bc20:	ldr	r0, [r0, #4]
   1bc24:	str	r0, [fp, #-12]
   1bc28:	movw	r0, #0
   1bc2c:	str	r0, [fp, #-16]
   1bc30:	ldr	r0, [fp, #-4]
   1bc34:	ldr	r0, [r0, #12]
   1bc38:	ldr	r1, [fp, #-4]
   1bc3c:	ldr	r1, [r1, #8]
   1bc40:	sub	r0, r0, r1
   1bc44:	str	r0, [sp, #20]
   1bc48:	ldr	r0, [sp, #20]
   1bc4c:	ldr	r1, [fp, #-8]
   1bc50:	add	r0, r0, r1
   1bc54:	str	r0, [sp, #12]
   1bc58:	ldr	r0, [sp, #12]
   1bc5c:	ldr	r1, [fp, #-4]
   1bc60:	ldr	r1, [r1, #24]
   1bc64:	add	r0, r0, r1
   1bc68:	str	r0, [sp, #8]
   1bc6c:	ldr	r0, [sp, #8]
   1bc70:	ldr	r1, [sp, #20]
   1bc74:	lsr	r1, r1, #3
   1bc78:	add	r0, r0, r1
   1bc7c:	add	r0, r0, #100	; 0x64
   1bc80:	str	r0, [sp, #4]
   1bc84:	ldr	r0, [sp, #4]
   1bc88:	ldr	r1, [sp, #8]
   1bc8c:	cmp	r0, r1
   1bc90:	bcs	1bc9c <_obstack_newchunk@@Base+0x94>
   1bc94:	ldr	r0, [sp, #8]
   1bc98:	str	r0, [sp, #4]
   1bc9c:	ldr	r0, [sp, #4]
   1bca0:	ldr	r1, [fp, #-4]
   1bca4:	ldr	r1, [r1]
   1bca8:	cmp	r0, r1
   1bcac:	bcs	1bcbc <_obstack_newchunk@@Base+0xb4>
   1bcb0:	ldr	r0, [fp, #-4]
   1bcb4:	ldr	r0, [r0]
   1bcb8:	str	r0, [sp, #4]
   1bcbc:	ldr	r0, [sp, #20]
   1bcc0:	ldr	r1, [sp, #12]
   1bcc4:	cmp	r0, r1
   1bcc8:	bhi	1bcec <_obstack_newchunk@@Base+0xe4>
   1bccc:	ldr	r0, [sp, #12]
   1bcd0:	ldr	r1, [sp, #8]
   1bcd4:	cmp	r0, r1
   1bcd8:	bhi	1bcec <_obstack_newchunk@@Base+0xe4>
   1bcdc:	ldr	r0, [fp, #-4]
   1bce0:	ldr	r1, [sp, #4]
   1bce4:	bl	1be20 <_obstack_newchunk@@Base+0x218>
   1bce8:	str	r0, [fp, #-16]
   1bcec:	ldr	r0, [fp, #-16]
   1bcf0:	movw	r1, #0
   1bcf4:	cmp	r0, r1
   1bcf8:	bne	1bd0c <_obstack_newchunk@@Base+0x104>
   1bcfc:	movw	r0, #372	; 0x174
   1bd00:	movt	r0, #3
   1bd04:	ldr	r0, [r0]
   1bd08:	blx	r0
   1bd0c:	ldr	r0, [fp, #-16]
   1bd10:	ldr	r1, [fp, #-4]
   1bd14:	str	r0, [r1, #4]
   1bd18:	ldr	r0, [fp, #-12]
   1bd1c:	ldr	r1, [fp, #-16]
   1bd20:	str	r0, [r1, #4]
   1bd24:	ldr	r0, [fp, #-16]
   1bd28:	ldr	r1, [sp, #4]
   1bd2c:	add	r0, r0, r1
   1bd30:	ldr	r1, [fp, #-4]
   1bd34:	str	r0, [r1, #16]
   1bd38:	ldr	r1, [fp, #-16]
   1bd3c:	str	r0, [r1]
   1bd40:	ldr	r0, [fp, #-16]
   1bd44:	ldr	r1, [fp, #-4]
   1bd48:	ldr	r1, [r1, #24]
   1bd4c:	add	r0, r0, r1
   1bd50:	add	r0, r0, #8
   1bd54:	bic	r0, r0, r1
   1bd58:	str	r0, [sp, #16]
   1bd5c:	ldr	r0, [sp, #16]
   1bd60:	ldr	r1, [fp, #-4]
   1bd64:	ldr	r1, [r1, #8]
   1bd68:	ldr	r2, [sp, #20]
   1bd6c:	bl	11354 <memcpy@plt>
   1bd70:	ldr	r1, [fp, #-4]
   1bd74:	ldrb	r1, [r1, #40]	; 0x28
   1bd78:	ubfx	r1, r1, #1, #1
   1bd7c:	and	r1, r1, #255	; 0xff
   1bd80:	cmp	r1, #0
   1bd84:	bne	1bde8 <_obstack_newchunk@@Base+0x1e0>
   1bd88:	ldr	r0, [fp, #-4]
   1bd8c:	ldr	r0, [r0, #8]
   1bd90:	ldr	r1, [fp, #-12]
   1bd94:	add	r1, r1, #8
   1bd98:	sub	r1, r1, #0
   1bd9c:	ldr	r2, [fp, #-4]
   1bda0:	ldr	r2, [r2, #24]
   1bda4:	add	r1, r1, r2
   1bda8:	ldr	r2, [fp, #-4]
   1bdac:	ldr	r2, [r2, #24]
   1bdb0:	mvn	r3, #0
   1bdb4:	eor	r2, r2, r3
   1bdb8:	and	r1, r1, r2
   1bdbc:	movw	r2, #0
   1bdc0:	add	r1, r2, r1
   1bdc4:	cmp	r0, r1
   1bdc8:	bne	1bde8 <_obstack_newchunk@@Base+0x1e0>
   1bdcc:	ldr	r0, [fp, #-12]
   1bdd0:	ldr	r0, [r0, #4]
   1bdd4:	ldr	r1, [fp, #-16]
   1bdd8:	str	r0, [r1, #4]
   1bddc:	ldr	r0, [fp, #-4]
   1bde0:	ldr	r1, [fp, #-12]
   1bde4:	bl	1bea8 <_obstack_newchunk@@Base+0x2a0>
   1bde8:	ldr	r0, [sp, #16]
   1bdec:	ldr	r1, [fp, #-4]
   1bdf0:	str	r0, [r1, #8]
   1bdf4:	ldr	r0, [fp, #-4]
   1bdf8:	ldr	r1, [r0, #8]
   1bdfc:	ldr	r2, [sp, #20]
   1be00:	add	r1, r1, r2
   1be04:	str	r1, [r0, #12]
   1be08:	ldr	r0, [fp, #-4]
   1be0c:	ldrb	r1, [r0, #40]	; 0x28
   1be10:	bic	r1, r1, #2
   1be14:	strb	r1, [r0, #40]	; 0x28
   1be18:	mov	sp, fp
   1be1c:	pop	{fp, pc}
   1be20:	push	{fp, lr}
   1be24:	mov	fp, sp
   1be28:	sub	sp, sp, #24
   1be2c:	str	r0, [fp, #-8]
   1be30:	str	r1, [sp, #12]
   1be34:	ldr	r0, [fp, #-8]
   1be38:	ldrb	r0, [r0, #40]	; 0x28
   1be3c:	and	r0, r0, #1
   1be40:	and	r0, r0, #255	; 0xff
   1be44:	cmp	r0, #0
   1be48:	beq	1be7c <_obstack_newchunk@@Base+0x274>
   1be4c:	ldr	r0, [fp, #-8]
   1be50:	ldr	r0, [r0, #28]
   1be54:	ldr	r1, [fp, #-8]
   1be58:	ldr	r1, [r1, #36]	; 0x24
   1be5c:	ldr	r2, [sp, #12]
   1be60:	str	r0, [sp, #8]
   1be64:	mov	r0, r1
   1be68:	mov	r1, r2
   1be6c:	ldr	r2, [sp, #8]
   1be70:	blx	r2
   1be74:	str	r0, [fp, #-4]
   1be78:	b	1be9c <_obstack_newchunk@@Base+0x294>
   1be7c:	ldr	r0, [fp, #-8]
   1be80:	ldr	r0, [r0, #28]
   1be84:	ldr	r1, [sp, #12]
   1be88:	str	r0, [sp, #4]
   1be8c:	mov	r0, r1
   1be90:	ldr	r1, [sp, #4]
   1be94:	blx	r1
   1be98:	str	r0, [fp, #-4]
   1be9c:	ldr	r0, [fp, #-4]
   1bea0:	mov	sp, fp
   1bea4:	pop	{fp, pc}
   1bea8:	push	{fp, lr}
   1beac:	mov	fp, sp
   1beb0:	sub	sp, sp, #16
   1beb4:	str	r0, [fp, #-4]
   1beb8:	str	r1, [sp, #8]
   1bebc:	ldr	r0, [fp, #-4]
   1bec0:	ldrb	r0, [r0, #40]	; 0x28
   1bec4:	and	r0, r0, #1
   1bec8:	and	r0, r0, #255	; 0xff
   1becc:	cmp	r0, #0
   1bed0:	beq	1bf00 <_obstack_newchunk@@Base+0x2f8>
   1bed4:	ldr	r0, [fp, #-4]
   1bed8:	ldr	r0, [r0, #32]
   1bedc:	ldr	r1, [fp, #-4]
   1bee0:	ldr	r1, [r1, #36]	; 0x24
   1bee4:	ldr	r2, [sp, #8]
   1bee8:	str	r0, [sp, #4]
   1beec:	mov	r0, r1
   1bef0:	mov	r1, r2
   1bef4:	ldr	r2, [sp, #4]
   1bef8:	blx	r2
   1befc:	b	1bf1c <_obstack_newchunk@@Base+0x314>
   1bf00:	ldr	r0, [fp, #-4]
   1bf04:	ldr	r0, [r0, #32]
   1bf08:	ldr	r1, [sp, #8]
   1bf0c:	str	r0, [sp]
   1bf10:	mov	r0, r1
   1bf14:	ldr	r1, [sp]
   1bf18:	blx	r1
   1bf1c:	mov	sp, fp
   1bf20:	pop	{fp, pc}

0001bf24 <_obstack_allocated_p@@Base>:
   1bf24:	sub	sp, sp, #24
   1bf28:	str	r0, [sp, #20]
   1bf2c:	str	r1, [sp, #16]
   1bf30:	ldr	r0, [sp, #20]
   1bf34:	ldr	r0, [r0, #4]
   1bf38:	str	r0, [sp, #12]
   1bf3c:	ldr	r0, [sp, #12]
   1bf40:	movw	r1, #0
   1bf44:	cmp	r0, r1
   1bf48:	movw	r0, #0
   1bf4c:	str	r0, [sp, #4]
   1bf50:	beq	1bf90 <_obstack_allocated_p@@Base+0x6c>
   1bf54:	ldr	r0, [sp, #12]
   1bf58:	ldr	r1, [sp, #16]
   1bf5c:	cmp	r0, r1
   1bf60:	movw	r0, #1
   1bf64:	str	r0, [sp]
   1bf68:	bcs	1bf88 <_obstack_allocated_p@@Base+0x64>
   1bf6c:	ldr	r0, [sp, #12]
   1bf70:	ldr	r0, [r0]
   1bf74:	ldr	r1, [sp, #16]
   1bf78:	cmp	r0, r1
   1bf7c:	movw	r0, #0
   1bf80:	movcc	r0, #1
   1bf84:	str	r0, [sp]
   1bf88:	ldr	r0, [sp]
   1bf8c:	str	r0, [sp, #4]
   1bf90:	ldr	r0, [sp, #4]
   1bf94:	tst	r0, #1
   1bf98:	beq	1bfb4 <_obstack_allocated_p@@Base+0x90>
   1bf9c:	ldr	r0, [sp, #12]
   1bfa0:	ldr	r0, [r0, #4]
   1bfa4:	str	r0, [sp, #8]
   1bfa8:	ldr	r0, [sp, #8]
   1bfac:	str	r0, [sp, #12]
   1bfb0:	b	1bf3c <_obstack_allocated_p@@Base+0x18>
   1bfb4:	ldr	r0, [sp, #12]
   1bfb8:	movw	r1, #0
   1bfbc:	cmp	r0, r1
   1bfc0:	movw	r0, #0
   1bfc4:	movne	r0, #1
   1bfc8:	and	r0, r0, #1
   1bfcc:	add	sp, sp, #24
   1bfd0:	bx	lr

0001bfd4 <_obstack_free@@Base>:
   1bfd4:	push	{fp, lr}
   1bfd8:	mov	fp, sp
   1bfdc:	sub	sp, sp, #24
   1bfe0:	str	r0, [fp, #-4]
   1bfe4:	str	r1, [fp, #-8]
   1bfe8:	ldr	r0, [fp, #-4]
   1bfec:	ldr	r0, [r0, #4]
   1bff0:	str	r0, [sp, #12]
   1bff4:	ldr	r0, [sp, #12]
   1bff8:	movw	r1, #0
   1bffc:	cmp	r0, r1
   1c000:	movw	r0, #0
   1c004:	str	r0, [sp, #4]
   1c008:	beq	1c048 <_obstack_free@@Base+0x74>
   1c00c:	ldr	r0, [sp, #12]
   1c010:	ldr	r1, [fp, #-8]
   1c014:	cmp	r0, r1
   1c018:	movw	r0, #1
   1c01c:	str	r0, [sp]
   1c020:	bcs	1c040 <_obstack_free@@Base+0x6c>
   1c024:	ldr	r0, [sp, #12]
   1c028:	ldr	r0, [r0]
   1c02c:	ldr	r1, [fp, #-8]
   1c030:	cmp	r0, r1
   1c034:	movw	r0, #0
   1c038:	movcc	r0, #1
   1c03c:	str	r0, [sp]
   1c040:	ldr	r0, [sp]
   1c044:	str	r0, [sp, #4]
   1c048:	ldr	r0, [sp, #4]
   1c04c:	tst	r0, #1
   1c050:	beq	1c090 <_obstack_free@@Base+0xbc>
   1c054:	ldr	r0, [sp, #12]
   1c058:	ldr	r0, [r0, #4]
   1c05c:	str	r0, [sp, #8]
   1c060:	ldr	r0, [fp, #-4]
   1c064:	ldr	r1, [sp, #12]
   1c068:	bl	1bea8 <_obstack_newchunk@@Base+0x2a0>
   1c06c:	ldr	r0, [sp, #8]
   1c070:	str	r0, [sp, #12]
   1c074:	ldr	r0, [fp, #-4]
   1c078:	ldrb	r1, [r0, #40]	; 0x28
   1c07c:	bic	r1, r1, #2
   1c080:	movw	r2, #2
   1c084:	orr	r1, r1, r2
   1c088:	strb	r1, [r0, #40]	; 0x28
   1c08c:	b	1bff4 <_obstack_free@@Base+0x20>
   1c090:	ldr	r0, [sp, #12]
   1c094:	movw	r1, #0
   1c098:	cmp	r0, r1
   1c09c:	beq	1c0d4 <_obstack_free@@Base+0x100>
   1c0a0:	ldr	r0, [fp, #-8]
   1c0a4:	ldr	r1, [fp, #-4]
   1c0a8:	str	r0, [r1, #12]
   1c0ac:	ldr	r1, [fp, #-4]
   1c0b0:	str	r0, [r1, #8]
   1c0b4:	ldr	r0, [sp, #12]
   1c0b8:	ldr	r0, [r0]
   1c0bc:	ldr	r1, [fp, #-4]
   1c0c0:	str	r0, [r1, #16]
   1c0c4:	ldr	r0, [sp, #12]
   1c0c8:	ldr	r1, [fp, #-4]
   1c0cc:	str	r0, [r1, #4]
   1c0d0:	b	1c0ec <_obstack_free@@Base+0x118>
   1c0d4:	ldr	r0, [fp, #-8]
   1c0d8:	movw	r1, #0
   1c0dc:	cmp	r0, r1
   1c0e0:	beq	1c0e8 <_obstack_free@@Base+0x114>
   1c0e4:	bl	115b8 <abort@plt>
   1c0e8:	b	1c0ec <_obstack_free@@Base+0x118>
   1c0ec:	mov	sp, fp
   1c0f0:	pop	{fp, pc}

0001c0f4 <_obstack_memory_used@@Base>:
   1c0f4:	sub	sp, sp, #12
   1c0f8:	str	r0, [sp, #8]
   1c0fc:	movw	r0, #0
   1c100:	str	r0, [sp]
   1c104:	ldr	r0, [sp, #8]
   1c108:	ldr	r0, [r0, #4]
   1c10c:	str	r0, [sp, #4]
   1c110:	ldr	r0, [sp, #4]
   1c114:	movw	r1, #0
   1c118:	cmp	r0, r1
   1c11c:	beq	1c14c <_obstack_memory_used@@Base+0x58>
   1c120:	ldr	r0, [sp, #4]
   1c124:	ldr	r0, [r0]
   1c128:	ldr	r1, [sp, #4]
   1c12c:	sub	r0, r0, r1
   1c130:	ldr	r1, [sp]
   1c134:	add	r0, r1, r0
   1c138:	str	r0, [sp]
   1c13c:	ldr	r0, [sp, #4]
   1c140:	ldr	r0, [r0, #4]
   1c144:	str	r0, [sp, #4]
   1c148:	b	1c110 <_obstack_memory_used@@Base+0x1c>
   1c14c:	ldr	r0, [sp]
   1c150:	add	sp, sp, #12
   1c154:	bx	lr
   1c158:	push	{fp, lr}
   1c15c:	mov	fp, sp
   1c160:	sub	sp, sp, #16
   1c164:	movw	r0, #392	; 0x188
   1c168:	movt	r0, #3
   1c16c:	ldr	r0, [r0]
   1c170:	movw	r1, #61376	; 0xefc0
   1c174:	movt	r1, #1
   1c178:	str	r0, [fp, #-4]
   1c17c:	mov	r0, r1
   1c180:	bl	114a4 <gettext@plt>
   1c184:	ldr	r1, [fp, #-4]
   1c188:	str	r0, [sp, #8]
   1c18c:	mov	r0, r1
   1c190:	movw	r1, #60600	; 0xecb8
   1c194:	movt	r1, #1
   1c198:	ldr	r2, [sp, #8]
   1c19c:	bl	114c8 <fprintf@plt>
   1c1a0:	movw	r1, #304	; 0x130
   1c1a4:	movt	r1, #3
   1c1a8:	ldr	r1, [r1]
   1c1ac:	str	r0, [sp, #4]
   1c1b0:	mov	r0, r1
   1c1b4:	bl	11480 <exit@plt>
   1c1b8:	push	{fp, lr}
   1c1bc:	mov	fp, sp
   1c1c0:	sub	sp, sp, #96	; 0x60
   1c1c4:	str	r0, [fp, #-8]
   1c1c8:	str	r1, [fp, #-12]
   1c1cc:	str	r2, [fp, #-16]
   1c1d0:	b	1c588 <_obstack_memory_used@@Base+0x494>
   1c1d4:	b	1c3a8 <_obstack_memory_used@@Base+0x2b4>
   1c1d8:	ldr	r0, [fp, #-16]
   1c1dc:	cmp	r0, #0
   1c1e0:	bcs	1c2e4 <_obstack_memory_used@@Base+0x1f0>
   1c1e4:	ldr	r0, [fp, #-12]
   1c1e8:	cmp	r0, #0
   1c1ec:	bcs	1c274 <_obstack_memory_used@@Base+0x180>
   1c1f0:	b	1c210 <_obstack_memory_used@@Base+0x11c>
   1c1f4:	ldr	r0, [fp, #-12]
   1c1f8:	ldr	r1, [fp, #-16]
   1c1fc:	movw	r2, #127	; 0x7f
   1c200:	udiv	r1, r2, r1
   1c204:	cmp	r0, r1
   1c208:	bcc	1c378 <_obstack_memory_used@@Base+0x284>
   1c20c:	b	1c390 <_obstack_memory_used@@Base+0x29c>
   1c210:	b	1c224 <_obstack_memory_used@@Base+0x130>
   1c214:	ldr	r0, [fp, #-16]
   1c218:	cmp	r0, #1
   1c21c:	bcc	1c234 <_obstack_memory_used@@Base+0x140>
   1c220:	b	1c240 <_obstack_memory_used@@Base+0x14c>
   1c224:	ldr	r0, [fp, #-16]
   1c228:	movw	r1, #0
   1c22c:	cmp	r1, r0
   1c230:	bcs	1c240 <_obstack_memory_used@@Base+0x14c>
   1c234:	movw	r0, #0
   1c238:	str	r0, [fp, #-24]	; 0xffffffe8
   1c23c:	b	1c258 <_obstack_memory_used@@Base+0x164>
   1c240:	ldr	r0, [fp, #-16]
   1c244:	movw	r1, #0
   1c248:	sub	r0, r1, r0
   1c24c:	movw	r1, #127	; 0x7f
   1c250:	udiv	r0, r1, r0
   1c254:	str	r0, [fp, #-24]	; 0xffffffe8
   1c258:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c25c:	ldr	r1, [fp, #-12]
   1c260:	mvn	r2, #0
   1c264:	sub	r1, r2, r1
   1c268:	cmp	r0, r1
   1c26c:	bls	1c378 <_obstack_memory_used@@Base+0x284>
   1c270:	b	1c390 <_obstack_memory_used@@Base+0x29c>
   1c274:	ldr	r0, [fp, #-16]
   1c278:	cmn	r0, #1
   1c27c:	bne	1c2c8 <_obstack_memory_used@@Base+0x1d4>
   1c280:	b	1c2a0 <_obstack_memory_used@@Base+0x1ac>
   1c284:	ldr	r0, [fp, #-12]
   1c288:	mvn	r1, #127	; 0x7f
   1c28c:	add	r0, r0, r1
   1c290:	movw	r1, #0
   1c294:	cmp	r1, r0
   1c298:	bcc	1c378 <_obstack_memory_used@@Base+0x284>
   1c29c:	b	1c390 <_obstack_memory_used@@Base+0x29c>
   1c2a0:	ldr	r0, [fp, #-12]
   1c2a4:	movw	r1, #0
   1c2a8:	cmp	r1, r0
   1c2ac:	bcs	1c390 <_obstack_memory_used@@Base+0x29c>
   1c2b0:	ldr	r0, [fp, #-12]
   1c2b4:	sub	r0, r0, #1
   1c2b8:	movw	r1, #127	; 0x7f
   1c2bc:	cmp	r1, r0
   1c2c0:	bcc	1c378 <_obstack_memory_used@@Base+0x284>
   1c2c4:	b	1c390 <_obstack_memory_used@@Base+0x29c>
   1c2c8:	ldr	r0, [fp, #-16]
   1c2cc:	mvn	r1, #127	; 0x7f
   1c2d0:	udiv	r0, r1, r0
   1c2d4:	ldr	r1, [fp, #-12]
   1c2d8:	cmp	r0, r1
   1c2dc:	bcc	1c378 <_obstack_memory_used@@Base+0x284>
   1c2e0:	b	1c390 <_obstack_memory_used@@Base+0x29c>
   1c2e4:	ldr	r0, [fp, #-16]
   1c2e8:	cmp	r0, #0
   1c2ec:	bne	1c2f4 <_obstack_memory_used@@Base+0x200>
   1c2f0:	b	1c390 <_obstack_memory_used@@Base+0x29c>
   1c2f4:	ldr	r0, [fp, #-12]
   1c2f8:	cmp	r0, #0
   1c2fc:	bcs	1c360 <_obstack_memory_used@@Base+0x26c>
   1c300:	ldr	r0, [fp, #-12]
   1c304:	cmn	r0, #1
   1c308:	bne	1c344 <_obstack_memory_used@@Base+0x250>
   1c30c:	b	1c32c <_obstack_memory_used@@Base+0x238>
   1c310:	ldr	r0, [fp, #-16]
   1c314:	mvn	r1, #127	; 0x7f
   1c318:	add	r0, r0, r1
   1c31c:	movw	r1, #0
   1c320:	cmp	r1, r0
   1c324:	bcc	1c378 <_obstack_memory_used@@Base+0x284>
   1c328:	b	1c390 <_obstack_memory_used@@Base+0x29c>
   1c32c:	ldr	r0, [fp, #-16]
   1c330:	sub	r0, r0, #1
   1c334:	movw	r1, #127	; 0x7f
   1c338:	cmp	r1, r0
   1c33c:	bcc	1c378 <_obstack_memory_used@@Base+0x284>
   1c340:	b	1c390 <_obstack_memory_used@@Base+0x29c>
   1c344:	ldr	r0, [fp, #-12]
   1c348:	mvn	r1, #127	; 0x7f
   1c34c:	udiv	r0, r1, r0
   1c350:	ldr	r1, [fp, #-16]
   1c354:	cmp	r0, r1
   1c358:	bcc	1c378 <_obstack_memory_used@@Base+0x284>
   1c35c:	b	1c390 <_obstack_memory_used@@Base+0x29c>
   1c360:	ldr	r0, [fp, #-16]
   1c364:	movw	r1, #127	; 0x7f
   1c368:	udiv	r0, r1, r0
   1c36c:	ldr	r1, [fp, #-12]
   1c370:	cmp	r0, r1
   1c374:	bcs	1c390 <_obstack_memory_used@@Base+0x29c>
   1c378:	ldr	r0, [fp, #-12]
   1c37c:	ldr	r1, [fp, #-16]
   1c380:	mul	r0, r0, r1
   1c384:	sxtb	r0, r0
   1c388:	str	r0, [fp, #-20]	; 0xffffffec
   1c38c:	b	1d4b8 <_obstack_memory_used@@Base+0x13c4>
   1c390:	ldr	r0, [fp, #-12]
   1c394:	ldr	r1, [fp, #-16]
   1c398:	mul	r0, r0, r1
   1c39c:	sxtb	r0, r0
   1c3a0:	str	r0, [fp, #-20]	; 0xffffffec
   1c3a4:	b	1d4d0 <_obstack_memory_used@@Base+0x13dc>
   1c3a8:	ldr	r0, [fp, #-16]
   1c3ac:	cmp	r0, #0
   1c3b0:	bcs	1c4bc <_obstack_memory_used@@Base+0x3c8>
   1c3b4:	ldr	r0, [fp, #-12]
   1c3b8:	cmp	r0, #0
   1c3bc:	bcs	1c444 <_obstack_memory_used@@Base+0x350>
   1c3c0:	b	1c3e0 <_obstack_memory_used@@Base+0x2ec>
   1c3c4:	ldr	r0, [fp, #-12]
   1c3c8:	ldr	r1, [fp, #-16]
   1c3cc:	movw	r2, #255	; 0xff
   1c3d0:	udiv	r1, r2, r1
   1c3d4:	cmp	r0, r1
   1c3d8:	bcc	1c558 <_obstack_memory_used@@Base+0x464>
   1c3dc:	b	1c570 <_obstack_memory_used@@Base+0x47c>
   1c3e0:	b	1c3f4 <_obstack_memory_used@@Base+0x300>
   1c3e4:	ldr	r0, [fp, #-16]
   1c3e8:	cmp	r0, #1
   1c3ec:	bcc	1c404 <_obstack_memory_used@@Base+0x310>
   1c3f0:	b	1c410 <_obstack_memory_used@@Base+0x31c>
   1c3f4:	ldr	r0, [fp, #-16]
   1c3f8:	movw	r1, #0
   1c3fc:	cmp	r1, r0
   1c400:	bcs	1c410 <_obstack_memory_used@@Base+0x31c>
   1c404:	movw	r0, #0
   1c408:	str	r0, [fp, #-28]	; 0xffffffe4
   1c40c:	b	1c428 <_obstack_memory_used@@Base+0x334>
   1c410:	ldr	r0, [fp, #-16]
   1c414:	movw	r1, #0
   1c418:	sub	r0, r1, r0
   1c41c:	movw	r1, #255	; 0xff
   1c420:	udiv	r0, r1, r0
   1c424:	str	r0, [fp, #-28]	; 0xffffffe4
   1c428:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c42c:	ldr	r1, [fp, #-12]
   1c430:	mvn	r2, #0
   1c434:	sub	r1, r2, r1
   1c438:	cmp	r0, r1
   1c43c:	bls	1c558 <_obstack_memory_used@@Base+0x464>
   1c440:	b	1c570 <_obstack_memory_used@@Base+0x47c>
   1c444:	b	1c44c <_obstack_memory_used@@Base+0x358>
   1c448:	b	1c450 <_obstack_memory_used@@Base+0x35c>
   1c44c:	b	1c4a0 <_obstack_memory_used@@Base+0x3ac>
   1c450:	ldr	r0, [fp, #-16]
   1c454:	cmn	r0, #1
   1c458:	bne	1c4a0 <_obstack_memory_used@@Base+0x3ac>
   1c45c:	b	1c478 <_obstack_memory_used@@Base+0x384>
   1c460:	ldr	r0, [fp, #-12]
   1c464:	add	r0, r0, #0
   1c468:	movw	r1, #0
   1c46c:	cmp	r1, r0
   1c470:	bcc	1c558 <_obstack_memory_used@@Base+0x464>
   1c474:	b	1c570 <_obstack_memory_used@@Base+0x47c>
   1c478:	ldr	r0, [fp, #-12]
   1c47c:	movw	r1, #0
   1c480:	cmp	r1, r0
   1c484:	bcs	1c570 <_obstack_memory_used@@Base+0x47c>
   1c488:	ldr	r0, [fp, #-12]
   1c48c:	sub	r0, r0, #1
   1c490:	mvn	r1, #0
   1c494:	cmp	r1, r0
   1c498:	bcc	1c558 <_obstack_memory_used@@Base+0x464>
   1c49c:	b	1c570 <_obstack_memory_used@@Base+0x47c>
   1c4a0:	ldr	r0, [fp, #-16]
   1c4a4:	movw	r1, #0
   1c4a8:	udiv	r0, r1, r0
   1c4ac:	ldr	r1, [fp, #-12]
   1c4b0:	cmp	r0, r1
   1c4b4:	bcc	1c558 <_obstack_memory_used@@Base+0x464>
   1c4b8:	b	1c570 <_obstack_memory_used@@Base+0x47c>
   1c4bc:	ldr	r0, [fp, #-16]
   1c4c0:	cmp	r0, #0
   1c4c4:	bne	1c4cc <_obstack_memory_used@@Base+0x3d8>
   1c4c8:	b	1c570 <_obstack_memory_used@@Base+0x47c>
   1c4cc:	ldr	r0, [fp, #-12]
   1c4d0:	cmp	r0, #0
   1c4d4:	bcs	1c540 <_obstack_memory_used@@Base+0x44c>
   1c4d8:	b	1c4e0 <_obstack_memory_used@@Base+0x3ec>
   1c4dc:	b	1c4e4 <_obstack_memory_used@@Base+0x3f0>
   1c4e0:	b	1c524 <_obstack_memory_used@@Base+0x430>
   1c4e4:	ldr	r0, [fp, #-12]
   1c4e8:	cmn	r0, #1
   1c4ec:	bne	1c524 <_obstack_memory_used@@Base+0x430>
   1c4f0:	b	1c50c <_obstack_memory_used@@Base+0x418>
   1c4f4:	ldr	r0, [fp, #-16]
   1c4f8:	add	r0, r0, #0
   1c4fc:	movw	r1, #0
   1c500:	cmp	r1, r0
   1c504:	bcc	1c558 <_obstack_memory_used@@Base+0x464>
   1c508:	b	1c570 <_obstack_memory_used@@Base+0x47c>
   1c50c:	ldr	r0, [fp, #-16]
   1c510:	sub	r0, r0, #1
   1c514:	mvn	r1, #0
   1c518:	cmp	r1, r0
   1c51c:	bcc	1c558 <_obstack_memory_used@@Base+0x464>
   1c520:	b	1c570 <_obstack_memory_used@@Base+0x47c>
   1c524:	ldr	r0, [fp, #-12]
   1c528:	movw	r1, #0
   1c52c:	udiv	r0, r1, r0
   1c530:	ldr	r1, [fp, #-16]
   1c534:	cmp	r0, r1
   1c538:	bcc	1c558 <_obstack_memory_used@@Base+0x464>
   1c53c:	b	1c570 <_obstack_memory_used@@Base+0x47c>
   1c540:	ldr	r0, [fp, #-16]
   1c544:	movw	r1, #255	; 0xff
   1c548:	udiv	r0, r1, r0
   1c54c:	ldr	r1, [fp, #-12]
   1c550:	cmp	r0, r1
   1c554:	bcs	1c570 <_obstack_memory_used@@Base+0x47c>
   1c558:	ldr	r0, [fp, #-12]
   1c55c:	ldr	r1, [fp, #-16]
   1c560:	mul	r0, r0, r1
   1c564:	and	r0, r0, #255	; 0xff
   1c568:	str	r0, [fp, #-20]	; 0xffffffec
   1c56c:	b	1d4b8 <_obstack_memory_used@@Base+0x13c4>
   1c570:	ldr	r0, [fp, #-12]
   1c574:	ldr	r1, [fp, #-16]
   1c578:	mul	r0, r0, r1
   1c57c:	and	r0, r0, #255	; 0xff
   1c580:	str	r0, [fp, #-20]	; 0xffffffec
   1c584:	b	1d4d0 <_obstack_memory_used@@Base+0x13dc>
   1c588:	b	1c940 <_obstack_memory_used@@Base+0x84c>
   1c58c:	b	1c760 <_obstack_memory_used@@Base+0x66c>
   1c590:	ldr	r0, [fp, #-16]
   1c594:	cmp	r0, #0
   1c598:	bcs	1c69c <_obstack_memory_used@@Base+0x5a8>
   1c59c:	ldr	r0, [fp, #-12]
   1c5a0:	cmp	r0, #0
   1c5a4:	bcs	1c62c <_obstack_memory_used@@Base+0x538>
   1c5a8:	b	1c5c8 <_obstack_memory_used@@Base+0x4d4>
   1c5ac:	ldr	r0, [fp, #-12]
   1c5b0:	ldr	r1, [fp, #-16]
   1c5b4:	movw	r2, #32767	; 0x7fff
   1c5b8:	udiv	r1, r2, r1
   1c5bc:	cmp	r0, r1
   1c5c0:	bcc	1c730 <_obstack_memory_used@@Base+0x63c>
   1c5c4:	b	1c748 <_obstack_memory_used@@Base+0x654>
   1c5c8:	b	1c5dc <_obstack_memory_used@@Base+0x4e8>
   1c5cc:	ldr	r0, [fp, #-16]
   1c5d0:	cmp	r0, #1
   1c5d4:	bcc	1c5ec <_obstack_memory_used@@Base+0x4f8>
   1c5d8:	b	1c5f8 <_obstack_memory_used@@Base+0x504>
   1c5dc:	ldr	r0, [fp, #-16]
   1c5e0:	movw	r1, #0
   1c5e4:	cmp	r1, r0
   1c5e8:	bcs	1c5f8 <_obstack_memory_used@@Base+0x504>
   1c5ec:	movw	r0, #0
   1c5f0:	str	r0, [fp, #-32]	; 0xffffffe0
   1c5f4:	b	1c610 <_obstack_memory_used@@Base+0x51c>
   1c5f8:	ldr	r0, [fp, #-16]
   1c5fc:	movw	r1, #0
   1c600:	sub	r0, r1, r0
   1c604:	movw	r1, #32767	; 0x7fff
   1c608:	udiv	r0, r1, r0
   1c60c:	str	r0, [fp, #-32]	; 0xffffffe0
   1c610:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c614:	ldr	r1, [fp, #-12]
   1c618:	mvn	r2, #0
   1c61c:	sub	r1, r2, r1
   1c620:	cmp	r0, r1
   1c624:	bls	1c730 <_obstack_memory_used@@Base+0x63c>
   1c628:	b	1c748 <_obstack_memory_used@@Base+0x654>
   1c62c:	ldr	r0, [fp, #-16]
   1c630:	cmn	r0, #1
   1c634:	bne	1c680 <_obstack_memory_used@@Base+0x58c>
   1c638:	b	1c658 <_obstack_memory_used@@Base+0x564>
   1c63c:	ldr	r0, [pc, #3760]	; 1d4f4 <_obstack_memory_used@@Base+0x1400>
   1c640:	ldr	r1, [fp, #-12]
   1c644:	add	r0, r1, r0
   1c648:	movw	r1, #0
   1c64c:	cmp	r1, r0
   1c650:	bcc	1c730 <_obstack_memory_used@@Base+0x63c>
   1c654:	b	1c748 <_obstack_memory_used@@Base+0x654>
   1c658:	ldr	r0, [fp, #-12]
   1c65c:	movw	r1, #0
   1c660:	cmp	r1, r0
   1c664:	bcs	1c748 <_obstack_memory_used@@Base+0x654>
   1c668:	ldr	r0, [fp, #-12]
   1c66c:	sub	r0, r0, #1
   1c670:	movw	r1, #32767	; 0x7fff
   1c674:	cmp	r1, r0
   1c678:	bcc	1c730 <_obstack_memory_used@@Base+0x63c>
   1c67c:	b	1c748 <_obstack_memory_used@@Base+0x654>
   1c680:	ldr	r0, [pc, #3692]	; 1d4f4 <_obstack_memory_used@@Base+0x1400>
   1c684:	ldr	r1, [fp, #-16]
   1c688:	udiv	r0, r0, r1
   1c68c:	ldr	r1, [fp, #-12]
   1c690:	cmp	r0, r1
   1c694:	bcc	1c730 <_obstack_memory_used@@Base+0x63c>
   1c698:	b	1c748 <_obstack_memory_used@@Base+0x654>
   1c69c:	ldr	r0, [fp, #-16]
   1c6a0:	cmp	r0, #0
   1c6a4:	bne	1c6ac <_obstack_memory_used@@Base+0x5b8>
   1c6a8:	b	1c748 <_obstack_memory_used@@Base+0x654>
   1c6ac:	ldr	r0, [fp, #-12]
   1c6b0:	cmp	r0, #0
   1c6b4:	bcs	1c718 <_obstack_memory_used@@Base+0x624>
   1c6b8:	ldr	r0, [fp, #-12]
   1c6bc:	cmn	r0, #1
   1c6c0:	bne	1c6fc <_obstack_memory_used@@Base+0x608>
   1c6c4:	b	1c6e4 <_obstack_memory_used@@Base+0x5f0>
   1c6c8:	ldr	r0, [pc, #3620]	; 1d4f4 <_obstack_memory_used@@Base+0x1400>
   1c6cc:	ldr	r1, [fp, #-16]
   1c6d0:	add	r0, r1, r0
   1c6d4:	movw	r1, #0
   1c6d8:	cmp	r1, r0
   1c6dc:	bcc	1c730 <_obstack_memory_used@@Base+0x63c>
   1c6e0:	b	1c748 <_obstack_memory_used@@Base+0x654>
   1c6e4:	ldr	r0, [fp, #-16]
   1c6e8:	sub	r0, r0, #1
   1c6ec:	movw	r1, #32767	; 0x7fff
   1c6f0:	cmp	r1, r0
   1c6f4:	bcc	1c730 <_obstack_memory_used@@Base+0x63c>
   1c6f8:	b	1c748 <_obstack_memory_used@@Base+0x654>
   1c6fc:	ldr	r0, [pc, #3568]	; 1d4f4 <_obstack_memory_used@@Base+0x1400>
   1c700:	ldr	r1, [fp, #-12]
   1c704:	udiv	r0, r0, r1
   1c708:	ldr	r1, [fp, #-16]
   1c70c:	cmp	r0, r1
   1c710:	bcc	1c730 <_obstack_memory_used@@Base+0x63c>
   1c714:	b	1c748 <_obstack_memory_used@@Base+0x654>
   1c718:	ldr	r0, [fp, #-16]
   1c71c:	movw	r1, #32767	; 0x7fff
   1c720:	udiv	r0, r1, r0
   1c724:	ldr	r1, [fp, #-12]
   1c728:	cmp	r0, r1
   1c72c:	bcs	1c748 <_obstack_memory_used@@Base+0x654>
   1c730:	ldr	r0, [fp, #-12]
   1c734:	ldr	r1, [fp, #-16]
   1c738:	mul	r0, r0, r1
   1c73c:	sxth	r0, r0
   1c740:	str	r0, [fp, #-20]	; 0xffffffec
   1c744:	b	1d4b8 <_obstack_memory_used@@Base+0x13c4>
   1c748:	ldr	r0, [fp, #-12]
   1c74c:	ldr	r1, [fp, #-16]
   1c750:	mul	r0, r0, r1
   1c754:	sxth	r0, r0
   1c758:	str	r0, [fp, #-20]	; 0xffffffec
   1c75c:	b	1d4d0 <_obstack_memory_used@@Base+0x13dc>
   1c760:	ldr	r0, [fp, #-16]
   1c764:	cmp	r0, #0
   1c768:	bcs	1c874 <_obstack_memory_used@@Base+0x780>
   1c76c:	ldr	r0, [fp, #-12]
   1c770:	cmp	r0, #0
   1c774:	bcs	1c7fc <_obstack_memory_used@@Base+0x708>
   1c778:	b	1c798 <_obstack_memory_used@@Base+0x6a4>
   1c77c:	ldr	r0, [fp, #-12]
   1c780:	ldr	r1, [fp, #-16]
   1c784:	movw	r2, #65535	; 0xffff
   1c788:	udiv	r1, r2, r1
   1c78c:	cmp	r0, r1
   1c790:	bcc	1c910 <_obstack_memory_used@@Base+0x81c>
   1c794:	b	1c928 <_obstack_memory_used@@Base+0x834>
   1c798:	b	1c7ac <_obstack_memory_used@@Base+0x6b8>
   1c79c:	ldr	r0, [fp, #-16]
   1c7a0:	cmp	r0, #1
   1c7a4:	bcc	1c7bc <_obstack_memory_used@@Base+0x6c8>
   1c7a8:	b	1c7c8 <_obstack_memory_used@@Base+0x6d4>
   1c7ac:	ldr	r0, [fp, #-16]
   1c7b0:	movw	r1, #0
   1c7b4:	cmp	r1, r0
   1c7b8:	bcs	1c7c8 <_obstack_memory_used@@Base+0x6d4>
   1c7bc:	movw	r0, #0
   1c7c0:	str	r0, [fp, #-36]	; 0xffffffdc
   1c7c4:	b	1c7e0 <_obstack_memory_used@@Base+0x6ec>
   1c7c8:	ldr	r0, [fp, #-16]
   1c7cc:	movw	r1, #0
   1c7d0:	sub	r0, r1, r0
   1c7d4:	movw	r1, #65535	; 0xffff
   1c7d8:	udiv	r0, r1, r0
   1c7dc:	str	r0, [fp, #-36]	; 0xffffffdc
   1c7e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c7e4:	ldr	r1, [fp, #-12]
   1c7e8:	mvn	r2, #0
   1c7ec:	sub	r1, r2, r1
   1c7f0:	cmp	r0, r1
   1c7f4:	bls	1c910 <_obstack_memory_used@@Base+0x81c>
   1c7f8:	b	1c928 <_obstack_memory_used@@Base+0x834>
   1c7fc:	b	1c804 <_obstack_memory_used@@Base+0x710>
   1c800:	b	1c808 <_obstack_memory_used@@Base+0x714>
   1c804:	b	1c858 <_obstack_memory_used@@Base+0x764>
   1c808:	ldr	r0, [fp, #-16]
   1c80c:	cmn	r0, #1
   1c810:	bne	1c858 <_obstack_memory_used@@Base+0x764>
   1c814:	b	1c830 <_obstack_memory_used@@Base+0x73c>
   1c818:	ldr	r0, [fp, #-12]
   1c81c:	add	r0, r0, #0
   1c820:	movw	r1, #0
   1c824:	cmp	r1, r0
   1c828:	bcc	1c910 <_obstack_memory_used@@Base+0x81c>
   1c82c:	b	1c928 <_obstack_memory_used@@Base+0x834>
   1c830:	ldr	r0, [fp, #-12]
   1c834:	movw	r1, #0
   1c838:	cmp	r1, r0
   1c83c:	bcs	1c928 <_obstack_memory_used@@Base+0x834>
   1c840:	ldr	r0, [fp, #-12]
   1c844:	sub	r0, r0, #1
   1c848:	mvn	r1, #0
   1c84c:	cmp	r1, r0
   1c850:	bcc	1c910 <_obstack_memory_used@@Base+0x81c>
   1c854:	b	1c928 <_obstack_memory_used@@Base+0x834>
   1c858:	ldr	r0, [fp, #-16]
   1c85c:	movw	r1, #0
   1c860:	udiv	r0, r1, r0
   1c864:	ldr	r1, [fp, #-12]
   1c868:	cmp	r0, r1
   1c86c:	bcc	1c910 <_obstack_memory_used@@Base+0x81c>
   1c870:	b	1c928 <_obstack_memory_used@@Base+0x834>
   1c874:	ldr	r0, [fp, #-16]
   1c878:	cmp	r0, #0
   1c87c:	bne	1c884 <_obstack_memory_used@@Base+0x790>
   1c880:	b	1c928 <_obstack_memory_used@@Base+0x834>
   1c884:	ldr	r0, [fp, #-12]
   1c888:	cmp	r0, #0
   1c88c:	bcs	1c8f8 <_obstack_memory_used@@Base+0x804>
   1c890:	b	1c898 <_obstack_memory_used@@Base+0x7a4>
   1c894:	b	1c89c <_obstack_memory_used@@Base+0x7a8>
   1c898:	b	1c8dc <_obstack_memory_used@@Base+0x7e8>
   1c89c:	ldr	r0, [fp, #-12]
   1c8a0:	cmn	r0, #1
   1c8a4:	bne	1c8dc <_obstack_memory_used@@Base+0x7e8>
   1c8a8:	b	1c8c4 <_obstack_memory_used@@Base+0x7d0>
   1c8ac:	ldr	r0, [fp, #-16]
   1c8b0:	add	r0, r0, #0
   1c8b4:	movw	r1, #0
   1c8b8:	cmp	r1, r0
   1c8bc:	bcc	1c910 <_obstack_memory_used@@Base+0x81c>
   1c8c0:	b	1c928 <_obstack_memory_used@@Base+0x834>
   1c8c4:	ldr	r0, [fp, #-16]
   1c8c8:	sub	r0, r0, #1
   1c8cc:	mvn	r1, #0
   1c8d0:	cmp	r1, r0
   1c8d4:	bcc	1c910 <_obstack_memory_used@@Base+0x81c>
   1c8d8:	b	1c928 <_obstack_memory_used@@Base+0x834>
   1c8dc:	ldr	r0, [fp, #-12]
   1c8e0:	movw	r1, #0
   1c8e4:	udiv	r0, r1, r0
   1c8e8:	ldr	r1, [fp, #-16]
   1c8ec:	cmp	r0, r1
   1c8f0:	bcc	1c910 <_obstack_memory_used@@Base+0x81c>
   1c8f4:	b	1c928 <_obstack_memory_used@@Base+0x834>
   1c8f8:	ldr	r0, [fp, #-16]
   1c8fc:	movw	r1, #65535	; 0xffff
   1c900:	udiv	r0, r1, r0
   1c904:	ldr	r1, [fp, #-12]
   1c908:	cmp	r0, r1
   1c90c:	bcs	1c928 <_obstack_memory_used@@Base+0x834>
   1c910:	ldr	r0, [fp, #-12]
   1c914:	ldr	r1, [fp, #-16]
   1c918:	mul	r0, r0, r1
   1c91c:	uxth	r0, r0
   1c920:	str	r0, [fp, #-20]	; 0xffffffec
   1c924:	b	1d4b8 <_obstack_memory_used@@Base+0x13c4>
   1c928:	ldr	r0, [fp, #-12]
   1c92c:	ldr	r1, [fp, #-16]
   1c930:	mul	r0, r0, r1
   1c934:	uxth	r0, r0
   1c938:	str	r0, [fp, #-20]	; 0xffffffec
   1c93c:	b	1d4d0 <_obstack_memory_used@@Base+0x13dc>
   1c940:	b	1c944 <_obstack_memory_used@@Base+0x850>
   1c944:	b	1cb08 <_obstack_memory_used@@Base+0xa14>
   1c948:	ldr	r0, [fp, #-16]
   1c94c:	cmp	r0, #0
   1c950:	bcs	1ca50 <_obstack_memory_used@@Base+0x95c>
   1c954:	ldr	r0, [fp, #-12]
   1c958:	cmp	r0, #0
   1c95c:	bcs	1c9e4 <_obstack_memory_used@@Base+0x8f0>
   1c960:	b	1c980 <_obstack_memory_used@@Base+0x88c>
   1c964:	ldr	r0, [pc, #2944]	; 1d4ec <_obstack_memory_used@@Base+0x13f8>
   1c968:	ldr	r1, [fp, #-12]
   1c96c:	ldr	r2, [fp, #-16]
   1c970:	udiv	r0, r0, r2
   1c974:	cmp	r1, r0
   1c978:	bcc	1cae0 <_obstack_memory_used@@Base+0x9ec>
   1c97c:	b	1caf4 <_obstack_memory_used@@Base+0xa00>
   1c980:	b	1c994 <_obstack_memory_used@@Base+0x8a0>
   1c984:	ldr	r0, [fp, #-16]
   1c988:	cmp	r0, #1
   1c98c:	bcc	1c9a4 <_obstack_memory_used@@Base+0x8b0>
   1c990:	b	1c9b0 <_obstack_memory_used@@Base+0x8bc>
   1c994:	ldr	r0, [fp, #-16]
   1c998:	movw	r1, #0
   1c99c:	cmp	r1, r0
   1c9a0:	bcs	1c9b0 <_obstack_memory_used@@Base+0x8bc>
   1c9a4:	movw	r0, #0
   1c9a8:	str	r0, [fp, #-40]	; 0xffffffd8
   1c9ac:	b	1c9c8 <_obstack_memory_used@@Base+0x8d4>
   1c9b0:	ldr	r0, [pc, #2868]	; 1d4ec <_obstack_memory_used@@Base+0x13f8>
   1c9b4:	ldr	r1, [fp, #-16]
   1c9b8:	movw	r2, #0
   1c9bc:	sub	r1, r2, r1
   1c9c0:	udiv	r0, r0, r1
   1c9c4:	str	r0, [fp, #-40]	; 0xffffffd8
   1c9c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c9cc:	ldr	r1, [fp, #-12]
   1c9d0:	mvn	r2, #0
   1c9d4:	sub	r1, r2, r1
   1c9d8:	cmp	r0, r1
   1c9dc:	bls	1cae0 <_obstack_memory_used@@Base+0x9ec>
   1c9e0:	b	1caf4 <_obstack_memory_used@@Base+0xa00>
   1c9e4:	ldr	r0, [fp, #-16]
   1c9e8:	cmn	r0, #1
   1c9ec:	bne	1ca34 <_obstack_memory_used@@Base+0x940>
   1c9f0:	b	1ca0c <_obstack_memory_used@@Base+0x918>
   1c9f4:	ldr	r0, [fp, #-12]
   1c9f8:	add	r0, r0, #-2147483648	; 0x80000000
   1c9fc:	movw	r1, #0
   1ca00:	cmp	r1, r0
   1ca04:	bcc	1cae0 <_obstack_memory_used@@Base+0x9ec>
   1ca08:	b	1caf4 <_obstack_memory_used@@Base+0xa00>
   1ca0c:	ldr	r0, [fp, #-12]
   1ca10:	movw	r1, #0
   1ca14:	cmp	r1, r0
   1ca18:	bcs	1caf4 <_obstack_memory_used@@Base+0xa00>
   1ca1c:	ldr	r0, [pc, #2760]	; 1d4ec <_obstack_memory_used@@Base+0x13f8>
   1ca20:	ldr	r1, [fp, #-12]
   1ca24:	sub	r1, r1, #1
   1ca28:	cmp	r0, r1
   1ca2c:	bcc	1cae0 <_obstack_memory_used@@Base+0x9ec>
   1ca30:	b	1caf4 <_obstack_memory_used@@Base+0xa00>
   1ca34:	ldr	r0, [pc, #2740]	; 1d4f0 <_obstack_memory_used@@Base+0x13fc>
   1ca38:	ldr	r1, [fp, #-16]
   1ca3c:	udiv	r0, r0, r1
   1ca40:	ldr	r1, [fp, #-12]
   1ca44:	cmp	r0, r1
   1ca48:	bcc	1cae0 <_obstack_memory_used@@Base+0x9ec>
   1ca4c:	b	1caf4 <_obstack_memory_used@@Base+0xa00>
   1ca50:	ldr	r0, [fp, #-16]
   1ca54:	cmp	r0, #0
   1ca58:	bne	1ca60 <_obstack_memory_used@@Base+0x96c>
   1ca5c:	b	1caf4 <_obstack_memory_used@@Base+0xa00>
   1ca60:	ldr	r0, [fp, #-12]
   1ca64:	cmp	r0, #0
   1ca68:	bcs	1cac8 <_obstack_memory_used@@Base+0x9d4>
   1ca6c:	ldr	r0, [fp, #-12]
   1ca70:	cmn	r0, #1
   1ca74:	bne	1caac <_obstack_memory_used@@Base+0x9b8>
   1ca78:	b	1ca94 <_obstack_memory_used@@Base+0x9a0>
   1ca7c:	ldr	r0, [fp, #-16]
   1ca80:	add	r0, r0, #-2147483648	; 0x80000000
   1ca84:	movw	r1, #0
   1ca88:	cmp	r1, r0
   1ca8c:	bcc	1cae0 <_obstack_memory_used@@Base+0x9ec>
   1ca90:	b	1caf4 <_obstack_memory_used@@Base+0xa00>
   1ca94:	ldr	r0, [pc, #2640]	; 1d4ec <_obstack_memory_used@@Base+0x13f8>
   1ca98:	ldr	r1, [fp, #-16]
   1ca9c:	sub	r1, r1, #1
   1caa0:	cmp	r0, r1
   1caa4:	bcc	1cae0 <_obstack_memory_used@@Base+0x9ec>
   1caa8:	b	1caf4 <_obstack_memory_used@@Base+0xa00>
   1caac:	ldr	r0, [pc, #2620]	; 1d4f0 <_obstack_memory_used@@Base+0x13fc>
   1cab0:	ldr	r1, [fp, #-12]
   1cab4:	udiv	r0, r0, r1
   1cab8:	ldr	r1, [fp, #-16]
   1cabc:	cmp	r0, r1
   1cac0:	bcc	1cae0 <_obstack_memory_used@@Base+0x9ec>
   1cac4:	b	1caf4 <_obstack_memory_used@@Base+0xa00>
   1cac8:	ldr	r0, [pc, #2588]	; 1d4ec <_obstack_memory_used@@Base+0x13f8>
   1cacc:	ldr	r1, [fp, #-16]
   1cad0:	udiv	r0, r0, r1
   1cad4:	ldr	r1, [fp, #-12]
   1cad8:	cmp	r0, r1
   1cadc:	bcs	1caf4 <_obstack_memory_used@@Base+0xa00>
   1cae0:	ldr	r0, [fp, #-12]
   1cae4:	ldr	r1, [fp, #-16]
   1cae8:	mul	r0, r0, r1
   1caec:	str	r0, [fp, #-20]	; 0xffffffec
   1caf0:	b	1d4b8 <_obstack_memory_used@@Base+0x13c4>
   1caf4:	ldr	r0, [fp, #-12]
   1caf8:	ldr	r1, [fp, #-16]
   1cafc:	mul	r0, r0, r1
   1cb00:	str	r0, [fp, #-20]	; 0xffffffec
   1cb04:	b	1d4d0 <_obstack_memory_used@@Base+0x13dc>
   1cb08:	ldr	r0, [fp, #-16]
   1cb0c:	cmp	r0, #0
   1cb10:	bcs	1cc1c <_obstack_memory_used@@Base+0xb28>
   1cb14:	ldr	r0, [fp, #-12]
   1cb18:	cmp	r0, #0
   1cb1c:	bcs	1cba4 <_obstack_memory_used@@Base+0xab0>
   1cb20:	b	1cb40 <_obstack_memory_used@@Base+0xa4c>
   1cb24:	ldr	r0, [fp, #-12]
   1cb28:	ldr	r1, [fp, #-16]
   1cb2c:	mvn	r2, #0
   1cb30:	udiv	r1, r2, r1
   1cb34:	cmp	r0, r1
   1cb38:	bcc	1ccb8 <_obstack_memory_used@@Base+0xbc4>
   1cb3c:	b	1cccc <_obstack_memory_used@@Base+0xbd8>
   1cb40:	b	1cb54 <_obstack_memory_used@@Base+0xa60>
   1cb44:	ldr	r0, [fp, #-16]
   1cb48:	cmp	r0, #1
   1cb4c:	bcc	1cb64 <_obstack_memory_used@@Base+0xa70>
   1cb50:	b	1cb70 <_obstack_memory_used@@Base+0xa7c>
   1cb54:	ldr	r0, [fp, #-16]
   1cb58:	movw	r1, #0
   1cb5c:	cmp	r1, r0
   1cb60:	bcs	1cb70 <_obstack_memory_used@@Base+0xa7c>
   1cb64:	movw	r0, #1
   1cb68:	str	r0, [fp, #-44]	; 0xffffffd4
   1cb6c:	b	1cb88 <_obstack_memory_used@@Base+0xa94>
   1cb70:	ldr	r0, [fp, #-16]
   1cb74:	movw	r1, #0
   1cb78:	sub	r0, r1, r0
   1cb7c:	mvn	r1, #0
   1cb80:	udiv	r0, r1, r0
   1cb84:	str	r0, [fp, #-44]	; 0xffffffd4
   1cb88:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1cb8c:	ldr	r1, [fp, #-12]
   1cb90:	mvn	r2, #0
   1cb94:	sub	r1, r2, r1
   1cb98:	cmp	r0, r1
   1cb9c:	bls	1ccb8 <_obstack_memory_used@@Base+0xbc4>
   1cba0:	b	1cccc <_obstack_memory_used@@Base+0xbd8>
   1cba4:	b	1cbac <_obstack_memory_used@@Base+0xab8>
   1cba8:	b	1cbb0 <_obstack_memory_used@@Base+0xabc>
   1cbac:	b	1cc00 <_obstack_memory_used@@Base+0xb0c>
   1cbb0:	ldr	r0, [fp, #-16]
   1cbb4:	cmn	r0, #1
   1cbb8:	bne	1cc00 <_obstack_memory_used@@Base+0xb0c>
   1cbbc:	b	1cbd8 <_obstack_memory_used@@Base+0xae4>
   1cbc0:	ldr	r0, [fp, #-12]
   1cbc4:	add	r0, r0, #0
   1cbc8:	movw	r1, #0
   1cbcc:	cmp	r1, r0
   1cbd0:	bcc	1ccb8 <_obstack_memory_used@@Base+0xbc4>
   1cbd4:	b	1cccc <_obstack_memory_used@@Base+0xbd8>
   1cbd8:	ldr	r0, [fp, #-12]
   1cbdc:	movw	r1, #0
   1cbe0:	cmp	r1, r0
   1cbe4:	bcs	1cccc <_obstack_memory_used@@Base+0xbd8>
   1cbe8:	ldr	r0, [fp, #-12]
   1cbec:	sub	r0, r0, #1
   1cbf0:	mvn	r1, #0
   1cbf4:	cmp	r1, r0
   1cbf8:	bcc	1ccb8 <_obstack_memory_used@@Base+0xbc4>
   1cbfc:	b	1cccc <_obstack_memory_used@@Base+0xbd8>
   1cc00:	ldr	r0, [fp, #-16]
   1cc04:	movw	r1, #0
   1cc08:	udiv	r0, r1, r0
   1cc0c:	ldr	r1, [fp, #-12]
   1cc10:	cmp	r0, r1
   1cc14:	bcc	1ccb8 <_obstack_memory_used@@Base+0xbc4>
   1cc18:	b	1cccc <_obstack_memory_used@@Base+0xbd8>
   1cc1c:	ldr	r0, [fp, #-16]
   1cc20:	cmp	r0, #0
   1cc24:	bne	1cc2c <_obstack_memory_used@@Base+0xb38>
   1cc28:	b	1cccc <_obstack_memory_used@@Base+0xbd8>
   1cc2c:	ldr	r0, [fp, #-12]
   1cc30:	cmp	r0, #0
   1cc34:	bcs	1cca0 <_obstack_memory_used@@Base+0xbac>
   1cc38:	b	1cc40 <_obstack_memory_used@@Base+0xb4c>
   1cc3c:	b	1cc44 <_obstack_memory_used@@Base+0xb50>
   1cc40:	b	1cc84 <_obstack_memory_used@@Base+0xb90>
   1cc44:	ldr	r0, [fp, #-12]
   1cc48:	cmn	r0, #1
   1cc4c:	bne	1cc84 <_obstack_memory_used@@Base+0xb90>
   1cc50:	b	1cc6c <_obstack_memory_used@@Base+0xb78>
   1cc54:	ldr	r0, [fp, #-16]
   1cc58:	add	r0, r0, #0
   1cc5c:	movw	r1, #0
   1cc60:	cmp	r1, r0
   1cc64:	bcc	1ccb8 <_obstack_memory_used@@Base+0xbc4>
   1cc68:	b	1cccc <_obstack_memory_used@@Base+0xbd8>
   1cc6c:	ldr	r0, [fp, #-16]
   1cc70:	sub	r0, r0, #1
   1cc74:	mvn	r1, #0
   1cc78:	cmp	r1, r0
   1cc7c:	bcc	1ccb8 <_obstack_memory_used@@Base+0xbc4>
   1cc80:	b	1cccc <_obstack_memory_used@@Base+0xbd8>
   1cc84:	ldr	r0, [fp, #-12]
   1cc88:	movw	r1, #0
   1cc8c:	udiv	r0, r1, r0
   1cc90:	ldr	r1, [fp, #-16]
   1cc94:	cmp	r0, r1
   1cc98:	bcc	1ccb8 <_obstack_memory_used@@Base+0xbc4>
   1cc9c:	b	1cccc <_obstack_memory_used@@Base+0xbd8>
   1cca0:	ldr	r0, [fp, #-16]
   1cca4:	mvn	r1, #0
   1cca8:	udiv	r0, r1, r0
   1ccac:	ldr	r1, [fp, #-12]
   1ccb0:	cmp	r0, r1
   1ccb4:	bcs	1cccc <_obstack_memory_used@@Base+0xbd8>
   1ccb8:	ldr	r0, [fp, #-12]
   1ccbc:	ldr	r1, [fp, #-16]
   1ccc0:	mul	r0, r0, r1
   1ccc4:	str	r0, [fp, #-20]	; 0xffffffec
   1ccc8:	b	1d4b8 <_obstack_memory_used@@Base+0x13c4>
   1cccc:	ldr	r0, [fp, #-12]
   1ccd0:	ldr	r1, [fp, #-16]
   1ccd4:	mul	r0, r0, r1
   1ccd8:	str	r0, [fp, #-20]	; 0xffffffec
   1ccdc:	b	1d4d0 <_obstack_memory_used@@Base+0x13dc>
   1cce0:	b	1cce4 <_obstack_memory_used@@Base+0xbf0>
   1cce4:	b	1cea8 <_obstack_memory_used@@Base+0xdb4>
   1cce8:	ldr	r0, [fp, #-16]
   1ccec:	cmp	r0, #0
   1ccf0:	bcs	1cdf0 <_obstack_memory_used@@Base+0xcfc>
   1ccf4:	ldr	r0, [fp, #-12]
   1ccf8:	cmp	r0, #0
   1ccfc:	bcs	1cd84 <_obstack_memory_used@@Base+0xc90>
   1cd00:	b	1cd20 <_obstack_memory_used@@Base+0xc2c>
   1cd04:	ldr	r0, [pc, #2016]	; 1d4ec <_obstack_memory_used@@Base+0x13f8>
   1cd08:	ldr	r1, [fp, #-12]
   1cd0c:	ldr	r2, [fp, #-16]
   1cd10:	udiv	r0, r0, r2
   1cd14:	cmp	r1, r0
   1cd18:	bcc	1ce80 <_obstack_memory_used@@Base+0xd8c>
   1cd1c:	b	1ce94 <_obstack_memory_used@@Base+0xda0>
   1cd20:	b	1cd34 <_obstack_memory_used@@Base+0xc40>
   1cd24:	ldr	r0, [fp, #-16]
   1cd28:	cmp	r0, #1
   1cd2c:	bcc	1cd44 <_obstack_memory_used@@Base+0xc50>
   1cd30:	b	1cd50 <_obstack_memory_used@@Base+0xc5c>
   1cd34:	ldr	r0, [fp, #-16]
   1cd38:	movw	r1, #0
   1cd3c:	cmp	r1, r0
   1cd40:	bcs	1cd50 <_obstack_memory_used@@Base+0xc5c>
   1cd44:	movw	r0, #0
   1cd48:	str	r0, [sp, #48]	; 0x30
   1cd4c:	b	1cd68 <_obstack_memory_used@@Base+0xc74>
   1cd50:	ldr	r0, [pc, #1940]	; 1d4ec <_obstack_memory_used@@Base+0x13f8>
   1cd54:	ldr	r1, [fp, #-16]
   1cd58:	movw	r2, #0
   1cd5c:	sub	r1, r2, r1
   1cd60:	udiv	r0, r0, r1
   1cd64:	str	r0, [sp, #48]	; 0x30
   1cd68:	ldr	r0, [sp, #48]	; 0x30
   1cd6c:	ldr	r1, [fp, #-12]
   1cd70:	mvn	r2, #0
   1cd74:	sub	r1, r2, r1
   1cd78:	cmp	r0, r1
   1cd7c:	bls	1ce80 <_obstack_memory_used@@Base+0xd8c>
   1cd80:	b	1ce94 <_obstack_memory_used@@Base+0xda0>
   1cd84:	ldr	r0, [fp, #-16]
   1cd88:	cmn	r0, #1
   1cd8c:	bne	1cdd4 <_obstack_memory_used@@Base+0xce0>
   1cd90:	b	1cdac <_obstack_memory_used@@Base+0xcb8>
   1cd94:	ldr	r0, [fp, #-12]
   1cd98:	add	r0, r0, #-2147483648	; 0x80000000
   1cd9c:	movw	r1, #0
   1cda0:	cmp	r1, r0
   1cda4:	bcc	1ce80 <_obstack_memory_used@@Base+0xd8c>
   1cda8:	b	1ce94 <_obstack_memory_used@@Base+0xda0>
   1cdac:	ldr	r0, [fp, #-12]
   1cdb0:	movw	r1, #0
   1cdb4:	cmp	r1, r0
   1cdb8:	bcs	1ce94 <_obstack_memory_used@@Base+0xda0>
   1cdbc:	ldr	r0, [pc, #1832]	; 1d4ec <_obstack_memory_used@@Base+0x13f8>
   1cdc0:	ldr	r1, [fp, #-12]
   1cdc4:	sub	r1, r1, #1
   1cdc8:	cmp	r0, r1
   1cdcc:	bcc	1ce80 <_obstack_memory_used@@Base+0xd8c>
   1cdd0:	b	1ce94 <_obstack_memory_used@@Base+0xda0>
   1cdd4:	ldr	r0, [pc, #1812]	; 1d4f0 <_obstack_memory_used@@Base+0x13fc>
   1cdd8:	ldr	r1, [fp, #-16]
   1cddc:	udiv	r0, r0, r1
   1cde0:	ldr	r1, [fp, #-12]
   1cde4:	cmp	r0, r1
   1cde8:	bcc	1ce80 <_obstack_memory_used@@Base+0xd8c>
   1cdec:	b	1ce94 <_obstack_memory_used@@Base+0xda0>
   1cdf0:	ldr	r0, [fp, #-16]
   1cdf4:	cmp	r0, #0
   1cdf8:	bne	1ce00 <_obstack_memory_used@@Base+0xd0c>
   1cdfc:	b	1ce94 <_obstack_memory_used@@Base+0xda0>
   1ce00:	ldr	r0, [fp, #-12]
   1ce04:	cmp	r0, #0
   1ce08:	bcs	1ce68 <_obstack_memory_used@@Base+0xd74>
   1ce0c:	ldr	r0, [fp, #-12]
   1ce10:	cmn	r0, #1
   1ce14:	bne	1ce4c <_obstack_memory_used@@Base+0xd58>
   1ce18:	b	1ce34 <_obstack_memory_used@@Base+0xd40>
   1ce1c:	ldr	r0, [fp, #-16]
   1ce20:	add	r0, r0, #-2147483648	; 0x80000000
   1ce24:	movw	r1, #0
   1ce28:	cmp	r1, r0
   1ce2c:	bcc	1ce80 <_obstack_memory_used@@Base+0xd8c>
   1ce30:	b	1ce94 <_obstack_memory_used@@Base+0xda0>
   1ce34:	ldr	r0, [pc, #1712]	; 1d4ec <_obstack_memory_used@@Base+0x13f8>
   1ce38:	ldr	r1, [fp, #-16]
   1ce3c:	sub	r1, r1, #1
   1ce40:	cmp	r0, r1
   1ce44:	bcc	1ce80 <_obstack_memory_used@@Base+0xd8c>
   1ce48:	b	1ce94 <_obstack_memory_used@@Base+0xda0>
   1ce4c:	ldr	r0, [pc, #1692]	; 1d4f0 <_obstack_memory_used@@Base+0x13fc>
   1ce50:	ldr	r1, [fp, #-12]
   1ce54:	udiv	r0, r0, r1
   1ce58:	ldr	r1, [fp, #-16]
   1ce5c:	cmp	r0, r1
   1ce60:	bcc	1ce80 <_obstack_memory_used@@Base+0xd8c>
   1ce64:	b	1ce94 <_obstack_memory_used@@Base+0xda0>
   1ce68:	ldr	r0, [pc, #1660]	; 1d4ec <_obstack_memory_used@@Base+0x13f8>
   1ce6c:	ldr	r1, [fp, #-16]
   1ce70:	udiv	r0, r0, r1
   1ce74:	ldr	r1, [fp, #-12]
   1ce78:	cmp	r0, r1
   1ce7c:	bcs	1ce94 <_obstack_memory_used@@Base+0xda0>
   1ce80:	ldr	r0, [fp, #-12]
   1ce84:	ldr	r1, [fp, #-16]
   1ce88:	mul	r0, r0, r1
   1ce8c:	str	r0, [fp, #-20]	; 0xffffffec
   1ce90:	b	1d4b8 <_obstack_memory_used@@Base+0x13c4>
   1ce94:	ldr	r0, [fp, #-12]
   1ce98:	ldr	r1, [fp, #-16]
   1ce9c:	mul	r0, r0, r1
   1cea0:	str	r0, [fp, #-20]	; 0xffffffec
   1cea4:	b	1d4d0 <_obstack_memory_used@@Base+0x13dc>
   1cea8:	ldr	r0, [fp, #-16]
   1ceac:	cmp	r0, #0
   1ceb0:	bcs	1cfbc <_obstack_memory_used@@Base+0xec8>
   1ceb4:	ldr	r0, [fp, #-12]
   1ceb8:	cmp	r0, #0
   1cebc:	bcs	1cf44 <_obstack_memory_used@@Base+0xe50>
   1cec0:	b	1cee0 <_obstack_memory_used@@Base+0xdec>
   1cec4:	ldr	r0, [fp, #-12]
   1cec8:	ldr	r1, [fp, #-16]
   1cecc:	mvn	r2, #0
   1ced0:	udiv	r1, r2, r1
   1ced4:	cmp	r0, r1
   1ced8:	bcc	1d058 <_obstack_memory_used@@Base+0xf64>
   1cedc:	b	1d06c <_obstack_memory_used@@Base+0xf78>
   1cee0:	b	1cef4 <_obstack_memory_used@@Base+0xe00>
   1cee4:	ldr	r0, [fp, #-16]
   1cee8:	cmp	r0, #1
   1ceec:	bcc	1cf04 <_obstack_memory_used@@Base+0xe10>
   1cef0:	b	1cf10 <_obstack_memory_used@@Base+0xe1c>
   1cef4:	ldr	r0, [fp, #-16]
   1cef8:	movw	r1, #0
   1cefc:	cmp	r1, r0
   1cf00:	bcs	1cf10 <_obstack_memory_used@@Base+0xe1c>
   1cf04:	movw	r0, #1
   1cf08:	str	r0, [sp, #44]	; 0x2c
   1cf0c:	b	1cf28 <_obstack_memory_used@@Base+0xe34>
   1cf10:	ldr	r0, [fp, #-16]
   1cf14:	movw	r1, #0
   1cf18:	sub	r0, r1, r0
   1cf1c:	mvn	r1, #0
   1cf20:	udiv	r0, r1, r0
   1cf24:	str	r0, [sp, #44]	; 0x2c
   1cf28:	ldr	r0, [sp, #44]	; 0x2c
   1cf2c:	ldr	r1, [fp, #-12]
   1cf30:	mvn	r2, #0
   1cf34:	sub	r1, r2, r1
   1cf38:	cmp	r0, r1
   1cf3c:	bls	1d058 <_obstack_memory_used@@Base+0xf64>
   1cf40:	b	1d06c <_obstack_memory_used@@Base+0xf78>
   1cf44:	b	1cf4c <_obstack_memory_used@@Base+0xe58>
   1cf48:	b	1cf50 <_obstack_memory_used@@Base+0xe5c>
   1cf4c:	b	1cfa0 <_obstack_memory_used@@Base+0xeac>
   1cf50:	ldr	r0, [fp, #-16]
   1cf54:	cmn	r0, #1
   1cf58:	bne	1cfa0 <_obstack_memory_used@@Base+0xeac>
   1cf5c:	b	1cf78 <_obstack_memory_used@@Base+0xe84>
   1cf60:	ldr	r0, [fp, #-12]
   1cf64:	add	r0, r0, #0
   1cf68:	movw	r1, #0
   1cf6c:	cmp	r1, r0
   1cf70:	bcc	1d058 <_obstack_memory_used@@Base+0xf64>
   1cf74:	b	1d06c <_obstack_memory_used@@Base+0xf78>
   1cf78:	ldr	r0, [fp, #-12]
   1cf7c:	movw	r1, #0
   1cf80:	cmp	r1, r0
   1cf84:	bcs	1d06c <_obstack_memory_used@@Base+0xf78>
   1cf88:	ldr	r0, [fp, #-12]
   1cf8c:	sub	r0, r0, #1
   1cf90:	mvn	r1, #0
   1cf94:	cmp	r1, r0
   1cf98:	bcc	1d058 <_obstack_memory_used@@Base+0xf64>
   1cf9c:	b	1d06c <_obstack_memory_used@@Base+0xf78>
   1cfa0:	ldr	r0, [fp, #-16]
   1cfa4:	movw	r1, #0
   1cfa8:	udiv	r0, r1, r0
   1cfac:	ldr	r1, [fp, #-12]
   1cfb0:	cmp	r0, r1
   1cfb4:	bcc	1d058 <_obstack_memory_used@@Base+0xf64>
   1cfb8:	b	1d06c <_obstack_memory_used@@Base+0xf78>
   1cfbc:	ldr	r0, [fp, #-16]
   1cfc0:	cmp	r0, #0
   1cfc4:	bne	1cfcc <_obstack_memory_used@@Base+0xed8>
   1cfc8:	b	1d06c <_obstack_memory_used@@Base+0xf78>
   1cfcc:	ldr	r0, [fp, #-12]
   1cfd0:	cmp	r0, #0
   1cfd4:	bcs	1d040 <_obstack_memory_used@@Base+0xf4c>
   1cfd8:	b	1cfe0 <_obstack_memory_used@@Base+0xeec>
   1cfdc:	b	1cfe4 <_obstack_memory_used@@Base+0xef0>
   1cfe0:	b	1d024 <_obstack_memory_used@@Base+0xf30>
   1cfe4:	ldr	r0, [fp, #-12]
   1cfe8:	cmn	r0, #1
   1cfec:	bne	1d024 <_obstack_memory_used@@Base+0xf30>
   1cff0:	b	1d00c <_obstack_memory_used@@Base+0xf18>
   1cff4:	ldr	r0, [fp, #-16]
   1cff8:	add	r0, r0, #0
   1cffc:	movw	r1, #0
   1d000:	cmp	r1, r0
   1d004:	bcc	1d058 <_obstack_memory_used@@Base+0xf64>
   1d008:	b	1d06c <_obstack_memory_used@@Base+0xf78>
   1d00c:	ldr	r0, [fp, #-16]
   1d010:	sub	r0, r0, #1
   1d014:	mvn	r1, #0
   1d018:	cmp	r1, r0
   1d01c:	bcc	1d058 <_obstack_memory_used@@Base+0xf64>
   1d020:	b	1d06c <_obstack_memory_used@@Base+0xf78>
   1d024:	ldr	r0, [fp, #-12]
   1d028:	movw	r1, #0
   1d02c:	udiv	r0, r1, r0
   1d030:	ldr	r1, [fp, #-16]
   1d034:	cmp	r0, r1
   1d038:	bcc	1d058 <_obstack_memory_used@@Base+0xf64>
   1d03c:	b	1d06c <_obstack_memory_used@@Base+0xf78>
   1d040:	ldr	r0, [fp, #-16]
   1d044:	mvn	r1, #0
   1d048:	udiv	r0, r1, r0
   1d04c:	ldr	r1, [fp, #-12]
   1d050:	cmp	r0, r1
   1d054:	bcs	1d06c <_obstack_memory_used@@Base+0xf78>
   1d058:	ldr	r0, [fp, #-12]
   1d05c:	ldr	r1, [fp, #-16]
   1d060:	mul	r0, r0, r1
   1d064:	str	r0, [fp, #-20]	; 0xffffffec
   1d068:	b	1d4b8 <_obstack_memory_used@@Base+0x13c4>
   1d06c:	ldr	r0, [fp, #-12]
   1d070:	ldr	r1, [fp, #-16]
   1d074:	mul	r0, r0, r1
   1d078:	str	r0, [fp, #-20]	; 0xffffffec
   1d07c:	b	1d4d0 <_obstack_memory_used@@Base+0x13dc>
   1d080:	b	1d29c <_obstack_memory_used@@Base+0x11a8>
   1d084:	ldr	r0, [fp, #-16]
   1d088:	cmp	r0, #0
   1d08c:	bcs	1d1cc <_obstack_memory_used@@Base+0x10d8>
   1d090:	ldr	r0, [fp, #-12]
   1d094:	cmp	r0, #0
   1d098:	bcs	1d158 <_obstack_memory_used@@Base+0x1064>
   1d09c:	b	1d0a0 <_obstack_memory_used@@Base+0xfac>
   1d0a0:	ldr	r0, [fp, #-12]
   1d0a4:	ldr	r2, [fp, #-16]
   1d0a8:	mvn	r1, #0
   1d0ac:	mvn	r3, #-2147483648	; 0x80000000
   1d0b0:	mov	ip, #0
   1d0b4:	str	r0, [sp, #40]	; 0x28
   1d0b8:	mov	r0, r1
   1d0bc:	mov	r1, r3
   1d0c0:	mov	r3, ip
   1d0c4:	bl	1e128 <_obstack_memory_used@@Base+0x2034>
   1d0c8:	ldr	r2, [sp, #40]	; 0x28
   1d0cc:	subs	r0, r2, r0
   1d0d0:	rscs	r1, r1, #0
   1d0d4:	blt	1d274 <_obstack_memory_used@@Base+0x1180>
   1d0d8:	b	1d288 <_obstack_memory_used@@Base+0x1194>
   1d0dc:	b	1d0f0 <_obstack_memory_used@@Base+0xffc>
   1d0e0:	ldr	r0, [fp, #-16]
   1d0e4:	cmp	r0, #1
   1d0e8:	bcc	1d100 <_obstack_memory_used@@Base+0x100c>
   1d0ec:	b	1d114 <_obstack_memory_used@@Base+0x1020>
   1d0f0:	ldr	r0, [fp, #-16]
   1d0f4:	movw	r1, #0
   1d0f8:	cmp	r1, r0
   1d0fc:	bcs	1d114 <_obstack_memory_used@@Base+0x1020>
   1d100:	mov	r0, #0
   1d104:	mvn	r1, #0
   1d108:	str	r1, [sp, #36]	; 0x24
   1d10c:	str	r0, [sp, #32]
   1d110:	b	1d138 <_obstack_memory_used@@Base+0x1044>
   1d114:	ldr	r0, [fp, #-16]
   1d118:	rsb	r2, r0, #0
   1d11c:	mvn	r0, #0
   1d120:	mvn	r1, #-2147483648	; 0x80000000
   1d124:	mov	r3, #0
   1d128:	bl	1e128 <_obstack_memory_used@@Base+0x2034>
   1d12c:	str	r0, [sp, #36]	; 0x24
   1d130:	str	r1, [sp, #32]
   1d134:	b	1d138 <_obstack_memory_used@@Base+0x1044>
   1d138:	ldr	r0, [sp, #32]
   1d13c:	ldr	r1, [sp, #36]	; 0x24
   1d140:	ldr	r2, [fp, #-12]
   1d144:	mvn	r2, r2
   1d148:	subs	r1, r2, r1
   1d14c:	rscs	r0, r0, #0
   1d150:	bge	1d274 <_obstack_memory_used@@Base+0x1180>
   1d154:	b	1d288 <_obstack_memory_used@@Base+0x1194>
   1d158:	ldr	r0, [fp, #-16]
   1d15c:	cmn	r0, #1
   1d160:	bne	1d1a0 <_obstack_memory_used@@Base+0x10ac>
   1d164:	b	1d180 <_obstack_memory_used@@Base+0x108c>
   1d168:	ldr	r0, [fp, #-12]
   1d16c:	rsbs	r0, r0, #0
   1d170:	mov	r1, #0
   1d174:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1d178:	blt	1d274 <_obstack_memory_used@@Base+0x1180>
   1d17c:	b	1d288 <_obstack_memory_used@@Base+0x1194>
   1d180:	ldr	r0, [fp, #-12]
   1d184:	movw	r1, #0
   1d188:	cmp	r1, r0
   1d18c:	bcs	1d288 <_obstack_memory_used@@Base+0x1194>
   1d190:	mov	r0, #0
   1d194:	cmp	r0, #0
   1d198:	bne	1d274 <_obstack_memory_used@@Base+0x1180>
   1d19c:	b	1d288 <_obstack_memory_used@@Base+0x1194>
   1d1a0:	ldr	r2, [fp, #-16]
   1d1a4:	mov	r1, #-2147483648	; 0x80000000
   1d1a8:	mov	r0, #0
   1d1ac:	str	r0, [sp, #28]
   1d1b0:	ldr	r3, [sp, #28]
   1d1b4:	bl	1e054 <_obstack_memory_used@@Base+0x1f60>
   1d1b8:	ldr	r2, [fp, #-12]
   1d1bc:	subs	r0, r0, r2
   1d1c0:	sbcs	r1, r1, #0
   1d1c4:	blt	1d274 <_obstack_memory_used@@Base+0x1180>
   1d1c8:	b	1d288 <_obstack_memory_used@@Base+0x1194>
   1d1cc:	ldr	r0, [fp, #-16]
   1d1d0:	cmp	r0, #0
   1d1d4:	bne	1d1dc <_obstack_memory_used@@Base+0x10e8>
   1d1d8:	b	1d288 <_obstack_memory_used@@Base+0x1194>
   1d1dc:	ldr	r0, [fp, #-12]
   1d1e0:	cmp	r0, #0
   1d1e4:	bcs	1d24c <_obstack_memory_used@@Base+0x1158>
   1d1e8:	ldr	r0, [fp, #-12]
   1d1ec:	cmn	r0, #1
   1d1f0:	bne	1d220 <_obstack_memory_used@@Base+0x112c>
   1d1f4:	b	1d210 <_obstack_memory_used@@Base+0x111c>
   1d1f8:	ldr	r0, [fp, #-16]
   1d1fc:	rsbs	r0, r0, #0
   1d200:	mov	r1, #0
   1d204:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1d208:	blt	1d274 <_obstack_memory_used@@Base+0x1180>
   1d20c:	b	1d288 <_obstack_memory_used@@Base+0x1194>
   1d210:	mov	r0, #0
   1d214:	cmp	r0, #0
   1d218:	bne	1d274 <_obstack_memory_used@@Base+0x1180>
   1d21c:	b	1d288 <_obstack_memory_used@@Base+0x1194>
   1d220:	ldr	r2, [fp, #-12]
   1d224:	mov	r1, #-2147483648	; 0x80000000
   1d228:	mov	r0, #0
   1d22c:	str	r0, [sp, #24]
   1d230:	ldr	r3, [sp, #24]
   1d234:	bl	1e054 <_obstack_memory_used@@Base+0x1f60>
   1d238:	ldr	r2, [fp, #-16]
   1d23c:	subs	r0, r0, r2
   1d240:	sbcs	r1, r1, #0
   1d244:	blt	1d274 <_obstack_memory_used@@Base+0x1180>
   1d248:	b	1d288 <_obstack_memory_used@@Base+0x1194>
   1d24c:	ldr	r2, [fp, #-16]
   1d250:	mvn	r0, #0
   1d254:	mvn	r1, #-2147483648	; 0x80000000
   1d258:	mov	r3, #0
   1d25c:	bl	1e128 <_obstack_memory_used@@Base+0x2034>
   1d260:	ldr	r2, [fp, #-12]
   1d264:	subs	r0, r0, r2
   1d268:	sbcs	r1, r1, #0
   1d26c:	bge	1d288 <_obstack_memory_used@@Base+0x1194>
   1d270:	b	1d274 <_obstack_memory_used@@Base+0x1180>
   1d274:	ldr	r0, [fp, #-12]
   1d278:	ldr	r1, [fp, #-16]
   1d27c:	mul	r0, r0, r1
   1d280:	str	r0, [fp, #-20]	; 0xffffffec
   1d284:	b	1d4b8 <_obstack_memory_used@@Base+0x13c4>
   1d288:	ldr	r0, [fp, #-12]
   1d28c:	ldr	r1, [fp, #-16]
   1d290:	mul	r0, r0, r1
   1d294:	str	r0, [fp, #-20]	; 0xffffffec
   1d298:	b	1d4d0 <_obstack_memory_used@@Base+0x13dc>
   1d29c:	ldr	r0, [fp, #-16]
   1d2a0:	cmp	r0, #0
   1d2a4:	bcs	1d3e0 <_obstack_memory_used@@Base+0x12ec>
   1d2a8:	ldr	r0, [fp, #-12]
   1d2ac:	cmp	r0, #0
   1d2b0:	bcs	1d368 <_obstack_memory_used@@Base+0x1274>
   1d2b4:	b	1d2e8 <_obstack_memory_used@@Base+0x11f4>
   1d2b8:	ldr	r0, [fp, #-12]
   1d2bc:	ldr	r2, [fp, #-16]
   1d2c0:	mvn	r1, #0
   1d2c4:	mov	r3, #0
   1d2c8:	str	r0, [sp, #20]
   1d2cc:	mov	r0, r1
   1d2d0:	bl	1e128 <_obstack_memory_used@@Base+0x2034>
   1d2d4:	ldr	r2, [sp, #20]
   1d2d8:	subs	r0, r2, r0
   1d2dc:	rscs	r1, r1, #0
   1d2e0:	bcc	1d490 <_obstack_memory_used@@Base+0x139c>
   1d2e4:	b	1d4a4 <_obstack_memory_used@@Base+0x13b0>
   1d2e8:	b	1d2fc <_obstack_memory_used@@Base+0x1208>
   1d2ec:	ldr	r0, [fp, #-16]
   1d2f0:	cmp	r0, #1
   1d2f4:	bcc	1d30c <_obstack_memory_used@@Base+0x1218>
   1d2f8:	b	1d320 <_obstack_memory_used@@Base+0x122c>
   1d2fc:	ldr	r0, [fp, #-16]
   1d300:	movw	r1, #0
   1d304:	cmp	r1, r0
   1d308:	bcs	1d320 <_obstack_memory_used@@Base+0x122c>
   1d30c:	mov	r0, #1
   1d310:	mvn	r1, #0
   1d314:	str	r1, [sp, #16]
   1d318:	str	r0, [sp, #12]
   1d31c:	b	1d348 <_obstack_memory_used@@Base+0x1254>
   1d320:	ldr	r0, [fp, #-16]
   1d324:	rsb	r2, r0, #0
   1d328:	mvn	r0, #0
   1d32c:	mov	r3, #0
   1d330:	str	r0, [sp, #8]
   1d334:	ldr	r1, [sp, #8]
   1d338:	bl	1e128 <_obstack_memory_used@@Base+0x2034>
   1d33c:	str	r0, [sp, #16]
   1d340:	str	r1, [sp, #12]
   1d344:	b	1d348 <_obstack_memory_used@@Base+0x1254>
   1d348:	ldr	r0, [sp, #12]
   1d34c:	ldr	r1, [sp, #16]
   1d350:	ldr	r2, [fp, #-12]
   1d354:	mvn	r2, r2
   1d358:	subs	r1, r2, r1
   1d35c:	rscs	r0, r0, #0
   1d360:	bcs	1d490 <_obstack_memory_used@@Base+0x139c>
   1d364:	b	1d4a4 <_obstack_memory_used@@Base+0x13b0>
   1d368:	b	1d370 <_obstack_memory_used@@Base+0x127c>
   1d36c:	b	1d374 <_obstack_memory_used@@Base+0x1280>
   1d370:	b	1d3c4 <_obstack_memory_used@@Base+0x12d0>
   1d374:	ldr	r0, [fp, #-16]
   1d378:	cmn	r0, #1
   1d37c:	bne	1d3c4 <_obstack_memory_used@@Base+0x12d0>
   1d380:	b	1d39c <_obstack_memory_used@@Base+0x12a8>
   1d384:	ldr	r0, [fp, #-12]
   1d388:	add	r0, r0, #0
   1d38c:	movw	r1, #0
   1d390:	cmp	r1, r0
   1d394:	bcc	1d490 <_obstack_memory_used@@Base+0x139c>
   1d398:	b	1d4a4 <_obstack_memory_used@@Base+0x13b0>
   1d39c:	ldr	r0, [fp, #-12]
   1d3a0:	movw	r1, #0
   1d3a4:	cmp	r1, r0
   1d3a8:	bcs	1d4a4 <_obstack_memory_used@@Base+0x13b0>
   1d3ac:	ldr	r0, [fp, #-12]
   1d3b0:	sub	r0, r0, #1
   1d3b4:	mvn	r1, #0
   1d3b8:	cmp	r1, r0
   1d3bc:	bcc	1d490 <_obstack_memory_used@@Base+0x139c>
   1d3c0:	b	1d4a4 <_obstack_memory_used@@Base+0x13b0>
   1d3c4:	ldr	r0, [fp, #-16]
   1d3c8:	movw	r1, #0
   1d3cc:	udiv	r0, r1, r0
   1d3d0:	ldr	r1, [fp, #-12]
   1d3d4:	cmp	r0, r1
   1d3d8:	bcc	1d490 <_obstack_memory_used@@Base+0x139c>
   1d3dc:	b	1d4a4 <_obstack_memory_used@@Base+0x13b0>
   1d3e0:	ldr	r0, [fp, #-16]
   1d3e4:	cmp	r0, #0
   1d3e8:	bne	1d3f0 <_obstack_memory_used@@Base+0x12fc>
   1d3ec:	b	1d4a4 <_obstack_memory_used@@Base+0x13b0>
   1d3f0:	ldr	r0, [fp, #-12]
   1d3f4:	cmp	r0, #0
   1d3f8:	bcs	1d464 <_obstack_memory_used@@Base+0x1370>
   1d3fc:	b	1d404 <_obstack_memory_used@@Base+0x1310>
   1d400:	b	1d408 <_obstack_memory_used@@Base+0x1314>
   1d404:	b	1d448 <_obstack_memory_used@@Base+0x1354>
   1d408:	ldr	r0, [fp, #-12]
   1d40c:	cmn	r0, #1
   1d410:	bne	1d448 <_obstack_memory_used@@Base+0x1354>
   1d414:	b	1d430 <_obstack_memory_used@@Base+0x133c>
   1d418:	ldr	r0, [fp, #-16]
   1d41c:	add	r0, r0, #0
   1d420:	movw	r1, #0
   1d424:	cmp	r1, r0
   1d428:	bcc	1d490 <_obstack_memory_used@@Base+0x139c>
   1d42c:	b	1d4a4 <_obstack_memory_used@@Base+0x13b0>
   1d430:	ldr	r0, [fp, #-16]
   1d434:	sub	r0, r0, #1
   1d438:	mvn	r1, #0
   1d43c:	cmp	r1, r0
   1d440:	bcc	1d490 <_obstack_memory_used@@Base+0x139c>
   1d444:	b	1d4a4 <_obstack_memory_used@@Base+0x13b0>
   1d448:	ldr	r0, [fp, #-12]
   1d44c:	movw	r1, #0
   1d450:	udiv	r0, r1, r0
   1d454:	ldr	r1, [fp, #-16]
   1d458:	cmp	r0, r1
   1d45c:	bcc	1d490 <_obstack_memory_used@@Base+0x139c>
   1d460:	b	1d4a4 <_obstack_memory_used@@Base+0x13b0>
   1d464:	ldr	r2, [fp, #-16]
   1d468:	mvn	r0, #0
   1d46c:	mov	r3, #0
   1d470:	str	r0, [sp, #4]
   1d474:	ldr	r1, [sp, #4]
   1d478:	bl	1e128 <_obstack_memory_used@@Base+0x2034>
   1d47c:	ldr	r2, [fp, #-12]
   1d480:	subs	r0, r0, r2
   1d484:	sbcs	r1, r1, #0
   1d488:	bcs	1d4a4 <_obstack_memory_used@@Base+0x13b0>
   1d48c:	b	1d490 <_obstack_memory_used@@Base+0x139c>
   1d490:	ldr	r0, [fp, #-12]
   1d494:	ldr	r1, [fp, #-16]
   1d498:	mul	r0, r0, r1
   1d49c:	str	r0, [fp, #-20]	; 0xffffffec
   1d4a0:	b	1d4b8 <_obstack_memory_used@@Base+0x13c4>
   1d4a4:	ldr	r0, [fp, #-12]
   1d4a8:	ldr	r1, [fp, #-16]
   1d4ac:	mul	r0, r0, r1
   1d4b0:	str	r0, [fp, #-20]	; 0xffffffec
   1d4b4:	b	1d4d0 <_obstack_memory_used@@Base+0x13dc>
   1d4b8:	bl	114e0 <__errno_location@plt>
   1d4bc:	movw	r1, #12
   1d4c0:	str	r1, [r0]
   1d4c4:	movw	r0, #0
   1d4c8:	str	r0, [fp, #-4]
   1d4cc:	b	1d4e0 <_obstack_memory_used@@Base+0x13ec>
   1d4d0:	ldr	r0, [fp, #-8]
   1d4d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d4d8:	bl	1b4c8 <__assert_fail@plt+0x9eec>
   1d4dc:	str	r0, [fp, #-4]
   1d4e0:	ldr	r0, [fp, #-4]
   1d4e4:	mov	sp, fp
   1d4e8:	pop	{fp, pc}
   1d4ec:	svcvc	0x00ffffff
   1d4f0:	andhi	r0, r0, r0
   1d4f4:			; <UNDEFINED> instruction: 0xffff8000
   1d4f8:	push	{fp, lr}
   1d4fc:	mov	fp, sp
   1d500:	sub	sp, sp, #16
   1d504:	str	r0, [fp, #-4]
   1d508:	str	r1, [sp, #8]
   1d50c:	str	r2, [sp, #4]
   1d510:	ldr	r0, [fp, #-4]
   1d514:	ldr	r1, [sp, #8]
   1d518:	ldr	r2, [sp, #4]
   1d51c:	bl	1d528 <_obstack_memory_used@@Base+0x1434>
   1d520:	mov	sp, fp
   1d524:	pop	{fp, pc}
   1d528:	push	{fp, lr}
   1d52c:	mov	fp, sp
   1d530:	sub	sp, sp, #24
   1d534:	str	r0, [fp, #-8]
   1d538:	str	r1, [sp, #12]
   1d53c:	str	r2, [sp, #8]
   1d540:	ldr	r0, [fp, #-8]
   1d544:	bl	1d628 <_obstack_memory_used@@Base+0x1534>
   1d548:	str	r0, [sp, #4]
   1d54c:	ldr	r0, [sp, #4]
   1d550:	movw	r1, #0
   1d554:	cmp	r0, r1
   1d558:	bne	1d580 <_obstack_memory_used@@Base+0x148c>
   1d55c:	ldr	r0, [sp, #8]
   1d560:	cmp	r0, #0
   1d564:	bls	1d574 <_obstack_memory_used@@Base+0x1480>
   1d568:	ldr	r0, [sp, #12]
   1d56c:	movw	r1, #0
   1d570:	strb	r1, [r0]
   1d574:	movw	r0, #22
   1d578:	str	r0, [fp, #-4]
   1d57c:	b	1d5fc <_obstack_memory_used@@Base+0x1508>
   1d580:	ldr	r0, [sp, #4]
   1d584:	bl	114b0 <strlen@plt>
   1d588:	str	r0, [sp]
   1d58c:	ldr	r0, [sp]
   1d590:	ldr	r1, [sp, #8]
   1d594:	cmp	r0, r1
   1d598:	bcs	1d5bc <_obstack_memory_used@@Base+0x14c8>
   1d59c:	ldr	r0, [sp, #12]
   1d5a0:	ldr	r1, [sp, #4]
   1d5a4:	ldr	r2, [sp]
   1d5a8:	add	r2, r2, #1
   1d5ac:	bl	11354 <memcpy@plt>
   1d5b0:	movw	r0, #0
   1d5b4:	str	r0, [fp, #-4]
   1d5b8:	b	1d5fc <_obstack_memory_used@@Base+0x1508>
   1d5bc:	ldr	r0, [sp, #8]
   1d5c0:	cmp	r0, #0
   1d5c4:	bls	1d5f4 <_obstack_memory_used@@Base+0x1500>
   1d5c8:	ldr	r0, [sp, #12]
   1d5cc:	ldr	r1, [sp, #4]
   1d5d0:	ldr	r2, [sp, #8]
   1d5d4:	sub	r2, r2, #1
   1d5d8:	bl	11354 <memcpy@plt>
   1d5dc:	ldr	r0, [sp, #12]
   1d5e0:	ldr	r1, [sp, #8]
   1d5e4:	sub	r1, r1, #1
   1d5e8:	add	r0, r0, r1
   1d5ec:	movw	r1, #0
   1d5f0:	strb	r1, [r0]
   1d5f4:	movw	r0, #34	; 0x22
   1d5f8:	str	r0, [fp, #-4]
   1d5fc:	ldr	r0, [fp, #-4]
   1d600:	mov	sp, fp
   1d604:	pop	{fp, pc}
   1d608:	push	{fp, lr}
   1d60c:	mov	fp, sp
   1d610:	sub	sp, sp, #8
   1d614:	str	r0, [sp, #4]
   1d618:	ldr	r0, [sp, #4]
   1d61c:	bl	1d628 <_obstack_memory_used@@Base+0x1534>
   1d620:	mov	sp, fp
   1d624:	pop	{fp, pc}
   1d628:	push	{fp, lr}
   1d62c:	mov	fp, sp
   1d630:	sub	sp, sp, #8
   1d634:	str	r0, [sp, #4]
   1d638:	ldr	r0, [sp, #4]
   1d63c:	movw	r1, #0
   1d640:	bl	1154c <setlocale@plt>
   1d644:	str	r0, [sp]
   1d648:	ldr	r0, [sp]
   1d64c:	mov	sp, fp
   1d650:	pop	{fp, pc}
   1d654:	sub	sp, sp, #12
   1d658:	str	r0, [sp, #4]
   1d65c:	ldr	r0, [sp, #4]
   1d660:	sub	r1, r0, #48	; 0x30
   1d664:	cmp	r1, #10
   1d668:	str	r0, [sp]
   1d66c:	bcc	1d69c <_obstack_memory_used@@Base+0x15a8>
   1d670:	b	1d674 <_obstack_memory_used@@Base+0x1580>
   1d674:	ldr	r0, [sp]
   1d678:	sub	r1, r0, #65	; 0x41
   1d67c:	cmp	r1, #26
   1d680:	bcc	1d69c <_obstack_memory_used@@Base+0x15a8>
   1d684:	b	1d688 <_obstack_memory_used@@Base+0x1594>
   1d688:	ldr	r0, [sp]
   1d68c:	sub	r1, r0, #97	; 0x61
   1d690:	cmp	r1, #25
   1d694:	bhi	1d6ac <_obstack_memory_used@@Base+0x15b8>
   1d698:	b	1d69c <_obstack_memory_used@@Base+0x15a8>
   1d69c:	movw	r0, #1
   1d6a0:	and	r0, r0, #1
   1d6a4:	strb	r0, [sp, #11]
   1d6a8:	b	1d6b8 <_obstack_memory_used@@Base+0x15c4>
   1d6ac:	movw	r0, #0
   1d6b0:	and	r0, r0, #1
   1d6b4:	strb	r0, [sp, #11]
   1d6b8:	ldrb	r0, [sp, #11]
   1d6bc:	and	r0, r0, #1
   1d6c0:	add	sp, sp, #12
   1d6c4:	bx	lr
   1d6c8:	sub	sp, sp, #12
   1d6cc:	str	r0, [sp, #4]
   1d6d0:	ldr	r0, [sp, #4]
   1d6d4:	sub	r1, r0, #65	; 0x41
   1d6d8:	cmp	r1, #26
   1d6dc:	str	r0, [sp]
   1d6e0:	bcc	1d6fc <_obstack_memory_used@@Base+0x1608>
   1d6e4:	b	1d6e8 <_obstack_memory_used@@Base+0x15f4>
   1d6e8:	ldr	r0, [sp]
   1d6ec:	sub	r1, r0, #97	; 0x61
   1d6f0:	cmp	r1, #25
   1d6f4:	bhi	1d70c <_obstack_memory_used@@Base+0x1618>
   1d6f8:	b	1d6fc <_obstack_memory_used@@Base+0x1608>
   1d6fc:	movw	r0, #1
   1d700:	and	r0, r0, #1
   1d704:	strb	r0, [sp, #11]
   1d708:	b	1d718 <_obstack_memory_used@@Base+0x1624>
   1d70c:	movw	r0, #0
   1d710:	and	r0, r0, #1
   1d714:	strb	r0, [sp, #11]
   1d718:	ldrb	r0, [sp, #11]
   1d71c:	and	r0, r0, #1
   1d720:	add	sp, sp, #12
   1d724:	bx	lr
   1d728:	sub	sp, sp, #8
   1d72c:	str	r0, [sp]
   1d730:	ldr	r0, [sp]
   1d734:	cmp	r0, #127	; 0x7f
   1d738:	bhi	1d750 <_obstack_memory_used@@Base+0x165c>
   1d73c:	b	1d740 <_obstack_memory_used@@Base+0x164c>
   1d740:	movw	r0, #1
   1d744:	and	r0, r0, #1
   1d748:	strb	r0, [sp, #7]
   1d74c:	b	1d75c <_obstack_memory_used@@Base+0x1668>
   1d750:	movw	r0, #0
   1d754:	and	r0, r0, #1
   1d758:	strb	r0, [sp, #7]
   1d75c:	ldrb	r0, [sp, #7]
   1d760:	and	r0, r0, #1
   1d764:	add	sp, sp, #8
   1d768:	bx	lr
   1d76c:	sub	sp, sp, #8
   1d770:	str	r0, [sp, #4]
   1d774:	ldr	r0, [sp, #4]
   1d778:	cmp	r0, #32
   1d77c:	movw	r0, #1
   1d780:	str	r0, [sp]
   1d784:	beq	1d79c <_obstack_memory_used@@Base+0x16a8>
   1d788:	ldr	r0, [sp, #4]
   1d78c:	cmp	r0, #9
   1d790:	movw	r0, #0
   1d794:	moveq	r0, #1
   1d798:	str	r0, [sp]
   1d79c:	ldr	r0, [sp]
   1d7a0:	and	r0, r0, #1
   1d7a4:	add	sp, sp, #8
   1d7a8:	bx	lr
   1d7ac:	sub	sp, sp, #12
   1d7b0:	str	r0, [sp, #4]
   1d7b4:	ldr	r0, [sp, #4]
   1d7b8:	cmp	r0, #32
   1d7bc:	str	r0, [sp]
   1d7c0:	bcc	1d7d8 <_obstack_memory_used@@Base+0x16e4>
   1d7c4:	b	1d7c8 <_obstack_memory_used@@Base+0x16d4>
   1d7c8:	ldr	r0, [sp]
   1d7cc:	cmp	r0, #127	; 0x7f
   1d7d0:	bne	1d7e8 <_obstack_memory_used@@Base+0x16f4>
   1d7d4:	b	1d7d8 <_obstack_memory_used@@Base+0x16e4>
   1d7d8:	movw	r0, #1
   1d7dc:	and	r0, r0, #1
   1d7e0:	strb	r0, [sp, #11]
   1d7e4:	b	1d7f4 <_obstack_memory_used@@Base+0x1700>
   1d7e8:	movw	r0, #0
   1d7ec:	and	r0, r0, #1
   1d7f0:	strb	r0, [sp, #11]
   1d7f4:	ldrb	r0, [sp, #11]
   1d7f8:	and	r0, r0, #1
   1d7fc:	add	sp, sp, #12
   1d800:	bx	lr
   1d804:	sub	sp, sp, #8
   1d808:	str	r0, [sp]
   1d80c:	ldr	r0, [sp]
   1d810:	sub	r0, r0, #48	; 0x30
   1d814:	cmp	r0, #9
   1d818:	bhi	1d830 <_obstack_memory_used@@Base+0x173c>
   1d81c:	b	1d820 <_obstack_memory_used@@Base+0x172c>
   1d820:	movw	r0, #1
   1d824:	and	r0, r0, #1
   1d828:	strb	r0, [sp, #7]
   1d82c:	b	1d83c <_obstack_memory_used@@Base+0x1748>
   1d830:	movw	r0, #0
   1d834:	and	r0, r0, #1
   1d838:	strb	r0, [sp, #7]
   1d83c:	ldrb	r0, [sp, #7]
   1d840:	and	r0, r0, #1
   1d844:	add	sp, sp, #8
   1d848:	bx	lr
   1d84c:	sub	sp, sp, #8
   1d850:	str	r0, [sp]
   1d854:	ldr	r0, [sp]
   1d858:	sub	r0, r0, #33	; 0x21
   1d85c:	cmp	r0, #93	; 0x5d
   1d860:	bhi	1d878 <_obstack_memory_used@@Base+0x1784>
   1d864:	b	1d868 <_obstack_memory_used@@Base+0x1774>
   1d868:	movw	r0, #1
   1d86c:	and	r0, r0, #1
   1d870:	strb	r0, [sp, #7]
   1d874:	b	1d884 <_obstack_memory_used@@Base+0x1790>
   1d878:	movw	r0, #0
   1d87c:	and	r0, r0, #1
   1d880:	strb	r0, [sp, #7]
   1d884:	ldrb	r0, [sp, #7]
   1d888:	and	r0, r0, #1
   1d88c:	add	sp, sp, #8
   1d890:	bx	lr
   1d894:	sub	sp, sp, #8
   1d898:	str	r0, [sp]
   1d89c:	ldr	r0, [sp]
   1d8a0:	sub	r0, r0, #97	; 0x61
   1d8a4:	cmp	r0, #25
   1d8a8:	bhi	1d8c0 <_obstack_memory_used@@Base+0x17cc>
   1d8ac:	b	1d8b0 <_obstack_memory_used@@Base+0x17bc>
   1d8b0:	movw	r0, #1
   1d8b4:	and	r0, r0, #1
   1d8b8:	strb	r0, [sp, #7]
   1d8bc:	b	1d8cc <_obstack_memory_used@@Base+0x17d8>
   1d8c0:	movw	r0, #0
   1d8c4:	and	r0, r0, #1
   1d8c8:	strb	r0, [sp, #7]
   1d8cc:	ldrb	r0, [sp, #7]
   1d8d0:	and	r0, r0, #1
   1d8d4:	add	sp, sp, #8
   1d8d8:	bx	lr
   1d8dc:	sub	sp, sp, #8
   1d8e0:	str	r0, [sp]
   1d8e4:	ldr	r0, [sp]
   1d8e8:	sub	r0, r0, #32
   1d8ec:	cmp	r0, #94	; 0x5e
   1d8f0:	bhi	1d908 <_obstack_memory_used@@Base+0x1814>
   1d8f4:	b	1d8f8 <_obstack_memory_used@@Base+0x1804>
   1d8f8:	movw	r0, #1
   1d8fc:	and	r0, r0, #1
   1d900:	strb	r0, [sp, #7]
   1d904:	b	1d914 <_obstack_memory_used@@Base+0x1820>
   1d908:	movw	r0, #0
   1d90c:	and	r0, r0, #1
   1d910:	strb	r0, [sp, #7]
   1d914:	ldrb	r0, [sp, #7]
   1d918:	and	r0, r0, #1
   1d91c:	add	sp, sp, #8
   1d920:	bx	lr
   1d924:	sub	sp, sp, #12
   1d928:	str	r0, [sp, #4]
   1d92c:	ldr	r0, [sp, #4]
   1d930:	sub	r0, r0, #33	; 0x21
   1d934:	cmp	r0, #93	; 0x5d
   1d938:	str	r0, [sp]
   1d93c:	bhi	1dad8 <_obstack_memory_used@@Base+0x19e4>
   1d940:	add	r0, pc, #8
   1d944:	ldr	r1, [sp]
   1d948:	ldr	r0, [r0, r1, lsl #2]
   1d94c:	mov	pc, r0
   1d950:	andeq	sp, r1, r8, asr #21
   1d954:	andeq	sp, r1, r8, asr #21
   1d958:	andeq	sp, r1, r8, asr #21
   1d95c:	andeq	sp, r1, r8, asr #21
   1d960:	andeq	sp, r1, r8, asr #21
   1d964:	andeq	sp, r1, r8, asr #21
   1d968:	andeq	sp, r1, r8, asr #21
   1d96c:	andeq	sp, r1, r8, asr #21
   1d970:	andeq	sp, r1, r8, asr #21
   1d974:	andeq	sp, r1, r8, asr #21
   1d978:	andeq	sp, r1, r8, asr #21
   1d97c:	andeq	sp, r1, r8, asr #21
   1d980:	andeq	sp, r1, r8, asr #21
   1d984:	andeq	sp, r1, r8, asr #21
   1d988:	andeq	sp, r1, r8, asr #21
   1d98c:	ldrdeq	sp, [r1], -r8
   1d990:	ldrdeq	sp, [r1], -r8
   1d994:	ldrdeq	sp, [r1], -r8
   1d998:	ldrdeq	sp, [r1], -r8
   1d99c:	ldrdeq	sp, [r1], -r8
   1d9a0:	ldrdeq	sp, [r1], -r8
   1d9a4:	ldrdeq	sp, [r1], -r8
   1d9a8:	ldrdeq	sp, [r1], -r8
   1d9ac:	ldrdeq	sp, [r1], -r8
   1d9b0:	ldrdeq	sp, [r1], -r8
   1d9b4:	andeq	sp, r1, r8, asr #21
   1d9b8:	andeq	sp, r1, r8, asr #21
   1d9bc:	andeq	sp, r1, r8, asr #21
   1d9c0:	andeq	sp, r1, r8, asr #21
   1d9c4:	andeq	sp, r1, r8, asr #21
   1d9c8:	andeq	sp, r1, r8, asr #21
   1d9cc:	andeq	sp, r1, r8, asr #21
   1d9d0:	ldrdeq	sp, [r1], -r8
   1d9d4:	ldrdeq	sp, [r1], -r8
   1d9d8:	ldrdeq	sp, [r1], -r8
   1d9dc:	ldrdeq	sp, [r1], -r8
   1d9e0:	ldrdeq	sp, [r1], -r8
   1d9e4:	ldrdeq	sp, [r1], -r8
   1d9e8:	ldrdeq	sp, [r1], -r8
   1d9ec:	ldrdeq	sp, [r1], -r8
   1d9f0:	ldrdeq	sp, [r1], -r8
   1d9f4:	ldrdeq	sp, [r1], -r8
   1d9f8:	ldrdeq	sp, [r1], -r8
   1d9fc:	ldrdeq	sp, [r1], -r8
   1da00:	ldrdeq	sp, [r1], -r8
   1da04:	ldrdeq	sp, [r1], -r8
   1da08:	ldrdeq	sp, [r1], -r8
   1da0c:	ldrdeq	sp, [r1], -r8
   1da10:	ldrdeq	sp, [r1], -r8
   1da14:	ldrdeq	sp, [r1], -r8
   1da18:	ldrdeq	sp, [r1], -r8
   1da1c:	ldrdeq	sp, [r1], -r8
   1da20:	ldrdeq	sp, [r1], -r8
   1da24:	ldrdeq	sp, [r1], -r8
   1da28:	ldrdeq	sp, [r1], -r8
   1da2c:	ldrdeq	sp, [r1], -r8
   1da30:	ldrdeq	sp, [r1], -r8
   1da34:	ldrdeq	sp, [r1], -r8
   1da38:	andeq	sp, r1, r8, asr #21
   1da3c:	andeq	sp, r1, r8, asr #21
   1da40:	andeq	sp, r1, r8, asr #21
   1da44:	andeq	sp, r1, r8, asr #21
   1da48:	andeq	sp, r1, r8, asr #21
   1da4c:	andeq	sp, r1, r8, asr #21
   1da50:	ldrdeq	sp, [r1], -r8
   1da54:	ldrdeq	sp, [r1], -r8
   1da58:	ldrdeq	sp, [r1], -r8
   1da5c:	ldrdeq	sp, [r1], -r8
   1da60:	ldrdeq	sp, [r1], -r8
   1da64:	ldrdeq	sp, [r1], -r8
   1da68:	ldrdeq	sp, [r1], -r8
   1da6c:	ldrdeq	sp, [r1], -r8
   1da70:	ldrdeq	sp, [r1], -r8
   1da74:	ldrdeq	sp, [r1], -r8
   1da78:	ldrdeq	sp, [r1], -r8
   1da7c:	ldrdeq	sp, [r1], -r8
   1da80:	ldrdeq	sp, [r1], -r8
   1da84:	ldrdeq	sp, [r1], -r8
   1da88:	ldrdeq	sp, [r1], -r8
   1da8c:	ldrdeq	sp, [r1], -r8
   1da90:	ldrdeq	sp, [r1], -r8
   1da94:	ldrdeq	sp, [r1], -r8
   1da98:	ldrdeq	sp, [r1], -r8
   1da9c:	ldrdeq	sp, [r1], -r8
   1daa0:	ldrdeq	sp, [r1], -r8
   1daa4:	ldrdeq	sp, [r1], -r8
   1daa8:	ldrdeq	sp, [r1], -r8
   1daac:	ldrdeq	sp, [r1], -r8
   1dab0:	ldrdeq	sp, [r1], -r8
   1dab4:	ldrdeq	sp, [r1], -r8
   1dab8:	andeq	sp, r1, r8, asr #21
   1dabc:	andeq	sp, r1, r8, asr #21
   1dac0:	andeq	sp, r1, r8, asr #21
   1dac4:	andeq	sp, r1, r8, asr #21
   1dac8:	movw	r0, #1
   1dacc:	and	r0, r0, #1
   1dad0:	strb	r0, [sp, #11]
   1dad4:	b	1dae4 <_obstack_memory_used@@Base+0x19f0>
   1dad8:	movw	r0, #0
   1dadc:	and	r0, r0, #1
   1dae0:	strb	r0, [sp, #11]
   1dae4:	ldrb	r0, [sp, #11]
   1dae8:	and	r0, r0, #1
   1daec:	add	sp, sp, #12
   1daf0:	bx	lr
   1daf4:	sub	sp, sp, #12
   1daf8:	str	r0, [sp, #4]
   1dafc:	ldr	r0, [sp, #4]
   1db00:	sub	r1, r0, #9
   1db04:	cmp	r1, #5
   1db08:	str	r0, [sp]
   1db0c:	bcc	1db24 <_obstack_memory_used@@Base+0x1a30>
   1db10:	b	1db14 <_obstack_memory_used@@Base+0x1a20>
   1db14:	ldr	r0, [sp]
   1db18:	cmp	r0, #32
   1db1c:	bne	1db34 <_obstack_memory_used@@Base+0x1a40>
   1db20:	b	1db24 <_obstack_memory_used@@Base+0x1a30>
   1db24:	movw	r0, #1
   1db28:	and	r0, r0, #1
   1db2c:	strb	r0, [sp, #11]
   1db30:	b	1db40 <_obstack_memory_used@@Base+0x1a4c>
   1db34:	movw	r0, #0
   1db38:	and	r0, r0, #1
   1db3c:	strb	r0, [sp, #11]
   1db40:	ldrb	r0, [sp, #11]
   1db44:	and	r0, r0, #1
   1db48:	add	sp, sp, #12
   1db4c:	bx	lr
   1db50:	sub	sp, sp, #8
   1db54:	str	r0, [sp]
   1db58:	ldr	r0, [sp]
   1db5c:	sub	r0, r0, #65	; 0x41
   1db60:	cmp	r0, #25
   1db64:	bhi	1db7c <_obstack_memory_used@@Base+0x1a88>
   1db68:	b	1db6c <_obstack_memory_used@@Base+0x1a78>
   1db6c:	movw	r0, #1
   1db70:	and	r0, r0, #1
   1db74:	strb	r0, [sp, #7]
   1db78:	b	1db88 <_obstack_memory_used@@Base+0x1a94>
   1db7c:	movw	r0, #0
   1db80:	and	r0, r0, #1
   1db84:	strb	r0, [sp, #7]
   1db88:	ldrb	r0, [sp, #7]
   1db8c:	and	r0, r0, #1
   1db90:	add	sp, sp, #8
   1db94:	bx	lr
   1db98:	sub	sp, sp, #12
   1db9c:	str	r0, [sp, #4]
   1dba0:	ldr	r0, [sp, #4]
   1dba4:	sub	r1, r0, #48	; 0x30
   1dba8:	cmp	r1, #10
   1dbac:	str	r0, [sp]
   1dbb0:	bcc	1dbe0 <_obstack_memory_used@@Base+0x1aec>
   1dbb4:	b	1dbb8 <_obstack_memory_used@@Base+0x1ac4>
   1dbb8:	ldr	r0, [sp]
   1dbbc:	sub	r1, r0, #65	; 0x41
   1dbc0:	cmp	r1, #6
   1dbc4:	bcc	1dbe0 <_obstack_memory_used@@Base+0x1aec>
   1dbc8:	b	1dbcc <_obstack_memory_used@@Base+0x1ad8>
   1dbcc:	ldr	r0, [sp]
   1dbd0:	sub	r1, r0, #97	; 0x61
   1dbd4:	cmp	r1, #5
   1dbd8:	bhi	1dbf0 <_obstack_memory_used@@Base+0x1afc>
   1dbdc:	b	1dbe0 <_obstack_memory_used@@Base+0x1aec>
   1dbe0:	movw	r0, #1
   1dbe4:	and	r0, r0, #1
   1dbe8:	strb	r0, [sp, #11]
   1dbec:	b	1dbfc <_obstack_memory_used@@Base+0x1b08>
   1dbf0:	movw	r0, #0
   1dbf4:	and	r0, r0, #1
   1dbf8:	strb	r0, [sp, #11]
   1dbfc:	ldrb	r0, [sp, #11]
   1dc00:	and	r0, r0, #1
   1dc04:	add	sp, sp, #12
   1dc08:	bx	lr
   1dc0c:	sub	sp, sp, #8
   1dc10:	str	r0, [sp]
   1dc14:	ldr	r0, [sp]
   1dc18:	sub	r0, r0, #65	; 0x41
   1dc1c:	cmp	r0, #25
   1dc20:	bhi	1dc3c <_obstack_memory_used@@Base+0x1b48>
   1dc24:	b	1dc28 <_obstack_memory_used@@Base+0x1b34>
   1dc28:	ldr	r0, [sp]
   1dc2c:	sub	r0, r0, #65	; 0x41
   1dc30:	add	r0, r0, #97	; 0x61
   1dc34:	str	r0, [sp, #4]
   1dc38:	b	1dc44 <_obstack_memory_used@@Base+0x1b50>
   1dc3c:	ldr	r0, [sp]
   1dc40:	str	r0, [sp, #4]
   1dc44:	ldr	r0, [sp, #4]
   1dc48:	add	sp, sp, #8
   1dc4c:	bx	lr
   1dc50:	sub	sp, sp, #8
   1dc54:	str	r0, [sp]
   1dc58:	ldr	r0, [sp]
   1dc5c:	sub	r0, r0, #97	; 0x61
   1dc60:	cmp	r0, #25
   1dc64:	bhi	1dc80 <_obstack_memory_used@@Base+0x1b8c>
   1dc68:	b	1dc6c <_obstack_memory_used@@Base+0x1b78>
   1dc6c:	ldr	r0, [sp]
   1dc70:	sub	r0, r0, #97	; 0x61
   1dc74:	add	r0, r0, #65	; 0x41
   1dc78:	str	r0, [sp, #4]
   1dc7c:	b	1dc88 <_obstack_memory_used@@Base+0x1b94>
   1dc80:	ldr	r0, [sp]
   1dc84:	str	r0, [sp, #4]
   1dc88:	ldr	r0, [sp, #4]
   1dc8c:	add	sp, sp, #8
   1dc90:	bx	lr
   1dc94:	eor	r1, r1, #-2147483648	; 0x80000000
   1dc98:	b	1dca0 <_obstack_memory_used@@Base+0x1bac>
   1dc9c:	eor	r3, r3, #-2147483648	; 0x80000000
   1dca0:	push	{r4, r5, lr}
   1dca4:	lsl	r4, r1, #1
   1dca8:	lsl	r5, r3, #1
   1dcac:	teq	r4, r5
   1dcb0:	teqeq	r0, r2
   1dcb4:	orrsne	ip, r4, r0
   1dcb8:	orrsne	ip, r5, r2
   1dcbc:	mvnsne	ip, r4, asr #21
   1dcc0:	mvnsne	ip, r5, asr #21
   1dcc4:	beq	1deb0 <_obstack_memory_used@@Base+0x1dbc>
   1dcc8:	lsr	r4, r4, #21
   1dccc:	rsbs	r5, r4, r5, lsr #21
   1dcd0:	rsblt	r5, r5, #0
   1dcd4:	ble	1dcf4 <_obstack_memory_used@@Base+0x1c00>
   1dcd8:	add	r4, r4, r5
   1dcdc:	eor	r2, r0, r2
   1dce0:	eor	r3, r1, r3
   1dce4:	eor	r0, r2, r0
   1dce8:	eor	r1, r3, r1
   1dcec:	eor	r2, r0, r2
   1dcf0:	eor	r3, r1, r3
   1dcf4:	cmp	r5, #54	; 0x36
   1dcf8:	pophi	{r4, r5, pc}
   1dcfc:	tst	r1, #-2147483648	; 0x80000000
   1dd00:	lsl	r1, r1, #12
   1dd04:	mov	ip, #1048576	; 0x100000
   1dd08:	orr	r1, ip, r1, lsr #12
   1dd0c:	beq	1dd18 <_obstack_memory_used@@Base+0x1c24>
   1dd10:	rsbs	r0, r0, #0
   1dd14:	rsc	r1, r1, #0
   1dd18:	tst	r3, #-2147483648	; 0x80000000
   1dd1c:	lsl	r3, r3, #12
   1dd20:	orr	r3, ip, r3, lsr #12
   1dd24:	beq	1dd30 <_obstack_memory_used@@Base+0x1c3c>
   1dd28:	rsbs	r2, r2, #0
   1dd2c:	rsc	r3, r3, #0
   1dd30:	teq	r4, r5
   1dd34:	beq	1de98 <_obstack_memory_used@@Base+0x1da4>
   1dd38:	sub	r4, r4, #1
   1dd3c:	rsbs	lr, r5, #32
   1dd40:	blt	1dd5c <_obstack_memory_used@@Base+0x1c68>
   1dd44:	lsl	ip, r2, lr
   1dd48:	adds	r0, r0, r2, lsr r5
   1dd4c:	adc	r1, r1, #0
   1dd50:	adds	r0, r0, r3, lsl lr
   1dd54:	adcs	r1, r1, r3, asr r5
   1dd58:	b	1dd78 <_obstack_memory_used@@Base+0x1c84>
   1dd5c:	sub	r5, r5, #32
   1dd60:	add	lr, lr, #32
   1dd64:	cmp	r2, #1
   1dd68:	lsl	ip, r3, lr
   1dd6c:	orrcs	ip, ip, #2
   1dd70:	adds	r0, r0, r3, asr r5
   1dd74:	adcs	r1, r1, r3, asr #31
   1dd78:	and	r5, r1, #-2147483648	; 0x80000000
   1dd7c:	bpl	1dd8c <_obstack_memory_used@@Base+0x1c98>
   1dd80:	rsbs	ip, ip, #0
   1dd84:	rscs	r0, r0, #0
   1dd88:	rsc	r1, r1, #0
   1dd8c:	cmp	r1, #1048576	; 0x100000
   1dd90:	bcc	1ddd0 <_obstack_memory_used@@Base+0x1cdc>
   1dd94:	cmp	r1, #2097152	; 0x200000
   1dd98:	bcc	1ddb8 <_obstack_memory_used@@Base+0x1cc4>
   1dd9c:	lsrs	r1, r1, #1
   1dda0:	rrxs	r0, r0
   1dda4:	rrx	ip, ip
   1dda8:	add	r4, r4, #1
   1ddac:	lsl	r2, r4, #21
   1ddb0:	cmn	r2, #4194304	; 0x400000
   1ddb4:	bcs	1df10 <_obstack_memory_used@@Base+0x1e1c>
   1ddb8:	cmp	ip, #-2147483648	; 0x80000000
   1ddbc:	lsrseq	ip, r0, #1
   1ddc0:	adcs	r0, r0, #0
   1ddc4:	adc	r1, r1, r4, lsl #20
   1ddc8:	orr	r1, r1, r5
   1ddcc:	pop	{r4, r5, pc}
   1ddd0:	lsls	ip, ip, #1
   1ddd4:	adcs	r0, r0, r0
   1ddd8:	adc	r1, r1, r1
   1dddc:	tst	r1, #1048576	; 0x100000
   1dde0:	sub	r4, r4, #1
   1dde4:	bne	1ddb8 <_obstack_memory_used@@Base+0x1cc4>
   1dde8:	teq	r1, #0
   1ddec:	moveq	r1, r0
   1ddf0:	moveq	r0, #0
   1ddf4:	clz	r3, r1
   1ddf8:	addeq	r3, r3, #32
   1ddfc:	sub	r3, r3, #11
   1de00:	subs	r2, r3, #32
   1de04:	bge	1de28 <_obstack_memory_used@@Base+0x1d34>
   1de08:	adds	r2, r2, #12
   1de0c:	ble	1de24 <_obstack_memory_used@@Base+0x1d30>
   1de10:	add	ip, r2, #20
   1de14:	rsb	r2, r2, #12
   1de18:	lsl	r0, r1, ip
   1de1c:	lsr	r1, r1, r2
   1de20:	b	1de38 <_obstack_memory_used@@Base+0x1d44>
   1de24:	add	r2, r2, #20
   1de28:	rsble	ip, r2, #32
   1de2c:	lsl	r1, r1, r2
   1de30:	orrle	r1, r1, r0, lsr ip
   1de34:	lslle	r0, r0, r2
   1de38:	subs	r4, r4, r3
   1de3c:	addge	r1, r1, r4, lsl #20
   1de40:	orrge	r1, r1, r5
   1de44:	popge	{r4, r5, pc}
   1de48:	mvn	r4, r4
   1de4c:	subs	r4, r4, #31
   1de50:	bge	1de8c <_obstack_memory_used@@Base+0x1d98>
   1de54:	adds	r4, r4, #12
   1de58:	bgt	1de74 <_obstack_memory_used@@Base+0x1d80>
   1de5c:	add	r4, r4, #20
   1de60:	rsb	r2, r4, #32
   1de64:	lsr	r0, r0, r4
   1de68:	orr	r0, r0, r1, lsl r2
   1de6c:	orr	r1, r5, r1, lsr r4
   1de70:	pop	{r4, r5, pc}
   1de74:	rsb	r4, r4, #12
   1de78:	rsb	r2, r4, #32
   1de7c:	lsr	r0, r0, r2
   1de80:	orr	r0, r0, r1, lsl r4
   1de84:	mov	r1, r5
   1de88:	pop	{r4, r5, pc}
   1de8c:	lsr	r0, r1, r4
   1de90:	mov	r1, r5
   1de94:	pop	{r4, r5, pc}
   1de98:	teq	r4, #0
   1de9c:	eor	r3, r3, #1048576	; 0x100000
   1dea0:	eoreq	r1, r1, #1048576	; 0x100000
   1dea4:	addeq	r4, r4, #1
   1dea8:	subne	r5, r5, #1
   1deac:	b	1dd38 <_obstack_memory_used@@Base+0x1c44>
   1deb0:	mvns	ip, r4, asr #21
   1deb4:	mvnsne	ip, r5, asr #21
   1deb8:	beq	1df20 <_obstack_memory_used@@Base+0x1e2c>
   1debc:	teq	r4, r5
   1dec0:	teqeq	r0, r2
   1dec4:	beq	1ded8 <_obstack_memory_used@@Base+0x1de4>
   1dec8:	orrs	ip, r4, r0
   1decc:	moveq	r1, r3
   1ded0:	moveq	r0, r2
   1ded4:	pop	{r4, r5, pc}
   1ded8:	teq	r1, r3
   1dedc:	movne	r1, #0
   1dee0:	movne	r0, #0
   1dee4:	popne	{r4, r5, pc}
   1dee8:	lsrs	ip, r4, #21
   1deec:	bne	1df00 <_obstack_memory_used@@Base+0x1e0c>
   1def0:	lsls	r0, r0, #1
   1def4:	adcs	r1, r1, r1
   1def8:	orrcs	r1, r1, #-2147483648	; 0x80000000
   1defc:	pop	{r4, r5, pc}
   1df00:	adds	r4, r4, #4194304	; 0x400000
   1df04:	addcc	r1, r1, #1048576	; 0x100000
   1df08:	popcc	{r4, r5, pc}
   1df0c:	and	r5, r1, #-2147483648	; 0x80000000
   1df10:	orr	r1, r5, #2130706432	; 0x7f000000
   1df14:	orr	r1, r1, #15728640	; 0xf00000
   1df18:	mov	r0, #0
   1df1c:	pop	{r4, r5, pc}
   1df20:	mvns	ip, r4, asr #21
   1df24:	movne	r1, r3
   1df28:	movne	r0, r2
   1df2c:	mvnseq	ip, r5, asr #21
   1df30:	movne	r3, r1
   1df34:	movne	r2, r0
   1df38:	orrs	r4, r0, r1, lsl #12
   1df3c:	orrseq	r5, r2, r3, lsl #12
   1df40:	teqeq	r1, r3
   1df44:	orrne	r1, r1, #524288	; 0x80000
   1df48:	pop	{r4, r5, pc}
   1df4c:	teq	r0, #0
   1df50:	moveq	r1, #0
   1df54:	bxeq	lr
   1df58:	push	{r4, r5, lr}
   1df5c:	mov	r4, #1024	; 0x400
   1df60:	add	r4, r4, #50	; 0x32
   1df64:	mov	r5, #0
   1df68:	mov	r1, #0
   1df6c:	b	1dde8 <_obstack_memory_used@@Base+0x1cf4>
   1df70:	teq	r0, #0
   1df74:	moveq	r1, #0
   1df78:	bxeq	lr
   1df7c:	push	{r4, r5, lr}
   1df80:	mov	r4, #1024	; 0x400
   1df84:	add	r4, r4, #50	; 0x32
   1df88:	ands	r5, r0, #-2147483648	; 0x80000000
   1df8c:	rsbmi	r0, r0, #0
   1df90:	mov	r1, #0
   1df94:	b	1dde8 <_obstack_memory_used@@Base+0x1cf4>
   1df98:	lsls	r2, r0, #1
   1df9c:	asr	r1, r2, #3
   1dfa0:	rrx	r1, r1
   1dfa4:	lsl	r0, r2, #28
   1dfa8:	andsne	r3, r2, #-16777216	; 0xff000000
   1dfac:	teqne	r3, #-16777216	; 0xff000000
   1dfb0:	eorne	r1, r1, #939524096	; 0x38000000
   1dfb4:	bxne	lr
   1dfb8:	bics	r2, r2, #-16777216	; 0xff000000
   1dfbc:	bxeq	lr
   1dfc0:	teq	r3, #-16777216	; 0xff000000
   1dfc4:	orreq	r1, r1, #524288	; 0x80000
   1dfc8:	bxeq	lr
   1dfcc:	push	{r4, r5, lr}
   1dfd0:	mov	r4, #896	; 0x380
   1dfd4:	and	r5, r1, #-2147483648	; 0x80000000
   1dfd8:	bic	r1, r1, #-2147483648	; 0x80000000
   1dfdc:	b	1dde8 <_obstack_memory_used@@Base+0x1cf4>
   1dfe0:	orrs	r2, r0, r1
   1dfe4:	bxeq	lr
   1dfe8:	push	{r4, r5, lr}
   1dfec:	mov	r5, #0
   1dff0:	b	1e010 <_obstack_memory_used@@Base+0x1f1c>
   1dff4:	orrs	r2, r0, r1
   1dff8:	bxeq	lr
   1dffc:	push	{r4, r5, lr}
   1e000:	ands	r5, r1, #-2147483648	; 0x80000000
   1e004:	bpl	1e010 <_obstack_memory_used@@Base+0x1f1c>
   1e008:	rsbs	r0, r0, #0
   1e00c:	rsc	r1, r1, #0
   1e010:	mov	r4, #1024	; 0x400
   1e014:	add	r4, r4, #50	; 0x32
   1e018:	lsrs	ip, r1, #22
   1e01c:	beq	1dd8c <_obstack_memory_used@@Base+0x1c98>
   1e020:	mov	r2, #3
   1e024:	lsrs	ip, ip, #3
   1e028:	addne	r2, r2, #3
   1e02c:	lsrs	ip, ip, #3
   1e030:	addne	r2, r2, #3
   1e034:	add	r2, r2, ip, lsr #3
   1e038:	rsb	r3, r2, #32
   1e03c:	lsl	ip, r0, r3
   1e040:	lsr	r0, r0, r2
   1e044:	orr	r0, r0, r1, lsl r3
   1e048:	lsr	r1, r1, r2
   1e04c:	add	r4, r4, r2
   1e050:	b	1dd8c <_obstack_memory_used@@Base+0x1c98>
   1e054:	cmp	r3, #0
   1e058:	cmpeq	r2, #0
   1e05c:	bne	1e080 <_obstack_memory_used@@Base+0x1f8c>
   1e060:	cmp	r1, #0
   1e064:	movlt	r1, #-2147483648	; 0x80000000
   1e068:	movlt	r0, #0
   1e06c:	blt	1e07c <_obstack_memory_used@@Base+0x1f88>
   1e070:	cmpeq	r0, #0
   1e074:	mvnne	r1, #-2147483648	; 0x80000000
   1e078:	mvnne	r0, #0
   1e07c:	b	1e164 <_obstack_memory_used@@Base+0x2070>
   1e080:	sub	sp, sp, #8
   1e084:	push	{sp, lr}
   1e088:	cmp	r1, #0
   1e08c:	blt	1e0ac <_obstack_memory_used@@Base+0x1fb8>
   1e090:	cmp	r3, #0
   1e094:	blt	1e0e0 <_obstack_memory_used@@Base+0x1fec>
   1e098:	bl	1e174 <_obstack_memory_used@@Base+0x2080>
   1e09c:	ldr	lr, [sp, #4]
   1e0a0:	add	sp, sp, #8
   1e0a4:	pop	{r2, r3}
   1e0a8:	bx	lr
   1e0ac:	rsbs	r0, r0, #0
   1e0b0:	sbc	r1, r1, r1, lsl #1
   1e0b4:	cmp	r3, #0
   1e0b8:	blt	1e104 <_obstack_memory_used@@Base+0x2010>
   1e0bc:	bl	1e174 <_obstack_memory_used@@Base+0x2080>
   1e0c0:	ldr	lr, [sp, #4]
   1e0c4:	add	sp, sp, #8
   1e0c8:	pop	{r2, r3}
   1e0cc:	rsbs	r0, r0, #0
   1e0d0:	sbc	r1, r1, r1, lsl #1
   1e0d4:	rsbs	r2, r2, #0
   1e0d8:	sbc	r3, r3, r3, lsl #1
   1e0dc:	bx	lr
   1e0e0:	rsbs	r2, r2, #0
   1e0e4:	sbc	r3, r3, r3, lsl #1
   1e0e8:	bl	1e174 <_obstack_memory_used@@Base+0x2080>
   1e0ec:	ldr	lr, [sp, #4]
   1e0f0:	add	sp, sp, #8
   1e0f4:	pop	{r2, r3}
   1e0f8:	rsbs	r0, r0, #0
   1e0fc:	sbc	r1, r1, r1, lsl #1
   1e100:	bx	lr
   1e104:	rsbs	r2, r2, #0
   1e108:	sbc	r3, r3, r3, lsl #1
   1e10c:	bl	1e174 <_obstack_memory_used@@Base+0x2080>
   1e110:	ldr	lr, [sp, #4]
   1e114:	add	sp, sp, #8
   1e118:	pop	{r2, r3}
   1e11c:	rsbs	r2, r2, #0
   1e120:	sbc	r3, r3, r3, lsl #1
   1e124:	bx	lr
   1e128:	cmp	r3, #0
   1e12c:	cmpeq	r2, #0
   1e130:	bne	1e148 <_obstack_memory_used@@Base+0x2054>
   1e134:	cmp	r1, #0
   1e138:	cmpeq	r0, #0
   1e13c:	mvnne	r1, #0
   1e140:	mvnne	r0, #0
   1e144:	b	1e164 <_obstack_memory_used@@Base+0x2070>
   1e148:	sub	sp, sp, #8
   1e14c:	push	{sp, lr}
   1e150:	bl	1e174 <_obstack_memory_used@@Base+0x2080>
   1e154:	ldr	lr, [sp, #4]
   1e158:	add	sp, sp, #8
   1e15c:	pop	{r2, r3}
   1e160:	bx	lr
   1e164:	push	{r1, lr}
   1e168:	mov	r0, #8
   1e16c:	bl	112d0 <raise@plt>
   1e170:	pop	{r1, pc}
   1e174:	cmp	r1, r3
   1e178:	cmpeq	r0, r2
   1e17c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e180:	mov	r4, r0
   1e184:	movcc	r0, #0
   1e188:	mov	r5, r1
   1e18c:	ldr	lr, [sp, #36]	; 0x24
   1e190:	movcc	r1, r0
   1e194:	bcc	1e290 <_obstack_memory_used@@Base+0x219c>
   1e198:	cmp	r3, #0
   1e19c:	clzeq	ip, r2
   1e1a0:	clzne	ip, r3
   1e1a4:	addeq	ip, ip, #32
   1e1a8:	cmp	r5, #0
   1e1ac:	clzeq	r1, r4
   1e1b0:	addeq	r1, r1, #32
   1e1b4:	clzne	r1, r5
   1e1b8:	sub	ip, ip, r1
   1e1bc:	sub	sl, ip, #32
   1e1c0:	lsl	r9, r3, ip
   1e1c4:	rsb	fp, ip, #32
   1e1c8:	orr	r9, r9, r2, lsl sl
   1e1cc:	orr	r9, r9, r2, lsr fp
   1e1d0:	lsl	r8, r2, ip
   1e1d4:	cmp	r5, r9
   1e1d8:	cmpeq	r4, r8
   1e1dc:	movcc	r0, #0
   1e1e0:	movcc	r1, r0
   1e1e4:	bcc	1e200 <_obstack_memory_used@@Base+0x210c>
   1e1e8:	mov	r0, #1
   1e1ec:	subs	r4, r4, r8
   1e1f0:	lsl	r1, r0, sl
   1e1f4:	orr	r1, r1, r0, lsr fp
   1e1f8:	lsl	r0, r0, ip
   1e1fc:	sbc	r5, r5, r9
   1e200:	cmp	ip, #0
   1e204:	beq	1e290 <_obstack_memory_used@@Base+0x219c>
   1e208:	lsr	r6, r8, #1
   1e20c:	orr	r6, r6, r9, lsl #31
   1e210:	lsr	r7, r9, #1
   1e214:	mov	r2, ip
   1e218:	b	1e23c <_obstack_memory_used@@Base+0x2148>
   1e21c:	subs	r3, r4, r6
   1e220:	sbc	r8, r5, r7
   1e224:	adds	r3, r3, r3
   1e228:	adc	r8, r8, r8
   1e22c:	adds	r4, r3, #1
   1e230:	adc	r5, r8, #0
   1e234:	subs	r2, r2, #1
   1e238:	beq	1e258 <_obstack_memory_used@@Base+0x2164>
   1e23c:	cmp	r5, r7
   1e240:	cmpeq	r4, r6
   1e244:	bcs	1e21c <_obstack_memory_used@@Base+0x2128>
   1e248:	adds	r4, r4, r4
   1e24c:	adc	r5, r5, r5
   1e250:	subs	r2, r2, #1
   1e254:	bne	1e23c <_obstack_memory_used@@Base+0x2148>
   1e258:	lsr	r3, r4, ip
   1e25c:	orr	r3, r3, r5, lsl fp
   1e260:	lsr	r2, r5, ip
   1e264:	orr	r3, r3, r5, lsr sl
   1e268:	adds	r0, r0, r4
   1e26c:	mov	r4, r3
   1e270:	lsl	r3, r2, ip
   1e274:	orr	r3, r3, r4, lsl sl
   1e278:	lsl	ip, r4, ip
   1e27c:	orr	r3, r3, r4, lsr fp
   1e280:	adc	r1, r1, r5
   1e284:	subs	r0, r0, ip
   1e288:	mov	r5, r2
   1e28c:	sbc	r1, r1, r3
   1e290:	cmp	lr, #0
   1e294:	strdne	r4, [lr]
   1e298:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e29c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1e2a0:	mov	r7, r0
   1e2a4:	ldr	r6, [pc, #72]	; 1e2f4 <_obstack_memory_used@@Base+0x2200>
   1e2a8:	ldr	r5, [pc, #72]	; 1e2f8 <_obstack_memory_used@@Base+0x2204>
   1e2ac:	add	r6, pc, r6
   1e2b0:	add	r5, pc, r5
   1e2b4:	sub	r6, r6, r5
   1e2b8:	mov	r8, r1
   1e2bc:	mov	r9, r2
   1e2c0:	bl	11298 <calloc@plt-0x20>
   1e2c4:	asrs	r6, r6, #2
   1e2c8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e2cc:	mov	r4, #0
   1e2d0:	add	r4, r4, #1
   1e2d4:	ldr	r3, [r5], #4
   1e2d8:	mov	r2, r9
   1e2dc:	mov	r1, r8
   1e2e0:	mov	r0, r7
   1e2e4:	blx	r3
   1e2e8:	cmp	r6, r4
   1e2ec:	bne	1e2d0 <_obstack_memory_used@@Base+0x21dc>
   1e2f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e2f4:	andeq	r1, r1, r8, asr ip
   1e2f8:	andeq	r1, r1, r0, asr ip
   1e2fc:	bx	lr
   1e300:	ldr	r3, [pc, #12]	; 1e314 <_obstack_memory_used@@Base+0x2220>
   1e304:	mov	r1, #0
   1e308:	add	r3, pc, r3
   1e30c:	ldr	r2, [r3]
   1e310:	b	114ec <__cxa_atexit@plt>
   1e314:	andeq	r1, r1, r4, lsl lr
   1e318:	mov	r2, r1
   1e31c:	mov	r1, r0
   1e320:	mov	r0, #3
   1e324:	b	11594 <__xstat64@plt>
   1e328:	mov	r2, r1
   1e32c:	mov	r1, r0
   1e330:	mov	r0, #3
   1e334:	b	113c0 <__fxstat64@plt>

Disassembly of section .fini:

0001e338 <.fini>:
   1e338:	push	{r3, lr}
   1e33c:	pop	{r3, pc}
