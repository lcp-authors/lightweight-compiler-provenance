
../repos/prog2/3.1:     file format elf32-littlearm


Disassembly of section .init:

00010a70 <.init>:
   10a70:	push	{r3, lr}
   10a74:	bl	10d68 <_start@@Base+0x3c>
   10a78:	pop	{r3, pc}

Disassembly of section .plt:

00010a7c <calloc@plt-0x14>:
   10a7c:	push	{lr}		; (str lr, [sp, #-4]!)
   10a80:	ldr	lr, [pc, #4]	; 10a8c <calloc@plt-0x4>
   10a84:	add	lr, pc, lr
   10a88:	ldr	pc, [lr, #8]!
   10a8c:	andeq	r1, r1, r4, ror r5

00010a90 <calloc@plt>:
   10a90:	add	ip, pc, #0, 12
   10a94:	add	ip, ip, #69632	; 0x11000
   10a98:	ldr	pc, [ip, #1396]!	; 0x574

00010a9c <strstr@plt>:
   10a9c:	add	ip, pc, #0, 12
   10aa0:	add	ip, ip, #69632	; 0x11000
   10aa4:	ldr	pc, [ip, #1388]!	; 0x56c

00010aa8 <raise@plt>:
   10aa8:	add	ip, pc, #0, 12
   10aac:	add	ip, ip, #69632	; 0x11000
   10ab0:	ldr	pc, [ip, #1380]!	; 0x564

00010ab4 <strcmp@plt>:
   10ab4:	add	ip, pc, #0, 12
   10ab8:	add	ip, ip, #69632	; 0x11000
   10abc:	ldr	pc, [ip, #1372]!	; 0x55c

00010ac0 <printf@plt>:
   10ac0:	add	ip, pc, #0, 12
   10ac4:	add	ip, ip, #69632	; 0x11000
   10ac8:	ldr	pc, [ip, #1364]!	; 0x554

00010acc <fopen@plt>:
   10acc:	add	ip, pc, #0, 12
   10ad0:	add	ip, ip, #69632	; 0x11000
   10ad4:	ldr	pc, [ip, #1356]!	; 0x54c

00010ad8 <free@plt>:
   10ad8:	add	ip, pc, #0, 12
   10adc:	add	ip, ip, #69632	; 0x11000
   10ae0:	ldr	pc, [ip, #1348]!	; 0x544

00010ae4 <fgets@plt>:
   10ae4:	add	ip, pc, #0, 12
   10ae8:	add	ip, ip, #69632	; 0x11000
   10aec:	ldr	pc, [ip, #1340]!	; 0x53c

00010af0 <time@plt>:
   10af0:	add	ip, pc, #0, 12
   10af4:	add	ip, ip, #69632	; 0x11000
   10af8:	ldr	pc, [ip, #1332]!	; 0x534

00010afc <realloc@plt>:
   10afc:	add	ip, pc, #0, 12
   10b00:	add	ip, ip, #69632	; 0x11000
   10b04:	ldr	pc, [ip, #1324]!	; 0x52c

00010b08 <strcat@plt>:
   10b08:	add	ip, pc, #0, 12
   10b0c:	add	ip, ip, #69632	; 0x11000
   10b10:	ldr	pc, [ip, #1316]!	; 0x524

00010b14 <strcpy@plt>:
   10b14:	add	ip, pc, #0, 12
   10b18:	add	ip, ip, #69632	; 0x11000
   10b1c:	ldr	pc, [ip, #1308]!	; 0x51c

00010b20 <puts@plt>:
   10b20:	add	ip, pc, #0, 12
   10b24:	add	ip, ip, #69632	; 0x11000
   10b28:	ldr	pc, [ip, #1300]!	; 0x514

00010b2c <malloc@plt>:
   10b2c:	add	ip, pc, #0, 12
   10b30:	add	ip, ip, #69632	; 0x11000
   10b34:	ldr	pc, [ip, #1292]!	; 0x50c

00010b38 <__libc_start_main@plt>:
   10b38:	add	ip, pc, #0, 12
   10b3c:	add	ip, ip, #69632	; 0x11000
   10b40:	ldr	pc, [ip, #1284]!	; 0x504

00010b44 <__gmon_start__@plt>:
   10b44:	add	ip, pc, #0, 12
   10b48:	add	ip, ip, #69632	; 0x11000
   10b4c:	ldr	pc, [ip, #1276]!	; 0x4fc

00010b50 <strlen@plt>:
   10b50:	add	ip, pc, #0, 12
   10b54:	add	ip, ip, #69632	; 0x11000
   10b58:	ldr	pc, [ip, #1268]!	; 0x4f4

00010b5c <srand@plt>:
   10b5c:	add	ip, pc, #0, 12
   10b60:	add	ip, ip, #69632	; 0x11000
   10b64:	ldr	pc, [ip, #1260]!	; 0x4ec

00010b68 <rand@plt>:
   10b68:	add	ip, pc, #0, 12
   10b6c:	add	ip, ip, #69632	; 0x11000
   10b70:	ldr	pc, [ip, #1252]!	; 0x4e4

00010b74 <fclose@plt>:
   10b74:	add	ip, pc, #0, 12
   10b78:	add	ip, ip, #69632	; 0x11000
   10b7c:	ldr	pc, [ip, #1244]!	; 0x4dc

00010b80 <abort@plt>:
   10b80:	add	ip, pc, #0, 12
   10b84:	add	ip, ip, #69632	; 0x11000
   10b88:	ldr	pc, [ip, #1236]!	; 0x4d4

Disassembly of section .text:

00010b8c <main@@Base>:
   10b8c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10b90:	sub	sp, sp, #104	; 0x68
   10b94:	bl	11070 <vetor_novo@@Base>
   10b98:	ldr	r1, [pc, #352]	; 10d00 <main@@Base+0x174>
   10b9c:	mov	r4, #0
   10ba0:	add	r1, pc, r1
   10ba4:	mov	sl, r4
   10ba8:	add	r5, sp, #4
   10bac:	mov	r9, #100	; 0x64
   10bb0:	mov	r7, r0
   10bb4:	ldr	r0, [pc, #328]	; 10d04 <main@@Base+0x178>
   10bb8:	add	r0, pc, r0
   10bbc:	bl	10acc <fopen@plt>
   10bc0:	mov	r8, r0
   10bc4:	b	10bf8 <main@@Base+0x6c>
   10bc8:	bl	10b50 <strlen@plt>
   10bcc:	add	r3, sp, #104	; 0x68
   10bd0:	mov	r2, r4
   10bd4:	mov	r1, r5
   10bd8:	add	r4, r4, #1
   10bdc:	add	r3, r3, r0
   10be0:	mov	r0, r7
   10be4:	strb	sl, [r3, #-101]	; 0xffffff9b
   10be8:	bl	111b8 <vetor_insere@@Base>
   10bec:	cmn	r0, #1
   10bf0:	mov	r6, r0
   10bf4:	beq	10cf0 <main@@Base+0x164>
   10bf8:	mov	r2, r8
   10bfc:	mov	r1, r9
   10c00:	mov	r0, r5
   10c04:	bl	10ae4 <fgets@plt>
   10c08:	cmp	r0, #0
   10c0c:	mov	r0, r5
   10c10:	bne	10bc8 <main@@Base+0x3c>
   10c14:	ldr	r0, [pc, #236]	; 10d08 <main@@Base+0x17c>
   10c18:	mov	r1, r4
   10c1c:	add	r0, pc, r0
   10c20:	bl	10ac0 <printf@plt>
   10c24:	mov	r0, r7
   10c28:	bl	10e54 <vetor_imprime@@Base>
   10c2c:	ldr	r1, [pc, #216]	; 10d0c <main@@Base+0x180>
   10c30:	mov	r0, r7
   10c34:	add	r1, pc, r1
   10c38:	bl	11314 <vetor_pesquisa@@Base>
   10c3c:	mov	r1, r0
   10c40:	ldr	r0, [pc, #200]	; 10d10 <main@@Base+0x184>
   10c44:	add	r0, pc, r0
   10c48:	bl	10ac0 <printf@plt>
   10c4c:	mov	r0, r7
   10c50:	bl	11374 <vetor_ordena@@Base>
   10c54:	cmp	r0, #0
   10c58:	beq	10ce4 <main@@Base+0x158>
   10c5c:	ldr	r0, [pc, #176]	; 10d14 <main@@Base+0x188>
   10c60:	add	r0, pc, r0
   10c64:	bl	10b20 <puts@plt>
   10c68:	ldr	r1, [pc, #168]	; 10d18 <main@@Base+0x18c>
   10c6c:	mov	r0, r7
   10c70:	add	r1, pc, r1
   10c74:	bl	10ea4 <vetor_num_ocorrencias@@Base>
   10c78:	mov	r6, #0
   10c7c:	mov	r1, r0
   10c80:	ldr	r0, [pc, #148]	; 10d1c <main@@Base+0x190>
   10c84:	add	r0, pc, r0
   10c88:	bl	10ac0 <printf@plt>
   10c8c:	mov	r0, r7
   10c90:	bl	10f00 <vetor_remove_repetidas@@Base>
   10c94:	ldr	r1, [r7]
   10c98:	ldr	r0, [pc, #128]	; 10d20 <main@@Base+0x194>
   10c9c:	sub	r1, r1, #1
   10ca0:	add	r0, pc, r0
   10ca4:	bl	10ac0 <printf@plt>
   10ca8:	ldr	r1, [pc, #116]	; 10d24 <main@@Base+0x198>
   10cac:	mov	r0, r7
   10cb0:	add	r1, pc, r1
   10cb4:	bl	10fcc <vetor_pesquisa_parcial@@Base>
   10cb8:	mov	r4, r0
   10cbc:	bl	10e54 <vetor_imprime@@Base>
   10cc0:	mov	r0, r4
   10cc4:	bl	11094 <vetor_apaga@@Base>
   10cc8:	mov	r0, r7
   10ccc:	bl	11094 <vetor_apaga@@Base>
   10cd0:	mov	r0, r8
   10cd4:	bl	10b74 <fclose@plt>
   10cd8:	mov	r0, r6
   10cdc:	add	sp, sp, #104	; 0x68
   10ce0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10ce4:	mov	r0, r7
   10ce8:	bl	10e54 <vetor_imprime@@Base>
   10cec:	b	10c68 <main@@Base+0xdc>
   10cf0:	ldr	r0, [pc, #48]	; 10d28 <main@@Base+0x19c>
   10cf4:	add	r0, pc, r0
   10cf8:	bl	10b20 <puts@plt>
   10cfc:	b	10cd8 <main@@Base+0x14c>
   10d00:	andeq	r0, r0, ip, lsr #27
   10d04:	andeq	r0, r0, r0, lsr #25
   10d08:	andeq	r0, r0, r4, lsl #25
   10d0c:	andeq	r0, r0, r8, lsl #25
   10d10:	muleq	r0, ip, ip
   10d14:	andeq	r0, r0, r8, asr #25
   10d18:	andeq	r0, r0, r0, ror #25
   10d1c:	andeq	r0, r0, r0, ror #25
   10d20:	strdeq	r0, [r0], -ip
   10d24:	andeq	r0, r0, ip, lsr #26
   10d28:	andeq	r0, r0, ip, ror fp

00010d2c <_start@@Base>:
   10d2c:	mov	fp, #0
   10d30:	mov	lr, #0
   10d34:	pop	{r1}		; (ldr r1, [sp], #4)
   10d38:	mov	r2, sp
   10d3c:	push	{r2}		; (str r2, [sp, #-4]!)
   10d40:	push	{r0}		; (str r0, [sp, #-4]!)
   10d44:	ldr	ip, [pc, #16]	; 10d5c <_start@@Base+0x30>
   10d48:	push	{ip}		; (str ip, [sp, #-4]!)
   10d4c:	ldr	r0, [pc, #12]	; 10d60 <_start@@Base+0x34>
   10d50:	ldr	r3, [pc, #12]	; 10d64 <_start@@Base+0x38>
   10d54:	bl	10b38 <__libc_start_main@plt>
   10d58:	bl	10b80 <abort@plt>
   10d5c:	ldrdeq	r1, [r1], -r8
   10d60:	andeq	r0, r1, ip, lsl #23
   10d64:	andeq	r1, r1, r8, ror r7
   10d68:	ldr	r3, [pc, #20]	; 10d84 <_start@@Base+0x58>
   10d6c:	ldr	r2, [pc, #20]	; 10d88 <_start@@Base+0x5c>
   10d70:	add	r3, pc, r3
   10d74:	ldr	r2, [r3, r2]
   10d78:	cmp	r2, #0
   10d7c:	bxeq	lr
   10d80:	b	10b44 <__gmon_start__@plt>
   10d84:	andeq	r1, r1, r8, lsl #5
   10d88:	andeq	r0, r0, r0, rrx
   10d8c:	ldr	r3, [pc, #28]	; 10db0 <_start@@Base+0x84>
   10d90:	ldr	r0, [pc, #28]	; 10db4 <_start@@Base+0x88>
   10d94:	sub	r3, r3, r0
   10d98:	cmp	r3, #6
   10d9c:	bxls	lr
   10da0:	ldr	r3, [pc, #16]	; 10db8 <_start@@Base+0x8c>
   10da4:	cmp	r3, #0
   10da8:	bxeq	lr
   10dac:	bx	r3
   10db0:	andeq	r2, r2, pc, rrx
   10db4:	andeq	r2, r2, ip, rrx
   10db8:	andeq	r0, r0, r0
   10dbc:	ldr	r1, [pc, #36]	; 10de8 <_start@@Base+0xbc>
   10dc0:	ldr	r0, [pc, #36]	; 10dec <_start@@Base+0xc0>
   10dc4:	sub	r1, r1, r0
   10dc8:	asr	r1, r1, #2
   10dcc:	add	r1, r1, r1, lsr #31
   10dd0:	asrs	r1, r1, #1
   10dd4:	bxeq	lr
   10dd8:	ldr	r3, [pc, #16]	; 10df0 <_start@@Base+0xc4>
   10ddc:	cmp	r3, #0
   10de0:	bxeq	lr
   10de4:	bx	r3
   10de8:	andeq	r2, r2, ip, rrx
   10dec:	andeq	r2, r2, ip, rrx
   10df0:	andeq	r0, r0, r0
   10df4:	push	{r4, lr}
   10df8:	ldr	r4, [pc, #24]	; 10e18 <_start@@Base+0xec>
   10dfc:	ldrb	r3, [r4]
   10e00:	cmp	r3, #0
   10e04:	popne	{r4, pc}
   10e08:	bl	10d8c <_start@@Base+0x60>
   10e0c:	mov	r3, #1
   10e10:	strb	r3, [r4]
   10e14:	pop	{r4, pc}
   10e18:	andeq	r2, r2, ip, rrx
   10e1c:	ldr	r0, [pc, #40]	; 10e4c <_start@@Base+0x120>
   10e20:	ldr	r3, [r0]
   10e24:	cmp	r3, #0
   10e28:	bne	10e30 <_start@@Base+0x104>
   10e2c:	b	10dbc <_start@@Base+0x90>
   10e30:	ldr	r3, [pc, #24]	; 10e50 <_start@@Base+0x124>
   10e34:	cmp	r3, #0
   10e38:	beq	10e2c <_start@@Base+0x100>
   10e3c:	push	{r4, lr}
   10e40:	blx	r3
   10e44:	pop	{r4, lr}
   10e48:	b	10dbc <_start@@Base+0x90>
   10e4c:	andeq	r1, r2, r4, lsl pc
   10e50:	andeq	r0, r0, r0

00010e54 <vetor_imprime@@Base>:
   10e54:	push	{r4, r5, r6, r7, r8, lr}
   10e58:	ldr	r6, [r0]
   10e5c:	cmp	r6, #0
   10e60:	pople	{r4, r5, r6, r7, r8, pc}
   10e64:	ldr	r7, [pc, #52]	; 10ea0 <vetor_imprime@@Base+0x4c>
   10e68:	mov	r5, r0
   10e6c:	add	r7, pc, r7
   10e70:	mov	r4, #0
   10e74:	mov	r1, r4
   10e78:	mov	r0, r5
   10e7c:	bl	11184 <vetor_elemento@@Base>
   10e80:	mov	r1, r4
   10e84:	add	r4, r4, #1
   10e88:	mov	r2, r0
   10e8c:	mov	r0, r7
   10e90:	bl	10ac0 <printf@plt>
   10e94:	cmp	r6, r4
   10e98:	bne	10e74 <vetor_imprime@@Base+0x20>
   10e9c:	pop	{r4, r5, r6, r7, r8, pc}
   10ea0:	andeq	r0, r0, r4, ror r9

00010ea4 <vetor_num_ocorrencias@@Base>:
   10ea4:	push	{r4, r5, r6, r7, r8, lr}
   10ea8:	ldr	r7, [r0]
   10eac:	cmp	r7, #0
   10eb0:	ble	10ef8 <vetor_num_ocorrencias@@Base+0x54>
   10eb4:	mov	r4, #0
   10eb8:	mov	r6, r1
   10ebc:	mov	r5, r0
   10ec0:	mov	r8, r4
   10ec4:	mov	r1, r4
   10ec8:	mov	r0, r5
   10ecc:	bl	11184 <vetor_elemento@@Base>
   10ed0:	add	r4, r4, #1
   10ed4:	mov	r1, r0
   10ed8:	mov	r0, r6
   10edc:	bl	10ab4 <strcmp@plt>
   10ee0:	cmp	r0, #0
   10ee4:	addeq	r8, r8, #1
   10ee8:	cmp	r7, r4
   10eec:	bne	10ec4 <vetor_num_ocorrencias@@Base+0x20>
   10ef0:	mov	r0, r8
   10ef4:	pop	{r4, r5, r6, r7, r8, pc}
   10ef8:	mov	r8, #0
   10efc:	b	10ef0 <vetor_num_ocorrencias@@Base+0x4c>

00010f00 <vetor_remove_repetidas@@Base>:
   10f00:	ldr	r3, [r0]
   10f04:	cmp	r3, #0
   10f08:	bxle	lr
   10f0c:	push	{r4, r5, r6, r7, r8, lr}
   10f10:	sub	sp, sp, #104	; 0x68
   10f14:	ldr	r8, [pc, #172]	; 10fc8 <vetor_remove_repetidas@@Base+0xc8>
   10f18:	mov	r5, r0
   10f1c:	add	r8, pc, r8
   10f20:	mov	r7, #0
   10f24:	add	r6, sp, #4
   10f28:	mov	r1, r7
   10f2c:	mov	r0, r5
   10f30:	bl	11184 <vetor_elemento@@Base>
   10f34:	add	r7, r7, #1
   10f38:	mov	r1, r0
   10f3c:	mov	r0, r6
   10f40:	bl	10b14 <strcpy@plt>
   10f44:	ldr	r3, [r5]
   10f48:	cmp	r7, r3
   10f4c:	bge	10fc0 <vetor_remove_repetidas@@Base+0xc0>
   10f50:	mov	r4, r7
   10f54:	b	10f68 <vetor_remove_repetidas@@Base+0x68>
   10f58:	ldr	r3, [r5]
   10f5c:	add	r4, r4, #1
   10f60:	cmp	r3, r4
   10f64:	ble	10fb8 <vetor_remove_repetidas@@Base+0xb8>
   10f68:	mov	r1, r4
   10f6c:	mov	r0, r5
   10f70:	bl	11184 <vetor_elemento@@Base>
   10f74:	mov	r1, r0
   10f78:	mov	r0, r6
   10f7c:	bl	10ab4 <strcmp@plt>
   10f80:	cmp	r0, #0
   10f84:	bne	10f58 <vetor_remove_repetidas@@Base+0x58>
   10f88:	mov	r1, r4
   10f8c:	mov	r0, r5
   10f90:	bl	11294 <vetor_remove@@Base>
   10f94:	cmn	r0, #1
   10f98:	subne	r4, r4, #1
   10f9c:	bne	10f58 <vetor_remove_repetidas@@Base+0x58>
   10fa0:	mov	r0, r8
   10fa4:	bl	10b20 <puts@plt>
   10fa8:	ldr	r3, [r5]
   10fac:	add	r4, r4, #1
   10fb0:	cmp	r3, r4
   10fb4:	bgt	10f68 <vetor_remove_repetidas@@Base+0x68>
   10fb8:	cmp	r7, r3
   10fbc:	blt	10f28 <vetor_remove_repetidas@@Base+0x28>
   10fc0:	add	sp, sp, #104	; 0x68
   10fc4:	pop	{r4, r5, r6, r7, r8, pc}
   10fc8:	ldrdeq	r0, [r0], -r4

00010fcc <vetor_pesquisa_parcial@@Base>:
   10fcc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10fd0:	mov	r5, r0
   10fd4:	mov	r6, r1
   10fd8:	bl	11070 <vetor_novo@@Base>
   10fdc:	ldr	r3, [r5]
   10fe0:	cmp	r3, #0
   10fe4:	mov	r7, r0
   10fe8:	ble	11064 <vetor_pesquisa_parcial@@Base+0x98>
   10fec:	ldr	r9, [pc, #120]	; 1106c <vetor_pesquisa_parcial@@Base+0xa0>
   10ff0:	mov	r4, #0
   10ff4:	add	r9, pc, r9
   10ff8:	mov	r8, r4
   10ffc:	b	1100c <vetor_pesquisa_parcial@@Base+0x40>
   11000:	ldr	r3, [r5]
   11004:	cmp	r3, r4
   11008:	ble	11064 <vetor_pesquisa_parcial@@Base+0x98>
   1100c:	mov	r1, r4
   11010:	mov	r0, r5
   11014:	bl	11184 <vetor_elemento@@Base>
   11018:	mov	r1, r6
   1101c:	bl	10a9c <strstr@plt>
   11020:	mov	r1, r4
   11024:	add	r4, r4, #1
   11028:	cmp	r0, #0
   1102c:	mov	r0, r5
   11030:	beq	11000 <vetor_pesquisa_parcial@@Base+0x34>
   11034:	bl	11184 <vetor_elemento@@Base>
   11038:	mov	r2, r8
   1103c:	mov	r1, r0
   11040:	mov	r0, r7
   11044:	bl	111b8 <vetor_insere@@Base>
   11048:	cmn	r0, #1
   1104c:	bne	11000 <vetor_pesquisa_parcial@@Base+0x34>
   11050:	mov	r0, r9
   11054:	bl	10b20 <puts@plt>
   11058:	ldr	r3, [r5]
   1105c:	cmp	r3, r4
   11060:	bgt	1100c <vetor_pesquisa_parcial@@Base+0x40>
   11064:	mov	r0, r7
   11068:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1106c:	andeq	r0, r0, r8, lsr #16

00011070 <vetor_novo@@Base>:
   11070:	push	{r4, lr}
   11074:	mov	r0, #12
   11078:	bl	10b2c <malloc@plt>
   1107c:	cmp	r0, #0
   11080:	movne	r3, #0
   11084:	strne	r3, [r0]
   11088:	strne	r3, [r0, #4]
   1108c:	strne	r3, [r0, #8]
   11090:	pop	{r4, pc}

00011094 <vetor_apaga@@Base>:
   11094:	push	{r4, r5, r6, lr}
   11098:	subs	r5, r0, #0
   1109c:	popeq	{r4, r5, r6, pc}
   110a0:	ldr	r3, [r5]
   110a4:	cmp	r3, #0
   110a8:	movgt	r4, #0
   110ac:	ble	110cc <vetor_apaga@@Base+0x38>
   110b0:	ldr	r3, [r5, #8]
   110b4:	ldr	r0, [r3, r4, lsl #2]
   110b8:	bl	10ad8 <free@plt>
   110bc:	ldr	r3, [r5]
   110c0:	add	r4, r4, #1
   110c4:	cmp	r3, r4
   110c8:	bgt	110b0 <vetor_apaga@@Base+0x1c>
   110cc:	ldr	r0, [r5, #8]
   110d0:	bl	10ad8 <free@plt>
   110d4:	mov	r0, r5
   110d8:	pop	{r4, r5, r6, lr}
   110dc:	b	10ad8 <free@plt>

000110e0 <vetor_atribui@@Base>:
   110e0:	clz	r3, r0
   110e4:	lsr	r3, r3, #5
   110e8:	orrs	r3, r3, r1, lsr #31
   110ec:	bne	1116c <vetor_atribui@@Base+0x8c>
   110f0:	ldr	r3, [r0]
   110f4:	cmp	r1, r3
   110f8:	bge	1116c <vetor_atribui@@Base+0x8c>
   110fc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11100:	mov	r5, r0
   11104:	mov	r0, r2
   11108:	mov	r4, r1
   1110c:	mov	r6, r2
   11110:	bl	10b50 <strlen@plt>
   11114:	ldr	r8, [r5, #8]
   11118:	ldr	r7, [r8, r4, lsl #2]
   1111c:	mov	r9, r0
   11120:	mov	r0, r7
   11124:	bl	10b50 <strlen@plt>
   11128:	cmp	r9, r0
   1112c:	bls	11150 <vetor_atribui@@Base+0x70>
   11130:	mov	r0, r7
   11134:	add	r1, r9, #1
   11138:	bl	10afc <realloc@plt>
   1113c:	ldr	r3, [r5, #8]
   11140:	str	r0, [r8, r4, lsl #2]
   11144:	ldr	r7, [r3, r4, lsl #2]
   11148:	cmp	r7, #0
   1114c:	beq	11164 <vetor_atribui@@Base+0x84>
   11150:	mov	r1, r6
   11154:	mov	r0, r7
   11158:	bl	10b14 <strcpy@plt>
   1115c:	mov	r0, r4
   11160:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11164:	mvn	r0, #0
   11168:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1116c:	mvn	r0, #0
   11170:	bx	lr

00011174 <vetor_tamanho@@Base>:
   11174:	cmp	r0, #0
   11178:	ldrne	r0, [r0]
   1117c:	mvneq	r0, #0
   11180:	bx	lr

00011184 <vetor_elemento@@Base>:
   11184:	lsr	r3, r1, #31
   11188:	cmp	r0, #0
   1118c:	orreq	r3, r3, #1
   11190:	cmp	r3, #0
   11194:	bne	111b0 <vetor_elemento@@Base+0x2c>
   11198:	ldr	r2, [r0]
   1119c:	cmp	r1, r2
   111a0:	bge	111b0 <vetor_elemento@@Base+0x2c>
   111a4:	ldr	r3, [r0, #8]
   111a8:	ldr	r0, [r3, r1, lsl #2]
   111ac:	bx	lr
   111b0:	mov	r0, #0
   111b4:	bx	lr

000111b8 <vetor_insere@@Base>:
   111b8:	clz	r3, r0
   111bc:	lsr	r3, r3, #5
   111c0:	orrs	r3, r3, r2, lsr #31
   111c4:	bne	1128c <vetor_insere@@Base+0xd4>
   111c8:	push	{r4, r5, r6, r7, r8, lr}
   111cc:	ldr	r7, [r0]
   111d0:	cmp	r2, r7
   111d4:	bgt	11284 <vetor_insere@@Base+0xcc>
   111d8:	ldr	r3, [r0, #4]
   111dc:	mov	r6, r0
   111e0:	cmp	r7, r3
   111e4:	mov	r8, r1
   111e8:	mov	r4, r2
   111ec:	beq	1124c <vetor_insere@@Base+0x94>
   111f0:	ldr	r5, [r0, #8]
   111f4:	cmp	r4, r7
   111f8:	addlt	r3, r5, r7, lsl #2
   111fc:	addlt	r2, r5, r4, lsl #2
   11200:	bge	11214 <vetor_insere@@Base+0x5c>
   11204:	ldr	ip, [r3, #-4]
   11208:	str	ip, [r3], #-4
   1120c:	cmp	r2, r3
   11210:	bne	11204 <vetor_insere@@Base+0x4c>
   11214:	mov	r0, r8
   11218:	bl	10b50 <strlen@plt>
   1121c:	mov	r1, #1
   11220:	add	r0, r0, r1
   11224:	bl	10a90 <calloc@plt>
   11228:	cmp	r0, #0
   1122c:	str	r0, [r5, r4, lsl #2]
   11230:	beq	11284 <vetor_insere@@Base+0xcc>
   11234:	mov	r1, r8
   11238:	bl	10b14 <strcpy@plt>
   1123c:	add	r3, r7, #1
   11240:	mov	r0, r4
   11244:	str	r3, [r6]
   11248:	pop	{r4, r5, r6, r7, r8, pc}
   1124c:	cmp	r7, #0
   11250:	moveq	r3, #1
   11254:	lslne	r3, r7, #1
   11258:	streq	r3, [r0, #4]
   1125c:	strne	r3, [r0, #4]
   11260:	moveq	r1, #4
   11264:	lslne	r1, r7, #3
   11268:	ldr	r0, [r0, #8]
   1126c:	bl	10afc <realloc@plt>
   11270:	cmp	r0, #0
   11274:	str	r0, [r6, #8]
   11278:	ldrne	r7, [r6]
   1127c:	movne	r5, r0
   11280:	bne	111f4 <vetor_insere@@Base+0x3c>
   11284:	mvn	r0, #0
   11288:	pop	{r4, r5, r6, r7, r8, pc}
   1128c:	mvn	r0, #0
   11290:	bx	lr

00011294 <vetor_remove@@Base>:
   11294:	clz	r3, r0
   11298:	lsr	r3, r3, #5
   1129c:	orrs	r3, r3, r1, lsr #31
   112a0:	bne	1130c <vetor_remove@@Base+0x78>
   112a4:	ldr	r3, [r0]
   112a8:	cmp	r1, r3
   112ac:	bge	1130c <vetor_remove@@Base+0x78>
   112b0:	ldr	r3, [r0, #8]
   112b4:	push	{r4, r5, r6, lr}
   112b8:	mov	r6, r0
   112bc:	ldr	r0, [r3, r1, lsl #2]
   112c0:	mov	r5, r1
   112c4:	lsl	r4, r1, #2
   112c8:	bl	10ad8 <free@plt>
   112cc:	ldr	r0, [r6]
   112d0:	add	r1, r5, #1
   112d4:	cmp	r1, r0
   112d8:	bge	112fc <vetor_remove@@Base+0x68>
   112dc:	ldr	r2, [r6, #8]
   112e0:	sub	r1, r0, #-1073741823	; 0xc0000001
   112e4:	add	r3, r2, r4
   112e8:	add	r1, r2, r1, lsl #2
   112ec:	ldr	r2, [r3, #4]
   112f0:	str	r2, [r3], #4
   112f4:	cmp	r3, r1
   112f8:	bne	112ec <vetor_remove@@Base+0x58>
   112fc:	sub	r0, r0, #1
   11300:	str	r0, [r6]
   11304:	mov	r0, #0
   11308:	pop	{r4, r5, r6, pc}
   1130c:	mvn	r0, #0
   11310:	bx	lr

00011314 <vetor_pesquisa@@Base>:
   11314:	cmp	r0, #0
   11318:	push	{r4, r5, r6, r7, r8, lr}
   1131c:	beq	11368 <vetor_pesquisa@@Base+0x54>
   11320:	ldr	r7, [r0]
   11324:	cmp	r7, #0
   11328:	ble	11368 <vetor_pesquisa@@Base+0x54>
   1132c:	ldr	r5, [r0, #8]
   11330:	mov	r6, r1
   11334:	mov	r4, #0
   11338:	sub	r5, r5, #4
   1133c:	b	1134c <vetor_pesquisa@@Base+0x38>
   11340:	add	r4, r4, #1
   11344:	cmp	r4, r7
   11348:	beq	11368 <vetor_pesquisa@@Base+0x54>
   1134c:	mov	r1, r6
   11350:	ldr	r0, [r5, #4]!
   11354:	bl	10ab4 <strcmp@plt>
   11358:	cmp	r0, #0
   1135c:	bne	11340 <vetor_pesquisa@@Base+0x2c>
   11360:	mov	r0, r4
   11364:	pop	{r4, r5, r6, r7, r8, pc}
   11368:	mvn	r4, #0
   1136c:	mov	r0, r4
   11370:	pop	{r4, r5, r6, r7, r8, pc}

00011374 <vetor_ordena@@Base>:
   11374:	cmp	r0, #0
   11378:	beq	113f0 <vetor_ordena@@Base+0x7c>
   1137c:	ldr	r3, [r0]
   11380:	cmp	r3, #1
   11384:	ble	113e8 <vetor_ordena@@Base+0x74>
   11388:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1138c:	sub	r3, r3, #-1073741823	; 0xc0000001
   11390:	ldr	sl, [r0, #8]
   11394:	mov	r8, #1
   11398:	mov	r7, sl
   1139c:	add	r9, sl, r3, lsl #2
   113a0:	ldr	r6, [r7, #4]!
   113a4:	mov	r5, r8
   113a8:	mov	r4, r7
   113ac:	ldr	r1, [r4, #-4]
   113b0:	mov	r0, r6
   113b4:	bl	10ab4 <strcmp@plt>
   113b8:	cmp	r0, #0
   113bc:	bge	113d0 <vetor_ordena@@Base+0x5c>
   113c0:	ldr	r3, [r4, #-4]!
   113c4:	subs	r5, r5, #1
   113c8:	str	r3, [r4, #4]
   113cc:	bne	113ac <vetor_ordena@@Base+0x38>
   113d0:	cmp	r9, r7
   113d4:	str	r6, [sl, r5, lsl #2]
   113d8:	add	r8, r8, #1
   113dc:	bne	113a0 <vetor_ordena@@Base+0x2c>
   113e0:	mov	r0, #0
   113e4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   113e8:	mov	r0, #0
   113ec:	bx	lr
   113f0:	mvn	r0, #0
   113f4:	bx	lr

000113f8 <vetor_concatena@@Base>:
   113f8:	cmp	r1, #0
   113fc:	cmpne	r0, #0
   11400:	push	{r4, r5, r6, lr}
   11404:	moveq	r6, #0
   11408:	beq	1145c <vetor_concatena@@Base+0x64>
   1140c:	mov	r4, r1
   11410:	mov	r5, r0
   11414:	bl	11070 <vetor_novo@@Base>
   11418:	ldm	r5, {r2, r3}
   1141c:	ldr	r1, [r4]
   11420:	mov	r6, r0
   11424:	add	r0, r2, r1, lsl #2
   11428:	str	r0, [r6, #8]
   1142c:	ldr	r0, [r4, #4]
   11430:	ldr	ip, [r5, #8]
   11434:	add	r3, r3, r0
   11438:	ldr	r0, [r2, r1, lsl #2]
   1143c:	ldr	r1, [ip]
   11440:	str	r3, [r6, #4]
   11444:	bl	10b14 <strcpy@plt>
   11448:	ldr	r2, [r4, #8]
   1144c:	ldr	r3, [r6, #8]
   11450:	ldr	r1, [r2]
   11454:	ldr	r0, [r3]
   11458:	bl	10b08 <strcat@plt>
   1145c:	mov	r0, r6
   11460:	pop	{r4, r5, r6, pc}

00011464 <vetor_inverte@@Base>:
   11464:	push	{r4, r5, r6, lr}
   11468:	mov	r4, r0
   1146c:	bl	11174 <vetor_tamanho@@Base>
   11470:	cmp	r0, #0
   11474:	ble	114b8 <vetor_inverte@@Base+0x54>
   11478:	ldr	r2, [r4, #8]
   1147c:	mov	r3, r0
   11480:	sub	ip, r2, #4
   11484:	mov	r1, #0
   11488:	add	r2, r2, r0, lsl #2
   1148c:	sub	r3, r3, #1
   11490:	cmp	r0, r3
   11494:	ldr	lr, [ip, #4]
   11498:	ldr	r4, [r2]
   1149c:	add	r1, r1, #1
   114a0:	movlt	r5, r0
   114a4:	movge	r5, r3
   114a8:	cmp	r5, r1
   114ac:	str	r4, [ip, #4]!
   114b0:	str	lr, [r2], #-4
   114b4:	bgt	1148c <vetor_inverte@@Base+0x28>
   114b8:	mov	r0, #0
   114bc:	pop	{r4, r5, r6, pc}

000114c0 <vetor_baralha@@Base>:
   114c0:	push	{r4, r5, r6, r7, r8, lr}
   114c4:	sub	sp, sp, #8
   114c8:	ldr	r6, [r0]
   114cc:	bl	11070 <vetor_novo@@Base>
   114d0:	mov	r7, r0
   114d4:	add	r0, sp, #4
   114d8:	bl	10af0 <time@plt>
   114dc:	bl	10b5c <srand@plt>
   114e0:	cmp	r6, #0
   114e4:	ble	1151c <vetor_baralha@@Base+0x5c>
   114e8:	add	r8, r6, #1
   114ec:	mov	r4, #0
   114f0:	bl	10b68 <rand@plt>
   114f4:	mov	r1, r8
   114f8:	bl	11748 <vetor_baralha@@Base+0x288>
   114fc:	ldr	r5, [r7, #8]
   11500:	ldr	r3, [r5, r4, lsl #2]
   11504:	ldr	r2, [r5, r1, lsl #2]
   11508:	str	r2, [r5, r4, lsl #2]
   1150c:	add	r4, r4, #1
   11510:	cmp	r6, r4
   11514:	str	r3, [r5, r1, lsl #2]
   11518:	bne	114f0 <vetor_baralha@@Base+0x30>
   1151c:	mov	r0, r7
   11520:	add	sp, sp, #8
   11524:	pop	{r4, r5, r6, r7, r8, pc}
   11528:	cmp	r1, #0
   1152c:	beq	11738 <vetor_baralha@@Base+0x278>
   11530:	eor	ip, r0, r1
   11534:	rsbmi	r1, r1, #0
   11538:	subs	r2, r1, #1
   1153c:	beq	11704 <vetor_baralha@@Base+0x244>
   11540:	movs	r3, r0
   11544:	rsbmi	r3, r0, #0
   11548:	cmp	r3, r1
   1154c:	bls	11710 <vetor_baralha@@Base+0x250>
   11550:	tst	r1, r2
   11554:	beq	11720 <vetor_baralha@@Base+0x260>
   11558:	clz	r2, r3
   1155c:	clz	r0, r1
   11560:	sub	r2, r0, r2
   11564:	rsbs	r2, r2, #31
   11568:	addne	r2, r2, r2, lsl #1
   1156c:	mov	r0, #0
   11570:	addne	pc, pc, r2, lsl #2
   11574:	nop			; (mov r0, r0)
   11578:	cmp	r3, r1, lsl #31
   1157c:	adc	r0, r0, r0
   11580:	subcs	r3, r3, r1, lsl #31
   11584:	cmp	r3, r1, lsl #30
   11588:	adc	r0, r0, r0
   1158c:	subcs	r3, r3, r1, lsl #30
   11590:	cmp	r3, r1, lsl #29
   11594:	adc	r0, r0, r0
   11598:	subcs	r3, r3, r1, lsl #29
   1159c:	cmp	r3, r1, lsl #28
   115a0:	adc	r0, r0, r0
   115a4:	subcs	r3, r3, r1, lsl #28
   115a8:	cmp	r3, r1, lsl #27
   115ac:	adc	r0, r0, r0
   115b0:	subcs	r3, r3, r1, lsl #27
   115b4:	cmp	r3, r1, lsl #26
   115b8:	adc	r0, r0, r0
   115bc:	subcs	r3, r3, r1, lsl #26
   115c0:	cmp	r3, r1, lsl #25
   115c4:	adc	r0, r0, r0
   115c8:	subcs	r3, r3, r1, lsl #25
   115cc:	cmp	r3, r1, lsl #24
   115d0:	adc	r0, r0, r0
   115d4:	subcs	r3, r3, r1, lsl #24
   115d8:	cmp	r3, r1, lsl #23
   115dc:	adc	r0, r0, r0
   115e0:	subcs	r3, r3, r1, lsl #23
   115e4:	cmp	r3, r1, lsl #22
   115e8:	adc	r0, r0, r0
   115ec:	subcs	r3, r3, r1, lsl #22
   115f0:	cmp	r3, r1, lsl #21
   115f4:	adc	r0, r0, r0
   115f8:	subcs	r3, r3, r1, lsl #21
   115fc:	cmp	r3, r1, lsl #20
   11600:	adc	r0, r0, r0
   11604:	subcs	r3, r3, r1, lsl #20
   11608:	cmp	r3, r1, lsl #19
   1160c:	adc	r0, r0, r0
   11610:	subcs	r3, r3, r1, lsl #19
   11614:	cmp	r3, r1, lsl #18
   11618:	adc	r0, r0, r0
   1161c:	subcs	r3, r3, r1, lsl #18
   11620:	cmp	r3, r1, lsl #17
   11624:	adc	r0, r0, r0
   11628:	subcs	r3, r3, r1, lsl #17
   1162c:	cmp	r3, r1, lsl #16
   11630:	adc	r0, r0, r0
   11634:	subcs	r3, r3, r1, lsl #16
   11638:	cmp	r3, r1, lsl #15
   1163c:	adc	r0, r0, r0
   11640:	subcs	r3, r3, r1, lsl #15
   11644:	cmp	r3, r1, lsl #14
   11648:	adc	r0, r0, r0
   1164c:	subcs	r3, r3, r1, lsl #14
   11650:	cmp	r3, r1, lsl #13
   11654:	adc	r0, r0, r0
   11658:	subcs	r3, r3, r1, lsl #13
   1165c:	cmp	r3, r1, lsl #12
   11660:	adc	r0, r0, r0
   11664:	subcs	r3, r3, r1, lsl #12
   11668:	cmp	r3, r1, lsl #11
   1166c:	adc	r0, r0, r0
   11670:	subcs	r3, r3, r1, lsl #11
   11674:	cmp	r3, r1, lsl #10
   11678:	adc	r0, r0, r0
   1167c:	subcs	r3, r3, r1, lsl #10
   11680:	cmp	r3, r1, lsl #9
   11684:	adc	r0, r0, r0
   11688:	subcs	r3, r3, r1, lsl #9
   1168c:	cmp	r3, r1, lsl #8
   11690:	adc	r0, r0, r0
   11694:	subcs	r3, r3, r1, lsl #8
   11698:	cmp	r3, r1, lsl #7
   1169c:	adc	r0, r0, r0
   116a0:	subcs	r3, r3, r1, lsl #7
   116a4:	cmp	r3, r1, lsl #6
   116a8:	adc	r0, r0, r0
   116ac:	subcs	r3, r3, r1, lsl #6
   116b0:	cmp	r3, r1, lsl #5
   116b4:	adc	r0, r0, r0
   116b8:	subcs	r3, r3, r1, lsl #5
   116bc:	cmp	r3, r1, lsl #4
   116c0:	adc	r0, r0, r0
   116c4:	subcs	r3, r3, r1, lsl #4
   116c8:	cmp	r3, r1, lsl #3
   116cc:	adc	r0, r0, r0
   116d0:	subcs	r3, r3, r1, lsl #3
   116d4:	cmp	r3, r1, lsl #2
   116d8:	adc	r0, r0, r0
   116dc:	subcs	r3, r3, r1, lsl #2
   116e0:	cmp	r3, r1, lsl #1
   116e4:	adc	r0, r0, r0
   116e8:	subcs	r3, r3, r1, lsl #1
   116ec:	cmp	r3, r1
   116f0:	adc	r0, r0, r0
   116f4:	subcs	r3, r3, r1
   116f8:	cmp	ip, #0
   116fc:	rsbmi	r0, r0, #0
   11700:	bx	lr
   11704:	teq	ip, r0
   11708:	rsbmi	r0, r0, #0
   1170c:	bx	lr
   11710:	movcc	r0, #0
   11714:	asreq	r0, ip, #31
   11718:	orreq	r0, r0, #1
   1171c:	bx	lr
   11720:	clz	r2, r1
   11724:	rsb	r2, r2, #31
   11728:	cmp	ip, #0
   1172c:	lsr	r0, r3, r2
   11730:	rsbmi	r0, r0, #0
   11734:	bx	lr
   11738:	cmp	r0, #0
   1173c:	mvngt	r0, #-2147483648	; 0x80000000
   11740:	movlt	r0, #-2147483648	; 0x80000000
   11744:	b	11768 <vetor_baralha@@Base+0x2a8>
   11748:	cmp	r1, #0
   1174c:	beq	11738 <vetor_baralha@@Base+0x278>
   11750:	push	{r0, r1, lr}
   11754:	bl	11530 <vetor_baralha@@Base+0x70>
   11758:	pop	{r1, r2, lr}
   1175c:	mul	r3, r2, r0
   11760:	sub	r1, r1, r3
   11764:	bx	lr
   11768:	push	{r1, lr}
   1176c:	mov	r0, #8
   11770:	bl	10aa8 <raise@plt>
   11774:	pop	{r1, pc}

00011778 <__libc_csu_init@@Base>:
   11778:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1177c:	mov	r7, r0
   11780:	ldr	r6, [pc, #72]	; 117d0 <__libc_csu_init@@Base+0x58>
   11784:	ldr	r5, [pc, #72]	; 117d4 <__libc_csu_init@@Base+0x5c>
   11788:	add	r6, pc, r6
   1178c:	add	r5, pc, r5
   11790:	sub	r6, r6, r5
   11794:	mov	r8, r1
   11798:	mov	r9, r2
   1179c:	bl	10a70 <calloc@plt-0x20>
   117a0:	asrs	r6, r6, #2
   117a4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   117a8:	mov	r4, #0
   117ac:	add	r4, r4, #1
   117b0:	ldr	r3, [r5], #4
   117b4:	mov	r2, r9
   117b8:	mov	r1, r8
   117bc:	mov	r0, r7
   117c0:	blx	r3
   117c4:	cmp	r6, r4
   117c8:	bne	117ac <__libc_csu_init@@Base+0x34>
   117cc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   117d0:	andeq	r0, r1, r0, lsl #15
   117d4:	andeq	r0, r1, r8, ror r7

000117d8 <__libc_csu_fini@@Base>:
   117d8:	bx	lr

Disassembly of section .fini:

000117dc <.fini>:
   117dc:	push	{r3, lr}
   117e0:	pop	{r3, pc}
