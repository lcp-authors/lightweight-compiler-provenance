
../repos/prog2/0.4:     file format elf32-littlearm


Disassembly of section .init:

000105bc <.init>:
   105bc:	push	{r3, lr}
   105c0:	bl	107e0 <_start@@Base+0x3c>
   105c4:	pop	{r3, pc}

Disassembly of section .plt:

000105c8 <printf@plt-0x14>:
   105c8:	push	{lr}		; (str lr, [sp, #-4]!)
   105cc:	ldr	lr, [pc, #4]	; 105d8 <printf@plt-0x4>
   105d0:	add	lr, pc, lr
   105d4:	ldr	pc, [lr, #8]!
   105d8:	andeq	r0, r1, r8, lsr #20

000105dc <printf@plt>:
   105dc:	add	ip, pc, #0, 12
   105e0:	add	ip, ip, #16, 20	; 0x10000
   105e4:	ldr	pc, [ip, #2600]!	; 0xa28

000105e8 <puts@plt>:
   105e8:	add	ip, pc, #0, 12
   105ec:	add	ip, ip, #16, 20	; 0x10000
   105f0:	ldr	pc, [ip, #2592]!	; 0xa20

000105f4 <malloc@plt>:
   105f4:	add	ip, pc, #0, 12
   105f8:	add	ip, ip, #16, 20	; 0x10000
   105fc:	ldr	pc, [ip, #2584]!	; 0xa18

00010600 <__libc_start_main@plt>:
   10600:	add	ip, pc, #0, 12
   10604:	add	ip, ip, #16, 20	; 0x10000
   10608:	ldr	pc, [ip, #2576]!	; 0xa10

0001060c <__gmon_start__@plt>:
   1060c:	add	ip, pc, #0, 12
   10610:	add	ip, ip, #16, 20	; 0x10000
   10614:	ldr	pc, [ip, #2568]!	; 0xa08

00010618 <__isoc99_scanf@plt>:
   10618:	add	ip, pc, #0, 12
   1061c:	add	ip, ip, #16, 20	; 0x10000
   10620:	ldr	pc, [ip, #2560]!	; 0xa00

00010624 <abort@plt>:
   10624:	add	ip, pc, #0, 12
   10628:	add	ip, ip, #16, 20	; 0x10000
   1062c:	ldr	pc, [ip, #2552]!	; 0x9f8

Disassembly of section .text:

00010630 <main@@Base>:
   10630:	movw	r0, #2388	; 0x954
   10634:	movt	r0, #1
   10638:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1063c:	strd	r6, [sp, #8]
   10640:	str	r8, [sp, #16]
   10644:	str	lr, [sp, #20]
   10648:	sub	sp, sp, #8
   1064c:	bl	105dc <printf@plt>
   10650:	movw	r0, #2424	; 0x978
   10654:	movt	r0, #1
   10658:	add	r1, sp, #4
   1065c:	bl	10618 <__isoc99_scanf@plt>
   10660:	ldr	r0, [sp, #4]
   10664:	cmp	r0, #100	; 0x64
   10668:	bgt	10788 <main@@Base+0x158>
   1066c:	lsl	r0, r0, #2
   10670:	bl	105f4 <malloc@plt>
   10674:	ldr	r3, [sp, #4]
   10678:	mov	r6, r0
   1067c:	cmp	r3, #0
   10680:	ble	10708 <main@@Base+0xd8>
   10684:	movw	r8, #2476	; 0x9ac
   10688:	movt	r8, #1
   1068c:	movw	r7, #2424	; 0x978
   10690:	movt	r7, #1
   10694:	mov	r5, r0
   10698:	mov	r4, #0
   1069c:	add	r4, r4, #1
   106a0:	mov	r0, r8
   106a4:	mov	r1, r4
   106a8:	bl	105dc <printf@plt>
   106ac:	mov	r1, r5
   106b0:	mov	r0, r7
   106b4:	bl	10618 <__isoc99_scanf@plt>
   106b8:	ldr	r2, [sp, #4]
   106bc:	add	r5, r5, #4
   106c0:	cmp	r4, r2
   106c4:	blt	1069c <main@@Base+0x6c>
   106c8:	cmp	r2, #1
   106cc:	ldr	r3, [r6]
   106d0:	ble	10708 <main@@Base+0xd8>
   106d4:	ldr	r0, [r6, #4]
   106d8:	cmp	r3, r0
   106dc:	bgt	10778 <main@@Base+0x148>
   106e0:	add	ip, r6, #4
   106e4:	mov	r3, #1
   106e8:	b	106fc <main@@Base+0xcc>
   106ec:	ldr	r1, [ip, #4]!
   106f0:	cmp	r1, r0
   106f4:	mov	r0, r1
   106f8:	blt	10778 <main@@Base+0x148>
   106fc:	add	r3, r3, #1
   10700:	cmp	r2, r3
   10704:	bne	106ec <main@@Base+0xbc>
   10708:	movw	r0, #2540	; 0x9ec
   1070c:	movt	r0, #1
   10710:	bl	105dc <printf@plt>
   10714:	ldr	r4, [sp, #4]
   10718:	sub	r3, r4, #1
   1071c:	cmp	r3, #0
   10720:	ble	1074c <main@@Base+0x11c>
   10724:	add	r4, r6, r4, lsl #2
   10728:	movw	r5, #2500	; 0x9c4
   1072c:	movt	r5, #1
   10730:	add	r7, r6, #4
   10734:	ldr	r1, [r4, #-4]!
   10738:	mov	r0, r5
   1073c:	bl	105dc <printf@plt>
   10740:	cmp	r7, r4
   10744:	bne	10734 <main@@Base+0x104>
   10748:	mov	r3, #0
   1074c:	movw	r0, #2504	; 0x9c8
   10750:	movt	r0, #1
   10754:	ldr	r1, [r6, r3, lsl #2]
   10758:	bl	105dc <printf@plt>
   1075c:	mov	r0, #0
   10760:	add	sp, sp, #8
   10764:	ldrd	r4, [sp]
   10768:	ldrd	r6, [sp, #8]
   1076c:	ldr	r8, [sp, #16]
   10770:	add	sp, sp, #20
   10774:	pop	{pc}		; (ldr pc, [sp], #4)
   10778:	movw	r0, #2512	; 0x9d0
   1077c:	movt	r0, #1
   10780:	bl	105e8 <puts@plt>
   10784:	b	1075c <main@@Base+0x12c>
   10788:	movw	r0, #2428	; 0x97c
   1078c:	movt	r0, #1
   10790:	bl	105dc <printf@plt>
   10794:	mov	r3, #100	; 0x64
   10798:	mov	r0, r3
   1079c:	str	r3, [sp, #4]
   107a0:	b	1066c <main@@Base+0x3c>

000107a4 <_start@@Base>:
   107a4:	mov	fp, #0
   107a8:	mov	lr, #0
   107ac:	pop	{r1}		; (ldr r1, [sp], #4)
   107b0:	mov	r2, sp
   107b4:	push	{r2}		; (str r2, [sp, #-4]!)
   107b8:	push	{r0}		; (str r0, [sp, #-4]!)
   107bc:	ldr	ip, [pc, #16]	; 107d4 <_start@@Base+0x30>
   107c0:	push	{ip}		; (str ip, [sp, #-4]!)
   107c4:	ldr	r0, [pc, #12]	; 107d8 <_start@@Base+0x34>
   107c8:	ldr	r3, [pc, #12]	; 107dc <_start@@Base+0x38>
   107cc:	bl	10600 <__libc_start_main@plt>
   107d0:	bl	10624 <abort@plt>
   107d4:	andeq	r0, r1, r4, asr #18
   107d8:	andeq	r0, r1, r0, lsr r6
   107dc:	andeq	r0, r1, r4, ror #17
   107e0:	ldr	r3, [pc, #20]	; 107fc <_start@@Base+0x58>
   107e4:	ldr	r2, [pc, #20]	; 10800 <_start@@Base+0x5c>
   107e8:	add	r3, pc, r3
   107ec:	ldr	r2, [r3, r2]
   107f0:	cmp	r2, #0
   107f4:	bxeq	lr
   107f8:	b	1060c <__gmon_start__@plt>
   107fc:	andeq	r0, r1, r0, lsl r8
   10800:	andeq	r0, r0, r8, lsr #32
   10804:	ldr	r0, [pc, #24]	; 10824 <_start@@Base+0x80>
   10808:	ldr	r3, [pc, #24]	; 10828 <_start@@Base+0x84>
   1080c:	cmp	r3, r0
   10810:	bxeq	lr
   10814:	ldr	r3, [pc, #16]	; 1082c <_start@@Base+0x88>
   10818:	cmp	r3, #0
   1081c:	bxeq	lr
   10820:	bx	r3
   10824:	andeq	r1, r2, r4, lsr r0
   10828:	andeq	r1, r2, r4, lsr r0
   1082c:	andeq	r0, r0, r0
   10830:	ldr	r0, [pc, #36]	; 1085c <_start@@Base+0xb8>
   10834:	ldr	r1, [pc, #36]	; 10860 <_start@@Base+0xbc>
   10838:	sub	r1, r1, r0
   1083c:	asr	r1, r1, #2
   10840:	add	r1, r1, r1, lsr #31
   10844:	asrs	r1, r1, #1
   10848:	bxeq	lr
   1084c:	ldr	r3, [pc, #16]	; 10864 <_start@@Base+0xc0>
   10850:	cmp	r3, #0
   10854:	bxeq	lr
   10858:	bx	r3
   1085c:	andeq	r1, r2, r4, lsr r0
   10860:	andeq	r1, r2, r4, lsr r0
   10864:	andeq	r0, r0, r0
   10868:	push	{r4, lr}
   1086c:	ldr	r4, [pc, #24]	; 1088c <_start@@Base+0xe8>
   10870:	ldrb	r3, [r4]
   10874:	cmp	r3, #0
   10878:	popne	{r4, pc}
   1087c:	bl	10804 <_start@@Base+0x60>
   10880:	mov	r3, #1
   10884:	strb	r3, [r4]
   10888:	pop	{r4, pc}
   1088c:	andeq	r1, r2, r4, lsr r0
   10890:	b	10830 <_start@@Base+0x8c>

00010894 <ordenado@@Base>:
   10894:	cmp	r1, #1
   10898:	ldr	r3, [r0]
   1089c:	ble	108d4 <ordenado@@Base+0x40>
   108a0:	ldr	ip, [r0, #4]
   108a4:	cmp	r3, ip
   108a8:	bgt	108dc <ordenado@@Base+0x48>
   108ac:	add	r0, r0, #4
   108b0:	mov	r3, #1
   108b4:	b	108c8 <ordenado@@Base+0x34>
   108b8:	ldr	r2, [r0, #4]!
   108bc:	cmp	r2, ip
   108c0:	mov	ip, r2
   108c4:	blt	108dc <ordenado@@Base+0x48>
   108c8:	add	r3, r3, #1
   108cc:	cmp	r1, r3
   108d0:	bne	108b8 <ordenado@@Base+0x24>
   108d4:	mov	r0, #1
   108d8:	bx	lr
   108dc:	mov	r0, #0
   108e0:	bx	lr

000108e4 <__libc_csu_init@@Base>:
   108e4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   108e8:	mov	r7, r0
   108ec:	ldr	r6, [pc, #72]	; 1093c <__libc_csu_init@@Base+0x58>
   108f0:	ldr	r5, [pc, #72]	; 10940 <__libc_csu_init@@Base+0x5c>
   108f4:	add	r6, pc, r6
   108f8:	add	r5, pc, r5
   108fc:	sub	r6, r6, r5
   10900:	mov	r8, r1
   10904:	mov	r9, r2
   10908:	bl	105bc <printf@plt-0x20>
   1090c:	asrs	r6, r6, #2
   10910:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10914:	mov	r4, #0
   10918:	add	r4, r4, #1
   1091c:	ldr	r3, [r5], #4
   10920:	mov	r2, r9
   10924:	mov	r1, r8
   10928:	mov	r0, r7
   1092c:	blx	r3
   10930:	cmp	r6, r4
   10934:	bne	10918 <__libc_csu_init@@Base+0x34>
   10938:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1093c:	andeq	r0, r1, r8, lsl r6
   10940:	andeq	r0, r1, r0, lsl r6

00010944 <__libc_csu_fini@@Base>:
   10944:	bx	lr

Disassembly of section .fini:

00010948 <.fini>:
   10948:	push	{r3, lr}
   1094c:	pop	{r3, pc}
