
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/test_json_printer:     file format elf32-littlearm


Disassembly of section .init:

000123e8 <.init>:
   123e8:	push	{r3, lr}
   123ec:	bl	12574 <_start@@Base+0x3c>
   123f0:	pop	{r3, pc}

Disassembly of section .plt:

000123f4 <raise@plt-0x14>:
   123f4:	push	{lr}		; (str lr, [sp, #-4]!)
   123f8:	ldr	lr, [pc, #4]	; 12404 <raise@plt-0x4>
   123fc:	add	lr, pc, lr
   12400:	ldr	pc, [lr, #8]!
   12404:	strdeq	r2, [r2], -ip

00012408 <raise@plt>:
   12408:	add	ip, pc, #0, 12
   1240c:	add	ip, ip, #139264	; 0x22000
   12410:	ldr	pc, [ip, #3068]!	; 0xbfc

00012414 <strcmp@plt>:
   12414:	add	ip, pc, #0, 12
   12418:	add	ip, ip, #139264	; 0x22000
   1241c:	ldr	pc, [ip, #3060]!	; 0xbf4

00012420 <fopen@plt>:
   12420:	add	ip, pc, #0, 12
   12424:	add	ip, ip, #139264	; 0x22000
   12428:	ldr	pc, [ip, #3052]!	; 0xbec

0001242c <memmove@plt>:
   1242c:	add	ip, pc, #0, 12
   12430:	add	ip, ip, #139264	; 0x22000
   12434:	ldr	pc, [ip, #3044]!	; 0xbe4

00012438 <free@plt>:
   12438:	add	ip, pc, #0, 12
   1243c:	add	ip, ip, #139264	; 0x22000
   12440:	ldr	pc, [ip, #3036]!	; 0xbdc

00012444 <memcpy@plt>:
   12444:	add	ip, pc, #0, 12
   12448:	add	ip, ip, #139264	; 0x22000
   1244c:	ldr	pc, [ip, #3028]!	; 0xbd4

00012450 <ftell@plt>:
   12450:	add	ip, pc, #0, 12
   12454:	add	ip, ip, #139264	; 0x22000
   12458:	ldr	pc, [ip, #3020]!	; 0xbcc

0001245c <memcmp@plt>:
   1245c:	add	ip, pc, #0, 12
   12460:	add	ip, ip, #139264	; 0x22000
   12464:	ldr	pc, [ip, #3012]!	; 0xbc4

00012468 <rewind@plt>:
   12468:	add	ip, pc, #0, 12
   1246c:	add	ip, ip, #139264	; 0x22000
   12470:	ldr	pc, [ip, #3004]!	; 0xbbc

00012474 <realloc@plt>:
   12474:	add	ip, pc, #0, 12
   12478:	add	ip, ip, #139264	; 0x22000
   1247c:	ldr	pc, [ip, #2996]!	; 0xbb4

00012480 <fwrite@plt>:
   12480:	add	ip, pc, #0, 12
   12484:	add	ip, ip, #139264	; 0x22000
   12488:	ldr	pc, [ip, #2988]!	; 0xbac

0001248c <fread@plt>:
   1248c:	add	ip, pc, #0, 12
   12490:	add	ip, ip, #139264	; 0x22000
   12494:	ldr	pc, [ip, #2980]!	; 0xba4

00012498 <puts@plt>:
   12498:	add	ip, pc, #0, 12
   1249c:	add	ip, ip, #139264	; 0x22000
   124a0:	ldr	pc, [ip, #2972]!	; 0xb9c

000124a4 <malloc@plt>:
   124a4:	add	ip, pc, #0, 12
   124a8:	add	ip, ip, #139264	; 0x22000
   124ac:	ldr	pc, [ip, #2964]!	; 0xb94

000124b0 <__libc_start_main@plt>:
   124b0:	add	ip, pc, #0, 12
   124b4:	add	ip, ip, #139264	; 0x22000
   124b8:	ldr	pc, [ip, #2956]!	; 0xb8c

000124bc <__gmon_start__@plt>:
   124bc:	add	ip, pc, #0, 12
   124c0:	add	ip, ip, #139264	; 0x22000
   124c4:	ldr	pc, [ip, #2948]!	; 0xb84

000124c8 <exit@plt>:
   124c8:	add	ip, pc, #0, 12
   124cc:	add	ip, ip, #139264	; 0x22000
   124d0:	ldr	pc, [ip, #2940]!	; 0xb7c

000124d4 <fprintf@plt>:
   124d4:	add	ip, pc, #0, 12
   124d8:	add	ip, ip, #139264	; 0x22000
   124dc:	ldr	pc, [ip, #2932]!	; 0xb74

000124e0 <memset@plt>:
   124e0:	add	ip, pc, #0, 12
   124e4:	add	ip, ip, #139264	; 0x22000
   124e8:	ldr	pc, [ip, #2924]!	; 0xb6c

000124ec <strncpy@plt>:
   124ec:	add	ip, pc, #0, 12
   124f0:	add	ip, ip, #139264	; 0x22000
   124f4:	ldr	pc, [ip, #2916]!	; 0xb64

000124f8 <fclose@plt>:
   124f8:	add	ip, pc, #0, 12
   124fc:	add	ip, ip, #139264	; 0x22000
   12500:	ldr	pc, [ip, #2908]!	; 0xb5c

00012504 <sprintf@plt>:
   12504:	add	ip, pc, #0, 12
   12508:	add	ip, ip, #139264	; 0x22000
   1250c:	ldr	pc, [ip, #2900]!	; 0xb54

00012510 <fseek@plt>:
   12510:	add	ip, pc, #0, 12
   12514:	add	ip, ip, #139264	; 0x22000
   12518:	ldr	pc, [ip, #2892]!	; 0xb4c

0001251c <abort@plt>:
   1251c:	add	ip, pc, #0, 12
   12520:	add	ip, ip, #139264	; 0x22000
   12524:	ldr	pc, [ip, #2884]!	; 0xb44

00012528 <__assert_fail@plt>:
   12528:	add	ip, pc, #0, 12
   1252c:	add	ip, ip, #139264	; 0x22000
   12530:	ldr	pc, [ip, #2876]!	; 0xb3c

Disassembly of section .text:

00012538 <_start@@Base>:
   12538:	mov	fp, #0
   1253c:	mov	lr, #0
   12540:	pop	{r1}		; (ldr r1, [sp], #4)
   12544:	mov	r2, sp
   12548:	push	{r2}		; (str r2, [sp, #-4]!)
   1254c:	push	{r0}		; (str r0, [sp, #-4]!)
   12550:	ldr	ip, [pc, #16]	; 12568 <_start@@Base+0x30>
   12554:	push	{ip}		; (str ip, [sp, #-4]!)
   12558:	ldr	r0, [pc, #12]	; 1256c <_start@@Base+0x34>
   1255c:	ldr	r3, [pc, #12]	; 12570 <_start@@Base+0x38>
   12560:	bl	124b0 <__libc_start_main@plt>
   12564:	bl	1251c <abort@plt>
   12568:	muleq	r2, r0, r0
   1256c:	muleq	r1, r8, sp
   12570:	andeq	r3, r2, r0, lsr r0
   12574:	ldr	r3, [pc, #20]	; 12590 <_start@@Base+0x58>
   12578:	ldr	r2, [pc, #20]	; 12594 <_start@@Base+0x5c>
   1257c:	add	r3, pc, r3
   12580:	ldr	r2, [r3, r2]
   12584:	cmp	r2, #0
   12588:	bxeq	lr
   1258c:	b	124bc <__gmon_start__@plt>
   12590:	andeq	r2, r2, ip, ror sl
   12594:	andeq	r0, r0, r8, ror r0
   12598:	ldr	r3, [pc, #28]	; 125bc <_start@@Base+0x84>
   1259c:	ldr	r0, [pc, #28]	; 125c0 <_start@@Base+0x88>
   125a0:	sub	r3, r3, r0
   125a4:	cmp	r3, #6
   125a8:	bxls	lr
   125ac:	ldr	r3, [pc, #16]	; 125c4 <_start@@Base+0x8c>
   125b0:	cmp	r3, #0
   125b4:	bxeq	lr
   125b8:	bx	r3
   125bc:	muleq	r3, fp, r0
   125c0:	muleq	r3, r8, r0
   125c4:	andeq	r0, r0, r0
   125c8:	ldr	r1, [pc, #36]	; 125f4 <_start@@Base+0xbc>
   125cc:	ldr	r0, [pc, #36]	; 125f8 <_start@@Base+0xc0>
   125d0:	sub	r1, r1, r0
   125d4:	asr	r1, r1, #2
   125d8:	add	r1, r1, r1, lsr #31
   125dc:	asrs	r1, r1, #1
   125e0:	bxeq	lr
   125e4:	ldr	r3, [pc, #16]	; 125fc <_start@@Base+0xc4>
   125e8:	cmp	r3, #0
   125ec:	bxeq	lr
   125f0:	bx	r3
   125f4:	muleq	r3, r8, r0
   125f8:	muleq	r3, r8, r0
   125fc:	andeq	r0, r0, r0
   12600:	push	{r4, lr}
   12604:	ldr	r4, [pc, #24]	; 12624 <_start@@Base+0xec>
   12608:	ldrb	r3, [r4]
   1260c:	cmp	r3, #0
   12610:	popne	{r4, pc}
   12614:	bl	12598 <_start@@Base+0x60>
   12618:	mov	r3, #1
   1261c:	strb	r3, [r4]
   12620:	pop	{r4, pc}
   12624:	muleq	r3, r8, r0
   12628:	ldr	r0, [pc, #40]	; 12658 <_start@@Base+0x120>
   1262c:	ldr	r3, [r0]
   12630:	cmp	r3, #0
   12634:	bne	1263c <_start@@Base+0x104>
   12638:	b	125c8 <_start@@Base+0x90>
   1263c:	ldr	r3, [pc, #24]	; 1265c <_start@@Base+0x124>
   12640:	cmp	r3, #0
   12644:	beq	12638 <_start@@Base+0x100>
   12648:	push	{r4, lr}
   1264c:	blx	r3
   12650:	pop	{r4, lr}
   12654:	b	125c8 <_start@@Base+0x90>
   12658:	andeq	r4, r3, r4, lsl pc
   1265c:	andeq	r0, r0, r0
   12660:	push	{fp}		; (str fp, [sp, #-4]!)
   12664:	add	fp, sp, #0
   12668:	sub	sp, sp, #12
   1266c:	str	r0, [fp, #-8]
   12670:	ldr	r3, [fp, #-8]
   12674:	ldr	r3, [r3, #36]	; 0x24
   12678:	mov	r0, r3
   1267c:	add	sp, fp, #0
   12680:	pop	{fp}		; (ldr fp, [sp], #4)
   12684:	bx	lr
   12688:	push	{fp}		; (str fp, [sp, #-4]!)
   1268c:	add	fp, sp, #0
   12690:	sub	sp, sp, #12
   12694:	str	r0, [fp, #-8]
   12698:	str	r1, [fp, #-12]
   1269c:	ldr	r3, [fp, #-12]
   126a0:	cmp	r3, #0
   126a4:	movne	r3, #1
   126a8:	moveq	r3, #0
   126ac:	uxtb	r3, r3
   126b0:	mov	r2, r3
   126b4:	ldr	r3, [fp, #-8]
   126b8:	strb	r2, [r3, #26]
   126bc:	nop			; (mov r0, r0)
   126c0:	add	sp, fp, #0
   126c4:	pop	{fp}		; (ldr fp, [sp], #4)
   126c8:	bx	lr
   126cc:	push	{fp}		; (str fp, [sp, #-4]!)
   126d0:	add	fp, sp, #0
   126d4:	sub	sp, sp, #12
   126d8:	str	r0, [fp, #-8]
   126dc:	str	r1, [fp, #-12]
   126e0:	ldr	r3, [fp, #-12]
   126e4:	cmp	r3, #0
   126e8:	movne	r3, #1
   126ec:	moveq	r3, #0
   126f0:	uxtb	r3, r3
   126f4:	mov	r2, r3
   126f8:	ldr	r3, [fp, #-8]
   126fc:	strb	r2, [r3, #27]
   12700:	nop			; (mov r0, r0)
   12704:	add	sp, fp, #0
   12708:	pop	{fp}		; (ldr fp, [sp], #4)
   1270c:	bx	lr
   12710:	push	{fp}		; (str fp, [sp, #-4]!)
   12714:	add	fp, sp, #0
   12718:	sub	sp, sp, #12
   1271c:	str	r0, [fp, #-8]
   12720:	mov	r3, r1
   12724:	strb	r3, [fp, #-9]
   12728:	ldr	r3, [fp, #-8]
   1272c:	ldrb	r2, [fp, #-9]
   12730:	strb	r2, [r3, #25]
   12734:	nop			; (mov r0, r0)
   12738:	add	sp, fp, #0
   1273c:	pop	{fp}		; (ldr fp, [sp], #4)
   12740:	bx	lr
   12744:	push	{fp, lr}
   12748:	add	fp, sp, #4
   1274c:	sub	sp, sp, #8
   12750:	str	r0, [fp, #-8]
   12754:	mov	r1, #2
   12758:	ldr	r0, [fp, #-8]
   1275c:	bl	12710 <_start@@Base+0x1d8>
   12760:	mov	r1, #1
   12764:	ldr	r0, [fp, #-8]
   12768:	bl	12688 <_start@@Base+0x150>
   1276c:	mov	r1, #0
   12770:	ldr	r0, [fp, #-8]
   12774:	bl	126cc <_start@@Base+0x194>
   12778:	nop			; (mov r0, r0)
   1277c:	sub	sp, fp, #4
   12780:	pop	{fp, pc}
   12784:	push	{fp}		; (str fp, [sp, #-4]!)
   12788:	add	fp, sp, #0
   1278c:	sub	sp, sp, #12
   12790:	str	r0, [fp, #-8]
   12794:	ldr	r3, [fp, #-8]
   12798:	ldr	r3, [r3, #12]
   1279c:	ldr	r2, [fp, #-8]
   127a0:	ldr	r2, [r2, #20]
   127a4:	mov	r1, r2
   127a8:	ldr	r2, [fp, #-8]
   127ac:	ldr	r2, [r2]
   127b0:	sub	r2, r1, r2
   127b4:	add	r3, r3, r2
   127b8:	mov	r0, r3
   127bc:	add	sp, fp, #0
   127c0:	pop	{fp}		; (ldr fp, [sp], #4)
   127c4:	bx	lr
   127c8:	push	{fp, lr}
   127cc:	add	fp, sp, #4
   127d0:	sub	sp, sp, #8
   127d4:	str	r0, [fp, #-8]
   127d8:	ldr	r3, [fp, #-8]
   127dc:	ldr	r3, [r3, #44]	; 0x2c
   127e0:	mov	r1, #1
   127e4:	ldr	r0, [fp, #-8]
   127e8:	blx	r3
   127ec:	ldr	r0, [fp, #-8]
   127f0:	bl	12784 <_start@@Base+0x24c>
   127f4:	mov	r3, r0
   127f8:	mov	r0, r3
   127fc:	sub	sp, fp, #4
   12800:	pop	{fp, pc}
   12804:	push	{fp, lr}
   12808:	add	fp, sp, #4
   1280c:	sub	sp, sp, #16
   12810:	str	r0, [fp, #-8]
   12814:	strd	r2, [fp, #-20]	; 0xffffffec
   12818:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1281c:	orrs	r1, r2, r3
   12820:	beq	12834 <_start@@Base+0x2fc>
   12824:	cmp	r3, #0
   12828:	cmpeq	r2, #17
   1282c:	beq	12850 <_start@@Base+0x318>
   12830:	b	1286c <_start@@Base+0x334>
   12834:	mov	r2, #10
   12838:	ldr	r3, [pc, #72]	; 12888 <_start@@Base+0x350>
   1283c:	add	r3, pc, r3
   12840:	mov	r1, r3
   12844:	ldr	r0, [fp, #-8]
   12848:	bl	1a934 <flatcc_json_printer_enum@@Base>
   1284c:	b	1287c <_start@@Base+0x344>
   12850:	mov	r2, #3
   12854:	ldr	r3, [pc, #48]	; 1288c <_start@@Base+0x354>
   12858:	add	r3, pc, r3
   1285c:	mov	r1, r3
   12860:	ldr	r0, [fp, #-8]
   12864:	bl	1a934 <flatcc_json_printer_enum@@Base>
   12868:	b	1287c <_start@@Base+0x344>
   1286c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   12870:	ldr	r0, [fp, #-8]
   12874:	bl	1a848 <flatcc_json_printer_int64@@Base>
   12878:	nop			; (mov r0, r0)
   1287c:	nop			; (mov r0, r0)
   12880:	sub	sp, fp, #4
   12884:	pop	{fp, pc}
   12888:	andeq	r0, r1, r4, ror #16
   1288c:	andeq	r0, r1, r4, asr r8
   12890:	push	{fp}		; (str fp, [sp, #-4]!)
   12894:	add	fp, sp, #0
   12898:	sub	sp, sp, #12
   1289c:	str	r0, [fp, #-8]
   128a0:	str	r1, [fp, #-12]
   128a4:	nop			; (mov r0, r0)
   128a8:	add	sp, fp, #0
   128ac:	pop	{fp}		; (ldr fp, [sp], #4)
   128b0:	bx	lr
   128b4:	push	{fp, lr}
   128b8:	add	fp, sp, #4
   128bc:	sub	sp, sp, #8
   128c0:	str	r0, [fp, #-8]
   128c4:	str	r1, [fp, #-12]
   128c8:	ldr	r3, [fp, #-12]
   128cc:	cmn	r3, #11
   128d0:	beq	12900 <_start@@Base+0x3c8>
   128d4:	cmn	r3, #10
   128d8:	beq	1291c <_start@@Base+0x3e4>
   128dc:	cmn	r3, #12
   128e0:	bne	12938 <_start@@Base+0x400>
   128e4:	mov	r2, #4
   128e8:	ldr	r3, [pc, #100]	; 12954 <_start@@Base+0x41c>
   128ec:	add	r3, pc, r3
   128f0:	mov	r1, r3
   128f4:	ldr	r0, [fp, #-8]
   128f8:	bl	1a934 <flatcc_json_printer_enum@@Base>
   128fc:	b	12948 <_start@@Base+0x410>
   12900:	mov	r2, #4
   12904:	ldr	r3, [pc, #76]	; 12958 <_start@@Base+0x420>
   12908:	add	r3, pc, r3
   1290c:	mov	r1, r3
   12910:	ldr	r0, [fp, #-8]
   12914:	bl	1a934 <flatcc_json_printer_enum@@Base>
   12918:	b	12948 <_start@@Base+0x410>
   1291c:	mov	r2, #4
   12920:	ldr	r3, [pc, #52]	; 1295c <_start@@Base+0x424>
   12924:	add	r3, pc, r3
   12928:	mov	r1, r3
   1292c:	ldr	r0, [fp, #-8]
   12930:	bl	1a934 <flatcc_json_printer_enum@@Base>
   12934:	b	12948 <_start@@Base+0x410>
   12938:	ldr	r1, [fp, #-12]
   1293c:	ldr	r0, [fp, #-8]
   12940:	bl	1a7fc <flatcc_json_printer_int32@@Base>
   12944:	nop			; (mov r0, r0)
   12948:	nop			; (mov r0, r0)
   1294c:	sub	sp, fp, #4
   12950:	pop	{fp, pc}
   12954:	andeq	r0, r1, r4, asr #15
   12958:			; <UNDEFINED> instruction: 0x000107b0
   1295c:	muleq	r1, ip, r7
   12960:	push	{fp, lr}
   12964:	add	fp, sp, #4
   12968:	sub	sp, sp, #8
   1296c:	str	r0, [fp, #-8]
   12970:	str	r1, [fp, #-12]
   12974:	ldr	r3, [fp, #-12]
   12978:	cmn	r3, #1
   1297c:	beq	129c4 <_start@@Base+0x48c>
   12980:	cmn	r3, #1
   12984:	bgt	12994 <_start@@Base+0x45c>
   12988:	cmn	r3, #2
   1298c:	beq	129a8 <_start@@Base+0x470>
   12990:	b	12a18 <_start@@Base+0x4e0>
   12994:	cmp	r3, #2
   12998:	beq	129e0 <_start@@Base+0x4a8>
   1299c:	cmp	r3, #42	; 0x2a
   129a0:	beq	129fc <_start@@Base+0x4c4>
   129a4:	b	12a18 <_start@@Base+0x4e0>
   129a8:	mov	r2, #6
   129ac:	ldr	r3, [pc, #128]	; 12a34 <_start@@Base+0x4fc>
   129b0:	add	r3, pc, r3
   129b4:	mov	r1, r3
   129b8:	ldr	r0, [fp, #-8]
   129bc:	bl	1a934 <flatcc_json_printer_enum@@Base>
   129c0:	b	12a28 <_start@@Base+0x4f0>
   129c4:	mov	r2, #7
   129c8:	ldr	r3, [pc, #104]	; 12a38 <_start@@Base+0x500>
   129cc:	add	r3, pc, r3
   129d0:	mov	r1, r3
   129d4:	ldr	r0, [fp, #-8]
   129d8:	bl	1a934 <flatcc_json_printer_enum@@Base>
   129dc:	b	12a28 <_start@@Base+0x4f0>
   129e0:	mov	r2, #4
   129e4:	ldr	r3, [pc, #80]	; 12a3c <_start@@Base+0x504>
   129e8:	add	r3, pc, r3
   129ec:	mov	r1, r3
   129f0:	ldr	r0, [fp, #-8]
   129f4:	bl	1a934 <flatcc_json_printer_enum@@Base>
   129f8:	b	12a28 <_start@@Base+0x4f0>
   129fc:	mov	r2, #4
   12a00:	ldr	r3, [pc, #56]	; 12a40 <_start@@Base+0x508>
   12a04:	add	r3, pc, r3
   12a08:	mov	r1, r3
   12a0c:	ldr	r0, [fp, #-8]
   12a10:	bl	1a934 <flatcc_json_printer_enum@@Base>
   12a14:	b	12a28 <_start@@Base+0x4f0>
   12a18:	ldr	r1, [fp, #-12]
   12a1c:	ldr	r0, [fp, #-8]
   12a20:	bl	1a7fc <flatcc_json_printer_int32@@Base>
   12a24:	nop			; (mov r0, r0)
   12a28:	nop			; (mov r0, r0)
   12a2c:	sub	sp, fp, #4
   12a30:	pop	{fp, pc}
   12a34:	andeq	r0, r1, r8, lsl r7
   12a38:	andeq	r0, r1, r4, lsl #14
   12a3c:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   12a40:	ldrdeq	r0, [r1], -ip
   12a44:	push	{fp, lr}
   12a48:	add	fp, sp, #4
   12a4c:	sub	sp, sp, #8
   12a50:	str	r0, [fp, #-8]
   12a54:	str	r1, [fp, #-12]
   12a58:	ldr	r3, [fp, #-12]
   12a5c:	cmp	r3, #3
   12a60:	beq	12a94 <_start@@Base+0x55c>
   12a64:	ldr	r2, [pc, #124]	; 12ae8 <_start@@Base+0x5b0>
   12a68:	cmp	r3, r2
   12a6c:	beq	12ab0 <_start@@Base+0x578>
   12a70:	cmn	r3, #2
   12a74:	bne	12acc <_start@@Base+0x594>
   12a78:	mov	r2, #6
   12a7c:	ldr	r3, [pc, #104]	; 12aec <_start@@Base+0x5b4>
   12a80:	add	r3, pc, r3
   12a84:	mov	r1, r3
   12a88:	ldr	r0, [fp, #-8]
   12a8c:	bl	1a934 <flatcc_json_printer_enum@@Base>
   12a90:	b	12adc <_start@@Base+0x5a4>
   12a94:	mov	r2, #4
   12a98:	ldr	r3, [pc, #80]	; 12af0 <_start@@Base+0x5b8>
   12a9c:	add	r3, pc, r3
   12aa0:	mov	r1, r3
   12aa4:	ldr	r0, [fp, #-8]
   12aa8:	bl	1a934 <flatcc_json_printer_enum@@Base>
   12aac:	b	12adc <_start@@Base+0x5a4>
   12ab0:	mov	r2, #4
   12ab4:	ldr	r3, [pc, #56]	; 12af4 <_start@@Base+0x5bc>
   12ab8:	add	r3, pc, r3
   12abc:	mov	r1, r3
   12ac0:	ldr	r0, [fp, #-8]
   12ac4:	bl	1a934 <flatcc_json_printer_enum@@Base>
   12ac8:	b	12adc <_start@@Base+0x5a4>
   12acc:	ldr	r1, [fp, #-12]
   12ad0:	ldr	r0, [fp, #-8]
   12ad4:	bl	1a7fc <flatcc_json_printer_int32@@Base>
   12ad8:	nop			; (mov r0, r0)
   12adc:	nop			; (mov r0, r0)
   12ae0:	sub	sp, fp, #4
   12ae4:	pop	{fp, pc}
   12ae8:	cdpvc	14, 10, cr11, cr15, cr15, {5}
   12aec:	andeq	r0, r1, r8, ror #12
   12af0:	andeq	r0, r1, r4, asr r6
   12af4:	andeq	r0, r1, r0, asr #12
   12af8:	push	{fp, lr}
   12afc:	add	fp, sp, #4
   12b00:	sub	sp, sp, #24
   12b04:	str	r0, [fp, #-24]	; 0xffffffe8
   12b08:	mov	r3, r1
   12b0c:	strb	r3, [fp, #-25]	; 0xffffffe7
   12b10:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   12b14:	strb	r3, [fp, #-9]
   12b18:	ldrb	r2, [fp, #-9]
   12b1c:	ldrb	r3, [fp, #-9]
   12b20:	sub	r3, r3, #1
   12b24:	and	r3, r3, r2
   12b28:	cmp	r3, #0
   12b2c:	movne	r3, #1
   12b30:	moveq	r3, #0
   12b34:	uxtb	r3, r3
   12b38:	str	r3, [fp, #-16]
   12b3c:	mov	r3, #0
   12b40:	str	r3, [fp, #-8]
   12b44:	ldrb	r3, [fp, #-9]
   12b48:	and	r3, r3, #244	; 0xf4
   12b4c:	cmp	r3, #0
   12b50:	bne	12b60 <_start@@Base+0x628>
   12b54:	ldrb	r3, [fp, #-9]
   12b58:	cmp	r3, #0
   12b5c:	bne	12b74 <_start@@Base+0x63c>
   12b60:	ldrsb	r3, [fp, #-25]	; 0xffffffe7
   12b64:	mov	r1, r3
   12b68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12b6c:	bl	1a754 <flatcc_json_printer_int8@@Base>
   12b70:	b	12c1c <_start@@Base+0x6e4>
   12b74:	ldr	r1, [fp, #-16]
   12b78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12b7c:	bl	1a96c <flatcc_json_printer_delimit_enum_flags@@Base>
   12b80:	ldrb	r3, [fp, #-9]
   12b84:	and	r3, r3, #1
   12b88:	cmp	r3, #0
   12b8c:	beq	12bb0 <_start@@Base+0x678>
   12b90:	ldr	r1, [fp, #-8]
   12b94:	add	r3, r1, #1
   12b98:	str	r3, [fp, #-8]
   12b9c:	mov	r3, #3
   12ba0:	ldr	r2, [pc, #124]	; 12c24 <_start@@Base+0x6ec>
   12ba4:	add	r2, pc, r2
   12ba8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12bac:	bl	1a9e4 <flatcc_json_printer_enum_flag@@Base>
   12bb0:	ldrb	r3, [fp, #-9]
   12bb4:	and	r3, r3, #2
   12bb8:	cmp	r3, #0
   12bbc:	beq	12be0 <_start@@Base+0x6a8>
   12bc0:	ldr	r1, [fp, #-8]
   12bc4:	add	r3, r1, #1
   12bc8:	str	r3, [fp, #-8]
   12bcc:	mov	r3, #5
   12bd0:	ldr	r2, [pc, #80]	; 12c28 <_start@@Base+0x6f0>
   12bd4:	add	r2, pc, r2
   12bd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12bdc:	bl	1a9e4 <flatcc_json_printer_enum_flag@@Base>
   12be0:	ldrb	r3, [fp, #-9]
   12be4:	and	r3, r3, #8
   12be8:	cmp	r3, #0
   12bec:	beq	12c10 <_start@@Base+0x6d8>
   12bf0:	ldr	r1, [fp, #-8]
   12bf4:	add	r3, r1, #1
   12bf8:	str	r3, [fp, #-8]
   12bfc:	mov	r3, #4
   12c00:	ldr	r2, [pc, #36]	; 12c2c <_start@@Base+0x6f4>
   12c04:	add	r2, pc, r2
   12c08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12c0c:	bl	1a9e4 <flatcc_json_printer_enum_flag@@Base>
   12c10:	ldr	r1, [fp, #-16]
   12c14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12c18:	bl	1a96c <flatcc_json_printer_delimit_enum_flags@@Base>
   12c1c:	sub	sp, fp, #4
   12c20:	pop	{fp, pc}
   12c24:	andeq	r0, r1, ip, asr r5
   12c28:	andeq	r0, r1, r0, lsr r5
   12c2c:	andeq	r0, r1, r8, lsl #10
   12c30:	push	{fp, lr}
   12c34:	add	fp, sp, #4
   12c38:	sub	sp, sp, #8
   12c3c:	str	r0, [fp, #-8]
   12c40:	str	r1, [fp, #-12]
   12c44:	ldr	r3, [fp, #-12]
   12c48:	cmp	r3, #0
   12c4c:	bne	12c6c <_start@@Base+0x734>
   12c50:	mov	r2, #1
   12c54:	ldr	r3, [pc, #44]	; 12c88 <_start@@Base+0x750>
   12c58:	add	r3, pc, r3
   12c5c:	mov	r1, r3
   12c60:	ldr	r0, [fp, #-8]
   12c64:	bl	1a934 <flatcc_json_printer_enum@@Base>
   12c68:	b	12c7c <_start@@Base+0x744>
   12c6c:	ldr	r1, [fp, #-12]
   12c70:	ldr	r0, [fp, #-8]
   12c74:	bl	1a7fc <flatcc_json_printer_int32@@Base>
   12c78:	nop			; (mov r0, r0)
   12c7c:	nop			; (mov r0, r0)
   12c80:	sub	sp, fp, #4
   12c84:	pop	{fp, pc}
   12c88:			; <UNDEFINED> instruction: 0x000104bc
   12c8c:	push	{fp, lr}
   12c90:	add	fp, sp, #4
   12c94:	sub	sp, sp, #8
   12c98:	str	r0, [fp, #-8]
   12c9c:	mov	r3, r1
   12ca0:	strb	r3, [fp, #-9]
   12ca4:	ldrb	r3, [fp, #-9]
   12ca8:	cmp	r3, #1
   12cac:	bne	12ccc <_start@@Base+0x794>
   12cb0:	mov	r2, #17
   12cb4:	ldr	r3, [pc, #56]	; 12cf4 <_start@@Base+0x7bc>
   12cb8:	add	r3, pc, r3
   12cbc:	mov	r1, r3
   12cc0:	ldr	r0, [fp, #-8]
   12cc4:	bl	1a934 <flatcc_json_printer_enum@@Base>
   12cc8:	b	12ce8 <_start@@Base+0x7b0>
   12ccc:	mov	r2, #4
   12cd0:	ldr	r3, [pc, #32]	; 12cf8 <_start@@Base+0x7c0>
   12cd4:	add	r3, pc, r3
   12cd8:	mov	r1, r3
   12cdc:	ldr	r0, [fp, #-8]
   12ce0:	bl	1a934 <flatcc_json_printer_enum@@Base>
   12ce4:	nop			; (mov r0, r0)
   12ce8:	nop			; (mov r0, r0)
   12cec:	sub	sp, fp, #4
   12cf0:	pop	{fp, pc}
   12cf4:	andeq	r0, r1, r0, ror #8
   12cf8:	andeq	r0, r1, r8, asr r4
   12cfc:	push	{fp, lr}
   12d00:	add	fp, sp, #4
   12d04:	sub	sp, sp, #8
   12d08:	str	r0, [fp, #-8]
   12d0c:	str	r1, [fp, #-12]
   12d10:	ldr	r3, [fp, #-12]
   12d14:	ldrb	r3, [r3, #8]
   12d18:	cmp	r3, #1
   12d1c:	beq	12d24 <_start@@Base+0x7ec>
   12d20:	b	12d40 <_start@@Base+0x808>
   12d24:	ldr	r3, [pc, #32]	; 12d4c <_start@@Base+0x814>
   12d28:	add	r3, pc, r3
   12d2c:	mov	r2, r3
   12d30:	ldr	r1, [fp, #-12]
   12d34:	ldr	r0, [fp, #-8]
   12d38:	bl	21b3c <flatcc_json_printer_union_table@@Base>
   12d3c:	nop			; (mov r0, r0)
   12d40:	nop			; (mov r0, r0)
   12d44:	sub	sp, fp, #4
   12d48:	pop	{fp, pc}
   12d4c:	andeq	r0, r0, ip, lsr r7
   12d50:	push	{fp, lr}
   12d54:	add	fp, sp, #4
   12d58:	sub	sp, sp, #8
   12d5c:	str	r0, [fp, #-8]
   12d60:	mov	r3, r1
   12d64:	strb	r3, [fp, #-9]
   12d68:	ldrb	r3, [fp, #-9]
   12d6c:	sub	r3, r3, #1
   12d70:	cmp	r3, #3
   12d74:	addls	pc, pc, r3, lsl #2
   12d78:	b	12dfc <_start@@Base+0x8c4>
   12d7c:	b	12d8c <_start@@Base+0x854>
   12d80:	b	12da8 <_start@@Base+0x870>
   12d84:	b	12dc4 <_start@@Base+0x88c>
   12d88:	b	12de0 <_start@@Base+0x8a8>
   12d8c:	mov	r2, #7
   12d90:	ldr	r3, [pc, #140]	; 12e24 <_start@@Base+0x8ec>
   12d94:	add	r3, pc, r3
   12d98:	mov	r1, r3
   12d9c:	ldr	r0, [fp, #-8]
   12da0:	bl	1a934 <flatcc_json_printer_enum@@Base>
   12da4:	b	12e18 <_start@@Base+0x8e0>
   12da8:	mov	r2, #23
   12dac:	ldr	r3, [pc, #116]	; 12e28 <_start@@Base+0x8f0>
   12db0:	add	r3, pc, r3
   12db4:	mov	r1, r3
   12db8:	ldr	r0, [fp, #-8]
   12dbc:	bl	1a934 <flatcc_json_printer_enum@@Base>
   12dc0:	b	12e18 <_start@@Base+0x8e0>
   12dc4:	mov	r2, #8
   12dc8:	ldr	r3, [pc, #92]	; 12e2c <_start@@Base+0x8f4>
   12dcc:	add	r3, pc, r3
   12dd0:	mov	r1, r3
   12dd4:	ldr	r0, [fp, #-8]
   12dd8:	bl	1a934 <flatcc_json_printer_enum@@Base>
   12ddc:	b	12e18 <_start@@Base+0x8e0>
   12de0:	mov	r2, #3
   12de4:	ldr	r3, [pc, #68]	; 12e30 <_start@@Base+0x8f8>
   12de8:	add	r3, pc, r3
   12dec:	mov	r1, r3
   12df0:	ldr	r0, [fp, #-8]
   12df4:	bl	1a934 <flatcc_json_printer_enum@@Base>
   12df8:	b	12e18 <_start@@Base+0x8e0>
   12dfc:	mov	r2, #4
   12e00:	ldr	r3, [pc, #44]	; 12e34 <_start@@Base+0x8fc>
   12e04:	add	r3, pc, r3
   12e08:	mov	r1, r3
   12e0c:	ldr	r0, [fp, #-8]
   12e10:	bl	1a934 <flatcc_json_printer_enum@@Base>
   12e14:	nop			; (mov r0, r0)
   12e18:	nop			; (mov r0, r0)
   12e1c:	sub	sp, fp, #4
   12e20:	pop	{fp, pc}
   12e24:	andeq	r0, r1, r0, lsr #7
   12e28:	andeq	r0, r1, ip, lsl #7
   12e2c:	andeq	r0, r1, r8, lsl #7
   12e30:	andeq	r0, r1, r8, ror r3
   12e34:	andeq	r0, r1, r8, lsr #6
   12e38:	push	{fp, lr}
   12e3c:	add	fp, sp, #4
   12e40:	sub	sp, sp, #8
   12e44:	str	r0, [fp, #-8]
   12e48:	str	r1, [fp, #-12]
   12e4c:	ldr	r3, [fp, #-12]
   12e50:	ldrb	r3, [r3, #8]
   12e54:	sub	r3, r3, #1
   12e58:	cmp	r3, #3
   12e5c:	addls	pc, pc, r3, lsl #2
   12e60:	b	12ee4 <_start@@Base+0x9ac>
   12e64:	b	12e74 <_start@@Base+0x93c>
   12e68:	b	12e90 <_start@@Base+0x958>
   12e6c:	b	12eac <_start@@Base+0x974>
   12e70:	b	12ec8 <_start@@Base+0x990>
   12e74:	ldr	r3, [pc, #120]	; 12ef4 <_start@@Base+0x9bc>
   12e78:	add	r3, pc, r3
   12e7c:	mov	r2, r3
   12e80:	ldr	r1, [fp, #-12]
   12e84:	ldr	r0, [fp, #-8]
   12e88:	bl	21b3c <flatcc_json_printer_union_table@@Base>
   12e8c:	b	12ee8 <_start@@Base+0x9b0>
   12e90:	ldr	r3, [pc, #96]	; 12ef8 <_start@@Base+0x9c0>
   12e94:	add	r3, pc, r3
   12e98:	mov	r2, r3
   12e9c:	ldr	r1, [fp, #-12]
   12ea0:	ldr	r0, [fp, #-8]
   12ea4:	bl	21b3c <flatcc_json_printer_union_table@@Base>
   12ea8:	b	12ee8 <_start@@Base+0x9b0>
   12eac:	ldr	r3, [pc, #72]	; 12efc <_start@@Base+0x9c4>
   12eb0:	add	r3, pc, r3
   12eb4:	mov	r2, r3
   12eb8:	ldr	r1, [fp, #-12]
   12ebc:	ldr	r0, [fp, #-8]
   12ec0:	bl	21b3c <flatcc_json_printer_union_table@@Base>
   12ec4:	b	12ee8 <_start@@Base+0x9b0>
   12ec8:	ldr	r3, [pc, #48]	; 12f00 <_start@@Base+0x9c8>
   12ecc:	add	r3, pc, r3
   12ed0:	mov	r2, r3
   12ed4:	ldr	r1, [fp, #-12]
   12ed8:	ldr	r0, [fp, #-8]
   12edc:	bl	21b3c <flatcc_json_printer_union_table@@Base>
   12ee0:	b	12ee8 <_start@@Base+0x9b0>
   12ee4:	nop			; (mov r0, r0)
   12ee8:	nop			; (mov r0, r0)
   12eec:	sub	sp, fp, #4
   12ef0:	pop	{fp, pc}
   12ef4:	andeq	r0, r0, r0, ror lr
   12ef8:	muleq	r0, r0, r6
   12efc:	ldrdeq	r0, [r0], -r8
   12f00:	andeq	r0, r0, r8, asr r9
   12f04:	push	{fp, lr}
   12f08:	add	fp, sp, #4
   12f0c:	sub	sp, sp, #8
   12f10:	str	r0, [fp, #-8]
   12f14:	mov	r3, r1
   12f18:	strb	r3, [fp, #-9]
   12f1c:	ldrb	r3, [fp, #-9]
   12f20:	cmp	r3, #9
   12f24:	beq	12f98 <_start@@Base+0xa60>
   12f28:	cmp	r3, #9
   12f2c:	bgt	12f44 <_start@@Base+0xa0c>
   12f30:	cmp	r3, #2
   12f34:	beq	12f60 <_start@@Base+0xa28>
   12f38:	cmp	r3, #8
   12f3c:	beq	12f7c <_start@@Base+0xa44>
   12f40:	b	13008 <_start@@Base+0xad0>
   12f44:	cmp	r3, #11
   12f48:	beq	12fd0 <_start@@Base+0xa98>
   12f4c:	cmp	r3, #11
   12f50:	blt	12fb4 <_start@@Base+0xa7c>
   12f54:	cmp	r3, #255	; 0xff
   12f58:	beq	12fec <_start@@Base+0xab4>
   12f5c:	b	13008 <_start@@Base+0xad0>
   12f60:	mov	r2, #5
   12f64:	ldr	r3, [pc, #196]	; 13030 <_start@@Base+0xaf8>
   12f68:	add	r3, pc, r3
   12f6c:	mov	r1, r3
   12f70:	ldr	r0, [fp, #-8]
   12f74:	bl	1a934 <flatcc_json_printer_enum@@Base>
   12f78:	b	13024 <_start@@Base+0xaec>
   12f7c:	mov	r2, #8
   12f80:	ldr	r3, [pc, #172]	; 13034 <_start@@Base+0xafc>
   12f84:	add	r3, pc, r3
   12f88:	mov	r1, r3
   12f8c:	ldr	r0, [fp, #-8]
   12f90:	bl	1a934 <flatcc_json_printer_enum@@Base>
   12f94:	b	13024 <_start@@Base+0xaec>
   12f98:	mov	r2, #5
   12f9c:	ldr	r3, [pc, #148]	; 13038 <_start@@Base+0xb00>
   12fa0:	add	r3, pc, r3
   12fa4:	mov	r1, r3
   12fa8:	ldr	r0, [fp, #-8]
   12fac:	bl	1a934 <flatcc_json_printer_enum@@Base>
   12fb0:	b	13024 <_start@@Base+0xaec>
   12fb4:	mov	r2, #7
   12fb8:	ldr	r3, [pc, #124]	; 1303c <_start@@Base+0xb04>
   12fbc:	add	r3, pc, r3
   12fc0:	mov	r1, r3
   12fc4:	ldr	r0, [fp, #-8]
   12fc8:	bl	1a934 <flatcc_json_printer_enum@@Base>
   12fcc:	b	13024 <_start@@Base+0xaec>
   12fd0:	mov	r2, #5
   12fd4:	ldr	r3, [pc, #100]	; 13040 <_start@@Base+0xb08>
   12fd8:	add	r3, pc, r3
   12fdc:	mov	r1, r3
   12fe0:	ldr	r0, [fp, #-8]
   12fe4:	bl	1a934 <flatcc_json_printer_enum@@Base>
   12fe8:	b	13024 <_start@@Base+0xaec>
   12fec:	mov	r2, #6
   12ff0:	ldr	r3, [pc, #76]	; 13044 <_start@@Base+0xb0c>
   12ff4:	add	r3, pc, r3
   12ff8:	mov	r1, r3
   12ffc:	ldr	r0, [fp, #-8]
   13000:	bl	1a934 <flatcc_json_printer_enum@@Base>
   13004:	b	13024 <_start@@Base+0xaec>
   13008:	mov	r2, #4
   1300c:	ldr	r3, [pc, #52]	; 13048 <_start@@Base+0xb10>
   13010:	add	r3, pc, r3
   13014:	mov	r1, r3
   13018:	ldr	r0, [fp, #-8]
   1301c:	bl	1a934 <flatcc_json_printer_enum@@Base>
   13020:	nop			; (mov r0, r0)
   13024:	nop			; (mov r0, r0)
   13028:	sub	sp, fp, #4
   1302c:	pop	{fp, pc}
   13030:	strdeq	r0, [r1], -ip
   13034:	andeq	r0, r1, r8, ror #3
   13038:	ldrdeq	r0, [r1], -r8
   1303c:	andeq	r0, r1, r4, asr #3
   13040:			; <UNDEFINED> instruction: 0x000101b0
   13044:	muleq	r1, ip, r1
   13048:	andeq	r0, r1, ip, lsl r1
   1304c:	push	{fp, lr}
   13050:	add	fp, sp, #4
   13054:	sub	sp, sp, #8
   13058:	str	r0, [fp, #-8]
   1305c:	str	r1, [fp, #-12]
   13060:	ldr	r3, [fp, #-12]
   13064:	ldrb	r3, [r3, #8]
   13068:	cmp	r3, #9
   1306c:	beq	130e0 <_start@@Base+0xba8>
   13070:	cmp	r3, #9
   13074:	bgt	1308c <_start@@Base+0xb54>
   13078:	cmp	r3, #2
   1307c:	beq	130a8 <_start@@Base+0xb70>
   13080:	cmp	r3, #8
   13084:	beq	130c4 <_start@@Base+0xb8c>
   13088:	b	13138 <_start@@Base+0xc00>
   1308c:	cmp	r3, #11
   13090:	beq	13118 <_start@@Base+0xbe0>
   13094:	cmp	r3, #11
   13098:	blt	130fc <_start@@Base+0xbc4>
   1309c:	cmp	r3, #255	; 0xff
   130a0:	beq	13128 <_start@@Base+0xbf0>
   130a4:	b	13138 <_start@@Base+0xc00>
   130a8:	ldr	r3, [pc, #148]	; 13144 <_start@@Base+0xc0c>
   130ac:	add	r3, pc, r3
   130b0:	mov	r2, r3
   130b4:	ldr	r1, [fp, #-12]
   130b8:	ldr	r0, [fp, #-8]
   130bc:	bl	21b3c <flatcc_json_printer_union_table@@Base>
   130c0:	b	13138 <_start@@Base+0xc00>
   130c4:	ldr	r3, [pc, #124]	; 13148 <_start@@Base+0xc10>
   130c8:	add	r3, pc, r3
   130cc:	mov	r2, r3
   130d0:	ldr	r1, [fp, #-12]
   130d4:	ldr	r0, [fp, #-8]
   130d8:	bl	21b88 <flatcc_json_printer_union_struct@@Base>
   130dc:	b	13138 <_start@@Base+0xc00>
   130e0:	ldr	r3, [pc, #100]	; 1314c <_start@@Base+0xc14>
   130e4:	add	r3, pc, r3
   130e8:	mov	r2, r3
   130ec:	ldr	r1, [fp, #-12]
   130f0:	ldr	r0, [fp, #-8]
   130f4:	bl	21b88 <flatcc_json_printer_union_struct@@Base>
   130f8:	b	13138 <_start@@Base+0xc00>
   130fc:	ldr	r3, [pc, #76]	; 13150 <_start@@Base+0xc18>
   13100:	add	r3, pc, r3
   13104:	mov	r2, r3
   13108:	ldr	r1, [fp, #-12]
   1310c:	ldr	r0, [fp, #-8]
   13110:	bl	21b88 <flatcc_json_printer_union_struct@@Base>
   13114:	b	13138 <_start@@Base+0xc00>
   13118:	ldr	r1, [fp, #-12]
   1311c:	ldr	r0, [fp, #-8]
   13120:	bl	21c64 <flatcc_json_printer_union_string@@Base>
   13124:	b	13138 <_start@@Base+0xc00>
   13128:	ldr	r1, [fp, #-12]
   1312c:	ldr	r0, [fp, #-8]
   13130:	bl	21c64 <flatcc_json_printer_union_string@@Base>
   13134:	nop			; (mov r0, r0)
   13138:	nop			; (mov r0, r0)
   1313c:	sub	sp, fp, #4
   13140:	pop	{fp, pc}
   13144:	andeq	r1, r0, r8, lsl r5
   13148:	andeq	r0, r0, r4, lsl #6
   1314c:	andeq	r0, r0, r4, lsr r3
   13150:	andeq	r0, r0, r8, lsl r3
   13154:	push	{fp}		; (str fp, [sp, #-4]!)
   13158:	add	fp, sp, #0
   1315c:	sub	sp, sp, #12
   13160:	str	r0, [fp, #-8]
   13164:	str	r1, [fp, #-12]
   13168:	nop			; (mov r0, r0)
   1316c:	add	sp, fp, #0
   13170:	pop	{fp}		; (ldr fp, [sp], #4)
   13174:	bx	lr
   13178:	push	{fp, lr}
   1317c:	add	fp, sp, #4
   13180:	sub	sp, sp, #16
   13184:	str	r0, [fp, #-8]
   13188:	str	r1, [fp, #-12]
   1318c:	mov	r3, #1
   13190:	str	r3, [sp, #4]
   13194:	ldr	r3, [pc, #76]	; 131e8 <_start@@Base+0xcb0>
   13198:	add	r3, pc, r3
   1319c:	str	r3, [sp]
   131a0:	mov	r3, #0
   131a4:	ldr	r2, [fp, #-12]
   131a8:	mov	r1, #0
   131ac:	ldr	r0, [fp, #-8]
   131b0:	bl	1c724 <flatcc_json_printer_int16_struct_field@@Base>
   131b4:	mov	r3, #1
   131b8:	str	r3, [sp, #4]
   131bc:	ldr	r3, [pc, #40]	; 131ec <_start@@Base+0xcb4>
   131c0:	add	r3, pc, r3
   131c4:	str	r3, [sp]
   131c8:	mov	r3, #2
   131cc:	ldr	r2, [fp, #-12]
   131d0:	mov	r1, #1
   131d4:	ldr	r0, [fp, #-8]
   131d8:	bl	1c674 <flatcc_json_printer_int8_struct_field@@Base>
   131dc:	nop			; (mov r0, r0)
   131e0:	sub	sp, fp, #4
   131e4:	pop	{fp, pc}
   131e8:	andeq	r0, r1, r0
   131ec:	ldrdeq	pc, [r0], -ip
   131f0:	push	{fp}		; (str fp, [sp, #-4]!)
   131f4:	add	fp, sp, #0
   131f8:	sub	sp, sp, #12
   131fc:	str	r0, [fp, #-8]
   13200:	str	r1, [fp, #-12]
   13204:	nop			; (mov r0, r0)
   13208:	add	sp, fp, #0
   1320c:	pop	{fp}		; (ldr fp, [sp], #4)
   13210:	bx	lr
   13214:	push	{fp, lr}
   13218:	add	fp, sp, #4
   1321c:	sub	sp, sp, #24
   13220:	str	r0, [fp, #-8]
   13224:	str	r1, [fp, #-12]
   13228:	mov	r3, #1
   1322c:	str	r3, [sp, #4]
   13230:	ldr	r3, [pc, #260]	; 1333c <_start@@Base+0xe04>
   13234:	add	r3, pc, r3
   13238:	str	r3, [sp]
   1323c:	mov	r3, #0
   13240:	ldr	r2, [fp, #-12]
   13244:	mov	r1, #0
   13248:	ldr	r0, [fp, #-8]
   1324c:	bl	1c9d4 <flatcc_json_printer_float_struct_field@@Base>
   13250:	mov	r3, #1
   13254:	str	r3, [sp, #4]
   13258:	ldr	r3, [pc, #224]	; 13340 <_start@@Base+0xe08>
   1325c:	add	r3, pc, r3
   13260:	str	r3, [sp]
   13264:	mov	r3, #4
   13268:	ldr	r2, [fp, #-12]
   1326c:	mov	r1, #1
   13270:	ldr	r0, [fp, #-8]
   13274:	bl	1c9d4 <flatcc_json_printer_float_struct_field@@Base>
   13278:	mov	r3, #1
   1327c:	str	r3, [sp, #4]
   13280:	ldr	r3, [pc, #188]	; 13344 <_start@@Base+0xe0c>
   13284:	add	r3, pc, r3
   13288:	str	r3, [sp]
   1328c:	mov	r3, #8
   13290:	ldr	r2, [fp, #-12]
   13294:	mov	r1, #2
   13298:	ldr	r0, [fp, #-8]
   1329c:	bl	1c9d4 <flatcc_json_printer_float_struct_field@@Base>
   132a0:	mov	r3, #5
   132a4:	str	r3, [sp, #4]
   132a8:	ldr	r3, [pc, #152]	; 13348 <_start@@Base+0xe10>
   132ac:	add	r3, pc, r3
   132b0:	str	r3, [sp]
   132b4:	mov	r3, #16
   132b8:	ldr	r2, [fp, #-12]
   132bc:	mov	r1, #3
   132c0:	ldr	r0, [fp, #-8]
   132c4:	bl	1ca84 <flatcc_json_printer_double_struct_field@@Base>
   132c8:	ldr	r3, [pc, #124]	; 1334c <_start@@Base+0xe14>
   132cc:	add	r3, pc, r3
   132d0:	str	r3, [sp, #8]
   132d4:	mov	r3, #5
   132d8:	str	r3, [sp, #4]
   132dc:	ldr	r3, [pc, #108]	; 13350 <_start@@Base+0xe18>
   132e0:	add	r3, pc, r3
   132e4:	str	r3, [sp]
   132e8:	mov	r3, #24
   132ec:	ldr	r2, [fp, #-12]
   132f0:	mov	r1, #4
   132f4:	ldr	r0, [fp, #-8]
   132f8:	bl	1ce74 <flatcc_json_printer_int8_enum_struct_field@@Base>
   132fc:	ldr	r3, [pc, #80]	; 13354 <_start@@Base+0xe1c>
   13300:	add	r3, pc, r3
   13304:	str	r3, [sp, #8]
   13308:	mov	r3, #5
   1330c:	str	r3, [sp, #4]
   13310:	ldr	r3, [pc, #64]	; 13358 <_start@@Base+0xe20>
   13314:	add	r3, pc, r3
   13318:	str	r3, [sp]
   1331c:	mov	r3, #26
   13320:	ldr	r2, [fp, #-12]
   13324:	mov	r1, #5
   13328:	ldr	r0, [fp, #-8]
   1332c:	bl	21ca4 <flatcc_json_printer_embedded_struct_field@@Base>
   13330:	nop			; (mov r0, r0)
   13334:	sub	sp, fp, #4
   13338:	pop	{fp, pc}
   1333c:	andeq	pc, r0, r0, ror #29
   13340:	andeq	pc, r0, r4, asr #30
   13344:	andeq	pc, r0, r0, lsr #30
   13348:	strdeq	pc, [r0], -ip
   1334c:			; <UNDEFINED> instruction: 0xfffff824
   13350:	ldrdeq	pc, [r0], -r0
   13354:			; <UNDEFINED> instruction: 0xfffffe70
   13358:	andeq	pc, r0, r4, lsr #29
   1335c:	push	{fp, lr}
   13360:	add	fp, sp, #4
   13364:	sub	sp, sp, #16
   13368:	str	r0, [fp, #-8]
   1336c:	str	r1, [fp, #-12]
   13370:	mov	r3, #2
   13374:	str	r3, [sp, #4]
   13378:	ldr	r3, [pc, #76]	; 133cc <_start@@Base+0xe94>
   1337c:	add	r3, pc, r3
   13380:	str	r3, [sp]
   13384:	mov	r3, #0
   13388:	ldr	r2, [fp, #-12]
   1338c:	mov	r1, #0
   13390:	ldr	r0, [fp, #-8]
   13394:	bl	1c524 <flatcc_json_printer_uint32_struct_field@@Base>
   13398:	mov	r3, #8
   1339c:	str	r3, [sp, #4]
   133a0:	ldr	r3, [pc, #40]	; 133d0 <_start@@Base+0xe98>
   133a4:	add	r3, pc, r3
   133a8:	str	r3, [sp]
   133ac:	mov	r3, #4
   133b0:	ldr	r2, [fp, #-12]
   133b4:	mov	r1, #1
   133b8:	ldr	r0, [fp, #-8]
   133bc:	bl	1c524 <flatcc_json_printer_uint32_struct_field@@Base>
   133c0:	nop			; (mov r0, r0)
   133c4:	sub	sp, fp, #4
   133c8:	pop	{fp, pc}
   133cc:	andeq	pc, r0, r4, asr #28
   133d0:	andeq	pc, r0, r0, lsr #28
   133d4:	push	{fp, lr}
   133d8:	add	fp, sp, #4
   133dc:	sub	sp, sp, #16
   133e0:	str	r0, [fp, #-8]
   133e4:	str	r1, [fp, #-12]
   133e8:	mov	r3, #11
   133ec:	str	r3, [sp, #4]
   133f0:	ldr	r3, [pc, #36]	; 1341c <_start@@Base+0xee4>
   133f4:	add	r3, pc, r3
   133f8:	str	r3, [sp]
   133fc:	mov	r3, #0
   13400:	ldr	r2, [fp, #-12]
   13404:	mov	r1, #0
   13408:	ldr	r0, [fp, #-8]
   1340c:	bl	1c474 <flatcc_json_printer_uint16_struct_field@@Base>
   13410:	nop			; (mov r0, r0)
   13414:	sub	sp, fp, #4
   13418:	pop	{fp, pc}
   1341c:	ldrdeq	pc, [r0], -ip
   13420:	push	{fp, lr}
   13424:	add	fp, sp, #4
   13428:	sub	sp, sp, #16
   1342c:	str	r0, [fp, #-8]
   13430:	str	r1, [fp, #-12]
   13434:	mov	r3, #10
   13438:	str	r3, [sp, #4]
   1343c:	ldr	r3, [pc, #36]	; 13468 <_start@@Base+0xf30>
   13440:	add	r3, pc, r3
   13444:	str	r3, [sp]
   13448:	mov	r3, #0
   1344c:	ldr	r2, [fp, #-12]
   13450:	mov	r1, #0
   13454:	ldr	r0, [fp, #-8]
   13458:	bl	1c7d4 <flatcc_json_printer_int32_struct_field@@Base>
   1345c:	nop			; (mov r0, r0)
   13460:	sub	sp, fp, #4
   13464:	pop	{fp, pc}
   13468:	muleq	r0, ip, sp
   1346c:	push	{fp}		; (str fp, [sp, #-4]!)
   13470:	add	fp, sp, #0
   13474:	sub	sp, sp, #12
   13478:	str	r0, [fp, #-8]
   1347c:	str	r1, [fp, #-12]
   13480:	nop			; (mov r0, r0)
   13484:	add	sp, fp, #0
   13488:	pop	{fp}		; (ldr fp, [sp], #4)
   1348c:	bx	lr
   13490:	push	{fp}		; (str fp, [sp, #-4]!)
   13494:	add	fp, sp, #0
   13498:	sub	sp, sp, #12
   1349c:	str	r0, [fp, #-8]
   134a0:	str	r1, [fp, #-12]
   134a4:	nop			; (mov r0, r0)
   134a8:	add	sp, fp, #0
   134ac:	pop	{fp}		; (ldr fp, [sp], #4)
   134b0:	bx	lr
   134b4:	push	{fp}		; (str fp, [sp, #-4]!)
   134b8:	add	fp, sp, #0
   134bc:	sub	sp, sp, #12
   134c0:	str	r0, [fp, #-8]
   134c4:	str	r1, [fp, #-12]
   134c8:	nop			; (mov r0, r0)
   134cc:	add	sp, fp, #0
   134d0:	pop	{fp}		; (ldr fp, [sp], #4)
   134d4:	bx	lr
   134d8:	push	{fp, lr}
   134dc:	add	fp, sp, #4
   134e0:	sub	sp, sp, #16
   134e4:	str	r0, [fp, #-8]
   134e8:	str	r1, [fp, #-12]
   134ec:	ldr	r3, [pc, #48]	; 13524 <_start@@Base+0xfec>
   134f0:	add	r3, pc, r3
   134f4:	str	r3, [sp, #4]
   134f8:	mov	r3, #5
   134fc:	str	r3, [sp]
   13500:	ldr	r3, [pc, #32]	; 13528 <_start@@Base+0xff0>
   13504:	add	r3, pc, r3
   13508:	mov	r2, #0
   1350c:	ldr	r1, [fp, #-12]
   13510:	ldr	r0, [fp, #-8]
   13514:	bl	21db8 <flatcc_json_printer_struct_field@@Base>
   13518:	nop			; (mov r0, r0)
   1351c:	sub	sp, fp, #4
   13520:	pop	{fp, pc}
   13524:			; <UNDEFINED> instruction: 0xfffffcf8
   13528:	andeq	pc, r0, r4, ror #25
   1352c:	push	{fp, lr}
   13530:	add	fp, sp, #4
   13534:	sub	sp, sp, #24
   13538:	str	r0, [fp, #-8]
   1353c:	str	r1, [fp, #-12]
   13540:	ldr	r3, [pc, #188]	; 13604 <_start@@Base+0x10cc>
   13544:	add	r3, pc, r3
   13548:	str	r3, [sp, #8]
   1354c:	mov	r3, #2
   13550:	str	r3, [sp, #4]
   13554:	mov	r3, #5
   13558:	str	r3, [sp]
   1355c:	ldr	r3, [pc, #164]	; 13608 <_start@@Base+0x10d0>
   13560:	add	r3, pc, r3
   13564:	mov	r2, #0
   13568:	ldr	r1, [fp, #-12]
   1356c:	ldr	r0, [fp, #-8]
   13570:	bl	1bdc0 <flatcc_json_printer_int8_enum_field@@Base>
   13574:	ldr	r3, [pc, #144]	; 1360c <_start@@Base+0x10d4>
   13578:	add	r3, pc, r3
   1357c:	str	r3, [sp, #8]
   13580:	mov	r3, #2
   13584:	str	r3, [sp, #4]
   13588:	mov	r3, #6
   1358c:	str	r3, [sp]
   13590:	ldr	r3, [pc, #120]	; 13610 <_start@@Base+0x10d8>
   13594:	add	r3, pc, r3
   13598:	mov	r2, #1
   1359c:	ldr	r1, [fp, #-12]
   135a0:	ldr	r0, [fp, #-8]
   135a4:	bl	1bdc0 <flatcc_json_printer_int8_enum_field@@Base>
   135a8:	mov	r3, #2
   135ac:	str	r3, [sp, #4]
   135b0:	mov	r3, #2
   135b4:	str	r3, [sp]
   135b8:	ldr	r3, [pc, #84]	; 13614 <_start@@Base+0x10dc>
   135bc:	add	r3, pc, r3
   135c0:	mov	r2, #2
   135c4:	ldr	r1, [fp, #-12]
   135c8:	ldr	r0, [fp, #-8]
   135cc:	bl	1ad54 <flatcc_json_printer_uint8_field@@Base>
   135d0:	mov	r3, #2
   135d4:	str	r3, [sp, #4]
   135d8:	mov	r3, #3
   135dc:	str	r3, [sp]
   135e0:	ldr	r3, [pc, #48]	; 13618 <_start@@Base+0x10e0>
   135e4:	add	r3, pc, r3
   135e8:	mov	r2, #3
   135ec:	ldr	r1, [fp, #-12]
   135f0:	ldr	r0, [fp, #-8]
   135f4:	bl	1ad54 <flatcc_json_printer_uint8_field@@Base>
   135f8:	nop			; (mov r0, r0)
   135fc:	sub	sp, fp, #4
   13600:	pop	{fp, pc}
   13604:			; <UNDEFINED> instruction: 0xfffff5ac
   13608:	muleq	r0, r0, ip
   1360c:			; <UNDEFINED> instruction: 0xfffff578
   13610:	andeq	pc, r0, r4, ror #24
   13614:	andeq	pc, r0, r4, asr #24
   13618:	andeq	pc, r0, r0, lsr #24
   1361c:	push	{fp, lr}
   13620:	add	fp, sp, #4
   13624:	sub	sp, sp, #32
   13628:	str	r0, [fp, #-8]
   1362c:	str	r1, [fp, #-12]
   13630:	ldr	r3, [pc, #300]	; 13764 <_start@@Base+0x122c>
   13634:	add	r3, pc, r3
   13638:	str	r3, [sp, #4]
   1363c:	mov	r3, #6
   13640:	str	r3, [sp]
   13644:	ldr	r3, [pc, #284]	; 13768 <_start@@Base+0x1230>
   13648:	add	r3, pc, r3
   1364c:	mov	r2, #0
   13650:	ldr	r1, [fp, #-12]
   13654:	ldr	r0, [fp, #-8]
   13658:	bl	21db8 <flatcc_json_printer_struct_field@@Base>
   1365c:	ldr	r3, [pc, #264]	; 1376c <_start@@Base+0x1234>
   13660:	add	r3, pc, r3
   13664:	str	r3, [sp, #16]
   13668:	mov	r2, #0
   1366c:	mov	r3, #0
   13670:	strd	r2, [sp, #8]
   13674:	mov	r3, #6
   13678:	str	r3, [sp]
   1367c:	ldr	r3, [pc, #236]	; 13770 <_start@@Base+0x1238>
   13680:	add	r3, pc, r3
   13684:	mov	r2, #1
   13688:	ldr	r1, [fp, #-12]
   1368c:	ldr	r0, [fp, #-8]
   13690:	bl	1c15c <flatcc_json_printer_int64_enum_field@@Base>
   13694:	ldr	r3, [pc, #216]	; 13774 <_start@@Base+0x123c>
   13698:	add	r3, pc, r3
   1369c:	str	r3, [sp, #16]
   136a0:	mov	r2, #0
   136a4:	mov	r3, #0
   136a8:	strd	r2, [sp, #8]
   136ac:	mov	r3, #7
   136b0:	str	r3, [sp]
   136b4:	ldr	r3, [pc, #188]	; 13778 <_start@@Base+0x1240>
   136b8:	add	r3, pc, r3
   136bc:	mov	r2, #2
   136c0:	ldr	r1, [fp, #-12]
   136c4:	ldr	r0, [fp, #-8]
   136c8:	bl	1c15c <flatcc_json_printer_int64_enum_field@@Base>
   136cc:	mov	r3, #0
   136d0:	str	r3, [sp, #4]
   136d4:	mov	r3, #7
   136d8:	str	r3, [sp]
   136dc:	ldr	r3, [pc, #152]	; 1377c <_start@@Base+0x1244>
   136e0:	add	r3, pc, r3
   136e4:	mov	r2, #3
   136e8:	ldr	r1, [fp, #-12]
   136ec:	ldr	r0, [fp, #-8]
   136f0:	bl	1b3a8 <flatcc_json_printer_int32_field@@Base>
   136f4:	ldr	r3, [pc, #132]	; 13780 <_start@@Base+0x1248>
   136f8:	add	r3, pc, r3
   136fc:	str	r3, [sp, #16]
   13700:	mov	r2, #0
   13704:	mov	r3, #0
   13708:	strd	r2, [sp, #8]
   1370c:	mov	r3, #7
   13710:	str	r3, [sp]
   13714:	ldr	r3, [pc, #104]	; 13784 <_start@@Base+0x124c>
   13718:	add	r3, pc, r3
   1371c:	mov	r2, #4
   13720:	ldr	r1, [fp, #-12]
   13724:	ldr	r0, [fp, #-8]
   13728:	bl	1c15c <flatcc_json_printer_int64_enum_field@@Base>
   1372c:	mov	r2, #0
   13730:	mov	r3, #0
   13734:	strd	r2, [sp, #8]
   13738:	mov	r3, #7
   1373c:	str	r3, [sp]
   13740:	ldr	r3, [pc, #64]	; 13788 <_start@@Base+0x1250>
   13744:	add	r3, pc, r3
   13748:	mov	r2, #5
   1374c:	ldr	r1, [fp, #-12]
   13750:	ldr	r0, [fp, #-8]
   13754:	bl	1b4b0 <flatcc_json_printer_int64_field@@Base>
   13758:	nop			; (mov r0, r0)
   1375c:	sub	sp, fp, #4
   13760:	pop	{fp, pc}
   13764:			; <UNDEFINED> instruction: 0xfffffb18
   13768:	andeq	pc, r0, r0, asr #23
   1376c:			; <UNDEFINED> instruction: 0xfffff19c
   13770:	muleq	r0, r0, fp
   13774:			; <UNDEFINED> instruction: 0xfffff164
   13778:	andeq	pc, r0, r0, ror #22
   1377c:	andeq	pc, r0, r0, asr #22
   13780:			; <UNDEFINED> instruction: 0xfffff104
   13784:	andeq	pc, r0, r0, lsl fp	; <UNPREDICTABLE>
   13788:	andeq	pc, r0, ip, ror #21
   1378c:	push	{fp, lr}
   13790:	add	fp, sp, #4
   13794:	sub	sp, sp, #24
   13798:	str	r0, [fp, #-8]
   1379c:	str	r1, [fp, #-12]
   137a0:	mov	r3, #2
   137a4:	str	r3, [sp]
   137a8:	ldr	r3, [pc, #112]	; 13820 <_start@@Base+0x12e8>
   137ac:	add	r3, pc, r3
   137b0:	mov	r2, #0
   137b4:	ldr	r1, [fp, #-12]
   137b8:	ldr	r0, [fp, #-8]
   137bc:	bl	1abdc <flatcc_json_printer_string_field@@Base>
   137c0:	mov	r2, #0
   137c4:	mov	r3, #0
   137c8:	strd	r2, [sp, #8]
   137cc:	mov	r3, #3
   137d0:	str	r3, [sp]
   137d4:	ldr	r3, [pc, #72]	; 13824 <_start@@Base+0x12ec>
   137d8:	add	r3, pc, r3
   137dc:	mov	r2, #1
   137e0:	ldr	r1, [fp, #-12]
   137e4:	ldr	r0, [fp, #-8]
   137e8:	bl	1b4b0 <flatcc_json_printer_int64_field@@Base>
   137ec:	mov	r3, #0
   137f0:	str	r3, [sp, #4]
   137f4:	mov	r3, #5
   137f8:	str	r3, [sp]
   137fc:	ldr	r3, [pc, #36]	; 13828 <_start@@Base+0x12f0>
   13800:	add	r3, pc, r3
   13804:	mov	r2, #2
   13808:	ldr	r1, [fp, #-12]
   1380c:	ldr	r0, [fp, #-8]
   13810:	bl	1ae64 <flatcc_json_printer_uint16_field@@Base>
   13814:	nop			; (mov r0, r0)
   13818:	sub	sp, fp, #4
   1381c:	pop	{fp, pc}
   13820:	andeq	pc, r0, r4, lsl sl	; <UNPREDICTABLE>
   13824:	andeq	pc, r0, r0, ror #20
   13828:	andeq	pc, r0, ip, lsr sl	; <UNPREDICTABLE>
   1382c:	push	{fp, lr}
   13830:	add	fp, sp, #4
   13834:	sub	sp, sp, #24
   13838:	str	r0, [fp, #-8]
   1383c:	str	r1, [fp, #-12]
   13840:	ldr	r3, [pc, #148]	; 138dc <_start@@Base+0x13a4>
   13844:	add	r3, pc, r3
   13848:	str	r3, [sp, #4]
   1384c:	mov	r3, #6
   13850:	str	r3, [sp]
   13854:	ldr	r3, [pc, #132]	; 138e0 <_start@@Base+0x13a8>
   13858:	add	r3, pc, r3
   1385c:	mov	r2, #0
   13860:	ldr	r1, [fp, #-12]
   13864:	ldr	r0, [fp, #-8]
   13868:	bl	21780 <flatcc_json_printer_table_field@@Base>
   1386c:	ldr	r3, [pc, #112]	; 138e4 <_start@@Base+0x13ac>
   13870:	add	r3, pc, r3
   13874:	str	r3, [sp, #4]
   13878:	mov	r3, #5
   1387c:	str	r3, [sp]
   13880:	ldr	r3, [pc, #96]	; 138e8 <_start@@Base+0x13b0>
   13884:	add	r3, pc, r3
   13888:	mov	r2, #1
   1388c:	ldr	r1, [fp, #-12]
   13890:	ldr	r0, [fp, #-8]
   13894:	bl	21780 <flatcc_json_printer_table_field@@Base>
   13898:	ldr	r3, [pc, #76]	; 138ec <_start@@Base+0x13b4>
   1389c:	add	r3, pc, r3
   138a0:	str	r3, [sp, #8]
   138a4:	ldr	r3, [pc, #68]	; 138f0 <_start@@Base+0x13b8>
   138a8:	add	r3, pc, r3
   138ac:	str	r3, [sp, #4]
   138b0:	mov	r3, #7
   138b4:	str	r3, [sp]
   138b8:	ldr	r3, [pc, #52]	; 138f4 <_start@@Base+0x13bc>
   138bc:	add	r3, pc, r3
   138c0:	mov	r2, #3
   138c4:	ldr	r1, [fp, #-12]
   138c8:	ldr	r0, [fp, #-8]
   138cc:	bl	21368 <flatcc_json_printer_union_vector_field@@Base>
   138d0:	nop			; (mov r0, r0)
   138d4:	sub	sp, fp, #4
   138d8:	pop	{fp, pc}
   138dc:	andeq	r0, r0, ip, lsr #1
   138e0:	andeq	pc, r0, ip, ror #19
   138e4:	andeq	r0, r0, r0, lsr #27
   138e8:	andeq	pc, r0, r8, asr #19
   138ec:			; <UNDEFINED> instruction: 0xfffff594
   138f0:			; <UNDEFINED> instruction: 0xfffff4a0
   138f4:	muleq	r0, r8, r9
   138f8:	push	{fp, lr}
   138fc:	add	fp, sp, #4
   13900:	sub	sp, sp, #16
   13904:	str	r0, [fp, #-8]
   13908:	str	r1, [fp, #-12]
   1390c:	ldr	r3, [pc, #136]	; 1399c <_start@@Base+0x1464>
   13910:	add	r3, pc, r3
   13914:	str	r3, [sp, #4]
   13918:	mov	r3, #21
   1391c:	str	r3, [sp]
   13920:	ldr	r3, [pc, #120]	; 139a0 <_start@@Base+0x1468>
   13924:	add	r3, pc, r3
   13928:	mov	r2, #0
   1392c:	ldr	r1, [fp, #-12]
   13930:	ldr	r0, [fp, #-8]
   13934:	bl	21780 <flatcc_json_printer_table_field@@Base>
   13938:	ldr	r3, [pc, #100]	; 139a4 <_start@@Base+0x146c>
   1393c:	add	r3, pc, r3
   13940:	str	r3, [sp, #4]
   13944:	mov	r3, #22
   13948:	str	r3, [sp]
   1394c:	ldr	r3, [pc, #84]	; 139a8 <_start@@Base+0x1470>
   13950:	add	r3, pc, r3
   13954:	mov	r2, #1
   13958:	ldr	r1, [fp, #-12]
   1395c:	ldr	r0, [fp, #-8]
   13960:	bl	21780 <flatcc_json_printer_table_field@@Base>
   13964:	ldr	r3, [pc, #64]	; 139ac <_start@@Base+0x1474>
   13968:	add	r3, pc, r3
   1396c:	str	r3, [sp, #4]
   13970:	mov	r3, #22
   13974:	str	r3, [sp]
   13978:	ldr	r3, [pc, #48]	; 139b0 <_start@@Base+0x1478>
   1397c:	add	r3, pc, r3
   13980:	mov	r2, #2
   13984:	ldr	r1, [fp, #-12]
   13988:	ldr	r0, [fp, #-8]
   1398c:	bl	21780 <flatcc_json_printer_table_field@@Base>
   13990:	nop			; (mov r0, r0)
   13994:	sub	sp, fp, #4
   13998:	pop	{fp, pc}
   1399c:	muleq	r0, ip, r0
   139a0:	andeq	pc, r0, r8, lsr r9	; <UNPREDICTABLE>
   139a4:	andeq	r0, r0, r0, lsl r2
   139a8:	andeq	pc, r0, r4, lsr #18
   139ac:	andeq	r0, r0, r0, ror #4
   139b0:	andeq	pc, r0, r0, lsl r9	; <UNPREDICTABLE>
   139b4:	push	{fp, lr}
   139b8:	add	fp, sp, #4
   139bc:	sub	sp, sp, #24
   139c0:	str	r0, [fp, #-8]
   139c4:	str	r1, [fp, #-12]
   139c8:	mov	r3, #4
   139cc:	str	r3, [sp]
   139d0:	ldr	r3, [pc, #344]	; 13b30 <_start@@Base+0x15f8>
   139d4:	add	r3, pc, r3
   139d8:	mov	r2, #0
   139dc:	ldr	r1, [fp, #-12]
   139e0:	ldr	r0, [fp, #-8]
   139e4:	bl	1abdc <flatcc_json_printer_string_field@@Base>
   139e8:	mov	r3, #0
   139ec:	str	r3, [sp, #4]
   139f0:	mov	r3, #9
   139f4:	str	r3, [sp]
   139f8:	ldr	r3, [pc, #308]	; 13b34 <_start@@Base+0x15fc>
   139fc:	add	r3, pc, r3
   13a00:	mov	r2, #1
   13a04:	ldr	r1, [fp, #-12]
   13a08:	ldr	r0, [fp, #-8]
   13a0c:	bl	1af74 <flatcc_json_printer_uint32_field@@Base>
   13a10:	mov	r3, #4
   13a14:	str	r3, [sp]
   13a18:	ldr	r3, [pc, #280]	; 13b38 <_start@@Base+0x1600>
   13a1c:	add	r3, pc, r3
   13a20:	mov	r2, #2
   13a24:	ldr	r1, [fp, #-12]
   13a28:	ldr	r0, [fp, #-8]
   13a2c:	bl	1abdc <flatcc_json_printer_string_field@@Base>
   13a30:	mov	r2, #0
   13a34:	mov	r3, #0
   13a38:	strd	r2, [sp, #8]
   13a3c:	mov	r3, #8
   13a40:	str	r3, [sp]
   13a44:	ldr	r3, [pc, #240]	; 13b3c <_start@@Base+0x1604>
   13a48:	add	r3, pc, r3
   13a4c:	mov	r2, #3
   13a50:	ldr	r1, [fp, #-12]
   13a54:	ldr	r0, [fp, #-8]
   13a58:	bl	1b4b0 <flatcc_json_printer_int64_field@@Base>
   13a5c:	mov	r3, #4
   13a60:	str	r3, [sp]
   13a64:	ldr	r3, [pc, #212]	; 13b40 <_start@@Base+0x1608>
   13a68:	add	r3, pc, r3
   13a6c:	mov	r2, #4
   13a70:	ldr	r1, [fp, #-12]
   13a74:	ldr	r0, [fp, #-8]
   13a78:	bl	1abdc <flatcc_json_printer_string_field@@Base>
   13a7c:	mov	r2, #0
   13a80:	mov	r3, #0
   13a84:	strd	r2, [sp, #8]
   13a88:	mov	r3, #8
   13a8c:	str	r3, [sp]
   13a90:	ldr	r3, [pc, #172]	; 13b44 <_start@@Base+0x160c>
   13a94:	add	r3, pc, r3
   13a98:	mov	r2, #5
   13a9c:	ldr	r1, [fp, #-12]
   13aa0:	ldr	r0, [fp, #-8]
   13aa4:	bl	1b4b0 <flatcc_json_printer_int64_field@@Base>
   13aa8:	mov	r3, #0
   13aac:	str	r3, [sp, #4]
   13ab0:	mov	r3, #9
   13ab4:	str	r3, [sp]
   13ab8:	ldr	r3, [pc, #136]	; 13b48 <_start@@Base+0x1610>
   13abc:	add	r3, pc, r3
   13ac0:	mov	r2, #6
   13ac4:	ldr	r1, [fp, #-12]
   13ac8:	ldr	r0, [fp, #-8]
   13acc:	bl	1af74 <flatcc_json_printer_uint32_field@@Base>
   13ad0:	mov	r2, #0
   13ad4:	mov	r3, #0
   13ad8:	strd	r2, [sp, #8]
   13adc:	mov	r3, #8
   13ae0:	str	r3, [sp]
   13ae4:	ldr	r3, [pc, #96]	; 13b4c <_start@@Base+0x1614>
   13ae8:	add	r3, pc, r3
   13aec:	mov	r2, #7
   13af0:	ldr	r1, [fp, #-12]
   13af4:	ldr	r0, [fp, #-8]
   13af8:	bl	1b4b0 <flatcc_json_printer_int64_field@@Base>
   13afc:	mov	r3, #0
   13b00:	str	r3, [sp, #4]
   13b04:	mov	r3, #9
   13b08:	str	r3, [sp]
   13b0c:	ldr	r3, [pc, #60]	; 13b50 <_start@@Base+0x1618>
   13b10:	add	r3, pc, r3
   13b14:	mov	r2, #8
   13b18:	ldr	r1, [fp, #-12]
   13b1c:	ldr	r0, [fp, #-8]
   13b20:	bl	1af74 <flatcc_json_printer_uint32_field@@Base>
   13b24:	nop			; (mov r0, r0)
   13b28:	sub	sp, fp, #4
   13b2c:	pop	{fp, pc}
   13b30:	ldrdeq	pc, [r0], -r0
   13b34:			; <UNDEFINED> instruction: 0x0000f8b0
   13b38:	muleq	r0, ip, r8
   13b3c:	andeq	pc, r0, r8, ror r8	; <UNPREDICTABLE>
   13b40:	andeq	pc, r0, r4, ror #16
   13b44:	andeq	pc, r0, r0, asr #16
   13b48:	andeq	pc, r0, r4, lsr #16
   13b4c:	andeq	pc, r0, r4, lsl #16
   13b50:	andeq	pc, r0, r8, ror #15
   13b54:	push	{fp, lr}
   13b58:	add	fp, sp, #4
   13b5c:	sub	sp, sp, #24
   13b60:	str	r0, [fp, #-8]
   13b64:	str	r1, [fp, #-12]
   13b68:	mov	r2, #0
   13b6c:	mov	r3, #0
   13b70:	strd	r2, [sp, #8]
   13b74:	mov	r3, #15
   13b78:	str	r3, [sp]
   13b7c:	ldr	r3, [pc, #68]	; 13bc8 <_start@@Base+0x1690>
   13b80:	add	r3, pc, r3
   13b84:	mov	r2, #0
   13b88:	ldr	r1, [fp, #-12]
   13b8c:	ldr	r0, [fp, #-8]
   13b90:	bl	1b4b0 <flatcc_json_printer_int64_field@@Base>
   13b94:	mov	r3, #0
   13b98:	str	r3, [sp, #4]
   13b9c:	mov	r3, #16
   13ba0:	str	r3, [sp]
   13ba4:	ldr	r3, [pc, #32]	; 13bcc <_start@@Base+0x1694>
   13ba8:	add	r3, pc, r3
   13bac:	mov	r2, #1
   13bb0:	ldr	r1, [fp, #-12]
   13bb4:	ldr	r0, [fp, #-8]
   13bb8:	bl	1af74 <flatcc_json_printer_uint32_field@@Base>
   13bbc:	nop			; (mov r0, r0)
   13bc0:	sub	sp, fp, #4
   13bc4:	pop	{fp, pc}
   13bc8:	andeq	pc, r0, r4, lsl #15
   13bcc:	andeq	pc, r0, ip, ror #14
   13bd0:	push	{fp, lr}
   13bd4:	add	fp, sp, #4
   13bd8:	sub	sp, sp, #24
   13bdc:	str	r0, [fp, #-8]
   13be0:	str	r1, [fp, #-12]
   13be4:	mov	r2, #0
   13be8:	mov	r3, #0
   13bec:	strd	r2, [sp, #8]
   13bf0:	mov	r3, #15
   13bf4:	str	r3, [sp]
   13bf8:	ldr	r3, [pc, #68]	; 13c44 <_start@@Base+0x170c>
   13bfc:	add	r3, pc, r3
   13c00:	mov	r2, #0
   13c04:	ldr	r1, [fp, #-12]
   13c08:	ldr	r0, [fp, #-8]
   13c0c:	bl	1b4b0 <flatcc_json_printer_int64_field@@Base>
   13c10:	mov	r3, #0
   13c14:	str	r3, [sp, #4]
   13c18:	mov	r3, #21
   13c1c:	str	r3, [sp]
   13c20:	ldr	r3, [pc, #32]	; 13c48 <_start@@Base+0x1710>
   13c24:	add	r3, pc, r3
   13c28:	mov	r2, #1
   13c2c:	ldr	r1, [fp, #-12]
   13c30:	ldr	r0, [fp, #-8]
   13c34:	bl	1af74 <flatcc_json_printer_uint32_field@@Base>
   13c38:	nop			; (mov r0, r0)
   13c3c:	sub	sp, fp, #4
   13c40:	pop	{fp, pc}
   13c44:	andeq	pc, r0, r8, lsl #14
   13c48:	andeq	pc, r0, r4, lsl #14
   13c4c:	push	{fp, lr}
   13c50:	add	fp, sp, #4
   13c54:	sub	sp, sp, #16
   13c58:	str	r0, [fp, #-8]
   13c5c:	str	r1, [fp, #-12]
   13c60:	mov	r3, #0
   13c64:	str	r3, [sp, #4]
   13c68:	mov	r3, #4
   13c6c:	str	r3, [sp]
   13c70:	ldr	r3, [pc, #108]	; 13ce4 <_start@@Base+0x17ac>
   13c74:	add	r3, pc, r3
   13c78:	mov	r2, #0
   13c7c:	ldr	r1, [fp, #-12]
   13c80:	ldr	r0, [fp, #-8]
   13c84:	bl	1ac84 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   13c88:	mov	r3, #1
   13c8c:	str	r3, [sp, #4]
   13c90:	mov	r3, #7
   13c94:	str	r3, [sp]
   13c98:	ldr	r3, [pc, #72]	; 13ce8 <_start@@Base+0x17b0>
   13c9c:	add	r3, pc, r3
   13ca0:	mov	r2, #1
   13ca4:	ldr	r1, [fp, #-12]
   13ca8:	ldr	r0, [fp, #-8]
   13cac:	bl	1ac84 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   13cb0:	mov	r3, #0
   13cb4:	str	r3, [sp, #4]
   13cb8:	mov	r3, #6
   13cbc:	str	r3, [sp]
   13cc0:	ldr	r3, [pc, #36]	; 13cec <_start@@Base+0x17b4>
   13cc4:	add	r3, pc, r3
   13cc8:	mov	r2, #2
   13ccc:	ldr	r1, [fp, #-12]
   13cd0:	ldr	r0, [fp, #-8]
   13cd4:	bl	1ac84 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   13cd8:	nop			; (mov r0, r0)
   13cdc:	sub	sp, fp, #4
   13ce0:	pop	{fp, pc}
   13ce4:	andeq	pc, r0, ip, asr #13
   13ce8:	andeq	pc, r0, ip, lsr #13
   13cec:	andeq	pc, r0, ip, lsl #13
   13cf0:	push	{fp, lr}
   13cf4:	add	fp, sp, #4
   13cf8:	sub	sp, sp, #24
   13cfc:	str	r0, [fp, #-8]
   13d00:	str	r1, [fp, #-12]
   13d04:	ldr	r3, [pc, #1416]	; 14294 <_start@@Base+0x1d5c>
   13d08:	add	r3, pc, r3
   13d0c:	str	r3, [sp, #4]
   13d10:	mov	r3, #3
   13d14:	str	r3, [sp]
   13d18:	ldr	r3, [pc, #1400]	; 14298 <_start@@Base+0x1d60>
   13d1c:	add	r3, pc, r3
   13d20:	mov	r2, #0
   13d24:	ldr	r1, [fp, #-12]
   13d28:	ldr	r0, [fp, #-8]
   13d2c:	bl	21db8 <flatcc_json_printer_struct_field@@Base>
   13d30:	mov	r3, #150	; 0x96
   13d34:	str	r3, [sp, #4]
   13d38:	mov	r3, #4
   13d3c:	str	r3, [sp]
   13d40:	ldr	r3, [pc, #1364]	; 1429c <_start@@Base+0x1d64>
   13d44:	add	r3, pc, r3
   13d48:	mov	r2, #1
   13d4c:	ldr	r1, [fp, #-12]
   13d50:	ldr	r0, [fp, #-8]
   13d54:	bl	1b298 <flatcc_json_printer_int16_field@@Base>
   13d58:	mov	r3, #100	; 0x64
   13d5c:	str	r3, [sp, #4]
   13d60:	mov	r3, #2
   13d64:	str	r3, [sp]
   13d68:	ldr	r3, [pc, #1328]	; 142a0 <_start@@Base+0x1d68>
   13d6c:	add	r3, pc, r3
   13d70:	mov	r2, #2
   13d74:	ldr	r1, [fp, #-12]
   13d78:	ldr	r0, [fp, #-8]
   13d7c:	bl	1b298 <flatcc_json_printer_int16_field@@Base>
   13d80:	mov	r3, #4
   13d84:	str	r3, [sp]
   13d88:	ldr	r3, [pc, #1300]	; 142a4 <_start@@Base+0x1d6c>
   13d8c:	add	r3, pc, r3
   13d90:	mov	r2, #3
   13d94:	ldr	r1, [fp, #-12]
   13d98:	ldr	r0, [fp, #-8]
   13d9c:	bl	1abdc <flatcc_json_printer_string_field@@Base>
   13da0:	mov	r3, #9
   13da4:	str	r3, [sp]
   13da8:	ldr	r3, [pc, #1272]	; 142a8 <_start@@Base+0x1d70>
   13dac:	add	r3, pc, r3
   13db0:	mov	r2, #5
   13db4:	ldr	r1, [fp, #-12]
   13db8:	ldr	r0, [fp, #-8]
   13dbc:	bl	1d538 <flatcc_json_printer_uint8_vector_field@@Base>
   13dc0:	ldr	r3, [pc, #1252]	; 142ac <_start@@Base+0x1d74>
   13dc4:	add	r3, pc, r3
   13dc8:	str	r3, [sp, #8]
   13dcc:	mov	r3, #8
   13dd0:	str	r3, [sp, #4]
   13dd4:	mov	r3, #5
   13dd8:	str	r3, [sp]
   13ddc:	ldr	r3, [pc, #1228]	; 142b0 <_start@@Base+0x1d78>
   13de0:	add	r3, pc, r3
   13de4:	mov	r2, #6
   13de8:	ldr	r1, [fp, #-12]
   13dec:	ldr	r0, [fp, #-8]
   13df0:	bl	1bdc0 <flatcc_json_printer_int8_enum_field@@Base>
   13df4:	ldr	r3, [pc, #1208]	; 142b4 <_start@@Base+0x1d7c>
   13df8:	add	r3, pc, r3
   13dfc:	str	r3, [sp, #8]
   13e00:	ldr	r3, [pc, #1200]	; 142b8 <_start@@Base+0x1d80>
   13e04:	add	r3, pc, r3
   13e08:	str	r3, [sp, #4]
   13e0c:	mov	r3, #4
   13e10:	str	r3, [sp]
   13e14:	ldr	r3, [pc, #1184]	; 142bc <_start@@Base+0x1d84>
   13e18:	add	r3, pc, r3
   13e1c:	mov	r2, #8
   13e20:	ldr	r1, [fp, #-12]
   13e24:	ldr	r0, [fp, #-8]
   13e28:	bl	21830 <flatcc_json_printer_union_field@@Base>
   13e2c:	ldr	r3, [pc, #1164]	; 142c0 <_start@@Base+0x1d88>
   13e30:	add	r3, pc, r3
   13e34:	str	r3, [sp, #8]
   13e38:	mov	r3, #4
   13e3c:	str	r3, [sp, #4]
   13e40:	mov	r3, #5
   13e44:	str	r3, [sp]
   13e48:	ldr	r3, [pc, #1140]	; 142c4 <_start@@Base+0x1d8c>
   13e4c:	add	r3, pc, r3
   13e50:	mov	r2, #9
   13e54:	ldr	r1, [fp, #-12]
   13e58:	ldr	r0, [fp, #-8]
   13e5c:	bl	20bcc <flatcc_json_printer_struct_vector_field@@Base>
   13e60:	mov	r3, #17
   13e64:	str	r3, [sp]
   13e68:	ldr	r3, [pc, #1112]	; 142c8 <_start@@Base+0x1d90>
   13e6c:	add	r3, pc, r3
   13e70:	mov	r2, #10
   13e74:	ldr	r1, [fp, #-12]
   13e78:	ldr	r0, [fp, #-8]
   13e7c:	bl	20f38 <flatcc_json_printer_string_vector_field@@Base>
   13e80:	ldr	r3, [pc, #1092]	; 142cc <_start@@Base+0x1d94>
   13e84:	add	r3, pc, r3
   13e88:	str	r3, [sp, #4]
   13e8c:	mov	r3, #17
   13e90:	str	r3, [sp]
   13e94:	ldr	r3, [pc, #1076]	; 142d0 <_start@@Base+0x1d98>
   13e98:	add	r3, pc, r3
   13e9c:	mov	r2, #11
   13ea0:	ldr	r1, [fp, #-12]
   13ea4:	ldr	r0, [fp, #-8]
   13ea8:	bl	21188 <flatcc_json_printer_table_vector_field@@Base>
   13eac:	ldr	r3, [pc, #1056]	; 142d4 <_start@@Base+0x1d9c>
   13eb0:	add	r3, pc, r3
   13eb4:	str	r3, [sp, #4]
   13eb8:	mov	r3, #5
   13ebc:	str	r3, [sp]
   13ec0:	ldr	r3, [pc, #1040]	; 142d8 <_start@@Base+0x1da0>
   13ec4:	add	r3, pc, r3
   13ec8:	mov	r2, #12
   13ecc:	ldr	r1, [fp, #-12]
   13ed0:	ldr	r0, [fp, #-8]
   13ed4:	bl	21780 <flatcc_json_printer_table_field@@Base>
   13ed8:	ldr	r3, [pc, #1020]	; 142dc <_start@@Base+0x1da4>
   13edc:	add	r3, pc, r3
   13ee0:	str	r3, [sp, #8]
   13ee4:	mov	r3, #0
   13ee8:	str	r3, [sp, #4]
   13eec:	mov	r3, #20
   13ef0:	str	r3, [sp]
   13ef4:	ldr	r3, [pc, #996]	; 142e0 <_start@@Base+0x1da8>
   13ef8:	add	r3, pc, r3
   13efc:	mov	r2, #13
   13f00:	ldr	r1, [fp, #-12]
   13f04:	ldr	r0, [fp, #-8]
   13f08:	bl	22430 <flatcc_json_printer_table_as_nested_root@@Base>
   13f0c:	ldr	r3, [pc, #976]	; 142e4 <_start@@Base+0x1dac>
   13f10:	add	r3, pc, r3
   13f14:	str	r3, [sp, #4]
   13f18:	mov	r3, #9
   13f1c:	str	r3, [sp]
   13f20:	ldr	r3, [pc, #960]	; 142e8 <_start@@Base+0x1db0>
   13f24:	add	r3, pc, r3
   13f28:	mov	r2, #14
   13f2c:	ldr	r1, [fp, #-12]
   13f30:	ldr	r0, [fp, #-8]
   13f34:	bl	21780 <flatcc_json_printer_table_field@@Base>
   13f38:	mov	r3, #1
   13f3c:	str	r3, [sp, #4]
   13f40:	mov	r3, #8
   13f44:	str	r3, [sp]
   13f48:	ldr	r3, [pc, #924]	; 142ec <_start@@Base+0x1db4>
   13f4c:	add	r3, pc, r3
   13f50:	mov	r2, #15
   13f54:	ldr	r1, [fp, #-12]
   13f58:	ldr	r0, [fp, #-8]
   13f5c:	bl	1b5bc <flatcc_json_printer_bool_field@@Base>
   13f60:	mov	r3, #0
   13f64:	str	r3, [sp, #4]
   13f68:	mov	r3, #16
   13f6c:	str	r3, [sp]
   13f70:	ldr	r3, [pc, #888]	; 142f0 <_start@@Base+0x1db8>
   13f74:	add	r3, pc, r3
   13f78:	mov	r2, #16
   13f7c:	ldr	r1, [fp, #-12]
   13f80:	ldr	r0, [fp, #-8]
   13f84:	bl	1b3a8 <flatcc_json_printer_int32_field@@Base>
   13f88:	mov	r3, #0
   13f8c:	str	r3, [sp, #4]
   13f90:	mov	r3, #16
   13f94:	str	r3, [sp]
   13f98:	ldr	r3, [pc, #852]	; 142f4 <_start@@Base+0x1dbc>
   13f9c:	add	r3, pc, r3
   13fa0:	mov	r2, #17
   13fa4:	ldr	r1, [fp, #-12]
   13fa8:	ldr	r0, [fp, #-8]
   13fac:	bl	1af74 <flatcc_json_printer_uint32_field@@Base>
   13fb0:	mov	r2, #0
   13fb4:	mov	r3, #0
   13fb8:	strd	r2, [sp, #8]
   13fbc:	mov	r3, #16
   13fc0:	str	r3, [sp]
   13fc4:	ldr	r3, [pc, #812]	; 142f8 <_start@@Base+0x1dc0>
   13fc8:	add	r3, pc, r3
   13fcc:	mov	r2, #18
   13fd0:	ldr	r1, [fp, #-12]
   13fd4:	ldr	r0, [fp, #-8]
   13fd8:	bl	1b4b0 <flatcc_json_printer_int64_field@@Base>
   13fdc:	mov	r2, #0
   13fe0:	mov	r3, #0
   13fe4:	strd	r2, [sp, #8]
   13fe8:	mov	r3, #16
   13fec:	str	r3, [sp]
   13ff0:	ldr	r3, [pc, #772]	; 142fc <_start@@Base+0x1dc4>
   13ff4:	add	r3, pc, r3
   13ff8:	mov	r2, #19
   13ffc:	ldr	r1, [fp, #-12]
   14000:	ldr	r0, [fp, #-8]
   14004:	bl	1b07c <flatcc_json_printer_uint64_field@@Base>
   14008:	mov	r3, #0
   1400c:	str	r3, [sp, #4]
   14010:	mov	r3, #17
   14014:	str	r3, [sp]
   14018:	ldr	r3, [pc, #736]	; 14300 <_start@@Base+0x1dc8>
   1401c:	add	r3, pc, r3
   14020:	mov	r2, #20
   14024:	ldr	r1, [fp, #-12]
   14028:	ldr	r0, [fp, #-8]
   1402c:	bl	1b3a8 <flatcc_json_printer_int32_field@@Base>
   14030:	mov	r3, #0
   14034:	str	r3, [sp, #4]
   14038:	mov	r3, #17
   1403c:	str	r3, [sp]
   14040:	ldr	r3, [pc, #700]	; 14304 <_start@@Base+0x1dcc>
   14044:	add	r3, pc, r3
   14048:	mov	r2, #21
   1404c:	ldr	r1, [fp, #-12]
   14050:	ldr	r0, [fp, #-8]
   14054:	bl	1af74 <flatcc_json_printer_uint32_field@@Base>
   14058:	mov	r2, #0
   1405c:	mov	r3, #0
   14060:	strd	r2, [sp, #8]
   14064:	mov	r3, #17
   14068:	str	r3, [sp]
   1406c:	ldr	r3, [pc, #660]	; 14308 <_start@@Base+0x1dd0>
   14070:	add	r3, pc, r3
   14074:	mov	r2, #22
   14078:	ldr	r1, [fp, #-12]
   1407c:	ldr	r0, [fp, #-8]
   14080:	bl	1b4b0 <flatcc_json_printer_int64_field@@Base>
   14084:	mov	r2, #0
   14088:	mov	r3, #0
   1408c:	strd	r2, [sp, #8]
   14090:	mov	r3, #17
   14094:	str	r3, [sp]
   14098:	ldr	r3, [pc, #620]	; 1430c <_start@@Base+0x1dd4>
   1409c:	add	r3, pc, r3
   140a0:	mov	r2, #23
   140a4:	ldr	r1, [fp, #-12]
   140a8:	ldr	r0, [fp, #-8]
   140ac:	bl	1b07c <flatcc_json_printer_uint64_field@@Base>
   140b0:	mov	r3, #16
   140b4:	str	r3, [sp]
   140b8:	ldr	r3, [pc, #592]	; 14310 <_start@@Base+0x1dd8>
   140bc:	add	r3, pc, r3
   140c0:	mov	r2, #24
   140c4:	ldr	r1, [fp, #-12]
   140c8:	ldr	r0, [fp, #-8]
   140cc:	bl	1ea18 <flatcc_json_printer_bool_vector_field@@Base>
   140d0:	mov	r3, #5
   140d4:	str	r3, [sp]
   140d8:	vldr	s0, [pc, #424]	; 14288 <_start@@Base+0x1d50>
   140dc:	ldr	r3, [pc, #560]	; 14314 <_start@@Base+0x1ddc>
   140e0:	add	r3, pc, r3
   140e4:	mov	r2, #25
   140e8:	ldr	r1, [fp, #-12]
   140ec:	ldr	r0, [fp, #-8]
   140f0:	bl	1b6cc <flatcc_json_printer_float_field@@Base>
   140f4:	mov	r3, #6
   140f8:	str	r3, [sp]
   140fc:	vldr	s0, [pc, #392]	; 1428c <_start@@Base+0x1d54>
   14100:	ldr	r3, [pc, #528]	; 14318 <_start@@Base+0x1de0>
   14104:	add	r3, pc, r3
   14108:	mov	r2, #26
   1410c:	ldr	r1, [fp, #-12]
   14110:	ldr	r0, [fp, #-8]
   14114:	bl	1b6cc <flatcc_json_printer_float_field@@Base>
   14118:	mov	r3, #6
   1411c:	str	r3, [sp]
   14120:	vldr	s0, [pc, #360]	; 14290 <_start@@Base+0x1d58>
   14124:	ldr	r3, [pc, #496]	; 1431c <_start@@Base+0x1de4>
   14128:	add	r3, pc, r3
   1412c:	mov	r2, #27
   14130:	ldr	r1, [fp, #-12]
   14134:	ldr	r0, [fp, #-8]
   14138:	bl	1b6cc <flatcc_json_printer_float_field@@Base>
   1413c:	mov	r3, #18
   14140:	str	r3, [sp]
   14144:	ldr	r3, [pc, #468]	; 14320 <_start@@Base+0x1de8>
   14148:	add	r3, pc, r3
   1414c:	mov	r2, #28
   14150:	ldr	r1, [fp, #-12]
   14154:	ldr	r0, [fp, #-8]
   14158:	bl	20f38 <flatcc_json_printer_string_vector_field@@Base>
   1415c:	ldr	r3, [pc, #448]	; 14324 <_start@@Base+0x1dec>
   14160:	add	r3, pc, r3
   14164:	str	r3, [sp, #8]
   14168:	mov	r3, #8
   1416c:	str	r3, [sp, #4]
   14170:	mov	r3, #23
   14174:	str	r3, [sp]
   14178:	ldr	r3, [pc, #424]	; 14328 <_start@@Base+0x1df0>
   1417c:	add	r3, pc, r3
   14180:	mov	r2, #29
   14184:	ldr	r1, [fp, #-12]
   14188:	ldr	r0, [fp, #-8]
   1418c:	bl	20bcc <flatcc_json_printer_struct_vector_field@@Base>
   14190:	mov	r3, #4
   14194:	str	r3, [sp]
   14198:	ldr	r3, [pc, #396]	; 1432c <_start@@Base+0x1df4>
   1419c:	add	r3, pc, r3
   141a0:	mov	r2, #30
   141a4:	ldr	r1, [fp, #-12]
   141a8:	ldr	r0, [fp, #-8]
   141ac:	bl	1d538 <flatcc_json_printer_uint8_vector_field@@Base>
   141b0:	ldr	r3, [pc, #376]	; 14330 <_start@@Base+0x1df8>
   141b4:	add	r3, pc, r3
   141b8:	str	r3, [sp, #8]
   141bc:	mov	r3, #4
   141c0:	str	r3, [sp, #4]
   141c4:	mov	r3, #5
   141c8:	str	r3, [sp]
   141cc:	ldr	r3, [pc, #352]	; 14334 <_start@@Base+0x1dfc>
   141d0:	add	r3, pc, r3
   141d4:	mov	r2, #31
   141d8:	ldr	r1, [fp, #-12]
   141dc:	ldr	r0, [fp, #-8]
   141e0:	bl	20bcc <flatcc_json_printer_struct_vector_field@@Base>
   141e4:	mov	r3, #15
   141e8:	str	r3, [sp]
   141ec:	ldr	r3, [pc, #324]	; 14338 <_start@@Base+0x1e00>
   141f0:	add	r3, pc, r3
   141f4:	mov	r2, #32
   141f8:	ldr	r1, [fp, #-12]
   141fc:	ldr	r0, [fp, #-8]
   14200:	bl	1e78c <flatcc_json_printer_int64_vector_field@@Base>
   14204:	mov	r3, #17
   14208:	str	r3, [sp]
   1420c:	ldr	r3, [pc, #296]	; 1433c <_start@@Base+0x1e04>
   14210:	add	r3, pc, r3
   14214:	mov	r2, #33	; 0x21
   14218:	ldr	r1, [fp, #-12]
   1421c:	ldr	r0, [fp, #-8]
   14220:	bl	1ef60 <flatcc_json_printer_double_vector_field@@Base>
   14224:	ldr	r3, [pc, #276]	; 14340 <_start@@Base+0x1e08>
   14228:	add	r3, pc, r3
   1422c:	str	r3, [sp, #4]
   14230:	mov	r3, #21
   14234:	str	r3, [sp]
   14238:	ldr	r3, [pc, #260]	; 14344 <_start@@Base+0x1e0c>
   1423c:	add	r3, pc, r3
   14240:	mov	r2, #34	; 0x22
   14244:	ldr	r1, [fp, #-12]
   14248:	ldr	r0, [fp, #-8]
   1424c:	bl	21780 <flatcc_json_printer_table_field@@Base>
   14250:	ldr	r3, [pc, #240]	; 14348 <_start@@Base+0x1e10>
   14254:	add	r3, pc, r3
   14258:	str	r3, [sp, #4]
   1425c:	mov	r3, #10
   14260:	str	r3, [sp]
   14264:	ldr	r3, [pc, #224]	; 1434c <_start@@Base+0x1e14>
   14268:	add	r3, pc, r3
   1426c:	mov	r2, #35	; 0x23
   14270:	ldr	r1, [fp, #-12]
   14274:	ldr	r0, [fp, #-8]
   14278:	bl	21780 <flatcc_json_printer_table_field@@Base>
   1427c:	nop			; (mov r0, r0)
   14280:	sub	sp, fp, #4
   14284:	pop	{fp, pc}
   14288:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   1428c:	submi	r0, r0, r0
   14290:	andeq	r0, r0, r0
   14294:			; <UNDEFINED> instruction: 0xfffff504
   14298:	andeq	pc, r0, ip, lsr r6	; <UNPREDICTABLE>
   1429c:	andeq	pc, r0, r8, lsl r6	; <UNPREDICTABLE>
   142a0:	strdeq	pc, [r0], -r8
   142a4:	ldrdeq	pc, [r0], -ip
   142a8:	andeq	pc, r0, r4, asr #11
   142ac:			; <UNDEFINED> instruction: 0xffffed2c
   142b0:	andeq	pc, r0, r0, lsl r4	; <UNPREDICTABLE>
   142b4:			; <UNDEFINED> instruction: 0xfffff038
   142b8:			; <UNDEFINED> instruction: 0xffffef44
   142bc:	andeq	pc, r0, r4, ror #10
   142c0:			; <UNDEFINED> instruction: 0xfffff340
   142c4:	andeq	pc, r0, r8, lsr r5	; <UNPREDICTABLE>
   142c8:	andeq	pc, r0, r0, lsr #10
   142cc:			; <UNDEFINED> instruction: 0xfffffe64
   142d0:	andeq	pc, r0, r8, lsl #10
   142d4:			; <UNDEFINED> instruction: 0xfffffe38
   142d8:	strdeq	pc, [r0], -r0
   142dc:			; <UNDEFINED> instruction: 0xfffffe0c
   142e0:	andeq	pc, r0, r4, asr #9
   142e4:			; <UNDEFINED> instruction: 0xfffff874
   142e8:			; <UNDEFINED> instruction: 0x0000f4b0
   142ec:	muleq	r0, r4, r4
   142f0:	andeq	pc, r0, r8, ror r4	; <UNPREDICTABLE>
   142f4:	andeq	pc, r0, r4, ror #8
   142f8:	andeq	pc, r0, ip, asr #8
   142fc:	andeq	pc, r0, r4, lsr r4	; <UNPREDICTABLE>
   14300:	andeq	pc, r0, r0, lsr #8
   14304:	andeq	pc, r0, ip, lsl #8
   14308:	strdeq	pc, [r0], -r4
   1430c:	ldrdeq	pc, [r0], -ip
   14310:	ldrdeq	pc, [r0], -r0
   14314:	andeq	pc, r0, r0, asr #7
   14318:	andeq	pc, r0, r4, lsr #7
   1431c:	andeq	pc, r0, r8, lsl #7
   14320:	andeq	pc, r0, r0, ror r3	; <UNPREDICTABLE>
   14324:			; <UNDEFINED> instruction: 0xfffff1f4
   14328:	andeq	pc, r0, r0, asr r3	; <UNPREDICTABLE>
   1432c:	andeq	pc, r0, r8, asr #6
   14330:			; <UNDEFINED> instruction: 0xffffefbc
   14334:	andeq	pc, r0, ip, lsl r3	; <UNPREDICTABLE>
   14338:	andeq	pc, r0, r4, lsl #6
   1433c:	strdeq	pc, [r0], -r4
   14340:			; <UNDEFINED> instruction: 0xfffff23c
   14344:	ldrdeq	pc, [r0], -ip
   14348:			; <UNDEFINED> instruction: 0xfffff9f0
   1434c:	andeq	pc, r0, r8, asr #5
   14350:	push	{fp, lr}
   14354:	add	fp, sp, #4
   14358:	sub	sp, sp, #24
   1435c:	str	r0, [fp, #-8]
   14360:	str	r1, [fp, #-12]
   14364:	str	r2, [fp, #-16]
   14368:	str	r3, [fp, #-20]	; 0xffffffec
   1436c:	ldr	r3, [pc, #40]	; 1439c <_start@@Base+0x1e64>
   14370:	add	r3, pc, r3
   14374:	str	r3, [sp]
   14378:	ldr	r3, [fp, #-20]	; 0xffffffec
   1437c:	ldr	r2, [fp, #-16]
   14380:	ldr	r1, [fp, #-12]
   14384:	ldr	r0, [fp, #-8]
   14388:	bl	221a4 <flatcc_json_printer_table_as_root@@Base>
   1438c:	mov	r3, r0
   14390:	mov	r0, r3
   14394:	sub	sp, fp, #4
   14398:	pop	{fp, pc}
   1439c:			; <UNDEFINED> instruction: 0xfffff978
   143a0:	push	{fp, lr}
   143a4:	add	fp, sp, #4
   143a8:	sub	sp, sp, #24
   143ac:	str	r0, [fp, #-8]
   143b0:	str	r1, [fp, #-12]
   143b4:	mov	r3, #0
   143b8:	str	r3, [sp, #4]
   143bc:	mov	r3, #2
   143c0:	str	r3, [sp]
   143c4:	ldr	r3, [pc, #464]	; 1459c <_start@@Base+0x2064>
   143c8:	add	r3, pc, r3
   143cc:	mov	r2, #0
   143d0:	ldr	r1, [fp, #-12]
   143d4:	ldr	r0, [fp, #-8]
   143d8:	bl	1b188 <flatcc_json_printer_int8_field@@Base>
   143dc:	mov	r3, #0
   143e0:	str	r3, [sp, #4]
   143e4:	mov	r3, #2
   143e8:	str	r3, [sp]
   143ec:	ldr	r3, [pc, #428]	; 145a0 <_start@@Base+0x2068>
   143f0:	add	r3, pc, r3
   143f4:	mov	r2, #1
   143f8:	ldr	r1, [fp, #-12]
   143fc:	ldr	r0, [fp, #-8]
   14400:	bl	1ad54 <flatcc_json_printer_uint8_field@@Base>
   14404:	mov	r3, #0
   14408:	str	r3, [sp, #4]
   1440c:	mov	r3, #3
   14410:	str	r3, [sp]
   14414:	ldr	r3, [pc, #392]	; 145a4 <_start@@Base+0x206c>
   14418:	add	r3, pc, r3
   1441c:	mov	r2, #2
   14420:	ldr	r1, [fp, #-12]
   14424:	ldr	r0, [fp, #-8]
   14428:	bl	1b298 <flatcc_json_printer_int16_field@@Base>
   1442c:	mov	r3, #0
   14430:	str	r3, [sp, #4]
   14434:	mov	r3, #3
   14438:	str	r3, [sp]
   1443c:	ldr	r3, [pc, #356]	; 145a8 <_start@@Base+0x2070>
   14440:	add	r3, pc, r3
   14444:	mov	r2, #3
   14448:	ldr	r1, [fp, #-12]
   1444c:	ldr	r0, [fp, #-8]
   14450:	bl	1ae64 <flatcc_json_printer_uint16_field@@Base>
   14454:	mov	r3, #0
   14458:	str	r3, [sp, #4]
   1445c:	mov	r3, #3
   14460:	str	r3, [sp]
   14464:	ldr	r3, [pc, #320]	; 145ac <_start@@Base+0x2074>
   14468:	add	r3, pc, r3
   1446c:	mov	r2, #4
   14470:	ldr	r1, [fp, #-12]
   14474:	ldr	r0, [fp, #-8]
   14478:	bl	1b3a8 <flatcc_json_printer_int32_field@@Base>
   1447c:	mov	r3, #0
   14480:	str	r3, [sp, #4]
   14484:	mov	r3, #3
   14488:	str	r3, [sp]
   1448c:	ldr	r3, [pc, #284]	; 145b0 <_start@@Base+0x2078>
   14490:	add	r3, pc, r3
   14494:	mov	r2, #5
   14498:	ldr	r1, [fp, #-12]
   1449c:	ldr	r0, [fp, #-8]
   144a0:	bl	1af74 <flatcc_json_printer_uint32_field@@Base>
   144a4:	mov	r2, #0
   144a8:	mov	r3, #0
   144ac:	strd	r2, [sp, #8]
   144b0:	mov	r3, #3
   144b4:	str	r3, [sp]
   144b8:	ldr	r3, [pc, #244]	; 145b4 <_start@@Base+0x207c>
   144bc:	add	r3, pc, r3
   144c0:	mov	r2, #6
   144c4:	ldr	r1, [fp, #-12]
   144c8:	ldr	r0, [fp, #-8]
   144cc:	bl	1b4b0 <flatcc_json_printer_int64_field@@Base>
   144d0:	mov	r2, #0
   144d4:	mov	r3, #0
   144d8:	strd	r2, [sp, #8]
   144dc:	mov	r3, #3
   144e0:	str	r3, [sp]
   144e4:	ldr	r3, [pc, #204]	; 145b8 <_start@@Base+0x2080>
   144e8:	add	r3, pc, r3
   144ec:	mov	r2, #7
   144f0:	ldr	r1, [fp, #-12]
   144f4:	ldr	r0, [fp, #-8]
   144f8:	bl	1b07c <flatcc_json_printer_uint64_field@@Base>
   144fc:	mov	r3, #3
   14500:	str	r3, [sp]
   14504:	vldr	s0, [pc, #140]	; 14598 <_start@@Base+0x2060>
   14508:	ldr	r3, [pc, #172]	; 145bc <_start@@Base+0x2084>
   1450c:	add	r3, pc, r3
   14510:	mov	r2, #8
   14514:	ldr	r1, [fp, #-12]
   14518:	ldr	r0, [fp, #-8]
   1451c:	bl	1b6cc <flatcc_json_printer_float_field@@Base>
   14520:	mov	r3, #3
   14524:	str	r3, [sp]
   14528:	vldr	d0, [pc, #96]	; 14590 <_start@@Base+0x2058>
   1452c:	ldr	r3, [pc, #140]	; 145c0 <_start@@Base+0x2088>
   14530:	add	r3, pc, r3
   14534:	mov	r2, #9
   14538:	ldr	r1, [fp, #-12]
   1453c:	ldr	r0, [fp, #-8]
   14540:	bl	1b7e4 <flatcc_json_printer_double_field@@Base>
   14544:	mov	r3, #2
   14548:	str	r3, [sp]
   1454c:	ldr	r3, [pc, #112]	; 145c4 <_start@@Base+0x208c>
   14550:	add	r3, pc, r3
   14554:	mov	r2, #10
   14558:	ldr	r1, [fp, #-12]
   1455c:	ldr	r0, [fp, #-8]
   14560:	bl	1dfa8 <flatcc_json_printer_int8_vector_field@@Base>
   14564:	mov	r3, #4
   14568:	str	r3, [sp]
   1456c:	ldr	r3, [pc, #84]	; 145c8 <_start@@Base+0x2090>
   14570:	add	r3, pc, r3
   14574:	mov	r2, #11
   14578:	ldr	r1, [fp, #-12]
   1457c:	ldr	r0, [fp, #-8]
   14580:	bl	1ef60 <flatcc_json_printer_double_vector_field@@Base>
   14584:	nop			; (mov r0, r0)
   14588:	sub	sp, fp, #4
   1458c:	pop	{fp, pc}
	...
   1459c:	andeq	pc, r0, r4, ror r1	; <UNPREDICTABLE>
   145a0:	andeq	pc, r0, r0, asr r1	; <UNPREDICTABLE>
   145a4:	andeq	pc, r0, ip, lsr #2
   145a8:	andeq	pc, r0, r8, lsl #2
   145ac:	andeq	pc, r0, r4, ror #1
   145b0:	andeq	pc, r0, r0, asr #1
   145b4:	muleq	r0, r8, r0
   145b8:	andeq	pc, r0, r0, ror r0	; <UNPREDICTABLE>
   145bc:	andeq	pc, r0, r0, asr r0	; <UNPREDICTABLE>
   145c0:	andeq	pc, r0, r0, lsr r0	; <UNPREDICTABLE>
   145c4:	andeq	pc, r0, r4, lsl r0	; <UNPREDICTABLE>
   145c8:	strdeq	lr, [r0], -r8
   145cc:	push	{fp, lr}
   145d0:	add	fp, sp, #4
   145d4:	sub	sp, sp, #16
   145d8:	str	r0, [fp, #-8]
   145dc:	str	r1, [fp, #-12]
   145e0:	mov	r3, #0
   145e4:	str	r3, [sp, #4]
   145e8:	mov	r3, #19
   145ec:	str	r3, [sp]
   145f0:	ldr	r3, [pc, #28]	; 14614 <_start@@Base+0x20dc>
   145f4:	add	r3, pc, r3
   145f8:	mov	r2, #0
   145fc:	ldr	r1, [fp, #-12]
   14600:	ldr	r0, [fp, #-8]
   14604:	bl	1b3a8 <flatcc_json_printer_int32_field@@Base>
   14608:	nop			; (mov r0, r0)
   1460c:	sub	sp, fp, #4
   14610:	pop	{fp, pc}
   14614:	andeq	lr, r0, ip, ror pc
   14618:	push	{fp, lr}
   1461c:	add	fp, sp, #4
   14620:	sub	sp, sp, #24
   14624:	str	r0, [fp, #-8]
   14628:	str	r1, [fp, #-12]
   1462c:	ldr	r3, [pc, #284]	; 14750 <_start@@Base+0x2218>
   14630:	add	r3, pc, r3
   14634:	str	r3, [sp, #8]
   14638:	ldr	r3, [pc, #276]	; 14754 <_start@@Base+0x221c>
   1463c:	add	r3, pc, r3
   14640:	str	r3, [sp, #4]
   14644:	mov	r3, #14
   14648:	str	r3, [sp]
   1464c:	ldr	r3, [pc, #260]	; 14758 <_start@@Base+0x2220>
   14650:	add	r3, pc, r3
   14654:	mov	r2, #1
   14658:	ldr	r1, [fp, #-12]
   1465c:	ldr	r0, [fp, #-8]
   14660:	bl	21830 <flatcc_json_printer_union_field@@Base>
   14664:	ldr	r3, [pc, #240]	; 1475c <_start@@Base+0x2224>
   14668:	add	r3, pc, r3
   1466c:	str	r3, [sp, #8]
   14670:	ldr	r3, [pc, #232]	; 14760 <_start@@Base+0x2228>
   14674:	add	r3, pc, r3
   14678:	str	r3, [sp, #4]
   1467c:	mov	r3, #10
   14680:	str	r3, [sp]
   14684:	ldr	r3, [pc, #216]	; 14764 <_start@@Base+0x222c>
   14688:	add	r3, pc, r3
   1468c:	mov	r2, #3
   14690:	ldr	r1, [fp, #-12]
   14694:	ldr	r0, [fp, #-8]
   14698:	bl	21830 <flatcc_json_printer_union_field@@Base>
   1469c:	ldr	r3, [pc, #196]	; 14768 <_start@@Base+0x2230>
   146a0:	add	r3, pc, r3
   146a4:	str	r3, [sp, #8]
   146a8:	ldr	r3, [pc, #188]	; 1476c <_start@@Base+0x2234>
   146ac:	add	r3, pc, r3
   146b0:	str	r3, [sp, #4]
   146b4:	mov	r3, #9
   146b8:	str	r3, [sp]
   146bc:	ldr	r3, [pc, #172]	; 14770 <_start@@Base+0x2238>
   146c0:	add	r3, pc, r3
   146c4:	mov	r2, #5
   146c8:	ldr	r1, [fp, #-12]
   146cc:	ldr	r0, [fp, #-8]
   146d0:	bl	21830 <flatcc_json_printer_union_field@@Base>
   146d4:	ldr	r3, [pc, #152]	; 14774 <_start@@Base+0x223c>
   146d8:	add	r3, pc, r3
   146dc:	str	r3, [sp, #8]
   146e0:	ldr	r3, [pc, #144]	; 14778 <_start@@Base+0x2240>
   146e4:	add	r3, pc, r3
   146e8:	str	r3, [sp, #4]
   146ec:	mov	r3, #5
   146f0:	str	r3, [sp]
   146f4:	ldr	r3, [pc, #128]	; 1477c <_start@@Base+0x2244>
   146f8:	add	r3, pc, r3
   146fc:	mov	r2, #7
   14700:	ldr	r1, [fp, #-12]
   14704:	ldr	r0, [fp, #-8]
   14708:	bl	21830 <flatcc_json_printer_union_field@@Base>
   1470c:	ldr	r3, [pc, #108]	; 14780 <_start@@Base+0x2248>
   14710:	add	r3, pc, r3
   14714:	str	r3, [sp, #8]
   14718:	ldr	r3, [pc, #100]	; 14784 <_start@@Base+0x224c>
   1471c:	add	r3, pc, r3
   14720:	str	r3, [sp, #4]
   14724:	mov	r3, #10
   14728:	str	r3, [sp]
   1472c:	ldr	r3, [pc, #84]	; 14788 <_start@@Base+0x2250>
   14730:	add	r3, pc, r3
   14734:	mov	r2, #9
   14738:	ldr	r1, [fp, #-12]
   1473c:	ldr	r0, [fp, #-8]
   14740:	bl	21368 <flatcc_json_printer_union_vector_field@@Base>
   14744:	nop			; (mov r0, r0)
   14748:	sub	sp, fp, #4
   1474c:	pop	{fp, pc}
   14750:			; <UNDEFINED> instruction: 0xffffea14
   14754:			; <UNDEFINED> instruction: 0xffffe8c0
   14758:	andeq	lr, r0, r4, lsr pc
   1475c:			; <UNDEFINED> instruction: 0xffffe9dc
   14760:			; <UNDEFINED> instruction: 0xffffe888
   14764:	andeq	lr, r0, ip, lsl #30
   14768:			; <UNDEFINED> instruction: 0xffffe9a4
   1476c:			; <UNDEFINED> instruction: 0xffffe850
   14770:	andeq	lr, r0, r0, ror #29
   14774:			; <UNDEFINED> instruction: 0xffffe96c
   14778:			; <UNDEFINED> instruction: 0xffffe818
   1477c:			; <UNDEFINED> instruction: 0x0000eeb4
   14780:			; <UNDEFINED> instruction: 0xffffe934
   14784:			; <UNDEFINED> instruction: 0xffffe7e0
   14788:	andeq	lr, r0, r4, lsl #29
   1478c:	push	{fp, lr}
   14790:	add	fp, sp, #4
   14794:	sub	sp, sp, #64	; 0x40
   14798:	str	r0, [fp, #-56]	; 0xffffffc8
   1479c:	str	r1, [fp, #-60]	; 0xffffffc4
   147a0:	str	r2, [fp, #-64]	; 0xffffffc0
   147a4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   147a8:	cmp	r3, #0
   147ac:	bne	147c4 <_start@@Base+0x228c>
   147b0:	sub	r3, fp, #52	; 0x34
   147b4:	str	r3, [fp, #-56]	; 0xffffffc8
   147b8:	mov	r1, #0
   147bc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   147c0:	bl	2268c <flatcc_json_printer_init@@Base>
   147c4:	ldr	r3, [pc, #32]	; 147ec <_start@@Base+0x22b4>
   147c8:	add	r3, pc, r3
   147cc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   147d0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   147d4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   147d8:	bl	14350 <_start@@Base+0x1e18>
   147dc:	mov	r3, r0
   147e0:	mov	r0, r3
   147e4:	sub	sp, fp, #4
   147e8:	pop	{fp, pc}
   147ec:	strdeq	lr, [r0], -r8
   147f0:	push	{fp, lr}
   147f4:	add	fp, sp, #4
   147f8:	sub	sp, sp, #40	; 0x28
   147fc:	str	r0, [fp, #-32]	; 0xffffffe0
   14800:	str	r1, [fp, #-36]	; 0xffffffdc
   14804:	str	r2, [fp, #-40]	; 0xffffffd8
   14808:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1480c:	cmp	r3, #0
   14810:	bne	1481c <_start@@Base+0x22e4>
   14814:	sub	r3, fp, #28
   14818:	b	14820 <_start@@Base+0x22e8>
   1481c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14820:	str	r3, [fp, #-40]	; 0xffffffd8
   14824:	ldr	r3, [pc, #396]	; 149b8 <_start@@Base+0x2480>
   14828:	add	r3, pc, r3
   1482c:	mov	r1, r3
   14830:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14834:	bl	12420 <fopen@plt>
   14838:	str	r0, [fp, #-20]	; 0xffffffec
   1483c:	mov	r3, #0
   14840:	str	r3, [fp, #-8]
   14844:	mov	r3, #0
   14848:	str	r3, [fp, #-16]
   1484c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14850:	cmp	r3, #0
   14854:	beq	14958 <_start@@Base+0x2420>
   14858:	mov	r2, #2
   1485c:	mov	r1, #0
   14860:	ldr	r0, [fp, #-20]	; 0xffffffec
   14864:	bl	12510 <fseek@plt>
   14868:	ldr	r0, [fp, #-20]	; 0xffffffec
   1486c:	bl	12450 <ftell@plt>
   14870:	mov	r3, r0
   14874:	str	r3, [fp, #-8]
   14878:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1487c:	ldr	r2, [fp, #-8]
   14880:	str	r2, [r3]
   14884:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14888:	cmp	r3, #0
   1488c:	beq	148a0 <_start@@Base+0x2368>
   14890:	ldr	r2, [fp, #-8]
   14894:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14898:	cmp	r2, r3
   1489c:	bhi	14960 <_start@@Base+0x2428>
   148a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   148a4:	bl	12468 <rewind@plt>
   148a8:	ldr	r3, [fp, #-8]
   148ac:	cmp	r3, #0
   148b0:	beq	148bc <_start@@Base+0x2384>
   148b4:	ldr	r3, [fp, #-8]
   148b8:	b	148c0 <_start@@Base+0x2388>
   148bc:	mov	r3, #1
   148c0:	mov	r0, r3
   148c4:	bl	124a4 <malloc@plt>
   148c8:	mov	r3, r0
   148cc:	str	r3, [fp, #-16]
   148d0:	ldr	r3, [fp, #-16]
   148d4:	cmp	r3, #0
   148d8:	beq	14968 <_start@@Base+0x2430>
   148dc:	mov	r3, #0
   148e0:	str	r3, [fp, #-12]
   148e4:	b	148f8 <_start@@Base+0x23c0>
   148e8:	ldr	r2, [fp, #-12]
   148ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   148f0:	add	r3, r2, r3
   148f4:	str	r3, [fp, #-12]
   148f8:	ldr	r2, [fp, #-16]
   148fc:	ldr	r3, [fp, #-12]
   14900:	add	r0, r2, r3
   14904:	ldr	r2, [fp, #-8]
   14908:	ldr	r3, [fp, #-12]
   1490c:	sub	r2, r2, r3
   14910:	ldr	r3, [fp, #-20]	; 0xffffffec
   14914:	mov	r1, #1
   14918:	bl	1248c <fread@plt>
   1491c:	str	r0, [fp, #-24]	; 0xffffffe8
   14920:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14924:	cmp	r3, #0
   14928:	bne	148e8 <_start@@Base+0x23b0>
   1492c:	ldr	r2, [fp, #-12]
   14930:	ldr	r3, [fp, #-8]
   14934:	cmp	r2, r3
   14938:	bne	14970 <_start@@Base+0x2438>
   1493c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14940:	bl	124f8 <fclose@plt>
   14944:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14948:	ldr	r2, [fp, #-8]
   1494c:	str	r2, [r3]
   14950:	ldr	r3, [fp, #-16]
   14954:	b	149ac <_start@@Base+0x2474>
   14958:	nop			; (mov r0, r0)
   1495c:	b	14974 <_start@@Base+0x243c>
   14960:	nop			; (mov r0, r0)
   14964:	b	14974 <_start@@Base+0x243c>
   14968:	nop			; (mov r0, r0)
   1496c:	b	14974 <_start@@Base+0x243c>
   14970:	nop			; (mov r0, r0)
   14974:	ldr	r3, [fp, #-20]	; 0xffffffec
   14978:	cmp	r3, #0
   1497c:	beq	14988 <_start@@Base+0x2450>
   14980:	ldr	r0, [fp, #-20]	; 0xffffffec
   14984:	bl	124f8 <fclose@plt>
   14988:	ldr	r3, [fp, #-16]
   1498c:	cmp	r3, #0
   14990:	beq	1499c <_start@@Base+0x2464>
   14994:	ldr	r0, [fp, #-16]
   14998:	bl	12438 <free@plt>
   1499c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   149a0:	ldr	r2, [fp, #-8]
   149a4:	str	r2, [r3]
   149a8:	mov	r3, #0
   149ac:	mov	r0, r3
   149b0:	sub	sp, fp, #4
   149b4:	pop	{fp, pc}
   149b8:	andeq	lr, r0, r0, lsr #27

000149bc <test_print@@Base>:
   149bc:	push	{r4, fp, lr}
   149c0:	add	fp, sp, #8
   149c4:	sub	sp, sp, #92	; 0x5c
   149c8:	ldr	r4, [pc, #904]	; 14d58 <test_print@@Base+0x39c>
   149cc:	add	r4, pc, r4
   149d0:	mov	r3, #0
   149d4:	str	r3, [fp, #-16]
   149d8:	mov	r3, #0
   149dc:	str	r3, [fp, #-20]	; 0xffffffec
   149e0:	mov	r3, #0
   149e4:	str	r3, [fp, #-24]	; 0xffffffe8
   149e8:	mov	r3, #0
   149ec:	str	r3, [fp, #-28]	; 0xffffffe4
   149f0:	mov	r3, #0
   149f4:	str	r3, [fp, #-40]	; 0xffffffd8
   149f8:	mov	r3, #0
   149fc:	str	r3, [fp, #-44]	; 0xffffffd4
   14a00:	mov	r3, #0
   14a04:	str	r3, [fp, #-48]	; 0xffffffd0
   14a08:	mov	r3, #0
   14a0c:	str	r3, [fp, #-32]	; 0xffffffe0
   14a10:	sub	r3, fp, #96	; 0x60
   14a14:	str	r3, [fp, #-36]	; 0xffffffdc
   14a18:	ldr	r3, [pc, #828]	; 14d5c <test_print@@Base+0x3a0>
   14a1c:	ldr	r3, [r4, r3]
   14a20:	ldr	r3, [r3]
   14a24:	ldr	r2, [pc, #820]	; 14d60 <test_print@@Base+0x3a4>
   14a28:	add	r2, pc, r2
   14a2c:	mov	r1, r2
   14a30:	mov	r0, r3
   14a34:	bl	12420 <fopen@plt>
   14a38:	str	r0, [fp, #-32]	; 0xffffffe0
   14a3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14a40:	cmp	r3, #0
   14a44:	bne	14a7c <test_print@@Base+0xc0>
   14a48:	ldr	r3, [pc, #788]	; 14d64 <test_print@@Base+0x3a8>
   14a4c:	ldr	r3, [r4, r3]
   14a50:	ldr	r0, [r3]
   14a54:	ldr	r3, [pc, #768]	; 14d5c <test_print@@Base+0x3a0>
   14a58:	ldr	r3, [r4, r3]
   14a5c:	ldr	r3, [r3]
   14a60:	mov	r2, r3
   14a64:	ldr	r3, [pc, #764]	; 14d68 <test_print@@Base+0x3ac>
   14a68:	add	r3, pc, r3
   14a6c:	mov	r1, r3
   14a70:	bl	124d4 <fprintf@plt>
   14a74:	mvn	r3, #0
   14a78:	b	14d4c <test_print@@Base+0x390>
   14a7c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14a80:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14a84:	bl	2268c <flatcc_json_printer_init@@Base>
   14a88:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14a8c:	bl	12744 <_start@@Base+0x20c>
   14a90:	ldr	r3, [pc, #724]	; 14d6c <test_print@@Base+0x3b0>
   14a94:	ldr	r3, [r4, r3]
   14a98:	ldr	r3, [r3]
   14a9c:	cmp	r3, #0
   14aa0:	beq	14af4 <test_print@@Base+0x138>
   14aa4:	ldr	r3, [pc, #704]	; 14d6c <test_print@@Base+0x3b0>
   14aa8:	ldr	r3, [r4, r3]
   14aac:	ldr	r3, [r3]
   14ab0:	ldr	r2, [pc, #696]	; 14d70 <test_print@@Base+0x3b4>
   14ab4:	add	r2, pc, r2
   14ab8:	mov	r1, r2
   14abc:	mov	r0, r3
   14ac0:	bl	12414 <strcmp@plt>
   14ac4:	mov	r3, r0
   14ac8:	cmp	r3, #0
   14acc:	beq	14af4 <test_print@@Base+0x138>
   14ad0:	ldr	r3, [pc, #660]	; 14d6c <test_print@@Base+0x3b0>
   14ad4:	ldr	r3, [r4, r3]
   14ad8:	ldr	r3, [r3]
   14adc:	sub	r2, fp, #40	; 0x28
   14ae0:	mov	r1, #10240	; 0x2800
   14ae4:	mov	r0, r3
   14ae8:	bl	147f0 <_start@@Base+0x22b8>
   14aec:	str	r0, [fp, #-20]	; 0xffffffec
   14af0:	b	14b08 <test_print@@Base+0x14c>
   14af4:	ldr	r3, [pc, #632]	; 14d74 <test_print@@Base+0x3b8>
   14af8:	add	r3, pc, r3
   14afc:	str	r3, [fp, #-20]	; 0xffffffec
   14b00:	mov	r3, #288	; 0x120
   14b04:	str	r3, [fp, #-40]	; 0xffffffd8
   14b08:	ldr	r3, [fp, #-20]	; 0xffffffec
   14b0c:	cmp	r3, #0
   14b10:	bne	14b44 <test_print@@Base+0x188>
   14b14:	ldr	r3, [pc, #584]	; 14d64 <test_print@@Base+0x3a8>
   14b18:	ldr	r3, [r4, r3]
   14b1c:	ldr	r0, [r3]
   14b20:	ldr	r3, [pc, #580]	; 14d6c <test_print@@Base+0x3b0>
   14b24:	ldr	r3, [r4, r3]
   14b28:	ldr	r3, [r3]
   14b2c:	mov	r2, r3
   14b30:	ldr	r3, [pc, #576]	; 14d78 <test_print@@Base+0x3bc>
   14b34:	add	r3, pc, r3
   14b38:	mov	r1, r3
   14b3c:	bl	124d4 <fprintf@plt>
   14b40:	b	14d40 <test_print@@Base+0x384>
   14b44:	ldr	r3, [pc, #560]	; 14d7c <test_print@@Base+0x3c0>
   14b48:	ldr	r3, [r4, r3]
   14b4c:	ldr	r3, [r3]
   14b50:	sub	r2, fp, #44	; 0x2c
   14b54:	mov	r1, #10240	; 0x2800
   14b58:	mov	r0, r3
   14b5c:	bl	147f0 <_start@@Base+0x22b8>
   14b60:	str	r0, [fp, #-24]	; 0xffffffe8
   14b64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14b68:	cmp	r3, #0
   14b6c:	bne	14ba0 <test_print@@Base+0x1e4>
   14b70:	ldr	r3, [pc, #492]	; 14d64 <test_print@@Base+0x3a8>
   14b74:	ldr	r3, [r4, r3]
   14b78:	ldr	r0, [r3]
   14b7c:	ldr	r3, [pc, #504]	; 14d7c <test_print@@Base+0x3c0>
   14b80:	ldr	r3, [r4, r3]
   14b84:	ldr	r3, [r3]
   14b88:	mov	r2, r3
   14b8c:	ldr	r3, [pc, #492]	; 14d80 <test_print@@Base+0x3c4>
   14b90:	add	r3, pc, r3
   14b94:	mov	r1, r3
   14b98:	bl	124d4 <fprintf@plt>
   14b9c:	b	14d40 <test_print@@Base+0x384>
   14ba0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14ba4:	ldr	r3, [pc, #472]	; 14d84 <test_print@@Base+0x3c8>
   14ba8:	add	r3, pc, r3
   14bac:	ldr	r1, [fp, #-20]	; 0xffffffec
   14bb0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14bb4:	bl	14350 <_start@@Base+0x1e18>
   14bb8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14bbc:	bl	127c8 <_start@@Base+0x290>
   14bc0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14bc4:	bl	12660 <_start@@Base+0x128>
   14bc8:	mov	r3, r0
   14bcc:	cmp	r3, #0
   14bd0:	beq	14be4 <test_print@@Base+0x228>
   14bd4:	ldr	r3, [pc, #428]	; 14d88 <test_print@@Base+0x3cc>
   14bd8:	add	r3, pc, r3
   14bdc:	mov	r0, r3
   14be0:	bl	12498 <puts@plt>
   14be4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14be8:	bl	124f8 <fclose@plt>
   14bec:	mov	r3, #0
   14bf0:	str	r3, [fp, #-32]	; 0xffffffe0
   14bf4:	ldr	r3, [pc, #352]	; 14d5c <test_print@@Base+0x3a0>
   14bf8:	ldr	r3, [r4, r3]
   14bfc:	ldr	r3, [r3]
   14c00:	sub	r2, fp, #48	; 0x30
   14c04:	mov	r1, #10240	; 0x2800
   14c08:	mov	r0, r3
   14c0c:	bl	147f0 <_start@@Base+0x22b8>
   14c10:	str	r0, [fp, #-28]	; 0xffffffe4
   14c14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14c18:	cmp	r3, #0
   14c1c:	bne	14c50 <test_print@@Base+0x294>
   14c20:	ldr	r3, [pc, #316]	; 14d64 <test_print@@Base+0x3a8>
   14c24:	ldr	r3, [r4, r3]
   14c28:	ldr	r0, [r3]
   14c2c:	ldr	r3, [pc, #296]	; 14d5c <test_print@@Base+0x3a0>
   14c30:	ldr	r3, [r4, r3]
   14c34:	ldr	r3, [r3]
   14c38:	mov	r2, r3
   14c3c:	ldr	r3, [pc, #328]	; 14d8c <test_print@@Base+0x3d0>
   14c40:	add	r3, pc, r3
   14c44:	mov	r1, r3
   14c48:	bl	124d4 <fprintf@plt>
   14c4c:	b	14d40 <test_print@@Base+0x384>
   14c50:	ldr	r2, [fp, #-48]	; 0xffffffd0
   14c54:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14c58:	cmp	r2, r3
   14c5c:	bne	14c80 <test_print@@Base+0x2c4>
   14c60:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14c64:	mov	r2, r3
   14c68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14c6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14c70:	bl	1245c <memcmp@plt>
   14c74:	mov	r3, r0
   14c78:	cmp	r3, #0
   14c7c:	beq	14ca4 <test_print@@Base+0x2e8>
   14c80:	ldr	r3, [pc, #220]	; 14d64 <test_print@@Base+0x3a8>
   14c84:	ldr	r3, [r4, r3]
   14c88:	ldr	r3, [r3]
   14c8c:	mov	r2, #54	; 0x36
   14c90:	mov	r1, #1
   14c94:	ldr	r0, [pc, #244]	; 14d90 <test_print@@Base+0x3d4>
   14c98:	add	r0, pc, r0
   14c9c:	bl	12480 <fwrite@plt>
   14ca0:	b	14d40 <test_print@@Base+0x384>
   14ca4:	ldr	r3, [pc, #184]	; 14d64 <test_print@@Base+0x3a8>
   14ca8:	ldr	r3, [r4, r3]
   14cac:	ldr	r3, [r3]
   14cb0:	mov	r2, #26
   14cb4:	mov	r1, #1
   14cb8:	ldr	r0, [pc, #212]	; 14d94 <test_print@@Base+0x3d8>
   14cbc:	add	r0, pc, r0
   14cc0:	bl	12480 <fwrite@plt>
   14cc4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14cc8:	bl	22c54 <flatcc_json_printer_clear@@Base>
   14ccc:	ldr	r3, [pc, #152]	; 14d6c <test_print@@Base+0x3b0>
   14cd0:	ldr	r3, [r4, r3]
   14cd4:	ldr	r3, [r3]
   14cd8:	cmp	r3, #0
   14cdc:	bne	14ce8 <test_print@@Base+0x32c>
   14ce0:	mov	r3, #0
   14ce4:	str	r3, [fp, #-20]	; 0xffffffec
   14ce8:	ldr	r3, [fp, #-20]	; 0xffffffec
   14cec:	cmp	r3, #0
   14cf0:	beq	14cfc <test_print@@Base+0x340>
   14cf4:	ldr	r0, [fp, #-20]	; 0xffffffec
   14cf8:	bl	12438 <free@plt>
   14cfc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14d00:	cmp	r3, #0
   14d04:	beq	14d10 <test_print@@Base+0x354>
   14d08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14d0c:	bl	12438 <free@plt>
   14d10:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14d14:	cmp	r3, #0
   14d18:	beq	14d24 <test_print@@Base+0x368>
   14d1c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14d20:	bl	12438 <free@plt>
   14d24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14d28:	cmp	r3, #0
   14d2c:	beq	14d38 <test_print@@Base+0x37c>
   14d30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14d34:	bl	124f8 <fclose@plt>
   14d38:	ldr	r3, [fp, #-16]
   14d3c:	b	14d4c <test_print@@Base+0x390>
   14d40:	mvn	r3, #0
   14d44:	str	r3, [fp, #-16]
   14d48:	b	14cc4 <test_print@@Base+0x308>
   14d4c:	mov	r0, r3
   14d50:	sub	sp, fp, #8
   14d54:	pop	{r4, fp, pc}
   14d58:	andeq	r0, r2, ip, lsr #12
   14d5c:	andeq	r0, r0, r4, lsl #1
   14d60:	andeq	lr, r0, r8, lsl lr
   14d64:	andeq	r0, r0, r0, ror r0
   14d68:	ldrdeq	lr, [r0], -ip
   14d6c:	andeq	r0, r0, ip, ror r0
   14d70:			; <UNDEFINED> instruction: 0x0000edb0
   14d74:	ldrdeq	lr, [r0], -r4
   14d78:	andeq	lr, r0, r4, lsr sp
   14d7c:	andeq	r0, r0, r4, ror r0
   14d80:	andeq	lr, r0, r4, lsl #26
   14d84:	andeq	lr, r0, r8, lsl sl
   14d88:	andeq	lr, r0, r8, ror #25
   14d8c:	andeq	lr, r0, r0, lsr #25
   14d90:	andeq	lr, r0, r0, ror ip
   14d94:	andeq	lr, r0, r4, lsl #25

00014d98 <main@@Base>:
   14d98:	push	{r4, fp, lr}
   14d9c:	add	fp, sp, #8
   14da0:	sub	sp, sp, #12
   14da4:	str	r0, [fp, #-16]
   14da8:	str	r1, [fp, #-20]	; 0xffffffec
   14dac:	ldr	r4, [pc, #188]	; 14e70 <main@@Base+0xd8>
   14db0:	add	r4, pc, r4
   14db4:	ldr	r3, [pc, #184]	; 14e74 <main@@Base+0xdc>
   14db8:	ldr	r3, [r4, r3]
   14dbc:	ldr	r3, [r3]
   14dc0:	mov	r2, #24
   14dc4:	mov	r1, #1
   14dc8:	ldr	r0, [pc, #168]	; 14e78 <main@@Base+0xe0>
   14dcc:	add	r0, pc, r0
   14dd0:	bl	12480 <fwrite@plt>
   14dd4:	ldr	r3, [fp, #-16]
   14dd8:	cmp	r3, #1
   14ddc:	beq	14e14 <main@@Base+0x7c>
   14de0:	ldr	r3, [fp, #-16]
   14de4:	cmp	r3, #4
   14de8:	beq	14e14 <main@@Base+0x7c>
   14dec:	ldr	r3, [pc, #128]	; 14e74 <main@@Base+0xdc>
   14df0:	ldr	r3, [r4, r3]
   14df4:	ldr	r3, [r3]
   14df8:	mov	r2, #191	; 0xbf
   14dfc:	mov	r1, #1
   14e00:	ldr	r0, [pc, #116]	; 14e7c <main@@Base+0xe4>
   14e04:	add	r0, pc, r0
   14e08:	bl	12480 <fwrite@plt>
   14e0c:	mov	r0, #1
   14e10:	bl	124c8 <exit@plt>
   14e14:	ldr	r3, [fp, #-16]
   14e18:	cmp	r3, #4
   14e1c:	bne	14e5c <main@@Base+0xc4>
   14e20:	ldr	r3, [fp, #-20]	; 0xffffffec
   14e24:	ldr	r2, [r3, #4]
   14e28:	ldr	r3, [pc, #80]	; 14e80 <main@@Base+0xe8>
   14e2c:	ldr	r3, [r4, r3]
   14e30:	str	r2, [r3]
   14e34:	ldr	r3, [fp, #-20]	; 0xffffffec
   14e38:	ldr	r2, [r3, #8]
   14e3c:	ldr	r3, [pc, #64]	; 14e84 <main@@Base+0xec>
   14e40:	ldr	r3, [r4, r3]
   14e44:	str	r2, [r3]
   14e48:	ldr	r3, [fp, #-20]	; 0xffffffec
   14e4c:	ldr	r2, [r3, #12]
   14e50:	ldr	r3, [pc, #48]	; 14e88 <main@@Base+0xf0>
   14e54:	ldr	r3, [r4, r3]
   14e58:	str	r2, [r3]
   14e5c:	bl	149bc <test_print@@Base>
   14e60:	mov	r3, r0
   14e64:	mov	r0, r3
   14e68:	sub	sp, fp, #8
   14e6c:	pop	{r4, fp, pc}
   14e70:	andeq	r0, r2, r8, asr #4
   14e74:	andeq	r0, r0, r0, ror r0
   14e78:	muleq	r0, r0, fp
   14e7c:	andeq	lr, r0, r4, ror fp
   14e80:	andeq	r0, r0, ip, ror r0
   14e84:	andeq	r0, r0, r4, ror r0
   14e88:	andeq	r0, r0, r4, lsl #1
   14e8c:	andeq	r0, r0, r0
   14e90:	push	{fp}		; (str fp, [sp, #-4]!)
   14e94:	add	fp, sp, #0
   14e98:	sub	sp, sp, #12
   14e9c:	mov	r3, r0
   14ea0:	strb	r3, [fp, #-5]
   14ea4:	ldrb	r3, [fp, #-5]
   14ea8:	mov	r0, r3
   14eac:	add	sp, fp, #0
   14eb0:	pop	{fp}		; (ldr fp, [sp], #4)
   14eb4:	bx	lr
   14eb8:	push	{fp, lr}
   14ebc:	add	fp, sp, #4
   14ec0:	sub	sp, sp, #8
   14ec4:	str	r0, [fp, #-8]
   14ec8:	ldr	r3, [fp, #-8]
   14ecc:	ldrb	r3, [r3]
   14ed0:	mov	r0, r3
   14ed4:	bl	14e90 <main@@Base+0xf8>
   14ed8:	mov	r3, r0
   14edc:	mov	r0, r3
   14ee0:	sub	sp, fp, #4
   14ee4:	pop	{fp, pc}
   14ee8:	push	{fp}		; (str fp, [sp, #-4]!)
   14eec:	add	fp, sp, #0
   14ef0:	sub	sp, sp, #12
   14ef4:	mov	r3, r0
   14ef8:	strh	r3, [fp, #-6]
   14efc:	ldrh	r3, [fp, #-6]
   14f00:	mov	r0, r3
   14f04:	add	sp, fp, #0
   14f08:	pop	{fp}		; (ldr fp, [sp], #4)
   14f0c:	bx	lr
   14f10:	push	{fp, lr}
   14f14:	add	fp, sp, #4
   14f18:	sub	sp, sp, #8
   14f1c:	str	r0, [fp, #-8]
   14f20:	ldr	r3, [fp, #-8]
   14f24:	ldrh	r3, [r3]
   14f28:	mov	r0, r3
   14f2c:	bl	14ee8 <main@@Base+0x150>
   14f30:	mov	r3, r0
   14f34:	mov	r0, r3
   14f38:	sub	sp, fp, #4
   14f3c:	pop	{fp, pc}
   14f40:	push	{fp}		; (str fp, [sp, #-4]!)
   14f44:	add	fp, sp, #0
   14f48:	sub	sp, sp, #12
   14f4c:	str	r0, [fp, #-8]
   14f50:	ldr	r3, [fp, #-8]
   14f54:	mov	r0, r3
   14f58:	add	sp, fp, #0
   14f5c:	pop	{fp}		; (ldr fp, [sp], #4)
   14f60:	bx	lr
   14f64:	push	{fp, lr}
   14f68:	add	fp, sp, #4
   14f6c:	sub	sp, sp, #8
   14f70:	str	r0, [fp, #-8]
   14f74:	ldr	r3, [fp, #-8]
   14f78:	ldr	r3, [r3]
   14f7c:	mov	r0, r3
   14f80:	bl	14f40 <main@@Base+0x1a8>
   14f84:	mov	r3, r0
   14f88:	mov	r0, r3
   14f8c:	sub	sp, fp, #4
   14f90:	pop	{fp, pc}
   14f94:	push	{fp}		; (str fp, [sp, #-4]!)
   14f98:	add	fp, sp, #0
   14f9c:	sub	sp, sp, #12
   14fa0:	strd	r0, [fp, #-12]
   14fa4:	ldrd	r2, [fp, #-12]
   14fa8:	mov	r0, r2
   14fac:	mov	r1, r3
   14fb0:	add	sp, fp, #0
   14fb4:	pop	{fp}		; (ldr fp, [sp], #4)
   14fb8:	bx	lr
   14fbc:	push	{fp, lr}
   14fc0:	add	fp, sp, #4
   14fc4:	sub	sp, sp, #8
   14fc8:	str	r0, [fp, #-8]
   14fcc:	ldr	r3, [fp, #-8]
   14fd0:	ldrd	r2, [r3]
   14fd4:	mov	r0, r2
   14fd8:	mov	r1, r3
   14fdc:	bl	14f94 <main@@Base+0x1fc>
   14fe0:	mov	r2, r0
   14fe4:	mov	r3, r1
   14fe8:	mov	r0, r2
   14fec:	mov	r1, r3
   14ff0:	sub	sp, fp, #4
   14ff4:	pop	{fp, pc}
   14ff8:	push	{fp}		; (str fp, [sp, #-4]!)
   14ffc:	add	fp, sp, #0
   15000:	sub	sp, sp, #12
   15004:	mov	r3, r0
   15008:	strb	r3, [fp, #-5]
   1500c:	ldrsb	r3, [fp, #-5]
   15010:	mov	r0, r3
   15014:	add	sp, fp, #0
   15018:	pop	{fp}		; (ldr fp, [sp], #4)
   1501c:	bx	lr
   15020:	push	{fp, lr}
   15024:	add	fp, sp, #4
   15028:	sub	sp, sp, #8
   1502c:	str	r0, [fp, #-8]
   15030:	ldr	r3, [fp, #-8]
   15034:	ldrsb	r3, [r3]
   15038:	mov	r0, r3
   1503c:	bl	14ff8 <main@@Base+0x260>
   15040:	mov	r3, r0
   15044:	mov	r0, r3
   15048:	sub	sp, fp, #4
   1504c:	pop	{fp, pc}
   15050:	push	{fp}		; (str fp, [sp, #-4]!)
   15054:	add	fp, sp, #0
   15058:	sub	sp, sp, #12
   1505c:	mov	r3, r0
   15060:	strh	r3, [fp, #-6]
   15064:	ldrsh	r3, [fp, #-6]
   15068:	mov	r0, r3
   1506c:	add	sp, fp, #0
   15070:	pop	{fp}		; (ldr fp, [sp], #4)
   15074:	bx	lr
   15078:	push	{fp, lr}
   1507c:	add	fp, sp, #4
   15080:	sub	sp, sp, #8
   15084:	str	r0, [fp, #-8]
   15088:	ldr	r3, [fp, #-8]
   1508c:	ldrsh	r3, [r3]
   15090:	mov	r0, r3
   15094:	bl	15050 <main@@Base+0x2b8>
   15098:	mov	r3, r0
   1509c:	mov	r0, r3
   150a0:	sub	sp, fp, #4
   150a4:	pop	{fp, pc}
   150a8:	push	{fp}		; (str fp, [sp, #-4]!)
   150ac:	add	fp, sp, #0
   150b0:	sub	sp, sp, #12
   150b4:	str	r0, [fp, #-8]
   150b8:	ldr	r3, [fp, #-8]
   150bc:	mov	r0, r3
   150c0:	add	sp, fp, #0
   150c4:	pop	{fp}		; (ldr fp, [sp], #4)
   150c8:	bx	lr
   150cc:	push	{fp, lr}
   150d0:	add	fp, sp, #4
   150d4:	sub	sp, sp, #8
   150d8:	str	r0, [fp, #-8]
   150dc:	ldr	r3, [fp, #-8]
   150e0:	ldr	r3, [r3]
   150e4:	mov	r0, r3
   150e8:	bl	150a8 <main@@Base+0x310>
   150ec:	mov	r3, r0
   150f0:	mov	r0, r3
   150f4:	sub	sp, fp, #4
   150f8:	pop	{fp, pc}
   150fc:	push	{fp}		; (str fp, [sp, #-4]!)
   15100:	add	fp, sp, #0
   15104:	sub	sp, sp, #12
   15108:	strd	r0, [fp, #-12]
   1510c:	ldrd	r2, [fp, #-12]
   15110:	mov	r0, r2
   15114:	mov	r1, r3
   15118:	add	sp, fp, #0
   1511c:	pop	{fp}		; (ldr fp, [sp], #4)
   15120:	bx	lr
   15124:	push	{fp, lr}
   15128:	add	fp, sp, #4
   1512c:	sub	sp, sp, #8
   15130:	str	r0, [fp, #-8]
   15134:	ldr	r3, [fp, #-8]
   15138:	ldrd	r2, [r3]
   1513c:	mov	r0, r2
   15140:	mov	r1, r3
   15144:	bl	150fc <main@@Base+0x364>
   15148:	mov	r2, r0
   1514c:	mov	r3, r1
   15150:	mov	r0, r2
   15154:	mov	r1, r3
   15158:	sub	sp, fp, #4
   1515c:	pop	{fp, pc}
   15160:	push	{fp}		; (str fp, [sp, #-4]!)
   15164:	add	fp, sp, #0
   15168:	sub	sp, sp, #20
   1516c:	vstr	s0, [fp, #-16]
   15170:	ldr	r3, [fp, #-16]
   15174:	str	r3, [fp, #-8]
   15178:	ldr	r3, [fp, #-8]
   1517c:	str	r3, [fp, #-8]
   15180:	ldr	r3, [fp, #-8]
   15184:	vmov	s15, r3
   15188:	vmov.f32	s0, s15
   1518c:	add	sp, fp, #0
   15190:	pop	{fp}		; (ldr fp, [sp], #4)
   15194:	bx	lr
   15198:	push	{fp, lr}
   1519c:	add	fp, sp, #4
   151a0:	sub	sp, sp, #8
   151a4:	str	r0, [fp, #-8]
   151a8:	ldr	r3, [fp, #-8]
   151ac:	vldr	s15, [r3]
   151b0:	vmov.f32	s0, s15
   151b4:	bl	15160 <main@@Base+0x3c8>
   151b8:	vmov.f32	s15, s0
   151bc:	vmov.f32	s0, s15
   151c0:	sub	sp, fp, #4
   151c4:	pop	{fp, pc}
   151c8:	push	{fp}		; (str fp, [sp, #-4]!)
   151cc:	add	fp, sp, #0
   151d0:	sub	sp, sp, #20
   151d4:	vstr	d0, [fp, #-20]	; 0xffffffec
   151d8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   151dc:	strd	r2, [fp, #-12]
   151e0:	ldrd	r2, [fp, #-12]
   151e4:	strd	r2, [fp, #-12]
   151e8:	ldrd	r2, [fp, #-12]
   151ec:	vmov	d7, r2, r3
   151f0:	vmov.f64	d0, d7
   151f4:	add	sp, fp, #0
   151f8:	pop	{fp}		; (ldr fp, [sp], #4)
   151fc:	bx	lr
   15200:	push	{fp, lr}
   15204:	add	fp, sp, #4
   15208:	sub	sp, sp, #8
   1520c:	str	r0, [fp, #-8]
   15210:	ldr	r3, [fp, #-8]
   15214:	vldr	d7, [r3]
   15218:	vmov.f64	d0, d7
   1521c:	bl	151c8 <main@@Base+0x430>
   15220:	vmov.f64	d7, d0
   15224:	vmov.f64	d0, d7
   15228:	sub	sp, fp, #4
   1522c:	pop	{fp, pc}
   15230:	push	{fp}		; (str fp, [sp, #-4]!)
   15234:	add	fp, sp, #0
   15238:	sub	sp, sp, #12
   1523c:	mov	r3, r0
   15240:	strb	r3, [fp, #-5]
   15244:	ldrb	r3, [fp, #-5]
   15248:	mov	r0, r3
   1524c:	add	sp, fp, #0
   15250:	pop	{fp}		; (ldr fp, [sp], #4)
   15254:	bx	lr
   15258:	push	{fp, lr}
   1525c:	add	fp, sp, #4
   15260:	sub	sp, sp, #8
   15264:	str	r0, [fp, #-8]
   15268:	ldr	r3, [fp, #-8]
   1526c:	ldrb	r3, [r3]
   15270:	mov	r0, r3
   15274:	bl	15230 <main@@Base+0x498>
   15278:	mov	r3, r0
   1527c:	mov	r0, r3
   15280:	sub	sp, fp, #4
   15284:	pop	{fp, pc}
   15288:	push	{fp}		; (str fp, [sp, #-4]!)
   1528c:	add	fp, sp, #0
   15290:	sub	sp, sp, #12
   15294:	str	r0, [fp, #-8]
   15298:	ldr	r3, [fp, #-8]
   1529c:	mov	r0, r3
   152a0:	add	sp, fp, #0
   152a4:	pop	{fp}		; (ldr fp, [sp], #4)
   152a8:	bx	lr
   152ac:	push	{fp, lr}
   152b0:	add	fp, sp, #4
   152b4:	sub	sp, sp, #8
   152b8:	str	r0, [fp, #-8]
   152bc:	ldr	r3, [fp, #-8]
   152c0:	ldr	r3, [r3]
   152c4:	mov	r0, r3
   152c8:	bl	15288 <main@@Base+0x4f0>
   152cc:	mov	r3, r0
   152d0:	mov	r0, r3
   152d4:	sub	sp, fp, #4
   152d8:	pop	{fp, pc}
   152dc:	push	{fp}		; (str fp, [sp, #-4]!)
   152e0:	add	fp, sp, #0
   152e4:	sub	sp, sp, #12
   152e8:	str	r0, [fp, #-8]
   152ec:	ldr	r3, [fp, #-8]
   152f0:	mov	r0, r3
   152f4:	add	sp, fp, #0
   152f8:	pop	{fp}		; (ldr fp, [sp], #4)
   152fc:	bx	lr
   15300:	push	{fp, lr}
   15304:	add	fp, sp, #4
   15308:	sub	sp, sp, #8
   1530c:	str	r0, [fp, #-8]
   15310:	ldr	r3, [fp, #-8]
   15314:	ldr	r3, [r3]
   15318:	mov	r0, r3
   1531c:	bl	152dc <main@@Base+0x544>
   15320:	mov	r3, r0
   15324:	mov	r0, r3
   15328:	sub	sp, fp, #4
   1532c:	pop	{fp, pc}
   15330:	push	{fp}		; (str fp, [sp, #-4]!)
   15334:	add	fp, sp, #0
   15338:	sub	sp, sp, #12
   1533c:	mov	r3, r0
   15340:	strh	r3, [fp, #-6]
   15344:	ldrh	r3, [fp, #-6]
   15348:	mov	r0, r3
   1534c:	add	sp, fp, #0
   15350:	pop	{fp}		; (ldr fp, [sp], #4)
   15354:	bx	lr
   15358:	push	{fp, lr}
   1535c:	add	fp, sp, #4
   15360:	sub	sp, sp, #8
   15364:	str	r0, [fp, #-8]
   15368:	ldr	r3, [fp, #-8]
   1536c:	ldrh	r3, [r3]
   15370:	mov	r0, r3
   15374:	bl	15330 <main@@Base+0x598>
   15378:	mov	r3, r0
   1537c:	mov	r0, r3
   15380:	sub	sp, fp, #4
   15384:	pop	{fp, pc}
   15388:	push	{fp}		; (str fp, [sp, #-4]!)
   1538c:	add	fp, sp, #0
   15390:	sub	sp, sp, #12
   15394:	mov	r3, r0
   15398:	strb	r3, [fp, #-5]
   1539c:	ldrb	r3, [fp, #-5]
   153a0:	mov	r0, r3
   153a4:	add	sp, fp, #0
   153a8:	pop	{fp}		; (ldr fp, [sp], #4)
   153ac:	bx	lr
   153b0:	push	{fp, lr}
   153b4:	add	fp, sp, #4
   153b8:	sub	sp, sp, #8
   153bc:	str	r0, [fp, #-8]
   153c0:	ldr	r3, [fp, #-8]
   153c4:	ldrb	r3, [r3]
   153c8:	mov	r0, r3
   153cc:	bl	15388 <main@@Base+0x5f0>
   153d0:	mov	r3, r0
   153d4:	mov	r0, r3
   153d8:	sub	sp, fp, #4
   153dc:	pop	{fp, pc}
   153e0:	push	{fp}		; (str fp, [sp, #-4]!)
   153e4:	add	fp, sp, #0
   153e8:	sub	sp, sp, #12
   153ec:	str	r0, [fp, #-8]
   153f0:	ldr	r3, [fp, #-8]
   153f4:	mov	r0, r3
   153f8:	add	sp, fp, #0
   153fc:	pop	{fp}		; (ldr fp, [sp], #4)
   15400:	bx	lr
   15404:	push	{fp}		; (str fp, [sp, #-4]!)
   15408:	add	fp, sp, #0
   1540c:	sub	sp, sp, #12
   15410:	str	r0, [fp, #-8]
   15414:	ldr	r3, [fp, #-8]
   15418:	mov	r0, r3
   1541c:	add	sp, fp, #0
   15420:	pop	{fp}		; (ldr fp, [sp], #4)
   15424:	bx	lr
   15428:	push	{fp, lr}
   1542c:	add	fp, sp, #4
   15430:	sub	sp, sp, #8
   15434:	str	r0, [fp, #-8]
   15438:	ldr	r3, [fp, #-8]
   1543c:	ldr	r3, [r3]
   15440:	mov	r0, r3
   15444:	bl	153e0 <main@@Base+0x648>
   15448:	mov	r3, r0
   1544c:	mov	r0, r3
   15450:	sub	sp, fp, #4
   15454:	pop	{fp, pc}
   15458:	push	{fp}		; (str fp, [sp, #-4]!)
   1545c:	add	fp, sp, #0
   15460:	sub	sp, sp, #12
   15464:	str	r0, [fp, #-8]
   15468:	str	r1, [fp, #-12]
   1546c:	ldr	r3, [fp, #-8]
   15470:	ldr	r3, [r3, #36]	; 0x24
   15474:	cmp	r3, #0
   15478:	bne	15488 <main@@Base+0x6f0>
   1547c:	ldr	r3, [fp, #-8]
   15480:	ldr	r2, [fp, #-12]
   15484:	str	r2, [r3, #36]	; 0x24
   15488:	nop			; (mov r0, r0)
   1548c:	add	sp, fp, #0
   15490:	pop	{fp}		; (ldr fp, [sp], #4)
   15494:	bx	lr
   15498:	push	{fp}		; (str fp, [sp, #-4]!)
   1549c:	add	fp, sp, #0
   154a0:	sub	sp, sp, #12
   154a4:	str	r0, [fp, #-8]
   154a8:	ldr	r3, [fp, #-8]
   154ac:	ldr	r3, [r3, #36]	; 0x24
   154b0:	mov	r0, r3
   154b4:	add	sp, fp, #0
   154b8:	pop	{fp}		; (ldr fp, [sp], #4)
   154bc:	bx	lr
   154c0:	push	{fp, lr}
   154c4:	add	fp, sp, #4
   154c8:	sub	sp, sp, #8
   154cc:	str	r0, [fp, #-8]
   154d0:	ldr	r3, [fp, #-8]
   154d4:	ldr	r2, [r3, #20]
   154d8:	ldr	r3, [fp, #-8]
   154dc:	ldr	r3, [r3, #16]
   154e0:	cmp	r2, r3
   154e4:	bcc	154fc <main@@Base+0x764>
   154e8:	ldr	r3, [fp, #-8]
   154ec:	ldr	r3, [r3, #44]	; 0x2c
   154f0:	mov	r1, #0
   154f4:	ldr	r0, [fp, #-8]
   154f8:	blx	r3
   154fc:	nop			; (mov r0, r0)
   15500:	sub	sp, fp, #4
   15504:	pop	{fp, pc}
   15508:	push	{fp, lr}
   1550c:	add	fp, sp, #4
   15510:	sub	sp, sp, #8
   15514:	str	r0, [fp, #-8]
   15518:	str	r1, [fp, #-12]
   1551c:	ldr	r3, [fp, #-8]
   15520:	cmp	r3, #0
   15524:	beq	15548 <main@@Base+0x7b0>
   15528:	mov	r2, #5
   1552c:	ldr	r3, [pc, #60]	; 15570 <main@@Base+0x7d8>
   15530:	add	r3, pc, r3
   15534:	mov	r1, r3
   15538:	ldr	r0, [fp, #-12]
   1553c:	bl	12444 <memcpy@plt>
   15540:	mov	r3, #4
   15544:	b	15564 <main@@Base+0x7cc>
   15548:	mov	r2, #6
   1554c:	ldr	r3, [pc, #32]	; 15574 <main@@Base+0x7dc>
   15550:	add	r3, pc, r3
   15554:	mov	r1, r3
   15558:	ldr	r0, [fp, #-12]
   1555c:	bl	12444 <memcpy@plt>
   15560:	mov	r3, #5
   15564:	mov	r0, r3
   15568:	sub	sp, fp, #4
   1556c:	pop	{fp, pc}
   15570:	ldrdeq	lr, [r0], -r8
   15574:	andeq	lr, r0, r0, asr #11
   15578:	push	{fp}		; (str fp, [sp, #-4]!)
   1557c:	add	fp, sp, #0
   15580:	sub	sp, sp, #20
   15584:	mov	r3, r0
   15588:	str	r1, [fp, #-20]	; 0xffffffec
   1558c:	strb	r3, [fp, #-13]
   15590:	ldrb	r3, [fp, #-13]
   15594:	cmp	r3, #99	; 0x63
   15598:	bls	15650 <main@@Base+0x8b8>
   1559c:	ldr	r3, [fp, #-20]	; 0xffffffec
   155a0:	add	r3, r3, #3
   155a4:	str	r3, [fp, #-20]	; 0xffffffec
   155a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   155ac:	mov	r2, #0
   155b0:	strb	r2, [r3]
   155b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   155b8:	sub	r3, r3, #2
   155bc:	str	r3, [fp, #-20]	; 0xffffffec
   155c0:	ldrb	r3, [fp, #-13]
   155c4:	ldr	r2, [pc, #356]	; 15730 <main@@Base+0x998>
   155c8:	umull	r1, r2, r2, r3
   155cc:	lsr	r2, r2, #5
   155d0:	mov	r1, #100	; 0x64
   155d4:	mul	r2, r1, r2
   155d8:	sub	r3, r3, r2
   155dc:	uxtb	r3, r3
   155e0:	lsl	r3, r3, #1
   155e4:	mov	r2, r3
   155e8:	ldr	r3, [pc, #324]	; 15734 <main@@Base+0x99c>
   155ec:	add	r3, pc, r3
   155f0:	add	r3, r2, r3
   155f4:	str	r3, [fp, #-8]
   155f8:	ldrb	r3, [fp, #-13]
   155fc:	ldr	r2, [pc, #300]	; 15730 <main@@Base+0x998>
   15600:	umull	r2, r3, r2, r3
   15604:	lsr	r3, r3, #5
   15608:	strb	r3, [fp, #-13]
   1560c:	ldr	r3, [fp, #-8]
   15610:	ldrb	r2, [r3]
   15614:	ldr	r3, [fp, #-20]	; 0xffffffec
   15618:	strb	r2, [r3]
   1561c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15620:	add	r3, r3, #1
   15624:	ldr	r2, [fp, #-8]
   15628:	ldrb	r2, [r2, #1]
   1562c:	strb	r2, [r3]
   15630:	ldr	r3, [fp, #-20]	; 0xffffffec
   15634:	sub	r3, r3, #1
   15638:	ldrb	r2, [fp, #-13]
   1563c:	add	r2, r2, #48	; 0x30
   15640:	uxtb	r2, r2
   15644:	strb	r2, [r3]
   15648:	mov	r3, #3
   1564c:	b	15720 <main@@Base+0x988>
   15650:	ldrb	r3, [fp, #-13]
   15654:	cmp	r3, #9
   15658:	bls	156f8 <main@@Base+0x960>
   1565c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15660:	add	r3, r3, #2
   15664:	str	r3, [fp, #-20]	; 0xffffffec
   15668:	ldr	r3, [fp, #-20]	; 0xffffffec
   1566c:	mov	r2, #0
   15670:	strb	r2, [r3]
   15674:	ldr	r3, [fp, #-20]	; 0xffffffec
   15678:	sub	r3, r3, #2
   1567c:	str	r3, [fp, #-20]	; 0xffffffec
   15680:	ldrb	r3, [fp, #-13]
   15684:	ldr	r2, [pc, #164]	; 15730 <main@@Base+0x998>
   15688:	umull	r1, r2, r2, r3
   1568c:	lsr	r2, r2, #5
   15690:	mov	r1, #100	; 0x64
   15694:	mul	r2, r1, r2
   15698:	sub	r3, r3, r2
   1569c:	uxtb	r3, r3
   156a0:	lsl	r3, r3, #1
   156a4:	mov	r2, r3
   156a8:	ldr	r3, [pc, #136]	; 15738 <main@@Base+0x9a0>
   156ac:	add	r3, pc, r3
   156b0:	add	r3, r2, r3
   156b4:	str	r3, [fp, #-8]
   156b8:	ldrb	r3, [fp, #-13]
   156bc:	ldr	r2, [pc, #108]	; 15730 <main@@Base+0x998>
   156c0:	umull	r2, r3, r2, r3
   156c4:	lsr	r3, r3, #5
   156c8:	strb	r3, [fp, #-13]
   156cc:	ldr	r3, [fp, #-8]
   156d0:	ldrb	r2, [r3]
   156d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   156d8:	strb	r2, [r3]
   156dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   156e0:	add	r3, r3, #1
   156e4:	ldr	r2, [fp, #-8]
   156e8:	ldrb	r2, [r2, #1]
   156ec:	strb	r2, [r3]
   156f0:	mov	r3, #2
   156f4:	b	15720 <main@@Base+0x988>
   156f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   156fc:	add	r3, r3, #1
   15700:	mov	r2, #0
   15704:	strb	r2, [r3]
   15708:	ldrb	r3, [fp, #-13]
   1570c:	add	r3, r3, #48	; 0x30
   15710:	uxtb	r2, r3
   15714:	ldr	r3, [fp, #-20]	; 0xffffffec
   15718:	strb	r2, [r3]
   1571c:	mov	r3, #1
   15720:	mov	r0, r3
   15724:	add	sp, fp, #0
   15728:	pop	{fp}		; (ldr fp, [sp], #4)
   1572c:	bx	lr
   15730:	mvnpl	r8, pc, lsl r5
   15734:	andeq	lr, r0, r0, asr r4
   15738:	muleq	r0, r0, r3
   1573c:	push	{fp}		; (str fp, [sp, #-4]!)
   15740:	add	fp, sp, #0
   15744:	sub	sp, sp, #20
   15748:	mov	r3, r0
   1574c:	str	r1, [fp, #-20]	; 0xffffffec
   15750:	strh	r3, [fp, #-14]
   15754:	mov	r3, #0
   15758:	str	r3, [fp, #-8]
   1575c:	ldrh	r3, [fp, #-14]
   15760:	cmp	r3, #1000	; 0x3e8
   15764:	bcc	15790 <main@@Base+0x9f8>
   15768:	ldrh	r3, [fp, #-14]
   1576c:	ldr	r2, [pc, #728]	; 15a4c <main@@Base+0xcb4>
   15770:	cmp	r3, r2
   15774:	bls	15784 <main@@Base+0x9ec>
   15778:	mov	r3, #5
   1577c:	str	r3, [fp, #-8]
   15780:	b	157c8 <main@@Base+0xa30>
   15784:	mov	r3, #4
   15788:	str	r3, [fp, #-8]
   1578c:	b	157c8 <main@@Base+0xa30>
   15790:	ldrh	r3, [fp, #-14]
   15794:	cmp	r3, #99	; 0x63
   15798:	bls	157a8 <main@@Base+0xa10>
   1579c:	mov	r3, #3
   157a0:	str	r3, [fp, #-8]
   157a4:	b	157c8 <main@@Base+0xa30>
   157a8:	ldrh	r3, [fp, #-14]
   157ac:	cmp	r3, #9
   157b0:	bls	157c0 <main@@Base+0xa28>
   157b4:	mov	r3, #2
   157b8:	str	r3, [fp, #-8]
   157bc:	b	157c8 <main@@Base+0xa30>
   157c0:	mov	r3, #1
   157c4:	str	r3, [fp, #-8]
   157c8:	ldr	r3, [fp, #-8]
   157cc:	ldr	r2, [fp, #-20]	; 0xffffffec
   157d0:	add	r3, r2, r3
   157d4:	str	r3, [fp, #-20]	; 0xffffffec
   157d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   157dc:	mov	r2, #0
   157e0:	strb	r2, [r3]
   157e4:	ldr	r3, [fp, #-8]
   157e8:	and	r3, r3, #1
   157ec:	cmp	r3, #0
   157f0:	beq	1592c <main@@Base+0xb94>
   157f4:	ldr	r3, [fp, #-8]
   157f8:	cmp	r3, #3
   157fc:	beq	15890 <main@@Base+0xaf8>
   15800:	cmp	r3, #5
   15804:	beq	15814 <main@@Base+0xa7c>
   15808:	cmp	r3, #1
   1580c:	beq	1590c <main@@Base+0xb74>
   15810:	b	15a38 <main@@Base+0xca0>
   15814:	ldr	r3, [fp, #-20]	; 0xffffffec
   15818:	sub	r3, r3, #2
   1581c:	str	r3, [fp, #-20]	; 0xffffffec
   15820:	ldrh	r3, [fp, #-14]
   15824:	ldr	r2, [pc, #548]	; 15a50 <main@@Base+0xcb8>
   15828:	umull	r1, r2, r2, r3
   1582c:	lsr	r2, r2, #5
   15830:	mov	r1, #100	; 0x64
   15834:	mul	r2, r1, r2
   15838:	sub	r3, r3, r2
   1583c:	uxth	r3, r3
   15840:	lsl	r3, r3, #1
   15844:	mov	r2, r3
   15848:	ldr	r3, [pc, #516]	; 15a54 <main@@Base+0xcbc>
   1584c:	add	r3, pc, r3
   15850:	add	r3, r2, r3
   15854:	str	r3, [fp, #-12]
   15858:	ldrh	r3, [fp, #-14]
   1585c:	ldr	r2, [pc, #492]	; 15a50 <main@@Base+0xcb8>
   15860:	umull	r2, r3, r2, r3
   15864:	lsr	r3, r3, #5
   15868:	strh	r3, [fp, #-14]
   1586c:	ldr	r3, [fp, #-12]
   15870:	ldrb	r2, [r3]
   15874:	ldr	r3, [fp, #-20]	; 0xffffffec
   15878:	strb	r2, [r3]
   1587c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15880:	add	r3, r3, #1
   15884:	ldr	r2, [fp, #-12]
   15888:	ldrb	r2, [r2, #1]
   1588c:	strb	r2, [r3]
   15890:	ldr	r3, [fp, #-20]	; 0xffffffec
   15894:	sub	r3, r3, #2
   15898:	str	r3, [fp, #-20]	; 0xffffffec
   1589c:	ldrh	r3, [fp, #-14]
   158a0:	ldr	r2, [pc, #424]	; 15a50 <main@@Base+0xcb8>
   158a4:	umull	r1, r2, r2, r3
   158a8:	lsr	r2, r2, #5
   158ac:	mov	r1, #100	; 0x64
   158b0:	mul	r2, r1, r2
   158b4:	sub	r3, r3, r2
   158b8:	uxth	r3, r3
   158bc:	lsl	r3, r3, #1
   158c0:	mov	r2, r3
   158c4:	ldr	r3, [pc, #396]	; 15a58 <main@@Base+0xcc0>
   158c8:	add	r3, pc, r3
   158cc:	add	r3, r2, r3
   158d0:	str	r3, [fp, #-12]
   158d4:	ldrh	r3, [fp, #-14]
   158d8:	ldr	r2, [pc, #368]	; 15a50 <main@@Base+0xcb8>
   158dc:	umull	r2, r3, r2, r3
   158e0:	lsr	r3, r3, #5
   158e4:	strh	r3, [fp, #-14]
   158e8:	ldr	r3, [fp, #-12]
   158ec:	ldrb	r2, [r3]
   158f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   158f4:	strb	r2, [r3]
   158f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   158fc:	add	r3, r3, #1
   15900:	ldr	r2, [fp, #-12]
   15904:	ldrb	r2, [r2, #1]
   15908:	strb	r2, [r3]
   1590c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15910:	sub	r3, r3, #1
   15914:	ldrh	r2, [fp, #-14]
   15918:	uxtb	r2, r2
   1591c:	add	r2, r2, #48	; 0x30
   15920:	uxtb	r2, r2
   15924:	strb	r2, [r3]
   15928:	b	15a38 <main@@Base+0xca0>
   1592c:	ldr	r3, [fp, #-8]
   15930:	cmp	r3, #2
   15934:	beq	159bc <main@@Base+0xc24>
   15938:	cmp	r3, #4
   1593c:	bne	15a38 <main@@Base+0xca0>
   15940:	ldr	r3, [fp, #-20]	; 0xffffffec
   15944:	sub	r3, r3, #2
   15948:	str	r3, [fp, #-20]	; 0xffffffec
   1594c:	ldrh	r3, [fp, #-14]
   15950:	ldr	r2, [pc, #248]	; 15a50 <main@@Base+0xcb8>
   15954:	umull	r1, r2, r2, r3
   15958:	lsr	r2, r2, #5
   1595c:	mov	r1, #100	; 0x64
   15960:	mul	r2, r1, r2
   15964:	sub	r3, r3, r2
   15968:	uxth	r3, r3
   1596c:	lsl	r3, r3, #1
   15970:	mov	r2, r3
   15974:	ldr	r3, [pc, #224]	; 15a5c <main@@Base+0xcc4>
   15978:	add	r3, pc, r3
   1597c:	add	r3, r2, r3
   15980:	str	r3, [fp, #-12]
   15984:	ldrh	r3, [fp, #-14]
   15988:	ldr	r2, [pc, #192]	; 15a50 <main@@Base+0xcb8>
   1598c:	umull	r2, r3, r2, r3
   15990:	lsr	r3, r3, #5
   15994:	strh	r3, [fp, #-14]
   15998:	ldr	r3, [fp, #-12]
   1599c:	ldrb	r2, [r3]
   159a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   159a4:	strb	r2, [r3]
   159a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   159ac:	add	r3, r3, #1
   159b0:	ldr	r2, [fp, #-12]
   159b4:	ldrb	r2, [r2, #1]
   159b8:	strb	r2, [r3]
   159bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   159c0:	sub	r3, r3, #2
   159c4:	str	r3, [fp, #-20]	; 0xffffffec
   159c8:	ldrh	r3, [fp, #-14]
   159cc:	ldr	r2, [pc, #124]	; 15a50 <main@@Base+0xcb8>
   159d0:	umull	r1, r2, r2, r3
   159d4:	lsr	r2, r2, #5
   159d8:	mov	r1, #100	; 0x64
   159dc:	mul	r2, r1, r2
   159e0:	sub	r3, r3, r2
   159e4:	uxth	r3, r3
   159e8:	lsl	r3, r3, #1
   159ec:	mov	r2, r3
   159f0:	ldr	r3, [pc, #104]	; 15a60 <main@@Base+0xcc8>
   159f4:	add	r3, pc, r3
   159f8:	add	r3, r2, r3
   159fc:	str	r3, [fp, #-12]
   15a00:	ldrh	r3, [fp, #-14]
   15a04:	ldr	r2, [pc, #68]	; 15a50 <main@@Base+0xcb8>
   15a08:	umull	r2, r3, r2, r3
   15a0c:	lsr	r3, r3, #5
   15a10:	strh	r3, [fp, #-14]
   15a14:	ldr	r3, [fp, #-12]
   15a18:	ldrb	r2, [r3]
   15a1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15a20:	strb	r2, [r3]
   15a24:	ldr	r3, [fp, #-20]	; 0xffffffec
   15a28:	add	r3, r3, #1
   15a2c:	ldr	r2, [fp, #-12]
   15a30:	ldrb	r2, [r2, #1]
   15a34:	strb	r2, [r3]
   15a38:	ldr	r3, [fp, #-8]
   15a3c:	mov	r0, r3
   15a40:	add	sp, fp, #0
   15a44:	pop	{fp}		; (ldr fp, [sp], #4)
   15a48:	bx	lr
   15a4c:	andeq	r2, r0, pc, lsl #14
   15a50:	mvnpl	r8, pc, lsl r5
   15a54:	strdeq	lr, [r0], -r0
   15a58:	andeq	lr, r0, r4, ror r1
   15a5c:	andeq	lr, r0, r4, asr #1
   15a60:	andeq	lr, r0, r8, asr #32
   15a64:	push	{fp}		; (str fp, [sp, #-4]!)
   15a68:	add	fp, sp, #0
   15a6c:	sub	sp, sp, #20
   15a70:	str	r0, [fp, #-16]
   15a74:	str	r1, [fp, #-20]	; 0xffffffec
   15a78:	mov	r3, #0
   15a7c:	str	r3, [fp, #-8]
   15a80:	ldr	r3, [fp, #-16]
   15a84:	ldr	r2, [pc, #1488]	; 1605c <main@@Base+0x12c4>
   15a88:	cmp	r3, r2
   15a8c:	bls	15b28 <main@@Base+0xd90>
   15a90:	ldr	r3, [fp, #-16]
   15a94:	ldr	r2, [pc, #1476]	; 16060 <main@@Base+0x12c8>
   15a98:	cmp	r3, r2
   15a9c:	bls	15ae4 <main@@Base+0xd4c>
   15aa0:	ldr	r3, [fp, #-16]
   15aa4:	ldr	r2, [pc, #1464]	; 16064 <main@@Base+0x12cc>
   15aa8:	cmp	r3, r2
   15aac:	bls	15abc <main@@Base+0xd24>
   15ab0:	mov	r3, #10
   15ab4:	str	r3, [fp, #-8]
   15ab8:	b	15b78 <main@@Base+0xde0>
   15abc:	ldr	r3, [fp, #-16]
   15ac0:	ldr	r2, [pc, #1440]	; 16068 <main@@Base+0x12d0>
   15ac4:	cmp	r3, r2
   15ac8:	bls	15ad8 <main@@Base+0xd40>
   15acc:	mov	r3, #9
   15ad0:	str	r3, [fp, #-8]
   15ad4:	b	15b78 <main@@Base+0xde0>
   15ad8:	mov	r3, #8
   15adc:	str	r3, [fp, #-8]
   15ae0:	b	15b78 <main@@Base+0xde0>
   15ae4:	ldr	r3, [fp, #-16]
   15ae8:	ldr	r2, [pc, #1404]	; 1606c <main@@Base+0x12d4>
   15aec:	cmp	r3, r2
   15af0:	bls	15b00 <main@@Base+0xd68>
   15af4:	mov	r3, #7
   15af8:	str	r3, [fp, #-8]
   15afc:	b	15b78 <main@@Base+0xde0>
   15b00:	ldr	r3, [fp, #-16]
   15b04:	ldr	r2, [pc, #1380]	; 16070 <main@@Base+0x12d8>
   15b08:	cmp	r3, r2
   15b0c:	bls	15b1c <main@@Base+0xd84>
   15b10:	mov	r3, #6
   15b14:	str	r3, [fp, #-8]
   15b18:	b	15b78 <main@@Base+0xde0>
   15b1c:	mov	r3, #5
   15b20:	str	r3, [fp, #-8]
   15b24:	b	15b78 <main@@Base+0xde0>
   15b28:	ldr	r3, [fp, #-16]
   15b2c:	cmp	r3, #99	; 0x63
   15b30:	bls	15b58 <main@@Base+0xdc0>
   15b34:	ldr	r3, [fp, #-16]
   15b38:	cmp	r3, #1000	; 0x3e8
   15b3c:	bcc	15b4c <main@@Base+0xdb4>
   15b40:	mov	r3, #4
   15b44:	str	r3, [fp, #-8]
   15b48:	b	15b78 <main@@Base+0xde0>
   15b4c:	mov	r3, #3
   15b50:	str	r3, [fp, #-8]
   15b54:	b	15b78 <main@@Base+0xde0>
   15b58:	ldr	r3, [fp, #-16]
   15b5c:	cmp	r3, #9
   15b60:	bls	15b70 <main@@Base+0xdd8>
   15b64:	mov	r3, #2
   15b68:	str	r3, [fp, #-8]
   15b6c:	b	15b78 <main@@Base+0xde0>
   15b70:	mov	r3, #1
   15b74:	str	r3, [fp, #-8]
   15b78:	ldr	r3, [fp, #-8]
   15b7c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15b80:	add	r3, r2, r3
   15b84:	str	r3, [fp, #-20]	; 0xffffffec
   15b88:	ldr	r3, [fp, #-20]	; 0xffffffec
   15b8c:	mov	r2, #0
   15b90:	strb	r2, [r3]
   15b94:	ldr	r3, [fp, #-8]
   15b98:	and	r3, r3, #1
   15b9c:	cmp	r3, #0
   15ba0:	beq	15dcc <main@@Base+0x1034>
   15ba4:	ldr	r3, [fp, #-8]
   15ba8:	sub	r3, r3, #1
   15bac:	cmp	r3, #8
   15bb0:	addls	pc, pc, r3, lsl #2
   15bb4:	b	16048 <main@@Base+0x12b0>
   15bb8:	b	15dac <main@@Base+0x1014>
   15bbc:	b	16048 <main@@Base+0x12b0>
   15bc0:	b	15d38 <main@@Base+0xfa0>
   15bc4:	b	16048 <main@@Base+0x12b0>
   15bc8:	b	15cc4 <main@@Base+0xf2c>
   15bcc:	b	16048 <main@@Base+0x12b0>
   15bd0:	b	15c50 <main@@Base+0xeb8>
   15bd4:	b	16048 <main@@Base+0x12b0>
   15bd8:	b	15bdc <main@@Base+0xe44>
   15bdc:	ldr	r3, [fp, #-20]	; 0xffffffec
   15be0:	sub	r3, r3, #2
   15be4:	str	r3, [fp, #-20]	; 0xffffffec
   15be8:	ldr	r2, [fp, #-16]
   15bec:	ldr	r3, [pc, #1152]	; 16074 <main@@Base+0x12dc>
   15bf0:	umull	r1, r3, r3, r2
   15bf4:	lsr	r3, r3, #5
   15bf8:	mov	r1, #100	; 0x64
   15bfc:	mul	r3, r1, r3
   15c00:	sub	r3, r2, r3
   15c04:	lsl	r3, r3, #1
   15c08:	ldr	r2, [pc, #1128]	; 16078 <main@@Base+0x12e0>
   15c0c:	add	r2, pc, r2
   15c10:	add	r3, r3, r2
   15c14:	str	r3, [fp, #-12]
   15c18:	ldr	r3, [fp, #-16]
   15c1c:	ldr	r2, [pc, #1104]	; 16074 <main@@Base+0x12dc>
   15c20:	umull	r2, r3, r2, r3
   15c24:	lsr	r3, r3, #5
   15c28:	str	r3, [fp, #-16]
   15c2c:	ldr	r3, [fp, #-12]
   15c30:	ldrb	r2, [r3]
   15c34:	ldr	r3, [fp, #-20]	; 0xffffffec
   15c38:	strb	r2, [r3]
   15c3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15c40:	add	r3, r3, #1
   15c44:	ldr	r2, [fp, #-12]
   15c48:	ldrb	r2, [r2, #1]
   15c4c:	strb	r2, [r3]
   15c50:	ldr	r3, [fp, #-20]	; 0xffffffec
   15c54:	sub	r3, r3, #2
   15c58:	str	r3, [fp, #-20]	; 0xffffffec
   15c5c:	ldr	r2, [fp, #-16]
   15c60:	ldr	r3, [pc, #1036]	; 16074 <main@@Base+0x12dc>
   15c64:	umull	r1, r3, r3, r2
   15c68:	lsr	r3, r3, #5
   15c6c:	mov	r1, #100	; 0x64
   15c70:	mul	r3, r1, r3
   15c74:	sub	r3, r2, r3
   15c78:	lsl	r3, r3, #1
   15c7c:	ldr	r2, [pc, #1016]	; 1607c <main@@Base+0x12e4>
   15c80:	add	r2, pc, r2
   15c84:	add	r3, r3, r2
   15c88:	str	r3, [fp, #-12]
   15c8c:	ldr	r3, [fp, #-16]
   15c90:	ldr	r2, [pc, #988]	; 16074 <main@@Base+0x12dc>
   15c94:	umull	r2, r3, r2, r3
   15c98:	lsr	r3, r3, #5
   15c9c:	str	r3, [fp, #-16]
   15ca0:	ldr	r3, [fp, #-12]
   15ca4:	ldrb	r2, [r3]
   15ca8:	ldr	r3, [fp, #-20]	; 0xffffffec
   15cac:	strb	r2, [r3]
   15cb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   15cb4:	add	r3, r3, #1
   15cb8:	ldr	r2, [fp, #-12]
   15cbc:	ldrb	r2, [r2, #1]
   15cc0:	strb	r2, [r3]
   15cc4:	ldr	r3, [fp, #-20]	; 0xffffffec
   15cc8:	sub	r3, r3, #2
   15ccc:	str	r3, [fp, #-20]	; 0xffffffec
   15cd0:	ldr	r2, [fp, #-16]
   15cd4:	ldr	r3, [pc, #920]	; 16074 <main@@Base+0x12dc>
   15cd8:	umull	r1, r3, r3, r2
   15cdc:	lsr	r3, r3, #5
   15ce0:	mov	r1, #100	; 0x64
   15ce4:	mul	r3, r1, r3
   15ce8:	sub	r3, r2, r3
   15cec:	lsl	r3, r3, #1
   15cf0:	ldr	r2, [pc, #904]	; 16080 <main@@Base+0x12e8>
   15cf4:	add	r2, pc, r2
   15cf8:	add	r3, r3, r2
   15cfc:	str	r3, [fp, #-12]
   15d00:	ldr	r3, [fp, #-16]
   15d04:	ldr	r2, [pc, #872]	; 16074 <main@@Base+0x12dc>
   15d08:	umull	r2, r3, r2, r3
   15d0c:	lsr	r3, r3, #5
   15d10:	str	r3, [fp, #-16]
   15d14:	ldr	r3, [fp, #-12]
   15d18:	ldrb	r2, [r3]
   15d1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15d20:	strb	r2, [r3]
   15d24:	ldr	r3, [fp, #-20]	; 0xffffffec
   15d28:	add	r3, r3, #1
   15d2c:	ldr	r2, [fp, #-12]
   15d30:	ldrb	r2, [r2, #1]
   15d34:	strb	r2, [r3]
   15d38:	ldr	r3, [fp, #-20]	; 0xffffffec
   15d3c:	sub	r3, r3, #2
   15d40:	str	r3, [fp, #-20]	; 0xffffffec
   15d44:	ldr	r2, [fp, #-16]
   15d48:	ldr	r3, [pc, #804]	; 16074 <main@@Base+0x12dc>
   15d4c:	umull	r1, r3, r3, r2
   15d50:	lsr	r3, r3, #5
   15d54:	mov	r1, #100	; 0x64
   15d58:	mul	r3, r1, r3
   15d5c:	sub	r3, r2, r3
   15d60:	lsl	r3, r3, #1
   15d64:	ldr	r2, [pc, #792]	; 16084 <main@@Base+0x12ec>
   15d68:	add	r2, pc, r2
   15d6c:	add	r3, r3, r2
   15d70:	str	r3, [fp, #-12]
   15d74:	ldr	r3, [fp, #-16]
   15d78:	ldr	r2, [pc, #756]	; 16074 <main@@Base+0x12dc>
   15d7c:	umull	r2, r3, r2, r3
   15d80:	lsr	r3, r3, #5
   15d84:	str	r3, [fp, #-16]
   15d88:	ldr	r3, [fp, #-12]
   15d8c:	ldrb	r2, [r3]
   15d90:	ldr	r3, [fp, #-20]	; 0xffffffec
   15d94:	strb	r2, [r3]
   15d98:	ldr	r3, [fp, #-20]	; 0xffffffec
   15d9c:	add	r3, r3, #1
   15da0:	ldr	r2, [fp, #-12]
   15da4:	ldrb	r2, [r2, #1]
   15da8:	strb	r2, [r3]
   15dac:	ldr	r3, [fp, #-20]	; 0xffffffec
   15db0:	sub	r3, r3, #1
   15db4:	ldr	r2, [fp, #-16]
   15db8:	uxtb	r2, r2
   15dbc:	add	r2, r2, #48	; 0x30
   15dc0:	uxtb	r2, r2
   15dc4:	strb	r2, [r3]
   15dc8:	b	16048 <main@@Base+0x12b0>
   15dcc:	ldr	r3, [fp, #-8]
   15dd0:	sub	r3, r3, #2
   15dd4:	cmp	r3, #8
   15dd8:	addls	pc, pc, r3, lsl #2
   15ddc:	b	16048 <main@@Base+0x12b0>
   15de0:	b	15fd4 <main@@Base+0x123c>
   15de4:	b	16048 <main@@Base+0x12b0>
   15de8:	b	15f60 <main@@Base+0x11c8>
   15dec:	b	16048 <main@@Base+0x12b0>
   15df0:	b	15eec <main@@Base+0x1154>
   15df4:	b	16048 <main@@Base+0x12b0>
   15df8:	b	15e78 <main@@Base+0x10e0>
   15dfc:	b	16048 <main@@Base+0x12b0>
   15e00:	b	15e04 <main@@Base+0x106c>
   15e04:	ldr	r3, [fp, #-20]	; 0xffffffec
   15e08:	sub	r3, r3, #2
   15e0c:	str	r3, [fp, #-20]	; 0xffffffec
   15e10:	ldr	r2, [fp, #-16]
   15e14:	ldr	r3, [pc, #600]	; 16074 <main@@Base+0x12dc>
   15e18:	umull	r1, r3, r3, r2
   15e1c:	lsr	r3, r3, #5
   15e20:	mov	r1, #100	; 0x64
   15e24:	mul	r3, r1, r3
   15e28:	sub	r3, r2, r3
   15e2c:	lsl	r3, r3, #1
   15e30:	ldr	r2, [pc, #592]	; 16088 <main@@Base+0x12f0>
   15e34:	add	r2, pc, r2
   15e38:	add	r3, r3, r2
   15e3c:	str	r3, [fp, #-12]
   15e40:	ldr	r3, [fp, #-16]
   15e44:	ldr	r2, [pc, #552]	; 16074 <main@@Base+0x12dc>
   15e48:	umull	r2, r3, r2, r3
   15e4c:	lsr	r3, r3, #5
   15e50:	str	r3, [fp, #-16]
   15e54:	ldr	r3, [fp, #-12]
   15e58:	ldrb	r2, [r3]
   15e5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15e60:	strb	r2, [r3]
   15e64:	ldr	r3, [fp, #-20]	; 0xffffffec
   15e68:	add	r3, r3, #1
   15e6c:	ldr	r2, [fp, #-12]
   15e70:	ldrb	r2, [r2, #1]
   15e74:	strb	r2, [r3]
   15e78:	ldr	r3, [fp, #-20]	; 0xffffffec
   15e7c:	sub	r3, r3, #2
   15e80:	str	r3, [fp, #-20]	; 0xffffffec
   15e84:	ldr	r2, [fp, #-16]
   15e88:	ldr	r3, [pc, #484]	; 16074 <main@@Base+0x12dc>
   15e8c:	umull	r1, r3, r3, r2
   15e90:	lsr	r3, r3, #5
   15e94:	mov	r1, #100	; 0x64
   15e98:	mul	r3, r1, r3
   15e9c:	sub	r3, r2, r3
   15ea0:	lsl	r3, r3, #1
   15ea4:	ldr	r2, [pc, #480]	; 1608c <main@@Base+0x12f4>
   15ea8:	add	r2, pc, r2
   15eac:	add	r3, r3, r2
   15eb0:	str	r3, [fp, #-12]
   15eb4:	ldr	r3, [fp, #-16]
   15eb8:	ldr	r2, [pc, #436]	; 16074 <main@@Base+0x12dc>
   15ebc:	umull	r2, r3, r2, r3
   15ec0:	lsr	r3, r3, #5
   15ec4:	str	r3, [fp, #-16]
   15ec8:	ldr	r3, [fp, #-12]
   15ecc:	ldrb	r2, [r3]
   15ed0:	ldr	r3, [fp, #-20]	; 0xffffffec
   15ed4:	strb	r2, [r3]
   15ed8:	ldr	r3, [fp, #-20]	; 0xffffffec
   15edc:	add	r3, r3, #1
   15ee0:	ldr	r2, [fp, #-12]
   15ee4:	ldrb	r2, [r2, #1]
   15ee8:	strb	r2, [r3]
   15eec:	ldr	r3, [fp, #-20]	; 0xffffffec
   15ef0:	sub	r3, r3, #2
   15ef4:	str	r3, [fp, #-20]	; 0xffffffec
   15ef8:	ldr	r2, [fp, #-16]
   15efc:	ldr	r3, [pc, #368]	; 16074 <main@@Base+0x12dc>
   15f00:	umull	r1, r3, r3, r2
   15f04:	lsr	r3, r3, #5
   15f08:	mov	r1, #100	; 0x64
   15f0c:	mul	r3, r1, r3
   15f10:	sub	r3, r2, r3
   15f14:	lsl	r3, r3, #1
   15f18:	ldr	r2, [pc, #368]	; 16090 <main@@Base+0x12f8>
   15f1c:	add	r2, pc, r2
   15f20:	add	r3, r3, r2
   15f24:	str	r3, [fp, #-12]
   15f28:	ldr	r3, [fp, #-16]
   15f2c:	ldr	r2, [pc, #320]	; 16074 <main@@Base+0x12dc>
   15f30:	umull	r2, r3, r2, r3
   15f34:	lsr	r3, r3, #5
   15f38:	str	r3, [fp, #-16]
   15f3c:	ldr	r3, [fp, #-12]
   15f40:	ldrb	r2, [r3]
   15f44:	ldr	r3, [fp, #-20]	; 0xffffffec
   15f48:	strb	r2, [r3]
   15f4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15f50:	add	r3, r3, #1
   15f54:	ldr	r2, [fp, #-12]
   15f58:	ldrb	r2, [r2, #1]
   15f5c:	strb	r2, [r3]
   15f60:	ldr	r3, [fp, #-20]	; 0xffffffec
   15f64:	sub	r3, r3, #2
   15f68:	str	r3, [fp, #-20]	; 0xffffffec
   15f6c:	ldr	r2, [fp, #-16]
   15f70:	ldr	r3, [pc, #252]	; 16074 <main@@Base+0x12dc>
   15f74:	umull	r1, r3, r3, r2
   15f78:	lsr	r3, r3, #5
   15f7c:	mov	r1, #100	; 0x64
   15f80:	mul	r3, r1, r3
   15f84:	sub	r3, r2, r3
   15f88:	lsl	r3, r3, #1
   15f8c:	ldr	r2, [pc, #256]	; 16094 <main@@Base+0x12fc>
   15f90:	add	r2, pc, r2
   15f94:	add	r3, r3, r2
   15f98:	str	r3, [fp, #-12]
   15f9c:	ldr	r3, [fp, #-16]
   15fa0:	ldr	r2, [pc, #204]	; 16074 <main@@Base+0x12dc>
   15fa4:	umull	r2, r3, r2, r3
   15fa8:	lsr	r3, r3, #5
   15fac:	str	r3, [fp, #-16]
   15fb0:	ldr	r3, [fp, #-12]
   15fb4:	ldrb	r2, [r3]
   15fb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   15fbc:	strb	r2, [r3]
   15fc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   15fc4:	add	r3, r3, #1
   15fc8:	ldr	r2, [fp, #-12]
   15fcc:	ldrb	r2, [r2, #1]
   15fd0:	strb	r2, [r3]
   15fd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   15fd8:	sub	r3, r3, #2
   15fdc:	str	r3, [fp, #-20]	; 0xffffffec
   15fe0:	ldr	r2, [fp, #-16]
   15fe4:	ldr	r3, [pc, #136]	; 16074 <main@@Base+0x12dc>
   15fe8:	umull	r1, r3, r3, r2
   15fec:	lsr	r3, r3, #5
   15ff0:	mov	r1, #100	; 0x64
   15ff4:	mul	r3, r1, r3
   15ff8:	sub	r3, r2, r3
   15ffc:	lsl	r3, r3, #1
   16000:	ldr	r2, [pc, #144]	; 16098 <main@@Base+0x1300>
   16004:	add	r2, pc, r2
   16008:	add	r3, r3, r2
   1600c:	str	r3, [fp, #-12]
   16010:	ldr	r3, [fp, #-16]
   16014:	ldr	r2, [pc, #88]	; 16074 <main@@Base+0x12dc>
   16018:	umull	r2, r3, r2, r3
   1601c:	lsr	r3, r3, #5
   16020:	str	r3, [fp, #-16]
   16024:	ldr	r3, [fp, #-12]
   16028:	ldrb	r2, [r3]
   1602c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16030:	strb	r2, [r3]
   16034:	ldr	r3, [fp, #-20]	; 0xffffffec
   16038:	add	r3, r3, #1
   1603c:	ldr	r2, [fp, #-12]
   16040:	ldrb	r2, [r2, #1]
   16044:	strb	r2, [r3]
   16048:	ldr	r3, [fp, #-8]
   1604c:	mov	r0, r3
   16050:	add	sp, fp, #0
   16054:	pop	{fp}		; (ldr fp, [sp], #4)
   16058:	bx	lr
   1605c:	andeq	r2, r0, pc, lsl #14
   16060:	addseq	r9, r8, pc, ror r6
   16064:	blcc	fe6c8868 <__bss_end__@@Base+0xfe6937c8>
   16068:	ldrbeq	lr, [r5, #255]!	; 0xff
   1606c:	andeq	r4, pc, pc, lsr r2	; <UNPREDICTABLE>
   16070:	muleq	r1, pc, r6	; <UNPREDICTABLE>
   16074:	mvnpl	r8, pc, lsl r5
   16078:	andeq	sp, r0, r0, lsr lr
   1607c:			; <UNDEFINED> instruction: 0x0000ddbc
   16080:	andeq	sp, r0, r8, asr #26
   16084:	ldrdeq	sp, [r0], -r4
   16088:	andeq	sp, r0, r8, lsl #24
   1608c:	muleq	r0, r4, fp
   16090:	andeq	sp, r0, r0, lsr #22
   16094:	andeq	sp, r0, ip, lsr #21
   16098:	andeq	sp, r0, r8, lsr sl
   1609c:	push	{fp, lr}
   160a0:	add	fp, sp, #4
   160a4:	sub	sp, sp, #40	; 0x28
   160a8:	strd	r0, [fp, #-36]	; 0xffffffdc
   160ac:	str	r2, [fp, #-40]	; 0xffffffd8
   160b0:	mov	r3, #0
   160b4:	str	r3, [fp, #-8]
   160b8:	add	r3, pc, #920	; 0x398
   160bc:	ldrd	r2, [r3]
   160c0:	strd	r2, [fp, #-20]	; 0xffffffec
   160c4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   160c8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   160cc:	cmp	r1, r3
   160d0:	cmpeq	r0, r2
   160d4:	bcs	160f0 <main@@Base+0x1358>
   160d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   160dc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   160e0:	mov	r0, r3
   160e4:	bl	15a64 <main@@Base+0xccc>
   160e8:	mov	r3, r0
   160ec:	b	16c18 <main@@Base+0x1e80>
   160f0:	ldr	r3, [fp, #-16]
   160f4:	ldr	r2, [pc, #868]	; 16460 <main@@Base+0x16c8>
   160f8:	mul	r2, r2, r3
   160fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   16100:	mov	r1, #0
   16104:	mul	r3, r1, r3
   16108:	add	r1, r2, r3
   1610c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16110:	ldr	r2, [pc, #840]	; 16460 <main@@Base+0x16c8>
   16114:	umull	r2, r3, r3, r2
   16118:	add	r1, r1, r3
   1611c:	mov	r3, r1
   16120:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   16124:	cmp	r3, r1
   16128:	cmpeq	r2, r0
   1612c:	bhi	16304 <main@@Base+0x156c>
   16130:	ldr	r3, [fp, #-16]
   16134:	ldr	r2, [pc, #808]	; 16464 <main@@Base+0x16cc>
   16138:	mul	r2, r2, r3
   1613c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16140:	mov	r1, #0
   16144:	mul	r3, r1, r3
   16148:	add	r1, r2, r3
   1614c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16150:	ldr	r2, [pc, #780]	; 16464 <main@@Base+0x16cc>
   16154:	umull	r2, r3, r3, r2
   16158:	add	r1, r1, r3
   1615c:	mov	r3, r1
   16160:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   16164:	cmp	r3, r1
   16168:	cmpeq	r2, r0
   1616c:	bhi	16260 <main@@Base+0x14c8>
   16170:	ldr	r3, [fp, #-16]
   16174:	ldr	r2, [pc, #748]	; 16468 <main@@Base+0x16d0>
   16178:	mul	r2, r2, r3
   1617c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16180:	mov	r1, #0
   16184:	mul	r3, r1, r3
   16188:	add	r1, r2, r3
   1618c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16190:	ldr	r2, [pc, #720]	; 16468 <main@@Base+0x16d0>
   16194:	umull	r2, r3, r3, r2
   16198:	add	r1, r1, r3
   1619c:	mov	r3, r1
   161a0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   161a4:	cmp	r3, r1
   161a8:	cmpeq	r2, r0
   161ac:	bhi	16208 <main@@Base+0x1470>
   161b0:	ldr	r3, [fp, #-16]
   161b4:	ldr	r2, [pc, #688]	; 1646c <main@@Base+0x16d4>
   161b8:	mul	r2, r2, r3
   161bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   161c0:	mov	r1, #2
   161c4:	mul	r3, r1, r3
   161c8:	add	r1, r2, r3
   161cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   161d0:	ldr	r2, [pc, #660]	; 1646c <main@@Base+0x16d4>
   161d4:	umull	r2, r3, r3, r2
   161d8:	add	r1, r1, r3
   161dc:	mov	r3, r1
   161e0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   161e4:	cmp	r3, r1
   161e8:	cmpeq	r2, r0
   161ec:	bhi	161fc <main@@Base+0x1464>
   161f0:	mov	r3, #20
   161f4:	str	r3, [fp, #-8]
   161f8:	b	163f0 <main@@Base+0x1658>
   161fc:	mov	r3, #19
   16200:	str	r3, [fp, #-8]
   16204:	b	163f0 <main@@Base+0x1658>
   16208:	ldr	r3, [fp, #-16]
   1620c:	ldr	r2, [pc, #604]	; 16470 <main@@Base+0x16d8>
   16210:	mul	r2, r2, r3
   16214:	ldr	r3, [fp, #-20]	; 0xffffffec
   16218:	mov	r1, #0
   1621c:	mul	r3, r1, r3
   16220:	add	r1, r2, r3
   16224:	ldr	r3, [fp, #-20]	; 0xffffffec
   16228:	ldr	r2, [pc, #576]	; 16470 <main@@Base+0x16d8>
   1622c:	umull	r2, r3, r3, r2
   16230:	add	r1, r1, r3
   16234:	mov	r3, r1
   16238:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1623c:	cmp	r3, r1
   16240:	cmpeq	r2, r0
   16244:	bhi	16254 <main@@Base+0x14bc>
   16248:	mov	r3, #18
   1624c:	str	r3, [fp, #-8]
   16250:	b	163f0 <main@@Base+0x1658>
   16254:	mov	r3, #17
   16258:	str	r3, [fp, #-8]
   1625c:	b	163f0 <main@@Base+0x1658>
   16260:	ldr	r3, [fp, #-16]
   16264:	ldr	r2, [pc, #520]	; 16474 <main@@Base+0x16dc>
   16268:	mul	r2, r2, r3
   1626c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16270:	mov	r1, #0
   16274:	mul	r3, r1, r3
   16278:	add	r1, r2, r3
   1627c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16280:	ldr	r2, [pc, #492]	; 16474 <main@@Base+0x16dc>
   16284:	umull	r2, r3, r3, r2
   16288:	add	r1, r1, r3
   1628c:	mov	r3, r1
   16290:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   16294:	cmp	r3, r1
   16298:	cmpeq	r2, r0
   1629c:	bhi	162ac <main@@Base+0x1514>
   162a0:	mov	r3, #16
   162a4:	str	r3, [fp, #-8]
   162a8:	b	163f0 <main@@Base+0x1658>
   162ac:	ldr	r3, [fp, #-16]
   162b0:	ldr	r2, [pc, #448]	; 16478 <main@@Base+0x16e0>
   162b4:	mul	r2, r2, r3
   162b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   162bc:	mov	r1, #0
   162c0:	mul	r3, r1, r3
   162c4:	add	r1, r2, r3
   162c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   162cc:	ldr	r2, [pc, #420]	; 16478 <main@@Base+0x16e0>
   162d0:	umull	r2, r3, r3, r2
   162d4:	add	r1, r1, r3
   162d8:	mov	r3, r1
   162dc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   162e0:	cmp	r3, r1
   162e4:	cmpeq	r2, r0
   162e8:	bhi	162f8 <main@@Base+0x1560>
   162ec:	mov	r3, #15
   162f0:	str	r3, [fp, #-8]
   162f4:	b	163f0 <main@@Base+0x1658>
   162f8:	mov	r3, #14
   162fc:	str	r3, [fp, #-8]
   16300:	b	163f0 <main@@Base+0x1658>
   16304:	ldr	r3, [fp, #-16]
   16308:	mov	r2, #100	; 0x64
   1630c:	mul	r2, r2, r3
   16310:	ldr	r3, [fp, #-20]	; 0xffffffec
   16314:	mov	r1, #0
   16318:	mul	r3, r1, r3
   1631c:	add	r1, r2, r3
   16320:	ldr	r3, [fp, #-20]	; 0xffffffec
   16324:	mov	r2, #100	; 0x64
   16328:	umull	r2, r3, r3, r2
   1632c:	add	r1, r1, r3
   16330:	mov	r3, r1
   16334:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   16338:	cmp	r3, r1
   1633c:	cmpeq	r2, r0
   16340:	bhi	1639c <main@@Base+0x1604>
   16344:	ldr	r3, [fp, #-16]
   16348:	mov	r2, #1000	; 0x3e8
   1634c:	mul	r2, r2, r3
   16350:	ldr	r3, [fp, #-20]	; 0xffffffec
   16354:	mov	r1, #0
   16358:	mul	r3, r1, r3
   1635c:	add	r1, r2, r3
   16360:	ldr	r3, [fp, #-20]	; 0xffffffec
   16364:	mov	r2, #1000	; 0x3e8
   16368:	umull	r2, r3, r3, r2
   1636c:	add	r1, r1, r3
   16370:	mov	r3, r1
   16374:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   16378:	cmp	r3, r1
   1637c:	cmpeq	r2, r0
   16380:	bhi	16390 <main@@Base+0x15f8>
   16384:	mov	r3, #13
   16388:	str	r3, [fp, #-8]
   1638c:	b	163f0 <main@@Base+0x1658>
   16390:	mov	r3, #12
   16394:	str	r3, [fp, #-8]
   16398:	b	163f0 <main@@Base+0x1658>
   1639c:	ldr	r3, [fp, #-16]
   163a0:	mov	r2, #10
   163a4:	mul	r2, r2, r3
   163a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   163ac:	mov	r1, #0
   163b0:	mul	r3, r1, r3
   163b4:	add	r1, r2, r3
   163b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   163bc:	mov	r2, #10
   163c0:	umull	r2, r3, r3, r2
   163c4:	add	r1, r1, r3
   163c8:	mov	r3, r1
   163cc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   163d0:	cmp	r3, r1
   163d4:	cmpeq	r2, r0
   163d8:	bhi	163e8 <main@@Base+0x1650>
   163dc:	mov	r3, #11
   163e0:	str	r3, [fp, #-8]
   163e4:	b	163f0 <main@@Base+0x1658>
   163e8:	mov	r3, #10
   163ec:	str	r3, [fp, #-8]
   163f0:	ldr	r3, [fp, #-8]
   163f4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   163f8:	add	r3, r2, r3
   163fc:	str	r3, [fp, #-40]	; 0xffffffd8
   16400:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16404:	mov	r2, #0
   16408:	strb	r2, [r3]
   1640c:	ldr	r3, [fp, #-8]
   16410:	and	r3, r3, #1
   16414:	cmp	r3, #0
   16418:	beq	1674c <main@@Base+0x19b4>
   1641c:	ldr	r3, [fp, #-8]
   16420:	sub	r3, r3, #11
   16424:	cmp	r3, #8
   16428:	addls	pc, pc, r3, lsl #2
   1642c:	b	16a44 <main@@Base+0x1cac>
   16430:	b	16688 <main@@Base+0x18f0>
   16434:	b	16a44 <main@@Base+0x1cac>
   16438:	b	16614 <main@@Base+0x187c>
   1643c:	b	16a44 <main@@Base+0x1cac>
   16440:	b	165a0 <main@@Base+0x1808>
   16444:	b	16a44 <main@@Base+0x1cac>
   16448:	b	1652c <main@@Base+0x1794>
   1644c:	b	16a44 <main@@Base+0x1cac>
   16450:	b	164b8 <main@@Base+0x1720>
   16454:	nop			; (mov r0, r0)
   16458:	blcc	fe6c8c60 <__bss_end__@@Base+0xfe693bc0>
   1645c:	andeq	r0, r0, r0
   16460:	andeq	r2, r0, r0, lsl r7
   16464:	addseq	r9, r8, r0, lsl #13
   16468:	blcc	fe6c8c70 <__bss_end__@@Base+0xfe693bd0>
   1646c:	strpl	lr, [fp], #-1024	; 0xfffffc00
   16470:	ldrbeq	lr, [r5, #256]!	; 0x100
   16474:	andeq	r4, pc, r0, asr #4
   16478:	andeq	r8, r1, r0, lsr #13
   1647c:	andeq	sp, r0, ip, asr r5
   16480:	andeq	sp, r0, r8, ror #9
   16484:	andeq	sp, r0, r4, ror r4
   16488:	andeq	sp, r0, r0, lsl #8
   1648c:	andeq	sp, r0, ip, lsl #7
   16490:	andeq	sp, r0, r8, lsl #5
   16494:	andeq	sp, r0, r4, lsl r2
   16498:	andeq	sp, r0, r0, lsr #3
   1649c:	andeq	sp, r0, ip, lsr #2
   164a0:	strheq	sp, [r0], -r8
   164a4:	andeq	sp, r0, r4, asr #32
   164a8:	ldrdeq	ip, [r0], -r0
   164ac:	andeq	ip, r0, ip, asr pc
   164b0:	andeq	ip, r0, r8, ror #29
   164b4:	andeq	ip, r0, r4, ror lr
   164b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   164bc:	sub	r3, r3, #2
   164c0:	str	r3, [fp, #-40]	; 0xffffffd8
   164c4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   164c8:	mov	r2, #100	; 0x64
   164cc:	mov	r3, #0
   164d0:	bl	22ebc <flatcc_json_printer_clear@@Base+0x268>
   164d4:	mov	r3, r2
   164d8:	lsl	r3, r3, #1
   164dc:	ldr	r2, [pc, #-104]	; 1647c <main@@Base+0x16e4>
   164e0:	add	r2, pc, r2
   164e4:	add	r3, r3, r2
   164e8:	str	r3, [fp, #-24]	; 0xffffffe8
   164ec:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   164f0:	mov	r2, #100	; 0x64
   164f4:	mov	r3, #0
   164f8:	bl	22ebc <flatcc_json_printer_clear@@Base+0x268>
   164fc:	mov	r2, r0
   16500:	mov	r3, r1
   16504:	strd	r2, [fp, #-36]	; 0xffffffdc
   16508:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1650c:	ldrb	r2, [r3]
   16510:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16514:	strb	r2, [r3]
   16518:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1651c:	add	r3, r3, #1
   16520:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16524:	ldrb	r2, [r2, #1]
   16528:	strb	r2, [r3]
   1652c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16530:	sub	r3, r3, #2
   16534:	str	r3, [fp, #-40]	; 0xffffffd8
   16538:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1653c:	mov	r2, #100	; 0x64
   16540:	mov	r3, #0
   16544:	bl	22ebc <flatcc_json_printer_clear@@Base+0x268>
   16548:	mov	r3, r2
   1654c:	lsl	r3, r3, #1
   16550:	ldr	r2, [pc, #-216]	; 16480 <main@@Base+0x16e8>
   16554:	add	r2, pc, r2
   16558:	add	r3, r3, r2
   1655c:	str	r3, [fp, #-24]	; 0xffffffe8
   16560:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   16564:	mov	r2, #100	; 0x64
   16568:	mov	r3, #0
   1656c:	bl	22ebc <flatcc_json_printer_clear@@Base+0x268>
   16570:	mov	r2, r0
   16574:	mov	r3, r1
   16578:	strd	r2, [fp, #-36]	; 0xffffffdc
   1657c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16580:	ldrb	r2, [r3]
   16584:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16588:	strb	r2, [r3]
   1658c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16590:	add	r3, r3, #1
   16594:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16598:	ldrb	r2, [r2, #1]
   1659c:	strb	r2, [r3]
   165a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   165a4:	sub	r3, r3, #2
   165a8:	str	r3, [fp, #-40]	; 0xffffffd8
   165ac:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   165b0:	mov	r2, #100	; 0x64
   165b4:	mov	r3, #0
   165b8:	bl	22ebc <flatcc_json_printer_clear@@Base+0x268>
   165bc:	mov	r3, r2
   165c0:	lsl	r3, r3, #1
   165c4:	ldr	r2, [pc, #-328]	; 16484 <main@@Base+0x16ec>
   165c8:	add	r2, pc, r2
   165cc:	add	r3, r3, r2
   165d0:	str	r3, [fp, #-24]	; 0xffffffe8
   165d4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   165d8:	mov	r2, #100	; 0x64
   165dc:	mov	r3, #0
   165e0:	bl	22ebc <flatcc_json_printer_clear@@Base+0x268>
   165e4:	mov	r2, r0
   165e8:	mov	r3, r1
   165ec:	strd	r2, [fp, #-36]	; 0xffffffdc
   165f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   165f4:	ldrb	r2, [r3]
   165f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   165fc:	strb	r2, [r3]
   16600:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16604:	add	r3, r3, #1
   16608:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1660c:	ldrb	r2, [r2, #1]
   16610:	strb	r2, [r3]
   16614:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16618:	sub	r3, r3, #2
   1661c:	str	r3, [fp, #-40]	; 0xffffffd8
   16620:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   16624:	mov	r2, #100	; 0x64
   16628:	mov	r3, #0
   1662c:	bl	22ebc <flatcc_json_printer_clear@@Base+0x268>
   16630:	mov	r3, r2
   16634:	lsl	r3, r3, #1
   16638:	ldr	r2, [pc, #-440]	; 16488 <main@@Base+0x16f0>
   1663c:	add	r2, pc, r2
   16640:	add	r3, r3, r2
   16644:	str	r3, [fp, #-24]	; 0xffffffe8
   16648:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1664c:	mov	r2, #100	; 0x64
   16650:	mov	r3, #0
   16654:	bl	22ebc <flatcc_json_printer_clear@@Base+0x268>
   16658:	mov	r2, r0
   1665c:	mov	r3, r1
   16660:	strd	r2, [fp, #-36]	; 0xffffffdc
   16664:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16668:	ldrb	r2, [r3]
   1666c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16670:	strb	r2, [r3]
   16674:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16678:	add	r3, r3, #1
   1667c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16680:	ldrb	r2, [r2, #1]
   16684:	strb	r2, [r3]
   16688:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1668c:	sub	r3, r3, #2
   16690:	str	r3, [fp, #-40]	; 0xffffffd8
   16694:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   16698:	mov	r2, #100	; 0x64
   1669c:	mov	r3, #0
   166a0:	bl	22ebc <flatcc_json_printer_clear@@Base+0x268>
   166a4:	mov	r3, r2
   166a8:	lsl	r3, r3, #1
   166ac:	ldr	r2, [pc, #-552]	; 1648c <main@@Base+0x16f4>
   166b0:	add	r2, pc, r2
   166b4:	add	r3, r3, r2
   166b8:	str	r3, [fp, #-24]	; 0xffffffe8
   166bc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   166c0:	mov	r2, #100	; 0x64
   166c4:	mov	r3, #0
   166c8:	bl	22ebc <flatcc_json_printer_clear@@Base+0x268>
   166cc:	mov	r2, r0
   166d0:	mov	r3, r1
   166d4:	strd	r2, [fp, #-36]	; 0xffffffdc
   166d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   166dc:	ldrb	r2, [r3]
   166e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   166e4:	strb	r2, [r3]
   166e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   166ec:	add	r3, r3, #1
   166f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   166f4:	ldrb	r2, [r2, #1]
   166f8:	strb	r2, [r3]
   166fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16700:	sub	r3, r3, #1
   16704:	str	r3, [fp, #-40]	; 0xffffffd8
   16708:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1670c:	mov	r2, #10
   16710:	mov	r3, #0
   16714:	bl	22ebc <flatcc_json_printer_clear@@Base+0x268>
   16718:	uxtb	r3, r2
   1671c:	add	r3, r3, #48	; 0x30
   16720:	uxtb	r2, r3
   16724:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16728:	strb	r2, [r3]
   1672c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   16730:	mov	r2, #10
   16734:	mov	r3, #0
   16738:	bl	22ebc <flatcc_json_printer_clear@@Base+0x268>
   1673c:	mov	r2, r0
   16740:	mov	r3, r1
   16744:	strd	r2, [fp, #-36]	; 0xffffffdc
   16748:	b	16a44 <main@@Base+0x1cac>
   1674c:	ldr	r3, [fp, #-8]
   16750:	sub	r3, r3, #10
   16754:	cmp	r3, #10
   16758:	addls	pc, pc, r3, lsl #2
   1675c:	b	16a44 <main@@Base+0x1cac>
   16760:	b	169d0 <main@@Base+0x1c38>
   16764:	b	16a44 <main@@Base+0x1cac>
   16768:	b	1695c <main@@Base+0x1bc4>
   1676c:	b	16a44 <main@@Base+0x1cac>
   16770:	b	168e8 <main@@Base+0x1b50>
   16774:	b	16a44 <main@@Base+0x1cac>
   16778:	b	16874 <main@@Base+0x1adc>
   1677c:	b	16a44 <main@@Base+0x1cac>
   16780:	b	16800 <main@@Base+0x1a68>
   16784:	b	16a44 <main@@Base+0x1cac>
   16788:	b	1678c <main@@Base+0x19f4>
   1678c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16790:	sub	r3, r3, #2
   16794:	str	r3, [fp, #-40]	; 0xffffffd8
   16798:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1679c:	mov	r2, #100	; 0x64
   167a0:	mov	r3, #0
   167a4:	bl	22ebc <flatcc_json_printer_clear@@Base+0x268>
   167a8:	mov	r3, r2
   167ac:	lsl	r3, r3, #1
   167b0:	ldr	r2, [pc, #-808]	; 16490 <main@@Base+0x16f8>
   167b4:	add	r2, pc, r2
   167b8:	add	r3, r3, r2
   167bc:	str	r3, [fp, #-24]	; 0xffffffe8
   167c0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   167c4:	mov	r2, #100	; 0x64
   167c8:	mov	r3, #0
   167cc:	bl	22ebc <flatcc_json_printer_clear@@Base+0x268>
   167d0:	mov	r2, r0
   167d4:	mov	r3, r1
   167d8:	strd	r2, [fp, #-36]	; 0xffffffdc
   167dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   167e0:	ldrb	r2, [r3]
   167e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   167e8:	strb	r2, [r3]
   167ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   167f0:	add	r3, r3, #1
   167f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   167f8:	ldrb	r2, [r2, #1]
   167fc:	strb	r2, [r3]
   16800:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16804:	sub	r3, r3, #2
   16808:	str	r3, [fp, #-40]	; 0xffffffd8
   1680c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   16810:	mov	r2, #100	; 0x64
   16814:	mov	r3, #0
   16818:	bl	22ebc <flatcc_json_printer_clear@@Base+0x268>
   1681c:	mov	r3, r2
   16820:	lsl	r3, r3, #1
   16824:	ldr	r2, [pc, #-920]	; 16494 <main@@Base+0x16fc>
   16828:	add	r2, pc, r2
   1682c:	add	r3, r3, r2
   16830:	str	r3, [fp, #-24]	; 0xffffffe8
   16834:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   16838:	mov	r2, #100	; 0x64
   1683c:	mov	r3, #0
   16840:	bl	22ebc <flatcc_json_printer_clear@@Base+0x268>
   16844:	mov	r2, r0
   16848:	mov	r3, r1
   1684c:	strd	r2, [fp, #-36]	; 0xffffffdc
   16850:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16854:	ldrb	r2, [r3]
   16858:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1685c:	strb	r2, [r3]
   16860:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16864:	add	r3, r3, #1
   16868:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1686c:	ldrb	r2, [r2, #1]
   16870:	strb	r2, [r3]
   16874:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16878:	sub	r3, r3, #2
   1687c:	str	r3, [fp, #-40]	; 0xffffffd8
   16880:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   16884:	mov	r2, #100	; 0x64
   16888:	mov	r3, #0
   1688c:	bl	22ebc <flatcc_json_printer_clear@@Base+0x268>
   16890:	mov	r3, r2
   16894:	lsl	r3, r3, #1
   16898:	ldr	r2, [pc, #-1032]	; 16498 <main@@Base+0x1700>
   1689c:	add	r2, pc, r2
   168a0:	add	r3, r3, r2
   168a4:	str	r3, [fp, #-24]	; 0xffffffe8
   168a8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   168ac:	mov	r2, #100	; 0x64
   168b0:	mov	r3, #0
   168b4:	bl	22ebc <flatcc_json_printer_clear@@Base+0x268>
   168b8:	mov	r2, r0
   168bc:	mov	r3, r1
   168c0:	strd	r2, [fp, #-36]	; 0xffffffdc
   168c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   168c8:	ldrb	r2, [r3]
   168cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   168d0:	strb	r2, [r3]
   168d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   168d8:	add	r3, r3, #1
   168dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   168e0:	ldrb	r2, [r2, #1]
   168e4:	strb	r2, [r3]
   168e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   168ec:	sub	r3, r3, #2
   168f0:	str	r3, [fp, #-40]	; 0xffffffd8
   168f4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   168f8:	mov	r2, #100	; 0x64
   168fc:	mov	r3, #0
   16900:	bl	22ebc <flatcc_json_printer_clear@@Base+0x268>
   16904:	mov	r3, r2
   16908:	lsl	r3, r3, #1
   1690c:	ldr	r2, [pc, #-1144]	; 1649c <main@@Base+0x1704>
   16910:	add	r2, pc, r2
   16914:	add	r3, r3, r2
   16918:	str	r3, [fp, #-24]	; 0xffffffe8
   1691c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   16920:	mov	r2, #100	; 0x64
   16924:	mov	r3, #0
   16928:	bl	22ebc <flatcc_json_printer_clear@@Base+0x268>
   1692c:	mov	r2, r0
   16930:	mov	r3, r1
   16934:	strd	r2, [fp, #-36]	; 0xffffffdc
   16938:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1693c:	ldrb	r2, [r3]
   16940:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16944:	strb	r2, [r3]
   16948:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1694c:	add	r3, r3, #1
   16950:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16954:	ldrb	r2, [r2, #1]
   16958:	strb	r2, [r3]
   1695c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16960:	sub	r3, r3, #2
   16964:	str	r3, [fp, #-40]	; 0xffffffd8
   16968:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   1696c:	mov	r2, #100	; 0x64
   16970:	mov	r3, #0
   16974:	bl	22ebc <flatcc_json_printer_clear@@Base+0x268>
   16978:	mov	r3, r2
   1697c:	lsl	r3, r3, #1
   16980:	ldr	r2, [pc, #-1256]	; 164a0 <main@@Base+0x1708>
   16984:	add	r2, pc, r2
   16988:	add	r3, r3, r2
   1698c:	str	r3, [fp, #-24]	; 0xffffffe8
   16990:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   16994:	mov	r2, #100	; 0x64
   16998:	mov	r3, #0
   1699c:	bl	22ebc <flatcc_json_printer_clear@@Base+0x268>
   169a0:	mov	r2, r0
   169a4:	mov	r3, r1
   169a8:	strd	r2, [fp, #-36]	; 0xffffffdc
   169ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   169b0:	ldrb	r2, [r3]
   169b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   169b8:	strb	r2, [r3]
   169bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   169c0:	add	r3, r3, #1
   169c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   169c8:	ldrb	r2, [r2, #1]
   169cc:	strb	r2, [r3]
   169d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   169d4:	sub	r3, r3, #2
   169d8:	str	r3, [fp, #-40]	; 0xffffffd8
   169dc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   169e0:	mov	r2, #100	; 0x64
   169e4:	mov	r3, #0
   169e8:	bl	22ebc <flatcc_json_printer_clear@@Base+0x268>
   169ec:	mov	r3, r2
   169f0:	lsl	r3, r3, #1
   169f4:	ldr	r2, [pc, #-1368]	; 164a4 <main@@Base+0x170c>
   169f8:	add	r2, pc, r2
   169fc:	add	r3, r3, r2
   16a00:	str	r3, [fp, #-24]	; 0xffffffe8
   16a04:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   16a08:	mov	r2, #100	; 0x64
   16a0c:	mov	r3, #0
   16a10:	bl	22ebc <flatcc_json_printer_clear@@Base+0x268>
   16a14:	mov	r2, r0
   16a18:	mov	r3, r1
   16a1c:	strd	r2, [fp, #-36]	; 0xffffffdc
   16a20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16a24:	ldrb	r2, [r3]
   16a28:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16a2c:	strb	r2, [r3]
   16a30:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16a34:	add	r3, r3, #1
   16a38:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16a3c:	ldrb	r2, [r2, #1]
   16a40:	strb	r2, [r3]
   16a44:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16a48:	sub	r3, r3, #2
   16a4c:	str	r3, [fp, #-40]	; 0xffffffd8
   16a50:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   16a54:	mov	r2, #100	; 0x64
   16a58:	mov	r3, #0
   16a5c:	bl	22ebc <flatcc_json_printer_clear@@Base+0x268>
   16a60:	mov	r3, r2
   16a64:	lsl	r3, r3, #1
   16a68:	ldr	r2, [pc, #-1480]	; 164a8 <main@@Base+0x1710>
   16a6c:	add	r2, pc, r2
   16a70:	add	r3, r3, r2
   16a74:	str	r3, [fp, #-24]	; 0xffffffe8
   16a78:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   16a7c:	mov	r2, #100	; 0x64
   16a80:	mov	r3, #0
   16a84:	bl	22ebc <flatcc_json_printer_clear@@Base+0x268>
   16a88:	mov	r2, r0
   16a8c:	mov	r3, r1
   16a90:	strd	r2, [fp, #-36]	; 0xffffffdc
   16a94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16a98:	ldrb	r2, [r3]
   16a9c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16aa0:	strb	r2, [r3]
   16aa4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16aa8:	add	r3, r3, #1
   16aac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16ab0:	ldrb	r2, [r2, #1]
   16ab4:	strb	r2, [r3]
   16ab8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16abc:	sub	r3, r3, #2
   16ac0:	str	r3, [fp, #-40]	; 0xffffffd8
   16ac4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   16ac8:	mov	r2, #100	; 0x64
   16acc:	mov	r3, #0
   16ad0:	bl	22ebc <flatcc_json_printer_clear@@Base+0x268>
   16ad4:	mov	r3, r2
   16ad8:	lsl	r3, r3, #1
   16adc:	ldr	r2, [pc, #-1592]	; 164ac <main@@Base+0x1714>
   16ae0:	add	r2, pc, r2
   16ae4:	add	r3, r3, r2
   16ae8:	str	r3, [fp, #-24]	; 0xffffffe8
   16aec:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   16af0:	mov	r2, #100	; 0x64
   16af4:	mov	r3, #0
   16af8:	bl	22ebc <flatcc_json_printer_clear@@Base+0x268>
   16afc:	mov	r2, r0
   16b00:	mov	r3, r1
   16b04:	strd	r2, [fp, #-36]	; 0xffffffdc
   16b08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16b0c:	ldrb	r2, [r3]
   16b10:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16b14:	strb	r2, [r3]
   16b18:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16b1c:	add	r3, r3, #1
   16b20:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16b24:	ldrb	r2, [r2, #1]
   16b28:	strb	r2, [r3]
   16b2c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16b30:	sub	r3, r3, #2
   16b34:	str	r3, [fp, #-40]	; 0xffffffd8
   16b38:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   16b3c:	mov	r2, #100	; 0x64
   16b40:	mov	r3, #0
   16b44:	bl	22ebc <flatcc_json_printer_clear@@Base+0x268>
   16b48:	mov	r3, r2
   16b4c:	lsl	r3, r3, #1
   16b50:	ldr	r2, [pc, #-1704]	; 164b0 <main@@Base+0x1718>
   16b54:	add	r2, pc, r2
   16b58:	add	r3, r3, r2
   16b5c:	str	r3, [fp, #-24]	; 0xffffffe8
   16b60:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   16b64:	mov	r2, #100	; 0x64
   16b68:	mov	r3, #0
   16b6c:	bl	22ebc <flatcc_json_printer_clear@@Base+0x268>
   16b70:	mov	r2, r0
   16b74:	mov	r3, r1
   16b78:	strd	r2, [fp, #-36]	; 0xffffffdc
   16b7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16b80:	ldrb	r2, [r3]
   16b84:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16b88:	strb	r2, [r3]
   16b8c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16b90:	add	r3, r3, #1
   16b94:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16b98:	ldrb	r2, [r2, #1]
   16b9c:	strb	r2, [r3]
   16ba0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16ba4:	sub	r3, r3, #2
   16ba8:	str	r3, [fp, #-40]	; 0xffffffd8
   16bac:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   16bb0:	mov	r2, #100	; 0x64
   16bb4:	mov	r3, #0
   16bb8:	bl	22ebc <flatcc_json_printer_clear@@Base+0x268>
   16bbc:	mov	r3, r2
   16bc0:	lsl	r3, r3, #1
   16bc4:	ldr	r2, [pc, #-1816]	; 164b4 <main@@Base+0x171c>
   16bc8:	add	r2, pc, r2
   16bcc:	add	r3, r3, r2
   16bd0:	str	r3, [fp, #-24]	; 0xffffffe8
   16bd4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   16bd8:	mov	r2, #100	; 0x64
   16bdc:	mov	r3, #0
   16be0:	bl	22ebc <flatcc_json_printer_clear@@Base+0x268>
   16be4:	mov	r2, r0
   16be8:	mov	r3, r1
   16bec:	strd	r2, [fp, #-36]	; 0xffffffdc
   16bf0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16bf4:	ldrb	r2, [r3]
   16bf8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16bfc:	strb	r2, [r3]
   16c00:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16c04:	add	r3, r3, #1
   16c08:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16c0c:	ldrb	r2, [r2, #1]
   16c10:	strb	r2, [r3]
   16c14:	ldr	r3, [fp, #-8]
   16c18:	mov	r0, r3
   16c1c:	sub	sp, fp, #4
   16c20:	pop	{fp, pc}
   16c24:	push	{fp, lr}
   16c28:	add	fp, sp, #4
   16c2c:	sub	sp, sp, #16
   16c30:	mov	r3, r0
   16c34:	str	r1, [fp, #-20]	; 0xffffffec
   16c38:	strb	r3, [fp, #-13]
   16c3c:	ldrb	r3, [fp, #-13]
   16c40:	lsr	r3, r3, #7
   16c44:	uxtb	r3, r3
   16c48:	str	r3, [fp, #-8]
   16c4c:	ldr	r3, [fp, #-8]
   16c50:	cmp	r3, #0
   16c54:	beq	16c7c <main@@Base+0x1ee4>
   16c58:	ldr	r3, [fp, #-20]	; 0xffffffec
   16c5c:	add	r2, r3, #1
   16c60:	str	r2, [fp, #-20]	; 0xffffffec
   16c64:	mov	r2, #45	; 0x2d
   16c68:	strb	r2, [r3]
   16c6c:	ldrb	r3, [fp, #-13]
   16c70:	rsb	r3, r3, #0
   16c74:	uxtb	r3, r3
   16c78:	strb	r3, [fp, #-13]
   16c7c:	ldrb	r3, [fp, #-13]
   16c80:	ldr	r1, [fp, #-20]	; 0xffffffec
   16c84:	mov	r0, r3
   16c88:	bl	15578 <main@@Base+0x7e0>
   16c8c:	mov	r2, r0
   16c90:	ldr	r3, [fp, #-8]
   16c94:	add	r3, r2, r3
   16c98:	mov	r0, r3
   16c9c:	sub	sp, fp, #4
   16ca0:	pop	{fp, pc}
   16ca4:	push	{fp, lr}
   16ca8:	add	fp, sp, #4
   16cac:	sub	sp, sp, #16
   16cb0:	mov	r3, r0
   16cb4:	str	r1, [fp, #-20]	; 0xffffffec
   16cb8:	strh	r3, [fp, #-14]
   16cbc:	ldrh	r3, [fp, #-14]
   16cc0:	lsr	r3, r3, #15
   16cc4:	uxtb	r3, r3
   16cc8:	str	r3, [fp, #-8]
   16ccc:	ldr	r3, [fp, #-8]
   16cd0:	cmp	r3, #0
   16cd4:	beq	16cfc <main@@Base+0x1f64>
   16cd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   16cdc:	add	r2, r3, #1
   16ce0:	str	r2, [fp, #-20]	; 0xffffffec
   16ce4:	mov	r2, #45	; 0x2d
   16ce8:	strb	r2, [r3]
   16cec:	ldrh	r3, [fp, #-14]
   16cf0:	rsb	r3, r3, #0
   16cf4:	uxth	r3, r3
   16cf8:	strh	r3, [fp, #-14]
   16cfc:	ldrh	r3, [fp, #-14]
   16d00:	ldr	r1, [fp, #-20]	; 0xffffffec
   16d04:	mov	r0, r3
   16d08:	bl	1573c <main@@Base+0x9a4>
   16d0c:	mov	r2, r0
   16d10:	ldr	r3, [fp, #-8]
   16d14:	add	r3, r2, r3
   16d18:	mov	r0, r3
   16d1c:	sub	sp, fp, #4
   16d20:	pop	{fp, pc}
   16d24:	push	{fp, lr}
   16d28:	add	fp, sp, #4
   16d2c:	sub	sp, sp, #16
   16d30:	str	r0, [fp, #-16]
   16d34:	str	r1, [fp, #-20]	; 0xffffffec
   16d38:	ldr	r3, [fp, #-16]
   16d3c:	lsr	r3, r3, #31
   16d40:	uxtb	r3, r3
   16d44:	str	r3, [fp, #-8]
   16d48:	ldr	r3, [fp, #-8]
   16d4c:	cmp	r3, #0
   16d50:	beq	16d74 <main@@Base+0x1fdc>
   16d54:	ldr	r3, [fp, #-20]	; 0xffffffec
   16d58:	add	r2, r3, #1
   16d5c:	str	r2, [fp, #-20]	; 0xffffffec
   16d60:	mov	r2, #45	; 0x2d
   16d64:	strb	r2, [r3]
   16d68:	ldr	r3, [fp, #-16]
   16d6c:	rsb	r3, r3, #0
   16d70:	str	r3, [fp, #-16]
   16d74:	ldr	r3, [fp, #-16]
   16d78:	ldr	r1, [fp, #-20]	; 0xffffffec
   16d7c:	mov	r0, r3
   16d80:	bl	15a64 <main@@Base+0xccc>
   16d84:	mov	r2, r0
   16d88:	ldr	r3, [fp, #-8]
   16d8c:	add	r3, r2, r3
   16d90:	mov	r0, r3
   16d94:	sub	sp, fp, #4
   16d98:	pop	{fp, pc}
   16d9c:	push	{fp, lr}
   16da0:	add	fp, sp, #4
   16da4:	sub	sp, sp, #24
   16da8:	strd	r0, [fp, #-20]	; 0xffffffec
   16dac:	str	r2, [fp, #-24]	; 0xffffffe8
   16db0:	ldr	r3, [fp, #-16]
   16db4:	lsr	r3, r3, #31
   16db8:	uxtb	r3, r3
   16dbc:	str	r3, [fp, #-8]
   16dc0:	ldr	r3, [fp, #-8]
   16dc4:	cmp	r3, #0
   16dc8:	beq	16df0 <main@@Base+0x2058>
   16dcc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16dd0:	add	r2, r3, #1
   16dd4:	str	r2, [fp, #-24]	; 0xffffffe8
   16dd8:	mov	r2, #45	; 0x2d
   16ddc:	strb	r2, [r3]
   16de0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   16de4:	rsbs	r2, r2, #0
   16de8:	rsc	r3, r3, #0
   16dec:	strd	r2, [fp, #-20]	; 0xffffffec
   16df0:	ldrd	r0, [fp, #-20]	; 0xffffffec
   16df4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16df8:	bl	1609c <main@@Base+0x1304>
   16dfc:	mov	r2, r0
   16e00:	ldr	r3, [fp, #-8]
   16e04:	add	r3, r2, r3
   16e08:	mov	r0, r3
   16e0c:	sub	sp, fp, #4
   16e10:	pop	{fp, pc}
   16e14:	push	{fp}		; (str fp, [sp, #-4]!)
   16e18:	add	fp, sp, #0
   16e1c:	sub	sp, sp, #52	; 0x34
   16e20:	str	r0, [fp, #-48]	; 0xffffffd0
   16e24:	str	r1, [fp, #-52]	; 0xffffffcc
   16e28:	sub	r3, fp, #40	; 0x28
   16e2c:	add	r3, r3, #20
   16e30:	str	r3, [fp, #-8]
   16e34:	ldr	r3, [fp, #-8]
   16e38:	str	r3, [fp, #-12]
   16e3c:	b	16ec4 <main@@Base+0x212c>
   16e40:	ldr	r3, [fp, #-8]
   16e44:	sub	r3, r3, #2
   16e48:	str	r3, [fp, #-8]
   16e4c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16e50:	ldr	r3, [pc, #332]	; 16fa4 <main@@Base+0x220c>
   16e54:	umull	r1, r3, r3, r2
   16e58:	lsr	r3, r3, #5
   16e5c:	mov	r1, #100	; 0x64
   16e60:	mul	r3, r1, r3
   16e64:	sub	r3, r2, r3
   16e68:	lsl	r3, r3, #1
   16e6c:	str	r3, [fp, #-16]
   16e70:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16e74:	ldr	r2, [pc, #296]	; 16fa4 <main@@Base+0x220c>
   16e78:	umull	r2, r3, r2, r3
   16e7c:	lsr	r3, r3, #5
   16e80:	str	r3, [fp, #-48]	; 0xffffffd0
   16e84:	ldr	r3, [fp, #-16]
   16e88:	ldr	r2, [pc, #280]	; 16fa8 <main@@Base+0x2210>
   16e8c:	add	r2, pc, r2
   16e90:	add	r3, r3, r2
   16e94:	ldrb	r2, [r3]
   16e98:	ldr	r3, [fp, #-8]
   16e9c:	strb	r2, [r3]
   16ea0:	ldr	r3, [fp, #-8]
   16ea4:	add	r3, r3, #1
   16ea8:	ldr	r2, [fp, #-16]
   16eac:	add	r2, r2, #1
   16eb0:	ldr	r1, [pc, #244]	; 16fac <main@@Base+0x2214>
   16eb4:	add	r1, pc, r1
   16eb8:	add	r2, r2, r1
   16ebc:	ldrb	r2, [r2]
   16ec0:	strb	r2, [r3]
   16ec4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16ec8:	cmp	r3, #99	; 0x63
   16ecc:	bhi	16e40 <main@@Base+0x20a8>
   16ed0:	ldr	r3, [fp, #-8]
   16ed4:	sub	r3, r3, #2
   16ed8:	str	r3, [fp, #-8]
   16edc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16ee0:	lsl	r3, r3, #1
   16ee4:	str	r3, [fp, #-16]
   16ee8:	ldr	r3, [fp, #-16]
   16eec:	ldr	r2, [pc, #188]	; 16fb0 <main@@Base+0x2218>
   16ef0:	add	r2, pc, r2
   16ef4:	add	r3, r3, r2
   16ef8:	ldrb	r2, [r3]
   16efc:	ldr	r3, [fp, #-8]
   16f00:	strb	r2, [r3]
   16f04:	ldr	r3, [fp, #-8]
   16f08:	add	r3, r3, #1
   16f0c:	ldr	r2, [fp, #-16]
   16f10:	add	r2, r2, #1
   16f14:	ldr	r1, [pc, #152]	; 16fb4 <main@@Base+0x221c>
   16f18:	add	r1, pc, r1
   16f1c:	add	r2, r2, r1
   16f20:	ldrb	r2, [r2]
   16f24:	strb	r2, [r3]
   16f28:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16f2c:	cmp	r3, #9
   16f30:	bhi	16f40 <main@@Base+0x21a8>
   16f34:	ldr	r3, [fp, #-8]
   16f38:	add	r3, r3, #1
   16f3c:	str	r3, [fp, #-8]
   16f40:	ldr	r2, [fp, #-12]
   16f44:	ldr	r3, [fp, #-8]
   16f48:	sub	r3, r2, r3
   16f4c:	str	r3, [fp, #-20]	; 0xffffffec
   16f50:	b	16f74 <main@@Base+0x21dc>
   16f54:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16f58:	add	r2, r3, #1
   16f5c:	str	r2, [fp, #-52]	; 0xffffffcc
   16f60:	ldr	r2, [fp, #-8]
   16f64:	add	r1, r2, #1
   16f68:	str	r1, [fp, #-8]
   16f6c:	ldrb	r2, [r2]
   16f70:	strb	r2, [r3]
   16f74:	ldr	r2, [fp, #-8]
   16f78:	ldr	r3, [fp, #-12]
   16f7c:	cmp	r2, r3
   16f80:	bne	16f54 <main@@Base+0x21bc>
   16f84:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16f88:	mov	r2, #0
   16f8c:	strb	r2, [r3]
   16f90:	ldr	r3, [fp, #-20]	; 0xffffffec
   16f94:	mov	r0, r3
   16f98:	add	sp, fp, #0
   16f9c:	pop	{fp}		; (ldr fp, [sp], #4)
   16fa0:	bx	lr
   16fa4:	mvnpl	r8, pc, lsl r5
   16fa8:			; <UNDEFINED> instruction: 0x0000cbb0
   16fac:	andeq	ip, r0, r8, lsl #23
   16fb0:	andeq	ip, r0, ip, asr #22
   16fb4:	andeq	ip, r0, r4, lsr #22
   16fb8:	push	{fp, lr}
   16fbc:	add	fp, sp, #4
   16fc0:	sub	sp, sp, #16
   16fc4:	str	r0, [fp, #-16]
   16fc8:	str	r1, [fp, #-20]	; 0xffffffec
   16fcc:	ldr	r3, [fp, #-16]
   16fd0:	lsr	r3, r3, #31
   16fd4:	uxtb	r3, r3
   16fd8:	str	r3, [fp, #-8]
   16fdc:	ldr	r3, [fp, #-8]
   16fe0:	cmp	r3, #0
   16fe4:	beq	17008 <main@@Base+0x2270>
   16fe8:	ldr	r3, [fp, #-20]	; 0xffffffec
   16fec:	add	r2, r3, #1
   16ff0:	str	r2, [fp, #-20]	; 0xffffffec
   16ff4:	mov	r2, #45	; 0x2d
   16ff8:	strb	r2, [r3]
   16ffc:	ldr	r3, [fp, #-16]
   17000:	rsb	r3, r3, #0
   17004:	str	r3, [fp, #-16]
   17008:	ldr	r3, [fp, #-16]
   1700c:	ldr	r1, [fp, #-20]	; 0xffffffec
   17010:	mov	r0, r3
   17014:	bl	16e14 <main@@Base+0x207c>
   17018:	mov	r2, r0
   1701c:	ldr	r3, [fp, #-8]
   17020:	add	r3, r2, r3
   17024:	mov	r0, r3
   17028:	sub	sp, fp, #4
   1702c:	pop	{fp, pc}
   17030:	push	{fp}		; (str fp, [sp, #-4]!)
   17034:	add	fp, sp, #0
   17038:	sub	sp, sp, #52	; 0x34
   1703c:	str	r0, [fp, #-48]	; 0xffffffd0
   17040:	str	r1, [fp, #-52]	; 0xffffffcc
   17044:	sub	r3, fp, #40	; 0x28
   17048:	add	r3, r3, #20
   1704c:	str	r3, [fp, #-8]
   17050:	ldr	r3, [fp, #-8]
   17054:	str	r3, [fp, #-12]
   17058:	b	170e0 <main@@Base+0x2348>
   1705c:	ldr	r3, [fp, #-8]
   17060:	sub	r3, r3, #2
   17064:	str	r3, [fp, #-8]
   17068:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1706c:	ldr	r3, [pc, #332]	; 171c0 <main@@Base+0x2428>
   17070:	umull	r1, r3, r3, r2
   17074:	lsr	r3, r3, #5
   17078:	mov	r1, #100	; 0x64
   1707c:	mul	r3, r1, r3
   17080:	sub	r3, r2, r3
   17084:	lsl	r3, r3, #1
   17088:	str	r3, [fp, #-16]
   1708c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17090:	ldr	r2, [pc, #296]	; 171c0 <main@@Base+0x2428>
   17094:	umull	r2, r3, r2, r3
   17098:	lsr	r3, r3, #5
   1709c:	str	r3, [fp, #-48]	; 0xffffffd0
   170a0:	ldr	r3, [fp, #-16]
   170a4:	ldr	r2, [pc, #280]	; 171c4 <main@@Base+0x242c>
   170a8:	add	r2, pc, r2
   170ac:	add	r3, r3, r2
   170b0:	ldrb	r2, [r3]
   170b4:	ldr	r3, [fp, #-8]
   170b8:	strb	r2, [r3]
   170bc:	ldr	r3, [fp, #-8]
   170c0:	add	r3, r3, #1
   170c4:	ldr	r2, [fp, #-16]
   170c8:	add	r2, r2, #1
   170cc:	ldr	r1, [pc, #244]	; 171c8 <main@@Base+0x2430>
   170d0:	add	r1, pc, r1
   170d4:	add	r2, r2, r1
   170d8:	ldrb	r2, [r2]
   170dc:	strb	r2, [r3]
   170e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   170e4:	cmp	r3, #99	; 0x63
   170e8:	bhi	1705c <main@@Base+0x22c4>
   170ec:	ldr	r3, [fp, #-8]
   170f0:	sub	r3, r3, #2
   170f4:	str	r3, [fp, #-8]
   170f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   170fc:	lsl	r3, r3, #1
   17100:	str	r3, [fp, #-16]
   17104:	ldr	r3, [fp, #-16]
   17108:	ldr	r2, [pc, #188]	; 171cc <main@@Base+0x2434>
   1710c:	add	r2, pc, r2
   17110:	add	r3, r3, r2
   17114:	ldrb	r2, [r3]
   17118:	ldr	r3, [fp, #-8]
   1711c:	strb	r2, [r3]
   17120:	ldr	r3, [fp, #-8]
   17124:	add	r3, r3, #1
   17128:	ldr	r2, [fp, #-16]
   1712c:	add	r2, r2, #1
   17130:	ldr	r1, [pc, #152]	; 171d0 <main@@Base+0x2438>
   17134:	add	r1, pc, r1
   17138:	add	r2, r2, r1
   1713c:	ldrb	r2, [r2]
   17140:	strb	r2, [r3]
   17144:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17148:	cmp	r3, #9
   1714c:	bhi	1715c <main@@Base+0x23c4>
   17150:	ldr	r3, [fp, #-8]
   17154:	add	r3, r3, #1
   17158:	str	r3, [fp, #-8]
   1715c:	ldr	r2, [fp, #-12]
   17160:	ldr	r3, [fp, #-8]
   17164:	sub	r3, r2, r3
   17168:	str	r3, [fp, #-20]	; 0xffffffec
   1716c:	b	17190 <main@@Base+0x23f8>
   17170:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17174:	add	r2, r3, #1
   17178:	str	r2, [fp, #-52]	; 0xffffffcc
   1717c:	ldr	r2, [fp, #-8]
   17180:	add	r1, r2, #1
   17184:	str	r1, [fp, #-8]
   17188:	ldrb	r2, [r2]
   1718c:	strb	r2, [r3]
   17190:	ldr	r2, [fp, #-8]
   17194:	ldr	r3, [fp, #-12]
   17198:	cmp	r2, r3
   1719c:	bne	17170 <main@@Base+0x23d8>
   171a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   171a4:	mov	r2, #0
   171a8:	strb	r2, [r3]
   171ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   171b0:	mov	r0, r3
   171b4:	add	sp, fp, #0
   171b8:	pop	{fp}		; (ldr fp, [sp], #4)
   171bc:	bx	lr
   171c0:	mvnpl	r8, pc, lsl r5
   171c4:	muleq	r0, r4, r9
   171c8:	andeq	ip, r0, ip, ror #18
   171cc:	andeq	ip, r0, r0, lsr r9
   171d0:	andeq	ip, r0, r8, lsl #18
   171d4:	push	{fp, lr}
   171d8:	add	fp, sp, #4
   171dc:	sub	sp, sp, #16
   171e0:	str	r0, [fp, #-16]
   171e4:	str	r1, [fp, #-20]	; 0xffffffec
   171e8:	ldr	r3, [fp, #-16]
   171ec:	lsr	r3, r3, #31
   171f0:	uxtb	r3, r3
   171f4:	str	r3, [fp, #-8]
   171f8:	ldr	r3, [fp, #-8]
   171fc:	cmp	r3, #0
   17200:	beq	17224 <main@@Base+0x248c>
   17204:	ldr	r3, [fp, #-20]	; 0xffffffec
   17208:	add	r2, r3, #1
   1720c:	str	r2, [fp, #-20]	; 0xffffffec
   17210:	mov	r2, #45	; 0x2d
   17214:	strb	r2, [r3]
   17218:	ldr	r3, [fp, #-16]
   1721c:	rsb	r3, r3, #0
   17220:	str	r3, [fp, #-16]
   17224:	ldr	r3, [fp, #-16]
   17228:	ldr	r1, [fp, #-20]	; 0xffffffec
   1722c:	mov	r0, r3
   17230:	bl	17030 <main@@Base+0x2298>
   17234:	mov	r2, r0
   17238:	ldr	r3, [fp, #-8]
   1723c:	add	r3, r2, r3
   17240:	mov	r0, r3
   17244:	sub	sp, fp, #4
   17248:	pop	{fp, pc}
   1724c:	push	{fp}		; (str fp, [sp, #-4]!)
   17250:	add	fp, sp, #0
   17254:	sub	sp, sp, #20
   17258:	vstr	d0, [fp, #-20]	; 0xffffffec
   1725c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17260:	strd	r2, [fp, #-12]
   17264:	ldrd	r2, [fp, #-12]
   17268:	mov	r0, r2
   1726c:	mov	r1, r3
   17270:	add	sp, fp, #0
   17274:	pop	{fp}		; (ldr fp, [sp], #4)
   17278:	bx	lr
   1727c:	push	{fp}		; (str fp, [sp, #-4]!)
   17280:	add	fp, sp, #0
   17284:	sub	sp, sp, #20
   17288:	strd	r0, [fp, #-20]	; 0xffffffec
   1728c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17290:	strd	r2, [fp, #-12]
   17294:	ldrd	r2, [fp, #-12]
   17298:	vmov	d7, r2, r3
   1729c:	vmov.f64	d0, d7
   172a0:	add	sp, fp, #0
   172a4:	pop	{fp}		; (ldr fp, [sp], #4)
   172a8:	bx	lr
   172ac:	push	{fp}		; (str fp, [sp, #-4]!)
   172b0:	add	fp, sp, #0
   172b4:	sub	sp, sp, #20
   172b8:	vstr	d0, [fp, #-20]	; 0xffffffec
   172bc:	vldr	d7, [fp, #-20]	; 0xffffffec
   172c0:	vcvt.s32.f64	s15, d7
   172c4:	vmov	r3, s15
   172c8:	str	r3, [fp, #-8]
   172cc:	vldr	d7, [fp, #-20]	; 0xffffffec
   172d0:	vcmpe.f64	d7, #0.0
   172d4:	vmrs	APSR_nzcv, fpscr
   172d8:	bpl	172e4 <main@@Base+0x254c>
   172dc:	ldr	r3, [fp, #-8]
   172e0:	b	17314 <main@@Base+0x257c>
   172e4:	ldr	r3, [fp, #-8]
   172e8:	vmov	s15, r3
   172ec:	vcvt.f64.s32	d7, s15
   172f0:	vldr	d6, [fp, #-20]	; 0xffffffec
   172f4:	vsub.f64	d7, d6, d7
   172f8:	vcmp.f64	d7, #0.0
   172fc:	vmrs	APSR_nzcv, fpscr
   17300:	beq	17310 <main@@Base+0x2578>
   17304:	ldr	r3, [fp, #-8]
   17308:	add	r3, r3, #1
   1730c:	b	17314 <main@@Base+0x257c>
   17310:	ldr	r3, [fp, #-8]
   17314:	mov	r0, r3
   17318:	add	sp, fp, #0
   1731c:	pop	{fp}		; (ldr fp, [sp], #4)
   17320:	bx	lr
   17324:	push	{fp, lr}
   17328:	add	fp, sp, #4
   1732c:	sub	sp, sp, #16
   17330:	str	r0, [fp, #-16]
   17334:	str	r1, [fp, #-20]	; 0xffffffec
   17338:	ldr	r3, [fp, #-16]
   1733c:	add	r3, r3, #63	; 0x3f
   17340:	vmov	s15, r3
   17344:	vcvt.f64.s32	d7, s15
   17348:	vldr	d6, [pc, #168]	; 173f8 <main@@Base+0x2660>
   1734c:	vmul.f64	d7, d7, d6
   17350:	vmov.f64	d0, d7
   17354:	bl	172ac <main@@Base+0x2514>
   17358:	str	r0, [fp, #-8]
   1735c:	ldr	r3, [fp, #-8]
   17360:	add	r3, r3, #344	; 0x158
   17364:	add	r3, r3, #3
   17368:	add	r2, r3, #7
   1736c:	cmp	r3, #0
   17370:	movlt	r3, r2
   17374:	movge	r3, r3
   17378:	asr	r3, r3, #3
   1737c:	add	r3, r3, #1
   17380:	str	r3, [fp, #-12]
   17384:	ldr	r2, [pc, #116]	; 17400 <main@@Base+0x2668>
   17388:	add	r2, pc, r2
   1738c:	ldr	r3, [fp, #-12]
   17390:	lsl	r3, r3, #4
   17394:	add	r3, r2, r3
   17398:	ldrd	r2, [r3]
   1739c:	ldr	r1, [fp, #-20]	; 0xffffffec
   173a0:	strd	r2, [r1]
   173a4:	ldr	r2, [pc, #88]	; 17404 <main@@Base+0x266c>
   173a8:	add	r2, pc, r2
   173ac:	ldr	r3, [fp, #-12]
   173b0:	lsl	r3, r3, #4
   173b4:	add	r3, r2, r3
   173b8:	add	r3, r3, #8
   173bc:	ldrsh	r3, [r3]
   173c0:	mov	r2, r3
   173c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   173c8:	str	r2, [r3, #8]
   173cc:	ldr	r2, [pc, #52]	; 17408 <main@@Base+0x2670>
   173d0:	add	r2, pc, r2
   173d4:	ldr	r3, [fp, #-12]
   173d8:	lsl	r3, r3, #4
   173dc:	add	r3, r2, r3
   173e0:	add	r3, r3, #10
   173e4:	ldrsh	r3, [r3]
   173e8:	mov	r0, r3
   173ec:	sub	sp, fp, #4
   173f0:	pop	{fp, pc}
   173f4:	nop			; (mov r0, r0)
   173f8:			; <UNDEFINED> instruction: 0x509f79fe
   173fc:	svccc	0x00d34413
   17400:	muleq	r0, r0, r7
   17404:	andeq	ip, r0, r0, ror r7
   17408:	andeq	ip, r0, r8, asr #14
   1740c:	sub	sp, sp, #8
   17410:	push	{fp, lr}
   17414:	add	fp, sp, #4
   17418:	sub	sp, sp, #24
   1741c:	str	r0, [fp, #-24]	; 0xffffffe8
   17420:	add	r1, fp, #4
   17424:	stm	r1, {r2, r3}
   17428:	ldrd	r0, [fp, #4]
   1742c:	ldrd	r2, [fp, #20]
   17430:	subs	r2, r0, r2
   17434:	sbc	r3, r1, r3
   17438:	strd	r2, [fp, #-20]	; 0xffffffec
   1743c:	ldr	r3, [fp, #12]
   17440:	str	r3, [fp, #-12]
   17444:	ldr	r2, [fp, #12]
   17448:	ldr	r3, [fp, #28]
   1744c:	cmp	r2, r3
   17450:	bne	17468 <main@@Base+0x26d0>
   17454:	ldrd	r0, [fp, #4]
   17458:	ldrd	r2, [fp, #20]
   1745c:	cmp	r1, r3
   17460:	cmpeq	r0, r2
   17464:	bcs	17488 <main@@Base+0x26f0>
   17468:	ldr	r3, [pc, #64]	; 174b0 <main@@Base+0x2718>
   1746c:	add	r3, pc, r3
   17470:	mov	r2, #239	; 0xef
   17474:	ldr	r1, [pc, #56]	; 174b4 <main@@Base+0x271c>
   17478:	add	r1, pc, r1
   1747c:	ldr	r0, [pc, #52]	; 174b8 <main@@Base+0x2720>
   17480:	add	r0, pc, r0
   17484:	bl	12528 <__assert_fail@plt>
   17488:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1748c:	mov	ip, r3
   17490:	sub	r3, fp, #20
   17494:	ldm	r3, {r0, r1, r2, r3}
   17498:	stm	ip, {r0, r1, r2, r3}
   1749c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174a0:	sub	sp, fp, #4
   174a4:	pop	{fp, lr}
   174a8:	add	sp, sp, #8
   174ac:	bx	lr
   174b0:	andeq	sp, r0, r8
   174b4:	andeq	ip, r0, r0, lsl ip
   174b8:	andeq	ip, r0, r8, ror ip
   174bc:	sub	sp, sp, #8
   174c0:	push	{r4, r5, r6, r7, r8, r9, fp}
   174c4:	add	fp, sp, #24
   174c8:	sub	sp, sp, #124	; 0x7c
   174cc:	str	r0, [fp, #-120]	; 0xffffff88
   174d0:	add	r1, fp, #4
   174d4:	stm	r1, {r2, r3}
   174d8:	ldrd	r2, [fp, #4]
   174dc:	mov	r4, r3
   174e0:	mov	r5, #0
   174e4:	strd	r4, [fp, #-36]	; 0xffffffdc
   174e8:	ldrd	r2, [fp, #4]
   174ec:	mvn	r0, #0
   174f0:	mov	r1, #0
   174f4:	and	r2, r2, r0
   174f8:	and	r3, r3, r1
   174fc:	strd	r2, [fp, #-44]	; 0xffffffd4
   17500:	ldrd	r2, [fp, #20]
   17504:	mov	r3, r3
   17508:	str	r3, [fp, #-148]	; 0xffffff6c
   1750c:	mov	r3, #0
   17510:	str	r3, [fp, #-144]	; 0xffffff70
   17514:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   17518:	strd	r2, [fp, #-52]	; 0xffffffcc
   1751c:	ldrd	r2, [fp, #20]
   17520:	mvn	r0, #0
   17524:	mov	r1, #0
   17528:	and	r2, r2, r0
   1752c:	and	r3, r3, r1
   17530:	strd	r2, [fp, #-60]	; 0xffffffc4
   17534:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17538:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1753c:	mul	r2, r2, r3
   17540:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17544:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17548:	mul	r3, r1, r3
   1754c:	add	r1, r2, r3
   17550:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17554:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17558:	umull	r2, r3, r2, r3
   1755c:	add	r1, r1, r3
   17560:	mov	r3, r1
   17564:	strd	r2, [fp, #-68]	; 0xffffffbc
   17568:	strd	r2, [fp, #-68]	; 0xffffffbc
   1756c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17570:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17574:	mul	r2, r2, r3
   17578:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1757c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17580:	mul	r3, r1, r3
   17584:	add	r1, r2, r3
   17588:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1758c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17590:	umull	r2, r3, r2, r3
   17594:	add	r1, r1, r3
   17598:	mov	r3, r1
   1759c:	strd	r2, [fp, #-76]	; 0xffffffb4
   175a0:	strd	r2, [fp, #-76]	; 0xffffffb4
   175a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   175a8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   175ac:	mul	r2, r2, r3
   175b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   175b4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   175b8:	mul	r3, r1, r3
   175bc:	add	r1, r2, r3
   175c0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   175c4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   175c8:	umull	r2, r3, r2, r3
   175cc:	add	r1, r1, r3
   175d0:	mov	r3, r1
   175d4:	strd	r2, [fp, #-84]	; 0xffffffac
   175d8:	strd	r2, [fp, #-84]	; 0xffffffac
   175dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   175e0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   175e4:	mul	r2, r2, r3
   175e8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   175ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   175f0:	mul	r3, r1, r3
   175f4:	add	r1, r2, r3
   175f8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   175fc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17600:	umull	r2, r3, r2, r3
   17604:	add	r1, r1, r3
   17608:	mov	r3, r1
   1760c:	strd	r2, [fp, #-92]	; 0xffffffa4
   17610:	strd	r2, [fp, #-92]	; 0xffffffa4
   17614:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   17618:	mov	r3, r3
   1761c:	str	r3, [fp, #-132]	; 0xffffff7c
   17620:	mov	r3, #0
   17624:	str	r3, [fp, #-128]	; 0xffffff80
   17628:	ldrd	r2, [fp, #-84]	; 0xffffffac
   1762c:	mvn	r0, #0
   17630:	mov	r1, #0
   17634:	and	r2, r2, r0
   17638:	and	r3, r3, r1
   1763c:	ldrd	r0, [fp, #-132]	; 0xffffff7c
   17640:	adds	r0, r0, r2
   17644:	adc	r1, r1, r3
   17648:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   1764c:	mvn	r4, #0
   17650:	mov	r5, #0
   17654:	and	r2, r2, r4
   17658:	and	r3, r3, r5
   1765c:	adds	r2, r2, r0
   17660:	adc	r3, r3, r1
   17664:	strd	r2, [fp, #-100]	; 0xffffff9c
   17668:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   1766c:	adds	r2, r2, #-2147483648	; 0x80000000
   17670:	adc	r3, r3, #0
   17674:	strd	r2, [fp, #-100]	; 0xffffff9c
   17678:	ldrd	r2, [fp, #-84]	; 0xffffffac
   1767c:	mov	r3, r3
   17680:	str	r3, [fp, #-140]	; 0xffffff74
   17684:	mov	r3, #0
   17688:	str	r3, [fp, #-136]	; 0xffffff78
   1768c:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   17690:	ldrd	r0, [fp, #-140]	; 0xffffff74
   17694:	adds	r0, r0, r2
   17698:	adc	r1, r1, r3
   1769c:	mov	r2, r0
   176a0:	mov	r3, r1
   176a4:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   176a8:	mov	r8, r1
   176ac:	mov	r9, #0
   176b0:	adds	r2, r2, r8
   176b4:	adc	r3, r3, r9
   176b8:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   176bc:	mov	r6, r1
   176c0:	mov	r7, #0
   176c4:	adds	r2, r2, r6
   176c8:	adc	r3, r3, r7
   176cc:	strd	r2, [fp, #-116]	; 0xffffff8c
   176d0:	ldr	r2, [fp, #12]
   176d4:	ldr	r3, [fp, #28]
   176d8:	add	r3, r2, r3
   176dc:	add	r3, r3, #64	; 0x40
   176e0:	str	r3, [fp, #-108]	; 0xffffff94
   176e4:	ldr	r3, [fp, #-120]	; 0xffffff88
   176e8:	mov	ip, r3
   176ec:	sub	r3, fp, #116	; 0x74
   176f0:	ldm	r3, {r0, r1, r2, r3}
   176f4:	stm	ip, {r0, r1, r2, r3}
   176f8:	ldr	r0, [fp, #-120]	; 0xffffff88
   176fc:	sub	sp, fp, #24
   17700:	pop	{r4, r5, r6, r7, r8, r9, fp}
   17704:	add	sp, sp, #8
   17708:	bx	lr
   1770c:	sub	sp, sp, #8
   17710:	push	{r4, r5, fp, lr}
   17714:	add	fp, sp, #12
   17718:	sub	sp, sp, #8
   1771c:	str	r0, [fp, #-16]
   17720:	add	r1, fp, #4
   17724:	stm	r1, {r2, r3}
   17728:	ldrd	r2, [fp, #4]
   1772c:	orrs	r3, r2, r3
   17730:	bne	17774 <main@@Base+0x29dc>
   17734:	ldr	r3, [pc, #172]	; 177e8 <main@@Base+0x2a50>
   17738:	add	r3, pc, r3
   1773c:	mov	r2, #260	; 0x104
   17740:	ldr	r1, [pc, #164]	; 177ec <main@@Base+0x2a54>
   17744:	add	r1, pc, r1
   17748:	ldr	r0, [pc, #160]	; 177f0 <main@@Base+0x2a58>
   1774c:	add	r0, pc, r0
   17750:	bl	12528 <__assert_fail@plt>
   17754:	ldrd	r2, [fp, #4]
   17758:	lsl	r5, r3, #10
   1775c:	orr	r5, r5, r2, lsr #22
   17760:	lsl	r4, r2, #10
   17764:	strd	r4, [fp, #4]
   17768:	ldr	r3, [fp, #12]
   1776c:	sub	r3, r3, #10
   17770:	str	r3, [fp, #12]
   17774:	ldrd	r2, [fp, #4]
   17778:	mov	r0, #0
   1777c:	ldr	r1, [pc, #112]	; 177f4 <main@@Base+0x2a5c>
   17780:	and	r2, r2, r0
   17784:	and	r3, r3, r1
   17788:	orrs	r3, r2, r3
   1778c:	beq	17754 <main@@Base+0x29bc>
   17790:	b	177b0 <main@@Base+0x2a18>
   17794:	ldrd	r2, [fp, #4]
   17798:	adds	r2, r2, r2
   1779c:	adc	r3, r3, r3
   177a0:	strd	r2, [fp, #4]
   177a4:	ldr	r3, [fp, #12]
   177a8:	sub	r3, r3, #1
   177ac:	str	r3, [fp, #12]
   177b0:	ldrd	r2, [fp, #4]
   177b4:	cmp	r2, #0
   177b8:	sbcs	r3, r3, #0
   177bc:	bge	17794 <main@@Base+0x29fc>
   177c0:	ldr	r3, [fp, #-16]
   177c4:	mov	ip, r3
   177c8:	add	r3, fp, #4
   177cc:	ldm	r3, {r0, r1, r2, r3}
   177d0:	stm	ip, {r0, r1, r2, r3}
   177d4:	ldr	r0, [fp, #-16]
   177d8:	sub	sp, fp, #12
   177dc:	pop	{r4, r5, fp, lr}
   177e0:	add	sp, sp, #8
   177e4:	bx	lr
   177e8:	andeq	ip, r0, r0, asr sp
   177ec:	andeq	ip, r0, r4, asr #18
   177f0:	andeq	ip, r0, r8, asr #19
   177f4:			; <UNDEFINED> instruction: 0xffc00000
   177f8:	push	{r4, r5, fp, lr}
   177fc:	add	fp, sp, #12
   17800:	sub	sp, sp, #40	; 0x28
   17804:	str	r0, [fp, #-40]	; 0xffffffd8
   17808:	vstr	d0, [fp, #-52]	; 0xffffffcc
   1780c:	vldr	d0, [fp, #-52]	; 0xffffffcc
   17810:	bl	1724c <main@@Base+0x24b4>
   17814:	strd	r0, [fp, #-20]	; 0xffffffec
   17818:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1781c:	mov	r0, #0
   17820:	ldr	r1, [pc, #148]	; 178bc <main@@Base+0x2b24>
   17824:	and	r2, r2, r0
   17828:	and	r3, r3, r1
   1782c:	orrs	r3, r2, r3
   17830:	bne	17858 <main@@Base+0x2ac0>
   17834:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17838:	mvn	r0, #0
   1783c:	ldr	r1, [pc, #124]	; 178c0 <main@@Base+0x2b28>
   17840:	and	r2, r2, r0
   17844:	and	r3, r3, r1
   17848:	strd	r2, [fp, #-36]	; 0xffffffdc
   1784c:	ldr	r3, [pc, #112]	; 178c4 <main@@Base+0x2b2c>
   17850:	str	r3, [fp, #-28]	; 0xffffffe4
   17854:	b	1789c <main@@Base+0x2b04>
   17858:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1785c:	mvn	r0, #0
   17860:	ldr	r1, [pc, #88]	; 178c0 <main@@Base+0x2b28>
   17864:	and	r2, r2, r0
   17868:	and	r3, r3, r1
   1786c:	adds	r2, r2, #0
   17870:	adc	r3, r3, #1048576	; 0x100000
   17874:	strd	r2, [fp, #-36]	; 0xffffffdc
   17878:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1787c:	lsr	r4, r3, #20
   17880:	mov	r5, #0
   17884:	mov	r3, r4
   17888:	lsl	r3, r3, #21
   1788c:	lsr	r3, r3, #21
   17890:	sub	r3, r3, #1072	; 0x430
   17894:	sub	r3, r3, #3
   17898:	str	r3, [fp, #-28]	; 0xffffffe4
   1789c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   178a0:	mov	ip, r3
   178a4:	sub	r3, fp, #36	; 0x24
   178a8:	ldm	r3, {r0, r1, r2, r3}
   178ac:	stm	ip, {r0, r1, r2, r3}
   178b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   178b4:	sub	sp, fp, #12
   178b8:	pop	{r4, r5, fp, pc}
   178bc:	svcvc	0x00f00000	; IMB
   178c0:	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
   178c4:			; <UNDEFINED> instruction: 0xfffffbce
   178c8:	push	{r4, r5, r6, r7, fp, lr}
   178cc:	add	fp, sp, #20
   178d0:	sub	sp, sp, #72	; 0x48
   178d4:	sub	ip, fp, #92	; 0x5c
   178d8:	stm	ip, {r0, r1, r2, r3}
   178dc:	mov	r2, #0
   178e0:	mov	r3, #1048576	; 0x100000
   178e4:	strd	r2, [fp, #-36]	; 0xffffffdc
   178e8:	mvn	r2, #0
   178ec:	ldr	r3, [pc, #372]	; 17a68 <main@@Base+0x2cd0>
   178f0:	strd	r2, [fp, #-44]	; 0xffffffd4
   178f4:	ldr	r3, [pc, #368]	; 17a6c <main@@Base+0x2cd4>
   178f8:	str	r3, [fp, #-48]	; 0xffffffd0
   178fc:	ldr	r3, [pc, #364]	; 17a70 <main@@Base+0x2cd8>
   17900:	str	r3, [fp, #-52]	; 0xffffffcc
   17904:	mov	r3, #52	; 0x34
   17908:	str	r3, [fp, #-56]	; 0xffffffc8
   1790c:	sub	ip, fp, #76	; 0x4c
   17910:	sub	r3, fp, #92	; 0x5c
   17914:	ldm	r3, {r0, r1, r2, r3}
   17918:	stm	ip, {r0, r1, r2, r3}
   1791c:	b	1793c <main@@Base+0x2ba4>
   17920:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   17924:	lsrs	r3, r3, #1
   17928:	rrx	r2, r2
   1792c:	strd	r2, [fp, #-76]	; 0xffffffb4
   17930:	ldr	r3, [fp, #-68]	; 0xffffffbc
   17934:	add	r3, r3, #1
   17938:	str	r3, [fp, #-68]	; 0xffffffbc
   1793c:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   17940:	ldrd	r6, [fp, #-36]	; 0xffffffdc
   17944:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   17948:	adds	r2, r2, r6
   1794c:	adc	r3, r3, r7
   17950:	cmp	r1, r3
   17954:	cmpeq	r0, r2
   17958:	bhi	17920 <main@@Base+0x2b88>
   1795c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   17960:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17964:	cmp	r2, r3
   17968:	bge	17990 <main@@Base+0x2bf8>
   1796c:	vldr	d7, [pc, #236]	; 17a60 <main@@Base+0x2cc8>
   17970:	b	17a50 <main@@Base+0x2cb8>
   17974:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   17978:	adds	r2, r2, r2
   1797c:	adc	r3, r3, r3
   17980:	strd	r2, [fp, #-76]	; 0xffffffb4
   17984:	ldr	r3, [fp, #-68]	; 0xffffffbc
   17988:	sub	r3, r3, #1
   1798c:	str	r3, [fp, #-68]	; 0xffffffbc
   17990:	ldr	r2, [fp, #-68]	; 0xffffffbc
   17994:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17998:	cmp	r2, r3
   1799c:	ble	179b8 <main@@Base+0x2c20>
   179a0:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   179a4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   179a8:	and	r2, r2, r0
   179ac:	and	r3, r3, r1
   179b0:	orrs	r3, r2, r3
   179b4:	beq	17974 <main@@Base+0x2bdc>
   179b8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   179bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   179c0:	cmp	r2, r3
   179c4:	bne	179f0 <main@@Base+0x2c58>
   179c8:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   179cc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   179d0:	and	r2, r2, r0
   179d4:	and	r3, r3, r1
   179d8:	orrs	r3, r2, r3
   179dc:	bne	179f0 <main@@Base+0x2c58>
   179e0:	mov	r2, #0
   179e4:	mov	r3, #0
   179e8:	strd	r2, [fp, #-28]	; 0xffffffe4
   179ec:	b	17a08 <main@@Base+0x2c70>
   179f0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   179f4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   179f8:	add	r3, r2, r3
   179fc:	mov	r2, r3
   17a00:	asr	r3, r2, #31
   17a04:	strd	r2, [fp, #-28]	; 0xffffffe4
   17a08:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   17a0c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   17a10:	and	r6, r0, r2
   17a14:	and	r7, r1, r3
   17a18:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   17a1c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   17a20:	sub	ip, r1, #32
   17a24:	rsb	r0, r1, #32
   17a28:	lsl	r5, r3, r1
   17a2c:	orr	r5, r5, r2, lsl ip
   17a30:	orr	r5, r5, r2, lsr r0
   17a34:	lsl	r4, r2, r1
   17a38:	orr	r2, r6, r4
   17a3c:	orr	r3, r7, r5
   17a40:	mov	r0, r2
   17a44:	mov	r1, r3
   17a48:	bl	1727c <main@@Base+0x24e4>
   17a4c:	vmov.f64	d7, d0
   17a50:	vmov.f64	d0, d7
   17a54:	sub	sp, fp, #20
   17a58:	pop	{r4, r5, r6, r7, fp, pc}
   17a5c:	nop			; (mov r0, r0)
	...
   17a68:	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
   17a6c:			; <UNDEFINED> instruction: 0xfffffbce
   17a70:	andeq	r0, r0, r3, lsr r4
   17a74:	push	{fp}		; (str fp, [sp, #-4]!)
   17a78:	add	fp, sp, #0
   17a7c:	sub	sp, sp, #28
   17a80:	str	r0, [fp, #-16]
   17a84:	str	r1, [fp, #-20]	; 0xffffffec
   17a88:	str	r2, [fp, #-24]	; 0xffffffe8
   17a8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17a90:	add	r2, r3, #1
   17a94:	mov	r3, r2
   17a98:	lsl	r3, r3, #4
   17a9c:	add	r3, r3, r2
   17aa0:	lsl	r3, r3, #3
   17aa4:	add	r3, r3, r2
   17aa8:	lsl	r2, r3, #3
   17aac:	add	r3, r3, r2
   17ab0:	asr	r3, r3, #12
   17ab4:	add	r3, r3, #1
   17ab8:	str	r3, [fp, #-8]
   17abc:	ldr	r3, [pc, #76]	; 17b10 <main@@Base+0x2d78>
   17ac0:	add	r3, pc, r3
   17ac4:	ldr	r2, [fp, #-8]
   17ac8:	ldr	r2, [r3, r2, lsl #2]
   17acc:	ldr	r3, [fp, #-16]
   17ad0:	cmp	r2, r3
   17ad4:	bls	17ae4 <main@@Base+0x2d4c>
   17ad8:	ldr	r3, [fp, #-8]
   17adc:	sub	r3, r3, #1
   17ae0:	str	r3, [fp, #-8]
   17ae4:	ldr	r3, [pc, #40]	; 17b14 <main@@Base+0x2d7c>
   17ae8:	add	r3, pc, r3
   17aec:	ldr	r2, [fp, #-8]
   17af0:	ldr	r2, [r3, r2, lsl #2]
   17af4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17af8:	str	r2, [r3]
   17afc:	ldr	r3, [fp, #-8]
   17b00:	mov	r0, r3
   17b04:	add	sp, fp, #0
   17b08:	pop	{fp}		; (ldr fp, [sp], #4)
   17b0c:	bx	lr
   17b10:	andeq	ip, r0, r0, ror #12
   17b14:	andeq	ip, r0, r8, lsr r6
   17b18:	push	{r4, r5, r6, r7, fp}
   17b1c:	add	fp, sp, #16
   17b20:	sub	sp, sp, #36	; 0x24
   17b24:	str	r0, [fp, #-40]	; 0xffffffd8
   17b28:	str	r1, [fp, #-44]	; 0xffffffd4
   17b2c:	strd	r2, [fp, #-52]	; 0xffffffcc
   17b30:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   17b34:	ldrd	r2, [fp, #28]
   17b38:	subs	r2, r0, r2
   17b3c:	sbc	r3, r1, r3
   17b40:	strd	r2, [fp, #-28]	; 0xffffffe4
   17b44:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   17b48:	ldrd	r2, [fp, #28]
   17b4c:	adds	r2, r2, r0
   17b50:	adc	r3, r3, r1
   17b54:	strd	r2, [fp, #-36]	; 0xffffffdc
   17b58:	b	17b90 <main@@Base+0x2df8>
   17b5c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17b60:	sub	r3, r3, #1
   17b64:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17b68:	add	r3, r2, r3
   17b6c:	ldrb	r2, [r3]
   17b70:	sub	r2, r2, #1
   17b74:	uxtb	r2, r2
   17b78:	strb	r2, [r3]
   17b7c:	ldrd	r0, [fp, #12]
   17b80:	ldrd	r2, [fp, #20]
   17b84:	adds	r2, r2, r0
   17b88:	adc	r3, r3, r1
   17b8c:	strd	r2, [fp, #12]
   17b90:	ldrd	r0, [fp, #12]
   17b94:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   17b98:	cmp	r1, r3
   17b9c:	cmpeq	r0, r2
   17ba0:	bcs	17c1c <main@@Base+0x2e84>
   17ba4:	ldrd	r0, [fp, #4]
   17ba8:	ldrd	r2, [fp, #12]
   17bac:	subs	r0, r0, r2
   17bb0:	sbc	r1, r1, r3
   17bb4:	ldrd	r2, [fp, #20]
   17bb8:	cmp	r1, r3
   17bbc:	cmpeq	r0, r2
   17bc0:	bcc	17c1c <main@@Base+0x2e84>
   17bc4:	ldrd	r0, [fp, #12]
   17bc8:	ldrd	r2, [fp, #20]
   17bcc:	adds	r0, r0, r2
   17bd0:	adc	r1, r1, r3
   17bd4:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   17bd8:	cmp	r1, r3
   17bdc:	cmpeq	r0, r2
   17be0:	bcc	17b5c <main@@Base+0x2dc4>
   17be4:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   17be8:	ldrd	r2, [fp, #12]
   17bec:	subs	r0, r0, r2
   17bf0:	sbc	r1, r1, r3
   17bf4:	ldrd	r6, [fp, #12]
   17bf8:	ldrd	r2, [fp, #20]
   17bfc:	adds	r6, r6, r2
   17c00:	adc	r7, r7, r3
   17c04:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   17c08:	subs	r2, r6, r2
   17c0c:	sbc	r3, r7, r3
   17c10:	cmp	r1, r3
   17c14:	cmpeq	r0, r2
   17c18:	bcs	17b5c <main@@Base+0x2dc4>
   17c1c:	ldrd	r0, [fp, #12]
   17c20:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   17c24:	cmp	r1, r3
   17c28:	cmpeq	r0, r2
   17c2c:	bcs	17cb0 <main@@Base+0x2f18>
   17c30:	ldrd	r0, [fp, #4]
   17c34:	ldrd	r2, [fp, #12]
   17c38:	subs	r0, r0, r2
   17c3c:	sbc	r1, r1, r3
   17c40:	ldrd	r2, [fp, #20]
   17c44:	cmp	r1, r3
   17c48:	cmpeq	r0, r2
   17c4c:	bcc	17cb0 <main@@Base+0x2f18>
   17c50:	ldrd	r0, [fp, #12]
   17c54:	ldrd	r2, [fp, #20]
   17c58:	adds	r0, r0, r2
   17c5c:	adc	r1, r1, r3
   17c60:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   17c64:	cmp	r1, r3
   17c68:	cmpeq	r0, r2
   17c6c:	bcc	17ca8 <main@@Base+0x2f10>
   17c70:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   17c74:	ldrd	r2, [fp, #12]
   17c78:	subs	r0, r0, r2
   17c7c:	sbc	r1, r1, r3
   17c80:	ldrd	r6, [fp, #12]
   17c84:	ldrd	r2, [fp, #20]
   17c88:	adds	r6, r6, r2
   17c8c:	adc	r7, r7, r3
   17c90:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   17c94:	subs	r2, r6, r2
   17c98:	sbc	r3, r7, r3
   17c9c:	cmp	r1, r3
   17ca0:	cmpeq	r0, r2
   17ca4:	bls	17cb0 <main@@Base+0x2f18>
   17ca8:	mov	r3, #0
   17cac:	b	17d14 <main@@Base+0x2f7c>
   17cb0:	ldrd	r2, [fp, #28]
   17cb4:	adds	r2, r2, r2
   17cb8:	adc	r3, r3, r3
   17cbc:	mov	r0, r2
   17cc0:	mov	r1, r3
   17cc4:	ldrd	r2, [fp, #12]
   17cc8:	cmp	r1, r3
   17ccc:	cmpeq	r0, r2
   17cd0:	bhi	17d10 <main@@Base+0x2f78>
   17cd4:	ldrd	r2, [fp, #28]
   17cd8:	lsl	r5, r3, #2
   17cdc:	orr	r5, r5, r2, lsr #30
   17ce0:	lsl	r4, r2, #2
   17ce4:	ldrd	r2, [fp, #4]
   17ce8:	subs	r2, r2, r4
   17cec:	sbc	r3, r3, r5
   17cf0:	mov	r0, r2
   17cf4:	mov	r1, r3
   17cf8:	ldrd	r2, [fp, #12]
   17cfc:	cmp	r1, r3
   17d00:	cmpeq	r0, r2
   17d04:	bcc	17d10 <main@@Base+0x2f78>
   17d08:	mov	r3, #1
   17d0c:	b	17d14 <main@@Base+0x2f7c>
   17d10:	mov	r3, #0
   17d14:	mov	r0, r3
   17d18:	sub	sp, fp, #16
   17d1c:	pop	{r4, r5, r6, r7, fp}
   17d20:	bx	lr
   17d24:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17d28:	add	fp, sp, #28
   17d2c:	sub	sp, sp, #216	; 0xd8
   17d30:	sub	ip, fp, #196	; 0xc4
   17d34:	stm	ip, {r0, r1, r2, r3}
   17d38:	mov	r2, #1
   17d3c:	mov	r3, #0
   17d40:	strd	r2, [fp, #-36]	; 0xffffffdc
   17d44:	ldrd	r0, [fp, #-196]	; 0xffffff3c
   17d48:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   17d4c:	subs	r2, r0, r2
   17d50:	sbc	r3, r1, r3
   17d54:	strd	r2, [fp, #-124]	; 0xffffff84
   17d58:	ldr	r3, [fp, #-188]	; 0xffffff44
   17d5c:	str	r3, [fp, #-116]	; 0xffffff8c
   17d60:	ldrd	r0, [fp, #20]
   17d64:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   17d68:	adds	r2, r2, r0
   17d6c:	adc	r3, r3, r1
   17d70:	strd	r2, [fp, #-140]	; 0xffffff74
   17d74:	ldr	r3, [fp, #28]
   17d78:	str	r3, [fp, #-132]	; 0xffffff7c
   17d7c:	sub	lr, fp, #156	; 0x9c
   17d80:	add	ip, sp, #8
   17d84:	sub	r3, fp, #124	; 0x7c
   17d88:	ldm	r3, {r0, r1, r2, r3}
   17d8c:	stm	ip, {r0, r1, r2, r3}
   17d90:	mov	r2, sp
   17d94:	sub	r3, fp, #132	; 0x84
   17d98:	ldm	r3, {r0, r1}
   17d9c:	stm	r2, {r0, r1}
   17da0:	sub	r3, fp, #140	; 0x8c
   17da4:	ldm	r3, {r2, r3}
   17da8:	mov	r0, lr
   17dac:	bl	1740c <main@@Base+0x2674>
   17db0:	ldr	r3, [fp, #12]
   17db4:	rsb	r1, r3, #0
   17db8:	mov	r2, #1
   17dbc:	mov	r3, #0
   17dc0:	sub	ip, r1, #32
   17dc4:	rsb	r0, r1, #32
   17dc8:	lsl	r7, r3, r1
   17dcc:	orr	r7, r7, r2, lsl ip
   17dd0:	orr	r7, r7, r2, lsr r0
   17dd4:	lsl	r6, r2, r1
   17dd8:	strd	r6, [fp, #-172]	; 0xffffff54
   17ddc:	ldr	r3, [fp, #12]
   17de0:	str	r3, [fp, #-164]	; 0xffffff5c
   17de4:	ldrd	r2, [fp, #-140]	; 0xffffff74
   17de8:	ldr	r1, [fp, #-164]	; 0xffffff5c
   17dec:	rsb	r1, r1, #0
   17df0:	rsb	ip, r1, #32
   17df4:	sub	r0, r1, #32
   17df8:	lsr	lr, r2, r1
   17dfc:	str	lr, [fp, #-204]	; 0xffffff34
   17e00:	ldr	lr, [fp, #-204]	; 0xffffff34
   17e04:	orr	ip, lr, r3, lsl ip
   17e08:	str	ip, [fp, #-204]	; 0xffffff34
   17e0c:	ldr	ip, [fp, #-204]	; 0xffffff34
   17e10:	orr	r0, ip, r3, lsr r0
   17e14:	str	r0, [fp, #-204]	; 0xffffff34
   17e18:	lsr	r3, r3, r1
   17e1c:	str	r3, [fp, #-200]	; 0xffffff38
   17e20:	ldr	r3, [fp, #-204]	; 0xffffff34
   17e24:	str	r3, [fp, #-40]	; 0xffffffd8
   17e28:	ldrd	r0, [fp, #-140]	; 0xffffff74
   17e2c:	ldrd	r2, [fp, #-172]	; 0xffffff54
   17e30:	subs	r2, r2, #1
   17e34:	sbc	r3, r3, #0
   17e38:	and	r2, r2, r0
   17e3c:	and	r3, r3, r1
   17e40:	strd	r2, [fp, #-52]	; 0xffffffcc
   17e44:	ldr	r3, [fp, #-164]	; 0xffffff5c
   17e48:	add	r3, r3, #64	; 0x40
   17e4c:	sub	r2, fp, #176	; 0xb0
   17e50:	mov	r1, r3
   17e54:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17e58:	bl	17a74 <main@@Base+0x2cdc>
   17e5c:	mov	r2, r0
   17e60:	ldr	r3, [fp, #44]	; 0x2c
   17e64:	str	r2, [r3]
   17e68:	ldr	r3, [fp, #40]	; 0x28
   17e6c:	mov	r2, #0
   17e70:	str	r2, [r3]
   17e74:	b	18020 <main@@Base+0x3288>
   17e78:	ldr	r3, [fp, #-176]	; 0xffffff50
   17e7c:	mov	r1, r3
   17e80:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17e84:	bl	22cb0 <flatcc_json_printer_clear@@Base+0x5c>
   17e88:	mov	r3, r0
   17e8c:	str	r3, [fp, #-56]	; 0xffffffc8
   17e90:	ldr	r3, [fp, #40]	; 0x28
   17e94:	ldr	r3, [r3]
   17e98:	mov	r2, r3
   17e9c:	ldr	r3, [fp, #36]	; 0x24
   17ea0:	add	r3, r3, r2
   17ea4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17ea8:	uxtb	r2, r2
   17eac:	add	r2, r2, #48	; 0x30
   17eb0:	uxtb	r2, r2
   17eb4:	strb	r2, [r3]
   17eb8:	ldr	r3, [fp, #40]	; 0x28
   17ebc:	ldr	r3, [r3]
   17ec0:	add	r2, r3, #1
   17ec4:	ldr	r3, [fp, #40]	; 0x28
   17ec8:	str	r2, [r3]
   17ecc:	ldr	r2, [fp, #-176]	; 0xffffff50
   17ed0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17ed4:	mov	r1, r2
   17ed8:	mov	r0, r3
   17edc:	bl	22e9c <flatcc_json_printer_clear@@Base+0x248>
   17ee0:	mov	r3, r1
   17ee4:	str	r3, [fp, #-40]	; 0xffffffd8
   17ee8:	ldr	r3, [fp, #44]	; 0x2c
   17eec:	ldr	r3, [r3]
   17ef0:	sub	r2, r3, #1
   17ef4:	ldr	r3, [fp, #44]	; 0x2c
   17ef8:	str	r2, [r3]
   17efc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17f00:	mov	r2, r3
   17f04:	mov	r3, #0
   17f08:	ldr	r1, [fp, #-164]	; 0xffffff5c
   17f0c:	rsb	r1, r1, #0
   17f10:	sub	ip, r1, #32
   17f14:	rsb	r0, r1, #32
   17f18:	lsl	r5, r3, r1
   17f1c:	orr	r5, r5, r2, lsl ip
   17f20:	orr	r5, r5, r2, lsr r0
   17f24:	lsl	r4, r2, r1
   17f28:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   17f2c:	adds	r2, r2, r4
   17f30:	adc	r3, r3, r5
   17f34:	strd	r2, [fp, #-68]	; 0xffffffbc
   17f38:	ldrd	r0, [fp, #-156]	; 0xffffff64
   17f3c:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   17f40:	cmp	r1, r3
   17f44:	cmpeq	r0, r2
   17f48:	bls	1800c <main@@Base+0x3274>
   17f4c:	ldr	r3, [fp, #40]	; 0x28
   17f50:	ldr	r8, [r3]
   17f54:	sub	lr, fp, #108	; 0x6c
   17f58:	add	ip, sp, #8
   17f5c:	add	r3, fp, #4
   17f60:	ldm	r3, {r0, r1, r2, r3}
   17f64:	stm	ip, {r0, r1, r2, r3}
   17f68:	mov	r2, sp
   17f6c:	sub	r3, fp, #132	; 0x84
   17f70:	ldm	r3, {r0, r1}
   17f74:	stm	r2, {r0, r1}
   17f78:	sub	r3, fp, #140	; 0x8c
   17f7c:	ldm	r3, {r2, r3}
   17f80:	mov	r0, lr
   17f84:	bl	1740c <main@@Base+0x2674>
   17f88:	ldrd	r6, [fp, #-108]	; 0xffffff94
   17f8c:	ldrd	r4, [fp, #-156]	; 0xffffff64
   17f90:	ldr	r3, [fp, #-176]	; 0xffffff50
   17f94:	mov	r2, r3
   17f98:	mov	r3, #0
   17f9c:	ldr	r1, [fp, #-164]	; 0xffffff5c
   17fa0:	rsb	r1, r1, #0
   17fa4:	sub	ip, r1, #32
   17fa8:	rsb	r0, r1, #32
   17fac:	lsl	lr, r3, r1
   17fb0:	str	lr, [fp, #-208]	; 0xffffff30
   17fb4:	ldr	lr, [fp, #-208]	; 0xffffff30
   17fb8:	orr	ip, lr, r2, lsl ip
   17fbc:	str	ip, [fp, #-208]	; 0xffffff30
   17fc0:	ldr	ip, [fp, #-208]	; 0xffffff30
   17fc4:	orr	r0, ip, r2, lsr r0
   17fc8:	str	r0, [fp, #-208]	; 0xffffff30
   17fcc:	lsl	r3, r2, r1
   17fd0:	str	r3, [fp, #-212]	; 0xffffff2c
   17fd4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   17fd8:	strd	r2, [sp, #24]
   17fdc:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   17fe0:	strd	r2, [sp, #16]
   17fe4:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   17fe8:	strd	r2, [sp, #8]
   17fec:	strd	r4, [sp]
   17ff0:	mov	r2, r6
   17ff4:	mov	r3, r7
   17ff8:	mov	r1, r8
   17ffc:	ldr	r0, [fp, #36]	; 0x24
   18000:	bl	17b18 <main@@Base+0x2d80>
   18004:	mov	r3, r0
   18008:	b	1820c <main@@Base+0x3474>
   1800c:	ldr	r3, [fp, #-176]	; 0xffffff50
   18010:	ldr	r2, [pc, #512]	; 18218 <main@@Base+0x3480>
   18014:	umull	r2, r3, r2, r3
   18018:	lsr	r3, r3, #3
   1801c:	str	r3, [fp, #-176]	; 0xffffff50
   18020:	ldr	r3, [fp, #44]	; 0x2c
   18024:	ldr	r3, [r3]
   18028:	cmp	r3, #0
   1802c:	bgt	17e78 <main@@Base+0x30e0>
   18030:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18034:	mov	r2, #10
   18038:	mul	r2, r2, r3
   1803c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18040:	mov	r1, #0
   18044:	mul	r3, r1, r3
   18048:	add	r1, r2, r3
   1804c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18050:	mov	r2, #10
   18054:	umull	r2, r3, r3, r2
   18058:	add	r1, r1, r3
   1805c:	mov	r3, r1
   18060:	strd	r2, [fp, #-52]	; 0xffffffcc
   18064:	strd	r2, [fp, #-52]	; 0xffffffcc
   18068:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1806c:	mov	r2, #10
   18070:	mul	r2, r2, r3
   18074:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18078:	mov	r1, #0
   1807c:	mul	r3, r1, r3
   18080:	add	r1, r2, r3
   18084:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18088:	mov	r2, #10
   1808c:	umull	r2, r3, r3, r2
   18090:	add	r1, r1, r3
   18094:	mov	r3, r1
   18098:	strd	r2, [fp, #-36]	; 0xffffffdc
   1809c:	strd	r2, [fp, #-36]	; 0xffffffdc
   180a0:	ldrd	r2, [fp, #-156]	; 0xffffff64
   180a4:	mov	r1, #10
   180a8:	mul	r0, r1, r3
   180ac:	mov	r1, #0
   180b0:	mul	r1, r1, r2
   180b4:	add	r1, r0, r1
   180b8:	mov	r0, #10
   180bc:	umull	r2, r3, r2, r0
   180c0:	add	r1, r1, r3
   180c4:	mov	r3, r1
   180c8:	strd	r2, [fp, #-156]	; 0xffffff64
   180cc:	ldr	r3, [fp, #-164]	; 0xffffff5c
   180d0:	rsb	r1, r3, #0
   180d4:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   180d8:	rsb	ip, r1, #32
   180dc:	sub	r0, r1, #32
   180e0:	lsr	r8, r2, r1
   180e4:	orr	r8, r8, r3, lsl ip
   180e8:	orr	r8, r8, r3, lsr r0
   180ec:	lsr	r9, r3, r1
   180f0:	mov	r3, r8
   180f4:	str	r3, [fp, #-72]	; 0xffffffb8
   180f8:	ldr	r3, [fp, #40]	; 0x28
   180fc:	ldr	r3, [r3]
   18100:	mov	r2, r3
   18104:	ldr	r3, [fp, #36]	; 0x24
   18108:	add	r3, r3, r2
   1810c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   18110:	uxtb	r2, r2
   18114:	add	r2, r2, #48	; 0x30
   18118:	uxtb	r2, r2
   1811c:	strb	r2, [r3]
   18120:	ldr	r3, [fp, #40]	; 0x28
   18124:	ldr	r3, [r3]
   18128:	add	r2, r3, #1
   1812c:	ldr	r3, [fp, #40]	; 0x28
   18130:	str	r2, [r3]
   18134:	ldrd	r2, [fp, #-172]	; 0xffffff54
   18138:	subs	r2, r2, #1
   1813c:	sbc	r3, r3, #0
   18140:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   18144:	and	r2, r2, r0
   18148:	and	r3, r3, r1
   1814c:	strd	r2, [fp, #-52]	; 0xffffffcc
   18150:	ldr	r3, [fp, #44]	; 0x2c
   18154:	ldr	r3, [r3]
   18158:	sub	r2, r3, #1
   1815c:	ldr	r3, [fp, #44]	; 0x2c
   18160:	str	r2, [r3]
   18164:	ldrd	r0, [fp, #-156]	; 0xffffff64
   18168:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   1816c:	cmp	r1, r3
   18170:	cmpeq	r0, r2
   18174:	bls	18030 <main@@Base+0x3298>
   18178:	ldr	r3, [fp, #40]	; 0x28
   1817c:	ldr	r8, [r3]
   18180:	sub	lr, fp, #92	; 0x5c
   18184:	add	ip, sp, #8
   18188:	add	r3, fp, #4
   1818c:	ldm	r3, {r0, r1, r2, r3}
   18190:	stm	ip, {r0, r1, r2, r3}
   18194:	mov	r2, sp
   18198:	sub	r3, fp, #132	; 0x84
   1819c:	ldm	r3, {r0, r1}
   181a0:	stm	r2, {r0, r1}
   181a4:	sub	r3, fp, #140	; 0x8c
   181a8:	ldm	r3, {r2, r3}
   181ac:	mov	r0, lr
   181b0:	bl	1740c <main@@Base+0x2674>
   181b4:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   181b8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   181bc:	mul	r0, r3, r1
   181c0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   181c4:	mul	r1, r2, r1
   181c8:	add	r1, r0, r1
   181cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   181d0:	umull	r2, r3, r0, r2
   181d4:	add	r1, r1, r3
   181d8:	mov	r3, r1
   181dc:	ldrd	r0, [fp, #-156]	; 0xffffff64
   181e0:	ldrd	r4, [fp, #-172]	; 0xffffff54
   181e4:	ldrd	r6, [fp, #-36]	; 0xffffffdc
   181e8:	strd	r6, [sp, #24]
   181ec:	strd	r4, [sp, #16]
   181f0:	ldrd	r4, [fp, #-52]	; 0xffffffcc
   181f4:	strd	r4, [sp, #8]
   181f8:	strd	r0, [sp]
   181fc:	mov	r1, r8
   18200:	ldr	r0, [fp, #36]	; 0x24
   18204:	bl	17b18 <main@@Base+0x2d80>
   18208:	mov	r3, r0
   1820c:	mov	r0, r3
   18210:	sub	sp, fp, #28
   18214:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   18218:	stclgt	12, cr12, [ip], {205}	; 0xcd
   1821c:	push	{r4, r5, r6, r7, fp, lr}
   18220:	add	fp, sp, #20
   18224:	sub	sp, sp, #208	; 0xd0
   18228:	vstr	d0, [fp, #-148]	; 0xffffff6c
   1822c:	str	r0, [fp, #-152]	; 0xffffff68
   18230:	str	r1, [fp, #-156]	; 0xffffff64
   18234:	str	r2, [fp, #-160]	; 0xffffff60
   18238:	sub	r3, fp, #60	; 0x3c
   1823c:	vldr	d0, [fp, #-148]	; 0xffffff6c
   18240:	mov	r0, r3
   18244:	bl	177f8 <main@@Base+0x2a60>
   18248:	sub	ip, fp, #76	; 0x4c
   1824c:	mov	r2, sp
   18250:	sub	r3, fp, #52	; 0x34
   18254:	ldm	r3, {r0, r1}
   18258:	stm	r2, {r0, r1}
   1825c:	sub	r3, fp, #60	; 0x3c
   18260:	ldm	r3, {r2, r3}
   18264:	mov	r0, ip
   18268:	bl	1770c <main@@Base+0x2974>
   1826c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   18270:	adds	r2, r2, r2
   18274:	adc	r3, r3, r3
   18278:	adds	r2, r2, #1
   1827c:	adc	r3, r3, #0
   18280:	strd	r2, [fp, #-92]	; 0xffffffa4
   18284:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18288:	sub	r3, r3, #1
   1828c:	str	r3, [fp, #-84]	; 0xffffffac
   18290:	sub	ip, fp, #108	; 0x6c
   18294:	mov	r2, sp
   18298:	sub	r3, fp, #84	; 0x54
   1829c:	ldm	r3, {r0, r1}
   182a0:	stm	r2, {r0, r1}
   182a4:	sub	r3, fp, #92	; 0x5c
   182a8:	ldm	r3, {r2, r3}
   182ac:	mov	r0, ip
   182b0:	bl	1770c <main@@Base+0x2974>
   182b4:	vldr	d0, [fp, #-148]	; 0xffffff6c
   182b8:	bl	1724c <main@@Base+0x24b4>
   182bc:	strd	r0, [fp, #-28]	; 0xffffffe4
   182c0:	vldr	d7, [fp, #-148]	; 0xffffff6c
   182c4:	vcmpe.f64	d7, #0.0
   182c8:	vmrs	APSR_nzcv, fpscr
   182cc:	movgt	r3, #1
   182d0:	movle	r3, #0
   182d4:	uxtb	r3, r3
   182d8:	eor	r3, r3, #1
   182dc:	uxtb	r3, r3
   182e0:	cmp	r3, #0
   182e4:	bne	18314 <main@@Base+0x357c>
   182e8:	vldr	d7, [fp, #-148]	; 0xffffff6c
   182ec:	vldr	d6, [pc, #580]	; 18538 <main@@Base+0x37a0>
   182f0:	vcmpe.f64	d7, d6
   182f4:	vmrs	APSR_nzcv, fpscr
   182f8:	movls	r3, #1
   182fc:	movhi	r3, #0
   18300:	uxtb	r3, r3
   18304:	eor	r3, r3, #1
   18308:	uxtb	r3, r3
   1830c:	cmp	r3, #0
   18310:	beq	18334 <main@@Base+0x359c>
   18314:	ldr	r3, [pc, #548]	; 18540 <main@@Base+0x37a8>
   18318:	add	r3, pc, r3
   1831c:	mov	r2, #138	; 0x8a
   18320:	ldr	r1, [pc, #540]	; 18544 <main@@Base+0x37ac>
   18324:	add	r1, pc, r1
   18328:	ldr	r0, [pc, #536]	; 18548 <main@@Base+0x37b0>
   1832c:	add	r0, pc, r0
   18330:	bl	12528 <__assert_fail@plt>
   18334:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   18338:	mvn	r0, #0
   1833c:	ldr	r1, [pc, #520]	; 1854c <main@@Base+0x37b4>
   18340:	and	r2, r2, r0
   18344:	and	r3, r3, r1
   18348:	orrs	r3, r2, r3
   1834c:	bne	18398 <main@@Base+0x3600>
   18350:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   18354:	mov	r0, #0
   18358:	ldr	r1, [pc, #496]	; 18550 <main@@Base+0x37b8>
   1835c:	and	r2, r2, r0
   18360:	and	r3, r3, r1
   18364:	orrs	r3, r2, r3
   18368:	beq	18398 <main@@Base+0x3600>
   1836c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   18370:	lsl	r7, r3, #2
   18374:	orr	r7, r7, r2, lsr #30
   18378:	lsl	r6, r2, #2
   1837c:	subs	r2, r6, #1
   18380:	sbc	r3, r7, #0
   18384:	strd	r2, [fp, #-124]	; 0xffffff84
   18388:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1838c:	sub	r3, r3, #2
   18390:	str	r3, [fp, #-116]	; 0xffffff8c
   18394:	b	183bc <main@@Base+0x3624>
   18398:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   1839c:	adds	r2, r2, r2
   183a0:	adc	r3, r3, r3
   183a4:	subs	r2, r2, #1
   183a8:	sbc	r3, r3, #0
   183ac:	strd	r2, [fp, #-124]	; 0xffffff84
   183b0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   183b4:	sub	r3, r3, #1
   183b8:	str	r3, [fp, #-116]	; 0xffffff8c
   183bc:	ldrd	r2, [fp, #-124]	; 0xffffff84
   183c0:	ldr	r0, [fp, #-116]	; 0xffffff8c
   183c4:	ldr	r1, [fp, #-100]	; 0xffffff9c
   183c8:	sub	r1, r0, r1
   183cc:	sub	ip, r1, #32
   183d0:	rsb	r0, r1, #32
   183d4:	lsl	r5, r3, r1
   183d8:	orr	r5, r5, r2, lsl ip
   183dc:	orr	r5, r5, r2, lsr r0
   183e0:	lsl	r4, r2, r1
   183e4:	strd	r4, [fp, #-124]	; 0xffffff84
   183e8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   183ec:	str	r3, [fp, #-116]	; 0xffffff8c
   183f0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   183f4:	mvn	r3, #123	; 0x7b
   183f8:	sub	r3, r3, r2
   183fc:	sub	r2, fp, #140	; 0x8c
   18400:	mov	r1, r2
   18404:	mov	r0, r3
   18408:	bl	17324 <main@@Base+0x258c>
   1840c:	str	r0, [fp, #-32]	; 0xffffffe0
   18410:	sub	lr, fp, #180	; 0xb4
   18414:	add	ip, sp, #8
   18418:	sub	r3, fp, #140	; 0x8c
   1841c:	ldm	r3, {r0, r1, r2, r3}
   18420:	stm	ip, {r0, r1, r2, r3}
   18424:	mov	r2, sp
   18428:	sub	r3, fp, #68	; 0x44
   1842c:	ldm	r3, {r0, r1}
   18430:	stm	r2, {r0, r1}
   18434:	sub	r3, fp, #76	; 0x4c
   18438:	ldm	r3, {r2, r3}
   1843c:	mov	r0, lr
   18440:	bl	174bc <main@@Base+0x2724>
   18444:	sub	ip, fp, #76	; 0x4c
   18448:	sub	r3, fp, #180	; 0xb4
   1844c:	ldm	r3, {r0, r1, r2, r3}
   18450:	stm	ip, {r0, r1, r2, r3}
   18454:	sub	lr, fp, #124	; 0x7c
   18458:	add	ip, sp, #8
   1845c:	sub	r3, fp, #140	; 0x8c
   18460:	ldm	r3, {r0, r1, r2, r3}
   18464:	stm	ip, {r0, r1, r2, r3}
   18468:	mov	r2, sp
   1846c:	sub	r3, fp, #116	; 0x74
   18470:	ldm	r3, {r0, r1}
   18474:	stm	r2, {r0, r1}
   18478:	sub	r3, fp, #124	; 0x7c
   1847c:	ldm	r3, {r2, r3}
   18480:	mov	r0, lr
   18484:	bl	174bc <main@@Base+0x2724>
   18488:	sub	lr, fp, #180	; 0xb4
   1848c:	add	ip, sp, #8
   18490:	sub	r3, fp, #140	; 0x8c
   18494:	ldm	r3, {r0, r1, r2, r3}
   18498:	stm	ip, {r0, r1, r2, r3}
   1849c:	mov	r2, sp
   184a0:	sub	r3, fp, #100	; 0x64
   184a4:	ldm	r3, {r0, r1}
   184a8:	stm	r2, {r0, r1}
   184ac:	sub	r3, fp, #108	; 0x6c
   184b0:	ldm	r3, {r2, r3}
   184b4:	mov	r0, lr
   184b8:	bl	174bc <main@@Base+0x2724>
   184bc:	sub	ip, fp, #108	; 0x6c
   184c0:	sub	r3, fp, #180	; 0xb4
   184c4:	ldm	r3, {r0, r1, r2, r3}
   184c8:	stm	ip, {r0, r1, r2, r3}
   184cc:	sub	r3, fp, #40	; 0x28
   184d0:	str	r3, [sp, #40]	; 0x28
   184d4:	ldr	r3, [fp, #-156]	; 0xffffff64
   184d8:	str	r3, [sp, #36]	; 0x24
   184dc:	ldr	r3, [fp, #-152]	; 0xffffff68
   184e0:	str	r3, [sp, #32]
   184e4:	add	ip, sp, #16
   184e8:	sub	r3, fp, #108	; 0x6c
   184ec:	ldm	r3, {r0, r1, r2, r3}
   184f0:	stm	ip, {r0, r1, r2, r3}
   184f4:	mov	ip, sp
   184f8:	sub	r3, fp, #76	; 0x4c
   184fc:	ldm	r3, {r0, r1, r2, r3}
   18500:	stm	ip, {r0, r1, r2, r3}
   18504:	sub	r3, fp, #124	; 0x7c
   18508:	ldm	r3, {r0, r1, r2, r3}
   1850c:	bl	17d24 <main@@Base+0x2f8c>
   18510:	str	r0, [fp, #-36]	; 0xffffffdc
   18514:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18518:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1851c:	sub	r2, r2, r3
   18520:	ldr	r3, [fp, #-160]	; 0xffffff60
   18524:	str	r2, [r3]
   18528:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1852c:	mov	r0, r3
   18530:	sub	sp, fp, #20
   18534:	pop	{r4, r5, r6, r7, fp, pc}
   18538:			; <UNDEFINED> instruction: 0xffffffff
   1853c:	svcvc	0x00efffff
   18540:	andeq	ip, r0, r8, lsl #3
   18544:	andeq	fp, r0, r8, lsr #28
   18548:	muleq	r0, r0, lr
   1854c:	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
   18550:	svcvc	0x00f00000	; IMB
   18554:	push	{fp}		; (str fp, [sp, #-4]!)
   18558:	add	fp, sp, #0
   1855c:	sub	sp, sp, #44	; 0x2c
   18560:	str	r0, [fp, #-40]	; 0xffffffd8
   18564:	str	r1, [fp, #-44]	; 0xffffffd4
   18568:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1856c:	str	r3, [fp, #-16]
   18570:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18574:	cmp	r3, #0
   18578:	bge	1859c <main@@Base+0x3804>
   1857c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18580:	add	r2, r3, #1
   18584:	str	r2, [fp, #-44]	; 0xffffffd4
   18588:	mov	r2, #45	; 0x2d
   1858c:	strb	r2, [r3]
   18590:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18594:	rsb	r3, r3, #0
   18598:	str	r3, [fp, #-40]	; 0xffffffd8
   1859c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   185a0:	str	r3, [fp, #-12]
   185a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   185a8:	ldr	r2, [pc, #316]	; 186ec <main@@Base+0x3954>
   185ac:	smull	r1, r2, r2, r3
   185b0:	asr	r2, r2, #2
   185b4:	asr	r3, r3, #31
   185b8:	sub	r3, r2, r3
   185bc:	str	r3, [fp, #-20]	; 0xffffffec
   185c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   185c4:	mvn	r2, #9
   185c8:	mul	r2, r2, r3
   185cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   185d0:	add	r3, r2, r3
   185d4:	str	r3, [fp, #-24]	; 0xffffffe8
   185d8:	ldr	r3, [fp, #-12]
   185dc:	add	r2, r3, #1
   185e0:	str	r2, [fp, #-12]
   185e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   185e8:	uxtb	r2, r2
   185ec:	add	r2, r2, #48	; 0x30
   185f0:	uxtb	r2, r2
   185f4:	strb	r2, [r3]
   185f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   185fc:	cmp	r3, #0
   18600:	beq	18610 <main@@Base+0x3878>
   18604:	ldr	r3, [fp, #-20]	; 0xffffffec
   18608:	str	r3, [fp, #-40]	; 0xffffffd8
   1860c:	b	185a4 <main@@Base+0x380c>
   18610:	nop			; (mov r0, r0)
   18614:	ldr	r3, [fp, #-12]
   18618:	mov	r2, #0
   1861c:	strb	r2, [r3]
   18620:	ldr	r2, [fp, #-12]
   18624:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18628:	sub	r3, r2, r3
   1862c:	str	r3, [fp, #-28]	; 0xffffffe4
   18630:	mov	r3, #0
   18634:	str	r3, [fp, #-8]
   18638:	b	186b0 <main@@Base+0x3918>
   1863c:	ldr	r3, [fp, #-8]
   18640:	ldr	r2, [fp, #-44]	; 0xffffffd4
   18644:	add	r3, r2, r3
   18648:	ldrb	r3, [r3]
   1864c:	strb	r3, [fp, #-29]	; 0xffffffe3
   18650:	ldr	r3, [fp, #-8]
   18654:	ldr	r2, [fp, #-44]	; 0xffffffd4
   18658:	add	r3, r2, r3
   1865c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   18660:	sub	r1, r2, #1
   18664:	ldr	r2, [fp, #-8]
   18668:	sub	r2, r1, r2
   1866c:	mov	r1, r2
   18670:	ldr	r2, [fp, #-44]	; 0xffffffd4
   18674:	add	r2, r2, r1
   18678:	ldrb	r2, [r2]
   1867c:	strb	r2, [r3]
   18680:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18684:	sub	r2, r3, #1
   18688:	ldr	r3, [fp, #-8]
   1868c:	sub	r3, r2, r3
   18690:	mov	r2, r3
   18694:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18698:	add	r3, r3, r2
   1869c:	ldrb	r2, [fp, #-29]	; 0xffffffe3
   186a0:	strb	r2, [r3]
   186a4:	ldr	r3, [fp, #-8]
   186a8:	add	r3, r3, #1
   186ac:	str	r3, [fp, #-8]
   186b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   186b4:	lsr	r2, r3, #31
   186b8:	add	r3, r2, r3
   186bc:	asr	r3, r3, #1
   186c0:	mov	r2, r3
   186c4:	ldr	r3, [fp, #-8]
   186c8:	cmp	r2, r3
   186cc:	bgt	1863c <main@@Base+0x38a4>
   186d0:	ldr	r2, [fp, #-12]
   186d4:	ldr	r3, [fp, #-16]
   186d8:	sub	r3, r2, r3
   186dc:	mov	r0, r3
   186e0:	add	sp, fp, #0
   186e4:	pop	{fp}		; (ldr fp, [sp], #4)
   186e8:	bx	lr
   186ec:	strbtvs	r6, [r6], -r7, ror #12
   186f0:	push	{r4, r5, fp, lr}
   186f4:	add	fp, sp, #12
   186f8:	sub	sp, sp, #56	; 0x38
   186fc:	vstr	d0, [fp, #-60]	; 0xffffffc4
   18700:	str	r0, [fp, #-64]	; 0xffffffc0
   18704:	vldr	d0, [fp, #-60]	; 0xffffffc4
   18708:	bl	1724c <main@@Base+0x24b4>
   1870c:	strd	r0, [fp, #-28]	; 0xffffffe4
   18710:	ldr	r3, [fp, #-64]	; 0xffffffc0
   18714:	str	r3, [fp, #-32]	; 0xffffffe0
   18718:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1871c:	cmp	r3, #0
   18720:	bne	18744 <main@@Base+0x39ac>
   18724:	ldr	r3, [pc, #1196]	; 18bd8 <main@@Base+0x3e40>
   18728:	add	r3, pc, r3
   1872c:	mov	r2, #189	; 0xbd
   18730:	ldr	r1, [pc, #1188]	; 18bdc <main@@Base+0x3e44>
   18734:	add	r1, pc, r1
   18738:	ldr	r0, [pc, #1184]	; 18be0 <main@@Base+0x3e48>
   1873c:	add	r0, pc, r0
   18740:	bl	12528 <__assert_fail@plt>
   18744:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   18748:	adds	r2, r2, r2
   1874c:	adc	r3, r3, r3
   18750:	mov	r0, r2
   18754:	mov	r1, r3
   18758:	mov	r2, #0
   1875c:	ldr	r3, [pc, #1152]	; 18be4 <main@@Base+0x3e4c>
   18760:	cmp	r1, r3
   18764:	cmpeq	r0, r2
   18768:	bls	18798 <main@@Base+0x3a00>
   1876c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   18770:	mov	r4, r3
   18774:	mov	r5, #0
   18778:	mov	r2, r4
   1877c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18780:	ldr	r1, [pc, #1120]	; 18be8 <main@@Base+0x3e50>
   18784:	add	r1, pc, r1
   18788:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1878c:	bl	12504 <sprintf@plt>
   18790:	mov	r3, r0
   18794:	b	18bcc <main@@Base+0x3e34>
   18798:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   1879c:	cmp	r2, #0
   187a0:	sbcs	r3, r3, #0
   187a4:	bge	187d4 <main@@Base+0x3a3c>
   187a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   187ac:	add	r2, r3, #1
   187b0:	str	r2, [fp, #-32]	; 0xffffffe0
   187b4:	mov	r2, #45	; 0x2d
   187b8:	strb	r2, [r3]
   187bc:	vldr	d7, [fp, #-60]	; 0xffffffc4
   187c0:	vneg.f64	d7, d7
   187c4:	vstr	d7, [fp, #-60]	; 0xffffffc4
   187c8:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   187cc:	add	r3, r3, #-2147483648	; 0x80000000
   187d0:	strd	r2, [fp, #-28]	; 0xffffffe4
   187d4:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   187d8:	orrs	r3, r2, r3
   187dc:	bne	18810 <main@@Base+0x3a78>
   187e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   187e4:	add	r2, r3, #1
   187e8:	str	r2, [fp, #-32]	; 0xffffffe0
   187ec:	mov	r2, #48	; 0x30
   187f0:	strb	r2, [r3]
   187f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   187f8:	mov	r2, #0
   187fc:	strb	r2, [r3]
   18800:	ldr	r2, [fp, #-32]	; 0xffffffe0
   18804:	ldr	r3, [fp, #-64]	; 0xffffffc0
   18808:	sub	r3, r2, r3
   1880c:	b	18bcc <main@@Base+0x3e34>
   18810:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   18814:	mov	r0, #0
   18818:	ldr	r1, [pc, #972]	; 18bec <main@@Base+0x3e54>
   1881c:	cmp	r3, r1
   18820:	cmpeq	r2, r0
   18824:	bne	18880 <main@@Base+0x3ae8>
   18828:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1882c:	add	r2, r3, #1
   18830:	str	r2, [fp, #-32]	; 0xffffffe0
   18834:	mov	r2, #105	; 0x69
   18838:	strb	r2, [r3]
   1883c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18840:	add	r2, r3, #1
   18844:	str	r2, [fp, #-32]	; 0xffffffe0
   18848:	mov	r2, #110	; 0x6e
   1884c:	strb	r2, [r3]
   18850:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18854:	add	r2, r3, #1
   18858:	str	r2, [fp, #-32]	; 0xffffffe0
   1885c:	mov	r2, #102	; 0x66
   18860:	strb	r2, [r3]
   18864:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18868:	mov	r2, #0
   1886c:	strb	r2, [r3]
   18870:	ldr	r2, [fp, #-32]	; 0xffffffe0
   18874:	ldr	r3, [fp, #-64]	; 0xffffffc0
   18878:	sub	r3, r2, r3
   1887c:	b	18bcc <main@@Base+0x3e34>
   18880:	sub	r2, fp, #44	; 0x2c
   18884:	sub	r3, fp, #48	; 0x30
   18888:	mov	r1, r3
   1888c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18890:	vldr	d0, [fp, #-60]	; 0xffffffc4
   18894:	bl	1821c <main@@Base+0x3484>
   18898:	str	r0, [fp, #-36]	; 0xffffffdc
   1889c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   188a0:	cmp	r3, #0
   188a4:	bne	188d4 <main@@Base+0x3b3c>
   188a8:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   188ac:	ldr	r1, [pc, #828]	; 18bf0 <main@@Base+0x3e58>
   188b0:	add	r1, pc, r1
   188b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   188b8:	bl	12504 <sprintf@plt>
   188bc:	mov	r1, r0
   188c0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   188c4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   188c8:	sub	r3, r2, r3
   188cc:	add	r3, r1, r3
   188d0:	b	18bcc <main@@Base+0x3e34>
   188d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   188d8:	rsb	r2, r3, #0
   188dc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   188e0:	sub	r3, r3, #1
   188e4:	cmp	r3, #1
   188e8:	movge	r3, r3
   188ec:	movlt	r3, #1
   188f0:	cmp	r2, r3
   188f4:	movlt	r3, r2
   188f8:	movge	r3, r3
   188fc:	str	r3, [fp, #-40]	; 0xffffffd8
   18900:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18904:	cmp	r3, #0
   18908:	bge	189d8 <main@@Base+0x3c40>
   1890c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   18910:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18914:	add	r3, r2, r3
   18918:	cmn	r3, #2
   1891c:	blt	189d8 <main@@Base+0x3c40>
   18920:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18924:	rsb	r2, r3, #0
   18928:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1892c:	cmp	r2, r3
   18930:	blt	189d8 <main@@Base+0x3c40>
   18934:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18938:	rsb	r3, r3, #0
   1893c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   18940:	sub	r3, r3, r2
   18944:	add	r3, r3, #2
   18948:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1894c:	add	r3, r2, r3
   18950:	ldr	r2, [fp, #-48]	; 0xffffffd0
   18954:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18958:	mov	r0, r3
   1895c:	bl	1242c <memmove@plt>
   18960:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18964:	mov	r2, #48	; 0x30
   18968:	strb	r2, [r3]
   1896c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18970:	add	r3, r3, #1
   18974:	mov	r2, #46	; 0x2e
   18978:	strb	r2, [r3]
   1897c:	mov	r3, #2
   18980:	str	r3, [fp, #-16]
   18984:	b	189a8 <main@@Base+0x3c10>
   18988:	ldr	r3, [fp, #-16]
   1898c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   18990:	add	r3, r2, r3
   18994:	mov	r2, #48	; 0x30
   18998:	strb	r2, [r3]
   1899c:	ldr	r3, [fp, #-16]
   189a0:	add	r3, r3, #1
   189a4:	str	r3, [fp, #-16]
   189a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   189ac:	rsb	r2, r3, #2
   189b0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   189b4:	sub	r2, r2, r3
   189b8:	ldr	r3, [fp, #-16]
   189bc:	cmp	r2, r3
   189c0:	bgt	18988 <main@@Base+0x3bf0>
   189c4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   189c8:	ldr	r3, [fp, #-16]
   189cc:	add	r3, r2, r3
   189d0:	str	r3, [fp, #-48]	; 0xffffffd0
   189d4:	b	18b98 <main@@Base+0x3e00>
   189d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   189dc:	cmp	r3, #0
   189e0:	bge	18ae8 <main@@Base+0x3d50>
   189e4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   189e8:	cmp	r3, #1
   189ec:	ble	18ae8 <main@@Base+0x3d50>
   189f0:	mov	r3, #0
   189f4:	str	r3, [fp, #-16]
   189f8:	b	18a40 <main@@Base+0x3ca8>
   189fc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   18a00:	ldr	r3, [fp, #-16]
   18a04:	sub	r3, r2, r3
   18a08:	mov	r2, r3
   18a0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18a10:	add	r3, r3, r2
   18a14:	ldr	r1, [fp, #-48]	; 0xffffffd0
   18a18:	ldr	r2, [fp, #-16]
   18a1c:	sub	r2, r1, r2
   18a20:	sub	r2, r2, #1
   18a24:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18a28:	add	r2, r1, r2
   18a2c:	ldrb	r2, [r2]
   18a30:	strb	r2, [r3]
   18a34:	ldr	r3, [fp, #-16]
   18a38:	add	r3, r3, #1
   18a3c:	str	r3, [fp, #-16]
   18a40:	ldr	r2, [fp, #-16]
   18a44:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18a48:	cmp	r2, r3
   18a4c:	blt	189fc <main@@Base+0x3c64>
   18a50:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18a54:	add	r2, r3, #1
   18a58:	str	r2, [fp, #-48]	; 0xffffffd0
   18a5c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18a60:	sub	r3, r3, r2
   18a64:	mov	r2, r3
   18a68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18a6c:	add	r3, r3, r2
   18a70:	mov	r2, #46	; 0x2e
   18a74:	strb	r2, [r3]
   18a78:	ldr	r2, [fp, #-44]	; 0xffffffd4
   18a7c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18a80:	add	r3, r2, r3
   18a84:	str	r3, [fp, #-44]	; 0xffffffd4
   18a88:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18a8c:	cmp	r3, #0
   18a90:	beq	18b98 <main@@Base+0x3e00>
   18a94:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18a98:	add	r2, r3, #1
   18a9c:	str	r2, [fp, #-48]	; 0xffffffd0
   18aa0:	mov	r2, r3
   18aa4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18aa8:	add	r3, r3, r2
   18aac:	mov	r2, #101	; 0x65
   18ab0:	strb	r2, [r3]
   18ab4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   18ab8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18abc:	mov	r1, r3
   18ac0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18ac4:	add	r3, r3, r1
   18ac8:	mov	r1, r3
   18acc:	mov	r0, r2
   18ad0:	bl	18554 <main@@Base+0x37bc>
   18ad4:	mov	r2, r0
   18ad8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18adc:	add	r3, r2, r3
   18ae0:	str	r3, [fp, #-48]	; 0xffffffd0
   18ae4:	b	18b98 <main@@Base+0x3e00>
   18ae8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18aec:	cmp	r3, #0
   18af0:	blt	18b00 <main@@Base+0x3d68>
   18af4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18af8:	cmp	r3, #2
   18afc:	ble	18b54 <main@@Base+0x3dbc>
   18b00:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18b04:	add	r2, r3, #1
   18b08:	str	r2, [fp, #-48]	; 0xffffffd0
   18b0c:	mov	r2, r3
   18b10:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18b14:	add	r3, r3, r2
   18b18:	mov	r2, #101	; 0x65
   18b1c:	strb	r2, [r3]
   18b20:	ldr	r2, [fp, #-44]	; 0xffffffd4
   18b24:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18b28:	mov	r1, r3
   18b2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18b30:	add	r3, r3, r1
   18b34:	mov	r1, r3
   18b38:	mov	r0, r2
   18b3c:	bl	18554 <main@@Base+0x37bc>
   18b40:	mov	r2, r0
   18b44:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18b48:	add	r3, r2, r3
   18b4c:	str	r3, [fp, #-48]	; 0xffffffd0
   18b50:	b	18b98 <main@@Base+0x3e00>
   18b54:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18b58:	cmp	r3, #0
   18b5c:	ble	18b98 <main@@Base+0x3e00>
   18b60:	b	18b84 <main@@Base+0x3dec>
   18b64:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18b68:	add	r2, r3, #1
   18b6c:	str	r2, [fp, #-48]	; 0xffffffd0
   18b70:	mov	r2, r3
   18b74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18b78:	add	r3, r3, r2
   18b7c:	mov	r2, #48	; 0x30
   18b80:	strb	r2, [r3]
   18b84:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18b88:	sub	r2, r3, #1
   18b8c:	str	r2, [fp, #-44]	; 0xffffffd4
   18b90:	cmp	r3, #0
   18b94:	bgt	18b64 <main@@Base+0x3dcc>
   18b98:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18b9c:	mov	r2, r3
   18ba0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18ba4:	add	r3, r3, r2
   18ba8:	mov	r2, #0
   18bac:	strb	r2, [r3]
   18bb0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18bb4:	mov	r2, r3
   18bb8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18bbc:	add	r3, r3, r2
   18bc0:	mov	r2, r3
   18bc4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   18bc8:	sub	r3, r2, r3
   18bcc:	mov	r0, r3
   18bd0:	sub	sp, fp, #12
   18bd4:	pop	{r4, r5, fp, pc}
   18bd8:	andeq	fp, r0, r0, lsl #27
   18bdc:	andeq	fp, r0, r8, lsl sl
   18be0:	andeq	fp, r0, r8, lsr #21
   18be4:			; <UNDEFINED> instruction: 0xffe00000
   18be8:	andeq	fp, r0, r4, ror #20
   18bec:	svcvc	0x00f00000	; IMB
   18bf0:	andeq	fp, r0, r8, asr #18
   18bf4:	push	{fp}		; (str fp, [sp, #-4]!)
   18bf8:	add	fp, sp, #0
   18bfc:	sub	sp, sp, #12
   18c00:	str	r0, [fp, #-8]
   18c04:	ldr	r3, [fp, #-8]
   18c08:	cmp	r3, #5
   18c0c:	addls	pc, pc, r3, lsl #2
   18c10:	b	18c74 <main@@Base+0x3edc>
   18c14:	b	18c2c <main@@Base+0x3e94>
   18c18:	b	18c50 <main@@Base+0x3eb8>
   18c1c:	b	18c38 <main@@Base+0x3ea0>
   18c20:	b	18c44 <main@@Base+0x3eac>
   18c24:	b	18c5c <main@@Base+0x3ec4>
   18c28:	b	18c68 <main@@Base+0x3ed0>
   18c2c:	ldr	r3, [pc, #88]	; 18c8c <main@@Base+0x3ef4>
   18c30:	add	r3, pc, r3
   18c34:	b	18c7c <main@@Base+0x3ee4>
   18c38:	ldr	r3, [pc, #80]	; 18c90 <main@@Base+0x3ef8>
   18c3c:	add	r3, pc, r3
   18c40:	b	18c7c <main@@Base+0x3ee4>
   18c44:	ldr	r3, [pc, #72]	; 18c94 <main@@Base+0x3efc>
   18c48:	add	r3, pc, r3
   18c4c:	b	18c7c <main@@Base+0x3ee4>
   18c50:	ldr	r3, [pc, #64]	; 18c98 <main@@Base+0x3f00>
   18c54:	add	r3, pc, r3
   18c58:	b	18c7c <main@@Base+0x3ee4>
   18c5c:	ldr	r3, [pc, #56]	; 18c9c <main@@Base+0x3f04>
   18c60:	add	r3, pc, r3
   18c64:	b	18c7c <main@@Base+0x3ee4>
   18c68:	ldr	r3, [pc, #48]	; 18ca0 <main@@Base+0x3f08>
   18c6c:	add	r3, pc, r3
   18c70:	b	18c7c <main@@Base+0x3ee4>
   18c74:	ldr	r3, [pc, #40]	; 18ca4 <main@@Base+0x3f0c>
   18c78:	add	r3, pc, r3
   18c7c:	mov	r0, r3
   18c80:	add	sp, fp, #0
   18c84:	pop	{fp}		; (ldr fp, [sp], #4)
   18c88:	bx	lr
   18c8c:	ldrdeq	fp, [r0], -r0
   18c90:	andeq	fp, r0, r8, asr #11
   18c94:	ldrdeq	fp, [r0], -r0
   18c98:	ldrdeq	fp, [r0], -r4
   18c9c:	ldrdeq	fp, [r0], -ip
   18ca0:	andeq	fp, r0, r4, ror #11
   18ca4:	strdeq	fp, [r0], -r0
   18ca8:	push	{fp}		; (str fp, [sp, #-4]!)
   18cac:	add	fp, sp, #0
   18cb0:	sub	sp, sp, #28
   18cb4:	str	r0, [fp, #-24]	; 0xffffffe8
   18cb8:	str	r1, [fp, #-28]	; 0xffffffe4
   18cbc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18cc0:	ldr	r3, [pc, #156]	; 18d64 <main@@Base+0x3fcc>
   18cc4:	umull	r1, r3, r3, r2
   18cc8:	lsr	r1, r3, #1
   18ccc:	mov	r3, r1
   18cd0:	lsl	r3, r3, #1
   18cd4:	add	r3, r3, r1
   18cd8:	sub	r3, r2, r3
   18cdc:	str	r3, [fp, #-12]
   18ce0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18ce4:	lsl	r3, r3, #2
   18ce8:	ldr	r2, [pc, #116]	; 18d64 <main@@Base+0x3fcc>
   18cec:	umull	r2, r3, r2, r3
   18cf0:	lsr	r3, r3, #1
   18cf4:	add	r3, r3, #3
   18cf8:	bic	r3, r3, #3
   18cfc:	str	r3, [fp, #-8]
   18d00:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18d04:	and	r3, r3, #128	; 0x80
   18d08:	str	r3, [fp, #-16]
   18d0c:	ldr	r3, [fp, #-16]
   18d10:	cmp	r3, #0
   18d14:	bne	18d50 <main@@Base+0x3fb8>
   18d18:	ldr	r3, [fp, #-12]
   18d1c:	cmp	r3, #1
   18d20:	beq	18d40 <main@@Base+0x3fa8>
   18d24:	cmp	r3, #2
   18d28:	beq	18d30 <main@@Base+0x3f98>
   18d2c:	b	18d50 <main@@Base+0x3fb8>
   18d30:	ldr	r3, [fp, #-8]
   18d34:	sub	r3, r3, #1
   18d38:	str	r3, [fp, #-8]
   18d3c:	b	18d50 <main@@Base+0x3fb8>
   18d40:	ldr	r3, [fp, #-8]
   18d44:	sub	r3, r3, #2
   18d48:	str	r3, [fp, #-8]
   18d4c:	nop			; (mov r0, r0)
   18d50:	ldr	r3, [fp, #-8]
   18d54:	mov	r0, r3
   18d58:	add	sp, fp, #0
   18d5c:	pop	{fp}		; (ldr fp, [sp], #4)
   18d60:	bx	lr
   18d64:	bge	feac3818 <__bss_end__@@Base+0xfea8e778>
   18d68:	push	{fp}		; (str fp, [sp, #-4]!)
   18d6c:	add	fp, sp, #0
   18d70:	sub	sp, sp, #20
   18d74:	str	r0, [fp, #-16]
   18d78:	ldr	r3, [fp, #-16]
   18d7c:	and	r3, r3, #3
   18d80:	str	r3, [fp, #-8]
   18d84:	ldr	r3, [fp, #-16]
   18d88:	lsr	r2, r3, #2
   18d8c:	mov	r3, r2
   18d90:	lsl	r3, r3, #1
   18d94:	add	r3, r3, r2
   18d98:	str	r3, [fp, #-12]
   18d9c:	ldr	r3, [fp, #-8]
   18da0:	cmp	r3, #2
   18da4:	beq	18dbc <main@@Base+0x4024>
   18da8:	cmp	r3, #3
   18dac:	bne	18dc8 <main@@Base+0x4030>
   18db0:	ldr	r3, [fp, #-12]
   18db4:	add	r3, r3, #2
   18db8:	b	18dcc <main@@Base+0x4034>
   18dbc:	ldr	r3, [fp, #-12]
   18dc0:	add	r3, r3, #1
   18dc4:	b	18dcc <main@@Base+0x4034>
   18dc8:	ldr	r3, [fp, #-12]
   18dcc:	mov	r0, r3
   18dd0:	add	sp, fp, #0
   18dd4:	pop	{fp}		; (ldr fp, [sp], #4)
   18dd8:	bx	lr
   18ddc:	push	{fp}		; (str fp, [sp, #-4]!)
   18de0:	add	fp, sp, #0
   18de4:	sub	sp, sp, #52	; 0x34
   18de8:	str	r0, [fp, #-40]	; 0xffffffd8
   18dec:	str	r1, [fp, #-44]	; 0xffffffd4
   18df0:	str	r2, [fp, #-48]	; 0xffffffd0
   18df4:	str	r3, [fp, #-52]	; 0xffffffcc
   18df8:	ldr	r3, [pc, #920]	; 19198 <main@@Base+0x4400>
   18dfc:	add	r3, pc, r3
   18e00:	str	r3, [fp, #-20]	; 0xffffffec
   18e04:	ldr	r3, [pc, #912]	; 1919c <main@@Base+0x4404>
   18e08:	add	r3, pc, r3
   18e0c:	str	r3, [fp, #-24]	; 0xffffffe8
   18e10:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18e14:	str	r3, [fp, #-28]	; 0xffffffe4
   18e18:	ldr	r3, [fp, #4]
   18e1c:	and	r3, r3, #128	; 0x80
   18e20:	str	r3, [fp, #-32]	; 0xffffffe0
   18e24:	mov	r3, #0
   18e28:	str	r3, [fp, #-12]
   18e2c:	mov	r3, #3
   18e30:	str	r3, [fp, #-16]
   18e34:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18e38:	cmp	r3, #0
   18e3c:	bne	18e4c <main@@Base+0x40b4>
   18e40:	mov	r3, #2
   18e44:	str	r3, [fp, #-16]
   18e48:	b	1913c <main@@Base+0x43a4>
   18e4c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18e50:	ldr	r3, [r3]
   18e54:	str	r3, [fp, #-12]
   18e58:	ldr	r3, [fp, #4]
   18e5c:	bic	r3, r3, #224	; 0xe0
   18e60:	str	r3, [fp, #4]
   18e64:	ldr	r3, [fp, #4]
   18e68:	cmp	r3, #0
   18e6c:	beq	18e7c <main@@Base+0x40e4>
   18e70:	cmp	r3, #1
   18e74:	beq	18e88 <main@@Base+0x40f0>
   18e78:	b	1913c <main@@Base+0x43a4>
   18e7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18e80:	str	r3, [fp, #-8]
   18e84:	b	18e94 <main@@Base+0x40fc>
   18e88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18e8c:	str	r3, [fp, #-8]
   18e90:	nop			; (mov r0, r0)
   18e94:	mov	r3, #0
   18e98:	str	r3, [fp, #-16]
   18e9c:	b	18fa0 <main@@Base+0x4208>
   18ea0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18ea4:	ldrb	r3, [r3]
   18ea8:	lsr	r3, r3, #2
   18eac:	uxtb	r3, r3
   18eb0:	mov	r2, r3
   18eb4:	ldr	r3, [fp, #-8]
   18eb8:	add	r3, r3, r2
   18ebc:	ldrb	r2, [r3]
   18ec0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18ec4:	strb	r2, [r3]
   18ec8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18ecc:	add	r3, r3, #1
   18ed0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   18ed4:	ldrb	r2, [r2]
   18ed8:	lsl	r2, r2, #4
   18edc:	and	r2, r2, #48	; 0x30
   18ee0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18ee4:	add	r1, r1, #1
   18ee8:	ldrb	r1, [r1]
   18eec:	lsr	r1, r1, #4
   18ef0:	uxtb	r1, r1
   18ef4:	orr	r2, r2, r1
   18ef8:	mov	r1, r2
   18efc:	ldr	r2, [fp, #-8]
   18f00:	add	r2, r2, r1
   18f04:	ldrb	r2, [r2]
   18f08:	strb	r2, [r3]
   18f0c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18f10:	add	r3, r3, #2
   18f14:	ldr	r2, [fp, #-44]	; 0xffffffd4
   18f18:	add	r2, r2, #1
   18f1c:	ldrb	r2, [r2]
   18f20:	lsl	r2, r2, #2
   18f24:	and	r2, r2, #60	; 0x3c
   18f28:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18f2c:	add	r1, r1, #2
   18f30:	ldrb	r1, [r1]
   18f34:	lsr	r1, r1, #6
   18f38:	uxtb	r1, r1
   18f3c:	orr	r2, r2, r1
   18f40:	mov	r1, r2
   18f44:	ldr	r2, [fp, #-8]
   18f48:	add	r2, r2, r1
   18f4c:	ldrb	r2, [r2]
   18f50:	strb	r2, [r3]
   18f54:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18f58:	add	r3, r3, #3
   18f5c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   18f60:	add	r2, r2, #2
   18f64:	ldrb	r2, [r2]
   18f68:	and	r2, r2, #63	; 0x3f
   18f6c:	ldr	r1, [fp, #-8]
   18f70:	add	r2, r1, r2
   18f74:	ldrb	r2, [r2]
   18f78:	strb	r2, [r3]
   18f7c:	ldr	r3, [fp, #-12]
   18f80:	sub	r3, r3, #3
   18f84:	str	r3, [fp, #-12]
   18f88:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18f8c:	add	r3, r3, #4
   18f90:	str	r3, [fp, #-40]	; 0xffffffd8
   18f94:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18f98:	add	r3, r3, #3
   18f9c:	str	r3, [fp, #-44]	; 0xffffffd4
   18fa0:	ldr	r3, [fp, #-12]
   18fa4:	cmp	r3, #2
   18fa8:	bhi	18ea0 <main@@Base+0x4108>
   18fac:	ldr	r3, [fp, #-12]
   18fb0:	cmp	r3, #1
   18fb4:	beq	19088 <main@@Base+0x42f0>
   18fb8:	cmp	r3, #2
   18fbc:	bne	1911c <main@@Base+0x4384>
   18fc0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18fc4:	ldrb	r3, [r3]
   18fc8:	lsr	r3, r3, #2
   18fcc:	uxtb	r3, r3
   18fd0:	mov	r2, r3
   18fd4:	ldr	r3, [fp, #-8]
   18fd8:	add	r3, r3, r2
   18fdc:	ldrb	r2, [r3]
   18fe0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18fe4:	strb	r2, [r3]
   18fe8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18fec:	add	r3, r3, #1
   18ff0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   18ff4:	ldrb	r2, [r2]
   18ff8:	lsl	r2, r2, #4
   18ffc:	and	r2, r2, #48	; 0x30
   19000:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19004:	add	r1, r1, #1
   19008:	ldrb	r1, [r1]
   1900c:	lsr	r1, r1, #4
   19010:	uxtb	r1, r1
   19014:	orr	r2, r2, r1
   19018:	mov	r1, r2
   1901c:	ldr	r2, [fp, #-8]
   19020:	add	r2, r2, r1
   19024:	ldrb	r2, [r2]
   19028:	strb	r2, [r3]
   1902c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19030:	add	r3, r3, #2
   19034:	ldr	r2, [fp, #-44]	; 0xffffffd4
   19038:	add	r2, r2, #1
   1903c:	ldrb	r2, [r2]
   19040:	lsl	r2, r2, #2
   19044:	and	r2, r2, #60	; 0x3c
   19048:	ldr	r1, [fp, #-8]
   1904c:	add	r2, r1, r2
   19050:	ldrb	r2, [r2]
   19054:	strb	r2, [r3]
   19058:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1905c:	add	r3, r3, #3
   19060:	str	r3, [fp, #-40]	; 0xffffffd8
   19064:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19068:	cmp	r3, #0
   1906c:	beq	19128 <main@@Base+0x4390>
   19070:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19074:	add	r2, r3, #1
   19078:	str	r2, [fp, #-40]	; 0xffffffd8
   1907c:	mov	r2, #61	; 0x3d
   19080:	strb	r2, [r3]
   19084:	b	19128 <main@@Base+0x4390>
   19088:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1908c:	ldrb	r3, [r3]
   19090:	lsr	r3, r3, #2
   19094:	uxtb	r3, r3
   19098:	mov	r2, r3
   1909c:	ldr	r3, [fp, #-8]
   190a0:	add	r3, r3, r2
   190a4:	ldrb	r2, [r3]
   190a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   190ac:	strb	r2, [r3]
   190b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   190b4:	add	r3, r3, #1
   190b8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   190bc:	ldrb	r2, [r2]
   190c0:	lsl	r2, r2, #4
   190c4:	and	r2, r2, #48	; 0x30
   190c8:	ldr	r1, [fp, #-8]
   190cc:	add	r2, r1, r2
   190d0:	ldrb	r2, [r2]
   190d4:	strb	r2, [r3]
   190d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   190dc:	add	r3, r3, #2
   190e0:	str	r3, [fp, #-40]	; 0xffffffd8
   190e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   190e8:	cmp	r3, #0
   190ec:	beq	19130 <main@@Base+0x4398>
   190f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   190f4:	add	r2, r3, #1
   190f8:	str	r2, [fp, #-40]	; 0xffffffd8
   190fc:	mov	r2, #61	; 0x3d
   19100:	strb	r2, [r3]
   19104:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19108:	add	r2, r3, #1
   1910c:	str	r2, [fp, #-40]	; 0xffffffd8
   19110:	mov	r2, #61	; 0x3d
   19114:	strb	r2, [r3]
   19118:	b	19130 <main@@Base+0x4398>
   1911c:	mov	r3, #0
   19120:	str	r3, [fp, #-32]	; 0xffffffe0
   19124:	b	19134 <main@@Base+0x439c>
   19128:	nop			; (mov r0, r0)
   1912c:	b	19134 <main@@Base+0x439c>
   19130:	nop			; (mov r0, r0)
   19134:	mov	r3, #0
   19138:	str	r3, [fp, #-12]
   1913c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19140:	cmp	r3, #0
   19144:	beq	19160 <main@@Base+0x43c8>
   19148:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1914c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19150:	sub	r3, r2, r3
   19154:	mov	r2, r3
   19158:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1915c:	str	r2, [r3]
   19160:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19164:	cmp	r3, #0
   19168:	beq	19184 <main@@Base+0x43ec>
   1916c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19170:	ldr	r2, [r3]
   19174:	ldr	r3, [fp, #-12]
   19178:	sub	r2, r2, r3
   1917c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19180:	str	r2, [r3]
   19184:	ldr	r3, [fp, #-16]
   19188:	mov	r0, r3
   1918c:	add	sp, fp, #0
   19190:	pop	{fp}		; (ldr fp, [sp], #4)
   19194:	bx	lr
   19198:	andeq	fp, r0, ip, ror r4
   1919c:			; <UNDEFINED> instruction: 0x0000b4b4
   191a0:	push	{fp}		; (str fp, [sp, #-4]!)
   191a4:	add	fp, sp, #0
   191a8:	sub	sp, sp, #60	; 0x3c
   191ac:	str	r0, [fp, #-48]	; 0xffffffd0
   191b0:	str	r1, [fp, #-52]	; 0xffffffcc
   191b4:	str	r2, [fp, #-56]	; 0xffffffc8
   191b8:	str	r3, [fp, #-60]	; 0xffffffc4
   191bc:	mov	r3, #0
   191c0:	str	r3, [fp, #-8]
   191c4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   191c8:	str	r3, [fp, #-36]	; 0xffffffdc
   191cc:	mvn	r3, #0
   191d0:	str	r3, [fp, #-20]	; 0xffffffec
   191d4:	mvn	r3, #0
   191d8:	str	r3, [fp, #-24]	; 0xffffffe8
   191dc:	ldr	r3, [pc, #1376]	; 19744 <main@@Base+0x49ac>
   191e0:	add	r3, pc, r3
   191e4:	str	r3, [fp, #-32]	; 0xffffffe0
   191e8:	ldr	r3, [fp, #4]
   191ec:	and	r3, r3, #32
   191f0:	str	r3, [fp, #-40]	; 0xffffffd8
   191f4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   191f8:	cmp	r3, #0
   191fc:	beq	1920c <main@@Base+0x4474>
   19200:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19204:	ldr	r3, [r3]
   19208:	str	r3, [fp, #-24]	; 0xffffffe8
   1920c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19210:	str	r3, [fp, #-28]	; 0xffffffe4
   19214:	ldr	r3, [fp, #4]
   19218:	bic	r3, r3, #224	; 0xe0
   1921c:	str	r3, [fp, #4]
   19220:	ldr	r3, [fp, #4]
   19224:	cmp	r3, #0
   19228:	beq	19238 <main@@Base+0x44a0>
   1922c:	cmp	r3, #1
   19230:	beq	19260 <main@@Base+0x44c8>
   19234:	b	19288 <main@@Base+0x44f0>
   19238:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1923c:	cmp	r3, #0
   19240:	beq	19250 <main@@Base+0x44b8>
   19244:	ldr	r3, [pc, #1276]	; 19748 <main@@Base+0x49b0>
   19248:	add	r3, pc, r3
   1924c:	b	19258 <main@@Base+0x44c0>
   19250:	ldr	r3, [pc, #1268]	; 1974c <main@@Base+0x49b4>
   19254:	add	r3, pc, r3
   19258:	str	r3, [fp, #-32]	; 0xffffffe0
   1925c:	b	19294 <main@@Base+0x44fc>
   19260:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19264:	cmp	r3, #0
   19268:	beq	19278 <main@@Base+0x44e0>
   1926c:	ldr	r3, [pc, #1244]	; 19750 <main@@Base+0x49b8>
   19270:	add	r3, pc, r3
   19274:	b	19280 <main@@Base+0x44e8>
   19278:	ldr	r3, [pc, #1236]	; 19754 <main@@Base+0x49bc>
   1927c:	add	r3, pc, r3
   19280:	str	r3, [fp, #-32]	; 0xffffffe0
   19284:	b	19294 <main@@Base+0x44fc>
   19288:	mov	r3, #3
   1928c:	str	r3, [fp, #-8]
   19290:	b	1957c <main@@Base+0x47e4>
   19294:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19298:	cmp	r3, #0
   1929c:	beq	19570 <main@@Base+0x47d8>
   192a0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   192a4:	ldr	r3, [r3]
   192a8:	cmp	r3, #0
   192ac:	beq	19570 <main@@Base+0x47d8>
   192b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   192b4:	ldr	r3, [r3]
   192b8:	str	r3, [fp, #-20]	; 0xffffffec
   192bc:	b	19570 <main@@Base+0x47d8>
   192c0:	mov	r3, #0
   192c4:	str	r3, [fp, #-12]
   192c8:	b	19490 <main@@Base+0x46f8>
   192cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   192d0:	ldr	r3, [fp, #-12]
   192d4:	cmp	r2, r3
   192d8:	bne	192f8 <main@@Base+0x4560>
   192dc:	ldr	r3, [fp, #-12]
   192e0:	str	r3, [fp, #-16]
   192e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   192e8:	ldr	r3, [fp, #-12]
   192ec:	sub	r3, r2, r3
   192f0:	str	r3, [fp, #-24]	; 0xffffffe8
   192f4:	b	195cc <main@@Base+0x4834>
   192f8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   192fc:	ldr	r3, [fp, #-12]
   19300:	add	r3, r2, r3
   19304:	ldrb	r3, [r3]
   19308:	mov	r2, r3
   1930c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19310:	add	r3, r3, r2
   19314:	ldrb	r1, [r3]
   19318:	sub	r2, fp, #44	; 0x2c
   1931c:	ldr	r3, [fp, #-12]
   19320:	add	r3, r2, r3
   19324:	mov	r2, r1
   19328:	strb	r2, [r3]
   1932c:	sub	r2, fp, #44	; 0x2c
   19330:	ldr	r3, [fp, #-12]
   19334:	add	r3, r2, r3
   19338:	ldrb	r2, [r3]
   1933c:	ldr	r3, [pc, #1044]	; 19758 <main@@Base+0x49c0>
   19340:	add	r3, pc, r3
   19344:	ldrb	r3, [r3]
   19348:	cmp	r2, r3
   1934c:	bcc	19484 <main@@Base+0x46ec>
   19350:	sub	r2, fp, #44	; 0x2c
   19354:	ldr	r3, [fp, #-12]
   19358:	add	r3, r2, r3
   1935c:	ldrb	r2, [r3]
   19360:	ldr	r3, [pc, #1012]	; 1975c <main@@Base+0x49c4>
   19364:	add	r3, pc, r3
   19368:	ldrb	r3, [r3]
   1936c:	cmp	r2, r3
   19370:	bne	1939c <main@@Base+0x4604>
   19374:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19378:	add	r3, r3, #1
   1937c:	str	r3, [fp, #-52]	; 0xffffffcc
   19380:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19384:	sub	r3, r3, #1
   19388:	str	r3, [fp, #-24]	; 0xffffffe8
   1938c:	ldr	r3, [fp, #-12]
   19390:	sub	r3, r3, #1
   19394:	str	r3, [fp, #-12]
   19398:	b	19484 <main@@Base+0x46ec>
   1939c:	ldr	r3, [fp, #-12]
   193a0:	str	r3, [fp, #-16]
   193a4:	sub	r2, fp, #44	; 0x2c
   193a8:	ldr	r3, [fp, #-12]
   193ac:	add	r3, r2, r3
   193b0:	ldrb	r2, [r3]
   193b4:	ldr	r3, [pc, #932]	; 19760 <main@@Base+0x49c8>
   193b8:	add	r3, pc, r3
   193bc:	ldrb	r3, [r3]
   193c0:	cmp	r2, r3
   193c4:	bne	19470 <main@@Base+0x46d8>
   193c8:	ldr	r3, [fp, #-12]
   193cc:	add	r3, r3, #1
   193d0:	str	r3, [fp, #-12]
   193d4:	b	1944c <main@@Base+0x46b4>
   193d8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   193dc:	ldr	r3, [fp, #-12]
   193e0:	add	r3, r2, r3
   193e4:	ldrb	r3, [r3]
   193e8:	mov	r2, r3
   193ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   193f0:	add	r3, r3, r2
   193f4:	ldrb	r2, [r3]
   193f8:	ldr	r3, [pc, #868]	; 19764 <main@@Base+0x49cc>
   193fc:	add	r3, pc, r3
   19400:	ldrb	r3, [r3]
   19404:	cmp	r2, r3
   19408:	beq	19440 <main@@Base+0x46a8>
   1940c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   19410:	ldr	r3, [fp, #-12]
   19414:	add	r3, r2, r3
   19418:	ldrb	r3, [r3]
   1941c:	mov	r2, r3
   19420:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19424:	add	r3, r3, r2
   19428:	ldrb	r2, [r3]
   1942c:	ldr	r3, [pc, #820]	; 19768 <main@@Base+0x49d0>
   19430:	add	r3, pc, r3
   19434:	ldrb	r3, [r3]
   19438:	cmp	r2, r3
   1943c:	bne	1946c <main@@Base+0x46d4>
   19440:	ldr	r3, [fp, #-12]
   19444:	add	r3, r3, #1
   19448:	str	r3, [fp, #-12]
   1944c:	ldr	r2, [fp, #-12]
   19450:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19454:	cmp	r2, r3
   19458:	bcs	19470 <main@@Base+0x46d8>
   1945c:	ldr	r3, [fp, #-12]
   19460:	cmp	r3, #7
   19464:	bls	193d8 <main@@Base+0x4640>
   19468:	b	19470 <main@@Base+0x46d8>
   1946c:	nop			; (mov r0, r0)
   19470:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19474:	ldr	r3, [fp, #-12]
   19478:	sub	r3, r2, r3
   1947c:	str	r3, [fp, #-24]	; 0xffffffe8
   19480:	b	195cc <main@@Base+0x4834>
   19484:	ldr	r3, [fp, #-12]
   19488:	add	r3, r3, #1
   1948c:	str	r3, [fp, #-12]
   19490:	ldr	r3, [fp, #-12]
   19494:	cmp	r3, #3
   19498:	bls	192cc <main@@Base+0x4534>
   1949c:	ldr	r3, [fp, #-20]	; 0xffffffec
   194a0:	cmp	r3, #2
   194a4:	bls	19714 <main@@Base+0x497c>
   194a8:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   194ac:	lsl	r3, r3, #2
   194b0:	sxtb	r2, r3
   194b4:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   194b8:	lsr	r3, r3, #4
   194bc:	uxtb	r3, r3
   194c0:	sxtb	r3, r3
   194c4:	orr	r3, r2, r3
   194c8:	sxtb	r3, r3
   194cc:	uxtb	r2, r3
   194d0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   194d4:	strb	r2, [r3]
   194d8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   194dc:	add	r3, r3, #1
   194e0:	ldrb	r2, [fp, #-43]	; 0xffffffd5
   194e4:	lsl	r2, r2, #4
   194e8:	sxtb	r1, r2
   194ec:	ldrb	r2, [fp, #-42]	; 0xffffffd6
   194f0:	lsr	r2, r2, #2
   194f4:	uxtb	r2, r2
   194f8:	sxtb	r2, r2
   194fc:	orr	r2, r1, r2
   19500:	sxtb	r2, r2
   19504:	uxtb	r2, r2
   19508:	strb	r2, [r3]
   1950c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19510:	add	r3, r3, #2
   19514:	ldrb	r2, [fp, #-42]	; 0xffffffd6
   19518:	lsl	r2, r2, #6
   1951c:	sxtb	r1, r2
   19520:	ldrb	r2, [fp, #-41]	; 0xffffffd7
   19524:	sxtb	r2, r2
   19528:	orr	r2, r1, r2
   1952c:	sxtb	r2, r2
   19530:	uxtb	r2, r2
   19534:	strb	r2, [r3]
   19538:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1953c:	add	r3, r3, #3
   19540:	str	r3, [fp, #-48]	; 0xffffffd0
   19544:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19548:	add	r3, r3, #4
   1954c:	str	r3, [fp, #-52]	; 0xffffffcc
   19550:	ldr	r3, [fp, #-20]	; 0xffffffec
   19554:	sub	r3, r3, #3
   19558:	str	r3, [fp, #-20]	; 0xffffffec
   1955c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19560:	sub	r3, r3, #4
   19564:	str	r3, [fp, #-24]	; 0xffffffe8
   19568:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1956c:	str	r3, [fp, #-28]	; 0xffffffe4
   19570:	ldr	r3, [fp, #-20]	; 0xffffffec
   19574:	cmp	r3, #0
   19578:	bne	192c0 <main@@Base+0x4528>
   1957c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19580:	cmp	r3, #0
   19584:	beq	195a0 <main@@Base+0x4808>
   19588:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1958c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19590:	sub	r3, r2, r3
   19594:	mov	r2, r3
   19598:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1959c:	str	r2, [r3]
   195a0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   195a4:	cmp	r3, #0
   195a8:	beq	195c4 <main@@Base+0x482c>
   195ac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   195b0:	ldr	r2, [r3]
   195b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   195b8:	sub	r2, r2, r3
   195bc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   195c0:	str	r2, [r3]
   195c4:	ldr	r3, [fp, #-8]
   195c8:	b	19734 <main@@Base+0x499c>
   195cc:	ldr	r3, [fp, #-16]
   195d0:	cmp	r3, #2
   195d4:	beq	195ec <main@@Base+0x4854>
   195d8:	cmp	r3, #3
   195dc:	beq	1964c <main@@Base+0x48b4>
   195e0:	cmp	r3, #0
   195e4:	beq	196ec <main@@Base+0x4954>
   195e8:	b	196e0 <main@@Base+0x4948>
   195ec:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   195f0:	lsl	r3, r3, #4
   195f4:	uxtb	r3, r3
   195f8:	cmp	r3, #0
   195fc:	bne	196fc <main@@Base+0x4964>
   19600:	ldr	r3, [fp, #-20]	; 0xffffffec
   19604:	cmp	r3, #0
   19608:	beq	1971c <main@@Base+0x4984>
   1960c:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   19610:	lsl	r3, r3, #2
   19614:	sxtb	r2, r3
   19618:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   1961c:	lsr	r3, r3, #4
   19620:	uxtb	r3, r3
   19624:	sxtb	r3, r3
   19628:	orr	r3, r2, r3
   1962c:	sxtb	r3, r3
   19630:	uxtb	r2, r3
   19634:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19638:	strb	r2, [r3]
   1963c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19640:	add	r3, r3, #1
   19644:	str	r3, [fp, #-48]	; 0xffffffd0
   19648:	b	196f0 <main@@Base+0x4958>
   1964c:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   19650:	lsl	r3, r3, #6
   19654:	uxtb	r3, r3
   19658:	cmp	r3, #0
   1965c:	bne	19704 <main@@Base+0x496c>
   19660:	ldr	r3, [fp, #-20]	; 0xffffffec
   19664:	cmp	r3, #1
   19668:	bls	19724 <main@@Base+0x498c>
   1966c:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   19670:	lsl	r3, r3, #2
   19674:	sxtb	r2, r3
   19678:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   1967c:	lsr	r3, r3, #4
   19680:	uxtb	r3, r3
   19684:	sxtb	r3, r3
   19688:	orr	r3, r2, r3
   1968c:	sxtb	r3, r3
   19690:	uxtb	r2, r3
   19694:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19698:	strb	r2, [r3]
   1969c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   196a0:	add	r3, r3, #1
   196a4:	ldrb	r2, [fp, #-43]	; 0xffffffd5
   196a8:	lsl	r2, r2, #4
   196ac:	sxtb	r1, r2
   196b0:	ldrb	r2, [fp, #-42]	; 0xffffffd6
   196b4:	lsr	r2, r2, #2
   196b8:	uxtb	r2, r2
   196bc:	sxtb	r2, r2
   196c0:	orr	r2, r1, r2
   196c4:	sxtb	r2, r2
   196c8:	uxtb	r2, r2
   196cc:	strb	r2, [r3]
   196d0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   196d4:	add	r3, r3, #2
   196d8:	str	r3, [fp, #-48]	; 0xffffffd0
   196dc:	b	196f0 <main@@Base+0x4958>
   196e0:	mov	r3, #4
   196e4:	str	r3, [fp, #-8]
   196e8:	b	1957c <main@@Base+0x47e4>
   196ec:	nop			; (mov r0, r0)
   196f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   196f4:	str	r3, [fp, #-28]	; 0xffffffe4
   196f8:	b	1957c <main@@Base+0x47e4>
   196fc:	nop			; (mov r0, r0)
   19700:	b	19708 <main@@Base+0x4970>
   19704:	nop			; (mov r0, r0)
   19708:	mov	r3, #5
   1970c:	str	r3, [fp, #-8]
   19710:	b	1957c <main@@Base+0x47e4>
   19714:	nop			; (mov r0, r0)
   19718:	b	19728 <main@@Base+0x4990>
   1971c:	nop			; (mov r0, r0)
   19720:	b	19728 <main@@Base+0x4990>
   19724:	nop			; (mov r0, r0)
   19728:	mov	r3, #1
   1972c:	str	r3, [fp, #-8]
   19730:	b	1957c <main@@Base+0x47e4>
   19734:	mov	r0, r3
   19738:	add	sp, fp, #0
   1973c:	pop	{fp}		; (ldr fp, [sp], #4)
   19740:	bx	lr
   19744:	ldrdeq	fp, [r0], -ip
   19748:	andeq	fp, r0, r4, ror r3
   1974c:	andeq	fp, r0, r8, ror #4
   19750:	andeq	fp, r0, ip, asr #8
   19754:	andeq	fp, r0, r0, asr #10
   19758:	andeq	fp, r0, ip, ror r5
   1975c:	andeq	fp, r0, r9, asr r5
   19760:	andeq	fp, r0, r6, lsl #10
   19764:	andeq	fp, r0, r2, asr #9
   19768:	andeq	fp, r0, sp, lsl #9

0001976c <flatcc_json_printer_error_string@@Base>:
   1976c:	push	{fp}		; (str fp, [sp, #-4]!)
   19770:	add	fp, sp, #0
   19774:	sub	sp, sp, #12
   19778:	str	r0, [fp, #-8]
   1977c:	ldr	r3, [fp, #-8]
   19780:	cmp	r3, #3
   19784:	addls	pc, pc, r3, lsl #2
   19788:	b	197cc <flatcc_json_printer_error_string@@Base+0x60>
   1978c:	b	1979c <flatcc_json_printer_error_string@@Base+0x30>
   19790:	b	197a8 <flatcc_json_printer_error_string@@Base+0x3c>
   19794:	b	197b4 <flatcc_json_printer_error_string@@Base+0x48>
   19798:	b	197c0 <flatcc_json_printer_error_string@@Base+0x54>
   1979c:	ldr	r3, [pc, #64]	; 197e4 <flatcc_json_printer_error_string@@Base+0x78>
   197a0:	add	r3, pc, r3
   197a4:	b	197d4 <flatcc_json_printer_error_string@@Base+0x68>
   197a8:	ldr	r3, [pc, #56]	; 197e8 <flatcc_json_printer_error_string@@Base+0x7c>
   197ac:	add	r3, pc, r3
   197b0:	b	197d4 <flatcc_json_printer_error_string@@Base+0x68>
   197b4:	ldr	r3, [pc, #48]	; 197ec <flatcc_json_printer_error_string@@Base+0x80>
   197b8:	add	r3, pc, r3
   197bc:	b	197d4 <flatcc_json_printer_error_string@@Base+0x68>
   197c0:	ldr	r3, [pc, #40]	; 197f0 <flatcc_json_printer_error_string@@Base+0x84>
   197c4:	add	r3, pc, r3
   197c8:	b	197d4 <flatcc_json_printer_error_string@@Base+0x68>
   197cc:	ldr	r3, [pc, #32]	; 197f4 <flatcc_json_printer_error_string@@Base+0x88>
   197d0:	add	r3, pc, r3
   197d4:	mov	r0, r3
   197d8:	add	sp, fp, #0
   197dc:	pop	{fp}		; (ldr fp, [sp], #4)
   197e0:	bx	lr
   197e4:	andeq	sl, r0, r0, ror #20
   197e8:	andeq	sl, r0, r4, asr fp
   197ec:	andeq	sl, r0, r4, asr fp
   197f0:	andeq	sl, r0, r8, asr fp
   197f4:	andeq	sl, r0, r8, asr fp
   197f8:	push	{fp, lr}
   197fc:	add	fp, sp, #4
   19800:	sub	sp, sp, #8
   19804:	str	r0, [fp, #-8]
   19808:	ldr	r0, [fp, #-8]
   1980c:	bl	152ac <main@@Base+0x514>
   19810:	mov	r2, r0
   19814:	ldr	r3, [fp, #-8]
   19818:	add	r3, r3, r2
   1981c:	mov	r0, r3
   19820:	sub	sp, fp, #4
   19824:	pop	{fp, pc}
   19828:	push	{fp, lr}
   1982c:	add	fp, sp, #4
   19830:	sub	sp, sp, #8
   19834:	str	r0, [fp, #-8]
   19838:	str	r1, [fp, #-12]
   1983c:	ldr	r2, [fp, #-8]
   19840:	ldr	r3, [fp, #-12]
   19844:	add	r3, r2, r3
   19848:	mov	r0, r3
   1984c:	bl	15358 <main@@Base+0x5c0>
   19850:	mov	r3, r0
   19854:	mov	r0, r3
   19858:	sub	sp, fp, #4
   1985c:	pop	{fp, pc}
   19860:	push	{fp, lr}
   19864:	add	fp, sp, #4
   19868:	sub	sp, sp, #16
   1986c:	str	r0, [fp, #-16]
   19870:	str	r1, [fp, #-20]	; 0xffffffec
   19874:	ldr	r3, [fp, #-20]	; 0xffffffec
   19878:	add	r3, r3, #2
   1987c:	lsl	r3, r3, #1
   19880:	str	r3, [fp, #-8]
   19884:	ldr	r3, [fp, #-16]
   19888:	ldr	r2, [r3, #8]
   1988c:	ldr	r3, [fp, #-8]
   19890:	cmp	r2, r3
   19894:	bgt	198a0 <flatcc_json_printer_error_string@@Base+0x134>
   19898:	mov	r3, #0
   1989c:	b	198e4 <flatcc_json_printer_error_string@@Base+0x178>
   198a0:	ldr	r3, [fp, #-16]
   198a4:	ldr	r3, [r3, #4]
   198a8:	ldr	r2, [fp, #-8]
   198ac:	mov	r1, r2
   198b0:	mov	r0, r3
   198b4:	bl	19828 <flatcc_json_printer_error_string@@Base+0xbc>
   198b8:	mov	r3, r0
   198bc:	str	r3, [fp, #-8]
   198c0:	ldr	r3, [fp, #-8]
   198c4:	cmp	r3, #0
   198c8:	bne	198d4 <flatcc_json_printer_error_string@@Base+0x168>
   198cc:	mov	r3, #0
   198d0:	b	198e4 <flatcc_json_printer_error_string@@Base+0x178>
   198d4:	ldr	r3, [fp, #-16]
   198d8:	ldr	r2, [r3]
   198dc:	ldr	r3, [fp, #-8]
   198e0:	add	r3, r2, r3
   198e4:	mov	r0, r3
   198e8:	sub	sp, fp, #4
   198ec:	pop	{fp, pc}

000198f0 <flatcc_json_printer_fmt_float@@Base>:
   198f0:	push	{fp, lr}
   198f4:	add	fp, sp, #4
   198f8:	sub	sp, sp, #8
   198fc:	str	r0, [fp, #-8]
   19900:	vstr	s0, [fp, #-12]
   19904:	vldr	s15, [fp, #-12]
   19908:	vcvt.f64.f32	d7, s15
   1990c:	ldr	r0, [fp, #-8]
   19910:	vmov.f64	d0, d7
   19914:	bl	186f0 <main@@Base+0x3958>
   19918:	mov	r3, r0
   1991c:	mov	r0, r3
   19920:	sub	sp, fp, #4
   19924:	pop	{fp, pc}

00019928 <flatcc_json_printer_fmt_double@@Base>:
   19928:	push	{fp, lr}
   1992c:	add	fp, sp, #4
   19930:	sub	sp, sp, #16
   19934:	str	r0, [fp, #-8]
   19938:	vstr	d0, [fp, #-20]	; 0xffffffec
   1993c:	ldr	r0, [fp, #-8]
   19940:	vldr	d0, [fp, #-20]	; 0xffffffec
   19944:	bl	186f0 <main@@Base+0x3958>
   19948:	mov	r3, r0
   1994c:	mov	r0, r3
   19950:	sub	sp, fp, #4
   19954:	pop	{fp, pc}

00019958 <flatcc_json_printer_fmt_bool@@Base>:
   19958:	push	{fp, lr}
   1995c:	add	fp, sp, #4
   19960:	sub	sp, sp, #8
   19964:	str	r0, [fp, #-8]
   19968:	str	r1, [fp, #-12]
   1996c:	ldr	r3, [fp, #-12]
   19970:	cmp	r3, #0
   19974:	beq	19998 <flatcc_json_printer_fmt_bool@@Base+0x40>
   19978:	mov	r2, #4
   1997c:	ldr	r3, [pc, #60]	; 199c0 <flatcc_json_printer_fmt_bool@@Base+0x68>
   19980:	add	r3, pc, r3
   19984:	mov	r1, r3
   19988:	ldr	r0, [fp, #-8]
   1998c:	bl	12444 <memcpy@plt>
   19990:	mov	r3, #4
   19994:	b	199b4 <flatcc_json_printer_fmt_bool@@Base+0x5c>
   19998:	mov	r2, #5
   1999c:	ldr	r3, [pc, #32]	; 199c4 <flatcc_json_printer_fmt_bool@@Base+0x6c>
   199a0:	add	r3, pc, r3
   199a4:	mov	r1, r3
   199a8:	ldr	r0, [fp, #-8]
   199ac:	bl	12444 <memcpy@plt>
   199b0:	mov	r3, #5
   199b4:	mov	r0, r3
   199b8:	sub	sp, fp, #4
   199bc:	pop	{fp, pc}
   199c0:			; <UNDEFINED> instruction: 0x0000a9b0
   199c4:	muleq	r0, r8, r9
   199c8:	push	{fp, lr}
   199cc:	add	fp, sp, #4
   199d0:	sub	sp, sp, #24
   199d4:	str	r0, [fp, #-16]
   199d8:	str	r1, [fp, #-20]	; 0xffffffec
   199dc:	str	r2, [fp, #-24]	; 0xffffffe8
   199e0:	ldr	r3, [fp, #-16]
   199e4:	ldr	r2, [r3, #20]
   199e8:	ldr	r3, [fp, #-16]
   199ec:	ldr	r3, [r3, #16]
   199f0:	cmp	r2, r3
   199f4:	bcc	19a0c <flatcc_json_printer_fmt_bool@@Base+0xb4>
   199f8:	ldr	r3, [fp, #-16]
   199fc:	ldr	r3, [r3, #44]	; 0x2c
   19a00:	mov	r1, #0
   19a04:	ldr	r0, [fp, #-16]
   19a08:	blx	r3
   19a0c:	ldr	r3, [fp, #-16]
   19a10:	ldr	r3, [r3, #16]
   19a14:	mov	r2, r3
   19a18:	ldr	r3, [fp, #-16]
   19a1c:	ldr	r3, [r3, #20]
   19a20:	sub	r3, r2, r3
   19a24:	str	r3, [fp, #-8]
   19a28:	b	19aac <flatcc_json_printer_fmt_bool@@Base+0x154>
   19a2c:	ldr	r3, [fp, #-16]
   19a30:	ldr	r3, [r3, #20]
   19a34:	ldr	r2, [fp, #-8]
   19a38:	ldr	r1, [fp, #-20]	; 0xffffffec
   19a3c:	mov	r0, r3
   19a40:	bl	12444 <memcpy@plt>
   19a44:	ldr	r3, [fp, #-16]
   19a48:	ldr	r2, [r3, #20]
   19a4c:	ldr	r3, [fp, #-8]
   19a50:	add	r2, r2, r3
   19a54:	ldr	r3, [fp, #-16]
   19a58:	str	r2, [r3, #20]
   19a5c:	ldr	r2, [fp, #-20]	; 0xffffffec
   19a60:	ldr	r3, [fp, #-8]
   19a64:	add	r3, r2, r3
   19a68:	str	r3, [fp, #-20]	; 0xffffffec
   19a6c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19a70:	ldr	r3, [fp, #-8]
   19a74:	sub	r3, r2, r3
   19a78:	str	r3, [fp, #-24]	; 0xffffffe8
   19a7c:	ldr	r3, [fp, #-16]
   19a80:	ldr	r3, [r3, #44]	; 0x2c
   19a84:	mov	r1, #0
   19a88:	ldr	r0, [fp, #-16]
   19a8c:	blx	r3
   19a90:	ldr	r3, [fp, #-16]
   19a94:	ldr	r3, [r3, #16]
   19a98:	mov	r2, r3
   19a9c:	ldr	r3, [fp, #-16]
   19aa0:	ldr	r3, [r3, #20]
   19aa4:	sub	r3, r2, r3
   19aa8:	str	r3, [fp, #-8]
   19aac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19ab0:	ldr	r3, [fp, #-8]
   19ab4:	cmp	r2, r3
   19ab8:	bhi	19a2c <flatcc_json_printer_fmt_bool@@Base+0xd4>
   19abc:	ldr	r3, [fp, #-16]
   19ac0:	ldr	r3, [r3, #20]
   19ac4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19ac8:	ldr	r1, [fp, #-20]	; 0xffffffec
   19acc:	mov	r0, r3
   19ad0:	bl	12444 <memcpy@plt>
   19ad4:	ldr	r3, [fp, #-16]
   19ad8:	ldr	r2, [r3, #20]
   19adc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19ae0:	add	r2, r2, r3
   19ae4:	ldr	r3, [fp, #-16]
   19ae8:	str	r2, [r3, #20]
   19aec:	nop			; (mov r0, r0)
   19af0:	sub	sp, fp, #4
   19af4:	pop	{fp, pc}
   19af8:	push	{fp, lr}
   19afc:	add	fp, sp, #4
   19b00:	sub	sp, sp, #16
   19b04:	str	r0, [fp, #-8]
   19b08:	str	r1, [fp, #-12]
   19b0c:	str	r2, [fp, #-16]
   19b10:	ldr	r3, [fp, #-8]
   19b14:	ldr	r2, [r3, #20]
   19b18:	ldr	r3, [fp, #-16]
   19b1c:	add	r2, r2, r3
   19b20:	ldr	r3, [fp, #-8]
   19b24:	ldr	r3, [r3, #16]
   19b28:	cmp	r2, r3
   19b2c:	bcc	19b44 <flatcc_json_printer_fmt_bool@@Base+0x1ec>
   19b30:	ldr	r2, [fp, #-16]
   19b34:	ldr	r1, [fp, #-12]
   19b38:	ldr	r0, [fp, #-8]
   19b3c:	bl	199c8 <flatcc_json_printer_fmt_bool@@Base+0x70>
   19b40:	b	19b74 <flatcc_json_printer_fmt_bool@@Base+0x21c>
   19b44:	ldr	r3, [fp, #-8]
   19b48:	ldr	r3, [r3, #20]
   19b4c:	ldr	r2, [fp, #-16]
   19b50:	ldr	r1, [fp, #-12]
   19b54:	mov	r0, r3
   19b58:	bl	12444 <memcpy@plt>
   19b5c:	ldr	r3, [fp, #-8]
   19b60:	ldr	r2, [r3, #20]
   19b64:	ldr	r3, [fp, #-16]
   19b68:	add	r2, r2, r3
   19b6c:	ldr	r3, [fp, #-8]
   19b70:	str	r2, [r3, #20]
   19b74:	nop			; (mov r0, r0)
   19b78:	sub	sp, fp, #4
   19b7c:	pop	{fp, pc}
   19b80:	push	{fp, lr}
   19b84:	add	fp, sp, #4
   19b88:	sub	sp, sp, #32
   19b8c:	str	r0, [fp, #-24]	; 0xffffffe8
   19b90:	str	r1, [fp, #-28]	; 0xffffffe4
   19b94:	str	r2, [fp, #-32]	; 0xffffffe0
   19b98:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19b9c:	str	r3, [fp, #-8]
   19ba0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19ba4:	ldr	r3, [r3, #20]
   19ba8:	add	r1, r3, #1
   19bac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19bb0:	str	r1, [r2, #20]
   19bb4:	mov	r2, #34	; 0x22
   19bb8:	strb	r2, [r3]
   19bbc:	ldr	r3, [fp, #-8]
   19bc0:	ldrb	r3, [r3]
   19bc4:	strb	r3, [fp, #-9]
   19bc8:	b	19be4 <flatcc_json_printer_fmt_bool@@Base+0x28c>
   19bcc:	ldr	r3, [fp, #-8]
   19bd0:	add	r3, r3, #1
   19bd4:	str	r3, [fp, #-8]
   19bd8:	ldr	r3, [fp, #-8]
   19bdc:	ldrb	r3, [r3]
   19be0:	strb	r3, [fp, #-9]
   19be4:	ldrb	r3, [fp, #-9]
   19be8:	cmp	r3, #31
   19bec:	bls	19c08 <flatcc_json_printer_fmt_bool@@Base+0x2b0>
   19bf0:	ldrb	r3, [fp, #-9]
   19bf4:	cmp	r3, #34	; 0x22
   19bf8:	beq	19c08 <flatcc_json_printer_fmt_bool@@Base+0x2b0>
   19bfc:	ldrb	r3, [fp, #-9]
   19c00:	cmp	r3, #92	; 0x5c
   19c04:	bne	19bcc <flatcc_json_printer_fmt_bool@@Base+0x274>
   19c08:	ldr	r2, [fp, #-8]
   19c0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19c10:	sub	r3, r2, r3
   19c14:	str	r3, [fp, #-16]
   19c18:	ldr	r2, [fp, #-16]
   19c1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19c20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c24:	bl	19af8 <flatcc_json_printer_fmt_bool@@Base+0x1a0>
   19c28:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19c2c:	ldr	r3, [fp, #-16]
   19c30:	sub	r3, r2, r3
   19c34:	str	r3, [fp, #-32]	; 0xffffffe0
   19c38:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19c3c:	cmp	r3, #0
   19c40:	beq	19eb4 <flatcc_json_printer_fmt_bool@@Base+0x55c>
   19c44:	ldr	r2, [fp, #-28]	; 0xffffffe4
   19c48:	ldr	r3, [fp, #-16]
   19c4c:	add	r3, r2, r3
   19c50:	str	r3, [fp, #-28]	; 0xffffffe4
   19c54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19c58:	ldr	r3, [r3, #20]
   19c5c:	add	r1, r3, #1
   19c60:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19c64:	str	r1, [r2, #20]
   19c68:	mov	r2, #92	; 0x5c
   19c6c:	strb	r2, [r3]
   19c70:	ldrb	r3, [fp, #-9]
   19c74:	cmp	r3, #12
   19c78:	beq	19d1c <flatcc_json_printer_fmt_bool@@Base+0x3c4>
   19c7c:	cmp	r3, #12
   19c80:	bgt	19ca0 <flatcc_json_printer_fmt_bool@@Base+0x348>
   19c84:	cmp	r3, #9
   19c88:	beq	19cfc <flatcc_json_printer_fmt_bool@@Base+0x3a4>
   19c8c:	cmp	r3, #10
   19c90:	beq	19d5c <flatcc_json_printer_fmt_bool@@Base+0x404>
   19c94:	cmp	r3, #8
   19c98:	beq	19d7c <flatcc_json_printer_fmt_bool@@Base+0x424>
   19c9c:	b	19d9c <flatcc_json_printer_fmt_bool@@Base+0x444>
   19ca0:	cmp	r3, #34	; 0x22
   19ca4:	beq	19cbc <flatcc_json_printer_fmt_bool@@Base+0x364>
   19ca8:	cmp	r3, #92	; 0x5c
   19cac:	beq	19cdc <flatcc_json_printer_fmt_bool@@Base+0x384>
   19cb0:	cmp	r3, #13
   19cb4:	beq	19d3c <flatcc_json_printer_fmt_bool@@Base+0x3e4>
   19cb8:	b	19d9c <flatcc_json_printer_fmt_bool@@Base+0x444>
   19cbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19cc0:	ldr	r3, [r3, #20]
   19cc4:	add	r1, r3, #1
   19cc8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19ccc:	str	r1, [r2, #20]
   19cd0:	mov	r2, #34	; 0x22
   19cd4:	strb	r2, [r3]
   19cd8:	b	19e8c <flatcc_json_printer_fmt_bool@@Base+0x534>
   19cdc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19ce0:	ldr	r3, [r3, #20]
   19ce4:	add	r1, r3, #1
   19ce8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19cec:	str	r1, [r2, #20]
   19cf0:	mov	r2, #92	; 0x5c
   19cf4:	strb	r2, [r3]
   19cf8:	b	19e8c <flatcc_json_printer_fmt_bool@@Base+0x534>
   19cfc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19d00:	ldr	r3, [r3, #20]
   19d04:	add	r1, r3, #1
   19d08:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19d0c:	str	r1, [r2, #20]
   19d10:	mov	r2, #116	; 0x74
   19d14:	strb	r2, [r3]
   19d18:	b	19e8c <flatcc_json_printer_fmt_bool@@Base+0x534>
   19d1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19d20:	ldr	r3, [r3, #20]
   19d24:	add	r1, r3, #1
   19d28:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19d2c:	str	r1, [r2, #20]
   19d30:	mov	r2, #102	; 0x66
   19d34:	strb	r2, [r3]
   19d38:	b	19e8c <flatcc_json_printer_fmt_bool@@Base+0x534>
   19d3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19d40:	ldr	r3, [r3, #20]
   19d44:	add	r1, r3, #1
   19d48:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19d4c:	str	r1, [r2, #20]
   19d50:	mov	r2, #114	; 0x72
   19d54:	strb	r2, [r3]
   19d58:	b	19e8c <flatcc_json_printer_fmt_bool@@Base+0x534>
   19d5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19d60:	ldr	r3, [r3, #20]
   19d64:	add	r1, r3, #1
   19d68:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19d6c:	str	r1, [r2, #20]
   19d70:	mov	r2, #110	; 0x6e
   19d74:	strb	r2, [r3]
   19d78:	b	19e8c <flatcc_json_printer_fmt_bool@@Base+0x534>
   19d7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19d80:	ldr	r3, [r3, #20]
   19d84:	add	r1, r3, #1
   19d88:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19d8c:	str	r1, [r2, #20]
   19d90:	mov	r2, #98	; 0x62
   19d94:	strb	r2, [r3]
   19d98:	b	19e8c <flatcc_json_printer_fmt_bool@@Base+0x534>
   19d9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19da0:	ldr	r3, [r3, #20]
   19da4:	add	r1, r3, #1
   19da8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19dac:	str	r1, [r2, #20]
   19db0:	mov	r2, #117	; 0x75
   19db4:	strb	r2, [r3]
   19db8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19dbc:	ldr	r3, [r3, #20]
   19dc0:	add	r1, r3, #1
   19dc4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19dc8:	str	r1, [r2, #20]
   19dcc:	mov	r2, #48	; 0x30
   19dd0:	strb	r2, [r3]
   19dd4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19dd8:	ldr	r3, [r3, #20]
   19ddc:	add	r1, r3, #1
   19de0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19de4:	str	r1, [r2, #20]
   19de8:	mov	r2, #48	; 0x30
   19dec:	strb	r2, [r3]
   19df0:	ldrb	r3, [fp, #-9]
   19df4:	lsr	r3, r3, #4
   19df8:	strb	r3, [fp, #-17]	; 0xffffffef
   19dfc:	ldrb	r3, [fp, #-17]	; 0xffffffef
   19e00:	cmp	r3, #9
   19e04:	bhi	19e10 <flatcc_json_printer_fmt_bool@@Base+0x4b8>
   19e08:	mov	r2, #48	; 0x30
   19e0c:	b	19e14 <flatcc_json_printer_fmt_bool@@Base+0x4bc>
   19e10:	mov	r2, #87	; 0x57
   19e14:	ldrb	r3, [fp, #-17]	; 0xffffffef
   19e18:	add	r3, r2, r3
   19e1c:	strb	r3, [fp, #-17]	; 0xffffffef
   19e20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19e24:	ldr	r3, [r3, #20]
   19e28:	add	r1, r3, #1
   19e2c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19e30:	str	r1, [r2, #20]
   19e34:	ldrb	r2, [fp, #-17]	; 0xffffffef
   19e38:	strb	r2, [r3]
   19e3c:	ldrb	r3, [fp, #-9]
   19e40:	and	r3, r3, #15
   19e44:	strb	r3, [fp, #-17]	; 0xffffffef
   19e48:	ldrb	r3, [fp, #-17]	; 0xffffffef
   19e4c:	cmp	r3, #9
   19e50:	bhi	19e5c <flatcc_json_printer_fmt_bool@@Base+0x504>
   19e54:	mov	r2, #48	; 0x30
   19e58:	b	19e60 <flatcc_json_printer_fmt_bool@@Base+0x508>
   19e5c:	mov	r2, #87	; 0x57
   19e60:	ldrb	r3, [fp, #-17]	; 0xffffffef
   19e64:	add	r3, r2, r3
   19e68:	strb	r3, [fp, #-17]	; 0xffffffef
   19e6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19e70:	ldr	r3, [r3, #20]
   19e74:	add	r1, r3, #1
   19e78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19e7c:	str	r1, [r2, #20]
   19e80:	ldrb	r2, [fp, #-17]	; 0xffffffef
   19e84:	strb	r2, [r3]
   19e88:	nop			; (mov r0, r0)
   19e8c:	ldr	r3, [fp, #-8]
   19e90:	add	r3, r3, #1
   19e94:	str	r3, [fp, #-8]
   19e98:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19e9c:	sub	r3, r3, #1
   19ea0:	str	r3, [fp, #-32]	; 0xffffffe0
   19ea4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19ea8:	add	r3, r3, #1
   19eac:	str	r3, [fp, #-28]	; 0xffffffe4
   19eb0:	b	19bbc <flatcc_json_printer_fmt_bool@@Base+0x264>
   19eb4:	nop			; (mov r0, r0)
   19eb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19ebc:	ldr	r3, [r3, #20]
   19ec0:	add	r1, r3, #1
   19ec4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19ec8:	str	r1, [r2, #20]
   19ecc:	mov	r2, #34	; 0x22
   19ed0:	strb	r2, [r3]
   19ed4:	nop			; (mov r0, r0)
   19ed8:	sub	sp, fp, #4
   19edc:	pop	{fp, pc}
   19ee0:	push	{fp, lr}
   19ee4:	add	fp, sp, #4
   19ee8:	sub	sp, sp, #56	; 0x38
   19eec:	str	r0, [fp, #-40]	; 0xffffffd8
   19ef0:	str	r1, [fp, #-44]	; 0xffffffd4
   19ef4:	str	r2, [fp, #-48]	; 0xffffffd0
   19ef8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19efc:	bic	r3, r3, #128	; 0x80
   19f00:	str	r3, [fp, #-16]
   19f04:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19f08:	bl	152ac <main@@Base+0x514>
   19f0c:	mov	r3, r0
   19f10:	str	r3, [fp, #-28]	; 0xffffffe4
   19f14:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19f18:	add	r3, r3, #4
   19f1c:	str	r3, [fp, #-12]
   19f20:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19f24:	ldr	r3, [r3, #20]
   19f28:	add	r1, r3, #1
   19f2c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19f30:	str	r1, [r2, #20]
   19f34:	mov	r2, #34	; 0x22
   19f38:	strb	r2, [r3]
   19f3c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19f40:	ldr	r1, [fp, #-48]	; 0xffffffd0
   19f44:	mov	r0, r3
   19f48:	bl	18ca8 <main@@Base+0x3f10>
   19f4c:	str	r0, [fp, #-8]
   19f50:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19f54:	ldr	r2, [r3, #20]
   19f58:	ldr	r3, [fp, #-8]
   19f5c:	add	r2, r2, r3
   19f60:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19f64:	ldr	r3, [r3, #16]
   19f68:	cmp	r2, r3
   19f6c:	bcc	1a088 <flatcc_json_printer_fmt_bool@@Base+0x730>
   19f70:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19f74:	ldr	r3, [r3, #44]	; 0x2c
   19f78:	mov	r1, #0
   19f7c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19f80:	blx	r3
   19f84:	b	1a088 <flatcc_json_printer_fmt_bool@@Base+0x730>
   19f88:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19f8c:	ldr	r3, [r3, #16]
   19f90:	mov	r2, r3
   19f94:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19f98:	ldr	r3, [r3, #20]
   19f9c:	sub	r3, r2, r3
   19fa0:	bic	r3, r3, #3
   19fa4:	str	r3, [fp, #-20]	; 0xffffffec
   19fa8:	ldr	r2, [fp, #-20]	; 0xffffffec
   19fac:	mov	r3, r2
   19fb0:	lsl	r3, r3, #1
   19fb4:	add	r3, r3, r2
   19fb8:	lsr	r3, r3, #2
   19fbc:	str	r3, [fp, #-24]	; 0xffffffe8
   19fc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19fc4:	cmp	r3, #0
   19fc8:	bne	19fec <flatcc_json_printer_fmt_bool@@Base+0x694>
   19fcc:	ldr	r3, [pc, #312]	; 1a10c <flatcc_json_printer_fmt_bool@@Base+0x7b4>
   19fd0:	add	r3, pc, r3
   19fd4:	ldr	r2, [pc, #308]	; 1a110 <flatcc_json_printer_fmt_bool@@Base+0x7b8>
   19fd8:	ldr	r1, [pc, #308]	; 1a114 <flatcc_json_printer_fmt_bool@@Base+0x7bc>
   19fdc:	add	r1, pc, r1
   19fe0:	ldr	r0, [pc, #304]	; 1a118 <flatcc_json_printer_fmt_bool@@Base+0x7c0>
   19fe4:	add	r0, pc, r0
   19fe8:	bl	12528 <__assert_fail@plt>
   19fec:	ldr	r2, [fp, #-20]	; 0xffffffec
   19ff0:	mov	r3, r2
   19ff4:	lsl	r3, r3, #1
   19ff8:	add	r3, r3, r2
   19ffc:	lsr	r3, r3, #2
   1a000:	str	r3, [fp, #-32]	; 0xffffffe0
   1a004:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a008:	ldr	r0, [r3, #20]
   1a00c:	sub	r2, fp, #32
   1a010:	ldr	r3, [fp, #-16]
   1a014:	str	r3, [sp]
   1a018:	mov	r3, r2
   1a01c:	mov	r2, #0
   1a020:	ldr	r1, [fp, #-12]
   1a024:	bl	18ddc <main@@Base+0x4044>
   1a028:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a02c:	ldr	r2, [r3, #20]
   1a030:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a034:	add	r2, r2, r3
   1a038:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a03c:	str	r2, [r3, #20]
   1a040:	ldr	r2, [fp, #-12]
   1a044:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a048:	add	r3, r2, r3
   1a04c:	str	r3, [fp, #-12]
   1a050:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1a054:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a058:	sub	r3, r2, r3
   1a05c:	str	r3, [fp, #-28]	; 0xffffffe4
   1a060:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a064:	ldr	r3, [r3, #44]	; 0x2c
   1a068:	mov	r1, #0
   1a06c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a070:	blx	r3
   1a074:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a078:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1a07c:	mov	r0, r3
   1a080:	bl	18ca8 <main@@Base+0x3f10>
   1a084:	str	r0, [fp, #-8]
   1a088:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a08c:	ldr	r2, [r3, #20]
   1a090:	ldr	r3, [fp, #-8]
   1a094:	add	r2, r2, r3
   1a098:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a09c:	ldr	r3, [r3, #16]
   1a0a0:	cmp	r2, r3
   1a0a4:	bhi	19f88 <flatcc_json_printer_fmt_bool@@Base+0x630>
   1a0a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a0ac:	ldr	r0, [r3, #20]
   1a0b0:	sub	r2, fp, #28
   1a0b4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1a0b8:	str	r3, [sp]
   1a0bc:	mov	r3, r2
   1a0c0:	mov	r2, #0
   1a0c4:	ldr	r1, [fp, #-12]
   1a0c8:	bl	18ddc <main@@Base+0x4044>
   1a0cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a0d0:	ldr	r2, [r3, #20]
   1a0d4:	ldr	r3, [fp, #-8]
   1a0d8:	add	r2, r2, r3
   1a0dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a0e0:	str	r2, [r3, #20]
   1a0e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a0e8:	ldr	r3, [r3, #20]
   1a0ec:	add	r1, r3, #1
   1a0f0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a0f4:	str	r1, [r2, #20]
   1a0f8:	mov	r2, #34	; 0x22
   1a0fc:	strb	r2, [r3]
   1a100:	nop			; (mov r0, r0)
   1a104:	sub	sp, fp, #4
   1a108:	pop	{fp, pc}
   1a10c:	strdeq	sl, [r0], -r0
   1a110:	andeq	r0, r0, r5, lsl r1
   1a114:	andeq	sl, r0, r4, ror #6
   1a118:	andeq	sl, r0, r0, asr #7
   1a11c:	push	{fp, lr}
   1a120:	add	fp, sp, #4
   1a124:	sub	sp, sp, #16
   1a128:	str	r0, [fp, #-16]
   1a12c:	str	r1, [fp, #-20]	; 0xffffffec
   1a130:	ldr	r3, [fp, #-16]
   1a134:	ldr	r2, [r3, #20]
   1a138:	ldr	r3, [fp, #-16]
   1a13c:	ldr	r3, [r3, #16]
   1a140:	cmp	r2, r3
   1a144:	bcc	1a15c <flatcc_json_printer_fmt_bool@@Base+0x804>
   1a148:	ldr	r3, [fp, #-16]
   1a14c:	ldr	r3, [r3, #44]	; 0x2c
   1a150:	mov	r1, #0
   1a154:	ldr	r0, [fp, #-16]
   1a158:	blx	r3
   1a15c:	ldr	r3, [fp, #-16]
   1a160:	ldr	r3, [r3, #16]
   1a164:	mov	r2, r3
   1a168:	ldr	r3, [fp, #-16]
   1a16c:	ldr	r3, [r3, #20]
   1a170:	sub	r3, r2, r3
   1a174:	str	r3, [fp, #-8]
   1a178:	b	1a1ec <flatcc_json_printer_fmt_bool@@Base+0x894>
   1a17c:	ldr	r3, [fp, #-16]
   1a180:	ldr	r3, [r3, #20]
   1a184:	ldr	r2, [fp, #-8]
   1a188:	mov	r1, #32
   1a18c:	mov	r0, r3
   1a190:	bl	124e0 <memset@plt>
   1a194:	ldr	r3, [fp, #-16]
   1a198:	ldr	r2, [r3, #20]
   1a19c:	ldr	r3, [fp, #-8]
   1a1a0:	add	r2, r2, r3
   1a1a4:	ldr	r3, [fp, #-16]
   1a1a8:	str	r2, [r3, #20]
   1a1ac:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a1b0:	ldr	r3, [fp, #-8]
   1a1b4:	sub	r3, r2, r3
   1a1b8:	str	r3, [fp, #-20]	; 0xffffffec
   1a1bc:	ldr	r3, [fp, #-16]
   1a1c0:	ldr	r3, [r3, #44]	; 0x2c
   1a1c4:	mov	r1, #0
   1a1c8:	ldr	r0, [fp, #-16]
   1a1cc:	blx	r3
   1a1d0:	ldr	r3, [fp, #-16]
   1a1d4:	ldr	r3, [r3, #16]
   1a1d8:	mov	r2, r3
   1a1dc:	ldr	r3, [fp, #-16]
   1a1e0:	ldr	r3, [r3, #20]
   1a1e4:	sub	r3, r2, r3
   1a1e8:	str	r3, [fp, #-8]
   1a1ec:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a1f0:	ldr	r3, [fp, #-8]
   1a1f4:	cmp	r2, r3
   1a1f8:	bhi	1a17c <flatcc_json_printer_fmt_bool@@Base+0x824>
   1a1fc:	ldr	r3, [fp, #-16]
   1a200:	ldr	r3, [r3, #20]
   1a204:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a208:	mov	r1, #32
   1a20c:	mov	r0, r3
   1a210:	bl	124e0 <memset@plt>
   1a214:	ldr	r3, [fp, #-16]
   1a218:	ldr	r2, [r3, #20]
   1a21c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a220:	add	r2, r2, r3
   1a224:	ldr	r3, [fp, #-16]
   1a228:	str	r2, [r3, #20]
   1a22c:	nop			; (mov r0, r0)
   1a230:	sub	sp, fp, #4
   1a234:	pop	{fp, pc}
   1a238:	push	{fp, lr}
   1a23c:	add	fp, sp, #4
   1a240:	sub	sp, sp, #16
   1a244:	str	r0, [fp, #-16]
   1a248:	ldr	r3, [fp, #-16]
   1a24c:	ldr	r3, [r3, #32]
   1a250:	ldr	r2, [fp, #-16]
   1a254:	ldrb	r2, [r2, #25]
   1a258:	mul	r3, r2, r3
   1a25c:	str	r3, [fp, #-8]
   1a260:	ldr	r3, [fp, #-16]
   1a264:	ldr	r2, [r3, #20]
   1a268:	ldr	r3, [fp, #-8]
   1a26c:	add	r2, r2, r3
   1a270:	ldr	r3, [fp, #-16]
   1a274:	ldr	r3, [r3, #16]
   1a278:	cmp	r2, r3
   1a27c:	bls	1a290 <flatcc_json_printer_fmt_bool@@Base+0x938>
   1a280:	ldr	r1, [fp, #-8]
   1a284:	ldr	r0, [fp, #-16]
   1a288:	bl	1a11c <flatcc_json_printer_fmt_bool@@Base+0x7c4>
   1a28c:	b	1a2c0 <flatcc_json_printer_fmt_bool@@Base+0x968>
   1a290:	ldr	r3, [fp, #-16]
   1a294:	ldr	r3, [r3, #20]
   1a298:	ldr	r2, [fp, #-8]
   1a29c:	mov	r1, #32
   1a2a0:	mov	r0, r3
   1a2a4:	bl	124e0 <memset@plt>
   1a2a8:	ldr	r3, [fp, #-16]
   1a2ac:	ldr	r2, [r3, #20]
   1a2b0:	ldr	r3, [fp, #-8]
   1a2b4:	add	r2, r2, r3
   1a2b8:	ldr	r3, [fp, #-16]
   1a2bc:	str	r2, [r3, #20]
   1a2c0:	nop			; (mov r0, r0)
   1a2c4:	sub	sp, fp, #4
   1a2c8:	pop	{fp, pc}

0001a2cc <flatcc_json_printer_string@@Base>:
   1a2cc:	push	{fp, lr}
   1a2d0:	add	fp, sp, #4
   1a2d4:	sub	sp, sp, #16
   1a2d8:	str	r0, [fp, #-8]
   1a2dc:	str	r1, [fp, #-12]
   1a2e0:	str	r2, [fp, #-16]
   1a2e4:	ldr	r3, [fp, #-16]
   1a2e8:	mov	r2, r3
   1a2ec:	ldr	r1, [fp, #-12]
   1a2f0:	ldr	r0, [fp, #-8]
   1a2f4:	bl	19b80 <flatcc_json_printer_fmt_bool@@Base+0x228>
   1a2f8:	nop			; (mov r0, r0)
   1a2fc:	sub	sp, fp, #4
   1a300:	pop	{fp, pc}

0001a304 <flatcc_json_printer_write@@Base>:
   1a304:	push	{fp, lr}
   1a308:	add	fp, sp, #4
   1a30c:	sub	sp, sp, #16
   1a310:	str	r0, [fp, #-8]
   1a314:	str	r1, [fp, #-12]
   1a318:	str	r2, [fp, #-16]
   1a31c:	ldr	r3, [fp, #-16]
   1a320:	mov	r2, r3
   1a324:	ldr	r1, [fp, #-12]
   1a328:	ldr	r0, [fp, #-8]
   1a32c:	bl	19af8 <flatcc_json_printer_fmt_bool@@Base+0x1a0>
   1a330:	nop			; (mov r0, r0)
   1a334:	sub	sp, fp, #4
   1a338:	pop	{fp, pc}

0001a33c <flatcc_json_printer_nl@@Base>:
   1a33c:	push	{fp, lr}
   1a340:	add	fp, sp, #4
   1a344:	sub	sp, sp, #8
   1a348:	str	r0, [fp, #-8]
   1a34c:	ldr	r3, [fp, #-8]
   1a350:	ldr	r3, [r3, #20]
   1a354:	add	r1, r3, #1
   1a358:	ldr	r2, [fp, #-8]
   1a35c:	str	r1, [r2, #20]
   1a360:	mov	r2, #10
   1a364:	strb	r2, [r3]
   1a368:	ldr	r0, [fp, #-8]
   1a36c:	bl	154c0 <main@@Base+0x728>
   1a370:	nop			; (mov r0, r0)
   1a374:	sub	sp, fp, #4
   1a378:	pop	{fp, pc}

0001a37c <flatcc_json_printer_char@@Base>:
   1a37c:	push	{fp}		; (str fp, [sp, #-4]!)
   1a380:	add	fp, sp, #0
   1a384:	sub	sp, sp, #12
   1a388:	str	r0, [fp, #-8]
   1a38c:	mov	r3, r1
   1a390:	strb	r3, [fp, #-9]
   1a394:	ldr	r3, [fp, #-8]
   1a398:	ldr	r3, [r3, #20]
   1a39c:	add	r1, r3, #1
   1a3a0:	ldr	r2, [fp, #-8]
   1a3a4:	str	r1, [r2, #20]
   1a3a8:	ldrb	r2, [fp, #-9]
   1a3ac:	strb	r2, [r3]
   1a3b0:	nop			; (mov r0, r0)
   1a3b4:	add	sp, fp, #0
   1a3b8:	pop	{fp}		; (ldr fp, [sp], #4)
   1a3bc:	bx	lr

0001a3c0 <flatcc_json_printer_indent@@Base>:
   1a3c0:	push	{fp, lr}
   1a3c4:	add	fp, sp, #4
   1a3c8:	sub	sp, sp, #8
   1a3cc:	str	r0, [fp, #-8]
   1a3d0:	ldr	r0, [fp, #-8]
   1a3d4:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1a3d8:	nop			; (mov r0, r0)
   1a3dc:	sub	sp, fp, #4
   1a3e0:	pop	{fp, pc}

0001a3e4 <flatcc_json_printer_add_level@@Base>:
   1a3e4:	push	{fp}		; (str fp, [sp, #-4]!)
   1a3e8:	add	fp, sp, #0
   1a3ec:	sub	sp, sp, #12
   1a3f0:	str	r0, [fp, #-8]
   1a3f4:	str	r1, [fp, #-12]
   1a3f8:	ldr	r3, [fp, #-8]
   1a3fc:	ldr	r2, [r3, #32]
   1a400:	ldr	r3, [fp, #-12]
   1a404:	add	r2, r2, r3
   1a408:	ldr	r3, [fp, #-8]
   1a40c:	str	r2, [r3, #32]
   1a410:	nop			; (mov r0, r0)
   1a414:	add	sp, fp, #0
   1a418:	pop	{fp}		; (ldr fp, [sp], #4)
   1a41c:	bx	lr

0001a420 <flatcc_json_printer_get_level@@Base>:
   1a420:	push	{fp}		; (str fp, [sp, #-4]!)
   1a424:	add	fp, sp, #0
   1a428:	sub	sp, sp, #12
   1a42c:	str	r0, [fp, #-8]
   1a430:	ldr	r3, [fp, #-8]
   1a434:	ldr	r3, [r3, #32]
   1a438:	mov	r0, r3
   1a43c:	add	sp, fp, #0
   1a440:	pop	{fp}		; (ldr fp, [sp], #4)
   1a444:	bx	lr
   1a448:	push	{fp, lr}
   1a44c:	add	fp, sp, #4
   1a450:	sub	sp, sp, #16
   1a454:	str	r0, [fp, #-8]
   1a458:	str	r1, [fp, #-12]
   1a45c:	str	r2, [fp, #-16]
   1a460:	ldr	r3, [fp, #-8]
   1a464:	ldr	r3, [r3, #20]
   1a468:	mov	r2, #34	; 0x22
   1a46c:	strb	r2, [r3]
   1a470:	ldr	r3, [fp, #-8]
   1a474:	ldr	r3, [r3, #20]
   1a478:	ldr	r2, [fp, #-8]
   1a47c:	ldrb	r2, [r2, #26]
   1a480:	cmp	r2, #0
   1a484:	moveq	r2, #1
   1a488:	movne	r2, #0
   1a48c:	uxtb	r2, r2
   1a490:	add	r2, r3, r2
   1a494:	ldr	r3, [fp, #-8]
   1a498:	str	r2, [r3, #20]
   1a49c:	ldr	r3, [fp, #-8]
   1a4a0:	ldr	r2, [r3, #20]
   1a4a4:	ldr	r3, [fp, #-16]
   1a4a8:	add	r2, r2, r3
   1a4ac:	ldr	r3, [fp, #-8]
   1a4b0:	ldr	r3, [r3, #16]
   1a4b4:	cmp	r2, r3
   1a4b8:	bcs	1a4f0 <flatcc_json_printer_get_level@@Base+0xd0>
   1a4bc:	ldr	r3, [fp, #-8]
   1a4c0:	ldr	r3, [r3, #20]
   1a4c4:	ldr	r2, [fp, #-16]
   1a4c8:	ldr	r1, [fp, #-12]
   1a4cc:	mov	r0, r3
   1a4d0:	bl	12444 <memcpy@plt>
   1a4d4:	ldr	r3, [fp, #-8]
   1a4d8:	ldr	r2, [r3, #20]
   1a4dc:	ldr	r3, [fp, #-16]
   1a4e0:	add	r2, r2, r3
   1a4e4:	ldr	r3, [fp, #-8]
   1a4e8:	str	r2, [r3, #20]
   1a4ec:	b	1a500 <flatcc_json_printer_get_level@@Base+0xe0>
   1a4f0:	ldr	r2, [fp, #-16]
   1a4f4:	ldr	r1, [fp, #-12]
   1a4f8:	ldr	r0, [fp, #-8]
   1a4fc:	bl	19af8 <flatcc_json_printer_fmt_bool@@Base+0x1a0>
   1a500:	ldr	r3, [fp, #-8]
   1a504:	ldr	r3, [r3, #20]
   1a508:	mov	r2, #34	; 0x22
   1a50c:	strb	r2, [r3]
   1a510:	ldr	r3, [fp, #-8]
   1a514:	ldr	r3, [r3, #20]
   1a518:	ldr	r2, [fp, #-8]
   1a51c:	ldrb	r2, [r2, #26]
   1a520:	cmp	r2, #0
   1a524:	moveq	r2, #1
   1a528:	movne	r2, #0
   1a52c:	uxtb	r2, r2
   1a530:	add	r2, r3, r2
   1a534:	ldr	r3, [fp, #-8]
   1a538:	str	r2, [r3, #20]
   1a53c:	nop			; (mov r0, r0)
   1a540:	sub	sp, fp, #4
   1a544:	pop	{fp, pc}
   1a548:	push	{fp, lr}
   1a54c:	add	fp, sp, #4
   1a550:	sub	sp, sp, #16
   1a554:	str	r0, [fp, #-8]
   1a558:	str	r1, [fp, #-12]
   1a55c:	str	r2, [fp, #-16]
   1a560:	ldr	r3, [fp, #-8]
   1a564:	ldrb	r3, [r3, #25]
   1a568:	cmp	r3, #0
   1a56c:	beq	1a598 <flatcc_json_printer_get_level@@Base+0x178>
   1a570:	ldr	r3, [fp, #-8]
   1a574:	ldr	r3, [r3, #20]
   1a578:	add	r1, r3, #1
   1a57c:	ldr	r2, [fp, #-8]
   1a580:	str	r1, [r2, #20]
   1a584:	mov	r2, #10
   1a588:	strb	r2, [r3]
   1a58c:	ldr	r0, [fp, #-8]
   1a590:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1a594:	b	1a5a0 <flatcc_json_printer_get_level@@Base+0x180>
   1a598:	ldr	r0, [fp, #-8]
   1a59c:	bl	154c0 <main@@Base+0x728>
   1a5a0:	ldr	r2, [fp, #-16]
   1a5a4:	ldr	r1, [fp, #-12]
   1a5a8:	ldr	r0, [fp, #-8]
   1a5ac:	bl	1a448 <flatcc_json_printer_get_level@@Base+0x28>
   1a5b0:	ldr	r3, [fp, #-8]
   1a5b4:	ldr	r3, [r3, #20]
   1a5b8:	add	r1, r3, #1
   1a5bc:	ldr	r2, [fp, #-8]
   1a5c0:	str	r1, [r2, #20]
   1a5c4:	mov	r2, #58	; 0x3a
   1a5c8:	strb	r2, [r3]
   1a5cc:	ldr	r3, [fp, #-8]
   1a5d0:	ldr	r3, [r3, #20]
   1a5d4:	mov	r2, #32
   1a5d8:	strb	r2, [r3]
   1a5dc:	ldr	r3, [fp, #-8]
   1a5e0:	ldr	r3, [r3, #20]
   1a5e4:	ldr	r2, [fp, #-8]
   1a5e8:	ldrb	r2, [r2, #25]
   1a5ec:	cmp	r2, #0
   1a5f0:	movne	r2, #1
   1a5f4:	moveq	r2, #0
   1a5f8:	uxtb	r2, r2
   1a5fc:	add	r2, r3, r2
   1a600:	ldr	r3, [fp, #-8]
   1a604:	str	r2, [r3, #20]
   1a608:	nop			; (mov r0, r0)
   1a60c:	sub	sp, fp, #4
   1a610:	pop	{fp, pc}

0001a614 <flatcc_json_printer_uint8@@Base>:
   1a614:	push	{fp, lr}
   1a618:	add	fp, sp, #4
   1a61c:	sub	sp, sp, #8
   1a620:	str	r0, [fp, #-8]
   1a624:	mov	r3, r1
   1a628:	strb	r3, [fp, #-9]
   1a62c:	ldr	r3, [fp, #-8]
   1a630:	ldr	r2, [r3, #20]
   1a634:	ldrb	r3, [fp, #-9]
   1a638:	mov	r1, r2
   1a63c:	mov	r0, r3
   1a640:	bl	15578 <main@@Base+0x7e0>
   1a644:	mov	r2, r0
   1a648:	ldr	r3, [fp, #-8]
   1a64c:	ldr	r3, [r3, #20]
   1a650:	add	r2, r3, r2
   1a654:	ldr	r3, [fp, #-8]
   1a658:	str	r2, [r3, #20]
   1a65c:	nop			; (mov r0, r0)
   1a660:	sub	sp, fp, #4
   1a664:	pop	{fp, pc}

0001a668 <flatcc_json_printer_uint16@@Base>:
   1a668:	push	{fp, lr}
   1a66c:	add	fp, sp, #4
   1a670:	sub	sp, sp, #8
   1a674:	str	r0, [fp, #-8]
   1a678:	mov	r3, r1
   1a67c:	strh	r3, [fp, #-10]
   1a680:	ldr	r3, [fp, #-8]
   1a684:	ldr	r2, [r3, #20]
   1a688:	ldrh	r3, [fp, #-10]
   1a68c:	mov	r1, r2
   1a690:	mov	r0, r3
   1a694:	bl	1573c <main@@Base+0x9a4>
   1a698:	mov	r2, r0
   1a69c:	ldr	r3, [fp, #-8]
   1a6a0:	ldr	r3, [r3, #20]
   1a6a4:	add	r2, r3, r2
   1a6a8:	ldr	r3, [fp, #-8]
   1a6ac:	str	r2, [r3, #20]
   1a6b0:	nop			; (mov r0, r0)
   1a6b4:	sub	sp, fp, #4
   1a6b8:	pop	{fp, pc}

0001a6bc <flatcc_json_printer_uint32@@Base>:
   1a6bc:	push	{fp, lr}
   1a6c0:	add	fp, sp, #4
   1a6c4:	sub	sp, sp, #8
   1a6c8:	str	r0, [fp, #-8]
   1a6cc:	str	r1, [fp, #-12]
   1a6d0:	ldr	r3, [fp, #-8]
   1a6d4:	ldr	r3, [r3, #20]
   1a6d8:	mov	r1, r3
   1a6dc:	ldr	r0, [fp, #-12]
   1a6e0:	bl	15a64 <main@@Base+0xccc>
   1a6e4:	mov	r2, r0
   1a6e8:	ldr	r3, [fp, #-8]
   1a6ec:	ldr	r3, [r3, #20]
   1a6f0:	add	r2, r3, r2
   1a6f4:	ldr	r3, [fp, #-8]
   1a6f8:	str	r2, [r3, #20]
   1a6fc:	nop			; (mov r0, r0)
   1a700:	sub	sp, fp, #4
   1a704:	pop	{fp, pc}

0001a708 <flatcc_json_printer_uint64@@Base>:
   1a708:	push	{fp, lr}
   1a70c:	add	fp, sp, #4
   1a710:	sub	sp, sp, #16
   1a714:	str	r0, [fp, #-8]
   1a718:	strd	r2, [fp, #-20]	; 0xffffffec
   1a71c:	ldr	r3, [fp, #-8]
   1a720:	ldr	r3, [r3, #20]
   1a724:	mov	r2, r3
   1a728:	ldrd	r0, [fp, #-20]	; 0xffffffec
   1a72c:	bl	1609c <main@@Base+0x1304>
   1a730:	mov	r2, r0
   1a734:	ldr	r3, [fp, #-8]
   1a738:	ldr	r3, [r3, #20]
   1a73c:	add	r2, r3, r2
   1a740:	ldr	r3, [fp, #-8]
   1a744:	str	r2, [r3, #20]
   1a748:	nop			; (mov r0, r0)
   1a74c:	sub	sp, fp, #4
   1a750:	pop	{fp, pc}

0001a754 <flatcc_json_printer_int8@@Base>:
   1a754:	push	{fp, lr}
   1a758:	add	fp, sp, #4
   1a75c:	sub	sp, sp, #8
   1a760:	str	r0, [fp, #-8]
   1a764:	mov	r3, r1
   1a768:	strb	r3, [fp, #-9]
   1a76c:	ldr	r3, [fp, #-8]
   1a770:	ldr	r2, [r3, #20]
   1a774:	ldrsb	r3, [fp, #-9]
   1a778:	mov	r1, r2
   1a77c:	mov	r0, r3
   1a780:	bl	16c24 <main@@Base+0x1e8c>
   1a784:	mov	r2, r0
   1a788:	ldr	r3, [fp, #-8]
   1a78c:	ldr	r3, [r3, #20]
   1a790:	add	r2, r3, r2
   1a794:	ldr	r3, [fp, #-8]
   1a798:	str	r2, [r3, #20]
   1a79c:	nop			; (mov r0, r0)
   1a7a0:	sub	sp, fp, #4
   1a7a4:	pop	{fp, pc}

0001a7a8 <flatcc_json_printer_int16@@Base>:
   1a7a8:	push	{fp, lr}
   1a7ac:	add	fp, sp, #4
   1a7b0:	sub	sp, sp, #8
   1a7b4:	str	r0, [fp, #-8]
   1a7b8:	mov	r3, r1
   1a7bc:	strh	r3, [fp, #-10]
   1a7c0:	ldr	r3, [fp, #-8]
   1a7c4:	ldr	r2, [r3, #20]
   1a7c8:	ldrsh	r3, [fp, #-10]
   1a7cc:	mov	r1, r2
   1a7d0:	mov	r0, r3
   1a7d4:	bl	16ca4 <main@@Base+0x1f0c>
   1a7d8:	mov	r2, r0
   1a7dc:	ldr	r3, [fp, #-8]
   1a7e0:	ldr	r3, [r3, #20]
   1a7e4:	add	r2, r3, r2
   1a7e8:	ldr	r3, [fp, #-8]
   1a7ec:	str	r2, [r3, #20]
   1a7f0:	nop			; (mov r0, r0)
   1a7f4:	sub	sp, fp, #4
   1a7f8:	pop	{fp, pc}

0001a7fc <flatcc_json_printer_int32@@Base>:
   1a7fc:	push	{fp, lr}
   1a800:	add	fp, sp, #4
   1a804:	sub	sp, sp, #8
   1a808:	str	r0, [fp, #-8]
   1a80c:	str	r1, [fp, #-12]
   1a810:	ldr	r3, [fp, #-8]
   1a814:	ldr	r3, [r3, #20]
   1a818:	mov	r1, r3
   1a81c:	ldr	r0, [fp, #-12]
   1a820:	bl	16d24 <main@@Base+0x1f8c>
   1a824:	mov	r2, r0
   1a828:	ldr	r3, [fp, #-8]
   1a82c:	ldr	r3, [r3, #20]
   1a830:	add	r2, r3, r2
   1a834:	ldr	r3, [fp, #-8]
   1a838:	str	r2, [r3, #20]
   1a83c:	nop			; (mov r0, r0)
   1a840:	sub	sp, fp, #4
   1a844:	pop	{fp, pc}

0001a848 <flatcc_json_printer_int64@@Base>:
   1a848:	push	{fp, lr}
   1a84c:	add	fp, sp, #4
   1a850:	sub	sp, sp, #16
   1a854:	str	r0, [fp, #-8]
   1a858:	strd	r2, [fp, #-20]	; 0xffffffec
   1a85c:	ldr	r3, [fp, #-8]
   1a860:	ldr	r3, [r3, #20]
   1a864:	mov	r2, r3
   1a868:	ldrd	r0, [fp, #-20]	; 0xffffffec
   1a86c:	bl	16d9c <main@@Base+0x2004>
   1a870:	mov	r2, r0
   1a874:	ldr	r3, [fp, #-8]
   1a878:	ldr	r3, [r3, #20]
   1a87c:	add	r2, r3, r2
   1a880:	ldr	r3, [fp, #-8]
   1a884:	str	r2, [r3, #20]
   1a888:	nop			; (mov r0, r0)
   1a88c:	sub	sp, fp, #4
   1a890:	pop	{fp, pc}

0001a894 <flatcc_json_printer_float@@Base>:
   1a894:	push	{fp, lr}
   1a898:	add	fp, sp, #4
   1a89c:	sub	sp, sp, #8
   1a8a0:	str	r0, [fp, #-8]
   1a8a4:	vstr	s0, [fp, #-12]
   1a8a8:	vldr	s15, [fp, #-12]
   1a8ac:	vcvt.f64.f32	d7, s15
   1a8b0:	ldr	r3, [fp, #-8]
   1a8b4:	ldr	r3, [r3, #20]
   1a8b8:	mov	r0, r3
   1a8bc:	vmov.f64	d0, d7
   1a8c0:	bl	186f0 <main@@Base+0x3958>
   1a8c4:	mov	r2, r0
   1a8c8:	ldr	r3, [fp, #-8]
   1a8cc:	ldr	r3, [r3, #20]
   1a8d0:	add	r2, r3, r2
   1a8d4:	ldr	r3, [fp, #-8]
   1a8d8:	str	r2, [r3, #20]
   1a8dc:	nop			; (mov r0, r0)
   1a8e0:	sub	sp, fp, #4
   1a8e4:	pop	{fp, pc}

0001a8e8 <flatcc_json_printer_double@@Base>:
   1a8e8:	push	{fp, lr}
   1a8ec:	add	fp, sp, #4
   1a8f0:	sub	sp, sp, #16
   1a8f4:	str	r0, [fp, #-8]
   1a8f8:	vstr	d0, [fp, #-20]	; 0xffffffec
   1a8fc:	ldr	r3, [fp, #-8]
   1a900:	ldr	r3, [r3, #20]
   1a904:	mov	r0, r3
   1a908:	vldr	d0, [fp, #-20]	; 0xffffffec
   1a90c:	bl	186f0 <main@@Base+0x3958>
   1a910:	mov	r2, r0
   1a914:	ldr	r3, [fp, #-8]
   1a918:	ldr	r3, [r3, #20]
   1a91c:	add	r2, r3, r2
   1a920:	ldr	r3, [fp, #-8]
   1a924:	str	r2, [r3, #20]
   1a928:	nop			; (mov r0, r0)
   1a92c:	sub	sp, fp, #4
   1a930:	pop	{fp, pc}

0001a934 <flatcc_json_printer_enum@@Base>:
   1a934:	push	{fp, lr}
   1a938:	add	fp, sp, #4
   1a93c:	sub	sp, sp, #16
   1a940:	str	r0, [fp, #-8]
   1a944:	str	r1, [fp, #-12]
   1a948:	str	r2, [fp, #-16]
   1a94c:	ldr	r3, [fp, #-16]
   1a950:	mov	r2, r3
   1a954:	ldr	r1, [fp, #-12]
   1a958:	ldr	r0, [fp, #-8]
   1a95c:	bl	1a448 <flatcc_json_printer_get_level@@Base+0x28>
   1a960:	nop			; (mov r0, r0)
   1a964:	sub	sp, fp, #4
   1a968:	pop	{fp, pc}

0001a96c <flatcc_json_printer_delimit_enum_flags@@Base>:
   1a96c:	push	{fp}		; (str fp, [sp, #-4]!)
   1a970:	add	fp, sp, #0
   1a974:	sub	sp, sp, #20
   1a978:	str	r0, [fp, #-16]
   1a97c:	str	r1, [fp, #-20]	; 0xffffffec
   1a980:	ldr	r3, [fp, #-16]
   1a984:	ldrb	r3, [r3, #26]
   1a988:	cmp	r3, #0
   1a98c:	beq	1a99c <flatcc_json_printer_delimit_enum_flags@@Base+0x30>
   1a990:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a994:	cmp	r3, #0
   1a998:	beq	1a9a4 <flatcc_json_printer_delimit_enum_flags@@Base+0x38>
   1a99c:	mov	r3, #1
   1a9a0:	b	1a9a8 <flatcc_json_printer_delimit_enum_flags@@Base+0x3c>
   1a9a4:	mov	r3, #0
   1a9a8:	str	r3, [fp, #-8]
   1a9ac:	ldr	r3, [fp, #-16]
   1a9b0:	ldr	r3, [r3, #20]
   1a9b4:	mov	r2, #34	; 0x22
   1a9b8:	strb	r2, [r3]
   1a9bc:	ldr	r3, [fp, #-16]
   1a9c0:	ldr	r2, [r3, #20]
   1a9c4:	ldr	r3, [fp, #-8]
   1a9c8:	add	r2, r2, r3
   1a9cc:	ldr	r3, [fp, #-16]
   1a9d0:	str	r2, [r3, #20]
   1a9d4:	nop			; (mov r0, r0)
   1a9d8:	add	sp, fp, #0
   1a9dc:	pop	{fp}		; (ldr fp, [sp], #4)
   1a9e0:	bx	lr

0001a9e4 <flatcc_json_printer_enum_flag@@Base>:
   1a9e4:	push	{fp, lr}
   1a9e8:	add	fp, sp, #4
   1a9ec:	sub	sp, sp, #16
   1a9f0:	str	r0, [fp, #-8]
   1a9f4:	str	r1, [fp, #-12]
   1a9f8:	str	r2, [fp, #-16]
   1a9fc:	str	r3, [fp, #-20]	; 0xffffffec
   1aa00:	ldr	r3, [fp, #-8]
   1aa04:	ldr	r3, [r3, #20]
   1aa08:	mov	r2, #32
   1aa0c:	strb	r2, [r3]
   1aa10:	ldr	r3, [fp, #-8]
   1aa14:	ldr	r3, [r3, #20]
   1aa18:	ldr	r2, [fp, #-12]
   1aa1c:	cmp	r2, #0
   1aa20:	movgt	r2, #1
   1aa24:	movle	r2, #0
   1aa28:	uxtb	r2, r2
   1aa2c:	add	r2, r3, r2
   1aa30:	ldr	r3, [fp, #-8]
   1aa34:	str	r2, [r3, #20]
   1aa38:	ldr	r3, [fp, #-20]	; 0xffffffec
   1aa3c:	mov	r2, r3
   1aa40:	ldr	r1, [fp, #-16]
   1aa44:	ldr	r0, [fp, #-8]
   1aa48:	bl	19af8 <flatcc_json_printer_fmt_bool@@Base+0x1a0>
   1aa4c:	nop			; (mov r0, r0)
   1aa50:	sub	sp, fp, #4
   1aa54:	pop	{fp, pc}
   1aa58:	push	{fp, lr}
   1aa5c:	add	fp, sp, #4
   1aa60:	sub	sp, sp, #16
   1aa64:	str	r0, [fp, #-16]
   1aa68:	str	r1, [fp, #-20]	; 0xffffffec
   1aa6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1aa70:	bl	152ac <main@@Base+0x514>
   1aa74:	str	r0, [fp, #-8]
   1aa78:	ldr	r3, [fp, #-20]	; 0xffffffec
   1aa7c:	add	r3, r3, #4
   1aa80:	str	r3, [fp, #-12]
   1aa84:	ldr	r2, [fp, #-8]
   1aa88:	ldr	r1, [fp, #-12]
   1aa8c:	ldr	r0, [fp, #-16]
   1aa90:	bl	19b80 <flatcc_json_printer_fmt_bool@@Base+0x228>
   1aa94:	nop			; (mov r0, r0)
   1aa98:	sub	sp, fp, #4
   1aa9c:	pop	{fp, pc}
   1aaa0:	push	{fp, lr}
   1aaa4:	add	fp, sp, #4
   1aaa8:	sub	sp, sp, #40	; 0x28
   1aaac:	str	r0, [fp, #-32]	; 0xffffffe0
   1aab0:	str	r1, [fp, #-36]	; 0xffffffdc
   1aab4:	str	r2, [fp, #-40]	; 0xffffffd8
   1aab8:	str	r3, [fp, #-44]	; 0xffffffd4
   1aabc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1aac0:	sub	r3, r3, #1
   1aac4:	str	r3, [fp, #-40]	; 0xffffffd8
   1aac8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1aacc:	cmp	r3, #0
   1aad0:	bne	1aae4 <flatcc_json_printer_enum_flag@@Base+0x100>
   1aad4:	mov	r1, #2
   1aad8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1aadc:	bl	15458 <main@@Base+0x6c0>
   1aae0:	b	1abd4 <flatcc_json_printer_enum_flag@@Base+0x1f0>
   1aae4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1aae8:	ldr	r3, [r3, #32]
   1aaec:	add	r2, r3, #1
   1aaf0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1aaf4:	str	r2, [r3, #32]
   1aaf8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1aafc:	ldr	r3, [r3, #20]
   1ab00:	add	r1, r3, #1
   1ab04:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ab08:	str	r1, [r2, #20]
   1ab0c:	mov	r2, #123	; 0x7b
   1ab10:	strb	r2, [r3]
   1ab14:	mov	r3, #0
   1ab18:	str	r3, [fp, #-8]
   1ab1c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ab20:	str	r3, [fp, #-12]
   1ab24:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ab28:	str	r3, [fp, #-24]	; 0xffffffe8
   1ab2c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ab30:	bl	15300 <main@@Base+0x568>
   1ab34:	mov	r3, r0
   1ab38:	rsb	r3, r3, #0
   1ab3c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ab40:	add	r3, r2, r3
   1ab44:	str	r3, [fp, #-20]	; 0xffffffec
   1ab48:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ab4c:	mov	r0, r3
   1ab50:	bl	15358 <main@@Base+0x5c0>
   1ab54:	mov	r3, r0
   1ab58:	str	r3, [fp, #-16]
   1ab5c:	sub	r2, fp, #24
   1ab60:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ab64:	mov	r1, r2
   1ab68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ab6c:	blx	r3
   1ab70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ab74:	ldrb	r3, [r3, #25]
   1ab78:	cmp	r3, #0
   1ab7c:	beq	1abb8 <flatcc_json_printer_enum_flag@@Base+0x1d4>
   1ab80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ab84:	ldr	r3, [r3, #20]
   1ab88:	add	r1, r3, #1
   1ab8c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ab90:	str	r1, [r2, #20]
   1ab94:	mov	r2, #10
   1ab98:	strb	r2, [r3]
   1ab9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1aba0:	ldr	r3, [r3, #32]
   1aba4:	sub	r2, r3, #1
   1aba8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1abac:	str	r2, [r3, #32]
   1abb0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1abb4:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1abb8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1abbc:	ldr	r3, [r3, #20]
   1abc0:	add	r1, r3, #1
   1abc4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1abc8:	str	r1, [r2, #20]
   1abcc:	mov	r2, #125	; 0x7d
   1abd0:	strb	r2, [r3]
   1abd4:	sub	sp, fp, #4
   1abd8:	pop	{fp, pc}

0001abdc <flatcc_json_printer_string_field@@Base>:
   1abdc:	push	{fp, lr}
   1abe0:	add	fp, sp, #4
   1abe4:	sub	sp, sp, #24
   1abe8:	str	r0, [fp, #-16]
   1abec:	str	r1, [fp, #-20]	; 0xffffffec
   1abf0:	str	r2, [fp, #-24]	; 0xffffffe8
   1abf4:	str	r3, [fp, #-28]	; 0xffffffe4
   1abf8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1abfc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ac00:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   1ac04:	str	r0, [fp, #-8]
   1ac08:	ldr	r3, [fp, #-8]
   1ac0c:	cmp	r3, #0
   1ac10:	beq	1ac78 <flatcc_json_printer_string_field@@Base+0x9c>
   1ac14:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ac18:	ldr	r3, [r3, #16]
   1ac1c:	add	r1, r3, #1
   1ac20:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ac24:	str	r1, [r2, #16]
   1ac28:	cmp	r3, #0
   1ac2c:	beq	1ac4c <flatcc_json_printer_string_field@@Base+0x70>
   1ac30:	ldr	r3, [fp, #-16]
   1ac34:	ldr	r3, [r3, #20]
   1ac38:	add	r1, r3, #1
   1ac3c:	ldr	r2, [fp, #-16]
   1ac40:	str	r1, [r2, #20]
   1ac44:	mov	r2, #44	; 0x2c
   1ac48:	strb	r2, [r3]
   1ac4c:	ldr	r3, [fp, #4]
   1ac50:	mov	r2, r3
   1ac54:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ac58:	ldr	r0, [fp, #-16]
   1ac5c:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1ac60:	ldr	r0, [fp, #-8]
   1ac64:	bl	197f8 <flatcc_json_printer_error_string@@Base+0x8c>
   1ac68:	mov	r3, r0
   1ac6c:	mov	r1, r3
   1ac70:	ldr	r0, [fp, #-16]
   1ac74:	bl	1aa58 <flatcc_json_printer_enum_flag@@Base+0x74>
   1ac78:	nop			; (mov r0, r0)
   1ac7c:	sub	sp, fp, #4
   1ac80:	pop	{fp, pc}

0001ac84 <flatcc_json_printer_uint8_vector_base64_field@@Base>:
   1ac84:	push	{fp, lr}
   1ac88:	add	fp, sp, #4
   1ac8c:	sub	sp, sp, #24
   1ac90:	str	r0, [fp, #-16]
   1ac94:	str	r1, [fp, #-20]	; 0xffffffec
   1ac98:	str	r2, [fp, #-24]	; 0xffffffe8
   1ac9c:	str	r3, [fp, #-28]	; 0xffffffe4
   1aca0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1aca4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1aca8:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   1acac:	str	r0, [fp, #-8]
   1acb0:	ldr	r3, [fp, #8]
   1acb4:	cmp	r3, #0
   1acb8:	movne	r3, #1
   1acbc:	moveq	r3, #0
   1acc0:	uxtb	r3, r3
   1acc4:	str	r3, [fp, #-12]
   1acc8:	ldr	r3, [fp, #-12]
   1accc:	orr	r3, r3, #128	; 0x80
   1acd0:	str	r3, [fp, #-12]
   1acd4:	ldr	r3, [fp, #-8]
   1acd8:	cmp	r3, #0
   1acdc:	beq	1ad48 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xc4>
   1ace0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ace4:	ldr	r3, [r3, #16]
   1ace8:	add	r1, r3, #1
   1acec:	ldr	r2, [fp, #-20]	; 0xffffffec
   1acf0:	str	r1, [r2, #16]
   1acf4:	cmp	r3, #0
   1acf8:	beq	1ad18 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x94>
   1acfc:	ldr	r3, [fp, #-16]
   1ad00:	ldr	r3, [r3, #20]
   1ad04:	add	r1, r3, #1
   1ad08:	ldr	r2, [fp, #-16]
   1ad0c:	str	r1, [r2, #20]
   1ad10:	mov	r2, #44	; 0x2c
   1ad14:	strb	r2, [r3]
   1ad18:	ldr	r3, [fp, #4]
   1ad1c:	mov	r2, r3
   1ad20:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ad24:	ldr	r0, [fp, #-16]
   1ad28:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1ad2c:	ldr	r0, [fp, #-8]
   1ad30:	bl	197f8 <flatcc_json_printer_error_string@@Base+0x8c>
   1ad34:	mov	r3, r0
   1ad38:	ldr	r2, [fp, #-12]
   1ad3c:	mov	r1, r3
   1ad40:	ldr	r0, [fp, #-16]
   1ad44:	bl	19ee0 <flatcc_json_printer_fmt_bool@@Base+0x588>
   1ad48:	nop			; (mov r0, r0)
   1ad4c:	sub	sp, fp, #4
   1ad50:	pop	{fp, pc}

0001ad54 <flatcc_json_printer_uint8_field@@Base>:
   1ad54:	push	{fp, lr}
   1ad58:	add	fp, sp, #4
   1ad5c:	sub	sp, sp, #24
   1ad60:	str	r0, [fp, #-16]
   1ad64:	str	r1, [fp, #-20]	; 0xffffffec
   1ad68:	str	r2, [fp, #-24]	; 0xffffffe8
   1ad6c:	str	r3, [fp, #-28]	; 0xffffffe4
   1ad70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ad74:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ad78:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   1ad7c:	str	r0, [fp, #-12]
   1ad80:	ldr	r3, [fp, #-12]
   1ad84:	cmp	r3, #0
   1ad88:	beq	1adc0 <flatcc_json_printer_uint8_field@@Base+0x6c>
   1ad8c:	ldr	r0, [fp, #-12]
   1ad90:	bl	14eb8 <main@@Base+0x120>
   1ad94:	mov	r3, r0
   1ad98:	strb	r3, [fp, #-5]
   1ad9c:	ldrb	r2, [fp, #-5]
   1ada0:	ldrb	r3, [fp, #8]
   1ada4:	cmp	r2, r3
   1ada8:	bne	1add8 <flatcc_json_printer_uint8_field@@Base+0x84>
   1adac:	ldr	r3, [fp, #-16]
   1adb0:	ldrb	r3, [r3, #28]
   1adb4:	cmp	r3, #0
   1adb8:	beq	1add8 <flatcc_json_printer_uint8_field@@Base+0x84>
   1adbc:	b	1ae5c <flatcc_json_printer_uint8_field@@Base+0x108>
   1adc0:	ldr	r3, [fp, #-16]
   1adc4:	ldrb	r3, [r3, #29]
   1adc8:	cmp	r3, #0
   1adcc:	beq	1ae58 <flatcc_json_printer_uint8_field@@Base+0x104>
   1add0:	ldrb	r3, [fp, #8]
   1add4:	strb	r3, [fp, #-5]
   1add8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1addc:	ldr	r3, [r3, #16]
   1ade0:	add	r1, r3, #1
   1ade4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ade8:	str	r1, [r2, #16]
   1adec:	cmp	r3, #0
   1adf0:	beq	1ae10 <flatcc_json_printer_uint8_field@@Base+0xbc>
   1adf4:	ldr	r3, [fp, #-16]
   1adf8:	ldr	r3, [r3, #20]
   1adfc:	add	r1, r3, #1
   1ae00:	ldr	r2, [fp, #-16]
   1ae04:	str	r1, [r2, #20]
   1ae08:	mov	r2, #44	; 0x2c
   1ae0c:	strb	r2, [r3]
   1ae10:	ldr	r3, [fp, #4]
   1ae14:	mov	r2, r3
   1ae18:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ae1c:	ldr	r0, [fp, #-16]
   1ae20:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1ae24:	ldr	r3, [fp, #-16]
   1ae28:	ldr	r2, [r3, #20]
   1ae2c:	ldrb	r3, [fp, #-5]
   1ae30:	mov	r1, r2
   1ae34:	mov	r0, r3
   1ae38:	bl	15578 <main@@Base+0x7e0>
   1ae3c:	mov	r2, r0
   1ae40:	ldr	r3, [fp, #-16]
   1ae44:	ldr	r3, [r3, #20]
   1ae48:	add	r2, r3, r2
   1ae4c:	ldr	r3, [fp, #-16]
   1ae50:	str	r2, [r3, #20]
   1ae54:	b	1ae5c <flatcc_json_printer_uint8_field@@Base+0x108>
   1ae58:	nop			; (mov r0, r0)
   1ae5c:	sub	sp, fp, #4
   1ae60:	pop	{fp, pc}

0001ae64 <flatcc_json_printer_uint16_field@@Base>:
   1ae64:	push	{fp, lr}
   1ae68:	add	fp, sp, #4
   1ae6c:	sub	sp, sp, #24
   1ae70:	str	r0, [fp, #-16]
   1ae74:	str	r1, [fp, #-20]	; 0xffffffec
   1ae78:	str	r2, [fp, #-24]	; 0xffffffe8
   1ae7c:	str	r3, [fp, #-28]	; 0xffffffe4
   1ae80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ae84:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ae88:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   1ae8c:	str	r0, [fp, #-12]
   1ae90:	ldr	r3, [fp, #-12]
   1ae94:	cmp	r3, #0
   1ae98:	beq	1aed0 <flatcc_json_printer_uint16_field@@Base+0x6c>
   1ae9c:	ldr	r0, [fp, #-12]
   1aea0:	bl	14f10 <main@@Base+0x178>
   1aea4:	mov	r3, r0
   1aea8:	strh	r3, [fp, #-6]
   1aeac:	ldrh	r2, [fp, #-6]
   1aeb0:	ldrh	r3, [fp, #8]
   1aeb4:	cmp	r2, r3
   1aeb8:	bne	1aee8 <flatcc_json_printer_uint16_field@@Base+0x84>
   1aebc:	ldr	r3, [fp, #-16]
   1aec0:	ldrb	r3, [r3, #28]
   1aec4:	cmp	r3, #0
   1aec8:	beq	1aee8 <flatcc_json_printer_uint16_field@@Base+0x84>
   1aecc:	b	1af6c <flatcc_json_printer_uint16_field@@Base+0x108>
   1aed0:	ldr	r3, [fp, #-16]
   1aed4:	ldrb	r3, [r3, #29]
   1aed8:	cmp	r3, #0
   1aedc:	beq	1af68 <flatcc_json_printer_uint16_field@@Base+0x104>
   1aee0:	ldrh	r3, [fp, #8]
   1aee4:	strh	r3, [fp, #-6]
   1aee8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1aeec:	ldr	r3, [r3, #16]
   1aef0:	add	r1, r3, #1
   1aef4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1aef8:	str	r1, [r2, #16]
   1aefc:	cmp	r3, #0
   1af00:	beq	1af20 <flatcc_json_printer_uint16_field@@Base+0xbc>
   1af04:	ldr	r3, [fp, #-16]
   1af08:	ldr	r3, [r3, #20]
   1af0c:	add	r1, r3, #1
   1af10:	ldr	r2, [fp, #-16]
   1af14:	str	r1, [r2, #20]
   1af18:	mov	r2, #44	; 0x2c
   1af1c:	strb	r2, [r3]
   1af20:	ldr	r3, [fp, #4]
   1af24:	mov	r2, r3
   1af28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1af2c:	ldr	r0, [fp, #-16]
   1af30:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1af34:	ldr	r3, [fp, #-16]
   1af38:	ldr	r2, [r3, #20]
   1af3c:	ldrh	r3, [fp, #-6]
   1af40:	mov	r1, r2
   1af44:	mov	r0, r3
   1af48:	bl	1573c <main@@Base+0x9a4>
   1af4c:	mov	r2, r0
   1af50:	ldr	r3, [fp, #-16]
   1af54:	ldr	r3, [r3, #20]
   1af58:	add	r2, r3, r2
   1af5c:	ldr	r3, [fp, #-16]
   1af60:	str	r2, [r3, #20]
   1af64:	b	1af6c <flatcc_json_printer_uint16_field@@Base+0x108>
   1af68:	nop			; (mov r0, r0)
   1af6c:	sub	sp, fp, #4
   1af70:	pop	{fp, pc}

0001af74 <flatcc_json_printer_uint32_field@@Base>:
   1af74:	push	{fp, lr}
   1af78:	add	fp, sp, #4
   1af7c:	sub	sp, sp, #24
   1af80:	str	r0, [fp, #-16]
   1af84:	str	r1, [fp, #-20]	; 0xffffffec
   1af88:	str	r2, [fp, #-24]	; 0xffffffe8
   1af8c:	str	r3, [fp, #-28]	; 0xffffffe4
   1af90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1af94:	ldr	r0, [fp, #-20]	; 0xffffffec
   1af98:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   1af9c:	str	r0, [fp, #-12]
   1afa0:	ldr	r3, [fp, #-12]
   1afa4:	cmp	r3, #0
   1afa8:	beq	1afdc <flatcc_json_printer_uint32_field@@Base+0x68>
   1afac:	ldr	r0, [fp, #-12]
   1afb0:	bl	14f64 <main@@Base+0x1cc>
   1afb4:	str	r0, [fp, #-8]
   1afb8:	ldr	r2, [fp, #-8]
   1afbc:	ldr	r3, [fp, #8]
   1afc0:	cmp	r2, r3
   1afc4:	bne	1aff4 <flatcc_json_printer_uint32_field@@Base+0x80>
   1afc8:	ldr	r3, [fp, #-16]
   1afcc:	ldrb	r3, [r3, #28]
   1afd0:	cmp	r3, #0
   1afd4:	beq	1aff4 <flatcc_json_printer_uint32_field@@Base+0x80>
   1afd8:	b	1b074 <flatcc_json_printer_uint32_field@@Base+0x100>
   1afdc:	ldr	r3, [fp, #-16]
   1afe0:	ldrb	r3, [r3, #29]
   1afe4:	cmp	r3, #0
   1afe8:	beq	1b070 <flatcc_json_printer_uint32_field@@Base+0xfc>
   1afec:	ldr	r3, [fp, #8]
   1aff0:	str	r3, [fp, #-8]
   1aff4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1aff8:	ldr	r3, [r3, #16]
   1affc:	add	r1, r3, #1
   1b000:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b004:	str	r1, [r2, #16]
   1b008:	cmp	r3, #0
   1b00c:	beq	1b02c <flatcc_json_printer_uint32_field@@Base+0xb8>
   1b010:	ldr	r3, [fp, #-16]
   1b014:	ldr	r3, [r3, #20]
   1b018:	add	r1, r3, #1
   1b01c:	ldr	r2, [fp, #-16]
   1b020:	str	r1, [r2, #20]
   1b024:	mov	r2, #44	; 0x2c
   1b028:	strb	r2, [r3]
   1b02c:	ldr	r3, [fp, #4]
   1b030:	mov	r2, r3
   1b034:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b038:	ldr	r0, [fp, #-16]
   1b03c:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1b040:	ldr	r3, [fp, #-16]
   1b044:	ldr	r3, [r3, #20]
   1b048:	mov	r1, r3
   1b04c:	ldr	r0, [fp, #-8]
   1b050:	bl	15a64 <main@@Base+0xccc>
   1b054:	mov	r2, r0
   1b058:	ldr	r3, [fp, #-16]
   1b05c:	ldr	r3, [r3, #20]
   1b060:	add	r2, r3, r2
   1b064:	ldr	r3, [fp, #-16]
   1b068:	str	r2, [r3, #20]
   1b06c:	b	1b074 <flatcc_json_printer_uint32_field@@Base+0x100>
   1b070:	nop			; (mov r0, r0)
   1b074:	sub	sp, fp, #4
   1b078:	pop	{fp, pc}

0001b07c <flatcc_json_printer_uint64_field@@Base>:
   1b07c:	push	{fp, lr}
   1b080:	add	fp, sp, #4
   1b084:	sub	sp, sp, #32
   1b088:	str	r0, [fp, #-24]	; 0xffffffe8
   1b08c:	str	r1, [fp, #-28]	; 0xffffffe4
   1b090:	str	r2, [fp, #-32]	; 0xffffffe0
   1b094:	str	r3, [fp, #-36]	; 0xffffffdc
   1b098:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1b09c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b0a0:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   1b0a4:	str	r0, [fp, #-16]
   1b0a8:	ldr	r3, [fp, #-16]
   1b0ac:	cmp	r3, #0
   1b0b0:	beq	1b0e8 <flatcc_json_printer_uint64_field@@Base+0x6c>
   1b0b4:	ldr	r0, [fp, #-16]
   1b0b8:	bl	14fbc <main@@Base+0x224>
   1b0bc:	strd	r0, [fp, #-12]
   1b0c0:	ldrd	r0, [fp, #-12]
   1b0c4:	ldrd	r2, [fp, #12]
   1b0c8:	cmp	r1, r3
   1b0cc:	cmpeq	r0, r2
   1b0d0:	bne	1b100 <flatcc_json_printer_uint64_field@@Base+0x84>
   1b0d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b0d8:	ldrb	r3, [r3, #28]
   1b0dc:	cmp	r3, #0
   1b0e0:	beq	1b100 <flatcc_json_printer_uint64_field@@Base+0x84>
   1b0e4:	b	1b180 <flatcc_json_printer_uint64_field@@Base+0x104>
   1b0e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b0ec:	ldrb	r3, [r3, #29]
   1b0f0:	cmp	r3, #0
   1b0f4:	beq	1b17c <flatcc_json_printer_uint64_field@@Base+0x100>
   1b0f8:	ldrd	r2, [fp, #12]
   1b0fc:	strd	r2, [fp, #-12]
   1b100:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b104:	ldr	r3, [r3, #16]
   1b108:	add	r1, r3, #1
   1b10c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1b110:	str	r1, [r2, #16]
   1b114:	cmp	r3, #0
   1b118:	beq	1b138 <flatcc_json_printer_uint64_field@@Base+0xbc>
   1b11c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b120:	ldr	r3, [r3, #20]
   1b124:	add	r1, r3, #1
   1b128:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b12c:	str	r1, [r2, #20]
   1b130:	mov	r2, #44	; 0x2c
   1b134:	strb	r2, [r3]
   1b138:	ldr	r3, [fp, #4]
   1b13c:	mov	r2, r3
   1b140:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1b144:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b148:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1b14c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b150:	ldr	r3, [r3, #20]
   1b154:	mov	r2, r3
   1b158:	ldrd	r0, [fp, #-12]
   1b15c:	bl	1609c <main@@Base+0x1304>
   1b160:	mov	r2, r0
   1b164:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b168:	ldr	r3, [r3, #20]
   1b16c:	add	r2, r3, r2
   1b170:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b174:	str	r2, [r3, #20]
   1b178:	b	1b180 <flatcc_json_printer_uint64_field@@Base+0x104>
   1b17c:	nop			; (mov r0, r0)
   1b180:	sub	sp, fp, #4
   1b184:	pop	{fp, pc}

0001b188 <flatcc_json_printer_int8_field@@Base>:
   1b188:	push	{fp, lr}
   1b18c:	add	fp, sp, #4
   1b190:	sub	sp, sp, #24
   1b194:	str	r0, [fp, #-16]
   1b198:	str	r1, [fp, #-20]	; 0xffffffec
   1b19c:	str	r2, [fp, #-24]	; 0xffffffe8
   1b1a0:	str	r3, [fp, #-28]	; 0xffffffe4
   1b1a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b1a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b1ac:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   1b1b0:	str	r0, [fp, #-12]
   1b1b4:	ldr	r3, [fp, #-12]
   1b1b8:	cmp	r3, #0
   1b1bc:	beq	1b1f4 <flatcc_json_printer_int8_field@@Base+0x6c>
   1b1c0:	ldr	r0, [fp, #-12]
   1b1c4:	bl	15020 <main@@Base+0x288>
   1b1c8:	mov	r3, r0
   1b1cc:	strb	r3, [fp, #-5]
   1b1d0:	ldrsb	r2, [fp, #-5]
   1b1d4:	ldrsb	r3, [fp, #8]
   1b1d8:	cmp	r2, r3
   1b1dc:	bne	1b20c <flatcc_json_printer_int8_field@@Base+0x84>
   1b1e0:	ldr	r3, [fp, #-16]
   1b1e4:	ldrb	r3, [r3, #28]
   1b1e8:	cmp	r3, #0
   1b1ec:	beq	1b20c <flatcc_json_printer_int8_field@@Base+0x84>
   1b1f0:	b	1b290 <flatcc_json_printer_int8_field@@Base+0x108>
   1b1f4:	ldr	r3, [fp, #-16]
   1b1f8:	ldrb	r3, [r3, #29]
   1b1fc:	cmp	r3, #0
   1b200:	beq	1b28c <flatcc_json_printer_int8_field@@Base+0x104>
   1b204:	ldrb	r3, [fp, #8]
   1b208:	strb	r3, [fp, #-5]
   1b20c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b210:	ldr	r3, [r3, #16]
   1b214:	add	r1, r3, #1
   1b218:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b21c:	str	r1, [r2, #16]
   1b220:	cmp	r3, #0
   1b224:	beq	1b244 <flatcc_json_printer_int8_field@@Base+0xbc>
   1b228:	ldr	r3, [fp, #-16]
   1b22c:	ldr	r3, [r3, #20]
   1b230:	add	r1, r3, #1
   1b234:	ldr	r2, [fp, #-16]
   1b238:	str	r1, [r2, #20]
   1b23c:	mov	r2, #44	; 0x2c
   1b240:	strb	r2, [r3]
   1b244:	ldr	r3, [fp, #4]
   1b248:	mov	r2, r3
   1b24c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b250:	ldr	r0, [fp, #-16]
   1b254:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1b258:	ldr	r3, [fp, #-16]
   1b25c:	ldr	r2, [r3, #20]
   1b260:	ldrsb	r3, [fp, #-5]
   1b264:	mov	r1, r2
   1b268:	mov	r0, r3
   1b26c:	bl	16c24 <main@@Base+0x1e8c>
   1b270:	mov	r2, r0
   1b274:	ldr	r3, [fp, #-16]
   1b278:	ldr	r3, [r3, #20]
   1b27c:	add	r2, r3, r2
   1b280:	ldr	r3, [fp, #-16]
   1b284:	str	r2, [r3, #20]
   1b288:	b	1b290 <flatcc_json_printer_int8_field@@Base+0x108>
   1b28c:	nop			; (mov r0, r0)
   1b290:	sub	sp, fp, #4
   1b294:	pop	{fp, pc}

0001b298 <flatcc_json_printer_int16_field@@Base>:
   1b298:	push	{fp, lr}
   1b29c:	add	fp, sp, #4
   1b2a0:	sub	sp, sp, #24
   1b2a4:	str	r0, [fp, #-16]
   1b2a8:	str	r1, [fp, #-20]	; 0xffffffec
   1b2ac:	str	r2, [fp, #-24]	; 0xffffffe8
   1b2b0:	str	r3, [fp, #-28]	; 0xffffffe4
   1b2b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b2b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b2bc:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   1b2c0:	str	r0, [fp, #-12]
   1b2c4:	ldr	r3, [fp, #-12]
   1b2c8:	cmp	r3, #0
   1b2cc:	beq	1b304 <flatcc_json_printer_int16_field@@Base+0x6c>
   1b2d0:	ldr	r0, [fp, #-12]
   1b2d4:	bl	15078 <main@@Base+0x2e0>
   1b2d8:	mov	r3, r0
   1b2dc:	strh	r3, [fp, #-6]
   1b2e0:	ldrsh	r2, [fp, #-6]
   1b2e4:	ldrsh	r3, [fp, #8]
   1b2e8:	cmp	r2, r3
   1b2ec:	bne	1b31c <flatcc_json_printer_int16_field@@Base+0x84>
   1b2f0:	ldr	r3, [fp, #-16]
   1b2f4:	ldrb	r3, [r3, #28]
   1b2f8:	cmp	r3, #0
   1b2fc:	beq	1b31c <flatcc_json_printer_int16_field@@Base+0x84>
   1b300:	b	1b3a0 <flatcc_json_printer_int16_field@@Base+0x108>
   1b304:	ldr	r3, [fp, #-16]
   1b308:	ldrb	r3, [r3, #29]
   1b30c:	cmp	r3, #0
   1b310:	beq	1b39c <flatcc_json_printer_int16_field@@Base+0x104>
   1b314:	ldrh	r3, [fp, #8]
   1b318:	strh	r3, [fp, #-6]
   1b31c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b320:	ldr	r3, [r3, #16]
   1b324:	add	r1, r3, #1
   1b328:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b32c:	str	r1, [r2, #16]
   1b330:	cmp	r3, #0
   1b334:	beq	1b354 <flatcc_json_printer_int16_field@@Base+0xbc>
   1b338:	ldr	r3, [fp, #-16]
   1b33c:	ldr	r3, [r3, #20]
   1b340:	add	r1, r3, #1
   1b344:	ldr	r2, [fp, #-16]
   1b348:	str	r1, [r2, #20]
   1b34c:	mov	r2, #44	; 0x2c
   1b350:	strb	r2, [r3]
   1b354:	ldr	r3, [fp, #4]
   1b358:	mov	r2, r3
   1b35c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b360:	ldr	r0, [fp, #-16]
   1b364:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1b368:	ldr	r3, [fp, #-16]
   1b36c:	ldr	r2, [r3, #20]
   1b370:	ldrsh	r3, [fp, #-6]
   1b374:	mov	r1, r2
   1b378:	mov	r0, r3
   1b37c:	bl	16ca4 <main@@Base+0x1f0c>
   1b380:	mov	r2, r0
   1b384:	ldr	r3, [fp, #-16]
   1b388:	ldr	r3, [r3, #20]
   1b38c:	add	r2, r3, r2
   1b390:	ldr	r3, [fp, #-16]
   1b394:	str	r2, [r3, #20]
   1b398:	b	1b3a0 <flatcc_json_printer_int16_field@@Base+0x108>
   1b39c:	nop			; (mov r0, r0)
   1b3a0:	sub	sp, fp, #4
   1b3a4:	pop	{fp, pc}

0001b3a8 <flatcc_json_printer_int32_field@@Base>:
   1b3a8:	push	{fp, lr}
   1b3ac:	add	fp, sp, #4
   1b3b0:	sub	sp, sp, #24
   1b3b4:	str	r0, [fp, #-16]
   1b3b8:	str	r1, [fp, #-20]	; 0xffffffec
   1b3bc:	str	r2, [fp, #-24]	; 0xffffffe8
   1b3c0:	str	r3, [fp, #-28]	; 0xffffffe4
   1b3c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b3c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b3cc:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   1b3d0:	str	r0, [fp, #-12]
   1b3d4:	ldr	r3, [fp, #-12]
   1b3d8:	cmp	r3, #0
   1b3dc:	beq	1b410 <flatcc_json_printer_int32_field@@Base+0x68>
   1b3e0:	ldr	r0, [fp, #-12]
   1b3e4:	bl	150cc <main@@Base+0x334>
   1b3e8:	str	r0, [fp, #-8]
   1b3ec:	ldr	r2, [fp, #-8]
   1b3f0:	ldr	r3, [fp, #8]
   1b3f4:	cmp	r2, r3
   1b3f8:	bne	1b428 <flatcc_json_printer_int32_field@@Base+0x80>
   1b3fc:	ldr	r3, [fp, #-16]
   1b400:	ldrb	r3, [r3, #28]
   1b404:	cmp	r3, #0
   1b408:	beq	1b428 <flatcc_json_printer_int32_field@@Base+0x80>
   1b40c:	b	1b4a8 <flatcc_json_printer_int32_field@@Base+0x100>
   1b410:	ldr	r3, [fp, #-16]
   1b414:	ldrb	r3, [r3, #29]
   1b418:	cmp	r3, #0
   1b41c:	beq	1b4a4 <flatcc_json_printer_int32_field@@Base+0xfc>
   1b420:	ldr	r3, [fp, #8]
   1b424:	str	r3, [fp, #-8]
   1b428:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b42c:	ldr	r3, [r3, #16]
   1b430:	add	r1, r3, #1
   1b434:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b438:	str	r1, [r2, #16]
   1b43c:	cmp	r3, #0
   1b440:	beq	1b460 <flatcc_json_printer_int32_field@@Base+0xb8>
   1b444:	ldr	r3, [fp, #-16]
   1b448:	ldr	r3, [r3, #20]
   1b44c:	add	r1, r3, #1
   1b450:	ldr	r2, [fp, #-16]
   1b454:	str	r1, [r2, #20]
   1b458:	mov	r2, #44	; 0x2c
   1b45c:	strb	r2, [r3]
   1b460:	ldr	r3, [fp, #4]
   1b464:	mov	r2, r3
   1b468:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b46c:	ldr	r0, [fp, #-16]
   1b470:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1b474:	ldr	r3, [fp, #-16]
   1b478:	ldr	r3, [r3, #20]
   1b47c:	mov	r1, r3
   1b480:	ldr	r0, [fp, #-8]
   1b484:	bl	16d24 <main@@Base+0x1f8c>
   1b488:	mov	r2, r0
   1b48c:	ldr	r3, [fp, #-16]
   1b490:	ldr	r3, [r3, #20]
   1b494:	add	r2, r3, r2
   1b498:	ldr	r3, [fp, #-16]
   1b49c:	str	r2, [r3, #20]
   1b4a0:	b	1b4a8 <flatcc_json_printer_int32_field@@Base+0x100>
   1b4a4:	nop			; (mov r0, r0)
   1b4a8:	sub	sp, fp, #4
   1b4ac:	pop	{fp, pc}

0001b4b0 <flatcc_json_printer_int64_field@@Base>:
   1b4b0:	push	{fp, lr}
   1b4b4:	add	fp, sp, #4
   1b4b8:	sub	sp, sp, #32
   1b4bc:	str	r0, [fp, #-24]	; 0xffffffe8
   1b4c0:	str	r1, [fp, #-28]	; 0xffffffe4
   1b4c4:	str	r2, [fp, #-32]	; 0xffffffe0
   1b4c8:	str	r3, [fp, #-36]	; 0xffffffdc
   1b4cc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1b4d0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b4d4:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   1b4d8:	str	r0, [fp, #-16]
   1b4dc:	ldr	r3, [fp, #-16]
   1b4e0:	cmp	r3, #0
   1b4e4:	beq	1b51c <flatcc_json_printer_int64_field@@Base+0x6c>
   1b4e8:	ldr	r0, [fp, #-16]
   1b4ec:	bl	15124 <main@@Base+0x38c>
   1b4f0:	strd	r0, [fp, #-12]
   1b4f4:	ldrd	r0, [fp, #-12]
   1b4f8:	ldrd	r2, [fp, #12]
   1b4fc:	cmp	r1, r3
   1b500:	cmpeq	r0, r2
   1b504:	bne	1b534 <flatcc_json_printer_int64_field@@Base+0x84>
   1b508:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b50c:	ldrb	r3, [r3, #28]
   1b510:	cmp	r3, #0
   1b514:	beq	1b534 <flatcc_json_printer_int64_field@@Base+0x84>
   1b518:	b	1b5b4 <flatcc_json_printer_int64_field@@Base+0x104>
   1b51c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b520:	ldrb	r3, [r3, #29]
   1b524:	cmp	r3, #0
   1b528:	beq	1b5b0 <flatcc_json_printer_int64_field@@Base+0x100>
   1b52c:	ldrd	r2, [fp, #12]
   1b530:	strd	r2, [fp, #-12]
   1b534:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b538:	ldr	r3, [r3, #16]
   1b53c:	add	r1, r3, #1
   1b540:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1b544:	str	r1, [r2, #16]
   1b548:	cmp	r3, #0
   1b54c:	beq	1b56c <flatcc_json_printer_int64_field@@Base+0xbc>
   1b550:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b554:	ldr	r3, [r3, #20]
   1b558:	add	r1, r3, #1
   1b55c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b560:	str	r1, [r2, #20]
   1b564:	mov	r2, #44	; 0x2c
   1b568:	strb	r2, [r3]
   1b56c:	ldr	r3, [fp, #4]
   1b570:	mov	r2, r3
   1b574:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1b578:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b57c:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1b580:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b584:	ldr	r3, [r3, #20]
   1b588:	mov	r2, r3
   1b58c:	ldrd	r0, [fp, #-12]
   1b590:	bl	16d9c <main@@Base+0x2004>
   1b594:	mov	r2, r0
   1b598:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b59c:	ldr	r3, [r3, #20]
   1b5a0:	add	r2, r3, r2
   1b5a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b5a8:	str	r2, [r3, #20]
   1b5ac:	b	1b5b4 <flatcc_json_printer_int64_field@@Base+0x104>
   1b5b0:	nop			; (mov r0, r0)
   1b5b4:	sub	sp, fp, #4
   1b5b8:	pop	{fp, pc}

0001b5bc <flatcc_json_printer_bool_field@@Base>:
   1b5bc:	push	{fp, lr}
   1b5c0:	add	fp, sp, #4
   1b5c4:	sub	sp, sp, #24
   1b5c8:	str	r0, [fp, #-16]
   1b5cc:	str	r1, [fp, #-20]	; 0xffffffec
   1b5d0:	str	r2, [fp, #-24]	; 0xffffffe8
   1b5d4:	str	r3, [fp, #-28]	; 0xffffffe4
   1b5d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b5dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b5e0:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   1b5e4:	str	r0, [fp, #-12]
   1b5e8:	ldr	r3, [fp, #-12]
   1b5ec:	cmp	r3, #0
   1b5f0:	beq	1b628 <flatcc_json_printer_bool_field@@Base+0x6c>
   1b5f4:	ldr	r0, [fp, #-12]
   1b5f8:	bl	15258 <main@@Base+0x4c0>
   1b5fc:	mov	r3, r0
   1b600:	strb	r3, [fp, #-5]
   1b604:	ldrb	r2, [fp, #-5]
   1b608:	ldrb	r3, [fp, #8]
   1b60c:	cmp	r2, r3
   1b610:	bne	1b640 <flatcc_json_printer_bool_field@@Base+0x84>
   1b614:	ldr	r3, [fp, #-16]
   1b618:	ldrb	r3, [r3, #28]
   1b61c:	cmp	r3, #0
   1b620:	beq	1b640 <flatcc_json_printer_bool_field@@Base+0x84>
   1b624:	b	1b6c4 <flatcc_json_printer_bool_field@@Base+0x108>
   1b628:	ldr	r3, [fp, #-16]
   1b62c:	ldrb	r3, [r3, #29]
   1b630:	cmp	r3, #0
   1b634:	beq	1b6c0 <flatcc_json_printer_bool_field@@Base+0x104>
   1b638:	ldrb	r3, [fp, #8]
   1b63c:	strb	r3, [fp, #-5]
   1b640:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b644:	ldr	r3, [r3, #16]
   1b648:	add	r1, r3, #1
   1b64c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b650:	str	r1, [r2, #16]
   1b654:	cmp	r3, #0
   1b658:	beq	1b678 <flatcc_json_printer_bool_field@@Base+0xbc>
   1b65c:	ldr	r3, [fp, #-16]
   1b660:	ldr	r3, [r3, #20]
   1b664:	add	r1, r3, #1
   1b668:	ldr	r2, [fp, #-16]
   1b66c:	str	r1, [r2, #20]
   1b670:	mov	r2, #44	; 0x2c
   1b674:	strb	r2, [r3]
   1b678:	ldr	r3, [fp, #4]
   1b67c:	mov	r2, r3
   1b680:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b684:	ldr	r0, [fp, #-16]
   1b688:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1b68c:	ldrb	r2, [fp, #-5]
   1b690:	ldr	r3, [fp, #-16]
   1b694:	ldr	r3, [r3, #20]
   1b698:	mov	r1, r3
   1b69c:	mov	r0, r2
   1b6a0:	bl	15508 <main@@Base+0x770>
   1b6a4:	mov	r2, r0
   1b6a8:	ldr	r3, [fp, #-16]
   1b6ac:	ldr	r3, [r3, #20]
   1b6b0:	add	r2, r3, r2
   1b6b4:	ldr	r3, [fp, #-16]
   1b6b8:	str	r2, [r3, #20]
   1b6bc:	b	1b6c4 <flatcc_json_printer_bool_field@@Base+0x108>
   1b6c0:	nop			; (mov r0, r0)
   1b6c4:	sub	sp, fp, #4
   1b6c8:	pop	{fp, pc}

0001b6cc <flatcc_json_printer_float_field@@Base>:
   1b6cc:	push	{fp, lr}
   1b6d0:	add	fp, sp, #4
   1b6d4:	sub	sp, sp, #32
   1b6d8:	str	r0, [fp, #-16]
   1b6dc:	str	r1, [fp, #-20]	; 0xffffffec
   1b6e0:	str	r2, [fp, #-24]	; 0xffffffe8
   1b6e4:	str	r3, [fp, #-28]	; 0xffffffe4
   1b6e8:	vstr	s0, [fp, #-32]	; 0xffffffe0
   1b6ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b6f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b6f4:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   1b6f8:	str	r0, [fp, #-12]
   1b6fc:	ldr	r3, [fp, #-12]
   1b700:	cmp	r3, #0
   1b704:	beq	1b73c <flatcc_json_printer_float_field@@Base+0x70>
   1b708:	ldr	r0, [fp, #-12]
   1b70c:	bl	15198 <main@@Base+0x400>
   1b710:	vstr	s0, [fp, #-8]
   1b714:	vldr	s14, [fp, #-8]
   1b718:	vldr	s15, [fp, #-32]	; 0xffffffe0
   1b71c:	vcmp.f32	s14, s15
   1b720:	vmrs	APSR_nzcv, fpscr
   1b724:	bne	1b754 <flatcc_json_printer_float_field@@Base+0x88>
   1b728:	ldr	r3, [fp, #-16]
   1b72c:	ldrb	r3, [r3, #28]
   1b730:	cmp	r3, #0
   1b734:	beq	1b754 <flatcc_json_printer_float_field@@Base+0x88>
   1b738:	b	1b7dc <flatcc_json_printer_float_field@@Base+0x110>
   1b73c:	ldr	r3, [fp, #-16]
   1b740:	ldrb	r3, [r3, #29]
   1b744:	cmp	r3, #0
   1b748:	beq	1b7d8 <flatcc_json_printer_float_field@@Base+0x10c>
   1b74c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b750:	str	r3, [fp, #-8]
   1b754:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b758:	ldr	r3, [r3, #16]
   1b75c:	add	r1, r3, #1
   1b760:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b764:	str	r1, [r2, #16]
   1b768:	cmp	r3, #0
   1b76c:	beq	1b78c <flatcc_json_printer_float_field@@Base+0xc0>
   1b770:	ldr	r3, [fp, #-16]
   1b774:	ldr	r3, [r3, #20]
   1b778:	add	r1, r3, #1
   1b77c:	ldr	r2, [fp, #-16]
   1b780:	str	r1, [r2, #20]
   1b784:	mov	r2, #44	; 0x2c
   1b788:	strb	r2, [r3]
   1b78c:	ldr	r3, [fp, #4]
   1b790:	mov	r2, r3
   1b794:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b798:	ldr	r0, [fp, #-16]
   1b79c:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1b7a0:	vldr	s15, [fp, #-8]
   1b7a4:	vcvt.f64.f32	d7, s15
   1b7a8:	ldr	r3, [fp, #-16]
   1b7ac:	ldr	r3, [r3, #20]
   1b7b0:	mov	r0, r3
   1b7b4:	vmov.f64	d0, d7
   1b7b8:	bl	186f0 <main@@Base+0x3958>
   1b7bc:	mov	r2, r0
   1b7c0:	ldr	r3, [fp, #-16]
   1b7c4:	ldr	r3, [r3, #20]
   1b7c8:	add	r2, r3, r2
   1b7cc:	ldr	r3, [fp, #-16]
   1b7d0:	str	r2, [r3, #20]
   1b7d4:	b	1b7dc <flatcc_json_printer_float_field@@Base+0x110>
   1b7d8:	nop			; (mov r0, r0)
   1b7dc:	sub	sp, fp, #4
   1b7e0:	pop	{fp, pc}

0001b7e4 <flatcc_json_printer_double_field@@Base>:
   1b7e4:	push	{fp, lr}
   1b7e8:	add	fp, sp, #4
   1b7ec:	sub	sp, sp, #40	; 0x28
   1b7f0:	str	r0, [fp, #-24]	; 0xffffffe8
   1b7f4:	str	r1, [fp, #-28]	; 0xffffffe4
   1b7f8:	str	r2, [fp, #-32]	; 0xffffffe0
   1b7fc:	str	r3, [fp, #-36]	; 0xffffffdc
   1b800:	vstr	d0, [fp, #-44]	; 0xffffffd4
   1b804:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1b808:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b80c:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   1b810:	str	r0, [fp, #-16]
   1b814:	ldr	r3, [fp, #-16]
   1b818:	cmp	r3, #0
   1b81c:	beq	1b854 <flatcc_json_printer_double_field@@Base+0x70>
   1b820:	ldr	r0, [fp, #-16]
   1b824:	bl	15200 <main@@Base+0x468>
   1b828:	vstr	d0, [fp, #-12]
   1b82c:	vldr	d6, [fp, #-12]
   1b830:	vldr	d7, [fp, #-44]	; 0xffffffd4
   1b834:	vcmp.f64	d6, d7
   1b838:	vmrs	APSR_nzcv, fpscr
   1b83c:	bne	1b86c <flatcc_json_printer_double_field@@Base+0x88>
   1b840:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b844:	ldrb	r3, [r3, #28]
   1b848:	cmp	r3, #0
   1b84c:	beq	1b86c <flatcc_json_printer_double_field@@Base+0x88>
   1b850:	b	1b8ec <flatcc_json_printer_double_field@@Base+0x108>
   1b854:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b858:	ldrb	r3, [r3, #29]
   1b85c:	cmp	r3, #0
   1b860:	beq	1b8e8 <flatcc_json_printer_double_field@@Base+0x104>
   1b864:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1b868:	strd	r2, [fp, #-12]
   1b86c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b870:	ldr	r3, [r3, #16]
   1b874:	add	r1, r3, #1
   1b878:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1b87c:	str	r1, [r2, #16]
   1b880:	cmp	r3, #0
   1b884:	beq	1b8a4 <flatcc_json_printer_double_field@@Base+0xc0>
   1b888:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b88c:	ldr	r3, [r3, #20]
   1b890:	add	r1, r3, #1
   1b894:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b898:	str	r1, [r2, #20]
   1b89c:	mov	r2, #44	; 0x2c
   1b8a0:	strb	r2, [r3]
   1b8a4:	ldr	r3, [fp, #4]
   1b8a8:	mov	r2, r3
   1b8ac:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1b8b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b8b4:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1b8b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b8bc:	ldr	r3, [r3, #20]
   1b8c0:	mov	r0, r3
   1b8c4:	vldr	d0, [fp, #-12]
   1b8c8:	bl	186f0 <main@@Base+0x3958>
   1b8cc:	mov	r2, r0
   1b8d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b8d4:	ldr	r3, [r3, #20]
   1b8d8:	add	r2, r3, r2
   1b8dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b8e0:	str	r2, [r3, #20]
   1b8e4:	b	1b8ec <flatcc_json_printer_double_field@@Base+0x108>
   1b8e8:	nop			; (mov r0, r0)
   1b8ec:	sub	sp, fp, #4
   1b8f0:	pop	{fp, pc}

0001b8f4 <flatcc_json_printer_uint8_enum_field@@Base>:
   1b8f4:	push	{fp, lr}
   1b8f8:	add	fp, sp, #4
   1b8fc:	sub	sp, sp, #24
   1b900:	str	r0, [fp, #-16]
   1b904:	str	r1, [fp, #-20]	; 0xffffffec
   1b908:	str	r2, [fp, #-24]	; 0xffffffe8
   1b90c:	str	r3, [fp, #-28]	; 0xffffffe4
   1b910:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b914:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b918:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   1b91c:	str	r0, [fp, #-12]
   1b920:	ldr	r3, [fp, #-12]
   1b924:	cmp	r3, #0
   1b928:	beq	1b960 <flatcc_json_printer_uint8_enum_field@@Base+0x6c>
   1b92c:	ldr	r0, [fp, #-12]
   1b930:	bl	14eb8 <main@@Base+0x120>
   1b934:	mov	r3, r0
   1b938:	strb	r3, [fp, #-5]
   1b93c:	ldrb	r2, [fp, #-5]
   1b940:	ldrb	r3, [fp, #8]
   1b944:	cmp	r2, r3
   1b948:	bne	1b978 <flatcc_json_printer_uint8_enum_field@@Base+0x84>
   1b94c:	ldr	r3, [fp, #-16]
   1b950:	ldrb	r3, [r3, #28]
   1b954:	cmp	r3, #0
   1b958:	beq	1b978 <flatcc_json_printer_uint8_enum_field@@Base+0x84>
   1b95c:	b	1ba24 <flatcc_json_printer_uint8_enum_field@@Base+0x130>
   1b960:	ldr	r3, [fp, #-16]
   1b964:	ldrb	r3, [r3, #29]
   1b968:	cmp	r3, #0
   1b96c:	beq	1ba20 <flatcc_json_printer_uint8_enum_field@@Base+0x12c>
   1b970:	ldrb	r3, [fp, #8]
   1b974:	strb	r3, [fp, #-5]
   1b978:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b97c:	ldr	r3, [r3, #16]
   1b980:	add	r1, r3, #1
   1b984:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b988:	str	r1, [r2, #16]
   1b98c:	cmp	r3, #0
   1b990:	beq	1b9b0 <flatcc_json_printer_uint8_enum_field@@Base+0xbc>
   1b994:	ldr	r3, [fp, #-16]
   1b998:	ldr	r3, [r3, #20]
   1b99c:	add	r1, r3, #1
   1b9a0:	ldr	r2, [fp, #-16]
   1b9a4:	str	r1, [r2, #20]
   1b9a8:	mov	r2, #44	; 0x2c
   1b9ac:	strb	r2, [r3]
   1b9b0:	ldr	r3, [fp, #4]
   1b9b4:	mov	r2, r3
   1b9b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b9bc:	ldr	r0, [fp, #-16]
   1b9c0:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1b9c4:	ldr	r3, [fp, #-16]
   1b9c8:	ldrb	r3, [r3, #27]
   1b9cc:	cmp	r3, #0
   1b9d0:	beq	1ba08 <flatcc_json_printer_uint8_enum_field@@Base+0x114>
   1b9d4:	ldr	r3, [fp, #-16]
   1b9d8:	ldr	r2, [r3, #20]
   1b9dc:	ldrb	r3, [fp, #-5]
   1b9e0:	mov	r1, r2
   1b9e4:	mov	r0, r3
   1b9e8:	bl	15578 <main@@Base+0x7e0>
   1b9ec:	mov	r2, r0
   1b9f0:	ldr	r3, [fp, #-16]
   1b9f4:	ldr	r3, [r3, #20]
   1b9f8:	add	r2, r3, r2
   1b9fc:	ldr	r3, [fp, #-16]
   1ba00:	str	r2, [r3, #20]
   1ba04:	b	1ba24 <flatcc_json_printer_uint8_enum_field@@Base+0x130>
   1ba08:	ldrb	r2, [fp, #-5]
   1ba0c:	ldr	r3, [fp, #12]
   1ba10:	mov	r1, r2
   1ba14:	ldr	r0, [fp, #-16]
   1ba18:	blx	r3
   1ba1c:	b	1ba24 <flatcc_json_printer_uint8_enum_field@@Base+0x130>
   1ba20:	nop			; (mov r0, r0)
   1ba24:	sub	sp, fp, #4
   1ba28:	pop	{fp, pc}

0001ba2c <flatcc_json_printer_uint16_enum_field@@Base>:
   1ba2c:	push	{fp, lr}
   1ba30:	add	fp, sp, #4
   1ba34:	sub	sp, sp, #24
   1ba38:	str	r0, [fp, #-16]
   1ba3c:	str	r1, [fp, #-20]	; 0xffffffec
   1ba40:	str	r2, [fp, #-24]	; 0xffffffe8
   1ba44:	str	r3, [fp, #-28]	; 0xffffffe4
   1ba48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ba4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ba50:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   1ba54:	str	r0, [fp, #-12]
   1ba58:	ldr	r3, [fp, #-12]
   1ba5c:	cmp	r3, #0
   1ba60:	beq	1ba98 <flatcc_json_printer_uint16_enum_field@@Base+0x6c>
   1ba64:	ldr	r0, [fp, #-12]
   1ba68:	bl	14f10 <main@@Base+0x178>
   1ba6c:	mov	r3, r0
   1ba70:	strh	r3, [fp, #-6]
   1ba74:	ldrh	r2, [fp, #-6]
   1ba78:	ldrh	r3, [fp, #8]
   1ba7c:	cmp	r2, r3
   1ba80:	bne	1bab0 <flatcc_json_printer_uint16_enum_field@@Base+0x84>
   1ba84:	ldr	r3, [fp, #-16]
   1ba88:	ldrb	r3, [r3, #28]
   1ba8c:	cmp	r3, #0
   1ba90:	beq	1bab0 <flatcc_json_printer_uint16_enum_field@@Base+0x84>
   1ba94:	b	1bb5c <flatcc_json_printer_uint16_enum_field@@Base+0x130>
   1ba98:	ldr	r3, [fp, #-16]
   1ba9c:	ldrb	r3, [r3, #29]
   1baa0:	cmp	r3, #0
   1baa4:	beq	1bb58 <flatcc_json_printer_uint16_enum_field@@Base+0x12c>
   1baa8:	ldrh	r3, [fp, #8]
   1baac:	strh	r3, [fp, #-6]
   1bab0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bab4:	ldr	r3, [r3, #16]
   1bab8:	add	r1, r3, #1
   1babc:	ldr	r2, [fp, #-20]	; 0xffffffec
   1bac0:	str	r1, [r2, #16]
   1bac4:	cmp	r3, #0
   1bac8:	beq	1bae8 <flatcc_json_printer_uint16_enum_field@@Base+0xbc>
   1bacc:	ldr	r3, [fp, #-16]
   1bad0:	ldr	r3, [r3, #20]
   1bad4:	add	r1, r3, #1
   1bad8:	ldr	r2, [fp, #-16]
   1badc:	str	r1, [r2, #20]
   1bae0:	mov	r2, #44	; 0x2c
   1bae4:	strb	r2, [r3]
   1bae8:	ldr	r3, [fp, #4]
   1baec:	mov	r2, r3
   1baf0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1baf4:	ldr	r0, [fp, #-16]
   1baf8:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1bafc:	ldr	r3, [fp, #-16]
   1bb00:	ldrb	r3, [r3, #27]
   1bb04:	cmp	r3, #0
   1bb08:	beq	1bb40 <flatcc_json_printer_uint16_enum_field@@Base+0x114>
   1bb0c:	ldr	r3, [fp, #-16]
   1bb10:	ldr	r2, [r3, #20]
   1bb14:	ldrh	r3, [fp, #-6]
   1bb18:	mov	r1, r2
   1bb1c:	mov	r0, r3
   1bb20:	bl	1573c <main@@Base+0x9a4>
   1bb24:	mov	r2, r0
   1bb28:	ldr	r3, [fp, #-16]
   1bb2c:	ldr	r3, [r3, #20]
   1bb30:	add	r2, r3, r2
   1bb34:	ldr	r3, [fp, #-16]
   1bb38:	str	r2, [r3, #20]
   1bb3c:	b	1bb5c <flatcc_json_printer_uint16_enum_field@@Base+0x130>
   1bb40:	ldrh	r2, [fp, #-6]
   1bb44:	ldr	r3, [fp, #12]
   1bb48:	mov	r1, r2
   1bb4c:	ldr	r0, [fp, #-16]
   1bb50:	blx	r3
   1bb54:	b	1bb5c <flatcc_json_printer_uint16_enum_field@@Base+0x130>
   1bb58:	nop			; (mov r0, r0)
   1bb5c:	sub	sp, fp, #4
   1bb60:	pop	{fp, pc}

0001bb64 <flatcc_json_printer_uint32_enum_field@@Base>:
   1bb64:	push	{fp, lr}
   1bb68:	add	fp, sp, #4
   1bb6c:	sub	sp, sp, #24
   1bb70:	str	r0, [fp, #-16]
   1bb74:	str	r1, [fp, #-20]	; 0xffffffec
   1bb78:	str	r2, [fp, #-24]	; 0xffffffe8
   1bb7c:	str	r3, [fp, #-28]	; 0xffffffe4
   1bb80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bb84:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bb88:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   1bb8c:	str	r0, [fp, #-12]
   1bb90:	ldr	r3, [fp, #-12]
   1bb94:	cmp	r3, #0
   1bb98:	beq	1bbcc <flatcc_json_printer_uint32_enum_field@@Base+0x68>
   1bb9c:	ldr	r0, [fp, #-12]
   1bba0:	bl	14f64 <main@@Base+0x1cc>
   1bba4:	str	r0, [fp, #-8]
   1bba8:	ldr	r2, [fp, #-8]
   1bbac:	ldr	r3, [fp, #8]
   1bbb0:	cmp	r2, r3
   1bbb4:	bne	1bbe4 <flatcc_json_printer_uint32_enum_field@@Base+0x80>
   1bbb8:	ldr	r3, [fp, #-16]
   1bbbc:	ldrb	r3, [r3, #28]
   1bbc0:	cmp	r3, #0
   1bbc4:	beq	1bbe4 <flatcc_json_printer_uint32_enum_field@@Base+0x80>
   1bbc8:	b	1bc88 <flatcc_json_printer_uint32_enum_field@@Base+0x124>
   1bbcc:	ldr	r3, [fp, #-16]
   1bbd0:	ldrb	r3, [r3, #29]
   1bbd4:	cmp	r3, #0
   1bbd8:	beq	1bc84 <flatcc_json_printer_uint32_enum_field@@Base+0x120>
   1bbdc:	ldr	r3, [fp, #8]
   1bbe0:	str	r3, [fp, #-8]
   1bbe4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bbe8:	ldr	r3, [r3, #16]
   1bbec:	add	r1, r3, #1
   1bbf0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1bbf4:	str	r1, [r2, #16]
   1bbf8:	cmp	r3, #0
   1bbfc:	beq	1bc1c <flatcc_json_printer_uint32_enum_field@@Base+0xb8>
   1bc00:	ldr	r3, [fp, #-16]
   1bc04:	ldr	r3, [r3, #20]
   1bc08:	add	r1, r3, #1
   1bc0c:	ldr	r2, [fp, #-16]
   1bc10:	str	r1, [r2, #20]
   1bc14:	mov	r2, #44	; 0x2c
   1bc18:	strb	r2, [r3]
   1bc1c:	ldr	r3, [fp, #4]
   1bc20:	mov	r2, r3
   1bc24:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1bc28:	ldr	r0, [fp, #-16]
   1bc2c:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1bc30:	ldr	r3, [fp, #-16]
   1bc34:	ldrb	r3, [r3, #27]
   1bc38:	cmp	r3, #0
   1bc3c:	beq	1bc70 <flatcc_json_printer_uint32_enum_field@@Base+0x10c>
   1bc40:	ldr	r3, [fp, #-16]
   1bc44:	ldr	r3, [r3, #20]
   1bc48:	mov	r1, r3
   1bc4c:	ldr	r0, [fp, #-8]
   1bc50:	bl	15a64 <main@@Base+0xccc>
   1bc54:	mov	r2, r0
   1bc58:	ldr	r3, [fp, #-16]
   1bc5c:	ldr	r3, [r3, #20]
   1bc60:	add	r2, r3, r2
   1bc64:	ldr	r3, [fp, #-16]
   1bc68:	str	r2, [r3, #20]
   1bc6c:	b	1bc88 <flatcc_json_printer_uint32_enum_field@@Base+0x124>
   1bc70:	ldr	r3, [fp, #12]
   1bc74:	ldr	r1, [fp, #-8]
   1bc78:	ldr	r0, [fp, #-16]
   1bc7c:	blx	r3
   1bc80:	b	1bc88 <flatcc_json_printer_uint32_enum_field@@Base+0x124>
   1bc84:	nop			; (mov r0, r0)
   1bc88:	sub	sp, fp, #4
   1bc8c:	pop	{fp, pc}

0001bc90 <flatcc_json_printer_uint64_enum_field@@Base>:
   1bc90:	push	{fp, lr}
   1bc94:	add	fp, sp, #4
   1bc98:	sub	sp, sp, #32
   1bc9c:	str	r0, [fp, #-24]	; 0xffffffe8
   1bca0:	str	r1, [fp, #-28]	; 0xffffffe4
   1bca4:	str	r2, [fp, #-32]	; 0xffffffe0
   1bca8:	str	r3, [fp, #-36]	; 0xffffffdc
   1bcac:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1bcb0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bcb4:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   1bcb8:	str	r0, [fp, #-16]
   1bcbc:	ldr	r3, [fp, #-16]
   1bcc0:	cmp	r3, #0
   1bcc4:	beq	1bcfc <flatcc_json_printer_uint64_enum_field@@Base+0x6c>
   1bcc8:	ldr	r0, [fp, #-16]
   1bccc:	bl	14fbc <main@@Base+0x224>
   1bcd0:	strd	r0, [fp, #-12]
   1bcd4:	ldrd	r0, [fp, #-12]
   1bcd8:	ldrd	r2, [fp, #12]
   1bcdc:	cmp	r1, r3
   1bce0:	cmpeq	r0, r2
   1bce4:	bne	1bd14 <flatcc_json_printer_uint64_enum_field@@Base+0x84>
   1bce8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bcec:	ldrb	r3, [r3, #28]
   1bcf0:	cmp	r3, #0
   1bcf4:	beq	1bd14 <flatcc_json_printer_uint64_enum_field@@Base+0x84>
   1bcf8:	b	1bdb8 <flatcc_json_printer_uint64_enum_field@@Base+0x128>
   1bcfc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bd00:	ldrb	r3, [r3, #29]
   1bd04:	cmp	r3, #0
   1bd08:	beq	1bdb4 <flatcc_json_printer_uint64_enum_field@@Base+0x124>
   1bd0c:	ldrd	r2, [fp, #12]
   1bd10:	strd	r2, [fp, #-12]
   1bd14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bd18:	ldr	r3, [r3, #16]
   1bd1c:	add	r1, r3, #1
   1bd20:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1bd24:	str	r1, [r2, #16]
   1bd28:	cmp	r3, #0
   1bd2c:	beq	1bd4c <flatcc_json_printer_uint64_enum_field@@Base+0xbc>
   1bd30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bd34:	ldr	r3, [r3, #20]
   1bd38:	add	r1, r3, #1
   1bd3c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1bd40:	str	r1, [r2, #20]
   1bd44:	mov	r2, #44	; 0x2c
   1bd48:	strb	r2, [r3]
   1bd4c:	ldr	r3, [fp, #4]
   1bd50:	mov	r2, r3
   1bd54:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1bd58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bd5c:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1bd60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bd64:	ldrb	r3, [r3, #27]
   1bd68:	cmp	r3, #0
   1bd6c:	beq	1bda0 <flatcc_json_printer_uint64_enum_field@@Base+0x110>
   1bd70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bd74:	ldr	r3, [r3, #20]
   1bd78:	mov	r2, r3
   1bd7c:	ldrd	r0, [fp, #-12]
   1bd80:	bl	1609c <main@@Base+0x1304>
   1bd84:	mov	r2, r0
   1bd88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bd8c:	ldr	r3, [r3, #20]
   1bd90:	add	r2, r3, r2
   1bd94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bd98:	str	r2, [r3, #20]
   1bd9c:	b	1bdb8 <flatcc_json_printer_uint64_enum_field@@Base+0x128>
   1bda0:	ldr	r1, [fp, #20]
   1bda4:	ldrd	r2, [fp, #-12]
   1bda8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bdac:	blx	r1
   1bdb0:	b	1bdb8 <flatcc_json_printer_uint64_enum_field@@Base+0x128>
   1bdb4:	nop			; (mov r0, r0)
   1bdb8:	sub	sp, fp, #4
   1bdbc:	pop	{fp, pc}

0001bdc0 <flatcc_json_printer_int8_enum_field@@Base>:
   1bdc0:	push	{fp, lr}
   1bdc4:	add	fp, sp, #4
   1bdc8:	sub	sp, sp, #24
   1bdcc:	str	r0, [fp, #-16]
   1bdd0:	str	r1, [fp, #-20]	; 0xffffffec
   1bdd4:	str	r2, [fp, #-24]	; 0xffffffe8
   1bdd8:	str	r3, [fp, #-28]	; 0xffffffe4
   1bddc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bde0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bde4:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   1bde8:	str	r0, [fp, #-12]
   1bdec:	ldr	r3, [fp, #-12]
   1bdf0:	cmp	r3, #0
   1bdf4:	beq	1be2c <flatcc_json_printer_int8_enum_field@@Base+0x6c>
   1bdf8:	ldr	r0, [fp, #-12]
   1bdfc:	bl	15020 <main@@Base+0x288>
   1be00:	mov	r3, r0
   1be04:	strb	r3, [fp, #-5]
   1be08:	ldrsb	r2, [fp, #-5]
   1be0c:	ldrsb	r3, [fp, #8]
   1be10:	cmp	r2, r3
   1be14:	bne	1be44 <flatcc_json_printer_int8_enum_field@@Base+0x84>
   1be18:	ldr	r3, [fp, #-16]
   1be1c:	ldrb	r3, [r3, #28]
   1be20:	cmp	r3, #0
   1be24:	beq	1be44 <flatcc_json_printer_int8_enum_field@@Base+0x84>
   1be28:	b	1bef0 <flatcc_json_printer_int8_enum_field@@Base+0x130>
   1be2c:	ldr	r3, [fp, #-16]
   1be30:	ldrb	r3, [r3, #29]
   1be34:	cmp	r3, #0
   1be38:	beq	1beec <flatcc_json_printer_int8_enum_field@@Base+0x12c>
   1be3c:	ldrb	r3, [fp, #8]
   1be40:	strb	r3, [fp, #-5]
   1be44:	ldr	r3, [fp, #-20]	; 0xffffffec
   1be48:	ldr	r3, [r3, #16]
   1be4c:	add	r1, r3, #1
   1be50:	ldr	r2, [fp, #-20]	; 0xffffffec
   1be54:	str	r1, [r2, #16]
   1be58:	cmp	r3, #0
   1be5c:	beq	1be7c <flatcc_json_printer_int8_enum_field@@Base+0xbc>
   1be60:	ldr	r3, [fp, #-16]
   1be64:	ldr	r3, [r3, #20]
   1be68:	add	r1, r3, #1
   1be6c:	ldr	r2, [fp, #-16]
   1be70:	str	r1, [r2, #20]
   1be74:	mov	r2, #44	; 0x2c
   1be78:	strb	r2, [r3]
   1be7c:	ldr	r3, [fp, #4]
   1be80:	mov	r2, r3
   1be84:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1be88:	ldr	r0, [fp, #-16]
   1be8c:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1be90:	ldr	r3, [fp, #-16]
   1be94:	ldrb	r3, [r3, #27]
   1be98:	cmp	r3, #0
   1be9c:	beq	1bed4 <flatcc_json_printer_int8_enum_field@@Base+0x114>
   1bea0:	ldr	r3, [fp, #-16]
   1bea4:	ldr	r2, [r3, #20]
   1bea8:	ldrsb	r3, [fp, #-5]
   1beac:	mov	r1, r2
   1beb0:	mov	r0, r3
   1beb4:	bl	16c24 <main@@Base+0x1e8c>
   1beb8:	mov	r2, r0
   1bebc:	ldr	r3, [fp, #-16]
   1bec0:	ldr	r3, [r3, #20]
   1bec4:	add	r2, r3, r2
   1bec8:	ldr	r3, [fp, #-16]
   1becc:	str	r2, [r3, #20]
   1bed0:	b	1bef0 <flatcc_json_printer_int8_enum_field@@Base+0x130>
   1bed4:	ldrsb	r2, [fp, #-5]
   1bed8:	ldr	r3, [fp, #12]
   1bedc:	mov	r1, r2
   1bee0:	ldr	r0, [fp, #-16]
   1bee4:	blx	r3
   1bee8:	b	1bef0 <flatcc_json_printer_int8_enum_field@@Base+0x130>
   1beec:	nop			; (mov r0, r0)
   1bef0:	sub	sp, fp, #4
   1bef4:	pop	{fp, pc}

0001bef8 <flatcc_json_printer_int16_enum_field@@Base>:
   1bef8:	push	{fp, lr}
   1befc:	add	fp, sp, #4
   1bf00:	sub	sp, sp, #24
   1bf04:	str	r0, [fp, #-16]
   1bf08:	str	r1, [fp, #-20]	; 0xffffffec
   1bf0c:	str	r2, [fp, #-24]	; 0xffffffe8
   1bf10:	str	r3, [fp, #-28]	; 0xffffffe4
   1bf14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bf18:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bf1c:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   1bf20:	str	r0, [fp, #-12]
   1bf24:	ldr	r3, [fp, #-12]
   1bf28:	cmp	r3, #0
   1bf2c:	beq	1bf64 <flatcc_json_printer_int16_enum_field@@Base+0x6c>
   1bf30:	ldr	r0, [fp, #-12]
   1bf34:	bl	15078 <main@@Base+0x2e0>
   1bf38:	mov	r3, r0
   1bf3c:	strh	r3, [fp, #-6]
   1bf40:	ldrsh	r2, [fp, #-6]
   1bf44:	ldrsh	r3, [fp, #8]
   1bf48:	cmp	r2, r3
   1bf4c:	bne	1bf7c <flatcc_json_printer_int16_enum_field@@Base+0x84>
   1bf50:	ldr	r3, [fp, #-16]
   1bf54:	ldrb	r3, [r3, #28]
   1bf58:	cmp	r3, #0
   1bf5c:	beq	1bf7c <flatcc_json_printer_int16_enum_field@@Base+0x84>
   1bf60:	b	1c028 <flatcc_json_printer_int16_enum_field@@Base+0x130>
   1bf64:	ldr	r3, [fp, #-16]
   1bf68:	ldrb	r3, [r3, #29]
   1bf6c:	cmp	r3, #0
   1bf70:	beq	1c024 <flatcc_json_printer_int16_enum_field@@Base+0x12c>
   1bf74:	ldrh	r3, [fp, #8]
   1bf78:	strh	r3, [fp, #-6]
   1bf7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bf80:	ldr	r3, [r3, #16]
   1bf84:	add	r1, r3, #1
   1bf88:	ldr	r2, [fp, #-20]	; 0xffffffec
   1bf8c:	str	r1, [r2, #16]
   1bf90:	cmp	r3, #0
   1bf94:	beq	1bfb4 <flatcc_json_printer_int16_enum_field@@Base+0xbc>
   1bf98:	ldr	r3, [fp, #-16]
   1bf9c:	ldr	r3, [r3, #20]
   1bfa0:	add	r1, r3, #1
   1bfa4:	ldr	r2, [fp, #-16]
   1bfa8:	str	r1, [r2, #20]
   1bfac:	mov	r2, #44	; 0x2c
   1bfb0:	strb	r2, [r3]
   1bfb4:	ldr	r3, [fp, #4]
   1bfb8:	mov	r2, r3
   1bfbc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1bfc0:	ldr	r0, [fp, #-16]
   1bfc4:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1bfc8:	ldr	r3, [fp, #-16]
   1bfcc:	ldrb	r3, [r3, #27]
   1bfd0:	cmp	r3, #0
   1bfd4:	beq	1c00c <flatcc_json_printer_int16_enum_field@@Base+0x114>
   1bfd8:	ldr	r3, [fp, #-16]
   1bfdc:	ldr	r2, [r3, #20]
   1bfe0:	ldrsh	r3, [fp, #-6]
   1bfe4:	mov	r1, r2
   1bfe8:	mov	r0, r3
   1bfec:	bl	16ca4 <main@@Base+0x1f0c>
   1bff0:	mov	r2, r0
   1bff4:	ldr	r3, [fp, #-16]
   1bff8:	ldr	r3, [r3, #20]
   1bffc:	add	r2, r3, r2
   1c000:	ldr	r3, [fp, #-16]
   1c004:	str	r2, [r3, #20]
   1c008:	b	1c028 <flatcc_json_printer_int16_enum_field@@Base+0x130>
   1c00c:	ldrsh	r2, [fp, #-6]
   1c010:	ldr	r3, [fp, #12]
   1c014:	mov	r1, r2
   1c018:	ldr	r0, [fp, #-16]
   1c01c:	blx	r3
   1c020:	b	1c028 <flatcc_json_printer_int16_enum_field@@Base+0x130>
   1c024:	nop			; (mov r0, r0)
   1c028:	sub	sp, fp, #4
   1c02c:	pop	{fp, pc}

0001c030 <flatcc_json_printer_int32_enum_field@@Base>:
   1c030:	push	{fp, lr}
   1c034:	add	fp, sp, #4
   1c038:	sub	sp, sp, #24
   1c03c:	str	r0, [fp, #-16]
   1c040:	str	r1, [fp, #-20]	; 0xffffffec
   1c044:	str	r2, [fp, #-24]	; 0xffffffe8
   1c048:	str	r3, [fp, #-28]	; 0xffffffe4
   1c04c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c050:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c054:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   1c058:	str	r0, [fp, #-12]
   1c05c:	ldr	r3, [fp, #-12]
   1c060:	cmp	r3, #0
   1c064:	beq	1c098 <flatcc_json_printer_int32_enum_field@@Base+0x68>
   1c068:	ldr	r0, [fp, #-12]
   1c06c:	bl	150cc <main@@Base+0x334>
   1c070:	str	r0, [fp, #-8]
   1c074:	ldr	r2, [fp, #-8]
   1c078:	ldr	r3, [fp, #8]
   1c07c:	cmp	r2, r3
   1c080:	bne	1c0b0 <flatcc_json_printer_int32_enum_field@@Base+0x80>
   1c084:	ldr	r3, [fp, #-16]
   1c088:	ldrb	r3, [r3, #28]
   1c08c:	cmp	r3, #0
   1c090:	beq	1c0b0 <flatcc_json_printer_int32_enum_field@@Base+0x80>
   1c094:	b	1c154 <flatcc_json_printer_int32_enum_field@@Base+0x124>
   1c098:	ldr	r3, [fp, #-16]
   1c09c:	ldrb	r3, [r3, #29]
   1c0a0:	cmp	r3, #0
   1c0a4:	beq	1c150 <flatcc_json_printer_int32_enum_field@@Base+0x120>
   1c0a8:	ldr	r3, [fp, #8]
   1c0ac:	str	r3, [fp, #-8]
   1c0b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c0b4:	ldr	r3, [r3, #16]
   1c0b8:	add	r1, r3, #1
   1c0bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   1c0c0:	str	r1, [r2, #16]
   1c0c4:	cmp	r3, #0
   1c0c8:	beq	1c0e8 <flatcc_json_printer_int32_enum_field@@Base+0xb8>
   1c0cc:	ldr	r3, [fp, #-16]
   1c0d0:	ldr	r3, [r3, #20]
   1c0d4:	add	r1, r3, #1
   1c0d8:	ldr	r2, [fp, #-16]
   1c0dc:	str	r1, [r2, #20]
   1c0e0:	mov	r2, #44	; 0x2c
   1c0e4:	strb	r2, [r3]
   1c0e8:	ldr	r3, [fp, #4]
   1c0ec:	mov	r2, r3
   1c0f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c0f4:	ldr	r0, [fp, #-16]
   1c0f8:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1c0fc:	ldr	r3, [fp, #-16]
   1c100:	ldrb	r3, [r3, #27]
   1c104:	cmp	r3, #0
   1c108:	beq	1c13c <flatcc_json_printer_int32_enum_field@@Base+0x10c>
   1c10c:	ldr	r3, [fp, #-16]
   1c110:	ldr	r3, [r3, #20]
   1c114:	mov	r1, r3
   1c118:	ldr	r0, [fp, #-8]
   1c11c:	bl	16d24 <main@@Base+0x1f8c>
   1c120:	mov	r2, r0
   1c124:	ldr	r3, [fp, #-16]
   1c128:	ldr	r3, [r3, #20]
   1c12c:	add	r2, r3, r2
   1c130:	ldr	r3, [fp, #-16]
   1c134:	str	r2, [r3, #20]
   1c138:	b	1c154 <flatcc_json_printer_int32_enum_field@@Base+0x124>
   1c13c:	ldr	r3, [fp, #12]
   1c140:	ldr	r1, [fp, #-8]
   1c144:	ldr	r0, [fp, #-16]
   1c148:	blx	r3
   1c14c:	b	1c154 <flatcc_json_printer_int32_enum_field@@Base+0x124>
   1c150:	nop			; (mov r0, r0)
   1c154:	sub	sp, fp, #4
   1c158:	pop	{fp, pc}

0001c15c <flatcc_json_printer_int64_enum_field@@Base>:
   1c15c:	push	{fp, lr}
   1c160:	add	fp, sp, #4
   1c164:	sub	sp, sp, #32
   1c168:	str	r0, [fp, #-24]	; 0xffffffe8
   1c16c:	str	r1, [fp, #-28]	; 0xffffffe4
   1c170:	str	r2, [fp, #-32]	; 0xffffffe0
   1c174:	str	r3, [fp, #-36]	; 0xffffffdc
   1c178:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c17c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c180:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   1c184:	str	r0, [fp, #-16]
   1c188:	ldr	r3, [fp, #-16]
   1c18c:	cmp	r3, #0
   1c190:	beq	1c1c8 <flatcc_json_printer_int64_enum_field@@Base+0x6c>
   1c194:	ldr	r0, [fp, #-16]
   1c198:	bl	15124 <main@@Base+0x38c>
   1c19c:	strd	r0, [fp, #-12]
   1c1a0:	ldrd	r0, [fp, #-12]
   1c1a4:	ldrd	r2, [fp, #12]
   1c1a8:	cmp	r1, r3
   1c1ac:	cmpeq	r0, r2
   1c1b0:	bne	1c1e0 <flatcc_json_printer_int64_enum_field@@Base+0x84>
   1c1b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c1b8:	ldrb	r3, [r3, #28]
   1c1bc:	cmp	r3, #0
   1c1c0:	beq	1c1e0 <flatcc_json_printer_int64_enum_field@@Base+0x84>
   1c1c4:	b	1c284 <flatcc_json_printer_int64_enum_field@@Base+0x128>
   1c1c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c1cc:	ldrb	r3, [r3, #29]
   1c1d0:	cmp	r3, #0
   1c1d4:	beq	1c280 <flatcc_json_printer_int64_enum_field@@Base+0x124>
   1c1d8:	ldrd	r2, [fp, #12]
   1c1dc:	strd	r2, [fp, #-12]
   1c1e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c1e4:	ldr	r3, [r3, #16]
   1c1e8:	add	r1, r3, #1
   1c1ec:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c1f0:	str	r1, [r2, #16]
   1c1f4:	cmp	r3, #0
   1c1f8:	beq	1c218 <flatcc_json_printer_int64_enum_field@@Base+0xbc>
   1c1fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c200:	ldr	r3, [r3, #20]
   1c204:	add	r1, r3, #1
   1c208:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c20c:	str	r1, [r2, #20]
   1c210:	mov	r2, #44	; 0x2c
   1c214:	strb	r2, [r3]
   1c218:	ldr	r3, [fp, #4]
   1c21c:	mov	r2, r3
   1c220:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1c224:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c228:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1c22c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c230:	ldrb	r3, [r3, #27]
   1c234:	cmp	r3, #0
   1c238:	beq	1c26c <flatcc_json_printer_int64_enum_field@@Base+0x110>
   1c23c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c240:	ldr	r3, [r3, #20]
   1c244:	mov	r2, r3
   1c248:	ldrd	r0, [fp, #-12]
   1c24c:	bl	16d9c <main@@Base+0x2004>
   1c250:	mov	r2, r0
   1c254:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c258:	ldr	r3, [r3, #20]
   1c25c:	add	r2, r3, r2
   1c260:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c264:	str	r2, [r3, #20]
   1c268:	b	1c284 <flatcc_json_printer_int64_enum_field@@Base+0x128>
   1c26c:	ldr	r1, [fp, #20]
   1c270:	ldrd	r2, [fp, #-12]
   1c274:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c278:	blx	r1
   1c27c:	b	1c284 <flatcc_json_printer_int64_enum_field@@Base+0x128>
   1c280:	nop			; (mov r0, r0)
   1c284:	sub	sp, fp, #4
   1c288:	pop	{fp, pc}

0001c28c <flatcc_json_printer_bool_enum_field@@Base>:
   1c28c:	push	{fp, lr}
   1c290:	add	fp, sp, #4
   1c294:	sub	sp, sp, #24
   1c298:	str	r0, [fp, #-16]
   1c29c:	str	r1, [fp, #-20]	; 0xffffffec
   1c2a0:	str	r2, [fp, #-24]	; 0xffffffe8
   1c2a4:	str	r3, [fp, #-28]	; 0xffffffe4
   1c2a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c2ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c2b0:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   1c2b4:	str	r0, [fp, #-12]
   1c2b8:	ldr	r3, [fp, #-12]
   1c2bc:	cmp	r3, #0
   1c2c0:	beq	1c2f8 <flatcc_json_printer_bool_enum_field@@Base+0x6c>
   1c2c4:	ldr	r0, [fp, #-12]
   1c2c8:	bl	15258 <main@@Base+0x4c0>
   1c2cc:	mov	r3, r0
   1c2d0:	strb	r3, [fp, #-5]
   1c2d4:	ldrb	r2, [fp, #-5]
   1c2d8:	ldrb	r3, [fp, #8]
   1c2dc:	cmp	r2, r3
   1c2e0:	bne	1c310 <flatcc_json_printer_bool_enum_field@@Base+0x84>
   1c2e4:	ldr	r3, [fp, #-16]
   1c2e8:	ldrb	r3, [r3, #28]
   1c2ec:	cmp	r3, #0
   1c2f0:	beq	1c310 <flatcc_json_printer_bool_enum_field@@Base+0x84>
   1c2f4:	b	1c3bc <flatcc_json_printer_bool_enum_field@@Base+0x130>
   1c2f8:	ldr	r3, [fp, #-16]
   1c2fc:	ldrb	r3, [r3, #29]
   1c300:	cmp	r3, #0
   1c304:	beq	1c3b8 <flatcc_json_printer_bool_enum_field@@Base+0x12c>
   1c308:	ldrb	r3, [fp, #8]
   1c30c:	strb	r3, [fp, #-5]
   1c310:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c314:	ldr	r3, [r3, #16]
   1c318:	add	r1, r3, #1
   1c31c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1c320:	str	r1, [r2, #16]
   1c324:	cmp	r3, #0
   1c328:	beq	1c348 <flatcc_json_printer_bool_enum_field@@Base+0xbc>
   1c32c:	ldr	r3, [fp, #-16]
   1c330:	ldr	r3, [r3, #20]
   1c334:	add	r1, r3, #1
   1c338:	ldr	r2, [fp, #-16]
   1c33c:	str	r1, [r2, #20]
   1c340:	mov	r2, #44	; 0x2c
   1c344:	strb	r2, [r3]
   1c348:	ldr	r3, [fp, #4]
   1c34c:	mov	r2, r3
   1c350:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c354:	ldr	r0, [fp, #-16]
   1c358:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1c35c:	ldr	r3, [fp, #-16]
   1c360:	ldrb	r3, [r3, #27]
   1c364:	cmp	r3, #0
   1c368:	beq	1c3a0 <flatcc_json_printer_bool_enum_field@@Base+0x114>
   1c36c:	ldrb	r2, [fp, #-5]
   1c370:	ldr	r3, [fp, #-16]
   1c374:	ldr	r3, [r3, #20]
   1c378:	mov	r1, r3
   1c37c:	mov	r0, r2
   1c380:	bl	15508 <main@@Base+0x770>
   1c384:	mov	r2, r0
   1c388:	ldr	r3, [fp, #-16]
   1c38c:	ldr	r3, [r3, #20]
   1c390:	add	r2, r3, r2
   1c394:	ldr	r3, [fp, #-16]
   1c398:	str	r2, [r3, #20]
   1c39c:	b	1c3bc <flatcc_json_printer_bool_enum_field@@Base+0x130>
   1c3a0:	ldrb	r2, [fp, #-5]
   1c3a4:	ldr	r3, [fp, #12]
   1c3a8:	mov	r1, r2
   1c3ac:	ldr	r0, [fp, #-16]
   1c3b0:	blx	r3
   1c3b4:	b	1c3bc <flatcc_json_printer_bool_enum_field@@Base+0x130>
   1c3b8:	nop			; (mov r0, r0)
   1c3bc:	sub	sp, fp, #4
   1c3c0:	pop	{fp, pc}

0001c3c4 <flatcc_json_printer_uint8_struct_field@@Base>:
   1c3c4:	push	{fp, lr}
   1c3c8:	add	fp, sp, #4
   1c3cc:	sub	sp, sp, #24
   1c3d0:	str	r0, [fp, #-16]
   1c3d4:	str	r1, [fp, #-20]	; 0xffffffec
   1c3d8:	str	r2, [fp, #-24]	; 0xffffffe8
   1c3dc:	str	r3, [fp, #-28]	; 0xffffffe4
   1c3e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c3e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c3e8:	add	r3, r2, r3
   1c3ec:	mov	r0, r3
   1c3f0:	bl	14eb8 <main@@Base+0x120>
   1c3f4:	mov	r3, r0
   1c3f8:	strb	r3, [fp, #-5]
   1c3fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c400:	cmp	r3, #0
   1c404:	beq	1c424 <flatcc_json_printer_uint8_struct_field@@Base+0x60>
   1c408:	ldr	r3, [fp, #-16]
   1c40c:	ldr	r3, [r3, #20]
   1c410:	add	r1, r3, #1
   1c414:	ldr	r2, [fp, #-16]
   1c418:	str	r1, [r2, #20]
   1c41c:	mov	r2, #44	; 0x2c
   1c420:	strb	r2, [r3]
   1c424:	ldr	r3, [fp, #8]
   1c428:	mov	r2, r3
   1c42c:	ldr	r1, [fp, #4]
   1c430:	ldr	r0, [fp, #-16]
   1c434:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1c438:	ldr	r3, [fp, #-16]
   1c43c:	ldr	r2, [r3, #20]
   1c440:	ldrb	r3, [fp, #-5]
   1c444:	mov	r1, r2
   1c448:	mov	r0, r3
   1c44c:	bl	15578 <main@@Base+0x7e0>
   1c450:	mov	r2, r0
   1c454:	ldr	r3, [fp, #-16]
   1c458:	ldr	r3, [r3, #20]
   1c45c:	add	r2, r3, r2
   1c460:	ldr	r3, [fp, #-16]
   1c464:	str	r2, [r3, #20]
   1c468:	nop			; (mov r0, r0)
   1c46c:	sub	sp, fp, #4
   1c470:	pop	{fp, pc}

0001c474 <flatcc_json_printer_uint16_struct_field@@Base>:
   1c474:	push	{fp, lr}
   1c478:	add	fp, sp, #4
   1c47c:	sub	sp, sp, #24
   1c480:	str	r0, [fp, #-16]
   1c484:	str	r1, [fp, #-20]	; 0xffffffec
   1c488:	str	r2, [fp, #-24]	; 0xffffffe8
   1c48c:	str	r3, [fp, #-28]	; 0xffffffe4
   1c490:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c494:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c498:	add	r3, r2, r3
   1c49c:	mov	r0, r3
   1c4a0:	bl	14f10 <main@@Base+0x178>
   1c4a4:	mov	r3, r0
   1c4a8:	strh	r3, [fp, #-6]
   1c4ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c4b0:	cmp	r3, #0
   1c4b4:	beq	1c4d4 <flatcc_json_printer_uint16_struct_field@@Base+0x60>
   1c4b8:	ldr	r3, [fp, #-16]
   1c4bc:	ldr	r3, [r3, #20]
   1c4c0:	add	r1, r3, #1
   1c4c4:	ldr	r2, [fp, #-16]
   1c4c8:	str	r1, [r2, #20]
   1c4cc:	mov	r2, #44	; 0x2c
   1c4d0:	strb	r2, [r3]
   1c4d4:	ldr	r3, [fp, #8]
   1c4d8:	mov	r2, r3
   1c4dc:	ldr	r1, [fp, #4]
   1c4e0:	ldr	r0, [fp, #-16]
   1c4e4:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1c4e8:	ldr	r3, [fp, #-16]
   1c4ec:	ldr	r2, [r3, #20]
   1c4f0:	ldrh	r3, [fp, #-6]
   1c4f4:	mov	r1, r2
   1c4f8:	mov	r0, r3
   1c4fc:	bl	1573c <main@@Base+0x9a4>
   1c500:	mov	r2, r0
   1c504:	ldr	r3, [fp, #-16]
   1c508:	ldr	r3, [r3, #20]
   1c50c:	add	r2, r3, r2
   1c510:	ldr	r3, [fp, #-16]
   1c514:	str	r2, [r3, #20]
   1c518:	nop			; (mov r0, r0)
   1c51c:	sub	sp, fp, #4
   1c520:	pop	{fp, pc}

0001c524 <flatcc_json_printer_uint32_struct_field@@Base>:
   1c524:	push	{fp, lr}
   1c528:	add	fp, sp, #4
   1c52c:	sub	sp, sp, #24
   1c530:	str	r0, [fp, #-16]
   1c534:	str	r1, [fp, #-20]	; 0xffffffec
   1c538:	str	r2, [fp, #-24]	; 0xffffffe8
   1c53c:	str	r3, [fp, #-28]	; 0xffffffe4
   1c540:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c544:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c548:	add	r3, r2, r3
   1c54c:	mov	r0, r3
   1c550:	bl	14f64 <main@@Base+0x1cc>
   1c554:	str	r0, [fp, #-8]
   1c558:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c55c:	cmp	r3, #0
   1c560:	beq	1c580 <flatcc_json_printer_uint32_struct_field@@Base+0x5c>
   1c564:	ldr	r3, [fp, #-16]
   1c568:	ldr	r3, [r3, #20]
   1c56c:	add	r1, r3, #1
   1c570:	ldr	r2, [fp, #-16]
   1c574:	str	r1, [r2, #20]
   1c578:	mov	r2, #44	; 0x2c
   1c57c:	strb	r2, [r3]
   1c580:	ldr	r3, [fp, #8]
   1c584:	mov	r2, r3
   1c588:	ldr	r1, [fp, #4]
   1c58c:	ldr	r0, [fp, #-16]
   1c590:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1c594:	ldr	r3, [fp, #-16]
   1c598:	ldr	r3, [r3, #20]
   1c59c:	mov	r1, r3
   1c5a0:	ldr	r0, [fp, #-8]
   1c5a4:	bl	15a64 <main@@Base+0xccc>
   1c5a8:	mov	r2, r0
   1c5ac:	ldr	r3, [fp, #-16]
   1c5b0:	ldr	r3, [r3, #20]
   1c5b4:	add	r2, r3, r2
   1c5b8:	ldr	r3, [fp, #-16]
   1c5bc:	str	r2, [r3, #20]
   1c5c0:	nop			; (mov r0, r0)
   1c5c4:	sub	sp, fp, #4
   1c5c8:	pop	{fp, pc}

0001c5cc <flatcc_json_printer_uint64_struct_field@@Base>:
   1c5cc:	push	{fp, lr}
   1c5d0:	add	fp, sp, #4
   1c5d4:	sub	sp, sp, #24
   1c5d8:	str	r0, [fp, #-16]
   1c5dc:	str	r1, [fp, #-20]	; 0xffffffec
   1c5e0:	str	r2, [fp, #-24]	; 0xffffffe8
   1c5e4:	str	r3, [fp, #-28]	; 0xffffffe4
   1c5e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c5ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c5f0:	add	r3, r2, r3
   1c5f4:	mov	r0, r3
   1c5f8:	bl	14fbc <main@@Base+0x224>
   1c5fc:	strd	r0, [fp, #-12]
   1c600:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c604:	cmp	r3, #0
   1c608:	beq	1c628 <flatcc_json_printer_uint64_struct_field@@Base+0x5c>
   1c60c:	ldr	r3, [fp, #-16]
   1c610:	ldr	r3, [r3, #20]
   1c614:	add	r1, r3, #1
   1c618:	ldr	r2, [fp, #-16]
   1c61c:	str	r1, [r2, #20]
   1c620:	mov	r2, #44	; 0x2c
   1c624:	strb	r2, [r3]
   1c628:	ldr	r3, [fp, #8]
   1c62c:	mov	r2, r3
   1c630:	ldr	r1, [fp, #4]
   1c634:	ldr	r0, [fp, #-16]
   1c638:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1c63c:	ldr	r3, [fp, #-16]
   1c640:	ldr	r3, [r3, #20]
   1c644:	mov	r2, r3
   1c648:	ldrd	r0, [fp, #-12]
   1c64c:	bl	1609c <main@@Base+0x1304>
   1c650:	mov	r2, r0
   1c654:	ldr	r3, [fp, #-16]
   1c658:	ldr	r3, [r3, #20]
   1c65c:	add	r2, r3, r2
   1c660:	ldr	r3, [fp, #-16]
   1c664:	str	r2, [r3, #20]
   1c668:	nop			; (mov r0, r0)
   1c66c:	sub	sp, fp, #4
   1c670:	pop	{fp, pc}

0001c674 <flatcc_json_printer_int8_struct_field@@Base>:
   1c674:	push	{fp, lr}
   1c678:	add	fp, sp, #4
   1c67c:	sub	sp, sp, #24
   1c680:	str	r0, [fp, #-16]
   1c684:	str	r1, [fp, #-20]	; 0xffffffec
   1c688:	str	r2, [fp, #-24]	; 0xffffffe8
   1c68c:	str	r3, [fp, #-28]	; 0xffffffe4
   1c690:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c694:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c698:	add	r3, r2, r3
   1c69c:	mov	r0, r3
   1c6a0:	bl	15020 <main@@Base+0x288>
   1c6a4:	mov	r3, r0
   1c6a8:	strb	r3, [fp, #-5]
   1c6ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c6b0:	cmp	r3, #0
   1c6b4:	beq	1c6d4 <flatcc_json_printer_int8_struct_field@@Base+0x60>
   1c6b8:	ldr	r3, [fp, #-16]
   1c6bc:	ldr	r3, [r3, #20]
   1c6c0:	add	r1, r3, #1
   1c6c4:	ldr	r2, [fp, #-16]
   1c6c8:	str	r1, [r2, #20]
   1c6cc:	mov	r2, #44	; 0x2c
   1c6d0:	strb	r2, [r3]
   1c6d4:	ldr	r3, [fp, #8]
   1c6d8:	mov	r2, r3
   1c6dc:	ldr	r1, [fp, #4]
   1c6e0:	ldr	r0, [fp, #-16]
   1c6e4:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1c6e8:	ldr	r3, [fp, #-16]
   1c6ec:	ldr	r2, [r3, #20]
   1c6f0:	ldrsb	r3, [fp, #-5]
   1c6f4:	mov	r1, r2
   1c6f8:	mov	r0, r3
   1c6fc:	bl	16c24 <main@@Base+0x1e8c>
   1c700:	mov	r2, r0
   1c704:	ldr	r3, [fp, #-16]
   1c708:	ldr	r3, [r3, #20]
   1c70c:	add	r2, r3, r2
   1c710:	ldr	r3, [fp, #-16]
   1c714:	str	r2, [r3, #20]
   1c718:	nop			; (mov r0, r0)
   1c71c:	sub	sp, fp, #4
   1c720:	pop	{fp, pc}

0001c724 <flatcc_json_printer_int16_struct_field@@Base>:
   1c724:	push	{fp, lr}
   1c728:	add	fp, sp, #4
   1c72c:	sub	sp, sp, #24
   1c730:	str	r0, [fp, #-16]
   1c734:	str	r1, [fp, #-20]	; 0xffffffec
   1c738:	str	r2, [fp, #-24]	; 0xffffffe8
   1c73c:	str	r3, [fp, #-28]	; 0xffffffe4
   1c740:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c744:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c748:	add	r3, r2, r3
   1c74c:	mov	r0, r3
   1c750:	bl	15078 <main@@Base+0x2e0>
   1c754:	mov	r3, r0
   1c758:	strh	r3, [fp, #-6]
   1c75c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c760:	cmp	r3, #0
   1c764:	beq	1c784 <flatcc_json_printer_int16_struct_field@@Base+0x60>
   1c768:	ldr	r3, [fp, #-16]
   1c76c:	ldr	r3, [r3, #20]
   1c770:	add	r1, r3, #1
   1c774:	ldr	r2, [fp, #-16]
   1c778:	str	r1, [r2, #20]
   1c77c:	mov	r2, #44	; 0x2c
   1c780:	strb	r2, [r3]
   1c784:	ldr	r3, [fp, #8]
   1c788:	mov	r2, r3
   1c78c:	ldr	r1, [fp, #4]
   1c790:	ldr	r0, [fp, #-16]
   1c794:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1c798:	ldr	r3, [fp, #-16]
   1c79c:	ldr	r2, [r3, #20]
   1c7a0:	ldrsh	r3, [fp, #-6]
   1c7a4:	mov	r1, r2
   1c7a8:	mov	r0, r3
   1c7ac:	bl	16ca4 <main@@Base+0x1f0c>
   1c7b0:	mov	r2, r0
   1c7b4:	ldr	r3, [fp, #-16]
   1c7b8:	ldr	r3, [r3, #20]
   1c7bc:	add	r2, r3, r2
   1c7c0:	ldr	r3, [fp, #-16]
   1c7c4:	str	r2, [r3, #20]
   1c7c8:	nop			; (mov r0, r0)
   1c7cc:	sub	sp, fp, #4
   1c7d0:	pop	{fp, pc}

0001c7d4 <flatcc_json_printer_int32_struct_field@@Base>:
   1c7d4:	push	{fp, lr}
   1c7d8:	add	fp, sp, #4
   1c7dc:	sub	sp, sp, #24
   1c7e0:	str	r0, [fp, #-16]
   1c7e4:	str	r1, [fp, #-20]	; 0xffffffec
   1c7e8:	str	r2, [fp, #-24]	; 0xffffffe8
   1c7ec:	str	r3, [fp, #-28]	; 0xffffffe4
   1c7f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c7f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c7f8:	add	r3, r2, r3
   1c7fc:	mov	r0, r3
   1c800:	bl	150cc <main@@Base+0x334>
   1c804:	str	r0, [fp, #-8]
   1c808:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c80c:	cmp	r3, #0
   1c810:	beq	1c830 <flatcc_json_printer_int32_struct_field@@Base+0x5c>
   1c814:	ldr	r3, [fp, #-16]
   1c818:	ldr	r3, [r3, #20]
   1c81c:	add	r1, r3, #1
   1c820:	ldr	r2, [fp, #-16]
   1c824:	str	r1, [r2, #20]
   1c828:	mov	r2, #44	; 0x2c
   1c82c:	strb	r2, [r3]
   1c830:	ldr	r3, [fp, #8]
   1c834:	mov	r2, r3
   1c838:	ldr	r1, [fp, #4]
   1c83c:	ldr	r0, [fp, #-16]
   1c840:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1c844:	ldr	r3, [fp, #-16]
   1c848:	ldr	r3, [r3, #20]
   1c84c:	mov	r1, r3
   1c850:	ldr	r0, [fp, #-8]
   1c854:	bl	16d24 <main@@Base+0x1f8c>
   1c858:	mov	r2, r0
   1c85c:	ldr	r3, [fp, #-16]
   1c860:	ldr	r3, [r3, #20]
   1c864:	add	r2, r3, r2
   1c868:	ldr	r3, [fp, #-16]
   1c86c:	str	r2, [r3, #20]
   1c870:	nop			; (mov r0, r0)
   1c874:	sub	sp, fp, #4
   1c878:	pop	{fp, pc}

0001c87c <flatcc_json_printer_int64_struct_field@@Base>:
   1c87c:	push	{fp, lr}
   1c880:	add	fp, sp, #4
   1c884:	sub	sp, sp, #24
   1c888:	str	r0, [fp, #-16]
   1c88c:	str	r1, [fp, #-20]	; 0xffffffec
   1c890:	str	r2, [fp, #-24]	; 0xffffffe8
   1c894:	str	r3, [fp, #-28]	; 0xffffffe4
   1c898:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c89c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c8a0:	add	r3, r2, r3
   1c8a4:	mov	r0, r3
   1c8a8:	bl	15124 <main@@Base+0x38c>
   1c8ac:	strd	r0, [fp, #-12]
   1c8b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c8b4:	cmp	r3, #0
   1c8b8:	beq	1c8d8 <flatcc_json_printer_int64_struct_field@@Base+0x5c>
   1c8bc:	ldr	r3, [fp, #-16]
   1c8c0:	ldr	r3, [r3, #20]
   1c8c4:	add	r1, r3, #1
   1c8c8:	ldr	r2, [fp, #-16]
   1c8cc:	str	r1, [r2, #20]
   1c8d0:	mov	r2, #44	; 0x2c
   1c8d4:	strb	r2, [r3]
   1c8d8:	ldr	r3, [fp, #8]
   1c8dc:	mov	r2, r3
   1c8e0:	ldr	r1, [fp, #4]
   1c8e4:	ldr	r0, [fp, #-16]
   1c8e8:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1c8ec:	ldr	r3, [fp, #-16]
   1c8f0:	ldr	r3, [r3, #20]
   1c8f4:	mov	r2, r3
   1c8f8:	ldrd	r0, [fp, #-12]
   1c8fc:	bl	16d9c <main@@Base+0x2004>
   1c900:	mov	r2, r0
   1c904:	ldr	r3, [fp, #-16]
   1c908:	ldr	r3, [r3, #20]
   1c90c:	add	r2, r3, r2
   1c910:	ldr	r3, [fp, #-16]
   1c914:	str	r2, [r3, #20]
   1c918:	nop			; (mov r0, r0)
   1c91c:	sub	sp, fp, #4
   1c920:	pop	{fp, pc}

0001c924 <flatcc_json_printer_bool_struct_field@@Base>:
   1c924:	push	{fp, lr}
   1c928:	add	fp, sp, #4
   1c92c:	sub	sp, sp, #24
   1c930:	str	r0, [fp, #-16]
   1c934:	str	r1, [fp, #-20]	; 0xffffffec
   1c938:	str	r2, [fp, #-24]	; 0xffffffe8
   1c93c:	str	r3, [fp, #-28]	; 0xffffffe4
   1c940:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c944:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c948:	add	r3, r2, r3
   1c94c:	mov	r0, r3
   1c950:	bl	15258 <main@@Base+0x4c0>
   1c954:	mov	r3, r0
   1c958:	strb	r3, [fp, #-5]
   1c95c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c960:	cmp	r3, #0
   1c964:	beq	1c984 <flatcc_json_printer_bool_struct_field@@Base+0x60>
   1c968:	ldr	r3, [fp, #-16]
   1c96c:	ldr	r3, [r3, #20]
   1c970:	add	r1, r3, #1
   1c974:	ldr	r2, [fp, #-16]
   1c978:	str	r1, [r2, #20]
   1c97c:	mov	r2, #44	; 0x2c
   1c980:	strb	r2, [r3]
   1c984:	ldr	r3, [fp, #8]
   1c988:	mov	r2, r3
   1c98c:	ldr	r1, [fp, #4]
   1c990:	ldr	r0, [fp, #-16]
   1c994:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1c998:	ldrb	r2, [fp, #-5]
   1c99c:	ldr	r3, [fp, #-16]
   1c9a0:	ldr	r3, [r3, #20]
   1c9a4:	mov	r1, r3
   1c9a8:	mov	r0, r2
   1c9ac:	bl	15508 <main@@Base+0x770>
   1c9b0:	mov	r2, r0
   1c9b4:	ldr	r3, [fp, #-16]
   1c9b8:	ldr	r3, [r3, #20]
   1c9bc:	add	r2, r3, r2
   1c9c0:	ldr	r3, [fp, #-16]
   1c9c4:	str	r2, [r3, #20]
   1c9c8:	nop			; (mov r0, r0)
   1c9cc:	sub	sp, fp, #4
   1c9d0:	pop	{fp, pc}

0001c9d4 <flatcc_json_printer_float_struct_field@@Base>:
   1c9d4:	push	{fp, lr}
   1c9d8:	add	fp, sp, #4
   1c9dc:	sub	sp, sp, #24
   1c9e0:	str	r0, [fp, #-16]
   1c9e4:	str	r1, [fp, #-20]	; 0xffffffec
   1c9e8:	str	r2, [fp, #-24]	; 0xffffffe8
   1c9ec:	str	r3, [fp, #-28]	; 0xffffffe4
   1c9f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c9f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c9f8:	add	r3, r2, r3
   1c9fc:	mov	r0, r3
   1ca00:	bl	15198 <main@@Base+0x400>
   1ca04:	vstr	s0, [fp, #-8]
   1ca08:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ca0c:	cmp	r3, #0
   1ca10:	beq	1ca30 <flatcc_json_printer_float_struct_field@@Base+0x5c>
   1ca14:	ldr	r3, [fp, #-16]
   1ca18:	ldr	r3, [r3, #20]
   1ca1c:	add	r1, r3, #1
   1ca20:	ldr	r2, [fp, #-16]
   1ca24:	str	r1, [r2, #20]
   1ca28:	mov	r2, #44	; 0x2c
   1ca2c:	strb	r2, [r3]
   1ca30:	ldr	r3, [fp, #8]
   1ca34:	mov	r2, r3
   1ca38:	ldr	r1, [fp, #4]
   1ca3c:	ldr	r0, [fp, #-16]
   1ca40:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1ca44:	vldr	s15, [fp, #-8]
   1ca48:	vcvt.f64.f32	d7, s15
   1ca4c:	ldr	r3, [fp, #-16]
   1ca50:	ldr	r3, [r3, #20]
   1ca54:	mov	r0, r3
   1ca58:	vmov.f64	d0, d7
   1ca5c:	bl	186f0 <main@@Base+0x3958>
   1ca60:	mov	r2, r0
   1ca64:	ldr	r3, [fp, #-16]
   1ca68:	ldr	r3, [r3, #20]
   1ca6c:	add	r2, r3, r2
   1ca70:	ldr	r3, [fp, #-16]
   1ca74:	str	r2, [r3, #20]
   1ca78:	nop			; (mov r0, r0)
   1ca7c:	sub	sp, fp, #4
   1ca80:	pop	{fp, pc}

0001ca84 <flatcc_json_printer_double_struct_field@@Base>:
   1ca84:	push	{fp, lr}
   1ca88:	add	fp, sp, #4
   1ca8c:	sub	sp, sp, #24
   1ca90:	str	r0, [fp, #-16]
   1ca94:	str	r1, [fp, #-20]	; 0xffffffec
   1ca98:	str	r2, [fp, #-24]	; 0xffffffe8
   1ca9c:	str	r3, [fp, #-28]	; 0xffffffe4
   1caa0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1caa4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1caa8:	add	r3, r2, r3
   1caac:	mov	r0, r3
   1cab0:	bl	15200 <main@@Base+0x468>
   1cab4:	vstr	d0, [fp, #-12]
   1cab8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cabc:	cmp	r3, #0
   1cac0:	beq	1cae0 <flatcc_json_printer_double_struct_field@@Base+0x5c>
   1cac4:	ldr	r3, [fp, #-16]
   1cac8:	ldr	r3, [r3, #20]
   1cacc:	add	r1, r3, #1
   1cad0:	ldr	r2, [fp, #-16]
   1cad4:	str	r1, [r2, #20]
   1cad8:	mov	r2, #44	; 0x2c
   1cadc:	strb	r2, [r3]
   1cae0:	ldr	r3, [fp, #8]
   1cae4:	mov	r2, r3
   1cae8:	ldr	r1, [fp, #4]
   1caec:	ldr	r0, [fp, #-16]
   1caf0:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1caf4:	ldr	r3, [fp, #-16]
   1caf8:	ldr	r3, [r3, #20]
   1cafc:	mov	r0, r3
   1cb00:	vldr	d0, [fp, #-12]
   1cb04:	bl	186f0 <main@@Base+0x3958>
   1cb08:	mov	r2, r0
   1cb0c:	ldr	r3, [fp, #-16]
   1cb10:	ldr	r3, [r3, #20]
   1cb14:	add	r2, r3, r2
   1cb18:	ldr	r3, [fp, #-16]
   1cb1c:	str	r2, [r3, #20]
   1cb20:	nop			; (mov r0, r0)
   1cb24:	sub	sp, fp, #4
   1cb28:	pop	{fp, pc}

0001cb2c <flatcc_json_printer_uint8_enum_struct_field@@Base>:
   1cb2c:	push	{fp, lr}
   1cb30:	add	fp, sp, #4
   1cb34:	sub	sp, sp, #24
   1cb38:	str	r0, [fp, #-16]
   1cb3c:	str	r1, [fp, #-20]	; 0xffffffec
   1cb40:	str	r2, [fp, #-24]	; 0xffffffe8
   1cb44:	str	r3, [fp, #-28]	; 0xffffffe4
   1cb48:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1cb4c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cb50:	add	r3, r2, r3
   1cb54:	mov	r0, r3
   1cb58:	bl	14eb8 <main@@Base+0x120>
   1cb5c:	mov	r3, r0
   1cb60:	strb	r3, [fp, #-5]
   1cb64:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cb68:	cmp	r3, #0
   1cb6c:	beq	1cb8c <flatcc_json_printer_uint8_enum_struct_field@@Base+0x60>
   1cb70:	ldr	r3, [fp, #-16]
   1cb74:	ldr	r3, [r3, #20]
   1cb78:	add	r1, r3, #1
   1cb7c:	ldr	r2, [fp, #-16]
   1cb80:	str	r1, [r2, #20]
   1cb84:	mov	r2, #44	; 0x2c
   1cb88:	strb	r2, [r3]
   1cb8c:	ldr	r3, [fp, #8]
   1cb90:	mov	r2, r3
   1cb94:	ldr	r1, [fp, #4]
   1cb98:	ldr	r0, [fp, #-16]
   1cb9c:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1cba0:	ldr	r3, [fp, #-16]
   1cba4:	ldrb	r3, [r3, #27]
   1cba8:	cmp	r3, #0
   1cbac:	beq	1cbe4 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xb8>
   1cbb0:	ldr	r3, [fp, #-16]
   1cbb4:	ldr	r2, [r3, #20]
   1cbb8:	ldrb	r3, [fp, #-5]
   1cbbc:	mov	r1, r2
   1cbc0:	mov	r0, r3
   1cbc4:	bl	15578 <main@@Base+0x7e0>
   1cbc8:	mov	r2, r0
   1cbcc:	ldr	r3, [fp, #-16]
   1cbd0:	ldr	r3, [r3, #20]
   1cbd4:	add	r2, r3, r2
   1cbd8:	ldr	r3, [fp, #-16]
   1cbdc:	str	r2, [r3, #20]
   1cbe0:	b	1cbf8 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xcc>
   1cbe4:	ldrb	r2, [fp, #-5]
   1cbe8:	ldr	r3, [fp, #12]
   1cbec:	mov	r1, r2
   1cbf0:	ldr	r0, [fp, #-16]
   1cbf4:	blx	r3
   1cbf8:	nop			; (mov r0, r0)
   1cbfc:	sub	sp, fp, #4
   1cc00:	pop	{fp, pc}

0001cc04 <flatcc_json_printer_uint16_enum_struct_field@@Base>:
   1cc04:	push	{fp, lr}
   1cc08:	add	fp, sp, #4
   1cc0c:	sub	sp, sp, #24
   1cc10:	str	r0, [fp, #-16]
   1cc14:	str	r1, [fp, #-20]	; 0xffffffec
   1cc18:	str	r2, [fp, #-24]	; 0xffffffe8
   1cc1c:	str	r3, [fp, #-28]	; 0xffffffe4
   1cc20:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1cc24:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cc28:	add	r3, r2, r3
   1cc2c:	mov	r0, r3
   1cc30:	bl	14f10 <main@@Base+0x178>
   1cc34:	mov	r3, r0
   1cc38:	strh	r3, [fp, #-6]
   1cc3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cc40:	cmp	r3, #0
   1cc44:	beq	1cc64 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x60>
   1cc48:	ldr	r3, [fp, #-16]
   1cc4c:	ldr	r3, [r3, #20]
   1cc50:	add	r1, r3, #1
   1cc54:	ldr	r2, [fp, #-16]
   1cc58:	str	r1, [r2, #20]
   1cc5c:	mov	r2, #44	; 0x2c
   1cc60:	strb	r2, [r3]
   1cc64:	ldr	r3, [fp, #8]
   1cc68:	mov	r2, r3
   1cc6c:	ldr	r1, [fp, #4]
   1cc70:	ldr	r0, [fp, #-16]
   1cc74:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1cc78:	ldr	r3, [fp, #-16]
   1cc7c:	ldrb	r3, [r3, #27]
   1cc80:	cmp	r3, #0
   1cc84:	beq	1ccbc <flatcc_json_printer_uint16_enum_struct_field@@Base+0xb8>
   1cc88:	ldr	r3, [fp, #-16]
   1cc8c:	ldr	r2, [r3, #20]
   1cc90:	ldrh	r3, [fp, #-6]
   1cc94:	mov	r1, r2
   1cc98:	mov	r0, r3
   1cc9c:	bl	1573c <main@@Base+0x9a4>
   1cca0:	mov	r2, r0
   1cca4:	ldr	r3, [fp, #-16]
   1cca8:	ldr	r3, [r3, #20]
   1ccac:	add	r2, r3, r2
   1ccb0:	ldr	r3, [fp, #-16]
   1ccb4:	str	r2, [r3, #20]
   1ccb8:	b	1ccd0 <flatcc_json_printer_uint16_enum_struct_field@@Base+0xcc>
   1ccbc:	ldrh	r2, [fp, #-6]
   1ccc0:	ldr	r3, [fp, #12]
   1ccc4:	mov	r1, r2
   1ccc8:	ldr	r0, [fp, #-16]
   1cccc:	blx	r3
   1ccd0:	nop			; (mov r0, r0)
   1ccd4:	sub	sp, fp, #4
   1ccd8:	pop	{fp, pc}

0001ccdc <flatcc_json_printer_uint32_enum_struct_field@@Base>:
   1ccdc:	push	{fp, lr}
   1cce0:	add	fp, sp, #4
   1cce4:	sub	sp, sp, #24
   1cce8:	str	r0, [fp, #-16]
   1ccec:	str	r1, [fp, #-20]	; 0xffffffec
   1ccf0:	str	r2, [fp, #-24]	; 0xffffffe8
   1ccf4:	str	r3, [fp, #-28]	; 0xffffffe4
   1ccf8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ccfc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cd00:	add	r3, r2, r3
   1cd04:	mov	r0, r3
   1cd08:	bl	14f64 <main@@Base+0x1cc>
   1cd0c:	str	r0, [fp, #-8]
   1cd10:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cd14:	cmp	r3, #0
   1cd18:	beq	1cd38 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x5c>
   1cd1c:	ldr	r3, [fp, #-16]
   1cd20:	ldr	r3, [r3, #20]
   1cd24:	add	r1, r3, #1
   1cd28:	ldr	r2, [fp, #-16]
   1cd2c:	str	r1, [r2, #20]
   1cd30:	mov	r2, #44	; 0x2c
   1cd34:	strb	r2, [r3]
   1cd38:	ldr	r3, [fp, #8]
   1cd3c:	mov	r2, r3
   1cd40:	ldr	r1, [fp, #4]
   1cd44:	ldr	r0, [fp, #-16]
   1cd48:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1cd4c:	ldr	r3, [fp, #-16]
   1cd50:	ldrb	r3, [r3, #27]
   1cd54:	cmp	r3, #0
   1cd58:	beq	1cd8c <flatcc_json_printer_uint32_enum_struct_field@@Base+0xb0>
   1cd5c:	ldr	r3, [fp, #-16]
   1cd60:	ldr	r3, [r3, #20]
   1cd64:	mov	r1, r3
   1cd68:	ldr	r0, [fp, #-8]
   1cd6c:	bl	15a64 <main@@Base+0xccc>
   1cd70:	mov	r2, r0
   1cd74:	ldr	r3, [fp, #-16]
   1cd78:	ldr	r3, [r3, #20]
   1cd7c:	add	r2, r3, r2
   1cd80:	ldr	r3, [fp, #-16]
   1cd84:	str	r2, [r3, #20]
   1cd88:	b	1cd9c <flatcc_json_printer_uint32_enum_struct_field@@Base+0xc0>
   1cd8c:	ldr	r3, [fp, #12]
   1cd90:	ldr	r1, [fp, #-8]
   1cd94:	ldr	r0, [fp, #-16]
   1cd98:	blx	r3
   1cd9c:	nop			; (mov r0, r0)
   1cda0:	sub	sp, fp, #4
   1cda4:	pop	{fp, pc}

0001cda8 <flatcc_json_printer_uint64_enum_struct_field@@Base>:
   1cda8:	push	{fp, lr}
   1cdac:	add	fp, sp, #4
   1cdb0:	sub	sp, sp, #24
   1cdb4:	str	r0, [fp, #-16]
   1cdb8:	str	r1, [fp, #-20]	; 0xffffffec
   1cdbc:	str	r2, [fp, #-24]	; 0xffffffe8
   1cdc0:	str	r3, [fp, #-28]	; 0xffffffe4
   1cdc4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1cdc8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cdcc:	add	r3, r2, r3
   1cdd0:	mov	r0, r3
   1cdd4:	bl	14fbc <main@@Base+0x224>
   1cdd8:	strd	r0, [fp, #-12]
   1cddc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cde0:	cmp	r3, #0
   1cde4:	beq	1ce04 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x5c>
   1cde8:	ldr	r3, [fp, #-16]
   1cdec:	ldr	r3, [r3, #20]
   1cdf0:	add	r1, r3, #1
   1cdf4:	ldr	r2, [fp, #-16]
   1cdf8:	str	r1, [r2, #20]
   1cdfc:	mov	r2, #44	; 0x2c
   1ce00:	strb	r2, [r3]
   1ce04:	ldr	r3, [fp, #8]
   1ce08:	mov	r2, r3
   1ce0c:	ldr	r1, [fp, #4]
   1ce10:	ldr	r0, [fp, #-16]
   1ce14:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1ce18:	ldr	r3, [fp, #-16]
   1ce1c:	ldrb	r3, [r3, #27]
   1ce20:	cmp	r3, #0
   1ce24:	beq	1ce58 <flatcc_json_printer_uint64_enum_struct_field@@Base+0xb0>
   1ce28:	ldr	r3, [fp, #-16]
   1ce2c:	ldr	r3, [r3, #20]
   1ce30:	mov	r2, r3
   1ce34:	ldrd	r0, [fp, #-12]
   1ce38:	bl	1609c <main@@Base+0x1304>
   1ce3c:	mov	r2, r0
   1ce40:	ldr	r3, [fp, #-16]
   1ce44:	ldr	r3, [r3, #20]
   1ce48:	add	r2, r3, r2
   1ce4c:	ldr	r3, [fp, #-16]
   1ce50:	str	r2, [r3, #20]
   1ce54:	b	1ce68 <flatcc_json_printer_uint64_enum_struct_field@@Base+0xc0>
   1ce58:	ldr	r1, [fp, #12]
   1ce5c:	ldrd	r2, [fp, #-12]
   1ce60:	ldr	r0, [fp, #-16]
   1ce64:	blx	r1
   1ce68:	nop			; (mov r0, r0)
   1ce6c:	sub	sp, fp, #4
   1ce70:	pop	{fp, pc}

0001ce74 <flatcc_json_printer_int8_enum_struct_field@@Base>:
   1ce74:	push	{fp, lr}
   1ce78:	add	fp, sp, #4
   1ce7c:	sub	sp, sp, #24
   1ce80:	str	r0, [fp, #-16]
   1ce84:	str	r1, [fp, #-20]	; 0xffffffec
   1ce88:	str	r2, [fp, #-24]	; 0xffffffe8
   1ce8c:	str	r3, [fp, #-28]	; 0xffffffe4
   1ce90:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ce94:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ce98:	add	r3, r2, r3
   1ce9c:	mov	r0, r3
   1cea0:	bl	15020 <main@@Base+0x288>
   1cea4:	mov	r3, r0
   1cea8:	strb	r3, [fp, #-5]
   1ceac:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ceb0:	cmp	r3, #0
   1ceb4:	beq	1ced4 <flatcc_json_printer_int8_enum_struct_field@@Base+0x60>
   1ceb8:	ldr	r3, [fp, #-16]
   1cebc:	ldr	r3, [r3, #20]
   1cec0:	add	r1, r3, #1
   1cec4:	ldr	r2, [fp, #-16]
   1cec8:	str	r1, [r2, #20]
   1cecc:	mov	r2, #44	; 0x2c
   1ced0:	strb	r2, [r3]
   1ced4:	ldr	r3, [fp, #8]
   1ced8:	mov	r2, r3
   1cedc:	ldr	r1, [fp, #4]
   1cee0:	ldr	r0, [fp, #-16]
   1cee4:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1cee8:	ldr	r3, [fp, #-16]
   1ceec:	ldrb	r3, [r3, #27]
   1cef0:	cmp	r3, #0
   1cef4:	beq	1cf2c <flatcc_json_printer_int8_enum_struct_field@@Base+0xb8>
   1cef8:	ldr	r3, [fp, #-16]
   1cefc:	ldr	r2, [r3, #20]
   1cf00:	ldrsb	r3, [fp, #-5]
   1cf04:	mov	r1, r2
   1cf08:	mov	r0, r3
   1cf0c:	bl	16c24 <main@@Base+0x1e8c>
   1cf10:	mov	r2, r0
   1cf14:	ldr	r3, [fp, #-16]
   1cf18:	ldr	r3, [r3, #20]
   1cf1c:	add	r2, r3, r2
   1cf20:	ldr	r3, [fp, #-16]
   1cf24:	str	r2, [r3, #20]
   1cf28:	b	1cf40 <flatcc_json_printer_int8_enum_struct_field@@Base+0xcc>
   1cf2c:	ldrsb	r2, [fp, #-5]
   1cf30:	ldr	r3, [fp, #12]
   1cf34:	mov	r1, r2
   1cf38:	ldr	r0, [fp, #-16]
   1cf3c:	blx	r3
   1cf40:	nop			; (mov r0, r0)
   1cf44:	sub	sp, fp, #4
   1cf48:	pop	{fp, pc}

0001cf4c <flatcc_json_printer_int16_enum_struct_field@@Base>:
   1cf4c:	push	{fp, lr}
   1cf50:	add	fp, sp, #4
   1cf54:	sub	sp, sp, #24
   1cf58:	str	r0, [fp, #-16]
   1cf5c:	str	r1, [fp, #-20]	; 0xffffffec
   1cf60:	str	r2, [fp, #-24]	; 0xffffffe8
   1cf64:	str	r3, [fp, #-28]	; 0xffffffe4
   1cf68:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1cf6c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cf70:	add	r3, r2, r3
   1cf74:	mov	r0, r3
   1cf78:	bl	15078 <main@@Base+0x2e0>
   1cf7c:	mov	r3, r0
   1cf80:	strh	r3, [fp, #-6]
   1cf84:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cf88:	cmp	r3, #0
   1cf8c:	beq	1cfac <flatcc_json_printer_int16_enum_struct_field@@Base+0x60>
   1cf90:	ldr	r3, [fp, #-16]
   1cf94:	ldr	r3, [r3, #20]
   1cf98:	add	r1, r3, #1
   1cf9c:	ldr	r2, [fp, #-16]
   1cfa0:	str	r1, [r2, #20]
   1cfa4:	mov	r2, #44	; 0x2c
   1cfa8:	strb	r2, [r3]
   1cfac:	ldr	r3, [fp, #8]
   1cfb0:	mov	r2, r3
   1cfb4:	ldr	r1, [fp, #4]
   1cfb8:	ldr	r0, [fp, #-16]
   1cfbc:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1cfc0:	ldr	r3, [fp, #-16]
   1cfc4:	ldrb	r3, [r3, #27]
   1cfc8:	cmp	r3, #0
   1cfcc:	beq	1d004 <flatcc_json_printer_int16_enum_struct_field@@Base+0xb8>
   1cfd0:	ldr	r3, [fp, #-16]
   1cfd4:	ldr	r2, [r3, #20]
   1cfd8:	ldrsh	r3, [fp, #-6]
   1cfdc:	mov	r1, r2
   1cfe0:	mov	r0, r3
   1cfe4:	bl	16ca4 <main@@Base+0x1f0c>
   1cfe8:	mov	r2, r0
   1cfec:	ldr	r3, [fp, #-16]
   1cff0:	ldr	r3, [r3, #20]
   1cff4:	add	r2, r3, r2
   1cff8:	ldr	r3, [fp, #-16]
   1cffc:	str	r2, [r3, #20]
   1d000:	b	1d018 <flatcc_json_printer_int16_enum_struct_field@@Base+0xcc>
   1d004:	ldrsh	r2, [fp, #-6]
   1d008:	ldr	r3, [fp, #12]
   1d00c:	mov	r1, r2
   1d010:	ldr	r0, [fp, #-16]
   1d014:	blx	r3
   1d018:	nop			; (mov r0, r0)
   1d01c:	sub	sp, fp, #4
   1d020:	pop	{fp, pc}

0001d024 <flatcc_json_printer_int32_enum_struct_field@@Base>:
   1d024:	push	{fp, lr}
   1d028:	add	fp, sp, #4
   1d02c:	sub	sp, sp, #24
   1d030:	str	r0, [fp, #-16]
   1d034:	str	r1, [fp, #-20]	; 0xffffffec
   1d038:	str	r2, [fp, #-24]	; 0xffffffe8
   1d03c:	str	r3, [fp, #-28]	; 0xffffffe4
   1d040:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d044:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d048:	add	r3, r2, r3
   1d04c:	mov	r0, r3
   1d050:	bl	150cc <main@@Base+0x334>
   1d054:	str	r0, [fp, #-8]
   1d058:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d05c:	cmp	r3, #0
   1d060:	beq	1d080 <flatcc_json_printer_int32_enum_struct_field@@Base+0x5c>
   1d064:	ldr	r3, [fp, #-16]
   1d068:	ldr	r3, [r3, #20]
   1d06c:	add	r1, r3, #1
   1d070:	ldr	r2, [fp, #-16]
   1d074:	str	r1, [r2, #20]
   1d078:	mov	r2, #44	; 0x2c
   1d07c:	strb	r2, [r3]
   1d080:	ldr	r3, [fp, #8]
   1d084:	mov	r2, r3
   1d088:	ldr	r1, [fp, #4]
   1d08c:	ldr	r0, [fp, #-16]
   1d090:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1d094:	ldr	r3, [fp, #-16]
   1d098:	ldrb	r3, [r3, #27]
   1d09c:	cmp	r3, #0
   1d0a0:	beq	1d0d4 <flatcc_json_printer_int32_enum_struct_field@@Base+0xb0>
   1d0a4:	ldr	r3, [fp, #-16]
   1d0a8:	ldr	r3, [r3, #20]
   1d0ac:	mov	r1, r3
   1d0b0:	ldr	r0, [fp, #-8]
   1d0b4:	bl	16d24 <main@@Base+0x1f8c>
   1d0b8:	mov	r2, r0
   1d0bc:	ldr	r3, [fp, #-16]
   1d0c0:	ldr	r3, [r3, #20]
   1d0c4:	add	r2, r3, r2
   1d0c8:	ldr	r3, [fp, #-16]
   1d0cc:	str	r2, [r3, #20]
   1d0d0:	b	1d0e4 <flatcc_json_printer_int32_enum_struct_field@@Base+0xc0>
   1d0d4:	ldr	r3, [fp, #12]
   1d0d8:	ldr	r1, [fp, #-8]
   1d0dc:	ldr	r0, [fp, #-16]
   1d0e0:	blx	r3
   1d0e4:	nop			; (mov r0, r0)
   1d0e8:	sub	sp, fp, #4
   1d0ec:	pop	{fp, pc}

0001d0f0 <flatcc_json_printer_int64_enum_struct_field@@Base>:
   1d0f0:	push	{fp, lr}
   1d0f4:	add	fp, sp, #4
   1d0f8:	sub	sp, sp, #24
   1d0fc:	str	r0, [fp, #-16]
   1d100:	str	r1, [fp, #-20]	; 0xffffffec
   1d104:	str	r2, [fp, #-24]	; 0xffffffe8
   1d108:	str	r3, [fp, #-28]	; 0xffffffe4
   1d10c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d110:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d114:	add	r3, r2, r3
   1d118:	mov	r0, r3
   1d11c:	bl	15124 <main@@Base+0x38c>
   1d120:	strd	r0, [fp, #-12]
   1d124:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d128:	cmp	r3, #0
   1d12c:	beq	1d14c <flatcc_json_printer_int64_enum_struct_field@@Base+0x5c>
   1d130:	ldr	r3, [fp, #-16]
   1d134:	ldr	r3, [r3, #20]
   1d138:	add	r1, r3, #1
   1d13c:	ldr	r2, [fp, #-16]
   1d140:	str	r1, [r2, #20]
   1d144:	mov	r2, #44	; 0x2c
   1d148:	strb	r2, [r3]
   1d14c:	ldr	r3, [fp, #8]
   1d150:	mov	r2, r3
   1d154:	ldr	r1, [fp, #4]
   1d158:	ldr	r0, [fp, #-16]
   1d15c:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1d160:	ldr	r3, [fp, #-16]
   1d164:	ldrb	r3, [r3, #27]
   1d168:	cmp	r3, #0
   1d16c:	beq	1d1a0 <flatcc_json_printer_int64_enum_struct_field@@Base+0xb0>
   1d170:	ldr	r3, [fp, #-16]
   1d174:	ldr	r3, [r3, #20]
   1d178:	mov	r2, r3
   1d17c:	ldrd	r0, [fp, #-12]
   1d180:	bl	16d9c <main@@Base+0x2004>
   1d184:	mov	r2, r0
   1d188:	ldr	r3, [fp, #-16]
   1d18c:	ldr	r3, [r3, #20]
   1d190:	add	r2, r3, r2
   1d194:	ldr	r3, [fp, #-16]
   1d198:	str	r2, [r3, #20]
   1d19c:	b	1d1b0 <flatcc_json_printer_int64_enum_struct_field@@Base+0xc0>
   1d1a0:	ldr	r1, [fp, #12]
   1d1a4:	ldrd	r2, [fp, #-12]
   1d1a8:	ldr	r0, [fp, #-16]
   1d1ac:	blx	r1
   1d1b0:	nop			; (mov r0, r0)
   1d1b4:	sub	sp, fp, #4
   1d1b8:	pop	{fp, pc}

0001d1bc <flatcc_json_printer_bool_enum_struct_field@@Base>:
   1d1bc:	push	{fp, lr}
   1d1c0:	add	fp, sp, #4
   1d1c4:	sub	sp, sp, #24
   1d1c8:	str	r0, [fp, #-16]
   1d1cc:	str	r1, [fp, #-20]	; 0xffffffec
   1d1d0:	str	r2, [fp, #-24]	; 0xffffffe8
   1d1d4:	str	r3, [fp, #-28]	; 0xffffffe4
   1d1d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d1dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d1e0:	add	r3, r2, r3
   1d1e4:	mov	r0, r3
   1d1e8:	bl	15258 <main@@Base+0x4c0>
   1d1ec:	mov	r3, r0
   1d1f0:	strb	r3, [fp, #-5]
   1d1f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d1f8:	cmp	r3, #0
   1d1fc:	beq	1d21c <flatcc_json_printer_bool_enum_struct_field@@Base+0x60>
   1d200:	ldr	r3, [fp, #-16]
   1d204:	ldr	r3, [r3, #20]
   1d208:	add	r1, r3, #1
   1d20c:	ldr	r2, [fp, #-16]
   1d210:	str	r1, [r2, #20]
   1d214:	mov	r2, #44	; 0x2c
   1d218:	strb	r2, [r3]
   1d21c:	ldr	r3, [fp, #8]
   1d220:	mov	r2, r3
   1d224:	ldr	r1, [fp, #4]
   1d228:	ldr	r0, [fp, #-16]
   1d22c:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1d230:	ldr	r3, [fp, #-16]
   1d234:	ldrb	r3, [r3, #27]
   1d238:	cmp	r3, #0
   1d23c:	beq	1d274 <flatcc_json_printer_bool_enum_struct_field@@Base+0xb8>
   1d240:	ldrb	r2, [fp, #-5]
   1d244:	ldr	r3, [fp, #-16]
   1d248:	ldr	r3, [r3, #20]
   1d24c:	mov	r1, r3
   1d250:	mov	r0, r2
   1d254:	bl	15508 <main@@Base+0x770>
   1d258:	mov	r2, r0
   1d25c:	ldr	r3, [fp, #-16]
   1d260:	ldr	r3, [r3, #20]
   1d264:	add	r2, r3, r2
   1d268:	ldr	r3, [fp, #-16]
   1d26c:	str	r2, [r3, #20]
   1d270:	b	1d288 <flatcc_json_printer_bool_enum_struct_field@@Base+0xcc>
   1d274:	ldrb	r2, [fp, #-5]
   1d278:	ldr	r3, [fp, #12]
   1d27c:	mov	r1, r2
   1d280:	ldr	r0, [fp, #-16]
   1d284:	blx	r3
   1d288:	nop			; (mov r0, r0)
   1d28c:	sub	sp, fp, #4
   1d290:	pop	{fp, pc}

0001d294 <flatcc_json_printer_utype_vector_field@@Base>:
   1d294:	push	{fp, lr}
   1d298:	add	fp, sp, #4
   1d29c:	sub	sp, sp, #24
   1d2a0:	str	r0, [fp, #-16]
   1d2a4:	str	r1, [fp, #-20]	; 0xffffffec
   1d2a8:	str	r2, [fp, #-24]	; 0xffffffe8
   1d2ac:	str	r3, [fp, #-28]	; 0xffffffe4
   1d2b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d2b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d2b8:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   1d2bc:	str	r0, [fp, #-8]
   1d2c0:	ldr	r3, [fp, #-8]
   1d2c4:	cmp	r3, #0
   1d2c8:	beq	1d52c <flatcc_json_printer_utype_vector_field@@Base+0x298>
   1d2cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d2d0:	ldr	r3, [r3, #16]
   1d2d4:	add	r1, r3, #1
   1d2d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d2dc:	str	r1, [r2, #16]
   1d2e0:	cmp	r3, #0
   1d2e4:	beq	1d304 <flatcc_json_printer_utype_vector_field@@Base+0x70>
   1d2e8:	ldr	r3, [fp, #-16]
   1d2ec:	ldr	r3, [r3, #20]
   1d2f0:	add	r1, r3, #1
   1d2f4:	ldr	r2, [fp, #-16]
   1d2f8:	str	r1, [r2, #20]
   1d2fc:	mov	r2, #44	; 0x2c
   1d300:	strb	r2, [r3]
   1d304:	ldr	r0, [fp, #-8]
   1d308:	bl	197f8 <flatcc_json_printer_error_string@@Base+0x8c>
   1d30c:	str	r0, [fp, #-8]
   1d310:	ldr	r0, [fp, #-8]
   1d314:	bl	152ac <main@@Base+0x514>
   1d318:	str	r0, [fp, #-12]
   1d31c:	ldr	r3, [fp, #-8]
   1d320:	add	r3, r3, #4
   1d324:	str	r3, [fp, #-8]
   1d328:	ldr	r3, [fp, #4]
   1d32c:	mov	r2, r3
   1d330:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d334:	ldr	r0, [fp, #-16]
   1d338:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1d33c:	ldr	r3, [fp, #-16]
   1d340:	ldr	r3, [r3, #32]
   1d344:	add	r2, r3, #1
   1d348:	ldr	r3, [fp, #-16]
   1d34c:	str	r2, [r3, #32]
   1d350:	ldr	r3, [fp, #-16]
   1d354:	ldr	r3, [r3, #20]
   1d358:	add	r1, r3, #1
   1d35c:	ldr	r2, [fp, #-16]
   1d360:	str	r1, [r2, #20]
   1d364:	mov	r2, #91	; 0x5b
   1d368:	strb	r2, [r3]
   1d36c:	ldr	r3, [fp, #-12]
   1d370:	cmp	r3, #0
   1d374:	beq	1d4b4 <flatcc_json_printer_utype_vector_field@@Base+0x220>
   1d378:	ldr	r3, [fp, #-16]
   1d37c:	ldrb	r3, [r3, #25]
   1d380:	cmp	r3, #0
   1d384:	beq	1d3b0 <flatcc_json_printer_utype_vector_field@@Base+0x11c>
   1d388:	ldr	r3, [fp, #-16]
   1d38c:	ldr	r3, [r3, #20]
   1d390:	add	r1, r3, #1
   1d394:	ldr	r2, [fp, #-16]
   1d398:	str	r1, [r2, #20]
   1d39c:	mov	r2, #10
   1d3a0:	strb	r2, [r3]
   1d3a4:	ldr	r0, [fp, #-16]
   1d3a8:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1d3ac:	b	1d3b8 <flatcc_json_printer_utype_vector_field@@Base+0x124>
   1d3b0:	ldr	r0, [fp, #-16]
   1d3b4:	bl	154c0 <main@@Base+0x728>
   1d3b8:	ldr	r0, [fp, #-8]
   1d3bc:	bl	153b0 <main@@Base+0x618>
   1d3c0:	mov	r3, r0
   1d3c4:	mov	r2, r3
   1d3c8:	ldr	r3, [fp, #-16]
   1d3cc:	ldr	r3, [r3, #20]
   1d3d0:	mov	r1, r3
   1d3d4:	mov	r0, r2
   1d3d8:	bl	15578 <main@@Base+0x7e0>
   1d3dc:	mov	r2, r0
   1d3e0:	ldr	r3, [fp, #-16]
   1d3e4:	ldr	r3, [r3, #20]
   1d3e8:	add	r2, r3, r2
   1d3ec:	ldr	r3, [fp, #-16]
   1d3f0:	str	r2, [r3, #20]
   1d3f4:	ldr	r3, [fp, #-8]
   1d3f8:	add	r3, r3, #1
   1d3fc:	str	r3, [fp, #-8]
   1d400:	ldr	r3, [fp, #-12]
   1d404:	sub	r3, r3, #1
   1d408:	str	r3, [fp, #-12]
   1d40c:	b	1d4b4 <flatcc_json_printer_utype_vector_field@@Base+0x220>
   1d410:	ldr	r3, [fp, #-16]
   1d414:	ldr	r3, [r3, #20]
   1d418:	add	r1, r3, #1
   1d41c:	ldr	r2, [fp, #-16]
   1d420:	str	r1, [r2, #20]
   1d424:	mov	r2, #44	; 0x2c
   1d428:	strb	r2, [r3]
   1d42c:	ldr	r3, [fp, #-16]
   1d430:	ldrb	r3, [r3, #25]
   1d434:	cmp	r3, #0
   1d438:	beq	1d464 <flatcc_json_printer_utype_vector_field@@Base+0x1d0>
   1d43c:	ldr	r3, [fp, #-16]
   1d440:	ldr	r3, [r3, #20]
   1d444:	add	r1, r3, #1
   1d448:	ldr	r2, [fp, #-16]
   1d44c:	str	r1, [r2, #20]
   1d450:	mov	r2, #10
   1d454:	strb	r2, [r3]
   1d458:	ldr	r0, [fp, #-16]
   1d45c:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1d460:	b	1d46c <flatcc_json_printer_utype_vector_field@@Base+0x1d8>
   1d464:	ldr	r0, [fp, #-16]
   1d468:	bl	154c0 <main@@Base+0x728>
   1d46c:	ldr	r0, [fp, #-8]
   1d470:	bl	153b0 <main@@Base+0x618>
   1d474:	mov	r3, r0
   1d478:	mov	r2, r3
   1d47c:	ldr	r3, [fp, #-16]
   1d480:	ldr	r3, [r3, #20]
   1d484:	mov	r1, r3
   1d488:	mov	r0, r2
   1d48c:	bl	15578 <main@@Base+0x7e0>
   1d490:	mov	r2, r0
   1d494:	ldr	r3, [fp, #-16]
   1d498:	ldr	r3, [r3, #20]
   1d49c:	add	r2, r3, r2
   1d4a0:	ldr	r3, [fp, #-16]
   1d4a4:	str	r2, [r3, #20]
   1d4a8:	ldr	r3, [fp, #-8]
   1d4ac:	add	r3, r3, #1
   1d4b0:	str	r3, [fp, #-8]
   1d4b4:	ldr	r3, [fp, #-12]
   1d4b8:	sub	r2, r3, #1
   1d4bc:	str	r2, [fp, #-12]
   1d4c0:	cmp	r3, #0
   1d4c4:	bne	1d410 <flatcc_json_printer_utype_vector_field@@Base+0x17c>
   1d4c8:	ldr	r3, [fp, #-16]
   1d4cc:	ldrb	r3, [r3, #25]
   1d4d0:	cmp	r3, #0
   1d4d4:	beq	1d510 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   1d4d8:	ldr	r3, [fp, #-16]
   1d4dc:	ldr	r3, [r3, #20]
   1d4e0:	add	r1, r3, #1
   1d4e4:	ldr	r2, [fp, #-16]
   1d4e8:	str	r1, [r2, #20]
   1d4ec:	mov	r2, #10
   1d4f0:	strb	r2, [r3]
   1d4f4:	ldr	r3, [fp, #-16]
   1d4f8:	ldr	r3, [r3, #32]
   1d4fc:	sub	r2, r3, #1
   1d500:	ldr	r3, [fp, #-16]
   1d504:	str	r2, [r3, #32]
   1d508:	ldr	r0, [fp, #-16]
   1d50c:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1d510:	ldr	r3, [fp, #-16]
   1d514:	ldr	r3, [r3, #20]
   1d518:	add	r1, r3, #1
   1d51c:	ldr	r2, [fp, #-16]
   1d520:	str	r1, [r2, #20]
   1d524:	mov	r2, #93	; 0x5d
   1d528:	strb	r2, [r3]
   1d52c:	nop			; (mov r0, r0)
   1d530:	sub	sp, fp, #4
   1d534:	pop	{fp, pc}

0001d538 <flatcc_json_printer_uint8_vector_field@@Base>:
   1d538:	push	{fp, lr}
   1d53c:	add	fp, sp, #4
   1d540:	sub	sp, sp, #24
   1d544:	str	r0, [fp, #-16]
   1d548:	str	r1, [fp, #-20]	; 0xffffffec
   1d54c:	str	r2, [fp, #-24]	; 0xffffffe8
   1d550:	str	r3, [fp, #-28]	; 0xffffffe4
   1d554:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d558:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d55c:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   1d560:	str	r0, [fp, #-8]
   1d564:	ldr	r3, [fp, #-8]
   1d568:	cmp	r3, #0
   1d56c:	beq	1d7d0 <flatcc_json_printer_uint8_vector_field@@Base+0x298>
   1d570:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d574:	ldr	r3, [r3, #16]
   1d578:	add	r1, r3, #1
   1d57c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d580:	str	r1, [r2, #16]
   1d584:	cmp	r3, #0
   1d588:	beq	1d5a8 <flatcc_json_printer_uint8_vector_field@@Base+0x70>
   1d58c:	ldr	r3, [fp, #-16]
   1d590:	ldr	r3, [r3, #20]
   1d594:	add	r1, r3, #1
   1d598:	ldr	r2, [fp, #-16]
   1d59c:	str	r1, [r2, #20]
   1d5a0:	mov	r2, #44	; 0x2c
   1d5a4:	strb	r2, [r3]
   1d5a8:	ldr	r0, [fp, #-8]
   1d5ac:	bl	197f8 <flatcc_json_printer_error_string@@Base+0x8c>
   1d5b0:	str	r0, [fp, #-8]
   1d5b4:	ldr	r0, [fp, #-8]
   1d5b8:	bl	152ac <main@@Base+0x514>
   1d5bc:	str	r0, [fp, #-12]
   1d5c0:	ldr	r3, [fp, #-8]
   1d5c4:	add	r3, r3, #4
   1d5c8:	str	r3, [fp, #-8]
   1d5cc:	ldr	r3, [fp, #4]
   1d5d0:	mov	r2, r3
   1d5d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d5d8:	ldr	r0, [fp, #-16]
   1d5dc:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1d5e0:	ldr	r3, [fp, #-16]
   1d5e4:	ldr	r3, [r3, #32]
   1d5e8:	add	r2, r3, #1
   1d5ec:	ldr	r3, [fp, #-16]
   1d5f0:	str	r2, [r3, #32]
   1d5f4:	ldr	r3, [fp, #-16]
   1d5f8:	ldr	r3, [r3, #20]
   1d5fc:	add	r1, r3, #1
   1d600:	ldr	r2, [fp, #-16]
   1d604:	str	r1, [r2, #20]
   1d608:	mov	r2, #91	; 0x5b
   1d60c:	strb	r2, [r3]
   1d610:	ldr	r3, [fp, #-12]
   1d614:	cmp	r3, #0
   1d618:	beq	1d758 <flatcc_json_printer_uint8_vector_field@@Base+0x220>
   1d61c:	ldr	r3, [fp, #-16]
   1d620:	ldrb	r3, [r3, #25]
   1d624:	cmp	r3, #0
   1d628:	beq	1d654 <flatcc_json_printer_uint8_vector_field@@Base+0x11c>
   1d62c:	ldr	r3, [fp, #-16]
   1d630:	ldr	r3, [r3, #20]
   1d634:	add	r1, r3, #1
   1d638:	ldr	r2, [fp, #-16]
   1d63c:	str	r1, [r2, #20]
   1d640:	mov	r2, #10
   1d644:	strb	r2, [r3]
   1d648:	ldr	r0, [fp, #-16]
   1d64c:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1d650:	b	1d65c <flatcc_json_printer_uint8_vector_field@@Base+0x124>
   1d654:	ldr	r0, [fp, #-16]
   1d658:	bl	154c0 <main@@Base+0x728>
   1d65c:	ldr	r0, [fp, #-8]
   1d660:	bl	14eb8 <main@@Base+0x120>
   1d664:	mov	r3, r0
   1d668:	mov	r2, r3
   1d66c:	ldr	r3, [fp, #-16]
   1d670:	ldr	r3, [r3, #20]
   1d674:	mov	r1, r3
   1d678:	mov	r0, r2
   1d67c:	bl	15578 <main@@Base+0x7e0>
   1d680:	mov	r2, r0
   1d684:	ldr	r3, [fp, #-16]
   1d688:	ldr	r3, [r3, #20]
   1d68c:	add	r2, r3, r2
   1d690:	ldr	r3, [fp, #-16]
   1d694:	str	r2, [r3, #20]
   1d698:	ldr	r3, [fp, #-8]
   1d69c:	add	r3, r3, #1
   1d6a0:	str	r3, [fp, #-8]
   1d6a4:	ldr	r3, [fp, #-12]
   1d6a8:	sub	r3, r3, #1
   1d6ac:	str	r3, [fp, #-12]
   1d6b0:	b	1d758 <flatcc_json_printer_uint8_vector_field@@Base+0x220>
   1d6b4:	ldr	r3, [fp, #-16]
   1d6b8:	ldr	r3, [r3, #20]
   1d6bc:	add	r1, r3, #1
   1d6c0:	ldr	r2, [fp, #-16]
   1d6c4:	str	r1, [r2, #20]
   1d6c8:	mov	r2, #44	; 0x2c
   1d6cc:	strb	r2, [r3]
   1d6d0:	ldr	r3, [fp, #-16]
   1d6d4:	ldrb	r3, [r3, #25]
   1d6d8:	cmp	r3, #0
   1d6dc:	beq	1d708 <flatcc_json_printer_uint8_vector_field@@Base+0x1d0>
   1d6e0:	ldr	r3, [fp, #-16]
   1d6e4:	ldr	r3, [r3, #20]
   1d6e8:	add	r1, r3, #1
   1d6ec:	ldr	r2, [fp, #-16]
   1d6f0:	str	r1, [r2, #20]
   1d6f4:	mov	r2, #10
   1d6f8:	strb	r2, [r3]
   1d6fc:	ldr	r0, [fp, #-16]
   1d700:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1d704:	b	1d710 <flatcc_json_printer_uint8_vector_field@@Base+0x1d8>
   1d708:	ldr	r0, [fp, #-16]
   1d70c:	bl	154c0 <main@@Base+0x728>
   1d710:	ldr	r0, [fp, #-8]
   1d714:	bl	14eb8 <main@@Base+0x120>
   1d718:	mov	r3, r0
   1d71c:	mov	r2, r3
   1d720:	ldr	r3, [fp, #-16]
   1d724:	ldr	r3, [r3, #20]
   1d728:	mov	r1, r3
   1d72c:	mov	r0, r2
   1d730:	bl	15578 <main@@Base+0x7e0>
   1d734:	mov	r2, r0
   1d738:	ldr	r3, [fp, #-16]
   1d73c:	ldr	r3, [r3, #20]
   1d740:	add	r2, r3, r2
   1d744:	ldr	r3, [fp, #-16]
   1d748:	str	r2, [r3, #20]
   1d74c:	ldr	r3, [fp, #-8]
   1d750:	add	r3, r3, #1
   1d754:	str	r3, [fp, #-8]
   1d758:	ldr	r3, [fp, #-12]
   1d75c:	sub	r2, r3, #1
   1d760:	str	r2, [fp, #-12]
   1d764:	cmp	r3, #0
   1d768:	bne	1d6b4 <flatcc_json_printer_uint8_vector_field@@Base+0x17c>
   1d76c:	ldr	r3, [fp, #-16]
   1d770:	ldrb	r3, [r3, #25]
   1d774:	cmp	r3, #0
   1d778:	beq	1d7b4 <flatcc_json_printer_uint8_vector_field@@Base+0x27c>
   1d77c:	ldr	r3, [fp, #-16]
   1d780:	ldr	r3, [r3, #20]
   1d784:	add	r1, r3, #1
   1d788:	ldr	r2, [fp, #-16]
   1d78c:	str	r1, [r2, #20]
   1d790:	mov	r2, #10
   1d794:	strb	r2, [r3]
   1d798:	ldr	r3, [fp, #-16]
   1d79c:	ldr	r3, [r3, #32]
   1d7a0:	sub	r2, r3, #1
   1d7a4:	ldr	r3, [fp, #-16]
   1d7a8:	str	r2, [r3, #32]
   1d7ac:	ldr	r0, [fp, #-16]
   1d7b0:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1d7b4:	ldr	r3, [fp, #-16]
   1d7b8:	ldr	r3, [r3, #20]
   1d7bc:	add	r1, r3, #1
   1d7c0:	ldr	r2, [fp, #-16]
   1d7c4:	str	r1, [r2, #20]
   1d7c8:	mov	r2, #93	; 0x5d
   1d7cc:	strb	r2, [r3]
   1d7d0:	nop			; (mov r0, r0)
   1d7d4:	sub	sp, fp, #4
   1d7d8:	pop	{fp, pc}

0001d7dc <flatcc_json_printer_uint16_vector_field@@Base>:
   1d7dc:	push	{fp, lr}
   1d7e0:	add	fp, sp, #4
   1d7e4:	sub	sp, sp, #24
   1d7e8:	str	r0, [fp, #-16]
   1d7ec:	str	r1, [fp, #-20]	; 0xffffffec
   1d7f0:	str	r2, [fp, #-24]	; 0xffffffe8
   1d7f4:	str	r3, [fp, #-28]	; 0xffffffe4
   1d7f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d7fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d800:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   1d804:	str	r0, [fp, #-8]
   1d808:	ldr	r3, [fp, #-8]
   1d80c:	cmp	r3, #0
   1d810:	beq	1da74 <flatcc_json_printer_uint16_vector_field@@Base+0x298>
   1d814:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d818:	ldr	r3, [r3, #16]
   1d81c:	add	r1, r3, #1
   1d820:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d824:	str	r1, [r2, #16]
   1d828:	cmp	r3, #0
   1d82c:	beq	1d84c <flatcc_json_printer_uint16_vector_field@@Base+0x70>
   1d830:	ldr	r3, [fp, #-16]
   1d834:	ldr	r3, [r3, #20]
   1d838:	add	r1, r3, #1
   1d83c:	ldr	r2, [fp, #-16]
   1d840:	str	r1, [r2, #20]
   1d844:	mov	r2, #44	; 0x2c
   1d848:	strb	r2, [r3]
   1d84c:	ldr	r0, [fp, #-8]
   1d850:	bl	197f8 <flatcc_json_printer_error_string@@Base+0x8c>
   1d854:	str	r0, [fp, #-8]
   1d858:	ldr	r0, [fp, #-8]
   1d85c:	bl	152ac <main@@Base+0x514>
   1d860:	str	r0, [fp, #-12]
   1d864:	ldr	r3, [fp, #-8]
   1d868:	add	r3, r3, #4
   1d86c:	str	r3, [fp, #-8]
   1d870:	ldr	r3, [fp, #4]
   1d874:	mov	r2, r3
   1d878:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d87c:	ldr	r0, [fp, #-16]
   1d880:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1d884:	ldr	r3, [fp, #-16]
   1d888:	ldr	r3, [r3, #32]
   1d88c:	add	r2, r3, #1
   1d890:	ldr	r3, [fp, #-16]
   1d894:	str	r2, [r3, #32]
   1d898:	ldr	r3, [fp, #-16]
   1d89c:	ldr	r3, [r3, #20]
   1d8a0:	add	r1, r3, #1
   1d8a4:	ldr	r2, [fp, #-16]
   1d8a8:	str	r1, [r2, #20]
   1d8ac:	mov	r2, #91	; 0x5b
   1d8b0:	strb	r2, [r3]
   1d8b4:	ldr	r3, [fp, #-12]
   1d8b8:	cmp	r3, #0
   1d8bc:	beq	1d9fc <flatcc_json_printer_uint16_vector_field@@Base+0x220>
   1d8c0:	ldr	r3, [fp, #-16]
   1d8c4:	ldrb	r3, [r3, #25]
   1d8c8:	cmp	r3, #0
   1d8cc:	beq	1d8f8 <flatcc_json_printer_uint16_vector_field@@Base+0x11c>
   1d8d0:	ldr	r3, [fp, #-16]
   1d8d4:	ldr	r3, [r3, #20]
   1d8d8:	add	r1, r3, #1
   1d8dc:	ldr	r2, [fp, #-16]
   1d8e0:	str	r1, [r2, #20]
   1d8e4:	mov	r2, #10
   1d8e8:	strb	r2, [r3]
   1d8ec:	ldr	r0, [fp, #-16]
   1d8f0:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1d8f4:	b	1d900 <flatcc_json_printer_uint16_vector_field@@Base+0x124>
   1d8f8:	ldr	r0, [fp, #-16]
   1d8fc:	bl	154c0 <main@@Base+0x728>
   1d900:	ldr	r0, [fp, #-8]
   1d904:	bl	14f10 <main@@Base+0x178>
   1d908:	mov	r3, r0
   1d90c:	mov	r2, r3
   1d910:	ldr	r3, [fp, #-16]
   1d914:	ldr	r3, [r3, #20]
   1d918:	mov	r1, r3
   1d91c:	mov	r0, r2
   1d920:	bl	1573c <main@@Base+0x9a4>
   1d924:	mov	r2, r0
   1d928:	ldr	r3, [fp, #-16]
   1d92c:	ldr	r3, [r3, #20]
   1d930:	add	r2, r3, r2
   1d934:	ldr	r3, [fp, #-16]
   1d938:	str	r2, [r3, #20]
   1d93c:	ldr	r3, [fp, #-8]
   1d940:	add	r3, r3, #2
   1d944:	str	r3, [fp, #-8]
   1d948:	ldr	r3, [fp, #-12]
   1d94c:	sub	r3, r3, #1
   1d950:	str	r3, [fp, #-12]
   1d954:	b	1d9fc <flatcc_json_printer_uint16_vector_field@@Base+0x220>
   1d958:	ldr	r3, [fp, #-16]
   1d95c:	ldr	r3, [r3, #20]
   1d960:	add	r1, r3, #1
   1d964:	ldr	r2, [fp, #-16]
   1d968:	str	r1, [r2, #20]
   1d96c:	mov	r2, #44	; 0x2c
   1d970:	strb	r2, [r3]
   1d974:	ldr	r3, [fp, #-16]
   1d978:	ldrb	r3, [r3, #25]
   1d97c:	cmp	r3, #0
   1d980:	beq	1d9ac <flatcc_json_printer_uint16_vector_field@@Base+0x1d0>
   1d984:	ldr	r3, [fp, #-16]
   1d988:	ldr	r3, [r3, #20]
   1d98c:	add	r1, r3, #1
   1d990:	ldr	r2, [fp, #-16]
   1d994:	str	r1, [r2, #20]
   1d998:	mov	r2, #10
   1d99c:	strb	r2, [r3]
   1d9a0:	ldr	r0, [fp, #-16]
   1d9a4:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1d9a8:	b	1d9b4 <flatcc_json_printer_uint16_vector_field@@Base+0x1d8>
   1d9ac:	ldr	r0, [fp, #-16]
   1d9b0:	bl	154c0 <main@@Base+0x728>
   1d9b4:	ldr	r0, [fp, #-8]
   1d9b8:	bl	14f10 <main@@Base+0x178>
   1d9bc:	mov	r3, r0
   1d9c0:	mov	r2, r3
   1d9c4:	ldr	r3, [fp, #-16]
   1d9c8:	ldr	r3, [r3, #20]
   1d9cc:	mov	r1, r3
   1d9d0:	mov	r0, r2
   1d9d4:	bl	1573c <main@@Base+0x9a4>
   1d9d8:	mov	r2, r0
   1d9dc:	ldr	r3, [fp, #-16]
   1d9e0:	ldr	r3, [r3, #20]
   1d9e4:	add	r2, r3, r2
   1d9e8:	ldr	r3, [fp, #-16]
   1d9ec:	str	r2, [r3, #20]
   1d9f0:	ldr	r3, [fp, #-8]
   1d9f4:	add	r3, r3, #2
   1d9f8:	str	r3, [fp, #-8]
   1d9fc:	ldr	r3, [fp, #-12]
   1da00:	sub	r2, r3, #1
   1da04:	str	r2, [fp, #-12]
   1da08:	cmp	r3, #0
   1da0c:	bne	1d958 <flatcc_json_printer_uint16_vector_field@@Base+0x17c>
   1da10:	ldr	r3, [fp, #-16]
   1da14:	ldrb	r3, [r3, #25]
   1da18:	cmp	r3, #0
   1da1c:	beq	1da58 <flatcc_json_printer_uint16_vector_field@@Base+0x27c>
   1da20:	ldr	r3, [fp, #-16]
   1da24:	ldr	r3, [r3, #20]
   1da28:	add	r1, r3, #1
   1da2c:	ldr	r2, [fp, #-16]
   1da30:	str	r1, [r2, #20]
   1da34:	mov	r2, #10
   1da38:	strb	r2, [r3]
   1da3c:	ldr	r3, [fp, #-16]
   1da40:	ldr	r3, [r3, #32]
   1da44:	sub	r2, r3, #1
   1da48:	ldr	r3, [fp, #-16]
   1da4c:	str	r2, [r3, #32]
   1da50:	ldr	r0, [fp, #-16]
   1da54:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1da58:	ldr	r3, [fp, #-16]
   1da5c:	ldr	r3, [r3, #20]
   1da60:	add	r1, r3, #1
   1da64:	ldr	r2, [fp, #-16]
   1da68:	str	r1, [r2, #20]
   1da6c:	mov	r2, #93	; 0x5d
   1da70:	strb	r2, [r3]
   1da74:	nop			; (mov r0, r0)
   1da78:	sub	sp, fp, #4
   1da7c:	pop	{fp, pc}

0001da80 <flatcc_json_printer_uint32_vector_field@@Base>:
   1da80:	push	{fp, lr}
   1da84:	add	fp, sp, #4
   1da88:	sub	sp, sp, #24
   1da8c:	str	r0, [fp, #-16]
   1da90:	str	r1, [fp, #-20]	; 0xffffffec
   1da94:	str	r2, [fp, #-24]	; 0xffffffe8
   1da98:	str	r3, [fp, #-28]	; 0xffffffe4
   1da9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1daa0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1daa4:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   1daa8:	str	r0, [fp, #-8]
   1daac:	ldr	r3, [fp, #-8]
   1dab0:	cmp	r3, #0
   1dab4:	beq	1dd10 <flatcc_json_printer_uint32_vector_field@@Base+0x290>
   1dab8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dabc:	ldr	r3, [r3, #16]
   1dac0:	add	r1, r3, #1
   1dac4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1dac8:	str	r1, [r2, #16]
   1dacc:	cmp	r3, #0
   1dad0:	beq	1daf0 <flatcc_json_printer_uint32_vector_field@@Base+0x70>
   1dad4:	ldr	r3, [fp, #-16]
   1dad8:	ldr	r3, [r3, #20]
   1dadc:	add	r1, r3, #1
   1dae0:	ldr	r2, [fp, #-16]
   1dae4:	str	r1, [r2, #20]
   1dae8:	mov	r2, #44	; 0x2c
   1daec:	strb	r2, [r3]
   1daf0:	ldr	r0, [fp, #-8]
   1daf4:	bl	197f8 <flatcc_json_printer_error_string@@Base+0x8c>
   1daf8:	str	r0, [fp, #-8]
   1dafc:	ldr	r0, [fp, #-8]
   1db00:	bl	152ac <main@@Base+0x514>
   1db04:	str	r0, [fp, #-12]
   1db08:	ldr	r3, [fp, #-8]
   1db0c:	add	r3, r3, #4
   1db10:	str	r3, [fp, #-8]
   1db14:	ldr	r3, [fp, #4]
   1db18:	mov	r2, r3
   1db1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1db20:	ldr	r0, [fp, #-16]
   1db24:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1db28:	ldr	r3, [fp, #-16]
   1db2c:	ldr	r3, [r3, #32]
   1db30:	add	r2, r3, #1
   1db34:	ldr	r3, [fp, #-16]
   1db38:	str	r2, [r3, #32]
   1db3c:	ldr	r3, [fp, #-16]
   1db40:	ldr	r3, [r3, #20]
   1db44:	add	r1, r3, #1
   1db48:	ldr	r2, [fp, #-16]
   1db4c:	str	r1, [r2, #20]
   1db50:	mov	r2, #91	; 0x5b
   1db54:	strb	r2, [r3]
   1db58:	ldr	r3, [fp, #-12]
   1db5c:	cmp	r3, #0
   1db60:	beq	1dc98 <flatcc_json_printer_uint32_vector_field@@Base+0x218>
   1db64:	ldr	r3, [fp, #-16]
   1db68:	ldrb	r3, [r3, #25]
   1db6c:	cmp	r3, #0
   1db70:	beq	1db9c <flatcc_json_printer_uint32_vector_field@@Base+0x11c>
   1db74:	ldr	r3, [fp, #-16]
   1db78:	ldr	r3, [r3, #20]
   1db7c:	add	r1, r3, #1
   1db80:	ldr	r2, [fp, #-16]
   1db84:	str	r1, [r2, #20]
   1db88:	mov	r2, #10
   1db8c:	strb	r2, [r3]
   1db90:	ldr	r0, [fp, #-16]
   1db94:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1db98:	b	1dba4 <flatcc_json_printer_uint32_vector_field@@Base+0x124>
   1db9c:	ldr	r0, [fp, #-16]
   1dba0:	bl	154c0 <main@@Base+0x728>
   1dba4:	ldr	r0, [fp, #-8]
   1dba8:	bl	14f64 <main@@Base+0x1cc>
   1dbac:	mov	r2, r0
   1dbb0:	ldr	r3, [fp, #-16]
   1dbb4:	ldr	r3, [r3, #20]
   1dbb8:	mov	r1, r3
   1dbbc:	mov	r0, r2
   1dbc0:	bl	15a64 <main@@Base+0xccc>
   1dbc4:	mov	r2, r0
   1dbc8:	ldr	r3, [fp, #-16]
   1dbcc:	ldr	r3, [r3, #20]
   1dbd0:	add	r2, r3, r2
   1dbd4:	ldr	r3, [fp, #-16]
   1dbd8:	str	r2, [r3, #20]
   1dbdc:	ldr	r3, [fp, #-8]
   1dbe0:	add	r3, r3, #4
   1dbe4:	str	r3, [fp, #-8]
   1dbe8:	ldr	r3, [fp, #-12]
   1dbec:	sub	r3, r3, #1
   1dbf0:	str	r3, [fp, #-12]
   1dbf4:	b	1dc98 <flatcc_json_printer_uint32_vector_field@@Base+0x218>
   1dbf8:	ldr	r3, [fp, #-16]
   1dbfc:	ldr	r3, [r3, #20]
   1dc00:	add	r1, r3, #1
   1dc04:	ldr	r2, [fp, #-16]
   1dc08:	str	r1, [r2, #20]
   1dc0c:	mov	r2, #44	; 0x2c
   1dc10:	strb	r2, [r3]
   1dc14:	ldr	r3, [fp, #-16]
   1dc18:	ldrb	r3, [r3, #25]
   1dc1c:	cmp	r3, #0
   1dc20:	beq	1dc4c <flatcc_json_printer_uint32_vector_field@@Base+0x1cc>
   1dc24:	ldr	r3, [fp, #-16]
   1dc28:	ldr	r3, [r3, #20]
   1dc2c:	add	r1, r3, #1
   1dc30:	ldr	r2, [fp, #-16]
   1dc34:	str	r1, [r2, #20]
   1dc38:	mov	r2, #10
   1dc3c:	strb	r2, [r3]
   1dc40:	ldr	r0, [fp, #-16]
   1dc44:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1dc48:	b	1dc54 <flatcc_json_printer_uint32_vector_field@@Base+0x1d4>
   1dc4c:	ldr	r0, [fp, #-16]
   1dc50:	bl	154c0 <main@@Base+0x728>
   1dc54:	ldr	r0, [fp, #-8]
   1dc58:	bl	14f64 <main@@Base+0x1cc>
   1dc5c:	mov	r2, r0
   1dc60:	ldr	r3, [fp, #-16]
   1dc64:	ldr	r3, [r3, #20]
   1dc68:	mov	r1, r3
   1dc6c:	mov	r0, r2
   1dc70:	bl	15a64 <main@@Base+0xccc>
   1dc74:	mov	r2, r0
   1dc78:	ldr	r3, [fp, #-16]
   1dc7c:	ldr	r3, [r3, #20]
   1dc80:	add	r2, r3, r2
   1dc84:	ldr	r3, [fp, #-16]
   1dc88:	str	r2, [r3, #20]
   1dc8c:	ldr	r3, [fp, #-8]
   1dc90:	add	r3, r3, #4
   1dc94:	str	r3, [fp, #-8]
   1dc98:	ldr	r3, [fp, #-12]
   1dc9c:	sub	r2, r3, #1
   1dca0:	str	r2, [fp, #-12]
   1dca4:	cmp	r3, #0
   1dca8:	bne	1dbf8 <flatcc_json_printer_uint32_vector_field@@Base+0x178>
   1dcac:	ldr	r3, [fp, #-16]
   1dcb0:	ldrb	r3, [r3, #25]
   1dcb4:	cmp	r3, #0
   1dcb8:	beq	1dcf4 <flatcc_json_printer_uint32_vector_field@@Base+0x274>
   1dcbc:	ldr	r3, [fp, #-16]
   1dcc0:	ldr	r3, [r3, #20]
   1dcc4:	add	r1, r3, #1
   1dcc8:	ldr	r2, [fp, #-16]
   1dccc:	str	r1, [r2, #20]
   1dcd0:	mov	r2, #10
   1dcd4:	strb	r2, [r3]
   1dcd8:	ldr	r3, [fp, #-16]
   1dcdc:	ldr	r3, [r3, #32]
   1dce0:	sub	r2, r3, #1
   1dce4:	ldr	r3, [fp, #-16]
   1dce8:	str	r2, [r3, #32]
   1dcec:	ldr	r0, [fp, #-16]
   1dcf0:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1dcf4:	ldr	r3, [fp, #-16]
   1dcf8:	ldr	r3, [r3, #20]
   1dcfc:	add	r1, r3, #1
   1dd00:	ldr	r2, [fp, #-16]
   1dd04:	str	r1, [r2, #20]
   1dd08:	mov	r2, #93	; 0x5d
   1dd0c:	strb	r2, [r3]
   1dd10:	nop			; (mov r0, r0)
   1dd14:	sub	sp, fp, #4
   1dd18:	pop	{fp, pc}

0001dd1c <flatcc_json_printer_uint64_vector_field@@Base>:
   1dd1c:	push	{fp, lr}
   1dd20:	add	fp, sp, #4
   1dd24:	sub	sp, sp, #24
   1dd28:	str	r0, [fp, #-16]
   1dd2c:	str	r1, [fp, #-20]	; 0xffffffec
   1dd30:	str	r2, [fp, #-24]	; 0xffffffe8
   1dd34:	str	r3, [fp, #-28]	; 0xffffffe4
   1dd38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dd3c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1dd40:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   1dd44:	str	r0, [fp, #-8]
   1dd48:	ldr	r3, [fp, #-8]
   1dd4c:	cmp	r3, #0
   1dd50:	beq	1df9c <flatcc_json_printer_uint64_vector_field@@Base+0x280>
   1dd54:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dd58:	ldr	r3, [r3, #16]
   1dd5c:	add	r1, r3, #1
   1dd60:	ldr	r2, [fp, #-20]	; 0xffffffec
   1dd64:	str	r1, [r2, #16]
   1dd68:	cmp	r3, #0
   1dd6c:	beq	1dd8c <flatcc_json_printer_uint64_vector_field@@Base+0x70>
   1dd70:	ldr	r3, [fp, #-16]
   1dd74:	ldr	r3, [r3, #20]
   1dd78:	add	r1, r3, #1
   1dd7c:	ldr	r2, [fp, #-16]
   1dd80:	str	r1, [r2, #20]
   1dd84:	mov	r2, #44	; 0x2c
   1dd88:	strb	r2, [r3]
   1dd8c:	ldr	r0, [fp, #-8]
   1dd90:	bl	197f8 <flatcc_json_printer_error_string@@Base+0x8c>
   1dd94:	str	r0, [fp, #-8]
   1dd98:	ldr	r0, [fp, #-8]
   1dd9c:	bl	152ac <main@@Base+0x514>
   1dda0:	str	r0, [fp, #-12]
   1dda4:	ldr	r3, [fp, #-8]
   1dda8:	add	r3, r3, #4
   1ddac:	str	r3, [fp, #-8]
   1ddb0:	ldr	r3, [fp, #4]
   1ddb4:	mov	r2, r3
   1ddb8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ddbc:	ldr	r0, [fp, #-16]
   1ddc0:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1ddc4:	ldr	r3, [fp, #-16]
   1ddc8:	ldr	r3, [r3, #32]
   1ddcc:	add	r2, r3, #1
   1ddd0:	ldr	r3, [fp, #-16]
   1ddd4:	str	r2, [r3, #32]
   1ddd8:	ldr	r3, [fp, #-16]
   1dddc:	ldr	r3, [r3, #20]
   1dde0:	add	r1, r3, #1
   1dde4:	ldr	r2, [fp, #-16]
   1dde8:	str	r1, [r2, #20]
   1ddec:	mov	r2, #91	; 0x5b
   1ddf0:	strb	r2, [r3]
   1ddf4:	ldr	r3, [fp, #-12]
   1ddf8:	cmp	r3, #0
   1ddfc:	beq	1df24 <flatcc_json_printer_uint64_vector_field@@Base+0x208>
   1de00:	ldr	r3, [fp, #-16]
   1de04:	ldrb	r3, [r3, #25]
   1de08:	cmp	r3, #0
   1de0c:	beq	1de38 <flatcc_json_printer_uint64_vector_field@@Base+0x11c>
   1de10:	ldr	r3, [fp, #-16]
   1de14:	ldr	r3, [r3, #20]
   1de18:	add	r1, r3, #1
   1de1c:	ldr	r2, [fp, #-16]
   1de20:	str	r1, [r2, #20]
   1de24:	mov	r2, #10
   1de28:	strb	r2, [r3]
   1de2c:	ldr	r0, [fp, #-16]
   1de30:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1de34:	b	1de40 <flatcc_json_printer_uint64_vector_field@@Base+0x124>
   1de38:	ldr	r0, [fp, #-16]
   1de3c:	bl	154c0 <main@@Base+0x728>
   1de40:	ldr	r0, [fp, #-8]
   1de44:	bl	14fbc <main@@Base+0x224>
   1de48:	ldr	r3, [fp, #-16]
   1de4c:	ldr	r3, [r3, #20]
   1de50:	mov	r2, r3
   1de54:	bl	1609c <main@@Base+0x1304>
   1de58:	mov	r2, r0
   1de5c:	ldr	r3, [fp, #-16]
   1de60:	ldr	r3, [r3, #20]
   1de64:	add	r2, r3, r2
   1de68:	ldr	r3, [fp, #-16]
   1de6c:	str	r2, [r3, #20]
   1de70:	ldr	r3, [fp, #-8]
   1de74:	add	r3, r3, #8
   1de78:	str	r3, [fp, #-8]
   1de7c:	ldr	r3, [fp, #-12]
   1de80:	sub	r3, r3, #1
   1de84:	str	r3, [fp, #-12]
   1de88:	b	1df24 <flatcc_json_printer_uint64_vector_field@@Base+0x208>
   1de8c:	ldr	r3, [fp, #-16]
   1de90:	ldr	r3, [r3, #20]
   1de94:	add	r1, r3, #1
   1de98:	ldr	r2, [fp, #-16]
   1de9c:	str	r1, [r2, #20]
   1dea0:	mov	r2, #44	; 0x2c
   1dea4:	strb	r2, [r3]
   1dea8:	ldr	r3, [fp, #-16]
   1deac:	ldrb	r3, [r3, #25]
   1deb0:	cmp	r3, #0
   1deb4:	beq	1dee0 <flatcc_json_printer_uint64_vector_field@@Base+0x1c4>
   1deb8:	ldr	r3, [fp, #-16]
   1debc:	ldr	r3, [r3, #20]
   1dec0:	add	r1, r3, #1
   1dec4:	ldr	r2, [fp, #-16]
   1dec8:	str	r1, [r2, #20]
   1decc:	mov	r2, #10
   1ded0:	strb	r2, [r3]
   1ded4:	ldr	r0, [fp, #-16]
   1ded8:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1dedc:	b	1dee8 <flatcc_json_printer_uint64_vector_field@@Base+0x1cc>
   1dee0:	ldr	r0, [fp, #-16]
   1dee4:	bl	154c0 <main@@Base+0x728>
   1dee8:	ldr	r0, [fp, #-8]
   1deec:	bl	14fbc <main@@Base+0x224>
   1def0:	ldr	r3, [fp, #-16]
   1def4:	ldr	r3, [r3, #20]
   1def8:	mov	r2, r3
   1defc:	bl	1609c <main@@Base+0x1304>
   1df00:	mov	r2, r0
   1df04:	ldr	r3, [fp, #-16]
   1df08:	ldr	r3, [r3, #20]
   1df0c:	add	r2, r3, r2
   1df10:	ldr	r3, [fp, #-16]
   1df14:	str	r2, [r3, #20]
   1df18:	ldr	r3, [fp, #-8]
   1df1c:	add	r3, r3, #8
   1df20:	str	r3, [fp, #-8]
   1df24:	ldr	r3, [fp, #-12]
   1df28:	sub	r2, r3, #1
   1df2c:	str	r2, [fp, #-12]
   1df30:	cmp	r3, #0
   1df34:	bne	1de8c <flatcc_json_printer_uint64_vector_field@@Base+0x170>
   1df38:	ldr	r3, [fp, #-16]
   1df3c:	ldrb	r3, [r3, #25]
   1df40:	cmp	r3, #0
   1df44:	beq	1df80 <flatcc_json_printer_uint64_vector_field@@Base+0x264>
   1df48:	ldr	r3, [fp, #-16]
   1df4c:	ldr	r3, [r3, #20]
   1df50:	add	r1, r3, #1
   1df54:	ldr	r2, [fp, #-16]
   1df58:	str	r1, [r2, #20]
   1df5c:	mov	r2, #10
   1df60:	strb	r2, [r3]
   1df64:	ldr	r3, [fp, #-16]
   1df68:	ldr	r3, [r3, #32]
   1df6c:	sub	r2, r3, #1
   1df70:	ldr	r3, [fp, #-16]
   1df74:	str	r2, [r3, #32]
   1df78:	ldr	r0, [fp, #-16]
   1df7c:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1df80:	ldr	r3, [fp, #-16]
   1df84:	ldr	r3, [r3, #20]
   1df88:	add	r1, r3, #1
   1df8c:	ldr	r2, [fp, #-16]
   1df90:	str	r1, [r2, #20]
   1df94:	mov	r2, #93	; 0x5d
   1df98:	strb	r2, [r3]
   1df9c:	nop			; (mov r0, r0)
   1dfa0:	sub	sp, fp, #4
   1dfa4:	pop	{fp, pc}

0001dfa8 <flatcc_json_printer_int8_vector_field@@Base>:
   1dfa8:	push	{fp, lr}
   1dfac:	add	fp, sp, #4
   1dfb0:	sub	sp, sp, #24
   1dfb4:	str	r0, [fp, #-16]
   1dfb8:	str	r1, [fp, #-20]	; 0xffffffec
   1dfbc:	str	r2, [fp, #-24]	; 0xffffffe8
   1dfc0:	str	r3, [fp, #-28]	; 0xffffffe4
   1dfc4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dfc8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1dfcc:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   1dfd0:	str	r0, [fp, #-8]
   1dfd4:	ldr	r3, [fp, #-8]
   1dfd8:	cmp	r3, #0
   1dfdc:	beq	1e240 <flatcc_json_printer_int8_vector_field@@Base+0x298>
   1dfe0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dfe4:	ldr	r3, [r3, #16]
   1dfe8:	add	r1, r3, #1
   1dfec:	ldr	r2, [fp, #-20]	; 0xffffffec
   1dff0:	str	r1, [r2, #16]
   1dff4:	cmp	r3, #0
   1dff8:	beq	1e018 <flatcc_json_printer_int8_vector_field@@Base+0x70>
   1dffc:	ldr	r3, [fp, #-16]
   1e000:	ldr	r3, [r3, #20]
   1e004:	add	r1, r3, #1
   1e008:	ldr	r2, [fp, #-16]
   1e00c:	str	r1, [r2, #20]
   1e010:	mov	r2, #44	; 0x2c
   1e014:	strb	r2, [r3]
   1e018:	ldr	r0, [fp, #-8]
   1e01c:	bl	197f8 <flatcc_json_printer_error_string@@Base+0x8c>
   1e020:	str	r0, [fp, #-8]
   1e024:	ldr	r0, [fp, #-8]
   1e028:	bl	152ac <main@@Base+0x514>
   1e02c:	str	r0, [fp, #-12]
   1e030:	ldr	r3, [fp, #-8]
   1e034:	add	r3, r3, #4
   1e038:	str	r3, [fp, #-8]
   1e03c:	ldr	r3, [fp, #4]
   1e040:	mov	r2, r3
   1e044:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e048:	ldr	r0, [fp, #-16]
   1e04c:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1e050:	ldr	r3, [fp, #-16]
   1e054:	ldr	r3, [r3, #32]
   1e058:	add	r2, r3, #1
   1e05c:	ldr	r3, [fp, #-16]
   1e060:	str	r2, [r3, #32]
   1e064:	ldr	r3, [fp, #-16]
   1e068:	ldr	r3, [r3, #20]
   1e06c:	add	r1, r3, #1
   1e070:	ldr	r2, [fp, #-16]
   1e074:	str	r1, [r2, #20]
   1e078:	mov	r2, #91	; 0x5b
   1e07c:	strb	r2, [r3]
   1e080:	ldr	r3, [fp, #-12]
   1e084:	cmp	r3, #0
   1e088:	beq	1e1c8 <flatcc_json_printer_int8_vector_field@@Base+0x220>
   1e08c:	ldr	r3, [fp, #-16]
   1e090:	ldrb	r3, [r3, #25]
   1e094:	cmp	r3, #0
   1e098:	beq	1e0c4 <flatcc_json_printer_int8_vector_field@@Base+0x11c>
   1e09c:	ldr	r3, [fp, #-16]
   1e0a0:	ldr	r3, [r3, #20]
   1e0a4:	add	r1, r3, #1
   1e0a8:	ldr	r2, [fp, #-16]
   1e0ac:	str	r1, [r2, #20]
   1e0b0:	mov	r2, #10
   1e0b4:	strb	r2, [r3]
   1e0b8:	ldr	r0, [fp, #-16]
   1e0bc:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1e0c0:	b	1e0cc <flatcc_json_printer_int8_vector_field@@Base+0x124>
   1e0c4:	ldr	r0, [fp, #-16]
   1e0c8:	bl	154c0 <main@@Base+0x728>
   1e0cc:	ldr	r0, [fp, #-8]
   1e0d0:	bl	15020 <main@@Base+0x288>
   1e0d4:	mov	r3, r0
   1e0d8:	mov	r2, r3
   1e0dc:	ldr	r3, [fp, #-16]
   1e0e0:	ldr	r3, [r3, #20]
   1e0e4:	mov	r1, r3
   1e0e8:	mov	r0, r2
   1e0ec:	bl	16c24 <main@@Base+0x1e8c>
   1e0f0:	mov	r2, r0
   1e0f4:	ldr	r3, [fp, #-16]
   1e0f8:	ldr	r3, [r3, #20]
   1e0fc:	add	r2, r3, r2
   1e100:	ldr	r3, [fp, #-16]
   1e104:	str	r2, [r3, #20]
   1e108:	ldr	r3, [fp, #-8]
   1e10c:	add	r3, r3, #1
   1e110:	str	r3, [fp, #-8]
   1e114:	ldr	r3, [fp, #-12]
   1e118:	sub	r3, r3, #1
   1e11c:	str	r3, [fp, #-12]
   1e120:	b	1e1c8 <flatcc_json_printer_int8_vector_field@@Base+0x220>
   1e124:	ldr	r3, [fp, #-16]
   1e128:	ldr	r3, [r3, #20]
   1e12c:	add	r1, r3, #1
   1e130:	ldr	r2, [fp, #-16]
   1e134:	str	r1, [r2, #20]
   1e138:	mov	r2, #44	; 0x2c
   1e13c:	strb	r2, [r3]
   1e140:	ldr	r3, [fp, #-16]
   1e144:	ldrb	r3, [r3, #25]
   1e148:	cmp	r3, #0
   1e14c:	beq	1e178 <flatcc_json_printer_int8_vector_field@@Base+0x1d0>
   1e150:	ldr	r3, [fp, #-16]
   1e154:	ldr	r3, [r3, #20]
   1e158:	add	r1, r3, #1
   1e15c:	ldr	r2, [fp, #-16]
   1e160:	str	r1, [r2, #20]
   1e164:	mov	r2, #10
   1e168:	strb	r2, [r3]
   1e16c:	ldr	r0, [fp, #-16]
   1e170:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1e174:	b	1e180 <flatcc_json_printer_int8_vector_field@@Base+0x1d8>
   1e178:	ldr	r0, [fp, #-16]
   1e17c:	bl	154c0 <main@@Base+0x728>
   1e180:	ldr	r0, [fp, #-8]
   1e184:	bl	15020 <main@@Base+0x288>
   1e188:	mov	r3, r0
   1e18c:	mov	r2, r3
   1e190:	ldr	r3, [fp, #-16]
   1e194:	ldr	r3, [r3, #20]
   1e198:	mov	r1, r3
   1e19c:	mov	r0, r2
   1e1a0:	bl	16c24 <main@@Base+0x1e8c>
   1e1a4:	mov	r2, r0
   1e1a8:	ldr	r3, [fp, #-16]
   1e1ac:	ldr	r3, [r3, #20]
   1e1b0:	add	r2, r3, r2
   1e1b4:	ldr	r3, [fp, #-16]
   1e1b8:	str	r2, [r3, #20]
   1e1bc:	ldr	r3, [fp, #-8]
   1e1c0:	add	r3, r3, #1
   1e1c4:	str	r3, [fp, #-8]
   1e1c8:	ldr	r3, [fp, #-12]
   1e1cc:	sub	r2, r3, #1
   1e1d0:	str	r2, [fp, #-12]
   1e1d4:	cmp	r3, #0
   1e1d8:	bne	1e124 <flatcc_json_printer_int8_vector_field@@Base+0x17c>
   1e1dc:	ldr	r3, [fp, #-16]
   1e1e0:	ldrb	r3, [r3, #25]
   1e1e4:	cmp	r3, #0
   1e1e8:	beq	1e224 <flatcc_json_printer_int8_vector_field@@Base+0x27c>
   1e1ec:	ldr	r3, [fp, #-16]
   1e1f0:	ldr	r3, [r3, #20]
   1e1f4:	add	r1, r3, #1
   1e1f8:	ldr	r2, [fp, #-16]
   1e1fc:	str	r1, [r2, #20]
   1e200:	mov	r2, #10
   1e204:	strb	r2, [r3]
   1e208:	ldr	r3, [fp, #-16]
   1e20c:	ldr	r3, [r3, #32]
   1e210:	sub	r2, r3, #1
   1e214:	ldr	r3, [fp, #-16]
   1e218:	str	r2, [r3, #32]
   1e21c:	ldr	r0, [fp, #-16]
   1e220:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1e224:	ldr	r3, [fp, #-16]
   1e228:	ldr	r3, [r3, #20]
   1e22c:	add	r1, r3, #1
   1e230:	ldr	r2, [fp, #-16]
   1e234:	str	r1, [r2, #20]
   1e238:	mov	r2, #93	; 0x5d
   1e23c:	strb	r2, [r3]
   1e240:	nop			; (mov r0, r0)
   1e244:	sub	sp, fp, #4
   1e248:	pop	{fp, pc}

0001e24c <flatcc_json_printer_int16_vector_field@@Base>:
   1e24c:	push	{fp, lr}
   1e250:	add	fp, sp, #4
   1e254:	sub	sp, sp, #24
   1e258:	str	r0, [fp, #-16]
   1e25c:	str	r1, [fp, #-20]	; 0xffffffec
   1e260:	str	r2, [fp, #-24]	; 0xffffffe8
   1e264:	str	r3, [fp, #-28]	; 0xffffffe4
   1e268:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e26c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e270:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   1e274:	str	r0, [fp, #-8]
   1e278:	ldr	r3, [fp, #-8]
   1e27c:	cmp	r3, #0
   1e280:	beq	1e4e4 <flatcc_json_printer_int16_vector_field@@Base+0x298>
   1e284:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e288:	ldr	r3, [r3, #16]
   1e28c:	add	r1, r3, #1
   1e290:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e294:	str	r1, [r2, #16]
   1e298:	cmp	r3, #0
   1e29c:	beq	1e2bc <flatcc_json_printer_int16_vector_field@@Base+0x70>
   1e2a0:	ldr	r3, [fp, #-16]
   1e2a4:	ldr	r3, [r3, #20]
   1e2a8:	add	r1, r3, #1
   1e2ac:	ldr	r2, [fp, #-16]
   1e2b0:	str	r1, [r2, #20]
   1e2b4:	mov	r2, #44	; 0x2c
   1e2b8:	strb	r2, [r3]
   1e2bc:	ldr	r0, [fp, #-8]
   1e2c0:	bl	197f8 <flatcc_json_printer_error_string@@Base+0x8c>
   1e2c4:	str	r0, [fp, #-8]
   1e2c8:	ldr	r0, [fp, #-8]
   1e2cc:	bl	152ac <main@@Base+0x514>
   1e2d0:	str	r0, [fp, #-12]
   1e2d4:	ldr	r3, [fp, #-8]
   1e2d8:	add	r3, r3, #4
   1e2dc:	str	r3, [fp, #-8]
   1e2e0:	ldr	r3, [fp, #4]
   1e2e4:	mov	r2, r3
   1e2e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e2ec:	ldr	r0, [fp, #-16]
   1e2f0:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1e2f4:	ldr	r3, [fp, #-16]
   1e2f8:	ldr	r3, [r3, #32]
   1e2fc:	add	r2, r3, #1
   1e300:	ldr	r3, [fp, #-16]
   1e304:	str	r2, [r3, #32]
   1e308:	ldr	r3, [fp, #-16]
   1e30c:	ldr	r3, [r3, #20]
   1e310:	add	r1, r3, #1
   1e314:	ldr	r2, [fp, #-16]
   1e318:	str	r1, [r2, #20]
   1e31c:	mov	r2, #91	; 0x5b
   1e320:	strb	r2, [r3]
   1e324:	ldr	r3, [fp, #-12]
   1e328:	cmp	r3, #0
   1e32c:	beq	1e46c <flatcc_json_printer_int16_vector_field@@Base+0x220>
   1e330:	ldr	r3, [fp, #-16]
   1e334:	ldrb	r3, [r3, #25]
   1e338:	cmp	r3, #0
   1e33c:	beq	1e368 <flatcc_json_printer_int16_vector_field@@Base+0x11c>
   1e340:	ldr	r3, [fp, #-16]
   1e344:	ldr	r3, [r3, #20]
   1e348:	add	r1, r3, #1
   1e34c:	ldr	r2, [fp, #-16]
   1e350:	str	r1, [r2, #20]
   1e354:	mov	r2, #10
   1e358:	strb	r2, [r3]
   1e35c:	ldr	r0, [fp, #-16]
   1e360:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1e364:	b	1e370 <flatcc_json_printer_int16_vector_field@@Base+0x124>
   1e368:	ldr	r0, [fp, #-16]
   1e36c:	bl	154c0 <main@@Base+0x728>
   1e370:	ldr	r0, [fp, #-8]
   1e374:	bl	15078 <main@@Base+0x2e0>
   1e378:	mov	r3, r0
   1e37c:	mov	r2, r3
   1e380:	ldr	r3, [fp, #-16]
   1e384:	ldr	r3, [r3, #20]
   1e388:	mov	r1, r3
   1e38c:	mov	r0, r2
   1e390:	bl	16ca4 <main@@Base+0x1f0c>
   1e394:	mov	r2, r0
   1e398:	ldr	r3, [fp, #-16]
   1e39c:	ldr	r3, [r3, #20]
   1e3a0:	add	r2, r3, r2
   1e3a4:	ldr	r3, [fp, #-16]
   1e3a8:	str	r2, [r3, #20]
   1e3ac:	ldr	r3, [fp, #-8]
   1e3b0:	add	r3, r3, #2
   1e3b4:	str	r3, [fp, #-8]
   1e3b8:	ldr	r3, [fp, #-12]
   1e3bc:	sub	r3, r3, #1
   1e3c0:	str	r3, [fp, #-12]
   1e3c4:	b	1e46c <flatcc_json_printer_int16_vector_field@@Base+0x220>
   1e3c8:	ldr	r3, [fp, #-16]
   1e3cc:	ldr	r3, [r3, #20]
   1e3d0:	add	r1, r3, #1
   1e3d4:	ldr	r2, [fp, #-16]
   1e3d8:	str	r1, [r2, #20]
   1e3dc:	mov	r2, #44	; 0x2c
   1e3e0:	strb	r2, [r3]
   1e3e4:	ldr	r3, [fp, #-16]
   1e3e8:	ldrb	r3, [r3, #25]
   1e3ec:	cmp	r3, #0
   1e3f0:	beq	1e41c <flatcc_json_printer_int16_vector_field@@Base+0x1d0>
   1e3f4:	ldr	r3, [fp, #-16]
   1e3f8:	ldr	r3, [r3, #20]
   1e3fc:	add	r1, r3, #1
   1e400:	ldr	r2, [fp, #-16]
   1e404:	str	r1, [r2, #20]
   1e408:	mov	r2, #10
   1e40c:	strb	r2, [r3]
   1e410:	ldr	r0, [fp, #-16]
   1e414:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1e418:	b	1e424 <flatcc_json_printer_int16_vector_field@@Base+0x1d8>
   1e41c:	ldr	r0, [fp, #-16]
   1e420:	bl	154c0 <main@@Base+0x728>
   1e424:	ldr	r0, [fp, #-8]
   1e428:	bl	15078 <main@@Base+0x2e0>
   1e42c:	mov	r3, r0
   1e430:	mov	r2, r3
   1e434:	ldr	r3, [fp, #-16]
   1e438:	ldr	r3, [r3, #20]
   1e43c:	mov	r1, r3
   1e440:	mov	r0, r2
   1e444:	bl	16ca4 <main@@Base+0x1f0c>
   1e448:	mov	r2, r0
   1e44c:	ldr	r3, [fp, #-16]
   1e450:	ldr	r3, [r3, #20]
   1e454:	add	r2, r3, r2
   1e458:	ldr	r3, [fp, #-16]
   1e45c:	str	r2, [r3, #20]
   1e460:	ldr	r3, [fp, #-8]
   1e464:	add	r3, r3, #2
   1e468:	str	r3, [fp, #-8]
   1e46c:	ldr	r3, [fp, #-12]
   1e470:	sub	r2, r3, #1
   1e474:	str	r2, [fp, #-12]
   1e478:	cmp	r3, #0
   1e47c:	bne	1e3c8 <flatcc_json_printer_int16_vector_field@@Base+0x17c>
   1e480:	ldr	r3, [fp, #-16]
   1e484:	ldrb	r3, [r3, #25]
   1e488:	cmp	r3, #0
   1e48c:	beq	1e4c8 <flatcc_json_printer_int16_vector_field@@Base+0x27c>
   1e490:	ldr	r3, [fp, #-16]
   1e494:	ldr	r3, [r3, #20]
   1e498:	add	r1, r3, #1
   1e49c:	ldr	r2, [fp, #-16]
   1e4a0:	str	r1, [r2, #20]
   1e4a4:	mov	r2, #10
   1e4a8:	strb	r2, [r3]
   1e4ac:	ldr	r3, [fp, #-16]
   1e4b0:	ldr	r3, [r3, #32]
   1e4b4:	sub	r2, r3, #1
   1e4b8:	ldr	r3, [fp, #-16]
   1e4bc:	str	r2, [r3, #32]
   1e4c0:	ldr	r0, [fp, #-16]
   1e4c4:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1e4c8:	ldr	r3, [fp, #-16]
   1e4cc:	ldr	r3, [r3, #20]
   1e4d0:	add	r1, r3, #1
   1e4d4:	ldr	r2, [fp, #-16]
   1e4d8:	str	r1, [r2, #20]
   1e4dc:	mov	r2, #93	; 0x5d
   1e4e0:	strb	r2, [r3]
   1e4e4:	nop			; (mov r0, r0)
   1e4e8:	sub	sp, fp, #4
   1e4ec:	pop	{fp, pc}

0001e4f0 <flatcc_json_printer_int32_vector_field@@Base>:
   1e4f0:	push	{fp, lr}
   1e4f4:	add	fp, sp, #4
   1e4f8:	sub	sp, sp, #24
   1e4fc:	str	r0, [fp, #-16]
   1e500:	str	r1, [fp, #-20]	; 0xffffffec
   1e504:	str	r2, [fp, #-24]	; 0xffffffe8
   1e508:	str	r3, [fp, #-28]	; 0xffffffe4
   1e50c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e510:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e514:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   1e518:	str	r0, [fp, #-8]
   1e51c:	ldr	r3, [fp, #-8]
   1e520:	cmp	r3, #0
   1e524:	beq	1e780 <flatcc_json_printer_int32_vector_field@@Base+0x290>
   1e528:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e52c:	ldr	r3, [r3, #16]
   1e530:	add	r1, r3, #1
   1e534:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e538:	str	r1, [r2, #16]
   1e53c:	cmp	r3, #0
   1e540:	beq	1e560 <flatcc_json_printer_int32_vector_field@@Base+0x70>
   1e544:	ldr	r3, [fp, #-16]
   1e548:	ldr	r3, [r3, #20]
   1e54c:	add	r1, r3, #1
   1e550:	ldr	r2, [fp, #-16]
   1e554:	str	r1, [r2, #20]
   1e558:	mov	r2, #44	; 0x2c
   1e55c:	strb	r2, [r3]
   1e560:	ldr	r0, [fp, #-8]
   1e564:	bl	197f8 <flatcc_json_printer_error_string@@Base+0x8c>
   1e568:	str	r0, [fp, #-8]
   1e56c:	ldr	r0, [fp, #-8]
   1e570:	bl	152ac <main@@Base+0x514>
   1e574:	str	r0, [fp, #-12]
   1e578:	ldr	r3, [fp, #-8]
   1e57c:	add	r3, r3, #4
   1e580:	str	r3, [fp, #-8]
   1e584:	ldr	r3, [fp, #4]
   1e588:	mov	r2, r3
   1e58c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e590:	ldr	r0, [fp, #-16]
   1e594:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1e598:	ldr	r3, [fp, #-16]
   1e59c:	ldr	r3, [r3, #32]
   1e5a0:	add	r2, r3, #1
   1e5a4:	ldr	r3, [fp, #-16]
   1e5a8:	str	r2, [r3, #32]
   1e5ac:	ldr	r3, [fp, #-16]
   1e5b0:	ldr	r3, [r3, #20]
   1e5b4:	add	r1, r3, #1
   1e5b8:	ldr	r2, [fp, #-16]
   1e5bc:	str	r1, [r2, #20]
   1e5c0:	mov	r2, #91	; 0x5b
   1e5c4:	strb	r2, [r3]
   1e5c8:	ldr	r3, [fp, #-12]
   1e5cc:	cmp	r3, #0
   1e5d0:	beq	1e708 <flatcc_json_printer_int32_vector_field@@Base+0x218>
   1e5d4:	ldr	r3, [fp, #-16]
   1e5d8:	ldrb	r3, [r3, #25]
   1e5dc:	cmp	r3, #0
   1e5e0:	beq	1e60c <flatcc_json_printer_int32_vector_field@@Base+0x11c>
   1e5e4:	ldr	r3, [fp, #-16]
   1e5e8:	ldr	r3, [r3, #20]
   1e5ec:	add	r1, r3, #1
   1e5f0:	ldr	r2, [fp, #-16]
   1e5f4:	str	r1, [r2, #20]
   1e5f8:	mov	r2, #10
   1e5fc:	strb	r2, [r3]
   1e600:	ldr	r0, [fp, #-16]
   1e604:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1e608:	b	1e614 <flatcc_json_printer_int32_vector_field@@Base+0x124>
   1e60c:	ldr	r0, [fp, #-16]
   1e610:	bl	154c0 <main@@Base+0x728>
   1e614:	ldr	r0, [fp, #-8]
   1e618:	bl	150cc <main@@Base+0x334>
   1e61c:	mov	r2, r0
   1e620:	ldr	r3, [fp, #-16]
   1e624:	ldr	r3, [r3, #20]
   1e628:	mov	r1, r3
   1e62c:	mov	r0, r2
   1e630:	bl	16d24 <main@@Base+0x1f8c>
   1e634:	mov	r2, r0
   1e638:	ldr	r3, [fp, #-16]
   1e63c:	ldr	r3, [r3, #20]
   1e640:	add	r2, r3, r2
   1e644:	ldr	r3, [fp, #-16]
   1e648:	str	r2, [r3, #20]
   1e64c:	ldr	r3, [fp, #-8]
   1e650:	add	r3, r3, #4
   1e654:	str	r3, [fp, #-8]
   1e658:	ldr	r3, [fp, #-12]
   1e65c:	sub	r3, r3, #1
   1e660:	str	r3, [fp, #-12]
   1e664:	b	1e708 <flatcc_json_printer_int32_vector_field@@Base+0x218>
   1e668:	ldr	r3, [fp, #-16]
   1e66c:	ldr	r3, [r3, #20]
   1e670:	add	r1, r3, #1
   1e674:	ldr	r2, [fp, #-16]
   1e678:	str	r1, [r2, #20]
   1e67c:	mov	r2, #44	; 0x2c
   1e680:	strb	r2, [r3]
   1e684:	ldr	r3, [fp, #-16]
   1e688:	ldrb	r3, [r3, #25]
   1e68c:	cmp	r3, #0
   1e690:	beq	1e6bc <flatcc_json_printer_int32_vector_field@@Base+0x1cc>
   1e694:	ldr	r3, [fp, #-16]
   1e698:	ldr	r3, [r3, #20]
   1e69c:	add	r1, r3, #1
   1e6a0:	ldr	r2, [fp, #-16]
   1e6a4:	str	r1, [r2, #20]
   1e6a8:	mov	r2, #10
   1e6ac:	strb	r2, [r3]
   1e6b0:	ldr	r0, [fp, #-16]
   1e6b4:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1e6b8:	b	1e6c4 <flatcc_json_printer_int32_vector_field@@Base+0x1d4>
   1e6bc:	ldr	r0, [fp, #-16]
   1e6c0:	bl	154c0 <main@@Base+0x728>
   1e6c4:	ldr	r0, [fp, #-8]
   1e6c8:	bl	150cc <main@@Base+0x334>
   1e6cc:	mov	r2, r0
   1e6d0:	ldr	r3, [fp, #-16]
   1e6d4:	ldr	r3, [r3, #20]
   1e6d8:	mov	r1, r3
   1e6dc:	mov	r0, r2
   1e6e0:	bl	16d24 <main@@Base+0x1f8c>
   1e6e4:	mov	r2, r0
   1e6e8:	ldr	r3, [fp, #-16]
   1e6ec:	ldr	r3, [r3, #20]
   1e6f0:	add	r2, r3, r2
   1e6f4:	ldr	r3, [fp, #-16]
   1e6f8:	str	r2, [r3, #20]
   1e6fc:	ldr	r3, [fp, #-8]
   1e700:	add	r3, r3, #4
   1e704:	str	r3, [fp, #-8]
   1e708:	ldr	r3, [fp, #-12]
   1e70c:	sub	r2, r3, #1
   1e710:	str	r2, [fp, #-12]
   1e714:	cmp	r3, #0
   1e718:	bne	1e668 <flatcc_json_printer_int32_vector_field@@Base+0x178>
   1e71c:	ldr	r3, [fp, #-16]
   1e720:	ldrb	r3, [r3, #25]
   1e724:	cmp	r3, #0
   1e728:	beq	1e764 <flatcc_json_printer_int32_vector_field@@Base+0x274>
   1e72c:	ldr	r3, [fp, #-16]
   1e730:	ldr	r3, [r3, #20]
   1e734:	add	r1, r3, #1
   1e738:	ldr	r2, [fp, #-16]
   1e73c:	str	r1, [r2, #20]
   1e740:	mov	r2, #10
   1e744:	strb	r2, [r3]
   1e748:	ldr	r3, [fp, #-16]
   1e74c:	ldr	r3, [r3, #32]
   1e750:	sub	r2, r3, #1
   1e754:	ldr	r3, [fp, #-16]
   1e758:	str	r2, [r3, #32]
   1e75c:	ldr	r0, [fp, #-16]
   1e760:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1e764:	ldr	r3, [fp, #-16]
   1e768:	ldr	r3, [r3, #20]
   1e76c:	add	r1, r3, #1
   1e770:	ldr	r2, [fp, #-16]
   1e774:	str	r1, [r2, #20]
   1e778:	mov	r2, #93	; 0x5d
   1e77c:	strb	r2, [r3]
   1e780:	nop			; (mov r0, r0)
   1e784:	sub	sp, fp, #4
   1e788:	pop	{fp, pc}

0001e78c <flatcc_json_printer_int64_vector_field@@Base>:
   1e78c:	push	{fp, lr}
   1e790:	add	fp, sp, #4
   1e794:	sub	sp, sp, #24
   1e798:	str	r0, [fp, #-16]
   1e79c:	str	r1, [fp, #-20]	; 0xffffffec
   1e7a0:	str	r2, [fp, #-24]	; 0xffffffe8
   1e7a4:	str	r3, [fp, #-28]	; 0xffffffe4
   1e7a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e7ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e7b0:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   1e7b4:	str	r0, [fp, #-8]
   1e7b8:	ldr	r3, [fp, #-8]
   1e7bc:	cmp	r3, #0
   1e7c0:	beq	1ea0c <flatcc_json_printer_int64_vector_field@@Base+0x280>
   1e7c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e7c8:	ldr	r3, [r3, #16]
   1e7cc:	add	r1, r3, #1
   1e7d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e7d4:	str	r1, [r2, #16]
   1e7d8:	cmp	r3, #0
   1e7dc:	beq	1e7fc <flatcc_json_printer_int64_vector_field@@Base+0x70>
   1e7e0:	ldr	r3, [fp, #-16]
   1e7e4:	ldr	r3, [r3, #20]
   1e7e8:	add	r1, r3, #1
   1e7ec:	ldr	r2, [fp, #-16]
   1e7f0:	str	r1, [r2, #20]
   1e7f4:	mov	r2, #44	; 0x2c
   1e7f8:	strb	r2, [r3]
   1e7fc:	ldr	r0, [fp, #-8]
   1e800:	bl	197f8 <flatcc_json_printer_error_string@@Base+0x8c>
   1e804:	str	r0, [fp, #-8]
   1e808:	ldr	r0, [fp, #-8]
   1e80c:	bl	152ac <main@@Base+0x514>
   1e810:	str	r0, [fp, #-12]
   1e814:	ldr	r3, [fp, #-8]
   1e818:	add	r3, r3, #4
   1e81c:	str	r3, [fp, #-8]
   1e820:	ldr	r3, [fp, #4]
   1e824:	mov	r2, r3
   1e828:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e82c:	ldr	r0, [fp, #-16]
   1e830:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1e834:	ldr	r3, [fp, #-16]
   1e838:	ldr	r3, [r3, #32]
   1e83c:	add	r2, r3, #1
   1e840:	ldr	r3, [fp, #-16]
   1e844:	str	r2, [r3, #32]
   1e848:	ldr	r3, [fp, #-16]
   1e84c:	ldr	r3, [r3, #20]
   1e850:	add	r1, r3, #1
   1e854:	ldr	r2, [fp, #-16]
   1e858:	str	r1, [r2, #20]
   1e85c:	mov	r2, #91	; 0x5b
   1e860:	strb	r2, [r3]
   1e864:	ldr	r3, [fp, #-12]
   1e868:	cmp	r3, #0
   1e86c:	beq	1e994 <flatcc_json_printer_int64_vector_field@@Base+0x208>
   1e870:	ldr	r3, [fp, #-16]
   1e874:	ldrb	r3, [r3, #25]
   1e878:	cmp	r3, #0
   1e87c:	beq	1e8a8 <flatcc_json_printer_int64_vector_field@@Base+0x11c>
   1e880:	ldr	r3, [fp, #-16]
   1e884:	ldr	r3, [r3, #20]
   1e888:	add	r1, r3, #1
   1e88c:	ldr	r2, [fp, #-16]
   1e890:	str	r1, [r2, #20]
   1e894:	mov	r2, #10
   1e898:	strb	r2, [r3]
   1e89c:	ldr	r0, [fp, #-16]
   1e8a0:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1e8a4:	b	1e8b0 <flatcc_json_printer_int64_vector_field@@Base+0x124>
   1e8a8:	ldr	r0, [fp, #-16]
   1e8ac:	bl	154c0 <main@@Base+0x728>
   1e8b0:	ldr	r0, [fp, #-8]
   1e8b4:	bl	15124 <main@@Base+0x38c>
   1e8b8:	ldr	r3, [fp, #-16]
   1e8bc:	ldr	r3, [r3, #20]
   1e8c0:	mov	r2, r3
   1e8c4:	bl	16d9c <main@@Base+0x2004>
   1e8c8:	mov	r2, r0
   1e8cc:	ldr	r3, [fp, #-16]
   1e8d0:	ldr	r3, [r3, #20]
   1e8d4:	add	r2, r3, r2
   1e8d8:	ldr	r3, [fp, #-16]
   1e8dc:	str	r2, [r3, #20]
   1e8e0:	ldr	r3, [fp, #-8]
   1e8e4:	add	r3, r3, #8
   1e8e8:	str	r3, [fp, #-8]
   1e8ec:	ldr	r3, [fp, #-12]
   1e8f0:	sub	r3, r3, #1
   1e8f4:	str	r3, [fp, #-12]
   1e8f8:	b	1e994 <flatcc_json_printer_int64_vector_field@@Base+0x208>
   1e8fc:	ldr	r3, [fp, #-16]
   1e900:	ldr	r3, [r3, #20]
   1e904:	add	r1, r3, #1
   1e908:	ldr	r2, [fp, #-16]
   1e90c:	str	r1, [r2, #20]
   1e910:	mov	r2, #44	; 0x2c
   1e914:	strb	r2, [r3]
   1e918:	ldr	r3, [fp, #-16]
   1e91c:	ldrb	r3, [r3, #25]
   1e920:	cmp	r3, #0
   1e924:	beq	1e950 <flatcc_json_printer_int64_vector_field@@Base+0x1c4>
   1e928:	ldr	r3, [fp, #-16]
   1e92c:	ldr	r3, [r3, #20]
   1e930:	add	r1, r3, #1
   1e934:	ldr	r2, [fp, #-16]
   1e938:	str	r1, [r2, #20]
   1e93c:	mov	r2, #10
   1e940:	strb	r2, [r3]
   1e944:	ldr	r0, [fp, #-16]
   1e948:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1e94c:	b	1e958 <flatcc_json_printer_int64_vector_field@@Base+0x1cc>
   1e950:	ldr	r0, [fp, #-16]
   1e954:	bl	154c0 <main@@Base+0x728>
   1e958:	ldr	r0, [fp, #-8]
   1e95c:	bl	15124 <main@@Base+0x38c>
   1e960:	ldr	r3, [fp, #-16]
   1e964:	ldr	r3, [r3, #20]
   1e968:	mov	r2, r3
   1e96c:	bl	16d9c <main@@Base+0x2004>
   1e970:	mov	r2, r0
   1e974:	ldr	r3, [fp, #-16]
   1e978:	ldr	r3, [r3, #20]
   1e97c:	add	r2, r3, r2
   1e980:	ldr	r3, [fp, #-16]
   1e984:	str	r2, [r3, #20]
   1e988:	ldr	r3, [fp, #-8]
   1e98c:	add	r3, r3, #8
   1e990:	str	r3, [fp, #-8]
   1e994:	ldr	r3, [fp, #-12]
   1e998:	sub	r2, r3, #1
   1e99c:	str	r2, [fp, #-12]
   1e9a0:	cmp	r3, #0
   1e9a4:	bne	1e8fc <flatcc_json_printer_int64_vector_field@@Base+0x170>
   1e9a8:	ldr	r3, [fp, #-16]
   1e9ac:	ldrb	r3, [r3, #25]
   1e9b0:	cmp	r3, #0
   1e9b4:	beq	1e9f0 <flatcc_json_printer_int64_vector_field@@Base+0x264>
   1e9b8:	ldr	r3, [fp, #-16]
   1e9bc:	ldr	r3, [r3, #20]
   1e9c0:	add	r1, r3, #1
   1e9c4:	ldr	r2, [fp, #-16]
   1e9c8:	str	r1, [r2, #20]
   1e9cc:	mov	r2, #10
   1e9d0:	strb	r2, [r3]
   1e9d4:	ldr	r3, [fp, #-16]
   1e9d8:	ldr	r3, [r3, #32]
   1e9dc:	sub	r2, r3, #1
   1e9e0:	ldr	r3, [fp, #-16]
   1e9e4:	str	r2, [r3, #32]
   1e9e8:	ldr	r0, [fp, #-16]
   1e9ec:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1e9f0:	ldr	r3, [fp, #-16]
   1e9f4:	ldr	r3, [r3, #20]
   1e9f8:	add	r1, r3, #1
   1e9fc:	ldr	r2, [fp, #-16]
   1ea00:	str	r1, [r2, #20]
   1ea04:	mov	r2, #93	; 0x5d
   1ea08:	strb	r2, [r3]
   1ea0c:	nop			; (mov r0, r0)
   1ea10:	sub	sp, fp, #4
   1ea14:	pop	{fp, pc}

0001ea18 <flatcc_json_printer_bool_vector_field@@Base>:
   1ea18:	push	{fp, lr}
   1ea1c:	add	fp, sp, #4
   1ea20:	sub	sp, sp, #24
   1ea24:	str	r0, [fp, #-16]
   1ea28:	str	r1, [fp, #-20]	; 0xffffffec
   1ea2c:	str	r2, [fp, #-24]	; 0xffffffe8
   1ea30:	str	r3, [fp, #-28]	; 0xffffffe4
   1ea34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ea38:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ea3c:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   1ea40:	str	r0, [fp, #-8]
   1ea44:	ldr	r3, [fp, #-8]
   1ea48:	cmp	r3, #0
   1ea4c:	beq	1ecb0 <flatcc_json_printer_bool_vector_field@@Base+0x298>
   1ea50:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ea54:	ldr	r3, [r3, #16]
   1ea58:	add	r1, r3, #1
   1ea5c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ea60:	str	r1, [r2, #16]
   1ea64:	cmp	r3, #0
   1ea68:	beq	1ea88 <flatcc_json_printer_bool_vector_field@@Base+0x70>
   1ea6c:	ldr	r3, [fp, #-16]
   1ea70:	ldr	r3, [r3, #20]
   1ea74:	add	r1, r3, #1
   1ea78:	ldr	r2, [fp, #-16]
   1ea7c:	str	r1, [r2, #20]
   1ea80:	mov	r2, #44	; 0x2c
   1ea84:	strb	r2, [r3]
   1ea88:	ldr	r0, [fp, #-8]
   1ea8c:	bl	197f8 <flatcc_json_printer_error_string@@Base+0x8c>
   1ea90:	str	r0, [fp, #-8]
   1ea94:	ldr	r0, [fp, #-8]
   1ea98:	bl	152ac <main@@Base+0x514>
   1ea9c:	str	r0, [fp, #-12]
   1eaa0:	ldr	r3, [fp, #-8]
   1eaa4:	add	r3, r3, #4
   1eaa8:	str	r3, [fp, #-8]
   1eaac:	ldr	r3, [fp, #4]
   1eab0:	mov	r2, r3
   1eab4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1eab8:	ldr	r0, [fp, #-16]
   1eabc:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1eac0:	ldr	r3, [fp, #-16]
   1eac4:	ldr	r3, [r3, #32]
   1eac8:	add	r2, r3, #1
   1eacc:	ldr	r3, [fp, #-16]
   1ead0:	str	r2, [r3, #32]
   1ead4:	ldr	r3, [fp, #-16]
   1ead8:	ldr	r3, [r3, #20]
   1eadc:	add	r1, r3, #1
   1eae0:	ldr	r2, [fp, #-16]
   1eae4:	str	r1, [r2, #20]
   1eae8:	mov	r2, #91	; 0x5b
   1eaec:	strb	r2, [r3]
   1eaf0:	ldr	r3, [fp, #-12]
   1eaf4:	cmp	r3, #0
   1eaf8:	beq	1ec38 <flatcc_json_printer_bool_vector_field@@Base+0x220>
   1eafc:	ldr	r3, [fp, #-16]
   1eb00:	ldrb	r3, [r3, #25]
   1eb04:	cmp	r3, #0
   1eb08:	beq	1eb34 <flatcc_json_printer_bool_vector_field@@Base+0x11c>
   1eb0c:	ldr	r3, [fp, #-16]
   1eb10:	ldr	r3, [r3, #20]
   1eb14:	add	r1, r3, #1
   1eb18:	ldr	r2, [fp, #-16]
   1eb1c:	str	r1, [r2, #20]
   1eb20:	mov	r2, #10
   1eb24:	strb	r2, [r3]
   1eb28:	ldr	r0, [fp, #-16]
   1eb2c:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1eb30:	b	1eb3c <flatcc_json_printer_bool_vector_field@@Base+0x124>
   1eb34:	ldr	r0, [fp, #-16]
   1eb38:	bl	154c0 <main@@Base+0x728>
   1eb3c:	ldr	r0, [fp, #-8]
   1eb40:	bl	15258 <main@@Base+0x4c0>
   1eb44:	mov	r3, r0
   1eb48:	mov	r2, r3
   1eb4c:	ldr	r3, [fp, #-16]
   1eb50:	ldr	r3, [r3, #20]
   1eb54:	mov	r1, r3
   1eb58:	mov	r0, r2
   1eb5c:	bl	15508 <main@@Base+0x770>
   1eb60:	mov	r2, r0
   1eb64:	ldr	r3, [fp, #-16]
   1eb68:	ldr	r3, [r3, #20]
   1eb6c:	add	r2, r3, r2
   1eb70:	ldr	r3, [fp, #-16]
   1eb74:	str	r2, [r3, #20]
   1eb78:	ldr	r3, [fp, #-8]
   1eb7c:	add	r3, r3, #1
   1eb80:	str	r3, [fp, #-8]
   1eb84:	ldr	r3, [fp, #-12]
   1eb88:	sub	r3, r3, #1
   1eb8c:	str	r3, [fp, #-12]
   1eb90:	b	1ec38 <flatcc_json_printer_bool_vector_field@@Base+0x220>
   1eb94:	ldr	r3, [fp, #-16]
   1eb98:	ldr	r3, [r3, #20]
   1eb9c:	add	r1, r3, #1
   1eba0:	ldr	r2, [fp, #-16]
   1eba4:	str	r1, [r2, #20]
   1eba8:	mov	r2, #44	; 0x2c
   1ebac:	strb	r2, [r3]
   1ebb0:	ldr	r3, [fp, #-16]
   1ebb4:	ldrb	r3, [r3, #25]
   1ebb8:	cmp	r3, #0
   1ebbc:	beq	1ebe8 <flatcc_json_printer_bool_vector_field@@Base+0x1d0>
   1ebc0:	ldr	r3, [fp, #-16]
   1ebc4:	ldr	r3, [r3, #20]
   1ebc8:	add	r1, r3, #1
   1ebcc:	ldr	r2, [fp, #-16]
   1ebd0:	str	r1, [r2, #20]
   1ebd4:	mov	r2, #10
   1ebd8:	strb	r2, [r3]
   1ebdc:	ldr	r0, [fp, #-16]
   1ebe0:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1ebe4:	b	1ebf0 <flatcc_json_printer_bool_vector_field@@Base+0x1d8>
   1ebe8:	ldr	r0, [fp, #-16]
   1ebec:	bl	154c0 <main@@Base+0x728>
   1ebf0:	ldr	r0, [fp, #-8]
   1ebf4:	bl	15258 <main@@Base+0x4c0>
   1ebf8:	mov	r3, r0
   1ebfc:	mov	r2, r3
   1ec00:	ldr	r3, [fp, #-16]
   1ec04:	ldr	r3, [r3, #20]
   1ec08:	mov	r1, r3
   1ec0c:	mov	r0, r2
   1ec10:	bl	15508 <main@@Base+0x770>
   1ec14:	mov	r2, r0
   1ec18:	ldr	r3, [fp, #-16]
   1ec1c:	ldr	r3, [r3, #20]
   1ec20:	add	r2, r3, r2
   1ec24:	ldr	r3, [fp, #-16]
   1ec28:	str	r2, [r3, #20]
   1ec2c:	ldr	r3, [fp, #-8]
   1ec30:	add	r3, r3, #1
   1ec34:	str	r3, [fp, #-8]
   1ec38:	ldr	r3, [fp, #-12]
   1ec3c:	sub	r2, r3, #1
   1ec40:	str	r2, [fp, #-12]
   1ec44:	cmp	r3, #0
   1ec48:	bne	1eb94 <flatcc_json_printer_bool_vector_field@@Base+0x17c>
   1ec4c:	ldr	r3, [fp, #-16]
   1ec50:	ldrb	r3, [r3, #25]
   1ec54:	cmp	r3, #0
   1ec58:	beq	1ec94 <flatcc_json_printer_bool_vector_field@@Base+0x27c>
   1ec5c:	ldr	r3, [fp, #-16]
   1ec60:	ldr	r3, [r3, #20]
   1ec64:	add	r1, r3, #1
   1ec68:	ldr	r2, [fp, #-16]
   1ec6c:	str	r1, [r2, #20]
   1ec70:	mov	r2, #10
   1ec74:	strb	r2, [r3]
   1ec78:	ldr	r3, [fp, #-16]
   1ec7c:	ldr	r3, [r3, #32]
   1ec80:	sub	r2, r3, #1
   1ec84:	ldr	r3, [fp, #-16]
   1ec88:	str	r2, [r3, #32]
   1ec8c:	ldr	r0, [fp, #-16]
   1ec90:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1ec94:	ldr	r3, [fp, #-16]
   1ec98:	ldr	r3, [r3, #20]
   1ec9c:	add	r1, r3, #1
   1eca0:	ldr	r2, [fp, #-16]
   1eca4:	str	r1, [r2, #20]
   1eca8:	mov	r2, #93	; 0x5d
   1ecac:	strb	r2, [r3]
   1ecb0:	nop			; (mov r0, r0)
   1ecb4:	sub	sp, fp, #4
   1ecb8:	pop	{fp, pc}

0001ecbc <flatcc_json_printer_float_vector_field@@Base>:
   1ecbc:	push	{fp, lr}
   1ecc0:	add	fp, sp, #4
   1ecc4:	sub	sp, sp, #24
   1ecc8:	str	r0, [fp, #-16]
   1eccc:	str	r1, [fp, #-20]	; 0xffffffec
   1ecd0:	str	r2, [fp, #-24]	; 0xffffffe8
   1ecd4:	str	r3, [fp, #-28]	; 0xffffffe4
   1ecd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ecdc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ece0:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   1ece4:	str	r0, [fp, #-8]
   1ece8:	ldr	r3, [fp, #-8]
   1ecec:	cmp	r3, #0
   1ecf0:	beq	1ef54 <flatcc_json_printer_float_vector_field@@Base+0x298>
   1ecf4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ecf8:	ldr	r3, [r3, #16]
   1ecfc:	add	r1, r3, #1
   1ed00:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ed04:	str	r1, [r2, #16]
   1ed08:	cmp	r3, #0
   1ed0c:	beq	1ed2c <flatcc_json_printer_float_vector_field@@Base+0x70>
   1ed10:	ldr	r3, [fp, #-16]
   1ed14:	ldr	r3, [r3, #20]
   1ed18:	add	r1, r3, #1
   1ed1c:	ldr	r2, [fp, #-16]
   1ed20:	str	r1, [r2, #20]
   1ed24:	mov	r2, #44	; 0x2c
   1ed28:	strb	r2, [r3]
   1ed2c:	ldr	r0, [fp, #-8]
   1ed30:	bl	197f8 <flatcc_json_printer_error_string@@Base+0x8c>
   1ed34:	str	r0, [fp, #-8]
   1ed38:	ldr	r0, [fp, #-8]
   1ed3c:	bl	152ac <main@@Base+0x514>
   1ed40:	str	r0, [fp, #-12]
   1ed44:	ldr	r3, [fp, #-8]
   1ed48:	add	r3, r3, #4
   1ed4c:	str	r3, [fp, #-8]
   1ed50:	ldr	r3, [fp, #4]
   1ed54:	mov	r2, r3
   1ed58:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ed5c:	ldr	r0, [fp, #-16]
   1ed60:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1ed64:	ldr	r3, [fp, #-16]
   1ed68:	ldr	r3, [r3, #32]
   1ed6c:	add	r2, r3, #1
   1ed70:	ldr	r3, [fp, #-16]
   1ed74:	str	r2, [r3, #32]
   1ed78:	ldr	r3, [fp, #-16]
   1ed7c:	ldr	r3, [r3, #20]
   1ed80:	add	r1, r3, #1
   1ed84:	ldr	r2, [fp, #-16]
   1ed88:	str	r1, [r2, #20]
   1ed8c:	mov	r2, #91	; 0x5b
   1ed90:	strb	r2, [r3]
   1ed94:	ldr	r3, [fp, #-12]
   1ed98:	cmp	r3, #0
   1ed9c:	beq	1eedc <flatcc_json_printer_float_vector_field@@Base+0x220>
   1eda0:	ldr	r3, [fp, #-16]
   1eda4:	ldrb	r3, [r3, #25]
   1eda8:	cmp	r3, #0
   1edac:	beq	1edd8 <flatcc_json_printer_float_vector_field@@Base+0x11c>
   1edb0:	ldr	r3, [fp, #-16]
   1edb4:	ldr	r3, [r3, #20]
   1edb8:	add	r1, r3, #1
   1edbc:	ldr	r2, [fp, #-16]
   1edc0:	str	r1, [r2, #20]
   1edc4:	mov	r2, #10
   1edc8:	strb	r2, [r3]
   1edcc:	ldr	r0, [fp, #-16]
   1edd0:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1edd4:	b	1ede0 <flatcc_json_printer_float_vector_field@@Base+0x124>
   1edd8:	ldr	r0, [fp, #-16]
   1eddc:	bl	154c0 <main@@Base+0x728>
   1ede0:	ldr	r0, [fp, #-8]
   1ede4:	bl	15198 <main@@Base+0x400>
   1ede8:	vmov.f32	s15, s0
   1edec:	vcvt.f64.f32	d7, s15
   1edf0:	ldr	r3, [fp, #-16]
   1edf4:	ldr	r3, [r3, #20]
   1edf8:	mov	r0, r3
   1edfc:	vmov.f64	d0, d7
   1ee00:	bl	186f0 <main@@Base+0x3958>
   1ee04:	mov	r2, r0
   1ee08:	ldr	r3, [fp, #-16]
   1ee0c:	ldr	r3, [r3, #20]
   1ee10:	add	r2, r3, r2
   1ee14:	ldr	r3, [fp, #-16]
   1ee18:	str	r2, [r3, #20]
   1ee1c:	ldr	r3, [fp, #-8]
   1ee20:	add	r3, r3, #4
   1ee24:	str	r3, [fp, #-8]
   1ee28:	ldr	r3, [fp, #-12]
   1ee2c:	sub	r3, r3, #1
   1ee30:	str	r3, [fp, #-12]
   1ee34:	b	1eedc <flatcc_json_printer_float_vector_field@@Base+0x220>
   1ee38:	ldr	r3, [fp, #-16]
   1ee3c:	ldr	r3, [r3, #20]
   1ee40:	add	r1, r3, #1
   1ee44:	ldr	r2, [fp, #-16]
   1ee48:	str	r1, [r2, #20]
   1ee4c:	mov	r2, #44	; 0x2c
   1ee50:	strb	r2, [r3]
   1ee54:	ldr	r3, [fp, #-16]
   1ee58:	ldrb	r3, [r3, #25]
   1ee5c:	cmp	r3, #0
   1ee60:	beq	1ee8c <flatcc_json_printer_float_vector_field@@Base+0x1d0>
   1ee64:	ldr	r3, [fp, #-16]
   1ee68:	ldr	r3, [r3, #20]
   1ee6c:	add	r1, r3, #1
   1ee70:	ldr	r2, [fp, #-16]
   1ee74:	str	r1, [r2, #20]
   1ee78:	mov	r2, #10
   1ee7c:	strb	r2, [r3]
   1ee80:	ldr	r0, [fp, #-16]
   1ee84:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1ee88:	b	1ee94 <flatcc_json_printer_float_vector_field@@Base+0x1d8>
   1ee8c:	ldr	r0, [fp, #-16]
   1ee90:	bl	154c0 <main@@Base+0x728>
   1ee94:	ldr	r0, [fp, #-8]
   1ee98:	bl	15198 <main@@Base+0x400>
   1ee9c:	vmov.f32	s15, s0
   1eea0:	vcvt.f64.f32	d7, s15
   1eea4:	ldr	r3, [fp, #-16]
   1eea8:	ldr	r3, [r3, #20]
   1eeac:	mov	r0, r3
   1eeb0:	vmov.f64	d0, d7
   1eeb4:	bl	186f0 <main@@Base+0x3958>
   1eeb8:	mov	r2, r0
   1eebc:	ldr	r3, [fp, #-16]
   1eec0:	ldr	r3, [r3, #20]
   1eec4:	add	r2, r3, r2
   1eec8:	ldr	r3, [fp, #-16]
   1eecc:	str	r2, [r3, #20]
   1eed0:	ldr	r3, [fp, #-8]
   1eed4:	add	r3, r3, #4
   1eed8:	str	r3, [fp, #-8]
   1eedc:	ldr	r3, [fp, #-12]
   1eee0:	sub	r2, r3, #1
   1eee4:	str	r2, [fp, #-12]
   1eee8:	cmp	r3, #0
   1eeec:	bne	1ee38 <flatcc_json_printer_float_vector_field@@Base+0x17c>
   1eef0:	ldr	r3, [fp, #-16]
   1eef4:	ldrb	r3, [r3, #25]
   1eef8:	cmp	r3, #0
   1eefc:	beq	1ef38 <flatcc_json_printer_float_vector_field@@Base+0x27c>
   1ef00:	ldr	r3, [fp, #-16]
   1ef04:	ldr	r3, [r3, #20]
   1ef08:	add	r1, r3, #1
   1ef0c:	ldr	r2, [fp, #-16]
   1ef10:	str	r1, [r2, #20]
   1ef14:	mov	r2, #10
   1ef18:	strb	r2, [r3]
   1ef1c:	ldr	r3, [fp, #-16]
   1ef20:	ldr	r3, [r3, #32]
   1ef24:	sub	r2, r3, #1
   1ef28:	ldr	r3, [fp, #-16]
   1ef2c:	str	r2, [r3, #32]
   1ef30:	ldr	r0, [fp, #-16]
   1ef34:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1ef38:	ldr	r3, [fp, #-16]
   1ef3c:	ldr	r3, [r3, #20]
   1ef40:	add	r1, r3, #1
   1ef44:	ldr	r2, [fp, #-16]
   1ef48:	str	r1, [r2, #20]
   1ef4c:	mov	r2, #93	; 0x5d
   1ef50:	strb	r2, [r3]
   1ef54:	nop			; (mov r0, r0)
   1ef58:	sub	sp, fp, #4
   1ef5c:	pop	{fp, pc}

0001ef60 <flatcc_json_printer_double_vector_field@@Base>:
   1ef60:	push	{fp, lr}
   1ef64:	add	fp, sp, #4
   1ef68:	sub	sp, sp, #24
   1ef6c:	str	r0, [fp, #-16]
   1ef70:	str	r1, [fp, #-20]	; 0xffffffec
   1ef74:	str	r2, [fp, #-24]	; 0xffffffe8
   1ef78:	str	r3, [fp, #-28]	; 0xffffffe4
   1ef7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ef80:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ef84:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   1ef88:	str	r0, [fp, #-8]
   1ef8c:	ldr	r3, [fp, #-8]
   1ef90:	cmp	r3, #0
   1ef94:	beq	1f1f0 <flatcc_json_printer_double_vector_field@@Base+0x290>
   1ef98:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ef9c:	ldr	r3, [r3, #16]
   1efa0:	add	r1, r3, #1
   1efa4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1efa8:	str	r1, [r2, #16]
   1efac:	cmp	r3, #0
   1efb0:	beq	1efd0 <flatcc_json_printer_double_vector_field@@Base+0x70>
   1efb4:	ldr	r3, [fp, #-16]
   1efb8:	ldr	r3, [r3, #20]
   1efbc:	add	r1, r3, #1
   1efc0:	ldr	r2, [fp, #-16]
   1efc4:	str	r1, [r2, #20]
   1efc8:	mov	r2, #44	; 0x2c
   1efcc:	strb	r2, [r3]
   1efd0:	ldr	r0, [fp, #-8]
   1efd4:	bl	197f8 <flatcc_json_printer_error_string@@Base+0x8c>
   1efd8:	str	r0, [fp, #-8]
   1efdc:	ldr	r0, [fp, #-8]
   1efe0:	bl	152ac <main@@Base+0x514>
   1efe4:	str	r0, [fp, #-12]
   1efe8:	ldr	r3, [fp, #-8]
   1efec:	add	r3, r3, #4
   1eff0:	str	r3, [fp, #-8]
   1eff4:	ldr	r3, [fp, #4]
   1eff8:	mov	r2, r3
   1effc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f000:	ldr	r0, [fp, #-16]
   1f004:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1f008:	ldr	r3, [fp, #-16]
   1f00c:	ldr	r3, [r3, #32]
   1f010:	add	r2, r3, #1
   1f014:	ldr	r3, [fp, #-16]
   1f018:	str	r2, [r3, #32]
   1f01c:	ldr	r3, [fp, #-16]
   1f020:	ldr	r3, [r3, #20]
   1f024:	add	r1, r3, #1
   1f028:	ldr	r2, [fp, #-16]
   1f02c:	str	r1, [r2, #20]
   1f030:	mov	r2, #91	; 0x5b
   1f034:	strb	r2, [r3]
   1f038:	ldr	r3, [fp, #-12]
   1f03c:	cmp	r3, #0
   1f040:	beq	1f178 <flatcc_json_printer_double_vector_field@@Base+0x218>
   1f044:	ldr	r3, [fp, #-16]
   1f048:	ldrb	r3, [r3, #25]
   1f04c:	cmp	r3, #0
   1f050:	beq	1f07c <flatcc_json_printer_double_vector_field@@Base+0x11c>
   1f054:	ldr	r3, [fp, #-16]
   1f058:	ldr	r3, [r3, #20]
   1f05c:	add	r1, r3, #1
   1f060:	ldr	r2, [fp, #-16]
   1f064:	str	r1, [r2, #20]
   1f068:	mov	r2, #10
   1f06c:	strb	r2, [r3]
   1f070:	ldr	r0, [fp, #-16]
   1f074:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1f078:	b	1f084 <flatcc_json_printer_double_vector_field@@Base+0x124>
   1f07c:	ldr	r0, [fp, #-16]
   1f080:	bl	154c0 <main@@Base+0x728>
   1f084:	ldr	r0, [fp, #-8]
   1f088:	bl	15200 <main@@Base+0x468>
   1f08c:	vmov.f64	d7, d0
   1f090:	ldr	r3, [fp, #-16]
   1f094:	ldr	r3, [r3, #20]
   1f098:	mov	r0, r3
   1f09c:	vmov.f64	d0, d7
   1f0a0:	bl	186f0 <main@@Base+0x3958>
   1f0a4:	mov	r2, r0
   1f0a8:	ldr	r3, [fp, #-16]
   1f0ac:	ldr	r3, [r3, #20]
   1f0b0:	add	r2, r3, r2
   1f0b4:	ldr	r3, [fp, #-16]
   1f0b8:	str	r2, [r3, #20]
   1f0bc:	ldr	r3, [fp, #-8]
   1f0c0:	add	r3, r3, #8
   1f0c4:	str	r3, [fp, #-8]
   1f0c8:	ldr	r3, [fp, #-12]
   1f0cc:	sub	r3, r3, #1
   1f0d0:	str	r3, [fp, #-12]
   1f0d4:	b	1f178 <flatcc_json_printer_double_vector_field@@Base+0x218>
   1f0d8:	ldr	r3, [fp, #-16]
   1f0dc:	ldr	r3, [r3, #20]
   1f0e0:	add	r1, r3, #1
   1f0e4:	ldr	r2, [fp, #-16]
   1f0e8:	str	r1, [r2, #20]
   1f0ec:	mov	r2, #44	; 0x2c
   1f0f0:	strb	r2, [r3]
   1f0f4:	ldr	r3, [fp, #-16]
   1f0f8:	ldrb	r3, [r3, #25]
   1f0fc:	cmp	r3, #0
   1f100:	beq	1f12c <flatcc_json_printer_double_vector_field@@Base+0x1cc>
   1f104:	ldr	r3, [fp, #-16]
   1f108:	ldr	r3, [r3, #20]
   1f10c:	add	r1, r3, #1
   1f110:	ldr	r2, [fp, #-16]
   1f114:	str	r1, [r2, #20]
   1f118:	mov	r2, #10
   1f11c:	strb	r2, [r3]
   1f120:	ldr	r0, [fp, #-16]
   1f124:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1f128:	b	1f134 <flatcc_json_printer_double_vector_field@@Base+0x1d4>
   1f12c:	ldr	r0, [fp, #-16]
   1f130:	bl	154c0 <main@@Base+0x728>
   1f134:	ldr	r0, [fp, #-8]
   1f138:	bl	15200 <main@@Base+0x468>
   1f13c:	vmov.f64	d7, d0
   1f140:	ldr	r3, [fp, #-16]
   1f144:	ldr	r3, [r3, #20]
   1f148:	mov	r0, r3
   1f14c:	vmov.f64	d0, d7
   1f150:	bl	186f0 <main@@Base+0x3958>
   1f154:	mov	r2, r0
   1f158:	ldr	r3, [fp, #-16]
   1f15c:	ldr	r3, [r3, #20]
   1f160:	add	r2, r3, r2
   1f164:	ldr	r3, [fp, #-16]
   1f168:	str	r2, [r3, #20]
   1f16c:	ldr	r3, [fp, #-8]
   1f170:	add	r3, r3, #8
   1f174:	str	r3, [fp, #-8]
   1f178:	ldr	r3, [fp, #-12]
   1f17c:	sub	r2, r3, #1
   1f180:	str	r2, [fp, #-12]
   1f184:	cmp	r3, #0
   1f188:	bne	1f0d8 <flatcc_json_printer_double_vector_field@@Base+0x178>
   1f18c:	ldr	r3, [fp, #-16]
   1f190:	ldrb	r3, [r3, #25]
   1f194:	cmp	r3, #0
   1f198:	beq	1f1d4 <flatcc_json_printer_double_vector_field@@Base+0x274>
   1f19c:	ldr	r3, [fp, #-16]
   1f1a0:	ldr	r3, [r3, #20]
   1f1a4:	add	r1, r3, #1
   1f1a8:	ldr	r2, [fp, #-16]
   1f1ac:	str	r1, [r2, #20]
   1f1b0:	mov	r2, #10
   1f1b4:	strb	r2, [r3]
   1f1b8:	ldr	r3, [fp, #-16]
   1f1bc:	ldr	r3, [r3, #32]
   1f1c0:	sub	r2, r3, #1
   1f1c4:	ldr	r3, [fp, #-16]
   1f1c8:	str	r2, [r3, #32]
   1f1cc:	ldr	r0, [fp, #-16]
   1f1d0:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1f1d4:	ldr	r3, [fp, #-16]
   1f1d8:	ldr	r3, [r3, #20]
   1f1dc:	add	r1, r3, #1
   1f1e0:	ldr	r2, [fp, #-16]
   1f1e4:	str	r1, [r2, #20]
   1f1e8:	mov	r2, #93	; 0x5d
   1f1ec:	strb	r2, [r3]
   1f1f0:	nop			; (mov r0, r0)
   1f1f4:	sub	sp, fp, #4
   1f1f8:	pop	{fp, pc}

0001f1fc <flatcc_json_printer_utype_enum_vector_field@@Base>:
   1f1fc:	push	{fp, lr}
   1f200:	add	fp, sp, #4
   1f204:	sub	sp, sp, #32
   1f208:	str	r0, [fp, #-16]
   1f20c:	str	r1, [fp, #-20]	; 0xffffffec
   1f210:	str	r2, [fp, #-24]	; 0xffffffe8
   1f214:	str	r3, [fp, #-28]	; 0xffffffe4
   1f218:	ldr	r3, [fp, #-16]
   1f21c:	ldrb	r3, [r3, #27]
   1f220:	cmp	r3, #0
   1f224:	beq	1f248 <flatcc_json_printer_utype_enum_vector_field@@Base+0x4c>
   1f228:	ldr	r3, [fp, #4]
   1f22c:	str	r3, [sp]
   1f230:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f234:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f238:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f23c:	ldr	r0, [fp, #-16]
   1f240:	bl	1d294 <flatcc_json_printer_utype_vector_field@@Base>
   1f244:	b	1f48c <flatcc_json_printer_utype_enum_vector_field@@Base+0x290>
   1f248:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f24c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f250:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   1f254:	str	r0, [fp, #-8]
   1f258:	ldr	r3, [fp, #-8]
   1f25c:	cmp	r3, #0
   1f260:	beq	1f48c <flatcc_json_printer_utype_enum_vector_field@@Base+0x290>
   1f264:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f268:	ldr	r3, [r3, #16]
   1f26c:	add	r1, r3, #1
   1f270:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f274:	str	r1, [r2, #16]
   1f278:	cmp	r3, #0
   1f27c:	beq	1f29c <flatcc_json_printer_utype_enum_vector_field@@Base+0xa0>
   1f280:	ldr	r3, [fp, #-16]
   1f284:	ldr	r3, [r3, #20]
   1f288:	add	r1, r3, #1
   1f28c:	ldr	r2, [fp, #-16]
   1f290:	str	r1, [r2, #20]
   1f294:	mov	r2, #44	; 0x2c
   1f298:	strb	r2, [r3]
   1f29c:	ldr	r0, [fp, #-8]
   1f2a0:	bl	197f8 <flatcc_json_printer_error_string@@Base+0x8c>
   1f2a4:	str	r0, [fp, #-8]
   1f2a8:	ldr	r0, [fp, #-8]
   1f2ac:	bl	152ac <main@@Base+0x514>
   1f2b0:	str	r0, [fp, #-12]
   1f2b4:	ldr	r3, [fp, #-8]
   1f2b8:	add	r3, r3, #4
   1f2bc:	str	r3, [fp, #-8]
   1f2c0:	ldr	r3, [fp, #4]
   1f2c4:	mov	r2, r3
   1f2c8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f2cc:	ldr	r0, [fp, #-16]
   1f2d0:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1f2d4:	ldr	r3, [fp, #-16]
   1f2d8:	ldr	r3, [r3, #32]
   1f2dc:	add	r2, r3, #1
   1f2e0:	ldr	r3, [fp, #-16]
   1f2e4:	str	r2, [r3, #32]
   1f2e8:	ldr	r3, [fp, #-16]
   1f2ec:	ldr	r3, [r3, #20]
   1f2f0:	add	r1, r3, #1
   1f2f4:	ldr	r2, [fp, #-16]
   1f2f8:	str	r1, [r2, #20]
   1f2fc:	mov	r2, #91	; 0x5b
   1f300:	strb	r2, [r3]
   1f304:	ldr	r3, [fp, #-12]
   1f308:	cmp	r3, #0
   1f30c:	beq	1f414 <flatcc_json_printer_utype_enum_vector_field@@Base+0x218>
   1f310:	ldr	r3, [fp, #-16]
   1f314:	ldrb	r3, [r3, #25]
   1f318:	cmp	r3, #0
   1f31c:	beq	1f348 <flatcc_json_printer_utype_enum_vector_field@@Base+0x14c>
   1f320:	ldr	r3, [fp, #-16]
   1f324:	ldr	r3, [r3, #20]
   1f328:	add	r1, r3, #1
   1f32c:	ldr	r2, [fp, #-16]
   1f330:	str	r1, [r2, #20]
   1f334:	mov	r2, #10
   1f338:	strb	r2, [r3]
   1f33c:	ldr	r0, [fp, #-16]
   1f340:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1f344:	b	1f350 <flatcc_json_printer_utype_enum_vector_field@@Base+0x154>
   1f348:	ldr	r0, [fp, #-16]
   1f34c:	bl	154c0 <main@@Base+0x728>
   1f350:	ldr	r0, [fp, #-8]
   1f354:	bl	153b0 <main@@Base+0x618>
   1f358:	mov	r3, r0
   1f35c:	mov	r2, r3
   1f360:	ldr	r3, [fp, #8]
   1f364:	mov	r1, r2
   1f368:	ldr	r0, [fp, #-16]
   1f36c:	blx	r3
   1f370:	ldr	r3, [fp, #-8]
   1f374:	add	r3, r3, #1
   1f378:	str	r3, [fp, #-8]
   1f37c:	ldr	r3, [fp, #-12]
   1f380:	sub	r3, r3, #1
   1f384:	str	r3, [fp, #-12]
   1f388:	b	1f414 <flatcc_json_printer_utype_enum_vector_field@@Base+0x218>
   1f38c:	ldr	r3, [fp, #-16]
   1f390:	ldr	r3, [r3, #20]
   1f394:	add	r1, r3, #1
   1f398:	ldr	r2, [fp, #-16]
   1f39c:	str	r1, [r2, #20]
   1f3a0:	mov	r2, #44	; 0x2c
   1f3a4:	strb	r2, [r3]
   1f3a8:	ldr	r3, [fp, #-16]
   1f3ac:	ldrb	r3, [r3, #25]
   1f3b0:	cmp	r3, #0
   1f3b4:	beq	1f3e0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1e4>
   1f3b8:	ldr	r3, [fp, #-16]
   1f3bc:	ldr	r3, [r3, #20]
   1f3c0:	add	r1, r3, #1
   1f3c4:	ldr	r2, [fp, #-16]
   1f3c8:	str	r1, [r2, #20]
   1f3cc:	mov	r2, #10
   1f3d0:	strb	r2, [r3]
   1f3d4:	ldr	r0, [fp, #-16]
   1f3d8:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1f3dc:	b	1f3e8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1ec>
   1f3e0:	ldr	r0, [fp, #-16]
   1f3e4:	bl	154c0 <main@@Base+0x728>
   1f3e8:	ldr	r0, [fp, #-8]
   1f3ec:	bl	153b0 <main@@Base+0x618>
   1f3f0:	mov	r3, r0
   1f3f4:	mov	r2, r3
   1f3f8:	ldr	r3, [fp, #8]
   1f3fc:	mov	r1, r2
   1f400:	ldr	r0, [fp, #-16]
   1f404:	blx	r3
   1f408:	ldr	r3, [fp, #-8]
   1f40c:	add	r3, r3, #1
   1f410:	str	r3, [fp, #-8]
   1f414:	ldr	r3, [fp, #-12]
   1f418:	sub	r2, r3, #1
   1f41c:	str	r2, [fp, #-12]
   1f420:	cmp	r3, #0
   1f424:	bne	1f38c <flatcc_json_printer_utype_enum_vector_field@@Base+0x190>
   1f428:	ldr	r3, [fp, #-16]
   1f42c:	ldrb	r3, [r3, #25]
   1f430:	cmp	r3, #0
   1f434:	beq	1f470 <flatcc_json_printer_utype_enum_vector_field@@Base+0x274>
   1f438:	ldr	r3, [fp, #-16]
   1f43c:	ldr	r3, [r3, #20]
   1f440:	add	r1, r3, #1
   1f444:	ldr	r2, [fp, #-16]
   1f448:	str	r1, [r2, #20]
   1f44c:	mov	r2, #10
   1f450:	strb	r2, [r3]
   1f454:	ldr	r3, [fp, #-16]
   1f458:	ldr	r3, [r3, #32]
   1f45c:	sub	r2, r3, #1
   1f460:	ldr	r3, [fp, #-16]
   1f464:	str	r2, [r3, #32]
   1f468:	ldr	r0, [fp, #-16]
   1f46c:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1f470:	ldr	r3, [fp, #-16]
   1f474:	ldr	r3, [r3, #20]
   1f478:	add	r1, r3, #1
   1f47c:	ldr	r2, [fp, #-16]
   1f480:	str	r1, [r2, #20]
   1f484:	mov	r2, #93	; 0x5d
   1f488:	strb	r2, [r3]
   1f48c:	sub	sp, fp, #4
   1f490:	pop	{fp, pc}

0001f494 <flatcc_json_printer_uint8_enum_vector_field@@Base>:
   1f494:	push	{fp, lr}
   1f498:	add	fp, sp, #4
   1f49c:	sub	sp, sp, #32
   1f4a0:	str	r0, [fp, #-16]
   1f4a4:	str	r1, [fp, #-20]	; 0xffffffec
   1f4a8:	str	r2, [fp, #-24]	; 0xffffffe8
   1f4ac:	str	r3, [fp, #-28]	; 0xffffffe4
   1f4b0:	ldr	r3, [fp, #-16]
   1f4b4:	ldrb	r3, [r3, #27]
   1f4b8:	cmp	r3, #0
   1f4bc:	beq	1f4e0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x4c>
   1f4c0:	ldr	r3, [fp, #4]
   1f4c4:	str	r3, [sp]
   1f4c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f4cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f4d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f4d4:	ldr	r0, [fp, #-16]
   1f4d8:	bl	1d538 <flatcc_json_printer_uint8_vector_field@@Base>
   1f4dc:	b	1f724 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x290>
   1f4e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f4e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f4e8:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   1f4ec:	str	r0, [fp, #-8]
   1f4f0:	ldr	r3, [fp, #-8]
   1f4f4:	cmp	r3, #0
   1f4f8:	beq	1f724 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x290>
   1f4fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f500:	ldr	r3, [r3, #16]
   1f504:	add	r1, r3, #1
   1f508:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f50c:	str	r1, [r2, #16]
   1f510:	cmp	r3, #0
   1f514:	beq	1f534 <flatcc_json_printer_uint8_enum_vector_field@@Base+0xa0>
   1f518:	ldr	r3, [fp, #-16]
   1f51c:	ldr	r3, [r3, #20]
   1f520:	add	r1, r3, #1
   1f524:	ldr	r2, [fp, #-16]
   1f528:	str	r1, [r2, #20]
   1f52c:	mov	r2, #44	; 0x2c
   1f530:	strb	r2, [r3]
   1f534:	ldr	r0, [fp, #-8]
   1f538:	bl	197f8 <flatcc_json_printer_error_string@@Base+0x8c>
   1f53c:	str	r0, [fp, #-8]
   1f540:	ldr	r0, [fp, #-8]
   1f544:	bl	152ac <main@@Base+0x514>
   1f548:	str	r0, [fp, #-12]
   1f54c:	ldr	r3, [fp, #-8]
   1f550:	add	r3, r3, #4
   1f554:	str	r3, [fp, #-8]
   1f558:	ldr	r3, [fp, #4]
   1f55c:	mov	r2, r3
   1f560:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f564:	ldr	r0, [fp, #-16]
   1f568:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1f56c:	ldr	r3, [fp, #-16]
   1f570:	ldr	r3, [r3, #32]
   1f574:	add	r2, r3, #1
   1f578:	ldr	r3, [fp, #-16]
   1f57c:	str	r2, [r3, #32]
   1f580:	ldr	r3, [fp, #-16]
   1f584:	ldr	r3, [r3, #20]
   1f588:	add	r1, r3, #1
   1f58c:	ldr	r2, [fp, #-16]
   1f590:	str	r1, [r2, #20]
   1f594:	mov	r2, #91	; 0x5b
   1f598:	strb	r2, [r3]
   1f59c:	ldr	r3, [fp, #-12]
   1f5a0:	cmp	r3, #0
   1f5a4:	beq	1f6ac <flatcc_json_printer_uint8_enum_vector_field@@Base+0x218>
   1f5a8:	ldr	r3, [fp, #-16]
   1f5ac:	ldrb	r3, [r3, #25]
   1f5b0:	cmp	r3, #0
   1f5b4:	beq	1f5e0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x14c>
   1f5b8:	ldr	r3, [fp, #-16]
   1f5bc:	ldr	r3, [r3, #20]
   1f5c0:	add	r1, r3, #1
   1f5c4:	ldr	r2, [fp, #-16]
   1f5c8:	str	r1, [r2, #20]
   1f5cc:	mov	r2, #10
   1f5d0:	strb	r2, [r3]
   1f5d4:	ldr	r0, [fp, #-16]
   1f5d8:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1f5dc:	b	1f5e8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x154>
   1f5e0:	ldr	r0, [fp, #-16]
   1f5e4:	bl	154c0 <main@@Base+0x728>
   1f5e8:	ldr	r0, [fp, #-8]
   1f5ec:	bl	14eb8 <main@@Base+0x120>
   1f5f0:	mov	r3, r0
   1f5f4:	mov	r2, r3
   1f5f8:	ldr	r3, [fp, #8]
   1f5fc:	mov	r1, r2
   1f600:	ldr	r0, [fp, #-16]
   1f604:	blx	r3
   1f608:	ldr	r3, [fp, #-8]
   1f60c:	add	r3, r3, #1
   1f610:	str	r3, [fp, #-8]
   1f614:	ldr	r3, [fp, #-12]
   1f618:	sub	r3, r3, #1
   1f61c:	str	r3, [fp, #-12]
   1f620:	b	1f6ac <flatcc_json_printer_uint8_enum_vector_field@@Base+0x218>
   1f624:	ldr	r3, [fp, #-16]
   1f628:	ldr	r3, [r3, #20]
   1f62c:	add	r1, r3, #1
   1f630:	ldr	r2, [fp, #-16]
   1f634:	str	r1, [r2, #20]
   1f638:	mov	r2, #44	; 0x2c
   1f63c:	strb	r2, [r3]
   1f640:	ldr	r3, [fp, #-16]
   1f644:	ldrb	r3, [r3, #25]
   1f648:	cmp	r3, #0
   1f64c:	beq	1f678 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1e4>
   1f650:	ldr	r3, [fp, #-16]
   1f654:	ldr	r3, [r3, #20]
   1f658:	add	r1, r3, #1
   1f65c:	ldr	r2, [fp, #-16]
   1f660:	str	r1, [r2, #20]
   1f664:	mov	r2, #10
   1f668:	strb	r2, [r3]
   1f66c:	ldr	r0, [fp, #-16]
   1f670:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1f674:	b	1f680 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1ec>
   1f678:	ldr	r0, [fp, #-16]
   1f67c:	bl	154c0 <main@@Base+0x728>
   1f680:	ldr	r0, [fp, #-8]
   1f684:	bl	14eb8 <main@@Base+0x120>
   1f688:	mov	r3, r0
   1f68c:	mov	r2, r3
   1f690:	ldr	r3, [fp, #8]
   1f694:	mov	r1, r2
   1f698:	ldr	r0, [fp, #-16]
   1f69c:	blx	r3
   1f6a0:	ldr	r3, [fp, #-8]
   1f6a4:	add	r3, r3, #1
   1f6a8:	str	r3, [fp, #-8]
   1f6ac:	ldr	r3, [fp, #-12]
   1f6b0:	sub	r2, r3, #1
   1f6b4:	str	r2, [fp, #-12]
   1f6b8:	cmp	r3, #0
   1f6bc:	bne	1f624 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x190>
   1f6c0:	ldr	r3, [fp, #-16]
   1f6c4:	ldrb	r3, [r3, #25]
   1f6c8:	cmp	r3, #0
   1f6cc:	beq	1f708 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x274>
   1f6d0:	ldr	r3, [fp, #-16]
   1f6d4:	ldr	r3, [r3, #20]
   1f6d8:	add	r1, r3, #1
   1f6dc:	ldr	r2, [fp, #-16]
   1f6e0:	str	r1, [r2, #20]
   1f6e4:	mov	r2, #10
   1f6e8:	strb	r2, [r3]
   1f6ec:	ldr	r3, [fp, #-16]
   1f6f0:	ldr	r3, [r3, #32]
   1f6f4:	sub	r2, r3, #1
   1f6f8:	ldr	r3, [fp, #-16]
   1f6fc:	str	r2, [r3, #32]
   1f700:	ldr	r0, [fp, #-16]
   1f704:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1f708:	ldr	r3, [fp, #-16]
   1f70c:	ldr	r3, [r3, #20]
   1f710:	add	r1, r3, #1
   1f714:	ldr	r2, [fp, #-16]
   1f718:	str	r1, [r2, #20]
   1f71c:	mov	r2, #93	; 0x5d
   1f720:	strb	r2, [r3]
   1f724:	sub	sp, fp, #4
   1f728:	pop	{fp, pc}

0001f72c <flatcc_json_printer_uint16_enum_vector_field@@Base>:
   1f72c:	push	{fp, lr}
   1f730:	add	fp, sp, #4
   1f734:	sub	sp, sp, #32
   1f738:	str	r0, [fp, #-16]
   1f73c:	str	r1, [fp, #-20]	; 0xffffffec
   1f740:	str	r2, [fp, #-24]	; 0xffffffe8
   1f744:	str	r3, [fp, #-28]	; 0xffffffe4
   1f748:	ldr	r3, [fp, #-16]
   1f74c:	ldrb	r3, [r3, #27]
   1f750:	cmp	r3, #0
   1f754:	beq	1f778 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x4c>
   1f758:	ldr	r3, [fp, #4]
   1f75c:	str	r3, [sp]
   1f760:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f764:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f768:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f76c:	ldr	r0, [fp, #-16]
   1f770:	bl	1d7dc <flatcc_json_printer_uint16_vector_field@@Base>
   1f774:	b	1f9bc <flatcc_json_printer_uint16_enum_vector_field@@Base+0x290>
   1f778:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f77c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f780:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   1f784:	str	r0, [fp, #-8]
   1f788:	ldr	r3, [fp, #-8]
   1f78c:	cmp	r3, #0
   1f790:	beq	1f9bc <flatcc_json_printer_uint16_enum_vector_field@@Base+0x290>
   1f794:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f798:	ldr	r3, [r3, #16]
   1f79c:	add	r1, r3, #1
   1f7a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f7a4:	str	r1, [r2, #16]
   1f7a8:	cmp	r3, #0
   1f7ac:	beq	1f7cc <flatcc_json_printer_uint16_enum_vector_field@@Base+0xa0>
   1f7b0:	ldr	r3, [fp, #-16]
   1f7b4:	ldr	r3, [r3, #20]
   1f7b8:	add	r1, r3, #1
   1f7bc:	ldr	r2, [fp, #-16]
   1f7c0:	str	r1, [r2, #20]
   1f7c4:	mov	r2, #44	; 0x2c
   1f7c8:	strb	r2, [r3]
   1f7cc:	ldr	r0, [fp, #-8]
   1f7d0:	bl	197f8 <flatcc_json_printer_error_string@@Base+0x8c>
   1f7d4:	str	r0, [fp, #-8]
   1f7d8:	ldr	r0, [fp, #-8]
   1f7dc:	bl	152ac <main@@Base+0x514>
   1f7e0:	str	r0, [fp, #-12]
   1f7e4:	ldr	r3, [fp, #-8]
   1f7e8:	add	r3, r3, #4
   1f7ec:	str	r3, [fp, #-8]
   1f7f0:	ldr	r3, [fp, #4]
   1f7f4:	mov	r2, r3
   1f7f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f7fc:	ldr	r0, [fp, #-16]
   1f800:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1f804:	ldr	r3, [fp, #-16]
   1f808:	ldr	r3, [r3, #32]
   1f80c:	add	r2, r3, #1
   1f810:	ldr	r3, [fp, #-16]
   1f814:	str	r2, [r3, #32]
   1f818:	ldr	r3, [fp, #-16]
   1f81c:	ldr	r3, [r3, #20]
   1f820:	add	r1, r3, #1
   1f824:	ldr	r2, [fp, #-16]
   1f828:	str	r1, [r2, #20]
   1f82c:	mov	r2, #91	; 0x5b
   1f830:	strb	r2, [r3]
   1f834:	ldr	r3, [fp, #-12]
   1f838:	cmp	r3, #0
   1f83c:	beq	1f944 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x218>
   1f840:	ldr	r3, [fp, #-16]
   1f844:	ldrb	r3, [r3, #25]
   1f848:	cmp	r3, #0
   1f84c:	beq	1f878 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x14c>
   1f850:	ldr	r3, [fp, #-16]
   1f854:	ldr	r3, [r3, #20]
   1f858:	add	r1, r3, #1
   1f85c:	ldr	r2, [fp, #-16]
   1f860:	str	r1, [r2, #20]
   1f864:	mov	r2, #10
   1f868:	strb	r2, [r3]
   1f86c:	ldr	r0, [fp, #-16]
   1f870:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1f874:	b	1f880 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x154>
   1f878:	ldr	r0, [fp, #-16]
   1f87c:	bl	154c0 <main@@Base+0x728>
   1f880:	ldr	r0, [fp, #-8]
   1f884:	bl	14f10 <main@@Base+0x178>
   1f888:	mov	r3, r0
   1f88c:	mov	r2, r3
   1f890:	ldr	r3, [fp, #8]
   1f894:	mov	r1, r2
   1f898:	ldr	r0, [fp, #-16]
   1f89c:	blx	r3
   1f8a0:	ldr	r3, [fp, #-8]
   1f8a4:	add	r3, r3, #2
   1f8a8:	str	r3, [fp, #-8]
   1f8ac:	ldr	r3, [fp, #-12]
   1f8b0:	sub	r3, r3, #1
   1f8b4:	str	r3, [fp, #-12]
   1f8b8:	b	1f944 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x218>
   1f8bc:	ldr	r3, [fp, #-16]
   1f8c0:	ldr	r3, [r3, #20]
   1f8c4:	add	r1, r3, #1
   1f8c8:	ldr	r2, [fp, #-16]
   1f8cc:	str	r1, [r2, #20]
   1f8d0:	mov	r2, #44	; 0x2c
   1f8d4:	strb	r2, [r3]
   1f8d8:	ldr	r3, [fp, #-16]
   1f8dc:	ldrb	r3, [r3, #25]
   1f8e0:	cmp	r3, #0
   1f8e4:	beq	1f910 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1e4>
   1f8e8:	ldr	r3, [fp, #-16]
   1f8ec:	ldr	r3, [r3, #20]
   1f8f0:	add	r1, r3, #1
   1f8f4:	ldr	r2, [fp, #-16]
   1f8f8:	str	r1, [r2, #20]
   1f8fc:	mov	r2, #10
   1f900:	strb	r2, [r3]
   1f904:	ldr	r0, [fp, #-16]
   1f908:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1f90c:	b	1f918 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1ec>
   1f910:	ldr	r0, [fp, #-16]
   1f914:	bl	154c0 <main@@Base+0x728>
   1f918:	ldr	r0, [fp, #-8]
   1f91c:	bl	14f10 <main@@Base+0x178>
   1f920:	mov	r3, r0
   1f924:	mov	r2, r3
   1f928:	ldr	r3, [fp, #8]
   1f92c:	mov	r1, r2
   1f930:	ldr	r0, [fp, #-16]
   1f934:	blx	r3
   1f938:	ldr	r3, [fp, #-8]
   1f93c:	add	r3, r3, #2
   1f940:	str	r3, [fp, #-8]
   1f944:	ldr	r3, [fp, #-12]
   1f948:	sub	r2, r3, #1
   1f94c:	str	r2, [fp, #-12]
   1f950:	cmp	r3, #0
   1f954:	bne	1f8bc <flatcc_json_printer_uint16_enum_vector_field@@Base+0x190>
   1f958:	ldr	r3, [fp, #-16]
   1f95c:	ldrb	r3, [r3, #25]
   1f960:	cmp	r3, #0
   1f964:	beq	1f9a0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x274>
   1f968:	ldr	r3, [fp, #-16]
   1f96c:	ldr	r3, [r3, #20]
   1f970:	add	r1, r3, #1
   1f974:	ldr	r2, [fp, #-16]
   1f978:	str	r1, [r2, #20]
   1f97c:	mov	r2, #10
   1f980:	strb	r2, [r3]
   1f984:	ldr	r3, [fp, #-16]
   1f988:	ldr	r3, [r3, #32]
   1f98c:	sub	r2, r3, #1
   1f990:	ldr	r3, [fp, #-16]
   1f994:	str	r2, [r3, #32]
   1f998:	ldr	r0, [fp, #-16]
   1f99c:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1f9a0:	ldr	r3, [fp, #-16]
   1f9a4:	ldr	r3, [r3, #20]
   1f9a8:	add	r1, r3, #1
   1f9ac:	ldr	r2, [fp, #-16]
   1f9b0:	str	r1, [r2, #20]
   1f9b4:	mov	r2, #93	; 0x5d
   1f9b8:	strb	r2, [r3]
   1f9bc:	sub	sp, fp, #4
   1f9c0:	pop	{fp, pc}

0001f9c4 <flatcc_json_printer_uint32_enum_vector_field@@Base>:
   1f9c4:	push	{fp, lr}
   1f9c8:	add	fp, sp, #4
   1f9cc:	sub	sp, sp, #32
   1f9d0:	str	r0, [fp, #-16]
   1f9d4:	str	r1, [fp, #-20]	; 0xffffffec
   1f9d8:	str	r2, [fp, #-24]	; 0xffffffe8
   1f9dc:	str	r3, [fp, #-28]	; 0xffffffe4
   1f9e0:	ldr	r3, [fp, #-16]
   1f9e4:	ldrb	r3, [r3, #27]
   1f9e8:	cmp	r3, #0
   1f9ec:	beq	1fa10 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x4c>
   1f9f0:	ldr	r3, [fp, #4]
   1f9f4:	str	r3, [sp]
   1f9f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f9fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1fa00:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fa04:	ldr	r0, [fp, #-16]
   1fa08:	bl	1da80 <flatcc_json_printer_uint32_vector_field@@Base>
   1fa0c:	b	1fc4c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x288>
   1fa10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fa14:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fa18:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   1fa1c:	str	r0, [fp, #-8]
   1fa20:	ldr	r3, [fp, #-8]
   1fa24:	cmp	r3, #0
   1fa28:	beq	1fc4c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x288>
   1fa2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fa30:	ldr	r3, [r3, #16]
   1fa34:	add	r1, r3, #1
   1fa38:	ldr	r2, [fp, #-20]	; 0xffffffec
   1fa3c:	str	r1, [r2, #16]
   1fa40:	cmp	r3, #0
   1fa44:	beq	1fa64 <flatcc_json_printer_uint32_enum_vector_field@@Base+0xa0>
   1fa48:	ldr	r3, [fp, #-16]
   1fa4c:	ldr	r3, [r3, #20]
   1fa50:	add	r1, r3, #1
   1fa54:	ldr	r2, [fp, #-16]
   1fa58:	str	r1, [r2, #20]
   1fa5c:	mov	r2, #44	; 0x2c
   1fa60:	strb	r2, [r3]
   1fa64:	ldr	r0, [fp, #-8]
   1fa68:	bl	197f8 <flatcc_json_printer_error_string@@Base+0x8c>
   1fa6c:	str	r0, [fp, #-8]
   1fa70:	ldr	r0, [fp, #-8]
   1fa74:	bl	152ac <main@@Base+0x514>
   1fa78:	str	r0, [fp, #-12]
   1fa7c:	ldr	r3, [fp, #-8]
   1fa80:	add	r3, r3, #4
   1fa84:	str	r3, [fp, #-8]
   1fa88:	ldr	r3, [fp, #4]
   1fa8c:	mov	r2, r3
   1fa90:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1fa94:	ldr	r0, [fp, #-16]
   1fa98:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1fa9c:	ldr	r3, [fp, #-16]
   1faa0:	ldr	r3, [r3, #32]
   1faa4:	add	r2, r3, #1
   1faa8:	ldr	r3, [fp, #-16]
   1faac:	str	r2, [r3, #32]
   1fab0:	ldr	r3, [fp, #-16]
   1fab4:	ldr	r3, [r3, #20]
   1fab8:	add	r1, r3, #1
   1fabc:	ldr	r2, [fp, #-16]
   1fac0:	str	r1, [r2, #20]
   1fac4:	mov	r2, #91	; 0x5b
   1fac8:	strb	r2, [r3]
   1facc:	ldr	r3, [fp, #-12]
   1fad0:	cmp	r3, #0
   1fad4:	beq	1fbd4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x210>
   1fad8:	ldr	r3, [fp, #-16]
   1fadc:	ldrb	r3, [r3, #25]
   1fae0:	cmp	r3, #0
   1fae4:	beq	1fb10 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x14c>
   1fae8:	ldr	r3, [fp, #-16]
   1faec:	ldr	r3, [r3, #20]
   1faf0:	add	r1, r3, #1
   1faf4:	ldr	r2, [fp, #-16]
   1faf8:	str	r1, [r2, #20]
   1fafc:	mov	r2, #10
   1fb00:	strb	r2, [r3]
   1fb04:	ldr	r0, [fp, #-16]
   1fb08:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1fb0c:	b	1fb18 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x154>
   1fb10:	ldr	r0, [fp, #-16]
   1fb14:	bl	154c0 <main@@Base+0x728>
   1fb18:	ldr	r0, [fp, #-8]
   1fb1c:	bl	14f64 <main@@Base+0x1cc>
   1fb20:	mov	r2, r0
   1fb24:	ldr	r3, [fp, #8]
   1fb28:	mov	r1, r2
   1fb2c:	ldr	r0, [fp, #-16]
   1fb30:	blx	r3
   1fb34:	ldr	r3, [fp, #-8]
   1fb38:	add	r3, r3, #4
   1fb3c:	str	r3, [fp, #-8]
   1fb40:	ldr	r3, [fp, #-12]
   1fb44:	sub	r3, r3, #1
   1fb48:	str	r3, [fp, #-12]
   1fb4c:	b	1fbd4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x210>
   1fb50:	ldr	r3, [fp, #-16]
   1fb54:	ldr	r3, [r3, #20]
   1fb58:	add	r1, r3, #1
   1fb5c:	ldr	r2, [fp, #-16]
   1fb60:	str	r1, [r2, #20]
   1fb64:	mov	r2, #44	; 0x2c
   1fb68:	strb	r2, [r3]
   1fb6c:	ldr	r3, [fp, #-16]
   1fb70:	ldrb	r3, [r3, #25]
   1fb74:	cmp	r3, #0
   1fb78:	beq	1fba4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1e0>
   1fb7c:	ldr	r3, [fp, #-16]
   1fb80:	ldr	r3, [r3, #20]
   1fb84:	add	r1, r3, #1
   1fb88:	ldr	r2, [fp, #-16]
   1fb8c:	str	r1, [r2, #20]
   1fb90:	mov	r2, #10
   1fb94:	strb	r2, [r3]
   1fb98:	ldr	r0, [fp, #-16]
   1fb9c:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1fba0:	b	1fbac <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1e8>
   1fba4:	ldr	r0, [fp, #-16]
   1fba8:	bl	154c0 <main@@Base+0x728>
   1fbac:	ldr	r0, [fp, #-8]
   1fbb0:	bl	14f64 <main@@Base+0x1cc>
   1fbb4:	mov	r2, r0
   1fbb8:	ldr	r3, [fp, #8]
   1fbbc:	mov	r1, r2
   1fbc0:	ldr	r0, [fp, #-16]
   1fbc4:	blx	r3
   1fbc8:	ldr	r3, [fp, #-8]
   1fbcc:	add	r3, r3, #4
   1fbd0:	str	r3, [fp, #-8]
   1fbd4:	ldr	r3, [fp, #-12]
   1fbd8:	sub	r2, r3, #1
   1fbdc:	str	r2, [fp, #-12]
   1fbe0:	cmp	r3, #0
   1fbe4:	bne	1fb50 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x18c>
   1fbe8:	ldr	r3, [fp, #-16]
   1fbec:	ldrb	r3, [r3, #25]
   1fbf0:	cmp	r3, #0
   1fbf4:	beq	1fc30 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x26c>
   1fbf8:	ldr	r3, [fp, #-16]
   1fbfc:	ldr	r3, [r3, #20]
   1fc00:	add	r1, r3, #1
   1fc04:	ldr	r2, [fp, #-16]
   1fc08:	str	r1, [r2, #20]
   1fc0c:	mov	r2, #10
   1fc10:	strb	r2, [r3]
   1fc14:	ldr	r3, [fp, #-16]
   1fc18:	ldr	r3, [r3, #32]
   1fc1c:	sub	r2, r3, #1
   1fc20:	ldr	r3, [fp, #-16]
   1fc24:	str	r2, [r3, #32]
   1fc28:	ldr	r0, [fp, #-16]
   1fc2c:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1fc30:	ldr	r3, [fp, #-16]
   1fc34:	ldr	r3, [r3, #20]
   1fc38:	add	r1, r3, #1
   1fc3c:	ldr	r2, [fp, #-16]
   1fc40:	str	r1, [r2, #20]
   1fc44:	mov	r2, #93	; 0x5d
   1fc48:	strb	r2, [r3]
   1fc4c:	sub	sp, fp, #4
   1fc50:	pop	{fp, pc}

0001fc54 <flatcc_json_printer_uint64_enum_vector_field@@Base>:
   1fc54:	push	{fp, lr}
   1fc58:	add	fp, sp, #4
   1fc5c:	sub	sp, sp, #32
   1fc60:	str	r0, [fp, #-16]
   1fc64:	str	r1, [fp, #-20]	; 0xffffffec
   1fc68:	str	r2, [fp, #-24]	; 0xffffffe8
   1fc6c:	str	r3, [fp, #-28]	; 0xffffffe4
   1fc70:	ldr	r3, [fp, #-16]
   1fc74:	ldrb	r3, [r3, #27]
   1fc78:	cmp	r3, #0
   1fc7c:	beq	1fca0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x4c>
   1fc80:	ldr	r3, [fp, #4]
   1fc84:	str	r3, [sp]
   1fc88:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fc8c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1fc90:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fc94:	ldr	r0, [fp, #-16]
   1fc98:	bl	1dd1c <flatcc_json_printer_uint64_vector_field@@Base>
   1fc9c:	b	1fedc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x288>
   1fca0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fca4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fca8:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   1fcac:	str	r0, [fp, #-8]
   1fcb0:	ldr	r3, [fp, #-8]
   1fcb4:	cmp	r3, #0
   1fcb8:	beq	1fedc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x288>
   1fcbc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fcc0:	ldr	r3, [r3, #16]
   1fcc4:	add	r1, r3, #1
   1fcc8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1fccc:	str	r1, [r2, #16]
   1fcd0:	cmp	r3, #0
   1fcd4:	beq	1fcf4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0xa0>
   1fcd8:	ldr	r3, [fp, #-16]
   1fcdc:	ldr	r3, [r3, #20]
   1fce0:	add	r1, r3, #1
   1fce4:	ldr	r2, [fp, #-16]
   1fce8:	str	r1, [r2, #20]
   1fcec:	mov	r2, #44	; 0x2c
   1fcf0:	strb	r2, [r3]
   1fcf4:	ldr	r0, [fp, #-8]
   1fcf8:	bl	197f8 <flatcc_json_printer_error_string@@Base+0x8c>
   1fcfc:	str	r0, [fp, #-8]
   1fd00:	ldr	r0, [fp, #-8]
   1fd04:	bl	152ac <main@@Base+0x514>
   1fd08:	str	r0, [fp, #-12]
   1fd0c:	ldr	r3, [fp, #-8]
   1fd10:	add	r3, r3, #4
   1fd14:	str	r3, [fp, #-8]
   1fd18:	ldr	r3, [fp, #4]
   1fd1c:	mov	r2, r3
   1fd20:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1fd24:	ldr	r0, [fp, #-16]
   1fd28:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1fd2c:	ldr	r3, [fp, #-16]
   1fd30:	ldr	r3, [r3, #32]
   1fd34:	add	r2, r3, #1
   1fd38:	ldr	r3, [fp, #-16]
   1fd3c:	str	r2, [r3, #32]
   1fd40:	ldr	r3, [fp, #-16]
   1fd44:	ldr	r3, [r3, #20]
   1fd48:	add	r1, r3, #1
   1fd4c:	ldr	r2, [fp, #-16]
   1fd50:	str	r1, [r2, #20]
   1fd54:	mov	r2, #91	; 0x5b
   1fd58:	strb	r2, [r3]
   1fd5c:	ldr	r3, [fp, #-12]
   1fd60:	cmp	r3, #0
   1fd64:	beq	1fe64 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x210>
   1fd68:	ldr	r3, [fp, #-16]
   1fd6c:	ldrb	r3, [r3, #25]
   1fd70:	cmp	r3, #0
   1fd74:	beq	1fda0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x14c>
   1fd78:	ldr	r3, [fp, #-16]
   1fd7c:	ldr	r3, [r3, #20]
   1fd80:	add	r1, r3, #1
   1fd84:	ldr	r2, [fp, #-16]
   1fd88:	str	r1, [r2, #20]
   1fd8c:	mov	r2, #10
   1fd90:	strb	r2, [r3]
   1fd94:	ldr	r0, [fp, #-16]
   1fd98:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1fd9c:	b	1fda8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x154>
   1fda0:	ldr	r0, [fp, #-16]
   1fda4:	bl	154c0 <main@@Base+0x728>
   1fda8:	ldr	r0, [fp, #-8]
   1fdac:	bl	14fbc <main@@Base+0x224>
   1fdb0:	mov	r2, r0
   1fdb4:	mov	r3, r1
   1fdb8:	ldr	r1, [fp, #8]
   1fdbc:	ldr	r0, [fp, #-16]
   1fdc0:	blx	r1
   1fdc4:	ldr	r3, [fp, #-8]
   1fdc8:	add	r3, r3, #8
   1fdcc:	str	r3, [fp, #-8]
   1fdd0:	ldr	r3, [fp, #-12]
   1fdd4:	sub	r3, r3, #1
   1fdd8:	str	r3, [fp, #-12]
   1fddc:	b	1fe64 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x210>
   1fde0:	ldr	r3, [fp, #-16]
   1fde4:	ldr	r3, [r3, #20]
   1fde8:	add	r1, r3, #1
   1fdec:	ldr	r2, [fp, #-16]
   1fdf0:	str	r1, [r2, #20]
   1fdf4:	mov	r2, #44	; 0x2c
   1fdf8:	strb	r2, [r3]
   1fdfc:	ldr	r3, [fp, #-16]
   1fe00:	ldrb	r3, [r3, #25]
   1fe04:	cmp	r3, #0
   1fe08:	beq	1fe34 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1e0>
   1fe0c:	ldr	r3, [fp, #-16]
   1fe10:	ldr	r3, [r3, #20]
   1fe14:	add	r1, r3, #1
   1fe18:	ldr	r2, [fp, #-16]
   1fe1c:	str	r1, [r2, #20]
   1fe20:	mov	r2, #10
   1fe24:	strb	r2, [r3]
   1fe28:	ldr	r0, [fp, #-16]
   1fe2c:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1fe30:	b	1fe3c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1e8>
   1fe34:	ldr	r0, [fp, #-16]
   1fe38:	bl	154c0 <main@@Base+0x728>
   1fe3c:	ldr	r0, [fp, #-8]
   1fe40:	bl	14fbc <main@@Base+0x224>
   1fe44:	mov	r2, r0
   1fe48:	mov	r3, r1
   1fe4c:	ldr	r1, [fp, #8]
   1fe50:	ldr	r0, [fp, #-16]
   1fe54:	blx	r1
   1fe58:	ldr	r3, [fp, #-8]
   1fe5c:	add	r3, r3, #8
   1fe60:	str	r3, [fp, #-8]
   1fe64:	ldr	r3, [fp, #-12]
   1fe68:	sub	r2, r3, #1
   1fe6c:	str	r2, [fp, #-12]
   1fe70:	cmp	r3, #0
   1fe74:	bne	1fde0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x18c>
   1fe78:	ldr	r3, [fp, #-16]
   1fe7c:	ldrb	r3, [r3, #25]
   1fe80:	cmp	r3, #0
   1fe84:	beq	1fec0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x26c>
   1fe88:	ldr	r3, [fp, #-16]
   1fe8c:	ldr	r3, [r3, #20]
   1fe90:	add	r1, r3, #1
   1fe94:	ldr	r2, [fp, #-16]
   1fe98:	str	r1, [r2, #20]
   1fe9c:	mov	r2, #10
   1fea0:	strb	r2, [r3]
   1fea4:	ldr	r3, [fp, #-16]
   1fea8:	ldr	r3, [r3, #32]
   1feac:	sub	r2, r3, #1
   1feb0:	ldr	r3, [fp, #-16]
   1feb4:	str	r2, [r3, #32]
   1feb8:	ldr	r0, [fp, #-16]
   1febc:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   1fec0:	ldr	r3, [fp, #-16]
   1fec4:	ldr	r3, [r3, #20]
   1fec8:	add	r1, r3, #1
   1fecc:	ldr	r2, [fp, #-16]
   1fed0:	str	r1, [r2, #20]
   1fed4:	mov	r2, #93	; 0x5d
   1fed8:	strb	r2, [r3]
   1fedc:	sub	sp, fp, #4
   1fee0:	pop	{fp, pc}

0001fee4 <flatcc_json_printer_int8_enum_vector_field@@Base>:
   1fee4:	push	{fp, lr}
   1fee8:	add	fp, sp, #4
   1feec:	sub	sp, sp, #32
   1fef0:	str	r0, [fp, #-16]
   1fef4:	str	r1, [fp, #-20]	; 0xffffffec
   1fef8:	str	r2, [fp, #-24]	; 0xffffffe8
   1fefc:	str	r3, [fp, #-28]	; 0xffffffe4
   1ff00:	ldr	r3, [fp, #-16]
   1ff04:	ldrb	r3, [r3, #27]
   1ff08:	cmp	r3, #0
   1ff0c:	beq	1ff30 <flatcc_json_printer_int8_enum_vector_field@@Base+0x4c>
   1ff10:	ldr	r3, [fp, #4]
   1ff14:	str	r3, [sp]
   1ff18:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ff1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ff20:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ff24:	ldr	r0, [fp, #-16]
   1ff28:	bl	1dfa8 <flatcc_json_printer_int8_vector_field@@Base>
   1ff2c:	b	20174 <flatcc_json_printer_int8_enum_vector_field@@Base+0x290>
   1ff30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ff34:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ff38:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   1ff3c:	str	r0, [fp, #-8]
   1ff40:	ldr	r3, [fp, #-8]
   1ff44:	cmp	r3, #0
   1ff48:	beq	20174 <flatcc_json_printer_int8_enum_vector_field@@Base+0x290>
   1ff4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ff50:	ldr	r3, [r3, #16]
   1ff54:	add	r1, r3, #1
   1ff58:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ff5c:	str	r1, [r2, #16]
   1ff60:	cmp	r3, #0
   1ff64:	beq	1ff84 <flatcc_json_printer_int8_enum_vector_field@@Base+0xa0>
   1ff68:	ldr	r3, [fp, #-16]
   1ff6c:	ldr	r3, [r3, #20]
   1ff70:	add	r1, r3, #1
   1ff74:	ldr	r2, [fp, #-16]
   1ff78:	str	r1, [r2, #20]
   1ff7c:	mov	r2, #44	; 0x2c
   1ff80:	strb	r2, [r3]
   1ff84:	ldr	r0, [fp, #-8]
   1ff88:	bl	197f8 <flatcc_json_printer_error_string@@Base+0x8c>
   1ff8c:	str	r0, [fp, #-8]
   1ff90:	ldr	r0, [fp, #-8]
   1ff94:	bl	152ac <main@@Base+0x514>
   1ff98:	str	r0, [fp, #-12]
   1ff9c:	ldr	r3, [fp, #-8]
   1ffa0:	add	r3, r3, #4
   1ffa4:	str	r3, [fp, #-8]
   1ffa8:	ldr	r3, [fp, #4]
   1ffac:	mov	r2, r3
   1ffb0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ffb4:	ldr	r0, [fp, #-16]
   1ffb8:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   1ffbc:	ldr	r3, [fp, #-16]
   1ffc0:	ldr	r3, [r3, #32]
   1ffc4:	add	r2, r3, #1
   1ffc8:	ldr	r3, [fp, #-16]
   1ffcc:	str	r2, [r3, #32]
   1ffd0:	ldr	r3, [fp, #-16]
   1ffd4:	ldr	r3, [r3, #20]
   1ffd8:	add	r1, r3, #1
   1ffdc:	ldr	r2, [fp, #-16]
   1ffe0:	str	r1, [r2, #20]
   1ffe4:	mov	r2, #91	; 0x5b
   1ffe8:	strb	r2, [r3]
   1ffec:	ldr	r3, [fp, #-12]
   1fff0:	cmp	r3, #0
   1fff4:	beq	200fc <flatcc_json_printer_int8_enum_vector_field@@Base+0x218>
   1fff8:	ldr	r3, [fp, #-16]
   1fffc:	ldrb	r3, [r3, #25]
   20000:	cmp	r3, #0
   20004:	beq	20030 <flatcc_json_printer_int8_enum_vector_field@@Base+0x14c>
   20008:	ldr	r3, [fp, #-16]
   2000c:	ldr	r3, [r3, #20]
   20010:	add	r1, r3, #1
   20014:	ldr	r2, [fp, #-16]
   20018:	str	r1, [r2, #20]
   2001c:	mov	r2, #10
   20020:	strb	r2, [r3]
   20024:	ldr	r0, [fp, #-16]
   20028:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   2002c:	b	20038 <flatcc_json_printer_int8_enum_vector_field@@Base+0x154>
   20030:	ldr	r0, [fp, #-16]
   20034:	bl	154c0 <main@@Base+0x728>
   20038:	ldr	r0, [fp, #-8]
   2003c:	bl	15020 <main@@Base+0x288>
   20040:	mov	r3, r0
   20044:	mov	r2, r3
   20048:	ldr	r3, [fp, #8]
   2004c:	mov	r1, r2
   20050:	ldr	r0, [fp, #-16]
   20054:	blx	r3
   20058:	ldr	r3, [fp, #-8]
   2005c:	add	r3, r3, #1
   20060:	str	r3, [fp, #-8]
   20064:	ldr	r3, [fp, #-12]
   20068:	sub	r3, r3, #1
   2006c:	str	r3, [fp, #-12]
   20070:	b	200fc <flatcc_json_printer_int8_enum_vector_field@@Base+0x218>
   20074:	ldr	r3, [fp, #-16]
   20078:	ldr	r3, [r3, #20]
   2007c:	add	r1, r3, #1
   20080:	ldr	r2, [fp, #-16]
   20084:	str	r1, [r2, #20]
   20088:	mov	r2, #44	; 0x2c
   2008c:	strb	r2, [r3]
   20090:	ldr	r3, [fp, #-16]
   20094:	ldrb	r3, [r3, #25]
   20098:	cmp	r3, #0
   2009c:	beq	200c8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1e4>
   200a0:	ldr	r3, [fp, #-16]
   200a4:	ldr	r3, [r3, #20]
   200a8:	add	r1, r3, #1
   200ac:	ldr	r2, [fp, #-16]
   200b0:	str	r1, [r2, #20]
   200b4:	mov	r2, #10
   200b8:	strb	r2, [r3]
   200bc:	ldr	r0, [fp, #-16]
   200c0:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   200c4:	b	200d0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1ec>
   200c8:	ldr	r0, [fp, #-16]
   200cc:	bl	154c0 <main@@Base+0x728>
   200d0:	ldr	r0, [fp, #-8]
   200d4:	bl	15020 <main@@Base+0x288>
   200d8:	mov	r3, r0
   200dc:	mov	r2, r3
   200e0:	ldr	r3, [fp, #8]
   200e4:	mov	r1, r2
   200e8:	ldr	r0, [fp, #-16]
   200ec:	blx	r3
   200f0:	ldr	r3, [fp, #-8]
   200f4:	add	r3, r3, #1
   200f8:	str	r3, [fp, #-8]
   200fc:	ldr	r3, [fp, #-12]
   20100:	sub	r2, r3, #1
   20104:	str	r2, [fp, #-12]
   20108:	cmp	r3, #0
   2010c:	bne	20074 <flatcc_json_printer_int8_enum_vector_field@@Base+0x190>
   20110:	ldr	r3, [fp, #-16]
   20114:	ldrb	r3, [r3, #25]
   20118:	cmp	r3, #0
   2011c:	beq	20158 <flatcc_json_printer_int8_enum_vector_field@@Base+0x274>
   20120:	ldr	r3, [fp, #-16]
   20124:	ldr	r3, [r3, #20]
   20128:	add	r1, r3, #1
   2012c:	ldr	r2, [fp, #-16]
   20130:	str	r1, [r2, #20]
   20134:	mov	r2, #10
   20138:	strb	r2, [r3]
   2013c:	ldr	r3, [fp, #-16]
   20140:	ldr	r3, [r3, #32]
   20144:	sub	r2, r3, #1
   20148:	ldr	r3, [fp, #-16]
   2014c:	str	r2, [r3, #32]
   20150:	ldr	r0, [fp, #-16]
   20154:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   20158:	ldr	r3, [fp, #-16]
   2015c:	ldr	r3, [r3, #20]
   20160:	add	r1, r3, #1
   20164:	ldr	r2, [fp, #-16]
   20168:	str	r1, [r2, #20]
   2016c:	mov	r2, #93	; 0x5d
   20170:	strb	r2, [r3]
   20174:	sub	sp, fp, #4
   20178:	pop	{fp, pc}

0002017c <flatcc_json_printer_int16_enum_vector_field@@Base>:
   2017c:	push	{fp, lr}
   20180:	add	fp, sp, #4
   20184:	sub	sp, sp, #32
   20188:	str	r0, [fp, #-16]
   2018c:	str	r1, [fp, #-20]	; 0xffffffec
   20190:	str	r2, [fp, #-24]	; 0xffffffe8
   20194:	str	r3, [fp, #-28]	; 0xffffffe4
   20198:	ldr	r3, [fp, #-16]
   2019c:	ldrb	r3, [r3, #27]
   201a0:	cmp	r3, #0
   201a4:	beq	201c8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x4c>
   201a8:	ldr	r3, [fp, #4]
   201ac:	str	r3, [sp]
   201b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   201b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   201b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   201bc:	ldr	r0, [fp, #-16]
   201c0:	bl	1e24c <flatcc_json_printer_int16_vector_field@@Base>
   201c4:	b	2040c <flatcc_json_printer_int16_enum_vector_field@@Base+0x290>
   201c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   201cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   201d0:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   201d4:	str	r0, [fp, #-8]
   201d8:	ldr	r3, [fp, #-8]
   201dc:	cmp	r3, #0
   201e0:	beq	2040c <flatcc_json_printer_int16_enum_vector_field@@Base+0x290>
   201e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   201e8:	ldr	r3, [r3, #16]
   201ec:	add	r1, r3, #1
   201f0:	ldr	r2, [fp, #-20]	; 0xffffffec
   201f4:	str	r1, [r2, #16]
   201f8:	cmp	r3, #0
   201fc:	beq	2021c <flatcc_json_printer_int16_enum_vector_field@@Base+0xa0>
   20200:	ldr	r3, [fp, #-16]
   20204:	ldr	r3, [r3, #20]
   20208:	add	r1, r3, #1
   2020c:	ldr	r2, [fp, #-16]
   20210:	str	r1, [r2, #20]
   20214:	mov	r2, #44	; 0x2c
   20218:	strb	r2, [r3]
   2021c:	ldr	r0, [fp, #-8]
   20220:	bl	197f8 <flatcc_json_printer_error_string@@Base+0x8c>
   20224:	str	r0, [fp, #-8]
   20228:	ldr	r0, [fp, #-8]
   2022c:	bl	152ac <main@@Base+0x514>
   20230:	str	r0, [fp, #-12]
   20234:	ldr	r3, [fp, #-8]
   20238:	add	r3, r3, #4
   2023c:	str	r3, [fp, #-8]
   20240:	ldr	r3, [fp, #4]
   20244:	mov	r2, r3
   20248:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2024c:	ldr	r0, [fp, #-16]
   20250:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   20254:	ldr	r3, [fp, #-16]
   20258:	ldr	r3, [r3, #32]
   2025c:	add	r2, r3, #1
   20260:	ldr	r3, [fp, #-16]
   20264:	str	r2, [r3, #32]
   20268:	ldr	r3, [fp, #-16]
   2026c:	ldr	r3, [r3, #20]
   20270:	add	r1, r3, #1
   20274:	ldr	r2, [fp, #-16]
   20278:	str	r1, [r2, #20]
   2027c:	mov	r2, #91	; 0x5b
   20280:	strb	r2, [r3]
   20284:	ldr	r3, [fp, #-12]
   20288:	cmp	r3, #0
   2028c:	beq	20394 <flatcc_json_printer_int16_enum_vector_field@@Base+0x218>
   20290:	ldr	r3, [fp, #-16]
   20294:	ldrb	r3, [r3, #25]
   20298:	cmp	r3, #0
   2029c:	beq	202c8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x14c>
   202a0:	ldr	r3, [fp, #-16]
   202a4:	ldr	r3, [r3, #20]
   202a8:	add	r1, r3, #1
   202ac:	ldr	r2, [fp, #-16]
   202b0:	str	r1, [r2, #20]
   202b4:	mov	r2, #10
   202b8:	strb	r2, [r3]
   202bc:	ldr	r0, [fp, #-16]
   202c0:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   202c4:	b	202d0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x154>
   202c8:	ldr	r0, [fp, #-16]
   202cc:	bl	154c0 <main@@Base+0x728>
   202d0:	ldr	r0, [fp, #-8]
   202d4:	bl	15078 <main@@Base+0x2e0>
   202d8:	mov	r3, r0
   202dc:	mov	r2, r3
   202e0:	ldr	r3, [fp, #8]
   202e4:	mov	r1, r2
   202e8:	ldr	r0, [fp, #-16]
   202ec:	blx	r3
   202f0:	ldr	r3, [fp, #-8]
   202f4:	add	r3, r3, #2
   202f8:	str	r3, [fp, #-8]
   202fc:	ldr	r3, [fp, #-12]
   20300:	sub	r3, r3, #1
   20304:	str	r3, [fp, #-12]
   20308:	b	20394 <flatcc_json_printer_int16_enum_vector_field@@Base+0x218>
   2030c:	ldr	r3, [fp, #-16]
   20310:	ldr	r3, [r3, #20]
   20314:	add	r1, r3, #1
   20318:	ldr	r2, [fp, #-16]
   2031c:	str	r1, [r2, #20]
   20320:	mov	r2, #44	; 0x2c
   20324:	strb	r2, [r3]
   20328:	ldr	r3, [fp, #-16]
   2032c:	ldrb	r3, [r3, #25]
   20330:	cmp	r3, #0
   20334:	beq	20360 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1e4>
   20338:	ldr	r3, [fp, #-16]
   2033c:	ldr	r3, [r3, #20]
   20340:	add	r1, r3, #1
   20344:	ldr	r2, [fp, #-16]
   20348:	str	r1, [r2, #20]
   2034c:	mov	r2, #10
   20350:	strb	r2, [r3]
   20354:	ldr	r0, [fp, #-16]
   20358:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   2035c:	b	20368 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1ec>
   20360:	ldr	r0, [fp, #-16]
   20364:	bl	154c0 <main@@Base+0x728>
   20368:	ldr	r0, [fp, #-8]
   2036c:	bl	15078 <main@@Base+0x2e0>
   20370:	mov	r3, r0
   20374:	mov	r2, r3
   20378:	ldr	r3, [fp, #8]
   2037c:	mov	r1, r2
   20380:	ldr	r0, [fp, #-16]
   20384:	blx	r3
   20388:	ldr	r3, [fp, #-8]
   2038c:	add	r3, r3, #2
   20390:	str	r3, [fp, #-8]
   20394:	ldr	r3, [fp, #-12]
   20398:	sub	r2, r3, #1
   2039c:	str	r2, [fp, #-12]
   203a0:	cmp	r3, #0
   203a4:	bne	2030c <flatcc_json_printer_int16_enum_vector_field@@Base+0x190>
   203a8:	ldr	r3, [fp, #-16]
   203ac:	ldrb	r3, [r3, #25]
   203b0:	cmp	r3, #0
   203b4:	beq	203f0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x274>
   203b8:	ldr	r3, [fp, #-16]
   203bc:	ldr	r3, [r3, #20]
   203c0:	add	r1, r3, #1
   203c4:	ldr	r2, [fp, #-16]
   203c8:	str	r1, [r2, #20]
   203cc:	mov	r2, #10
   203d0:	strb	r2, [r3]
   203d4:	ldr	r3, [fp, #-16]
   203d8:	ldr	r3, [r3, #32]
   203dc:	sub	r2, r3, #1
   203e0:	ldr	r3, [fp, #-16]
   203e4:	str	r2, [r3, #32]
   203e8:	ldr	r0, [fp, #-16]
   203ec:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   203f0:	ldr	r3, [fp, #-16]
   203f4:	ldr	r3, [r3, #20]
   203f8:	add	r1, r3, #1
   203fc:	ldr	r2, [fp, #-16]
   20400:	str	r1, [r2, #20]
   20404:	mov	r2, #93	; 0x5d
   20408:	strb	r2, [r3]
   2040c:	sub	sp, fp, #4
   20410:	pop	{fp, pc}

00020414 <flatcc_json_printer_int32_enum_vector_field@@Base>:
   20414:	push	{fp, lr}
   20418:	add	fp, sp, #4
   2041c:	sub	sp, sp, #32
   20420:	str	r0, [fp, #-16]
   20424:	str	r1, [fp, #-20]	; 0xffffffec
   20428:	str	r2, [fp, #-24]	; 0xffffffe8
   2042c:	str	r3, [fp, #-28]	; 0xffffffe4
   20430:	ldr	r3, [fp, #-16]
   20434:	ldrb	r3, [r3, #27]
   20438:	cmp	r3, #0
   2043c:	beq	20460 <flatcc_json_printer_int32_enum_vector_field@@Base+0x4c>
   20440:	ldr	r3, [fp, #4]
   20444:	str	r3, [sp]
   20448:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2044c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20450:	ldr	r1, [fp, #-20]	; 0xffffffec
   20454:	ldr	r0, [fp, #-16]
   20458:	bl	1e4f0 <flatcc_json_printer_int32_vector_field@@Base>
   2045c:	b	2069c <flatcc_json_printer_int32_enum_vector_field@@Base+0x288>
   20460:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20464:	ldr	r0, [fp, #-20]	; 0xffffffec
   20468:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   2046c:	str	r0, [fp, #-8]
   20470:	ldr	r3, [fp, #-8]
   20474:	cmp	r3, #0
   20478:	beq	2069c <flatcc_json_printer_int32_enum_vector_field@@Base+0x288>
   2047c:	ldr	r3, [fp, #-20]	; 0xffffffec
   20480:	ldr	r3, [r3, #16]
   20484:	add	r1, r3, #1
   20488:	ldr	r2, [fp, #-20]	; 0xffffffec
   2048c:	str	r1, [r2, #16]
   20490:	cmp	r3, #0
   20494:	beq	204b4 <flatcc_json_printer_int32_enum_vector_field@@Base+0xa0>
   20498:	ldr	r3, [fp, #-16]
   2049c:	ldr	r3, [r3, #20]
   204a0:	add	r1, r3, #1
   204a4:	ldr	r2, [fp, #-16]
   204a8:	str	r1, [r2, #20]
   204ac:	mov	r2, #44	; 0x2c
   204b0:	strb	r2, [r3]
   204b4:	ldr	r0, [fp, #-8]
   204b8:	bl	197f8 <flatcc_json_printer_error_string@@Base+0x8c>
   204bc:	str	r0, [fp, #-8]
   204c0:	ldr	r0, [fp, #-8]
   204c4:	bl	152ac <main@@Base+0x514>
   204c8:	str	r0, [fp, #-12]
   204cc:	ldr	r3, [fp, #-8]
   204d0:	add	r3, r3, #4
   204d4:	str	r3, [fp, #-8]
   204d8:	ldr	r3, [fp, #4]
   204dc:	mov	r2, r3
   204e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   204e4:	ldr	r0, [fp, #-16]
   204e8:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   204ec:	ldr	r3, [fp, #-16]
   204f0:	ldr	r3, [r3, #32]
   204f4:	add	r2, r3, #1
   204f8:	ldr	r3, [fp, #-16]
   204fc:	str	r2, [r3, #32]
   20500:	ldr	r3, [fp, #-16]
   20504:	ldr	r3, [r3, #20]
   20508:	add	r1, r3, #1
   2050c:	ldr	r2, [fp, #-16]
   20510:	str	r1, [r2, #20]
   20514:	mov	r2, #91	; 0x5b
   20518:	strb	r2, [r3]
   2051c:	ldr	r3, [fp, #-12]
   20520:	cmp	r3, #0
   20524:	beq	20624 <flatcc_json_printer_int32_enum_vector_field@@Base+0x210>
   20528:	ldr	r3, [fp, #-16]
   2052c:	ldrb	r3, [r3, #25]
   20530:	cmp	r3, #0
   20534:	beq	20560 <flatcc_json_printer_int32_enum_vector_field@@Base+0x14c>
   20538:	ldr	r3, [fp, #-16]
   2053c:	ldr	r3, [r3, #20]
   20540:	add	r1, r3, #1
   20544:	ldr	r2, [fp, #-16]
   20548:	str	r1, [r2, #20]
   2054c:	mov	r2, #10
   20550:	strb	r2, [r3]
   20554:	ldr	r0, [fp, #-16]
   20558:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   2055c:	b	20568 <flatcc_json_printer_int32_enum_vector_field@@Base+0x154>
   20560:	ldr	r0, [fp, #-16]
   20564:	bl	154c0 <main@@Base+0x728>
   20568:	ldr	r0, [fp, #-8]
   2056c:	bl	150cc <main@@Base+0x334>
   20570:	mov	r2, r0
   20574:	ldr	r3, [fp, #8]
   20578:	mov	r1, r2
   2057c:	ldr	r0, [fp, #-16]
   20580:	blx	r3
   20584:	ldr	r3, [fp, #-8]
   20588:	add	r3, r3, #4
   2058c:	str	r3, [fp, #-8]
   20590:	ldr	r3, [fp, #-12]
   20594:	sub	r3, r3, #1
   20598:	str	r3, [fp, #-12]
   2059c:	b	20624 <flatcc_json_printer_int32_enum_vector_field@@Base+0x210>
   205a0:	ldr	r3, [fp, #-16]
   205a4:	ldr	r3, [r3, #20]
   205a8:	add	r1, r3, #1
   205ac:	ldr	r2, [fp, #-16]
   205b0:	str	r1, [r2, #20]
   205b4:	mov	r2, #44	; 0x2c
   205b8:	strb	r2, [r3]
   205bc:	ldr	r3, [fp, #-16]
   205c0:	ldrb	r3, [r3, #25]
   205c4:	cmp	r3, #0
   205c8:	beq	205f4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1e0>
   205cc:	ldr	r3, [fp, #-16]
   205d0:	ldr	r3, [r3, #20]
   205d4:	add	r1, r3, #1
   205d8:	ldr	r2, [fp, #-16]
   205dc:	str	r1, [r2, #20]
   205e0:	mov	r2, #10
   205e4:	strb	r2, [r3]
   205e8:	ldr	r0, [fp, #-16]
   205ec:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   205f0:	b	205fc <flatcc_json_printer_int32_enum_vector_field@@Base+0x1e8>
   205f4:	ldr	r0, [fp, #-16]
   205f8:	bl	154c0 <main@@Base+0x728>
   205fc:	ldr	r0, [fp, #-8]
   20600:	bl	150cc <main@@Base+0x334>
   20604:	mov	r2, r0
   20608:	ldr	r3, [fp, #8]
   2060c:	mov	r1, r2
   20610:	ldr	r0, [fp, #-16]
   20614:	blx	r3
   20618:	ldr	r3, [fp, #-8]
   2061c:	add	r3, r3, #4
   20620:	str	r3, [fp, #-8]
   20624:	ldr	r3, [fp, #-12]
   20628:	sub	r2, r3, #1
   2062c:	str	r2, [fp, #-12]
   20630:	cmp	r3, #0
   20634:	bne	205a0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x18c>
   20638:	ldr	r3, [fp, #-16]
   2063c:	ldrb	r3, [r3, #25]
   20640:	cmp	r3, #0
   20644:	beq	20680 <flatcc_json_printer_int32_enum_vector_field@@Base+0x26c>
   20648:	ldr	r3, [fp, #-16]
   2064c:	ldr	r3, [r3, #20]
   20650:	add	r1, r3, #1
   20654:	ldr	r2, [fp, #-16]
   20658:	str	r1, [r2, #20]
   2065c:	mov	r2, #10
   20660:	strb	r2, [r3]
   20664:	ldr	r3, [fp, #-16]
   20668:	ldr	r3, [r3, #32]
   2066c:	sub	r2, r3, #1
   20670:	ldr	r3, [fp, #-16]
   20674:	str	r2, [r3, #32]
   20678:	ldr	r0, [fp, #-16]
   2067c:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   20680:	ldr	r3, [fp, #-16]
   20684:	ldr	r3, [r3, #20]
   20688:	add	r1, r3, #1
   2068c:	ldr	r2, [fp, #-16]
   20690:	str	r1, [r2, #20]
   20694:	mov	r2, #93	; 0x5d
   20698:	strb	r2, [r3]
   2069c:	sub	sp, fp, #4
   206a0:	pop	{fp, pc}

000206a4 <flatcc_json_printer_int64_enum_vector_field@@Base>:
   206a4:	push	{fp, lr}
   206a8:	add	fp, sp, #4
   206ac:	sub	sp, sp, #32
   206b0:	str	r0, [fp, #-16]
   206b4:	str	r1, [fp, #-20]	; 0xffffffec
   206b8:	str	r2, [fp, #-24]	; 0xffffffe8
   206bc:	str	r3, [fp, #-28]	; 0xffffffe4
   206c0:	ldr	r3, [fp, #-16]
   206c4:	ldrb	r3, [r3, #27]
   206c8:	cmp	r3, #0
   206cc:	beq	206f0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x4c>
   206d0:	ldr	r3, [fp, #4]
   206d4:	str	r3, [sp]
   206d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   206dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   206e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   206e4:	ldr	r0, [fp, #-16]
   206e8:	bl	1e78c <flatcc_json_printer_int64_vector_field@@Base>
   206ec:	b	2092c <flatcc_json_printer_int64_enum_vector_field@@Base+0x288>
   206f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   206f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   206f8:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   206fc:	str	r0, [fp, #-8]
   20700:	ldr	r3, [fp, #-8]
   20704:	cmp	r3, #0
   20708:	beq	2092c <flatcc_json_printer_int64_enum_vector_field@@Base+0x288>
   2070c:	ldr	r3, [fp, #-20]	; 0xffffffec
   20710:	ldr	r3, [r3, #16]
   20714:	add	r1, r3, #1
   20718:	ldr	r2, [fp, #-20]	; 0xffffffec
   2071c:	str	r1, [r2, #16]
   20720:	cmp	r3, #0
   20724:	beq	20744 <flatcc_json_printer_int64_enum_vector_field@@Base+0xa0>
   20728:	ldr	r3, [fp, #-16]
   2072c:	ldr	r3, [r3, #20]
   20730:	add	r1, r3, #1
   20734:	ldr	r2, [fp, #-16]
   20738:	str	r1, [r2, #20]
   2073c:	mov	r2, #44	; 0x2c
   20740:	strb	r2, [r3]
   20744:	ldr	r0, [fp, #-8]
   20748:	bl	197f8 <flatcc_json_printer_error_string@@Base+0x8c>
   2074c:	str	r0, [fp, #-8]
   20750:	ldr	r0, [fp, #-8]
   20754:	bl	152ac <main@@Base+0x514>
   20758:	str	r0, [fp, #-12]
   2075c:	ldr	r3, [fp, #-8]
   20760:	add	r3, r3, #4
   20764:	str	r3, [fp, #-8]
   20768:	ldr	r3, [fp, #4]
   2076c:	mov	r2, r3
   20770:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20774:	ldr	r0, [fp, #-16]
   20778:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   2077c:	ldr	r3, [fp, #-16]
   20780:	ldr	r3, [r3, #32]
   20784:	add	r2, r3, #1
   20788:	ldr	r3, [fp, #-16]
   2078c:	str	r2, [r3, #32]
   20790:	ldr	r3, [fp, #-16]
   20794:	ldr	r3, [r3, #20]
   20798:	add	r1, r3, #1
   2079c:	ldr	r2, [fp, #-16]
   207a0:	str	r1, [r2, #20]
   207a4:	mov	r2, #91	; 0x5b
   207a8:	strb	r2, [r3]
   207ac:	ldr	r3, [fp, #-12]
   207b0:	cmp	r3, #0
   207b4:	beq	208b4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x210>
   207b8:	ldr	r3, [fp, #-16]
   207bc:	ldrb	r3, [r3, #25]
   207c0:	cmp	r3, #0
   207c4:	beq	207f0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x14c>
   207c8:	ldr	r3, [fp, #-16]
   207cc:	ldr	r3, [r3, #20]
   207d0:	add	r1, r3, #1
   207d4:	ldr	r2, [fp, #-16]
   207d8:	str	r1, [r2, #20]
   207dc:	mov	r2, #10
   207e0:	strb	r2, [r3]
   207e4:	ldr	r0, [fp, #-16]
   207e8:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   207ec:	b	207f8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x154>
   207f0:	ldr	r0, [fp, #-16]
   207f4:	bl	154c0 <main@@Base+0x728>
   207f8:	ldr	r0, [fp, #-8]
   207fc:	bl	15124 <main@@Base+0x38c>
   20800:	mov	r2, r0
   20804:	mov	r3, r1
   20808:	ldr	r1, [fp, #8]
   2080c:	ldr	r0, [fp, #-16]
   20810:	blx	r1
   20814:	ldr	r3, [fp, #-8]
   20818:	add	r3, r3, #8
   2081c:	str	r3, [fp, #-8]
   20820:	ldr	r3, [fp, #-12]
   20824:	sub	r3, r3, #1
   20828:	str	r3, [fp, #-12]
   2082c:	b	208b4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x210>
   20830:	ldr	r3, [fp, #-16]
   20834:	ldr	r3, [r3, #20]
   20838:	add	r1, r3, #1
   2083c:	ldr	r2, [fp, #-16]
   20840:	str	r1, [r2, #20]
   20844:	mov	r2, #44	; 0x2c
   20848:	strb	r2, [r3]
   2084c:	ldr	r3, [fp, #-16]
   20850:	ldrb	r3, [r3, #25]
   20854:	cmp	r3, #0
   20858:	beq	20884 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1e0>
   2085c:	ldr	r3, [fp, #-16]
   20860:	ldr	r3, [r3, #20]
   20864:	add	r1, r3, #1
   20868:	ldr	r2, [fp, #-16]
   2086c:	str	r1, [r2, #20]
   20870:	mov	r2, #10
   20874:	strb	r2, [r3]
   20878:	ldr	r0, [fp, #-16]
   2087c:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   20880:	b	2088c <flatcc_json_printer_int64_enum_vector_field@@Base+0x1e8>
   20884:	ldr	r0, [fp, #-16]
   20888:	bl	154c0 <main@@Base+0x728>
   2088c:	ldr	r0, [fp, #-8]
   20890:	bl	15124 <main@@Base+0x38c>
   20894:	mov	r2, r0
   20898:	mov	r3, r1
   2089c:	ldr	r1, [fp, #8]
   208a0:	ldr	r0, [fp, #-16]
   208a4:	blx	r1
   208a8:	ldr	r3, [fp, #-8]
   208ac:	add	r3, r3, #8
   208b0:	str	r3, [fp, #-8]
   208b4:	ldr	r3, [fp, #-12]
   208b8:	sub	r2, r3, #1
   208bc:	str	r2, [fp, #-12]
   208c0:	cmp	r3, #0
   208c4:	bne	20830 <flatcc_json_printer_int64_enum_vector_field@@Base+0x18c>
   208c8:	ldr	r3, [fp, #-16]
   208cc:	ldrb	r3, [r3, #25]
   208d0:	cmp	r3, #0
   208d4:	beq	20910 <flatcc_json_printer_int64_enum_vector_field@@Base+0x26c>
   208d8:	ldr	r3, [fp, #-16]
   208dc:	ldr	r3, [r3, #20]
   208e0:	add	r1, r3, #1
   208e4:	ldr	r2, [fp, #-16]
   208e8:	str	r1, [r2, #20]
   208ec:	mov	r2, #10
   208f0:	strb	r2, [r3]
   208f4:	ldr	r3, [fp, #-16]
   208f8:	ldr	r3, [r3, #32]
   208fc:	sub	r2, r3, #1
   20900:	ldr	r3, [fp, #-16]
   20904:	str	r2, [r3, #32]
   20908:	ldr	r0, [fp, #-16]
   2090c:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   20910:	ldr	r3, [fp, #-16]
   20914:	ldr	r3, [r3, #20]
   20918:	add	r1, r3, #1
   2091c:	ldr	r2, [fp, #-16]
   20920:	str	r1, [r2, #20]
   20924:	mov	r2, #93	; 0x5d
   20928:	strb	r2, [r3]
   2092c:	sub	sp, fp, #4
   20930:	pop	{fp, pc}

00020934 <flatcc_json_printer_bool_enum_vector_field@@Base>:
   20934:	push	{fp, lr}
   20938:	add	fp, sp, #4
   2093c:	sub	sp, sp, #32
   20940:	str	r0, [fp, #-16]
   20944:	str	r1, [fp, #-20]	; 0xffffffec
   20948:	str	r2, [fp, #-24]	; 0xffffffe8
   2094c:	str	r3, [fp, #-28]	; 0xffffffe4
   20950:	ldr	r3, [fp, #-16]
   20954:	ldrb	r3, [r3, #27]
   20958:	cmp	r3, #0
   2095c:	beq	20980 <flatcc_json_printer_bool_enum_vector_field@@Base+0x4c>
   20960:	ldr	r3, [fp, #4]
   20964:	str	r3, [sp]
   20968:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2096c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20970:	ldr	r1, [fp, #-20]	; 0xffffffec
   20974:	ldr	r0, [fp, #-16]
   20978:	bl	1ea18 <flatcc_json_printer_bool_vector_field@@Base>
   2097c:	b	20bc4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x290>
   20980:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20984:	ldr	r0, [fp, #-20]	; 0xffffffec
   20988:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   2098c:	str	r0, [fp, #-8]
   20990:	ldr	r3, [fp, #-8]
   20994:	cmp	r3, #0
   20998:	beq	20bc4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x290>
   2099c:	ldr	r3, [fp, #-20]	; 0xffffffec
   209a0:	ldr	r3, [r3, #16]
   209a4:	add	r1, r3, #1
   209a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   209ac:	str	r1, [r2, #16]
   209b0:	cmp	r3, #0
   209b4:	beq	209d4 <flatcc_json_printer_bool_enum_vector_field@@Base+0xa0>
   209b8:	ldr	r3, [fp, #-16]
   209bc:	ldr	r3, [r3, #20]
   209c0:	add	r1, r3, #1
   209c4:	ldr	r2, [fp, #-16]
   209c8:	str	r1, [r2, #20]
   209cc:	mov	r2, #44	; 0x2c
   209d0:	strb	r2, [r3]
   209d4:	ldr	r0, [fp, #-8]
   209d8:	bl	197f8 <flatcc_json_printer_error_string@@Base+0x8c>
   209dc:	str	r0, [fp, #-8]
   209e0:	ldr	r0, [fp, #-8]
   209e4:	bl	152ac <main@@Base+0x514>
   209e8:	str	r0, [fp, #-12]
   209ec:	ldr	r3, [fp, #-8]
   209f0:	add	r3, r3, #4
   209f4:	str	r3, [fp, #-8]
   209f8:	ldr	r3, [fp, #4]
   209fc:	mov	r2, r3
   20a00:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20a04:	ldr	r0, [fp, #-16]
   20a08:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   20a0c:	ldr	r3, [fp, #-16]
   20a10:	ldr	r3, [r3, #32]
   20a14:	add	r2, r3, #1
   20a18:	ldr	r3, [fp, #-16]
   20a1c:	str	r2, [r3, #32]
   20a20:	ldr	r3, [fp, #-16]
   20a24:	ldr	r3, [r3, #20]
   20a28:	add	r1, r3, #1
   20a2c:	ldr	r2, [fp, #-16]
   20a30:	str	r1, [r2, #20]
   20a34:	mov	r2, #91	; 0x5b
   20a38:	strb	r2, [r3]
   20a3c:	ldr	r3, [fp, #-12]
   20a40:	cmp	r3, #0
   20a44:	beq	20b4c <flatcc_json_printer_bool_enum_vector_field@@Base+0x218>
   20a48:	ldr	r3, [fp, #-16]
   20a4c:	ldrb	r3, [r3, #25]
   20a50:	cmp	r3, #0
   20a54:	beq	20a80 <flatcc_json_printer_bool_enum_vector_field@@Base+0x14c>
   20a58:	ldr	r3, [fp, #-16]
   20a5c:	ldr	r3, [r3, #20]
   20a60:	add	r1, r3, #1
   20a64:	ldr	r2, [fp, #-16]
   20a68:	str	r1, [r2, #20]
   20a6c:	mov	r2, #10
   20a70:	strb	r2, [r3]
   20a74:	ldr	r0, [fp, #-16]
   20a78:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   20a7c:	b	20a88 <flatcc_json_printer_bool_enum_vector_field@@Base+0x154>
   20a80:	ldr	r0, [fp, #-16]
   20a84:	bl	154c0 <main@@Base+0x728>
   20a88:	ldr	r0, [fp, #-8]
   20a8c:	bl	15258 <main@@Base+0x4c0>
   20a90:	mov	r3, r0
   20a94:	mov	r2, r3
   20a98:	ldr	r3, [fp, #8]
   20a9c:	mov	r1, r2
   20aa0:	ldr	r0, [fp, #-16]
   20aa4:	blx	r3
   20aa8:	ldr	r3, [fp, #-8]
   20aac:	add	r3, r3, #1
   20ab0:	str	r3, [fp, #-8]
   20ab4:	ldr	r3, [fp, #-12]
   20ab8:	sub	r3, r3, #1
   20abc:	str	r3, [fp, #-12]
   20ac0:	b	20b4c <flatcc_json_printer_bool_enum_vector_field@@Base+0x218>
   20ac4:	ldr	r3, [fp, #-16]
   20ac8:	ldr	r3, [r3, #20]
   20acc:	add	r1, r3, #1
   20ad0:	ldr	r2, [fp, #-16]
   20ad4:	str	r1, [r2, #20]
   20ad8:	mov	r2, #44	; 0x2c
   20adc:	strb	r2, [r3]
   20ae0:	ldr	r3, [fp, #-16]
   20ae4:	ldrb	r3, [r3, #25]
   20ae8:	cmp	r3, #0
   20aec:	beq	20b18 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1e4>
   20af0:	ldr	r3, [fp, #-16]
   20af4:	ldr	r3, [r3, #20]
   20af8:	add	r1, r3, #1
   20afc:	ldr	r2, [fp, #-16]
   20b00:	str	r1, [r2, #20]
   20b04:	mov	r2, #10
   20b08:	strb	r2, [r3]
   20b0c:	ldr	r0, [fp, #-16]
   20b10:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   20b14:	b	20b20 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1ec>
   20b18:	ldr	r0, [fp, #-16]
   20b1c:	bl	154c0 <main@@Base+0x728>
   20b20:	ldr	r0, [fp, #-8]
   20b24:	bl	15258 <main@@Base+0x4c0>
   20b28:	mov	r3, r0
   20b2c:	mov	r2, r3
   20b30:	ldr	r3, [fp, #8]
   20b34:	mov	r1, r2
   20b38:	ldr	r0, [fp, #-16]
   20b3c:	blx	r3
   20b40:	ldr	r3, [fp, #-8]
   20b44:	add	r3, r3, #1
   20b48:	str	r3, [fp, #-8]
   20b4c:	ldr	r3, [fp, #-12]
   20b50:	sub	r2, r3, #1
   20b54:	str	r2, [fp, #-12]
   20b58:	cmp	r3, #0
   20b5c:	bne	20ac4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x190>
   20b60:	ldr	r3, [fp, #-16]
   20b64:	ldrb	r3, [r3, #25]
   20b68:	cmp	r3, #0
   20b6c:	beq	20ba8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x274>
   20b70:	ldr	r3, [fp, #-16]
   20b74:	ldr	r3, [r3, #20]
   20b78:	add	r1, r3, #1
   20b7c:	ldr	r2, [fp, #-16]
   20b80:	str	r1, [r2, #20]
   20b84:	mov	r2, #10
   20b88:	strb	r2, [r3]
   20b8c:	ldr	r3, [fp, #-16]
   20b90:	ldr	r3, [r3, #32]
   20b94:	sub	r2, r3, #1
   20b98:	ldr	r3, [fp, #-16]
   20b9c:	str	r2, [r3, #32]
   20ba0:	ldr	r0, [fp, #-16]
   20ba4:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   20ba8:	ldr	r3, [fp, #-16]
   20bac:	ldr	r3, [r3, #20]
   20bb0:	add	r1, r3, #1
   20bb4:	ldr	r2, [fp, #-16]
   20bb8:	str	r1, [r2, #20]
   20bbc:	mov	r2, #93	; 0x5d
   20bc0:	strb	r2, [r3]
   20bc4:	sub	sp, fp, #4
   20bc8:	pop	{fp, pc}

00020bcc <flatcc_json_printer_struct_vector_field@@Base>:
   20bcc:	push	{fp, lr}
   20bd0:	add	fp, sp, #4
   20bd4:	sub	sp, sp, #24
   20bd8:	str	r0, [fp, #-16]
   20bdc:	str	r1, [fp, #-20]	; 0xffffffec
   20be0:	str	r2, [fp, #-24]	; 0xffffffe8
   20be4:	str	r3, [fp, #-28]	; 0xffffffe4
   20be8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20bec:	ldr	r0, [fp, #-20]	; 0xffffffec
   20bf0:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   20bf4:	str	r0, [fp, #-8]
   20bf8:	ldr	r3, [fp, #-8]
   20bfc:	cmp	r3, #0
   20c00:	beq	20f2c <flatcc_json_printer_struct_vector_field@@Base+0x360>
   20c04:	ldr	r3, [fp, #-20]	; 0xffffffec
   20c08:	ldr	r3, [r3, #16]
   20c0c:	add	r1, r3, #1
   20c10:	ldr	r2, [fp, #-20]	; 0xffffffec
   20c14:	str	r1, [r2, #16]
   20c18:	cmp	r3, #0
   20c1c:	beq	20c3c <flatcc_json_printer_struct_vector_field@@Base+0x70>
   20c20:	ldr	r3, [fp, #-16]
   20c24:	ldr	r3, [r3, #20]
   20c28:	add	r1, r3, #1
   20c2c:	ldr	r2, [fp, #-16]
   20c30:	str	r1, [r2, #20]
   20c34:	mov	r2, #44	; 0x2c
   20c38:	strb	r2, [r3]
   20c3c:	ldr	r0, [fp, #-8]
   20c40:	bl	197f8 <flatcc_json_printer_error_string@@Base+0x8c>
   20c44:	str	r0, [fp, #-8]
   20c48:	ldr	r0, [fp, #-8]
   20c4c:	bl	152ac <main@@Base+0x514>
   20c50:	str	r0, [fp, #-12]
   20c54:	ldr	r3, [fp, #-8]
   20c58:	add	r3, r3, #4
   20c5c:	str	r3, [fp, #-8]
   20c60:	ldr	r3, [fp, #4]
   20c64:	mov	r2, r3
   20c68:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20c6c:	ldr	r0, [fp, #-16]
   20c70:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   20c74:	ldr	r3, [fp, #-16]
   20c78:	ldr	r3, [r3, #32]
   20c7c:	add	r2, r3, #1
   20c80:	ldr	r3, [fp, #-16]
   20c84:	str	r2, [r3, #32]
   20c88:	ldr	r3, [fp, #-16]
   20c8c:	ldr	r3, [r3, #20]
   20c90:	add	r1, r3, #1
   20c94:	ldr	r2, [fp, #-16]
   20c98:	str	r1, [r2, #20]
   20c9c:	mov	r2, #91	; 0x5b
   20ca0:	strb	r2, [r3]
   20ca4:	ldr	r3, [fp, #-12]
   20ca8:	cmp	r3, #0
   20cac:	beq	20eb4 <flatcc_json_printer_struct_vector_field@@Base+0x2e8>
   20cb0:	ldr	r3, [fp, #-16]
   20cb4:	ldrb	r3, [r3, #25]
   20cb8:	cmp	r3, #0
   20cbc:	beq	20ce8 <flatcc_json_printer_struct_vector_field@@Base+0x11c>
   20cc0:	ldr	r3, [fp, #-16]
   20cc4:	ldr	r3, [r3, #20]
   20cc8:	add	r1, r3, #1
   20ccc:	ldr	r2, [fp, #-16]
   20cd0:	str	r1, [r2, #20]
   20cd4:	mov	r2, #10
   20cd8:	strb	r2, [r3]
   20cdc:	ldr	r0, [fp, #-16]
   20ce0:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   20ce4:	b	20cf0 <flatcc_json_printer_struct_vector_field@@Base+0x124>
   20ce8:	ldr	r0, [fp, #-16]
   20cec:	bl	154c0 <main@@Base+0x728>
   20cf0:	ldr	r3, [fp, #-16]
   20cf4:	ldr	r3, [r3, #32]
   20cf8:	add	r2, r3, #1
   20cfc:	ldr	r3, [fp, #-16]
   20d00:	str	r2, [r3, #32]
   20d04:	ldr	r3, [fp, #-16]
   20d08:	ldr	r3, [r3, #20]
   20d0c:	add	r1, r3, #1
   20d10:	ldr	r2, [fp, #-16]
   20d14:	str	r1, [r2, #20]
   20d18:	mov	r2, #123	; 0x7b
   20d1c:	strb	r2, [r3]
   20d20:	ldr	r3, [fp, #12]
   20d24:	ldr	r1, [fp, #-8]
   20d28:	ldr	r0, [fp, #-16]
   20d2c:	blx	r3
   20d30:	ldr	r3, [fp, #-16]
   20d34:	ldrb	r3, [r3, #25]
   20d38:	cmp	r3, #0
   20d3c:	beq	20d78 <flatcc_json_printer_struct_vector_field@@Base+0x1ac>
   20d40:	ldr	r3, [fp, #-16]
   20d44:	ldr	r3, [r3, #20]
   20d48:	add	r1, r3, #1
   20d4c:	ldr	r2, [fp, #-16]
   20d50:	str	r1, [r2, #20]
   20d54:	mov	r2, #10
   20d58:	strb	r2, [r3]
   20d5c:	ldr	r3, [fp, #-16]
   20d60:	ldr	r3, [r3, #32]
   20d64:	sub	r2, r3, #1
   20d68:	ldr	r3, [fp, #-16]
   20d6c:	str	r2, [r3, #32]
   20d70:	ldr	r0, [fp, #-16]
   20d74:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   20d78:	ldr	r3, [fp, #-16]
   20d7c:	ldr	r3, [r3, #20]
   20d80:	add	r1, r3, #1
   20d84:	ldr	r2, [fp, #-16]
   20d88:	str	r1, [r2, #20]
   20d8c:	mov	r2, #125	; 0x7d
   20d90:	strb	r2, [r3]
   20d94:	ldr	r3, [fp, #-12]
   20d98:	sub	r3, r3, #1
   20d9c:	str	r3, [fp, #-12]
   20da0:	b	20eb4 <flatcc_json_printer_struct_vector_field@@Base+0x2e8>
   20da4:	ldr	r2, [fp, #-8]
   20da8:	ldr	r3, [fp, #8]
   20dac:	add	r3, r2, r3
   20db0:	str	r3, [fp, #-8]
   20db4:	ldr	r3, [fp, #-16]
   20db8:	ldr	r3, [r3, #20]
   20dbc:	add	r1, r3, #1
   20dc0:	ldr	r2, [fp, #-16]
   20dc4:	str	r1, [r2, #20]
   20dc8:	mov	r2, #44	; 0x2c
   20dcc:	strb	r2, [r3]
   20dd0:	ldr	r3, [fp, #-16]
   20dd4:	ldrb	r3, [r3, #25]
   20dd8:	cmp	r3, #0
   20ddc:	beq	20e08 <flatcc_json_printer_struct_vector_field@@Base+0x23c>
   20de0:	ldr	r3, [fp, #-16]
   20de4:	ldr	r3, [r3, #20]
   20de8:	add	r1, r3, #1
   20dec:	ldr	r2, [fp, #-16]
   20df0:	str	r1, [r2, #20]
   20df4:	mov	r2, #10
   20df8:	strb	r2, [r3]
   20dfc:	ldr	r0, [fp, #-16]
   20e00:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   20e04:	b	20e10 <flatcc_json_printer_struct_vector_field@@Base+0x244>
   20e08:	ldr	r0, [fp, #-16]
   20e0c:	bl	154c0 <main@@Base+0x728>
   20e10:	ldr	r3, [fp, #-16]
   20e14:	ldr	r3, [r3, #32]
   20e18:	add	r2, r3, #1
   20e1c:	ldr	r3, [fp, #-16]
   20e20:	str	r2, [r3, #32]
   20e24:	ldr	r3, [fp, #-16]
   20e28:	ldr	r3, [r3, #20]
   20e2c:	add	r1, r3, #1
   20e30:	ldr	r2, [fp, #-16]
   20e34:	str	r1, [r2, #20]
   20e38:	mov	r2, #123	; 0x7b
   20e3c:	strb	r2, [r3]
   20e40:	ldr	r3, [fp, #12]
   20e44:	ldr	r1, [fp, #-8]
   20e48:	ldr	r0, [fp, #-16]
   20e4c:	blx	r3
   20e50:	ldr	r3, [fp, #-16]
   20e54:	ldrb	r3, [r3, #25]
   20e58:	cmp	r3, #0
   20e5c:	beq	20e98 <flatcc_json_printer_struct_vector_field@@Base+0x2cc>
   20e60:	ldr	r3, [fp, #-16]
   20e64:	ldr	r3, [r3, #20]
   20e68:	add	r1, r3, #1
   20e6c:	ldr	r2, [fp, #-16]
   20e70:	str	r1, [r2, #20]
   20e74:	mov	r2, #10
   20e78:	strb	r2, [r3]
   20e7c:	ldr	r3, [fp, #-16]
   20e80:	ldr	r3, [r3, #32]
   20e84:	sub	r2, r3, #1
   20e88:	ldr	r3, [fp, #-16]
   20e8c:	str	r2, [r3, #32]
   20e90:	ldr	r0, [fp, #-16]
   20e94:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   20e98:	ldr	r3, [fp, #-16]
   20e9c:	ldr	r3, [r3, #20]
   20ea0:	add	r1, r3, #1
   20ea4:	ldr	r2, [fp, #-16]
   20ea8:	str	r1, [r2, #20]
   20eac:	mov	r2, #125	; 0x7d
   20eb0:	strb	r2, [r3]
   20eb4:	ldr	r3, [fp, #-12]
   20eb8:	sub	r2, r3, #1
   20ebc:	str	r2, [fp, #-12]
   20ec0:	cmp	r3, #0
   20ec4:	bne	20da4 <flatcc_json_printer_struct_vector_field@@Base+0x1d8>
   20ec8:	ldr	r3, [fp, #-16]
   20ecc:	ldrb	r3, [r3, #25]
   20ed0:	cmp	r3, #0
   20ed4:	beq	20f10 <flatcc_json_printer_struct_vector_field@@Base+0x344>
   20ed8:	ldr	r3, [fp, #-16]
   20edc:	ldr	r3, [r3, #20]
   20ee0:	add	r1, r3, #1
   20ee4:	ldr	r2, [fp, #-16]
   20ee8:	str	r1, [r2, #20]
   20eec:	mov	r2, #10
   20ef0:	strb	r2, [r3]
   20ef4:	ldr	r3, [fp, #-16]
   20ef8:	ldr	r3, [r3, #32]
   20efc:	sub	r2, r3, #1
   20f00:	ldr	r3, [fp, #-16]
   20f04:	str	r2, [r3, #32]
   20f08:	ldr	r0, [fp, #-16]
   20f0c:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   20f10:	ldr	r3, [fp, #-16]
   20f14:	ldr	r3, [r3, #20]
   20f18:	add	r1, r3, #1
   20f1c:	ldr	r2, [fp, #-16]
   20f20:	str	r1, [r2, #20]
   20f24:	mov	r2, #93	; 0x5d
   20f28:	strb	r2, [r3]
   20f2c:	nop			; (mov r0, r0)
   20f30:	sub	sp, fp, #4
   20f34:	pop	{fp, pc}

00020f38 <flatcc_json_printer_string_vector_field@@Base>:
   20f38:	push	{fp, lr}
   20f3c:	add	fp, sp, #4
   20f40:	sub	sp, sp, #24
   20f44:	str	r0, [fp, #-16]
   20f48:	str	r1, [fp, #-20]	; 0xffffffec
   20f4c:	str	r2, [fp, #-24]	; 0xffffffe8
   20f50:	str	r3, [fp, #-28]	; 0xffffffe4
   20f54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20f58:	ldr	r0, [fp, #-20]	; 0xffffffec
   20f5c:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   20f60:	str	r0, [fp, #-8]
   20f64:	ldr	r3, [fp, #-8]
   20f68:	cmp	r3, #0
   20f6c:	beq	2117c <flatcc_json_printer_string_vector_field@@Base+0x244>
   20f70:	ldr	r3, [fp, #-20]	; 0xffffffec
   20f74:	ldr	r3, [r3, #16]
   20f78:	add	r1, r3, #1
   20f7c:	ldr	r2, [fp, #-20]	; 0xffffffec
   20f80:	str	r1, [r2, #16]
   20f84:	cmp	r3, #0
   20f88:	beq	20fa8 <flatcc_json_printer_string_vector_field@@Base+0x70>
   20f8c:	ldr	r3, [fp, #-16]
   20f90:	ldr	r3, [r3, #20]
   20f94:	add	r1, r3, #1
   20f98:	ldr	r2, [fp, #-16]
   20f9c:	str	r1, [r2, #20]
   20fa0:	mov	r2, #44	; 0x2c
   20fa4:	strb	r2, [r3]
   20fa8:	ldr	r0, [fp, #-8]
   20fac:	bl	197f8 <flatcc_json_printer_error_string@@Base+0x8c>
   20fb0:	str	r0, [fp, #-8]
   20fb4:	ldr	r0, [fp, #-8]
   20fb8:	bl	152ac <main@@Base+0x514>
   20fbc:	str	r0, [fp, #-12]
   20fc0:	ldr	r3, [fp, #-8]
   20fc4:	add	r3, r3, #4
   20fc8:	str	r3, [fp, #-8]
   20fcc:	ldr	r3, [fp, #4]
   20fd0:	mov	r2, r3
   20fd4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20fd8:	ldr	r0, [fp, #-16]
   20fdc:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   20fe0:	ldr	r3, [fp, #-16]
   20fe4:	ldr	r3, [r3, #32]
   20fe8:	add	r2, r3, #1
   20fec:	ldr	r3, [fp, #-16]
   20ff0:	str	r2, [r3, #32]
   20ff4:	ldr	r3, [fp, #-16]
   20ff8:	ldr	r3, [r3, #20]
   20ffc:	add	r1, r3, #1
   21000:	ldr	r2, [fp, #-16]
   21004:	str	r1, [r2, #20]
   21008:	mov	r2, #91	; 0x5b
   2100c:	strb	r2, [r3]
   21010:	ldr	r3, [fp, #-12]
   21014:	cmp	r3, #0
   21018:	beq	21104 <flatcc_json_printer_string_vector_field@@Base+0x1cc>
   2101c:	ldr	r3, [fp, #-16]
   21020:	ldrb	r3, [r3, #25]
   21024:	cmp	r3, #0
   21028:	beq	21054 <flatcc_json_printer_string_vector_field@@Base+0x11c>
   2102c:	ldr	r3, [fp, #-16]
   21030:	ldr	r3, [r3, #20]
   21034:	add	r1, r3, #1
   21038:	ldr	r2, [fp, #-16]
   2103c:	str	r1, [r2, #20]
   21040:	mov	r2, #10
   21044:	strb	r2, [r3]
   21048:	ldr	r0, [fp, #-16]
   2104c:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   21050:	b	2105c <flatcc_json_printer_string_vector_field@@Base+0x124>
   21054:	ldr	r0, [fp, #-16]
   21058:	bl	154c0 <main@@Base+0x728>
   2105c:	ldr	r0, [fp, #-8]
   21060:	bl	197f8 <flatcc_json_printer_error_string@@Base+0x8c>
   21064:	mov	r3, r0
   21068:	mov	r1, r3
   2106c:	ldr	r0, [fp, #-16]
   21070:	bl	1aa58 <flatcc_json_printer_enum_flag@@Base+0x74>
   21074:	ldr	r3, [fp, #-12]
   21078:	sub	r3, r3, #1
   2107c:	str	r3, [fp, #-12]
   21080:	b	21104 <flatcc_json_printer_string_vector_field@@Base+0x1cc>
   21084:	ldr	r3, [fp, #-8]
   21088:	add	r3, r3, #4
   2108c:	str	r3, [fp, #-8]
   21090:	ldr	r3, [fp, #-16]
   21094:	ldr	r3, [r3, #20]
   21098:	add	r1, r3, #1
   2109c:	ldr	r2, [fp, #-16]
   210a0:	str	r1, [r2, #20]
   210a4:	mov	r2, #44	; 0x2c
   210a8:	strb	r2, [r3]
   210ac:	ldr	r3, [fp, #-16]
   210b0:	ldrb	r3, [r3, #25]
   210b4:	cmp	r3, #0
   210b8:	beq	210e4 <flatcc_json_printer_string_vector_field@@Base+0x1ac>
   210bc:	ldr	r3, [fp, #-16]
   210c0:	ldr	r3, [r3, #20]
   210c4:	add	r1, r3, #1
   210c8:	ldr	r2, [fp, #-16]
   210cc:	str	r1, [r2, #20]
   210d0:	mov	r2, #10
   210d4:	strb	r2, [r3]
   210d8:	ldr	r0, [fp, #-16]
   210dc:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   210e0:	b	210ec <flatcc_json_printer_string_vector_field@@Base+0x1b4>
   210e4:	ldr	r0, [fp, #-16]
   210e8:	bl	154c0 <main@@Base+0x728>
   210ec:	ldr	r0, [fp, #-8]
   210f0:	bl	197f8 <flatcc_json_printer_error_string@@Base+0x8c>
   210f4:	mov	r3, r0
   210f8:	mov	r1, r3
   210fc:	ldr	r0, [fp, #-16]
   21100:	bl	1aa58 <flatcc_json_printer_enum_flag@@Base+0x74>
   21104:	ldr	r3, [fp, #-12]
   21108:	sub	r2, r3, #1
   2110c:	str	r2, [fp, #-12]
   21110:	cmp	r3, #0
   21114:	bne	21084 <flatcc_json_printer_string_vector_field@@Base+0x14c>
   21118:	ldr	r3, [fp, #-16]
   2111c:	ldrb	r3, [r3, #25]
   21120:	cmp	r3, #0
   21124:	beq	21160 <flatcc_json_printer_string_vector_field@@Base+0x228>
   21128:	ldr	r3, [fp, #-16]
   2112c:	ldr	r3, [r3, #20]
   21130:	add	r1, r3, #1
   21134:	ldr	r2, [fp, #-16]
   21138:	str	r1, [r2, #20]
   2113c:	mov	r2, #10
   21140:	strb	r2, [r3]
   21144:	ldr	r3, [fp, #-16]
   21148:	ldr	r3, [r3, #32]
   2114c:	sub	r2, r3, #1
   21150:	ldr	r3, [fp, #-16]
   21154:	str	r2, [r3, #32]
   21158:	ldr	r0, [fp, #-16]
   2115c:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   21160:	ldr	r3, [fp, #-16]
   21164:	ldr	r3, [r3, #20]
   21168:	add	r1, r3, #1
   2116c:	ldr	r2, [fp, #-16]
   21170:	str	r1, [r2, #20]
   21174:	mov	r2, #93	; 0x5d
   21178:	strb	r2, [r3]
   2117c:	nop			; (mov r0, r0)
   21180:	sub	sp, fp, #4
   21184:	pop	{fp, pc}

00021188 <flatcc_json_printer_table_vector_field@@Base>:
   21188:	push	{fp, lr}
   2118c:	add	fp, sp, #4
   21190:	sub	sp, sp, #24
   21194:	str	r0, [fp, #-16]
   21198:	str	r1, [fp, #-20]	; 0xffffffec
   2119c:	str	r2, [fp, #-24]	; 0xffffffe8
   211a0:	str	r3, [fp, #-28]	; 0xffffffe4
   211a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   211a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   211ac:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   211b0:	str	r0, [fp, #-8]
   211b4:	ldr	r3, [fp, #-8]
   211b8:	cmp	r3, #0
   211bc:	beq	2135c <flatcc_json_printer_table_vector_field@@Base+0x1d4>
   211c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   211c4:	ldr	r3, [r3, #16]
   211c8:	add	r1, r3, #1
   211cc:	ldr	r2, [fp, #-20]	; 0xffffffec
   211d0:	str	r1, [r2, #16]
   211d4:	cmp	r3, #0
   211d8:	beq	211f8 <flatcc_json_printer_table_vector_field@@Base+0x70>
   211dc:	ldr	r3, [fp, #-16]
   211e0:	ldr	r3, [r3, #20]
   211e4:	add	r1, r3, #1
   211e8:	ldr	r2, [fp, #-16]
   211ec:	str	r1, [r2, #20]
   211f0:	mov	r2, #44	; 0x2c
   211f4:	strb	r2, [r3]
   211f8:	ldr	r0, [fp, #-8]
   211fc:	bl	197f8 <flatcc_json_printer_error_string@@Base+0x8c>
   21200:	str	r0, [fp, #-8]
   21204:	ldr	r0, [fp, #-8]
   21208:	bl	152ac <main@@Base+0x514>
   2120c:	str	r0, [fp, #-12]
   21210:	ldr	r3, [fp, #-8]
   21214:	add	r3, r3, #4
   21218:	str	r3, [fp, #-8]
   2121c:	ldr	r3, [fp, #4]
   21220:	mov	r2, r3
   21224:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21228:	ldr	r0, [fp, #-16]
   2122c:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   21230:	ldr	r3, [fp, #-16]
   21234:	ldr	r3, [r3, #32]
   21238:	add	r2, r3, #1
   2123c:	ldr	r3, [fp, #-16]
   21240:	str	r2, [r3, #32]
   21244:	ldr	r3, [fp, #-16]
   21248:	ldr	r3, [r3, #20]
   2124c:	add	r1, r3, #1
   21250:	ldr	r2, [fp, #-16]
   21254:	str	r1, [r2, #20]
   21258:	mov	r2, #91	; 0x5b
   2125c:	strb	r2, [r3]
   21260:	ldr	r3, [fp, #-12]
   21264:	cmp	r3, #0
   21268:	beq	212e4 <flatcc_json_printer_table_vector_field@@Base+0x15c>
   2126c:	ldr	r0, [fp, #-8]
   21270:	bl	197f8 <flatcc_json_printer_error_string@@Base+0x8c>
   21274:	mov	r1, r0
   21278:	ldr	r3, [fp, #-20]	; 0xffffffec
   2127c:	ldr	r2, [r3, #12]
   21280:	ldr	r3, [fp, #8]
   21284:	ldr	r0, [fp, #-16]
   21288:	bl	1aaa0 <flatcc_json_printer_enum_flag@@Base+0xbc>
   2128c:	ldr	r3, [fp, #-12]
   21290:	sub	r3, r3, #1
   21294:	str	r3, [fp, #-12]
   21298:	b	212e4 <flatcc_json_printer_table_vector_field@@Base+0x15c>
   2129c:	ldr	r3, [fp, #-8]
   212a0:	add	r3, r3, #4
   212a4:	str	r3, [fp, #-8]
   212a8:	ldr	r3, [fp, #-16]
   212ac:	ldr	r3, [r3, #20]
   212b0:	add	r1, r3, #1
   212b4:	ldr	r2, [fp, #-16]
   212b8:	str	r1, [r2, #20]
   212bc:	mov	r2, #44	; 0x2c
   212c0:	strb	r2, [r3]
   212c4:	ldr	r0, [fp, #-8]
   212c8:	bl	197f8 <flatcc_json_printer_error_string@@Base+0x8c>
   212cc:	mov	r1, r0
   212d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   212d4:	ldr	r2, [r3, #12]
   212d8:	ldr	r3, [fp, #8]
   212dc:	ldr	r0, [fp, #-16]
   212e0:	bl	1aaa0 <flatcc_json_printer_enum_flag@@Base+0xbc>
   212e4:	ldr	r3, [fp, #-12]
   212e8:	sub	r2, r3, #1
   212ec:	str	r2, [fp, #-12]
   212f0:	cmp	r3, #0
   212f4:	bne	2129c <flatcc_json_printer_table_vector_field@@Base+0x114>
   212f8:	ldr	r3, [fp, #-16]
   212fc:	ldrb	r3, [r3, #25]
   21300:	cmp	r3, #0
   21304:	beq	21340 <flatcc_json_printer_table_vector_field@@Base+0x1b8>
   21308:	ldr	r3, [fp, #-16]
   2130c:	ldr	r3, [r3, #20]
   21310:	add	r1, r3, #1
   21314:	ldr	r2, [fp, #-16]
   21318:	str	r1, [r2, #20]
   2131c:	mov	r2, #10
   21320:	strb	r2, [r3]
   21324:	ldr	r3, [fp, #-16]
   21328:	ldr	r3, [r3, #32]
   2132c:	sub	r2, r3, #1
   21330:	ldr	r3, [fp, #-16]
   21334:	str	r2, [r3, #32]
   21338:	ldr	r0, [fp, #-16]
   2133c:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   21340:	ldr	r3, [fp, #-16]
   21344:	ldr	r3, [r3, #20]
   21348:	add	r1, r3, #1
   2134c:	ldr	r2, [fp, #-16]
   21350:	str	r1, [r2, #20]
   21354:	mov	r2, #93	; 0x5d
   21358:	strb	r2, [r3]
   2135c:	nop			; (mov r0, r0)
   21360:	sub	sp, fp, #4
   21364:	pop	{fp, pc}

00021368 <flatcc_json_printer_union_vector_field@@Base>:
   21368:	push	{fp, lr}
   2136c:	add	fp, sp, #4
   21370:	sub	sp, sp, #160	; 0xa0
   21374:	str	r0, [fp, #-144]	; 0xffffff70
   21378:	str	r1, [fp, #-148]	; 0xffffff6c
   2137c:	str	r2, [fp, #-152]	; 0xffffff68
   21380:	str	r3, [fp, #-156]	; 0xffffff64
   21384:	ldr	r3, [fp, #-152]	; 0xffffff68
   21388:	sub	r3, r3, #1
   2138c:	mov	r1, r3
   21390:	ldr	r0, [fp, #-148]	; 0xffffff6c
   21394:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   21398:	str	r0, [fp, #-20]	; 0xffffffec
   2139c:	ldr	r1, [fp, #-152]	; 0xffffff68
   213a0:	ldr	r0, [fp, #-148]	; 0xffffff6c
   213a4:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   213a8:	str	r0, [fp, #-8]
   213ac:	ldr	r3, [fp, #-148]	; 0xffffff6c
   213b0:	ldr	r3, [r3, #12]
   213b4:	str	r3, [fp, #-136]	; 0xffffff78
   213b8:	ldr	r3, [fp, #4]
   213bc:	cmp	r3, #100	; 0x64
   213c0:	ble	213f0 <flatcc_json_printer_union_vector_field@@Base+0x88>
   213c4:	mov	r1, #1
   213c8:	ldr	r0, [fp, #-144]	; 0xffffff70
   213cc:	bl	15458 <main@@Base+0x6c0>
   213d0:	ldr	r3, [pc, #916]	; 2176c <flatcc_json_printer_union_vector_field@@Base+0x404>
   213d4:	add	r3, pc, r3
   213d8:	ldr	r2, [pc, #912]	; 21770 <flatcc_json_printer_union_vector_field@@Base+0x408>
   213dc:	ldr	r1, [pc, #912]	; 21774 <flatcc_json_printer_union_vector_field@@Base+0x40c>
   213e0:	add	r1, pc, r1
   213e4:	ldr	r0, [pc, #908]	; 21778 <flatcc_json_printer_union_vector_field@@Base+0x410>
   213e8:	add	r0, pc, r0
   213ec:	bl	12528 <__assert_fail@plt>
   213f0:	ldr	r2, [fp, #4]
   213f4:	sub	r3, fp, #128	; 0x80
   213f8:	ldr	r1, [fp, #-156]	; 0xffffff64
   213fc:	mov	r0, r3
   21400:	bl	12444 <memcpy@plt>
   21404:	ldr	r3, [fp, #4]
   21408:	sub	r2, fp, #128	; 0x80
   2140c:	add	r3, r2, r3
   21410:	mov	r2, #5
   21414:	ldr	r1, [pc, #864]	; 2177c <flatcc_json_printer_union_vector_field@@Base+0x414>
   21418:	add	r1, pc, r1
   2141c:	mov	r0, r3
   21420:	bl	12444 <memcpy@plt>
   21424:	ldr	r3, [fp, #-8]
   21428:	cmp	r3, #0
   2142c:	beq	21760 <flatcc_json_printer_union_vector_field@@Base+0x3f8>
   21430:	ldr	r3, [fp, #-20]	; 0xffffffec
   21434:	cmp	r3, #0
   21438:	beq	21760 <flatcc_json_printer_union_vector_field@@Base+0x3f8>
   2143c:	ldr	r3, [fp, #-152]	; 0xffffff68
   21440:	sub	r1, r3, #1
   21444:	ldr	r3, [fp, #4]
   21448:	add	r3, r3, #5
   2144c:	sub	r0, fp, #128	; 0x80
   21450:	ldr	r2, [fp, #8]
   21454:	str	r2, [sp, #4]
   21458:	str	r3, [sp]
   2145c:	mov	r3, r0
   21460:	mov	r2, r1
   21464:	ldr	r1, [fp, #-148]	; 0xffffff6c
   21468:	ldr	r0, [fp, #-144]	; 0xffffff70
   2146c:	bl	1f1fc <flatcc_json_printer_utype_enum_vector_field@@Base>
   21470:	ldr	r3, [fp, #-148]	; 0xffffff6c
   21474:	ldr	r3, [r3, #16]
   21478:	add	r1, r3, #1
   2147c:	ldr	r2, [fp, #-148]	; 0xffffff6c
   21480:	str	r1, [r2, #16]
   21484:	cmp	r3, #0
   21488:	beq	214a8 <flatcc_json_printer_union_vector_field@@Base+0x140>
   2148c:	ldr	r3, [fp, #-144]	; 0xffffff70
   21490:	ldr	r3, [r3, #20]
   21494:	add	r1, r3, #1
   21498:	ldr	r2, [fp, #-144]	; 0xffffff70
   2149c:	str	r1, [r2, #20]
   214a0:	mov	r2, #44	; 0x2c
   214a4:	strb	r2, [r3]
   214a8:	ldr	r0, [fp, #-8]
   214ac:	bl	197f8 <flatcc_json_printer_error_string@@Base+0x8c>
   214b0:	str	r0, [fp, #-8]
   214b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   214b8:	bl	197f8 <flatcc_json_printer_error_string@@Base+0x8c>
   214bc:	str	r0, [fp, #-20]	; 0xffffffec
   214c0:	ldr	r0, [fp, #-8]
   214c4:	bl	152ac <main@@Base+0x514>
   214c8:	str	r0, [fp, #-16]
   214cc:	ldr	r3, [fp, #-8]
   214d0:	add	r3, r3, #4
   214d4:	str	r3, [fp, #-8]
   214d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   214dc:	add	r3, r3, #4
   214e0:	str	r3, [fp, #-20]	; 0xffffffec
   214e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   214e8:	str	r3, [fp, #-12]
   214ec:	ldr	r3, [fp, #4]
   214f0:	mov	r2, r3
   214f4:	ldr	r1, [fp, #-156]	; 0xffffff64
   214f8:	ldr	r0, [fp, #-144]	; 0xffffff70
   214fc:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   21500:	ldr	r3, [fp, #-144]	; 0xffffff70
   21504:	ldr	r3, [r3, #32]
   21508:	add	r2, r3, #1
   2150c:	ldr	r3, [fp, #-144]	; 0xffffff70
   21510:	str	r2, [r3, #32]
   21514:	ldr	r3, [fp, #-144]	; 0xffffff70
   21518:	ldr	r3, [r3, #20]
   2151c:	add	r1, r3, #1
   21520:	ldr	r2, [fp, #-144]	; 0xffffff70
   21524:	str	r1, [r2, #20]
   21528:	mov	r2, #91	; 0x5b
   2152c:	strb	r2, [r3]
   21530:	ldr	r3, [fp, #-16]
   21534:	cmp	r3, #0
   21538:	beq	216e8 <flatcc_json_printer_union_vector_field@@Base+0x380>
   2153c:	ldr	r0, [fp, #-12]
   21540:	bl	153b0 <main@@Base+0x618>
   21544:	mov	r3, r0
   21548:	strb	r3, [fp, #-21]	; 0xffffffeb
   2154c:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   21550:	cmp	r3, #0
   21554:	beq	21580 <flatcc_json_printer_union_vector_field@@Base+0x218>
   21558:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2155c:	strb	r3, [fp, #-132]	; 0xffffff7c
   21560:	ldr	r3, [fp, #-8]
   21564:	str	r3, [fp, #-140]	; 0xffffff74
   21568:	sub	r2, fp, #140	; 0x8c
   2156c:	ldr	r3, [fp, #12]
   21570:	mov	r1, r2
   21574:	ldr	r0, [fp, #-144]	; 0xffffff70
   21578:	blx	r3
   2157c:	b	215f0 <flatcc_json_printer_union_vector_field@@Base+0x288>
   21580:	ldr	r3, [fp, #-144]	; 0xffffff70
   21584:	ldr	r3, [r3, #20]
   21588:	add	r1, r3, #1
   2158c:	ldr	r2, [fp, #-144]	; 0xffffff70
   21590:	str	r1, [r2, #20]
   21594:	mov	r2, #110	; 0x6e
   21598:	strb	r2, [r3]
   2159c:	ldr	r3, [fp, #-144]	; 0xffffff70
   215a0:	ldr	r3, [r3, #20]
   215a4:	add	r1, r3, #1
   215a8:	ldr	r2, [fp, #-144]	; 0xffffff70
   215ac:	str	r1, [r2, #20]
   215b0:	mov	r2, #117	; 0x75
   215b4:	strb	r2, [r3]
   215b8:	ldr	r3, [fp, #-144]	; 0xffffff70
   215bc:	ldr	r3, [r3, #20]
   215c0:	add	r1, r3, #1
   215c4:	ldr	r2, [fp, #-144]	; 0xffffff70
   215c8:	str	r1, [r2, #20]
   215cc:	mov	r2, #108	; 0x6c
   215d0:	strb	r2, [r3]
   215d4:	ldr	r3, [fp, #-144]	; 0xffffff70
   215d8:	ldr	r3, [r3, #20]
   215dc:	add	r1, r3, #1
   215e0:	ldr	r2, [fp, #-144]	; 0xffffff70
   215e4:	str	r1, [r2, #20]
   215e8:	mov	r2, #108	; 0x6c
   215ec:	strb	r2, [r3]
   215f0:	ldr	r3, [fp, #-16]
   215f4:	sub	r3, r3, #1
   215f8:	str	r3, [fp, #-16]
   215fc:	b	216e8 <flatcc_json_printer_union_vector_field@@Base+0x380>
   21600:	ldr	r3, [fp, #-8]
   21604:	add	r3, r3, #4
   21608:	str	r3, [fp, #-8]
   2160c:	ldr	r3, [fp, #-12]
   21610:	add	r3, r3, #1
   21614:	str	r3, [fp, #-12]
   21618:	ldr	r0, [fp, #-12]
   2161c:	bl	153b0 <main@@Base+0x618>
   21620:	mov	r3, r0
   21624:	strb	r3, [fp, #-21]	; 0xffffffeb
   21628:	ldr	r3, [fp, #-144]	; 0xffffff70
   2162c:	ldr	r3, [r3, #20]
   21630:	add	r1, r3, #1
   21634:	ldr	r2, [fp, #-144]	; 0xffffff70
   21638:	str	r1, [r2, #20]
   2163c:	mov	r2, #44	; 0x2c
   21640:	strb	r2, [r3]
   21644:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   21648:	cmp	r3, #0
   2164c:	beq	21678 <flatcc_json_printer_union_vector_field@@Base+0x310>
   21650:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   21654:	strb	r3, [fp, #-132]	; 0xffffff7c
   21658:	ldr	r3, [fp, #-8]
   2165c:	str	r3, [fp, #-140]	; 0xffffff74
   21660:	sub	r2, fp, #140	; 0x8c
   21664:	ldr	r3, [fp, #12]
   21668:	mov	r1, r2
   2166c:	ldr	r0, [fp, #-144]	; 0xffffff70
   21670:	blx	r3
   21674:	b	216e8 <flatcc_json_printer_union_vector_field@@Base+0x380>
   21678:	ldr	r3, [fp, #-144]	; 0xffffff70
   2167c:	ldr	r3, [r3, #20]
   21680:	add	r1, r3, #1
   21684:	ldr	r2, [fp, #-144]	; 0xffffff70
   21688:	str	r1, [r2, #20]
   2168c:	mov	r2, #110	; 0x6e
   21690:	strb	r2, [r3]
   21694:	ldr	r3, [fp, #-144]	; 0xffffff70
   21698:	ldr	r3, [r3, #20]
   2169c:	add	r1, r3, #1
   216a0:	ldr	r2, [fp, #-144]	; 0xffffff70
   216a4:	str	r1, [r2, #20]
   216a8:	mov	r2, #117	; 0x75
   216ac:	strb	r2, [r3]
   216b0:	ldr	r3, [fp, #-144]	; 0xffffff70
   216b4:	ldr	r3, [r3, #20]
   216b8:	add	r1, r3, #1
   216bc:	ldr	r2, [fp, #-144]	; 0xffffff70
   216c0:	str	r1, [r2, #20]
   216c4:	mov	r2, #108	; 0x6c
   216c8:	strb	r2, [r3]
   216cc:	ldr	r3, [fp, #-144]	; 0xffffff70
   216d0:	ldr	r3, [r3, #20]
   216d4:	add	r1, r3, #1
   216d8:	ldr	r2, [fp, #-144]	; 0xffffff70
   216dc:	str	r1, [r2, #20]
   216e0:	mov	r2, #108	; 0x6c
   216e4:	strb	r2, [r3]
   216e8:	ldr	r3, [fp, #-16]
   216ec:	sub	r2, r3, #1
   216f0:	str	r2, [fp, #-16]
   216f4:	cmp	r3, #0
   216f8:	bne	21600 <flatcc_json_printer_union_vector_field@@Base+0x298>
   216fc:	ldr	r3, [fp, #-144]	; 0xffffff70
   21700:	ldrb	r3, [r3, #25]
   21704:	cmp	r3, #0
   21708:	beq	21744 <flatcc_json_printer_union_vector_field@@Base+0x3dc>
   2170c:	ldr	r3, [fp, #-144]	; 0xffffff70
   21710:	ldr	r3, [r3, #20]
   21714:	add	r1, r3, #1
   21718:	ldr	r2, [fp, #-144]	; 0xffffff70
   2171c:	str	r1, [r2, #20]
   21720:	mov	r2, #10
   21724:	strb	r2, [r3]
   21728:	ldr	r3, [fp, #-144]	; 0xffffff70
   2172c:	ldr	r3, [r3, #32]
   21730:	sub	r2, r3, #1
   21734:	ldr	r3, [fp, #-144]	; 0xffffff70
   21738:	str	r2, [r3, #32]
   2173c:	ldr	r0, [fp, #-144]	; 0xffffff70
   21740:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   21744:	ldr	r3, [fp, #-144]	; 0xffffff70
   21748:	ldr	r3, [r3, #20]
   2174c:	add	r1, r3, #1
   21750:	ldr	r2, [fp, #-144]	; 0xffffff70
   21754:	str	r1, [r2, #20]
   21758:	mov	r2, #93	; 0x5d
   2175c:	strb	r2, [r3]
   21760:	nop			; (mov r0, r0)
   21764:	sub	sp, fp, #4
   21768:	pop	{fp, pc}
   2176c:	andeq	r3, r0, r0, lsl r5
   21770:	andeq	r0, r0, fp, asr #6
   21774:	andeq	r2, r0, r0, ror #30
   21778:	andeq	r2, r0, r4, asr #31
   2177c:			; <UNDEFINED> instruction: 0x00002fb0

00021780 <flatcc_json_printer_table_field@@Base>:
   21780:	push	{fp, lr}
   21784:	add	fp, sp, #4
   21788:	sub	sp, sp, #24
   2178c:	str	r0, [fp, #-16]
   21790:	str	r1, [fp, #-20]	; 0xffffffec
   21794:	str	r2, [fp, #-24]	; 0xffffffe8
   21798:	str	r3, [fp, #-28]	; 0xffffffe4
   2179c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   217a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   217a4:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   217a8:	str	r0, [fp, #-8]
   217ac:	ldr	r3, [fp, #-8]
   217b0:	cmp	r3, #0
   217b4:	beq	21824 <flatcc_json_printer_table_field@@Base+0xa4>
   217b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   217bc:	ldr	r3, [r3, #16]
   217c0:	add	r1, r3, #1
   217c4:	ldr	r2, [fp, #-20]	; 0xffffffec
   217c8:	str	r1, [r2, #16]
   217cc:	cmp	r3, #0
   217d0:	beq	217f0 <flatcc_json_printer_table_field@@Base+0x70>
   217d4:	ldr	r3, [fp, #-16]
   217d8:	ldr	r3, [r3, #20]
   217dc:	add	r1, r3, #1
   217e0:	ldr	r2, [fp, #-16]
   217e4:	str	r1, [r2, #20]
   217e8:	mov	r2, #44	; 0x2c
   217ec:	strb	r2, [r3]
   217f0:	ldr	r3, [fp, #4]
   217f4:	mov	r2, r3
   217f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   217fc:	ldr	r0, [fp, #-16]
   21800:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   21804:	ldr	r0, [fp, #-8]
   21808:	bl	197f8 <flatcc_json_printer_error_string@@Base+0x8c>
   2180c:	mov	r1, r0
   21810:	ldr	r3, [fp, #-20]	; 0xffffffec
   21814:	ldr	r2, [r3, #12]
   21818:	ldr	r3, [fp, #8]
   2181c:	ldr	r0, [fp, #-16]
   21820:	bl	1aaa0 <flatcc_json_printer_enum_flag@@Base+0xbc>
   21824:	nop			; (mov r0, r0)
   21828:	sub	sp, fp, #4
   2182c:	pop	{fp, pc}

00021830 <flatcc_json_printer_union_field@@Base>:
   21830:	push	{fp, lr}
   21834:	add	fp, sp, #4
   21838:	sub	sp, sp, #40	; 0x28
   2183c:	str	r0, [fp, #-32]	; 0xffffffe0
   21840:	str	r1, [fp, #-36]	; 0xffffffdc
   21844:	str	r2, [fp, #-40]	; 0xffffffd8
   21848:	str	r3, [fp, #-44]	; 0xffffffd4
   2184c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   21850:	sub	r3, r3, #1
   21854:	mov	r1, r3
   21858:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2185c:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   21860:	str	r0, [fp, #-8]
   21864:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21868:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2186c:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   21870:	str	r0, [fp, #-12]
   21874:	ldr	r3, [fp, #-12]
   21878:	cmp	r3, #0
   2187c:	beq	21b2c <flatcc_json_printer_union_field@@Base+0x2fc>
   21880:	ldr	r3, [fp, #-8]
   21884:	cmp	r3, #0
   21888:	beq	21b2c <flatcc_json_printer_union_field@@Base+0x2fc>
   2188c:	ldr	r0, [fp, #-8]
   21890:	bl	153b0 <main@@Base+0x618>
   21894:	mov	r3, r0
   21898:	strb	r3, [fp, #-13]
   2189c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   218a0:	ldr	r3, [r3, #16]
   218a4:	add	r1, r3, #1
   218a8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   218ac:	str	r1, [r2, #16]
   218b0:	cmp	r3, #0
   218b4:	beq	218d4 <flatcc_json_printer_union_field@@Base+0xa4>
   218b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   218bc:	ldr	r3, [r3, #20]
   218c0:	add	r1, r3, #1
   218c4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   218c8:	str	r1, [r2, #20]
   218cc:	mov	r2, #44	; 0x2c
   218d0:	strb	r2, [r3]
   218d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   218d8:	ldrb	r3, [r3, #25]
   218dc:	cmp	r3, #0
   218e0:	beq	2190c <flatcc_json_printer_union_field@@Base+0xdc>
   218e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   218e8:	ldr	r3, [r3, #20]
   218ec:	add	r1, r3, #1
   218f0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   218f4:	str	r1, [r2, #20]
   218f8:	mov	r2, #10
   218fc:	strb	r2, [r3]
   21900:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21904:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   21908:	b	21914 <flatcc_json_printer_union_field@@Base+0xe4>
   2190c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21910:	bl	154c0 <main@@Base+0x728>
   21914:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21918:	ldr	r3, [r3, #20]
   2191c:	mov	r2, #34	; 0x22
   21920:	strb	r2, [r3]
   21924:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21928:	ldr	r3, [r3, #20]
   2192c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   21930:	ldrb	r2, [r2, #26]
   21934:	cmp	r2, #0
   21938:	moveq	r2, #1
   2193c:	movne	r2, #0
   21940:	uxtb	r2, r2
   21944:	add	r2, r3, r2
   21948:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2194c:	str	r2, [r3, #20]
   21950:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21954:	ldr	r2, [r3, #20]
   21958:	ldr	r3, [fp, #4]
   2195c:	add	r2, r2, r3
   21960:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21964:	ldr	r3, [r3, #16]
   21968:	cmp	r2, r3
   2196c:	bcs	219a4 <flatcc_json_printer_union_field@@Base+0x174>
   21970:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21974:	ldr	r3, [r3, #20]
   21978:	ldr	r2, [fp, #4]
   2197c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   21980:	mov	r0, r3
   21984:	bl	12444 <memcpy@plt>
   21988:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2198c:	ldr	r2, [r3, #20]
   21990:	ldr	r3, [fp, #4]
   21994:	add	r2, r2, r3
   21998:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2199c:	str	r2, [r3, #20]
   219a0:	b	219b8 <flatcc_json_printer_union_field@@Base+0x188>
   219a4:	ldr	r3, [fp, #4]
   219a8:	mov	r2, r3
   219ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   219b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   219b4:	bl	19af8 <flatcc_json_printer_fmt_bool@@Base+0x1a0>
   219b8:	mov	r2, #5
   219bc:	ldr	r3, [pc, #372]	; 21b38 <flatcc_json_printer_union_field@@Base+0x308>
   219c0:	add	r3, pc, r3
   219c4:	mov	r1, r3
   219c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   219cc:	bl	19af8 <flatcc_json_printer_fmt_bool@@Base+0x1a0>
   219d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   219d4:	ldr	r3, [r3, #20]
   219d8:	mov	r2, #34	; 0x22
   219dc:	strb	r2, [r3]
   219e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   219e4:	ldr	r3, [r3, #20]
   219e8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   219ec:	ldrb	r2, [r2, #26]
   219f0:	cmp	r2, #0
   219f4:	moveq	r2, #1
   219f8:	movne	r2, #0
   219fc:	uxtb	r2, r2
   21a00:	add	r2, r3, r2
   21a04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21a08:	str	r2, [r3, #20]
   21a0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21a10:	ldr	r3, [r3, #20]
   21a14:	add	r1, r3, #1
   21a18:	ldr	r2, [fp, #-32]	; 0xffffffe0
   21a1c:	str	r1, [r2, #20]
   21a20:	mov	r2, #58	; 0x3a
   21a24:	strb	r2, [r3]
   21a28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21a2c:	ldr	r3, [r3, #20]
   21a30:	mov	r2, #32
   21a34:	strb	r2, [r3]
   21a38:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21a3c:	ldr	r3, [r3, #20]
   21a40:	ldr	r2, [fp, #-32]	; 0xffffffe0
   21a44:	ldrb	r2, [r2, #25]
   21a48:	cmp	r2, #0
   21a4c:	movne	r2, #1
   21a50:	moveq	r2, #0
   21a54:	uxtb	r2, r2
   21a58:	add	r2, r3, r2
   21a5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21a60:	str	r2, [r3, #20]
   21a64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21a68:	ldrb	r3, [r3, #27]
   21a6c:	cmp	r3, #0
   21a70:	beq	21aa8 <flatcc_json_printer_union_field@@Base+0x278>
   21a74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21a78:	ldr	r2, [r3, #20]
   21a7c:	ldrb	r3, [fp, #-13]
   21a80:	mov	r1, r2
   21a84:	mov	r0, r3
   21a88:	bl	15578 <main@@Base+0x7e0>
   21a8c:	mov	r2, r0
   21a90:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21a94:	ldr	r3, [r3, #20]
   21a98:	add	r2, r3, r2
   21a9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21aa0:	str	r2, [r3, #20]
   21aa4:	b	21abc <flatcc_json_printer_union_field@@Base+0x28c>
   21aa8:	ldrb	r2, [fp, #-13]
   21aac:	ldr	r3, [fp, #8]
   21ab0:	mov	r1, r2
   21ab4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21ab8:	blx	r3
   21abc:	ldrb	r3, [fp, #-13]
   21ac0:	cmp	r3, #0
   21ac4:	beq	21b30 <flatcc_json_printer_union_field@@Base+0x300>
   21ac8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21acc:	ldr	r3, [r3, #20]
   21ad0:	add	r1, r3, #1
   21ad4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   21ad8:	str	r1, [r2, #20]
   21adc:	mov	r2, #44	; 0x2c
   21ae0:	strb	r2, [r3]
   21ae4:	ldr	r3, [fp, #4]
   21ae8:	mov	r2, r3
   21aec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   21af0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21af4:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   21af8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21afc:	ldr	r3, [r3, #12]
   21b00:	str	r3, [fp, #-24]	; 0xffffffe8
   21b04:	ldrb	r3, [fp, #-13]
   21b08:	strb	r3, [fp, #-20]	; 0xffffffec
   21b0c:	ldr	r3, [fp, #-12]
   21b10:	str	r3, [fp, #-28]	; 0xffffffe4
   21b14:	sub	r2, fp, #28
   21b18:	ldr	r3, [fp, #12]
   21b1c:	mov	r1, r2
   21b20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21b24:	blx	r3
   21b28:	b	21b30 <flatcc_json_printer_union_field@@Base+0x300>
   21b2c:	nop			; (mov r0, r0)
   21b30:	sub	sp, fp, #4
   21b34:	pop	{fp, pc}
   21b38:	andeq	r2, r0, r8, lsl #20

00021b3c <flatcc_json_printer_union_table@@Base>:
   21b3c:	push	{fp, lr}
   21b40:	add	fp, sp, #4
   21b44:	sub	sp, sp, #16
   21b48:	str	r0, [fp, #-8]
   21b4c:	str	r1, [fp, #-12]
   21b50:	str	r2, [fp, #-16]
   21b54:	ldr	r3, [fp, #-12]
   21b58:	ldr	r3, [r3]
   21b5c:	mov	r0, r3
   21b60:	bl	197f8 <flatcc_json_printer_error_string@@Base+0x8c>
   21b64:	mov	r1, r0
   21b68:	ldr	r3, [fp, #-12]
   21b6c:	ldr	r2, [r3, #4]
   21b70:	ldr	r3, [fp, #-16]
   21b74:	ldr	r0, [fp, #-8]
   21b78:	bl	1aaa0 <flatcc_json_printer_enum_flag@@Base+0xbc>
   21b7c:	nop			; (mov r0, r0)
   21b80:	sub	sp, fp, #4
   21b84:	pop	{fp, pc}

00021b88 <flatcc_json_printer_union_struct@@Base>:
   21b88:	push	{fp, lr}
   21b8c:	add	fp, sp, #4
   21b90:	sub	sp, sp, #16
   21b94:	str	r0, [fp, #-8]
   21b98:	str	r1, [fp, #-12]
   21b9c:	str	r2, [fp, #-16]
   21ba0:	ldr	r3, [fp, #-8]
   21ba4:	ldr	r3, [r3, #32]
   21ba8:	add	r2, r3, #1
   21bac:	ldr	r3, [fp, #-8]
   21bb0:	str	r2, [r3, #32]
   21bb4:	ldr	r3, [fp, #-8]
   21bb8:	ldr	r3, [r3, #20]
   21bbc:	add	r1, r3, #1
   21bc0:	ldr	r2, [fp, #-8]
   21bc4:	str	r1, [r2, #20]
   21bc8:	mov	r2, #123	; 0x7b
   21bcc:	strb	r2, [r3]
   21bd0:	ldr	r3, [fp, #-12]
   21bd4:	ldr	r3, [r3]
   21bd8:	mov	r0, r3
   21bdc:	bl	197f8 <flatcc_json_printer_error_string@@Base+0x8c>
   21be0:	mov	r2, r0
   21be4:	ldr	r3, [fp, #-16]
   21be8:	mov	r1, r2
   21bec:	ldr	r0, [fp, #-8]
   21bf0:	blx	r3
   21bf4:	ldr	r3, [fp, #-8]
   21bf8:	ldrb	r3, [r3, #25]
   21bfc:	cmp	r3, #0
   21c00:	beq	21c3c <flatcc_json_printer_union_struct@@Base+0xb4>
   21c04:	ldr	r3, [fp, #-8]
   21c08:	ldr	r3, [r3, #20]
   21c0c:	add	r1, r3, #1
   21c10:	ldr	r2, [fp, #-8]
   21c14:	str	r1, [r2, #20]
   21c18:	mov	r2, #10
   21c1c:	strb	r2, [r3]
   21c20:	ldr	r3, [fp, #-8]
   21c24:	ldr	r3, [r3, #32]
   21c28:	sub	r2, r3, #1
   21c2c:	ldr	r3, [fp, #-8]
   21c30:	str	r2, [r3, #32]
   21c34:	ldr	r0, [fp, #-8]
   21c38:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   21c3c:	ldr	r3, [fp, #-8]
   21c40:	ldr	r3, [r3, #20]
   21c44:	add	r1, r3, #1
   21c48:	ldr	r2, [fp, #-8]
   21c4c:	str	r1, [r2, #20]
   21c50:	mov	r2, #125	; 0x7d
   21c54:	strb	r2, [r3]
   21c58:	nop			; (mov r0, r0)
   21c5c:	sub	sp, fp, #4
   21c60:	pop	{fp, pc}

00021c64 <flatcc_json_printer_union_string@@Base>:
   21c64:	push	{fp, lr}
   21c68:	add	fp, sp, #4
   21c6c:	sub	sp, sp, #8
   21c70:	str	r0, [fp, #-8]
   21c74:	str	r1, [fp, #-12]
   21c78:	ldr	r3, [fp, #-12]
   21c7c:	ldr	r3, [r3]
   21c80:	mov	r0, r3
   21c84:	bl	197f8 <flatcc_json_printer_error_string@@Base+0x8c>
   21c88:	mov	r3, r0
   21c8c:	mov	r1, r3
   21c90:	ldr	r0, [fp, #-8]
   21c94:	bl	1aa58 <flatcc_json_printer_enum_flag@@Base+0x74>
   21c98:	nop			; (mov r0, r0)
   21c9c:	sub	sp, fp, #4
   21ca0:	pop	{fp, pc}

00021ca4 <flatcc_json_printer_embedded_struct_field@@Base>:
   21ca4:	push	{fp, lr}
   21ca8:	add	fp, sp, #4
   21cac:	sub	sp, sp, #16
   21cb0:	str	r0, [fp, #-8]
   21cb4:	str	r1, [fp, #-12]
   21cb8:	str	r2, [fp, #-16]
   21cbc:	str	r3, [fp, #-20]	; 0xffffffec
   21cc0:	ldr	r3, [fp, #-12]
   21cc4:	cmp	r3, #0
   21cc8:	beq	21ce8 <flatcc_json_printer_embedded_struct_field@@Base+0x44>
   21ccc:	ldr	r3, [fp, #-8]
   21cd0:	ldr	r3, [r3, #20]
   21cd4:	add	r1, r3, #1
   21cd8:	ldr	r2, [fp, #-8]
   21cdc:	str	r1, [r2, #20]
   21ce0:	mov	r2, #44	; 0x2c
   21ce4:	strb	r2, [r3]
   21ce8:	ldr	r3, [fp, #8]
   21cec:	mov	r2, r3
   21cf0:	ldr	r1, [fp, #4]
   21cf4:	ldr	r0, [fp, #-8]
   21cf8:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   21cfc:	ldr	r3, [fp, #-8]
   21d00:	ldr	r3, [r3, #32]
   21d04:	add	r2, r3, #1
   21d08:	ldr	r3, [fp, #-8]
   21d0c:	str	r2, [r3, #32]
   21d10:	ldr	r3, [fp, #-8]
   21d14:	ldr	r3, [r3, #20]
   21d18:	add	r1, r3, #1
   21d1c:	ldr	r2, [fp, #-8]
   21d20:	str	r1, [r2, #20]
   21d24:	mov	r2, #123	; 0x7b
   21d28:	strb	r2, [r3]
   21d2c:	ldr	r2, [fp, #-16]
   21d30:	ldr	r3, [fp, #-20]	; 0xffffffec
   21d34:	add	r2, r2, r3
   21d38:	ldr	r3, [fp, #12]
   21d3c:	mov	r1, r2
   21d40:	ldr	r0, [fp, #-8]
   21d44:	blx	r3
   21d48:	ldr	r3, [fp, #-8]
   21d4c:	ldrb	r3, [r3, #25]
   21d50:	cmp	r3, #0
   21d54:	beq	21d90 <flatcc_json_printer_embedded_struct_field@@Base+0xec>
   21d58:	ldr	r3, [fp, #-8]
   21d5c:	ldr	r3, [r3, #20]
   21d60:	add	r1, r3, #1
   21d64:	ldr	r2, [fp, #-8]
   21d68:	str	r1, [r2, #20]
   21d6c:	mov	r2, #10
   21d70:	strb	r2, [r3]
   21d74:	ldr	r3, [fp, #-8]
   21d78:	ldr	r3, [r3, #32]
   21d7c:	sub	r2, r3, #1
   21d80:	ldr	r3, [fp, #-8]
   21d84:	str	r2, [r3, #32]
   21d88:	ldr	r0, [fp, #-8]
   21d8c:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   21d90:	ldr	r3, [fp, #-8]
   21d94:	ldr	r3, [r3, #20]
   21d98:	add	r1, r3, #1
   21d9c:	ldr	r2, [fp, #-8]
   21da0:	str	r1, [r2, #20]
   21da4:	mov	r2, #125	; 0x7d
   21da8:	strb	r2, [r3]
   21dac:	nop			; (mov r0, r0)
   21db0:	sub	sp, fp, #4
   21db4:	pop	{fp, pc}

00021db8 <flatcc_json_printer_struct_field@@Base>:
   21db8:	push	{fp, lr}
   21dbc:	add	fp, sp, #4
   21dc0:	sub	sp, sp, #24
   21dc4:	str	r0, [fp, #-16]
   21dc8:	str	r1, [fp, #-20]	; 0xffffffec
   21dcc:	str	r2, [fp, #-24]	; 0xffffffe8
   21dd0:	str	r3, [fp, #-28]	; 0xffffffe4
   21dd4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   21dd8:	ldr	r0, [fp, #-20]	; 0xffffffec
   21ddc:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   21de0:	str	r0, [fp, #-8]
   21de4:	ldr	r3, [fp, #-8]
   21de8:	cmp	r3, #0
   21dec:	beq	21ee0 <flatcc_json_printer_struct_field@@Base+0x128>
   21df0:	ldr	r3, [fp, #-20]	; 0xffffffec
   21df4:	ldr	r3, [r3, #16]
   21df8:	add	r1, r3, #1
   21dfc:	ldr	r2, [fp, #-20]	; 0xffffffec
   21e00:	str	r1, [r2, #16]
   21e04:	cmp	r3, #0
   21e08:	beq	21e28 <flatcc_json_printer_struct_field@@Base+0x70>
   21e0c:	ldr	r3, [fp, #-16]
   21e10:	ldr	r3, [r3, #20]
   21e14:	add	r1, r3, #1
   21e18:	ldr	r2, [fp, #-16]
   21e1c:	str	r1, [r2, #20]
   21e20:	mov	r2, #44	; 0x2c
   21e24:	strb	r2, [r3]
   21e28:	ldr	r3, [fp, #4]
   21e2c:	mov	r2, r3
   21e30:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21e34:	ldr	r0, [fp, #-16]
   21e38:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   21e3c:	ldr	r3, [fp, #-16]
   21e40:	ldr	r3, [r3, #32]
   21e44:	add	r2, r3, #1
   21e48:	ldr	r3, [fp, #-16]
   21e4c:	str	r2, [r3, #32]
   21e50:	ldr	r3, [fp, #-16]
   21e54:	ldr	r3, [r3, #20]
   21e58:	add	r1, r3, #1
   21e5c:	ldr	r2, [fp, #-16]
   21e60:	str	r1, [r2, #20]
   21e64:	mov	r2, #123	; 0x7b
   21e68:	strb	r2, [r3]
   21e6c:	ldr	r3, [fp, #8]
   21e70:	ldr	r1, [fp, #-8]
   21e74:	ldr	r0, [fp, #-16]
   21e78:	blx	r3
   21e7c:	ldr	r3, [fp, #-16]
   21e80:	ldrb	r3, [r3, #25]
   21e84:	cmp	r3, #0
   21e88:	beq	21ec4 <flatcc_json_printer_struct_field@@Base+0x10c>
   21e8c:	ldr	r3, [fp, #-16]
   21e90:	ldr	r3, [r3, #20]
   21e94:	add	r1, r3, #1
   21e98:	ldr	r2, [fp, #-16]
   21e9c:	str	r1, [r2, #20]
   21ea0:	mov	r2, #10
   21ea4:	strb	r2, [r3]
   21ea8:	ldr	r3, [fp, #-16]
   21eac:	ldr	r3, [r3, #32]
   21eb0:	sub	r2, r3, #1
   21eb4:	ldr	r3, [fp, #-16]
   21eb8:	str	r2, [r3, #32]
   21ebc:	ldr	r0, [fp, #-16]
   21ec0:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   21ec4:	ldr	r3, [fp, #-16]
   21ec8:	ldr	r3, [r3, #20]
   21ecc:	add	r1, r3, #1
   21ed0:	ldr	r2, [fp, #-16]
   21ed4:	str	r1, [r2, #20]
   21ed8:	mov	r2, #125	; 0x7d
   21edc:	strb	r2, [r3]
   21ee0:	nop			; (mov r0, r0)
   21ee4:	sub	sp, fp, #4
   21ee8:	pop	{fp, pc}
   21eec:	push	{fp, lr}
   21ef0:	add	fp, sp, #4
   21ef4:	sub	sp, sp, #24
   21ef8:	str	r0, [fp, #-16]
   21efc:	str	r1, [fp, #-20]	; 0xffffffec
   21f00:	str	r2, [fp, #-24]	; 0xffffffe8
   21f04:	str	r3, [fp, #-28]	; 0xffffffe4
   21f08:	mov	r3, #0
   21f0c:	str	r3, [fp, #-12]
   21f10:	ldr	r3, [fp, #-20]	; 0xffffffec
   21f14:	cmp	r3, #0
   21f18:	beq	21f28 <flatcc_json_printer_struct_field@@Base+0x170>
   21f1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21f20:	cmp	r3, #7
   21f24:	bhi	21f54 <flatcc_json_printer_struct_field@@Base+0x19c>
   21f28:	mov	r1, #1
   21f2c:	ldr	r0, [fp, #-16]
   21f30:	bl	15458 <main@@Base+0x6c0>
   21f34:	ldr	r3, [pc, #184]	; 21ff4 <flatcc_json_printer_struct_field@@Base+0x23c>
   21f38:	add	r3, pc, r3
   21f3c:	ldr	r2, [pc, #180]	; 21ff8 <flatcc_json_printer_struct_field@@Base+0x240>
   21f40:	ldr	r1, [pc, #180]	; 21ffc <flatcc_json_printer_struct_field@@Base+0x244>
   21f44:	add	r1, pc, r1
   21f48:	ldr	r0, [pc, #176]	; 22000 <flatcc_json_printer_struct_field@@Base+0x248>
   21f4c:	add	r0, pc, r0
   21f50:	bl	12528 <__assert_fail@plt>
   21f54:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21f58:	cmp	r3, #0
   21f5c:	beq	21fe4 <flatcc_json_printer_struct_field@@Base+0x22c>
   21f60:	sub	r3, fp, #12
   21f64:	mov	r2, #4
   21f68:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21f6c:	mov	r0, r3
   21f70:	bl	124ec <strncpy@plt>
   21f74:	ldr	r3, [fp, #-12]
   21f78:	mov	r0, r3
   21f7c:	bl	15404 <main@@Base+0x66c>
   21f80:	mov	r3, r0
   21f84:	str	r3, [fp, #-12]
   21f88:	ldr	r3, [fp, #-20]	; 0xffffffec
   21f8c:	add	r3, r3, #4
   21f90:	mov	r0, r3
   21f94:	bl	15428 <main@@Base+0x690>
   21f98:	str	r0, [fp, #-8]
   21f9c:	ldr	r3, [fp, #-12]
   21fa0:	cmp	r3, #0
   21fa4:	beq	21fe4 <flatcc_json_printer_struct_field@@Base+0x22c>
   21fa8:	ldr	r3, [fp, #-12]
   21fac:	ldr	r2, [fp, #-8]
   21fb0:	cmp	r2, r3
   21fb4:	beq	21fe4 <flatcc_json_printer_struct_field@@Base+0x22c>
   21fb8:	mov	r1, #1
   21fbc:	ldr	r0, [fp, #-16]
   21fc0:	bl	15458 <main@@Base+0x6c0>
   21fc4:	ldr	r3, [pc, #56]	; 22004 <flatcc_json_printer_struct_field@@Base+0x24c>
   21fc8:	add	r3, pc, r3
   21fcc:	ldr	r2, [pc, #52]	; 22008 <flatcc_json_printer_struct_field@@Base+0x250>
   21fd0:	ldr	r1, [pc, #52]	; 2200c <flatcc_json_printer_struct_field@@Base+0x254>
   21fd4:	add	r1, pc, r1
   21fd8:	ldr	r0, [pc, #48]	; 22010 <flatcc_json_printer_struct_field@@Base+0x258>
   21fdc:	add	r0, pc, r0
   21fe0:	bl	12528 <__assert_fail@plt>
   21fe4:	mov	r3, #1
   21fe8:	mov	r0, r3
   21fec:	sub	sp, fp, #4
   21ff0:	pop	{fp, pc}
   21ff4:	ldrdeq	r2, [r0], -r4
   21ff8:	strdeq	r0, [r0], -fp
   21ffc:	strdeq	r2, [r0], -ip
   22000:	andeq	r2, r0, r4, lsl #9
   22004:	andeq	r2, r0, r4, asr #18
   22008:	andeq	r0, r0, r4, lsl #8
   2200c:	andeq	r2, r0, ip, ror #6
   22010:	andeq	r2, r0, r4, lsl r4

00022014 <flatcc_json_printer_struct_as_root@@Base>:
   22014:	push	{fp, lr}
   22018:	add	fp, sp, #4
   2201c:	sub	sp, sp, #16
   22020:	str	r0, [fp, #-8]
   22024:	str	r1, [fp, #-12]
   22028:	str	r2, [fp, #-16]
   2202c:	str	r3, [fp, #-20]	; 0xffffffec
   22030:	ldr	r3, [fp, #-20]	; 0xffffffec
   22034:	ldr	r2, [fp, #-16]
   22038:	ldr	r1, [fp, #-12]
   2203c:	ldr	r0, [fp, #-8]
   22040:	bl	21eec <flatcc_json_printer_struct_field@@Base+0x134>
   22044:	mov	r3, r0
   22048:	cmp	r3, #0
   2204c:	bne	22058 <flatcc_json_printer_struct_as_root@@Base+0x44>
   22050:	mvn	r3, #0
   22054:	b	22198 <flatcc_json_printer_struct_as_root@@Base+0x184>
   22058:	ldr	r3, [fp, #-8]
   2205c:	ldr	r3, [r3, #32]
   22060:	add	r2, r3, #1
   22064:	ldr	r3, [fp, #-8]
   22068:	str	r2, [r3, #32]
   2206c:	ldr	r3, [fp, #-8]
   22070:	ldr	r3, [r3, #20]
   22074:	add	r1, r3, #1
   22078:	ldr	r2, [fp, #-8]
   2207c:	str	r1, [r2, #20]
   22080:	mov	r2, #123	; 0x7b
   22084:	strb	r2, [r3]
   22088:	ldr	r0, [fp, #-12]
   2208c:	bl	197f8 <flatcc_json_printer_error_string@@Base+0x8c>
   22090:	mov	r2, r0
   22094:	ldr	r3, [fp, #4]
   22098:	mov	r1, r2
   2209c:	ldr	r0, [fp, #-8]
   220a0:	blx	r3
   220a4:	ldr	r3, [fp, #-8]
   220a8:	ldrb	r3, [r3, #25]
   220ac:	cmp	r3, #0
   220b0:	beq	220ec <flatcc_json_printer_struct_as_root@@Base+0xd8>
   220b4:	ldr	r3, [fp, #-8]
   220b8:	ldr	r3, [r3, #20]
   220bc:	add	r1, r3, #1
   220c0:	ldr	r2, [fp, #-8]
   220c4:	str	r1, [r2, #20]
   220c8:	mov	r2, #10
   220cc:	strb	r2, [r3]
   220d0:	ldr	r3, [fp, #-8]
   220d4:	ldr	r3, [r3, #32]
   220d8:	sub	r2, r3, #1
   220dc:	ldr	r3, [fp, #-8]
   220e0:	str	r2, [r3, #32]
   220e4:	ldr	r0, [fp, #-8]
   220e8:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   220ec:	ldr	r3, [fp, #-8]
   220f0:	ldr	r3, [r3, #20]
   220f4:	add	r1, r3, #1
   220f8:	ldr	r2, [fp, #-8]
   220fc:	str	r1, [r2, #20]
   22100:	mov	r2, #125	; 0x7d
   22104:	strb	r2, [r3]
   22108:	ldr	r3, [fp, #-8]
   2210c:	ldrb	r3, [r3, #25]
   22110:	cmp	r3, #0
   22114:	beq	22144 <flatcc_json_printer_struct_as_root@@Base+0x130>
   22118:	ldr	r3, [fp, #-8]
   2211c:	ldr	r3, [r3, #32]
   22120:	cmp	r3, #0
   22124:	bne	22144 <flatcc_json_printer_struct_as_root@@Base+0x130>
   22128:	ldr	r3, [fp, #-8]
   2212c:	ldr	r3, [r3, #20]
   22130:	add	r1, r3, #1
   22134:	ldr	r2, [fp, #-8]
   22138:	str	r1, [r2, #20]
   2213c:	mov	r2, #10
   22140:	strb	r2, [r3]
   22144:	ldr	r3, [fp, #-8]
   22148:	ldr	r3, [r3, #44]	; 0x2c
   2214c:	mov	r1, #1
   22150:	ldr	r0, [fp, #-8]
   22154:	blx	r3
   22158:	ldr	r0, [fp, #-8]
   2215c:	bl	15498 <main@@Base+0x700>
   22160:	mov	r3, r0
   22164:	cmp	r3, #0
   22168:	bne	22194 <flatcc_json_printer_struct_as_root@@Base+0x180>
   2216c:	ldr	r3, [fp, #-8]
   22170:	ldr	r3, [r3, #12]
   22174:	ldr	r2, [fp, #-8]
   22178:	ldr	r2, [r2, #20]
   2217c:	mov	r1, r2
   22180:	ldr	r2, [fp, #-8]
   22184:	ldr	r2, [r2]
   22188:	sub	r2, r1, r2
   2218c:	add	r3, r3, r2
   22190:	b	22198 <flatcc_json_printer_struct_as_root@@Base+0x184>
   22194:	mvn	r3, #0
   22198:	mov	r0, r3
   2219c:	sub	sp, fp, #4
   221a0:	pop	{fp, pc}

000221a4 <flatcc_json_printer_table_as_root@@Base>:
   221a4:	push	{fp, lr}
   221a8:	add	fp, sp, #4
   221ac:	sub	sp, sp, #16
   221b0:	str	r0, [fp, #-8]
   221b4:	str	r1, [fp, #-12]
   221b8:	str	r2, [fp, #-16]
   221bc:	str	r3, [fp, #-20]	; 0xffffffec
   221c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   221c4:	ldr	r2, [fp, #-16]
   221c8:	ldr	r1, [fp, #-12]
   221cc:	ldr	r0, [fp, #-8]
   221d0:	bl	21eec <flatcc_json_printer_struct_field@@Base+0x134>
   221d4:	mov	r3, r0
   221d8:	cmp	r3, #0
   221dc:	bne	221e8 <flatcc_json_printer_table_as_root@@Base+0x44>
   221e0:	mvn	r3, #0
   221e4:	b	22294 <flatcc_json_printer_table_as_root@@Base+0xf0>
   221e8:	ldr	r0, [fp, #-12]
   221ec:	bl	197f8 <flatcc_json_printer_error_string@@Base+0x8c>
   221f0:	mov	r1, r0
   221f4:	ldr	r3, [fp, #4]
   221f8:	mov	r2, #100	; 0x64
   221fc:	ldr	r0, [fp, #-8]
   22200:	bl	1aaa0 <flatcc_json_printer_enum_flag@@Base+0xbc>
   22204:	ldr	r3, [fp, #-8]
   22208:	ldrb	r3, [r3, #25]
   2220c:	cmp	r3, #0
   22210:	beq	22240 <flatcc_json_printer_table_as_root@@Base+0x9c>
   22214:	ldr	r3, [fp, #-8]
   22218:	ldr	r3, [r3, #32]
   2221c:	cmp	r3, #0
   22220:	bne	22240 <flatcc_json_printer_table_as_root@@Base+0x9c>
   22224:	ldr	r3, [fp, #-8]
   22228:	ldr	r3, [r3, #20]
   2222c:	add	r1, r3, #1
   22230:	ldr	r2, [fp, #-8]
   22234:	str	r1, [r2, #20]
   22238:	mov	r2, #10
   2223c:	strb	r2, [r3]
   22240:	ldr	r3, [fp, #-8]
   22244:	ldr	r3, [r3, #44]	; 0x2c
   22248:	mov	r1, #1
   2224c:	ldr	r0, [fp, #-8]
   22250:	blx	r3
   22254:	ldr	r0, [fp, #-8]
   22258:	bl	15498 <main@@Base+0x700>
   2225c:	mov	r3, r0
   22260:	cmp	r3, #0
   22264:	bne	22290 <flatcc_json_printer_table_as_root@@Base+0xec>
   22268:	ldr	r3, [fp, #-8]
   2226c:	ldr	r3, [r3, #12]
   22270:	ldr	r2, [fp, #-8]
   22274:	ldr	r2, [r2, #20]
   22278:	mov	r1, r2
   2227c:	ldr	r2, [fp, #-8]
   22280:	ldr	r2, [r2]
   22284:	sub	r2, r1, r2
   22288:	add	r3, r3, r2
   2228c:	b	22294 <flatcc_json_printer_table_as_root@@Base+0xf0>
   22290:	mvn	r3, #0
   22294:	mov	r0, r3
   22298:	sub	sp, fp, #4
   2229c:	pop	{fp, pc}

000222a0 <flatcc_json_printer_struct_as_nested_root@@Base>:
   222a0:	push	{fp, lr}
   222a4:	add	fp, sp, #4
   222a8:	sub	sp, sp, #24
   222ac:	str	r0, [fp, #-16]
   222b0:	str	r1, [fp, #-20]	; 0xffffffec
   222b4:	str	r2, [fp, #-24]	; 0xffffffe8
   222b8:	str	r3, [fp, #-28]	; 0xffffffe4
   222bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   222c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   222c4:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   222c8:	str	r0, [fp, #-8]
   222cc:	ldr	r3, [fp, #-8]
   222d0:	cmp	r3, #0
   222d4:	beq	2241c <flatcc_json_printer_struct_as_nested_root@@Base+0x17c>
   222d8:	ldr	r0, [fp, #-8]
   222dc:	bl	152ac <main@@Base+0x514>
   222e0:	mov	r2, r0
   222e4:	ldr	r3, [fp, #-8]
   222e8:	add	r3, r2, r3
   222ec:	str	r3, [fp, #-8]
   222f0:	ldr	r0, [fp, #-8]
   222f4:	bl	152ac <main@@Base+0x514>
   222f8:	str	r0, [fp, #-12]
   222fc:	ldr	r3, [fp, #8]
   22300:	ldr	r2, [fp, #-12]
   22304:	ldr	r1, [fp, #-8]
   22308:	ldr	r0, [fp, #-16]
   2230c:	bl	21eec <flatcc_json_printer_struct_field@@Base+0x134>
   22310:	mov	r3, r0
   22314:	cmp	r3, #0
   22318:	beq	22424 <flatcc_json_printer_struct_as_nested_root@@Base+0x184>
   2231c:	ldr	r3, [fp, #-20]	; 0xffffffec
   22320:	ldr	r3, [r3, #16]
   22324:	add	r1, r3, #1
   22328:	ldr	r2, [fp, #-20]	; 0xffffffec
   2232c:	str	r1, [r2, #16]
   22330:	cmp	r3, #0
   22334:	beq	22354 <flatcc_json_printer_struct_as_nested_root@@Base+0xb4>
   22338:	ldr	r3, [fp, #-16]
   2233c:	ldr	r3, [r3, #20]
   22340:	add	r1, r3, #1
   22344:	ldr	r2, [fp, #-16]
   22348:	str	r1, [r2, #20]
   2234c:	mov	r2, #44	; 0x2c
   22350:	strb	r2, [r3]
   22354:	ldr	r3, [fp, #4]
   22358:	mov	r2, r3
   2235c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22360:	ldr	r0, [fp, #-16]
   22364:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   22368:	ldr	r3, [fp, #-16]
   2236c:	ldr	r3, [r3, #32]
   22370:	add	r2, r3, #1
   22374:	ldr	r3, [fp, #-16]
   22378:	str	r2, [r3, #32]
   2237c:	ldr	r3, [fp, #-16]
   22380:	ldr	r3, [r3, #20]
   22384:	add	r1, r3, #1
   22388:	ldr	r2, [fp, #-16]
   2238c:	str	r1, [r2, #20]
   22390:	mov	r2, #123	; 0x7b
   22394:	strb	r2, [r3]
   22398:	ldr	r0, [fp, #-8]
   2239c:	bl	197f8 <flatcc_json_printer_error_string@@Base+0x8c>
   223a0:	mov	r2, r0
   223a4:	ldr	r3, [fp, #12]
   223a8:	mov	r1, r2
   223ac:	ldr	r0, [fp, #-16]
   223b0:	blx	r3
   223b4:	ldr	r3, [fp, #-16]
   223b8:	ldrb	r3, [r3, #25]
   223bc:	cmp	r3, #0
   223c0:	beq	223fc <flatcc_json_printer_struct_as_nested_root@@Base+0x15c>
   223c4:	ldr	r3, [fp, #-16]
   223c8:	ldr	r3, [r3, #20]
   223cc:	add	r1, r3, #1
   223d0:	ldr	r2, [fp, #-16]
   223d4:	str	r1, [r2, #20]
   223d8:	mov	r2, #10
   223dc:	strb	r2, [r3]
   223e0:	ldr	r3, [fp, #-16]
   223e4:	ldr	r3, [r3, #32]
   223e8:	sub	r2, r3, #1
   223ec:	ldr	r3, [fp, #-16]
   223f0:	str	r2, [r3, #32]
   223f4:	ldr	r0, [fp, #-16]
   223f8:	bl	1a238 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   223fc:	ldr	r3, [fp, #-16]
   22400:	ldr	r3, [r3, #20]
   22404:	add	r1, r3, #1
   22408:	ldr	r2, [fp, #-16]
   2240c:	str	r1, [r2, #20]
   22410:	mov	r2, #125	; 0x7d
   22414:	strb	r2, [r3]
   22418:	b	22428 <flatcc_json_printer_struct_as_nested_root@@Base+0x188>
   2241c:	nop			; (mov r0, r0)
   22420:	b	22428 <flatcc_json_printer_struct_as_nested_root@@Base+0x188>
   22424:	nop			; (mov r0, r0)
   22428:	sub	sp, fp, #4
   2242c:	pop	{fp, pc}

00022430 <flatcc_json_printer_table_as_nested_root@@Base>:
   22430:	push	{fp, lr}
   22434:	add	fp, sp, #4
   22438:	sub	sp, sp, #24
   2243c:	str	r0, [fp, #-16]
   22440:	str	r1, [fp, #-20]	; 0xffffffec
   22444:	str	r2, [fp, #-24]	; 0xffffffe8
   22448:	str	r3, [fp, #-28]	; 0xffffffe4
   2244c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22450:	ldr	r0, [fp, #-20]	; 0xffffffec
   22454:	bl	19860 <flatcc_json_printer_error_string@@Base+0xf4>
   22458:	str	r0, [fp, #-8]
   2245c:	ldr	r3, [fp, #-8]
   22460:	cmp	r3, #0
   22464:	beq	22528 <flatcc_json_printer_table_as_nested_root@@Base+0xf8>
   22468:	ldr	r0, [fp, #-8]
   2246c:	bl	152ac <main@@Base+0x514>
   22470:	mov	r2, r0
   22474:	ldr	r3, [fp, #-8]
   22478:	add	r3, r2, r3
   2247c:	str	r3, [fp, #-8]
   22480:	ldr	r0, [fp, #-8]
   22484:	bl	152ac <main@@Base+0x514>
   22488:	str	r0, [fp, #-12]
   2248c:	ldr	r3, [fp, #-8]
   22490:	add	r3, r3, #4
   22494:	str	r3, [fp, #-8]
   22498:	ldr	r3, [fp, #8]
   2249c:	ldr	r2, [fp, #-12]
   224a0:	ldr	r1, [fp, #-8]
   224a4:	ldr	r0, [fp, #-16]
   224a8:	bl	21eec <flatcc_json_printer_struct_field@@Base+0x134>
   224ac:	mov	r3, r0
   224b0:	cmp	r3, #0
   224b4:	beq	22530 <flatcc_json_printer_table_as_nested_root@@Base+0x100>
   224b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   224bc:	ldr	r3, [r3, #16]
   224c0:	add	r1, r3, #1
   224c4:	ldr	r2, [fp, #-20]	; 0xffffffec
   224c8:	str	r1, [r2, #16]
   224cc:	cmp	r3, #0
   224d0:	beq	224f0 <flatcc_json_printer_table_as_nested_root@@Base+0xc0>
   224d4:	ldr	r3, [fp, #-16]
   224d8:	ldr	r3, [r3, #20]
   224dc:	add	r1, r3, #1
   224e0:	ldr	r2, [fp, #-16]
   224e4:	str	r1, [r2, #20]
   224e8:	mov	r2, #44	; 0x2c
   224ec:	strb	r2, [r3]
   224f0:	ldr	r3, [fp, #4]
   224f4:	mov	r2, r3
   224f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   224fc:	ldr	r0, [fp, #-16]
   22500:	bl	1a548 <flatcc_json_printer_get_level@@Base+0x128>
   22504:	ldr	r0, [fp, #-8]
   22508:	bl	197f8 <flatcc_json_printer_error_string@@Base+0x8c>
   2250c:	mov	r1, r0
   22510:	ldr	r3, [fp, #-20]	; 0xffffffec
   22514:	ldr	r2, [r3, #12]
   22518:	ldr	r3, [fp, #12]
   2251c:	ldr	r0, [fp, #-16]
   22520:	bl	1aaa0 <flatcc_json_printer_enum_flag@@Base+0xbc>
   22524:	b	22534 <flatcc_json_printer_table_as_nested_root@@Base+0x104>
   22528:	nop			; (mov r0, r0)
   2252c:	b	22534 <flatcc_json_printer_table_as_nested_root@@Base+0x104>
   22530:	nop			; (mov r0, r0)
   22534:	sub	sp, fp, #4
   22538:	pop	{fp, pc}
   2253c:	push	{fp, lr}
   22540:	add	fp, sp, #4
   22544:	sub	sp, sp, #16
   22548:	str	r0, [fp, #-16]
   2254c:	str	r1, [fp, #-20]	; 0xffffffec
   22550:	ldr	r3, [fp, #-20]	; 0xffffffec
   22554:	cmp	r3, #0
   22558:	bne	22610 <flatcc_json_printer_table_as_nested_root@@Base+0x1e0>
   2255c:	ldr	r3, [fp, #-16]
   22560:	ldr	r2, [r3, #20]
   22564:	ldr	r3, [fp, #-16]
   22568:	ldr	r3, [r3, #16]
   2256c:	cmp	r2, r3
   22570:	bcc	22610 <flatcc_json_printer_table_as_nested_root@@Base+0x1e0>
   22574:	ldr	r3, [fp, #-16]
   22578:	ldr	r3, [r3, #20]
   2257c:	mov	r2, r3
   22580:	ldr	r3, [fp, #-16]
   22584:	ldr	r3, [r3, #16]
   22588:	sub	r3, r2, r3
   2258c:	str	r3, [fp, #-8]
   22590:	ldr	r3, [fp, #-16]
   22594:	ldr	r0, [r3]
   22598:	ldr	r3, [fp, #-16]
   2259c:	ldr	r1, [r3, #8]
   225a0:	ldr	r3, [fp, #-16]
   225a4:	ldr	r3, [r3, #40]	; 0x28
   225a8:	mov	r2, #1
   225ac:	bl	12480 <fwrite@plt>
   225b0:	ldr	r3, [fp, #-16]
   225b4:	ldr	r0, [r3]
   225b8:	ldr	r3, [fp, #-16]
   225bc:	ldr	r2, [r3]
   225c0:	ldr	r3, [fp, #-16]
   225c4:	ldr	r3, [r3, #8]
   225c8:	add	r3, r2, r3
   225cc:	ldr	r2, [fp, #-8]
   225d0:	mov	r1, r3
   225d4:	bl	12444 <memcpy@plt>
   225d8:	ldr	r3, [fp, #-16]
   225dc:	ldr	r2, [r3]
   225e0:	ldr	r3, [fp, #-8]
   225e4:	add	r2, r2, r3
   225e8:	ldr	r3, [fp, #-16]
   225ec:	str	r2, [r3, #20]
   225f0:	ldr	r3, [fp, #-16]
   225f4:	ldr	r2, [r3, #12]
   225f8:	ldr	r3, [fp, #-16]
   225fc:	ldr	r3, [r3, #8]
   22600:	add	r2, r2, r3
   22604:	ldr	r3, [fp, #-16]
   22608:	str	r2, [r3, #12]
   2260c:	b	22670 <flatcc_json_printer_table_as_nested_root@@Base+0x240>
   22610:	ldr	r3, [fp, #-16]
   22614:	ldr	r3, [r3, #20]
   22618:	mov	r2, r3
   2261c:	ldr	r3, [fp, #-16]
   22620:	ldr	r3, [r3]
   22624:	sub	r3, r2, r3
   22628:	str	r3, [fp, #-12]
   2262c:	ldr	r3, [fp, #-16]
   22630:	ldr	r0, [r3]
   22634:	ldr	r3, [fp, #-16]
   22638:	ldr	r3, [r3, #40]	; 0x28
   2263c:	mov	r2, #1
   22640:	ldr	r1, [fp, #-12]
   22644:	bl	12480 <fwrite@plt>
   22648:	ldr	r3, [fp, #-16]
   2264c:	ldr	r2, [r3]
   22650:	ldr	r3, [fp, #-16]
   22654:	str	r2, [r3, #20]
   22658:	ldr	r3, [fp, #-16]
   2265c:	ldr	r2, [r3, #12]
   22660:	ldr	r3, [fp, #-12]
   22664:	add	r2, r2, r3
   22668:	ldr	r3, [fp, #-16]
   2266c:	str	r2, [r3, #12]
   22670:	ldr	r3, [fp, #-16]
   22674:	ldr	r3, [r3, #20]
   22678:	mov	r2, #0
   2267c:	strb	r2, [r3]
   22680:	nop			; (mov r0, r0)
   22684:	sub	sp, fp, #4
   22688:	pop	{fp, pc}

0002268c <flatcc_json_printer_init@@Base>:
   2268c:	push	{r4, fp, lr}
   22690:	add	fp, sp, #8
   22694:	sub	sp, sp, #12
   22698:	str	r0, [fp, #-16]
   2269c:	str	r1, [fp, #-20]	; 0xffffffec
   226a0:	ldr	r4, [pc, #276]	; 227bc <flatcc_json_printer_init@@Base+0x130>
   226a4:	add	r4, pc, r4
   226a8:	mov	r2, #48	; 0x30
   226ac:	mov	r1, #0
   226b0:	ldr	r0, [fp, #-16]
   226b4:	bl	124e0 <memset@plt>
   226b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   226bc:	cmp	r3, #0
   226c0:	beq	226cc <flatcc_json_printer_init@@Base+0x40>
   226c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   226c8:	b	226d8 <flatcc_json_printer_init@@Base+0x4c>
   226cc:	ldr	r3, [pc, #236]	; 227c0 <flatcc_json_printer_init@@Base+0x134>
   226d0:	ldr	r3, [r4, r3]
   226d4:	ldr	r3, [r3]
   226d8:	ldr	r2, [fp, #-16]
   226dc:	str	r3, [r2, #40]	; 0x28
   226e0:	ldr	r3, [fp, #-16]
   226e4:	ldr	r2, [pc, #216]	; 227c4 <flatcc_json_printer_init@@Base+0x138>
   226e8:	add	r2, pc, r2
   226ec:	str	r2, [r3, #44]	; 0x2c
   226f0:	ldr	r0, [pc, #208]	; 227c8 <flatcc_json_printer_init@@Base+0x13c>
   226f4:	bl	124a4 <malloc@plt>
   226f8:	mov	r3, r0
   226fc:	mov	r2, r3
   22700:	ldr	r3, [fp, #-16]
   22704:	str	r2, [r3]
   22708:	ldr	r3, [fp, #-16]
   2270c:	ldr	r3, [r3]
   22710:	cmp	r3, #0
   22714:	bne	22720 <flatcc_json_printer_init@@Base+0x94>
   22718:	mvn	r3, #0
   2271c:	b	227b0 <flatcc_json_printer_init@@Base+0x124>
   22720:	ldr	r3, [fp, #-16]
   22724:	mov	r2, #1
   22728:	strb	r2, [r3, #24]
   2272c:	ldr	r3, [fp, #-16]
   22730:	ldr	r2, [pc, #144]	; 227c8 <flatcc_json_printer_init@@Base+0x13c>
   22734:	str	r2, [r3, #4]
   22738:	ldr	r3, [fp, #-16]
   2273c:	mov	r2, #16384	; 0x4000
   22740:	str	r2, [r3, #8]
   22744:	ldr	r3, [fp, #-16]
   22748:	ldr	r2, [r3]
   2274c:	ldr	r3, [fp, #-16]
   22750:	str	r2, [r3, #20]
   22754:	ldr	r3, [fp, #-16]
   22758:	ldr	r2, [r3]
   2275c:	ldr	r3, [fp, #-16]
   22760:	ldr	r3, [r3, #8]
   22764:	add	r2, r2, r3
   22768:	ldr	r3, [fp, #-16]
   2276c:	str	r2, [r3, #16]
   22770:	ldr	r3, [fp, #-16]
   22774:	ldr	r3, [r3, #8]
   22778:	add	r2, r3, #64	; 0x40
   2277c:	ldr	r3, [fp, #-16]
   22780:	ldr	r3, [r3, #4]
   22784:	cmp	r2, r3
   22788:	bls	227ac <flatcc_json_printer_init@@Base+0x120>
   2278c:	ldr	r3, [pc, #56]	; 227cc <flatcc_json_printer_init@@Base+0x140>
   22790:	add	r3, pc, r3
   22794:	ldr	r2, [pc, #52]	; 227d0 <flatcc_json_printer_init@@Base+0x144>
   22798:	ldr	r1, [pc, #52]	; 227d4 <flatcc_json_printer_init@@Base+0x148>
   2279c:	add	r1, pc, r1
   227a0:	ldr	r0, [pc, #48]	; 227d8 <flatcc_json_printer_init@@Base+0x14c>
   227a4:	add	r0, pc, r0
   227a8:	bl	12528 <__assert_fail@plt>
   227ac:	mov	r3, #0
   227b0:	mov	r0, r3
   227b4:	sub	sp, fp, #8
   227b8:	pop	{r4, fp, pc}
   227bc:	andeq	r2, r1, r4, asr r9
   227c0:	andeq	r0, r0, r0, lsl #1
   227c4:			; <UNDEFINED> instruction: 0xfffffe4c
   227c8:	andeq	r4, r0, r0, asr #32
   227cc:	andeq	r2, r0, ip, lsl #3
   227d0:	andeq	r0, r0, fp, ror r4
   227d4:	andeq	r1, r0, r4, lsr #23
   227d8:	andeq	r1, r0, r8, ror #24
   227dc:	push	{fp, lr}
   227e0:	add	fp, sp, #4
   227e4:	sub	sp, sp, #8
   227e8:	str	r0, [fp, #-8]
   227ec:	str	r1, [fp, #-12]
   227f0:	ldr	r3, [fp, #-8]
   227f4:	ldr	r2, [r3, #20]
   227f8:	ldr	r3, [fp, #-8]
   227fc:	ldr	r3, [r3, #16]
   22800:	cmp	r2, r3
   22804:	bcc	22850 <flatcc_json_printer_init@@Base+0x1c4>
   22808:	mov	r1, #3
   2280c:	ldr	r0, [fp, #-8]
   22810:	bl	15458 <main@@Base+0x6c0>
   22814:	ldr	r3, [fp, #-8]
   22818:	ldr	r3, [r3, #12]
   2281c:	ldr	r2, [fp, #-8]
   22820:	ldr	r2, [r2, #20]
   22824:	mov	r1, r2
   22828:	ldr	r2, [fp, #-8]
   2282c:	ldr	r2, [r2]
   22830:	sub	r2, r1, r2
   22834:	add	r2, r3, r2
   22838:	ldr	r3, [fp, #-8]
   2283c:	str	r2, [r3, #12]
   22840:	ldr	r3, [fp, #-8]
   22844:	ldr	r2, [r3]
   22848:	ldr	r3, [fp, #-8]
   2284c:	str	r2, [r3, #20]
   22850:	ldr	r3, [fp, #-8]
   22854:	ldr	r3, [r3, #20]
   22858:	mov	r2, #0
   2285c:	strb	r2, [r3]
   22860:	nop			; (mov r0, r0)
   22864:	sub	sp, fp, #4
   22868:	pop	{fp, pc}

0002286c <flatcc_json_printer_init_buffer@@Base>:
   2286c:	push	{fp, lr}
   22870:	add	fp, sp, #4
   22874:	sub	sp, sp, #16
   22878:	str	r0, [fp, #-8]
   2287c:	str	r1, [fp, #-12]
   22880:	str	r2, [fp, #-16]
   22884:	ldr	r3, [fp, #-16]
   22888:	cmp	r3, #63	; 0x3f
   2288c:	bhi	228b0 <flatcc_json_printer_init_buffer@@Base+0x44>
   22890:	ldr	r3, [pc, #180]	; 2294c <flatcc_json_printer_init_buffer@@Base+0xe0>
   22894:	add	r3, pc, r3
   22898:	ldr	r2, [pc, #176]	; 22950 <flatcc_json_printer_init_buffer@@Base+0xe4>
   2289c:	ldr	r1, [pc, #176]	; 22954 <flatcc_json_printer_init_buffer@@Base+0xe8>
   228a0:	add	r1, pc, r1
   228a4:	ldr	r0, [pc, #172]	; 22958 <flatcc_json_printer_init_buffer@@Base+0xec>
   228a8:	add	r0, pc, r0
   228ac:	bl	12528 <__assert_fail@plt>
   228b0:	ldr	r3, [fp, #-16]
   228b4:	cmp	r3, #63	; 0x3f
   228b8:	bhi	228c4 <flatcc_json_printer_init_buffer@@Base+0x58>
   228bc:	mvn	r3, #0
   228c0:	b	22940 <flatcc_json_printer_init_buffer@@Base+0xd4>
   228c4:	mov	r2, #48	; 0x30
   228c8:	mov	r1, #0
   228cc:	ldr	r0, [fp, #-8]
   228d0:	bl	124e0 <memset@plt>
   228d4:	ldr	r3, [fp, #-8]
   228d8:	ldr	r2, [fp, #-12]
   228dc:	str	r2, [r3]
   228e0:	ldr	r3, [fp, #-8]
   228e4:	ldr	r2, [fp, #-16]
   228e8:	str	r2, [r3, #4]
   228ec:	ldr	r3, [fp, #-8]
   228f0:	ldr	r3, [r3, #4]
   228f4:	sub	r2, r3, #64	; 0x40
   228f8:	ldr	r3, [fp, #-8]
   228fc:	str	r2, [r3, #8]
   22900:	ldr	r3, [fp, #-8]
   22904:	ldr	r2, [r3]
   22908:	ldr	r3, [fp, #-8]
   2290c:	str	r2, [r3, #20]
   22910:	ldr	r3, [fp, #-8]
   22914:	ldr	r2, [r3]
   22918:	ldr	r3, [fp, #-8]
   2291c:	ldr	r3, [r3, #8]
   22920:	add	r2, r2, r3
   22924:	ldr	r3, [fp, #-8]
   22928:	str	r2, [r3, #16]
   2292c:	ldr	r3, [fp, #-8]
   22930:	ldr	r2, [pc, #36]	; 2295c <flatcc_json_printer_init_buffer@@Base+0xf0>
   22934:	add	r2, pc, r2
   22938:	str	r2, [r3, #44]	; 0x2c
   2293c:	mov	r3, #0
   22940:	mov	r0, r3
   22944:	sub	sp, fp, #4
   22948:	pop	{fp, pc}
   2294c:	andeq	r2, r0, r4, lsr #1
   22950:	andeq	r0, r0, sp, lsl #9
   22954:	andeq	r1, r0, r0, lsr #21
   22958:	andeq	r1, r0, r0, lsr #23
   2295c:			; <UNDEFINED> instruction: 0xfffffea0
   22960:	push	{fp, lr}
   22964:	add	fp, sp, #4
   22968:	sub	sp, sp, #16
   2296c:	str	r0, [fp, #-16]
   22970:	str	r1, [fp, #-20]	; 0xffffffec
   22974:	ldr	r3, [fp, #-16]
   22978:	ldr	r3, [r3, #20]
   2297c:	mov	r2, r3
   22980:	ldr	r3, [fp, #-16]
   22984:	ldr	r3, [r3]
   22988:	sub	r3, r2, r3
   2298c:	str	r3, [fp, #-8]
   22990:	ldr	r3, [fp, #-16]
   22994:	ldr	r3, [r3, #20]
   22998:	mov	r2, #0
   2299c:	strb	r2, [r3]
   229a0:	ldr	r3, [fp, #-16]
   229a4:	ldr	r2, [r3, #20]
   229a8:	ldr	r3, [fp, #-16]
   229ac:	ldr	r3, [r3, #16]
   229b0:	cmp	r2, r3
   229b4:	bcc	22a94 <flatcc_json_printer_init_buffer@@Base+0x228>
   229b8:	ldr	r3, [fp, #-16]
   229bc:	ldr	r2, [r3]
   229c0:	ldr	r3, [fp, #-16]
   229c4:	ldr	r3, [r3, #4]
   229c8:	lsl	r3, r3, #1
   229cc:	mov	r1, r3
   229d0:	mov	r0, r2
   229d4:	bl	12474 <realloc@plt>
   229d8:	str	r0, [fp, #-12]
   229dc:	ldr	r3, [fp, #-12]
   229e0:	cmp	r3, #0
   229e4:	bne	22a20 <flatcc_json_printer_init_buffer@@Base+0x1b4>
   229e8:	mov	r1, #3
   229ec:	ldr	r0, [fp, #-16]
   229f0:	bl	15458 <main@@Base+0x6c0>
   229f4:	ldr	r3, [fp, #-16]
   229f8:	ldr	r2, [r3, #12]
   229fc:	ldr	r3, [fp, #-8]
   22a00:	add	r2, r2, r3
   22a04:	ldr	r3, [fp, #-16]
   22a08:	str	r2, [r3, #12]
   22a0c:	ldr	r3, [fp, #-16]
   22a10:	ldr	r2, [r3]
   22a14:	ldr	r3, [fp, #-16]
   22a18:	str	r2, [r3, #20]
   22a1c:	b	22a80 <flatcc_json_printer_init_buffer@@Base+0x214>
   22a20:	ldr	r3, [fp, #-16]
   22a24:	ldr	r3, [r3, #4]
   22a28:	lsl	r2, r3, #1
   22a2c:	ldr	r3, [fp, #-16]
   22a30:	str	r2, [r3, #4]
   22a34:	ldr	r3, [fp, #-16]
   22a38:	ldr	r3, [r3, #4]
   22a3c:	sub	r2, r3, #64	; 0x40
   22a40:	ldr	r3, [fp, #-16]
   22a44:	str	r2, [r3, #8]
   22a48:	ldr	r3, [fp, #-16]
   22a4c:	ldr	r2, [fp, #-12]
   22a50:	str	r2, [r3]
   22a54:	ldr	r2, [fp, #-12]
   22a58:	ldr	r3, [fp, #-8]
   22a5c:	add	r2, r2, r3
   22a60:	ldr	r3, [fp, #-16]
   22a64:	str	r2, [r3, #20]
   22a68:	ldr	r3, [fp, #-16]
   22a6c:	ldr	r3, [r3, #8]
   22a70:	ldr	r2, [fp, #-12]
   22a74:	add	r2, r2, r3
   22a78:	ldr	r3, [fp, #-16]
   22a7c:	str	r2, [r3, #16]
   22a80:	ldr	r3, [fp, #-16]
   22a84:	ldr	r3, [r3, #20]
   22a88:	mov	r2, #0
   22a8c:	strb	r2, [r3]
   22a90:	b	22a98 <flatcc_json_printer_init_buffer@@Base+0x22c>
   22a94:	nop			; (mov r0, r0)
   22a98:	sub	sp, fp, #4
   22a9c:	pop	{fp, pc}

00022aa0 <flatcc_json_printer_init_dynamic_buffer@@Base>:
   22aa0:	push	{fp, lr}
   22aa4:	add	fp, sp, #4
   22aa8:	sub	sp, sp, #8
   22aac:	str	r0, [fp, #-8]
   22ab0:	str	r1, [fp, #-12]
   22ab4:	ldr	r3, [fp, #-12]
   22ab8:	cmp	r3, #0
   22abc:	bne	22ac8 <flatcc_json_printer_init_dynamic_buffer@@Base+0x28>
   22ac0:	mov	r3, #4096	; 0x1000
   22ac4:	str	r3, [fp, #-12]
   22ac8:	ldr	r3, [fp, #-12]
   22acc:	cmp	r3, #63	; 0x3f
   22ad0:	bhi	22adc <flatcc_json_printer_init_dynamic_buffer@@Base+0x3c>
   22ad4:	mov	r3, #64	; 0x40
   22ad8:	str	r3, [fp, #-12]
   22adc:	mov	r2, #48	; 0x30
   22ae0:	mov	r1, #0
   22ae4:	ldr	r0, [fp, #-8]
   22ae8:	bl	124e0 <memset@plt>
   22aec:	ldr	r0, [fp, #-12]
   22af0:	bl	124a4 <malloc@plt>
   22af4:	mov	r3, r0
   22af8:	mov	r2, r3
   22afc:	ldr	r3, [fp, #-8]
   22b00:	str	r2, [r3]
   22b04:	ldr	r3, [fp, #-8]
   22b08:	mov	r2, #1
   22b0c:	strb	r2, [r3, #24]
   22b10:	ldr	r3, [fp, #-8]
   22b14:	ldr	r2, [fp, #-12]
   22b18:	str	r2, [r3, #4]
   22b1c:	ldr	r3, [fp, #-8]
   22b20:	ldr	r3, [r3, #4]
   22b24:	sub	r2, r3, #64	; 0x40
   22b28:	ldr	r3, [fp, #-8]
   22b2c:	str	r2, [r3, #8]
   22b30:	ldr	r3, [fp, #-8]
   22b34:	ldr	r2, [r3]
   22b38:	ldr	r3, [fp, #-8]
   22b3c:	str	r2, [r3, #20]
   22b40:	ldr	r3, [fp, #-8]
   22b44:	ldr	r2, [r3]
   22b48:	ldr	r3, [fp, #-8]
   22b4c:	ldr	r3, [r3, #8]
   22b50:	add	r2, r2, r3
   22b54:	ldr	r3, [fp, #-8]
   22b58:	str	r2, [r3, #16]
   22b5c:	ldr	r3, [fp, #-8]
   22b60:	ldr	r2, [pc, #56]	; 22ba0 <flatcc_json_printer_init_dynamic_buffer@@Base+0x100>
   22b64:	add	r2, pc, r2
   22b68:	str	r2, [r3, #44]	; 0x2c
   22b6c:	ldr	r3, [fp, #-8]
   22b70:	ldr	r3, [r3]
   22b74:	cmp	r3, #0
   22b78:	bne	22b90 <flatcc_json_printer_init_dynamic_buffer@@Base+0xf0>
   22b7c:	mov	r1, #3
   22b80:	ldr	r0, [fp, #-8]
   22b84:	bl	15458 <main@@Base+0x6c0>
   22b88:	mvn	r3, #0
   22b8c:	b	22b94 <flatcc_json_printer_init_dynamic_buffer@@Base+0xf4>
   22b90:	mov	r3, #0
   22b94:	mov	r0, r3
   22b98:	sub	sp, fp, #4
   22b9c:	pop	{fp, pc}
   22ba0:			; <UNDEFINED> instruction: 0xfffffdf4

00022ba4 <flatcc_json_printer_get_buffer@@Base>:
   22ba4:	push	{fp, lr}
   22ba8:	add	fp, sp, #4
   22bac:	sub	sp, sp, #8
   22bb0:	str	r0, [fp, #-8]
   22bb4:	str	r1, [fp, #-12]
   22bb8:	ldr	r3, [fp, #-8]
   22bbc:	ldr	r3, [r3, #44]	; 0x2c
   22bc0:	mov	r1, #0
   22bc4:	ldr	r0, [fp, #-8]
   22bc8:	blx	r3
   22bcc:	ldr	r3, [fp, #-12]
   22bd0:	cmp	r3, #0
   22bd4:	beq	22bfc <flatcc_json_printer_get_buffer@@Base+0x58>
   22bd8:	ldr	r3, [fp, #-8]
   22bdc:	ldr	r3, [r3, #20]
   22be0:	mov	r2, r3
   22be4:	ldr	r3, [fp, #-8]
   22be8:	ldr	r3, [r3]
   22bec:	sub	r3, r2, r3
   22bf0:	mov	r2, r3
   22bf4:	ldr	r3, [fp, #-12]
   22bf8:	str	r2, [r3]
   22bfc:	ldr	r3, [fp, #-8]
   22c00:	ldr	r3, [r3]
   22c04:	mov	r0, r3
   22c08:	sub	sp, fp, #4
   22c0c:	pop	{fp, pc}

00022c10 <flatcc_json_printer_finalize_dynamic_buffer@@Base>:
   22c10:	push	{fp, lr}
   22c14:	add	fp, sp, #4
   22c18:	sub	sp, sp, #16
   22c1c:	str	r0, [fp, #-16]
   22c20:	str	r1, [fp, #-20]	; 0xffffffec
   22c24:	ldr	r1, [fp, #-20]	; 0xffffffec
   22c28:	ldr	r0, [fp, #-16]
   22c2c:	bl	22ba4 <flatcc_json_printer_get_buffer@@Base>
   22c30:	str	r0, [fp, #-8]
   22c34:	mov	r2, #48	; 0x30
   22c38:	mov	r1, #0
   22c3c:	ldr	r0, [fp, #-16]
   22c40:	bl	124e0 <memset@plt>
   22c44:	ldr	r3, [fp, #-8]
   22c48:	mov	r0, r3
   22c4c:	sub	sp, fp, #4
   22c50:	pop	{fp, pc}

00022c54 <flatcc_json_printer_clear@@Base>:
   22c54:	push	{fp, lr}
   22c58:	add	fp, sp, #4
   22c5c:	sub	sp, sp, #8
   22c60:	str	r0, [fp, #-8]
   22c64:	ldr	r3, [fp, #-8]
   22c68:	ldrb	r3, [r3, #24]
   22c6c:	cmp	r3, #0
   22c70:	beq	22c94 <flatcc_json_printer_clear@@Base+0x40>
   22c74:	ldr	r3, [fp, #-8]
   22c78:	ldr	r3, [r3]
   22c7c:	cmp	r3, #0
   22c80:	beq	22c94 <flatcc_json_printer_clear@@Base+0x40>
   22c84:	ldr	r3, [fp, #-8]
   22c88:	ldr	r3, [r3]
   22c8c:	mov	r0, r3
   22c90:	bl	12438 <free@plt>
   22c94:	mov	r2, #48	; 0x30
   22c98:	mov	r1, #0
   22c9c:	ldr	r0, [fp, #-8]
   22ca0:	bl	124e0 <memset@plt>
   22ca4:	nop			; (mov r0, r0)
   22ca8:	sub	sp, fp, #4
   22cac:	pop	{fp, pc}
   22cb0:	subs	r2, r1, #1
   22cb4:	bxeq	lr
   22cb8:	bcc	22e90 <flatcc_json_printer_clear@@Base+0x23c>
   22cbc:	cmp	r0, r1
   22cc0:	bls	22e74 <flatcc_json_printer_clear@@Base+0x220>
   22cc4:	tst	r1, r2
   22cc8:	beq	22e80 <flatcc_json_printer_clear@@Base+0x22c>
   22ccc:	clz	r3, r0
   22cd0:	clz	r2, r1
   22cd4:	sub	r3, r2, r3
   22cd8:	rsbs	r3, r3, #31
   22cdc:	addne	r3, r3, r3, lsl #1
   22ce0:	mov	r2, #0
   22ce4:	addne	pc, pc, r3, lsl #2
   22ce8:	nop			; (mov r0, r0)
   22cec:	cmp	r0, r1, lsl #31
   22cf0:	adc	r2, r2, r2
   22cf4:	subcs	r0, r0, r1, lsl #31
   22cf8:	cmp	r0, r1, lsl #30
   22cfc:	adc	r2, r2, r2
   22d00:	subcs	r0, r0, r1, lsl #30
   22d04:	cmp	r0, r1, lsl #29
   22d08:	adc	r2, r2, r2
   22d0c:	subcs	r0, r0, r1, lsl #29
   22d10:	cmp	r0, r1, lsl #28
   22d14:	adc	r2, r2, r2
   22d18:	subcs	r0, r0, r1, lsl #28
   22d1c:	cmp	r0, r1, lsl #27
   22d20:	adc	r2, r2, r2
   22d24:	subcs	r0, r0, r1, lsl #27
   22d28:	cmp	r0, r1, lsl #26
   22d2c:	adc	r2, r2, r2
   22d30:	subcs	r0, r0, r1, lsl #26
   22d34:	cmp	r0, r1, lsl #25
   22d38:	adc	r2, r2, r2
   22d3c:	subcs	r0, r0, r1, lsl #25
   22d40:	cmp	r0, r1, lsl #24
   22d44:	adc	r2, r2, r2
   22d48:	subcs	r0, r0, r1, lsl #24
   22d4c:	cmp	r0, r1, lsl #23
   22d50:	adc	r2, r2, r2
   22d54:	subcs	r0, r0, r1, lsl #23
   22d58:	cmp	r0, r1, lsl #22
   22d5c:	adc	r2, r2, r2
   22d60:	subcs	r0, r0, r1, lsl #22
   22d64:	cmp	r0, r1, lsl #21
   22d68:	adc	r2, r2, r2
   22d6c:	subcs	r0, r0, r1, lsl #21
   22d70:	cmp	r0, r1, lsl #20
   22d74:	adc	r2, r2, r2
   22d78:	subcs	r0, r0, r1, lsl #20
   22d7c:	cmp	r0, r1, lsl #19
   22d80:	adc	r2, r2, r2
   22d84:	subcs	r0, r0, r1, lsl #19
   22d88:	cmp	r0, r1, lsl #18
   22d8c:	adc	r2, r2, r2
   22d90:	subcs	r0, r0, r1, lsl #18
   22d94:	cmp	r0, r1, lsl #17
   22d98:	adc	r2, r2, r2
   22d9c:	subcs	r0, r0, r1, lsl #17
   22da0:	cmp	r0, r1, lsl #16
   22da4:	adc	r2, r2, r2
   22da8:	subcs	r0, r0, r1, lsl #16
   22dac:	cmp	r0, r1, lsl #15
   22db0:	adc	r2, r2, r2
   22db4:	subcs	r0, r0, r1, lsl #15
   22db8:	cmp	r0, r1, lsl #14
   22dbc:	adc	r2, r2, r2
   22dc0:	subcs	r0, r0, r1, lsl #14
   22dc4:	cmp	r0, r1, lsl #13
   22dc8:	adc	r2, r2, r2
   22dcc:	subcs	r0, r0, r1, lsl #13
   22dd0:	cmp	r0, r1, lsl #12
   22dd4:	adc	r2, r2, r2
   22dd8:	subcs	r0, r0, r1, lsl #12
   22ddc:	cmp	r0, r1, lsl #11
   22de0:	adc	r2, r2, r2
   22de4:	subcs	r0, r0, r1, lsl #11
   22de8:	cmp	r0, r1, lsl #10
   22dec:	adc	r2, r2, r2
   22df0:	subcs	r0, r0, r1, lsl #10
   22df4:	cmp	r0, r1, lsl #9
   22df8:	adc	r2, r2, r2
   22dfc:	subcs	r0, r0, r1, lsl #9
   22e00:	cmp	r0, r1, lsl #8
   22e04:	adc	r2, r2, r2
   22e08:	subcs	r0, r0, r1, lsl #8
   22e0c:	cmp	r0, r1, lsl #7
   22e10:	adc	r2, r2, r2
   22e14:	subcs	r0, r0, r1, lsl #7
   22e18:	cmp	r0, r1, lsl #6
   22e1c:	adc	r2, r2, r2
   22e20:	subcs	r0, r0, r1, lsl #6
   22e24:	cmp	r0, r1, lsl #5
   22e28:	adc	r2, r2, r2
   22e2c:	subcs	r0, r0, r1, lsl #5
   22e30:	cmp	r0, r1, lsl #4
   22e34:	adc	r2, r2, r2
   22e38:	subcs	r0, r0, r1, lsl #4
   22e3c:	cmp	r0, r1, lsl #3
   22e40:	adc	r2, r2, r2
   22e44:	subcs	r0, r0, r1, lsl #3
   22e48:	cmp	r0, r1, lsl #2
   22e4c:	adc	r2, r2, r2
   22e50:	subcs	r0, r0, r1, lsl #2
   22e54:	cmp	r0, r1, lsl #1
   22e58:	adc	r2, r2, r2
   22e5c:	subcs	r0, r0, r1, lsl #1
   22e60:	cmp	r0, r1
   22e64:	adc	r2, r2, r2
   22e68:	subcs	r0, r0, r1
   22e6c:	mov	r0, r2
   22e70:	bx	lr
   22e74:	moveq	r0, #1
   22e78:	movne	r0, #0
   22e7c:	bx	lr
   22e80:	clz	r2, r1
   22e84:	rsb	r2, r2, #31
   22e88:	lsr	r0, r0, r2
   22e8c:	bx	lr
   22e90:	cmp	r0, #0
   22e94:	mvnne	r0, #0
   22e98:	b	22ef8 <flatcc_json_printer_clear@@Base+0x2a4>
   22e9c:	cmp	r1, #0
   22ea0:	beq	22e90 <flatcc_json_printer_clear@@Base+0x23c>
   22ea4:	push	{r0, r1, lr}
   22ea8:	bl	22cb0 <flatcc_json_printer_clear@@Base+0x5c>
   22eac:	pop	{r1, r2, lr}
   22eb0:	mul	r3, r2, r0
   22eb4:	sub	r1, r1, r3
   22eb8:	bx	lr
   22ebc:	cmp	r3, #0
   22ec0:	cmpeq	r2, #0
   22ec4:	bne	22edc <flatcc_json_printer_clear@@Base+0x288>
   22ec8:	cmp	r1, #0
   22ecc:	cmpeq	r0, #0
   22ed0:	mvnne	r1, #0
   22ed4:	mvnne	r0, #0
   22ed8:	b	22ef8 <flatcc_json_printer_clear@@Base+0x2a4>
   22edc:	sub	sp, sp, #8
   22ee0:	push	{sp, lr}
   22ee4:	bl	22f08 <flatcc_json_printer_clear@@Base+0x2b4>
   22ee8:	ldr	lr, [sp, #4]
   22eec:	add	sp, sp, #8
   22ef0:	pop	{r2, r3}
   22ef4:	bx	lr
   22ef8:	push	{r1, lr}
   22efc:	mov	r0, #8
   22f00:	bl	12408 <raise@plt>
   22f04:	pop	{r1, pc}
   22f08:	cmp	r1, r3
   22f0c:	push	{r4, r5, r6, r7, r8, r9, lr}
   22f10:	cmpeq	r0, r2
   22f14:	mov	r4, r0
   22f18:	mov	r5, r1
   22f1c:	ldr	r9, [sp, #28]
   22f20:	movcc	r0, #0
   22f24:	movcc	r1, #0
   22f28:	bcc	23020 <flatcc_json_printer_clear@@Base+0x3cc>
   22f2c:	cmp	r3, #0
   22f30:	clzeq	ip, r2
   22f34:	clzne	ip, r3
   22f38:	addeq	ip, ip, #32
   22f3c:	cmp	r5, #0
   22f40:	clzeq	r1, r4
   22f44:	addeq	r1, r1, #32
   22f48:	clzne	r1, r5
   22f4c:	sub	ip, ip, r1
   22f50:	sub	lr, ip, #32
   22f54:	lsl	r7, r3, ip
   22f58:	rsb	r8, ip, #32
   22f5c:	orr	r7, r7, r2, lsl lr
   22f60:	orr	r7, r7, r2, lsr r8
   22f64:	lsl	r6, r2, ip
   22f68:	cmp	r5, r7
   22f6c:	cmpeq	r4, r6
   22f70:	movcc	r0, #0
   22f74:	movcc	r1, #0
   22f78:	bcc	22f94 <flatcc_json_printer_clear@@Base+0x340>
   22f7c:	mov	r3, #1
   22f80:	subs	r4, r4, r6
   22f84:	lsl	r1, r3, lr
   22f88:	lsl	r0, r3, ip
   22f8c:	orr	r1, r1, r3, lsr r8
   22f90:	sbc	r5, r5, r7
   22f94:	cmp	ip, #0
   22f98:	beq	23020 <flatcc_json_printer_clear@@Base+0x3cc>
   22f9c:	lsrs	r3, r7, #1
   22fa0:	rrx	r2, r6
   22fa4:	mov	r6, ip
   22fa8:	b	22fcc <flatcc_json_printer_clear@@Base+0x378>
   22fac:	subs	r4, r4, r2
   22fb0:	sbc	r5, r5, r3
   22fb4:	adds	r4, r4, r4
   22fb8:	adc	r5, r5, r5
   22fbc:	adds	r4, r4, #1
   22fc0:	adc	r5, r5, #0
   22fc4:	subs	r6, r6, #1
   22fc8:	beq	22fe8 <flatcc_json_printer_clear@@Base+0x394>
   22fcc:	cmp	r5, r3
   22fd0:	cmpeq	r4, r2
   22fd4:	bcs	22fac <flatcc_json_printer_clear@@Base+0x358>
   22fd8:	adds	r4, r4, r4
   22fdc:	adc	r5, r5, r5
   22fe0:	subs	r6, r6, #1
   22fe4:	bne	22fcc <flatcc_json_printer_clear@@Base+0x378>
   22fe8:	lsr	r6, r4, ip
   22fec:	lsr	r7, r5, ip
   22ff0:	orr	r6, r6, r5, lsl r8
   22ff4:	adds	r2, r0, r4
   22ff8:	orr	r6, r6, r5, lsr lr
   22ffc:	adc	r3, r1, r5
   23000:	lsl	r1, r7, ip
   23004:	orr	r1, r1, r6, lsl lr
   23008:	lsl	r0, r6, ip
   2300c:	orr	r1, r1, r6, lsr r8
   23010:	subs	r0, r2, r0
   23014:	mov	r4, r6
   23018:	mov	r5, r7
   2301c:	sbc	r1, r3, r1
   23020:	cmp	r9, #0
   23024:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   23028:	strd	r4, [r9]
   2302c:	pop	{r4, r5, r6, r7, r8, r9, pc}

00023030 <__libc_csu_init@@Base>:
   23030:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   23034:	mov	r7, r0
   23038:	ldr	r6, [pc, #72]	; 23088 <__libc_csu_init@@Base+0x58>
   2303c:	ldr	r5, [pc, #72]	; 2308c <__libc_csu_init@@Base+0x5c>
   23040:	add	r6, pc, r6
   23044:	add	r5, pc, r5
   23048:	sub	r6, r6, r5
   2304c:	mov	r8, r1
   23050:	mov	r9, r2
   23054:	bl	123e8 <raise@plt-0x20>
   23058:	asrs	r6, r6, #2
   2305c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   23060:	mov	r4, #0
   23064:	add	r4, r4, #1
   23068:	ldr	r3, [r5], #4
   2306c:	mov	r2, r9
   23070:	mov	r1, r8
   23074:	mov	r0, r7
   23078:	blx	r3
   2307c:	cmp	r6, r4
   23080:	bne	23064 <__libc_csu_init@@Base+0x34>
   23084:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   23088:	andeq	r1, r1, r8, asr #29
   2308c:	andeq	r1, r1, r0, asr #29

00023090 <__libc_csu_fini@@Base>:
   23090:	bx	lr

Disassembly of section .fini:

00023094 <.fini>:
   23094:	push	{r3, lr}
   23098:	pop	{r3, pc}
