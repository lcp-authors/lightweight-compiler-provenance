
../repos/coreutils/src/uname:     file format elf32-littlearm


Disassembly of section .init:

00010c4c <.init>:
   10c4c:	push	{r3, lr}
   10c50:	bl	10eb8 <putchar_unlocked@plt+0x48>
   10c54:	pop	{r3, pc}

Disassembly of section .plt:

00010c58 <calloc@plt-0x14>:
   10c58:	push	{lr}		; (str lr, [sp, #-4]!)
   10c5c:	ldr	lr, [pc, #4]	; 10c68 <calloc@plt-0x4>
   10c60:	add	lr, pc, lr
   10c64:	ldr	pc, [lr, #8]!
   10c68:	muleq	r1, r8, r3

00010c6c <calloc@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #20, 20	; 0x14000
   10c74:	ldr	pc, [ip, #920]!	; 0x398

00010c78 <fputs_unlocked@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #20, 20	; 0x14000
   10c80:	ldr	pc, [ip, #912]!	; 0x390

00010c84 <strcmp@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #20, 20	; 0x14000
   10c8c:	ldr	pc, [ip, #904]!	; 0x388

00010c90 <fflush@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #20, 20	; 0x14000
   10c98:	ldr	pc, [ip, #896]!	; 0x380

00010c9c <free@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #20, 20	; 0x14000
   10ca4:	ldr	pc, [ip, #888]!	; 0x378

00010ca8 <_exit@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #20, 20	; 0x14000
   10cb0:	ldr	pc, [ip, #880]!	; 0x370

00010cb4 <memcpy@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #20, 20	; 0x14000
   10cbc:	ldr	pc, [ip, #872]!	; 0x368

00010cc0 <mbsinit@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #20, 20	; 0x14000
   10cc8:	ldr	pc, [ip, #864]!	; 0x360

00010ccc <memcmp@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #20, 20	; 0x14000
   10cd4:	ldr	pc, [ip, #856]!	; 0x358

00010cd8 <uname@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #20, 20	; 0x14000
   10ce0:	ldr	pc, [ip, #848]!	; 0x350

00010ce4 <dcgettext@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #20, 20	; 0x14000
   10cec:	ldr	pc, [ip, #840]!	; 0x348

00010cf0 <realloc@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #20, 20	; 0x14000
   10cf8:	ldr	pc, [ip, #832]!	; 0x340

00010cfc <textdomain@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #20, 20	; 0x14000
   10d04:	ldr	pc, [ip, #824]!	; 0x338

00010d08 <iswprint@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #20, 20	; 0x14000
   10d10:	ldr	pc, [ip, #816]!	; 0x330

00010d14 <lseek64@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #20, 20	; 0x14000
   10d1c:	ldr	pc, [ip, #808]!	; 0x328

00010d20 <__ctype_get_mb_cur_max@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #20, 20	; 0x14000
   10d28:	ldr	pc, [ip, #800]!	; 0x320

00010d2c <__fpending@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #20, 20	; 0x14000
   10d34:	ldr	pc, [ip, #792]!	; 0x318

00010d38 <ferror_unlocked@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #20, 20	; 0x14000
   10d40:	ldr	pc, [ip, #784]!	; 0x310

00010d44 <mbrtowc@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #20, 20	; 0x14000
   10d4c:	ldr	pc, [ip, #776]!	; 0x308

00010d50 <error@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #20, 20	; 0x14000
   10d58:	ldr	pc, [ip, #768]!	; 0x300

00010d5c <malloc@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #20, 20	; 0x14000
   10d64:	ldr	pc, [ip, #760]!	; 0x2f8

00010d68 <__libc_start_main@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #20, 20	; 0x14000
   10d70:	ldr	pc, [ip, #752]!	; 0x2f0

00010d74 <__freading@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #20, 20	; 0x14000
   10d7c:	ldr	pc, [ip, #744]!	; 0x2e8

00010d80 <__gmon_start__@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #20, 20	; 0x14000
   10d88:	ldr	pc, [ip, #736]!	; 0x2e0

00010d8c <getopt_long@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #20, 20	; 0x14000
   10d94:	ldr	pc, [ip, #728]!	; 0x2d8

00010d98 <__ctype_b_loc@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #20, 20	; 0x14000
   10da0:	ldr	pc, [ip, #720]!	; 0x2d0

00010da4 <exit@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #20, 20	; 0x14000
   10dac:	ldr	pc, [ip, #712]!	; 0x2c8

00010db0 <strlen@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #20, 20	; 0x14000
   10db8:	ldr	pc, [ip, #704]!	; 0x2c0

00010dbc <__errno_location@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #20, 20	; 0x14000
   10dc4:	ldr	pc, [ip, #696]!	; 0x2b8

00010dc8 <__cxa_atexit@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #20, 20	; 0x14000
   10dd0:	ldr	pc, [ip, #688]!	; 0x2b0

00010dd4 <memset@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #20, 20	; 0x14000
   10ddc:	ldr	pc, [ip, #680]!	; 0x2a8

00010de0 <__printf_chk@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #20, 20	; 0x14000
   10de8:	ldr	pc, [ip, #672]!	; 0x2a0

00010dec <fileno@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #20, 20	; 0x14000
   10df4:	ldr	pc, [ip, #664]!	; 0x298

00010df8 <__fprintf_chk@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #20, 20	; 0x14000
   10e00:	ldr	pc, [ip, #656]!	; 0x290

00010e04 <fclose@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #20, 20	; 0x14000
   10e0c:	ldr	pc, [ip, #648]!	; 0x288

00010e10 <fseeko64@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #20, 20	; 0x14000
   10e18:	ldr	pc, [ip, #640]!	; 0x280

00010e1c <setlocale@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #20, 20	; 0x14000
   10e24:	ldr	pc, [ip, #632]!	; 0x278

00010e28 <strrchr@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #20, 20	; 0x14000
   10e30:	ldr	pc, [ip, #624]!	; 0x270

00010e34 <nl_langinfo@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #20, 20	; 0x14000
   10e3c:	ldr	pc, [ip, #616]!	; 0x268

00010e40 <bindtextdomain@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #20, 20	; 0x14000
   10e48:	ldr	pc, [ip, #608]!	; 0x260

00010e4c <fputs@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #20, 20	; 0x14000
   10e54:	ldr	pc, [ip, #600]!	; 0x258

00010e58 <strncmp@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #20, 20	; 0x14000
   10e60:	ldr	pc, [ip, #592]!	; 0x250

00010e64 <abort@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #20, 20	; 0x14000
   10e6c:	ldr	pc, [ip, #584]!	; 0x248

00010e70 <putchar_unlocked@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #20, 20	; 0x14000
   10e78:	ldr	pc, [ip, #576]!	; 0x240

Disassembly of section .text:

00010e7c <.text>:
   10e7c:	mov	fp, #0
   10e80:	mov	lr, #0
   10e84:	pop	{r1}		; (ldr r1, [sp], #4)
   10e88:	mov	r2, sp
   10e8c:	push	{r2}		; (str r2, [sp, #-4]!)
   10e90:	push	{r0}		; (str r0, [sp, #-4]!)
   10e94:	ldr	ip, [pc, #16]	; 10eac <putchar_unlocked@plt+0x3c>
   10e98:	push	{ip}		; (str ip, [sp, #-4]!)
   10e9c:	ldr	r0, [pc, #12]	; 10eb0 <putchar_unlocked@plt+0x40>
   10ea0:	ldr	r3, [pc, #12]	; 10eb4 <putchar_unlocked@plt+0x44>
   10ea4:	bl	10d68 <__libc_start_main@plt>
   10ea8:	bl	10e64 <abort@plt>
   10eac:	andeq	r4, r1, r0, lsr #1
   10eb0:	andeq	r1, r1, r0, lsl #4
   10eb4:	andeq	r4, r1, r0, asr #32
   10eb8:	ldr	r3, [pc, #20]	; 10ed4 <putchar_unlocked@plt+0x64>
   10ebc:	ldr	r2, [pc, #20]	; 10ed8 <putchar_unlocked@plt+0x68>
   10ec0:	add	r3, pc, r3
   10ec4:	ldr	r2, [r3, r2]
   10ec8:	cmp	r2, #0
   10ecc:	bxeq	lr
   10ed0:	b	10d80 <__gmon_start__@plt>
   10ed4:	andeq	r4, r1, r8, lsr r1
   10ed8:	strheq	r0, [r0], -ip
   10edc:	ldr	r0, [pc, #24]	; 10efc <putchar_unlocked@plt+0x8c>
   10ee0:	ldr	r3, [pc, #24]	; 10f00 <putchar_unlocked@plt+0x90>
   10ee4:	cmp	r3, r0
   10ee8:	bxeq	lr
   10eec:	ldr	r3, [pc, #16]	; 10f04 <putchar_unlocked@plt+0x94>
   10ef0:	cmp	r3, #0
   10ef4:	bxeq	lr
   10ef8:	bx	r3
   10efc:	andeq	r5, r2, r8, lsl r1
   10f00:	andeq	r5, r2, r8, lsl r1
   10f04:	andeq	r0, r0, r0
   10f08:	ldr	r0, [pc, #36]	; 10f34 <putchar_unlocked@plt+0xc4>
   10f0c:	ldr	r1, [pc, #36]	; 10f38 <putchar_unlocked@plt+0xc8>
   10f10:	sub	r1, r1, r0
   10f14:	asr	r1, r1, #2
   10f18:	add	r1, r1, r1, lsr #31
   10f1c:	asrs	r1, r1, #1
   10f20:	bxeq	lr
   10f24:	ldr	r3, [pc, #16]	; 10f3c <putchar_unlocked@plt+0xcc>
   10f28:	cmp	r3, #0
   10f2c:	bxeq	lr
   10f30:	bx	r3
   10f34:	andeq	r5, r2, r8, lsl r1
   10f38:	andeq	r5, r2, r8, lsl r1
   10f3c:	andeq	r0, r0, r0
   10f40:	push	{r4, lr}
   10f44:	ldr	r4, [pc, #24]	; 10f64 <putchar_unlocked@plt+0xf4>
   10f48:	ldrb	r3, [r4]
   10f4c:	cmp	r3, #0
   10f50:	popne	{r4, pc}
   10f54:	bl	10edc <putchar_unlocked@plt+0x6c>
   10f58:	mov	r3, #1
   10f5c:	strb	r3, [r4]
   10f60:	pop	{r4, pc}
   10f64:	andeq	r5, r2, r0, lsr r1
   10f68:	b	10f08 <putchar_unlocked@plt+0x98>
   10f6c:	push	{fp, lr}
   10f70:	mov	fp, sp
   10f74:	sub	sp, sp, #56	; 0x38
   10f78:	mov	r8, r0
   10f7c:	cmp	r0, #0
   10f80:	bne	111c0 <putchar_unlocked@plt+0x350>
   10f84:	movw	r1, #16627	; 0x40f3
   10f88:	mov	r0, #0
   10f8c:	mov	r2, #5
   10f90:	movt	r1, #1
   10f94:	bl	10ce4 <dcgettext@plt>
   10f98:	mov	r1, r0
   10f9c:	movw	r0, #20796	; 0x513c
   10fa0:	movt	r0, #2
   10fa4:	ldr	r2, [r0]
   10fa8:	mov	r0, #1
   10fac:	bl	10de0 <__printf_chk@plt>
   10fb0:	movw	r5, #20680	; 0x50c8
   10fb4:	movt	r5, #2
   10fb8:	ldr	r0, [r5]
   10fbc:	cmp	r0, #1
   10fc0:	bne	11004 <putchar_unlocked@plt+0x194>
   10fc4:	movw	r1, #16650	; 0x410a
   10fc8:	mov	r0, #0
   10fcc:	mov	r2, #5
   10fd0:	movt	r1, #1
   10fd4:	bl	10ce4 <dcgettext@plt>
   10fd8:	movw	r6, #20780	; 0x512c
   10fdc:	movt	r6, #2
   10fe0:	ldr	r1, [r6]
   10fe4:	bl	10c78 <fputs_unlocked@plt>
   10fe8:	movw	r1, #17012	; 0x4274
   10fec:	mov	r0, #0
   10ff0:	mov	r2, #5
   10ff4:	movt	r1, #1
   10ff8:	bl	10ce4 <dcgettext@plt>
   10ffc:	ldr	r1, [r6]
   11000:	b	11024 <putchar_unlocked@plt+0x1b4>
   11004:	movw	r1, #17315	; 0x43a3
   11008:	mov	r0, #0
   1100c:	mov	r2, #5
   11010:	movt	r1, #1
   11014:	bl	10ce4 <dcgettext@plt>
   11018:	movw	r1, #20780	; 0x512c
   1101c:	movt	r1, #2
   11020:	ldr	r1, [r1]
   11024:	bl	10c78 <fputs_unlocked@plt>
   11028:	movw	r1, #17345	; 0x43c1
   1102c:	mov	r0, #0
   11030:	mov	r2, #5
   11034:	movt	r1, #1
   11038:	bl	10ce4 <dcgettext@plt>
   1103c:	movw	r9, #20780	; 0x512c
   11040:	movt	r9, #2
   11044:	ldr	r1, [r9]
   11048:	bl	10c78 <fputs_unlocked@plt>
   1104c:	movw	r1, #17390	; 0x43ee
   11050:	mov	r0, #0
   11054:	mov	r2, #5
   11058:	movt	r1, #1
   1105c:	bl	10ce4 <dcgettext@plt>
   11060:	ldr	r1, [r9]
   11064:	bl	10c78 <fputs_unlocked@plt>
   11068:	movw	r1, #18024	; 0x4668
   1106c:	ldr	ip, [r5]
   11070:	mov	r6, sp
   11074:	movt	r1, #1
   11078:	mov	r2, r6
   1107c:	ldm	r1!, {r3, r4, r5, r7}
   11080:	cmp	ip, #1
   11084:	stmia	r2!, {r3, r4, r5, r7}
   11088:	ldm	r1!, {r0, r3, r4, r5, r7}
   1108c:	stmia	r2!, {r0, r3, r4, r5, r7}
   11090:	ldm	r1, {r0, r3, r4, r5, r7}
   11094:	movw	r1, #17512	; 0x4468
   11098:	movt	r1, #1
   1109c:	stm	r2, {r0, r3, r4, r5, r7}
   110a0:	movw	r0, #17444	; 0x4424
   110a4:	movw	r5, #17450	; 0x442a
   110a8:	movt	r0, #1
   110ac:	movt	r5, #1
   110b0:	moveq	r5, r0
   110b4:	mov	r0, r5
   110b8:	bl	10c84 <strcmp@plt>
   110bc:	cmp	r0, #0
   110c0:	ldrne	r1, [r6, #8]!
   110c4:	cmpne	r1, #0
   110c8:	bne	110b4 <putchar_unlocked@plt+0x244>
   110cc:	ldr	r6, [r6, #4]
   110d0:	movw	r1, #17607	; 0x44c7
   110d4:	mov	r0, #0
   110d8:	mov	r2, #5
   110dc:	movt	r1, #1
   110e0:	bl	10ce4 <dcgettext@plt>
   110e4:	movw	r2, #17630	; 0x44de
   110e8:	movw	r3, #17644	; 0x44ec
   110ec:	mov	r1, r0
   110f0:	mov	r0, #1
   110f4:	movt	r2, #1
   110f8:	movt	r3, #1
   110fc:	bl	10de0 <__printf_chk@plt>
   11100:	cmp	r6, #0
   11104:	mov	r0, #5
   11108:	mov	r1, #0
   1110c:	moveq	r6, r5
   11110:	bl	10e1c <setlocale@plt>
   11114:	cmp	r0, #0
   11118:	beq	11150 <putchar_unlocked@plt+0x2e0>
   1111c:	movw	r1, #17684	; 0x4514
   11120:	mov	r2, #3
   11124:	movt	r1, #1
   11128:	bl	10e58 <strncmp@plt>
   1112c:	cmp	r0, #0
   11130:	beq	11150 <putchar_unlocked@plt+0x2e0>
   11134:	movw	r1, #17688	; 0x4518
   11138:	mov	r0, #0
   1113c:	mov	r2, #5
   11140:	movt	r1, #1
   11144:	bl	10ce4 <dcgettext@plt>
   11148:	ldr	r1, [r9]
   1114c:	bl	10c78 <fputs_unlocked@plt>
   11150:	movw	r1, #17759	; 0x455f
   11154:	mov	r0, #0
   11158:	mov	r2, #5
   1115c:	movt	r1, #1
   11160:	bl	10ce4 <dcgettext@plt>
   11164:	movw	r2, #17644	; 0x44ec
   11168:	mov	r1, r0
   1116c:	mov	r0, #1
   11170:	mov	r3, r5
   11174:	movt	r2, #1
   11178:	bl	10de0 <__printf_chk@plt>
   1117c:	movw	r1, #17786	; 0x457a
   11180:	mov	r0, #0
   11184:	mov	r2, #5
   11188:	movt	r1, #1
   1118c:	bl	10ce4 <dcgettext@plt>
   11190:	movw	r3, #17344	; 0x43c0
   11194:	mov	r1, r0
   11198:	movw	r0, #17540	; 0x4484
   1119c:	cmp	r6, r5
   111a0:	mov	r2, r6
   111a4:	movt	r0, #1
   111a8:	movt	r3, #1
   111ac:	moveq	r3, r0
   111b0:	mov	r0, #1
   111b4:	bl	10de0 <__printf_chk@plt>
   111b8:	mov	r0, r8
   111bc:	bl	10da4 <exit@plt>
   111c0:	movw	r0, #20776	; 0x5128
   111c4:	movw	r1, #16588	; 0x40cc
   111c8:	mov	r2, #5
   111cc:	movt	r0, #2
   111d0:	movt	r1, #1
   111d4:	ldr	r5, [r0]
   111d8:	mov	r0, #0
   111dc:	bl	10ce4 <dcgettext@plt>
   111e0:	mov	r2, r0
   111e4:	movw	r0, #20796	; 0x513c
   111e8:	mov	r1, #1
   111ec:	movt	r0, #2
   111f0:	ldr	r3, [r0]
   111f4:	mov	r0, r5
   111f8:	bl	10df8 <__fprintf_chk@plt>
   111fc:	b	111b8 <putchar_unlocked@plt+0x348>
   11200:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11204:	add	fp, sp, #28
   11208:	sub	sp, sp, #412	; 0x19c
   1120c:	mov	r5, r0
   11210:	ldr	r0, [r1]
   11214:	mov	r4, r1
   11218:	bl	116d0 <putchar_unlocked@plt+0x860>
   1121c:	movw	r1, #17344	; 0x43c0
   11220:	mov	r0, #6
   11224:	movt	r1, #1
   11228:	bl	10e1c <setlocale@plt>
   1122c:	movw	r6, #17634	; 0x44e2
   11230:	movw	r1, #17455	; 0x442f
   11234:	movt	r6, #1
   11238:	movt	r1, #1
   1123c:	mov	r0, r6
   11240:	bl	10e40 <bindtextdomain@plt>
   11244:	mov	r0, r6
   11248:	bl	10cfc <textdomain@plt>
   1124c:	movw	r0, #5608	; 0x15e8
   11250:	movt	r0, #1
   11254:	bl	140a4 <putchar_unlocked@plt+0x3234>
   11258:	movw	r9, #20680	; 0x50c8
   1125c:	movt	r9, #2
   11260:	ldr	r0, [r9]
   11264:	cmp	r0, #2
   11268:	bne	112e0 <putchar_unlocked@plt+0x470>
   1126c:	movw	r2, #17344	; 0x43c0
   11270:	movw	r3, #18080	; 0x46a0
   11274:	mov	r0, #0
   11278:	mov	r1, r4
   1127c:	str	r0, [sp]
   11280:	movt	r2, #1
   11284:	movt	r3, #1
   11288:	mov	r0, r5
   1128c:	bl	10d8c <getopt_long@plt>
   11290:	mov	r6, #16
   11294:	cmn	r0, #1
   11298:	beq	113d4 <putchar_unlocked@plt+0x564>
   1129c:	cmn	r0, #3
   112a0:	bne	11504 <putchar_unlocked@plt+0x694>
   112a4:	movw	r0, #20684	; 0x50cc
   112a8:	ldr	r2, [r9]
   112ac:	movw	r7, #17853	; 0x45bd
   112b0:	movw	r6, #17837	; 0x45ad
   112b4:	mov	r1, #0
   112b8:	movt	r0, #2
   112bc:	movt	r7, #1
   112c0:	movt	r6, #1
   112c4:	ldr	r3, [r0]
   112c8:	movw	r0, #20780	; 0x512c
   112cc:	movt	r0, #2
   112d0:	ldr	r0, [r0]
   112d4:	stm	sp, {r6, r7}
   112d8:	str	r1, [sp, #8]
   112dc:	b	114d8 <putchar_unlocked@plt+0x668>
   112e0:	movw	r8, #17863	; 0x45c7
   112e4:	movw	r7, #18128	; 0x46d0
   112e8:	mov	sl, #0
   112ec:	mov	r0, #0
   112f0:	movt	r8, #1
   112f4:	movt	r7, #1
   112f8:	b	113a8 <putchar_unlocked@plt+0x538>
   112fc:	sub	r1, r0, #97	; 0x61
   11300:	cmp	r1, #21
   11304:	bhi	1154c <putchar_unlocked@plt+0x6dc>
   11308:	add	r2, pc, #4
   1130c:	mvn	r0, #0
   11310:	ldr	pc, [r2, r1, lsl #2]
   11314:	andeq	r1, r1, r8, lsr #7
   11318:	andeq	r1, r1, ip, asr #10
   1131c:	andeq	r1, r1, ip, asr #10
   11320:	andeq	r1, r1, ip, asr #10
   11324:	andeq	r1, r1, ip, asr #10
   11328:	andeq	r1, r1, ip, asr #10
   1132c:	andeq	r1, r1, ip, asr #10
   11330:	andeq	r1, r1, ip, asr #10
   11334:	andeq	r1, r1, ip, ror #6
   11338:	andeq	r1, r1, ip, asr #10
   1133c:	andeq	r1, r1, ip, asr #10
   11340:	andeq	r1, r1, ip, asr #10
   11344:	andeq	r1, r1, r4, lsl #7
   11348:	andeq	r1, r1, r4, ror r3
   1134c:	andeq	r1, r1, r4, lsr #7
   11350:	muleq	r1, ip, r3
   11354:	andeq	r1, r1, ip, asr #10
   11358:	andeq	r1, r1, ip, lsl #7
   1135c:	muleq	r1, r4, r3
   11360:	andeq	r1, r1, ip, asr #10
   11364:	andeq	r1, r1, ip, asr #10
   11368:	andeq	r1, r1, ip, ror r3
   1136c:	orr	r0, r6, #64	; 0x40
   11370:	b	113a8 <putchar_unlocked@plt+0x538>
   11374:	orr	r0, r6, #2
   11378:	b	113a8 <putchar_unlocked@plt+0x538>
   1137c:	orr	r0, r6, #8
   11380:	b	113a8 <putchar_unlocked@plt+0x538>
   11384:	orr	r0, r6, #16
   11388:	b	113a8 <putchar_unlocked@plt+0x538>
   1138c:	orr	r0, r6, #4
   11390:	b	113a8 <putchar_unlocked@plt+0x538>
   11394:	orr	r0, r6, #1
   11398:	b	113a8 <putchar_unlocked@plt+0x538>
   1139c:	orr	r0, r6, #32
   113a0:	b	113a8 <putchar_unlocked@plt+0x538>
   113a4:	orr	r0, r6, #128	; 0x80
   113a8:	mov	r6, r0
   113ac:	mov	r0, r5
   113b0:	mov	r1, r4
   113b4:	mov	r2, r8
   113b8:	mov	r3, r7
   113bc:	str	sl, [sp]
   113c0:	bl	10d8c <getopt_long@plt>
   113c4:	cmp	r0, #96	; 0x60
   113c8:	bgt	112fc <putchar_unlocked@plt+0x48c>
   113cc:	cmn	r0, #1
   113d0:	bne	114a0 <putchar_unlocked@plt+0x630>
   113d4:	movw	r7, #20768	; 0x5120
   113d8:	movt	r7, #2
   113dc:	ldr	r0, [r7]
   113e0:	cmp	r0, r5
   113e4:	bne	11514 <putchar_unlocked@plt+0x6a4>
   113e8:	cmp	r6, #0
   113ec:	movweq	r6, #1
   113f0:	tst	r6, #31
   113f4:	beq	11448 <putchar_unlocked@plt+0x5d8>
   113f8:	add	r4, sp, #16
   113fc:	mov	r0, r4
   11400:	bl	10cd8 <uname@plt>
   11404:	cmn	r0, #1
   11408:	beq	11554 <putchar_unlocked@plt+0x6e4>
   1140c:	tst	r6, #1
   11410:	addne	r0, sp, #16
   11414:	blne	11580 <putchar_unlocked@plt+0x710>
   11418:	tst	r6, #2
   1141c:	addne	r0, r4, #65	; 0x41
   11420:	blne	11580 <putchar_unlocked@plt+0x710>
   11424:	tst	r6, #4
   11428:	addne	r0, r4, #130	; 0x82
   1142c:	blne	11580 <putchar_unlocked@plt+0x710>
   11430:	tst	r6, #8
   11434:	addne	r0, r4, #195	; 0xc3
   11438:	blne	11580 <putchar_unlocked@plt+0x710>
   1143c:	tst	r6, #16
   11440:	addne	r0, r4, #260	; 0x104
   11444:	blne	11580 <putchar_unlocked@plt+0x710>
   11448:	cmn	r6, #1
   1144c:	andsne	r0, r6, #32
   11450:	beq	11460 <putchar_unlocked@plt+0x5f0>
   11454:	movw	r0, #18016	; 0x4660
   11458:	movt	r0, #1
   1145c:	bl	11580 <putchar_unlocked@plt+0x710>
   11460:	cmn	r6, #1
   11464:	andsne	r0, r6, #64	; 0x40
   11468:	beq	11478 <putchar_unlocked@plt+0x608>
   1146c:	movw	r0, #18016	; 0x4660
   11470:	movt	r0, #1
   11474:	bl	11580 <putchar_unlocked@plt+0x710>
   11478:	tst	r6, #128	; 0x80
   1147c:	beq	1148c <putchar_unlocked@plt+0x61c>
   11480:	movw	r0, #17502	; 0x445e
   11484:	movt	r0, #1
   11488:	bl	11580 <putchar_unlocked@plt+0x710>
   1148c:	mov	r0, #10
   11490:	bl	10e70 <putchar_unlocked@plt>
   11494:	mov	r0, #0
   11498:	sub	sp, fp, #28
   1149c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   114a0:	cmn	r0, #3
   114a4:	bne	11504 <putchar_unlocked@plt+0x694>
   114a8:	movw	r0, #20684	; 0x50cc
   114ac:	ldr	r2, [r9]
   114b0:	movw	r7, #17837	; 0x45ad
   114b4:	mov	r1, #0
   114b8:	movt	r0, #2
   114bc:	movt	r7, #1
   114c0:	str	r1, [sp, #4]
   114c4:	ldr	r3, [r0]
   114c8:	movw	r0, #20780	; 0x512c
   114cc:	str	r7, [sp]
   114d0:	movt	r0, #2
   114d4:	ldr	r0, [r0]
   114d8:	movw	r7, #17444	; 0x4424
   114dc:	movw	r1, #17450	; 0x442a
   114e0:	cmp	r2, #1
   114e4:	movw	r2, #17630	; 0x44de
   114e8:	movt	r7, #1
   114ec:	movt	r1, #1
   114f0:	movt	r2, #1
   114f4:	moveq	r1, r7
   114f8:	bl	135c0 <putchar_unlocked@plt+0x2750>
   114fc:	mov	r0, #0
   11500:	bl	10da4 <exit@plt>
   11504:	cmn	r0, #2
   11508:	bne	1154c <putchar_unlocked@plt+0x6dc>
   1150c:	mov	r0, #0
   11510:	bl	10f6c <putchar_unlocked@plt+0xfc>
   11514:	movw	r1, #17873	; 0x45d1
   11518:	mov	r0, #0
   1151c:	mov	r2, #5
   11520:	movt	r1, #1
   11524:	bl	10ce4 <dcgettext@plt>
   11528:	mov	r5, r0
   1152c:	ldr	r0, [r7]
   11530:	ldr	r0, [r4, r0, lsl #2]
   11534:	bl	130d4 <putchar_unlocked@plt+0x2264>
   11538:	mov	r3, r0
   1153c:	mov	r0, #0
   11540:	mov	r1, #0
   11544:	mov	r2, r5
   11548:	bl	10d50 <error@plt>
   1154c:	mov	r0, #1
   11550:	bl	10f6c <putchar_unlocked@plt+0xfc>
   11554:	bl	10dbc <__errno_location@plt>
   11558:	ldr	r4, [r0]
   1155c:	movw	r1, #17479	; 0x4447
   11560:	mov	r0, #0
   11564:	mov	r2, #5
   11568:	movt	r1, #1
   1156c:	bl	10ce4 <dcgettext@plt>
   11570:	mov	r2, r0
   11574:	mov	r0, #1
   11578:	mov	r1, r4
   1157c:	bl	10d50 <error@plt>
   11580:	push	{r4, r5, fp, lr}
   11584:	add	fp, sp, #8
   11588:	movw	r5, #20785	; 0x5131
   1158c:	mov	r4, r0
   11590:	movt	r5, #2
   11594:	ldrb	r0, [r5]
   11598:	cmp	r0, #1
   1159c:	bne	115a8 <putchar_unlocked@plt+0x738>
   115a0:	mov	r0, #32
   115a4:	bl	10e70 <putchar_unlocked@plt>
   115a8:	mov	r0, #1
   115ac:	strb	r0, [r5]
   115b0:	movw	r0, #20780	; 0x512c
   115b4:	movt	r0, #2
   115b8:	ldr	r1, [r0]
   115bc:	mov	r0, r4
   115c0:	pop	{r4, r5, fp, lr}
   115c4:	b	10c78 <fputs_unlocked@plt>
   115c8:	movw	r1, #20788	; 0x5134
   115cc:	movt	r1, #2
   115d0:	str	r0, [r1]
   115d4:	bx	lr
   115d8:	movw	r1, #20792	; 0x5138
   115dc:	movt	r1, #2
   115e0:	strb	r0, [r1]
   115e4:	bx	lr
   115e8:	push	{r4, r5, r6, sl, fp, lr}
   115ec:	add	fp, sp, #16
   115f0:	sub	sp, sp, #8
   115f4:	movw	r0, #20780	; 0x512c
   115f8:	movt	r0, #2
   115fc:	ldr	r0, [r0]
   11600:	bl	13c30 <putchar_unlocked@plt+0x2dc0>
   11604:	cmp	r0, #0
   11608:	beq	11630 <putchar_unlocked@plt+0x7c0>
   1160c:	movw	r0, #20792	; 0x5138
   11610:	movt	r0, #2
   11614:	ldrb	r0, [r0]
   11618:	cmp	r0, #0
   1161c:	beq	11650 <putchar_unlocked@plt+0x7e0>
   11620:	bl	10dbc <__errno_location@plt>
   11624:	ldr	r0, [r0]
   11628:	cmp	r0, #32
   1162c:	bne	11650 <putchar_unlocked@plt+0x7e0>
   11630:	movw	r0, #20776	; 0x5128
   11634:	movt	r0, #2
   11638:	ldr	r0, [r0]
   1163c:	bl	13c30 <putchar_unlocked@plt+0x2dc0>
   11640:	cmp	r0, #0
   11644:	subeq	sp, fp, #16
   11648:	popeq	{r4, r5, r6, sl, fp, pc}
   1164c:	b	116c0 <putchar_unlocked@plt+0x850>
   11650:	movw	r1, #18367	; 0x47bf
   11654:	mov	r0, #0
   11658:	mov	r2, #5
   1165c:	movt	r1, #1
   11660:	bl	10ce4 <dcgettext@plt>
   11664:	mov	r4, r0
   11668:	movw	r0, #20788	; 0x5134
   1166c:	movt	r0, #2
   11670:	ldr	r6, [r0]
   11674:	bl	10dbc <__errno_location@plt>
   11678:	ldr	r5, [r0]
   1167c:	cmp	r6, #0
   11680:	bne	1169c <putchar_unlocked@plt+0x82c>
   11684:	movw	r2, #18383	; 0x47cf
   11688:	mov	r0, #0
   1168c:	mov	r1, r5
   11690:	mov	r3, r4
   11694:	movt	r2, #1
   11698:	b	116bc <putchar_unlocked@plt+0x84c>
   1169c:	mov	r0, r6
   116a0:	bl	12e94 <putchar_unlocked@plt+0x2024>
   116a4:	movw	r2, #18379	; 0x47cb
   116a8:	mov	r3, r0
   116ac:	str	r4, [sp]
   116b0:	mov	r0, #0
   116b4:	mov	r1, r5
   116b8:	movt	r2, #1
   116bc:	bl	10d50 <error@plt>
   116c0:	movw	r0, #20688	; 0x50d0
   116c4:	movt	r0, #2
   116c8:	ldr	r0, [r0]
   116cc:	bl	10ca8 <_exit@plt>
   116d0:	push	{r4, r5, fp, lr}
   116d4:	add	fp, sp, #8
   116d8:	cmp	r0, #0
   116dc:	beq	11770 <putchar_unlocked@plt+0x900>
   116e0:	mov	r1, #47	; 0x2f
   116e4:	mov	r4, r0
   116e8:	bl	10e28 <strrchr@plt>
   116ec:	cmp	r0, #0
   116f0:	mov	r5, r4
   116f4:	addne	r5, r0, #1
   116f8:	sub	r0, r5, r4
   116fc:	cmp	r0, #7
   11700:	blt	11754 <putchar_unlocked@plt+0x8e4>
   11704:	movw	r1, #18442	; 0x480a
   11708:	sub	r0, r5, #7
   1170c:	mov	r2, #7
   11710:	movt	r1, #1
   11714:	bl	10e58 <strncmp@plt>
   11718:	cmp	r0, #0
   1171c:	bne	11754 <putchar_unlocked@plt+0x8e4>
   11720:	movw	r1, #18450	; 0x4812
   11724:	mov	r0, r5
   11728:	mov	r2, #3
   1172c:	movt	r1, #1
   11730:	bl	10e58 <strncmp@plt>
   11734:	cmp	r0, #0
   11738:	beq	11744 <putchar_unlocked@plt+0x8d4>
   1173c:	mov	r4, r5
   11740:	b	11754 <putchar_unlocked@plt+0x8e4>
   11744:	movw	r0, #20760	; 0x5118
   11748:	add	r4, r5, #3
   1174c:	movt	r0, #2
   11750:	str	r4, [r0]
   11754:	movw	r0, #20764	; 0x511c
   11758:	movt	r0, #2
   1175c:	str	r4, [r0]
   11760:	movw	r0, #20796	; 0x513c
   11764:	movt	r0, #2
   11768:	str	r4, [r0]
   1176c:	pop	{r4, r5, fp, pc}
   11770:	movw	r0, #20776	; 0x5128
   11774:	movt	r0, #2
   11778:	ldr	r1, [r0]
   1177c:	movw	r0, #18386	; 0x47d2
   11780:	movt	r0, #1
   11784:	bl	10e4c <fputs@plt>
   11788:	bl	10e64 <abort@plt>
   1178c:	push	{r4, r5, r6, sl, fp, lr}
   11790:	add	fp, sp, #16
   11794:	mov	r4, r0
   11798:	movw	r0, #20800	; 0x5140
   1179c:	movt	r0, #2
   117a0:	cmp	r4, #0
   117a4:	moveq	r4, r0
   117a8:	bl	10dbc <__errno_location@plt>
   117ac:	ldr	r6, [r0]
   117b0:	mov	r5, r0
   117b4:	mov	r0, r4
   117b8:	mov	r1, #48	; 0x30
   117bc:	bl	13a18 <putchar_unlocked@plt+0x2ba8>
   117c0:	str	r6, [r5]
   117c4:	pop	{r4, r5, r6, sl, fp, pc}
   117c8:	movw	r1, #20800	; 0x5140
   117cc:	cmp	r0, #0
   117d0:	movt	r1, #2
   117d4:	movne	r1, r0
   117d8:	ldr	r0, [r1]
   117dc:	bx	lr
   117e0:	movw	r2, #20800	; 0x5140
   117e4:	cmp	r0, #0
   117e8:	movt	r2, #2
   117ec:	movne	r2, r0
   117f0:	str	r1, [r2]
   117f4:	bx	lr
   117f8:	movw	r3, #20800	; 0x5140
   117fc:	cmp	r0, #0
   11800:	movt	r3, #2
   11804:	movne	r3, r0
   11808:	ubfx	r0, r1, #5, #3
   1180c:	and	r1, r1, #31
   11810:	add	r0, r3, r0, lsl #2
   11814:	ldr	r3, [r0, #8]
   11818:	eor	r2, r2, r3, lsr r1
   1181c:	and	r2, r2, #1
   11820:	eor	r2, r3, r2, lsl r1
   11824:	str	r2, [r0, #8]
   11828:	mov	r0, #1
   1182c:	and	r0, r0, r3, lsr r1
   11830:	bx	lr
   11834:	movw	r2, #20800	; 0x5140
   11838:	cmp	r0, #0
   1183c:	movt	r2, #2
   11840:	movne	r2, r0
   11844:	ldr	r0, [r2, #4]
   11848:	str	r1, [r2, #4]
   1184c:	bx	lr
   11850:	movw	r3, #20800	; 0x5140
   11854:	cmp	r0, #0
   11858:	movt	r3, #2
   1185c:	movne	r3, r0
   11860:	cmp	r1, #0
   11864:	mov	r0, #10
   11868:	cmpne	r2, #0
   1186c:	str	r0, [r3]
   11870:	bne	11880 <putchar_unlocked@plt+0xa10>
   11874:	push	{fp, lr}
   11878:	mov	fp, sp
   1187c:	bl	10e64 <abort@plt>
   11880:	str	r1, [r3, #40]	; 0x28
   11884:	str	r2, [r3, #44]	; 0x2c
   11888:	bx	lr
   1188c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11890:	add	fp, sp, #28
   11894:	sub	sp, sp, #20
   11898:	mov	r7, r0
   1189c:	ldr	r0, [fp, #8]
   118a0:	movw	r5, #20800	; 0x5140
   118a4:	mov	r8, r3
   118a8:	mov	r9, r2
   118ac:	mov	sl, r1
   118b0:	movt	r5, #2
   118b4:	cmp	r0, #0
   118b8:	movne	r5, r0
   118bc:	bl	10dbc <__errno_location@plt>
   118c0:	mov	r4, r0
   118c4:	ldm	r5, {r0, r1}
   118c8:	ldr	r2, [r5, #40]	; 0x28
   118cc:	ldr	r3, [r5, #44]	; 0x2c
   118d0:	add	r5, r5, #8
   118d4:	ldr	r6, [r4]
   118d8:	stm	sp, {r0, r1, r5}
   118dc:	str	r2, [sp, #12]
   118e0:	str	r3, [sp, #16]
   118e4:	mov	r0, r7
   118e8:	mov	r1, sl
   118ec:	mov	r2, r9
   118f0:	mov	r3, r8
   118f4:	bl	11904 <putchar_unlocked@plt+0xa94>
   118f8:	str	r6, [r4]
   118fc:	sub	sp, fp, #28
   11900:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11904:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11908:	add	fp, sp, #28
   1190c:	sub	sp, sp, #156	; 0x9c
   11910:	str	r0, [fp, #-56]	; 0xffffffc8
   11914:	ldr	r0, [fp, #12]
   11918:	mov	r4, r1
   1191c:	str	r3, [sp, #80]	; 0x50
   11920:	str	r2, [fp, #-84]	; 0xffffffac
   11924:	and	r1, r0, #4
   11928:	str	r1, [sp, #24]
   1192c:	and	r1, r0, #1
   11930:	str	r1, [sp, #28]
   11934:	ubfx	r7, r0, #1, #1
   11938:	bl	10d20 <__ctype_get_mb_cur_max@plt>
   1193c:	str	r0, [sp, #32]
   11940:	ldr	r0, [fp, #24]
   11944:	ldr	r9, [fp, #8]
   11948:	mov	r2, #0
   1194c:	mov	r1, #0
   11950:	mov	r5, #0
   11954:	str	r2, [sp, #52]	; 0x34
   11958:	mov	r2, #1
   1195c:	str	r0, [sp, #72]	; 0x48
   11960:	ldr	r0, [fp, #20]
   11964:	str	r0, [sp, #64]	; 0x40
   11968:	mov	r0, #0
   1196c:	str	r0, [sp, #92]	; 0x5c
   11970:	mov	r0, #0
   11974:	str	r0, [fp, #-76]	; 0xffffffb4
   11978:	mov	r0, #0
   1197c:	cmp	r9, #10
   11980:	str	r1, [sp, #68]	; 0x44
   11984:	bhi	12984 <putchar_unlocked@plt+0x1b14>
   11988:	add	r1, pc, #28
   1198c:	ldr	ip, [fp, #-84]	; 0xffffffac
   11990:	ldr	lr, [sp, #80]	; 0x50
   11994:	mov	r6, r4
   11998:	mov	r8, #0
   1199c:	mov	r3, #1
   119a0:	mov	sl, #0
   119a4:	mov	r4, r2
   119a8:	ldr	pc, [r1, r9, lsl #2]
   119ac:	andeq	r1, r1, ip, ror sl
   119b0:			; <UNDEFINED> instruction: 0x00011ab8
   119b4:	andeq	r1, r1, ip, lsl #21
   119b8:	andeq	r1, r1, r4, ror sl
   119bc:	andeq	r1, r1, ip, lsr #21
   119c0:	andeq	r1, r1, r4, lsl #22
   119c4:	muleq	r1, ip, sl
   119c8:	andeq	r1, r1, r4, ror #22
   119cc:	ldrdeq	r1, [r1], -r8
   119d0:	ldrdeq	r1, [r1], -r8
   119d4:	andeq	r1, r1, r0, lsl #20
   119d8:	movw	r0, #18534	; 0x4866
   119dc:	mov	r1, r9
   119e0:	movt	r0, #1
   119e4:	bl	130ec <putchar_unlocked@plt+0x227c>
   119e8:	str	r0, [sp, #64]	; 0x40
   119ec:	movw	r0, #18536	; 0x4868
   119f0:	mov	r1, r9
   119f4:	movt	r0, #1
   119f8:	bl	130ec <putchar_unlocked@plt+0x227c>
   119fc:	str	r0, [sp, #72]	; 0x48
   11a00:	mov	r8, #0
   11a04:	mov	sl, r7
   11a08:	tst	r7, #1
   11a0c:	str	r5, [fp, #-48]	; 0xffffffd0
   11a10:	bne	11a4c <putchar_unlocked@plt+0xbdc>
   11a14:	ldr	r0, [sp, #64]	; 0x40
   11a18:	ldrb	r0, [r0]
   11a1c:	cmp	r0, #0
   11a20:	beq	11a4c <putchar_unlocked@plt+0xbdc>
   11a24:	ldr	r1, [sp, #64]	; 0x40
   11a28:	mov	r8, #0
   11a2c:	add	r1, r1, #1
   11a30:	cmp	r8, r6
   11a34:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   11a38:	strbcc	r0, [r2, r8]
   11a3c:	ldrb	r0, [r1, r8]
   11a40:	add	r8, r8, #1
   11a44:	cmp	r0, #0
   11a48:	bne	11a30 <putchar_unlocked@plt+0xbc0>
   11a4c:	ldr	r7, [sp, #72]	; 0x48
   11a50:	mov	r0, r7
   11a54:	bl	10db0 <strlen@plt>
   11a58:	ldr	ip, [fp, #-84]	; 0xffffffac
   11a5c:	ldr	lr, [sp, #80]	; 0x50
   11a60:	ldr	r5, [fp, #-48]	; 0xffffffd0
   11a64:	str	r0, [fp, #-76]	; 0xffffffb4
   11a68:	str	r7, [sp, #92]	; 0x5c
   11a6c:	mov	r3, #1
   11a70:	b	11b64 <putchar_unlocked@plt+0xcf4>
   11a74:	mov	r0, #1
   11a78:	b	11ab8 <putchar_unlocked@plt+0xc48>
   11a7c:	mov	r9, #0
   11a80:	mov	r8, #0
   11a84:	mov	r3, r0
   11a88:	b	11b60 <putchar_unlocked@plt+0xcf0>
   11a8c:	tst	r7, #1
   11a90:	bne	11ab8 <putchar_unlocked@plt+0xc48>
   11a94:	mov	r3, r0
   11a98:	b	11ae0 <putchar_unlocked@plt+0xc70>
   11a9c:	mov	r0, #1
   11aa0:	mov	r8, #0
   11aa4:	mov	r9, #5
   11aa8:	b	11b18 <putchar_unlocked@plt+0xca8>
   11aac:	mov	r3, #1
   11ab0:	tst	r7, #1
   11ab4:	beq	11ae0 <putchar_unlocked@plt+0xc70>
   11ab8:	mov	r1, #1
   11abc:	mov	r8, #0
   11ac0:	mov	r9, #2
   11ac4:	mov	r3, r0
   11ac8:	mov	sl, #1
   11acc:	str	r1, [fp, #-76]	; 0xffffffb4
   11ad0:	movw	r1, #18536	; 0x4868
   11ad4:	movt	r1, #1
   11ad8:	str	r1, [sp, #92]	; 0x5c
   11adc:	b	11b64 <putchar_unlocked@plt+0xcf4>
   11ae0:	cmp	r6, #0
   11ae4:	mov	r8, #1
   11ae8:	mov	r9, #2
   11aec:	ldrne	r1, [fp, #-56]	; 0xffffffc8
   11af0:	movne	r0, #39	; 0x27
   11af4:	strbne	r0, [r1]
   11af8:	movw	r0, #18536	; 0x4868
   11afc:	movt	r0, #1
   11b00:	b	11b54 <putchar_unlocked@plt+0xce4>
   11b04:	mov	r9, #5
   11b08:	tst	r7, #1
   11b0c:	beq	11b34 <putchar_unlocked@plt+0xcc4>
   11b10:	mov	r0, #1
   11b14:	mov	r8, #0
   11b18:	str	r0, [fp, #-76]	; 0xffffffb4
   11b1c:	movw	r0, #18532	; 0x4864
   11b20:	mov	r3, #1
   11b24:	mov	sl, #1
   11b28:	movt	r0, #1
   11b2c:	str	r0, [sp, #92]	; 0x5c
   11b30:	b	11b64 <putchar_unlocked@plt+0xcf4>
   11b34:	cmp	r6, #0
   11b38:	mov	r8, #1
   11b3c:	mov	r3, #1
   11b40:	ldrne	r1, [fp, #-56]	; 0xffffffc8
   11b44:	movne	r0, #34	; 0x22
   11b48:	strbne	r0, [r1]
   11b4c:	movw	r0, #18532	; 0x4864
   11b50:	movt	r0, #1
   11b54:	str	r0, [sp, #92]	; 0x5c
   11b58:	mov	r0, #1
   11b5c:	str	r0, [fp, #-76]	; 0xffffffb4
   11b60:	mov	sl, #0
   11b64:	ldr	r0, [fp, #16]
   11b68:	mov	r7, #0
   11b6c:	str	r9, [fp, #-64]	; 0xffffffc0
   11b70:	str	sl, [fp, #-72]	; 0xffffffb8
   11b74:	str	r3, [sp, #84]	; 0x54
   11b78:	cmp	r0, #0
   11b7c:	movwne	r0, #1
   11b80:	and	r0, r0, sl
   11b84:	str	r0, [fp, #-88]	; 0xffffffa8
   11b88:	ldr	r0, [fp, #-76]	; 0xffffffb4
   11b8c:	cmp	r0, #0
   11b90:	movwne	r0, #1
   11b94:	subs	r2, r9, #2
   11b98:	and	r1, r0, sl
   11b9c:	str	r2, [fp, #-80]	; 0xffffffb0
   11ba0:	and	r1, r3, r1
   11ba4:	str	r1, [sp, #44]	; 0x2c
   11ba8:	clz	r1, r2
   11bac:	lsr	r1, r1, #5
   11bb0:	and	r1, r1, sl
   11bb4:	str	r1, [sp, #56]	; 0x38
   11bb8:	mov	r1, r2
   11bbc:	eor	r2, sl, #1
   11bc0:	movwne	r1, #1
   11bc4:	str	r2, [sp, #88]	; 0x58
   11bc8:	orr	r2, r1, r2
   11bcc:	and	r1, r1, r3
   11bd0:	and	r0, r0, r1
   11bd4:	str	r2, [sp, #60]	; 0x3c
   11bd8:	str	r1, [fp, #-68]	; 0xffffffbc
   11bdc:	str	r0, [fp, #-60]	; 0xffffffc4
   11be0:	eor	r0, r3, #1
   11be4:	str	r0, [sp, #48]	; 0x30
   11be8:	cmn	lr, #1
   11bec:	beq	11bfc <putchar_unlocked@plt+0xd8c>
   11bf0:	cmp	r7, lr
   11bf4:	bne	11c08 <putchar_unlocked@plt+0xd98>
   11bf8:	b	127b4 <putchar_unlocked@plt+0x1944>
   11bfc:	ldrb	r0, [ip, r7]
   11c00:	cmp	r0, #0
   11c04:	beq	127bc <putchar_unlocked@plt+0x194c>
   11c08:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11c0c:	mov	r9, #0
   11c10:	str	r5, [fp, #-48]	; 0xffffffd0
   11c14:	str	r6, [fp, #-52]	; 0xffffffcc
   11c18:	cmp	r0, #0
   11c1c:	beq	11c5c <putchar_unlocked@plt+0xdec>
   11c20:	ldr	r0, [fp, #-76]	; 0xffffffb4
   11c24:	mov	r5, r4
   11c28:	add	r4, r7, r0
   11c2c:	cmp	r0, #2
   11c30:	bcc	11c4c <putchar_unlocked@plt+0xddc>
   11c34:	cmn	lr, #1
   11c38:	bne	11c4c <putchar_unlocked@plt+0xddc>
   11c3c:	mov	r0, ip
   11c40:	bl	10db0 <strlen@plt>
   11c44:	ldr	ip, [fp, #-84]	; 0xffffffac
   11c48:	mov	lr, r0
   11c4c:	cmp	r4, lr
   11c50:	bls	11c64 <putchar_unlocked@plt+0xdf4>
   11c54:	mov	r6, #0
   11c58:	b	11ca4 <putchar_unlocked@plt+0xe34>
   11c5c:	mov	r6, #0
   11c60:	b	11ca8 <putchar_unlocked@plt+0xe38>
   11c64:	ldr	r1, [sp, #92]	; 0x5c
   11c68:	ldr	r2, [fp, #-76]	; 0xffffffb4
   11c6c:	add	r0, ip, r7
   11c70:	mov	r4, lr
   11c74:	bl	10ccc <memcmp@plt>
   11c78:	ldr	r2, [sp, #88]	; 0x58
   11c7c:	cmp	r0, #0
   11c80:	mov	r1, r0
   11c84:	movwne	r1, #1
   11c88:	orr	r1, r1, r2
   11c8c:	tst	r1, #1
   11c90:	beq	12850 <putchar_unlocked@plt+0x19e0>
   11c94:	ldr	ip, [fp, #-84]	; 0xffffffac
   11c98:	clz	r0, r0
   11c9c:	mov	lr, r4
   11ca0:	lsr	r6, r0, #5
   11ca4:	mov	r4, r5
   11ca8:	ldrb	r5, [ip, r7]
   11cac:	cmp	r5, #126	; 0x7e
   11cb0:	bhi	12078 <putchar_unlocked@plt+0x1208>
   11cb4:	add	r3, pc, #16
   11cb8:	mov	sl, #1
   11cbc:	mov	r2, #110	; 0x6e
   11cc0:	mov	r0, #97	; 0x61
   11cc4:	mov	r1, #0
   11cc8:	ldr	pc, [r3, r5, lsl #2]
   11ccc:	andeq	r1, r1, ip, asr pc
   11cd0:	andeq	r2, r1, r8, ror r0
   11cd4:	andeq	r2, r1, r8, ror r0
   11cd8:	andeq	r2, r1, r8, ror r0
   11cdc:	andeq	r2, r1, r8, ror r0
   11ce0:	andeq	r2, r1, r8, ror r0
   11ce4:	andeq	r2, r1, r8, ror r0
   11ce8:	andeq	r2, r1, ip, lsl r1
   11cec:	andeq	r1, r1, ip, lsr pc
   11cf0:	andeq	r1, r1, r4, lsr pc
   11cf4:	andeq	r1, r1, r8, asr #30
   11cf8:	andeq	r1, r1, ip, asr #31
   11cfc:	andeq	r1, r1, ip, lsr #30
   11d00:	andeq	r1, r1, r4, asr #30
   11d04:	andeq	r2, r1, r8, ror r0
   11d08:	andeq	r2, r1, r8, ror r0
   11d0c:	andeq	r2, r1, r8, ror r0
   11d10:	andeq	r2, r1, r8, ror r0
   11d14:	andeq	r2, r1, r8, ror r0
   11d18:	andeq	r2, r1, r8, ror r0
   11d1c:	andeq	r2, r1, r8, ror r0
   11d20:	andeq	r2, r1, r8, ror r0
   11d24:	andeq	r2, r1, r8, ror r0
   11d28:	andeq	r2, r1, r8, ror r0
   11d2c:	andeq	r2, r1, r8, ror r0
   11d30:	andeq	r2, r1, r8, ror r0
   11d34:	andeq	r2, r1, r8, ror r0
   11d38:	andeq	r2, r1, r8, ror r0
   11d3c:	andeq	r2, r1, r8, ror r0
   11d40:	andeq	r2, r1, r8, ror r0
   11d44:	andeq	r2, r1, r8, ror r0
   11d48:	andeq	r2, r1, r8, ror r0
   11d4c:	ldrdeq	r2, [r1], -ip
   11d50:	andeq	r2, r1, r0, ror #1
   11d54:	andeq	r2, r1, r0, ror #1
   11d58:	ldrdeq	r1, [r1], -ip
   11d5c:	andeq	r2, r1, r0, ror #1
   11d60:	andeq	r1, r1, r8, asr #29
   11d64:	andeq	r2, r1, r0, ror #1
   11d68:	ldrdeq	r1, [r1], -r4
   11d6c:	andeq	r2, r1, r0, ror #1
   11d70:	andeq	r2, r1, r0, ror #1
   11d74:	andeq	r2, r1, r0, ror #1
   11d78:	andeq	r1, r1, r8, asr #29
   11d7c:	andeq	r1, r1, r8, asr #29
   11d80:	andeq	r1, r1, r8, asr #29
   11d84:	andeq	r1, r1, r8, asr #29
   11d88:	andeq	r1, r1, r8, asr #29
   11d8c:	andeq	r1, r1, r8, asr #29
   11d90:	andeq	r1, r1, r8, asr #29
   11d94:	andeq	r1, r1, r8, asr #29
   11d98:	andeq	r1, r1, r8, asr #29
   11d9c:	andeq	r1, r1, r8, asr #29
   11da0:	andeq	r1, r1, r8, asr #29
   11da4:	andeq	r1, r1, r8, asr #29
   11da8:	andeq	r1, r1, r8, asr #29
   11dac:	andeq	r1, r1, r8, asr #29
   11db0:	andeq	r1, r1, r8, asr #29
   11db4:	andeq	r1, r1, r8, asr #29
   11db8:	andeq	r2, r1, r0, ror #1
   11dbc:	andeq	r2, r1, r0, ror #1
   11dc0:	andeq	r2, r1, r0, ror #1
   11dc4:	andeq	r2, r1, r0, ror #1
   11dc8:	andeq	r1, r1, r0, lsr #31
   11dcc:	andeq	r2, r1, r8, ror r0
   11dd0:	andeq	r1, r1, r8, asr #29
   11dd4:	andeq	r1, r1, r8, asr #29
   11dd8:	andeq	r1, r1, r8, asr #29
   11ddc:	andeq	r1, r1, r8, asr #29
   11de0:	andeq	r1, r1, r8, asr #29
   11de4:	andeq	r1, r1, r8, asr #29
   11de8:	andeq	r1, r1, r8, asr #29
   11dec:	andeq	r1, r1, r8, asr #29
   11df0:	andeq	r1, r1, r8, asr #29
   11df4:	andeq	r1, r1, r8, asr #29
   11df8:	andeq	r1, r1, r8, asr #29
   11dfc:	andeq	r1, r1, r8, asr #29
   11e00:	andeq	r1, r1, r8, asr #29
   11e04:	andeq	r1, r1, r8, asr #29
   11e08:	andeq	r1, r1, r8, asr #29
   11e0c:	andeq	r1, r1, r8, asr #29
   11e10:	andeq	r1, r1, r8, asr #29
   11e14:	andeq	r1, r1, r8, asr #29
   11e18:	andeq	r1, r1, r8, asr #29
   11e1c:	andeq	r1, r1, r8, asr #29
   11e20:	andeq	r1, r1, r8, asr #29
   11e24:	andeq	r1, r1, r8, asr #29
   11e28:	andeq	r1, r1, r8, asr #29
   11e2c:	andeq	r1, r1, r8, asr #29
   11e30:	andeq	r1, r1, r8, asr #29
   11e34:	andeq	r1, r1, r8, asr #29
   11e38:	andeq	r2, r1, r0, ror #1
   11e3c:	andeq	r1, r1, r8, lsl #30
   11e40:	andeq	r1, r1, r8, asr #29
   11e44:	andeq	r2, r1, r0, ror #1
   11e48:	andeq	r1, r1, r8, asr #29
   11e4c:	andeq	r2, r1, r0, ror #1
   11e50:	andeq	r1, r1, r8, asr #29
   11e54:	andeq	r1, r1, r8, asr #29
   11e58:	andeq	r1, r1, r8, asr #29
   11e5c:	andeq	r1, r1, r8, asr #29
   11e60:	andeq	r1, r1, r8, asr #29
   11e64:	andeq	r1, r1, r8, asr #29
   11e68:	andeq	r1, r1, r8, asr #29
   11e6c:	andeq	r1, r1, r8, asr #29
   11e70:	andeq	r1, r1, r8, asr #29
   11e74:	andeq	r1, r1, r8, asr #29
   11e78:	andeq	r1, r1, r8, asr #29
   11e7c:	andeq	r1, r1, r8, asr #29
   11e80:	andeq	r1, r1, r8, asr #29
   11e84:	andeq	r1, r1, r8, asr #29
   11e88:	andeq	r1, r1, r8, asr #29
   11e8c:	andeq	r1, r1, r8, asr #29
   11e90:	andeq	r1, r1, r8, asr #29
   11e94:	andeq	r1, r1, r8, asr #29
   11e98:	andeq	r1, r1, r8, asr #29
   11e9c:	andeq	r1, r1, r8, asr #29
   11ea0:	andeq	r1, r1, r8, asr #29
   11ea4:	andeq	r1, r1, r8, asr #29
   11ea8:	andeq	r1, r1, r8, asr #29
   11eac:	andeq	r1, r1, r8, asr #29
   11eb0:	andeq	r1, r1, r8, asr #29
   11eb4:	andeq	r1, r1, r8, asr #29
   11eb8:	andeq	r1, r1, ip, ror #29
   11ebc:	andeq	r2, r1, r0, ror #1
   11ec0:	andeq	r1, r1, ip, ror #29
   11ec4:	ldrdeq	r1, [r1], -ip
   11ec8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   11ecc:	cmp	r0, #0
   11ed0:	beq	12130 <putchar_unlocked@plt+0x12c0>
   11ed4:	ldr	r0, [fp, #16]
   11ed8:	b	12134 <putchar_unlocked@plt+0x12c4>
   11edc:	mov	sl, #0
   11ee0:	cmp	r7, #0
   11ee4:	bne	1234c <putchar_unlocked@plt+0x14dc>
   11ee8:	b	120dc <putchar_unlocked@plt+0x126c>
   11eec:	mov	sl, #0
   11ef0:	cmn	lr, #1
   11ef4:	beq	120c8 <putchar_unlocked@plt+0x1258>
   11ef8:	cmp	r7, #0
   11efc:	cmpeq	lr, #1
   11f00:	bne	1234c <putchar_unlocked@plt+0x14dc>
   11f04:	b	120dc <putchar_unlocked@plt+0x126c>
   11f08:	ldr	r0, [fp, #-64]	; 0xffffffc0
   11f0c:	cmp	r0, #2
   11f10:	bne	12100 <putchar_unlocked@plt+0x1290>
   11f14:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11f18:	tst	r0, #1
   11f1c:	bne	1286c <putchar_unlocked@plt+0x19fc>
   11f20:	mov	r9, #0
   11f24:	mov	r0, #92	; 0x5c
   11f28:	b	12114 <putchar_unlocked@plt+0x12a4>
   11f2c:	mov	r0, #102	; 0x66
   11f30:	b	1211c <putchar_unlocked@plt+0x12ac>
   11f34:	mov	r2, #116	; 0x74
   11f38:	b	11f48 <putchar_unlocked@plt+0x10d8>
   11f3c:	mov	r0, #98	; 0x62
   11f40:	b	1211c <putchar_unlocked@plt+0x12ac>
   11f44:	mov	r2, #114	; 0x72
   11f48:	ldr	r0, [sp, #60]	; 0x3c
   11f4c:	tst	r0, #1
   11f50:	mov	r0, r2
   11f54:	bne	1211c <putchar_unlocked@plt+0x12ac>
   11f58:	b	1286c <putchar_unlocked@plt+0x19fc>
   11f5c:	ldr	r0, [sp, #84]	; 0x54
   11f60:	tst	r0, #1
   11f64:	beq	12208 <putchar_unlocked@plt+0x1398>
   11f68:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11f6c:	tst	r0, #1
   11f70:	bne	12974 <putchar_unlocked@plt+0x1b04>
   11f74:	ldr	r0, [fp, #-64]	; 0xffffffc0
   11f78:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11f7c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   11f80:	cmp	r0, #2
   11f84:	ldr	r0, [fp, #-80]	; 0xffffffb0
   11f88:	movwne	r0, #1
   11f8c:	orr	r0, r0, r3
   11f90:	tst	r0, #1
   11f94:	beq	12688 <putchar_unlocked@plt+0x1818>
   11f98:	mov	r0, r8
   11f9c:	b	126c8 <putchar_unlocked@plt+0x1858>
   11fa0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   11fa4:	mov	r9, #0
   11fa8:	mov	r5, #63	; 0x3f
   11fac:	cmp	r0, #5
   11fb0:	beq	12354 <putchar_unlocked@plt+0x14e4>
   11fb4:	cmp	r0, #2
   11fb8:	bne	12414 <putchar_unlocked@plt+0x15a4>
   11fbc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11fc0:	tst	r0, #1
   11fc4:	beq	12418 <putchar_unlocked@plt+0x15a8>
   11fc8:	b	1286c <putchar_unlocked@plt+0x19fc>
   11fcc:	mov	r0, #118	; 0x76
   11fd0:	b	1211c <putchar_unlocked@plt+0x12ac>
   11fd4:	mov	r0, #1
   11fd8:	mov	r5, #39	; 0x27
   11fdc:	str	r0, [sp, #52]	; 0x34
   11fe0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   11fe4:	cmp	r0, #2
   11fe8:	bne	12070 <putchar_unlocked@plt+0x1200>
   11fec:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11ff0:	tst	r0, #1
   11ff4:	bne	1286c <putchar_unlocked@plt+0x19fc>
   11ff8:	ldr	r3, [sp, #68]	; 0x44
   11ffc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   12000:	mov	r9, #0
   12004:	clz	r1, r2
   12008:	cmp	r3, #0
   1200c:	mov	r0, r3
   12010:	movwne	r0, #1
   12014:	lsr	r1, r1, #5
   12018:	orrs	r0, r0, r1
   1201c:	moveq	r3, r2
   12020:	moveq	r2, r0
   12024:	cmp	r8, r2
   12028:	str	r3, [sp, #68]	; 0x44
   1202c:	str	r2, [fp, #-52]	; 0xffffffcc
   12030:	ldrcc	r1, [fp, #-56]	; 0xffffffc8
   12034:	movcc	r0, #39	; 0x27
   12038:	strbcc	r0, [r1, r8]
   1203c:	add	r0, r8, #1
   12040:	cmp	r0, r2
   12044:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   12048:	movcc	r1, #92	; 0x5c
   1204c:	strbcc	r1, [r3, r0]
   12050:	add	r0, r8, #2
   12054:	add	r8, r8, #3
   12058:	cmp	r0, r2
   1205c:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12060:	movcc	r1, #39	; 0x27
   12064:	strbcc	r1, [r2, r0]
   12068:	mov	r0, #0
   1206c:	str	r0, [fp, #-48]	; 0xffffffd0
   12070:	mov	sl, #1
   12074:	b	11ec8 <putchar_unlocked@plt+0x1058>
   12078:	ldr	r0, [sp, #32]
   1207c:	cmp	r0, #1
   12080:	bne	1222c <putchar_unlocked@plt+0x13bc>
   12084:	str	lr, [sp, #80]	; 0x50
   12088:	bl	10d98 <__ctype_b_loc@plt>
   1208c:	ldr	r0, [r0]
   12090:	ldr	ip, [fp, #-84]	; 0xffffffac
   12094:	mov	r1, #1
   12098:	add	r0, r0, r5, lsl #1
   1209c:	ldrb	r0, [r0, #1]
   120a0:	ubfx	sl, r0, #6, #1
   120a4:	ldr	r0, [sp, #48]	; 0x30
   120a8:	mov	r2, r1
   120ac:	cmp	r1, #1
   120b0:	orr	r0, sl, r0
   120b4:	bhi	12420 <putchar_unlocked@plt+0x15b0>
   120b8:	tst	r0, #1
   120bc:	beq	12420 <putchar_unlocked@plt+0x15b0>
   120c0:	ldr	lr, [sp, #80]	; 0x50
   120c4:	b	11ec8 <putchar_unlocked@plt+0x1058>
   120c8:	cmp	r7, #0
   120cc:	bne	12348 <putchar_unlocked@plt+0x14d8>
   120d0:	ldrb	r0, [ip, #1]
   120d4:	cmp	r0, #0
   120d8:	bne	12348 <putchar_unlocked@plt+0x14d8>
   120dc:	mov	r1, #1
   120e0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   120e4:	cmp	r0, #2
   120e8:	bne	120f8 <putchar_unlocked@plt+0x1288>
   120ec:	ldr	r0, [fp, #-72]	; 0xffffffb8
   120f0:	tst	r0, #1
   120f4:	bne	1286c <putchar_unlocked@plt+0x19fc>
   120f8:	mov	sl, r1
   120fc:	b	11ec8 <putchar_unlocked@plt+0x1058>
   12100:	ldr	r1, [sp, #44]	; 0x2c
   12104:	mov	r9, #0
   12108:	mov	r0, #92	; 0x5c
   1210c:	cmp	r1, #0
   12110:	beq	1211c <putchar_unlocked@plt+0x12ac>
   12114:	mov	sl, #0
   12118:	b	12634 <putchar_unlocked@plt+0x17c4>
   1211c:	ldr	r1, [sp, #84]	; 0x54
   12120:	mov	sl, #0
   12124:	mov	r9, #0
   12128:	tst	r1, #1
   1212c:	bne	12168 <putchar_unlocked@plt+0x12f8>
   12130:	ldr	r0, [fp, #-88]	; 0xffffffa8
   12134:	cmp	r0, #0
   12138:	mov	r0, r5
   1213c:	beq	12160 <putchar_unlocked@plt+0x12f0>
   12140:	ldr	r1, [fp, #16]
   12144:	ubfx	r0, r5, #5, #3
   12148:	mov	r2, #1
   1214c:	ldr	r0, [r1, r0, lsl #2]
   12150:	and	r1, r5, #31
   12154:	tst	r0, r2, lsl r1
   12158:	mov	r0, r5
   1215c:	bne	12168 <putchar_unlocked@plt+0x12f8>
   12160:	cmp	r6, #0
   12164:	beq	12634 <putchar_unlocked@plt+0x17c4>
   12168:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1216c:	ldr	r6, [fp, #-52]	; 0xffffffcc
   12170:	tst	r1, #1
   12174:	bne	12848 <putchar_unlocked@plt+0x19d8>
   12178:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1217c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12180:	cmp	r1, #2
   12184:	ldr	r1, [fp, #-80]	; 0xffffffb0
   12188:	movwne	r1, #1
   1218c:	orr	r1, r1, r5
   12190:	tst	r1, #1
   12194:	bne	121d8 <putchar_unlocked@plt+0x1368>
   12198:	cmp	r8, r6
   1219c:	mov	r5, #1
   121a0:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   121a4:	movcc	r1, #39	; 0x27
   121a8:	strbcc	r1, [r2, r8]
   121ac:	add	r1, r8, #1
   121b0:	cmp	r1, r6
   121b4:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   121b8:	movcc	r2, #36	; 0x24
   121bc:	strbcc	r2, [r3, r1]
   121c0:	add	r1, r8, #2
   121c4:	add	r8, r8, #3
   121c8:	cmp	r1, r6
   121cc:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   121d0:	movcc	r2, #39	; 0x27
   121d4:	strbcc	r2, [r3, r1]
   121d8:	cmp	r8, r6
   121dc:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   121e0:	movcc	r1, #92	; 0x5c
   121e4:	strbcc	r1, [r2, r8]
   121e8:	add	r8, r8, #1
   121ec:	cmp	r8, r6
   121f0:	and	r4, r4, sl
   121f4:	ldrcc	r1, [fp, #-56]	; 0xffffffc8
   121f8:	strbcc	r0, [r1, r8]
   121fc:	add	r8, r8, #1
   12200:	add	r7, r7, #1
   12204:	b	11be8 <putchar_unlocked@plt+0xd78>
   12208:	ldr	r0, [sp, #28]
   1220c:	mov	sl, #0
   12210:	mov	r9, #0
   12214:	mov	r5, #0
   12218:	cmp	r0, #0
   1221c:	beq	12130 <putchar_unlocked@plt+0x12c0>
   12220:	ldr	r6, [fp, #-52]	; 0xffffffcc
   12224:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12228:	b	12200 <putchar_unlocked@plt+0x1390>
   1222c:	mov	r0, #0
   12230:	cmn	lr, #1
   12234:	str	r6, [sp, #76]	; 0x4c
   12238:	str	r4, [sp, #20]
   1223c:	str	r0, [fp, #-36]	; 0xffffffdc
   12240:	str	r0, [fp, #-40]	; 0xffffffd8
   12244:	bne	12258 <putchar_unlocked@plt+0x13e8>
   12248:	mov	r0, ip
   1224c:	bl	10db0 <strlen@plt>
   12250:	ldr	ip, [fp, #-84]	; 0xffffffac
   12254:	mov	lr, r0
   12258:	add	r0, ip, r7
   1225c:	mov	sl, #1
   12260:	mov	r6, #0
   12264:	sub	r4, fp, #40	; 0x28
   12268:	str	lr, [sp, #80]	; 0x50
   1226c:	str	r0, [sp, #36]	; 0x24
   12270:	str	r6, [sp, #40]	; 0x28
   12274:	add	r6, r6, r7
   12278:	sub	r0, fp, #44	; 0x2c
   1227c:	mov	r3, r4
   12280:	add	r1, ip, r6
   12284:	sub	r2, lr, r6
   12288:	bl	13eac <putchar_unlocked@plt+0x303c>
   1228c:	cmp	r0, #0
   12290:	beq	1279c <putchar_unlocked@plt+0x192c>
   12294:	cmn	r0, #1
   12298:	beq	1275c <putchar_unlocked@plt+0x18ec>
   1229c:	ldr	lr, [sp, #80]	; 0x50
   122a0:	cmn	r0, #2
   122a4:	beq	12764 <putchar_unlocked@plt+0x18f4>
   122a8:	ldr	r2, [sp, #56]	; 0x38
   122ac:	cmp	r0, #2
   122b0:	mov	r1, #0
   122b4:	movwcc	r1, #1
   122b8:	eor	r2, r2, #1
   122bc:	orrs	r1, r2, r1
   122c0:	bne	1230c <putchar_unlocked@plt+0x149c>
   122c4:	ldr	r1, [sp, #40]	; 0x28
   122c8:	ldr	r2, [sp, #36]	; 0x24
   122cc:	add	ip, r2, r1
   122d0:	mov	r2, #1
   122d4:	ldrb	r3, [ip, r2]
   122d8:	sub	r6, r3, #94	; 0x5e
   122dc:	cmp	r6, #30
   122e0:	bhi	122f4 <putchar_unlocked@plt+0x1484>
   122e4:	mov	r4, #1
   122e8:	mov	r1, #1073741829	; 0x40000005
   122ec:	tst	r1, r4, lsl r6
   122f0:	bne	12868 <putchar_unlocked@plt+0x19f8>
   122f4:	sub	r3, r3, #91	; 0x5b
   122f8:	cmp	r3, #2
   122fc:	bcc	12868 <putchar_unlocked@plt+0x19f8>
   12300:	add	r2, r2, #1
   12304:	cmp	r2, r0
   12308:	bcc	122d4 <putchar_unlocked@plt+0x1464>
   1230c:	ldr	r6, [sp, #40]	; 0x28
   12310:	add	r6, r0, r6
   12314:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12318:	bl	10d08 <iswprint@plt>
   1231c:	cmp	r0, #0
   12320:	sub	r4, fp, #40	; 0x28
   12324:	movwne	r0, #1
   12328:	and	sl, sl, r0
   1232c:	mov	r0, r4
   12330:	bl	10cc0 <mbsinit@plt>
   12334:	ldr	lr, [sp, #80]	; 0x50
   12338:	ldr	ip, [fp, #-84]	; 0xffffffac
   1233c:	cmp	r0, #0
   12340:	beq	12270 <putchar_unlocked@plt+0x1400>
   12344:	b	127a4 <putchar_unlocked@plt+0x1934>
   12348:	mvn	lr, #0
   1234c:	mov	r9, #0
   12350:	b	11ec8 <putchar_unlocked@plt+0x1058>
   12354:	ldr	r0, [sp, #24]
   12358:	cmp	r0, #0
   1235c:	beq	12414 <putchar_unlocked@plt+0x15a4>
   12360:	add	r0, r7, #2
   12364:	cmp	r0, lr
   12368:	bcs	12414 <putchar_unlocked@plt+0x15a4>
   1236c:	add	r1, ip, r7
   12370:	ldrb	r1, [r1, #1]
   12374:	cmp	r1, #63	; 0x3f
   12378:	bne	12414 <putchar_unlocked@plt+0x15a4>
   1237c:	ldrb	r5, [ip, r0]
   12380:	sub	r1, r5, #33	; 0x21
   12384:	cmp	r1, #29
   12388:	bhi	12414 <putchar_unlocked@plt+0x15a4>
   1238c:	movw	r3, #20929	; 0x51c1
   12390:	mov	r2, #1
   12394:	movt	r3, #14336	; 0x3800
   12398:	tst	r3, r2, lsl r1
   1239c:	beq	12414 <putchar_unlocked@plt+0x15a4>
   123a0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   123a4:	tst	r1, #1
   123a8:	bne	1297c <putchar_unlocked@plt+0x1b0c>
   123ac:	ldr	r1, [fp, #-52]	; 0xffffffcc
   123b0:	mov	r7, r0
   123b4:	cmp	r8, r1
   123b8:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   123bc:	movcc	r1, #63	; 0x3f
   123c0:	strbcc	r1, [r2, r8]
   123c4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   123c8:	add	r1, r8, #1
   123cc:	cmp	r1, r2
   123d0:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   123d4:	movcc	r2, #34	; 0x22
   123d8:	strbcc	r2, [r3, r1]
   123dc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   123e0:	add	r1, r8, #2
   123e4:	cmp	r1, r2
   123e8:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   123ec:	movcc	r2, #34	; 0x22
   123f0:	strbcc	r2, [r3, r1]
   123f4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   123f8:	add	r1, r8, #3
   123fc:	add	r8, r8, #4
   12400:	cmp	r1, r2
   12404:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   12408:	movcc	r2, #63	; 0x3f
   1240c:	strbcc	r2, [r3, r1]
   12410:	b	12418 <putchar_unlocked@plt+0x15a8>
   12414:	mov	r5, #63	; 0x3f
   12418:	mov	sl, #0
   1241c:	b	11ec8 <putchar_unlocked@plt+0x1058>
   12420:	str	r0, [sp, #40]	; 0x28
   12424:	add	r0, r2, r7
   12428:	str	r6, [sp, #76]	; 0x4c
   1242c:	add	r1, r7, #1
   12430:	ldr	lr, [sp, #80]	; 0x50
   12434:	ldr	r7, [fp, #-64]	; 0xffffffc0
   12438:	ldr	r6, [fp, #-52]	; 0xffffffcc
   1243c:	mov	r3, #0
   12440:	str	r0, [sp, #36]	; 0x24
   12444:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12448:	b	124dc <putchar_unlocked@plt+0x166c>
   1244c:	str	r0, [sp, #76]	; 0x4c
   12450:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12454:	cmp	r9, #0
   12458:	movwne	r9, #1
   1245c:	mvn	r7, r0
   12460:	orr	r7, r7, r9
   12464:	tst	r7, #1
   12468:	bne	124b8 <putchar_unlocked@plt+0x1648>
   1246c:	ldr	r6, [fp, #-52]	; 0xffffffcc
   12470:	cmp	r8, r6
   12474:	bcs	1248c <putchar_unlocked@plt+0x161c>
   12478:	ldr	r7, [fp, #-56]	; 0xffffffc8
   1247c:	mov	r2, r4
   12480:	mov	r4, #39	; 0x27
   12484:	strb	r4, [r7, r8]
   12488:	mov	r4, r2
   1248c:	add	r7, r8, #1
   12490:	cmp	r7, r6
   12494:	bcs	124ac <putchar_unlocked@plt+0x163c>
   12498:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1249c:	mov	r2, r4
   124a0:	mov	r4, #39	; 0x27
   124a4:	strb	r4, [r0, r7]
   124a8:	mov	r4, r2
   124ac:	add	r8, r8, #2
   124b0:	mov	r0, #0
   124b4:	b	124c0 <putchar_unlocked@plt+0x1650>
   124b8:	ldr	r6, [fp, #-52]	; 0xffffffcc
   124bc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   124c0:	cmp	r8, r6
   124c4:	ldr	r7, [fp, #-64]	; 0xffffffc0
   124c8:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   124cc:	strbcc	r5, [r2, r8]
   124d0:	add	r8, r8, #1
   124d4:	ldrb	r5, [ip, r1]
   124d8:	add	r1, r1, #1
   124dc:	ldr	r2, [sp, #40]	; 0x28
   124e0:	tst	r2, #1
   124e4:	beq	12520 <putchar_unlocked@plt+0x16b0>
   124e8:	ldr	r2, [sp, #76]	; 0x4c
   124ec:	str	r0, [fp, #-48]	; 0xffffffd0
   124f0:	tst	r2, #1
   124f4:	beq	12518 <putchar_unlocked@plt+0x16a8>
   124f8:	cmp	r8, r6
   124fc:	bcs	12514 <putchar_unlocked@plt+0x16a4>
   12500:	ldr	r6, [fp, #-56]	; 0xffffffc8
   12504:	mov	r2, r4
   12508:	mov	r4, #92	; 0x5c
   1250c:	strb	r4, [r6, r8]
   12510:	mov	r4, r2
   12514:	add	r8, r8, #1
   12518:	mov	r0, #0
   1251c:	b	12614 <putchar_unlocked@plt+0x17a4>
   12520:	ldr	r2, [fp, #-72]	; 0xffffffb8
   12524:	tst	r2, #1
   12528:	bne	12874 <putchar_unlocked@plt+0x1a04>
   1252c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12530:	cmp	r7, #2
   12534:	movwne	r3, #1
   12538:	orr	r3, r3, r0
   1253c:	tst	r3, #1
   12540:	bne	1259c <putchar_unlocked@plt+0x172c>
   12544:	cmp	r8, r6
   12548:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   1254c:	movcc	r3, #39	; 0x27
   12550:	strbcc	r3, [r2, r8]
   12554:	add	r3, r8, #1
   12558:	cmp	r3, r6
   1255c:	bcs	12574 <putchar_unlocked@plt+0x1704>
   12560:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12564:	mov	r7, r4
   12568:	mov	r4, #36	; 0x24
   1256c:	strb	r4, [r2, r3]
   12570:	mov	r4, r7
   12574:	add	r3, r8, #2
   12578:	cmp	r3, r6
   1257c:	bcs	12594 <putchar_unlocked@plt+0x1724>
   12580:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12584:	mov	r7, r4
   12588:	mov	r4, #39	; 0x27
   1258c:	strb	r4, [r2, r3]
   12590:	mov	r4, r7
   12594:	add	r8, r8, #3
   12598:	mov	r0, #1
   1259c:	cmp	r8, r6
   125a0:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   125a4:	movcc	r3, #92	; 0x5c
   125a8:	strbcc	r3, [r2, r8]
   125ac:	add	r3, r8, #1
   125b0:	cmp	r3, r6
   125b4:	bcs	125d4 <putchar_unlocked@plt+0x1764>
   125b8:	mov	r2, r4
   125bc:	and	r7, r5, #192	; 0xc0
   125c0:	mov	r4, #48	; 0x30
   125c4:	orr	r7, r4, r7, lsr #6
   125c8:	mov	r4, r2
   125cc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   125d0:	strb	r7, [r2, r3]
   125d4:	add	r3, r8, #2
   125d8:	cmp	r3, r6
   125dc:	bcs	125fc <putchar_unlocked@plt+0x178c>
   125e0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   125e4:	mov	r6, r4
   125e8:	lsr	r7, r5, #3
   125ec:	mov	r4, #6
   125f0:	bfi	r7, r4, #3, #29
   125f4:	mov	r4, r6
   125f8:	strb	r7, [r2, r3]
   125fc:	str	r0, [fp, #-48]	; 0xffffffd0
   12600:	ldr	r0, [sp, #76]	; 0x4c
   12604:	mov	r3, #6
   12608:	add	r8, r8, #3
   1260c:	bfi	r5, r3, #3, #29
   12610:	mov	r3, #1
   12614:	ldr	r2, [sp, #36]	; 0x24
   12618:	and	r9, r3, #1
   1261c:	cmp	r2, r1
   12620:	bhi	1244c <putchar_unlocked@plt+0x15dc>
   12624:	cmp	r9, #0
   12628:	sub	r7, r1, #1
   1262c:	mov	r0, r5
   12630:	movwne	r9, #1
   12634:	cmp	r9, #0
   12638:	bne	1267c <putchar_unlocked@plt+0x180c>
   1263c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12640:	ldr	r6, [fp, #-52]	; 0xffffffcc
   12644:	tst	r5, #1
   12648:	beq	121ec <putchar_unlocked@plt+0x137c>
   1264c:	cmp	r8, r6
   12650:	mov	r5, #0
   12654:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12658:	movcc	r1, #39	; 0x27
   1265c:	strbcc	r1, [r2, r8]
   12660:	add	r1, r8, #1
   12664:	add	r8, r8, #2
   12668:	cmp	r1, r6
   1266c:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   12670:	movcc	r2, #39	; 0x27
   12674:	strbcc	r2, [r3, r1]
   12678:	b	121ec <putchar_unlocked@plt+0x137c>
   1267c:	ldr	r6, [fp, #-52]	; 0xffffffcc
   12680:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12684:	b	121ec <putchar_unlocked@plt+0x137c>
   12688:	cmp	r8, r1
   1268c:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12690:	movcc	r0, #39	; 0x27
   12694:	strbcc	r0, [r2, r8]
   12698:	add	r0, r8, #1
   1269c:	cmp	r0, r1
   126a0:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   126a4:	movcc	r2, #36	; 0x24
   126a8:	strbcc	r2, [r3, r0]
   126ac:	add	r0, r8, #2
   126b0:	cmp	r0, r1
   126b4:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   126b8:	movcc	r2, #39	; 0x27
   126bc:	strbcc	r2, [r3, r0]
   126c0:	add	r0, r8, #3
   126c4:	mov	r3, #1
   126c8:	cmp	r0, r1
   126cc:	add	r8, r0, #1
   126d0:	str	r3, [fp, #-48]	; 0xffffffd0
   126d4:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   126d8:	movcc	r1, #92	; 0x5c
   126dc:	strbcc	r1, [r2, r0]
   126e0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   126e4:	cmp	r1, #2
   126e8:	beq	1274c <putchar_unlocked@plt+0x18dc>
   126ec:	add	r1, r7, #1
   126f0:	mov	sl, #0
   126f4:	mov	r9, #1
   126f8:	mov	r5, #48	; 0x30
   126fc:	cmp	r1, lr
   12700:	bcs	11ec8 <putchar_unlocked@plt+0x1058>
   12704:	ldrb	r1, [ip, r1]
   12708:	sub	r1, r1, #48	; 0x30
   1270c:	uxtb	r1, r1
   12710:	cmp	r1, #9
   12714:	bhi	11ec8 <putchar_unlocked@plt+0x1058>
   12718:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1271c:	cmp	r8, r1
   12720:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12724:	movcc	r1, #48	; 0x30
   12728:	strbcc	r1, [r2, r8]
   1272c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   12730:	add	r1, r0, #2
   12734:	add	r8, r0, #3
   12738:	cmp	r1, r2
   1273c:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   12740:	movcc	r2, #48	; 0x30
   12744:	strbcc	r2, [r3, r1]
   12748:	b	11ec8 <putchar_unlocked@plt+0x1058>
   1274c:	mov	r0, #48	; 0x30
   12750:	mov	r9, #1
   12754:	mov	sl, #0
   12758:	b	12160 <putchar_unlocked@plt+0x12f0>
   1275c:	mov	sl, #0
   12760:	b	1279c <putchar_unlocked@plt+0x192c>
   12764:	mov	sl, #0
   12768:	cmp	lr, r6
   1276c:	bls	1279c <putchar_unlocked@plt+0x192c>
   12770:	ldr	ip, [fp, #-84]	; 0xffffffac
   12774:	ldr	r6, [sp, #40]	; 0x28
   12778:	ldr	r0, [sp, #36]	; 0x24
   1277c:	ldrb	r0, [r0, r6]
   12780:	cmp	r0, #0
   12784:	beq	127a4 <putchar_unlocked@plt+0x1934>
   12788:	add	r6, r6, #1
   1278c:	add	r0, r7, r6
   12790:	cmp	r0, lr
   12794:	bcc	12778 <putchar_unlocked@plt+0x1908>
   12798:	b	127a4 <putchar_unlocked@plt+0x1934>
   1279c:	ldr	ip, [fp, #-84]	; 0xffffffac
   127a0:	ldr	r6, [sp, #40]	; 0x28
   127a4:	mov	r1, r6
   127a8:	ldr	r4, [sp, #20]
   127ac:	ldr	r6, [sp, #76]	; 0x4c
   127b0:	b	120a4 <putchar_unlocked@plt+0x1234>
   127b4:	mov	lr, r7
   127b8:	b	127c0 <putchar_unlocked@plt+0x1950>
   127bc:	mvn	lr, #0
   127c0:	ldr	r9, [fp, #-64]	; 0xffffffc0
   127c4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   127c8:	eor	r0, r9, #2
   127cc:	orr	r0, r0, r8
   127d0:	clz	r0, r0
   127d4:	lsr	r0, r0, #5
   127d8:	tst	r1, r0
   127dc:	bne	128d8 <putchar_unlocked@plt+0x1a68>
   127e0:	mov	r0, r1
   127e4:	ldr	r1, [fp, #-80]	; 0xffffffb0
   127e8:	cmp	r9, #2
   127ec:	movwne	r1, #1
   127f0:	orr	r0, r0, r1
   127f4:	tst	r0, #1
   127f8:	bne	12918 <putchar_unlocked@plt+0x1aa8>
   127fc:	ldr	r0, [sp, #52]	; 0x34
   12800:	ldr	r1, [sp, #68]	; 0x44
   12804:	str	lr, [sp, #80]	; 0x50
   12808:	eor	r0, r0, #1
   1280c:	tst	r0, #1
   12810:	bne	12918 <putchar_unlocked@plt+0x1aa8>
   12814:	tst	r4, #1
   12818:	bne	128e0 <putchar_unlocked@plt+0x1a70>
   1281c:	mov	r7, #0
   12820:	cmp	r1, #0
   12824:	beq	12910 <putchar_unlocked@plt+0x1aa0>
   12828:	ldr	r0, [sp, #84]	; 0x54
   1282c:	mov	r3, #0
   12830:	cmp	r6, #0
   12834:	mov	r2, #0
   12838:	mov	r4, r1
   1283c:	str	r3, [fp, #-72]	; 0xffffffb8
   12840:	beq	1197c <putchar_unlocked@plt+0xb0c>
   12844:	b	12918 <putchar_unlocked@plt+0x1aa8>
   12848:	ldr	r7, [fp, #-64]	; 0xffffffc0
   1284c:	b	12874 <putchar_unlocked@plt+0x1a04>
   12850:	ldr	ip, [fp, #-84]	; 0xffffffac
   12854:	mov	r2, #1
   12858:	mov	lr, r4
   1285c:	ldr	r7, [fp, #-64]	; 0xffffffc0
   12860:	ldr	r6, [fp, #-52]	; 0xffffffcc
   12864:	b	12878 <putchar_unlocked@plt+0x1a08>
   12868:	ldr	ip, [fp, #-84]	; 0xffffffac
   1286c:	mov	r7, #2
   12870:	ldr	r6, [fp, #-52]	; 0xffffffcc
   12874:	ldr	r2, [sp, #84]	; 0x54
   12878:	mov	r0, #0
   1287c:	ldr	r1, [fp, #12]
   12880:	tst	r2, #1
   12884:	mov	r2, r7
   12888:	mov	r3, lr
   1288c:	str	r0, [sp, #8]
   12890:	ldr	r0, [sp, #64]	; 0x40
   12894:	movwne	r2, #4
   12898:	cmp	r7, #2
   1289c:	movne	r2, r7
   128a0:	str	r2, [sp]
   128a4:	mov	r2, ip
   128a8:	bic	r1, r1, #2
   128ac:	str	r0, [sp, #12]
   128b0:	ldr	r0, [sp, #72]	; 0x48
   128b4:	str	r1, [sp, #4]
   128b8:	mov	r1, r6
   128bc:	str	r0, [sp, #16]
   128c0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   128c4:	bl	11904 <putchar_unlocked@plt+0xa94>
   128c8:	mov	r8, r0
   128cc:	mov	r0, r8
   128d0:	sub	sp, fp, #28
   128d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   128d8:	mov	r7, #2
   128dc:	b	12874 <putchar_unlocked@plt+0x1a04>
   128e0:	mov	r0, #5
   128e4:	ldr	r2, [fp, #-84]	; 0xffffffac
   128e8:	ldr	r3, [sp, #80]	; 0x50
   128ec:	str	r0, [sp]
   128f0:	ldr	r0, [fp, #12]
   128f4:	str	r0, [sp, #4]
   128f8:	ldr	r0, [fp, #16]
   128fc:	str	r0, [sp, #8]
   12900:	ldr	r0, [sp, #64]	; 0x40
   12904:	str	r0, [sp, #12]
   12908:	ldr	r0, [sp, #72]	; 0x48
   1290c:	b	128bc <putchar_unlocked@plt+0x1a4c>
   12910:	mov	r0, #0
   12914:	str	r0, [fp, #-72]	; 0xffffffb8
   12918:	ldr	r1, [sp, #92]	; 0x5c
   1291c:	cmp	r1, #0
   12920:	beq	12960 <putchar_unlocked@plt+0x1af0>
   12924:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12928:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1292c:	tst	r0, #1
   12930:	bne	12964 <putchar_unlocked@plt+0x1af4>
   12934:	ldrb	r0, [r1]
   12938:	cmp	r0, #0
   1293c:	beq	12964 <putchar_unlocked@plt+0x1af4>
   12940:	add	r1, r1, #1
   12944:	cmp	r8, r6
   12948:	strbcc	r0, [r2, r8]
   1294c:	add	r8, r8, #1
   12950:	ldrb	r0, [r1], #1
   12954:	cmp	r0, #0
   12958:	bne	12944 <putchar_unlocked@plt+0x1ad4>
   1295c:	b	12964 <putchar_unlocked@plt+0x1af4>
   12960:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12964:	cmp	r8, r6
   12968:	movcc	r0, #0
   1296c:	strbcc	r0, [r2, r8]
   12970:	b	128cc <putchar_unlocked@plt+0x1a5c>
   12974:	mov	r2, #1
   12978:	b	1285c <putchar_unlocked@plt+0x19ec>
   1297c:	mov	r7, #5
   12980:	b	12870 <putchar_unlocked@plt+0x1a00>
   12984:	bl	10e64 <abort@plt>
   12988:	mov	r3, r2
   1298c:	mov	r2, #0
   12990:	b	12994 <putchar_unlocked@plt+0x1b24>
   12994:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12998:	add	fp, sp, #28
   1299c:	sub	sp, sp, #36	; 0x24
   129a0:	movw	r8, #20800	; 0x5140
   129a4:	cmp	r3, #0
   129a8:	mov	r4, r2
   129ac:	str	r2, [sp, #24]
   129b0:	mov	r5, r1
   129b4:	mov	r6, r0
   129b8:	str	r0, [sp, #20]
   129bc:	movt	r8, #2
   129c0:	movne	r8, r3
   129c4:	bl	10dbc <__errno_location@plt>
   129c8:	str	r0, [sp, #28]
   129cc:	cmp	r4, #0
   129d0:	add	sl, r8, #8
   129d4:	ldm	r8, {r3, r9}
   129d8:	ldr	r7, [r0]
   129dc:	ldr	r1, [r8, #40]	; 0x28
   129e0:	ldr	r2, [r8, #44]	; 0x2c
   129e4:	mov	r0, #0
   129e8:	orreq	r9, r9, #1
   129ec:	str	r7, [sp, #32]
   129f0:	mov	r7, r5
   129f4:	stm	sp, {r3, r9, sl}
   129f8:	str	r1, [sp, #12]
   129fc:	str	r2, [sp, #16]
   12a00:	mov	r1, #0
   12a04:	mov	r2, r6
   12a08:	mov	r3, r5
   12a0c:	bl	11904 <putchar_unlocked@plt+0xa94>
   12a10:	add	r4, r0, #1
   12a14:	mov	r5, r0
   12a18:	mov	r0, r4
   12a1c:	bl	136f8 <putchar_unlocked@plt+0x2888>
   12a20:	mov	r6, r0
   12a24:	ldr	r0, [r8]
   12a28:	ldr	r2, [r8, #44]	; 0x2c
   12a2c:	ldr	r1, [r8, #40]	; 0x28
   12a30:	mov	r3, r7
   12a34:	stm	sp, {r0, r9, sl}
   12a38:	str	r2, [sp, #16]
   12a3c:	str	r1, [sp, #12]
   12a40:	mov	r0, r6
   12a44:	mov	r1, r4
   12a48:	ldr	r2, [sp, #20]
   12a4c:	bl	11904 <putchar_unlocked@plt+0xa94>
   12a50:	ldr	r0, [sp, #24]
   12a54:	ldr	r1, [sp, #32]
   12a58:	ldr	r2, [sp, #28]
   12a5c:	cmp	r0, #0
   12a60:	str	r1, [r2]
   12a64:	strne	r5, [r0]
   12a68:	mov	r0, r6
   12a6c:	sub	sp, fp, #28
   12a70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a74:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12a78:	add	fp, sp, #24
   12a7c:	movw	r5, #20700	; 0x50dc
   12a80:	movw	r8, #20696	; 0x50d8
   12a84:	movt	r5, #2
   12a88:	movt	r8, #2
   12a8c:	ldr	r0, [r5]
   12a90:	ldr	r4, [r8]
   12a94:	cmp	r0, #2
   12a98:	blt	12ac4 <putchar_unlocked@plt+0x1c54>
   12a9c:	add	r7, r4, #12
   12aa0:	mov	r6, #0
   12aa4:	ldr	r0, [r7, r6, lsl #3]
   12aa8:	bl	13da8 <putchar_unlocked@plt+0x2f38>
   12aac:	ldr	r1, [r5]
   12ab0:	add	r2, r6, #2
   12ab4:	add	r0, r6, #1
   12ab8:	mov	r6, r0
   12abc:	cmp	r2, r1
   12ac0:	blt	12aa4 <putchar_unlocked@plt+0x1c34>
   12ac4:	ldr	r0, [r4, #4]
   12ac8:	movw	r7, #20848	; 0x5170
   12acc:	movt	r7, #2
   12ad0:	cmp	r0, r7
   12ad4:	beq	12aec <putchar_unlocked@plt+0x1c7c>
   12ad8:	bl	13da8 <putchar_unlocked@plt+0x2f38>
   12adc:	movw	r0, #20704	; 0x50e0
   12ae0:	mov	r6, #256	; 0x100
   12ae4:	movt	r0, #2
   12ae8:	strd	r6, [r0]
   12aec:	movw	r6, #20704	; 0x50e0
   12af0:	movt	r6, #2
   12af4:	cmp	r4, r6
   12af8:	beq	12b08 <putchar_unlocked@plt+0x1c98>
   12afc:	mov	r0, r4
   12b00:	bl	13da8 <putchar_unlocked@plt+0x2f38>
   12b04:	str	r6, [r8]
   12b08:	mov	r0, #1
   12b0c:	str	r0, [r5]
   12b10:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12b14:	movw	r3, #20800	; 0x5140
   12b18:	mvn	r2, #0
   12b1c:	movt	r3, #2
   12b20:	b	12b24 <putchar_unlocked@plt+0x1cb4>
   12b24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b28:	add	fp, sp, #28
   12b2c:	sub	sp, sp, #44	; 0x2c
   12b30:	mov	r7, r3
   12b34:	str	r2, [sp, #36]	; 0x24
   12b38:	str	r1, [sp, #32]
   12b3c:	mov	r5, r0
   12b40:	bl	10dbc <__errno_location@plt>
   12b44:	cmp	r5, #0
   12b48:	blt	12cb4 <putchar_unlocked@plt+0x1e44>
   12b4c:	cmn	r5, #-2147483647	; 0x80000001
   12b50:	beq	12cb4 <putchar_unlocked@plt+0x1e44>
   12b54:	movw	r8, #20700	; 0x50dc
   12b58:	movw	r4, #20696	; 0x50d8
   12b5c:	str	r0, [sp, #28]
   12b60:	ldr	r0, [r0]
   12b64:	movt	r8, #2
   12b68:	movt	r4, #2
   12b6c:	ldr	r1, [r8]
   12b70:	ldr	r6, [r4]
   12b74:	str	r0, [sp, #24]
   12b78:	cmp	r1, r5
   12b7c:	ble	12b88 <putchar_unlocked@plt+0x1d18>
   12b80:	mov	sl, r6
   12b84:	b	12bf0 <putchar_unlocked@plt+0x1d80>
   12b88:	movw	r9, #20704	; 0x50e0
   12b8c:	mov	r0, #8
   12b90:	add	r2, r5, #1
   12b94:	str	r1, [fp, #-32]	; 0xffffffe0
   12b98:	mvn	r3, #-2147483648	; 0x80000000
   12b9c:	movt	r9, #2
   12ba0:	str	r0, [sp]
   12ba4:	sub	r2, r2, r1
   12ba8:	sub	r1, fp, #32
   12bac:	subs	r0, r6, r9
   12bb0:	movne	r0, r6
   12bb4:	bl	13828 <putchar_unlocked@plt+0x29b8>
   12bb8:	cmp	r6, r9
   12bbc:	mov	sl, r0
   12bc0:	str	r0, [r4]
   12bc4:	ldrdeq	r0, [r9]
   12bc8:	stmeq	sl, {r0, r1}
   12bcc:	ldr	r1, [r8]
   12bd0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12bd4:	add	r0, sl, r1, lsl #3
   12bd8:	sub	r1, r2, r1
   12bdc:	lsl	r2, r1, #3
   12be0:	mov	r1, #0
   12be4:	bl	10dd4 <memset@plt>
   12be8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12bec:	str	r0, [r8]
   12bf0:	mov	r9, sl
   12bf4:	ldr	r6, [r9, r5, lsl #3]!
   12bf8:	ldr	r4, [r9, #4]!
   12bfc:	ldm	r7, {r0, r1}
   12c00:	ldr	r2, [r7, #40]	; 0x28
   12c04:	ldr	r3, [r7, #44]	; 0x2c
   12c08:	orr	r8, r1, #1
   12c0c:	add	r1, r7, #8
   12c10:	stm	sp, {r0, r8}
   12c14:	add	r0, sp, #8
   12c18:	str	r1, [sp, #20]
   12c1c:	stm	r0, {r1, r2, r3}
   12c20:	mov	r0, r4
   12c24:	mov	r1, r6
   12c28:	ldr	r2, [sp, #32]
   12c2c:	ldr	r3, [sp, #36]	; 0x24
   12c30:	bl	11904 <putchar_unlocked@plt+0xa94>
   12c34:	cmp	r6, r0
   12c38:	bhi	12c9c <putchar_unlocked@plt+0x1e2c>
   12c3c:	add	r6, r0, #1
   12c40:	movw	r0, #20848	; 0x5170
   12c44:	movt	r0, #2
   12c48:	str	r6, [sl, r5, lsl #3]
   12c4c:	cmp	r4, r0
   12c50:	beq	12c5c <putchar_unlocked@plt+0x1dec>
   12c54:	mov	r0, r4
   12c58:	bl	13da8 <putchar_unlocked@plt+0x2f38>
   12c5c:	mov	r0, r6
   12c60:	bl	136f8 <putchar_unlocked@plt+0x2888>
   12c64:	str	r0, [r9]
   12c68:	mov	r4, r0
   12c6c:	add	r3, sp, #8
   12c70:	ldr	r0, [r7]
   12c74:	ldr	r1, [r7, #40]	; 0x28
   12c78:	ldr	r2, [r7, #44]	; 0x2c
   12c7c:	stm	sp, {r0, r8}
   12c80:	ldr	r0, [sp, #20]
   12c84:	stm	r3, {r0, r1, r2}
   12c88:	mov	r0, r4
   12c8c:	mov	r1, r6
   12c90:	ldr	r2, [sp, #32]
   12c94:	ldr	r3, [sp, #36]	; 0x24
   12c98:	bl	11904 <putchar_unlocked@plt+0xa94>
   12c9c:	ldr	r0, [sp, #28]
   12ca0:	ldr	r1, [sp, #24]
   12ca4:	str	r1, [r0]
   12ca8:	mov	r0, r4
   12cac:	sub	sp, fp, #28
   12cb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12cb4:	bl	10e64 <abort@plt>
   12cb8:	movw	r3, #20800	; 0x5140
   12cbc:	movt	r3, #2
   12cc0:	b	12b24 <putchar_unlocked@plt+0x1cb4>
   12cc4:	movw	r3, #20800	; 0x5140
   12cc8:	mov	r1, r0
   12ccc:	mov	r0, #0
   12cd0:	mvn	r2, #0
   12cd4:	movt	r3, #2
   12cd8:	b	12b24 <putchar_unlocked@plt+0x1cb4>
   12cdc:	movw	r3, #20800	; 0x5140
   12ce0:	mov	r2, r1
   12ce4:	mov	r1, r0
   12ce8:	mov	r0, #0
   12cec:	movt	r3, #2
   12cf0:	b	12b24 <putchar_unlocked@plt+0x1cb4>
   12cf4:	push	{fp, lr}
   12cf8:	mov	fp, sp
   12cfc:	sub	sp, sp, #48	; 0x30
   12d00:	vmov.i32	q8, #0	; 0x00000000
   12d04:	mov	ip, #32
   12d08:	mov	r3, sp
   12d0c:	mov	lr, r2
   12d10:	cmp	r1, #10
   12d14:	add	r2, r3, #16
   12d18:	vst1.64	{d16-d17}, [r3], ip
   12d1c:	vst1.64	{d16-d17}, [r3]
   12d20:	vst1.64	{d16-d17}, [r2]
   12d24:	beq	12d44 <putchar_unlocked@plt+0x1ed4>
   12d28:	str	r1, [sp]
   12d2c:	mov	r3, sp
   12d30:	mov	r1, lr
   12d34:	mvn	r2, #0
   12d38:	bl	12b24 <putchar_unlocked@plt+0x1cb4>
   12d3c:	mov	sp, fp
   12d40:	pop	{fp, pc}
   12d44:	bl	10e64 <abort@plt>
   12d48:	push	{r4, sl, fp, lr}
   12d4c:	add	fp, sp, #8
   12d50:	sub	sp, sp, #48	; 0x30
   12d54:	mov	ip, r3
   12d58:	mov	r3, sp
   12d5c:	vmov.i32	q8, #0	; 0x00000000
   12d60:	mov	lr, #32
   12d64:	cmp	r1, #10
   12d68:	add	r4, r3, #16
   12d6c:	vst1.64	{d16-d17}, [r3], lr
   12d70:	vst1.64	{d16-d17}, [r3]
   12d74:	vst1.64	{d16-d17}, [r4]
   12d78:	beq	12d98 <putchar_unlocked@plt+0x1f28>
   12d7c:	str	r1, [sp]
   12d80:	mov	r1, r2
   12d84:	mov	r3, sp
   12d88:	mov	r2, ip
   12d8c:	bl	12b24 <putchar_unlocked@plt+0x1cb4>
   12d90:	sub	sp, fp, #8
   12d94:	pop	{r4, sl, fp, pc}
   12d98:	bl	10e64 <abort@plt>
   12d9c:	mov	r2, r1
   12da0:	mov	r1, r0
   12da4:	mov	r0, #0
   12da8:	b	12cf4 <putchar_unlocked@plt+0x1e84>
   12dac:	mov	r3, r2
   12db0:	mov	r2, r1
   12db4:	mov	r1, r0
   12db8:	mov	r0, #0
   12dbc:	b	12d48 <putchar_unlocked@plt+0x1ed8>
   12dc0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12dc4:	add	fp, sp, #24
   12dc8:	sub	sp, sp, #48	; 0x30
   12dcc:	movw	r8, #20800	; 0x5140
   12dd0:	mov	lr, r0
   12dd4:	mov	r3, sp
   12dd8:	mov	ip, r1
   12ddc:	movt	r8, #2
   12de0:	mov	r1, r3
   12de4:	ldm	r8!, {r0, r4, r5, r6, r7, r9}
   12de8:	stmia	r1!, {r0, r4, r5, r6, r7, r9}
   12dec:	ldm	r8, {r0, r4, r5, r6, r7, r9}
   12df0:	stm	r1, {r0, r4, r5, r6, r7, r9}
   12df4:	ubfx	r0, r2, #5, #3
   12df8:	and	r2, r2, #31
   12dfc:	mov	r4, #1
   12e00:	add	r0, r3, r0, lsl #2
   12e04:	ldr	r1, [r0, #8]
   12e08:	bic	r4, r4, r1, lsr r2
   12e0c:	eor	r1, r1, r4, lsl r2
   12e10:	mov	r2, ip
   12e14:	str	r1, [r0, #8]
   12e18:	mov	r0, #0
   12e1c:	mov	r1, lr
   12e20:	bl	12b24 <putchar_unlocked@plt+0x1cb4>
   12e24:	sub	sp, fp, #24
   12e28:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12e2c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12e30:	add	fp, sp, #24
   12e34:	sub	sp, sp, #48	; 0x30
   12e38:	movw	lr, #20800	; 0x5140
   12e3c:	mov	ip, r0
   12e40:	mov	r3, sp
   12e44:	movt	lr, #2
   12e48:	mov	r2, r3
   12e4c:	ldm	lr!, {r0, r4, r5, r6, r7, r8}
   12e50:	stmia	r2!, {r0, r4, r5, r6, r7, r8}
   12e54:	ldm	lr, {r0, r4, r5, r6, r7, r8}
   12e58:	stm	r2, {r0, r4, r5, r6, r7, r8}
   12e5c:	ubfx	r0, r1, #5, #3
   12e60:	and	r1, r1, #31
   12e64:	mov	r7, #1
   12e68:	add	r0, r3, r0, lsl #2
   12e6c:	ldr	r2, [r0, #8]
   12e70:	bic	r7, r7, r2, lsr r1
   12e74:	eor	r1, r2, r7, lsl r1
   12e78:	mvn	r2, #0
   12e7c:	str	r1, [r0, #8]
   12e80:	mov	r0, #0
   12e84:	mov	r1, ip
   12e88:	bl	12b24 <putchar_unlocked@plt+0x1cb4>
   12e8c:	sub	sp, fp, #24
   12e90:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12e94:	push	{r4, r5, r6, r7, fp, lr}
   12e98:	add	fp, sp, #16
   12e9c:	sub	sp, sp, #48	; 0x30
   12ea0:	movw	lr, #20800	; 0x5140
   12ea4:	mov	ip, r0
   12ea8:	mov	r3, sp
   12eac:	movt	lr, #2
   12eb0:	mov	r2, r3
   12eb4:	ldm	lr!, {r0, r1, r4, r5, r6, r7}
   12eb8:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   12ebc:	ldm	lr, {r0, r1, r4, r5, r6, r7}
   12ec0:	stm	r2, {r0, r1, r4, r5, r6, r7}
   12ec4:	mov	r1, ip
   12ec8:	mvn	r2, #0
   12ecc:	ldr	r0, [sp, #12]
   12ed0:	orr	r0, r0, #67108864	; 0x4000000
   12ed4:	str	r0, [sp, #12]
   12ed8:	mov	r0, #0
   12edc:	bl	12b24 <putchar_unlocked@plt+0x1cb4>
   12ee0:	sub	sp, fp, #16
   12ee4:	pop	{r4, r5, r6, r7, fp, pc}
   12ee8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12eec:	add	fp, sp, #24
   12ef0:	sub	sp, sp, #48	; 0x30
   12ef4:	movw	r8, #20800	; 0x5140
   12ef8:	mov	ip, r1
   12efc:	mov	lr, r0
   12f00:	mov	r3, sp
   12f04:	movt	r8, #2
   12f08:	mov	r2, r3
   12f0c:	ldm	r8!, {r0, r1, r4, r5, r6, r7}
   12f10:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   12f14:	ldm	r8, {r0, r1, r4, r5, r6, r7}
   12f18:	stm	r2, {r0, r1, r4, r5, r6, r7}
   12f1c:	mov	r1, lr
   12f20:	mov	r2, ip
   12f24:	ldr	r0, [sp, #12]
   12f28:	orr	r0, r0, #67108864	; 0x4000000
   12f2c:	str	r0, [sp, #12]
   12f30:	mov	r0, #0
   12f34:	bl	12b24 <putchar_unlocked@plt+0x1cb4>
   12f38:	sub	sp, fp, #24
   12f3c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12f40:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12f44:	add	fp, sp, #24
   12f48:	sub	sp, sp, #96	; 0x60
   12f4c:	mov	lr, sp
   12f50:	vmov.i32	q8, #0	; 0x00000000
   12f54:	mov	ip, r2
   12f58:	cmp	r1, #10
   12f5c:	add	r3, lr, #16
   12f60:	mov	r2, lr
   12f64:	vst1.64	{d16-d17}, [r3]
   12f68:	mov	r3, #28
   12f6c:	vst1.64	{d16-d17}, [r2], r3
   12f70:	vst1.32	{d16-d17}, [r2]
   12f74:	beq	12fb4 <putchar_unlocked@plt+0x2144>
   12f78:	str	r1, [sp, #48]	; 0x30
   12f7c:	add	r3, sp, #48	; 0x30
   12f80:	ldm	lr!, {r2, r4, r5, r6, r7}
   12f84:	add	r1, r3, #4
   12f88:	stmia	r1!, {r2, r4, r5, r6, r7}
   12f8c:	ldm	lr, {r2, r4, r5, r6, r7, r8}
   12f90:	stm	r1, {r2, r4, r5, r6, r7, r8}
   12f94:	mvn	r2, #0
   12f98:	ldr	r1, [sp, #60]	; 0x3c
   12f9c:	orr	r1, r1, #67108864	; 0x4000000
   12fa0:	str	r1, [sp, #60]	; 0x3c
   12fa4:	mov	r1, ip
   12fa8:	bl	12b24 <putchar_unlocked@plt+0x1cb4>
   12fac:	sub	sp, fp, #24
   12fb0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12fb4:	bl	10e64 <abort@plt>
   12fb8:	push	{fp, lr}
   12fbc:	mov	fp, sp
   12fc0:	sub	sp, sp, #8
   12fc4:	mvn	ip, #0
   12fc8:	str	ip, [sp]
   12fcc:	bl	12fd8 <putchar_unlocked@plt+0x2168>
   12fd0:	mov	sp, fp
   12fd4:	pop	{fp, pc}
   12fd8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12fdc:	add	fp, sp, #24
   12fe0:	sub	sp, sp, #48	; 0x30
   12fe4:	movw	ip, #20800	; 0x5140
   12fe8:	mov	lr, r3
   12fec:	mov	r3, sp
   12ff0:	cmp	r1, #0
   12ff4:	movt	ip, #2
   12ff8:	cmpne	r2, #0
   12ffc:	ldm	ip!, {r4, r5, r6, r7, r8, r9}
   13000:	stmia	r3!, {r4, r5, r6, r7, r8, r9}
   13004:	ldm	ip, {r4, r5, r6, r7, r8, r9}
   13008:	stm	r3, {r4, r5, r6, r7, r8, r9}
   1300c:	mov	r3, #10
   13010:	str	r3, [sp]
   13014:	bne	1301c <putchar_unlocked@plt+0x21ac>
   13018:	bl	10e64 <abort@plt>
   1301c:	ldr	ip, [fp, #8]
   13020:	str	r2, [sp, #44]	; 0x2c
   13024:	str	r1, [sp, #40]	; 0x28
   13028:	mov	r3, sp
   1302c:	mov	r1, lr
   13030:	mov	r2, ip
   13034:	bl	12b24 <putchar_unlocked@plt+0x1cb4>
   13038:	sub	sp, fp, #24
   1303c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13040:	push	{fp, lr}
   13044:	mov	fp, sp
   13048:	sub	sp, sp, #8
   1304c:	mov	r3, r2
   13050:	mov	r2, r1
   13054:	mov	r1, r0
   13058:	mvn	r0, #0
   1305c:	str	r0, [sp]
   13060:	mov	r0, #0
   13064:	bl	12fd8 <putchar_unlocked@plt+0x2168>
   13068:	mov	sp, fp
   1306c:	pop	{fp, pc}
   13070:	push	{fp, lr}
   13074:	mov	fp, sp
   13078:	sub	sp, sp, #8
   1307c:	mov	ip, r2
   13080:	mov	r2, r1
   13084:	mov	r1, r0
   13088:	str	r3, [sp]
   1308c:	mov	r0, #0
   13090:	mov	r3, ip
   13094:	bl	12fd8 <putchar_unlocked@plt+0x2168>
   13098:	mov	sp, fp
   1309c:	pop	{fp, pc}
   130a0:	movw	r3, #20712	; 0x50e8
   130a4:	movt	r3, #2
   130a8:	b	12b24 <putchar_unlocked@plt+0x1cb4>
   130ac:	movw	r3, #20712	; 0x50e8
   130b0:	mov	r2, r1
   130b4:	mov	r1, r0
   130b8:	mov	r0, #0
   130bc:	movt	r3, #2
   130c0:	b	12b24 <putchar_unlocked@plt+0x1cb4>
   130c4:	movw	r3, #20712	; 0x50e8
   130c8:	mvn	r2, #0
   130cc:	movt	r3, #2
   130d0:	b	12b24 <putchar_unlocked@plt+0x1cb4>
   130d4:	movw	r3, #20712	; 0x50e8
   130d8:	mov	r1, r0
   130dc:	mov	r0, #0
   130e0:	mvn	r2, #0
   130e4:	movt	r3, #2
   130e8:	b	12b24 <putchar_unlocked@plt+0x1cb4>
   130ec:	push	{r4, r5, fp, lr}
   130f0:	add	fp, sp, #8
   130f4:	mov	r5, r0
   130f8:	mov	r4, r1
   130fc:	mov	r0, #0
   13100:	mov	r2, #5
   13104:	mov	r1, r5
   13108:	bl	10ce4 <dcgettext@plt>
   1310c:	cmp	r0, r5
   13110:	popne	{r4, r5, fp, pc}
   13114:	bl	13e74 <putchar_unlocked@plt+0x3004>
   13118:	ldrb	r1, [r0]
   1311c:	and	r1, r1, #223	; 0xdf
   13120:	cmp	r1, #71	; 0x47
   13124:	beq	1318c <putchar_unlocked@plt+0x231c>
   13128:	cmp	r1, #85	; 0x55
   1312c:	bne	131b0 <putchar_unlocked@plt+0x2340>
   13130:	ldrb	r1, [r0, #1]
   13134:	and	r1, r1, #223	; 0xdf
   13138:	cmp	r1, #84	; 0x54
   1313c:	bne	131b0 <putchar_unlocked@plt+0x2340>
   13140:	ldrb	r1, [r0, #2]
   13144:	and	r1, r1, #223	; 0xdf
   13148:	cmp	r1, #70	; 0x46
   1314c:	ldrbeq	r1, [r0, #3]
   13150:	cmpeq	r1, #45	; 0x2d
   13154:	bne	131b0 <putchar_unlocked@plt+0x2340>
   13158:	ldrb	r1, [r0, #4]
   1315c:	cmp	r1, #56	; 0x38
   13160:	ldrbeq	r0, [r0, #5]
   13164:	cmpeq	r0, #0
   13168:	bne	131b0 <putchar_unlocked@plt+0x2340>
   1316c:	ldrb	r1, [r5]
   13170:	movw	r2, #18538	; 0x486a
   13174:	movw	r0, #18542	; 0x486e
   13178:	movt	r2, #1
   1317c:	movt	r0, #1
   13180:	cmp	r1, #96	; 0x60
   13184:	moveq	r0, r2
   13188:	pop	{r4, r5, fp, pc}
   1318c:	ldrb	r1, [r0, #1]
   13190:	and	r1, r1, #223	; 0xdf
   13194:	cmp	r1, #66	; 0x42
   13198:	bne	131b0 <putchar_unlocked@plt+0x2340>
   1319c:	ldrb	r1, [r0, #2]
   131a0:	cmp	r1, #49	; 0x31
   131a4:	ldrbeq	r1, [r0, #3]
   131a8:	cmpeq	r1, #56	; 0x38
   131ac:	beq	131cc <putchar_unlocked@plt+0x235c>
   131b0:	movw	r1, #18532	; 0x4864
   131b4:	movw	r0, #18536	; 0x4868
   131b8:	cmp	r4, #9
   131bc:	movt	r1, #1
   131c0:	movt	r0, #1
   131c4:	moveq	r0, r1
   131c8:	pop	{r4, r5, fp, pc}
   131cc:	ldrb	r1, [r0, #4]
   131d0:	cmp	r1, #48	; 0x30
   131d4:	ldrbeq	r1, [r0, #5]
   131d8:	cmpeq	r1, #51	; 0x33
   131dc:	bne	131b0 <putchar_unlocked@plt+0x2340>
   131e0:	ldrb	r1, [r0, #6]
   131e4:	cmp	r1, #48	; 0x30
   131e8:	ldrbeq	r0, [r0, #7]
   131ec:	cmpeq	r0, #0
   131f0:	bne	131b0 <putchar_unlocked@plt+0x2340>
   131f4:	ldrb	r1, [r5]
   131f8:	movw	r2, #18546	; 0x4872
   131fc:	movw	r0, #18550	; 0x4876
   13200:	movt	r2, #1
   13204:	movt	r0, #1
   13208:	b	13180 <putchar_unlocked@plt+0x2310>
   1320c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13210:	add	fp, sp, #24
   13214:	sub	sp, sp, #32
   13218:	ldr	r6, [fp, #12]
   1321c:	ldr	r7, [fp, #8]
   13220:	mov	r4, r2
   13224:	mov	r8, r0
   13228:	cmp	r1, #0
   1322c:	beq	13254 <putchar_unlocked@plt+0x23e4>
   13230:	movw	r2, #18640	; 0x48d0
   13234:	mov	r5, r1
   13238:	str	r3, [sp, #4]
   1323c:	str	r4, [sp]
   13240:	mov	r0, r8
   13244:	mov	r1, #1
   13248:	movt	r2, #1
   1324c:	mov	r3, r5
   13250:	b	1326c <putchar_unlocked@plt+0x23fc>
   13254:	movw	r2, #18652	; 0x48dc
   13258:	str	r3, [sp]
   1325c:	mov	r0, r8
   13260:	mov	r1, #1
   13264:	mov	r3, r4
   13268:	movt	r2, #1
   1326c:	bl	10df8 <__fprintf_chk@plt>
   13270:	movw	r1, #18659	; 0x48e3
   13274:	mov	r0, #0
   13278:	mov	r2, #5
   1327c:	movt	r1, #1
   13280:	bl	10ce4 <dcgettext@plt>
   13284:	movw	r2, #19377	; 0x4bb1
   13288:	mov	r3, r0
   1328c:	movw	r0, #2022	; 0x7e6
   13290:	mov	r1, #1
   13294:	str	r0, [sp]
   13298:	movt	r2, #1
   1329c:	mov	r0, r8
   132a0:	bl	10df8 <__fprintf_chk@plt>
   132a4:	movw	r4, #17343	; 0x43bf
   132a8:	mov	r1, r8
   132ac:	movt	r4, #1
   132b0:	mov	r0, r4
   132b4:	bl	10c78 <fputs_unlocked@plt>
   132b8:	movw	r1, #18663	; 0x48e7
   132bc:	mov	r0, #0
   132c0:	mov	r2, #5
   132c4:	movt	r1, #1
   132c8:	bl	10ce4 <dcgettext@plt>
   132cc:	movw	r3, #18834	; 0x4992
   132d0:	mov	r2, r0
   132d4:	mov	r0, r8
   132d8:	mov	r1, #1
   132dc:	movt	r3, #1
   132e0:	bl	10df8 <__fprintf_chk@plt>
   132e4:	mov	r0, r4
   132e8:	mov	r1, r8
   132ec:	bl	10c78 <fputs_unlocked@plt>
   132f0:	cmp	r6, #9
   132f4:	bhi	13358 <putchar_unlocked@plt+0x24e8>
   132f8:	add	r0, pc, #0
   132fc:	ldr	pc, [r0, r6, lsl #2]
   13300:	andeq	r3, r1, r0, lsr r5
   13304:	andeq	r3, r1, r8, lsr #6
   13308:	andeq	r3, r1, r4, ror #6
   1330c:	andeq	r3, r1, ip, lsl #7
   13310:			; <UNDEFINED> instruction: 0x000133b4
   13314:	ldrdeq	r3, [r1], -ip
   13318:	andeq	r3, r1, r4, lsl #8
   1331c:	andeq	r3, r1, ip, lsr r4
   13320:	ldrdeq	r3, [r1], -ip
   13324:	andeq	r3, r1, r4, lsl #9
   13328:	movw	r1, #18868	; 0x49b4
   1332c:	mov	r0, #0
   13330:	mov	r2, #5
   13334:	movt	r1, #1
   13338:	bl	10ce4 <dcgettext@plt>
   1333c:	ldr	r3, [r7]
   13340:	mov	r2, r0
   13344:	mov	r0, r8
   13348:	mov	r1, #1
   1334c:	sub	sp, fp, #24
   13350:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13354:	b	10df8 <__fprintf_chk@plt>
   13358:	movw	r1, #19187	; 0x4af3
   1335c:	movt	r1, #1
   13360:	b	1348c <putchar_unlocked@plt+0x261c>
   13364:	movw	r1, #18884	; 0x49c4
   13368:	mov	r0, #0
   1336c:	mov	r2, #5
   13370:	movt	r1, #1
   13374:	bl	10ce4 <dcgettext@plt>
   13378:	mov	r2, r0
   1337c:	ldr	r3, [r7]
   13380:	ldr	r0, [r7, #4]
   13384:	str	r0, [sp]
   13388:	b	13478 <putchar_unlocked@plt+0x2608>
   1338c:	movw	r1, #18907	; 0x49db
   13390:	mov	r0, #0
   13394:	mov	r2, #5
   13398:	movt	r1, #1
   1339c:	bl	10ce4 <dcgettext@plt>
   133a0:	ldr	r3, [r7]
   133a4:	mov	r2, r0
   133a8:	ldmib	r7, {r0, r1}
   133ac:	stm	sp, {r0, r1}
   133b0:	b	13478 <putchar_unlocked@plt+0x2608>
   133b4:	movw	r1, #18935	; 0x49f7
   133b8:	mov	r0, #0
   133bc:	mov	r2, #5
   133c0:	movt	r1, #1
   133c4:	bl	10ce4 <dcgettext@plt>
   133c8:	ldr	r3, [r7]
   133cc:	mov	r2, r0
   133d0:	ldmib	r7, {r0, r1, r7}
   133d4:	stm	sp, {r0, r1, r7}
   133d8:	b	13478 <putchar_unlocked@plt+0x2608>
   133dc:	movw	r1, #18967	; 0x4a17
   133e0:	mov	r0, #0
   133e4:	mov	r2, #5
   133e8:	movt	r1, #1
   133ec:	bl	10ce4 <dcgettext@plt>
   133f0:	ldr	r3, [r7]
   133f4:	mov	r2, r0
   133f8:	ldmib	r7, {r0, r1, r6, r7}
   133fc:	stm	sp, {r0, r1, r6, r7}
   13400:	b	13478 <putchar_unlocked@plt+0x2608>
   13404:	movw	r1, #19003	; 0x4a3b
   13408:	mov	r0, #0
   1340c:	mov	r2, #5
   13410:	movt	r1, #1
   13414:	bl	10ce4 <dcgettext@plt>
   13418:	ldr	r3, [r7]
   1341c:	mov	r2, r0
   13420:	ldmib	r7, {r0, r1, r6}
   13424:	ldr	r5, [r7, #16]
   13428:	ldr	r7, [r7, #20]
   1342c:	stm	sp, {r0, r1, r6}
   13430:	str	r5, [sp, #12]
   13434:	str	r7, [sp, #16]
   13438:	b	13478 <putchar_unlocked@plt+0x2608>
   1343c:	movw	r1, #19043	; 0x4a63
   13440:	mov	r0, #0
   13444:	mov	r2, #5
   13448:	movt	r1, #1
   1344c:	bl	10ce4 <dcgettext@plt>
   13450:	ldr	r3, [r7]
   13454:	mov	r2, r0
   13458:	ldmib	r7, {r0, r1, r6}
   1345c:	ldr	r5, [r7, #16]
   13460:	ldr	r4, [r7, #20]
   13464:	ldr	r7, [r7, #24]
   13468:	stm	sp, {r0, r1, r6}
   1346c:	str	r5, [sp, #12]
   13470:	str	r4, [sp, #16]
   13474:	str	r7, [sp, #20]
   13478:	mov	r0, r8
   1347c:	mov	r1, #1
   13480:	b	1352c <putchar_unlocked@plt+0x26bc>
   13484:	movw	r1, #19135	; 0x4abf
   13488:	movt	r1, #1
   1348c:	mov	r0, #0
   13490:	mov	r2, #5
   13494:	bl	10ce4 <dcgettext@plt>
   13498:	mov	ip, r0
   1349c:	ldr	r3, [r7]
   134a0:	ldr	r0, [r7, #4]
   134a4:	ldr	r1, [r7, #8]
   134a8:	ldr	r6, [r7, #12]
   134ac:	ldr	r5, [r7, #16]
   134b0:	ldr	r4, [r7, #20]
   134b4:	ldr	r2, [r7, #24]
   134b8:	ldr	lr, [r7, #28]
   134bc:	ldr	r7, [r7, #32]
   134c0:	stm	sp, {r0, r1, r6}
   134c4:	str	r5, [sp, #12]
   134c8:	str	r4, [sp, #16]
   134cc:	str	r2, [sp, #20]
   134d0:	str	lr, [sp, #24]
   134d4:	str	r7, [sp, #28]
   134d8:	b	13520 <putchar_unlocked@plt+0x26b0>
   134dc:	movw	r1, #19087	; 0x4a8f
   134e0:	mov	r0, #0
   134e4:	mov	r2, #5
   134e8:	movt	r1, #1
   134ec:	bl	10ce4 <dcgettext@plt>
   134f0:	mov	ip, r0
   134f4:	ldr	r3, [r7]
   134f8:	ldmib	r7, {r0, r1, r6}
   134fc:	ldr	r5, [r7, #16]
   13500:	ldr	r4, [r7, #20]
   13504:	ldr	r2, [r7, #24]
   13508:	ldr	r7, [r7, #28]
   1350c:	stm	sp, {r0, r1, r6}
   13510:	str	r5, [sp, #12]
   13514:	str	r4, [sp, #16]
   13518:	str	r2, [sp, #20]
   1351c:	str	r7, [sp, #24]
   13520:	mov	r0, r8
   13524:	mov	r1, #1
   13528:	mov	r2, ip
   1352c:	bl	10df8 <__fprintf_chk@plt>
   13530:	sub	sp, fp, #24
   13534:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13538:	push	{r4, sl, fp, lr}
   1353c:	add	fp, sp, #8
   13540:	sub	sp, sp, #8
   13544:	ldr	ip, [fp, #8]
   13548:	mov	lr, #0
   1354c:	ldr	r4, [ip, lr, lsl #2]
   13550:	add	lr, lr, #1
   13554:	cmp	r4, #0
   13558:	bne	1354c <putchar_unlocked@plt+0x26dc>
   1355c:	sub	r4, lr, #1
   13560:	str	ip, [sp]
   13564:	str	r4, [sp, #4]
   13568:	bl	1320c <putchar_unlocked@plt+0x239c>
   1356c:	sub	sp, fp, #8
   13570:	pop	{r4, sl, fp, pc}
   13574:	push	{r4, r5, fp, lr}
   13578:	add	fp, sp, #8
   1357c:	sub	sp, sp, #48	; 0x30
   13580:	ldr	r4, [fp, #8]
   13584:	mov	ip, #0
   13588:	add	lr, sp, #8
   1358c:	ldr	r5, [r4]
   13590:	cmp	r5, #0
   13594:	str	r5, [lr, ip, lsl #2]
   13598:	beq	135ac <putchar_unlocked@plt+0x273c>
   1359c:	add	ip, ip, #1
   135a0:	add	r4, r4, #4
   135a4:	cmp	ip, #10
   135a8:	bcc	1358c <putchar_unlocked@plt+0x271c>
   135ac:	str	lr, [sp]
   135b0:	str	ip, [sp, #4]
   135b4:	bl	1320c <putchar_unlocked@plt+0x239c>
   135b8:	sub	sp, fp, #8
   135bc:	pop	{r4, r5, fp, pc}
   135c0:	push	{fp, lr}
   135c4:	mov	fp, sp
   135c8:	sub	sp, sp, #8
   135cc:	add	ip, fp, #8
   135d0:	str	ip, [sp, #4]
   135d4:	str	ip, [sp]
   135d8:	bl	13574 <putchar_unlocked@plt+0x2704>
   135dc:	mov	sp, fp
   135e0:	pop	{fp, pc}
   135e4:	push	{fp, lr}
   135e8:	mov	fp, sp
   135ec:	movw	r0, #20780	; 0x512c
   135f0:	movt	r0, #2
   135f4:	ldr	r1, [r0]
   135f8:	movw	r0, #17343	; 0x43bf
   135fc:	movt	r0, #1
   13600:	bl	10c78 <fputs_unlocked@plt>
   13604:	movw	r1, #19247	; 0x4b2f
   13608:	mov	r0, #0
   1360c:	mov	r2, #5
   13610:	movt	r1, #1
   13614:	bl	10ce4 <dcgettext@plt>
   13618:	movw	r2, #19267	; 0x4b43
   1361c:	mov	r1, r0
   13620:	mov	r0, #1
   13624:	movt	r2, #1
   13628:	bl	10de0 <__printf_chk@plt>
   1362c:	movw	r1, #19289	; 0x4b59
   13630:	mov	r0, #0
   13634:	mov	r2, #5
   13638:	movt	r1, #1
   1363c:	bl	10ce4 <dcgettext@plt>
   13640:	movw	r2, #17630	; 0x44de
   13644:	movw	r3, #17644	; 0x44ec
   13648:	mov	r1, r0
   1364c:	mov	r0, #1
   13650:	movt	r2, #1
   13654:	movt	r3, #1
   13658:	bl	10de0 <__printf_chk@plt>
   1365c:	movw	r1, #19309	; 0x4b6d
   13660:	mov	r0, #0
   13664:	mov	r2, #5
   13668:	movt	r1, #1
   1366c:	bl	10ce4 <dcgettext@plt>
   13670:	movw	r2, #19348	; 0x4b94
   13674:	mov	r1, r0
   13678:	mov	r0, #1
   1367c:	movt	r2, #1
   13680:	pop	{fp, lr}
   13684:	b	10de0 <__printf_chk@plt>
   13688:	b	1368c <putchar_unlocked@plt+0x281c>
   1368c:	push	{r4, r5, r6, sl, fp, lr}
   13690:	add	fp, sp, #16
   13694:	mov	r4, r2
   13698:	mov	r5, r1
   1369c:	mov	r6, r0
   136a0:	bl	13f0c <putchar_unlocked@plt+0x309c>
   136a4:	cmp	r0, #0
   136a8:	popne	{r4, r5, r6, sl, fp, pc}
   136ac:	cmp	r6, #0
   136b0:	beq	136c4 <putchar_unlocked@plt+0x2854>
   136b4:	cmp	r5, #0
   136b8:	cmpne	r4, #0
   136bc:	bne	136c4 <putchar_unlocked@plt+0x2854>
   136c0:	pop	{r4, r5, r6, sl, fp, pc}
   136c4:	bl	13b18 <putchar_unlocked@plt+0x2ca8>
   136c8:	push	{fp, lr}
   136cc:	mov	fp, sp
   136d0:	bl	13bb0 <putchar_unlocked@plt+0x2d40>
   136d4:	cmp	r0, #0
   136d8:	popne	{fp, pc}
   136dc:	bl	13b18 <putchar_unlocked@plt+0x2ca8>
   136e0:	push	{fp, lr}
   136e4:	mov	fp, sp
   136e8:	bl	13bb0 <putchar_unlocked@plt+0x2d40>
   136ec:	cmp	r0, #0
   136f0:	popne	{fp, pc}
   136f4:	bl	13b18 <putchar_unlocked@plt+0x2ca8>
   136f8:	push	{fp, lr}
   136fc:	mov	fp, sp
   13700:	bl	13bb0 <putchar_unlocked@plt+0x2d40>
   13704:	cmp	r0, #0
   13708:	popne	{fp, pc}
   1370c:	bl	13b18 <putchar_unlocked@plt+0x2ca8>
   13710:	push	{r4, r5, fp, lr}
   13714:	add	fp, sp, #8
   13718:	mov	r4, r1
   1371c:	mov	r5, r0
   13720:	bl	13be0 <putchar_unlocked@plt+0x2d70>
   13724:	cmp	r0, #0
   13728:	popne	{r4, r5, fp, pc}
   1372c:	cmp	r5, #0
   13730:	beq	13740 <putchar_unlocked@plt+0x28d0>
   13734:	cmp	r4, #0
   13738:	bne	13740 <putchar_unlocked@plt+0x28d0>
   1373c:	pop	{r4, r5, fp, pc}
   13740:	bl	13b18 <putchar_unlocked@plt+0x2ca8>
   13744:	push	{fp, lr}
   13748:	mov	fp, sp
   1374c:	cmp	r1, #0
   13750:	orreq	r1, r1, #1
   13754:	bl	13be0 <putchar_unlocked@plt+0x2d70>
   13758:	cmp	r0, #0
   1375c:	popne	{fp, pc}
   13760:	bl	13b18 <putchar_unlocked@plt+0x2ca8>
   13764:	push	{fp, lr}
   13768:	mov	fp, sp
   1376c:	clz	r3, r2
   13770:	lsr	ip, r3, #5
   13774:	clz	r3, r1
   13778:	lsr	r3, r3, #5
   1377c:	orrs	r3, r3, ip
   13780:	movwne	r1, #1
   13784:	movwne	r2, #1
   13788:	bl	13f0c <putchar_unlocked@plt+0x309c>
   1378c:	cmp	r0, #0
   13790:	popne	{fp, pc}
   13794:	bl	13b18 <putchar_unlocked@plt+0x2ca8>
   13798:	push	{fp, lr}
   1379c:	mov	fp, sp
   137a0:	mov	r2, r1
   137a4:	mov	r1, r0
   137a8:	mov	r0, #0
   137ac:	bl	13f0c <putchar_unlocked@plt+0x309c>
   137b0:	cmp	r0, #0
   137b4:	popne	{fp, pc}
   137b8:	bl	13b18 <putchar_unlocked@plt+0x2ca8>
   137bc:	mov	r2, r1
   137c0:	mov	r1, r0
   137c4:	mov	r0, #0
   137c8:	b	13764 <putchar_unlocked@plt+0x28f4>
   137cc:	mov	r2, #1
   137d0:	b	137d4 <putchar_unlocked@plt+0x2964>
   137d4:	push	{r4, r5, fp, lr}
   137d8:	add	fp, sp, #8
   137dc:	ldr	r5, [r1]
   137e0:	mov	r4, r1
   137e4:	cmp	r0, #0
   137e8:	beq	13800 <putchar_unlocked@plt+0x2990>
   137ec:	mov	r1, #1
   137f0:	add	r1, r1, r5, lsr #1
   137f4:	adds	r5, r5, r1
   137f8:	bcc	13818 <putchar_unlocked@plt+0x29a8>
   137fc:	bl	13b18 <putchar_unlocked@plt+0x2ca8>
   13800:	cmp	r5, #0
   13804:	bne	13818 <putchar_unlocked@plt+0x29a8>
   13808:	mov	r1, #64	; 0x40
   1380c:	cmp	r2, #64	; 0x40
   13810:	udiv	r5, r1, r2
   13814:	addhi	r5, r5, #1
   13818:	mov	r1, r5
   1381c:	bl	1368c <putchar_unlocked@plt+0x281c>
   13820:	str	r5, [r4]
   13824:	pop	{r4, r5, fp, pc}
   13828:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1382c:	add	fp, sp, #24
   13830:	ldr	r6, [r1]
   13834:	mov	r8, r1
   13838:	ldr	r4, [fp, #8]
   1383c:	add	r1, r6, r6, asr #1
   13840:	cmp	r1, r6
   13844:	mvnvs	r1, #-2147483648	; 0x80000000
   13848:	cmp	r1, r3
   1384c:	mov	r5, r1
   13850:	movgt	r5, r3
   13854:	cmn	r3, #1
   13858:	movle	r5, r1
   1385c:	cmn	r4, #1
   13860:	ble	13880 <putchar_unlocked@plt+0x2a10>
   13864:	cmp	r4, #0
   13868:	beq	138d4 <putchar_unlocked@plt+0x2a64>
   1386c:	cmn	r5, #1
   13870:	ble	138a8 <putchar_unlocked@plt+0x2a38>
   13874:	mvn	r7, #-2147483648	; 0x80000000
   13878:	udiv	r1, r7, r4
   1387c:	b	1389c <putchar_unlocked@plt+0x2a2c>
   13880:	cmn	r5, #1
   13884:	ble	138c4 <putchar_unlocked@plt+0x2a54>
   13888:	cmn	r4, #1
   1388c:	beq	138d4 <putchar_unlocked@plt+0x2a64>
   13890:	mov	r1, #-2147483648	; 0x80000000
   13894:	mvn	r7, #-2147483648	; 0x80000000
   13898:	sdiv	r1, r1, r4
   1389c:	cmp	r1, r5
   138a0:	bge	138d4 <putchar_unlocked@plt+0x2a64>
   138a4:	b	138e4 <putchar_unlocked@plt+0x2a74>
   138a8:	beq	138d4 <putchar_unlocked@plt+0x2a64>
   138ac:	mov	r1, #-2147483648	; 0x80000000
   138b0:	mvn	r7, #-2147483648	; 0x80000000
   138b4:	sdiv	r1, r1, r5
   138b8:	cmp	r1, r4
   138bc:	bge	138d4 <putchar_unlocked@plt+0x2a64>
   138c0:	b	138e4 <putchar_unlocked@plt+0x2a74>
   138c4:	mvn	r7, #-2147483648	; 0x80000000
   138c8:	sdiv	r1, r7, r4
   138cc:	cmp	r5, r1
   138d0:	blt	138e4 <putchar_unlocked@plt+0x2a74>
   138d4:	mul	r1, r5, r4
   138d8:	mov	r7, #64	; 0x40
   138dc:	cmp	r1, #63	; 0x3f
   138e0:	bgt	138ec <putchar_unlocked@plt+0x2a7c>
   138e4:	sdiv	r5, r7, r4
   138e8:	mul	r1, r5, r4
   138ec:	cmp	r0, #0
   138f0:	moveq	r7, #0
   138f4:	streq	r7, [r8]
   138f8:	sub	r7, r5, r6
   138fc:	cmp	r7, r2
   13900:	bge	139a4 <putchar_unlocked@plt+0x2b34>
   13904:	add	r5, r6, r2
   13908:	mov	r2, #0
   1390c:	mov	r1, #0
   13910:	cmp	r5, r3
   13914:	movwgt	r2, #1
   13918:	cmn	r3, #1
   1391c:	movwgt	r1, #1
   13920:	cmp	r5, r6
   13924:	bvs	1398c <putchar_unlocked@plt+0x2b1c>
   13928:	ands	r1, r1, r2
   1392c:	bne	1398c <putchar_unlocked@plt+0x2b1c>
   13930:	cmn	r4, #1
   13934:	ble	13954 <putchar_unlocked@plt+0x2ae4>
   13938:	cmp	r4, #0
   1393c:	beq	139a0 <putchar_unlocked@plt+0x2b30>
   13940:	cmn	r5, #1
   13944:	ble	13978 <putchar_unlocked@plt+0x2b08>
   13948:	mvn	r1, #-2147483648	; 0x80000000
   1394c:	udiv	r1, r1, r4
   13950:	b	1396c <putchar_unlocked@plt+0x2afc>
   13954:	cmn	r5, #1
   13958:	ble	13990 <putchar_unlocked@plt+0x2b20>
   1395c:	cmn	r4, #1
   13960:	beq	139a0 <putchar_unlocked@plt+0x2b30>
   13964:	mov	r1, #-2147483648	; 0x80000000
   13968:	sdiv	r1, r1, r4
   1396c:	cmp	r1, r5
   13970:	bge	139a0 <putchar_unlocked@plt+0x2b30>
   13974:	b	1398c <putchar_unlocked@plt+0x2b1c>
   13978:	beq	139a0 <putchar_unlocked@plt+0x2b30>
   1397c:	mov	r1, #-2147483648	; 0x80000000
   13980:	sdiv	r1, r1, r5
   13984:	cmp	r1, r4
   13988:	bge	139a0 <putchar_unlocked@plt+0x2b30>
   1398c:	bl	13b18 <putchar_unlocked@plt+0x2ca8>
   13990:	mvn	r1, #-2147483648	; 0x80000000
   13994:	sdiv	r1, r1, r4
   13998:	cmp	r5, r1
   1399c:	blt	1398c <putchar_unlocked@plt+0x2b1c>
   139a0:	mul	r1, r5, r4
   139a4:	bl	13710 <putchar_unlocked@plt+0x28a0>
   139a8:	str	r5, [r8]
   139ac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   139b0:	push	{fp, lr}
   139b4:	mov	fp, sp
   139b8:	mov	r1, #1
   139bc:	bl	13b5c <putchar_unlocked@plt+0x2cec>
   139c0:	cmp	r0, #0
   139c4:	popne	{fp, pc}
   139c8:	bl	13b18 <putchar_unlocked@plt+0x2ca8>
   139cc:	push	{fp, lr}
   139d0:	mov	fp, sp
   139d4:	bl	13b5c <putchar_unlocked@plt+0x2cec>
   139d8:	cmp	r0, #0
   139dc:	popne	{fp, pc}
   139e0:	bl	13b18 <putchar_unlocked@plt+0x2ca8>
   139e4:	push	{fp, lr}
   139e8:	mov	fp, sp
   139ec:	mov	r1, #1
   139f0:	bl	13b5c <putchar_unlocked@plt+0x2cec>
   139f4:	cmp	r0, #0
   139f8:	popne	{fp, pc}
   139fc:	bl	13b18 <putchar_unlocked@plt+0x2ca8>
   13a00:	push	{fp, lr}
   13a04:	mov	fp, sp
   13a08:	bl	13b5c <putchar_unlocked@plt+0x2cec>
   13a0c:	cmp	r0, #0
   13a10:	popne	{fp, pc}
   13a14:	bl	13b18 <putchar_unlocked@plt+0x2ca8>
   13a18:	push	{r4, r5, r6, sl, fp, lr}
   13a1c:	add	fp, sp, #16
   13a20:	mov	r5, r0
   13a24:	mov	r0, r1
   13a28:	mov	r4, r1
   13a2c:	bl	13bb0 <putchar_unlocked@plt+0x2d40>
   13a30:	cmp	r0, #0
   13a34:	beq	13a50 <putchar_unlocked@plt+0x2be0>
   13a38:	mov	r1, r5
   13a3c:	mov	r2, r4
   13a40:	mov	r6, r0
   13a44:	bl	10cb4 <memcpy@plt>
   13a48:	mov	r0, r6
   13a4c:	pop	{r4, r5, r6, sl, fp, pc}
   13a50:	bl	13b18 <putchar_unlocked@plt+0x2ca8>
   13a54:	push	{r4, r5, r6, sl, fp, lr}
   13a58:	add	fp, sp, #16
   13a5c:	mov	r5, r0
   13a60:	mov	r0, r1
   13a64:	mov	r4, r1
   13a68:	bl	13bb0 <putchar_unlocked@plt+0x2d40>
   13a6c:	cmp	r0, #0
   13a70:	beq	13a8c <putchar_unlocked@plt+0x2c1c>
   13a74:	mov	r1, r5
   13a78:	mov	r2, r4
   13a7c:	mov	r6, r0
   13a80:	bl	10cb4 <memcpy@plt>
   13a84:	mov	r0, r6
   13a88:	pop	{r4, r5, r6, sl, fp, pc}
   13a8c:	bl	13b18 <putchar_unlocked@plt+0x2ca8>
   13a90:	push	{r4, r5, r6, sl, fp, lr}
   13a94:	add	fp, sp, #16
   13a98:	mov	r5, r0
   13a9c:	add	r0, r1, #1
   13aa0:	mov	r4, r1
   13aa4:	bl	13bb0 <putchar_unlocked@plt+0x2d40>
   13aa8:	cmp	r0, #0
   13aac:	beq	13ad4 <putchar_unlocked@plt+0x2c64>
   13ab0:	mov	r6, r0
   13ab4:	mov	r0, #0
   13ab8:	mov	r1, r5
   13abc:	mov	r2, r4
   13ac0:	strb	r0, [r6, r4]
   13ac4:	mov	r0, r6
   13ac8:	bl	10cb4 <memcpy@plt>
   13acc:	mov	r0, r6
   13ad0:	pop	{r4, r5, r6, sl, fp, pc}
   13ad4:	bl	13b18 <putchar_unlocked@plt+0x2ca8>
   13ad8:	push	{r4, r5, r6, sl, fp, lr}
   13adc:	add	fp, sp, #16
   13ae0:	mov	r4, r0
   13ae4:	bl	10db0 <strlen@plt>
   13ae8:	add	r5, r0, #1
   13aec:	mov	r0, r5
   13af0:	bl	13bb0 <putchar_unlocked@plt+0x2d40>
   13af4:	cmp	r0, #0
   13af8:	beq	13b14 <putchar_unlocked@plt+0x2ca4>
   13afc:	mov	r1, r4
   13b00:	mov	r2, r5
   13b04:	mov	r6, r0
   13b08:	bl	10cb4 <memcpy@plt>
   13b0c:	mov	r0, r6
   13b10:	pop	{r4, r5, r6, sl, fp, pc}
   13b14:	bl	13b18 <putchar_unlocked@plt+0x2ca8>
   13b18:	push	{fp, lr}
   13b1c:	mov	fp, sp
   13b20:	movw	r0, #20688	; 0x50d0
   13b24:	movw	r1, #19424	; 0x4be0
   13b28:	mov	r2, #5
   13b2c:	movt	r0, #2
   13b30:	movt	r1, #1
   13b34:	ldr	r4, [r0]
   13b38:	mov	r0, #0
   13b3c:	bl	10ce4 <dcgettext@plt>
   13b40:	movw	r2, #18383	; 0x47cf
   13b44:	mov	r3, r0
   13b48:	mov	r0, r4
   13b4c:	mov	r1, #0
   13b50:	movt	r2, #1
   13b54:	bl	10d50 <error@plt>
   13b58:	bl	10e64 <abort@plt>
   13b5c:	clz	r2, r1
   13b60:	clz	r3, r0
   13b64:	lsr	r2, r2, #5
   13b68:	lsr	r3, r3, #5
   13b6c:	orrs	r2, r3, r2
   13b70:	movwne	r1, #1
   13b74:	movwne	r0, #1
   13b78:	cmp	r1, #0
   13b7c:	beq	13bac <putchar_unlocked@plt+0x2d3c>
   13b80:	mvn	r2, #-2147483648	; 0x80000000
   13b84:	udiv	r2, r2, r1
   13b88:	cmp	r2, r0
   13b8c:	bcs	13bac <putchar_unlocked@plt+0x2d3c>
   13b90:	push	{fp, lr}
   13b94:	mov	fp, sp
   13b98:	bl	10dbc <__errno_location@plt>
   13b9c:	mov	r1, #12
   13ba0:	str	r1, [r0]
   13ba4:	mov	r0, #0
   13ba8:	pop	{fp, pc}
   13bac:	b	10c6c <calloc@plt>
   13bb0:	cmp	r0, #0
   13bb4:	movweq	r0, #1
   13bb8:	cmn	r0, #1
   13bbc:	ble	13bc4 <putchar_unlocked@plt+0x2d54>
   13bc0:	b	10d5c <malloc@plt>
   13bc4:	push	{fp, lr}
   13bc8:	mov	fp, sp
   13bcc:	bl	10dbc <__errno_location@plt>
   13bd0:	mov	r1, #12
   13bd4:	str	r1, [r0]
   13bd8:	mov	r0, #0
   13bdc:	pop	{fp, pc}
   13be0:	push	{fp, lr}
   13be4:	mov	fp, sp
   13be8:	cmp	r0, #0
   13bec:	beq	13c08 <putchar_unlocked@plt+0x2d98>
   13bf0:	cmp	r1, #0
   13bf4:	beq	13c14 <putchar_unlocked@plt+0x2da4>
   13bf8:	cmn	r1, #1
   13bfc:	ble	13c1c <putchar_unlocked@plt+0x2dac>
   13c00:	pop	{fp, lr}
   13c04:	b	10cf0 <realloc@plt>
   13c08:	mov	r0, r1
   13c0c:	pop	{fp, lr}
   13c10:	b	13bb0 <putchar_unlocked@plt+0x2d40>
   13c14:	bl	13da8 <putchar_unlocked@plt+0x2f38>
   13c18:	b	13c28 <putchar_unlocked@plt+0x2db8>
   13c1c:	bl	10dbc <__errno_location@plt>
   13c20:	mov	r1, #12
   13c24:	str	r1, [r0]
   13c28:	mov	r0, #0
   13c2c:	pop	{fp, pc}
   13c30:	push	{r4, r5, r6, sl, fp, lr}
   13c34:	add	fp, sp, #16
   13c38:	mov	r4, r0
   13c3c:	bl	10d2c <__fpending@plt>
   13c40:	mov	r5, r0
   13c44:	mov	r0, r4
   13c48:	bl	10d38 <ferror_unlocked@plt>
   13c4c:	mov	r6, r0
   13c50:	mov	r0, r4
   13c54:	bl	13cb0 <putchar_unlocked@plt+0x2e40>
   13c58:	cmp	r6, #0
   13c5c:	beq	13c7c <putchar_unlocked@plt+0x2e0c>
   13c60:	mvn	r4, #0
   13c64:	cmp	r0, #0
   13c68:	bne	13ca8 <putchar_unlocked@plt+0x2e38>
   13c6c:	bl	10dbc <__errno_location@plt>
   13c70:	mov	r1, #0
   13c74:	str	r1, [r0]
   13c78:	b	13ca8 <putchar_unlocked@plt+0x2e38>
   13c7c:	cmp	r0, #0
   13c80:	mov	r4, r0
   13c84:	mvnne	r4, #0
   13c88:	cmp	r5, #0
   13c8c:	bne	13ca8 <putchar_unlocked@plt+0x2e38>
   13c90:	cmp	r0, #0
   13c94:	beq	13ca8 <putchar_unlocked@plt+0x2e38>
   13c98:	bl	10dbc <__errno_location@plt>
   13c9c:	ldr	r0, [r0]
   13ca0:	subs	r4, r0, #9
   13ca4:	mvnne	r4, #0
   13ca8:	mov	r0, r4
   13cac:	pop	{r4, r5, r6, sl, fp, pc}
   13cb0:	push	{r4, r5, r6, sl, fp, lr}
   13cb4:	add	fp, sp, #16
   13cb8:	sub	sp, sp, #8
   13cbc:	mov	r4, r0
   13cc0:	bl	10dec <fileno@plt>
   13cc4:	cmn	r0, #1
   13cc8:	ble	13d3c <putchar_unlocked@plt+0x2ecc>
   13ccc:	mov	r0, r4
   13cd0:	bl	10d74 <__freading@plt>
   13cd4:	cmp	r0, #0
   13cd8:	beq	13d04 <putchar_unlocked@plt+0x2e94>
   13cdc:	mov	r0, r4
   13ce0:	bl	10dec <fileno@plt>
   13ce4:	mov	r1, #1
   13ce8:	mov	r2, #0
   13cec:	mov	r3, #0
   13cf0:	str	r1, [sp]
   13cf4:	bl	10d14 <lseek64@plt>
   13cf8:	and	r0, r0, r1
   13cfc:	cmn	r0, #1
   13d00:	beq	13d3c <putchar_unlocked@plt+0x2ecc>
   13d04:	mov	r0, r4
   13d08:	bl	13d4c <putchar_unlocked@plt+0x2edc>
   13d0c:	cmp	r0, #0
   13d10:	beq	13d3c <putchar_unlocked@plt+0x2ecc>
   13d14:	bl	10dbc <__errno_location@plt>
   13d18:	ldr	r6, [r0]
   13d1c:	mov	r5, r0
   13d20:	mov	r0, r4
   13d24:	bl	10e04 <fclose@plt>
   13d28:	cmp	r6, #0
   13d2c:	strne	r6, [r5]
   13d30:	mvnne	r0, #0
   13d34:	sub	sp, fp, #16
   13d38:	pop	{r4, r5, r6, sl, fp, pc}
   13d3c:	mov	r0, r4
   13d40:	sub	sp, fp, #16
   13d44:	pop	{r4, r5, r6, sl, fp, lr}
   13d48:	b	10e04 <fclose@plt>
   13d4c:	push	{r4, sl, fp, lr}
   13d50:	add	fp, sp, #8
   13d54:	sub	sp, sp, #8
   13d58:	mov	r4, r0
   13d5c:	cmp	r0, #0
   13d60:	beq	13d7c <putchar_unlocked@plt+0x2f0c>
   13d64:	mov	r0, r4
   13d68:	bl	10d74 <__freading@plt>
   13d6c:	cmp	r0, #0
   13d70:	ldrbne	r0, [r4, #1]
   13d74:	tstne	r0, #1
   13d78:	bne	13d8c <putchar_unlocked@plt+0x2f1c>
   13d7c:	mov	r0, r4
   13d80:	sub	sp, fp, #8
   13d84:	pop	{r4, sl, fp, lr}
   13d88:	b	10c90 <fflush@plt>
   13d8c:	mov	r0, #1
   13d90:	mov	r2, #0
   13d94:	mov	r3, #0
   13d98:	str	r0, [sp]
   13d9c:	mov	r0, r4
   13da0:	bl	13dd0 <putchar_unlocked@plt+0x2f60>
   13da4:	b	13d7c <putchar_unlocked@plt+0x2f0c>
   13da8:	push	{r4, r5, r6, sl, fp, lr}
   13dac:	add	fp, sp, #16
   13db0:	mov	r4, r0
   13db4:	bl	10dbc <__errno_location@plt>
   13db8:	ldr	r6, [r0]
   13dbc:	mov	r5, r0
   13dc0:	mov	r0, r4
   13dc4:	bl	10c9c <free@plt>
   13dc8:	str	r6, [r5]
   13dcc:	pop	{r4, r5, r6, sl, fp, pc}
   13dd0:	push	{r4, r5, r6, r7, fp, lr}
   13dd4:	add	fp, sp, #16
   13dd8:	sub	sp, sp, #8
   13ddc:	mov	r4, r0
   13de0:	ldr	r0, [r0, #4]
   13de4:	mov	r5, r3
   13de8:	mov	r6, r2
   13dec:	ldr	r1, [r4, #8]
   13df0:	cmp	r1, r0
   13df4:	bne	13e10 <putchar_unlocked@plt+0x2fa0>
   13df8:	ldrd	r0, [r4, #16]
   13dfc:	cmp	r1, r0
   13e00:	bne	13e10 <putchar_unlocked@plt+0x2fa0>
   13e04:	ldr	r0, [r4, #36]	; 0x24
   13e08:	cmp	r0, #0
   13e0c:	beq	13e28 <putchar_unlocked@plt+0x2fb8>
   13e10:	mov	r0, r4
   13e14:	mov	r2, r6
   13e18:	mov	r3, r5
   13e1c:	sub	sp, fp, #16
   13e20:	pop	{r4, r5, r6, r7, fp, lr}
   13e24:	b	10e10 <fseeko64@plt>
   13e28:	ldr	r7, [fp, #8]
   13e2c:	mov	r0, r4
   13e30:	bl	10dec <fileno@plt>
   13e34:	mov	r2, r6
   13e38:	mov	r3, r5
   13e3c:	str	r7, [sp]
   13e40:	bl	10d14 <lseek64@plt>
   13e44:	and	r2, r0, r1
   13e48:	cmn	r2, #1
   13e4c:	beq	13e68 <putchar_unlocked@plt+0x2ff8>
   13e50:	strd	r0, [r4, #80]	; 0x50
   13e54:	ldr	r0, [r4]
   13e58:	bic	r0, r0, #16
   13e5c:	str	r0, [r4]
   13e60:	mov	r0, #0
   13e64:	b	13e6c <putchar_unlocked@plt+0x2ffc>
   13e68:	mvn	r0, #0
   13e6c:	sub	sp, fp, #16
   13e70:	pop	{r4, r5, r6, r7, fp, pc}
   13e74:	push	{fp, lr}
   13e78:	mov	fp, sp
   13e7c:	mov	r0, #14
   13e80:	bl	10e34 <nl_langinfo@plt>
   13e84:	movw	r1, #17344	; 0x43c0
   13e88:	cmp	r0, #0
   13e8c:	movt	r1, #1
   13e90:	movne	r1, r0
   13e94:	movw	r0, #19441	; 0x4bf1
   13e98:	ldrb	r2, [r1]
   13e9c:	movt	r0, #1
   13ea0:	cmp	r2, #0
   13ea4:	movne	r0, r1
   13ea8:	pop	{fp, pc}
   13eac:	push	{r4, r5, r6, r7, fp, lr}
   13eb0:	add	fp, sp, #16
   13eb4:	sub	sp, sp, #8
   13eb8:	add	r5, sp, #4
   13ebc:	cmp	r0, #0
   13ec0:	mov	r7, r2
   13ec4:	mov	r4, r1
   13ec8:	movne	r5, r0
   13ecc:	mov	r0, r5
   13ed0:	bl	10d44 <mbrtowc@plt>
   13ed4:	mov	r6, r0
   13ed8:	cmp	r7, #0
   13edc:	beq	13f00 <putchar_unlocked@plt+0x3090>
   13ee0:	cmn	r6, #2
   13ee4:	bcc	13f00 <putchar_unlocked@plt+0x3090>
   13ee8:	mov	r0, #0
   13eec:	bl	13f48 <putchar_unlocked@plt+0x30d8>
   13ef0:	cmp	r0, #0
   13ef4:	ldrbeq	r0, [r4]
   13ef8:	moveq	r6, #1
   13efc:	streq	r0, [r5]
   13f00:	mov	r0, r6
   13f04:	sub	sp, fp, #16
   13f08:	pop	{r4, r5, r6, r7, fp, pc}
   13f0c:	cmp	r2, #0
   13f10:	beq	13f40 <putchar_unlocked@plt+0x30d0>
   13f14:	mvn	r3, #0
   13f18:	udiv	r3, r3, r2
   13f1c:	cmp	r3, r1
   13f20:	bcs	13f40 <putchar_unlocked@plt+0x30d0>
   13f24:	push	{fp, lr}
   13f28:	mov	fp, sp
   13f2c:	bl	10dbc <__errno_location@plt>
   13f30:	mov	r1, #12
   13f34:	str	r1, [r0]
   13f38:	mov	r0, #0
   13f3c:	pop	{fp, pc}
   13f40:	mul	r1, r2, r1
   13f44:	b	13be0 <putchar_unlocked@plt+0x2d70>
   13f48:	push	{r4, sl, fp, lr}
   13f4c:	add	fp, sp, #8
   13f50:	sub	sp, sp, #264	; 0x108
   13f54:	add	r1, sp, #7
   13f58:	movw	r2, #257	; 0x101
   13f5c:	bl	13fac <putchar_unlocked@plt+0x313c>
   13f60:	mov	r4, #0
   13f64:	cmp	r0, #0
   13f68:	bne	13fa0 <putchar_unlocked@plt+0x3130>
   13f6c:	movw	r1, #19447	; 0x4bf7
   13f70:	add	r0, sp, #7
   13f74:	movt	r1, #1
   13f78:	bl	10c84 <strcmp@plt>
   13f7c:	cmp	r0, #0
   13f80:	beq	13fa0 <putchar_unlocked@plt+0x3130>
   13f84:	movw	r1, #19449	; 0x4bf9
   13f88:	add	r0, sp, #7
   13f8c:	movt	r1, #1
   13f90:	bl	10c84 <strcmp@plt>
   13f94:	mov	r4, r0
   13f98:	cmp	r0, #0
   13f9c:	movwne	r4, #1
   13fa0:	mov	r0, r4
   13fa4:	sub	sp, fp, #8
   13fa8:	pop	{r4, sl, fp, pc}
   13fac:	push	{r4, r5, r6, r7, fp, lr}
   13fb0:	add	fp, sp, #16
   13fb4:	mov	r4, r1
   13fb8:	mov	r1, #0
   13fbc:	mov	r6, r2
   13fc0:	bl	10e1c <setlocale@plt>
   13fc4:	cmp	r0, #0
   13fc8:	beq	13ff4 <putchar_unlocked@plt+0x3184>
   13fcc:	mov	r7, r0
   13fd0:	bl	10db0 <strlen@plt>
   13fd4:	cmp	r0, r6
   13fd8:	bcs	14008 <putchar_unlocked@plt+0x3198>
   13fdc:	add	r2, r0, #1
   13fe0:	mov	r0, r4
   13fe4:	mov	r1, r7
   13fe8:	bl	10cb4 <memcpy@plt>
   13fec:	mov	r5, #0
   13ff0:	b	14030 <putchar_unlocked@plt+0x31c0>
   13ff4:	cmp	r6, #0
   13ff8:	mov	r5, #22
   13ffc:	movne	r0, #0
   14000:	strbne	r0, [r4]
   14004:	b	14030 <putchar_unlocked@plt+0x31c0>
   14008:	mov	r5, #34	; 0x22
   1400c:	cmp	r6, #0
   14010:	beq	14030 <putchar_unlocked@plt+0x31c0>
   14014:	sub	r6, r6, #1
   14018:	mov	r0, r4
   1401c:	mov	r1, r7
   14020:	mov	r2, r6
   14024:	bl	10cb4 <memcpy@plt>
   14028:	mov	r0, #0
   1402c:	strb	r0, [r4, r6]
   14030:	mov	r0, r5
   14034:	pop	{r4, r5, r6, r7, fp, pc}
   14038:	mov	r1, #0
   1403c:	b	10e1c <setlocale@plt>
   14040:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14044:	mov	r7, r0
   14048:	ldr	r6, [pc, #72]	; 14098 <putchar_unlocked@plt+0x3228>
   1404c:	ldr	r5, [pc, #72]	; 1409c <putchar_unlocked@plt+0x322c>
   14050:	add	r6, pc, r6
   14054:	add	r5, pc, r5
   14058:	sub	r6, r6, r5
   1405c:	mov	r8, r1
   14060:	mov	r9, r2
   14064:	bl	10c4c <calloc@plt-0x20>
   14068:	asrs	r6, r6, #2
   1406c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14070:	mov	r4, #0
   14074:	add	r4, r4, #1
   14078:	ldr	r3, [r5], #4
   1407c:	mov	r2, r9
   14080:	mov	r1, r8
   14084:	mov	r0, r7
   14088:	blx	r3
   1408c:	cmp	r6, r4
   14090:	bne	14074 <putchar_unlocked@plt+0x3204>
   14094:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14098:			; <UNDEFINED> instruction: 0x00010eb4
   1409c:	andeq	r0, r1, ip, lsr #29
   140a0:	bx	lr
   140a4:	ldr	r3, [pc, #12]	; 140b8 <putchar_unlocked@plt+0x3248>
   140a8:	mov	r1, #0
   140ac:	add	r3, pc, r3
   140b0:	ldr	r2, [r3]
   140b4:	b	10dc8 <__cxa_atexit@plt>
   140b8:	andeq	r1, r1, r0, lsl r0

Disassembly of section .fini:

000140bc <.fini>:
   140bc:	push	{r3, lr}
   140c0:	pop	{r3, pc}
