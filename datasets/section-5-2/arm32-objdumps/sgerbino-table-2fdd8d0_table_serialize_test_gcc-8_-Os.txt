
../repos/sgerbino-table-2fdd8d0/bin/table_serialize_test:     file format elf32-littlearm


Disassembly of section .init:

00011b00 <.init>:
   11b00:	push	{r3, lr}
   11b04:	bl	12280 <_start@@Base+0x3c>
   11b08:	pop	{r3, pc}

Disassembly of section .plt:

00011b0c <strcmp@plt-0x14>:
   11b0c:	push	{lr}		; (str lr, [sp, #-4]!)
   11b10:	ldr	lr, [pc, #4]	; 11b1c <strcmp@plt-0x4>
   11b14:	add	lr, pc, lr
   11b18:	ldr	pc, [lr, #8]!
   11b1c:	andeq	r4, r1, r4, ror #9

00011b20 <strcmp@plt>:
   11b20:	add	ip, pc, #0, 12
   11b24:	add	ip, ip, #20, 20	; 0x14000
   11b28:	ldr	pc, [ip, #1252]!	; 0x4e4

00011b2c <printf@plt>:
   11b2c:	add	ip, pc, #0, 12
   11b30:	add	ip, ip, #20, 20	; 0x14000
   11b34:	ldr	pc, [ip, #1244]!	; 0x4dc

00011b38 <free@plt>:
   11b38:	add	ip, pc, #0, 12
   11b3c:	add	ip, ip, #20, 20	; 0x14000
   11b40:	ldr	pc, [ip, #1236]!	; 0x4d4

00011b44 <time@plt>:
   11b44:	add	ip, pc, #0, 12
   11b48:	add	ip, ip, #20, 20	; 0x14000
   11b4c:	ldr	pc, [ip, #1228]!	; 0x4cc

00011b50 <realloc@plt>:
   11b50:	add	ip, pc, #0, 12
   11b54:	add	ip, ip, #20, 20	; 0x14000
   11b58:	ldr	pc, [ip, #1220]!	; 0x4c4

00011b5c <strcpy@plt>:
   11b5c:	add	ip, pc, #0, 12
   11b60:	add	ip, ip, #20, 20	; 0x14000
   11b64:	ldr	pc, [ip, #1212]!	; 0x4bc

00011b68 <malloc@plt>:
   11b68:	add	ip, pc, #0, 12
   11b6c:	add	ip, ip, #20, 20	; 0x14000
   11b70:	ldr	pc, [ip, #1204]!	; 0x4b4

00011b74 <__libc_start_main@plt>:
   11b74:	add	ip, pc, #0, 12
   11b78:	add	ip, ip, #20, 20	; 0x14000
   11b7c:	ldr	pc, [ip, #1196]!	; 0x4ac

00011b80 <__gmon_start__@plt>:
   11b80:	add	ip, pc, #0, 12
   11b84:	add	ip, ip, #20, 20	; 0x14000
   11b88:	ldr	pc, [ip, #1188]!	; 0x4a4

00011b8c <strlen@plt>:
   11b8c:	add	ip, pc, #0, 12
   11b90:	add	ip, ip, #20, 20	; 0x14000
   11b94:	ldr	pc, [ip, #1180]!	; 0x49c

00011b98 <srand@plt>:
   11b98:	add	ip, pc, #0, 12
   11b9c:	add	ip, ip, #20, 20	; 0x14000
   11ba0:	ldr	pc, [ip, #1172]!	; 0x494

00011ba4 <snprintf@plt>:
   11ba4:	add	ip, pc, #0, 12
   11ba8:	add	ip, ip, #20, 20	; 0x14000
   11bac:	ldr	pc, [ip, #1164]!	; 0x48c

00011bb0 <__isoc99_sscanf@plt>:
   11bb0:	add	ip, pc, #0, 12
   11bb4:	add	ip, ip, #20, 20	; 0x14000
   11bb8:	ldr	pc, [ip, #1156]!	; 0x484

00011bbc <strncpy@plt>:
   11bbc:	add	ip, pc, #0, 12
   11bc0:	add	ip, ip, #20, 20	; 0x14000
   11bc4:	ldr	pc, [ip, #1148]!	; 0x47c

00011bc8 <rand@plt>:
   11bc8:	add	ip, pc, #0, 12
   11bcc:	add	ip, ip, #20, 20	; 0x14000
   11bd0:	ldr	pc, [ip, #1140]!	; 0x474

00011bd4 <abort@plt>:
   11bd4:	add	ip, pc, #0, 12
   11bd8:	add	ip, ip, #20, 20	; 0x14000
   11bdc:	ldr	pc, [ip, #1132]!	; 0x46c

Disassembly of section .text:

00011be0 <main@@Base>:
   11be0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11be4:	mov	r4, #0
   11be8:	vpush	{d8}
   11bec:	sub	sp, sp, #99328	; 0x18400
   11bf0:	sub	sp, sp, #748	; 0x2ec
   11bf4:	ldr	r8, [pc, #1580]	; 12228 <main@@Base+0x648>
   11bf8:	add	r0, sp, #12
   11bfc:	bl	11b44 <time@plt>
   11c00:	bl	11b98 <srand@plt>
   11c04:	bl	11bc8 <rand@plt>
   11c08:	mov	r3, #100	; 0x64
   11c0c:	sdiv	r5, r0, r3
   11c10:	mls	r5, r5, r3, r0
   11c14:	add	r0, sp, #16
   11c18:	add	r5, r5, r3
   11c1c:	bl	12334 <table_init@@Base>
   11c20:	mov	r2, #0
   11c24:	ldr	r1, [pc, #1536]	; 1222c <main@@Base+0x64c>
   11c28:	add	r0, sp, #16
   11c2c:	bl	12ca4 <table_add_column@@Base>
   11c30:	mov	r7, r0
   11c34:	mov	r2, #21
   11c38:	ldr	r1, [pc, #1520]	; 12230 <main@@Base+0x650>
   11c3c:	add	r0, sp, #16
   11c40:	bl	12ca4 <table_add_column@@Base>
   11c44:	mov	r6, r0
   11c48:	add	r3, sp, #72	; 0x48
   11c4c:	str	r3, [sp, #4]
   11c50:	mov	r3, r4
   11c54:	mov	r2, r8
   11c58:	ldr	r0, [sp, #4]
   11c5c:	mov	r1, #255	; 0xff
   11c60:	bl	11ba4 <snprintf@plt>
   11c64:	add	r0, sp, #16
   11c68:	bl	1375c <table_add_row@@Base>
   11c6c:	mov	r3, r4
   11c70:	mov	r1, r4
   11c74:	mov	r2, r7
   11c78:	add	r0, sp, #16
   11c7c:	bl	13c0c <table_set_int@@Base>
   11c80:	mov	r1, r4
   11c84:	mov	r2, r6
   11c88:	ldr	r3, [sp, #4]
   11c8c:	add	r0, sp, #16
   11c90:	add	r4, r4, #1
   11c94:	bl	13e5c <table_set_string@@Base>
   11c98:	cmp	r5, r4
   11c9c:	bgt	11c50 <main@@Base+0x70>
   11ca0:	ldr	r2, [pc, #1420]	; 12234 <main@@Base+0x654>
   11ca4:	add	r0, sp, #16
   11ca8:	ldr	r1, [sp, #4]
   11cac:	bl	13ecc <table_serialize@@Base>
   11cb0:	ldr	r1, [pc, #1404]	; 12234 <main@@Base+0x654>
   11cb4:	ldr	r0, [sp, #4]
   11cb8:	bl	14160 <table_deserialize@@Base>
   11cbc:	mov	r6, r0
   11cc0:	add	r0, sp, #16
   11cc4:	bl	13754 <table_get_row_length@@Base>
   11cc8:	mov	r4, r0
   11ccc:	mov	r0, r6
   11cd0:	bl	13754 <table_get_row_length@@Base>
   11cd4:	cmp	r4, r0
   11cd8:	mov	r7, r0
   11cdc:	moveq	sl, #0
   11ce0:	beq	11cf8 <main@@Base+0x118>
   11ce4:	mov	r2, r0
   11ce8:	mov	r1, r4
   11cec:	ldr	r0, [pc, #1348]	; 12238 <main@@Base+0x658>
   11cf0:	mvn	sl, #0
   11cf4:	bl	11b2c <printf@plt>
   11cf8:	add	r0, sp, #16
   11cfc:	bl	12c38 <table_get_column_length@@Base>
   11d00:	mov	r5, r0
   11d04:	mov	r0, r6
   11d08:	bl	12c38 <table_get_column_length@@Base>
   11d0c:	cmp	r5, r0
   11d10:	mov	fp, r0
   11d14:	beq	11d50 <main@@Base+0x170>
   11d18:	mov	r2, r0
   11d1c:	mov	r1, r5
   11d20:	ldr	r0, [pc, #1300]	; 1223c <main@@Base+0x65c>
   11d24:	mvn	sl, #0
   11d28:	bl	11b2c <printf@plt>
   11d2c:	add	r0, sp, #16
   11d30:	bl	1238c <table_destroy@@Base>
   11d34:	mov	r0, r6
   11d38:	bl	12454 <table_delete@@Base>
   11d3c:	mov	r0, sl
   11d40:	add	sp, sp, #99328	; 0x18400
   11d44:	add	sp, sp, #748	; 0x2ec
   11d48:	vpop	{d8}
   11d4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d50:	cmp	r4, r7
   11d54:	moveq	r5, #0
   11d58:	bne	11d2c <main@@Base+0x14c>
   11d5c:	cmp	r5, r7
   11d60:	bge	11d2c <main@@Base+0x14c>
   11d64:	mov	r4, #0
   11d68:	b	121a8 <main@@Base+0x5c8>
   11d6c:	mov	r2, r4
   11d70:	mov	r1, r5
   11d74:	add	r0, sp, #16
   11d78:	bl	135dc <table_get_bool@@Base>
   11d7c:	mov	r8, r0
   11d80:	mov	r2, r4
   11d84:	mov	r1, r5
   11d88:	mov	r0, r6
   11d8c:	bl	135dc <table_get_bool@@Base>
   11d90:	eor	r0, r0, r8
   11d94:	uxtb	r0, r0
   11d98:	cmp	r0, #0
   11d9c:	beq	121a4 <main@@Base+0x5c4>
   11da0:	mov	r2, r4
   11da4:	mov	r1, r5
   11da8:	ldr	r0, [pc, #1168]	; 12240 <main@@Base+0x660>
   11dac:	mvn	sl, #0
   11db0:	bl	11b2c <printf@plt>
   11db4:	add	r5, r5, #1
   11db8:	b	11d5c <main@@Base+0x17c>
   11dbc:	mov	r2, r4
   11dc0:	mov	r1, r5
   11dc4:	add	r0, sp, #16
   11dc8:	bl	135ec <table_get_int@@Base>
   11dcc:	mov	r8, r0
   11dd0:	mov	r2, r4
   11dd4:	mov	r1, r5
   11dd8:	mov	r0, r6
   11ddc:	bl	135ec <table_get_int@@Base>
   11de0:	subs	r0, r8, r0
   11de4:	movne	r0, #1
   11de8:	b	11d98 <main@@Base+0x1b8>
   11dec:	mov	r2, r4
   11df0:	mov	r1, r5
   11df4:	add	r0, sp, #16
   11df8:	bl	135fc <table_get_uint@@Base>
   11dfc:	mov	r8, r0
   11e00:	mov	r2, r4
   11e04:	mov	r1, r5
   11e08:	mov	r0, r6
   11e0c:	bl	135fc <table_get_uint@@Base>
   11e10:	b	11de0 <main@@Base+0x200>
   11e14:	mov	r2, r4
   11e18:	mov	r1, r5
   11e1c:	add	r0, sp, #16
   11e20:	bl	1360c <table_get_int8@@Base>
   11e24:	mov	r8, r0
   11e28:	mov	r2, r4
   11e2c:	mov	r1, r5
   11e30:	mov	r0, r6
   11e34:	bl	1360c <table_get_int8@@Base>
   11e38:	b	11de0 <main@@Base+0x200>
   11e3c:	mov	r2, r4
   11e40:	mov	r1, r5
   11e44:	add	r0, sp, #16
   11e48:	bl	1361c <table_get_uint8@@Base>
   11e4c:	mov	r8, r0
   11e50:	mov	r2, r4
   11e54:	mov	r1, r5
   11e58:	mov	r0, r6
   11e5c:	bl	1361c <table_get_uint8@@Base>
   11e60:	b	11de0 <main@@Base+0x200>
   11e64:	mov	r2, r4
   11e68:	mov	r1, r5
   11e6c:	add	r0, sp, #16
   11e70:	bl	1362c <table_get_int16@@Base>
   11e74:	mov	r8, r0
   11e78:	mov	r2, r4
   11e7c:	mov	r1, r5
   11e80:	mov	r0, r6
   11e84:	bl	1362c <table_get_int16@@Base>
   11e88:	b	11de0 <main@@Base+0x200>
   11e8c:	mov	r2, r4
   11e90:	mov	r1, r5
   11e94:	add	r0, sp, #16
   11e98:	bl	1363c <table_get_uint16@@Base>
   11e9c:	mov	r8, r0
   11ea0:	mov	r2, r4
   11ea4:	mov	r1, r5
   11ea8:	mov	r0, r6
   11eac:	bl	1363c <table_get_uint16@@Base>
   11eb0:	b	11de0 <main@@Base+0x200>
   11eb4:	mov	r2, r4
   11eb8:	mov	r1, r5
   11ebc:	add	r0, sp, #16
   11ec0:	bl	1364c <table_get_int32@@Base>
   11ec4:	mov	r8, r0
   11ec8:	mov	r2, r4
   11ecc:	mov	r1, r5
   11ed0:	mov	r0, r6
   11ed4:	bl	1364c <table_get_int32@@Base>
   11ed8:	b	11de0 <main@@Base+0x200>
   11edc:	mov	r2, r4
   11ee0:	mov	r1, r5
   11ee4:	add	r0, sp, #16
   11ee8:	bl	13650 <table_get_uint32@@Base>
   11eec:	mov	r8, r0
   11ef0:	mov	r2, r4
   11ef4:	mov	r1, r5
   11ef8:	mov	r0, r6
   11efc:	bl	13650 <table_get_uint32@@Base>
   11f00:	b	11de0 <main@@Base+0x200>
   11f04:	mov	r2, r4
   11f08:	mov	r1, r5
   11f0c:	add	r0, sp, #16
   11f10:	bl	13654 <table_get_int64@@Base>
   11f14:	mov	r8, r0
   11f18:	mov	r9, r1
   11f1c:	mov	r2, r4
   11f20:	mov	r1, r5
   11f24:	mov	r0, r6
   11f28:	bl	13654 <table_get_int64@@Base>
   11f2c:	cmp	r9, r1
   11f30:	cmpeq	r8, r0
   11f34:	movne	r0, #1
   11f38:	moveq	r0, #0
   11f3c:	b	11d98 <main@@Base+0x1b8>
   11f40:	mov	r2, r4
   11f44:	mov	r1, r5
   11f48:	add	r0, sp, #16
   11f4c:	bl	13664 <table_get_uint64@@Base>
   11f50:	mov	r8, r0
   11f54:	mov	r9, r1
   11f58:	mov	r2, r4
   11f5c:	mov	r1, r5
   11f60:	mov	r0, r6
   11f64:	bl	13664 <table_get_uint64@@Base>
   11f68:	b	11f2c <main@@Base+0x34c>
   11f6c:	mov	r2, r4
   11f70:	mov	r1, r5
   11f74:	add	r0, sp, #16
   11f78:	bl	13674 <table_get_short@@Base>
   11f7c:	mov	r8, r0
   11f80:	mov	r2, r4
   11f84:	mov	r1, r5
   11f88:	mov	r0, r6
   11f8c:	bl	13674 <table_get_short@@Base>
   11f90:	b	11de0 <main@@Base+0x200>
   11f94:	mov	r2, r4
   11f98:	mov	r1, r5
   11f9c:	add	r0, sp, #16
   11fa0:	bl	13678 <table_get_ushort@@Base>
   11fa4:	mov	r8, r0
   11fa8:	mov	r2, r4
   11fac:	mov	r1, r5
   11fb0:	mov	r0, r6
   11fb4:	bl	13678 <table_get_ushort@@Base>
   11fb8:	b	11de0 <main@@Base+0x200>
   11fbc:	mov	r2, r4
   11fc0:	mov	r1, r5
   11fc4:	add	r0, sp, #16
   11fc8:	bl	1367c <table_get_long@@Base>
   11fcc:	mov	r8, r0
   11fd0:	mov	r2, r4
   11fd4:	mov	r1, r5
   11fd8:	mov	r0, r6
   11fdc:	bl	1367c <table_get_long@@Base>
   11fe0:	b	11de0 <main@@Base+0x200>
   11fe4:	mov	r2, r4
   11fe8:	mov	r1, r5
   11fec:	add	r0, sp, #16
   11ff0:	bl	1368c <table_get_ulong@@Base>
   11ff4:	mov	r8, r0
   11ff8:	mov	r2, r4
   11ffc:	mov	r1, r5
   12000:	mov	r0, r6
   12004:	bl	1368c <table_get_ulong@@Base>
   12008:	b	11de0 <main@@Base+0x200>
   1200c:	mov	r2, r4
   12010:	mov	r1, r5
   12014:	add	r0, sp, #16
   12018:	bl	1369c <table_get_llong@@Base>
   1201c:	mov	r8, r0
   12020:	mov	r9, r1
   12024:	mov	r2, r4
   12028:	mov	r1, r5
   1202c:	mov	r0, r6
   12030:	bl	1369c <table_get_llong@@Base>
   12034:	b	11f2c <main@@Base+0x34c>
   12038:	mov	r2, r4
   1203c:	mov	r1, r5
   12040:	add	r0, sp, #16
   12044:	bl	136a0 <table_get_ullong@@Base>
   12048:	mov	r8, r0
   1204c:	mov	r9, r1
   12050:	mov	r2, r4
   12054:	mov	r1, r5
   12058:	mov	r0, r6
   1205c:	bl	136a0 <table_get_ullong@@Base>
   12060:	b	11f2c <main@@Base+0x34c>
   12064:	mov	r2, r4
   12068:	mov	r1, r5
   1206c:	add	r0, sp, #16
   12070:	bl	136a4 <table_get_float@@Base>
   12074:	vmov.f32	s16, s0
   12078:	mov	r2, r4
   1207c:	mov	r1, r5
   12080:	mov	r0, r6
   12084:	bl	136a4 <table_get_float@@Base>
   12088:	vcmp.f32	s16, s0
   1208c:	vmrs	APSR_nzcv, fpscr
   12090:	movne	r0, #1
   12094:	moveq	r0, #0
   12098:	b	11d98 <main@@Base+0x1b8>
   1209c:	mov	r2, r4
   120a0:	mov	r1, r5
   120a4:	add	r0, sp, #16
   120a8:	bl	136b4 <table_get_double@@Base>
   120ac:	mov	r2, r4
   120b0:	mov	r1, r5
   120b4:	vmov.f64	d8, d0
   120b8:	mov	r0, r6
   120bc:	bl	136b4 <table_get_double@@Base>
   120c0:	vcmp.f64	d8, d0
   120c4:	b	1208c <main@@Base+0x4ac>
   120c8:	mov	r2, r4
   120cc:	mov	r1, r5
   120d0:	add	r0, sp, #16
   120d4:	bl	136c4 <table_get_ldouble@@Base>
   120d8:	mov	r2, r4
   120dc:	mov	r1, r5
   120e0:	vmov.f64	d8, d0
   120e4:	mov	r0, r6
   120e8:	bl	136c4 <table_get_ldouble@@Base>
   120ec:	b	120c0 <main@@Base+0x4e0>
   120f0:	mov	r2, r4
   120f4:	mov	r1, r5
   120f8:	add	r0, sp, #16
   120fc:	bl	136dc <table_get_string@@Base>
   12100:	mov	r8, r0
   12104:	mov	r2, r4
   12108:	mov	r1, r5
   1210c:	mov	r0, r6
   12110:	bl	136dc <table_get_string@@Base>
   12114:	mov	r1, r0
   12118:	mov	r0, r8
   1211c:	bl	11b20 <strcmp@plt>
   12120:	adds	r0, r0, #0
   12124:	movne	r0, #1
   12128:	b	11d98 <main@@Base+0x1b8>
   1212c:	mov	r2, r4
   12130:	mov	r1, r5
   12134:	add	r0, sp, #16
   12138:	bl	136d4 <table_get_char@@Base>
   1213c:	mov	r8, r0
   12140:	mov	r2, r4
   12144:	mov	r1, r5
   12148:	mov	r0, r6
   1214c:	bl	136d4 <table_get_char@@Base>
   12150:	b	11de0 <main@@Base+0x200>
   12154:	mov	r2, r4
   12158:	mov	r1, r5
   1215c:	add	r0, sp, #16
   12160:	bl	136d8 <table_get_uchar@@Base>
   12164:	mov	r8, r0
   12168:	mov	r2, r4
   1216c:	mov	r1, r5
   12170:	mov	r0, r6
   12174:	bl	136d8 <table_get_uchar@@Base>
   12178:	b	11de0 <main@@Base+0x200>
   1217c:	mov	r2, r4
   12180:	mov	r1, r5
   12184:	add	r0, sp, #16
   12188:	bl	136e0 <table_get_ptr@@Base>
   1218c:	mov	r8, r0
   12190:	mov	r2, r4
   12194:	mov	r1, r5
   12198:	mov	r0, r6
   1219c:	bl	136e0 <table_get_ptr@@Base>
   121a0:	b	11de0 <main@@Base+0x200>
   121a4:	add	r4, r4, #1
   121a8:	cmp	r4, fp
   121ac:	bge	11db4 <main@@Base+0x1d4>
   121b0:	mov	r1, r4
   121b4:	add	r0, sp, #16
   121b8:	bl	12c90 <table_get_column_data_type@@Base>
   121bc:	cmp	r0, #23
   121c0:	ldrls	pc, [pc, r0, lsl #2]
   121c4:	b	121a4 <main@@Base+0x5c4>
   121c8:			; <UNDEFINED> instruction: 0x00011dbc
   121cc:	andeq	r1, r1, ip, ror #27
   121d0:	andeq	r1, r1, r4, lsl lr
   121d4:	andeq	r1, r1, ip, lsr lr
   121d8:	andeq	r1, r1, r4, ror #28
   121dc:	andeq	r1, r1, ip, lsl #29
   121e0:			; <UNDEFINED> instruction: 0x00011eb4
   121e4:	ldrdeq	r1, [r1], -ip
   121e8:	andeq	r1, r1, r4, lsl #30
   121ec:	andeq	r1, r1, r0, asr #30
   121f0:	andeq	r1, r1, ip, ror #30
   121f4:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   121f8:			; <UNDEFINED> instruction: 0x00011fbc
   121fc:	andeq	r1, r1, r4, ror #31
   12200:	andeq	r2, r1, ip
   12204:	andeq	r2, r1, r8, lsr r0
   12208:	andeq	r2, r1, r4, rrx
   1220c:	muleq	r1, ip, r0
   12210:	andeq	r2, r1, r8, asr #1
   12214:	andeq	r2, r1, ip, lsr #2
   12218:	andeq	r2, r1, r4, asr r1
   1221c:	strdeq	r2, [r1], -r0
   12220:	andeq	r1, r1, ip, ror #26
   12224:	andeq	r2, r1, ip, ror r1
   12228:	andeq	r4, r1, r3, lsl pc
   1222c:	muleq	r1, r4, lr
   12230:	muleq	r1, r7, lr
   12234:	andeq	r8, r1, r0, lsr #13
   12238:	muleq	r1, sp, lr
   1223c:	ldrdeq	r4, [r1], -r8
   12240:	andeq	r4, r1, r6, lsl pc

00012244 <_start@@Base>:
   12244:	mov	fp, #0
   12248:	mov	lr, #0
   1224c:	pop	{r1}		; (ldr r1, [sp], #4)
   12250:	mov	r2, sp
   12254:	push	{r2}		; (str r2, [sp, #-4]!)
   12258:	push	{r0}		; (str r0, [sp, #-4]!)
   1225c:	ldr	ip, [pc, #16]	; 12274 <_start@@Base+0x30>
   12260:	push	{ip}		; (str ip, [sp, #-4]!)
   12264:	ldr	r0, [pc, #12]	; 12278 <_start@@Base+0x34>
   12268:	ldr	r3, [pc, #12]	; 1227c <_start@@Base+0x38>
   1226c:	bl	11b74 <__libc_start_main@plt>
   12270:	bl	11bd4 <abort@plt>
   12274:	andeq	r4, r1, r4, lsl #29
   12278:	andeq	r1, r1, r0, ror #23
   1227c:	andeq	r4, r1, r4, lsr #28
   12280:	ldr	r3, [pc, #20]	; 1229c <_start@@Base+0x58>
   12284:	ldr	r2, [pc, #20]	; 122a0 <_start@@Base+0x5c>
   12288:	add	r3, pc, r3
   1228c:	ldr	r2, [r3, r2]
   12290:	cmp	r2, #0
   12294:	bxeq	lr
   12298:	b	11b80 <__gmon_start__@plt>
   1229c:	andeq	r3, r1, r0, ror sp
   122a0:	andeq	r0, r0, ip, asr #32
   122a4:	ldr	r0, [pc, #24]	; 122c4 <_start@@Base+0x80>
   122a8:	ldr	r3, [pc, #24]	; 122c8 <_start@@Base+0x84>
   122ac:	cmp	r3, r0
   122b0:	bxeq	lr
   122b4:	ldr	r3, [pc, #16]	; 122cc <_start@@Base+0x88>
   122b8:	cmp	r3, #0
   122bc:	bxeq	lr
   122c0:	bx	r3
   122c4:	andeq	r6, r2, r8, asr r0
   122c8:	andeq	r6, r2, r8, asr r0
   122cc:	andeq	r0, r0, r0
   122d0:	ldr	r0, [pc, #36]	; 122fc <_start@@Base+0xb8>
   122d4:	ldr	r1, [pc, #36]	; 12300 <_start@@Base+0xbc>
   122d8:	sub	r1, r1, r0
   122dc:	asr	r1, r1, #2
   122e0:	add	r1, r1, r1, lsr #31
   122e4:	asrs	r1, r1, #1
   122e8:	bxeq	lr
   122ec:	ldr	r3, [pc, #16]	; 12304 <_start@@Base+0xc0>
   122f0:	cmp	r3, #0
   122f4:	bxeq	lr
   122f8:	bx	r3
   122fc:	andeq	r6, r2, r8, asr r0
   12300:	andeq	r6, r2, r8, asr r0
   12304:	andeq	r0, r0, r0
   12308:	push	{r4, lr}
   1230c:	ldr	r4, [pc, #24]	; 1232c <_start@@Base+0xe8>
   12310:	ldrb	r3, [r4]
   12314:	cmp	r3, #0
   12318:	popne	{r4, pc}
   1231c:	bl	122a4 <_start@@Base+0x60>
   12320:	mov	r3, #1
   12324:	strb	r3, [r4]
   12328:	pop	{r4, pc}
   1232c:	andeq	r6, r2, r8, asr r0
   12330:	b	122d0 <_start@@Base+0x8c>

00012334 <table_init@@Base>:
   12334:	mov	r3, #0
   12338:	mov	r2, #10
   1233c:	mov	r1, #20
   12340:	str	r3, [r0]
   12344:	str	r3, [r0, #4]
   12348:	strd	r2, [r0, #8]
   1234c:	str	r3, [r0, #16]
   12350:	str	r3, [r0, #20]
   12354:	str	r1, [r0, #24]
   12358:	str	r3, [r0, #28]
   1235c:	str	r3, [r0, #32]
   12360:	str	r3, [r0, #36]	; 0x24
   12364:	str	r3, [r0, #40]	; 0x28
   12368:	str	r3, [r0, #44]	; 0x2c
   1236c:	strd	r2, [r0, #48]	; 0x30
   12370:	bx	lr

00012374 <table_new@@Base>:
   12374:	push	{r4, lr}
   12378:	mov	r0, #56	; 0x38
   1237c:	bl	11b68 <malloc@plt>
   12380:	mov	r4, r0
   12384:	bl	12334 <table_init@@Base>
   12388:	pop	{r4, pc}

0001238c <table_destroy@@Base>:
   1238c:	push	{r4, r5, r6, lr}
   12390:	subs	r4, r0, #0
   12394:	popeq	{r4, r5, r6, pc}
   12398:	mvn	r2, #0
   1239c:	mov	r3, #64	; 0x40
   123a0:	mov	r1, r2
   123a4:	mov	r5, #0
   123a8:	bl	12b60 <table_notify@@Base>
   123ac:	mov	r0, r4
   123b0:	bl	13754 <table_get_row_length@@Base>
   123b4:	mov	r6, r0
   123b8:	cmp	r6, r5
   123bc:	bgt	1242c <table_destroy@@Base+0xa0>
   123c0:	ldr	r0, [r4, #16]
   123c4:	cmp	r0, #0
   123c8:	beq	123d0 <table_destroy@@Base+0x44>
   123cc:	bl	11b38 <free@plt>
   123d0:	mov	r0, r4
   123d4:	mov	r5, #0
   123d8:	bl	12c38 <table_get_column_length@@Base>
   123dc:	mov	r6, r0
   123e0:	cmp	r6, r5
   123e4:	bgt	12440 <table_destroy@@Base+0xb4>
   123e8:	ldr	r0, [r4]
   123ec:	cmp	r0, #0
   123f0:	beq	123f8 <table_destroy@@Base+0x6c>
   123f4:	bl	11b38 <free@plt>
   123f8:	ldr	r0, [r4, #36]	; 0x24
   123fc:	cmp	r0, #0
   12400:	beq	12408 <table_destroy@@Base+0x7c>
   12404:	bl	11b38 <free@plt>
   12408:	ldr	r0, [r4, #40]	; 0x28
   1240c:	cmp	r0, #0
   12410:	beq	12418 <table_destroy@@Base+0x8c>
   12414:	bl	11b38 <free@plt>
   12418:	ldr	r0, [r4, #44]	; 0x2c
   1241c:	cmp	r0, #0
   12420:	popeq	{r4, r5, r6, pc}
   12424:	pop	{r4, r5, r6, lr}
   12428:	b	11b38 <free@plt>
   1242c:	mov	r1, r5
   12430:	mov	r0, r4
   12434:	bl	13704 <table_row_destroy@@Base>
   12438:	add	r5, r5, #1
   1243c:	b	123b8 <table_destroy@@Base+0x2c>
   12440:	mov	r1, r5
   12444:	mov	r0, r4
   12448:	bl	12c1c <table_column_destroy@@Base>
   1244c:	add	r5, r5, #1
   12450:	b	123e0 <table_destroy@@Base+0x54>

00012454 <table_delete@@Base>:
   12454:	push	{r4, lr}
   12458:	mov	r4, r0
   1245c:	bl	1238c <table_destroy@@Base>
   12460:	mov	r0, r4
   12464:	pop	{r4, lr}
   12468:	b	11b38 <free@plt>

0001246c <table_dupe@@Base>:
   1246c:	push	{r4, r5, r6, r7, r8, r9, lr}
   12470:	sub	sp, sp, #20
   12474:	mov	r6, r0
   12478:	mov	r4, #0
   1247c:	bl	13754 <table_get_row_length@@Base>
   12480:	mov	r9, r0
   12484:	mov	r0, r6
   12488:	bl	12c38 <table_get_column_length@@Base>
   1248c:	mov	r8, r0
   12490:	bl	12374 <table_new@@Base>
   12494:	mov	r7, r0
   12498:	cmp	r4, r8
   1249c:	blt	124b8 <table_dupe@@Base+0x4c>
   124a0:	mov	r5, #0
   124a4:	cmp	r5, r9
   124a8:	mov	r0, r7
   124ac:	blt	124ec <table_dupe@@Base+0x80>
   124b0:	add	sp, sp, #20
   124b4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   124b8:	mov	r1, r4
   124bc:	mov	r0, r6
   124c0:	bl	12efc <table_get_column_name@@Base>
   124c4:	mov	r5, r0
   124c8:	mov	r1, r4
   124cc:	mov	r0, r6
   124d0:	add	r4, r4, #1
   124d4:	bl	12c90 <table_get_column_data_type@@Base>
   124d8:	mov	r2, r0
   124dc:	mov	r1, r5
   124e0:	mov	r0, r7
   124e4:	bl	12ca4 <table_add_column@@Base>
   124e8:	b	12498 <table_dupe@@Base+0x2c>
   124ec:	mov	r4, #0
   124f0:	bl	1375c <table_add_row@@Base>
   124f4:	cmp	r4, r8
   124f8:	addge	r5, r5, #1
   124fc:	bge	124a4 <table_dupe@@Base+0x38>
   12500:	mov	r1, r4
   12504:	mov	r0, r6
   12508:	bl	12c90 <table_get_column_data_type@@Base>
   1250c:	cmp	r0, #23
   12510:	ldrls	pc, [pc, r0, lsl #2]
   12514:	b	1259c <table_dupe@@Base+0x130>
   12518:	andeq	r2, r1, r8, ror r5
   1251c:	andeq	r2, r1, r4, lsr #11
   12520:	andeq	r2, r1, ip, asr #11
   12524:	strdeq	r2, [r1], -r4
   12528:	andeq	r2, r1, ip, lsl r6
   1252c:	andeq	r2, r1, r4, asr #12
   12530:	andeq	r2, r1, ip, ror #12
   12534:	muleq	r1, r4, r6
   12538:			; <UNDEFINED> instruction: 0x000126bc
   1253c:	andeq	r2, r1, r4, ror #13
   12540:	andeq	r2, r1, ip, lsl #14
   12544:	andeq	r2, r1, r4, lsr r7
   12548:	andeq	r2, r1, ip, asr r7
   1254c:	andeq	r2, r1, r4, lsl #15
   12550:	andeq	r2, r1, ip, lsr #15
   12554:	ldrdeq	r2, [r1], -r4
   12558:	andeq	r2, r1, r4, lsr #16
   1255c:	andeq	r2, r1, r8, asr #16
   12560:	andeq	r2, r1, ip, ror #16
   12564:			; <UNDEFINED> instruction: 0x000128b8
   12568:	andeq	r2, r1, r0, ror #17
   1256c:	strdeq	r2, [r1], -ip
   12570:	muleq	r1, r0, r8
   12574:	andeq	r2, r1, r8, lsl #18
   12578:	mov	r2, r4
   1257c:	mov	r1, r5
   12580:	mov	r0, r6
   12584:	bl	135ec <table_get_int@@Base>
   12588:	mov	r3, r0
   1258c:	mov	r2, r4
   12590:	mov	r1, r5
   12594:	mov	r0, r7
   12598:	bl	13c0c <table_set_int@@Base>
   1259c:	add	r4, r4, #1
   125a0:	b	124f4 <table_dupe@@Base+0x88>
   125a4:	mov	r2, r4
   125a8:	mov	r1, r5
   125ac:	mov	r0, r6
   125b0:	bl	135fc <table_get_uint@@Base>
   125b4:	mov	r3, r0
   125b8:	mov	r2, r4
   125bc:	mov	r1, r5
   125c0:	mov	r0, r7
   125c4:	bl	13c2c <table_set_uint@@Base>
   125c8:	b	1259c <table_dupe@@Base+0x130>
   125cc:	mov	r2, r4
   125d0:	mov	r1, r5
   125d4:	mov	r0, r6
   125d8:	bl	1360c <table_get_int8@@Base>
   125dc:	mov	r3, r0
   125e0:	mov	r2, r4
   125e4:	mov	r1, r5
   125e8:	mov	r0, r7
   125ec:	bl	13c4c <table_set_int8@@Base>
   125f0:	b	1259c <table_dupe@@Base+0x130>
   125f4:	mov	r2, r4
   125f8:	mov	r1, r5
   125fc:	mov	r0, r6
   12600:	bl	1361c <table_get_uint8@@Base>
   12604:	mov	r3, r0
   12608:	mov	r2, r4
   1260c:	mov	r1, r5
   12610:	mov	r0, r7
   12614:	bl	13c6c <table_set_uint8@@Base>
   12618:	b	1259c <table_dupe@@Base+0x130>
   1261c:	mov	r2, r4
   12620:	mov	r1, r5
   12624:	mov	r0, r6
   12628:	bl	1362c <table_get_int16@@Base>
   1262c:	mov	r3, r0
   12630:	mov	r2, r4
   12634:	mov	r1, r5
   12638:	mov	r0, r7
   1263c:	bl	13c8c <table_set_int16@@Base>
   12640:	b	1259c <table_dupe@@Base+0x130>
   12644:	mov	r2, r4
   12648:	mov	r1, r5
   1264c:	mov	r0, r6
   12650:	bl	1363c <table_get_uint16@@Base>
   12654:	mov	r3, r0
   12658:	mov	r2, r4
   1265c:	mov	r1, r5
   12660:	mov	r0, r7
   12664:	bl	13cac <table_set_uint16@@Base>
   12668:	b	1259c <table_dupe@@Base+0x130>
   1266c:	mov	r2, r4
   12670:	mov	r1, r5
   12674:	mov	r0, r6
   12678:	bl	1364c <table_get_int32@@Base>
   1267c:	mov	r3, r0
   12680:	mov	r2, r4
   12684:	mov	r1, r5
   12688:	mov	r0, r7
   1268c:	bl	13ccc <table_set_int32@@Base>
   12690:	b	1259c <table_dupe@@Base+0x130>
   12694:	mov	r2, r4
   12698:	mov	r1, r5
   1269c:	mov	r0, r6
   126a0:	bl	13650 <table_get_uint32@@Base>
   126a4:	mov	r3, r0
   126a8:	mov	r2, r4
   126ac:	mov	r1, r5
   126b0:	mov	r0, r7
   126b4:	bl	13cec <table_set_uint32@@Base>
   126b8:	b	1259c <table_dupe@@Base+0x130>
   126bc:	mov	r2, r4
   126c0:	mov	r1, r5
   126c4:	mov	r0, r6
   126c8:	bl	13654 <table_get_int64@@Base>
   126cc:	mov	r2, r4
   126d0:	strd	r0, [sp]
   126d4:	mov	r1, r5
   126d8:	mov	r0, r7
   126dc:	bl	13d0c <table_set_int64@@Base>
   126e0:	b	1259c <table_dupe@@Base+0x130>
   126e4:	mov	r2, r4
   126e8:	mov	r1, r5
   126ec:	mov	r0, r6
   126f0:	bl	13664 <table_get_uint64@@Base>
   126f4:	mov	r2, r4
   126f8:	strd	r0, [sp]
   126fc:	mov	r1, r5
   12700:	mov	r0, r7
   12704:	bl	13d28 <table_set_uint64@@Base>
   12708:	b	1259c <table_dupe@@Base+0x130>
   1270c:	mov	r2, r4
   12710:	mov	r1, r5
   12714:	mov	r0, r6
   12718:	bl	13674 <table_get_short@@Base>
   1271c:	mov	r3, r0
   12720:	mov	r2, r4
   12724:	mov	r1, r5
   12728:	mov	r0, r7
   1272c:	bl	13d44 <table_set_short@@Base>
   12730:	b	1259c <table_dupe@@Base+0x130>
   12734:	mov	r2, r4
   12738:	mov	r1, r5
   1273c:	mov	r0, r6
   12740:	bl	13678 <table_get_ushort@@Base>
   12744:	mov	r3, r0
   12748:	mov	r2, r4
   1274c:	mov	r1, r5
   12750:	mov	r0, r7
   12754:	bl	13d64 <table_set_ushort@@Base>
   12758:	b	1259c <table_dupe@@Base+0x130>
   1275c:	mov	r2, r4
   12760:	mov	r1, r5
   12764:	mov	r0, r6
   12768:	bl	1367c <table_get_long@@Base>
   1276c:	mov	r3, r0
   12770:	mov	r2, r4
   12774:	mov	r1, r5
   12778:	mov	r0, r7
   1277c:	bl	13d84 <table_set_long@@Base>
   12780:	b	1259c <table_dupe@@Base+0x130>
   12784:	mov	r2, r4
   12788:	mov	r1, r5
   1278c:	mov	r0, r6
   12790:	bl	1368c <table_get_ulong@@Base>
   12794:	mov	r3, r0
   12798:	mov	r2, r4
   1279c:	mov	r1, r5
   127a0:	mov	r0, r7
   127a4:	bl	13da4 <table_set_ulong@@Base>
   127a8:	b	1259c <table_dupe@@Base+0x130>
   127ac:	mov	r2, r4
   127b0:	mov	r1, r5
   127b4:	mov	r0, r6
   127b8:	bl	1369c <table_get_llong@@Base>
   127bc:	mov	r2, r4
   127c0:	strd	r0, [sp]
   127c4:	mov	r1, r5
   127c8:	mov	r0, r7
   127cc:	bl	13dc4 <table_set_llong@@Base>
   127d0:	b	1259c <table_dupe@@Base+0x130>
   127d4:	mov	r2, r4
   127d8:	mov	r1, r5
   127dc:	mov	r0, r6
   127e0:	bl	136a0 <table_get_ullong@@Base>
   127e4:	mov	r2, r4
   127e8:	strd	r0, [sp]
   127ec:	mov	r1, r5
   127f0:	mov	r0, r7
   127f4:	bl	13de0 <table_set_ullong@@Base>
   127f8:	b	1259c <table_dupe@@Base+0x130>
   127fc:	mov	r2, r4
   12800:	mov	r1, r5
   12804:	mov	r0, r6
   12808:	bl	136dc <table_get_string@@Base>
   1280c:	mov	r3, r0
   12810:	mov	r2, r4
   12814:	mov	r1, r5
   12818:	mov	r0, r7
   1281c:	bl	13e5c <table_set_string@@Base>
   12820:	b	1259c <table_dupe@@Base+0x130>
   12824:	mov	r2, r4
   12828:	mov	r1, r5
   1282c:	mov	r0, r6
   12830:	bl	136a4 <table_get_float@@Base>
   12834:	mov	r2, r4
   12838:	mov	r1, r5
   1283c:	mov	r0, r7
   12840:	bl	13dfc <table_set_float@@Base>
   12844:	b	1259c <table_dupe@@Base+0x130>
   12848:	mov	r2, r4
   1284c:	mov	r1, r5
   12850:	mov	r0, r6
   12854:	bl	136b4 <table_get_double@@Base>
   12858:	mov	r2, r4
   1285c:	mov	r1, r5
   12860:	mov	r0, r7
   12864:	bl	13e1c <table_set_double@@Base>
   12868:	b	1259c <table_dupe@@Base+0x130>
   1286c:	mov	r2, r4
   12870:	mov	r1, r5
   12874:	mov	r0, r6
   12878:	bl	136c4 <table_get_ldouble@@Base>
   1287c:	mov	r2, r4
   12880:	mov	r1, r5
   12884:	mov	r0, r7
   12888:	bl	13e3c <table_set_ldouble@@Base>
   1288c:	b	1259c <table_dupe@@Base+0x130>
   12890:	mov	r2, r4
   12894:	mov	r1, r5
   12898:	mov	r0, r6
   1289c:	bl	135dc <table_get_bool@@Base>
   128a0:	mov	r3, r0
   128a4:	mov	r2, r4
   128a8:	mov	r1, r5
   128ac:	mov	r0, r7
   128b0:	bl	13bec <table_set_bool@@Base>
   128b4:	b	1259c <table_dupe@@Base+0x130>
   128b8:	mov	r2, r4
   128bc:	mov	r1, r5
   128c0:	mov	r0, r6
   128c4:	bl	136d4 <table_get_char@@Base>
   128c8:	mov	r3, r0
   128cc:	mov	r2, r4
   128d0:	mov	r1, r5
   128d4:	mov	r0, r7
   128d8:	bl	13e74 <table_set_char@@Base>
   128dc:	b	1259c <table_dupe@@Base+0x130>
   128e0:	mov	r2, r4
   128e4:	mov	r1, r5
   128e8:	mov	r0, r6
   128ec:	bl	136d8 <table_get_uchar@@Base>
   128f0:	mov	r3, r0
   128f4:	mov	r2, r4
   128f8:	mov	r1, r5
   128fc:	mov	r0, r7
   12900:	bl	13e94 <table_set_uchar@@Base>
   12904:	b	1259c <table_dupe@@Base+0x130>
   12908:	mov	r2, r4
   1290c:	mov	r1, r5
   12910:	mov	r0, r6
   12914:	bl	136e0 <table_get_ptr@@Base>
   12918:	add	r3, sp, #12
   1291c:	mov	r2, r4
   12920:	str	r0, [sp, #12]
   12924:	mov	r1, r5
   12928:	mov	r0, r7
   1292c:	bl	13eb4 <table_set_ptr@@Base>
   12930:	b	1259c <table_dupe@@Base+0x130>

00012934 <table_get_major_version@@Base>:
   12934:	mov	r0, #0
   12938:	bx	lr

0001293c <table_get_minor_version@@Base>:
   1293c:	mov	r0, #0
   12940:	bx	lr

00012944 <table_get_patch_version@@Base>:
   12944:	mov	r0, #0
   12948:	bx	lr

0001294c <table_get_version@@Base>:
   1294c:	ldr	r0, [pc]	; 12954 <table_get_version@@Base+0x8>
   12950:	bx	lr
   12954:	andeq	r4, r1, r9, asr #30

00012958 <table_get_callback_length@@Base>:
   12958:	ldr	r0, [r0, #32]
   1295c:	bx	lr

00012960 <table_register_callback@@Base>:
   12960:	push	{r4, r5, r6, r7, r8, lr}
   12964:	mov	r4, r0
   12968:	mov	ip, #0
   1296c:	ldr	lr, [r0, #32]
   12970:	ldr	r0, [r0, #36]	; 0x24
   12974:	cmp	ip, lr
   12978:	blt	12a08 <table_register_callback@@Base+0xa8>
   1297c:	ldr	ip, [r4, #48]	; 0x30
   12980:	mov	r5, r3
   12984:	mov	r6, r2
   12988:	mov	r7, r1
   1298c:	udiv	r3, lr, ip
   12990:	mls	r3, ip, r3, lr
   12994:	cmp	r3, #0
   12998:	bne	129dc <table_register_callback@@Base+0x7c>
   1299c:	ldr	r1, [r4, #52]	; 0x34
   129a0:	add	r1, ip, r1
   129a4:	str	r1, [r4, #52]	; 0x34
   129a8:	lsl	r1, r1, #2
   129ac:	bl	11b50 <realloc@plt>
   129b0:	ldr	r1, [r4, #52]	; 0x34
   129b4:	str	r0, [r4, #36]	; 0x24
   129b8:	ldr	r0, [r4, #40]	; 0x28
   129bc:	lsl	r1, r1, #2
   129c0:	bl	11b50 <realloc@plt>
   129c4:	ldr	r1, [r4, #52]	; 0x34
   129c8:	str	r0, [r4, #40]	; 0x28
   129cc:	ldr	r0, [r4, #44]	; 0x2c
   129d0:	lsl	r1, r1, #2
   129d4:	bl	11b50 <realloc@plt>
   129d8:	str	r0, [r4, #44]	; 0x2c
   129dc:	ldr	r3, [r4, #32]
   129e0:	ldr	r2, [r4, #36]	; 0x24
   129e4:	str	r7, [r2, r3, lsl #2]
   129e8:	ldr	r2, [r4, #40]	; 0x28
   129ec:	str	r6, [r2, r3, lsl #2]
   129f0:	ldr	r2, [r4, #44]	; 0x2c
   129f4:	str	r5, [r2, r3, lsl #2]
   129f8:	ldr	r3, [r4, #32]
   129fc:	add	r3, r3, #1
   12a00:	str	r3, [r4, #32]
   12a04:	pop	{r4, r5, r6, r7, r8, pc}
   12a08:	ldr	r6, [r0, ip, lsl #2]
   12a0c:	lsl	r5, ip, #2
   12a10:	cmp	r1, r6
   12a14:	bne	12a28 <table_register_callback@@Base+0xc8>
   12a18:	ldr	r6, [r4, #40]	; 0x28
   12a1c:	ldr	r6, [r6, ip, lsl #2]
   12a20:	cmp	r2, r6
   12a24:	beq	12a30 <table_register_callback@@Base+0xd0>
   12a28:	add	ip, ip, #1
   12a2c:	b	12974 <table_register_callback@@Base+0x14>
   12a30:	cmp	ip, #0
   12a34:	ble	1297c <table_register_callback@@Base+0x1c>
   12a38:	ldr	r1, [r4, #44]	; 0x2c
   12a3c:	ldr	r2, [r1, r5]
   12a40:	orr	r2, r2, r3
   12a44:	str	r2, [r1, r5]
   12a48:	pop	{r4, r5, r6, r7, r8, pc}

00012a4c <table_unregister_callback@@Base>:
   12a4c:	ldr	ip, [r0, #32]
   12a50:	mov	r3, #0
   12a54:	cmp	r3, ip
   12a58:	bxge	lr
   12a5c:	push	{r4, r5, r6, lr}
   12a60:	ldr	lr, [r0, #36]	; 0x24
   12a64:	ldr	lr, [lr, r3, lsl #2]
   12a68:	cmp	r1, lr
   12a6c:	bne	12a80 <table_unregister_callback@@Base+0x34>
   12a70:	ldr	lr, [r0, #40]	; 0x28
   12a74:	ldr	lr, [lr, r3, lsl #2]
   12a78:	cmp	r2, lr
   12a7c:	beq	12ac0 <table_unregister_callback@@Base+0x74>
   12a80:	add	r3, r3, #1
   12a84:	cmp	r3, ip
   12a88:	blt	12a60 <table_unregister_callback@@Base+0x14>
   12a8c:	pop	{r4, r5, r6, pc}
   12a90:	ldr	r1, [r0, #36]	; 0x24
   12a94:	add	r2, r3, #1
   12a98:	lsl	r3, r3, #2
   12a9c:	ldr	ip, [r1, r2, lsl #2]
   12aa0:	str	ip, [r1, r3]
   12aa4:	ldr	r1, [r0, #40]	; 0x28
   12aa8:	ldr	ip, [r1, r2, lsl #2]
   12aac:	str	ip, [r1, r3]
   12ab0:	ldr	r1, [r0, #44]	; 0x2c
   12ab4:	ldr	ip, [r1, r2, lsl #2]
   12ab8:	str	ip, [r1, r3]
   12abc:	mov	r3, r2
   12ac0:	ldr	r2, [r0, #32]
   12ac4:	sub	r2, r2, #1
   12ac8:	cmp	r2, r3
   12acc:	bgt	12a90 <table_unregister_callback@@Base+0x44>
   12ad0:	ldr	r1, [r0, #48]	; 0x30
   12ad4:	str	r2, [r0, #32]
   12ad8:	udiv	r3, r2, r1
   12adc:	mls	r2, r1, r3, r2
   12ae0:	cmp	r2, #0
   12ae4:	popne	{r4, r5, r6, pc}
   12ae8:	mov	r4, r0
   12aec:	ldr	r5, [r4, #52]	; 0x34
   12af0:	ldr	r0, [r0, #36]	; 0x24
   12af4:	sub	r5, r5, r1
   12af8:	cmp	r5, #0
   12afc:	str	r5, [r4, #52]	; 0x34
   12b00:	beq	12b3c <table_unregister_callback@@Base+0xf0>
   12b04:	lsl	r1, r5, #2
   12b08:	bl	11b50 <realloc@plt>
   12b0c:	ldr	r1, [r4, #52]	; 0x34
   12b10:	str	r0, [r4, #36]	; 0x24
   12b14:	ldr	r0, [r4, #40]	; 0x28
   12b18:	lsl	r1, r1, #2
   12b1c:	bl	11b50 <realloc@plt>
   12b20:	ldr	r1, [r4, #52]	; 0x34
   12b24:	str	r0, [r4, #40]	; 0x28
   12b28:	ldr	r0, [r4, #44]	; 0x2c
   12b2c:	lsl	r1, r1, #2
   12b30:	bl	11b50 <realloc@plt>
   12b34:	str	r0, [r4, #44]	; 0x2c
   12b38:	pop	{r4, r5, r6, pc}
   12b3c:	bl	11b38 <free@plt>
   12b40:	ldr	r0, [r4, #40]	; 0x28
   12b44:	bl	11b38 <free@plt>
   12b48:	ldr	r0, [r4, #44]	; 0x2c
   12b4c:	bl	11b38 <free@plt>
   12b50:	str	r5, [r4, #36]	; 0x24
   12b54:	str	r5, [r4, #40]	; 0x28
   12b58:	str	r5, [r4, #44]	; 0x2c
   12b5c:	pop	{r4, r5, r6, pc}

00012b60 <table_notify@@Base>:
   12b60:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   12b64:	mov	r5, r0
   12b68:	mov	r7, r1
   12b6c:	mov	r8, r2
   12b70:	mov	r6, r3
   12b74:	mov	r4, #0
   12b78:	ldr	r3, [r5, #32]
   12b7c:	cmp	r3, r4
   12b80:	bgt	12b8c <table_notify@@Base+0x2c>
   12b84:	add	sp, sp, #12
   12b88:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12b8c:	ldr	r3, [r5, #44]	; 0x2c
   12b90:	ldr	r3, [r3, r4, lsl #2]
   12b94:	tst	r6, r3
   12b98:	beq	12bc4 <table_notify@@Base+0x64>
   12b9c:	ldr	r3, [r5, #36]	; 0x24
   12ba0:	mov	r1, r7
   12ba4:	mov	r0, r5
   12ba8:	ldr	r2, [r5, #40]	; 0x28
   12bac:	ldr	r2, [r2, r4, lsl #2]
   12bb0:	str	r2, [sp]
   12bb4:	mov	r2, r8
   12bb8:	ldr	r9, [r3, r4, lsl #2]
   12bbc:	mov	r3, r6
   12bc0:	blx	r9
   12bc4:	add	r4, r4, #1
   12bc8:	b	12b78 <table_notify@@Base+0x18>

00012bcc <table_column_init@@Base>:
   12bcc:	push	{r4, r5, r6, r7, r8, lr}
   12bd0:	mov	r4, #12
   12bd4:	mov	r6, r2
   12bd8:	mov	r8, r3
   12bdc:	mul	r4, r4, r1
   12be0:	ldr	r7, [r0]
   12be4:	mov	r0, r2
   12be8:	bl	11b8c <strlen@plt>
   12bec:	add	r0, r0, #1
   12bf0:	bl	11b68 <malloc@plt>
   12bf4:	cmp	r0, #0
   12bf8:	add	r5, r7, r4
   12bfc:	str	r0, [r7, r4]
   12c00:	beq	12c0c <table_column_init@@Base+0x40>
   12c04:	mov	r1, r6
   12c08:	bl	11b5c <strcpy@plt>
   12c0c:	ldr	r3, [sp, #24]
   12c10:	str	r8, [r5, #4]
   12c14:	str	r3, [r5, #8]
   12c18:	pop	{r4, r5, r6, r7, r8, pc}

00012c1c <table_column_destroy@@Base>:
   12c1c:	mov	r3, #12
   12c20:	ldr	r2, [r0]
   12c24:	mul	r1, r3, r1
   12c28:	ldr	r0, [r2, r1]
   12c2c:	cmp	r0, #0
   12c30:	bxeq	lr
   12c34:	b	11b38 <free@plt>

00012c38 <table_get_column_length@@Base>:
   12c38:	ldr	r0, [r0, #4]
   12c3c:	bx	lr

00012c40 <table_get_column@@Base>:
   12c40:	push	{r4, r5, r6, r7, r8, lr}
   12c44:	mov	r5, r0
   12c48:	mov	r7, r1
   12c4c:	mov	r4, #0
   12c50:	mov	r8, #12
   12c54:	ldr	r6, [r0, #4]
   12c58:	cmp	r4, r6
   12c5c:	blt	12c6c <table_get_column@@Base+0x2c>
   12c60:	mvneq	r4, #0
   12c64:	mov	r0, r4
   12c68:	pop	{r4, r5, r6, r7, r8, pc}
   12c6c:	ldr	r2, [r5]
   12c70:	mul	r3, r8, r4
   12c74:	mov	r1, r7
   12c78:	ldr	r0, [r2, r3]
   12c7c:	bl	11b20 <strcmp@plt>
   12c80:	cmp	r0, #0
   12c84:	beq	12c64 <table_get_column@@Base+0x24>
   12c88:	add	r4, r4, #1
   12c8c:	b	12c58 <table_get_column@@Base+0x18>

00012c90 <table_get_column_data_type@@Base>:
   12c90:	ldr	r2, [r0]
   12c94:	mov	r3, #12
   12c98:	mla	r1, r3, r1, r2
   12c9c:	ldr	r0, [r1, #4]
   12ca0:	bx	lr

00012ca4 <table_add_column@@Base>:
   12ca4:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   12ca8:	mov	r7, r1
   12cac:	mov	r4, r0
   12cb0:	mov	r6, r2
   12cb4:	ldr	r3, [r0, #4]
   12cb8:	ldr	r1, [r0, #8]
   12cbc:	udiv	r5, r3, r1
   12cc0:	mls	r5, r1, r5, r3
   12cc4:	cmp	r5, #0
   12cc8:	beq	12d30 <table_add_column@@Base+0x8c>
   12ccc:	mov	r0, r4
   12cd0:	mov	r5, #0
   12cd4:	bl	13754 <table_get_row_length@@Base>
   12cd8:	ldr	r8, [r4, #4]
   12cdc:	mov	r9, r0
   12ce0:	mov	r0, r6
   12ce4:	bl	135b4 <table_get_default_compare_function_for_data_type@@Base>
   12ce8:	mov	r3, r6
   12cec:	mov	r2, r7
   12cf0:	str	r0, [sp]
   12cf4:	mov	r0, r4
   12cf8:	mov	r1, r8
   12cfc:	bl	12bcc <table_column_init@@Base>
   12d00:	cmp	r9, r5
   12d04:	bgt	12d90 <table_add_column@@Base+0xec>
   12d08:	mov	r0, r4
   12d0c:	mov	r3, #8
   12d10:	ldr	r2, [r4, #4]
   12d14:	mvn	r1, #0
   12d18:	bl	12b60 <table_notify@@Base>
   12d1c:	ldr	r0, [r4, #4]
   12d20:	add	r3, r0, #1
   12d24:	str	r3, [r4, #4]
   12d28:	add	sp, sp, #12
   12d2c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12d30:	ldr	r3, [r4, #12]
   12d34:	ldr	r0, [r0]
   12d38:	add	r1, r1, r3
   12d3c:	mov	r3, #12
   12d40:	str	r1, [r4, #12]
   12d44:	mul	r1, r3, r1
   12d48:	bl	11b50 <realloc@plt>
   12d4c:	str	r0, [r4]
   12d50:	mov	r0, r4
   12d54:	bl	13754 <table_get_row_length@@Base>
   12d58:	mov	r9, r0
   12d5c:	cmp	r9, r5
   12d60:	ble	12ccc <table_add_column@@Base+0x28>
   12d64:	mov	r1, r5
   12d68:	mov	r0, r4
   12d6c:	bl	138f0 <table_get_row_ptr@@Base>
   12d70:	ldr	r1, [r4, #12]
   12d74:	mov	r8, r0
   12d78:	add	r5, r5, #1
   12d7c:	ldr	r0, [r0]
   12d80:	lsl	r1, r1, #2
   12d84:	bl	11b50 <realloc@plt>
   12d88:	str	r0, [r8]
   12d8c:	b	12d5c <table_add_column@@Base+0xb8>
   12d90:	mov	r1, r5
   12d94:	mov	r2, r8
   12d98:	mov	r0, r4
   12d9c:	add	r5, r5, #1
   12da0:	bl	14da0 <table_cell_init@@Base>
   12da4:	b	12d00 <table_add_column@@Base+0x5c>

00012da8 <table_remove_column@@Base>:
   12da8:	push	{r4, r5, r6, r7, r8, lr}
   12dac:	mov	r4, r0
   12db0:	mov	r6, r1
   12db4:	mov	r5, #12
   12db8:	bl	12c1c <table_column_destroy@@Base>
   12dbc:	ldr	r7, [r4, #4]
   12dc0:	mov	r1, r6
   12dc4:	sub	r7, r7, #1
   12dc8:	cmp	r1, r7
   12dcc:	blt	12e58 <table_remove_column@@Base+0xb0>
   12dd0:	mov	r0, r4
   12dd4:	mov	r5, #0
   12dd8:	bl	13754 <table_get_row_length@@Base>
   12ddc:	mov	r8, r0
   12de0:	cmp	r8, r5
   12de4:	bgt	12e8c <table_remove_column@@Base+0xe4>
   12de8:	ldr	r5, [r4, #4]
   12dec:	ldr	r1, [r4, #8]
   12df0:	sub	r3, r5, #1
   12df4:	udiv	r5, r3, r1
   12df8:	str	r3, [r4, #4]
   12dfc:	mls	r5, r1, r5, r3
   12e00:	cmp	r5, #0
   12e04:	bne	12e3c <table_remove_column@@Base+0x94>
   12e08:	ldr	r0, [r4]
   12e0c:	ldr	r3, [r4, #12]
   12e10:	sub	r3, r3, r1
   12e14:	mov	r1, #12
   12e18:	mul	r1, r1, r3
   12e1c:	str	r3, [r4, #12]
   12e20:	bl	11b50 <realloc@plt>
   12e24:	str	r0, [r4]
   12e28:	mov	r0, r4
   12e2c:	bl	13754 <table_get_row_length@@Base>
   12e30:	mov	r8, r0
   12e34:	cmp	r8, r5
   12e38:	bgt	12ed0 <table_remove_column@@Base+0x128>
   12e3c:	mov	r0, r4
   12e40:	mov	r3, #16
   12e44:	mov	r2, r6
   12e48:	mvn	r1, #0
   12e4c:	bl	12b60 <table_notify@@Base>
   12e50:	mov	r0, #0
   12e54:	pop	{r4, r5, r6, r7, r8, pc}
   12e58:	ldr	ip, [r4]
   12e5c:	mul	r0, r5, r1
   12e60:	add	r1, r1, #1
   12e64:	add	r2, r0, #12
   12e68:	add	r2, ip, r2
   12e6c:	add	lr, ip, r0
   12e70:	ldr	r3, [r2]
   12e74:	str	r3, [ip, r0]
   12e78:	ldr	r3, [r2, #4]
   12e7c:	str	r3, [lr, #4]
   12e80:	ldr	r3, [r2, #8]
   12e84:	str	r3, [lr, #8]
   12e88:	b	12dc8 <table_remove_column@@Base+0x20>
   12e8c:	mov	r2, r6
   12e90:	mov	r1, r5
   12e94:	mov	r0, r4
   12e98:	bl	14db4 <table_cell_destroy@@Base>
   12e9c:	mov	r1, r5
   12ea0:	mov	r0, r4
   12ea4:	bl	138f0 <table_get_row_ptr@@Base>
   12ea8:	mov	r3, r6
   12eac:	cmp	r7, r3
   12eb0:	addle	r5, r5, #1
   12eb4:	ble	12de0 <table_remove_column@@Base+0x38>
   12eb8:	ldr	r2, [r0]
   12ebc:	add	r1, r2, r3, lsl #2
   12ec0:	ldr	r1, [r1, #4]
   12ec4:	str	r1, [r2, r3, lsl #2]
   12ec8:	add	r3, r3, #1
   12ecc:	b	12eac <table_remove_column@@Base+0x104>
   12ed0:	mov	r1, r5
   12ed4:	mov	r0, r4
   12ed8:	bl	138f0 <table_get_row_ptr@@Base>
   12edc:	ldr	r1, [r4, #12]
   12ee0:	mov	r7, r0
   12ee4:	add	r5, r5, #1
   12ee8:	ldr	r0, [r0]
   12eec:	lsl	r1, r1, #2
   12ef0:	bl	11b50 <realloc@plt>
   12ef4:	str	r0, [r7]
   12ef8:	b	12e34 <table_remove_column@@Base+0x8c>

00012efc <table_get_column_name@@Base>:
   12efc:	mov	r3, #12
   12f00:	ldr	r2, [r0]
   12f04:	mul	r1, r3, r1
   12f08:	ldr	r0, [r2, r1]
   12f0c:	bx	lr

00012f10 <table_get_col_ptr@@Base>:
   12f10:	ldr	r3, [r0]
   12f14:	mov	r0, #12
   12f18:	mla	r0, r0, r1, r3
   12f1c:	bx	lr

00012f20 <table_get_column_compare_function@@Base>:
   12f20:	ldr	r2, [r0]
   12f24:	mov	r3, #12
   12f28:	mla	r1, r3, r1, r2
   12f2c:	ldr	r0, [r1, #8]
   12f30:	bx	lr

00012f34 <table_set_column_compare_function@@Base>:
   12f34:	ldr	r0, [r0]
   12f38:	mov	r3, #12
   12f3c:	mla	r1, r3, r1, r0
   12f40:	str	r2, [r1, #8]
   12f44:	bx	lr

00012f48 <table_compare_ptr@@Base>:
   12f48:	cmp	r0, r1
   12f4c:	bhi	12f5c <table_compare_ptr@@Base+0x14>
   12f50:	mvncc	r0, #0
   12f54:	movcs	r0, #0
   12f58:	bx	lr
   12f5c:	mov	r0, #1
   12f60:	bx	lr

00012f64 <table_compare_string@@Base>:
   12f64:	cmp	r0, #0
   12f68:	bne	12f7c <table_compare_string@@Base+0x18>
   12f6c:	adds	r0, r1, #0
   12f70:	movne	r0, #1
   12f74:	rsb	r0, r0, #0
   12f78:	bx	lr
   12f7c:	cmp	r1, #0
   12f80:	beq	12f88 <table_compare_string@@Base+0x24>
   12f84:	b	11b20 <strcmp@plt>
   12f88:	mov	r0, #1
   12f8c:	bx	lr

00012f90 <table_compare_bool@@Base>:
   12f90:	cmp	r0, #0
   12f94:	bne	12fa8 <table_compare_bool@@Base+0x18>
   12f98:	adds	r0, r1, #0
   12f9c:	movne	r0, #1
   12fa0:	rsb	r0, r0, #0
   12fa4:	bx	lr
   12fa8:	cmp	r1, #0
   12fac:	beq	12fcc <table_compare_bool@@Base+0x3c>
   12fb0:	ldrb	r2, [r0]
   12fb4:	ldrb	r3, [r1]
   12fb8:	cmp	r2, r3
   12fbc:	bhi	12fcc <table_compare_bool@@Base+0x3c>
   12fc0:	mvncc	r0, #0
   12fc4:	movcs	r0, #0
   12fc8:	bx	lr
   12fcc:	mov	r0, #1
   12fd0:	bx	lr

00012fd4 <table_compare_int32@@Base>:
   12fd4:	cmp	r0, #0
   12fd8:	bne	12fec <table_compare_int32@@Base+0x18>
   12fdc:	adds	r0, r1, #0
   12fe0:	movne	r0, #1
   12fe4:	rsb	r0, r0, #0
   12fe8:	bx	lr
   12fec:	cmp	r1, #0
   12ff0:	beq	13010 <table_compare_int32@@Base+0x3c>
   12ff4:	ldr	r2, [r0]
   12ff8:	ldr	r3, [r1]
   12ffc:	cmp	r2, r3
   13000:	bgt	13010 <table_compare_int32@@Base+0x3c>
   13004:	mvnlt	r0, #0
   13008:	movge	r0, #0
   1300c:	bx	lr
   13010:	mov	r0, #1
   13014:	bx	lr

00013018 <table_compare_uint32@@Base>:
   13018:	cmp	r0, #0
   1301c:	bne	13030 <table_compare_uint32@@Base+0x18>
   13020:	adds	r0, r1, #0
   13024:	movne	r0, #1
   13028:	rsb	r0, r0, #0
   1302c:	bx	lr
   13030:	cmp	r1, #0
   13034:	beq	13054 <table_compare_uint32@@Base+0x3c>
   13038:	ldr	r2, [r0]
   1303c:	ldr	r3, [r1]
   13040:	cmp	r2, r3
   13044:	bhi	13054 <table_compare_uint32@@Base+0x3c>
   13048:	mvncc	r0, #0
   1304c:	movcs	r0, #0
   13050:	bx	lr
   13054:	mov	r0, #1
   13058:	bx	lr

0001305c <table_compare_int8@@Base>:
   1305c:	cmp	r0, #0
   13060:	bne	13074 <table_compare_int8@@Base+0x18>
   13064:	adds	r0, r1, #0
   13068:	movne	r0, #1
   1306c:	rsb	r0, r0, #0
   13070:	bx	lr
   13074:	cmp	r1, #0
   13078:	beq	13098 <table_compare_int8@@Base+0x3c>
   1307c:	ldrsb	r2, [r0]
   13080:	ldrsb	r3, [r1]
   13084:	cmp	r2, r3
   13088:	bgt	13098 <table_compare_int8@@Base+0x3c>
   1308c:	mvnlt	r0, #0
   13090:	movge	r0, #0
   13094:	bx	lr
   13098:	mov	r0, #1
   1309c:	bx	lr

000130a0 <table_compare_char@@Base>:
   130a0:	cmp	r0, #0
   130a4:	bne	130b8 <table_compare_char@@Base+0x18>
   130a8:	adds	r0, r1, #0
   130ac:	movne	r0, #1
   130b0:	rsb	r0, r0, #0
   130b4:	bx	lr
   130b8:	cmp	r1, #0
   130bc:	beq	130dc <table_compare_char@@Base+0x3c>
   130c0:	ldrb	r2, [r0]
   130c4:	ldrb	r3, [r1]
   130c8:	cmp	r2, r3
   130cc:	bhi	130dc <table_compare_char@@Base+0x3c>
   130d0:	mvncc	r0, #0
   130d4:	movcs	r0, #0
   130d8:	bx	lr
   130dc:	mov	r0, #1
   130e0:	bx	lr

000130e4 <table_compare_short@@Base>:
   130e4:	cmp	r0, #0
   130e8:	bne	130fc <table_compare_short@@Base+0x18>
   130ec:	adds	r0, r1, #0
   130f0:	movne	r0, #1
   130f4:	rsb	r0, r0, #0
   130f8:	bx	lr
   130fc:	cmp	r1, #0
   13100:	beq	13120 <table_compare_short@@Base+0x3c>
   13104:	ldrsh	r2, [r0]
   13108:	ldrsh	r3, [r1]
   1310c:	cmp	r2, r3
   13110:	bgt	13120 <table_compare_short@@Base+0x3c>
   13114:	mvnlt	r0, #0
   13118:	movge	r0, #0
   1311c:	bx	lr
   13120:	mov	r0, #1
   13124:	bx	lr

00013128 <table_compare_ushort@@Base>:
   13128:	cmp	r0, #0
   1312c:	bne	13140 <table_compare_ushort@@Base+0x18>
   13130:	adds	r0, r1, #0
   13134:	movne	r0, #1
   13138:	rsb	r0, r0, #0
   1313c:	bx	lr
   13140:	cmp	r1, #0
   13144:	beq	13164 <table_compare_ushort@@Base+0x3c>
   13148:	ldrh	r2, [r0]
   1314c:	ldrh	r3, [r1]
   13150:	cmp	r2, r3
   13154:	bhi	13164 <table_compare_ushort@@Base+0x3c>
   13158:	mvncc	r0, #0
   1315c:	movcs	r0, #0
   13160:	bx	lr
   13164:	mov	r0, #1
   13168:	bx	lr

0001316c <table_compare_llong@@Base>:
   1316c:	cmp	r0, #0
   13170:	bne	13184 <table_compare_llong@@Base+0x18>
   13174:	adds	r0, r1, #0
   13178:	movne	r0, #1
   1317c:	rsb	r0, r0, #0
   13180:	bx	lr
   13184:	cmp	r1, #0
   13188:	beq	131b8 <table_compare_llong@@Base+0x4c>
   1318c:	push	{r4, r5, lr}
   13190:	ldrd	r2, [r1]
   13194:	ldrd	r4, [r0]
   13198:	cmp	r2, r4
   1319c:	sbcs	r1, r3, r5
   131a0:	blt	131c0 <table_compare_llong@@Base+0x54>
   131a4:	cmp	r4, r2
   131a8:	sbcs	r3, r5, r3
   131ac:	mvnlt	r0, #0
   131b0:	movge	r0, #0
   131b4:	pop	{r4, r5, pc}
   131b8:	mov	r0, #1
   131bc:	bx	lr
   131c0:	mov	r0, #1
   131c4:	pop	{r4, r5, pc}

000131c8 <table_compare_uint64@@Base>:
   131c8:	cmp	r0, #0
   131cc:	bne	131e0 <table_compare_uint64@@Base+0x18>
   131d0:	adds	r0, r1, #0
   131d4:	movne	r0, #1
   131d8:	rsb	r0, r0, #0
   131dc:	bx	lr
   131e0:	cmp	r1, #0
   131e4:	beq	1320c <table_compare_uint64@@Base+0x44>
   131e8:	push	{r4, r5, lr}
   131ec:	ldrd	r2, [r1]
   131f0:	ldrd	r4, [r0]
   131f4:	cmp	r5, r3
   131f8:	cmpeq	r4, r2
   131fc:	bhi	13214 <table_compare_uint64@@Base+0x4c>
   13200:	mvncc	r0, #0
   13204:	movcs	r0, #0
   13208:	pop	{r4, r5, pc}
   1320c:	mov	r0, #1
   13210:	bx	lr
   13214:	mov	r0, #1
   13218:	pop	{r4, r5, pc}

0001321c <table_compare_long@@Base>:
   1321c:	cmp	r0, #0
   13220:	bne	13234 <table_compare_long@@Base+0x18>
   13224:	adds	r0, r1, #0
   13228:	movne	r0, #1
   1322c:	rsb	r0, r0, #0
   13230:	bx	lr
   13234:	cmp	r1, #0
   13238:	beq	13258 <table_compare_long@@Base+0x3c>
   1323c:	ldr	r2, [r0]
   13240:	ldr	r3, [r1]
   13244:	cmp	r2, r3
   13248:	bgt	13258 <table_compare_long@@Base+0x3c>
   1324c:	mvnlt	r0, #0
   13250:	movge	r0, #0
   13254:	bx	lr
   13258:	mov	r0, #1
   1325c:	bx	lr

00013260 <table_compare_ullong@@Base>:
   13260:	cmp	r0, #0
   13264:	bne	13278 <table_compare_ullong@@Base+0x18>
   13268:	adds	r0, r1, #0
   1326c:	movne	r0, #1
   13270:	rsb	r0, r0, #0
   13274:	bx	lr
   13278:	cmp	r1, #0
   1327c:	beq	1329c <table_compare_ullong@@Base+0x3c>
   13280:	ldr	r2, [r0]
   13284:	ldr	r3, [r1]
   13288:	cmp	r2, r3
   1328c:	bhi	1329c <table_compare_ullong@@Base+0x3c>
   13290:	mvncc	r0, #0
   13294:	movcs	r0, #0
   13298:	bx	lr
   1329c:	mov	r0, #1
   132a0:	bx	lr

000132a4 <table_compare_float@@Base>:
   132a4:	cmp	r0, #0
   132a8:	bne	132bc <table_compare_float@@Base+0x18>
   132ac:	adds	r0, r1, #0
   132b0:	movne	r0, #1
   132b4:	rsb	r0, r0, #0
   132b8:	bx	lr
   132bc:	cmp	r1, #0
   132c0:	beq	132e4 <table_compare_float@@Base+0x40>
   132c4:	vldr	s14, [r0]
   132c8:	vldr	s15, [r1]
   132cc:	vcmpe.f32	s14, s15
   132d0:	vmrs	APSR_nzcv, fpscr
   132d4:	bgt	132e4 <table_compare_float@@Base+0x40>
   132d8:	mvnmi	r0, #0
   132dc:	movpl	r0, #0
   132e0:	bx	lr
   132e4:	mov	r0, #1
   132e8:	bx	lr

000132ec <table_compare_double@@Base>:
   132ec:	cmp	r0, #0
   132f0:	bne	13304 <table_compare_double@@Base+0x18>
   132f4:	adds	r0, r1, #0
   132f8:	movne	r0, #1
   132fc:	rsb	r0, r0, #0
   13300:	bx	lr
   13304:	cmp	r1, #0
   13308:	beq	1332c <table_compare_double@@Base+0x40>
   1330c:	vldr	d6, [r0]
   13310:	vldr	d7, [r1]
   13314:	vcmpe.f64	d6, d7
   13318:	vmrs	APSR_nzcv, fpscr
   1331c:	bgt	1332c <table_compare_double@@Base+0x40>
   13320:	mvnmi	r0, #0
   13324:	movpl	r0, #0
   13328:	bx	lr
   1332c:	mov	r0, #1
   13330:	bx	lr

00013334 <table_compare_ldouble@@Base>:
   13334:	cmp	r0, #0
   13338:	bne	1334c <table_compare_ldouble@@Base+0x18>
   1333c:	adds	r0, r1, #0
   13340:	movne	r0, #1
   13344:	rsb	r0, r0, #0
   13348:	bx	lr
   1334c:	cmp	r1, #0
   13350:	beq	13374 <table_compare_ldouble@@Base+0x40>
   13354:	vldr	d6, [r0]
   13358:	vldr	d7, [r1]
   1335c:	vcmpe.f64	d6, d7
   13360:	vmrs	APSR_nzcv, fpscr
   13364:	bgt	13374 <table_compare_ldouble@@Base+0x40>
   13368:	mvnmi	r0, #0
   1336c:	movpl	r0, #0
   13370:	bx	lr
   13374:	mov	r0, #1
   13378:	bx	lr

0001337c <table_compare_uchar@@Base>:
   1337c:	cmp	r0, #0
   13380:	bne	13394 <table_compare_uchar@@Base+0x18>
   13384:	adds	r0, r1, #0
   13388:	movne	r0, #1
   1338c:	rsb	r0, r0, #0
   13390:	bx	lr
   13394:	cmp	r1, #0
   13398:	beq	133b8 <table_compare_uchar@@Base+0x3c>
   1339c:	ldrb	r2, [r0]
   133a0:	ldrb	r3, [r1]
   133a4:	cmp	r2, r3
   133a8:	bhi	133b8 <table_compare_uchar@@Base+0x3c>
   133ac:	mvncc	r0, #0
   133b0:	movcs	r0, #0
   133b4:	bx	lr
   133b8:	mov	r0, #1
   133bc:	bx	lr

000133c0 <table_compare_int@@Base>:
   133c0:	cmp	r0, #0
   133c4:	bne	133d8 <table_compare_int@@Base+0x18>
   133c8:	adds	r0, r1, #0
   133cc:	movne	r0, #1
   133d0:	rsb	r0, r0, #0
   133d4:	bx	lr
   133d8:	cmp	r1, #0
   133dc:	beq	133fc <table_compare_int@@Base+0x3c>
   133e0:	ldr	r2, [r0]
   133e4:	ldr	r3, [r1]
   133e8:	cmp	r2, r3
   133ec:	bgt	133fc <table_compare_int@@Base+0x3c>
   133f0:	mvnlt	r0, #0
   133f4:	movge	r0, #0
   133f8:	bx	lr
   133fc:	mov	r0, #1
   13400:	bx	lr

00013404 <table_compare_uint@@Base>:
   13404:	cmp	r0, #0
   13408:	bne	1341c <table_compare_uint@@Base+0x18>
   1340c:	adds	r0, r1, #0
   13410:	movne	r0, #1
   13414:	rsb	r0, r0, #0
   13418:	bx	lr
   1341c:	cmp	r1, #0
   13420:	beq	13440 <table_compare_uint@@Base+0x3c>
   13424:	ldr	r2, [r0]
   13428:	ldr	r3, [r1]
   1342c:	cmp	r2, r3
   13430:	bhi	13440 <table_compare_uint@@Base+0x3c>
   13434:	mvncc	r0, #0
   13438:	movcs	r0, #0
   1343c:	bx	lr
   13440:	mov	r0, #1
   13444:	bx	lr

00013448 <table_compare_uint8@@Base>:
   13448:	cmp	r0, #0
   1344c:	bne	13460 <table_compare_uint8@@Base+0x18>
   13450:	adds	r0, r1, #0
   13454:	movne	r0, #1
   13458:	rsb	r0, r0, #0
   1345c:	bx	lr
   13460:	cmp	r1, #0
   13464:	beq	13484 <table_compare_uint8@@Base+0x3c>
   13468:	ldrb	r2, [r0]
   1346c:	ldrb	r3, [r1]
   13470:	cmp	r2, r3
   13474:	bhi	13484 <table_compare_uint8@@Base+0x3c>
   13478:	mvncc	r0, #0
   1347c:	movcs	r0, #0
   13480:	bx	lr
   13484:	mov	r0, #1
   13488:	bx	lr

0001348c <table_compare_int16@@Base>:
   1348c:	cmp	r0, #0
   13490:	bne	134a4 <table_compare_int16@@Base+0x18>
   13494:	adds	r0, r1, #0
   13498:	movne	r0, #1
   1349c:	rsb	r0, r0, #0
   134a0:	bx	lr
   134a4:	cmp	r1, #0
   134a8:	beq	134c8 <table_compare_int16@@Base+0x3c>
   134ac:	ldrsh	r2, [r0]
   134b0:	ldrsh	r3, [r1]
   134b4:	cmp	r2, r3
   134b8:	bgt	134c8 <table_compare_int16@@Base+0x3c>
   134bc:	mvnlt	r0, #0
   134c0:	movge	r0, #0
   134c4:	bx	lr
   134c8:	mov	r0, #1
   134cc:	bx	lr

000134d0 <table_compare_uint16@@Base>:
   134d0:	cmp	r0, #0
   134d4:	bne	134e8 <table_compare_uint16@@Base+0x18>
   134d8:	adds	r0, r1, #0
   134dc:	movne	r0, #1
   134e0:	rsb	r0, r0, #0
   134e4:	bx	lr
   134e8:	cmp	r1, #0
   134ec:	beq	1350c <table_compare_uint16@@Base+0x3c>
   134f0:	ldrh	r2, [r0]
   134f4:	ldrh	r3, [r1]
   134f8:	cmp	r2, r3
   134fc:	bhi	1350c <table_compare_uint16@@Base+0x3c>
   13500:	mvncc	r0, #0
   13504:	movcs	r0, #0
   13508:	bx	lr
   1350c:	mov	r0, #1
   13510:	bx	lr

00013514 <table_compare_ulong@@Base>:
   13514:	cmp	r0, #0
   13518:	bne	1352c <table_compare_ulong@@Base+0x18>
   1351c:	adds	r0, r1, #0
   13520:	movne	r0, #1
   13524:	rsb	r0, r0, #0
   13528:	bx	lr
   1352c:	cmp	r1, #0
   13530:	beq	13550 <table_compare_ulong@@Base+0x3c>
   13534:	ldr	r2, [r0]
   13538:	ldr	r3, [r1]
   1353c:	cmp	r2, r3
   13540:	bhi	13550 <table_compare_ulong@@Base+0x3c>
   13544:	mvncc	r0, #0
   13548:	movcs	r0, #0
   1354c:	bx	lr
   13550:	mov	r0, #1
   13554:	bx	lr

00013558 <table_compare_int64@@Base>:
   13558:	cmp	r0, #0
   1355c:	bne	13570 <table_compare_int64@@Base+0x18>
   13560:	adds	r0, r1, #0
   13564:	movne	r0, #1
   13568:	rsb	r0, r0, #0
   1356c:	bx	lr
   13570:	cmp	r1, #0
   13574:	beq	135a4 <table_compare_int64@@Base+0x4c>
   13578:	push	{r4, r5, lr}
   1357c:	ldrd	r2, [r1]
   13580:	ldrd	r4, [r0]
   13584:	cmp	r2, r4
   13588:	sbcs	r1, r3, r5
   1358c:	blt	135ac <table_compare_int64@@Base+0x54>
   13590:	cmp	r4, r2
   13594:	sbcs	r3, r5, r3
   13598:	mvnlt	r0, #0
   1359c:	movge	r0, #0
   135a0:	pop	{r4, r5, pc}
   135a4:	mov	r0, #1
   135a8:	bx	lr
   135ac:	mov	r0, #1
   135b0:	pop	{r4, r5, pc}

000135b4 <table_get_default_compare_function_for_data_type@@Base>:
   135b4:	cmp	r0, #23
   135b8:	ldrls	r3, [pc, #8]	; 135c8 <table_get_default_compare_function_for_data_type@@Base+0x14>
   135bc:	ldrls	r0, [r3, r0, lsl #2]
   135c0:	movhi	r0, #0
   135c4:	bx	lr
   135c8:	andeq	r4, r1, ip, asr #30

000135cc <table_get@@Base>:
   135cc:	push	{r4, lr}
   135d0:	bl	14d88 <table_get_cell_ptr@@Base>
   135d4:	ldr	r0, [r0]
   135d8:	pop	{r4, pc}

000135dc <table_get_bool@@Base>:
   135dc:	push	{r4, lr}
   135e0:	bl	135cc <table_get@@Base>
   135e4:	ldrb	r0, [r0]
   135e8:	pop	{r4, pc}

000135ec <table_get_int@@Base>:
   135ec:	push	{r4, lr}
   135f0:	bl	135cc <table_get@@Base>
   135f4:	ldr	r0, [r0]
   135f8:	pop	{r4, pc}

000135fc <table_get_uint@@Base>:
   135fc:	push	{r4, lr}
   13600:	bl	135cc <table_get@@Base>
   13604:	ldr	r0, [r0]
   13608:	pop	{r4, pc}

0001360c <table_get_int8@@Base>:
   1360c:	push	{r4, lr}
   13610:	bl	135cc <table_get@@Base>
   13614:	ldrsb	r0, [r0]
   13618:	pop	{r4, pc}

0001361c <table_get_uint8@@Base>:
   1361c:	push	{r4, lr}
   13620:	bl	135cc <table_get@@Base>
   13624:	ldrb	r0, [r0]
   13628:	pop	{r4, pc}

0001362c <table_get_int16@@Base>:
   1362c:	push	{r4, lr}
   13630:	bl	135cc <table_get@@Base>
   13634:	ldrsh	r0, [r0]
   13638:	pop	{r4, pc}

0001363c <table_get_uint16@@Base>:
   1363c:	push	{r4, lr}
   13640:	bl	135cc <table_get@@Base>
   13644:	ldrh	r0, [r0]
   13648:	pop	{r4, pc}

0001364c <table_get_int32@@Base>:
   1364c:	b	135ec <table_get_int@@Base>

00013650 <table_get_uint32@@Base>:
   13650:	b	135fc <table_get_uint@@Base>

00013654 <table_get_int64@@Base>:
   13654:	push	{r4, lr}
   13658:	bl	135cc <table_get@@Base>
   1365c:	ldrd	r0, [r0]
   13660:	pop	{r4, pc}

00013664 <table_get_uint64@@Base>:
   13664:	push	{r4, lr}
   13668:	bl	135cc <table_get@@Base>
   1366c:	ldrd	r0, [r0]
   13670:	pop	{r4, pc}

00013674 <table_get_short@@Base>:
   13674:	b	1362c <table_get_int16@@Base>

00013678 <table_get_ushort@@Base>:
   13678:	b	1363c <table_get_uint16@@Base>

0001367c <table_get_long@@Base>:
   1367c:	push	{r4, lr}
   13680:	bl	135cc <table_get@@Base>
   13684:	ldr	r0, [r0]
   13688:	pop	{r4, pc}

0001368c <table_get_ulong@@Base>:
   1368c:	push	{r4, lr}
   13690:	bl	135cc <table_get@@Base>
   13694:	ldr	r0, [r0]
   13698:	pop	{r4, pc}

0001369c <table_get_llong@@Base>:
   1369c:	b	13654 <table_get_int64@@Base>

000136a0 <table_get_ullong@@Base>:
   136a0:	b	13664 <table_get_uint64@@Base>

000136a4 <table_get_float@@Base>:
   136a4:	push	{r4, lr}
   136a8:	bl	135cc <table_get@@Base>
   136ac:	vldr	s0, [r0]
   136b0:	pop	{r4, pc}

000136b4 <table_get_double@@Base>:
   136b4:	push	{r4, lr}
   136b8:	bl	135cc <table_get@@Base>
   136bc:	vldr	d0, [r0]
   136c0:	pop	{r4, pc}

000136c4 <table_get_ldouble@@Base>:
   136c4:	push	{r4, lr}
   136c8:	bl	135cc <table_get@@Base>
   136cc:	vldr	d0, [r0]
   136d0:	pop	{r4, pc}

000136d4 <table_get_char@@Base>:
   136d4:	b	1361c <table_get_uint8@@Base>

000136d8 <table_get_uchar@@Base>:
   136d8:	b	1361c <table_get_uint8@@Base>

000136dc <table_get_string@@Base>:
   136dc:	b	135cc <table_get@@Base>

000136e0 <table_get_ptr@@Base>:
   136e0:	b	135cc <table_get@@Base>

000136e4 <table_row_init@@Base>:
   136e4:	push	{r4, r5, r6, lr}
   136e8:	mov	r5, r1
   136ec:	ldr	r4, [r0, #16]
   136f0:	ldr	r0, [r0, #12]
   136f4:	lsl	r0, r0, #2
   136f8:	bl	11b68 <malloc@plt>
   136fc:	str	r0, [r4, r5, lsl #2]
   13700:	pop	{r4, r5, r6, pc}

00013704 <table_row_destroy@@Base>:
   13704:	push	{r4, r5, r6, r7, r8, lr}
   13708:	mov	r6, r0
   1370c:	mov	r5, r1
   13710:	mov	r4, #0
   13714:	bl	12c38 <table_get_column_length@@Base>
   13718:	ldr	r7, [r6, #16]
   1371c:	mov	r8, r0
   13720:	cmp	r4, r8
   13724:	blt	1373c <table_row_destroy@@Base+0x38>
   13728:	ldr	r0, [r7, r5, lsl #2]
   1372c:	cmp	r0, #0
   13730:	popeq	{r4, r5, r6, r7, r8, pc}
   13734:	pop	{r4, r5, r6, r7, r8, lr}
   13738:	b	11b38 <free@plt>
   1373c:	mov	r2, r4
   13740:	mov	r1, r5
   13744:	mov	r0, r6
   13748:	add	r4, r4, #1
   1374c:	bl	14db4 <table_cell_destroy@@Base>
   13750:	b	13720 <table_row_destroy@@Base+0x1c>

00013754 <table_get_row_length@@Base>:
   13754:	ldr	r0, [r0, #20]
   13758:	bx	lr

0001375c <table_add_row@@Base>:
   1375c:	ldr	r2, [r0, #20]
   13760:	push	{r4, r5, r6, r7, r8, lr}
   13764:	mov	r4, r0
   13768:	ldr	r1, [r0, #24]
   1376c:	udiv	r3, r2, r1
   13770:	mls	r3, r1, r3, r2
   13774:	cmp	r3, #0
   13778:	bne	13798 <table_add_row@@Base+0x3c>
   1377c:	ldr	r3, [r4, #28]
   13780:	ldr	r0, [r0, #16]
   13784:	add	r1, r1, r3
   13788:	str	r1, [r4, #28]
   1378c:	lsl	r1, r1, #2
   13790:	bl	11b50 <realloc@plt>
   13794:	str	r0, [r4, #16]
   13798:	ldr	r6, [r4, #20]
   1379c:	mov	r0, r4
   137a0:	mov	r5, #0
   137a4:	bl	12c38 <table_get_column_length@@Base>
   137a8:	mov	r7, r0
   137ac:	mov	r0, r4
   137b0:	mov	r1, r6
   137b4:	bl	136e4 <table_row_init@@Base>
   137b8:	cmp	r7, r5
   137bc:	bgt	137e4 <table_add_row@@Base+0x88>
   137c0:	mov	r0, r4
   137c4:	mov	r3, #2
   137c8:	ldr	r1, [r4, #20]
   137cc:	mvn	r2, #0
   137d0:	bl	12b60 <table_notify@@Base>
   137d4:	ldr	r0, [r4, #20]
   137d8:	add	r3, r0, #1
   137dc:	str	r3, [r4, #20]
   137e0:	pop	{r4, r5, r6, r7, r8, pc}
   137e4:	mov	r2, r5
   137e8:	mov	r1, r6
   137ec:	mov	r0, r4
   137f0:	add	r5, r5, #1
   137f4:	bl	14da0 <table_cell_init@@Base>
   137f8:	b	137b8 <table_add_row@@Base+0x5c>

000137fc <table_remove_row@@Base>:
   137fc:	push	{r4, r5, r6, r7, r8, lr}
   13800:	mov	r4, r0
   13804:	mov	r6, r1
   13808:	mov	r5, #0
   1380c:	ldr	r7, [r0, #20]
   13810:	bl	12c38 <table_get_column_length@@Base>
   13814:	mov	r8, r0
   13818:	cmp	r8, r5
   1381c:	bgt	1389c <table_remove_row@@Base+0xa0>
   13820:	ldr	r3, [r4, #16]
   13824:	ldr	r0, [r3, r6, lsl #2]
   13828:	cmp	r0, #0
   1382c:	beq	13834 <table_remove_row@@Base+0x38>
   13830:	bl	11b38 <free@plt>
   13834:	mov	r3, r6
   13838:	sub	r7, r7, #1
   1383c:	cmp	r3, r7
   13840:	blt	138d8 <table_remove_row@@Base+0xdc>
   13844:	ldr	r3, [r4, #20]
   13848:	ldr	r2, [r4, #24]
   1384c:	sub	r3, r3, #1
   13850:	udiv	r1, r3, r2
   13854:	str	r3, [r4, #20]
   13858:	mls	r3, r2, r1, r3
   1385c:	cmp	r3, #0
   13860:	bne	13880 <table_remove_row@@Base+0x84>
   13864:	ldr	r0, [r4, #16]
   13868:	ldr	r1, [r4, #28]
   1386c:	sub	r1, r1, r2
   13870:	str	r1, [r4, #28]
   13874:	lsl	r1, r1, #2
   13878:	bl	11b50 <realloc@plt>
   1387c:	str	r0, [r4, #16]
   13880:	mov	r0, r4
   13884:	mov	r3, #4
   13888:	mvn	r2, #0
   1388c:	mov	r1, r6
   13890:	bl	12b60 <table_notify@@Base>
   13894:	mov	r0, #0
   13898:	pop	{r4, r5, r6, r7, r8, pc}
   1389c:	mov	r1, r5
   138a0:	mov	r0, r4
   138a4:	bl	12c90 <table_get_column_data_type@@Base>
   138a8:	cmp	r0, #23
   138ac:	beq	138d0 <table_remove_row@@Base+0xd4>
   138b0:	mov	r2, r5
   138b4:	mov	r1, r6
   138b8:	mov	r0, r4
   138bc:	bl	14d88 <table_get_cell_ptr@@Base>
   138c0:	ldr	r0, [r0]
   138c4:	cmp	r0, #0
   138c8:	beq	138d0 <table_remove_row@@Base+0xd4>
   138cc:	bl	11b38 <free@plt>
   138d0:	add	r5, r5, #1
   138d4:	b	13818 <table_remove_row@@Base+0x1c>
   138d8:	ldr	r2, [r4, #16]
   138dc:	add	r1, r2, r3, lsl #2
   138e0:	ldr	r1, [r1, #4]
   138e4:	str	r1, [r2, r3, lsl #2]
   138e8:	add	r3, r3, #1
   138ec:	b	1383c <table_remove_row@@Base+0x40>

000138f0 <table_get_row_ptr@@Base>:
   138f0:	ldr	r0, [r0, #16]
   138f4:	add	r0, r0, r1, lsl #2
   138f8:	bx	lr

000138fc <table_set_row_ptr@@Base>:
   138fc:	ldr	r2, [r2]
   13900:	ldr	r3, [r0, #16]
   13904:	str	r2, [r3, r1, lsl #2]
   13908:	bx	lr

0001390c <table_set@@Base>:
   1390c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13910:	mov	r6, r0
   13914:	mov	r8, r1
   13918:	mov	r7, r2
   1391c:	mov	r5, r3
   13920:	ldr	r9, [sp, #32]
   13924:	bl	14d88 <table_get_cell_ptr@@Base>
   13928:	mov	r4, r0
   1392c:	mov	r1, r7
   13930:	mov	r0, r6
   13934:	bl	12f10 <table_get_col_ptr@@Base>
   13938:	cmp	r9, #23
   1393c:	ldrls	pc, [pc, r9, lsl #2]
   13940:	b	13a90 <table_set@@Base+0x184>
   13944:	andeq	r3, r1, r0, ror #19
   13948:	andeq	r3, r1, r4, lsr sl
   1394c:	andeq	r3, r1, r0, asr #20
   13950:	andeq	r3, r1, ip, asr #20
   13954:	andeq	r3, r1, r8, asr sl
   13958:	muleq	r1, r8, sl
   1395c:	andeq	r3, r1, r4, lsr #21
   13960:			; <UNDEFINED> instruction: 0x00013ab0
   13964:			; <UNDEFINED> instruction: 0x00013abc
   13968:	strdeq	r3, [r1], -ip
   1396c:	andeq	r3, r1, ip, lsl fp
   13970:	andeq	r3, r1, r8, lsr #22
   13974:	andeq	r3, r1, r4, lsr fp
   13978:	andeq	r3, r1, r0, asr #22
   1397c:	andeq	r3, r1, ip, asr #22
   13980:	andeq	r3, r1, r8, asr fp
   13984:	andeq	r3, r1, r4, ror #22
   13988:	andeq	r3, r1, r0, ror fp
   1398c:	andeq	r3, r1, ip, ror fp
   13990:	andeq	r3, r1, r0, asr #23
   13994:	andeq	r3, r1, ip, asr #23
   13998:	andeq	r3, r1, r8, lsl #23
   1399c:	andeq	r3, r1, r4, lsr #19
   139a0:	ldrdeq	r3, [r1], -r8
   139a4:	ldr	r3, [r0, #4]
   139a8:	cmp	r3, #22
   139ac:	bne	13a90 <table_set@@Base+0x184>
   139b0:	ldr	r3, [r4]
   139b4:	cmp	r3, #0
   139b8:	bne	139c8 <table_set@@Base+0xbc>
   139bc:	mov	r0, #1
   139c0:	bl	11b68 <malloc@plt>
   139c4:	str	r0, [r4]
   139c8:	ldr	r3, [r4]
   139cc:	cmp	r3, #0
   139d0:	ldrbne	r2, [r5]
   139d4:	strbne	r2, [r3]
   139d8:	bne	13a18 <table_set@@Base+0x10c>
   139dc:	b	13a90 <table_set@@Base+0x184>
   139e0:	ldr	r3, [r0, #4]
   139e4:	cmp	r3, #0
   139e8:	bne	13a90 <table_set@@Base+0x184>
   139ec:	ldr	r3, [r4]
   139f0:	cmp	r3, #0
   139f4:	bne	13a04 <table_set@@Base+0xf8>
   139f8:	mov	r0, #4
   139fc:	bl	11b68 <malloc@plt>
   13a00:	str	r0, [r4]
   13a04:	ldr	r3, [r4]
   13a08:	cmp	r3, #0
   13a0c:	ldrne	r2, [r5]
   13a10:	strne	r2, [r3]
   13a14:	beq	13a90 <table_set@@Base+0x184>
   13a18:	mov	r0, r6
   13a1c:	mov	r3, #1
   13a20:	mov	r2, r7
   13a24:	mov	r1, r8
   13a28:	bl	12b60 <table_notify@@Base>
   13a2c:	mov	r0, #0
   13a30:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13a34:	ldr	r3, [r0, #4]
   13a38:	cmp	r3, #1
   13a3c:	b	139e8 <table_set@@Base+0xdc>
   13a40:	ldr	r3, [r0, #4]
   13a44:	cmp	r3, #2
   13a48:	b	139ac <table_set@@Base+0xa0>
   13a4c:	ldr	r3, [r0, #4]
   13a50:	cmp	r3, #3
   13a54:	b	139ac <table_set@@Base+0xa0>
   13a58:	ldr	r3, [r0, #4]
   13a5c:	cmp	r3, #4
   13a60:	bne	13a90 <table_set@@Base+0x184>
   13a64:	ldr	r3, [r4]
   13a68:	cmp	r3, #0
   13a6c:	bne	13a7c <table_set@@Base+0x170>
   13a70:	mov	r0, #2
   13a74:	bl	11b68 <malloc@plt>
   13a78:	str	r0, [r4]
   13a7c:	ldr	r3, [r4]
   13a80:	cmp	r3, #0
   13a84:	ldrhne	r2, [r5]
   13a88:	strhne	r2, [r3]
   13a8c:	bne	13a18 <table_set@@Base+0x10c>
   13a90:	mvn	r0, #0
   13a94:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13a98:	ldr	r3, [r0, #4]
   13a9c:	cmp	r3, #5
   13aa0:	b	13a60 <table_set@@Base+0x154>
   13aa4:	ldr	r3, [r0, #4]
   13aa8:	cmp	r3, #6
   13aac:	b	139e8 <table_set@@Base+0xdc>
   13ab0:	ldr	r3, [r0, #4]
   13ab4:	cmp	r3, #7
   13ab8:	b	139e8 <table_set@@Base+0xdc>
   13abc:	ldr	r0, [r0, #4]
   13ac0:	cmp	r0, #8
   13ac4:	bne	13a90 <table_set@@Base+0x184>
   13ac8:	ldr	r3, [r4]
   13acc:	cmp	r3, #0
   13ad0:	bne	13adc <table_set@@Base+0x1d0>
   13ad4:	bl	11b68 <malloc@plt>
   13ad8:	str	r0, [r4]
   13adc:	ldr	r3, [r4]
   13ae0:	cmp	r3, #0
   13ae4:	beq	13a90 <table_set@@Base+0x184>
   13ae8:	ldr	r2, [r5]
   13aec:	str	r2, [r3]
   13af0:	ldr	r2, [r5, #4]
   13af4:	str	r2, [r3, #4]
   13af8:	b	13a18 <table_set@@Base+0x10c>
   13afc:	ldr	r3, [r0, #4]
   13b00:	cmp	r3, #9
   13b04:	bne	13a90 <table_set@@Base+0x184>
   13b08:	ldr	r3, [r4]
   13b0c:	cmp	r3, #0
   13b10:	bne	13adc <table_set@@Base+0x1d0>
   13b14:	mov	r0, #8
   13b18:	b	13ad4 <table_set@@Base+0x1c8>
   13b1c:	ldr	r3, [r0, #4]
   13b20:	cmp	r3, #10
   13b24:	b	13a60 <table_set@@Base+0x154>
   13b28:	ldr	r3, [r0, #4]
   13b2c:	cmp	r3, #11
   13b30:	b	13a60 <table_set@@Base+0x154>
   13b34:	ldr	r3, [r0, #4]
   13b38:	cmp	r3, #12
   13b3c:	b	139e8 <table_set@@Base+0xdc>
   13b40:	ldr	r3, [r0, #4]
   13b44:	cmp	r3, #13
   13b48:	b	139e8 <table_set@@Base+0xdc>
   13b4c:	ldr	r3, [r0, #4]
   13b50:	cmp	r3, #14
   13b54:	b	13b04 <table_set@@Base+0x1f8>
   13b58:	ldr	r3, [r0, #4]
   13b5c:	cmp	r3, #15
   13b60:	b	13b04 <table_set@@Base+0x1f8>
   13b64:	ldr	r3, [r0, #4]
   13b68:	cmp	r3, #16
   13b6c:	b	139e8 <table_set@@Base+0xdc>
   13b70:	ldr	r3, [r0, #4]
   13b74:	cmp	r3, #17
   13b78:	b	13b04 <table_set@@Base+0x1f8>
   13b7c:	ldr	r3, [r0, #4]
   13b80:	cmp	r3, #18
   13b84:	b	13b04 <table_set@@Base+0x1f8>
   13b88:	ldr	r3, [r0, #4]
   13b8c:	cmp	r3, #21
   13b90:	bne	13a90 <table_set@@Base+0x184>
   13b94:	mov	r0, r5
   13b98:	bl	11b8c <strlen@plt>
   13b9c:	add	r1, r0, #1
   13ba0:	ldr	r0, [r4]
   13ba4:	bl	11b50 <realloc@plt>
   13ba8:	cmp	r0, #0
   13bac:	str	r0, [r4]
   13bb0:	beq	13a90 <table_set@@Base+0x184>
   13bb4:	mov	r1, r5
   13bb8:	bl	11b5c <strcpy@plt>
   13bbc:	b	13a18 <table_set@@Base+0x10c>
   13bc0:	ldr	r3, [r0, #4]
   13bc4:	cmp	r3, #19
   13bc8:	b	139ac <table_set@@Base+0xa0>
   13bcc:	ldr	r3, [r0, #4]
   13bd0:	cmp	r3, #20
   13bd4:	b	139ac <table_set@@Base+0xa0>
   13bd8:	ldr	r3, [r0, #4]
   13bdc:	cmp	r3, #23
   13be0:	bne	13a90 <table_set@@Base+0x184>
   13be4:	str	r5, [r4]
   13be8:	b	13a18 <table_set@@Base+0x10c>

00013bec <table_set_bool@@Base>:
   13bec:	push	{r0, r1, r2, r3, r4, lr}
   13bf0:	strb	r3, [sp, #15]
   13bf4:	mov	r3, #22
   13bf8:	str	r3, [sp]
   13bfc:	add	r3, sp, #15
   13c00:	bl	1390c <table_set@@Base>
   13c04:	add	sp, sp, #20
   13c08:	pop	{pc}		; (ldr pc, [sp], #4)

00013c0c <table_set_int@@Base>:
   13c0c:	push	{r0, r1, r2, r3, r4, lr}
   13c10:	str	r3, [sp, #12]
   13c14:	mov	r3, #0
   13c18:	str	r3, [sp]
   13c1c:	add	r3, sp, #12
   13c20:	bl	1390c <table_set@@Base>
   13c24:	add	sp, sp, #20
   13c28:	pop	{pc}		; (ldr pc, [sp], #4)

00013c2c <table_set_uint@@Base>:
   13c2c:	push	{r0, r1, r2, r3, r4, lr}
   13c30:	str	r3, [sp, #12]
   13c34:	mov	r3, #1
   13c38:	str	r3, [sp]
   13c3c:	add	r3, sp, #12
   13c40:	bl	1390c <table_set@@Base>
   13c44:	add	sp, sp, #20
   13c48:	pop	{pc}		; (ldr pc, [sp], #4)

00013c4c <table_set_int8@@Base>:
   13c4c:	push	{r0, r1, r2, r3, r4, lr}
   13c50:	strb	r3, [sp, #15]
   13c54:	mov	r3, #2
   13c58:	str	r3, [sp]
   13c5c:	add	r3, sp, #15
   13c60:	bl	1390c <table_set@@Base>
   13c64:	add	sp, sp, #20
   13c68:	pop	{pc}		; (ldr pc, [sp], #4)

00013c6c <table_set_uint8@@Base>:
   13c6c:	push	{r0, r1, r2, r3, r4, lr}
   13c70:	strb	r3, [sp, #15]
   13c74:	mov	r3, #3
   13c78:	str	r3, [sp]
   13c7c:	add	r3, sp, #15
   13c80:	bl	1390c <table_set@@Base>
   13c84:	add	sp, sp, #20
   13c88:	pop	{pc}		; (ldr pc, [sp], #4)

00013c8c <table_set_int16@@Base>:
   13c8c:	push	{r0, r1, r2, r3, r4, lr}
   13c90:	strh	r3, [sp, #14]
   13c94:	mov	r3, #4
   13c98:	str	r3, [sp]
   13c9c:	add	r3, sp, #14
   13ca0:	bl	1390c <table_set@@Base>
   13ca4:	add	sp, sp, #20
   13ca8:	pop	{pc}		; (ldr pc, [sp], #4)

00013cac <table_set_uint16@@Base>:
   13cac:	push	{r0, r1, r2, r3, r4, lr}
   13cb0:	strh	r3, [sp, #14]
   13cb4:	mov	r3, #5
   13cb8:	str	r3, [sp]
   13cbc:	add	r3, sp, #14
   13cc0:	bl	1390c <table_set@@Base>
   13cc4:	add	sp, sp, #20
   13cc8:	pop	{pc}		; (ldr pc, [sp], #4)

00013ccc <table_set_int32@@Base>:
   13ccc:	push	{r0, r1, r2, r3, r4, lr}
   13cd0:	str	r3, [sp, #12]
   13cd4:	mov	r3, #6
   13cd8:	str	r3, [sp]
   13cdc:	add	r3, sp, #12
   13ce0:	bl	1390c <table_set@@Base>
   13ce4:	add	sp, sp, #20
   13ce8:	pop	{pc}		; (ldr pc, [sp], #4)

00013cec <table_set_uint32@@Base>:
   13cec:	push	{r0, r1, r2, r3, r4, lr}
   13cf0:	str	r3, [sp, #12]
   13cf4:	mov	r3, #7
   13cf8:	str	r3, [sp]
   13cfc:	add	r3, sp, #12
   13d00:	bl	1390c <table_set@@Base>
   13d04:	add	sp, sp, #20
   13d08:	pop	{pc}		; (ldr pc, [sp], #4)

00013d0c <table_set_int64@@Base>:
   13d0c:	mov	r3, #8
   13d10:	push	{r0, r1, r2, lr}
   13d14:	str	r3, [sp]
   13d18:	add	r3, sp, #16
   13d1c:	bl	1390c <table_set@@Base>
   13d20:	add	sp, sp, #12
   13d24:	pop	{pc}		; (ldr pc, [sp], #4)

00013d28 <table_set_uint64@@Base>:
   13d28:	mov	r3, #9
   13d2c:	push	{r0, r1, r2, lr}
   13d30:	str	r3, [sp]
   13d34:	add	r3, sp, #16
   13d38:	bl	1390c <table_set@@Base>
   13d3c:	add	sp, sp, #12
   13d40:	pop	{pc}		; (ldr pc, [sp], #4)

00013d44 <table_set_short@@Base>:
   13d44:	push	{r0, r1, r2, r3, r4, lr}
   13d48:	strh	r3, [sp, #14]
   13d4c:	mov	r3, #10
   13d50:	str	r3, [sp]
   13d54:	add	r3, sp, #14
   13d58:	bl	1390c <table_set@@Base>
   13d5c:	add	sp, sp, #20
   13d60:	pop	{pc}		; (ldr pc, [sp], #4)

00013d64 <table_set_ushort@@Base>:
   13d64:	push	{r0, r1, r2, r3, r4, lr}
   13d68:	strh	r3, [sp, #14]
   13d6c:	mov	r3, #11
   13d70:	str	r3, [sp]
   13d74:	add	r3, sp, #14
   13d78:	bl	1390c <table_set@@Base>
   13d7c:	add	sp, sp, #20
   13d80:	pop	{pc}		; (ldr pc, [sp], #4)

00013d84 <table_set_long@@Base>:
   13d84:	push	{r0, r1, r2, r3, r4, lr}
   13d88:	str	r3, [sp, #12]
   13d8c:	mov	r3, #12
   13d90:	str	r3, [sp]
   13d94:	add	r3, sp, r3
   13d98:	bl	1390c <table_set@@Base>
   13d9c:	add	sp, sp, #20
   13da0:	pop	{pc}		; (ldr pc, [sp], #4)

00013da4 <table_set_ulong@@Base>:
   13da4:	push	{r0, r1, r2, r3, r4, lr}
   13da8:	str	r3, [sp, #12]
   13dac:	mov	r3, #13
   13db0:	str	r3, [sp]
   13db4:	add	r3, sp, #12
   13db8:	bl	1390c <table_set@@Base>
   13dbc:	add	sp, sp, #20
   13dc0:	pop	{pc}		; (ldr pc, [sp], #4)

00013dc4 <table_set_llong@@Base>:
   13dc4:	mov	r3, #14
   13dc8:	push	{r0, r1, r2, lr}
   13dcc:	str	r3, [sp]
   13dd0:	add	r3, sp, #16
   13dd4:	bl	1390c <table_set@@Base>
   13dd8:	add	sp, sp, #12
   13ddc:	pop	{pc}		; (ldr pc, [sp], #4)

00013de0 <table_set_ullong@@Base>:
   13de0:	mov	r3, #15
   13de4:	push	{r0, r1, r2, lr}
   13de8:	str	r3, [sp]
   13dec:	add	r3, sp, #16
   13df0:	bl	1390c <table_set@@Base>
   13df4:	add	sp, sp, #12
   13df8:	pop	{pc}		; (ldr pc, [sp], #4)

00013dfc <table_set_float@@Base>:
   13dfc:	push	{r0, r1, r2, r3, r4, lr}
   13e00:	mov	r3, #16
   13e04:	str	r3, [sp]
   13e08:	add	r3, sp, #12
   13e0c:	vstr	s0, [sp, #12]
   13e10:	bl	1390c <table_set@@Base>
   13e14:	add	sp, sp, #20
   13e18:	pop	{pc}		; (ldr pc, [sp], #4)

00013e1c <table_set_double@@Base>:
   13e1c:	push	{r0, r1, r2, r3, r4, lr}
   13e20:	mov	r3, #17
   13e24:	str	r3, [sp]
   13e28:	add	r3, sp, #8
   13e2c:	vstr	d0, [sp, #8]
   13e30:	bl	1390c <table_set@@Base>
   13e34:	add	sp, sp, #20
   13e38:	pop	{pc}		; (ldr pc, [sp], #4)

00013e3c <table_set_ldouble@@Base>:
   13e3c:	push	{r0, r1, r2, r3, r4, lr}
   13e40:	mov	r3, #18
   13e44:	str	r3, [sp]
   13e48:	add	r3, sp, #8
   13e4c:	vstr	d0, [sp, #8]
   13e50:	bl	1390c <table_set@@Base>
   13e54:	add	sp, sp, #20
   13e58:	pop	{pc}		; (ldr pc, [sp], #4)

00013e5c <table_set_string@@Base>:
   13e5c:	mov	ip, #21
   13e60:	push	{r0, r1, r2, lr}
   13e64:	str	ip, [sp]
   13e68:	bl	1390c <table_set@@Base>
   13e6c:	add	sp, sp, #12
   13e70:	pop	{pc}		; (ldr pc, [sp], #4)

00013e74 <table_set_char@@Base>:
   13e74:	push	{r0, r1, r2, r3, r4, lr}
   13e78:	strb	r3, [sp, #15]
   13e7c:	mov	r3, #19
   13e80:	str	r3, [sp]
   13e84:	add	r3, sp, #15
   13e88:	bl	1390c <table_set@@Base>
   13e8c:	add	sp, sp, #20
   13e90:	pop	{pc}		; (ldr pc, [sp], #4)

00013e94 <table_set_uchar@@Base>:
   13e94:	push	{r0, r1, r2, r3, r4, lr}
   13e98:	strb	r3, [sp, #15]
   13e9c:	mov	r3, #20
   13ea0:	str	r3, [sp]
   13ea4:	add	r3, sp, #15
   13ea8:	bl	1390c <table_set@@Base>
   13eac:	add	sp, sp, #20
   13eb0:	pop	{pc}		; (ldr pc, [sp], #4)

00013eb4 <table_set_ptr@@Base>:
   13eb4:	mov	ip, #23
   13eb8:	push	{r0, r1, r2, lr}
   13ebc:	str	ip, [sp]
   13ec0:	bl	1390c <table_set@@Base>
   13ec4:	add	sp, sp, #12
   13ec8:	pop	{pc}		; (ldr pc, [sp], #4)

00013ecc <table_serialize@@Base>:
   13ecc:	push	{r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ed0:	mov	r4, r1
   13ed4:	mov	r7, r0
   13ed8:	mov	r5, #0
   13edc:	add	r4, r4, #8
   13ee0:	bl	13754 <table_get_row_length@@Base>
   13ee4:	mov	r9, r0
   13ee8:	mov	r0, r7
   13eec:	bl	12c38 <table_get_column_length@@Base>
   13ef0:	str	r0, [r4, #-8]
   13ef4:	mov	r8, r0
   13ef8:	ldr	r3, [r7, #8]
   13efc:	str	r3, [r4, #-4]
   13f00:	cmp	r8, r5
   13f04:	bgt	13f54 <table_serialize@@Base+0x88>
   13f08:	str	r9, [r4]
   13f0c:	mov	r6, #0
   13f10:	add	r4, r4, #8
   13f14:	ldr	r3, [r7, #24]
   13f18:	str	r3, [r4, #-4]
   13f1c:	cmp	r9, r6
   13f20:	bgt	1412c <table_serialize@@Base+0x260>
   13f24:	ldr	r3, [r7, #32]
   13f28:	add	r4, r4, #8
   13f2c:	str	r3, [r4, #-8]
   13f30:	ldr	r3, [r7, #48]	; 0x30
   13f34:	str	r3, [r4, #-4]
   13f38:	mov	r3, #0
   13f3c:	ldr	r2, [r7, #32]
   13f40:	add	r4, r4, #12
   13f44:	cmp	r2, r3
   13f48:	bgt	14134 <table_serialize@@Base+0x268>
   13f4c:	add	sp, sp, #4
   13f50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f54:	mov	r1, r5
   13f58:	mov	r0, r7
   13f5c:	bl	12efc <table_get_column_name@@Base>
   13f60:	mov	sl, r0
   13f64:	bl	11b8c <strlen@plt>
   13f68:	add	r6, r0, #1
   13f6c:	mov	r1, r5
   13f70:	mov	r0, r7
   13f74:	add	r5, r5, #1
   13f78:	bl	12c90 <table_get_column_data_type@@Base>
   13f7c:	mov	r2, r6
   13f80:	mov	r1, sl
   13f84:	str	r0, [r4], #4
   13f88:	mov	r0, r4
   13f8c:	add	r4, r4, r6
   13f90:	bl	11bbc <strncpy@plt>
   13f94:	b	13f00 <table_serialize@@Base+0x34>
   13f98:	mov	r1, r5
   13f9c:	mov	r0, r7
   13fa0:	bl	12c90 <table_get_column_data_type@@Base>
   13fa4:	cmp	r0, #23
   13fa8:	ldrls	pc, [pc, r0, lsl #2]
   13fac:	b	14028 <table_serialize@@Base+0x15c>
   13fb0:	andeq	r4, r1, r0, lsl r1
   13fb4:	andeq	r4, r1, r0, lsl r1
   13fb8:	andeq	r4, r1, r0, lsl r0
   13fbc:	strdeq	r4, [r1], -r8
   13fc0:	andeq	r4, r1, r8, asr r0
   13fc4:	andeq	r4, r1, ip, lsr r0
   13fc8:	andeq	r4, r1, r0, lsl r1
   13fcc:	andeq	r4, r1, r0, lsl r1
   13fd0:	andeq	r4, r1, r0, ror r0
   13fd4:	andeq	r4, r1, r0, ror r0
   13fd8:	andeq	r4, r1, r8, asr r0
   13fdc:	andeq	r4, r1, ip, lsr r0
   13fe0:	andeq	r4, r1, r0, lsl r1
   13fe4:	andeq	r4, r1, r0, lsl r1
   13fe8:	andeq	r4, r1, r0, ror r0
   13fec:	andeq	r4, r1, r0, ror r0
   13ff0:	andeq	r4, r1, ip, lsl #1
   13ff4:	andeq	r4, r1, r8, lsr #1
   13ff8:	andeq	r4, r1, r8, lsr #1
   13ffc:	strdeq	r4, [r1], -r8
   14000:	strdeq	r4, [r1], -r8
   14004:	andeq	r4, r1, r4, asr #1
   14008:	strdeq	r4, [r1], -r8
   1400c:	andeq	r4, r1, r0, lsl r1
   14010:	mov	r2, r5
   14014:	mov	r1, r6
   14018:	mov	r0, r7
   1401c:	bl	135cc <table_get@@Base>
   14020:	ldrsb	r3, [r0]
   14024:	strb	r3, [r4], #1
   14028:	add	r5, r5, #1
   1402c:	cmp	r8, r5
   14030:	bgt	13f98 <table_serialize@@Base+0xcc>
   14034:	add	r6, r6, #1
   14038:	b	13f1c <table_serialize@@Base+0x50>
   1403c:	mov	r2, r5
   14040:	mov	r1, r6
   14044:	mov	r0, r7
   14048:	bl	135cc <table_get@@Base>
   1404c:	ldrh	r3, [r0]
   14050:	strh	r3, [r4], #2
   14054:	b	14028 <table_serialize@@Base+0x15c>
   14058:	mov	r2, r5
   1405c:	mov	r1, r6
   14060:	mov	r0, r7
   14064:	bl	135cc <table_get@@Base>
   14068:	ldrsh	r3, [r0]
   1406c:	b	14050 <table_serialize@@Base+0x184>
   14070:	mov	r2, r5
   14074:	mov	r1, r6
   14078:	mov	r0, r7
   1407c:	bl	135cc <table_get@@Base>
   14080:	ldrd	r2, [r0]
   14084:	strd	r2, [r4], #8
   14088:	b	14028 <table_serialize@@Base+0x15c>
   1408c:	mov	r2, r5
   14090:	mov	r1, r6
   14094:	mov	r0, r7
   14098:	bl	135cc <table_get@@Base>
   1409c:	ldr	r3, [r0]
   140a0:	str	r3, [r4], #4
   140a4:	b	14028 <table_serialize@@Base+0x15c>
   140a8:	mov	r2, r5
   140ac:	mov	r1, r6
   140b0:	mov	r0, r7
   140b4:	bl	135cc <table_get@@Base>
   140b8:	ldrd	r2, [r0]
   140bc:	strd	r2, [r4], #8
   140c0:	b	14028 <table_serialize@@Base+0x15c>
   140c4:	mov	r2, r5
   140c8:	mov	r1, r6
   140cc:	mov	r0, r7
   140d0:	bl	136dc <table_get_string@@Base>
   140d4:	mov	fp, r0
   140d8:	bl	11b8c <strlen@plt>
   140dc:	add	sl, r0, #1
   140e0:	mov	r1, fp
   140e4:	mov	r0, r4
   140e8:	mov	r2, sl
   140ec:	bl	11bbc <strncpy@plt>
   140f0:	add	r4, r4, sl
   140f4:	b	14028 <table_serialize@@Base+0x15c>
   140f8:	mov	r2, r5
   140fc:	mov	r1, r6
   14100:	mov	r0, r7
   14104:	bl	135cc <table_get@@Base>
   14108:	ldrb	r3, [r0]
   1410c:	b	14024 <table_serialize@@Base+0x158>
   14110:	mov	r2, r5
   14114:	mov	r1, r6
   14118:	mov	r0, r7
   1411c:	bl	135cc <table_get@@Base>
   14120:	ldr	r3, [r0]
   14124:	str	r3, [r4], #4
   14128:	b	14028 <table_serialize@@Base+0x15c>
   1412c:	mov	r5, #0
   14130:	b	1402c <table_serialize@@Base+0x160>
   14134:	ldr	r2, [r7, #36]	; 0x24
   14138:	ldr	r2, [r2, r3, lsl #2]
   1413c:	str	r2, [r4, #-12]
   14140:	ldr	r2, [r7, #40]	; 0x28
   14144:	ldr	r2, [r2, r3, lsl #2]
   14148:	str	r2, [r4, #-8]
   1414c:	ldr	r2, [r7, #44]	; 0x2c
   14150:	ldr	r2, [r2, r3, lsl #2]
   14154:	add	r3, r3, #1
   14158:	str	r2, [r4, #-4]
   1415c:	b	13f3c <table_serialize@@Base+0x70>

00014160 <table_deserialize@@Base>:
   14160:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   14164:	mov	r4, r0
   14168:	mov	r5, #0
   1416c:	add	r4, r4, #8
   14170:	bl	12374 <table_new@@Base>
   14174:	mov	r7, r0
   14178:	ldr	r8, [r4, #-8]
   1417c:	ldr	r3, [r4, #-4]
   14180:	str	r3, [r0, #8]
   14184:	cmp	r8, r5
   14188:	ldr	r9, [r4]
   1418c:	bgt	141d4 <table_deserialize@@Base+0x74>
   14190:	ldr	r3, [r4, #4]
   14194:	mov	r6, #0
   14198:	add	r4, r4, #8
   1419c:	str	r3, [r7, #24]
   141a0:	cmp	r6, r9
   141a4:	blt	14200 <table_deserialize@@Base+0xa0>
   141a8:	mov	r5, #0
   141ac:	add	r4, r4, #8
   141b0:	ldr	r6, [r4, #-8]
   141b4:	ldr	r3, [r4, #-4]
   141b8:	str	r3, [r7, #48]	; 0x30
   141bc:	cmp	r6, r5
   141c0:	add	r4, r4, #12
   141c4:	bgt	144f4 <table_deserialize@@Base+0x394>
   141c8:	mov	r0, r7
   141cc:	add	sp, sp, #12
   141d0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   141d4:	add	r4, r4, #4
   141d8:	mov	r2, r9
   141dc:	mov	r1, r4
   141e0:	mov	r0, r7
   141e4:	bl	12ca4 <table_add_column@@Base>
   141e8:	mov	r0, r4
   141ec:	add	r5, r5, #1
   141f0:	bl	11b8c <strlen@plt>
   141f4:	add	r0, r0, #1
   141f8:	add	r4, r4, r0
   141fc:	b	14184 <table_deserialize@@Base+0x24>
   14200:	mov	r0, r7
   14204:	mov	r5, #0
   14208:	bl	1375c <table_add_row@@Base>
   1420c:	cmp	r8, r5
   14210:	addle	r6, r6, #1
   14214:	ble	141a0 <table_deserialize@@Base+0x40>
   14218:	mov	r1, r5
   1421c:	mov	r0, r7
   14220:	bl	12c90 <table_get_column_data_type@@Base>
   14224:	cmp	r0, #23
   14228:	ldrls	pc, [pc, r0, lsl #2]
   1422c:	b	142a4 <table_deserialize@@Base+0x144>
   14230:	andeq	r4, r1, ip, lsr #5
   14234:	andeq	r4, r1, r4, asr #5
   14238:	ldrdeq	r4, [r1], -ip
   1423c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14240:	andeq	r4, r1, ip, lsl #6
   14244:	andeq	r4, r1, r4, lsr #6
   14248:	andeq	r4, r1, ip, lsr r3
   1424c:	andeq	r4, r1, r4, asr r3
   14250:	andeq	r4, r1, ip, ror #6
   14254:	andeq	r4, r1, r8, lsl #7
   14258:	andeq	r4, r1, r4, lsr #7
   1425c:			; <UNDEFINED> instruction: 0x000143bc
   14260:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14264:	andeq	r4, r1, ip, ror #7
   14268:	andeq	r4, r1, r4, lsl #8
   1426c:	andeq	r4, r1, r0, lsr #8
   14270:	andeq	r4, r1, ip, lsr r4
   14274:	andeq	r4, r1, r4, asr r4
   14278:	andeq	r4, r1, ip, ror #8
   1427c:	andeq	r4, r1, ip, lsr #9
   14280:	andeq	r4, r1, r4, asr #9
   14284:	andeq	r4, r1, r4, lsl #9
   14288:	muleq	r1, r0, r2
   1428c:	ldrdeq	r4, [r1], -ip
   14290:	ldrb	r3, [r4], #1
   14294:	mov	r2, r5
   14298:	mov	r1, r6
   1429c:	mov	r0, r7
   142a0:	bl	13bec <table_set_bool@@Base>
   142a4:	add	r5, r5, #1
   142a8:	b	1420c <table_deserialize@@Base+0xac>
   142ac:	mov	r2, r5
   142b0:	mov	r1, r6
   142b4:	ldr	r3, [r4], #4
   142b8:	mov	r0, r7
   142bc:	bl	13c0c <table_set_int@@Base>
   142c0:	b	142a4 <table_deserialize@@Base+0x144>
   142c4:	mov	r2, r5
   142c8:	mov	r1, r6
   142cc:	ldr	r3, [r4], #4
   142d0:	mov	r0, r7
   142d4:	bl	13c2c <table_set_uint@@Base>
   142d8:	b	142a4 <table_deserialize@@Base+0x144>
   142dc:	ldrsb	r3, [r4], #1
   142e0:	mov	r2, r5
   142e4:	mov	r1, r6
   142e8:	mov	r0, r7
   142ec:	bl	13c4c <table_set_int8@@Base>
   142f0:	b	142a4 <table_deserialize@@Base+0x144>
   142f4:	ldrb	r3, [r4], #1
   142f8:	mov	r2, r5
   142fc:	mov	r1, r6
   14300:	mov	r0, r7
   14304:	bl	13c6c <table_set_uint8@@Base>
   14308:	b	142a4 <table_deserialize@@Base+0x144>
   1430c:	ldrsh	r3, [r4], #2
   14310:	mov	r2, r5
   14314:	mov	r1, r6
   14318:	mov	r0, r7
   1431c:	bl	13c8c <table_set_int16@@Base>
   14320:	b	142a4 <table_deserialize@@Base+0x144>
   14324:	ldrh	r3, [r4], #2
   14328:	mov	r2, r5
   1432c:	mov	r1, r6
   14330:	mov	r0, r7
   14334:	bl	13cac <table_set_uint16@@Base>
   14338:	b	142a4 <table_deserialize@@Base+0x144>
   1433c:	mov	r2, r5
   14340:	mov	r1, r6
   14344:	ldr	r3, [r4], #4
   14348:	mov	r0, r7
   1434c:	bl	13ccc <table_set_int32@@Base>
   14350:	b	142a4 <table_deserialize@@Base+0x144>
   14354:	mov	r2, r5
   14358:	mov	r1, r6
   1435c:	ldr	r3, [r4], #4
   14360:	mov	r0, r7
   14364:	bl	13cec <table_set_uint32@@Base>
   14368:	b	142a4 <table_deserialize@@Base+0x144>
   1436c:	ldrd	r2, [r4], #8
   14370:	mov	r1, r6
   14374:	mov	r0, r7
   14378:	strd	r2, [sp]
   1437c:	mov	r2, r5
   14380:	bl	13d0c <table_set_int64@@Base>
   14384:	b	142a4 <table_deserialize@@Base+0x144>
   14388:	ldrd	r2, [r4], #8
   1438c:	mov	r1, r6
   14390:	mov	r0, r7
   14394:	strd	r2, [sp]
   14398:	mov	r2, r5
   1439c:	bl	13d28 <table_set_uint64@@Base>
   143a0:	b	142a4 <table_deserialize@@Base+0x144>
   143a4:	ldrsh	r3, [r4], #2
   143a8:	mov	r2, r5
   143ac:	mov	r1, r6
   143b0:	mov	r0, r7
   143b4:	bl	13d44 <table_set_short@@Base>
   143b8:	b	142a4 <table_deserialize@@Base+0x144>
   143bc:	ldrh	r3, [r4], #2
   143c0:	mov	r2, r5
   143c4:	mov	r1, r6
   143c8:	mov	r0, r7
   143cc:	bl	13d64 <table_set_ushort@@Base>
   143d0:	b	142a4 <table_deserialize@@Base+0x144>
   143d4:	mov	r2, r5
   143d8:	mov	r1, r6
   143dc:	ldr	r3, [r4], #4
   143e0:	mov	r0, r7
   143e4:	bl	13d84 <table_set_long@@Base>
   143e8:	b	142a4 <table_deserialize@@Base+0x144>
   143ec:	mov	r2, r5
   143f0:	mov	r1, r6
   143f4:	ldr	r3, [r4], #4
   143f8:	mov	r0, r7
   143fc:	bl	13da4 <table_set_ulong@@Base>
   14400:	b	142a4 <table_deserialize@@Base+0x144>
   14404:	ldrd	r2, [r4], #8
   14408:	mov	r1, r6
   1440c:	mov	r0, r7
   14410:	strd	r2, [sp]
   14414:	mov	r2, r5
   14418:	bl	13dc4 <table_set_llong@@Base>
   1441c:	b	142a4 <table_deserialize@@Base+0x144>
   14420:	ldrd	r2, [r4], #8
   14424:	mov	r1, r6
   14428:	mov	r0, r7
   1442c:	strd	r2, [sp]
   14430:	mov	r2, r5
   14434:	bl	13de0 <table_set_ullong@@Base>
   14438:	b	142a4 <table_deserialize@@Base+0x144>
   1443c:	mov	r2, r5
   14440:	mov	r1, r6
   14444:	vldmia	r4!, {s0}
   14448:	mov	r0, r7
   1444c:	bl	13dfc <table_set_float@@Base>
   14450:	b	142a4 <table_deserialize@@Base+0x144>
   14454:	mov	r2, r5
   14458:	mov	r1, r6
   1445c:	vldmia	r4!, {d0}
   14460:	mov	r0, r7
   14464:	bl	13e1c <table_set_double@@Base>
   14468:	b	142a4 <table_deserialize@@Base+0x144>
   1446c:	mov	r2, r5
   14470:	mov	r1, r6
   14474:	vldmia	r4!, {d0}
   14478:	mov	r0, r7
   1447c:	bl	13e3c <table_set_ldouble@@Base>
   14480:	b	142a4 <table_deserialize@@Base+0x144>
   14484:	mov	r3, r4
   14488:	mov	r2, r5
   1448c:	mov	r1, r6
   14490:	mov	r0, r7
   14494:	bl	13e5c <table_set_string@@Base>
   14498:	mov	r0, r4
   1449c:	bl	11b8c <strlen@plt>
   144a0:	add	r0, r0, #1
   144a4:	add	r4, r4, r0
   144a8:	b	142a4 <table_deserialize@@Base+0x144>
   144ac:	ldrb	r3, [r4], #1
   144b0:	mov	r2, r5
   144b4:	mov	r1, r6
   144b8:	mov	r0, r7
   144bc:	bl	13e74 <table_set_char@@Base>
   144c0:	b	142a4 <table_deserialize@@Base+0x144>
   144c4:	ldrb	r3, [r4], #1
   144c8:	mov	r2, r5
   144cc:	mov	r1, r6
   144d0:	mov	r0, r7
   144d4:	bl	13e94 <table_set_uchar@@Base>
   144d8:	b	142a4 <table_deserialize@@Base+0x144>
   144dc:	mov	r2, r5
   144e0:	mov	r1, r6
   144e4:	ldr	r3, [r4], #4
   144e8:	mov	r0, r7
   144ec:	bl	13eb4 <table_set_ptr@@Base>
   144f0:	b	142a4 <table_deserialize@@Base+0x144>
   144f4:	mov	r0, r7
   144f8:	ldmdb	r4, {r1, r2, r3}
   144fc:	add	r5, r5, #1
   14500:	bl	12960 <table_register_callback@@Base>
   14504:	b	141bc <table_deserialize@@Base+0x5c>

00014508 <table_cell_to_buffer@@Base>:
   14508:	push	{r4, r5, r6, r7, lr}
   1450c:	sub	sp, sp, #20
   14510:	mov	r7, r1
   14514:	mov	r1, r2
   14518:	mov	r6, r0
   1451c:	mov	r4, r3
   14520:	str	r2, [sp, #12]
   14524:	ldr	r5, [sp, #40]	; 0x28
   14528:	bl	12c90 <table_get_column_data_type@@Base>
   1452c:	ldr	r2, [sp, #12]
   14530:	cmp	r0, #23
   14534:	ldrls	pc, [pc, r0, lsl #2]
   14538:	b	14658 <table_cell_to_buffer@@Base+0x150>
   1453c:	muleq	r1, ip, r5
   14540:			; <UNDEFINED> instruction: 0x000145b4
   14544:	ldrdeq	r4, [r1], -r8
   14548:	andeq	r4, r1, r8, ror #11
   1454c:	strdeq	r4, [r1], -r8
   14550:	andeq	r4, r1, r8, lsl #12
   14554:	andeq	r4, r1, r8, lsl r6
   14558:	andeq	r4, r1, r8, lsr #12
   1455c:	andeq	r4, r1, r8, lsr r6
   14560:	andeq	r4, r1, r4, ror #12
   14564:	andeq	r4, r1, ip, ror r6
   14568:	muleq	r1, r4, r6
   1456c:	andeq	r4, r1, ip, lsr #13
   14570:	andeq	r4, r1, r4, asr #13
   14574:	ldrdeq	r4, [r1], -ip
   14578:	andeq	r4, r1, ip, ror #13
   1457c:	andeq	r4, r1, r4, lsl r7
   14580:	andeq	r4, r1, ip, lsr r7
   14584:	andeq	r4, r1, r4, asr r7
   14588:	andeq	r4, r1, ip, ror r7
   1458c:	muleq	r1, r4, r7
   14590:	strdeq	r4, [r1], -ip
   14594:	andeq	r4, r1, ip, ror #14
   14598:	andeq	r4, r1, r4, lsr #15
   1459c:	mov	r1, r7
   145a0:	mov	r0, r6
   145a4:	bl	135ec <table_get_int@@Base>
   145a8:	mov	r3, r0
   145ac:	ldr	r2, [pc, #520]	; 147bc <table_cell_to_buffer@@Base+0x2b4>
   145b0:	b	145c8 <table_cell_to_buffer@@Base+0xc0>
   145b4:	mov	r1, r7
   145b8:	mov	r0, r6
   145bc:	bl	135fc <table_get_uint@@Base>
   145c0:	ldr	r2, [pc, #504]	; 147c0 <table_cell_to_buffer@@Base+0x2b8>
   145c4:	mov	r3, r0
   145c8:	mov	r1, r5
   145cc:	mov	r0, r4
   145d0:	bl	11ba4 <snprintf@plt>
   145d4:	b	14658 <table_cell_to_buffer@@Base+0x150>
   145d8:	mov	r1, r7
   145dc:	mov	r0, r6
   145e0:	bl	1360c <table_get_int8@@Base>
   145e4:	b	145a8 <table_cell_to_buffer@@Base+0xa0>
   145e8:	mov	r1, r7
   145ec:	mov	r0, r6
   145f0:	bl	1361c <table_get_uint8@@Base>
   145f4:	b	145c0 <table_cell_to_buffer@@Base+0xb8>
   145f8:	mov	r1, r7
   145fc:	mov	r0, r6
   14600:	bl	1362c <table_get_int16@@Base>
   14604:	b	145a8 <table_cell_to_buffer@@Base+0xa0>
   14608:	mov	r1, r7
   1460c:	mov	r0, r6
   14610:	bl	1363c <table_get_uint16@@Base>
   14614:	b	145c0 <table_cell_to_buffer@@Base+0xb8>
   14618:	mov	r1, r7
   1461c:	mov	r0, r6
   14620:	bl	1364c <table_get_int32@@Base>
   14624:	b	145a8 <table_cell_to_buffer@@Base+0xa0>
   14628:	mov	r1, r7
   1462c:	mov	r0, r6
   14630:	bl	13650 <table_get_uint32@@Base>
   14634:	b	145c0 <table_cell_to_buffer@@Base+0xb8>
   14638:	mov	r1, r7
   1463c:	mov	r0, r6
   14640:	bl	13654 <table_get_int64@@Base>
   14644:	ldr	r2, [pc, #376]	; 147c4 <table_cell_to_buffer@@Base+0x2bc>
   14648:	strd	r0, [sp]
   1464c:	mov	r1, r5
   14650:	mov	r0, r4
   14654:	bl	11ba4 <snprintf@plt>
   14658:	mov	r0, #0
   1465c:	add	sp, sp, #20
   14660:	pop	{r4, r5, r6, r7, pc}
   14664:	mov	r1, r7
   14668:	mov	r0, r6
   1466c:	bl	13664 <table_get_uint64@@Base>
   14670:	ldr	r2, [pc, #336]	; 147c8 <table_cell_to_buffer@@Base+0x2c0>
   14674:	strd	r0, [sp]
   14678:	b	1464c <table_cell_to_buffer@@Base+0x144>
   1467c:	mov	r1, r7
   14680:	mov	r0, r6
   14684:	bl	13674 <table_get_short@@Base>
   14688:	mov	r3, r0
   1468c:	ldr	r2, [pc, #312]	; 147cc <table_cell_to_buffer@@Base+0x2c4>
   14690:	b	145c8 <table_cell_to_buffer@@Base+0xc0>
   14694:	mov	r1, r7
   14698:	mov	r0, r6
   1469c:	bl	13678 <table_get_ushort@@Base>
   146a0:	mov	r3, r0
   146a4:	ldr	r2, [pc, #292]	; 147d0 <table_cell_to_buffer@@Base+0x2c8>
   146a8:	b	145c8 <table_cell_to_buffer@@Base+0xc0>
   146ac:	mov	r1, r7
   146b0:	mov	r0, r6
   146b4:	bl	1367c <table_get_long@@Base>
   146b8:	mov	r3, r0
   146bc:	ldr	r2, [pc, #272]	; 147d4 <table_cell_to_buffer@@Base+0x2cc>
   146c0:	b	145c8 <table_cell_to_buffer@@Base+0xc0>
   146c4:	mov	r1, r7
   146c8:	mov	r0, r6
   146cc:	bl	1368c <table_get_ulong@@Base>
   146d0:	mov	r3, r0
   146d4:	ldr	r2, [pc, #252]	; 147d8 <table_cell_to_buffer@@Base+0x2d0>
   146d8:	b	145c8 <table_cell_to_buffer@@Base+0xc0>
   146dc:	mov	r1, r7
   146e0:	mov	r0, r6
   146e4:	bl	1369c <table_get_llong@@Base>
   146e8:	b	14644 <table_cell_to_buffer@@Base+0x13c>
   146ec:	mov	r1, r7
   146f0:	mov	r0, r6
   146f4:	bl	136a0 <table_get_ullong@@Base>
   146f8:	b	14670 <table_cell_to_buffer@@Base+0x168>
   146fc:	mov	r1, r7
   14700:	mov	r0, r6
   14704:	bl	136dc <table_get_string@@Base>
   14708:	mov	r3, r0
   1470c:	ldr	r2, [pc, #200]	; 147dc <table_cell_to_buffer@@Base+0x2d4>
   14710:	b	145c8 <table_cell_to_buffer@@Base+0xc0>
   14714:	mov	r1, r7
   14718:	mov	r0, r6
   1471c:	bl	136a4 <table_get_float@@Base>
   14720:	vcvt.f64.f32	d0, s0
   14724:	ldr	r2, [pc, #180]	; 147e0 <table_cell_to_buffer@@Base+0x2d8>
   14728:	vstr	d0, [sp]
   1472c:	mov	r1, r5
   14730:	mov	r0, r4
   14734:	bl	11ba4 <snprintf@plt>
   14738:	b	14658 <table_cell_to_buffer@@Base+0x150>
   1473c:	mov	r1, r7
   14740:	mov	r0, r6
   14744:	bl	136b4 <table_get_double@@Base>
   14748:	ldr	r2, [pc, #148]	; 147e4 <table_cell_to_buffer@@Base+0x2dc>
   1474c:	vstr	d0, [sp]
   14750:	b	1472c <table_cell_to_buffer@@Base+0x224>
   14754:	mov	r1, r7
   14758:	mov	r0, r6
   1475c:	bl	136c4 <table_get_ldouble@@Base>
   14760:	ldr	r2, [pc, #128]	; 147e8 <table_cell_to_buffer@@Base+0x2e0>
   14764:	vstr	d0, [sp]
   14768:	b	1472c <table_cell_to_buffer@@Base+0x224>
   1476c:	mov	r1, r7
   14770:	mov	r0, r6
   14774:	bl	135dc <table_get_bool@@Base>
   14778:	b	145a8 <table_cell_to_buffer@@Base+0xa0>
   1477c:	mov	r1, r7
   14780:	mov	r0, r6
   14784:	bl	136d4 <table_get_char@@Base>
   14788:	mov	r3, r0
   1478c:	ldr	r2, [pc, #88]	; 147ec <table_cell_to_buffer@@Base+0x2e4>
   14790:	b	145c8 <table_cell_to_buffer@@Base+0xc0>
   14794:	mov	r1, r7
   14798:	mov	r0, r6
   1479c:	bl	136d8 <table_get_uchar@@Base>
   147a0:	b	14788 <table_cell_to_buffer@@Base+0x280>
   147a4:	mov	r1, r7
   147a8:	mov	r0, r6
   147ac:	bl	136e0 <table_get_ptr@@Base>
   147b0:	mov	r3, r0
   147b4:	ldr	r2, [pc, #52]	; 147f0 <table_cell_to_buffer@@Base+0x2e8>
   147b8:	b	145c8 <table_cell_to_buffer@@Base+0xc0>
   147bc:	andeq	r4, r1, r3, lsl pc
   147c0:	andeq	r4, r1, ip, lsr #31
   147c4:	andeq	r4, r1, pc, lsr #31
   147c8:			; <UNDEFINED> instruction: 0x00014fb4
   147cc:			; <UNDEFINED> instruction: 0x00014fb9
   147d0:			; <UNDEFINED> instruction: 0x00014fbd
   147d4:	andeq	r4, r1, r1, asr #31
   147d8:	andeq	r4, r1, r5, asr #31
   147dc:	andeq	r4, r1, r9, asr #31
   147e0:	andeq	r4, r1, ip, asr #31
   147e4:	andeq	r4, r1, pc, asr #31
   147e8:	ldrdeq	r4, [r1], -r3
   147ec:	ldrdeq	r4, [r1], -r7
   147f0:	ldrdeq	r4, [r1], -sl

000147f4 <table_cell_from_buffer@@Base>:
   147f4:	push	{r4, r5, r6, r7, lr}
   147f8:	mov	r7, r1
   147fc:	sub	sp, sp, #268	; 0x10c
   14800:	mov	r1, r2
   14804:	mov	r6, r0
   14808:	mov	r5, r2
   1480c:	mov	r4, r3
   14810:	bl	12c90 <table_get_column_data_type@@Base>
   14814:	cmp	r0, #23
   14818:	ldrls	pc, [pc, r0, lsl #2]
   1481c:	b	148ac <table_cell_from_buffer@@Base+0xb8>
   14820:	andeq	r4, r1, r0, lsl #17
   14824:			; <UNDEFINED> instruction: 0x000148b4
   14828:	andeq	r4, r1, r4, ror #17
   1482c:	andeq	r4, r1, r4, lsl r9
   14830:	andeq	r4, r1, r4, asr #18
   14834:	andeq	r4, r1, r4, ror r9
   14838:	andeq	r4, r1, r4, lsr #19
   1483c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14840:	andeq	r4, r1, r4, lsl #20
   14844:	andeq	r4, r1, r8, lsr sl
   14848:	andeq	r4, r1, ip, ror #20
   1484c:	muleq	r1, ip, sl
   14850:	andeq	r4, r1, ip, asr #21
   14854:	strdeq	r4, [r1], -ip
   14858:	andeq	r4, r1, ip, lsr #22
   1485c:	andeq	r4, r1, r0, ror #22
   14860:	andeq	r4, r1, r4, asr #23
   14864:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14868:	andeq	r4, r1, r4, lsr #24
   1486c:			; <UNDEFINED> instruction: 0x00014cb0
   14870:	andeq	r4, r1, r0, ror #25
   14874:	muleq	r1, r4, fp
   14878:	andeq	r4, r1, r4, asr ip
   1487c:	andeq	r4, r1, r0, lsl sp
   14880:	add	r2, sp, #8
   14884:	ldr	r1, [pc, #1212]	; 14d48 <table_cell_from_buffer@@Base+0x554>
   14888:	mov	r0, r4
   1488c:	bl	11bb0 <__isoc99_sscanf@plt>
   14890:	cmp	r0, #1
   14894:	bne	14d40 <table_cell_from_buffer@@Base+0x54c>
   14898:	mov	r2, r5
   1489c:	mov	r1, r7
   148a0:	ldr	r3, [sp, #8]
   148a4:	mov	r0, r6
   148a8:	bl	13c0c <table_set_int@@Base>
   148ac:	mov	r4, #0
   148b0:	b	14ca4 <table_cell_from_buffer@@Base+0x4b0>
   148b4:	add	r2, sp, #8
   148b8:	ldr	r1, [pc, #1164]	; 14d4c <table_cell_from_buffer@@Base+0x558>
   148bc:	mov	r0, r4
   148c0:	bl	11bb0 <__isoc99_sscanf@plt>
   148c4:	cmp	r0, #1
   148c8:	bne	14d40 <table_cell_from_buffer@@Base+0x54c>
   148cc:	mov	r2, r5
   148d0:	mov	r1, r7
   148d4:	ldr	r3, [sp, #8]
   148d8:	mov	r0, r6
   148dc:	bl	13c2c <table_set_uint@@Base>
   148e0:	b	148ac <table_cell_from_buffer@@Base+0xb8>
   148e4:	add	r2, sp, #8
   148e8:	ldr	r1, [pc, #1120]	; 14d50 <table_cell_from_buffer@@Base+0x55c>
   148ec:	mov	r0, r4
   148f0:	bl	11bb0 <__isoc99_sscanf@plt>
   148f4:	cmp	r0, #1
   148f8:	bne	14d40 <table_cell_from_buffer@@Base+0x54c>
   148fc:	ldrsb	r3, [sp, #8]
   14900:	mov	r2, r5
   14904:	mov	r1, r7
   14908:	mov	r0, r6
   1490c:	bl	13c4c <table_set_int8@@Base>
   14910:	b	148ac <table_cell_from_buffer@@Base+0xb8>
   14914:	add	r2, sp, #8
   14918:	ldr	r1, [pc, #1076]	; 14d54 <table_cell_from_buffer@@Base+0x560>
   1491c:	mov	r0, r4
   14920:	bl	11bb0 <__isoc99_sscanf@plt>
   14924:	cmp	r0, #1
   14928:	bne	14d40 <table_cell_from_buffer@@Base+0x54c>
   1492c:	ldrb	r3, [sp, #8]
   14930:	mov	r2, r5
   14934:	mov	r1, r7
   14938:	mov	r0, r6
   1493c:	bl	13c6c <table_set_uint8@@Base>
   14940:	b	148ac <table_cell_from_buffer@@Base+0xb8>
   14944:	add	r2, sp, #8
   14948:	ldr	r1, [pc, #1032]	; 14d58 <table_cell_from_buffer@@Base+0x564>
   1494c:	mov	r0, r4
   14950:	bl	11bb0 <__isoc99_sscanf@plt>
   14954:	cmp	r0, #1
   14958:	bne	14d40 <table_cell_from_buffer@@Base+0x54c>
   1495c:	ldrsh	r3, [sp, #8]
   14960:	mov	r2, r5
   14964:	mov	r1, r7
   14968:	mov	r0, r6
   1496c:	bl	13c8c <table_set_int16@@Base>
   14970:	b	148ac <table_cell_from_buffer@@Base+0xb8>
   14974:	add	r2, sp, #8
   14978:	ldr	r1, [pc, #988]	; 14d5c <table_cell_from_buffer@@Base+0x568>
   1497c:	mov	r0, r4
   14980:	bl	11bb0 <__isoc99_sscanf@plt>
   14984:	cmp	r0, #1
   14988:	bne	14d40 <table_cell_from_buffer@@Base+0x54c>
   1498c:	ldrh	r3, [sp, #8]
   14990:	mov	r2, r5
   14994:	mov	r1, r7
   14998:	mov	r0, r6
   1499c:	bl	13cac <table_set_uint16@@Base>
   149a0:	b	148ac <table_cell_from_buffer@@Base+0xb8>
   149a4:	add	r2, sp, #8
   149a8:	ldr	r1, [pc, #920]	; 14d48 <table_cell_from_buffer@@Base+0x554>
   149ac:	mov	r0, r4
   149b0:	bl	11bb0 <__isoc99_sscanf@plt>
   149b4:	cmp	r0, #1
   149b8:	bne	14d40 <table_cell_from_buffer@@Base+0x54c>
   149bc:	mov	r2, r5
   149c0:	mov	r1, r7
   149c4:	ldr	r3, [sp, #8]
   149c8:	mov	r0, r6
   149cc:	bl	13ccc <table_set_int32@@Base>
   149d0:	b	148ac <table_cell_from_buffer@@Base+0xb8>
   149d4:	add	r2, sp, #8
   149d8:	ldr	r1, [pc, #876]	; 14d4c <table_cell_from_buffer@@Base+0x558>
   149dc:	mov	r0, r4
   149e0:	bl	11bb0 <__isoc99_sscanf@plt>
   149e4:	cmp	r0, #1
   149e8:	bne	14d40 <table_cell_from_buffer@@Base+0x54c>
   149ec:	mov	r2, r5
   149f0:	mov	r1, r7
   149f4:	ldr	r3, [sp, #8]
   149f8:	mov	r0, r6
   149fc:	bl	13cec <table_set_uint32@@Base>
   14a00:	b	148ac <table_cell_from_buffer@@Base+0xb8>
   14a04:	add	r2, sp, #8
   14a08:	ldr	r1, [pc, #848]	; 14d60 <table_cell_from_buffer@@Base+0x56c>
   14a0c:	mov	r0, r4
   14a10:	bl	11bb0 <__isoc99_sscanf@plt>
   14a14:	cmp	r0, #1
   14a18:	bne	14d40 <table_cell_from_buffer@@Base+0x54c>
   14a1c:	ldrd	r2, [sp, #8]
   14a20:	mov	r1, r7
   14a24:	mov	r0, r6
   14a28:	strd	r2, [sp]
   14a2c:	mov	r2, r5
   14a30:	bl	13d0c <table_set_int64@@Base>
   14a34:	b	148ac <table_cell_from_buffer@@Base+0xb8>
   14a38:	add	r2, sp, #8
   14a3c:	ldr	r1, [pc, #800]	; 14d64 <table_cell_from_buffer@@Base+0x570>
   14a40:	mov	r0, r4
   14a44:	bl	11bb0 <__isoc99_sscanf@plt>
   14a48:	cmp	r0, #1
   14a4c:	bne	14d40 <table_cell_from_buffer@@Base+0x54c>
   14a50:	ldrd	r2, [sp, #8]
   14a54:	mov	r1, r7
   14a58:	mov	r0, r6
   14a5c:	strd	r2, [sp]
   14a60:	mov	r2, r5
   14a64:	bl	13d28 <table_set_uint64@@Base>
   14a68:	b	148ac <table_cell_from_buffer@@Base+0xb8>
   14a6c:	add	r2, sp, #8
   14a70:	ldr	r1, [pc, #736]	; 14d58 <table_cell_from_buffer@@Base+0x564>
   14a74:	mov	r0, r4
   14a78:	bl	11bb0 <__isoc99_sscanf@plt>
   14a7c:	cmp	r0, #1
   14a80:	bne	14d40 <table_cell_from_buffer@@Base+0x54c>
   14a84:	ldrsh	r3, [sp, #8]
   14a88:	mov	r2, r5
   14a8c:	mov	r1, r7
   14a90:	mov	r0, r6
   14a94:	bl	13d44 <table_set_short@@Base>
   14a98:	b	148ac <table_cell_from_buffer@@Base+0xb8>
   14a9c:	add	r2, sp, #8
   14aa0:	ldr	r1, [pc, #692]	; 14d5c <table_cell_from_buffer@@Base+0x568>
   14aa4:	mov	r0, r4
   14aa8:	bl	11bb0 <__isoc99_sscanf@plt>
   14aac:	cmp	r0, #1
   14ab0:	bne	14d40 <table_cell_from_buffer@@Base+0x54c>
   14ab4:	ldrh	r3, [sp, #8]
   14ab8:	mov	r2, r5
   14abc:	mov	r1, r7
   14ac0:	mov	r0, r6
   14ac4:	bl	13d64 <table_set_ushort@@Base>
   14ac8:	b	148ac <table_cell_from_buffer@@Base+0xb8>
   14acc:	add	r2, sp, #8
   14ad0:	ldr	r1, [pc, #656]	; 14d68 <table_cell_from_buffer@@Base+0x574>
   14ad4:	mov	r0, r4
   14ad8:	bl	11bb0 <__isoc99_sscanf@plt>
   14adc:	cmp	r0, #1
   14ae0:	bne	14d40 <table_cell_from_buffer@@Base+0x54c>
   14ae4:	mov	r2, r5
   14ae8:	mov	r1, r7
   14aec:	ldr	r3, [sp, #8]
   14af0:	mov	r0, r6
   14af4:	bl	13d84 <table_set_long@@Base>
   14af8:	b	148ac <table_cell_from_buffer@@Base+0xb8>
   14afc:	add	r2, sp, #8
   14b00:	ldr	r1, [pc, #612]	; 14d6c <table_cell_from_buffer@@Base+0x578>
   14b04:	mov	r0, r4
   14b08:	bl	11bb0 <__isoc99_sscanf@plt>
   14b0c:	cmp	r0, #1
   14b10:	bne	14d40 <table_cell_from_buffer@@Base+0x54c>
   14b14:	mov	r2, r5
   14b18:	mov	r1, r7
   14b1c:	ldr	r3, [sp, #8]
   14b20:	mov	r0, r6
   14b24:	bl	13da4 <table_set_ulong@@Base>
   14b28:	b	148ac <table_cell_from_buffer@@Base+0xb8>
   14b2c:	add	r2, sp, #8
   14b30:	ldr	r1, [pc, #552]	; 14d60 <table_cell_from_buffer@@Base+0x56c>
   14b34:	mov	r0, r4
   14b38:	bl	11bb0 <__isoc99_sscanf@plt>
   14b3c:	cmp	r0, #1
   14b40:	bne	14d40 <table_cell_from_buffer@@Base+0x54c>
   14b44:	ldrd	r2, [sp, #8]
   14b48:	mov	r1, r7
   14b4c:	mov	r0, r6
   14b50:	strd	r2, [sp]
   14b54:	mov	r2, r5
   14b58:	bl	13dc4 <table_set_llong@@Base>
   14b5c:	b	148ac <table_cell_from_buffer@@Base+0xb8>
   14b60:	add	r2, sp, #8
   14b64:	ldr	r1, [pc, #504]	; 14d64 <table_cell_from_buffer@@Base+0x570>
   14b68:	mov	r0, r4
   14b6c:	bl	11bb0 <__isoc99_sscanf@plt>
   14b70:	cmp	r0, #1
   14b74:	bne	14d40 <table_cell_from_buffer@@Base+0x54c>
   14b78:	ldrd	r2, [sp, #8]
   14b7c:	mov	r1, r7
   14b80:	mov	r0, r6
   14b84:	strd	r2, [sp]
   14b88:	mov	r2, r5
   14b8c:	bl	13de0 <table_set_ullong@@Base>
   14b90:	b	148ac <table_cell_from_buffer@@Base+0xb8>
   14b94:	add	r2, sp, #8
   14b98:	ldr	r1, [pc, #464]	; 14d70 <table_cell_from_buffer@@Base+0x57c>
   14b9c:	mov	r0, r4
   14ba0:	bl	11bb0 <__isoc99_sscanf@plt>
   14ba4:	cmp	r0, #1
   14ba8:	bne	14d40 <table_cell_from_buffer@@Base+0x54c>
   14bac:	add	r3, sp, #8
   14bb0:	mov	r2, r5
   14bb4:	mov	r1, r7
   14bb8:	mov	r0, r6
   14bbc:	bl	13e5c <table_set_string@@Base>
   14bc0:	b	148ac <table_cell_from_buffer@@Base+0xb8>
   14bc4:	add	r2, sp, #8
   14bc8:	ldr	r1, [pc, #420]	; 14d74 <table_cell_from_buffer@@Base+0x580>
   14bcc:	mov	r0, r4
   14bd0:	bl	11bb0 <__isoc99_sscanf@plt>
   14bd4:	cmp	r0, #1
   14bd8:	bne	14d40 <table_cell_from_buffer@@Base+0x54c>
   14bdc:	mov	r2, r5
   14be0:	mov	r1, r7
   14be4:	vldr	s0, [sp, #8]
   14be8:	mov	r0, r6
   14bec:	bl	13dfc <table_set_float@@Base>
   14bf0:	b	148ac <table_cell_from_buffer@@Base+0xb8>
   14bf4:	add	r2, sp, #8
   14bf8:	ldr	r1, [pc, #376]	; 14d78 <table_cell_from_buffer@@Base+0x584>
   14bfc:	mov	r0, r4
   14c00:	bl	11bb0 <__isoc99_sscanf@plt>
   14c04:	cmp	r0, #1
   14c08:	bne	14d40 <table_cell_from_buffer@@Base+0x54c>
   14c0c:	mov	r2, r5
   14c10:	mov	r1, r7
   14c14:	vldr	d0, [sp, #8]
   14c18:	mov	r0, r6
   14c1c:	bl	13e1c <table_set_double@@Base>
   14c20:	b	148ac <table_cell_from_buffer@@Base+0xb8>
   14c24:	add	r2, sp, #8
   14c28:	ldr	r1, [pc, #332]	; 14d7c <table_cell_from_buffer@@Base+0x588>
   14c2c:	mov	r0, r4
   14c30:	bl	11bb0 <__isoc99_sscanf@plt>
   14c34:	cmp	r0, #1
   14c38:	bne	14d40 <table_cell_from_buffer@@Base+0x54c>
   14c3c:	mov	r2, r5
   14c40:	mov	r1, r7
   14c44:	vldr	d0, [sp, #8]
   14c48:	mov	r0, r6
   14c4c:	bl	13e3c <table_set_ldouble@@Base>
   14c50:	b	148ac <table_cell_from_buffer@@Base+0xb8>
   14c54:	add	r2, sp, #8
   14c58:	ldr	r1, [pc, #232]	; 14d48 <table_cell_from_buffer@@Base+0x554>
   14c5c:	mov	r0, r4
   14c60:	bl	11bb0 <__isoc99_sscanf@plt>
   14c64:	cmp	r0, #1
   14c68:	mov	r3, r0
   14c6c:	bne	14d40 <table_cell_from_buffer@@Base+0x54c>
   14c70:	ldr	r4, [sp, #8]
   14c74:	cmp	r4, #0
   14c78:	beq	14c90 <table_cell_from_buffer@@Base+0x49c>
   14c7c:	mov	r2, r5
   14c80:	mov	r1, r7
   14c84:	mov	r0, r6
   14c88:	bl	13bec <table_set_bool@@Base>
   14c8c:	b	148ac <table_cell_from_buffer@@Base+0xb8>
   14c90:	mov	r3, r4
   14c94:	mov	r2, r5
   14c98:	mov	r1, r7
   14c9c:	mov	r0, r6
   14ca0:	bl	13bec <table_set_bool@@Base>
   14ca4:	mov	r0, r4
   14ca8:	add	sp, sp, #268	; 0x10c
   14cac:	pop	{r4, r5, r6, r7, pc}
   14cb0:	add	r2, sp, #8
   14cb4:	ldr	r1, [pc, #196]	; 14d80 <table_cell_from_buffer@@Base+0x58c>
   14cb8:	mov	r0, r4
   14cbc:	bl	11bb0 <__isoc99_sscanf@plt>
   14cc0:	cmp	r0, #1
   14cc4:	bne	14d40 <table_cell_from_buffer@@Base+0x54c>
   14cc8:	ldrb	r3, [sp, #8]
   14ccc:	mov	r2, r5
   14cd0:	mov	r1, r7
   14cd4:	mov	r0, r6
   14cd8:	bl	13e74 <table_set_char@@Base>
   14cdc:	b	148ac <table_cell_from_buffer@@Base+0xb8>
   14ce0:	add	r2, sp, #8
   14ce4:	ldr	r1, [pc, #148]	; 14d80 <table_cell_from_buffer@@Base+0x58c>
   14ce8:	mov	r0, r4
   14cec:	bl	11bb0 <__isoc99_sscanf@plt>
   14cf0:	cmp	r0, #1
   14cf4:	bne	14d40 <table_cell_from_buffer@@Base+0x54c>
   14cf8:	ldrb	r3, [sp, #8]
   14cfc:	mov	r2, r5
   14d00:	mov	r1, r7
   14d04:	mov	r0, r6
   14d08:	bl	13e94 <table_set_uchar@@Base>
   14d0c:	b	148ac <table_cell_from_buffer@@Base+0xb8>
   14d10:	add	r2, sp, #8
   14d14:	ldr	r1, [pc, #104]	; 14d84 <table_cell_from_buffer@@Base+0x590>
   14d18:	mov	r0, r4
   14d1c:	bl	11bb0 <__isoc99_sscanf@plt>
   14d20:	cmp	r0, #1
   14d24:	bne	14d40 <table_cell_from_buffer@@Base+0x54c>
   14d28:	mov	r2, r5
   14d2c:	mov	r1, r7
   14d30:	ldr	r3, [sp, #8]
   14d34:	mov	r0, r6
   14d38:	bl	13eb4 <table_set_ptr@@Base>
   14d3c:	b	148ac <table_cell_from_buffer@@Base+0xb8>
   14d40:	mvn	r4, #0
   14d44:	b	14ca4 <table_cell_from_buffer@@Base+0x4b0>
   14d48:	andeq	r4, r1, r3, lsl pc
   14d4c:	andeq	r4, r1, ip, lsr #31
   14d50:	ldrdeq	r4, [r1], -sp
   14d54:	andeq	r4, r1, r2, ror #31
   14d58:			; <UNDEFINED> instruction: 0x00014fb9
   14d5c:			; <UNDEFINED> instruction: 0x00014fbd
   14d60:	andeq	r4, r1, pc, lsr #31
   14d64:			; <UNDEFINED> instruction: 0x00014fb4
   14d68:	andeq	r4, r1, r1, asr #31
   14d6c:	andeq	r4, r1, r5, asr #31
   14d70:	andeq	r4, r1, r9, asr #31
   14d74:	andeq	r4, r1, ip, asr #31
   14d78:	andeq	r4, r1, pc, asr #31
   14d7c:	ldrdeq	r4, [r1], -r3
   14d80:	ldrdeq	r4, [r1], -r7
   14d84:	ldrdeq	r4, [r1], -sl

00014d88 <table_get_cell_ptr@@Base>:
   14d88:	push	{r4, lr}
   14d8c:	mov	r4, r2
   14d90:	bl	138f0 <table_get_row_ptr@@Base>
   14d94:	ldr	r0, [r0]
   14d98:	add	r0, r0, r4, lsl #2
   14d9c:	pop	{r4, pc}

00014da0 <table_cell_init@@Base>:
   14da0:	push	{r4, lr}
   14da4:	bl	14d88 <table_get_cell_ptr@@Base>
   14da8:	mov	r3, #0
   14dac:	str	r3, [r0]
   14db0:	pop	{r4, pc}

00014db4 <table_cell_destroy@@Base>:
   14db4:	push	{r4, r5, r6, lr}
   14db8:	mov	r6, r1
   14dbc:	mov	r1, r2
   14dc0:	mov	r5, r0
   14dc4:	mov	r4, r2
   14dc8:	bl	12c90 <table_get_column_data_type@@Base>
   14dcc:	cmp	r0, #23
   14dd0:	popeq	{r4, r5, r6, pc}
   14dd4:	mov	r2, r4
   14dd8:	mov	r1, r6
   14ddc:	mov	r0, r5
   14de0:	bl	14d88 <table_get_cell_ptr@@Base>
   14de4:	ldr	r0, [r0]
   14de8:	cmp	r0, #0
   14dec:	popeq	{r4, r5, r6, pc}
   14df0:	pop	{r4, r5, r6, lr}
   14df4:	b	11b38 <free@plt>

00014df8 <table_cell_nullify@@Base>:
   14df8:	push	{r4, lr}
   14dfc:	bl	14d88 <table_get_cell_ptr@@Base>
   14e00:	mov	r4, r0
   14e04:	ldr	r0, [r0]
   14e08:	cmp	r0, #0
   14e0c:	beq	14e1c <table_cell_nullify@@Base+0x24>
   14e10:	bl	11b38 <free@plt>
   14e14:	mov	r3, #0
   14e18:	str	r3, [r4]
   14e1c:	mov	r0, #0
   14e20:	pop	{r4, pc}

00014e24 <__libc_csu_init@@Base>:
   14e24:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14e28:	mov	r7, r0
   14e2c:	ldr	r6, [pc, #72]	; 14e7c <__libc_csu_init@@Base+0x58>
   14e30:	ldr	r5, [pc, #72]	; 14e80 <__libc_csu_init@@Base+0x5c>
   14e34:	add	r6, pc, r6
   14e38:	add	r5, pc, r5
   14e3c:	sub	r6, r6, r5
   14e40:	mov	r8, r1
   14e44:	mov	r9, r2
   14e48:	bl	11b00 <strcmp@plt-0x20>
   14e4c:	asrs	r6, r6, #2
   14e50:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14e54:	mov	r4, #0
   14e58:	add	r4, r4, #1
   14e5c:	ldr	r3, [r5], #4
   14e60:	mov	r2, r9
   14e64:	mov	r1, r8
   14e68:	mov	r0, r7
   14e6c:	blx	r3
   14e70:	cmp	r6, r4
   14e74:	bne	14e58 <__libc_csu_init@@Base+0x34>
   14e78:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14e7c:	ldrdeq	r1, [r1], -r8
   14e80:	ldrdeq	r1, [r1], -r0

00014e84 <__libc_csu_fini@@Base>:
   14e84:	bx	lr

Disassembly of section .fini:

00014e88 <.fini>:
   14e88:	push	{r3, lr}
   14e8c:	pop	{r3, pc}
