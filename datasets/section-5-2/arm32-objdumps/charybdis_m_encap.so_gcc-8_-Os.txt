
../repos/charybdis/modules/.libs/m_encap.so:     file format elf32-littlearm


Disassembly of section .init:

00000468 <_init>:
 468:	push	{r3, lr}
 46c:	bl	4dc <call_weak_fn>
 470:	pop	{r3, pc}

Disassembly of section .plt:

00000474 <.plt>:
 474:	push	{lr}		; (str lr, [sp, #-4]!)
 478:	ldr	lr, [pc, #4]	; 484 <.plt+0x10>
 47c:	add	lr, pc, lr
 480:	ldr	pc, [lr, #8]!
 484:	.word	0x00010b7c

00000488 <sendto_match_servs@plt>:
 488:	add	ip, pc, #0, 12
 48c:	add	ip, ip, #16, 20	; 0x10000
 490:	ldr	pc, [ip, #2940]!	; 0xb7c

00000494 <__cxa_finalize@plt>:
 494:	add	ip, pc, #0, 12
 498:	add	ip, ip, #16, 20	; 0x10000
 49c:	ldr	pc, [ip, #2932]!	; 0xb74

000004a0 <__gmon_start__@plt>:
 4a0:	add	ip, pc, #0, 12
 4a4:	add	ip, ip, #16, 20	; 0x10000
 4a8:	ldr	pc, [ip, #2924]!	; 0xb6c

000004ac <strlen@plt>:
 4ac:	add	ip, pc, #0, 12
 4b0:	add	ip, ip, #16, 20	; 0x10000
 4b4:	ldr	pc, [ip, #2916]!	; 0xb64

000004b8 <snprintf@plt>:
 4b8:	add	ip, pc, #0, 12
 4bc:	add	ip, ip, #16, 20	; 0x10000
 4c0:	ldr	pc, [ip, #2908]!	; 0xb5c

000004c4 <handle_encap@plt>:
 4c4:	add	ip, pc, #0, 12
 4c8:	add	ip, ip, #16, 20	; 0x10000
 4cc:	ldr	pc, [ip, #2900]!	; 0xb54

000004d0 <match@plt>:
 4d0:	add	ip, pc, #0, 12
 4d4:	add	ip, ip, #16, 20	; 0x10000
 4d8:	ldr	pc, [ip, #2892]!	; 0xb4c

Disassembly of section .text:

000004dc <call_weak_fn>:
 4dc:	ldr	r3, [pc, #20]	; 4f8 <call_weak_fn+0x1c>
 4e0:	ldr	r2, [pc, #20]	; 4fc <call_weak_fn+0x20>
 4e4:	add	r3, pc, r3
 4e8:	ldr	r2, [r3, r2]
 4ec:	cmp	r2, #0
 4f0:	bxeq	lr
 4f4:	b	4a0 <__gmon_start__@plt>
 4f8:	.word	0x00010b14
 4fc:	.word	0x00000030

00000500 <deregister_tm_clones>:
 500:	ldr	r0, [pc, #44]	; 534 <deregister_tm_clones+0x34>
 504:	ldr	r3, [pc, #44]	; 538 <deregister_tm_clones+0x38>
 508:	add	r0, pc, r0
 50c:	add	r3, pc, r3
 510:	cmp	r3, r0
 514:	ldr	r3, [pc, #32]	; 53c <deregister_tm_clones+0x3c>
 518:	add	r3, pc, r3
 51c:	bxeq	lr
 520:	ldr	r2, [pc, #24]	; 540 <deregister_tm_clones+0x40>
 524:	ldr	r3, [r3, r2]
 528:	cmp	r3, #0
 52c:	bxeq	lr
 530:	bx	r3
 534:	.word	0x00010ba8
 538:	.word	0x00010ba4
 53c:	.word	0x00010ae0
 540:	.word	0x0000002c

00000544 <register_tm_clones>:
 544:	ldr	r0, [pc, #56]	; 584 <register_tm_clones+0x40>
 548:	ldr	r3, [pc, #56]	; 588 <register_tm_clones+0x44>
 54c:	add	r0, pc, r0
 550:	add	r3, pc, r3
 554:	sub	r1, r3, r0
 558:	ldr	r3, [pc, #44]	; 58c <register_tm_clones+0x48>
 55c:	asr	r1, r1, #2
 560:	add	r3, pc, r3
 564:	add	r1, r1, r1, lsr #31
 568:	asrs	r1, r1, #1
 56c:	bxeq	lr
 570:	ldr	r2, [pc, #24]	; 590 <register_tm_clones+0x4c>
 574:	ldr	r3, [r3, r2]
 578:	cmp	r3, #0
 57c:	bxeq	lr
 580:	bx	r3
 584:	.word	0x00010b64
 588:	.word	0x00010b60
 58c:	.word	0x00010a98
 590:	.word	0x00000034

00000594 <__do_global_dtors_aux>:
 594:	ldr	r3, [pc, #76]	; 5e8 <__do_global_dtors_aux+0x54>
 598:	ldr	r2, [pc, #76]	; 5ec <__do_global_dtors_aux+0x58>
 59c:	add	r3, pc, r3
 5a0:	add	r2, pc, r2
 5a4:	ldrb	r3, [r3]
 5a8:	cmp	r3, #0
 5ac:	bxne	lr
 5b0:	ldr	r3, [pc, #56]	; 5f0 <__do_global_dtors_aux+0x5c>
 5b4:	push	{r4, lr}
 5b8:	ldr	r3, [r2, r3]
 5bc:	cmp	r3, #0
 5c0:	beq	5d0 <__do_global_dtors_aux+0x3c>
 5c4:	ldr	r3, [pc, #40]	; 5f4 <__do_global_dtors_aux+0x60>
 5c8:	ldr	r0, [pc, r3]
 5cc:	bl	494 <__cxa_finalize@plt>
 5d0:	bl	500 <deregister_tm_clones>
 5d4:	ldr	r3, [pc, #28]	; 5f8 <__do_global_dtors_aux+0x64>
 5d8:	mov	r2, #1
 5dc:	add	r3, pc, r3
 5e0:	strb	r2, [r3]
 5e4:	pop	{r4, pc}
 5e8:	.word	0x00010b14
 5ec:	.word	0x00010a58
 5f0:	.word	0x00000028
 5f4:	.word	0x00010a70
 5f8:	.word	0x00010ad4

000005fc <frame_dummy>:
 5fc:	b	544 <register_tm_clones>

00000600 <ms_encap>:
 600:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 604:	mov	r6, r3
 608:	sub	sp, sp, #556	; 0x22c
 60c:	sub	r3, r3, #1
 610:	add	r7, sp, #40	; 0x28
 614:	mov	r9, #1
 618:	mov	r5, #0
 61c:	ldr	sl, [pc, #300]	; 750 <ms_encap+0x150>
 620:	str	r3, [sp, #24]
 624:	ldr	r3, [pc, #296]	; 754 <ms_encap+0x154>
 628:	str	r2, [sp, #12]
 62c:	ldr	r4, [sp, #592]	; 0x250
 630:	add	sl, pc, sl
 634:	strd	r0, [sp, #16]
 638:	str	r7, [sp, #28]
 63c:	add	r3, pc, r3
 640:	str	r3, [sp, #32]
 644:	ldr	r3, [r4, r9, lsl #2]
 648:	mov	r0, r3
 64c:	str	r3, [sp, #36]	; 0x24
 650:	bl	4ac <strlen@plt>
 654:	ldr	r3, [sp, #24]
 658:	mov	r8, r0
 65c:	cmp	r3, r9
 660:	ldr	r3, [sp, #36]	; 0x24
 664:	bgt	70c <ms_encap+0x10c>
 668:	cmp	r6, #3
 66c:	rsb	r1, r5, #512	; 0x200
 670:	bne	73c <ms_encap+0x13c>
 674:	ldr	r2, [pc, #220]	; 758 <ms_encap+0x158>
 678:	ldr	r3, [r4, #8]
 67c:	add	r2, pc, r2
 680:	mov	r0, r7
 684:	add	r8, r5, r8
 688:	bl	4b8 <snprintf@plt>
 68c:	cmp	r8, #512	; 0x200
 690:	ldr	r0, [sp, #12]
 694:	movge	r3, #0
 698:	strbge	r3, [sp, #551]	; 0x227
 69c:	ldr	r3, [pc, #184]	; 75c <ms_encap+0x15c>
 6a0:	ldr	r2, [sl, r3]
 6a4:	ldr	r3, [sp, #28]
 6a8:	str	r3, [sp, #4]
 6ac:	ldr	r3, [pc, #172]	; 760 <ms_encap+0x160>
 6b0:	add	r3, pc, r3
 6b4:	str	r3, [sp]
 6b8:	mov	r3, #0
 6bc:	ldr	r2, [r2]
 6c0:	ldr	r1, [r4, #4]
 6c4:	bl	488 <sendto_match_servs@plt>
 6c8:	ldr	r3, [pc, #148]	; 764 <ms_encap+0x164>
 6cc:	ldr	r0, [r4, #4]
 6d0:	ldr	r1, [sl, r3]
 6d4:	add	r1, r1, #88	; 0x58
 6d8:	bl	4d0 <match@plt>
 6dc:	cmp	r0, #0
 6e0:	beq	704 <ms_encap+0x104>
 6e4:	add	r3, r4, #8
 6e8:	sub	r6, r6, #2
 6ec:	ldr	r2, [sp, #12]
 6f0:	str	r6, [sp]
 6f4:	str	r3, [sp, #4]
 6f8:	ldr	r3, [r4, #8]
 6fc:	ldrd	r0, [sp, #16]
 700:	bl	4c4 <handle_encap@plt>
 704:	add	sp, sp, #556	; 0x22c
 708:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 70c:	add	r8, r8, #1
 710:	add	fp, r8, r5
 714:	cmp	fp, #512	; 0x200
 718:	bge	704 <ms_encap+0x104>
 71c:	rsb	r1, r5, #512	; 0x200
 720:	mov	r0, r7
 724:	ldr	r2, [sp, #32]
 728:	add	r7, r7, r8
 72c:	add	r9, r9, #1
 730:	mov	r5, fp
 734:	bl	4b8 <snprintf@plt>
 738:	b	644 <ms_encap+0x44>
 73c:	ldr	r2, [pc, #36]	; 768 <ms_encap+0x168>
 740:	sub	r3, r6, #-1073741823	; 0xc0000001
 744:	ldr	r3, [r4, r3, lsl #2]
 748:	add	r2, pc, r2
 74c:	b	680 <ms_encap+0x80>
 750:	.word	0x000109c8
 754:	.word	0x00000150
 758:	.word	0x0000011e
 75c:	.word	0x0000003c
 760:	.word	0x000000e4
 764:	.word	0x00000038
 768:	.word	0x00000048

Disassembly of section .fini:

0000076c <_fini>:
 76c:	push	{r3, lr}
 770:	pop	{r3, pc}
