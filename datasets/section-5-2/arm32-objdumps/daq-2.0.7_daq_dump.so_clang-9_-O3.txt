
../repos/daq-2.0.7/os-daq-modules/.libs/daq_dump.so:     file format elf32-littlearm


Disassembly of section .init:

000005f0 <_init>:
 5f0:	push	{r3, lr}
 5f4:	bl	6c4 <call_weak_fn>
 5f8:	pop	{r3, pc}

Disassembly of section .plt:

000005fc <.plt>:
 5fc:	push	{lr}		; (str lr, [sp, #-4]!)
 600:	ldr	lr, [pc, #4]	; 60c <.plt+0x10>
 604:	add	lr, pc, lr
 608:	ldr	pc, [lr, #8]!
 60c:	.word	0x000119f4

00000610 <calloc@plt>:
 610:	add	ip, pc, #0, 12
 614:	add	ip, ip, #69632	; 0x11000
 618:	ldr	pc, [ip, #2548]!	; 0x9f4

0000061c <strcmp@plt>:
 61c:	add	ip, pc, #0, 12
 620:	add	ip, ip, #69632	; 0x11000
 624:	ldr	pc, [ip, #2540]!	; 0x9ec

00000628 <__cxa_finalize@plt>:
 628:	add	ip, pc, #0, 12
 62c:	add	ip, ip, #69632	; 0x11000
 630:	ldr	pc, [ip, #2532]!	; 0x9e4

00000634 <free@plt>:
 634:	add	ip, pc, #0, 12
 638:	add	ip, ip, #69632	; 0x11000
 63c:	ldr	pc, [ip, #2524]!	; 0x9dc

00000640 <ferror@plt>:
 640:	add	ip, pc, #0, 12
 644:	add	ip, ip, #69632	; 0x11000
 648:	ldr	pc, [ip, #2516]!	; 0x9d4

0000064c <strdup@plt>:
 64c:	add	ip, pc, #0, 12
 650:	add	ip, ip, #69632	; 0x11000
 654:	ldr	pc, [ip, #2508]!	; 0x9cc

00000658 <pcap_close@plt>:
 658:	add	ip, pc, #0, 12
 65c:	add	ip, ip, #69632	; 0x11000
 660:	ldr	pc, [ip, #2500]!	; 0x9c4

00000664 <strcasecmp@plt>:
 664:	add	ip, pc, #0, 12
 668:	add	ip, ip, #69632	; 0x11000
 66c:	ldr	pc, [ip, #2492]!	; 0x9bc

00000670 <pcap_open_dead@plt>:
 670:	add	ip, pc, #0, 12
 674:	add	ip, ip, #69632	; 0x11000
 678:	ldr	pc, [ip, #2484]!	; 0x9b4

0000067c <pcap_dump@plt>:
 67c:	add	ip, pc, #0, 12
 680:	add	ip, ip, #69632	; 0x11000
 684:	ldr	pc, [ip, #2476]!	; 0x9ac

00000688 <__gmon_start__@plt>:
 688:	add	ip, pc, #0, 12
 68c:	add	ip, ip, #69632	; 0x11000
 690:	ldr	pc, [ip, #2468]!	; 0x9a4

00000694 <snprintf@plt>:
 694:	add	ip, pc, #0, 12
 698:	add	ip, ip, #69632	; 0x11000
 69c:	ldr	pc, [ip, #2460]!	; 0x99c

000006a0 <pcap_dump_file@plt>:
 6a0:	add	ip, pc, #0, 12
 6a4:	add	ip, ip, #69632	; 0x11000
 6a8:	ldr	pc, [ip, #2452]!	; 0x994

000006ac <pcap_dump_close@plt>:
 6ac:	add	ip, pc, #0, 12
 6b0:	add	ip, ip, #69632	; 0x11000
 6b4:	ldr	pc, [ip, #2444]!	; 0x98c

000006b8 <pcap_dump_open@plt>:
 6b8:	add	ip, pc, #0, 12
 6bc:	add	ip, ip, #69632	; 0x11000
 6c0:	ldr	pc, [ip, #2436]!	; 0x984

Disassembly of section .text:

000006c4 <call_weak_fn>:
 6c4:	ldr	r3, [pc, #20]	; 6e0 <call_weak_fn+0x1c>
 6c8:	ldr	r2, [pc, #20]	; 6e4 <call_weak_fn+0x20>
 6cc:	add	r3, pc, r3
 6d0:	ldr	r2, [r3, r2]
 6d4:	cmp	r2, #0
 6d8:	bxeq	lr
 6dc:	b	688 <__gmon_start__@plt>
 6e0:	.word	0x0001192c
 6e4:	.word	0x00000050

000006e8 <deregister_tm_clones>:
 6e8:	ldr	r0, [pc, #44]	; 71c <deregister_tm_clones+0x34>
 6ec:	ldr	r3, [pc, #44]	; 720 <deregister_tm_clones+0x38>
 6f0:	add	r0, pc, r0
 6f4:	add	r3, pc, r3
 6f8:	cmp	r3, r0
 6fc:	ldr	r3, [pc, #32]	; 724 <deregister_tm_clones+0x3c>
 700:	add	r3, pc, r3
 704:	bxeq	lr
 708:	ldr	r2, [pc, #24]	; 728 <deregister_tm_clones+0x40>
 70c:	ldr	r3, [r3, r2]
 710:	cmp	r3, #0
 714:	bxeq	lr
 718:	bx	r3
 71c:	.word	0x000119cc
 720:	.word	0x000119c8
 724:	.word	0x000118f8
 728:	.word	0x0000004c

0000072c <register_tm_clones>:
 72c:	ldr	r0, [pc, #56]	; 76c <register_tm_clones+0x40>
 730:	ldr	r3, [pc, #56]	; 770 <register_tm_clones+0x44>
 734:	add	r0, pc, r0
 738:	add	r3, pc, r3
 73c:	sub	r1, r3, r0
 740:	ldr	r3, [pc, #44]	; 774 <register_tm_clones+0x48>
 744:	asr	r1, r1, #2
 748:	add	r3, pc, r3
 74c:	add	r1, r1, r1, lsr #31
 750:	asrs	r1, r1, #1
 754:	bxeq	lr
 758:	ldr	r2, [pc, #24]	; 778 <register_tm_clones+0x4c>
 75c:	ldr	r3, [r3, r2]
 760:	cmp	r3, #0
 764:	bxeq	lr
 768:	bx	r3
 76c:	.word	0x00011988
 770:	.word	0x00011984
 774:	.word	0x000118b0
 778:	.word	0x00000054

0000077c <__do_global_dtors_aux>:
 77c:	ldr	r3, [pc, #76]	; 7d0 <__do_global_dtors_aux+0x54>
 780:	ldr	r2, [pc, #76]	; 7d4 <__do_global_dtors_aux+0x58>
 784:	add	r3, pc, r3
 788:	add	r2, pc, r2
 78c:	ldrb	r3, [r3]
 790:	cmp	r3, #0
 794:	bxne	lr
 798:	ldr	r3, [pc, #56]	; 7d8 <__do_global_dtors_aux+0x5c>
 79c:	push	{r4, lr}
 7a0:	ldr	r3, [r2, r3]
 7a4:	cmp	r3, #0
 7a8:	beq	7b8 <__do_global_dtors_aux+0x3c>
 7ac:	ldr	r3, [pc, #40]	; 7dc <__do_global_dtors_aux+0x60>
 7b0:	ldr	r0, [pc, r3]
 7b4:	bl	628 <__cxa_finalize@plt>
 7b8:	bl	6e8 <deregister_tm_clones>
 7bc:	ldr	r3, [pc, #28]	; 7e0 <__do_global_dtors_aux+0x64>
 7c0:	mov	r2, #1
 7c4:	add	r3, pc, r3
 7c8:	strb	r2, [r3]
 7cc:	pop	{r4, pc}
 7d0:	.word	0x00011938
 7d4:	.word	0x00011870
 7d8:	.word	0x00000048
 7dc:	.word	0x000118a0
 7e0:	.word	0x000118f8

000007e4 <frame_dummy>:
 7e4:	b	72c <register_tm_clones>

000007e8 <dump_daq_initialize>:
 7e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 7ec:	add	fp, sp, #28
 7f0:	sub	sp, sp, #44	; 0x2c
 7f4:	mov	r6, r1
 7f8:	mov	r5, r0
 7fc:	mov	r0, #1
 800:	mov	r1, #120	; 0x78
 804:	mov	r8, r3
 808:	mov	r7, r2
 80c:	bl	610 <calloc@plt>
 810:	mov	r4, r0
 814:	mov	r0, #12
 818:	ldr	r9, [r5, #24]
 81c:	add	r1, sp, #16
 820:	vld1.32	{d16-d17}, [r5], r0
 824:	cmp	r4, #0
 828:	vld1.32	{d18-d19}, [r5]
 82c:	vst1.64	{d16-d17}, [r1], r0
 830:	vst1.32	{d18-d19}, [r1]
 834:	beq	880 <dump_daq_initialize+0x98>
 838:	cmp	r9, #0
 83c:	beq	84c <dump_daq_initialize+0x64>
 840:	ldrb	r0, [r9, #12]
 844:	tst	r0, #1
 848:	bne	8ac <dump_daq_initialize+0xc4>
 84c:	ldr	r2, [pc, #444]	; a10 <dump_daq_initialize+0x228>
 850:	ldr	r3, [pc, #444]	; a14 <dump_daq_initialize+0x22c>
 854:	mov	r0, r7
 858:	mov	r1, r8
 85c:	add	r2, pc, r2
 860:	add	r3, pc, r3
 864:	bl	694 <snprintf@plt>
 868:	mov	r0, r4
 86c:	bl	634 <free@plt>
 870:	mvn	r5, #0
 874:	mov	r0, r5
 878:	sub	sp, fp, #28
 87c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 880:	ldr	r2, [pc, #384]	; a08 <dump_daq_initialize+0x220>
 884:	ldr	r3, [pc, #384]	; a0c <dump_daq_initialize+0x224>
 888:	mov	r0, r7
 88c:	mov	r1, r8
 890:	add	r2, pc, r2
 894:	add	r3, pc, r3
 898:	bl	694 <snprintf@plt>
 89c:	mvn	r5, #1
 8a0:	mov	r0, r5
 8a4:	sub	sp, fp, #28
 8a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8ac:	ldr	sl, [sp, #36]	; 0x24
 8b0:	str	r6, [sp, #8]
 8b4:	str	r7, [sp, #12]
 8b8:	cmp	sl, #0
 8bc:	beq	9b4 <dump_daq_initialize+0x1cc>
 8c0:	str	r8, [sp, #4]
 8c4:	mov	r7, #0
 8c8:	ldr	r5, [pc, #328]	; a18 <dump_daq_initialize+0x230>
 8cc:	ldr	r6, [pc, #328]	; a1c <dump_daq_initialize+0x234>
 8d0:	add	r5, pc, r5
 8d4:	add	r6, pc, r6
 8d8:	b	8ec <dump_daq_initialize+0x104>
 8dc:	ldr	r7, [sl, #4]
 8e0:	ldr	sl, [sl, #8]
 8e4:	cmp	sl, #0
 8e8:	beq	930 <dump_daq_initialize+0x148>
 8ec:	ldr	r8, [sl]
 8f0:	mov	r1, r5
 8f4:	mov	r0, r8
 8f8:	bl	61c <strcmp@plt>
 8fc:	cmp	r0, #0
 900:	beq	8dc <dump_daq_initialize+0xf4>
 904:	mov	r0, r8
 908:	mov	r1, r6
 90c:	bl	61c <strcmp@plt>
 910:	cmp	r0, #0
 914:	bne	8e0 <dump_daq_initialize+0xf8>
 918:	ldr	r0, [sl, #4]
 91c:	bl	64c <strdup@plt>
 920:	str	r0, [r4, #12]
 924:	ldr	sl, [sl, #8]
 928:	cmp	sl, #0
 92c:	bne	8ec <dump_daq_initialize+0x104>
 930:	ldr	r8, [sp, #4]
 934:	cmp	r7, #0
 938:	beq	9b4 <dump_daq_initialize+0x1cc>
 93c:	ldr	r1, [pc, #220]	; a20 <dump_daq_initialize+0x238>
 940:	mov	r0, r7
 944:	add	r1, pc, r1
 948:	bl	664 <strcasecmp@plt>
 94c:	cmp	r0, #0
 950:	beq	99c <dump_daq_initialize+0x1b4>
 954:	ldr	r1, [pc, #200]	; a24 <dump_daq_initialize+0x23c>
 958:	mov	r0, r7
 95c:	add	r1, pc, r1
 960:	bl	664 <strcasecmp@plt>
 964:	cmp	r0, #0
 968:	beq	9a4 <dump_daq_initialize+0x1bc>
 96c:	ldr	r1, [pc, #180]	; a28 <dump_daq_initialize+0x240>
 970:	mov	r0, r7
 974:	add	r1, pc, r1
 978:	bl	664 <strcasecmp@plt>
 97c:	cmp	r0, #0
 980:	beq	9ac <dump_daq_initialize+0x1c4>
 984:	ldr	r2, [pc, #160]	; a2c <dump_daq_initialize+0x244>
 988:	ldr	r0, [sp, #12]
 98c:	mov	r1, r8
 990:	mov	r3, r7
 994:	add	r2, pc, r2
 998:	b	864 <dump_daq_initialize+0x7c>
 99c:	mov	r0, #2
 9a0:	b	9b0 <dump_daq_initialize+0x1c8>
 9a4:	mov	r0, #0
 9a8:	b	9b0 <dump_daq_initialize+0x1c8>
 9ac:	mov	r0, #1
 9b0:	str	r0, [sp, #28]
 9b4:	ldr	r7, [r9, #16]
 9b8:	ldr	r2, [sp, #12]
 9bc:	add	r1, r4, #4
 9c0:	add	r0, sp, #16
 9c4:	mov	r3, r8
 9c8:	blx	r7
 9cc:	cmp	r0, #0
 9d0:	beq	9ec <dump_daq_initialize+0x204>
 9d4:	mov	r5, r0
 9d8:	mov	r0, r4
 9dc:	bl	634 <free@plt>
 9e0:	mov	r0, r5
 9e4:	sub	sp, fp, #28
 9e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 9ec:	ldr	r0, [sp, #8]
 9f0:	mov	r5, #0
 9f4:	str	r9, [r4]
 9f8:	str	r4, [r0]
 9fc:	mov	r0, r5
 a00:	sub	sp, fp, #28
 a04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 a08:	.word	0x00000619
 a0c:	.word	0x00000646
 a10:	.word	0x00000692
 a14:	.word	0x0000067a
 a18:	.word	0x0000063f
 a1c:	.word	0x00000695
 a20:	.word	0x000005d5
 a24:	.word	0x000005c7
 a28:	.word	0x000005b7
 a2c:	.word	0x0000059e

00000a30 <dump_daq_set_filter>:
 a30:	ldm	r0, {r0, r3}
 a34:	ldr	r2, [r0, #20]
 a38:	mov	r0, r3
 a3c:	bx	r2

00000a40 <dump_daq_start>:
 a40:	push	{r4, r5, r6, sl, fp, lr}
 a44:	add	fp, sp, #16
 a48:	mov	r4, r0
 a4c:	ldrd	r0, [r0]
 a50:	ldr	r2, [r4, #12]
 a54:	ldr	r5, [pc, #180]	; b10 <dump_daq_start+0xd0>
 a58:	cmp	r2, #0
 a5c:	add	r5, pc, r5
 a60:	movne	r5, r2
 a64:	ldr	r2, [r0, #24]
 a68:	mov	r0, r1
 a6c:	blx	r2
 a70:	cmp	r0, #0
 a74:	popne	{r4, r5, r6, sl, fp, pc}
 a78:	ldrd	r0, [r4]
 a7c:	ldr	r2, [r0, #68]	; 0x44
 a80:	mov	r0, r1
 a84:	blx	r2
 a88:	mov	r6, r0
 a8c:	ldrd	r0, [r4]
 a90:	ldr	r2, [r0, #60]	; 0x3c
 a94:	mov	r0, r1
 a98:	blx	r2
 a9c:	mov	r1, r0
 aa0:	mov	r0, r6
 aa4:	bl	670 <pcap_open_dead@plt>
 aa8:	cmp	r0, #0
 aac:	beq	ad8 <dump_daq_start+0x98>
 ab0:	mov	r1, r5
 ab4:	mov	r6, r0
 ab8:	bl	6b8 <pcap_dump_open@plt>
 abc:	cmp	r0, #0
 ac0:	str	r0, [r4, #8]
 ac4:	beq	ae0 <dump_daq_start+0xa0>
 ac8:	mov	r0, r6
 acc:	bl	658 <pcap_close@plt>
 ad0:	mov	r0, #0
 ad4:	pop	{r4, r5, r6, sl, fp, pc}
 ad8:	mov	r0, #0
 adc:	str	r0, [r4, #8]
 ae0:	ldrd	r0, [r4]
 ae4:	ldr	r2, [r0, #40]	; 0x28
 ae8:	mov	r0, r1
 aec:	blx	r2
 af0:	ldm	r4, {r0, r3}
 af4:	ldr	r2, [r0, #76]	; 0x4c
 af8:	ldr	r1, [pc, #20]	; b14 <dump_daq_start+0xd4>
 afc:	mov	r0, r3
 b00:	add	r1, pc, r1
 b04:	blx	r2
 b08:	mvn	r0, #0
 b0c:	pop	{r4, r5, r6, sl, fp, pc}
 b10:	.word	0x000004ed
 b14:	.word	0x00000459

00000b18 <dump_daq_acquire>:
 b18:	push	{r5, sl, fp, lr}
 b1c:	add	fp, sp, #8
 b20:	sub	sp, sp, #8
 b24:	str	r2, [r0, #16]
 b28:	ldr	r2, [fp, #8]
 b2c:	str	r2, [r0, #20]
 b30:	ldm	r0, {r2, r5}
 b34:	ldr	ip, [r2, #28]
 b38:	str	r0, [sp]
 b3c:	mov	r0, r5
 b40:	ldr	r2, [pc, #12]	; b54 <dump_daq_acquire+0x3c>
 b44:	add	r2, pc, r2
 b48:	blx	ip
 b4c:	sub	sp, fp, #8
 b50:	pop	{r5, sl, fp, pc}
 b54:	.word	0x000002e8

00000b58 <dump_daq_inject>:
 b58:	push	{r4, r5, fp, lr}
 b5c:	add	fp, sp, #8
 b60:	sub	sp, sp, #56	; 0x38
 b64:	mov	r5, r0
 b68:	mov	ip, #48	; 0x30
 b6c:	mov	r0, r1
 b70:	add	r4, r1, #32
 b74:	add	r1, r1, #16
 b78:	vld1.32	{d16-d17}, [r0], ip
 b7c:	vld1.32	{d20-d21}, [r4]
 b80:	vld1.32	{d18-d19}, [r1]
 b84:	mov	r1, sp
 b88:	mov	ip, #12
 b8c:	ldr	r0, [r0]
 b90:	mov	r4, r1
 b94:	vst1.64	{d16-d17}, [r4], ip
 b98:	str	r3, [r4]
 b9c:	add	r4, r1, #32
 ba0:	vst1.64	{d20-d21}, [r4]
 ba4:	add	r4, r1, #16
 ba8:	vst1.64	{d18-d19}, [r4]
 bac:	str	r3, [sp, #8]
 bb0:	str	r0, [sp, #48]	; 0x30
 bb4:	ldr	r0, [r5, #8]
 bb8:	bl	67c <pcap_dump@plt>
 bbc:	ldr	r0, [r5, #8]
 bc0:	bl	6a0 <pcap_dump_file@plt>
 bc4:	bl	640 <ferror@plt>
 bc8:	cmp	r0, #0
 bcc:	beq	bf4 <dump_daq_inject+0x9c>
 bd0:	ldm	r5, {r0, r3}
 bd4:	ldr	r2, [r0, #76]	; 0x4c
 bd8:	ldr	r1, [pc, #48]	; c10 <dump_daq_inject+0xb8>
 bdc:	mov	r0, r3
 be0:	add	r1, pc, r1
 be4:	blx	r2
 be8:	mvn	r0, #0
 bec:	sub	sp, fp, #8
 bf0:	pop	{r4, r5, fp, pc}
 bf4:	ldrd	r0, [r5, #56]	; 0x38
 bf8:	adds	r0, r0, #1
 bfc:	adc	r1, r1, #0
 c00:	strd	r0, [r5, #56]	; 0x38
 c04:	mov	r0, #0
 c08:	sub	sp, fp, #8
 c0c:	pop	{r4, r5, fp, pc}
 c10:	.word	0x0000038e

00000c14 <dump_daq_breakloop>:
 c14:	ldrd	r0, [r0]
 c18:	ldr	r2, [r0, #36]	; 0x24
 c1c:	mov	r0, r1
 c20:	bx	r2

00000c24 <dump_daq_stop>:
 c24:	push	{r4, r5, fp, lr}
 c28:	add	fp, sp, #8
 c2c:	mov	r4, r0
 c30:	ldrd	r0, [r0]
 c34:	ldr	r2, [r0, #40]	; 0x28
 c38:	mov	r0, r1
 c3c:	blx	r2
 c40:	mov	r5, r0
 c44:	cmp	r0, #0
 c48:	bne	c64 <dump_daq_stop+0x40>
 c4c:	ldr	r0, [r4, #8]
 c50:	cmp	r0, #0
 c54:	beq	c64 <dump_daq_stop+0x40>
 c58:	bl	6ac <pcap_dump_close@plt>
 c5c:	mov	r0, #0
 c60:	str	r0, [r4, #8]
 c64:	mov	r0, r5
 c68:	pop	{r4, r5, fp, pc}

00000c6c <dump_daq_shutdown>:
 c6c:	push	{r4, sl, fp, lr}
 c70:	add	fp, sp, #8
 c74:	mov	r4, r0
 c78:	ldrd	r0, [r0]
 c7c:	ldr	r2, [r0, #44]	; 0x2c
 c80:	mov	r0, r1
 c84:	blx	r2
 c88:	ldr	r0, [r4, #12]
 c8c:	cmp	r0, #0
 c90:	beq	c98 <dump_daq_shutdown+0x2c>
 c94:	bl	634 <free@plt>
 c98:	mov	r0, r4
 c9c:	pop	{r4, sl, fp, lr}
 ca0:	b	634 <free@plt>

00000ca4 <dump_daq_check_status>:
 ca4:	ldrd	r0, [r0]
 ca8:	ldr	r2, [r0, #48]	; 0x30
 cac:	mov	r0, r1
 cb0:	bx	r2

00000cb4 <dump_daq_get_stats>:
 cb4:	push	{r4, r5, fp, lr}
 cb8:	add	fp, sp, #8
 cbc:	mov	r4, r1
 cc0:	mov	r5, r0
 cc4:	ldrd	r0, [r0]
 cc8:	ldr	r2, [r0, #52]	; 0x34
 ccc:	mov	r0, r1
 cd0:	mov	r1, r4
 cd4:	blx	r2
 cd8:	ldr	r1, [r5, #64]	; 0x40
 cdc:	ldr	r2, [r5, #68]	; 0x44
 ce0:	str	r2, [r4, #44]	; 0x2c
 ce4:	str	r1, [r4, #40]	; 0x28
 ce8:	ldr	r1, [r5, #72]	; 0x48
 cec:	ldr	r2, [r5, #76]	; 0x4c
 cf0:	str	r2, [r4, #52]	; 0x34
 cf4:	str	r1, [r4, #48]	; 0x30
 cf8:	ldr	r1, [r5, #80]	; 0x50
 cfc:	ldr	r2, [r5, #84]	; 0x54
 d00:	str	r2, [r4, #60]	; 0x3c
 d04:	str	r1, [r4, #56]	; 0x38
 d08:	ldr	r1, [r5, #88]	; 0x58
 d0c:	ldr	r2, [r5, #92]	; 0x5c
 d10:	str	r2, [r4, #68]	; 0x44
 d14:	str	r1, [r4, #64]	; 0x40
 d18:	ldr	r1, [r5, #96]	; 0x60
 d1c:	ldr	r2, [r5, #100]	; 0x64
 d20:	str	r2, [r4, #76]	; 0x4c
 d24:	str	r1, [r4, #72]	; 0x48
 d28:	ldr	r1, [r5, #104]	; 0x68
 d2c:	ldr	r2, [r5, #108]	; 0x6c
 d30:	str	r2, [r4, #84]	; 0x54
 d34:	str	r1, [r4, #80]	; 0x50
 d38:	ldr	r1, [r5, #112]	; 0x70
 d3c:	ldr	r2, [r5, #116]	; 0x74
 d40:	str	r2, [r4, #92]	; 0x5c
 d44:	str	r1, [r4, #88]	; 0x58
 d48:	ldr	r1, [r5, #56]	; 0x38
 d4c:	ldr	r2, [r5, #60]	; 0x3c
 d50:	str	r2, [r4, #36]	; 0x24
 d54:	str	r1, [r4, #32]
 d58:	pop	{r4, r5, fp, pc}

00000d5c <dump_daq_reset_stats>:
 d5c:	push	{r4, sl, fp, lr}
 d60:	add	fp, sp, #8
 d64:	mov	r4, r0
 d68:	ldrd	r0, [r0]
 d6c:	ldr	r2, [r0, #56]	; 0x38
 d70:	mov	r0, r1
 d74:	blx	r2
 d78:	vmov.i32	q8, #0	; 0x00000000
 d7c:	add	r0, r4, #104	; 0x68
 d80:	vst1.64	{d16-d17}, [r0]
 d84:	add	r0, r4, #88	; 0x58
 d88:	vst1.64	{d16-d17}, [r0]
 d8c:	add	r0, r4, #72	; 0x48
 d90:	vst1.64	{d16-d17}, [r0]
 d94:	add	r0, r4, #56	; 0x38
 d98:	vst1.64	{d16-d17}, [r0]
 d9c:	add	r0, r4, #40	; 0x28
 da0:	vst1.64	{d16-d17}, [r0]
 da4:	add	r0, r4, #24
 da8:	vst1.64	{d16-d17}, [r0]
 dac:	pop	{r4, sl, fp, pc}

00000db0 <dump_daq_get_snaplen>:
 db0:	ldrd	r0, [r0]
 db4:	ldr	r2, [r0, #60]	; 0x3c
 db8:	mov	r0, r1
 dbc:	bx	r2

00000dc0 <dump_daq_get_capabilities>:
 dc0:	push	{fp, lr}
 dc4:	mov	fp, sp
 dc8:	ldrd	r0, [r0]
 dcc:	ldr	r2, [r0, #64]	; 0x40
 dd0:	mov	r0, r1
 dd4:	blx	r2
 dd8:	orr	r0, r0, #7
 ddc:	pop	{fp, pc}

00000de0 <dump_daq_get_datalink_type>:
 de0:	ldrd	r0, [r0]
 de4:	ldr	r2, [r0, #68]	; 0x44
 de8:	mov	r0, r1
 dec:	bx	r2

00000df0 <dump_daq_get_errbuf>:
 df0:	ldrd	r0, [r0]
 df4:	ldr	r2, [r0, #72]	; 0x48
 df8:	mov	r0, r1
 dfc:	bx	r2

00000e00 <dump_daq_set_errbuf>:
 e00:	ldr	r2, [pc, #24]	; e20 <dump_daq_set_errbuf+0x20>
 e04:	ldm	r0, {r0, r3}
 e08:	cmp	r1, #0
 e0c:	add	r2, pc, r2
 e10:	moveq	r1, r2
 e14:	ldr	r2, [r0, #76]	; 0x4c
 e18:	mov	r0, r3
 e1c:	bx	r2
 e20:	.word	0x0000013c

00000e24 <dump_daq_get_device_index>:
 e24:	ldm	r0, {r0, r3}
 e28:	ldr	r2, [r0, #80]	; 0x50
 e2c:	mov	r0, r3
 e30:	bx	r2

00000e34 <daq_dump_capture>:
 e34:	push	{r4, r5, r6, r7, fp, lr}
 e38:	add	fp, sp, #16
 e3c:	mov	r5, r1
 e40:	ldr	r1, [r0, #20]
 e44:	ldr	r6, [r0, #16]
 e48:	mov	r7, r0
 e4c:	mov	r4, r2
 e50:	mov	r0, r1
 e54:	mov	r1, r5
 e58:	blx	r6
 e5c:	cmp	r0, #6
 e60:	mov	r6, r0
 e64:	mov	r1, #1
 e68:	movwhi	r6, #1
 e6c:	add	r0, r7, r6, lsl #3
 e70:	ldrd	r2, [r0, #64]	; 0x40
 e74:	adds	r2, r2, #1
 e78:	adc	r3, r3, #0
 e7c:	strd	r2, [r0, #64]	; 0x40
 e80:	mov	r0, #45	; 0x2d
 e84:	tst	r1, r0, lsr r6
 e88:	beq	e9c <daq_dump_capture+0x68>
 e8c:	ldr	r0, [r7, #8]
 e90:	mov	r1, r5
 e94:	mov	r2, r4
 e98:	bl	67c <pcap_dump@plt>
 e9c:	mov	r0, r6
 ea0:	pop	{r4, r5, r6, r7, fp, pc}

Disassembly of section .fini:

00000ea4 <_fini>:
 ea4:	push	{r3, lr}
 ea8:	pop	{r3, pc}
