
../repos/coreutils/src/libstdbuf.so:     file format elf32-littlearm


Disassembly of section .init:

00000438 <.init>:
 438:	push	{r3, lr}
 43c:	bl	4d0 <__fprintf_chk@plt+0xc>
 440:	pop	{r3, pc}

Disassembly of section .plt:

00000444 <__cxa_finalize@plt-0x14>:
 444:	push	{lr}		; (str lr, [sp, #-4]!)
 448:	ldr	lr, [pc, #4]	; 454 <__cxa_finalize@plt-0x4>
 44c:	add	lr, pc, lr
 450:	ldr	pc, [lr, #8]!
 454:	andeq	r0, r1, ip, lsr #23

00000458 <__cxa_finalize@plt>:
 458:	add	ip, pc, #0, 12
 45c:	add	ip, ip, #16, 20	; 0x10000
 460:	ldr	pc, [ip, #2988]!	; 0xbac

00000464 <free@plt>:
 464:	add	ip, pc, #0, 12
 468:	add	ip, ip, #16, 20	; 0x10000
 46c:	ldr	pc, [ip, #2980]!	; 0xba4

00000470 <__strtoull_internal@plt>:
 470:	add	ip, pc, #0, 12
 474:	add	ip, ip, #16, 20	; 0x10000
 478:	ldr	pc, [ip, #2972]!	; 0xb9c

0000047c <dcgettext@plt>:
 47c:	add	ip, pc, #0, 12
 480:	add	ip, ip, #16, 20	; 0x10000
 484:	ldr	pc, [ip, #2964]!	; 0xb94

00000488 <getenv@plt>:
 488:	add	ip, pc, #0, 12
 48c:	add	ip, ip, #16, 20	; 0x10000
 490:	ldr	pc, [ip, #2956]!	; 0xb8c

00000494 <malloc@plt>:
 494:	add	ip, pc, #0, 12
 498:	add	ip, ip, #16, 20	; 0x10000
 49c:	ldr	pc, [ip, #2948]!	; 0xb84

000004a0 <__gmon_start__@plt>:
 4a0:	add	ip, pc, #0, 12
 4a4:	add	ip, ip, #16, 20	; 0x10000
 4a8:	ldr	pc, [ip, #2940]!	; 0xb7c

000004ac <setvbuf@plt>:
 4ac:	add	ip, pc, #0, 12
 4b0:	add	ip, ip, #16, 20	; 0x10000
 4b4:	ldr	pc, [ip, #2932]!	; 0xb74

000004b8 <fileno@plt>:
 4b8:	add	ip, pc, #0, 12
 4bc:	add	ip, ip, #16, 20	; 0x10000
 4c0:	ldr	pc, [ip, #2924]!	; 0xb6c

000004c4 <__fprintf_chk@plt>:
 4c4:	add	ip, pc, #0, 12
 4c8:	add	ip, ip, #16, 20	; 0x10000
 4cc:	ldr	pc, [ip, #2916]!	; 0xb64

Disassembly of section .text:

000004d0 <.text>:
 4d0:	ldr	r3, [pc, #20]	; 4ec <__fprintf_chk@plt+0x28>
 4d4:	ldr	r2, [pc, #20]	; 4f0 <__fprintf_chk@plt+0x2c>
 4d8:	add	r3, pc, r3
 4dc:	ldr	r2, [r3, r2]
 4e0:	cmp	r2, #0
 4e4:	bxeq	lr
 4e8:	b	4a0 <__gmon_start__@plt>
 4ec:	andeq	r0, r1, r0, lsr #22
 4f0:	andeq	r0, r0, r0, asr #32
 4f4:	ldr	r3, [pc, #52]	; 530 <__fprintf_chk@plt+0x6c>
 4f8:	ldr	r0, [pc, #52]	; 534 <__fprintf_chk@plt+0x70>
 4fc:	add	r3, pc, r3
 500:	add	r0, pc, r0
 504:	add	r3, r3, #3
 508:	sub	r3, r3, r0
 50c:	cmp	r3, #6
 510:	ldr	r3, [pc, #32]	; 538 <__fprintf_chk@plt+0x74>
 514:	add	r3, pc, r3
 518:	bxls	lr
 51c:	ldr	r2, [pc, #24]	; 53c <__fprintf_chk@plt+0x78>
 520:	ldr	r3, [r3, r2]
 524:	cmp	r3, #0
 528:	bxeq	lr
 52c:	bx	r3
 530:	andeq	r0, r1, r4, asr fp
 534:	andeq	r0, r1, r0, asr fp
 538:	andeq	r0, r1, r4, ror #21
 53c:	andeq	r0, r0, r8, lsr r0
 540:	ldr	r1, [pc, #56]	; 580 <__fprintf_chk@plt+0xbc>
 544:	ldr	r0, [pc, #56]	; 584 <__fprintf_chk@plt+0xc0>
 548:	add	r1, pc, r1
 54c:	add	r0, pc, r0
 550:	sub	r1, r1, r0
 554:	ldr	r3, [pc, #44]	; 588 <__fprintf_chk@plt+0xc4>
 558:	asr	r1, r1, #2
 55c:	add	r3, pc, r3
 560:	add	r1, r1, r1, lsr #31
 564:	asrs	r1, r1, #1
 568:	bxeq	lr
 56c:	ldr	r2, [pc, #24]	; 58c <__fprintf_chk@plt+0xc8>
 570:	ldr	r3, [r3, r2]
 574:	cmp	r3, #0
 578:	bxeq	lr
 57c:	bx	r3
 580:	andeq	r0, r1, r8, lsl #22
 584:	andeq	r0, r1, r4, lsl #22
 588:	muleq	r1, ip, sl
 58c:	andeq	r0, r0, r0, asr r0
 590:	ldr	r3, [pc, #76]	; 5e4 <__fprintf_chk@plt+0x120>
 594:	ldr	r2, [pc, #76]	; 5e8 <__fprintf_chk@plt+0x124>
 598:	add	r3, pc, r3
 59c:	add	r2, pc, r2
 5a0:	ldrb	r3, [r3]
 5a4:	cmp	r3, #0
 5a8:	bxne	lr
 5ac:	ldr	r3, [pc, #56]	; 5ec <__fprintf_chk@plt+0x128>
 5b0:	push	{r4, lr}
 5b4:	ldr	r3, [r2, r3]
 5b8:	cmp	r3, #0
 5bc:	beq	5cc <__fprintf_chk@plt+0x108>
 5c0:	ldr	r3, [pc, #40]	; 5f0 <__fprintf_chk@plt+0x12c>
 5c4:	ldr	r0, [pc, r3]
 5c8:	bl	458 <__cxa_finalize@plt>
 5cc:	bl	4f4 <__fprintf_chk@plt+0x30>
 5d0:	ldr	r3, [pc, #28]	; 5f4 <__fprintf_chk@plt+0x130>
 5d4:	mov	r2, #1
 5d8:	add	r3, pc, r3
 5dc:	strb	r2, [r3]
 5e0:	pop	{r4, pc}
 5e4:			; <UNDEFINED> instruction: 0x00010ab8
 5e8:	andeq	r0, r1, ip, asr sl
 5ec:	andeq	r0, r0, r4, lsr r0
 5f0:	andeq	r0, r1, r8, lsl #21
 5f4:	andeq	r0, r1, r8, ror sl
 5f8:	ldr	r0, [pc, #56]	; 638 <__fprintf_chk@plt+0x174>
 5fc:	ldr	r3, [pc, #56]	; 63c <__fprintf_chk@plt+0x178>
 600:	add	r0, pc, r0
 604:	ldr	r2, [r0]
 608:	add	r3, pc, r3
 60c:	cmp	r2, #0
 610:	bne	618 <__fprintf_chk@plt+0x154>
 614:	b	540 <__fprintf_chk@plt+0x7c>
 618:	ldr	r2, [pc, #32]	; 640 <__fprintf_chk@plt+0x17c>
 61c:	ldr	r3, [r3, r2]
 620:	cmp	r3, #0
 624:	beq	614 <__fprintf_chk@plt+0x150>
 628:	push	{r4, lr}
 62c:	blx	r3
 630:	pop	{r4, lr}
 634:	b	540 <__fprintf_chk@plt+0x7c>
 638:	andeq	r0, r1, r4, lsl r9
 63c:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
 640:	andeq	r0, r0, ip, asr #32
 644:	push	{r4, r5, r6, r7, r8, r9, lr}
 648:	sub	sp, sp, #20
 64c:	mov	r8, r0
 650:	mov	r4, r1
 654:	ldr	r5, [pc, #512]	; 85c <__fprintf_chk@plt+0x398>
 658:	add	r5, pc, r5
 65c:	ldrb	r3, [r1]
 660:	cmp	r3, #48	; 0x30
 664:	beq	790 <__fprintf_chk@plt+0x2cc>
 668:	cmp	r3, #76	; 0x4c
 66c:	beq	7a0 <__fprintf_chk@plt+0x2dc>
 670:	mov	r3, #0
 674:	mov	r2, #10
 678:	add	r1, sp, #12
 67c:	mov	r0, r4
 680:	bl	470 <__strtoull_internal@plt>
 684:	mov	r6, r0
 688:	mov	r7, r1
 68c:	orrs	r3, r6, r7
 690:	beq	6a4 <__fprintf_chk@plt+0x1e0>
 694:	ldr	r3, [sp, #12]
 698:	ldrb	r3, [r3]
 69c:	cmp	r3, #0
 6a0:	beq	730 <__fprintf_chk@plt+0x26c>
 6a4:	ldr	r3, [pc, #436]	; 860 <__fprintf_chk@plt+0x39c>
 6a8:	ldr	r3, [r5, r3]
 6ac:	ldr	r5, [r3]
 6b0:	mov	r2, #5
 6b4:	ldr	r1, [pc, #424]	; 864 <__fprintf_chk@plt+0x3a0>
 6b8:	add	r1, pc, r1
 6bc:	mov	r0, #0
 6c0:	bl	47c <dcgettext@plt>
 6c4:	mov	r6, r0
 6c8:	mov	r0, r8
 6cc:	bl	4b8 <fileno@plt>
 6d0:	cmp	r0, #1
 6d4:	beq	6f4 <__fprintf_chk@plt+0x230>
 6d8:	cmp	r0, #2
 6dc:	beq	718 <__fprintf_chk@plt+0x254>
 6e0:	cmp	r0, #0
 6e4:	beq	724 <__fprintf_chk@plt+0x260>
 6e8:	ldr	r3, [pc, #376]	; 868 <__fprintf_chk@plt+0x3a4>
 6ec:	add	r3, pc, r3
 6f0:	b	6fc <__fprintf_chk@plt+0x238>
 6f4:	ldr	r3, [pc, #368]	; 86c <__fprintf_chk@plt+0x3a8>
 6f8:	add	r3, pc, r3
 6fc:	str	r3, [sp]
 700:	mov	r3, r4
 704:	mov	r2, r6
 708:	mov	r1, #1
 70c:	mov	r0, r5
 710:	bl	4c4 <__fprintf_chk@plt>
 714:	b	7c4 <__fprintf_chk@plt+0x300>
 718:	ldr	r3, [pc, #336]	; 870 <__fprintf_chk@plt+0x3ac>
 71c:	add	r3, pc, r3
 720:	b	6fc <__fprintf_chk@plt+0x238>
 724:	ldr	r3, [pc, #328]	; 874 <__fprintf_chk@plt+0x3b0>
 728:	add	r3, pc, r3
 72c:	b	6fc <__fprintf_chk@plt+0x238>
 730:	mvn	r2, #0
 734:	mov	r3, #0
 738:	cmp	r1, r3
 73c:	cmpeq	r0, r2
 740:	bls	77c <__fprintf_chk@plt+0x2b8>
 744:	ldr	r3, [pc, #276]	; 860 <__fprintf_chk@plt+0x39c>
 748:	ldr	r3, [r5, r3]
 74c:	ldr	r4, [r3]
 750:	mov	r2, #5
 754:	ldr	r1, [pc, #284]	; 878 <__fprintf_chk@plt+0x3b4>
 758:	add	r1, pc, r1
 75c:	mov	r0, #0
 760:	bl	47c <dcgettext@plt>
 764:	strd	r6, [sp]
 768:	mov	r2, r0
 76c:	mov	r1, #1
 770:	mov	r0, r4
 774:	bl	4c4 <__fprintf_chk@plt>
 778:	b	7c4 <__fprintf_chk@plt+0x300>
 77c:	bl	494 <malloc@plt>
 780:	subs	r9, r0, #0
 784:	movne	r2, #0
 788:	bne	7ac <__fprintf_chk@plt+0x2e8>
 78c:	b	744 <__fprintf_chk@plt+0x280>
 790:	mov	r6, #0
 794:	mov	r2, #2
 798:	mov	r9, #0
 79c:	b	7ac <__fprintf_chk@plt+0x2e8>
 7a0:	mov	r6, #0
 7a4:	mov	r2, #1
 7a8:	mov	r9, #0
 7ac:	mov	r3, r6
 7b0:	mov	r1, r9
 7b4:	mov	r0, r8
 7b8:	bl	4ac <setvbuf@plt>
 7bc:	cmp	r0, #0
 7c0:	bne	7cc <__fprintf_chk@plt+0x308>
 7c4:	add	sp, sp, #20
 7c8:	pop	{r4, r5, r6, r7, r8, r9, pc}
 7cc:	ldr	r3, [pc, #140]	; 860 <__fprintf_chk@plt+0x39c>
 7d0:	ldr	r3, [r5, r3]
 7d4:	ldr	r5, [r3]
 7d8:	mov	r2, #5
 7dc:	ldr	r1, [pc, #152]	; 87c <__fprintf_chk@plt+0x3b8>
 7e0:	add	r1, pc, r1
 7e4:	mov	r0, #0
 7e8:	bl	47c <dcgettext@plt>
 7ec:	mov	r6, r0
 7f0:	mov	r0, r8
 7f4:	bl	4b8 <fileno@plt>
 7f8:	cmp	r0, #1
 7fc:	beq	81c <__fprintf_chk@plt+0x358>
 800:	cmp	r0, #2
 804:	beq	844 <__fprintf_chk@plt+0x380>
 808:	cmp	r0, #0
 80c:	beq	850 <__fprintf_chk@plt+0x38c>
 810:	ldr	r3, [pc, #104]	; 880 <__fprintf_chk@plt+0x3bc>
 814:	add	r3, pc, r3
 818:	b	824 <__fprintf_chk@plt+0x360>
 81c:	ldr	r3, [pc, #96]	; 884 <__fprintf_chk@plt+0x3c0>
 820:	add	r3, pc, r3
 824:	str	r4, [sp]
 828:	mov	r2, r6
 82c:	mov	r1, #1
 830:	mov	r0, r5
 834:	bl	4c4 <__fprintf_chk@plt>
 838:	mov	r0, r9
 83c:	bl	464 <free@plt>
 840:	b	7c4 <__fprintf_chk@plt+0x300>
 844:	ldr	r3, [pc, #60]	; 888 <__fprintf_chk@plt+0x3c4>
 848:	add	r3, pc, r3
 84c:	b	824 <__fprintf_chk@plt+0x360>
 850:	ldr	r3, [pc, #52]	; 88c <__fprintf_chk@plt+0x3c8>
 854:	add	r3, pc, r3
 858:	b	824 <__fprintf_chk@plt+0x360>
 85c:	andeq	r0, r1, r0, lsr #19
 860:	andeq	r0, r0, ip, lsr r0
 864:	andeq	r0, r0, r8, lsr #5
 868:	andeq	r0, r0, ip, ror #4
 86c:	andeq	r0, r0, r0, asr r2
 870:	andeq	r0, r0, r4, lsr r2
 874:	andeq	r0, r0, r8, lsl r2
 878:	andeq	r0, r0, ip, lsr #4
 87c:	ldrdeq	r0, [r0], -r4
 880:	andeq	r0, r0, r4, asr #2
 884:	andeq	r0, r0, r8, lsr #2
 888:	andeq	r0, r0, r8, lsl #2
 88c:	andeq	r0, r0, ip, ror #1
 890:	push	{r4, r5, r6, r7, r8, lr}
 894:	ldr	r4, [pc, #136]	; 924 <__fprintf_chk@plt+0x460>
 898:	add	r4, pc, r4
 89c:	ldr	r0, [pc, #132]	; 928 <__fprintf_chk@plt+0x464>
 8a0:	add	r0, pc, r0
 8a4:	bl	488 <getenv@plt>
 8a8:	mov	r7, r0
 8ac:	ldr	r0, [pc, #120]	; 92c <__fprintf_chk@plt+0x468>
 8b0:	add	r0, pc, r0
 8b4:	bl	488 <getenv@plt>
 8b8:	mov	r6, r0
 8bc:	ldr	r0, [pc, #108]	; 930 <__fprintf_chk@plt+0x46c>
 8c0:	add	r0, pc, r0
 8c4:	bl	488 <getenv@plt>
 8c8:	mov	r5, r0
 8cc:	cmp	r7, #0
 8d0:	beq	8e8 <__fprintf_chk@plt+0x424>
 8d4:	ldr	r3, [pc, #88]	; 934 <__fprintf_chk@plt+0x470>
 8d8:	ldr	r3, [r4, r3]
 8dc:	mov	r1, r7
 8e0:	ldr	r0, [r3]
 8e4:	bl	644 <__fprintf_chk@plt+0x180>
 8e8:	cmp	r6, #0
 8ec:	beq	904 <__fprintf_chk@plt+0x440>
 8f0:	ldr	r3, [pc, #64]	; 938 <__fprintf_chk@plt+0x474>
 8f4:	ldr	r3, [r4, r3]
 8f8:	mov	r1, r6
 8fc:	ldr	r0, [r3]
 900:	bl	644 <__fprintf_chk@plt+0x180>
 904:	cmp	r5, #0
 908:	popeq	{r4, r5, r6, r7, r8, pc}
 90c:	ldr	r3, [pc, #40]	; 93c <__fprintf_chk@plt+0x478>
 910:	ldr	r3, [r4, r3]
 914:	mov	r1, r5
 918:	ldr	r0, [r3]
 91c:	bl	644 <__fprintf_chk@plt+0x180>
 920:	pop	{r4, r5, r6, r7, r8, pc}
 924:	andeq	r0, r1, r0, ror #14
 928:	andeq	r0, r0, r0, asr #2
 92c:	andeq	r0, r0, ip, lsr r1
 930:	andeq	r0, r0, r8, lsr r1
 934:	andeq	r0, r0, ip, lsr r0
 938:	andeq	r0, r0, r4, asr #32
 93c:	andeq	r0, r0, r8, asr #32

Disassembly of section .fini:

00000940 <.fini>:
 940:	push	{r3, lr}
 944:	pop	{r3, pc}
