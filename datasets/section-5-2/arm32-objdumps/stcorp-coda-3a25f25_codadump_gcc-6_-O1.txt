
../repos/stcorp-coda-3a25f25/codadump:     file format elf32-littlearm


Disassembly of section .init:

0001219c <.init>:
   1219c:	push	{r3, lr}
   121a0:	bl	126a8 <_start@@Base+0x3c>
   121a4:	pop	{r3, pc}

Disassembly of section .plt:

000121a8 <coda_cursor_get_byte_size@plt-0x14>:
   121a8:	push	{lr}		; (str lr, [sp, #-4]!)
   121ac:	ldr	lr, [pc, #4]	; 121b8 <coda_cursor_get_byte_size@plt-0x4>
   121b0:	add	lr, pc, lr
   121b4:	ldr	pc, [lr, #8]!
   121b8:	andeq	r9, r1, r8, asr #28

000121bc <coda_cursor_get_byte_size@plt>:
   121bc:	add	ip, pc, #0, 12
   121c0:	add	ip, ip, #102400	; 0x19000
   121c4:	ldr	pc, [ip, #3656]!	; 0xe48

000121c8 <coda_type_get_special_type_name@plt>:
   121c8:	add	ip, pc, #0, 12
   121cc:	add	ip, ip, #102400	; 0x19000
   121d0:	ldr	pc, [ip, #3648]!	; 0xe40

000121d4 <coda_set_option_use_fast_size_expressions@plt>:
   121d4:	add	ip, pc, #0, 12
   121d8:	add	ip, ip, #102400	; 0x19000
   121dc:	ldr	pc, [ip, #3640]!	; 0xe38

000121e0 <raise@plt>:
   121e0:	add	ip, pc, #0, 12
   121e4:	add	ip, ip, #102400	; 0x19000
   121e8:	ldr	pc, [ip, #3632]!	; 0xe30

000121ec <coda_get_option_bypass_special_types@plt>:
   121ec:	add	ip, pc, #0, 12
   121f0:	add	ip, ip, #102400	; 0x19000
   121f4:	ldr	pc, [ip, #3624]!	; 0xe28

000121f8 <coda_set_option_perform_boundary_checks@plt>:
   121f8:	add	ip, pc, #0, 12
   121fc:	add	ip, ip, #102400	; 0x19000
   12200:	ldr	pc, [ip, #3616]!	; 0xe20

00012204 <strcmp@plt>:
   12204:	add	ip, pc, #0, 12
   12208:	add	ip, ip, #102400	; 0x19000
   1220c:	ldr	pc, [ip, #3608]!	; 0xe18

00012210 <strtol@plt>:
   12210:	add	ip, pc, #0, 12
   12214:	add	ip, ip, #102400	; 0x19000
   12218:	ldr	pc, [ip, #3600]!	; 0xe10

0001221c <coda_type_get_record_field_hidden_status@plt>:
   1221c:	add	ip, pc, #0, 12
   12220:	add	ip, ip, #102400	; 0x19000
   12224:	ldr	pc, [ip, #3592]!	; 0xe08

00012228 <printf@plt>:
   12228:	add	ip, pc, #0, 12
   1222c:	add	ip, ip, #102400	; 0x19000
   12230:	ldr	pc, [ip, #3584]!	; 0xe00

00012234 <coda_cursor_get_record_field_available_status@plt>:
   12234:	add	ip, pc, #0, 12
   12238:	add	ip, ip, #102400	; 0x19000
   1223c:	ldr	pc, [ip, #3576]!	; 0xdf8

00012240 <fopen@plt>:
   12240:	add	ip, pc, #0, 12
   12244:	add	ip, ip, #102400	; 0x19000
   12248:	ldr	pc, [ip, #3568]!	; 0xdf0

0001224c <coda_set_error@plt>:
   1224c:	add	ip, pc, #0, 12
   12250:	add	ip, ip, #102400	; 0x19000
   12254:	ldr	pc, [ip, #3560]!	; 0xde8

00012258 <coda_open@plt>:
   12258:	add	ip, pc, #0, 12
   1225c:	add	ip, ip, #102400	; 0x19000
   12260:	ldr	pc, [ip, #3552]!	; 0xde0

00012264 <fflush@plt>:
   12264:	add	ip, pc, #0, 12
   12268:	add	ip, ip, #102400	; 0x19000
   1226c:	ldr	pc, [ip, #3544]!	; 0xdd8

00012270 <coda_time_double_to_string@plt>:
   12270:	add	ip, pc, #0, 12
   12274:	add	ip, ip, #102400	; 0x19000
   12278:	ldr	pc, [ip, #3536]!	; 0xdd0

0001227c <coda_cursor_get_num_elements@plt>:
   1227c:	add	ip, pc, #0, 12
   12280:	add	ip, ip, #102400	; 0x19000
   12284:	ldr	pc, [ip, #3528]!	; 0xdc8

00012288 <coda_str64u@plt>:
   12288:	add	ip, pc, #0, 12
   1228c:	add	ip, ip, #102400	; 0x19000
   12290:	ldr	pc, [ip, #3520]!	; 0xdc0

00012294 <free@plt>:
   12294:	add	ip, pc, #0, 12
   12298:	add	ip, ip, #102400	; 0x19000
   1229c:	ldr	pc, [ip, #3512]!	; 0xdb8

000122a0 <coda_set_option_use_mmap@plt>:
   122a0:	add	ip, pc, #0, 12
   122a4:	add	ip, ip, #102400	; 0x19000
   122a8:	ldr	pc, [ip, #3504]!	; 0xdb0

000122ac <coda_set_definition_path_conditional@plt>:
   122ac:	add	ip, pc, #0, 12
   122b0:	add	ip, ip, #102400	; 0x19000
   122b4:	ldr	pc, [ip, #3496]!	; 0xda8

000122b8 <coda_cursor_read_uint32@plt>:
   122b8:	add	ip, pc, #0, 12
   122bc:	add	ip, ip, #102400	; 0x19000
   122c0:	ldr	pc, [ip, #3488]!	; 0xda0

000122c4 <coda_set_option_bypass_special_types@plt>:
   122c4:	add	ip, pc, #0, 12
   122c8:	add	ip, ip, #102400	; 0x19000
   122cc:	ldr	pc, [ip, #3480]!	; 0xd98

000122d0 <coda_type_get_record_field_type@plt>:
   122d0:	add	ip, pc, #0, 12
   122d4:	add	ip, ip, #102400	; 0x19000
   122d8:	ldr	pc, [ip, #3472]!	; 0xd90

000122dc <coda_cursor_get_type@plt>:
   122dc:	add	ip, pc, #0, 12
   122e0:	add	ip, ip, #102400	; 0x19000
   122e4:	ldr	pc, [ip, #3464]!	; 0xd88

000122e8 <memcpy@plt>:
   122e8:	add	ip, pc, #0, 12
   122ec:	add	ip, ip, #102400	; 0x19000
   122f0:	ldr	pc, [ip, #3456]!	; 0xd80

000122f4 <coda_isInf@plt>:
   122f4:	add	ip, pc, #0, 12
   122f8:	add	ip, ip, #102400	; 0x19000
   122fc:	ldr	pc, [ip, #3448]!	; 0xd78

00012300 <coda_type_get_bit_size@plt>:
   12300:	add	ip, pc, #0, 12
   12304:	add	ip, ip, #102400	; 0x19000
   12308:	ldr	pc, [ip, #3440]!	; 0xd70

0001230c <coda_type_get_record_field_available_status@plt>:
   1230c:	add	ip, pc, #0, 12
   12310:	add	ip, ip, #102400	; 0x19000
   12314:	ldr	pc, [ip, #3432]!	; 0xd68

00012318 <coda_cursor_has_attributes@plt>:
   12318:	add	ip, pc, #0, 12
   1231c:	add	ip, ip, #102400	; 0x19000
   12320:	ldr	pc, [ip, #3424]!	; 0xd60

00012324 <coda_cursor_get_type_class@plt>:
   12324:	add	ip, pc, #0, 12
   12328:	add	ip, ip, #102400	; 0x19000
   1232c:	ldr	pc, [ip, #3416]!	; 0xd58

00012330 <coda_set_definition_path@plt>:
   12330:	add	ip, pc, #0, 12
   12334:	add	ip, ip, #102400	; 0x19000
   12338:	ldr	pc, [ip, #3408]!	; 0xd50

0001233c <coda_get_product_format@plt>:
   1233c:	add	ip, pc, #0, 12
   12340:	add	ip, ip, #102400	; 0x19000
   12344:	ldr	pc, [ip, #3400]!	; 0xd48

00012348 <coda_type_get_unit@plt>:
   12348:	add	ip, pc, #0, 12
   1234c:	add	ip, ip, #102400	; 0x19000
   12350:	ldr	pc, [ip, #3392]!	; 0xd40

00012354 <coda_type_get_description@plt>:
   12354:	add	ip, pc, #0, 12
   12358:	add	ip, ip, #102400	; 0x19000
   1235c:	ldr	pc, [ip, #3384]!	; 0xd38

00012360 <coda_cursor_get_special_type@plt>:
   12360:	add	ip, pc, #0, 12
   12364:	add	ip, ip, #102400	; 0x19000
   12368:	ldr	pc, [ip, #3376]!	; 0xd30

0001236c <coda_cursor_goto_first_array_element@plt>:
   1236c:	add	ip, pc, #0, 12
   12370:	add	ip, ip, #102400	; 0x19000
   12374:	ldr	pc, [ip, #3368]!	; 0xd28

00012378 <fwrite@plt>:
   12378:	add	ip, pc, #0, 12
   1237c:	add	ip, ip, #102400	; 0x19000
   12380:	ldr	pc, [ip, #3360]!	; 0xd20

00012384 <coda_cursor_set_product@plt>:
   12384:	add	ip, pc, #0, 12
   12388:	add	ip, ip, #102400	; 0x19000
   1238c:	ldr	pc, [ip, #3352]!	; 0xd18

00012390 <coda_cursor_goto_first_record_field@plt>:
   12390:	add	ip, pc, #0, 12
   12394:	add	ip, ip, #102400	; 0x19000
   12398:	ldr	pc, [ip, #3344]!	; 0xd10

0001239c <coda_cursor_goto_record_field_by_index@plt>:
   1239c:	add	ip, pc, #0, 12
   123a0:	add	ip, ip, #102400	; 0x19000
   123a4:	ldr	pc, [ip, #3336]!	; 0xd08

000123a8 <coda_done@plt>:
   123a8:	add	ip, pc, #0, 12
   123ac:	add	ip, ip, #102400	; 0x19000
   123b0:	ldr	pc, [ip, #3328]!	; 0xd00

000123b4 <puts@plt>:
   123b4:	add	ip, pc, #0, 12
   123b8:	add	ip, ip, #102400	; 0x19000
   123bc:	ldr	pc, [ip, #3320]!	; 0xcf8

000123c0 <coda_cursor_get_read_type@plt>:
   123c0:	add	ip, pc, #0, 12
   123c4:	add	ip, ip, #102400	; 0x19000
   123c8:	ldr	pc, [ip, #3312]!	; 0xcf0

000123cc <malloc@plt>:
   123cc:	add	ip, pc, #0, 12
   123d0:	add	ip, ip, #102400	; 0x19000
   123d4:	ldr	pc, [ip, #3304]!	; 0xce8

000123d8 <__libc_start_main@plt>:
   123d8:	add	ip, pc, #0, 12
   123dc:	add	ip, ip, #102400	; 0x19000
   123e0:	ldr	pc, [ip, #3296]!	; 0xce0

000123e4 <__gmon_start__@plt>:
   123e4:	add	ip, pc, #0, 12
   123e8:	add	ip, ip, #102400	; 0x19000
   123ec:	ldr	pc, [ip, #3288]!	; 0xcd8

000123f0 <coda_cursor_read_string@plt>:
   123f0:	add	ip, pc, #0, 12
   123f4:	add	ip, ip, #102400	; 0x19000
   123f8:	ldr	pc, [ip, #3280]!	; 0xcd0

000123fc <coda_cursor_goto_parent@plt>:
   123fc:	add	ip, pc, #0, 12
   12400:	add	ip, ip, #102400	; 0x19000
   12404:	ldr	pc, [ip, #3272]!	; 0xcc8

00012408 <coda_type_get_num_record_fields@plt>:
   12408:	add	ip, pc, #0, 12
   1240c:	add	ip, ip, #102400	; 0x19000
   12410:	ldr	pc, [ip, #3264]!	; 0xcc0

00012414 <exit@plt>:
   12414:	add	ip, pc, #0, 12
   12418:	add	ip, ip, #102400	; 0x19000
   1241c:	ldr	pc, [ip, #3256]!	; 0xcb8

00012420 <coda_type_get_read_type@plt>:
   12420:	add	ip, pc, #0, 12
   12424:	add	ip, ip, #102400	; 0x19000
   12428:	ldr	pc, [ip, #3248]!	; 0xcb0

0001242c <coda_cursor_get_string_length@plt>:
   1242c:	add	ip, pc, #0, 12
   12430:	add	ip, ip, #102400	; 0x19000
   12434:	ldr	pc, [ip, #3240]!	; 0xca8

00012438 <coda_cursor_read_uint64@plt>:
   12438:	add	ip, pc, #0, 12
   1243c:	add	ip, ip, #102400	; 0x19000
   12440:	ldr	pc, [ip, #3232]!	; 0xca0

00012444 <coda_cursor_read_double@plt>:
   12444:	add	ip, pc, #0, 12
   12448:	add	ip, ip, #102400	; 0x19000
   1244c:	ldr	pc, [ip, #3224]!	; 0xc98

00012450 <coda_isNaN@plt>:
   12450:	add	ip, pc, #0, 12
   12454:	add	ip, ip, #102400	; 0x19000
   12458:	ldr	pc, [ip, #3216]!	; 0xc90

0001245c <fprintf@plt>:
   1245c:	add	ip, pc, #0, 12
   12460:	add	ip, ip, #102400	; 0x19000
   12464:	ldr	pc, [ip, #3208]!	; 0xc88

00012468 <coda_cursor_goto_next_array_element@plt>:
   12468:	add	ip, pc, #0, 12
   1246c:	add	ip, ip, #102400	; 0x19000
   12470:	ldr	pc, [ip, #3200]!	; 0xc80

00012474 <coda_open_as@plt>:
   12474:	add	ip, pc, #0, 12
   12478:	add	ip, ip, #102400	; 0x19000
   1247c:	ldr	pc, [ip, #3192]!	; 0xc78

00012480 <coda_init@plt>:
   12480:	add	ip, pc, #0, 12
   12484:	add	ip, ip, #102400	; 0x19000
   12488:	ldr	pc, [ip, #3184]!	; 0xc70

0001248c <coda_set_option_perform_conversions@plt>:
   1248c:	add	ip, pc, #0, 12
   12490:	add	ip, ip, #102400	; 0x19000
   12494:	ldr	pc, [ip, #3176]!	; 0xc68

00012498 <coda_cursor_goto_attributes@plt>:
   12498:	add	ip, pc, #0, 12
   1249c:	add	ip, ip, #102400	; 0x19000
   124a0:	ldr	pc, [ip, #3168]!	; 0xc60

000124a4 <coda_cursor_read_char@plt>:
   124a4:	add	ip, pc, #0, 12
   124a8:	add	ip, ip, #102400	; 0x19000
   124ac:	ldr	pc, [ip, #3160]!	; 0xc58

000124b0 <memset@plt>:
   124b0:	add	ip, pc, #0, 12
   124b4:	add	ip, ip, #102400	; 0x19000
   124b8:	ldr	pc, [ip, #3152]!	; 0xc50

000124bc <putchar@plt>:
   124bc:	add	ip, pc, #0, 12
   124c0:	add	ip, ip, #102400	; 0x19000
   124c4:	ldr	pc, [ip, #3144]!	; 0xc48

000124c8 <strncpy@plt>:
   124c8:	add	ip, pc, #0, 12
   124cc:	add	ip, ip, #102400	; 0x19000
   124d0:	ldr	pc, [ip, #3136]!	; 0xc40

000124d4 <coda_type_get_special_type@plt>:
   124d4:	add	ip, pc, #0, 12
   124d8:	add	ip, ip, #102400	; 0x19000
   124dc:	ldr	pc, [ip, #3128]!	; 0xc38

000124e0 <coda_type_get_record_union_status@plt>:
   124e0:	add	ip, pc, #0, 12
   124e4:	add	ip, ip, #102400	; 0x19000
   124e8:	ldr	pc, [ip, #3120]!	; 0xc30

000124ec <coda_cursor_read_complex_double_split@plt>:
   124ec:	add	ip, pc, #0, 12
   124f0:	add	ip, ip, #102400	; 0x19000
   124f4:	ldr	pc, [ip, #3112]!	; 0xc28

000124f8 <coda_type_get_array_base_type@plt>:
   124f8:	add	ip, pc, #0, 12
   124fc:	add	ip, ip, #102400	; 0x19000
   12500:	ldr	pc, [ip, #3104]!	; 0xc20

00012504 <fclose@plt>:
   12504:	add	ip, pc, #0, 12
   12508:	add	ip, ip, #102400	; 0x19000
   1250c:	ldr	pc, [ip, #3096]!	; 0xc18

00012510 <coda_type_get_string_length@plt>:
   12510:	add	ip, pc, #0, 12
   12514:	add	ip, ip, #102400	; 0x19000
   12518:	ldr	pc, [ip, #3088]!	; 0xc10

0001251c <coda_type_get_native_type_name@plt>:
   1251c:	add	ip, pc, #0, 12
   12520:	add	ip, ip, #102400	; 0x19000
   12524:	ldr	pc, [ip, #3080]!	; 0xc08

00012528 <coda_cursor_get_array_dim@plt>:
   12528:	add	ip, pc, #0, 12
   1252c:	add	ip, ip, #102400	; 0x19000
   12530:	ldr	pc, [ip, #3072]!	; 0xc00

00012534 <coda_cursor_has_ascii_content@plt>:
   12534:	add	ip, pc, #0, 12
   12538:	add	ip, ip, #102400	; 0x19000
   1253c:	ldr	pc, [ip, #3064]!	; 0xbf8

00012540 <coda_close@plt>:
   12540:	add	ip, pc, #0, 12
   12544:	add	ip, ip, #102400	; 0x19000
   12548:	ldr	pc, [ip, #3056]!	; 0xbf0

0001254c <coda_cursor_read_int64@plt>:
   1254c:	add	ip, pc, #0, 12
   12550:	add	ip, ip, #102400	; 0x19000
   12554:	ldr	pc, [ip, #3048]!	; 0xbe8

00012558 <vfprintf@plt>:
   12558:	add	ip, pc, #0, 12
   1255c:	add	ip, ip, #102400	; 0x19000
   12560:	ldr	pc, [ip, #3040]!	; 0xbe0

00012564 <coda_cursor_goto@plt>:
   12564:	add	ip, pc, #0, 12
   12568:	add	ip, ip, #102400	; 0x19000
   1256c:	ldr	pc, [ip, #3032]!	; 0xbd8

00012570 <coda_type_get_record_field_index_from_name@plt>:
   12570:	add	ip, pc, #0, 12
   12574:	add	ip, ip, #102400	; 0x19000
   12578:	ldr	pc, [ip, #3024]!	; 0xbd0

0001257c <coda_cursor_read_complex_double_pair@plt>:
   1257c:	add	ip, pc, #0, 12
   12580:	add	ip, ip, #102400	; 0x19000
   12584:	ldr	pc, [ip, #3016]!	; 0xbc8

00012588 <coda_cursor_goto_next_record_field@plt>:
   12588:	add	ip, pc, #0, 12
   1258c:	add	ip, ip, #102400	; 0x19000
   12590:	ldr	pc, [ip, #3008]!	; 0xbc0

00012594 <fputc@plt>:
   12594:	add	ip, pc, #0, 12
   12598:	add	ip, ip, #102400	; 0x19000
   1259c:	ldr	pc, [ip, #3000]!	; 0xbb8

000125a0 <coda_type_get_array_dim@plt>:
   125a0:	add	ip, pc, #0, 12
   125a4:	add	ip, ip, #102400	; 0x19000
   125a8:	ldr	pc, [ip, #2992]!	; 0xbb0

000125ac <coda_cursor_get_bit_size@plt>:
   125ac:	add	ip, pc, #0, 12
   125b0:	add	ip, ip, #102400	; 0x19000
   125b4:	ldr	pc, [ip, #2984]!	; 0xba8

000125b8 <coda_errno_to_string@plt>:
   125b8:	add	ip, pc, #0, 12
   125bc:	add	ip, ip, #102400	; 0x19000
   125c0:	ldr	pc, [ip, #2976]!	; 0xba0

000125c4 <coda_cursor_use_base_type_of_special_type@plt>:
   125c4:	add	ip, pc, #0, 12
   125c8:	add	ip, ip, #102400	; 0x19000
   125cc:	ldr	pc, [ip, #2968]!	; 0xb98

000125d0 <coda_cursor_get_available_union_field_index@plt>:
   125d0:	add	ip, pc, #0, 12
   125d4:	add	ip, ip, #102400	; 0x19000
   125d8:	ldr	pc, [ip, #2960]!	; 0xb90

000125dc <coda_cursor_read_int32@plt>:
   125dc:	add	ip, pc, #0, 12
   125e0:	add	ip, ip, #102400	; 0x19000
   125e4:	ldr	pc, [ip, #2952]!	; 0xb88

000125e8 <coda_cursor_get_file_bit_offset@plt>:
   125e8:	add	ip, pc, #0, 12
   125ec:	add	ip, ip, #102400	; 0x19000
   125f0:	ldr	pc, [ip, #2944]!	; 0xb80

000125f4 <coda_get_libcoda_version@plt>:
   125f4:	add	ip, pc, #0, 12
   125f8:	add	ip, ip, #102400	; 0x19000
   125fc:	ldr	pc, [ip, #2936]!	; 0xb78

00012600 <coda_get_errno@plt>:
   12600:	add	ip, pc, #0, 12
   12604:	add	ip, ip, #102400	; 0x19000
   12608:	ldr	pc, [ip, #2928]!	; 0xb70

0001260c <coda_type_get_special_base_type@plt>:
   1260c:	add	ip, pc, #0, 12
   12610:	add	ip, ip, #102400	; 0x19000
   12614:	ldr	pc, [ip, #2920]!	; 0xb68

00012618 <coda_type_get_record_field_name@plt>:
   12618:	add	ip, pc, #0, 12
   1261c:	add	ip, ip, #102400	; 0x19000
   12620:	ldr	pc, [ip, #2912]!	; 0xb60

00012624 <fputs@plt>:
   12624:	add	ip, pc, #0, 12
   12628:	add	ip, ip, #102400	; 0x19000
   1262c:	ldr	pc, [ip, #2904]!	; 0xb58

00012630 <abort@plt>:
   12630:	add	ip, pc, #0, 12
   12634:	add	ip, ip, #102400	; 0x19000
   12638:	ldr	pc, [ip, #2896]!	; 0xb50

0001263c <coda_cursor_read_bits@plt>:
   1263c:	add	ip, pc, #0, 12
   12640:	add	ip, ip, #102400	; 0x19000
   12644:	ldr	pc, [ip, #2888]!	; 0xb48

00012648 <coda_str64@plt>:
   12648:	add	ip, pc, #0, 12
   1264c:	add	ip, ip, #102400	; 0x19000
   12650:	ldr	pc, [ip, #2880]!	; 0xb40

00012654 <__assert_fail@plt>:
   12654:	add	ip, pc, #0, 12
   12658:	add	ip, ip, #102400	; 0x19000
   1265c:	ldr	pc, [ip, #2872]!	; 0xb38

00012660 <coda_type_get_class@plt>:
   12660:	add	ip, pc, #0, 12
   12664:	add	ip, ip, #102400	; 0x19000
   12668:	ldr	pc, [ip, #2864]!	; 0xb30

Disassembly of section .text:

0001266c <_start@@Base>:
   1266c:	mov	fp, #0
   12670:	mov	lr, #0
   12674:	pop	{r1}		; (ldr r1, [sp], #4)
   12678:	mov	r2, sp
   1267c:	push	{r2}		; (str r2, [sp, #-4]!)
   12680:	push	{r0}		; (str r0, [sp, #-4]!)
   12684:	ldr	ip, [pc, #16]	; 1269c <_start@@Base+0x30>
   12688:	push	{ip}		; (str ip, [sp, #-4]!)
   1268c:	ldr	r0, [pc, #12]	; 126a0 <_start@@Base+0x34>
   12690:	ldr	r3, [pc, #12]	; 126a4 <_start@@Base+0x38>
   12694:	bl	123d8 <__libc_start_main@plt>
   12698:	bl	12630 <abort@plt>
   1269c:	andeq	r9, r1, ip, asr #26
   126a0:	andeq	r8, r1, ip, ror r5
   126a4:	andeq	r9, r1, ip, ror #25
   126a8:	ldr	r3, [pc, #20]	; 126c4 <_start@@Base+0x58>
   126ac:	ldr	r2, [pc, #20]	; 126c8 <_start@@Base+0x5c>
   126b0:	add	r3, pc, r3
   126b4:	ldr	r2, [r3, r2]
   126b8:	cmp	r2, #0
   126bc:	bxeq	lr
   126c0:	b	123e4 <__gmon_start__@plt>
   126c4:	andeq	r9, r1, r8, asr #18
   126c8:	muleq	r0, ip, r1
   126cc:	ldr	r3, [pc, #28]	; 126f0 <_start@@Base+0x84>
   126d0:	ldr	r0, [pc, #28]	; 126f4 <_start@@Base+0x88>
   126d4:	sub	r3, r3, r0
   126d8:	cmp	r3, #6
   126dc:	bxls	lr
   126e0:	ldr	r3, [pc, #16]	; 126f8 <_start@@Base+0x8c>
   126e4:	cmp	r3, #0
   126e8:	bxeq	lr
   126ec:	bx	r3
   126f0:			; <UNDEFINED> instruction: 0x0002c1b7
   126f4:			; <UNDEFINED> instruction: 0x0002c1b4
   126f8:	andeq	r0, r0, r0
   126fc:	ldr	r1, [pc, #36]	; 12728 <_start@@Base+0xbc>
   12700:	ldr	r0, [pc, #36]	; 1272c <_start@@Base+0xc0>
   12704:	sub	r1, r1, r0
   12708:	asr	r1, r1, #2
   1270c:	add	r1, r1, r1, lsr #31
   12710:	asrs	r1, r1, #1
   12714:	bxeq	lr
   12718:	ldr	r3, [pc, #16]	; 12730 <_start@@Base+0xc4>
   1271c:	cmp	r3, #0
   12720:	bxeq	lr
   12724:	bx	r3
   12728:			; <UNDEFINED> instruction: 0x0002c1b4
   1272c:			; <UNDEFINED> instruction: 0x0002c1b4
   12730:	andeq	r0, r0, r0
   12734:	push	{r4, lr}
   12738:	ldr	r4, [pc, #24]	; 12758 <_start@@Base+0xec>
   1273c:	ldrb	r3, [r4]
   12740:	cmp	r3, #0
   12744:	popne	{r4, pc}
   12748:	bl	126cc <_start@@Base+0x60>
   1274c:	mov	r3, #1
   12750:	strb	r3, [r4]
   12754:	pop	{r4, pc}
   12758:	andeq	ip, r2, r0, asr #3
   1275c:	ldr	r0, [pc, #40]	; 1278c <_start@@Base+0x120>
   12760:	ldr	r3, [r0]
   12764:	cmp	r3, #0
   12768:	bne	12770 <_start@@Base+0x104>
   1276c:	b	126fc <_start@@Base+0x90>
   12770:	ldr	r3, [pc, #24]	; 12790 <_start@@Base+0x124>
   12774:	cmp	r3, #0
   12778:	beq	1276c <_start@@Base+0x100>
   1277c:	push	{r4, lr}
   12780:	blx	r3
   12784:	pop	{r4, lr}
   12788:	b	126fc <_start@@Base+0x90>
   1278c:	strdeq	fp, [r2], -ip
   12790:	andeq	r0, r0, r0
   12794:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12798:	sub	sp, sp, #100	; 0x64
   1279c:	str	r0, [sp, #20]
   127a0:	str	r1, [sp, #24]
   127a4:	mov	r5, r2
   127a8:	mov	fp, r3
   127ac:	add	r2, r1, #2
   127b0:	add	r1, sp, #92	; 0x5c
   127b4:	ldr	r3, [pc, #2664]	; 13224 <_start@@Base+0xbb8>
   127b8:	ldr	r0, [r3, r2, lsl #2]
   127bc:	bl	12660 <coda_type_get_class@plt>
   127c0:	cmp	r0, #0
   127c4:	bne	12914 <_start@@Base+0x2a8>
   127c8:	ldr	r3, [sp, #92]	; 0x5c
   127cc:	cmp	r3, #0
   127d0:	beq	12a28 <_start@@Base+0x3bc>
   127d4:	cmp	r3, #1
   127d8:	bne	12aa4 <_start@@Base+0x438>
   127dc:	add	r3, r5, r5, lsl #2
   127e0:	ldr	r2, [pc, #2620]	; 13224 <_start@@Base+0xbb8>
   127e4:	add	r3, r2, r3, lsl #4
   127e8:	ldr	r3, [r3, #800]	; 0x320
   127ec:	cmp	r5, #0
   127f0:	moveq	r1, #0
   127f4:	streq	r1, [r2, #844]	; 0x34c
   127f8:	ldr	r2, [pc, #2600]	; 13228 <_start@@Base+0xbbc>
   127fc:	ldr	r8, [r2, #104]	; 0x68
   12800:	add	r2, r5, r5, lsl #2
   12804:	ldr	r1, [pc, #2584]	; 13224 <_start@@Base+0xbb8>
   12808:	add	r2, r1, r2, lsl #4
   1280c:	ldr	r0, [r2, #804]	; 0x324
   12810:	add	r9, r3, r0
   12814:	cmp	r8, r9
   12818:	blt	12854 <_start@@Base+0x1e8>
   1281c:	ldr	r2, [r1, #3360]	; 0xd20
   12820:	sub	r2, r2, #1
   12824:	cmp	r5, r2
   12828:	bge	12854 <_start@@Base+0x1e8>
   1282c:	mov	r2, r1
   12830:	add	r1, r5, #1
   12834:	add	r1, r1, r1, lsl #2
   12838:	add	r1, r2, r1, lsl #4
   1283c:	add	ip, r5, r5, lsl #2
   12840:	add	r2, r2, ip, lsl #4
   12844:	ldr	ip, [r2, #844]	; 0x34c
   12848:	ldr	r2, [r2, #840]	; 0x348
   1284c:	mul	r2, r2, ip
   12850:	str	r2, [r1, #844]	; 0x34c
   12854:	cmp	r0, #0
   12858:	ble	13204 <_start@@Base+0xb98>
   1285c:	add	r3, r3, #1
   12860:	ldr	r2, [pc, #2496]	; 13228 <_start@@Base+0xbbc>
   12864:	add	r3, r2, r3, lsl #2
   12868:	add	r2, sp, #56	; 0x38
   1286c:	add	r1, r5, r5, lsl #2
   12870:	ldr	ip, [pc, #2484]	; 1322c <_start@@Base+0xbc0>
   12874:	add	r1, ip, r1, lsl #4
   12878:	add	r0, r2, r0, lsl #2
   1287c:	mov	r4, #1
   12880:	add	r7, r5, r5, lsl #2
   12884:	sub	ip, ip, #844	; 0x34c
   12888:	add	r7, ip, r7, lsl #4
   1288c:	mov	ip, #0
   12890:	ldr	lr, [r3, #68]	; 0x44
   12894:	cmp	lr, #0
   12898:	ldrne	r6, [r7, #844]	; 0x34c
   1289c:	ldrne	lr, [r3, #104]	; 0x68
   128a0:	ldrne	lr, [lr, r6, lsl #2]
   128a4:	ldreq	lr, [r3]
   128a8:	str	lr, [r2]
   128ac:	ldr	lr, [r2], #4
   128b0:	mul	r4, lr, r4
   128b4:	str	ip, [r1, #4]!
   128b8:	add	r3, r3, #4
   128bc:	cmp	r2, r0
   128c0:	bne	12890 <_start@@Base+0x224>
   128c4:	cmp	r4, #0
   128c8:	beq	130f4 <_start@@Base+0xa88>
   128cc:	ldr	r0, [pc, #2396]	; 13230 <_start@@Base+0xbc4>
   128d0:	bl	1236c <coda_cursor_goto_first_array_element@plt>
   128d4:	cmp	r0, #0
   128d8:	bne	1321c <_start@@Base+0xbb0>
   128dc:	cmp	r4, #0
   128e0:	ble	12a1c <_start@@Base+0x3b0>
   128e4:	add	r3, r5, r5, lsl #2
   128e8:	lsl	r3, r3, #2
   128ec:	str	r3, [sp, #36]	; 0x24
   128f0:	mov	r6, #0
   128f4:	add	r3, r5, #1
   128f8:	str	r3, [sp, #28]
   128fc:	ldr	r7, [pc, #2336]	; 13224 <_start@@Base+0xbb8>
   12900:	add	sl, r3, r3, lsl #2
   12904:	add	sl, r7, sl, lsl #4
   12908:	str	fp, [sp, #32]
   1290c:	ldr	fp, [sp, #24]
   12910:	b	12930 <_start@@Base+0x2c4>
   12914:	bl	1853c <handle_coda_error@@Base>
   12918:	b	127c8 <_start@@Base+0x15c>
   1291c:	bl	1853c <handle_coda_error@@Base>
   12920:	b	12960 <_start@@Base+0x2f4>
   12924:	add	r6, r6, #1
   12928:	cmp	r6, r4
   1292c:	beq	12a1c <_start@@Base+0x3b0>
   12930:	ldr	r3, [sp, #32]
   12934:	ldr	r2, [sp, #28]
   12938:	add	r1, fp, #1
   1293c:	ldr	r0, [sp, #20]
   12940:	bl	12794 <_start@@Base+0x128>
   12944:	sub	r3, r4, #1
   12948:	cmp	r3, r6
   1294c:	ble	12924 <_start@@Base+0x2b8>
   12950:	ldr	r0, [pc, #2264]	; 13230 <_start@@Base+0xbc4>
   12954:	bl	12468 <coda_cursor_goto_next_array_element@plt>
   12958:	cmp	r0, #0
   1295c:	bne	1291c <_start@@Base+0x2b0>
   12960:	cmp	r8, r9
   12964:	blt	12980 <_start@@Base+0x314>
   12968:	ldr	r3, [r7, #3360]	; 0xd20
   1296c:	sub	r3, r3, #1
   12970:	cmp	r5, r3
   12974:	ldrlt	r3, [sl, #844]	; 0x34c
   12978:	addlt	r3, r3, #1
   1297c:	strlt	r3, [sl, #844]	; 0x34c
   12980:	ldr	r3, [pc, #2220]	; 13234 <_start@@Base+0xbc8>
   12984:	ldr	r3, [r3]
   12988:	cmp	r3, #0
   1298c:	beq	12924 <_start@@Base+0x2b8>
   12990:	add	r3, r5, r5, lsl #2
   12994:	add	r3, r7, r3, lsl #4
   12998:	ldr	r0, [r3, #804]	; 0x324
   1299c:	subs	r1, r0, #1
   129a0:	bmi	12924 <_start@@Base+0x2b8>
   129a4:	add	r3, r5, r5, lsl #2
   129a8:	add	r3, r1, r3, lsl #2
   129ac:	add	r3, r3, #212	; 0xd4
   129b0:	ldr	r2, [r7, r3, lsl #2]
   129b4:	add	r2, r2, #1
   129b8:	str	r2, [r7, r3, lsl #2]
   129bc:	add	r3, sp, #96	; 0x60
   129c0:	add	r3, r3, r1, lsl #2
   129c4:	ldr	r3, [r3, #-40]	; 0xffffffd8
   129c8:	cmp	r2, r3
   129cc:	bne	12924 <_start@@Base+0x2b8>
   129d0:	ldr	r3, [sp, #36]	; 0x24
   129d4:	add	r2, r3, r0
   129d8:	add	r2, r7, r2, lsl #2
   129dc:	add	r2, r2, #844	; 0x34c
   129e0:	add	r3, sp, #96	; 0x60
   129e4:	add	r0, r3, r0, lsl #2
   129e8:	sub	r0, r0, #48	; 0x30
   129ec:	mov	ip, #0
   129f0:	sub	r1, r1, #1
   129f4:	str	ip, [r2]
   129f8:	cmn	r1, #1
   129fc:	beq	12924 <_start@@Base+0x2b8>
   12a00:	ldr	r3, [r2, #-4]
   12a04:	add	r3, r3, #1
   12a08:	str	r3, [r2, #-4]!
   12a0c:	ldr	lr, [r0], #-4
   12a10:	cmp	r3, lr
   12a14:	beq	129f0 <_start@@Base+0x384>
   12a18:	b	12924 <_start@@Base+0x2b8>
   12a1c:	ldr	r0, [pc, #2060]	; 13230 <_start@@Base+0xbc4>
   12a20:	bl	123fc <coda_cursor_goto_parent@plt>
   12a24:	b	130f4 <_start@@Base+0xa88>
   12a28:	ldr	r0, [pc, #2036]	; 13224 <_start@@Base+0xbb8>
   12a2c:	add	r3, r0, fp, lsl #2
   12a30:	add	r2, sp, #56	; 0x38
   12a34:	ldr	r1, [r3, #3492]	; 0xda4
   12a38:	add	r0, r0, #144	; 0x90
   12a3c:	bl	12234 <coda_cursor_get_record_field_available_status@plt>
   12a40:	cmp	r0, #0
   12a44:	bne	12a94 <_start@@Base+0x428>
   12a48:	ldr	r3, [sp, #56]	; 0x38
   12a4c:	cmp	r3, #0
   12a50:	beq	130f4 <_start@@Base+0xa88>
   12a54:	ldr	r0, [pc, #1992]	; 13224 <_start@@Base+0xbb8>
   12a58:	add	r3, r0, fp, lsl #2
   12a5c:	ldr	r1, [r3, #3492]	; 0xda4
   12a60:	add	r0, r0, #144	; 0x90
   12a64:	bl	1239c <coda_cursor_goto_record_field_by_index@plt>
   12a68:	cmp	r0, #0
   12a6c:	bne	12a9c <_start@@Base+0x430>
   12a70:	add	r3, fp, #1
   12a74:	mov	r2, r5
   12a78:	ldr	r1, [sp, #24]
   12a7c:	add	r1, r1, #1
   12a80:	ldr	r0, [sp, #20]
   12a84:	bl	12794 <_start@@Base+0x128>
   12a88:	ldr	r0, [pc, #1952]	; 13230 <_start@@Base+0xbc4>
   12a8c:	bl	123fc <coda_cursor_goto_parent@plt>
   12a90:	b	130f4 <_start@@Base+0xa88>
   12a94:	bl	1853c <handle_coda_error@@Base>
   12a98:	b	12a48 <_start@@Base+0x3dc>
   12a9c:	bl	1853c <handle_coda_error@@Base>
   12aa0:	b	12a70 <_start@@Base+0x404>
   12aa4:	ldr	r3, [pc, #1928]	; 13234 <_start@@Base+0xbc8>
   12aa8:	ldr	r3, [r3]
   12aac:	cmp	r3, #0
   12ab0:	bne	12b00 <_start@@Base+0x494>
   12ab4:	ldr	r3, [sp, #24]
   12ab8:	add	r3, r3, #2
   12abc:	add	r1, sp, #40	; 0x28
   12ac0:	ldr	r2, [pc, #1884]	; 13224 <_start@@Base+0xbb8>
   12ac4:	ldr	r0, [r2, r3, lsl #2]
   12ac8:	bl	12660 <coda_type_get_class@plt>
   12acc:	cmp	r0, #0
   12ad0:	bne	12bb8 <_start@@Base+0x54c>
   12ad4:	ldr	r3, [sp, #40]	; 0x28
   12ad8:	cmp	r3, #6
   12adc:	ldrls	pc, [pc, r3, lsl #2]
   12ae0:	b	130e8 <_start@@Base+0xa7c>
   12ae4:	strdeq	r3, [r1], -r0
   12ae8:	strdeq	r3, [r1], -r0
   12aec:	andeq	r2, r1, r0, asr #23
   12af0:	andeq	r2, r1, r0, asr #23
   12af4:	andeq	r2, r1, r0, asr #23
   12af8:	andeq	r2, r1, r0, asr #23
   12afc:	andeq	r3, r1, r4, ror r0
   12b00:	ldr	r3, [pc, #1820]	; 13224 <_start@@Base+0xbb8>
   12b04:	ldr	r3, [r3, #136]	; 0x88
   12b08:	cmp	r3, #0
   12b0c:	ble	12ab4 <_start@@Base+0x448>
   12b10:	ldr	sl, [pc, #1824]	; 13238 <_start@@Base+0xbcc>
   12b14:	mov	r9, #0
   12b18:	mov	r6, r9
   12b1c:	sub	fp, sl, #4
   12b20:	ldr	r8, [pc, #1812]	; 1323c <_start@@Base+0xbd0>
   12b24:	b	12b44 <_start@@Base+0x4d8>
   12b28:	ldr	r3, [sp, #56]	; 0x38
   12b2c:	cmp	r3, #1
   12b30:	beq	12b60 <_start@@Base+0x4f4>
   12b34:	add	r6, r6, #1
   12b38:	ldr	r3, [fp, #136]	; 0x88
   12b3c:	cmp	r6, r3
   12b40:	bge	12ab4 <_start@@Base+0x448>
   12b44:	add	r1, sp, #56	; 0x38
   12b48:	ldr	r0, [sl, #4]!
   12b4c:	bl	12660 <coda_type_get_class@plt>
   12b50:	cmp	r0, #0
   12b54:	beq	12b28 <_start@@Base+0x4bc>
   12b58:	bl	1853c <handle_coda_error@@Base>
   12b5c:	b	12b28 <_start@@Base+0x4bc>
   12b60:	add	r3, r9, r9, lsl #2
   12b64:	add	r3, fp, r3, lsl #4
   12b68:	ldr	r3, [r3, #804]	; 0x324
   12b6c:	cmp	r3, #0
   12b70:	ble	12bb0 <_start@@Base+0x544>
   12b74:	add	r5, r9, r9, lsl #2
   12b78:	add	r5, fp, r5, lsl #4
   12b7c:	add	r5, r5, #844	; 0x34c
   12b80:	mov	r4, #0
   12b84:	add	r7, r9, r9, lsl #2
   12b88:	add	r7, fp, r7, lsl #4
   12b8c:	ldr	r3, [r8]
   12b90:	ldr	r2, [r5, #4]!
   12b94:	ldr	r1, [pc, #1700]	; 13240 <_start@@Base+0xbd4>
   12b98:	ldr	r0, [sp, #20]
   12b9c:	bl	1245c <fprintf@plt>
   12ba0:	add	r4, r4, #1
   12ba4:	ldr	r3, [r7, #804]	; 0x324
   12ba8:	cmp	r4, r3
   12bac:	blt	12b8c <_start@@Base+0x520>
   12bb0:	add	r9, r9, #1
   12bb4:	b	12b34 <_start@@Base+0x4c8>
   12bb8:	bl	1853c <handle_coda_error@@Base>
   12bbc:	b	12ad4 <_start@@Base+0x468>
   12bc0:	ldr	r3, [sp, #24]
   12bc4:	add	r2, r3, #2
   12bc8:	add	r1, sp, #44	; 0x2c
   12bcc:	ldr	r3, [pc, #1616]	; 13224 <_start@@Base+0xbb8>
   12bd0:	ldr	r0, [r3, r2, lsl #2]
   12bd4:	bl	12420 <coda_type_get_read_type@plt>
   12bd8:	cmp	r0, #0
   12bdc:	bne	12c2c <_start@@Base+0x5c0>
   12be0:	ldr	r3, [sp, #44]	; 0x2c
   12be4:	add	r3, r3, #1
   12be8:	cmp	r3, #13
   12bec:	ldrls	pc, [pc, r3, lsl #2]
   12bf0:	b	130e8 <_start@@Base+0xa7c>
   12bf4:	andeq	r3, r1, r0, rrx
   12bf8:	andeq	r2, r1, r4, asr pc
   12bfc:	andeq	r2, r1, r4, lsl #31
   12c00:	andeq	r2, r1, r4, asr pc
   12c04:	andeq	r2, r1, r4, lsl #31
   12c08:	andeq	r2, r1, r4, asr pc
   12c0c:	andeq	r2, r1, r4, lsl #31
   12c10:			; <UNDEFINED> instruction: 0x00012fb4
   12c14:	andeq	r2, r1, ip, ror #31
   12c18:	andeq	r3, r1, r4, lsr #32
   12c1c:	andeq	r3, r1, r4, lsr #32
   12c20:	andeq	r2, r1, r4, lsr ip
   12c24:	andeq	r2, r1, r4, lsl #25
   12c28:	andeq	r2, r1, ip, lsr sp
   12c2c:	bl	1853c <handle_coda_error@@Base>
   12c30:	b	12be0 <_start@@Base+0x574>
   12c34:	add	r1, sp, #56	; 0x38
   12c38:	ldr	r0, [pc, #1520]	; 13230 <_start@@Base+0xbc4>
   12c3c:	bl	124a4 <coda_cursor_read_char@plt>
   12c40:	cmp	r0, #0
   12c44:	bne	12c6c <_start@@Base+0x600>
   12c48:	ldr	r3, [pc, #1524]	; 13244 <_start@@Base+0xbd8>
   12c4c:	ldr	r3, [r3]
   12c50:	cmp	r3, #0
   12c54:	beq	12c74 <_start@@Base+0x608>
   12c58:	ldrb	r2, [sp, #56]	; 0x38
   12c5c:	ldr	r1, [pc, #1508]	; 13248 <_start@@Base+0xbdc>
   12c60:	ldr	r0, [sp, #20]
   12c64:	bl	1245c <fprintf@plt>
   12c68:	b	130e8 <_start@@Base+0xa7c>
   12c6c:	bl	1853c <handle_coda_error@@Base>
   12c70:	b	12c48 <_start@@Base+0x5dc>
   12c74:	ldr	r1, [sp, #20]
   12c78:	ldrb	r0, [sp, #56]	; 0x38
   12c7c:	bl	12594 <fputc@plt>
   12c80:	b	130e8 <_start@@Base+0xa7c>
   12c84:	add	r1, sp, #56	; 0x38
   12c88:	ldr	r0, [pc, #1440]	; 13230 <_start@@Base+0xbc4>
   12c8c:	bl	1242c <coda_cursor_get_string_length@plt>
   12c90:	cmp	r0, #0
   12c94:	bne	12cf4 <_start@@Base+0x688>
   12c98:	ldr	r0, [sp, #56]	; 0x38
   12c9c:	add	r0, r0, #1
   12ca0:	bl	123cc <malloc@plt>
   12ca4:	subs	r4, r0, #0
   12ca8:	beq	12cfc <_start@@Base+0x690>
   12cac:	ldr	r2, [sp, #56]	; 0x38
   12cb0:	add	r2, r2, #1
   12cb4:	mov	r1, r4
   12cb8:	ldr	r0, [pc, #1392]	; 13230 <_start@@Base+0xbc4>
   12cbc:	bl	123f0 <coda_cursor_read_string@plt>
   12cc0:	cmp	r0, #0
   12cc4:	bne	12d24 <_start@@Base+0x6b8>
   12cc8:	ldr	r3, [pc, #1396]	; 13244 <_start@@Base+0xbd8>
   12ccc:	ldr	r3, [r3]
   12cd0:	cmp	r3, #0
   12cd4:	beq	12d2c <_start@@Base+0x6c0>
   12cd8:	mov	r2, r4
   12cdc:	ldr	r1, [pc, #1384]	; 1324c <_start@@Base+0xbe0>
   12ce0:	ldr	r0, [sp, #20]
   12ce4:	bl	1245c <fprintf@plt>
   12ce8:	mov	r0, r4
   12cec:	bl	12294 <free@plt>
   12cf0:	b	130e8 <_start@@Base+0xa7c>
   12cf4:	bl	1853c <handle_coda_error@@Base>
   12cf8:	b	12c98 <_start@@Base+0x62c>
   12cfc:	mov	r3, #126	; 0x7e
   12d00:	str	r3, [sp]
   12d04:	ldr	r3, [pc, #1348]	; 13250 <_start@@Base+0xbe4>
   12d08:	ldr	r2, [sp, #56]	; 0x38
   12d0c:	add	r2, r2, #1
   12d10:	ldr	r1, [pc, #1340]	; 13254 <_start@@Base+0xbe8>
   12d14:	mvn	r0, #0
   12d18:	bl	1224c <coda_set_error@plt>
   12d1c:	bl	1853c <handle_coda_error@@Base>
   12d20:	b	12cac <_start@@Base+0x640>
   12d24:	bl	1853c <handle_coda_error@@Base>
   12d28:	b	12cc8 <_start@@Base+0x65c>
   12d2c:	ldr	r1, [sp, #20]
   12d30:	mov	r0, r4
   12d34:	bl	12624 <fputs@plt>
   12d38:	b	12ce8 <_start@@Base+0x67c>
   12d3c:	add	r1, sp, #56	; 0x38
   12d40:	ldr	r0, [pc, #1256]	; 13230 <_start@@Base+0xbc4>
   12d44:	bl	125ac <coda_cursor_get_bit_size@plt>
   12d48:	cmp	r0, #0
   12d4c:	bne	12dd4 <_start@@Base+0x768>
   12d50:	ldrd	r2, [sp, #56]	; 0x38
   12d54:	and	r0, r2, #7
   12d58:	mov	r1, #0
   12d5c:	orrs	r1, r0, r1
   12d60:	movne	r1, #1
   12d64:	moveq	r1, #0
   12d68:	lsr	r6, r2, #3
   12d6c:	orr	r6, r6, r3, lsl #29
   12d70:	asr	r7, r3, #3
   12d74:	adds	r6, r6, r1
   12d78:	adc	r7, r7, #0
   12d7c:	mov	r0, r6
   12d80:	bl	123cc <malloc@plt>
   12d84:	subs	r8, r0, #0
   12d88:	beq	12ddc <_start@@Base+0x770>
   12d8c:	ldrd	r2, [sp, #56]	; 0x38
   12d90:	strd	r2, [sp]
   12d94:	mov	r2, #0
   12d98:	mov	r3, #0
   12d9c:	mov	r1, r8
   12da0:	ldr	r0, [pc, #1160]	; 13230 <_start@@Base+0xbc4>
   12da4:	bl	1263c <coda_cursor_read_bits@plt>
   12da8:	cmp	r0, #0
   12dac:	bne	12e00 <_start@@Base+0x794>
   12db0:	cmp	r6, #1
   12db4:	sbcs	r3, r7, #0
   12db8:	blt	12f48 <_start@@Base+0x8dc>
   12dbc:	sub	r5, r8, #1
   12dc0:	mov	r4, #0
   12dc4:	ldr	sl, [pc, #1164]	; 13258 <_start@@Base+0xbec>
   12dc8:	ldr	r9, [pc, #1164]	; 1325c <_start@@Base+0xbf0>
   12dcc:	ldr	fp, [pc, #1164]	; 13260 <_start@@Base+0xbf4>
   12dd0:	b	12e44 <_start@@Base+0x7d8>
   12dd4:	bl	1853c <handle_coda_error@@Base>
   12dd8:	b	12d50 <_start@@Base+0x6e4>
   12ddc:	mov	r3, #163	; 0xa3
   12de0:	str	r3, [sp]
   12de4:	ldr	r3, [pc, #1124]	; 13250 <_start@@Base+0xbe4>
   12de8:	mov	r2, r6
   12dec:	ldr	r1, [pc, #1120]	; 13254 <_start@@Base+0xbe8>
   12df0:	mvn	r0, #0
   12df4:	bl	1224c <coda_set_error@plt>
   12df8:	bl	1853c <handle_coda_error@@Base>
   12dfc:	b	12d8c <_start@@Base+0x720>
   12e00:	bl	1853c <handle_coda_error@@Base>
   12e04:	b	12db0 <_start@@Base+0x744>
   12e08:	cmp	r2, #8
   12e0c:	beq	12e88 <_start@@Base+0x81c>
   12e10:	bhi	12ea0 <_start@@Base+0x834>
   12e14:	cmp	r2, #7
   12e18:	bne	12f18 <_start@@Base+0x8ac>
   12e1c:	ldr	r3, [sp, #20]
   12e20:	mov	r2, #2
   12e24:	mov	r1, #1
   12e28:	ldr	r0, [pc, #1076]	; 13264 <_start@@Base+0xbf8>
   12e2c:	bl	12378 <fwrite@plt>
   12e30:	add	r4, r4, #1
   12e34:	asr	r3, r4, #31
   12e38:	cmp	r4, r6
   12e3c:	sbcs	r3, r3, r7
   12e40:	bge	12f48 <_start@@Base+0x8dc>
   12e44:	ldrb	r2, [r5, #1]!
   12e48:	cmp	r2, #10
   12e4c:	beq	12eb8 <_start@@Base+0x84c>
   12e50:	bls	12e08 <_start@@Base+0x79c>
   12e54:	cmp	r2, #12
   12e58:	beq	12ee8 <_start@@Base+0x87c>
   12e5c:	bcc	12ed0 <_start@@Base+0x864>
   12e60:	cmp	r2, #13
   12e64:	beq	12f00 <_start@@Base+0x894>
   12e68:	cmp	r2, #92	; 0x5c
   12e6c:	bne	12f18 <_start@@Base+0x8ac>
   12e70:	ldr	r3, [sp, #20]
   12e74:	mov	r2, #2
   12e78:	mov	r1, #1
   12e7c:	ldr	r0, [pc, #996]	; 13268 <_start@@Base+0xbfc>
   12e80:	bl	12378 <fwrite@plt>
   12e84:	b	12e30 <_start@@Base+0x7c4>
   12e88:	ldr	r3, [sp, #20]
   12e8c:	mov	r2, #2
   12e90:	mov	r1, #1
   12e94:	ldr	r0, [pc, #976]	; 1326c <_start@@Base+0xc00>
   12e98:	bl	12378 <fwrite@plt>
   12e9c:	b	12e30 <_start@@Base+0x7c4>
   12ea0:	ldr	r3, [sp, #20]
   12ea4:	mov	r2, #2
   12ea8:	mov	r1, #1
   12eac:	ldr	r0, [pc, #956]	; 13270 <_start@@Base+0xc04>
   12eb0:	bl	12378 <fwrite@plt>
   12eb4:	b	12e30 <_start@@Base+0x7c4>
   12eb8:	ldr	r3, [sp, #20]
   12ebc:	mov	r2, #2
   12ec0:	mov	r1, #1
   12ec4:	mov	r0, sl
   12ec8:	bl	12378 <fwrite@plt>
   12ecc:	b	12e30 <_start@@Base+0x7c4>
   12ed0:	ldr	r3, [sp, #20]
   12ed4:	mov	r2, #2
   12ed8:	mov	r1, #1
   12edc:	ldr	r0, [pc, #912]	; 13274 <_start@@Base+0xc08>
   12ee0:	bl	12378 <fwrite@plt>
   12ee4:	b	12e30 <_start@@Base+0x7c4>
   12ee8:	ldr	r3, [sp, #20]
   12eec:	mov	r2, #2
   12ef0:	mov	r1, #1
   12ef4:	mov	r0, fp
   12ef8:	bl	12378 <fwrite@plt>
   12efc:	b	12e30 <_start@@Base+0x7c4>
   12f00:	ldr	r3, [sp, #20]
   12f04:	mov	r2, #2
   12f08:	mov	r1, #1
   12f0c:	ldr	r0, [pc, #868]	; 13278 <_start@@Base+0xc0c>
   12f10:	bl	12378 <fwrite@plt>
   12f14:	b	12e30 <_start@@Base+0x7c4>
   12f18:	sub	r3, r2, #32
   12f1c:	uxtb	r3, r3
   12f20:	cmp	r3, #94	; 0x5e
   12f24:	bhi	12f38 <_start@@Base+0x8cc>
   12f28:	ldr	r1, [sp, #20]
   12f2c:	mov	r0, r2
   12f30:	bl	12594 <fputc@plt>
   12f34:	b	12e30 <_start@@Base+0x7c4>
   12f38:	mov	r1, r9
   12f3c:	ldr	r0, [sp, #20]
   12f40:	bl	1245c <fprintf@plt>
   12f44:	b	12e30 <_start@@Base+0x7c4>
   12f48:	mov	r0, r8
   12f4c:	bl	12294 <free@plt>
   12f50:	b	130e8 <_start@@Base+0xa7c>
   12f54:	add	r1, sp, #56	; 0x38
   12f58:	ldr	r0, [pc, #720]	; 13230 <_start@@Base+0xbc4>
   12f5c:	bl	125dc <coda_cursor_read_int32@plt>
   12f60:	cmp	r0, #0
   12f64:	bne	12f7c <_start@@Base+0x910>
   12f68:	ldr	r2, [sp, #56]	; 0x38
   12f6c:	ldr	r1, [pc, #776]	; 1327c <_start@@Base+0xc10>
   12f70:	ldr	r0, [sp, #20]
   12f74:	bl	1245c <fprintf@plt>
   12f78:	b	130e8 <_start@@Base+0xa7c>
   12f7c:	bl	1853c <handle_coda_error@@Base>
   12f80:	b	12f68 <_start@@Base+0x8fc>
   12f84:	add	r1, sp, #56	; 0x38
   12f88:	ldr	r0, [pc, #672]	; 13230 <_start@@Base+0xbc4>
   12f8c:	bl	122b8 <coda_cursor_read_uint32@plt>
   12f90:	cmp	r0, #0
   12f94:	bne	12fac <_start@@Base+0x940>
   12f98:	ldr	r2, [sp, #56]	; 0x38
   12f9c:	ldr	r1, [pc, #732]	; 13280 <_start@@Base+0xc14>
   12fa0:	ldr	r0, [sp, #20]
   12fa4:	bl	1245c <fprintf@plt>
   12fa8:	b	130e8 <_start@@Base+0xa7c>
   12fac:	bl	1853c <handle_coda_error@@Base>
   12fb0:	b	12f98 <_start@@Base+0x92c>
   12fb4:	add	r1, sp, #48	; 0x30
   12fb8:	ldr	r0, [pc, #624]	; 13230 <_start@@Base+0xbc4>
   12fbc:	bl	1254c <coda_cursor_read_int64@plt>
   12fc0:	cmp	r0, #0
   12fc4:	bne	12fe4 <_start@@Base+0x978>
   12fc8:	add	r2, sp, #56	; 0x38
   12fcc:	ldrd	r0, [sp, #48]	; 0x30
   12fd0:	bl	12648 <coda_str64@plt>
   12fd4:	ldr	r1, [sp, #20]
   12fd8:	add	r0, sp, #56	; 0x38
   12fdc:	bl	12624 <fputs@plt>
   12fe0:	b	130e8 <_start@@Base+0xa7c>
   12fe4:	bl	1853c <handle_coda_error@@Base>
   12fe8:	b	12fc8 <_start@@Base+0x95c>
   12fec:	add	r1, sp, #48	; 0x30
   12ff0:	ldr	r0, [pc, #568]	; 13230 <_start@@Base+0xbc4>
   12ff4:	bl	12438 <coda_cursor_read_uint64@plt>
   12ff8:	cmp	r0, #0
   12ffc:	bne	1301c <_start@@Base+0x9b0>
   13000:	add	r2, sp, #56	; 0x38
   13004:	ldrd	r0, [sp, #48]	; 0x30
   13008:	bl	12288 <coda_str64u@plt>
   1300c:	ldr	r1, [sp, #20]
   13010:	add	r0, sp, #56	; 0x38
   13014:	bl	12624 <fputs@plt>
   13018:	b	130e8 <_start@@Base+0xa7c>
   1301c:	bl	1853c <handle_coda_error@@Base>
   13020:	b	13000 <_start@@Base+0x994>
   13024:	add	r1, sp, #56	; 0x38
   13028:	ldr	r0, [pc, #512]	; 13230 <_start@@Base+0xbc4>
   1302c:	bl	12444 <coda_cursor_read_double@plt>
   13030:	cmp	r0, #0
   13034:	bne	13058 <_start@@Base+0x9ec>
   13038:	ldr	r3, [sp, #44]	; 0x2c
   1303c:	cmp	r3, #8
   13040:	ldrd	r2, [sp, #56]	; 0x38
   13044:	ldreq	r1, [pc, #568]	; 13284 <_start@@Base+0xc18>
   13048:	ldrne	r1, [pc, #568]	; 13288 <_start@@Base+0xc1c>
   1304c:	ldr	r0, [sp, #20]
   13050:	bl	1245c <fprintf@plt>
   13054:	b	130e8 <_start@@Base+0xa7c>
   13058:	bl	1853c <handle_coda_error@@Base>
   1305c:	b	13038 <_start@@Base+0x9cc>
   13060:	ldr	r3, [pc, #548]	; 1328c <_start@@Base+0xc20>
   13064:	ldr	r2, [pc, #548]	; 13290 <_start@@Base+0xc24>
   13068:	ldr	r1, [pc, #480]	; 13250 <_start@@Base+0xbe4>
   1306c:	ldr	r0, [pc, #544]	; 13294 <_start@@Base+0xc28>
   13070:	bl	12654 <__assert_fail@plt>
   13074:	ldr	r3, [sp, #24]
   13078:	add	r2, r3, #2
   1307c:	add	r1, sp, #44	; 0x2c
   13080:	ldr	r3, [pc, #412]	; 13224 <_start@@Base+0xbb8>
   13084:	ldr	r0, [r3, r2, lsl #2]
   13088:	bl	124d4 <coda_type_get_special_type@plt>
   1308c:	cmp	r0, #0
   13090:	bne	130fc <_start@@Base+0xa90>
   13094:	ldr	r3, [sp, #44]	; 0x2c
   13098:	cmp	r3, #1
   1309c:	bcc	130e8 <_start@@Base+0xa7c>
   130a0:	cmp	r3, #2
   130a4:	bls	13104 <_start@@Base+0xa98>
   130a8:	cmp	r3, #3
   130ac:	bne	130e8 <_start@@Base+0xa7c>
   130b0:	add	r1, sp, #56	; 0x38
   130b4:	ldr	r0, [pc, #372]	; 13230 <_start@@Base+0xbc4>
   130b8:	bl	1257c <coda_cursor_read_complex_double_pair@plt>
   130bc:	cmp	r0, #0
   130c0:	bne	131e8 <_start@@Base+0xb7c>
   130c4:	ldrd	r2, [sp, #64]	; 0x40
   130c8:	strd	r2, [sp, #8]
   130cc:	ldr	r3, [pc, #360]	; 1323c <_start@@Base+0xbd0>
   130d0:	ldr	r3, [r3]
   130d4:	str	r3, [sp]
   130d8:	ldrd	r2, [sp, #56]	; 0x38
   130dc:	ldr	r1, [pc, #436]	; 13298 <_start@@Base+0xc2c>
   130e0:	ldr	r0, [sp, #20]
   130e4:	bl	1245c <fprintf@plt>
   130e8:	ldr	r1, [sp, #20]
   130ec:	mov	r0, #10
   130f0:	bl	12594 <fputc@plt>
   130f4:	add	sp, sp, #100	; 0x64
   130f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   130fc:	bl	1853c <handle_coda_error@@Base>
   13100:	b	13094 <_start@@Base+0xa28>
   13104:	add	r1, sp, #48	; 0x30
   13108:	ldr	r0, [pc, #288]	; 13230 <_start@@Base+0xbc4>
   1310c:	bl	12444 <coda_cursor_read_double@plt>
   13110:	cmp	r0, #0
   13114:	bne	13148 <_start@@Base+0xadc>
   13118:	ldr	r3, [sp, #44]	; 0x2c
   1311c:	cmp	r3, #2
   13120:	bne	13134 <_start@@Base+0xac8>
   13124:	ldr	r3, [pc, #368]	; 1329c <_start@@Base+0xc30>
   13128:	ldr	r3, [r3]
   1312c:	cmp	r3, #0
   13130:	bne	13150 <_start@@Base+0xae4>
   13134:	ldrd	r2, [sp, #48]	; 0x30
   13138:	ldr	r1, [pc, #328]	; 13288 <_start@@Base+0xc1c>
   1313c:	ldr	r0, [sp, #20]
   13140:	bl	1245c <fprintf@plt>
   13144:	b	130e8 <_start@@Base+0xa7c>
   13148:	bl	1853c <handle_coda_error@@Base>
   1314c:	b	13118 <_start@@Base+0xaac>
   13150:	vldr	d0, [sp, #48]	; 0x30
   13154:	bl	12450 <coda_isNaN@plt>
   13158:	cmp	r0, #0
   1315c:	beq	131a8 <_start@@Base+0xb3c>
   13160:	add	ip, sp, #56	; 0x38
   13164:	ldr	lr, [pc, #308]	; 132a0 <_start@@Base+0xc34>
   13168:	ldm	lr!, {r0, r1, r2, r3}
   1316c:	stmia	ip!, {r0, r1, r2, r3}
   13170:	ldm	lr, {r0, r1, r2}
   13174:	stmia	ip!, {r0, r1}
   13178:	strh	r2, [ip], #2
   1317c:	lsr	r2, r2, #16
   13180:	strb	r2, [ip]
   13184:	ldr	r3, [pc, #184]	; 13244 <_start@@Base+0xbd8>
   13188:	ldr	r3, [r3]
   1318c:	cmp	r3, #0
   13190:	beq	131d8 <_start@@Base+0xb6c>
   13194:	add	r2, sp, #56	; 0x38
   13198:	ldr	r1, [pc, #172]	; 1324c <_start@@Base+0xbe0>
   1319c:	ldr	r0, [sp, #20]
   131a0:	bl	1245c <fprintf@plt>
   131a4:	b	130e8 <_start@@Base+0xa7c>
   131a8:	vldr	d0, [sp, #48]	; 0x30
   131ac:	bl	122f4 <coda_isInf@plt>
   131b0:	cmp	r0, #0
   131b4:	bne	13160 <_start@@Base+0xaf4>
   131b8:	add	r1, sp, #56	; 0x38
   131bc:	ldr	r0, [pc, #224]	; 132a4 <_start@@Base+0xc38>
   131c0:	vldr	d0, [sp, #48]	; 0x30
   131c4:	bl	12270 <coda_time_double_to_string@plt>
   131c8:	cmp	r0, #0
   131cc:	beq	13184 <_start@@Base+0xb18>
   131d0:	bl	1853c <handle_coda_error@@Base>
   131d4:	b	13184 <_start@@Base+0xb18>
   131d8:	ldr	r1, [sp, #20]
   131dc:	add	r0, sp, #56	; 0x38
   131e0:	bl	12624 <fputs@plt>
   131e4:	b	130e8 <_start@@Base+0xa7c>
   131e8:	bl	1853c <handle_coda_error@@Base>
   131ec:	b	130c4 <_start@@Base+0xa58>
   131f0:	ldr	r3, [pc, #148]	; 1328c <_start@@Base+0xc20>
   131f4:	mov	r2, #368	; 0x170
   131f8:	ldr	r1, [pc, #80]	; 13250 <_start@@Base+0xbe4>
   131fc:	ldr	r0, [pc, #144]	; 13294 <_start@@Base+0xc28>
   13200:	bl	12654 <__assert_fail@plt>
   13204:	ldr	r0, [pc, #36]	; 13230 <_start@@Base+0xbc4>
   13208:	bl	1236c <coda_cursor_goto_first_array_element@plt>
   1320c:	cmp	r0, #0
   13210:	moveq	r4, #1
   13214:	beq	128e4 <_start@@Base+0x278>
   13218:	mov	r4, #1
   1321c:	bl	1853c <handle_coda_error@@Base>
   13220:	b	128dc <_start@@Base+0x270>
   13224:	strdeq	ip, [r2], -r0
   13228:	strheq	sp, [r2], -r8
   1322c:	andeq	ip, r2, ip, lsr r5
   13230:	andeq	ip, r2, r0, lsl #5
   13234:	andeq	sp, r2, r8, lsr #1
   13238:	strdeq	ip, [r2], -r4
   1323c:	muleq	r2, ip, r0
   13240:	andeq	r9, r1, r0, ror sp
   13244:	andeq	sp, r2, ip, lsr #4
   13248:	andeq	r9, r1, r8, ror sp
   1324c:	andeq	r9, r1, r4, lsl #28
   13250:	andeq	r9, r1, r0, lsl #27
   13254:	andeq	r9, r1, ip, asr #27
   13258:	andeq	r9, r1, r8, lsl lr
   1325c:	andeq	r9, r1, ip, lsr #28
   13260:	andeq	r9, r1, r0, lsr #28
   13264:	andeq	r9, r1, ip, lsl #28
   13268:	andeq	r9, r1, r8, lsr #28
   1326c:	andeq	r9, r1, r0, lsl lr
   13270:	andeq	r9, r1, r4, lsl lr
   13274:	andeq	r9, r1, ip, lsl lr
   13278:	andeq	r9, r1, r4, lsr #28
   1327c:	andeq	sl, r1, ip, asr #7
   13280:	andeq	r9, r1, r4, lsr lr
   13284:	andeq	r9, r1, r8, lsr lr
   13288:	andeq	r9, r1, r0, asr #28
   1328c:	andeq	r9, r1, ip, asr sp
   13290:	andeq	r0, r0, r6, lsr #2
   13294:	andeq	sl, r1, r4, lsl #3
   13298:	andeq	r9, r1, r4, ror #28
   1329c:	andeq	ip, r2, r4, ror #3
   132a0:	andeq	r9, r1, ip, ror #28
   132a4:	andeq	r9, r1, r8, asr #28

000132a8 <export_data_element_to_ascii@@Base>:
   132a8:	push	{r4, lr}
   132ac:	ldr	r3, [pc, #164]	; 13358 <export_data_element_to_ascii@@Base+0xb0>
   132b0:	ldr	r3, [r3]
   132b4:	cmp	r3, #0
   132b8:	beq	13320 <export_data_element_to_ascii@@Base+0x78>
   132bc:	mov	r2, #0
   132c0:	ldr	r3, [pc, #144]	; 13358 <export_data_element_to_ascii@@Base+0xb0>
   132c4:	str	r2, [r3]
   132c8:	ldr	r3, [pc, #140]	; 1335c <export_data_element_to_ascii@@Base+0xb4>
   132cc:	ldr	r3, [r3]
   132d0:	cmp	r3, #0
   132d4:	bne	13334 <export_data_element_to_ascii@@Base+0x8c>
   132d8:	ldr	r3, [pc, #128]	; 13360 <export_data_element_to_ascii@@Base+0xb8>
   132dc:	ldr	r3, [r3]
   132e0:	cmp	r3, #0
   132e4:	ble	13304 <export_data_element_to_ascii@@Base+0x5c>
   132e8:	add	r3, r3, #37	; 0x25
   132ec:	lsl	r3, r3, #3
   132f0:	ldr	r2, [pc, #104]	; 13360 <export_data_element_to_ascii@@Base+0xb8>
   132f4:	add	r2, r2, r3
   132f8:	ldrd	r2, [r2]
   132fc:	orrs	r3, r2, r3
   13300:	popeq	{r4, pc}
   13304:	mov	r3, #0
   13308:	mov	r2, r3
   1330c:	mov	r1, r3
   13310:	ldr	r0, [pc, #76]	; 13364 <export_data_element_to_ascii@@Base+0xbc>
   13314:	ldr	r0, [r0]
   13318:	bl	12794 <_start@@Base+0x128>
   1331c:	pop	{r4, pc}
   13320:	ldr	r3, [pc, #60]	; 13364 <export_data_element_to_ascii@@Base+0xbc>
   13324:	ldr	r1, [r3]
   13328:	mov	r0, #10
   1332c:	bl	12594 <fputc@plt>
   13330:	b	132c8 <export_data_element_to_ascii@@Base+0x20>
   13334:	ldr	r4, [pc, #40]	; 13364 <export_data_element_to_ascii@@Base+0xbc>
   13338:	mov	r2, #0
   1333c:	mov	r1, #2
   13340:	ldr	r0, [r4]
   13344:	bl	16814 <print_full_field_name@@Base>
   13348:	ldr	r1, [r4]
   1334c:	mov	r0, #10
   13350:	bl	12594 <fputc@plt>
   13354:	b	132d8 <export_data_element_to_ascii@@Base+0x30>
   13358:	andeq	ip, r2, r8, lsr #3
   1335c:	andeq	sp, r2, r8, lsr #4
   13360:	strheq	sp, [r2], -r8
   13364:	muleq	r2, r8, r0
   13368:	push	{r0, r1, r2, r3}
   1336c:	push	{lr}		; (str lr, [sp, #-4]!)
   13370:	sub	sp, sp, #12
   13374:	add	r2, sp, #20
   13378:	str	r2, [sp, #4]
   1337c:	ldr	r1, [sp, #16]
   13380:	ldr	r3, [pc, #20]	; 1339c <export_data_element_to_ascii@@Base+0xf4>
   13384:	ldr	r0, [r3]
   13388:	bl	12558 <vfprintf@plt>
   1338c:	add	sp, sp, #12
   13390:	pop	{lr}		; (ldr lr, [sp], #4)
   13394:	add	sp, sp, #16
   13398:	bx	lr
   1339c:	muleq	r2, r8, r0
   133a0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   133a4:	subs	r5, r1, #0
   133a8:	pople	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   133ac:	mov	r4, r0
   133b0:	add	r5, r0, r5
   133b4:	ldr	r9, [pc, #216]	; 13494 <export_data_element_to_ascii@@Base+0x1ec>
   133b8:	ldr	fp, [pc, #216]	; 13498 <export_data_element_to_ascii@@Base+0x1f0>
   133bc:	ldr	sl, [pc, #216]	; 1349c <export_data_element_to_ascii@@Base+0x1f4>
   133c0:	ldr	r8, [pc, #216]	; 134a0 <export_data_element_to_ascii@@Base+0x1f8>
   133c4:	ldr	r7, [pc, #216]	; 134a4 <export_data_element_to_ascii@@Base+0x1fc>
   133c8:	ldr	r6, [pc, #216]	; 134a8 <export_data_element_to_ascii@@Base+0x200>
   133cc:	b	133f4 <export_data_element_to_ascii@@Base+0x14c>
   133d0:	cmp	r1, #8
   133d4:	beq	1342c <export_data_element_to_ascii@@Base+0x184>
   133d8:	bhi	13438 <export_data_element_to_ascii@@Base+0x190>
   133dc:	cmp	r1, #7
   133e0:	bne	13474 <export_data_element_to_ascii@@Base+0x1cc>
   133e4:	ldr	r0, [pc, #192]	; 134ac <export_data_element_to_ascii@@Base+0x204>
   133e8:	bl	13368 <export_data_element_to_ascii@@Base+0xc0>
   133ec:	cmp	r4, r5
   133f0:	beq	13490 <export_data_element_to_ascii@@Base+0x1e8>
   133f4:	ldrb	r1, [r4], #1
   133f8:	cmp	r1, #10
   133fc:	beq	13444 <export_data_element_to_ascii@@Base+0x19c>
   13400:	bls	133d0 <export_data_element_to_ascii@@Base+0x128>
   13404:	cmp	r1, #12
   13408:	beq	1345c <export_data_element_to_ascii@@Base+0x1b4>
   1340c:	bcc	13450 <export_data_element_to_ascii@@Base+0x1a8>
   13410:	cmp	r1, #13
   13414:	beq	13468 <export_data_element_to_ascii@@Base+0x1c0>
   13418:	cmp	r1, #92	; 0x5c
   1341c:	bne	13474 <export_data_element_to_ascii@@Base+0x1cc>
   13420:	ldr	r0, [pc, #136]	; 134b0 <export_data_element_to_ascii@@Base+0x208>
   13424:	bl	13368 <export_data_element_to_ascii@@Base+0xc0>
   13428:	b	133ec <export_data_element_to_ascii@@Base+0x144>
   1342c:	ldr	r0, [pc, #128]	; 134b4 <export_data_element_to_ascii@@Base+0x20c>
   13430:	bl	13368 <export_data_element_to_ascii@@Base+0xc0>
   13434:	b	133ec <export_data_element_to_ascii@@Base+0x144>
   13438:	ldr	r0, [pc, #120]	; 134b8 <export_data_element_to_ascii@@Base+0x210>
   1343c:	bl	13368 <export_data_element_to_ascii@@Base+0xc0>
   13440:	b	133ec <export_data_element_to_ascii@@Base+0x144>
   13444:	mov	r0, r9
   13448:	bl	13368 <export_data_element_to_ascii@@Base+0xc0>
   1344c:	b	133ec <export_data_element_to_ascii@@Base+0x144>
   13450:	mov	r0, r7
   13454:	bl	13368 <export_data_element_to_ascii@@Base+0xc0>
   13458:	b	133ec <export_data_element_to_ascii@@Base+0x144>
   1345c:	mov	r0, r8
   13460:	bl	13368 <export_data_element_to_ascii@@Base+0xc0>
   13464:	b	133ec <export_data_element_to_ascii@@Base+0x144>
   13468:	mov	r0, r6
   1346c:	bl	13368 <export_data_element_to_ascii@@Base+0xc0>
   13470:	b	133ec <export_data_element_to_ascii@@Base+0x144>
   13474:	sub	r3, r1, #32
   13478:	uxtb	r3, r3
   1347c:	cmp	r3, #94	; 0x5e
   13480:	movls	r0, sl
   13484:	movhi	r0, fp
   13488:	bl	13368 <export_data_element_to_ascii@@Base+0xc0>
   1348c:	b	133ec <export_data_element_to_ascii@@Base+0x144>
   13490:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13494:	andeq	r9, r1, r8, lsl lr
   13498:	andeq	r9, r1, ip, lsr #28
   1349c:	muleq	r1, ip, lr
   134a0:	andeq	r9, r1, r0, lsr #28
   134a4:	andeq	r9, r1, ip, lsl lr
   134a8:	andeq	r9, r1, r4, lsr #28
   134ac:	andeq	r9, r1, ip, lsl #28
   134b0:	andeq	r9, r1, r8, lsr #28
   134b4:	andeq	r9, r1, r0, lsl lr
   134b8:	andeq	r9, r1, r4, lsl lr
   134bc:	push	{r0, r1, r2, r3}
   134c0:	push	{r4, r5, r6, r7, r8, lr}
   134c4:	sub	sp, sp, #8
   134c8:	ldr	r3, [pc, #116]	; 13544 <export_data_element_to_ascii@@Base+0x29c>
   134cc:	ldr	r4, [r3]
   134d0:	cmp	r4, #0
   134d4:	blt	13530 <export_data_element_to_ascii@@Base+0x288>
   134d8:	ble	13508 <export_data_element_to_ascii@@Base+0x260>
   134dc:	ldr	r8, [pc, #100]	; 13548 <export_data_element_to_ascii@@Base+0x2a0>
   134e0:	ldr	r7, [pc, #100]	; 1354c <export_data_element_to_ascii@@Base+0x2a4>
   134e4:	mov	r6, #2
   134e8:	mov	r5, #1
   134ec:	ldr	r3, [r8]
   134f0:	mov	r2, r6
   134f4:	mov	r1, r5
   134f8:	mov	r0, r7
   134fc:	bl	12378 <fwrite@plt>
   13500:	subs	r4, r4, #1
   13504:	bne	134ec <export_data_element_to_ascii@@Base+0x244>
   13508:	add	r2, sp, #36	; 0x24
   1350c:	str	r2, [sp, #4]
   13510:	ldr	r1, [sp, #32]
   13514:	ldr	r3, [pc, #44]	; 13548 <export_data_element_to_ascii@@Base+0x2a0>
   13518:	ldr	r0, [r3]
   1351c:	bl	12558 <vfprintf@plt>
   13520:	add	sp, sp, #8
   13524:	pop	{r4, r5, r6, r7, r8, lr}
   13528:	add	sp, sp, #16
   1352c:	bx	lr
   13530:	ldr	r3, [pc, #24]	; 13550 <export_data_element_to_ascii@@Base+0x2a8>
   13534:	mov	r2, #44	; 0x2c
   13538:	ldr	r1, [pc, #20]	; 13554 <export_data_element_to_ascii@@Base+0x2ac>
   1353c:	ldr	r0, [pc, #20]	; 13558 <export_data_element_to_ascii@@Base+0x2b0>
   13540:	bl	12654 <__assert_fail@plt>
   13544:	andeq	ip, r2, r4, asr #3
   13548:	muleq	r2, r8, r0
   1354c:	andeq	r9, r1, r4, lsl #29
   13550:	andeq	r9, r1, r8, lsl #29
   13554:	andeq	r9, r1, r0, lsr #29
   13558:	andeq	r9, r1, ip, ror #29
   1355c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13560:	sub	sp, sp, #620	; 0x26c
   13564:	mov	r6, r0
   13568:	mov	r8, r1
   1356c:	add	r1, sp, #608	; 0x260
   13570:	bl	12318 <coda_cursor_has_attributes@plt>
   13574:	cmp	r0, #0
   13578:	bne	135c8 <export_data_element_to_ascii@@Base+0x320>
   1357c:	ldr	r3, [sp, #608]	; 0x260
   13580:	cmp	r3, #0
   13584:	bne	135d0 <export_data_element_to_ascii@@Base+0x328>
   13588:	add	r1, sp, #612	; 0x264
   1358c:	mov	r0, r6
   13590:	bl	12324 <coda_cursor_get_type_class@plt>
   13594:	cmp	r0, #0
   13598:	bne	13624 <export_data_element_to_ascii@@Base+0x37c>
   1359c:	ldr	r3, [sp, #612]	; 0x264
   135a0:	cmp	r3, #6
   135a4:	ldrls	pc, [pc, r3, lsl #2]
   135a8:	b	13bdc <export_data_element_to_ascii@@Base+0x934>
   135ac:	andeq	r3, r1, ip, lsr #12
   135b0:	andeq	r3, r1, r0, ror r9
   135b4:	andeq	r3, r1, r4, ror #23
   135b8:	andeq	r3, r1, r4, ror #23
   135bc:	andeq	r3, r1, r4, ror #23
   135c0:	andeq	r3, r1, r4, ror #23
   135c4:	andeq	r3, r1, r8, asr pc
   135c8:	bl	1853c <handle_coda_error@@Base>
   135cc:	b	1357c <export_data_element_to_ascii@@Base+0x2d4>
   135d0:	mov	r0, r6
   135d4:	bl	12498 <coda_cursor_goto_attributes@plt>
   135d8:	cmp	r0, #0
   135dc:	bne	1361c <export_data_element_to_ascii@@Base+0x374>
   135e0:	ldr	r0, [pc, #2804]	; 140dc <export_data_element_to_ascii@@Base+0xe34>
   135e4:	bl	134bc <export_data_element_to_ascii@@Base+0x214>
   135e8:	ldr	r4, [pc, #2800]	; 140e0 <export_data_element_to_ascii@@Base+0xe38>
   135ec:	ldr	r3, [r4]
   135f0:	add	r3, r3, #1
   135f4:	str	r3, [r4]
   135f8:	mov	r1, r8
   135fc:	mov	r0, r6
   13600:	bl	1355c <export_data_element_to_ascii@@Base+0x2b4>
   13604:	ldr	r3, [r4]
   13608:	sub	r3, r3, #1
   1360c:	str	r3, [r4]
   13610:	mov	r0, r6
   13614:	bl	123fc <coda_cursor_goto_parent@plt>
   13618:	b	13588 <export_data_element_to_ascii@@Base+0x2e0>
   1361c:	bl	1853c <handle_coda_error@@Base>
   13620:	b	135e0 <export_data_element_to_ascii@@Base+0x338>
   13624:	bl	1853c <handle_coda_error@@Base>
   13628:	b	1359c <export_data_element_to_ascii@@Base+0x2f4>
   1362c:	add	r1, sp, #12
   13630:	mov	r0, r6
   13634:	bl	1227c <coda_cursor_get_num_elements@plt>
   13638:	cmp	r0, #0
   1363c:	bne	13738 <export_data_element_to_ascii@@Base+0x490>
   13640:	ldr	r3, [sp, #12]
   13644:	cmp	r3, #0
   13648:	ble	13bdc <export_data_element_to_ascii@@Base+0x934>
   1364c:	add	r1, sp, #16
   13650:	mov	r0, r6
   13654:	bl	122dc <coda_cursor_get_type@plt>
   13658:	cmp	r0, #0
   1365c:	bne	13740 <export_data_element_to_ascii@@Base+0x498>
   13660:	add	r1, sp, #20
   13664:	ldr	r0, [sp, #16]
   13668:	bl	124e0 <coda_type_get_record_union_status@plt>
   1366c:	cmp	r0, #0
   13670:	bne	13748 <export_data_element_to_ascii@@Base+0x4a0>
   13674:	ldr	r3, [sp, #20]
   13678:	cmp	r3, #0
   1367c:	beq	137e4 <export_data_element_to_ascii@@Base+0x53c>
   13680:	add	r1, sp, #24
   13684:	mov	r0, r6
   13688:	bl	125d0 <coda_cursor_get_available_union_field_index@plt>
   1368c:	cmp	r0, #0
   13690:	bne	13750 <export_data_element_to_ascii@@Base+0x4a8>
   13694:	add	r2, sp, #32
   13698:	ldr	r1, [sp, #24]
   1369c:	ldr	r0, [sp, #16]
   136a0:	bl	12618 <coda_type_get_record_field_name@plt>
   136a4:	cmp	r0, #0
   136a8:	bne	13758 <export_data_element_to_ascii@@Base+0x4b0>
   136ac:	ldr	r1, [sp, #24]
   136b0:	mov	r0, r6
   136b4:	bl	1239c <coda_cursor_goto_record_field_by_index@plt>
   136b8:	cmp	r0, #0
   136bc:	bne	13760 <export_data_element_to_ascii@@Base+0x4b8>
   136c0:	ldr	r1, [sp, #32]
   136c4:	ldr	r0, [pc, #2584]	; 140e4 <export_data_element_to_ascii@@Base+0xe3c>
   136c8:	bl	134bc <export_data_element_to_ascii@@Base+0x214>
   136cc:	ldr	r3, [pc, #2580]	; 140e8 <export_data_element_to_ascii@@Base+0xe40>
   136d0:	ldr	r3, [r3]
   136d4:	cmp	r3, #0
   136d8:	bne	13768 <export_data_element_to_ascii@@Base+0x4c0>
   136dc:	ldr	r0, [pc, #2568]	; 140ec <export_data_element_to_ascii@@Base+0xe44>
   136e0:	bl	13368 <export_data_element_to_ascii@@Base+0xc0>
   136e4:	ldr	r2, [pc, #2548]	; 140e0 <export_data_element_to_ascii@@Base+0xe38>
   136e8:	ldr	r3, [r2]
   136ec:	add	r3, r3, #1
   136f0:	str	r3, [r2]
   136f4:	ldr	r3, [pc, #2548]	; 140f0 <export_data_element_to_ascii@@Base+0xe48>
   136f8:	ldr	r3, [r3]
   136fc:	cmp	r8, r3
   13700:	movge	r2, #0
   13704:	movlt	r2, #1
   13708:	orrs	r3, r2, r3, lsr #31
   1370c:	beq	137d8 <export_data_element_to_ascii@@Base+0x530>
   13710:	add	r1, r8, #1
   13714:	mov	r0, r6
   13718:	bl	1355c <export_data_element_to_ascii@@Base+0x2b4>
   1371c:	ldr	r2, [pc, #2492]	; 140e0 <export_data_element_to_ascii@@Base+0xe38>
   13720:	ldr	r3, [r2]
   13724:	sub	r3, r3, #1
   13728:	str	r3, [r2]
   1372c:	mov	r0, r6
   13730:	bl	123fc <coda_cursor_goto_parent@plt>
   13734:	b	13bdc <export_data_element_to_ascii@@Base+0x934>
   13738:	bl	1853c <handle_coda_error@@Base>
   1373c:	b	13640 <export_data_element_to_ascii@@Base+0x398>
   13740:	bl	1853c <handle_coda_error@@Base>
   13744:	b	13660 <export_data_element_to_ascii@@Base+0x3b8>
   13748:	bl	1853c <handle_coda_error@@Base>
   1374c:	b	13674 <export_data_element_to_ascii@@Base+0x3cc>
   13750:	bl	1853c <handle_coda_error@@Base>
   13754:	b	13694 <export_data_element_to_ascii@@Base+0x3ec>
   13758:	bl	1853c <handle_coda_error@@Base>
   1375c:	b	136ac <export_data_element_to_ascii@@Base+0x404>
   13760:	bl	1853c <handle_coda_error@@Base>
   13764:	b	136c0 <export_data_element_to_ascii@@Base+0x418>
   13768:	add	r1, sp, #56	; 0x38
   1376c:	mov	r0, r6
   13770:	bl	125e8 <coda_cursor_get_file_bit_offset@plt>
   13774:	cmp	r0, #0
   13778:	bne	137d0 <export_data_element_to_ascii@@Base+0x528>
   1377c:	ldrd	r4, [sp, #56]	; 0x38
   13780:	cmp	r4, #0
   13784:	sbcs	r3, r5, #0
   13788:	blt	136dc <export_data_element_to_ascii@@Base+0x434>
   1378c:	lsr	r0, r4, #3
   13790:	add	r2, sp, #88	; 0x58
   13794:	orr	r0, r0, r5, lsl #29
   13798:	asr	r1, r5, #3
   1379c:	bl	12648 <coda_str64@plt>
   137a0:	add	r1, sp, #88	; 0x58
   137a4:	ldr	r0, [pc, #2376]	; 140f4 <export_data_element_to_ascii@@Base+0xe4c>
   137a8:	bl	13368 <export_data_element_to_ascii@@Base+0xc0>
   137ac:	ldrd	r2, [sp, #56]	; 0x38
   137b0:	and	r0, r2, #7
   137b4:	mov	r1, #0
   137b8:	orrs	r1, r0, r1
   137bc:	beq	136dc <export_data_element_to_ascii@@Base+0x434>
   137c0:	and	r1, r2, #7
   137c4:	ldr	r0, [pc, #2348]	; 140f8 <export_data_element_to_ascii@@Base+0xe50>
   137c8:	bl	13368 <export_data_element_to_ascii@@Base+0xc0>
   137cc:	b	136dc <export_data_element_to_ascii@@Base+0x434>
   137d0:	bl	1853c <handle_coda_error@@Base>
   137d4:	b	1377c <export_data_element_to_ascii@@Base+0x4d4>
   137d8:	ldr	r0, [pc, #2332]	; 140fc <export_data_element_to_ascii@@Base+0xe54>
   137dc:	bl	134bc <export_data_element_to_ascii@@Base+0x214>
   137e0:	b	1371c <export_data_element_to_ascii@@Base+0x474>
   137e4:	mov	r0, r6
   137e8:	bl	12390 <coda_cursor_goto_first_record_field@plt>
   137ec:	cmp	r0, #0
   137f0:	bne	13820 <export_data_element_to_ascii@@Base+0x578>
   137f4:	mov	r3, #0
   137f8:	str	r3, [sp, #24]
   137fc:	ldr	r3, [sp, #12]
   13800:	cmp	r3, #0
   13804:	ble	13964 <export_data_element_to_ascii@@Base+0x6bc>
   13808:	mov	r1, #0
   1380c:	ldr	r9, [pc, #2256]	; 140e4 <export_data_element_to_ascii@@Base+0xe3c>
   13810:	ldr	r7, [pc, #2256]	; 140e8 <export_data_element_to_ascii@@Base+0xe40>
   13814:	ldr	r5, [pc, #2256]	; 140ec <export_data_element_to_ascii@@Base+0xe44>
   13818:	ldr	r4, [pc, #2240]	; 140e0 <export_data_element_to_ascii@@Base+0xe38>
   1381c:	b	138c4 <export_data_element_to_ascii@@Base+0x61c>
   13820:	bl	1853c <handle_coda_error@@Base>
   13824:	b	137f4 <export_data_element_to_ascii@@Base+0x54c>
   13828:	bl	1853c <handle_coda_error@@Base>
   1382c:	b	138d8 <export_data_element_to_ascii@@Base+0x630>
   13830:	add	r1, sp, #56	; 0x38
   13834:	mov	r0, r6
   13838:	bl	125e8 <coda_cursor_get_file_bit_offset@plt>
   1383c:	cmp	r0, #0
   13840:	bne	13898 <export_data_element_to_ascii@@Base+0x5f0>
   13844:	ldrd	sl, [sp, #56]	; 0x38
   13848:	cmp	sl, #0
   1384c:	sbcs	r3, fp, #0
   13850:	blt	138f0 <export_data_element_to_ascii@@Base+0x648>
   13854:	lsr	r0, sl, #3
   13858:	add	r2, sp, #88	; 0x58
   1385c:	orr	r0, r0, fp, lsl #29
   13860:	asr	r1, fp, #3
   13864:	bl	12648 <coda_str64@plt>
   13868:	add	r1, sp, #88	; 0x58
   1386c:	ldr	r0, [pc, #2176]	; 140f4 <export_data_element_to_ascii@@Base+0xe4c>
   13870:	bl	13368 <export_data_element_to_ascii@@Base+0xc0>
   13874:	ldrd	r2, [sp, #56]	; 0x38
   13878:	and	r0, r2, #7
   1387c:	mov	r1, #0
   13880:	orrs	r1, r0, r1
   13884:	beq	138f0 <export_data_element_to_ascii@@Base+0x648>
   13888:	and	r1, r2, #7
   1388c:	ldr	r0, [pc, #2148]	; 140f8 <export_data_element_to_ascii@@Base+0xe50>
   13890:	bl	13368 <export_data_element_to_ascii@@Base+0xc0>
   13894:	b	138f0 <export_data_element_to_ascii@@Base+0x648>
   13898:	bl	1853c <handle_coda_error@@Base>
   1389c:	b	13844 <export_data_element_to_ascii@@Base+0x59c>
   138a0:	ldr	r0, [pc, #2132]	; 140fc <export_data_element_to_ascii@@Base+0xe54>
   138a4:	bl	134bc <export_data_element_to_ascii@@Base+0x214>
   138a8:	b	1392c <export_data_element_to_ascii@@Base+0x684>
   138ac:	ldr	r1, [sp, #24]
   138b0:	add	r1, r1, #1
   138b4:	str	r1, [sp, #24]
   138b8:	ldr	r3, [sp, #12]
   138bc:	cmp	r3, r1
   138c0:	ble	13964 <export_data_element_to_ascii@@Base+0x6bc>
   138c4:	add	r2, sp, #32
   138c8:	ldr	r0, [sp, #16]
   138cc:	bl	12618 <coda_type_get_record_field_name@plt>
   138d0:	cmp	r0, #0
   138d4:	bne	13828 <export_data_element_to_ascii@@Base+0x580>
   138d8:	ldr	r1, [sp, #32]
   138dc:	mov	r0, r9
   138e0:	bl	134bc <export_data_element_to_ascii@@Base+0x214>
   138e4:	ldr	r3, [r7]
   138e8:	cmp	r3, #0
   138ec:	bne	13830 <export_data_element_to_ascii@@Base+0x588>
   138f0:	mov	r0, r5
   138f4:	bl	13368 <export_data_element_to_ascii@@Base+0xc0>
   138f8:	ldr	r3, [r4]
   138fc:	add	r3, r3, #1
   13900:	str	r3, [r4]
   13904:	ldr	r3, [pc, #2020]	; 140f0 <export_data_element_to_ascii@@Base+0xe48>
   13908:	ldr	r3, [r3]
   1390c:	cmp	r8, r3
   13910:	movge	r2, #0
   13914:	movlt	r2, #1
   13918:	orrs	r3, r2, r3, lsr #31
   1391c:	beq	138a0 <export_data_element_to_ascii@@Base+0x5f8>
   13920:	add	r1, r8, #1
   13924:	mov	r0, r6
   13928:	bl	1355c <export_data_element_to_ascii@@Base+0x2b4>
   1392c:	ldr	r3, [r4]
   13930:	sub	r3, r3, #1
   13934:	str	r3, [r4]
   13938:	ldr	r3, [sp, #12]
   1393c:	sub	r3, r3, #1
   13940:	ldr	r2, [sp, #24]
   13944:	cmp	r3, r2
   13948:	ble	138ac <export_data_element_to_ascii@@Base+0x604>
   1394c:	mov	r0, r6
   13950:	bl	12588 <coda_cursor_goto_next_record_field@plt>
   13954:	cmp	r0, #0
   13958:	beq	138ac <export_data_element_to_ascii@@Base+0x604>
   1395c:	bl	1853c <handle_coda_error@@Base>
   13960:	b	138ac <export_data_element_to_ascii@@Base+0x604>
   13964:	mov	r0, r6
   13968:	bl	123fc <coda_cursor_goto_parent@plt>
   1396c:	b	13bdc <export_data_element_to_ascii@@Base+0x934>
   13970:	add	r2, sp, #56	; 0x38
   13974:	add	r1, sp, #20
   13978:	mov	r0, r6
   1397c:	bl	12528 <coda_cursor_get_array_dim@plt>
   13980:	cmp	r0, #0
   13984:	bne	139e8 <export_data_element_to_ascii@@Base+0x740>
   13988:	ldr	r0, [sp, #20]
   1398c:	cmp	r0, #0
   13990:	blt	13bdc <export_data_element_to_ascii@@Base+0x934>
   13994:	ble	139f0 <export_data_element_to_ascii@@Base+0x748>
   13998:	add	r3, sp, #56	; 0x38
   1399c:	add	r2, sp, #88	; 0x58
   139a0:	add	r0, r3, r0, lsl #2
   139a4:	mov	r7, #1
   139a8:	mov	ip, #0
   139ac:	ldr	r1, [r3], #4
   139b0:	mul	r7, r1, r7
   139b4:	str	ip, [r2], #4
   139b8:	cmp	r3, r0
   139bc:	bne	139ac <export_data_element_to_ascii@@Base+0x704>
   139c0:	cmp	r7, #0
   139c4:	ble	13bdc <export_data_element_to_ascii@@Base+0x934>
   139c8:	mov	r0, r6
   139cc:	bl	1236c <coda_cursor_goto_first_array_element@plt>
   139d0:	cmp	r0, #0
   139d4:	bne	139f8 <export_data_element_to_ascii@@Base+0x750>
   139d8:	mov	sl, #0
   139dc:	ldr	fp, [pc, #1796]	; 140e8 <export_data_element_to_ascii@@Base+0xe40>
   139e0:	ldr	r9, [pc, #1784]	; 140e0 <export_data_element_to_ascii@@Base+0xe38>
   139e4:	b	13b30 <export_data_element_to_ascii@@Base+0x888>
   139e8:	bl	1853c <handle_coda_error@@Base>
   139ec:	b	13988 <export_data_element_to_ascii@@Base+0x6e0>
   139f0:	mov	r7, #1
   139f4:	b	139c8 <export_data_element_to_ascii@@Base+0x720>
   139f8:	bl	1853c <handle_coda_error@@Base>
   139fc:	b	139d8 <export_data_element_to_ascii@@Base+0x730>
   13a00:	add	r4, r4, #1
   13a04:	ldr	r3, [sp, #20]
   13a08:	cmp	r3, r4
   13a0c:	ble	13a38 <export_data_element_to_ascii@@Base+0x790>
   13a10:	ldr	r1, [r5], #4
   13a14:	ldr	r0, [pc, #1764]	; 14100 <export_data_element_to_ascii@@Base+0xe58>
   13a18:	bl	13368 <export_data_element_to_ascii@@Base+0xc0>
   13a1c:	ldr	r3, [sp, #20]
   13a20:	sub	r3, r3, #1
   13a24:	cmp	r3, r4
   13a28:	ble	13a00 <export_data_element_to_ascii@@Base+0x758>
   13a2c:	ldr	r0, [pc, #1744]	; 14104 <export_data_element_to_ascii@@Base+0xe5c>
   13a30:	bl	13368 <export_data_element_to_ascii@@Base+0xc0>
   13a34:	b	13a00 <export_data_element_to_ascii@@Base+0x758>
   13a38:	ldr	r0, [pc, #1736]	; 14108 <export_data_element_to_ascii@@Base+0xe60>
   13a3c:	bl	13368 <export_data_element_to_ascii@@Base+0xc0>
   13a40:	ldr	r3, [fp]
   13a44:	cmp	r3, #0
   13a48:	bne	13b50 <export_data_element_to_ascii@@Base+0x8a8>
   13a4c:	ldr	r0, [pc, #1688]	; 140ec <export_data_element_to_ascii@@Base+0xe44>
   13a50:	bl	13368 <export_data_element_to_ascii@@Base+0xc0>
   13a54:	ldr	r3, [r9]
   13a58:	add	r3, r3, #1
   13a5c:	str	r3, [r9]
   13a60:	ldr	r3, [pc, #1672]	; 140f0 <export_data_element_to_ascii@@Base+0xe48>
   13a64:	ldr	r3, [r3]
   13a68:	cmp	r8, r3
   13a6c:	movge	r2, #0
   13a70:	movlt	r2, #1
   13a74:	orrs	r3, r2, r3, lsr #31
   13a78:	beq	13bc0 <export_data_element_to_ascii@@Base+0x918>
   13a7c:	add	r1, r8, #1
   13a80:	mov	r0, r6
   13a84:	bl	1355c <export_data_element_to_ascii@@Base+0x2b4>
   13a88:	ldr	r3, [r9]
   13a8c:	sub	r3, r3, #1
   13a90:	str	r3, [r9]
   13a94:	ldr	r3, [sp, #20]
   13a98:	subs	r1, r3, #1
   13a9c:	bmi	13b08 <export_data_element_to_ascii@@Base+0x860>
   13aa0:	add	r2, sp, #616	; 0x268
   13aa4:	add	r0, r2, r1, lsl #2
   13aa8:	ldr	r2, [r0, #-528]	; 0xfffffdf0
   13aac:	add	r2, r2, #1
   13ab0:	str	r2, [r0, #-528]	; 0xfffffdf0
   13ab4:	ldr	r0, [r0, #-560]	; 0xfffffdd0
   13ab8:	cmp	r2, r0
   13abc:	bne	13b08 <export_data_element_to_ascii@@Base+0x860>
   13ac0:	sub	r3, r3, #-1073741822	; 0xc0000002
   13ac4:	lsl	r3, r3, #2
   13ac8:	add	r2, sp, #56	; 0x38
   13acc:	add	r0, r2, r3
   13ad0:	add	r2, sp, #616	; 0x268
   13ad4:	add	r3, r2, r3
   13ad8:	sub	r3, r3, #524	; 0x20c
   13adc:	mov	lr, #0
   13ae0:	sub	r1, r1, #1
   13ae4:	str	lr, [r3], #-4
   13ae8:	cmn	r1, #1
   13aec:	beq	13b08 <export_data_element_to_ascii@@Base+0x860>
   13af0:	ldr	r2, [r3]
   13af4:	add	r2, r2, #1
   13af8:	str	r2, [r3]
   13afc:	ldr	ip, [r0], #-4
   13b00:	cmp	r2, ip
   13b04:	beq	13ae0 <export_data_element_to_ascii@@Base+0x838>
   13b08:	sub	r3, r7, #1
   13b0c:	cmp	r3, sl
   13b10:	ble	13b24 <export_data_element_to_ascii@@Base+0x87c>
   13b14:	mov	r0, r6
   13b18:	bl	12468 <coda_cursor_goto_next_array_element@plt>
   13b1c:	cmp	r0, #0
   13b20:	bne	13bcc <export_data_element_to_ascii@@Base+0x924>
   13b24:	add	sl, sl, #1
   13b28:	cmp	sl, r7
   13b2c:	bge	13bd4 <export_data_element_to_ascii@@Base+0x92c>
   13b30:	ldr	r0, [pc, #1492]	; 1410c <export_data_element_to_ascii@@Base+0xe64>
   13b34:	bl	134bc <export_data_element_to_ascii@@Base+0x214>
   13b38:	ldr	r3, [sp, #20]
   13b3c:	cmp	r3, #0
   13b40:	ble	13a38 <export_data_element_to_ascii@@Base+0x790>
   13b44:	add	r5, sp, #88	; 0x58
   13b48:	mov	r4, #0
   13b4c:	b	13a10 <export_data_element_to_ascii@@Base+0x768>
   13b50:	add	r1, sp, #24
   13b54:	mov	r0, r6
   13b58:	bl	125e8 <coda_cursor_get_file_bit_offset@plt>
   13b5c:	cmp	r0, #0
   13b60:	bne	13bb8 <export_data_element_to_ascii@@Base+0x910>
   13b64:	ldrd	r4, [sp, #24]
   13b68:	cmp	r4, #0
   13b6c:	sbcs	r3, r5, #0
   13b70:	blt	13a4c <export_data_element_to_ascii@@Base+0x7a4>
   13b74:	lsr	r0, r4, #3
   13b78:	add	r2, sp, #32
   13b7c:	orr	r0, r0, r5, lsl #29
   13b80:	asr	r1, r5, #3
   13b84:	bl	12648 <coda_str64@plt>
   13b88:	add	r1, sp, #32
   13b8c:	ldr	r0, [pc, #1376]	; 140f4 <export_data_element_to_ascii@@Base+0xe4c>
   13b90:	bl	13368 <export_data_element_to_ascii@@Base+0xc0>
   13b94:	ldrd	r2, [sp, #24]
   13b98:	and	r0, r2, #7
   13b9c:	mov	r1, #0
   13ba0:	orrs	r1, r0, r1
   13ba4:	beq	13a4c <export_data_element_to_ascii@@Base+0x7a4>
   13ba8:	and	r1, r2, #7
   13bac:	ldr	r0, [pc, #1348]	; 140f8 <export_data_element_to_ascii@@Base+0xe50>
   13bb0:	bl	13368 <export_data_element_to_ascii@@Base+0xc0>
   13bb4:	b	13a4c <export_data_element_to_ascii@@Base+0x7a4>
   13bb8:	bl	1853c <handle_coda_error@@Base>
   13bbc:	b	13b64 <export_data_element_to_ascii@@Base+0x8bc>
   13bc0:	ldr	r0, [pc, #1332]	; 140fc <export_data_element_to_ascii@@Base+0xe54>
   13bc4:	bl	134bc <export_data_element_to_ascii@@Base+0x214>
   13bc8:	b	13a88 <export_data_element_to_ascii@@Base+0x7e0>
   13bcc:	bl	1853c <handle_coda_error@@Base>
   13bd0:	b	13b24 <export_data_element_to_ascii@@Base+0x87c>
   13bd4:	mov	r0, r6
   13bd8:	bl	123fc <coda_cursor_goto_parent@plt>
   13bdc:	add	sp, sp, #620	; 0x26c
   13be0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13be4:	add	r1, sp, #32
   13be8:	mov	r0, r6
   13bec:	bl	12534 <coda_cursor_has_ascii_content@plt>
   13bf0:	cmp	r0, #0
   13bf4:	bne	13c64 <export_data_element_to_ascii@@Base+0x9bc>
   13bf8:	ldr	r3, [sp, #32]
   13bfc:	cmp	r3, #0
   13c00:	bne	13c6c <export_data_element_to_ascii@@Base+0x9c4>
   13c04:	add	r1, sp, #24
   13c08:	mov	r0, r6
   13c0c:	bl	123c0 <coda_cursor_get_read_type@plt>
   13c10:	cmp	r0, #0
   13c14:	bne	13d14 <export_data_element_to_ascii@@Base+0xa6c>
   13c18:	ldr	r3, [sp, #24]
   13c1c:	add	r3, r3, #1
   13c20:	cmp	r3, #13
   13c24:	ldrls	pc, [pc, r3, lsl #2]
   13c28:	b	13bdc <export_data_element_to_ascii@@Base+0x934>
   13c2c:	andeq	r3, r1, r8, lsr pc
   13c30:	andeq	r3, r1, r8, lsr lr
   13c34:	andeq	r3, r1, r4, ror #28
   13c38:	andeq	r3, r1, r8, lsr lr
   13c3c:	andeq	r3, r1, r4, ror #28
   13c40:	andeq	r3, r1, r8, lsr lr
   13c44:	andeq	r3, r1, r4, ror #28
   13c48:	muleq	r1, r0, lr
   13c4c:	andeq	r3, r1, r8, asr #29
   13c50:	andeq	r3, r1, r0, lsl #30
   13c54:	andeq	r3, r1, r0, lsl #30
   13c58:	andeq	r3, r1, r8, lsr pc
   13c5c:	andeq	r3, r1, r8, lsr pc
   13c60:	andeq	r3, r1, ip, lsl sp
   13c64:	bl	1853c <handle_coda_error@@Base>
   13c68:	b	13bf8 <export_data_element_to_ascii@@Base+0x950>
   13c6c:	add	r1, sp, #88	; 0x58
   13c70:	mov	r0, r6
   13c74:	bl	1242c <coda_cursor_get_string_length@plt>
   13c78:	cmp	r0, #0
   13c7c:	bne	13cdc <export_data_element_to_ascii@@Base+0xa34>
   13c80:	ldr	r0, [sp, #88]	; 0x58
   13c84:	add	r0, r0, #1
   13c88:	bl	123cc <malloc@plt>
   13c8c:	subs	r4, r0, #0
   13c90:	beq	13ce4 <export_data_element_to_ascii@@Base+0xa3c>
   13c94:	ldr	r2, [sp, #88]	; 0x58
   13c98:	add	r2, r2, #1
   13c9c:	mov	r1, r4
   13ca0:	mov	r0, r6
   13ca4:	bl	123f0 <coda_cursor_read_string@plt>
   13ca8:	cmp	r0, #0
   13cac:	bne	13d0c <export_data_element_to_ascii@@Base+0xa64>
   13cb0:	ldr	r0, [pc, #1112]	; 14110 <export_data_element_to_ascii@@Base+0xe68>
   13cb4:	bl	134bc <export_data_element_to_ascii@@Base+0x214>
   13cb8:	ldr	r1, [sp, #88]	; 0x58
   13cbc:	mov	r0, r4
   13cc0:	bl	133a0 <export_data_element_to_ascii@@Base+0xf8>
   13cc4:	ldr	r1, [sp, #88]	; 0x58
   13cc8:	ldr	r0, [pc, #1092]	; 14114 <export_data_element_to_ascii@@Base+0xe6c>
   13ccc:	bl	13368 <export_data_element_to_ascii@@Base+0xc0>
   13cd0:	mov	r0, r4
   13cd4:	bl	12294 <free@plt>
   13cd8:	b	13c04 <export_data_element_to_ascii@@Base+0x95c>
   13cdc:	bl	1853c <handle_coda_error@@Base>
   13ce0:	b	13c80 <export_data_element_to_ascii@@Base+0x9d8>
   13ce4:	ldr	r3, [pc, #1068]	; 14118 <export_data_element_to_ascii@@Base+0xe70>
   13ce8:	str	r3, [sp]
   13cec:	ldr	r3, [pc, #1064]	; 1411c <export_data_element_to_ascii@@Base+0xe74>
   13cf0:	ldr	r2, [sp, #88]	; 0x58
   13cf4:	add	r2, r2, #1
   13cf8:	ldr	r1, [pc, #1056]	; 14120 <export_data_element_to_ascii@@Base+0xe78>
   13cfc:	mvn	r0, #0
   13d00:	bl	1224c <coda_set_error@plt>
   13d04:	bl	1853c <handle_coda_error@@Base>
   13d08:	b	13c94 <export_data_element_to_ascii@@Base+0x9ec>
   13d0c:	bl	1853c <handle_coda_error@@Base>
   13d10:	b	13cb0 <export_data_element_to_ascii@@Base+0xa08>
   13d14:	bl	1853c <handle_coda_error@@Base>
   13d18:	b	13c18 <export_data_element_to_ascii@@Base+0x970>
   13d1c:	add	r1, sp, #56	; 0x38
   13d20:	mov	r0, r6
   13d24:	bl	125ac <coda_cursor_get_bit_size@plt>
   13d28:	cmp	r0, #0
   13d2c:	bne	13df4 <export_data_element_to_ascii@@Base+0xb4c>
   13d30:	ldrd	r0, [sp, #56]	; 0x38
   13d34:	and	r2, r0, #7
   13d38:	mov	r3, #0
   13d3c:	orrs	r3, r2, r3
   13d40:	movne	ip, #1
   13d44:	moveq	ip, #0
   13d48:	lsr	r4, r0, #3
   13d4c:	orr	r4, r4, r1, lsl #29
   13d50:	adds	r4, r4, ip
   13d54:	mov	r0, r4
   13d58:	bl	123cc <malloc@plt>
   13d5c:	subs	r7, r0, #0
   13d60:	beq	13dfc <export_data_element_to_ascii@@Base+0xb54>
   13d64:	ldrd	r2, [sp, #56]	; 0x38
   13d68:	strd	r2, [sp]
   13d6c:	mov	r2, #0
   13d70:	mov	r3, #0
   13d74:	mov	r1, r7
   13d78:	mov	r0, r6
   13d7c:	bl	1263c <coda_cursor_read_bits@plt>
   13d80:	cmp	r0, #0
   13d84:	bne	13e20 <export_data_element_to_ascii@@Base+0xb78>
   13d88:	ldr	r0, [pc, #896]	; 14110 <export_data_element_to_ascii@@Base+0xe68>
   13d8c:	bl	134bc <export_data_element_to_ascii@@Base+0x214>
   13d90:	mov	r1, r4
   13d94:	mov	r0, r7
   13d98:	bl	133a0 <export_data_element_to_ascii@@Base+0xf8>
   13d9c:	ldr	r0, [pc, #896]	; 14124 <export_data_element_to_ascii@@Base+0xe7c>
   13da0:	bl	13368 <export_data_element_to_ascii@@Base+0xc0>
   13da4:	ldr	r1, [sp, #60]	; 0x3c
   13da8:	ldr	r0, [sp, #56]	; 0x38
   13dac:	lsr	r0, r0, #3
   13db0:	add	r2, sp, #88	; 0x58
   13db4:	orr	r0, r0, r1, lsl #29
   13db8:	asr	r1, r1, #3
   13dbc:	bl	12648 <coda_str64@plt>
   13dc0:	add	r1, sp, #88	; 0x58
   13dc4:	ldr	r0, [pc, #860]	; 14128 <export_data_element_to_ascii@@Base+0xe80>
   13dc8:	bl	13368 <export_data_element_to_ascii@@Base+0xc0>
   13dcc:	ldrd	r2, [sp, #56]	; 0x38
   13dd0:	and	r0, r2, #7
   13dd4:	mov	r1, #0
   13dd8:	orrs	r1, r0, r1
   13ddc:	bne	13e28 <export_data_element_to_ascii@@Base+0xb80>
   13de0:	ldr	r0, [pc, #836]	; 1412c <export_data_element_to_ascii@@Base+0xe84>
   13de4:	bl	13368 <export_data_element_to_ascii@@Base+0xc0>
   13de8:	mov	r0, r7
   13dec:	bl	12294 <free@plt>
   13df0:	b	13bdc <export_data_element_to_ascii@@Base+0x934>
   13df4:	bl	1853c <handle_coda_error@@Base>
   13df8:	b	13d30 <export_data_element_to_ascii@@Base+0xa88>
   13dfc:	ldr	r3, [pc, #812]	; 14130 <export_data_element_to_ascii@@Base+0xe88>
   13e00:	str	r3, [sp]
   13e04:	ldr	r3, [pc, #784]	; 1411c <export_data_element_to_ascii@@Base+0xe74>
   13e08:	mov	r2, r4
   13e0c:	ldr	r1, [pc, #780]	; 14120 <export_data_element_to_ascii@@Base+0xe78>
   13e10:	mvn	r0, #0
   13e14:	bl	1224c <coda_set_error@plt>
   13e18:	bl	1853c <handle_coda_error@@Base>
   13e1c:	b	13d64 <export_data_element_to_ascii@@Base+0xabc>
   13e20:	bl	1853c <handle_coda_error@@Base>
   13e24:	b	13d88 <export_data_element_to_ascii@@Base+0xae0>
   13e28:	and	r1, r2, #7
   13e2c:	ldr	r0, [pc, #708]	; 140f8 <export_data_element_to_ascii@@Base+0xe50>
   13e30:	bl	13368 <export_data_element_to_ascii@@Base+0xc0>
   13e34:	b	13de0 <export_data_element_to_ascii@@Base+0xb38>
   13e38:	add	r1, sp, #88	; 0x58
   13e3c:	mov	r0, r6
   13e40:	bl	125dc <coda_cursor_read_int32@plt>
   13e44:	cmp	r0, #0
   13e48:	bne	13e5c <export_data_element_to_ascii@@Base+0xbb4>
   13e4c:	ldr	r1, [sp, #88]	; 0x58
   13e50:	ldr	r0, [pc, #732]	; 14134 <export_data_element_to_ascii@@Base+0xe8c>
   13e54:	bl	134bc <export_data_element_to_ascii@@Base+0x214>
   13e58:	b	13bdc <export_data_element_to_ascii@@Base+0x934>
   13e5c:	bl	1853c <handle_coda_error@@Base>
   13e60:	b	13e4c <export_data_element_to_ascii@@Base+0xba4>
   13e64:	add	r1, sp, #88	; 0x58
   13e68:	mov	r0, r6
   13e6c:	bl	122b8 <coda_cursor_read_uint32@plt>
   13e70:	cmp	r0, #0
   13e74:	bne	13e88 <export_data_element_to_ascii@@Base+0xbe0>
   13e78:	ldr	r1, [sp, #88]	; 0x58
   13e7c:	ldr	r0, [pc, #692]	; 14138 <export_data_element_to_ascii@@Base+0xe90>
   13e80:	bl	134bc <export_data_element_to_ascii@@Base+0x214>
   13e84:	b	13bdc <export_data_element_to_ascii@@Base+0x934>
   13e88:	bl	1853c <handle_coda_error@@Base>
   13e8c:	b	13e78 <export_data_element_to_ascii@@Base+0xbd0>
   13e90:	add	r1, sp, #56	; 0x38
   13e94:	mov	r0, r6
   13e98:	bl	1254c <coda_cursor_read_int64@plt>
   13e9c:	cmp	r0, #0
   13ea0:	bne	13ec0 <export_data_element_to_ascii@@Base+0xc18>
   13ea4:	add	r2, sp, #88	; 0x58
   13ea8:	ldrd	r0, [sp, #56]	; 0x38
   13eac:	bl	12648 <coda_str64@plt>
   13eb0:	add	r1, sp, #88	; 0x58
   13eb4:	ldr	r0, [pc, #640]	; 1413c <export_data_element_to_ascii@@Base+0xe94>
   13eb8:	bl	134bc <export_data_element_to_ascii@@Base+0x214>
   13ebc:	b	13bdc <export_data_element_to_ascii@@Base+0x934>
   13ec0:	bl	1853c <handle_coda_error@@Base>
   13ec4:	b	13ea4 <export_data_element_to_ascii@@Base+0xbfc>
   13ec8:	add	r1, sp, #56	; 0x38
   13ecc:	mov	r0, r6
   13ed0:	bl	12438 <coda_cursor_read_uint64@plt>
   13ed4:	cmp	r0, #0
   13ed8:	bne	13ef8 <export_data_element_to_ascii@@Base+0xc50>
   13edc:	add	r2, sp, #88	; 0x58
   13ee0:	ldrd	r0, [sp, #56]	; 0x38
   13ee4:	bl	12288 <coda_str64u@plt>
   13ee8:	add	r1, sp, #88	; 0x58
   13eec:	ldr	r0, [pc, #584]	; 1413c <export_data_element_to_ascii@@Base+0xe94>
   13ef0:	bl	134bc <export_data_element_to_ascii@@Base+0x214>
   13ef4:	b	13bdc <export_data_element_to_ascii@@Base+0x934>
   13ef8:	bl	1853c <handle_coda_error@@Base>
   13efc:	b	13edc <export_data_element_to_ascii@@Base+0xc34>
   13f00:	add	r1, sp, #88	; 0x58
   13f04:	mov	r0, r6
   13f08:	bl	12444 <coda_cursor_read_double@plt>
   13f0c:	cmp	r0, #0
   13f10:	bne	13f30 <export_data_element_to_ascii@@Base+0xc88>
   13f14:	ldr	r3, [sp, #24]
   13f18:	cmp	r3, #8
   13f1c:	ldrd	r2, [sp, #88]	; 0x58
   13f20:	ldreq	r0, [pc, #536]	; 14140 <export_data_element_to_ascii@@Base+0xe98>
   13f24:	ldrne	r0, [pc, #536]	; 14144 <export_data_element_to_ascii@@Base+0xe9c>
   13f28:	bl	134bc <export_data_element_to_ascii@@Base+0x214>
   13f2c:	b	13bdc <export_data_element_to_ascii@@Base+0x934>
   13f30:	bl	1853c <handle_coda_error@@Base>
   13f34:	b	13f14 <export_data_element_to_ascii@@Base+0xc6c>
   13f38:	ldr	r3, [sp, #32]
   13f3c:	cmp	r3, #0
   13f40:	bne	13bdc <export_data_element_to_ascii@@Base+0x934>
   13f44:	ldr	r3, [pc, #508]	; 14148 <export_data_element_to_ascii@@Base+0xea0>
   13f48:	mov	r2, #548	; 0x224
   13f4c:	ldr	r1, [pc, #456]	; 1411c <export_data_element_to_ascii@@Base+0xe74>
   13f50:	ldr	r0, [pc, #500]	; 1414c <export_data_element_to_ascii@@Base+0xea4>
   13f54:	bl	12654 <__assert_fail@plt>
   13f58:	add	r1, sp, #32
   13f5c:	mov	r0, r6
   13f60:	bl	12360 <coda_cursor_get_special_type@plt>
   13f64:	cmp	r0, #0
   13f68:	bne	13fac <export_data_element_to_ascii@@Base+0xd04>
   13f6c:	ldr	r3, [sp, #32]
   13f70:	cmp	r3, #0
   13f74:	bne	13fb4 <export_data_element_to_ascii@@Base+0xd0c>
   13f78:	ldr	r0, [sp, #32]
   13f7c:	bl	121c8 <coda_type_get_special_type_name@plt>
   13f80:	mov	r1, r0
   13f84:	ldr	r0, [pc, #452]	; 14150 <export_data_element_to_ascii@@Base+0xea8>
   13f88:	bl	134bc <export_data_element_to_ascii@@Base+0x214>
   13f8c:	ldr	r3, [sp, #32]
   13f90:	cmp	r3, #3
   13f94:	ldrls	pc, [pc, r3, lsl #2]
   13f98:	b	13bdc <export_data_element_to_ascii@@Base+0x934>
   13f9c:	andeq	r3, r1, ip, ror #31
   13fa0:	strdeq	r3, [r1], -r8
   13fa4:	andeq	r4, r1, r4, lsr #32
   13fa8:	andeq	r4, r1, r4, lsr #1
   13fac:	bl	1853c <handle_coda_error@@Base>
   13fb0:	b	13f6c <export_data_element_to_ascii@@Base+0xcc4>
   13fb4:	mov	r2, #520	; 0x208
   13fb8:	mov	r1, r6
   13fbc:	add	r0, sp, #88	; 0x58
   13fc0:	bl	122e8 <memcpy@plt>
   13fc4:	add	r0, sp, #88	; 0x58
   13fc8:	bl	125c4 <coda_cursor_use_base_type_of_special_type@plt>
   13fcc:	cmp	r0, #0
   13fd0:	bne	13fe4 <export_data_element_to_ascii@@Base+0xd3c>
   13fd4:	mov	r1, r8
   13fd8:	add	r0, sp, #88	; 0x58
   13fdc:	bl	1355c <export_data_element_to_ascii@@Base+0x2b4>
   13fe0:	b	13f78 <export_data_element_to_ascii@@Base+0xcd0>
   13fe4:	bl	1853c <handle_coda_error@@Base>
   13fe8:	b	13fd4 <export_data_element_to_ascii@@Base+0xd2c>
   13fec:	ldr	r0, [pc, #248]	; 140ec <export_data_element_to_ascii@@Base+0xe44>
   13ff0:	bl	13368 <export_data_element_to_ascii@@Base+0xc0>
   13ff4:	b	13bdc <export_data_element_to_ascii@@Base+0x934>
   13ff8:	add	r1, sp, #88	; 0x58
   13ffc:	mov	r0, r6
   14000:	bl	12444 <coda_cursor_read_double@plt>
   14004:	cmp	r0, #0
   14008:	bne	1401c <export_data_element_to_ascii@@Base+0xd74>
   1400c:	ldrd	r2, [sp, #88]	; 0x58
   14010:	ldr	r0, [pc, #300]	; 14144 <export_data_element_to_ascii@@Base+0xe9c>
   14014:	bl	13368 <export_data_element_to_ascii@@Base+0xc0>
   14018:	b	13bdc <export_data_element_to_ascii@@Base+0x934>
   1401c:	bl	1853c <handle_coda_error@@Base>
   14020:	b	1400c <export_data_element_to_ascii@@Base+0xd64>
   14024:	add	r1, sp, #56	; 0x38
   14028:	mov	r0, r6
   1402c:	bl	12444 <coda_cursor_read_double@plt>
   14030:	cmp	r0, #0
   14034:	bne	14068 <export_data_element_to_ascii@@Base+0xdc0>
   14038:	vldr	d0, [sp, #56]	; 0x38
   1403c:	bl	12450 <coda_isNaN@plt>
   14040:	cmp	r0, #0
   14044:	bne	14058 <export_data_element_to_ascii@@Base+0xdb0>
   14048:	vldr	d0, [sp, #56]	; 0x38
   1404c:	bl	122f4 <coda_isInf@plt>
   14050:	cmp	r0, #0
   14054:	beq	14070 <export_data_element_to_ascii@@Base+0xdc8>
   14058:	ldrd	r2, [sp, #56]	; 0x38
   1405c:	ldr	r0, [pc, #240]	; 14154 <export_data_element_to_ascii@@Base+0xeac>
   14060:	bl	13368 <export_data_element_to_ascii@@Base+0xc0>
   14064:	b	13bdc <export_data_element_to_ascii@@Base+0x934>
   14068:	bl	1853c <handle_coda_error@@Base>
   1406c:	b	14038 <export_data_element_to_ascii@@Base+0xd90>
   14070:	add	r1, sp, #88	; 0x58
   14074:	ldr	r0, [pc, #220]	; 14158 <export_data_element_to_ascii@@Base+0xeb0>
   14078:	vldr	d0, [sp, #56]	; 0x38
   1407c:	bl	12270 <coda_time_double_to_string@plt>
   14080:	cmp	r0, #0
   14084:	beq	14094 <export_data_element_to_ascii@@Base+0xdec>
   14088:	ldr	r0, [pc, #204]	; 1415c <export_data_element_to_ascii@@Base+0xeb4>
   1408c:	bl	13368 <export_data_element_to_ascii@@Base+0xc0>
   14090:	b	13bdc <export_data_element_to_ascii@@Base+0x934>
   14094:	add	r1, sp, #88	; 0x58
   14098:	ldr	r0, [pc, #192]	; 14160 <export_data_element_to_ascii@@Base+0xeb8>
   1409c:	bl	13368 <export_data_element_to_ascii@@Base+0xc0>
   140a0:	b	13bdc <export_data_element_to_ascii@@Base+0x934>
   140a4:	add	r2, sp, #88	; 0x58
   140a8:	add	r1, sp, #56	; 0x38
   140ac:	mov	r0, r6
   140b0:	bl	124ec <coda_cursor_read_complex_double_split@plt>
   140b4:	cmp	r0, #0
   140b8:	bne	140d4 <export_data_element_to_ascii@@Base+0xe2c>
   140bc:	ldrd	r2, [sp, #88]	; 0x58
   140c0:	strd	r2, [sp]
   140c4:	ldrd	r2, [sp, #56]	; 0x38
   140c8:	ldr	r0, [pc, #148]	; 14164 <export_data_element_to_ascii@@Base+0xebc>
   140cc:	bl	13368 <export_data_element_to_ascii@@Base+0xc0>
   140d0:	b	13bdc <export_data_element_to_ascii@@Base+0x934>
   140d4:	bl	1853c <handle_coda_error@@Base>
   140d8:	b	140bc <export_data_element_to_ascii@@Base+0xe14>
   140dc:	strdeq	r9, [r1], -r8
   140e0:	andeq	ip, r2, r4, asr #3
   140e4:	andeq	r9, r1, r8, lsl #30
   140e8:	andeq	ip, r2, ip, lsr #3
   140ec:	andeq	fp, r1, r0, lsr r6
   140f0:			; <UNDEFINED> instruction: 0x0002c1b0
   140f4:	andeq	r9, r1, r0, lsl pc
   140f8:	andeq	r9, r1, r4, lsl pc
   140fc:	andeq	r9, r1, r8, lsl pc
   14100:	andeq	r9, r1, r4, lsr #30
   14104:	andeq	r9, r1, r8, lsr #30
   14108:	muleq	r1, r4, r2
   1410c:	andeq	r9, r1, r0, lsr #30
   14110:	andeq	sl, r1, r8, asr r4
   14114:	andeq	r9, r1, ip, lsr #30
   14118:	muleq	r0, sl, r1
   1411c:	andeq	r9, r1, r0, lsr #29
   14120:	andeq	r9, r1, ip, asr #27
   14124:	andeq	r9, r1, ip, lsr pc
   14128:	andeq	r9, r1, r8, asr #30
   1412c:	andeq	r9, r1, ip, asr #30
   14130:			; <UNDEFINED> instruction: 0x000001bf
   14134:	andeq	r9, r1, r0, asr pc
   14138:	andeq	r9, r1, r8, asr pc
   1413c:	andeq	r9, r1, r0, ror #30
   14140:	andeq	r9, r1, r4, ror #30
   14144:	andeq	r9, r1, ip, ror #30
   14148:	muleq	r1, r0, lr
   1414c:	andeq	r9, r1, r4, ror pc
   14150:	andeq	r9, r1, r8, lsl #31
   14154:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   14158:	andeq	r9, r1, r8, asr #28
   1415c:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   14160:	strdeq	fp, [r1], -ip
   14164:			; <UNDEFINED> instruction: 0x00019fb4

00014168 <print_debug_data@@Base>:
   14168:	push	{r4, r5, r6, lr}
   1416c:	sub	sp, sp, #544	; 0x220
   14170:	mov	r5, r1
   14174:	mov	r6, r2
   14178:	subs	r4, r0, #0
   1417c:	beq	1422c <print_debug_data@@Base+0xc4>
   14180:	ldr	r3, [pc, #328]	; 142d0 <print_debug_data@@Base+0x168>
   14184:	ldr	r0, [r3]
   14188:	add	r3, sp, #540	; 0x21c
   1418c:	str	r3, [sp]
   14190:	mov	r3, r2
   14194:	mov	r2, r1
   14198:	mov	r1, r4
   1419c:	bl	12474 <coda_open_as@plt>
   141a0:	cmp	r0, #0
   141a4:	bne	14240 <print_debug_data@@Base+0xd8>
   141a8:	add	r1, sp, #12
   141ac:	ldr	r0, [sp, #540]	; 0x21c
   141b0:	bl	1233c <coda_get_product_format@plt>
   141b4:	cmp	r0, #0
   141b8:	bne	142b8 <print_debug_data@@Base+0x150>
   141bc:	ldr	r3, [sp, #12]
   141c0:	cmp	r3, #2
   141c4:	movhi	r3, #0
   141c8:	movls	r3, #1
   141cc:	ldr	r2, [pc, #256]	; 142d4 <print_debug_data@@Base+0x16c>
   141d0:	str	r3, [r2]
   141d4:	ldr	r1, [sp, #540]	; 0x21c
   141d8:	add	r0, sp, #16
   141dc:	bl	12384 <coda_cursor_set_product@plt>
   141e0:	cmp	r0, #0
   141e4:	bne	142c0 <print_debug_data@@Base+0x158>
   141e8:	ldr	r3, [pc, #232]	; 142d8 <print_debug_data@@Base+0x170>
   141ec:	ldr	r1, [r3]
   141f0:	cmp	r1, #0
   141f4:	beq	14208 <print_debug_data@@Base+0xa0>
   141f8:	add	r0, sp, #16
   141fc:	bl	12564 <coda_cursor_goto@plt>
   14200:	cmp	r0, #0
   14204:	bne	142c8 <print_debug_data@@Base+0x160>
   14208:	mov	r0, #0
   1420c:	bl	121f8 <coda_set_option_perform_boundary_checks@plt>
   14210:	mov	r1, #0
   14214:	add	r0, sp, #16
   14218:	bl	1355c <export_data_element_to_ascii@@Base+0x2b4>
   1421c:	ldr	r0, [sp, #540]	; 0x21c
   14220:	bl	12540 <coda_close@plt>
   14224:	add	sp, sp, #544	; 0x220
   14228:	pop	{r4, r5, r6, pc}
   1422c:	add	r1, sp, #540	; 0x21c
   14230:	ldr	r3, [pc, #152]	; 142d0 <print_debug_data@@Base+0x168>
   14234:	ldr	r0, [r3]
   14238:	bl	12258 <coda_open@plt>
   1423c:	b	141a0 <print_debug_data@@Base+0x38>
   14240:	bl	12600 <coda_get_errno@plt>
   14244:	ldr	r3, [r0]
   14248:	cmn	r3, #21
   1424c:	beq	14258 <print_debug_data@@Base+0xf0>
   14250:	bl	1853c <handle_coda_error@@Base>
   14254:	b	141a8 <print_debug_data@@Base+0x40>
   14258:	mov	r0, #0
   1425c:	bl	122a0 <coda_set_option_use_mmap@plt>
   14260:	cmp	r4, #0
   14264:	beq	142a0 <print_debug_data@@Base+0x138>
   14268:	ldr	r3, [pc, #96]	; 142d0 <print_debug_data@@Base+0x168>
   1426c:	ldr	r0, [r3]
   14270:	add	r3, sp, #540	; 0x21c
   14274:	str	r3, [sp]
   14278:	mov	r3, r6
   1427c:	mov	r2, r5
   14280:	mov	r1, r4
   14284:	bl	12474 <coda_open_as@plt>
   14288:	mov	r4, r0
   1428c:	mov	r0, #1
   14290:	bl	122a0 <coda_set_option_use_mmap@plt>
   14294:	cmp	r4, #0
   14298:	bne	14250 <print_debug_data@@Base+0xe8>
   1429c:	b	141a8 <print_debug_data@@Base+0x40>
   142a0:	add	r1, sp, #540	; 0x21c
   142a4:	ldr	r3, [pc, #36]	; 142d0 <print_debug_data@@Base+0x168>
   142a8:	ldr	r0, [r3]
   142ac:	bl	12258 <coda_open@plt>
   142b0:	mov	r4, r0
   142b4:	b	1428c <print_debug_data@@Base+0x124>
   142b8:	bl	1853c <handle_coda_error@@Base>
   142bc:	b	141bc <print_debug_data@@Base+0x54>
   142c0:	bl	1853c <handle_coda_error@@Base>
   142c4:	b	141e8 <print_debug_data@@Base+0x80>
   142c8:	bl	1853c <handle_coda_error@@Base>
   142cc:	b	14208 <print_debug_data@@Base+0xa0>
   142d0:	strdeq	ip, [r2], -r0
   142d4:	andeq	ip, r2, ip, lsr #3
   142d8:	strheq	sp, [r2], -r0
   142dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   142e0:	sub	sp, sp, #12
   142e4:	mov	sl, r0
   142e8:	mov	r5, r1
   142ec:	mov	r7, r2
   142f0:	add	r1, sp, #4
   142f4:	ldr	r0, [pc, #608]	; 1455c <print_debug_data@@Base+0x3f4>
   142f8:	bl	12324 <coda_cursor_get_type_class@plt>
   142fc:	cmp	r0, #0
   14300:	bne	143f8 <print_debug_data@@Base+0x290>
   14304:	ldr	r3, [sp, #4]
   14308:	cmp	r3, #0
   1430c:	beq	14494 <print_debug_data@@Base+0x32c>
   14310:	cmp	r3, #1
   14314:	bne	14540 <print_debug_data@@Base+0x3d8>
   14318:	ldr	r2, [pc, #576]	; 14560 <print_debug_data@@Base+0x3f8>
   1431c:	add	r3, r5, r5, lsl #2
   14320:	add	r3, r2, r3, lsl #4
   14324:	ldr	r3, [r3, #800]	; 0x320
   14328:	ldr	r2, [r2, #3360]	; 0xd20
   1432c:	cmp	r5, r2
   14330:	bge	14400 <print_debug_data@@Base+0x298>
   14334:	cmp	r5, #0
   14338:	moveq	r1, #0
   1433c:	ldreq	r2, [pc, #540]	; 14560 <print_debug_data@@Base+0x3f8>
   14340:	streq	r1, [r2, #844]	; 0x34c
   14344:	add	r8, r5, #1
   14348:	ldr	r2, [pc, #528]	; 14560 <print_debug_data@@Base+0x3f8>
   1434c:	add	r1, r8, r8, lsl #2
   14350:	add	r1, r2, r1, lsl #4
   14354:	add	r0, r5, r5, lsl #2
   14358:	add	r2, r2, r0, lsl #4
   1435c:	ldr	ip, [r2, #844]	; 0x34c
   14360:	ldr	r0, [r2, #840]	; 0x348
   14364:	mul	r0, r0, ip
   14368:	str	r0, [r1, #844]	; 0x34c
   1436c:	ldr	r2, [r2, #804]	; 0x324
   14370:	add	r2, r3, r2
   14374:	cmp	r3, r2
   14378:	bge	14414 <print_debug_data@@Base+0x2ac>
   1437c:	add	r3, r3, #1
   14380:	ldr	r1, [pc, #476]	; 14564 <print_debug_data@@Base+0x3fc>
   14384:	add	r3, r1, r3, lsl #2
   14388:	add	r2, r2, #1
   1438c:	add	r1, r1, r2, lsl #2
   14390:	mov	r4, #1
   14394:	add	r5, r5, r5, lsl #2
   14398:	ldr	r2, [pc, #448]	; 14560 <print_debug_data@@Base+0x3f8>
   1439c:	add	r5, r2, r5, lsl #4
   143a0:	ldr	r2, [r3, #68]	; 0x44
   143a4:	cmp	r2, #0
   143a8:	ldrne	r0, [r5, #844]	; 0x34c
   143ac:	ldrne	r2, [r3, #104]	; 0x68
   143b0:	ldrne	r2, [r2, r0, lsl #2]
   143b4:	ldreq	r2, [r3]
   143b8:	mul	r4, r2, r4
   143bc:	add	r3, r3, #4
   143c0:	cmp	r3, r1
   143c4:	bne	143a0 <print_debug_data@@Base+0x238>
   143c8:	cmp	r4, #0
   143cc:	ble	14554 <print_debug_data@@Base+0x3ec>
   143d0:	ldr	r0, [pc, #388]	; 1455c <print_debug_data@@Base+0x3f4>
   143d4:	bl	1236c <coda_cursor_goto_first_array_element@plt>
   143d8:	cmp	r0, #0
   143dc:	bne	1441c <print_debug_data@@Base+0x2b4>
   143e0:	mov	r5, #0
   143e4:	ldr	fp, [pc, #368]	; 1455c <print_debug_data@@Base+0x3f4>
   143e8:	add	r6, r8, r8, lsl #2
   143ec:	sub	r3, fp, #144	; 0x90
   143f0:	add	r6, r3, r6, lsl #4
   143f4:	b	1444c <print_debug_data@@Base+0x2e4>
   143f8:	bl	1853c <handle_coda_error@@Base>
   143fc:	b	14304 <print_debug_data@@Base+0x19c>
   14400:	ldr	r3, [pc, #352]	; 14568 <print_debug_data@@Base+0x400>
   14404:	ldr	r2, [pc, #352]	; 1456c <print_debug_data@@Base+0x404>
   14408:	ldr	r1, [pc, #352]	; 14570 <print_debug_data@@Base+0x408>
   1440c:	ldr	r0, [pc, #352]	; 14574 <print_debug_data@@Base+0x40c>
   14410:	bl	12654 <__assert_fail@plt>
   14414:	mov	r4, #1
   14418:	b	143d0 <print_debug_data@@Base+0x268>
   1441c:	bl	1853c <handle_coda_error@@Base>
   14420:	b	143e0 <print_debug_data@@Base+0x278>
   14424:	ldr	r0, [pc, #304]	; 1455c <print_debug_data@@Base+0x3f4>
   14428:	bl	123fc <coda_cursor_goto_parent@plt>
   1442c:	mov	r9, #1
   14430:	b	1451c <print_debug_data@@Base+0x3b4>
   14434:	ldr	r3, [r6, #844]	; 0x34c
   14438:	add	r3, r3, #1
   1443c:	str	r3, [r6, #844]	; 0x34c
   14440:	add	r5, r5, #1
   14444:	cmp	r4, r5
   14448:	ble	14488 <print_debug_data@@Base+0x320>
   1444c:	mov	r2, r7
   14450:	mov	r1, r8
   14454:	add	r0, sl, #1
   14458:	bl	142dc <print_debug_data@@Base+0x174>
   1445c:	subs	r9, r0, #0
   14460:	bne	14424 <print_debug_data@@Base+0x2bc>
   14464:	sub	r3, r4, #1
   14468:	cmp	r3, r5
   1446c:	ble	14440 <print_debug_data@@Base+0x2d8>
   14470:	mov	r0, fp
   14474:	bl	12468 <coda_cursor_goto_next_array_element@plt>
   14478:	cmp	r0, #0
   1447c:	beq	14434 <print_debug_data@@Base+0x2cc>
   14480:	bl	1853c <handle_coda_error@@Base>
   14484:	b	14434 <print_debug_data@@Base+0x2cc>
   14488:	ldr	r0, [pc, #204]	; 1455c <print_debug_data@@Base+0x3f4>
   1448c:	bl	123fc <coda_cursor_goto_parent@plt>
   14490:	b	1451c <print_debug_data@@Base+0x3b4>
   14494:	ldr	r0, [pc, #196]	; 14560 <print_debug_data@@Base+0x3f8>
   14498:	add	r3, r0, r7, lsl #2
   1449c:	mov	r2, sp
   144a0:	ldr	r1, [r3, #3492]	; 0xda4
   144a4:	add	r0, r0, #144	; 0x90
   144a8:	bl	12234 <coda_cursor_get_record_field_available_status@plt>
   144ac:	cmp	r0, #0
   144b0:	bne	14528 <print_debug_data@@Base+0x3c0>
   144b4:	ldr	r3, [sp]
   144b8:	cmp	r3, #0
   144bc:	beq	14518 <print_debug_data@@Base+0x3b0>
   144c0:	ldr	r3, [pc, #152]	; 14560 <print_debug_data@@Base+0x3f8>
   144c4:	ldr	r3, [r3, #3748]	; 0xea4
   144c8:	sub	r3, r3, #1
   144cc:	cmp	r7, r3
   144d0:	beq	14538 <print_debug_data@@Base+0x3d0>
   144d4:	ldr	r0, [pc, #132]	; 14560 <print_debug_data@@Base+0x3f8>
   144d8:	add	r3, r0, r7, lsl #2
   144dc:	ldr	r1, [r3, #3492]	; 0xda4
   144e0:	add	r0, r0, #144	; 0x90
   144e4:	bl	1239c <coda_cursor_goto_record_field_by_index@plt>
   144e8:	cmp	r0, #0
   144ec:	bne	14530 <print_debug_data@@Base+0x3c8>
   144f0:	add	r2, r7, #1
   144f4:	mov	r1, r5
   144f8:	add	r0, sl, #1
   144fc:	bl	142dc <print_debug_data@@Base+0x174>
   14500:	str	r0, [sp]
   14504:	ldr	r0, [pc, #80]	; 1455c <print_debug_data@@Base+0x3f4>
   14508:	bl	123fc <coda_cursor_goto_parent@plt>
   1450c:	ldr	r3, [sp]
   14510:	cmp	r3, #0
   14514:	bne	14538 <print_debug_data@@Base+0x3d0>
   14518:	mov	r9, #0
   1451c:	mov	r0, r9
   14520:	add	sp, sp, #12
   14524:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14528:	bl	1853c <handle_coda_error@@Base>
   1452c:	b	144b4 <print_debug_data@@Base+0x34c>
   14530:	bl	1853c <handle_coda_error@@Base>
   14534:	b	144f0 <print_debug_data@@Base+0x388>
   14538:	mov	r9, #1
   1453c:	b	1451c <print_debug_data@@Base+0x3b4>
   14540:	ldr	r3, [pc, #32]	; 14568 <print_debug_data@@Base+0x400>
   14544:	ldr	r2, [pc, #44]	; 14578 <print_debug_data@@Base+0x410>
   14548:	ldr	r1, [pc, #32]	; 14570 <print_debug_data@@Base+0x408>
   1454c:	ldr	r0, [pc, #40]	; 1457c <print_debug_data@@Base+0x414>
   14550:	bl	12654 <__assert_fail@plt>
   14554:	mov	r9, #0
   14558:	b	1451c <print_debug_data@@Base+0x3b4>
   1455c:	andeq	ip, r2, r0, lsl #5
   14560:	strdeq	ip, [r2], -r0
   14564:	strheq	sp, [r2], -r8
   14568:	andeq	r9, r1, r0, asr #31
   1456c:	andeq	r0, r0, lr, ror r2
   14570:	andeq	sl, r1, r4, lsr r0
   14574:	andeq	sl, r1, r0, lsl #1
   14578:	ldrdeq	r0, [r0], -r9
   1457c:	andeq	sl, r1, r4, lsl #3
   14580:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14584:	sub	sp, sp, #48	; 0x30
   14588:	mov	r8, r0
   1458c:	mov	r5, r1
   14590:	mov	r7, r2
   14594:	add	r1, sp, #44	; 0x2c
   14598:	ldr	r0, [pc, #1180]	; 14a3c <print_debug_data@@Base+0x8d4>
   1459c:	bl	12324 <coda_cursor_get_type_class@plt>
   145a0:	cmp	r0, #0
   145a4:	bne	145d0 <print_debug_data@@Base+0x468>
   145a8:	ldr	r3, [sp, #44]	; 0x2c
   145ac:	cmp	r3, #5
   145b0:	ldrls	pc, [pc, r3, lsl #2]
   145b4:	b	14a28 <print_debug_data@@Base+0x8c0>
   145b8:	andeq	r4, r1, r4, lsl r8
   145bc:	ldrdeq	r4, [r1], -r8
   145c0:	andeq	r4, r1, r8, lsr #20
   145c4:	andeq	r4, r1, r8, lsr #20
   145c8:	andeq	r4, r1, r4, lsl r9
   145cc:	andeq	r4, r1, r4, lsl r9
   145d0:	bl	1853c <handle_coda_error@@Base>
   145d4:	b	145a8 <print_debug_data@@Base+0x440>
   145d8:	ldr	r2, [pc, #1120]	; 14a40 <print_debug_data@@Base+0x8d8>
   145dc:	add	r3, r5, r5, lsl #2
   145e0:	add	r3, r2, r3, lsl #4
   145e4:	ldr	r4, [r3, #800]	; 0x320
   145e8:	ldr	r3, [r2, #3360]	; 0xd20
   145ec:	cmp	r5, r3
   145f0:	beq	146b8 <print_debug_data@@Base+0x550>
   145f4:	cmp	r5, #0
   145f8:	moveq	r2, #0
   145fc:	ldreq	r3, [pc, #1084]	; 14a40 <print_debug_data@@Base+0x8d8>
   14600:	streq	r2, [r3, #844]	; 0x34c
   14604:	add	r9, r5, #1
   14608:	ldr	r3, [pc, #1072]	; 14a40 <print_debug_data@@Base+0x8d8>
   1460c:	add	r2, r9, r9, lsl #2
   14610:	add	r2, r3, r2, lsl #4
   14614:	add	r1, r5, r5, lsl #2
   14618:	add	r3, r3, r1, lsl #4
   1461c:	ldr	r0, [r3, #844]	; 0x34c
   14620:	ldr	r1, [r3, #840]	; 0x348
   14624:	mul	r1, r1, r0
   14628:	str	r1, [r2, #844]	; 0x34c
   1462c:	ldr	r2, [r3, #804]	; 0x324
   14630:	add	r2, r4, r2
   14634:	cmp	r4, r2
   14638:	bge	147a8 <print_debug_data@@Base+0x640>
   1463c:	add	r3, r4, #1
   14640:	ldr	r1, [pc, #1020]	; 14a44 <print_debug_data@@Base+0x8dc>
   14644:	add	r3, r1, r3, lsl #2
   14648:	add	r2, r2, #1
   1464c:	add	r1, r1, r2, lsl #2
   14650:	mov	r4, #1
   14654:	add	r5, r5, r5, lsl #2
   14658:	ldr	r2, [pc, #992]	; 14a40 <print_debug_data@@Base+0x8d8>
   1465c:	add	r5, r2, r5, lsl #4
   14660:	ldr	r2, [r3, #68]	; 0x44
   14664:	cmp	r2, #0
   14668:	ldrne	r0, [r5, #844]	; 0x34c
   1466c:	ldrne	r2, [r3, #104]	; 0x68
   14670:	ldrne	r2, [r2, r0, lsl #2]
   14674:	ldreq	r2, [r3]
   14678:	mul	r4, r2, r4
   1467c:	add	r3, r3, #4
   14680:	cmp	r3, r1
   14684:	bne	14660 <print_debug_data@@Base+0x4f8>
   14688:	cmp	r4, #0
   1468c:	ble	1480c <print_debug_data@@Base+0x6a4>
   14690:	ldr	r0, [pc, #932]	; 14a3c <print_debug_data@@Base+0x8d4>
   14694:	bl	1236c <coda_cursor_goto_first_array_element@plt>
   14698:	cmp	r0, #0
   1469c:	bne	147b0 <print_debug_data@@Base+0x648>
   146a0:	mov	r5, #0
   146a4:	ldr	sl, [pc, #912]	; 14a3c <print_debug_data@@Base+0x8d4>
   146a8:	add	r6, r9, r9, lsl #2
   146ac:	sub	r3, sl, #144	; 0x90
   146b0:	add	r6, r3, r6, lsl #4
   146b4:	b	147d0 <print_debug_data@@Base+0x668>
   146b8:	add	r2, sp, #8
   146bc:	add	r1, sp, #4
   146c0:	ldr	r0, [pc, #884]	; 14a3c <print_debug_data@@Base+0x8d4>
   146c4:	bl	12528 <coda_cursor_get_array_dim@plt>
   146c8:	cmp	r0, #0
   146cc:	bne	14724 <print_debug_data@@Base+0x5bc>
   146d0:	add	r3, r5, r5, lsl #2
   146d4:	ldr	r2, [pc, #868]	; 14a40 <print_debug_data@@Base+0x8d8>
   146d8:	add	r3, r2, r3, lsl #4
   146dc:	ldr	r3, [r3, #804]	; 0x324
   146e0:	ldr	r2, [sp, #4]
   146e4:	cmp	r3, r2
   146e8:	bne	1472c <print_debug_data@@Base+0x5c4>
   146ec:	cmp	r3, #0
   146f0:	ble	1480c <print_debug_data@@Base+0x6a4>
   146f4:	add	r3, r5, r5, lsl #2
   146f8:	ldr	r0, [pc, #840]	; 14a48 <print_debug_data@@Base+0x8e0>
   146fc:	add	r0, r0, r3, lsl #4
   14700:	add	r1, sp, #8
   14704:	add	r4, r4, #1
   14708:	ldr	r3, [pc, #820]	; 14a44 <print_debug_data@@Base+0x8dc>
   1470c:	add	r3, r3, r4, lsl #2
   14710:	mov	r2, #0
   14714:	add	r5, r5, r5, lsl #2
   14718:	ldr	lr, [pc, #800]	; 14a40 <print_debug_data@@Base+0x8d8>
   1471c:	add	lr, lr, r5, lsl #4
   14720:	b	14770 <print_debug_data@@Base+0x608>
   14724:	bl	1853c <handle_coda_error@@Base>
   14728:	b	146d0 <print_debug_data@@Base+0x568>
   1472c:	ldr	r3, [pc, #792]	; 14a4c <print_debug_data@@Base+0x8e4>
   14730:	mov	r2, #125	; 0x7d
   14734:	ldr	r1, [pc, #788]	; 14a50 <print_debug_data@@Base+0x8e8>
   14738:	ldr	r0, [pc, #788]	; 14a54 <print_debug_data@@Base+0x8ec>
   1473c:	bl	12654 <__assert_fail@plt>
   14740:	ldr	ip, [r1]
   14744:	cmp	r4, ip
   14748:	strlt	ip, [r3]
   1474c:	ldr	r4, [r3, #32]
   14750:	cmp	ip, r4
   14754:	strlt	ip, [r3, #32]
   14758:	add	r2, r2, #1
   1475c:	add	r1, r1, #4
   14760:	add	r3, r3, #4
   14764:	ldr	ip, [lr, #804]	; 0x324
   14768:	cmp	ip, r2
   1476c:	ble	1480c <print_debug_data@@Base+0x6a4>
   14770:	ldr	ip, [r0, #4]!
   14774:	cmn	ip, #1
   14778:	bne	14758 <print_debug_data@@Base+0x5f0>
   1477c:	ldr	r6, [r1]
   14780:	ldr	r4, [lr, #844]	; 0x34c
   14784:	ldr	ip, [r3, #104]	; 0x68
   14788:	str	r6, [ip, r4, lsl #2]
   1478c:	ldr	r4, [r3]
   14790:	cmn	r4, #1
   14794:	bne	14740 <print_debug_data@@Base+0x5d8>
   14798:	ldr	ip, [r1]
   1479c:	str	ip, [r3]
   147a0:	str	ip, [r3, #32]
   147a4:	b	14758 <print_debug_data@@Base+0x5f0>
   147a8:	mov	r4, #1
   147ac:	b	14690 <print_debug_data@@Base+0x528>
   147b0:	bl	1853c <handle_coda_error@@Base>
   147b4:	b	146a0 <print_debug_data@@Base+0x538>
   147b8:	ldr	r3, [r6, #844]	; 0x34c
   147bc:	add	r3, r3, #1
   147c0:	str	r3, [r6, #844]	; 0x34c
   147c4:	add	r5, r5, #1
   147c8:	cmp	r4, r5
   147cc:	ble	14804 <print_debug_data@@Base+0x69c>
   147d0:	mov	r2, r7
   147d4:	mov	r1, r9
   147d8:	add	r0, r8, #1
   147dc:	bl	14580 <print_debug_data@@Base+0x418>
   147e0:	sub	r3, r4, #1
   147e4:	cmp	r3, r5
   147e8:	ble	147c4 <print_debug_data@@Base+0x65c>
   147ec:	mov	r0, sl
   147f0:	bl	12468 <coda_cursor_goto_next_array_element@plt>
   147f4:	cmp	r0, #0
   147f8:	beq	147b8 <print_debug_data@@Base+0x650>
   147fc:	bl	1853c <handle_coda_error@@Base>
   14800:	b	147b8 <print_debug_data@@Base+0x650>
   14804:	ldr	r0, [pc, #560]	; 14a3c <print_debug_data@@Base+0x8d4>
   14808:	bl	123fc <coda_cursor_goto_parent@plt>
   1480c:	add	sp, sp, #48	; 0x30
   14810:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14814:	ldr	r0, [pc, #548]	; 14a40 <print_debug_data@@Base+0x8d8>
   14818:	add	r3, r0, r7, lsl #2
   1481c:	add	r2, sp, #8
   14820:	ldr	r1, [r3, #3492]	; 0xda4
   14824:	add	r0, r0, #144	; 0x90
   14828:	bl	12234 <coda_cursor_get_record_field_available_status@plt>
   1482c:	cmp	r0, #0
   14830:	bne	1488c <print_debug_data@@Base+0x724>
   14834:	ldr	r3, [sp, #8]
   14838:	cmp	r3, #0
   1483c:	bne	14894 <print_debug_data@@Base+0x72c>
   14840:	ldr	r1, [pc, #504]	; 14a40 <print_debug_data@@Base+0x8d8>
   14844:	ldr	ip, [r1, #3360]	; 0xd20
   14848:	add	r2, ip, ip, lsl #2
   1484c:	add	r1, r1, r2, lsl #4
   14850:	ldr	r2, [r1, #800]	; 0x320
   14854:	ldr	r1, [r1, #804]	; 0x324
   14858:	cmp	r1, #0
   1485c:	ble	1480c <print_debug_data@@Base+0x6a4>
   14860:	add	r0, ip, ip, lsl #2
   14864:	ldr	r1, [pc, #476]	; 14a48 <print_debug_data@@Base+0x8e0>
   14868:	add	r1, r1, r0, lsl #4
   1486c:	add	r0, r2, #1
   14870:	ldr	r2, [pc, #460]	; 14a44 <print_debug_data@@Base+0x8dc>
   14874:	add	r2, r2, r0, lsl #2
   14878:	add	r0, ip, ip, lsl #2
   1487c:	ldr	ip, [pc, #444]	; 14a40 <print_debug_data@@Base+0x8d8>
   14880:	add	ip, ip, r0, lsl #4
   14884:	mov	lr, #0
   14888:	b	148e8 <print_debug_data@@Base+0x780>
   1488c:	bl	1853c <handle_coda_error@@Base>
   14890:	b	14834 <print_debug_data@@Base+0x6cc>
   14894:	ldr	r0, [pc, #420]	; 14a40 <print_debug_data@@Base+0x8d8>
   14898:	add	r3, r0, r7, lsl #2
   1489c:	ldr	r1, [r3, #3492]	; 0xda4
   148a0:	add	r0, r0, #144	; 0x90
   148a4:	bl	1239c <coda_cursor_goto_record_field_by_index@plt>
   148a8:	cmp	r0, #0
   148ac:	bne	148cc <print_debug_data@@Base+0x764>
   148b0:	add	r2, r7, #1
   148b4:	mov	r1, r5
   148b8:	add	r0, r8, #1
   148bc:	bl	14580 <print_debug_data@@Base+0x418>
   148c0:	ldr	r0, [pc, #372]	; 14a3c <print_debug_data@@Base+0x8d4>
   148c4:	bl	123fc <coda_cursor_goto_parent@plt>
   148c8:	b	1480c <print_debug_data@@Base+0x6a4>
   148cc:	bl	1853c <handle_coda_error@@Base>
   148d0:	b	148b0 <print_debug_data@@Base+0x748>
   148d4:	add	r3, r3, #1
   148d8:	add	r2, r2, #4
   148dc:	ldr	r0, [ip, #804]	; 0x324
   148e0:	cmp	r0, r3
   148e4:	ble	1480c <print_debug_data@@Base+0x6a4>
   148e8:	ldr	r0, [r1, #4]!
   148ec:	cmn	r0, #1
   148f0:	bne	148d4 <print_debug_data@@Base+0x76c>
   148f4:	ldr	r5, [ip, #844]	; 0x34c
   148f8:	ldr	r4, [r2, #104]	; 0x68
   148fc:	str	lr, [r4, r5, lsl #2]
   14900:	ldr	r4, [r2]
   14904:	cmn	r4, #1
   14908:	streq	lr, [r2]
   1490c:	str	lr, [r2, #32]
   14910:	b	148d4 <print_debug_data@@Base+0x76c>
   14914:	ldr	r2, [pc, #292]	; 14a40 <print_debug_data@@Base+0x8d8>
   14918:	ldr	r2, [r2, #3360]	; 0xd20
   1491c:	cmp	r5, r2
   14920:	bne	149c8 <print_debug_data@@Base+0x860>
   14924:	cmp	r3, #4
   14928:	beq	149dc <print_debug_data@@Base+0x874>
   1492c:	add	r1, sp, #8
   14930:	ldr	r0, [pc, #260]	; 14a3c <print_debug_data@@Base+0x8d4>
   14934:	bl	121bc <coda_cursor_get_byte_size@plt>
   14938:	cmp	r0, #0
   1493c:	bne	14a08 <print_debug_data@@Base+0x8a0>
   14940:	ldr	r1, [pc, #248]	; 14a40 <print_debug_data@@Base+0x8d8>
   14944:	lsl	r0, r5, #2
   14948:	add	r3, r0, r5
   1494c:	add	r3, r1, r3, lsl #4
   14950:	ldr	r3, [r3, #800]	; 0x320
   14954:	ldr	r2, [pc, #232]	; 14a44 <print_debug_data@@Base+0x8dc>
   14958:	add	ip, r2, r3, lsl #2
   1495c:	add	r5, r0, r5
   14960:	add	r1, r1, r5, lsl #4
   14964:	ldr	r0, [r1, #844]	; 0x34c
   14968:	ldr	r1, [ip, #108]	; 0x6c
   1496c:	ldr	ip, [sp, #8]
   14970:	str	ip, [r1, r0, lsl #2]
   14974:	add	r2, r2, r3, lsl #2
   14978:	ldr	r0, [r2, #4]
   1497c:	cmn	r0, #1
   14980:	beq	14a10 <print_debug_data@@Base+0x8a8>
   14984:	ldrd	r4, [sp, #8]
   14988:	asr	r1, r0, #31
   1498c:	cmp	r0, r4
   14990:	sbcs	r2, r1, r5
   14994:	ldrlt	r2, [pc, #168]	; 14a44 <print_debug_data@@Base+0x8dc>
   14998:	addlt	r2, r2, r3, lsl #2
   1499c:	strlt	r4, [r2, #4]
   149a0:	ldr	r2, [pc, #156]	; 14a44 <print_debug_data@@Base+0x8dc>
   149a4:	add	r2, r2, r3, lsl #2
   149a8:	ldr	r0, [r2, #36]	; 0x24
   149ac:	asr	r1, r0, #31
   149b0:	cmp	r4, r0
   149b4:	sbcs	r2, r5, r1
   149b8:	ldrlt	r2, [pc, #132]	; 14a44 <print_debug_data@@Base+0x8dc>
   149bc:	addlt	r3, r2, r3, lsl #2
   149c0:	strlt	r4, [r3, #36]	; 0x24
   149c4:	b	1480c <print_debug_data@@Base+0x6a4>
   149c8:	ldr	r3, [pc, #124]	; 14a4c <print_debug_data@@Base+0x8e4>
   149cc:	mov	r2, #252	; 0xfc
   149d0:	ldr	r1, [pc, #120]	; 14a50 <print_debug_data@@Base+0x8e8>
   149d4:	ldr	r0, [pc, #124]	; 14a58 <print_debug_data@@Base+0x8f0>
   149d8:	bl	12654 <__assert_fail@plt>
   149dc:	add	r1, sp, #4
   149e0:	ldr	r0, [pc, #84]	; 14a3c <print_debug_data@@Base+0x8d4>
   149e4:	bl	1242c <coda_cursor_get_string_length@plt>
   149e8:	cmp	r0, #0
   149ec:	bne	14a00 <print_debug_data@@Base+0x898>
   149f0:	ldr	r2, [sp, #4]
   149f4:	asr	r3, r2, #31
   149f8:	strd	r2, [sp, #8]
   149fc:	b	14940 <print_debug_data@@Base+0x7d8>
   14a00:	bl	1853c <handle_coda_error@@Base>
   14a04:	b	149f0 <print_debug_data@@Base+0x888>
   14a08:	bl	1853c <handle_coda_error@@Base>
   14a0c:	b	14940 <print_debug_data@@Base+0x7d8>
   14a10:	ldr	r1, [sp, #8]
   14a14:	ldr	r2, [pc, #40]	; 14a44 <print_debug_data@@Base+0x8dc>
   14a18:	add	r0, r2, r3, lsl #2
   14a1c:	str	r1, [r0, #4]
   14a20:	str	r1, [r0, #36]	; 0x24
   14a24:	b	1480c <print_debug_data@@Base+0x6a4>
   14a28:	ldr	r3, [pc, #28]	; 14a4c <print_debug_data@@Base+0x8e4>
   14a2c:	ldr	r2, [pc, #40]	; 14a5c <print_debug_data@@Base+0x8f4>
   14a30:	ldr	r1, [pc, #24]	; 14a50 <print_debug_data@@Base+0x8e8>
   14a34:	ldr	r0, [pc, #36]	; 14a60 <print_debug_data@@Base+0x8f8>
   14a38:	bl	12654 <__assert_fail@plt>
   14a3c:	andeq	ip, r2, r0, lsl #5
   14a40:	strdeq	ip, [r2], -r0
   14a44:	strheq	sp, [r2], -r8
   14a48:	andeq	ip, r2, r4, lsl r5
   14a4c:	andeq	r9, r1, r4, ror #31
   14a50:	andeq	sl, r1, r4, lsr r0
   14a54:	andeq	sl, r1, r8, lsr #1
   14a58:	andeq	sl, r1, ip, asr #1
   14a5c:	andeq	r0, r0, r6, lsr #2
   14a60:	andeq	sl, r1, r4, lsl #3

00014a64 <dim_info_init@@Base>:
   14a64:	ldr	r3, [pc, #20]	; 14a80 <dim_info_init@@Base+0x1c>
   14a68:	mov	r2, #0
   14a6c:	str	r2, [r3]
   14a70:	str	r2, [r3, #68]	; 0x44
   14a74:	mvn	r2, #0
   14a78:	str	r2, [r3, #104]	; 0x68
   14a7c:	bx	lr
   14a80:	strheq	sp, [r2], -r8

00014a84 <dim_info_done@@Base>:
   14a84:	bx	lr

00014a88 <print_all_distinct_dims@@Base>:
   14a88:	push	{r4, r5, r6, r7, r8, r9, lr}
   14a8c:	sub	sp, sp, #12
   14a90:	ldr	r3, [pc, #456]	; 14c60 <print_all_distinct_dims@@Base+0x1d8>
   14a94:	ldr	r3, [r3]
   14a98:	cmp	r3, r0
   14a9c:	ble	14ac0 <print_all_distinct_dims@@Base+0x38>
   14aa0:	mov	r6, r0
   14aa4:	add	r3, r0, #18
   14aa8:	ldr	r2, [pc, #432]	; 14c60 <print_all_distinct_dims@@Base+0x1d8>
   14aac:	ldr	r3, [r2, r3, lsl #2]
   14ab0:	cmp	r3, #0
   14ab4:	bne	14ad4 <print_all_distinct_dims@@Base+0x4c>
   14ab8:	add	sp, sp, #12
   14abc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14ac0:	ldr	r3, [pc, #412]	; 14c64 <print_all_distinct_dims@@Base+0x1dc>
   14ac4:	mov	r2, #50	; 0x32
   14ac8:	ldr	r1, [pc, #408]	; 14c68 <print_all_distinct_dims@@Base+0x1e0>
   14acc:	ldr	r0, [pc, #408]	; 14c6c <print_all_distinct_dims@@Base+0x1e4>
   14ad0:	bl	12654 <__assert_fail@plt>
   14ad4:	add	r3, r2, r0, lsl #2
   14ad8:	ldr	r4, [r3, #4]
   14adc:	add	r4, r4, #1
   14ae0:	lsl	r4, r4, #2
   14ae4:	mov	r0, r4
   14ae8:	bl	123cc <malloc@plt>
   14aec:	subs	r5, r0, #0
   14af0:	beq	14b90 <print_all_distinct_dims@@Base+0x108>
   14af4:	ldr	r4, [pc, #356]	; 14c60 <print_all_distinct_dims@@Base+0x1d8>
   14af8:	add	r3, r4, r6, lsl #2
   14afc:	ldr	r2, [r3, #4]
   14b00:	add	r2, r2, #1
   14b04:	lsl	r2, r2, #2
   14b08:	mov	r1, #0
   14b0c:	mov	r0, r5
   14b10:	bl	124b0 <memset@plt>
   14b14:	add	r3, r4, r6, lsl #2
   14b18:	ldr	r3, [r3, #140]	; 0x8c
   14b1c:	add	r4, r4, r3, lsl #3
   14b20:	ldrd	r0, [r4, #232]	; 0xe8
   14b24:	cmp	r0, #1
   14b28:	sbcs	r3, r1, #0
   14b2c:	blt	14b5c <print_all_distinct_dims@@Base+0xd4>
   14b30:	ldr	r3, [pc, #296]	; 14c60 <print_all_distinct_dims@@Base+0x1d8>
   14b34:	add	r3, r3, r6, lsl #2
   14b38:	ldr	r2, [r3, #108]	; 0x6c
   14b3c:	add	r0, r2, r0, lsl #2
   14b40:	ldr	r3, [r2], #4
   14b44:	cmp	r3, #0
   14b48:	ldrge	r1, [r5, r3, lsl #2]
   14b4c:	addge	r1, r1, #1
   14b50:	strge	r1, [r5, r3, lsl #2]
   14b54:	cmp	r2, r0
   14b58:	bne	14b40 <print_all_distinct_dims@@Base+0xb8>
   14b5c:	add	r1, r6, #1
   14b60:	ldr	r0, [pc, #264]	; 14c70 <print_all_distinct_dims@@Base+0x1e8>
   14b64:	bl	12228 <printf@plt>
   14b68:	ldr	r3, [pc, #240]	; 14c60 <print_all_distinct_dims@@Base+0x1d8>
   14b6c:	add	r2, r3, r6, lsl #2
   14b70:	ldr	r4, [r2, #36]	; 0x24
   14b74:	ldr	r1, [r2, #4]
   14b78:	cmp	r4, r1
   14b7c:	bge	14be0 <print_all_distinct_dims@@Base+0x158>
   14b80:	add	r7, r5, r4, lsl #2
   14b84:	ldr	r9, [pc, #232]	; 14c74 <print_all_distinct_dims@@Base+0x1ec>
   14b88:	mov	r8, r2
   14b8c:	b	14bc4 <print_all_distinct_dims@@Base+0x13c>
   14b90:	mov	r3, #61	; 0x3d
   14b94:	str	r3, [sp]
   14b98:	ldr	r3, [pc, #200]	; 14c68 <print_all_distinct_dims@@Base+0x1e0>
   14b9c:	mov	r2, r4
   14ba0:	ldr	r1, [pc, #208]	; 14c78 <print_all_distinct_dims@@Base+0x1f0>
   14ba4:	mvn	r0, #0
   14ba8:	bl	1224c <coda_set_error@plt>
   14bac:	bl	1853c <handle_coda_error@@Base>
   14bb0:	b	14af4 <print_all_distinct_dims@@Base+0x6c>
   14bb4:	add	r4, r4, #1
   14bb8:	ldr	r1, [r8, #4]
   14bbc:	cmp	r1, r4
   14bc0:	ble	14be0 <print_all_distinct_dims@@Base+0x158>
   14bc4:	ldr	r3, [r7], #4
   14bc8:	cmp	r3, #0
   14bcc:	ble	14bb4 <print_all_distinct_dims@@Base+0x12c>
   14bd0:	mov	r1, r4
   14bd4:	mov	r0, r9
   14bd8:	bl	12228 <printf@plt>
   14bdc:	b	14bb4 <print_all_distinct_dims@@Base+0x12c>
   14be0:	ldr	r0, [pc, #148]	; 14c7c <print_all_distinct_dims@@Base+0x1f4>
   14be4:	bl	12228 <printf@plt>
   14be8:	ldr	r0, [pc, #144]	; 14c80 <print_all_distinct_dims@@Base+0x1f8>
   14bec:	bl	12228 <printf@plt>
   14bf0:	ldr	r3, [pc, #104]	; 14c60 <print_all_distinct_dims@@Base+0x1d8>
   14bf4:	add	r2, r3, r6, lsl #2
   14bf8:	ldr	r4, [r2, #36]	; 0x24
   14bfc:	ldr	r3, [r2, #4]
   14c00:	cmp	r4, r3
   14c04:	bge	14c40 <print_all_distinct_dims@@Base+0x1b8>
   14c08:	add	r7, r5, r4, lsl #2
   14c0c:	ldr	r8, [pc, #96]	; 14c74 <print_all_distinct_dims@@Base+0x1ec>
   14c10:	mov	r6, r2
   14c14:	b	14c28 <print_all_distinct_dims@@Base+0x1a0>
   14c18:	add	r4, r4, #1
   14c1c:	ldr	r3, [r6, #4]
   14c20:	cmp	r3, r4
   14c24:	ble	14c40 <print_all_distinct_dims@@Base+0x1b8>
   14c28:	ldr	r1, [r7], #4
   14c2c:	cmp	r1, #0
   14c30:	ble	14c18 <print_all_distinct_dims@@Base+0x190>
   14c34:	mov	r0, r8
   14c38:	bl	12228 <printf@plt>
   14c3c:	b	14c18 <print_all_distinct_dims@@Base+0x190>
   14c40:	ldr	r1, [r5, r3, lsl #2]
   14c44:	ldr	r0, [pc, #48]	; 14c7c <print_all_distinct_dims@@Base+0x1f4>
   14c48:	bl	12228 <printf@plt>
   14c4c:	mov	r0, #10
   14c50:	bl	124bc <putchar@plt>
   14c54:	mov	r0, r5
   14c58:	bl	12294 <free@plt>
   14c5c:	b	14ab8 <print_all_distinct_dims@@Base+0x30>
   14c60:	strheq	sp, [r2], -r8
   14c64:	strdeq	r9, [r1], -ip
   14c68:	andeq	sl, r1, r4, lsr r0
   14c6c:	strdeq	sl, [r1], -r4
   14c70:	andeq	sl, r1, r0, lsl r1
   14c74:	andeq	sl, r1, ip, lsl r1
   14c78:	andeq	r9, r1, ip, asr #27
   14c7c:	andeq	sl, r1, r0, lsr #2
   14c80:	andeq	sl, r1, r4, lsr #2

00014c84 <dim_enter_array@@Base>:
   14c84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14c88:	sub	sp, sp, #92	; 0x5c
   14c8c:	ldr	r3, [pc, #2276]	; 15578 <dim_enter_array@@Base+0x8f4>
   14c90:	ldr	r4, [r3, #3360]	; 0xd20
   14c94:	ldr	r2, [r3, #136]	; 0x88
   14c98:	add	r2, r2, #2
   14c9c:	add	r1, sp, #84	; 0x54
   14ca0:	ldr	r0, [r3, r2, lsl #2]
   14ca4:	bl	12660 <coda_type_get_class@plt>
   14ca8:	cmp	r0, #0
   14cac:	bne	14cdc <dim_enter_array@@Base+0x58>
   14cb0:	ldr	r3, [sp, #84]	; 0x54
   14cb4:	sub	r3, r3, #1
   14cb8:	cmp	r3, #5
   14cbc:	ldrls	pc, [pc, r3, lsl #2]
   14cc0:	b	14f9c <dim_enter_array@@Base+0x318>
   14cc4:	andeq	r4, r1, r4, ror #25
   14cc8:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   14ccc:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   14cd0:	andeq	r4, r1, r0, asr #29
   14cd4:	andeq	r4, r1, r8, lsl #30
   14cd8:	andeq	r4, r1, r4, asr sp
   14cdc:	bl	1853c <handle_coda_error@@Base>
   14ce0:	b	14cb0 <dim_enter_array@@Base+0x2c>
   14ce4:	ldr	r0, [pc, #2188]	; 15578 <dim_enter_array@@Base+0x8f4>
   14ce8:	ldr	r3, [r0, #136]	; 0x88
   14cec:	add	r3, r3, #2
   14cf0:	add	r2, sp, #48	; 0x30
   14cf4:	add	r1, sp, #44	; 0x2c
   14cf8:	ldr	r0, [r0, r3, lsl #2]
   14cfc:	bl	125a0 <coda_type_get_array_dim@plt>
   14d00:	cmp	r0, #0
   14d04:	bne	14d4c <dim_enter_array@@Base+0xc8>
   14d08:	ldr	r0, [sp, #44]	; 0x2c
   14d0c:	add	r3, r4, r4, lsl #2
   14d10:	ldr	r2, [pc, #2144]	; 15578 <dim_enter_array@@Base+0x8f4>
   14d14:	add	r3, r2, r3, lsl #4
   14d18:	str	r0, [r3, #804]	; 0x324
   14d1c:	cmp	r0, #0
   14d20:	ble	14d9c <dim_enter_array@@Base+0x118>
   14d24:	add	r3, sp, #48	; 0x30
   14d28:	add	r2, r4, r4, lsl #2
   14d2c:	ldr	r1, [pc, #2120]	; 1557c <dim_enter_array@@Base+0x8f8>
   14d30:	add	r2, r1, r2, lsl #4
   14d34:	add	r0, r3, r0, lsl #2
   14d38:	ldr	r1, [r3], #4
   14d3c:	str	r1, [r2, #4]!
   14d40:	cmp	r3, r0
   14d44:	bne	14d38 <dim_enter_array@@Base+0xb4>
   14d48:	b	14d9c <dim_enter_array@@Base+0x118>
   14d4c:	bl	1853c <handle_coda_error@@Base>
   14d50:	b	14d08 <dim_enter_array@@Base+0x84>
   14d54:	ldr	r2, [pc, #2076]	; 15578 <dim_enter_array@@Base+0x8f4>
   14d58:	ldr	r3, [r2, #136]	; 0x88
   14d5c:	add	r3, r3, #2
   14d60:	add	r1, sp, #48	; 0x30
   14d64:	ldr	r0, [r2, r3, lsl #2]
   14d68:	bl	124d4 <coda_type_get_special_type@plt>
   14d6c:	cmp	r0, #0
   14d70:	bne	14ea4 <dim_enter_array@@Base+0x220>
   14d74:	ldr	r3, [sp, #48]	; 0x30
   14d78:	cmp	r3, #3
   14d7c:	bne	14eac <dim_enter_array@@Base+0x228>
   14d80:	add	r3, r4, r4, lsl #2
   14d84:	ldr	r2, [pc, #2028]	; 15578 <dim_enter_array@@Base+0x8f4>
   14d88:	add	r3, r2, r3, lsl #4
   14d8c:	mov	r2, #1
   14d90:	str	r2, [r3, #804]	; 0x324
   14d94:	mov	r2, #2
   14d98:	str	r2, [r3, #808]	; 0x328
   14d9c:	ldr	r3, [pc, #2012]	; 15580 <dim_enter_array@@Base+0x8fc>
   14da0:	ldr	r3, [r3]
   14da4:	cmp	r3, #0
   14da8:	beq	14fb0 <dim_enter_array@@Base+0x32c>
   14dac:	ldr	r3, [pc, #2000]	; 15584 <dim_enter_array@@Base+0x900>
   14db0:	ldr	sl, [r3]
   14db4:	add	r3, r4, r4, lsl #2
   14db8:	ldr	r2, [pc, #1976]	; 15578 <dim_enter_array@@Base+0x8f4>
   14dbc:	add	r3, r2, r3, lsl #4
   14dc0:	str	sl, [r3, #800]	; 0x320
   14dc4:	ldr	r2, [r3, #804]	; 0x324
   14dc8:	add	r3, sl, r2
   14dcc:	cmp	r3, #8
   14dd0:	bgt	14fd8 <dim_enter_array@@Base+0x354>
   14dd4:	ldr	r1, [pc, #1960]	; 15584 <dim_enter_array@@Base+0x900>
   14dd8:	str	r3, [r1]
   14ddc:	cmp	sl, #0
   14de0:	ble	150e4 <dim_enter_array@@Base+0x460>
   14de4:	add	r3, r1, sl, lsl #3
   14de8:	ldrd	r6, [r3, #232]	; 0xe8
   14dec:	strd	r6, [sp, #16]
   14df0:	add	r3, sl, #37	; 0x25
   14df4:	lsl	r3, r3, #3
   14df8:	ldrd	r0, [r1, r3]
   14dfc:	strd	r0, [sp, #24]
   14e00:	cmp	r0, #1
   14e04:	sbcs	r3, r1, #0
   14e08:	blt	14fec <dim_enter_array@@Base+0x368>
   14e0c:	cmp	r2, #0
   14e10:	ble	1501c <dim_enter_array@@Base+0x398>
   14e14:	add	r3, r4, r4, lsl #2
   14e18:	ldr	r1, [pc, #1884]	; 1557c <dim_enter_array@@Base+0x8f8>
   14e1c:	add	r0, r1, r3, lsl #4
   14e20:	str	r0, [sp, #8]
   14e24:	add	r3, sl, #1
   14e28:	lsl	ip, r3, #2
   14e2c:	str	ip, [sp, #32]
   14e30:	ldr	r1, [pc, #1868]	; 15584 <dim_enter_array@@Base+0x900>
   14e34:	add	ip, ip, r1
   14e38:	add	r2, r2, r3
   14e3c:	add	r1, r1, r2, lsl #2
   14e40:	mov	r2, r0
   14e44:	mov	r6, #0
   14e48:	mov	r0, r6
   14e4c:	ldr	r3, [r2, #4]!
   14e50:	str	r3, [ip], #4
   14e54:	str	r0, [ip, #64]	; 0x40
   14e58:	cmn	r3, #1
   14e5c:	moveq	r6, #1
   14e60:	cmp	ip, r1
   14e64:	bne	14e4c <dim_enter_array@@Base+0x1c8>
   14e68:	cmp	r6, #0
   14e6c:	moveq	fp, r6
   14e70:	beq	15020 <dim_enter_array@@Base+0x39c>
   14e74:	ldr	r3, [sp, #16]
   14e78:	lsl	r3, r3, #2
   14e7c:	str	r3, [sp, #36]	; 0x24
   14e80:	ldr	r5, [pc, #1792]	; 15588 <dim_enter_array@@Base+0x904>
   14e84:	ldr	r3, [sp, #32]
   14e88:	add	r5, r3, r5
   14e8c:	ldr	r8, [sp, #8]
   14e90:	mov	r7, #0
   14e94:	add	fp, r4, r4, lsl #2
   14e98:	ldr	r2, [pc, #1752]	; 15578 <dim_enter_array@@Base+0x8f4>
   14e9c:	add	fp, r2, fp, lsl #4
   14ea0:	b	15130 <dim_enter_array@@Base+0x4ac>
   14ea4:	bl	1853c <handle_coda_error@@Base>
   14ea8:	b	14d74 <dim_enter_array@@Base+0xf0>
   14eac:	ldr	r3, [pc, #1752]	; 1558c <dim_enter_array@@Base+0x908>
   14eb0:	ldr	r2, [pc, #1752]	; 15590 <dim_enter_array@@Base+0x90c>
   14eb4:	ldr	r1, [pc, #1752]	; 15594 <dim_enter_array@@Base+0x910>
   14eb8:	ldr	r0, [pc, #1752]	; 15598 <dim_enter_array@@Base+0x914>
   14ebc:	bl	12654 <__assert_fail@plt>
   14ec0:	ldr	r2, [pc, #1712]	; 15578 <dim_enter_array@@Base+0x8f4>
   14ec4:	ldr	r3, [r2, #136]	; 0x88
   14ec8:	add	r3, r3, #2
   14ecc:	add	r1, sp, #48	; 0x30
   14ed0:	ldr	r0, [r2, r3, lsl #2]
   14ed4:	bl	12510 <coda_type_get_string_length@plt>
   14ed8:	cmp	r0, #0
   14edc:	bne	14f00 <dim_enter_array@@Base+0x27c>
   14ee0:	add	r3, r4, r4, lsl #2
   14ee4:	ldr	r2, [pc, #1676]	; 15578 <dim_enter_array@@Base+0x8f4>
   14ee8:	add	r3, r2, r3, lsl #4
   14eec:	mov	r2, #1
   14ef0:	str	r2, [r3, #804]	; 0x324
   14ef4:	ldr	r2, [sp, #48]	; 0x30
   14ef8:	str	r2, [r3, #808]	; 0x328
   14efc:	b	14d9c <dim_enter_array@@Base+0x118>
   14f00:	bl	1853c <handle_coda_error@@Base>
   14f04:	b	14ee0 <dim_enter_array@@Base+0x25c>
   14f08:	ldr	r2, [pc, #1640]	; 15578 <dim_enter_array@@Base+0x8f4>
   14f0c:	ldr	r3, [r2, #136]	; 0x88
   14f10:	add	r3, r3, #2
   14f14:	add	r1, sp, #48	; 0x30
   14f18:	ldr	r0, [r2, r3, lsl #2]
   14f1c:	bl	12300 <coda_type_get_bit_size@plt>
   14f20:	cmp	r0, #0
   14f24:	bne	14f7c <dim_enter_array@@Base+0x2f8>
   14f28:	add	r3, r4, r4, lsl #2
   14f2c:	ldr	r2, [pc, #1604]	; 15578 <dim_enter_array@@Base+0x8f4>
   14f30:	add	r3, r2, r3, lsl #4
   14f34:	mov	r2, #1
   14f38:	str	r2, [r3, #804]	; 0x324
   14f3c:	ldrd	r0, [sp, #48]	; 0x30
   14f40:	cmp	r0, #0
   14f44:	sbcs	r3, r1, #0
   14f48:	blt	14f84 <dim_enter_array@@Base+0x300>
   14f4c:	add	ip, r4, r4, lsl #2
   14f50:	ldr	r3, [pc, #1568]	; 15578 <dim_enter_array@@Base+0x8f4>
   14f54:	add	ip, r3, ip, lsl #4
   14f58:	and	r2, r0, #7
   14f5c:	mov	r3, #0
   14f60:	orr	r2, r2, r3
   14f64:	lsr	r3, r0, #3
   14f68:	orr	r3, r3, r1, lsl #29
   14f6c:	cmp	r2, #0
   14f70:	addne	r3, r3, #1
   14f74:	str	r3, [ip, #808]	; 0x328
   14f78:	b	14d9c <dim_enter_array@@Base+0x118>
   14f7c:	bl	1853c <handle_coda_error@@Base>
   14f80:	b	14f28 <dim_enter_array@@Base+0x2a4>
   14f84:	add	r2, r4, r4, lsl #2
   14f88:	ldr	r3, [pc, #1512]	; 15578 <dim_enter_array@@Base+0x8f4>
   14f8c:	add	r3, r3, r2, lsl #4
   14f90:	mvn	r2, #0
   14f94:	str	r2, [r3, #808]	; 0x328
   14f98:	b	14d9c <dim_enter_array@@Base+0x118>
   14f9c:	ldr	r3, [pc, #1512]	; 1558c <dim_enter_array@@Base+0x908>
   14fa0:	ldr	r2, [pc, #1524]	; 1559c <dim_enter_array@@Base+0x918>
   14fa4:	ldr	r1, [pc, #1512]	; 15594 <dim_enter_array@@Base+0x910>
   14fa8:	ldr	r0, [pc, #1512]	; 15598 <dim_enter_array@@Base+0x914>
   14fac:	bl	12654 <__assert_fail@plt>
   14fb0:	ldr	r3, [pc, #1472]	; 15578 <dim_enter_array@@Base+0x8f4>
   14fb4:	lsl	r2, r4, #2
   14fb8:	add	r1, r2, r4
   14fbc:	add	r1, r3, r1, lsl #4
   14fc0:	mvn	r0, #0
   14fc4:	str	r0, [r1, #800]	; 0x320
   14fc8:	mov	r0, #0
   14fcc:	str	r0, [r1, #840]	; 0x348
   14fd0:	str	r0, [r1, #844]	; 0x34c
   14fd4:	b	15450 <dim_enter_array@@Base+0x7cc>
   14fd8:	ldr	r3, [pc, #1452]	; 1558c <dim_enter_array@@Base+0x908>
   14fdc:	ldr	r2, [pc, #1468]	; 155a0 <dim_enter_array@@Base+0x91c>
   14fe0:	ldr	r1, [pc, #1452]	; 15594 <dim_enter_array@@Base+0x910>
   14fe4:	ldr	r0, [pc, #1464]	; 155a4 <dim_enter_array@@Base+0x920>
   14fe8:	bl	12654 <__assert_fail@plt>
   14fec:	cmp	r2, #0
   14ff0:	ble	1501c <dim_enter_array@@Base+0x398>
   14ff4:	add	r0, sl, #1
   14ff8:	ldr	r1, [pc, #1412]	; 15584 <dim_enter_array@@Base+0x900>
   14ffc:	add	r3, r1, r0, lsl #2
   15000:	add	r2, r2, r0
   15004:	add	r1, r1, r2, lsl #2
   15008:	mov	r2, #0
   1500c:	str	r2, [r3], #4
   15010:	str	r2, [r3, #64]	; 0x40
   15014:	cmp	r3, r1
   15018:	bne	1500c <dim_enter_array@@Base+0x388>
   1501c:	mov	fp, #0
   15020:	ldr	r3, [pc, #1372]	; 15584 <dim_enter_array@@Base+0x900>
   15024:	mov	r2, #0
   15028:	str	r2, [r3, #68]	; 0x44
   1502c:	mvn	r2, #0
   15030:	str	r2, [r3, #104]	; 0x68
   15034:	ldr	r7, [r3]
   15038:	cmp	r7, #0
   1503c:	ble	15098 <dim_enter_array@@Base+0x414>
   15040:	add	r6, r3, #68	; 0x44
   15044:	mov	r2, #0
   15048:	mvn	r0, #0
   1504c:	mov	r1, r2
   15050:	mov	ip, r2
   15054:	mov	lr, r2
   15058:	mov	r5, #1
   1505c:	ldr	r3, [r6, #4]!
   15060:	cmp	r3, #0
   15064:	movne	r0, lr
   15068:	movne	r2, r5
   1506c:	movne	r1, r5
   15070:	movne	ip, r5
   15074:	add	lr, lr, #1
   15078:	cmp	lr, r7
   1507c:	bne	1505c <dim_enter_array@@Base+0x3d8>
   15080:	cmp	r1, #0
   15084:	ldrne	r3, [pc, #1272]	; 15584 <dim_enter_array@@Base+0x900>
   15088:	strne	ip, [r3, #68]	; 0x44
   1508c:	cmp	r2, #0
   15090:	ldrne	r3, [pc, #1260]	; 15584 <dim_enter_array@@Base+0x900>
   15094:	strne	r0, [r3, #104]	; 0x68
   15098:	add	r3, r4, r4, lsl #2
   1509c:	ldr	r2, [pc, #1236]	; 15578 <dim_enter_array@@Base+0x8f4>
   150a0:	add	r3, r2, r3, lsl #4
   150a4:	mov	r2, #1
   150a8:	str	r2, [r3, #840]	; 0x348
   150ac:	ldr	r5, [r3, #804]	; 0x324
   150b0:	cmp	r5, #0
   150b4:	ble	154e8 <dim_enter_array@@Base+0x864>
   150b8:	add	ip, sl, r2
   150bc:	ldr	r1, [pc, #1216]	; 15584 <dim_enter_array@@Base+0x900>
   150c0:	add	ip, r1, ip, lsl #2
   150c4:	add	r8, sl, #29
   150c8:	lsl	r8, r8, #3
   150cc:	add	r1, r8, r1
   150d0:	mov	lr, r2
   150d4:	mov	r0, #0
   150d8:	str	r8, [sp, #32]
   150dc:	ldrd	r8, [sp, #16]
   150e0:	b	152a4 <dim_enter_array@@Base+0x620>
   150e4:	mov	r0, #1
   150e8:	mov	r1, #0
   150ec:	strd	r0, [sp, #24]
   150f0:	strd	r0, [sp, #16]
   150f4:	b	14e0c <dim_enter_array@@Base+0x188>
   150f8:	mov	r3, #456	; 0x1c8
   150fc:	str	r3, [sp]
   15100:	ldr	r3, [pc, #1164]	; 15594 <dim_enter_array@@Base+0x910>
   15104:	ldr	r2, [sp, #36]	; 0x24
   15108:	ldr	r1, [pc, #1176]	; 155a8 <dim_enter_array@@Base+0x924>
   1510c:	mvn	r0, #0
   15110:	bl	1224c <coda_set_error@plt>
   15114:	bl	1853c <handle_coda_error@@Base>
   15118:	b	15164 <dim_enter_array@@Base+0x4e0>
   1511c:	add	r7, r7, #1
   15120:	add	r5, r5, #4
   15124:	ldr	r3, [fp, #804]	; 0x324
   15128:	cmp	r3, r7
   1512c:	ble	151b8 <dim_enter_array@@Base+0x534>
   15130:	ldr	r3, [r8, #4]!
   15134:	cmn	r3, #1
   15138:	movne	r3, #0
   1513c:	strne	r3, [r5, #32]
   15140:	strne	r3, [r5]
   15144:	bne	1511c <dim_enter_array@@Base+0x498>
   15148:	mov	r9, r5
   1514c:	str	sl, [r5, #32]
   15150:	ldr	r0, [sp, #36]	; 0x24
   15154:	bl	123cc <malloc@plt>
   15158:	str	r0, [r5]
   1515c:	cmp	r0, #0
   15160:	beq	150f8 <dim_enter_array@@Base+0x474>
   15164:	ldrd	r0, [sp, #16]
   15168:	mov	r3, r1
   1516c:	cmp	r0, #1
   15170:	sbcs	r3, r3, #0
   15174:	blt	1511c <dim_enter_array@@Base+0x498>
   15178:	mov	r3, #0
   1517c:	mov	ip, r4
   15180:	mov	lr, r5
   15184:	mov	r4, r0
   15188:	mov	r5, r1
   1518c:	ldr	r2, [r9]
   15190:	mvn	r1, #0
   15194:	str	r1, [r2, r3, lsl #2]
   15198:	add	r3, r3, #1
   1519c:	asr	r1, r3, #31
   151a0:	cmp	r3, r4
   151a4:	sbcs	r2, r1, r5
   151a8:	blt	1518c <dim_enter_array@@Base+0x508>
   151ac:	mov	r4, ip
   151b0:	mov	r5, lr
   151b4:	b	1511c <dim_enter_array@@Base+0x498>
   151b8:	add	r5, r4, r4, lsl #2
   151bc:	ldr	r2, [pc, #948]	; 15578 <dim_enter_array@@Base+0x8f4>
   151c0:	add	r5, r2, r5, lsl #4
   151c4:	mov	r0, #0
   151c8:	str	r0, [r5, #844]	; 0x34c
   151cc:	mov	r2, r0
   151d0:	mov	r1, r0
   151d4:	bl	14580 <print_debug_data@@Base+0x418>
   151d8:	ldr	r3, [r5, #804]	; 0x324
   151dc:	cmp	r3, #0
   151e0:	ble	1526c <dim_enter_array@@Base+0x5e8>
   151e4:	ldr	r5, [pc, #920]	; 15584 <dim_enter_array@@Base+0x900>
   151e8:	ldr	r3, [sp, #32]
   151ec:	add	r5, r3, r5
   151f0:	mov	r7, #0
   151f4:	mov	fp, r7
   151f8:	mov	r9, #1
   151fc:	add	r8, r4, r4, lsl #2
   15200:	ldr	r2, [pc, #880]	; 15578 <dim_enter_array@@Base+0x8f4>
   15204:	add	r8, r2, r8, lsl #4
   15208:	str	r6, [sp, #32]
   1520c:	ldr	r6, [sp, #8]
   15210:	b	15244 <dim_enter_array@@Base+0x5c0>
   15214:	mov	r3, #0
   15218:	str	r3, [r5, #68]	; 0x44
   1521c:	ldr	r0, [r5, #104]	; 0x68
   15220:	bl	12294 <free@plt>
   15224:	mov	r3, #0
   15228:	str	r3, [r5, #104]	; 0x68
   1522c:	str	r3, [r5, #136]	; 0x88
   15230:	add	r7, r7, #1
   15234:	add	r5, r5, #4
   15238:	ldr	r3, [r8, #804]	; 0x324
   1523c:	cmp	r3, r7
   15240:	ble	15020 <dim_enter_array@@Base+0x39c>
   15244:	ldr	r3, [r6, #4]!
   15248:	cmn	r3, #1
   1524c:	bne	15230 <dim_enter_array@@Base+0x5ac>
   15250:	ldr	r2, [r5]
   15254:	ldr	r3, [r5, #32]
   15258:	cmp	r2, r3
   1525c:	beq	15214 <dim_enter_array@@Base+0x590>
   15260:	str	r9, [r5, #68]	; 0x44
   15264:	ldr	fp, [sp, #32]
   15268:	b	15230 <dim_enter_array@@Base+0x5ac>
   1526c:	mov	fp, #0
   15270:	b	15020 <dim_enter_array@@Base+0x39c>
   15274:	asr	r7, r2, #31
   15278:	ldr	r3, [r1]
   1527c:	mul	r6, r7, r3
   15280:	ldr	r7, [r1, #4]
   15284:	mla	r6, r2, r7, r6
   15288:	umull	r2, r3, r3, r2
   1528c:	add	r3, r6, r3
   15290:	strd	r2, [r1, #8]
   15294:	add	r0, r0, #1
   15298:	add	r1, r1, #8
   1529c:	cmp	r0, r5
   152a0:	beq	15458 <dim_enter_array@@Base+0x7d4>
   152a4:	ldr	r2, [ip], #4
   152a8:	mul	lr, r2, lr
   152ac:	cmp	r0, #0
   152b0:	bne	15274 <dim_enter_array@@Base+0x5f0>
   152b4:	mov	r6, r2
   152b8:	asr	r7, r2, #31
   152bc:	strd	r6, [sp, #8]
   152c0:	mul	r6, r2, r9
   152c4:	ldr	r3, [sp, #12]
   152c8:	mla	r6, r8, r3, r6
   152cc:	umull	r2, r3, r2, r8
   152d0:	add	r3, r6, r3
   152d4:	strd	r2, [r1, #8]
   152d8:	b	15294 <dim_enter_array@@Base+0x610>
   152dc:	ldr	r1, [r3, #72]	; 0x48
   152e0:	cmp	r1, #0
   152e4:	ldrne	r1, [r3, #108]	; 0x6c
   152e8:	ldrne	r1, [r1, r8]
   152ec:	ldreq	r1, [r3, #4]
   152f0:	mul	r7, r1, r7
   152f4:	ldrd	r0, [r2]
   152f8:	adds	sl, r0, r7
   152fc:	adc	fp, r1, r7, asr #31
   15300:	mov	r0, sl
   15304:	mov	r1, fp
   15308:	strd	r0, [r2], #8
   1530c:	add	r3, r3, #4
   15310:	cmp	r3, ip
   15314:	bne	152dc <dim_enter_array@@Base+0x658>
   15318:	ldrd	sl, [sp, #8]
   1531c:	add	lr, lr, #1
   15320:	asr	r3, lr, #31
   15324:	cmp	lr, sl
   15328:	sbcs	r3, r3, fp
   1532c:	bge	15350 <dim_enter_array@@Base+0x6cc>
   15330:	cmp	r5, #0
   15334:	ble	1531c <dim_enter_array@@Base+0x698>
   15338:	lsl	r8, lr, #2
   1533c:	ldr	r2, [sp, #16]
   15340:	mov	r3, r9
   15344:	mov	r7, #1
   15348:	strd	sl, [sp, #8]
   1534c:	b	152dc <dim_enter_array@@Base+0x658>
   15350:	mov	sl, r6
   15354:	add	r4, r4, r4, lsl #2
   15358:	ldr	r3, [pc, #536]	; 15578 <dim_enter_array@@Base+0x8f4>
   1535c:	add	r4, r3, r4, lsl #4
   15360:	ldr	r2, [r4, #804]	; 0x324
   15364:	add	r3, sl, r2
   15368:	add	r3, r3, #37	; 0x25
   1536c:	lsl	r3, r3, #3
   15370:	ldr	r1, [pc, #524]	; 15584 <dim_enter_array@@Base+0x900>
   15374:	ldrd	r0, [r1, r3]
   15378:	cmp	r0, #1
   1537c:	sbcs	r3, r1, #0
   15380:	blt	15450 <dim_enter_array@@Base+0x7cc>
   15384:	ldr	r3, [pc, #504]	; 15584 <dim_enter_array@@Base+0x900>
   15388:	ldr	r1, [r3]
   1538c:	add	ip, r3, r1, lsl #3
   15390:	ldr	r0, [r3, r1, lsl #2]
   15394:	asr	r1, r0, #31
   15398:	strd	r0, [ip, #168]	; 0xa8
   1539c:	cmp	r2, #2
   153a0:	bmi	15400 <dim_enter_array@@Base+0x77c>
   153a4:	sub	ip, sl, #-1073741823	; 0xc0000001
   153a8:	add	ip, ip, r2
   153ac:	lsl	ip, ip, #2
   153b0:	add	ip, ip, #4
   153b4:	mov	lr, r3
   153b8:	add	ip, ip, r3
   153bc:	add	r0, sl, #20
   153c0:	add	r0, r0, r2
   153c4:	add	r0, r3, r0, lsl #3
   153c8:	add	r0, r0, #8
   153cc:	add	r3, sl, #1
   153d0:	add	lr, lr, r3, lsl #2
   153d4:	ldr	r3, [ip, #-4]!
   153d8:	asr	r5, r3, #31
   153dc:	ldr	r2, [r0]
   153e0:	ldr	r1, [r0, #4]
   153e4:	mul	r1, r3, r1
   153e8:	mla	r1, r2, r5, r1
   153ec:	umull	r2, r3, r2, r3
   153f0:	add	r3, r1, r3
   153f4:	strd	r2, [r0, #-8]!
   153f8:	cmp	ip, lr
   153fc:	bne	153d4 <dim_enter_array@@Base+0x750>
   15400:	cmp	sl, #1
   15404:	bmi	15450 <dim_enter_array@@Base+0x7cc>
   15408:	add	ip, sl, #21
   1540c:	ldr	r4, [pc, #368]	; 15584 <dim_enter_array@@Base+0x900>
   15410:	add	ip, r4, ip, lsl #3
   15414:	add	r4, r4, #168	; 0xa8
   15418:	add	sl, sl, #22
   1541c:	sub	lr, r4, #168	; 0xa8
   15420:	add	lr, lr, sl, lsl #3
   15424:	ldr	r1, [ip, #4]
   15428:	ldr	r0, [lr]
   1542c:	ldr	r3, [lr, #4]
   15430:	ldr	r2, [ip]
   15434:	mul	r3, r2, r3
   15438:	mla	r1, r0, r1, r3
   1543c:	umull	r2, r3, r2, r0
   15440:	add	r3, r1, r3
   15444:	strd	r2, [ip], #-8
   15448:	cmp	ip, r4
   1544c:	bne	15424 <dim_enter_array@@Base+0x7a0>
   15450:	add	sp, sp, #92	; 0x5c
   15454:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15458:	ldr	r8, [sp, #32]
   1545c:	add	r3, r4, r4, lsl #2
   15460:	ldr	r2, [pc, #272]	; 15578 <dim_enter_array@@Base+0x8f4>
   15464:	add	r3, r2, r3, lsl #4
   15468:	str	lr, [r3, #840]	; 0x348
   1546c:	cmp	fp, #0
   15470:	beq	154f0 <dim_enter_array@@Base+0x86c>
   15474:	add	r3, r8, #72	; 0x48
   15478:	ldr	r2, [pc, #260]	; 15584 <dim_enter_array@@Base+0x900>
   1547c:	add	r3, r3, r2
   15480:	add	r1, sl, #38	; 0x26
   15484:	add	r0, r1, r0
   15488:	add	r2, r2, r0, lsl #3
   1548c:	mov	r0, #0
   15490:	mov	r1, #0
   15494:	strd	r0, [r3], #8
   15498:	cmp	r3, r2
   1549c:	bne	15494 <dim_enter_array@@Base+0x810>
   154a0:	ldrd	r0, [sp, #16]
   154a4:	mov	r3, r1
   154a8:	cmp	r0, #1
   154ac:	sbcs	r3, r3, #0
   154b0:	blt	15354 <dim_enter_array@@Base+0x6d0>
   154b4:	ldr	ip, [pc, #200]	; 15584 <dim_enter_array@@Base+0x900>
   154b8:	add	r7, ip, sl, lsl #2
   154bc:	add	r6, sl, #38	; 0x26
   154c0:	add	r6, ip, r6, lsl #3
   154c4:	add	r3, r5, sl
   154c8:	add	ip, ip, r3, lsl #2
   154cc:	mov	lr, #0
   154d0:	mov	r9, r7
   154d4:	str	r6, [sp, #16]
   154d8:	mov	r6, sl
   154dc:	mov	sl, r0
   154e0:	mov	fp, r1
   154e4:	b	15330 <dim_enter_array@@Base+0x6ac>
   154e8:	cmp	fp, #0
   154ec:	bne	154a0 <dim_enter_array@@Base+0x81c>
   154f0:	ldr	ip, [pc, #140]	; 15584 <dim_enter_array@@Base+0x900>
   154f4:	add	r1, sl, #38	; 0x26
   154f8:	lsl	r1, r1, #3
   154fc:	add	r3, ip, sl, lsl #2
   15500:	ldr	r2, [r3, #4]
   15504:	asr	r7, r2, #31
   15508:	ldrd	r8, [sp, #24]
   1550c:	mul	r0, r2, r9
   15510:	mla	r0, r8, r7, r0
   15514:	umull	r2, r3, r2, r8
   15518:	add	r3, r0, r3
   1551c:	strd	r2, [ip, r1]
   15520:	cmp	r5, #1
   15524:	ble	15354 <dim_enter_array@@Base+0x6d0>
   15528:	add	r0, sl, #38	; 0x26
   1552c:	mov	lr, ip
   15530:	add	r0, ip, r0, lsl #3
   15534:	add	ip, sl, #2
   15538:	add	ip, lr, ip, lsl #2
   1553c:	add	r3, sl, #37	; 0x25
   15540:	add	r5, r3, r5
   15544:	add	lr, lr, r5, lsl #3
   15548:	ldr	r3, [r0]
   1554c:	ldr	r1, [r0, #4]
   15550:	ldr	r2, [ip], #4
   15554:	asr	r7, r2, #31
   15558:	mul	r1, r2, r1
   1555c:	mla	r1, r3, r7, r1
   15560:	umull	r2, r3, r2, r3
   15564:	add	r3, r1, r3
   15568:	strd	r2, [r0, #8]!
   1556c:	cmp	r0, lr
   15570:	bne	15548 <dim_enter_array@@Base+0x8c4>
   15574:	b	15354 <dim_enter_array@@Base+0x6d0>
   15578:	strdeq	ip, [r2], -r0
   1557c:	andeq	ip, r2, r4, lsl r5
   15580:	andeq	ip, r2, ip, ror #3
   15584:	strheq	sp, [r2], -r8
   15588:	andeq	sp, r2, r0, lsr #2
   1558c:	andeq	sl, r1, r4, lsl r0
   15590:	andeq	r0, r0, sp, asr r1
   15594:	andeq	sl, r1, r4, lsr r0
   15598:	andeq	sl, r1, r4, lsl #3
   1559c:	andeq	r0, r0, r2, lsl #3
   155a0:	muleq	r0, r2, r1
   155a4:	andeq	sl, r1, ip, lsr #2
   155a8:	andeq	r9, r1, ip, asr #27

000155ac <dim_leave_array@@Base>:
   155ac:	push	{r4, r5, r6, r7, r8, lr}
   155b0:	ldr	r3, [pc, #360]	; 15720 <dim_leave_array@@Base+0x174>
   155b4:	ldr	r8, [r3, #3360]	; 0xd20
   155b8:	cmp	r8, #0
   155bc:	blt	15608 <dim_leave_array@@Base+0x5c>
   155c0:	add	r3, r8, r8, lsl #2
   155c4:	ldr	r2, [pc, #340]	; 15720 <dim_leave_array@@Base+0x174>
   155c8:	add	r3, r2, r3, lsl #4
   155cc:	ldr	r5, [r3, #800]	; 0x320
   155d0:	ldr	r4, [r3, #804]	; 0x324
   155d4:	ldr	r2, [pc, #328]	; 15724 <dim_leave_array@@Base+0x178>
   155d8:	ldr	r3, [r2]
   155dc:	sub	r3, r3, r4
   155e0:	str	r3, [r2]
   155e4:	cmp	r4, #0
   155e8:	ble	15644 <dim_leave_array@@Base+0x98>
   155ec:	add	r7, r5, #18
   155f0:	add	r7, r2, r7, lsl #2
   155f4:	mov	r6, #0
   155f8:	add	r3, r8, r8, lsl #2
   155fc:	ldr	r8, [pc, #284]	; 15720 <dim_leave_array@@Base+0x174>
   15600:	add	r8, r8, r3, lsl #4
   15604:	b	1562c <dim_leave_array@@Base+0x80>
   15608:	ldr	r3, [pc, #280]	; 15728 <dim_leave_array@@Base+0x17c>
   1560c:	ldr	r2, [pc, #280]	; 1572c <dim_leave_array@@Base+0x180>
   15610:	ldr	r1, [pc, #280]	; 15730 <dim_leave_array@@Base+0x184>
   15614:	ldr	r0, [pc, #280]	; 15734 <dim_leave_array@@Base+0x188>
   15618:	bl	12654 <__assert_fail@plt>
   1561c:	add	r6, r6, #1
   15620:	ldr	r4, [r8, #804]	; 0x324
   15624:	cmp	r4, r6
   15628:	ble	15644 <dim_leave_array@@Base+0x98>
   1562c:	ldr	r3, [r7], #4
   15630:	cmp	r3, #0
   15634:	beq	1561c <dim_leave_array@@Base+0x70>
   15638:	ldr	r0, [r7, #32]
   1563c:	bl	12294 <free@plt>
   15640:	b	1561c <dim_leave_array@@Base+0x70>
   15644:	ldr	r3, [pc, #216]	; 15724 <dim_leave_array@@Base+0x178>
   15648:	mov	r2, #0
   1564c:	str	r2, [r3, #68]	; 0x44
   15650:	mvn	r2, #0
   15654:	str	r2, [r3, #104]	; 0x68
   15658:	ldr	r8, [r3]
   1565c:	cmp	r8, #0
   15660:	ble	156bc <dim_leave_array@@Base+0x110>
   15664:	add	r7, r3, #68	; 0x44
   15668:	mov	r2, #0
   1566c:	mvn	ip, #0
   15670:	mov	r1, r2
   15674:	mov	r0, r2
   15678:	mov	lr, r2
   1567c:	mov	r6, #1
   15680:	ldr	r3, [r7, #4]!
   15684:	cmp	r3, #0
   15688:	movne	ip, lr
   1568c:	movne	r2, r6
   15690:	movne	r1, r6
   15694:	movne	r0, r6
   15698:	add	lr, lr, #1
   1569c:	cmp	lr, r8
   156a0:	bne	15680 <dim_leave_array@@Base+0xd4>
   156a4:	cmp	r1, #0
   156a8:	ldrne	r3, [pc, #116]	; 15724 <dim_leave_array@@Base+0x178>
   156ac:	strne	r0, [r3, #68]	; 0x44
   156b0:	cmp	r2, #0
   156b4:	ldrne	r3, [pc, #104]	; 15724 <dim_leave_array@@Base+0x178>
   156b8:	strne	ip, [r3, #104]	; 0x68
   156bc:	add	r3, r5, r4
   156c0:	add	r3, r3, #37	; 0x25
   156c4:	lsl	r3, r3, #3
   156c8:	ldr	r2, [pc, #84]	; 15724 <dim_leave_array@@Base+0x178>
   156cc:	add	r2, r2, r3
   156d0:	ldrd	r2, [r2]
   156d4:	cmp	r2, #1
   156d8:	sbcs	r3, r3, #0
   156dc:	poplt	{r4, r5, r6, r7, r8, pc}
   156e0:	cmp	r5, #1
   156e4:	popmi	{r4, r5, r6, r7, r8, pc}
   156e8:	add	r4, r5, #21
   156ec:	ldr	r6, [pc, #48]	; 15724 <dim_leave_array@@Base+0x178>
   156f0:	add	r4, r6, r4, lsl #3
   156f4:	add	r6, r6, #168	; 0xa8
   156f8:	add	r5, r5, #22
   156fc:	sub	r3, r6, #168	; 0xa8
   15700:	add	r5, r3, r5, lsl #3
   15704:	ldrd	r2, [r5]
   15708:	ldrd	r0, [r4]
   1570c:	bl	19ae0 <main@@Base+0x1564>
   15710:	strd	r0, [r4], #-8
   15714:	cmp	r4, r6
   15718:	bne	15704 <dim_leave_array@@Base+0x158>
   1571c:	pop	{r4, r5, r6, r7, r8, pc}
   15720:	strdeq	ip, [r2], -r0
   15724:	strheq	sp, [r2], -r8
   15728:	andeq	sl, r1, r4, lsr #32
   1572c:	andeq	r0, r0, r3, asr #4
   15730:	andeq	sl, r1, r4, lsr r0
   15734:	andeq	sl, r1, r8, ror #2

00015738 <dim_record_field_available@@Base>:
   15738:	push	{r4, lr}
   1573c:	mov	r2, #0
   15740:	mov	r1, r2
   15744:	mov	r0, r2
   15748:	bl	142dc <print_debug_data@@Base+0x174>
   1574c:	pop	{r4, pc}

00015750 <codadump_filter_remove@@Base>:
   15750:	push	{r4, lr}
   15754:	subs	r4, r0, #0
   15758:	beq	157c8 <codadump_filter_remove@@Base+0x78>
   1575c:	ldr	r0, [r4]
   15760:	cmp	r0, #0
   15764:	popeq	{r4, pc}
   15768:	ldr	r3, [r0, #8]
   1576c:	cmp	r3, #0
   15770:	beq	1577c <codadump_filter_remove@@Base+0x2c>
   15774:	add	r0, r0, #8
   15778:	bl	15750 <codadump_filter_remove@@Base>
   1577c:	ldr	r0, [r4]
   15780:	ldr	r3, [r0, #4]
   15784:	cmp	r3, #0
   15788:	beq	15794 <codadump_filter_remove@@Base+0x44>
   1578c:	add	r0, r0, #4
   15790:	bl	15750 <codadump_filter_remove@@Base>
   15794:	ldr	r3, [r4]
   15798:	ldr	r0, [r3]
   1579c:	cmp	r0, #0
   157a0:	beq	157b4 <codadump_filter_remove@@Base+0x64>
   157a4:	bl	12294 <free@plt>
   157a8:	ldr	r3, [r4]
   157ac:	mov	r2, #0
   157b0:	str	r2, [r3]
   157b4:	ldr	r0, [r4]
   157b8:	bl	12294 <free@plt>
   157bc:	mov	r3, #0
   157c0:	str	r3, [r4]
   157c4:	pop	{r4, pc}
   157c8:	ldr	r3, [pc, #12]	; 157dc <codadump_filter_remove@@Base+0x8c>
   157cc:	mov	r2, #192	; 0xc0
   157d0:	ldr	r1, [pc, #8]	; 157e0 <codadump_filter_remove@@Base+0x90>
   157d4:	ldr	r0, [pc, #8]	; 157e4 <codadump_filter_remove@@Base+0x94>
   157d8:	bl	12654 <__assert_fail@plt>
   157dc:	andeq	sl, r1, r8, lsl #3
   157e0:	andeq	sl, r1, ip, lsl r2
   157e4:	andeq	sl, r1, r8, ror #4
   157e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   157ec:	sub	sp, sp, #12
   157f0:	subs	r5, r0, #0
   157f4:	beq	15878 <codadump_filter_remove@@Base+0x128>
   157f8:	mov	r6, r1
   157fc:	mov	r7, r2
   15800:	cmp	r1, #0
   15804:	beq	1588c <codadump_filter_remove@@Base+0x13c>
   15808:	cmp	r2, #0
   1580c:	beq	158a0 <codadump_filter_remove@@Base+0x150>
   15810:	ldrb	r2, [r5]
   15814:	sub	r3, r2, #9
   15818:	uxtb	r3, r3
   1581c:	cmp	r2, #32
   15820:	cmpne	r3, #1
   15824:	bhi	15840 <codadump_filter_remove@@Base+0xf0>
   15828:	ldrb	r2, [r5, #1]!
   1582c:	sub	r3, r2, #9
   15830:	uxtb	r3, r3
   15834:	cmp	r2, #32
   15838:	cmpne	r3, #1
   1583c:	bls	15828 <codadump_filter_remove@@Base+0xd8>
   15840:	ldrb	r3, [r5]
   15844:	cmp	r3, #0
   15848:	cmpne	r3, #59	; 0x3b
   1584c:	movne	r2, #1
   15850:	moveq	r2, #0
   15854:	and	r3, r3, #253	; 0xfd
   15858:	cmp	r3, #44	; 0x2c
   1585c:	moveq	r3, #0
   15860:	andne	r3, r2, #1
   15864:	cmp	r3, #0
   15868:	beq	15a54 <codadump_filter_remove@@Base+0x304>
   1586c:	add	r1, r5, #1
   15870:	mov	r8, #0
   15874:	b	158b8 <codadump_filter_remove@@Base+0x168>
   15878:	ldr	r3, [pc, #484]	; 15a64 <codadump_filter_remove@@Base+0x314>
   1587c:	mov	r2, #44	; 0x2c
   15880:	ldr	r1, [pc, #480]	; 15a68 <codadump_filter_remove@@Base+0x318>
   15884:	ldr	r0, [pc, #480]	; 15a6c <codadump_filter_remove@@Base+0x31c>
   15888:	bl	12654 <__assert_fail@plt>
   1588c:	ldr	r3, [pc, #464]	; 15a64 <codadump_filter_remove@@Base+0x314>
   15890:	mov	r2, #45	; 0x2d
   15894:	ldr	r1, [pc, #460]	; 15a68 <codadump_filter_remove@@Base+0x318>
   15898:	ldr	r0, [pc, #464]	; 15a70 <codadump_filter_remove@@Base+0x320>
   1589c:	bl	12654 <__assert_fail@plt>
   158a0:	ldr	r3, [pc, #444]	; 15a64 <codadump_filter_remove@@Base+0x314>
   158a4:	mov	r2, #46	; 0x2e
   158a8:	ldr	r1, [pc, #440]	; 15a68 <codadump_filter_remove@@Base+0x318>
   158ac:	ldr	r0, [pc, #448]	; 15a74 <codadump_filter_remove@@Base+0x324>
   158b0:	bl	12654 <__assert_fail@plt>
   158b4:	mov	r8, r4
   158b8:	add	r4, r8, #1
   158bc:	mov	r9, r4
   158c0:	mov	sl, r1
   158c4:	ldrb	r3, [r1], #1
   158c8:	cmp	r3, #0
   158cc:	cmpne	r3, #59	; 0x3b
   158d0:	movne	r2, #1
   158d4:	moveq	r2, #0
   158d8:	and	r3, r3, #253	; 0xfd
   158dc:	cmp	r3, #44	; 0x2c
   158e0:	moveq	r3, #0
   158e4:	andne	r3, r2, #1
   158e8:	cmp	r3, #0
   158ec:	bne	158b4 <codadump_filter_remove@@Base+0x164>
   158f0:	cmp	r4, #0
   158f4:	ble	15a54 <codadump_filter_remove@@Base+0x304>
   158f8:	mov	r0, #12
   158fc:	bl	123cc <malloc@plt>
   15900:	str	r0, [r6]
   15904:	cmp	r0, #0
   15908:	beq	159d0 <codadump_filter_remove@@Base+0x280>
   1590c:	ldr	fp, [r6]
   15910:	add	r8, r8, #2
   15914:	mov	r0, r8
   15918:	bl	123cc <malloc@plt>
   1591c:	str	r0, [fp]
   15920:	ldr	r3, [r6]
   15924:	ldr	r3, [r3]
   15928:	cmp	r3, #0
   1592c:	beq	159f4 <codadump_filter_remove@@Base+0x2a4>
   15930:	ldr	r3, [r6]
   15934:	mov	r2, r9
   15938:	mov	r1, r5
   1593c:	ldr	r0, [r3]
   15940:	bl	124c8 <strncpy@plt>
   15944:	ldr	r2, [r6]
   15948:	mov	r3, #0
   1594c:	str	r3, [r2, #4]
   15950:	ldr	r2, [r6]
   15954:	str	r3, [r2, #8]
   15958:	ldr	r3, [r6]
   1595c:	ldr	ip, [r3]
   15960:	sub	r3, r9, #1
   15964:	add	r1, ip, r3
   15968:	ldrb	r2, [ip, r3]
   1596c:	sub	r3, r2, #9
   15970:	uxtb	r3, r3
   15974:	cmp	r2, #32
   15978:	cmpne	r3, #1
   1597c:	bhi	15a18 <codadump_filter_remove@@Base+0x2c8>
   15980:	sub	r4, r4, #1
   15984:	mov	r0, r4
   15988:	ldrb	r2, [r1, #-1]!
   1598c:	sub	r3, r2, #9
   15990:	uxtb	r3, r3
   15994:	cmp	r2, #32
   15998:	cmpne	r3, #1
   1599c:	bls	15980 <codadump_filter_remove@@Base+0x230>
   159a0:	mov	r3, #0
   159a4:	strb	r3, [ip, r0]
   159a8:	ldrb	r3, [sl]
   159ac:	cmp	r3, #46	; 0x2e
   159b0:	beq	15a20 <codadump_filter_remove@@Base+0x2d0>
   159b4:	cmp	r3, #44	; 0x2c
   159b8:	cmpne	r3, #59	; 0x3b
   159bc:	addeq	r9, r9, #1
   159c0:	addeq	r5, r5, r9
   159c4:	streq	r5, [r7]
   159c8:	strne	sl, [r7]
   159cc:	b	15a5c <codadump_filter_remove@@Base+0x30c>
   159d0:	mov	r3, #69	; 0x45
   159d4:	str	r3, [sp]
   159d8:	ldr	r3, [pc, #136]	; 15a68 <codadump_filter_remove@@Base+0x318>
   159dc:	mov	r2, #12
   159e0:	ldr	r1, [pc, #144]	; 15a78 <codadump_filter_remove@@Base+0x328>
   159e4:	mvn	r0, #0
   159e8:	bl	1224c <coda_set_error@plt>
   159ec:	bl	1853c <handle_coda_error@@Base>
   159f0:	b	1590c <codadump_filter_remove@@Base+0x1bc>
   159f4:	mov	r3, #76	; 0x4c
   159f8:	str	r3, [sp]
   159fc:	ldr	r3, [pc, #100]	; 15a68 <codadump_filter_remove@@Base+0x318>
   15a00:	mov	r2, r8
   15a04:	ldr	r1, [pc, #112]	; 15a7c <codadump_filter_remove@@Base+0x32c>
   15a08:	mvn	r0, #0
   15a0c:	bl	1224c <coda_set_error@plt>
   15a10:	bl	1853c <handle_coda_error@@Base>
   15a14:	b	15930 <codadump_filter_remove@@Base+0x1e0>
   15a18:	mov	r0, r9
   15a1c:	b	159a0 <codadump_filter_remove@@Base+0x250>
   15a20:	ldr	r1, [r6]
   15a24:	add	r0, r9, #1
   15a28:	mov	r2, r7
   15a2c:	add	r1, r1, #4
   15a30:	add	r0, r5, r0
   15a34:	bl	157e8 <codadump_filter_remove@@Base+0x98>
   15a38:	ldr	r3, [r6]
   15a3c:	ldr	r3, [r3, #4]
   15a40:	cmp	r3, #0
   15a44:	bne	15a5c <codadump_filter_remove@@Base+0x30c>
   15a48:	mov	r0, r6
   15a4c:	bl	15750 <codadump_filter_remove@@Base>
   15a50:	b	15a5c <codadump_filter_remove@@Base+0x30c>
   15a54:	mov	r3, #0
   15a58:	str	r3, [r6]
   15a5c:	add	sp, sp, #12
   15a60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15a64:	andeq	sl, r1, r0, lsr #3
   15a68:	andeq	sl, r1, ip, lsl r2
   15a6c:	andeq	sl, r1, r8, ror r2
   15a70:	andeq	sl, r1, r8, ror #4
   15a74:	andeq	sl, r1, ip, lsl #5
   15a78:	andeq	r9, r1, ip, asr #27
   15a7c:	muleq	r1, ip, r2
   15a80:	push	{r4, r5, lr}
   15a84:	sub	sp, sp, #12
   15a88:	str	r1, [sp, #4]
   15a8c:	cmp	r0, #0
   15a90:	beq	15b00 <codadump_filter_remove@@Base+0x3b0>
   15a94:	ldr	r5, [sp, #4]
   15a98:	cmp	r5, #0
   15a9c:	beq	15af8 <codadump_filter_remove@@Base+0x3a8>
   15aa0:	ldr	r4, [r0]
   15aa4:	cmp	r4, #0
   15aa8:	streq	r5, [r0]
   15aac:	beq	15af8 <codadump_filter_remove@@Base+0x3a8>
   15ab0:	ldr	r1, [r5]
   15ab4:	ldr	r0, [r4]
   15ab8:	bl	12204 <strcmp@plt>
   15abc:	cmp	r0, #0
   15ac0:	bne	15b20 <codadump_filter_remove@@Base+0x3d0>
   15ac4:	ldr	r3, [r4, #4]
   15ac8:	cmp	r3, #0
   15acc:	beq	15af0 <codadump_filter_remove@@Base+0x3a0>
   15ad0:	ldr	r1, [r5, #4]
   15ad4:	cmp	r1, #0
   15ad8:	beq	15b14 <codadump_filter_remove@@Base+0x3c4>
   15adc:	add	r0, r4, #4
   15ae0:	bl	15a80 <codadump_filter_remove@@Base+0x330>
   15ae4:	mov	r2, #0
   15ae8:	ldr	r3, [sp, #4]
   15aec:	str	r2, [r3, #4]
   15af0:	add	r0, sp, #4
   15af4:	bl	15750 <codadump_filter_remove@@Base>
   15af8:	add	sp, sp, #12
   15afc:	pop	{r4, r5, pc}
   15b00:	ldr	r3, [pc, #56]	; 15b40 <codadump_filter_remove@@Base+0x3f0>
   15b04:	mov	r2, #117	; 0x75
   15b08:	ldr	r1, [pc, #52]	; 15b44 <codadump_filter_remove@@Base+0x3f4>
   15b0c:	ldr	r0, [pc, #52]	; 15b48 <codadump_filter_remove@@Base+0x3f8>
   15b10:	bl	12654 <__assert_fail@plt>
   15b14:	add	r0, r4, #4
   15b18:	bl	15750 <codadump_filter_remove@@Base>
   15b1c:	b	15af0 <codadump_filter_remove@@Base+0x3a0>
   15b20:	ldr	r3, [r4, #8]
   15b24:	cmp	r3, #0
   15b28:	streq	r5, [r4, #8]
   15b2c:	beq	15af8 <codadump_filter_remove@@Base+0x3a8>
   15b30:	mov	r1, r5
   15b34:	add	r0, r4, #8
   15b38:	bl	15a80 <codadump_filter_remove@@Base+0x330>
   15b3c:	b	15af8 <codadump_filter_remove@@Base+0x3a8>
   15b40:			; <UNDEFINED> instruction: 0x0001a1b0
   15b44:	andeq	sl, r1, ip, lsl r2
   15b48:	andeq	sl, r1, r8, ror #4

00015b4c <codadump_filter_create@@Base>:
   15b4c:	push	{r4, lr}
   15b50:	sub	sp, sp, #16
   15b54:	mov	r3, #0
   15b58:	str	r3, [sp, #12]
   15b5c:	str	r3, [sp, #4]
   15b60:	str	r0, [sp, #8]
   15b64:	cmp	r0, r3
   15b68:	beq	15bbc <codadump_filter_create@@Base+0x70>
   15b6c:	ldrb	r3, [r0]
   15b70:	cmp	r3, #0
   15b74:	beq	15bbc <codadump_filter_create@@Base+0x70>
   15b78:	mov	r4, #0
   15b7c:	add	r2, sp, #8
   15b80:	add	r1, sp, #4
   15b84:	bl	157e8 <codadump_filter_remove@@Base+0x98>
   15b88:	ldr	r1, [sp, #4]
   15b8c:	cmp	r1, #0
   15b90:	beq	15bb4 <codadump_filter_create@@Base+0x68>
   15b94:	add	r0, sp, #12
   15b98:	bl	15a80 <codadump_filter_remove@@Base+0x330>
   15b9c:	str	r4, [sp, #4]
   15ba0:	ldr	r0, [sp, #8]
   15ba4:	ldrb	r3, [r0]
   15ba8:	cmp	r3, #0
   15bac:	bne	15b7c <codadump_filter_create@@Base+0x30>
   15bb0:	b	15bbc <codadump_filter_create@@Base+0x70>
   15bb4:	add	r0, sp, #12
   15bb8:	bl	15750 <codadump_filter_remove@@Base>
   15bbc:	ldr	r0, [sp, #12]
   15bc0:	add	sp, sp, #16
   15bc4:	pop	{r4, pc}

00015bc8 <codadump_filter_get_fieldname@@Base>:
   15bc8:	cmp	r0, #0
   15bcc:	beq	15bd8 <codadump_filter_get_fieldname@@Base+0x10>
   15bd0:	ldr	r0, [r0]
   15bd4:	bx	lr
   15bd8:	push	{r4, lr}
   15bdc:	ldr	r3, [pc, #12]	; 15bf0 <codadump_filter_get_fieldname@@Base+0x28>
   15be0:	mov	r2, #216	; 0xd8
   15be4:	ldr	r1, [pc, #8]	; 15bf4 <codadump_filter_get_fieldname@@Base+0x2c>
   15be8:	ldr	r0, [pc, #8]	; 15bf8 <codadump_filter_get_fieldname@@Base+0x30>
   15bec:	bl	12654 <__assert_fail@plt>
   15bf0:			; <UNDEFINED> instruction: 0x0001a1bc
   15bf4:	andeq	sl, r1, ip, lsl r2
   15bf8:	andeq	sl, r1, r8, ror #4

00015bfc <codadump_filter_get_subfilter@@Base>:
   15bfc:	cmp	r0, #0
   15c00:	beq	15c0c <codadump_filter_get_subfilter@@Base+0x10>
   15c04:	ldr	r0, [r0, #4]
   15c08:	bx	lr
   15c0c:	push	{r4, lr}
   15c10:	ldr	r3, [pc, #12]	; 15c24 <codadump_filter_get_subfilter@@Base+0x28>
   15c14:	mov	r2, #223	; 0xdf
   15c18:	ldr	r1, [pc, #8]	; 15c28 <codadump_filter_get_subfilter@@Base+0x2c>
   15c1c:	ldr	r0, [pc, #8]	; 15c2c <codadump_filter_get_subfilter@@Base+0x30>
   15c20:	bl	12654 <__assert_fail@plt>
   15c24:	ldrdeq	sl, [r1], -ip
   15c28:	andeq	sl, r1, ip, lsl r2
   15c2c:	andeq	sl, r1, r8, ror #4

00015c30 <codadump_filter_get_next_filter@@Base>:
   15c30:	cmp	r0, #0
   15c34:	beq	15c40 <codadump_filter_get_next_filter@@Base+0x10>
   15c38:	ldr	r0, [r0, #8]
   15c3c:	bx	lr
   15c40:	push	{r4, lr}
   15c44:	ldr	r3, [pc, #12]	; 15c58 <codadump_filter_get_next_filter@@Base+0x28>
   15c48:	mov	r2, #230	; 0xe6
   15c4c:	ldr	r1, [pc, #8]	; 15c5c <codadump_filter_get_next_filter@@Base+0x2c>
   15c50:	ldr	r0, [pc, #8]	; 15c60 <codadump_filter_get_next_filter@@Base+0x30>
   15c54:	bl	12654 <__assert_fail@plt>
   15c58:	strdeq	sl, [r1], -ip
   15c5c:	andeq	sl, r1, ip, lsl r2
   15c60:	andeq	sl, r1, r8, ror #4
   15c64:	push	{r0, r1, r2, r3}
   15c68:	push	{lr}		; (str lr, [sp, #-4]!)
   15c6c:	sub	sp, sp, #12
   15c70:	add	r2, sp, #20
   15c74:	str	r2, [sp, #4]
   15c78:	ldr	r1, [sp, #16]
   15c7c:	ldr	r3, [pc, #20]	; 15c98 <codadump_filter_get_next_filter@@Base+0x68>
   15c80:	ldr	r0, [r3]
   15c84:	bl	12558 <vfprintf@plt>
   15c88:	add	sp, sp, #12
   15c8c:	pop	{lr}		; (ldr lr, [sp], #4)
   15c90:	add	sp, sp, #16
   15c94:	bx	lr
   15c98:	muleq	r2, r8, r0
   15c9c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15ca0:	subs	r5, r1, #0
   15ca4:	pople	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15ca8:	mov	r4, r0
   15cac:	add	r5, r0, r5
   15cb0:	ldr	r9, [pc, #204]	; 15d84 <codadump_filter_get_next_filter@@Base+0x154>
   15cb4:	ldr	fp, [pc, #204]	; 15d88 <codadump_filter_get_next_filter@@Base+0x158>
   15cb8:	ldr	sl, [pc, #204]	; 15d8c <codadump_filter_get_next_filter@@Base+0x15c>
   15cbc:	ldr	r8, [pc, #204]	; 15d90 <codadump_filter_get_next_filter@@Base+0x160>
   15cc0:	ldr	r7, [pc, #204]	; 15d94 <codadump_filter_get_next_filter@@Base+0x164>
   15cc4:	ldr	r6, [pc, #204]	; 15d98 <codadump_filter_get_next_filter@@Base+0x168>
   15cc8:	b	15d00 <codadump_filter_get_next_filter@@Base+0xd0>
   15ccc:	cmp	r1, #34	; 0x22
   15cd0:	beq	15d68 <codadump_filter_get_next_filter@@Base+0x138>
   15cd4:	cmp	r1, #92	; 0x5c
   15cd8:	beq	15d74 <codadump_filter_get_next_filter@@Base+0x144>
   15cdc:	cmp	r1, #13
   15ce0:	bne	15d28 <codadump_filter_get_next_filter@@Base+0xf8>
   15ce4:	mov	r0, r6
   15ce8:	bl	15c64 <codadump_filter_get_next_filter@@Base+0x34>
   15cec:	b	15cf8 <codadump_filter_get_next_filter@@Base+0xc8>
   15cf0:	ldr	r0, [pc, #164]	; 15d9c <codadump_filter_get_next_filter@@Base+0x16c>
   15cf4:	bl	15c64 <codadump_filter_get_next_filter@@Base+0x34>
   15cf8:	cmp	r4, r5
   15cfc:	beq	15d80 <codadump_filter_get_next_filter@@Base+0x150>
   15d00:	ldrb	r1, [r4], #1
   15d04:	cmp	r1, #12
   15d08:	beq	15d44 <codadump_filter_get_next_filter@@Base+0x114>
   15d0c:	bhi	15ccc <codadump_filter_get_next_filter@@Base+0x9c>
   15d10:	cmp	r1, #9
   15d14:	beq	15d5c <codadump_filter_get_next_filter@@Base+0x12c>
   15d18:	cmp	r1, #10
   15d1c:	beq	15d50 <codadump_filter_get_next_filter@@Base+0x120>
   15d20:	cmp	r1, #8
   15d24:	beq	15cf0 <codadump_filter_get_next_filter@@Base+0xc0>
   15d28:	sub	r3, r1, #32
   15d2c:	uxtb	r3, r3
   15d30:	cmp	r3, #94	; 0x5e
   15d34:	movls	r0, sl
   15d38:	movhi	r0, fp
   15d3c:	bl	15c64 <codadump_filter_get_next_filter@@Base+0x34>
   15d40:	b	15cf8 <codadump_filter_get_next_filter@@Base+0xc8>
   15d44:	mov	r0, r9
   15d48:	bl	15c64 <codadump_filter_get_next_filter@@Base+0x34>
   15d4c:	b	15cf8 <codadump_filter_get_next_filter@@Base+0xc8>
   15d50:	ldr	r0, [pc, #72]	; 15da0 <codadump_filter_get_next_filter@@Base+0x170>
   15d54:	bl	15c64 <codadump_filter_get_next_filter@@Base+0x34>
   15d58:	b	15cf8 <codadump_filter_get_next_filter@@Base+0xc8>
   15d5c:	ldr	r0, [pc, #64]	; 15da4 <codadump_filter_get_next_filter@@Base+0x174>
   15d60:	bl	15c64 <codadump_filter_get_next_filter@@Base+0x34>
   15d64:	b	15cf8 <codadump_filter_get_next_filter@@Base+0xc8>
   15d68:	mov	r0, r8
   15d6c:	bl	15c64 <codadump_filter_get_next_filter@@Base+0x34>
   15d70:	b	15cf8 <codadump_filter_get_next_filter@@Base+0xc8>
   15d74:	mov	r0, r7
   15d78:	bl	15c64 <codadump_filter_get_next_filter@@Base+0x34>
   15d7c:	b	15cf8 <codadump_filter_get_next_filter@@Base+0xc8>
   15d80:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15d84:	andeq	r9, r1, r0, lsr #28
   15d88:	ldrdeq	sl, [r1], -r4
   15d8c:	muleq	r1, ip, lr
   15d90:	ldrdeq	sl, [r1], -r0
   15d94:	andeq	r9, r1, r8, lsr #28
   15d98:	andeq	r9, r1, r4, lsr #28
   15d9c:	andeq	r9, r1, r0, lsl lr
   15da0:	andeq	r9, r1, r8, lsl lr
   15da4:	andeq	r9, r1, r4, lsl lr
   15da8:	push	{r4, r5, r6, r7, r8, lr}
   15dac:	sub	sp, sp, #72	; 0x48
   15db0:	mov	r4, r0
   15db4:	mov	r3, #0
   15db8:	str	r3, [sp, #64]	; 0x40
   15dbc:	ldr	r3, [pc, #2040]	; 165bc <codadump_filter_get_next_filter@@Base+0x98c>
   15dc0:	ldr	r3, [r3]
   15dc4:	cmp	r3, #0
   15dc8:	bne	15e0c <codadump_filter_get_next_filter@@Base+0x1dc>
   15dcc:	add	r1, sp, #68	; 0x44
   15dd0:	mov	r0, r4
   15dd4:	bl	12324 <coda_cursor_get_type_class@plt>
   15dd8:	cmp	r0, #0
   15ddc:	bne	15e6c <codadump_filter_get_next_filter@@Base+0x23c>
   15de0:	ldr	r3, [sp, #68]	; 0x44
   15de4:	cmp	r3, #6
   15de8:	ldrls	pc, [pc, r3, lsl #2]
   15dec:	b	15f34 <codadump_filter_get_next_filter@@Base+0x304>
   15df0:	andeq	r5, r1, r4, ror lr
   15df4:	andeq	r6, r1, ip, ror r0
   15df8:	andeq	r6, r1, r8, asr r1
   15dfc:	andeq	r6, r1, r8, asr r1
   15e00:	andeq	r6, r1, r8, asr r1
   15e04:	andeq	r6, r1, r8, asr r1
   15e08:	andeq	r6, r1, r4, lsl #9
   15e0c:	add	r1, sp, #64	; 0x40
   15e10:	bl	12318 <coda_cursor_has_attributes@plt>
   15e14:	cmp	r0, #0
   15e18:	bne	15e5c <codadump_filter_get_next_filter@@Base+0x22c>
   15e1c:	ldr	r3, [sp, #64]	; 0x40
   15e20:	cmp	r3, #0
   15e24:	beq	15dcc <codadump_filter_get_next_filter@@Base+0x19c>
   15e28:	ldr	r0, [pc, #1936]	; 165c0 <codadump_filter_get_next_filter@@Base+0x990>
   15e2c:	bl	15c64 <codadump_filter_get_next_filter@@Base+0x34>
   15e30:	mov	r0, r4
   15e34:	bl	12498 <coda_cursor_goto_attributes@plt>
   15e38:	cmp	r0, #0
   15e3c:	bne	15e64 <codadump_filter_get_next_filter@@Base+0x234>
   15e40:	mov	r0, r4
   15e44:	bl	15da8 <codadump_filter_get_next_filter@@Base+0x178>
   15e48:	mov	r0, r4
   15e4c:	bl	123fc <coda_cursor_goto_parent@plt>
   15e50:	ldr	r0, [pc, #1900]	; 165c4 <codadump_filter_get_next_filter@@Base+0x994>
   15e54:	bl	15c64 <codadump_filter_get_next_filter@@Base+0x34>
   15e58:	b	15dcc <codadump_filter_get_next_filter@@Base+0x19c>
   15e5c:	bl	1853c <handle_coda_error@@Base>
   15e60:	b	15e1c <codadump_filter_get_next_filter@@Base+0x1ec>
   15e64:	bl	1853c <handle_coda_error@@Base>
   15e68:	b	15e40 <codadump_filter_get_next_filter@@Base+0x210>
   15e6c:	bl	1853c <handle_coda_error@@Base>
   15e70:	b	15de0 <codadump_filter_get_next_filter@@Base+0x1b0>
   15e74:	ldr	r0, [pc, #1868]	; 165c8 <codadump_filter_get_next_filter@@Base+0x998>
   15e78:	bl	15c64 <codadump_filter_get_next_filter@@Base+0x34>
   15e7c:	add	r1, sp, #8
   15e80:	mov	r0, r4
   15e84:	bl	1227c <coda_cursor_get_num_elements@plt>
   15e88:	cmp	r0, #0
   15e8c:	bne	15f48 <codadump_filter_get_next_filter@@Base+0x318>
   15e90:	ldr	r3, [sp, #8]
   15e94:	cmp	r3, #0
   15e98:	ble	15f2c <codadump_filter_get_next_filter@@Base+0x2fc>
   15e9c:	add	r1, sp, #12
   15ea0:	mov	r0, r4
   15ea4:	bl	122dc <coda_cursor_get_type@plt>
   15ea8:	cmp	r0, #0
   15eac:	bne	15f50 <codadump_filter_get_next_filter@@Base+0x320>
   15eb0:	add	r1, sp, #16
   15eb4:	ldr	r0, [sp, #12]
   15eb8:	bl	124e0 <coda_type_get_record_union_status@plt>
   15ebc:	cmp	r0, #0
   15ec0:	bne	15f58 <codadump_filter_get_next_filter@@Base+0x328>
   15ec4:	ldr	r3, [sp, #16]
   15ec8:	cmp	r3, #0
   15ecc:	beq	15f78 <codadump_filter_get_next_filter@@Base+0x348>
   15ed0:	add	r1, sp, #20
   15ed4:	mov	r0, r4
   15ed8:	bl	125d0 <coda_cursor_get_available_union_field_index@plt>
   15edc:	cmp	r0, #0
   15ee0:	bne	15f60 <codadump_filter_get_next_filter@@Base+0x330>
   15ee4:	add	r2, sp, #32
   15ee8:	ldr	r1, [sp, #20]
   15eec:	ldr	r0, [sp, #12]
   15ef0:	bl	12618 <coda_type_get_record_field_name@plt>
   15ef4:	cmp	r0, #0
   15ef8:	bne	15f68 <codadump_filter_get_next_filter@@Base+0x338>
   15efc:	ldr	r1, [sp, #20]
   15f00:	mov	r0, r4
   15f04:	bl	1239c <coda_cursor_goto_record_field_by_index@plt>
   15f08:	cmp	r0, #0
   15f0c:	bne	15f70 <codadump_filter_get_next_filter@@Base+0x340>
   15f10:	ldr	r1, [sp, #32]
   15f14:	ldr	r0, [pc, #1712]	; 165cc <codadump_filter_get_next_filter@@Base+0x99c>
   15f18:	bl	15c64 <codadump_filter_get_next_filter@@Base+0x34>
   15f1c:	mov	r0, r4
   15f20:	bl	15da8 <codadump_filter_get_next_filter@@Base+0x178>
   15f24:	mov	r0, r4
   15f28:	bl	123fc <coda_cursor_goto_parent@plt>
   15f2c:	ldr	r0, [pc, #1692]	; 165d0 <codadump_filter_get_next_filter@@Base+0x9a0>
   15f30:	bl	15c64 <codadump_filter_get_next_filter@@Base+0x34>
   15f34:	ldr	r3, [sp, #64]	; 0x40
   15f38:	cmp	r3, #0
   15f3c:	bne	165b0 <codadump_filter_get_next_filter@@Base+0x980>
   15f40:	add	sp, sp, #72	; 0x48
   15f44:	pop	{r4, r5, r6, r7, r8, pc}
   15f48:	bl	1853c <handle_coda_error@@Base>
   15f4c:	b	15e90 <codadump_filter_get_next_filter@@Base+0x260>
   15f50:	bl	1853c <handle_coda_error@@Base>
   15f54:	b	15eb0 <codadump_filter_get_next_filter@@Base+0x280>
   15f58:	bl	1853c <handle_coda_error@@Base>
   15f5c:	b	15ec4 <codadump_filter_get_next_filter@@Base+0x294>
   15f60:	bl	1853c <handle_coda_error@@Base>
   15f64:	b	15ee4 <codadump_filter_get_next_filter@@Base+0x2b4>
   15f68:	bl	1853c <handle_coda_error@@Base>
   15f6c:	b	15efc <codadump_filter_get_next_filter@@Base+0x2cc>
   15f70:	bl	1853c <handle_coda_error@@Base>
   15f74:	b	15f10 <codadump_filter_get_next_filter@@Base+0x2e0>
   15f78:	mov	r0, r4
   15f7c:	bl	12390 <coda_cursor_goto_first_record_field@plt>
   15f80:	cmp	r0, #0
   15f84:	bne	15fb0 <codadump_filter_get_next_filter@@Base+0x380>
   15f88:	mov	r3, #0
   15f8c:	str	r3, [sp, #20]
   15f90:	ldr	r3, [sp, #8]
   15f94:	cmp	r3, #0
   15f98:	ble	16070 <codadump_filter_get_next_filter@@Base+0x440>
   15f9c:	mov	r1, #0
   15fa0:	mov	r5, #1
   15fa4:	ldr	r6, [pc, #1568]	; 165cc <codadump_filter_get_next_filter@@Base+0x99c>
   15fa8:	ldr	r7, [pc, #1572]	; 165d4 <codadump_filter_get_next_filter@@Base+0x9a4>
   15fac:	b	16010 <codadump_filter_get_next_filter@@Base+0x3e0>
   15fb0:	bl	1853c <handle_coda_error@@Base>
   15fb4:	b	15f88 <codadump_filter_get_next_filter@@Base+0x358>
   15fb8:	bl	1853c <handle_coda_error@@Base>
   15fbc:	b	16024 <codadump_filter_get_next_filter@@Base+0x3f4>
   15fc0:	mov	r0, r7
   15fc4:	bl	15c64 <codadump_filter_get_next_filter@@Base+0x34>
   15fc8:	b	16038 <codadump_filter_get_next_filter@@Base+0x408>
   15fcc:	ldr	r1, [sp, #24]
   15fd0:	mov	r0, r6
   15fd4:	bl	15c64 <codadump_filter_get_next_filter@@Base+0x34>
   15fd8:	mov	r0, r4
   15fdc:	bl	15da8 <codadump_filter_get_next_filter@@Base+0x178>
   15fe0:	mov	r5, r8
   15fe4:	ldr	r3, [sp, #8]
   15fe8:	sub	r3, r3, #1
   15fec:	ldr	r2, [sp, #20]
   15ff0:	cmp	r3, r2
   15ff4:	bgt	16058 <codadump_filter_get_next_filter@@Base+0x428>
   15ff8:	ldr	r1, [sp, #20]
   15ffc:	add	r1, r1, #1
   16000:	str	r1, [sp, #20]
   16004:	ldr	r3, [sp, #8]
   16008:	cmp	r3, r1
   1600c:	ble	16070 <codadump_filter_get_next_filter@@Base+0x440>
   16010:	add	r2, sp, #32
   16014:	ldr	r0, [sp, #12]
   16018:	bl	1221c <coda_type_get_record_field_hidden_status@plt>
   1601c:	cmp	r0, #0
   16020:	bne	15fb8 <codadump_filter_get_next_filter@@Base+0x388>
   16024:	ldr	r8, [sp, #32]
   16028:	cmp	r8, #0
   1602c:	bne	15fe4 <codadump_filter_get_next_filter@@Base+0x3b4>
   16030:	cmp	r5, #0
   16034:	beq	15fc0 <codadump_filter_get_next_filter@@Base+0x390>
   16038:	add	r2, sp, #24
   1603c:	ldr	r1, [sp, #20]
   16040:	ldr	r0, [sp, #12]
   16044:	bl	12618 <coda_type_get_record_field_name@plt>
   16048:	cmp	r0, #0
   1604c:	beq	15fcc <codadump_filter_get_next_filter@@Base+0x39c>
   16050:	bl	1853c <handle_coda_error@@Base>
   16054:	b	15fcc <codadump_filter_get_next_filter@@Base+0x39c>
   16058:	mov	r0, r4
   1605c:	bl	12588 <coda_cursor_goto_next_record_field@plt>
   16060:	cmp	r0, #0
   16064:	beq	15ff8 <codadump_filter_get_next_filter@@Base+0x3c8>
   16068:	bl	1853c <handle_coda_error@@Base>
   1606c:	b	15ff8 <codadump_filter_get_next_filter@@Base+0x3c8>
   16070:	mov	r0, r4
   16074:	bl	123fc <coda_cursor_goto_parent@plt>
   16078:	b	15f2c <codadump_filter_get_next_filter@@Base+0x2fc>
   1607c:	ldr	r0, [pc, #1364]	; 165d8 <codadump_filter_get_next_filter@@Base+0x9a8>
   16080:	bl	15c64 <codadump_filter_get_next_filter@@Base+0x34>
   16084:	add	r2, sp, #32
   16088:	add	r1, sp, #24
   1608c:	mov	r0, r4
   16090:	bl	12528 <coda_cursor_get_array_dim@plt>
   16094:	cmp	r0, #0
   16098:	bne	160f0 <codadump_filter_get_next_filter@@Base+0x4c0>
   1609c:	ldr	r1, [sp, #24]
   160a0:	cmp	r1, #0
   160a4:	blt	1614c <codadump_filter_get_next_filter@@Base+0x51c>
   160a8:	ble	160f8 <codadump_filter_get_next_filter@@Base+0x4c8>
   160ac:	add	r3, sp, #32
   160b0:	add	r1, r3, r1, lsl #2
   160b4:	mov	r5, #1
   160b8:	ldr	r2, [r3], #4
   160bc:	mul	r5, r2, r5
   160c0:	cmp	r3, r1
   160c4:	bne	160b8 <codadump_filter_get_next_filter@@Base+0x488>
   160c8:	cmp	r5, #0
   160cc:	ble	1614c <codadump_filter_get_next_filter@@Base+0x51c>
   160d0:	mov	r0, r4
   160d4:	bl	1236c <coda_cursor_goto_first_array_element@plt>
   160d8:	cmp	r0, #0
   160dc:	bne	16100 <codadump_filter_get_next_filter@@Base+0x4d0>
   160e0:	mov	r6, #0
   160e4:	sub	r7, r5, #1
   160e8:	ldr	r8, [pc, #1252]	; 165d4 <codadump_filter_get_next_filter@@Base+0x9a4>
   160ec:	b	16114 <codadump_filter_get_next_filter@@Base+0x4e4>
   160f0:	bl	1853c <handle_coda_error@@Base>
   160f4:	b	1609c <codadump_filter_get_next_filter@@Base+0x46c>
   160f8:	mov	r5, #1
   160fc:	b	160d0 <codadump_filter_get_next_filter@@Base+0x4a0>
   16100:	bl	1853c <handle_coda_error@@Base>
   16104:	b	160e0 <codadump_filter_get_next_filter@@Base+0x4b0>
   16108:	add	r6, r6, #1
   1610c:	cmp	r5, r6
   16110:	ble	16144 <codadump_filter_get_next_filter@@Base+0x514>
   16114:	mov	r0, r4
   16118:	bl	15da8 <codadump_filter_get_next_filter@@Base+0x178>
   1611c:	cmp	r7, r6
   16120:	ble	16108 <codadump_filter_get_next_filter@@Base+0x4d8>
   16124:	mov	r0, r8
   16128:	bl	15c64 <codadump_filter_get_next_filter@@Base+0x34>
   1612c:	mov	r0, r4
   16130:	bl	12468 <coda_cursor_goto_next_array_element@plt>
   16134:	cmp	r0, #0
   16138:	beq	16108 <codadump_filter_get_next_filter@@Base+0x4d8>
   1613c:	bl	1853c <handle_coda_error@@Base>
   16140:	b	16108 <codadump_filter_get_next_filter@@Base+0x4d8>
   16144:	mov	r0, r4
   16148:	bl	123fc <coda_cursor_goto_parent@plt>
   1614c:	ldr	r0, [pc, #1160]	; 165dc <codadump_filter_get_next_filter@@Base+0x9ac>
   16150:	bl	15c64 <codadump_filter_get_next_filter@@Base+0x34>
   16154:	b	15f34 <codadump_filter_get_next_filter@@Base+0x304>
   16158:	add	r1, sp, #20
   1615c:	mov	r0, r4
   16160:	bl	123c0 <coda_cursor_get_read_type@plt>
   16164:	cmp	r0, #0
   16168:	bne	161b8 <codadump_filter_get_next_filter@@Base+0x588>
   1616c:	ldr	r3, [sp, #20]
   16170:	add	r3, r3, #1
   16174:	cmp	r3, #13
   16178:	ldrls	pc, [pc, r3, lsl #2]
   1617c:	b	15f34 <codadump_filter_get_next_filter@@Base+0x304>
   16180:	andeq	r6, r1, r8, ror r4
   16184:	andeq	r6, r1, r8, ror r3
   16188:	andeq	r6, r1, r4, lsr #7
   1618c:	andeq	r6, r1, r8, ror r3
   16190:	andeq	r6, r1, r4, lsr #7
   16194:	andeq	r6, r1, r8, ror r3
   16198:	andeq	r6, r1, r4, lsr #7
   1619c:	ldrdeq	r6, [r1], -r0
   161a0:	andeq	r6, r1, r8, lsl #8
   161a4:	andeq	r6, r1, r0, asr #8
   161a8:	andeq	r6, r1, r0, asr #8
   161ac:	andeq	r6, r1, r0, asr #3
   161b0:	andeq	r6, r1, r0, lsl #4
   161b4:	andeq	r6, r1, ip, lsr #5
   161b8:	bl	1853c <handle_coda_error@@Base>
   161bc:	b	1616c <codadump_filter_get_next_filter@@Base+0x53c>
   161c0:	add	r1, sp, #32
   161c4:	mov	r0, r4
   161c8:	bl	124a4 <coda_cursor_read_char@plt>
   161cc:	cmp	r0, #0
   161d0:	bne	161f8 <codadump_filter_get_next_filter@@Base+0x5c8>
   161d4:	ldr	r4, [pc, #1028]	; 165e0 <codadump_filter_get_next_filter@@Base+0x9b0>
   161d8:	mov	r0, r4
   161dc:	bl	15c64 <codadump_filter_get_next_filter@@Base+0x34>
   161e0:	mov	r1, #1
   161e4:	add	r0, sp, #32
   161e8:	bl	15c9c <codadump_filter_get_next_filter@@Base+0x6c>
   161ec:	mov	r0, r4
   161f0:	bl	15c64 <codadump_filter_get_next_filter@@Base+0x34>
   161f4:	b	15f34 <codadump_filter_get_next_filter@@Base+0x304>
   161f8:	bl	1853c <handle_coda_error@@Base>
   161fc:	b	161d4 <codadump_filter_get_next_filter@@Base+0x5a4>
   16200:	add	r1, sp, #32
   16204:	mov	r0, r4
   16208:	bl	1242c <coda_cursor_get_string_length@plt>
   1620c:	cmp	r0, #0
   16210:	bne	16274 <codadump_filter_get_next_filter@@Base+0x644>
   16214:	ldr	r0, [sp, #32]
   16218:	add	r0, r0, #1
   1621c:	bl	123cc <malloc@plt>
   16220:	subs	r5, r0, #0
   16224:	beq	1627c <codadump_filter_get_next_filter@@Base+0x64c>
   16228:	ldr	r2, [sp, #32]
   1622c:	add	r2, r2, #1
   16230:	mov	r1, r5
   16234:	mov	r0, r4
   16238:	bl	123f0 <coda_cursor_read_string@plt>
   1623c:	cmp	r0, #0
   16240:	bne	162a4 <codadump_filter_get_next_filter@@Base+0x674>
   16244:	ldr	r4, [pc, #916]	; 165e0 <codadump_filter_get_next_filter@@Base+0x9b0>
   16248:	mov	r0, r4
   1624c:	bl	15c64 <codadump_filter_get_next_filter@@Base+0x34>
   16250:	ldr	r1, [sp, #32]
   16254:	mov	r0, r5
   16258:	bl	15c9c <codadump_filter_get_next_filter@@Base+0x6c>
   1625c:	ldr	r1, [sp, #32]
   16260:	mov	r0, r4
   16264:	bl	15c64 <codadump_filter_get_next_filter@@Base+0x34>
   16268:	mov	r0, r5
   1626c:	bl	12294 <free@plt>
   16270:	b	15f34 <codadump_filter_get_next_filter@@Base+0x304>
   16274:	bl	1853c <handle_coda_error@@Base>
   16278:	b	16214 <codadump_filter_get_next_filter@@Base+0x5e4>
   1627c:	ldr	r3, [pc, #864]	; 165e4 <codadump_filter_get_next_filter@@Base+0x9b4>
   16280:	str	r3, [sp]
   16284:	ldr	r3, [pc, #860]	; 165e8 <codadump_filter_get_next_filter@@Base+0x9b8>
   16288:	ldr	r2, [sp, #32]
   1628c:	add	r2, r2, #1
   16290:	ldr	r1, [pc, #852]	; 165ec <codadump_filter_get_next_filter@@Base+0x9bc>
   16294:	mvn	r0, #0
   16298:	bl	1224c <coda_set_error@plt>
   1629c:	bl	1853c <handle_coda_error@@Base>
   162a0:	b	16228 <codadump_filter_get_next_filter@@Base+0x5f8>
   162a4:	bl	1853c <handle_coda_error@@Base>
   162a8:	b	16244 <codadump_filter_get_next_filter@@Base+0x614>
   162ac:	add	r1, sp, #32
   162b0:	mov	r0, r4
   162b4:	bl	125ac <coda_cursor_get_bit_size@plt>
   162b8:	cmp	r0, #0
   162bc:	bne	16344 <codadump_filter_get_next_filter@@Base+0x714>
   162c0:	ldrd	r0, [sp, #32]
   162c4:	and	r2, r0, #7
   162c8:	mov	r3, #0
   162cc:	orrs	r3, r2, r3
   162d0:	movne	ip, #1
   162d4:	moveq	ip, #0
   162d8:	lsr	r6, r0, #3
   162dc:	orr	r6, r6, r1, lsl #29
   162e0:	adds	r6, r6, ip
   162e4:	mov	r0, r6
   162e8:	bl	123cc <malloc@plt>
   162ec:	subs	r5, r0, #0
   162f0:	beq	1634c <codadump_filter_get_next_filter@@Base+0x71c>
   162f4:	ldrd	r2, [sp, #32]
   162f8:	strd	r2, [sp]
   162fc:	mov	r2, #0
   16300:	mov	r3, #0
   16304:	mov	r1, r5
   16308:	mov	r0, r4
   1630c:	bl	1263c <coda_cursor_read_bits@plt>
   16310:	cmp	r0, #0
   16314:	bne	16370 <codadump_filter_get_next_filter@@Base+0x740>
   16318:	ldr	r4, [pc, #704]	; 165e0 <codadump_filter_get_next_filter@@Base+0x9b0>
   1631c:	mov	r0, r4
   16320:	bl	15c64 <codadump_filter_get_next_filter@@Base+0x34>
   16324:	mov	r1, r6
   16328:	mov	r0, r5
   1632c:	bl	15c9c <codadump_filter_get_next_filter@@Base+0x6c>
   16330:	mov	r0, r4
   16334:	bl	15c64 <codadump_filter_get_next_filter@@Base+0x34>
   16338:	mov	r0, r5
   1633c:	bl	12294 <free@plt>
   16340:	b	15f34 <codadump_filter_get_next_filter@@Base+0x304>
   16344:	bl	1853c <handle_coda_error@@Base>
   16348:	b	162c0 <codadump_filter_get_next_filter@@Base+0x690>
   1634c:	ldr	r3, [pc, #668]	; 165f0 <codadump_filter_get_next_filter@@Base+0x9c0>
   16350:	str	r3, [sp]
   16354:	ldr	r3, [pc, #652]	; 165e8 <codadump_filter_get_next_filter@@Base+0x9b8>
   16358:	mov	r2, r6
   1635c:	ldr	r1, [pc, #648]	; 165ec <codadump_filter_get_next_filter@@Base+0x9bc>
   16360:	mvn	r0, #0
   16364:	bl	1224c <coda_set_error@plt>
   16368:	bl	1853c <handle_coda_error@@Base>
   1636c:	b	162f4 <codadump_filter_get_next_filter@@Base+0x6c4>
   16370:	bl	1853c <handle_coda_error@@Base>
   16374:	b	16318 <codadump_filter_get_next_filter@@Base+0x6e8>
   16378:	add	r1, sp, #32
   1637c:	mov	r0, r4
   16380:	bl	125dc <coda_cursor_read_int32@plt>
   16384:	cmp	r0, #0
   16388:	bne	1639c <codadump_filter_get_next_filter@@Base+0x76c>
   1638c:	ldr	r1, [sp, #32]
   16390:	ldr	r0, [pc, #604]	; 165f4 <codadump_filter_get_next_filter@@Base+0x9c4>
   16394:	bl	15c64 <codadump_filter_get_next_filter@@Base+0x34>
   16398:	b	15f34 <codadump_filter_get_next_filter@@Base+0x304>
   1639c:	bl	1853c <handle_coda_error@@Base>
   163a0:	b	1638c <codadump_filter_get_next_filter@@Base+0x75c>
   163a4:	add	r1, sp, #32
   163a8:	mov	r0, r4
   163ac:	bl	122b8 <coda_cursor_read_uint32@plt>
   163b0:	cmp	r0, #0
   163b4:	bne	163c8 <codadump_filter_get_next_filter@@Base+0x798>
   163b8:	ldr	r1, [sp, #32]
   163bc:	ldr	r0, [pc, #564]	; 165f8 <codadump_filter_get_next_filter@@Base+0x9c8>
   163c0:	bl	15c64 <codadump_filter_get_next_filter@@Base+0x34>
   163c4:	b	15f34 <codadump_filter_get_next_filter@@Base+0x304>
   163c8:	bl	1853c <handle_coda_error@@Base>
   163cc:	b	163b8 <codadump_filter_get_next_filter@@Base+0x788>
   163d0:	add	r1, sp, #24
   163d4:	mov	r0, r4
   163d8:	bl	1254c <coda_cursor_read_int64@plt>
   163dc:	cmp	r0, #0
   163e0:	bne	16400 <codadump_filter_get_next_filter@@Base+0x7d0>
   163e4:	add	r2, sp, #32
   163e8:	ldrd	r0, [sp, #24]
   163ec:	bl	12648 <coda_str64@plt>
   163f0:	add	r1, sp, #32
   163f4:	ldr	r0, [pc, #512]	; 165fc <codadump_filter_get_next_filter@@Base+0x9cc>
   163f8:	bl	15c64 <codadump_filter_get_next_filter@@Base+0x34>
   163fc:	b	15f34 <codadump_filter_get_next_filter@@Base+0x304>
   16400:	bl	1853c <handle_coda_error@@Base>
   16404:	b	163e4 <codadump_filter_get_next_filter@@Base+0x7b4>
   16408:	add	r1, sp, #24
   1640c:	mov	r0, r4
   16410:	bl	12438 <coda_cursor_read_uint64@plt>
   16414:	cmp	r0, #0
   16418:	bne	16438 <codadump_filter_get_next_filter@@Base+0x808>
   1641c:	add	r2, sp, #32
   16420:	ldrd	r0, [sp, #24]
   16424:	bl	12288 <coda_str64u@plt>
   16428:	add	r1, sp, #32
   1642c:	ldr	r0, [pc, #456]	; 165fc <codadump_filter_get_next_filter@@Base+0x9cc>
   16430:	bl	15c64 <codadump_filter_get_next_filter@@Base+0x34>
   16434:	b	15f34 <codadump_filter_get_next_filter@@Base+0x304>
   16438:	bl	1853c <handle_coda_error@@Base>
   1643c:	b	1641c <codadump_filter_get_next_filter@@Base+0x7ec>
   16440:	add	r1, sp, #32
   16444:	mov	r0, r4
   16448:	bl	12444 <coda_cursor_read_double@plt>
   1644c:	cmp	r0, #0
   16450:	bne	16470 <codadump_filter_get_next_filter@@Base+0x840>
   16454:	ldr	r3, [sp, #20]
   16458:	cmp	r3, #8
   1645c:	ldrd	r2, [sp, #32]
   16460:	ldreq	r0, [pc, #408]	; 16600 <codadump_filter_get_next_filter@@Base+0x9d0>
   16464:	ldrne	r0, [pc, #408]	; 16604 <codadump_filter_get_next_filter@@Base+0x9d4>
   16468:	bl	15c64 <codadump_filter_get_next_filter@@Base+0x34>
   1646c:	b	15f34 <codadump_filter_get_next_filter@@Base+0x304>
   16470:	bl	1853c <handle_coda_error@@Base>
   16474:	b	16454 <codadump_filter_get_next_filter@@Base+0x824>
   16478:	ldr	r0, [pc, #392]	; 16608 <codadump_filter_get_next_filter@@Base+0x9d8>
   1647c:	bl	15c64 <codadump_filter_get_next_filter@@Base+0x34>
   16480:	b	15f34 <codadump_filter_get_next_filter@@Base+0x304>
   16484:	add	r1, sp, #20
   16488:	mov	r0, r4
   1648c:	bl	12360 <coda_cursor_get_special_type@plt>
   16490:	cmp	r0, #0
   16494:	bne	164b8 <codadump_filter_get_next_filter@@Base+0x888>
   16498:	ldr	r3, [sp, #20]
   1649c:	cmp	r3, #3
   164a0:	ldrls	pc, [pc, r3, lsl #2]
   164a4:	b	15f34 <codadump_filter_get_next_filter@@Base+0x304>
   164a8:	andeq	r6, r1, r0, asr #9
   164ac:	andeq	r6, r1, ip, asr #9
   164b0:	strdeq	r6, [r1], -r8
   164b4:	andeq	r6, r1, r8, ror r5
   164b8:	bl	1853c <handle_coda_error@@Base>
   164bc:	b	16498 <codadump_filter_get_next_filter@@Base+0x868>
   164c0:	ldr	r0, [pc, #320]	; 16608 <codadump_filter_get_next_filter@@Base+0x9d8>
   164c4:	bl	15c64 <codadump_filter_get_next_filter@@Base+0x34>
   164c8:	b	15f34 <codadump_filter_get_next_filter@@Base+0x304>
   164cc:	add	r1, sp, #32
   164d0:	mov	r0, r4
   164d4:	bl	12444 <coda_cursor_read_double@plt>
   164d8:	cmp	r0, #0
   164dc:	bne	164f0 <codadump_filter_get_next_filter@@Base+0x8c0>
   164e0:	ldrd	r2, [sp, #32]
   164e4:	ldr	r0, [pc, #280]	; 16604 <codadump_filter_get_next_filter@@Base+0x9d4>
   164e8:	bl	15c64 <codadump_filter_get_next_filter@@Base+0x34>
   164ec:	b	15f34 <codadump_filter_get_next_filter@@Base+0x304>
   164f0:	bl	1853c <handle_coda_error@@Base>
   164f4:	b	164e0 <codadump_filter_get_next_filter@@Base+0x8b0>
   164f8:	add	r1, sp, #24
   164fc:	mov	r0, r4
   16500:	bl	12444 <coda_cursor_read_double@plt>
   16504:	cmp	r0, #0
   16508:	bne	1653c <codadump_filter_get_next_filter@@Base+0x90c>
   1650c:	vldr	d0, [sp, #24]
   16510:	bl	12450 <coda_isNaN@plt>
   16514:	cmp	r0, #0
   16518:	bne	1652c <codadump_filter_get_next_filter@@Base+0x8fc>
   1651c:	vldr	d0, [sp, #24]
   16520:	bl	122f4 <coda_isInf@plt>
   16524:	cmp	r0, #0
   16528:	beq	16544 <codadump_filter_get_next_filter@@Base+0x914>
   1652c:	ldrd	r2, [sp, #24]
   16530:	ldr	r0, [pc, #204]	; 16604 <codadump_filter_get_next_filter@@Base+0x9d4>
   16534:	bl	15c64 <codadump_filter_get_next_filter@@Base+0x34>
   16538:	b	15f34 <codadump_filter_get_next_filter@@Base+0x304>
   1653c:	bl	1853c <handle_coda_error@@Base>
   16540:	b	1650c <codadump_filter_get_next_filter@@Base+0x8dc>
   16544:	add	r1, sp, #32
   16548:	ldr	r0, [pc, #188]	; 1660c <codadump_filter_get_next_filter@@Base+0x9dc>
   1654c:	vldr	d0, [sp, #24]
   16550:	bl	12270 <coda_time_double_to_string@plt>
   16554:	cmp	r0, #0
   16558:	beq	16568 <codadump_filter_get_next_filter@@Base+0x938>
   1655c:	ldr	r0, [pc, #172]	; 16610 <codadump_filter_get_next_filter@@Base+0x9e0>
   16560:	bl	15c64 <codadump_filter_get_next_filter@@Base+0x34>
   16564:	b	15f34 <codadump_filter_get_next_filter@@Base+0x304>
   16568:	add	r1, sp, #32
   1656c:	ldr	r0, [pc, #160]	; 16614 <codadump_filter_get_next_filter@@Base+0x9e4>
   16570:	bl	15c64 <codadump_filter_get_next_filter@@Base+0x34>
   16574:	b	15f34 <codadump_filter_get_next_filter@@Base+0x304>
   16578:	add	r2, sp, #32
   1657c:	add	r1, sp, #24
   16580:	mov	r0, r4
   16584:	bl	124ec <coda_cursor_read_complex_double_split@plt>
   16588:	cmp	r0, #0
   1658c:	bne	165a8 <codadump_filter_get_next_filter@@Base+0x978>
   16590:	ldrd	r2, [sp, #32]
   16594:	strd	r2, [sp]
   16598:	ldrd	r2, [sp, #24]
   1659c:	ldr	r0, [pc, #116]	; 16618 <codadump_filter_get_next_filter@@Base+0x9e8>
   165a0:	bl	15c64 <codadump_filter_get_next_filter@@Base+0x34>
   165a4:	b	15f34 <codadump_filter_get_next_filter@@Base+0x304>
   165a8:	bl	1853c <handle_coda_error@@Base>
   165ac:	b	16590 <codadump_filter_get_next_filter@@Base+0x960>
   165b0:	ldr	r0, [pc, #24]	; 165d0 <codadump_filter_get_next_filter@@Base+0x9a0>
   165b4:	bl	15c64 <codadump_filter_get_next_filter@@Base+0x34>
   165b8:	b	15f40 <codadump_filter_get_next_filter@@Base+0x310>
   165bc:	andeq	ip, r2, r8, asr #3
   165c0:	ldrdeq	sl, [r1], -ip
   165c4:	andeq	sl, r1, r8, ror #5
   165c8:	strdeq	sl, [r1], -r4
   165cc:	strdeq	sl, [r1], -r8
   165d0:	andeq	sl, r1, r0, lsl #6
   165d4:	andeq	r9, r1, r8, lsr #30
   165d8:	andeq	sl, r1, r4, lsl #6
   165dc:	andeq	sl, r1, r0, asr r4
   165e0:	andeq	sl, r1, r8, asr r4
   165e4:	andeq	r0, r0, pc, lsr #2
   165e8:	andeq	sl, r1, r8, lsl #6
   165ec:	andeq	r9, r1, ip, asr #27
   165f0:	andeq	r0, r0, lr, asr #2
   165f4:	andeq	sl, r1, ip, asr #7
   165f8:	andeq	r9, r1, r4, lsr lr
   165fc:	andeq	r9, r1, r8, asr #30
   16600:	andeq	r9, r1, r8, lsr lr
   16604:	andeq	r9, r1, r0, asr #28
   16608:	andeq	sl, r1, r4, asr r3
   1660c:	andeq	sl, r1, ip, asr r3
   16610:	andeq	sl, r1, ip, ror r3
   16614:	andeq	r9, r1, r4, lsl #28
   16618:	muleq	r1, r8, r3

0001661c <print_json_data@@Base>:
   1661c:	push	{r4, lr}
   16620:	sub	sp, sp, #528	; 0x210
   16624:	ldr	r3, [pc, #204]	; 166f8 <print_json_data@@Base+0xdc>
   16628:	str	r0, [r3]
   1662c:	add	r1, sp, #524	; 0x20c
   16630:	ldr	r3, [pc, #196]	; 166fc <print_json_data@@Base+0xe0>
   16634:	ldr	r0, [r3]
   16638:	bl	12258 <coda_open@plt>
   1663c:	cmp	r0, #0
   16640:	bne	166a0 <print_json_data@@Base+0x84>
   16644:	ldr	r1, [sp, #524]	; 0x20c
   16648:	mov	r0, sp
   1664c:	bl	12384 <coda_cursor_set_product@plt>
   16650:	cmp	r0, #0
   16654:	bne	166e8 <print_json_data@@Base+0xcc>
   16658:	ldr	r3, [pc, #160]	; 16700 <print_json_data@@Base+0xe4>
   1665c:	ldr	r1, [r3]
   16660:	cmp	r1, #0
   16664:	beq	16678 <print_json_data@@Base+0x5c>
   16668:	mov	r0, sp
   1666c:	bl	12564 <coda_cursor_goto@plt>
   16670:	cmp	r0, #0
   16674:	bne	166f0 <print_json_data@@Base+0xd4>
   16678:	mov	r0, #0
   1667c:	bl	121f8 <coda_set_option_perform_boundary_checks@plt>
   16680:	mov	r0, sp
   16684:	bl	15da8 <codadump_filter_get_next_filter@@Base+0x178>
   16688:	ldr	r0, [pc, #116]	; 16704 <print_json_data@@Base+0xe8>
   1668c:	bl	15c64 <codadump_filter_get_next_filter@@Base+0x34>
   16690:	ldr	r0, [sp, #524]	; 0x20c
   16694:	bl	12540 <coda_close@plt>
   16698:	add	sp, sp, #528	; 0x210
   1669c:	pop	{r4, pc}
   166a0:	bl	12600 <coda_get_errno@plt>
   166a4:	ldr	r3, [r0]
   166a8:	cmn	r3, #21
   166ac:	beq	166b8 <print_json_data@@Base+0x9c>
   166b0:	bl	1853c <handle_coda_error@@Base>
   166b4:	b	16644 <print_json_data@@Base+0x28>
   166b8:	mov	r0, #0
   166bc:	bl	122a0 <coda_set_option_use_mmap@plt>
   166c0:	add	r1, sp, #524	; 0x20c
   166c4:	ldr	r3, [pc, #48]	; 166fc <print_json_data@@Base+0xe0>
   166c8:	ldr	r0, [r3]
   166cc:	bl	12258 <coda_open@plt>
   166d0:	mov	r4, r0
   166d4:	mov	r0, #1
   166d8:	bl	122a0 <coda_set_option_use_mmap@plt>
   166dc:	cmp	r4, #0
   166e0:	bne	166b0 <print_json_data@@Base+0x94>
   166e4:	b	16644 <print_json_data@@Base+0x28>
   166e8:	bl	1853c <handle_coda_error@@Base>
   166ec:	b	16658 <print_json_data@@Base+0x3c>
   166f0:	bl	1853c <handle_coda_error@@Base>
   166f4:	b	16678 <print_json_data@@Base+0x5c>
   166f8:	andeq	ip, r2, r8, asr #3
   166fc:	strdeq	ip, [r2], -r0
   16700:	strheq	sp, [r2], -r0
   16704:	andeq	fp, r1, r0, lsr r6
   16708:	add	r2, r1, r1, lsl #2
   1670c:	ldr	r3, [pc, #232]	; 167fc <print_json_data@@Base+0x1e0>
   16710:	add	r3, r3, r2, lsl #4
   16714:	ldr	r3, [r3, #804]	; 0x324
   16718:	cmp	r3, #0
   1671c:	bxle	lr
   16720:	push	{r4, r5, r6, r7, r8, lr}
   16724:	mov	r6, r0
   16728:	ldr	r5, [pc, #208]	; 16800 <print_json_data@@Base+0x1e4>
   1672c:	add	r5, r5, r2, lsl #4
   16730:	mov	r4, #0
   16734:	ldr	r8, [pc, #200]	; 16804 <print_json_data@@Base+0x1e8>
   16738:	ldr	r7, [pc, #188]	; 167fc <print_json_data@@Base+0x1e0>
   1673c:	add	r7, r7, r2, lsl #4
   16740:	b	167a0 <print_json_data@@Base+0x184>
   16744:	ldr	r2, [pc, #188]	; 16808 <print_json_data@@Base+0x1ec>
   16748:	add	r3, r2, r3, lsl #2
   1674c:	ldr	r2, [r3, #4]
   16750:	ldr	r1, [pc, #180]	; 1680c <print_json_data@@Base+0x1f0>
   16754:	mov	r0, r6
   16758:	bl	1245c <fprintf@plt>
   1675c:	b	16778 <print_json_data@@Base+0x15c>
   16760:	ldr	r2, [r5]
   16764:	cmn	r2, #1
   16768:	beq	167e8 <print_json_data@@Base+0x1cc>
   1676c:	ldr	r1, [pc, #152]	; 1680c <print_json_data@@Base+0x1f0>
   16770:	mov	r0, r6
   16774:	bl	1245c <fprintf@plt>
   16778:	add	r4, r4, #1
   1677c:	ldr	r3, [r7, #804]	; 0x324
   16780:	cmp	r3, r4
   16784:	ble	167f8 <print_json_data@@Base+0x1dc>
   16788:	cmp	r4, #0
   1678c:	ble	1679c <print_json_data@@Base+0x180>
   16790:	mov	r1, r6
   16794:	mov	r0, #44	; 0x2c
   16798:	bl	12594 <fputc@plt>
   1679c:	add	r5, r5, #4
   167a0:	ldr	r3, [r8]
   167a4:	cmp	r3, #0
   167a8:	beq	16760 <print_json_data@@Base+0x144>
   167ac:	ldr	r3, [r7, #800]	; 0x320
   167b0:	add	r3, r4, r3
   167b4:	add	r1, r3, #18
   167b8:	ldr	r2, [pc, #72]	; 16808 <print_json_data@@Base+0x1ec>
   167bc:	ldr	r2, [r2, r1, lsl #2]
   167c0:	cmp	r2, #0
   167c4:	beq	16744 <print_json_data@@Base+0x128>
   167c8:	ldr	r2, [pc, #56]	; 16808 <print_json_data@@Base+0x1ec>
   167cc:	add	r1, r2, r3, lsl #2
   167d0:	ldr	r3, [r1, #4]
   167d4:	ldr	r2, [r1, #36]	; 0x24
   167d8:	ldr	r1, [pc, #48]	; 16810 <print_json_data@@Base+0x1f4>
   167dc:	mov	r0, r6
   167e0:	bl	1245c <fprintf@plt>
   167e4:	b	16778 <print_json_data@@Base+0x15c>
   167e8:	mov	r1, r6
   167ec:	mov	r0, #63	; 0x3f
   167f0:	bl	12594 <fputc@plt>
   167f4:	b	16778 <print_json_data@@Base+0x15c>
   167f8:	pop	{r4, r5, r6, r7, r8, pc}
   167fc:	strdeq	ip, [r2], -r0
   16800:	andeq	ip, r2, r8, lsl r5
   16804:	andeq	ip, r2, ip, ror #3
   16808:	strheq	sp, [r2], -r8
   1680c:	andeq	sl, r1, ip, asr #7
   16810:	andeq	sl, r1, r8, asr #7

00016814 <print_full_field_name@@Base>:
   16814:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16818:	sub	sp, sp, #12
   1681c:	mov	r4, r0
   16820:	mov	fp, r2
   16824:	cmp	r1, #1
   16828:	beq	16884 <print_full_field_name@@Base+0x70>
   1682c:	mov	r9, r1
   16830:	ldr	r3, [pc, #728]	; 16b10 <print_full_field_name@@Base+0x2fc>
   16834:	ldr	r3, [r3, #3748]	; 0xea4
   16838:	cmp	r3, #0
   1683c:	ble	169a4 <print_full_field_name@@Base+0x190>
   16840:	ldr	r6, [pc, #716]	; 16b14 <print_full_field_name@@Base+0x300>
   16844:	mov	r5, #0
   16848:	sub	r7, r6, #3616	; 0xe20
   1684c:	mov	r8, #46	; 0x2e
   16850:	mov	r1, r4
   16854:	ldr	r0, [r6, #4]!
   16858:	bl	12624 <fputs@plt>
   1685c:	add	r5, r5, #1
   16860:	ldr	r3, [r7, #3748]	; 0xea4
   16864:	cmp	r3, r5
   16868:	ble	169a4 <print_full_field_name@@Base+0x190>
   1686c:	cmp	r5, #0
   16870:	ble	16850 <print_full_field_name@@Base+0x3c>
   16874:	mov	r1, r4
   16878:	mov	r0, r8
   1687c:	bl	12594 <fputc@plt>
   16880:	b	16850 <print_full_field_name@@Base+0x3c>
   16884:	ldr	r3, [pc, #644]	; 16b10 <print_full_field_name@@Base+0x2fc>
   16888:	ldr	r3, [r3, #136]	; 0x88
   1688c:	cmp	r3, #0
   16890:	ble	16960 <print_full_field_name@@Base+0x14c>
   16894:	ldr	r6, [pc, #636]	; 16b18 <print_full_field_name@@Base+0x304>
   16898:	mov	r8, #0
   1689c:	mov	r9, r8
   168a0:	mov	r5, r8
   168a4:	sub	r7, r6, #4
   168a8:	ldr	sl, [pc, #620]	; 16b1c <print_full_field_name@@Base+0x308>
   168ac:	b	168e0 <print_full_field_name@@Base+0xcc>
   168b0:	bl	1853c <handle_coda_error@@Base>
   168b4:	b	168f4 <print_full_field_name@@Base+0xe0>
   168b8:	add	r3, r7, r9, lsl #2
   168bc:	ldr	r2, [r3, #3620]	; 0xe24
   168c0:	mov	r1, sl
   168c4:	mov	r0, r4
   168c8:	bl	1245c <fprintf@plt>
   168cc:	add	r9, r9, #1
   168d0:	add	r5, r5, #1
   168d4:	ldr	r3, [r7, #136]	; 0x88
   168d8:	cmp	r3, r5
   168dc:	ble	16964 <print_full_field_name@@Base+0x150>
   168e0:	add	r1, sp, #4
   168e4:	ldr	r0, [r6, #4]!
   168e8:	bl	12660 <coda_type_get_class@plt>
   168ec:	cmp	r0, #0
   168f0:	bne	168b0 <print_full_field_name@@Base+0x9c>
   168f4:	ldr	r3, [sp, #4]
   168f8:	cmp	r3, #0
   168fc:	beq	168b8 <print_full_field_name@@Base+0xa4>
   16900:	cmp	r3, #1
   16904:	bne	168d0 <print_full_field_name@@Base+0xbc>
   16908:	cmp	r5, #0
   1690c:	beq	16950 <print_full_field_name@@Base+0x13c>
   16910:	add	r3, r8, r8, lsl #2
   16914:	add	r3, r7, r3, lsl #4
   16918:	ldr	r3, [r3, #804]	; 0x324
   1691c:	cmp	r3, #0
   16920:	ble	16948 <print_full_field_name@@Base+0x134>
   16924:	mov	r1, r4
   16928:	mov	r0, #91	; 0x5b
   1692c:	bl	12594 <fputc@plt>
   16930:	mov	r1, r8
   16934:	mov	r0, r4
   16938:	bl	16708 <print_json_data@@Base+0xec>
   1693c:	mov	r1, r4
   16940:	mov	r0, #93	; 0x5d
   16944:	bl	12594 <fputc@plt>
   16948:	add	r8, r8, #1
   1694c:	b	168d0 <print_full_field_name@@Base+0xbc>
   16950:	mov	r1, r4
   16954:	mov	r0, #47	; 0x2f
   16958:	bl	12594 <fputc@plt>
   1695c:	b	16910 <print_full_field_name@@Base+0xfc>
   16960:	mov	r8, #0
   16964:	cmp	fp, #0
   16968:	beq	169ac <print_full_field_name@@Base+0x198>
   1696c:	ldr	r3, [pc, #412]	; 16b10 <print_full_field_name@@Base+0x2fc>
   16970:	ldr	r3, [r3, #3360]	; 0xd20
   16974:	cmp	r3, r8
   16978:	ble	169ac <print_full_field_name@@Base+0x198>
   1697c:	mov	r1, r4
   16980:	mov	r0, #91	; 0x5b
   16984:	bl	12594 <fputc@plt>
   16988:	mov	r1, r8
   1698c:	mov	r0, r4
   16990:	bl	16708 <print_json_data@@Base+0xec>
   16994:	mov	r1, r4
   16998:	mov	r0, #93	; 0x5d
   1699c:	bl	12594 <fputc@plt>
   169a0:	b	169ac <print_full_field_name@@Base+0x198>
   169a4:	cmp	r9, #2
   169a8:	beq	169b4 <print_full_field_name@@Base+0x1a0>
   169ac:	add	sp, sp, #12
   169b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   169b4:	ldr	r3, [pc, #340]	; 16b10 <print_full_field_name@@Base+0x2fc>
   169b8:	ldr	r3, [r3, #136]	; 0x88
   169bc:	cmp	r3, #0
   169c0:	ble	16af0 <print_full_field_name@@Base+0x2dc>
   169c4:	ldr	r6, [pc, #332]	; 16b18 <print_full_field_name@@Base+0x304>
   169c8:	mov	r7, #0
   169cc:	mov	r5, r7
   169d0:	sub	r8, r6, #4
   169d4:	ldr	sl, [pc, #324]	; 16b20 <print_full_field_name@@Base+0x30c>
   169d8:	b	169fc <print_full_field_name@@Base+0x1e8>
   169dc:	bl	1853c <handle_coda_error@@Base>
   169e0:	ldr	r3, [sp, #4]
   169e4:	cmp	r3, #1
   169e8:	beq	16a14 <print_full_field_name@@Base+0x200>
   169ec:	add	r5, r5, #1
   169f0:	ldr	r3, [r8, #136]	; 0x88
   169f4:	cmp	r3, r5
   169f8:	ble	16a74 <print_full_field_name@@Base+0x260>
   169fc:	add	r1, sp, #4
   16a00:	ldr	r0, [r6, #4]!
   16a04:	bl	12660 <coda_type_get_class@plt>
   16a08:	cmp	r0, #0
   16a0c:	beq	169e0 <print_full_field_name@@Base+0x1cc>
   16a10:	b	169dc <print_full_field_name@@Base+0x1c8>
   16a14:	add	r3, r7, r7, lsl #2
   16a18:	add	r3, r8, r3, lsl #4
   16a1c:	ldr	r3, [r3, #804]	; 0x324
   16a20:	cmp	r3, #0
   16a24:	ble	169ec <print_full_field_name@@Base+0x1d8>
   16a28:	add	r3, r7, r7, lsl #2
   16a2c:	add	r3, r8, r3, lsl #4
   16a30:	ldr	r3, [r3, #800]	; 0x320
   16a34:	cmp	r3, #0
   16a38:	bne	16a64 <print_full_field_name@@Base+0x250>
   16a3c:	mov	r3, r4
   16a40:	mov	r2, r9
   16a44:	mov	r1, #1
   16a48:	mov	r0, sl
   16a4c:	bl	12378 <fwrite@plt>
   16a50:	mov	r1, r7
   16a54:	mov	r0, r4
   16a58:	bl	16708 <print_json_data@@Base+0xec>
   16a5c:	add	r7, r7, #1
   16a60:	b	169ec <print_full_field_name@@Base+0x1d8>
   16a64:	mov	r1, r4
   16a68:	mov	r0, #44	; 0x2c
   16a6c:	bl	12594 <fputc@plt>
   16a70:	b	16a50 <print_full_field_name@@Base+0x23c>
   16a74:	cmp	fp, #0
   16a78:	beq	16ac8 <print_full_field_name@@Base+0x2b4>
   16a7c:	ldr	r3, [pc, #140]	; 16b10 <print_full_field_name@@Base+0x2fc>
   16a80:	ldr	r3, [r3, #3360]	; 0xd20
   16a84:	cmp	r7, r3
   16a88:	bge	16ac8 <print_full_field_name@@Base+0x2b4>
   16a8c:	add	r2, r7, r7, lsl #2
   16a90:	ldr	r3, [pc, #120]	; 16b10 <print_full_field_name@@Base+0x2fc>
   16a94:	add	r3, r3, r2, lsl #4
   16a98:	ldr	r3, [r3, #800]	; 0x320
   16a9c:	cmp	r3, #0
   16aa0:	bne	16ae0 <print_full_field_name@@Base+0x2cc>
   16aa4:	mov	r3, r4
   16aa8:	mov	r2, #2
   16aac:	mov	r1, #1
   16ab0:	ldr	r0, [pc, #104]	; 16b20 <print_full_field_name@@Base+0x30c>
   16ab4:	bl	12378 <fwrite@plt>
   16ab8:	mov	r1, r7
   16abc:	mov	r0, r4
   16ac0:	bl	16708 <print_json_data@@Base+0xec>
   16ac4:	add	r7, r7, #1
   16ac8:	cmp	r7, #0
   16acc:	ble	169ac <print_full_field_name@@Base+0x198>
   16ad0:	mov	r1, r4
   16ad4:	mov	r0, #93	; 0x5d
   16ad8:	bl	12594 <fputc@plt>
   16adc:	b	169ac <print_full_field_name@@Base+0x198>
   16ae0:	mov	r1, r4
   16ae4:	mov	r0, #44	; 0x2c
   16ae8:	bl	12594 <fputc@plt>
   16aec:	b	16ab8 <print_full_field_name@@Base+0x2a4>
   16af0:	cmp	fp, #0
   16af4:	beq	169ac <print_full_field_name@@Base+0x198>
   16af8:	ldr	r3, [pc, #16]	; 16b10 <print_full_field_name@@Base+0x2fc>
   16afc:	ldr	r3, [r3, #3360]	; 0xd20
   16b00:	cmp	r3, #0
   16b04:	movgt	r7, #0
   16b08:	bgt	16a8c <print_full_field_name@@Base+0x278>
   16b0c:	b	169ac <print_full_field_name@@Base+0x198>
   16b10:	strdeq	ip, [r2], -r0
   16b14:	andeq	sp, r2, r0, lsl r0
   16b18:	strdeq	ip, [r2], -r4
   16b1c:	ldrdeq	sl, [r1], -r0
   16b20:	ldrdeq	sl, [r1], -r4
   16b24:	push	{r4, r5, lr}
   16b28:	sub	sp, sp, #12
   16b2c:	ldr	r3, [pc, #592]	; 16d84 <print_full_field_name@@Base+0x570>
   16b30:	ldr	r3, [r3]
   16b34:	cmp	r3, #0
   16b38:	beq	16b4c <print_full_field_name@@Base+0x338>
   16b3c:	cmp	r3, #1
   16b40:	beq	16d7c <print_full_field_name@@Base+0x568>
   16b44:	add	sp, sp, #12
   16b48:	pop	{r4, r5, pc}
   16b4c:	mov	r2, #0
   16b50:	mov	r1, #1
   16b54:	ldr	r3, [pc, #556]	; 16d88 <print_full_field_name@@Base+0x574>
   16b58:	ldr	r0, [r3]
   16b5c:	bl	16814 <print_full_field_name@@Base>
   16b60:	ldr	r3, [pc, #548]	; 16d8c <print_full_field_name@@Base+0x578>
   16b64:	ldr	r3, [r3]
   16b68:	cmp	r3, #0
   16b6c:	bne	16bdc <print_full_field_name@@Base+0x3c8>
   16b70:	ldr	r3, [pc, #536]	; 16d90 <print_full_field_name@@Base+0x57c>
   16b74:	ldr	r3, [r3]
   16b78:	cmp	r3, #0
   16b7c:	bne	16ce4 <print_full_field_name@@Base+0x4d0>
   16b80:	ldr	r3, [pc, #524]	; 16d94 <print_full_field_name@@Base+0x580>
   16b84:	ldr	r3, [r3]
   16b88:	cmp	r3, #0
   16b8c:	bne	16d30 <print_full_field_name@@Base+0x51c>
   16b90:	mov	r0, #10
   16b94:	bl	124bc <putchar@plt>
   16b98:	ldr	r3, [pc, #504]	; 16d98 <print_full_field_name@@Base+0x584>
   16b9c:	ldr	r3, [r3]
   16ba0:	cmp	r3, #0
   16ba4:	beq	16b44 <print_full_field_name@@Base+0x330>
   16ba8:	ldr	r3, [pc, #492]	; 16d9c <print_full_field_name@@Base+0x588>
   16bac:	ldr	r3, [r3]
   16bb0:	cmp	r3, #0
   16bb4:	ble	16b44 <print_full_field_name@@Base+0x330>
   16bb8:	mov	r4, #0
   16bbc:	ldr	r5, [pc, #472]	; 16d9c <print_full_field_name@@Base+0x588>
   16bc0:	mov	r0, r4
   16bc4:	bl	14a88 <print_all_distinct_dims@@Base>
   16bc8:	add	r4, r4, #1
   16bcc:	ldr	r3, [r5]
   16bd0:	cmp	r3, r4
   16bd4:	bgt	16bc0 <print_full_field_name@@Base+0x3ac>
   16bd8:	b	16b44 <print_full_field_name@@Base+0x330>
   16bdc:	ldr	r2, [pc, #444]	; 16da0 <print_full_field_name@@Base+0x58c>
   16be0:	ldr	r3, [r2, #136]	; 0x88
   16be4:	add	r3, r3, #2
   16be8:	mov	r1, sp
   16bec:	ldr	r0, [r2, r3, lsl #2]
   16bf0:	bl	12660 <coda_type_get_class@plt>
   16bf4:	cmp	r0, #0
   16bf8:	bne	16c80 <print_full_field_name@@Base+0x46c>
   16bfc:	ldr	r3, [sp]
   16c00:	cmp	r3, #6
   16c04:	beq	16c88 <print_full_field_name@@Base+0x474>
   16c08:	ldr	r2, [pc, #400]	; 16da0 <print_full_field_name@@Base+0x58c>
   16c0c:	ldr	r3, [r2, #136]	; 0x88
   16c10:	add	r3, r3, #2
   16c14:	add	r1, sp, #4
   16c18:	ldr	r0, [r2, r3, lsl #2]
   16c1c:	bl	12420 <coda_type_get_read_type@plt>
   16c20:	cmp	r0, #0
   16c24:	bne	16cc8 <print_full_field_name@@Base+0x4b4>
   16c28:	ldr	r0, [sp, #4]
   16c2c:	bl	1251c <coda_type_get_native_type_name@plt>
   16c30:	mov	r1, r0
   16c34:	ldr	r0, [pc, #360]	; 16da4 <print_full_field_name@@Base+0x590>
   16c38:	bl	12228 <printf@plt>
   16c3c:	ldr	r3, [sp, #4]
   16c40:	sub	r3, r3, #11
   16c44:	cmp	r3, #1
   16c48:	bhi	16b70 <print_full_field_name@@Base+0x35c>
   16c4c:	mov	r0, #40	; 0x28
   16c50:	bl	124bc <putchar@plt>
   16c54:	ldr	r3, [pc, #324]	; 16da0 <print_full_field_name@@Base+0x58c>
   16c58:	ldr	r1, [r3, #3360]	; 0xd20
   16c5c:	cmp	r1, #0
   16c60:	ble	16cd0 <print_full_field_name@@Base+0x4bc>
   16c64:	sub	r1, r1, #1
   16c68:	ldr	r3, [pc, #280]	; 16d88 <print_full_field_name@@Base+0x574>
   16c6c:	ldr	r0, [r3]
   16c70:	bl	16708 <print_json_data@@Base+0xec>
   16c74:	mov	r0, #41	; 0x29
   16c78:	bl	124bc <putchar@plt>
   16c7c:	b	16b70 <print_full_field_name@@Base+0x35c>
   16c80:	bl	1853c <handle_coda_error@@Base>
   16c84:	b	16bfc <print_full_field_name@@Base+0x3e8>
   16c88:	ldr	r2, [pc, #272]	; 16da0 <print_full_field_name@@Base+0x58c>
   16c8c:	ldr	r3, [r2, #136]	; 0x88
   16c90:	add	r3, r3, #2
   16c94:	add	r1, sp, #4
   16c98:	ldr	r0, [r2, r3, lsl #2]
   16c9c:	bl	124d4 <coda_type_get_special_type@plt>
   16ca0:	cmp	r0, #0
   16ca4:	bne	16cc0 <print_full_field_name@@Base+0x4ac>
   16ca8:	ldr	r0, [sp, #4]
   16cac:	bl	121c8 <coda_type_get_special_type_name@plt>
   16cb0:	mov	r1, r0
   16cb4:	ldr	r0, [pc, #232]	; 16da4 <print_full_field_name@@Base+0x590>
   16cb8:	bl	12228 <printf@plt>
   16cbc:	b	16b70 <print_full_field_name@@Base+0x35c>
   16cc0:	bl	1853c <handle_coda_error@@Base>
   16cc4:	b	16ca8 <print_full_field_name@@Base+0x494>
   16cc8:	bl	1853c <handle_coda_error@@Base>
   16ccc:	b	16c28 <print_full_field_name@@Base+0x414>
   16cd0:	ldr	r3, [pc, #208]	; 16da8 <print_full_field_name@@Base+0x594>
   16cd4:	mov	r2, #238	; 0xee
   16cd8:	ldr	r1, [pc, #204]	; 16dac <print_full_field_name@@Base+0x598>
   16cdc:	ldr	r0, [pc, #204]	; 16db0 <print_full_field_name@@Base+0x59c>
   16ce0:	bl	12654 <__assert_fail@plt>
   16ce4:	ldr	r2, [pc, #180]	; 16da0 <print_full_field_name@@Base+0x58c>
   16ce8:	ldr	r3, [r2, #136]	; 0x88
   16cec:	add	r3, r3, #2
   16cf0:	add	r1, sp, #4
   16cf4:	ldr	r0, [r2, r3, lsl #2]
   16cf8:	bl	12348 <coda_type_get_unit@plt>
   16cfc:	cmp	r0, #0
   16d00:	bne	16d28 <print_full_field_name@@Base+0x514>
   16d04:	ldr	r1, [sp, #4]
   16d08:	cmp	r1, #0
   16d0c:	beq	16b80 <print_full_field_name@@Base+0x36c>
   16d10:	ldrb	r3, [r1]
   16d14:	cmp	r3, #0
   16d18:	beq	16b80 <print_full_field_name@@Base+0x36c>
   16d1c:	ldr	r0, [pc, #144]	; 16db4 <print_full_field_name@@Base+0x5a0>
   16d20:	bl	12228 <printf@plt>
   16d24:	b	16b80 <print_full_field_name@@Base+0x36c>
   16d28:	bl	1853c <handle_coda_error@@Base>
   16d2c:	b	16d04 <print_full_field_name@@Base+0x4f0>
   16d30:	ldr	r2, [pc, #104]	; 16da0 <print_full_field_name@@Base+0x58c>
   16d34:	ldr	r3, [r2, #136]	; 0x88
   16d38:	add	r3, r3, #2
   16d3c:	add	r1, sp, #4
   16d40:	ldr	r0, [r2, r3, lsl #2]
   16d44:	bl	12354 <coda_type_get_description@plt>
   16d48:	cmp	r0, #0
   16d4c:	bne	16d74 <print_full_field_name@@Base+0x560>
   16d50:	ldr	r1, [sp, #4]
   16d54:	cmp	r1, #0
   16d58:	beq	16b90 <print_full_field_name@@Base+0x37c>
   16d5c:	ldrb	r3, [r1]
   16d60:	cmp	r3, #0
   16d64:	beq	16b90 <print_full_field_name@@Base+0x37c>
   16d68:	ldr	r0, [pc, #72]	; 16db8 <print_full_field_name@@Base+0x5a4>
   16d6c:	bl	12228 <printf@plt>
   16d70:	b	16b90 <print_full_field_name@@Base+0x37c>
   16d74:	bl	1853c <handle_coda_error@@Base>
   16d78:	b	16d50 <print_full_field_name@@Base+0x53c>
   16d7c:	bl	132a8 <export_data_element_to_ascii@@Base>
   16d80:	b	16b44 <print_full_field_name@@Base+0x330>
   16d84:	andeq	sp, r2, ip, lsr #1
   16d88:			; <UNDEFINED> instruction: 0x0002c1bc
   16d8c:	andeq	sp, r2, r0, lsr #1
   16d90:	andeq	ip, r2, r8, ror #3
   16d94:	andeq	sp, r2, r4, lsr #1
   16d98:	ldrdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   16d9c:	strheq	sp, [r2], -r8
   16da0:	strdeq	ip, [r2], -r0
   16da4:	ldrdeq	sl, [r1], -r8
   16da8:	andeq	sl, r1, r4, lsr #7
   16dac:	ldrdeq	sl, [r1], -ip
   16db0:	andeq	sl, r1, ip, lsr #8
   16db4:	andeq	sl, r1, ip, asr #8
   16db8:	andeq	sl, r1, r4, asr r4
   16dbc:	push	{r4, r5, r6, r7, lr}
   16dc0:	sub	sp, sp, #20
   16dc4:	ldr	r2, [pc, #936]	; 17174 <print_full_field_name@@Base+0x960>
   16dc8:	ldr	r3, [r2, #136]	; 0x88
   16dcc:	add	r3, r3, #2
   16dd0:	add	r1, sp, #12
   16dd4:	ldr	r0, [r2, r3, lsl #2]
   16dd8:	bl	12660 <coda_type_get_class@plt>
   16ddc:	cmp	r0, #0
   16de0:	bne	16e10 <print_full_field_name@@Base+0x5fc>
   16de4:	ldr	r3, [sp, #12]
   16de8:	cmp	r3, #6
   16dec:	ldrls	pc, [pc, r3, lsl #2]
   16df0:	b	16e28 <print_full_field_name@@Base+0x614>
   16df4:	andeq	r6, r1, r8, lsl lr
   16df8:	ldrdeq	r6, [r1], -r4
   16dfc:	andeq	r7, r1, r0, asr r0
   16e00:	andeq	r7, r1, r0, asr r0
   16e04:	andeq	r7, r1, r0, asr r0
   16e08:	andeq	r7, r1, r0, asr r0
   16e0c:	strheq	r7, [r1], -ip
   16e10:	bl	1853c <handle_coda_error@@Base>
   16e14:	b	16de4 <print_full_field_name@@Base+0x5d0>
   16e18:	ldr	r3, [pc, #852]	; 17174 <print_full_field_name@@Base+0x960>
   16e1c:	ldr	r3, [r3, #136]	; 0x88
   16e20:	cmp	r3, #30
   16e24:	ble	16e30 <print_full_field_name@@Base+0x61c>
   16e28:	add	sp, sp, #20
   16e2c:	pop	{r4, r5, r6, r7, pc}
   16e30:	ldr	r2, [pc, #828]	; 17174 <print_full_field_name@@Base+0x960>
   16e34:	ldr	r1, [r2, #3748]	; 0xea4
   16e38:	add	r1, r1, #1
   16e3c:	str	r1, [r2, #3748]	; 0xea4
   16e40:	add	r3, r3, #2
   16e44:	add	r1, sp, #4
   16e48:	ldr	r0, [r2, r3, lsl #2]
   16e4c:	bl	12408 <coda_type_get_num_record_fields@plt>
   16e50:	cmp	r0, #0
   16e54:	bne	16e8c <print_full_field_name@@Base+0x678>
   16e58:	ldr	r3, [pc, #788]	; 17174 <print_full_field_name@@Base+0x960>
   16e5c:	ldr	r2, [r3, #136]	; 0x88
   16e60:	add	r2, r2, #1
   16e64:	str	r2, [r3, #136]	; 0x88
   16e68:	ldr	r2, [r3, #796]	; 0x31c
   16e6c:	add	r2, r2, #166	; 0xa6
   16e70:	ldr	r7, [r3, r2, lsl #2]
   16e74:	cmp	r7, #0
   16e78:	beq	16f94 <print_full_field_name@@Base+0x780>
   16e7c:	mov	r0, r7
   16e80:	mov	r4, r3
   16e84:	mov	r6, #1
   16e88:	b	16f24 <print_full_field_name@@Base+0x710>
   16e8c:	bl	1853c <handle_coda_error@@Base>
   16e90:	b	16e58 <print_full_field_name@@Base+0x644>
   16e94:	ldr	r3, [pc, #732]	; 17178 <print_full_field_name@@Base+0x964>
   16e98:	ldr	r2, [pc, #732]	; 1717c <print_full_field_name@@Base+0x968>
   16e9c:	ldr	r1, [pc, #732]	; 17180 <print_full_field_name@@Base+0x96c>
   16ea0:	ldr	r0, [pc, #732]	; 17184 <print_full_field_name@@Base+0x970>
   16ea4:	bl	12654 <__assert_fail@plt>
   16ea8:	mov	r2, r5
   16eac:	ldr	r1, [pc, #724]	; 17188 <print_full_field_name@@Base+0x974>
   16eb0:	ldr	r3, [pc, #724]	; 1718c <print_full_field_name@@Base+0x978>
   16eb4:	ldr	r0, [r3]
   16eb8:	bl	1245c <fprintf@plt>
   16ebc:	mov	r0, #1
   16ec0:	bl	12414 <exit@plt>
   16ec4:	ldr	r5, [r4, #796]	; 0x31c
   16ec8:	add	r3, r5, #166	; 0xa6
   16ecc:	ldr	r0, [r4, r3, lsl #2]
   16ed0:	bl	15bfc <codadump_filter_get_subfilter@@Base>
   16ed4:	add	r5, r5, #167	; 0xa7
   16ed8:	str	r0, [r4, r5, lsl #2]
   16edc:	ldr	r3, [r4, #796]	; 0x31c
   16ee0:	add	r3, r3, #1
   16ee4:	str	r3, [r4, #796]	; 0x31c
   16ee8:	mov	r1, r6
   16eec:	ldr	r0, [sp, #8]
   16ef0:	bl	17190 <print_full_field_name@@Base+0x97c>
   16ef4:	ldr	r5, [r4, #796]	; 0x31c
   16ef8:	sub	r3, r5, #1
   16efc:	str	r3, [r4, #796]	; 0x31c
   16f00:	add	r5, r5, #165	; 0xa5
   16f04:	ldr	r0, [r4, r5, lsl #2]
   16f08:	bl	15c30 <codadump_filter_get_next_filter@@Base>
   16f0c:	str	r0, [r4, r5, lsl #2]
   16f10:	ldr	r3, [r4, #796]	; 0x31c
   16f14:	add	r2, r3, #166	; 0xa6
   16f18:	ldr	r0, [r4, r2, lsl #2]
   16f1c:	cmp	r0, #0
   16f20:	beq	16f68 <print_full_field_name@@Base+0x754>
   16f24:	bl	15bc8 <codadump_filter_get_fieldname@@Base>
   16f28:	subs	r5, r0, #0
   16f2c:	beq	16e94 <print_full_field_name@@Base+0x680>
   16f30:	ldr	r3, [r4, #136]	; 0x88
   16f34:	add	r3, r3, #1
   16f38:	add	r2, sp, #8
   16f3c:	mov	r1, r5
   16f40:	ldr	r0, [r4, r3, lsl #2]
   16f44:	bl	12570 <coda_type_get_record_field_index_from_name@plt>
   16f48:	cmp	r0, #0
   16f4c:	beq	16ec4 <print_full_field_name@@Base+0x6b0>
   16f50:	bl	12600 <coda_get_errno@plt>
   16f54:	ldr	r3, [r0]
   16f58:	cmn	r3, #102	; 0x66
   16f5c:	beq	16ea8 <print_full_field_name@@Base+0x694>
   16f60:	bl	1853c <handle_coda_error@@Base>
   16f64:	b	16ec4 <print_full_field_name@@Base+0x6b0>
   16f68:	mov	r3, r2
   16f6c:	ldr	r2, [pc, #512]	; 17174 <print_full_field_name@@Base+0x960>
   16f70:	str	r7, [r2, r3, lsl #2]
   16f74:	ldr	r3, [pc, #504]	; 17174 <print_full_field_name@@Base+0x960>
   16f78:	ldr	r2, [r3, #136]	; 0x88
   16f7c:	sub	r2, r2, #1
   16f80:	str	r2, [r3, #136]	; 0x88
   16f84:	ldr	r2, [r3, #3748]	; 0xea4
   16f88:	sub	r2, r2, #1
   16f8c:	str	r2, [r3, #3748]	; 0xea4
   16f90:	b	16e28 <print_full_field_name@@Base+0x614>
   16f94:	mov	r3, #0
   16f98:	str	r3, [sp, #8]
   16f9c:	ldr	r3, [sp, #4]
   16fa0:	cmp	r3, #0
   16fa4:	ble	16f74 <print_full_field_name@@Base+0x760>
   16fa8:	mov	r0, #0
   16fac:	mov	r4, r0
   16fb0:	mov	r1, r4
   16fb4:	bl	17190 <print_full_field_name@@Base+0x97c>
   16fb8:	ldr	r0, [sp, #8]
   16fbc:	add	r0, r0, #1
   16fc0:	str	r0, [sp, #8]
   16fc4:	ldr	r3, [sp, #4]
   16fc8:	cmp	r3, r0
   16fcc:	bgt	16fb0 <print_full_field_name@@Base+0x79c>
   16fd0:	b	16f74 <print_full_field_name@@Base+0x760>
   16fd4:	ldr	r3, [pc, #408]	; 17174 <print_full_field_name@@Base+0x960>
   16fd8:	ldr	r3, [r3, #136]	; 0x88
   16fdc:	cmp	r3, #30
   16fe0:	bgt	16e28 <print_full_field_name@@Base+0x614>
   16fe4:	bl	14c84 <dim_enter_array@@Base>
   16fe8:	ldr	r3, [pc, #388]	; 17174 <print_full_field_name@@Base+0x960>
   16fec:	ldr	r2, [r3, #3360]	; 0xd20
   16ff0:	add	r2, r2, #1
   16ff4:	str	r2, [r3, #3360]	; 0xd20
   16ff8:	ldr	r2, [r3, #136]	; 0x88
   16ffc:	add	r1, r2, #1
   17000:	str	r1, [r3, #136]	; 0x88
   17004:	add	r1, r2, #3
   17008:	add	r2, r2, #2
   1700c:	add	r1, r3, r1, lsl #2
   17010:	ldr	r0, [r3, r2, lsl #2]
   17014:	bl	124f8 <coda_type_get_array_base_type@plt>
   17018:	cmp	r0, #0
   1701c:	bne	17048 <print_full_field_name@@Base+0x834>
   17020:	bl	16dbc <print_full_field_name@@Base+0x5a8>
   17024:	ldr	r3, [pc, #328]	; 17174 <print_full_field_name@@Base+0x960>
   17028:	ldr	r2, [r3, #136]	; 0x88
   1702c:	sub	r2, r2, #1
   17030:	str	r2, [r3, #136]	; 0x88
   17034:	ldr	r2, [r3, #3360]	; 0xd20
   17038:	sub	r2, r2, #1
   1703c:	str	r2, [r3, #3360]	; 0xd20
   17040:	bl	155ac <dim_leave_array@@Base>
   17044:	b	16e28 <print_full_field_name@@Base+0x614>
   17048:	bl	1853c <handle_coda_error@@Base>
   1704c:	b	17020 <print_full_field_name@@Base+0x80c>
   17050:	ldr	r2, [pc, #284]	; 17174 <print_full_field_name@@Base+0x960>
   17054:	ldr	r3, [r2, #136]	; 0x88
   17058:	add	r3, r3, #2
   1705c:	add	r1, sp, #8
   17060:	ldr	r0, [r2, r3, lsl #2]
   17064:	bl	12420 <coda_type_get_read_type@plt>
   17068:	cmp	r0, #0
   1706c:	bne	170ac <print_full_field_name@@Base+0x898>
   17070:	ldr	r3, [sp, #8]
   17074:	sub	r3, r3, #11
   17078:	cmp	r3, #1
   1707c:	bhi	170b4 <print_full_field_name@@Base+0x8a0>
   17080:	bl	14c84 <dim_enter_array@@Base>
   17084:	ldr	r4, [pc, #232]	; 17174 <print_full_field_name@@Base+0x960>
   17088:	ldr	r3, [r4, #3360]	; 0xd20
   1708c:	add	r3, r3, #1
   17090:	str	r3, [r4, #3360]	; 0xd20
   17094:	bl	16b24 <print_full_field_name@@Base+0x310>
   17098:	ldr	r3, [r4, #3360]	; 0xd20
   1709c:	sub	r3, r3, #1
   170a0:	str	r3, [r4, #3360]	; 0xd20
   170a4:	bl	155ac <dim_leave_array@@Base>
   170a8:	b	16e28 <print_full_field_name@@Base+0x614>
   170ac:	bl	1853c <handle_coda_error@@Base>
   170b0:	b	17070 <print_full_field_name@@Base+0x85c>
   170b4:	bl	16b24 <print_full_field_name@@Base+0x310>
   170b8:	b	16e28 <print_full_field_name@@Base+0x614>
   170bc:	bl	121ec <coda_get_option_bypass_special_types@plt>
   170c0:	cmp	r0, #0
   170c4:	beq	170f8 <print_full_field_name@@Base+0x8e4>
   170c8:	ldr	r2, [pc, #164]	; 17174 <print_full_field_name@@Base+0x960>
   170cc:	ldr	r3, [r2, #136]	; 0x88
   170d0:	add	r3, r3, #2
   170d4:	add	r1, r2, r3, lsl #2
   170d8:	ldr	r0, [r2, r3, lsl #2]
   170dc:	bl	1260c <coda_type_get_special_base_type@plt>
   170e0:	cmp	r0, #0
   170e4:	bne	170f0 <print_full_field_name@@Base+0x8dc>
   170e8:	bl	16dbc <print_full_field_name@@Base+0x5a8>
   170ec:	b	16e28 <print_full_field_name@@Base+0x614>
   170f0:	bl	1853c <handle_coda_error@@Base>
   170f4:	b	170e8 <print_full_field_name@@Base+0x8d4>
   170f8:	ldr	r2, [pc, #116]	; 17174 <print_full_field_name@@Base+0x960>
   170fc:	ldr	r3, [r2, #136]	; 0x88
   17100:	add	r3, r3, #2
   17104:	add	r1, sp, #8
   17108:	ldr	r0, [r2, r3, lsl #2]
   1710c:	bl	124d4 <coda_type_get_special_type@plt>
   17110:	cmp	r0, #0
   17114:	bne	17138 <print_full_field_name@@Base+0x924>
   17118:	ldr	r3, [sp, #8]
   1711c:	cmp	r3, #3
   17120:	ldrls	pc, [pc, r3, lsl #2]
   17124:	b	16e28 <print_full_field_name@@Base+0x614>
   17128:	andeq	r6, r1, r8, lsr #28
   1712c:	andeq	r7, r1, r0, asr #2
   17130:	andeq	r7, r1, r0, asr #2
   17134:	andeq	r7, r1, r8, asr #2
   17138:	bl	1853c <handle_coda_error@@Base>
   1713c:	b	17118 <print_full_field_name@@Base+0x904>
   17140:	bl	16b24 <print_full_field_name@@Base+0x310>
   17144:	b	16e28 <print_full_field_name@@Base+0x614>
   17148:	bl	14c84 <dim_enter_array@@Base>
   1714c:	ldr	r4, [pc, #32]	; 17174 <print_full_field_name@@Base+0x960>
   17150:	ldr	r3, [r4, #3360]	; 0xd20
   17154:	add	r3, r3, #1
   17158:	str	r3, [r4, #3360]	; 0xd20
   1715c:	bl	16b24 <print_full_field_name@@Base+0x310>
   17160:	ldr	r3, [r4, #3360]	; 0xd20
   17164:	sub	r3, r3, #1
   17168:	str	r3, [r4, #3360]	; 0xd20
   1716c:	bl	155ac <dim_leave_array@@Base>
   17170:	b	16e28 <print_full_field_name@@Base+0x614>
   17174:	strdeq	ip, [r2], -r0
   17178:			; <UNDEFINED> instruction: 0x0001a3b8
   1717c:	andeq	r0, r0, r9, lsl #3
   17180:	ldrdeq	sl, [r1], -ip
   17184:	andeq	sl, r1, ip, asr r4
   17188:	andeq	sl, r1, ip, ror #8
   1718c:			; <UNDEFINED> instruction: 0x0002c1b8
   17190:	push	{r4, r5, lr}
   17194:	sub	sp, sp, #12
   17198:	mov	r4, r0
   1719c:	mov	r5, r1
   171a0:	ldr	r3, [pc, #296]	; 172d0 <print_full_field_name@@Base+0xabc>
   171a4:	ldr	r2, [r3, #3748]	; 0xea4
   171a8:	add	r2, r3, r2, lsl #2
   171ac:	str	r0, [r2, #3488]	; 0xda0
   171b0:	ldr	r0, [r3, #136]	; 0x88
   171b4:	add	r0, r0, #1
   171b8:	add	r2, sp, #4
   171bc:	mov	r1, r4
   171c0:	ldr	r0, [r3, r0, lsl #2]
   171c4:	bl	1221c <coda_type_get_record_field_hidden_status@plt>
   171c8:	cmp	r0, #0
   171cc:	bne	172a0 <print_full_field_name@@Base+0xa8c>
   171d0:	ldr	r3, [sp, #4]
   171d4:	adds	r3, r3, #0
   171d8:	movne	r3, #1
   171dc:	cmp	r5, #0
   171e0:	movne	r3, #0
   171e4:	cmp	r3, #0
   171e8:	bne	17298 <print_full_field_name@@Base+0xa84>
   171ec:	ldr	r3, [pc, #224]	; 172d4 <print_full_field_name@@Base+0xac0>
   171f0:	ldr	r3, [r3]
   171f4:	cmp	r3, #0
   171f8:	beq	17240 <print_full_field_name@@Base+0xa2c>
   171fc:	ldr	r0, [pc, #204]	; 172d0 <print_full_field_name@@Base+0xabc>
   17200:	ldr	r3, [r0, #136]	; 0x88
   17204:	add	r3, r3, #1
   17208:	mov	r2, sp
   1720c:	mov	r1, r4
   17210:	ldr	r0, [r0, r3, lsl #2]
   17214:	bl	1230c <coda_type_get_record_field_available_status@plt>
   17218:	cmp	r0, #0
   1721c:	bne	172a8 <print_full_field_name@@Base+0xa94>
   17220:	ldr	r3, [sp]
   17224:	cmn	r3, #1
   17228:	beq	172b0 <print_full_field_name@@Base+0xa9c>
   1722c:	ldr	r3, [pc, #156]	; 172d0 <print_full_field_name@@Base+0xabc>
   17230:	ldr	r2, [r3, #136]	; 0x88
   17234:	add	r3, r3, r2, lsl #2
   17238:	ldr	r2, [sp]
   1723c:	str	r2, [r3, #3360]	; 0xd20
   17240:	ldr	r3, [pc, #136]	; 172d0 <print_full_field_name@@Base+0xabc>
   17244:	ldr	r2, [r3, #3748]	; 0xea4
   17248:	add	r2, r2, #904	; 0x388
   1724c:	ldr	r0, [r3, #136]	; 0x88
   17250:	add	r0, r0, #1
   17254:	add	r2, r3, r2, lsl #2
   17258:	mov	r1, r4
   1725c:	ldr	r0, [r3, r0, lsl #2]
   17260:	bl	12618 <coda_type_get_record_field_name@plt>
   17264:	cmp	r0, #0
   17268:	bne	172c0 <print_full_field_name@@Base+0xaac>
   1726c:	ldr	r0, [pc, #92]	; 172d0 <print_full_field_name@@Base+0xabc>
   17270:	ldr	r3, [r0, #136]	; 0x88
   17274:	add	r2, r3, #2
   17278:	add	r3, r3, #1
   1727c:	add	r2, r0, r2, lsl #2
   17280:	mov	r1, r4
   17284:	ldr	r0, [r0, r3, lsl #2]
   17288:	bl	122d0 <coda_type_get_record_field_type@plt>
   1728c:	cmp	r0, #0
   17290:	bne	172c8 <print_full_field_name@@Base+0xab4>
   17294:	bl	16dbc <print_full_field_name@@Base+0x5a8>
   17298:	add	sp, sp, #12
   1729c:	pop	{r4, r5, pc}
   172a0:	bl	1853c <handle_coda_error@@Base>
   172a4:	b	171d0 <print_full_field_name@@Base+0x9bc>
   172a8:	bl	1853c <handle_coda_error@@Base>
   172ac:	b	17220 <print_full_field_name@@Base+0xa0c>
   172b0:	bl	15738 <dim_record_field_available@@Base>
   172b4:	cmp	r0, #0
   172b8:	beq	17298 <print_full_field_name@@Base+0xa84>
   172bc:	b	1722c <print_full_field_name@@Base+0xa18>
   172c0:	bl	1853c <handle_coda_error@@Base>
   172c4:	b	1726c <print_full_field_name@@Base+0xa58>
   172c8:	bl	1853c <handle_coda_error@@Base>
   172cc:	b	17294 <print_full_field_name@@Base+0xa80>
   172d0:	strdeq	ip, [r2], -r0
   172d4:	andeq	ip, r2, ip, ror #3

000172d8 <traverse_info_init@@Base>:
   172d8:	ldr	r3, [pc, #20]	; 172f4 <traverse_info_init@@Base+0x1c>
   172dc:	mov	r2, #0
   172e0:	str	r2, [r3, #4]
   172e4:	str	r2, [r3, #136]	; 0x88
   172e8:	str	r2, [r3, #3360]	; 0xd20
   172ec:	str	r2, [r3, #3748]	; 0xea4
   172f0:	bx	lr
   172f4:	strdeq	ip, [r2], -r0

000172f8 <traverse_info_done@@Base>:
   172f8:	push	{r4, lr}
   172fc:	ldr	r3, [pc, #40]	; 1732c <traverse_info_done@@Base+0x34>
   17300:	ldr	r0, [r3, #4]
   17304:	cmp	r0, #0
   17308:	beq	17310 <traverse_info_done@@Base+0x18>
   1730c:	bl	12540 <coda_close@plt>
   17310:	ldr	r3, [pc, #20]	; 1732c <traverse_info_done@@Base+0x34>
   17314:	ldr	r3, [r3, #664]	; 0x298
   17318:	cmp	r3, #0
   1731c:	popeq	{r4, pc}
   17320:	ldr	r0, [pc, #8]	; 17330 <traverse_info_done@@Base+0x38>
   17324:	bl	15750 <codadump_filter_remove@@Base>
   17328:	pop	{r4, pc}
   1732c:	strdeq	ip, [r2], -r0
   17330:	andeq	ip, r2, r8, lsl #9

00017334 <traverse_product@@Base>:
   17334:	push	{r4, lr}
   17338:	ldr	r3, [pc, #188]	; 173fc <traverse_product@@Base+0xc8>
   1733c:	mov	r1, r3
   17340:	ldr	r0, [r3, #-4]
   17344:	bl	12258 <coda_open@plt>
   17348:	cmp	r0, #0
   1734c:	bne	173a4 <traverse_product@@Base+0x70>
   17350:	ldr	r0, [pc, #168]	; 17400 <traverse_product@@Base+0xcc>
   17354:	ldr	r1, [r0, #4]
   17358:	add	r0, r0, #144	; 0x90
   1735c:	bl	12384 <coda_cursor_set_product@plt>
   17360:	cmp	r0, #0
   17364:	bne	173ec <traverse_product@@Base+0xb8>
   17368:	ldr	r0, [pc, #144]	; 17400 <traverse_product@@Base+0xcc>
   1736c:	ldr	r1, [r0, #136]	; 0x88
   17370:	add	r1, r1, #2
   17374:	add	r1, r0, r1, lsl #2
   17378:	add	r0, r0, #144	; 0x90
   1737c:	bl	122dc <coda_cursor_get_type@plt>
   17380:	cmp	r0, #0
   17384:	bne	173f4 <traverse_product@@Base+0xc0>
   17388:	bl	16dbc <print_full_field_name@@Base+0x5a8>
   1738c:	ldr	r4, [pc, #108]	; 17400 <traverse_product@@Base+0xcc>
   17390:	ldr	r0, [r4, #4]
   17394:	bl	12540 <coda_close@plt>
   17398:	mov	r3, #0
   1739c:	str	r3, [r4, #4]
   173a0:	pop	{r4, pc}
   173a4:	bl	12600 <coda_get_errno@plt>
   173a8:	ldr	r3, [r0]
   173ac:	cmn	r3, #21
   173b0:	beq	173bc <traverse_product@@Base+0x88>
   173b4:	bl	1853c <handle_coda_error@@Base>
   173b8:	b	17350 <traverse_product@@Base+0x1c>
   173bc:	mov	r0, #0
   173c0:	bl	122a0 <coda_set_option_use_mmap@plt>
   173c4:	ldr	r3, [pc, #48]	; 173fc <traverse_product@@Base+0xc8>
   173c8:	mov	r1, r3
   173cc:	ldr	r0, [r3, #-4]
   173d0:	bl	12258 <coda_open@plt>
   173d4:	mov	r4, r0
   173d8:	mov	r0, #1
   173dc:	bl	122a0 <coda_set_option_use_mmap@plt>
   173e0:	cmp	r4, #0
   173e4:	bne	173b4 <traverse_product@@Base+0x80>
   173e8:	b	17350 <traverse_product@@Base+0x1c>
   173ec:	bl	1853c <handle_coda_error@@Base>
   173f0:	b	17368 <traverse_product@@Base+0x34>
   173f4:	bl	1853c <handle_coda_error@@Base>
   173f8:	b	17388 <traverse_product@@Base+0x54>
   173fc:	strdeq	ip, [r2], -r4
   17400:	strdeq	ip, [r2], -r0
   17404:	push	{r4, r5, r6, r7, r8, lr}
   17408:	ldr	r3, [pc, #84]	; 17464 <traverse_product@@Base+0x130>
   1740c:	ldr	r4, [r3]
   17410:	cmp	r4, #0
   17414:	blt	17450 <traverse_product@@Base+0x11c>
   17418:	ble	1744c <traverse_product@@Base+0x118>
   1741c:	ldr	r8, [pc, #68]	; 17468 <traverse_product@@Base+0x134>
   17420:	ldr	r7, [pc, #68]	; 1746c <traverse_product@@Base+0x138>
   17424:	mov	r6, #2
   17428:	mov	r5, #1
   1742c:	ldr	r3, [r8]
   17430:	mov	r2, r6
   17434:	mov	r1, r5
   17438:	mov	r0, r7
   1743c:	bl	12378 <fwrite@plt>
   17440:	subs	r4, r4, #1
   17444:	bne	1742c <traverse_product@@Base+0xf8>
   17448:	pop	{r4, r5, r6, r7, r8, pc}
   1744c:	pop	{r4, r5, r6, r7, r8, pc}
   17450:	ldr	r3, [pc, #24]	; 17470 <traverse_product@@Base+0x13c>
   17454:	mov	r2, #44	; 0x2c
   17458:	ldr	r1, [pc, #20]	; 17474 <traverse_product@@Base+0x140>
   1745c:	ldr	r0, [pc, #20]	; 17478 <traverse_product@@Base+0x144>
   17460:	bl	12654 <__assert_fail@plt>
   17464:	andeq	ip, r2, ip, asr #3
   17468:	muleq	r2, r8, r0
   1746c:	andeq	r9, r1, r4, lsl #29
   17470:	andeq	sl, r1, r0, lsr #9
   17474:	andeq	sl, r1, r8, lsr #9
   17478:	andeq	r9, r1, ip, ror #29
   1747c:	push	{r0, r1, r2, r3}
   17480:	push	{lr}		; (str lr, [sp, #-4]!)
   17484:	sub	sp, sp, #12
   17488:	bl	17404 <traverse_product@@Base+0xd0>
   1748c:	add	r2, sp, #20
   17490:	str	r2, [sp, #4]
   17494:	ldr	r1, [sp, #16]
   17498:	ldr	r3, [pc, #20]	; 174b4 <traverse_product@@Base+0x180>
   1749c:	ldr	r0, [r3]
   174a0:	bl	12558 <vfprintf@plt>
   174a4:	add	sp, sp, #12
   174a8:	pop	{lr}		; (ldr lr, [sp], #4)
   174ac:	add	sp, sp, #16
   174b0:	bx	lr
   174b4:	muleq	r2, r8, r0
   174b8:	push	{r0, r1, r2, r3}
   174bc:	push	{lr}		; (str lr, [sp, #-4]!)
   174c0:	sub	sp, sp, #12
   174c4:	add	r2, sp, #20
   174c8:	str	r2, [sp, #4]
   174cc:	ldr	r1, [sp, #16]
   174d0:	ldr	r3, [pc, #20]	; 174ec <traverse_product@@Base+0x1b8>
   174d4:	ldr	r0, [r3]
   174d8:	bl	12558 <vfprintf@plt>
   174dc:	add	sp, sp, #12
   174e0:	pop	{lr}		; (ldr lr, [sp], #4)
   174e4:	add	sp, sp, #16
   174e8:	bx	lr
   174ec:	muleq	r2, r8, r0
   174f0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   174f4:	subs	r5, r1, #0
   174f8:	pople	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   174fc:	mov	r4, r0
   17500:	add	r5, r0, r5
   17504:	ldr	r9, [pc, #204]	; 175d8 <traverse_product@@Base+0x2a4>
   17508:	ldr	fp, [pc, #204]	; 175dc <traverse_product@@Base+0x2a8>
   1750c:	ldr	sl, [pc, #204]	; 175e0 <traverse_product@@Base+0x2ac>
   17510:	ldr	r8, [pc, #204]	; 175e4 <traverse_product@@Base+0x2b0>
   17514:	ldr	r7, [pc, #204]	; 175e8 <traverse_product@@Base+0x2b4>
   17518:	ldr	r6, [pc, #204]	; 175ec <traverse_product@@Base+0x2b8>
   1751c:	b	17554 <traverse_product@@Base+0x220>
   17520:	cmp	r1, #34	; 0x22
   17524:	beq	175bc <traverse_product@@Base+0x288>
   17528:	cmp	r1, #92	; 0x5c
   1752c:	beq	175c8 <traverse_product@@Base+0x294>
   17530:	cmp	r1, #13
   17534:	bne	1757c <traverse_product@@Base+0x248>
   17538:	mov	r0, r6
   1753c:	bl	174b8 <traverse_product@@Base+0x184>
   17540:	b	1754c <traverse_product@@Base+0x218>
   17544:	ldr	r0, [pc, #164]	; 175f0 <traverse_product@@Base+0x2bc>
   17548:	bl	174b8 <traverse_product@@Base+0x184>
   1754c:	cmp	r4, r5
   17550:	beq	175d4 <traverse_product@@Base+0x2a0>
   17554:	ldrb	r1, [r4], #1
   17558:	cmp	r1, #12
   1755c:	beq	17598 <traverse_product@@Base+0x264>
   17560:	bhi	17520 <traverse_product@@Base+0x1ec>
   17564:	cmp	r1, #9
   17568:	beq	175b0 <traverse_product@@Base+0x27c>
   1756c:	cmp	r1, #10
   17570:	beq	175a4 <traverse_product@@Base+0x270>
   17574:	cmp	r1, #8
   17578:	beq	17544 <traverse_product@@Base+0x210>
   1757c:	sub	r3, r1, #32
   17580:	uxtb	r3, r3
   17584:	cmp	r3, #94	; 0x5e
   17588:	movls	r0, sl
   1758c:	movhi	r0, fp
   17590:	bl	174b8 <traverse_product@@Base+0x184>
   17594:	b	1754c <traverse_product@@Base+0x218>
   17598:	mov	r0, r9
   1759c:	bl	174b8 <traverse_product@@Base+0x184>
   175a0:	b	1754c <traverse_product@@Base+0x218>
   175a4:	ldr	r0, [pc, #72]	; 175f4 <traverse_product@@Base+0x2c0>
   175a8:	bl	174b8 <traverse_product@@Base+0x184>
   175ac:	b	1754c <traverse_product@@Base+0x218>
   175b0:	ldr	r0, [pc, #64]	; 175f8 <traverse_product@@Base+0x2c4>
   175b4:	bl	174b8 <traverse_product@@Base+0x184>
   175b8:	b	1754c <traverse_product@@Base+0x218>
   175bc:	mov	r0, r8
   175c0:	bl	174b8 <traverse_product@@Base+0x184>
   175c4:	b	1754c <traverse_product@@Base+0x218>
   175c8:	mov	r0, r7
   175cc:	bl	174b8 <traverse_product@@Base+0x184>
   175d0:	b	1754c <traverse_product@@Base+0x218>
   175d4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   175d8:	andeq	r9, r1, r0, lsr #28
   175dc:	ldrdeq	sl, [r1], -r4
   175e0:	muleq	r1, ip, lr
   175e4:	ldrdeq	sl, [r1], -r0
   175e8:	andeq	r9, r1, r8, lsr #28
   175ec:	andeq	r9, r1, r4, lsr #28
   175f0:	andeq	r9, r1, r0, lsl lr
   175f4:	andeq	r9, r1, r8, lsl lr
   175f8:	andeq	r9, r1, r4, lsl lr
   175fc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17600:	sub	sp, sp, #72	; 0x48
   17604:	mov	r4, r0
   17608:	mov	r6, r1
   1760c:	mov	r3, #0
   17610:	str	r3, [sp, #64]	; 0x40
   17614:	ldr	r3, [pc, #2260]	; 17ef0 <traverse_product@@Base+0xbbc>
   17618:	ldr	r3, [r3, #4]
   1761c:	cmp	r3, #0
   17620:	bne	17664 <traverse_product@@Base+0x330>
   17624:	add	r1, sp, #68	; 0x44
   17628:	mov	r0, r4
   1762c:	bl	12324 <coda_cursor_get_type_class@plt>
   17630:	cmp	r0, #0
   17634:	bne	17708 <traverse_product@@Base+0x3d4>
   17638:	ldr	r3, [sp, #68]	; 0x44
   1763c:	cmp	r3, #6
   17640:	ldrls	pc, [pc, r3, lsl #2]
   17644:	b	17a6c <traverse_product@@Base+0x738>
   17648:	andeq	r7, r1, r0, lsl r7
   1764c:	andeq	r7, r1, r8, ror r9
   17650:	andeq	r7, r1, r4, lsr #21
   17654:	andeq	r7, r1, r4, lsr #21
   17658:	andeq	r7, r1, r4, lsr #21
   1765c:	andeq	r7, r1, r4, lsr #21
   17660:	andeq	r7, r1, r4, asr #27
   17664:	add	r1, sp, #64	; 0x40
   17668:	bl	12318 <coda_cursor_has_attributes@plt>
   1766c:	cmp	r0, #0
   17670:	bne	176e8 <traverse_product@@Base+0x3b4>
   17674:	ldr	r3, [sp, #64]	; 0x40
   17678:	cmp	r3, #0
   1767c:	beq	17624 <traverse_product@@Base+0x2f0>
   17680:	cmp	r6, #0
   17684:	bne	176f0 <traverse_product@@Base+0x3bc>
   17688:	ldr	r0, [pc, #2148]	; 17ef4 <traverse_product@@Base+0xbc0>
   1768c:	bl	174b8 <traverse_product@@Base+0x184>
   17690:	mov	r0, r4
   17694:	bl	12498 <coda_cursor_goto_attributes@plt>
   17698:	cmp	r0, #0
   1769c:	bne	17700 <traverse_product@@Base+0x3cc>
   176a0:	ldr	r5, [pc, #2120]	; 17ef0 <traverse_product@@Base+0xbbc>
   176a4:	ldr	r3, [r5]
   176a8:	add	r3, r3, #1
   176ac:	str	r3, [r5]
   176b0:	mov	r1, #1
   176b4:	mov	r0, r4
   176b8:	bl	175fc <traverse_product@@Base+0x2c8>
   176bc:	ldr	r3, [r5]
   176c0:	sub	r3, r3, #1
   176c4:	str	r3, [r5]
   176c8:	mov	r0, r4
   176cc:	bl	123fc <coda_cursor_goto_parent@plt>
   176d0:	ldr	r0, [pc, #2080]	; 17ef8 <traverse_product@@Base+0xbc4>
   176d4:	bl	1747c <traverse_product@@Base+0x148>
   176d8:	ldr	r3, [r5]
   176dc:	add	r3, r3, #1
   176e0:	str	r3, [r5]
   176e4:	b	17624 <traverse_product@@Base+0x2f0>
   176e8:	bl	1853c <handle_coda_error@@Base>
   176ec:	b	17674 <traverse_product@@Base+0x340>
   176f0:	ldr	r0, [pc, #2052]	; 17efc <traverse_product@@Base+0xbc8>
   176f4:	bl	174b8 <traverse_product@@Base+0x184>
   176f8:	bl	17404 <traverse_product@@Base+0xd0>
   176fc:	b	17688 <traverse_product@@Base+0x354>
   17700:	bl	1853c <handle_coda_error@@Base>
   17704:	b	176a0 <traverse_product@@Base+0x36c>
   17708:	bl	1853c <handle_coda_error@@Base>
   1770c:	b	17638 <traverse_product@@Base+0x304>
   17710:	add	r1, sp, #8
   17714:	mov	r0, r4
   17718:	bl	1227c <coda_cursor_get_num_elements@plt>
   1771c:	cmp	r0, #0
   17720:	bne	177f4 <traverse_product@@Base+0x4c0>
   17724:	ldr	r3, [sp, #8]
   17728:	cmp	r3, #0
   1772c:	ble	1796c <traverse_product@@Base+0x638>
   17730:	cmp	r6, #0
   17734:	bne	177fc <traverse_product@@Base+0x4c8>
   17738:	add	r1, sp, #12
   1773c:	mov	r0, r4
   17740:	bl	122dc <coda_cursor_get_type@plt>
   17744:	cmp	r0, #0
   17748:	bne	17808 <traverse_product@@Base+0x4d4>
   1774c:	add	r1, sp, #16
   17750:	ldr	r0, [sp, #12]
   17754:	bl	124e0 <coda_type_get_record_union_status@plt>
   17758:	cmp	r0, #0
   1775c:	bne	17810 <traverse_product@@Base+0x4dc>
   17760:	ldr	r3, [sp, #16]
   17764:	cmp	r3, #0
   17768:	beq	17838 <traverse_product@@Base+0x504>
   1776c:	add	r1, sp, #20
   17770:	mov	r0, r4
   17774:	bl	125d0 <coda_cursor_get_available_union_field_index@plt>
   17778:	cmp	r0, #0
   1777c:	bne	17818 <traverse_product@@Base+0x4e4>
   17780:	add	r2, sp, #32
   17784:	ldr	r1, [sp, #20]
   17788:	ldr	r0, [sp, #12]
   1778c:	bl	12618 <coda_type_get_record_field_name@plt>
   17790:	cmp	r0, #0
   17794:	bne	17820 <traverse_product@@Base+0x4ec>
   17798:	ldr	r1, [sp, #20]
   1779c:	mov	r0, r4
   177a0:	bl	1239c <coda_cursor_goto_record_field_by_index@plt>
   177a4:	cmp	r0, #0
   177a8:	bne	17828 <traverse_product@@Base+0x4f4>
   177ac:	cmp	r6, #0
   177b0:	bne	17830 <traverse_product@@Base+0x4fc>
   177b4:	ldr	r1, [sp, #32]
   177b8:	ldr	r0, [pc, #1856]	; 17f00 <traverse_product@@Base+0xbcc>
   177bc:	bl	174b8 <traverse_product@@Base+0x184>
   177c0:	ldr	r5, [pc, #1832]	; 17ef0 <traverse_product@@Base+0xbbc>
   177c4:	ldr	r3, [r5]
   177c8:	add	r3, r3, #1
   177cc:	str	r3, [r5]
   177d0:	mov	r1, #1
   177d4:	mov	r0, r4
   177d8:	bl	175fc <traverse_product@@Base+0x2c8>
   177dc:	ldr	r3, [r5]
   177e0:	sub	r3, r3, #1
   177e4:	str	r3, [r5]
   177e8:	mov	r0, r4
   177ec:	bl	123fc <coda_cursor_goto_parent@plt>
   177f0:	b	17a6c <traverse_product@@Base+0x738>
   177f4:	bl	1853c <handle_coda_error@@Base>
   177f8:	b	17724 <traverse_product@@Base+0x3f0>
   177fc:	ldr	r0, [pc, #1784]	; 17efc <traverse_product@@Base+0xbc8>
   17800:	bl	174b8 <traverse_product@@Base+0x184>
   17804:	b	17738 <traverse_product@@Base+0x404>
   17808:	bl	1853c <handle_coda_error@@Base>
   1780c:	b	1774c <traverse_product@@Base+0x418>
   17810:	bl	1853c <handle_coda_error@@Base>
   17814:	b	17760 <traverse_product@@Base+0x42c>
   17818:	bl	1853c <handle_coda_error@@Base>
   1781c:	b	17780 <traverse_product@@Base+0x44c>
   17820:	bl	1853c <handle_coda_error@@Base>
   17824:	b	17798 <traverse_product@@Base+0x464>
   17828:	bl	1853c <handle_coda_error@@Base>
   1782c:	b	177ac <traverse_product@@Base+0x478>
   17830:	bl	17404 <traverse_product@@Base+0xd0>
   17834:	b	177b4 <traverse_product@@Base+0x480>
   17838:	mov	r0, r4
   1783c:	bl	12390 <coda_cursor_goto_first_record_field@plt>
   17840:	cmp	r0, #0
   17844:	bne	17874 <traverse_product@@Base+0x540>
   17848:	mov	r3, #0
   1784c:	str	r3, [sp, #20]
   17850:	ldr	r3, [sp, #8]
   17854:	cmp	r3, #0
   17858:	ble	17960 <traverse_product@@Base+0x62c>
   1785c:	mov	r1, #0
   17860:	mov	r5, #1
   17864:	ldr	r9, [pc, #1684]	; 17f00 <traverse_product@@Base+0xbcc>
   17868:	ldr	r7, [pc, #1664]	; 17ef0 <traverse_product@@Base+0xbbc>
   1786c:	mov	r8, r5
   17870:	b	17914 <traverse_product@@Base+0x5e0>
   17874:	bl	1853c <handle_coda_error@@Base>
   17878:	b	17848 <traverse_product@@Base+0x514>
   1787c:	bl	1853c <handle_coda_error@@Base>
   17880:	b	17928 <traverse_product@@Base+0x5f4>
   17884:	add	r2, sp, #24
   17888:	ldr	r1, [sp, #20]
   1788c:	ldr	r0, [sp, #12]
   17890:	bl	12618 <coda_type_get_record_field_name@plt>
   17894:	cmp	r0, #0
   17898:	bne	178ec <traverse_product@@Base+0x5b8>
   1789c:	clz	r5, r5
   178a0:	lsr	r5, r5, #5
   178a4:	cmp	r6, #0
   178a8:	orrne	r5, r5, #1
   178ac:	cmp	r5, #0
   178b0:	bne	178f4 <traverse_product@@Base+0x5c0>
   178b4:	ldr	r1, [sp, #24]
   178b8:	mov	r0, r9
   178bc:	bl	174b8 <traverse_product@@Base+0x184>
   178c0:	ldr	r3, [r7]
   178c4:	add	r3, r3, #1
   178c8:	str	r3, [r7]
   178cc:	mov	r1, r8
   178d0:	mov	r0, r4
   178d4:	bl	175fc <traverse_product@@Base+0x2c8>
   178d8:	ldr	r3, [r7]
   178dc:	sub	r3, r3, #1
   178e0:	str	r3, [r7]
   178e4:	mov	r5, sl
   178e8:	b	17934 <traverse_product@@Base+0x600>
   178ec:	bl	1853c <handle_coda_error@@Base>
   178f0:	b	1789c <traverse_product@@Base+0x568>
   178f4:	bl	17404 <traverse_product@@Base+0xd0>
   178f8:	b	178b4 <traverse_product@@Base+0x580>
   178fc:	ldr	r1, [sp, #20]
   17900:	add	r1, r1, #1
   17904:	str	r1, [sp, #20]
   17908:	ldr	r3, [sp, #8]
   1790c:	cmp	r3, r1
   17910:	ble	17960 <traverse_product@@Base+0x62c>
   17914:	add	r2, sp, #32
   17918:	ldr	r0, [sp, #12]
   1791c:	bl	1221c <coda_type_get_record_field_hidden_status@plt>
   17920:	cmp	r0, #0
   17924:	bne	1787c <traverse_product@@Base+0x548>
   17928:	ldr	sl, [sp, #32]
   1792c:	cmp	sl, #0
   17930:	beq	17884 <traverse_product@@Base+0x550>
   17934:	ldr	r3, [sp, #8]
   17938:	sub	r3, r3, #1
   1793c:	ldr	r2, [sp, #20]
   17940:	cmp	r3, r2
   17944:	ble	178fc <traverse_product@@Base+0x5c8>
   17948:	mov	r0, r4
   1794c:	bl	12588 <coda_cursor_goto_next_record_field@plt>
   17950:	cmp	r0, #0
   17954:	beq	178fc <traverse_product@@Base+0x5c8>
   17958:	bl	1853c <handle_coda_error@@Base>
   1795c:	b	178fc <traverse_product@@Base+0x5c8>
   17960:	mov	r0, r4
   17964:	bl	123fc <coda_cursor_goto_parent@plt>
   17968:	b	17a6c <traverse_product@@Base+0x738>
   1796c:	ldr	r0, [pc, #1424]	; 17f04 <traverse_product@@Base+0xbd0>
   17970:	bl	174b8 <traverse_product@@Base+0x184>
   17974:	b	17a6c <traverse_product@@Base+0x738>
   17978:	add	r2, sp, #32
   1797c:	add	r1, sp, #24
   17980:	mov	r0, r4
   17984:	bl	12528 <coda_cursor_get_array_dim@plt>
   17988:	cmp	r0, #0
   1798c:	bne	179f4 <traverse_product@@Base+0x6c0>
   17990:	ldr	r1, [sp, #24]
   17994:	cmp	r1, #0
   17998:	blt	17a98 <traverse_product@@Base+0x764>
   1799c:	ble	179fc <traverse_product@@Base+0x6c8>
   179a0:	add	r3, sp, #32
   179a4:	add	r1, r3, r1, lsl #2
   179a8:	mov	r7, #1
   179ac:	ldr	r2, [r3], #4
   179b0:	mul	r7, r2, r7
   179b4:	cmp	r3, r1
   179b8:	bne	179ac <traverse_product@@Base+0x678>
   179bc:	cmp	r7, #0
   179c0:	ble	17a8c <traverse_product@@Base+0x758>
   179c4:	ldr	r0, [pc, #1328]	; 17efc <traverse_product@@Base+0xbc8>
   179c8:	bl	174b8 <traverse_product@@Base+0x184>
   179cc:	mov	r0, r4
   179d0:	bl	1236c <coda_cursor_goto_first_array_element@plt>
   179d4:	cmp	r0, #0
   179d8:	bne	17a04 <traverse_product@@Base+0x6d0>
   179dc:	mov	r6, #0
   179e0:	ldr	sl, [pc, #1312]	; 17f08 <traverse_product@@Base+0xbd4>
   179e4:	ldr	r5, [pc, #1284]	; 17ef0 <traverse_product@@Base+0xbbc>
   179e8:	mov	r9, r6
   179ec:	sub	r8, r7, #1
   179f0:	b	17a18 <traverse_product@@Base+0x6e4>
   179f4:	bl	1853c <handle_coda_error@@Base>
   179f8:	b	17990 <traverse_product@@Base+0x65c>
   179fc:	mov	r7, #1
   17a00:	b	179c4 <traverse_product@@Base+0x690>
   17a04:	bl	1853c <handle_coda_error@@Base>
   17a08:	b	179dc <traverse_product@@Base+0x6a8>
   17a0c:	add	r6, r6, #1
   17a10:	cmp	r7, r6
   17a14:	ble	17a64 <traverse_product@@Base+0x730>
   17a18:	mov	r0, sl
   17a1c:	bl	1747c <traverse_product@@Base+0x148>
   17a20:	ldr	r3, [r5]
   17a24:	add	r3, r3, #1
   17a28:	str	r3, [r5]
   17a2c:	mov	r1, r9
   17a30:	mov	r0, r4
   17a34:	bl	175fc <traverse_product@@Base+0x2c8>
   17a38:	ldr	r3, [r5]
   17a3c:	sub	r3, r3, #1
   17a40:	str	r3, [r5]
   17a44:	cmp	r8, r6
   17a48:	ble	17a0c <traverse_product@@Base+0x6d8>
   17a4c:	mov	r0, r4
   17a50:	bl	12468 <coda_cursor_goto_next_array_element@plt>
   17a54:	cmp	r0, #0
   17a58:	beq	17a0c <traverse_product@@Base+0x6d8>
   17a5c:	bl	1853c <handle_coda_error@@Base>
   17a60:	b	17a0c <traverse_product@@Base+0x6d8>
   17a64:	mov	r0, r4
   17a68:	bl	123fc <coda_cursor_goto_parent@plt>
   17a6c:	ldr	r3, [sp, #64]	; 0x40
   17a70:	cmp	r3, #0
   17a74:	ldrne	r2, [pc, #1140]	; 17ef0 <traverse_product@@Base+0xbbc>
   17a78:	ldrne	r3, [r2]
   17a7c:	subne	r3, r3, #1
   17a80:	strne	r3, [r2]
   17a84:	add	sp, sp, #72	; 0x48
   17a88:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17a8c:	ldr	r0, [pc, #1144]	; 17f0c <traverse_product@@Base+0xbd8>
   17a90:	bl	174b8 <traverse_product@@Base+0x184>
   17a94:	b	17a6c <traverse_product@@Base+0x738>
   17a98:	ldr	r0, [pc, #1132]	; 17f0c <traverse_product@@Base+0xbd8>
   17a9c:	bl	174b8 <traverse_product@@Base+0x184>
   17aa0:	b	17a6c <traverse_product@@Base+0x738>
   17aa4:	add	r1, sp, #20
   17aa8:	mov	r0, r4
   17aac:	bl	123c0 <coda_cursor_get_read_type@plt>
   17ab0:	cmp	r0, #0
   17ab4:	bne	17b04 <traverse_product@@Base+0x7d0>
   17ab8:	ldr	r3, [sp, #20]
   17abc:	add	r3, r3, #1
   17ac0:	cmp	r3, #13
   17ac4:	ldrls	pc, [pc, r3, lsl #2]
   17ac8:	b	17a6c <traverse_product@@Base+0x738>
   17acc:			; <UNDEFINED> instruction: 0x00017db8
   17ad0:			; <UNDEFINED> instruction: 0x00017cb8
   17ad4:	andeq	r7, r1, r4, ror #25
   17ad8:			; <UNDEFINED> instruction: 0x00017cb8
   17adc:	andeq	r7, r1, r4, ror #25
   17ae0:			; <UNDEFINED> instruction: 0x00017cb8
   17ae4:	andeq	r7, r1, r4, ror #25
   17ae8:	andeq	r7, r1, r0, lsl sp
   17aec:	andeq	r7, r1, r8, asr #26
   17af0:	andeq	r7, r1, r0, lsl #27
   17af4:	andeq	r7, r1, r0, lsl #27
   17af8:	andeq	r7, r1, ip, lsl #22
   17afc:	andeq	r7, r1, r8, asr #22
   17b00:	strdeq	r7, [r1], -r0
   17b04:	bl	1853c <handle_coda_error@@Base>
   17b08:	b	17ab8 <traverse_product@@Base+0x784>
   17b0c:	add	r1, sp, #32
   17b10:	mov	r0, r4
   17b14:	bl	124a4 <coda_cursor_read_char@plt>
   17b18:	cmp	r0, #0
   17b1c:	bne	17b40 <traverse_product@@Base+0x80c>
   17b20:	ldr	r0, [pc, #1000]	; 17f10 <traverse_product@@Base+0xbdc>
   17b24:	bl	174b8 <traverse_product@@Base+0x184>
   17b28:	mov	r1, #1
   17b2c:	add	r0, sp, #32
   17b30:	bl	174f0 <traverse_product@@Base+0x1bc>
   17b34:	ldr	r0, [pc, #984]	; 17f14 <traverse_product@@Base+0xbe0>
   17b38:	bl	174b8 <traverse_product@@Base+0x184>
   17b3c:	b	17a6c <traverse_product@@Base+0x738>
   17b40:	bl	1853c <handle_coda_error@@Base>
   17b44:	b	17b20 <traverse_product@@Base+0x7ec>
   17b48:	add	r1, sp, #32
   17b4c:	mov	r0, r4
   17b50:	bl	1242c <coda_cursor_get_string_length@plt>
   17b54:	cmp	r0, #0
   17b58:	bne	17bb8 <traverse_product@@Base+0x884>
   17b5c:	ldr	r0, [sp, #32]
   17b60:	add	r0, r0, #1
   17b64:	bl	123cc <malloc@plt>
   17b68:	subs	r5, r0, #0
   17b6c:	beq	17bc0 <traverse_product@@Base+0x88c>
   17b70:	ldr	r2, [sp, #32]
   17b74:	add	r2, r2, #1
   17b78:	mov	r1, r5
   17b7c:	mov	r0, r4
   17b80:	bl	123f0 <coda_cursor_read_string@plt>
   17b84:	cmp	r0, #0
   17b88:	bne	17be8 <traverse_product@@Base+0x8b4>
   17b8c:	ldr	r0, [pc, #892]	; 17f10 <traverse_product@@Base+0xbdc>
   17b90:	bl	174b8 <traverse_product@@Base+0x184>
   17b94:	ldr	r1, [sp, #32]
   17b98:	mov	r0, r5
   17b9c:	bl	174f0 <traverse_product@@Base+0x1bc>
   17ba0:	ldr	r1, [sp, #32]
   17ba4:	ldr	r0, [pc, #872]	; 17f14 <traverse_product@@Base+0xbe0>
   17ba8:	bl	174b8 <traverse_product@@Base+0x184>
   17bac:	mov	r0, r5
   17bb0:	bl	12294 <free@plt>
   17bb4:	b	17a6c <traverse_product@@Base+0x738>
   17bb8:	bl	1853c <handle_coda_error@@Base>
   17bbc:	b	17b5c <traverse_product@@Base+0x828>
   17bc0:	ldr	r3, [pc, #848]	; 17f18 <traverse_product@@Base+0xbe4>
   17bc4:	str	r3, [sp]
   17bc8:	ldr	r3, [pc, #844]	; 17f1c <traverse_product@@Base+0xbe8>
   17bcc:	ldr	r2, [sp, #32]
   17bd0:	add	r2, r2, #1
   17bd4:	ldr	r1, [pc, #836]	; 17f20 <traverse_product@@Base+0xbec>
   17bd8:	mvn	r0, #0
   17bdc:	bl	1224c <coda_set_error@plt>
   17be0:	bl	1853c <handle_coda_error@@Base>
   17be4:	b	17b70 <traverse_product@@Base+0x83c>
   17be8:	bl	1853c <handle_coda_error@@Base>
   17bec:	b	17b8c <traverse_product@@Base+0x858>
   17bf0:	add	r1, sp, #32
   17bf4:	mov	r0, r4
   17bf8:	bl	125ac <coda_cursor_get_bit_size@plt>
   17bfc:	cmp	r0, #0
   17c00:	bne	17c84 <traverse_product@@Base+0x950>
   17c04:	ldrd	r0, [sp, #32]
   17c08:	and	r2, r0, #7
   17c0c:	mov	r3, #0
   17c10:	orrs	r3, r2, r3
   17c14:	movne	ip, #1
   17c18:	moveq	ip, #0
   17c1c:	lsr	r6, r0, #3
   17c20:	orr	r6, r6, r1, lsl #29
   17c24:	adds	r6, r6, ip
   17c28:	mov	r0, r6
   17c2c:	bl	123cc <malloc@plt>
   17c30:	subs	r5, r0, #0
   17c34:	beq	17c8c <traverse_product@@Base+0x958>
   17c38:	ldrd	r2, [sp, #32]
   17c3c:	strd	r2, [sp]
   17c40:	mov	r2, #0
   17c44:	mov	r3, #0
   17c48:	mov	r1, r5
   17c4c:	mov	r0, r4
   17c50:	bl	1263c <coda_cursor_read_bits@plt>
   17c54:	cmp	r0, #0
   17c58:	bne	17cb0 <traverse_product@@Base+0x97c>
   17c5c:	ldr	r0, [pc, #684]	; 17f10 <traverse_product@@Base+0xbdc>
   17c60:	bl	174b8 <traverse_product@@Base+0x184>
   17c64:	mov	r1, r6
   17c68:	mov	r0, r5
   17c6c:	bl	174f0 <traverse_product@@Base+0x1bc>
   17c70:	ldr	r0, [pc, #668]	; 17f14 <traverse_product@@Base+0xbe0>
   17c74:	bl	174b8 <traverse_product@@Base+0x184>
   17c78:	mov	r0, r5
   17c7c:	bl	12294 <free@plt>
   17c80:	b	17a6c <traverse_product@@Base+0x738>
   17c84:	bl	1853c <handle_coda_error@@Base>
   17c88:	b	17c04 <traverse_product@@Base+0x8d0>
   17c8c:	mov	r3, #392	; 0x188
   17c90:	str	r3, [sp]
   17c94:	ldr	r3, [pc, #640]	; 17f1c <traverse_product@@Base+0xbe8>
   17c98:	mov	r2, r6
   17c9c:	ldr	r1, [pc, #636]	; 17f20 <traverse_product@@Base+0xbec>
   17ca0:	mvn	r0, #0
   17ca4:	bl	1224c <coda_set_error@plt>
   17ca8:	bl	1853c <handle_coda_error@@Base>
   17cac:	b	17c38 <traverse_product@@Base+0x904>
   17cb0:	bl	1853c <handle_coda_error@@Base>
   17cb4:	b	17c5c <traverse_product@@Base+0x928>
   17cb8:	add	r1, sp, #32
   17cbc:	mov	r0, r4
   17cc0:	bl	125dc <coda_cursor_read_int32@plt>
   17cc4:	cmp	r0, #0
   17cc8:	bne	17cdc <traverse_product@@Base+0x9a8>
   17ccc:	ldr	r1, [sp, #32]
   17cd0:	ldr	r0, [pc, #588]	; 17f24 <traverse_product@@Base+0xbf0>
   17cd4:	bl	174b8 <traverse_product@@Base+0x184>
   17cd8:	b	17a6c <traverse_product@@Base+0x738>
   17cdc:	bl	1853c <handle_coda_error@@Base>
   17ce0:	b	17ccc <traverse_product@@Base+0x998>
   17ce4:	add	r1, sp, #32
   17ce8:	mov	r0, r4
   17cec:	bl	122b8 <coda_cursor_read_uint32@plt>
   17cf0:	cmp	r0, #0
   17cf4:	bne	17d08 <traverse_product@@Base+0x9d4>
   17cf8:	ldr	r1, [sp, #32]
   17cfc:	ldr	r0, [pc, #548]	; 17f28 <traverse_product@@Base+0xbf4>
   17d00:	bl	174b8 <traverse_product@@Base+0x184>
   17d04:	b	17a6c <traverse_product@@Base+0x738>
   17d08:	bl	1853c <handle_coda_error@@Base>
   17d0c:	b	17cf8 <traverse_product@@Base+0x9c4>
   17d10:	add	r1, sp, #24
   17d14:	mov	r0, r4
   17d18:	bl	1254c <coda_cursor_read_int64@plt>
   17d1c:	cmp	r0, #0
   17d20:	bne	17d40 <traverse_product@@Base+0xa0c>
   17d24:	add	r2, sp, #32
   17d28:	ldrd	r0, [sp, #24]
   17d2c:	bl	12648 <coda_str64@plt>
   17d30:	add	r1, sp, #32
   17d34:	ldr	r0, [pc, #496]	; 17f2c <traverse_product@@Base+0xbf8>
   17d38:	bl	174b8 <traverse_product@@Base+0x184>
   17d3c:	b	17a6c <traverse_product@@Base+0x738>
   17d40:	bl	1853c <handle_coda_error@@Base>
   17d44:	b	17d24 <traverse_product@@Base+0x9f0>
   17d48:	add	r1, sp, #24
   17d4c:	mov	r0, r4
   17d50:	bl	12438 <coda_cursor_read_uint64@plt>
   17d54:	cmp	r0, #0
   17d58:	bne	17d78 <traverse_product@@Base+0xa44>
   17d5c:	add	r2, sp, #32
   17d60:	ldrd	r0, [sp, #24]
   17d64:	bl	12288 <coda_str64u@plt>
   17d68:	add	r1, sp, #32
   17d6c:	ldr	r0, [pc, #440]	; 17f2c <traverse_product@@Base+0xbf8>
   17d70:	bl	174b8 <traverse_product@@Base+0x184>
   17d74:	b	17a6c <traverse_product@@Base+0x738>
   17d78:	bl	1853c <handle_coda_error@@Base>
   17d7c:	b	17d5c <traverse_product@@Base+0xa28>
   17d80:	add	r1, sp, #32
   17d84:	mov	r0, r4
   17d88:	bl	12444 <coda_cursor_read_double@plt>
   17d8c:	cmp	r0, #0
   17d90:	bne	17db0 <traverse_product@@Base+0xa7c>
   17d94:	ldr	r3, [sp, #20]
   17d98:	cmp	r3, #8
   17d9c:	ldrd	r2, [sp, #32]
   17da0:	ldreq	r0, [pc, #392]	; 17f30 <traverse_product@@Base+0xbfc>
   17da4:	ldrne	r0, [pc, #392]	; 17f34 <traverse_product@@Base+0xc00>
   17da8:	bl	174b8 <traverse_product@@Base+0x184>
   17dac:	b	17a6c <traverse_product@@Base+0x738>
   17db0:	bl	1853c <handle_coda_error@@Base>
   17db4:	b	17d94 <traverse_product@@Base+0xa60>
   17db8:	ldr	r0, [pc, #376]	; 17f38 <traverse_product@@Base+0xc04>
   17dbc:	bl	174b8 <traverse_product@@Base+0x184>
   17dc0:	b	17a6c <traverse_product@@Base+0x738>
   17dc4:	add	r1, sp, #20
   17dc8:	mov	r0, r4
   17dcc:	bl	12360 <coda_cursor_get_special_type@plt>
   17dd0:	cmp	r0, #0
   17dd4:	bne	17df8 <traverse_product@@Base+0xac4>
   17dd8:	ldr	r3, [sp, #20]
   17ddc:	cmp	r3, #3
   17de0:	ldrls	pc, [pc, r3, lsl #2]
   17de4:	b	17a6c <traverse_product@@Base+0x738>
   17de8:	andeq	r7, r1, r0, lsl #28
   17dec:	andeq	r7, r1, ip, lsl #28
   17df0:	andeq	r7, r1, r8, lsr lr
   17df4:			; <UNDEFINED> instruction: 0x00017eb8
   17df8:	bl	1853c <handle_coda_error@@Base>
   17dfc:	b	17dd8 <traverse_product@@Base+0xaa4>
   17e00:	ldr	r0, [pc, #304]	; 17f38 <traverse_product@@Base+0xc04>
   17e04:	bl	174b8 <traverse_product@@Base+0x184>
   17e08:	b	17a6c <traverse_product@@Base+0x738>
   17e0c:	add	r1, sp, #32
   17e10:	mov	r0, r4
   17e14:	bl	12444 <coda_cursor_read_double@plt>
   17e18:	cmp	r0, #0
   17e1c:	bne	17e30 <traverse_product@@Base+0xafc>
   17e20:	ldrd	r2, [sp, #32]
   17e24:	ldr	r0, [pc, #264]	; 17f34 <traverse_product@@Base+0xc00>
   17e28:	bl	174b8 <traverse_product@@Base+0x184>
   17e2c:	b	17a6c <traverse_product@@Base+0x738>
   17e30:	bl	1853c <handle_coda_error@@Base>
   17e34:	b	17e20 <traverse_product@@Base+0xaec>
   17e38:	add	r1, sp, #24
   17e3c:	mov	r0, r4
   17e40:	bl	12444 <coda_cursor_read_double@plt>
   17e44:	cmp	r0, #0
   17e48:	bne	17e7c <traverse_product@@Base+0xb48>
   17e4c:	vldr	d0, [sp, #24]
   17e50:	bl	12450 <coda_isNaN@plt>
   17e54:	cmp	r0, #0
   17e58:	bne	17e6c <traverse_product@@Base+0xb38>
   17e5c:	vldr	d0, [sp, #24]
   17e60:	bl	122f4 <coda_isInf@plt>
   17e64:	cmp	r0, #0
   17e68:	beq	17e84 <traverse_product@@Base+0xb50>
   17e6c:	ldrd	r2, [sp, #24]
   17e70:	ldr	r0, [pc, #188]	; 17f34 <traverse_product@@Base+0xc00>
   17e74:	bl	174b8 <traverse_product@@Base+0x184>
   17e78:	b	17a6c <traverse_product@@Base+0x738>
   17e7c:	bl	1853c <handle_coda_error@@Base>
   17e80:	b	17e4c <traverse_product@@Base+0xb18>
   17e84:	add	r1, sp, #32
   17e88:	ldr	r0, [pc, #172]	; 17f3c <traverse_product@@Base+0xc08>
   17e8c:	vldr	d0, [sp, #24]
   17e90:	bl	12270 <coda_time_double_to_string@plt>
   17e94:	cmp	r0, #0
   17e98:	beq	17ea8 <traverse_product@@Base+0xb74>
   17e9c:	ldr	r0, [pc, #156]	; 17f40 <traverse_product@@Base+0xc0c>
   17ea0:	bl	174b8 <traverse_product@@Base+0x184>
   17ea4:	b	17a6c <traverse_product@@Base+0x738>
   17ea8:	add	r1, sp, #32
   17eac:	ldr	r0, [pc, #120]	; 17f2c <traverse_product@@Base+0xbf8>
   17eb0:	bl	174b8 <traverse_product@@Base+0x184>
   17eb4:	b	17a6c <traverse_product@@Base+0x738>
   17eb8:	add	r2, sp, #32
   17ebc:	add	r1, sp, #24
   17ec0:	mov	r0, r4
   17ec4:	bl	124ec <coda_cursor_read_complex_double_split@plt>
   17ec8:	cmp	r0, #0
   17ecc:	bne	17ee8 <traverse_product@@Base+0xbb4>
   17ed0:	ldrd	r2, [sp, #32]
   17ed4:	strd	r2, [sp]
   17ed8:	ldrd	r2, [sp, #24]
   17edc:	ldr	r0, [pc, #96]	; 17f44 <traverse_product@@Base+0xc10>
   17ee0:	bl	174b8 <traverse_product@@Base+0x184>
   17ee4:	b	17a6c <traverse_product@@Base+0x738>
   17ee8:	bl	1853c <handle_coda_error@@Base>
   17eec:	b	17ed0 <traverse_product@@Base+0xb9c>
   17ef0:	andeq	ip, r2, ip, asr #3
   17ef4:	strdeq	sl, [r1], -r4
   17ef8:	strdeq	sl, [r1], -ip
   17efc:	andeq	fp, r1, r0, lsr r6
   17f00:	andeq	sl, r1, r4, lsl #10
   17f04:	andeq	sl, r1, ip, lsl #10
   17f08:	andeq	sl, r1, r0, lsl r5
   17f0c:	andeq	sl, r1, r4, lsl r5
   17f10:	andeq	sl, r1, r8, asr r4
   17f14:	andeq	sl, r1, r8, lsl r5
   17f18:	andeq	r0, r0, r9, ror #2
   17f1c:	andeq	sl, r1, r8, lsr #9
   17f20:	andeq	r9, r1, ip, asr #27
   17f24:	andeq	r9, r1, r0, asr pc
   17f28:	andeq	r9, r1, r8, asr pc
   17f2c:	andeq	r9, r1, r0, ror #30
   17f30:	andeq	r9, r1, r4, ror #30
   17f34:	andeq	r9, r1, ip, ror #30
   17f38:	andeq	sl, r1, ip, lsl r5
   17f3c:	andeq	sl, r1, ip, asr r3
   17f40:	andeq	sl, r1, ip, ror r3
   17f44:	andeq	sl, r1, r4, lsr #10

00017f48 <print_yaml_data@@Base>:
   17f48:	push	{r4, lr}
   17f4c:	sub	sp, sp, #528	; 0x210
   17f50:	ldr	r3, [pc, #200]	; 18020 <print_yaml_data@@Base+0xd8>
   17f54:	str	r0, [r3, #4]
   17f58:	add	r1, sp, #524	; 0x20c
   17f5c:	ldr	r3, [pc, #192]	; 18024 <print_yaml_data@@Base+0xdc>
   17f60:	ldr	r0, [r3]
   17f64:	bl	12258 <coda_open@plt>
   17f68:	cmp	r0, #0
   17f6c:	bne	17fc8 <print_yaml_data@@Base+0x80>
   17f70:	ldr	r1, [sp, #524]	; 0x20c
   17f74:	mov	r0, sp
   17f78:	bl	12384 <coda_cursor_set_product@plt>
   17f7c:	cmp	r0, #0
   17f80:	bne	18010 <print_yaml_data@@Base+0xc8>
   17f84:	ldr	r3, [pc, #156]	; 18028 <print_yaml_data@@Base+0xe0>
   17f88:	ldr	r1, [r3]
   17f8c:	cmp	r1, #0
   17f90:	beq	17fa4 <print_yaml_data@@Base+0x5c>
   17f94:	mov	r0, sp
   17f98:	bl	12564 <coda_cursor_goto@plt>
   17f9c:	cmp	r0, #0
   17fa0:	bne	18018 <print_yaml_data@@Base+0xd0>
   17fa4:	mov	r0, #0
   17fa8:	bl	121f8 <coda_set_option_perform_boundary_checks@plt>
   17fac:	mov	r1, #0
   17fb0:	mov	r0, sp
   17fb4:	bl	175fc <traverse_product@@Base+0x2c8>
   17fb8:	ldr	r0, [sp, #524]	; 0x20c
   17fbc:	bl	12540 <coda_close@plt>
   17fc0:	add	sp, sp, #528	; 0x210
   17fc4:	pop	{r4, pc}
   17fc8:	bl	12600 <coda_get_errno@plt>
   17fcc:	ldr	r3, [r0]
   17fd0:	cmn	r3, #21
   17fd4:	beq	17fe0 <print_yaml_data@@Base+0x98>
   17fd8:	bl	1853c <handle_coda_error@@Base>
   17fdc:	b	17f70 <print_yaml_data@@Base+0x28>
   17fe0:	mov	r0, #0
   17fe4:	bl	122a0 <coda_set_option_use_mmap@plt>
   17fe8:	add	r1, sp, #524	; 0x20c
   17fec:	ldr	r3, [pc, #48]	; 18024 <print_yaml_data@@Base+0xdc>
   17ff0:	ldr	r0, [r3]
   17ff4:	bl	12258 <coda_open@plt>
   17ff8:	mov	r4, r0
   17ffc:	mov	r0, #1
   18000:	bl	122a0 <coda_set_option_use_mmap@plt>
   18004:	cmp	r4, #0
   18008:	bne	17fd8 <print_yaml_data@@Base+0x90>
   1800c:	b	17f70 <print_yaml_data@@Base+0x28>
   18010:	bl	1853c <handle_coda_error@@Base>
   18014:	b	17f84 <print_yaml_data@@Base+0x3c>
   18018:	bl	1853c <handle_coda_error@@Base>
   1801c:	b	17fa4 <print_yaml_data@@Base+0x5c>
   18020:	andeq	ip, r2, ip, asr #3
   18024:	strdeq	ip, [r2], -r0
   18028:	strheq	sp, [r2], -r0
   1802c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18030:	ldr	r0, [pc, #984]	; 18410 <print_yaml_data@@Base+0x4c8>
   18034:	bl	123b4 <puts@plt>
   18038:	ldr	r0, [pc, #980]	; 18414 <print_yaml_data@@Base+0x4cc>
   1803c:	bl	123b4 <puts@plt>
   18040:	ldr	r0, [pc, #976]	; 18418 <print_yaml_data@@Base+0x4d0>
   18044:	bl	123b4 <puts@plt>
   18048:	ldr	fp, [pc, #972]	; 1841c <print_yaml_data@@Base+0x4d4>
   1804c:	mov	r0, fp
   18050:	bl	123b4 <puts@plt>
   18054:	ldr	r0, [pc, #964]	; 18420 <print_yaml_data@@Base+0x4d8>
   18058:	bl	123b4 <puts@plt>
   1805c:	ldr	r0, [pc, #960]	; 18424 <print_yaml_data@@Base+0x4dc>
   18060:	bl	123b4 <puts@plt>
   18064:	ldr	r8, [pc, #956]	; 18428 <print_yaml_data@@Base+0x4e0>
   18068:	mov	r0, r8
   1806c:	bl	123b4 <puts@plt>
   18070:	ldr	r7, [pc, #948]	; 1842c <print_yaml_data@@Base+0x4e4>
   18074:	mov	r0, r7
   18078:	bl	123b4 <puts@plt>
   1807c:	ldr	sl, [pc, #940]	; 18430 <print_yaml_data@@Base+0x4e8>
   18080:	mov	r0, sl
   18084:	bl	123b4 <puts@plt>
   18088:	ldr	r9, [pc, #932]	; 18434 <print_yaml_data@@Base+0x4ec>
   1808c:	mov	r0, r9
   18090:	bl	123b4 <puts@plt>
   18094:	ldr	r0, [pc, #924]	; 18438 <print_yaml_data@@Base+0x4f0>
   18098:	bl	123b4 <puts@plt>
   1809c:	ldr	r0, [pc, #920]	; 1843c <print_yaml_data@@Base+0x4f4>
   180a0:	bl	123b4 <puts@plt>
   180a4:	ldr	r0, [pc, #916]	; 18440 <print_yaml_data@@Base+0x4f8>
   180a8:	bl	123b4 <puts@plt>
   180ac:	ldr	r0, [pc, #912]	; 18444 <print_yaml_data@@Base+0x4fc>
   180b0:	bl	123b4 <puts@plt>
   180b4:	ldr	r0, [pc, #908]	; 18448 <print_yaml_data@@Base+0x500>
   180b8:	bl	123b4 <puts@plt>
   180bc:	ldr	r0, [pc, #904]	; 1844c <print_yaml_data@@Base+0x504>
   180c0:	bl	123b4 <puts@plt>
   180c4:	ldr	r0, [pc, #900]	; 18450 <print_yaml_data@@Base+0x508>
   180c8:	bl	123b4 <puts@plt>
   180cc:	ldr	r0, [pc, #896]	; 18454 <print_yaml_data@@Base+0x50c>
   180d0:	bl	123b4 <puts@plt>
   180d4:	ldr	r0, [pc, #892]	; 18458 <print_yaml_data@@Base+0x510>
   180d8:	bl	123b4 <puts@plt>
   180dc:	ldr	r6, [pc, #888]	; 1845c <print_yaml_data@@Base+0x514>
   180e0:	mov	r0, r6
   180e4:	bl	123b4 <puts@plt>
   180e8:	ldr	r5, [pc, #880]	; 18460 <print_yaml_data@@Base+0x518>
   180ec:	mov	r0, r5
   180f0:	bl	123b4 <puts@plt>
   180f4:	ldr	r4, [pc, #872]	; 18464 <print_yaml_data@@Base+0x51c>
   180f8:	mov	r0, r4
   180fc:	bl	123b4 <puts@plt>
   18100:	ldr	r0, [pc, #864]	; 18468 <print_yaml_data@@Base+0x520>
   18104:	bl	123b4 <puts@plt>
   18108:	mov	r0, #10
   1810c:	bl	124bc <putchar@plt>
   18110:	ldr	r0, [pc, #852]	; 1846c <print_yaml_data@@Base+0x524>
   18114:	bl	123b4 <puts@plt>
   18118:	ldr	r0, [pc, #848]	; 18470 <print_yaml_data@@Base+0x528>
   1811c:	bl	123b4 <puts@plt>
   18120:	mov	r0, fp
   18124:	bl	123b4 <puts@plt>
   18128:	mov	r0, r8
   1812c:	bl	123b4 <puts@plt>
   18130:	mov	r0, r7
   18134:	bl	123b4 <puts@plt>
   18138:	mov	r0, sl
   1813c:	bl	123b4 <puts@plt>
   18140:	mov	r0, r9
   18144:	bl	123b4 <puts@plt>
   18148:	ldr	r0, [pc, #804]	; 18474 <print_yaml_data@@Base+0x52c>
   1814c:	bl	123b4 <puts@plt>
   18150:	ldr	r0, [pc, #800]	; 18478 <print_yaml_data@@Base+0x530>
   18154:	bl	123b4 <puts@plt>
   18158:	ldr	r0, [pc, #796]	; 1847c <print_yaml_data@@Base+0x534>
   1815c:	bl	123b4 <puts@plt>
   18160:	ldr	r0, [pc, #792]	; 18480 <print_yaml_data@@Base+0x538>
   18164:	bl	123b4 <puts@plt>
   18168:	ldr	sl, [pc, #788]	; 18484 <print_yaml_data@@Base+0x53c>
   1816c:	mov	r0, sl
   18170:	bl	123b4 <puts@plt>
   18174:	ldr	r9, [pc, #780]	; 18488 <print_yaml_data@@Base+0x540>
   18178:	mov	r0, r9
   1817c:	bl	123b4 <puts@plt>
   18180:	ldr	r0, [pc, #772]	; 1848c <print_yaml_data@@Base+0x544>
   18184:	bl	123b4 <puts@plt>
   18188:	ldr	r0, [pc, #768]	; 18490 <print_yaml_data@@Base+0x548>
   1818c:	bl	123b4 <puts@plt>
   18190:	ldr	r0, [pc, #764]	; 18494 <print_yaml_data@@Base+0x54c>
   18194:	bl	123b4 <puts@plt>
   18198:	ldr	r0, [pc, #760]	; 18498 <print_yaml_data@@Base+0x550>
   1819c:	bl	123b4 <puts@plt>
   181a0:	ldr	r0, [pc, #756]	; 1849c <print_yaml_data@@Base+0x554>
   181a4:	bl	123b4 <puts@plt>
   181a8:	ldr	r0, [pc, #752]	; 184a0 <print_yaml_data@@Base+0x558>
   181ac:	bl	123b4 <puts@plt>
   181b0:	mov	r0, r6
   181b4:	bl	123b4 <puts@plt>
   181b8:	mov	r0, r5
   181bc:	bl	123b4 <puts@plt>
   181c0:	mov	r0, r4
   181c4:	bl	123b4 <puts@plt>
   181c8:	ldr	r0, [pc, #664]	; 18468 <print_yaml_data@@Base+0x520>
   181cc:	bl	123b4 <puts@plt>
   181d0:	mov	r0, #10
   181d4:	bl	124bc <putchar@plt>
   181d8:	ldr	r0, [pc, #708]	; 184a4 <print_yaml_data@@Base+0x55c>
   181dc:	bl	123b4 <puts@plt>
   181e0:	ldr	r0, [pc, #704]	; 184a8 <print_yaml_data@@Base+0x560>
   181e4:	bl	123b4 <puts@plt>
   181e8:	ldr	r0, [pc, #700]	; 184ac <print_yaml_data@@Base+0x564>
   181ec:	bl	123b4 <puts@plt>
   181f0:	ldr	r0, [pc, #696]	; 184b0 <print_yaml_data@@Base+0x568>
   181f4:	bl	123b4 <puts@plt>
   181f8:	ldr	r0, [pc, #692]	; 184b4 <print_yaml_data@@Base+0x56c>
   181fc:	bl	123b4 <puts@plt>
   18200:	ldr	r0, [pc, #688]	; 184b8 <print_yaml_data@@Base+0x570>
   18204:	bl	123b4 <puts@plt>
   18208:	mov	r0, r8
   1820c:	bl	123b4 <puts@plt>
   18210:	mov	r0, r7
   18214:	bl	123b4 <puts@plt>
   18218:	mov	r0, sl
   1821c:	bl	123b4 <puts@plt>
   18220:	mov	r0, r9
   18224:	bl	123b4 <puts@plt>
   18228:	ldr	r0, [pc, #652]	; 184bc <print_yaml_data@@Base+0x574>
   1822c:	bl	123b4 <puts@plt>
   18230:	ldr	r0, [pc, #648]	; 184c0 <print_yaml_data@@Base+0x578>
   18234:	bl	123b4 <puts@plt>
   18238:	ldr	fp, [pc, #644]	; 184c4 <print_yaml_data@@Base+0x57c>
   1823c:	mov	r0, fp
   18240:	bl	123b4 <puts@plt>
   18244:	mov	r0, r6
   18248:	bl	123b4 <puts@plt>
   1824c:	mov	r0, r5
   18250:	bl	123b4 <puts@plt>
   18254:	mov	r0, r4
   18258:	bl	123b4 <puts@plt>
   1825c:	ldr	r0, [pc, #516]	; 18468 <print_yaml_data@@Base+0x520>
   18260:	bl	123b4 <puts@plt>
   18264:	mov	r0, #10
   18268:	bl	124bc <putchar@plt>
   1826c:	ldr	r0, [pc, #596]	; 184c8 <print_yaml_data@@Base+0x580>
   18270:	bl	123b4 <puts@plt>
   18274:	ldr	r0, [pc, #592]	; 184cc <print_yaml_data@@Base+0x584>
   18278:	bl	123b4 <puts@plt>
   1827c:	ldr	r0, [pc, #588]	; 184d0 <print_yaml_data@@Base+0x588>
   18280:	bl	123b4 <puts@plt>
   18284:	ldr	r0, [pc, #548]	; 184b0 <print_yaml_data@@Base+0x568>
   18288:	bl	123b4 <puts@plt>
   1828c:	ldr	r0, [pc, #544]	; 184b4 <print_yaml_data@@Base+0x56c>
   18290:	bl	123b4 <puts@plt>
   18294:	ldr	r0, [pc, #568]	; 184d4 <print_yaml_data@@Base+0x58c>
   18298:	bl	123b4 <puts@plt>
   1829c:	ldr	r0, [pc, #564]	; 184d8 <print_yaml_data@@Base+0x590>
   182a0:	bl	123b4 <puts@plt>
   182a4:	mov	r0, r8
   182a8:	bl	123b4 <puts@plt>
   182ac:	mov	r0, r7
   182b0:	bl	123b4 <puts@plt>
   182b4:	mov	r0, sl
   182b8:	bl	123b4 <puts@plt>
   182bc:	mov	r0, r9
   182c0:	bl	123b4 <puts@plt>
   182c4:	ldr	r0, [pc, #496]	; 184bc <print_yaml_data@@Base+0x574>
   182c8:	bl	123b4 <puts@plt>
   182cc:	ldr	r0, [pc, #492]	; 184c0 <print_yaml_data@@Base+0x578>
   182d0:	bl	123b4 <puts@plt>
   182d4:	mov	r0, fp
   182d8:	bl	123b4 <puts@plt>
   182dc:	mov	r0, r6
   182e0:	bl	123b4 <puts@plt>
   182e4:	mov	r0, r5
   182e8:	bl	123b4 <puts@plt>
   182ec:	mov	r0, r4
   182f0:	bl	123b4 <puts@plt>
   182f4:	ldr	r0, [pc, #364]	; 18468 <print_yaml_data@@Base+0x520>
   182f8:	bl	123b4 <puts@plt>
   182fc:	mov	r0, #10
   18300:	bl	124bc <putchar@plt>
   18304:	ldr	r0, [pc, #464]	; 184dc <print_yaml_data@@Base+0x594>
   18308:	bl	123b4 <puts@plt>
   1830c:	ldr	r0, [pc, #460]	; 184e0 <print_yaml_data@@Base+0x598>
   18310:	bl	123b4 <puts@plt>
   18314:	ldr	r0, [pc, #456]	; 184e4 <print_yaml_data@@Base+0x59c>
   18318:	bl	123b4 <puts@plt>
   1831c:	ldr	r0, [pc, #452]	; 184e8 <print_yaml_data@@Base+0x5a0>
   18320:	bl	123b4 <puts@plt>
   18324:	ldr	r0, [pc, #448]	; 184ec <print_yaml_data@@Base+0x5a4>
   18328:	bl	123b4 <puts@plt>
   1832c:	ldr	r0, [pc, #444]	; 184f0 <print_yaml_data@@Base+0x5a8>
   18330:	bl	123b4 <puts@plt>
   18334:	ldr	r0, [pc, #440]	; 184f4 <print_yaml_data@@Base+0x5ac>
   18338:	bl	123b4 <puts@plt>
   1833c:	mov	r0, sl
   18340:	bl	123b4 <puts@plt>
   18344:	mov	r0, r9
   18348:	bl	123b4 <puts@plt>
   1834c:	ldr	r0, [pc, #360]	; 184bc <print_yaml_data@@Base+0x574>
   18350:	bl	123b4 <puts@plt>
   18354:	ldr	r0, [pc, #356]	; 184c0 <print_yaml_data@@Base+0x578>
   18358:	bl	123b4 <puts@plt>
   1835c:	mov	r0, fp
   18360:	bl	123b4 <puts@plt>
   18364:	ldr	r0, [pc, #396]	; 184f8 <print_yaml_data@@Base+0x5b0>
   18368:	bl	123b4 <puts@plt>
   1836c:	ldr	r0, [pc, #392]	; 184fc <print_yaml_data@@Base+0x5b4>
   18370:	bl	123b4 <puts@plt>
   18374:	ldr	r0, [pc, #388]	; 18500 <print_yaml_data@@Base+0x5b8>
   18378:	bl	123b4 <puts@plt>
   1837c:	ldr	r0, [pc, #384]	; 18504 <print_yaml_data@@Base+0x5bc>
   18380:	bl	123b4 <puts@plt>
   18384:	ldr	r0, [pc, #380]	; 18508 <print_yaml_data@@Base+0x5c0>
   18388:	bl	123b4 <puts@plt>
   1838c:	ldr	r0, [pc, #376]	; 1850c <print_yaml_data@@Base+0x5c4>
   18390:	bl	123b4 <puts@plt>
   18394:	mov	r0, #10
   18398:	bl	124bc <putchar@plt>
   1839c:	ldr	r0, [pc, #364]	; 18510 <print_yaml_data@@Base+0x5c8>
   183a0:	bl	123b4 <puts@plt>
   183a4:	ldr	r0, [pc, #360]	; 18514 <print_yaml_data@@Base+0x5cc>
   183a8:	bl	123b4 <puts@plt>
   183ac:	mov	r0, #10
   183b0:	bl	124bc <putchar@plt>
   183b4:	ldr	r0, [pc, #348]	; 18518 <print_yaml_data@@Base+0x5d0>
   183b8:	bl	123b4 <puts@plt>
   183bc:	ldr	r0, [pc, #344]	; 1851c <print_yaml_data@@Base+0x5d4>
   183c0:	bl	123b4 <puts@plt>
   183c4:	mov	r0, #10
   183c8:	bl	124bc <putchar@plt>
   183cc:	ldr	r0, [pc, #332]	; 18520 <print_yaml_data@@Base+0x5d8>
   183d0:	bl	123b4 <puts@plt>
   183d4:	ldr	r0, [pc, #328]	; 18524 <print_yaml_data@@Base+0x5dc>
   183d8:	bl	123b4 <puts@plt>
   183dc:	ldr	r0, [pc, #324]	; 18528 <print_yaml_data@@Base+0x5e0>
   183e0:	bl	123b4 <puts@plt>
   183e4:	ldr	r0, [pc, #320]	; 1852c <print_yaml_data@@Base+0x5e4>
   183e8:	bl	123b4 <puts@plt>
   183ec:	ldr	r0, [pc, #316]	; 18530 <print_yaml_data@@Base+0x5e8>
   183f0:	bl	123b4 <puts@plt>
   183f4:	ldr	r0, [pc, #312]	; 18534 <print_yaml_data@@Base+0x5ec>
   183f8:	bl	123b4 <puts@plt>
   183fc:	ldr	r0, [pc, #308]	; 18538 <print_yaml_data@@Base+0x5f0>
   18400:	bl	123b4 <puts@plt>
   18404:	mov	r0, #10
   18408:	bl	124bc <putchar@plt>
   1840c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18410:	andeq	sl, r1, r0, lsr r5
   18414:	andeq	sl, r1, r8, lsr r5
   18418:	andeq	sl, r1, r0, lsl #11
   1841c:	andeq	sl, r1, ip, lsr #11
   18420:	andeq	sl, r1, r4, asr #11
   18424:	andeq	sl, r1, r0, ror #11
   18428:	andeq	sl, r1, r8, lsl r6
   1842c:	andeq	sl, r1, r0, asr #12
   18430:	andeq	sl, r1, ip, ror r6
   18434:	andeq	sl, r1, ip, lsr #13
   18438:	strdeq	sl, [r1], -r4
   1843c:	andeq	sl, r1, ip, lsl #14
   18440:	andeq	sl, r1, r8, lsr r7
   18444:	andeq	sl, r1, r0, asr r7
   18448:	andeq	sl, r1, ip, ror r7
   1844c:	muleq	r1, r8, r7
   18450:	andeq	sl, r1, ip, asr #15
   18454:	andeq	sl, r1, r8, ror #15
   18458:	andeq	sl, r1, r0, lsr r8
   1845c:	andeq	sl, r1, ip, asr r8
   18460:	andeq	sl, r1, ip, ror r8
   18464:	andeq	sl, r1, ip, asr #17
   18468:	andeq	sl, r1, ip, lsl r9
   1846c:	andeq	sl, r1, ip, lsr r9
   18470:	andeq	sl, r1, r4, lsl #19
   18474:	andeq	sl, r1, r0, asr #19
   18478:	ldrdeq	sl, [r1], -r8
   1847c:	andeq	sl, r1, ip, lsl sl
   18480:	andeq	sl, r1, r4, lsr sl
   18484:	andeq	sl, r1, r0, lsl #21
   18488:	andeq	sl, r1, r4, lsr #21
   1848c:	ldrdeq	sl, [r1], -r8
   18490:	strdeq	sl, [r1], -r8
   18494:	andeq	sl, r1, r4, asr #22
   18498:	andeq	sl, r1, ip, ror fp
   1849c:	andeq	sl, r1, r8, asr #23
   184a0:	andeq	sl, r1, ip, ror #23
   184a4:	andeq	sl, r1, ip, lsr ip
   184a8:	andeq	sl, r1, r4, lsl #25
   184ac:	andeq	sl, r1, r0, asr #25
   184b0:	ldrdeq	sl, [r1], -r8
   184b4:	strdeq	sl, [r1], -r8
   184b8:	andeq	sl, r1, r0, asr #26
   184bc:	andeq	sl, r1, ip, lsl #27
   184c0:	andeq	sl, r1, ip, lsr #27
   184c4:	strdeq	sl, [r1], -r4
   184c8:	andeq	sl, r1, r4, asr #28
   184cc:	andeq	sl, r1, ip, lsl #29
   184d0:	andeq	sl, r1, r8, asr #29
   184d4:	andeq	sl, r1, r0, ror #29
   184d8:	andeq	sl, r1, ip, lsr #30
   184dc:	andeq	sl, r1, ip, asr #30
   184e0:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   184e4:	andeq	sl, r1, r0, ror #31
   184e8:	andeq	fp, r1, ip, lsr #32
   184ec:	andeq	fp, r1, ip, asr r0
   184f0:	andeq	fp, r1, r4, ror r0
   184f4:	andeq	fp, r1, r4, lsr #1
   184f8:	ldrdeq	fp, [r1], -ip
   184fc:	strdeq	fp, [r1], -ip
   18500:	andeq	fp, r1, ip, asr #2
   18504:	muleq	r1, r8, r1
   18508:	ldrdeq	fp, [r1], -r8
   1850c:	andeq	fp, r1, r8, lsr #4
   18510:	andeq	fp, r1, r0, ror #4
   18514:	andeq	fp, r1, r8, ror r2
   18518:	muleq	r1, r8, r2
   1851c:			; <UNDEFINED> instruction: 0x0001b2b4
   18520:	andeq	fp, r1, r8, ror #5
   18524:	andeq	fp, r1, r8, lsr r3
   18528:	andeq	fp, r1, r4, lsl #7
   1852c:			; <UNDEFINED> instruction: 0x0001b3b0
   18530:	strdeq	fp, [r1], -ip
   18534:	andeq	fp, r1, r4, asr #8
   18538:	andeq	fp, r1, r4, lsl #9

0001853c <handle_coda_error@@Base>:
   1853c:	push	{r4, lr}
   18540:	ldr	r4, [pc, #44]	; 18574 <handle_coda_error@@Base+0x38>
   18544:	ldr	r5, [r4]
   18548:	bl	12600 <coda_get_errno@plt>
   1854c:	ldr	r0, [r0]
   18550:	bl	125b8 <coda_errno_to_string@plt>
   18554:	mov	r2, r0
   18558:	ldr	r1, [pc, #24]	; 18578 <handle_coda_error@@Base+0x3c>
   1855c:	mov	r0, r5
   18560:	bl	1245c <fprintf@plt>
   18564:	ldr	r0, [r4]
   18568:	bl	12264 <fflush@plt>
   1856c:	mov	r0, #1
   18570:	bl	12414 <exit@plt>
   18574:			; <UNDEFINED> instruction: 0x0002c1b8
   18578:	andeq	fp, r1, r4, asr #9

0001857c <main@@Base>:
   1857c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18580:	sub	sp, sp, #28
   18584:	cmp	r0, #1
   18588:	beq	18700 <main@@Base+0x184>
   1858c:	mov	r4, r0
   18590:	mov	r6, r1
   18594:	ldr	r5, [r1, #4]
   18598:	ldr	r1, [pc, #4048]	; 19570 <main@@Base+0xff4>
   1859c:	mov	r0, r5
   185a0:	bl	12204 <strcmp@plt>
   185a4:	cmp	r0, #0
   185a8:	beq	18700 <main@@Base+0x184>
   185ac:	ldr	r1, [pc, #4032]	; 19574 <main@@Base+0xff8>
   185b0:	mov	r0, r5
   185b4:	bl	12204 <strcmp@plt>
   185b8:	cmp	r0, #0
   185bc:	beq	18700 <main@@Base+0x184>
   185c0:	ldr	r1, [pc, #4016]	; 19578 <main@@Base+0xffc>
   185c4:	mov	r0, r5
   185c8:	bl	12204 <strcmp@plt>
   185cc:	cmp	r0, #0
   185d0:	beq	1870c <main@@Base+0x190>
   185d4:	ldr	r1, [pc, #4000]	; 1957c <main@@Base+0x1000>
   185d8:	mov	r0, r5
   185dc:	bl	12204 <strcmp@plt>
   185e0:	cmp	r0, #0
   185e4:	beq	1870c <main@@Base+0x190>
   185e8:	cmp	r4, #2
   185ec:	ble	18604 <main@@Base+0x88>
   185f0:	ldr	r1, [pc, #3976]	; 19580 <main@@Base+0x1004>
   185f4:	mov	r0, r5
   185f8:	bl	12204 <strcmp@plt>
   185fc:	cmp	r0, #0
   18600:	beq	18734 <main@@Base+0x1b8>
   18604:	ldr	r2, [pc, #3960]	; 19584 <main@@Base+0x1008>
   18608:	mov	r1, #0
   1860c:	ldr	r0, [r6]
   18610:	bl	122ac <coda_set_definition_path_conditional@plt>
   18614:	cmp	r0, #0
   18618:	moveq	r9, #1
   1861c:	bne	18744 <main@@Base+0x1c8>
   18620:	lsl	r7, r9, #2
   18624:	ldr	r8, [r6, r9, lsl #2]
   18628:	ldr	r1, [pc, #3928]	; 19588 <main@@Base+0x100c>
   1862c:	mov	r0, r8
   18630:	bl	12204 <strcmp@plt>
   18634:	subs	r5, r0, #0
   18638:	beq	18770 <main@@Base+0x1f4>
   1863c:	ldr	r1, [pc, #3912]	; 1958c <main@@Base+0x1010>
   18640:	mov	r0, r8
   18644:	bl	12204 <strcmp@plt>
   18648:	subs	r5, r0, #0
   1864c:	beq	18ab8 <main@@Base+0x53c>
   18650:	ldr	r1, [pc, #3896]	; 19590 <main@@Base+0x1014>
   18654:	mov	r0, r8
   18658:	bl	12204 <strcmp@plt>
   1865c:	subs	r5, r0, #0
   18660:	beq	18f28 <main@@Base+0x9ac>
   18664:	ldr	r1, [pc, #3880]	; 19594 <main@@Base+0x1018>
   18668:	mov	r0, r8
   1866c:	bl	12204 <strcmp@plt>
   18670:	subs	r5, r0, #0
   18674:	beq	19128 <main@@Base+0xbac>
   18678:	ldr	r1, [pc, #3864]	; 19598 <main@@Base+0x101c>
   1867c:	mov	r0, r8
   18680:	bl	12204 <strcmp@plt>
   18684:	subs	r5, r0, #0
   18688:	bne	196d0 <main@@Base+0x1154>
   1868c:	mov	r2, #5
   18690:	ldr	r3, [pc, #3844]	; 1959c <main@@Base+0x1020>
   18694:	str	r2, [r3]
   18698:	add	r9, r9, #1
   1869c:	sub	r4, r4, r9
   186a0:	add	r7, r7, #4
   186a4:	add	r6, r6, r7
   186a8:	mov	r3, #0
   186ac:	ldr	r2, [pc, #4012]	; 19660 <main@@Base+0x10e4>
   186b0:	str	r3, [r2]
   186b4:	ldr	r2, [pc, #4012]	; 19668 <main@@Base+0x10ec>
   186b8:	str	r3, [r2]
   186bc:	ldr	r2, [pc, #4028]	; 19680 <main@@Base+0x1104>
   186c0:	str	r3, [r2]
   186c4:	ldr	r3, [pc, #3796]	; 195a0 <main@@Base+0x1024>
   186c8:	ldr	r2, [r3]
   186cc:	ldr	r3, [pc, #3992]	; 1966c <main@@Base+0x10f0>
   186d0:	str	r2, [r3]
   186d4:	cmp	r4, #0
   186d8:	ble	1954c <main@@Base+0xfd0>
   186dc:	str	r5, [sp, #12]
   186e0:	mov	r3, #0
   186e4:	str	r3, [sp, #8]
   186e8:	str	r3, [sp, #4]
   186ec:	mov	r3, #1
   186f0:	str	r3, [sp]
   186f4:	ldr	fp, [pc, #3752]	; 195a4 <main@@Base+0x1028>
   186f8:	ldr	sl, [pc, #3936]	; 19660 <main@@Base+0x10e4>
   186fc:	b	19420 <main@@Base+0xea4>
   18700:	bl	1802c <print_yaml_data@@Base+0xe4>
   18704:	mov	r0, #0
   18708:	bl	12414 <exit@plt>
   1870c:	bl	125f4 <coda_get_libcoda_version@plt>
   18710:	mov	r1, r0
   18714:	ldr	r0, [pc, #3724]	; 195a8 <main@@Base+0x102c>
   18718:	bl	12228 <printf@plt>
   1871c:	ldr	r0, [pc, #3720]	; 195ac <main@@Base+0x1030>
   18720:	bl	123b4 <puts@plt>
   18724:	mov	r0, #10
   18728:	bl	124bc <putchar@plt>
   1872c:	mov	r0, #0
   18730:	bl	12414 <exit@plt>
   18734:	ldr	r0, [r6, #8]
   18738:	bl	12330 <coda_set_definition_path@plt>
   1873c:	mov	r9, #3
   18740:	b	18620 <main@@Base+0xa4>
   18744:	ldr	r3, [pc, #3848]	; 19654 <main@@Base+0x10d8>
   18748:	ldr	r4, [r3]
   1874c:	bl	12600 <coda_get_errno@plt>
   18750:	ldr	r0, [r0]
   18754:	bl	125b8 <coda_errno_to_string@plt>
   18758:	mov	r2, r0
   1875c:	ldr	r1, [pc, #3816]	; 1964c <main@@Base+0x10d0>
   18760:	mov	r0, r4
   18764:	bl	1245c <fprintf@plt>
   18768:	mov	r0, #1
   1876c:	bl	12414 <exit@plt>
   18770:	mov	r3, #0
   18774:	ldr	r2, [pc, #3616]	; 1959c <main@@Base+0x1020>
   18778:	str	r3, [r2]
   1877c:	add	r9, r9, #1
   18780:	sub	r4, r4, r9
   18784:	add	r7, r7, #4
   18788:	add	r6, r6, r7
   1878c:	ldr	r2, [pc, #3788]	; 19660 <main@@Base+0x10e4>
   18790:	str	r3, [r2]
   18794:	str	r3, [r2, #664]	; 0x298
   18798:	mov	r1, #1
   1879c:	ldr	r2, [pc, #3596]	; 195b0 <main@@Base+0x1034>
   187a0:	str	r1, [r2]
   187a4:	ldr	r2, [pc, #3592]	; 195b4 <main@@Base+0x1038>
   187a8:	str	r3, [r2]
   187ac:	ldr	r2, [pc, #3588]	; 195b8 <main@@Base+0x103c>
   187b0:	str	r3, [r2]
   187b4:	ldr	r2, [pc, #3584]	; 195bc <main@@Base+0x1040>
   187b8:	str	r3, [r2]
   187bc:	ldr	r2, [pc, #3580]	; 195c0 <main@@Base+0x1044>
   187c0:	str	r3, [r2]
   187c4:	ldr	r2, [pc, #3576]	; 195c4 <main@@Base+0x1048>
   187c8:	str	r3, [r2]
   187cc:	cmp	r4, r3
   187d0:	ble	18a68 <main@@Base+0x4ec>
   187d4:	str	r1, [sp]
   187d8:	str	r1, [sp, #4]
   187dc:	ldr	r9, [pc, #3556]	; 195c8 <main@@Base+0x104c>
   187e0:	ldr	sl, [pc, #3532]	; 195b4 <main@@Base+0x1038>
   187e4:	b	187fc <main@@Base+0x280>
   187e8:	mov	r3, #1
   187ec:	str	r3, [sl]
   187f0:	add	r5, r5, #1
   187f4:	cmp	r4, r5
   187f8:	ble	18a04 <main@@Base+0x488>
   187fc:	lsl	r8, r5, #2
   18800:	ldr	r7, [r6, r5, lsl #2]
   18804:	mov	r1, r9
   18808:	mov	r0, r7
   1880c:	bl	12204 <strcmp@plt>
   18810:	cmp	r0, #0
   18814:	beq	187e8 <main@@Base+0x26c>
   18818:	ldr	r1, [pc, #3500]	; 195cc <main@@Base+0x1050>
   1881c:	mov	r0, r7
   18820:	bl	12204 <strcmp@plt>
   18824:	cmp	r0, #0
   18828:	beq	187e8 <main@@Base+0x26c>
   1882c:	ldr	r1, [pc, #3440]	; 195a4 <main@@Base+0x1028>
   18830:	mov	r0, r7
   18834:	bl	12204 <strcmp@plt>
   18838:	cmp	r0, #0
   1883c:	beq	189ec <main@@Base+0x470>
   18840:	ldr	r1, [pc, #3464]	; 195d0 <main@@Base+0x1054>
   18844:	mov	r0, r7
   18848:	bl	12204 <strcmp@plt>
   1884c:	cmp	r0, #0
   18850:	beq	189f4 <main@@Base+0x478>
   18854:	ldr	r1, [pc, #3448]	; 195d4 <main@@Base+0x1058>
   18858:	mov	r0, r7
   1885c:	bl	12204 <strcmp@plt>
   18860:	cmp	r0, #0
   18864:	beq	1887c <main@@Base+0x300>
   18868:	ldr	r1, [pc, #3432]	; 195d8 <main@@Base+0x105c>
   1886c:	mov	r0, r7
   18870:	bl	12204 <strcmp@plt>
   18874:	cmp	r0, #0
   18878:	bne	188d8 <main@@Base+0x35c>
   1887c:	add	fp, r5, #1
   18880:	cmp	r4, fp
   18884:	ble	188d8 <main@@Base+0x35c>
   18888:	add	r8, r6, r8
   1888c:	ldr	r0, [r8, #4]
   18890:	ldrb	r3, [r0]
   18894:	cmp	r3, #45	; 0x2d
   18898:	beq	188d8 <main@@Base+0x35c>
   1889c:	bl	15b4c <codadump_filter_create@@Base>
   188a0:	ldr	r3, [pc, #3512]	; 19660 <main@@Base+0x10e4>
   188a4:	str	r0, [r3, #664]	; 0x298
   188a8:	cmp	r0, #0
   188ac:	movne	r5, fp
   188b0:	bne	187f0 <main@@Base+0x274>
   188b4:	ldr	r3, [pc, #3480]	; 19654 <main@@Base+0x10d8>
   188b8:	ldr	r3, [r3]
   188bc:	mov	r2, #40	; 0x28
   188c0:	mov	r1, #1
   188c4:	ldr	r0, [pc, #3344]	; 195dc <main@@Base+0x1060>
   188c8:	bl	12378 <fwrite@plt>
   188cc:	bl	1802c <print_yaml_data@@Base+0xe4>
   188d0:	mov	r0, #1
   188d4:	bl	12414 <exit@plt>
   188d8:	ldr	r1, [pc, #3328]	; 195e0 <main@@Base+0x1064>
   188dc:	mov	r0, r7
   188e0:	bl	12204 <strcmp@plt>
   188e4:	cmp	r0, #0
   188e8:	beq	18900 <main@@Base+0x384>
   188ec:	ldr	r1, [pc, #3312]	; 195e4 <main@@Base+0x1068>
   188f0:	mov	r0, r7
   188f4:	bl	12204 <strcmp@plt>
   188f8:	cmp	r0, #0
   188fc:	bne	18910 <main@@Base+0x394>
   18900:	mov	r2, #1
   18904:	ldr	r3, [pc, #3248]	; 195bc <main@@Base+0x1040>
   18908:	str	r2, [r3]
   1890c:	b	187f0 <main@@Base+0x274>
   18910:	ldr	r1, [pc, #3280]	; 195e8 <main@@Base+0x106c>
   18914:	mov	r0, r7
   18918:	bl	12204 <strcmp@plt>
   1891c:	cmp	r0, #0
   18920:	beq	18938 <main@@Base+0x3bc>
   18924:	ldr	r1, [pc, #3264]	; 195ec <main@@Base+0x1070>
   18928:	mov	r0, r7
   1892c:	bl	12204 <strcmp@plt>
   18930:	cmp	r0, #0
   18934:	bne	18948 <main@@Base+0x3cc>
   18938:	mov	r2, #1
   1893c:	ldr	r3, [pc, #3196]	; 195c0 <main@@Base+0x1044>
   18940:	str	r2, [r3]
   18944:	b	187f0 <main@@Base+0x274>
   18948:	ldr	r1, [pc, #3232]	; 195f0 <main@@Base+0x1074>
   1894c:	mov	r0, r7
   18950:	bl	12204 <strcmp@plt>
   18954:	cmp	r0, #0
   18958:	moveq	r2, #1
   1895c:	ldreq	r3, [pc, #3168]	; 195c4 <main@@Base+0x1048>
   18960:	streq	r2, [r3]
   18964:	beq	187f0 <main@@Base+0x274>
   18968:	ldr	r1, [pc, #3204]	; 195f4 <main@@Base+0x1078>
   1896c:	mov	r0, r7
   18970:	bl	12204 <strcmp@plt>
   18974:	cmp	r0, #0
   18978:	bne	18990 <main@@Base+0x414>
   1897c:	mov	r3, #1
   18980:	str	r3, [sl]
   18984:	ldr	r2, [pc, #3116]	; 195b8 <main@@Base+0x103c>
   18988:	str	r3, [r2]
   1898c:	b	187f0 <main@@Base+0x274>
   18990:	ldr	r1, [pc, #3268]	; 1965c <main@@Base+0x10e0>
   18994:	mov	r0, r7
   18998:	bl	12204 <strcmp@plt>
   1899c:	cmp	r0, #0
   189a0:	beq	189fc <main@@Base+0x480>
   189a4:	sub	r3, r4, #1
   189a8:	cmp	r3, r5
   189ac:	bne	189c8 <main@@Base+0x44c>
   189b0:	ldrb	r2, [r7]
   189b4:	cmp	r2, #45	; 0x2d
   189b8:	ldrne	r2, [pc, #3232]	; 19660 <main@@Base+0x10e4>
   189bc:	strne	r7, [r2]
   189c0:	movne	r5, r3
   189c4:	bne	187f0 <main@@Base+0x274>
   189c8:	ldr	r3, [pc, #3204]	; 19654 <main@@Base+0x10d8>
   189cc:	ldr	r3, [r3]
   189d0:	mov	r2, #25
   189d4:	mov	r1, #1
   189d8:	ldr	r0, [pc, #3192]	; 19658 <main@@Base+0x10dc>
   189dc:	bl	12378 <fwrite@plt>
   189e0:	bl	1802c <print_yaml_data@@Base+0xe4>
   189e4:	mov	r0, #1
   189e8:	bl	12414 <exit@plt>
   189ec:	str	r0, [sp]
   189f0:	b	187f0 <main@@Base+0x274>
   189f4:	str	r0, [sp]
   189f8:	b	187f0 <main@@Base+0x274>
   189fc:	str	r0, [sp, #4]
   18a00:	b	187f0 <main@@Base+0x274>
   18a04:	ldr	r3, [pc, #3156]	; 19660 <main@@Base+0x10e4>
   18a08:	ldr	r3, [r3]
   18a0c:	cmp	r3, #0
   18a10:	beq	18a68 <main@@Base+0x4ec>
   18a14:	ldrb	r3, [r3]
   18a18:	cmp	r3, #0
   18a1c:	beq	18a68 <main@@Base+0x4ec>
   18a20:	bl	12480 <coda_init@plt>
   18a24:	cmp	r0, #0
   18a28:	bne	18a8c <main@@Base+0x510>
   18a2c:	ldr	r3, [sp, #4]
   18a30:	clz	r0, r3
   18a34:	lsr	r0, r0, #5
   18a38:	bl	122c4 <coda_set_option_bypass_special_types@plt>
   18a3c:	mov	r0, #0
   18a40:	bl	121f8 <coda_set_option_perform_boundary_checks@plt>
   18a44:	ldr	r0, [sp]
   18a48:	bl	1248c <coda_set_option_perform_conversions@plt>
   18a4c:	bl	172d8 <traverse_info_init@@Base>
   18a50:	bl	14a64 <dim_info_init@@Base>
   18a54:	bl	17334 <traverse_product@@Base>
   18a58:	bl	14a84 <dim_info_done@@Base>
   18a5c:	bl	172f8 <traverse_info_done@@Base>
   18a60:	bl	123a8 <coda_done@plt>
   18a64:	b	19540 <main@@Base+0xfc4>
   18a68:	ldr	r3, [pc, #3044]	; 19654 <main@@Base+0x10d8>
   18a6c:	ldr	r3, [r3]
   18a70:	mov	r2, #25
   18a74:	mov	r1, #1
   18a78:	ldr	r0, [pc, #3032]	; 19658 <main@@Base+0x10dc>
   18a7c:	bl	12378 <fwrite@plt>
   18a80:	bl	1802c <print_yaml_data@@Base+0xe4>
   18a84:	mov	r0, #1
   18a88:	bl	12414 <exit@plt>
   18a8c:	ldr	r3, [pc, #3008]	; 19654 <main@@Base+0x10d8>
   18a90:	ldr	r4, [r3]
   18a94:	bl	12600 <coda_get_errno@plt>
   18a98:	ldr	r0, [r0]
   18a9c:	bl	125b8 <coda_errno_to_string@plt>
   18aa0:	mov	r2, r0
   18aa4:	ldr	r1, [pc, #2976]	; 1964c <main@@Base+0x10d0>
   18aa8:	mov	r0, r4
   18aac:	bl	1245c <fprintf@plt>
   18ab0:	mov	r0, #1
   18ab4:	bl	12414 <exit@plt>
   18ab8:	mov	r2, #1
   18abc:	ldr	r3, [pc, #2776]	; 1959c <main@@Base+0x1020>
   18ac0:	str	r2, [r3]
   18ac4:	add	r9, r9, r2
   18ac8:	sub	r4, r4, r9
   18acc:	add	r7, r7, #4
   18ad0:	add	r6, r6, r7
   18ad4:	ldr	r1, [pc, #2948]	; 19660 <main@@Base+0x10e4>
   18ad8:	mov	r3, #0
   18adc:	str	r3, [r1]
   18ae0:	str	r3, [r1, #664]	; 0x298
   18ae4:	ldr	r1, [pc, #2940]	; 19668 <main@@Base+0x10ec>
   18ae8:	str	r3, [r1]
   18aec:	ldr	r0, [pc, #2820]	; 195f8 <main@@Base+0x107c>
   18af0:	ldr	r1, [pc, #2820]	; 195fc <main@@Base+0x1080>
   18af4:	str	r0, [r1]
   18af8:	ldr	r1, [pc, #2720]	; 195a0 <main@@Base+0x1024>
   18afc:	ldr	r0, [r1]
   18b00:	ldr	r1, [pc, #2916]	; 1966c <main@@Base+0x10f0>
   18b04:	str	r0, [r1]
   18b08:	ldr	r1, [pc, #2720]	; 195b0 <main@@Base+0x1034>
   18b0c:	str	r2, [r1]
   18b10:	ldr	r1, [pc, #2716]	; 195b4 <main@@Base+0x1038>
   18b14:	str	r2, [r1]
   18b18:	ldr	r2, [pc, #2784]	; 19600 <main@@Base+0x1084>
   18b1c:	str	r3, [r2]
   18b20:	ldr	r2, [pc, #2780]	; 19604 <main@@Base+0x1088>
   18b24:	str	r3, [r2]
   18b28:	ldr	r2, [pc, #2776]	; 19608 <main@@Base+0x108c>
   18b2c:	str	r3, [r2]
   18b30:	ldr	r2, [pc, #2772]	; 1960c <main@@Base+0x1090>
   18b34:	str	r3, [r2]
   18b38:	cmp	r4, r3
   18b3c:	ble	18eb8 <main@@Base+0x93c>
   18b40:	mov	r3, #1
   18b44:	str	r3, [sp]
   18b48:	str	r3, [sp, #4]
   18b4c:	ldr	r9, [pc, #2640]	; 195a4 <main@@Base+0x1028>
   18b50:	ldr	fp, [pc, #2728]	; 19600 <main@@Base+0x1084>
   18b54:	b	18d6c <main@@Base+0x7f0>
   18b58:	ldr	r3, [pc, #2804]	; 19654 <main@@Base+0x10d8>
   18b5c:	ldr	r3, [r3]
   18b60:	mov	r2, #40	; 0x28
   18b64:	mov	r1, #1
   18b68:	ldr	r0, [pc, #2668]	; 195dc <main@@Base+0x1060>
   18b6c:	bl	12378 <fwrite@plt>
   18b70:	bl	1802c <print_yaml_data@@Base+0xe4>
   18b74:	mov	r0, #1
   18b78:	bl	12414 <exit@plt>
   18b7c:	ldr	r1, [pc, #2700]	; 19610 <main@@Base+0x1094>
   18b80:	mov	r0, r7
   18b84:	bl	12204 <strcmp@plt>
   18b88:	cmp	r0, #0
   18b8c:	beq	18ba4 <main@@Base+0x628>
   18b90:	ldr	r1, [pc, #2684]	; 19614 <main@@Base+0x1098>
   18b94:	mov	r0, r7
   18b98:	bl	12204 <strcmp@plt>
   18b9c:	cmp	r0, #0
   18ba0:	bne	18bb0 <main@@Base+0x634>
   18ba4:	mov	r3, #1
   18ba8:	str	r3, [fp]
   18bac:	b	18d60 <main@@Base+0x7e4>
   18bb0:	ldr	r1, [pc, #2656]	; 19618 <main@@Base+0x109c>
   18bb4:	mov	r0, r7
   18bb8:	bl	12204 <strcmp@plt>
   18bbc:	cmp	r0, #0
   18bc0:	beq	18bd8 <main@@Base+0x65c>
   18bc4:	ldr	r1, [pc, #2640]	; 1961c <main@@Base+0x10a0>
   18bc8:	mov	r0, r7
   18bcc:	bl	12204 <strcmp@plt>
   18bd0:	cmp	r0, #0
   18bd4:	bne	18be8 <main@@Base+0x66c>
   18bd8:	mov	r2, #1
   18bdc:	ldr	r3, [pc, #2592]	; 19604 <main@@Base+0x1088>
   18be0:	str	r2, [r3]
   18be4:	b	18d60 <main@@Base+0x7e4>
   18be8:	ldr	r1, [pc, #2608]	; 19620 <main@@Base+0x10a4>
   18bec:	mov	r0, r7
   18bf0:	bl	12204 <strcmp@plt>
   18bf4:	cmp	r0, #0
   18bf8:	beq	18c10 <main@@Base+0x694>
   18bfc:	ldr	r1, [pc, #2592]	; 19624 <main@@Base+0x10a8>
   18c00:	mov	r0, r7
   18c04:	bl	12204 <strcmp@plt>
   18c08:	cmp	r0, #0
   18c0c:	bne	18c3c <main@@Base+0x6c0>
   18c10:	add	r3, r5, #1
   18c14:	cmp	r4, r3
   18c18:	ble	18c3c <main@@Base+0x6c0>
   18c1c:	add	r2, r6, r8
   18c20:	ldr	r2, [r2, #4]
   18c24:	ldrb	r1, [r2]
   18c28:	cmp	r1, #45	; 0x2d
   18c2c:	ldrne	r1, [pc, #2612]	; 19668 <main@@Base+0x10ec>
   18c30:	strne	r2, [r1]
   18c34:	movne	r5, r3
   18c38:	bne	18d60 <main@@Base+0x7e4>
   18c3c:	ldr	r1, [pc, #2532]	; 19628 <main@@Base+0x10ac>
   18c40:	mov	r0, r7
   18c44:	bl	12204 <strcmp@plt>
   18c48:	cmp	r0, #0
   18c4c:	beq	18c64 <main@@Base+0x6e8>
   18c50:	ldr	r1, [pc, #2516]	; 1962c <main@@Base+0x10b0>
   18c54:	mov	r0, r7
   18c58:	bl	12204 <strcmp@plt>
   18c5c:	cmp	r0, #0
   18c60:	bne	18c74 <main@@Base+0x6f8>
   18c64:	mov	r2, #1
   18c68:	ldr	r3, [pc, #2456]	; 19608 <main@@Base+0x108c>
   18c6c:	str	r2, [r3]
   18c70:	b	18d60 <main@@Base+0x7e4>
   18c74:	ldr	r1, [pc, #2484]	; 19630 <main@@Base+0x10b4>
   18c78:	mov	r0, r7
   18c7c:	bl	12204 <strcmp@plt>
   18c80:	cmp	r0, #0
   18c84:	beq	18c9c <main@@Base+0x720>
   18c88:	ldr	r1, [pc, #2468]	; 19634 <main@@Base+0x10b8>
   18c8c:	mov	r0, r7
   18c90:	bl	12204 <strcmp@plt>
   18c94:	cmp	r0, #0
   18c98:	bne	18cc8 <main@@Base+0x74c>
   18c9c:	add	r3, r5, #1
   18ca0:	cmp	r4, r3
   18ca4:	ble	18cc8 <main@@Base+0x74c>
   18ca8:	add	r8, r6, r8
   18cac:	ldr	r2, [r8, #4]
   18cb0:	ldrb	r1, [r2]
   18cb4:	cmp	r1, #45	; 0x2d
   18cb8:	ldrne	r1, [pc, #2364]	; 195fc <main@@Base+0x1080>
   18cbc:	strne	r2, [r1]
   18cc0:	movne	r5, r3
   18cc4:	bne	18d60 <main@@Base+0x7e4>
   18cc8:	ldr	r1, [pc, #2320]	; 195e0 <main@@Base+0x1064>
   18ccc:	mov	r0, r7
   18cd0:	bl	12204 <strcmp@plt>
   18cd4:	cmp	r0, #0
   18cd8:	beq	18cf0 <main@@Base+0x774>
   18cdc:	ldr	r1, [pc, #2388]	; 19638 <main@@Base+0x10bc>
   18ce0:	mov	r0, r7
   18ce4:	bl	12204 <strcmp@plt>
   18ce8:	cmp	r0, #0
   18cec:	bne	18d00 <main@@Base+0x784>
   18cf0:	mov	r2, #1
   18cf4:	ldr	r3, [pc, #2320]	; 1960c <main@@Base+0x1090>
   18cf8:	str	r2, [r3]
   18cfc:	b	18d60 <main@@Base+0x7e4>
   18d00:	ldr	r1, [pc, #2388]	; 1965c <main@@Base+0x10e0>
   18d04:	mov	r0, r7
   18d08:	bl	12204 <strcmp@plt>
   18d0c:	cmp	r0, #0
   18d10:	beq	18e08 <main@@Base+0x88c>
   18d14:	sub	r3, r4, #1
   18d18:	cmp	r3, r5
   18d1c:	bne	18d38 <main@@Base+0x7bc>
   18d20:	ldrb	r2, [r7]
   18d24:	cmp	r2, #45	; 0x2d
   18d28:	ldrne	r2, [pc, #2352]	; 19660 <main@@Base+0x10e4>
   18d2c:	strne	r7, [r2]
   18d30:	movne	r5, r3
   18d34:	bne	18d60 <main@@Base+0x7e4>
   18d38:	ldr	r3, [pc, #2324]	; 19654 <main@@Base+0x10d8>
   18d3c:	ldr	r3, [r3]
   18d40:	mov	r2, #25
   18d44:	mov	r1, #1
   18d48:	ldr	r0, [pc, #2312]	; 19658 <main@@Base+0x10dc>
   18d4c:	bl	12378 <fwrite@plt>
   18d50:	bl	1802c <print_yaml_data@@Base+0xe4>
   18d54:	mov	r0, #1
   18d58:	bl	12414 <exit@plt>
   18d5c:	str	r0, [sp]
   18d60:	add	r5, r5, #1
   18d64:	cmp	r4, r5
   18d68:	ble	18e10 <main@@Base+0x894>
   18d6c:	lsl	r8, r5, #2
   18d70:	ldr	r7, [r6, r5, lsl #2]
   18d74:	mov	r1, r9
   18d78:	mov	r0, r7
   18d7c:	bl	12204 <strcmp@plt>
   18d80:	cmp	r0, #0
   18d84:	beq	18d5c <main@@Base+0x7e0>
   18d88:	ldr	r1, [pc, #2112]	; 195d0 <main@@Base+0x1054>
   18d8c:	mov	r0, r7
   18d90:	bl	12204 <strcmp@plt>
   18d94:	cmp	r0, #0
   18d98:	beq	18e00 <main@@Base+0x884>
   18d9c:	ldr	r1, [pc, #2096]	; 195d4 <main@@Base+0x1058>
   18da0:	mov	r0, r7
   18da4:	bl	12204 <strcmp@plt>
   18da8:	cmp	r0, #0
   18dac:	beq	18dc4 <main@@Base+0x848>
   18db0:	ldr	r1, [pc, #2080]	; 195d8 <main@@Base+0x105c>
   18db4:	mov	r0, r7
   18db8:	bl	12204 <strcmp@plt>
   18dbc:	cmp	r0, #0
   18dc0:	bne	18b7c <main@@Base+0x600>
   18dc4:	add	sl, r5, #1
   18dc8:	cmp	r4, sl
   18dcc:	ble	18b7c <main@@Base+0x600>
   18dd0:	add	r3, r6, r8
   18dd4:	ldr	r0, [r3, #4]
   18dd8:	ldrb	r3, [r0]
   18ddc:	cmp	r3, #45	; 0x2d
   18de0:	beq	18b7c <main@@Base+0x600>
   18de4:	bl	15b4c <codadump_filter_create@@Base>
   18de8:	ldr	r3, [pc, #2160]	; 19660 <main@@Base+0x10e4>
   18dec:	str	r0, [r3, #664]	; 0x298
   18df0:	cmp	r0, #0
   18df4:	beq	18b58 <main@@Base+0x5dc>
   18df8:	mov	r5, sl
   18dfc:	b	18d60 <main@@Base+0x7e4>
   18e00:	str	r0, [sp]
   18e04:	b	18d60 <main@@Base+0x7e4>
   18e08:	str	r0, [sp, #4]
   18e0c:	b	18d60 <main@@Base+0x7e4>
   18e10:	ldr	r3, [pc, #2120]	; 19660 <main@@Base+0x10e4>
   18e14:	ldr	r3, [r3]
   18e18:	cmp	r3, #0
   18e1c:	beq	18eb8 <main@@Base+0x93c>
   18e20:	ldrb	r3, [r3]
   18e24:	cmp	r3, #0
   18e28:	beq	18eb8 <main@@Base+0x93c>
   18e2c:	bl	12480 <coda_init@plt>
   18e30:	cmp	r0, #0
   18e34:	bne	18edc <main@@Base+0x960>
   18e38:	ldr	r3, [sp, #4]
   18e3c:	clz	r0, r3
   18e40:	lsr	r0, r0, #5
   18e44:	bl	122c4 <coda_set_option_bypass_special_types@plt>
   18e48:	mov	r0, #0
   18e4c:	bl	121f8 <coda_set_option_perform_boundary_checks@plt>
   18e50:	ldr	r0, [sp]
   18e54:	bl	1248c <coda_set_option_perform_conversions@plt>
   18e58:	bl	172d8 <traverse_info_init@@Base>
   18e5c:	bl	14a64 <dim_info_init@@Base>
   18e60:	ldr	r3, [pc, #2048]	; 19668 <main@@Base+0x10ec>
   18e64:	ldr	r0, [r3]
   18e68:	cmp	r0, #0
   18e6c:	beq	18e88 <main@@Base+0x90c>
   18e70:	ldr	r1, [pc, #2028]	; 19664 <main@@Base+0x10e8>
   18e74:	bl	12240 <fopen@plt>
   18e78:	ldr	r3, [pc, #2028]	; 1966c <main@@Base+0x10f0>
   18e7c:	str	r0, [r3]
   18e80:	cmp	r0, #0
   18e84:	beq	18f08 <main@@Base+0x98c>
   18e88:	bl	17334 <traverse_product@@Base>
   18e8c:	ldr	r3, [pc, #2004]	; 19668 <main@@Base+0x10ec>
   18e90:	ldr	r3, [r3]
   18e94:	cmp	r3, #0
   18e98:	beq	18ea8 <main@@Base+0x92c>
   18e9c:	ldr	r3, [pc, #1992]	; 1966c <main@@Base+0x10f0>
   18ea0:	ldr	r0, [r3]
   18ea4:	bl	12504 <fclose@plt>
   18ea8:	bl	14a84 <dim_info_done@@Base>
   18eac:	bl	172f8 <traverse_info_done@@Base>
   18eb0:	bl	123a8 <coda_done@plt>
   18eb4:	b	19540 <main@@Base+0xfc4>
   18eb8:	ldr	r3, [pc, #1940]	; 19654 <main@@Base+0x10d8>
   18ebc:	ldr	r3, [r3]
   18ec0:	mov	r2, #25
   18ec4:	mov	r1, #1
   18ec8:	ldr	r0, [pc, #1928]	; 19658 <main@@Base+0x10dc>
   18ecc:	bl	12378 <fwrite@plt>
   18ed0:	bl	1802c <print_yaml_data@@Base+0xe4>
   18ed4:	mov	r0, #1
   18ed8:	bl	12414 <exit@plt>
   18edc:	ldr	r3, [pc, #1904]	; 19654 <main@@Base+0x10d8>
   18ee0:	ldr	r4, [r3]
   18ee4:	bl	12600 <coda_get_errno@plt>
   18ee8:	ldr	r0, [r0]
   18eec:	bl	125b8 <coda_errno_to_string@plt>
   18ef0:	mov	r2, r0
   18ef4:	ldr	r1, [pc, #1872]	; 1964c <main@@Base+0x10d0>
   18ef8:	mov	r0, r4
   18efc:	bl	1245c <fprintf@plt>
   18f00:	mov	r0, #1
   18f04:	bl	12414 <exit@plt>
   18f08:	ldr	r3, [pc, #1880]	; 19668 <main@@Base+0x10ec>
   18f0c:	ldr	r2, [r3]
   18f10:	ldr	r1, [pc, #1848]	; 19650 <main@@Base+0x10d4>
   18f14:	ldr	r3, [pc, #1848]	; 19654 <main@@Base+0x10d8>
   18f18:	ldr	r0, [r3]
   18f1c:	bl	1245c <fprintf@plt>
   18f20:	mov	r0, #1
   18f24:	bl	12414 <exit@plt>
   18f28:	mov	r2, #3
   18f2c:	ldr	r3, [pc, #1640]	; 1959c <main@@Base+0x1020>
   18f30:	str	r2, [r3]
   18f34:	add	r8, r9, #1
   18f38:	sub	r8, r4, r8
   18f3c:	add	r7, r7, #4
   18f40:	add	r6, r6, r7
   18f44:	mov	r3, #0
   18f48:	ldr	r2, [pc, #1808]	; 19660 <main@@Base+0x10e4>
   18f4c:	str	r3, [r2]
   18f50:	ldr	r2, [pc, #1808]	; 19668 <main@@Base+0x10ec>
   18f54:	str	r3, [r2]
   18f58:	ldr	r2, [pc, #1824]	; 19680 <main@@Base+0x1104>
   18f5c:	str	r3, [r2]
   18f60:	ldr	r3, [pc, #1592]	; 195a0 <main@@Base+0x1024>
   18f64:	ldr	r2, [r3]
   18f68:	ldr	r3, [pc, #1788]	; 1966c <main@@Base+0x10f0>
   18f6c:	str	r2, [r3]
   18f70:	cmp	r8, #0
   18f74:	ble	190b8 <main@@Base+0xb3c>
   18f78:	mov	sl, r5
   18f7c:	mov	r3, #1
   18f80:	str	r3, [sp]
   18f84:	str	r3, [sp, #4]
   18f88:	ldr	r9, [pc, #1708]	; 1963c <main@@Base+0x10c0>
   18f8c:	ldr	fp, [pc, #1708]	; 19640 <main@@Base+0x10c4>
   18f90:	sub	r3, r8, #1
   18f94:	str	r3, [sp, #8]
   18f98:	b	18fe8 <main@@Base+0xa6c>
   18f9c:	ldr	r1, [pc, #1748]	; 19678 <main@@Base+0x10fc>
   18fa0:	mov	r0, r4
   18fa4:	bl	12204 <strcmp@plt>
   18fa8:	cmp	r0, #0
   18fac:	beq	19a00 <main@@Base+0x1484>
   18fb0:	b	199ec <main@@Base+0x1470>
   18fb4:	ldr	r3, [pc, #1688]	; 19654 <main@@Base+0x10d8>
   18fb8:	ldr	r3, [r3]
   18fbc:	mov	r2, #25
   18fc0:	mov	r1, #1
   18fc4:	ldr	r0, [pc, #1676]	; 19658 <main@@Base+0x10dc>
   18fc8:	bl	12378 <fwrite@plt>
   18fcc:	bl	1802c <print_yaml_data@@Base+0xe4>
   18fd0:	mov	r0, #1
   18fd4:	bl	12414 <exit@plt>
   18fd8:	mov	sl, #1
   18fdc:	add	r5, r5, #1
   18fe0:	cmp	r8, r5
   18fe4:	ble	19774 <main@@Base+0x11f8>
   18fe8:	lsl	r7, r5, #2
   18fec:	ldr	r4, [r6, r5, lsl #2]
   18ff0:	mov	r1, r9
   18ff4:	mov	r0, r4
   18ff8:	bl	12204 <strcmp@plt>
   18ffc:	cmp	r0, #0
   19000:	beq	18fd8 <main@@Base+0xa5c>
   19004:	mov	r1, fp
   19008:	mov	r0, r4
   1900c:	bl	12204 <strcmp@plt>
   19010:	cmp	r0, #0
   19014:	beq	19098 <main@@Base+0xb1c>
   19018:	ldr	r1, [pc, #1412]	; 195a4 <main@@Base+0x1028>
   1901c:	mov	r0, r4
   19020:	bl	12204 <strcmp@plt>
   19024:	cmp	r0, #0
   19028:	beq	190a0 <main@@Base+0xb24>
   1902c:	ldr	r1, [pc, #1436]	; 195d0 <main@@Base+0x1054>
   19030:	mov	r0, r4
   19034:	bl	12204 <strcmp@plt>
   19038:	cmp	r0, #0
   1903c:	beq	190a8 <main@@Base+0xb2c>
   19040:	ldr	r1, [pc, #1496]	; 19620 <main@@Base+0x10a4>
   19044:	mov	r0, r4
   19048:	bl	12204 <strcmp@plt>
   1904c:	cmp	r0, #0
   19050:	beq	19068 <main@@Base+0xaec>
   19054:	ldr	r1, [pc, #1480]	; 19624 <main@@Base+0x10a8>
   19058:	mov	r0, r4
   1905c:	bl	12204 <strcmp@plt>
   19060:	cmp	r0, #0
   19064:	bne	18f9c <main@@Base+0xa20>
   19068:	add	r3, r5, #1
   1906c:	cmp	r8, r3
   19070:	ble	199d8 <main@@Base+0x145c>
   19074:	add	r2, r6, r7
   19078:	ldr	r2, [r2, #4]
   1907c:	ldrb	r1, [r2]
   19080:	cmp	r1, #45	; 0x2d
   19084:	beq	196f4 <main@@Base+0x1178>
   19088:	ldr	r1, [pc, #1496]	; 19668 <main@@Base+0x10ec>
   1908c:	str	r2, [r1]
   19090:	mov	r5, r3
   19094:	b	18fdc <main@@Base+0xa60>
   19098:	mov	sl, #1
   1909c:	b	18fdc <main@@Base+0xa60>
   190a0:	str	r0, [sp]
   190a4:	b	18fdc <main@@Base+0xa60>
   190a8:	str	r0, [sp]
   190ac:	b	18fdc <main@@Base+0xa60>
   190b0:	str	r0, [sp, #4]
   190b4:	b	18fdc <main@@Base+0xa60>
   190b8:	ldr	r3, [pc, #1428]	; 19654 <main@@Base+0x10d8>
   190bc:	ldr	r3, [r3]
   190c0:	mov	r2, #25
   190c4:	mov	r1, #1
   190c8:	ldr	r0, [pc, #1416]	; 19658 <main@@Base+0x10dc>
   190cc:	bl	12378 <fwrite@plt>
   190d0:	bl	1802c <print_yaml_data@@Base+0xe4>
   190d4:	mov	r0, #1
   190d8:	bl	12414 <exit@plt>
   190dc:	ldr	r3, [pc, #1392]	; 19654 <main@@Base+0x10d8>
   190e0:	ldr	r4, [r3]
   190e4:	bl	12600 <coda_get_errno@plt>
   190e8:	ldr	r0, [r0]
   190ec:	bl	125b8 <coda_errno_to_string@plt>
   190f0:	mov	r2, r0
   190f4:	ldr	r1, [pc, #1360]	; 1964c <main@@Base+0x10d0>
   190f8:	mov	r0, r4
   190fc:	bl	1245c <fprintf@plt>
   19100:	mov	r0, #1
   19104:	bl	12414 <exit@plt>
   19108:	ldr	r3, [pc, #1368]	; 19668 <main@@Base+0x10ec>
   1910c:	ldr	r2, [r3]
   19110:	ldr	r1, [pc, #1336]	; 19650 <main@@Base+0x10d4>
   19114:	ldr	r3, [pc, #1336]	; 19654 <main@@Base+0x10d8>
   19118:	ldr	r0, [r3]
   1911c:	bl	1245c <fprintf@plt>
   19120:	mov	r0, #1
   19124:	bl	12414 <exit@plt>
   19128:	mov	r2, #4
   1912c:	ldr	r3, [pc, #1128]	; 1959c <main@@Base+0x1020>
   19130:	str	r2, [r3]
   19134:	add	r8, r9, #1
   19138:	sub	r8, r4, r8
   1913c:	add	r7, r7, r2
   19140:	add	r6, r6, r7
   19144:	mov	r3, #0
   19148:	ldr	r2, [pc, #1296]	; 19660 <main@@Base+0x10e4>
   1914c:	str	r3, [r2]
   19150:	ldr	r2, [pc, #1296]	; 19668 <main@@Base+0x10ec>
   19154:	str	r3, [r2]
   19158:	ldr	r2, [pc, #1312]	; 19680 <main@@Base+0x1104>
   1915c:	str	r3, [r2]
   19160:	ldr	r3, [pc, #1080]	; 195a0 <main@@Base+0x1024>
   19164:	ldr	r2, [r3]
   19168:	ldr	r3, [pc, #1276]	; 1966c <main@@Base+0x10f0>
   1916c:	str	r2, [r3]
   19170:	cmp	r8, #0
   19174:	ble	192b8 <main@@Base+0xd3c>
   19178:	mov	sl, r5
   1917c:	mov	r3, #1
   19180:	str	r3, [sp]
   19184:	str	r3, [sp, #4]
   19188:	ldr	r9, [pc, #1196]	; 1963c <main@@Base+0x10c0>
   1918c:	ldr	fp, [pc, #1196]	; 19640 <main@@Base+0x10c4>
   19190:	sub	r3, r8, #1
   19194:	str	r3, [sp, #8]
   19198:	b	191e8 <main@@Base+0xc6c>
   1919c:	ldr	r1, [pc, #1236]	; 19678 <main@@Base+0x10fc>
   191a0:	mov	r0, r4
   191a4:	bl	12204 <strcmp@plt>
   191a8:	cmp	r0, #0
   191ac:	beq	19a58 <main@@Base+0x14dc>
   191b0:	b	19a44 <main@@Base+0x14c8>
   191b4:	ldr	r3, [pc, #1176]	; 19654 <main@@Base+0x10d8>
   191b8:	ldr	r3, [r3]
   191bc:	mov	r2, #25
   191c0:	mov	r1, #1
   191c4:	ldr	r0, [pc, #1164]	; 19658 <main@@Base+0x10dc>
   191c8:	bl	12378 <fwrite@plt>
   191cc:	bl	1802c <print_yaml_data@@Base+0xe4>
   191d0:	mov	r0, #1
   191d4:	bl	12414 <exit@plt>
   191d8:	mov	sl, #1
   191dc:	add	r5, r5, #1
   191e0:	cmp	r8, r5
   191e4:	ble	198c8 <main@@Base+0x134c>
   191e8:	lsl	r7, r5, #2
   191ec:	ldr	r4, [r6, r5, lsl #2]
   191f0:	mov	r1, r9
   191f4:	mov	r0, r4
   191f8:	bl	12204 <strcmp@plt>
   191fc:	cmp	r0, #0
   19200:	beq	191d8 <main@@Base+0xc5c>
   19204:	mov	r1, fp
   19208:	mov	r0, r4
   1920c:	bl	12204 <strcmp@plt>
   19210:	cmp	r0, #0
   19214:	beq	19298 <main@@Base+0xd1c>
   19218:	ldr	r1, [pc, #900]	; 195a4 <main@@Base+0x1028>
   1921c:	mov	r0, r4
   19220:	bl	12204 <strcmp@plt>
   19224:	cmp	r0, #0
   19228:	beq	192a0 <main@@Base+0xd24>
   1922c:	ldr	r1, [pc, #924]	; 195d0 <main@@Base+0x1054>
   19230:	mov	r0, r4
   19234:	bl	12204 <strcmp@plt>
   19238:	cmp	r0, #0
   1923c:	beq	192a8 <main@@Base+0xd2c>
   19240:	ldr	r1, [pc, #984]	; 19620 <main@@Base+0x10a4>
   19244:	mov	r0, r4
   19248:	bl	12204 <strcmp@plt>
   1924c:	cmp	r0, #0
   19250:	beq	19268 <main@@Base+0xcec>
   19254:	ldr	r1, [pc, #968]	; 19624 <main@@Base+0x10a8>
   19258:	mov	r0, r4
   1925c:	bl	12204 <strcmp@plt>
   19260:	cmp	r0, #0
   19264:	bne	1919c <main@@Base+0xc20>
   19268:	add	r3, r5, #1
   1926c:	cmp	r8, r3
   19270:	ble	19a30 <main@@Base+0x14b4>
   19274:	add	r2, r6, r7
   19278:	ldr	r2, [r2, #4]
   1927c:	ldrb	r1, [r2]
   19280:	cmp	r1, #45	; 0x2d
   19284:	beq	19828 <main@@Base+0x12ac>
   19288:	ldr	r1, [pc, #984]	; 19668 <main@@Base+0x10ec>
   1928c:	str	r2, [r1]
   19290:	mov	r5, r3
   19294:	b	191dc <main@@Base+0xc60>
   19298:	mov	sl, #1
   1929c:	b	191dc <main@@Base+0xc60>
   192a0:	str	r0, [sp]
   192a4:	b	191dc <main@@Base+0xc60>
   192a8:	str	r0, [sp]
   192ac:	b	191dc <main@@Base+0xc60>
   192b0:	str	r0, [sp, #4]
   192b4:	b	191dc <main@@Base+0xc60>
   192b8:	ldr	r3, [pc, #916]	; 19654 <main@@Base+0x10d8>
   192bc:	ldr	r3, [r3]
   192c0:	mov	r2, #25
   192c4:	mov	r1, #1
   192c8:	ldr	r0, [pc, #904]	; 19658 <main@@Base+0x10dc>
   192cc:	bl	12378 <fwrite@plt>
   192d0:	bl	1802c <print_yaml_data@@Base+0xe4>
   192d4:	mov	r0, #1
   192d8:	bl	12414 <exit@plt>
   192dc:	ldr	r3, [pc, #880]	; 19654 <main@@Base+0x10d8>
   192e0:	ldr	r4, [r3]
   192e4:	bl	12600 <coda_get_errno@plt>
   192e8:	ldr	r0, [r0]
   192ec:	bl	125b8 <coda_errno_to_string@plt>
   192f0:	mov	r2, r0
   192f4:	ldr	r1, [pc, #848]	; 1964c <main@@Base+0x10d0>
   192f8:	mov	r0, r4
   192fc:	bl	1245c <fprintf@plt>
   19300:	mov	r0, #1
   19304:	bl	12414 <exit@plt>
   19308:	ldr	r3, [pc, #856]	; 19668 <main@@Base+0x10ec>
   1930c:	ldr	r2, [r3]
   19310:	ldr	r1, [pc, #824]	; 19650 <main@@Base+0x10d4>
   19314:	ldr	r3, [pc, #824]	; 19654 <main@@Base+0x10d8>
   19318:	ldr	r0, [r3]
   1931c:	bl	1245c <fprintf@plt>
   19320:	mov	r0, #1
   19324:	bl	12414 <exit@plt>
   19328:	ldr	r1, [pc, #840]	; 19678 <main@@Base+0x10fc>
   1932c:	mov	r0, r7
   19330:	bl	12204 <strcmp@plt>
   19334:	cmp	r0, #0
   19338:	beq	19ab0 <main@@Base+0x1534>
   1933c:	b	19a9c <main@@Base+0x1520>
   19340:	ldr	r1, [pc, #764]	; 19644 <main@@Base+0x10c8>
   19344:	mov	r0, r7
   19348:	bl	12204 <strcmp@plt>
   1934c:	cmp	r0, #0
   19350:	bne	193cc <main@@Base+0xe50>
   19354:	add	r9, r5, #3
   19358:	cmp	r4, r9
   1935c:	ble	193cc <main@@Base+0xe50>
   19360:	add	r3, r6, r8
   19364:	ldr	r3, [r3, #4]
   19368:	str	r3, [sp, #16]
   1936c:	ldrb	r3, [r3]
   19370:	cmp	r3, #45	; 0x2d
   19374:	beq	193cc <main@@Base+0xe50>
   19378:	add	r3, r6, r8
   1937c:	ldr	r2, [r3, #8]
   19380:	str	r2, [sp, #20]
   19384:	ldrb	r3, [r2]
   19388:	cmp	r3, #45	; 0x2d
   1938c:	beq	193cc <main@@Base+0xe50>
   19390:	add	r8, r6, r8
   19394:	ldr	r0, [r8, #12]
   19398:	ldrb	r3, [r0]
   1939c:	cmp	r3, #45	; 0x2d
   193a0:	beq	193cc <main@@Base+0xe50>
   193a4:	mov	r2, #10
   193a8:	mov	r1, #0
   193ac:	bl	12210 <strtol@plt>
   193b0:	str	r0, [sp, #12]
   193b4:	mov	r5, r9
   193b8:	ldr	r2, [sp, #20]
   193bc:	str	r2, [sp, #8]
   193c0:	ldr	r3, [sp, #16]
   193c4:	str	r3, [sp, #4]
   193c8:	b	19414 <main@@Base+0xe98>
   193cc:	sub	r3, r4, #1
   193d0:	cmp	r3, r5
   193d4:	bne	193ec <main@@Base+0xe70>
   193d8:	ldrb	r2, [r7]
   193dc:	cmp	r2, #45	; 0x2d
   193e0:	strne	r7, [sl]
   193e4:	movne	r5, r3
   193e8:	bne	19414 <main@@Base+0xe98>
   193ec:	ldr	r3, [pc, #608]	; 19654 <main@@Base+0x10d8>
   193f0:	ldr	r3, [r3]
   193f4:	mov	r2, #25
   193f8:	mov	r1, #1
   193fc:	ldr	r0, [pc, #596]	; 19658 <main@@Base+0x10dc>
   19400:	bl	12378 <fwrite@plt>
   19404:	bl	1802c <print_yaml_data@@Base+0xe4>
   19408:	mov	r0, #1
   1940c:	bl	12414 <exit@plt>
   19410:	str	r0, [sp]
   19414:	add	r5, r5, #1
   19418:	cmp	r4, r5
   1941c:	ble	194b0 <main@@Base+0xf34>
   19420:	lsl	r8, r5, #2
   19424:	ldr	r7, [r6, r5, lsl #2]
   19428:	mov	r1, fp
   1942c:	mov	r0, r7
   19430:	bl	12204 <strcmp@plt>
   19434:	cmp	r0, #0
   19438:	beq	19410 <main@@Base+0xe94>
   1943c:	ldr	r1, [pc, #516]	; 19648 <main@@Base+0x10cc>
   19440:	mov	r0, r7
   19444:	bl	12204 <strcmp@plt>
   19448:	cmp	r0, #0
   1944c:	beq	194a8 <main@@Base+0xf2c>
   19450:	ldr	r1, [pc, #456]	; 19620 <main@@Base+0x10a4>
   19454:	mov	r0, r7
   19458:	bl	12204 <strcmp@plt>
   1945c:	cmp	r0, #0
   19460:	beq	19478 <main@@Base+0xefc>
   19464:	ldr	r1, [pc, #440]	; 19624 <main@@Base+0x10a8>
   19468:	mov	r0, r7
   1946c:	bl	12204 <strcmp@plt>
   19470:	cmp	r0, #0
   19474:	bne	19328 <main@@Base+0xdac>
   19478:	add	r3, r5, #1
   1947c:	cmp	r4, r3
   19480:	ble	19a88 <main@@Base+0x150c>
   19484:	add	r2, r6, r8
   19488:	ldr	r2, [r2, #4]
   1948c:	ldrb	r1, [r2]
   19490:	cmp	r1, #45	; 0x2d
   19494:	beq	1995c <main@@Base+0x13e0>
   19498:	ldr	r1, [pc, #456]	; 19668 <main@@Base+0x10ec>
   1949c:	str	r2, [r1]
   194a0:	mov	r5, r3
   194a4:	b	19414 <main@@Base+0xe98>
   194a8:	str	r0, [sp]
   194ac:	b	19414 <main@@Base+0xe98>
   194b0:	ldr	r3, [pc, #424]	; 19660 <main@@Base+0x10e4>
   194b4:	ldr	r3, [r3]
   194b8:	cmp	r3, #0
   194bc:	beq	1954c <main@@Base+0xfd0>
   194c0:	ldrb	r3, [r3]
   194c4:	cmp	r3, #0
   194c8:	beq	1954c <main@@Base+0xfd0>
   194cc:	bl	12480 <coda_init@plt>
   194d0:	cmp	r0, #0
   194d4:	bne	19684 <main@@Base+0x1108>
   194d8:	mov	r0, #0
   194dc:	bl	1248c <coda_set_option_perform_conversions@plt>
   194e0:	ldr	r0, [sp]
   194e4:	bl	121d4 <coda_set_option_use_fast_size_expressions@plt>
   194e8:	ldr	r3, [pc, #376]	; 19668 <main@@Base+0x10ec>
   194ec:	ldr	r0, [r3]
   194f0:	cmp	r0, #0
   194f4:	beq	19510 <main@@Base+0xf94>
   194f8:	ldr	r1, [pc, #356]	; 19664 <main@@Base+0x10e8>
   194fc:	bl	12240 <fopen@plt>
   19500:	ldr	r3, [pc, #356]	; 1966c <main@@Base+0x10f0>
   19504:	str	r0, [r3]
   19508:	cmp	r0, #0
   1950c:	beq	196b0 <main@@Base+0x1134>
   19510:	ldr	r2, [sp, #12]
   19514:	ldr	r1, [sp, #8]
   19518:	ldr	r0, [sp, #4]
   1951c:	bl	14168 <print_debug_data@@Base>
   19520:	ldr	r3, [pc, #320]	; 19668 <main@@Base+0x10ec>
   19524:	ldr	r3, [r3]
   19528:	cmp	r3, #0
   1952c:	beq	1953c <main@@Base+0xfc0>
   19530:	ldr	r3, [pc, #308]	; 1966c <main@@Base+0x10f0>
   19534:	ldr	r0, [r3]
   19538:	bl	12504 <fclose@plt>
   1953c:	bl	123a8 <coda_done@plt>
   19540:	mov	r0, #0
   19544:	add	sp, sp, #28
   19548:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1954c:	ldr	r3, [pc, #256]	; 19654 <main@@Base+0x10d8>
   19550:	ldr	r3, [r3]
   19554:	mov	r2, #25
   19558:	mov	r1, #1
   1955c:	ldr	r0, [pc, #244]	; 19658 <main@@Base+0x10dc>
   19560:	bl	12378 <fwrite@plt>
   19564:	bl	1802c <print_yaml_data@@Base+0xe4>
   19568:	mov	r0, #1
   1956c:	bl	12414 <exit@plt>
   19570:	ldrdeq	fp, [r1], -r0
   19574:	ldrdeq	fp, [r1], -r4
   19578:	ldrdeq	fp, [r1], -ip
   1957c:	andeq	fp, r1, r0, ror #9
   19580:	andeq	fp, r1, r4, lsr r5
   19584:	andeq	fp, r1, r8, lsr r5
   19588:	andeq	fp, r1, r4, asr r5
   1958c:	andeq	fp, r1, r4, asr #11
   19590:	andeq	fp, r1, r4, lsr r6
   19594:	andeq	fp, r1, ip, asr #12
   19598:	ldrdeq	sl, [r1], -r8
   1959c:	andeq	sp, r2, ip, lsr #1
   195a0:			; <UNDEFINED> instruction: 0x0002c1bc
   195a4:	andeq	fp, r1, r0, ror #10
   195a8:	andeq	fp, r1, ip, ror #9
   195ac:	andeq	fp, r1, r4, lsl #10
   195b0:	ldrdeq	ip, [r2], -r8
   195b4:	andeq	ip, r2, ip, ror #3
   195b8:	ldrdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   195bc:	andeq	sp, r2, r0, lsr #1
   195c0:	andeq	ip, r2, r8, ror #3
   195c4:	andeq	sp, r2, r4, lsr #1
   195c8:	andeq	fp, r1, ip, asr r5
   195cc:	ldrdeq	sl, [r1], -r4
   195d0:	andeq	sl, r1, r8, lsr #12
   195d4:	andeq	fp, r1, r4, ror #10
   195d8:	andeq	fp, r1, r8, ror #10
   195dc:	andeq	fp, r1, r4, ror r5
   195e0:	andeq	fp, r1, r0, lsr #11
   195e4:	andeq	sl, r1, r4, lsl #14
   195e8:	andeq	fp, r1, r4, lsr #11
   195ec:	andeq	sl, r1, r8, asr #14
   195f0:	andeq	sl, r1, r8, lsl #15
   195f4:	ldrdeq	sl, [r1], -r8
   195f8:	andeq	fp, r1, ip, asr #11
   195fc:	muleq	r2, ip, r0
   19600:	andeq	sp, r2, r8, lsr #1
   19604:	andeq	sp, r2, r8, lsr #4
   19608:	andeq	sp, r2, ip, lsr #4
   1960c:	andeq	ip, r2, r4, ror #3
   19610:	ldrdeq	fp, [r1], -r0
   19614:	ldrdeq	sl, [r1], -r0
   19618:	ldrdeq	fp, [r1], -r4
   1961c:	andeq	sl, r1, ip, lsr #20
   19620:	ldrdeq	fp, [r1], -r8
   19624:	ldrdeq	fp, [r1], -ip
   19628:	andeq	fp, r1, r8, ror #11
   1962c:	andeq	sl, r1, r8, ror #21
   19630:	andeq	fp, r1, ip, ror #11
   19634:	strdeq	fp, [r1], -r0
   19638:	ldrdeq	sl, [r1], -r8
   1963c:	andeq	fp, r1, ip, lsr r6
   19640:	andeq	sl, r1, r8, ror #25
   19644:	andeq	fp, r1, r0, ror #12
   19648:	andeq	fp, r1, r4, lsl #1
   1964c:	andeq	fp, r1, r4, asr #9
   19650:	andeq	fp, r1, r8, lsl #12
   19654:			; <UNDEFINED> instruction: 0x0002c1b8
   19658:	andeq	fp, r1, r8, lsr #11
   1965c:	andeq	sl, r1, r8, ror #16
   19660:	strdeq	ip, [r2], -r0
   19664:	andeq	fp, r1, r4, lsl #12
   19668:	andeq	ip, r2, r0, ror #3
   1966c:	muleq	r2, r8, r0
   19670:	andeq	fp, r1, r4, asr r6
   19674:			; <UNDEFINED> instruction: 0x0002c1b0
   19678:	andeq	fp, r1, r0, asr #12
   1967c:	andeq	fp, r1, r4, asr #12
   19680:	strheq	sp, [r2], -r0
   19684:	ldr	r3, [pc, #-56]	; 19654 <main@@Base+0x10d8>
   19688:	ldr	r4, [r3]
   1968c:	bl	12600 <coda_get_errno@plt>
   19690:	ldr	r0, [r0]
   19694:	bl	125b8 <coda_errno_to_string@plt>
   19698:	mov	r2, r0
   1969c:	ldr	r1, [pc, #-88]	; 1964c <main@@Base+0x10d0>
   196a0:	mov	r0, r4
   196a4:	bl	1245c <fprintf@plt>
   196a8:	mov	r0, #1
   196ac:	bl	12414 <exit@plt>
   196b0:	ldr	r3, [pc, #-80]	; 19668 <main@@Base+0x10ec>
   196b4:	ldr	r2, [r3]
   196b8:	ldr	r1, [pc, #-112]	; 19650 <main@@Base+0x10d4>
   196bc:	ldr	r3, [pc, #-112]	; 19654 <main@@Base+0x10d8>
   196c0:	ldr	r0, [r3]
   196c4:	bl	1245c <fprintf@plt>
   196c8:	mov	r0, #1
   196cc:	bl	12414 <exit@plt>
   196d0:	ldr	r3, [pc, #-132]	; 19654 <main@@Base+0x10d8>
   196d4:	ldr	r3, [r3]
   196d8:	mov	r2, #25
   196dc:	mov	r1, #1
   196e0:	ldr	r0, [pc, #-144]	; 19658 <main@@Base+0x10dc>
   196e4:	bl	12378 <fwrite@plt>
   196e8:	bl	1802c <print_yaml_data@@Base+0xe4>
   196ec:	mov	r0, #1
   196f0:	bl	12414 <exit@plt>
   196f4:	ldr	r1, [pc, #-132]	; 19678 <main@@Base+0x10fc>
   196f8:	mov	r0, r4
   196fc:	bl	12204 <strcmp@plt>
   19700:	cmp	r0, #0
   19704:	beq	19808 <main@@Base+0x128c>
   19708:	ldr	r1, [pc, #-148]	; 1967c <main@@Base+0x1100>
   1970c:	mov	r0, r4
   19710:	bl	12204 <strcmp@plt>
   19714:	cmp	r0, #0
   19718:	addeq	r3, r5, #1
   1971c:	beq	19a0c <main@@Base+0x1490>
   19720:	ldr	r1, [pc, #-204]	; 1965c <main@@Base+0x10e0>
   19724:	mov	r0, r4
   19728:	bl	12204 <strcmp@plt>
   1972c:	cmp	r0, #0
   19730:	beq	190b0 <main@@Base+0xb34>
   19734:	ldr	r2, [sp, #8]
   19738:	cmp	r2, r5
   1973c:	bne	18fb4 <main@@Base+0xa38>
   19740:	ldrb	r3, [r4]
   19744:	cmp	r3, #45	; 0x2d
   19748:	beq	18fb4 <main@@Base+0xa38>
   1974c:	ldr	r3, [pc, #-244]	; 19660 <main@@Base+0x10e4>
   19750:	str	r4, [r3]
   19754:	mov	r5, r2
   19758:	b	18fdc <main@@Base+0xa60>
   1975c:	ldr	r1, [pc, #-264]	; 1965c <main@@Base+0x10e0>
   19760:	mov	r0, r4
   19764:	bl	12204 <strcmp@plt>
   19768:	cmp	r0, #0
   1976c:	bne	19734 <main@@Base+0x11b8>
   19770:	str	r0, [sp, #4]
   19774:	ldr	r3, [pc, #-284]	; 19660 <main@@Base+0x10e4>
   19778:	ldr	r3, [r3]
   1977c:	cmp	r3, #0
   19780:	beq	190b8 <main@@Base+0xb3c>
   19784:	ldrb	r3, [r3]
   19788:	cmp	r3, #0
   1978c:	beq	190b8 <main@@Base+0xb3c>
   19790:	bl	12480 <coda_init@plt>
   19794:	cmp	r0, #0
   19798:	bne	190dc <main@@Base+0xb60>
   1979c:	ldr	r3, [sp, #4]
   197a0:	clz	r0, r3
   197a4:	lsr	r0, r0, #5
   197a8:	bl	122c4 <coda_set_option_bypass_special_types@plt>
   197ac:	ldr	r0, [sp]
   197b0:	bl	1248c <coda_set_option_perform_conversions@plt>
   197b4:	ldr	r3, [pc, #-340]	; 19668 <main@@Base+0x10ec>
   197b8:	ldr	r0, [r3]
   197bc:	cmp	r0, #0
   197c0:	beq	197dc <main@@Base+0x1260>
   197c4:	ldr	r1, [pc, #-360]	; 19664 <main@@Base+0x10e8>
   197c8:	bl	12240 <fopen@plt>
   197cc:	ldr	r3, [pc, #-360]	; 1966c <main@@Base+0x10f0>
   197d0:	str	r0, [r3]
   197d4:	cmp	r0, #0
   197d8:	beq	19108 <main@@Base+0xb8c>
   197dc:	mov	r0, sl
   197e0:	bl	1661c <print_json_data@@Base>
   197e4:	ldr	r3, [pc, #-388]	; 19668 <main@@Base+0x10ec>
   197e8:	ldr	r3, [r3]
   197ec:	cmp	r3, #0
   197f0:	beq	19800 <main@@Base+0x1284>
   197f4:	ldr	r3, [pc, #-400]	; 1966c <main@@Base+0x10f0>
   197f8:	ldr	r0, [r3]
   197fc:	bl	12504 <fclose@plt>
   19800:	bl	123a8 <coda_done@plt>
   19804:	b	19540 <main@@Base+0xfc4>
   19808:	ldr	r1, [pc, #-436]	; 1965c <main@@Base+0x10e0>
   1980c:	mov	r0, r4
   19810:	bl	12204 <strcmp@plt>
   19814:	cmp	r0, #0
   19818:	addeq	r5, r5, #1
   1981c:	streq	r0, [sp, #4]
   19820:	beq	18fe8 <main@@Base+0xa6c>
   19824:	b	19734 <main@@Base+0x11b8>
   19828:	ldr	r1, [pc, #-440]	; 19678 <main@@Base+0x10fc>
   1982c:	mov	r0, r4
   19830:	bl	12204 <strcmp@plt>
   19834:	cmp	r0, #0
   19838:	beq	19890 <main@@Base+0x1314>
   1983c:	ldr	r1, [pc, #-456]	; 1967c <main@@Base+0x1100>
   19840:	mov	r0, r4
   19844:	bl	12204 <strcmp@plt>
   19848:	cmp	r0, #0
   1984c:	addeq	r3, r5, #1
   19850:	beq	19a64 <main@@Base+0x14e8>
   19854:	ldr	r1, [pc, #-512]	; 1965c <main@@Base+0x10e0>
   19858:	mov	r0, r4
   1985c:	bl	12204 <strcmp@plt>
   19860:	cmp	r0, #0
   19864:	beq	192b0 <main@@Base+0xd34>
   19868:	ldr	r2, [sp, #8]
   1986c:	cmp	r2, r5
   19870:	bne	191b4 <main@@Base+0xc38>
   19874:	ldrb	r3, [r4]
   19878:	cmp	r3, #45	; 0x2d
   1987c:	beq	191b4 <main@@Base+0xc38>
   19880:	ldr	r3, [pc, #-552]	; 19660 <main@@Base+0x10e4>
   19884:	str	r4, [r3]
   19888:	mov	r5, r2
   1988c:	b	191dc <main@@Base+0xc60>
   19890:	ldr	r1, [pc, #-572]	; 1965c <main@@Base+0x10e0>
   19894:	mov	r0, r4
   19898:	bl	12204 <strcmp@plt>
   1989c:	cmp	r0, #0
   198a0:	bne	19868 <main@@Base+0x12ec>
   198a4:	add	r5, r5, #1
   198a8:	str	r0, [sp, #4]
   198ac:	b	191e8 <main@@Base+0xc6c>
   198b0:	ldr	r1, [pc, #-604]	; 1965c <main@@Base+0x10e0>
   198b4:	mov	r0, r4
   198b8:	bl	12204 <strcmp@plt>
   198bc:	cmp	r0, #0
   198c0:	bne	19868 <main@@Base+0x12ec>
   198c4:	str	r0, [sp, #4]
   198c8:	ldr	r3, [pc, #-624]	; 19660 <main@@Base+0x10e4>
   198cc:	ldr	r3, [r3]
   198d0:	cmp	r3, #0
   198d4:	beq	192b8 <main@@Base+0xd3c>
   198d8:	ldrb	r3, [r3]
   198dc:	cmp	r3, #0
   198e0:	beq	192b8 <main@@Base+0xd3c>
   198e4:	bl	12480 <coda_init@plt>
   198e8:	cmp	r0, #0
   198ec:	bne	192dc <main@@Base+0xd60>
   198f0:	ldr	r3, [sp, #4]
   198f4:	clz	r0, r3
   198f8:	lsr	r0, r0, #5
   198fc:	bl	122c4 <coda_set_option_bypass_special_types@plt>
   19900:	ldr	r0, [sp]
   19904:	bl	1248c <coda_set_option_perform_conversions@plt>
   19908:	ldr	r3, [pc, #-680]	; 19668 <main@@Base+0x10ec>
   1990c:	ldr	r0, [r3]
   19910:	cmp	r0, #0
   19914:	beq	19930 <main@@Base+0x13b4>
   19918:	ldr	r1, [pc, #-700]	; 19664 <main@@Base+0x10e8>
   1991c:	bl	12240 <fopen@plt>
   19920:	ldr	r3, [pc, #-700]	; 1966c <main@@Base+0x10f0>
   19924:	str	r0, [r3]
   19928:	cmp	r0, #0
   1992c:	beq	19308 <main@@Base+0xd8c>
   19930:	mov	r0, sl
   19934:	bl	17f48 <print_yaml_data@@Base>
   19938:	ldr	r3, [pc, #-728]	; 19668 <main@@Base+0x10ec>
   1993c:	ldr	r3, [r3]
   19940:	cmp	r3, #0
   19944:	beq	19954 <main@@Base+0x13d8>
   19948:	ldr	r3, [pc, #-740]	; 1966c <main@@Base+0x10f0>
   1994c:	ldr	r0, [r3]
   19950:	bl	12504 <fclose@plt>
   19954:	bl	123a8 <coda_done@plt>
   19958:	b	19540 <main@@Base+0xfc4>
   1995c:	ldr	r1, [pc, #-748]	; 19678 <main@@Base+0x10fc>
   19960:	mov	r0, r7
   19964:	bl	12204 <strcmp@plt>
   19968:	cmp	r0, #0
   1996c:	beq	19340 <main@@Base+0xdc4>
   19970:	ldr	r1, [pc, #-764]	; 1967c <main@@Base+0x1100>
   19974:	mov	r0, r7
   19978:	bl	12204 <strcmp@plt>
   1997c:	cmp	r0, #0
   19980:	addeq	r3, r5, #1
   19984:	beq	19abc <main@@Base+0x1540>
   19988:	ldr	r1, [pc, #-800]	; 19670 <main@@Base+0x10f4>
   1998c:	mov	r0, r7
   19990:	bl	12204 <strcmp@plt>
   19994:	cmp	r0, #0
   19998:	bne	19340 <main@@Base+0xdc4>
   1999c:	add	r9, r5, #1
   199a0:	cmp	r4, r9
   199a4:	ble	19340 <main@@Base+0xdc4>
   199a8:	add	r3, r6, r8
   199ac:	ldr	r0, [r3, #4]
   199b0:	ldrb	r3, [r0]
   199b4:	cmp	r3, #45	; 0x2d
   199b8:	beq	19340 <main@@Base+0xdc4>
   199bc:	mov	r2, #10
   199c0:	mov	r1, #0
   199c4:	bl	12210 <strtol@plt>
   199c8:	ldr	r3, [pc, #-860]	; 19674 <main@@Base+0x10f8>
   199cc:	str	r0, [r3]
   199d0:	mov	r5, r9
   199d4:	b	19414 <main@@Base+0xe98>
   199d8:	ldr	r1, [pc, #-872]	; 19678 <main@@Base+0x10fc>
   199dc:	mov	r0, r4
   199e0:	bl	12204 <strcmp@plt>
   199e4:	cmp	r0, #0
   199e8:	beq	1975c <main@@Base+0x11e0>
   199ec:	ldr	r1, [pc, #-888]	; 1967c <main@@Base+0x1100>
   199f0:	mov	r0, r4
   199f4:	bl	12204 <strcmp@plt>
   199f8:	cmp	r0, #0
   199fc:	bne	19720 <main@@Base+0x11a4>
   19a00:	add	r3, r5, #1
   19a04:	cmp	r8, r3
   19a08:	ble	1975c <main@@Base+0x11e0>
   19a0c:	add	r7, r6, r7
   19a10:	ldr	r2, [r7, #4]
   19a14:	ldrb	r1, [r2]
   19a18:	cmp	r1, #45	; 0x2d
   19a1c:	beq	19808 <main@@Base+0x128c>
   19a20:	ldr	r1, [pc, #-936]	; 19680 <main@@Base+0x1104>
   19a24:	str	r2, [r1]
   19a28:	mov	r5, r3
   19a2c:	b	18fdc <main@@Base+0xa60>
   19a30:	ldr	r1, [pc, #-960]	; 19678 <main@@Base+0x10fc>
   19a34:	mov	r0, r4
   19a38:	bl	12204 <strcmp@plt>
   19a3c:	cmp	r0, #0
   19a40:	beq	198b0 <main@@Base+0x1334>
   19a44:	ldr	r1, [pc, #-976]	; 1967c <main@@Base+0x1100>
   19a48:	mov	r0, r4
   19a4c:	bl	12204 <strcmp@plt>
   19a50:	cmp	r0, #0
   19a54:	bne	19854 <main@@Base+0x12d8>
   19a58:	add	r3, r5, #1
   19a5c:	cmp	r8, r3
   19a60:	ble	198b0 <main@@Base+0x1334>
   19a64:	add	r7, r6, r7
   19a68:	ldr	r2, [r7, #4]
   19a6c:	ldrb	r1, [r2]
   19a70:	cmp	r1, #45	; 0x2d
   19a74:	beq	19890 <main@@Base+0x1314>
   19a78:	ldr	r1, [pc, #-1024]	; 19680 <main@@Base+0x1104>
   19a7c:	str	r2, [r1]
   19a80:	mov	r5, r3
   19a84:	b	191dc <main@@Base+0xc60>
   19a88:	ldr	r1, [pc, #-1048]	; 19678 <main@@Base+0x10fc>
   19a8c:	mov	r0, r7
   19a90:	bl	12204 <strcmp@plt>
   19a94:	cmp	r0, #0
   19a98:	beq	19340 <main@@Base+0xdc4>
   19a9c:	ldr	r1, [pc, #-1064]	; 1967c <main@@Base+0x1100>
   19aa0:	mov	r0, r7
   19aa4:	bl	12204 <strcmp@plt>
   19aa8:	cmp	r0, #0
   19aac:	bne	19988 <main@@Base+0x140c>
   19ab0:	add	r3, r5, #1
   19ab4:	cmp	r4, r3
   19ab8:	ble	19340 <main@@Base+0xdc4>
   19abc:	add	r2, r6, r8
   19ac0:	ldr	r2, [r2, #4]
   19ac4:	ldrb	r1, [r2]
   19ac8:	cmp	r1, #45	; 0x2d
   19acc:	beq	19340 <main@@Base+0xdc4>
   19ad0:	ldr	r1, [pc, #-1112]	; 19680 <main@@Base+0x1104>
   19ad4:	str	r2, [r1]
   19ad8:	mov	r5, r3
   19adc:	b	19414 <main@@Base+0xe98>
   19ae0:	cmp	r3, #0
   19ae4:	cmpeq	r2, #0
   19ae8:	bne	19b0c <main@@Base+0x1590>
   19aec:	cmp	r1, #0
   19af0:	movlt	r1, #-2147483648	; 0x80000000
   19af4:	movlt	r0, #0
   19af8:	blt	19b08 <main@@Base+0x158c>
   19afc:	cmpeq	r0, #0
   19b00:	mvnne	r1, #-2147483648	; 0x80000000
   19b04:	mvnne	r0, #0
   19b08:	b	19bb4 <main@@Base+0x1638>
   19b0c:	sub	sp, sp, #8
   19b10:	push	{sp, lr}
   19b14:	cmp	r1, #0
   19b18:	blt	19b38 <main@@Base+0x15bc>
   19b1c:	cmp	r3, #0
   19b20:	blt	19b6c <main@@Base+0x15f0>
   19b24:	bl	19bc4 <main@@Base+0x1648>
   19b28:	ldr	lr, [sp, #4]
   19b2c:	add	sp, sp, #8
   19b30:	pop	{r2, r3}
   19b34:	bx	lr
   19b38:	rsbs	r0, r0, #0
   19b3c:	sbc	r1, r1, r1, lsl #1
   19b40:	cmp	r3, #0
   19b44:	blt	19b90 <main@@Base+0x1614>
   19b48:	bl	19bc4 <main@@Base+0x1648>
   19b4c:	ldr	lr, [sp, #4]
   19b50:	add	sp, sp, #8
   19b54:	pop	{r2, r3}
   19b58:	rsbs	r0, r0, #0
   19b5c:	sbc	r1, r1, r1, lsl #1
   19b60:	rsbs	r2, r2, #0
   19b64:	sbc	r3, r3, r3, lsl #1
   19b68:	bx	lr
   19b6c:	rsbs	r2, r2, #0
   19b70:	sbc	r3, r3, r3, lsl #1
   19b74:	bl	19bc4 <main@@Base+0x1648>
   19b78:	ldr	lr, [sp, #4]
   19b7c:	add	sp, sp, #8
   19b80:	pop	{r2, r3}
   19b84:	rsbs	r0, r0, #0
   19b88:	sbc	r1, r1, r1, lsl #1
   19b8c:	bx	lr
   19b90:	rsbs	r2, r2, #0
   19b94:	sbc	r3, r3, r3, lsl #1
   19b98:	bl	19bc4 <main@@Base+0x1648>
   19b9c:	ldr	lr, [sp, #4]
   19ba0:	add	sp, sp, #8
   19ba4:	pop	{r2, r3}
   19ba8:	rsbs	r2, r2, #0
   19bac:	sbc	r3, r3, r3, lsl #1
   19bb0:	bx	lr
   19bb4:	push	{r1, lr}
   19bb8:	mov	r0, #8
   19bbc:	bl	121e0 <raise@plt>
   19bc0:	pop	{r1, pc}
   19bc4:	cmp	r1, r3
   19bc8:	push	{r4, r5, r6, r7, r8, r9, lr}
   19bcc:	cmpeq	r0, r2
   19bd0:	mov	r4, r0
   19bd4:	mov	r5, r1
   19bd8:	ldr	r9, [sp, #28]
   19bdc:	movcc	r0, #0
   19be0:	movcc	r1, #0
   19be4:	bcc	19cdc <main@@Base+0x1760>
   19be8:	cmp	r3, #0
   19bec:	clzeq	ip, r2
   19bf0:	clzne	ip, r3
   19bf4:	addeq	ip, ip, #32
   19bf8:	cmp	r5, #0
   19bfc:	clzeq	r1, r4
   19c00:	addeq	r1, r1, #32
   19c04:	clzne	r1, r5
   19c08:	sub	ip, ip, r1
   19c0c:	sub	lr, ip, #32
   19c10:	lsl	r7, r3, ip
   19c14:	rsb	r8, ip, #32
   19c18:	orr	r7, r7, r2, lsl lr
   19c1c:	orr	r7, r7, r2, lsr r8
   19c20:	lsl	r6, r2, ip
   19c24:	cmp	r5, r7
   19c28:	cmpeq	r4, r6
   19c2c:	movcc	r0, #0
   19c30:	movcc	r1, #0
   19c34:	bcc	19c50 <main@@Base+0x16d4>
   19c38:	mov	r3, #1
   19c3c:	subs	r4, r4, r6
   19c40:	lsl	r1, r3, lr
   19c44:	lsl	r0, r3, ip
   19c48:	orr	r1, r1, r3, lsr r8
   19c4c:	sbc	r5, r5, r7
   19c50:	cmp	ip, #0
   19c54:	beq	19cdc <main@@Base+0x1760>
   19c58:	lsrs	r3, r7, #1
   19c5c:	rrx	r2, r6
   19c60:	mov	r6, ip
   19c64:	b	19c88 <main@@Base+0x170c>
   19c68:	subs	r4, r4, r2
   19c6c:	sbc	r5, r5, r3
   19c70:	adds	r4, r4, r4
   19c74:	adc	r5, r5, r5
   19c78:	adds	r4, r4, #1
   19c7c:	adc	r5, r5, #0
   19c80:	subs	r6, r6, #1
   19c84:	beq	19ca4 <main@@Base+0x1728>
   19c88:	cmp	r5, r3
   19c8c:	cmpeq	r4, r2
   19c90:	bcs	19c68 <main@@Base+0x16ec>
   19c94:	adds	r4, r4, r4
   19c98:	adc	r5, r5, r5
   19c9c:	subs	r6, r6, #1
   19ca0:	bne	19c88 <main@@Base+0x170c>
   19ca4:	lsr	r6, r4, ip
   19ca8:	lsr	r7, r5, ip
   19cac:	orr	r6, r6, r5, lsl r8
   19cb0:	adds	r2, r0, r4
   19cb4:	orr	r6, r6, r5, lsr lr
   19cb8:	adc	r3, r1, r5
   19cbc:	lsl	r1, r7, ip
   19cc0:	orr	r1, r1, r6, lsl lr
   19cc4:	lsl	r0, r6, ip
   19cc8:	orr	r1, r1, r6, lsr r8
   19ccc:	subs	r0, r2, r0
   19cd0:	mov	r4, r6
   19cd4:	mov	r5, r7
   19cd8:	sbc	r1, r3, r1
   19cdc:	cmp	r9, #0
   19ce0:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   19ce4:	strd	r4, [r9]
   19ce8:	pop	{r4, r5, r6, r7, r8, r9, pc}

00019cec <__libc_csu_init@@Base>:
   19cec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19cf0:	mov	r7, r0
   19cf4:	ldr	r6, [pc, #72]	; 19d44 <__libc_csu_init@@Base+0x58>
   19cf8:	ldr	r5, [pc, #72]	; 19d48 <__libc_csu_init@@Base+0x5c>
   19cfc:	add	r6, pc, r6
   19d00:	add	r5, pc, r5
   19d04:	sub	r6, r6, r5
   19d08:	mov	r8, r1
   19d0c:	mov	r9, r2
   19d10:	bl	1219c <coda_cursor_get_byte_size@plt-0x20>
   19d14:	asrs	r6, r6, #2
   19d18:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   19d1c:	mov	r4, #0
   19d20:	add	r4, r4, #1
   19d24:	ldr	r3, [r5], #4
   19d28:	mov	r2, r9
   19d2c:	mov	r1, r8
   19d30:	mov	r0, r7
   19d34:	blx	r3
   19d38:	cmp	r6, r4
   19d3c:	bne	19d20 <__libc_csu_init@@Base+0x34>
   19d40:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19d44:	strdeq	r2, [r1], -r4
   19d48:	andeq	r2, r1, ip, ror #3

00019d4c <__libc_csu_fini@@Base>:
   19d4c:	bx	lr

Disassembly of section .fini:

00019d50 <.fini>:
   19d50:	push	{r3, lr}
   19d54:	pop	{r3, pc}
