
../repos/charybdis/tools/.libs/charybdis-mkpasswd:     file format elf32-littlearm


Disassembly of section .init:

00010710 <.init>:
   10710:	push	{r3, lr}
   10714:	bl	10874 <sprintf@plt+0x48>
   10718:	pop	{r3, pc}

Disassembly of section .plt:

0001071c <open@plt-0x14>:
   1071c:	push	{lr}		; (str lr, [sp, #-4]!)
   10720:	ldr	lr, [pc, #4]	; 1072c <open@plt-0x4>
   10724:	add	lr, pc, lr
   10728:	ldr	pc, [lr, #8]!
   1072c:	ldrdeq	r1, [r1], -r4

00010730 <open@plt>:
   10730:	add	ip, pc, #0, 12
   10734:	add	ip, ip, #69632	; 0x11000
   10738:	ldr	pc, [ip, #2260]!	; 0x8d4

0001073c <abort@plt>:
   1073c:	add	ip, pc, #0, 12
   10740:	add	ip, ip, #69632	; 0x11000
   10744:	ldr	pc, [ip, #2252]!	; 0x8cc

00010748 <srand@plt>:
   10748:	add	ip, pc, #0, 12
   1074c:	add	ip, ip, #69632	; 0x11000
   10750:	ldr	pc, [ip, #2244]!	; 0x8c4

00010754 <__libc_start_main@plt>:
   10754:	add	ip, pc, #0, 12
   10758:	add	ip, ip, #69632	; 0x11000
   1075c:	ldr	pc, [ip, #2236]!	; 0x8bc

00010760 <__gmon_start__@plt>:
   10760:	add	ip, pc, #0, 12
   10764:	add	ip, ip, #69632	; 0x11000
   10768:	ldr	pc, [ip, #2228]!	; 0x8b4

0001076c <getpass@plt>:
   1076c:	add	ip, pc, #0, 12
   10770:	add	ip, ip, #69632	; 0x11000
   10774:	ldr	pc, [ip, #2220]!	; 0x8ac

00010778 <calloc@plt>:
   10778:	add	ip, pc, #0, 12
   1077c:	add	ip, ip, #69632	; 0x11000
   10780:	ldr	pc, [ip, #2212]!	; 0x8a4

00010784 <free@plt>:
   10784:	add	ip, pc, #0, 12
   10788:	add	ip, ip, #69632	; 0x11000
   1078c:	ldr	pc, [ip, #2204]!	; 0x89c

00010790 <read@plt>:
   10790:	add	ip, pc, #0, 12
   10794:	add	ip, ip, #69632	; 0x11000
   10798:	ldr	pc, [ip, #2196]!	; 0x894

0001079c <strlen@plt>:
   1079c:	add	ip, pc, #0, 12
   107a0:	add	ip, ip, #69632	; 0x11000
   107a4:	ldr	pc, [ip, #2188]!	; 0x88c

000107a8 <getopt@plt>:
   107a8:	add	ip, pc, #0, 12
   107ac:	add	ip, ip, #69632	; 0x11000
   107b0:	ldr	pc, [ip, #2180]!	; 0x884

000107b4 <printf@plt>:
   107b4:	add	ip, pc, #0, 12
   107b8:	add	ip, ip, #69632	; 0x11000
   107bc:	ldr	pc, [ip, #2172]!	; 0x87c

000107c0 <atoi@plt>:
   107c0:	add	ip, pc, #0, 12
   107c4:	add	ip, ip, #69632	; 0x11000
   107c8:	ldr	pc, [ip, #2164]!	; 0x874

000107cc <fwrite@plt>:
   107cc:	add	ip, pc, #0, 12
   107d0:	add	ip, ip, #69632	; 0x11000
   107d4:	ldr	pc, [ip, #2156]!	; 0x86c

000107d8 <time@plt>:
   107d8:	add	ip, pc, #0, 12
   107dc:	add	ip, ip, #69632	; 0x11000
   107e0:	ldr	pc, [ip, #2148]!	; 0x864

000107e4 <strdup@plt>:
   107e4:	add	ip, pc, #0, 12
   107e8:	add	ip, ip, #69632	; 0x11000
   107ec:	ldr	pc, [ip, #2140]!	; 0x85c

000107f0 <rb_crypt@plt>:
   107f0:	add	ip, pc, #0, 12
   107f4:	add	ip, ip, #69632	; 0x11000
   107f8:	ldr	pc, [ip, #2132]!	; 0x854

000107fc <puts@plt>:
   107fc:	add	ip, pc, #0, 12
   10800:	add	ip, ip, #69632	; 0x11000
   10804:	ldr	pc, [ip, #2124]!	; 0x84c

00010808 <rand@plt>:
   10808:	add	ip, pc, #0, 12
   1080c:	add	ip, ip, #69632	; 0x11000
   10810:	ldr	pc, [ip, #2116]!	; 0x844

00010814 <strcmp@plt>:
   10814:	add	ip, pc, #0, 12
   10818:	add	ip, ip, #69632	; 0x11000
   1081c:	ldr	pc, [ip, #2108]!	; 0x83c

00010820 <exit@plt>:
   10820:	add	ip, pc, #0, 12
   10824:	add	ip, ip, #69632	; 0x11000
   10828:	ldr	pc, [ip, #2100]!	; 0x834

0001082c <sprintf@plt>:
   1082c:	add	ip, pc, #0, 12
   10830:	add	ip, ip, #69632	; 0x11000
   10834:	ldr	pc, [ip, #2092]!	; 0x82c

Disassembly of section .text:

00010838 <.text>:
   10838:	mov	fp, #0
   1083c:	mov	lr, #0
   10840:	pop	{r1}		; (ldr r1, [sp], #4)
   10844:	mov	r2, sp
   10848:	push	{r2}		; (str r2, [sp, #-4]!)
   1084c:	push	{r0}		; (str r0, [sp, #-4]!)
   10850:	ldr	ip, [pc, #16]	; 10868 <sprintf@plt+0x3c>
   10854:	push	{ip}		; (str ip, [sp, #-4]!)
   10858:	ldr	r0, [pc, #12]	; 1086c <sprintf@plt+0x40>
   1085c:	ldr	r3, [pc, #12]	; 10870 <sprintf@plt+0x44>
   10860:	bl	10754 <__libc_start_main@plt>
   10864:	bl	1073c <abort@plt>
   10868:	andeq	r1, r1, r4, lsl #5
   1086c:	andeq	r0, r1, r8, lsr #18
   10870:	andeq	r1, r1, r4, lsr #4
   10874:	ldr	r3, [pc, #20]	; 10890 <sprintf@plt+0x64>
   10878:	ldr	r2, [pc, #20]	; 10894 <sprintf@plt+0x68>
   1087c:	add	r3, pc, r3
   10880:	ldr	r2, [r3, r2]
   10884:	cmp	r2, #0
   10888:	bxeq	lr
   1088c:	b	10760 <__gmon_start__@plt>
   10890:	andeq	r1, r1, ip, ror r7
   10894:	andeq	r0, r0, r4, rrx
   10898:	ldr	r0, [pc, #24]	; 108b8 <sprintf@plt+0x8c>
   1089c:	ldr	r3, [pc, #24]	; 108bc <sprintf@plt+0x90>
   108a0:	cmp	r3, r0
   108a4:	bxeq	lr
   108a8:	ldr	r3, [pc, #16]	; 108c0 <sprintf@plt+0x94>
   108ac:	cmp	r3, #0
   108b0:	bxeq	lr
   108b4:	bx	r3
   108b8:	andeq	r2, r2, r0, ror r0
   108bc:	andeq	r2, r2, r0, ror r0
   108c0:	andeq	r0, r0, r0
   108c4:	ldr	r0, [pc, #36]	; 108f0 <sprintf@plt+0xc4>
   108c8:	ldr	r1, [pc, #36]	; 108f4 <sprintf@plt+0xc8>
   108cc:	sub	r1, r1, r0
   108d0:	asr	r1, r1, #2
   108d4:	add	r1, r1, r1, lsr #31
   108d8:	asrs	r1, r1, #1
   108dc:	bxeq	lr
   108e0:	ldr	r3, [pc, #16]	; 108f8 <sprintf@plt+0xcc>
   108e4:	cmp	r3, #0
   108e8:	bxeq	lr
   108ec:	bx	r3
   108f0:	andeq	r2, r2, r0, ror r0
   108f4:	andeq	r2, r2, r0, ror r0
   108f8:	andeq	r0, r0, r0
   108fc:	push	{r4, lr}
   10900:	ldr	r4, [pc, #24]	; 10920 <sprintf@plt+0xf4>
   10904:	ldrb	r3, [r4]
   10908:	cmp	r3, #0
   1090c:	popne	{r4, pc}
   10910:	bl	10898 <sprintf@plt+0x6c>
   10914:	mov	r3, #1
   10918:	strb	r3, [r4]
   1091c:	pop	{r4, pc}
   10920:	andeq	r2, r2, ip, ror r0
   10924:	b	108c4 <sprintf@plt+0x98>
   10928:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1092c:	add	fp, sp, #28
   10930:	sub	sp, sp, #12
   10934:	mov	r7, r1
   10938:	mov	r4, r0
   1093c:	mov	r0, #0
   10940:	str	r0, [sp, #8]
   10944:	movw	r6, #4756	; 0x1294
   10948:	movt	r6, #1
   1094c:	movw	r9, #8312	; 0x2078
   10950:	movt	r9, #2
   10954:	mov	r0, #0
   10958:	str	r0, [sp, #4]
   1095c:	mov	r8, #0
   10960:	mov	sl, #0
   10964:	mov	r5, #0
   10968:	b	10978 <sprintf@plt+0x14c>
   1096c:	orr	r8, r8, #2
   10970:	ldr	r0, [r9]
   10974:	str	r0, [sp, #4]
   10978:	mov	r0, r4
   1097c:	mov	r1, r7
   10980:	mov	r2, r6
   10984:	bl	107a8 <getopt@plt>
   10988:	mov	r1, r0
   1098c:	sub	r0, r0, #63	; 0x3f
   10990:	cmp	r0, #58	; 0x3a
   10994:	bhi	10a98 <sprintf@plt+0x26c>
   10998:	add	r2, pc, #0
   1099c:	ldr	pc, [r2, r0, lsl #2]
   109a0:	andeq	r0, r1, r4, lsr #26
   109a4:	andeq	r0, r1, r0, lsr #21
   109a8:	andeq	r0, r1, r0, lsr #21
   109ac:	andeq	r0, r1, r0, lsr #21
   109b0:	andeq	r0, r1, r0, lsr #21
   109b4:	andeq	r0, r1, r0, lsr #21
   109b8:	andeq	r0, r1, r0, lsr #21
   109bc:	andeq	r0, r1, r0, lsr #21
   109c0:	andeq	r0, r1, r0, lsr #21
   109c4:	andeq	r0, r1, r0, lsr #21
   109c8:	andeq	r0, r1, r0, lsr #21
   109cc:	andeq	r0, r1, r0, lsr #21
   109d0:	andeq	r0, r1, r0, lsr #21
   109d4:	andeq	r0, r1, r0, lsr #21
   109d8:	andeq	r0, r1, r0, lsr #21
   109dc:	andeq	r0, r1, r0, lsr #21
   109e0:	andeq	r0, r1, r0, lsr #21
   109e4:	andeq	r0, r1, r0, lsr #21
   109e8:	andeq	r0, r1, r0, lsr #21
   109ec:	andeq	r0, r1, r0, lsr #21
   109f0:	andeq	r0, r1, r0, lsr #21
   109f4:	andeq	r0, r1, r0, lsr #21
   109f8:	andeq	r0, r1, r0, lsr #21
   109fc:	andeq	r0, r1, r0, lsr #21
   10a00:	andeq	r0, r1, r0, lsr #21
   10a04:	andeq	r0, r1, r0, lsr #21
   10a08:	andeq	r0, r1, r0, lsr #21
   10a0c:	andeq	r0, r1, r0, lsr #21
   10a10:	andeq	r0, r1, r0, lsr #21
   10a14:	andeq	r0, r1, r0, lsr #21
   10a18:	andeq	r0, r1, r0, lsr #21
   10a1c:	andeq	r0, r1, r0, lsr #21
   10a20:	andeq	r0, r1, r0, lsr #21
   10a24:	andeq	r0, r1, r0, lsr #21
   10a28:	andeq	r0, r1, r0, lsr #21
   10a2c:	andeq	r0, r1, ip, lsl #21
   10a30:	andeq	r0, r1, r0, lsr #21
   10a34:	andeq	r0, r1, r0, lsr #21
   10a38:	andeq	r0, r1, r0, lsr #21
   10a3c:	andeq	r0, r1, r0, lsr #21
   10a40:	andeq	r0, r1, r0, lsr #21
   10a44:	andeq	r0, r1, r8, lsr #26
   10a48:	andeq	r0, r1, r0, lsr #21
   10a4c:	andeq	r0, r1, r0, lsr #21
   10a50:	andeq	r0, r1, r0, lsr #21
   10a54:			; <UNDEFINED> instruction: 0x00010ab8
   10a58:			; <UNDEFINED> instruction: 0x00010ab0
   10a5c:	andeq	r0, r1, r0, lsr #21
   10a60:	andeq	r0, r1, r0, lsr #21
   10a64:	andeq	r0, r1, ip, asr #21
   10a68:	andeq	r0, r1, r0, lsr #21
   10a6c:	ldrdeq	r0, [r1], -ip
   10a70:	andeq	r0, r1, ip, ror #18
   10a74:	andeq	r0, r1, r0, lsr #21
   10a78:	andeq	r0, r1, r0, lsr #21
   10a7c:	andeq	r0, r1, r0, lsr #21
   10a80:	andeq	r0, r1, r0, lsr #21
   10a84:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10a88:	strdeq	r0, [r1], -r8
   10a8c:	orr	r8, r8, #16
   10a90:	mov	r5, #4
   10a94:	b	10978 <sprintf@plt+0x14c>
   10a98:	cmn	r1, #1
   10a9c:	beq	10b00 <sprintf@plt+0x2d4>
   10aa0:	movw	r0, #4771	; 0x12a3
   10aa4:	movt	r0, #1
   10aa8:	bl	107b4 <printf@plt>
   10aac:	b	10978 <sprintf@plt+0x14c>
   10ab0:	orr	r8, r8, #1
   10ab4:	b	10978 <sprintf@plt+0x14c>
   10ab8:	ldr	r0, [r9]
   10abc:	orr	r8, r8, #8
   10ac0:	bl	107c0 <atoi@plt>
   10ac4:	mov	sl, r0
   10ac8:	b	10978 <sprintf@plt+0x14c>
   10acc:	orr	r8, r8, #4
   10ad0:	ldr	r0, [r9]
   10ad4:	str	r0, [sp, #8]
   10ad8:	b	10978 <sprintf@plt+0x14c>
   10adc:	ldr	r0, [r9]
   10ae0:	orr	r8, r8, #32
   10ae4:	bl	107c0 <atoi@plt>
   10ae8:	mov	r5, r0
   10aec:	b	10978 <sprintf@plt+0x14c>
   10af0:	orr	r8, r8, #64	; 0x40
   10af4:	b	10978 <sprintf@plt+0x14c>
   10af8:	orr	r8, r8, #128	; 0x80
   10afc:	b	10978 <sprintf@plt+0x14c>
   10b00:	tst	r8, #1
   10b04:	bne	10b48 <sprintf@plt+0x31c>
   10b08:	tst	r8, #16
   10b0c:	bne	10b8c <sprintf@plt+0x360>
   10b10:	and	r0, r8, #2
   10b14:	cmp	sl, #0
   10b18:	movweq	sl, #16
   10b1c:	tst	r8, #64	; 0x40
   10b20:	bne	10c40 <sprintf@plt+0x414>
   10b24:	cmp	r0, #0
   10b28:	bne	10c84 <sprintf@plt+0x458>
   10b2c:	mov	r0, sl
   10b30:	bl	110cc <sprintf@plt+0x8a0>
   10b34:	movw	r4, #8422	; 0x20e6
   10b38:	movt	r4, #2
   10b3c:	tst	r8, #4
   10b40:	bne	10b70 <sprintf@plt+0x344>
   10b44:	b	10bd4 <sprintf@plt+0x3a8>
   10b48:	tst	r8, #2
   10b4c:	bne	10bbc <sprintf@plt+0x390>
   10b50:	cmp	sl, #0
   10b54:	movweq	sl, #8
   10b58:	mov	r0, sl
   10b5c:	bl	10e80 <sprintf@plt+0x654>
   10b60:	movw	r4, #8338	; 0x2092
   10b64:	movt	r4, #2
   10b68:	tst	r8, #4
   10b6c:	beq	10bd4 <sprintf@plt+0x3a8>
   10b70:	ldr	r0, [sp, #8]
   10b74:	cmp	r0, #0
   10b78:	beq	10cdc <sprintf@plt+0x4b0>
   10b7c:	mov	r1, r4
   10b80:	bl	107f0 <rb_crypt@plt>
   10b84:	mov	r5, r0
   10b88:	b	10c28 <sprintf@plt+0x3fc>
   10b8c:	tst	r8, #2
   10b90:	bne	10c64 <sprintf@plt+0x438>
   10b94:	cmp	sl, #0
   10b98:	movweq	sl, #22
   10b9c:	mov	r0, r5
   10ba0:	mov	r1, sl
   10ba4:	bl	10f54 <sprintf@plt+0x728>
   10ba8:	movw	r4, #8474	; 0x211a
   10bac:	movt	r4, #2
   10bb0:	tst	r8, #4
   10bb4:	bne	10b70 <sprintf@plt+0x344>
   10bb8:	b	10bd4 <sprintf@plt+0x3a8>
   10bbc:	ldr	r0, [sp, #4]
   10bc0:	bl	10e30 <sprintf@plt+0x604>
   10bc4:	movw	r4, #8317	; 0x207d
   10bc8:	movt	r4, #2
   10bcc:	tst	r8, #4
   10bd0:	bne	10b70 <sprintf@plt+0x344>
   10bd4:	movw	r0, #4823	; 0x12d7
   10bd8:	movt	r0, #1
   10bdc:	bl	1076c <getpass@plt>
   10be0:	mov	r1, r4
   10be4:	bl	107f0 <rb_crypt@plt>
   10be8:	cmp	r0, #0
   10bec:	beq	10cbc <sprintf@plt+0x490>
   10bf0:	bl	107e4 <strdup@plt>
   10bf4:	mov	r5, r0
   10bf8:	movw	r0, #4854	; 0x12f6
   10bfc:	movt	r0, #1
   10c00:	bl	1076c <getpass@plt>
   10c04:	mov	r1, r4
   10c08:	bl	107f0 <rb_crypt@plt>
   10c0c:	cmp	r0, #0
   10c10:	beq	10cbc <sprintf@plt+0x490>
   10c14:	mov	r1, r0
   10c18:	mov	r0, r5
   10c1c:	bl	10814 <strcmp@plt>
   10c20:	cmp	r0, #0
   10c24:	bne	10cfc <sprintf@plt+0x4d0>
   10c28:	mov	r0, r5
   10c2c:	bl	107fc <puts@plt>
   10c30:	mov	r4, #0
   10c34:	mov	r0, r4
   10c38:	sub	sp, fp, #28
   10c3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10c40:	cmp	r0, #0
   10c44:	bne	10ca0 <sprintf@plt+0x474>
   10c48:	mov	r0, sl
   10c4c:	bl	11024 <sprintf@plt+0x7f8>
   10c50:	movw	r4, #8401	; 0x20d1
   10c54:	movt	r4, #2
   10c58:	tst	r8, #4
   10c5c:	bne	10b70 <sprintf@plt+0x344>
   10c60:	b	10bd4 <sprintf@plt+0x3a8>
   10c64:	mov	r0, r5
   10c68:	ldr	r1, [sp, #4]
   10c6c:	bl	10ed8 <sprintf@plt+0x6ac>
   10c70:	movw	r4, #8443	; 0x20fb
   10c74:	movt	r4, #2
   10c78:	tst	r8, #4
   10c7c:	bne	10b70 <sprintf@plt+0x344>
   10c80:	b	10bd4 <sprintf@plt+0x3a8>
   10c84:	ldr	r0, [sp, #4]
   10c88:	bl	1107c <sprintf@plt+0x850>
   10c8c:	movw	r4, #8380	; 0x20bc
   10c90:	movt	r4, #2
   10c94:	tst	r8, #4
   10c98:	bne	10b70 <sprintf@plt+0x344>
   10c9c:	b	10bd4 <sprintf@plt+0x3a8>
   10ca0:	ldr	r0, [sp, #4]
   10ca4:	bl	10fd4 <sprintf@plt+0x7a8>
   10ca8:	movw	r4, #8359	; 0x20a7
   10cac:	movt	r4, #2
   10cb0:	tst	r8, #4
   10cb4:	bne	10b70 <sprintf@plt+0x344>
   10cb8:	b	10bd4 <sprintf@plt+0x3a8>
   10cbc:	movw	r0, #8304	; 0x2070
   10cc0:	movt	r0, #2
   10cc4:	ldr	r3, [r0]
   10cc8:	movw	r0, #4835	; 0x12e3
   10ccc:	movt	r0, #1
   10cd0:	mov	r4, #1
   10cd4:	mov	r1, #18
   10cd8:	b	10d18 <sprintf@plt+0x4ec>
   10cdc:	movw	r0, #8304	; 0x2070
   10ce0:	movt	r0, #2
   10ce4:	ldr	r3, [r0]
   10ce8:	movw	r0, #4792	; 0x12b8
   10cec:	movt	r0, #1
   10cf0:	mov	r4, #1
   10cf4:	mov	r1, #30
   10cf8:	b	10d18 <sprintf@plt+0x4ec>
   10cfc:	movw	r0, #8304	; 0x2070
   10d00:	movt	r0, #2
   10d04:	ldr	r3, [r0]
   10d08:	movw	r0, #4862	; 0x12fe
   10d0c:	movt	r0, #1
   10d10:	mov	r4, #1
   10d14:	mov	r1, #23
   10d18:	mov	r2, #1
   10d1c:	bl	107cc <fwrite@plt>
   10d20:	b	10c34 <sprintf@plt+0x408>
   10d24:	bl	10dcc <sprintf@plt+0x5a0>
   10d28:	bl	10d2c <sprintf@plt+0x500>
   10d2c:	push	{fp, lr}
   10d30:	mov	fp, sp
   10d34:	movw	r0, #5008	; 0x1390
   10d38:	movt	r0, #1
   10d3c:	bl	107fc <puts@plt>
   10d40:	movw	r0, #5084	; 0x13dc
   10d44:	movt	r0, #1
   10d48:	bl	107fc <puts@plt>
   10d4c:	movw	r0, #5114	; 0x13fa
   10d50:	movt	r0, #1
   10d54:	bl	107fc <puts@plt>
   10d58:	movw	r0, #5144	; 0x1418
   10d5c:	movt	r0, #1
   10d60:	bl	107fc <puts@plt>
   10d64:	movw	r0, #5172	; 0x1434
   10d68:	movt	r0, #1
   10d6c:	bl	107fc <puts@plt>
   10d70:	movw	r0, #5204	; 0x1454
   10d74:	movt	r0, #1
   10d78:	bl	107fc <puts@plt>
   10d7c:	movw	r0, #5258	; 0x148a
   10d80:	movt	r0, #1
   10d84:	bl	107fc <puts@plt>
   10d88:	movw	r0, #5312	; 0x14c0
   10d8c:	movt	r0, #1
   10d90:	bl	107fc <puts@plt>
   10d94:	movw	r0, #5353	; 0x14e9
   10d98:	movt	r0, #1
   10d9c:	bl	107fc <puts@plt>
   10da0:	movw	r0, #5409	; 0x1521
   10da4:	movt	r0, #1
   10da8:	bl	107fc <puts@plt>
   10dac:	movw	r0, #5434	; 0x153a
   10db0:	movt	r0, #1
   10db4:	bl	107fc <puts@plt>
   10db8:	movw	r0, #5473	; 0x1561
   10dbc:	movt	r0, #1
   10dc0:	bl	107fc <puts@plt>
   10dc4:	mov	r0, #0
   10dc8:	bl	10820 <exit@plt>
   10dcc:	push	{fp, lr}
   10dd0:	mov	fp, sp
   10dd4:	movw	r0, #5509	; 0x1585
   10dd8:	movt	r0, #1
   10ddc:	bl	107fc <puts@plt>
   10de0:	movw	r0, #5544	; 0x15a8
   10de4:	movt	r0, #1
   10de8:	bl	107fc <puts@plt>
   10dec:	movw	r0, #5610	; 0x15ea
   10df0:	movt	r0, #1
   10df4:	bl	107fc <puts@plt>
   10df8:	movw	r0, #5674	; 0x162a
   10dfc:	movt	r0, #1
   10e00:	bl	107fc <puts@plt>
   10e04:	movw	r0, #5738	; 0x166a
   10e08:	movt	r0, #1
   10e0c:	bl	107fc <puts@plt>
   10e10:	movw	r0, #5799	; 0x16a7
   10e14:	movt	r0, #1
   10e18:	bl	107fc <puts@plt>
   10e1c:	movw	r0, #5837	; 0x16cd
   10e20:	movt	r0, #1
   10e24:	bl	107fc <puts@plt>
   10e28:	mov	r0, #0
   10e2c:	bl	10820 <exit@plt>
   10e30:	push	{r4, sl, fp, lr}
   10e34:	add	fp, sp, #8
   10e38:	cmp	r0, #0
   10e3c:	beq	10e6c <sprintf@plt+0x640>
   10e40:	mov	r4, r0
   10e44:	bl	1079c <strlen@plt>
   10e48:	cmp	r0, #16
   10e4c:	bhi	10e6c <sprintf@plt+0x640>
   10e50:	movw	r0, #8317	; 0x207d
   10e54:	movt	r0, #2
   10e58:	movw	r1, #4886	; 0x1316
   10e5c:	movt	r1, #1
   10e60:	mov	r2, r4
   10e64:	pop	{r4, sl, fp, lr}
   10e68:	b	1082c <sprintf@plt>
   10e6c:	movw	r0, #5859	; 0x16e3
   10e70:	movt	r0, #1
   10e74:	bl	107fc <puts@plt>
   10e78:	mov	r0, #1
   10e7c:	bl	10820 <exit@plt>
   10e80:	push	{r4, r5, r6, sl, fp, lr}
   10e84:	add	fp, sp, #16
   10e88:	cmp	r0, #17
   10e8c:	bge	10ec4 <sprintf@plt+0x698>
   10e90:	mov	r4, r0
   10e94:	movw	r5, #8338	; 0x2092
   10e98:	movt	r5, #2
   10e9c:	mov	r6, #36	; 0x24
   10ea0:	strb	r6, [r5, #2]
   10ea4:	movw	r0, #12580	; 0x3124
   10ea8:	strh	r0, [r5]
   10eac:	add	r0, r5, #3
   10eb0:	mov	r1, r4
   10eb4:	bl	11124 <sprintf@plt+0x8f8>
   10eb8:	add	r0, r4, r5
   10ebc:	strh	r6, [r0, #3]
   10ec0:	pop	{r4, r5, r6, sl, fp, pc}
   10ec4:	movw	r0, #5924	; 0x1724
   10ec8:	movt	r0, #1
   10ecc:	bl	107fc <puts@plt>
   10ed0:	mov	r0, #0
   10ed4:	bl	10820 <exit@plt>
   10ed8:	push	{r4, r5, r6, sl, fp, lr}
   10edc:	add	fp, sp, #16
   10ee0:	sub	sp, sp, #8
   10ee4:	cmp	r1, #0
   10ee8:	beq	10f40 <sprintf@plt+0x714>
   10eec:	mov	r4, r1
   10ef0:	mov	r5, r0
   10ef4:	mov	r0, r1
   10ef8:	bl	1079c <strlen@plt>
   10efc:	cmp	r0, #22
   10f00:	bhi	10f40 <sprintf@plt+0x714>
   10f04:	add	r6, sp, #5
   10f08:	movw	r1, #4984	; 0x1378
   10f0c:	movt	r1, #1
   10f10:	mov	r0, r6
   10f14:	mov	r2, r5
   10f18:	bl	1082c <sprintf@plt>
   10f1c:	movw	r0, #8443	; 0x20fb
   10f20:	movt	r0, #2
   10f24:	movw	r1, #4989	; 0x137d
   10f28:	movt	r1, #1
   10f2c:	mov	r2, r6
   10f30:	mov	r3, r4
   10f34:	bl	1082c <sprintf@plt>
   10f38:	sub	sp, fp, #16
   10f3c:	pop	{r4, r5, r6, sl, fp, pc}
   10f40:	movw	r0, #5949	; 0x173d
   10f44:	movt	r0, #1
   10f48:	bl	107fc <puts@plt>
   10f4c:	mov	r0, #1
   10f50:	bl	10820 <exit@plt>
   10f54:	push	{r4, r5, r6, sl, fp, lr}
   10f58:	add	fp, sp, #16
   10f5c:	sub	sp, sp, #8
   10f60:	cmp	r1, #23
   10f64:	bge	10fc0 <sprintf@plt+0x794>
   10f68:	mov	r4, r1
   10f6c:	mov	r2, r0
   10f70:	add	r5, sp, #5
   10f74:	movw	r1, #4984	; 0x1378
   10f78:	movt	r1, #1
   10f7c:	mov	r0, r5
   10f80:	bl	1082c <sprintf@plt>
   10f84:	movw	r6, #8474	; 0x211a
   10f88:	movt	r6, #2
   10f8c:	movw	r1, #5000	; 0x1388
   10f90:	movt	r1, #1
   10f94:	mov	r0, r6
   10f98:	mov	r2, r5
   10f9c:	bl	1082c <sprintf@plt>
   10fa0:	add	r0, r6, #7
   10fa4:	mov	r1, r4
   10fa8:	bl	11124 <sprintf@plt+0x8f8>
   10fac:	add	r0, r4, r6
   10fb0:	mov	r1, #36	; 0x24
   10fb4:	strh	r1, [r0, #7]
   10fb8:	sub	sp, fp, #16
   10fbc:	pop	{r4, r5, r6, sl, fp, pc}
   10fc0:	movw	r0, #6014	; 0x177e
   10fc4:	movt	r0, #1
   10fc8:	bl	107fc <puts@plt>
   10fcc:	mov	r0, #0
   10fd0:	bl	10820 <exit@plt>
   10fd4:	push	{r4, sl, fp, lr}
   10fd8:	add	fp, sp, #8
   10fdc:	cmp	r0, #0
   10fe0:	beq	11010 <sprintf@plt+0x7e4>
   10fe4:	mov	r4, r0
   10fe8:	bl	1079c <strlen@plt>
   10fec:	cmp	r0, #16
   10ff0:	bhi	11010 <sprintf@plt+0x7e4>
   10ff4:	movw	r0, #8359	; 0x20a7
   10ff8:	movt	r0, #2
   10ffc:	movw	r1, #4970	; 0x136a
   11000:	movt	r1, #1
   11004:	mov	r2, r4
   11008:	pop	{r4, sl, fp, lr}
   1100c:	b	1082c <sprintf@plt>
   11010:	movw	r0, #5859	; 0x16e3
   11014:	movt	r0, #1
   11018:	bl	107fc <puts@plt>
   1101c:	mov	r0, #1
   11020:	bl	10820 <exit@plt>
   11024:	push	{r4, r5, r6, sl, fp, lr}
   11028:	add	fp, sp, #16
   1102c:	cmp	r0, #17
   11030:	bge	11068 <sprintf@plt+0x83c>
   11034:	mov	r4, r0
   11038:	movw	r5, #8401	; 0x20d1
   1103c:	movt	r5, #2
   11040:	mov	r6, #36	; 0x24
   11044:	strb	r6, [r5, #2]
   11048:	movw	r0, #13604	; 0x3524
   1104c:	strh	r0, [r5]
   11050:	add	r0, r5, #3
   11054:	mov	r1, r4
   11058:	bl	11124 <sprintf@plt+0x8f8>
   1105c:	add	r0, r4, r5
   11060:	strh	r6, [r0, #3]
   11064:	pop	{r4, r5, r6, sl, fp, pc}
   11068:	movw	r0, #6044	; 0x179c
   1106c:	movt	r0, #1
   11070:	bl	107fc <puts@plt>
   11074:	mov	r0, #0
   11078:	bl	10820 <exit@plt>
   1107c:	push	{r4, sl, fp, lr}
   11080:	add	fp, sp, #8
   11084:	cmp	r0, #0
   11088:	beq	110b8 <sprintf@plt+0x88c>
   1108c:	mov	r4, r0
   11090:	bl	1079c <strlen@plt>
   11094:	cmp	r0, #16
   11098:	bhi	110b8 <sprintf@plt+0x88c>
   1109c:	movw	r0, #8380	; 0x20bc
   110a0:	movt	r0, #2
   110a4:	movw	r1, #4977	; 0x1371
   110a8:	movt	r1, #1
   110ac:	mov	r2, r4
   110b0:	pop	{r4, sl, fp, lr}
   110b4:	b	1082c <sprintf@plt>
   110b8:	movw	r0, #5859	; 0x16e3
   110bc:	movt	r0, #1
   110c0:	bl	107fc <puts@plt>
   110c4:	mov	r0, #1
   110c8:	bl	10820 <exit@plt>
   110cc:	push	{r4, r5, r6, sl, fp, lr}
   110d0:	add	fp, sp, #16
   110d4:	cmp	r0, #17
   110d8:	bge	11110 <sprintf@plt+0x8e4>
   110dc:	mov	r4, r0
   110e0:	movw	r5, #8422	; 0x20e6
   110e4:	movt	r5, #2
   110e8:	mov	r6, #36	; 0x24
   110ec:	strb	r6, [r5, #2]
   110f0:	movw	r0, #13860	; 0x3624
   110f4:	strh	r0, [r5]
   110f8:	add	r0, r5, #3
   110fc:	mov	r1, r4
   11100:	bl	11124 <sprintf@plt+0x8f8>
   11104:	add	r0, r4, r5
   11108:	strh	r6, [r0, #3]
   1110c:	pop	{r4, r5, r6, sl, fp, pc}
   11110:	movw	r0, #6072	; 0x17b8
   11114:	movt	r0, #1
   11118:	bl	107fc <puts@plt>
   1111c:	mov	r0, #0
   11120:	bl	10820 <exit@plt>
   11124:	push	{r4, r5, r6, r7, fp, lr}
   11128:	add	fp, sp, #16
   1112c:	mov	r4, r1
   11130:	mov	r5, r0
   11134:	movw	r0, #4893	; 0x131d
   11138:	movt	r0, #1
   1113c:	mov	r1, #0
   11140:	bl	10730 <open@plt>
   11144:	cmn	r0, #1
   11148:	ble	111b8 <sprintf@plt+0x98c>
   1114c:	mov	r7, r0
   11150:	mov	r0, #1
   11154:	mov	r1, r4
   11158:	bl	10778 <calloc@plt>
   1115c:	mov	r6, r0
   11160:	mov	r0, r7
   11164:	mov	r1, r6
   11168:	mov	r2, r4
   1116c:	bl	10790 <read@plt>
   11170:	cmp	r0, r4
   11174:	bne	111b0 <sprintf@plt+0x984>
   11178:	cmp	r4, #1
   1117c:	blt	111a4 <sprintf@plt+0x978>
   11180:	movw	r0, #4905	; 0x1329
   11184:	movt	r0, #1
   11188:	mov	r1, r6
   1118c:	ldrb	r2, [r1], #1
   11190:	and	r2, r2, #63	; 0x3f
   11194:	ldrb	r2, [r0, r2]
   11198:	strb	r2, [r5], #1
   1119c:	subs	r4, r4, #1
   111a0:	bne	1118c <sprintf@plt+0x960>
   111a4:	mov	r0, r6
   111a8:	pop	{r4, r5, r6, r7, fp, lr}
   111ac:	b	10784 <free@plt>
   111b0:	mov	r0, r6
   111b4:	bl	10784 <free@plt>
   111b8:	mov	r0, r5
   111bc:	mov	r1, r4
   111c0:	pop	{r4, r5, r6, r7, fp, lr}
   111c4:	b	111c8 <sprintf@plt+0x99c>
   111c8:	push	{r4, r5, r6, r7, fp, lr}
   111cc:	add	fp, sp, #16
   111d0:	mov	r5, r1
   111d4:	mov	r4, r0
   111d8:	mov	r0, #0
   111dc:	bl	107d8 <time@plt>
   111e0:	bl	10748 <srand@plt>
   111e4:	cmp	r5, #1
   111e8:	blt	1121c <sprintf@plt+0x9f0>
   111ec:	movw	r6, #4905	; 0x1329
   111f0:	movt	r6, #1
   111f4:	mov	r7, r4
   111f8:	bl	10808 <rand@plt>
   111fc:	asr	r1, r0, #31
   11200:	add	r1, r0, r1, lsr #26
   11204:	bic	r1, r1, #63	; 0x3f
   11208:	sub	r0, r0, r1
   1120c:	ldrb	r0, [r6, r0]
   11210:	strb	r0, [r7], #1
   11214:	subs	r5, r5, #1
   11218:	bne	111f8 <sprintf@plt+0x9cc>
   1121c:	mov	r0, r4
   11220:	pop	{r4, r5, r6, r7, fp, pc}
   11224:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11228:	mov	r7, r0
   1122c:	ldr	r6, [pc, #72]	; 1127c <sprintf@plt+0xa50>
   11230:	ldr	r5, [pc, #72]	; 11280 <sprintf@plt+0xa54>
   11234:	add	r6, pc, r6
   11238:	add	r5, pc, r5
   1123c:	sub	r6, r6, r5
   11240:	mov	r8, r1
   11244:	mov	r9, r2
   11248:	bl	10710 <open@plt-0x20>
   1124c:	asrs	r6, r6, #2
   11250:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11254:	mov	r4, #0
   11258:	add	r4, r4, #1
   1125c:	ldr	r3, [r5], #4
   11260:	mov	r2, r9
   11264:	mov	r1, r8
   11268:	mov	r0, r7
   1126c:	blx	r3
   11270:	cmp	r6, r4
   11274:	bne	11258 <sprintf@plt+0xa2c>
   11278:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1127c:			; <UNDEFINED> instruction: 0x00010cb8
   11280:			; <UNDEFINED> instruction: 0x00010cb0
   11284:	bx	lr

Disassembly of section .fini:

00011288 <.fini>:
   11288:	push	{r3, lr}
   1128c:	pop	{r3, pc}
