
../repos/coreutils/src/sync:     file format elf32-littlearm


Disassembly of section .init:

00010d38 <.init>:
   10d38:	push	{r3, lr}
   10d3c:	bl	10fe0 <close@plt+0x48>
   10d40:	pop	{r3, pc}

Disassembly of section .plt:

00010d44 <calloc@plt-0x14>:
   10d44:	push	{lr}		; (str lr, [sp, #-4]!)
   10d48:	ldr	lr, [pc, #4]	; 10d54 <calloc@plt-0x4>
   10d4c:	add	lr, pc, lr
   10d50:	ldr	pc, [lr, #8]!
   10d54:	andeq	r5, r1, ip, lsr #5

00010d58 <calloc@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #86016	; 0x15000
   10d60:	ldr	pc, [ip, #684]!	; 0x2ac

00010d64 <fputs_unlocked@plt>:
   10d64:	add	ip, pc, #0, 12
   10d68:	add	ip, ip, #86016	; 0x15000
   10d6c:	ldr	pc, [ip, #676]!	; 0x2a4

00010d70 <fsync@plt>:
   10d70:	add	ip, pc, #0, 12
   10d74:	add	ip, ip, #86016	; 0x15000
   10d78:	ldr	pc, [ip, #668]!	; 0x29c

00010d7c <strcmp@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #86016	; 0x15000
   10d84:	ldr	pc, [ip, #660]!	; 0x294

00010d88 <fflush@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #86016	; 0x15000
   10d90:	ldr	pc, [ip, #652]!	; 0x28c

00010d94 <free@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #86016	; 0x15000
   10d9c:	ldr	pc, [ip, #644]!	; 0x284

00010da0 <_exit@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #86016	; 0x15000
   10da8:	ldr	pc, [ip, #636]!	; 0x27c

00010dac <memcpy@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #86016	; 0x15000
   10db4:	ldr	pc, [ip, #628]!	; 0x274

00010db8 <mbsinit@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #86016	; 0x15000
   10dc0:	ldr	pc, [ip, #620]!	; 0x26c

00010dc4 <dcgettext@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #86016	; 0x15000
   10dcc:	ldr	pc, [ip, #612]!	; 0x264

00010dd0 <syncfs@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #86016	; 0x15000
   10dd8:	ldr	pc, [ip, #604]!	; 0x25c

00010ddc <realloc@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #86016	; 0x15000
   10de4:	ldr	pc, [ip, #596]!	; 0x254

00010de8 <textdomain@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #86016	; 0x15000
   10df0:	ldr	pc, [ip, #588]!	; 0x24c

00010df4 <iswprint@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #86016	; 0x15000
   10dfc:	ldr	pc, [ip, #580]!	; 0x244

00010e00 <fwrite@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #86016	; 0x15000
   10e08:	ldr	pc, [ip, #572]!	; 0x23c

00010e0c <lseek64@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #86016	; 0x15000
   10e14:	ldr	pc, [ip, #564]!	; 0x234

00010e18 <__ctype_get_mb_cur_max@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #86016	; 0x15000
   10e20:	ldr	pc, [ip, #556]!	; 0x22c

00010e24 <__fpending@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #86016	; 0x15000
   10e2c:	ldr	pc, [ip, #548]!	; 0x224

00010e30 <ferror_unlocked@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #86016	; 0x15000
   10e38:	ldr	pc, [ip, #540]!	; 0x21c

00010e3c <mbrtowc@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #86016	; 0x15000
   10e44:	ldr	pc, [ip, #532]!	; 0x214

00010e48 <error@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #86016	; 0x15000
   10e50:	ldr	pc, [ip, #524]!	; 0x20c

00010e54 <open64@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #86016	; 0x15000
   10e5c:	ldr	pc, [ip, #516]!	; 0x204

00010e60 <malloc@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #86016	; 0x15000
   10e68:	ldr	pc, [ip, #508]!	; 0x1fc

00010e6c <__libc_start_main@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #86016	; 0x15000
   10e74:	ldr	pc, [ip, #500]!	; 0x1f4

00010e78 <__freading@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #86016	; 0x15000
   10e80:	ldr	pc, [ip, #492]!	; 0x1ec

00010e84 <__gmon_start__@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #86016	; 0x15000
   10e8c:	ldr	pc, [ip, #484]!	; 0x1e4

00010e90 <getopt_long@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #86016	; 0x15000
   10e98:	ldr	pc, [ip, #476]!	; 0x1dc

00010e9c <__ctype_b_loc@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #86016	; 0x15000
   10ea4:	ldr	pc, [ip, #468]!	; 0x1d4

00010ea8 <exit@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #86016	; 0x15000
   10eb0:	ldr	pc, [ip, #460]!	; 0x1cc

00010eb4 <bcmp@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #86016	; 0x15000
   10ebc:	ldr	pc, [ip, #452]!	; 0x1c4

00010ec0 <strlen@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #86016	; 0x15000
   10ec8:	ldr	pc, [ip, #444]!	; 0x1bc

00010ecc <__errno_location@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #86016	; 0x15000
   10ed4:	ldr	pc, [ip, #436]!	; 0x1b4

00010ed8 <__cxa_atexit@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #86016	; 0x15000
   10ee0:	ldr	pc, [ip, #428]!	; 0x1ac

00010ee4 <memset@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #86016	; 0x15000
   10eec:	ldr	pc, [ip, #420]!	; 0x1a4

00010ef0 <__printf_chk@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #86016	; 0x15000
   10ef8:	ldr	pc, [ip, #412]!	; 0x19c

00010efc <fileno@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #86016	; 0x15000
   10f04:	ldr	pc, [ip, #404]!	; 0x194

00010f08 <__fprintf_chk@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #86016	; 0x15000
   10f10:	ldr	pc, [ip, #396]!	; 0x18c

00010f14 <fclose@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #86016	; 0x15000
   10f1c:	ldr	pc, [ip, #388]!	; 0x184

00010f20 <fseeko64@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #86016	; 0x15000
   10f28:	ldr	pc, [ip, #380]!	; 0x17c

00010f2c <fcntl64@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #86016	; 0x15000
   10f34:	ldr	pc, [ip, #372]!	; 0x174

00010f38 <setlocale@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #86016	; 0x15000
   10f40:	ldr	pc, [ip, #364]!	; 0x16c

00010f44 <strrchr@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #86016	; 0x15000
   10f4c:	ldr	pc, [ip, #356]!	; 0x164

00010f50 <nl_langinfo@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #86016	; 0x15000
   10f58:	ldr	pc, [ip, #348]!	; 0x15c

00010f5c <bindtextdomain@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #86016	; 0x15000
   10f64:	ldr	pc, [ip, #340]!	; 0x154

00010f68 <sync@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #86016	; 0x15000
   10f70:	ldr	pc, [ip, #332]!	; 0x14c

00010f74 <strncmp@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #86016	; 0x15000
   10f7c:	ldr	pc, [ip, #324]!	; 0x144

00010f80 <fdatasync@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #86016	; 0x15000
   10f88:	ldr	pc, [ip, #316]!	; 0x13c

00010f8c <abort@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #86016	; 0x15000
   10f94:	ldr	pc, [ip, #308]!	; 0x134

00010f98 <close@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #86016	; 0x15000
   10fa0:	ldr	pc, [ip, #300]!	; 0x12c

Disassembly of section .text:

00010fa4 <.text>:
   10fa4:	mov	fp, #0
   10fa8:	mov	lr, #0
   10fac:	pop	{r1}		; (ldr r1, [sp], #4)
   10fb0:	mov	r2, sp
   10fb4:	push	{r2}		; (str r2, [sp, #-4]!)
   10fb8:	push	{r0}		; (str r0, [sp, #-4]!)
   10fbc:	ldr	ip, [pc, #16]	; 10fd4 <close@plt+0x3c>
   10fc0:	push	{ip}		; (str ip, [sp, #-4]!)
   10fc4:	ldr	r0, [pc, #12]	; 10fd8 <close@plt+0x40>
   10fc8:	ldr	r3, [pc, #12]	; 10fdc <close@plt+0x44>
   10fcc:	bl	10e6c <__libc_start_main@plt>
   10fd0:	bl	10f8c <abort@plt>
   10fd4:	andeq	r4, r1, r4, lsr r7
   10fd8:	andeq	r1, r1, r0, asr #6
   10fdc:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   10fe0:	ldr	r3, [pc, #20]	; 10ffc <close@plt+0x64>
   10fe4:	ldr	r2, [pc, #20]	; 11000 <close@plt+0x68>
   10fe8:	add	r3, pc, r3
   10fec:	ldr	r2, [r3, r2]
   10ff0:	cmp	r2, #0
   10ff4:	bxeq	lr
   10ff8:	b	10e84 <__gmon_start__@plt>
   10ffc:	andeq	r5, r1, r0, lsl r0
   11000:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11004:	ldr	r0, [pc, #24]	; 11024 <close@plt+0x8c>
   11008:	ldr	r3, [pc, #24]	; 11028 <close@plt+0x90>
   1100c:	cmp	r3, r0
   11010:	bxeq	lr
   11014:	ldr	r3, [pc, #16]	; 1102c <close@plt+0x94>
   11018:	cmp	r3, #0
   1101c:	bxeq	lr
   11020:	bx	r3
   11024:	andeq	r6, r2, r8, lsr #2
   11028:	andeq	r6, r2, r8, lsr #2
   1102c:	andeq	r0, r0, r0
   11030:	ldr	r0, [pc, #36]	; 1105c <close@plt+0xc4>
   11034:	ldr	r1, [pc, #36]	; 11060 <close@plt+0xc8>
   11038:	sub	r1, r1, r0
   1103c:	asr	r1, r1, #2
   11040:	add	r1, r1, r1, lsr #31
   11044:	asrs	r1, r1, #1
   11048:	bxeq	lr
   1104c:	ldr	r3, [pc, #16]	; 11064 <close@plt+0xcc>
   11050:	cmp	r3, #0
   11054:	bxeq	lr
   11058:	bx	r3
   1105c:	andeq	r6, r2, r8, lsr #2
   11060:	andeq	r6, r2, r8, lsr #2
   11064:	andeq	r0, r0, r0
   11068:	push	{r4, lr}
   1106c:	ldr	r4, [pc, #24]	; 1108c <close@plt+0xf4>
   11070:	ldrb	r3, [r4]
   11074:	cmp	r3, #0
   11078:	popne	{r4, pc}
   1107c:	bl	11004 <close@plt+0x6c>
   11080:	mov	r3, #1
   11084:	strb	r3, [r4]
   11088:	pop	{r4, pc}
   1108c:	andeq	r6, r2, r0, asr #2
   11090:	b	11030 <close@plt+0x98>
   11094:	push	{fp, lr}
   11098:	mov	fp, sp
   1109c:	mov	r4, r0
   110a0:	cmp	r0, #0
   110a4:	bne	11174 <close@plt+0x1dc>
   110a8:	movw	r1, #18307	; 0x4783
   110ac:	movt	r1, #1
   110b0:	mov	r0, #0
   110b4:	mov	r2, #5
   110b8:	bl	10dc4 <dcgettext@plt>
   110bc:	mov	r1, r0
   110c0:	movw	r0, #24912	; 0x6150
   110c4:	movt	r0, #2
   110c8:	ldr	r2, [r0]
   110cc:	mov	r0, #1
   110d0:	bl	10ef0 <__printf_chk@plt>
   110d4:	movw	r1, #18337	; 0x47a1
   110d8:	movt	r1, #1
   110dc:	mov	r0, #0
   110e0:	mov	r2, #5
   110e4:	bl	10dc4 <dcgettext@plt>
   110e8:	movw	r5, #24892	; 0x613c
   110ec:	movt	r5, #2
   110f0:	ldr	r1, [r5]
   110f4:	bl	10d64 <fputs_unlocked@plt>
   110f8:	movw	r1, #18474	; 0x482a
   110fc:	movt	r1, #1
   11100:	mov	r0, #0
   11104:	mov	r2, #5
   11108:	bl	10dc4 <dcgettext@plt>
   1110c:	ldr	r1, [r5]
   11110:	bl	10d64 <fputs_unlocked@plt>
   11114:	movw	r1, #18542	; 0x486e
   11118:	movt	r1, #1
   1111c:	mov	r0, #0
   11120:	mov	r2, #5
   11124:	bl	10dc4 <dcgettext@plt>
   11128:	ldr	r1, [r5]
   1112c:	bl	10d64 <fputs_unlocked@plt>
   11130:	movw	r1, #18613	; 0x48b5
   11134:	movt	r1, #1
   11138:	mov	r0, #0
   1113c:	mov	r2, #5
   11140:	bl	10dc4 <dcgettext@plt>
   11144:	ldr	r1, [r5]
   11148:	bl	10d64 <fputs_unlocked@plt>
   1114c:	movw	r1, #18658	; 0x48e2
   11150:	movt	r1, #1
   11154:	mov	r0, #0
   11158:	mov	r2, #5
   1115c:	bl	10dc4 <dcgettext@plt>
   11160:	ldr	r1, [r5]
   11164:	bl	10d64 <fputs_unlocked@plt>
   11168:	bl	111b8 <close@plt+0x220>
   1116c:	mov	r0, r4
   11170:	bl	10ea8 <exit@plt>
   11174:	movw	r0, #24888	; 0x6138
   11178:	movt	r0, #2
   1117c:	ldr	r5, [r0]
   11180:	movw	r1, #18268	; 0x475c
   11184:	movt	r1, #1
   11188:	mov	r0, #0
   1118c:	mov	r2, #5
   11190:	bl	10dc4 <dcgettext@plt>
   11194:	mov	r2, r0
   11198:	movw	r0, #24912	; 0x6150
   1119c:	movt	r0, #2
   111a0:	ldr	r3, [r0]
   111a4:	mov	r0, r5
   111a8:	mov	r1, #1
   111ac:	bl	10f08 <__fprintf_chk@plt>
   111b0:	mov	r0, r4
   111b4:	bl	10ea8 <exit@plt>
   111b8:	push	{r4, r5, r6, sl, fp, lr}
   111bc:	add	fp, sp, #16
   111c0:	sub	sp, sp, #56	; 0x38
   111c4:	movw	r0, #19368	; 0x4ba8
   111c8:	movt	r0, #1
   111cc:	add	r1, r0, #32
   111d0:	mov	r2, #48	; 0x30
   111d4:	vld1.64	{d16-d17}, [r1]
   111d8:	mov	r6, sp
   111dc:	add	r1, r6, #32
   111e0:	add	r3, r0, #16
   111e4:	vld1.64	{d18-d19}, [r0], r2
   111e8:	vld1.64	{d20-d21}, [r3]
   111ec:	vldr	d22, [r0]
   111f0:	vst1.64	{d16-d17}, [r1]
   111f4:	add	r0, r6, #16
   111f8:	vst1.64	{d20-d21}, [r0]
   111fc:	mov	r0, r6
   11200:	vst1.64	{d18-d19}, [r0], r2
   11204:	vstr	d22, [r0]
   11208:	ldr	r1, [sp]
   1120c:	cmp	r1, #0
   11210:	movw	r4, #18712	; 0x4918
   11214:	movt	r4, #1
   11218:	beq	11240 <close@plt+0x2a8>
   1121c:	mov	r6, sp
   11220:	movw	r5, #18712	; 0x4918
   11224:	movt	r5, #1
   11228:	mov	r0, r5
   1122c:	bl	10d7c <strcmp@plt>
   11230:	cmp	r0, #0
   11234:	ldrne	r1, [r6, #8]!
   11238:	cmpne	r1, #0
   1123c:	bne	11228 <close@plt+0x290>
   11240:	ldr	r5, [r6, #4]
   11244:	movw	r1, #18964	; 0x4a14
   11248:	movt	r1, #1
   1124c:	mov	r0, #0
   11250:	mov	r2, #5
   11254:	bl	10dc4 <dcgettext@plt>
   11258:	mov	r1, r0
   1125c:	movw	r2, #18744	; 0x4938
   11260:	movt	r2, #1
   11264:	movw	r3, #18987	; 0x4a2b
   11268:	movt	r3, #1
   1126c:	mov	r0, #1
   11270:	bl	10ef0 <__printf_chk@plt>
   11274:	cmp	r5, #0
   11278:	moveq	r5, r4
   1127c:	mov	r0, #5
   11280:	mov	r1, #0
   11284:	bl	10f38 <setlocale@plt>
   11288:	cmp	r0, #0
   1128c:	beq	112cc <close@plt+0x334>
   11290:	movw	r1, #19027	; 0x4a53
   11294:	movt	r1, #1
   11298:	mov	r2, #3
   1129c:	bl	10f74 <strncmp@plt>
   112a0:	cmp	r0, #0
   112a4:	beq	112cc <close@plt+0x334>
   112a8:	movw	r1, #19031	; 0x4a57
   112ac:	movt	r1, #1
   112b0:	mov	r0, #0
   112b4:	mov	r2, #5
   112b8:	bl	10dc4 <dcgettext@plt>
   112bc:	movw	r1, #24892	; 0x613c
   112c0:	movt	r1, #2
   112c4:	ldr	r1, [r1]
   112c8:	bl	10d64 <fputs_unlocked@plt>
   112cc:	movw	r1, #19102	; 0x4a9e
   112d0:	movt	r1, #1
   112d4:	mov	r0, #0
   112d8:	mov	r2, #5
   112dc:	bl	10dc4 <dcgettext@plt>
   112e0:	mov	r1, r0
   112e4:	movw	r2, #18987	; 0x4a2b
   112e8:	movt	r2, #1
   112ec:	mov	r0, #1
   112f0:	mov	r3, r4
   112f4:	bl	10ef0 <__printf_chk@plt>
   112f8:	movw	r0, #18897	; 0x49d1
   112fc:	movt	r0, #1
   11300:	movw	r6, #18473	; 0x4829
   11304:	movt	r6, #1
   11308:	cmp	r5, r4
   1130c:	moveq	r6, r0
   11310:	movw	r1, #19129	; 0x4ab9
   11314:	movt	r1, #1
   11318:	mov	r0, #0
   1131c:	mov	r2, #5
   11320:	bl	10dc4 <dcgettext@plt>
   11324:	mov	r1, r0
   11328:	mov	r0, #1
   1132c:	mov	r2, r5
   11330:	mov	r3, r6
   11334:	sub	sp, fp, #16
   11338:	pop	{r4, r5, r6, sl, fp, lr}
   1133c:	b	10ef0 <__printf_chk@plt>
   11340:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11344:	add	fp, sp, #28
   11348:	sub	sp, sp, #12
   1134c:	mov	r8, r1
   11350:	mov	r5, r0
   11354:	ldr	r0, [r1]
   11358:	bl	119a4 <close@plt+0xa0c>
   1135c:	movw	r1, #18473	; 0x4829
   11360:	movt	r1, #1
   11364:	mov	r0, #6
   11368:	bl	10f38 <setlocale@plt>
   1136c:	movw	r6, #18748	; 0x493c
   11370:	movt	r6, #1
   11374:	movw	r1, #18717	; 0x491d
   11378:	movt	r1, #1
   1137c:	mov	r0, r6
   11380:	bl	10f5c <bindtextdomain@plt>
   11384:	mov	r0, r6
   11388:	bl	10de8 <textdomain@plt>
   1138c:	movw	r0, #5848	; 0x16d8
   11390:	movt	r0, #1
   11394:	bl	14738 <close@plt+0x37a0>
   11398:	mov	r7, #0
   1139c:	movw	r4, #18741	; 0x4935
   113a0:	movt	r4, #1
   113a4:	movw	r9, #19288	; 0x4b58
   113a8:	movt	r9, #1
   113ac:	mov	r6, #0
   113b0:	mov	sl, #0
   113b4:	str	r7, [sp]
   113b8:	mov	r0, r5
   113bc:	mov	r1, r8
   113c0:	mov	r2, r4
   113c4:	mov	r3, r9
   113c8:	bl	10e90 <getopt_long@plt>
   113cc:	cmp	r0, #99	; 0x63
   113d0:	ble	113f4 <close@plt+0x45c>
   113d4:	cmp	r0, #100	; 0x64
   113d8:	bne	113e4 <close@plt+0x44c>
   113dc:	mov	r6, #1
   113e0:	b	113b4 <close@plt+0x41c>
   113e4:	mov	sl, #1
   113e8:	cmp	r0, #102	; 0x66
   113ec:	beq	113b4 <close@plt+0x41c>
   113f0:	b	11538 <close@plt+0x5a0>
   113f4:	cmn	r0, #1
   113f8:	bne	1149c <close@plt+0x504>
   113fc:	eor	r1, r6, #1
   11400:	movw	r7, #24880	; 0x6130
   11404:	movt	r7, #2
   11408:	ldr	r0, [r7]
   1140c:	tst	r1, #1
   11410:	eoreq	r2, sl, #1
   11414:	tsteq	r2, #1
   11418:	beq	11508 <close@plt+0x570>
   1141c:	mov	r2, #0
   11420:	cmp	r0, r5
   11424:	movwlt	r2, #1
   11428:	orr	r1, r2, r1
   1142c:	tst	r1, #1
   11430:	beq	11514 <close@plt+0x57c>
   11434:	and	r6, r6, #1
   11438:	tst	sl, #1
   1143c:	movwne	r6, #2
   11440:	cmp	r0, r5
   11444:	bge	1148c <close@plt+0x4f4>
   11448:	ldr	r1, [r7]
   1144c:	mov	r0, #0
   11450:	cmp	r1, r5
   11454:	bge	11484 <close@plt+0x4ec>
   11458:	mov	r4, #1
   1145c:	ldr	r1, [r8, r1, lsl #2]
   11460:	mov	r0, r6
   11464:	bl	11540 <close@plt+0x5a8>
   11468:	ldr	r1, [r7]
   1146c:	add	r1, r1, #1
   11470:	str	r1, [r7]
   11474:	and	r4, r4, r0
   11478:	cmp	r1, r5
   1147c:	blt	1145c <close@plt+0x4c4>
   11480:	eor	r0, r4, #1
   11484:	sub	sp, fp, #28
   11488:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1148c:	bl	10f68 <sync@plt>
   11490:	mov	r0, #0
   11494:	sub	sp, fp, #28
   11498:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1149c:	cmn	r0, #3
   114a0:	bne	114f8 <close@plt+0x560>
   114a4:	movw	r0, #24800	; 0x60e0
   114a8:	movt	r0, #2
   114ac:	ldr	r3, [r0]
   114b0:	movw	r0, #24892	; 0x613c
   114b4:	movt	r0, #2
   114b8:	ldr	r0, [r0]
   114bc:	mov	r1, #0
   114c0:	movw	r2, #18771	; 0x4953
   114c4:	movt	r2, #1
   114c8:	movw	r7, #18758	; 0x4946
   114cc:	movt	r7, #1
   114d0:	str	r7, [sp]
   114d4:	str	r2, [sp, #4]
   114d8:	str	r1, [sp, #8]
   114dc:	movw	r1, #18712	; 0x4918
   114e0:	movt	r1, #1
   114e4:	movw	r2, #18744	; 0x4938
   114e8:	movt	r2, #1
   114ec:	bl	13970 <close@plt+0x29d8>
   114f0:	mov	r0, #0
   114f4:	bl	10ea8 <exit@plt>
   114f8:	cmn	r0, #2
   114fc:	bne	11538 <close@plt+0x5a0>
   11500:	mov	r0, #0
   11504:	bl	11094 <close@plt+0xfc>
   11508:	movw	r1, #18789	; 0x4965
   1150c:	movt	r1, #1
   11510:	b	1151c <close@plt+0x584>
   11514:	movw	r1, #18834	; 0x4992
   11518:	movt	r1, #1
   1151c:	mov	r0, #0
   11520:	mov	r2, #5
   11524:	bl	10dc4 <dcgettext@plt>
   11528:	mov	r2, r0
   1152c:	mov	r0, #1
   11530:	mov	r1, #0
   11534:	bl	10e48 <error@plt>
   11538:	mov	r0, #1
   1153c:	bl	11094 <close@plt+0xfc>
   11540:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11544:	add	fp, sp, #24
   11548:	mov	r8, r1
   1154c:	mov	r7, r0
   11550:	mov	r0, r1
   11554:	mov	r1, #2048	; 0x800
   11558:	bl	10e54 <open64@plt>
   1155c:	mov	r5, r0
   11560:	cmn	r0, #1
   11564:	bgt	11588 <close@plt+0x5f0>
   11568:	bl	10ecc <__errno_location@plt>
   1156c:	ldr	r6, [r0]
   11570:	mov	r0, r8
   11574:	movw	r1, #2049	; 0x801
   11578:	bl	10e54 <open64@plt>
   1157c:	mov	r5, r0
   11580:	cmp	r0, #0
   11584:	bmi	115e8 <close@plt+0x650>
   11588:	mov	r0, r5
   1158c:	mov	r1, #3
   11590:	bl	117c0 <close@plt+0x828>
   11594:	movw	r6, #19215	; 0x4b0f
   11598:	movt	r6, #1
   1159c:	cmn	r0, #1
   115a0:	beq	11614 <close@plt+0x67c>
   115a4:	bic	r2, r0, #2048	; 0x800
   115a8:	mov	r0, r5
   115ac:	mov	r1, #4
   115b0:	bl	117c0 <close@plt+0x828>
   115b4:	cmp	r0, #0
   115b8:	bmi	11614 <close@plt+0x67c>
   115bc:	movw	r6, #19251	; 0x4b33
   115c0:	movt	r6, #1
   115c4:	cmp	r7, #0
   115c8:	beq	115f4 <close@plt+0x65c>
   115cc:	cmp	r7, #2
   115d0:	beq	11600 <close@plt+0x668>
   115d4:	cmp	r7, #1
   115d8:	bne	11614 <close@plt+0x67c>
   115dc:	mov	r0, r5
   115e0:	bl	10f80 <fdatasync@plt>
   115e4:	b	11608 <close@plt+0x670>
   115e8:	movw	r1, #19198	; 0x4afe
   115ec:	movt	r1, #1
   115f0:	b	1167c <close@plt+0x6e4>
   115f4:	mov	r0, r5
   115f8:	bl	10d70 <fsync@plt>
   115fc:	b	11608 <close@plt+0x670>
   11600:	mov	r0, r5
   11604:	bl	10dd0 <syncfs@plt>
   11608:	mov	r7, #1
   1160c:	cmn	r0, #1
   11610:	bgt	11654 <close@plt+0x6bc>
   11614:	bl	10ecc <__errno_location@plt>
   11618:	ldr	r4, [r0]
   1161c:	mov	r7, #0
   11620:	mov	r0, #0
   11624:	mov	r1, r6
   11628:	mov	r2, #5
   1162c:	bl	10dc4 <dcgettext@plt>
   11630:	mov	r6, r0
   11634:	mov	r0, #4
   11638:	mov	r1, r8
   1163c:	bl	12fa4 <close@plt+0x200c>
   11640:	mov	r3, r0
   11644:	mov	r0, #0
   11648:	mov	r1, r4
   1164c:	mov	r2, r6
   11650:	bl	10e48 <error@plt>
   11654:	mov	r0, r5
   11658:	bl	10f98 <close@plt>
   1165c:	cmn	r0, #1
   11660:	ble	1166c <close@plt+0x6d4>
   11664:	mov	r0, r7
   11668:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1166c:	bl	10ecc <__errno_location@plt>
   11670:	ldr	r6, [r0]
   11674:	movw	r1, #19268	; 0x4b44
   11678:	movt	r1, #1
   1167c:	mov	r7, #0
   11680:	mov	r0, #0
   11684:	mov	r2, #5
   11688:	bl	10dc4 <dcgettext@plt>
   1168c:	mov	r4, r0
   11690:	mov	r0, #4
   11694:	mov	r1, r8
   11698:	bl	12fa4 <close@plt+0x200c>
   1169c:	mov	r3, r0
   116a0:	mov	r0, #0
   116a4:	mov	r1, r6
   116a8:	mov	r2, r4
   116ac:	bl	10e48 <error@plt>
   116b0:	mov	r0, r7
   116b4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   116b8:	movw	r1, #24900	; 0x6144
   116bc:	movt	r1, #2
   116c0:	str	r0, [r1]
   116c4:	bx	lr
   116c8:	movw	r1, #24904	; 0x6148
   116cc:	movt	r1, #2
   116d0:	strb	r0, [r1]
   116d4:	bx	lr
   116d8:	push	{r4, r5, r6, sl, fp, lr}
   116dc:	add	fp, sp, #16
   116e0:	sub	sp, sp, #8
   116e4:	movw	r0, #24892	; 0x613c
   116e8:	movt	r0, #2
   116ec:	ldr	r0, [r0]
   116f0:	bl	14240 <close@plt+0x32a8>
   116f4:	cmp	r0, #0
   116f8:	beq	11720 <close@plt+0x788>
   116fc:	movw	r0, #24904	; 0x6148
   11700:	movt	r0, #2
   11704:	ldrb	r0, [r0]
   11708:	cmp	r0, #0
   1170c:	beq	11740 <close@plt+0x7a8>
   11710:	bl	10ecc <__errno_location@plt>
   11714:	ldr	r0, [r0]
   11718:	cmp	r0, #32
   1171c:	bne	11740 <close@plt+0x7a8>
   11720:	movw	r0, #24888	; 0x6138
   11724:	movt	r0, #2
   11728:	ldr	r0, [r0]
   1172c:	bl	14240 <close@plt+0x32a8>
   11730:	cmp	r0, #0
   11734:	subeq	sp, fp, #16
   11738:	popeq	{r4, r5, r6, sl, fp, pc}
   1173c:	b	117b0 <close@plt+0x818>
   11740:	movw	r1, #19439	; 0x4bef
   11744:	movt	r1, #1
   11748:	mov	r0, #0
   1174c:	mov	r2, #5
   11750:	bl	10dc4 <dcgettext@plt>
   11754:	mov	r4, r0
   11758:	movw	r0, #24900	; 0x6144
   1175c:	movt	r0, #2
   11760:	ldr	r6, [r0]
   11764:	bl	10ecc <__errno_location@plt>
   11768:	ldr	r5, [r0]
   1176c:	cmp	r6, #0
   11770:	bne	1178c <close@plt+0x7f4>
   11774:	movw	r2, #19455	; 0x4bff
   11778:	movt	r2, #1
   1177c:	mov	r0, #0
   11780:	mov	r1, r5
   11784:	mov	r3, r4
   11788:	b	117ac <close@plt+0x814>
   1178c:	mov	r0, r6
   11790:	bl	13048 <close@plt+0x20b0>
   11794:	mov	r3, r0
   11798:	str	r4, [sp]
   1179c:	movw	r2, #19451	; 0x4bfb
   117a0:	movt	r2, #1
   117a4:	mov	r0, #0
   117a8:	mov	r1, r5
   117ac:	bl	10e48 <error@plt>
   117b0:	movw	r0, #24804	; 0x60e4
   117b4:	movt	r0, #2
   117b8:	ldr	r0, [r0]
   117bc:	bl	10da0 <_exit@plt>
   117c0:	sub	sp, sp, #8
   117c4:	push	{fp, lr}
   117c8:	mov	fp, sp
   117cc:	sub	sp, sp, #8
   117d0:	str	r2, [fp, #8]
   117d4:	str	r3, [fp, #12]
   117d8:	add	r2, fp, #8
   117dc:	str	r2, [sp, #4]
   117e0:	cmp	r1, #11
   117e4:	bhi	11824 <close@plt+0x88c>
   117e8:	mov	r2, #1
   117ec:	movw	r3, #1300	; 0x514
   117f0:	tst	r3, r2, lsl r1
   117f4:	bne	11874 <close@plt+0x8dc>
   117f8:	movw	r3, #2570	; 0xa0a
   117fc:	tst	r3, r2, lsl r1
   11800:	bne	1184c <close@plt+0x8b4>
   11804:	cmp	r1, #0
   11808:	bne	11824 <close@plt+0x88c>
   1180c:	ldr	r1, [sp, #4]
   11810:	add	r2, r1, #4
   11814:	str	r2, [sp, #4]
   11818:	ldr	r1, [r1]
   1181c:	bl	11898 <close@plt+0x900>
   11820:	b	11888 <close@plt+0x8f0>
   11824:	sub	r2, r1, #1024	; 0x400
   11828:	cmp	r2, #10
   1182c:	bhi	11874 <close@plt+0x8dc>
   11830:	mov	ip, #1
   11834:	movw	r3, #645	; 0x285
   11838:	tst	r3, ip, lsl r2
   1183c:	bne	11874 <close@plt+0x8dc>
   11840:	movw	r3, #1282	; 0x502
   11844:	tst	r3, ip, lsl r2
   11848:	beq	11854 <close@plt+0x8bc>
   1184c:	bl	10f2c <fcntl64@plt>
   11850:	b	11888 <close@plt+0x8f0>
   11854:	cmp	r2, #6
   11858:	bne	11874 <close@plt+0x8dc>
   1185c:	ldr	r1, [sp, #4]
   11860:	add	r2, r1, #4
   11864:	str	r2, [sp, #4]
   11868:	ldr	r1, [r1]
   1186c:	bl	118a4 <close@plt+0x90c>
   11870:	b	11888 <close@plt+0x8f0>
   11874:	ldr	r2, [sp, #4]
   11878:	add	r3, r2, #4
   1187c:	str	r3, [sp, #4]
   11880:	ldr	r2, [r2]
   11884:	bl	10f2c <fcntl64@plt>
   11888:	mov	sp, fp
   1188c:	pop	{fp, lr}
   11890:	add	sp, sp, #8
   11894:	bx	lr
   11898:	mov	r2, r1
   1189c:	mov	r1, #0
   118a0:	b	10f2c <fcntl64@plt>
   118a4:	push	{r4, r5, r6, r7, fp, lr}
   118a8:	add	fp, sp, #16
   118ac:	mov	r5, r1
   118b0:	mov	r6, r0
   118b4:	movw	r7, #24908	; 0x614c
   118b8:	movt	r7, #2
   118bc:	ldr	r0, [r7]
   118c0:	cmp	r0, #0
   118c4:	bmi	11928 <close@plt+0x990>
   118c8:	mov	r0, r6
   118cc:	movw	r1, #1030	; 0x406
   118d0:	mov	r2, r5
   118d4:	bl	10f2c <fcntl64@plt>
   118d8:	mov	r4, r0
   118dc:	cmn	r0, #1
   118e0:	bgt	11914 <close@plt+0x97c>
   118e4:	bl	10ecc <__errno_location@plt>
   118e8:	ldr	r0, [r0]
   118ec:	cmp	r0, #22
   118f0:	bne	11914 <close@plt+0x97c>
   118f4:	mov	r0, r6
   118f8:	mov	r1, r5
   118fc:	bl	11898 <close@plt+0x900>
   11900:	mov	r4, r0
   11904:	cmp	r0, #0
   11908:	bmi	11978 <close@plt+0x9e0>
   1190c:	mvn	r0, #0
   11910:	b	11918 <close@plt+0x980>
   11914:	mov	r0, #1
   11918:	str	r0, [r7]
   1191c:	cmp	r4, #0
   11920:	bpl	11940 <close@plt+0x9a8>
   11924:	b	11978 <close@plt+0x9e0>
   11928:	mov	r0, r6
   1192c:	mov	r1, r5
   11930:	bl	11898 <close@plt+0x900>
   11934:	mov	r4, r0
   11938:	cmp	r4, #0
   1193c:	bmi	11978 <close@plt+0x9e0>
   11940:	ldr	r0, [r7]
   11944:	cmn	r0, #1
   11948:	bne	11978 <close@plt+0x9e0>
   1194c:	mov	r0, r4
   11950:	mov	r1, #1
   11954:	bl	10f2c <fcntl64@plt>
   11958:	cmp	r0, #0
   1195c:	bmi	11980 <close@plt+0x9e8>
   11960:	orr	r2, r0, #1
   11964:	mov	r0, r4
   11968:	mov	r1, #2
   1196c:	bl	10f2c <fcntl64@plt>
   11970:	cmn	r0, #1
   11974:	beq	11980 <close@plt+0x9e8>
   11978:	mov	r0, r4
   1197c:	pop	{r4, r5, r6, r7, fp, pc}
   11980:	bl	10ecc <__errno_location@plt>
   11984:	mov	r5, r0
   11988:	ldr	r6, [r0]
   1198c:	mov	r0, r4
   11990:	bl	10f98 <close@plt>
   11994:	str	r6, [r5]
   11998:	mvn	r4, #0
   1199c:	mov	r0, r4
   119a0:	pop	{r4, r5, r6, r7, fp, pc}
   119a4:	push	{r4, r5, fp, lr}
   119a8:	add	fp, sp, #8
   119ac:	cmp	r0, #0
   119b0:	beq	11a44 <close@plt+0xaac>
   119b4:	mov	r4, r0
   119b8:	mov	r1, #47	; 0x2f
   119bc:	bl	10f44 <strrchr@plt>
   119c0:	cmp	r0, #0
   119c4:	mov	r5, r4
   119c8:	addne	r5, r0, #1
   119cc:	sub	r0, r5, r4
   119d0:	cmp	r0, #7
   119d4:	blt	11a28 <close@plt+0xa90>
   119d8:	sub	r0, r5, #7
   119dc:	movw	r1, #19514	; 0x4c3a
   119e0:	movt	r1, #1
   119e4:	mov	r2, #7
   119e8:	bl	10f74 <strncmp@plt>
   119ec:	cmp	r0, #0
   119f0:	bne	11a28 <close@plt+0xa90>
   119f4:	movw	r1, #19522	; 0x4c42
   119f8:	movt	r1, #1
   119fc:	mov	r0, r5
   11a00:	mov	r2, #3
   11a04:	bl	10f74 <strncmp@plt>
   11a08:	cmp	r0, #0
   11a0c:	beq	11a18 <close@plt+0xa80>
   11a10:	mov	r4, r5
   11a14:	b	11a28 <close@plt+0xa90>
   11a18:	add	r4, r5, #3
   11a1c:	movw	r0, #24872	; 0x6128
   11a20:	movt	r0, #2
   11a24:	str	r4, [r0]
   11a28:	movw	r0, #24876	; 0x612c
   11a2c:	movt	r0, #2
   11a30:	str	r4, [r0]
   11a34:	movw	r0, #24912	; 0x6150
   11a38:	movt	r0, #2
   11a3c:	str	r4, [r0]
   11a40:	pop	{r4, r5, fp, pc}
   11a44:	movw	r0, #24888	; 0x6138
   11a48:	movt	r0, #2
   11a4c:	ldr	r3, [r0]
   11a50:	movw	r0, #19458	; 0x4c02
   11a54:	movt	r0, #1
   11a58:	mov	r1, #55	; 0x37
   11a5c:	mov	r2, #1
   11a60:	bl	10e00 <fwrite@plt>
   11a64:	bl	10f8c <abort@plt>
   11a68:	push	{r4, r5, r6, sl, fp, lr}
   11a6c:	add	fp, sp, #16
   11a70:	mov	r4, r0
   11a74:	movw	r0, #24920	; 0x6158
   11a78:	movt	r0, #2
   11a7c:	cmp	r4, #0
   11a80:	moveq	r4, r0
   11a84:	bl	10ecc <__errno_location@plt>
   11a88:	mov	r5, r0
   11a8c:	ldr	r6, [r0]
   11a90:	mov	r0, r4
   11a94:	mov	r1, #48	; 0x30
   11a98:	bl	13d60 <close@plt+0x2dc8>
   11a9c:	str	r6, [r5]
   11aa0:	pop	{r4, r5, r6, sl, fp, pc}
   11aa4:	movw	r1, #24920	; 0x6158
   11aa8:	movt	r1, #2
   11aac:	cmp	r0, #0
   11ab0:	movne	r1, r0
   11ab4:	ldr	r0, [r1]
   11ab8:	bx	lr
   11abc:	movw	r2, #24920	; 0x6158
   11ac0:	movt	r2, #2
   11ac4:	cmp	r0, #0
   11ac8:	movne	r2, r0
   11acc:	str	r1, [r2]
   11ad0:	bx	lr
   11ad4:	movw	r3, #24920	; 0x6158
   11ad8:	movt	r3, #2
   11adc:	cmp	r0, #0
   11ae0:	movne	r3, r0
   11ae4:	ubfx	r0, r1, #5, #3
   11ae8:	add	ip, r3, r0, lsl #2
   11aec:	ldr	r3, [ip, #8]
   11af0:	and	r1, r1, #31
   11af4:	mov	r0, #1
   11af8:	and	r0, r0, r3, lsr r1
   11afc:	and	r2, r2, #1
   11b00:	eor	r2, r0, r2
   11b04:	eor	r1, r3, r2, lsl r1
   11b08:	str	r1, [ip, #8]
   11b0c:	bx	lr
   11b10:	movw	r2, #24920	; 0x6158
   11b14:	movt	r2, #2
   11b18:	cmp	r0, #0
   11b1c:	movne	r2, r0
   11b20:	ldr	r0, [r2, #4]
   11b24:	str	r1, [r2, #4]
   11b28:	bx	lr
   11b2c:	push	{fp, lr}
   11b30:	mov	fp, sp
   11b34:	movw	r3, #24920	; 0x6158
   11b38:	movt	r3, #2
   11b3c:	cmp	r0, #0
   11b40:	movne	r3, r0
   11b44:	mov	r0, #10
   11b48:	str	r0, [r3]
   11b4c:	cmp	r1, #0
   11b50:	cmpne	r2, #0
   11b54:	bne	11b5c <close@plt+0xbc4>
   11b58:	bl	10f8c <abort@plt>
   11b5c:	str	r1, [r3, #40]	; 0x28
   11b60:	str	r2, [r3, #44]	; 0x2c
   11b64:	pop	{fp, pc}
   11b68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b6c:	add	fp, sp, #28
   11b70:	sub	sp, sp, #20
   11b74:	mov	r8, r3
   11b78:	mov	r9, r2
   11b7c:	mov	sl, r1
   11b80:	mov	r7, r0
   11b84:	ldr	r0, [fp, #8]
   11b88:	movw	r5, #24920	; 0x6158
   11b8c:	movt	r5, #2
   11b90:	cmp	r0, #0
   11b94:	movne	r5, r0
   11b98:	bl	10ecc <__errno_location@plt>
   11b9c:	mov	r4, r0
   11ba0:	ldm	r5, {r0, r1}
   11ba4:	ldr	r2, [r5, #40]	; 0x28
   11ba8:	ldr	r3, [r5, #44]	; 0x2c
   11bac:	ldr	r6, [r4]
   11bb0:	add	r5, r5, #8
   11bb4:	stm	sp, {r0, r1, r5}
   11bb8:	str	r2, [sp, #12]
   11bbc:	str	r3, [sp, #16]
   11bc0:	mov	r0, r7
   11bc4:	mov	r1, sl
   11bc8:	mov	r2, r9
   11bcc:	mov	r3, r8
   11bd0:	bl	11be0 <close@plt+0xc48>
   11bd4:	str	r6, [r4]
   11bd8:	sub	sp, fp, #28
   11bdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11be0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11be4:	add	fp, sp, #28
   11be8:	sub	sp, sp, #156	; 0x9c
   11bec:	mov	r9, r3
   11bf0:	mov	r7, r1
   11bf4:	mov	r6, r0
   11bf8:	str	r2, [fp, #-80]	; 0xffffffb0
   11bfc:	add	r0, r2, #1
   11c00:	str	r0, [sp, #76]	; 0x4c
   11c04:	ldr	r0, [fp, #12]
   11c08:	and	r1, r0, #1
   11c0c:	str	r1, [sp, #40]	; 0x28
   11c10:	and	r1, r0, #4
   11c14:	str	r1, [sp, #36]	; 0x24
   11c18:	ubfx	r4, r0, #1, #1
   11c1c:	bl	10e18 <__ctype_get_mb_cur_max@plt>
   11c20:	str	r0, [sp, #44]	; 0x2c
   11c24:	ldr	r0, [fp, #24]
   11c28:	str	r0, [sp, #88]	; 0x58
   11c2c:	ldr	r0, [fp, #20]
   11c30:	str	r0, [sp, #80]	; 0x50
   11c34:	ldr	r1, [fp, #8]
   11c38:	mov	r0, #0
   11c3c:	str	r0, [sp, #84]	; 0x54
   11c40:	mov	r0, #0
   11c44:	str	r0, [fp, #-84]	; 0xffffffac
   11c48:	mov	r0, #0
   11c4c:	str	r0, [fp, #-72]	; 0xffffffb8
   11c50:	mov	r0, #0
   11c54:	mov	r2, #0
   11c58:	str	r2, [fp, #-56]	; 0xffffffc8
   11c5c:	mov	r2, #0
   11c60:	str	r2, [sp, #64]	; 0x40
   11c64:	mov	r2, #1
   11c68:	str	r2, [fp, #-48]	; 0xffffffd0
   11c6c:	cmp	r1, #10
   11c70:	bhi	12b9c <close@plt+0x1c04>
   11c74:	mov	sl, r7
   11c78:	mov	r7, r1
   11c7c:	add	r1, pc, #24
   11c80:	mov	r8, #0
   11c84:	mov	r2, #1
   11c88:	mov	r3, #0
   11c8c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   11c90:	mov	lr, r9
   11c94:	mov	r5, r6
   11c98:	ldr	pc, [r1, r7, lsl #2]
   11c9c:	andeq	r1, r1, r0, ror sp
   11ca0:			; <UNDEFINED> instruction: 0x00011db0
   11ca4:	andeq	r1, r1, r0, lsl #27
   11ca8:	andeq	r1, r1, r8, ror #26
   11cac:	andeq	r1, r1, r4, lsr #27
   11cb0:	andeq	r1, r1, r4, lsl #28
   11cb4:	muleq	r1, r0, sp
   11cb8:	andeq	r1, r1, r0, ror #28
   11cbc:	andeq	r1, r1, r8, asr #25
   11cc0:	andeq	r1, r1, r8, asr #25
   11cc4:	strdeq	r1, [r1], -r4
   11cc8:	movw	r0, #19604	; 0x4c94
   11ccc:	movt	r0, #1
   11cd0:	mov	r1, r7
   11cd4:	bl	131a4 <close@plt+0x220c>
   11cd8:	str	r0, [sp, #80]	; 0x50
   11cdc:	movw	r0, #19606	; 0x4c96
   11ce0:	movt	r0, #1
   11ce4:	mov	r1, r7
   11ce8:	bl	131a4 <close@plt+0x220c>
   11cec:	mov	r5, r6
   11cf0:	str	r0, [sp, #88]	; 0x58
   11cf4:	mov	r8, #0
   11cf8:	tst	r4, #1
   11cfc:	str	r7, [fp, #-64]	; 0xffffffc0
   11d00:	bne	11d38 <close@plt+0xda0>
   11d04:	ldr	r0, [sp, #80]	; 0x50
   11d08:	ldrb	r0, [r0]
   11d0c:	cmp	r0, #0
   11d10:	beq	11d38 <close@plt+0xda0>
   11d14:	ldr	r1, [sp, #80]	; 0x50
   11d18:	add	r1, r1, #1
   11d1c:	mov	r8, #0
   11d20:	cmp	r8, sl
   11d24:	strbcc	r0, [r5, r8]
   11d28:	ldrb	r0, [r1, r8]
   11d2c:	add	r8, r8, #1
   11d30:	cmp	r0, #0
   11d34:	bne	11d20 <close@plt+0xd88>
   11d38:	ldr	r7, [sp, #88]	; 0x58
   11d3c:	mov	r0, r7
   11d40:	bl	10ec0 <strlen@plt>
   11d44:	mov	r5, r6
   11d48:	str	r0, [fp, #-72]	; 0xffffffb8
   11d4c:	str	r7, [fp, #-84]	; 0xffffffac
   11d50:	mov	r2, #1
   11d54:	mov	r3, r4
   11d58:	ldr	ip, [fp, #-80]	; 0xffffffb0
   11d5c:	mov	lr, r9
   11d60:	ldr	r7, [fp, #-64]	; 0xffffffc0
   11d64:	b	11e60 <close@plt+0xec8>
   11d68:	mov	r0, #1
   11d6c:	b	11db0 <close@plt+0xe18>
   11d70:	mov	r7, #0
   11d74:	mov	r8, #0
   11d78:	mov	r2, r0
   11d7c:	b	11e5c <close@plt+0xec4>
   11d80:	tst	r4, #1
   11d84:	bne	11db0 <close@plt+0xe18>
   11d88:	mov	r2, r0
   11d8c:	b	11dd8 <close@plt+0xe40>
   11d90:	mov	r0, #1
   11d94:	str	r0, [fp, #-72]	; 0xffffffb8
   11d98:	mov	r8, #0
   11d9c:	mov	r7, #5
   11da0:	b	11e1c <close@plt+0xe84>
   11da4:	mov	r2, #1
   11da8:	tst	r4, #1
   11dac:	beq	11dd8 <close@plt+0xe40>
   11db0:	mov	r1, #1
   11db4:	str	r1, [fp, #-72]	; 0xffffffb8
   11db8:	mov	r8, #0
   11dbc:	mov	r7, #2
   11dc0:	movw	r1, #19606	; 0x4c96
   11dc4:	movt	r1, #1
   11dc8:	str	r1, [fp, #-84]	; 0xffffffac
   11dcc:	mov	r2, r0
   11dd0:	mov	r3, #1
   11dd4:	b	11e60 <close@plt+0xec8>
   11dd8:	mov	r8, #1
   11ddc:	mov	r7, #2
   11de0:	cmp	sl, #0
   11de4:	movne	r0, #39	; 0x27
   11de8:	strbne	r0, [r5]
   11dec:	movw	r0, #19606	; 0x4c96
   11df0:	movt	r0, #1
   11df4:	str	r0, [fp, #-84]	; 0xffffffac
   11df8:	mov	r0, #1
   11dfc:	str	r0, [fp, #-72]	; 0xffffffb8
   11e00:	b	11e5c <close@plt+0xec4>
   11e04:	mov	r7, #5
   11e08:	tst	r4, #1
   11e0c:	beq	11e34 <close@plt+0xe9c>
   11e10:	mov	r0, #1
   11e14:	str	r0, [fp, #-72]	; 0xffffffb8
   11e18:	mov	r8, #0
   11e1c:	movw	r0, #19602	; 0x4c92
   11e20:	movt	r0, #1
   11e24:	str	r0, [fp, #-84]	; 0xffffffac
   11e28:	mov	r2, #1
   11e2c:	mov	r3, #1
   11e30:	b	11e60 <close@plt+0xec8>
   11e34:	cmp	sl, #0
   11e38:	movne	r0, #34	; 0x22
   11e3c:	strbne	r0, [r5]
   11e40:	mov	r8, #1
   11e44:	movw	r0, #19602	; 0x4c92
   11e48:	movt	r0, #1
   11e4c:	str	r0, [fp, #-84]	; 0xffffffac
   11e50:	mov	r0, #1
   11e54:	str	r0, [fp, #-72]	; 0xffffffb8
   11e58:	mov	r2, #1
   11e5c:	mov	r3, #0
   11e60:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11e64:	cmp	r0, #0
   11e68:	movwne	r0, #1
   11e6c:	and	r1, r0, r3
   11e70:	and	r1, r2, r1
   11e74:	str	r1, [sp, #56]	; 0x38
   11e78:	sub	r1, r7, #2
   11e7c:	clz	r1, r1
   11e80:	lsr	r1, r1, #5
   11e84:	and	r1, r1, r3
   11e88:	str	r1, [sp, #68]	; 0x44
   11e8c:	str	r7, [fp, #-64]	; 0xffffffc0
   11e90:	subs	r1, r7, #2
   11e94:	movwne	r1, #1
   11e98:	eor	r4, r3, #1
   11e9c:	str	r4, [fp, #-88]	; 0xffffffa8
   11ea0:	orr	r4, r1, r4
   11ea4:	str	r4, [sp, #72]	; 0x48
   11ea8:	and	r1, r1, r2
   11eac:	and	r0, r0, r1
   11eb0:	str	r0, [fp, #-60]	; 0xffffffc4
   11eb4:	str	r3, [fp, #-76]	; 0xffffffb4
   11eb8:	orr	r0, r1, r3
   11ebc:	eor	r0, r0, #1
   11ec0:	ldr	r1, [fp, #16]
   11ec4:	clz	r1, r1
   11ec8:	lsr	r1, r1, #5
   11ecc:	orr	r0, r1, r0
   11ed0:	str	r0, [fp, #-68]	; 0xffffffbc
   11ed4:	str	r2, [sp, #92]	; 0x5c
   11ed8:	eor	r0, r2, #1
   11edc:	str	r0, [sp, #60]	; 0x3c
   11ee0:	mov	r7, #0
   11ee4:	cmn	lr, #1
   11ee8:	beq	11ef8 <close@plt+0xf60>
   11eec:	cmp	r7, lr
   11ef0:	bne	11f04 <close@plt+0xf6c>
   11ef4:	b	12a10 <close@plt+0x1a78>
   11ef8:	ldrb	r0, [ip, r7]
   11efc:	cmp	r0, #0
   11f00:	beq	12a10 <close@plt+0x1a78>
   11f04:	mov	r9, #0
   11f08:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11f0c:	cmp	r0, #0
   11f10:	beq	11f44 <close@plt+0xfac>
   11f14:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11f18:	add	r4, r7, r0
   11f1c:	cmp	r0, #2
   11f20:	bcc	11f3c <close@plt+0xfa4>
   11f24:	cmn	lr, #1
   11f28:	bne	11f3c <close@plt+0xfa4>
   11f2c:	mov	r0, ip
   11f30:	bl	10ec0 <strlen@plt>
   11f34:	ldr	ip, [fp, #-80]	; 0xffffffb0
   11f38:	mov	lr, r0
   11f3c:	cmp	r4, lr
   11f40:	bls	11f50 <close@plt+0xfb8>
   11f44:	mov	r0, #0
   11f48:	str	r0, [fp, #-52]	; 0xffffffcc
   11f4c:	b	11f94 <close@plt+0xffc>
   11f50:	mov	r4, lr
   11f54:	add	r0, ip, r7
   11f58:	ldr	r1, [fp, #-84]	; 0xffffffac
   11f5c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   11f60:	bl	10eb4 <bcmp@plt>
   11f64:	cmp	r0, #0
   11f68:	mov	r1, r0
   11f6c:	movwne	r1, #1
   11f70:	ldr	r2, [fp, #-88]	; 0xffffffa8
   11f74:	orr	r1, r1, r2
   11f78:	tst	r1, #1
   11f7c:	beq	12ae4 <close@plt+0x1b4c>
   11f80:	clz	r0, r0
   11f84:	lsr	r0, r0, #5
   11f88:	str	r0, [fp, #-52]	; 0xffffffcc
   11f8c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   11f90:	mov	lr, r4
   11f94:	ldrb	r4, [ip, r7]
   11f98:	cmp	r4, #126	; 0x7e
   11f9c:	bhi	124cc <close@plt+0x1534>
   11fa0:	mov	r6, #1
   11fa4:	mov	r2, #110	; 0x6e
   11fa8:	mov	r0, #97	; 0x61
   11fac:	add	r3, pc, #4
   11fb0:	mov	r1, #0
   11fb4:	ldr	pc, [r3, r4, lsl #2]
   11fb8:	andeq	r2, r1, ip, lsr #6
   11fbc:	andeq	r2, r1, ip, asr #9
   11fc0:	andeq	r2, r1, ip, asr #9
   11fc4:	andeq	r2, r1, ip, asr #9
   11fc8:	andeq	r2, r1, ip, asr #9
   11fcc:	andeq	r2, r1, ip, asr #9
   11fd0:	andeq	r2, r1, ip, asr #9
   11fd4:	andeq	r2, r1, r0, lsr #11
   11fd8:	andeq	r2, r1, ip, lsl #6
   11fdc:	andeq	r2, r1, r4, lsl #6
   11fe0:	andeq	r2, r1, r8, lsl r3
   11fe4:	andeq	r2, r1, r4, lsr r4
   11fe8:	strdeq	r2, [r1], -ip
   11fec:	andeq	r2, r1, r4, lsl r3
   11ff0:	andeq	r2, r1, ip, asr #9
   11ff4:	andeq	r2, r1, ip, asr #9
   11ff8:	andeq	r2, r1, ip, asr #9
   11ffc:	andeq	r2, r1, ip, asr #9
   12000:	andeq	r2, r1, ip, asr #9
   12004:	andeq	r2, r1, ip, asr #9
   12008:	andeq	r2, r1, ip, asr #9
   1200c:	andeq	r2, r1, ip, asr #9
   12010:	andeq	r2, r1, ip, asr #9
   12014:	andeq	r2, r1, ip, asr #9
   12018:	andeq	r2, r1, ip, asr #9
   1201c:	andeq	r2, r1, ip, asr #9
   12020:	andeq	r2, r1, ip, asr #9
   12024:	andeq	r2, r1, ip, asr #9
   12028:	andeq	r2, r1, ip, asr #9
   1202c:	andeq	r2, r1, ip, asr #9
   12030:	andeq	r2, r1, ip, asr #9
   12034:	andeq	r2, r1, ip, asr #9
   12038:			; <UNDEFINED> instruction: 0x000122b0
   1203c:			; <UNDEFINED> instruction: 0x000122b4
   12040:			; <UNDEFINED> instruction: 0x000122b4
   12044:	muleq	r1, ip, r2
   12048:			; <UNDEFINED> instruction: 0x000122b4
   1204c:			; <UNDEFINED> instruction: 0x000121b4
   12050:			; <UNDEFINED> instruction: 0x000122b4
   12054:	andeq	r2, r1, ip, lsr r4
   12058:			; <UNDEFINED> instruction: 0x000122b4
   1205c:			; <UNDEFINED> instruction: 0x000122b4
   12060:			; <UNDEFINED> instruction: 0x000122b4
   12064:			; <UNDEFINED> instruction: 0x000121b4
   12068:			; <UNDEFINED> instruction: 0x000121b4
   1206c:			; <UNDEFINED> instruction: 0x000121b4
   12070:			; <UNDEFINED> instruction: 0x000121b4
   12074:			; <UNDEFINED> instruction: 0x000121b4
   12078:			; <UNDEFINED> instruction: 0x000121b4
   1207c:			; <UNDEFINED> instruction: 0x000121b4
   12080:			; <UNDEFINED> instruction: 0x000121b4
   12084:			; <UNDEFINED> instruction: 0x000121b4
   12088:			; <UNDEFINED> instruction: 0x000121b4
   1208c:			; <UNDEFINED> instruction: 0x000121b4
   12090:			; <UNDEFINED> instruction: 0x000121b4
   12094:			; <UNDEFINED> instruction: 0x000121b4
   12098:			; <UNDEFINED> instruction: 0x000121b4
   1209c:			; <UNDEFINED> instruction: 0x000121b4
   120a0:			; <UNDEFINED> instruction: 0x000121b4
   120a4:			; <UNDEFINED> instruction: 0x000122b4
   120a8:			; <UNDEFINED> instruction: 0x000122b4
   120ac:			; <UNDEFINED> instruction: 0x000122b4
   120b0:			; <UNDEFINED> instruction: 0x000122b4
   120b4:	andeq	r2, r1, r4, lsl #8
   120b8:	andeq	r2, r1, ip, asr #9
   120bc:			; <UNDEFINED> instruction: 0x000121b4
   120c0:			; <UNDEFINED> instruction: 0x000121b4
   120c4:			; <UNDEFINED> instruction: 0x000121b4
   120c8:			; <UNDEFINED> instruction: 0x000121b4
   120cc:			; <UNDEFINED> instruction: 0x000121b4
   120d0:			; <UNDEFINED> instruction: 0x000121b4
   120d4:			; <UNDEFINED> instruction: 0x000121b4
   120d8:			; <UNDEFINED> instruction: 0x000121b4
   120dc:			; <UNDEFINED> instruction: 0x000121b4
   120e0:			; <UNDEFINED> instruction: 0x000121b4
   120e4:			; <UNDEFINED> instruction: 0x000121b4
   120e8:			; <UNDEFINED> instruction: 0x000121b4
   120ec:			; <UNDEFINED> instruction: 0x000121b4
   120f0:			; <UNDEFINED> instruction: 0x000121b4
   120f4:			; <UNDEFINED> instruction: 0x000121b4
   120f8:			; <UNDEFINED> instruction: 0x000121b4
   120fc:			; <UNDEFINED> instruction: 0x000121b4
   12100:			; <UNDEFINED> instruction: 0x000121b4
   12104:			; <UNDEFINED> instruction: 0x000121b4
   12108:			; <UNDEFINED> instruction: 0x000121b4
   1210c:			; <UNDEFINED> instruction: 0x000121b4
   12110:			; <UNDEFINED> instruction: 0x000121b4
   12114:			; <UNDEFINED> instruction: 0x000121b4
   12118:			; <UNDEFINED> instruction: 0x000121b4
   1211c:			; <UNDEFINED> instruction: 0x000121b4
   12120:			; <UNDEFINED> instruction: 0x000121b4
   12124:			; <UNDEFINED> instruction: 0x000122b4
   12128:	ldrdeq	r2, [r1], -ip
   1212c:			; <UNDEFINED> instruction: 0x000121b4
   12130:			; <UNDEFINED> instruction: 0x000122b4
   12134:			; <UNDEFINED> instruction: 0x000121b4
   12138:			; <UNDEFINED> instruction: 0x000122b4
   1213c:			; <UNDEFINED> instruction: 0x000121b4
   12140:			; <UNDEFINED> instruction: 0x000121b4
   12144:			; <UNDEFINED> instruction: 0x000121b4
   12148:			; <UNDEFINED> instruction: 0x000121b4
   1214c:			; <UNDEFINED> instruction: 0x000121b4
   12150:			; <UNDEFINED> instruction: 0x000121b4
   12154:			; <UNDEFINED> instruction: 0x000121b4
   12158:			; <UNDEFINED> instruction: 0x000121b4
   1215c:			; <UNDEFINED> instruction: 0x000121b4
   12160:			; <UNDEFINED> instruction: 0x000121b4
   12164:			; <UNDEFINED> instruction: 0x000121b4
   12168:			; <UNDEFINED> instruction: 0x000121b4
   1216c:			; <UNDEFINED> instruction: 0x000121b4
   12170:			; <UNDEFINED> instruction: 0x000121b4
   12174:			; <UNDEFINED> instruction: 0x000121b4
   12178:			; <UNDEFINED> instruction: 0x000121b4
   1217c:			; <UNDEFINED> instruction: 0x000121b4
   12180:			; <UNDEFINED> instruction: 0x000121b4
   12184:			; <UNDEFINED> instruction: 0x000121b4
   12188:			; <UNDEFINED> instruction: 0x000121b4
   1218c:			; <UNDEFINED> instruction: 0x000121b4
   12190:			; <UNDEFINED> instruction: 0x000121b4
   12194:			; <UNDEFINED> instruction: 0x000121b4
   12198:			; <UNDEFINED> instruction: 0x000121b4
   1219c:			; <UNDEFINED> instruction: 0x000121b4
   121a0:			; <UNDEFINED> instruction: 0x000121b4
   121a4:	andeq	r2, r1, r0, ror r2
   121a8:			; <UNDEFINED> instruction: 0x000122b4
   121ac:	andeq	r2, r1, r0, ror r2
   121b0:	muleq	r1, ip, r2
   121b4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   121b8:	tst	r0, #1
   121bc:	bne	121e8 <close@plt+0x1250>
   121c0:	ubfx	r0, r4, #5, #3
   121c4:	ldr	r1, [fp, #16]
   121c8:	ldr	r0, [r1, r0, lsl #2]
   121cc:	and	r1, r4, #31
   121d0:	mov	r2, #1
   121d4:	tst	r0, r2, lsl r1
   121d8:	beq	121e8 <close@plt+0x1250>
   121dc:	mov	r0, r4
   121e0:	mov	r1, r6
   121e4:	b	121fc <close@plt+0x1264>
   121e8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   121ec:	cmp	r0, #0
   121f0:	mov	r0, r4
   121f4:	mov	r1, r6
   121f8:	beq	12534 <close@plt+0x159c>
   121fc:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12200:	tst	r2, #1
   12204:	bne	12af8 <close@plt+0x1b60>
   12208:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1220c:	subs	r2, r2, #2
   12210:	movwne	r2, #1
   12214:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12218:	orr	r2, r2, r3
   1221c:	tst	r2, #1
   12220:	bne	1225c <close@plt+0x12c4>
   12224:	cmp	r8, sl
   12228:	movcc	r2, #39	; 0x27
   1222c:	strbcc	r2, [r5, r8]
   12230:	add	r2, r8, #1
   12234:	cmp	r2, sl
   12238:	movcc	r3, #36	; 0x24
   1223c:	strbcc	r3, [r5, r2]
   12240:	add	r2, r8, #2
   12244:	cmp	r2, sl
   12248:	movcc	r3, #39	; 0x27
   1224c:	strbcc	r3, [r5, r2]
   12250:	add	r8, r8, #3
   12254:	mov	r2, #1
   12258:	str	r2, [fp, #-56]	; 0xffffffc8
   1225c:	cmp	r8, sl
   12260:	movcc	r2, #92	; 0x5c
   12264:	strbcc	r2, [r5, r8]
   12268:	add	r8, r8, #1
   1226c:	b	12578 <close@plt+0x15e0>
   12270:	cmp	lr, #1
   12274:	beq	1229c <close@plt+0x1304>
   12278:	mov	r6, #0
   1227c:	cmn	lr, #1
   12280:	bne	122a8 <close@plt+0x1310>
   12284:	ldrb	r0, [ip, #1]
   12288:	cmp	r0, #0
   1228c:	beq	1229c <close@plt+0x1304>
   12290:	mvn	lr, #0
   12294:	mov	r9, #0
   12298:	b	121b4 <close@plt+0x121c>
   1229c:	mov	r6, #0
   122a0:	cmp	r7, #0
   122a4:	beq	122b0 <close@plt+0x1318>
   122a8:	mov	r9, #0
   122ac:	b	121b4 <close@plt+0x121c>
   122b0:	mov	r1, #1
   122b4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   122b8:	cmp	r0, #2
   122bc:	bne	122d4 <close@plt+0x133c>
   122c0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   122c4:	tst	r0, #1
   122c8:	mov	r6, r1
   122cc:	beq	121b4 <close@plt+0x121c>
   122d0:	b	12af8 <close@plt+0x1b60>
   122d4:	mov	r6, r1
   122d8:	b	121b4 <close@plt+0x121c>
   122dc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   122e0:	cmp	r0, #2
   122e4:	bne	12518 <close@plt+0x1580>
   122e8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   122ec:	tst	r0, #1
   122f0:	bne	12af8 <close@plt+0x1b60>
   122f4:	mov	r9, #0
   122f8:	b	1252c <close@plt+0x1594>
   122fc:	mov	r0, #102	; 0x66
   12300:	b	125a0 <close@plt+0x1608>
   12304:	mov	r2, #116	; 0x74
   12308:	b	12318 <close@plt+0x1380>
   1230c:	mov	r0, #98	; 0x62
   12310:	b	125a0 <close@plt+0x1608>
   12314:	mov	r2, #114	; 0x72
   12318:	ldr	r0, [sp, #72]	; 0x48
   1231c:	tst	r0, #1
   12320:	mov	r0, r2
   12324:	bne	125a0 <close@plt+0x1608>
   12328:	b	12af8 <close@plt+0x1b60>
   1232c:	ldr	r0, [sp, #92]	; 0x5c
   12330:	tst	r0, #1
   12334:	beq	125bc <close@plt+0x1624>
   12338:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1233c:	tst	r0, #1
   12340:	bne	12af8 <close@plt+0x1b60>
   12344:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12348:	subs	r0, r0, #2
   1234c:	movwne	r0, #1
   12350:	ldr	r1, [fp, #-56]	; 0xffffffc8
   12354:	orr	r0, r0, r1
   12358:	tst	r0, #1
   1235c:	bne	12398 <close@plt+0x1400>
   12360:	cmp	r8, sl
   12364:	movcc	r0, #39	; 0x27
   12368:	strbcc	r0, [r5, r8]
   1236c:	add	r0, r8, #1
   12370:	cmp	r0, sl
   12374:	movcc	r1, #36	; 0x24
   12378:	strbcc	r1, [r5, r0]
   1237c:	add	r0, r8, #2
   12380:	cmp	r0, sl
   12384:	movcc	r1, #39	; 0x27
   12388:	strbcc	r1, [r5, r0]
   1238c:	add	r8, r8, #3
   12390:	mov	r0, #1
   12394:	str	r0, [fp, #-56]	; 0xffffffc8
   12398:	cmp	r8, sl
   1239c:	movcc	r0, #92	; 0x5c
   123a0:	strbcc	r0, [r5, r8]
   123a4:	add	r0, r8, #1
   123a8:	mov	r6, #0
   123ac:	mov	r9, #1
   123b0:	mov	r4, #48	; 0x30
   123b4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   123b8:	cmp	r1, #2
   123bc:	beq	12780 <close@plt+0x17e8>
   123c0:	add	r1, r7, #1
   123c4:	cmp	r1, lr
   123c8:	bcs	12780 <close@plt+0x17e8>
   123cc:	ldrb	r1, [ip, r1]
   123d0:	sub	r1, r1, #48	; 0x30
   123d4:	uxtb	r1, r1
   123d8:	cmp	r1, #9
   123dc:	bhi	12780 <close@plt+0x17e8>
   123e0:	cmp	r0, sl
   123e4:	movcc	r1, #48	; 0x30
   123e8:	strbcc	r1, [r5, r0]
   123ec:	add	r0, r8, #2
   123f0:	cmp	r0, sl
   123f4:	movcc	r1, #48	; 0x30
   123f8:	strbcc	r1, [r5, r0]
   123fc:	add	r8, r8, #3
   12400:	b	121b4 <close@plt+0x121c>
   12404:	mov	r9, #0
   12408:	mov	r4, #63	; 0x3f
   1240c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12410:	cmp	r0, #5
   12414:	beq	12788 <close@plt+0x17f0>
   12418:	cmp	r0, #2
   1241c:	bne	12830 <close@plt+0x1898>
   12420:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12424:	tst	r0, #1
   12428:	mov	r6, #0
   1242c:	beq	121b4 <close@plt+0x121c>
   12430:	b	12af8 <close@plt+0x1b60>
   12434:	mov	r0, #118	; 0x76
   12438:	b	125a0 <close@plt+0x1608>
   1243c:	mov	r4, #39	; 0x27
   12440:	mov	r0, #1
   12444:	str	r0, [sp, #64]	; 0x40
   12448:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1244c:	cmp	r0, #2
   12450:	bne	125d8 <close@plt+0x1640>
   12454:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12458:	tst	r0, #1
   1245c:	bne	12af8 <close@plt+0x1b60>
   12460:	ldr	r2, [sp, #84]	; 0x54
   12464:	cmp	r2, #0
   12468:	mov	r0, r2
   1246c:	movwne	r0, #1
   12470:	clz	r1, sl
   12474:	lsr	r1, r1, #5
   12478:	orrs	r0, r0, r1
   1247c:	moveq	r2, sl
   12480:	str	r2, [sp, #84]	; 0x54
   12484:	moveq	sl, r0
   12488:	cmp	r8, sl
   1248c:	movcc	r0, #39	; 0x27
   12490:	strbcc	r0, [r5, r8]
   12494:	add	r0, r8, #1
   12498:	cmp	r0, sl
   1249c:	movcc	r1, #92	; 0x5c
   124a0:	strbcc	r1, [r5, r0]
   124a4:	add	r0, r8, #2
   124a8:	cmp	r0, sl
   124ac:	movcc	r1, #39	; 0x27
   124b0:	strbcc	r1, [r5, r0]
   124b4:	add	r8, r8, #3
   124b8:	mov	r0, #0
   124bc:	str	r0, [fp, #-56]	; 0xffffffc8
   124c0:	mov	r9, #0
   124c4:	mov	r6, #1
   124c8:	b	121b4 <close@plt+0x121c>
   124cc:	ldr	r0, [sp, #44]	; 0x2c
   124d0:	cmp	r0, #1
   124d4:	bne	125e0 <close@plt+0x1648>
   124d8:	str	lr, [sp, #32]
   124dc:	bl	10e9c <__ctype_b_loc@plt>
   124e0:	ldr	ip, [fp, #-80]	; 0xffffffb0
   124e4:	ldr	r0, [r0]
   124e8:	add	r0, r0, r4, lsl #1
   124ec:	ldrb	r0, [r0, #1]
   124f0:	ubfx	r6, r0, #6, #1
   124f4:	mov	r2, #1
   124f8:	ldr	r0, [sp, #60]	; 0x3c
   124fc:	orr	r1, r6, r0
   12500:	cmp	r2, #1
   12504:	bhi	12838 <close@plt+0x18a0>
   12508:	tst	r1, #1
   1250c:	beq	12838 <close@plt+0x18a0>
   12510:	ldr	lr, [sp, #32]
   12514:	b	121b4 <close@plt+0x121c>
   12518:	mov	r9, #0
   1251c:	mov	r0, #92	; 0x5c
   12520:	ldr	r1, [sp, #56]	; 0x38
   12524:	cmp	r1, #0
   12528:	beq	125a0 <close@plt+0x1608>
   1252c:	mov	r4, #92	; 0x5c
   12530:	mov	r6, #0
   12534:	cmp	r9, #0
   12538:	bne	12570 <close@plt+0x15d8>
   1253c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12540:	tst	r0, #1
   12544:	beq	12570 <close@plt+0x15d8>
   12548:	cmp	r8, sl
   1254c:	movcc	r0, #39	; 0x27
   12550:	strbcc	r0, [r5, r8]
   12554:	add	r0, r8, #1
   12558:	cmp	r0, sl
   1255c:	movcc	r1, #39	; 0x27
   12560:	strbcc	r1, [r5, r0]
   12564:	add	r8, r8, #2
   12568:	mov	r0, #0
   1256c:	str	r0, [fp, #-56]	; 0xffffffc8
   12570:	mov	r1, r6
   12574:	mov	r0, r4
   12578:	cmp	r8, sl
   1257c:	strbcc	r0, [r5, r8]
   12580:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12584:	and	r0, r0, r1
   12588:	str	r0, [fp, #-48]	; 0xffffffd0
   1258c:	add	r8, r8, #1
   12590:	add	r7, r7, #1
   12594:	cmn	lr, #1
   12598:	bne	11eec <close@plt+0xf54>
   1259c:	b	11ef8 <close@plt+0xf60>
   125a0:	mov	r9, #0
   125a4:	ldr	r1, [sp, #92]	; 0x5c
   125a8:	tst	r1, #1
   125ac:	mov	r6, #0
   125b0:	mov	r1, #0
   125b4:	beq	121b4 <close@plt+0x121c>
   125b8:	b	121fc <close@plt+0x1264>
   125bc:	mov	r4, #0
   125c0:	ldr	r0, [sp, #40]	; 0x28
   125c4:	cmp	r0, #0
   125c8:	mov	r9, #0
   125cc:	mov	r6, #0
   125d0:	beq	121b4 <close@plt+0x121c>
   125d4:	b	12590 <close@plt+0x15f8>
   125d8:	mov	r6, #1
   125dc:	b	121b4 <close@plt+0x121c>
   125e0:	mov	r0, #0
   125e4:	str	r0, [fp, #-36]	; 0xffffffdc
   125e8:	str	r0, [fp, #-40]	; 0xffffffd8
   125ec:	cmn	lr, #1
   125f0:	bne	12604 <close@plt+0x166c>
   125f4:	mov	r0, ip
   125f8:	bl	10ec0 <strlen@plt>
   125fc:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12600:	mov	lr, r0
   12604:	ldr	r0, [sp, #76]	; 0x4c
   12608:	add	r0, r0, r7
   1260c:	str	r0, [sp, #24]
   12610:	mov	r6, #1
   12614:	mov	r2, #0
   12618:	sub	r0, fp, #40	; 0x28
   1261c:	mov	r3, r0
   12620:	str	r5, [sp, #28]
   12624:	str	lr, [sp, #32]
   12628:	b	1266c <close@plt+0x16d4>
   1262c:	ldr	r5, [sp, #52]	; 0x34
   12630:	add	r5, r0, r5
   12634:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12638:	bl	10df4 <iswprint@plt>
   1263c:	cmp	r0, #0
   12640:	movwne	r0, #1
   12644:	and	r6, r6, r0
   12648:	sub	r0, fp, #40	; 0x28
   1264c:	bl	10db8 <mbsinit@plt>
   12650:	sub	r3, fp, #40	; 0x28
   12654:	mov	r2, r5
   12658:	ldr	lr, [sp, #32]
   1265c:	cmp	r0, #0
   12660:	ldr	r5, [sp, #28]
   12664:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12668:	bne	124f8 <close@plt+0x1560>
   1266c:	str	r2, [sp, #52]	; 0x34
   12670:	add	r0, r2, r7
   12674:	add	r1, ip, r0
   12678:	str	r0, [sp, #48]	; 0x30
   1267c:	sub	r2, lr, r0
   12680:	sub	r0, fp, #44	; 0x2c
   12684:	bl	14524 <close@plt+0x358c>
   12688:	cmp	r0, #0
   1268c:	beq	12a04 <close@plt+0x1a6c>
   12690:	cmn	r0, #1
   12694:	beq	129c0 <close@plt+0x1a28>
   12698:	cmn	r0, #2
   1269c:	ldr	lr, [sp, #32]
   126a0:	beq	129c8 <close@plt+0x1a30>
   126a4:	cmp	r0, #2
   126a8:	mov	r1, #0
   126ac:	movwcc	r1, #1
   126b0:	ldr	r2, [sp, #68]	; 0x44
   126b4:	eor	r2, r2, #1
   126b8:	orrs	r1, r2, r1
   126bc:	bne	1262c <close@plt+0x1694>
   126c0:	ldr	r1, [sp, #52]	; 0x34
   126c4:	ldr	r2, [sp, #24]
   126c8:	add	r1, r2, r1
   126cc:	sub	r2, r0, #1
   126d0:	b	126e0 <close@plt+0x1748>
   126d4:	add	r1, r1, #1
   126d8:	subs	r2, r2, #1
   126dc:	beq	1262c <close@plt+0x1694>
   126e0:	ldrb	r3, [r1]
   126e4:	sub	r3, r3, #91	; 0x5b
   126e8:	cmp	r3, #33	; 0x21
   126ec:	bhi	126d4 <close@plt+0x173c>
   126f0:	add	r5, pc, #0
   126f4:	ldr	pc, [r5, r3, lsl #2]
   126f8:	strdeq	r2, [r1], -r0
   126fc:	strdeq	r2, [r1], -r0
   12700:	ldrdeq	r2, [r1], -r4
   12704:	strdeq	r2, [r1], -r0
   12708:	ldrdeq	r2, [r1], -r4
   1270c:	strdeq	r2, [r1], -r0
   12710:	ldrdeq	r2, [r1], -r4
   12714:	ldrdeq	r2, [r1], -r4
   12718:	ldrdeq	r2, [r1], -r4
   1271c:	ldrdeq	r2, [r1], -r4
   12720:	ldrdeq	r2, [r1], -r4
   12724:	ldrdeq	r2, [r1], -r4
   12728:	ldrdeq	r2, [r1], -r4
   1272c:	ldrdeq	r2, [r1], -r4
   12730:	ldrdeq	r2, [r1], -r4
   12734:	ldrdeq	r2, [r1], -r4
   12738:	ldrdeq	r2, [r1], -r4
   1273c:	ldrdeq	r2, [r1], -r4
   12740:	ldrdeq	r2, [r1], -r4
   12744:	ldrdeq	r2, [r1], -r4
   12748:	ldrdeq	r2, [r1], -r4
   1274c:	ldrdeq	r2, [r1], -r4
   12750:	ldrdeq	r2, [r1], -r4
   12754:	ldrdeq	r2, [r1], -r4
   12758:	ldrdeq	r2, [r1], -r4
   1275c:	ldrdeq	r2, [r1], -r4
   12760:	ldrdeq	r2, [r1], -r4
   12764:	ldrdeq	r2, [r1], -r4
   12768:	ldrdeq	r2, [r1], -r4
   1276c:	ldrdeq	r2, [r1], -r4
   12770:	ldrdeq	r2, [r1], -r4
   12774:	ldrdeq	r2, [r1], -r4
   12778:	ldrdeq	r2, [r1], -r4
   1277c:	strdeq	r2, [r1], -r0
   12780:	mov	r8, r0
   12784:	b	121b4 <close@plt+0x121c>
   12788:	ldr	r0, [sp, #36]	; 0x24
   1278c:	cmp	r0, #0
   12790:	beq	12830 <close@plt+0x1898>
   12794:	add	r0, r7, #2
   12798:	cmp	r0, lr
   1279c:	bcs	12830 <close@plt+0x1898>
   127a0:	add	r1, r7, ip
   127a4:	ldrb	r1, [r1, #1]
   127a8:	cmp	r1, #63	; 0x3f
   127ac:	bne	12830 <close@plt+0x1898>
   127b0:	ldrb	r1, [ip, r0]
   127b4:	sub	r2, r1, #33	; 0x21
   127b8:	cmp	r2, #29
   127bc:	bhi	12830 <close@plt+0x1898>
   127c0:	mov	r3, #1
   127c4:	movw	r6, #20929	; 0x51c1
   127c8:	movt	r6, #14336	; 0x3800
   127cc:	tst	r6, r3, lsl r2
   127d0:	beq	12830 <close@plt+0x1898>
   127d4:	ldr	r2, [fp, #-76]	; 0xffffffb4
   127d8:	tst	r2, #1
   127dc:	bne	12af8 <close@plt+0x1b60>
   127e0:	cmp	r8, sl
   127e4:	movcc	r2, #63	; 0x3f
   127e8:	strbcc	r2, [r5, r8]
   127ec:	add	r2, r8, #1
   127f0:	cmp	r2, sl
   127f4:	movcc	r3, #34	; 0x22
   127f8:	strbcc	r3, [r5, r2]
   127fc:	add	r2, r8, #2
   12800:	cmp	r2, sl
   12804:	movcc	r3, #34	; 0x22
   12808:	strbcc	r3, [r5, r2]
   1280c:	add	r2, r8, #3
   12810:	cmp	r2, sl
   12814:	movcc	r3, #63	; 0x3f
   12818:	strbcc	r3, [r5, r2]
   1281c:	add	r8, r8, #4
   12820:	mov	r7, r0
   12824:	mov	r4, r1
   12828:	mov	r6, #0
   1282c:	b	121b4 <close@plt+0x121c>
   12830:	mov	r6, #0
   12834:	b	121b4 <close@plt+0x121c>
   12838:	add	r0, r2, r7
   1283c:	str	r0, [sp, #52]	; 0x34
   12840:	mov	r2, #0
   12844:	ldr	lr, [sp, #32]
   12848:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1284c:	str	r1, [sp, #48]	; 0x30
   12850:	tst	r1, #1
   12854:	bne	12930 <close@plt+0x1998>
   12858:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1285c:	tst	r1, #1
   12860:	bne	12af8 <close@plt+0x1b60>
   12864:	mov	r3, r0
   12868:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1286c:	subs	r1, r0, #2
   12870:	movwne	r1, #1
   12874:	orr	r1, r1, r3
   12878:	tst	r1, #1
   1287c:	bne	128b4 <close@plt+0x191c>
   12880:	cmp	r8, sl
   12884:	movcc	r0, #39	; 0x27
   12888:	strbcc	r0, [r5, r8]
   1288c:	add	r2, r8, #1
   12890:	cmp	r2, sl
   12894:	movcc	r0, #36	; 0x24
   12898:	strbcc	r0, [r5, r2]
   1289c:	add	r2, r8, #2
   128a0:	cmp	r2, sl
   128a4:	movcc	r0, #39	; 0x27
   128a8:	strbcc	r0, [r5, r2]
   128ac:	add	r8, r8, #3
   128b0:	mov	r3, #1
   128b4:	cmp	r8, sl
   128b8:	movcc	r1, #92	; 0x5c
   128bc:	strbcc	r1, [r5, r8]
   128c0:	add	r2, r8, #1
   128c4:	cmp	r2, sl
   128c8:	bcs	128dc <close@plt+0x1944>
   128cc:	uxtb	r1, r4
   128d0:	mov	r0, #48	; 0x30
   128d4:	orr	r1, r0, r1, lsr #6
   128d8:	strb	r1, [r5, r2]
   128dc:	add	r2, r8, #2
   128e0:	cmp	r2, sl
   128e4:	lsrcc	r1, r4, #3
   128e8:	movcc	r0, #6
   128ec:	bficc	r1, r0, #3, #29
   128f0:	strbcc	r1, [r5, r2]
   128f4:	mov	r0, #6
   128f8:	bfi	r4, r0, #3, #29
   128fc:	add	r8, r8, #3
   12900:	mov	r2, #1
   12904:	mov	r0, r3
   12908:	b	12954 <close@plt+0x19bc>
   1290c:	cmp	r8, sl
   12910:	strbcc	r4, [r5, r8]
   12914:	ldr	r1, [sp, #76]	; 0x4c
   12918:	ldrb	r4, [r1, r7]
   1291c:	add	r8, r8, #1
   12920:	mov	r7, r3
   12924:	ldr	r1, [sp, #48]	; 0x30
   12928:	tst	r1, #1
   1292c:	beq	12858 <close@plt+0x18c0>
   12930:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12934:	tst	r1, #1
   12938:	beq	1294c <close@plt+0x19b4>
   1293c:	cmp	r8, sl
   12940:	movcc	r1, #92	; 0x5c
   12944:	strbcc	r1, [r5, r8]
   12948:	add	r8, r8, #1
   1294c:	mov	r1, #0
   12950:	str	r1, [fp, #-52]	; 0xffffffcc
   12954:	and	r9, r2, #1
   12958:	add	r3, r7, #1
   1295c:	ldr	r1, [sp, #52]	; 0x34
   12960:	cmp	r1, r3
   12964:	bls	129a8 <close@plt+0x1a10>
   12968:	cmp	r9, #0
   1296c:	movwne	r9, #1
   12970:	mvn	r1, r0
   12974:	orr	r1, r1, r9
   12978:	tst	r1, #1
   1297c:	bne	1290c <close@plt+0x1974>
   12980:	cmp	r8, sl
   12984:	movcc	r1, #39	; 0x27
   12988:	strbcc	r1, [r5, r8]
   1298c:	add	r1, r8, #1
   12990:	cmp	r1, sl
   12994:	movcc	r0, #39	; 0x27
   12998:	strbcc	r0, [r5, r1]
   1299c:	add	r8, r8, #2
   129a0:	mov	r0, #0
   129a4:	b	1290c <close@plt+0x1974>
   129a8:	str	r0, [fp, #-56]	; 0xffffffc8
   129ac:	cmp	r9, #0
   129b0:	movwne	r9, #1
   129b4:	cmp	r9, #0
   129b8:	beq	1253c <close@plt+0x15a4>
   129bc:	b	12570 <close@plt+0x15d8>
   129c0:	mov	r6, #0
   129c4:	b	12a04 <close@plt+0x1a6c>
   129c8:	mov	r6, #0
   129cc:	ldr	r0, [sp, #48]	; 0x30
   129d0:	cmp	r0, lr
   129d4:	bcs	12a04 <close@plt+0x1a6c>
   129d8:	ldr	ip, [fp, #-80]	; 0xffffffb0
   129dc:	add	r0, ip, r7
   129e0:	ldr	r2, [sp, #52]	; 0x34
   129e4:	ldrb	r1, [r0, r2]
   129e8:	cmp	r1, #0
   129ec:	beq	124f8 <close@plt+0x1560>
   129f0:	add	r2, r2, #1
   129f4:	add	r1, r7, r2
   129f8:	cmp	r1, lr
   129fc:	bcc	129e4 <close@plt+0x1a4c>
   12a00:	b	124f8 <close@plt+0x1560>
   12a04:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12a08:	ldr	r2, [sp, #52]	; 0x34
   12a0c:	b	124f8 <close@plt+0x1560>
   12a10:	ldr	r1, [fp, #-64]	; 0xffffffc0
   12a14:	eor	r0, r1, #2
   12a18:	orr	r0, r0, r8
   12a1c:	clz	r0, r0
   12a20:	lsr	r0, r0, #5
   12a24:	ldr	r3, [fp, #-76]	; 0xffffffb4
   12a28:	tst	r3, r0
   12a2c:	bne	12af8 <close@plt+0x1b60>
   12a30:	mov	r6, r5
   12a34:	subs	r0, r1, #2
   12a38:	movwne	r0, #1
   12a3c:	orr	r0, r3, r0
   12a40:	tst	r0, #1
   12a44:	ldr	r2, [sp, #92]	; 0x5c
   12a48:	ldreq	r0, [sp, #64]	; 0x40
   12a4c:	eoreq	r0, r0, #1
   12a50:	tsteq	r0, #1
   12a54:	bne	12a94 <close@plt+0x1afc>
   12a58:	mov	r9, lr
   12a5c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12a60:	tst	r0, #1
   12a64:	bne	12b60 <close@plt+0x1bc8>
   12a68:	ldr	r0, [sp, #84]	; 0x54
   12a6c:	cmp	r0, #0
   12a70:	beq	12a94 <close@plt+0x1afc>
   12a74:	mov	r0, #0
   12a78:	str	r0, [fp, #-48]	; 0xffffffd0
   12a7c:	mov	r1, #2
   12a80:	cmp	sl, #0
   12a84:	mov	r0, r2
   12a88:	mov	r4, r3
   12a8c:	ldr	r7, [sp, #84]	; 0x54
   12a90:	beq	11c6c <close@plt+0xcd4>
   12a94:	ldr	r1, [fp, #-84]	; 0xffffffac
   12a98:	clz	r0, r1
   12a9c:	lsr	r0, r0, #5
   12aa0:	orr	r0, r0, r3
   12aa4:	tst	r0, #1
   12aa8:	bne	12ad4 <close@plt+0x1b3c>
   12aac:	ldrb	r0, [r1]
   12ab0:	cmp	r0, #0
   12ab4:	beq	12ad4 <close@plt+0x1b3c>
   12ab8:	add	r1, r1, #1
   12abc:	cmp	r8, sl
   12ac0:	strbcc	r0, [r6, r8]
   12ac4:	add	r8, r8, #1
   12ac8:	ldrb	r0, [r1], #1
   12acc:	cmp	r0, #0
   12ad0:	bne	12abc <close@plt+0x1b24>
   12ad4:	cmp	r8, sl
   12ad8:	movcc	r0, #0
   12adc:	strbcc	r0, [r6, r8]
   12ae0:	b	12b54 <close@plt+0x1bbc>
   12ae4:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12ae8:	mov	lr, r4
   12aec:	b	12af8 <close@plt+0x1b60>
   12af0:	ldr	r5, [sp, #28]
   12af4:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12af8:	mov	r0, #0
   12afc:	ldr	r1, [fp, #12]
   12b00:	bic	r1, r1, #2
   12b04:	mov	r2, #2
   12b08:	ldr	r3, [sp, #92]	; 0x5c
   12b0c:	tst	r3, #1
   12b10:	movwne	r2, #4
   12b14:	ldr	r3, [fp, #-64]	; 0xffffffc0
   12b18:	cmp	r3, #2
   12b1c:	movne	r2, r3
   12b20:	str	r2, [sp]
   12b24:	str	r1, [sp, #4]
   12b28:	str	r0, [sp, #8]
   12b2c:	ldr	r0, [sp, #80]	; 0x50
   12b30:	str	r0, [sp, #12]
   12b34:	ldr	r0, [sp, #88]	; 0x58
   12b38:	str	r0, [sp, #16]
   12b3c:	mov	r0, r5
   12b40:	mov	r1, sl
   12b44:	mov	r2, ip
   12b48:	mov	r3, lr
   12b4c:	bl	11be0 <close@plt+0xc48>
   12b50:	mov	r8, r0
   12b54:	mov	r0, r8
   12b58:	sub	sp, fp, #28
   12b5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12b60:	mov	r0, #5
   12b64:	str	r0, [sp]
   12b68:	ldr	r0, [fp, #12]
   12b6c:	str	r0, [sp, #4]
   12b70:	ldr	r0, [fp, #16]
   12b74:	str	r0, [sp, #8]
   12b78:	ldr	r0, [sp, #80]	; 0x50
   12b7c:	str	r0, [sp, #12]
   12b80:	ldr	r0, [sp, #88]	; 0x58
   12b84:	str	r0, [sp, #16]
   12b88:	mov	r0, r6
   12b8c:	ldr	r1, [sp, #84]	; 0x54
   12b90:	ldr	r2, [fp, #-80]	; 0xffffffb0
   12b94:	mov	r3, r9
   12b98:	b	12b4c <close@plt+0x1bb4>
   12b9c:	bl	10f8c <abort@plt>
   12ba0:	mov	r3, r2
   12ba4:	mov	r2, #0
   12ba8:	b	12bac <close@plt+0x1c14>
   12bac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12bb0:	add	fp, sp, #28
   12bb4:	sub	sp, sp, #36	; 0x24
   12bb8:	mov	r4, r2
   12bbc:	str	r2, [sp, #24]
   12bc0:	mov	r5, r1
   12bc4:	mov	r6, r0
   12bc8:	str	r0, [sp, #20]
   12bcc:	movw	r8, #24920	; 0x6158
   12bd0:	movt	r8, #2
   12bd4:	cmp	r3, #0
   12bd8:	movne	r8, r3
   12bdc:	bl	10ecc <__errno_location@plt>
   12be0:	str	r0, [sp, #28]
   12be4:	ldm	r8, {r3, r9}
   12be8:	ldr	r1, [r8, #40]	; 0x28
   12bec:	ldr	r2, [r8, #44]	; 0x2c
   12bf0:	ldr	r7, [r0]
   12bf4:	str	r7, [sp, #32]
   12bf8:	add	sl, r8, #8
   12bfc:	cmp	r4, #0
   12c00:	orreq	r9, r9, #1
   12c04:	stm	sp, {r3, r9, sl}
   12c08:	str	r1, [sp, #12]
   12c0c:	str	r2, [sp, #16]
   12c10:	mov	r0, #0
   12c14:	mov	r1, #0
   12c18:	mov	r2, r6
   12c1c:	mov	r3, r5
   12c20:	mov	r7, r5
   12c24:	bl	11be0 <close@plt+0xc48>
   12c28:	mov	r5, r0
   12c2c:	add	r4, r0, #1
   12c30:	mov	r0, r4
   12c34:	bl	13ab4 <close@plt+0x2b1c>
   12c38:	mov	r6, r0
   12c3c:	ldr	r0, [r8]
   12c40:	ldr	r1, [r8, #40]	; 0x28
   12c44:	ldr	r2, [r8, #44]	; 0x2c
   12c48:	stm	sp, {r0, r9, sl}
   12c4c:	str	r1, [sp, #12]
   12c50:	str	r2, [sp, #16]
   12c54:	mov	r0, r6
   12c58:	mov	r1, r4
   12c5c:	ldr	r2, [sp, #20]
   12c60:	mov	r3, r7
   12c64:	bl	11be0 <close@plt+0xc48>
   12c68:	ldr	r0, [sp, #24]
   12c6c:	ldr	r1, [sp, #32]
   12c70:	ldr	r2, [sp, #28]
   12c74:	str	r1, [r2]
   12c78:	cmp	r0, #0
   12c7c:	strne	r5, [r0]
   12c80:	mov	r0, r6
   12c84:	sub	sp, fp, #28
   12c88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c8c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12c90:	add	fp, sp, #24
   12c94:	movw	r8, #24808	; 0x60e8
   12c98:	movt	r8, #2
   12c9c:	ldr	r4, [r8]
   12ca0:	movw	r5, #24812	; 0x60ec
   12ca4:	movt	r5, #2
   12ca8:	ldr	r0, [r5]
   12cac:	cmp	r0, #2
   12cb0:	blt	12cdc <close@plt+0x1d44>
   12cb4:	add	r7, r4, #12
   12cb8:	mov	r6, #0
   12cbc:	ldr	r0, [r7, r6, lsl #3]
   12cc0:	bl	143cc <close@plt+0x3434>
   12cc4:	add	r0, r6, #1
   12cc8:	ldr	r1, [r5]
   12ccc:	add	r2, r6, #2
   12cd0:	cmp	r2, r1
   12cd4:	mov	r6, r0
   12cd8:	blt	12cbc <close@plt+0x1d24>
   12cdc:	ldr	r0, [r4, #4]
   12ce0:	movw	r9, #24968	; 0x6188
   12ce4:	movt	r9, #2
   12ce8:	cmp	r0, r9
   12cec:	movw	r7, #24816	; 0x60f0
   12cf0:	movt	r7, #2
   12cf4:	beq	12d04 <close@plt+0x1d6c>
   12cf8:	bl	143cc <close@plt+0x3434>
   12cfc:	mov	r0, #256	; 0x100
   12d00:	stm	r7, {r0, r9}
   12d04:	cmp	r4, r7
   12d08:	beq	12d18 <close@plt+0x1d80>
   12d0c:	mov	r0, r4
   12d10:	bl	143cc <close@plt+0x3434>
   12d14:	str	r7, [r8]
   12d18:	mov	r0, #1
   12d1c:	str	r0, [r5]
   12d20:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12d24:	movw	r3, #24920	; 0x6158
   12d28:	movt	r3, #2
   12d2c:	mvn	r2, #0
   12d30:	b	12d34 <close@plt+0x1d9c>
   12d34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d38:	add	fp, sp, #28
   12d3c:	sub	sp, sp, #44	; 0x2c
   12d40:	mov	r7, r3
   12d44:	str	r2, [sp, #36]	; 0x24
   12d48:	str	r1, [sp, #32]
   12d4c:	mov	r5, r0
   12d50:	bl	10ecc <__errno_location@plt>
   12d54:	cmp	r5, #0
   12d58:	bmi	12ec8 <close@plt+0x1f30>
   12d5c:	cmn	r5, #-2147483647	; 0x80000001
   12d60:	beq	12ec8 <close@plt+0x1f30>
   12d64:	movw	r4, #24808	; 0x60e8
   12d68:	movt	r4, #2
   12d6c:	ldr	r6, [r4]
   12d70:	str	r0, [sp, #28]
   12d74:	ldr	r0, [r0]
   12d78:	str	r0, [sp, #24]
   12d7c:	movw	r8, #24812	; 0x60ec
   12d80:	movt	r8, #2
   12d84:	ldr	r1, [r8]
   12d88:	cmp	r1, r5
   12d8c:	ble	12d98 <close@plt+0x1e00>
   12d90:	mov	sl, r6
   12d94:	b	12e04 <close@plt+0x1e6c>
   12d98:	str	r1, [fp, #-32]	; 0xffffffe0
   12d9c:	mov	r0, #8
   12da0:	str	r0, [sp]
   12da4:	movw	r9, #24816	; 0x60f0
   12da8:	movt	r9, #2
   12dac:	subs	r0, r6, r9
   12db0:	movne	r0, r6
   12db4:	sub	r1, r5, r1
   12db8:	add	r2, r1, #1
   12dbc:	sub	r1, fp, #32
   12dc0:	mvn	r3, #-2147483648	; 0x80000000
   12dc4:	bl	13b90 <close@plt+0x2bf8>
   12dc8:	mov	sl, r0
   12dcc:	str	r0, [r4]
   12dd0:	cmp	r6, r9
   12dd4:	bne	12de0 <close@plt+0x1e48>
   12dd8:	ldrd	r0, [r9]
   12ddc:	stm	sl, {r0, r1}
   12de0:	ldr	r1, [r8]
   12de4:	add	r0, sl, r1, lsl #3
   12de8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12dec:	sub	r1, r2, r1
   12df0:	lsl	r2, r1, #3
   12df4:	mov	r1, #0
   12df8:	bl	10ee4 <memset@plt>
   12dfc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12e00:	str	r0, [r8]
   12e04:	mov	r9, sl
   12e08:	ldr	r6, [r9, r5, lsl #3]!
   12e0c:	ldr	r4, [r9, #4]!
   12e10:	ldm	r7, {r0, r1}
   12e14:	ldr	r2, [r7, #40]	; 0x28
   12e18:	ldr	r3, [r7, #44]	; 0x2c
   12e1c:	orr	r8, r1, #1
   12e20:	add	r1, r7, #8
   12e24:	stm	sp, {r0, r8}
   12e28:	str	r1, [sp, #20]
   12e2c:	add	r0, sp, #8
   12e30:	stm	r0, {r1, r2, r3}
   12e34:	mov	r0, r4
   12e38:	mov	r1, r6
   12e3c:	ldr	r2, [sp, #32]
   12e40:	ldr	r3, [sp, #36]	; 0x24
   12e44:	bl	11be0 <close@plt+0xc48>
   12e48:	cmp	r6, r0
   12e4c:	bhi	12eb0 <close@plt+0x1f18>
   12e50:	add	r6, r0, #1
   12e54:	str	r6, [sl, r5, lsl #3]
   12e58:	movw	r0, #24968	; 0x6188
   12e5c:	movt	r0, #2
   12e60:	cmp	r4, r0
   12e64:	beq	12e70 <close@plt+0x1ed8>
   12e68:	mov	r0, r4
   12e6c:	bl	143cc <close@plt+0x3434>
   12e70:	mov	r0, r6
   12e74:	bl	13ab4 <close@plt+0x2b1c>
   12e78:	mov	r4, r0
   12e7c:	str	r0, [r9]
   12e80:	ldr	r0, [r7]
   12e84:	ldr	r1, [r7, #40]	; 0x28
   12e88:	ldr	r2, [r7, #44]	; 0x2c
   12e8c:	stm	sp, {r0, r8}
   12e90:	ldr	r0, [sp, #20]
   12e94:	add	r3, sp, #8
   12e98:	stm	r3, {r0, r1, r2}
   12e9c:	mov	r0, r4
   12ea0:	mov	r1, r6
   12ea4:	ldr	r2, [sp, #32]
   12ea8:	ldr	r3, [sp, #36]	; 0x24
   12eac:	bl	11be0 <close@plt+0xc48>
   12eb0:	ldr	r0, [sp, #28]
   12eb4:	ldr	r1, [sp, #24]
   12eb8:	str	r1, [r0]
   12ebc:	mov	r0, r4
   12ec0:	sub	sp, fp, #28
   12ec4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ec8:	bl	10f8c <abort@plt>
   12ecc:	movw	r3, #24920	; 0x6158
   12ed0:	movt	r3, #2
   12ed4:	b	12d34 <close@plt+0x1d9c>
   12ed8:	mov	r1, r0
   12edc:	mov	r0, #0
   12ee0:	b	12d24 <close@plt+0x1d8c>
   12ee4:	mov	r2, r1
   12ee8:	mov	r1, r0
   12eec:	mov	r0, #0
   12ef0:	b	12ecc <close@plt+0x1f34>
   12ef4:	push	{r4, r5, r6, sl, fp, lr}
   12ef8:	add	fp, sp, #16
   12efc:	sub	sp, sp, #48	; 0x30
   12f00:	mov	r4, r2
   12f04:	mov	r5, r0
   12f08:	mov	r6, sp
   12f0c:	mov	r0, r6
   12f10:	bl	12f30 <close@plt+0x1f98>
   12f14:	mov	r0, r5
   12f18:	mov	r1, r4
   12f1c:	mvn	r2, #0
   12f20:	mov	r3, r6
   12f24:	bl	12d34 <close@plt+0x1d9c>
   12f28:	sub	sp, fp, #16
   12f2c:	pop	{r4, r5, r6, sl, fp, pc}
   12f30:	push	{fp, lr}
   12f34:	mov	fp, sp
   12f38:	vmov.i32	q8, #0	; 0x00000000
   12f3c:	mov	r2, #32
   12f40:	mov	r3, r0
   12f44:	vst1.32	{d16-d17}, [r3], r2
   12f48:	vst1.32	{d16-d17}, [r3]
   12f4c:	add	r2, r0, #16
   12f50:	vst1.32	{d16-d17}, [r2]
   12f54:	cmp	r1, #10
   12f58:	strne	r1, [r0]
   12f5c:	popne	{fp, pc}
   12f60:	bl	10f8c <abort@plt>
   12f64:	push	{r4, r5, r6, r7, fp, lr}
   12f68:	add	fp, sp, #16
   12f6c:	sub	sp, sp, #48	; 0x30
   12f70:	mov	r4, r3
   12f74:	mov	r5, r2
   12f78:	mov	r6, r0
   12f7c:	mov	r7, sp
   12f80:	mov	r0, r7
   12f84:	bl	12f30 <close@plt+0x1f98>
   12f88:	mov	r0, r6
   12f8c:	mov	r1, r5
   12f90:	mov	r2, r4
   12f94:	mov	r3, r7
   12f98:	bl	12d34 <close@plt+0x1d9c>
   12f9c:	sub	sp, fp, #16
   12fa0:	pop	{r4, r5, r6, r7, fp, pc}
   12fa4:	mov	r2, r1
   12fa8:	mov	r1, r0
   12fac:	mov	r0, #0
   12fb0:	b	12ef4 <close@plt+0x1f5c>
   12fb4:	mov	r3, r2
   12fb8:	mov	r2, r1
   12fbc:	mov	r1, r0
   12fc0:	mov	r0, #0
   12fc4:	b	12f64 <close@plt+0x1fcc>
   12fc8:	push	{r4, r5, r6, sl, fp, lr}
   12fcc:	add	fp, sp, #16
   12fd0:	sub	sp, sp, #48	; 0x30
   12fd4:	mov	r4, r1
   12fd8:	mov	r5, r0
   12fdc:	movw	r0, #24920	; 0x6158
   12fe0:	movt	r0, #2
   12fe4:	add	r1, r0, #16
   12fe8:	mov	r3, #32
   12fec:	vld1.64	{d16-d17}, [r0], r3
   12ff0:	vld1.64	{d18-d19}, [r1]
   12ff4:	mov	r6, sp
   12ff8:	add	r1, r6, #16
   12ffc:	vld1.64	{d20-d21}, [r0]
   13000:	vst1.64	{d18-d19}, [r1]
   13004:	mov	r0, r6
   13008:	vst1.64	{d16-d17}, [r0], r3
   1300c:	vst1.64	{d20-d21}, [r0]
   13010:	mov	r0, r6
   13014:	mov	r1, r2
   13018:	mov	r2, #1
   1301c:	bl	11ad4 <close@plt+0xb3c>
   13020:	mov	r0, #0
   13024:	mov	r1, r5
   13028:	mov	r2, r4
   1302c:	mov	r3, r6
   13030:	bl	12d34 <close@plt+0x1d9c>
   13034:	sub	sp, fp, #16
   13038:	pop	{r4, r5, r6, sl, fp, pc}
   1303c:	mov	r2, r1
   13040:	mvn	r1, #0
   13044:	b	12fc8 <close@plt+0x2030>
   13048:	mov	r1, #58	; 0x3a
   1304c:	b	1303c <close@plt+0x20a4>
   13050:	mov	r2, #58	; 0x3a
   13054:	b	12fc8 <close@plt+0x2030>
   13058:	push	{r4, r5, r6, sl, fp, lr}
   1305c:	add	fp, sp, #16
   13060:	sub	sp, sp, #48	; 0x30
   13064:	mov	r4, r2
   13068:	mov	r5, r0
   1306c:	mov	r6, sp
   13070:	mov	r0, r6
   13074:	bl	12f30 <close@plt+0x1f98>
   13078:	mov	r0, r6
   1307c:	mov	r1, #58	; 0x3a
   13080:	mov	r2, #1
   13084:	bl	11ad4 <close@plt+0xb3c>
   13088:	mov	r0, r5
   1308c:	mov	r1, r4
   13090:	mvn	r2, #0
   13094:	mov	r3, r6
   13098:	bl	12d34 <close@plt+0x1d9c>
   1309c:	sub	sp, fp, #16
   130a0:	pop	{r4, r5, r6, sl, fp, pc}
   130a4:	push	{fp, lr}
   130a8:	mov	fp, sp
   130ac:	sub	sp, sp, #8
   130b0:	mvn	ip, #0
   130b4:	str	ip, [sp]
   130b8:	bl	130c4 <close@plt+0x212c>
   130bc:	mov	sp, fp
   130c0:	pop	{fp, pc}
   130c4:	push	{r4, r5, r6, r7, fp, lr}
   130c8:	add	fp, sp, #16
   130cc:	sub	sp, sp, #48	; 0x30
   130d0:	mov	r7, r3
   130d4:	mov	r5, r0
   130d8:	movw	r0, #24920	; 0x6158
   130dc:	movt	r0, #2
   130e0:	add	r3, r0, #16
   130e4:	mov	r4, #32
   130e8:	vld1.64	{d16-d17}, [r0], r4
   130ec:	vld1.64	{d18-d19}, [r3]
   130f0:	mov	r6, sp
   130f4:	add	r3, r6, #16
   130f8:	vld1.64	{d20-d21}, [r0]
   130fc:	vst1.64	{d18-d19}, [r3]
   13100:	mov	r0, r6
   13104:	vst1.64	{d16-d17}, [r0], r4
   13108:	vst1.64	{d20-d21}, [r0]
   1310c:	mov	r0, r6
   13110:	bl	11b2c <close@plt+0xb94>
   13114:	ldr	r2, [fp, #8]
   13118:	mov	r0, r5
   1311c:	mov	r1, r7
   13120:	mov	r3, r6
   13124:	bl	12d34 <close@plt+0x1d9c>
   13128:	sub	sp, fp, #16
   1312c:	pop	{r4, r5, r6, r7, fp, pc}
   13130:	mov	r3, r2
   13134:	mov	r2, r1
   13138:	mov	r1, r0
   1313c:	mov	r0, #0
   13140:	b	130a4 <close@plt+0x210c>
   13144:	push	{fp, lr}
   13148:	mov	fp, sp
   1314c:	sub	sp, sp, #8
   13150:	mov	ip, r2
   13154:	mov	r2, r1
   13158:	mov	r1, r0
   1315c:	str	r3, [sp]
   13160:	mov	r0, #0
   13164:	mov	r3, ip
   13168:	bl	130c4 <close@plt+0x212c>
   1316c:	mov	sp, fp
   13170:	pop	{fp, pc}
   13174:	movw	r3, #24824	; 0x60f8
   13178:	movt	r3, #2
   1317c:	b	12d34 <close@plt+0x1d9c>
   13180:	mov	r2, r1
   13184:	mov	r1, r0
   13188:	mov	r0, #0
   1318c:	b	13174 <close@plt+0x21dc>
   13190:	mvn	r2, #0
   13194:	b	13174 <close@plt+0x21dc>
   13198:	mov	r1, r0
   1319c:	mov	r0, #0
   131a0:	b	13190 <close@plt+0x21f8>
   131a4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   131a8:	add	fp, sp, #24
   131ac:	sub	sp, sp, #16
   131b0:	mov	r4, r1
   131b4:	mov	r5, r0
   131b8:	mov	r7, #0
   131bc:	mov	r0, #0
   131c0:	mov	r1, r5
   131c4:	mov	r2, #5
   131c8:	bl	10dc4 <dcgettext@plt>
   131cc:	cmp	r0, r5
   131d0:	beq	131dc <close@plt+0x2244>
   131d4:	sub	sp, fp, #24
   131d8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   131dc:	bl	144ec <close@plt+0x3554>
   131e0:	mov	r6, r0
   131e4:	mov	r8, #56	; 0x38
   131e8:	mov	r0, #45	; 0x2d
   131ec:	stm	sp, {r0, r8}
   131f0:	str	r7, [sp, #8]
   131f4:	str	r7, [sp, #12]
   131f8:	mov	r0, r6
   131fc:	mov	r1, #85	; 0x55
   13200:	mov	r2, #84	; 0x54
   13204:	mov	r3, #70	; 0x46
   13208:	bl	132a0 <close@plt+0x2308>
   1320c:	cmp	r0, #0
   13210:	beq	1322c <close@plt+0x2294>
   13214:	ldrb	r1, [r5]
   13218:	movw	r2, #19608	; 0x4c98
   1321c:	movt	r2, #1
   13220:	movw	r0, #19612	; 0x4c9c
   13224:	movt	r0, #1
   13228:	b	13270 <close@plt+0x22d8>
   1322c:	mov	r0, #48	; 0x30
   13230:	mov	r1, #51	; 0x33
   13234:	str	r8, [sp]
   13238:	stmib	sp, {r0, r1}
   1323c:	str	r0, [sp, #12]
   13240:	mov	r0, r6
   13244:	mov	r1, #71	; 0x47
   13248:	mov	r2, #66	; 0x42
   1324c:	mov	r3, #49	; 0x31
   13250:	bl	132a0 <close@plt+0x2308>
   13254:	cmp	r0, #0
   13258:	beq	13280 <close@plt+0x22e8>
   1325c:	ldrb	r1, [r5]
   13260:	movw	r2, #19616	; 0x4ca0
   13264:	movt	r2, #1
   13268:	movw	r0, #19620	; 0x4ca4
   1326c:	movt	r0, #1
   13270:	cmp	r1, #96	; 0x60
   13274:	moveq	r0, r2
   13278:	sub	sp, fp, #24
   1327c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13280:	movw	r1, #19602	; 0x4c92
   13284:	movt	r1, #1
   13288:	movw	r0, #19606	; 0x4c96
   1328c:	movt	r0, #1
   13290:	cmp	r4, #9
   13294:	moveq	r0, r1
   13298:	sub	sp, fp, #24
   1329c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   132a0:	push	{r4, r5, r6, r7, fp, lr}
   132a4:	add	fp, sp, #16
   132a8:	sub	sp, sp, #16
   132ac:	mov	r4, r3
   132b0:	mov	r5, r2
   132b4:	mov	r7, r1
   132b8:	mov	r6, r0
   132bc:	mov	r0, r1
   132c0:	bl	141d0 <close@plt+0x3238>
   132c4:	ldrb	r1, [r6]
   132c8:	cmp	r0, #0
   132cc:	andne	r1, r1, #223	; 0xdf
   132d0:	mov	r0, #0
   132d4:	cmp	r1, r7
   132d8:	bne	13310 <close@plt+0x2378>
   132dc:	cmp	r7, #0
   132e0:	beq	13318 <close@plt+0x2380>
   132e4:	ldr	r0, [fp, #20]
   132e8:	ldr	r1, [fp, #16]
   132ec:	ldr	r2, [fp, #12]
   132f0:	ldr	r3, [fp, #8]
   132f4:	str	r2, [sp]
   132f8:	str	r1, [sp, #4]
   132fc:	str	r0, [sp, #8]
   13300:	mov	r0, r6
   13304:	mov	r1, r5
   13308:	mov	r2, r4
   1330c:	bl	13324 <close@plt+0x238c>
   13310:	sub	sp, fp, #16
   13314:	pop	{r4, r5, r6, r7, fp, pc}
   13318:	mov	r0, #1
   1331c:	sub	sp, fp, #16
   13320:	pop	{r4, r5, r6, r7, fp, pc}
   13324:	push	{r4, r5, r6, r7, fp, lr}
   13328:	add	fp, sp, #16
   1332c:	sub	sp, sp, #8
   13330:	mov	r4, r3
   13334:	mov	r5, r2
   13338:	mov	r7, r1
   1333c:	mov	r6, r0
   13340:	mov	r0, r1
   13344:	bl	141d0 <close@plt+0x3238>
   13348:	ldrb	r1, [r6, #1]
   1334c:	cmp	r0, #0
   13350:	andne	r1, r1, #223	; 0xdf
   13354:	mov	r0, #0
   13358:	cmp	r1, r7
   1335c:	bne	1338c <close@plt+0x23f4>
   13360:	cmp	r7, #0
   13364:	beq	13394 <close@plt+0x23fc>
   13368:	ldr	r0, [fp, #16]
   1336c:	ldr	r1, [fp, #12]
   13370:	ldr	r3, [fp, #8]
   13374:	str	r1, [sp]
   13378:	str	r0, [sp, #4]
   1337c:	mov	r0, r6
   13380:	mov	r1, r5
   13384:	mov	r2, r4
   13388:	bl	133a0 <close@plt+0x2408>
   1338c:	sub	sp, fp, #16
   13390:	pop	{r4, r5, r6, r7, fp, pc}
   13394:	mov	r0, #1
   13398:	sub	sp, fp, #16
   1339c:	pop	{r4, r5, r6, r7, fp, pc}
   133a0:	push	{r4, r5, r6, r7, fp, lr}
   133a4:	add	fp, sp, #16
   133a8:	sub	sp, sp, #8
   133ac:	mov	r4, r3
   133b0:	mov	r5, r2
   133b4:	mov	r7, r1
   133b8:	mov	r6, r0
   133bc:	mov	r0, r1
   133c0:	bl	141d0 <close@plt+0x3238>
   133c4:	ldrb	r1, [r6, #2]
   133c8:	cmp	r0, #0
   133cc:	andne	r1, r1, #223	; 0xdf
   133d0:	mov	r0, #0
   133d4:	cmp	r1, r7
   133d8:	bne	13400 <close@plt+0x2468>
   133dc:	cmp	r7, #0
   133e0:	beq	13408 <close@plt+0x2470>
   133e4:	ldr	r0, [fp, #12]
   133e8:	ldr	r3, [fp, #8]
   133ec:	str	r0, [sp]
   133f0:	mov	r0, r6
   133f4:	mov	r1, r5
   133f8:	mov	r2, r4
   133fc:	bl	13414 <close@plt+0x247c>
   13400:	sub	sp, fp, #16
   13404:	pop	{r4, r5, r6, r7, fp, pc}
   13408:	mov	r0, #1
   1340c:	sub	sp, fp, #16
   13410:	pop	{r4, r5, r6, r7, fp, pc}
   13414:	push	{r4, r5, r6, r7, fp, lr}
   13418:	add	fp, sp, #16
   1341c:	mov	r4, r3
   13420:	mov	r5, r2
   13424:	mov	r7, r1
   13428:	mov	r6, r0
   1342c:	mov	r0, r1
   13430:	bl	141d0 <close@plt+0x3238>
   13434:	ldrb	r1, [r6, #3]
   13438:	ldr	r3, [fp, #8]
   1343c:	cmp	r0, #0
   13440:	andne	r1, r1, #223	; 0xdf
   13444:	mov	r0, #0
   13448:	cmp	r1, r7
   1344c:	bne	13470 <close@plt+0x24d8>
   13450:	cmp	r7, #0
   13454:	beq	1346c <close@plt+0x24d4>
   13458:	mov	r0, r6
   1345c:	mov	r1, r5
   13460:	mov	r2, r4
   13464:	pop	{r4, r5, r6, r7, fp, lr}
   13468:	b	13474 <close@plt+0x24dc>
   1346c:	mov	r0, #1
   13470:	pop	{r4, r5, r6, r7, fp, pc}
   13474:	push	{r4, r5, r6, r7, fp, lr}
   13478:	add	fp, sp, #16
   1347c:	mov	r4, r3
   13480:	mov	r5, r2
   13484:	mov	r7, r1
   13488:	mov	r6, r0
   1348c:	mov	r0, r1
   13490:	bl	141d0 <close@plt+0x3238>
   13494:	ldrb	r1, [r6, #4]
   13498:	cmp	r0, #0
   1349c:	andne	r1, r1, #223	; 0xdf
   134a0:	mov	r0, #0
   134a4:	cmp	r1, r7
   134a8:	bne	134cc <close@plt+0x2534>
   134ac:	cmp	r7, #0
   134b0:	beq	134c8 <close@plt+0x2530>
   134b4:	mov	r0, r6
   134b8:	mov	r1, r5
   134bc:	mov	r2, r4
   134c0:	pop	{r4, r5, r6, r7, fp, lr}
   134c4:	b	134d0 <close@plt+0x2538>
   134c8:	mov	r0, #1
   134cc:	pop	{r4, r5, r6, r7, fp, pc}
   134d0:	push	{r4, r5, r6, sl, fp, lr}
   134d4:	add	fp, sp, #16
   134d8:	mov	r4, r2
   134dc:	mov	r6, r1
   134e0:	mov	r5, r0
   134e4:	mov	r0, r1
   134e8:	bl	141d0 <close@plt+0x3238>
   134ec:	ldrb	r1, [r5, #5]
   134f0:	cmp	r0, #0
   134f4:	andne	r1, r1, #223	; 0xdf
   134f8:	mov	r0, #0
   134fc:	cmp	r1, r6
   13500:	bne	13520 <close@plt+0x2588>
   13504:	cmp	r6, #0
   13508:	beq	1351c <close@plt+0x2584>
   1350c:	mov	r0, r5
   13510:	mov	r1, r4
   13514:	pop	{r4, r5, r6, sl, fp, lr}
   13518:	b	13524 <close@plt+0x258c>
   1351c:	mov	r0, #1
   13520:	pop	{r4, r5, r6, sl, fp, pc}
   13524:	push	{r4, r5, fp, lr}
   13528:	add	fp, sp, #8
   1352c:	mov	r5, r1
   13530:	mov	r4, r0
   13534:	mov	r0, r1
   13538:	bl	141d0 <close@plt+0x3238>
   1353c:	ldrb	r1, [r4, #6]
   13540:	cmp	r0, #0
   13544:	andne	r1, r1, #223	; 0xdf
   13548:	mov	r0, #0
   1354c:	cmp	r1, r5
   13550:	popne	{r4, r5, fp, pc}
   13554:	cmp	r5, #0
   13558:	beq	13568 <close@plt+0x25d0>
   1355c:	mov	r0, r4
   13560:	pop	{r4, r5, fp, lr}
   13564:	b	13570 <close@plt+0x25d8>
   13568:	mov	r0, #1
   1356c:	pop	{r4, r5, fp, pc}
   13570:	push	{r4, sl, fp, lr}
   13574:	add	fp, sp, #8
   13578:	mov	r4, r0
   1357c:	mov	r0, #0
   13580:	bl	141d0 <close@plt+0x3238>
   13584:	ldrb	r1, [r4, #7]
   13588:	cmp	r0, #0
   1358c:	beq	135a0 <close@plt+0x2608>
   13590:	tst	r1, #223	; 0xdf
   13594:	bne	135a8 <close@plt+0x2610>
   13598:	mov	r0, #1
   1359c:	pop	{r4, sl, fp, pc}
   135a0:	cmp	r1, #0
   135a4:	beq	13598 <close@plt+0x2600>
   135a8:	mov	r0, #0
   135ac:	pop	{r4, sl, fp, pc}
   135b0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   135b4:	add	fp, sp, #24
   135b8:	sub	sp, sp, #32
   135bc:	mov	r4, r2
   135c0:	mov	r8, r0
   135c4:	ldr	r6, [fp, #12]
   135c8:	ldr	r7, [fp, #8]
   135cc:	cmp	r1, #0
   135d0:	beq	135f8 <close@plt+0x2660>
   135d4:	mov	r5, r1
   135d8:	str	r4, [sp]
   135dc:	str	r3, [sp, #4]
   135e0:	movw	r2, #19708	; 0x4cfc
   135e4:	movt	r2, #1
   135e8:	mov	r0, r8
   135ec:	mov	r1, #1
   135f0:	mov	r3, r5
   135f4:	b	13610 <close@plt+0x2678>
   135f8:	str	r3, [sp]
   135fc:	movw	r2, #19720	; 0x4d08
   13600:	movt	r2, #1
   13604:	mov	r0, r8
   13608:	mov	r1, #1
   1360c:	mov	r3, r4
   13610:	bl	10f08 <__fprintf_chk@plt>
   13614:	movw	r1, #19727	; 0x4d0f
   13618:	movt	r1, #1
   1361c:	mov	r0, #0
   13620:	mov	r2, #5
   13624:	bl	10dc4 <dcgettext@plt>
   13628:	mov	r3, r0
   1362c:	movw	r0, #2022	; 0x7e6
   13630:	str	r0, [sp]
   13634:	movw	r2, #20445	; 0x4fdd
   13638:	movt	r2, #1
   1363c:	mov	r0, r8
   13640:	mov	r1, #1
   13644:	bl	10f08 <__fprintf_chk@plt>
   13648:	movw	r4, #18472	; 0x4828
   1364c:	movt	r4, #1
   13650:	mov	r0, r4
   13654:	mov	r1, r8
   13658:	bl	10d64 <fputs_unlocked@plt>
   1365c:	movw	r1, #19731	; 0x4d13
   13660:	movt	r1, #1
   13664:	mov	r0, #0
   13668:	mov	r2, #5
   1366c:	bl	10dc4 <dcgettext@plt>
   13670:	mov	r2, r0
   13674:	movw	r3, #19902	; 0x4dbe
   13678:	movt	r3, #1
   1367c:	mov	r0, r8
   13680:	mov	r1, #1
   13684:	bl	10f08 <__fprintf_chk@plt>
   13688:	mov	r0, r4
   1368c:	mov	r1, r8
   13690:	bl	10d64 <fputs_unlocked@plt>
   13694:	cmp	r6, #9
   13698:	bhi	136d4 <close@plt+0x273c>
   1369c:	add	r0, pc, #0
   136a0:	ldr	pc, [r0, r6, lsl #2]
   136a4:	andeq	r3, r1, ip, asr #13
   136a8:	andeq	r3, r1, r0, ror #13
   136ac:	andeq	r3, r1, r0, lsl r7
   136b0:	andeq	r3, r1, r8, lsr r7
   136b4:	andeq	r3, r1, r0, ror #14
   136b8:	andeq	r3, r1, r8, lsl #15
   136bc:			; <UNDEFINED> instruction: 0x000137b0
   136c0:	andeq	r3, r1, r8, ror #15
   136c4:	andeq	r3, r1, r8, lsl #17
   136c8:	andeq	r3, r1, r0, lsr r8
   136cc:	sub	sp, fp, #24
   136d0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   136d4:	movw	r1, #20255	; 0x4f1f
   136d8:	movt	r1, #1
   136dc:	b	13838 <close@plt+0x28a0>
   136e0:	movw	r1, #19936	; 0x4de0
   136e4:	movt	r1, #1
   136e8:	mov	r0, #0
   136ec:	mov	r2, #5
   136f0:	bl	10dc4 <dcgettext@plt>
   136f4:	mov	r2, r0
   136f8:	ldr	r3, [r7]
   136fc:	mov	r0, r8
   13700:	mov	r1, #1
   13704:	sub	sp, fp, #24
   13708:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1370c:	b	10f08 <__fprintf_chk@plt>
   13710:	movw	r1, #19952	; 0x4df0
   13714:	movt	r1, #1
   13718:	mov	r0, #0
   1371c:	mov	r2, #5
   13720:	bl	10dc4 <dcgettext@plt>
   13724:	mov	r2, r0
   13728:	ldr	r3, [r7]
   1372c:	ldr	r0, [r7, #4]
   13730:	str	r0, [sp]
   13734:	b	13824 <close@plt+0x288c>
   13738:	movw	r1, #19975	; 0x4e07
   1373c:	movt	r1, #1
   13740:	mov	r0, #0
   13744:	mov	r2, #5
   13748:	bl	10dc4 <dcgettext@plt>
   1374c:	mov	r2, r0
   13750:	ldr	r3, [r7]
   13754:	ldmib	r7, {r0, r1}
   13758:	stm	sp, {r0, r1}
   1375c:	b	13824 <close@plt+0x288c>
   13760:	movw	r1, #20003	; 0x4e23
   13764:	movt	r1, #1
   13768:	mov	r0, #0
   1376c:	mov	r2, #5
   13770:	bl	10dc4 <dcgettext@plt>
   13774:	mov	r2, r0
   13778:	ldr	r3, [r7]
   1377c:	ldmib	r7, {r0, r1, r7}
   13780:	stm	sp, {r0, r1, r7}
   13784:	b	13824 <close@plt+0x288c>
   13788:	movw	r1, #20035	; 0x4e43
   1378c:	movt	r1, #1
   13790:	mov	r0, #0
   13794:	mov	r2, #5
   13798:	bl	10dc4 <dcgettext@plt>
   1379c:	mov	r2, r0
   137a0:	ldr	r3, [r7]
   137a4:	ldmib	r7, {r0, r1, r6, r7}
   137a8:	stm	sp, {r0, r1, r6, r7}
   137ac:	b	13824 <close@plt+0x288c>
   137b0:	movw	r1, #20071	; 0x4e67
   137b4:	movt	r1, #1
   137b8:	mov	r0, #0
   137bc:	mov	r2, #5
   137c0:	bl	10dc4 <dcgettext@plt>
   137c4:	mov	r2, r0
   137c8:	ldr	r3, [r7]
   137cc:	ldmib	r7, {r0, r1, r6}
   137d0:	ldr	r5, [r7, #16]
   137d4:	ldr	r7, [r7, #20]
   137d8:	stm	sp, {r0, r1, r6}
   137dc:	str	r5, [sp, #12]
   137e0:	str	r7, [sp, #16]
   137e4:	b	13824 <close@plt+0x288c>
   137e8:	movw	r1, #20111	; 0x4e8f
   137ec:	movt	r1, #1
   137f0:	mov	r0, #0
   137f4:	mov	r2, #5
   137f8:	bl	10dc4 <dcgettext@plt>
   137fc:	mov	r2, r0
   13800:	ldr	r3, [r7]
   13804:	ldmib	r7, {r0, r1, r6}
   13808:	ldr	r5, [r7, #16]
   1380c:	ldr	r4, [r7, #20]
   13810:	ldr	r7, [r7, #24]
   13814:	stm	sp, {r0, r1, r6}
   13818:	str	r5, [sp, #12]
   1381c:	str	r4, [sp, #16]
   13820:	str	r7, [sp, #20]
   13824:	mov	r0, r8
   13828:	mov	r1, #1
   1382c:	b	138d8 <close@plt+0x2940>
   13830:	movw	r1, #20203	; 0x4eeb
   13834:	movt	r1, #1
   13838:	mov	r0, #0
   1383c:	mov	r2, #5
   13840:	bl	10dc4 <dcgettext@plt>
   13844:	mov	ip, r0
   13848:	ldr	r3, [r7]
   1384c:	ldr	r0, [r7, #4]
   13850:	ldr	r1, [r7, #8]
   13854:	ldr	r6, [r7, #12]
   13858:	ldr	r5, [r7, #16]
   1385c:	ldr	r4, [r7, #20]
   13860:	ldr	r2, [r7, #24]
   13864:	ldr	lr, [r7, #28]
   13868:	ldr	r7, [r7, #32]
   1386c:	stm	sp, {r0, r1, r6}
   13870:	str	r5, [sp, #12]
   13874:	str	r4, [sp, #16]
   13878:	str	r2, [sp, #20]
   1387c:	str	lr, [sp, #24]
   13880:	str	r7, [sp, #28]
   13884:	b	138cc <close@plt+0x2934>
   13888:	movw	r1, #20155	; 0x4ebb
   1388c:	movt	r1, #1
   13890:	mov	r0, #0
   13894:	mov	r2, #5
   13898:	bl	10dc4 <dcgettext@plt>
   1389c:	mov	ip, r0
   138a0:	ldr	r3, [r7]
   138a4:	ldmib	r7, {r0, r1, r6}
   138a8:	ldr	r5, [r7, #16]
   138ac:	ldr	r4, [r7, #20]
   138b0:	ldr	r2, [r7, #24]
   138b4:	ldr	r7, [r7, #28]
   138b8:	stm	sp, {r0, r1, r6}
   138bc:	str	r5, [sp, #12]
   138c0:	str	r4, [sp, #16]
   138c4:	str	r2, [sp, #20]
   138c8:	str	r7, [sp, #24]
   138cc:	mov	r0, r8
   138d0:	mov	r1, #1
   138d4:	mov	r2, ip
   138d8:	bl	10f08 <__fprintf_chk@plt>
   138dc:	sub	sp, fp, #24
   138e0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   138e4:	push	{r4, sl, fp, lr}
   138e8:	add	fp, sp, #8
   138ec:	sub	sp, sp, #8
   138f0:	mov	lr, #0
   138f4:	ldr	ip, [fp, #8]
   138f8:	ldr	r4, [ip, lr, lsl #2]
   138fc:	add	lr, lr, #1
   13900:	cmp	r4, #0
   13904:	bne	138f8 <close@plt+0x2960>
   13908:	sub	r4, lr, #1
   1390c:	str	ip, [sp]
   13910:	str	r4, [sp, #4]
   13914:	bl	135b0 <close@plt+0x2618>
   13918:	sub	sp, fp, #8
   1391c:	pop	{r4, sl, fp, pc}
   13920:	push	{r4, r5, fp, lr}
   13924:	add	fp, sp, #8
   13928:	sub	sp, sp, #48	; 0x30
   1392c:	mov	ip, #0
   13930:	ldr	r4, [fp, #8]
   13934:	add	lr, sp, #8
   13938:	ldr	r5, [r4]
   1393c:	str	r5, [lr, ip, lsl #2]
   13940:	cmp	r5, #0
   13944:	beq	1395c <close@plt+0x29c4>
   13948:	add	ip, ip, #1
   1394c:	add	r4, r4, #4
   13950:	cmp	ip, #10
   13954:	bne	13938 <close@plt+0x29a0>
   13958:	mov	ip, #10
   1395c:	str	lr, [sp]
   13960:	str	ip, [sp, #4]
   13964:	bl	135b0 <close@plt+0x2618>
   13968:	sub	sp, fp, #8
   1396c:	pop	{r4, r5, fp, pc}
   13970:	push	{fp, lr}
   13974:	mov	fp, sp
   13978:	sub	sp, sp, #8
   1397c:	add	ip, fp, #8
   13980:	str	ip, [sp, #4]
   13984:	str	ip, [sp]
   13988:	bl	13920 <close@plt+0x2988>
   1398c:	mov	sp, fp
   13990:	pop	{fp, pc}
   13994:	push	{fp, lr}
   13998:	mov	fp, sp
   1399c:	movw	r0, #24892	; 0x613c
   139a0:	movt	r0, #2
   139a4:	ldr	r1, [r0]
   139a8:	movw	r0, #18472	; 0x4828
   139ac:	movt	r0, #1
   139b0:	bl	10d64 <fputs_unlocked@plt>
   139b4:	movw	r1, #20315	; 0x4f5b
   139b8:	movt	r1, #1
   139bc:	mov	r0, #0
   139c0:	mov	r2, #5
   139c4:	bl	10dc4 <dcgettext@plt>
   139c8:	mov	r1, r0
   139cc:	movw	r2, #20335	; 0x4f6f
   139d0:	movt	r2, #1
   139d4:	mov	r0, #1
   139d8:	bl	10ef0 <__printf_chk@plt>
   139dc:	movw	r1, #20357	; 0x4f85
   139e0:	movt	r1, #1
   139e4:	mov	r0, #0
   139e8:	mov	r2, #5
   139ec:	bl	10dc4 <dcgettext@plt>
   139f0:	mov	r1, r0
   139f4:	movw	r2, #18744	; 0x4938
   139f8:	movt	r2, #1
   139fc:	movw	r3, #18987	; 0x4a2b
   13a00:	movt	r3, #1
   13a04:	mov	r0, #1
   13a08:	bl	10ef0 <__printf_chk@plt>
   13a0c:	movw	r1, #20377	; 0x4f99
   13a10:	movt	r1, #1
   13a14:	mov	r0, #0
   13a18:	mov	r2, #5
   13a1c:	bl	10dc4 <dcgettext@plt>
   13a20:	mov	r1, r0
   13a24:	movw	r2, #20416	; 0x4fc0
   13a28:	movt	r2, #1
   13a2c:	mov	r0, #1
   13a30:	pop	{fp, lr}
   13a34:	b	10ef0 <__printf_chk@plt>
   13a38:	b	13a3c <close@plt+0x2aa4>
   13a3c:	push	{r4, r5, r6, sl, fp, lr}
   13a40:	add	fp, sp, #16
   13a44:	mov	r4, r2
   13a48:	mov	r5, r1
   13a4c:	mov	r6, r0
   13a50:	bl	14588 <close@plt+0x35f0>
   13a54:	cmp	r0, #0
   13a58:	popne	{r4, r5, r6, sl, fp, pc}
   13a5c:	cmp	r6, #0
   13a60:	beq	13a74 <close@plt+0x2adc>
   13a64:	cmp	r5, #0
   13a68:	cmpne	r4, #0
   13a6c:	bne	13a74 <close@plt+0x2adc>
   13a70:	pop	{r4, r5, r6, sl, fp, pc}
   13a74:	bl	13e00 <close@plt+0x2e68>
   13a78:	push	{fp, lr}
   13a7c:	mov	fp, sp
   13a80:	bl	13e98 <close@plt+0x2f00>
   13a84:	pop	{fp, lr}
   13a88:	b	13a8c <close@plt+0x2af4>
   13a8c:	cmp	r0, #0
   13a90:	bxne	lr
   13a94:	push	{fp, lr}
   13a98:	mov	fp, sp
   13a9c:	bl	13e00 <close@plt+0x2e68>
   13aa0:	push	{fp, lr}
   13aa4:	mov	fp, sp
   13aa8:	bl	144b8 <close@plt+0x3520>
   13aac:	pop	{fp, lr}
   13ab0:	b	13a8c <close@plt+0x2af4>
   13ab4:	b	13a78 <close@plt+0x2ae0>
   13ab8:	push	{r4, r5, fp, lr}
   13abc:	add	fp, sp, #8
   13ac0:	mov	r4, r1
   13ac4:	mov	r5, r0
   13ac8:	bl	13ec8 <close@plt+0x2f30>
   13acc:	cmp	r0, #0
   13ad0:	popne	{r4, r5, fp, pc}
   13ad4:	cmp	r5, #0
   13ad8:	beq	13ae8 <close@plt+0x2b50>
   13adc:	cmp	r4, #0
   13ae0:	bne	13ae8 <close@plt+0x2b50>
   13ae4:	pop	{r4, r5, fp, pc}
   13ae8:	bl	13e00 <close@plt+0x2e68>
   13aec:	push	{fp, lr}
   13af0:	mov	fp, sp
   13af4:	bl	144bc <close@plt+0x3524>
   13af8:	pop	{fp, lr}
   13afc:	b	13a8c <close@plt+0x2af4>
   13b00:	push	{fp, lr}
   13b04:	mov	fp, sp
   13b08:	bl	144cc <close@plt+0x3534>
   13b0c:	pop	{fp, lr}
   13b10:	b	13a8c <close@plt+0x2af4>
   13b14:	mov	r2, r1
   13b18:	mov	r1, r0
   13b1c:	mov	r0, #0
   13b20:	b	13a3c <close@plt+0x2aa4>
   13b24:	mov	r2, r1
   13b28:	mov	r1, r0
   13b2c:	mov	r0, #0
   13b30:	b	13b00 <close@plt+0x2b68>
   13b34:	mov	r2, #1
   13b38:	b	13b3c <close@plt+0x2ba4>
   13b3c:	push	{r4, r5, fp, lr}
   13b40:	add	fp, sp, #8
   13b44:	mov	r4, r1
   13b48:	ldr	r5, [r1]
   13b4c:	cmp	r0, #0
   13b50:	beq	13b68 <close@plt+0x2bd0>
   13b54:	mov	r1, #1
   13b58:	add	r1, r1, r5, lsr #1
   13b5c:	adds	r5, r5, r1
   13b60:	bcc	13b80 <close@plt+0x2be8>
   13b64:	bl	13e00 <close@plt+0x2e68>
   13b68:	cmp	r5, #0
   13b6c:	bne	13b80 <close@plt+0x2be8>
   13b70:	mov	r1, #64	; 0x40
   13b74:	udiv	r5, r1, r2
   13b78:	cmp	r2, #64	; 0x40
   13b7c:	addhi	r5, r5, #1
   13b80:	mov	r1, r5
   13b84:	bl	13a3c <close@plt+0x2aa4>
   13b88:	str	r5, [r4]
   13b8c:	pop	{r4, r5, fp, pc}
   13b90:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13b94:	add	fp, sp, #24
   13b98:	mov	r8, r1
   13b9c:	ldr	r6, [r1]
   13ba0:	add	r1, r6, r6, asr #1
   13ba4:	cmp	r1, r6
   13ba8:	mvnvs	r1, #-2147483648	; 0x80000000
   13bac:	cmp	r1, r3
   13bb0:	mov	r5, r1
   13bb4:	movgt	r5, r3
   13bb8:	cmn	r3, #1
   13bbc:	movle	r5, r1
   13bc0:	ldr	r4, [fp, #8]
   13bc4:	cmn	r4, #1
   13bc8:	ble	13bf0 <close@plt+0x2c58>
   13bcc:	cmp	r4, #0
   13bd0:	beq	13c44 <close@plt+0x2cac>
   13bd4:	cmn	r5, #1
   13bd8:	ble	13c18 <close@plt+0x2c80>
   13bdc:	mvn	r7, #-2147483648	; 0x80000000
   13be0:	udiv	r1, r7, r4
   13be4:	cmp	r1, r5
   13be8:	bge	13c44 <close@plt+0x2cac>
   13bec:	b	13c54 <close@plt+0x2cbc>
   13bf0:	cmn	r5, #1
   13bf4:	ble	13c34 <close@plt+0x2c9c>
   13bf8:	cmn	r4, #1
   13bfc:	beq	13c44 <close@plt+0x2cac>
   13c00:	mov	r1, #-2147483648	; 0x80000000
   13c04:	sdiv	r1, r1, r4
   13c08:	mvn	r7, #-2147483648	; 0x80000000
   13c0c:	cmp	r1, r5
   13c10:	bge	13c44 <close@plt+0x2cac>
   13c14:	b	13c54 <close@plt+0x2cbc>
   13c18:	beq	13c44 <close@plt+0x2cac>
   13c1c:	mov	r1, #-2147483648	; 0x80000000
   13c20:	sdiv	r1, r1, r5
   13c24:	mvn	r7, #-2147483648	; 0x80000000
   13c28:	cmp	r1, r4
   13c2c:	bge	13c44 <close@plt+0x2cac>
   13c30:	b	13c54 <close@plt+0x2cbc>
   13c34:	mvn	r7, #-2147483648	; 0x80000000
   13c38:	sdiv	r1, r7, r4
   13c3c:	cmp	r5, r1
   13c40:	blt	13c54 <close@plt+0x2cbc>
   13c44:	mul	r1, r5, r4
   13c48:	mov	r7, #64	; 0x40
   13c4c:	cmp	r1, #63	; 0x3f
   13c50:	bgt	13c5c <close@plt+0x2cc4>
   13c54:	sdiv	r5, r7, r4
   13c58:	mul	r1, r5, r4
   13c5c:	cmp	r0, #0
   13c60:	moveq	r7, #0
   13c64:	streq	r7, [r8]
   13c68:	sub	r7, r5, r6
   13c6c:	cmp	r7, r2
   13c70:	bge	13d1c <close@plt+0x2d84>
   13c74:	add	r5, r6, r2
   13c78:	mov	r1, #0
   13c7c:	cmp	r5, r3
   13c80:	mov	r2, #0
   13c84:	movwgt	r2, #1
   13c88:	cmn	r3, #1
   13c8c:	movwgt	r1, #1
   13c90:	cmp	r5, r6
   13c94:	bvs	13d04 <close@plt+0x2d6c>
   13c98:	ands	r1, r1, r2
   13c9c:	bne	13d04 <close@plt+0x2d6c>
   13ca0:	cmn	r4, #1
   13ca4:	ble	13ccc <close@plt+0x2d34>
   13ca8:	cmp	r4, #0
   13cac:	beq	13d18 <close@plt+0x2d80>
   13cb0:	cmn	r5, #1
   13cb4:	ble	13cf0 <close@plt+0x2d58>
   13cb8:	mvn	r1, #-2147483648	; 0x80000000
   13cbc:	udiv	r1, r1, r4
   13cc0:	cmp	r1, r5
   13cc4:	bge	13d18 <close@plt+0x2d80>
   13cc8:	b	13d04 <close@plt+0x2d6c>
   13ccc:	cmn	r5, #1
   13cd0:	ble	13d08 <close@plt+0x2d70>
   13cd4:	cmn	r4, #1
   13cd8:	beq	13d18 <close@plt+0x2d80>
   13cdc:	mov	r1, #-2147483648	; 0x80000000
   13ce0:	sdiv	r1, r1, r4
   13ce4:	cmp	r1, r5
   13ce8:	bge	13d18 <close@plt+0x2d80>
   13cec:	b	13d04 <close@plt+0x2d6c>
   13cf0:	beq	13d18 <close@plt+0x2d80>
   13cf4:	mov	r1, #-2147483648	; 0x80000000
   13cf8:	sdiv	r1, r1, r5
   13cfc:	cmp	r1, r4
   13d00:	bge	13d18 <close@plt+0x2d80>
   13d04:	bl	13e00 <close@plt+0x2e68>
   13d08:	mvn	r1, #-2147483648	; 0x80000000
   13d0c:	sdiv	r1, r1, r4
   13d10:	cmp	r5, r1
   13d14:	blt	13d04 <close@plt+0x2d6c>
   13d18:	mul	r1, r5, r4
   13d1c:	bl	13ab8 <close@plt+0x2b20>
   13d20:	str	r5, [r8]
   13d24:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13d28:	mov	r1, #1
   13d2c:	b	13d30 <close@plt+0x2d98>
   13d30:	push	{fp, lr}
   13d34:	mov	fp, sp
   13d38:	bl	13e44 <close@plt+0x2eac>
   13d3c:	pop	{fp, lr}
   13d40:	b	13a8c <close@plt+0x2af4>
   13d44:	mov	r1, #1
   13d48:	b	13d4c <close@plt+0x2db4>
   13d4c:	push	{fp, lr}
   13d50:	mov	fp, sp
   13d54:	bl	144c8 <close@plt+0x3530>
   13d58:	pop	{fp, lr}
   13d5c:	b	13a8c <close@plt+0x2af4>
   13d60:	push	{r4, r5, fp, lr}
   13d64:	add	fp, sp, #8
   13d68:	mov	r4, r1
   13d6c:	mov	r5, r0
   13d70:	mov	r0, r1
   13d74:	bl	13a78 <close@plt+0x2ae0>
   13d78:	mov	r1, r5
   13d7c:	mov	r2, r4
   13d80:	pop	{r4, r5, fp, lr}
   13d84:	b	10dac <memcpy@plt>
   13d88:	push	{r4, r5, fp, lr}
   13d8c:	add	fp, sp, #8
   13d90:	mov	r4, r1
   13d94:	mov	r5, r0
   13d98:	mov	r0, r1
   13d9c:	bl	13aa0 <close@plt+0x2b08>
   13da0:	mov	r1, r5
   13da4:	mov	r2, r4
   13da8:	pop	{r4, r5, fp, lr}
   13dac:	b	10dac <memcpy@plt>
   13db0:	push	{r4, r5, fp, lr}
   13db4:	add	fp, sp, #8
   13db8:	mov	r4, r1
   13dbc:	mov	r5, r0
   13dc0:	add	r0, r1, #1
   13dc4:	bl	13aa0 <close@plt+0x2b08>
   13dc8:	mov	r1, #0
   13dcc:	strb	r1, [r0, r4]
   13dd0:	mov	r1, r5
   13dd4:	mov	r2, r4
   13dd8:	pop	{r4, r5, fp, lr}
   13ddc:	b	10dac <memcpy@plt>
   13de0:	push	{r4, sl, fp, lr}
   13de4:	add	fp, sp, #8
   13de8:	mov	r4, r0
   13dec:	bl	10ec0 <strlen@plt>
   13df0:	add	r1, r0, #1
   13df4:	mov	r0, r4
   13df8:	pop	{r4, sl, fp, lr}
   13dfc:	b	13d60 <close@plt+0x2dc8>
   13e00:	push	{fp, lr}
   13e04:	mov	fp, sp
   13e08:	movw	r0, #24804	; 0x60e4
   13e0c:	movt	r0, #2
   13e10:	ldr	r4, [r0]
   13e14:	movw	r1, #20492	; 0x500c
   13e18:	movt	r1, #1
   13e1c:	mov	r0, #0
   13e20:	mov	r2, #5
   13e24:	bl	10dc4 <dcgettext@plt>
   13e28:	mov	r3, r0
   13e2c:	movw	r2, #19455	; 0x4bff
   13e30:	movt	r2, #1
   13e34:	mov	r0, r4
   13e38:	mov	r1, #0
   13e3c:	bl	10e48 <error@plt>
   13e40:	bl	10f8c <abort@plt>
   13e44:	clz	r2, r1
   13e48:	lsr	r2, r2, #5
   13e4c:	clz	r3, r0
   13e50:	lsr	r3, r3, #5
   13e54:	orrs	r2, r3, r2
   13e58:	movwne	r1, #1
   13e5c:	movwne	r0, #1
   13e60:	cmp	r1, #0
   13e64:	beq	13e94 <close@plt+0x2efc>
   13e68:	mvn	r2, #-2147483648	; 0x80000000
   13e6c:	udiv	r2, r2, r1
   13e70:	cmp	r2, r0
   13e74:	bcs	13e94 <close@plt+0x2efc>
   13e78:	push	{fp, lr}
   13e7c:	mov	fp, sp
   13e80:	bl	10ecc <__errno_location@plt>
   13e84:	mov	r1, #12
   13e88:	str	r1, [r0]
   13e8c:	mov	r0, #0
   13e90:	pop	{fp, pc}
   13e94:	b	10d58 <calloc@plt>
   13e98:	cmp	r0, #0
   13e9c:	movweq	r0, #1
   13ea0:	cmn	r0, #1
   13ea4:	ble	13eac <close@plt+0x2f14>
   13ea8:	b	10e60 <malloc@plt>
   13eac:	push	{fp, lr}
   13eb0:	mov	fp, sp
   13eb4:	bl	10ecc <__errno_location@plt>
   13eb8:	mov	r1, #12
   13ebc:	str	r1, [r0]
   13ec0:	mov	r0, #0
   13ec4:	pop	{fp, pc}
   13ec8:	push	{fp, lr}
   13ecc:	mov	fp, sp
   13ed0:	cmp	r0, #0
   13ed4:	beq	13ef0 <close@plt+0x2f58>
   13ed8:	cmp	r1, #0
   13edc:	beq	13efc <close@plt+0x2f64>
   13ee0:	cmn	r1, #1
   13ee4:	ble	13f08 <close@plt+0x2f70>
   13ee8:	pop	{fp, lr}
   13eec:	b	10ddc <realloc@plt>
   13ef0:	mov	r0, r1
   13ef4:	pop	{fp, lr}
   13ef8:	b	13e98 <close@plt+0x2f00>
   13efc:	bl	143cc <close@plt+0x3434>
   13f00:	mov	r0, #0
   13f04:	pop	{fp, pc}
   13f08:	bl	10ecc <__errno_location@plt>
   13f0c:	mov	r1, #12
   13f10:	str	r1, [r0]
   13f14:	mov	r0, #0
   13f18:	pop	{fp, pc}
   13f1c:	mov	r1, r0
   13f20:	sub	r2, r0, #65	; 0x41
   13f24:	mov	r0, #1
   13f28:	cmp	r2, #26
   13f2c:	subcs	r2, r1, #97	; 0x61
   13f30:	cmpcs	r2, #26
   13f34:	bcs	13f3c <close@plt+0x2fa4>
   13f38:	bx	lr
   13f3c:	sub	r1, r1, #48	; 0x30
   13f40:	cmp	r1, #10
   13f44:	movcs	r0, #0
   13f48:	bx	lr
   13f4c:	mov	r1, r0
   13f50:	sub	r2, r0, #65	; 0x41
   13f54:	mov	r0, #1
   13f58:	cmp	r2, #26
   13f5c:	subcs	r1, r1, #97	; 0x61
   13f60:	cmpcs	r1, #26
   13f64:	movcs	r0, #0
   13f68:	bx	lr
   13f6c:	mov	r1, #0
   13f70:	cmp	r0, #128	; 0x80
   13f74:	movwcc	r1, #1
   13f78:	mov	r0, r1
   13f7c:	bx	lr
   13f80:	sub	r1, r0, #9
   13f84:	clz	r1, r1
   13f88:	lsr	r1, r1, #5
   13f8c:	sub	r0, r0, #32
   13f90:	clz	r0, r0
   13f94:	lsr	r0, r0, #5
   13f98:	orr	r0, r0, r1
   13f9c:	bx	lr
   13fa0:	mov	r1, r0
   13fa4:	mov	r0, #1
   13fa8:	cmp	r1, #32
   13fac:	bxcc	lr
   13fb0:	cmp	r1, #127	; 0x7f
   13fb4:	movne	r0, #0
   13fb8:	bx	lr
   13fbc:	sub	r1, r0, #48	; 0x30
   13fc0:	mov	r0, #0
   13fc4:	cmp	r1, #10
   13fc8:	movwcc	r0, #1
   13fcc:	bx	lr
   13fd0:	sub	r1, r0, #33	; 0x21
   13fd4:	mov	r0, #0
   13fd8:	cmp	r1, #94	; 0x5e
   13fdc:	movwcc	r0, #1
   13fe0:	bx	lr
   13fe4:	sub	r1, r0, #97	; 0x61
   13fe8:	mov	r0, #0
   13fec:	cmp	r1, #26
   13ff0:	movwcc	r0, #1
   13ff4:	bx	lr
   13ff8:	sub	r1, r0, #32
   13ffc:	mov	r0, #0
   14000:	cmp	r1, #95	; 0x5f
   14004:	movwcc	r0, #1
   14008:	bx	lr
   1400c:	sub	r1, r0, #33	; 0x21
   14010:	cmp	r1, #93	; 0x5d
   14014:	bhi	141a0 <close@plt+0x3208>
   14018:	mov	r0, #1
   1401c:	add	r2, pc, #0
   14020:	ldr	pc, [r2, r1, lsl #2]
   14024:	muleq	r1, ip, r1
   14028:	muleq	r1, ip, r1
   1402c:	muleq	r1, ip, r1
   14030:	muleq	r1, ip, r1
   14034:	muleq	r1, ip, r1
   14038:	muleq	r1, ip, r1
   1403c:	muleq	r1, ip, r1
   14040:	muleq	r1, ip, r1
   14044:	muleq	r1, ip, r1
   14048:	muleq	r1, ip, r1
   1404c:	muleq	r1, ip, r1
   14050:	muleq	r1, ip, r1
   14054:	muleq	r1, ip, r1
   14058:	muleq	r1, ip, r1
   1405c:	muleq	r1, ip, r1
   14060:	andeq	r4, r1, r0, lsr #3
   14064:	andeq	r4, r1, r0, lsr #3
   14068:	andeq	r4, r1, r0, lsr #3
   1406c:	andeq	r4, r1, r0, lsr #3
   14070:	andeq	r4, r1, r0, lsr #3
   14074:	andeq	r4, r1, r0, lsr #3
   14078:	andeq	r4, r1, r0, lsr #3
   1407c:	andeq	r4, r1, r0, lsr #3
   14080:	andeq	r4, r1, r0, lsr #3
   14084:	andeq	r4, r1, r0, lsr #3
   14088:	muleq	r1, ip, r1
   1408c:	muleq	r1, ip, r1
   14090:	muleq	r1, ip, r1
   14094:	muleq	r1, ip, r1
   14098:	muleq	r1, ip, r1
   1409c:	muleq	r1, ip, r1
   140a0:	muleq	r1, ip, r1
   140a4:	andeq	r4, r1, r0, lsr #3
   140a8:	andeq	r4, r1, r0, lsr #3
   140ac:	andeq	r4, r1, r0, lsr #3
   140b0:	andeq	r4, r1, r0, lsr #3
   140b4:	andeq	r4, r1, r0, lsr #3
   140b8:	andeq	r4, r1, r0, lsr #3
   140bc:	andeq	r4, r1, r0, lsr #3
   140c0:	andeq	r4, r1, r0, lsr #3
   140c4:	andeq	r4, r1, r0, lsr #3
   140c8:	andeq	r4, r1, r0, lsr #3
   140cc:	andeq	r4, r1, r0, lsr #3
   140d0:	andeq	r4, r1, r0, lsr #3
   140d4:	andeq	r4, r1, r0, lsr #3
   140d8:	andeq	r4, r1, r0, lsr #3
   140dc:	andeq	r4, r1, r0, lsr #3
   140e0:	andeq	r4, r1, r0, lsr #3
   140e4:	andeq	r4, r1, r0, lsr #3
   140e8:	andeq	r4, r1, r0, lsr #3
   140ec:	andeq	r4, r1, r0, lsr #3
   140f0:	andeq	r4, r1, r0, lsr #3
   140f4:	andeq	r4, r1, r0, lsr #3
   140f8:	andeq	r4, r1, r0, lsr #3
   140fc:	andeq	r4, r1, r0, lsr #3
   14100:	andeq	r4, r1, r0, lsr #3
   14104:	andeq	r4, r1, r0, lsr #3
   14108:	andeq	r4, r1, r0, lsr #3
   1410c:	muleq	r1, ip, r1
   14110:	muleq	r1, ip, r1
   14114:	muleq	r1, ip, r1
   14118:	muleq	r1, ip, r1
   1411c:	muleq	r1, ip, r1
   14120:	muleq	r1, ip, r1
   14124:	andeq	r4, r1, r0, lsr #3
   14128:	andeq	r4, r1, r0, lsr #3
   1412c:	andeq	r4, r1, r0, lsr #3
   14130:	andeq	r4, r1, r0, lsr #3
   14134:	andeq	r4, r1, r0, lsr #3
   14138:	andeq	r4, r1, r0, lsr #3
   1413c:	andeq	r4, r1, r0, lsr #3
   14140:	andeq	r4, r1, r0, lsr #3
   14144:	andeq	r4, r1, r0, lsr #3
   14148:	andeq	r4, r1, r0, lsr #3
   1414c:	andeq	r4, r1, r0, lsr #3
   14150:	andeq	r4, r1, r0, lsr #3
   14154:	andeq	r4, r1, r0, lsr #3
   14158:	andeq	r4, r1, r0, lsr #3
   1415c:	andeq	r4, r1, r0, lsr #3
   14160:	andeq	r4, r1, r0, lsr #3
   14164:	andeq	r4, r1, r0, lsr #3
   14168:	andeq	r4, r1, r0, lsr #3
   1416c:	andeq	r4, r1, r0, lsr #3
   14170:	andeq	r4, r1, r0, lsr #3
   14174:	andeq	r4, r1, r0, lsr #3
   14178:	andeq	r4, r1, r0, lsr #3
   1417c:	andeq	r4, r1, r0, lsr #3
   14180:	andeq	r4, r1, r0, lsr #3
   14184:	andeq	r4, r1, r0, lsr #3
   14188:	andeq	r4, r1, r0, lsr #3
   1418c:	muleq	r1, ip, r1
   14190:	muleq	r1, ip, r1
   14194:	muleq	r1, ip, r1
   14198:	muleq	r1, ip, r1
   1419c:	bx	lr
   141a0:	mov	r0, #0
   141a4:	bx	lr
   141a8:	sub	r0, r0, #9
   141ac:	cmp	r0, #23
   141b0:	movhi	r0, #0
   141b4:	bxhi	lr
   141b8:	bic	r0, r0, #-16777216	; 0xff000000
   141bc:	movw	r1, #31
   141c0:	movt	r1, #128	; 0x80
   141c4:	mov	r2, #1
   141c8:	and	r0, r2, r1, lsr r0
   141cc:	bx	lr
   141d0:	sub	r1, r0, #65	; 0x41
   141d4:	mov	r0, #0
   141d8:	cmp	r1, #26
   141dc:	movwcc	r0, #1
   141e0:	bx	lr
   141e4:	mov	r1, r0
   141e8:	sub	r2, r0, #48	; 0x30
   141ec:	mov	r0, #1
   141f0:	cmp	r2, #22
   141f4:	bhi	1420c <close@plt+0x3274>
   141f8:	mov	ip, #1
   141fc:	movw	r3, #1023	; 0x3ff
   14200:	movt	r3, #126	; 0x7e
   14204:	tst	r3, ip, lsl r2
   14208:	bxne	lr
   1420c:	sub	r1, r1, #97	; 0x61
   14210:	cmp	r1, #6
   14214:	movcs	r0, #0
   14218:	bxcs	lr
   1421c:	bx	lr
   14220:	sub	r1, r0, #65	; 0x41
   14224:	cmp	r1, #26
   14228:	addcc	r0, r0, #32
   1422c:	bx	lr
   14230:	sub	r1, r0, #97	; 0x61
   14234:	cmp	r1, #26
   14238:	subcc	r0, r0, #32
   1423c:	bx	lr
   14240:	push	{r4, r5, r6, sl, fp, lr}
   14244:	add	fp, sp, #16
   14248:	mov	r4, r0
   1424c:	bl	10e24 <__fpending@plt>
   14250:	mov	r5, r0
   14254:	mov	r0, r4
   14258:	bl	10e30 <ferror_unlocked@plt>
   1425c:	mov	r6, r0
   14260:	mov	r0, r4
   14264:	bl	142c4 <close@plt+0x332c>
   14268:	cmp	r6, #0
   1426c:	beq	14290 <close@plt+0x32f8>
   14270:	mvn	r4, #0
   14274:	cmp	r0, #0
   14278:	bne	142bc <close@plt+0x3324>
   1427c:	bl	10ecc <__errno_location@plt>
   14280:	mov	r1, #0
   14284:	str	r1, [r0]
   14288:	mov	r0, r4
   1428c:	pop	{r4, r5, r6, sl, fp, pc}
   14290:	cmp	r0, #0
   14294:	mov	r4, r0
   14298:	mvnne	r4, #0
   1429c:	cmp	r5, #0
   142a0:	bne	142bc <close@plt+0x3324>
   142a4:	cmp	r0, #0
   142a8:	beq	142bc <close@plt+0x3324>
   142ac:	bl	10ecc <__errno_location@plt>
   142b0:	ldr	r0, [r0]
   142b4:	subs	r4, r0, #9
   142b8:	mvnne	r4, #0
   142bc:	mov	r0, r4
   142c0:	pop	{r4, r5, r6, sl, fp, pc}
   142c4:	push	{r4, r5, fp, lr}
   142c8:	add	fp, sp, #8
   142cc:	sub	sp, sp, #8
   142d0:	mov	r4, r0
   142d4:	bl	10efc <fileno@plt>
   142d8:	cmn	r0, #1
   142dc:	ble	14354 <close@plt+0x33bc>
   142e0:	mov	r0, r4
   142e4:	bl	10e78 <__freading@plt>
   142e8:	cmp	r0, #0
   142ec:	beq	14318 <close@plt+0x3380>
   142f0:	mov	r0, r4
   142f4:	bl	10efc <fileno@plt>
   142f8:	mov	r1, #1
   142fc:	str	r1, [sp]
   14300:	mov	r2, #0
   14304:	mov	r3, #0
   14308:	bl	10e0c <lseek64@plt>
   1430c:	and	r0, r0, r1
   14310:	cmn	r0, #1
   14314:	beq	14354 <close@plt+0x33bc>
   14318:	mov	r0, r4
   1431c:	bl	14364 <close@plt+0x33cc>
   14320:	cmp	r0, #0
   14324:	beq	14354 <close@plt+0x33bc>
   14328:	bl	10ecc <__errno_location@plt>
   1432c:	ldr	r5, [r0]
   14330:	mov	r0, r4
   14334:	bl	10f14 <fclose@plt>
   14338:	cmp	r5, #0
   1433c:	beq	1434c <close@plt+0x33b4>
   14340:	bl	10ecc <__errno_location@plt>
   14344:	str	r5, [r0]
   14348:	mvn	r0, #0
   1434c:	sub	sp, fp, #8
   14350:	pop	{r4, r5, fp, pc}
   14354:	mov	r0, r4
   14358:	sub	sp, fp, #8
   1435c:	pop	{r4, r5, fp, lr}
   14360:	b	10f14 <fclose@plt>
   14364:	push	{r4, sl, fp, lr}
   14368:	add	fp, sp, #8
   1436c:	mov	r4, r0
   14370:	cmp	r0, #0
   14374:	beq	1438c <close@plt+0x33f4>
   14378:	mov	r0, r4
   1437c:	bl	10e78 <__freading@plt>
   14380:	cmp	r0, #0
   14384:	movne	r0, r4
   14388:	blne	14398 <close@plt+0x3400>
   1438c:	mov	r0, r4
   14390:	pop	{r4, sl, fp, lr}
   14394:	b	10d88 <fflush@plt>
   14398:	push	{fp, lr}
   1439c:	mov	fp, sp
   143a0:	sub	sp, sp, #8
   143a4:	ldrb	r1, [r0, #1]
   143a8:	tst	r1, #1
   143ac:	beq	143c4 <close@plt+0x342c>
   143b0:	mov	r1, #1
   143b4:	str	r1, [sp]
   143b8:	mov	r2, #0
   143bc:	mov	r3, #0
   143c0:	bl	143f4 <close@plt+0x345c>
   143c4:	mov	sp, fp
   143c8:	pop	{fp, pc}
   143cc:	push	{r4, r5, r6, sl, fp, lr}
   143d0:	add	fp, sp, #16
   143d4:	mov	r4, r0
   143d8:	bl	10ecc <__errno_location@plt>
   143dc:	mov	r5, r0
   143e0:	ldr	r6, [r0]
   143e4:	mov	r0, r4
   143e8:	bl	10d94 <free@plt>
   143ec:	str	r6, [r5]
   143f0:	pop	{r4, r5, r6, sl, fp, pc}
   143f4:	push	{r4, r5, r6, r7, fp, lr}
   143f8:	add	fp, sp, #16
   143fc:	sub	sp, sp, #8
   14400:	mov	r5, r3
   14404:	mov	r6, r2
   14408:	mov	r4, r0
   1440c:	ldr	r0, [r0, #4]
   14410:	ldr	r1, [r4, #8]
   14414:	cmp	r1, r0
   14418:	bne	14434 <close@plt+0x349c>
   1441c:	ldrd	r0, [r4, #16]
   14420:	cmp	r1, r0
   14424:	bne	14434 <close@plt+0x349c>
   14428:	ldr	r0, [r4, #36]	; 0x24
   1442c:	cmp	r0, #0
   14430:	beq	1444c <close@plt+0x34b4>
   14434:	mov	r0, r4
   14438:	mov	r2, r6
   1443c:	mov	r3, r5
   14440:	sub	sp, fp, #16
   14444:	pop	{r4, r5, r6, r7, fp, lr}
   14448:	b	10f20 <fseeko64@plt>
   1444c:	ldr	r7, [fp, #8]
   14450:	mov	r0, r4
   14454:	bl	10efc <fileno@plt>
   14458:	str	r7, [sp]
   1445c:	mov	r2, r6
   14460:	mov	r3, r5
   14464:	bl	10e0c <lseek64@plt>
   14468:	and	r2, r0, r1
   1446c:	cmn	r2, #1
   14470:	beq	14490 <close@plt+0x34f8>
   14474:	strd	r0, [r4, #80]	; 0x50
   14478:	ldr	r0, [r4]
   1447c:	bic	r0, r0, #16
   14480:	str	r0, [r4]
   14484:	mov	r0, #0
   14488:	sub	sp, fp, #16
   1448c:	pop	{r4, r5, r6, r7, fp, pc}
   14490:	mvn	r0, #0
   14494:	sub	sp, fp, #16
   14498:	pop	{r4, r5, r6, r7, fp, pc}
   1449c:	push	{fp, lr}
   144a0:	mov	fp, sp
   144a4:	bl	10ecc <__errno_location@plt>
   144a8:	mov	r1, #12
   144ac:	str	r1, [r0]
   144b0:	mov	r0, #0
   144b4:	pop	{fp, pc}
   144b8:	b	13e98 <close@plt+0x2f00>
   144bc:	cmp	r1, #0
   144c0:	orreq	r1, r1, #1
   144c4:	b	13ec8 <close@plt+0x2f30>
   144c8:	b	13e44 <close@plt+0x2eac>
   144cc:	clz	r3, r2
   144d0:	lsr	ip, r3, #5
   144d4:	clz	r3, r1
   144d8:	lsr	r3, r3, #5
   144dc:	orrs	r3, r3, ip
   144e0:	movwne	r1, #1
   144e4:	movwne	r2, #1
   144e8:	b	14588 <close@plt+0x35f0>
   144ec:	push	{fp, lr}
   144f0:	mov	fp, sp
   144f4:	mov	r0, #14
   144f8:	bl	10f50 <nl_langinfo@plt>
   144fc:	movw	r1, #18473	; 0x4829
   14500:	movt	r1, #1
   14504:	cmp	r0, #0
   14508:	movne	r1, r0
   1450c:	ldrb	r2, [r1]
   14510:	movw	r0, #20509	; 0x501d
   14514:	movt	r0, #1
   14518:	cmp	r2, #0
   1451c:	movne	r0, r1
   14520:	pop	{fp, pc}
   14524:	push	{r4, r5, r6, r7, fp, lr}
   14528:	add	fp, sp, #16
   1452c:	sub	sp, sp, #8
   14530:	mov	r7, r2
   14534:	mov	r4, r1
   14538:	add	r5, sp, #4
   1453c:	cmp	r0, #0
   14540:	movne	r5, r0
   14544:	mov	r0, r5
   14548:	bl	10e3c <mbrtowc@plt>
   1454c:	mov	r6, r0
   14550:	cmp	r7, #0
   14554:	beq	1457c <close@plt+0x35e4>
   14558:	cmn	r6, #2
   1455c:	bcc	1457c <close@plt+0x35e4>
   14560:	mov	r0, #0
   14564:	bl	145c4 <close@plt+0x362c>
   14568:	cmp	r0, #0
   1456c:	bne	1457c <close@plt+0x35e4>
   14570:	ldrb	r0, [r4]
   14574:	str	r0, [r5]
   14578:	mov	r6, #1
   1457c:	mov	r0, r6
   14580:	sub	sp, fp, #16
   14584:	pop	{r4, r5, r6, r7, fp, pc}
   14588:	cmp	r2, #0
   1458c:	beq	145bc <close@plt+0x3624>
   14590:	mvn	r3, #0
   14594:	udiv	r3, r3, r2
   14598:	cmp	r3, r1
   1459c:	bcs	145bc <close@plt+0x3624>
   145a0:	push	{fp, lr}
   145a4:	mov	fp, sp
   145a8:	bl	10ecc <__errno_location@plt>
   145ac:	mov	r1, #12
   145b0:	str	r1, [r0]
   145b4:	mov	r0, #0
   145b8:	pop	{fp, pc}
   145bc:	mul	r1, r2, r1
   145c0:	b	13ec8 <close@plt+0x2f30>
   145c4:	push	{r4, sl, fp, lr}
   145c8:	add	fp, sp, #8
   145cc:	sub	sp, sp, #264	; 0x108
   145d0:	add	r1, sp, #7
   145d4:	movw	r2, #257	; 0x101
   145d8:	bl	14630 <close@plt+0x3698>
   145dc:	mov	r4, #0
   145e0:	cmp	r0, #0
   145e4:	bne	14624 <close@plt+0x368c>
   145e8:	add	r0, sp, #7
   145ec:	movw	r1, #20515	; 0x5023
   145f0:	movt	r1, #1
   145f4:	mov	r2, #2
   145f8:	bl	10eb4 <bcmp@plt>
   145fc:	cmp	r0, #0
   14600:	beq	14624 <close@plt+0x368c>
   14604:	add	r0, sp, #7
   14608:	movw	r1, #20517	; 0x5025
   1460c:	movt	r1, #1
   14610:	mov	r2, #6
   14614:	bl	10eb4 <bcmp@plt>
   14618:	mov	r4, r0
   1461c:	cmp	r0, #0
   14620:	movwne	r4, #1
   14624:	mov	r0, r4
   14628:	sub	sp, fp, #8
   1462c:	pop	{r4, sl, fp, pc}
   14630:	b	14634 <close@plt+0x369c>
   14634:	push	{r4, r5, r6, r7, fp, lr}
   14638:	add	fp, sp, #16
   1463c:	mov	r6, r2
   14640:	mov	r4, r1
   14644:	bl	146cc <close@plt+0x3734>
   14648:	cmp	r0, #0
   1464c:	beq	1467c <close@plt+0x36e4>
   14650:	mov	r7, r0
   14654:	bl	10ec0 <strlen@plt>
   14658:	cmp	r0, r6
   1465c:	bcs	14698 <close@plt+0x3700>
   14660:	add	r2, r0, #1
   14664:	mov	r0, r4
   14668:	mov	r1, r7
   1466c:	bl	10dac <memcpy@plt>
   14670:	mov	r5, #0
   14674:	mov	r0, r5
   14678:	pop	{r4, r5, r6, r7, fp, pc}
   1467c:	mov	r5, #22
   14680:	cmp	r6, #0
   14684:	beq	146c0 <close@plt+0x3728>
   14688:	mov	r0, #0
   1468c:	strb	r0, [r4]
   14690:	mov	r0, r5
   14694:	pop	{r4, r5, r6, r7, fp, pc}
   14698:	mov	r5, #34	; 0x22
   1469c:	cmp	r6, #0
   146a0:	beq	146c0 <close@plt+0x3728>
   146a4:	sub	r6, r6, #1
   146a8:	mov	r0, r4
   146ac:	mov	r1, r7
   146b0:	mov	r2, r6
   146b4:	bl	10dac <memcpy@plt>
   146b8:	mov	r0, #0
   146bc:	strb	r0, [r4, r6]
   146c0:	mov	r0, r5
   146c4:	pop	{r4, r5, r6, r7, fp, pc}
   146c8:	b	146cc <close@plt+0x3734>
   146cc:	mov	r1, #0
   146d0:	b	10f38 <setlocale@plt>
   146d4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   146d8:	mov	r7, r0
   146dc:	ldr	r6, [pc, #72]	; 1472c <close@plt+0x3794>
   146e0:	ldr	r5, [pc, #72]	; 14730 <close@plt+0x3798>
   146e4:	add	r6, pc, r6
   146e8:	add	r5, pc, r5
   146ec:	sub	r6, r6, r5
   146f0:	mov	r8, r1
   146f4:	mov	r9, r2
   146f8:	bl	10d38 <calloc@plt-0x20>
   146fc:	asrs	r6, r6, #2
   14700:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14704:	mov	r4, #0
   14708:	add	r4, r4, #1
   1470c:	ldr	r3, [r5], #4
   14710:	mov	r2, r9
   14714:	mov	r1, r8
   14718:	mov	r0, r7
   1471c:	blx	r3
   14720:	cmp	r6, r4
   14724:	bne	14708 <close@plt+0x3770>
   14728:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1472c:	andeq	r1, r1, r0, lsr #16
   14730:	andeq	r1, r1, r8, lsl r8
   14734:	bx	lr
   14738:	ldr	r3, [pc, #12]	; 1474c <close@plt+0x37b4>
   1473c:	mov	r1, #0
   14740:	add	r3, pc, r3
   14744:	ldr	r2, [r3]
   14748:	b	10ed8 <__cxa_atexit@plt>
   1474c:	muleq	r1, r4, r9

Disassembly of section .fini:

00014750 <.fini>:
   14750:	push	{r3, lr}
   14754:	pop	{r3, pc}
