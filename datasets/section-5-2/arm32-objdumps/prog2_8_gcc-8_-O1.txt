
../repos/prog2/8:     file format elf32-littlearm


Disassembly of section .init:

00010a80 <.init>:
   10a80:	push	{r3, lr}
   10a84:	bl	10b60 <_start@@Base+0x3c>
   10a88:	pop	{r3, pc}

Disassembly of section .plt:

00010a8c <calloc@plt-0x14>:
   10a8c:	push	{lr}		; (str lr, [sp, #-4]!)
   10a90:	ldr	lr, [pc, #4]	; 10a9c <calloc@plt-0x4>
   10a94:	add	lr, pc, lr
   10a98:	ldr	pc, [lr, #8]!
   10a9c:	andeq	r2, r1, r4, ror #10

00010aa0 <calloc@plt>:
   10aa0:	add	ip, pc, #0, 12
   10aa4:	add	ip, ip, #73728	; 0x12000
   10aa8:	ldr	pc, [ip, #1380]!	; 0x564

00010aac <printf@plt>:
   10aac:	add	ip, pc, #0, 12
   10ab0:	add	ip, ip, #73728	; 0x12000
   10ab4:	ldr	pc, [ip, #1372]!	; 0x55c

00010ab8 <free@plt>:
   10ab8:	add	ip, pc, #0, 12
   10abc:	add	ip, ip, #73728	; 0x12000
   10ac0:	ldr	pc, [ip, #1364]!	; 0x554

00010ac4 <realloc@plt>:
   10ac4:	add	ip, pc, #0, 12
   10ac8:	add	ip, ip, #73728	; 0x12000
   10acc:	ldr	pc, [ip, #1356]!	; 0x54c

00010ad0 <puts@plt>:
   10ad0:	add	ip, pc, #0, 12
   10ad4:	add	ip, ip, #73728	; 0x12000
   10ad8:	ldr	pc, [ip, #1348]!	; 0x544

00010adc <malloc@plt>:
   10adc:	add	ip, pc, #0, 12
   10ae0:	add	ip, ip, #73728	; 0x12000
   10ae4:	ldr	pc, [ip, #1340]!	; 0x53c

00010ae8 <__libc_start_main@plt>:
   10ae8:	add	ip, pc, #0, 12
   10aec:	add	ip, ip, #73728	; 0x12000
   10af0:	ldr	pc, [ip, #1332]!	; 0x534

00010af4 <__gmon_start__@plt>:
   10af4:	add	ip, pc, #0, 12
   10af8:	add	ip, ip, #73728	; 0x12000
   10afc:	ldr	pc, [ip, #1324]!	; 0x52c

00010b00 <setvbuf@plt>:
   10b00:	add	ip, pc, #0, 12
   10b04:	add	ip, ip, #73728	; 0x12000
   10b08:	ldr	pc, [ip, #1316]!	; 0x524

00010b0c <putchar@plt>:
   10b0c:	add	ip, pc, #0, 12
   10b10:	add	ip, ip, #73728	; 0x12000
   10b14:	ldr	pc, [ip, #1308]!	; 0x51c

00010b18 <abort@plt>:
   10b18:	add	ip, pc, #0, 12
   10b1c:	add	ip, ip, #73728	; 0x12000
   10b20:	ldr	pc, [ip, #1300]!	; 0x514

Disassembly of section .text:

00010b24 <_start@@Base>:
   10b24:	mov	fp, #0
   10b28:	mov	lr, #0
   10b2c:	pop	{r1}		; (ldr r1, [sp], #4)
   10b30:	mov	r2, sp
   10b34:	push	{r2}		; (str r2, [sp, #-4]!)
   10b38:	push	{r0}		; (str r0, [sp, #-4]!)
   10b3c:	ldr	ip, [pc, #16]	; 10b54 <_start@@Base+0x30>
   10b40:	push	{ip}		; (str ip, [sp, #-4]!)
   10b44:	ldr	r0, [pc, #12]	; 10b58 <_start@@Base+0x34>
   10b48:	ldr	r3, [pc, #12]	; 10b5c <_start@@Base+0x38>
   10b4c:	bl	10ae8 <__libc_start_main@plt>
   10b50:	bl	10b18 <abort@plt>
   10b54:	andeq	r2, r1, ip, ror #9
   10b58:			; <UNDEFINED> instruction: 0x00011ab4
   10b5c:	andeq	r2, r1, ip, lsl #9
   10b60:	ldr	r3, [pc, #20]	; 10b7c <_start@@Base+0x58>
   10b64:	ldr	r2, [pc, #20]	; 10b80 <_start@@Base+0x5c>
   10b68:	add	r3, pc, r3
   10b6c:	ldr	r2, [r3, r2]
   10b70:	cmp	r2, #0
   10b74:	bxeq	lr
   10b78:	b	10af4 <__gmon_start__@plt>
   10b7c:	muleq	r1, r0, r4
   10b80:	andeq	r0, r0, r8, lsr r0
   10b84:	ldr	r0, [pc, #24]	; 10ba4 <_start@@Base+0x80>
   10b88:	ldr	r3, [pc, #24]	; 10ba8 <_start@@Base+0x84>
   10b8c:	cmp	r3, r0
   10b90:	bxeq	lr
   10b94:	ldr	r3, [pc, #16]	; 10bac <_start@@Base+0x88>
   10b98:	cmp	r3, #0
   10b9c:	bxeq	lr
   10ba0:	bx	r3
   10ba4:	andeq	r3, r2, r4, asr #32
   10ba8:	andeq	r3, r2, r4, asr #32
   10bac:	andeq	r0, r0, r0
   10bb0:	ldr	r0, [pc, #36]	; 10bdc <_start@@Base+0xb8>
   10bb4:	ldr	r1, [pc, #36]	; 10be0 <_start@@Base+0xbc>
   10bb8:	sub	r1, r1, r0
   10bbc:	asr	r1, r1, #2
   10bc0:	add	r1, r1, r1, lsr #31
   10bc4:	asrs	r1, r1, #1
   10bc8:	bxeq	lr
   10bcc:	ldr	r3, [pc, #16]	; 10be4 <_start@@Base+0xc0>
   10bd0:	cmp	r3, #0
   10bd4:	bxeq	lr
   10bd8:	bx	r3
   10bdc:	andeq	r3, r2, r4, asr #32
   10be0:	andeq	r3, r2, r4, asr #32
   10be4:	andeq	r0, r0, r0
   10be8:	push	{r4, lr}
   10bec:	ldr	r4, [pc, #24]	; 10c0c <_start@@Base+0xe8>
   10bf0:	ldrb	r3, [r4]
   10bf4:	cmp	r3, #0
   10bf8:	popne	{r4, pc}
   10bfc:	bl	10b84 <_start@@Base+0x60>
   10c00:	mov	r3, #1
   10c04:	strb	r3, [r4]
   10c08:	pop	{r4, pc}
   10c0c:	andeq	r3, r2, r0, asr r0
   10c10:	b	10bb0 <_start@@Base+0x8c>

00010c14 <_g@@Base>:
   10c14:	push	{r1, r2, r3}
   10c18:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10c1c:	strd	r6, [sp, #8]
   10c20:	strd	r8, [sp, #16]
   10c24:	strd	sl, [sp, #24]
   10c28:	str	lr, [sp, #32]
   10c2c:	sub	sp, sp, #8
   10c30:	mov	sl, r0
   10c34:	ldr	r7, [sp, #44]	; 0x2c
   10c38:	mov	r0, #8
   10c3c:	bl	10adc <malloc@plt>
   10c40:	mov	r6, r0
   10c44:	add	r3, sp, #48	; 0x30
   10c48:	str	r3, [sp, #4]
   10c4c:	mov	r1, #8
   10c50:	mov	r0, sl
   10c54:	bl	10aa0 <calloc@plt>
   10c58:	str	r0, [r6, #4]
   10c5c:	cmp	r7, #0
   10c60:	ble	10cd8 <_g@@Base+0xc4>
   10c64:	sub	r7, r7, #1
   10c68:	bic	r7, r7, #1
   10c6c:	add	r7, r7, #2
   10c70:	mov	r5, #0
   10c74:	mov	r9, #8
   10c78:	mov	r8, #1
   10c7c:	ldr	r3, [sp, #4]
   10c80:	add	r2, r3, #4
   10c84:	str	r2, [sp, #4]
   10c88:	mov	r2, r3
   10c8c:	ldr	r4, [r2], #8
   10c90:	str	r2, [sp, #4]
   10c94:	ldr	fp, [r3, #4]
   10c98:	mov	r1, r9
   10c9c:	mov	r0, r8
   10ca0:	bl	10aa0 <calloc@plt>
   10ca4:	str	fp, [r0]
   10ca8:	ldr	r3, [r6, #4]
   10cac:	add	r3, r3, r4, lsl #3
   10cb0:	ldr	r2, [r3, #4]
   10cb4:	str	r2, [r0, #4]
   10cb8:	str	r0, [r3, #4]
   10cbc:	ldr	r2, [r6, #4]
   10cc0:	ldr	r3, [r2, r4, lsl #3]
   10cc4:	add	r3, r3, #1
   10cc8:	str	r3, [r2, r4, lsl #3]
   10ccc:	add	r5, r5, #2
   10cd0:	cmp	r7, r5
   10cd4:	bne	10c7c <_g@@Base+0x68>
   10cd8:	str	sl, [r6]
   10cdc:	mov	r0, r6
   10ce0:	add	sp, sp, #8
   10ce4:	ldrd	r4, [sp]
   10ce8:	ldrd	r6, [sp, #8]
   10cec:	ldrd	r8, [sp, #16]
   10cf0:	ldrd	sl, [sp, #24]
   10cf4:	ldr	lr, [sp, #32]
   10cf8:	add	sp, sp, #36	; 0x24
   10cfc:	add	sp, sp, #12
   10d00:	bx	lr

00010d04 <_f@@Base>:
   10d04:	strd	r4, [sp, #-16]!
   10d08:	str	r6, [sp, #8]
   10d0c:	str	lr, [sp, #12]
   10d10:	subs	r5, r0, #0
   10d14:	moveq	r0, #0
   10d18:	beq	10d68 <_f@@Base+0x64>
   10d1c:	ldr	r3, [r5]
   10d20:	cmp	r3, #0
   10d24:	ble	10d5c <_f@@Base+0x58>
   10d28:	mov	r6, r1
   10d2c:	mov	r4, #0
   10d30:	mov	r1, r4
   10d34:	mov	r0, r5
   10d38:	bl	121c0 <vetor_elemento@@Base>
   10d3c:	cmp	r0, r6
   10d40:	beq	10d64 <_f@@Base+0x60>
   10d44:	add	r4, r4, #1
   10d48:	ldr	r3, [r5]
   10d4c:	cmp	r3, r4
   10d50:	bgt	10d30 <_f@@Base+0x2c>
   10d54:	mov	r0, #0
   10d58:	b	10d68 <_f@@Base+0x64>
   10d5c:	mov	r0, #0
   10d60:	b	10d68 <_f@@Base+0x64>
   10d64:	mov	r0, #1
   10d68:	ldrd	r4, [sp]
   10d6c:	ldr	r6, [sp, #8]
   10d70:	add	sp, sp, #12
   10d74:	pop	{pc}		; (ldr pc, [sp], #4)

00010d78 <teste_grafo_novo@@Base>:
   10d78:	strd	r4, [sp, #-16]!
   10d7c:	str	r6, [sp, #8]
   10d80:	str	lr, [sp, #12]
   10d84:	movw	r0, #9468	; 0x24fc
   10d88:	movt	r0, #1
   10d8c:	bl	10aac <printf@plt>
   10d90:	mov	r0, #10
   10d94:	bl	11b98 <grafo_novo@@Base>
   10d98:	subs	r5, r0, #0
   10d9c:	beq	10e04 <teste_grafo_novo@@Base+0x8c>
   10da0:	ldr	r3, [r5]
   10da4:	cmp	r3, #10
   10da8:	moveq	r4, #0
   10dac:	bne	10e20 <teste_grafo_novo@@Base+0xa8>
   10db0:	mov	r0, r5
   10db4:	bl	11c08 <grafo_apaga@@Base>
   10db8:	mov	r0, #1
   10dbc:	bl	11b98 <grafo_novo@@Base>
   10dc0:	subs	r5, r0, #0
   10dc4:	beq	10e34 <teste_grafo_novo@@Base+0xbc>
   10dc8:	ldr	r3, [r5]
   10dcc:	cmp	r3, #1
   10dd0:	bne	10e50 <teste_grafo_novo@@Base+0xd8>
   10dd4:	mov	r0, r5
   10dd8:	bl	11c08 <grafo_apaga@@Base>
   10ddc:	cmp	r4, #0
   10de0:	bne	10e68 <teste_grafo_novo@@Base+0xf0>
   10de4:	movw	r0, #9580	; 0x256c
   10de8:	movt	r0, #1
   10dec:	bl	10ad0 <puts@plt>
   10df0:	mov	r0, r4
   10df4:	ldrd	r4, [sp]
   10df8:	ldr	r6, [sp, #8]
   10dfc:	add	sp, sp, #12
   10e00:	pop	{pc}		; (ldr pc, [sp], #4)
   10e04:	movw	r0, #9484	; 0x250c
   10e08:	movt	r0, #1
   10e0c:	bl	10aac <printf@plt>
   10e10:	mov	r0, #10
   10e14:	bl	10b0c <putchar@plt>
   10e18:	mov	r4, #1
   10e1c:	b	10df0 <teste_grafo_novo@@Base+0x78>
   10e20:	movw	r0, #9508	; 0x2524
   10e24:	movt	r0, #1
   10e28:	bl	10aac <printf@plt>
   10e2c:	mov	r4, #1
   10e30:	b	10db0 <teste_grafo_novo@@Base+0x38>
   10e34:	movw	r0, #9484	; 0x250c
   10e38:	movt	r0, #1
   10e3c:	bl	10aac <printf@plt>
   10e40:	add	r4, r4, #1
   10e44:	mov	r0, #10
   10e48:	bl	10b0c <putchar@plt>
   10e4c:	b	10df0 <teste_grafo_novo@@Base+0x78>
   10e50:	movw	r0, #9544	; 0x2548
   10e54:	movt	r0, #1
   10e58:	bl	10aac <printf@plt>
   10e5c:	add	r4, r4, #1
   10e60:	mov	r0, r5
   10e64:	bl	11c08 <grafo_apaga@@Base>
   10e68:	mov	r0, #10
   10e6c:	bl	10b0c <putchar@plt>
   10e70:	b	10df0 <teste_grafo_novo@@Base+0x78>

00010e74 <teste_grafo_aresta@@Base>:
   10e74:	strd	r4, [sp, #-16]!
   10e78:	str	r6, [sp, #8]
   10e7c:	str	lr, [sp, #12]
   10e80:	sub	sp, sp, #80	; 0x50
   10e84:	mov	ip, #1
   10e88:	str	ip, [sp, #76]	; 0x4c
   10e8c:	mov	r0, #0
   10e90:	str	r0, [sp, #72]	; 0x48
   10e94:	mov	r2, #3
   10e98:	str	r2, [sp, #68]	; 0x44
   10e9c:	mov	r3, #6
   10ea0:	str	r3, [sp, #64]	; 0x40
   10ea4:	str	r3, [sp, #60]	; 0x3c
   10ea8:	mov	r1, #7
   10eac:	str	r1, [sp, #56]	; 0x38
   10eb0:	str	ip, [sp, #52]	; 0x34
   10eb4:	str	ip, [sp, #48]	; 0x30
   10eb8:	str	r3, [sp, #44]	; 0x2c
   10ebc:	mov	r4, #4
   10ec0:	str	r4, [sp, #40]	; 0x28
   10ec4:	str	r0, [sp, #36]	; 0x24
   10ec8:	str	r4, [sp, #32]
   10ecc:	str	r4, [sp, #28]
   10ed0:	mov	r6, #5
   10ed4:	str	r6, [sp, #24]
   10ed8:	str	r6, [sp, #20]
   10edc:	str	r1, [sp, #16]
   10ee0:	mov	r3, #2
   10ee4:	str	r3, [sp, #12]
   10ee8:	str	r0, [sp, #8]
   10eec:	str	r3, [sp, #4]
   10ef0:	str	r1, [sp]
   10ef4:	mov	r1, #22
   10ef8:	mov	r0, #8
   10efc:	bl	10c14 <_g@@Base>
   10f00:	mov	r5, r0
   10f04:	movw	r0, #9584	; 0x2570
   10f08:	movt	r0, #1
   10f0c:	bl	10aac <printf@plt>
   10f10:	mov	r2, r4
   10f14:	mov	r1, r6
   10f18:	mov	r0, r5
   10f1c:	bl	11c8c <grafo_aresta@@Base>
   10f20:	cmp	r0, #1
   10f24:	moveq	r4, #0
   10f28:	bne	10fa8 <teste_grafo_aresta@@Base+0x134>
   10f2c:	mov	r2, #6
   10f30:	mov	r1, #7
   10f34:	mov	r0, r5
   10f38:	bl	11c8c <grafo_aresta@@Base>
   10f3c:	cmp	r0, #1
   10f40:	bne	10fbc <teste_grafo_aresta@@Base+0x148>
   10f44:	mov	r2, #1
   10f48:	mov	r1, #7
   10f4c:	mov	r0, r5
   10f50:	bl	11c8c <grafo_aresta@@Base>
   10f54:	cmp	r0, #0
   10f58:	bne	10fd0 <teste_grafo_aresta@@Base+0x15c>
   10f5c:	mov	r2, #7
   10f60:	mov	r1, #2
   10f64:	mov	r0, #0
   10f68:	bl	11c8c <grafo_aresta@@Base>
   10f6c:	cmn	r0, #1
   10f70:	bne	10ff8 <teste_grafo_aresta@@Base+0x184>
   10f74:	mov	r0, r5
   10f78:	bl	11c08 <grafo_apaga@@Base>
   10f7c:	cmp	r4, #0
   10f80:	bne	11010 <teste_grafo_aresta@@Base+0x19c>
   10f84:	movw	r0, #9580	; 0x256c
   10f88:	movt	r0, #1
   10f8c:	bl	10ad0 <puts@plt>
   10f90:	mov	r0, r4
   10f94:	add	sp, sp, #80	; 0x50
   10f98:	ldrd	r4, [sp]
   10f9c:	ldr	r6, [sp, #8]
   10fa0:	add	sp, sp, #12
   10fa4:	pop	{pc}		; (ldr pc, [sp], #4)
   10fa8:	movw	r0, #9604	; 0x2584
   10fac:	movt	r0, #1
   10fb0:	bl	10aac <printf@plt>
   10fb4:	mov	r4, #1
   10fb8:	b	10f2c <teste_grafo_aresta@@Base+0xb8>
   10fbc:	movw	r0, #9604	; 0x2584
   10fc0:	movt	r0, #1
   10fc4:	bl	10aac <printf@plt>
   10fc8:	add	r4, r4, #1
   10fcc:	b	10f44 <teste_grafo_aresta@@Base+0xd0>
   10fd0:	movw	r0, #9660	; 0x25bc
   10fd4:	movt	r0, #1
   10fd8:	bl	10aac <printf@plt>
   10fdc:	add	r4, r4, #1
   10fe0:	mov	r2, #7
   10fe4:	mov	r1, #2
   10fe8:	mov	r0, #0
   10fec:	bl	11c8c <grafo_aresta@@Base>
   10ff0:	cmn	r0, #1
   10ff4:	beq	1101c <teste_grafo_aresta@@Base+0x1a8>
   10ff8:	movw	r0, #9720	; 0x25f8
   10ffc:	movt	r0, #1
   11000:	bl	10aac <printf@plt>
   11004:	add	r4, r4, #1
   11008:	mov	r0, r5
   1100c:	bl	11c08 <grafo_apaga@@Base>
   11010:	mov	r0, #10
   11014:	bl	10b0c <putchar@plt>
   11018:	b	10f90 <teste_grafo_aresta@@Base+0x11c>
   1101c:	mov	r0, r5
   11020:	bl	11c08 <grafo_apaga@@Base>
   11024:	b	11010 <teste_grafo_aresta@@Base+0x19c>

00011028 <teste_grafo_adiciona@@Base>:
   11028:	strd	r4, [sp, #-16]!
   1102c:	str	r6, [sp, #8]
   11030:	str	lr, [sp, #12]
   11034:	sub	sp, sp, #8
   11038:	mov	r4, #2
   1103c:	str	r4, [sp, #4]
   11040:	mov	r6, #7
   11044:	str	r6, [sp]
   11048:	mov	r3, r4
   1104c:	mov	r2, #3
   11050:	mov	r1, #4
   11054:	mov	r0, #9
   11058:	bl	10c14 <_g@@Base>
   1105c:	mov	r5, r0
   11060:	movw	r0, #9776	; 0x2630
   11064:	movt	r0, #1
   11068:	bl	10aac <printf@plt>
   1106c:	mov	r2, r6
   11070:	mov	r1, r4
   11074:	mov	r0, r5
   11078:	bl	11d18 <grafo_adiciona@@Base>
   1107c:	cmp	r0, #1
   11080:	moveq	r4, #0
   11084:	bne	11180 <teste_grafo_adiciona@@Base+0x158>
   11088:	ldr	r3, [r5, #4]
   1108c:	ldr	r3, [r3, #20]
   11090:	cmp	r3, #0
   11094:	beq	110a4 <teste_grafo_adiciona@@Base+0x7c>
   11098:	ldr	r3, [r3]
   1109c:	cmp	r3, #7
   110a0:	beq	110b4 <teste_grafo_adiciona@@Base+0x8c>
   110a4:	movw	r0, #9856	; 0x2680
   110a8:	movt	r0, #1
   110ac:	bl	10aac <printf@plt>
   110b0:	add	r4, r4, #1
   110b4:	mov	r2, #8
   110b8:	mov	r1, #3
   110bc:	mov	r0, r5
   110c0:	bl	11d18 <grafo_adiciona@@Base>
   110c4:	cmp	r0, #1
   110c8:	bne	11194 <teste_grafo_adiciona@@Base+0x16c>
   110cc:	ldr	r3, [r5, #4]
   110d0:	ldr	r3, [r3, #28]
   110d4:	cmp	r3, #0
   110d8:	beq	110f4 <teste_grafo_adiciona@@Base+0xcc>
   110dc:	ldr	r2, [r3, #4]
   110e0:	cmp	r2, #0
   110e4:	beq	110f4 <teste_grafo_adiciona@@Base+0xcc>
   110e8:	ldr	r1, [r2, #4]
   110ec:	cmp	r1, #0
   110f0:	beq	111a8 <teste_grafo_adiciona@@Base+0x180>
   110f4:	movw	r0, #9904	; 0x26b0
   110f8:	movt	r0, #1
   110fc:	bl	10aac <printf@plt>
   11100:	add	r4, r4, #1
   11104:	mov	r2, #7
   11108:	mov	r1, #2
   1110c:	mov	r0, r5
   11110:	bl	11d18 <grafo_adiciona@@Base>
   11114:	cmp	r0, #0
   11118:	bne	111dc <teste_grafo_adiciona@@Base+0x1b4>
   1111c:	mov	r2, #7
   11120:	mov	r1, #22
   11124:	mov	r0, r5
   11128:	bl	11d18 <grafo_adiciona@@Base>
   1112c:	cmn	r0, #1
   11130:	bne	111f0 <teste_grafo_adiciona@@Base+0x1c8>
   11134:	mov	r2, #7
   11138:	mov	r1, #2
   1113c:	mov	r0, #0
   11140:	bl	11d18 <grafo_adiciona@@Base>
   11144:	cmn	r0, #1
   11148:	bne	11218 <teste_grafo_adiciona@@Base+0x1f0>
   1114c:	mov	r0, r5
   11150:	bl	11c08 <grafo_apaga@@Base>
   11154:	cmp	r4, #0
   11158:	bne	11230 <teste_grafo_adiciona@@Base+0x208>
   1115c:	movw	r0, #9580	; 0x256c
   11160:	movt	r0, #1
   11164:	bl	10ad0 <puts@plt>
   11168:	mov	r0, r4
   1116c:	add	sp, sp, #8
   11170:	ldrd	r4, [sp]
   11174:	ldr	r6, [sp, #8]
   11178:	add	sp, sp, #12
   1117c:	pop	{pc}		; (ldr pc, [sp], #4)
   11180:	movw	r0, #9796	; 0x2644
   11184:	movt	r0, #1
   11188:	bl	10aac <printf@plt>
   1118c:	mov	r4, #1
   11190:	b	11088 <teste_grafo_adiciona@@Base+0x60>
   11194:	movw	r0, #9796	; 0x2644
   11198:	movt	r0, #1
   1119c:	bl	10aac <printf@plt>
   111a0:	add	r4, r4, #1
   111a4:	b	110cc <teste_grafo_adiciona@@Base+0xa4>
   111a8:	ldr	r3, [r3]
   111ac:	cmp	r3, #2
   111b0:	beq	111cc <teste_grafo_adiciona@@Base+0x1a4>
   111b4:	cmp	r3, #8
   111b8:	bne	110f4 <teste_grafo_adiciona@@Base+0xcc>
   111bc:	ldr	r3, [r2]
   111c0:	cmp	r3, #2
   111c4:	bne	110f4 <teste_grafo_adiciona@@Base+0xcc>
   111c8:	b	11104 <teste_grafo_adiciona@@Base+0xdc>
   111cc:	ldr	r3, [r2]
   111d0:	cmp	r3, #8
   111d4:	bne	110f4 <teste_grafo_adiciona@@Base+0xcc>
   111d8:	b	11104 <teste_grafo_adiciona@@Base+0xdc>
   111dc:	movw	r0, #9964	; 0x26ec
   111e0:	movt	r0, #1
   111e4:	bl	10aac <printf@plt>
   111e8:	add	r4, r4, #1
   111ec:	b	1111c <teste_grafo_adiciona@@Base+0xf4>
   111f0:	movw	r0, #10020	; 0x2724
   111f4:	movt	r0, #1
   111f8:	bl	10aac <printf@plt>
   111fc:	add	r4, r4, #1
   11200:	mov	r2, #7
   11204:	mov	r1, #2
   11208:	mov	r0, #0
   1120c:	bl	11d18 <grafo_adiciona@@Base>
   11210:	cmn	r0, #1
   11214:	beq	1123c <teste_grafo_adiciona@@Base+0x214>
   11218:	movw	r0, #10076	; 0x275c
   1121c:	movt	r0, #1
   11220:	bl	10aac <printf@plt>
   11224:	add	r4, r4, #1
   11228:	mov	r0, r5
   1122c:	bl	11c08 <grafo_apaga@@Base>
   11230:	mov	r0, #10
   11234:	bl	10b0c <putchar@plt>
   11238:	b	11168 <teste_grafo_adiciona@@Base+0x140>
   1123c:	mov	r0, r5
   11240:	bl	11c08 <grafo_apaga@@Base>
   11244:	b	11230 <teste_grafo_adiciona@@Base+0x208>

00011248 <teste_grafo_remove@@Base>:
   11248:	strd	r4, [sp, #-16]!
   1124c:	str	r6, [sp, #8]
   11250:	str	lr, [sp, #12]
   11254:	sub	sp, sp, #16
   11258:	mov	r6, #1
   1125c:	str	r6, [sp, #12]
   11260:	mov	r4, #7
   11264:	str	r4, [sp, #8]
   11268:	mov	r3, #2
   1126c:	str	r3, [sp, #4]
   11270:	str	r4, [sp]
   11274:	mov	r2, #3
   11278:	mov	r1, #6
   1127c:	mov	r0, #9
   11280:	bl	10c14 <_g@@Base>
   11284:	mov	r5, r0
   11288:	movw	r0, #10132	; 0x2794
   1128c:	movt	r0, #1
   11290:	bl	10aac <printf@plt>
   11294:	mov	r2, r6
   11298:	mov	r1, r4
   1129c:	mov	r0, r5
   112a0:	bl	11dbc <grafo_remove@@Base>
   112a4:	cmp	r0, r6
   112a8:	moveq	r4, #0
   112ac:	bne	11378 <teste_grafo_remove@@Base+0x130>
   112b0:	ldr	r3, [r5, #4]
   112b4:	ldr	r3, [r3, #60]	; 0x3c
   112b8:	cmp	r3, #0
   112bc:	beq	112cc <teste_grafo_remove@@Base+0x84>
   112c0:	ldr	r2, [r3, #4]
   112c4:	cmp	r2, #0
   112c8:	beq	1138c <teste_grafo_remove@@Base+0x144>
   112cc:	movw	r0, #10212	; 0x27e4
   112d0:	movt	r0, #1
   112d4:	bl	10aac <printf@plt>
   112d8:	add	r4, r4, #1
   112dc:	mov	r2, #2
   112e0:	mov	r1, #7
   112e4:	mov	r0, r5
   112e8:	bl	11dbc <grafo_remove@@Base>
   112ec:	cmp	r0, #1
   112f0:	bne	1139c <teste_grafo_remove@@Base+0x154>
   112f4:	ldr	r3, [r5, #4]
   112f8:	ldr	r3, [r3, #60]	; 0x3c
   112fc:	cmp	r3, #0
   11300:	beq	11314 <teste_grafo_remove@@Base+0xcc>
   11304:	movw	r0, #10212	; 0x27e4
   11308:	movt	r0, #1
   1130c:	bl	10aac <printf@plt>
   11310:	add	r4, r4, #1
   11314:	mov	r2, #0
   11318:	mov	r1, #4
   1131c:	mov	r0, r5
   11320:	bl	11dbc <grafo_remove@@Base>
   11324:	cmp	r0, #0
   11328:	bne	113b0 <teste_grafo_remove@@Base+0x168>
   1132c:	mov	r2, #22
   11330:	mov	r1, #7
   11334:	mov	r0, r5
   11338:	bl	11dbc <grafo_remove@@Base>
   1133c:	cmn	r0, #1
   11340:	bne	113d8 <teste_grafo_remove@@Base+0x190>
   11344:	mov	r0, r5
   11348:	bl	11c08 <grafo_apaga@@Base>
   1134c:	cmp	r4, #0
   11350:	bne	113f0 <teste_grafo_remove@@Base+0x1a8>
   11354:	movw	r0, #9580	; 0x256c
   11358:	movt	r0, #1
   1135c:	bl	10ad0 <puts@plt>
   11360:	mov	r0, r4
   11364:	add	sp, sp, #16
   11368:	ldrd	r4, [sp]
   1136c:	ldr	r6, [sp, #8]
   11370:	add	sp, sp, #12
   11374:	pop	{pc}		; (ldr pc, [sp], #4)
   11378:	movw	r0, #10152	; 0x27a8
   1137c:	movt	r0, #1
   11380:	bl	10aac <printf@plt>
   11384:	mov	r4, r6
   11388:	b	112b0 <teste_grafo_remove@@Base+0x68>
   1138c:	ldr	r3, [r3]
   11390:	cmp	r3, #2
   11394:	bne	112cc <teste_grafo_remove@@Base+0x84>
   11398:	b	112dc <teste_grafo_remove@@Base+0x94>
   1139c:	movw	r0, #10152	; 0x27a8
   113a0:	movt	r0, #1
   113a4:	bl	10aac <printf@plt>
   113a8:	add	r4, r4, #1
   113ac:	b	112f4 <teste_grafo_remove@@Base+0xac>
   113b0:	movw	r0, #10272	; 0x2820
   113b4:	movt	r0, #1
   113b8:	bl	10aac <printf@plt>
   113bc:	add	r4, r4, #1
   113c0:	mov	r2, #22
   113c4:	mov	r1, #7
   113c8:	mov	r0, r5
   113cc:	bl	11dbc <grafo_remove@@Base>
   113d0:	cmn	r0, #1
   113d4:	beq	113fc <teste_grafo_remove@@Base+0x1b4>
   113d8:	movw	r0, #10332	; 0x285c
   113dc:	movt	r0, #1
   113e0:	bl	10aac <printf@plt>
   113e4:	add	r4, r4, #1
   113e8:	mov	r0, r5
   113ec:	bl	11c08 <grafo_apaga@@Base>
   113f0:	mov	r0, #10
   113f4:	bl	10b0c <putchar@plt>
   113f8:	b	11360 <teste_grafo_remove@@Base+0x118>
   113fc:	mov	r0, r5
   11400:	bl	11c08 <grafo_apaga@@Base>
   11404:	b	113f0 <teste_grafo_remove@@Base+0x1a8>

00011408 <teste_v_sucessores@@Base>:
   11408:	strd	r4, [sp, #-16]!
   1140c:	str	r6, [sp, #8]
   11410:	str	lr, [sp, #12]
   11414:	sub	sp, sp, #80	; 0x50
   11418:	mov	r0, #1
   1141c:	str	r0, [sp, #76]	; 0x4c
   11420:	mov	r1, #0
   11424:	str	r1, [sp, #72]	; 0x48
   11428:	mov	r2, #3
   1142c:	str	r2, [sp, #68]	; 0x44
   11430:	mov	r3, #6
   11434:	str	r3, [sp, #64]	; 0x40
   11438:	str	r3, [sp, #60]	; 0x3c
   1143c:	mov	r4, #7
   11440:	str	r4, [sp, #56]	; 0x38
   11444:	str	r0, [sp, #52]	; 0x34
   11448:	str	r0, [sp, #48]	; 0x30
   1144c:	str	r3, [sp, #44]	; 0x2c
   11450:	mov	r3, #4
   11454:	str	r3, [sp, #40]	; 0x28
   11458:	str	r1, [sp, #36]	; 0x24
   1145c:	str	r3, [sp, #32]
   11460:	str	r3, [sp, #28]
   11464:	mov	r3, #5
   11468:	str	r3, [sp, #24]
   1146c:	str	r3, [sp, #20]
   11470:	str	r4, [sp, #16]
   11474:	mov	r3, #2
   11478:	str	r3, [sp, #12]
   1147c:	str	r1, [sp, #8]
   11480:	str	r3, [sp, #4]
   11484:	str	r4, [sp]
   11488:	mov	r1, #22
   1148c:	mov	r0, #8
   11490:	bl	10c14 <_g@@Base>
   11494:	mov	r6, r0
   11498:	movw	r0, #10388	; 0x2894
   1149c:	movt	r0, #1
   114a0:	bl	10aac <printf@plt>
   114a4:	mov	r1, r4
   114a8:	mov	r0, r6
   114ac:	bl	11e9c <v_sucessores@@Base>
   114b0:	subs	r5, r0, #0
   114b4:	beq	11564 <teste_v_sucessores@@Base+0x15c>
   114b8:	ldr	r3, [r5]
   114bc:	cmp	r3, #3
   114c0:	moveq	r4, #0
   114c4:	bne	11580 <teste_v_sucessores@@Base+0x178>
   114c8:	mov	r1, #2
   114cc:	mov	r0, r5
   114d0:	bl	10d04 <_f@@Base>
   114d4:	cmp	r0, #0
   114d8:	beq	114f0 <teste_v_sucessores@@Base+0xe8>
   114dc:	mov	r1, #5
   114e0:	mov	r0, r5
   114e4:	bl	10d04 <_f@@Base>
   114e8:	cmp	r0, #0
   114ec:	bne	11594 <teste_v_sucessores@@Base+0x18c>
   114f0:	movw	r0, #10500	; 0x2904
   114f4:	movt	r0, #1
   114f8:	bl	10aac <printf@plt>
   114fc:	add	r4, r4, #1
   11500:	mov	r0, r5
   11504:	bl	12140 <vetor_apaga@@Base>
   11508:	mov	r1, #2
   1150c:	mov	r0, r6
   11510:	bl	11e9c <v_sucessores@@Base>
   11514:	subs	r5, r0, #0
   11518:	beq	115ac <teste_v_sucessores@@Base+0x1a4>
   1151c:	ldr	r3, [r5]
   11520:	cmp	r3, #0
   11524:	bne	115c8 <teste_v_sucessores@@Base+0x1c0>
   11528:	mov	r0, r5
   1152c:	bl	12140 <vetor_apaga@@Base>
   11530:	mov	r0, r6
   11534:	bl	11c08 <grafo_apaga@@Base>
   11538:	cmp	r4, #0
   1153c:	bne	115e8 <teste_v_sucessores@@Base+0x1e0>
   11540:	movw	r0, #9580	; 0x256c
   11544:	movt	r0, #1
   11548:	bl	10ad0 <puts@plt>
   1154c:	mov	r0, r4
   11550:	add	sp, sp, #80	; 0x50
   11554:	ldrd	r4, [sp]
   11558:	ldr	r6, [sp, #8]
   1155c:	add	sp, sp, #12
   11560:	pop	{pc}		; (ldr pc, [sp], #4)
   11564:	movw	r0, #10408	; 0x28a8
   11568:	movt	r0, #1
   1156c:	bl	10aac <printf@plt>
   11570:	mov	r0, #10
   11574:	bl	10b0c <putchar@plt>
   11578:	mov	r4, #1
   1157c:	b	1154c <teste_v_sucessores@@Base+0x144>
   11580:	movw	r0, #10456	; 0x28d8
   11584:	movt	r0, #1
   11588:	bl	10aac <printf@plt>
   1158c:	mov	r4, #1
   11590:	b	114c8 <teste_v_sucessores@@Base+0xc0>
   11594:	mov	r1, #6
   11598:	mov	r0, r5
   1159c:	bl	10d04 <_f@@Base>
   115a0:	cmp	r0, #0
   115a4:	bne	11500 <teste_v_sucessores@@Base+0xf8>
   115a8:	b	114f0 <teste_v_sucessores@@Base+0xe8>
   115ac:	movw	r0, #10544	; 0x2930
   115b0:	movt	r0, #1
   115b4:	bl	10aac <printf@plt>
   115b8:	add	r4, r4, #1
   115bc:	mov	r0, #10
   115c0:	bl	10b0c <putchar@plt>
   115c4:	b	1154c <teste_v_sucessores@@Base+0x144>
   115c8:	movw	r0, #10608	; 0x2970
   115cc:	movt	r0, #1
   115d0:	bl	10aac <printf@plt>
   115d4:	add	r4, r4, #1
   115d8:	mov	r0, r5
   115dc:	bl	12140 <vetor_apaga@@Base>
   115e0:	mov	r0, r6
   115e4:	bl	11c08 <grafo_apaga@@Base>
   115e8:	mov	r0, #10
   115ec:	bl	10b0c <putchar@plt>
   115f0:	b	1154c <teste_v_sucessores@@Base+0x144>

000115f4 <teste_v_antecessores@@Base>:
   115f4:	strd	r4, [sp, #-16]!
   115f8:	str	r6, [sp, #8]
   115fc:	str	lr, [sp, #12]
   11600:	sub	sp, sp, #80	; 0x50
   11604:	mov	ip, #1
   11608:	str	ip, [sp, #76]	; 0x4c
   1160c:	mov	r1, #0
   11610:	str	r1, [sp, #72]	; 0x48
   11614:	mov	r2, #3
   11618:	str	r2, [sp, #68]	; 0x44
   1161c:	mov	r0, #6
   11620:	str	r0, [sp, #64]	; 0x40
   11624:	str	r0, [sp, #60]	; 0x3c
   11628:	mov	r3, #7
   1162c:	str	r3, [sp, #56]	; 0x38
   11630:	str	ip, [sp, #52]	; 0x34
   11634:	str	ip, [sp, #48]	; 0x30
   11638:	str	r0, [sp, #44]	; 0x2c
   1163c:	mov	r0, #4
   11640:	str	r0, [sp, #40]	; 0x28
   11644:	str	r1, [sp, #36]	; 0x24
   11648:	str	r0, [sp, #32]
   1164c:	str	r0, [sp, #28]
   11650:	mov	r0, #5
   11654:	str	r0, [sp, #24]
   11658:	str	r0, [sp, #20]
   1165c:	str	r3, [sp, #16]
   11660:	mov	r4, #2
   11664:	str	r4, [sp, #12]
   11668:	str	r1, [sp, #8]
   1166c:	str	r4, [sp, #4]
   11670:	str	r3, [sp]
   11674:	mov	r3, r4
   11678:	mov	r1, #22
   1167c:	mov	r0, #8
   11680:	bl	10c14 <_g@@Base>
   11684:	mov	r6, r0
   11688:	movw	r0, #10656	; 0x29a0
   1168c:	movt	r0, #1
   11690:	bl	10aac <printf@plt>
   11694:	mov	r1, r4
   11698:	mov	r0, r6
   1169c:	bl	11f24 <v_antecessores@@Base>
   116a0:	subs	r5, r0, #0
   116a4:	beq	11754 <teste_v_antecessores@@Base+0x160>
   116a8:	ldr	r3, [r5]
   116ac:	cmp	r3, #3
   116b0:	moveq	r4, #0
   116b4:	bne	11770 <teste_v_antecessores@@Base+0x17c>
   116b8:	mov	r1, #0
   116bc:	mov	r0, r5
   116c0:	bl	10d04 <_f@@Base>
   116c4:	cmp	r0, #0
   116c8:	beq	116e0 <teste_v_antecessores@@Base+0xec>
   116cc:	mov	r1, #3
   116d0:	mov	r0, r5
   116d4:	bl	10d04 <_f@@Base>
   116d8:	cmp	r0, #0
   116dc:	bne	11784 <teste_v_antecessores@@Base+0x190>
   116e0:	movw	r0, #10772	; 0x2a14
   116e4:	movt	r0, #1
   116e8:	bl	10aac <printf@plt>
   116ec:	add	r4, r4, #1
   116f0:	mov	r0, r5
   116f4:	bl	12140 <vetor_apaga@@Base>
   116f8:	mov	r1, #7
   116fc:	mov	r0, r6
   11700:	bl	11f24 <v_antecessores@@Base>
   11704:	subs	r5, r0, #0
   11708:	beq	1179c <teste_v_antecessores@@Base+0x1a8>
   1170c:	ldr	r3, [r5]
   11710:	cmp	r3, #0
   11714:	bne	117b8 <teste_v_antecessores@@Base+0x1c4>
   11718:	mov	r0, r5
   1171c:	bl	12140 <vetor_apaga@@Base>
   11720:	mov	r0, r6
   11724:	bl	11c08 <grafo_apaga@@Base>
   11728:	cmp	r4, #0
   1172c:	bne	117d8 <teste_v_antecessores@@Base+0x1e4>
   11730:	movw	r0, #9580	; 0x256c
   11734:	movt	r0, #1
   11738:	bl	10ad0 <puts@plt>
   1173c:	mov	r0, r4
   11740:	add	sp, sp, #80	; 0x50
   11744:	ldrd	r4, [sp]
   11748:	ldr	r6, [sp, #8]
   1174c:	add	sp, sp, #12
   11750:	pop	{pc}		; (ldr pc, [sp], #4)
   11754:	movw	r0, #10676	; 0x29b4
   11758:	movt	r0, #1
   1175c:	bl	10aac <printf@plt>
   11760:	mov	r0, #10
   11764:	bl	10b0c <putchar@plt>
   11768:	mov	r4, #1
   1176c:	b	1173c <teste_v_antecessores@@Base+0x148>
   11770:	movw	r0, #10724	; 0x29e4
   11774:	movt	r0, #1
   11778:	bl	10aac <printf@plt>
   1177c:	mov	r4, #1
   11780:	b	116b8 <teste_v_antecessores@@Base+0xc4>
   11784:	mov	r1, #7
   11788:	mov	r0, r5
   1178c:	bl	10d04 <_f@@Base>
   11790:	cmp	r0, #0
   11794:	bne	116f0 <teste_v_antecessores@@Base+0xfc>
   11798:	b	116e0 <teste_v_antecessores@@Base+0xec>
   1179c:	movw	r0, #10820	; 0x2a44
   117a0:	movt	r0, #1
   117a4:	bl	10aac <printf@plt>
   117a8:	add	r4, r4, #1
   117ac:	mov	r0, #10
   117b0:	bl	10b0c <putchar@plt>
   117b4:	b	1173c <teste_v_antecessores@@Base+0x148>
   117b8:	movw	r0, #10884	; 0x2a84
   117bc:	movt	r0, #1
   117c0:	bl	10aac <printf@plt>
   117c4:	add	r4, r4, #1
   117c8:	mov	r0, r5
   117cc:	bl	12140 <vetor_apaga@@Base>
   117d0:	mov	r0, r6
   117d4:	bl	11c08 <grafo_apaga@@Base>
   117d8:	mov	r0, #10
   117dc:	bl	10b0c <putchar@plt>
   117e0:	b	1173c <teste_v_antecessores@@Base+0x148>

000117e4 <teste_v_grau@@Base>:
   117e4:	strd	r4, [sp, #-12]!
   117e8:	str	lr, [sp, #8]
   117ec:	sub	sp, sp, #84	; 0x54
   117f0:	mov	ip, #1
   117f4:	str	ip, [sp, #76]	; 0x4c
   117f8:	mov	r0, #0
   117fc:	str	r0, [sp, #72]	; 0x48
   11800:	mov	r2, #3
   11804:	str	r2, [sp, #68]	; 0x44
   11808:	mov	r3, #6
   1180c:	str	r3, [sp, #64]	; 0x40
   11810:	str	r3, [sp, #60]	; 0x3c
   11814:	mov	r1, #7
   11818:	str	r1, [sp, #56]	; 0x38
   1181c:	str	ip, [sp, #52]	; 0x34
   11820:	str	ip, [sp, #48]	; 0x30
   11824:	str	r3, [sp, #44]	; 0x2c
   11828:	mov	r3, #4
   1182c:	str	r3, [sp, #40]	; 0x28
   11830:	str	r0, [sp, #36]	; 0x24
   11834:	str	r3, [sp, #32]
   11838:	str	r3, [sp, #28]
   1183c:	mov	r3, #5
   11840:	str	r3, [sp, #24]
   11844:	str	r3, [sp, #20]
   11848:	str	r1, [sp, #16]
   1184c:	mov	r3, #2
   11850:	str	r3, [sp, #12]
   11854:	str	r0, [sp, #8]
   11858:	str	r3, [sp, #4]
   1185c:	str	r1, [sp]
   11860:	mov	r1, #22
   11864:	mov	r0, #8
   11868:	bl	10c14 <_g@@Base>
   1186c:	mov	r4, r0
   11870:	movw	r0, #10932	; 0x2ab4
   11874:	movt	r0, #1
   11878:	bl	10aac <printf@plt>
   1187c:	mvn	r1, #3
   11880:	mov	r0, r4
   11884:	bl	11ff0 <v_grau@@Base>
   11888:	cmn	r0, #1
   1188c:	moveq	r5, #0
   11890:	bne	118ec <teste_v_grau@@Base+0x108>
   11894:	mov	r1, #7
   11898:	mov	r0, r4
   1189c:	bl	11ff0 <v_grau@@Base>
   118a0:	cmp	r0, #3
   118a4:	bne	11900 <teste_v_grau@@Base+0x11c>
   118a8:	mov	r1, #5
   118ac:	mov	r0, r4
   118b0:	bl	11ff0 <v_grau@@Base>
   118b4:	cmp	r0, #2
   118b8:	bne	11924 <teste_v_grau@@Base+0x140>
   118bc:	mov	r0, r4
   118c0:	bl	11c08 <grafo_apaga@@Base>
   118c4:	cmp	r5, #0
   118c8:	bne	1193c <teste_v_grau@@Base+0x158>
   118cc:	movw	r0, #9580	; 0x256c
   118d0:	movt	r0, #1
   118d4:	bl	10ad0 <puts@plt>
   118d8:	mov	r0, r5
   118dc:	add	sp, sp, #84	; 0x54
   118e0:	ldrd	r4, [sp]
   118e4:	add	sp, sp, #8
   118e8:	pop	{pc}		; (ldr pc, [sp], #4)
   118ec:	movw	r0, #10944	; 0x2ac0
   118f0:	movt	r0, #1
   118f4:	bl	10aac <printf@plt>
   118f8:	mov	r5, #1
   118fc:	b	11894 <teste_v_grau@@Base+0xb0>
   11900:	movw	r0, #10992	; 0x2af0
   11904:	movt	r0, #1
   11908:	bl	10aac <printf@plt>
   1190c:	add	r5, r5, #1
   11910:	mov	r1, #5
   11914:	mov	r0, r4
   11918:	bl	11ff0 <v_grau@@Base>
   1191c:	cmp	r0, #2
   11920:	beq	11948 <teste_v_grau@@Base+0x164>
   11924:	movw	r0, #11040	; 0x2b20
   11928:	movt	r0, #1
   1192c:	bl	10aac <printf@plt>
   11930:	add	r5, r5, #1
   11934:	mov	r0, r4
   11938:	bl	11c08 <grafo_apaga@@Base>
   1193c:	mov	r0, #10
   11940:	bl	10b0c <putchar@plt>
   11944:	b	118d8 <teste_v_grau@@Base+0xf4>
   11948:	mov	r0, r4
   1194c:	bl	11c08 <grafo_apaga@@Base>
   11950:	b	1193c <teste_v_grau@@Base+0x158>

00011954 <teste_v_celebridade@@Base>:
   11954:	strd	r4, [sp, #-12]!
   11958:	str	lr, [sp, #8]
   1195c:	sub	sp, sp, #116	; 0x74
   11960:	mov	r3, #2
   11964:	str	r3, [sp, #108]	; 0x6c
   11968:	mov	r5, #5
   1196c:	str	r5, [sp, #104]	; 0x68
   11970:	str	r3, [sp, #100]	; 0x64
   11974:	mov	r1, #4
   11978:	str	r1, [sp, #96]	; 0x60
   1197c:	str	r3, [sp, #92]	; 0x5c
   11980:	mov	r0, #6
   11984:	str	r0, [sp, #88]	; 0x58
   11988:	str	r3, [sp, #84]	; 0x54
   1198c:	mov	ip, #1
   11990:	str	ip, [sp, #80]	; 0x50
   11994:	str	ip, [sp, #76]	; 0x4c
   11998:	mov	lr, #0
   1199c:	str	lr, [sp, #72]	; 0x48
   119a0:	mov	r2, #3
   119a4:	str	r2, [sp, #68]	; 0x44
   119a8:	str	r0, [sp, #64]	; 0x40
   119ac:	str	r0, [sp, #60]	; 0x3c
   119b0:	mov	r4, #7
   119b4:	str	r4, [sp, #56]	; 0x38
   119b8:	str	ip, [sp, #52]	; 0x34
   119bc:	str	ip, [sp, #48]	; 0x30
   119c0:	str	r0, [sp, #44]	; 0x2c
   119c4:	str	r1, [sp, #40]	; 0x28
   119c8:	str	lr, [sp, #36]	; 0x24
   119cc:	str	r1, [sp, #32]
   119d0:	str	r1, [sp, #28]
   119d4:	str	r5, [sp, #24]
   119d8:	str	r5, [sp, #20]
   119dc:	str	r4, [sp, #16]
   119e0:	str	r3, [sp, #12]
   119e4:	str	lr, [sp, #8]
   119e8:	str	r3, [sp, #4]
   119ec:	str	r4, [sp]
   119f0:	mov	r1, #30
   119f4:	mov	r0, #8
   119f8:	bl	10c14 <_g@@Base>
   119fc:	mov	r5, r0
   11a00:	movw	r0, #11088	; 0x2b50
   11a04:	movt	r0, #1
   11a08:	bl	10aac <printf@plt>
   11a0c:	mov	r1, r4
   11a10:	mov	r0, r5
   11a14:	bl	12068 <v_celebridade@@Base>
   11a18:	subs	r4, r0, #0
   11a1c:	bne	11a4c <teste_v_celebridade@@Base+0xf8>
   11a20:	mov	r1, #2
   11a24:	mov	r0, r5
   11a28:	bl	12068 <v_celebridade@@Base>
   11a2c:	cmp	r0, #1
   11a30:	bne	11a74 <teste_v_celebridade@@Base+0x120>
   11a34:	mov	r0, r5
   11a38:	bl	11c08 <grafo_apaga@@Base>
   11a3c:	movw	r0, #9580	; 0x256c
   11a40:	movt	r0, #1
   11a44:	bl	10ad0 <puts@plt>
   11a48:	b	11a94 <teste_v_celebridade@@Base+0x140>
   11a4c:	movw	r0, #11108	; 0x2b64
   11a50:	movt	r0, #1
   11a54:	bl	10aac <printf@plt>
   11a58:	mov	r1, #2
   11a5c:	mov	r0, r5
   11a60:	bl	12068 <v_celebridade@@Base>
   11a64:	mov	r4, r0
   11a68:	cmp	r0, #1
   11a6c:	beq	11aa8 <teste_v_celebridade@@Base+0x154>
   11a70:	mov	r4, #1
   11a74:	movw	r0, #11164	; 0x2b9c
   11a78:	movt	r0, #1
   11a7c:	bl	10aac <printf@plt>
   11a80:	add	r4, r4, #1
   11a84:	mov	r0, r5
   11a88:	bl	11c08 <grafo_apaga@@Base>
   11a8c:	mov	r0, #10
   11a90:	bl	10b0c <putchar@plt>
   11a94:	mov	r0, r4
   11a98:	add	sp, sp, #116	; 0x74
   11a9c:	ldrd	r4, [sp]
   11aa0:	add	sp, sp, #8
   11aa4:	pop	{pc}		; (ldr pc, [sp], #4)
   11aa8:	mov	r0, r5
   11aac:	bl	11c08 <grafo_apaga@@Base>
   11ab0:	b	11a8c <teste_v_celebridade@@Base+0x138>

00011ab4 <main@@Base>:
   11ab4:	str	r4, [sp, #-8]!
   11ab8:	str	lr, [sp, #4]
   11abc:	movw	r0, #12364	; 0x304c
   11ac0:	movt	r0, #2
   11ac4:	mov	r3, #0
   11ac8:	mov	r2, #2
   11acc:	mov	r1, r3
   11ad0:	ldr	r0, [r0]
   11ad4:	bl	10b00 <setvbuf@plt>
   11ad8:	movw	r0, #12360	; 0x3048
   11adc:	movt	r0, #2
   11ae0:	mov	r3, #0
   11ae4:	mov	r2, #2
   11ae8:	mov	r1, r3
   11aec:	ldr	r0, [r0]
   11af0:	bl	10b00 <setvbuf@plt>
   11af4:	bl	10d78 <teste_grafo_novo@@Base>
   11af8:	mov	r4, r0
   11afc:	bl	10e74 <teste_grafo_aresta@@Base>
   11b00:	add	r4, r4, r0
   11b04:	bl	11028 <teste_grafo_adiciona@@Base>
   11b08:	add	r4, r4, r0
   11b0c:	bl	11248 <teste_grafo_remove@@Base>
   11b10:	add	r4, r4, r0
   11b14:	bl	11408 <teste_v_sucessores@@Base>
   11b18:	add	r4, r4, r0
   11b1c:	bl	115f4 <teste_v_antecessores@@Base>
   11b20:	add	r4, r4, r0
   11b24:	bl	117e4 <teste_v_grau@@Base>
   11b28:	add	r4, r4, r0
   11b2c:	bl	11954 <teste_v_celebridade@@Base>
   11b30:	adds	r1, r4, r0
   11b34:	bne	11b54 <main@@Base+0xa0>
   11b38:	movw	r0, #11216	; 0x2bd0
   11b3c:	movt	r0, #1
   11b40:	bl	10ad0 <puts@plt>
   11b44:	mov	r0, #0
   11b48:	ldr	r4, [sp]
   11b4c:	add	sp, sp, #4
   11b50:	pop	{pc}		; (ldr pc, [sp], #4)
   11b54:	movw	r0, #11240	; 0x2be8
   11b58:	movt	r0, #1
   11b5c:	bl	10aac <printf@plt>
   11b60:	b	11b44 <main@@Base+0x90>

00011b64 <cria_elem@@Base>:
   11b64:	str	r4, [sp, #-8]!
   11b68:	str	lr, [sp, #4]
   11b6c:	mov	r4, r0
   11b70:	mov	r0, #8
   11b74:	bl	10adc <malloc@plt>
   11b78:	cmp	r0, #0
   11b7c:	beq	11b8c <cria_elem@@Base+0x28>
   11b80:	str	r4, [r0]
   11b84:	mov	r3, #0
   11b88:	str	r3, [r0, #4]
   11b8c:	ldr	r4, [sp]
   11b90:	add	sp, sp, #4
   11b94:	pop	{pc}		; (ldr pc, [sp], #4)

00011b98 <grafo_novo@@Base>:
   11b98:	strd	r4, [sp, #-16]!
   11b9c:	str	r6, [sp, #8]
   11ba0:	str	lr, [sp, #12]
   11ba4:	subs	r5, r0, #0
   11ba8:	movle	r4, #0
   11bac:	ble	11bf4 <grafo_novo@@Base+0x5c>
   11bb0:	mov	r0, #8
   11bb4:	bl	10adc <malloc@plt>
   11bb8:	mov	r4, r0
   11bbc:	str	r5, [r0]
   11bc0:	lsl	r0, r5, #3
   11bc4:	bl	10adc <malloc@plt>
   11bc8:	str	r0, [r4, #4]
   11bcc:	mov	r3, #0
   11bd0:	mov	r1, r3
   11bd4:	ldr	r2, [r4, #4]
   11bd8:	str	r1, [r2, r3, lsl #3]
   11bdc:	ldr	r2, [r4, #4]
   11be0:	add	r2, r2, r3, lsl #3
   11be4:	str	r1, [r2, #4]
   11be8:	add	r3, r3, #1
   11bec:	cmp	r5, r3
   11bf0:	bne	11bd4 <grafo_novo@@Base+0x3c>
   11bf4:	mov	r0, r4
   11bf8:	ldrd	r4, [sp]
   11bfc:	ldr	r6, [sp, #8]
   11c00:	add	sp, sp, #12
   11c04:	pop	{pc}		; (ldr pc, [sp], #4)

00011c08 <grafo_apaga@@Base>:
   11c08:	strd	r4, [sp, #-16]!
   11c0c:	str	r6, [sp, #8]
   11c10:	str	lr, [sp, #12]
   11c14:	subs	r6, r0, #0
   11c18:	beq	11c7c <grafo_apaga@@Base+0x74>
   11c1c:	ldr	r3, [r6]
   11c20:	cmp	r3, #0
   11c24:	ble	11c6c <grafo_apaga@@Base+0x64>
   11c28:	mov	r5, #0
   11c2c:	b	11c40 <grafo_apaga@@Base+0x38>
   11c30:	add	r5, r5, #1
   11c34:	ldr	r3, [r6]
   11c38:	cmp	r3, r5
   11c3c:	ble	11c6c <grafo_apaga@@Base+0x64>
   11c40:	ldr	r3, [r6, #4]
   11c44:	add	r3, r3, r5, lsl #3
   11c48:	ldr	r0, [r3, #4]
   11c4c:	cmp	r0, #0
   11c50:	beq	11c30 <grafo_apaga@@Base+0x28>
   11c54:	ldr	r4, [r0, #4]
   11c58:	bl	10ab8 <free@plt>
   11c5c:	mov	r0, r4
   11c60:	cmp	r4, #0
   11c64:	bne	11c54 <grafo_apaga@@Base+0x4c>
   11c68:	b	11c30 <grafo_apaga@@Base+0x28>
   11c6c:	ldr	r0, [r6, #4]
   11c70:	bl	10ab8 <free@plt>
   11c74:	mov	r0, r6
   11c78:	bl	10ab8 <free@plt>
   11c7c:	ldrd	r4, [sp]
   11c80:	ldr	r6, [sp, #8]
   11c84:	add	sp, sp, #12
   11c88:	pop	{pc}		; (ldr pc, [sp], #4)

00011c8c <grafo_aresta@@Base>:
   11c8c:	cmp	r0, #0
   11c90:	beq	11cf0 <grafo_aresta@@Base+0x64>
   11c94:	ldr	r3, [r0]
   11c98:	cmp	r3, r1
   11c9c:	blt	11cf8 <grafo_aresta@@Base+0x6c>
   11ca0:	cmp	r3, r2
   11ca4:	blt	11d00 <grafo_aresta@@Base+0x74>
   11ca8:	ldr	r3, [r0, #4]
   11cac:	add	r1, r3, r1, lsl #3
   11cb0:	ldr	r3, [r1, #4]
   11cb4:	cmp	r3, #0
   11cb8:	beq	11d08 <grafo_aresta@@Base+0x7c>
   11cbc:	ldr	r1, [r3]
   11cc0:	cmp	r2, r1
   11cc4:	beq	11d10 <grafo_aresta@@Base+0x84>
   11cc8:	ldr	r3, [r3, #4]
   11ccc:	cmp	r3, #0
   11cd0:	beq	11ce8 <grafo_aresta@@Base+0x5c>
   11cd4:	ldr	r1, [r3]
   11cd8:	cmp	r1, r2
   11cdc:	bne	11cc8 <grafo_aresta@@Base+0x3c>
   11ce0:	mov	r0, #1
   11ce4:	bx	lr
   11ce8:	mov	r0, #0
   11cec:	bx	lr
   11cf0:	mvn	r0, #0
   11cf4:	bx	lr
   11cf8:	mvn	r0, #0
   11cfc:	bx	lr
   11d00:	mov	r0, #0
   11d04:	bx	lr
   11d08:	mov	r0, #0
   11d0c:	bx	lr
   11d10:	mov	r0, #1
   11d14:	bx	lr

00011d18 <grafo_adiciona@@Base>:
   11d18:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11d1c:	strd	r6, [sp, #8]
   11d20:	str	r8, [sp, #16]
   11d24:	str	lr, [sp, #20]
   11d28:	subs	r6, r0, #0
   11d2c:	mvneq	r0, #0
   11d30:	beq	11d48 <grafo_adiciona@@Base+0x30>
   11d34:	ldr	r3, [r6]
   11d38:	cmp	r3, r1
   11d3c:	cmpge	r3, r2
   11d40:	mvnlt	r0, #0
   11d44:	bge	11d5c <grafo_adiciona@@Base+0x44>
   11d48:	ldrd	r4, [sp]
   11d4c:	ldrd	r6, [sp, #8]
   11d50:	ldr	r8, [sp, #16]
   11d54:	add	sp, sp, #20
   11d58:	pop	{pc}		; (ldr pc, [sp], #4)
   11d5c:	mov	r5, r2
   11d60:	mov	r4, r1
   11d64:	mov	r0, r6
   11d68:	bl	11c8c <grafo_aresta@@Base>
   11d6c:	cmp	r0, #1
   11d70:	moveq	r0, #0
   11d74:	beq	11d48 <grafo_adiciona@@Base+0x30>
   11d78:	lsl	r4, r4, #3
   11d7c:	ldr	r7, [r6, #4]
   11d80:	add	r7, r7, r4
   11d84:	ldr	r8, [r7, #4]
   11d88:	mov	r0, r5
   11d8c:	bl	11b64 <cria_elem@@Base>
   11d90:	str	r0, [r7, #4]
   11d94:	ldr	r1, [r6, #4]
   11d98:	add	r4, r1, r4
   11d9c:	ldr	r3, [r4, #4]
   11da0:	str	r8, [r3, #4]
   11da4:	ldr	r2, [r6, #4]
   11da8:	ldr	r3, [r2]
   11dac:	add	r3, r3, #1
   11db0:	str	r3, [r2]
   11db4:	mov	r0, #1
   11db8:	b	11d48 <grafo_adiciona@@Base+0x30>

00011dbc <grafo_remove@@Base>:
   11dbc:	str	r4, [sp, #-8]!
   11dc0:	str	lr, [sp, #4]
   11dc4:	subs	lr, r0, #0
   11dc8:	mvneq	r0, #0
   11dcc:	beq	11dec <grafo_remove@@Base+0x30>
   11dd0:	cmp	r1, r2
   11dd4:	movge	r3, r1
   11dd8:	movlt	r3, r2
   11ddc:	ldr	ip, [lr]
   11de0:	cmp	ip, r3
   11de4:	mvnlt	r0, #0
   11de8:	bge	11df8 <grafo_remove@@Base+0x3c>
   11dec:	ldr	r4, [sp]
   11df0:	add	sp, sp, #4
   11df4:	pop	{pc}		; (ldr pc, [sp], #4)
   11df8:	ldr	r3, [lr, #4]
   11dfc:	add	r1, r3, r1, lsl #3
   11e00:	ldr	ip, [r1, #4]
   11e04:	cmp	ip, #0
   11e08:	moveq	r0, #0
   11e0c:	beq	11dec <grafo_remove@@Base+0x30>
   11e10:	ldr	r3, [ip]
   11e14:	cmp	r3, r2
   11e18:	beq	11e50 <grafo_remove@@Base+0x94>
   11e1c:	ldr	r0, [ip, #4]
   11e20:	cmp	r0, #0
   11e24:	beq	11dec <grafo_remove@@Base+0x30>
   11e28:	ldr	r3, [r0]
   11e2c:	cmp	r3, r2
   11e30:	movne	r1, #0
   11e34:	moveq	r1, #1
   11e38:	cmp	ip, #0
   11e3c:	moveq	r1, #0
   11e40:	cmp	r1, #0
   11e44:	bne	11e78 <grafo_remove@@Base+0xbc>
   11e48:	mov	ip, r0
   11e4c:	b	11e1c <grafo_remove@@Base+0x60>
   11e50:	ldr	r3, [ip, #4]
   11e54:	str	r3, [r1, #4]
   11e58:	ldr	r2, [lr, #4]
   11e5c:	ldr	r3, [r2]
   11e60:	sub	r3, r3, #1
   11e64:	str	r3, [r2]
   11e68:	mov	r0, ip
   11e6c:	bl	10ab8 <free@plt>
   11e70:	mov	r0, #1
   11e74:	b	11dec <grafo_remove@@Base+0x30>
   11e78:	ldr	r3, [r0, #4]
   11e7c:	str	r3, [ip, #4]
   11e80:	ldr	r2, [lr, #4]
   11e84:	ldr	r3, [r2]
   11e88:	sub	r3, r3, #1
   11e8c:	str	r3, [r2]
   11e90:	bl	10ab8 <free@plt>
   11e94:	mov	r0, #1
   11e98:	b	11dec <grafo_remove@@Base+0x30>

00011e9c <v_sucessores@@Base>:
   11e9c:	strd	r4, [sp, #-16]!
   11ea0:	str	r6, [sp, #8]
   11ea4:	str	lr, [sp, #12]
   11ea8:	subs	r5, r0, #0
   11eac:	moveq	r6, r5
   11eb0:	beq	11ec8 <v_sucessores@@Base+0x2c>
   11eb4:	ldr	r3, [r5]
   11eb8:	cmp	r1, #0
   11ebc:	cmpge	r3, r1
   11ec0:	movle	r6, #0
   11ec4:	bgt	11edc <v_sucessores@@Base+0x40>
   11ec8:	mov	r0, r6
   11ecc:	ldrd	r4, [sp]
   11ed0:	ldr	r6, [sp, #8]
   11ed4:	add	sp, sp, #12
   11ed8:	pop	{pc}		; (ldr pc, [sp], #4)
   11edc:	mov	r4, r1
   11ee0:	bl	1210c <vetor_novo@@Base>
   11ee4:	mov	r6, r0
   11ee8:	ldr	r1, [r5, #4]
   11eec:	add	r1, r1, r4, lsl #3
   11ef0:	ldr	r4, [r1, #4]
   11ef4:	cmp	r4, #0
   11ef8:	beq	11ec8 <v_sucessores@@Base+0x2c>
   11efc:	mov	r5, #0
   11f00:	mov	r2, r5
   11f04:	ldr	r1, [r4]
   11f08:	mov	r0, r6
   11f0c:	bl	12200 <vetor_insere@@Base>
   11f10:	add	r5, r5, #1
   11f14:	ldr	r4, [r4, #4]
   11f18:	cmp	r4, #0
   11f1c:	bne	11f00 <v_sucessores@@Base+0x64>
   11f20:	b	11ec8 <v_sucessores@@Base+0x2c>

00011f24 <v_antecessores@@Base>:
   11f24:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11f28:	strd	r6, [sp, #8]
   11f2c:	str	r8, [sp, #16]
   11f30:	str	lr, [sp, #20]
   11f34:	subs	r6, r0, #0
   11f38:	moveq	r8, r6
   11f3c:	beq	11f54 <v_antecessores@@Base+0x30>
   11f40:	ldr	r3, [r6]
   11f44:	cmp	r1, #0
   11f48:	cmpge	r3, r1
   11f4c:	movle	r8, #0
   11f50:	bgt	11f6c <v_antecessores@@Base+0x48>
   11f54:	mov	r0, r8
   11f58:	ldrd	r4, [sp]
   11f5c:	ldrd	r6, [sp, #8]
   11f60:	ldr	r8, [sp, #16]
   11f64:	add	sp, sp, #20
   11f68:	pop	{pc}		; (ldr pc, [sp], #4)
   11f6c:	mov	r4, r1
   11f70:	bl	1210c <vetor_novo@@Base>
   11f74:	mov	r8, r0
   11f78:	ldr	r3, [r6]
   11f7c:	cmp	r3, #0
   11f80:	ble	11f54 <v_antecessores@@Base+0x30>
   11f84:	mov	r7, #0
   11f88:	mov	r5, r7
   11f8c:	b	11fb4 <v_antecessores@@Base+0x90>
   11f90:	mov	r2, r7
   11f94:	mov	r1, r5
   11f98:	mov	r0, r8
   11f9c:	bl	12200 <vetor_insere@@Base>
   11fa0:	add	r7, r7, #1
   11fa4:	add	r5, r5, #1
   11fa8:	ldr	r3, [r6]
   11fac:	cmp	r3, r5
   11fb0:	ble	11f54 <v_antecessores@@Base+0x30>
   11fb4:	ldr	r3, [r6, #4]
   11fb8:	add	r3, r3, r5, lsl #3
   11fbc:	ldr	r3, [r3, #4]
   11fc0:	cmp	r3, #0
   11fc4:	beq	11fa4 <v_antecessores@@Base+0x80>
   11fc8:	ldr	r2, [r3]
   11fcc:	cmp	r4, r2
   11fd0:	beq	11f90 <v_antecessores@@Base+0x6c>
   11fd4:	ldr	r3, [r3, #4]
   11fd8:	cmp	r3, #0
   11fdc:	beq	11fa4 <v_antecessores@@Base+0x80>
   11fe0:	ldr	r2, [r3]
   11fe4:	cmp	r2, r4
   11fe8:	bne	11fd4 <v_antecessores@@Base+0xb0>
   11fec:	b	11f90 <v_antecessores@@Base+0x6c>

00011ff0 <v_grau@@Base>:
   11ff0:	strd	r4, [sp, #-16]!
   11ff4:	str	r6, [sp, #8]
   11ff8:	str	lr, [sp, #12]
   11ffc:	subs	r5, r1, #0
   12000:	blt	12060 <v_grau@@Base+0x70>
   12004:	mov	r4, r0
   12008:	mov	r1, r5
   1200c:	bl	11f24 <v_antecessores@@Base>
   12010:	mov	r6, r0
   12014:	mov	r1, r5
   12018:	mov	r0, r4
   1201c:	bl	11e9c <v_sucessores@@Base>
   12020:	mov	r5, r0
   12024:	mov	r0, r6
   12028:	bl	121b0 <vetor_tamanho@@Base>
   1202c:	mov	r4, r0
   12030:	mov	r0, r5
   12034:	bl	121b0 <vetor_tamanho@@Base>
   12038:	add	r4, r4, r0
   1203c:	mov	r0, r6
   12040:	bl	12140 <vetor_apaga@@Base>
   12044:	mov	r0, r5
   12048:	bl	12140 <vetor_apaga@@Base>
   1204c:	mov	r0, r4
   12050:	ldrd	r4, [sp]
   12054:	ldr	r6, [sp, #8]
   12058:	add	sp, sp, #12
   1205c:	pop	{pc}		; (ldr pc, [sp], #4)
   12060:	mvn	r4, #0
   12064:	b	1204c <v_grau@@Base+0x5c>

00012068 <v_celebridade@@Base>:
   12068:	cmp	r0, #0
   1206c:	beq	12104 <v_celebridade@@Base+0x9c>
   12070:	str	r4, [sp, #-8]!
   12074:	str	lr, [sp, #4]
   12078:	ldr	lr, [r0, #4]
   1207c:	ldr	ip, [lr, r1, lsl #3]
   12080:	cmp	ip, #0
   12084:	movne	r0, #0
   12088:	bne	120f8 <v_celebridade@@Base+0x90>
   1208c:	ldr	r4, [r0]
   12090:	cmp	r4, #0
   12094:	ble	120e8 <v_celebridade@@Base+0x80>
   12098:	mov	r0, lr
   1209c:	add	lr, lr, r4, lsl #3
   120a0:	b	120b4 <v_celebridade@@Base+0x4c>
   120a4:	add	ip, ip, #1
   120a8:	add	r0, r0, #8
   120ac:	cmp	r0, lr
   120b0:	beq	120e8 <v_celebridade@@Base+0x80>
   120b4:	ldr	r3, [r0, #4]
   120b8:	cmp	r3, #0
   120bc:	beq	120a8 <v_celebridade@@Base+0x40>
   120c0:	ldr	r2, [r3]
   120c4:	cmp	r1, r2
   120c8:	beq	120a4 <v_celebridade@@Base+0x3c>
   120cc:	ldr	r3, [r3, #4]
   120d0:	cmp	r3, #0
   120d4:	beq	120a8 <v_celebridade@@Base+0x40>
   120d8:	ldr	r2, [r3]
   120dc:	cmp	r2, r1
   120e0:	bne	120cc <v_celebridade@@Base+0x64>
   120e4:	b	120a4 <v_celebridade@@Base+0x3c>
   120e8:	add	r0, ip, #1
   120ec:	cmp	r0, r4
   120f0:	movne	r0, #0
   120f4:	moveq	r0, #1
   120f8:	ldr	r4, [sp]
   120fc:	add	sp, sp, #4
   12100:	pop	{pc}		; (ldr pc, [sp], #4)
   12104:	mvn	r0, #0
   12108:	bx	lr

0001210c <vetor_novo@@Base>:
   1210c:	str	r4, [sp, #-8]!
   12110:	str	lr, [sp, #4]
   12114:	mov	r0, #12
   12118:	bl	10adc <malloc@plt>
   1211c:	cmp	r0, #0
   12120:	beq	12134 <vetor_novo@@Base+0x28>
   12124:	mov	r3, #0
   12128:	str	r3, [r0]
   1212c:	str	r3, [r0, #4]
   12130:	str	r3, [r0, #8]
   12134:	ldr	r4, [sp]
   12138:	add	sp, sp, #4
   1213c:	pop	{pc}		; (ldr pc, [sp], #4)

00012140 <vetor_apaga@@Base>:
   12140:	str	r4, [sp, #-8]!
   12144:	str	lr, [sp, #4]
   12148:	subs	r4, r0, #0
   1214c:	beq	12160 <vetor_apaga@@Base+0x20>
   12150:	ldr	r0, [r4, #8]
   12154:	bl	10ab8 <free@plt>
   12158:	mov	r0, r4
   1215c:	bl	10ab8 <free@plt>
   12160:	ldr	r4, [sp]
   12164:	add	sp, sp, #4
   12168:	pop	{pc}		; (ldr pc, [sp], #4)

0001216c <vetor_atribui@@Base>:
   1216c:	mov	r3, r0
   12170:	cmp	r0, #0
   12174:	lsrne	r0, r1, #31
   12178:	moveq	r0, #1
   1217c:	cmp	r0, #0
   12180:	bne	121a0 <vetor_atribui@@Base+0x34>
   12184:	ldr	r0, [r3]
   12188:	cmp	r0, r1
   1218c:	ble	121a8 <vetor_atribui@@Base+0x3c>
   12190:	ldr	r3, [r3, #8]
   12194:	str	r2, [r3, r1, lsl #2]
   12198:	mov	r0, r1
   1219c:	bx	lr
   121a0:	mvn	r0, #0
   121a4:	bx	lr
   121a8:	mvn	r0, #0
   121ac:	bx	lr

000121b0 <vetor_tamanho@@Base>:
   121b0:	cmp	r0, #0
   121b4:	ldrne	r0, [r0]
   121b8:	mvneq	r0, #0
   121bc:	bx	lr

000121c0 <vetor_elemento@@Base>:
   121c0:	mov	r3, r0
   121c4:	cmp	r0, #0
   121c8:	lsrne	r0, r1, #31
   121cc:	moveq	r0, #1
   121d0:	cmp	r0, #0
   121d4:	bne	121f0 <vetor_elemento@@Base+0x30>
   121d8:	ldr	r2, [r3]
   121dc:	cmp	r2, r1
   121e0:	ble	121f8 <vetor_elemento@@Base+0x38>
   121e4:	ldr	r3, [r3, #8]
   121e8:	ldr	r0, [r3, r1, lsl #2]
   121ec:	bx	lr
   121f0:	mov	r0, #-2147483648	; 0x80000000
   121f4:	bx	lr
   121f8:	mov	r0, #-2147483648	; 0x80000000
   121fc:	bx	lr

00012200 <vetor_insere@@Base>:
   12200:	strd	r4, [sp, #-16]!
   12204:	str	r6, [sp, #8]
   12208:	str	lr, [sp, #12]
   1220c:	mov	r4, r0
   12210:	cmn	r2, #1
   12214:	movge	r3, #0
   12218:	movlt	r3, #1
   1221c:	cmp	r0, #0
   12220:	movne	r0, r3
   12224:	moveq	r0, #1
   12228:	cmp	r0, #0
   1222c:	bne	122e4 <vetor_insere@@Base+0xe4>
   12230:	mov	r6, r1
   12234:	mov	r5, r2
   12238:	ldr	r3, [r4]
   1223c:	cmp	r3, r2
   12240:	blt	122ec <vetor_insere@@Base+0xec>
   12244:	cmn	r2, #1
   12248:	moveq	r5, r3
   1224c:	ldr	r1, [r4, #4]
   12250:	cmp	r3, r1
   12254:	beq	122b4 <vetor_insere@@Base+0xb4>
   12258:	ldr	r2, [r4]
   1225c:	sub	r2, r2, #1
   12260:	cmp	r5, r2
   12264:	bgt	1228c <vetor_insere@@Base+0x8c>
   12268:	lsl	r1, r2, #2
   1226c:	sub	r0, r5, #1
   12270:	ldr	r3, [r4, #8]
   12274:	ldr	ip, [r3, r1]!
   12278:	str	ip, [r3, #4]
   1227c:	sub	r2, r2, #1
   12280:	sub	r1, r1, #4
   12284:	cmp	r2, r0
   12288:	bne	12270 <vetor_insere@@Base+0x70>
   1228c:	ldr	r3, [r4, #8]
   12290:	str	r6, [r3, r5, lsl #2]
   12294:	ldr	r3, [r4]
   12298:	add	r3, r3, #1
   1229c:	str	r3, [r4]
   122a0:	mov	r0, r5
   122a4:	ldrd	r4, [sp]
   122a8:	ldr	r6, [sp, #8]
   122ac:	add	sp, sp, #12
   122b0:	pop	{pc}		; (ldr pc, [sp], #4)
   122b4:	cmp	r1, #0
   122b8:	lslne	r1, r1, #1
   122bc:	moveq	r1, #1
   122c0:	str	r1, [r4, #4]
   122c4:	lsl	r1, r1, #2
   122c8:	ldr	r0, [r4, #8]
   122cc:	bl	10ac4 <realloc@plt>
   122d0:	str	r0, [r4, #8]
   122d4:	cmp	r0, #0
   122d8:	bne	12258 <vetor_insere@@Base+0x58>
   122dc:	mvn	r0, #0
   122e0:	b	122a4 <vetor_insere@@Base+0xa4>
   122e4:	mvn	r0, #0
   122e8:	b	122a4 <vetor_insere@@Base+0xa4>
   122ec:	mvn	r0, #0
   122f0:	b	122a4 <vetor_insere@@Base+0xa4>

000122f4 <vetor_remove@@Base>:
   122f4:	mov	r2, r0
   122f8:	cmp	r0, #0
   122fc:	lsrne	r0, r1, #31
   12300:	moveq	r0, #1
   12304:	cmp	r0, #0
   12308:	bne	12358 <vetor_remove@@Base+0x64>
   1230c:	ldr	r3, [r2]
   12310:	cmp	r3, r1
   12314:	ble	12360 <vetor_remove@@Base+0x6c>
   12318:	add	r1, r1, #1
   1231c:	cmp	r3, r1
   12320:	ble	12348 <vetor_remove@@Base+0x54>
   12324:	lsl	r0, r1, #2
   12328:	ldr	r3, [r2, #8]
   1232c:	ldr	ip, [r3, r0]!
   12330:	str	ip, [r3, #-4]
   12334:	add	r1, r1, #1
   12338:	ldr	r3, [r2]
   1233c:	add	r0, r0, #4
   12340:	cmp	r3, r1
   12344:	bgt	12328 <vetor_remove@@Base+0x34>
   12348:	sub	r3, r3, #1
   1234c:	str	r3, [r2]
   12350:	mov	r0, #0
   12354:	bx	lr
   12358:	mvn	r0, #0
   1235c:	bx	lr
   12360:	mvn	r0, #0
   12364:	bx	lr

00012368 <vetor_pesquisa@@Base>:
   12368:	cmp	r0, #0
   1236c:	beq	123b4 <vetor_pesquisa@@Base+0x4c>
   12370:	ldr	ip, [r0]
   12374:	cmp	ip, #0
   12378:	ble	123bc <vetor_pesquisa@@Base+0x54>
   1237c:	ldr	r3, [r0, #8]
   12380:	ldr	r2, [r3]
   12384:	cmp	r1, r2
   12388:	beq	123c4 <vetor_pesquisa@@Base+0x5c>
   1238c:	mov	r0, #0
   12390:	add	r0, r0, #1
   12394:	cmp	r0, ip
   12398:	beq	123ac <vetor_pesquisa@@Base+0x44>
   1239c:	ldr	r2, [r3, #4]!
   123a0:	cmp	r2, r1
   123a4:	bne	12390 <vetor_pesquisa@@Base+0x28>
   123a8:	bx	lr
   123ac:	mvn	r0, #0
   123b0:	bx	lr
   123b4:	mvn	r0, #0
   123b8:	bx	lr
   123bc:	mvn	r0, #0
   123c0:	bx	lr
   123c4:	mov	r0, #0
   123c8:	b	123a8 <vetor_pesquisa@@Base+0x40>

000123cc <vetor_ordena@@Base>:
   123cc:	cmp	r0, #0
   123d0:	beq	1247c <vetor_ordena@@Base+0xb0>
   123d4:	ldr	r3, [r0]
   123d8:	cmp	r3, #1
   123dc:	ble	12484 <vetor_ordena@@Base+0xb8>
   123e0:	strd	r4, [sp, #-12]!
   123e4:	str	lr, [sp, #8]
   123e8:	mov	r5, #4
   123ec:	mov	r4, #1
   123f0:	b	12414 <vetor_ordena@@Base+0x48>
   123f4:	mov	r1, r4
   123f8:	ldr	r3, [r0, #8]
   123fc:	str	lr, [r3, r1, lsl #2]
   12400:	add	r4, r4, #1
   12404:	add	r5, r5, #4
   12408:	ldr	r3, [r0]
   1240c:	cmp	r3, r4
   12410:	ble	1246c <vetor_ordena@@Base+0xa0>
   12414:	ldr	r2, [r0, #8]
   12418:	ldr	lr, [r2, r5]
   1241c:	cmp	r4, #0
   12420:	ble	123f4 <vetor_ordena@@Base+0x28>
   12424:	add	r3, r2, r5
   12428:	ldr	ip, [r3, #-4]
   1242c:	cmp	lr, ip
   12430:	bge	12464 <vetor_ordena@@Base+0x98>
   12434:	mov	r3, r5
   12438:	mov	r1, r4
   1243c:	str	ip, [r2, r3]
   12440:	subs	r1, r1, #1
   12444:	beq	123f8 <vetor_ordena@@Base+0x2c>
   12448:	ldr	r2, [r0, #8]
   1244c:	add	ip, r2, r3
   12450:	ldr	ip, [ip, #-8]
   12454:	sub	r3, r3, #4
   12458:	cmp	ip, lr
   1245c:	bgt	1243c <vetor_ordena@@Base+0x70>
   12460:	b	123f8 <vetor_ordena@@Base+0x2c>
   12464:	mov	r1, r4
   12468:	b	123f8 <vetor_ordena@@Base+0x2c>
   1246c:	mov	r0, #0
   12470:	ldrd	r4, [sp]
   12474:	add	sp, sp, #8
   12478:	pop	{pc}		; (ldr pc, [sp], #4)
   1247c:	mvn	r0, #0
   12480:	bx	lr
   12484:	mov	r0, #0
   12488:	bx	lr

0001248c <__libc_csu_init@@Base>:
   1248c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12490:	mov	r7, r0
   12494:	ldr	r6, [pc, #72]	; 124e4 <__libc_csu_init@@Base+0x58>
   12498:	ldr	r5, [pc, #72]	; 124e8 <__libc_csu_init@@Base+0x5c>
   1249c:	add	r6, pc, r6
   124a0:	add	r5, pc, r5
   124a4:	sub	r6, r6, r5
   124a8:	mov	r8, r1
   124ac:	mov	r9, r2
   124b0:	bl	10a80 <calloc@plt-0x20>
   124b4:	asrs	r6, r6, #2
   124b8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   124bc:	mov	r4, #0
   124c0:	add	r4, r4, #1
   124c4:	ldr	r3, [r5], #4
   124c8:	mov	r2, r9
   124cc:	mov	r1, r8
   124d0:	mov	r0, r7
   124d4:	blx	r3
   124d8:	cmp	r6, r4
   124dc:	bne	124c0 <__libc_csu_init@@Base+0x34>
   124e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   124e4:	andeq	r0, r1, r0, ror sl
   124e8:	andeq	r0, r1, r8, ror #20

000124ec <__libc_csu_fini@@Base>:
   124ec:	bx	lr

Disassembly of section .fini:

000124f0 <.fini>:
   124f0:	push	{r3, lr}
   124f4:	pop	{r3, pc}
