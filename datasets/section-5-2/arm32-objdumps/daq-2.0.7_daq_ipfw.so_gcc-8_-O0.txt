
../repos/daq-2.0.7/os-daq-modules/.libs/daq_ipfw.so:     file format elf32-littlearm


Disassembly of section .init:

00000654 <_init>:
 654:	push	{r3, lr}
 658:	bl	788 <call_weak_fn>
 65c:	pop	{r3, pc}

Disassembly of section .plt:

00000660 <.plt>:
 660:	push	{lr}		; (str lr, [sp, #-4]!)
 664:	ldr	lr, [pc, #4]	; 670 <.plt+0x10>
 668:	add	lr, pc, lr
 66c:	ldr	pc, [lr, #8]!
 670:	.word	0x00011990

00000674 <calloc@plt>:
 674:	add	ip, pc, #0, 12
 678:	add	ip, ip, #69632	; 0x11000
 67c:	ldr	pc, [ip, #2448]!	; 0x990

00000680 <strcmp@plt>:
 680:	add	ip, pc, #0, 12
 684:	add	ip, ip, #69632	; 0x11000
 688:	ldr	pc, [ip, #2440]!	; 0x988

0000068c <__cxa_finalize@plt>:
 68c:	add	ip, pc, #0, 12
 690:	add	ip, ip, #69632	; 0x11000
 694:	ldr	pc, [ip, #2432]!	; 0x980

00000698 <strtol@plt>:
 698:	add	ip, pc, #0, 12
 69c:	add	ip, ip, #69632	; 0x11000
 6a0:	ldr	pc, [ip, #2424]!	; 0x978

000006a4 <free@plt>:
 6a4:	add	ip, pc, #0, 12
 6a8:	add	ip, ip, #69632	; 0x11000
 6ac:	ldr	pc, [ip, #2416]!	; 0x970

000006b0 <memcpy@plt>:
 6b0:	add	ip, pc, #0, 12
 6b4:	add	ip, ip, #69632	; 0x11000
 6b8:	ldr	pc, [ip, #2408]!	; 0x968

000006bc <select@plt>:
 6bc:	add	ip, pc, #0, 12
 6c0:	add	ip, ip, #69632	; 0x11000
 6c4:	ldr	pc, [ip, #2400]!	; 0x960

000006c8 <recvfrom@plt>:
 6c8:	add	ip, pc, #0, 12
 6cc:	add	ip, ip, #69632	; 0x11000
 6d0:	ldr	pc, [ip, #2392]!	; 0x958

000006d4 <strdup@plt>:
 6d4:	add	ip, pc, #0, 12
 6d8:	add	ip, ip, #69632	; 0x11000
 6dc:	ldr	pc, [ip, #2384]!	; 0x950

000006e0 <htons@plt>:
 6e0:	add	ip, pc, #0, 12
 6e4:	add	ip, ip, #69632	; 0x11000
 6e8:	ldr	pc, [ip, #2376]!	; 0x948

000006ec <gettimeofday@plt>:
 6ec:	add	ip, pc, #0, 12
 6f0:	add	ip, ip, #69632	; 0x11000
 6f4:	ldr	pc, [ip, #2368]!	; 0x940

000006f8 <malloc@plt>:
 6f8:	add	ip, pc, #0, 12
 6fc:	add	ip, ip, #69632	; 0x11000
 700:	ldr	pc, [ip, #2360]!	; 0x938

00000704 <sfbpf_compile@plt>:
 704:	add	ip, pc, #0, 12
 708:	add	ip, ip, #69632	; 0x11000
 70c:	ldr	pc, [ip, #2352]!	; 0x930

00000710 <strerror@plt>:
 710:	add	ip, pc, #0, 12
 714:	add	ip, ip, #69632	; 0x11000
 718:	ldr	pc, [ip, #2344]!	; 0x928

0000071c <__gmon_start__@plt>:
 71c:	add	ip, pc, #0, 12
 720:	add	ip, ip, #69632	; 0x11000
 724:	ldr	pc, [ip, #2336]!	; 0x920

00000728 <__errno_location@plt>:
 728:	add	ip, pc, #0, 12
 72c:	add	ip, ip, #69632	; 0x11000
 730:	ldr	pc, [ip, #2328]!	; 0x918

00000734 <snprintf@plt>:
 734:	add	ip, pc, #0, 12
 738:	add	ip, ip, #69632	; 0x11000
 73c:	ldr	pc, [ip, #2320]!	; 0x910

00000740 <bind@plt>:
 740:	add	ip, pc, #0, 12
 744:	add	ip, ip, #69632	; 0x11000
 748:	ldr	pc, [ip, #2312]!	; 0x908

0000074c <memset@plt>:
 74c:	add	ip, pc, #0, 12
 750:	add	ip, ip, #69632	; 0x11000
 754:	ldr	pc, [ip, #2304]!	; 0x900

00000758 <sendto@plt>:
 758:	add	ip, pc, #0, 12
 75c:	add	ip, ip, #69632	; 0x11000
 760:	ldr	pc, [ip, #2296]!	; 0x8f8

00000764 <sfbpf_filter@plt>:
 764:	add	ip, pc, #0, 12
 768:	add	ip, ip, #69632	; 0x11000
 76c:	ldr	pc, [ip, #2288]!	; 0x8f0

00000770 <socket@plt>:
 770:	add	ip, pc, #0, 12
 774:	add	ip, ip, #69632	; 0x11000
 778:	ldr	pc, [ip, #2280]!	; 0x8e8

0000077c <close@plt>:
 77c:	add	ip, pc, #0, 12
 780:	add	ip, ip, #69632	; 0x11000
 784:	ldr	pc, [ip, #2272]!	; 0x8e0

Disassembly of section .text:

00000788 <call_weak_fn>:
     788:	ldr	r3, [pc, #20]	; 7a4 <call_weak_fn+0x1c>
     78c:	ldr	r2, [pc, #20]	; 7a8 <call_weak_fn+0x20>
     790:	add	r3, pc, r3
     794:	ldr	r2, [r3, r2]
     798:	cmp	r2, #0
     79c:	bxeq	lr
     7a0:	b	71c <__gmon_start__@plt>
     7a4:	.word	0x00011868
     7a8:	.word	0x00000070

000007ac <deregister_tm_clones>:
     7ac:	ldr	r0, [pc, #44]	; 7e0 <deregister_tm_clones+0x34>
     7b0:	ldr	r3, [pc, #44]	; 7e4 <deregister_tm_clones+0x38>
     7b4:	add	r0, pc, r0
     7b8:	add	r3, pc, r3
     7bc:	cmp	r3, r0
     7c0:	ldr	r3, [pc, #32]	; 7e8 <deregister_tm_clones+0x3c>
     7c4:	add	r3, pc, r3
     7c8:	bxeq	lr
     7cc:	ldr	r2, [pc, #24]	; 7ec <deregister_tm_clones+0x40>
     7d0:	ldr	r3, [r3, r2]
     7d4:	cmp	r3, #0
     7d8:	bxeq	lr
     7dc:	bx	r3
     7e0:	.word	0x00011928
     7e4:	.word	0x00011924
     7e8:	.word	0x00011834
     7ec:	.word	0x0000006c

000007f0 <register_tm_clones>:
     7f0:	ldr	r0, [pc, #56]	; 830 <register_tm_clones+0x40>
     7f4:	ldr	r3, [pc, #56]	; 834 <register_tm_clones+0x44>
     7f8:	add	r0, pc, r0
     7fc:	add	r3, pc, r3
     800:	sub	r1, r3, r0
     804:	ldr	r3, [pc, #44]	; 838 <register_tm_clones+0x48>
     808:	asr	r1, r1, #2
     80c:	add	r3, pc, r3
     810:	add	r1, r1, r1, lsr #31
     814:	asrs	r1, r1, #1
     818:	bxeq	lr
     81c:	ldr	r2, [pc, #24]	; 83c <register_tm_clones+0x4c>
     820:	ldr	r3, [r3, r2]
     824:	cmp	r3, #0
     828:	bxeq	lr
     82c:	bx	r3
     830:	.word	0x000118e4
     834:	.word	0x000118e0
     838:	.word	0x000117ec
     83c:	.word	0x00000074

00000840 <__do_global_dtors_aux>:
     840:	ldr	r3, [pc, #76]	; 894 <__do_global_dtors_aux+0x54>
     844:	ldr	r2, [pc, #76]	; 898 <__do_global_dtors_aux+0x58>
     848:	add	r3, pc, r3
     84c:	add	r2, pc, r2
     850:	ldrb	r3, [r3]
     854:	cmp	r3, #0
     858:	bxne	lr
     85c:	ldr	r3, [pc, #56]	; 89c <__do_global_dtors_aux+0x5c>
     860:	push	{r4, lr}
     864:	ldr	r3, [r2, r3]
     868:	cmp	r3, #0
     86c:	beq	87c <__do_global_dtors_aux+0x3c>
     870:	ldr	r3, [pc, #40]	; 8a0 <__do_global_dtors_aux+0x60>
     874:	ldr	r0, [pc, r3]
     878:	bl	68c <__cxa_finalize@plt>
     87c:	bl	7ac <deregister_tm_clones>
     880:	ldr	r3, [pc, #28]	; 8a4 <__do_global_dtors_aux+0x64>
     884:	mov	r2, #1
     888:	add	r3, pc, r3
     88c:	strb	r2, [r3]
     890:	pop	{r4, pc}
     894:	.word	0x00011894
     898:	.word	0x000117ac
     89c:	.word	0x00000068
     8a0:	.word	0x000117fc
     8a4:	.word	0x00011854

000008a8 <frame_dummy>:
     8a8:	b	7f0 <register_tm_clones>

000008ac <ipfw_daq_get_setup>:
     8ac:	str	fp, [sp, #-8]!
     8b0:	str	lr, [sp, #4]
     8b4:	add	fp, sp, #4
     8b8:	sub	sp, sp, #32
     8bc:	str	r0, [fp, #-16]
     8c0:	str	r1, [fp, #-20]	; 0xffffffec
     8c4:	str	r2, [fp, #-24]	; 0xffffffe8
     8c8:	str	r3, [fp, #-28]	; 0xffffffe4
     8cc:	ldr	r3, [fp, #-16]
     8d0:	mov	r2, #2
     8d4:	str	r2, [r3, #8]
     8d8:	ldr	r3, [fp, #-16]
     8dc:	mov	r2, #8000	; 0x1f40
     8e0:	str	r2, [r3, #4]
     8e4:	ldr	r3, [fp, #-20]	; 0xffffffec
     8e8:	ldr	r3, [r3, #20]
     8ec:	str	r3, [fp, #-8]
     8f0:	b	a48 <ipfw_daq_get_setup+0x19c>
     8f4:	ldr	r3, [fp, #-8]
     8f8:	ldr	r3, [r3, #4]
     8fc:	cmp	r3, #0
     900:	beq	918 <ipfw_daq_get_setup+0x6c>
     904:	ldr	r3, [fp, #-8]
     908:	ldr	r3, [r3, #4]
     90c:	ldrb	r3, [r3]
     910:	cmp	r3, #0
     914:	bne	948 <ipfw_daq_get_setup+0x9c>
     918:	ldr	r3, [fp, #-8]
     91c:	ldr	r3, [r3]
     920:	str	r3, [sp]
     924:	ldr	r3, [pc, #496]	; b1c <ipfw_daq_get_setup+0x270>
     928:	add	r3, pc, r3
     92c:	ldr	r2, [pc, #492]	; b20 <ipfw_daq_get_setup+0x274>
     930:	add	r2, pc, r2
     934:	ldr	r1, [fp, #-28]	; 0xffffffe4
     938:	ldr	r0, [fp, #-24]	; 0xffffffe8
     93c:	bl	734 <snprintf@plt>
     940:	mvn	r3, #0
     944:	b	b08 <ipfw_daq_get_setup+0x25c>
     948:	ldr	r3, [fp, #-8]
     94c:	ldr	r3, [r3]
     950:	ldr	r2, [pc, #460]	; b24 <ipfw_daq_get_setup+0x278>
     954:	add	r2, pc, r2
     958:	mov	r1, r2
     95c:	mov	r0, r3
     960:	bl	680 <strcmp@plt>
     964:	mov	r3, r0
     968:	cmp	r3, #0
     96c:	bne	a00 <ipfw_daq_get_setup+0x154>
     970:	ldr	r3, [fp, #-8]
     974:	ldr	r3, [r3, #4]
     978:	str	r3, [fp, #-12]
     97c:	ldr	r3, [fp, #-8]
     980:	ldr	r3, [r3, #4]
     984:	sub	r1, fp, #12
     988:	mov	r2, #0
     98c:	mov	r0, r3
     990:	bl	698 <strtol@plt>
     994:	mov	r2, r0
     998:	ldr	r3, [fp, #-16]
     99c:	str	r2, [r3, #4]
     9a0:	ldr	r3, [fp, #-12]
     9a4:	ldrb	r3, [r3]
     9a8:	cmp	r3, #0
     9ac:	bne	9d0 <ipfw_daq_get_setup+0x124>
     9b0:	ldr	r3, [fp, #-16]
     9b4:	ldr	r3, [r3, #4]
     9b8:	cmp	r3, #0
     9bc:	ble	9d0 <ipfw_daq_get_setup+0x124>
     9c0:	ldr	r3, [fp, #-16]
     9c4:	ldr	r3, [r3, #4]
     9c8:	cmp	r3, #65536	; 0x10000
     9cc:	blt	a3c <ipfw_daq_get_setup+0x190>
     9d0:	ldr	r3, [fp, #-8]
     9d4:	ldr	r3, [r3, #4]
     9d8:	str	r3, [sp]
     9dc:	ldr	r3, [pc, #324]	; b28 <ipfw_daq_get_setup+0x27c>
     9e0:	add	r3, pc, r3
     9e4:	ldr	r2, [pc, #320]	; b2c <ipfw_daq_get_setup+0x280>
     9e8:	add	r2, pc, r2
     9ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
     9f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
     9f4:	bl	734 <snprintf@plt>
     9f8:	mvn	r3, #0
     9fc:	b	b08 <ipfw_daq_get_setup+0x25c>
     a00:	ldr	r3, [fp, #-8]
     a04:	ldr	r3, [r3]
     a08:	ldr	r2, [fp, #-8]
     a0c:	ldr	r2, [r2, #4]
     a10:	str	r2, [sp, #4]
     a14:	str	r3, [sp]
     a18:	ldr	r3, [pc, #272]	; b30 <ipfw_daq_get_setup+0x284>
     a1c:	add	r3, pc, r3
     a20:	ldr	r2, [pc, #268]	; b34 <ipfw_daq_get_setup+0x288>
     a24:	add	r2, pc, r2
     a28:	ldr	r1, [fp, #-28]	; 0xffffffe4
     a2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     a30:	bl	734 <snprintf@plt>
     a34:	mvn	r3, #0
     a38:	b	b08 <ipfw_daq_get_setup+0x25c>
     a3c:	ldr	r3, [fp, #-8]
     a40:	ldr	r3, [r3, #8]
     a44:	str	r3, [fp, #-8]
     a48:	ldr	r3, [fp, #-8]
     a4c:	cmp	r3, #0
     a50:	bne	8f4 <ipfw_daq_get_setup+0x48>
     a54:	ldr	r3, [fp, #-20]	; 0xffffffec
     a58:	ldr	r3, [r3, #4]
     a5c:	cmp	r3, #0
     a60:	beq	a74 <ipfw_daq_get_setup+0x1c8>
     a64:	ldr	r3, [fp, #-20]	; 0xffffffec
     a68:	ldr	r3, [r3, #4]
     a6c:	mov	r2, r3
     a70:	b	a78 <ipfw_daq_get_setup+0x1cc>
     a74:	movw	r2, #65535	; 0xffff
     a78:	ldr	r3, [fp, #-16]
     a7c:	str	r2, [r3, #24]
     a80:	ldr	r3, [fp, #-20]	; 0xffffffec
     a84:	ldr	r2, [r3, #8]
     a88:	ldr	r3, [fp, #-16]
     a8c:	str	r2, [r3, #20]
     a90:	ldr	r3, [fp, #-20]	; 0xffffffec
     a94:	ldr	r3, [r3, #12]
     a98:	cmp	r3, #0
     a9c:	moveq	r3, #1
     aa0:	movne	r3, #0
     aa4:	uxtb	r3, r3
     aa8:	mov	r2, r3
     aac:	ldr	r3, [fp, #-16]
     ab0:	str	r2, [r3, #16]
     ab4:	ldr	r3, [fp, #-16]
     ab8:	ldr	r3, [r3, #8]
     abc:	uxth	r2, r3
     ac0:	ldr	r3, [fp, #-16]
     ac4:	add	r3, r3, #300	; 0x12c
     ac8:	strh	r2, [r3]
     acc:	ldr	r3, [fp, #-16]
     ad0:	mov	r2, #0
     ad4:	str	r2, [r3, #304]	; 0x130
     ad8:	ldr	r3, [fp, #-16]
     adc:	ldr	r3, [r3, #4]
     ae0:	uxth	r3, r3
     ae4:	mov	r0, r3
     ae8:	bl	6e0 <htons@plt>
     aec:	mov	r3, r0
     af0:	mov	r2, r3
     af4:	ldr	r3, [fp, #-16]
     af8:	add	r3, r3, #300	; 0x12c
     afc:	add	r3, r3, #2
     b00:	strh	r2, [r3]
     b04:	mov	r3, #0
     b08:	mov	r0, r3
     b0c:	sub	sp, fp, #4
     b10:	ldr	fp, [sp]
     b14:	add	sp, sp, #4
     b18:	pop	{pc}		; (ldr pc, [sp], #4)
     b1c:	.word	0x00001110
     b20:	.word	0x00000f64
     b24:	.word	0x00000f60
     b28:	.word	0x00001058
     b2c:	.word	0x00000ed4
     b30:	.word	0x0000101c
     b34:	.word	0x00000eac

00000b38 <ipfw_daq_initialize>:
     b38:	str	fp, [sp, #-8]!
     b3c:	str	lr, [sp, #4]
     b40:	add	fp, sp, #4
     b44:	sub	sp, sp, #24
     b48:	str	r0, [fp, #-16]
     b4c:	str	r1, [fp, #-20]	; 0xffffffec
     b50:	str	r2, [fp, #-24]	; 0xffffffe8
     b54:	str	r3, [fp, #-28]	; 0xffffffe4
     b58:	mov	r1, #416	; 0x1a0
     b5c:	mov	r0, #1
     b60:	bl	674 <calloc@plt>
     b64:	mov	r3, r0
     b68:	str	r3, [fp, #-8]
     b6c:	ldr	r3, [fp, #-8]
     b70:	cmp	r3, #0
     b74:	bne	b9c <ipfw_daq_initialize+0x64>
     b78:	ldr	r3, [pc, #228]	; c64 <ipfw_daq_initialize+0x12c>
     b7c:	add	r3, pc, r3
     b80:	ldr	r2, [pc, #224]	; c68 <ipfw_daq_initialize+0x130>
     b84:	add	r2, pc, r2
     b88:	ldr	r1, [fp, #-28]	; 0xffffffe4
     b8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     b90:	bl	734 <snprintf@plt>
     b94:	mvn	r3, #1
     b98:	b	c50 <ipfw_daq_initialize+0x118>
     b9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     ba0:	ldr	r2, [fp, #-24]	; 0xffffffe8
     ba4:	ldr	r1, [fp, #-16]
     ba8:	ldr	r0, [fp, #-8]
     bac:	bl	8ac <ipfw_daq_get_setup>
     bb0:	mov	r3, r0
     bb4:	cmp	r3, #0
     bb8:	beq	bcc <ipfw_daq_initialize+0x94>
     bbc:	ldr	r0, [fp, #-8]
     bc0:	bl	c74 <ipfw_daq_shutdown>
     bc4:	mvn	r3, #0
     bc8:	b	c50 <ipfw_daq_initialize+0x118>
     bcc:	ldr	r3, [fp, #-8]
     bd0:	ldr	r3, [r3, #24]
     bd4:	mov	r0, r3
     bd8:	bl	6f8 <malloc@plt>
     bdc:	mov	r3, r0
     be0:	mov	r2, r3
     be4:	ldr	r3, [fp, #-8]
     be8:	str	r2, [r3, #28]
     bec:	ldr	r3, [fp, #-8]
     bf0:	ldr	r3, [r3, #28]
     bf4:	cmp	r3, #0
     bf8:	bne	c28 <ipfw_daq_initialize+0xf0>
     bfc:	ldr	r3, [pc, #104]	; c6c <ipfw_daq_initialize+0x134>
     c00:	add	r3, pc, r3
     c04:	ldr	r2, [pc, #100]	; c70 <ipfw_daq_initialize+0x138>
     c08:	add	r2, pc, r2
     c0c:	ldr	r1, [fp, #-28]	; 0xffffffe4
     c10:	ldr	r0, [fp, #-24]	; 0xffffffe8
     c14:	bl	734 <snprintf@plt>
     c18:	ldr	r0, [fp, #-8]
     c1c:	bl	c74 <ipfw_daq_shutdown>
     c20:	mvn	r3, #1
     c24:	b	c50 <ipfw_daq_initialize+0x118>
     c28:	ldr	r3, [fp, #-8]
     c2c:	mvn	r2, #0
     c30:	str	r2, [r3]
     c34:	ldr	r3, [fp, #-8]
     c38:	mov	r2, #1
     c3c:	str	r2, [r3, #316]	; 0x13c
     c40:	ldr	r3, [fp, #-20]	; 0xffffffec
     c44:	ldr	r2, [fp, #-8]
     c48:	str	r2, [r3]
     c4c:	mov	r3, #0
     c50:	mov	r0, r3
     c54:	sub	sp, fp, #4
     c58:	ldr	fp, [sp]
     c5c:	add	sp, sp, #4
     c60:	pop	{pc}		; (ldr pc, [sp], #4)
     c64:	.word	0x00000ed0
     c68:	.word	0x00000d70
     c6c:	.word	0x00000e4c
     c70:	.word	0x00000d18

00000c74 <ipfw_daq_shutdown>:
     c74:	str	fp, [sp, #-8]!
     c78:	str	lr, [sp, #4]
     c7c:	add	fp, sp, #4
     c80:	sub	sp, sp, #16
     c84:	str	r0, [fp, #-16]
     c88:	ldr	r3, [fp, #-16]
     c8c:	str	r3, [fp, #-8]
     c90:	ldr	r3, [fp, #-8]
     c94:	ldr	r3, [r3, #32]
     c98:	cmp	r3, #0
     c9c:	beq	cb0 <ipfw_daq_shutdown+0x3c>
     ca0:	ldr	r3, [fp, #-8]
     ca4:	ldr	r3, [r3, #32]
     ca8:	mov	r0, r3
     cac:	bl	6a4 <free@plt>
     cb0:	ldr	r3, [fp, #-8]
     cb4:	ldr	r3, [r3, #28]
     cb8:	cmp	r3, #0
     cbc:	beq	cd0 <ipfw_daq_shutdown+0x5c>
     cc0:	ldr	r3, [fp, #-8]
     cc4:	ldr	r3, [r3, #28]
     cc8:	mov	r0, r3
     ccc:	bl	6a4 <free@plt>
     cd0:	ldr	r0, [fp, #-8]
     cd4:	bl	6a4 <free@plt>
     cd8:	nop	{0}
     cdc:	sub	sp, fp, #4
     ce0:	ldr	fp, [sp]
     ce4:	add	sp, sp, #4
     ce8:	pop	{pc}		; (ldr pc, [sp], #4)

00000cec <ipfw_daq_set_filter>:
     cec:	str	fp, [sp, #-8]!
     cf0:	str	lr, [sp, #4]
     cf4:	add	fp, sp, #4
     cf8:	sub	sp, sp, #32
     cfc:	str	r0, [fp, #-24]	; 0xffffffe8
     d00:	str	r1, [fp, #-28]	; 0xffffffe4
     d04:	ldr	r3, [fp, #-24]	; 0xffffffe8
     d08:	str	r3, [fp, #-8]
     d0c:	ldr	r3, [fp, #-8]
     d10:	ldr	r3, [r3, #24]
     d14:	mov	r0, r3
     d18:	sub	r2, fp, #16
     d1c:	mov	r3, #0
     d20:	str	r3, [sp, #4]
     d24:	mov	r3, #1
     d28:	str	r3, [sp]
     d2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     d30:	mov	r1, #228	; 0xe4
     d34:	bl	704 <sfbpf_compile@plt>
     d38:	mov	r3, r0
     d3c:	cmp	r3, #0
     d40:	bge	d4c <ipfw_daq_set_filter+0x60>
     d44:	mvn	r3, #0
     d48:	b	dbc <ipfw_daq_set_filter+0xd0>
     d4c:	ldr	r3, [fp, #-8]
     d50:	ldr	r3, [r3, #32]
     d54:	cmp	r3, #0
     d58:	beq	d6c <ipfw_daq_set_filter+0x80>
     d5c:	ldr	r3, [fp, #-8]
     d60:	ldr	r3, [r3, #32]
     d64:	mov	r0, r3
     d68:	bl	6a4 <free@plt>
     d6c:	ldr	r3, [fp, #-8]
     d70:	ldr	r3, [r3, #296]	; 0x128
     d74:	cmp	r3, #0
     d78:	beq	d8c <ipfw_daq_set_filter+0xa0>
     d7c:	ldr	r3, [fp, #-8]
     d80:	ldr	r3, [r3, #296]	; 0x128
     d84:	mov	r0, r3
     d88:	bl	6a4 <free@plt>
     d8c:	ldr	r0, [fp, #-28]	; 0xffffffe4
     d90:	bl	6d4 <strdup@plt>
     d94:	mov	r3, r0
     d98:	mov	r2, r3
     d9c:	ldr	r3, [fp, #-8]
     da0:	str	r2, [r3, #32]
     da4:	ldr	r3, [fp, #-8]
     da8:	add	r1, r3, #292	; 0x124
     dac:	sub	r3, fp, #16
     db0:	ldrd	r2, [r3]
     db4:	strd	r2, [r1]
     db8:	mov	r3, #0
     dbc:	mov	r0, r3
     dc0:	sub	sp, fp, #4
     dc4:	ldr	fp, [sp]
     dc8:	add	sp, sp, #4
     dcc:	pop	{pc}		; (ldr pc, [sp], #4)

00000dd0 <ipfw_daq_start>:
     dd0:	str	r4, [sp, #-12]!
     dd4:	str	fp, [sp, #4]
     dd8:	str	lr, [sp, #8]
     ddc:	add	fp, sp, #8
     de0:	sub	sp, sp, #28
     de4:	str	r0, [fp, #-24]	; 0xffffffe8
     de8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     dec:	str	r3, [fp, #-16]
     df0:	ldr	r3, [fp, #-16]
     df4:	ldr	r3, [r3, #8]
     df8:	mov	r2, #254	; 0xfe
     dfc:	mov	r1, #3
     e00:	mov	r0, r3
     e04:	bl	770 <socket@plt>
     e08:	mov	r2, r0
     e0c:	ldr	r3, [fp, #-16]
     e10:	str	r2, [r3]
     e14:	ldr	r3, [fp, #-16]
     e18:	ldr	r3, [r3]
     e1c:	cmn	r3, #1
     e20:	bne	e6c <ipfw_daq_start+0x9c>
     e24:	ldr	r3, [fp, #-16]
     e28:	add	r4, r3, #36	; 0x24
     e2c:	bl	728 <__errno_location@plt>
     e30:	mov	r3, r0
     e34:	ldr	r3, [r3]
     e38:	mov	r0, r3
     e3c:	bl	710 <strerror@plt>
     e40:	mov	r3, r0
     e44:	str	r3, [sp]
     e48:	ldr	r3, [pc, #180]	; f04 <ipfw_daq_start+0x134>
     e4c:	add	r3, pc, r3
     e50:	ldr	r2, [pc, #176]	; f08 <ipfw_daq_start+0x138>
     e54:	add	r2, pc, r2
     e58:	mov	r1, #256	; 0x100
     e5c:	mov	r0, r4
     e60:	bl	734 <snprintf@plt>
     e64:	mvn	r3, #0
     e68:	b	eec <ipfw_daq_start+0x11c>
     e6c:	ldr	r3, [fp, #-16]
     e70:	ldr	r0, [r3]
     e74:	ldr	r3, [fp, #-16]
     e78:	add	r3, r3, #300	; 0x12c
     e7c:	mov	r2, #16
     e80:	mov	r1, r3
     e84:	bl	740 <bind@plt>
     e88:	mov	r3, r0
     e8c:	cmn	r3, #1
     e90:	bne	edc <ipfw_daq_start+0x10c>
     e94:	ldr	r3, [fp, #-16]
     e98:	add	r4, r3, #36	; 0x24
     e9c:	bl	728 <__errno_location@plt>
     ea0:	mov	r3, r0
     ea4:	ldr	r3, [r3]
     ea8:	mov	r0, r3
     eac:	bl	710 <strerror@plt>
     eb0:	mov	r3, r0
     eb4:	str	r3, [sp]
     eb8:	ldr	r3, [pc, #76]	; f0c <ipfw_daq_start+0x13c>
     ebc:	add	r3, pc, r3
     ec0:	ldr	r2, [pc, #72]	; f10 <ipfw_daq_start+0x140>
     ec4:	add	r2, pc, r2
     ec8:	mov	r1, #256	; 0x100
     ecc:	mov	r0, r4
     ed0:	bl	734 <snprintf@plt>
     ed4:	mvn	r3, #0
     ed8:	b	eec <ipfw_daq_start+0x11c>
     edc:	ldr	r3, [fp, #-16]
     ee0:	mov	r2, #2
     ee4:	str	r2, [r3, #316]	; 0x13c
     ee8:	mov	r3, #0
     eec:	mov	r0, r3
     ef0:	sub	sp, fp, #8
     ef4:	ldr	r4, [sp]
     ef8:	ldr	fp, [sp, #4]
     efc:	add	sp, sp, #8
     f00:	pop	{pc}		; (ldr pc, [sp], #4)
     f04:	.word	0x00000c14
     f08:	.word	0x00000af4
     f0c:	.word	0x00000ba4
     f10:	.word	0x00000aac

00000f14 <ipfw_daq_stop>:
     f14:	str	fp, [sp, #-8]!
     f18:	str	lr, [sp, #4]
     f1c:	add	fp, sp, #4
     f20:	sub	sp, sp, #16
     f24:	str	r0, [fp, #-16]
     f28:	ldr	r3, [fp, #-16]
     f2c:	str	r3, [fp, #-8]
     f30:	ldr	r3, [fp, #-8]
     f34:	ldr	r3, [r3]
     f38:	mov	r0, r3
     f3c:	bl	77c <close@plt>
     f40:	ldr	r3, [fp, #-8]
     f44:	mvn	r2, #0
     f48:	str	r2, [r3]
     f4c:	ldr	r3, [fp, #-8]
     f50:	mov	r2, #3
     f54:	str	r2, [r3, #316]	; 0x13c
     f58:	mov	r3, #0
     f5c:	mov	r0, r3
     f60:	sub	sp, fp, #4
     f64:	ldr	fp, [sp]
     f68:	add	sp, sp, #4
     f6c:	pop	{pc}		; (ldr pc, [sp], #4)

00000f70 <ipfw_daq_forward>:
     f70:	str	r4, [sp, #-12]!
     f74:	str	fp, [sp, #4]
     f78:	str	lr, [sp, #8]
     f7c:	add	fp, sp, #8
     f80:	sub	sp, sp, #36	; 0x24
     f84:	str	r0, [fp, #-24]	; 0xffffffe8
     f88:	str	r1, [fp, #-28]	; 0xffffffe4
     f8c:	str	r2, [fp, #-32]	; 0xffffffe0
     f90:	str	r3, [fp, #-36]	; 0xffffffdc
     f94:	ldr	r3, [fp, #-24]	; 0xffffffe8
     f98:	ldr	r0, [r3]
     f9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     fa0:	add	r3, r3, #300	; 0x12c
     fa4:	mov	r2, r3
     fa8:	mov	r3, #16
     fac:	str	r3, [sp, #4]
     fb0:	str	r2, [sp]
     fb4:	mov	r3, #0
     fb8:	ldr	r2, [fp, #-36]	; 0xffffffdc
     fbc:	ldr	r1, [fp, #-32]	; 0xffffffe0
     fc0:	bl	758 <sendto@plt>
     fc4:	str	r0, [fp, #-16]
     fc8:	ldr	r3, [fp, #-16]
     fcc:	cmn	r3, #1
     fd0:	bne	101c <ipfw_daq_forward+0xac>
     fd4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     fd8:	add	r4, r3, #36	; 0x24
     fdc:	bl	728 <__errno_location@plt>
     fe0:	mov	r3, r0
     fe4:	ldr	r3, [r3]
     fe8:	mov	r0, r3
     fec:	bl	710 <strerror@plt>
     ff0:	mov	r3, r0
     ff4:	str	r3, [sp]
     ff8:	ldr	r3, [pc, #56]	; 1038 <ipfw_daq_forward+0xc8>
     ffc:	add	r3, pc, r3
    1000:	ldr	r2, [pc, #52]	; 103c <ipfw_daq_forward+0xcc>
    1004:	add	r2, pc, r2
    1008:	mov	r1, #256	; 0x100
    100c:	mov	r0, r4
    1010:	bl	734 <snprintf@plt>
    1014:	mvn	r3, #0
    1018:	b	1020 <ipfw_daq_forward+0xb0>
    101c:	mov	r3, #0
    1020:	mov	r0, r3
    1024:	sub	sp, fp, #8
    1028:	ldr	r4, [sp]
    102c:	ldr	fp, [sp, #4]
    1030:	add	sp, sp, #8
    1034:	pop	{pc}		; (ldr pc, [sp], #4)
    1038:	.word	0x00000a74
    103c:	.word	0x00000990

00001040 <ipfw_daq_inject>:
    1040:	strd	r4, [sp, #-16]!
    1044:	str	fp, [sp, #8]
    1048:	str	lr, [sp, #12]
    104c:	add	fp, sp, #12
    1050:	sub	sp, sp, #32
    1054:	str	r0, [fp, #-24]	; 0xffffffe8
    1058:	str	r1, [fp, #-28]	; 0xffffffe4
    105c:	str	r2, [fp, #-32]	; 0xffffffe0
    1060:	str	r3, [fp, #-36]	; 0xffffffdc
    1064:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1068:	str	r3, [fp, #-16]
    106c:	mov	r3, #0
    1070:	str	r3, [sp]
    1074:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1078:	ldr	r2, [fp, #-32]	; 0xffffffe0
    107c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1080:	ldr	r0, [fp, #-16]
    1084:	bl	f70 <ipfw_daq_forward>
    1088:	str	r0, [fp, #-20]	; 0xffffffec
    108c:	ldr	r3, [fp, #-20]	; 0xffffffec
    1090:	cmp	r3, #0
    1094:	bne	10b8 <ipfw_daq_inject+0x78>
    1098:	ldr	r3, [fp, #-16]
    109c:	add	r3, r3, #352	; 0x160
    10a0:	ldrd	r2, [r3]
    10a4:	adds	r4, r2, #1
    10a8:	adc	r5, r3, #0
    10ac:	ldr	r3, [fp, #-16]
    10b0:	add	r3, r3, #352	; 0x160
    10b4:	strd	r4, [r3]
    10b8:	ldr	r3, [fp, #-20]	; 0xffffffec
    10bc:	mov	r0, r3
    10c0:	sub	sp, fp, #12
    10c4:	ldrd	r4, [sp]
    10c8:	ldr	fp, [sp, #8]
    10cc:	add	sp, sp, #12
    10d0:	pop	{pc}		; (ldr pc, [sp], #4)

000010d4 <SetPktHdr>:
    10d4:	str	fp, [sp, #-8]!
    10d8:	str	lr, [sp, #4]
    10dc:	add	fp, sp, #4
    10e0:	sub	sp, sp, #8
    10e4:	str	r0, [fp, #-8]
    10e8:	str	r1, [fp, #-12]
    10ec:	mov	r2, #8
    10f0:	mov	r1, #0
    10f4:	ldr	r3, [pc, #184]	; 11b4 <SetPktHdr+0xe0>
    10f8:	add	r3, pc, r3
    10fc:	mov	r0, r3
    1100:	bl	74c <memset@plt>
    1104:	mov	r1, #0
    1108:	ldr	r3, [pc, #168]	; 11b8 <SetPktHdr+0xe4>
    110c:	add	r3, pc, r3
    1110:	mov	r0, r3
    1114:	bl	6ec <gettimeofday@plt>
    1118:	ldr	r3, [pc, #156]	; 11bc <SetPktHdr+0xe8>
    111c:	add	r3, pc, r3
    1120:	ldr	r2, [r3]
    1124:	ldr	r3, [fp, #-8]
    1128:	str	r2, [r3]
    112c:	ldr	r3, [pc, #140]	; 11c0 <SetPktHdr+0xec>
    1130:	add	r3, pc, r3
    1134:	ldr	r2, [r3, #4]
    1138:	ldr	r3, [fp, #-8]
    113c:	str	r2, [r3, #4]
    1140:	ldr	r2, [fp, #-12]
    1144:	ldr	r3, [fp, #-8]
    1148:	str	r2, [r3, #8]
    114c:	ldr	r2, [fp, #-12]
    1150:	ldr	r3, [fp, #-8]
    1154:	str	r2, [r3, #12]
    1158:	ldr	r3, [fp, #-8]
    115c:	mvn	r2, #0
    1160:	str	r2, [r3, #16]
    1164:	ldr	r3, [fp, #-8]
    1168:	mvn	r2, #0
    116c:	str	r2, [r3, #20]
    1170:	ldr	r3, [fp, #-8]
    1174:	mvn	r2, #0
    1178:	str	r2, [r3, #24]
    117c:	ldr	r3, [fp, #-8]
    1180:	mvn	r2, #0
    1184:	str	r2, [r3, #28]
    1188:	ldr	r3, [fp, #-8]
    118c:	mov	r2, #0
    1190:	str	r2, [r3, #32]
    1194:	ldr	r3, [fp, #-8]
    1198:	mov	r2, #0
    119c:	strh	r2, [r3, #48]	; 0x30
    11a0:	nop	{0}
    11a4:	sub	sp, fp, #4
    11a8:	ldr	fp, [sp]
    11ac:	add	sp, sp, #4
    11b0:	pop	{pc}		; (ldr pc, [sp], #4)
    11b4:	.word	0x00010fe8
    11b8:	.word	0x00010fd4
    11bc:	.word	0x00010fc4
    11c0:	.word	0x00010fb0

000011c4 <ipfw_daq_acquire>:
    11c4:	strd	r4, [sp, #-32]!	; 0xffffffe0
    11c8:	strd	r6, [sp, #8]
    11cc:	strd	r8, [sp, #16]
    11d0:	str	fp, [sp, #24]
    11d4:	str	lr, [sp, #28]
    11d8:	add	fp, sp, #28
    11dc:	sub	sp, sp, #248	; 0xf8
    11e0:	str	r0, [fp, #-248]	; 0xffffff08
    11e4:	str	r1, [fp, #-252]	; 0xffffff04
    11e8:	str	r2, [fp, #-256]	; 0xffffff00
    11ec:	str	r3, [fp, #-260]	; 0xfffffefc
    11f0:	ldr	r3, [fp, #-248]	; 0xffffff08
    11f4:	str	r3, [fp, #-44]	; 0xffffffd4
    11f8:	mov	r3, #0
    11fc:	str	r3, [fp, #-32]	; 0xffffffe0
    1200:	mov	r3, #0
    1204:	str	r3, [fp, #-184]	; 0xffffff48
    1208:	ldr	r3, [fp, #-252]	; 0xffffff04
    120c:	cmp	r3, #0
    1210:	beq	121c <ipfw_daq_acquire+0x58>
    1214:	ldr	r3, [fp, #-252]	; 0xffffff04
    1218:	b	1220 <ipfw_daq_acquire+0x5c>
    121c:	mvn	r3, #0
    1220:	ldr	r2, [fp, #-44]	; 0xffffffd4
    1224:	str	r3, [r2, #12]
    1228:	b	15ec <ipfw_daq_acquire+0x428>
    122c:	sub	r3, fp, #180	; 0xb4
    1230:	str	r3, [fp, #-48]	; 0xffffffd0
    1234:	mov	r3, #0
    1238:	str	r3, [fp, #-36]	; 0xffffffdc
    123c:	b	125c <ipfw_daq_acquire+0x98>
    1240:	ldr	r3, [fp, #-48]	; 0xffffffd0
    1244:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1248:	mov	r1, #0
    124c:	str	r1, [r3, r2, lsl #2]
    1250:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1254:	add	r3, r3, #1
    1258:	str	r3, [fp, #-36]	; 0xffffffdc
    125c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1260:	cmp	r3, #31
    1264:	bls	1240 <ipfw_daq_acquire+0x7c>
    1268:	ldr	r3, [fp, #-44]	; 0xffffffd4
    126c:	ldr	r3, [r3]
    1270:	add	r2, r3, #31
    1274:	cmp	r3, #0
    1278:	movlt	r3, r2
    127c:	movge	r3, r3
    1280:	asr	r3, r3, #5
    1284:	mov	r2, r3
    1288:	lsl	r3, r2, #2
    128c:	sub	r1, fp, #28
    1290:	add	r3, r1, r3
    1294:	ldr	r1, [r3, #-152]	; 0xffffff68
    1298:	ldr	r3, [fp, #-44]	; 0xffffffd4
    129c:	ldr	r3, [r3]
    12a0:	rsbs	r0, r3, #0
    12a4:	and	r3, r3, #31
    12a8:	and	r0, r0, #31
    12ac:	rsbpl	r3, r0, #0
    12b0:	mov	r0, #1
    12b4:	lsl	r3, r0, r3
    12b8:	orr	r1, r1, r3
    12bc:	lsl	r3, r2, #2
    12c0:	sub	r2, fp, #28
    12c4:	add	r3, r2, r3
    12c8:	str	r1, [r3, #-152]	; 0xffffff68
    12cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
    12d0:	ldr	r3, [r3, #20]
    12d4:	str	r3, [fp, #-188]	; 0xffffff44
    12d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    12dc:	ldr	r3, [r3]
    12e0:	add	r0, r3, #1
    12e4:	sub	r1, fp, #180	; 0xb4
    12e8:	sub	r3, fp, #188	; 0xbc
    12ec:	str	r3, [sp]
    12f0:	mov	r3, #0
    12f4:	mov	r2, #0
    12f8:	bl	6bc <select@plt>
    12fc:	mov	r3, r0
    1300:	cmp	r3, #0
    1304:	bge	1364 <ipfw_daq_acquire+0x1a0>
    1308:	bl	728 <__errno_location@plt>
    130c:	mov	r3, r0
    1310:	ldr	r3, [r3]
    1314:	cmp	r3, #4
    1318:	beq	1614 <ipfw_daq_acquire+0x450>
    131c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1320:	add	r4, r3, #36	; 0x24
    1324:	bl	728 <__errno_location@plt>
    1328:	mov	r3, r0
    132c:	ldr	r3, [r3]
    1330:	mov	r0, r3
    1334:	bl	710 <strerror@plt>
    1338:	mov	r3, r0
    133c:	str	r3, [sp]
    1340:	ldr	r3, [pc, #756]	; 163c <ipfw_daq_acquire+0x478>
    1344:	add	r3, pc, r3
    1348:	ldr	r2, [pc, #752]	; 1640 <ipfw_daq_acquire+0x47c>
    134c:	add	r2, pc, r2
    1350:	mov	r1, #256	; 0x100
    1354:	mov	r0, r4
    1358:	bl	734 <snprintf@plt>
    135c:	mvn	r3, #0
    1360:	b	161c <ipfw_daq_acquire+0x458>
    1364:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1368:	ldr	r3, [r3]
    136c:	add	r2, r3, #31
    1370:	cmp	r3, #0
    1374:	movlt	r3, r2
    1378:	movge	r3, r3
    137c:	asr	r3, r3, #5
    1380:	lsl	r3, r3, #2
    1384:	sub	r2, fp, #28
    1388:	add	r3, r2, r3
    138c:	ldr	r2, [r3, #-152]	; 0xffffff68
    1390:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1394:	ldr	r3, [r3]
    1398:	rsbs	r1, r3, #0
    139c:	and	r3, r3, #31
    13a0:	and	r1, r1, #31
    13a4:	rsbpl	r3, r1, #0
    13a8:	mov	r1, #1
    13ac:	lsl	r3, r1, r3
    13b0:	and	r3, r3, r2
    13b4:	cmp	r3, #0
    13b8:	beq	15ec <ipfw_daq_acquire+0x428>
    13bc:	mov	r3, #16
    13c0:	str	r3, [fp, #-192]	; 0xffffff40
    13c4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    13c8:	ldr	r0, [r3]
    13cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
    13d0:	ldr	r1, [r3, #28]
    13d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
    13d8:	ldr	r2, [r3, #24]
    13dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
    13e0:	add	r3, r3, #300	; 0x12c
    13e4:	mov	ip, r3
    13e8:	sub	r3, fp, #192	; 0xc0
    13ec:	str	r3, [sp, #4]
    13f0:	str	ip, [sp]
    13f4:	mov	r3, #0
    13f8:	bl	6c8 <recvfrom@plt>
    13fc:	str	r0, [fp, #-52]	; 0xffffffcc
    1400:	ldr	r3, [fp, #-52]	; 0xffffffcc
    1404:	cmn	r3, #1
    1408:	bne	1468 <ipfw_daq_acquire+0x2a4>
    140c:	bl	728 <__errno_location@plt>
    1410:	mov	r3, r0
    1414:	ldr	r3, [r3]
    1418:	cmp	r3, #4
    141c:	beq	1468 <ipfw_daq_acquire+0x2a4>
    1420:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1424:	add	r4, r3, #36	; 0x24
    1428:	bl	728 <__errno_location@plt>
    142c:	mov	r3, r0
    1430:	ldr	r3, [r3]
    1434:	mov	r0, r3
    1438:	bl	710 <strerror@plt>
    143c:	mov	r3, r0
    1440:	str	r3, [sp]
    1444:	ldr	r3, [pc, #504]	; 1644 <ipfw_daq_acquire+0x480>
    1448:	add	r3, pc, r3
    144c:	ldr	r2, [pc, #500]	; 1648 <ipfw_daq_acquire+0x484>
    1450:	add	r2, pc, r2
    1454:	mov	r1, #256	; 0x100
    1458:	mov	r0, r4
    145c:	bl	734 <snprintf@plt>
    1460:	mvn	r3, #0
    1464:	b	161c <ipfw_daq_acquire+0x458>
    1468:	sub	r3, fp, #244	; 0xf4
    146c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    1470:	mov	r0, r3
    1474:	bl	10d4 <SetPktHdr>
    1478:	ldr	r3, [fp, #-44]	; 0xffffffd4
    147c:	add	r3, r3, #320	; 0x140
    1480:	ldrd	r2, [r3]
    1484:	adds	r4, r2, #1
    1488:	adc	r5, r3, #0
    148c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1490:	add	r3, r3, #320	; 0x140
    1494:	strd	r4, [r3]
    1498:	ldr	r3, [fp, #-44]	; 0xffffffd4
    149c:	ldr	r3, [r3, #296]	; 0x128
    14a0:	cmp	r3, #0
    14a4:	beq	14fc <ipfw_daq_acquire+0x338>
    14a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    14ac:	ldr	r0, [r3, #296]	; 0x128
    14b0:	ldr	r3, [fp, #-44]	; 0xffffffd4
    14b4:	ldr	r1, [r3, #28]
    14b8:	ldr	r2, [fp, #-236]	; 0xffffff14
    14bc:	ldr	r3, [fp, #-236]	; 0xffffff14
    14c0:	bl	764 <sfbpf_filter@plt>
    14c4:	mov	r3, r0
    14c8:	cmp	r3, #0
    14cc:	bne	14fc <ipfw_daq_acquire+0x338>
    14d0:	mov	r3, #0
    14d4:	str	r3, [fp, #-40]	; 0xffffffd8
    14d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    14dc:	add	r3, r3, #352	; 0x160
    14e0:	ldrd	r2, [r3, #-8]
    14e4:	adds	r6, r2, #1
    14e8:	adc	r7, r3, #0
    14ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
    14f0:	add	r3, r3, #352	; 0x160
    14f4:	strd	r6, [r3, #-8]
    14f8:	b	1594 <ipfw_daq_acquire+0x3d0>
    14fc:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1500:	ldr	r2, [r3, #28]
    1504:	sub	r1, fp, #244	; 0xf4
    1508:	ldr	r3, [fp, #-256]	; 0xffffff00
    150c:	mov	r0, #0
    1510:	blx	r3
    1514:	str	r0, [fp, #-40]	; 0xffffffd8
    1518:	ldr	r3, [fp, #-40]	; 0xffffffd8
    151c:	cmp	r3, #6
    1520:	bls	152c <ipfw_daq_acquire+0x368>
    1524:	mov	r3, #1
    1528:	str	r3, [fp, #-40]	; 0xffffffd8
    152c:	ldr	r2, [fp, #-44]	; 0xffffffd4
    1530:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1534:	add	r3, r3, #45	; 0x2d
    1538:	lsl	r3, r3, #3
    153c:	add	r3, r2, r3
    1540:	ldrd	r2, [r3]
    1544:	adds	r8, r2, #1
    1548:	adc	r9, r3, #0
    154c:	ldr	r2, [fp, #-44]	; 0xffffffd4
    1550:	ldr	r3, [fp, #-40]	; 0xffffffd8
    1554:	add	r3, r3, #45	; 0x2d
    1558:	lsl	r3, r3, #3
    155c:	add	r3, r2, r3
    1560:	strd	r8, [r3]
    1564:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1568:	add	r3, r3, #336	; 0x150
    156c:	ldrd	r2, [r3]
    1570:	adds	r1, r2, #1
    1574:	str	r1, [fp, #-268]	; 0xfffffef4
    1578:	adc	r3, r3, #0
    157c:	str	r3, [fp, #-264]	; 0xfffffef8
    1580:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1584:	add	r3, r3, #336	; 0x150
    1588:	sub	r2, fp, #268	; 0x10c
    158c:	ldrd	r0, [r2]
    1590:	strd	r0, [r3]
    1594:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1598:	ldr	r3, [r3, #16]
    159c:	cmp	r3, #0
    15a0:	bne	15bc <ipfw_daq_acquire+0x3f8>
    15a4:	ldr	r3, [pc, #160]	; 164c <ipfw_daq_acquire+0x488>
    15a8:	add	r3, pc, r3
    15ac:	ldr	r2, [fp, #-40]	; 0xffffffd8
    15b0:	ldr	r3, [r3, r2, lsl #2]
    15b4:	cmp	r3, #0
    15b8:	beq	15e0 <ipfw_daq_acquire+0x41c>
    15bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
    15c0:	ldr	r2, [r3, #28]
    15c4:	ldr	r0, [fp, #-232]	; 0xffffff18
    15c8:	sub	r1, fp, #244	; 0xf4
    15cc:	mov	r3, #0
    15d0:	str	r3, [sp]
    15d4:	mov	r3, r0
    15d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    15dc:	bl	f70 <ipfw_daq_forward>
    15e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    15e4:	add	r3, r3, #1
    15e8:	str	r3, [fp, #-32]	; 0xffffffe0
    15ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
    15f0:	ldr	r3, [r3, #12]
    15f4:	cmp	r3, #0
    15f8:	blt	122c <ipfw_daq_acquire+0x68>
    15fc:	ldr	r3, [fp, #-44]	; 0xffffffd4
    1600:	ldr	r3, [r3, #12]
    1604:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1608:	cmp	r2, r3
    160c:	blt	122c <ipfw_daq_acquire+0x68>
    1610:	b	1618 <ipfw_daq_acquire+0x454>
    1614:	nop	{0}
    1618:	mov	r3, #0
    161c:	mov	r0, r3
    1620:	sub	sp, fp, #28
    1624:	ldrd	r4, [sp]
    1628:	ldrd	r6, [sp, #8]
    162c:	ldrd	r8, [sp, #16]
    1630:	ldr	fp, [sp, #24]
    1634:	add	sp, sp, #28
    1638:	pop	{pc}		; (ldr pc, [sp], #4)
    163c:	.word	0x00000740
    1640:	.word	0x0000068c
    1644:	.word	0x0000063c
    1648:	.word	0x000005b0
    164c:	.word	0x00000414

00001650 <ipfw_daq_breakloop>:
    1650:	push	{fp}		; (str fp, [sp, #-4]!)
    1654:	add	fp, sp, #0
    1658:	sub	sp, sp, #20
    165c:	str	r0, [fp, #-16]
    1660:	ldr	r3, [fp, #-16]
    1664:	str	r3, [fp, #-8]
    1668:	ldr	r3, [fp, #-8]
    166c:	mov	r2, #0
    1670:	str	r2, [r3, #12]
    1674:	mov	r3, #0
    1678:	mov	r0, r3
    167c:	add	sp, fp, #0
    1680:	pop	{fp}		; (ldr fp, [sp], #4)
    1684:	bx	lr

00001688 <ipfw_daq_check_status>:
    1688:	push	{fp}		; (str fp, [sp, #-4]!)
    168c:	add	fp, sp, #0
    1690:	sub	sp, sp, #20
    1694:	str	r0, [fp, #-16]
    1698:	ldr	r3, [fp, #-16]
    169c:	str	r3, [fp, #-8]
    16a0:	ldr	r3, [fp, #-8]
    16a4:	ldr	r3, [r3, #316]	; 0x13c
    16a8:	mov	r0, r3
    16ac:	add	sp, fp, #0
    16b0:	pop	{fp}		; (ldr fp, [sp], #4)
    16b4:	bx	lr

000016b8 <ipfw_daq_get_stats>:
    16b8:	str	fp, [sp, #-8]!
    16bc:	str	lr, [sp, #4]
    16c0:	add	fp, sp, #4
    16c4:	sub	sp, sp, #16
    16c8:	str	r0, [fp, #-16]
    16cc:	str	r1, [fp, #-20]	; 0xffffffec
    16d0:	ldr	r3, [fp, #-16]
    16d4:	str	r3, [fp, #-8]
    16d8:	ldr	r2, [fp, #-20]	; 0xffffffec
    16dc:	ldr	r3, [fp, #-8]
    16e0:	mov	r0, r2
    16e4:	add	r3, r3, #320	; 0x140
    16e8:	mov	r2, #96	; 0x60
    16ec:	mov	r1, r3
    16f0:	bl	6b0 <memcpy@plt>
    16f4:	mov	r3, #0
    16f8:	mov	r0, r3
    16fc:	sub	sp, fp, #4
    1700:	ldr	fp, [sp]
    1704:	add	sp, sp, #4
    1708:	pop	{pc}		; (ldr pc, [sp], #4)

0000170c <ipfw_daq_reset_stats>:
    170c:	str	fp, [sp, #-8]!
    1710:	str	lr, [sp, #4]
    1714:	add	fp, sp, #4
    1718:	sub	sp, sp, #16
    171c:	str	r0, [fp, #-16]
    1720:	ldr	r3, [fp, #-16]
    1724:	str	r3, [fp, #-8]
    1728:	ldr	r3, [fp, #-8]
    172c:	add	r3, r3, #320	; 0x140
    1730:	mov	r2, #96	; 0x60
    1734:	mov	r1, #0
    1738:	mov	r0, r3
    173c:	bl	74c <memset@plt>
    1740:	nop	{0}
    1744:	sub	sp, fp, #4
    1748:	ldr	fp, [sp]
    174c:	add	sp, sp, #4
    1750:	pop	{pc}		; (ldr pc, [sp], #4)

00001754 <ipfw_daq_get_snaplen>:
    1754:	push	{fp}		; (str fp, [sp, #-4]!)
    1758:	add	fp, sp, #0
    175c:	sub	sp, sp, #20
    1760:	str	r0, [fp, #-16]
    1764:	ldr	r3, [fp, #-16]
    1768:	str	r3, [fp, #-8]
    176c:	ldr	r3, [fp, #-8]
    1770:	ldr	r3, [r3, #24]
    1774:	mov	r0, r3
    1778:	add	sp, fp, #0
    177c:	pop	{fp}		; (ldr fp, [sp], #4)
    1780:	bx	lr

00001784 <ipfw_daq_get_capabilities>:
    1784:	push	{fp}		; (str fp, [sp, #-4]!)
    1788:	add	fp, sp, #0
    178c:	sub	sp, sp, #12
    1790:	str	r0, [fp, #-8]
    1794:	movw	r3, #743	; 0x2e7
    1798:	mov	r0, r3
    179c:	add	sp, fp, #0
    17a0:	pop	{fp}		; (ldr fp, [sp], #4)
    17a4:	bx	lr

000017a8 <ipfw_daq_get_datalink_type>:
    17a8:	push	{fp}		; (str fp, [sp, #-4]!)
    17ac:	add	fp, sp, #0
    17b0:	sub	sp, sp, #12
    17b4:	str	r0, [fp, #-8]
    17b8:	mov	r3, #228	; 0xe4
    17bc:	mov	r0, r3
    17c0:	add	sp, fp, #0
    17c4:	pop	{fp}		; (ldr fp, [sp], #4)
    17c8:	bx	lr

000017cc <ipfw_daq_get_errbuf>:
    17cc:	push	{fp}		; (str fp, [sp, #-4]!)
    17d0:	add	fp, sp, #0
    17d4:	sub	sp, sp, #20
    17d8:	str	r0, [fp, #-16]
    17dc:	ldr	r3, [fp, #-16]
    17e0:	str	r3, [fp, #-8]
    17e4:	ldr	r3, [fp, #-8]
    17e8:	add	r3, r3, #36	; 0x24
    17ec:	mov	r0, r3
    17f0:	add	sp, fp, #0
    17f4:	pop	{fp}		; (ldr fp, [sp], #4)
    17f8:	bx	lr

000017fc <ipfw_daq_set_errbuf>:
    17fc:	str	fp, [sp, #-8]!
    1800:	str	lr, [sp, #4]
    1804:	add	fp, sp, #4
    1808:	sub	sp, sp, #16
    180c:	str	r0, [fp, #-16]
    1810:	str	r1, [fp, #-20]	; 0xffffffec
    1814:	ldr	r3, [fp, #-16]
    1818:	str	r3, [fp, #-8]
    181c:	ldr	r3, [fp, #-8]
    1820:	add	r0, r3, #36	; 0x24
    1824:	ldr	r3, [fp, #-20]	; 0xffffffec
    1828:	cmp	r3, #0
    182c:	beq	1838 <ipfw_daq_set_errbuf+0x3c>
    1830:	ldr	r3, [fp, #-20]	; 0xffffffec
    1834:	b	1840 <ipfw_daq_set_errbuf+0x44>
    1838:	ldr	r3, [pc, #36]	; 1864 <ipfw_daq_set_errbuf+0x68>
    183c:	add	r3, pc, r3
    1840:	ldr	r2, [pc, #32]	; 1868 <ipfw_daq_set_errbuf+0x6c>
    1844:	add	r2, pc, r2
    1848:	mov	r1, #256	; 0x100
    184c:	bl	734 <snprintf@plt>
    1850:	nop	{0}
    1854:	sub	sp, fp, #4
    1858:	ldr	fp, [sp]
    185c:	add	sp, sp, #4
    1860:	pop	{pc}		; (ldr pc, [sp], #4)
    1864:	.word	0x000001ec
    1868:	.word	0x000001e8

0000186c <ipfw_daq_get_device_index>:
    186c:	push	{fp}		; (str fp, [sp, #-4]!)
    1870:	add	fp, sp, #0
    1874:	sub	sp, sp, #12
    1878:	str	r0, [fp, #-8]
    187c:	str	r1, [fp, #-12]
    1880:	mvn	r3, #3
    1884:	mov	r0, r3
    1888:	add	sp, fp, #0
    188c:	pop	{fp}		; (ldr fp, [sp], #4)
    1890:	bx	lr

Disassembly of section .fini:

00001894 <_fini>:
    1894:	push	{r3, lr}
    1898:	pop	{r3, pc}
