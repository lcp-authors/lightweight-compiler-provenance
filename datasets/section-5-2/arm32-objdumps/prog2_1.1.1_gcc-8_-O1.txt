
../repos/prog2/1.1.1:     file format elf32-littlearm


Disassembly of section .init:

00010624 <.init>:
   10624:	push	{r3, lr}
   10628:	bl	106f8 <_start@@Base+0x3c>
   1062c:	pop	{r3, pc}

Disassembly of section .plt:

00010630 <printf@plt-0x14>:
   10630:	push	{lr}		; (str lr, [sp, #-4]!)
   10634:	ldr	lr, [pc, #4]	; 10640 <printf@plt-0x4>
   10638:	add	lr, pc, lr
   1063c:	ldr	pc, [lr, #8]!
   10640:	andeq	r0, r1, r0, asr #19

00010644 <printf@plt>:
   10644:	add	ip, pc, #0, 12
   10648:	add	ip, ip, #16, 20	; 0x10000
   1064c:	ldr	pc, [ip, #2496]!	; 0x9c0

00010650 <fopen@plt>:
   10650:	add	ip, pc, #0, 12
   10654:	add	ip, ip, #16, 20	; 0x10000
   10658:	ldr	pc, [ip, #2488]!	; 0x9b8

0001065c <puts@plt>:
   1065c:	add	ip, pc, #0, 12
   10660:	add	ip, ip, #16, 20	; 0x10000
   10664:	ldr	pc, [ip, #2480]!	; 0x9b0

00010668 <__libc_start_main@plt>:
   10668:	add	ip, pc, #0, 12
   1066c:	add	ip, ip, #16, 20	; 0x10000
   10670:	ldr	pc, [ip, #2472]!	; 0x9a8

00010674 <__ctype_tolower_loc@plt>:
   10674:	add	ip, pc, #0, 12
   10678:	add	ip, ip, #16, 20	; 0x10000
   1067c:	ldr	pc, [ip, #2464]!	; 0x9a0

00010680 <__gmon_start__@plt>:
   10680:	add	ip, pc, #0, 12
   10684:	add	ip, ip, #16, 20	; 0x10000
   10688:	ldr	pc, [ip, #2456]!	; 0x998

0001068c <memset@plt>:
   1068c:	add	ip, pc, #0, 12
   10690:	add	ip, ip, #16, 20	; 0x10000
   10694:	ldr	pc, [ip, #2448]!	; 0x990

00010698 <fclose@plt>:
   10698:	add	ip, pc, #0, 12
   1069c:	add	ip, ip, #16, 20	; 0x10000
   106a0:	ldr	pc, [ip, #2440]!	; 0x988

000106a4 <abort@plt>:
   106a4:	add	ip, pc, #0, 12
   106a8:	add	ip, ip, #16, 20	; 0x10000
   106ac:	ldr	pc, [ip, #2432]!	; 0x980

000106b0 <getc@plt>:
   106b0:	add	ip, pc, #0, 12
   106b4:	add	ip, ip, #16, 20	; 0x10000
   106b8:	ldr	pc, [ip, #2424]!	; 0x978

Disassembly of section .text:

000106bc <_start@@Base>:
   106bc:	mov	fp, #0
   106c0:	mov	lr, #0
   106c4:	pop	{r1}		; (ldr r1, [sp], #4)
   106c8:	mov	r2, sp
   106cc:	push	{r2}		; (str r2, [sp, #-4]!)
   106d0:	push	{r0}		; (str r0, [sp, #-4]!)
   106d4:	ldr	ip, [pc, #16]	; 106ec <_start@@Base+0x30>
   106d8:	push	{ip}		; (str ip, [sp, #-4]!)
   106dc:	ldr	r0, [pc, #12]	; 106f0 <_start@@Base+0x34>
   106e0:	ldr	r3, [pc, #12]	; 106f4 <_start@@Base+0x38>
   106e4:	bl	10668 <__libc_start_main@plt>
   106e8:	bl	106a4 <abort@plt>
   106ec:	andeq	r0, r1, r0, ror #21
   106f0:	strdeq	r0, [r1], -ip
   106f4:	andeq	r0, r1, r0, lsl #21
   106f8:	ldr	r3, [pc, #20]	; 10714 <_start@@Base+0x58>
   106fc:	ldr	r2, [pc, #20]	; 10718 <_start@@Base+0x5c>
   10700:	add	r3, pc, r3
   10704:	ldr	r2, [r3, r2]
   10708:	cmp	r2, #0
   1070c:	bxeq	lr
   10710:	b	10680 <__gmon_start__@plt>
   10714:	strdeq	r0, [r1], -r8
   10718:	andeq	r0, r0, r4, lsr r0
   1071c:	ldr	r0, [pc, #24]	; 1073c <_start@@Base+0x80>
   10720:	ldr	r3, [pc, #24]	; 10740 <_start@@Base+0x84>
   10724:	cmp	r3, r0
   10728:	bxeq	lr
   1072c:	ldr	r3, [pc, #16]	; 10744 <_start@@Base+0x88>
   10730:	cmp	r3, #0
   10734:	bxeq	lr
   10738:	bx	r3
   1073c:	andeq	r1, r2, r0, asr #32
   10740:	andeq	r1, r2, r0, asr #32
   10744:	andeq	r0, r0, r0
   10748:	ldr	r0, [pc, #36]	; 10774 <_start@@Base+0xb8>
   1074c:	ldr	r1, [pc, #36]	; 10778 <_start@@Base+0xbc>
   10750:	sub	r1, r1, r0
   10754:	asr	r1, r1, #2
   10758:	add	r1, r1, r1, lsr #31
   1075c:	asrs	r1, r1, #1
   10760:	bxeq	lr
   10764:	ldr	r3, [pc, #16]	; 1077c <_start@@Base+0xc0>
   10768:	cmp	r3, #0
   1076c:	bxeq	lr
   10770:	bx	r3
   10774:	andeq	r1, r2, r0, asr #32
   10778:	andeq	r1, r2, r0, asr #32
   1077c:	andeq	r0, r0, r0
   10780:	push	{r4, lr}
   10784:	ldr	r4, [pc, #24]	; 107a4 <_start@@Base+0xe8>
   10788:	ldrb	r3, [r4]
   1078c:	cmp	r3, #0
   10790:	popne	{r4, pc}
   10794:	bl	1071c <_start@@Base+0x60>
   10798:	mov	r3, #1
   1079c:	strb	r3, [r4]
   107a0:	pop	{r4, pc}
   107a4:	andeq	r1, r2, r0, asr #32
   107a8:	b	10748 <_start@@Base+0x8c>

000107ac <in_array@@Base>:
   107ac:	cmp	r2, #0
   107b0:	blt	107ec <in_array@@Base+0x40>
   107b4:	ldr	r3, [r1]
   107b8:	cmp	r0, r3
   107bc:	beq	107f4 <in_array@@Base+0x48>
   107c0:	mov	r3, #0
   107c4:	add	r3, r3, #1
   107c8:	cmp	r2, r3
   107cc:	blt	107e4 <in_array@@Base+0x38>
   107d0:	ldr	ip, [r1, #4]!
   107d4:	cmp	ip, r0
   107d8:	bne	107c4 <in_array@@Base+0x18>
   107dc:	mov	r0, #1
   107e0:	bx	lr
   107e4:	mov	r0, #0
   107e8:	bx	lr
   107ec:	mov	r0, #0
   107f0:	bx	lr
   107f4:	mov	r0, #1
   107f8:	bx	lr

000107fc <main@@Base>:
   107fc:	strd	r4, [sp, #-28]!	; 0xffffffe4
   10800:	strd	r6, [sp, #8]
   10804:	strd	r8, [sp, #16]
   10808:	str	lr, [sp, #24]
   1080c:	vpush	{d8}
   10810:	sub	sp, sp, #204	; 0xcc
   10814:	movw	r3, #2800	; 0xaf0
   10818:	movt	r3, #1
   1081c:	ldrd	r0, [r3]
   10820:	strd	r0, [sp, #168]	; 0xa8
   10824:	ldrd	r0, [r3, #8]
   10828:	strd	r0, [sp, #176]	; 0xb0
   1082c:	ldrd	r0, [r3, #16]
   10830:	strd	r0, [sp, #184]	; 0xb8
   10834:	ldrd	r0, [r3, #24]
   10838:	strd	r0, [sp, #192]	; 0xc0
   1083c:	ldrd	r0, [r3, #32]
   10840:	strd	r0, [sp, #152]	; 0x98
   10844:	ldrd	r0, [r3, #40]	; 0x28
   10848:	strd	r0, [sp, #160]	; 0xa0
   1084c:	mov	r2, #205	; 0xcd
   10850:	str	r2, [sp, #144]	; 0x90
   10854:	mov	r2, #237	; 0xed
   10858:	str	r2, [sp, #148]	; 0x94
   1085c:	ldrd	r0, [r3, #48]	; 0x30
   10860:	strd	r0, [sp, #120]	; 0x78
   10864:	ldrd	r0, [r3, #56]	; 0x38
   10868:	strd	r0, [sp, #128]	; 0x80
   1086c:	ldrd	r2, [r3, #64]	; 0x40
   10870:	strd	r2, [sp, #136]	; 0x88
   10874:	mov	r3, #218	; 0xda
   10878:	str	r3, [sp, #112]	; 0x70
   1087c:	mov	r3, #250	; 0xfa
   10880:	str	r3, [sp, #116]	; 0x74
   10884:	mov	r3, #199	; 0xc7
   10888:	str	r3, [sp, #104]	; 0x68
   1088c:	mov	r3, #231	; 0xe7
   10890:	str	r3, [sp, #108]	; 0x6c
   10894:	movw	r1, #2872	; 0xb38
   10898:	movt	r1, #1
   1089c:	movw	r0, #2876	; 0xb3c
   108a0:	movt	r0, #1
   108a4:	bl	10650 <fopen@plt>
   108a8:	mov	r7, r0
   108ac:	mov	r2, #104	; 0x68
   108b0:	mov	r1, #0
   108b4:	mov	r0, sp
   108b8:	bl	1068c <memset@plt>
   108bc:	mov	r6, #0
   108c0:	mov	r8, #97	; 0x61
   108c4:	mov	r9, #8
   108c8:	b	108e8 <main@@Base+0xec>
   108cc:	mov	r5, r4
   108d0:	add	r3, r4, #128	; 0x80
   108d4:	cmp	r3, #384	; 0x180
   108d8:	bcc	10a4c <main@@Base+0x250>
   108dc:	sub	r4, r4, #97	; 0x61
   108e0:	cmp	r4, #25
   108e4:	bls	10990 <main@@Base+0x194>
   108e8:	mov	r0, r7
   108ec:	bl	106b0 <getc@plt>
   108f0:	mov	r4, r0
   108f4:	cmn	r0, #1
   108f8:	beq	109ac <main@@Base+0x1b0>
   108fc:	mov	r2, r9
   10900:	add	r1, sp, #168	; 0xa8
   10904:	bl	107ac <in_array@@Base>
   10908:	cmp	r0, #0
   1090c:	bne	10a44 <main@@Base+0x248>
   10910:	mov	r2, #4
   10914:	add	r1, sp, #152	; 0x98
   10918:	mov	r0, r4
   1091c:	bl	107ac <in_array@@Base>
   10920:	cmp	r0, #0
   10924:	bne	10a5c <main@@Base+0x260>
   10928:	mov	r2, #2
   1092c:	add	r1, sp, #144	; 0x90
   10930:	mov	r0, r4
   10934:	bl	107ac <in_array@@Base>
   10938:	cmp	r0, #0
   1093c:	bne	10a64 <main@@Base+0x268>
   10940:	mov	r2, #6
   10944:	add	r1, sp, #120	; 0x78
   10948:	mov	r0, r4
   1094c:	bl	107ac <in_array@@Base>
   10950:	cmp	r0, #0
   10954:	bne	10a6c <main@@Base+0x270>
   10958:	mov	r2, #2
   1095c:	add	r1, sp, #112	; 0x70
   10960:	mov	r0, r4
   10964:	bl	107ac <in_array@@Base>
   10968:	cmp	r0, #0
   1096c:	bne	10a74 <main@@Base+0x278>
   10970:	mov	r2, #2
   10974:	add	r1, sp, #104	; 0x68
   10978:	mov	r0, r4
   1097c:	bl	107ac <in_array@@Base>
   10980:	cmp	r0, #0
   10984:	beq	108cc <main@@Base+0xd0>
   10988:	mov	r3, #99	; 0x63
   1098c:	b	10a48 <main@@Base+0x24c>
   10990:	add	r3, sp, #200	; 0xc8
   10994:	add	r4, r3, r4, lsl #2
   10998:	ldr	r3, [r4, #-200]	; 0xffffff38
   1099c:	add	r3, r3, #1
   109a0:	str	r3, [r4, #-200]	; 0xffffff38
   109a4:	add	r6, r6, #1
   109a8:	b	108c4 <main@@Base+0xc8>
   109ac:	mov	r0, r7
   109b0:	bl	10698 <fclose@plt>
   109b4:	movw	r0, #2952	; 0xb88
   109b8:	movt	r0, #1
   109bc:	bl	1065c <puts@plt>
   109c0:	mov	r1, r6
   109c4:	movw	r0, #2900	; 0xb54
   109c8:	movt	r0, #1
   109cc:	bl	10644 <printf@plt>
   109d0:	sub	r5, sp, #4
   109d4:	add	r7, sp, #100	; 0x64
   109d8:	mov	r4, #97	; 0x61
   109dc:	vmov	s15, r6
   109e0:	vcvt.f32.s32	s16, s15
   109e4:	vldr	s17, [pc, #144]	; 10a7c <main@@Base+0x280>
   109e8:	movw	r6, #2932	; 0xb74
   109ec:	movt	r6, #1
   109f0:	ldr	r3, [r5, #4]!
   109f4:	vmov	s14, r3
   109f8:	vcvt.f32.s32	s14, s14
   109fc:	vdiv.f32	s15, s14, s16
   10a00:	vmul.f32	s15, s15, s17
   10a04:	vcvt.f64.f32	d7, s15
   10a08:	vmov	r2, r3, d7
   10a0c:	mov	r1, r4
   10a10:	mov	r0, r6
   10a14:	bl	10644 <printf@plt>
   10a18:	add	r4, r4, #1
   10a1c:	cmp	r5, r7
   10a20:	bne	109f0 <main@@Base+0x1f4>
   10a24:	mov	r0, #0
   10a28:	add	sp, sp, #204	; 0xcc
   10a2c:	vpop	{d8}
   10a30:	ldrd	r4, [sp]
   10a34:	ldrd	r6, [sp, #8]
   10a38:	ldrd	r8, [sp, #16]
   10a3c:	add	sp, sp, #24
   10a40:	pop	{pc}		; (ldr pc, [sp], #4)
   10a44:	mov	r3, r8
   10a48:	mov	r5, r3
   10a4c:	bl	10674 <__ctype_tolower_loc@plt>
   10a50:	ldr	r3, [r0]
   10a54:	ldr	r4, [r3, r5, lsl #2]
   10a58:	b	108dc <main@@Base+0xe0>
   10a5c:	mov	r3, #101	; 0x65
   10a60:	b	10a48 <main@@Base+0x24c>
   10a64:	mov	r3, #105	; 0x69
   10a68:	b	10a48 <main@@Base+0x24c>
   10a6c:	mov	r3, #111	; 0x6f
   10a70:	b	10a48 <main@@Base+0x24c>
   10a74:	mov	r3, #117	; 0x75
   10a78:	b	10a48 <main@@Base+0x24c>
   10a7c:	sbcmi	r0, r8, #0

00010a80 <__libc_csu_init@@Base>:
   10a80:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10a84:	mov	r7, r0
   10a88:	ldr	r6, [pc, #72]	; 10ad8 <__libc_csu_init@@Base+0x58>
   10a8c:	ldr	r5, [pc, #72]	; 10adc <__libc_csu_init@@Base+0x5c>
   10a90:	add	r6, pc, r6
   10a94:	add	r5, pc, r5
   10a98:	sub	r6, r6, r5
   10a9c:	mov	r8, r1
   10aa0:	mov	r9, r2
   10aa4:	bl	10624 <printf@plt-0x20>
   10aa8:	asrs	r6, r6, #2
   10aac:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10ab0:	mov	r4, #0
   10ab4:	add	r4, r4, #1
   10ab8:	ldr	r3, [r5], #4
   10abc:	mov	r2, r9
   10ac0:	mov	r1, r8
   10ac4:	mov	r0, r7
   10ac8:	blx	r3
   10acc:	cmp	r6, r4
   10ad0:	bne	10ab4 <__libc_csu_init@@Base+0x34>
   10ad4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10ad8:	andeq	r0, r1, ip, ror r4
   10adc:	andeq	r0, r1, r4, ror r4

00010ae0 <__libc_csu_fini@@Base>:
   10ae0:	bx	lr

Disassembly of section .fini:

00010ae4 <.fini>:
   10ae4:	push	{r3, lr}
   10ae8:	pop	{r3, pc}
