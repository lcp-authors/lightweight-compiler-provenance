
../repos/coreutils/src/vdir:     file format elf32-littlearm


Disassembly of section .init:

00011c58 <.init>:
   11c58:	push	{r3, lr}
   11c5c:	bl	12204 <putc_unlocked@plt+0x4c>
   11c60:	pop	{r3, pc}

Disassembly of section .plt:

00011c64 <calloc@plt-0x14>:
   11c64:	push	{lr}		; (str lr, [sp, #-4]!)
   11c68:	ldr	lr, [pc, #4]	; 11c74 <calloc@plt-0x4>
   11c6c:	add	lr, pc, lr
   11c70:	ldr	pc, [lr, #8]!
   11c74:	andeq	r7, r2, ip, lsl #7

00011c78 <calloc@plt>:
   11c78:	add	ip, pc, #0, 12
   11c7c:	add	ip, ip, #159744	; 0x27000
   11c80:	ldr	pc, [ip, #908]!	; 0x38c

00011c84 <fputs_unlocked@plt>:
   11c84:	add	ip, pc, #0, 12
   11c88:	add	ip, ip, #159744	; 0x27000
   11c8c:	ldr	pc, [ip, #900]!	; 0x384

00011c90 <cap_to_text@plt>:
   11c90:	add	ip, pc, #0, 12
   11c94:	add	ip, ip, #159744	; 0x27000
   11c98:	ldr	pc, [ip, #892]!	; 0x37c

00011c9c <gnu_dev_major@plt>:
   11c9c:	add	ip, pc, #0, 12
   11ca0:	add	ip, ip, #159744	; 0x27000
   11ca4:	ldr	pc, [ip, #884]!	; 0x374

00011ca8 <raise@plt>:
   11ca8:	add	ip, pc, #0, 12
   11cac:	add	ip, ip, #159744	; 0x27000
   11cb0:	ldr	pc, [ip, #876]!	; 0x36c

00011cb4 <gmtime_r@plt>:
   11cb4:	add	ip, pc, #0, 12
   11cb8:	add	ip, ip, #159744	; 0x27000
   11cbc:	ldr	pc, [ip, #868]!	; 0x364

00011cc0 <getpwnam@plt>:
   11cc0:	add	ip, pc, #0, 12
   11cc4:	add	ip, ip, #159744	; 0x27000
   11cc8:	ldr	pc, [ip, #860]!	; 0x35c

00011ccc <strcmp@plt>:
   11ccc:	add	ip, pc, #0, 12
   11cd0:	add	ip, ip, #159744	; 0x27000
   11cd4:	ldr	pc, [ip, #852]!	; 0x354

00011cd8 <getpwuid@plt>:
   11cd8:	add	ip, pc, #0, 12
   11cdc:	add	ip, ip, #159744	; 0x27000
   11ce0:	ldr	pc, [ip, #844]!	; 0x34c

00011ce4 <gnu_dev_makedev@plt>:
   11ce4:	add	ip, pc, #0, 12
   11ce8:	add	ip, ip, #159744	; 0x27000
   11cec:	ldr	pc, [ip, #836]!	; 0x344

00011cf0 <gnu_dev_minor@plt>:
   11cf0:	add	ip, pc, #0, 12
   11cf4:	add	ip, ip, #159744	; 0x27000
   11cf8:	ldr	pc, [ip, #828]!	; 0x33c

00011cfc <mktime@plt>:
   11cfc:	add	ip, pc, #0, 12
   11d00:	add	ip, ip, #159744	; 0x27000
   11d04:	ldr	pc, [ip, #820]!	; 0x334

00011d08 <fflush@plt>:
   11d08:	add	ip, pc, #0, 12
   11d0c:	add	ip, ip, #159744	; 0x27000
   11d10:	ldr	pc, [ip, #812]!	; 0x32c

00011d14 <wcwidth@plt>:
   11d14:	add	ip, pc, #0, 12
   11d18:	add	ip, ip, #159744	; 0x27000
   11d1c:	ldr	pc, [ip, #804]!	; 0x324

00011d20 <sigprocmask@plt>:
   11d20:	add	ip, pc, #0, 12
   11d24:	add	ip, ip, #159744	; 0x27000
   11d28:	ldr	pc, [ip, #796]!	; 0x31c

00011d2c <_setjmp@plt>:
   11d2c:	add	ip, pc, #0, 12
   11d30:	add	ip, ip, #159744	; 0x27000
   11d34:	ldr	pc, [ip, #788]!	; 0x314

00011d38 <memmove@plt>:
   11d38:	add	ip, pc, #0, 12
   11d3c:	add	ip, ip, #159744	; 0x27000
   11d40:	ldr	pc, [ip, #780]!	; 0x30c

00011d44 <free@plt>:
   11d44:	add	ip, pc, #0, 12
   11d48:	add	ip, ip, #159744	; 0x27000
   11d4c:	ldr	pc, [ip, #772]!	; 0x304

00011d50 <faccessat@plt>:
   11d50:	add	ip, pc, #0, 12
   11d54:	add	ip, ip, #159744	; 0x27000
   11d58:	ldr	pc, [ip, #764]!	; 0x2fc

00011d5c <clock_gettime@plt>:
   11d5c:	add	ip, pc, #0, 12
   11d60:	add	ip, ip, #159744	; 0x27000
   11d64:	ldr	pc, [ip, #756]!	; 0x2f4

00011d68 <_exit@plt>:
   11d68:	add	ip, pc, #0, 12
   11d6c:	add	ip, ip, #159744	; 0x27000
   11d70:	ldr	pc, [ip, #748]!	; 0x2ec

00011d74 <memcpy@plt>:
   11d74:	add	ip, pc, #0, 12
   11d78:	add	ip, ip, #159744	; 0x27000
   11d7c:	ldr	pc, [ip, #740]!	; 0x2e4

00011d80 <mbsinit@plt>:
   11d80:	add	ip, pc, #0, 12
   11d84:	add	ip, ip, #159744	; 0x27000
   11d88:	ldr	pc, [ip, #732]!	; 0x2dc

00011d8c <signal@plt>:
   11d8c:	add	ip, pc, #0, 12
   11d90:	add	ip, ip, #159744	; 0x27000
   11d94:	ldr	pc, [ip, #724]!	; 0x2d4

00011d98 <fwrite_unlocked@plt>:
   11d98:	add	ip, pc, #0, 12
   11d9c:	add	ip, ip, #159744	; 0x27000
   11da0:	ldr	pc, [ip, #716]!	; 0x2cc

00011da4 <stpcpy@plt>:
   11da4:	add	ip, pc, #0, 12
   11da8:	add	ip, ip, #159744	; 0x27000
   11dac:	ldr	pc, [ip, #708]!	; 0x2c4

00011db0 <dcgettext@plt>:
   11db0:	add	ip, pc, #0, 12
   11db4:	add	ip, ip, #159744	; 0x27000
   11db8:	ldr	pc, [ip, #700]!	; 0x2bc

00011dbc <realloc@plt>:
   11dbc:	add	ip, pc, #0, 12
   11dc0:	add	ip, ip, #159744	; 0x27000
   11dc4:	ldr	pc, [ip, #692]!	; 0x2b4

00011dc8 <sigismember@plt>:
   11dc8:	add	ip, pc, #0, 12
   11dcc:	add	ip, ip, #159744	; 0x27000
   11dd0:	ldr	pc, [ip, #684]!	; 0x2ac

00011dd4 <fgetfilecon@plt>:
   11dd4:	add	ip, pc, #0, 12
   11dd8:	add	ip, ip, #159744	; 0x27000
   11ddc:	ldr	pc, [ip, #676]!	; 0x2a4

00011de0 <localtime_r@plt>:
   11de0:	add	ip, pc, #0, 12
   11de4:	add	ip, ip, #159744	; 0x27000
   11de8:	ldr	pc, [ip, #668]!	; 0x29c

00011dec <textdomain@plt>:
   11dec:	add	ip, pc, #0, 12
   11df0:	add	ip, ip, #159744	; 0x27000
   11df4:	ldr	pc, [ip, #660]!	; 0x294

00011df8 <iswcntrl@plt>:
   11df8:	add	ip, pc, #0, 12
   11dfc:	add	ip, ip, #159744	; 0x27000
   11e00:	ldr	pc, [ip, #652]!	; 0x28c

00011e04 <rawmemchr@plt>:
   11e04:	add	ip, pc, #0, 12
   11e08:	add	ip, ip, #159744	; 0x27000
   11e0c:	ldr	pc, [ip, #644]!	; 0x284

00011e10 <fflush_unlocked@plt>:
   11e10:	add	ip, pc, #0, 12
   11e14:	add	ip, ip, #159744	; 0x27000
   11e18:	ldr	pc, [ip, #636]!	; 0x27c

00011e1c <iswprint@plt>:
   11e1c:	add	ip, pc, #0, 12
   11e20:	add	ip, ip, #159744	; 0x27000
   11e24:	ldr	pc, [ip, #628]!	; 0x274

00011e28 <tzset@plt>:
   11e28:	add	ip, pc, #0, 12
   11e2c:	add	ip, ip, #159744	; 0x27000
   11e30:	ldr	pc, [ip, #620]!	; 0x26c

00011e34 <readlink@plt>:
   11e34:	add	ip, pc, #0, 12
   11e38:	add	ip, ip, #159744	; 0x27000
   11e3c:	ldr	pc, [ip, #612]!	; 0x264

00011e40 <sigaction@plt>:
   11e40:	add	ip, pc, #0, 12
   11e44:	add	ip, ip, #159744	; 0x27000
   11e48:	ldr	pc, [ip, #604]!	; 0x25c

00011e4c <fwrite@plt>:
   11e4c:	add	ip, pc, #0, 12
   11e50:	add	ip, ip, #159744	; 0x27000
   11e54:	ldr	pc, [ip, #596]!	; 0x254

00011e58 <ioctl@plt>:
   11e58:	add	ip, pc, #0, 12
   11e5c:	add	ip, ip, #159744	; 0x27000
   11e60:	ldr	pc, [ip, #588]!	; 0x24c

00011e64 <lseek64@plt>:
   11e64:	add	ip, pc, #0, 12
   11e68:	add	ip, ip, #159744	; 0x27000
   11e6c:	ldr	pc, [ip, #580]!	; 0x244

00011e70 <__ctype_get_mb_cur_max@plt>:
   11e70:	add	ip, pc, #0, 12
   11e74:	add	ip, ip, #159744	; 0x27000
   11e78:	ldr	pc, [ip, #572]!	; 0x23c

00011e7c <strcpy@plt>:
   11e7c:	add	ip, pc, #0, 12
   11e80:	add	ip, ip, #159744	; 0x27000
   11e84:	ldr	pc, [ip, #564]!	; 0x234

00011e88 <__fpending@plt>:
   11e88:	add	ip, pc, #0, 12
   11e8c:	add	ip, ip, #159744	; 0x27000
   11e90:	ldr	pc, [ip, #556]!	; 0x22c

00011e94 <ferror_unlocked@plt>:
   11e94:	add	ip, pc, #0, 12
   11e98:	add	ip, ip, #159744	; 0x27000
   11e9c:	ldr	pc, [ip, #548]!	; 0x224

00011ea0 <mbrtowc@plt>:
   11ea0:	add	ip, pc, #0, 12
   11ea4:	add	ip, ip, #159744	; 0x27000
   11ea8:	ldr	pc, [ip, #540]!	; 0x21c

00011eac <wcstombs@plt>:
   11eac:	add	ip, pc, #0, 12
   11eb0:	add	ip, ip, #159744	; 0x27000
   11eb4:	ldr	pc, [ip, #532]!	; 0x214

00011eb8 <error@plt>:
   11eb8:	add	ip, pc, #0, 12
   11ebc:	add	ip, ip, #159744	; 0x27000
   11ec0:	ldr	pc, [ip, #524]!	; 0x20c

00011ec4 <gethostname@plt>:
   11ec4:	add	ip, pc, #0, 12
   11ec8:	add	ip, ip, #159744	; 0x27000
   11ecc:	ldr	pc, [ip, #516]!	; 0x204

00011ed0 <opendir@plt>:
   11ed0:	add	ip, pc, #0, 12
   11ed4:	add	ip, ip, #159744	; 0x27000
   11ed8:	ldr	pc, [ip, #508]!	; 0x1fc

00011edc <fnmatch@plt>:
   11edc:	add	ip, pc, #0, 12
   11ee0:	add	ip, ip, #159744	; 0x27000
   11ee4:	ldr	pc, [ip, #500]!	; 0x1f4

00011ee8 <strcoll@plt>:
   11ee8:	add	ip, pc, #0, 12
   11eec:	add	ip, ip, #159744	; 0x27000
   11ef0:	ldr	pc, [ip, #492]!	; 0x1ec

00011ef4 <getenv@plt>:
   11ef4:	add	ip, pc, #0, 12
   11ef8:	add	ip, ip, #159744	; 0x27000
   11efc:	ldr	pc, [ip, #484]!	; 0x1e4

00011f00 <lgetfilecon@plt>:
   11f00:	add	ip, pc, #0, 12
   11f04:	add	ip, ip, #159744	; 0x27000
   11f08:	ldr	pc, [ip, #476]!	; 0x1dc

00011f0c <malloc@plt>:
   11f0c:	add	ip, pc, #0, 12
   11f10:	add	ip, ip, #159744	; 0x27000
   11f14:	ldr	pc, [ip, #468]!	; 0x1d4

00011f18 <sigaddset@plt>:
   11f18:	add	ip, pc, #0, 12
   11f1c:	add	ip, ip, #159744	; 0x27000
   11f20:	ldr	pc, [ip, #460]!	; 0x1cc

00011f24 <__libc_start_main@plt>:
   11f24:	add	ip, pc, #0, 12
   11f28:	add	ip, ip, #159744	; 0x27000
   11f2c:	ldr	pc, [ip, #452]!	; 0x1c4

00011f30 <strftime@plt>:
   11f30:	add	ip, pc, #0, 12
   11f34:	add	ip, ip, #159744	; 0x27000
   11f38:	ldr	pc, [ip, #444]!	; 0x1bc

00011f3c <__freading@plt>:
   11f3c:	add	ip, pc, #0, 12
   11f40:	add	ip, ip, #159744	; 0x27000
   11f44:	ldr	pc, [ip, #436]!	; 0x1b4

00011f48 <__ctype_tolower_loc@plt>:
   11f48:	add	ip, pc, #0, 12
   11f4c:	add	ip, ip, #159744	; 0x27000
   11f50:	ldr	pc, [ip, #428]!	; 0x1ac

00011f54 <__ctype_toupper_loc@plt>:
   11f54:	add	ip, pc, #0, 12
   11f58:	add	ip, ip, #159744	; 0x27000
   11f5c:	ldr	pc, [ip, #420]!	; 0x1a4

00011f60 <__gmon_start__@plt>:
   11f60:	add	ip, pc, #0, 12
   11f64:	add	ip, ip, #159744	; 0x27000
   11f68:	ldr	pc, [ip, #412]!	; 0x19c

00011f6c <getopt_long@plt>:
   11f6c:	add	ip, pc, #0, 12
   11f70:	add	ip, ip, #159744	; 0x27000
   11f74:	ldr	pc, [ip, #404]!	; 0x194

00011f78 <__ctype_b_loc@plt>:
   11f78:	add	ip, pc, #0, 12
   11f7c:	add	ip, ip, #159744	; 0x27000
   11f80:	ldr	pc, [ip, #396]!	; 0x18c

00011f84 <getcwd@plt>:
   11f84:	add	ip, pc, #0, 12
   11f88:	add	ip, ip, #159744	; 0x27000
   11f8c:	ldr	pc, [ip, #388]!	; 0x184

00011f90 <exit@plt>:
   11f90:	add	ip, pc, #0, 12
   11f94:	add	ip, ip, #159744	; 0x27000
   11f98:	ldr	pc, [ip, #380]!	; 0x17c

00011f9c <getfilecon@plt>:
   11f9c:	add	ip, pc, #0, 12
   11fa0:	add	ip, ip, #159744	; 0x27000
   11fa4:	ldr	pc, [ip, #372]!	; 0x174

00011fa8 <bcmp@plt>:
   11fa8:	add	ip, pc, #0, 12
   11fac:	add	ip, ip, #159744	; 0x27000
   11fb0:	ldr	pc, [ip, #364]!	; 0x16c

00011fb4 <tcgetpgrp@plt>:
   11fb4:	add	ip, pc, #0, 12
   11fb8:	add	ip, ip, #159744	; 0x27000
   11fbc:	ldr	pc, [ip, #356]!	; 0x164

00011fc0 <strlen@plt>:
   11fc0:	add	ip, pc, #0, 12
   11fc4:	add	ip, ip, #159744	; 0x27000
   11fc8:	ldr	pc, [ip, #348]!	; 0x15c

00011fcc <strchr@plt>:
   11fcc:	add	ip, pc, #0, 12
   11fd0:	add	ip, ip, #159744	; 0x27000
   11fd4:	ldr	pc, [ip, #340]!	; 0x154

00011fd8 <setenv@plt>:
   11fd8:	add	ip, pc, #0, 12
   11fdc:	add	ip, ip, #159744	; 0x27000
   11fe0:	ldr	pc, [ip, #332]!	; 0x14c

00011fe4 <__errno_location@plt>:
   11fe4:	add	ip, pc, #0, 12
   11fe8:	add	ip, ip, #159744	; 0x27000
   11fec:	ldr	pc, [ip, #324]!	; 0x144

00011ff0 <__sprintf_chk@plt>:
   11ff0:	add	ip, pc, #0, 12
   11ff4:	add	ip, ip, #159744	; 0x27000
   11ff8:	ldr	pc, [ip, #316]!	; 0x13c

00011ffc <__cxa_atexit@plt>:
   11ffc:	add	ip, pc, #0, 12
   12000:	add	ip, ip, #159744	; 0x27000
   12004:	ldr	pc, [ip, #308]!	; 0x134

00012008 <memset@plt>:
   12008:	add	ip, pc, #0, 12
   1200c:	add	ip, ip, #159744	; 0x27000
   12010:	ldr	pc, [ip, #300]!	; 0x12c

00012014 <__printf_chk@plt>:
   12014:	add	ip, pc, #0, 12
   12018:	add	ip, ip, #159744	; 0x27000
   1201c:	ldr	pc, [ip, #292]!	; 0x124

00012020 <stpncpy@plt>:
   12020:	add	ip, pc, #0, 12
   12024:	add	ip, ip, #159744	; 0x27000
   12028:	ldr	pc, [ip, #284]!	; 0x11c

0001202c <fileno@plt>:
   1202c:	add	ip, pc, #0, 12
   12030:	add	ip, ip, #159744	; 0x27000
   12034:	ldr	pc, [ip, #276]!	; 0x114

00012038 <strtoumax@plt>:
   12038:	add	ip, pc, #0, 12
   1203c:	add	ip, ip, #159744	; 0x27000
   12040:	ldr	pc, [ip, #268]!	; 0x10c

00012044 <__fprintf_chk@plt>:
   12044:	add	ip, pc, #0, 12
   12048:	add	ip, ip, #159744	; 0x27000
   1204c:	ldr	pc, [ip, #260]!	; 0x104

00012050 <fclose@plt>:
   12050:	add	ip, pc, #0, 12
   12054:	add	ip, ip, #159744	; 0x27000
   12058:	ldr	pc, [ip, #252]!	; 0xfc

0001205c <fseeko64@plt>:
   1205c:	add	ip, pc, #0, 12
   12060:	add	ip, ip, #159744	; 0x27000
   12064:	ldr	pc, [ip, #244]!	; 0xf4

00012068 <statx@plt>:
   12068:	add	ip, pc, #0, 12
   1206c:	add	ip, ip, #159744	; 0x27000
   12070:	ldr	pc, [ip, #236]!	; 0xec

00012074 <setlocale@plt>:
   12074:	add	ip, pc, #0, 12
   12078:	add	ip, ip, #159744	; 0x27000
   1207c:	ldr	pc, [ip, #228]!	; 0xe4

00012080 <sigemptyset@plt>:
   12080:	add	ip, pc, #0, 12
   12084:	add	ip, ip, #159744	; 0x27000
   12088:	ldr	pc, [ip, #220]!	; 0xdc

0001208c <wcswidth@plt>:
   1208c:	add	ip, pc, #0, 12
   12090:	add	ip, ip, #159744	; 0x27000
   12094:	ldr	pc, [ip, #212]!	; 0xd4

00012098 <strrchr@plt>:
   12098:	add	ip, pc, #0, 12
   1209c:	add	ip, ip, #159744	; 0x27000
   120a0:	ldr	pc, [ip, #204]!	; 0xcc

000120a4 <cap_get_file@plt>:
   120a4:	add	ip, pc, #0, 12
   120a8:	add	ip, ip, #159744	; 0x27000
   120ac:	ldr	pc, [ip, #196]!	; 0xc4

000120b0 <nl_langinfo@plt>:
   120b0:	add	ip, pc, #0, 12
   120b4:	add	ip, ip, #159744	; 0x27000
   120b8:	ldr	pc, [ip, #188]!	; 0xbc

000120bc <localeconv@plt>:
   120bc:	add	ip, pc, #0, 12
   120c0:	add	ip, ip, #159744	; 0x27000
   120c4:	ldr	pc, [ip, #180]!	; 0xb4

000120c8 <mbstowcs@plt>:
   120c8:	add	ip, pc, #0, 12
   120cc:	add	ip, ip, #159744	; 0x27000
   120d0:	ldr	pc, [ip, #172]!	; 0xac

000120d4 <readdir64@plt>:
   120d4:	add	ip, pc, #0, 12
   120d8:	add	ip, ip, #159744	; 0x27000
   120dc:	ldr	pc, [ip, #164]!	; 0xa4

000120e0 <timegm@plt>:
   120e0:	add	ip, pc, #0, 12
   120e4:	add	ip, ip, #159744	; 0x27000
   120e8:	ldr	pc, [ip, #156]!	; 0x9c

000120ec <cap_free@plt>:
   120ec:	add	ip, pc, #0, 12
   120f0:	add	ip, ip, #159744	; 0x27000
   120f4:	ldr	pc, [ip, #148]!	; 0x94

000120f8 <dirfd@plt>:
   120f8:	add	ip, pc, #0, 12
   120fc:	add	ip, ip, #159744	; 0x27000
   12100:	ldr	pc, [ip, #140]!	; 0x8c

00012104 <freecon@plt>:
   12104:	add	ip, pc, #0, 12
   12108:	add	ip, ip, #159744	; 0x27000
   1210c:	ldr	pc, [ip, #132]!	; 0x84

00012110 <bindtextdomain@plt>:
   12110:	add	ip, pc, #0, 12
   12114:	add	ip, ip, #159744	; 0x27000
   12118:	ldr	pc, [ip, #124]!	; 0x7c

0001211c <__xstat64@plt>:
   1211c:	add	ip, pc, #0, 12
   12120:	add	ip, ip, #159744	; 0x27000
   12124:	ldr	pc, [ip, #116]!	; 0x74

00012128 <isatty@plt>:
   12128:	add	ip, pc, #0, 12
   1212c:	add	ip, ip, #159744	; 0x27000
   12130:	ldr	pc, [ip, #108]!	; 0x6c

00012134 <unsetenv@plt>:
   12134:	add	ip, pc, #0, 12
   12138:	add	ip, ip, #159744	; 0x27000
   1213c:	ldr	pc, [ip, #100]!	; 0x64

00012140 <strncmp@plt>:
   12140:	add	ip, pc, #0, 12
   12144:	add	ip, ip, #159744	; 0x27000
   12148:	ldr	pc, [ip, #92]!	; 0x5c

0001214c <abort@plt>:
   1214c:	add	ip, pc, #0, 12
   12150:	add	ip, ip, #159744	; 0x27000
   12154:	ldr	pc, [ip, #84]!	; 0x54

00012158 <closedir@plt>:
   12158:	add	ip, pc, #0, 12
   1215c:	add	ip, ip, #159744	; 0x27000
   12160:	ldr	pc, [ip, #76]!	; 0x4c

00012164 <getgrgid@plt>:
   12164:	add	ip, pc, #0, 12
   12168:	add	ip, ip, #159744	; 0x27000
   1216c:	ldr	pc, [ip, #68]!	; 0x44

00012170 <getgrnam@plt>:
   12170:	add	ip, pc, #0, 12
   12174:	add	ip, ip, #159744	; 0x27000
   12178:	ldr	pc, [ip, #60]!	; 0x3c

0001217c <__snprintf_chk@plt>:
   1217c:	add	ip, pc, #0, 12
   12180:	add	ip, ip, #159744	; 0x27000
   12184:	ldr	pc, [ip, #52]!	; 0x34

00012188 <putchar_unlocked@plt>:
   12188:	add	ip, pc, #0, 12
   1218c:	add	ip, ip, #159744	; 0x27000
   12190:	ldr	pc, [ip, #44]!	; 0x2c

00012194 <strspn@plt>:
   12194:	add	ip, pc, #0, 12
   12198:	add	ip, ip, #159744	; 0x27000
   1219c:	ldr	pc, [ip, #36]!	; 0x24

000121a0 <__mempcpy_chk@plt>:
   121a0:	add	ip, pc, #0, 12
   121a4:	add	ip, ip, #159744	; 0x27000
   121a8:	ldr	pc, [ip, #28]!

000121ac <__assert_fail@plt>:
   121ac:	add	ip, pc, #0, 12
   121b0:	add	ip, ip, #159744	; 0x27000
   121b4:	ldr	pc, [ip, #20]!

000121b8 <putc_unlocked@plt>:
   121b8:	add	ip, pc, #0, 12
   121bc:	add	ip, ip, #159744	; 0x27000
   121c0:	ldr	pc, [ip, #12]!

Disassembly of section .text:

000121c8 <_obstack_begin@@Base-0xdf1c>:
   121c8:	mov	fp, #0
   121cc:	mov	lr, #0
   121d0:	pop	{r1}		; (ldr r1, [sp], #4)
   121d4:	mov	r2, sp
   121d8:	push	{r2}		; (str r2, [sp, #-4]!)
   121dc:	push	{r0}		; (str r0, [sp, #-4]!)
   121e0:	ldr	ip, [pc, #16]	; 121f8 <putc_unlocked@plt+0x40>
   121e4:	push	{ip}		; (str ip, [sp, #-4]!)
   121e8:	ldr	r0, [pc, #12]	; 121fc <putc_unlocked@plt+0x44>
   121ec:	ldr	r3, [pc, #12]	; 12200 <putc_unlocked@plt+0x48>
   121f0:	bl	11f24 <__libc_start_main@plt>
   121f4:	bl	1214c <abort@plt>
   121f8:	ldrdeq	r4, [r2], -r8
   121fc:			; <UNDEFINED> instruction: 0x000122b8
   12200:	andeq	r4, r2, r8, ror r5
   12204:	ldr	r3, [pc, #20]	; 12220 <putc_unlocked@plt+0x68>
   12208:	ldr	r2, [pc, #20]	; 12224 <putc_unlocked@plt+0x6c>
   1220c:	add	r3, pc, r3
   12210:	ldr	r2, [r3, r2]
   12214:	cmp	r2, #0
   12218:	bxeq	lr
   1221c:	b	11f60 <__gmon_start__@plt>
   12220:	andeq	r6, r2, ip, ror #27
   12224:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   12228:	ldr	r0, [pc, #24]	; 12248 <putc_unlocked@plt+0x90>
   1222c:	ldr	r3, [pc, #24]	; 1224c <putc_unlocked@plt+0x94>
   12230:	cmp	r3, r0
   12234:	bxeq	lr
   12238:	ldr	r3, [pc, #16]	; 12250 <putc_unlocked@plt+0x98>
   1223c:	cmp	r3, #0
   12240:	bxeq	lr
   12244:	bx	r3
   12248:	andeq	r9, r3, r0, lsl r3
   1224c:	andeq	r9, r3, r0, lsl r3
   12250:	andeq	r0, r0, r0
   12254:	ldr	r0, [pc, #36]	; 12280 <putc_unlocked@plt+0xc8>
   12258:	ldr	r1, [pc, #36]	; 12284 <putc_unlocked@plt+0xcc>
   1225c:	sub	r1, r1, r0
   12260:	asr	r1, r1, #2
   12264:	add	r1, r1, r1, lsr #31
   12268:	asrs	r1, r1, #1
   1226c:	bxeq	lr
   12270:	ldr	r3, [pc, #16]	; 12288 <putc_unlocked@plt+0xd0>
   12274:	cmp	r3, #0
   12278:	bxeq	lr
   1227c:	bx	r3
   12280:	andeq	r9, r3, r0, lsl r3
   12284:	andeq	r9, r3, r0, lsl r3
   12288:	andeq	r0, r0, r0
   1228c:	push	{r4, lr}
   12290:	ldr	r4, [pc, #24]	; 122b0 <putc_unlocked@plt+0xf8>
   12294:	ldrb	r3, [r4]
   12298:	cmp	r3, #0
   1229c:	popne	{r4, pc}
   122a0:	bl	12228 <putc_unlocked@plt+0x70>
   122a4:	mov	r3, #1
   122a8:	strb	r3, [r4]
   122ac:	pop	{r4, pc}
   122b0:	andeq	r9, r3, ip, lsr #6
   122b4:	b	12254 <putc_unlocked@plt+0x9c>
   122b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   122bc:	add	fp, sp, #28
   122c0:	sub	sp, sp, #28
   122c4:	mov	r4, r1
   122c8:	mov	r5, r0
   122cc:	ldr	r0, [r1]
   122d0:	bl	20458 <_obstack_memory_used@@Base+0x78>
   122d4:	movw	r1, #27197	; 0x6a3d
   122d8:	movt	r1, #2
   122dc:	mov	r0, #6
   122e0:	bl	12074 <setlocale@plt>
   122e4:	movw	r6, #25759	; 0x649f
   122e8:	movt	r6, #2
   122ec:	movw	r1, #17940	; 0x4614
   122f0:	movt	r1, #2
   122f4:	mov	r0, r6
   122f8:	bl	12110 <bindtextdomain@plt>
   122fc:	mov	r0, r6
   12300:	bl	11dec <textdomain@plt>
   12304:	bl	129e8 <putc_unlocked@plt+0x830>
   12308:	movw	r0, #45976	; 0xb398
   1230c:	movt	r0, #1
   12310:	bl	245dc <_obstack_memory_used@@Base+0x41fc>
   12314:	movw	r1, #37680	; 0x9330
   12318:	movt	r1, #3
   1231c:	mov	r0, #0
   12320:	str	r0, [r1]
   12324:	movw	r1, #37684	; 0x9334
   12328:	movt	r1, #3
   1232c:	mov	r7, #1
   12330:	strb	r7, [r1]
   12334:	movw	r8, #37688	; 0x9338
   12338:	movt	r8, #3
   1233c:	str	r0, [r8]
   12340:	movw	r0, #37692	; 0x933c
   12344:	movt	r0, #3
   12348:	mvn	r1, #0
   1234c:	mov	r2, #-2147483648	; 0x80000000
   12350:	str	r2, [r0]
   12354:	str	r1, [r0, #4]
   12358:	mov	r0, r5
   1235c:	mov	r1, r4
   12360:	bl	129fc <putc_unlocked@plt+0x844>
   12364:	mov	r6, r0
   12368:	movw	r9, #37700	; 0x9344
   1236c:	movt	r9, #3
   12370:	ldrb	r0, [r9]
   12374:	cmp	r0, #0
   12378:	beq	12398 <putc_unlocked@plt+0x1e0>
   1237c:	bl	13f44 <putc_unlocked@plt+0x1d8c>
   12380:	ldrb	r0, [r9]
   12384:	cmp	r0, #0
   12388:	movwne	r0, #37704	; 0x9348
   1238c:	movtne	r0, #3
   12390:	movne	r7, #0
   12394:	strne	r7, [r0]
   12398:	movw	r0, #37708	; 0x934c
   1239c:	movt	r0, #3
   123a0:	ldrb	r0, [r0]
   123a4:	cmp	r0, #1
   123a8:	movw	r9, #37712	; 0x9350
   123ac:	movt	r9, #3
   123b0:	bne	123c8 <putc_unlocked@plt+0x210>
   123b4:	movw	r0, #37709	; 0x934d
   123b8:	movt	r0, #3
   123bc:	mov	r1, #1
   123c0:	strb	r1, [r0]
   123c4:	b	123d0 <putc_unlocked@plt+0x218>
   123c8:	cmp	r7, #0
   123cc:	beq	1263c <putc_unlocked@plt+0x484>
   123d0:	movw	r0, #37716	; 0x9354
   123d4:	movt	r0, #3
   123d8:	ldr	r1, [r0]
   123dc:	cmp	r1, #0
   123e0:	movw	r3, #37720	; 0x9358
   123e4:	movt	r3, #3
   123e8:	bne	12420 <putc_unlocked@plt+0x268>
   123ec:	ldr	r1, [r9]
   123f0:	mov	r2, #3
   123f4:	cmp	r1, #0
   123f8:	movweq	r2, #1
   123fc:	movw	r1, #37724	; 0x935c
   12400:	movt	r1, #3
   12404:	ldr	r1, [r1]
   12408:	cmp	r1, #3
   1240c:	movweq	r2, #1
   12410:	ldrb	r1, [r3]
   12414:	cmp	r1, #0
   12418:	movwne	r2, #1
   1241c:	str	r2, [r0]
   12420:	mov	r7, r9
   12424:	movw	sl, #37728	; 0x9360
   12428:	movt	sl, #3
   1242c:	ldrb	r0, [sl]
   12430:	cmp	r0, #1
   12434:	movw	r9, #37732	; 0x9364
   12438:	movt	r9, #3
   1243c:	bne	1249c <putc_unlocked@plt+0x2e4>
   12440:	movw	r0, #17228	; 0x434c
   12444:	movt	r0, #1
   12448:	str	r0, [sp]
   1244c:	movw	r2, #17124	; 0x42e4
   12450:	movt	r2, #1
   12454:	movw	r3, #17156	; 0x4304
   12458:	movt	r3, #1
   1245c:	mov	r0, #30
   12460:	mov	r1, #0
   12464:	bl	1c1fc <putc_unlocked@plt+0xa044>
   12468:	str	r0, [r9]
   1246c:	cmp	r0, #0
   12470:	beq	129e4 <putc_unlocked@plt+0x82c>
   12474:	movw	r0, #48328	; 0xbcc8
   12478:	movt	r0, #1
   1247c:	str	r0, [sp]
   12480:	movw	r0, #37736	; 0x9368
   12484:	movt	r0, #3
   12488:	movw	r3, #14896	; 0x3a30
   1248c:	movt	r3, #2
   12490:	mov	r1, #0
   12494:	mov	r2, #0
   12498:	bl	200e4 <_obstack_begin@@Base>
   1249c:	movw	r0, #17964	; 0x462c
   124a0:	movt	r0, #2
   124a4:	bl	11ef4 <getenv@plt>
   124a8:	bl	223c0 <_obstack_memory_used@@Base+0x1fe0>
   124ac:	movw	r1, #37780	; 0x9394
   124b0:	movt	r1, #3
   124b4:	str	r0, [r1]
   124b8:	ldr	r0, [r7]
   124bc:	cmp	r0, #0
   124c0:	movw	r0, #37790	; 0x939e
   124c4:	movt	r0, #3
   124c8:	beq	124e4 <putc_unlocked@plt+0x32c>
   124cc:	movw	r1, #37784	; 0x9398
   124d0:	movt	r1, #3
   124d4:	ldr	r1, [r1]
   124d8:	cmp	r1, #5
   124dc:	cmpne	r1, #3
   124e0:	bne	12690 <putc_unlocked@plt+0x4d8>
   124e4:	mov	r1, #1
   124e8:	strb	r1, [r0]
   124ec:	mov	r0, #0
   124f0:	and	r0, r0, #1
   124f4:	movw	r1, #37791	; 0x939f
   124f8:	movt	r1, #3
   124fc:	strb	r0, [r1]
   12500:	movw	r0, #37792	; 0x93a0
   12504:	movt	r0, #3
   12508:	ldrb	r0, [r0]
   1250c:	cmp	r0, #0
   12510:	beq	1255c <putc_unlocked@plt+0x3a4>
   12514:	movw	sl, #48328	; 0xbcc8
   12518:	movt	sl, #1
   1251c:	str	sl, [sp]
   12520:	movw	r0, #37796	; 0x93a4
   12524:	movt	r0, #3
   12528:	movw	r7, #14896	; 0x3a30
   1252c:	movt	r7, #2
   12530:	mov	r1, #0
   12534:	mov	r2, #0
   12538:	mov	r3, r7
   1253c:	bl	200e4 <_obstack_begin@@Base>
   12540:	str	sl, [sp]
   12544:	movw	r0, #37840	; 0x93d0
   12548:	movt	r0, #3
   1254c:	mov	r1, #0
   12550:	mov	r2, #0
   12554:	mov	r3, r7
   12558:	bl	200e4 <_obstack_begin@@Base>
   1255c:	movw	r0, #37884	; 0x93fc
   12560:	movt	r0, #3
   12564:	ldrb	r0, [r0]
   12568:	cmp	r0, #0
   1256c:	beq	12594 <putc_unlocked@plt+0x3dc>
   12570:	bl	14350 <putc_unlocked@plt+0x2198>
   12574:	bl	23274 <_obstack_memory_used@@Base+0x2e94>
   12578:	cmp	r0, #0
   1257c:	movw	r1, #27197	; 0x6a3d
   12580:	movt	r1, #2
   12584:	movne	r1, r0
   12588:	movw	r0, #37888	; 0x9400
   1258c:	movt	r0, #3
   12590:	str	r1, [r0]
   12594:	movw	r0, #37892	; 0x9404
   12598:	movt	r0, #3
   1259c:	mov	r1, #100	; 0x64
   125a0:	str	r1, [r0]
   125a4:	mov	r0, #100	; 0x64
   125a8:	mov	r1, #152	; 0x98
   125ac:	bl	22e4c <_obstack_memory_used@@Base+0x2a6c>
   125b0:	movw	r1, #37896	; 0x9408
   125b4:	movt	r1, #3
   125b8:	str	r0, [r1]
   125bc:	movw	r1, #37900	; 0x940c
   125c0:	movt	r1, #3
   125c4:	mov	r0, #0
   125c8:	str	r0, [r1]
   125cc:	sub	sl, r5, r6
   125d0:	bl	143b4 <putc_unlocked@plt+0x21fc>
   125d4:	cmp	sl, #1
   125d8:	blt	12608 <putc_unlocked@plt+0x450>
   125dc:	movw	r7, #27197	; 0x6a3d
   125e0:	movt	r7, #2
   125e4:	ldr	r0, [r4, r6, lsl #2]
   125e8:	mov	r1, #0
   125ec:	mov	r2, #1
   125f0:	mov	r3, r7
   125f4:	bl	14494 <putc_unlocked@plt+0x22dc>
   125f8:	add	r6, r6, #1
   125fc:	cmp	r6, r5
   12600:	blt	125e4 <putc_unlocked@plt+0x42c>
   12604:	b	12714 <putc_unlocked@plt+0x55c>
   12608:	movw	r0, #37720	; 0x9358
   1260c:	movt	r0, #3
   12610:	ldrb	r0, [r0]
   12614:	cmp	r0, #1
   12618:	bne	12700 <putc_unlocked@plt+0x548>
   1261c:	movw	r0, #34038	; 0x84f6
   12620:	movt	r0, #2
   12624:	movw	r3, #27197	; 0x6a3d
   12628:	movt	r3, #2
   1262c:	mov	r1, #3
   12630:	mov	r2, #1
   12634:	bl	14494 <putc_unlocked@plt+0x22dc>
   12638:	b	12714 <putc_unlocked@plt+0x55c>
   1263c:	mov	r0, #13
   12640:	bl	14278 <putc_unlocked@plt+0x20c0>
   12644:	cmp	r0, #0
   12648:	bne	123b4 <putc_unlocked@plt+0x1fc>
   1264c:	mov	r0, #14
   12650:	bl	14278 <putc_unlocked@plt+0x20c0>
   12654:	cmp	r0, #0
   12658:	beq	12670 <putc_unlocked@plt+0x4b8>
   1265c:	movw	r0, #37710	; 0x934e
   12660:	movt	r0, #3
   12664:	ldrb	r0, [r0]
   12668:	cmp	r0, #0
   1266c:	bne	123b4 <putc_unlocked@plt+0x1fc>
   12670:	mov	r0, #12
   12674:	bl	14278 <putc_unlocked@plt+0x20c0>
   12678:	cmp	r0, #0
   1267c:	beq	123d0 <putc_unlocked@plt+0x218>
   12680:	ldr	r0, [r9]
   12684:	cmp	r0, #0
   12688:	beq	123b4 <putc_unlocked@plt+0x1fc>
   1268c:	b	123d0 <putc_unlocked@plt+0x218>
   12690:	movw	r1, #37789	; 0x939d
   12694:	movt	r1, #3
   12698:	ldrb	r1, [r1]
   1269c:	movw	r2, #37788	; 0x939c
   126a0:	movt	r2, #3
   126a4:	ldrb	r2, [r2]
   126a8:	orr	r1, r2, r1
   126ac:	ands	r1, r1, #1
   126b0:	strb	r1, [r0]
   126b4:	mov	r0, #0
   126b8:	bne	124f0 <putc_unlocked@plt+0x338>
   126bc:	ldrb	r1, [sl]
   126c0:	mov	r0, #1
   126c4:	cmp	r1, #0
   126c8:	bne	124f0 <putc_unlocked@plt+0x338>
   126cc:	movw	r0, #37724	; 0x935c
   126d0:	movt	r0, #3
   126d4:	ldr	r0, [r0]
   126d8:	movw	r1, #37700	; 0x9344
   126dc:	movt	r1, #3
   126e0:	ldrb	r1, [r1]
   126e4:	orrs	r0, r1, r0
   126e8:	movwne	r0, #1
   126ec:	movw	r1, #37708	; 0x934c
   126f0:	movt	r1, #3
   126f4:	ldrb	r1, [r1]
   126f8:	orr	r0, r1, r0
   126fc:	b	124f0 <putc_unlocked@plt+0x338>
   12700:	movw	r0, #34038	; 0x84f6
   12704:	movt	r0, #2
   12708:	mov	r1, #0
   1270c:	mov	r2, #1
   12710:	bl	14f40 <putc_unlocked@plt+0x2d88>
   12714:	movw	r4, #37900	; 0x940c
   12718:	movt	r4, #3
   1271c:	ldr	r0, [r4]
   12720:	cmp	r0, #0
   12724:	beq	12778 <putc_unlocked@plt+0x5c0>
   12728:	bl	14fb0 <putc_unlocked@plt+0x2df8>
   1272c:	movw	r0, #37720	; 0x9358
   12730:	movt	r0, #3
   12734:	ldrb	r0, [r0]
   12738:	cmp	r0, #0
   1273c:	moveq	r0, #0
   12740:	moveq	r1, #1
   12744:	bleq	150d4 <putc_unlocked@plt+0x2f1c>
   12748:	ldr	r0, [r4]
   1274c:	cmp	r0, #0
   12750:	beq	12778 <putc_unlocked@plt+0x5c0>
   12754:	bl	15218 <putc_unlocked@plt+0x3060>
   12758:	ldr	r0, [r8]
   1275c:	cmp	r0, #0
   12760:	movw	r7, #37684	; 0x9334
   12764:	movt	r7, #3
   12768:	beq	1283c <putc_unlocked@plt+0x684>
   1276c:	mov	r0, #10
   12770:	bl	15360 <putc_unlocked@plt+0x31a8>
   12774:	b	127a4 <putc_unlocked@plt+0x5ec>
   12778:	ldr	r4, [r8]
   1277c:	cmp	sl, #1
   12780:	bgt	1282c <putc_unlocked@plt+0x674>
   12784:	cmp	r4, #0
   12788:	movw	r7, #37684	; 0x9334
   1278c:	movt	r7, #3
   12790:	beq	127a8 <putc_unlocked@plt+0x5f0>
   12794:	ldr	r0, [r4, #12]
   12798:	cmp	r0, #0
   1279c:	moveq	r0, #0
   127a0:	strbeq	r0, [r7]
   127a4:	ldr	r4, [r8]
   127a8:	cmp	r4, #0
   127ac:	beq	1283c <putc_unlocked@plt+0x684>
   127b0:	mov	r6, #1
   127b4:	add	r5, sp, #8
   127b8:	b	127e0 <putc_unlocked@plt+0x628>
   127bc:	ldrb	r2, [r4, #8]
   127c0:	ldm	r4, {r0, r1}
   127c4:	bl	153fc <putc_unlocked@plt+0x3244>
   127c8:	mov	r0, r4
   127cc:	bl	153d4 <putc_unlocked@plt+0x321c>
   127d0:	strb	r6, [r7]
   127d4:	ldr	r4, [r8]
   127d8:	cmp	r4, #0
   127dc:	beq	1283c <putc_unlocked@plt+0x684>
   127e0:	ldr	r0, [r4, #12]
   127e4:	str	r0, [r8]
   127e8:	ldr	r0, [r9]
   127ec:	cmp	r0, #0
   127f0:	beq	127bc <putc_unlocked@plt+0x604>
   127f4:	ldr	r0, [r4]
   127f8:	cmp	r0, #0
   127fc:	bne	127bc <putc_unlocked@plt+0x604>
   12800:	mov	r0, r5
   12804:	bl	1537c <putc_unlocked@plt+0x31c4>
   12808:	ldr	r0, [r9]
   1280c:	mov	r1, r5
   12810:	bl	1cad8 <putc_unlocked@plt+0xa920>
   12814:	cmp	r0, #0
   12818:	beq	129a4 <putc_unlocked@plt+0x7ec>
   1281c:	bl	1434c <putc_unlocked@plt+0x2194>
   12820:	mov	r0, r4
   12824:	bl	153d4 <putc_unlocked@plt+0x321c>
   12828:	b	127d4 <putc_unlocked@plt+0x61c>
   1282c:	movw	r7, #37684	; 0x9334
   12830:	movt	r7, #3
   12834:	cmp	r4, #0
   12838:	bne	127b0 <putc_unlocked@plt+0x5f8>
   1283c:	movw	r0, #37700	; 0x9344
   12840:	movt	r0, #3
   12844:	ldrb	r0, [r0]
   12848:	cmp	r0, #0
   1284c:	beq	128f0 <putc_unlocked@plt+0x738>
   12850:	movw	r0, #37904	; 0x9410
   12854:	movt	r0, #3
   12858:	ldrb	r0, [r0]
   1285c:	cmp	r0, #1
   12860:	bne	128f0 <putc_unlocked@plt+0x738>
   12864:	movw	r4, #37344	; 0x91e0
   12868:	movt	r4, #3
   1286c:	ldr	r0, [r4]
   12870:	cmp	r0, #2
   12874:	bne	1289c <putc_unlocked@plt+0x6e4>
   12878:	ldr	r0, [r4, #4]
   1287c:	movw	r1, #18005	; 0x4655
   12880:	movt	r1, #2
   12884:	mov	r2, #2
   12888:	bl	11fa8 <bcmp@plt>
   1288c:	cmp	r0, #0
   12890:	ldreq	r0, [r4, #8]
   12894:	cmpeq	r0, #1
   12898:	beq	12990 <putc_unlocked@plt+0x7d8>
   1289c:	bl	158f4 <putc_unlocked@plt+0x373c>
   128a0:	movw	r0, #37668	; 0x9324
   128a4:	movt	r0, #3
   128a8:	ldr	r0, [r0]
   128ac:	bl	11e10 <fflush_unlocked@plt>
   128b0:	bl	15918 <putc_unlocked@plt+0x3760>
   128b4:	movw	r0, #37908	; 0x9414
   128b8:	movt	r0, #3
   128bc:	ldr	r4, [r0]
   128c0:	cmp	r4, #0
   128c4:	beq	128d8 <putc_unlocked@plt+0x720>
   128c8:	mov	r0, #19
   128cc:	bl	11ca8 <raise@plt>
   128d0:	subs	r4, r4, #1
   128d4:	bne	128c8 <putc_unlocked@plt+0x710>
   128d8:	movw	r0, #37912	; 0x9418
   128dc:	movt	r0, #3
   128e0:	ldr	r0, [r0]
   128e4:	cmp	r0, #0
   128e8:	beq	128f0 <putc_unlocked@plt+0x738>
   128ec:	bl	11ca8 <raise@plt>
   128f0:	movw	r0, #37792	; 0x93a0
   128f4:	movt	r0, #3
   128f8:	ldrb	r0, [r0]
   128fc:	cmp	r0, #0
   12900:	beq	12958 <putc_unlocked@plt+0x7a0>
   12904:	movw	r0, #18008	; 0x4658
   12908:	movt	r0, #2
   1290c:	movw	r1, #37796	; 0x93a4
   12910:	movt	r1, #3
   12914:	bl	15920 <putc_unlocked@plt+0x3768>
   12918:	movw	r0, #18018	; 0x4662
   1291c:	movt	r0, #2
   12920:	movw	r1, #37840	; 0x93d0
   12924:	movt	r1, #3
   12928:	bl	15920 <putc_unlocked@plt+0x3768>
   1292c:	movw	r0, #37916	; 0x941c
   12930:	movt	r0, #3
   12934:	ldr	r0, [r0]
   12938:	bl	20558 <_obstack_memory_used@@Base+0x178>
   1293c:	movw	r1, #34468	; 0x86a4
   12940:	movt	r1, #2
   12944:	ldr	r2, [r1, r0, lsl #2]
   12948:	movw	r1, #18031	; 0x466f
   1294c:	movt	r1, #2
   12950:	mov	r0, #1
   12954:	bl	12014 <__printf_chk@plt>
   12958:	ldr	r4, [r9]
   1295c:	cmp	r4, #0
   12960:	beq	1297c <putc_unlocked@plt+0x7c4>
   12964:	mov	r0, r4
   12968:	bl	1bd88 <putc_unlocked@plt+0x9bd0>
   1296c:	cmp	r0, #0
   12970:	bne	129c4 <putc_unlocked@plt+0x80c>
   12974:	mov	r0, r4
   12978:	bl	1c4d8 <putc_unlocked@plt+0xa320>
   1297c:	movw	r0, #37680	; 0x9330
   12980:	movt	r0, #3
   12984:	ldr	r0, [r0]
   12988:	sub	sp, fp, #28
   1298c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12990:	ldr	r0, [r4, #12]
   12994:	ldrb	r0, [r0]
   12998:	cmp	r0, #109	; 0x6d
   1299c:	blne	158f4 <putc_unlocked@plt+0x373c>
   129a0:	b	128a0 <putc_unlocked@plt+0x6e8>
   129a4:	movw	r0, #17967	; 0x462f
   129a8:	movt	r0, #2
   129ac:	movw	r1, #17973	; 0x4635
   129b0:	movt	r1, #2
   129b4:	movw	r3, #17982	; 0x463e
   129b8:	movt	r3, #2
   129bc:	movw	r2, #1805	; 0x70d
   129c0:	bl	121ac <__assert_fail@plt>
   129c4:	movw	r0, #18069	; 0x4695
   129c8:	movt	r0, #2
   129cc:	movw	r1, #17973	; 0x4635
   129d0:	movt	r1, #2
   129d4:	movw	r3, #17982	; 0x463e
   129d8:	movt	r3, #2
   129dc:	movw	r2, #1857	; 0x741
   129e0:	bl	121ac <__assert_fail@plt>
   129e4:	bl	23138 <_obstack_memory_used@@Base+0x2d58>
   129e8:	movw	r0, #37572	; 0x92c4
   129ec:	movt	r0, #3
   129f0:	mov	r1, #2
   129f4:	str	r1, [r0]
   129f8:	bx	lr
   129fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a00:	add	fp, sp, #28
   12a04:	sub	sp, sp, #52	; 0x34
   12a08:	mov	r7, r1
   12a0c:	mov	r5, r0
   12a10:	mov	r0, #0
   12a14:	str	r0, [sp, #20]
   12a18:	mvn	r4, #0
   12a1c:	mvn	r0, #0
   12a20:	str	r0, [sp, #28]
   12a24:	mvn	r0, #0
   12a28:	str	r0, [sp, #24]
   12a2c:	mvn	r8, #0
   12a30:	mvn	r0, #0
   12a34:	mvn	r1, #0
   12a38:	str	r1, [sp, #32]
   12a3c:	mvn	r1, #0
   12a40:	str	r1, [sp, #36]	; 0x24
   12a44:	mov	sl, #0
   12a48:	b	12a60 <putc_unlocked@plt+0x8a8>
   12a4c:	movw	r0, #37708	; 0x934c
   12a50:	movt	r0, #3
   12a54:	mov	r1, #1
   12a58:	strb	r1, [r0]
   12a5c:	mov	r0, r9
   12a60:	mov	r9, r0
   12a64:	str	r4, [sp, #40]	; 0x28
   12a68:	add	r0, sp, #40	; 0x28
   12a6c:	str	r0, [sp]
   12a70:	mov	r0, r5
   12a74:	mov	r1, r7
   12a78:	movw	r2, #25567	; 0x63df
   12a7c:	movt	r2, #2
   12a80:	movw	r3, #28000	; 0x6d60
   12a84:	movt	r3, #2
   12a88:	bl	11f6c <getopt_long@plt>
   12a8c:	add	r1, r0, #3
   12a90:	cmp	r1, #276	; 0x114
   12a94:	bhi	13e00 <putc_unlocked@plt+0x1c48>
   12a98:	mov	r0, #7
   12a9c:	add	r2, pc, #0
   12aa0:	ldr	pc, [r2, r1, lsl #2]
   12aa4:	andeq	r3, r1, r8, lsl #28
   12aa8:	andeq	r3, r1, r4, lsl #29
   12aac:			; <UNDEFINED> instruction: 0x000136b0
   12ab0:	andeq	r3, r1, r0, lsl #28
   12ab4:	andeq	r3, r1, r0, lsl #28
   12ab8:	andeq	r3, r1, r0, lsl #28
   12abc:	andeq	r3, r1, r0, lsl #28
   12ac0:	andeq	r3, r1, r0, lsl #28
   12ac4:	andeq	r3, r1, r0, lsl #28
   12ac8:	andeq	r3, r1, r0, lsl #28
   12acc:	andeq	r3, r1, r0, lsl #28
   12ad0:	andeq	r3, r1, r0, lsl #28
   12ad4:	andeq	r3, r1, r0, lsl #28
   12ad8:	andeq	r3, r1, r0, lsl #28
   12adc:	andeq	r3, r1, r0, lsl #28
   12ae0:	andeq	r3, r1, r0, lsl #28
   12ae4:	andeq	r3, r1, r0, lsl #28
   12ae8:	andeq	r3, r1, r0, lsl #28
   12aec:	andeq	r3, r1, r0, lsl #28
   12af0:	andeq	r3, r1, r0, lsl #28
   12af4:	andeq	r3, r1, r0, lsl #28
   12af8:	andeq	r3, r1, r0, lsl #28
   12afc:	andeq	r3, r1, r0, lsl #28
   12b00:	andeq	r3, r1, r0, lsl #28
   12b04:	andeq	r3, r1, r0, lsl #28
   12b08:	andeq	r3, r1, r0, lsl #28
   12b0c:	andeq	r3, r1, r0, lsl #28
   12b10:	andeq	r3, r1, r0, lsl #28
   12b14:	andeq	r3, r1, r0, lsl #28
   12b18:	andeq	r3, r1, r0, lsl #28
   12b1c:	andeq	r3, r1, r0, lsl #28
   12b20:	andeq	r3, r1, r0, lsl #28
   12b24:	andeq	r3, r1, r0, lsl #28
   12b28:	andeq	r3, r1, r0, lsl #28
   12b2c:	andeq	r3, r1, r0, lsl #28
   12b30:	andeq	r3, r1, r0, lsl #28
   12b34:	andeq	r3, r1, r0, lsl #28
   12b38:	andeq	r3, r1, r0, lsl #28
   12b3c:	andeq	r3, r1, r0, lsl #28
   12b40:	andeq	r3, r1, r0, lsl #28
   12b44:	andeq	r3, r1, r0, lsl #28
   12b48:	andeq	r3, r1, r0, lsl #28
   12b4c:	andeq	r3, r1, r0, lsl #28
   12b50:	andeq	r3, r1, r0, lsl #28
   12b54:	andeq	r3, r1, r0, lsl #28
   12b58:	andeq	r3, r1, r0, lsl #28
   12b5c:	andeq	r3, r1, r0, lsl #28
   12b60:	andeq	r3, r1, r0, lsl #28
   12b64:	andeq	r3, r1, r0, lsl #28
   12b68:	andeq	r3, r1, r0, lsl #28
   12b6c:	andeq	r3, r1, r0, lsl #28
   12b70:	andeq	r3, r1, r0, lsl #28
   12b74:	strdeq	r2, [r1], -r8
   12b78:	andeq	r3, r1, r0, lsl #28
   12b7c:	andeq	r3, r1, r0, lsl #28
   12b80:	andeq	r3, r1, r0, lsl #28
   12b84:	andeq	r3, r1, r0, lsl #28
   12b88:	andeq	r3, r1, r0, lsl #28
   12b8c:	andeq	r3, r1, r0, lsl #28
   12b90:	andeq	r3, r1, r0, lsl #28
   12b94:	andeq	r3, r1, r0, lsl #28
   12b98:	andeq	r3, r1, r0, lsl #28
   12b9c:	andeq	r3, r1, r0, lsl #28
   12ba0:	andeq	r3, r1, r0, lsl #28
   12ba4:	andeq	r3, r1, r0, lsl #28
   12ba8:	andeq	r3, r1, r0, lsl #28
   12bac:	andeq	r3, r1, r0, lsl #28
   12bb0:	andeq	r3, r1, r0, lsl #28
   12bb4:	andeq	r3, r1, r8, asr #4
   12bb8:	andeq	r3, r1, r0, lsr r2
   12bbc:	muleq	r1, r0, r1
   12bc0:	andeq	r3, r1, r0, lsl #6
   12bc4:	andeq	r3, r1, r0, lsl #28
   12bc8:	andeq	r3, r1, r0, lsr #3
   12bcc:	andeq	r3, r1, ip, ror #5
   12bd0:	andeq	r3, r1, r8, asr r2
   12bd4:	andeq	r3, r1, r4, ror #4
   12bd8:	andeq	r3, r1, r0, lsl #28
   12bdc:	andeq	r3, r1, r0, lsl #28
   12be0:	andeq	r3, r1, ip, lsr #2
   12be4:	andeq	r3, r1, r0, lsl #28
   12be8:	andeq	r3, r1, r4, ror #8
   12bec:	andeq	r3, r1, r0, lsl #28
   12bf0:	andeq	r3, r1, r0, lsl #28
   12bf4:	muleq	r1, r8, r1
   12bf8:	muleq	r1, r0, r3
   12bfc:	andeq	r3, r1, ip, asr #1
   12c00:	ldrdeq	r3, [r1], -r8
   12c04:	andeq	r3, r1, r4, lsl #3
   12c08:	andeq	r3, r1, r0, lsl #28
   12c0c:	andeq	r3, r1, r0, lsl #28
   12c10:	strdeq	r2, [r1], -r8
   12c14:	andeq	r3, r1, r0, lsl #28
   12c18:	andeq	r3, r1, ip, lsr r0
   12c1c:	andeq	r3, r1, r0, lsl #28
   12c20:	andeq	r3, r1, r0, lsl #28
   12c24:	andeq	r3, r1, r0, lsl #28
   12c28:	andeq	r3, r1, r0, lsl #28
   12c2c:	andeq	r3, r1, r0, lsl #28
   12c30:	andeq	r3, r1, r0, lsl #28
   12c34:	andeq	r3, r1, r4, lsr #4
   12c38:	andeq	r2, r1, r0, ror #20
   12c3c:	andeq	r3, r1, r0, lsl r0
   12c40:	andeq	r3, r1, r0, lsr #32
   12c44:	andeq	r3, r1, r0, lsl #28
   12c48:	andeq	r3, r1, ip, lsr r1
   12c4c:			; <UNDEFINED> instruction: 0x00012fbc
   12c50:	andeq	r2, r1, r8, ror pc
   12c54:	andeq	r3, r1, ip, lsl #6
   12c58:	andeq	r3, r1, r0, lsl #28
   12c5c:	andeq	r3, r1, ip, ror #8
   12c60:	andeq	r3, r1, r0, ror r5
   12c64:	andeq	r3, r1, ip, ror r2
   12c68:	andeq	r3, r1, r4, lsl #5
   12c6c:	strheq	r3, [r1], -r8
   12c70:	andeq	r3, r1, ip, lsr #32
   12c74:	andeq	r3, r1, r4, asr #1
   12c78:	andeq	r2, r1, r0, ror #30
   12c7c:	andeq	r2, r1, r8, lsl #30
   12c80:	ldrdeq	r3, [r1], -r4
   12c84:	andeq	r3, r1, ip, lsr r5
   12c88:	andeq	r3, r1, r4, asr r5
   12c8c:	andeq	r3, r1, r0, asr #8
   12c90:	strdeq	r3, [r1], -r8
   12c94:	andeq	r3, r1, r0, lsl #28
   12c98:	andeq	r3, r1, r0, lsl #28
   12c9c:	andeq	r3, r1, r0, lsl #28
   12ca0:	andeq	r3, r1, r0, lsl #28
   12ca4:	andeq	r3, r1, r0, lsl #28
   12ca8:	andeq	r3, r1, r0, lsl #28
   12cac:	andeq	r3, r1, r0, lsl #28
   12cb0:	andeq	r3, r1, r0, lsl #28
   12cb4:	andeq	r3, r1, r0, lsl #28
   12cb8:	andeq	r3, r1, r0, lsl #28
   12cbc:	andeq	r3, r1, r0, lsl #28
   12cc0:	andeq	r3, r1, r0, lsl #28
   12cc4:	andeq	r3, r1, r0, lsl #28
   12cc8:	andeq	r3, r1, r0, lsl #28
   12ccc:	andeq	r3, r1, r0, lsl #28
   12cd0:	andeq	r3, r1, r0, lsl #28
   12cd4:	andeq	r3, r1, r0, lsl #28
   12cd8:	andeq	r3, r1, r0, lsl #28
   12cdc:	andeq	r3, r1, r0, lsl #28
   12ce0:	andeq	r3, r1, r0, lsl #28
   12ce4:	andeq	r3, r1, r0, lsl #28
   12ce8:	andeq	r3, r1, r0, lsl #28
   12cec:	andeq	r3, r1, r0, lsl #28
   12cf0:	andeq	r3, r1, r0, lsl #28
   12cf4:	andeq	r3, r1, r0, lsl #28
   12cf8:	andeq	r3, r1, r0, lsl #28
   12cfc:	andeq	r3, r1, r0, lsl #28
   12d00:	andeq	r3, r1, r0, lsl #28
   12d04:	andeq	r3, r1, r0, lsl #28
   12d08:	andeq	r3, r1, r0, lsl #28
   12d0c:	andeq	r3, r1, r0, lsl #28
   12d10:	andeq	r3, r1, r0, lsl #28
   12d14:	andeq	r3, r1, r0, lsl #28
   12d18:	andeq	r3, r1, r0, lsl #28
   12d1c:	andeq	r3, r1, r0, lsl #28
   12d20:	andeq	r3, r1, r0, lsl #28
   12d24:	andeq	r3, r1, r0, lsl #28
   12d28:	andeq	r3, r1, r0, lsl #28
   12d2c:	andeq	r3, r1, r0, lsl #28
   12d30:	andeq	r3, r1, r0, lsl #28
   12d34:	andeq	r3, r1, r0, lsl #28
   12d38:	andeq	r3, r1, r0, lsl #28
   12d3c:	andeq	r3, r1, r0, lsl #28
   12d40:	andeq	r3, r1, r0, lsl #28
   12d44:	andeq	r3, r1, r0, lsl #28
   12d48:	andeq	r3, r1, r0, lsl #28
   12d4c:	andeq	r3, r1, r0, lsl #28
   12d50:	andeq	r3, r1, r0, lsl #28
   12d54:	andeq	r3, r1, r0, lsl #28
   12d58:	andeq	r3, r1, r0, lsl #28
   12d5c:	andeq	r3, r1, r0, lsl #28
   12d60:	andeq	r3, r1, r0, lsl #28
   12d64:	andeq	r3, r1, r0, lsl #28
   12d68:	andeq	r3, r1, r0, lsl #28
   12d6c:	andeq	r3, r1, r0, lsl #28
   12d70:	andeq	r3, r1, r0, lsl #28
   12d74:	andeq	r3, r1, r0, lsl #28
   12d78:	andeq	r3, r1, r0, lsl #28
   12d7c:	andeq	r3, r1, r0, lsl #28
   12d80:	andeq	r3, r1, r0, lsl #28
   12d84:	andeq	r3, r1, r0, lsl #28
   12d88:	andeq	r3, r1, r0, lsl #28
   12d8c:	andeq	r3, r1, r0, lsl #28
   12d90:	andeq	r3, r1, r0, lsl #28
   12d94:	andeq	r3, r1, r0, lsl #28
   12d98:	andeq	r3, r1, r0, lsl #28
   12d9c:	andeq	r3, r1, r0, lsl #28
   12da0:	andeq	r3, r1, r0, lsl #28
   12da4:	andeq	r3, r1, r0, lsl #28
   12da8:	andeq	r3, r1, r0, lsl #28
   12dac:	andeq	r3, r1, r0, lsl #28
   12db0:	andeq	r3, r1, r0, lsl #28
   12db4:	andeq	r3, r1, r0, lsl #28
   12db8:	andeq	r3, r1, r0, lsl #28
   12dbc:	andeq	r3, r1, r0, lsl #28
   12dc0:	andeq	r3, r1, r0, lsl #28
   12dc4:	andeq	r3, r1, r0, lsl #28
   12dc8:	andeq	r3, r1, r0, lsl #28
   12dcc:	andeq	r3, r1, r0, lsl #28
   12dd0:	andeq	r3, r1, r0, lsl #28
   12dd4:	andeq	r3, r1, r0, lsl #28
   12dd8:	andeq	r3, r1, r0, lsl #28
   12ddc:	andeq	r3, r1, r0, lsl #28
   12de0:	andeq	r3, r1, r0, lsl #28
   12de4:	andeq	r3, r1, r0, lsl #28
   12de8:	andeq	r3, r1, r0, lsl #28
   12dec:	andeq	r3, r1, r0, lsl #28
   12df0:	andeq	r3, r1, r0, lsl #28
   12df4:	andeq	r3, r1, r0, lsl #28
   12df8:	andeq	r3, r1, r0, lsl #28
   12dfc:	andeq	r3, r1, r0, lsl #28
   12e00:	andeq	r3, r1, r0, lsl #28
   12e04:	andeq	r3, r1, r0, lsl #28
   12e08:	andeq	r3, r1, r0, lsl #28
   12e0c:	andeq	r3, r1, r0, lsl #28
   12e10:	andeq	r3, r1, r0, lsl #28
   12e14:	andeq	r3, r1, r0, lsl #28
   12e18:	andeq	r3, r1, r0, lsl #28
   12e1c:	andeq	r3, r1, r0, lsl #28
   12e20:	andeq	r3, r1, r0, lsl #28
   12e24:	andeq	r3, r1, r0, lsl #28
   12e28:	andeq	r3, r1, r0, lsl #28
   12e2c:	andeq	r3, r1, r0, lsl #28
   12e30:	andeq	r3, r1, r0, lsl #28
   12e34:	andeq	r3, r1, r0, lsl #28
   12e38:	andeq	r3, r1, r0, lsl #28
   12e3c:	andeq	r3, r1, r0, lsl #28
   12e40:	andeq	r3, r1, r0, lsl #28
   12e44:	andeq	r3, r1, r0, lsl #28
   12e48:	andeq	r3, r1, r0, lsl #28
   12e4c:	andeq	r3, r1, r0, lsl #28
   12e50:	andeq	r3, r1, r0, lsl #28
   12e54:	andeq	r3, r1, r0, lsl #28
   12e58:	andeq	r3, r1, r0, lsl #28
   12e5c:	andeq	r3, r1, r0, lsl #28
   12e60:	andeq	r3, r1, r0, lsl #28
   12e64:	andeq	r3, r1, r0, lsl #28
   12e68:	andeq	r3, r1, r0, lsl #28
   12e6c:	andeq	r3, r1, r0, lsl #28
   12e70:	andeq	r3, r1, r0, lsl #28
   12e74:	andeq	r3, r1, r0, lsl #28
   12e78:	andeq	r3, r1, r0, lsl #28
   12e7c:	andeq	r3, r1, r0, lsl #28
   12e80:	andeq	r3, r1, r0, lsl #28
   12e84:	andeq	r3, r1, r0, lsl #28
   12e88:	andeq	r3, r1, r0, lsl #28
   12e8c:	andeq	r3, r1, r0, lsl #28
   12e90:	andeq	r3, r1, r0, lsl #28
   12e94:	andeq	r3, r1, r0, lsl #28
   12e98:	andeq	r3, r1, r0, lsl #28
   12e9c:	andeq	r3, r1, r0, lsl #28
   12ea0:	andeq	r3, r1, r0, lsl #28
   12ea4:	andeq	r3, r1, r0, lsl #28
   12ea8:	andeq	r3, r1, r0, lsl #28
   12eac:	andeq	r3, r1, r0, lsl #28
   12eb0:	andeq	r3, r1, r4
   12eb4:	ldrdeq	r3, [r1], -r8
   12eb8:	andeq	r3, r1, r8, lsl r3
   12ebc:	muleq	r1, r0, r5
   12ec0:	andeq	r2, r1, ip, ror #30
   12ec4:	muleq	r1, r8, r2
   12ec8:	andeq	r3, r1, r0, ror #10
   12ecc:	andeq	r2, r1, ip, asr #20
   12ed0:	andeq	r2, r1, r8, asr #31
   12ed4:	andeq	r3, r1, r8, asr #32
   12ed8:	strdeq	r3, [r1], -r4
   12edc:	andeq	r3, r1, r0, lsr #11
   12ee0:	andeq	r3, r1, r0, lsl #11
   12ee4:	andeq	r2, r1, r4, lsl pc
   12ee8:	andeq	r3, r1, ip, ror r4
   12eec:	andeq	r3, r1, r0, ror #9
   12ef0:	andeq	r2, r1, ip, asr #30
   12ef4:	muleq	r1, ip, r3
   12ef8:	ldr	r0, [sp, #36]	; 0x24
   12efc:	cmp	r0, #0
   12f00:	movwne	r0, #1
   12f04:	b	13574 <putc_unlocked@plt+0x13bc>
   12f08:	movw	r0, #37789	; 0x939d
   12f0c:	movt	r0, #3
   12f10:	b	12a54 <putc_unlocked@plt+0x89c>
   12f14:	movw	r0, #38336	; 0x95c0
   12f18:	movt	r0, #3
   12f1c:	mov	r1, #0
   12f20:	mov	r2, #1
   12f24:	str	r2, [r0]
   12f28:	str	r1, [r0, #4]
   12f2c:	movw	r0, #37536	; 0x92a0
   12f30:	movt	r0, #3
   12f34:	str	r2, [r0]
   12f38:	str	r1, [r0, #4]
   12f3c:	movw	r0, #38328	; 0x95b8
   12f40:	movt	r0, #3
   12f44:	mov	r1, #144	; 0x90
   12f48:	b	12fac <putc_unlocked@plt+0xdf4>
   12f4c:	movw	r0, #37672	; 0x9328
   12f50:	movt	r0, #3
   12f54:	ldr	sl, [r0]
   12f58:	mov	r0, r9
   12f5c:	b	12a60 <putc_unlocked@plt+0x8a8>
   12f60:	movw	r0, #38347	; 0x95cb
   12f64:	movt	r0, #3
   12f68:	b	12a54 <putc_unlocked@plt+0x89c>
   12f6c:	movw	r0, #37724	; 0x935c
   12f70:	movt	r0, #3
   12f74:	b	13544 <putc_unlocked@plt+0x138c>
   12f78:	movw	r0, #38336	; 0x95c0
   12f7c:	movt	r0, #3
   12f80:	mov	r1, #0
   12f84:	mov	r2, #1
   12f88:	str	r2, [r0]
   12f8c:	str	r1, [r0, #4]
   12f90:	movw	r0, #37536	; 0x92a0
   12f94:	movt	r0, #3
   12f98:	str	r2, [r0]
   12f9c:	str	r1, [r0, #4]
   12fa0:	movw	r0, #38328	; 0x95b8
   12fa4:	movt	r0, #3
   12fa8:	mov	r1, #176	; 0xb0
   12fac:	str	r1, [r0]
   12fb0:	movw	r0, #38324	; 0x95b4
   12fb4:	movt	r0, #3
   12fb8:	b	13548 <putc_unlocked@plt+0x1390>
   12fbc:	movw	r0, #38320	; 0x95b0
   12fc0:	movt	r0, #3
   12fc4:	b	1328c <putc_unlocked@plt+0x10d4>
   12fc8:	mov	r0, #8
   12fcc:	bl	22db0 <_obstack_memory_used@@Base+0x29d0>
   12fd0:	movw	r1, #37672	; 0x9328
   12fd4:	movt	r1, #3
   12fd8:	ldr	r1, [r1]
   12fdc:	movw	r2, #38352	; 0x95d0
   12fe0:	movt	r2, #3
   12fe4:	ldr	r3, [r2]
   12fe8:	stm	r0, {r1, r3}
   12fec:	str	r0, [r2]
   12ff0:	mov	r0, r9
   12ff4:	b	12a60 <putc_unlocked@plt+0x8a8>
   12ff8:	mov	r8, #1
   12ffc:	mov	r0, r9
   13000:	b	12a60 <putc_unlocked@plt+0x8a8>
   13004:	movw	r0, #38348	; 0x95cc
   13008:	movt	r0, #3
   1300c:	b	12a54 <putc_unlocked@plt+0x89c>
   13010:	movw	r0, #38316	; 0x95ac
   13014:	movt	r0, #3
   13018:	mov	r1, #1
   1301c:	b	13548 <putc_unlocked@plt+0x1390>
   13020:	movw	r0, #37720	; 0x9358
   13024:	movt	r0, #3
   13028:	b	12a54 <putc_unlocked@plt+0x89c>
   1302c:	movw	r0, #37724	; 0x935c
   13030:	movt	r0, #3
   13034:	mov	r1, #1
   13038:	b	13548 <putc_unlocked@plt+0x1390>
   1303c:	movw	r0, #37788	; 0x939c
   13040:	movt	r0, #3
   13044:	b	12a54 <putc_unlocked@plt+0x89c>
   13048:	movw	r0, #37672	; 0x9328
   1304c:	movt	r0, #3
   13050:	ldr	r1, [r0]
   13054:	cmp	r1, #0
   13058:	beq	13658 <putc_unlocked@plt+0x14a0>
   1305c:	movw	r0, #37568	; 0x92c0
   13060:	movt	r0, #3
   13064:	ldr	r0, [r0]
   13068:	mov	r4, #1
   1306c:	mov	r2, #4
   13070:	str	r2, [sp]
   13074:	stmib	sp, {r0, r4}
   13078:	movw	r0, #25709	; 0x646d
   1307c:	movt	r0, #2
   13080:	movw	r2, #28756	; 0x7054
   13084:	movt	r2, #2
   13088:	movw	r6, #28720	; 0x7030
   1308c:	movt	r6, #2
   13090:	mov	r3, r6
   13094:	bl	1a698 <putc_unlocked@plt+0x84e0>
   13098:	ldr	r0, [r6, r0, lsl #2]
   1309c:	cmp	r0, #1
   130a0:	beq	1366c <putc_unlocked@plt+0x14b4>
   130a4:	cmp	r0, #2
   130a8:	bne	13668 <putc_unlocked@plt+0x14b0>
   130ac:	bl	16280 <putc_unlocked@plt+0x40c8>
   130b0:	mov	r4, r0
   130b4:	b	1366c <putc_unlocked@plt+0x14b4>
   130b8:	movw	r0, #38346	; 0x95ca
   130bc:	movt	r0, #3
   130c0:	b	1328c <putc_unlocked@plt+0x10d4>
   130c4:	mov	r0, #1
   130c8:	b	13584 <putc_unlocked@plt+0x13cc>
   130cc:	mov	r8, #3
   130d0:	mov	r0, r9
   130d4:	b	12a60 <putc_unlocked@plt+0x8a8>
   130d8:	movw	r0, #37672	; 0x9328
   130dc:	movt	r0, #3
   130e0:	ldr	r0, [r0]
   130e4:	movw	r4, #38324	; 0x95b4
   130e8:	movt	r4, #3
   130ec:	movw	r6, #38336	; 0x95c0
   130f0:	movt	r6, #3
   130f4:	mov	r1, r4
   130f8:	mov	r2, r6
   130fc:	bl	1d6c0 <putc_unlocked@plt+0xb508>
   13100:	cmp	r0, #0
   13104:	bne	13e8c <putc_unlocked@plt+0x1cd4>
   13108:	ldrd	r0, [r6]
   1310c:	movw	r2, #37536	; 0x92a0
   13110:	movt	r2, #3
   13114:	strd	r0, [r2]
   13118:	ldr	r0, [r4]
   1311c:	movw	r1, #38328	; 0x95b8
   13120:	movt	r1, #3
   13124:	str	r0, [r1]
   13128:	b	13678 <putc_unlocked@plt+0x14c0>
   1312c:	movw	r0, #37716	; 0x9354
   13130:	movt	r0, #3
   13134:	mov	r1, #4
   13138:	b	13548 <putc_unlocked@plt+0x1390>
   1313c:	movw	r0, #37700	; 0x9344
   13140:	movt	r0, #3
   13144:	mov	r1, #0
   13148:	strb	r1, [r0]
   1314c:	movw	r0, #38312	; 0x95a8
   13150:	movt	r0, #3
   13154:	mov	r2, #2
   13158:	str	r2, [r0]
   1315c:	movw	r0, #37884	; 0x93fc
   13160:	movt	r0, #3
   13164:	strb	r1, [r0]
   13168:	movw	r0, #37789	; 0x939d
   1316c:	movt	r0, #3
   13170:	strb	r1, [r0]
   13174:	ldr	r0, [sp, #36]	; 0x24
   13178:	cmp	r0, #0
   1317c:	mvneq	r0, #0
   13180:	str	r0, [sp, #36]	; 0x24
   13184:	mov	r8, #6
   13188:	mov	r0, r9
   1318c:	b	12a60 <putc_unlocked@plt+0x8a8>
   13190:	mov	r0, #2
   13194:	b	13574 <putc_unlocked@plt+0x13bc>
   13198:	mov	r0, #5
   1319c:	b	12a60 <putc_unlocked@plt+0x8a8>
   131a0:	movw	r0, #37672	; 0x9328
   131a4:	movt	r0, #3
   131a8:	ldr	r1, [r0]
   131ac:	cmp	r1, #0
   131b0:	beq	13214 <putc_unlocked@plt+0x105c>
   131b4:	movw	r0, #37568	; 0x92c0
   131b8:	movt	r0, #3
   131bc:	ldr	r0, [r0]
   131c0:	mov	r2, #1
   131c4:	mov	r3, #4
   131c8:	str	r3, [sp]
   131cc:	stmib	sp, {r0, r2}
   131d0:	movw	r0, #25641	; 0x6429
   131d4:	movt	r0, #2
   131d8:	movw	r2, #28756	; 0x7054
   131dc:	movt	r2, #2
   131e0:	movw	r4, #28720	; 0x7030
   131e4:	movt	r4, #2
   131e8:	mov	r3, r4
   131ec:	bl	1a698 <putc_unlocked@plt+0x84e0>
   131f0:	ldr	r0, [r4, r0, lsl #2]
   131f4:	mvn	r4, #0
   131f8:	cmp	r0, #1
   131fc:	beq	13214 <putc_unlocked@plt+0x105c>
   13200:	cmp	r0, #2
   13204:	bne	13684 <putc_unlocked@plt+0x14cc>
   13208:	bl	16280 <putc_unlocked@plt+0x40c8>
   1320c:	cmp	r0, #0
   13210:	beq	136a8 <putc_unlocked@plt+0x14f0>
   13214:	movw	r0, #37724	; 0x935c
   13218:	movt	r0, #3
   1321c:	mov	r1, #3
   13220:	b	13548 <putc_unlocked@plt+0x1390>
   13224:	movw	r0, #38312	; 0x95a8
   13228:	movt	r0, #3
   1322c:	b	13544 <putc_unlocked@plt+0x138c>
   13230:	movw	r0, #25638	; 0x6426
   13234:	movt	r0, #2
   13238:	bl	16250 <putc_unlocked@plt+0x4098>
   1323c:	movw	r0, #25637	; 0x6425
   13240:	movt	r0, #2
   13244:	b	13270 <putc_unlocked@plt+0x10b8>
   13248:	movw	r0, #38312	; 0x95a8
   1324c:	movt	r0, #3
   13250:	mov	r1, #1
   13254:	b	13548 <putc_unlocked@plt+0x1390>
   13258:	movw	r0, #37716	; 0x9354
   1325c:	movt	r0, #3
   13260:	b	13544 <putc_unlocked@plt+0x138c>
   13264:	movw	r0, #37672	; 0x9328
   13268:	movt	r0, #3
   1326c:	ldr	r0, [r0]
   13270:	bl	16250 <putc_unlocked@plt+0x4098>
   13274:	mov	r0, r9
   13278:	b	12a60 <putc_unlocked@plt+0x8a8>
   1327c:	mov	r0, #4
   13280:	b	13574 <putc_unlocked@plt+0x13bc>
   13284:	movw	r0, #38345	; 0x95c9
   13288:	movt	r0, #3
   1328c:	mov	r1, #1
   13290:	strb	r1, [r0]
   13294:	b	13570 <putc_unlocked@plt+0x13b8>
   13298:	movw	r0, #37672	; 0x9328
   1329c:	movt	r0, #3
   132a0:	ldr	r1, [r0]
   132a4:	movw	r0, #37568	; 0x92c0
   132a8:	movt	r0, #3
   132ac:	ldr	r0, [r0]
   132b0:	mov	r2, #1
   132b4:	mov	r3, #4
   132b8:	str	r3, [sp]
   132bc:	stmib	sp, {r0, r2}
   132c0:	movw	r0, #25683	; 0x6453
   132c4:	movt	r0, #2
   132c8:	movw	r2, #28936	; 0x7108
   132cc:	movt	r2, #2
   132d0:	movw	r4, #28908	; 0x70ec
   132d4:	movt	r4, #2
   132d8:	mov	r3, r4
   132dc:	bl	1a698 <putc_unlocked@plt+0x84e0>
   132e0:	ldr	r0, [r4, r0, lsl #2]
   132e4:	mvn	r4, #0
   132e8:	b	13574 <putc_unlocked@plt+0x13bc>
   132ec:	movw	r0, #38346	; 0x95ca
   132f0:	movt	r0, #3
   132f4:	b	12a54 <putc_unlocked@plt+0x89c>
   132f8:	mov	r0, #3
   132fc:	b	13574 <putc_unlocked@plt+0x13bc>
   13300:	movw	r0, #37792	; 0x93a0
   13304:	movt	r0, #3
   13308:	b	12a54 <putc_unlocked@plt+0x89c>
   1330c:	movw	r0, #38344	; 0x95c8
   13310:	movt	r0, #3
   13314:	b	12a54 <putc_unlocked@plt+0x89c>
   13318:	mov	r6, sl
   1331c:	movw	r0, #37672	; 0x9328
   13320:	movt	r0, #3
   13324:	ldr	r1, [r0]
   13328:	cmp	r1, #0
   1332c:	beq	13660 <putc_unlocked@plt+0x14a8>
   13330:	movw	r0, #37568	; 0x92c0
   13334:	movt	r0, #3
   13338:	ldr	r0, [r0]
   1333c:	mov	sl, #1
   13340:	mov	r2, #4
   13344:	str	r2, [sp]
   13348:	stmib	sp, {r0, sl}
   1334c:	movw	r0, #25701	; 0x6465
   13350:	movt	r0, #2
   13354:	movw	r2, #28756	; 0x7054
   13358:	movt	r2, #2
   1335c:	movw	r4, #28720	; 0x7030
   13360:	movt	r4, #2
   13364:	mov	r3, r4
   13368:	bl	1a698 <putc_unlocked@plt+0x84e0>
   1336c:	ldr	r0, [r4, r0, lsl #2]
   13370:	mvn	r4, #0
   13374:	cmp	r0, #1
   13378:	beq	13690 <putc_unlocked@plt+0x14d8>
   1337c:	cmp	r0, #2
   13380:	bne	1368c <putc_unlocked@plt+0x14d4>
   13384:	bl	16280 <putc_unlocked@plt+0x40c8>
   13388:	mov	sl, r0
   1338c:	b	13690 <putc_unlocked@plt+0x14d8>
   13390:	movw	r0, #37728	; 0x9360
   13394:	movt	r0, #3
   13398:	b	12a54 <putc_unlocked@plt+0x89c>
   1339c:	movw	r1, #37700	; 0x9344
   133a0:	movt	r1, #3
   133a4:	mov	r0, #0
   133a8:	strb	r0, [r1]
   133ac:	movw	r1, #38356	; 0x95d4
   133b0:	movt	r1, #3
   133b4:	mov	r2, #1
   133b8:	strb	r2, [r1]
   133bc:	ldr	r1, [sp, #36]	; 0x24
   133c0:	cmp	r1, #0
   133c4:	movwne	r1, #1
   133c8:	str	r1, [sp, #36]	; 0x24
   133cc:	mov	r1, #0
   133d0:	str	r1, [sp, #32]
   133d4:	b	12a60 <putc_unlocked@plt+0x8a8>
   133d8:	movw	r0, #37672	; 0x9328
   133dc:	movt	r0, #3
   133e0:	ldr	r4, [r0]
   133e4:	mov	r6, #0
   133e8:	movw	r1, #25652	; 0x6434
   133ec:	movt	r1, #2
   133f0:	mov	r0, #0
   133f4:	mov	r2, #5
   133f8:	bl	11db0 <dcgettext@plt>
   133fc:	mov	r1, #2
   13400:	movw	r2, #27197	; 0x6a3d
   13404:	movt	r2, #2
   13408:	mvn	r3, #-2147483648	; 0x80000000
   1340c:	stm	sp, {r3, r6}
   13410:	str	r2, [sp, #8]
   13414:	str	r0, [sp, #12]
   13418:	str	r1, [sp, #16]
   1341c:	mov	r0, r4
   13420:	mvn	r4, #0
   13424:	mov	r1, #0
   13428:	mov	r2, #0
   1342c:	mov	r3, #0
   13430:	bl	2317c <_obstack_memory_used@@Base+0x2d9c>
   13434:	str	r0, [sp, #24]
   13438:	mov	r0, r9
   1343c:	b	12a60 <putc_unlocked@plt+0x8a8>
   13440:	movw	r6, #37672	; 0x9328
   13444:	movt	r6, #3
   13448:	ldr	r0, [r6]
   1344c:	bl	161e0 <putc_unlocked@plt+0x4028>
   13450:	str	r0, [sp, #28]
   13454:	cmn	r0, #1
   13458:	mov	r0, r9
   1345c:	bgt	12a60 <putc_unlocked@plt+0x8a8>
   13460:	b	13eb0 <putc_unlocked@plt+0x1cf8>
   13464:	mov	r0, #0
   13468:	b	12a60 <putc_unlocked@plt+0x8a8>
   1346c:	mov	r0, #1
   13470:	str	r0, [sp, #20]
   13474:	mov	r0, r9
   13478:	b	12a60 <putc_unlocked@plt+0x8a8>
   1347c:	movw	r0, #37672	; 0x9328
   13480:	movt	r0, #3
   13484:	ldr	r1, [r0]
   13488:	movw	r0, #37568	; 0x92c0
   1348c:	movt	r0, #3
   13490:	ldr	r0, [r0]
   13494:	mov	r2, #1
   13498:	mov	r3, #4
   1349c:	str	r3, [sp]
   134a0:	stmib	sp, {r0, r2}
   134a4:	movw	r0, #25669	; 0x6445
   134a8:	movt	r0, #2
   134ac:	movw	r2, #28820	; 0x7094
   134b0:	movt	r2, #2
   134b4:	movw	r4, #28796	; 0x707c
   134b8:	movt	r4, #2
   134bc:	mov	r3, r4
   134c0:	bl	1a698 <putc_unlocked@plt+0x84e0>
   134c4:	ldr	r8, [r4, r0, lsl #2]
   134c8:	mvn	r4, #0
   134cc:	mov	r0, r9
   134d0:	b	12a60 <putc_unlocked@plt+0x8a8>
   134d4:	mov	r8, #5
   134d8:	mov	r0, r9
   134dc:	b	12a60 <putc_unlocked@plt+0x8a8>
   134e0:	movw	r0, #37672	; 0x9328
   134e4:	movt	r0, #3
   134e8:	ldr	r1, [r0]
   134ec:	movw	r0, #37568	; 0x92c0
   134f0:	movt	r0, #3
   134f4:	ldr	r0, [r0]
   134f8:	mov	r2, #1
   134fc:	mov	r3, #4
   13500:	str	r3, [sp]
   13504:	stmib	sp, {r0, r2}
   13508:	movw	r0, #25676	; 0x644c
   1350c:	movt	r0, #2
   13510:	movw	r2, #28876	; 0x70cc
   13514:	movt	r2, #2
   13518:	movw	r4, #28848	; 0x70b0
   1351c:	movt	r4, #2
   13520:	mov	r3, r4
   13524:	bl	1a698 <putc_unlocked@plt+0x84e0>
   13528:	ldr	r0, [r4, r0, lsl #2]
   1352c:	mvn	r4, #0
   13530:	movw	r1, #38316	; 0x95ac
   13534:	movt	r1, #3
   13538:	b	1364c <putc_unlocked@plt+0x1494>
   1353c:	movw	r0, #38316	; 0x95ac
   13540:	movt	r0, #3
   13544:	mov	r1, #2
   13548:	str	r1, [r0]
   1354c:	mov	r0, r9
   13550:	b	12a60 <putc_unlocked@plt+0x8a8>
   13554:	mov	r8, #4
   13558:	mov	r0, r9
   1355c:	b	12a60 <putc_unlocked@plt+0x8a8>
   13560:	movw	sl, #25692	; 0x645c
   13564:	movt	sl, #2
   13568:	mov	r0, sl
   1356c:	bl	162bc <putc_unlocked@plt+0x4104>
   13570:	mov	r0, #0
   13574:	str	r0, [sp, #36]	; 0x24
   13578:	mov	r0, r9
   1357c:	b	12a60 <putc_unlocked@plt+0x8a8>
   13580:	mov	r0, #0
   13584:	str	r0, [sp, #32]
   13588:	mov	r0, r9
   1358c:	b	12a60 <putc_unlocked@plt+0x8a8>
   13590:	movw	r0, #37716	; 0x9354
   13594:	movt	r0, #3
   13598:	mov	r1, #3
   1359c:	b	13548 <putc_unlocked@plt+0x1390>
   135a0:	movw	r0, #37672	; 0x9328
   135a4:	movt	r0, #3
   135a8:	ldr	r1, [r0]
   135ac:	movw	r0, #37568	; 0x92c0
   135b0:	movt	r0, #3
   135b4:	ldr	r0, [r0]
   135b8:	mov	r2, #1
   135bc:	mov	r3, #4
   135c0:	str	r3, [sp]
   135c4:	stmib	sp, {r0, r2}
   135c8:	movw	r0, #25739	; 0x648b
   135cc:	movt	r0, #2
   135d0:	movw	r2, #34468	; 0x86a4
   135d4:	movt	r2, #2
   135d8:	movw	r4, #34512	; 0x86d0
   135dc:	movt	r4, #2
   135e0:	mov	r3, r4
   135e4:	bl	1a698 <putc_unlocked@plt+0x84e0>
   135e8:	ldr	r0, [r4, r0, lsl #2]
   135ec:	mvn	r4, #0
   135f0:	b	12a60 <putc_unlocked@plt+0x8a8>
   135f4:	movw	r0, #37672	; 0x9328
   135f8:	movt	r0, #3
   135fc:	ldr	r1, [r0]
   13600:	movw	r0, #37568	; 0x92c0
   13604:	movt	r0, #3
   13608:	ldr	r0, [r0]
   1360c:	mov	r2, #1
   13610:	mov	r3, #4
   13614:	str	r3, [sp]
   13618:	stmib	sp, {r0, r2}
   1361c:	movw	r0, #25721	; 0x6479
   13620:	movt	r0, #2
   13624:	movw	r2, #28984	; 0x7138
   13628:	movt	r2, #2
   1362c:	movw	r4, #28968	; 0x7128
   13630:	movt	r4, #2
   13634:	mov	r3, r4
   13638:	bl	1a698 <putc_unlocked@plt+0x84e0>
   1363c:	ldr	r0, [r4, r0, lsl #2]
   13640:	mvn	r4, #0
   13644:	movw	r1, #37724	; 0x935c
   13648:	movt	r1, #3
   1364c:	str	r0, [r1]
   13650:	mov	r0, r9
   13654:	b	12a60 <putc_unlocked@plt+0x8a8>
   13658:	mov	r4, #1
   1365c:	b	1366c <putc_unlocked@plt+0x14b4>
   13660:	mov	sl, #1
   13664:	b	13690 <putc_unlocked@plt+0x14d8>
   13668:	mov	r4, #0
   1366c:	movw	r0, #37884	; 0x93fc
   13670:	movt	r0, #3
   13674:	strb	r4, [r0]
   13678:	mov	r0, r9
   1367c:	mvn	r4, #0
   13680:	b	12a60 <putc_unlocked@plt+0x8a8>
   13684:	mov	r0, r9
   13688:	b	12a60 <putc_unlocked@plt+0x8a8>
   1368c:	mov	sl, #0
   13690:	movw	r0, #37700	; 0x9344
   13694:	movt	r0, #3
   13698:	strb	sl, [r0]
   1369c:	mov	r0, r9
   136a0:	mov	sl, r6
   136a4:	b	12a60 <putc_unlocked@plt+0x8a8>
   136a8:	mov	r0, r9
   136ac:	b	12a60 <putc_unlocked@plt+0x8a8>
   136b0:	movw	r0, #38336	; 0x95c0
   136b4:	movt	r0, #3
   136b8:	ldrd	r0, [r0]
   136bc:	orrs	r0, r0, r1
   136c0:	bne	13744 <putc_unlocked@plt+0x158c>
   136c4:	movw	r0, #25805	; 0x64cd
   136c8:	movt	r0, #2
   136cc:	bl	11ef4 <getenv@plt>
   136d0:	mov	r4, r0
   136d4:	movw	r5, #38324	; 0x95b4
   136d8:	movt	r5, #3
   136dc:	movw	r6, #38336	; 0x95c0
   136e0:	movt	r6, #3
   136e4:	mov	r1, r5
   136e8:	mov	r2, r6
   136ec:	bl	1d6c0 <putc_unlocked@plt+0xb508>
   136f0:	cmp	r4, #0
   136f4:	bne	1370c <putc_unlocked@plt+0x1554>
   136f8:	movw	r0, #25808	; 0x64d0
   136fc:	movt	r0, #2
   13700:	bl	11ef4 <getenv@plt>
   13704:	cmp	r0, #0
   13708:	beq	1372c <putc_unlocked@plt+0x1574>
   1370c:	ldrd	r0, [r6]
   13710:	movw	r2, #37536	; 0x92a0
   13714:	movt	r2, #3
   13718:	strd	r0, [r2]
   1371c:	ldr	r0, [r5]
   13720:	movw	r1, #38328	; 0x95b8
   13724:	movt	r1, #3
   13728:	str	r0, [r1]
   1372c:	ldr	r0, [sp, #20]
   13730:	tst	r0, #1
   13734:	movne	r1, #0
   13738:	movne	r0, #1024	; 0x400
   1373c:	strdne	r0, [r6]
   13740:	strne	r1, [r5]
   13744:	ldr	r1, [sp, #36]	; 0x24
   13748:	cmn	r1, #1
   1374c:	ldr	r5, [sp, #28]
   13750:	bgt	1378c <putc_unlocked@plt+0x15d4>
   13754:	movw	r0, #37560	; 0x92b8
   13758:	movt	r0, #3
   1375c:	ldr	r0, [r0]
   13760:	cmp	r0, #1
   13764:	bne	1377c <putc_unlocked@plt+0x15c4>
   13768:	bl	16280 <putc_unlocked@plt+0x40c8>
   1376c:	mov	r1, #1
   13770:	cmp	r0, #0
   13774:	movwne	r1, #2
   13778:	b	1378c <putc_unlocked@plt+0x15d4>
   1377c:	sub	r0, r0, #2
   13780:	clz	r0, r0
   13784:	lsr	r0, r0, #5
   13788:	lsl	r1, r0, #1
   1378c:	movw	r6, #37712	; 0x9350
   13790:	movt	r6, #3
   13794:	str	r1, [r6]
   13798:	sub	r1, r1, #2
   1379c:	mov	r0, #0
   137a0:	cmp	r1, #3
   137a4:	movwcc	r0, #1
   137a8:	movw	r1, #37700	; 0x9344
   137ac:	movt	r1, #3
   137b0:	ldrb	r1, [r1]
   137b4:	cmp	r1, #0
   137b8:	movwne	r1, #1
   137bc:	cmn	r5, #1
   137c0:	bgt	13878 <putc_unlocked@plt+0x16c0>
   137c4:	orrs	r0, r0, r1
   137c8:	beq	13878 <putc_unlocked@plt+0x16c0>
   137cc:	bl	16280 <putc_unlocked@plt+0x40c8>
   137d0:	cmp	r0, #0
   137d4:	beq	13804 <putc_unlocked@plt+0x164c>
   137d8:	add	r2, sp, #40	; 0x28
   137dc:	mov	r0, #1
   137e0:	movw	r1, #21523	; 0x5413
   137e4:	bl	11e58 <ioctl@plt>
   137e8:	cmp	r0, #0
   137ec:	bmi	13804 <putc_unlocked@plt+0x164c>
   137f0:	ldrh	r0, [sp, #42]	; 0x2a
   137f4:	cmp	r0, #0
   137f8:	beq	13804 <putc_unlocked@plt+0x164c>
   137fc:	mov	r5, r0
   13800:	b	13878 <putc_unlocked@plt+0x16c0>
   13804:	movw	r0, #25819	; 0x64db
   13808:	movt	r0, #2
   1380c:	bl	11ef4 <getenv@plt>
   13810:	cmp	r0, #0
   13814:	beq	13878 <putc_unlocked@plt+0x16c0>
   13818:	mov	r4, r0
   1381c:	ldrb	r0, [r0]
   13820:	cmp	r0, #0
   13824:	beq	13878 <putc_unlocked@plt+0x16c0>
   13828:	mov	r0, r4
   1382c:	bl	161e0 <putc_unlocked@plt+0x4028>
   13830:	mov	r5, r0
   13834:	cmn	r0, #1
   13838:	bgt	13878 <putc_unlocked@plt+0x16c0>
   1383c:	movw	r1, #25827	; 0x64e3
   13840:	movt	r1, #2
   13844:	mov	r0, #0
   13848:	mov	r2, #5
   1384c:	bl	11db0 <dcgettext@plt>
   13850:	mov	r7, r5
   13854:	mov	r5, r0
   13858:	mov	r0, r4
   1385c:	bl	21c4c <_obstack_memory_used@@Base+0x186c>
   13860:	mov	r3, r0
   13864:	mov	r0, #0
   13868:	mov	r1, #0
   1386c:	mov	r2, r5
   13870:	mov	r5, r7
   13874:	bl	11eb8 <error@plt>
   13878:	cmp	r5, #0
   1387c:	movwmi	r5, #80	; 0x50
   13880:	movw	r7, #38360	; 0x95d8
   13884:	movt	r7, #3
   13888:	str	r5, [r7]
   1388c:	movw	r0, #43691	; 0xaaab
   13890:	movt	r0, #43690	; 0xaaaa
   13894:	umull	r0, r1, r5, r0
   13898:	mov	r0, #1
   1389c:	lsr	r2, r1, #1
   138a0:	add	r3, r2, r2, lsl #1
   138a4:	subs	r3, r5, r3
   138a8:	addne	r2, r0, r1, lsr #1
   138ac:	movw	r0, #38364	; 0x95dc
   138b0:	movt	r0, #3
   138b4:	str	r2, [r0]
   138b8:	ldr	r0, [r6]
   138bc:	sub	r0, r0, #2
   138c0:	cmp	r0, #2
   138c4:	bhi	138e0 <putc_unlocked@plt+0x1728>
   138c8:	ldr	r0, [sp, #24]
   138cc:	cmp	r0, #0
   138d0:	movw	r4, #37704	; 0x9348
   138d4:	movt	r4, #3
   138d8:	bmi	13b08 <putc_unlocked@plt+0x1950>
   138dc:	str	r0, [r4]
   138e0:	ldr	r0, [sp, #32]
   138e4:	cmn	r0, #1
   138e8:	bgt	13904 <putc_unlocked@plt+0x174c>
   138ec:	movw	r0, #37560	; 0x92b8
   138f0:	movt	r0, #3
   138f4:	ldr	r1, [r0]
   138f8:	mov	r0, #0
   138fc:	cmp	r1, #1
   13900:	bleq	16280 <putc_unlocked@plt+0x40c8>
   13904:	cmp	r0, #0
   13908:	movwne	r0, #1
   1390c:	movw	r1, #38368	; 0x95e0
   13910:	movt	r1, #3
   13914:	strb	r0, [r1]
   13918:	cmn	r9, #1
   1391c:	bgt	13958 <putc_unlocked@plt+0x17a0>
   13920:	bl	162c0 <putc_unlocked@plt+0x4108>
   13924:	mov	r9, r0
   13928:	cmn	r0, #1
   1392c:	bgt	13958 <putc_unlocked@plt+0x17a0>
   13930:	movw	r0, #37560	; 0x92b8
   13934:	movt	r0, #3
   13938:	ldr	r0, [r0]
   1393c:	mov	r9, #7
   13940:	cmp	r0, #1
   13944:	bne	13958 <putc_unlocked@plt+0x17a0>
   13948:	mov	r9, #3
   1394c:	bl	16280 <putc_unlocked@plt+0x40c8>
   13950:	cmp	r0, #0
   13954:	beq	13964 <putc_unlocked@plt+0x17ac>
   13958:	mov	r0, #0
   1395c:	mov	r1, r9
   13960:	bl	20570 <_obstack_memory_used@@Base+0x190>
   13964:	mov	r4, #0
   13968:	mov	r0, #0
   1396c:	bl	20558 <_obstack_memory_used@@Base+0x178>
   13970:	mov	r5, r0
   13974:	ldr	r0, [r6]
   13978:	cmp	r0, #0
   1397c:	beq	13998 <putc_unlocked@plt+0x17e0>
   13980:	orr	r0, r0, #1
   13984:	cmp	r0, #3
   13988:	bne	139b8 <putc_unlocked@plt+0x1800>
   1398c:	ldr	r0, [r7]
   13990:	cmp	r0, #0
   13994:	beq	139b8 <putc_unlocked@plt+0x1800>
   13998:	sub	r0, r5, #6
   1399c:	clz	r0, r0
   139a0:	lsr	r0, r0, #5
   139a4:	orr	r1, r5, #2
   139a8:	sub	r1, r1, #3
   139ac:	clz	r1, r1
   139b0:	lsr	r1, r1, #5
   139b4:	orr	r4, r0, r1
   139b8:	movw	r0, #38369	; 0x95e1
   139bc:	movt	r0, #3
   139c0:	strb	r4, [r0]
   139c4:	mov	r0, #0
   139c8:	bl	2051c <_obstack_memory_used@@Base+0x13c>
   139cc:	movw	r4, #37916	; 0x941c
   139d0:	movt	r4, #3
   139d4:	str	r0, [r4]
   139d8:	cmp	r5, #7
   139dc:	bne	139ec <putc_unlocked@plt+0x1834>
   139e0:	mov	r1, #32
   139e4:	mov	r2, #1
   139e8:	bl	20588 <_obstack_memory_used@@Base+0x1a8>
   139ec:	movw	r0, #37724	; 0x935c
   139f0:	movt	r0, #3
   139f4:	ldr	r0, [r0]
   139f8:	cmp	r0, #2
   139fc:	bcc	13a3c <putc_unlocked@plt+0x1884>
   13a00:	sub	r1, r0, #2
   13a04:	cmp	r1, #5
   13a08:	beq	13a3c <putc_unlocked@plt+0x1884>
   13a0c:	movw	r2, #25956	; 0x6564
   13a10:	movt	r2, #2
   13a14:	ldrb	r1, [r2, r1]
   13a18:	add	r0, r0, r2
   13a1c:	sub	r5, r0, #1
   13a20:	ldr	r0, [r4]
   13a24:	uxtb	r1, r1
   13a28:	mov	r2, #1
   13a2c:	bl	20588 <_obstack_memory_used@@Base+0x1a8>
   13a30:	ldrb	r1, [r5], #1
   13a34:	cmp	r1, #0
   13a38:	bne	13a20 <putc_unlocked@plt+0x1868>
   13a3c:	mov	r0, #0
   13a40:	bl	2051c <_obstack_memory_used@@Base+0x13c>
   13a44:	movw	r1, #38372	; 0x95e4
   13a48:	movt	r1, #3
   13a4c:	str	r0, [r1]
   13a50:	mov	r1, #58	; 0x3a
   13a54:	mov	r2, #1
   13a58:	bl	20588 <_obstack_memory_used@@Base+0x1a8>
   13a5c:	movw	r0, #37884	; 0x93fc
   13a60:	movt	r0, #3
   13a64:	ldrb	r1, [r0]
   13a68:	ldr	r0, [r6]
   13a6c:	clz	r2, r0
   13a70:	lsr	r2, r2, #5
   13a74:	bic	r1, r2, r1
   13a78:	movw	r2, #37792	; 0x93a0
   13a7c:	movt	r2, #3
   13a80:	ldrb	r3, [r2]
   13a84:	and	r1, r1, r3
   13a88:	strb	r1, [r2]
   13a8c:	movw	r2, #38356	; 0x95d4
   13a90:	movt	r2, #3
   13a94:	ldrb	r2, [r2]
   13a98:	mov	r3, #10
   13a9c:	cmp	r2, #0
   13aa0:	movwne	r3, #0
   13aa4:	cmp	r3, r1
   13aa8:	bcc	13eec <putc_unlocked@plt+0x1d34>
   13aac:	cmn	r8, #1
   13ab0:	ble	13ad4 <putc_unlocked@plt+0x191c>
   13ab4:	movw	r1, #37784	; 0x9398
   13ab8:	movt	r1, #3
   13abc:	str	r8, [r1]
   13ac0:	cmp	r0, #0
   13ac4:	bne	13c7c <putc_unlocked@plt+0x1ac4>
   13ac8:	cmp	sl, #0
   13acc:	bne	13bd0 <putc_unlocked@plt+0x1a18>
   13ad0:	b	13ba8 <putc_unlocked@plt+0x19f0>
   13ad4:	cmp	r0, #0
   13ad8:	beq	13b90 <putc_unlocked@plt+0x19d8>
   13adc:	movw	r0, #38316	; 0x95ac
   13ae0:	movt	r0, #3
   13ae4:	ldr	r0, [r0]
   13ae8:	sub	r0, r0, #1
   13aec:	mov	r1, #0
   13af0:	cmp	r0, #3
   13af4:	movwcc	r1, #5
   13af8:	movw	r0, #37784	; 0x9398
   13afc:	movt	r0, #3
   13b00:	str	r1, [r0]
   13b04:	b	13c7c <putc_unlocked@plt+0x1ac4>
   13b08:	mov	r0, #8
   13b0c:	str	r0, [r4]
   13b10:	movw	r0, #25886	; 0x651e
   13b14:	movt	r0, #2
   13b18:	bl	11ef4 <getenv@plt>
   13b1c:	cmp	r0, #0
   13b20:	beq	138e0 <putc_unlocked@plt+0x1728>
   13b24:	mov	r5, r0
   13b28:	movw	r0, #27197	; 0x6a3d
   13b2c:	movt	r0, #2
   13b30:	str	r0, [sp]
   13b34:	add	r3, sp, #40	; 0x28
   13b38:	mov	r0, r5
   13b3c:	mov	r1, #0
   13b40:	mov	r2, #0
   13b44:	bl	234a0 <_obstack_memory_used@@Base+0x30c0>
   13b48:	cmp	r0, #0
   13b4c:	ldreq	r0, [sp, #44]	; 0x2c
   13b50:	cmpeq	r0, #0
   13b54:	beq	13d78 <putc_unlocked@plt+0x1bc0>
   13b58:	movw	r1, #25894	; 0x6526
   13b5c:	movt	r1, #2
   13b60:	mov	r0, #0
   13b64:	mov	r2, #5
   13b68:	bl	11db0 <dcgettext@plt>
   13b6c:	mov	r4, r0
   13b70:	mov	r0, r5
   13b74:	bl	21c4c <_obstack_memory_used@@Base+0x186c>
   13b78:	mov	r3, r0
   13b7c:	mov	r0, #0
   13b80:	mov	r1, #0
   13b84:	mov	r2, r4
   13b88:	bl	11eb8 <error@plt>
   13b8c:	b	138e0 <putc_unlocked@plt+0x1728>
   13b90:	movw	r0, #37784	; 0x9398
   13b94:	movt	r0, #3
   13b98:	mov	r1, #0
   13b9c:	str	r1, [r0]
   13ba0:	cmp	sl, #0
   13ba4:	bne	13bd0 <putc_unlocked@plt+0x1a18>
   13ba8:	movw	r0, #25998	; 0x658e
   13bac:	movt	r0, #2
   13bb0:	bl	11ef4 <getenv@plt>
   13bb4:	mov	sl, r0
   13bb8:	cmp	r0, #0
   13bbc:	bne	13bd0 <putc_unlocked@plt+0x1a18>
   13bc0:	movw	sl, #17957	; 0x4625
   13bc4:	movt	sl, #2
   13bc8:	mov	r0, sl
   13bcc:	bl	162bc <putc_unlocked@plt+0x4104>
   13bd0:	movw	r1, #29004	; 0x714c
   13bd4:	movt	r1, #2
   13bd8:	mov	r0, sl
   13bdc:	mov	r2, #6
   13be0:	bl	12140 <strncmp@plt>
   13be4:	cmp	r0, #0
   13be8:	bne	13c20 <putc_unlocked@plt+0x1a68>
   13bec:	movw	r4, #29004	; 0x714c
   13bf0:	movt	r4, #2
   13bf4:	mov	r0, #2
   13bf8:	bl	1bd0c <putc_unlocked@plt+0x9b54>
   13bfc:	cmp	r0, #0
   13c00:	beq	13c7c <putc_unlocked@plt+0x1ac4>
   13c04:	add	sl, sl, #6
   13c08:	mov	r0, sl
   13c0c:	mov	r1, r4
   13c10:	mov	r2, #6
   13c14:	bl	12140 <strncmp@plt>
   13c18:	cmp	r0, #0
   13c1c:	beq	13bf4 <putc_unlocked@plt+0x1a3c>
   13c20:	ldrb	r0, [sl]
   13c24:	cmp	r0, #43	; 0x2b
   13c28:	bne	13c90 <putc_unlocked@plt+0x1ad8>
   13c2c:	add	r4, sl, #1
   13c30:	mov	r0, r4
   13c34:	mov	r1, #10
   13c38:	bl	11fcc <strchr@plt>
   13c3c:	cmp	r0, #0
   13c40:	mov	r5, r4
   13c44:	beq	13c6c <putc_unlocked@plt+0x1ab4>
   13c48:	mov	r6, r0
   13c4c:	add	r5, r0, #1
   13c50:	mov	r0, r5
   13c54:	mov	r1, #10
   13c58:	bl	11fcc <strchr@plt>
   13c5c:	cmp	r0, #0
   13c60:	bne	13f10 <putc_unlocked@plt+0x1d58>
   13c64:	mov	r0, #0
   13c68:	strb	r0, [r6]
   13c6c:	movw	r0, #37544	; 0x92a8
   13c70:	movt	r0, #3
   13c74:	stm	r0, {r4, r5}
   13c78:	bl	16350 <putc_unlocked@plt+0x4198>
   13c7c:	movw	r0, #37656	; 0x9318
   13c80:	movt	r0, #3
   13c84:	ldr	r0, [r0]
   13c88:	sub	sp, fp, #28
   13c8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c90:	movw	r5, #29012	; 0x7154
   13c94:	movt	r5, #2
   13c98:	movw	r2, #29032	; 0x7168
   13c9c:	movt	r2, #2
   13ca0:	mov	r0, sl
   13ca4:	mov	r1, r5
   13ca8:	mov	r3, #4
   13cac:	bl	1a3cc <putc_unlocked@plt+0x8214>
   13cb0:	mov	r2, r0
   13cb4:	cmn	r0, #1
   13cb8:	ble	13cf0 <putc_unlocked@plt+0x1b38>
   13cbc:	cmp	r2, #3
   13cc0:	bhi	13c78 <putc_unlocked@plt+0x1ac0>
   13cc4:	add	r0, pc, #0
   13cc8:	ldr	pc, [r0, r2, lsl #2]
   13ccc:	ldrdeq	r3, [r1], -ip
   13cd0:	andeq	r3, r1, r4, ror #27
   13cd4:	andeq	r3, r1, r0, lsl #27
   13cd8:	andeq	r3, r1, r4, lsr #27
   13cdc:	movw	r0, #37544	; 0x92a8
   13ce0:	movt	r0, #3
   13ce4:	movw	r1, #26141	; 0x661d
   13ce8:	movt	r1, #2
   13cec:	b	13df4 <putc_unlocked@plt+0x1c3c>
   13cf0:	movw	r0, #26038	; 0x65b6
   13cf4:	movt	r0, #2
   13cf8:	mov	r1, sl
   13cfc:	bl	1a518 <putc_unlocked@plt+0x8360>
   13d00:	movw	r1, #26049	; 0x65c1
   13d04:	movt	r1, #2
   13d08:	mov	r0, #0
   13d0c:	mov	r2, #5
   13d10:	bl	11db0 <dcgettext@plt>
   13d14:	movw	r6, #37664	; 0x9320
   13d18:	movt	r6, #3
   13d1c:	ldr	r1, [r6]
   13d20:	bl	11c84 <fputs_unlocked@plt>
   13d24:	add	r5, r5, #4
   13d28:	movw	r3, #25692	; 0x645c
   13d2c:	movt	r3, #2
   13d30:	movw	r4, #26071	; 0x65d7
   13d34:	movt	r4, #2
   13d38:	ldr	r0, [r6]
   13d3c:	mov	r1, #1
   13d40:	mov	r2, r4
   13d44:	bl	12044 <__fprintf_chk@plt>
   13d48:	ldr	r3, [r5], #4
   13d4c:	cmp	r3, #0
   13d50:	bne	13d38 <putc_unlocked@plt+0x1b80>
   13d54:	movw	r1, #26087	; 0x65e7
   13d58:	movt	r1, #2
   13d5c:	mov	r0, #0
   13d60:	mov	r2, #5
   13d64:	bl	11db0 <dcgettext@plt>
   13d68:	ldr	r1, [r6]
   13d6c:	bl	11c84 <fputs_unlocked@plt>
   13d70:	mov	r0, #2
   13d74:	bl	159d0 <putc_unlocked@plt+0x3818>
   13d78:	ldr	r0, [sp, #40]	; 0x28
   13d7c:	b	138dc <putc_unlocked@plt+0x1724>
   13d80:	movw	r0, #37544	; 0x92a8
   13d84:	movt	r0, #3
   13d88:	movw	r1, #26168	; 0x6638
   13d8c:	movt	r1, #2
   13d90:	movw	r2, #26180	; 0x6644
   13d94:	movt	r2, #2
   13d98:	str	r2, [r0]
   13d9c:	str	r1, [r0, #4]
   13da0:	b	13c78 <putc_unlocked@plt+0x1ac0>
   13da4:	mov	r0, #2
   13da8:	bl	1bd0c <putc_unlocked@plt+0x9b54>
   13dac:	cmp	r0, #0
   13db0:	beq	13c78 <putc_unlocked@plt+0x1ac0>
   13db4:	mov	r4, #0
   13db8:	movw	r5, #37544	; 0x92a8
   13dbc:	movt	r5, #3
   13dc0:	ldr	r1, [r5, r4, lsl #2]
   13dc4:	mov	r0, #0
   13dc8:	mov	r2, #2
   13dcc:	bl	11db0 <dcgettext@plt>
   13dd0:	str	r0, [r5, r4, lsl #2]
   13dd4:	add	r4, r4, #1
   13dd8:	cmp	r4, #2
   13ddc:	bne	13dc0 <putc_unlocked@plt+0x1c08>
   13de0:	b	13c78 <putc_unlocked@plt+0x1ac0>
   13de4:	movw	r0, #37544	; 0x92a8
   13de8:	movt	r0, #3
   13dec:	movw	r1, #26165	; 0x6635
   13df0:	movt	r1, #2
   13df4:	str	r1, [r0]
   13df8:	str	r1, [r0, #4]
   13dfc:	b	13c78 <putc_unlocked@plt+0x1ac0>
   13e00:	mov	r0, #2
   13e04:	bl	159d0 <putc_unlocked@plt+0x3818>
   13e08:	movw	r0, #37564	; 0x92bc
   13e0c:	movt	r0, #3
   13e10:	ldr	r3, [r0]
   13e14:	movw	r0, #37668	; 0x9324
   13e18:	movt	r0, #3
   13e1c:	ldr	r0, [r0]
   13e20:	movw	r1, #37560	; 0x92b8
   13e24:	movt	r1, #3
   13e28:	ldr	r2, [r1]
   13e2c:	mov	r1, #0
   13e30:	movw	r7, #25789	; 0x64bd
   13e34:	movt	r7, #2
   13e38:	movw	r6, #25769	; 0x64a9
   13e3c:	movt	r6, #2
   13e40:	stm	sp, {r6, r7}
   13e44:	str	r1, [sp, #8]
   13e48:	movw	r1, #26413	; 0x672d
   13e4c:	movt	r1, #2
   13e50:	movw	r7, #25395	; 0x6333
   13e54:	movt	r7, #2
   13e58:	cmp	r2, #2
   13e5c:	moveq	r7, r1
   13e60:	movw	r1, #25766	; 0x64a6
   13e64:	movt	r1, #2
   13e68:	cmp	r2, #1
   13e6c:	movne	r1, r7
   13e70:	movw	r2, #25755	; 0x649b
   13e74:	movt	r2, #2
   13e78:	bl	22ca8 <_obstack_memory_used@@Base+0x28c8>
   13e7c:	mov	r0, #0
   13e80:	bl	11f90 <exit@plt>
   13e84:	mov	r0, #0
   13e88:	bl	159d0 <putc_unlocked@plt+0x3818>
   13e8c:	movw	r1, #37672	; 0x9328
   13e90:	movt	r1, #3
   13e94:	ldr	r2, [r1]
   13e98:	ldr	r1, [sp, #40]	; 0x28
   13e9c:	str	r2, [sp]
   13ea0:	movw	r3, #28000	; 0x6d60
   13ea4:	movt	r3, #2
   13ea8:	mov	r2, #0
   13eac:	bl	233dc <_obstack_memory_used@@Base+0x2ffc>
   13eb0:	movw	r1, #25618	; 0x6412
   13eb4:	movt	r1, #2
   13eb8:	mov	r0, #0
   13ebc:	mov	r2, #5
   13ec0:	bl	11db0 <dcgettext@plt>
   13ec4:	mov	r4, r0
   13ec8:	ldr	r0, [r6]
   13ecc:	bl	21c4c <_obstack_memory_used@@Base+0x186c>
   13ed0:	str	r0, [sp]
   13ed4:	movw	r2, #25611	; 0x640b
   13ed8:	movt	r2, #2
   13edc:	mov	r0, #2
   13ee0:	mov	r1, #0
   13ee4:	mov	r3, r4
   13ee8:	bl	11eb8 <error@plt>
   13eec:	movw	r1, #25962	; 0x656a
   13ef0:	movt	r1, #2
   13ef4:	mov	r0, #0
   13ef8:	mov	r2, #5
   13efc:	bl	11db0 <dcgettext@plt>
   13f00:	mov	r2, r0
   13f04:	mov	r0, #2
   13f08:	mov	r1, #0
   13f0c:	bl	11eb8 <error@plt>
   13f10:	movw	r1, #26009	; 0x6599
   13f14:	movt	r1, #2
   13f18:	mov	r0, #0
   13f1c:	mov	r2, #5
   13f20:	bl	11db0 <dcgettext@plt>
   13f24:	mov	r5, r0
   13f28:	mov	r0, r4
   13f2c:	bl	21c4c <_obstack_memory_used@@Base+0x186c>
   13f30:	mov	r3, r0
   13f34:	mov	r0, #2
   13f38:	mov	r1, #0
   13f3c:	mov	r2, r5
   13f40:	bl	11eb8 <error@plt>
   13f44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f48:	add	fp, sp, #28
   13f4c:	sub	sp, sp, #12
   13f50:	movw	r0, #26821	; 0x68c5
   13f54:	movt	r0, #2
   13f58:	bl	11ef4 <getenv@plt>
   13f5c:	str	r0, [sp, #8]
   13f60:	cmp	r0, #0
   13f64:	beq	1418c <putc_unlocked@plt+0x1fd4>
   13f68:	ldrb	r1, [r0]
   13f6c:	cmp	r1, #0
   13f70:	beq	1418c <putc_unlocked@plt+0x1fd4>
   13f74:	mov	r4, #0
   13f78:	strb	r4, [sp, #2]
   13f7c:	movw	r1, #16191	; 0x3f3f
   13f80:	strh	r1, [sp]
   13f84:	bl	23118 <_obstack_memory_used@@Base+0x2d38>
   13f88:	movw	r6, #41456	; 0xa1f0
   13f8c:	movt	r6, #3
   13f90:	str	r0, [r6]
   13f94:	str	r0, [sp, #4]
   13f98:	mov	r0, #1
   13f9c:	movw	r8, #41460	; 0xa1f4
   13fa0:	movt	r8, #3
   13fa4:	movw	r9, #29048	; 0x7178
   13fa8:	movt	r9, #2
   13fac:	mov	r7, sp
   13fb0:	sub	r0, r0, #1
   13fb4:	cmp	r0, #5
   13fb8:	bhi	14274 <putc_unlocked@plt+0x20bc>
   13fbc:	add	r1, pc, #0
   13fc0:	ldr	pc, [r1, r0, lsl #2]
   13fc4:	ldrdeq	r3, [r1], -ip
   13fc8:	andeq	r4, r1, r8, asr r0
   13fcc:	andeq	r4, r1, ip, ror r0
   13fd0:	andeq	r4, r1, r0, lsl r0
   13fd4:	andeq	r4, r1, r4, ror r2
   13fd8:	andeq	r4, r1, r8, asr #3
   13fdc:	ldr	r5, [sp, #8]
   13fe0:	ldrb	r0, [r5]
   13fe4:	cmp	r0, #42	; 0x2a
   13fe8:	beq	140cc <putc_unlocked@plt+0x1f14>
   13fec:	cmp	r0, #58	; 0x3a
   13ff0:	beq	14118 <putc_unlocked@plt+0x1f60>
   13ff4:	cmp	r0, #0
   13ff8:	beq	14224 <putc_unlocked@plt+0x206c>
   13ffc:	strb	r0, [sp]
   14000:	add	r0, r5, #1
   14004:	str	r0, [sp, #8]
   14008:	mov	r0, #2
   1400c:	b	13fb0 <putc_unlocked@plt+0x1df8>
   14010:	ldr	r0, [sp, #8]
   14014:	add	r1, r0, #1
   14018:	str	r1, [sp, #8]
   1401c:	ldrb	r1, [r0]
   14020:	mov	r0, #6
   14024:	cmp	r1, #61	; 0x3d
   14028:	bne	13fb0 <putc_unlocked@plt+0x1df8>
   1402c:	ldr	r0, [sp, #4]
   14030:	str	r0, [r4, #12]
   14034:	add	r3, r4, #8
   14038:	add	r0, sp, #4
   1403c:	add	r1, sp, #8
   14040:	mov	r2, #0
   14044:	bl	16630 <putc_unlocked@plt+0x4478>
   14048:	cmp	r0, #0
   1404c:	mov	r0, #6
   14050:	movwne	r0, #1
   14054:	b	13fb0 <putc_unlocked@plt+0x1df8>
   14058:	ldr	r1, [sp, #8]
   1405c:	ldrb	r2, [r1]
   14060:	mov	r0, #6
   14064:	cmp	r2, #0
   14068:	strbne	r2, [sp, #1]
   1406c:	addne	r0, r1, #1
   14070:	strne	r0, [sp, #8]
   14074:	movne	r0, #3
   14078:	b	13fb0 <putc_unlocked@plt+0x1df8>
   1407c:	ldr	r0, [sp, #8]
   14080:	add	r1, r0, #1
   14084:	str	r1, [sp, #8]
   14088:	ldrb	r0, [r0]
   1408c:	cmp	r0, #61	; 0x3d
   14090:	mov	r0, #6
   14094:	bne	13fb0 <putc_unlocked@plt+0x1df8>
   14098:	mov	sl, #0
   1409c:	movw	r5, #37344	; 0x91e0
   140a0:	movt	r5, #3
   140a4:	ldr	r1, [r9, sl, lsl #2]
   140a8:	mov	r0, r7
   140ac:	bl	11ccc <strcmp@plt>
   140b0:	cmp	r0, #0
   140b4:	beq	14128 <putc_unlocked@plt+0x1f70>
   140b8:	add	r5, r5, #8
   140bc:	add	sl, sl, #1
   140c0:	cmp	sl, #24
   140c4:	bne	140a4 <putc_unlocked@plt+0x1eec>
   140c8:	b	14150 <putc_unlocked@plt+0x1f98>
   140cc:	mov	r0, #20
   140d0:	bl	22db0 <_obstack_memory_used@@Base+0x29d0>
   140d4:	mov	r4, r0
   140d8:	ldr	r0, [r8]
   140dc:	str	r0, [r4, #16]
   140e0:	str	r4, [r8]
   140e4:	add	r0, r5, #1
   140e8:	str	r0, [sp, #8]
   140ec:	ldr	r0, [sp, #4]
   140f0:	str	r0, [r4, #4]
   140f4:	add	r0, sp, #4
   140f8:	add	r1, sp, #8
   140fc:	mov	r2, #1
   14100:	mov	r3, r4
   14104:	bl	16630 <putc_unlocked@plt+0x4478>
   14108:	cmp	r0, #0
   1410c:	mov	r0, #6
   14110:	movwne	r0, #4
   14114:	b	13fb0 <putc_unlocked@plt+0x1df8>
   14118:	add	r0, r5, #1
   1411c:	str	r0, [sp, #8]
   14120:	mov	r0, #1
   14124:	b	13fb0 <putc_unlocked@plt+0x1df8>
   14128:	ldr	r0, [sp, #4]
   1412c:	str	r0, [r5, #4]
   14130:	add	r0, sp, #4
   14134:	add	r1, sp, #8
   14138:	mov	r2, #0
   1413c:	mov	r3, r5
   14140:	bl	16630 <putc_unlocked@plt+0x4478>
   14144:	cmp	r0, #0
   14148:	mov	r0, #1
   1414c:	bne	13fb0 <putc_unlocked@plt+0x1df8>
   14150:	mov	r0, #0
   14154:	movw	r1, #26844	; 0x68dc
   14158:	movt	r1, #2
   1415c:	mov	r2, #5
   14160:	bl	11db0 <dcgettext@plt>
   14164:	mov	r5, r0
   14168:	mov	r0, r7
   1416c:	bl	21c4c <_obstack_memory_used@@Base+0x186c>
   14170:	mov	r3, r0
   14174:	mov	r0, #0
   14178:	mov	r1, #0
   1417c:	mov	r2, r5
   14180:	bl	11eb8 <error@plt>
   14184:	mov	r0, #6
   14188:	b	13fb0 <putc_unlocked@plt+0x1df8>
   1418c:	movw	r0, #26831	; 0x68cf
   14190:	movt	r0, #2
   14194:	bl	11ef4 <getenv@plt>
   14198:	cmp	r0, #0
   1419c:	beq	141ac <putc_unlocked@plt+0x1ff4>
   141a0:	ldrb	r0, [r0]
   141a4:	cmp	r0, #0
   141a8:	bne	14254 <putc_unlocked@plt+0x209c>
   141ac:	bl	16588 <putc_unlocked@plt+0x43d0>
   141b0:	cmp	r0, #0
   141b4:	bne	14254 <putc_unlocked@plt+0x209c>
   141b8:	movw	r0, #37700	; 0x9344
   141bc:	movt	r0, #3
   141c0:	mov	r1, #0
   141c4:	b	14268 <putc_unlocked@plt+0x20b0>
   141c8:	mov	r4, #0
   141cc:	movw	r1, #26868	; 0x68f4
   141d0:	movt	r1, #2
   141d4:	mov	r0, #0
   141d8:	mov	r2, #5
   141dc:	bl	11db0 <dcgettext@plt>
   141e0:	mov	r2, r0
   141e4:	mov	r0, #0
   141e8:	mov	r1, #0
   141ec:	bl	11eb8 <error@plt>
   141f0:	ldr	r0, [r6]
   141f4:	bl	1bcc8 <putc_unlocked@plt+0x9b10>
   141f8:	ldr	r0, [r8]
   141fc:	cmp	r0, #0
   14200:	beq	14218 <putc_unlocked@plt+0x2060>
   14204:	ldr	r5, [r0, #16]
   14208:	bl	1bcc8 <putc_unlocked@plt+0x9b10>
   1420c:	cmp	r5, #0
   14210:	mov	r0, r5
   14214:	bne	14204 <putc_unlocked@plt+0x204c>
   14218:	movw	r0, #37700	; 0x9344
   1421c:	movt	r0, #3
   14220:	strb	r4, [r0]
   14224:	movw	r0, #37344	; 0x91e0
   14228:	movt	r0, #3
   1422c:	ldr	r1, [r0, #56]	; 0x38
   14230:	cmp	r1, #6
   14234:	bne	14254 <putc_unlocked@plt+0x209c>
   14238:	ldr	r0, [r0, #60]	; 0x3c
   1423c:	movw	r1, #26920	; 0x6928
   14240:	movt	r1, #2
   14244:	mov	r2, #6
   14248:	bl	12140 <strncmp@plt>
   1424c:	cmp	r0, #0
   14250:	beq	1425c <putc_unlocked@plt+0x20a4>
   14254:	sub	sp, fp, #28
   14258:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1425c:	movw	r0, #37710	; 0x934e
   14260:	movt	r0, #3
   14264:	mov	r1, #1
   14268:	strb	r1, [r0]
   1426c:	sub	sp, fp, #28
   14270:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14274:	bl	1214c <abort@plt>
   14278:	push	{fp, lr}
   1427c:	mov	fp, sp
   14280:	movw	r2, #37344	; 0x91e0
   14284:	movt	r2, #3
   14288:	ldr	r1, [r2, r0, lsl #3]!
   1428c:	mov	r0, #0
   14290:	cmp	r1, #0
   14294:	beq	142b8 <putc_unlocked@plt+0x2100>
   14298:	ldr	r2, [r2, #4]
   1429c:	cmp	r1, #2
   142a0:	beq	142bc <putc_unlocked@plt+0x2104>
   142a4:	cmp	r1, #1
   142a8:	bne	142dc <putc_unlocked@plt+0x2124>
   142ac:	ldrb	r1, [r2]
   142b0:	cmp	r1, #48	; 0x30
   142b4:	movne	r0, #1
   142b8:	pop	{fp, pc}
   142bc:	movw	r1, #25400	; 0x6338
   142c0:	movt	r1, #2
   142c4:	mov	r0, r2
   142c8:	mov	r2, #2
   142cc:	bl	12140 <strncmp@plt>
   142d0:	cmp	r0, #0
   142d4:	movwne	r0, #1
   142d8:	pop	{fp, pc}
   142dc:	mov	r0, #1
   142e0:	pop	{fp, pc}
   142e4:	push	{fp, lr}
   142e8:	mov	fp, sp
   142ec:	mov	r2, r1
   142f0:	ldrd	r0, [r0]
   142f4:	mov	r3, #0
   142f8:	bl	243c4 <_obstack_memory_used@@Base+0x3fe4>
   142fc:	mov	r0, r2
   14300:	pop	{fp, pc}
   14304:	push	{r4, r5, fp, lr}
   14308:	add	fp, sp, #8
   1430c:	ldrd	r2, [r1]
   14310:	ldrd	r4, [r0]
   14314:	eor	r3, r5, r3
   14318:	eor	r2, r4, r2
   1431c:	orrs	r2, r2, r3
   14320:	mov	r2, #0
   14324:	bne	14344 <putc_unlocked@plt+0x218c>
   14328:	ldrd	r2, [r1, #8]
   1432c:	ldrd	r0, [r0, #8]
   14330:	eor	r1, r1, r3
   14334:	eor	r0, r0, r2
   14338:	orr	r0, r0, r1
   1433c:	clz	r0, r0
   14340:	lsr	r2, r0, #5
   14344:	mov	r0, r2
   14348:	pop	{r4, r5, fp, pc}
   1434c:	b	1bcc8 <putc_unlocked@plt+0x9b10>
   14350:	push	{r4, r5, fp, lr}
   14354:	add	fp, sp, #8
   14358:	mov	r4, #0
   1435c:	movw	r5, #37920	; 0x9420
   14360:	movt	r5, #3
   14364:	b	14380 <putc_unlocked@plt+0x21c8>
   14368:	ldrb	r0, [r5, r4]
   1436c:	orr	r0, r0, r1
   14370:	strb	r0, [r5, r4]
   14374:	add	r4, r4, #1
   14378:	cmp	r4, #256	; 0x100
   1437c:	beq	143b0 <putc_unlocked@plt+0x21f8>
   14380:	mov	r0, r4
   14384:	bl	1a82c <putc_unlocked@plt+0x8674>
   14388:	mov	r1, #1
   1438c:	cmp	r0, #0
   14390:	bne	14368 <putc_unlocked@plt+0x21b0>
   14394:	sub	r0, r4, #45	; 0x2d
   14398:	cmp	r0, #2
   1439c:	bcc	14368 <putc_unlocked@plt+0x21b0>
   143a0:	cmp	r4, #95	; 0x5f
   143a4:	cmpne	r4, #126	; 0x7e
   143a8:	movne	r1, #0
   143ac:	b	14368 <putc_unlocked@plt+0x21b0>
   143b0:	pop	{r4, r5, fp, pc}
   143b4:	push	{r4, r5, r6, sl, fp, lr}
   143b8:	add	fp, sp, #16
   143bc:	movw	r4, #37900	; 0x940c
   143c0:	movt	r4, #3
   143c4:	ldr	r0, [r4]
   143c8:	cmp	r0, #0
   143cc:	beq	143f8 <putc_unlocked@plt+0x2240>
   143d0:	mov	r5, #0
   143d4:	movw	r6, #41468	; 0xa1fc
   143d8:	movt	r6, #3
   143dc:	ldr	r0, [r6]
   143e0:	ldr	r0, [r0, r5, lsl #2]
   143e4:	bl	178ec <putc_unlocked@plt+0x5734>
   143e8:	add	r5, r5, #1
   143ec:	ldr	r0, [r4]
   143f0:	cmp	r5, r0
   143f4:	bcc	143dc <putc_unlocked@plt+0x2224>
   143f8:	movw	r0, #41465	; 0xa1f9
   143fc:	movt	r0, #3
   14400:	mov	r1, #0
   14404:	strb	r1, [r0]
   14408:	str	r1, [r4]
   1440c:	movw	r0, #41472	; 0xa200
   14410:	movt	r0, #3
   14414:	strb	r1, [r0]
   14418:	movw	r0, #41476	; 0xa204
   1441c:	movt	r0, #3
   14420:	str	r1, [r0]
   14424:	movw	r0, #41480	; 0xa208
   14428:	movt	r0, #3
   1442c:	str	r1, [r0]
   14430:	movw	r0, #41484	; 0xa20c
   14434:	movt	r0, #3
   14438:	str	r1, [r0]
   1443c:	movw	r0, #41488	; 0xa210
   14440:	movt	r0, #3
   14444:	str	r1, [r0]
   14448:	movw	r0, #41492	; 0xa214
   1444c:	movt	r0, #3
   14450:	str	r1, [r0]
   14454:	movw	r0, #41496	; 0xa218
   14458:	movt	r0, #3
   1445c:	str	r1, [r0]
   14460:	movw	r0, #41500	; 0xa21c
   14464:	movt	r0, #3
   14468:	str	r1, [r0]
   1446c:	movw	r0, #41504	; 0xa220
   14470:	movt	r0, #3
   14474:	str	r1, [r0]
   14478:	movw	r0, #41508	; 0xa224
   1447c:	movt	r0, #3
   14480:	str	r1, [r0]
   14484:	movw	r0, #41512	; 0xa228
   14488:	movt	r0, #3
   1448c:	str	r1, [r0]
   14490:	pop	{r4, r5, r6, sl, fp, pc}
   14494:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14498:	add	fp, sp, #28
   1449c:	sub	sp, sp, #716	; 0x2cc
   144a0:	mov	r8, r3
   144a4:	str	r2, [fp, #-716]	; 0xfffffd34
   144a8:	mov	r9, r1
   144ac:	mov	r7, r0
   144b0:	movw	r4, #37892	; 0x9404
   144b4:	movt	r4, #3
   144b8:	ldr	r1, [r4]
   144bc:	movw	r6, #37900	; 0x940c
   144c0:	movt	r6, #3
   144c4:	ldr	r0, [r6]
   144c8:	cmp	r0, r1
   144cc:	movw	r5, #37896	; 0x9408
   144d0:	movt	r5, #3
   144d4:	bne	144f4 <putc_unlocked@plt+0x233c>
   144d8:	ldr	r0, [r5]
   144dc:	mov	r2, #304	; 0x130
   144e0:	bl	22d70 <_obstack_memory_used@@Base+0x2990>
   144e4:	str	r0, [r5]
   144e8:	ldr	r0, [r4]
   144ec:	lsl	r0, r0, #1
   144f0:	str	r0, [r4]
   144f4:	ldr	r1, [r5]
   144f8:	ldr	r2, [r6]
   144fc:	mov	r0, #152	; 0x98
   14500:	str	r1, [fp, #-720]	; 0xfffffd30
   14504:	str	r2, [fp, #-724]	; 0xfffffd2c
   14508:	mla	r4, r2, r0, r1
   1450c:	mov	r0, r4
   14510:	mov	r1, #0
   14514:	mov	r2, #152	; 0x98
   14518:	bl	12008 <memset@plt>
   1451c:	mvn	r0, #0
   14520:	mov	r5, r4
   14524:	str	r0, [r5, #144]!	; 0x90
   14528:	str	r4, [fp, #-732]	; 0xfffffd24
   1452c:	str	r9, [r4, #120]!	; 0x78
   14530:	str	r4, [fp, #-736]	; 0xfffffd20
   14534:	movw	r4, #41465	; 0xa1f9
   14538:	movt	r4, #3
   1453c:	ldrb	r0, [r4]
   14540:	cmp	r0, #0
   14544:	bne	14574 <putc_unlocked@plt+0x23bc>
   14548:	movw	r0, #38369	; 0x95e1
   1454c:	movt	r0, #3
   14550:	ldrb	r0, [r0]
   14554:	cmp	r0, #0
   14558:	beq	14574 <putc_unlocked@plt+0x23bc>
   1455c:	mov	r0, r7
   14560:	bl	1792c <putc_unlocked@plt+0x5774>
   14564:	str	r0, [r5]
   14568:	cmp	r0, #0
   1456c:	movne	r0, #1
   14570:	strbne	r0, [r4]
   14574:	str	r5, [fp, #-740]	; 0xfffffd1c
   14578:	str	r7, [fp, #-728]	; 0xfffffd28
   1457c:	movw	r0, #37884	; 0x93fc
   14580:	movt	r0, #3
   14584:	ldrb	r5, [r0]
   14588:	movw	r0, #37790	; 0x939e
   1458c:	movt	r0, #3
   14590:	ldrb	r0, [r0]
   14594:	orr	r0, r0, r5
   14598:	tst	r0, #255	; 0xff
   1459c:	ldreq	r0, [fp, #-716]	; 0xfffffd34
   145a0:	cmpeq	r0, #0
   145a4:	beq	146f0 <putc_unlocked@plt+0x2538>
   145a8:	ldr	r4, [fp, #-728]	; 0xfffffd28
   145ac:	ldrb	r0, [r4]
   145b0:	cmp	r0, #47	; 0x2f
   145b4:	mov	r7, r4
   145b8:	beq	14604 <putc_unlocked@plt+0x244c>
   145bc:	ldrb	r0, [r8]
   145c0:	cmp	r0, #0
   145c4:	mov	r7, r4
   145c8:	beq	14604 <putc_unlocked@plt+0x244c>
   145cc:	mov	r0, r4
   145d0:	bl	11fc0 <strlen@plt>
   145d4:	mov	r6, r0
   145d8:	mov	r0, r8
   145dc:	bl	11fc0 <strlen@plt>
   145e0:	add	r0, r6, r0
   145e4:	add	r0, r0, #9
   145e8:	bic	r0, r0, #7
   145ec:	sub	r7, sp, r0
   145f0:	mov	sp, r7
   145f4:	mov	r0, r7
   145f8:	mov	r1, r8
   145fc:	mov	r2, r4
   14600:	bl	17990 <putc_unlocked@plt+0x57d8>
   14604:	cmp	r5, #0
   14608:	ldr	sl, [fp, #-732]	; 0xfffffd24
   1460c:	movw	r6, #37716	; 0x9354
   14610:	movt	r6, #3
   14614:	beq	14664 <putc_unlocked@plt+0x24ac>
   14618:	mov	r0, #152	; 0x98
   1461c:	ldr	r1, [fp, #-720]	; 0xfffffd30
   14620:	ldr	r2, [fp, #-724]	; 0xfffffd2c
   14624:	mla	r5, r2, r0, r1
   14628:	mov	r0, r7
   1462c:	mov	r1, #2
   14630:	bl	1abc4 <putc_unlocked@plt+0x8a0c>
   14634:	str	r0, [r5, #8]
   14638:	cmp	r0, #0
   1463c:	bne	14664 <putc_unlocked@plt+0x24ac>
   14640:	movw	r1, #27096	; 0x69d8
   14644:	movt	r1, #2
   14648:	mov	r0, #0
   1464c:	mov	r2, #5
   14650:	bl	11db0 <dcgettext@plt>
   14654:	mov	r1, r0
   14658:	ldr	r0, [fp, #-716]	; 0xfffffd34
   1465c:	mov	r2, r7
   14660:	bl	16b08 <putc_unlocked@plt+0x4950>
   14664:	add	r5, sl, #16
   14668:	ldr	r0, [r6]
   1466c:	sub	r1, r0, #2
   14670:	cmp	r1, #2
   14674:	bcs	146cc <putc_unlocked@plt+0x2514>
   14678:	ldr	r0, [fp, #-716]	; 0xfffffd34
   1467c:	cmp	r0, #0
   14680:	beq	1485c <putc_unlocked@plt+0x26a4>
   14684:	mov	r0, r7
   14688:	mov	r1, r5
   1468c:	bl	17a0c <putc_unlocked@plt+0x5854>
   14690:	ldr	r1, [r6]
   14694:	mov	r6, #1
   14698:	cmp	r1, #2
   1469c:	beq	146e4 <putc_unlocked@plt+0x252c>
   146a0:	cmn	r0, #1
   146a4:	ble	1484c <putc_unlocked@plt+0x2694>
   146a8:	mov	r1, #152	; 0x98
   146ac:	ldr	r2, [fp, #-720]	; 0xfffffd30
   146b0:	ldr	r3, [fp, #-724]	; 0xfffffd2c
   146b4:	mla	r1, r3, r1, r2
   146b8:	ldr	r1, [r1, #32]
   146bc:	and	r1, r1, #61440	; 0xf000
   146c0:	cmp	r1, #16384	; 0x4000
   146c4:	beq	146e4 <putc_unlocked@plt+0x252c>
   146c8:	b	1485c <putc_unlocked@plt+0x26a4>
   146cc:	cmp	r0, #4
   146d0:	bne	1485c <putc_unlocked@plt+0x26a4>
   146d4:	mov	r0, r7
   146d8:	mov	r1, r5
   146dc:	bl	17a0c <putc_unlocked@plt+0x5854>
   146e0:	mov	r6, #1
   146e4:	cmp	r0, #0
   146e8:	bne	14874 <putc_unlocked@plt+0x26bc>
   146ec:	b	148e4 <putc_unlocked@plt+0x272c>
   146f0:	movw	r0, #37700	; 0x9344
   146f4:	movt	r0, #3
   146f8:	ldrb	sl, [r0]
   146fc:	cmp	r9, #3
   14700:	bne	1473c <putc_unlocked@plt+0x2584>
   14704:	cmp	sl, #0
   14708:	beq	1473c <putc_unlocked@plt+0x2584>
   1470c:	mov	r0, #19
   14710:	bl	14278 <putc_unlocked@plt+0x20c0>
   14714:	cmp	r0, #0
   14718:	bne	145a8 <putc_unlocked@plt+0x23f0>
   1471c:	mov	r0, #18
   14720:	bl	14278 <putc_unlocked@plt+0x20c0>
   14724:	cmp	r0, #0
   14728:	bne	145a8 <putc_unlocked@plt+0x23f0>
   1472c:	mov	r0, #20
   14730:	bl	14278 <putc_unlocked@plt+0x20c0>
   14734:	cmp	r0, #0
   14738:	bne	145a8 <putc_unlocked@plt+0x23f0>
   1473c:	movw	r0, #37791	; 0x939f
   14740:	movt	r0, #3
   14744:	ldrb	r0, [r0]
   14748:	movw	r1, #38344	; 0x95c8
   1474c:	movt	r1, #3
   14750:	ldrb	r1, [r1]
   14754:	cmp	r0, #0
   14758:	cmpeq	r1, #0
   1475c:	beq	147b0 <putc_unlocked@plt+0x25f8>
   14760:	cmp	r9, #6
   14764:	cmpne	r9, #0
   14768:	bne	147b0 <putc_unlocked@plt+0x25f8>
   1476c:	movw	r2, #37716	; 0x9354
   14770:	movt	r2, #3
   14774:	ldr	r2, [r2]
   14778:	cmp	r2, #4
   1477c:	beq	145a8 <putc_unlocked@plt+0x23f0>
   14780:	movw	r2, #37710	; 0x934e
   14784:	movt	r2, #3
   14788:	ldrb	r2, [r2]
   1478c:	cmp	r2, #0
   14790:	bne	145a8 <putc_unlocked@plt+0x23f0>
   14794:	movw	r2, #37709	; 0x934d
   14798:	movt	r2, #3
   1479c:	ldrb	r2, [r2]
   147a0:	orr	r1, r1, r2
   147a4:	tst	r1, #1
   147a8:	beq	147b8 <putc_unlocked@plt+0x2600>
   147ac:	b	145a8 <putc_unlocked@plt+0x23f0>
   147b0:	cmp	r1, #0
   147b4:	bne	145a8 <putc_unlocked@plt+0x23f0>
   147b8:	cmp	r0, #0
   147bc:	beq	14ec4 <putc_unlocked@plt+0x2d0c>
   147c0:	cmp	r9, #0
   147c4:	beq	145a8 <putc_unlocked@plt+0x23f0>
   147c8:	ldr	r0, [fp, #-716]	; 0xfffffd34
   147cc:	cmp	r0, #0
   147d0:	bne	145a8 <putc_unlocked@plt+0x23f0>
   147d4:	mov	r6, #0
   147d8:	cmp	r9, #5
   147dc:	mov	r7, #0
   147e0:	bne	14ecc <putc_unlocked@plt+0x2d14>
   147e4:	movw	r0, #37724	; 0x935c
   147e8:	movt	r0, #3
   147ec:	ldr	r0, [r0]
   147f0:	cmp	r0, #3
   147f4:	beq	145a8 <putc_unlocked@plt+0x23f0>
   147f8:	cmp	sl, #0
   147fc:	beq	14ec4 <putc_unlocked@plt+0x2d0c>
   14800:	mov	r0, #14
   14804:	bl	14278 <putc_unlocked@plt+0x20c0>
   14808:	cmp	r0, #0
   1480c:	bne	145a8 <putc_unlocked@plt+0x23f0>
   14810:	mov	r0, #16
   14814:	bl	14278 <putc_unlocked@plt+0x20c0>
   14818:	cmp	r0, #0
   1481c:	bne	145a8 <putc_unlocked@plt+0x23f0>
   14820:	mov	r0, #17
   14824:	bl	14278 <putc_unlocked@plt+0x20c0>
   14828:	cmp	r0, #0
   1482c:	bne	145a8 <putc_unlocked@plt+0x23f0>
   14830:	mov	r0, #21
   14834:	bl	14278 <putc_unlocked@plt+0x20c0>
   14838:	mov	r6, #0
   1483c:	cmp	r0, #0
   14840:	mov	r7, #0
   14844:	bne	145a8 <putc_unlocked@plt+0x23f0>
   14848:	b	14ecc <putc_unlocked@plt+0x2d14>
   1484c:	bl	11fe4 <__errno_location@plt>
   14850:	ldr	r0, [r0]
   14854:	cmp	r0, #2
   14858:	bne	14874 <putc_unlocked@plt+0x26bc>
   1485c:	mov	r0, r7
   14860:	mov	r1, r5
   14864:	bl	17a44 <putc_unlocked@plt+0x588c>
   14868:	mov	r6, #0
   1486c:	cmp	r0, #0
   14870:	beq	148e4 <putc_unlocked@plt+0x272c>
   14874:	mov	r6, #0
   14878:	movw	r1, #27205	; 0x6a45
   1487c:	movt	r1, #2
   14880:	mov	r0, #0
   14884:	mov	r2, #5
   14888:	bl	11db0 <dcgettext@plt>
   1488c:	mov	r1, r0
   14890:	ldr	r5, [fp, #-716]	; 0xfffffd34
   14894:	mov	r0, r5
   14898:	mov	r2, r7
   1489c:	bl	16b08 <putc_unlocked@plt+0x4950>
   148a0:	mov	r0, #152	; 0x98
   148a4:	ldr	r1, [fp, #-720]	; 0xfffffd30
   148a8:	ldr	r2, [fp, #-724]	; 0xfffffd2c
   148ac:	mla	r0, r2, r0, r1
   148b0:	movw	r1, #37553	; 0x92b1
   148b4:	movt	r1, #3
   148b8:	str	r1, [r0, #128]	; 0x80
   148bc:	cmp	r5, #0
   148c0:	mov	r7, #0
   148c4:	bne	14f30 <putc_unlocked@plt+0x2d78>
   148c8:	mov	r0, r4
   148cc:	bl	23118 <_obstack_memory_used@@Base+0x2d38>
   148d0:	mov	r6, #0
   148d4:	mov	r7, #0
   148d8:	movw	r5, #37900	; 0x940c
   148dc:	movt	r5, #3
   148e0:	b	14f20 <putc_unlocked@plt+0x2d68>
   148e4:	mov	r0, #152	; 0x98
   148e8:	ldr	r4, [fp, #-720]	; 0xfffffd30
   148ec:	ldr	r2, [fp, #-724]	; 0xfffffd2c
   148f0:	mla	r0, r2, r0, r4
   148f4:	mov	r1, #1
   148f8:	strb	r1, [r0, #132]	; 0x84
   148fc:	cmp	r9, #5
   14900:	mov	r9, r2
   14904:	beq	14918 <putc_unlocked@plt+0x2760>
   14908:	ldr	r0, [r0, #32]
   1490c:	and	r0, r0, #61440	; 0xf000
   14910:	cmp	r0, #32768	; 0x8000
   14914:	bne	14954 <putc_unlocked@plt+0x279c>
   14918:	movw	r0, #37700	; 0x9344
   1491c:	movt	r0, #3
   14920:	ldrb	r0, [r0]
   14924:	cmp	r0, #0
   14928:	beq	14954 <putc_unlocked@plt+0x279c>
   1492c:	mov	r0, #21
   14930:	bl	14278 <putc_unlocked@plt+0x20c0>
   14934:	cmp	r0, #0
   14938:	beq	14954 <putc_unlocked@plt+0x279c>
   1493c:	mov	r0, #152	; 0x98
   14940:	mla	r5, r9, r0, r4
   14944:	mov	r0, r7
   14948:	mov	r1, sl
   1494c:	bl	17a7c <putc_unlocked@plt+0x58c4>
   14950:	strb	r0, [r5, #140]	; 0x8c
   14954:	movw	r8, #37712	; 0x9350
   14958:	movt	r8, #3
   1495c:	ldr	r0, [r8]
   14960:	cmp	r0, #0
   14964:	beq	1497c <putc_unlocked@plt+0x27c4>
   14968:	movw	r0, #37788	; 0x939c
   1496c:	movt	r0, #3
   14970:	ldrb	r0, [r0]
   14974:	cmp	r0, #1
   14978:	bne	14a9c <putc_unlocked@plt+0x28e4>
   1497c:	mov	r0, r7
   14980:	mov	r1, sl
   14984:	mov	r2, r6
   14988:	bl	17af8 <putc_unlocked@plt+0x5940>
   1498c:	mov	r1, #152	; 0x98
   14990:	mla	r1, r9, r1, r4
   14994:	add	r1, r1, #128	; 0x80
   14998:	cmp	r0, #0
   1499c:	bmi	149c4 <putc_unlocked@plt+0x280c>
   149a0:	ldr	r1, [r1]
   149a4:	movw	r0, #27222	; 0x6a56
   149a8:	movt	r0, #2
   149ac:	bl	11ccc <strcmp@plt>
   149b0:	mov	r5, r0
   149b4:	cmp	r0, #0
   149b8:	movwne	r5, #1
   149bc:	mov	r0, #0
   149c0:	b	149ec <putc_unlocked@plt+0x2834>
   149c4:	movw	r0, #37553	; 0x92b1
   149c8:	movt	r0, #3
   149cc:	str	r0, [r1]
   149d0:	bl	11fe4 <__errno_location@plt>
   149d4:	ldr	r0, [r0]
   149d8:	subs	r5, r0, #61	; 0x3d
   149dc:	movwne	r5, #1
   149e0:	bl	17b90 <putc_unlocked@plt+0x59d8>
   149e4:	bic	r0, r5, r0
   149e8:	mov	r5, #0
   149ec:	ldr	r1, [r8]
   149f0:	orrs	r1, r1, r0
   149f4:	mov	r6, #0
   149f8:	mov	r1, #0
   149fc:	bne	14a1c <putc_unlocked@plt+0x2864>
   14a00:	mov	r0, r7
   14a04:	mov	r1, sl
   14a08:	bl	17ba0 <putc_unlocked@plt+0x59e8>
   14a0c:	mov	r1, #0
   14a10:	cmp	r0, #0
   14a14:	movwgt	r1, #1
   14a18:	lsr	r0, r0, #31
   14a1c:	orr	r2, r5, r1
   14a20:	cmp	r2, #1
   14a24:	bne	14a3c <putc_unlocked@plt+0x2884>
   14a28:	mov	r6, #1
   14a2c:	cmp	r1, #0
   14a30:	movwne	r6, #2
   14a34:	cmp	r5, #0
   14a38:	moveq	r6, #2
   14a3c:	mov	r1, #152	; 0x98
   14a40:	mla	r1, r9, r1, r4
   14a44:	str	r6, [r1, #136]	; 0x88
   14a48:	movw	r1, #41472	; 0xa200
   14a4c:	movt	r1, #3
   14a50:	ldrb	r2, [r1]
   14a54:	cmp	r6, #0
   14a58:	movwne	r6, #1
   14a5c:	orr	r2, r2, r6
   14a60:	strb	r2, [r1]
   14a64:	cmp	r0, #0
   14a68:	beq	14a9c <putc_unlocked@plt+0x28e4>
   14a6c:	bl	11fe4 <__errno_location@plt>
   14a70:	ldr	r5, [r0]
   14a74:	mov	r0, #0
   14a78:	mov	r1, #3
   14a7c:	mov	r2, r7
   14a80:	bl	21b0c <_obstack_memory_used@@Base+0x172c>
   14a84:	mov	r3, r0
   14a88:	movw	r2, #34022	; 0x84e6
   14a8c:	movt	r2, #2
   14a90:	mov	r0, #0
   14a94:	mov	r1, r5
   14a98:	bl	11eb8 <error@plt>
   14a9c:	mov	r0, #152	; 0x98
   14aa0:	mla	r6, r9, r0, r4
   14aa4:	ldr	r0, [r6, #32]!
   14aa8:	and	r0, r0, #61440	; 0xf000
   14aac:	cmp	r0, #40960	; 0xa000
   14ab0:	bne	14b8c <putc_unlocked@plt+0x29d4>
   14ab4:	ldr	r0, [r8]
   14ab8:	cmp	r0, #0
   14abc:	beq	14ad4 <putc_unlocked@plt+0x291c>
   14ac0:	movw	r0, #37709	; 0x934d
   14ac4:	movt	r0, #3
   14ac8:	ldrb	r0, [r0]
   14acc:	cmp	r0, #1
   14ad0:	bne	14b8c <putc_unlocked@plt+0x29d4>
   14ad4:	mov	r0, r7
   14ad8:	mov	r1, sl
   14adc:	ldr	r2, [fp, #-716]	; 0xfffffd34
   14ae0:	bl	17c38 <putc_unlocked@plt+0x5a80>
   14ae4:	mov	r0, #152	; 0x98
   14ae8:	mla	r5, r9, r0, r4
   14aec:	ldr	r1, [r5, #4]!
   14af0:	mov	r0, r7
   14af4:	bl	17c88 <putc_unlocked@plt+0x5ad0>
   14af8:	mov	r4, r0
   14afc:	cmp	r0, #0
   14b00:	beq	14b80 <putc_unlocked@plt+0x29c8>
   14b04:	ldr	r7, [fp, #-740]	; 0xfffffd1c
   14b08:	ldr	r0, [r7]
   14b0c:	cmp	r0, #0
   14b10:	bne	14b28 <putc_unlocked@plt+0x2970>
   14b14:	ldr	r0, [r5]
   14b18:	bl	1792c <putc_unlocked@plt+0x5774>
   14b1c:	cmp	r0, #0
   14b20:	mvnne	r0, #0
   14b24:	strne	r0, [r7]
   14b28:	movw	r0, #37724	; 0x935c
   14b2c:	movt	r0, #3
   14b30:	ldr	r0, [r0]
   14b34:	cmp	r0, #1
   14b38:	bhi	14b50 <putc_unlocked@plt+0x2998>
   14b3c:	movw	r0, #37709	; 0x934d
   14b40:	movt	r0, #3
   14b44:	ldrb	r0, [r0]
   14b48:	cmp	r0, #1
   14b4c:	bne	14b80 <putc_unlocked@plt+0x29c8>
   14b50:	sub	r1, fp, #688	; 0x2b0
   14b54:	mov	r0, r4
   14b58:	bl	17d20 <putc_unlocked@plt+0x5b68>
   14b5c:	cmp	r0, #0
   14b60:	bne	14b80 <putc_unlocked@plt+0x29c8>
   14b64:	mov	r0, #152	; 0x98
   14b68:	ldr	r1, [fp, #-720]	; 0xfffffd30
   14b6c:	mla	r0, r9, r0, r1
   14b70:	mov	r1, #1
   14b74:	strb	r1, [r0, #133]	; 0x85
   14b78:	ldr	r1, [fp, #-672]	; 0xfffffd60
   14b7c:	str	r1, [r0, #124]	; 0x7c
   14b80:	mov	r0, r4
   14b84:	bl	1bcc8 <putc_unlocked@plt+0x9b10>
   14b88:	ldr	r4, [fp, #-720]	; 0xfffffd30
   14b8c:	ldr	r0, [r6]
   14b90:	and	r0, r0, #61440	; 0xf000
   14b94:	cmp	r0, #40960	; 0xa000
   14b98:	beq	14bcc <putc_unlocked@plt+0x2a14>
   14b9c:	cmp	r0, #16384	; 0x4000
   14ba0:	bne	14bd4 <putc_unlocked@plt+0x2a1c>
   14ba4:	ldr	r0, [fp, #-716]	; 0xfffffd34
   14ba8:	cmp	r0, #0
   14bac:	beq	14bdc <putc_unlocked@plt+0x2a24>
   14bb0:	movw	r0, #37720	; 0x9358
   14bb4:	movt	r0, #3
   14bb8:	ldrb	r1, [r0]
   14bbc:	mov	r0, #9
   14bc0:	cmp	r1, #1
   14bc4:	moveq	r0, #3
   14bc8:	b	14be0 <putc_unlocked@plt+0x2a28>
   14bcc:	mov	r0, #6
   14bd0:	b	14be0 <putc_unlocked@plt+0x2a28>
   14bd4:	mov	r0, #5
   14bd8:	b	14be0 <putc_unlocked@plt+0x2a28>
   14bdc:	mov	r0, #3
   14be0:	ldr	r1, [fp, #-736]	; 0xfffffd20
   14be4:	str	r0, [r1]
   14be8:	mov	r0, #152	; 0x98
   14bec:	mla	r0, r9, r0, r4
   14bf0:	ldr	sl, [r0, #80]	; 0x50
   14bf4:	ldr	r7, [r0, #84]	; 0x54
   14bf8:	ldr	r0, [r8]
   14bfc:	cmp	r0, #0
   14c00:	beq	14c18 <putc_unlocked@plt+0x2a60>
   14c04:	movw	r0, #37789	; 0x939d
   14c08:	movt	r0, #3
   14c0c:	ldrb	r0, [r0]
   14c10:	cmp	r0, #1
   14c14:	bne	14d30 <putc_unlocked@plt+0x2b78>
   14c18:	movw	r0, #38324	; 0x95b4
   14c1c:	movt	r0, #3
   14c20:	ldr	r3, [r0]
   14c24:	movw	r0, #38336	; 0x95c0
   14c28:	movt	r0, #3
   14c2c:	ldrd	r0, [r0]
   14c30:	sub	sp, sp, #16
   14c34:	mov	r2, #0
   14c38:	mov	r5, #512	; 0x200
   14c3c:	str	r5, [sp]
   14c40:	str	r2, [sp, #4]
   14c44:	str	r0, [sp, #8]
   14c48:	str	r1, [sp, #12]
   14c4c:	sub	r2, fp, #688	; 0x2b0
   14c50:	mov	r0, sl
   14c54:	mov	r1, r7
   14c58:	bl	1cd68 <putc_unlocked@plt+0xabb0>
   14c5c:	add	sp, sp, #16
   14c60:	mov	r1, #0
   14c64:	bl	1e1e4 <putc_unlocked@plt+0xc02c>
   14c68:	movw	r1, #41480	; 0xa208
   14c6c:	movt	r1, #3
   14c70:	ldr	r2, [r1]
   14c74:	cmp	r2, r0
   14c78:	strlt	r0, [r1]
   14c7c:	ldr	r0, [r8]
   14c80:	cmp	r0, #0
   14c84:	bne	14d30 <putc_unlocked@plt+0x2b78>
   14c88:	movw	r0, #38320	; 0x95b0
   14c8c:	movt	r0, #3
   14c90:	ldrb	r0, [r0]
   14c94:	cmp	r0, #0
   14c98:	bne	14cc0 <putc_unlocked@plt+0x2b08>
   14c9c:	mov	r0, #152	; 0x98
   14ca0:	mla	r0, r9, r0, r4
   14ca4:	ldr	r0, [r0, #40]	; 0x28
   14ca8:	bl	17d50 <putc_unlocked@plt+0x5b98>
   14cac:	movw	r1, #41488	; 0xa210
   14cb0:	movt	r1, #3
   14cb4:	ldr	r2, [r1]
   14cb8:	cmp	r2, r0
   14cbc:	strlt	r0, [r1]
   14cc0:	movw	r0, #38346	; 0x95ca
   14cc4:	movt	r0, #3
   14cc8:	ldrb	r0, [r0]
   14ccc:	cmp	r0, #0
   14cd0:	bne	14cf8 <putc_unlocked@plt+0x2b40>
   14cd4:	mov	r0, #152	; 0x98
   14cd8:	mla	r0, r9, r0, r4
   14cdc:	ldr	r0, [r0, #44]	; 0x2c
   14ce0:	bl	17d8c <putc_unlocked@plt+0x5bd4>
   14ce4:	movw	r1, #41492	; 0xa214
   14ce8:	movt	r1, #3
   14cec:	ldr	r2, [r1]
   14cf0:	cmp	r2, r0
   14cf4:	strlt	r0, [r1]
   14cf8:	movw	r0, #38348	; 0x95cc
   14cfc:	movt	r0, #3
   14d00:	ldrb	r0, [r0]
   14d04:	cmp	r0, #1
   14d08:	bne	14d30 <putc_unlocked@plt+0x2b78>
   14d0c:	mov	r0, #152	; 0x98
   14d10:	mla	r0, r9, r0, r4
   14d14:	ldr	r0, [r0, #40]	; 0x28
   14d18:	bl	17d50 <putc_unlocked@plt+0x5b98>
   14d1c:	movw	r1, #41496	; 0xa218
   14d20:	movt	r1, #3
   14d24:	ldr	r2, [r1]
   14d28:	cmp	r2, r0
   14d2c:	strlt	r0, [r1]
   14d30:	movw	r0, #37788	; 0x939c
   14d34:	movt	r0, #3
   14d38:	ldrb	r0, [r0]
   14d3c:	cmp	r0, #1
   14d40:	bne	14d68 <putc_unlocked@plt+0x2bb0>
   14d44:	mov	r0, #152	; 0x98
   14d48:	mla	r0, r9, r0, r4
   14d4c:	ldr	r0, [r0, #128]	; 0x80
   14d50:	bl	11fc0 <strlen@plt>
   14d54:	movw	r1, #41500	; 0xa21c
   14d58:	movt	r1, #3
   14d5c:	ldr	r2, [r1]
   14d60:	cmp	r2, r0
   14d64:	strlt	r0, [r1]
   14d68:	ldr	r0, [r8]
   14d6c:	cmp	r0, #0
   14d70:	beq	14d7c <putc_unlocked@plt+0x2bc4>
   14d74:	mov	r6, sl
   14d78:	b	14ecc <putc_unlocked@plt+0x2d14>
   14d7c:	mov	r0, #152	; 0x98
   14d80:	mla	r0, r9, r0, r4
   14d84:	ldr	r0, [r0, #36]	; 0x24
   14d88:	sub	lr, fp, #512	; 0x200
   14d8c:	sub	r2, lr, #197	; 0xc5
   14d90:	mov	r1, #0
   14d94:	bl	1dcb0 <putc_unlocked@plt+0xbaf8>
   14d98:	bl	11fc0 <strlen@plt>
   14d9c:	movw	r1, #41484	; 0xa20c
   14da0:	movt	r1, #3
   14da4:	ldr	r2, [r1]
   14da8:	cmp	r2, r0
   14dac:	strlt	r0, [r1]
   14db0:	ldr	r0, [r6]
   14db4:	and	r0, r0, #45056	; 0xb000
   14db8:	orr	r0, r0, #16384	; 0x4000
   14dbc:	cmp	r0, #24576	; 0x6000
   14dc0:	bne	14e54 <putc_unlocked@plt+0x2c9c>
   14dc4:	mov	r0, #152	; 0x98
   14dc8:	mla	r6, r9, r0, r4
   14dcc:	ldr	r0, [r6, #48]!	; 0x30
   14dd0:	ldr	r1, [r6, #4]
   14dd4:	bl	11c9c <gnu_dev_major@plt>
   14dd8:	sub	r2, fp, #688	; 0x2b0
   14ddc:	mov	r1, #0
   14de0:	bl	1dcb0 <putc_unlocked@plt+0xbaf8>
   14de4:	bl	11fc0 <strlen@plt>
   14de8:	movw	r5, #41504	; 0xa220
   14dec:	movt	r5, #3
   14df0:	ldr	r1, [r5]
   14df4:	cmp	r1, r0
   14df8:	strlt	r0, [r5]
   14dfc:	ldrd	r0, [r6]
   14e00:	bl	11cf0 <gnu_dev_minor@plt>
   14e04:	sub	r2, fp, #688	; 0x2b0
   14e08:	mov	r1, #0
   14e0c:	bl	1dcb0 <putc_unlocked@plt+0xbaf8>
   14e10:	bl	11fc0 <strlen@plt>
   14e14:	movw	r1, #41508	; 0xa224
   14e18:	movt	r1, #3
   14e1c:	ldr	r2, [r1]
   14e20:	cmp	r2, r0
   14e24:	strlt	r0, [r1]
   14e28:	ldr	r0, [r1]
   14e2c:	ldr	r1, [r5]
   14e30:	add	r0, r1, r0
   14e34:	add	r0, r0, #2
   14e38:	movw	r1, #41512	; 0xa228
   14e3c:	movt	r1, #3
   14e40:	ldr	r2, [r1]
   14e44:	cmp	r2, r0
   14e48:	mov	r6, sl
   14e4c:	strlt	r0, [r1]
   14e50:	b	14ecc <putc_unlocked@plt+0x2d14>
   14e54:	mov	r0, #152	; 0x98
   14e58:	mla	r0, r9, r0, r4
   14e5c:	ldrd	r0, [r0, #64]	; 0x40
   14e60:	bl	17dc8 <putc_unlocked@plt+0x5c10>
   14e64:	movw	r2, #38328	; 0x95b8
   14e68:	movt	r2, #3
   14e6c:	ldr	r3, [r2]
   14e70:	movw	r2, #37536	; 0x92a0
   14e74:	movt	r2, #3
   14e78:	ldm	r2, {r2, r5}
   14e7c:	sub	sp, sp, #16
   14e80:	mov	r4, #0
   14e84:	mov	r6, #1
   14e88:	str	r6, [sp]
   14e8c:	str	r4, [sp, #4]
   14e90:	str	r2, [sp, #8]
   14e94:	str	r5, [sp, #12]
   14e98:	sub	r2, fp, #688	; 0x2b0
   14e9c:	bl	1cd68 <putc_unlocked@plt+0xabb0>
   14ea0:	add	sp, sp, #16
   14ea4:	mov	r1, #0
   14ea8:	bl	1e1e4 <putc_unlocked@plt+0xc02c>
   14eac:	movw	r1, #41512	; 0xa228
   14eb0:	movt	r1, #3
   14eb4:	ldr	r2, [r1]
   14eb8:	cmp	r2, r0
   14ebc:	strlt	r0, [r1]
   14ec0:	b	14d74 <putc_unlocked@plt+0x2bbc>
   14ec4:	mov	r6, #0
   14ec8:	mov	r7, #0
   14ecc:	movw	r0, #38344	; 0x95c8
   14ed0:	movt	r0, #3
   14ed4:	ldrb	r0, [r0]
   14ed8:	cmp	r0, #1
   14edc:	movw	r5, #37900	; 0x940c
   14ee0:	movt	r5, #3
   14ee4:	ldr	r4, [fp, #-728]	; 0xfffffd28
   14ee8:	ldr	sl, [fp, #-732]	; 0xfffffd24
   14eec:	bne	14f18 <putc_unlocked@plt+0x2d60>
   14ef0:	add	r0, sl, #112	; 0x70
   14ef4:	ldrd	r0, [r0]
   14ef8:	sub	r2, fp, #688	; 0x2b0
   14efc:	bl	1dcb0 <putc_unlocked@plt+0xbaf8>
   14f00:	bl	11fc0 <strlen@plt>
   14f04:	movw	r1, #41476	; 0xa204
   14f08:	movt	r1, #3
   14f0c:	ldr	r2, [r1]
   14f10:	cmp	r2, r0
   14f14:	strlt	r0, [r1]
   14f18:	mov	r0, r4
   14f1c:	bl	23118 <_obstack_memory_used@@Base+0x2d38>
   14f20:	str	r0, [sl]
   14f24:	ldr	r0, [r5]
   14f28:	add	r0, r0, #1
   14f2c:	str	r0, [r5]
   14f30:	mov	r0, r6
   14f34:	mov	r1, r7
   14f38:	sub	sp, fp, #28
   14f3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14f40:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14f44:	add	fp, sp, #24
   14f48:	mov	r8, r2
   14f4c:	mov	r4, r1
   14f50:	mov	r6, r0
   14f54:	mov	r0, #16
   14f58:	bl	22db0 <_obstack_memory_used@@Base+0x29d0>
   14f5c:	mov	r5, r0
   14f60:	mov	r7, #0
   14f64:	cmp	r4, #0
   14f68:	mov	r0, #0
   14f6c:	beq	14f78 <putc_unlocked@plt+0x2dc0>
   14f70:	mov	r0, r4
   14f74:	bl	23118 <_obstack_memory_used@@Base+0x2d38>
   14f78:	str	r0, [r5, #4]
   14f7c:	cmp	r6, #0
   14f80:	beq	14f90 <putc_unlocked@plt+0x2dd8>
   14f84:	mov	r0, r6
   14f88:	bl	23118 <_obstack_memory_used@@Base+0x2d38>
   14f8c:	mov	r7, r0
   14f90:	strb	r8, [r5, #8]
   14f94:	str	r7, [r5]
   14f98:	movw	r0, #37688	; 0x9338
   14f9c:	movt	r0, #3
   14fa0:	ldr	r1, [r0]
   14fa4:	str	r1, [r5, #12]
   14fa8:	str	r5, [r0]
   14fac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14fb0:	push	{r4, r5, r6, sl, fp, lr}
   14fb4:	add	fp, sp, #16
   14fb8:	movw	r5, #41544	; 0xa248
   14fbc:	movt	r5, #3
   14fc0:	ldr	r0, [r5]
   14fc4:	movw	r4, #37900	; 0x940c
   14fc8:	movt	r4, #3
   14fcc:	ldr	r1, [r4]
   14fd0:	add	r1, r1, r1, lsr #1
   14fd4:	cmp	r0, r1
   14fd8:	bcs	15008 <putc_unlocked@plt+0x2e50>
   14fdc:	movw	r6, #41468	; 0xa1fc
   14fe0:	movt	r6, #3
   14fe4:	ldr	r0, [r6]
   14fe8:	bl	1bcc8 <putc_unlocked@plt+0x9b10>
   14fec:	ldr	r0, [r4]
   14ff0:	mov	r1, #12
   14ff4:	bl	22e4c <_obstack_memory_used@@Base+0x2a6c>
   14ff8:	str	r0, [r6]
   14ffc:	ldr	r0, [r4]
   15000:	add	r0, r0, r0, lsl #1
   15004:	str	r0, [r5]
   15008:	bl	1802c <putc_unlocked@plt+0x5e74>
   1500c:	bl	18078 <putc_unlocked@plt+0x5ec0>
   15010:	movw	r5, #37784	; 0x9398
   15014:	movt	r5, #3
   15018:	ldr	r0, [r5]
   1501c:	cmp	r0, #6
   15020:	popeq	{r4, r5, r6, sl, fp, pc}
   15024:	movw	r0, #41552	; 0xa250
   15028:	movt	r0, #3
   1502c:	bl	11d2c <_setjmp@plt>
   15030:	cmp	r0, #0
   15034:	beq	15050 <putc_unlocked@plt+0x2e98>
   15038:	ldr	r0, [r5]
   1503c:	cmp	r0, #4
   15040:	beq	150b4 <putc_unlocked@plt+0x2efc>
   15044:	bl	1802c <putc_unlocked@plt+0x5e74>
   15048:	mov	r0, #1
   1504c:	b	15054 <putc_unlocked@plt+0x2e9c>
   15050:	mov	r0, #0
   15054:	movw	r1, #38316	; 0x95ac
   15058:	movt	r1, #3
   1505c:	ldr	r1, [r1]
   15060:	ldr	r2, [r5]
   15064:	cmp	r2, #5
   15068:	addeq	r2, r2, r1
   1506c:	movw	r1, #33460	; 0x82b4
   15070:	movt	r1, #2
   15074:	add	r1, r1, r2, lsl #5
   15078:	add	r0, r1, r0, lsl #4
   1507c:	movw	r1, #38347	; 0x95cb
   15080:	movt	r1, #3
   15084:	ldrb	r1, [r1]
   15088:	add	r0, r0, r1, lsl #3
   1508c:	movw	r1, #37708	; 0x934c
   15090:	movt	r1, #3
   15094:	ldrb	r1, [r1]
   15098:	ldr	r2, [r0, r1, lsl #2]
   1509c:	ldr	r1, [r4]
   150a0:	movw	r0, #41468	; 0xa1fc
   150a4:	movt	r0, #3
   150a8:	ldr	r0, [r0]
   150ac:	bl	1e550 <putc_unlocked@plt+0xc398>
   150b0:	pop	{r4, r5, r6, sl, fp, pc}
   150b4:	movw	r0, #27266	; 0x6a82
   150b8:	movt	r0, #2
   150bc:	movw	r1, #17973	; 0x4635
   150c0:	movt	r1, #2
   150c4:	movw	r3, #27292	; 0x6a9c
   150c8:	movt	r3, #2
   150cc:	movw	r2, #4102	; 0x1006
   150d0:	bl	121ac <__assert_fail@plt>
   150d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   150d8:	add	fp, sp, #28
   150dc:	sub	sp, sp, #4
   150e0:	mov	r9, r1
   150e4:	mov	r5, r0
   150e8:	cmp	r0, #0
   150ec:	beq	15110 <putc_unlocked@plt+0x2f58>
   150f0:	movw	r0, #37732	; 0x9364
   150f4:	movt	r0, #3
   150f8:	ldr	r0, [r0]
   150fc:	cmp	r0, #0
   15100:	movne	r0, #0
   15104:	movne	r1, r5
   15108:	movne	r2, #0
   1510c:	blne	14f40 <putc_unlocked@plt+0x2d88>
   15110:	movw	r8, #37900	; 0x940c
   15114:	movt	r8, #3
   15118:	ldr	r0, [r8]
   1511c:	cmp	r0, #0
   15120:	beq	15208 <putc_unlocked@plt+0x3050>
   15124:	rsb	r4, r0, #1
   15128:	movw	sl, #41468	; 0xa1fc
   1512c:	movt	sl, #3
   15130:	b	1515c <putc_unlocked@plt+0x2fa4>
   15134:	ldrd	r0, [r6]
   15138:	mov	r2, r9
   1513c:	bl	14f40 <putc_unlocked@plt+0x2d88>
   15140:	ldr	r0, [r6, #120]	; 0x78
   15144:	cmp	r0, #9
   15148:	moveq	r0, r6
   1514c:	bleq	178ec <putc_unlocked@plt+0x5734>
   15150:	add	r4, r4, #1
   15154:	cmp	r4, #1
   15158:	beq	151c8 <putc_unlocked@plt+0x3010>
   1515c:	ldr	r0, [sl]
   15160:	ldr	r6, [r0, -r4, lsl #2]
   15164:	mov	r0, r6
   15168:	bl	17fb0 <putc_unlocked@plt+0x5df8>
   1516c:	cmp	r0, #0
   15170:	beq	15150 <putc_unlocked@plt+0x2f98>
   15174:	cmp	r5, #0
   15178:	beq	15134 <putc_unlocked@plt+0x2f7c>
   1517c:	ldr	r7, [r6]
   15180:	mov	r0, r7
   15184:	bl	17fd4 <putc_unlocked@plt+0x5e1c>
   15188:	cmp	r0, #0
   1518c:	bne	15150 <putc_unlocked@plt+0x2f98>
   15190:	ldrb	r0, [r7]
   15194:	cmp	r0, #47	; 0x2f
   15198:	beq	15134 <putc_unlocked@plt+0x2f7c>
   1519c:	mov	r0, r5
   151a0:	mov	r1, r7
   151a4:	mov	r2, #0
   151a8:	bl	1b770 <putc_unlocked@plt+0x95b8>
   151ac:	mov	r7, r0
   151b0:	ldr	r1, [r6, #4]
   151b4:	mov	r2, r9
   151b8:	bl	14f40 <putc_unlocked@plt+0x2d88>
   151bc:	mov	r0, r7
   151c0:	bl	1bcc8 <putc_unlocked@plt+0x9b10>
   151c4:	b	15140 <putc_unlocked@plt+0x2f88>
   151c8:	ldr	r0, [r8]
   151cc:	cmp	r0, #0
   151d0:	beq	15208 <putc_unlocked@plt+0x3050>
   151d4:	ldr	r1, [r8]
   151d8:	ldr	r2, [sl]
   151dc:	mov	r3, #0
   151e0:	mov	r0, #0
   151e4:	ldr	r7, [r2, r3, lsl #2]
   151e8:	str	r7, [r2, r0, lsl #2]
   151ec:	ldr	r7, [r7, #120]	; 0x78
   151f0:	cmp	r7, #9
   151f4:	addne	r0, r0, #1
   151f8:	add	r3, r3, #1
   151fc:	cmp	r3, r1
   15200:	bcc	151e4 <putc_unlocked@plt+0x302c>
   15204:	b	1520c <putc_unlocked@plt+0x3054>
   15208:	mov	r0, #0
   1520c:	str	r0, [r8]
   15210:	sub	sp, fp, #28
   15214:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15218:	push	{r4, r5, r6, r7, fp, lr}
   1521c:	add	fp, sp, #16
   15220:	movw	r0, #37712	; 0x9350
   15224:	movt	r0, #3
   15228:	ldr	r0, [r0]
   1522c:	cmp	r0, #4
   15230:	bhi	1530c <putc_unlocked@plt+0x3154>
   15234:	add	r1, pc, #0
   15238:	ldr	pc, [r1, r0, lsl #2]
   1523c:	andeq	r5, r1, r0, asr r2
   15240:			; <UNDEFINED> instruction: 0x000152b0
   15244:	andeq	r5, r1, r0, lsl r3
   15248:	andeq	r5, r1, ip, lsr #6
   1524c:	andeq	r5, r1, r8, asr #6
   15250:	movw	r4, #37900	; 0x940c
   15254:	movt	r4, #3
   15258:	ldr	r0, [r4]
   1525c:	cmp	r0, #0
   15260:	beq	1530c <putc_unlocked@plt+0x3154>
   15264:	mov	r5, #0
   15268:	movw	r6, #41468	; 0xa1fc
   1526c:	movt	r6, #3
   15270:	movw	r7, #38356	; 0x95d4
   15274:	movt	r7, #3
   15278:	bl	18e48 <putc_unlocked@plt+0x6c90>
   1527c:	ldr	r0, [r6]
   15280:	ldr	r0, [r0, r5, lsl #2]
   15284:	bl	18e9c <putc_unlocked@plt+0x6ce4>
   15288:	ldrb	r0, [r7]
   1528c:	cmp	r0, #0
   15290:	mov	r0, #10
   15294:	movwne	r0, #0
   15298:	bl	15360 <putc_unlocked@plt+0x31a8>
   1529c:	add	r5, r5, #1
   152a0:	ldr	r0, [r4]
   152a4:	cmp	r5, r0
   152a8:	bcc	15278 <putc_unlocked@plt+0x30c0>
   152ac:	b	1530c <putc_unlocked@plt+0x3154>
   152b0:	movw	r4, #37900	; 0x940c
   152b4:	movt	r4, #3
   152b8:	ldr	r0, [r4]
   152bc:	cmp	r0, #0
   152c0:	beq	1530c <putc_unlocked@plt+0x3154>
   152c4:	mov	r5, #0
   152c8:	movw	r6, #41468	; 0xa1fc
   152cc:	movt	r6, #3
   152d0:	movw	r7, #38356	; 0x95d4
   152d4:	movt	r7, #3
   152d8:	ldr	r0, [r6]
   152dc:	ldr	r0, [r0, r5, lsl #2]
   152e0:	mov	r1, #0
   152e4:	bl	18918 <putc_unlocked@plt+0x6760>
   152e8:	ldrb	r0, [r7]
   152ec:	cmp	r0, #0
   152f0:	mov	r0, #10
   152f4:	movwne	r0, #0
   152f8:	bl	12188 <putchar_unlocked@plt>
   152fc:	add	r5, r5, #1
   15300:	ldr	r0, [r4]
   15304:	cmp	r5, r0
   15308:	bcc	152d8 <putc_unlocked@plt+0x3120>
   1530c:	pop	{r4, r5, r6, r7, fp, pc}
   15310:	movw	r0, #38360	; 0x95d8
   15314:	movt	r0, #3
   15318:	ldr	r0, [r0]
   1531c:	cmp	r0, #0
   15320:	beq	15354 <putc_unlocked@plt+0x319c>
   15324:	pop	{r4, r5, r6, r7, fp, lr}
   15328:	b	18bc4 <putc_unlocked@plt+0x6a0c>
   1532c:	movw	r0, #38360	; 0x95d8
   15330:	movt	r0, #3
   15334:	ldr	r0, [r0]
   15338:	cmp	r0, #0
   1533c:	beq	15354 <putc_unlocked@plt+0x319c>
   15340:	pop	{r4, r5, r6, r7, fp, lr}
   15344:	b	18d1c <putc_unlocked@plt+0x6b64>
   15348:	mov	r0, #44	; 0x2c
   1534c:	pop	{r4, r5, r6, r7, fp, lr}
   15350:	b	18aac <putc_unlocked@plt+0x68f4>
   15354:	mov	r0, #32
   15358:	pop	{r4, r5, r6, r7, fp, lr}
   1535c:	b	18aac <putc_unlocked@plt+0x68f4>
   15360:	movw	r1, #38176	; 0x9520
   15364:	movt	r1, #3
   15368:	ldrd	r2, [r1]
   1536c:	adds	r2, r2, #1
   15370:	adc	r3, r3, #0
   15374:	strd	r2, [r1]
   15378:	b	12188 <putchar_unlocked@plt>
   1537c:	push	{fp, lr}
   15380:	mov	fp, sp
   15384:	movw	r1, #37736	; 0x9368
   15388:	movt	r1, #3
   1538c:	ldr	r3, [r1, #8]
   15390:	ldr	r2, [r1, #12]
   15394:	sub	r3, r2, r3
   15398:	cmp	r3, #15
   1539c:	bls	153b4 <putc_unlocked@plt+0x31fc>
   153a0:	sub	r2, r2, #16
   153a4:	str	r2, [r1, #12]
   153a8:	vld1.64	{d16-d17}, [r2]
   153ac:	vst1.64	{d16-d17}, [r0]
   153b0:	pop	{fp, pc}
   153b4:	movw	r0, #25403	; 0x633b
   153b8:	movt	r0, #2
   153bc:	movw	r1, #17973	; 0x4635
   153c0:	movt	r1, #2
   153c4:	movw	r3, #25458	; 0x6372
   153c8:	movt	r3, #2
   153cc:	movw	r2, #1053	; 0x41d
   153d0:	bl	121ac <__assert_fail@plt>
   153d4:	push	{r4, sl, fp, lr}
   153d8:	add	fp, sp, #8
   153dc:	mov	r4, r0
   153e0:	ldr	r0, [r0]
   153e4:	bl	1bcc8 <putc_unlocked@plt+0x9b10>
   153e8:	ldr	r0, [r4, #4]
   153ec:	bl	1bcc8 <putc_unlocked@plt+0x9b10>
   153f0:	mov	r0, r4
   153f4:	pop	{r4, sl, fp, lr}
   153f8:	b	1bcc8 <putc_unlocked@plt+0x9b10>
   153fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15400:	add	fp, sp, #28
   15404:	sub	sp, sp, #692	; 0x2b4
   15408:	mov	r8, r2
   1540c:	mov	r9, r1
   15410:	mov	r4, r0
   15414:	bl	11fe4 <__errno_location@plt>
   15418:	mov	r7, r0
   1541c:	mov	r0, #0
   15420:	str	r0, [r7]
   15424:	mov	r0, r4
   15428:	bl	11ed0 <opendir@plt>
   1542c:	cmp	r0, #0
   15430:	beq	154f0 <putc_unlocked@plt+0x3338>
   15434:	mov	r6, r0
   15438:	movw	r0, #37732	; 0x9364
   1543c:	movt	r0, #3
   15440:	ldr	r0, [r0]
   15444:	cmp	r0, #0
   15448:	str	r4, [sp, #28]
   1544c:	beq	15578 <putc_unlocked@plt+0x33c0>
   15450:	mov	r0, r6
   15454:	bl	120f8 <dirfd@plt>
   15458:	add	r1, sp, #32
   1545c:	cmp	r0, #0
   15460:	bmi	1551c <putc_unlocked@plt+0x3364>
   15464:	bl	16b50 <putc_unlocked@plt+0x4998>
   15468:	cmn	r0, #1
   1546c:	ble	1552c <putc_unlocked@plt+0x3374>
   15470:	ldr	r5, [sp, #32]
   15474:	ldr	r4, [sp, #36]	; 0x24
   15478:	ldr	sl, [sp, #128]	; 0x80
   1547c:	ldr	r3, [sp, #132]	; 0x84
   15480:	mov	r0, r5
   15484:	mov	r1, r4
   15488:	mov	r2, sl
   1548c:	str	r3, [sp, #24]
   15490:	bl	16bb0 <putc_unlocked@plt+0x49f8>
   15494:	cmp	r0, #0
   15498:	beq	15560 <putc_unlocked@plt+0x33a8>
   1549c:	movw	r1, #27055	; 0x69af
   154a0:	movt	r1, #2
   154a4:	mov	r0, #0
   154a8:	mov	r2, #5
   154ac:	bl	11db0 <dcgettext@plt>
   154b0:	mov	r4, r0
   154b4:	mov	r0, #0
   154b8:	mov	r1, #3
   154bc:	ldr	r2, [sp, #28]
   154c0:	bl	21b0c <_obstack_memory_used@@Base+0x172c>
   154c4:	mov	r3, r0
   154c8:	mov	r0, #0
   154cc:	mov	r1, #0
   154d0:	mov	r2, r4
   154d4:	bl	11eb8 <error@plt>
   154d8:	mov	r0, r6
   154dc:	bl	12158 <closedir@plt>
   154e0:	mov	r0, #1
   154e4:	bl	16c20 <putc_unlocked@plt+0x4a68>
   154e8:	sub	sp, fp, #28
   154ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   154f0:	movw	r1, #26990	; 0x696e
   154f4:	movt	r1, #2
   154f8:	mov	r0, #0
   154fc:	mov	r2, #5
   15500:	bl	11db0 <dcgettext@plt>
   15504:	mov	r1, r0
   15508:	mov	r0, r8
   1550c:	mov	r2, r4
   15510:	sub	sp, fp, #28
   15514:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15518:	b	16b08 <putc_unlocked@plt+0x4950>
   1551c:	mov	r0, r4
   15520:	bl	16b80 <putc_unlocked@plt+0x49c8>
   15524:	cmn	r0, #1
   15528:	bgt	15470 <putc_unlocked@plt+0x32b8>
   1552c:	movw	r1, #27015	; 0x6987
   15530:	movt	r1, #2
   15534:	mov	r0, #0
   15538:	mov	r2, #5
   1553c:	bl	11db0 <dcgettext@plt>
   15540:	mov	r1, r0
   15544:	mov	r0, r8
   15548:	mov	r2, r4
   1554c:	bl	16b08 <putc_unlocked@plt+0x4950>
   15550:	mov	r0, r6
   15554:	bl	12158 <closedir@plt>
   15558:	sub	sp, fp, #28
   1555c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15560:	mov	r0, r5
   15564:	mov	r1, r4
   15568:	mov	r2, sl
   1556c:	ldr	r3, [sp, #24]
   15570:	bl	16c4c <putc_unlocked@plt+0x4a94>
   15574:	ldr	r4, [sp, #28]
   15578:	str	r8, [sp, #16]
   1557c:	bl	143b4 <putc_unlocked@plt+0x21fc>
   15580:	movw	r0, #37728	; 0x9360
   15584:	movt	r0, #3
   15588:	ldrb	r0, [r0]
   1558c:	cmp	r0, #0
   15590:	bne	155a8 <putc_unlocked@plt+0x33f0>
   15594:	movw	r0, #37684	; 0x9334
   15598:	movt	r0, #3
   1559c:	ldrb	r0, [r0]
   155a0:	cmp	r0, #1
   155a4:	bne	15670 <putc_unlocked@plt+0x34b8>
   155a8:	movw	r5, #41464	; 0xa1f8
   155ac:	movt	r5, #3
   155b0:	ldrb	r0, [r5]
   155b4:	cmp	r0, #1
   155b8:	moveq	r0, #10
   155bc:	bleq	15360 <putc_unlocked@plt+0x31a8>
   155c0:	mov	r8, #1
   155c4:	strb	r8, [r5]
   155c8:	bl	16ca8 <putc_unlocked@plt+0x4af0>
   155cc:	movw	r0, #37884	; 0x93fc
   155d0:	movt	r0, #3
   155d4:	ldrb	r0, [r0]
   155d8:	cmp	r0, #0
   155dc:	beq	15624 <putc_unlocked@plt+0x346c>
   155e0:	mov	r0, r4
   155e4:	mov	r1, #2
   155e8:	bl	1abc4 <putc_unlocked@plt+0x8a0c>
   155ec:	mov	r5, r0
   155f0:	cmp	r0, #0
   155f4:	bne	15628 <putc_unlocked@plt+0x3470>
   155f8:	mov	r5, #0
   155fc:	movw	r1, #27096	; 0x69d8
   15600:	movt	r1, #2
   15604:	mov	r0, #0
   15608:	mov	r2, #5
   1560c:	bl	11db0 <dcgettext@plt>
   15610:	mov	r1, r0
   15614:	ldr	r0, [sp, #16]
   15618:	mov	r2, r4
   1561c:	bl	16b08 <putc_unlocked@plt+0x4950>
   15620:	b	15628 <putc_unlocked@plt+0x3470>
   15624:	mov	r5, #0
   15628:	movw	r0, #38372	; 0x95e4
   1562c:	movt	r0, #3
   15630:	ldr	r1, [r0]
   15634:	movw	r0, #37840	; 0x93d0
   15638:	movt	r0, #3
   1563c:	str	r8, [sp]
   15640:	stmib	sp, {r0, r5}
   15644:	cmp	r9, #0
   15648:	moveq	r9, r4
   1564c:	mov	r0, r9
   15650:	mvn	r2, #0
   15654:	mov	r3, #0
   15658:	bl	16cc8 <putc_unlocked@plt+0x4b10>
   1565c:	mov	r0, r5
   15660:	bl	1bcc8 <putc_unlocked@plt+0x9b10>
   15664:	movw	r0, #26068	; 0x65d4
   15668:	movt	r0, #2
   1566c:	bl	16eb4 <putc_unlocked@plt+0x4cfc>
   15670:	mov	r9, #0
   15674:	mov	r0, #0
   15678:	str	r0, [sp, #24]
   1567c:	mov	r0, #0
   15680:	str	r0, [sp, #20]
   15684:	ldr	r5, [sp, #16]
   15688:	b	15694 <putc_unlocked@plt+0x34dc>
   1568c:	ldr	r4, [sp, #28]
   15690:	bl	16f68 <putc_unlocked@plt+0x4db0>
   15694:	str	r9, [r7]
   15698:	mov	r0, r6
   1569c:	bl	120d4 <readdir64@plt>
   156a0:	cmp	r0, #0
   156a4:	beq	15778 <putc_unlocked@plt+0x35c0>
   156a8:	mov	r8, r0
   156ac:	add	sl, r0, #19
   156b0:	mov	r0, sl
   156b4:	bl	16ed4 <putc_unlocked@plt+0x4d1c>
   156b8:	cmp	r0, #0
   156bc:	bne	1568c <putc_unlocked@plt+0x34d4>
   156c0:	ldrb	r0, [r8, #18]
   156c4:	sub	r0, r0, #1
   156c8:	uxtb	r2, r0
   156cc:	mov	r1, #0
   156d0:	cmp	r2, #13
   156d4:	bhi	156e8 <putc_unlocked@plt+0x3530>
   156d8:	sxtb	r0, r0
   156dc:	movw	r1, #33848	; 0x8438
   156e0:	movt	r1, #2
   156e4:	ldr	r1, [r1, r0, lsl #2]
   156e8:	mov	r0, sl
   156ec:	mov	r2, #0
   156f0:	ldr	r4, [sp, #28]
   156f4:	mov	r3, r4
   156f8:	bl	14494 <putc_unlocked@plt+0x22dc>
   156fc:	ldr	r2, [sp, #24]
   15700:	adds	r2, r0, r2
   15704:	str	r2, [sp, #24]
   15708:	ldr	r0, [sp, #20]
   1570c:	adc	r0, r1, r0
   15710:	str	r0, [sp, #20]
   15714:	movw	r0, #37712	; 0x9350
   15718:	movt	r0, #3
   1571c:	ldr	r0, [r0]
   15720:	cmp	r0, #1
   15724:	bne	157b4 <putc_unlocked@plt+0x35fc>
   15728:	movw	r0, #37784	; 0x9398
   1572c:	movt	r0, #3
   15730:	ldr	r0, [r0]
   15734:	cmp	r0, #6
   15738:	bne	157b4 <putc_unlocked@plt+0x35fc>
   1573c:	movw	r0, #37789	; 0x939d
   15740:	movt	r0, #3
   15744:	ldrb	r0, [r0]
   15748:	cmp	r0, #0
   1574c:	bne	157b4 <putc_unlocked@plt+0x35fc>
   15750:	movw	r0, #37728	; 0x9360
   15754:	movt	r0, #3
   15758:	ldrb	r0, [r0]
   1575c:	cmp	r0, #0
   15760:	bne	157b4 <putc_unlocked@plt+0x35fc>
   15764:	bl	14fb0 <putc_unlocked@plt+0x2df8>
   15768:	bl	15218 <putc_unlocked@plt+0x3060>
   1576c:	bl	143b4 <putc_unlocked@plt+0x21fc>
   15770:	bl	16f68 <putc_unlocked@plt+0x4db0>
   15774:	b	15694 <putc_unlocked@plt+0x34dc>
   15778:	ldr	r0, [r7]
   1577c:	cmp	r0, #0
   15780:	beq	157bc <putc_unlocked@plt+0x3604>
   15784:	mov	r0, #0
   15788:	movw	r1, #27120	; 0x69f0
   1578c:	movt	r1, #2
   15790:	mov	r2, #5
   15794:	bl	11db0 <dcgettext@plt>
   15798:	mov	r1, r0
   1579c:	mov	r0, r5
   157a0:	mov	r2, r4
   157a4:	bl	16b08 <putc_unlocked@plt+0x4950>
   157a8:	ldr	r0, [r7]
   157ac:	cmp	r0, #75	; 0x4b
   157b0:	bne	157bc <putc_unlocked@plt+0x3604>
   157b4:	bl	16f68 <putc_unlocked@plt+0x4db0>
   157b8:	b	15694 <putc_unlocked@plt+0x34dc>
   157bc:	mov	r0, r6
   157c0:	bl	12158 <closedir@plt>
   157c4:	cmp	r0, #0
   157c8:	beq	157f0 <putc_unlocked@plt+0x3638>
   157cc:	movw	r1, #27141	; 0x6a05
   157d0:	movt	r1, #2
   157d4:	mov	r0, #0
   157d8:	mov	r2, #5
   157dc:	bl	11db0 <dcgettext@plt>
   157e0:	mov	r1, r0
   157e4:	mov	r0, r5
   157e8:	mov	r2, r4
   157ec:	bl	16b08 <putc_unlocked@plt+0x4950>
   157f0:	bl	14fb0 <putc_unlocked@plt+0x2df8>
   157f4:	movw	r0, #37728	; 0x9360
   157f8:	movt	r0, #3
   157fc:	ldrb	r0, [r0]
   15800:	cmp	r0, #1
   15804:	moveq	r0, r4
   15808:	moveq	r1, #0
   1580c:	bleq	150d4 <putc_unlocked@plt+0x2f1c>
   15810:	movw	r0, #37712	; 0x9350
   15814:	movt	r0, #3
   15818:	ldr	r0, [r0]
   1581c:	cmp	r0, #0
   15820:	beq	15838 <putc_unlocked@plt+0x3680>
   15824:	movw	r0, #37789	; 0x939d
   15828:	movt	r0, #3
   1582c:	ldrb	r0, [r0]
   15830:	cmp	r0, #1
   15834:	bne	158d8 <putc_unlocked@plt+0x3720>
   15838:	movw	r0, #38324	; 0x95b4
   1583c:	movt	r0, #3
   15840:	ldr	r3, [r0]
   15844:	movw	r0, #38336	; 0x95c0
   15848:	movt	r0, #3
   1584c:	ldrd	r0, [r0]
   15850:	mov	r2, #0
   15854:	mov	r7, #512	; 0x200
   15858:	str	r7, [sp]
   1585c:	str	r2, [sp, #4]
   15860:	str	r0, [sp, #8]
   15864:	str	r1, [sp, #12]
   15868:	add	r0, sp, #32
   1586c:	add	r2, r0, #1
   15870:	ldr	r0, [sp, #24]
   15874:	ldr	r1, [sp, #20]
   15878:	bl	1cd68 <putc_unlocked@plt+0xabb0>
   1587c:	mov	r4, r0
   15880:	bl	11fc0 <strlen@plt>
   15884:	mov	r1, #32
   15888:	mov	r5, r4
   1588c:	strb	r1, [r5, #-1]!
   15890:	movw	r1, #38356	; 0x95d4
   15894:	movt	r1, #3
   15898:	ldrb	r1, [r1]
   1589c:	mov	r2, #10
   158a0:	cmp	r1, #0
   158a4:	movwne	r2, #0
   158a8:	strb	r2, [r4, r0]!
   158ac:	bl	16ca8 <putc_unlocked@plt+0x4af0>
   158b0:	movw	r1, #27162	; 0x6a1a
   158b4:	movt	r1, #2
   158b8:	mov	r0, #0
   158bc:	mov	r2, #5
   158c0:	bl	11db0 <dcgettext@plt>
   158c4:	bl	16eb4 <putc_unlocked@plt+0x4cfc>
   158c8:	sub	r0, r4, r5
   158cc:	add	r1, r0, #1
   158d0:	mov	r0, r5
   158d4:	bl	1702c <putc_unlocked@plt+0x4e74>
   158d8:	movw	r0, #37900	; 0x940c
   158dc:	movt	r0, #3
   158e0:	ldr	r0, [r0]
   158e4:	cmp	r0, #0
   158e8:	blne	15218 <putc_unlocked@plt+0x3060>
   158ec:	sub	sp, fp, #28
   158f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   158f4:	push	{r4, sl, fp, lr}
   158f8:	add	fp, sp, #8
   158fc:	movw	r4, #37344	; 0x91e0
   15900:	movt	r4, #3
   15904:	mov	r0, r4
   15908:	bl	15fac <putc_unlocked@plt+0x3df4>
   1590c:	add	r0, r4, #8
   15910:	pop	{r4, sl, fp, lr}
   15914:	b	15fac <putc_unlocked@plt+0x3df4>
   15918:	mov	r0, #0
   1591c:	b	16054 <putc_unlocked@plt+0x3e9c>
   15920:	push	{r4, r5, r6, sl, fp, lr}
   15924:	add	fp, sp, #16
   15928:	ldr	r5, [r1, #8]
   1592c:	ldr	r3, [r1, #12]
   15930:	sub	r2, r3, r5
   15934:	mov	r6, #0
   15938:	cmp	r6, r2, lsr #3
   1593c:	beq	159cc <putc_unlocked@plt+0x3814>
   15940:	cmp	r3, r5
   15944:	bne	15954 <putc_unlocked@plt+0x379c>
   15948:	ldrb	r3, [r1, #40]	; 0x28
   1594c:	orr	r3, r3, #2
   15950:	strb	r3, [r1, #40]	; 0x28
   15954:	ldr	r6, [r1, #4]
   15958:	ldr	r4, [r1, #12]
   1595c:	ldr	ip, [r1, #16]
   15960:	ldr	r3, [r1, #24]
   15964:	add	r4, r3, r4
   15968:	bic	r3, r4, r3
   1596c:	str	r3, [r1, #12]
   15970:	sub	r3, r3, r6
   15974:	sub	r6, ip, r6
   15978:	cmp	r3, r6
   1597c:	strhi	ip, [r1, #12]
   15980:	lsr	r6, r2, #3
   15984:	ldr	r2, [r1, #12]
   15988:	str	r2, [r1, #8]
   1598c:	movw	r1, #37668	; 0x9324
   15990:	movt	r1, #3
   15994:	ldr	r1, [r1]
   15998:	bl	11c84 <fputs_unlocked@plt>
   1599c:	movw	r4, #25561	; 0x63d9
   159a0:	movt	r4, #2
   159a4:	ldrd	r2, [r5]
   159a8:	mov	r0, #1
   159ac:	mov	r1, r4
   159b0:	bl	12014 <__printf_chk@plt>
   159b4:	add	r5, r5, #8
   159b8:	subs	r6, r6, #1
   159bc:	bne	159a4 <putc_unlocked@plt+0x37ec>
   159c0:	mov	r0, #10
   159c4:	pop	{r4, r5, r6, sl, fp, lr}
   159c8:	b	12188 <putchar_unlocked@plt>
   159cc:	pop	{r4, r5, r6, sl, fp, pc}
   159d0:	push	{fp, lr}
   159d4:	mov	fp, sp
   159d8:	mov	r4, r0
   159dc:	cmp	r0, #0
   159e0:	bne	15d8c <putc_unlocked@plt+0x3bd4>
   159e4:	movw	r1, #18149	; 0x46e5
   159e8:	movt	r1, #2
   159ec:	mov	r0, #0
   159f0:	mov	r2, #5
   159f4:	bl	11db0 <dcgettext@plt>
   159f8:	mov	r1, r0
   159fc:	movw	r0, #41976	; 0xa3f8
   15a00:	movt	r0, #3
   15a04:	ldr	r2, [r0]
   15a08:	mov	r0, #1
   15a0c:	bl	12014 <__printf_chk@plt>
   15a10:	movw	r1, #18182	; 0x4706
   15a14:	movt	r1, #2
   15a18:	mov	r0, #0
   15a1c:	mov	r2, #5
   15a20:	bl	11db0 <dcgettext@plt>
   15a24:	movw	r5, #37668	; 0x9324
   15a28:	movt	r5, #3
   15a2c:	ldr	r1, [r5]
   15a30:	bl	11c84 <fputs_unlocked@plt>
   15a34:	bl	15dd0 <putc_unlocked@plt+0x3c18>
   15a38:	movw	r1, #18326	; 0x4796
   15a3c:	movt	r1, #2
   15a40:	mov	r0, #0
   15a44:	mov	r2, #5
   15a48:	bl	11db0 <dcgettext@plt>
   15a4c:	ldr	r1, [r5]
   15a50:	bl	11c84 <fputs_unlocked@plt>
   15a54:	movw	r1, #18597	; 0x48a5
   15a58:	movt	r1, #2
   15a5c:	mov	r0, #0
   15a60:	mov	r2, #5
   15a64:	bl	11db0 <dcgettext@plt>
   15a68:	ldr	r1, [r5]
   15a6c:	bl	11c84 <fputs_unlocked@plt>
   15a70:	movw	r1, #18753	; 0x4941
   15a74:	movt	r1, #2
   15a78:	mov	r0, #0
   15a7c:	mov	r2, #5
   15a80:	bl	11db0 <dcgettext@plt>
   15a84:	ldr	r1, [r5]
   15a88:	bl	11c84 <fputs_unlocked@plt>
   15a8c:	movw	r1, #19115	; 0x4aab
   15a90:	movt	r1, #2
   15a94:	mov	r0, #0
   15a98:	mov	r2, #5
   15a9c:	bl	11db0 <dcgettext@plt>
   15aa0:	ldr	r1, [r5]
   15aa4:	bl	11c84 <fputs_unlocked@plt>
   15aa8:	movw	r1, #19390	; 0x4bbe
   15aac:	movt	r1, #2
   15ab0:	mov	r0, #0
   15ab4:	mov	r2, #5
   15ab8:	bl	11db0 <dcgettext@plt>
   15abc:	ldr	r1, [r5]
   15ac0:	bl	11c84 <fputs_unlocked@plt>
   15ac4:	movw	r1, #19805	; 0x4d5d
   15ac8:	movt	r1, #2
   15acc:	mov	r0, #0
   15ad0:	mov	r2, #5
   15ad4:	bl	11db0 <dcgettext@plt>
   15ad8:	ldr	r1, [r5]
   15adc:	bl	11c84 <fputs_unlocked@plt>
   15ae0:	movw	r1, #19866	; 0x4d9a
   15ae4:	movt	r1, #2
   15ae8:	mov	r0, #0
   15aec:	mov	r2, #5
   15af0:	bl	11db0 <dcgettext@plt>
   15af4:	ldr	r1, [r5]
   15af8:	bl	11c84 <fputs_unlocked@plt>
   15afc:	movw	r1, #20111	; 0x4e8f
   15b00:	movt	r1, #2
   15b04:	mov	r0, #0
   15b08:	mov	r2, #5
   15b0c:	bl	11db0 <dcgettext@plt>
   15b10:	ldr	r1, [r5]
   15b14:	bl	11c84 <fputs_unlocked@plt>
   15b18:	movw	r1, #20184	; 0x4ed8
   15b1c:	movt	r1, #2
   15b20:	mov	r0, #0
   15b24:	mov	r2, #5
   15b28:	bl	11db0 <dcgettext@plt>
   15b2c:	ldr	r1, [r5]
   15b30:	bl	11c84 <fputs_unlocked@plt>
   15b34:	movw	r1, #20334	; 0x4f6e
   15b38:	movt	r1, #2
   15b3c:	mov	r0, #0
   15b40:	mov	r2, #5
   15b44:	bl	11db0 <dcgettext@plt>
   15b48:	ldr	r1, [r5]
   15b4c:	bl	11c84 <fputs_unlocked@plt>
   15b50:	movw	r1, #20756	; 0x5114
   15b54:	movt	r1, #2
   15b58:	mov	r0, #0
   15b5c:	mov	r2, #5
   15b60:	bl	11db0 <dcgettext@plt>
   15b64:	ldr	r1, [r5]
   15b68:	bl	11c84 <fputs_unlocked@plt>
   15b6c:	movw	r1, #20812	; 0x514c
   15b70:	movt	r1, #2
   15b74:	mov	r0, #0
   15b78:	mov	r2, #5
   15b7c:	bl	11db0 <dcgettext@plt>
   15b80:	ldr	r1, [r5]
   15b84:	bl	11c84 <fputs_unlocked@plt>
   15b88:	movw	r1, #21166	; 0x52ae
   15b8c:	movt	r1, #2
   15b90:	mov	r0, #0
   15b94:	mov	r2, #5
   15b98:	bl	11db0 <dcgettext@plt>
   15b9c:	ldr	r1, [r5]
   15ba0:	bl	11c84 <fputs_unlocked@plt>
   15ba4:	movw	r1, #21321	; 0x5349
   15ba8:	movt	r1, #2
   15bac:	mov	r0, #0
   15bb0:	mov	r2, #5
   15bb4:	bl	11db0 <dcgettext@plt>
   15bb8:	ldr	r1, [r5]
   15bbc:	bl	11c84 <fputs_unlocked@plt>
   15bc0:	movw	r1, #21680	; 0x54b0
   15bc4:	movt	r1, #2
   15bc8:	mov	r0, #0
   15bcc:	mov	r2, #5
   15bd0:	bl	11db0 <dcgettext@plt>
   15bd4:	ldr	r1, [r5]
   15bd8:	bl	11c84 <fputs_unlocked@plt>
   15bdc:	movw	r1, #21983	; 0x55df
   15be0:	movt	r1, #2
   15be4:	mov	r0, #0
   15be8:	mov	r2, #5
   15bec:	bl	11db0 <dcgettext@plt>
   15bf0:	ldr	r1, [r5]
   15bf4:	bl	11c84 <fputs_unlocked@plt>
   15bf8:	movw	r1, #22568	; 0x5828
   15bfc:	movt	r1, #2
   15c00:	mov	r0, #0
   15c04:	mov	r2, #5
   15c08:	bl	11db0 <dcgettext@plt>
   15c0c:	ldr	r1, [r5]
   15c10:	bl	11c84 <fputs_unlocked@plt>
   15c14:	movw	r1, #22765	; 0x58ed
   15c18:	movt	r1, #2
   15c1c:	mov	r0, #0
   15c20:	mov	r2, #5
   15c24:	bl	11db0 <dcgettext@plt>
   15c28:	ldr	r1, [r5]
   15c2c:	bl	11c84 <fputs_unlocked@plt>
   15c30:	movw	r1, #23406	; 0x5b6e
   15c34:	movt	r1, #2
   15c38:	mov	r0, #0
   15c3c:	mov	r2, #5
   15c40:	bl	11db0 <dcgettext@plt>
   15c44:	ldr	r1, [r5]
   15c48:	bl	11c84 <fputs_unlocked@plt>
   15c4c:	movw	r1, #23485	; 0x5bbd
   15c50:	movt	r1, #2
   15c54:	mov	r0, #0
   15c58:	mov	r2, #5
   15c5c:	bl	11db0 <dcgettext@plt>
   15c60:	ldr	r1, [r5]
   15c64:	bl	11c84 <fputs_unlocked@plt>
   15c68:	movw	r1, #23626	; 0x5c4a
   15c6c:	movt	r1, #2
   15c70:	mov	r0, #0
   15c74:	mov	r2, #5
   15c78:	bl	11db0 <dcgettext@plt>
   15c7c:	ldr	r1, [r5]
   15c80:	bl	11c84 <fputs_unlocked@plt>
   15c84:	movw	r1, #23998	; 0x5dbe
   15c88:	movt	r1, #2
   15c8c:	mov	r0, #0
   15c90:	mov	r2, #5
   15c94:	bl	11db0 <dcgettext@plt>
   15c98:	ldr	r1, [r5]
   15c9c:	bl	11c84 <fputs_unlocked@plt>
   15ca0:	movw	r1, #24406	; 0x5f56
   15ca4:	movt	r1, #2
   15ca8:	mov	r0, #0
   15cac:	mov	r2, #5
   15cb0:	bl	11db0 <dcgettext@plt>
   15cb4:	ldr	r1, [r5]
   15cb8:	bl	11c84 <fputs_unlocked@plt>
   15cbc:	movw	r1, #24451	; 0x5f83
   15cc0:	movt	r1, #2
   15cc4:	mov	r0, #0
   15cc8:	mov	r2, #5
   15ccc:	bl	11db0 <dcgettext@plt>
   15cd0:	ldr	r1, [r5]
   15cd4:	bl	11c84 <fputs_unlocked@plt>
   15cd8:	bl	15e00 <putc_unlocked@plt+0x3c48>
   15cdc:	movw	r1, #24505	; 0x5fb9
   15ce0:	movt	r1, #2
   15ce4:	mov	r0, #0
   15ce8:	mov	r2, #5
   15cec:	bl	11db0 <dcgettext@plt>
   15cf0:	ldr	r1, [r5]
   15cf4:	bl	11c84 <fputs_unlocked@plt>
   15cf8:	movw	r1, #24881	; 0x6131
   15cfc:	movt	r1, #2
   15d00:	mov	r0, #0
   15d04:	mov	r2, #5
   15d08:	bl	11db0 <dcgettext@plt>
   15d0c:	ldr	r1, [r5]
   15d10:	bl	11c84 <fputs_unlocked@plt>
   15d14:	movw	r1, #24957	; 0x617d
   15d18:	movt	r1, #2
   15d1c:	mov	r0, #0
   15d20:	mov	r2, #5
   15d24:	bl	11db0 <dcgettext@plt>
   15d28:	ldr	r1, [r5]
   15d2c:	bl	11c84 <fputs_unlocked@plt>
   15d30:	movw	r1, #25243	; 0x629b
   15d34:	movt	r1, #2
   15d38:	mov	r0, #0
   15d3c:	mov	r2, #5
   15d40:	bl	11db0 <dcgettext@plt>
   15d44:	ldr	r1, [r5]
   15d48:	bl	11c84 <fputs_unlocked@plt>
   15d4c:	movw	r0, #37560	; 0x92b8
   15d50:	movt	r0, #3
   15d54:	ldr	r1, [r0]
   15d58:	movw	r0, #26413	; 0x672d
   15d5c:	movt	r0, #2
   15d60:	movw	r2, #25395	; 0x6333
   15d64:	movt	r2, #2
   15d68:	cmp	r1, #2
   15d6c:	moveq	r2, r0
   15d70:	movw	r0, #25766	; 0x64a6
   15d74:	movt	r0, #2
   15d78:	cmp	r1, #1
   15d7c:	movne	r0, r2
   15d80:	bl	15e30 <putc_unlocked@plt+0x3c78>
   15d84:	mov	r0, r4
   15d88:	bl	11f90 <exit@plt>
   15d8c:	movw	r0, #37664	; 0x9320
   15d90:	movt	r0, #3
   15d94:	ldr	r5, [r0]
   15d98:	movw	r1, #18110	; 0x46be
   15d9c:	movt	r1, #2
   15da0:	mov	r0, #0
   15da4:	mov	r2, #5
   15da8:	bl	11db0 <dcgettext@plt>
   15dac:	mov	r2, r0
   15db0:	movw	r0, #41976	; 0xa3f8
   15db4:	movt	r0, #3
   15db8:	ldr	r3, [r0]
   15dbc:	mov	r0, r5
   15dc0:	mov	r1, #1
   15dc4:	bl	12044 <__fprintf_chk@plt>
   15dc8:	mov	r0, r4
   15dcc:	bl	11f90 <exit@plt>
   15dd0:	push	{fp, lr}
   15dd4:	mov	fp, sp
   15dd8:	movw	r1, #27355	; 0x6adb
   15ddc:	movt	r1, #2
   15de0:	mov	r0, #0
   15de4:	mov	r2, #5
   15de8:	bl	11db0 <dcgettext@plt>
   15dec:	movw	r1, #37668	; 0x9324
   15df0:	movt	r1, #3
   15df4:	ldr	r1, [r1]
   15df8:	pop	{fp, lr}
   15dfc:	b	11c84 <fputs_unlocked@plt>
   15e00:	push	{fp, lr}
   15e04:	mov	fp, sp
   15e08:	movw	r1, #27430	; 0x6b26
   15e0c:	movt	r1, #2
   15e10:	mov	r0, #0
   15e14:	mov	r2, #5
   15e18:	bl	11db0 <dcgettext@plt>
   15e1c:	movw	r1, #37668	; 0x9324
   15e20:	movt	r1, #3
   15e24:	ldr	r1, [r1]
   15e28:	pop	{fp, lr}
   15e2c:	b	11c84 <fputs_unlocked@plt>
   15e30:	push	{r4, r5, r6, sl, fp, lr}
   15e34:	add	fp, sp, #16
   15e38:	sub	sp, sp, #56	; 0x38
   15e3c:	mov	r4, r0
   15e40:	movw	r0, #33792	; 0x8400
   15e44:	movt	r0, #2
   15e48:	add	r1, r0, #32
   15e4c:	mov	r2, #48	; 0x30
   15e50:	vld1.64	{d16-d17}, [r1]
   15e54:	mov	r5, sp
   15e58:	add	r1, r5, #32
   15e5c:	add	r3, r0, #16
   15e60:	vld1.64	{d18-d19}, [r0], r2
   15e64:	vld1.64	{d20-d21}, [r3]
   15e68:	vldr	d22, [r0]
   15e6c:	vst1.64	{d16-d17}, [r1]
   15e70:	add	r0, r5, #16
   15e74:	vst1.64	{d20-d21}, [r0]
   15e78:	mov	r0, r5
   15e7c:	vst1.64	{d18-d19}, [r0], r2
   15e80:	vstr	d22, [r0]
   15e84:	ldr	r1, [sp]
   15e88:	cmp	r1, #0
   15e8c:	beq	15eac <putc_unlocked@plt+0x3cf4>
   15e90:	mov	r5, sp
   15e94:	mov	r0, r4
   15e98:	bl	11ccc <strcmp@plt>
   15e9c:	cmp	r0, #0
   15ea0:	ldrne	r1, [r5, #8]!
   15ea4:	cmpne	r1, #0
   15ea8:	bne	15e94 <putc_unlocked@plt+0x3cdc>
   15eac:	ldr	r5, [r5, #4]
   15eb0:	movw	r1, #27735	; 0x6c57
   15eb4:	movt	r1, #2
   15eb8:	mov	r0, #0
   15ebc:	mov	r2, #5
   15ec0:	bl	11db0 <dcgettext@plt>
   15ec4:	mov	r1, r0
   15ec8:	movw	r2, #25755	; 0x649b
   15ecc:	movt	r2, #2
   15ed0:	movw	r3, #27758	; 0x6c6e
   15ed4:	movt	r3, #2
   15ed8:	mov	r0, #1
   15edc:	bl	12014 <__printf_chk@plt>
   15ee0:	cmp	r5, #0
   15ee4:	moveq	r5, r4
   15ee8:	mov	r0, #5
   15eec:	mov	r1, #0
   15ef0:	bl	12074 <setlocale@plt>
   15ef4:	cmp	r0, #0
   15ef8:	beq	15f38 <putc_unlocked@plt+0x3d80>
   15efc:	movw	r1, #27798	; 0x6c96
   15f00:	movt	r1, #2
   15f04:	mov	r2, #3
   15f08:	bl	12140 <strncmp@plt>
   15f0c:	cmp	r0, #0
   15f10:	beq	15f38 <putc_unlocked@plt+0x3d80>
   15f14:	movw	r1, #27802	; 0x6c9a
   15f18:	movt	r1, #2
   15f1c:	mov	r0, #0
   15f20:	mov	r2, #5
   15f24:	bl	11db0 <dcgettext@plt>
   15f28:	movw	r1, #37668	; 0x9324
   15f2c:	movt	r1, #3
   15f30:	ldr	r1, [r1]
   15f34:	bl	11c84 <fputs_unlocked@plt>
   15f38:	movw	r1, #27873	; 0x6ce1
   15f3c:	movt	r1, #2
   15f40:	mov	r0, #0
   15f44:	mov	r2, #5
   15f48:	bl	11db0 <dcgettext@plt>
   15f4c:	mov	r1, r0
   15f50:	movw	r2, #27758	; 0x6c6e
   15f54:	movt	r2, #2
   15f58:	mov	r0, #1
   15f5c:	mov	r3, r4
   15f60:	bl	12014 <__printf_chk@plt>
   15f64:	movw	r0, #27668	; 0x6c14
   15f68:	movt	r0, #2
   15f6c:	movw	r6, #27197	; 0x6a3d
   15f70:	movt	r6, #2
   15f74:	cmp	r5, r4
   15f78:	moveq	r6, r0
   15f7c:	movw	r1, #27900	; 0x6cfc
   15f80:	movt	r1, #2
   15f84:	mov	r0, #0
   15f88:	mov	r2, #5
   15f8c:	bl	11db0 <dcgettext@plt>
   15f90:	mov	r1, r0
   15f94:	mov	r0, #1
   15f98:	mov	r2, r5
   15f9c:	mov	r3, r6
   15fa0:	sub	sp, fp, #16
   15fa4:	pop	{r4, r5, r6, sl, fp, lr}
   15fa8:	b	12014 <__printf_chk@plt>
   15fac:	push	{r4, sl, fp, lr}
   15fb0:	add	fp, sp, #8
   15fb4:	mov	r4, r0
   15fb8:	movw	r0, #37904	; 0x9410
   15fbc:	movt	r0, #3
   15fc0:	ldrb	r1, [r0]
   15fc4:	cmp	r1, #0
   15fc8:	bne	15fe8 <putc_unlocked@plt+0x3e30>
   15fcc:	mov	r1, #1
   15fd0:	strb	r1, [r0]
   15fd4:	mov	r0, #1
   15fd8:	bl	11fb4 <tcgetpgrp@plt>
   15fdc:	cmp	r0, #0
   15fe0:	blpl	16008 <putc_unlocked@plt+0x3e50>
   15fe4:	bl	16010 <putc_unlocked@plt+0x3e58>
   15fe8:	movw	r0, #37668	; 0x9324
   15fec:	movt	r0, #3
   15ff0:	ldr	r3, [r0]
   15ff4:	ldr	r1, [r4]
   15ff8:	ldr	r0, [r4, #4]
   15ffc:	mov	r2, #1
   16000:	pop	{r4, sl, fp, lr}
   16004:	b	11d98 <fwrite_unlocked@plt>
   16008:	mov	r0, #1
   1600c:	b	16054 <putc_unlocked@plt+0x3e9c>
   16010:	push	{r4, sl, fp, lr}
   16014:	add	fp, sp, #8
   16018:	movw	r4, #37344	; 0x91e0
   1601c:	movt	r4, #3
   16020:	ldr	r0, [r4, #20]
   16024:	cmp	r0, #0
   16028:	beq	16038 <putc_unlocked@plt+0x3e80>
   1602c:	add	r0, r4, #16
   16030:	pop	{r4, sl, fp, lr}
   16034:	b	15fac <putc_unlocked@plt+0x3df4>
   16038:	mov	r0, r4
   1603c:	bl	15fac <putc_unlocked@plt+0x3df4>
   16040:	add	r0, r4, #24
   16044:	bl	15fac <putc_unlocked@plt+0x3df4>
   16048:	add	r0, r4, #8
   1604c:	pop	{r4, sl, fp, lr}
   16050:	b	15fac <putc_unlocked@plt+0x3df4>
   16054:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16058:	add	fp, sp, #28
   1605c:	sub	sp, sp, #140	; 0x8c
   16060:	cmp	r0, #0
   16064:	beq	160c8 <putc_unlocked@plt+0x3f10>
   16068:	movw	r8, #38184	; 0x9528
   1606c:	movt	r8, #3
   16070:	mov	r0, r8
   16074:	bl	12080 <sigemptyset@plt>
   16078:	mov	r5, #0
   1607c:	movw	r7, #27952	; 0x6d30
   16080:	movt	r7, #2
   16084:	mov	r4, sp
   16088:	b	16098 <putc_unlocked@plt+0x3ee0>
   1608c:	sub	r5, r5, #1
   16090:	cmn	r5, #12
   16094:	beq	16114 <putc_unlocked@plt+0x3f5c>
   16098:	ldr	r6, [r7, -r5, lsl #2]
   1609c:	mov	r0, r6
   160a0:	mov	r1, #0
   160a4:	mov	r2, r4
   160a8:	bl	11e40 <sigaction@plt>
   160ac:	ldr	r0, [sp]
   160b0:	cmp	r0, #1
   160b4:	beq	1608c <putc_unlocked@plt+0x3ed4>
   160b8:	mov	r0, r8
   160bc:	mov	r1, r6
   160c0:	bl	11f18 <sigaddset@plt>
   160c4:	b	1608c <putc_unlocked@plt+0x3ed4>
   160c8:	mov	r6, #0
   160cc:	movw	r7, #27952	; 0x6d30
   160d0:	movt	r7, #2
   160d4:	movw	r4, #38184	; 0x9528
   160d8:	movt	r4, #3
   160dc:	b	160ec <putc_unlocked@plt+0x3f34>
   160e0:	sub	r6, r6, #1
   160e4:	cmn	r6, #12
   160e8:	beq	16194 <putc_unlocked@plt+0x3fdc>
   160ec:	ldr	r5, [r7, -r6, lsl #2]
   160f0:	mov	r0, r4
   160f4:	mov	r1, r5
   160f8:	bl	11dc8 <sigismember@plt>
   160fc:	cmp	r0, #0
   16100:	beq	160e0 <putc_unlocked@plt+0x3f28>
   16104:	mov	r0, r5
   16108:	mov	r1, #0
   1610c:	bl	11d8c <signal@plt>
   16110:	b	160e0 <putc_unlocked@plt+0x3f28>
   16114:	add	r0, r4, #4
   16118:	movw	r8, #38184	; 0x9528
   1611c:	movt	r8, #3
   16120:	mov	r1, r8
   16124:	mov	r2, #128	; 0x80
   16128:	bl	11d74 <memcpy@plt>
   1612c:	mov	r0, #268435456	; 0x10000000
   16130:	str	r0, [sp, #132]	; 0x84
   16134:	mov	r5, #0
   16138:	movw	r9, #24988	; 0x619c
   1613c:	movt	r9, #1
   16140:	movw	sl, #25032	; 0x61c8
   16144:	movt	sl, #1
   16148:	b	16158 <putc_unlocked@plt+0x3fa0>
   1614c:	sub	r5, r5, #1
   16150:	cmn	r5, #12
   16154:	beq	16194 <putc_unlocked@plt+0x3fdc>
   16158:	ldr	r6, [r7, -r5, lsl #2]
   1615c:	mov	r0, r8
   16160:	mov	r1, r6
   16164:	bl	11dc8 <sigismember@plt>
   16168:	cmp	r0, #0
   1616c:	beq	1614c <putc_unlocked@plt+0x3f94>
   16170:	cmp	r5, #0
   16174:	mov	r0, sl
   16178:	moveq	r0, r9
   1617c:	str	r0, [sp]
   16180:	mov	r0, r6
   16184:	mov	r1, r4
   16188:	mov	r2, #0
   1618c:	bl	11e40 <sigaction@plt>
   16190:	b	1614c <putc_unlocked@plt+0x3f94>
   16194:	sub	sp, fp, #28
   16198:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1619c:	movw	r0, #37912	; 0x9418
   161a0:	movt	r0, #3
   161a4:	ldr	r0, [r0]
   161a8:	cmp	r0, #0
   161ac:	bxne	lr
   161b0:	movw	r0, #37908	; 0x9414
   161b4:	movt	r0, #3
   161b8:	ldr	r1, [r0]
   161bc:	add	r1, r1, #1
   161c0:	str	r1, [r0]
   161c4:	bx	lr
   161c8:	movw	r1, #37912	; 0x9418
   161cc:	movt	r1, #3
   161d0:	ldr	r2, [r1]
   161d4:	cmp	r2, #0
   161d8:	streq	r0, [r1]
   161dc:	bx	lr
   161e0:	push	{r4, sl, fp, lr}
   161e4:	add	fp, sp, #8
   161e8:	sub	sp, sp, #16
   161ec:	movw	r1, #27197	; 0x6a3d
   161f0:	movt	r1, #2
   161f4:	str	r1, [sp]
   161f8:	mov	r4, #0
   161fc:	add	r3, sp, #8
   16200:	mov	r1, #0
   16204:	mov	r2, #0
   16208:	bl	234a0 <_obstack_memory_used@@Base+0x30c0>
   1620c:	cmp	r0, #1
   16210:	beq	16244 <putc_unlocked@plt+0x408c>
   16214:	cmp	r0, #0
   16218:	bne	16240 <putc_unlocked@plt+0x4088>
   1621c:	mov	r4, #0
   16220:	ldr	r0, [sp, #8]
   16224:	ldr	r1, [sp, #12]
   16228:	subs	r2, r0, #-2147483648	; 0x80000000
   1622c:	sbcs	r1, r1, #0
   16230:	movwcc	r4, #1
   16234:	cmp	r4, #0
   16238:	movne	r4, r0
   1623c:	b	16244 <putc_unlocked@plt+0x408c>
   16240:	mvn	r4, #0
   16244:	mov	r0, r4
   16248:	sub	sp, fp, #8
   1624c:	pop	{r4, sl, fp, pc}
   16250:	push	{r4, sl, fp, lr}
   16254:	add	fp, sp, #8
   16258:	mov	r4, r0
   1625c:	mov	r0, #8
   16260:	bl	22db0 <_obstack_memory_used@@Base+0x29d0>
   16264:	movw	r1, #38376	; 0x95e8
   16268:	movt	r1, #3
   1626c:	ldr	r2, [r1]
   16270:	str	r4, [r0]
   16274:	str	r2, [r0, #4]
   16278:	str	r0, [r1]
   1627c:	pop	{r4, sl, fp, pc}
   16280:	push	{r4, sl, fp, lr}
   16284:	add	fp, sp, #8
   16288:	movw	r4, #37552	; 0x92b0
   1628c:	movt	r4, #3
   16290:	ldrsb	r0, [r4]
   16294:	cmn	r0, #1
   16298:	bgt	162a8 <putc_unlocked@plt+0x40f0>
   1629c:	mov	r0, #1
   162a0:	bl	12128 <isatty@plt>
   162a4:	strb	r0, [r4]
   162a8:	tst	r0, #255	; 0xff
   162ac:	uxtb	r0, r0
   162b0:	cmp	r0, #0
   162b4:	movwne	r0, #1
   162b8:	pop	{r4, sl, fp, pc}
   162bc:	bx	lr
   162c0:	push	{r4, r5, r6, sl, fp, lr}
   162c4:	add	fp, sp, #16
   162c8:	movw	r0, #26702	; 0x684e
   162cc:	movt	r0, #2
   162d0:	bl	11ef4 <getenv@plt>
   162d4:	mvn	r4, #0
   162d8:	cmp	r0, #0
   162dc:	beq	1630c <putc_unlocked@plt+0x4154>
   162e0:	mov	r5, r0
   162e4:	movw	r1, #34468	; 0x86a4
   162e8:	movt	r1, #2
   162ec:	movw	r6, #34512	; 0x86d0
   162f0:	movt	r6, #2
   162f4:	mov	r2, r6
   162f8:	mov	r3, #4
   162fc:	bl	1a3cc <putc_unlocked@plt+0x8214>
   16300:	cmn	r0, #1
   16304:	ble	16314 <putc_unlocked@plt+0x415c>
   16308:	ldr	r4, [r6, r0, lsl #2]
   1630c:	mov	r0, r4
   16310:	pop	{r4, r5, r6, sl, fp, pc}
   16314:	movw	r1, #26716	; 0x685c
   16318:	movt	r1, #2
   1631c:	mov	r0, #0
   16320:	mov	r2, #5
   16324:	bl	11db0 <dcgettext@plt>
   16328:	mov	r6, r0
   1632c:	mov	r0, r5
   16330:	bl	21c4c <_obstack_memory_used@@Base+0x186c>
   16334:	mov	r3, r0
   16338:	mov	r0, #0
   1633c:	mov	r1, #0
   16340:	mov	r2, r6
   16344:	bl	11eb8 <error@plt>
   16348:	mov	r0, r4
   1634c:	pop	{r4, r5, r6, sl, fp, pc}
   16350:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16354:	add	fp, sp, #28
   16358:	sub	sp, sp, #556	; 0x22c
   1635c:	sub	sp, sp, #1024	; 0x400
   16360:	mov	r4, #0
   16364:	movw	r5, #37544	; 0x92a8
   16368:	movt	r5, #3
   1636c:	sub	r6, fp, #40	; 0x28
   16370:	ldr	r0, [r5, r4, lsl #2]
   16374:	bl	1646c <putc_unlocked@plt+0x42b4>
   16378:	str	r0, [r6, r4, lsl #2]
   1637c:	add	r4, r4, #1
   16380:	cmp	r4, #2
   16384:	bne	16370 <putc_unlocked@plt+0x41b8>
   16388:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1638c:	cmp	r0, #0
   16390:	bne	163a0 <putc_unlocked@plt+0x41e8>
   16394:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16398:	cmp	r0, #0
   1639c:	beq	16464 <putc_unlocked@plt+0x42ac>
   163a0:	add	r0, sp, #32
   163a4:	bl	164b0 <putc_unlocked@plt+0x42f8>
   163a8:	cmp	r0, #0
   163ac:	beq	16464 <putc_unlocked@plt+0x42ac>
   163b0:	mov	r0, #0
   163b4:	movw	r4, #38380	; 0x95ec
   163b8:	movt	r4, #3
   163bc:	ldr	r9, [r5, r0, lsl #2]
   163c0:	str	r0, [sp, #24]
   163c4:	ldr	sl, [r6, r0, lsl #2]
   163c8:	sub	r8, sl, r9
   163cc:	add	r0, sl, #2
   163d0:	str	r0, [sp, #28]
   163d4:	mov	r7, #0
   163d8:	add	r0, r4, r7
   163dc:	cmp	sl, #0
   163e0:	beq	16410 <putc_unlocked@plt+0x4258>
   163e4:	cmp	r8, #128	; 0x80
   163e8:	bgt	16464 <putc_unlocked@plt+0x42ac>
   163ec:	add	r1, sp, #32
   163f0:	add	r1, r1, r7
   163f4:	movw	r2, #26812	; 0x68bc
   163f8:	movt	r2, #2
   163fc:	stm	sp, {r2, r8, r9}
   16400:	str	r1, [sp, #12]
   16404:	ldr	r1, [sp, #28]
   16408:	str	r1, [sp, #16]
   1640c:	b	1641c <putc_unlocked@plt+0x4264>
   16410:	movw	r1, #34022	; 0x84e6
   16414:	movt	r1, #2
   16418:	stm	sp, {r1, r9}
   1641c:	mov	r1, #128	; 0x80
   16420:	mov	r2, #1
   16424:	mvn	r3, #0
   16428:	bl	1217c <__snprintf_chk@plt>
   1642c:	cmp	r0, #128	; 0x80
   16430:	bcs	16464 <putc_unlocked@plt+0x42ac>
   16434:	add	r7, r7, #128	; 0x80
   16438:	cmp	r7, #1536	; 0x600
   1643c:	bne	163d8 <putc_unlocked@plt+0x4220>
   16440:	add	r4, r4, #1536	; 0x600
   16444:	ldr	r0, [sp, #24]
   16448:	add	r0, r0, #1
   1644c:	cmp	r0, #2
   16450:	bne	163bc <putc_unlocked@plt+0x4204>
   16454:	movw	r0, #41452	; 0xa1ec
   16458:	movt	r0, #3
   1645c:	mov	r1, #1
   16460:	strb	r1, [r0]
   16464:	sub	sp, fp, #28
   16468:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1646c:	b	16480 <putc_unlocked@plt+0x42c8>
   16470:	cmp	r1, #0
   16474:	moveq	r0, #0
   16478:	bxeq	lr
   1647c:	add	r0, r0, #1
   16480:	ldrb	r1, [r0]
   16484:	cmp	r1, #37	; 0x25
   16488:	bne	16470 <putc_unlocked@plt+0x42b8>
   1648c:	mov	r1, r0
   16490:	ldrb	r2, [r1, #1]!
   16494:	cmp	r2, #37	; 0x25
   16498:	beq	164a8 <putc_unlocked@plt+0x42f0>
   1649c:	cmp	r2, #98	; 0x62
   164a0:	bxeq	lr
   164a4:	b	1647c <putc_unlocked@plt+0x42c4>
   164a8:	mov	r0, r1
   164ac:	b	1647c <putc_unlocked@plt+0x42c4>
   164b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   164b4:	add	fp, sp, #28
   164b8:	sub	sp, sp, #20
   164bc:	mov	r6, r0
   164c0:	mov	r8, #12
   164c4:	add	r5, sp, #16
   164c8:	str	r0, [sp, #12]
   164cc:	mov	r4, #0
   164d0:	mov	sl, #0
   164d4:	str	r8, [sp, #16]
   164d8:	movw	r0, #14
   164dc:	movt	r0, #2
   164e0:	add	r0, sl, r0
   164e4:	bl	120b0 <nl_langinfo@plt>
   164e8:	mov	r7, r0
   164ec:	mov	r1, #37	; 0x25
   164f0:	bl	11fcc <strchr@plt>
   164f4:	cmp	r0, #0
   164f8:	bne	16578 <putc_unlocked@plt+0x43c0>
   164fc:	bl	11f78 <__ctype_b_loc@plt>
   16500:	ldr	r9, [r0]
   16504:	ldrb	r0, [r7]
   16508:	bl	16584 <putc_unlocked@plt+0x43cc>
   1650c:	add	r0, r9, r0, lsl #1
   16510:	ldrh	r0, [r0]
   16514:	mov	r1, #0
   16518:	str	r1, [sp, #4]
   1651c:	ubfx	r0, r0, #11, #1
   16520:	str	r0, [sp]
   16524:	mov	r0, r7
   16528:	mov	r1, r6
   1652c:	mov	r2, #128	; 0x80
   16530:	mov	r3, r5
   16534:	bl	1dd70 <putc_unlocked@plt+0xbbb8>
   16538:	cmp	r0, #127	; 0x7f
   1653c:	bhi	16578 <putc_unlocked@plt+0x43c0>
   16540:	ldr	r0, [sp, #16]
   16544:	cmp	r4, r0
   16548:	movls	r4, r0
   1654c:	add	r6, r6, #128	; 0x80
   16550:	add	sl, sl, #1
   16554:	cmp	sl, #12
   16558:	bne	164d4 <putc_unlocked@plt+0x431c>
   1655c:	cmp	r8, r4
   16560:	mov	r8, r4
   16564:	ldr	r6, [sp, #12]
   16568:	bhi	164cc <putc_unlocked@plt+0x4314>
   1656c:	mov	r0, #1
   16570:	sub	sp, fp, #28
   16574:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16578:	mov	r0, #0
   1657c:	sub	sp, fp, #28
   16580:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16584:	bx	lr
   16588:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1658c:	add	fp, sp, #24
   16590:	movw	r0, #26836	; 0x68d4
   16594:	movt	r0, #2
   16598:	bl	11ef4 <getenv@plt>
   1659c:	mov	r4, r0
   165a0:	mov	r0, #0
   165a4:	cmp	r4, #0
   165a8:	beq	1662c <putc_unlocked@plt+0x4474>
   165ac:	ldrb	r1, [r4]
   165b0:	cmp	r1, #0
   165b4:	beq	1662c <putc_unlocked@plt+0x4474>
   165b8:	movw	r7, #29148	; 0x71dc
   165bc:	movt	r7, #2
   165c0:	movw	r8, #26927	; 0x692f
   165c4:	movt	r8, #2
   165c8:	movw	r5, #4310	; 0x10d6
   165cc:	mov	r6, r7
   165d0:	b	165f0 <putc_unlocked@plt+0x4438>
   165d4:	mov	r0, r6
   165d8:	bl	11fc0 <strlen@plt>
   165dc:	add	r0, r0, r6
   165e0:	add	r6, r0, #1
   165e4:	sub	r0, r6, r7
   165e8:	cmp	r0, r5
   165ec:	bcs	16628 <putc_unlocked@plt+0x4470>
   165f0:	mov	r0, r6
   165f4:	mov	r1, r8
   165f8:	mov	r2, #5
   165fc:	bl	12140 <strncmp@plt>
   16600:	cmp	r0, #0
   16604:	bne	165d4 <putc_unlocked@plt+0x441c>
   16608:	add	r0, r6, #5
   1660c:	mov	r1, r4
   16610:	mov	r2, #0
   16614:	bl	11edc <fnmatch@plt>
   16618:	cmp	r0, #0
   1661c:	bne	165d4 <putc_unlocked@plt+0x441c>
   16620:	mov	r0, #1
   16624:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16628:	mov	r0, #0
   1662c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16630:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16634:	add	fp, sp, #28
   16638:	sub	sp, sp, #4
   1663c:	ldr	lr, [r0]
   16640:	ldr	ip, [r1]
   16644:	mov	r6, #0
   16648:	mov	r9, #0
   1664c:	mov	r5, #0
   16650:	cmp	r6, #4
   16654:	bls	1667c <putc_unlocked@plt+0x44c4>
   16658:	b	16b04 <putc_unlocked@plt+0x494c>
   1665c:	add	r4, r4, r7, lsl #3
   16660:	sub	r5, r4, #48	; 0x30
   16664:	add	ip, ip, #1
   16668:	mov	r6, #2
   1666c:	cmp	r6, #5
   16670:	bcs	16ae8 <putc_unlocked@plt+0x4930>
   16674:	cmp	r6, #4
   16678:	bhi	16b04 <putc_unlocked@plt+0x494c>
   1667c:	mov	r7, r5
   16680:	add	r4, pc, #0
   16684:	ldr	pc, [r4, r6, lsl #2]
   16688:	muleq	r1, ip, r6
   1668c:	andeq	r6, r1, r4, asr #15
   16690:	andeq	r6, r1, r8, ror r7
   16694:	muleq	r1, r0, r7
   16698:	andeq	r6, r1, r8, asr r7
   1669c:	ldrb	sl, [ip]
   166a0:	sub	r5, sl, #58	; 0x3a
   166a4:	mov	r6, #5
   166a8:	cmp	r5, #36	; 0x24
   166ac:	bhi	16a38 <putc_unlocked@plt+0x4880>
   166b0:	add	r4, pc, #0
   166b4:	ldr	pc, [r4, r5, lsl #2]
   166b8:	andeq	r6, r1, r8, ror #21
   166bc:	andeq	r6, r1, r0, asr #20
   166c0:	andeq	r6, r1, r0, asr #20
   166c4:	andeq	r6, r1, ip, asr #14
   166c8:	andeq	r6, r1, r0, asr #20
   166cc:	andeq	r6, r1, r0, asr #20
   166d0:	andeq	r6, r1, r0, asr #20
   166d4:	andeq	r6, r1, r0, asr #20
   166d8:	andeq	r6, r1, r0, asr #20
   166dc:	andeq	r6, r1, r0, asr #20
   166e0:	andeq	r6, r1, r0, asr #20
   166e4:	andeq	r6, r1, r0, asr #20
   166e8:	andeq	r6, r1, r0, asr #20
   166ec:	andeq	r6, r1, r0, asr #20
   166f0:	andeq	r6, r1, r0, asr #20
   166f4:	andeq	r6, r1, r0, asr #20
   166f8:	andeq	r6, r1, r0, asr #20
   166fc:	andeq	r6, r1, r0, asr #20
   16700:	andeq	r6, r1, r0, asr #20
   16704:	andeq	r6, r1, r0, asr #20
   16708:	andeq	r6, r1, r0, asr #20
   1670c:	andeq	r6, r1, r0, asr #20
   16710:	andeq	r6, r1, r0, asr #20
   16714:	andeq	r6, r1, r0, asr #20
   16718:	andeq	r6, r1, r0, asr #20
   1671c:	andeq	r6, r1, r0, asr #20
   16720:	andeq	r6, r1, r0, asr #20
   16724:	andeq	r6, r1, r0, asr #20
   16728:	andeq	r6, r1, r0, asr #20
   1672c:	andeq	r6, r1, r0, asr #20
   16730:	andeq	r6, r1, r0, asr #20
   16734:	andeq	r6, r1, r0, asr #20
   16738:	andeq	r6, r1, r0, asr #20
   1673c:	andeq	r6, r1, r0, asr #20
   16740:	andeq	r6, r1, r0, lsr #20
   16744:	andeq	r6, r1, r0, asr #20
   16748:	andeq	r6, r1, ip, lsr #20
   1674c:	cmp	r2, #0
   16750:	beq	16a40 <putc_unlocked@plt+0x4888>
   16754:	b	16ae8 <putc_unlocked@plt+0x4930>
   16758:	ldrb	r4, [ip]
   1675c:	sub	r5, r4, #64	; 0x40
   16760:	uxtb	r5, r5
   16764:	cmp	r5, #62	; 0x3e
   16768:	bhi	169e0 <putc_unlocked@plt+0x4828>
   1676c:	and	r4, r4, #31
   16770:	strb	r4, [lr], #1
   16774:	b	16a44 <putc_unlocked@plt+0x488c>
   16778:	ldrb	r4, [ip]
   1677c:	and	r5, r4, #248	; 0xf8
   16780:	cmp	r5, #48	; 0x30
   16784:	beq	1665c <putc_unlocked@plt+0x44a4>
   16788:	strb	r7, [lr], #1
   1678c:	b	169f0 <putc_unlocked@plt+0x4838>
   16790:	ldrb	r4, [ip]
   16794:	sub	r5, r4, #48	; 0x30
   16798:	cmp	r5, #10
   1679c:	bcc	169f8 <putc_unlocked@plt+0x4840>
   167a0:	sub	r5, r4, #65	; 0x41
   167a4:	cmp	r5, #6
   167a8:	bcc	16a04 <putc_unlocked@plt+0x484c>
   167ac:	sub	r5, r4, #97	; 0x61
   167b0:	cmp	r5, #6
   167b4:	bcs	16788 <putc_unlocked@plt+0x45d0>
   167b8:	add	r4, r4, r7, lsl #4
   167bc:	sub	r5, r4, #87	; 0x57
   167c0:	b	16a0c <putc_unlocked@plt+0x4854>
   167c4:	ldrb	r4, [ip]
   167c8:	cmp	r4, #120	; 0x78
   167cc:	bhi	16a60 <putc_unlocked@plt+0x48a8>
   167d0:	mov	sl, #7
   167d4:	mov	r6, #3
   167d8:	mov	r5, #0
   167dc:	add	r8, pc, #0
   167e0:	ldr	pc, [r8, r4, lsl #2]
   167e4:	andeq	r6, r1, r8, ror #20
   167e8:	andeq	r6, r1, r0, ror #20
   167ec:	andeq	r6, r1, r0, ror #20
   167f0:	andeq	r6, r1, r0, ror #20
   167f4:	andeq	r6, r1, r0, ror #20
   167f8:	andeq	r6, r1, r0, ror #20
   167fc:	andeq	r6, r1, r0, ror #20
   16800:	andeq	r6, r1, r0, ror #20
   16804:	andeq	r6, r1, r0, ror #20
   16808:	andeq	r6, r1, r0, ror #20
   1680c:	andeq	r6, r1, r0, ror #20
   16810:	andeq	r6, r1, r0, ror #20
   16814:	andeq	r6, r1, r0, ror #20
   16818:	andeq	r6, r1, r0, ror #20
   1681c:	andeq	r6, r1, r0, ror #20
   16820:	andeq	r6, r1, r0, ror #20
   16824:	andeq	r6, r1, r0, ror #20
   16828:	andeq	r6, r1, r0, ror #20
   1682c:	andeq	r6, r1, r0, ror #20
   16830:	andeq	r6, r1, r0, ror #20
   16834:	andeq	r6, r1, r0, ror #20
   16838:	andeq	r6, r1, r0, ror #20
   1683c:	andeq	r6, r1, r0, ror #20
   16840:	andeq	r6, r1, r0, ror #20
   16844:	andeq	r6, r1, r0, ror #20
   16848:	andeq	r6, r1, r0, ror #20
   1684c:	andeq	r6, r1, r0, ror #20
   16850:	andeq	r6, r1, r0, ror #20
   16854:	andeq	r6, r1, r0, ror #20
   16858:	andeq	r6, r1, r0, ror #20
   1685c:	andeq	r6, r1, r0, ror #20
   16860:	andeq	r6, r1, r0, ror #20
   16864:	andeq	r6, r1, r0, ror #20
   16868:	andeq	r6, r1, r0, ror #20
   1686c:	andeq	r6, r1, r0, ror #20
   16870:	andeq	r6, r1, r0, ror #20
   16874:	andeq	r6, r1, r0, ror #20
   16878:	andeq	r6, r1, r0, ror #20
   1687c:	andeq	r6, r1, r0, ror #20
   16880:	andeq	r6, r1, r0, ror #20
   16884:	andeq	r6, r1, r0, ror #20
   16888:	andeq	r6, r1, r0, ror #20
   1688c:	andeq	r6, r1, r0, ror #20
   16890:	andeq	r6, r1, r0, ror #20
   16894:	andeq	r6, r1, r0, ror #20
   16898:	andeq	r6, r1, r0, ror #20
   1689c:	andeq	r6, r1, r0, ror #20
   168a0:	andeq	r6, r1, r0, ror #20
   168a4:	andeq	r6, r1, r8, asr #19
   168a8:	andeq	r6, r1, r8, asr #19
   168ac:	andeq	r6, r1, r8, asr #19
   168b0:	andeq	r6, r1, r8, asr #19
   168b4:	andeq	r6, r1, r8, asr #19
   168b8:	andeq	r6, r1, r8, asr #19
   168bc:	andeq	r6, r1, r8, asr #19
   168c0:	andeq	r6, r1, r8, asr #19
   168c4:	andeq	r6, r1, r0, ror #20
   168c8:	andeq	r6, r1, r0, ror #20
   168cc:	andeq	r6, r1, r0, ror #20
   168d0:	andeq	r6, r1, r0, ror #20
   168d4:	andeq	r6, r1, r0, ror #20
   168d8:	andeq	r6, r1, r0, ror #20
   168dc:	andeq	r6, r1, r0, ror #20
   168e0:			; <UNDEFINED> instruction: 0x00016ab0
   168e4:	andeq	r6, r1, r0, ror #20
   168e8:	andeq	r6, r1, r0, ror #20
   168ec:	andeq	r6, r1, r0, ror #20
   168f0:	andeq	r6, r1, r0, ror #20
   168f4:	andeq	r6, r1, r0, ror #20
   168f8:	andeq	r6, r1, r0, ror #20
   168fc:	andeq	r6, r1, r0, ror #20
   16900:	andeq	r6, r1, r0, ror #20
   16904:	andeq	r6, r1, r0, ror #20
   16908:	andeq	r6, r1, r0, ror #20
   1690c:	andeq	r6, r1, r0, ror #20
   16910:	andeq	r6, r1, r0, ror #20
   16914:	andeq	r6, r1, r0, ror #20
   16918:	andeq	r6, r1, r0, ror #20
   1691c:	andeq	r6, r1, r0, ror #20
   16920:	andeq	r6, r1, r0, ror #20
   16924:	andeq	r6, r1, r0, ror #20
   16928:	andeq	r6, r1, r0, ror #20
   1692c:	andeq	r6, r1, r0, ror #20
   16930:	andeq	r6, r1, r0, ror #20
   16934:	andeq	r6, r1, r0, ror #20
   16938:	andeq	r6, r1, r0, ror #20
   1693c:	andeq	r6, r1, r0, ror #20
   16940:	andeq	r6, r1, r0, ror #20
   16944:	ldrdeq	r6, [r1], -r4
   16948:	andeq	r6, r1, r0, ror #20
   1694c:	andeq	r6, r1, r0, ror #20
   16950:	andeq	r6, r1, r0, ror #20
   16954:	andeq	r6, r1, r0, ror #20
   16958:	andeq	r6, r1, r0, ror #20
   1695c:	andeq	r6, r1, r0, ror #20
   16960:	andeq	r6, r1, r0, lsl #21
   16964:	andeq	r6, r1, r0, ror #20
   16968:	andeq	r6, r1, r4, asr #21
   1696c:	andeq	r6, r1, r8, lsl #21
   16970:	andeq	r6, r1, r0, ror #20
   16974:	andeq	r6, r1, r0, ror #20
   16978:	muleq	r1, r0, sl
   1697c:	muleq	r1, r8, sl
   16980:	andeq	r6, r1, r0, ror #20
   16984:	andeq	r6, r1, r0, ror #20
   16988:	andeq	r6, r1, r0, ror #20
   1698c:	andeq	r6, r1, r0, ror #20
   16990:	andeq	r6, r1, r0, ror #20
   16994:	andeq	r6, r1, r0, ror #20
   16998:	andeq	r6, r1, r0, ror #20
   1699c:	andeq	r6, r1, r0, lsr #21
   169a0:	andeq	r6, r1, r0, ror #20
   169a4:	andeq	r6, r1, r0, ror #20
   169a8:	andeq	r6, r1, r0, ror #20
   169ac:			; <UNDEFINED> instruction: 0x00016ab8
   169b0:	andeq	r6, r1, r0, ror #20
   169b4:	andeq	r6, r1, r8, lsr #21
   169b8:	andeq	r6, r1, r0, ror #20
   169bc:	andeq	r6, r1, r0, asr #21
   169c0:	andeq	r6, r1, r0, ror #20
   169c4:	ldrdeq	r6, [r1], -r4
   169c8:	sub	r5, r4, #48	; 0x30
   169cc:	mov	r6, #2
   169d0:	add	ip, ip, #1
   169d4:	cmp	r6, #5
   169d8:	bcc	16674 <putc_unlocked@plt+0x44bc>
   169dc:	b	16ae8 <putc_unlocked@plt+0x4930>
   169e0:	cmp	r4, #63	; 0x3f
   169e4:	bne	16ae4 <putc_unlocked@plt+0x492c>
   169e8:	mov	r4, #127	; 0x7f
   169ec:	strb	r4, [lr], #1
   169f0:	add	r9, r9, #1
   169f4:	b	16a4c <putc_unlocked@plt+0x4894>
   169f8:	add	r4, r4, r7, lsl #4
   169fc:	sub	r5, r4, #48	; 0x30
   16a00:	b	16a0c <putc_unlocked@plt+0x4854>
   16a04:	add	r4, r4, r7, lsl #4
   16a08:	sub	r5, r4, #55	; 0x37
   16a0c:	add	ip, ip, #1
   16a10:	mov	r6, #3
   16a14:	cmp	r6, #5
   16a18:	bcc	16674 <putc_unlocked@plt+0x44bc>
   16a1c:	b	16ae8 <putc_unlocked@plt+0x4930>
   16a20:	add	ip, ip, #1
   16a24:	mov	r6, #1
   16a28:	b	16a50 <putc_unlocked@plt+0x4898>
   16a2c:	add	ip, ip, #1
   16a30:	mov	r6, #4
   16a34:	b	16a50 <putc_unlocked@plt+0x4898>
   16a38:	cmp	sl, #0
   16a3c:	beq	16ae8 <putc_unlocked@plt+0x4930>
   16a40:	strb	sl, [lr], #1
   16a44:	add	r9, r9, #1
   16a48:	add	ip, ip, #1
   16a4c:	mov	r6, #0
   16a50:	mov	r5, r7
   16a54:	cmp	r6, #5
   16a58:	bcc	16674 <putc_unlocked@plt+0x44bc>
   16a5c:	b	16ae8 <putc_unlocked@plt+0x4930>
   16a60:	mov	sl, r4
   16a64:	b	16ac4 <putc_unlocked@plt+0x490c>
   16a68:	mov	r6, #6
   16a6c:	mov	r5, r7
   16a70:	add	ip, ip, #1
   16a74:	cmp	r6, #5
   16a78:	bcc	16674 <putc_unlocked@plt+0x44bc>
   16a7c:	b	16ae8 <putc_unlocked@plt+0x4930>
   16a80:	mov	sl, #32
   16a84:	b	16ac4 <putc_unlocked@plt+0x490c>
   16a88:	mov	sl, #8
   16a8c:	b	16ac4 <putc_unlocked@plt+0x490c>
   16a90:	mov	sl, #27
   16a94:	b	16ac4 <putc_unlocked@plt+0x490c>
   16a98:	mov	sl, #12
   16a9c:	b	16ac4 <putc_unlocked@plt+0x490c>
   16aa0:	mov	sl, #10
   16aa4:	b	16ac4 <putc_unlocked@plt+0x490c>
   16aa8:	mov	sl, #9
   16aac:	b	16ac4 <putc_unlocked@plt+0x490c>
   16ab0:	mov	sl, #127	; 0x7f
   16ab4:	b	16ac4 <putc_unlocked@plt+0x490c>
   16ab8:	mov	sl, #13
   16abc:	b	16ac4 <putc_unlocked@plt+0x490c>
   16ac0:	mov	sl, #11
   16ac4:	strb	sl, [lr], #1
   16ac8:	add	r9, r9, #1
   16acc:	mov	r6, #0
   16ad0:	mov	r5, sl
   16ad4:	add	ip, ip, #1
   16ad8:	cmp	r6, #5
   16adc:	bcc	16674 <putc_unlocked@plt+0x44bc>
   16ae0:	b	16ae8 <putc_unlocked@plt+0x4930>
   16ae4:	mov	r6, #6
   16ae8:	str	lr, [r0]
   16aec:	str	ip, [r1]
   16af0:	str	r9, [r3]
   16af4:	subs	r0, r6, #6
   16af8:	movwne	r0, #1
   16afc:	sub	sp, fp, #28
   16b00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16b04:	bl	1214c <abort@plt>
   16b08:	push	{r4, r5, r6, r7, fp, lr}
   16b0c:	add	fp, sp, #16
   16b10:	mov	r4, r2
   16b14:	mov	r5, r1
   16b18:	mov	r6, r0
   16b1c:	bl	11fe4 <__errno_location@plt>
   16b20:	ldr	r7, [r0]
   16b24:	mov	r0, #4
   16b28:	mov	r1, r4
   16b2c:	bl	21a58 <_obstack_memory_used@@Base+0x1678>
   16b30:	mov	r3, r0
   16b34:	mov	r0, #0
   16b38:	mov	r1, r7
   16b3c:	mov	r2, r5
   16b40:	bl	11eb8 <error@plt>
   16b44:	mov	r0, r6
   16b48:	pop	{r4, r5, r6, r7, fp, lr}
   16b4c:	b	16c20 <putc_unlocked@plt+0x4a68>
   16b50:	push	{fp, lr}
   16b54:	mov	fp, sp
   16b58:	sub	sp, sp, #8
   16b5c:	mov	r2, r1
   16b60:	mov	r1, #256	; 0x100
   16b64:	str	r1, [sp]
   16b68:	movw	r1, #27197	; 0x6a3d
   16b6c:	movt	r1, #2
   16b70:	mov	r3, #4096	; 0x1000
   16b74:	bl	17068 <putc_unlocked@plt+0x4eb0>
   16b78:	mov	sp, fp
   16b7c:	pop	{fp, pc}
   16b80:	push	{fp, lr}
   16b84:	mov	fp, sp
   16b88:	sub	sp, sp, #8
   16b8c:	mov	r2, r1
   16b90:	mov	r1, r0
   16b94:	mov	r0, #256	; 0x100
   16b98:	str	r0, [sp]
   16b9c:	mvn	r0, #99	; 0x63
   16ba0:	mov	r3, #0
   16ba4:	bl	17068 <putc_unlocked@plt+0x4eb0>
   16ba8:	mov	sp, fp
   16bac:	pop	{fp, pc}
   16bb0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16bb4:	add	fp, sp, #24
   16bb8:	mov	r8, r3
   16bbc:	mov	r6, r2
   16bc0:	mov	r7, r1
   16bc4:	mov	r5, r0
   16bc8:	mov	r0, #16
   16bcc:	bl	22db0 <_obstack_memory_used@@Base+0x29d0>
   16bd0:	mov	r4, r0
   16bd4:	stm	r0, {r6, r8}
   16bd8:	str	r5, [r0, #8]
   16bdc:	str	r7, [r0, #12]
   16be0:	movw	r0, #37732	; 0x9364
   16be4:	movt	r0, #3
   16be8:	ldr	r0, [r0]
   16bec:	mov	r1, r4
   16bf0:	bl	1ca98 <putc_unlocked@plt+0xa8e0>
   16bf4:	cmp	r0, #0
   16bf8:	beq	16c1c <putc_unlocked@plt+0x4a64>
   16bfc:	mov	r5, r0
   16c00:	cmp	r0, r4
   16c04:	beq	16c10 <putc_unlocked@plt+0x4a58>
   16c08:	mov	r0, r4
   16c0c:	bl	1bcc8 <putc_unlocked@plt+0x9b10>
   16c10:	subs	r0, r5, r4
   16c14:	movwne	r0, #1
   16c18:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16c1c:	bl	23138 <_obstack_memory_used@@Base+0x2d58>
   16c20:	mov	r1, #2
   16c24:	cmp	r0, #0
   16c28:	movw	r0, #37680	; 0x9330
   16c2c:	movt	r0, #3
   16c30:	bne	16c44 <putc_unlocked@plt+0x4a8c>
   16c34:	ldr	r1, [r0]
   16c38:	cmp	r1, #0
   16c3c:	bxne	lr
   16c40:	mov	r1, #1
   16c44:	str	r1, [r0]
   16c48:	bx	lr
   16c4c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16c50:	add	fp, sp, #24
   16c54:	mov	r5, r3
   16c58:	mov	r7, r2
   16c5c:	mov	r8, r1
   16c60:	mov	r6, r0
   16c64:	movw	r4, #37736	; 0x9368
   16c68:	movt	r4, #3
   16c6c:	ldr	r0, [r4, #12]
   16c70:	ldr	r1, [r4, #16]
   16c74:	sub	r0, r1, r0
   16c78:	cmp	r0, #15
   16c7c:	bhi	16c90 <putc_unlocked@plt+0x4ad8>
   16c80:	movw	r0, #37736	; 0x9368
   16c84:	movt	r0, #3
   16c88:	mov	r1, #16
   16c8c:	bl	201cc <_obstack_newchunk@@Base>
   16c90:	ldr	r0, [r4, #12]
   16c94:	add	r1, r0, #16
   16c98:	str	r1, [r4, #12]
   16c9c:	str	r7, [r0]
   16ca0:	stmib	r0, {r5, r6, r8}
   16ca4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16ca8:	movw	r0, #37792	; 0x93a0
   16cac:	movt	r0, #3
   16cb0:	ldrb	r0, [r0]
   16cb4:	cmp	r0, #0
   16cb8:	bxeq	lr
   16cbc:	movw	r0, #27168	; 0x6a20
   16cc0:	movt	r0, #2
   16cc4:	b	16eb4 <putc_unlocked@plt+0x4cfc>
   16cc8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16ccc:	add	fp, sp, #28
   16cd0:	sub	sp, sp, #28
   16cd4:	sub	sp, sp, #8192	; 0x2000
   16cd8:	mov	r7, r3
   16cdc:	mov	r3, r2
   16ce0:	mov	r2, r1
   16ce4:	mov	r5, r0
   16ce8:	add	r6, sp, #24
   16cec:	str	r6, [sp, #20]
   16cf0:	add	r0, sp, #19
   16cf4:	mov	r1, #0
   16cf8:	str	r1, [sp]
   16cfc:	str	r0, [sp, #4]
   16d00:	add	r0, sp, #20
   16d04:	mov	r1, r5
   16d08:	bl	17210 <putc_unlocked@plt+0x5058>
   16d0c:	mov	r9, r0
   16d10:	ldrb	sl, [sp, #19]
   16d14:	cmp	sl, #0
   16d18:	ldrne	r0, [fp, #8]
   16d1c:	cmpne	r0, #0
   16d20:	movne	r0, #32
   16d24:	blne	15360 <putc_unlocked@plt+0x31a8>
   16d28:	ldr	r4, [fp, #16]
   16d2c:	cmp	r7, #0
   16d30:	movne	r0, r7
   16d34:	blne	17724 <putc_unlocked@plt+0x556c>
   16d38:	ldr	r0, [fp, #12]
   16d3c:	cmp	r4, #0
   16d40:	beq	16e10 <putc_unlocked@plt+0x4c58>
   16d44:	movw	r0, #38369	; 0x95e1
   16d48:	movt	r0, #3
   16d4c:	ldrb	r0, [r0]
   16d50:	mov	r8, #0
   16d54:	cmp	r0, #0
   16d58:	str	r5, [sp, #12]
   16d5c:	mov	r5, r6
   16d60:	beq	16d90 <putc_unlocked@plt+0x4bd8>
   16d64:	cmp	sl, #0
   16d68:	bne	16d90 <putc_unlocked@plt+0x4bd8>
   16d6c:	movw	r0, #41465	; 0xa1f9
   16d70:	movt	r0, #3
   16d74:	ldrb	r0, [r0]
   16d78:	cmp	r0, #0
   16d7c:	beq	16d90 <putc_unlocked@plt+0x4bd8>
   16d80:	ldr	r0, [sp, #20]
   16d84:	ldrb	r0, [r0]
   16d88:	bl	12188 <putchar_unlocked@plt>
   16d8c:	mov	r8, #1
   16d90:	movw	r0, #37888	; 0x9400
   16d94:	movt	r0, #3
   16d98:	ldr	r0, [r0]
   16d9c:	mov	r1, #0
   16da0:	bl	1776c <putc_unlocked@plt+0x55b4>
   16da4:	mov	r6, r0
   16da8:	mov	r7, r4
   16dac:	mov	r0, r4
   16db0:	mov	r1, #1
   16db4:	bl	1776c <putc_unlocked@plt+0x55b4>
   16db8:	mov	r4, r0
   16dbc:	ldrb	r0, [r0]
   16dc0:	str	r4, [sp]
   16dc4:	movw	r1, #27197	; 0x6a3d
   16dc8:	movt	r1, #2
   16dcc:	movw	r3, #18016	; 0x4660
   16dd0:	movt	r3, #2
   16dd4:	cmp	r0, #47	; 0x2f
   16dd8:	moveq	r3, r1
   16ddc:	movw	r1, #27171	; 0x6a23
   16de0:	movt	r1, #2
   16de4:	mov	r0, #1
   16de8:	mov	r2, r6
   16dec:	bl	12014 <__printf_chk@plt>
   16df0:	mov	r0, r6
   16df4:	bl	1bcc8 <putc_unlocked@plt+0x9b10>
   16df8:	mov	r0, r4
   16dfc:	bl	1bcc8 <putc_unlocked@plt+0x9b10>
   16e00:	mov	r6, r5
   16e04:	ldr	r5, [sp, #12]
   16e08:	ldr	r0, [fp, #12]
   16e0c:	b	16e18 <putc_unlocked@plt+0x4c60>
   16e10:	mov	r7, r4
   16e14:	mov	r8, #0
   16e18:	cmp	r0, #0
   16e1c:	blne	17830 <putc_unlocked@plt+0x5678>
   16e20:	sub	r2, r9, r8, lsl #1
   16e24:	ldr	r0, [sp, #20]
   16e28:	add	r0, r0, r8
   16e2c:	movw	r4, #37668	; 0x9324
   16e30:	movt	r4, #3
   16e34:	ldr	r3, [r4]
   16e38:	mov	r1, #1
   16e3c:	bl	11d98 <fwrite_unlocked@plt>
   16e40:	movw	r0, #38176	; 0x9520
   16e44:	movt	r0, #3
   16e48:	ldrd	r2, [r0]
   16e4c:	adds	r2, r2, r9
   16e50:	adc	r3, r3, #0
   16e54:	strd	r2, [r0]
   16e58:	ldr	r0, [fp, #12]
   16e5c:	cmp	r0, #0
   16e60:	blne	17830 <putc_unlocked@plt+0x5678>
   16e64:	cmp	r7, #0
   16e68:	beq	16e94 <putc_unlocked@plt+0x4cdc>
   16e6c:	ldr	r1, [r4]
   16e70:	movw	r0, #27191	; 0x6a37
   16e74:	movt	r0, #2
   16e78:	bl	11c84 <fputs_unlocked@plt>
   16e7c:	cmp	r8, #0
   16e80:	beq	16e94 <putc_unlocked@plt+0x4cdc>
   16e84:	ldr	r0, [sp, #20]
   16e88:	add	r0, r0, r9
   16e8c:	ldrb	r0, [r0, #-1]
   16e90:	bl	12188 <putchar_unlocked@plt>
   16e94:	ldr	r0, [sp, #20]
   16e98:	cmp	r0, r6
   16e9c:	cmpne	r0, r5
   16ea0:	beq	16ea8 <putc_unlocked@plt+0x4cf0>
   16ea4:	bl	1bcc8 <putc_unlocked@plt+0x9b10>
   16ea8:	add	r0, r9, sl
   16eac:	sub	sp, fp, #28
   16eb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16eb4:	push	{r4, sl, fp, lr}
   16eb8:	add	fp, sp, #8
   16ebc:	mov	r4, r0
   16ec0:	bl	11fc0 <strlen@plt>
   16ec4:	mov	r1, r0
   16ec8:	mov	r0, r4
   16ecc:	pop	{r4, sl, fp, lr}
   16ed0:	b	1702c <putc_unlocked@plt+0x4e74>
   16ed4:	push	{r4, sl, fp, lr}
   16ed8:	add	fp, sp, #8
   16edc:	mov	r4, r0
   16ee0:	movw	r0, #38312	; 0x95a8
   16ee4:	movt	r0, #3
   16ee8:	ldr	r0, [r0]
   16eec:	cmp	r0, #2
   16ef0:	beq	16f50 <putc_unlocked@plt+0x4d98>
   16ef4:	ldrb	r1, [r4]
   16ef8:	cmp	r1, #46	; 0x2e
   16efc:	bne	16f24 <putc_unlocked@plt+0x4d6c>
   16f00:	cmp	r0, #0
   16f04:	beq	16f48 <putc_unlocked@plt+0x4d90>
   16f08:	ldrb	r1, [r4, #1]
   16f0c:	mov	r2, #1
   16f10:	cmp	r1, #46	; 0x2e
   16f14:	movweq	r2, #2
   16f18:	ldrb	r1, [r4, r2]
   16f1c:	cmp	r1, #0
   16f20:	beq	16f48 <putc_unlocked@plt+0x4d90>
   16f24:	cmp	r0, #0
   16f28:	bne	16f50 <putc_unlocked@plt+0x4d98>
   16f2c:	movw	r0, #38352	; 0x95d0
   16f30:	movt	r0, #3
   16f34:	ldr	r0, [r0]
   16f38:	mov	r1, r4
   16f3c:	bl	17898 <putc_unlocked@plt+0x56e0>
   16f40:	cmp	r0, #0
   16f44:	beq	16f50 <putc_unlocked@plt+0x4d98>
   16f48:	mov	r0, #1
   16f4c:	pop	{r4, sl, fp, pc}
   16f50:	movw	r0, #38376	; 0x95e8
   16f54:	movt	r0, #3
   16f58:	ldr	r0, [r0]
   16f5c:	mov	r1, r4
   16f60:	pop	{r4, sl, fp, lr}
   16f64:	b	17898 <putc_unlocked@plt+0x56e0>
   16f68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16f6c:	add	fp, sp, #28
   16f70:	sub	sp, sp, #132	; 0x84
   16f74:	movw	r7, #37912	; 0x9418
   16f78:	movt	r7, #3
   16f7c:	movw	r4, #37908	; 0x9414
   16f80:	movt	r4, #3
   16f84:	movw	r9, #37904	; 0x9410
   16f88:	movt	r9, #3
   16f8c:	movw	sl, #37668	; 0x9324
   16f90:	movt	sl, #3
   16f94:	movw	r8, #38184	; 0x9528
   16f98:	movt	r8, #3
   16f9c:	add	r5, sp, #4
   16fa0:	b	16fc8 <putc_unlocked@plt+0x4e10>
   16fa4:	mov	r0, r6
   16fa8:	mov	r1, #0
   16fac:	bl	11d8c <signal@plt>
   16fb0:	mov	r0, r6
   16fb4:	bl	11ca8 <raise@plt>
   16fb8:	mov	r0, #2
   16fbc:	mov	r1, r5
   16fc0:	mov	r2, #0
   16fc4:	bl	11d20 <sigprocmask@plt>
   16fc8:	ldr	r0, [r7]
   16fcc:	cmp	r0, #0
   16fd0:	bne	16fe0 <putc_unlocked@plt+0x4e28>
   16fd4:	ldr	r0, [r4]
   16fd8:	cmp	r0, #0
   16fdc:	beq	17024 <putc_unlocked@plt+0x4e6c>
   16fe0:	ldrb	r0, [r9]
   16fe4:	cmp	r0, #1
   16fe8:	bleq	158f4 <putc_unlocked@plt+0x373c>
   16fec:	ldr	r0, [sl]
   16ff0:	bl	11e10 <fflush_unlocked@plt>
   16ff4:	mov	r0, #0
   16ff8:	mov	r1, r8
   16ffc:	mov	r2, r5
   17000:	bl	11d20 <sigprocmask@plt>
   17004:	ldr	r6, [r7]
   17008:	ldr	r0, [r4]
   1700c:	cmp	r0, #0
   17010:	beq	16fa4 <putc_unlocked@plt+0x4dec>
   17014:	sub	r0, r0, #1
   17018:	str	r0, [r4]
   1701c:	mov	r6, #19
   17020:	b	16fb0 <putc_unlocked@plt+0x4df8>
   17024:	sub	sp, fp, #28
   17028:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1702c:	push	{r4, r5, fp, lr}
   17030:	add	fp, sp, #8
   17034:	mov	r2, r1
   17038:	movw	r1, #38176	; 0x9520
   1703c:	movt	r1, #3
   17040:	ldrd	r4, [r1]
   17044:	adds	r4, r4, r2
   17048:	adc	r5, r5, #0
   1704c:	strd	r4, [r1]
   17050:	movw	r1, #37668	; 0x9324
   17054:	movt	r1, #3
   17058:	ldr	r3, [r1]
   1705c:	mov	r1, #1
   17060:	pop	{r4, r5, fp, lr}
   17064:	b	11d98 <fwrite_unlocked@plt>
   17068:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1706c:	add	fp, sp, #24
   17070:	sub	sp, sp, #272	; 0x110
   17074:	mov	r5, r2
   17078:	add	r7, sp, #16
   1707c:	str	r7, [sp]
   17080:	ldr	r6, [fp, #8]
   17084:	mov	r2, r3
   17088:	mov	r3, r6
   1708c:	bl	12068 <statx@plt>
   17090:	mov	r4, r0
   17094:	cmp	r0, #0
   17098:	bmi	170fc <putc_unlocked@plt+0x4f44>
   1709c:	add	r0, sp, #16
   170a0:	mov	r1, r5
   170a4:	bl	17108 <putc_unlocked@plt+0x4f50>
   170a8:	tst	r6, #2048	; 0x800
   170ac:	beq	170fc <putc_unlocked@plt+0x4f44>
   170b0:	ldrb	r0, [sp, #17]
   170b4:	tst	r0, #8
   170b8:	bne	170cc <putc_unlocked@plt+0x4f14>
   170bc:	mvn	r0, #0
   170c0:	str	r0, [r5, #80]	; 0x50
   170c4:	str	r0, [r5, #84]	; 0x54
   170c8:	b	170fc <putc_unlocked@plt+0x4f44>
   170cc:	add	r0, r7, #80	; 0x50
   170d0:	add	r5, r5, #80	; 0x50
   170d4:	ldm	r0, {r2, r3}
   170d8:	ldr	r1, [r0, #8]
   170dc:	ldr	r0, [r0, #12]
   170e0:	str	r1, [sp]
   170e4:	str	r0, [sp, #4]
   170e8:	add	r0, sp, #8
   170ec:	bl	17200 <putc_unlocked@plt+0x5048>
   170f0:	ldr	r0, [sp, #8]
   170f4:	ldr	r1, [sp, #12]
   170f8:	strd	r0, [r5]
   170fc:	mov	r0, r4
   17100:	sub	sp, fp, #24
   17104:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17108:	push	{r4, r5, fp, lr}
   1710c:	add	fp, sp, #8
   17110:	sub	sp, sp, #16
   17114:	mov	r4, r1
   17118:	mov	r5, r0
   1711c:	ldrd	r0, [r0, #136]	; 0x88
   17120:	bl	11ce4 <gnu_dev_makedev@plt>
   17124:	strd	r0, [r4]
   17128:	ldrd	r0, [r5, #32]
   1712c:	strd	r0, [r4, #96]	; 0x60
   17130:	ldrh	r0, [r5, #28]
   17134:	str	r0, [r4, #16]
   17138:	ldr	r0, [r5, #16]
   1713c:	str	r0, [r4, #20]
   17140:	ldr	r0, [r5, #20]
   17144:	str	r0, [r4, #24]
   17148:	ldr	r0, [r5, #24]
   1714c:	str	r0, [r4, #28]
   17150:	ldrd	r0, [r5, #128]	; 0x80
   17154:	bl	11ce4 <gnu_dev_makedev@plt>
   17158:	strd	r0, [r4, #32]
   1715c:	ldr	r0, [r5, #40]	; 0x28
   17160:	ldr	r1, [r5, #44]	; 0x2c
   17164:	str	r0, [r4, #48]	; 0x30
   17168:	str	r1, [r4, #52]	; 0x34
   1716c:	ldr	r0, [r5, #4]
   17170:	str	r0, [r4, #56]	; 0x38
   17174:	ldr	r0, [r5, #48]	; 0x30
   17178:	ldr	r1, [r5, #52]	; 0x34
   1717c:	strd	r0, [r4, #64]	; 0x40
   17180:	ldr	r2, [r5, #64]	; 0x40
   17184:	ldr	r3, [r5, #68]	; 0x44
   17188:	ldr	r0, [r5, #72]	; 0x48
   1718c:	ldr	r1, [r5, #76]	; 0x4c
   17190:	stm	sp, {r0, r1}
   17194:	add	r0, sp, #8
   17198:	bl	17200 <putc_unlocked@plt+0x5048>
   1719c:	ldr	r0, [sp, #8]
   171a0:	ldr	r1, [sp, #12]
   171a4:	strd	r0, [r4, #72]	; 0x48
   171a8:	ldr	r2, [r5, #112]	; 0x70
   171ac:	ldr	r3, [r5, #116]	; 0x74
   171b0:	ldr	r0, [r5, #120]	; 0x78
   171b4:	ldr	r1, [r5, #124]	; 0x7c
   171b8:	stm	sp, {r0, r1}
   171bc:	add	r0, sp, #8
   171c0:	bl	17200 <putc_unlocked@plt+0x5048>
   171c4:	ldr	r0, [sp, #8]
   171c8:	ldr	r1, [sp, #12]
   171cc:	strd	r0, [r4, #80]	; 0x50
   171d0:	ldr	r2, [r5, #96]	; 0x60
   171d4:	ldr	r3, [r5, #100]	; 0x64
   171d8:	ldr	r0, [r5, #104]	; 0x68
   171dc:	ldr	r1, [r5, #108]	; 0x6c
   171e0:	stm	sp, {r0, r1}
   171e4:	add	r0, sp, #8
   171e8:	bl	17200 <putc_unlocked@plt+0x5048>
   171ec:	ldr	r0, [sp, #8]
   171f0:	ldr	r1, [sp, #12]
   171f4:	strd	r0, [r4, #88]	; 0x58
   171f8:	sub	sp, fp, #8
   171fc:	pop	{r4, r5, fp, pc}
   17200:	str	r2, [r0]
   17204:	ldr	r1, [sp]
   17208:	str	r1, [r0, #4]
   1720c:	bx	lr
   17210:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17214:	add	fp, sp, #28
   17218:	sub	sp, sp, #28
   1721c:	mov	r6, r3
   17220:	mov	r7, r2
   17224:	mov	r5, r1
   17228:	mov	sl, r0
   1722c:	ldr	r4, [r0]
   17230:	mov	r0, r2
   17234:	bl	20558 <_obstack_memory_used@@Base+0x178>
   17238:	movw	r1, #38368	; 0x95e0
   1723c:	movt	r1, #3
   17240:	ldrb	r1, [r1]
   17244:	cmp	r1, #0
   17248:	beq	172ec <putc_unlocked@plt+0x5134>
   1724c:	sub	r1, r0, #1
   17250:	mov	r2, #0
   17254:	cmp	r1, #2
   17258:	movwcc	r2, #1
   1725c:	clz	r0, r0
   17260:	lsr	r0, r0, #5
   17264:	orr	r8, r0, r2
   17268:	cmp	r6, #0
   1726c:	beq	172f8 <putc_unlocked@plt+0x5140>
   17270:	str	r7, [sp]
   17274:	mov	r0, r4
   17278:	mov	r1, #8192	; 0x2000
   1727c:	mov	r2, r5
   17280:	mvn	r3, #0
   17284:	bl	2061c <_obstack_memory_used@@Base+0x23c>
   17288:	mov	r9, r0
   1728c:	cmp	r0, #8192	; 0x2000
   17290:	bcc	172b8 <putc_unlocked@plt+0x5100>
   17294:	add	r4, r9, #1
   17298:	mov	r0, r4
   1729c:	bl	22db0 <_obstack_memory_used@@Base+0x29d0>
   172a0:	str	r7, [sp]
   172a4:	mov	r1, r4
   172a8:	mov	r4, r0
   172ac:	mov	r2, r5
   172b0:	mvn	r3, #0
   172b4:	bl	2061c <_obstack_memory_used@@Base+0x23c>
   172b8:	ldrb	r0, [r4]
   172bc:	ldrb	r1, [r5]
   172c0:	mov	r7, #1
   172c4:	cmp	r1, r0
   172c8:	ldr	r6, [fp, #8]
   172cc:	bne	172e0 <putc_unlocked@plt+0x5128>
   172d0:	mov	r0, r5
   172d4:	bl	11fc0 <strlen@plt>
   172d8:	subs	r7, r0, r9
   172dc:	movwne	r7, #1
   172e0:	cmp	r8, #0
   172e4:	bne	1733c <putc_unlocked@plt+0x5184>
   172e8:	b	17630 <putc_unlocked@plt+0x5478>
   172ec:	mov	r8, #0
   172f0:	cmp	r6, #0
   172f4:	bne	17270 <putc_unlocked@plt+0x50b8>
   172f8:	mov	r0, r5
   172fc:	bl	11fc0 <strlen@plt>
   17300:	mov	r9, r0
   17304:	mov	r7, #0
   17308:	cmp	r8, #0
   1730c:	beq	17628 <putc_unlocked@plt+0x5470>
   17310:	cmp	r9, #8192	; 0x2000
   17314:	bcc	17324 <putc_unlocked@plt+0x516c>
   17318:	add	r0, r9, #1
   1731c:	bl	22db0 <_obstack_memory_used@@Base+0x29d0>
   17320:	mov	r4, r0
   17324:	add	r2, r9, #1
   17328:	mov	r0, r4
   1732c:	mov	r1, r5
   17330:	bl	11d74 <memcpy@plt>
   17334:	mov	r7, #0
   17338:	ldr	r6, [fp, #8]
   1733c:	str	sl, [sp, #4]
   17340:	add	sl, r4, r9
   17344:	bl	11e70 <__ctype_get_mb_cur_max@plt>
   17348:	cmp	r0, #1
   1734c:	str	r7, [sp, #8]
   17350:	bls	175dc <putc_unlocked@plt+0x5424>
   17354:	cmp	r9, #1
   17358:	blt	176b0 <putc_unlocked@plt+0x54f8>
   1735c:	mov	r3, #0
   17360:	add	r9, sp, #16
   17364:	mov	r7, #0
   17368:	mov	r8, r4
   1736c:	mov	r5, r4
   17370:	ldrb	r0, [r5]
   17374:	sub	r1, r0, #32
   17378:	cmp	r1, #94	; 0x5e
   1737c:	bhi	1751c <putc_unlocked@plt+0x5364>
   17380:	add	r2, pc, #0
   17384:	ldr	pc, [r2, r1, lsl #2]
   17388:	andeq	r7, r1, r4, lsl #10
   1738c:	andeq	r7, r1, r4, lsl #10
   17390:	andeq	r7, r1, r4, lsl #10
   17394:	andeq	r7, r1, r4, lsl #10
   17398:	andeq	r7, r1, ip, lsl r5
   1739c:	andeq	r7, r1, r4, lsl #10
   173a0:	andeq	r7, r1, r4, lsl #10
   173a4:	andeq	r7, r1, r4, lsl #10
   173a8:	andeq	r7, r1, r4, lsl #10
   173ac:	andeq	r7, r1, r4, lsl #10
   173b0:	andeq	r7, r1, r4, lsl #10
   173b4:	andeq	r7, r1, r4, lsl #10
   173b8:	andeq	r7, r1, r4, lsl #10
   173bc:	andeq	r7, r1, r4, lsl #10
   173c0:	andeq	r7, r1, r4, lsl #10
   173c4:	andeq	r7, r1, r4, lsl #10
   173c8:	andeq	r7, r1, r4, lsl #10
   173cc:	andeq	r7, r1, r4, lsl #10
   173d0:	andeq	r7, r1, r4, lsl #10
   173d4:	andeq	r7, r1, r4, lsl #10
   173d8:	andeq	r7, r1, r4, lsl #10
   173dc:	andeq	r7, r1, r4, lsl #10
   173e0:	andeq	r7, r1, r4, lsl #10
   173e4:	andeq	r7, r1, r4, lsl #10
   173e8:	andeq	r7, r1, r4, lsl #10
   173ec:	andeq	r7, r1, r4, lsl #10
   173f0:	andeq	r7, r1, r4, lsl #10
   173f4:	andeq	r7, r1, r4, lsl #10
   173f8:	andeq	r7, r1, r4, lsl #10
   173fc:	andeq	r7, r1, r4, lsl #10
   17400:	andeq	r7, r1, r4, lsl #10
   17404:	andeq	r7, r1, r4, lsl #10
   17408:	andeq	r7, r1, ip, lsl r5
   1740c:	andeq	r7, r1, r4, lsl #10
   17410:	andeq	r7, r1, r4, lsl #10
   17414:	andeq	r7, r1, r4, lsl #10
   17418:	andeq	r7, r1, r4, lsl #10
   1741c:	andeq	r7, r1, r4, lsl #10
   17420:	andeq	r7, r1, r4, lsl #10
   17424:	andeq	r7, r1, r4, lsl #10
   17428:	andeq	r7, r1, r4, lsl #10
   1742c:	andeq	r7, r1, r4, lsl #10
   17430:	andeq	r7, r1, r4, lsl #10
   17434:	andeq	r7, r1, r4, lsl #10
   17438:	andeq	r7, r1, r4, lsl #10
   1743c:	andeq	r7, r1, r4, lsl #10
   17440:	andeq	r7, r1, r4, lsl #10
   17444:	andeq	r7, r1, r4, lsl #10
   17448:	andeq	r7, r1, r4, lsl #10
   1744c:	andeq	r7, r1, r4, lsl #10
   17450:	andeq	r7, r1, r4, lsl #10
   17454:	andeq	r7, r1, r4, lsl #10
   17458:	andeq	r7, r1, r4, lsl #10
   1745c:	andeq	r7, r1, r4, lsl #10
   17460:	andeq	r7, r1, r4, lsl #10
   17464:	andeq	r7, r1, r4, lsl #10
   17468:	andeq	r7, r1, r4, lsl #10
   1746c:	andeq	r7, r1, r4, lsl #10
   17470:	andeq	r7, r1, r4, lsl #10
   17474:	andeq	r7, r1, r4, lsl #10
   17478:	andeq	r7, r1, r4, lsl #10
   1747c:	andeq	r7, r1, r4, lsl #10
   17480:	andeq	r7, r1, r4, lsl #10
   17484:	andeq	r7, r1, r4, lsl #10
   17488:	andeq	r7, r1, ip, lsl r5
   1748c:	andeq	r7, r1, r4, lsl #10
   17490:	andeq	r7, r1, r4, lsl #10
   17494:	andeq	r7, r1, r4, lsl #10
   17498:	andeq	r7, r1, r4, lsl #10
   1749c:	andeq	r7, r1, r4, lsl #10
   174a0:	andeq	r7, r1, r4, lsl #10
   174a4:	andeq	r7, r1, r4, lsl #10
   174a8:	andeq	r7, r1, r4, lsl #10
   174ac:	andeq	r7, r1, r4, lsl #10
   174b0:	andeq	r7, r1, r4, lsl #10
   174b4:	andeq	r7, r1, r4, lsl #10
   174b8:	andeq	r7, r1, r4, lsl #10
   174bc:	andeq	r7, r1, r4, lsl #10
   174c0:	andeq	r7, r1, r4, lsl #10
   174c4:	andeq	r7, r1, r4, lsl #10
   174c8:	andeq	r7, r1, r4, lsl #10
   174cc:	andeq	r7, r1, r4, lsl #10
   174d0:	andeq	r7, r1, r4, lsl #10
   174d4:	andeq	r7, r1, r4, lsl #10
   174d8:	andeq	r7, r1, r4, lsl #10
   174dc:	andeq	r7, r1, r4, lsl #10
   174e0:	andeq	r7, r1, r4, lsl #10
   174e4:	andeq	r7, r1, r4, lsl #10
   174e8:	andeq	r7, r1, r4, lsl #10
   174ec:	andeq	r7, r1, r4, lsl #10
   174f0:	andeq	r7, r1, r4, lsl #10
   174f4:	andeq	r7, r1, r4, lsl #10
   174f8:	andeq	r7, r1, r4, lsl #10
   174fc:	andeq	r7, r1, r4, lsl #10
   17500:	andeq	r7, r1, r4, lsl #10
   17504:	strb	r0, [r8], #1
   17508:	add	r7, r7, #1
   1750c:	add	r5, r5, #1
   17510:	cmp	r5, sl
   17514:	bcc	17370 <putc_unlocked@plt+0x51b8>
   17518:	b	176b8 <putc_unlocked@plt+0x5500>
   1751c:	str	r3, [sp, #20]
   17520:	str	r3, [sp, #16]
   17524:	mov	r6, r9
   17528:	b	17554 <putc_unlocked@plt+0x539c>
   1752c:	mov	r0, #63	; 0x3f
   17530:	strb	r0, [r8], #1
   17534:	add	r5, r5, r6
   17538:	mov	r0, #1
   1753c:	add	r7, r0, r7
   17540:	mov	r6, r9
   17544:	mov	r0, r9
   17548:	bl	11d80 <mbsinit@plt>
   1754c:	cmp	r0, #0
   17550:	bne	175c8 <putc_unlocked@plt+0x5410>
   17554:	sub	r2, sl, r5
   17558:	add	r0, sp, #12
   1755c:	mov	r1, r5
   17560:	mov	r3, r6
   17564:	bl	1dd0c <putc_unlocked@plt+0xbb54>
   17568:	cmp	r0, #0
   1756c:	beq	17588 <putc_unlocked@plt+0x53d0>
   17570:	mov	r6, r0
   17574:	cmn	r0, #2
   17578:	beq	175b0 <putc_unlocked@plt+0x53f8>
   1757c:	cmn	r6, #1
   17580:	bne	1758c <putc_unlocked@plt+0x53d4>
   17584:	b	175b8 <putc_unlocked@plt+0x5400>
   17588:	mov	r6, #1
   1758c:	ldr	r0, [sp, #12]
   17590:	bl	11d14 <wcwidth@plt>
   17594:	cmp	r0, #0
   17598:	bmi	1752c <putc_unlocked@plt+0x5374>
   1759c:	ldrb	r1, [r5], #1
   175a0:	strb	r1, [r8], #1
   175a4:	subs	r6, r6, #1
   175a8:	bne	1759c <putc_unlocked@plt+0x53e4>
   175ac:	b	1753c <putc_unlocked@plt+0x5384>
   175b0:	mov	r5, sl
   175b4:	b	175bc <putc_unlocked@plt+0x5404>
   175b8:	add	r5, r5, #1
   175bc:	mov	r0, #63	; 0x3f
   175c0:	strb	r0, [r8], #1
   175c4:	add	r7, r7, #1
   175c8:	ldr	r6, [fp, #8]
   175cc:	mov	r3, #0
   175d0:	cmp	r5, sl
   175d4:	bcc	17370 <putc_unlocked@plt+0x51b8>
   175d8:	b	176b8 <putc_unlocked@plt+0x5500>
   175dc:	cmp	r9, #1
   175e0:	blt	176c4 <putc_unlocked@plt+0x550c>
   175e4:	bl	11f78 <__ctype_b_loc@plt>
   175e8:	mov	r5, r0
   175ec:	mov	r7, #63	; 0x3f
   175f0:	mov	r8, r4
   175f4:	ldr	r6, [r5]
   175f8:	ldrb	r0, [r4]
   175fc:	bl	16584 <putc_unlocked@plt+0x43cc>
   17600:	add	r0, r6, r0, lsl #1
   17604:	ldrb	r0, [r0, #1]
   17608:	tst	r0, #64	; 0x40
   1760c:	strbeq	r7, [r4]
   17610:	add	r4, r4, #1
   17614:	cmp	r4, sl
   17618:	bcc	175f4 <putc_unlocked@plt+0x543c>
   1761c:	mov	r7, r9
   17620:	ldr	sl, [sp, #4]
   17624:	b	176a4 <putc_unlocked@plt+0x54ec>
   17628:	mov	r4, r5
   1762c:	ldr	r6, [fp, #8]
   17630:	cmp	r6, #0
   17634:	str	r7, [sp, #8]
   17638:	beq	17660 <putc_unlocked@plt+0x54a8>
   1763c:	bl	11e70 <__ctype_get_mb_cur_max@plt>
   17640:	cmp	r0, #2
   17644:	bcc	17664 <putc_unlocked@plt+0x54ac>
   17648:	mov	r0, r4
   1764c:	mov	r1, r9
   17650:	mov	r2, #0
   17654:	bl	1e20c <putc_unlocked@plt+0xc054>
   17658:	mov	r7, r0
   1765c:	b	176d4 <putc_unlocked@plt+0x551c>
   17660:	b	176d4 <putc_unlocked@plt+0x551c>
   17664:	cmp	r9, #1
   17668:	blt	176d0 <putc_unlocked@plt+0x5518>
   1766c:	add	r5, r4, r9
   17670:	bl	11f78 <__ctype_b_loc@plt>
   17674:	mov	r6, r4
   17678:	ldr	r4, [r0]
   1767c:	mov	r7, #0
   17680:	mov	r8, r6
   17684:	ldrb	r0, [r6], #1
   17688:	bl	16584 <putc_unlocked@plt+0x43cc>
   1768c:	add	r0, r4, r0, lsl #1
   17690:	ldrh	r0, [r0]
   17694:	ubfx	r0, r0, #14, #1
   17698:	add	r7, r7, r0
   1769c:	cmp	r6, r5
   176a0:	bcc	17684 <putc_unlocked@plt+0x54cc>
   176a4:	mov	r4, r8
   176a8:	ldr	r6, [fp, #8]
   176ac:	b	176d4 <putc_unlocked@plt+0x551c>
   176b0:	mov	r7, #0
   176b4:	mov	r8, r4
   176b8:	sub	r9, r8, r4
   176bc:	ldr	sl, [sp, #4]
   176c0:	b	176d4 <putc_unlocked@plt+0x551c>
   176c4:	mov	r7, r9
   176c8:	ldr	sl, [sp, #4]
   176cc:	b	176d4 <putc_unlocked@plt+0x551c>
   176d0:	mov	r7, #0
   176d4:	ldr	r0, [fp, #12]
   176d8:	movw	r1, #38369	; 0x95e1
   176dc:	movt	r1, #3
   176e0:	ldrb	r2, [r1]
   176e4:	mov	r1, #0
   176e8:	cmp	r2, #0
   176ec:	beq	17708 <putc_unlocked@plt+0x5550>
   176f0:	movw	r2, #41465	; 0xa1f9
   176f4:	movt	r2, #3
   176f8:	ldrb	r2, [r2]
   176fc:	cmp	r2, #1
   17700:	ldreq	r1, [sp, #8]
   17704:	eoreq	r1, r1, #1
   17708:	strb	r1, [r0]
   1770c:	cmp	r6, #0
   17710:	strne	r7, [r6]
   17714:	str	r4, [sl]
   17718:	mov	r0, r9
   1771c:	sub	sp, fp, #28
   17720:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17724:	cmp	r0, #0
   17728:	bxeq	lr
   1772c:	push	{r4, r5, fp, lr}
   17730:	add	fp, sp, #8
   17734:	mov	r4, r0
   17738:	mov	r0, #4
   1773c:	bl	14278 <putc_unlocked@plt+0x20c0>
   17740:	cmp	r0, #0
   17744:	blne	158f4 <putc_unlocked@plt+0x373c>
   17748:	movw	r5, #37344	; 0x91e0
   1774c:	movt	r5, #3
   17750:	mov	r0, r5
   17754:	bl	15fac <putc_unlocked@plt+0x3df4>
   17758:	mov	r0, r4
   1775c:	bl	15fac <putc_unlocked@plt+0x3df4>
   17760:	add	r0, r5, #8
   17764:	pop	{r4, r5, fp, lr}
   17768:	b	15fac <putc_unlocked@plt+0x3df4>
   1776c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17770:	add	fp, sp, #28
   17774:	sub	sp, sp, #4
   17778:	mov	r4, r1
   1777c:	mov	r7, r0
   17780:	bl	11fc0 <strlen@plt>
   17784:	add	r1, r0, #1
   17788:	mov	r0, #3
   1778c:	bl	22e4c <_obstack_memory_used@@Base+0x2a6c>
   17790:	mov	r9, r0
   17794:	ldrb	r0, [r7]
   17798:	cmp	r0, #0
   1779c:	mov	r6, r9
   177a0:	beq	1781c <putc_unlocked@plt+0x5664>
   177a4:	add	r7, r7, #1
   177a8:	mov	sl, #47	; 0x2f
   177ac:	movw	r5, #37920	; 0x9420
   177b0:	movt	r5, #3
   177b4:	movw	r8, #27198	; 0x6a3e
   177b8:	movt	r8, #2
   177bc:	mov	r6, r9
   177c0:	b	177d4 <putc_unlocked@plt+0x561c>
   177c4:	strb	sl, [r6], #1
   177c8:	ldrb	r0, [r7], #1
   177cc:	cmp	r0, #0
   177d0:	beq	1781c <putc_unlocked@plt+0x5664>
   177d4:	uxtb	r1, r0
   177d8:	cmp	r1, #47	; 0x2f
   177dc:	bne	177e8 <putc_unlocked@plt+0x5630>
   177e0:	cmp	r4, #0
   177e4:	bne	177c4 <putc_unlocked@plt+0x560c>
   177e8:	ldrb	r2, [r5, r1]
   177ec:	cmp	r2, #0
   177f0:	beq	177fc <putc_unlocked@plt+0x5644>
   177f4:	strb	r0, [r6], #1
   177f8:	b	177c8 <putc_unlocked@plt+0x5610>
   177fc:	str	r1, [sp]
   17800:	mov	r0, r6
   17804:	mov	r1, #1
   17808:	mvn	r2, #0
   1780c:	mov	r3, r8
   17810:	bl	11ff0 <__sprintf_chk@plt>
   17814:	add	r6, r6, r0
   17818:	b	177c8 <putc_unlocked@plt+0x5610>
   1781c:	mov	r0, #0
   17820:	strb	r0, [r6]
   17824:	mov	r0, r9
   17828:	sub	sp, fp, #28
   1782c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17830:	push	{r4, sl, fp, lr}
   17834:	add	fp, sp, #8
   17838:	mov	r4, r0
   1783c:	movw	r0, #37792	; 0x93a0
   17840:	movt	r0, #3
   17844:	ldrb	r0, [r0]
   17848:	cmp	r0, #0
   1784c:	popeq	{r4, sl, fp, pc}
   17850:	ldr	r0, [r4, #12]
   17854:	ldr	r1, [r4, #16]
   17858:	sub	r0, r1, r0
   1785c:	cmp	r0, #7
   17860:	bhi	17870 <putc_unlocked@plt+0x56b8>
   17864:	mov	r0, r4
   17868:	mov	r1, #8
   1786c:	bl	201cc <_obstack_newchunk@@Base>
   17870:	movw	r0, #38176	; 0x9520
   17874:	movt	r0, #3
   17878:	ldrd	r0, [r0]
   1787c:	ldr	r2, [r4, #12]
   17880:	str	r1, [r2, #4]
   17884:	str	r0, [r2]
   17888:	ldr	r0, [r4, #12]
   1788c:	add	r0, r0, #8
   17890:	str	r0, [r4, #12]
   17894:	pop	{r4, sl, fp, pc}
   17898:	push	{r4, r5, r6, sl, fp, lr}
   1789c:	add	fp, sp, #16
   178a0:	mov	r4, #0
   178a4:	cmp	r0, #0
   178a8:	beq	178d8 <putc_unlocked@plt+0x5720>
   178ac:	mov	r5, r1
   178b0:	mov	r6, r0
   178b4:	ldr	r0, [r6]
   178b8:	mov	r1, r5
   178bc:	mov	r2, #4
   178c0:	bl	11edc <fnmatch@plt>
   178c4:	cmp	r0, #0
   178c8:	beq	178e0 <putc_unlocked@plt+0x5728>
   178cc:	ldr	r6, [r6, #4]
   178d0:	cmp	r6, #0
   178d4:	bne	178b4 <putc_unlocked@plt+0x56fc>
   178d8:	mov	r0, r4
   178dc:	pop	{r4, r5, r6, sl, fp, pc}
   178e0:	mov	r4, #1
   178e4:	mov	r0, r4
   178e8:	pop	{r4, r5, r6, sl, fp, pc}
   178ec:	push	{r4, sl, fp, lr}
   178f0:	add	fp, sp, #8
   178f4:	mov	r4, r0
   178f8:	ldr	r0, [r0]
   178fc:	bl	1bcc8 <putc_unlocked@plt+0x9b10>
   17900:	ldr	r0, [r4, #4]
   17904:	bl	1bcc8 <putc_unlocked@plt+0x9b10>
   17908:	ldr	r0, [r4, #8]
   1790c:	bl	1bcc8 <putc_unlocked@plt+0x9b10>
   17910:	ldr	r0, [r4, #128]	; 0x80
   17914:	movw	r1, #37553	; 0x92b1
   17918:	movt	r1, #3
   1791c:	cmp	r0, r1
   17920:	popeq	{r4, sl, fp, pc}
   17924:	pop	{r4, sl, fp, lr}
   17928:	b	12104 <freecon@plt>
   1792c:	push	{r4, r5, fp, lr}
   17930:	add	fp, sp, #8
   17934:	sub	sp, sp, #8
   17938:	mov	r4, r0
   1793c:	movw	r0, #37916	; 0x941c
   17940:	movt	r0, #3
   17944:	ldr	r0, [r0]
   17948:	str	r0, [sp]
   1794c:	add	r0, sp, #6
   17950:	mov	r1, #2
   17954:	mov	r2, r4
   17958:	mvn	r3, #0
   1795c:	bl	2061c <_obstack_memory_used@@Base+0x23c>
   17960:	mov	r5, r0
   17964:	ldrb	r1, [r4]
   17968:	mov	r0, #1
   1796c:	ldrb	r2, [sp, #6]
   17970:	cmp	r1, r2
   17974:	bne	17988 <putc_unlocked@plt+0x57d0>
   17978:	mov	r0, r4
   1797c:	bl	11fc0 <strlen@plt>
   17980:	subs	r0, r0, r5
   17984:	movwne	r0, #1
   17988:	sub	sp, fp, #8
   1798c:	pop	{r4, r5, fp, pc}
   17990:	ldrb	ip, [r1]
   17994:	cmp	ip, #46	; 0x2e
   17998:	bne	179ac <putc_unlocked@plt+0x57f4>
   1799c:	ldrb	r3, [r1, #1]
   179a0:	cmp	r3, #0
   179a4:	beq	179e0 <putc_unlocked@plt+0x5828>
   179a8:	ldrb	ip, [r1]
   179ac:	cmp	ip, #0
   179b0:	beq	179e0 <putc_unlocked@plt+0x5828>
   179b4:	mov	r3, r1
   179b8:	strb	ip, [r0], #1
   179bc:	ldrb	ip, [r3, #1]!
   179c0:	cmp	ip, #0
   179c4:	bne	179b8 <putc_unlocked@plt+0x5800>
   179c8:	cmp	r3, r1
   179cc:	bls	179e0 <putc_unlocked@plt+0x5828>
   179d0:	ldrb	r1, [r3, #-1]
   179d4:	cmp	r1, #47	; 0x2f
   179d8:	movne	r1, #47	; 0x2f
   179dc:	strbne	r1, [r0], #1
   179e0:	ldrb	r1, [r2]
   179e4:	cmp	r1, #0
   179e8:	beq	17a00 <putc_unlocked@plt+0x5848>
   179ec:	add	r2, r2, #1
   179f0:	strb	r1, [r0], #1
   179f4:	ldrb	r1, [r2], #1
   179f8:	cmp	r1, #0
   179fc:	bne	179f0 <putc_unlocked@plt+0x5838>
   17a00:	mov	r1, #0
   17a04:	strb	r1, [r0]
   17a08:	bx	lr
   17a0c:	push	{r4, r5, fp, lr}
   17a10:	add	fp, sp, #8
   17a14:	sub	sp, sp, #8
   17a18:	mov	r4, r1
   17a1c:	mov	r5, r0
   17a20:	bl	17dcc <putc_unlocked@plt+0x5c14>
   17a24:	str	r0, [sp]
   17a28:	mvn	r0, #99	; 0x63
   17a2c:	mov	r1, r5
   17a30:	mov	r2, r4
   17a34:	mov	r3, #0
   17a38:	bl	17068 <putc_unlocked@plt+0x4eb0>
   17a3c:	sub	sp, fp, #8
   17a40:	pop	{r4, r5, fp, pc}
   17a44:	push	{r4, r5, fp, lr}
   17a48:	add	fp, sp, #8
   17a4c:	sub	sp, sp, #8
   17a50:	mov	r4, r1
   17a54:	mov	r5, r0
   17a58:	bl	17dcc <putc_unlocked@plt+0x5c14>
   17a5c:	str	r0, [sp]
   17a60:	mvn	r0, #99	; 0x63
   17a64:	mov	r1, r5
   17a68:	mov	r2, r4
   17a6c:	mov	r3, #256	; 0x100
   17a70:	bl	17068 <putc_unlocked@plt+0x4eb0>
   17a74:	sub	sp, fp, #8
   17a78:	pop	{r4, r5, fp, pc}
   17a7c:	push	{r4, r5, fp, lr}
   17a80:	add	fp, sp, #8
   17a84:	mov	r4, r1
   17a88:	movw	r5, #41520	; 0xa230
   17a8c:	movt	r5, #3
   17a90:	ldrd	r2, [r5]
   17a94:	ldr	r1, [r4, #16]!
   17a98:	eor	r1, r1, r2
   17a9c:	ldr	r2, [r4, #4]
   17aa0:	eor	r2, r2, r3
   17aa4:	orrs	r1, r1, r2
   17aa8:	bne	17ac0 <putc_unlocked@plt+0x5908>
   17aac:	bl	11fe4 <__errno_location@plt>
   17ab0:	mov	r1, #95	; 0x5f
   17ab4:	str	r1, [r0]
   17ab8:	mov	r0, #0
   17abc:	pop	{r4, r5, fp, pc}
   17ac0:	bl	17ee0 <putc_unlocked@plt+0x5d28>
   17ac4:	mov	r1, r0
   17ac8:	mov	r0, #1
   17acc:	cmp	r1, #0
   17ad0:	popne	{r4, r5, fp, pc}
   17ad4:	bl	11fe4 <__errno_location@plt>
   17ad8:	ldr	r0, [r0]
   17adc:	bl	17f40 <putc_unlocked@plt+0x5d88>
   17ae0:	mov	r1, r0
   17ae4:	mov	r0, #0
   17ae8:	cmp	r1, #0
   17aec:	ldrdne	r2, [r4]
   17af0:	strdne	r2, [r5]
   17af4:	pop	{r4, r5, fp, pc}
   17af8:	push	{r4, r5, r6, r7, fp, lr}
   17afc:	add	fp, sp, #16
   17b00:	movw	r7, #41528	; 0xa238
   17b04:	movt	r7, #3
   17b08:	ldr	r4, [r7]
   17b0c:	ldr	r3, [r7, #4]
   17b10:	mov	r6, r1
   17b14:	ldr	r5, [r6, #16]!
   17b18:	eor	r5, r5, r4
   17b1c:	ldr	r4, [r6, #4]
   17b20:	eor	r3, r4, r3
   17b24:	orrs	r3, r5, r3
   17b28:	bne	17b44 <putc_unlocked@plt+0x598c>
   17b2c:	bl	11fe4 <__errno_location@plt>
   17b30:	mov	r1, #95	; 0x5f
   17b34:	str	r1, [r0]
   17b38:	mvn	r4, #0
   17b3c:	mov	r0, r4
   17b40:	pop	{r4, r5, r6, r7, fp, pc}
   17b44:	add	r1, r1, #128	; 0x80
   17b48:	cmp	r2, #0
   17b4c:	beq	17b58 <putc_unlocked@plt+0x59a0>
   17b50:	bl	22200 <_obstack_memory_used@@Base+0x1e20>
   17b54:	b	17b5c <putc_unlocked@plt+0x59a4>
   17b58:	bl	2228c <_obstack_memory_used@@Base+0x1eac>
   17b5c:	mov	r4, r0
   17b60:	cmn	r0, #1
   17b64:	ble	17b70 <putc_unlocked@plt+0x59b8>
   17b68:	mov	r0, r4
   17b6c:	pop	{r4, r5, r6, r7, fp, pc}
   17b70:	bl	11fe4 <__errno_location@plt>
   17b74:	ldr	r0, [r0]
   17b78:	bl	17f40 <putc_unlocked@plt+0x5d88>
   17b7c:	cmp	r0, #0
   17b80:	ldrdne	r0, [r6]
   17b84:	strdne	r0, [r7]
   17b88:	mov	r0, r4
   17b8c:	pop	{r4, r5, r6, r7, fp, pc}
   17b90:	sub	r0, r0, #95	; 0x5f
   17b94:	clz	r0, r0
   17b98:	lsr	r0, r0, #5
   17b9c:	bx	lr
   17ba0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17ba4:	add	fp, sp, #24
   17ba8:	mov	r4, r1
   17bac:	mov	r5, r0
   17bb0:	movw	r8, #41536	; 0xa240
   17bb4:	movt	r8, #3
   17bb8:	ldrd	r0, [r8]
   17bbc:	ldr	r2, [r4, #16]!
   17bc0:	eor	r0, r2, r0
   17bc4:	ldr	r2, [r4, #4]
   17bc8:	eor	r1, r2, r1
   17bcc:	orr	r7, r0, r1
   17bd0:	bl	11fe4 <__errno_location@plt>
   17bd4:	mov	r6, r0
   17bd8:	cmp	r7, #0
   17bdc:	bne	17bf4 <putc_unlocked@plt+0x5a3c>
   17be0:	mov	r0, #95	; 0x5f
   17be4:	str	r0, [r6]
   17be8:	mov	r5, #0
   17bec:	mov	r0, r5
   17bf0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17bf4:	mov	r0, #0
   17bf8:	str	r0, [r6]
   17bfc:	mov	r0, r5
   17c00:	mov	r1, r4
   17c04:	bl	1b528 <putc_unlocked@plt+0x9370>
   17c08:	mov	r5, r0
   17c0c:	cmp	r0, #0
   17c10:	ble	17c1c <putc_unlocked@plt+0x5a64>
   17c14:	mov	r0, r5
   17c18:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17c1c:	ldr	r0, [r6]
   17c20:	bl	17f40 <putc_unlocked@plt+0x5d88>
   17c24:	cmp	r0, #0
   17c28:	ldrdne	r0, [r4]
   17c2c:	strdne	r0, [r8]
   17c30:	mov	r0, r5
   17c34:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17c38:	push	{r4, r5, r6, sl, fp, lr}
   17c3c:	add	fp, sp, #16
   17c40:	mov	r5, r2
   17c44:	mov	r6, r1
   17c48:	mov	r4, r0
   17c4c:	ldr	r1, [r1, #64]	; 0x40
   17c50:	bl	1a280 <putc_unlocked@plt+0x80c8>
   17c54:	str	r0, [r6, #4]
   17c58:	cmp	r0, #0
   17c5c:	popne	{r4, r5, r6, sl, fp, pc}
   17c60:	movw	r1, #27232	; 0x6a60
   17c64:	movt	r1, #2
   17c68:	mov	r0, #0
   17c6c:	mov	r2, #5
   17c70:	bl	11db0 <dcgettext@plt>
   17c74:	mov	r1, r0
   17c78:	mov	r0, r5
   17c7c:	mov	r2, r4
   17c80:	pop	{r4, r5, r6, sl, fp, lr}
   17c84:	b	16b08 <putc_unlocked@plt+0x4950>
   17c88:	push	{r4, r5, r6, r7, fp, lr}
   17c8c:	add	fp, sp, #16
   17c90:	cmp	r1, #0
   17c94:	beq	17d14 <putc_unlocked@plt+0x5b5c>
   17c98:	mov	r4, r1
   17c9c:	mov	r5, r0
   17ca0:	ldrb	r0, [r1]
   17ca4:	cmp	r0, #47	; 0x2f
   17ca8:	beq	17d08 <putc_unlocked@plt+0x5b50>
   17cac:	mov	r0, r5
   17cb0:	bl	1b480 <putc_unlocked@plt+0x92c8>
   17cb4:	cmp	r0, #0
   17cb8:	beq	17d08 <putc_unlocked@plt+0x5b50>
   17cbc:	mov	r6, r0
   17cc0:	mov	r0, r4
   17cc4:	bl	11fc0 <strlen@plt>
   17cc8:	add	r0, r6, r0
   17ccc:	add	r0, r0, #2
   17cd0:	bl	22db0 <_obstack_memory_used@@Base+0x29d0>
   17cd4:	mov	r7, r0
   17cd8:	add	r0, r6, r5
   17cdc:	ldrb	r0, [r0, #-1]
   17ce0:	cmp	r0, #47	; 0x2f
   17ce4:	addne	r6, r6, #1
   17ce8:	mov	r0, r7
   17cec:	mov	r1, r5
   17cf0:	mov	r2, r6
   17cf4:	bl	12020 <stpncpy@plt>
   17cf8:	mov	r1, r4
   17cfc:	bl	11da4 <stpcpy@plt>
   17d00:	mov	r0, r7
   17d04:	pop	{r4, r5, r6, r7, fp, pc}
   17d08:	mov	r0, r4
   17d0c:	pop	{r4, r5, r6, r7, fp, lr}
   17d10:	b	23118 <_obstack_memory_used@@Base+0x2d38>
   17d14:	mov	r7, #0
   17d18:	mov	r0, r7
   17d1c:	pop	{r4, r5, r6, r7, fp, pc}
   17d20:	push	{fp, lr}
   17d24:	mov	fp, sp
   17d28:	sub	sp, sp, #8
   17d2c:	mov	r2, r1
   17d30:	mov	r1, r0
   17d34:	mov	r0, #2
   17d38:	str	r0, [sp]
   17d3c:	mvn	r0, #99	; 0x63
   17d40:	mov	r3, #0
   17d44:	bl	17068 <putc_unlocked@plt+0x4eb0>
   17d48:	mov	sp, fp
   17d4c:	pop	{fp, pc}
   17d50:	push	{r4, sl, fp, lr}
   17d54:	add	fp, sp, #8
   17d58:	mov	r4, r0
   17d5c:	movw	r0, #38345	; 0x95c9
   17d60:	movt	r0, #3
   17d64:	ldrb	r1, [r0]
   17d68:	mov	r0, #0
   17d6c:	cmp	r1, #0
   17d70:	bne	17d7c <putc_unlocked@plt+0x5bc4>
   17d74:	mov	r0, r4
   17d78:	bl	1d890 <putc_unlocked@plt+0xb6d8>
   17d7c:	mov	r2, r4
   17d80:	mov	r3, #0
   17d84:	pop	{r4, sl, fp, lr}
   17d88:	b	17f58 <putc_unlocked@plt+0x5da0>
   17d8c:	push	{r4, sl, fp, lr}
   17d90:	add	fp, sp, #8
   17d94:	mov	r4, r0
   17d98:	movw	r0, #38345	; 0x95c9
   17d9c:	movt	r0, #3
   17da0:	ldrb	r1, [r0]
   17da4:	mov	r0, #0
   17da8:	cmp	r1, #0
   17dac:	bne	17db8 <putc_unlocked@plt+0x5c00>
   17db0:	mov	r0, r4
   17db4:	bl	1da40 <putc_unlocked@plt+0xb888>
   17db8:	mov	r2, r4
   17dbc:	mov	r3, #0
   17dc0:	pop	{r4, sl, fp, lr}
   17dc4:	b	17f58 <putc_unlocked@plt+0x5da0>
   17dc8:	bx	lr
   17dcc:	push	{r4, sl, fp, lr}
   17dd0:	add	fp, sp, #8
   17dd4:	movw	r0, #38344	; 0x95c8
   17dd8:	movt	r0, #3
   17ddc:	ldrb	r0, [r0]
   17de0:	mov	r4, #2
   17de4:	cmp	r0, #0
   17de8:	movwne	r4, #258	; 0x102
   17dec:	movw	r0, #37789	; 0x939d
   17df0:	movt	r0, #3
   17df4:	ldrb	r0, [r0]
   17df8:	bfi	r4, r0, #10, #1
   17dfc:	movw	r0, #37712	; 0x9350
   17e00:	movt	r0, #3
   17e04:	ldr	r0, [r0]
   17e08:	cmp	r0, #0
   17e0c:	bne	17e60 <putc_unlocked@plt+0x5ca8>
   17e10:	bl	17eb4 <putc_unlocked@plt+0x5cfc>
   17e14:	orr	r0, r4, r0
   17e18:	movw	r1, #38320	; 0x95b0
   17e1c:	movt	r1, #3
   17e20:	ldrb	r1, [r1]
   17e24:	cmp	r1, #1
   17e28:	bne	17e40 <putc_unlocked@plt+0x5c88>
   17e2c:	movw	r1, #38348	; 0x95cc
   17e30:	movt	r1, #3
   17e34:	ldrb	r1, [r1]
   17e38:	cmp	r1, #1
   17e3c:	bne	17e48 <putc_unlocked@plt+0x5c90>
   17e40:	orr	r4, r0, #524	; 0x20c
   17e44:	b	17e4c <putc_unlocked@plt+0x5c94>
   17e48:	orr	r4, r0, #516	; 0x204
   17e4c:	movw	r0, #38346	; 0x95ca
   17e50:	movt	r0, #3
   17e54:	ldrb	r0, [r0]
   17e58:	cmp	r0, #0
   17e5c:	orreq	r4, r4, #16
   17e60:	movw	r0, #37784	; 0x9398
   17e64:	movt	r0, #3
   17e68:	ldr	r0, [r0]
   17e6c:	cmp	r0, #6
   17e70:	bhi	17eb0 <putc_unlocked@plt+0x5cf8>
   17e74:	mov	r1, #1
   17e78:	mov	r2, #87	; 0x57
   17e7c:	tst	r2, r1, lsl r0
   17e80:	beq	17e8c <putc_unlocked@plt+0x5cd4>
   17e84:	mov	r0, r4
   17e88:	pop	{r4, sl, fp, pc}
   17e8c:	cmp	r0, #3
   17e90:	bne	17ea0 <putc_unlocked@plt+0x5ce8>
   17e94:	orr	r4, r4, #512	; 0x200
   17e98:	mov	r0, r4
   17e9c:	pop	{r4, sl, fp, pc}
   17ea0:	bl	17eb4 <putc_unlocked@plt+0x5cfc>
   17ea4:	orr	r4, r0, r4
   17ea8:	mov	r0, r4
   17eac:	pop	{r4, sl, fp, pc}
   17eb0:	bl	1214c <abort@plt>
   17eb4:	push	{fp, lr}
   17eb8:	mov	fp, sp
   17ebc:	movw	r0, #38316	; 0x95ac
   17ec0:	movt	r0, #3
   17ec4:	ldr	r0, [r0]
   17ec8:	cmp	r0, #4
   17ecc:	movwcc	r1, #33904	; 0x8470
   17ed0:	movtcc	r1, #2
   17ed4:	ldrcc	r0, [r1, r0, lsl #2]
   17ed8:	popcc	{fp, pc}
   17edc:	bl	1214c <abort@plt>
   17ee0:	push	{r4, r5, r6, sl, fp, lr}
   17ee4:	add	fp, sp, #16
   17ee8:	bl	120a4 <cap_get_file@plt>
   17eec:	cmp	r0, #0
   17ef0:	beq	17f34 <putc_unlocked@plt+0x5d7c>
   17ef4:	mov	r6, r0
   17ef8:	mov	r4, #0
   17efc:	mov	r1, #0
   17f00:	bl	11c90 <cap_to_text@plt>
   17f04:	mov	r5, r0
   17f08:	mov	r0, r6
   17f0c:	bl	120ec <cap_free@plt>
   17f10:	cmp	r5, #0
   17f14:	beq	17f2c <putc_unlocked@plt+0x5d74>
   17f18:	ldrb	r4, [r5]
   17f1c:	mov	r0, r5
   17f20:	bl	120ec <cap_free@plt>
   17f24:	cmp	r4, #0
   17f28:	movwne	r4, #1
   17f2c:	mov	r0, r4
   17f30:	pop	{r4, r5, r6, sl, fp, pc}
   17f34:	mov	r4, #0
   17f38:	mov	r0, r4
   17f3c:	pop	{r4, r5, r6, sl, fp, pc}
   17f40:	cmp	r0, #22
   17f44:	cmpne	r0, #38	; 0x26
   17f48:	bne	17f54 <putc_unlocked@plt+0x5d9c>
   17f4c:	mov	r0, #1
   17f50:	bx	lr
   17f54:	b	17b90 <putc_unlocked@plt+0x59d8>
   17f58:	push	{fp, lr}
   17f5c:	mov	fp, sp
   17f60:	sub	sp, sp, #16
   17f64:	cmp	r0, #0
   17f68:	beq	17f80 <putc_unlocked@plt+0x5dc8>
   17f6c:	mov	r1, #0
   17f70:	bl	1e1e4 <putc_unlocked@plt+0xc02c>
   17f74:	bic	r0, r0, r0, asr #31
   17f78:	mov	sp, fp
   17f7c:	pop	{fp, pc}
   17f80:	str	r2, [sp, #8]
   17f84:	str	r3, [sp, #12]
   17f88:	movw	r0, #27261	; 0x6a7d
   17f8c:	movt	r0, #2
   17f90:	str	r0, [sp]
   17f94:	mov	r0, #0
   17f98:	mov	r1, #0
   17f9c:	mov	r2, #1
   17fa0:	mvn	r3, #0
   17fa4:	bl	1217c <__snprintf_chk@plt>
   17fa8:	mov	sp, fp
   17fac:	pop	{fp, pc}
   17fb0:	ldr	r0, [r0, #120]	; 0x78
   17fb4:	sub	r1, r0, #9
   17fb8:	clz	r1, r1
   17fbc:	lsr	r1, r1, #5
   17fc0:	sub	r0, r0, #3
   17fc4:	clz	r0, r0
   17fc8:	lsr	r0, r0, #5
   17fcc:	orr	r0, r0, r1
   17fd0:	bx	lr
   17fd4:	push	{fp, lr}
   17fd8:	mov	fp, sp
   17fdc:	bl	1a7a8 <putc_unlocked@plt+0x85f0>
   17fe0:	pop	{fp, lr}
   17fe4:	b	17fe8 <putc_unlocked@plt+0x5e30>
   17fe8:	ldrb	r2, [r0]
   17fec:	mov	r1, #0
   17ff0:	cmp	r2, #46	; 0x2e
   17ff4:	bne	18024 <putc_unlocked@plt+0x5e6c>
   17ff8:	ldrb	r1, [r0, #1]
   17ffc:	mov	r2, #1
   18000:	cmp	r1, #46	; 0x2e
   18004:	movweq	r2, #2
   18008:	ldrb	r0, [r0, r2]
   1800c:	clz	r1, r0
   18010:	lsr	r1, r1, #5
   18014:	sub	r0, r0, #47	; 0x2f
   18018:	clz	r0, r0
   1801c:	lsr	r0, r0, #5
   18020:	orr	r1, r1, r0
   18024:	mov	r0, r1
   18028:	bx	lr
   1802c:	movw	r0, #37900	; 0x940c
   18030:	movt	r0, #3
   18034:	ldr	r1, [r0]
   18038:	cmp	r1, #0
   1803c:	bxeq	lr
   18040:	ldr	r0, [r0]
   18044:	movw	r1, #41468	; 0xa1fc
   18048:	movt	r1, #3
   1804c:	ldr	r1, [r1]
   18050:	movw	r2, #37896	; 0x9408
   18054:	movt	r2, #3
   18058:	ldr	r2, [r2]
   1805c:	mov	r3, #0
   18060:	str	r2, [r1, r3, lsl #2]
   18064:	add	r2, r2, #152	; 0x98
   18068:	add	r3, r3, #1
   1806c:	cmp	r3, r0
   18070:	bcc	18060 <putc_unlocked@plt+0x5ea8>
   18074:	bx	lr
   18078:	push	{r4, r5, r6, r7, fp, lr}
   1807c:	add	fp, sp, #16
   18080:	movw	r0, #37784	; 0x9398
   18084:	movt	r0, #3
   18088:	ldr	r0, [r0]
   1808c:	cmp	r0, #2
   18090:	beq	180c0 <putc_unlocked@plt+0x5f08>
   18094:	movw	r0, #38360	; 0x95d8
   18098:	movt	r0, #3
   1809c:	ldr	r0, [r0]
   180a0:	cmp	r0, #0
   180a4:	beq	18104 <putc_unlocked@plt+0x5f4c>
   180a8:	movw	r0, #37712	; 0x9350
   180ac:	movt	r0, #3
   180b0:	ldr	r0, [r0]
   180b4:	orr	r0, r0, #1
   180b8:	cmp	r0, #3
   180bc:	popne	{r4, r5, r6, r7, fp, pc}
   180c0:	movw	r5, #37900	; 0x940c
   180c4:	movt	r5, #3
   180c8:	ldr	r0, [r5]
   180cc:	cmp	r0, #0
   180d0:	beq	18104 <putc_unlocked@plt+0x5f4c>
   180d4:	mov	r6, #0
   180d8:	movw	r7, #41468	; 0xa1fc
   180dc:	movt	r7, #3
   180e0:	ldr	r0, [r7]
   180e4:	ldr	r4, [r0, r6, lsl #2]
   180e8:	mov	r0, r4
   180ec:	bl	18108 <putc_unlocked@plt+0x5f50>
   180f0:	str	r0, [r4, #148]	; 0x94
   180f4:	add	r6, r6, #1
   180f8:	ldr	r0, [r5]
   180fc:	cmp	r6, r0
   18100:	bcc	180e0 <putc_unlocked@plt+0x5f28>
   18104:	pop	{r4, r5, r6, r7, fp, pc}
   18108:	ldr	r1, [r0, #148]	; 0x94
   1810c:	cmp	r1, #0
   18110:	movne	r0, r1
   18114:	bxne	lr
   18118:	movw	r1, #37916	; 0x941c
   1811c:	movt	r1, #3
   18120:	ldr	r1, [r1]
   18124:	ldr	r3, [r0]
   18128:	ldr	r2, [r0, #144]	; 0x90
   1812c:	mov	r0, r3
   18130:	b	18134 <putc_unlocked@plt+0x5f7c>
   18134:	push	{r4, r5, r6, r7, fp, lr}
   18138:	add	fp, sp, #16
   1813c:	sub	sp, sp, #24
   18140:	sub	sp, sp, #8192	; 0x2000
   18144:	mov	r3, r2
   18148:	mov	r2, r1
   1814c:	mov	r4, r0
   18150:	add	r5, sp, #24
   18154:	str	r5, [sp, #20]
   18158:	add	r0, sp, #15
   1815c:	add	r1, sp, #16
   18160:	str	r1, [sp]
   18164:	str	r0, [sp, #4]
   18168:	add	r0, sp, #20
   1816c:	mov	r1, r4
   18170:	bl	17210 <putc_unlocked@plt+0x5058>
   18174:	ldr	r0, [sp, #20]
   18178:	cmp	r0, r5
   1817c:	cmpne	r0, r4
   18180:	beq	18188 <putc_unlocked@plt+0x5fd0>
   18184:	bl	1bcc8 <putc_unlocked@plt+0x9b10>
   18188:	ldrb	r0, [sp, #15]
   1818c:	ldr	r1, [sp, #16]
   18190:	add	r0, r1, r0
   18194:	sub	sp, fp, #16
   18198:	pop	{r4, r5, r6, r7, fp, pc}
   1819c:	movw	r2, #34196	; 0x8594
   181a0:	movt	r2, #1
   181a4:	b	18588 <putc_unlocked@plt+0x63d0>
   181a8:	movw	r2, #33180	; 0x819c
   181ac:	movt	r2, #1
   181b0:	b	185c0 <putc_unlocked@plt+0x6408>
   181b4:	mov	r3, r0
   181b8:	movw	r2, #34196	; 0x8594
   181bc:	movt	r2, #1
   181c0:	mov	r0, r1
   181c4:	mov	r1, r3
   181c8:	b	18588 <putc_unlocked@plt+0x63d0>
   181cc:	movw	r2, #33204	; 0x81b4
   181d0:	movt	r2, #1
   181d4:	b	185c0 <putc_unlocked@plt+0x6408>
   181d8:	movw	r2, #7372	; 0x1ccc
   181dc:	movt	r2, #1
   181e0:	b	18588 <putc_unlocked@plt+0x63d0>
   181e4:	movw	r2, #33240	; 0x81d8
   181e8:	movt	r2, #1
   181ec:	b	185c0 <putc_unlocked@plt+0x6408>
   181f0:	mov	r3, r0
   181f4:	movw	r2, #7372	; 0x1ccc
   181f8:	movt	r2, #1
   181fc:	mov	r0, r1
   18200:	mov	r1, r3
   18204:	b	18588 <putc_unlocked@plt+0x63d0>
   18208:	movw	r2, #33264	; 0x81f0
   1820c:	movt	r2, #1
   18210:	b	185c0 <putc_unlocked@plt+0x6408>
   18214:	movw	r2, #34196	; 0x8594
   18218:	movt	r2, #1
   1821c:	b	18638 <putc_unlocked@plt+0x6480>
   18220:	movw	r2, #33300	; 0x8214
   18224:	movt	r2, #1
   18228:	b	185c0 <putc_unlocked@plt+0x6408>
   1822c:	mov	r3, r0
   18230:	movw	r2, #34196	; 0x8594
   18234:	movt	r2, #1
   18238:	mov	r0, r1
   1823c:	mov	r1, r3
   18240:	b	18638 <putc_unlocked@plt+0x6480>
   18244:	movw	r2, #33324	; 0x822c
   18248:	movt	r2, #1
   1824c:	b	185c0 <putc_unlocked@plt+0x6408>
   18250:	movw	r2, #7372	; 0x1ccc
   18254:	movt	r2, #1
   18258:	b	18638 <putc_unlocked@plt+0x6480>
   1825c:	movw	r2, #33360	; 0x8250
   18260:	movt	r2, #1
   18264:	b	185c0 <putc_unlocked@plt+0x6408>
   18268:	mov	r3, r0
   1826c:	movw	r2, #7372	; 0x1ccc
   18270:	movt	r2, #1
   18274:	mov	r0, r1
   18278:	mov	r1, r3
   1827c:	b	18638 <putc_unlocked@plt+0x6480>
   18280:	movw	r2, #33384	; 0x8268
   18284:	movt	r2, #1
   18288:	b	185c0 <putc_unlocked@plt+0x6408>
   1828c:	movw	r2, #34196	; 0x8594
   18290:	movt	r2, #1
   18294:	b	186a8 <putc_unlocked@plt+0x64f0>
   18298:	movw	r2, #33420	; 0x828c
   1829c:	movt	r2, #1
   182a0:	b	185c0 <putc_unlocked@plt+0x6408>
   182a4:	mov	r3, r0
   182a8:	movw	r2, #34196	; 0x8594
   182ac:	movt	r2, #1
   182b0:	mov	r0, r1
   182b4:	mov	r1, r3
   182b8:	b	186a8 <putc_unlocked@plt+0x64f0>
   182bc:	movw	r2, #33444	; 0x82a4
   182c0:	movt	r2, #1
   182c4:	b	185c0 <putc_unlocked@plt+0x6408>
   182c8:	movw	r2, #7372	; 0x1ccc
   182cc:	movt	r2, #1
   182d0:	b	186a8 <putc_unlocked@plt+0x64f0>
   182d4:	movw	r2, #33480	; 0x82c8
   182d8:	movt	r2, #1
   182dc:	b	185c0 <putc_unlocked@plt+0x6408>
   182e0:	mov	r3, r0
   182e4:	movw	r2, #7372	; 0x1ccc
   182e8:	movt	r2, #1
   182ec:	mov	r0, r1
   182f0:	mov	r1, r3
   182f4:	b	186a8 <putc_unlocked@plt+0x64f0>
   182f8:	movw	r2, #33504	; 0x82e0
   182fc:	movt	r2, #1
   18300:	b	185c0 <putc_unlocked@plt+0x6408>
   18304:	movw	r2, #34196	; 0x8594
   18308:	movt	r2, #1
   1830c:	b	186e8 <putc_unlocked@plt+0x6530>
   18310:	movw	r2, #33540	; 0x8304
   18314:	movt	r2, #1
   18318:	b	185c0 <putc_unlocked@plt+0x6408>
   1831c:	mov	r3, r0
   18320:	movw	r2, #34196	; 0x8594
   18324:	movt	r2, #1
   18328:	mov	r0, r1
   1832c:	mov	r1, r3
   18330:	b	186e8 <putc_unlocked@plt+0x6530>
   18334:	movw	r2, #33564	; 0x831c
   18338:	movt	r2, #1
   1833c:	b	185c0 <putc_unlocked@plt+0x6408>
   18340:	movw	r2, #7372	; 0x1ccc
   18344:	movt	r2, #1
   18348:	b	186e8 <putc_unlocked@plt+0x6530>
   1834c:	movw	r2, #33600	; 0x8340
   18350:	movt	r2, #1
   18354:	b	185c0 <putc_unlocked@plt+0x6408>
   18358:	mov	r3, r0
   1835c:	movw	r2, #7372	; 0x1ccc
   18360:	movt	r2, #1
   18364:	mov	r0, r1
   18368:	mov	r1, r3
   1836c:	b	186e8 <putc_unlocked@plt+0x6530>
   18370:	movw	r2, #33624	; 0x8358
   18374:	movt	r2, #1
   18378:	b	185c0 <putc_unlocked@plt+0x6408>
   1837c:	b	18750 <putc_unlocked@plt+0x6598>
   18380:	movw	r2, #33660	; 0x837c
   18384:	movt	r2, #1
   18388:	b	185c0 <putc_unlocked@plt+0x6408>
   1838c:	mov	r2, r0
   18390:	mov	r0, r1
   18394:	mov	r1, r2
   18398:	b	18750 <putc_unlocked@plt+0x6598>
   1839c:	movw	r2, #33676	; 0x838c
   183a0:	movt	r2, #1
   183a4:	b	185c0 <putc_unlocked@plt+0x6408>
   183a8:	movw	r2, #34196	; 0x8594
   183ac:	movt	r2, #1
   183b0:	b	1875c <putc_unlocked@plt+0x65a4>
   183b4:	movw	r2, #33704	; 0x83a8
   183b8:	movt	r2, #1
   183bc:	b	185c0 <putc_unlocked@plt+0x6408>
   183c0:	mov	r3, r0
   183c4:	movw	r2, #34196	; 0x8594
   183c8:	movt	r2, #1
   183cc:	mov	r0, r1
   183d0:	mov	r1, r3
   183d4:	b	1875c <putc_unlocked@plt+0x65a4>
   183d8:	movw	r2, #33728	; 0x83c0
   183dc:	movt	r2, #1
   183e0:	b	185c0 <putc_unlocked@plt+0x6408>
   183e4:	movw	r2, #7372	; 0x1ccc
   183e8:	movt	r2, #1
   183ec:	b	1875c <putc_unlocked@plt+0x65a4>
   183f0:	movw	r2, #33764	; 0x83e4
   183f4:	movt	r2, #1
   183f8:	b	185c0 <putc_unlocked@plt+0x6408>
   183fc:	mov	r3, r0
   18400:	movw	r2, #7372	; 0x1ccc
   18404:	movt	r2, #1
   18408:	mov	r0, r1
   1840c:	mov	r1, r3
   18410:	b	1875c <putc_unlocked@plt+0x65a4>
   18414:	movw	r2, #33788	; 0x83fc
   18418:	movt	r2, #1
   1841c:	b	185c0 <putc_unlocked@plt+0x6408>
   18420:	movw	r2, #34196	; 0x8594
   18424:	movt	r2, #1
   18428:	b	187c0 <putc_unlocked@plt+0x6608>
   1842c:	movw	r2, #33824	; 0x8420
   18430:	movt	r2, #1
   18434:	b	185c0 <putc_unlocked@plt+0x6408>
   18438:	mov	r3, r0
   1843c:	movw	r2, #34196	; 0x8594
   18440:	movt	r2, #1
   18444:	mov	r0, r1
   18448:	mov	r1, r3
   1844c:	b	187c0 <putc_unlocked@plt+0x6608>
   18450:	movw	r2, #33848	; 0x8438
   18454:	movt	r2, #1
   18458:	b	185c0 <putc_unlocked@plt+0x6408>
   1845c:	movw	r2, #7372	; 0x1ccc
   18460:	movt	r2, #1
   18464:	b	187c0 <putc_unlocked@plt+0x6608>
   18468:	movw	r2, #33884	; 0x845c
   1846c:	movt	r2, #1
   18470:	b	185c0 <putc_unlocked@plt+0x6408>
   18474:	mov	r3, r0
   18478:	movw	r2, #7372	; 0x1ccc
   1847c:	movt	r2, #1
   18480:	mov	r0, r1
   18484:	mov	r1, r3
   18488:	b	187c0 <putc_unlocked@plt+0x6608>
   1848c:	movw	r2, #33908	; 0x8474
   18490:	movt	r2, #1
   18494:	b	185c0 <putc_unlocked@plt+0x6408>
   18498:	movw	r2, #34196	; 0x8594
   1849c:	movt	r2, #1
   184a0:	b	18824 <putc_unlocked@plt+0x666c>
   184a4:	movw	r2, #33944	; 0x8498
   184a8:	movt	r2, #1
   184ac:	b	185c0 <putc_unlocked@plt+0x6408>
   184b0:	mov	r3, r0
   184b4:	movw	r2, #34196	; 0x8594
   184b8:	movt	r2, #1
   184bc:	mov	r0, r1
   184c0:	mov	r1, r3
   184c4:	b	18824 <putc_unlocked@plt+0x666c>
   184c8:	movw	r2, #33968	; 0x84b0
   184cc:	movt	r2, #1
   184d0:	b	185c0 <putc_unlocked@plt+0x6408>
   184d4:	movw	r2, #7372	; 0x1ccc
   184d8:	movt	r2, #1
   184dc:	b	18824 <putc_unlocked@plt+0x666c>
   184e0:	movw	r2, #34004	; 0x84d4
   184e4:	movt	r2, #1
   184e8:	b	185c0 <putc_unlocked@plt+0x6408>
   184ec:	mov	r3, r0
   184f0:	movw	r2, #7372	; 0x1ccc
   184f4:	movt	r2, #1
   184f8:	mov	r0, r1
   184fc:	mov	r1, r3
   18500:	b	18824 <putc_unlocked@plt+0x666c>
   18504:	movw	r2, #34028	; 0x84ec
   18508:	movt	r2, #1
   1850c:	b	185c0 <putc_unlocked@plt+0x6408>
   18510:	movw	r2, #34196	; 0x8594
   18514:	movt	r2, #1
   18518:	b	18888 <putc_unlocked@plt+0x66d0>
   1851c:	movw	r2, #34064	; 0x8510
   18520:	movt	r2, #1
   18524:	b	185c0 <putc_unlocked@plt+0x6408>
   18528:	mov	r3, r0
   1852c:	movw	r2, #34196	; 0x8594
   18530:	movt	r2, #1
   18534:	mov	r0, r1
   18538:	mov	r1, r3
   1853c:	b	18888 <putc_unlocked@plt+0x66d0>
   18540:	movw	r2, #34088	; 0x8528
   18544:	movt	r2, #1
   18548:	b	185c0 <putc_unlocked@plt+0x6408>
   1854c:	movw	r2, #7372	; 0x1ccc
   18550:	movt	r2, #1
   18554:	b	18888 <putc_unlocked@plt+0x66d0>
   18558:	movw	r2, #34124	; 0x854c
   1855c:	movt	r2, #1
   18560:	b	185c0 <putc_unlocked@plt+0x6408>
   18564:	mov	r3, r0
   18568:	movw	r2, #7372	; 0x1ccc
   1856c:	movt	r2, #1
   18570:	mov	r0, r1
   18574:	mov	r1, r3
   18578:	b	18888 <putc_unlocked@plt+0x66d0>
   1857c:	movw	r2, #34148	; 0x8564
   18580:	movt	r2, #1
   18584:	b	185c0 <putc_unlocked@plt+0x6408>
   18588:	ldr	r1, [r1]
   1858c:	ldr	r0, [r0]
   18590:	bx	r2
   18594:	push	{r4, r5, fp, lr}
   18598:	add	fp, sp, #8
   1859c:	mov	r4, r1
   185a0:	mov	r5, r0
   185a4:	bl	11fe4 <__errno_location@plt>
   185a8:	mov	r1, #0
   185ac:	str	r1, [r0]
   185b0:	mov	r0, r5
   185b4:	mov	r1, r4
   185b8:	pop	{r4, r5, fp, lr}
   185bc:	b	11ee8 <strcoll@plt>
   185c0:	push	{r4, r5, r6, r7, fp, lr}
   185c4:	add	fp, sp, #16
   185c8:	mov	r7, r2
   185cc:	mov	r4, r1
   185d0:	mov	r5, r0
   185d4:	mov	r0, r1
   185d8:	bl	18604 <putc_unlocked@plt+0x644c>
   185dc:	mov	r6, r0
   185e0:	mov	r0, r5
   185e4:	bl	18604 <putc_unlocked@plt+0x644c>
   185e8:	subs	r0, r6, r0
   185ec:	popne	{r4, r5, r6, r7, fp, pc}
   185f0:	mov	r0, r5
   185f4:	mov	r1, r4
   185f8:	mov	r2, r7
   185fc:	pop	{r4, r5, r6, r7, fp, lr}
   18600:	bx	r2
   18604:	mov	r1, r0
   18608:	ldr	r2, [r0, #120]	; 0x78
   1860c:	mov	r0, #1
   18610:	cmp	r2, #3
   18614:	cmpne	r2, #9
   18618:	bne	18620 <putc_unlocked@plt+0x6468>
   1861c:	bx	lr
   18620:	ldr	r0, [r1, #124]	; 0x7c
   18624:	and	r0, r0, #61440	; 0xf000
   18628:	sub	r0, r0, #16384	; 0x4000
   1862c:	clz	r0, r0
   18630:	lsr	r0, r0, #5
   18634:	bx	lr
   18638:	push	{r4, r5, r6, r7, fp, lr}
   1863c:	add	fp, sp, #16
   18640:	mov	r7, r2
   18644:	mov	r5, r1
   18648:	mov	r4, r0
   1864c:	ldr	r0, [r0]
   18650:	mov	r1, #46	; 0x2e
   18654:	bl	12098 <strrchr@plt>
   18658:	mov	r6, r0
   1865c:	ldr	r0, [r5]
   18660:	mov	r1, #46	; 0x2e
   18664:	bl	12098 <strrchr@plt>
   18668:	movw	r1, #27197	; 0x6a3d
   1866c:	movt	r1, #2
   18670:	cmp	r6, #0
   18674:	moveq	r6, r1
   18678:	cmp	r0, #0
   1867c:	movne	r1, r0
   18680:	mov	r0, r6
   18684:	mov	r6, r7
   18688:	blx	r7
   1868c:	cmp	r0, #0
   18690:	popne	{r4, r5, r6, r7, fp, pc}
   18694:	ldr	r1, [r5]
   18698:	ldr	r0, [r4]
   1869c:	mov	r2, r6
   186a0:	pop	{r4, r5, r6, r7, fp, lr}
   186a4:	bx	r2
   186a8:	push	{r4, r5, r6, r7, fp, lr}
   186ac:	add	fp, sp, #16
   186b0:	mov	r7, r2
   186b4:	mov	r5, r1
   186b8:	mov	r4, r0
   186bc:	bl	18108 <putc_unlocked@plt+0x5f50>
   186c0:	mov	r6, r0
   186c4:	mov	r0, r5
   186c8:	bl	18108 <putc_unlocked@plt+0x5f50>
   186cc:	subs	r0, r6, r0
   186d0:	popne	{r4, r5, r6, r7, fp, pc}
   186d4:	ldr	r1, [r5]
   186d8:	ldr	r0, [r4]
   186dc:	mov	r2, r7
   186e0:	pop	{r4, r5, r6, r7, fp, lr}
   186e4:	bx	r2
   186e8:	push	{r4, r5, r6, sl, fp, lr}
   186ec:	add	fp, sp, #16
   186f0:	mov	r6, r2
   186f4:	mov	r5, r1
   186f8:	mov	r4, r0
   186fc:	ldrd	r2, [r0, #64]	; 0x40
   18700:	ldrd	r0, [r1, #64]	; 0x40
   18704:	bl	18724 <putc_unlocked@plt+0x656c>
   18708:	cmp	r0, #0
   1870c:	popne	{r4, r5, r6, sl, fp, pc}
   18710:	ldr	r1, [r5]
   18714:	ldr	r0, [r4]
   18718:	mov	r2, r6
   1871c:	pop	{r4, r5, r6, sl, fp, lr}
   18720:	bx	r2
   18724:	push	{fp, lr}
   18728:	mov	fp, sp
   1872c:	mov	ip, #0
   18730:	subs	lr, r2, r0
   18734:	sbcs	lr, r3, r1
   18738:	movwlt	ip, #1
   1873c:	subs	r0, r0, r2
   18740:	sbcs	r0, r1, r3
   18744:	mvnlt	ip, #0
   18748:	mov	r0, ip
   1874c:	pop	{fp, pc}
   18750:	ldr	r1, [r1]
   18754:	ldr	r0, [r0]
   18758:	b	1b868 <putc_unlocked@plt+0x96b0>
   1875c:	push	{r4, r5, r6, sl, fp, lr}
   18760:	add	fp, sp, #16
   18764:	sub	sp, sp, #16
   18768:	mov	r4, r2
   1876c:	mov	r6, r1
   18770:	mov	r5, r0
   18774:	add	r1, r1, #16
   18778:	add	r0, sp, #8
   1877c:	bl	223a0 <_obstack_memory_used@@Base+0x1fc0>
   18780:	add	r1, r5, #16
   18784:	mov	r0, sp
   18788:	bl	223a0 <_obstack_memory_used@@Base+0x1fc0>
   1878c:	ldm	sp, {r2, r3}
   18790:	ldr	r0, [sp, #8]
   18794:	ldr	r1, [sp, #12]
   18798:	bl	22868 <_obstack_memory_used@@Base+0x2488>
   1879c:	cmp	r0, #0
   187a0:	beq	187ac <putc_unlocked@plt+0x65f4>
   187a4:	sub	sp, fp, #16
   187a8:	pop	{r4, r5, r6, sl, fp, pc}
   187ac:	ldr	r1, [r6]
   187b0:	ldr	r0, [r5]
   187b4:	blx	r4
   187b8:	sub	sp, fp, #16
   187bc:	pop	{r4, r5, r6, sl, fp, pc}
   187c0:	push	{r4, r5, r6, sl, fp, lr}
   187c4:	add	fp, sp, #16
   187c8:	sub	sp, sp, #16
   187cc:	mov	r4, r2
   187d0:	mov	r6, r1
   187d4:	mov	r5, r0
   187d8:	add	r1, r1, #16
   187dc:	add	r0, sp, #8
   187e0:	bl	22394 <_obstack_memory_used@@Base+0x1fb4>
   187e4:	add	r1, r5, #16
   187e8:	mov	r0, sp
   187ec:	bl	22394 <_obstack_memory_used@@Base+0x1fb4>
   187f0:	ldm	sp, {r2, r3}
   187f4:	ldr	r0, [sp, #8]
   187f8:	ldr	r1, [sp, #12]
   187fc:	bl	22868 <_obstack_memory_used@@Base+0x2488>
   18800:	cmp	r0, #0
   18804:	beq	18810 <putc_unlocked@plt+0x6658>
   18808:	sub	sp, fp, #16
   1880c:	pop	{r4, r5, r6, sl, fp, pc}
   18810:	ldr	r1, [r6]
   18814:	ldr	r0, [r5]
   18818:	blx	r4
   1881c:	sub	sp, fp, #16
   18820:	pop	{r4, r5, r6, sl, fp, pc}
   18824:	push	{r4, r5, r6, sl, fp, lr}
   18828:	add	fp, sp, #16
   1882c:	sub	sp, sp, #16
   18830:	mov	r4, r2
   18834:	mov	r6, r1
   18838:	mov	r5, r0
   1883c:	add	r1, r1, #16
   18840:	add	r0, sp, #8
   18844:	bl	22388 <_obstack_memory_used@@Base+0x1fa8>
   18848:	add	r1, r5, #16
   1884c:	mov	r0, sp
   18850:	bl	22388 <_obstack_memory_used@@Base+0x1fa8>
   18854:	ldm	sp, {r2, r3}
   18858:	ldr	r0, [sp, #8]
   1885c:	ldr	r1, [sp, #12]
   18860:	bl	22868 <_obstack_memory_used@@Base+0x2488>
   18864:	cmp	r0, #0
   18868:	beq	18874 <putc_unlocked@plt+0x66bc>
   1886c:	sub	sp, fp, #16
   18870:	pop	{r4, r5, r6, sl, fp, pc}
   18874:	ldr	r1, [r6]
   18878:	ldr	r0, [r5]
   1887c:	blx	r4
   18880:	sub	sp, fp, #16
   18884:	pop	{r4, r5, r6, sl, fp, pc}
   18888:	push	{r4, r5, r6, sl, fp, lr}
   1888c:	add	fp, sp, #16
   18890:	sub	sp, sp, #16
   18894:	mov	r6, r2
   18898:	mov	r5, r1
   1889c:	mov	r4, r0
   188a0:	add	r1, r1, #16
   188a4:	add	r0, sp, #8
   188a8:	bl	188f0 <putc_unlocked@plt+0x6738>
   188ac:	add	r1, r4, #16
   188b0:	mov	r0, sp
   188b4:	bl	188f0 <putc_unlocked@plt+0x6738>
   188b8:	ldm	sp, {r2, r3}
   188bc:	ldr	r0, [sp, #8]
   188c0:	ldr	r1, [sp, #12]
   188c4:	bl	22868 <_obstack_memory_used@@Base+0x2488>
   188c8:	cmp	r0, #0
   188cc:	beq	188d8 <putc_unlocked@plt+0x6720>
   188d0:	sub	sp, fp, #16
   188d4:	pop	{r4, r5, r6, sl, fp, pc}
   188d8:	ldr	r1, [r5]
   188dc:	ldr	r0, [r4]
   188e0:	mov	r2, r6
   188e4:	sub	sp, fp, #16
   188e8:	pop	{r4, r5, r6, sl, fp, lr}
   188ec:	bx	r2
   188f0:	push	{r4, sl, fp, lr}
   188f4:	add	fp, sp, #8
   188f8:	sub	sp, sp, #8
   188fc:	mov	r4, r0
   18900:	mov	r0, sp
   18904:	bl	223a0 <_obstack_memory_used@@Base+0x1fc0>
   18908:	ldm	sp, {r0, r1}
   1890c:	stm	r4, {r0, r1}
   18910:	sub	sp, fp, #8
   18914:	pop	{r4, sl, fp, pc}
   18918:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1891c:	add	fp, sp, #24
   18920:	sub	sp, sp, #672	; 0x2a0
   18924:	mov	r8, r1
   18928:	mov	r4, r0
   1892c:	bl	18e48 <putc_unlocked@plt+0x6c90>
   18930:	movw	r0, #38344	; 0x95c8
   18934:	movt	r0, #3
   18938:	ldrb	r0, [r0]
   1893c:	cmp	r0, #1
   18940:	bne	18988 <putc_unlocked@plt+0x67d0>
   18944:	movw	r0, #41476	; 0xa204
   18948:	movt	r0, #3
   1894c:	ldr	r0, [r0]
   18950:	movw	r1, #37712	; 0x9350
   18954:	movt	r1, #3
   18958:	ldr	r1, [r1]
   1895c:	subs	r6, r1, #4
   18960:	movne	r6, r0
   18964:	add	r0, sp, #20
   18968:	mov	r1, r4
   1896c:	bl	195f4 <putc_unlocked@plt+0x743c>
   18970:	mov	r3, r0
   18974:	movw	r1, #27338	; 0x6aca
   18978:	movt	r1, #2
   1897c:	mov	r0, #1
   18980:	mov	r2, r6
   18984:	bl	12014 <__printf_chk@plt>
   18988:	movw	r0, #37789	; 0x939d
   1898c:	movt	r0, #3
   18990:	ldrb	r0, [r0]
   18994:	cmp	r0, #1
   18998:	bne	18a24 <putc_unlocked@plt+0x686c>
   1899c:	movw	r0, #41480	; 0xa208
   189a0:	movt	r0, #3
   189a4:	ldr	r0, [r0]
   189a8:	movw	r1, #37712	; 0x9350
   189ac:	movt	r1, #3
   189b0:	ldr	r1, [r1]
   189b4:	subs	r6, r1, #4
   189b8:	movne	r6, r0
   189bc:	ldrb	r0, [r4, #132]	; 0x84
   189c0:	cmp	r0, #0
   189c4:	beq	18a08 <putc_unlocked@plt+0x6850>
   189c8:	ldrd	r0, [r4, #80]	; 0x50
   189cc:	movw	r2, #38324	; 0x95b4
   189d0:	movt	r2, #3
   189d4:	ldr	r3, [r2]
   189d8:	movw	r2, #38336	; 0x95c0
   189dc:	movt	r2, #3
   189e0:	ldm	r2, {r2, r7}
   189e4:	mov	ip, #0
   189e8:	mov	r5, #512	; 0x200
   189ec:	stm	sp, {r5, ip}
   189f0:	str	r2, [sp, #8]
   189f4:	str	r7, [sp, #12]
   189f8:	add	r2, sp, #20
   189fc:	bl	1cd68 <putc_unlocked@plt+0xabb0>
   18a00:	mov	r3, r0
   18a04:	b	18a10 <putc_unlocked@plt+0x6858>
   18a08:	movw	r3, #26842	; 0x68da
   18a0c:	movt	r3, #2
   18a10:	movw	r1, #27338	; 0x6aca
   18a14:	movt	r1, #2
   18a18:	mov	r0, #1
   18a1c:	mov	r2, r6
   18a20:	bl	12014 <__printf_chk@plt>
   18a24:	movw	r0, #37788	; 0x939c
   18a28:	movt	r0, #3
   18a2c:	ldrb	r0, [r0]
   18a30:	cmp	r0, #1
   18a34:	bne	18a6c <putc_unlocked@plt+0x68b4>
   18a38:	movw	r0, #41500	; 0xa21c
   18a3c:	movt	r0, #3
   18a40:	ldr	r0, [r0]
   18a44:	movw	r1, #37712	; 0x9350
   18a48:	movt	r1, #3
   18a4c:	ldr	r1, [r1]
   18a50:	subs	r2, r1, #4
   18a54:	movne	r2, r0
   18a58:	ldr	r3, [r4, #128]	; 0x80
   18a5c:	movw	r1, #27338	; 0x6aca
   18a60:	movt	r1, #2
   18a64:	mov	r0, #1
   18a68:	bl	12014 <__printf_chk@plt>
   18a6c:	mov	r0, r4
   18a70:	mov	r1, #0
   18a74:	mov	r2, #0
   18a78:	mov	r3, r8
   18a7c:	bl	1961c <putc_unlocked@plt+0x7464>
   18a80:	movw	r0, #37724	; 0x935c
   18a84:	movt	r0, #3
   18a88:	ldr	r0, [r0]
   18a8c:	cmp	r0, #0
   18a90:	beq	18aa4 <putc_unlocked@plt+0x68ec>
   18a94:	ldr	r1, [r4, #32]
   18a98:	ldr	r2, [r4, #120]	; 0x78
   18a9c:	ldrb	r0, [r4, #132]	; 0x84
   18aa0:	bl	19718 <putc_unlocked@plt+0x7560>
   18aa4:	sub	sp, fp, #24
   18aa8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18aac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18ab0:	add	fp, sp, #28
   18ab4:	sub	sp, sp, #4
   18ab8:	mov	r8, r0
   18abc:	movw	r0, #37900	; 0x940c
   18ac0:	movt	r0, #3
   18ac4:	ldr	r0, [r0]
   18ac8:	cmp	r0, #0
   18acc:	beq	18ba0 <putc_unlocked@plt+0x69e8>
   18ad0:	mov	sl, #0
   18ad4:	movw	r9, #38360	; 0x95d8
   18ad8:	movt	r9, #3
   18adc:	mov	r5, #0
   18ae0:	b	18b24 <putc_unlocked@plt+0x696c>
   18ae4:	add	r5, r5, #2
   18ae8:	mov	r4, #32
   18aec:	mov	r0, r8
   18af0:	bl	12188 <putchar_unlocked@plt>
   18af4:	mov	r0, r4
   18af8:	bl	12188 <putchar_unlocked@plt>
   18afc:	mov	r0, r6
   18b00:	mov	r1, r5
   18b04:	bl	18918 <putc_unlocked@plt+0x6760>
   18b08:	add	r5, r5, r7
   18b0c:	add	sl, sl, #1
   18b10:	movw	r0, #37900	; 0x940c
   18b14:	movt	r0, #3
   18b18:	ldr	r0, [r0]
   18b1c:	cmp	sl, r0
   18b20:	bcs	18ba0 <putc_unlocked@plt+0x69e8>
   18b24:	movw	r0, #41468	; 0xa1fc
   18b28:	movt	r0, #3
   18b2c:	ldr	r0, [r0]
   18b30:	ldr	r6, [r0, sl, lsl #2]
   18b34:	ldr	r0, [r9]
   18b38:	cmp	r0, #0
   18b3c:	mov	r7, #0
   18b40:	beq	18b50 <putc_unlocked@plt+0x6998>
   18b44:	mov	r0, r6
   18b48:	bl	19b3c <putc_unlocked@plt+0x7984>
   18b4c:	mov	r7, r0
   18b50:	cmp	sl, #0
   18b54:	beq	18afc <putc_unlocked@plt+0x6944>
   18b58:	ldr	r0, [r9]
   18b5c:	cmp	r0, #0
   18b60:	beq	18ae4 <putc_unlocked@plt+0x692c>
   18b64:	mvn	r1, #2
   18b68:	sub	r1, r1, r7
   18b6c:	cmp	r5, r1
   18b70:	addls	r1, r5, r7
   18b74:	addls	r1, r1, #2
   18b78:	cmpls	r1, r0
   18b7c:	bcc	18ae4 <putc_unlocked@plt+0x692c>
   18b80:	movw	r0, #38356	; 0x95d4
   18b84:	movt	r0, #3
   18b88:	ldrb	r0, [r0]
   18b8c:	cmp	r0, #0
   18b90:	mov	r4, #10
   18b94:	movwne	r4, #0
   18b98:	mov	r5, #0
   18b9c:	b	18aec <putc_unlocked@plt+0x6934>
   18ba0:	movw	r0, #38356	; 0x95d4
   18ba4:	movt	r0, #3
   18ba8:	ldrb	r1, [r0]
   18bac:	mov	r0, #10
   18bb0:	cmp	r1, #0
   18bb4:	movwne	r0, #0
   18bb8:	sub	sp, fp, #28
   18bbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18bc0:	b	12188 <putchar_unlocked@plt>
   18bc4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18bc8:	add	fp, sp, #28
   18bcc:	sub	sp, sp, #12
   18bd0:	mov	r0, #1
   18bd4:	bl	19cc8 <putc_unlocked@plt+0x7b10>
   18bd8:	movw	r6, #37900	; 0x940c
   18bdc:	movt	r6, #3
   18be0:	ldr	r1, [r6]
   18be4:	udiv	r7, r1, r0
   18be8:	mls	r1, r7, r0, r1
   18bec:	cmp	r1, #0
   18bf0:	addne	r7, r7, #1
   18bf4:	cmp	r7, #0
   18bf8:	beq	18d14 <putc_unlocked@plt+0x6b5c>
   18bfc:	movw	r1, #41944	; 0xa3d8
   18c00:	movt	r1, #3
   18c04:	ldr	r1, [r1]
   18c08:	add	r0, r0, r0, lsl #1
   18c0c:	add	r0, r1, r0, lsl #2
   18c10:	sub	r4, r0, #4
   18c14:	mov	r5, #0
   18c18:	movw	r0, #41468	; 0xa1fc
   18c1c:	movt	r0, #3
   18c20:	str	r4, [sp, #4]
   18c24:	b	18c60 <putc_unlocked@plt+0x6aa8>
   18c28:	movw	r0, #38356	; 0x95d4
   18c2c:	movt	r0, #3
   18c30:	ldrb	r0, [r0]
   18c34:	cmp	r0, #0
   18c38:	mov	r0, #10
   18c3c:	movwne	r0, #0
   18c40:	bl	12188 <putchar_unlocked@plt>
   18c44:	ldr	r5, [sp]
   18c48:	add	r5, r5, #1
   18c4c:	cmp	r5, r7
   18c50:	ldr	r4, [sp, #4]
   18c54:	movw	r0, #41468	; 0xa1fc
   18c58:	movt	r0, #3
   18c5c:	bcs	18d14 <putc_unlocked@plt+0x6b5c>
   18c60:	ldr	r0, [r0]
   18c64:	ldr	r8, [r0, r5, lsl #2]
   18c68:	mov	r0, r8
   18c6c:	bl	19b3c <putc_unlocked@plt+0x7984>
   18c70:	str	r0, [sp, #8]
   18c74:	ldr	r0, [r4]
   18c78:	ldr	r9, [r0]
   18c7c:	mov	r0, r8
   18c80:	mov	r1, #0
   18c84:	bl	18918 <putc_unlocked@plt+0x6760>
   18c88:	str	r5, [sp]
   18c8c:	add	r8, r5, r7
   18c90:	ldr	r0, [r6]
   18c94:	cmp	r8, r0
   18c98:	bcs	18c28 <putc_unlocked@plt+0x6a70>
   18c9c:	mov	r5, #0
   18ca0:	mov	sl, #4
   18ca4:	ldr	r0, [sp, #8]
   18ca8:	add	r0, r0, r5
   18cac:	add	r5, r9, r5
   18cb0:	mov	r1, r5
   18cb4:	bl	19e64 <putc_unlocked@plt+0x7cac>
   18cb8:	movw	r0, #41468	; 0xa1fc
   18cbc:	movt	r0, #3
   18cc0:	ldr	r0, [r0]
   18cc4:	mov	r4, r7
   18cc8:	mov	r7, r6
   18ccc:	ldr	r6, [r0, r8, lsl #2]
   18cd0:	mov	r0, r6
   18cd4:	bl	19b3c <putc_unlocked@plt+0x7984>
   18cd8:	str	r0, [sp, #8]
   18cdc:	ldr	r0, [sp, #4]
   18ce0:	ldr	r0, [r0]
   18ce4:	ldr	r9, [r0, sl]
   18ce8:	mov	r0, r6
   18cec:	mov	r6, r7
   18cf0:	mov	r7, r4
   18cf4:	mov	r1, r5
   18cf8:	bl	18918 <putc_unlocked@plt+0x6760>
   18cfc:	add	r8, r8, r4
   18d00:	add	sl, sl, #4
   18d04:	ldr	r0, [r6]
   18d08:	cmp	r8, r0
   18d0c:	bcc	18ca4 <putc_unlocked@plt+0x6aec>
   18d10:	b	18c28 <putc_unlocked@plt+0x6a70>
   18d14:	sub	sp, fp, #28
   18d18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18d1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18d20:	add	fp, sp, #28
   18d24:	sub	sp, sp, #4
   18d28:	mov	r5, #0
   18d2c:	mov	r0, #0
   18d30:	bl	19cc8 <putc_unlocked@plt+0x7b10>
   18d34:	mov	r4, r0
   18d38:	movw	r0, #41944	; 0xa3d8
   18d3c:	movt	r0, #3
   18d40:	ldr	r0, [r0]
   18d44:	add	r1, r4, r4, lsl #1
   18d48:	add	r7, r0, r1, lsl #2
   18d4c:	movw	r0, #41468	; 0xa1fc
   18d50:	movt	r0, #3
   18d54:	ldr	r0, [r0]
   18d58:	ldr	r8, [r0]
   18d5c:	mov	r0, r8
   18d60:	bl	19b3c <putc_unlocked@plt+0x7984>
   18d64:	mov	r6, r0
   18d68:	ldr	r0, [r7, #-4]!
   18d6c:	ldr	r9, [r0]
   18d70:	mov	r0, r8
   18d74:	mov	r1, #0
   18d78:	bl	18918 <putc_unlocked@plt+0x6760>
   18d7c:	movw	r0, #37900	; 0x940c
   18d80:	movt	r0, #3
   18d84:	ldr	r0, [r0]
   18d88:	cmp	r0, #2
   18d8c:	bcc	18e24 <putc_unlocked@plt+0x6c6c>
   18d90:	mov	sl, #1
   18d94:	b	18df0 <putc_unlocked@plt+0x6c38>
   18d98:	add	r0, r6, r5
   18d9c:	add	r5, r9, r5
   18da0:	mov	r1, r5
   18da4:	bl	19e64 <putc_unlocked@plt+0x7cac>
   18da8:	movw	r0, #41468	; 0xa1fc
   18dac:	movt	r0, #3
   18db0:	ldr	r0, [r0]
   18db4:	ldr	r6, [r0, sl, lsl #2]
   18db8:	mov	r0, r6
   18dbc:	mov	r1, r5
   18dc0:	bl	18918 <putc_unlocked@plt+0x6760>
   18dc4:	mov	r0, r6
   18dc8:	bl	19b3c <putc_unlocked@plt+0x7984>
   18dcc:	mov	r6, r0
   18dd0:	ldr	r0, [r7]
   18dd4:	ldr	r9, [r0, r8, lsl #2]
   18dd8:	add	sl, sl, #1
   18ddc:	movw	r0, #37900	; 0x940c
   18de0:	movt	r0, #3
   18de4:	ldr	r0, [r0]
   18de8:	cmp	sl, r0
   18dec:	bcs	18e24 <putc_unlocked@plt+0x6c6c>
   18df0:	udiv	r0, sl, r4
   18df4:	mls	r8, r0, r4, sl
   18df8:	cmp	r8, #0
   18dfc:	bne	18d98 <putc_unlocked@plt+0x6be0>
   18e00:	movw	r0, #38356	; 0x95d4
   18e04:	movt	r0, #3
   18e08:	ldrb	r0, [r0]
   18e0c:	cmp	r0, #0
   18e10:	mov	r0, #10
   18e14:	movwne	r0, #0
   18e18:	bl	12188 <putchar_unlocked@plt>
   18e1c:	mov	r5, #0
   18e20:	b	18da8 <putc_unlocked@plt+0x6bf0>
   18e24:	movw	r0, #38356	; 0x95d4
   18e28:	movt	r0, #3
   18e2c:	ldrb	r1, [r0]
   18e30:	mov	r0, #10
   18e34:	cmp	r1, #0
   18e38:	movwne	r0, #0
   18e3c:	sub	sp, fp, #28
   18e40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18e44:	b	12188 <putchar_unlocked@plt>
   18e48:	push	{r4, sl, fp, lr}
   18e4c:	add	fp, sp, #8
   18e50:	movw	r0, #37700	; 0x9344
   18e54:	movt	r0, #3
   18e58:	ldrb	r0, [r0]
   18e5c:	cmp	r0, #0
   18e60:	popeq	{r4, sl, fp, pc}
   18e64:	mov	r0, #4
   18e68:	bl	14278 <putc_unlocked@plt+0x20c0>
   18e6c:	cmp	r0, #0
   18e70:	beq	18e98 <putc_unlocked@plt+0x6ce0>
   18e74:	movw	r4, #37344	; 0x91e0
   18e78:	movt	r4, #3
   18e7c:	mov	r0, r4
   18e80:	bl	15fac <putc_unlocked@plt+0x3df4>
   18e84:	add	r0, r4, #32
   18e88:	bl	15fac <putc_unlocked@plt+0x3df4>
   18e8c:	add	r0, r4, #8
   18e90:	pop	{r4, sl, fp, lr}
   18e94:	b	15fac <putc_unlocked@plt+0x3df4>
   18e98:	pop	{r4, sl, fp, pc}
   18e9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18ea0:	add	fp, sp, #28
   18ea4:	sub	sp, sp, #276	; 0x114
   18ea8:	sub	sp, sp, #4096	; 0x1000
   18eac:	mov	r9, r0
   18eb0:	ldrb	r0, [r0, #132]	; 0x84
   18eb4:	cmp	r0, #0
   18eb8:	beq	18ecc <putc_unlocked@plt+0x6d14>
   18ebc:	add	r0, r9, #16
   18ec0:	sub	r1, fp, #44	; 0x2c
   18ec4:	bl	1b768 <putc_unlocked@plt+0x95b0>
   18ec8:	b	18f00 <putc_unlocked@plt+0x6d48>
   18ecc:	ldr	r0, [r9, #120]	; 0x78
   18ed0:	movw	r1, #16191	; 0x3f3f
   18ed4:	movt	r1, #16191	; 0x3f3f
   18ed8:	str	r1, [fp, #-43]	; 0xffffffd5
   18edc:	str	r1, [fp, #-39]	; 0xffffffd9
   18ee0:	movw	r1, #16191	; 0x3f3f
   18ee4:	strh	r1, [fp, #-35]	; 0xffffffdd
   18ee8:	mov	r1, #0
   18eec:	strb	r1, [fp, #-33]	; 0xffffffdf
   18ef0:	movw	r1, #27314	; 0x6ab2
   18ef4:	movt	r1, #2
   18ef8:	ldrb	r0, [r1, r0]
   18efc:	strb	r0, [fp, #-44]	; 0xffffffd4
   18f00:	movw	r0, #41472	; 0xa200
   18f04:	movt	r0, #3
   18f08:	ldrb	r0, [r0]
   18f0c:	cmp	r0, #0
   18f10:	beq	18f30 <putc_unlocked@plt+0x6d78>
   18f14:	ldr	r0, [r9, #136]	; 0x88
   18f18:	cmp	r0, #1
   18f1c:	beq	18f38 <putc_unlocked@plt+0x6d80>
   18f20:	cmp	r0, #2
   18f24:	bne	18f40 <putc_unlocked@plt+0x6d88>
   18f28:	mov	r0, #43	; 0x2b
   18f2c:	b	18f3c <putc_unlocked@plt+0x6d84>
   18f30:	mov	r0, #0
   18f34:	b	18f3c <putc_unlocked@plt+0x6d84>
   18f38:	mov	r0, #46	; 0x2e
   18f3c:	strb	r0, [fp, #-34]	; 0xffffffde
   18f40:	movw	r0, #38316	; 0x95ac
   18f44:	movt	r0, #3
   18f48:	ldr	r0, [r0]
   18f4c:	cmp	r0, #3
   18f50:	bhi	195f0 <putc_unlocked@plt+0x7438>
   18f54:	add	r1, pc, #0
   18f58:	ldr	pc, [r1, r0, lsl #2]
   18f5c:	andeq	r8, r1, ip, ror #30
   18f60:	andeq	r8, r1, r8, asr #31
   18f64:	andeq	r8, r1, ip, ror pc
   18f68:	andeq	r8, r1, ip, lsl #31
   18f6c:	add	r1, r9, #16
   18f70:	add	r0, sp, #712	; 0x2c8
   18f74:	bl	223a0 <_obstack_memory_used@@Base+0x1fc0>
   18f78:	b	18fd4 <putc_unlocked@plt+0x6e1c>
   18f7c:	add	r1, r9, #16
   18f80:	add	r0, sp, #712	; 0x2c8
   18f84:	bl	22388 <_obstack_memory_used@@Base+0x1fa8>
   18f88:	b	18fd4 <putc_unlocked@plt+0x6e1c>
   18f8c:	add	r1, r9, #16
   18f90:	add	r0, sp, #712	; 0x2c8
   18f94:	bl	188f0 <putc_unlocked@plt+0x6738>
   18f98:	ldr	r0, [sp, #712]	; 0x2c8
   18f9c:	ldr	r1, [sp, #716]	; 0x2cc
   18fa0:	str	r1, [sp, #708]	; 0x2c4
   18fa4:	str	r0, [sp, #704]	; 0x2c0
   18fa8:	mov	r1, #0
   18fac:	cmn	r0, #1
   18fb0:	bne	18fe8 <putc_unlocked@plt+0x6e30>
   18fb4:	ldr	r0, [sp, #708]	; 0x2c4
   18fb8:	add	r0, r0, #1
   18fbc:	clz	r0, r0
   18fc0:	lsr	r1, r0, #5
   18fc4:	b	18fe8 <putc_unlocked@plt+0x6e30>
   18fc8:	add	r1, r9, #16
   18fcc:	add	r0, sp, #712	; 0x2c8
   18fd0:	bl	22394 <_obstack_memory_used@@Base+0x1fb4>
   18fd4:	ldr	r0, [sp, #712]	; 0x2c8
   18fd8:	ldr	r1, [sp, #716]	; 0x2cc
   18fdc:	str	r1, [sp, #708]	; 0x2c4
   18fe0:	str	r0, [sp, #704]	; 0x2c0
   18fe4:	mov	r1, #0
   18fe8:	str	r1, [sp, #24]
   18fec:	movw	r0, #38344	; 0x95c8
   18ff0:	movt	r0, #3
   18ff4:	ldrb	r0, [r0]
   18ff8:	cmp	r0, #1
   18ffc:	bne	19044 <putc_unlocked@plt+0x6e8c>
   19000:	movw	r0, #41476	; 0xa204
   19004:	movt	r0, #3
   19008:	ldr	r4, [r0]
   1900c:	add	r0, sp, #52	; 0x34
   19010:	mov	r1, r9
   19014:	bl	195f4 <putc_unlocked@plt+0x743c>
   19018:	str	r4, [sp]
   1901c:	str	r0, [sp, #4]
   19020:	add	r5, sp, #712	; 0x2c8
   19024:	movw	r3, #27338	; 0x6aca
   19028:	movt	r3, #2
   1902c:	mov	r0, r5
   19030:	mov	r1, #1
   19034:	movw	r2, #3643	; 0xe3b
   19038:	bl	11ff0 <__sprintf_chk@plt>
   1903c:	add	r5, r5, r0
   19040:	b	19048 <putc_unlocked@plt+0x6e90>
   19044:	add	r5, sp, #712	; 0x2c8
   19048:	movw	r0, #37789	; 0x939d
   1904c:	movt	r0, #3
   19050:	ldrb	r0, [r0]
   19054:	cmp	r0, #1
   19058:	bne	19110 <putc_unlocked@plt+0x6f58>
   1905c:	ldrb	r0, [r9, #132]	; 0x84
   19060:	cmp	r0, #0
   19064:	beq	190ac <putc_unlocked@plt+0x6ef4>
   19068:	add	r0, r9, #80	; 0x50
   1906c:	ldrd	r0, [r0]
   19070:	movw	r2, #38324	; 0x95b4
   19074:	movt	r2, #3
   19078:	ldr	r3, [r2]
   1907c:	movw	r2, #38336	; 0x95c0
   19080:	movt	r2, #3
   19084:	ldm	r2, {r2, r7}
   19088:	mov	r6, #0
   1908c:	mov	r4, #512	; 0x200
   19090:	stm	sp, {r4, r6}
   19094:	str	r2, [sp, #8]
   19098:	str	r7, [sp, #12]
   1909c:	add	r2, sp, #52	; 0x34
   190a0:	bl	1cd68 <putc_unlocked@plt+0xabb0>
   190a4:	mov	r6, r0
   190a8:	b	190b4 <putc_unlocked@plt+0x6efc>
   190ac:	movw	r6, #26842	; 0x68da
   190b0:	movt	r6, #2
   190b4:	movw	r0, #41480	; 0xa208
   190b8:	movt	r0, #3
   190bc:	ldr	r4, [r0]
   190c0:	mov	r0, r6
   190c4:	mov	r1, #0
   190c8:	bl	1e1e4 <putc_unlocked@plt+0xc02c>
   190cc:	sub	r7, r4, r0
   190d0:	cmp	r7, #1
   190d4:	blt	190f8 <putc_unlocked@plt+0x6f40>
   190d8:	sub	r2, r4, r0
   190dc:	mov	r0, r5
   190e0:	mov	r1, #32
   190e4:	bl	12008 <memset@plt>
   190e8:	sub	r7, r7, #1
   190ec:	add	r5, r5, #1
   190f0:	cmp	r7, #0
   190f4:	bgt	190e8 <putc_unlocked@plt+0x6f30>
   190f8:	ldrb	r0, [r6], #1
   190fc:	strb	r0, [r5], #1
   19100:	cmp	r0, #0
   19104:	bne	190f8 <putc_unlocked@plt+0x6f40>
   19108:	mov	r0, #32
   1910c:	strb	r0, [r5, #-1]
   19110:	movw	r0, #41484	; 0xa20c
   19114:	movt	r0, #3
   19118:	ldr	r6, [r0]
   1911c:	ldrb	r0, [r9, #132]	; 0x84
   19120:	cmp	r0, #0
   19124:	beq	1913c <putc_unlocked@plt+0x6f84>
   19128:	ldr	r0, [r9, #36]	; 0x24
   1912c:	add	r2, sp, #52	; 0x34
   19130:	mov	r1, #0
   19134:	bl	1dcb0 <putc_unlocked@plt+0xbaf8>
   19138:	b	19144 <putc_unlocked@plt+0x6f8c>
   1913c:	movw	r0, #26842	; 0x68da
   19140:	movt	r0, #2
   19144:	sub	r1, fp, #44	; 0x2c
   19148:	stm	sp, {r1, r6}
   1914c:	str	r0, [sp, #8]
   19150:	movw	r3, #27325	; 0x6abd
   19154:	movt	r3, #2
   19158:	mov	r0, r5
   1915c:	mov	r1, #1
   19160:	mvn	r2, #0
   19164:	bl	11ff0 <__sprintf_chk@plt>
   19168:	add	r6, r5, r0
   1916c:	bl	16ca8 <putc_unlocked@plt+0x4af0>
   19170:	movw	r7, #38320	; 0x95b0
   19174:	movt	r7, #3
   19178:	ldrb	r0, [r7]
   1917c:	cmp	r0, #1
   19180:	movw	sl, #38346	; 0x95ca
   19184:	movt	sl, #3
   19188:	movw	r4, #38348	; 0x95cc
   1918c:	movt	r4, #3
   19190:	movw	r8, #37788	; 0x939c
   19194:	movt	r8, #3
   19198:	bne	191c0 <putc_unlocked@plt+0x7008>
   1919c:	ldrb	r0, [sl]
   191a0:	cmp	r0, #1
   191a4:	bne	191c0 <putc_unlocked@plt+0x7008>
   191a8:	ldrb	r0, [r4]
   191ac:	cmp	r0, #0
   191b0:	bne	191c0 <putc_unlocked@plt+0x7008>
   191b4:	ldrb	r0, [r8]
   191b8:	cmp	r0, #1
   191bc:	bne	195e8 <putc_unlocked@plt+0x7430>
   191c0:	add	r5, sp, #712	; 0x2c8
   191c4:	sub	r1, r6, r5
   191c8:	mov	r0, r5
   191cc:	bl	1702c <putc_unlocked@plt+0x4e74>
   191d0:	ldrb	r0, [r7]
   191d4:	cmp	r0, #0
   191d8:	bne	191f4 <putc_unlocked@plt+0x703c>
   191dc:	ldrb	r2, [r9, #132]	; 0x84
   191e0:	movw	r0, #41488	; 0xa210
   191e4:	movt	r0, #3
   191e8:	ldr	r1, [r0]
   191ec:	ldr	r0, [r9, #40]	; 0x28
   191f0:	bl	1a020 <putc_unlocked@plt+0x7e68>
   191f4:	ldrb	r0, [sl]
   191f8:	cmp	r0, #0
   191fc:	bne	19218 <putc_unlocked@plt+0x7060>
   19200:	ldrb	r2, [r9, #132]	; 0x84
   19204:	movw	r0, #41492	; 0xa214
   19208:	movt	r0, #3
   1920c:	ldr	r1, [r0]
   19210:	ldr	r0, [r9, #44]	; 0x2c
   19214:	bl	1a080 <putc_unlocked@plt+0x7ec8>
   19218:	ldrb	r0, [r4]
   1921c:	cmp	r0, #1
   19220:	bne	1923c <putc_unlocked@plt+0x7084>
   19224:	ldrb	r2, [r9, #132]	; 0x84
   19228:	movw	r0, #41496	; 0xa218
   1922c:	movt	r0, #3
   19230:	ldr	r1, [r0]
   19234:	ldr	r0, [r9, #40]	; 0x28
   19238:	bl	1a020 <putc_unlocked@plt+0x7e68>
   1923c:	ldrb	r0, [r8]
   19240:	cmp	r0, #1
   19244:	bne	19268 <putc_unlocked@plt+0x70b0>
   19248:	ldr	r0, [r9, #128]	; 0x80
   1924c:	movw	r1, #41500	; 0xa21c
   19250:	movt	r1, #3
   19254:	ldr	r1, [r1]
   19258:	str	r1, [sp]
   1925c:	mov	r2, #0
   19260:	mov	r3, #0
   19264:	bl	1a0e0 <putc_unlocked@plt+0x7f28>
   19268:	ldrb	r0, [r9, #132]	; 0x84
   1926c:	cmp	r0, #0
   19270:	beq	19328 <putc_unlocked@plt+0x7170>
   19274:	ldr	r0, [r9, #32]
   19278:	and	r0, r0, #45056	; 0xb000
   1927c:	orr	r0, r0, #16384	; 0x4000
   19280:	cmp	r0, #24576	; 0x6000
   19284:	bne	19334 <putc_unlocked@plt+0x717c>
   19288:	add	r4, r9, #48	; 0x30
   1928c:	movw	r0, #41504	; 0xa220
   19290:	movt	r0, #3
   19294:	ldr	r7, [r0]
   19298:	movw	sl, #41508	; 0xa224
   1929c:	movt	sl, #3
   192a0:	ldr	r6, [sl]
   192a4:	movw	r0, #41512	; 0xa228
   192a8:	movt	r0, #3
   192ac:	ldr	r0, [r0]
   192b0:	str	r0, [sp, #20]
   192b4:	ldrd	r0, [r4]
   192b8:	bl	11c9c <gnu_dev_major@plt>
   192bc:	add	r2, sp, #52	; 0x34
   192c0:	mov	r1, #0
   192c4:	bl	1dcb0 <putc_unlocked@plt+0xbaf8>
   192c8:	mov	r8, r0
   192cc:	ldr	sl, [sl]
   192d0:	ldrd	r0, [r4]
   192d4:	bl	11cf0 <gnu_dev_minor@plt>
   192d8:	add	r2, sp, #31
   192dc:	mov	r1, #0
   192e0:	bl	1dcb0 <putc_unlocked@plt+0xbaf8>
   192e4:	ldr	r1, [sp, #20]
   192e8:	sub	r1, r1, #2
   192ec:	sub	r2, r1, r7
   192f0:	sub	r2, r2, r6
   192f4:	cmp	r2, #0
   192f8:	subgt	r7, r1, r6
   192fc:	stm	sp, {r7, r8, sl}
   19300:	str	r0, [sp, #12]
   19304:	movw	r3, #27333	; 0x6ac5
   19308:	movt	r3, #2
   1930c:	mov	r0, r5
   19310:	mov	r1, #1
   19314:	mvn	r2, #0
   19318:	bl	11ff0 <__sprintf_chk@plt>
   1931c:	add	r5, r5, r0
   19320:	ldr	r4, [sp, #24]
   19324:	b	193e0 <putc_unlocked@plt+0x7228>
   19328:	movw	r6, #26842	; 0x68da
   1932c:	movt	r6, #2
   19330:	b	19378 <putc_unlocked@plt+0x71c0>
   19334:	add	r0, r9, #64	; 0x40
   19338:	ldrd	r0, [r0]
   1933c:	bl	17dc8 <putc_unlocked@plt+0x5c10>
   19340:	movw	r2, #38328	; 0x95b8
   19344:	movt	r2, #3
   19348:	ldr	r3, [r2]
   1934c:	movw	r2, #37536	; 0x92a0
   19350:	movt	r2, #3
   19354:	ldm	r2, {r2, r7}
   19358:	mov	r6, #0
   1935c:	mov	r4, #1
   19360:	stm	sp, {r4, r6}
   19364:	str	r2, [sp, #8]
   19368:	str	r7, [sp, #12]
   1936c:	add	r2, sp, #52	; 0x34
   19370:	bl	1cd68 <putc_unlocked@plt+0xabb0>
   19374:	mov	r6, r0
   19378:	movw	r0, #41512	; 0xa228
   1937c:	movt	r0, #3
   19380:	ldr	r4, [r0]
   19384:	mov	r0, r6
   19388:	mov	r1, #0
   1938c:	bl	1e1e4 <putc_unlocked@plt+0xc02c>
   19390:	sub	r7, r4, r0
   19394:	cmp	r7, #1
   19398:	blt	193c4 <putc_unlocked@plt+0x720c>
   1939c:	sub	r2, r4, r0
   193a0:	mov	r0, r5
   193a4:	mov	r1, #32
   193a8:	bl	12008 <memset@plt>
   193ac:	ldr	r4, [sp, #24]
   193b0:	sub	r7, r7, #1
   193b4:	add	r5, r5, #1
   193b8:	cmp	r7, #0
   193bc:	bgt	193b0 <putc_unlocked@plt+0x71f8>
   193c0:	b	193c8 <putc_unlocked@plt+0x7210>
   193c4:	ldr	r4, [sp, #24]
   193c8:	ldrb	r0, [r6], #1
   193cc:	strb	r0, [r5], #1
   193d0:	cmp	r0, #0
   193d4:	bne	193c8 <putc_unlocked@plt+0x7210>
   193d8:	mov	r0, #32
   193dc:	strb	r0, [r5, #-1]
   193e0:	mov	r0, #1
   193e4:	strb	r0, [r5]
   193e8:	ldrb	r0, [r9, #132]	; 0x84
   193ec:	clz	r0, r0
   193f0:	lsr	r0, r0, #5
   193f4:	orrs	r0, r4, r0
   193f8:	bne	194c8 <putc_unlocked@plt+0x7310>
   193fc:	movw	sl, #37780	; 0x9394
   19400:	movt	sl, #3
   19404:	ldr	r0, [sl]
   19408:	add	r1, sp, #704	; 0x2c0
   1940c:	add	r2, sp, #52	; 0x34
   19410:	bl	22488 <_obstack_memory_used@@Base+0x20a8>
   19414:	cmp	r0, #0
   19418:	beq	194bc <putc_unlocked@plt+0x7304>
   1941c:	movw	r6, #37692	; 0x933c
   19420:	movt	r6, #3
   19424:	ldm	r6, {r0, r1}
   19428:	ldr	r2, [sp, #704]	; 0x2c0
   1942c:	ldr	r3, [sp, #708]	; 0x2c4
   19430:	bl	22868 <_obstack_memory_used@@Base+0x2488>
   19434:	cmn	r0, #1
   19438:	bgt	19448 <putc_unlocked@plt+0x7290>
   1943c:	movw	r0, #37692	; 0x933c
   19440:	movt	r0, #3
   19444:	bl	1bcf0 <putc_unlocked@plt+0x9b38>
   19448:	ldr	r8, [r6]
   1944c:	ldr	r4, [r6, #4]
   19450:	movw	r0, #15700	; 0x3d54
   19454:	movt	r0, #65295	; 0xff0f
   19458:	add	r0, r8, r0
   1945c:	ldr	r6, [sp, #704]	; 0x2c0
   19460:	ldr	r7, [sp, #708]	; 0x2c4
   19464:	mov	r1, r4
   19468:	mov	r2, r6
   1946c:	mov	r3, r7
   19470:	bl	22868 <_obstack_memory_used@@Base+0x2488>
   19474:	mov	r1, #0
   19478:	cmn	r0, #1
   1947c:	bgt	19498 <putc_unlocked@plt+0x72e0>
   19480:	mov	r0, r6
   19484:	mov	r1, r7
   19488:	mov	r2, r8
   1948c:	mov	r3, r4
   19490:	bl	22868 <_obstack_memory_used@@Base+0x2488>
   19494:	lsr	r1, r0, #31
   19498:	ldr	r3, [sl]
   1949c:	ldr	r0, [sp, #708]	; 0x2c4
   194a0:	str	r0, [sp]
   194a4:	add	r2, sp, #52	; 0x34
   194a8:	mov	r0, r5
   194ac:	bl	1a170 <putc_unlocked@plt+0x7fb8>
   194b0:	cmp	r0, #0
   194b4:	ldr	r4, [sp, #24]
   194b8:	bne	19528 <putc_unlocked@plt+0x7370>
   194bc:	ldrb	r0, [r5]
   194c0:	cmp	r0, #0
   194c4:	beq	19524 <putc_unlocked@plt+0x736c>
   194c8:	bl	1a1d8 <putc_unlocked@plt+0x8020>
   194cc:	mov	r6, r0
   194d0:	ldrb	r0, [r9, #132]	; 0x84
   194d4:	clz	r0, r0
   194d8:	lsr	r0, r0, #5
   194dc:	orrs	r0, r4, r0
   194e0:	beq	194f0 <putc_unlocked@plt+0x7338>
   194e4:	movw	r0, #26842	; 0x68da
   194e8:	movt	r0, #2
   194ec:	b	194fc <putc_unlocked@plt+0x7344>
   194f0:	ldr	r0, [sp, #704]	; 0x2c0
   194f4:	add	r1, sp, #31
   194f8:	bl	1a274 <putc_unlocked@plt+0x80bc>
   194fc:	str	r6, [sp]
   19500:	str	r0, [sp, #4]
   19504:	movw	r3, #27338	; 0x6aca
   19508:	movt	r3, #2
   1950c:	mov	r0, r5
   19510:	mov	r1, #1
   19514:	mvn	r2, #0
   19518:	bl	11ff0 <__sprintf_chk@plt>
   1951c:	add	r1, r5, r0
   19520:	b	19534 <putc_unlocked@plt+0x737c>
   19524:	mov	r0, #0
   19528:	mov	r1, #32
   1952c:	strb	r1, [r5, r0]!
   19530:	add	r1, r5, #1
   19534:	add	r0, sp, #712	; 0x2c8
   19538:	sub	r5, r1, r0
   1953c:	mov	r1, r5
   19540:	bl	1702c <putc_unlocked@plt+0x4e74>
   19544:	movw	r2, #37796	; 0x93a4
   19548:	movt	r2, #3
   1954c:	mov	r0, r9
   19550:	mov	r1, #0
   19554:	mov	r3, r5
   19558:	bl	1961c <putc_unlocked@plt+0x7464>
   1955c:	ldr	r2, [r9, #120]	; 0x78
   19560:	cmp	r2, #6
   19564:	bne	195c0 <putc_unlocked@plt+0x7408>
   19568:	mov	r6, r0
   1956c:	ldr	r0, [r9, #4]
   19570:	cmp	r0, #0
   19574:	beq	195e0 <putc_unlocked@plt+0x7428>
   19578:	movw	r0, #27343	; 0x6acf
   1957c:	movt	r0, #2
   19580:	bl	16eb4 <putc_unlocked@plt+0x4cfc>
   19584:	add	r0, r6, r5
   19588:	add	r3, r0, #4
   1958c:	mov	r0, r9
   19590:	mov	r1, #1
   19594:	mov	r2, #0
   19598:	bl	1961c <putc_unlocked@plt+0x7464>
   1959c:	movw	r0, #37724	; 0x935c
   195a0:	movt	r0, #3
   195a4:	ldr	r0, [r0]
   195a8:	cmp	r0, #0
   195ac:	beq	195e0 <putc_unlocked@plt+0x7428>
   195b0:	ldr	r1, [r9, #124]	; 0x7c
   195b4:	mov	r0, #1
   195b8:	mov	r2, #0
   195bc:	b	195dc <putc_unlocked@plt+0x7424>
   195c0:	movw	r0, #37724	; 0x935c
   195c4:	movt	r0, #3
   195c8:	ldr	r0, [r0]
   195cc:	cmp	r0, #0
   195d0:	beq	195e0 <putc_unlocked@plt+0x7428>
   195d4:	ldr	r1, [r9, #32]
   195d8:	ldrb	r0, [r9, #132]	; 0x84
   195dc:	bl	19718 <putc_unlocked@plt+0x7560>
   195e0:	sub	sp, fp, #28
   195e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   195e8:	mov	r5, r6
   195ec:	b	19268 <putc_unlocked@plt+0x70b0>
   195f0:	bl	1214c <abort@plt>
   195f4:	mov	r2, r0
   195f8:	ldrb	r0, [r1, #132]	; 0x84
   195fc:	cmp	r0, #0
   19600:	ldrdne	r0, [r1, #112]	; 0x70
   19604:	orrsne	r3, r0, r1
   19608:	bne	19618 <putc_unlocked@plt+0x7460>
   1960c:	movw	r0, #26842	; 0x68da
   19610:	movt	r0, #2
   19614:	bx	lr
   19618:	b	1dcb0 <putc_unlocked@plt+0xbaf8>
   1961c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   19620:	add	fp, sp, #24
   19624:	sub	sp, sp, #16
   19628:	mov	r8, r3
   1962c:	mov	r9, r2
   19630:	mov	r6, r1
   19634:	mov	r4, r0
   19638:	cmp	r1, #0
   1963c:	addne	r0, r0, #4
   19640:	ldr	r7, [r0]
   19644:	movw	r0, #37700	; 0x9344
   19648:	movt	r0, #3
   1964c:	ldrb	r0, [r0]
   19650:	cmp	r0, #0
   19654:	beq	19678 <putc_unlocked@plt+0x74c0>
   19658:	mov	r0, r4
   1965c:	mov	r1, r6
   19660:	bl	19744 <putc_unlocked@plt+0x758c>
   19664:	cmp	r0, #0
   19668:	beq	19684 <putc_unlocked@plt+0x74cc>
   1966c:	mov	r3, r0
   19670:	mov	r5, #1
   19674:	b	19694 <putc_unlocked@plt+0x74dc>
   19678:	mov	r3, #0
   1967c:	mov	r5, #0
   19680:	b	19694 <putc_unlocked@plt+0x74dc>
   19684:	mov	r0, #4
   19688:	bl	14278 <putc_unlocked@plt+0x20c0>
   1968c:	mov	r5, r0
   19690:	mov	r3, #0
   19694:	movw	r0, #37916	; 0x941c
   19698:	movt	r0, #3
   1969c:	ldr	r1, [r0]
   196a0:	ldr	r0, [r4, #8]
   196a4:	ldr	r2, [r4, #144]	; 0x90
   196a8:	eor	r6, r6, #1
   196ac:	stm	sp, {r6, r9}
   196b0:	str	r0, [sp, #8]
   196b4:	mov	r0, r7
   196b8:	bl	16cc8 <putc_unlocked@plt+0x4b10>
   196bc:	mov	r4, r0
   196c0:	bl	16f68 <putc_unlocked@plt+0x4db0>
   196c4:	cmp	r5, #0
   196c8:	beq	1970c <putc_unlocked@plt+0x7554>
   196cc:	bl	16010 <putc_unlocked@plt+0x3e58>
   196d0:	movw	r0, #38360	; 0x95d8
   196d4:	movt	r0, #3
   196d8:	ldr	r0, [r0]
   196dc:	cmp	r0, #0
   196e0:	beq	1970c <putc_unlocked@plt+0x7554>
   196e4:	udiv	r1, r8, r0
   196e8:	add	r2, r8, r4
   196ec:	sub	r2, r2, #1
   196f0:	udiv	r0, r2, r0
   196f4:	cmp	r1, r0
   196f8:	beq	1970c <putc_unlocked@plt+0x7554>
   196fc:	movw	r0, #37344	; 0x91e0
   19700:	movt	r0, #3
   19704:	add	r0, r0, #184	; 0xb8
   19708:	bl	15fac <putc_unlocked@plt+0x3df4>
   1970c:	mov	r0, r4
   19710:	sub	sp, fp, #24
   19714:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19718:	push	{r4, sl, fp, lr}
   1971c:	add	fp, sp, #8
   19720:	bl	19a58 <putc_unlocked@plt+0x78a0>
   19724:	mov	r4, r0
   19728:	cmp	r0, #0
   1972c:	movne	r0, r4
   19730:	blne	15360 <putc_unlocked@plt+0x31a8>
   19734:	cmp	r4, #0
   19738:	movwne	r4, #1
   1973c:	mov	r0, r4
   19740:	pop	{r4, sl, fp, pc}
   19744:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   19748:	add	fp, sp, #24
   1974c:	mov	r5, r0
   19750:	cmp	r1, #0
   19754:	beq	19790 <putc_unlocked@plt+0x75d8>
   19758:	ldr	r8, [r5, #4]
   1975c:	ldr	r6, [r5, #124]	; 0x7c
   19760:	ldrb	r0, [r5, #133]	; 0x85
   19764:	mov	r1, #0
   19768:	cmp	r0, #0
   1976c:	bne	197a4 <putc_unlocked@plt+0x75ec>
   19770:	mov	r4, #12
   19774:	mov	r0, #12
   19778:	bl	14278 <putc_unlocked@plt+0x20c0>
   1977c:	mvn	r1, #0
   19780:	mov	r9, #0
   19784:	cmp	r0, #0
   19788:	beq	197a4 <putc_unlocked@plt+0x75ec>
   1978c:	b	19a00 <putc_unlocked@plt+0x7848>
   19790:	ldr	r8, [r5]
   19794:	mov	r0, r5
   19798:	bl	19a24 <putc_unlocked@plt+0x786c>
   1979c:	mov	r6, r0
   197a0:	ldrb	r1, [r5, #133]	; 0x85
   197a4:	ldrb	r0, [r5, #132]	; 0x84
   197a8:	cmp	r0, #0
   197ac:	beq	19810 <putc_unlocked@plt+0x7658>
   197b0:	and	r0, r6, #61440	; 0xf000
   197b4:	sub	r0, r0, #4096	; 0x1000
   197b8:	lsr	r2, r0, #12
   197bc:	mov	r9, #0
   197c0:	cmp	r2, #11
   197c4:	bhi	198b8 <putc_unlocked@plt+0x7700>
   197c8:	mov	r4, #8
   197cc:	mov	r0, #7
   197d0:	add	r3, pc, #0
   197d4:	ldr	pc, [r3, r2, lsl #2]
   197d8:	andeq	r9, r1, r0, lsl #20
   197dc:	andeq	r9, r1, r8, lsl #16
   197e0:			; <UNDEFINED> instruction: 0x000198b8
   197e4:	andeq	r9, r1, r8, asr #17
   197e8:			; <UNDEFINED> instruction: 0x000198b8
   197ec:	andeq	r9, r1, r0, lsl r9
   197f0:			; <UNDEFINED> instruction: 0x000198b8
   197f4:	andeq	r9, r1, r8, lsl r9
   197f8:			; <UNDEFINED> instruction: 0x000198b8
   197fc:	muleq	r1, r0, r8
   19800:			; <UNDEFINED> instruction: 0x000198b8
   19804:			; <UNDEFINED> instruction: 0x000199b0
   19808:	mov	r4, #11
   1980c:	b	19a00 <putc_unlocked@plt+0x7848>
   19810:	ldr	r0, [r5, #120]	; 0x78
   19814:	cmp	r0, #8
   19818:	cmpne	r0, #5
   1981c:	bne	19884 <putc_unlocked@plt+0x76cc>
   19820:	mov	r0, r8
   19824:	bl	11fc0 <strlen@plt>
   19828:	mov	r5, r0
   1982c:	movw	r0, #41460	; 0xa1f4
   19830:	movt	r0, #3
   19834:	ldr	r6, [r0]
   19838:	mov	r4, #5
   1983c:	mov	r9, #0
   19840:	cmp	r6, #0
   19844:	beq	19a00 <putc_unlocked@plt+0x7848>
   19848:	add	r7, r8, r5
   1984c:	b	1985c <putc_unlocked@plt+0x76a4>
   19850:	ldr	r6, [r6, #16]
   19854:	cmp	r6, #0
   19858:	beq	19a00 <putc_unlocked@plt+0x7848>
   1985c:	ldr	r2, [r6]
   19860:	cmp	r2, r5
   19864:	bhi	19850 <putc_unlocked@plt+0x7698>
   19868:	sub	r0, r7, r2
   1986c:	ldr	r1, [r6, #4]
   19870:	bl	1ab50 <putc_unlocked@plt+0x8998>
   19874:	cmp	r0, #0
   19878:	bne	19850 <putc_unlocked@plt+0x7698>
   1987c:	mov	r9, r6
   19880:	b	19a00 <putc_unlocked@plt+0x7848>
   19884:	movw	r2, #33748	; 0x83d4
   19888:	movt	r2, #2
   1988c:	ldr	r0, [r2, r0, lsl #2]
   19890:	mov	r9, #0
   19894:	cmp	r1, #0
   19898:	bne	198c0 <putc_unlocked@plt+0x7708>
   1989c:	cmp	r0, #7
   198a0:	bne	198c0 <putc_unlocked@plt+0x7708>
   198a4:	movw	r0, #37710	; 0x934e
   198a8:	movt	r0, #3
   198ac:	ldrb	r0, [r0]
   198b0:	cmp	r0, #0
   198b4:	beq	199b8 <putc_unlocked@plt+0x7800>
   198b8:	mov	r4, #13
   198bc:	b	19a00 <putc_unlocked@plt+0x7848>
   198c0:	mov	r4, r0
   198c4:	b	19a00 <putc_unlocked@plt+0x7848>
   198c8:	and	r5, r6, #512	; 0x200
   198cc:	mov	r0, #1
   198d0:	eor	r8, r0, r5, lsr #9
   198d4:	ands	r6, r6, #2
   198d8:	beq	198f8 <putc_unlocked@plt+0x7740>
   198dc:	cmp	r8, #0
   198e0:	bne	198f8 <putc_unlocked@plt+0x7740>
   198e4:	mov	r4, #20
   198e8:	mov	r0, #20
   198ec:	bl	14278 <putc_unlocked@plt+0x20c0>
   198f0:	cmp	r0, #0
   198f4:	bne	19a00 <putc_unlocked@plt+0x7848>
   198f8:	cmp	r6, #0
   198fc:	bne	199d0 <putc_unlocked@plt+0x7818>
   19900:	mov	r4, #6
   19904:	cmp	r5, #0
   19908:	bne	199ec <putc_unlocked@plt+0x7834>
   1990c:	b	19a00 <putc_unlocked@plt+0x7848>
   19910:	mov	r4, #10
   19914:	b	19a00 <putc_unlocked@plt+0x7848>
   19918:	tst	r6, #2048	; 0x800
   1991c:	beq	19934 <putc_unlocked@plt+0x777c>
   19920:	mov	r4, #16
   19924:	mov	r0, #16
   19928:	bl	14278 <putc_unlocked@plt+0x20c0>
   1992c:	cmp	r0, #0
   19930:	bne	19a00 <putc_unlocked@plt+0x7848>
   19934:	tst	r6, #1024	; 0x400
   19938:	beq	19950 <putc_unlocked@plt+0x7798>
   1993c:	mov	r4, #17
   19940:	mov	r0, #17
   19944:	bl	14278 <putc_unlocked@plt+0x20c0>
   19948:	cmp	r0, #0
   1994c:	bne	19a00 <putc_unlocked@plt+0x7848>
   19950:	mov	r4, #21
   19954:	mov	r0, #21
   19958:	bl	14278 <putc_unlocked@plt+0x20c0>
   1995c:	cmp	r0, #0
   19960:	beq	19970 <putc_unlocked@plt+0x77b8>
   19964:	ldrb	r0, [r5, #140]	; 0x8c
   19968:	cmp	r0, #0
   1996c:	bne	19a00 <putc_unlocked@plt+0x7848>
   19970:	tst	r6, #73	; 0x49
   19974:	beq	1998c <putc_unlocked@plt+0x77d4>
   19978:	mov	r4, #14
   1997c:	mov	r0, #14
   19980:	bl	14278 <putc_unlocked@plt+0x20c0>
   19984:	cmp	r0, #0
   19988:	bne	19a00 <putc_unlocked@plt+0x7848>
   1998c:	ldr	r0, [r5, #36]	; 0x24
   19990:	cmp	r0, #2
   19994:	bcc	19820 <putc_unlocked@plt+0x7668>
   19998:	mov	r4, #22
   1999c:	mov	r0, #22
   199a0:	bl	14278 <putc_unlocked@plt+0x20c0>
   199a4:	cmp	r0, #0
   199a8:	beq	19820 <putc_unlocked@plt+0x7668>
   199ac:	b	19a00 <putc_unlocked@plt+0x7848>
   199b0:	mov	r4, #9
   199b4:	b	19a00 <putc_unlocked@plt+0x7848>
   199b8:	mov	r0, #13
   199bc:	bl	14278 <putc_unlocked@plt+0x20c0>
   199c0:	mov	r4, #7
   199c4:	cmp	r0, #0
   199c8:	movne	r4, #13
   199cc:	b	19a00 <putc_unlocked@plt+0x7848>
   199d0:	mov	r0, #19
   199d4:	bl	14278 <putc_unlocked@plt+0x20c0>
   199d8:	mov	r4, #6
   199dc:	cmp	r0, #0
   199e0:	movwne	r4, #19
   199e4:	orrs	r0, r0, r8
   199e8:	bne	19a00 <putc_unlocked@plt+0x7848>
   199ec:	mov	r0, #18
   199f0:	bl	14278 <putc_unlocked@plt+0x20c0>
   199f4:	mov	r4, #6
   199f8:	cmp	r0, #0
   199fc:	movwne	r4, #18
   19a00:	movw	r1, #37344	; 0x91e0
   19a04:	movt	r1, #3
   19a08:	add	r0, r9, #8
   19a0c:	cmp	r9, #0
   19a10:	addeq	r0, r1, r4, lsl #3
   19a14:	ldr	r1, [r0, #4]
   19a18:	cmp	r1, #0
   19a1c:	moveq	r0, r1
   19a20:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19a24:	movw	r1, #37710	; 0x934e
   19a28:	movt	r1, #3
   19a2c:	ldrb	r1, [r1]
   19a30:	cmp	r1, #1
   19a34:	bne	19a4c <putc_unlocked@plt+0x7894>
   19a38:	ldrb	r1, [r0, #133]	; 0x85
   19a3c:	cmp	r1, #0
   19a40:	addne	r0, r0, #124	; 0x7c
   19a44:	ldrne	r0, [r0]
   19a48:	bxne	lr
   19a4c:	add	r0, r0, #32
   19a50:	ldr	r0, [r0]
   19a54:	bx	lr
   19a58:	mov	r3, r0
   19a5c:	cmp	r0, #0
   19a60:	beq	19a80 <putc_unlocked@plt+0x78c8>
   19a64:	and	ip, r1, #61440	; 0xf000
   19a68:	cmp	ip, #32768	; 0x8000
   19a6c:	beq	19a9c <putc_unlocked@plt+0x78e4>
   19a70:	mov	r0, #47	; 0x2f
   19a74:	cmp	ip, #16384	; 0x4000
   19a78:	beq	19a90 <putc_unlocked@plt+0x78d8>
   19a7c:	b	19ac4 <putc_unlocked@plt+0x790c>
   19a80:	mov	r0, #47	; 0x2f
   19a84:	cmp	r2, #3
   19a88:	cmpne	r2, #9
   19a8c:	bne	19a94 <putc_unlocked@plt+0x78dc>
   19a90:	bx	lr
   19a94:	cmp	r2, #5
   19a98:	bne	19ac4 <putc_unlocked@plt+0x790c>
   19a9c:	movw	r0, #37724	; 0x935c
   19aa0:	movt	r0, #3
   19aa4:	ldr	r0, [r0]
   19aa8:	cmp	r3, #0
   19aac:	movwne	r3, #42	; 0x2a
   19ab0:	cmp	r0, #3
   19ab4:	movne	r3, #0
   19ab8:	ands	r0, r1, #73	; 0x49
   19abc:	movne	r0, r3
   19ac0:	bx	lr
   19ac4:	movw	r0, #37724	; 0x935c
   19ac8:	movt	r0, #3
   19acc:	ldr	ip, [r0]
   19ad0:	mov	r0, #0
   19ad4:	cmp	ip, #1
   19ad8:	bxeq	lr
   19adc:	cmp	r3, #0
   19ae0:	beq	19b0c <putc_unlocked@plt+0x7954>
   19ae4:	and	r1, r1, #61440	; 0xf000
   19ae8:	mov	r0, #64	; 0x40
   19aec:	cmp	r1, #40960	; 0xa000
   19af0:	beq	19a90 <putc_unlocked@plt+0x78d8>
   19af4:	mov	r0, #124	; 0x7c
   19af8:	cmp	r1, #4096	; 0x1000
   19afc:	movne	r0, #61	; 0x3d
   19b00:	cmpne	r1, #49152	; 0xc000
   19b04:	beq	19a90 <putc_unlocked@plt+0x78d8>
   19b08:	b	19b34 <putc_unlocked@plt+0x797c>
   19b0c:	cmp	r2, #1
   19b10:	moveq	r0, #124	; 0x7c
   19b14:	bxeq	lr
   19b18:	cmp	r2, #6
   19b1c:	moveq	r0, #64	; 0x40
   19b20:	bxeq	lr
   19b24:	cmp	r2, #7
   19b28:	bne	19b34 <putc_unlocked@plt+0x797c>
   19b2c:	mov	r0, #61	; 0x3d
   19b30:	bx	lr
   19b34:	mov	r0, #0
   19b38:	bx	lr
   19b3c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   19b40:	add	fp, sp, #24
   19b44:	sub	sp, sp, #672	; 0x2a0
   19b48:	mov	r4, r0
   19b4c:	movw	r0, #38344	; 0x95c8
   19b50:	movt	r0, #3
   19b54:	ldrb	r0, [r0]
   19b58:	mov	r5, #0
   19b5c:	cmp	r0, #1
   19b60:	bne	19ba0 <putc_unlocked@plt+0x79e8>
   19b64:	movw	r0, #37712	; 0x9350
   19b68:	movt	r0, #3
   19b6c:	ldr	r0, [r0]
   19b70:	cmp	r0, #4
   19b74:	bne	19b90 <putc_unlocked@plt+0x79d8>
   19b78:	add	r0, r4, #112	; 0x70
   19b7c:	ldrd	r0, [r0]
   19b80:	add	r2, sp, #20
   19b84:	bl	1dcb0 <putc_unlocked@plt+0xbaf8>
   19b88:	bl	11fc0 <strlen@plt>
   19b8c:	b	19b9c <putc_unlocked@plt+0x79e4>
   19b90:	movw	r0, #41476	; 0xa204
   19b94:	movt	r0, #3
   19b98:	ldr	r0, [r0]
   19b9c:	add	r5, r0, #1
   19ba0:	movw	r0, #37789	; 0x939d
   19ba4:	movt	r0, #3
   19ba8:	ldrb	r0, [r0]
   19bac:	cmp	r0, #1
   19bb0:	bne	19c3c <putc_unlocked@plt+0x7a84>
   19bb4:	movw	r0, #37712	; 0x9350
   19bb8:	movt	r0, #3
   19bbc:	ldr	r0, [r0]
   19bc0:	cmp	r0, #4
   19bc4:	bne	19c18 <putc_unlocked@plt+0x7a60>
   19bc8:	ldrb	r0, [r4, #132]	; 0x84
   19bcc:	cmp	r0, #0
   19bd0:	beq	19c28 <putc_unlocked@plt+0x7a70>
   19bd4:	add	r0, r4, #80	; 0x50
   19bd8:	ldm	r0, {r0, r9}
   19bdc:	movw	r2, #38324	; 0x95b4
   19be0:	movt	r2, #3
   19be4:	ldr	r3, [r2]
   19be8:	movw	r2, #38336	; 0x95c0
   19bec:	movt	r2, #3
   19bf0:	ldm	r2, {r2, r7}
   19bf4:	mov	ip, #0
   19bf8:	mov	r1, #512	; 0x200
   19bfc:	stm	sp, {r1, ip}
   19c00:	str	r2, [sp, #8]
   19c04:	str	r7, [sp, #12]
   19c08:	add	r2, sp, #20
   19c0c:	mov	r1, r9
   19c10:	bl	1cd68 <putc_unlocked@plt+0xabb0>
   19c14:	b	19c30 <putc_unlocked@plt+0x7a78>
   19c18:	movw	r0, #41480	; 0xa208
   19c1c:	movt	r0, #3
   19c20:	ldr	r0, [r0]
   19c24:	b	19c34 <putc_unlocked@plt+0x7a7c>
   19c28:	movw	r0, #26842	; 0x68da
   19c2c:	movt	r0, #2
   19c30:	bl	11fc0 <strlen@plt>
   19c34:	add	r0, r5, r0
   19c38:	add	r5, r0, #1
   19c3c:	movw	r0, #37788	; 0x939c
   19c40:	movt	r0, #3
   19c44:	ldrb	r0, [r0]
   19c48:	cmp	r0, #1
   19c4c:	bne	19c84 <putc_unlocked@plt+0x7acc>
   19c50:	movw	r0, #37712	; 0x9350
   19c54:	movt	r0, #3
   19c58:	ldr	r0, [r0]
   19c5c:	cmp	r0, #4
   19c60:	bne	19c70 <putc_unlocked@plt+0x7ab8>
   19c64:	ldr	r0, [r4, #128]	; 0x80
   19c68:	bl	11fc0 <strlen@plt>
   19c6c:	b	19c7c <putc_unlocked@plt+0x7ac4>
   19c70:	movw	r0, #41500	; 0xa21c
   19c74:	movt	r0, #3
   19c78:	ldr	r0, [r0]
   19c7c:	add	r0, r5, r0
   19c80:	add	r5, r0, #1
   19c84:	mov	r0, r4
   19c88:	bl	18108 <putc_unlocked@plt+0x5f50>
   19c8c:	add	r5, r0, r5
   19c90:	movw	r0, #37724	; 0x935c
   19c94:	movt	r0, #3
   19c98:	ldr	r0, [r0]
   19c9c:	cmp	r0, #0
   19ca0:	beq	19cbc <putc_unlocked@plt+0x7b04>
   19ca4:	ldr	r1, [r4, #32]
   19ca8:	ldr	r2, [r4, #120]	; 0x78
   19cac:	ldrb	r0, [r4, #132]	; 0x84
   19cb0:	bl	19a58 <putc_unlocked@plt+0x78a0>
   19cb4:	cmp	r0, #0
   19cb8:	addne	r5, r5, #1
   19cbc:	mov	r0, r5
   19cc0:	sub	sp, fp, #24
   19cc4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19cc8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19ccc:	add	fp, sp, #28
   19cd0:	sub	sp, sp, #4
   19cd4:	mov	r4, r0
   19cd8:	movw	r0, #38364	; 0x95dc
   19cdc:	movt	r0, #3
   19ce0:	ldr	r0, [r0]
   19ce4:	movw	r6, #37900	; 0x940c
   19ce8:	movt	r6, #3
   19cec:	ldr	r1, [r6]
   19cf0:	cmp	r0, r1
   19cf4:	mov	r5, r1
   19cf8:	movcc	r5, r0
   19cfc:	cmp	r0, #0
   19d00:	moveq	r5, r1
   19d04:	mov	r0, r5
   19d08:	bl	19ee4 <putc_unlocked@plt+0x7d2c>
   19d0c:	ldr	r0, [r6]
   19d10:	cmp	r0, #0
   19d14:	beq	19e28 <putc_unlocked@plt+0x7c70>
   19d18:	mov	sl, #0
   19d1c:	b	19d38 <putc_unlocked@plt+0x7b80>
   19d20:	movw	r0, #37900	; 0x940c
   19d24:	movt	r0, #3
   19d28:	ldr	r0, [r0]
   19d2c:	add	sl, sl, #1
   19d30:	cmp	sl, r0
   19d34:	bcs	19e28 <putc_unlocked@plt+0x7c70>
   19d38:	movw	r0, #41468	; 0xa1fc
   19d3c:	movt	r0, #3
   19d40:	ldr	r0, [r0]
   19d44:	ldr	r0, [r0, sl, lsl #2]
   19d48:	bl	19b3c <putc_unlocked@plt+0x7984>
   19d4c:	cmp	r5, #0
   19d50:	beq	19d20 <putc_unlocked@plt+0x7b68>
   19d54:	movw	r1, #38360	; 0x95d8
   19d58:	movt	r1, #3
   19d5c:	ldr	r1, [r1]
   19d60:	str	r1, [sp]
   19d64:	movw	r1, #37900	; 0x940c
   19d68:	movt	r1, #3
   19d6c:	ldr	lr, [r1]
   19d70:	movw	r1, #41944	; 0xa3d8
   19d74:	movt	r1, #3
   19d78:	ldr	r1, [r1]
   19d7c:	add	r3, r1, #4
   19d80:	mov	r6, #0
   19d84:	b	19d98 <putc_unlocked@plt+0x7be0>
   19d88:	add	r3, r3, #12
   19d8c:	add	r6, r6, #1
   19d90:	cmp	r5, r6
   19d94:	beq	19d20 <putc_unlocked@plt+0x7b68>
   19d98:	ldrb	r1, [r3, #-4]
   19d9c:	cmp	r1, #0
   19da0:	beq	19d88 <putc_unlocked@plt+0x7bd0>
   19da4:	cmp	r4, #0
   19da8:	beq	19dc0 <putc_unlocked@plt+0x7c08>
   19dac:	add	r1, lr, r6
   19db0:	add	r2, r6, #1
   19db4:	udiv	r1, r1, r2
   19db8:	udiv	r1, sl, r1
   19dbc:	b	19dcc <putc_unlocked@plt+0x7c14>
   19dc0:	add	r1, r6, #1
   19dc4:	udiv	r2, sl, r1
   19dc8:	mls	r1, r2, r1, sl
   19dcc:	cmp	r6, r1
   19dd0:	mov	r2, r0
   19dd4:	addne	r2, r2, #2
   19dd8:	ldr	r8, [r3, #4]
   19ddc:	ldr	r9, [r8, r1, lsl #2]
   19de0:	cmp	r2, r9
   19de4:	bls	19d88 <putc_unlocked@plt+0x7bd0>
   19de8:	mov	ip, r5
   19dec:	sub	r5, r2, r9
   19df0:	mov	r7, r4
   19df4:	ldr	r4, [r3]
   19df8:	add	r4, r5, r4
   19dfc:	mov	r5, ip
   19e00:	str	r4, [r3]
   19e04:	mov	r4, r7
   19e08:	str	r2, [r8, r1, lsl #2]
   19e0c:	ldr	r1, [r3]
   19e10:	ldr	r2, [sp]
   19e14:	cmp	r1, r2
   19e18:	mov	r1, #0
   19e1c:	movwcc	r1, #1
   19e20:	strb	r1, [r3, #-4]
   19e24:	b	19d88 <putc_unlocked@plt+0x7bd0>
   19e28:	movw	r0, #41944	; 0xa3d8
   19e2c:	movt	r0, #3
   19e30:	ldr	r0, [r0]
   19e34:	add	r1, r5, r5, lsl #1
   19e38:	add	r0, r0, r1, lsl #2
   19e3c:	sub	r1, r0, #12
   19e40:	mov	r0, r5
   19e44:	cmp	r5, #2
   19e48:	bcc	19e5c <putc_unlocked@plt+0x7ca4>
   19e4c:	sub	r5, r0, #1
   19e50:	ldrb	r2, [r1], #-12
   19e54:	cmp	r2, #0
   19e58:	beq	19e40 <putc_unlocked@plt+0x7c88>
   19e5c:	sub	sp, fp, #28
   19e60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19e64:	push	{r4, r5, r6, sl, fp, lr}
   19e68:	add	fp, sp, #16
   19e6c:	cmp	r0, r1
   19e70:	popcs	{r4, r5, r6, sl, fp, pc}
   19e74:	mov	r4, r1
   19e78:	mov	r5, r0
   19e7c:	movw	r6, #37704	; 0x9348
   19e80:	movt	r6, #3
   19e84:	b	19ea0 <putc_unlocked@plt+0x7ce8>
   19e88:	mov	r0, #32
   19e8c:	bl	12188 <putchar_unlocked@plt>
   19e90:	mov	r0, #1
   19e94:	add	r5, r0, r5
   19e98:	cmp	r5, r4
   19e9c:	bcs	19ee0 <putc_unlocked@plt+0x7d28>
   19ea0:	ldr	r0, [r6]
   19ea4:	cmp	r0, #0
   19ea8:	beq	19e88 <putc_unlocked@plt+0x7cd0>
   19eac:	udiv	r1, r4, r0
   19eb0:	add	r2, r5, #1
   19eb4:	udiv	r0, r2, r0
   19eb8:	cmp	r1, r0
   19ebc:	bls	19e88 <putc_unlocked@plt+0x7cd0>
   19ec0:	mov	r0, #9
   19ec4:	bl	12188 <putchar_unlocked@plt>
   19ec8:	ldr	r0, [r6]
   19ecc:	udiv	r1, r5, r0
   19ed0:	mul	r1, r1, r0
   19ed4:	sub	r1, r1, r5
   19ed8:	add	r0, r0, r1
   19edc:	b	19e94 <putc_unlocked@plt+0x7cdc>
   19ee0:	pop	{r4, r5, r6, sl, fp, pc}
   19ee4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   19ee8:	add	fp, sp, #24
   19eec:	mov	r8, r0
   19ef0:	movw	r6, #41948	; 0xa3dc
   19ef4:	movt	r6, #3
   19ef8:	ldr	r0, [r6]
   19efc:	cmp	r0, r8
   19f00:	movw	r5, #41944	; 0xa3d8
   19f04:	movt	r5, #3
   19f08:	bcs	19fc0 <putc_unlocked@plt+0x7e08>
   19f0c:	ldr	r0, [r5]
   19f10:	movw	r7, #38364	; 0x95dc
   19f14:	movt	r7, #3
   19f18:	ldr	r1, [r7]
   19f1c:	cmp	r1, #0
   19f20:	beq	19f44 <putc_unlocked@plt+0x7d8c>
   19f24:	lsr	r2, r1, #1
   19f28:	cmp	r2, r8
   19f2c:	bhi	19f44 <putc_unlocked@plt+0x7d8c>
   19f30:	mov	r2, #12
   19f34:	bl	22d70 <_obstack_memory_used@@Base+0x2990>
   19f38:	str	r0, [r5]
   19f3c:	ldr	r7, [r7]
   19f40:	b	19f58 <putc_unlocked@plt+0x7da0>
   19f44:	mov	r1, r8
   19f48:	mov	r2, #24
   19f4c:	bl	22d70 <_obstack_memory_used@@Base+0x2990>
   19f50:	str	r0, [r5]
   19f54:	lsl	r7, r8, #1
   19f58:	ldr	r1, [r6]
   19f5c:	add	r0, r7, r1
   19f60:	add	r0, r0, #1
   19f64:	cmp	r0, r7
   19f68:	bcc	1a01c <putc_unlocked@plt+0x7e64>
   19f6c:	sub	r2, r7, r1
   19f70:	mul	r1, r0, r2
   19f74:	udiv	r2, r1, r2
   19f78:	cmp	r2, r0
   19f7c:	bne	1a01c <putc_unlocked@plt+0x7e64>
   19f80:	lsr	r0, r1, #1
   19f84:	mov	r1, #4
   19f88:	bl	22e4c <_obstack_memory_used@@Base+0x2a6c>
   19f8c:	ldr	r1, [r6]
   19f90:	cmp	r1, r7
   19f94:	bcs	19fbc <putc_unlocked@plt+0x7e04>
   19f98:	ldr	r2, [r5]
   19f9c:	add	r3, r1, r1, lsl #1
   19fa0:	add	r2, r2, r3, lsl #2
   19fa4:	add	r2, r2, #8
   19fa8:	str	r0, [r2], #12
   19fac:	add	r1, r1, #1
   19fb0:	add	r0, r0, r1, lsl #2
   19fb4:	cmp	r7, r1
   19fb8:	bne	19fa8 <putc_unlocked@plt+0x7df0>
   19fbc:	str	r7, [r6]
   19fc0:	cmp	r8, #0
   19fc4:	beq	1a018 <putc_unlocked@plt+0x7e60>
   19fc8:	ldr	r4, [r5]
   19fcc:	mov	r1, #0
   19fd0:	mov	r2, #1
   19fd4:	mov	r3, #3
   19fd8:	mov	r7, #1
   19fdc:	add	r6, r1, r1, lsl #1
   19fe0:	mov	r0, r4
   19fe4:	strb	r2, [r0, r6, lsl #2]!
   19fe8:	add	r1, r1, #1
   19fec:	add	r6, r1, r1, lsl #1
   19ff0:	str	r6, [r0, #4]
   19ff4:	ldr	r6, [r0, #8]
   19ff8:	mov	r5, #0
   19ffc:	str	r3, [r6, r5, lsl #2]
   1a000:	add	r5, r5, #1
   1a004:	cmp	r7, r5
   1a008:	bne	19ffc <putc_unlocked@plt+0x7e44>
   1a00c:	add	r7, r7, #1
   1a010:	cmp	r1, r8
   1a014:	bne	19fdc <putc_unlocked@plt+0x7e24>
   1a018:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a01c:	bl	23138 <_obstack_memory_used@@Base+0x2d58>
   1a020:	push	{r4, r5, fp, lr}
   1a024:	add	fp, sp, #8
   1a028:	sub	sp, sp, #8
   1a02c:	mov	r5, r1
   1a030:	mov	r4, r0
   1a034:	cmp	r2, #0
   1a038:	beq	1a060 <putc_unlocked@plt+0x7ea8>
   1a03c:	movw	r0, #38345	; 0x95c9
   1a040:	movt	r0, #3
   1a044:	ldrb	r1, [r0]
   1a048:	mov	r0, #0
   1a04c:	cmp	r1, #0
   1a050:	bne	1a068 <putc_unlocked@plt+0x7eb0>
   1a054:	mov	r0, r4
   1a058:	bl	1d890 <putc_unlocked@plt+0xb6d8>
   1a05c:	b	1a068 <putc_unlocked@plt+0x7eb0>
   1a060:	movw	r0, #26842	; 0x68da
   1a064:	movt	r0, #2
   1a068:	str	r5, [sp]
   1a06c:	mov	r2, r4
   1a070:	mov	r3, #0
   1a074:	bl	1a0e0 <putc_unlocked@plt+0x7f28>
   1a078:	sub	sp, fp, #8
   1a07c:	pop	{r4, r5, fp, pc}
   1a080:	push	{r4, r5, fp, lr}
   1a084:	add	fp, sp, #8
   1a088:	sub	sp, sp, #8
   1a08c:	mov	r5, r1
   1a090:	mov	r4, r0
   1a094:	cmp	r2, #0
   1a098:	beq	1a0c0 <putc_unlocked@plt+0x7f08>
   1a09c:	movw	r0, #38345	; 0x95c9
   1a0a0:	movt	r0, #3
   1a0a4:	ldrb	r1, [r0]
   1a0a8:	mov	r0, #0
   1a0ac:	cmp	r1, #0
   1a0b0:	bne	1a0c8 <putc_unlocked@plt+0x7f10>
   1a0b4:	mov	r0, r4
   1a0b8:	bl	1da40 <putc_unlocked@plt+0xb888>
   1a0bc:	b	1a0c8 <putc_unlocked@plt+0x7f10>
   1a0c0:	movw	r0, #26842	; 0x68da
   1a0c4:	movt	r0, #2
   1a0c8:	str	r5, [sp]
   1a0cc:	mov	r2, r4
   1a0d0:	mov	r3, #0
   1a0d4:	bl	1a0e0 <putc_unlocked@plt+0x7f28>
   1a0d8:	sub	sp, fp, #8
   1a0dc:	pop	{r4, r5, fp, pc}
   1a0e0:	push	{r4, r5, r6, sl, fp, lr}
   1a0e4:	add	fp, sp, #16
   1a0e8:	sub	sp, sp, #8
   1a0ec:	ldr	r4, [fp, #8]
   1a0f0:	cmp	r0, #0
   1a0f4:	beq	1a138 <putc_unlocked@plt+0x7f80>
   1a0f8:	mov	r5, r0
   1a0fc:	mov	r1, #0
   1a100:	bl	1e1e4 <putc_unlocked@plt+0xc02c>
   1a104:	mov	r6, r0
   1a108:	mov	r0, r5
   1a10c:	bl	16eb4 <putc_unlocked@plt+0x4cfc>
   1a110:	sub	r0, r4, r6
   1a114:	mov	r4, #1
   1a118:	cmp	r0, #0
   1a11c:	addgt	r4, r0, #1
   1a120:	mov	r0, #32
   1a124:	bl	15360 <putc_unlocked@plt+0x31a8>
   1a128:	subs	r4, r4, #1
   1a12c:	bne	1a120 <putc_unlocked@plt+0x7f68>
   1a130:	sub	sp, fp, #16
   1a134:	pop	{r4, r5, r6, sl, fp, pc}
   1a138:	stm	sp, {r2, r3}
   1a13c:	movw	r1, #27348	; 0x6ad4
   1a140:	movt	r1, #2
   1a144:	mov	r0, #1
   1a148:	mov	r2, r4
   1a14c:	bl	12014 <__printf_chk@plt>
   1a150:	movw	r1, #38176	; 0x9520
   1a154:	movt	r1, #3
   1a158:	ldrd	r2, [r1]
   1a15c:	adds	r2, r2, r0
   1a160:	adc	r3, r3, r0, asr #31
   1a164:	strd	r2, [r1]
   1a168:	sub	sp, fp, #16
   1a16c:	pop	{r4, r5, r6, sl, fp, pc}
   1a170:	push	{fp, lr}
   1a174:	mov	fp, sp
   1a178:	sub	sp, sp, #8
   1a17c:	mov	ip, r2
   1a180:	movw	r2, #41452	; 0xa1ec
   1a184:	movt	r2, #3
   1a188:	ldrb	r2, [r2]
   1a18c:	ldr	lr, [fp, #8]
   1a190:	cmp	r2, #1
   1a194:	bne	1a1b4 <putc_unlocked@plt+0x7ffc>
   1a198:	add	r1, r1, r1, lsl #1
   1a19c:	movw	r2, #38380	; 0x95ec
   1a1a0:	movt	r2, #3
   1a1a4:	add	r1, r2, r1, lsl #9
   1a1a8:	ldr	r2, [ip, #16]
   1a1ac:	add	r2, r1, r2, lsl #7
   1a1b0:	b	1a1c0 <putc_unlocked@plt+0x8008>
   1a1b4:	movw	r2, #37544	; 0x92a8
   1a1b8:	movt	r2, #3
   1a1bc:	ldr	r2, [r2, r1, lsl #2]
   1a1c0:	stm	sp, {r3, lr}
   1a1c4:	movw	r1, #1001	; 0x3e9
   1a1c8:	mov	r3, ip
   1a1cc:	bl	1e814 <putc_unlocked@plt+0xc65c>
   1a1d0:	mov	sp, fp
   1a1d4:	pop	{fp, pc}
   1a1d8:	push	{r4, r5, r6, sl, fp, lr}
   1a1dc:	add	fp, sp, #16
   1a1e0:	sub	sp, sp, #1056	; 0x420
   1a1e4:	movw	r4, #37556	; 0x92b4
   1a1e8:	movt	r4, #3
   1a1ec:	ldr	r0, [r4]
   1a1f0:	cmn	r0, #1
   1a1f4:	bgt	1a268 <putc_unlocked@plt+0x80b0>
   1a1f8:	mov	r5, #0
   1a1fc:	str	r5, [fp, #-20]	; 0xffffffec
   1a200:	movw	r6, #37780	; 0x9394
   1a204:	movt	r6, #3
   1a208:	ldr	r0, [r6]
   1a20c:	sub	r1, fp, #20
   1a210:	sub	r2, fp, #64	; 0x40
   1a214:	bl	22488 <_obstack_memory_used@@Base+0x20a8>
   1a218:	cmp	r0, #0
   1a21c:	beq	1a258 <putc_unlocked@plt+0x80a0>
   1a220:	ldr	r3, [r6]
   1a224:	str	r5, [sp]
   1a228:	add	r0, sp, #7
   1a22c:	sub	r2, fp, #64	; 0x40
   1a230:	mov	r1, #0
   1a234:	bl	1a170 <putc_unlocked@plt+0x7fb8>
   1a238:	cmp	r0, #0
   1a23c:	beq	1a258 <putc_unlocked@plt+0x80a0>
   1a240:	mov	r1, r0
   1a244:	add	r0, sp, #7
   1a248:	mov	r2, #0
   1a24c:	bl	1e20c <putc_unlocked@plt+0xc054>
   1a250:	str	r0, [r4]
   1a254:	b	1a25c <putc_unlocked@plt+0x80a4>
   1a258:	ldr	r0, [r4]
   1a25c:	cmn	r0, #1
   1a260:	movle	r0, #0
   1a264:	strle	r0, [r4]
   1a268:	ldr	r0, [r4]
   1a26c:	sub	sp, fp, #16
   1a270:	pop	{r4, r5, r6, sl, fp, pc}
   1a274:	mov	r2, r1
   1a278:	asr	r1, r0, #31
   1a27c:	b	1dbf0 <putc_unlocked@plt+0xba38>
   1a280:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1a284:	add	fp, sp, #24
   1a288:	sub	sp, sp, #128	; 0x80
   1a28c:	mov	r4, r1
   1a290:	mov	r8, r0
   1a294:	cmp	r1, #0
   1a298:	beq	1a2ac <putc_unlocked@plt+0x80f4>
   1a29c:	movw	r6, #1025	; 0x401
   1a2a0:	cmp	r4, #1024	; 0x400
   1a2a4:	addls	r6, r4, #1
   1a2a8:	b	1a2b0 <putc_unlocked@plt+0x80f8>
   1a2ac:	mov	r6, #128	; 0x80
   1a2b0:	mov	r9, sp
   1a2b4:	cmp	r4, #0
   1a2b8:	bne	1a2cc <putc_unlocked@plt+0x8114>
   1a2bc:	mov	r5, #0
   1a2c0:	cmp	r6, #128	; 0x80
   1a2c4:	mov	r7, r9
   1a2c8:	beq	1a2e4 <putc_unlocked@plt+0x812c>
   1a2cc:	mov	r0, r6
   1a2d0:	bl	23a30 <_obstack_memory_used@@Base+0x3650>
   1a2d4:	mov	r7, r0
   1a2d8:	cmp	r0, #0
   1a2dc:	mov	r5, r0
   1a2e0:	beq	1a380 <putc_unlocked@plt+0x81c8>
   1a2e4:	mov	r0, r8
   1a2e8:	mov	r1, r7
   1a2ec:	mov	r2, r6
   1a2f0:	bl	11e34 <readlink@plt>
   1a2f4:	cmn	r0, #1
   1a2f8:	ble	1a338 <putc_unlocked@plt+0x8180>
   1a2fc:	cmp	r0, r6
   1a300:	bcc	1a348 <putc_unlocked@plt+0x8190>
   1a304:	mov	r0, r5
   1a308:	bl	1bcc8 <putc_unlocked@plt+0x9b10>
   1a30c:	cmn	r6, #-1073741823	; 0xc0000001
   1a310:	bhi	1a31c <putc_unlocked@plt+0x8164>
   1a314:	lsl	r0, r6, #1
   1a318:	b	1a328 <putc_unlocked@plt+0x8170>
   1a31c:	mvn	r0, #-2147483648	; 0x80000000
   1a320:	cmn	r6, #-2147483647	; 0x80000001
   1a324:	bcs	1a380 <putc_unlocked@plt+0x81c8>
   1a328:	mov	r6, r0
   1a32c:	cmp	r4, #0
   1a330:	beq	1a2bc <putc_unlocked@plt+0x8104>
   1a334:	b	1a2cc <putc_unlocked@plt+0x8114>
   1a338:	mov	r0, r5
   1a33c:	bl	1bcc8 <putc_unlocked@plt+0x9b10>
   1a340:	mov	r4, #0
   1a344:	b	1a3b8 <putc_unlocked@plt+0x8200>
   1a348:	mov	r4, #0
   1a34c:	strb	r4, [r7, r0]
   1a350:	add	r8, r0, #1
   1a354:	cmp	r5, #0
   1a358:	beq	1a394 <putc_unlocked@plt+0x81dc>
   1a35c:	cmp	r8, r6
   1a360:	bcs	1a3b4 <putc_unlocked@plt+0x81fc>
   1a364:	mov	r0, r5
   1a368:	mov	r1, r8
   1a36c:	bl	23a60 <_obstack_memory_used@@Base+0x3680>
   1a370:	mov	r4, r0
   1a374:	cmp	r0, #0
   1a378:	moveq	r4, r5
   1a37c:	b	1a3b8 <putc_unlocked@plt+0x8200>
   1a380:	bl	11fe4 <__errno_location@plt>
   1a384:	mov	r1, #12
   1a388:	str	r1, [r0]
   1a38c:	mov	r4, #0
   1a390:	b	1a3b8 <putc_unlocked@plt+0x8200>
   1a394:	mov	r0, r8
   1a398:	bl	23a30 <_obstack_memory_used@@Base+0x3650>
   1a39c:	cmp	r0, #0
   1a3a0:	beq	1a3b8 <putc_unlocked@plt+0x8200>
   1a3a4:	mov	r5, r0
   1a3a8:	mov	r1, r7
   1a3ac:	mov	r2, r8
   1a3b0:	bl	11d74 <memcpy@plt>
   1a3b4:	mov	r4, r5
   1a3b8:	mov	r0, r4
   1a3bc:	sub	sp, fp, #24
   1a3c0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1a3c4:	mov	r0, #1
   1a3c8:	b	159d0 <putc_unlocked@plt+0x3818>
   1a3cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a3d0:	add	fp, sp, #28
   1a3d4:	sub	sp, sp, #12
   1a3d8:	mov	r4, r3
   1a3dc:	mov	r6, r2
   1a3e0:	mov	r5, r1
   1a3e4:	mov	sl, r0
   1a3e8:	bl	11fc0 <strlen@plt>
   1a3ec:	ldr	r8, [r5]
   1a3f0:	cmp	r8, #0
   1a3f4:	beq	1a4b4 <putc_unlocked@plt+0x82fc>
   1a3f8:	mov	r7, r0
   1a3fc:	add	r9, r5, #4
   1a400:	mov	r0, #0
   1a404:	str	r0, [sp]
   1a408:	mvn	r0, #0
   1a40c:	str	r0, [sp, #8]
   1a410:	str	r6, [sp, #4]
   1a414:	mov	r5, #0
   1a418:	b	1a434 <putc_unlocked@plt+0x827c>
   1a41c:	str	r5, [sp, #8]
   1a420:	add	r6, r6, r4
   1a424:	ldr	r8, [r9, r5, lsl #2]
   1a428:	add	r5, r5, #1
   1a42c:	cmp	r8, #0
   1a430:	beq	1a49c <putc_unlocked@plt+0x82e4>
   1a434:	mov	r0, r8
   1a438:	mov	r1, sl
   1a43c:	mov	r2, r7
   1a440:	bl	12140 <strncmp@plt>
   1a444:	cmp	r0, #0
   1a448:	bne	1a420 <putc_unlocked@plt+0x8268>
   1a44c:	mov	r0, r8
   1a450:	bl	11fc0 <strlen@plt>
   1a454:	cmp	r0, r7
   1a458:	beq	1a4b8 <putc_unlocked@plt+0x8300>
   1a45c:	ldr	r0, [sp, #8]
   1a460:	cmn	r0, #1
   1a464:	beq	1a41c <putc_unlocked@plt+0x8264>
   1a468:	ldr	r0, [sp, #4]
   1a46c:	cmp	r0, #0
   1a470:	beq	1a490 <putc_unlocked@plt+0x82d8>
   1a474:	ldr	r1, [sp, #8]
   1a478:	mla	r0, r1, r4, r0
   1a47c:	mov	r1, r6
   1a480:	mov	r2, r4
   1a484:	bl	11fa8 <bcmp@plt>
   1a488:	cmp	r0, #0
   1a48c:	beq	1a420 <putc_unlocked@plt+0x8268>
   1a490:	mov	r0, #1
   1a494:	str	r0, [sp]
   1a498:	b	1a420 <putc_unlocked@plt+0x8268>
   1a49c:	ldr	r0, [sp]
   1a4a0:	tst	r0, #1
   1a4a4:	ldr	r0, [sp, #8]
   1a4a8:	mvnne	r0, #1
   1a4ac:	sub	sp, fp, #28
   1a4b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a4b4:	mvn	r5, #0
   1a4b8:	mov	r0, r5
   1a4bc:	sub	sp, fp, #28
   1a4c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a4c4:	push	{r4, r5, r6, r7, fp, lr}
   1a4c8:	add	fp, sp, #16
   1a4cc:	mov	r5, r0
   1a4d0:	ldr	r0, [r1]
   1a4d4:	mvn	r4, #0
   1a4d8:	cmp	r0, #0
   1a4dc:	beq	1a508 <putc_unlocked@plt+0x8350>
   1a4e0:	add	r7, r1, #4
   1a4e4:	mov	r6, #0
   1a4e8:	mov	r1, r5
   1a4ec:	bl	11ccc <strcmp@plt>
   1a4f0:	cmp	r0, #0
   1a4f4:	beq	1a510 <putc_unlocked@plt+0x8358>
   1a4f8:	ldr	r0, [r7, r6, lsl #2]
   1a4fc:	add	r6, r6, #1
   1a500:	cmp	r0, #0
   1a504:	bne	1a4e8 <putc_unlocked@plt+0x8330>
   1a508:	mov	r0, r4
   1a50c:	pop	{r4, r5, r6, r7, fp, pc}
   1a510:	mov	r0, r6
   1a514:	pop	{r4, r5, r6, r7, fp, pc}
   1a518:	push	{r4, r5, r6, sl, fp, lr}
   1a51c:	add	fp, sp, #16
   1a520:	sub	sp, sp, #8
   1a524:	mov	r4, r1
   1a528:	mov	r5, r0
   1a52c:	movw	r0, #33935	; 0x848f
   1a530:	movt	r0, #2
   1a534:	movw	r1, #33962	; 0x84aa
   1a538:	movt	r1, #2
   1a53c:	cmn	r2, #1
   1a540:	moveq	r1, r0
   1a544:	mov	r0, #0
   1a548:	mov	r2, #5
   1a54c:	bl	11db0 <dcgettext@plt>
   1a550:	mov	r6, r0
   1a554:	mov	r0, #0
   1a558:	mov	r1, #8
   1a55c:	mov	r2, r4
   1a560:	bl	219a8 <_obstack_memory_used@@Base+0x15c8>
   1a564:	mov	r4, r0
   1a568:	mov	r0, #1
   1a56c:	mov	r1, r5
   1a570:	bl	21c44 <_obstack_memory_used@@Base+0x1864>
   1a574:	str	r0, [sp]
   1a578:	mov	r0, #0
   1a57c:	mov	r1, #0
   1a580:	mov	r2, r6
   1a584:	mov	r3, r4
   1a588:	bl	11eb8 <error@plt>
   1a58c:	sub	sp, fp, #16
   1a590:	pop	{r4, r5, r6, sl, fp, pc}
   1a594:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a598:	add	fp, sp, #28
   1a59c:	sub	sp, sp, #4
   1a5a0:	mov	sl, r2
   1a5a4:	mov	r5, r1
   1a5a8:	mov	r7, r0
   1a5ac:	mov	r8, #0
   1a5b0:	movw	r1, #33991	; 0x84c7
   1a5b4:	movt	r1, #2
   1a5b8:	mov	r0, #0
   1a5bc:	mov	r2, #5
   1a5c0:	bl	11db0 <dcgettext@plt>
   1a5c4:	movw	r4, #37664	; 0x9320
   1a5c8:	movt	r4, #3
   1a5cc:	ldr	r1, [r4]
   1a5d0:	bl	11c84 <fputs_unlocked@plt>
   1a5d4:	ldr	r6, [r7]
   1a5d8:	cmp	r6, #0
   1a5dc:	beq	1a684 <putc_unlocked@plt+0x84cc>
   1a5e0:	add	r9, r7, #4
   1a5e4:	mov	r7, #0
   1a5e8:	str	sl, [sp]
   1a5ec:	cmp	r8, #0
   1a5f0:	bne	1a638 <putc_unlocked@plt+0x8480>
   1a5f4:	ldr	r7, [r4]
   1a5f8:	mov	r0, r6
   1a5fc:	bl	21c4c <_obstack_memory_used@@Base+0x186c>
   1a600:	mov	r3, r0
   1a604:	mov	r0, r7
   1a608:	mov	r1, #1
   1a60c:	movw	r2, #34012	; 0x84dc
   1a610:	movt	r2, #2
   1a614:	bl	12044 <__fprintf_chk@plt>
   1a618:	mov	r7, r5
   1a61c:	add	r5, r5, sl
   1a620:	ldr	r6, [r9, -r8, lsl #2]
   1a624:	sub	r8, r8, #1
   1a628:	cmp	r6, #0
   1a62c:	beq	1a684 <putc_unlocked@plt+0x84cc>
   1a630:	cmp	r8, #0
   1a634:	beq	1a5f4 <putc_unlocked@plt+0x843c>
   1a638:	mov	r0, r7
   1a63c:	mov	r1, r5
   1a640:	mov	r2, sl
   1a644:	bl	11fa8 <bcmp@plt>
   1a648:	cmp	r0, #0
   1a64c:	bne	1a5f4 <putc_unlocked@plt+0x843c>
   1a650:	mov	sl, r9
   1a654:	ldr	r9, [r4]
   1a658:	mov	r0, r6
   1a65c:	bl	21c4c <_obstack_memory_used@@Base+0x186c>
   1a660:	mov	r3, r0
   1a664:	mov	r0, r9
   1a668:	mov	r9, sl
   1a66c:	ldr	sl, [sp]
   1a670:	mov	r1, #1
   1a674:	movw	r2, #34020	; 0x84e4
   1a678:	movt	r2, #2
   1a67c:	bl	12044 <__fprintf_chk@plt>
   1a680:	b	1a61c <putc_unlocked@plt+0x8464>
   1a684:	ldr	r1, [r4]
   1a688:	mov	r0, #10
   1a68c:	sub	sp, fp, #28
   1a690:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a694:	b	121b8 <putc_unlocked@plt>
   1a698:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1a69c:	add	fp, sp, #24
   1a6a0:	mov	r4, r3
   1a6a4:	mov	r5, r2
   1a6a8:	mov	r7, r1
   1a6ac:	mov	r6, r0
   1a6b0:	ldr	r8, [fp, #8]
   1a6b4:	ldr	r0, [fp, #16]
   1a6b8:	cmp	r0, #0
   1a6bc:	beq	1a6d8 <putc_unlocked@plt+0x8520>
   1a6c0:	mov	r0, r7
   1a6c4:	mov	r1, r5
   1a6c8:	mov	r2, r4
   1a6cc:	mov	r3, r8
   1a6d0:	bl	1a3cc <putc_unlocked@plt+0x8214>
   1a6d4:	b	1a6e4 <putc_unlocked@plt+0x852c>
   1a6d8:	mov	r0, r7
   1a6dc:	mov	r1, r5
   1a6e0:	bl	1a4c4 <putc_unlocked@plt+0x830c>
   1a6e4:	mov	r2, r0
   1a6e8:	cmn	r0, #1
   1a6ec:	ble	1a6f8 <putc_unlocked@plt+0x8540>
   1a6f0:	mov	r0, r2
   1a6f4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1a6f8:	ldr	r9, [fp, #12]
   1a6fc:	mov	r0, r6
   1a700:	mov	r1, r7
   1a704:	bl	1a518 <putc_unlocked@plt+0x8360>
   1a708:	mov	r0, r5
   1a70c:	mov	r1, r4
   1a710:	mov	r2, r8
   1a714:	bl	1a594 <putc_unlocked@plt+0x83dc>
   1a718:	blx	r9
   1a71c:	mvn	r2, #0
   1a720:	mov	r0, r2
   1a724:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1a728:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1a72c:	add	fp, sp, #24
   1a730:	ldr	r6, [r1]
   1a734:	cmp	r6, #0
   1a738:	beq	1a79c <putc_unlocked@plt+0x85e4>
   1a73c:	mov	r4, r3
   1a740:	mov	r7, r2
   1a744:	mov	r8, r1
   1a748:	mov	r9, r0
   1a74c:	mov	r1, r2
   1a750:	mov	r2, r3
   1a754:	bl	11fa8 <bcmp@plt>
   1a758:	cmp	r0, #0
   1a75c:	beq	1a794 <putc_unlocked@plt+0x85dc>
   1a760:	add	r7, r7, r4
   1a764:	add	r5, r8, #4
   1a768:	ldr	r6, [r5]
   1a76c:	cmp	r6, #0
   1a770:	beq	1a79c <putc_unlocked@plt+0x85e4>
   1a774:	mov	r0, r9
   1a778:	mov	r1, r7
   1a77c:	mov	r2, r4
   1a780:	bl	11fa8 <bcmp@plt>
   1a784:	add	r7, r7, r4
   1a788:	add	r5, r5, #4
   1a78c:	cmp	r0, #0
   1a790:	bne	1a768 <putc_unlocked@plt+0x85b0>
   1a794:	mov	r0, r6
   1a798:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1a79c:	mov	r6, #0
   1a7a0:	mov	r0, r6
   1a7a4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1a7a8:	sub	r0, r0, #1
   1a7ac:	ldrb	r3, [r0, #1]!
   1a7b0:	cmp	r3, #47	; 0x2f
   1a7b4:	beq	1a7ac <putc_unlocked@plt+0x85f4>
   1a7b8:	mov	r2, #0
   1a7bc:	mov	r1, r0
   1a7c0:	b	1a7cc <putc_unlocked@plt+0x8614>
   1a7c4:	mov	r2, #1
   1a7c8:	ldrb	r3, [r1, #1]!
   1a7cc:	uxtb	r3, r3
   1a7d0:	cmp	r3, #47	; 0x2f
   1a7d4:	beq	1a7c4 <putc_unlocked@plt+0x860c>
   1a7d8:	cmp	r3, #0
   1a7dc:	bxeq	lr
   1a7e0:	tst	r2, #1
   1a7e4:	movne	r0, r1
   1a7e8:	mov	r2, #0
   1a7ec:	ldrb	r3, [r1, #1]!
   1a7f0:	b	1a7cc <putc_unlocked@plt+0x8614>
   1a7f4:	push	{r4, sl, fp, lr}
   1a7f8:	add	fp, sp, #8
   1a7fc:	mov	r4, r0
   1a800:	bl	11fc0 <strlen@plt>
   1a804:	mov	r1, r0
   1a808:	sub	r2, r4, #1
   1a80c:	mov	r0, r1
   1a810:	cmp	r1, #2
   1a814:	bcc	1a828 <putc_unlocked@plt+0x8670>
   1a818:	ldrb	r3, [r2, r0]
   1a81c:	sub	r1, r0, #1
   1a820:	cmp	r3, #47	; 0x2f
   1a824:	beq	1a80c <putc_unlocked@plt+0x8654>
   1a828:	pop	{r4, sl, fp, pc}
   1a82c:	mov	r1, r0
   1a830:	sub	r2, r0, #65	; 0x41
   1a834:	mov	r0, #1
   1a838:	cmp	r2, #26
   1a83c:	subcs	r2, r1, #97	; 0x61
   1a840:	cmpcs	r2, #26
   1a844:	bcs	1a84c <putc_unlocked@plt+0x8694>
   1a848:	bx	lr
   1a84c:	sub	r1, r1, #48	; 0x30
   1a850:	cmp	r1, #10
   1a854:	movcs	r0, #0
   1a858:	bx	lr
   1a85c:	mov	r1, r0
   1a860:	sub	r2, r0, #65	; 0x41
   1a864:	mov	r0, #1
   1a868:	cmp	r2, #26
   1a86c:	subcs	r1, r1, #97	; 0x61
   1a870:	cmpcs	r1, #26
   1a874:	movcs	r0, #0
   1a878:	bx	lr
   1a87c:	mov	r1, #0
   1a880:	cmp	r0, #128	; 0x80
   1a884:	movwcc	r1, #1
   1a888:	mov	r0, r1
   1a88c:	bx	lr
   1a890:	sub	r1, r0, #9
   1a894:	clz	r1, r1
   1a898:	lsr	r1, r1, #5
   1a89c:	sub	r0, r0, #32
   1a8a0:	clz	r0, r0
   1a8a4:	lsr	r0, r0, #5
   1a8a8:	orr	r0, r0, r1
   1a8ac:	bx	lr
   1a8b0:	mov	r1, r0
   1a8b4:	mov	r0, #1
   1a8b8:	cmp	r1, #32
   1a8bc:	bxcc	lr
   1a8c0:	cmp	r1, #127	; 0x7f
   1a8c4:	movne	r0, #0
   1a8c8:	bx	lr
   1a8cc:	sub	r1, r0, #48	; 0x30
   1a8d0:	mov	r0, #0
   1a8d4:	cmp	r1, #10
   1a8d8:	movwcc	r0, #1
   1a8dc:	bx	lr
   1a8e0:	sub	r1, r0, #33	; 0x21
   1a8e4:	mov	r0, #0
   1a8e8:	cmp	r1, #94	; 0x5e
   1a8ec:	movwcc	r0, #1
   1a8f0:	bx	lr
   1a8f4:	sub	r1, r0, #97	; 0x61
   1a8f8:	mov	r0, #0
   1a8fc:	cmp	r1, #26
   1a900:	movwcc	r0, #1
   1a904:	bx	lr
   1a908:	sub	r1, r0, #32
   1a90c:	mov	r0, #0
   1a910:	cmp	r1, #95	; 0x5f
   1a914:	movwcc	r0, #1
   1a918:	bx	lr
   1a91c:	sub	r1, r0, #33	; 0x21
   1a920:	cmp	r1, #93	; 0x5d
   1a924:	bhi	1aab0 <putc_unlocked@plt+0x88f8>
   1a928:	mov	r0, #1
   1a92c:	add	r2, pc, #0
   1a930:	ldr	pc, [r2, r1, lsl #2]
   1a934:	andeq	sl, r1, ip, lsr #21
   1a938:	andeq	sl, r1, ip, lsr #21
   1a93c:	andeq	sl, r1, ip, lsr #21
   1a940:	andeq	sl, r1, ip, lsr #21
   1a944:	andeq	sl, r1, ip, lsr #21
   1a948:	andeq	sl, r1, ip, lsr #21
   1a94c:	andeq	sl, r1, ip, lsr #21
   1a950:	andeq	sl, r1, ip, lsr #21
   1a954:	andeq	sl, r1, ip, lsr #21
   1a958:	andeq	sl, r1, ip, lsr #21
   1a95c:	andeq	sl, r1, ip, lsr #21
   1a960:	andeq	sl, r1, ip, lsr #21
   1a964:	andeq	sl, r1, ip, lsr #21
   1a968:	andeq	sl, r1, ip, lsr #21
   1a96c:	andeq	sl, r1, ip, lsr #21
   1a970:			; <UNDEFINED> instruction: 0x0001aab0
   1a974:			; <UNDEFINED> instruction: 0x0001aab0
   1a978:			; <UNDEFINED> instruction: 0x0001aab0
   1a97c:			; <UNDEFINED> instruction: 0x0001aab0
   1a980:			; <UNDEFINED> instruction: 0x0001aab0
   1a984:			; <UNDEFINED> instruction: 0x0001aab0
   1a988:			; <UNDEFINED> instruction: 0x0001aab0
   1a98c:			; <UNDEFINED> instruction: 0x0001aab0
   1a990:			; <UNDEFINED> instruction: 0x0001aab0
   1a994:			; <UNDEFINED> instruction: 0x0001aab0
   1a998:	andeq	sl, r1, ip, lsr #21
   1a99c:	andeq	sl, r1, ip, lsr #21
   1a9a0:	andeq	sl, r1, ip, lsr #21
   1a9a4:	andeq	sl, r1, ip, lsr #21
   1a9a8:	andeq	sl, r1, ip, lsr #21
   1a9ac:	andeq	sl, r1, ip, lsr #21
   1a9b0:	andeq	sl, r1, ip, lsr #21
   1a9b4:			; <UNDEFINED> instruction: 0x0001aab0
   1a9b8:			; <UNDEFINED> instruction: 0x0001aab0
   1a9bc:			; <UNDEFINED> instruction: 0x0001aab0
   1a9c0:			; <UNDEFINED> instruction: 0x0001aab0
   1a9c4:			; <UNDEFINED> instruction: 0x0001aab0
   1a9c8:			; <UNDEFINED> instruction: 0x0001aab0
   1a9cc:			; <UNDEFINED> instruction: 0x0001aab0
   1a9d0:			; <UNDEFINED> instruction: 0x0001aab0
   1a9d4:			; <UNDEFINED> instruction: 0x0001aab0
   1a9d8:			; <UNDEFINED> instruction: 0x0001aab0
   1a9dc:			; <UNDEFINED> instruction: 0x0001aab0
   1a9e0:			; <UNDEFINED> instruction: 0x0001aab0
   1a9e4:			; <UNDEFINED> instruction: 0x0001aab0
   1a9e8:			; <UNDEFINED> instruction: 0x0001aab0
   1a9ec:			; <UNDEFINED> instruction: 0x0001aab0
   1a9f0:			; <UNDEFINED> instruction: 0x0001aab0
   1a9f4:			; <UNDEFINED> instruction: 0x0001aab0
   1a9f8:			; <UNDEFINED> instruction: 0x0001aab0
   1a9fc:			; <UNDEFINED> instruction: 0x0001aab0
   1aa00:			; <UNDEFINED> instruction: 0x0001aab0
   1aa04:			; <UNDEFINED> instruction: 0x0001aab0
   1aa08:			; <UNDEFINED> instruction: 0x0001aab0
   1aa0c:			; <UNDEFINED> instruction: 0x0001aab0
   1aa10:			; <UNDEFINED> instruction: 0x0001aab0
   1aa14:			; <UNDEFINED> instruction: 0x0001aab0
   1aa18:			; <UNDEFINED> instruction: 0x0001aab0
   1aa1c:	andeq	sl, r1, ip, lsr #21
   1aa20:	andeq	sl, r1, ip, lsr #21
   1aa24:	andeq	sl, r1, ip, lsr #21
   1aa28:	andeq	sl, r1, ip, lsr #21
   1aa2c:	andeq	sl, r1, ip, lsr #21
   1aa30:	andeq	sl, r1, ip, lsr #21
   1aa34:			; <UNDEFINED> instruction: 0x0001aab0
   1aa38:			; <UNDEFINED> instruction: 0x0001aab0
   1aa3c:			; <UNDEFINED> instruction: 0x0001aab0
   1aa40:			; <UNDEFINED> instruction: 0x0001aab0
   1aa44:			; <UNDEFINED> instruction: 0x0001aab0
   1aa48:			; <UNDEFINED> instruction: 0x0001aab0
   1aa4c:			; <UNDEFINED> instruction: 0x0001aab0
   1aa50:			; <UNDEFINED> instruction: 0x0001aab0
   1aa54:			; <UNDEFINED> instruction: 0x0001aab0
   1aa58:			; <UNDEFINED> instruction: 0x0001aab0
   1aa5c:			; <UNDEFINED> instruction: 0x0001aab0
   1aa60:			; <UNDEFINED> instruction: 0x0001aab0
   1aa64:			; <UNDEFINED> instruction: 0x0001aab0
   1aa68:			; <UNDEFINED> instruction: 0x0001aab0
   1aa6c:			; <UNDEFINED> instruction: 0x0001aab0
   1aa70:			; <UNDEFINED> instruction: 0x0001aab0
   1aa74:			; <UNDEFINED> instruction: 0x0001aab0
   1aa78:			; <UNDEFINED> instruction: 0x0001aab0
   1aa7c:			; <UNDEFINED> instruction: 0x0001aab0
   1aa80:			; <UNDEFINED> instruction: 0x0001aab0
   1aa84:			; <UNDEFINED> instruction: 0x0001aab0
   1aa88:			; <UNDEFINED> instruction: 0x0001aab0
   1aa8c:			; <UNDEFINED> instruction: 0x0001aab0
   1aa90:			; <UNDEFINED> instruction: 0x0001aab0
   1aa94:			; <UNDEFINED> instruction: 0x0001aab0
   1aa98:			; <UNDEFINED> instruction: 0x0001aab0
   1aa9c:	andeq	sl, r1, ip, lsr #21
   1aaa0:	andeq	sl, r1, ip, lsr #21
   1aaa4:	andeq	sl, r1, ip, lsr #21
   1aaa8:	andeq	sl, r1, ip, lsr #21
   1aaac:	bx	lr
   1aab0:	mov	r0, #0
   1aab4:	bx	lr
   1aab8:	sub	r0, r0, #9
   1aabc:	cmp	r0, #23
   1aac0:	movhi	r0, #0
   1aac4:	bxhi	lr
   1aac8:	bic	r0, r0, #-16777216	; 0xff000000
   1aacc:	movw	r1, #31
   1aad0:	movt	r1, #128	; 0x80
   1aad4:	mov	r2, #1
   1aad8:	and	r0, r2, r1, lsr r0
   1aadc:	bx	lr
   1aae0:	sub	r1, r0, #65	; 0x41
   1aae4:	mov	r0, #0
   1aae8:	cmp	r1, #26
   1aaec:	movwcc	r0, #1
   1aaf0:	bx	lr
   1aaf4:	mov	r1, r0
   1aaf8:	sub	r2, r0, #48	; 0x30
   1aafc:	mov	r0, #1
   1ab00:	cmp	r2, #22
   1ab04:	bhi	1ab1c <putc_unlocked@plt+0x8964>
   1ab08:	mov	ip, #1
   1ab0c:	movw	r3, #1023	; 0x3ff
   1ab10:	movt	r3, #126	; 0x7e
   1ab14:	tst	r3, ip, lsl r2
   1ab18:	bxne	lr
   1ab1c:	sub	r1, r1, #97	; 0x61
   1ab20:	cmp	r1, #6
   1ab24:	movcs	r0, #0
   1ab28:	bxcs	lr
   1ab2c:	bx	lr
   1ab30:	sub	r1, r0, #65	; 0x41
   1ab34:	cmp	r1, #26
   1ab38:	addcc	r0, r0, #32
   1ab3c:	bx	lr
   1ab40:	sub	r1, r0, #97	; 0x61
   1ab44:	cmp	r1, #26
   1ab48:	subcc	r0, r0, #32
   1ab4c:	bx	lr
   1ab50:	push	{r4, r5, r6, r7, fp, lr}
   1ab54:	add	fp, sp, #16
   1ab58:	mov	r5, r0
   1ab5c:	mov	r0, #0
   1ab60:	cmp	r5, r1
   1ab64:	cmpne	r2, #0
   1ab68:	bne	1ab70 <putc_unlocked@plt+0x89b8>
   1ab6c:	pop	{r4, r5, r6, r7, fp, pc}
   1ab70:	mov	r4, r1
   1ab74:	sub	r7, r2, #1
   1ab78:	ldrb	r0, [r5]
   1ab7c:	bl	1ab30 <putc_unlocked@plt+0x8978>
   1ab80:	mov	r6, r0
   1ab84:	ldrb	r0, [r4]
   1ab88:	bl	1ab30 <putc_unlocked@plt+0x8978>
   1ab8c:	cmp	r7, #0
   1ab90:	uxtbne	r1, r6
   1ab94:	cmpne	r1, #0
   1ab98:	beq	1abb4 <putc_unlocked@plt+0x89fc>
   1ab9c:	sub	r7, r7, #1
   1aba0:	add	r4, r4, #1
   1aba4:	add	r5, r5, #1
   1aba8:	uxtb	r2, r0
   1abac:	cmp	r1, r2
   1abb0:	beq	1ab78 <putc_unlocked@plt+0x89c0>
   1abb4:	uxtb	r0, r0
   1abb8:	uxtb	r1, r6
   1abbc:	sub	r0, r1, r0
   1abc0:	pop	{r4, r5, r6, r7, fp, pc}
   1abc4:	push	{r4, r5, fp, lr}
   1abc8:	add	fp, sp, #8
   1abcc:	sub	sp, sp, #8
   1abd0:	sub	sp, sp, #1024	; 0x400
   1abd4:	mov	r2, sp
   1abd8:	bl	1abe4 <putc_unlocked@plt+0x8a2c>
   1abdc:	sub	sp, fp, #8
   1abe0:	pop	{r4, r5, fp, pc}
   1abe4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1abe8:	add	fp, sp, #28
   1abec:	sub	sp, sp, #164	; 0xa4
   1abf0:	sub	sp, sp, #2048	; 0x800
   1abf4:	mov	sl, r2
   1abf8:	mov	r5, r1
   1abfc:	mov	r9, r0
   1ac00:	mov	r6, #0
   1ac04:	str	r6, [fp, #-36]	; 0xffffffdc
   1ac08:	and	r0, r1, #3
   1ac0c:	str	r0, [sp, #28]
   1ac10:	bl	1b1ec <putc_unlocked@plt+0x9034>
   1ac14:	cmp	r0, #0
   1ac18:	beq	1ac2c <putc_unlocked@plt+0x8a74>
   1ac1c:	bl	11fe4 <__errno_location@plt>
   1ac20:	mov	r1, #22
   1ac24:	str	r1, [r0]
   1ac28:	b	1b1c4 <putc_unlocked@plt+0x900c>
   1ac2c:	cmp	r9, #0
   1ac30:	beq	1ac8c <putc_unlocked@plt+0x8ad4>
   1ac34:	ldrb	r0, [r9]
   1ac38:	cmp	r0, #0
   1ac3c:	beq	1ac98 <putc_unlocked@plt+0x8ae0>
   1ac40:	sub	r0, fp, #1072	; 0x430
   1ac44:	bl	1b1fc <putc_unlocked@plt+0x9044>
   1ac48:	add	r0, sp, #136	; 0x88
   1ac4c:	bl	1b1fc <putc_unlocked@plt+0x9044>
   1ac50:	mov	r0, sl
   1ac54:	bl	1b1fc <putc_unlocked@plt+0x9044>
   1ac58:	ldr	r4, [sl]
   1ac5c:	ldrb	r0, [r9]
   1ac60:	cmp	r0, #47	; 0x2f
   1ac64:	bne	1acac <putc_unlocked@plt+0x8af4>
   1ac68:	mov	r0, r4
   1ac6c:	mov	r1, r9
   1ac70:	mov	r2, #0
   1ac74:	mvn	r3, #0
   1ac78:	bl	121a0 <__mempcpy_chk@plt>
   1ac7c:	mov	r6, r0
   1ac80:	mov	r0, #47	; 0x2f
   1ac84:	strb	r0, [r6], #1
   1ac88:	b	1acd0 <putc_unlocked@plt+0x8b18>
   1ac8c:	bl	11fe4 <__errno_location@plt>
   1ac90:	mov	r1, #22
   1ac94:	b	1aca0 <putc_unlocked@plt+0x8ae8>
   1ac98:	bl	11fe4 <__errno_location@plt>
   1ac9c:	mov	r1, #2
   1aca0:	str	r1, [r0]
   1aca4:	mov	r6, #0
   1aca8:	b	1b1c4 <putc_unlocked@plt+0x900c>
   1acac:	ldr	r1, [sl, #4]
   1acb0:	mov	r0, r4
   1acb4:	bl	11f84 <getcwd@plt>
   1acb8:	cmp	r0, #0
   1acbc:	beq	1b11c <putc_unlocked@plt+0x8f64>
   1acc0:	mov	r0, r4
   1acc4:	mov	r1, #0
   1acc8:	bl	11e04 <rawmemchr@plt>
   1accc:	mov	r6, r0
   1acd0:	ldrb	r0, [r9]
   1acd4:	cmp	r0, #0
   1acd8:	beq	1b0f8 <putc_unlocked@plt+0x8f40>
   1acdc:	and	r1, r5, #4
   1ace0:	str	r1, [sp, #24]
   1ace4:	mov	r1, #0
   1ace8:	str	r1, [sp, #4]
   1acec:	mov	r1, #0
   1acf0:	str	r1, [sp, #12]
   1acf4:	str	sl, [sp, #20]
   1acf8:	uxtb	r1, r0
   1acfc:	cmp	r1, #47	; 0x2f
   1ad00:	bne	1ad10 <putc_unlocked@plt+0x8b58>
   1ad04:	ldrb	r0, [r9, #1]!
   1ad08:	cmp	r0, #47	; 0x2f
   1ad0c:	beq	1ad04 <putc_unlocked@plt+0x8b4c>
   1ad10:	mov	r8, r9
   1ad14:	b	1ad1c <putc_unlocked@plt+0x8b64>
   1ad18:	add	r8, r8, #1
   1ad1c:	ldrb	r1, [r8]
   1ad20:	cmp	r1, #0
   1ad24:	cmpne	r1, #47	; 0x2f
   1ad28:	bne	1ad18 <putc_unlocked@plt+0x8b60>
   1ad2c:	sub	r7, r8, r9
   1ad30:	cmp	r7, #1
   1ad34:	beq	1ad4c <putc_unlocked@plt+0x8b94>
   1ad38:	cmp	r7, #2
   1ad3c:	beq	1ad5c <putc_unlocked@plt+0x8ba4>
   1ad40:	cmp	r7, #0
   1ad44:	bne	1ada4 <putc_unlocked@plt+0x8bec>
   1ad48:	b	1b0f8 <putc_unlocked@plt+0x8f40>
   1ad4c:	uxtb	r0, r0
   1ad50:	cmp	r0, #46	; 0x2e
   1ad54:	bne	1ada4 <putc_unlocked@plt+0x8bec>
   1ad58:	b	1b094 <putc_unlocked@plt+0x8edc>
   1ad5c:	uxtb	r0, r0
   1ad60:	cmp	r0, #46	; 0x2e
   1ad64:	bne	1ada4 <putc_unlocked@plt+0x8bec>
   1ad68:	ldrb	r0, [r9, #1]
   1ad6c:	cmp	r0, #46	; 0x2e
   1ad70:	bne	1ada4 <putc_unlocked@plt+0x8bec>
   1ad74:	add	r0, r4, #1
   1ad78:	cmp	r6, r0
   1ad7c:	bls	1b094 <putc_unlocked@plt+0x8edc>
   1ad80:	sub	r0, r6, #1
   1ad84:	mov	r6, r0
   1ad88:	cmp	r0, r4
   1ad8c:	bls	1b094 <putc_unlocked@plt+0x8edc>
   1ad90:	mov	r0, r6
   1ad94:	ldrb	r1, [r0, #-1]!
   1ad98:	cmp	r1, #47	; 0x2f
   1ad9c:	bne	1ad84 <putc_unlocked@plt+0x8bcc>
   1ada0:	b	1b094 <putc_unlocked@plt+0x8edc>
   1ada4:	ldrb	r0, [r6, #-1]
   1ada8:	cmp	r0, #47	; 0x2f
   1adac:	movne	r0, #47	; 0x2f
   1adb0:	strbne	r0, [r6], #1
   1adb4:	ldr	r0, [sl, #4]
   1adb8:	add	r0, r4, r0
   1adbc:	sub	r0, r0, r6
   1adc0:	add	r5, r7, #2
   1adc4:	cmp	r0, r5
   1adc8:	bcs	1adfc <putc_unlocked@plt+0x8c44>
   1adcc:	mov	r0, sl
   1add0:	bl	22154 <_obstack_memory_used@@Base+0x1d74>
   1add4:	cmp	r0, #0
   1add8:	beq	1b1e8 <putc_unlocked@plt+0x9030>
   1addc:	sub	r0, r6, r4
   1ade0:	ldr	r4, [sl]
   1ade4:	ldr	r1, [sl, #4]
   1ade8:	add	r6, r4, r0
   1adec:	add	r0, r4, r1
   1adf0:	sub	r0, r0, r6
   1adf4:	cmp	r0, r5
   1adf8:	bcc	1adcc <putc_unlocked@plt+0x8c14>
   1adfc:	mov	r0, r6
   1ae00:	mov	r1, r9
   1ae04:	str	r7, [sp, #16]
   1ae08:	mov	r2, r7
   1ae0c:	mvn	r3, #0
   1ae10:	bl	121a0 <__mempcpy_chk@plt>
   1ae14:	mov	r6, r0
   1ae18:	mov	r0, #0
   1ae1c:	strb	r0, [r6]
   1ae20:	ldr	r0, [sp, #24]
   1ae24:	cmp	r0, #0
   1ae28:	bne	1ae88 <putc_unlocked@plt+0x8cd0>
   1ae2c:	ldr	r5, [sp, #136]	; 0x88
   1ae30:	ldr	r0, [sp, #140]	; 0x8c
   1ae34:	sub	r7, r0, #1
   1ae38:	mov	r0, r4
   1ae3c:	mov	r1, r5
   1ae40:	mov	r2, r7
   1ae44:	bl	11e34 <readlink@plt>
   1ae48:	cmp	r0, r7
   1ae4c:	blt	1ae64 <putc_unlocked@plt+0x8cac>
   1ae50:	add	r0, sp, #136	; 0x88
   1ae54:	bl	220d0 <_obstack_memory_used@@Base+0x1cf0>
   1ae58:	cmp	r0, #0
   1ae5c:	bne	1ae2c <putc_unlocked@plt+0x8c74>
   1ae60:	b	1b1e8 <putc_unlocked@plt+0x9030>
   1ae64:	mov	sl, r0
   1ae68:	cmp	r0, #0
   1ae6c:	bmi	1ae88 <putc_unlocked@plt+0x8cd0>
   1ae70:	ldr	r0, [sp, #4]
   1ae74:	cmp	r0, #19
   1ae78:	bgt	1aef8 <putc_unlocked@plt+0x8d40>
   1ae7c:	add	r0, r0, #1
   1ae80:	str	r0, [sp, #4]
   1ae84:	b	1af70 <putc_unlocked@plt+0x8db8>
   1ae88:	ldr	r0, [sp, #28]
   1ae8c:	cmp	r0, #2
   1ae90:	bne	1aea0 <putc_unlocked@plt+0x8ce8>
   1ae94:	mov	r9, r8
   1ae98:	ldr	sl, [sp, #20]
   1ae9c:	b	1b0ec <putc_unlocked@plt+0x8f34>
   1aea0:	mov	r0, r8
   1aea4:	bl	1b2a8 <putc_unlocked@plt+0x90f0>
   1aea8:	cmp	r0, #0
   1aeac:	beq	1aecc <putc_unlocked@plt+0x8d14>
   1aeb0:	mov	r0, r4
   1aeb4:	mov	r1, r6
   1aeb8:	bl	1b330 <putc_unlocked@plt+0x9178>
   1aebc:	cmp	r0, #0
   1aec0:	ldr	sl, [sp, #20]
   1aec4:	bne	1b094 <putc_unlocked@plt+0x8edc>
   1aec8:	b	1b0ac <putc_unlocked@plt+0x8ef4>
   1aecc:	ldr	r0, [sp, #24]
   1aed0:	cmp	r0, #0
   1aed4:	ldr	sl, [sp, #20]
   1aed8:	beq	1b084 <putc_unlocked@plt+0x8ecc>
   1aedc:	ldrb	r0, [r8]
   1aee0:	cmp	r0, #0
   1aee4:	beq	1b09c <putc_unlocked@plt+0x8ee4>
   1aee8:	mov	r9, r8
   1aeec:	cmp	r0, #0
   1aef0:	bne	1acf8 <putc_unlocked@plt+0x8b40>
   1aef4:	b	1b0f8 <putc_unlocked@plt+0x8f40>
   1aef8:	ldrb	r0, [r9]
   1aefc:	cmp	r0, #0
   1af00:	beq	1af70 <putc_unlocked@plt+0x8db8>
   1af04:	mov	r0, #0
   1af08:	ldr	r7, [sp, #16]
   1af0c:	strb	r0, [r6, -r7]
   1af10:	ldrb	r0, [r4]
   1af14:	cmp	r0, #0
   1af18:	mov	r0, r4
   1af1c:	movw	r1, #34038	; 0x84f6
   1af20:	movt	r1, #2
   1af24:	moveq	r0, r1
   1af28:	add	r1, sp, #32
   1af2c:	bl	245f4 <_obstack_memory_used@@Base+0x4214>
   1af30:	cmp	r0, #0
   1af34:	bne	1b1dc <putc_unlocked@plt+0x9024>
   1af38:	rsb	r0, r7, #0
   1af3c:	ldrb	r1, [r9]
   1af40:	strb	r1, [r6, r0]
   1af44:	sub	r0, fp, #36	; 0x24
   1af48:	mov	r1, r9
   1af4c:	add	r2, sp, #32
   1af50:	bl	1b210 <putc_unlocked@plt+0x9058>
   1af54:	cmp	r0, #0
   1af58:	beq	1af70 <putc_unlocked@plt+0x8db8>
   1af5c:	ldr	r0, [sp, #28]
   1af60:	cmp	r0, #2
   1af64:	ldr	sl, [sp, #20]
   1af68:	beq	1b094 <putc_unlocked@plt+0x8edc>
   1af6c:	b	1b1d0 <putc_unlocked@plt+0x9018>
   1af70:	mov	r0, #0
   1af74:	strb	r0, [r5, sl]
   1af78:	ldr	r9, [fp, #-1072]	; 0xfffffbd0
   1af7c:	ldr	r0, [sp, #12]
   1af80:	tst	r0, #1
   1af84:	ldr	r0, [sp, #8]
   1af88:	subne	r0, r8, r9
   1af8c:	str	r0, [sp, #8]
   1af90:	mov	r0, r8
   1af94:	bl	11fc0 <strlen@plt>
   1af98:	mvn	r1, sl
   1af9c:	cmp	r0, r1
   1afa0:	bhi	1b1e8 <putc_unlocked@plt+0x9030>
   1afa4:	str	r0, [sp, #16]
   1afa8:	add	r7, r0, sl
   1afac:	ldr	r0, [fp, #-1068]	; 0xfffffbd4
   1afb0:	cmp	r0, r7
   1afb4:	bhi	1afd8 <putc_unlocked@plt+0x8e20>
   1afb8:	sub	r0, fp, #1072	; 0x430
   1afbc:	bl	22154 <_obstack_memory_used@@Base+0x1d74>
   1afc0:	cmp	r0, #0
   1afc4:	beq	1b1e8 <putc_unlocked@plt+0x9030>
   1afc8:	ldr	r0, [fp, #-1068]	; 0xfffffbd4
   1afcc:	cmp	r0, r7
   1afd0:	bls	1afb8 <putc_unlocked@plt+0x8e00>
   1afd4:	ldr	r9, [fp, #-1072]	; 0xfffffbd0
   1afd8:	ldr	r0, [sp, #12]
   1afdc:	tst	r0, #1
   1afe0:	ldr	r0, [sp, #8]
   1afe4:	addne	r8, r9, r0
   1afe8:	add	r0, r9, sl
   1afec:	ldr	r1, [sp, #16]
   1aff0:	add	r2, r1, #1
   1aff4:	mov	r1, r8
   1aff8:	bl	11d38 <memmove@plt>
   1affc:	mov	r0, r9
   1b000:	mov	r1, r5
   1b004:	mov	r2, sl
   1b008:	bl	11d74 <memcpy@plt>
   1b00c:	ldrb	r0, [r5]
   1b010:	cmp	r0, #47	; 0x2f
   1b014:	bne	1b048 <putc_unlocked@plt+0x8e90>
   1b018:	mov	r0, r4
   1b01c:	mov	r1, r5
   1b020:	mov	r2, #0
   1b024:	mvn	r3, #0
   1b028:	bl	121a0 <__mempcpy_chk@plt>
   1b02c:	mov	r6, r0
   1b030:	mov	r0, #47	; 0x2f
   1b034:	strb	r0, [r6], #1
   1b038:	mov	r0, #1
   1b03c:	str	r0, [sp, #12]
   1b040:	ldr	sl, [sp, #20]
   1b044:	b	1b0ec <putc_unlocked@plt+0x8f34>
   1b048:	add	r0, r4, #1
   1b04c:	mov	r1, #1
   1b050:	str	r1, [sp, #12]
   1b054:	cmp	r6, r0
   1b058:	ldr	sl, [sp, #20]
   1b05c:	bls	1b0ec <putc_unlocked@plt+0x8f34>
   1b060:	sub	r0, r6, #1
   1b064:	mov	r6, r0
   1b068:	cmp	r0, r4
   1b06c:	bls	1b0ec <putc_unlocked@plt+0x8f34>
   1b070:	mov	r0, r6
   1b074:	ldrb	r1, [r0, #-1]!
   1b078:	cmp	r1, #47	; 0x2f
   1b07c:	bne	1b064 <putc_unlocked@plt+0x8eac>
   1b080:	b	1b0ec <putc_unlocked@plt+0x8f34>
   1b084:	bl	11fe4 <__errno_location@plt>
   1b088:	ldr	r0, [r0]
   1b08c:	cmp	r0, #22
   1b090:	bne	1b0ac <putc_unlocked@plt+0x8ef4>
   1b094:	mov	r9, r8
   1b098:	b	1b0ec <putc_unlocked@plt+0x8f34>
   1b09c:	mov	r0, r4
   1b0a0:	bl	1b33c <putc_unlocked@plt+0x9184>
   1b0a4:	cmp	r0, #0
   1b0a8:	bne	1b094 <putc_unlocked@plt+0x8edc>
   1b0ac:	mov	r5, #1
   1b0b0:	ldr	r0, [sp, #28]
   1b0b4:	cmp	r0, #1
   1b0b8:	bne	1b16c <putc_unlocked@plt+0x8fb4>
   1b0bc:	bl	11fe4 <__errno_location@plt>
   1b0c0:	ldr	r0, [r0]
   1b0c4:	cmp	r0, #2
   1b0c8:	bne	1b16c <putc_unlocked@plt+0x8fb4>
   1b0cc:	mov	r0, r8
   1b0d0:	movw	r1, #18016	; 0x4660
   1b0d4:	movt	r1, #2
   1b0d8:	bl	12194 <strspn@plt>
   1b0dc:	ldrb	r0, [r8, r0]
   1b0e0:	cmp	r0, #0
   1b0e4:	mov	r9, r8
   1b0e8:	bne	1b16c <putc_unlocked@plt+0x8fb4>
   1b0ec:	ldrb	r0, [r9]
   1b0f0:	cmp	r0, #0
   1b0f4:	bne	1acf8 <putc_unlocked@plt+0x8b40>
   1b0f8:	add	r0, r4, #1
   1b0fc:	mov	r5, #0
   1b100:	cmp	r6, r0
   1b104:	bls	1b16c <putc_unlocked@plt+0x8fb4>
   1b108:	mov	r0, r6
   1b10c:	ldrb	r1, [r0, #-1]!
   1b110:	cmp	r1, #47	; 0x2f
   1b114:	moveq	r6, r0
   1b118:	b	1b16c <putc_unlocked@plt+0x8fb4>
   1b11c:	bl	11fe4 <__errno_location@plt>
   1b120:	mov	r6, r0
   1b124:	ldr	r0, [r6]
   1b128:	cmp	r0, #34	; 0x22
   1b12c:	bne	1b15c <putc_unlocked@plt+0x8fa4>
   1b130:	mov	r0, sl
   1b134:	bl	220d0 <_obstack_memory_used@@Base+0x1cf0>
   1b138:	cmp	r0, #0
   1b13c:	beq	1b1e8 <putc_unlocked@plt+0x9030>
   1b140:	ldr	r4, [sl]
   1b144:	ldr	r1, [sl, #4]
   1b148:	mov	r0, r4
   1b14c:	bl	11f84 <getcwd@plt>
   1b150:	cmp	r0, #0
   1b154:	beq	1b124 <putc_unlocked@plt+0x8f6c>
   1b158:	b	1acc0 <putc_unlocked@plt+0x8b08>
   1b15c:	cmp	r0, #12
   1b160:	beq	1b1e8 <putc_unlocked@plt+0x9030>
   1b164:	mov	r5, #1
   1b168:	mov	r6, r4
   1b16c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b170:	cmp	r0, #0
   1b174:	beq	1b17c <putc_unlocked@plt+0x8fc4>
   1b178:	bl	1c4d8 <putc_unlocked@plt+0xa320>
   1b17c:	sub	r0, fp, #1072	; 0x430
   1b180:	bl	1b364 <putc_unlocked@plt+0x91ac>
   1b184:	add	r0, sp, #136	; 0x88
   1b188:	bl	1b364 <putc_unlocked@plt+0x91ac>
   1b18c:	cmp	r5, #0
   1b190:	beq	1b1a4 <putc_unlocked@plt+0x8fec>
   1b194:	mov	r0, sl
   1b198:	bl	1b364 <putc_unlocked@plt+0x91ac>
   1b19c:	mov	r6, #0
   1b1a0:	b	1b1c4 <putc_unlocked@plt+0x900c>
   1b1a4:	mov	r0, #0
   1b1a8:	strb	r0, [r6], -r4
   1b1ac:	add	r1, r6, #1
   1b1b0:	mov	r0, sl
   1b1b4:	bl	22064 <_obstack_memory_used@@Base+0x1c84>
   1b1b8:	mov	r6, r0
   1b1bc:	cmp	r0, #0
   1b1c0:	beq	1b1e8 <putc_unlocked@plt+0x9030>
   1b1c4:	mov	r0, r6
   1b1c8:	sub	sp, fp, #28
   1b1cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b1d0:	bl	11fe4 <__errno_location@plt>
   1b1d4:	mov	r1, #40	; 0x28
   1b1d8:	str	r1, [r0]
   1b1dc:	mov	r5, #1
   1b1e0:	ldr	sl, [sp, #20]
   1b1e4:	b	1b16c <putc_unlocked@plt+0x8fb4>
   1b1e8:	bl	23138 <_obstack_memory_used@@Base+0x2d58>
   1b1ec:	sub	r1, r0, #1
   1b1f0:	ands	r0, r0, r1
   1b1f4:	movwne	r0, #1
   1b1f8:	bx	lr
   1b1fc:	mov	r1, #1024	; 0x400
   1b200:	add	r2, r0, #8
   1b204:	str	r2, [r0]
   1b208:	str	r1, [r0, #4]
   1b20c:	bx	lr
   1b210:	push	{r4, r5, r6, sl, fp, lr}
   1b214:	add	fp, sp, #16
   1b218:	sub	sp, sp, #8
   1b21c:	mov	r4, r2
   1b220:	mov	r5, r1
   1b224:	mov	r6, r0
   1b228:	ldr	r0, [r0]
   1b22c:	cmp	r0, #0
   1b230:	bne	1b268 <putc_unlocked@plt+0x90b0>
   1b234:	movw	r0, #52548	; 0xcd44
   1b238:	movt	r0, #1
   1b23c:	str	r0, [sp]
   1b240:	movw	r2, #52388	; 0xcca4
   1b244:	movt	r2, #1
   1b248:	movw	r3, #52444	; 0xccdc
   1b24c:	movt	r3, #1
   1b250:	mov	r0, #7
   1b254:	mov	r1, #0
   1b258:	bl	1c1fc <putc_unlocked@plt+0xa044>
   1b25c:	str	r0, [r6]
   1b260:	cmp	r0, #0
   1b264:	beq	1b2a4 <putc_unlocked@plt+0x90ec>
   1b268:	ldr	r0, [r6]
   1b26c:	mov	r1, r5
   1b270:	mov	r2, r4
   1b274:	bl	1b5ac <putc_unlocked@plt+0x93f4>
   1b278:	mov	r1, r0
   1b27c:	mov	r0, #1
   1b280:	cmp	r1, #0
   1b284:	bne	1b29c <putc_unlocked@plt+0x90e4>
   1b288:	ldr	r0, [r6]
   1b28c:	mov	r1, r5
   1b290:	mov	r2, r4
   1b294:	bl	1b530 <putc_unlocked@plt+0x9378>
   1b298:	mov	r0, #0
   1b29c:	sub	sp, fp, #16
   1b2a0:	pop	{r4, r5, r6, sl, fp, pc}
   1b2a4:	bl	23138 <_obstack_memory_used@@Base+0x2d58>
   1b2a8:	mov	r1, r0
   1b2ac:	ldrb	r2, [r0]
   1b2b0:	mov	r0, #0
   1b2b4:	cmp	r2, #47	; 0x2f
   1b2b8:	bxne	lr
   1b2bc:	mov	r0, #1
   1b2c0:	mov	ip, #0
   1b2c4:	mov	r3, r1
   1b2c8:	ldrb	r2, [r1, #1]!
   1b2cc:	cmp	r2, #47	; 0x2f
   1b2d0:	beq	1b2c4 <putc_unlocked@plt+0x910c>
   1b2d4:	cmp	r2, #46	; 0x2e
   1b2d8:	bne	1b318 <putc_unlocked@plt+0x9160>
   1b2dc:	add	r1, r3, #2
   1b2e0:	ldrb	r2, [r1]
   1b2e4:	cmp	r2, #47	; 0x2f
   1b2e8:	beq	1b2c4 <putc_unlocked@plt+0x910c>
   1b2ec:	cmp	r2, #0
   1b2f0:	moveq	ip, #1
   1b2f4:	moveq	r0, ip
   1b2f8:	bxeq	lr
   1b2fc:	cmp	r2, #46	; 0x2e
   1b300:	bne	1b328 <putc_unlocked@plt+0x9170>
   1b304:	ldrb	r1, [r3, #3]
   1b308:	cmp	r1, #0
   1b30c:	cmpne	r1, #47	; 0x2f
   1b310:	bne	1b328 <putc_unlocked@plt+0x9170>
   1b314:	bx	lr
   1b318:	cmp	r2, #0
   1b31c:	movne	r0, ip
   1b320:	bxne	lr
   1b324:	bx	lr
   1b328:	mov	r0, #0
   1b32c:	bx	lr
   1b330:	mov	r2, #47	; 0x2f
   1b334:	strh	r2, [r1]
   1b338:	b	1b33c <putc_unlocked@plt+0x9184>
   1b33c:	push	{fp, lr}
   1b340:	mov	fp, sp
   1b344:	mov	r1, r0
   1b348:	mvn	r0, #99	; 0x63
   1b34c:	mov	r2, #0
   1b350:	mov	r3, #512	; 0x200
   1b354:	bl	11d50 <faccessat@plt>
   1b358:	clz	r0, r0
   1b35c:	lsr	r0, r0, #5
   1b360:	pop	{fp, pc}
   1b364:	mov	r1, r0
   1b368:	ldr	r0, [r1], #8
   1b36c:	cmp	r0, r1
   1b370:	bxeq	lr
   1b374:	b	1bcc8 <putc_unlocked@plt+0x9b10>
   1b378:	movw	r1, #41952	; 0xa3e0
   1b37c:	movt	r1, #3
   1b380:	str	r0, [r1]
   1b384:	bx	lr
   1b388:	movw	r1, #41956	; 0xa3e4
   1b38c:	movt	r1, #3
   1b390:	strb	r0, [r1]
   1b394:	bx	lr
   1b398:	push	{r4, r5, r6, sl, fp, lr}
   1b39c:	add	fp, sp, #16
   1b3a0:	sub	sp, sp, #8
   1b3a4:	movw	r0, #37668	; 0x9324
   1b3a8:	movt	r0, #3
   1b3ac:	ldr	r0, [r0]
   1b3b0:	bl	23bfc <_obstack_memory_used@@Base+0x381c>
   1b3b4:	cmp	r0, #0
   1b3b8:	beq	1b3e0 <putc_unlocked@plt+0x9228>
   1b3bc:	movw	r0, #41956	; 0xa3e4
   1b3c0:	movt	r0, #3
   1b3c4:	ldrb	r0, [r0]
   1b3c8:	cmp	r0, #0
   1b3cc:	beq	1b400 <putc_unlocked@plt+0x9248>
   1b3d0:	bl	11fe4 <__errno_location@plt>
   1b3d4:	ldr	r0, [r0]
   1b3d8:	cmp	r0, #32
   1b3dc:	bne	1b400 <putc_unlocked@plt+0x9248>
   1b3e0:	movw	r0, #37664	; 0x9320
   1b3e4:	movt	r0, #3
   1b3e8:	ldr	r0, [r0]
   1b3ec:	bl	23bfc <_obstack_memory_used@@Base+0x381c>
   1b3f0:	cmp	r0, #0
   1b3f4:	subeq	sp, fp, #16
   1b3f8:	popeq	{r4, r5, r6, sl, fp, pc}
   1b3fc:	b	1b470 <putc_unlocked@plt+0x92b8>
   1b400:	movw	r1, #34025	; 0x84e9
   1b404:	movt	r1, #2
   1b408:	mov	r0, #0
   1b40c:	mov	r2, #5
   1b410:	bl	11db0 <dcgettext@plt>
   1b414:	mov	r4, r0
   1b418:	movw	r0, #41952	; 0xa3e0
   1b41c:	movt	r0, #3
   1b420:	ldr	r6, [r0]
   1b424:	bl	11fe4 <__errno_location@plt>
   1b428:	ldr	r5, [r0]
   1b42c:	cmp	r6, #0
   1b430:	bne	1b44c <putc_unlocked@plt+0x9294>
   1b434:	movw	r2, #34022	; 0x84e6
   1b438:	movt	r2, #2
   1b43c:	mov	r0, #0
   1b440:	mov	r1, r5
   1b444:	mov	r3, r4
   1b448:	b	1b46c <putc_unlocked@plt+0x92b4>
   1b44c:	mov	r0, r6
   1b450:	bl	21afc <_obstack_memory_used@@Base+0x171c>
   1b454:	mov	r3, r0
   1b458:	str	r4, [sp]
   1b45c:	movw	r2, #25611	; 0x640b
   1b460:	movt	r2, #2
   1b464:	mov	r0, #0
   1b468:	mov	r1, r5
   1b46c:	bl	11eb8 <error@plt>
   1b470:	movw	r0, #37572	; 0x92c4
   1b474:	movt	r0, #3
   1b478:	ldr	r0, [r0]
   1b47c:	bl	11d68 <_exit@plt>
   1b480:	push	{r4, r5, r6, sl, fp, lr}
   1b484:	add	fp, sp, #16
   1b488:	mov	r4, r0
   1b48c:	mov	r5, r0
   1b490:	ldrb	r6, [r5], #-1
   1b494:	bl	1a7a8 <putc_unlocked@plt+0x85f0>
   1b498:	sub	r2, r0, r4
   1b49c:	sub	r0, r6, #47	; 0x2f
   1b4a0:	clz	r0, r0
   1b4a4:	lsr	r1, r0, #5
   1b4a8:	mov	r0, r2
   1b4ac:	cmp	r2, r1
   1b4b0:	bls	1b4c4 <putc_unlocked@plt+0x930c>
   1b4b4:	ldrb	r3, [r5, r0]
   1b4b8:	sub	r2, r0, #1
   1b4bc:	cmp	r3, #47	; 0x2f
   1b4c0:	beq	1b4a8 <putc_unlocked@plt+0x92f0>
   1b4c4:	pop	{r4, r5, r6, sl, fp, pc}
   1b4c8:	push	{r4, r5, r6, sl, fp, lr}
   1b4cc:	add	fp, sp, #16
   1b4d0:	mov	r6, r0
   1b4d4:	bl	1b480 <putc_unlocked@plt+0x92c8>
   1b4d8:	mov	r4, r0
   1b4dc:	cmp	r0, #0
   1b4e0:	addeq	r0, r0, #1
   1b4e4:	add	r0, r0, #1
   1b4e8:	bl	23a30 <_obstack_memory_used@@Base+0x3650>
   1b4ec:	mov	r5, r0
   1b4f0:	cmp	r0, #0
   1b4f4:	beq	1b520 <putc_unlocked@plt+0x9368>
   1b4f8:	mov	r0, r5
   1b4fc:	mov	r1, r6
   1b500:	mov	r2, r4
   1b504:	bl	11d74 <memcpy@plt>
   1b508:	cmp	r4, #0
   1b50c:	moveq	r0, #46	; 0x2e
   1b510:	strbeq	r0, [r5, r4]
   1b514:	moveq	r4, #1
   1b518:	mov	r0, #0
   1b51c:	strb	r0, [r5, r4]
   1b520:	mov	r0, r5
   1b524:	pop	{r4, r5, r6, sl, fp, pc}
   1b528:	mov	r0, #0
   1b52c:	bx	lr
   1b530:	push	{r4, r5, r6, r7, fp, lr}
   1b534:	add	fp, sp, #16
   1b538:	cmp	r0, #0
   1b53c:	beq	1b5a4 <putc_unlocked@plt+0x93ec>
   1b540:	mov	r6, r2
   1b544:	mov	r7, r1
   1b548:	mov	r5, r0
   1b54c:	mov	r0, #24
   1b550:	bl	22db0 <_obstack_memory_used@@Base+0x29d0>
   1b554:	mov	r4, r0
   1b558:	mov	r0, r7
   1b55c:	bl	23118 <_obstack_memory_used@@Base+0x2d38>
   1b560:	str	r0, [r4]
   1b564:	ldrd	r0, [r6, #96]	; 0x60
   1b568:	str	r0, [r4, #8]
   1b56c:	str	r1, [r4, #12]
   1b570:	ldrd	r0, [r6]
   1b574:	str	r1, [r4, #20]
   1b578:	str	r0, [r4, #16]
   1b57c:	mov	r0, r5
   1b580:	mov	r1, r4
   1b584:	bl	1ca98 <putc_unlocked@plt+0xa8e0>
   1b588:	cmp	r0, #0
   1b58c:	beq	1b5a8 <putc_unlocked@plt+0x93f0>
   1b590:	cmp	r0, r4
   1b594:	beq	1b5a4 <putc_unlocked@plt+0x93ec>
   1b598:	mov	r0, r4
   1b59c:	pop	{r4, r5, r6, r7, fp, lr}
   1b5a0:	b	1cd44 <putc_unlocked@plt+0xab8c>
   1b5a4:	pop	{r4, r5, r6, r7, fp, pc}
   1b5a8:	bl	23138 <_obstack_memory_used@@Base+0x2d58>
   1b5ac:	cmp	r0, #0
   1b5b0:	moveq	r0, #0
   1b5b4:	bxeq	lr
   1b5b8:	push	{r4, r5, fp, lr}
   1b5bc:	add	fp, sp, #8
   1b5c0:	sub	sp, sp, #24
   1b5c4:	mov	ip, sp
   1b5c8:	add	r3, ip, #8
   1b5cc:	add	ip, ip, #16
   1b5d0:	str	r1, [sp]
   1b5d4:	ldrd	r4, [r2, #96]	; 0x60
   1b5d8:	strd	r4, [r3]
   1b5dc:	ldrd	r2, [r2]
   1b5e0:	strd	r2, [ip]
   1b5e4:	mov	r1, sp
   1b5e8:	bl	1bf50 <putc_unlocked@plt+0x9d98>
   1b5ec:	cmp	r0, #0
   1b5f0:	movwne	r0, #1
   1b5f4:	sub	sp, fp, #8
   1b5f8:	pop	{r4, r5, fp, pc}
   1b5fc:	push	{r4, r5, fp, lr}
   1b600:	add	fp, sp, #8
   1b604:	mov	r4, r1
   1b608:	mov	r5, r0
   1b60c:	bl	1b6e0 <putc_unlocked@plt+0x9528>
   1b610:	mov	r1, #32
   1b614:	strh	r1, [r4, #10]
   1b618:	mov	r1, #119	; 0x77
   1b61c:	tst	r5, #2
   1b620:	mov	r2, #119	; 0x77
   1b624:	movweq	r2, #45	; 0x2d
   1b628:	strb	r2, [r4, #8]
   1b62c:	mov	r2, #114	; 0x72
   1b630:	tst	r5, #4
   1b634:	mov	r3, #114	; 0x72
   1b638:	movweq	r3, #45	; 0x2d
   1b63c:	strb	r3, [r4, #7]
   1b640:	tst	r5, #16
   1b644:	mov	r3, #119	; 0x77
   1b648:	movweq	r3, #45	; 0x2d
   1b64c:	strb	r3, [r4, #5]
   1b650:	tst	r5, #32
   1b654:	mov	r3, #114	; 0x72
   1b658:	movweq	r3, #45	; 0x2d
   1b65c:	strb	r3, [r4, #4]
   1b660:	tst	r5, #128	; 0x80
   1b664:	movweq	r1, #45	; 0x2d
   1b668:	strb	r1, [r4, #2]
   1b66c:	tst	r5, #256	; 0x100
   1b670:	movweq	r2, #45	; 0x2d
   1b674:	strb	r2, [r4, #1]
   1b678:	strb	r0, [r4]
   1b67c:	ands	r0, r5, #1
   1b680:	mov	r0, #45	; 0x2d
   1b684:	mov	r1, #45	; 0x2d
   1b688:	movwne	r1, #120	; 0x78
   1b68c:	mov	r2, #84	; 0x54
   1b690:	movwne	r2, #116	; 0x74
   1b694:	tst	r5, #512	; 0x200
   1b698:	moveq	r2, r1
   1b69c:	strb	r2, [r4, #9]
   1b6a0:	ands	r1, r5, #8
   1b6a4:	mov	r1, #45	; 0x2d
   1b6a8:	movwne	r1, #120	; 0x78
   1b6ac:	mov	r2, #83	; 0x53
   1b6b0:	mov	r3, #83	; 0x53
   1b6b4:	movwne	r3, #115	; 0x73
   1b6b8:	tst	r5, #1024	; 0x400
   1b6bc:	moveq	r3, r1
   1b6c0:	strb	r3, [r4, #6]
   1b6c4:	ands	r1, r5, #64	; 0x40
   1b6c8:	movwne	r0, #120	; 0x78
   1b6cc:	movwne	r2, #115	; 0x73
   1b6d0:	tst	r5, #2048	; 0x800
   1b6d4:	moveq	r2, r0
   1b6d8:	strb	r2, [r4, #3]
   1b6dc:	pop	{r4, r5, fp, pc}
   1b6e0:	and	r0, r0, #61440	; 0xf000
   1b6e4:	sub	r0, r0, #4096	; 0x1000
   1b6e8:	lsr	r1, r0, #12
   1b6ec:	cmp	r1, #11
   1b6f0:	bhi	1b740 <putc_unlocked@plt+0x9588>
   1b6f4:	mov	r0, #45	; 0x2d
   1b6f8:	add	r2, pc, #0
   1b6fc:	ldr	pc, [r2, r1, lsl #2]
   1b700:	andeq	fp, r1, r0, lsr r7
   1b704:	andeq	fp, r1, r8, lsr r7
   1b708:	andeq	fp, r1, r0, asr #14
   1b70c:	andeq	fp, r1, r8, asr #14
   1b710:	andeq	fp, r1, r0, asr #14
   1b714:	andeq	fp, r1, r0, ror #14
   1b718:	andeq	fp, r1, r0, asr #14
   1b71c:	andeq	fp, r1, r4, asr #14
   1b720:	andeq	fp, r1, r0, asr #14
   1b724:	andeq	fp, r1, r0, asr r7
   1b728:	andeq	fp, r1, r0, asr #14
   1b72c:	andeq	fp, r1, r8, asr r7
   1b730:	mov	r0, #112	; 0x70
   1b734:	bx	lr
   1b738:	mov	r0, #99	; 0x63
   1b73c:	bx	lr
   1b740:	mov	r0, #63	; 0x3f
   1b744:	bx	lr
   1b748:	mov	r0, #100	; 0x64
   1b74c:	bx	lr
   1b750:	mov	r0, #108	; 0x6c
   1b754:	bx	lr
   1b758:	mov	r0, #115	; 0x73
   1b75c:	bx	lr
   1b760:	mov	r0, #98	; 0x62
   1b764:	bx	lr
   1b768:	ldr	r0, [r0, #16]
   1b76c:	b	1b5fc <putc_unlocked@plt+0x9444>
   1b770:	push	{fp, lr}
   1b774:	mov	fp, sp
   1b778:	bl	1b788 <putc_unlocked@plt+0x95d0>
   1b77c:	cmp	r0, #0
   1b780:	popne	{fp, pc}
   1b784:	bl	23138 <_obstack_memory_used@@Base+0x2d58>
   1b788:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b78c:	add	fp, sp, #28
   1b790:	push	{r2}		; (str r2, [sp, #-4]!)
   1b794:	mov	sl, r1
   1b798:	mov	r7, r0
   1b79c:	bl	1a7a8 <putc_unlocked@plt+0x85f0>
   1b7a0:	sub	r4, r0, r7
   1b7a4:	bl	1a7f4 <putc_unlocked@plt+0x863c>
   1b7a8:	mov	r6, r0
   1b7ac:	add	r5, r4, r0
   1b7b0:	mov	r0, sl
   1b7b4:	bl	11fc0 <strlen@plt>
   1b7b8:	mov	r9, r0
   1b7bc:	cmp	r6, #0
   1b7c0:	beq	1b7e8 <putc_unlocked@plt+0x9630>
   1b7c4:	add	r0, r5, r7
   1b7c8:	ldrb	r0, [r0, #-1]
   1b7cc:	mov	r4, #0
   1b7d0:	cmp	r0, #47	; 0x2f
   1b7d4:	beq	1b7f8 <putc_unlocked@plt+0x9640>
   1b7d8:	ldrb	r0, [sl]
   1b7dc:	subs	r4, r0, #47	; 0x2f
   1b7e0:	movwne	r4, #47	; 0x2f
   1b7e4:	b	1b7f8 <putc_unlocked@plt+0x9640>
   1b7e8:	ldrb	r0, [sl]
   1b7ec:	mov	r4, #0
   1b7f0:	cmp	r0, #47	; 0x2f
   1b7f4:	movweq	r4, #46	; 0x2e
   1b7f8:	add	r0, r9, r5
   1b7fc:	uxtb	r8, r4
   1b800:	cmp	r8, #0
   1b804:	movwne	r8, #1
   1b808:	add	r0, r0, r8
   1b80c:	add	r0, r0, #1
   1b810:	bl	23a30 <_obstack_memory_used@@Base+0x3650>
   1b814:	mov	r6, r0
   1b818:	cmp	r0, #0
   1b81c:	beq	1b85c <putc_unlocked@plt+0x96a4>
   1b820:	mov	r0, r6
   1b824:	mov	r1, r7
   1b828:	mov	r2, r5
   1b82c:	mvn	r3, #0
   1b830:	bl	121a0 <__mempcpy_chk@plt>
   1b834:	strb	r4, [r0], r8
   1b838:	ldr	r1, [sp]
   1b83c:	cmp	r1, #0
   1b840:	strne	r0, [r1]
   1b844:	mov	r1, sl
   1b848:	mov	r2, r9
   1b84c:	mvn	r3, #0
   1b850:	bl	121a0 <__mempcpy_chk@plt>
   1b854:	mov	r1, #0
   1b858:	strb	r1, [r0]
   1b85c:	mov	r0, r6
   1b860:	sub	sp, fp, #28
   1b864:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b868:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b86c:	add	fp, sp, #28
   1b870:	sub	sp, sp, #12
   1b874:	mov	r5, r1
   1b878:	mov	r6, r0
   1b87c:	bl	11ccc <strcmp@plt>
   1b880:	cmp	r0, #0
   1b884:	beq	1b930 <putc_unlocked@plt+0x9778>
   1b888:	ldrb	r4, [r6]
   1b88c:	mvn	r7, #0
   1b890:	cmp	r4, #0
   1b894:	beq	1b93c <putc_unlocked@plt+0x9784>
   1b898:	ldrb	r8, [r5]
   1b89c:	cmp	r8, #0
   1b8a0:	beq	1b938 <putc_unlocked@plt+0x9780>
   1b8a4:	mov	sl, r0
   1b8a8:	movw	r0, #34038	; 0x84f6
   1b8ac:	movt	r0, #2
   1b8b0:	mov	r1, r6
   1b8b4:	bl	11ccc <strcmp@plt>
   1b8b8:	cmp	r0, #0
   1b8bc:	beq	1b93c <putc_unlocked@plt+0x9784>
   1b8c0:	movw	r0, #34038	; 0x84f6
   1b8c4:	movt	r0, #2
   1b8c8:	mov	r1, r5
   1b8cc:	bl	11ccc <strcmp@plt>
   1b8d0:	cmp	r0, #0
   1b8d4:	beq	1b938 <putc_unlocked@plt+0x9780>
   1b8d8:	movw	r0, #34037	; 0x84f5
   1b8dc:	movt	r0, #2
   1b8e0:	mov	r1, r6
   1b8e4:	bl	11ccc <strcmp@plt>
   1b8e8:	cmp	r0, #0
   1b8ec:	beq	1b93c <putc_unlocked@plt+0x9784>
   1b8f0:	movw	r0, #34037	; 0x84f5
   1b8f4:	movt	r0, #2
   1b8f8:	mov	r1, r5
   1b8fc:	bl	11ccc <strcmp@plt>
   1b900:	cmp	r0, #0
   1b904:	beq	1b938 <putc_unlocked@plt+0x9780>
   1b908:	cmp	r4, #46	; 0x2e
   1b90c:	bne	1b918 <putc_unlocked@plt+0x9760>
   1b910:	cmp	r8, #46	; 0x2e
   1b914:	bne	1b93c <putc_unlocked@plt+0x9784>
   1b918:	cmp	r4, #46	; 0x2e
   1b91c:	bne	1b948 <putc_unlocked@plt+0x9790>
   1b920:	cmp	r8, #46	; 0x2e
   1b924:	addeq	r5, r5, #1
   1b928:	addeq	r6, r6, #1
   1b92c:	b	1b954 <putc_unlocked@plt+0x979c>
   1b930:	mov	r7, #0
   1b934:	b	1b93c <putc_unlocked@plt+0x9784>
   1b938:	mov	r7, #1
   1b93c:	mov	r0, r7
   1b940:	sub	sp, fp, #28
   1b944:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b948:	cmp	r8, #46	; 0x2e
   1b94c:	mov	r7, #1
   1b950:	beq	1b93c <putc_unlocked@plt+0x9784>
   1b954:	stmib	sp, {r5, r6}
   1b958:	add	r0, sp, #8
   1b95c:	bl	1b9e8 <putc_unlocked@plt+0x9830>
   1b960:	mov	r7, r0
   1b964:	add	r0, sp, #4
   1b968:	bl	1b9e8 <putc_unlocked@plt+0x9830>
   1b96c:	ldr	r2, [sp, #4]
   1b970:	cmp	r0, #0
   1b974:	mov	r1, r2
   1b978:	movne	r1, r0
   1b97c:	sub	r8, r1, r5
   1b980:	ldr	r4, [sp, #8]
   1b984:	cmp	r7, #0
   1b988:	mov	r1, r4
   1b98c:	movne	r1, r7
   1b990:	sub	r9, r1, r6
   1b994:	orrs	r0, r7, r0
   1b998:	beq	1b9c4 <putc_unlocked@plt+0x980c>
   1b99c:	cmp	r9, r8
   1b9a0:	bne	1b9c4 <putc_unlocked@plt+0x980c>
   1b9a4:	mov	r7, r2
   1b9a8:	mov	r0, r6
   1b9ac:	mov	r1, r5
   1b9b0:	mov	r2, r9
   1b9b4:	bl	12140 <strncmp@plt>
   1b9b8:	cmp	r0, #0
   1b9bc:	subeq	r8, r7, r5
   1b9c0:	subeq	r9, r4, r6
   1b9c4:	mov	r0, r6
   1b9c8:	mov	r1, r9
   1b9cc:	mov	r2, r5
   1b9d0:	mov	r3, r8
   1b9d4:	bl	1ba8c <putc_unlocked@plt+0x98d4>
   1b9d8:	cmp	r0, #0
   1b9dc:	movne	sl, r0
   1b9e0:	mov	r7, sl
   1b9e4:	b	1b93c <putc_unlocked@plt+0x9784>
   1b9e8:	push	{r4, r5, fp, lr}
   1b9ec:	add	fp, sp, #8
   1b9f0:	mov	r4, r0
   1b9f4:	ldr	r2, [r0]
   1b9f8:	ldrb	r0, [r2]
   1b9fc:	cmp	r0, #0
   1ba00:	beq	1ba80 <putc_unlocked@plt+0x98c8>
   1ba04:	mov	r1, #0
   1ba08:	mov	r5, #0
   1ba0c:	b	1ba34 <putc_unlocked@plt+0x987c>
   1ba10:	cmp	r5, #0
   1ba14:	moveq	r5, r2
   1ba18:	mov	r1, #1
   1ba1c:	ldr	r0, [r4]
   1ba20:	add	r2, r0, #1
   1ba24:	str	r2, [r4]
   1ba28:	ldrb	r0, [r0, #1]
   1ba2c:	cmp	r0, #0
   1ba30:	beq	1ba78 <putc_unlocked@plt+0x98c0>
   1ba34:	uxtb	r0, r0
   1ba38:	tst	r1, #1
   1ba3c:	beq	1ba48 <putc_unlocked@plt+0x9890>
   1ba40:	bl	1a85c <putc_unlocked@plt+0x86a4>
   1ba44:	b	1ba54 <putc_unlocked@plt+0x989c>
   1ba48:	cmp	r0, #46	; 0x2e
   1ba4c:	beq	1ba10 <putc_unlocked@plt+0x9858>
   1ba50:	bl	1a82c <putc_unlocked@plt+0x8674>
   1ba54:	mov	r1, #0
   1ba58:	cmp	r0, #0
   1ba5c:	bne	1ba1c <putc_unlocked@plt+0x9864>
   1ba60:	ldr	r0, [r4]
   1ba64:	ldrb	r0, [r0]
   1ba68:	mov	r1, #0
   1ba6c:	cmp	r0, #126	; 0x7e
   1ba70:	movne	r5, r1
   1ba74:	b	1ba1c <putc_unlocked@plt+0x9864>
   1ba78:	mov	r0, r5
   1ba7c:	pop	{r4, r5, fp, pc}
   1ba80:	mov	r5, #0
   1ba84:	mov	r0, r5
   1ba88:	pop	{r4, r5, fp, pc}
   1ba8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ba90:	add	fp, sp, #28
   1ba94:	sub	sp, sp, #20
   1ba98:	mov	r6, r3
   1ba9c:	mov	r5, r2
   1baa0:	str	r1, [sp, #16]
   1baa4:	mov	r7, r0
   1baa8:	mov	r8, #0
   1baac:	mov	r9, #0
   1bab0:	str	r3, [sp, #12]
   1bab4:	str	r0, [sp, #8]
   1bab8:	cmp	r8, r6
   1babc:	bcc	1bacc <putc_unlocked@plt+0x9914>
   1bac0:	ldr	r0, [sp, #16]
   1bac4:	cmp	r9, r0
   1bac8:	bcs	1bc6c <putc_unlocked@plt+0x9ab4>
   1bacc:	add	sl, r7, r9
   1bad0:	sub	r7, r9, #1
   1bad4:	ldr	r0, [sp, #16]
   1bad8:	cmp	r9, r0
   1badc:	bcs	1baf4 <putc_unlocked@plt+0x993c>
   1bae0:	ldr	r0, [sp, #8]
   1bae4:	ldrb	r0, [r0, r9]
   1bae8:	bl	1a8cc <putc_unlocked@plt+0x8714>
   1baec:	cmp	r0, #0
   1baf0:	beq	1bb10 <putc_unlocked@plt+0x9958>
   1baf4:	ldr	r0, [sp, #12]
   1baf8:	cmp	r8, r0
   1bafc:	bcs	1bb68 <putc_unlocked@plt+0x99b0>
   1bb00:	ldrb	r0, [r5, r8]
   1bb04:	bl	1a8cc <putc_unlocked@plt+0x8714>
   1bb08:	cmp	r0, #0
   1bb0c:	bne	1bb68 <putc_unlocked@plt+0x99b0>
   1bb10:	mov	r4, #0
   1bb14:	ldr	r0, [sp, #16]
   1bb18:	cmp	r0, r9
   1bb1c:	mov	r6, #0
   1bb20:	beq	1bb34 <putc_unlocked@plt+0x997c>
   1bb24:	ldr	r0, [sp, #8]
   1bb28:	ldrb	r0, [r0, r9]
   1bb2c:	bl	1bc84 <putc_unlocked@plt+0x9acc>
   1bb30:	mov	r6, r0
   1bb34:	ldr	r0, [sp, #12]
   1bb38:	cmp	r0, r8
   1bb3c:	beq	1bb4c <putc_unlocked@plt+0x9994>
   1bb40:	ldrb	r0, [r5, r8]
   1bb44:	bl	1bc84 <putc_unlocked@plt+0x9acc>
   1bb48:	mov	r4, r0
   1bb4c:	cmp	r6, r4
   1bb50:	bne	1bc5c <putc_unlocked@plt+0x9aa4>
   1bb54:	add	sl, sl, #1
   1bb58:	add	r7, r7, #1
   1bb5c:	add	r8, r8, #1
   1bb60:	add	r9, r9, #1
   1bb64:	b	1bad4 <putc_unlocked@plt+0x991c>
   1bb68:	mov	r9, r7
   1bb6c:	ldr	r7, [sp, #8]
   1bb70:	mov	r6, sl
   1bb74:	add	r0, r7, r9
   1bb78:	ldrb	r0, [r0, #1]
   1bb7c:	add	sl, sl, #1
   1bb80:	add	r9, r9, #1
   1bb84:	cmp	r0, #48	; 0x30
   1bb88:	beq	1bb70 <putc_unlocked@plt+0x99b8>
   1bb8c:	ldrb	r0, [r5, r8]
   1bb90:	add	r8, r8, #1
   1bb94:	cmp	r0, #48	; 0x30
   1bb98:	beq	1bb8c <putc_unlocked@plt+0x99d4>
   1bb9c:	mov	sl, r7
   1bba0:	ldrb	r0, [sl, r9]!
   1bba4:	bl	1a8cc <putc_unlocked@plt+0x8714>
   1bba8:	cmp	r0, #0
   1bbac:	beq	1bc08 <putc_unlocked@plt+0x9a50>
   1bbb0:	add	r0, r5, r8
   1bbb4:	str	r0, [sp, #4]
   1bbb8:	mov	r7, #0
   1bbbc:	mov	r4, #0
   1bbc0:	b	1bbd8 <putc_unlocked@plt+0x9a20>
   1bbc4:	ldrb	r0, [r6, #1]!
   1bbc8:	bl	1a8cc <putc_unlocked@plt+0x8714>
   1bbcc:	add	r7, r7, #1
   1bbd0:	cmp	r0, #0
   1bbd4:	beq	1bc18 <putc_unlocked@plt+0x9a60>
   1bbd8:	ldr	r0, [sp, #4]
   1bbdc:	add	sl, r0, r7
   1bbe0:	ldrb	r0, [sl, #-1]
   1bbe4:	bl	1a8cc <putc_unlocked@plt+0x8714>
   1bbe8:	cmp	r0, #0
   1bbec:	beq	1bc18 <putc_unlocked@plt+0x9a60>
   1bbf0:	cmp	r4, #0
   1bbf4:	bne	1bbc4 <putc_unlocked@plt+0x9a0c>
   1bbf8:	ldrb	r0, [sl, #-1]
   1bbfc:	ldrb	r1, [r6]
   1bc00:	sub	r4, r1, r0
   1bc04:	b	1bbc4 <putc_unlocked@plt+0x9a0c>
   1bc08:	sub	r8, r8, #1
   1bc0c:	mov	r4, #0
   1bc10:	ldr	r6, [sp, #12]
   1bc14:	b	1bc30 <putc_unlocked@plt+0x9a78>
   1bc18:	add	r9, r9, r7
   1bc1c:	add	r0, r8, r7
   1bc20:	sub	r8, r0, #1
   1bc24:	mov	sl, r6
   1bc28:	ldr	r6, [sp, #12]
   1bc2c:	ldr	r7, [sp, #8]
   1bc30:	ldrb	r0, [sl]
   1bc34:	bl	1a8cc <putc_unlocked@plt+0x8714>
   1bc38:	cmp	r0, #0
   1bc3c:	bne	1bc74 <putc_unlocked@plt+0x9abc>
   1bc40:	ldrb	r0, [r5, r8]
   1bc44:	bl	1a8cc <putc_unlocked@plt+0x8714>
   1bc48:	cmp	r0, #0
   1bc4c:	bne	1bc7c <putc_unlocked@plt+0x9ac4>
   1bc50:	cmp	r4, #0
   1bc54:	beq	1bab8 <putc_unlocked@plt+0x9900>
   1bc58:	b	1bc60 <putc_unlocked@plt+0x9aa8>
   1bc5c:	sub	r4, r6, r4
   1bc60:	mov	r0, r4
   1bc64:	sub	sp, fp, #28
   1bc68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bc6c:	mov	r4, #0
   1bc70:	b	1bc60 <putc_unlocked@plt+0x9aa8>
   1bc74:	mov	r4, #1
   1bc78:	b	1bc60 <putc_unlocked@plt+0x9aa8>
   1bc7c:	mvn	r4, #0
   1bc80:	b	1bc60 <putc_unlocked@plt+0x9aa8>
   1bc84:	push	{r4, sl, fp, lr}
   1bc88:	add	fp, sp, #8
   1bc8c:	mov	r4, r0
   1bc90:	bl	1a8cc <putc_unlocked@plt+0x8714>
   1bc94:	mov	r1, r0
   1bc98:	mov	r0, #0
   1bc9c:	cmp	r1, #0
   1bca0:	bne	1bcc4 <putc_unlocked@plt+0x9b0c>
   1bca4:	mov	r0, r4
   1bca8:	bl	1a85c <putc_unlocked@plt+0x86a4>
   1bcac:	cmp	r0, #0
   1bcb0:	mov	r0, r4
   1bcb4:	popne	{r4, sl, fp, pc}
   1bcb8:	orr	r0, r4, #256	; 0x100
   1bcbc:	cmp	r4, #126	; 0x7e
   1bcc0:	mvneq	r0, #0
   1bcc4:	pop	{r4, sl, fp, pc}
   1bcc8:	push	{r4, r5, r6, sl, fp, lr}
   1bccc:	add	fp, sp, #16
   1bcd0:	mov	r4, r0
   1bcd4:	bl	11fe4 <__errno_location@plt>
   1bcd8:	mov	r5, r0
   1bcdc:	ldr	r6, [r0]
   1bce0:	mov	r0, r4
   1bce4:	bl	11d44 <free@plt>
   1bce8:	str	r6, [r5]
   1bcec:	pop	{r4, r5, r6, sl, fp, pc}
   1bcf0:	mov	r1, r0
   1bcf4:	mov	r0, #0
   1bcf8:	b	11d5c <clock_gettime@plt>
   1bcfc:	push	{fp, lr}
   1bd00:	mov	fp, sp
   1bd04:	bl	1bcf0 <putc_unlocked@plt+0x9b38>
   1bd08:	pop	{fp, pc}
   1bd0c:	push	{r4, sl, fp, lr}
   1bd10:	add	fp, sp, #8
   1bd14:	sub	sp, sp, #264	; 0x108
   1bd18:	add	r1, sp, #7
   1bd1c:	movw	r2, #257	; 0x101
   1bd20:	bl	222c4 <_obstack_memory_used@@Base+0x1ee4>
   1bd24:	mov	r4, #0
   1bd28:	cmp	r0, #0
   1bd2c:	bne	1bd6c <putc_unlocked@plt+0x9bb4>
   1bd30:	add	r0, sp, #7
   1bd34:	movw	r1, #34040	; 0x84f8
   1bd38:	movt	r1, #2
   1bd3c:	mov	r2, #2
   1bd40:	bl	11fa8 <bcmp@plt>
   1bd44:	cmp	r0, #0
   1bd48:	beq	1bd6c <putc_unlocked@plt+0x9bb4>
   1bd4c:	add	r0, sp, #7
   1bd50:	movw	r1, #34042	; 0x84fa
   1bd54:	movt	r1, #2
   1bd58:	mov	r2, #6
   1bd5c:	bl	11fa8 <bcmp@plt>
   1bd60:	mov	r4, r0
   1bd64:	cmp	r0, #0
   1bd68:	movwne	r4, #1
   1bd6c:	mov	r0, r4
   1bd70:	sub	sp, fp, #8
   1bd74:	pop	{r4, sl, fp, pc}
   1bd78:	ldr	r0, [r0, #8]
   1bd7c:	bx	lr
   1bd80:	ldr	r0, [r0, #12]
   1bd84:	bx	lr
   1bd88:	ldr	r0, [r0, #16]
   1bd8c:	bx	lr
   1bd90:	mov	r2, r0
   1bd94:	ldm	r0, {r1, r3}
   1bd98:	mov	r0, #0
   1bd9c:	cmp	r1, r3
   1bda0:	bxcs	lr
   1bda4:	ldr	ip, [r2, #4]
   1bda8:	mov	r0, #0
   1bdac:	b	1bdbc <putc_unlocked@plt+0x9c04>
   1bdb0:	add	r1, r1, #8
   1bdb4:	cmp	r1, ip
   1bdb8:	bcs	1bdec <putc_unlocked@plt+0x9c34>
   1bdbc:	ldr	r2, [r1]
   1bdc0:	cmp	r2, #0
   1bdc4:	beq	1bdb0 <putc_unlocked@plt+0x9bf8>
   1bdc8:	mov	r3, #0
   1bdcc:	mov	r2, r1
   1bdd0:	add	r3, r3, #1
   1bdd4:	ldr	r2, [r2, #4]
   1bdd8:	cmp	r2, #0
   1bddc:	bne	1bdd0 <putc_unlocked@plt+0x9c18>
   1bde0:	cmp	r3, r0
   1bde4:	movhi	r0, r3
   1bde8:	b	1bdb0 <putc_unlocked@plt+0x9bf8>
   1bdec:	bx	lr
   1bdf0:	push	{fp, lr}
   1bdf4:	mov	fp, sp
   1bdf8:	ldr	r3, [r0]
   1bdfc:	ldr	r1, [r0, #4]
   1be00:	mov	lr, #0
   1be04:	cmp	r3, r1
   1be08:	mov	r1, #0
   1be0c:	bcs	1be54 <putc_unlocked@plt+0x9c9c>
   1be10:	ldr	ip, [r0, #4]
   1be14:	mov	r1, #0
   1be18:	mov	lr, #0
   1be1c:	b	1be2c <putc_unlocked@plt+0x9c74>
   1be20:	add	r3, r3, #8
   1be24:	cmp	r3, ip
   1be28:	bcs	1be54 <putc_unlocked@plt+0x9c9c>
   1be2c:	ldr	r2, [r3]
   1be30:	cmp	r2, #0
   1be34:	beq	1be20 <putc_unlocked@plt+0x9c68>
   1be38:	mov	r2, r3
   1be3c:	add	r1, r1, #1
   1be40:	ldr	r2, [r2, #4]
   1be44:	cmp	r2, #0
   1be48:	bne	1be3c <putc_unlocked@plt+0x9c84>
   1be4c:	add	lr, lr, #1
   1be50:	b	1be20 <putc_unlocked@plt+0x9c68>
   1be54:	ldr	r2, [r0, #12]
   1be58:	cmp	lr, r2
   1be5c:	bne	1be74 <putc_unlocked@plt+0x9cbc>
   1be60:	ldr	r2, [r0, #16]
   1be64:	mov	r0, #1
   1be68:	cmp	r1, r2
   1be6c:	movne	r0, #0
   1be70:	pop	{fp, pc}
   1be74:	mov	r0, #0
   1be78:	pop	{fp, pc}
   1be7c:	nop	{0}
   1be80:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1be84:	add	fp, sp, #24
   1be88:	sub	sp, sp, #8
   1be8c:	mov	r4, r1
   1be90:	mov	r5, r0
   1be94:	bl	1bd88 <putc_unlocked@plt+0x9bd0>
   1be98:	mov	r8, r0
   1be9c:	mov	r0, r5
   1bea0:	bl	1bd78 <putc_unlocked@plt+0x9bc0>
   1bea4:	mov	r7, r0
   1bea8:	mov	r0, r5
   1beac:	bl	1bd80 <putc_unlocked@plt+0x9bc8>
   1beb0:	mov	r6, r0
   1beb4:	mov	r0, r5
   1beb8:	bl	1bd90 <putc_unlocked@plt+0x9bd8>
   1bebc:	mov	r5, r0
   1bec0:	movw	r2, #34048	; 0x8500
   1bec4:	movt	r2, #2
   1bec8:	mov	r0, r4
   1becc:	mov	r1, #1
   1bed0:	mov	r3, r8
   1bed4:	bl	12044 <__fprintf_chk@plt>
   1bed8:	movw	r2, #34072	; 0x8518
   1bedc:	movt	r2, #2
   1bee0:	mov	r0, r4
   1bee4:	mov	r1, #1
   1bee8:	mov	r3, r7
   1beec:	bl	12044 <__fprintf_chk@plt>
   1bef0:	vldr	d16, [pc, #80]	; 1bf48 <putc_unlocked@plt+0x9d90>
   1bef4:	vmov	s0, r6
   1bef8:	vmov	s2, r7
   1befc:	vcvt.f64.u32	d17, s0
   1bf00:	vcvt.f64.u32	d18, s2
   1bf04:	vmul.f64	d16, d17, d16
   1bf08:	vdiv.f64	d16, d16, d18
   1bf0c:	vstr	d16, [sp]
   1bf10:	movw	r2, #34096	; 0x8530
   1bf14:	movt	r2, #2
   1bf18:	mov	r0, r4
   1bf1c:	mov	r1, #1
   1bf20:	mov	r3, r6
   1bf24:	bl	12044 <__fprintf_chk@plt>
   1bf28:	movw	r2, #34129	; 0x8551
   1bf2c:	movt	r2, #2
   1bf30:	mov	r0, r4
   1bf34:	mov	r1, #1
   1bf38:	mov	r3, r5
   1bf3c:	sub	sp, fp, #24
   1bf40:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1bf44:	b	12044 <__fprintf_chk@plt>
   1bf48:	andeq	r0, r0, r0
   1bf4c:	subsmi	r0, r9, r0
   1bf50:	push	{r4, r5, r6, r7, fp, lr}
   1bf54:	add	fp, sp, #16
   1bf58:	mov	r5, r1
   1bf5c:	mov	r6, r0
   1bf60:	bl	1bfc0 <putc_unlocked@plt+0x9e08>
   1bf64:	mov	r7, r0
   1bf68:	ldr	r0, [r0]
   1bf6c:	mov	r4, #0
   1bf70:	cmp	r0, #0
   1bf74:	beq	1bfac <putc_unlocked@plt+0x9df4>
   1bf78:	cmp	r7, #0
   1bf7c:	beq	1bfac <putc_unlocked@plt+0x9df4>
   1bf80:	ldr	r1, [r7]
   1bf84:	cmp	r1, r5
   1bf88:	beq	1bfb4 <putc_unlocked@plt+0x9dfc>
   1bf8c:	ldr	r2, [r6, #28]
   1bf90:	mov	r0, r5
   1bf94:	blx	r2
   1bf98:	cmp	r0, #0
   1bf9c:	bne	1bfb4 <putc_unlocked@plt+0x9dfc>
   1bfa0:	ldr	r7, [r7, #4]
   1bfa4:	cmp	r7, #0
   1bfa8:	bne	1bf80 <putc_unlocked@plt+0x9dc8>
   1bfac:	mov	r0, r4
   1bfb0:	pop	{r4, r5, r6, r7, fp, pc}
   1bfb4:	ldr	r4, [r7]
   1bfb8:	mov	r0, r4
   1bfbc:	pop	{r4, r5, r6, r7, fp, pc}
   1bfc0:	push	{r4, sl, fp, lr}
   1bfc4:	add	fp, sp, #8
   1bfc8:	mov	r2, r1
   1bfcc:	mov	r4, r0
   1bfd0:	ldr	r1, [r0, #8]
   1bfd4:	ldr	r3, [r0, #24]
   1bfd8:	mov	r0, r2
   1bfdc:	blx	r3
   1bfe0:	ldr	r1, [r4, #8]
   1bfe4:	cmp	r0, r1
   1bfe8:	ldrcc	r1, [r4]
   1bfec:	addcc	r0, r1, r0, lsl #3
   1bff0:	popcc	{r4, sl, fp, pc}
   1bff4:	bl	1214c <abort@plt>
   1bff8:	push	{fp, lr}
   1bffc:	mov	fp, sp
   1c000:	ldr	r1, [r0, #16]
   1c004:	cmp	r1, #0
   1c008:	beq	1c030 <putc_unlocked@plt+0x9e78>
   1c00c:	ldr	r2, [r0]
   1c010:	ldr	r1, [r0, #4]
   1c014:	cmp	r2, r1
   1c018:	bcs	1c03c <putc_unlocked@plt+0x9e84>
   1c01c:	ldr	r1, [r2], #8
   1c020:	cmp	r1, #0
   1c024:	beq	1c010 <putc_unlocked@plt+0x9e58>
   1c028:	mov	r0, r1
   1c02c:	pop	{fp, pc}
   1c030:	mov	r1, #0
   1c034:	mov	r0, r1
   1c038:	pop	{fp, pc}
   1c03c:	bl	1214c <abort@plt>
   1c040:	push	{r4, r5, fp, lr}
   1c044:	add	fp, sp, #8
   1c048:	mov	r5, r1
   1c04c:	mov	r4, r0
   1c050:	bl	1bfc0 <putc_unlocked@plt+0x9e08>
   1c054:	mov	r1, r0
   1c058:	b	1c068 <putc_unlocked@plt+0x9eb0>
   1c05c:	ldr	r1, [r1, #4]
   1c060:	cmp	r1, #0
   1c064:	beq	1c088 <putc_unlocked@plt+0x9ed0>
   1c068:	ldr	r2, [r1]
   1c06c:	cmp	r2, r5
   1c070:	bne	1c05c <putc_unlocked@plt+0x9ea4>
   1c074:	ldr	r2, [r1, #4]
   1c078:	cmp	r2, #0
   1c07c:	beq	1c05c <putc_unlocked@plt+0x9ea4>
   1c080:	ldr	r0, [r2]
   1c084:	pop	{r4, r5, fp, pc}
   1c088:	add	r1, r0, #8
   1c08c:	ldr	r2, [r4, #4]
   1c090:	cmp	r1, r2
   1c094:	bcs	1c0a8 <putc_unlocked@plt+0x9ef0>
   1c098:	ldr	r0, [r1], #8
   1c09c:	cmp	r0, #0
   1c0a0:	beq	1c090 <putc_unlocked@plt+0x9ed8>
   1c0a4:	pop	{r4, r5, fp, pc}
   1c0a8:	mov	r0, #0
   1c0ac:	pop	{r4, r5, fp, pc}
   1c0b0:	push	{r4, sl, fp, lr}
   1c0b4:	add	fp, sp, #8
   1c0b8:	mov	ip, r0
   1c0bc:	ldr	lr, [r0]
   1c0c0:	ldr	r3, [r0, #4]
   1c0c4:	mov	r0, #0
   1c0c8:	cmp	lr, r3
   1c0cc:	popcs	{r4, sl, fp, pc}
   1c0d0:	mov	r0, #0
   1c0d4:	b	1c0e8 <putc_unlocked@plt+0x9f30>
   1c0d8:	ldr	r3, [ip, #4]
   1c0dc:	add	lr, lr, #8
   1c0e0:	cmp	lr, r3
   1c0e4:	bcs	1c120 <putc_unlocked@plt+0x9f68>
   1c0e8:	ldr	r3, [lr]
   1c0ec:	cmp	r3, #0
   1c0f0:	cmpne	lr, #0
   1c0f4:	beq	1c0d8 <putc_unlocked@plt+0x9f20>
   1c0f8:	mov	r3, lr
   1c0fc:	cmp	r0, r2
   1c100:	bcs	1c120 <putc_unlocked@plt+0x9f68>
   1c104:	ldr	r4, [r3]
   1c108:	str	r4, [r1, r0, lsl #2]
   1c10c:	add	r0, r0, #1
   1c110:	ldr	r3, [r3, #4]
   1c114:	cmp	r3, #0
   1c118:	bne	1c0fc <putc_unlocked@plt+0x9f44>
   1c11c:	b	1c0d8 <putc_unlocked@plt+0x9f20>
   1c120:	pop	{r4, sl, fp, pc}
   1c124:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1c128:	add	fp, sp, #24
   1c12c:	mov	r8, r0
   1c130:	ldr	r9, [r0]
   1c134:	ldr	r0, [r0, #4]
   1c138:	mov	r6, #0
   1c13c:	cmp	r9, r0
   1c140:	bcs	1c1a0 <putc_unlocked@plt+0x9fe8>
   1c144:	mov	r4, r2
   1c148:	mov	r5, r1
   1c14c:	mov	r6, #0
   1c150:	b	1c164 <putc_unlocked@plt+0x9fac>
   1c154:	ldr	r0, [r8, #4]
   1c158:	add	r9, r9, #8
   1c15c:	cmp	r9, r0
   1c160:	bcs	1c1a0 <putc_unlocked@plt+0x9fe8>
   1c164:	ldr	r0, [r9]
   1c168:	cmp	r0, #0
   1c16c:	cmpne	r9, #0
   1c170:	beq	1c154 <putc_unlocked@plt+0x9f9c>
   1c174:	mov	r7, r9
   1c178:	ldr	r0, [r7]
   1c17c:	mov	r1, r4
   1c180:	blx	r5
   1c184:	cmp	r0, #0
   1c188:	beq	1c1a0 <putc_unlocked@plt+0x9fe8>
   1c18c:	add	r6, r6, #1
   1c190:	ldr	r7, [r7, #4]
   1c194:	cmp	r7, #0
   1c198:	bne	1c178 <putc_unlocked@plt+0x9fc0>
   1c19c:	b	1c154 <putc_unlocked@plt+0x9f9c>
   1c1a0:	mov	r0, r6
   1c1a4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1c1a8:	ldrb	r2, [r0]
   1c1ac:	cmp	r2, #0
   1c1b0:	moveq	r0, #0
   1c1b4:	bxeq	lr
   1c1b8:	add	r3, r0, #1
   1c1bc:	mov	r0, #0
   1c1c0:	rsb	r0, r0, r0, lsl #5
   1c1c4:	uxtab	r0, r0, r2
   1c1c8:	udiv	r2, r0, r1
   1c1cc:	mls	r0, r2, r1, r0
   1c1d0:	ldrb	r2, [r3], #1
   1c1d4:	cmp	r2, #0
   1c1d8:	bne	1c1c0 <putc_unlocked@plt+0xa008>
   1c1dc:	bx	lr
   1c1e0:	movw	r1, #34160	; 0x8570
   1c1e4:	movt	r1, #2
   1c1e8:	vld1.32	{d16-d17}, [r1]!
   1c1ec:	vst1.32	{d16-d17}, [r0]!
   1c1f0:	ldr	r1, [r1]
   1c1f4:	str	r1, [r0]
   1c1f8:	bx	lr
   1c1fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c200:	add	fp, sp, #28
   1c204:	sub	sp, sp, #4
   1c208:	mov	r7, r1
   1c20c:	mov	r8, r0
   1c210:	movw	sl, #49916	; 0xc2fc
   1c214:	movt	sl, #1
   1c218:	cmp	r3, #0
   1c21c:	movne	sl, r3
   1c220:	movw	r5, #49884	; 0xc2dc
   1c224:	movt	r5, #1
   1c228:	cmp	r2, #0
   1c22c:	movne	r5, r2
   1c230:	mov	r0, #40	; 0x28
   1c234:	bl	23a30 <_obstack_memory_used@@Base+0x3650>
   1c238:	mov	r9, #0
   1c23c:	cmp	r0, #0
   1c240:	beq	1c2d0 <putc_unlocked@plt+0xa118>
   1c244:	mov	r4, r0
   1c248:	movw	r6, #34160	; 0x8570
   1c24c:	movt	r6, #2
   1c250:	cmp	r7, #0
   1c254:	movne	r6, r7
   1c258:	str	r6, [r0, #20]
   1c25c:	bl	1c30c <putc_unlocked@plt+0xa154>
   1c260:	cmp	r0, #0
   1c264:	beq	1c2c8 <putc_unlocked@plt+0xa110>
   1c268:	mov	r0, r8
   1c26c:	mov	r1, r6
   1c270:	bl	1c3b8 <putc_unlocked@plt+0xa200>
   1c274:	str	r0, [r4, #8]
   1c278:	cmp	r0, #0
   1c27c:	beq	1c2c8 <putc_unlocked@plt+0xa110>
   1c280:	mov	r1, #8
   1c284:	bl	239dc <_obstack_memory_used@@Base+0x35fc>
   1c288:	str	r0, [r4]
   1c28c:	cmp	r0, #0
   1c290:	beq	1c2c8 <putc_unlocked@plt+0xa110>
   1c294:	ldr	r1, [fp, #8]
   1c298:	mov	r2, #0
   1c29c:	str	r5, [r4, #24]
   1c2a0:	str	sl, [r4, #28]
   1c2a4:	str	r1, [r4, #32]
   1c2a8:	str	r2, [r4, #36]	; 0x24
   1c2ac:	str	r2, [r4, #12]
   1c2b0:	str	r2, [r4, #16]
   1c2b4:	ldr	r1, [r4, #8]
   1c2b8:	add	r0, r0, r1, lsl #3
   1c2bc:	str	r0, [r4, #4]
   1c2c0:	mov	r9, r4
   1c2c4:	b	1c2d0 <putc_unlocked@plt+0xa118>
   1c2c8:	mov	r0, r4
   1c2cc:	bl	1bcc8 <putc_unlocked@plt+0x9b10>
   1c2d0:	mov	r0, r9
   1c2d4:	sub	sp, fp, #28
   1c2d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c2dc:	push	{r4, sl, fp, lr}
   1c2e0:	add	fp, sp, #8
   1c2e4:	mov	r4, r1
   1c2e8:	mov	r1, #3
   1c2ec:	bl	23b84 <_obstack_memory_used@@Base+0x37a4>
   1c2f0:	udiv	r1, r0, r4
   1c2f4:	mls	r0, r1, r4, r0
   1c2f8:	pop	{r4, sl, fp, pc}
   1c2fc:	sub	r0, r0, r1
   1c300:	clz	r0, r0
   1c304:	lsr	r0, r0, #5
   1c308:	bx	lr
   1c30c:	mov	r1, r0
   1c310:	ldr	r3, [r0, #20]
   1c314:	mov	r0, #1
   1c318:	movw	r2, #34160	; 0x8570
   1c31c:	movt	r2, #2
   1c320:	cmp	r3, r2
   1c324:	beq	1c3a8 <putc_unlocked@plt+0xa1f0>
   1c328:	vldr	s2, [pc, #124]	; 1c3ac <putc_unlocked@plt+0xa1f4>
   1c32c:	vldr	s0, [r3, #8]
   1c330:	vcmpe.f32	s0, s2
   1c334:	vmrs	APSR_nzcv, fpscr
   1c338:	ble	1c3a0 <putc_unlocked@plt+0xa1e8>
   1c33c:	vldr	s4, [pc, #108]	; 1c3b0 <putc_unlocked@plt+0xa1f8>
   1c340:	vcmpe.f32	s0, s4
   1c344:	vmrs	APSR_nzcv, fpscr
   1c348:	bpl	1c3a0 <putc_unlocked@plt+0xa1e8>
   1c34c:	vldr	s4, [pc, #96]	; 1c3b4 <putc_unlocked@plt+0xa1fc>
   1c350:	vldr	s6, [r3, #12]
   1c354:	vcmpe.f32	s6, s4
   1c358:	vmrs	APSR_nzcv, fpscr
   1c35c:	ble	1c3a0 <putc_unlocked@plt+0xa1e8>
   1c360:	vldr	s4, [r3]
   1c364:	vcmpe.f32	s4, #0.0
   1c368:	vmrs	APSR_nzcv, fpscr
   1c36c:	blt	1c3a0 <putc_unlocked@plt+0xa1e8>
   1c370:	vadd.f32	s2, s4, s2
   1c374:	vcmpe.f32	s2, s0
   1c378:	vmrs	APSR_nzcv, fpscr
   1c37c:	bpl	1c3a0 <putc_unlocked@plt+0xa1e8>
   1c380:	vldr	s0, [r3, #4]
   1c384:	vmov.f32	s4, #112	; 0x3f800000  1.0
   1c388:	vcmpe.f32	s0, s4
   1c38c:	vmrs	APSR_nzcv, fpscr
   1c390:	bhi	1c3a0 <putc_unlocked@plt+0xa1e8>
   1c394:	vcmpe.f32	s2, s0
   1c398:	vmrs	APSR_nzcv, fpscr
   1c39c:	bxmi	lr
   1c3a0:	str	r2, [r1, #20]
   1c3a4:	mov	r0, #0
   1c3a8:	bx	lr
   1c3ac:	stclcc	12, cr12, [ip, #820]	; 0x334
   1c3b0:	svccc	0x00666666
   1c3b4:	svccc	0x008ccccd
   1c3b8:	push	{fp, lr}
   1c3bc:	mov	fp, sp
   1c3c0:	ldrb	r2, [r1, #16]
   1c3c4:	cmp	r2, #0
   1c3c8:	bne	1c3f8 <putc_unlocked@plt+0xa240>
   1c3cc:	vldr	s0, [r1, #8]
   1c3d0:	vmov	s2, r0
   1c3d4:	vcvt.f32.u32	s2, s2
   1c3d8:	vdiv.f32	s2, s2, s0
   1c3dc:	vcvt.u32.f32	s0, s2
   1c3e0:	vldr	s4, [pc, #32]	; 1c408 <putc_unlocked@plt+0xa250>
   1c3e4:	mov	r0, #0
   1c3e8:	vcmpe.f32	s2, s4
   1c3ec:	vmrs	APSR_nzcv, fpscr
   1c3f0:	popge	{fp, pc}
   1c3f4:	vmov	r0, s0
   1c3f8:	bl	1cbec <putc_unlocked@plt+0xaa34>
   1c3fc:	cmn	r0, #-536870911	; 0xe0000001
   1c400:	movwhi	r0, #0
   1c404:	pop	{fp, pc}
   1c408:	svcmi	0x00800000
   1c40c:	push	{r4, r5, r6, r7, fp, lr}
   1c410:	add	fp, sp, #16
   1c414:	mov	r4, r0
   1c418:	ldr	r5, [r0]
   1c41c:	ldr	r0, [r0, #4]
   1c420:	cmp	r5, r0
   1c424:	bcs	1c4c8 <putc_unlocked@plt+0xa310>
   1c428:	mov	r6, #0
   1c42c:	b	1c448 <putc_unlocked@plt+0xa290>
   1c430:	str	r6, [r5]
   1c434:	str	r6, [r5, #4]
   1c438:	ldr	r0, [r4, #4]
   1c43c:	add	r5, r5, #8
   1c440:	cmp	r5, r0
   1c444:	bcs	1c4c8 <putc_unlocked@plt+0xa310>
   1c448:	ldr	r0, [r5]
   1c44c:	cmp	r0, #0
   1c450:	beq	1c438 <putc_unlocked@plt+0xa280>
   1c454:	ldr	r7, [r5, #4]
   1c458:	ldr	r1, [r4, #32]
   1c45c:	cmp	r1, #0
   1c460:	mov	r0, r1
   1c464:	movwne	r0, #1
   1c468:	cmp	r7, #0
   1c46c:	bne	1c4b4 <putc_unlocked@plt+0xa2fc>
   1c470:	cmp	r0, #0
   1c474:	beq	1c430 <putc_unlocked@plt+0xa278>
   1c478:	ldr	r0, [r5]
   1c47c:	blx	r1
   1c480:	b	1c430 <putc_unlocked@plt+0xa278>
   1c484:	str	r6, [r7]
   1c488:	ldr	r2, [r7, #4]
   1c48c:	ldr	r0, [r4, #36]	; 0x24
   1c490:	str	r0, [r7, #4]
   1c494:	str	r7, [r4, #36]	; 0x24
   1c498:	ldr	r1, [r4, #32]
   1c49c:	cmp	r1, #0
   1c4a0:	mov	r0, r1
   1c4a4:	movwne	r0, #1
   1c4a8:	cmp	r2, #0
   1c4ac:	mov	r7, r2
   1c4b0:	beq	1c470 <putc_unlocked@plt+0xa2b8>
   1c4b4:	tst	r0, #1
   1c4b8:	beq	1c484 <putc_unlocked@plt+0xa2cc>
   1c4bc:	ldr	r0, [r7]
   1c4c0:	blx	r1
   1c4c4:	b	1c484 <putc_unlocked@plt+0xa2cc>
   1c4c8:	mov	r0, #0
   1c4cc:	str	r0, [r4, #12]
   1c4d0:	str	r0, [r4, #16]
   1c4d4:	pop	{r4, r5, r6, r7, fp, pc}
   1c4d8:	push	{r4, r5, r6, sl, fp, lr}
   1c4dc:	add	fp, sp, #16
   1c4e0:	mov	r4, r0
   1c4e4:	ldr	r0, [r0, #32]
   1c4e8:	cmp	r0, #0
   1c4ec:	beq	1c550 <putc_unlocked@plt+0xa398>
   1c4f0:	ldr	r0, [r4, #16]
   1c4f4:	cmp	r0, #0
   1c4f8:	beq	1c550 <putc_unlocked@plt+0xa398>
   1c4fc:	ldr	r5, [r4]
   1c500:	ldr	r0, [r4, #4]
   1c504:	cmp	r5, r0
   1c508:	bcc	1c520 <putc_unlocked@plt+0xa368>
   1c50c:	b	1c550 <putc_unlocked@plt+0xa398>
   1c510:	ldr	r0, [r4, #4]
   1c514:	add	r5, r5, #8
   1c518:	cmp	r5, r0
   1c51c:	bcs	1c550 <putc_unlocked@plt+0xa398>
   1c520:	ldr	r0, [r5]
   1c524:	cmp	r0, #0
   1c528:	cmpne	r5, #0
   1c52c:	beq	1c510 <putc_unlocked@plt+0xa358>
   1c530:	mov	r6, r5
   1c534:	ldr	r0, [r6]
   1c538:	ldr	r1, [r4, #32]
   1c53c:	blx	r1
   1c540:	ldr	r6, [r6, #4]
   1c544:	cmp	r6, #0
   1c548:	bne	1c534 <putc_unlocked@plt+0xa37c>
   1c54c:	b	1c510 <putc_unlocked@plt+0xa358>
   1c550:	ldr	r5, [r4]
   1c554:	ldr	r0, [r4, #4]
   1c558:	cmp	r5, r0
   1c55c:	bcc	1c574 <putc_unlocked@plt+0xa3bc>
   1c560:	b	1c598 <putc_unlocked@plt+0xa3e0>
   1c564:	ldr	r0, [r4, #4]
   1c568:	add	r5, r5, #8
   1c56c:	cmp	r5, r0
   1c570:	bcs	1c598 <putc_unlocked@plt+0xa3e0>
   1c574:	ldr	r0, [r5, #4]
   1c578:	cmp	r0, #0
   1c57c:	beq	1c564 <putc_unlocked@plt+0xa3ac>
   1c580:	ldr	r6, [r0, #4]
   1c584:	bl	1bcc8 <putc_unlocked@plt+0x9b10>
   1c588:	cmp	r6, #0
   1c58c:	mov	r0, r6
   1c590:	bne	1c580 <putc_unlocked@plt+0xa3c8>
   1c594:	b	1c564 <putc_unlocked@plt+0xa3ac>
   1c598:	ldr	r0, [r4, #36]	; 0x24
   1c59c:	cmp	r0, #0
   1c5a0:	beq	1c5b8 <putc_unlocked@plt+0xa400>
   1c5a4:	ldr	r5, [r0, #4]
   1c5a8:	bl	1bcc8 <putc_unlocked@plt+0x9b10>
   1c5ac:	cmp	r5, #0
   1c5b0:	mov	r0, r5
   1c5b4:	bne	1c5a4 <putc_unlocked@plt+0xa3ec>
   1c5b8:	ldr	r0, [r4]
   1c5bc:	bl	1bcc8 <putc_unlocked@plt+0x9b10>
   1c5c0:	mov	r0, r4
   1c5c4:	pop	{r4, r5, r6, sl, fp, lr}
   1c5c8:	b	1bcc8 <putc_unlocked@plt+0x9b10>
   1c5cc:	push	{r4, r5, r6, sl, fp, lr}
   1c5d0:	add	fp, sp, #16
   1c5d4:	sub	sp, sp, #40	; 0x28
   1c5d8:	mov	r2, r1
   1c5dc:	mov	r4, r0
   1c5e0:	ldr	r1, [r0, #20]
   1c5e4:	mov	r0, r2
   1c5e8:	bl	1c3b8 <putc_unlocked@plt+0xa200>
   1c5ec:	mov	r5, #0
   1c5f0:	cmp	r0, #0
   1c5f4:	beq	1c6d0 <putc_unlocked@plt+0xa518>
   1c5f8:	mov	r6, r0
   1c5fc:	ldr	r0, [r4, #8]
   1c600:	cmp	r6, r0
   1c604:	bne	1c610 <putc_unlocked@plt+0xa458>
   1c608:	mov	r5, #1
   1c60c:	b	1c6d0 <putc_unlocked@plt+0xa518>
   1c610:	mov	r0, r6
   1c614:	mov	r1, #8
   1c618:	bl	239dc <_obstack_memory_used@@Base+0x35fc>
   1c61c:	str	r0, [sp]
   1c620:	cmp	r0, #0
   1c624:	beq	1c6d0 <putc_unlocked@plt+0xa518>
   1c628:	mov	r0, #0
   1c62c:	str	r0, [sp, #16]
   1c630:	str	r0, [sp, #12]
   1c634:	str	r6, [sp, #8]
   1c638:	ldr	r0, [sp]
   1c63c:	add	r0, r0, r6, lsl #3
   1c640:	str	r0, [sp, #4]
   1c644:	add	r6, r4, #20
   1c648:	ldm	r6, {r0, r1, r2, r3, r6}
   1c64c:	add	ip, sp, #20
   1c650:	stm	ip, {r0, r1, r2, r3, r6}
   1c654:	mov	r0, sp
   1c658:	mov	r1, r4
   1c65c:	mov	r2, #0
   1c660:	bl	1c6e0 <putc_unlocked@plt+0xa528>
   1c664:	cmp	r0, #0
   1c668:	beq	1c68c <putc_unlocked@plt+0xa4d4>
   1c66c:	ldr	r0, [r4]
   1c670:	bl	1bcc8 <putc_unlocked@plt+0x9b10>
   1c674:	ldm	sp, {r0, r1, r2, r3}
   1c678:	stm	r4, {r0, r1, r2, r3}
   1c67c:	ldr	r0, [sp, #36]	; 0x24
   1c680:	str	r0, [r4, #36]	; 0x24
   1c684:	mov	r5, #1
   1c688:	b	1c6d0 <putc_unlocked@plt+0xa518>
   1c68c:	ldr	r0, [sp, #36]	; 0x24
   1c690:	str	r0, [r4, #36]	; 0x24
   1c694:	mov	r1, sp
   1c698:	mov	r0, r4
   1c69c:	mov	r2, #1
   1c6a0:	bl	1c6e0 <putc_unlocked@plt+0xa528>
   1c6a4:	cmp	r0, #0
   1c6a8:	beq	1c6dc <putc_unlocked@plt+0xa524>
   1c6ac:	mov	r1, sp
   1c6b0:	mov	r5, #0
   1c6b4:	mov	r0, r4
   1c6b8:	mov	r2, #0
   1c6bc:	bl	1c6e0 <putc_unlocked@plt+0xa528>
   1c6c0:	cmp	r0, #0
   1c6c4:	beq	1c6dc <putc_unlocked@plt+0xa524>
   1c6c8:	ldr	r0, [sp]
   1c6cc:	bl	1bcc8 <putc_unlocked@plt+0x9b10>
   1c6d0:	mov	r0, r5
   1c6d4:	sub	sp, fp, #16
   1c6d8:	pop	{r4, r5, r6, sl, fp, pc}
   1c6dc:	bl	1214c <abort@plt>
   1c6e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c6e4:	add	fp, sp, #28
   1c6e8:	sub	sp, sp, #4
   1c6ec:	mov	r7, r0
   1c6f0:	ldr	r6, [r1]
   1c6f4:	ldr	r0, [r1, #4]
   1c6f8:	cmp	r6, r0
   1c6fc:	bcs	1c808 <putc_unlocked@plt+0xa650>
   1c700:	mov	r9, r2
   1c704:	mov	sl, r1
   1c708:	b	1c740 <putc_unlocked@plt+0xa588>
   1c70c:	str	r4, [r5]
   1c710:	ldr	r0, [r7, #12]
   1c714:	add	r0, r0, #1
   1c718:	str	r0, [r7, #12]
   1c71c:	mov	r0, #0
   1c720:	str	r0, [r6]
   1c724:	ldr	r0, [sl, #12]
   1c728:	sub	r0, r0, #1
   1c72c:	str	r0, [sl, #12]
   1c730:	add	r6, r6, #8
   1c734:	ldr	r0, [sl, #4]
   1c738:	cmp	r6, r0
   1c73c:	bcs	1c808 <putc_unlocked@plt+0xa650>
   1c740:	ldr	r0, [r6]
   1c744:	cmp	r0, #0
   1c748:	beq	1c730 <putc_unlocked@plt+0xa578>
   1c74c:	ldr	r4, [r6, #4]
   1c750:	cmp	r4, #0
   1c754:	bne	1c784 <putc_unlocked@plt+0xa5cc>
   1c758:	b	1c7b4 <putc_unlocked@plt+0xa5fc>
   1c75c:	str	r5, [r0]
   1c760:	ldr	r0, [r7, #12]
   1c764:	add	r0, r0, #1
   1c768:	str	r0, [r7, #12]
   1c76c:	mov	r0, r7
   1c770:	mov	r1, r4
   1c774:	bl	1cc8c <putc_unlocked@plt+0xaad4>
   1c778:	cmp	r8, #0
   1c77c:	mov	r4, r8
   1c780:	beq	1c7b4 <putc_unlocked@plt+0xa5fc>
   1c784:	ldr	r5, [r4]
   1c788:	mov	r0, r7
   1c78c:	mov	r1, r5
   1c790:	bl	1bfc0 <putc_unlocked@plt+0x9e08>
   1c794:	ldr	r1, [r0]
   1c798:	ldr	r8, [r4, #4]
   1c79c:	cmp	r1, #0
   1c7a0:	beq	1c75c <putc_unlocked@plt+0xa5a4>
   1c7a4:	ldr	r1, [r0, #4]
   1c7a8:	str	r1, [r4, #4]
   1c7ac:	str	r4, [r0, #4]
   1c7b0:	b	1c778 <putc_unlocked@plt+0xa5c0>
   1c7b4:	mov	r0, #0
   1c7b8:	str	r0, [r6, #4]
   1c7bc:	cmp	r9, #0
   1c7c0:	bne	1c730 <putc_unlocked@plt+0xa578>
   1c7c4:	ldr	r4, [r6]
   1c7c8:	mov	r0, r7
   1c7cc:	mov	r1, r4
   1c7d0:	bl	1bfc0 <putc_unlocked@plt+0x9e08>
   1c7d4:	mov	r5, r0
   1c7d8:	ldr	r0, [r0]
   1c7dc:	cmp	r0, #0
   1c7e0:	beq	1c70c <putc_unlocked@plt+0xa554>
   1c7e4:	mov	r0, r7
   1c7e8:	bl	1ca78 <putc_unlocked@plt+0xa8c0>
   1c7ec:	cmp	r0, #0
   1c7f0:	beq	1c814 <putc_unlocked@plt+0xa65c>
   1c7f4:	str	r4, [r0]
   1c7f8:	ldr	r1, [r5, #4]
   1c7fc:	str	r1, [r0, #4]
   1c800:	str	r0, [r5, #4]
   1c804:	b	1c71c <putc_unlocked@plt+0xa564>
   1c808:	mov	r0, #1
   1c80c:	sub	sp, fp, #28
   1c810:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c814:	mov	r0, #0
   1c818:	sub	sp, fp, #28
   1c81c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c820:	push	{r4, r5, r6, r7, fp, lr}
   1c824:	add	fp, sp, #16
   1c828:	sub	sp, sp, #8
   1c82c:	cmp	r1, #0
   1c830:	beq	1c990 <putc_unlocked@plt+0xa7d8>
   1c834:	mov	r7, r2
   1c838:	mov	r5, r1
   1c83c:	mov	r4, r0
   1c840:	add	r2, sp, #4
   1c844:	mov	r6, #0
   1c848:	mov	r3, #0
   1c84c:	bl	1c998 <putc_unlocked@plt+0xa7e0>
   1c850:	cmp	r0, #0
   1c854:	beq	1c864 <putc_unlocked@plt+0xa6ac>
   1c858:	cmp	r7, #0
   1c85c:	strne	r0, [r7]
   1c860:	b	1c984 <putc_unlocked@plt+0xa7cc>
   1c864:	vldr	s0, [r4, #8]
   1c868:	vldr	s2, [r4, #12]
   1c86c:	ldr	r0, [r4, #20]
   1c870:	vldr	s4, [r0, #8]
   1c874:	vcvt.f32.u32	s0, s0
   1c878:	vcvt.f32.u32	s2, s2
   1c87c:	vmul.f32	s0, s4, s0
   1c880:	vcmpe.f32	s0, s2
   1c884:	vmrs	APSR_nzcv, fpscr
   1c888:	bpl	1c91c <putc_unlocked@plt+0xa764>
   1c88c:	mov	r0, r4
   1c890:	bl	1c30c <putc_unlocked@plt+0xa154>
   1c894:	vldr	s0, [r4, #8]
   1c898:	vldr	s4, [r4, #12]
   1c89c:	ldr	r0, [r4, #20]
   1c8a0:	vcvt.f32.u32	s2, s0
   1c8a4:	vldr	s0, [r0, #8]
   1c8a8:	vcvt.f32.u32	s4, s4
   1c8ac:	vmul.f32	s6, s0, s2
   1c8b0:	vcmpe.f32	s6, s4
   1c8b4:	vmrs	APSR_nzcv, fpscr
   1c8b8:	bpl	1c91c <putc_unlocked@plt+0xa764>
   1c8bc:	vldr	s4, [r0, #12]
   1c8c0:	vmul.f32	s2, s4, s2
   1c8c4:	ldrb	r0, [r0, #16]
   1c8c8:	vmul.f32	s0, s0, s2
   1c8cc:	mvn	r6, #0
   1c8d0:	vldr	s4, [pc, #188]	; 1c994 <putc_unlocked@plt+0xa7dc>
   1c8d4:	cmp	r0, #0
   1c8d8:	vseleq.f32	s0, s0, s2
   1c8dc:	vcmpe.f32	s0, s4
   1c8e0:	vmrs	APSR_nzcv, fpscr
   1c8e4:	bge	1c984 <putc_unlocked@plt+0xa7cc>
   1c8e8:	vcvt.u32.f32	s0, s0
   1c8ec:	vmov	r1, s0
   1c8f0:	mov	r0, r4
   1c8f4:	bl	1c5cc <putc_unlocked@plt+0xa414>
   1c8f8:	cmp	r0, #0
   1c8fc:	beq	1c984 <putc_unlocked@plt+0xa7cc>
   1c900:	add	r2, sp, #4
   1c904:	mov	r0, r4
   1c908:	mov	r1, r5
   1c90c:	mov	r3, #0
   1c910:	bl	1c998 <putc_unlocked@plt+0xa7e0>
   1c914:	cmp	r0, #0
   1c918:	bne	1c990 <putc_unlocked@plt+0xa7d8>
   1c91c:	ldr	r6, [sp, #4]
   1c920:	ldr	r0, [r6]
   1c924:	cmp	r0, #0
   1c928:	beq	1c95c <putc_unlocked@plt+0xa7a4>
   1c92c:	mov	r0, r4
   1c930:	bl	1ca78 <putc_unlocked@plt+0xa8c0>
   1c934:	cmp	r0, #0
   1c938:	beq	1c980 <putc_unlocked@plt+0xa7c8>
   1c93c:	str	r5, [r0]
   1c940:	ldr	r1, [r6, #4]
   1c944:	str	r1, [r0, #4]
   1c948:	str	r0, [r6, #4]
   1c94c:	ldr	r0, [r4, #16]
   1c950:	add	r0, r0, #1
   1c954:	str	r0, [r4, #16]
   1c958:	b	1c978 <putc_unlocked@plt+0xa7c0>
   1c95c:	str	r5, [r6]
   1c960:	ldr	r0, [r4, #12]
   1c964:	ldr	r1, [r4, #16]
   1c968:	add	r1, r1, #1
   1c96c:	add	r0, r0, #1
   1c970:	str	r0, [r4, #12]
   1c974:	str	r1, [r4, #16]
   1c978:	mov	r6, #1
   1c97c:	b	1c984 <putc_unlocked@plt+0xa7cc>
   1c980:	mvn	r6, #0
   1c984:	mov	r0, r6
   1c988:	sub	sp, fp, #16
   1c98c:	pop	{r4, r5, r6, r7, fp, pc}
   1c990:	bl	1214c <abort@plt>
   1c994:	svcmi	0x00800000
   1c998:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1c99c:	add	fp, sp, #24
   1c9a0:	mov	r8, r3
   1c9a4:	mov	r4, r2
   1c9a8:	mov	r7, r1
   1c9ac:	mov	r5, r0
   1c9b0:	bl	1bfc0 <putc_unlocked@plt+0x9e08>
   1c9b4:	str	r0, [r4]
   1c9b8:	ldr	r1, [r0]
   1c9bc:	mov	r4, #0
   1c9c0:	cmp	r1, #0
   1c9c4:	beq	1ca70 <putc_unlocked@plt+0xa8b8>
   1c9c8:	mov	r6, r0
   1c9cc:	cmp	r1, r7
   1c9d0:	beq	1c9e8 <putc_unlocked@plt+0xa830>
   1c9d4:	ldr	r2, [r5, #28]
   1c9d8:	mov	r0, r7
   1c9dc:	blx	r2
   1c9e0:	cmp	r0, #0
   1c9e4:	beq	1ca0c <putc_unlocked@plt+0xa854>
   1c9e8:	ldr	r4, [r6]
   1c9ec:	cmp	r8, #0
   1c9f0:	beq	1ca70 <putc_unlocked@plt+0xa8b8>
   1c9f4:	ldr	r1, [r6, #4]
   1c9f8:	cmp	r1, #0
   1c9fc:	beq	1ca68 <putc_unlocked@plt+0xa8b0>
   1ca00:	ldm	r1, {r0, r2}
   1ca04:	stm	r6, {r0, r2}
   1ca08:	b	1ca58 <putc_unlocked@plt+0xa8a0>
   1ca0c:	ldr	r0, [r6, #4]!
   1ca10:	cmp	r0, #0
   1ca14:	beq	1ca70 <putc_unlocked@plt+0xa8b8>
   1ca18:	ldr	r1, [r0]
   1ca1c:	cmp	r1, r7
   1ca20:	beq	1ca40 <putc_unlocked@plt+0xa888>
   1ca24:	ldr	r2, [r5, #28]
   1ca28:	mov	r0, r7
   1ca2c:	blx	r2
   1ca30:	cmp	r0, #0
   1ca34:	bne	1ca40 <putc_unlocked@plt+0xa888>
   1ca38:	ldr	r6, [r6]
   1ca3c:	b	1ca0c <putc_unlocked@plt+0xa854>
   1ca40:	ldr	r1, [r6]
   1ca44:	ldr	r4, [r1]
   1ca48:	cmp	r8, #0
   1ca4c:	beq	1ca70 <putc_unlocked@plt+0xa8b8>
   1ca50:	ldr	r0, [r1, #4]
   1ca54:	str	r0, [r6]
   1ca58:	mov	r0, r5
   1ca5c:	bl	1cc8c <putc_unlocked@plt+0xaad4>
   1ca60:	mov	r0, r4
   1ca64:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1ca68:	mov	r0, #0
   1ca6c:	str	r0, [r6]
   1ca70:	mov	r0, r4
   1ca74:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1ca78:	mov	r1, r0
   1ca7c:	ldr	r0, [r0, #36]	; 0x24
   1ca80:	cmp	r0, #0
   1ca84:	ldrne	r2, [r0, #4]
   1ca88:	strne	r2, [r1, #36]	; 0x24
   1ca8c:	bxne	lr
   1ca90:	mov	r0, #8
   1ca94:	b	23a30 <_obstack_memory_used@@Base+0x3650>
   1ca98:	push	{r4, sl, fp, lr}
   1ca9c:	add	fp, sp, #8
   1caa0:	sub	sp, sp, #8
   1caa4:	mov	r4, r1
   1caa8:	add	r2, sp, #4
   1caac:	bl	1c820 <putc_unlocked@plt+0xa668>
   1cab0:	cmn	r0, #1
   1cab4:	beq	1cac8 <putc_unlocked@plt+0xa910>
   1cab8:	ldr	r1, [sp, #4]
   1cabc:	cmp	r0, #0
   1cac0:	moveq	r4, r1
   1cac4:	b	1cacc <putc_unlocked@plt+0xa914>
   1cac8:	mov	r4, #0
   1cacc:	mov	r0, r4
   1cad0:	sub	sp, fp, #8
   1cad4:	pop	{r4, sl, fp, pc}
   1cad8:	push	{r4, r5, r6, sl, fp, lr}
   1cadc:	add	fp, sp, #16
   1cae0:	sub	sp, sp, #8
   1cae4:	mov	r4, r0
   1cae8:	add	r2, sp, #4
   1caec:	mov	r3, #1
   1caf0:	bl	1c998 <putc_unlocked@plt+0xa7e0>
   1caf4:	mov	r5, r0
   1caf8:	cmp	r0, #0
   1cafc:	beq	1cbdc <putc_unlocked@plt+0xaa24>
   1cb00:	ldr	r0, [r4, #16]
   1cb04:	sub	r0, r0, #1
   1cb08:	str	r0, [r4, #16]
   1cb0c:	ldr	r0, [sp, #4]
   1cb10:	ldr	r0, [r0]
   1cb14:	cmp	r0, #0
   1cb18:	bne	1cbdc <putc_unlocked@plt+0xaa24>
   1cb1c:	ldr	r0, [r4, #12]
   1cb20:	sub	r0, r0, #1
   1cb24:	vldr	s0, [r4, #8]
   1cb28:	str	r0, [r4, #12]
   1cb2c:	ldr	r1, [r4, #20]
   1cb30:	vldr	s2, [r1]
   1cb34:	vcvt.f32.u32	s0, s0
   1cb38:	vmov	s4, r0
   1cb3c:	vcvt.f32.u32	s4, s4
   1cb40:	vmul.f32	s0, s2, s0
   1cb44:	vcmpe.f32	s0, s4
   1cb48:	vmrs	APSR_nzcv, fpscr
   1cb4c:	ble	1cbdc <putc_unlocked@plt+0xaa24>
   1cb50:	mov	r0, r4
   1cb54:	bl	1c30c <putc_unlocked@plt+0xa154>
   1cb58:	vldr	s0, [r4, #8]
   1cb5c:	vldr	s2, [r4, #12]
   1cb60:	ldr	r0, [r4, #20]
   1cb64:	vcvt.f32.u32	s0, s0
   1cb68:	vldr	s4, [r0]
   1cb6c:	vcvt.f32.u32	s2, s2
   1cb70:	vmul.f32	s4, s4, s0
   1cb74:	vcmpe.f32	s4, s2
   1cb78:	vmrs	APSR_nzcv, fpscr
   1cb7c:	ble	1cbdc <putc_unlocked@plt+0xaa24>
   1cb80:	vldr	s2, [r0, #4]
   1cb84:	ldrb	r1, [r0, #16]
   1cb88:	vmul.f32	s0, s2, s0
   1cb8c:	cmp	r1, #0
   1cb90:	bne	1cb9c <putc_unlocked@plt+0xa9e4>
   1cb94:	vldr	s2, [r0, #8]
   1cb98:	vmul.f32	s0, s0, s2
   1cb9c:	vcvt.u32.f32	s0, s0
   1cba0:	vmov	r1, s0
   1cba4:	mov	r0, r4
   1cba8:	bl	1c5cc <putc_unlocked@plt+0xa414>
   1cbac:	cmp	r0, #0
   1cbb0:	bne	1cbdc <putc_unlocked@plt+0xaa24>
   1cbb4:	ldr	r0, [r4, #36]	; 0x24
   1cbb8:	cmp	r0, #0
   1cbbc:	beq	1cbd4 <putc_unlocked@plt+0xaa1c>
   1cbc0:	ldr	r6, [r0, #4]
   1cbc4:	bl	1bcc8 <putc_unlocked@plt+0x9b10>
   1cbc8:	cmp	r6, #0
   1cbcc:	mov	r0, r6
   1cbd0:	bne	1cbc0 <putc_unlocked@plt+0xaa08>
   1cbd4:	mov	r0, #0
   1cbd8:	str	r0, [r4, #36]	; 0x24
   1cbdc:	mov	r0, r5
   1cbe0:	sub	sp, fp, #16
   1cbe4:	pop	{r4, r5, r6, sl, fp, pc}
   1cbe8:	b	1cad8 <putc_unlocked@plt+0xa920>
   1cbec:	push	{r4, r5, fp, lr}
   1cbf0:	add	fp, sp, #8
   1cbf4:	cmp	r0, #10
   1cbf8:	movls	r0, #10
   1cbfc:	orr	r5, r0, #1
   1cc00:	mvn	r4, #0
   1cc04:	cmn	r5, #1
   1cc08:	beq	1cc28 <putc_unlocked@plt+0xaa70>
   1cc0c:	mov	r0, r5
   1cc10:	bl	1cc3c <putc_unlocked@plt+0xaa84>
   1cc14:	cmp	r0, #0
   1cc18:	bne	1cc30 <putc_unlocked@plt+0xaa78>
   1cc1c:	add	r5, r5, #2
   1cc20:	cmn	r5, #1
   1cc24:	bne	1cc0c <putc_unlocked@plt+0xaa54>
   1cc28:	mov	r0, r4
   1cc2c:	pop	{r4, r5, fp, pc}
   1cc30:	mov	r4, r5
   1cc34:	mov	r0, r4
   1cc38:	pop	{r4, r5, fp, pc}
   1cc3c:	mov	ip, #3
   1cc40:	cmp	r0, #10
   1cc44:	bcc	1cc78 <putc_unlocked@plt+0xaac0>
   1cc48:	mov	ip, #3
   1cc4c:	mov	r2, #9
   1cc50:	mov	r3, #16
   1cc54:	udiv	r1, r0, ip
   1cc58:	mls	r1, r1, ip, r0
   1cc5c:	cmp	r1, #0
   1cc60:	beq	1cc78 <putc_unlocked@plt+0xaac0>
   1cc64:	add	r2, r3, r2
   1cc68:	add	r3, r3, #8
   1cc6c:	add	ip, ip, #2
   1cc70:	cmp	r2, r0
   1cc74:	bcc	1cc54 <putc_unlocked@plt+0xaa9c>
   1cc78:	udiv	r1, r0, ip
   1cc7c:	mls	r0, r1, ip, r0
   1cc80:	cmp	r0, #0
   1cc84:	movwne	r0, #1
   1cc88:	bx	lr
   1cc8c:	mov	r2, #0
   1cc90:	str	r2, [r1]
   1cc94:	ldr	r2, [r0, #36]	; 0x24
   1cc98:	str	r2, [r1, #4]
   1cc9c:	str	r1, [r0, #36]	; 0x24
   1cca0:	bx	lr
   1cca4:	push	{r4, r5, fp, lr}
   1cca8:	add	fp, sp, #8
   1ccac:	mov	r4, r1
   1ccb0:	mov	r5, r0
   1ccb4:	ldr	r0, [r0]
   1ccb8:	bl	23e30 <_obstack_memory_used@@Base+0x3a50>
   1ccbc:	ldrd	r2, [r5, #8]
   1ccc0:	eor	r0, r2, r0
   1ccc4:	mov	r1, r3
   1ccc8:	mov	r2, r4
   1cccc:	mov	r3, #0
   1ccd0:	bl	243c4 <_obstack_memory_used@@Base+0x3fe4>
   1ccd4:	mov	r0, r2
   1ccd8:	pop	{r4, r5, fp, pc}
   1ccdc:	push	{r4, r5, fp, lr}
   1cce0:	add	fp, sp, #8
   1cce4:	mov	lr, r1
   1cce8:	ldr	ip, [lr, #8]!
   1ccec:	mov	r2, r0
   1ccf0:	ldr	r3, [r2, #8]!
   1ccf4:	eor	ip, r3, ip
   1ccf8:	ldr	r3, [lr, #4]
   1ccfc:	ldr	r4, [r2, #4]
   1cd00:	eor	r3, r4, r3
   1cd04:	orrs	r3, ip, r3
   1cd08:	mov	ip, #0
   1cd0c:	bne	1cd3c <putc_unlocked@plt+0xab84>
   1cd10:	ldrd	r4, [lr, #8]
   1cd14:	ldrd	r2, [r2, #8]
   1cd18:	eor	r3, r3, r5
   1cd1c:	eor	r2, r2, r4
   1cd20:	orrs	r2, r2, r3
   1cd24:	bne	1cd3c <putc_unlocked@plt+0xab84>
   1cd28:	ldr	r1, [r1]
   1cd2c:	ldr	r0, [r0]
   1cd30:	bl	11ccc <strcmp@plt>
   1cd34:	clz	r0, r0
   1cd38:	lsr	ip, r0, #5
   1cd3c:	mov	r0, ip
   1cd40:	pop	{r4, r5, fp, pc}
   1cd44:	push	{r4, sl, fp, lr}
   1cd48:	add	fp, sp, #8
   1cd4c:	mov	r4, r0
   1cd50:	ldr	r0, [r0]
   1cd54:	bl	1bcc8 <putc_unlocked@plt+0x9b10>
   1cd58:	mov	r0, r4
   1cd5c:	pop	{r4, sl, fp, lr}
   1cd60:	b	1bcc8 <putc_unlocked@plt+0x9b10>
   1cd64:	andeq	r0, r0, r0
   1cd68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cd6c:	add	fp, sp, #28
   1cd70:	sub	sp, sp, #4
   1cd74:	vpush	{d8-d9}
   1cd78:	sub	sp, sp, #56	; 0x38
   1cd7c:	mov	r5, r3
   1cd80:	mov	r7, r2
   1cd84:	str	r1, [sp, #48]	; 0x30
   1cd88:	str	r0, [sp, #36]	; 0x24
   1cd8c:	bl	120bc <localeconv@plt>
   1cd90:	mov	r4, r0
   1cd94:	ldr	r6, [r0]
   1cd98:	mov	r0, r6
   1cd9c:	bl	11fc0 <strlen@plt>
   1cda0:	sub	r1, r0, #1
   1cda4:	movw	r2, #34038	; 0x84f6
   1cda8:	movt	r2, #2
   1cdac:	cmp	r1, #16
   1cdb0:	movcc	r2, r6
   1cdb4:	str	r2, [sp, #8]
   1cdb8:	movcs	r0, #1
   1cdbc:	str	r0, [sp, #12]
   1cdc0:	ldr	r6, [r4, #4]
   1cdc4:	ldr	r4, [r4, #8]
   1cdc8:	mov	r0, r6
   1cdcc:	bl	11fc0 <strlen@plt>
   1cdd0:	movw	r1, #27197	; 0x6a3d
   1cdd4:	movt	r1, #2
   1cdd8:	cmp	r0, #17
   1cddc:	movcc	r1, r6
   1cde0:	movw	r0, #647	; 0x287
   1cde4:	str	r7, [sp, #32]
   1cde8:	add	r0, r7, r0
   1cdec:	str	r0, [sp, #40]	; 0x28
   1cdf0:	ands	r0, r5, #32
   1cdf4:	str	r0, [sp, #24]
   1cdf8:	mov	r0, #1000	; 0x3e8
   1cdfc:	movwne	r0, #1024	; 0x400
   1ce00:	str	r0, [sp, #52]	; 0x34
   1ce04:	and	r7, r5, #3
   1ce08:	ldr	r3, [fp, #20]
   1ce0c:	ldr	r2, [fp, #16]
   1ce10:	ldr	r6, [fp, #12]
   1ce14:	ldr	sl, [fp, #8]
   1ce18:	subs	r0, sl, r2
   1ce1c:	sbcs	r0, r6, r3
   1ce20:	str	r5, [sp, #44]	; 0x2c
   1ce24:	str	r4, [sp, #20]
   1ce28:	str	r1, [sp, #16]
   1ce2c:	str	r7, [sp, #28]
   1ce30:	bcs	1cf28 <putc_unlocked@plt+0xad70>
   1ce34:	orrs	r0, sl, r6
   1ce38:	beq	1d01c <putc_unlocked@plt+0xae64>
   1ce3c:	mov	r0, r2
   1ce40:	mov	r1, r3
   1ce44:	mov	r2, sl
   1ce48:	mov	r3, r6
   1ce4c:	bl	243c4 <_obstack_memory_used@@Base+0x3fe4>
   1ce50:	ldr	r2, [fp, #16]
   1ce54:	ldr	r3, [fp, #20]
   1ce58:	mov	r8, r0
   1ce5c:	mov	r7, r1
   1ce60:	umull	r0, r1, r0, sl
   1ce64:	mla	r1, r8, r6, r1
   1ce68:	mla	r1, r7, sl, r1
   1ce6c:	subs	r0, r2, r0
   1ce70:	sbc	r1, r3, r1
   1ce74:	orrs	r0, r0, r1
   1ce78:	bne	1d01c <putc_unlocked@plt+0xae64>
   1ce7c:	ldr	r5, [sp, #36]	; 0x24
   1ce80:	mov	r0, r5
   1ce84:	ldr	r4, [sp, #48]	; 0x30
   1ce88:	mov	r1, r4
   1ce8c:	mov	r2, r8
   1ce90:	mov	r3, r7
   1ce94:	mov	r6, r7
   1ce98:	bl	243c4 <_obstack_memory_used@@Base+0x3fe4>
   1ce9c:	mov	r9, r0
   1cea0:	mov	r7, r1
   1cea4:	umull	r0, r1, r0, r8
   1cea8:	mla	r1, r9, r6, r1
   1ceac:	mla	r1, r7, r8, r1
   1ceb0:	subs	r0, r5, r0
   1ceb4:	sbc	r1, r4, r1
   1ceb8:	add	r1, r1, r1, lsl #2
   1cebc:	mov	r2, #10
   1cec0:	umull	r5, r0, r0, r2
   1cec4:	add	sl, r0, r1, lsl #1
   1cec8:	mov	r0, r5
   1cecc:	mov	r1, sl
   1ced0:	mov	r2, r8
   1ced4:	mov	r3, r6
   1ced8:	bl	243c4 <_obstack_memory_used@@Base+0x3fe4>
   1cedc:	mov	r4, r0
   1cee0:	umull	r0, r2, r0, r8
   1cee4:	mla	r2, r4, r6, r2
   1cee8:	mla	r1, r1, r8, r2
   1ceec:	subs	r0, r5, r0
   1cef0:	sbc	r1, sl, r1
   1cef4:	lsl	r1, r1, #1
   1cef8:	orr	r1, r1, r0, lsr #31
   1cefc:	mov	r2, #2
   1cf00:	subs	r3, r8, r0, lsl #1
   1cf04:	sbcs	r3, r6, r1
   1cf08:	movwcc	r2, #3
   1cf0c:	orr	sl, r1, r0, lsl #1
   1cf10:	cmp	sl, #0
   1cf14:	movwne	sl, #1
   1cf18:	rsbs	r0, r8, r0, lsl #1
   1cf1c:	sbcs	r0, r1, r6
   1cf20:	movcs	sl, r2
   1cf24:	b	1cfac <putc_unlocked@plt+0xadf4>
   1cf28:	mov	r0, sl
   1cf2c:	mov	r1, r6
   1cf30:	bl	243c4 <_obstack_memory_used@@Base+0x3fe4>
   1cf34:	ldr	r2, [fp, #16]
   1cf38:	ldr	r3, [fp, #20]
   1cf3c:	mov	r4, r0
   1cf40:	mov	r5, r1
   1cf44:	umull	r0, r1, r0, r2
   1cf48:	mla	r1, r4, r3, r1
   1cf4c:	mla	r1, r5, r2, r1
   1cf50:	subs	r0, sl, r0
   1cf54:	sbc	r1, r6, r1
   1cf58:	orrs	r0, r0, r1
   1cf5c:	bne	1d01c <putc_unlocked@plt+0xae64>
   1cf60:	ldr	r8, [sp, #36]	; 0x24
   1cf64:	umull	r9, r0, r4, r8
   1cf68:	ldr	r1, [sp, #48]	; 0x30
   1cf6c:	mla	r0, r4, r1, r0
   1cf70:	mla	r7, r5, r8, r0
   1cf74:	mov	r0, r9
   1cf78:	mov	r1, r7
   1cf7c:	mov	r2, r4
   1cf80:	mov	r3, r5
   1cf84:	bl	243c4 <_obstack_memory_used@@Base+0x3fe4>
   1cf88:	ldr	r2, [fp, #16]
   1cf8c:	ldr	r3, [fp, #20]
   1cf90:	ldr	r5, [sp, #48]	; 0x30
   1cf94:	eor	r1, r1, r5
   1cf98:	eor	r0, r0, r8
   1cf9c:	orrs	r0, r0, r1
   1cfa0:	bne	1d01c <putc_unlocked@plt+0xae64>
   1cfa4:	mov	sl, #0
   1cfa8:	mov	r4, #0
   1cfac:	ldr	r0, [sp, #44]	; 0x2c
   1cfb0:	ldr	r6, [sp, #52]	; 0x34
   1cfb4:	ands	ip, r0, #16
   1cfb8:	mvn	r5, #0
   1cfbc:	beq	1cfd0 <putc_unlocked@plt+0xae18>
   1cfc0:	mov	r5, #0
   1cfc4:	subs	r0, r9, r6
   1cfc8:	sbcs	r0, r7, #0
   1cfcc:	bcs	1d23c <putc_unlocked@plt+0xb084>
   1cfd0:	ldr	r3, [sp, #40]	; 0x28
   1cfd4:	mov	r8, r9
   1cfd8:	ldr	r9, [sp, #28]
   1cfdc:	cmp	r9, #0
   1cfe0:	beq	1d38c <putc_unlocked@plt+0xb1d4>
   1cfe4:	cmp	r9, #1
   1cfe8:	bne	1d230 <putc_unlocked@plt+0xb078>
   1cfec:	mov	r0, #0
   1cff0:	rsbs	r1, sl, #0
   1cff4:	sbc	r0, r0, #0
   1cff8:	and	r2, r8, #1
   1cffc:	eor	r1, r2, r1
   1d000:	orrs	r0, r1, r0
   1d004:	addne	r4, r4, #1
   1d008:	cmp	r4, #5
   1d00c:	ldr	r9, [sp, #40]	; 0x28
   1d010:	ldr	sl, [sp, #32]
   1d014:	bgt	1d3a0 <putc_unlocked@plt+0xb1e8>
   1d018:	b	1d400 <putc_unlocked@plt+0xb248>
   1d01c:	mov	r0, r2
   1d020:	mov	r1, r3
   1d024:	bl	2427c <_obstack_memory_used@@Base+0x3e9c>
   1d028:	vmov	d8, r0, r1
   1d02c:	ldr	r0, [sp, #36]	; 0x24
   1d030:	ldr	r1, [sp, #48]	; 0x30
   1d034:	bl	2427c <_obstack_memory_used@@Base+0x3e9c>
   1d038:	mov	r5, r0
   1d03c:	mov	r7, r1
   1d040:	mov	r0, sl
   1d044:	mov	r1, r6
   1d048:	bl	2427c <_obstack_memory_used@@Base+0x3e9c>
   1d04c:	vmov	d16, r0, r1
   1d050:	vmov	d17, r5, r7
   1d054:	vdiv.f64	d16, d16, d8
   1d058:	vmul.f64	d0, d16, d17
   1d05c:	ldr	r8, [sp, #44]	; 0x2c
   1d060:	tst	r8, #16
   1d064:	bne	1d0ac <putc_unlocked@plt+0xaef4>
   1d068:	ldr	r0, [sp, #28]
   1d06c:	bl	1d510 <putc_unlocked@plt+0xb358>
   1d070:	vstr	d0, [sp]
   1d074:	mvn	r5, #0
   1d078:	movw	r3, #34180	; 0x8584
   1d07c:	movt	r3, #2
   1d080:	ldr	sl, [sp, #32]
   1d084:	mov	r0, sl
   1d088:	mov	r1, #1
   1d08c:	mvn	r2, #0
   1d090:	bl	11ff0 <__sprintf_chk@plt>
   1d094:	mov	r0, sl
   1d098:	bl	11fc0 <strlen@plt>
   1d09c:	mov	r2, r0
   1d0a0:	mov	r7, #0
   1d0a4:	ldr	r9, [sp, #40]	; 0x28
   1d0a8:	b	1d1a0 <putc_unlocked@plt+0xafe8>
   1d0ac:	vmov.f64	d16, #112	; 0x3f800000  1.0
   1d0b0:	ldr	r0, [sp, #52]	; 0x34
   1d0b4:	vmov	s2, r0
   1d0b8:	vcvt.f64.u32	d17, s2
   1d0bc:	mov	r5, #0
   1d0c0:	vmul.f64	d16, d16, d17
   1d0c4:	add	r5, r5, #1
   1d0c8:	cmp	r5, #7
   1d0cc:	vmulls.f64	d18, d16, d17
   1d0d0:	vcmpels.f64	d18, d0
   1d0d4:	vmrsls	APSR_nzcv, fpscr
   1d0d8:	bls	1d0c0 <putc_unlocked@plt+0xaf08>
   1d0dc:	vdiv.f64	d8, d0, d16
   1d0e0:	ldr	r9, [sp, #28]
   1d0e4:	mov	r0, r9
   1d0e8:	vmov.f64	d0, d8
   1d0ec:	bl	1d510 <putc_unlocked@plt+0xb358>
   1d0f0:	vstr	d0, [sp]
   1d0f4:	movw	r3, #34186	; 0x858a
   1d0f8:	movt	r3, #2
   1d0fc:	ldr	sl, [sp, #32]
   1d100:	mov	r0, sl
   1d104:	mov	r1, #1
   1d108:	mvn	r2, #0
   1d10c:	bl	11ff0 <__sprintf_chk@plt>
   1d110:	mov	r0, #3
   1d114:	ldr	r1, [sp, #24]
   1d118:	cmp	r1, #0
   1d11c:	movwne	r0, #2
   1d120:	ldr	r7, [sp, #12]
   1d124:	add	r4, r0, r7
   1d128:	mov	r0, sl
   1d12c:	bl	11fc0 <strlen@plt>
   1d130:	cmp	r4, r0
   1d134:	ldr	r4, [sp, #40]	; 0x28
   1d138:	bcc	1d15c <putc_unlocked@plt+0xafa4>
   1d13c:	mov	r2, r0
   1d140:	add	r7, r7, #1
   1d144:	tst	r8, #8
   1d148:	beq	1d19c <putc_unlocked@plt+0xafe4>
   1d14c:	add	r0, r2, sl
   1d150:	ldrb	r0, [r0, #-1]
   1d154:	cmp	r0, #48	; 0x30
   1d158:	bne	1d19c <putc_unlocked@plt+0xafe4>
   1d15c:	vmov.f64	d9, #36	; 0x41200000  10.0
   1d160:	vmul.f64	d0, d8, d9
   1d164:	mov	r0, r9
   1d168:	bl	1d510 <putc_unlocked@plt+0xb358>
   1d16c:	vdiv.f64	d16, d0, d9
   1d170:	vstr	d16, [sp]
   1d174:	movw	r3, #34180	; 0x8584
   1d178:	movt	r3, #2
   1d17c:	mov	r0, sl
   1d180:	mov	r1, #1
   1d184:	mvn	r2, #0
   1d188:	bl	11ff0 <__sprintf_chk@plt>
   1d18c:	mov	r0, sl
   1d190:	bl	11fc0 <strlen@plt>
   1d194:	mov	r2, r0
   1d198:	mov	r7, #0
   1d19c:	mov	r9, r4
   1d1a0:	sub	r4, r9, r2
   1d1a4:	mov	r0, r4
   1d1a8:	mov	r1, sl
   1d1ac:	bl	11d38 <memmove@plt>
   1d1b0:	sub	r0, r9, r7
   1d1b4:	tst	r8, #4
   1d1b8:	beq	1d1d4 <putc_unlocked@plt+0xb01c>
   1d1bc:	sub	r1, r0, r4
   1d1c0:	mov	r0, r4
   1d1c4:	ldr	r2, [sp, #20]
   1d1c8:	ldr	r3, [sp, #16]
   1d1cc:	bl	1d5a8 <putc_unlocked@plt+0xb3f0>
   1d1d0:	mov	r4, r0
   1d1d4:	ldr	r3, [fp, #20]
   1d1d8:	ldr	r7, [fp, #16]
   1d1dc:	ldr	r6, [sp, #52]	; 0x34
   1d1e0:	tst	r8, #128	; 0x80
   1d1e4:	beq	1d35c <putc_unlocked@plt+0xb1a4>
   1d1e8:	cmn	r5, #1
   1d1ec:	bgt	1d2f4 <putc_unlocked@plt+0xb13c>
   1d1f0:	mov	r5, #0
   1d1f4:	subs	r0, r7, #2
   1d1f8:	sbcs	r0, r3, #0
   1d1fc:	bcc	1d2f4 <putc_unlocked@plt+0xb13c>
   1d200:	mov	r0, #0
   1d204:	mov	r1, #1
   1d208:	mov	r5, #0
   1d20c:	cmp	r5, #7
   1d210:	beq	1d2f0 <putc_unlocked@plt+0xb138>
   1d214:	add	r5, r5, #1
   1d218:	umull	r1, r2, r1, r6
   1d21c:	mla	r0, r0, r6, r2
   1d220:	subs	r2, r1, r7
   1d224:	sbcs	r2, r0, r3
   1d228:	bcc	1d20c <putc_unlocked@plt+0xb054>
   1d22c:	b	1d2f4 <putc_unlocked@plt+0xb13c>
   1d230:	ldr	r9, [sp, #40]	; 0x28
   1d234:	ldr	sl, [sp, #32]
   1d238:	b	1d400 <putc_unlocked@plt+0xb248>
   1d23c:	str	ip, [sp, #48]	; 0x30
   1d240:	mov	r5, #0
   1d244:	mov	r0, r9
   1d248:	mov	r1, r7
   1d24c:	mov	r2, r6
   1d250:	mov	r3, #0
   1d254:	bl	243c4 <_obstack_memory_used@@Base+0x3fe4>
   1d258:	mov	r8, r0
   1d25c:	mov	r7, r1
   1d260:	mls	r0, r0, r6, r9
   1d264:	add	r0, r0, r0, lsl #2
   1d268:	add	r0, r4, r0, lsl #1
   1d26c:	udiv	r4, r0, r6
   1d270:	mls	r0, r4, r6, r0
   1d274:	lsl	r0, r0, #1
   1d278:	add	r0, r0, sl, lsr #1
   1d27c:	cmp	r0, r6
   1d280:	bcs	1d294 <putc_unlocked@plt+0xb0dc>
   1d284:	rsb	r1, sl, #0
   1d288:	subs	sl, r0, r1
   1d28c:	movwne	sl, #1
   1d290:	b	1d2a4 <putc_unlocked@plt+0xb0ec>
   1d294:	add	r0, r0, sl
   1d298:	cmp	r6, r0
   1d29c:	mov	sl, #2
   1d2a0:	movwcc	sl, #3
   1d2a4:	add	r5, r5, #1
   1d2a8:	cmp	r5, #7
   1d2ac:	bhi	1d2c0 <putc_unlocked@plt+0xb108>
   1d2b0:	subs	r0, r8, r6
   1d2b4:	sbcs	r0, r7, #0
   1d2b8:	mov	r9, r8
   1d2bc:	bcs	1d244 <putc_unlocked@plt+0xb08c>
   1d2c0:	rsbs	r0, r8, #9
   1d2c4:	rscs	r0, r7, #0
   1d2c8:	bcc	1d378 <putc_unlocked@plt+0xb1c0>
   1d2cc:	ldr	r9, [sp, #28]
   1d2d0:	cmp	r9, #1
   1d2d4:	ldr	ip, [sp, #48]	; 0x30
   1d2d8:	bne	1d454 <putc_unlocked@plt+0xb29c>
   1d2dc:	and	r0, r4, #1
   1d2e0:	add	r0, sl, r0
   1d2e4:	cmp	r0, #2
   1d2e8:	bhi	1d464 <putc_unlocked@plt+0xb2ac>
   1d2ec:	b	1d498 <putc_unlocked@plt+0xb2e0>
   1d2f0:	mov	r5, #8
   1d2f4:	and	r0, r8, #256	; 0x100
   1d2f8:	tst	r8, #64	; 0x40
   1d2fc:	orrsne	r1, r5, r0
   1d300:	movne	r1, #32
   1d304:	strbne	r1, [sl, #647]	; 0x287
   1d308:	addne	r9, sl, #648	; 0x288
   1d30c:	cmp	r5, #0
   1d310:	beq	1d338 <putc_unlocked@plt+0xb180>
   1d314:	ldr	r1, [sp, #24]
   1d318:	cmp	r1, #0
   1d31c:	moveq	r1, #107	; 0x6b
   1d320:	cmpeq	r5, #1
   1d324:	beq	1d334 <putc_unlocked@plt+0xb17c>
   1d328:	movw	r1, #34236	; 0x85bc
   1d32c:	movt	r1, #2
   1d330:	ldrb	r1, [r1, r5]
   1d334:	strb	r1, [r9], #1
   1d338:	cmp	r0, #0
   1d33c:	beq	1d35c <putc_unlocked@plt+0xb1a4>
   1d340:	ldr	r0, [sp, #24]
   1d344:	cmp	r0, #0
   1d348:	cmpne	r5, #0
   1d34c:	movne	r0, #105	; 0x69
   1d350:	strbne	r0, [r9], #1
   1d354:	mov	r0, #66	; 0x42
   1d358:	strb	r0, [r9], #1
   1d35c:	mov	r0, #0
   1d360:	strb	r0, [r9]
   1d364:	mov	r0, r4
   1d368:	sub	sp, fp, #48	; 0x30
   1d36c:	vpop	{d8-d9}
   1d370:	add	sp, sp, #4
   1d374:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d378:	ldr	r3, [sp, #40]	; 0x28
   1d37c:	ldr	r9, [sp, #28]
   1d380:	ldr	ip, [sp, #48]	; 0x30
   1d384:	cmp	r9, #0
   1d388:	bne	1cfe4 <putc_unlocked@plt+0xae2c>
   1d38c:	add	r0, r4, sl
   1d390:	cmp	r0, #1
   1d394:	ldr	r9, [sp, #40]	; 0x28
   1d398:	ldr	sl, [sp, #32]
   1d39c:	blt	1d400 <putc_unlocked@plt+0xb248>
   1d3a0:	adds	r8, r8, #1
   1d3a4:	adc	r7, r7, #0
   1d3a8:	cmp	r5, #7
   1d3ac:	bgt	1d400 <putc_unlocked@plt+0xb248>
   1d3b0:	cmp	ip, #0
   1d3b4:	beq	1d400 <putc_unlocked@plt+0xb248>
   1d3b8:	eor	r0, r8, r6
   1d3bc:	orrs	r0, r0, r7
   1d3c0:	bne	1d400 <putc_unlocked@plt+0xb248>
   1d3c4:	add	r5, r5, #1
   1d3c8:	mov	r7, #0
   1d3cc:	mov	r8, #1
   1d3d0:	ldr	r0, [sp, #44]	; 0x2c
   1d3d4:	tst	r0, #8
   1d3d8:	bne	1d400 <putc_unlocked@plt+0xb248>
   1d3dc:	mov	r0, #48	; 0x30
   1d3e0:	strb	r0, [r3, #-1]!
   1d3e4:	ldr	r2, [sp, #12]
   1d3e8:	sub	r3, r3, r2
   1d3ec:	mov	r0, r3
   1d3f0:	ldr	r1, [sp, #8]
   1d3f4:	mov	r4, r3
   1d3f8:	bl	11d74 <memcpy@plt>
   1d3fc:	mov	r3, r4
   1d400:	str	r3, [sp, #48]	; 0x30
   1d404:	mov	r4, r3
   1d408:	mov	r0, r8
   1d40c:	mov	r1, r7
   1d410:	mov	r2, #10
   1d414:	mov	r3, #0
   1d418:	bl	243c4 <_obstack_memory_used@@Base+0x3fe4>
   1d41c:	add	r2, r0, r0, lsl #2
   1d420:	sub	r2, r8, r2, lsl #1
   1d424:	orr	r2, r2, #48	; 0x30
   1d428:	strb	r2, [r4, #-1]!
   1d42c:	rsbs	r2, r8, #9
   1d430:	rscs	r2, r7, #0
   1d434:	mov	r8, r0
   1d438:	mov	r7, r1
   1d43c:	bcc	1d408 <putc_unlocked@plt+0xb250>
   1d440:	ldr	r8, [sp, #44]	; 0x2c
   1d444:	ldr	r0, [sp, #48]	; 0x30
   1d448:	tst	r8, #4
   1d44c:	bne	1d1bc <putc_unlocked@plt+0xb004>
   1d450:	b	1d1d4 <putc_unlocked@plt+0xb01c>
   1d454:	cmp	r9, #0
   1d458:	bne	1d498 <putc_unlocked@plt+0xb2e0>
   1d45c:	cmp	sl, #0
   1d460:	beq	1d498 <putc_unlocked@plt+0xb2e0>
   1d464:	adds	r0, r8, #1
   1d468:	adc	r1, r7, #0
   1d46c:	add	r4, r4, #1
   1d470:	mov	sl, #0
   1d474:	cmp	r4, #10
   1d478:	bne	1d498 <putc_unlocked@plt+0xb2e0>
   1d47c:	mov	r4, #0
   1d480:	rsbs	r2, r0, #9
   1d484:	rscs	r2, r1, #0
   1d488:	mov	r8, r0
   1d48c:	mov	r7, r1
   1d490:	mov	sl, #0
   1d494:	bcc	1d4f0 <putc_unlocked@plt+0xb338>
   1d498:	ldr	r0, [sp, #44]	; 0x2c
   1d49c:	tst	r0, #8
   1d4a0:	beq	1d4b4 <putc_unlocked@plt+0xb2fc>
   1d4a4:	cmp	r4, #0
   1d4a8:	bne	1d4b4 <putc_unlocked@plt+0xb2fc>
   1d4ac:	ldr	r3, [sp, #40]	; 0x28
   1d4b0:	b	1d4e0 <putc_unlocked@plt+0xb328>
   1d4b4:	add	r0, r4, #48	; 0x30
   1d4b8:	ldr	r1, [sp, #32]
   1d4bc:	strb	r0, [r1, #646]!	; 0x286
   1d4c0:	ldr	r2, [sp, #12]
   1d4c4:	sub	r4, r1, r2
   1d4c8:	mov	r0, r4
   1d4cc:	ldr	r1, [sp, #8]
   1d4d0:	bl	11d74 <memcpy@plt>
   1d4d4:	mov	r3, r4
   1d4d8:	ldr	ip, [sp, #48]	; 0x30
   1d4dc:	mov	sl, #0
   1d4e0:	mov	r4, #0
   1d4e4:	cmp	r9, #0
   1d4e8:	bne	1cfe4 <putc_unlocked@plt+0xae2c>
   1d4ec:	b	1d38c <putc_unlocked@plt+0xb1d4>
   1d4f0:	mov	sl, #0
   1d4f4:	ldr	r3, [sp, #40]	; 0x28
   1d4f8:	mov	r8, #10
   1d4fc:	mov	r7, #0
   1d500:	cmp	r9, #0
   1d504:	bne	1cfe4 <putc_unlocked@plt+0xae2c>
   1d508:	b	1d38c <putc_unlocked@plt+0xb1d4>
   1d50c:	nop	{0}
   1d510:	push	{r4, r5, r6, sl, fp, lr}
   1d514:	add	fp, sp, #16
   1d518:	vpush	{d8}
   1d51c:	vmov.f64	d8, d0
   1d520:	cmp	r0, #1
   1d524:	beq	1d590 <putc_unlocked@plt+0xb3d8>
   1d528:	vldr	d16, [pc, #112]	; 1d5a0 <putc_unlocked@plt+0xb3e8>
   1d52c:	vcmpe.f64	d8, d16
   1d530:	vmrs	APSR_nzcv, fpscr
   1d534:	bpl	1d590 <putc_unlocked@plt+0xb3d8>
   1d538:	mov	r6, r0
   1d53c:	vmov	r0, r1, d8
   1d540:	bl	24410 <_obstack_memory_used@@Base+0x4030>
   1d544:	mov	r4, r0
   1d548:	mov	r5, r1
   1d54c:	mov	r0, #0
   1d550:	cmp	r6, #0
   1d554:	mov	r2, #0
   1d558:	bne	1d580 <putc_unlocked@plt+0xb3c8>
   1d55c:	mov	r0, r4
   1d560:	mov	r1, r5
   1d564:	bl	2427c <_obstack_memory_used@@Base+0x3e9c>
   1d568:	mov	r2, #0
   1d56c:	vmov	d16, r0, r1
   1d570:	vcmp.f64	d16, d8
   1d574:	vmrs	APSR_nzcv, fpscr
   1d578:	mov	r0, #0
   1d57c:	movwne	r0, #1
   1d580:	adds	r0, r0, r4
   1d584:	adc	r1, r2, r5
   1d588:	bl	2427c <_obstack_memory_used@@Base+0x3e9c>
   1d58c:	vmov	d8, r0, r1
   1d590:	vorr	d0, d8, d8
   1d594:	vpop	{d8}
   1d598:	pop	{r4, r5, r6, sl, fp, pc}
   1d59c:	nop	{0}
   1d5a0:	andeq	r0, r0, r0
   1d5a4:	mvnsmi	r0, #0
   1d5a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d5ac:	add	fp, sp, #28
   1d5b0:	sub	sp, sp, #52	; 0x34
   1d5b4:	mov	r5, r3
   1d5b8:	mov	r9, r2
   1d5bc:	mov	r6, r1
   1d5c0:	mov	r4, r0
   1d5c4:	mov	r0, r3
   1d5c8:	bl	11fc0 <strlen@plt>
   1d5cc:	str	r0, [sp, #4]
   1d5d0:	add	sl, sp, #8
   1d5d4:	mov	r0, sl
   1d5d8:	mov	r1, r4
   1d5dc:	mov	r2, r6
   1d5e0:	bl	11d74 <memcpy@plt>
   1d5e4:	add	r0, r4, r6
   1d5e8:	ldrb	r7, [r9]
   1d5ec:	cmp	r7, #255	; 0xff
   1d5f0:	mov	r8, r7
   1d5f4:	moveq	r8, r6
   1d5f8:	cmp	r7, #0
   1d5fc:	mvneq	r8, #0
   1d600:	cmp	r8, r6
   1d604:	movhi	r8, r6
   1d608:	sub	r4, r0, r8
   1d60c:	sub	r6, r6, r8
   1d610:	add	r1, sl, r6
   1d614:	mov	r0, r4
   1d618:	mov	r2, r8
   1d61c:	bl	11d74 <memcpy@plt>
   1d620:	cmp	r6, #0
   1d624:	beq	1d6b4 <putc_unlocked@plt+0xb4fc>
   1d628:	clz	r0, r7
   1d62c:	lsr	sl, r0, #5
   1d630:	ldr	r0, [sp, #4]
   1d634:	rsb	r0, r0, #0
   1d638:	str	r0, [sp]
   1d63c:	ldr	r0, [sp]
   1d640:	add	r4, r4, r0
   1d644:	mov	r0, r4
   1d648:	mov	r1, r5
   1d64c:	ldr	r2, [sp, #4]
   1d650:	bl	11d74 <memcpy@plt>
   1d654:	tst	sl, #1
   1d658:	addeq	r9, r9, #1
   1d65c:	mov	sl, r5
   1d660:	ldrb	r5, [r9]
   1d664:	cmp	r5, #255	; 0xff
   1d668:	mov	r7, r5
   1d66c:	moveq	r7, r6
   1d670:	cmp	r5, #0
   1d674:	moveq	r7, r8
   1d678:	cmp	r6, r7
   1d67c:	movcc	r7, r6
   1d680:	sub	r4, r4, r7
   1d684:	sub	r6, r6, r7
   1d688:	add	r0, sp, #8
   1d68c:	add	r1, r0, r6
   1d690:	mov	r0, r4
   1d694:	mov	r2, r7
   1d698:	bl	11d74 <memcpy@plt>
   1d69c:	clz	r0, r5
   1d6a0:	mov	r5, sl
   1d6a4:	lsr	sl, r0, #5
   1d6a8:	cmp	r6, #0
   1d6ac:	mov	r8, r7
   1d6b0:	bne	1d63c <putc_unlocked@plt+0xb484>
   1d6b4:	mov	r0, r4
   1d6b8:	sub	sp, fp, #28
   1d6bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d6c0:	push	{r4, sl, fp, lr}
   1d6c4:	add	fp, sp, #8
   1d6c8:	mov	r4, r2
   1d6cc:	mov	r2, r1
   1d6d0:	mov	r1, r4
   1d6d4:	bl	1d6f4 <putc_unlocked@plt+0xb53c>
   1d6d8:	ldrd	r2, [r4]
   1d6dc:	orrs	r1, r2, r3
   1d6e0:	popne	{r4, sl, fp, pc}
   1d6e4:	bl	1d864 <putc_unlocked@plt+0xb6ac>
   1d6e8:	strd	r0, [r4]
   1d6ec:	mov	r0, #4
   1d6f0:	pop	{r4, sl, fp, pc}
   1d6f4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1d6f8:	add	fp, sp, #24
   1d6fc:	sub	sp, sp, #8
   1d700:	mov	r8, r2
   1d704:	mov	r5, r1
   1d708:	cmp	r0, #0
   1d70c:	bne	1d738 <putc_unlocked@plt+0xb580>
   1d710:	movw	r0, #25808	; 0x64d0
   1d714:	movt	r0, #2
   1d718:	bl	11ef4 <getenv@plt>
   1d71c:	cmp	r0, #0
   1d720:	bne	1d738 <putc_unlocked@plt+0xb580>
   1d724:	movw	r0, #34192	; 0x8590
   1d728:	movt	r0, #2
   1d72c:	bl	11ef4 <getenv@plt>
   1d730:	cmp	r0, #0
   1d734:	beq	1d824 <putc_unlocked@plt+0xb66c>
   1d738:	mov	r6, r0
   1d73c:	ldrb	r4, [r6], #1
   1d740:	cmp	r4, #39	; 0x27
   1d744:	movne	r6, r0
   1d748:	movw	r1, #34248	; 0x85c8
   1d74c:	movt	r1, #2
   1d750:	movw	r7, #34260	; 0x85d4
   1d754:	movt	r7, #2
   1d758:	mov	r0, r6
   1d75c:	mov	r2, r7
   1d760:	mov	r3, #4
   1d764:	bl	1a3cc <putc_unlocked@plt+0x8214>
   1d768:	sub	r1, r4, #39	; 0x27
   1d76c:	clz	r1, r1
   1d770:	lsr	r1, r1, #5
   1d774:	lsl	r4, r1, #2
   1d778:	cmp	r0, #0
   1d77c:	bmi	1d7a8 <putc_unlocked@plt+0xb5f0>
   1d780:	mov	r1, #0
   1d784:	mov	r2, #1
   1d788:	str	r2, [r5]
   1d78c:	str	r1, [r5, #4]
   1d790:	ldr	r0, [r7, r0, lsl #2]
   1d794:	orr	r0, r0, r4
   1d798:	str	r0, [r8]
   1d79c:	mov	r0, #0
   1d7a0:	sub	sp, fp, #24
   1d7a4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1d7a8:	movw	r0, #34202	; 0x859a
   1d7ac:	movt	r0, #2
   1d7b0:	str	r0, [sp]
   1d7b4:	add	r1, sp, #4
   1d7b8:	mov	r7, #0
   1d7bc:	mov	r0, r6
   1d7c0:	mov	r2, #0
   1d7c4:	mov	r3, r5
   1d7c8:	bl	234a0 <_obstack_memory_used@@Base+0x30c0>
   1d7cc:	cmp	r0, #0
   1d7d0:	beq	1d7e0 <putc_unlocked@plt+0xb628>
   1d7d4:	str	r7, [r8]
   1d7d8:	sub	sp, fp, #24
   1d7dc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1d7e0:	ldrb	r0, [r6]
   1d7e4:	sub	r0, r0, #48	; 0x30
   1d7e8:	uxtb	r0, r0
   1d7ec:	cmp	r0, #10
   1d7f0:	bcc	1d81c <putc_unlocked@plt+0xb664>
   1d7f4:	ldr	r1, [sp, #4]
   1d7f8:	cmp	r1, r6
   1d7fc:	beq	1d834 <putc_unlocked@plt+0xb67c>
   1d800:	add	r0, r6, #1
   1d804:	ldrb	r2, [r6, #1]
   1d808:	sub	r2, r2, #48	; 0x30
   1d80c:	uxtb	r2, r2
   1d810:	cmp	r2, #10
   1d814:	mov	r6, r0
   1d818:	bcs	1d7f8 <putc_unlocked@plt+0xb640>
   1d81c:	mov	r0, r4
   1d820:	b	1d798 <putc_unlocked@plt+0xb5e0>
   1d824:	bl	1d864 <putc_unlocked@plt+0xb6ac>
   1d828:	strd	r0, [r5]
   1d82c:	mov	r0, #0
   1d830:	b	1d798 <putc_unlocked@plt+0xb5e0>
   1d834:	ldrb	r2, [r1, #-1]
   1d838:	orr	r0, r4, #384	; 0x180
   1d83c:	cmp	r2, #66	; 0x42
   1d840:	mov	r2, r0
   1d844:	orrne	r2, r4, #128	; 0x80
   1d848:	bne	1d85c <putc_unlocked@plt+0xb6a4>
   1d84c:	ldrb	r1, [r1, #-2]
   1d850:	cmp	r1, #105	; 0x69
   1d854:	orreq	r0, r2, #32
   1d858:	b	1d798 <putc_unlocked@plt+0xb5e0>
   1d85c:	orr	r0, r2, #32
   1d860:	b	1d798 <putc_unlocked@plt+0xb5e0>
   1d864:	push	{fp, lr}
   1d868:	mov	fp, sp
   1d86c:	movw	r0, #34220	; 0x85ac
   1d870:	movt	r0, #2
   1d874:	bl	11ef4 <getenv@plt>
   1d878:	mov	r1, #512	; 0x200
   1d87c:	cmp	r0, #0
   1d880:	movweq	r1, #1024	; 0x400
   1d884:	mov	r0, r1
   1d888:	mov	r1, #0
   1d88c:	pop	{fp, pc}
   1d890:	push	{r4, r5, r6, r7, fp, lr}
   1d894:	add	fp, sp, #16
   1d898:	mov	r4, r0
   1d89c:	movw	r7, #41960	; 0xa3e8
   1d8a0:	movt	r7, #3
   1d8a4:	ldr	r5, [r7]
   1d8a8:	cmp	r5, #0
   1d8ac:	beq	1d8c8 <putc_unlocked@plt+0xb710>
   1d8b0:	ldr	r0, [r5]
   1d8b4:	cmp	r0, r4
   1d8b8:	beq	1d91c <putc_unlocked@plt+0xb764>
   1d8bc:	ldr	r5, [r5, #4]
   1d8c0:	cmp	r5, #0
   1d8c4:	bne	1d8b0 <putc_unlocked@plt+0xb6f8>
   1d8c8:	mov	r0, r4
   1d8cc:	bl	11cd8 <getpwuid@plt>
   1d8d0:	cmp	r0, #0
   1d8d4:	beq	1d8e0 <putc_unlocked@plt+0xb728>
   1d8d8:	ldr	r6, [r0]
   1d8dc:	b	1d8e8 <putc_unlocked@plt+0xb730>
   1d8e0:	movw	r6, #27197	; 0x6a3d
   1d8e4:	movt	r6, #2
   1d8e8:	mov	r0, r6
   1d8ec:	bl	11fc0 <strlen@plt>
   1d8f0:	add	r0, r0, #12
   1d8f4:	bic	r0, r0, #3
   1d8f8:	bl	22db0 <_obstack_memory_used@@Base+0x29d0>
   1d8fc:	mov	r5, r0
   1d900:	str	r4, [r0]
   1d904:	add	r0, r0, #8
   1d908:	mov	r1, r6
   1d90c:	bl	11e7c <strcpy@plt>
   1d910:	ldr	r0, [r7]
   1d914:	str	r0, [r5, #4]
   1d918:	str	r5, [r7]
   1d91c:	ldrb	r0, [r5, #8]!
   1d920:	cmp	r0, #0
   1d924:	moveq	r5, r0
   1d928:	mov	r0, r5
   1d92c:	pop	{r4, r5, r6, r7, fp, pc}
   1d930:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1d934:	add	fp, sp, #24
   1d938:	mov	r4, r0
   1d93c:	movw	r8, #41960	; 0xa3e8
   1d940:	movt	r8, #3
   1d944:	ldr	r5, [r8]
   1d948:	cmp	r5, #0
   1d94c:	beq	1d98c <putc_unlocked@plt+0xb7d4>
   1d950:	ldrb	r6, [r4]
   1d954:	b	1d964 <putc_unlocked@plt+0xb7ac>
   1d958:	ldr	r5, [r5, #4]
   1d95c:	cmp	r5, #0
   1d960:	beq	1d98c <putc_unlocked@plt+0xb7d4>
   1d964:	mov	r0, r5
   1d968:	ldrb	r1, [r0, #8]!
   1d96c:	cmp	r1, r6
   1d970:	bne	1d958 <putc_unlocked@plt+0xb7a0>
   1d974:	mov	r1, r4
   1d978:	bl	11ccc <strcmp@plt>
   1d97c:	cmp	r0, #0
   1d980:	bne	1d958 <putc_unlocked@plt+0xb7a0>
   1d984:	mov	r0, r5
   1d988:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1d98c:	movw	r7, #41964	; 0xa3ec
   1d990:	movt	r7, #3
   1d994:	ldr	r5, [r7]
   1d998:	cmp	r5, #0
   1d99c:	beq	1d9d8 <putc_unlocked@plt+0xb820>
   1d9a0:	ldrb	r6, [r4]
   1d9a4:	b	1d9b4 <putc_unlocked@plt+0xb7fc>
   1d9a8:	ldr	r5, [r5, #4]
   1d9ac:	cmp	r5, #0
   1d9b0:	beq	1d9d8 <putc_unlocked@plt+0xb820>
   1d9b4:	mov	r0, r5
   1d9b8:	ldrb	r1, [r0, #8]!
   1d9bc:	cmp	r1, r6
   1d9c0:	bne	1d9a8 <putc_unlocked@plt+0xb7f0>
   1d9c4:	mov	r1, r4
   1d9c8:	bl	11ccc <strcmp@plt>
   1d9cc:	cmp	r0, #0
   1d9d0:	bne	1d9a8 <putc_unlocked@plt+0xb7f0>
   1d9d4:	b	1da34 <putc_unlocked@plt+0xb87c>
   1d9d8:	mov	r0, r4
   1d9dc:	bl	11cc0 <getpwnam@plt>
   1d9e0:	mov	r6, r0
   1d9e4:	mov	r0, r4
   1d9e8:	bl	11fc0 <strlen@plt>
   1d9ec:	add	r0, r0, #12
   1d9f0:	bic	r0, r0, #3
   1d9f4:	bl	22db0 <_obstack_memory_used@@Base+0x29d0>
   1d9f8:	mov	r5, r0
   1d9fc:	add	r0, r0, #8
   1da00:	mov	r1, r4
   1da04:	bl	11e7c <strcpy@plt>
   1da08:	cmp	r6, #0
   1da0c:	beq	1da28 <putc_unlocked@plt+0xb870>
   1da10:	ldr	r0, [r6, #8]
   1da14:	ldr	r1, [r8]
   1da18:	stm	r5, {r0, r1}
   1da1c:	str	r5, [r8]
   1da20:	mov	r0, r5
   1da24:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1da28:	ldr	r0, [r7]
   1da2c:	str	r0, [r5, #4]
   1da30:	str	r5, [r7]
   1da34:	mov	r5, #0
   1da38:	mov	r0, r5
   1da3c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1da40:	push	{r4, r5, r6, r7, fp, lr}
   1da44:	add	fp, sp, #16
   1da48:	mov	r4, r0
   1da4c:	movw	r7, #41968	; 0xa3f0
   1da50:	movt	r7, #3
   1da54:	ldr	r5, [r7]
   1da58:	cmp	r5, #0
   1da5c:	beq	1da78 <putc_unlocked@plt+0xb8c0>
   1da60:	ldr	r0, [r5]
   1da64:	cmp	r0, r4
   1da68:	beq	1dacc <putc_unlocked@plt+0xb914>
   1da6c:	ldr	r5, [r5, #4]
   1da70:	cmp	r5, #0
   1da74:	bne	1da60 <putc_unlocked@plt+0xb8a8>
   1da78:	mov	r0, r4
   1da7c:	bl	12164 <getgrgid@plt>
   1da80:	cmp	r0, #0
   1da84:	beq	1da90 <putc_unlocked@plt+0xb8d8>
   1da88:	ldr	r6, [r0]
   1da8c:	b	1da98 <putc_unlocked@plt+0xb8e0>
   1da90:	movw	r6, #27197	; 0x6a3d
   1da94:	movt	r6, #2
   1da98:	mov	r0, r6
   1da9c:	bl	11fc0 <strlen@plt>
   1daa0:	add	r0, r0, #12
   1daa4:	bic	r0, r0, #3
   1daa8:	bl	22db0 <_obstack_memory_used@@Base+0x29d0>
   1daac:	mov	r5, r0
   1dab0:	str	r4, [r0]
   1dab4:	add	r0, r0, #8
   1dab8:	mov	r1, r6
   1dabc:	bl	11e7c <strcpy@plt>
   1dac0:	ldr	r0, [r7]
   1dac4:	str	r0, [r5, #4]
   1dac8:	str	r5, [r7]
   1dacc:	ldrb	r0, [r5, #8]!
   1dad0:	cmp	r0, #0
   1dad4:	moveq	r5, r0
   1dad8:	mov	r0, r5
   1dadc:	pop	{r4, r5, r6, r7, fp, pc}
   1dae0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1dae4:	add	fp, sp, #24
   1dae8:	mov	r4, r0
   1daec:	movw	r8, #41968	; 0xa3f0
   1daf0:	movt	r8, #3
   1daf4:	ldr	r5, [r8]
   1daf8:	cmp	r5, #0
   1dafc:	beq	1db3c <putc_unlocked@plt+0xb984>
   1db00:	ldrb	r6, [r4]
   1db04:	b	1db14 <putc_unlocked@plt+0xb95c>
   1db08:	ldr	r5, [r5, #4]
   1db0c:	cmp	r5, #0
   1db10:	beq	1db3c <putc_unlocked@plt+0xb984>
   1db14:	mov	r0, r5
   1db18:	ldrb	r1, [r0, #8]!
   1db1c:	cmp	r1, r6
   1db20:	bne	1db08 <putc_unlocked@plt+0xb950>
   1db24:	mov	r1, r4
   1db28:	bl	11ccc <strcmp@plt>
   1db2c:	cmp	r0, #0
   1db30:	bne	1db08 <putc_unlocked@plt+0xb950>
   1db34:	mov	r0, r5
   1db38:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1db3c:	movw	r7, #41972	; 0xa3f4
   1db40:	movt	r7, #3
   1db44:	ldr	r5, [r7]
   1db48:	cmp	r5, #0
   1db4c:	beq	1db88 <putc_unlocked@plt+0xb9d0>
   1db50:	ldrb	r6, [r4]
   1db54:	b	1db64 <putc_unlocked@plt+0xb9ac>
   1db58:	ldr	r5, [r5, #4]
   1db5c:	cmp	r5, #0
   1db60:	beq	1db88 <putc_unlocked@plt+0xb9d0>
   1db64:	mov	r0, r5
   1db68:	ldrb	r1, [r0, #8]!
   1db6c:	cmp	r1, r6
   1db70:	bne	1db58 <putc_unlocked@plt+0xb9a0>
   1db74:	mov	r1, r4
   1db78:	bl	11ccc <strcmp@plt>
   1db7c:	cmp	r0, #0
   1db80:	bne	1db58 <putc_unlocked@plt+0xb9a0>
   1db84:	b	1dbe4 <putc_unlocked@plt+0xba2c>
   1db88:	mov	r0, r4
   1db8c:	bl	12170 <getgrnam@plt>
   1db90:	mov	r6, r0
   1db94:	mov	r0, r4
   1db98:	bl	11fc0 <strlen@plt>
   1db9c:	add	r0, r0, #12
   1dba0:	bic	r0, r0, #3
   1dba4:	bl	22db0 <_obstack_memory_used@@Base+0x29d0>
   1dba8:	mov	r5, r0
   1dbac:	add	r0, r0, #8
   1dbb0:	mov	r1, r4
   1dbb4:	bl	11e7c <strcpy@plt>
   1dbb8:	cmp	r6, #0
   1dbbc:	beq	1dbd8 <putc_unlocked@plt+0xba20>
   1dbc0:	ldr	r0, [r6, #8]
   1dbc4:	ldr	r1, [r8]
   1dbc8:	stm	r5, {r0, r1}
   1dbcc:	str	r5, [r8]
   1dbd0:	mov	r0, r5
   1dbd4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1dbd8:	ldr	r0, [r7]
   1dbdc:	str	r0, [r5, #4]
   1dbe0:	str	r5, [r7]
   1dbe4:	mov	r5, #0
   1dbe8:	mov	r0, r5
   1dbec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1dbf0:	push	{r4, r5, r6, sl, fp, lr}
   1dbf4:	add	fp, sp, #16
   1dbf8:	mov	r4, r1
   1dbfc:	mov	r5, r0
   1dc00:	mov	r0, #0
   1dc04:	strb	r0, [r2, #20]
   1dc08:	add	r6, r2, #19
   1dc0c:	cmp	r1, #0
   1dc10:	bmi	1dc60 <putc_unlocked@plt+0xbaa8>
   1dc14:	mov	r0, r5
   1dc18:	mov	r1, r4
   1dc1c:	mov	r2, #10
   1dc20:	mov	r3, #0
   1dc24:	bl	242f0 <_obstack_memory_used@@Base+0x3f10>
   1dc28:	add	r2, r0, r0, lsl #2
   1dc2c:	sub	r2, r5, r2, lsl #1
   1dc30:	add	r2, r2, #48	; 0x30
   1dc34:	strb	r2, [r6], #-1
   1dc38:	adds	r2, r5, #9
   1dc3c:	adc	r3, r4, #0
   1dc40:	rsbs	r2, r2, #18
   1dc44:	rscs	r2, r3, #0
   1dc48:	mov	r5, r0
   1dc4c:	mov	r4, r1
   1dc50:	bcc	1dc14 <putc_unlocked@plt+0xba5c>
   1dc54:	add	r6, r6, #1
   1dc58:	mov	r0, r6
   1dc5c:	pop	{r4, r5, r6, sl, fp, pc}
   1dc60:	mov	r0, r5
   1dc64:	mov	r1, r4
   1dc68:	mov	r2, #10
   1dc6c:	mov	r3, #0
   1dc70:	bl	242f0 <_obstack_memory_used@@Base+0x3f10>
   1dc74:	add	r2, r0, r0, lsl #2
   1dc78:	rsb	r2, r5, r2, lsl #1
   1dc7c:	add	r2, r2, #48	; 0x30
   1dc80:	strb	r2, [r6], #-1
   1dc84:	adds	r2, r5, #9
   1dc88:	adc	r3, r4, #0
   1dc8c:	rsbs	r2, r2, #18
   1dc90:	rscs	r2, r3, #0
   1dc94:	mov	r5, r0
   1dc98:	mov	r4, r1
   1dc9c:	bcc	1dc60 <putc_unlocked@plt+0xbaa8>
   1dca0:	mov	r0, #45	; 0x2d
   1dca4:	strb	r0, [r6]
   1dca8:	mov	r0, r6
   1dcac:	pop	{r4, r5, r6, sl, fp, pc}
   1dcb0:	push	{r4, r5, r6, sl, fp, lr}
   1dcb4:	add	fp, sp, #16
   1dcb8:	mov	r4, r1
   1dcbc:	mov	r5, r0
   1dcc0:	mov	r0, #0
   1dcc4:	strb	r0, [r2, #20]
   1dcc8:	add	r6, r2, #19
   1dccc:	mov	r0, r5
   1dcd0:	mov	r1, r4
   1dcd4:	mov	r2, #10
   1dcd8:	mov	r3, #0
   1dcdc:	bl	243c4 <_obstack_memory_used@@Base+0x3fe4>
   1dce0:	add	r2, r0, r0, lsl #2
   1dce4:	sub	r2, r5, r2, lsl #1
   1dce8:	orr	r2, r2, #48	; 0x30
   1dcec:	strb	r2, [r6], #-1
   1dcf0:	rsbs	r2, r5, #9
   1dcf4:	rscs	r2, r4, #0
   1dcf8:	mov	r5, r0
   1dcfc:	mov	r4, r1
   1dd00:	bcc	1dccc <putc_unlocked@plt+0xbb14>
   1dd04:	add	r0, r6, #1
   1dd08:	pop	{r4, r5, r6, sl, fp, pc}
   1dd0c:	push	{r4, r5, r6, r7, fp, lr}
   1dd10:	add	fp, sp, #16
   1dd14:	sub	sp, sp, #8
   1dd18:	mov	r7, r2
   1dd1c:	mov	r4, r1
   1dd20:	add	r5, sp, #4
   1dd24:	cmp	r0, #0
   1dd28:	movne	r5, r0
   1dd2c:	mov	r0, r5
   1dd30:	bl	11ea0 <mbrtowc@plt>
   1dd34:	mov	r6, r0
   1dd38:	cmp	r7, #0
   1dd3c:	beq	1dd64 <putc_unlocked@plt+0xbbac>
   1dd40:	cmn	r6, #2
   1dd44:	bcc	1dd64 <putc_unlocked@plt+0xbbac>
   1dd48:	mov	r0, #0
   1dd4c:	bl	1bd0c <putc_unlocked@plt+0x9b54>
   1dd50:	cmp	r0, #0
   1dd54:	bne	1dd64 <putc_unlocked@plt+0xbbac>
   1dd58:	ldrb	r0, [r4]
   1dd5c:	str	r0, [r5]
   1dd60:	mov	r6, #1
   1dd64:	mov	r0, r6
   1dd68:	sub	sp, fp, #16
   1dd6c:	pop	{r4, r5, r6, r7, fp, pc}
   1dd70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dd74:	add	fp, sp, #28
   1dd78:	sub	sp, sp, #20
   1dd7c:	str	r3, [sp, #16]
   1dd80:	str	r2, [sp, #12]
   1dd84:	mov	r4, r1
   1dd88:	mov	r6, r0
   1dd8c:	bl	11fc0 <strlen@plt>
   1dd90:	mov	r8, r0
   1dd94:	mov	sl, #0
   1dd98:	ldr	r2, [fp, #12]
   1dd9c:	tst	r2, #2
   1dda0:	stmib	sp, {r4, r6}
   1dda4:	bne	1de44 <putc_unlocked@plt+0xbc8c>
   1dda8:	bl	11e70 <__ctype_get_mb_cur_max@plt>
   1ddac:	mov	r7, #0
   1ddb0:	cmp	r0, #2
   1ddb4:	bcc	1de54 <putc_unlocked@plt+0xbc9c>
   1ddb8:	mov	r0, #0
   1ddbc:	mov	r1, r6
   1ddc0:	mov	r2, #0
   1ddc4:	bl	120c8 <mbstowcs@plt>
   1ddc8:	cmn	r0, #1
   1ddcc:	beq	1de68 <putc_unlocked@plt+0xbcb0>
   1ddd0:	mov	r5, r0
   1ddd4:	add	r4, r0, #1
   1ddd8:	lsl	r0, r4, #2
   1dddc:	bl	23a30 <_obstack_memory_used@@Base+0x3650>
   1dde0:	cmp	r0, #0
   1dde4:	beq	1de64 <putc_unlocked@plt+0xbcac>
   1dde8:	mov	r1, r6
   1ddec:	mov	r2, r4
   1ddf0:	mov	r9, r0
   1ddf4:	bl	120c8 <mbstowcs@plt>
   1ddf8:	cmp	r0, #0
   1ddfc:	beq	1de88 <putc_unlocked@plt+0xbcd0>
   1de00:	mov	r0, #0
   1de04:	str	r0, [r9, r5, lsl #2]
   1de08:	mov	r0, r9
   1de0c:	bl	1e00c <putc_unlocked@plt+0xbe54>
   1de10:	mov	r5, r0
   1de14:	mov	r0, r9
   1de18:	mov	r1, r4
   1de1c:	bl	1208c <wcswidth@plt>
   1de20:	mov	r4, r0
   1de24:	cmp	r5, #0
   1de28:	str	r9, [sp]
   1de2c:	beq	1de9c <putc_unlocked@plt+0xbce4>
   1de30:	mov	r0, #0
   1de34:	mov	r1, r9
   1de38:	mov	r2, #0
   1de3c:	bl	11eac <wcstombs@plt>
   1de40:	b	1deb0 <putc_unlocked@plt+0xbcf8>
   1de44:	mov	r7, #0
   1de48:	mov	r3, #0
   1de4c:	mov	r4, r8
   1de50:	b	1df2c <putc_unlocked@plt+0xbd74>
   1de54:	mov	r3, #0
   1de58:	mov	r4, r8
   1de5c:	ldr	r2, [fp, #12]
   1de60:	b	1df2c <putc_unlocked@plt+0xbd74>
   1de64:	mov	r7, #0
   1de68:	mvn	r5, #0
   1de6c:	ldr	r2, [fp, #12]
   1de70:	tst	r2, #1
   1de74:	mov	r3, #0
   1de78:	mov	r4, r8
   1de7c:	mov	r0, #0
   1de80:	bne	1df2c <putc_unlocked@plt+0xbd74>
   1de84:	b	1dff4 <putc_unlocked@plt+0xbe3c>
   1de88:	mov	r4, r8
   1de8c:	ldr	r2, [fp, #12]
   1de90:	mov	r3, r9
   1de94:	mov	r7, #0
   1de98:	b	1df2c <putc_unlocked@plt+0xbd74>
   1de9c:	ldr	r0, [sp, #16]
   1dea0:	ldr	r0, [r0]
   1dea4:	cmp	r4, r0
   1dea8:	mov	r0, r8
   1deac:	bls	1df00 <putc_unlocked@plt+0xbd48>
   1deb0:	add	r9, r0, #1
   1deb4:	mov	r0, r9
   1deb8:	bl	23a30 <_obstack_memory_used@@Base+0x3650>
   1debc:	cmp	r0, #0
   1dec0:	beq	1df10 <putc_unlocked@plt+0xbd58>
   1dec4:	mov	r7, r0
   1dec8:	ldr	r0, [sp, #16]
   1decc:	ldr	r1, [r0]
   1ded0:	ldr	r5, [sp]
   1ded4:	mov	r0, r5
   1ded8:	bl	1e060 <putc_unlocked@plt+0xbea8>
   1dedc:	mov	r4, r0
   1dee0:	mov	r0, r7
   1dee4:	mov	r1, r5
   1dee8:	mov	r2, r9
   1deec:	bl	11eac <wcstombs@plt>
   1def0:	mov	r3, r5
   1def4:	mov	r8, r0
   1def8:	str	r7, [sp, #8]
   1defc:	b	1de5c <putc_unlocked@plt+0xbca4>
   1df00:	ldr	r2, [fp, #12]
   1df04:	ldr	r3, [sp]
   1df08:	mov	r7, #0
   1df0c:	b	1df2c <putc_unlocked@plt+0xbd74>
   1df10:	mov	r7, #0
   1df14:	mvn	r5, #0
   1df18:	ldr	r2, [fp, #12]
   1df1c:	tst	r2, #1
   1df20:	ldr	r3, [sp]
   1df24:	mov	r0, r3
   1df28:	beq	1dff4 <putc_unlocked@plt+0xbe3c>
   1df2c:	ldr	r9, [fp, #8]
   1df30:	ldr	r6, [sp, #16]
   1df34:	ldr	r0, [r6]
   1df38:	cmp	r4, r0
   1df3c:	mov	r1, r4
   1df40:	movhi	r1, r0
   1df44:	str	r1, [r6]
   1df48:	movhi	r8, r0
   1df4c:	cmp	r0, r4
   1df50:	subhi	sl, r0, r1
   1df54:	cmp	r9, #0
   1df58:	beq	1df70 <putc_unlocked@plt+0xbdb8>
   1df5c:	cmp	r9, #1
   1df60:	bne	1df78 <putc_unlocked@plt+0xbdc0>
   1df64:	mov	r4, #0
   1df68:	mov	r9, sl
   1df6c:	b	1df84 <putc_unlocked@plt+0xbdcc>
   1df70:	mov	r4, sl
   1df74:	b	1df84 <putc_unlocked@plt+0xbdcc>
   1df78:	and	r0, sl, #1
   1df7c:	add	r9, r0, sl, lsr #1
   1df80:	lsr	r4, sl, #1
   1df84:	ldr	r1, [sp, #12]
   1df88:	mov	r0, #0
   1df8c:	tst	r2, #8
   1df90:	movne	r4, r0
   1df94:	tst	r2, #4
   1df98:	movne	r9, r0
   1df9c:	cmp	r1, #0
   1dfa0:	beq	1dfe8 <putc_unlocked@plt+0xbe30>
   1dfa4:	ldr	r0, [sp, #4]
   1dfa8:	add	r1, r0, r1
   1dfac:	sub	r5, r1, #1
   1dfb0:	mov	r1, r5
   1dfb4:	mov	r2, r9
   1dfb8:	mov	r6, r3
   1dfbc:	bl	1e0d0 <putc_unlocked@plt+0xbf18>
   1dfc0:	sub	r2, r5, r0
   1dfc4:	cmp	r8, r2
   1dfc8:	movcc	r2, r8
   1dfcc:	ldr	r1, [sp, #8]
   1dfd0:	mvn	r3, #0
   1dfd4:	bl	121a0 <__mempcpy_chk@plt>
   1dfd8:	mov	r1, r5
   1dfdc:	mov	r2, r4
   1dfe0:	bl	1e0d0 <putc_unlocked@plt+0xbf18>
   1dfe4:	mov	r3, r6
   1dfe8:	add	r0, r9, r8
   1dfec:	add	r5, r0, r4
   1dff0:	mov	r0, r3
   1dff4:	bl	1bcc8 <putc_unlocked@plt+0x9b10>
   1dff8:	mov	r0, r7
   1dffc:	bl	1bcc8 <putc_unlocked@plt+0x9b10>
   1e000:	mov	r0, r5
   1e004:	sub	sp, fp, #28
   1e008:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e00c:	push	{r4, r5, r6, sl, fp, lr}
   1e010:	add	fp, sp, #16
   1e014:	mov	r1, r0
   1e018:	ldr	r0, [r0]
   1e01c:	cmp	r0, #0
   1e020:	beq	1e054 <putc_unlocked@plt+0xbe9c>
   1e024:	add	r5, r1, #4
   1e028:	mov	r4, #0
   1e02c:	movw	r6, #65533	; 0xfffd
   1e030:	bl	11e1c <iswprint@plt>
   1e034:	cmp	r0, #0
   1e038:	streq	r6, [r5, #-4]
   1e03c:	moveq	r4, #1
   1e040:	ldr	r0, [r5], #4
   1e044:	cmp	r0, #0
   1e048:	bne	1e030 <putc_unlocked@plt+0xbe78>
   1e04c:	and	r0, r4, #1
   1e050:	pop	{r4, r5, r6, sl, fp, pc}
   1e054:	mov	r4, #0
   1e058:	and	r0, r4, #1
   1e05c:	pop	{r4, r5, r6, sl, fp, pc}
   1e060:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1e064:	add	fp, sp, #24
   1e068:	mov	r4, r0
   1e06c:	ldr	r0, [r0]
   1e070:	mov	r8, #0
   1e074:	cmp	r0, #0
   1e078:	beq	1e0b8 <putc_unlocked@plt+0xbf00>
   1e07c:	mov	r5, r1
   1e080:	mov	r6, #0
   1e084:	movw	r7, #65533	; 0xfffd
   1e088:	bl	11d14 <wcwidth@plt>
   1e08c:	cmn	r0, #1
   1e090:	streq	r7, [r4]
   1e094:	moveq	r0, #1
   1e098:	add	r1, r0, r6
   1e09c:	cmp	r1, r5
   1e0a0:	bhi	1e0c0 <putc_unlocked@plt+0xbf08>
   1e0a4:	ldr	r0, [r4, #4]!
   1e0a8:	cmp	r0, #0
   1e0ac:	mov	r6, r1
   1e0b0:	bne	1e088 <putc_unlocked@plt+0xbed0>
   1e0b4:	b	1e0c4 <putc_unlocked@plt+0xbf0c>
   1e0b8:	mov	r1, #0
   1e0bc:	b	1e0c4 <putc_unlocked@plt+0xbf0c>
   1e0c0:	mov	r1, r6
   1e0c4:	str	r8, [r4]
   1e0c8:	mov	r0, r1
   1e0cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1e0d0:	push	{r4, r5, r6, sl, fp, lr}
   1e0d4:	add	fp, sp, #16
   1e0d8:	mov	r4, r0
   1e0dc:	cmp	r0, r1
   1e0e0:	bcs	1e134 <putc_unlocked@plt+0xbf7c>
   1e0e4:	cmp	r2, #0
   1e0e8:	beq	1e134 <putc_unlocked@plt+0xbf7c>
   1e0ec:	mov	r5, r1
   1e0f0:	mvn	r0, r4
   1e0f4:	add	r0, r1, r0
   1e0f8:	sub	r6, r2, #1
   1e0fc:	cmp	r6, r0
   1e100:	movls	r0, r6
   1e104:	add	r2, r0, #1
   1e108:	mov	r0, r4
   1e10c:	mov	r1, #32
   1e110:	bl	12008 <memset@plt>
   1e114:	mov	r0, #0
   1e118:	subs	r6, r6, #1
   1e11c:	adc	r1, r0, #0
   1e120:	add	r4, r4, #1
   1e124:	cmp	r4, r5
   1e128:	bcs	1e134 <putc_unlocked@plt+0xbf7c>
   1e12c:	cmp	r1, #0
   1e130:	bne	1e118 <putc_unlocked@plt+0xbf60>
   1e134:	mov	r0, #0
   1e138:	strb	r0, [r4]
   1e13c:	mov	r0, r4
   1e140:	pop	{r4, r5, r6, sl, fp, pc}
   1e144:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e148:	add	fp, sp, #28
   1e14c:	sub	sp, sp, #12
   1e150:	str	r3, [sp, #8]
   1e154:	mov	r9, r2
   1e158:	mov	r6, r1
   1e15c:	mov	sl, r0
   1e160:	ldr	r8, [r1]
   1e164:	mov	r7, #0
   1e168:	mov	r0, r8
   1e16c:	mov	r5, r8
   1e170:	cmp	r0, r5
   1e174:	bcc	1e1d8 <putc_unlocked@plt+0xc020>
   1e178:	add	r5, r0, #1
   1e17c:	mov	r0, r7
   1e180:	mov	r1, r5
   1e184:	bl	23a60 <_obstack_memory_used@@Base+0x3680>
   1e188:	cmp	r0, #0
   1e18c:	beq	1e1cc <putc_unlocked@plt+0xc014>
   1e190:	mov	r4, r0
   1e194:	str	r8, [r6]
   1e198:	str	r9, [sp]
   1e19c:	ldr	r0, [sp, #8]
   1e1a0:	str	r0, [sp, #4]
   1e1a4:	mov	r0, sl
   1e1a8:	mov	r1, r4
   1e1ac:	mov	r2, r5
   1e1b0:	mov	r3, r6
   1e1b4:	bl	1dd70 <putc_unlocked@plt+0xbbb8>
   1e1b8:	cmn	r0, #1
   1e1bc:	mov	r7, r4
   1e1c0:	bne	1e170 <putc_unlocked@plt+0xbfb8>
   1e1c4:	mov	r0, r4
   1e1c8:	b	1e1d0 <putc_unlocked@plt+0xc018>
   1e1cc:	mov	r0, r7
   1e1d0:	bl	1bcc8 <putc_unlocked@plt+0x9b10>
   1e1d4:	mov	r7, #0
   1e1d8:	mov	r0, r7
   1e1dc:	sub	sp, fp, #28
   1e1e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e1e4:	push	{r4, r5, fp, lr}
   1e1e8:	add	fp, sp, #8
   1e1ec:	mov	r4, r1
   1e1f0:	mov	r5, r0
   1e1f4:	bl	11fc0 <strlen@plt>
   1e1f8:	mov	r1, r0
   1e1fc:	mov	r0, r5
   1e200:	mov	r2, r4
   1e204:	pop	{r4, r5, fp, lr}
   1e208:	b	1e20c <putc_unlocked@plt+0xc054>
   1e20c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e210:	add	fp, sp, #28
   1e214:	sub	sp, sp, #20
   1e218:	mov	r5, r2
   1e21c:	mov	r6, r1
   1e220:	mov	r4, r0
   1e224:	add	r7, r0, r1
   1e228:	bl	11e70 <__ctype_get_mb_cur_max@plt>
   1e22c:	cmp	r0, #1
   1e230:	bls	1e4d8 <putc_unlocked@plt+0xc320>
   1e234:	cmp	r6, #1
   1e238:	blt	1e530 <putc_unlocked@plt+0xc378>
   1e23c:	and	r2, r5, #1
   1e240:	and	sl, r5, #2
   1e244:	mov	r3, #0
   1e248:	add	r8, sp, #4
   1e24c:	add	r9, sp, #8
   1e250:	mov	r5, #0
   1e254:	ldrb	r0, [r4]
   1e258:	sub	r0, r0, #32
   1e25c:	cmp	r0, #94	; 0x5e
   1e260:	bhi	1e3fc <putc_unlocked@plt+0xc244>
   1e264:	add	r1, pc, #0
   1e268:	ldr	pc, [r1, r0, lsl #2]
   1e26c:	andeq	lr, r1, r8, ror #7
   1e270:	andeq	lr, r1, r8, ror #7
   1e274:	andeq	lr, r1, r8, ror #7
   1e278:	andeq	lr, r1, r8, ror #7
   1e27c:	strdeq	lr, [r1], -ip
   1e280:	andeq	lr, r1, r8, ror #7
   1e284:	andeq	lr, r1, r8, ror #7
   1e288:	andeq	lr, r1, r8, ror #7
   1e28c:	andeq	lr, r1, r8, ror #7
   1e290:	andeq	lr, r1, r8, ror #7
   1e294:	andeq	lr, r1, r8, ror #7
   1e298:	andeq	lr, r1, r8, ror #7
   1e29c:	andeq	lr, r1, r8, ror #7
   1e2a0:	andeq	lr, r1, r8, ror #7
   1e2a4:	andeq	lr, r1, r8, ror #7
   1e2a8:	andeq	lr, r1, r8, ror #7
   1e2ac:	andeq	lr, r1, r8, ror #7
   1e2b0:	andeq	lr, r1, r8, ror #7
   1e2b4:	andeq	lr, r1, r8, ror #7
   1e2b8:	andeq	lr, r1, r8, ror #7
   1e2bc:	andeq	lr, r1, r8, ror #7
   1e2c0:	andeq	lr, r1, r8, ror #7
   1e2c4:	andeq	lr, r1, r8, ror #7
   1e2c8:	andeq	lr, r1, r8, ror #7
   1e2cc:	andeq	lr, r1, r8, ror #7
   1e2d0:	andeq	lr, r1, r8, ror #7
   1e2d4:	andeq	lr, r1, r8, ror #7
   1e2d8:	andeq	lr, r1, r8, ror #7
   1e2dc:	andeq	lr, r1, r8, ror #7
   1e2e0:	andeq	lr, r1, r8, ror #7
   1e2e4:	andeq	lr, r1, r8, ror #7
   1e2e8:	andeq	lr, r1, r8, ror #7
   1e2ec:	strdeq	lr, [r1], -ip
   1e2f0:	andeq	lr, r1, r8, ror #7
   1e2f4:	andeq	lr, r1, r8, ror #7
   1e2f8:	andeq	lr, r1, r8, ror #7
   1e2fc:	andeq	lr, r1, r8, ror #7
   1e300:	andeq	lr, r1, r8, ror #7
   1e304:	andeq	lr, r1, r8, ror #7
   1e308:	andeq	lr, r1, r8, ror #7
   1e30c:	andeq	lr, r1, r8, ror #7
   1e310:	andeq	lr, r1, r8, ror #7
   1e314:	andeq	lr, r1, r8, ror #7
   1e318:	andeq	lr, r1, r8, ror #7
   1e31c:	andeq	lr, r1, r8, ror #7
   1e320:	andeq	lr, r1, r8, ror #7
   1e324:	andeq	lr, r1, r8, ror #7
   1e328:	andeq	lr, r1, r8, ror #7
   1e32c:	andeq	lr, r1, r8, ror #7
   1e330:	andeq	lr, r1, r8, ror #7
   1e334:	andeq	lr, r1, r8, ror #7
   1e338:	andeq	lr, r1, r8, ror #7
   1e33c:	andeq	lr, r1, r8, ror #7
   1e340:	andeq	lr, r1, r8, ror #7
   1e344:	andeq	lr, r1, r8, ror #7
   1e348:	andeq	lr, r1, r8, ror #7
   1e34c:	andeq	lr, r1, r8, ror #7
   1e350:	andeq	lr, r1, r8, ror #7
   1e354:	andeq	lr, r1, r8, ror #7
   1e358:	andeq	lr, r1, r8, ror #7
   1e35c:	andeq	lr, r1, r8, ror #7
   1e360:	andeq	lr, r1, r8, ror #7
   1e364:	andeq	lr, r1, r8, ror #7
   1e368:	andeq	lr, r1, r8, ror #7
   1e36c:	strdeq	lr, [r1], -ip
   1e370:	andeq	lr, r1, r8, ror #7
   1e374:	andeq	lr, r1, r8, ror #7
   1e378:	andeq	lr, r1, r8, ror #7
   1e37c:	andeq	lr, r1, r8, ror #7
   1e380:	andeq	lr, r1, r8, ror #7
   1e384:	andeq	lr, r1, r8, ror #7
   1e388:	andeq	lr, r1, r8, ror #7
   1e38c:	andeq	lr, r1, r8, ror #7
   1e390:	andeq	lr, r1, r8, ror #7
   1e394:	andeq	lr, r1, r8, ror #7
   1e398:	andeq	lr, r1, r8, ror #7
   1e39c:	andeq	lr, r1, r8, ror #7
   1e3a0:	andeq	lr, r1, r8, ror #7
   1e3a4:	andeq	lr, r1, r8, ror #7
   1e3a8:	andeq	lr, r1, r8, ror #7
   1e3ac:	andeq	lr, r1, r8, ror #7
   1e3b0:	andeq	lr, r1, r8, ror #7
   1e3b4:	andeq	lr, r1, r8, ror #7
   1e3b8:	andeq	lr, r1, r8, ror #7
   1e3bc:	andeq	lr, r1, r8, ror #7
   1e3c0:	andeq	lr, r1, r8, ror #7
   1e3c4:	andeq	lr, r1, r8, ror #7
   1e3c8:	andeq	lr, r1, r8, ror #7
   1e3cc:	andeq	lr, r1, r8, ror #7
   1e3d0:	andeq	lr, r1, r8, ror #7
   1e3d4:	andeq	lr, r1, r8, ror #7
   1e3d8:	andeq	lr, r1, r8, ror #7
   1e3dc:	andeq	lr, r1, r8, ror #7
   1e3e0:	andeq	lr, r1, r8, ror #7
   1e3e4:	andeq	lr, r1, r8, ror #7
   1e3e8:	add	r5, r5, #1
   1e3ec:	add	r4, r4, #1
   1e3f0:	cmp	r4, r7
   1e3f4:	bcc	1e254 <putc_unlocked@plt+0xc09c>
   1e3f8:	b	1e544 <putc_unlocked@plt+0xc38c>
   1e3fc:	str	r2, [sp]
   1e400:	str	r3, [sp, #12]
   1e404:	str	r3, [sp, #8]
   1e408:	b	1e434 <putc_unlocked@plt+0xc27c>
   1e40c:	mvn	r1, #-2147483648	; 0x80000000
   1e410:	sub	r1, r1, r5
   1e414:	cmp	r0, r1
   1e418:	bgt	1e538 <putc_unlocked@plt+0xc380>
   1e41c:	add	r5, r0, r5
   1e420:	add	r4, r4, r6
   1e424:	mov	r0, r9
   1e428:	bl	11d80 <mbsinit@plt>
   1e42c:	cmp	r0, #0
   1e430:	bne	1e4cc <putc_unlocked@plt+0xc314>
   1e434:	sub	r2, r7, r4
   1e438:	mov	r0, r8
   1e43c:	mov	r1, r4
   1e440:	mov	r3, r9
   1e444:	bl	1dd0c <putc_unlocked@plt+0xbb54>
   1e448:	cmp	r0, #0
   1e44c:	beq	1e468 <putc_unlocked@plt+0xc2b0>
   1e450:	mov	r6, r0
   1e454:	cmn	r0, #2
   1e458:	beq	1e4a4 <putc_unlocked@plt+0xc2ec>
   1e45c:	cmn	r6, #1
   1e460:	bne	1e46c <putc_unlocked@plt+0xc2b4>
   1e464:	b	1e4b8 <putc_unlocked@plt+0xc300>
   1e468:	mov	r6, #1
   1e46c:	ldr	r0, [sp, #4]
   1e470:	bl	11d14 <wcwidth@plt>
   1e474:	cmp	r0, #0
   1e478:	bpl	1e40c <putc_unlocked@plt+0xc254>
   1e47c:	cmp	sl, #0
   1e480:	bne	1e540 <putc_unlocked@plt+0xc388>
   1e484:	ldr	r0, [sp, #4]
   1e488:	bl	11df8 <iswcntrl@plt>
   1e48c:	cmp	r0, #0
   1e490:	bne	1e420 <putc_unlocked@plt+0xc268>
   1e494:	cmn	r5, #-2147483647	; 0x80000001
   1e498:	beq	1e538 <putc_unlocked@plt+0xc380>
   1e49c:	add	r5, r5, #1
   1e4a0:	b	1e420 <putc_unlocked@plt+0xc268>
   1e4a4:	ldr	r0, [sp]
   1e4a8:	cmp	r0, #0
   1e4ac:	mov	r4, r7
   1e4b0:	beq	1e4c8 <putc_unlocked@plt+0xc310>
   1e4b4:	b	1e540 <putc_unlocked@plt+0xc388>
   1e4b8:	ldr	r0, [sp]
   1e4bc:	cmp	r0, #0
   1e4c0:	bne	1e540 <putc_unlocked@plt+0xc388>
   1e4c4:	add	r4, r4, #1
   1e4c8:	add	r5, r5, #1
   1e4cc:	ldr	r2, [sp]
   1e4d0:	mov	r3, #0
   1e4d4:	b	1e3f0 <putc_unlocked@plt+0xc238>
   1e4d8:	cmp	r6, #1
   1e4dc:	blt	1e530 <putc_unlocked@plt+0xc378>
   1e4e0:	and	r6, r5, #2
   1e4e4:	bl	11f78 <__ctype_b_loc@plt>
   1e4e8:	ldr	r0, [r0]
   1e4ec:	mov	r5, #0
   1e4f0:	b	1e4fc <putc_unlocked@plt+0xc344>
   1e4f4:	cmp	r4, r7
   1e4f8:	bcs	1e544 <putc_unlocked@plt+0xc38c>
   1e4fc:	ldrb	r1, [r4], #1
   1e500:	add	r1, r0, r1, lsl #1
   1e504:	ldrh	r1, [r1]
   1e508:	tst	r1, #16384	; 0x4000
   1e50c:	bne	1e520 <putc_unlocked@plt+0xc368>
   1e510:	cmp	r6, #0
   1e514:	bne	1e540 <putc_unlocked@plt+0xc388>
   1e518:	tst	r1, #2
   1e51c:	bne	1e4f4 <putc_unlocked@plt+0xc33c>
   1e520:	cmn	r5, #-2147483647	; 0x80000001
   1e524:	beq	1e538 <putc_unlocked@plt+0xc380>
   1e528:	add	r5, r5, #1
   1e52c:	b	1e4f4 <putc_unlocked@plt+0xc33c>
   1e530:	mov	r5, #0
   1e534:	b	1e544 <putc_unlocked@plt+0xc38c>
   1e538:	mvn	r5, #-2147483648	; 0x80000000
   1e53c:	b	1e544 <putc_unlocked@plt+0xc38c>
   1e540:	mvn	r5, #0
   1e544:	mov	r0, r5
   1e548:	sub	sp, fp, #28
   1e54c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e550:	mov	r3, r2
   1e554:	add	r2, r0, r1, lsl #2
   1e558:	b	1e55c <putc_unlocked@plt+0xc3a4>
   1e55c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e560:	add	fp, sp, #28
   1e564:	sub	sp, sp, #36	; 0x24
   1e568:	mov	r5, r3
   1e56c:	mov	r4, r0
   1e570:	cmp	r1, #2
   1e574:	bhi	1e5a0 <putc_unlocked@plt+0xc3e8>
   1e578:	bne	1e598 <putc_unlocked@plt+0xc3e0>
   1e57c:	ldm	r4, {r6, r7}
   1e580:	mov	r0, r6
   1e584:	mov	r1, r7
   1e588:	blx	r5
   1e58c:	cmp	r0, #1
   1e590:	strge	r7, [r4]
   1e594:	strge	r6, [r4, #4]
   1e598:	sub	sp, fp, #28
   1e59c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e5a0:	mov	r8, r2
   1e5a4:	mov	r6, r1
   1e5a8:	lsr	r9, r1, #1
   1e5ac:	add	r7, r4, r9, lsl #2
   1e5b0:	sub	r1, r1, r1, lsr #1
   1e5b4:	mov	r0, r7
   1e5b8:	mov	r3, r5
   1e5bc:	bl	1e55c <putc_unlocked@plt+0xc3a4>
   1e5c0:	cmp	r6, #3
   1e5c4:	bne	1e5d4 <putc_unlocked@plt+0xc41c>
   1e5c8:	ldr	r0, [r4]
   1e5cc:	str	r0, [r8]
   1e5d0:	b	1e5e8 <putc_unlocked@plt+0xc430>
   1e5d4:	mov	r0, r4
   1e5d8:	mov	r1, r9
   1e5dc:	mov	r2, r8
   1e5e0:	mov	r3, r5
   1e5e4:	bl	1e6d4 <putc_unlocked@plt+0xc51c>
   1e5e8:	rsb	r0, r6, #1
   1e5ec:	add	r1, r4, #4
   1e5f0:	ldr	r7, [r7]
   1e5f4:	str	r8, [sp, #16]
   1e5f8:	ldr	r6, [r8]
   1e5fc:	mov	r2, #0
   1e600:	str	r2, [sp, #32]
   1e604:	str	r9, [sp, #28]
   1e608:	mov	r2, r9
   1e60c:	mov	r3, #0
   1e610:	str	r4, [sp, #12]
   1e614:	str	r0, [sp, #8]
   1e618:	str	r1, [sp, #4]
   1e61c:	str	r3, [sp, #20]
   1e620:	add	r4, r4, r3, lsl #2
   1e624:	add	r8, r0, r2
   1e628:	str	r2, [sp, #24]
   1e62c:	add	sl, r1, r2, lsl #2
   1e630:	mov	r9, #0
   1e634:	mov	r0, r6
   1e638:	mov	r1, r7
   1e63c:	blx	r5
   1e640:	cmp	r0, #0
   1e644:	ble	1e660 <putc_unlocked@plt+0xc4a8>
   1e648:	str	r7, [r4, r9, lsl #2]
   1e64c:	adds	r0, r8, r9
   1e650:	beq	1e6a8 <putc_unlocked@plt+0xc4f0>
   1e654:	ldr	r7, [sl, r9, lsl #2]
   1e658:	add	r9, r9, #1
   1e65c:	b	1e634 <putc_unlocked@plt+0xc47c>
   1e660:	str	r6, [r4, r9, lsl #2]
   1e664:	ldr	r1, [sp, #32]
   1e668:	add	r1, r1, #1
   1e66c:	ldr	r0, [sp, #28]
   1e670:	cmp	r1, r0
   1e674:	ldr	r4, [sp, #12]
   1e678:	beq	1e598 <putc_unlocked@plt+0xc3e0>
   1e67c:	ldr	r2, [sp, #24]
   1e680:	add	r2, r2, r9
   1e684:	ldr	r0, [sp, #16]
   1e688:	str	r1, [sp, #32]
   1e68c:	ldr	r6, [r0, r1, lsl #2]
   1e690:	ldr	r0, [sp, #20]
   1e694:	add	r0, r0, r9
   1e698:	add	r3, r0, #1
   1e69c:	ldr	r0, [sp, #8]
   1e6a0:	ldr	r1, [sp, #4]
   1e6a4:	b	1e61c <putc_unlocked@plt+0xc464>
   1e6a8:	ldr	r0, [sp, #16]
   1e6ac:	ldr	r2, [sp, #32]
   1e6b0:	add	r1, r0, r2, lsl #2
   1e6b4:	ldr	r0, [sp, #28]
   1e6b8:	sub	r0, r0, r2
   1e6bc:	lsl	r2, r0, #2
   1e6c0:	add	r0, r4, r9, lsl #2
   1e6c4:	add	r0, r0, #4
   1e6c8:	sub	sp, fp, #28
   1e6cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e6d0:	b	11d74 <memcpy@plt>
   1e6d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e6d8:	add	fp, sp, #28
   1e6dc:	sub	sp, sp, #36	; 0x24
   1e6e0:	mov	r8, r3
   1e6e4:	mov	r6, r2
   1e6e8:	mov	r5, r1
   1e6ec:	mov	r4, r0
   1e6f0:	lsr	r9, r1, #1
   1e6f4:	add	r0, r0, r9, lsl #2
   1e6f8:	sub	r1, r1, r1, lsr #1
   1e6fc:	bl	1e55c <putc_unlocked@plt+0xc3a4>
   1e700:	mov	r0, r4
   1e704:	mov	r1, r9
   1e708:	mov	r7, r6
   1e70c:	mov	r2, r6
   1e710:	str	r8, [sp, #32]
   1e714:	mov	r3, r8
   1e718:	bl	1e55c <putc_unlocked@plt+0xc3a4>
   1e71c:	ldr	r6, [r4, r9, lsl #2]
   1e720:	str	r5, [sp, #4]
   1e724:	rsb	r1, r5, #1
   1e728:	str	r4, [sp, #20]
   1e72c:	ldr	r5, [r4], #4
   1e730:	mov	r0, #0
   1e734:	str	r0, [sp, #28]
   1e738:	str	r9, [sp, #16]
   1e73c:	mov	r2, r9
   1e740:	str	r1, [sp, #12]
   1e744:	str	r4, [sp, #8]
   1e748:	add	r8, r1, r2
   1e74c:	str	r2, [sp, #24]
   1e750:	add	r4, r4, r2, lsl #2
   1e754:	mvn	sl, #3
   1e758:	mov	r9, #0
   1e75c:	mov	r0, r5
   1e760:	mov	r1, r6
   1e764:	ldr	r2, [sp, #32]
   1e768:	blx	r2
   1e76c:	cmp	r0, #0
   1e770:	ble	1e790 <putc_unlocked@plt+0xc5d8>
   1e774:	str	r6, [r7, r9, lsl #2]
   1e778:	adds	r0, r8, r9
   1e77c:	beq	1e7d4 <putc_unlocked@plt+0xc61c>
   1e780:	ldr	r6, [r4, r9, lsl #2]
   1e784:	sub	sl, sl, #4
   1e788:	add	r9, r9, #1
   1e78c:	b	1e75c <putc_unlocked@plt+0xc5a4>
   1e790:	mov	r2, r7
   1e794:	str	r5, [r7, r9, lsl #2]
   1e798:	ldr	r1, [sp, #28]
   1e79c:	add	r1, r1, #1
   1e7a0:	ldr	r0, [sp, #16]
   1e7a4:	cmp	r1, r0
   1e7a8:	beq	1e804 <putc_unlocked@plt+0xc64c>
   1e7ac:	sub	r2, r2, sl
   1e7b0:	mov	r7, r2
   1e7b4:	ldr	r2, [sp, #24]
   1e7b8:	add	r2, r2, r9
   1e7bc:	ldr	r0, [sp, #20]
   1e7c0:	str	r1, [sp, #28]
   1e7c4:	ldr	r5, [r0, r1, lsl #2]
   1e7c8:	ldr	r1, [sp, #12]
   1e7cc:	ldr	r4, [sp, #8]
   1e7d0:	b	1e748 <putc_unlocked@plt+0xc590>
   1e7d4:	mov	r2, r7
   1e7d8:	ldr	r3, [sp, #16]
   1e7dc:	ldr	r7, [sp, #28]
   1e7e0:	ldr	r0, [sp, #20]
   1e7e4:	add	r1, r0, r7, lsl #2
   1e7e8:	add	r0, r2, r9, lsl #2
   1e7ec:	add	r0, r0, #4
   1e7f0:	sub	r2, r3, r7
   1e7f4:	lsl	r2, r2, #2
   1e7f8:	sub	sp, fp, #28
   1e7fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e800:	b	11d74 <memcpy@plt>
   1e804:	ldr	r0, [sp, #24]
   1e808:	add	r7, r0, r9
   1e80c:	ldr	r3, [sp, #4]
   1e810:	b	1e7e0 <putc_unlocked@plt+0xc628>
   1e814:	push	{fp, lr}
   1e818:	mov	fp, sp
   1e81c:	sub	sp, sp, #24
   1e820:	mvn	ip, #0
   1e824:	str	ip, [sp, #8]
   1e828:	mov	ip, #0
   1e82c:	str	ip, [sp, #4]
   1e830:	str	ip, [sp]
   1e834:	ldr	ip, [fp, #12]
   1e838:	str	ip, [sp, #16]
   1e83c:	ldr	ip, [fp, #8]
   1e840:	str	ip, [sp, #12]
   1e844:	bl	1e850 <putc_unlocked@plt+0xc698>
   1e848:	mov	sp, fp
   1e84c:	pop	{fp, pc}
   1e850:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e854:	add	fp, sp, #28
   1e858:	sub	sp, sp, #124	; 0x7c
   1e85c:	sub	sp, sp, #1024	; 0x400
   1e860:	mov	r4, r3
   1e864:	mov	r7, r2
   1e868:	str	r1, [sp, #88]	; 0x58
   1e86c:	mov	r5, r0
   1e870:	bl	11fe4 <__errno_location@plt>
   1e874:	mov	r2, r4
   1e878:	ldr	r1, [r2, #8]!
   1e87c:	cmp	r1, #0
   1e880:	mov	r3, r1
   1e884:	movweq	r3, #12
   1e888:	cmp	r1, #12
   1e88c:	subgt	r3, r1, #12
   1e890:	ldr	r1, [r2, #32]
   1e894:	movw	r6, #27197	; 0x6a3d
   1e898:	movt	r6, #2
   1e89c:	cmp	r1, #0
   1e8a0:	movne	r6, r1
   1e8a4:	str	r0, [sp, #60]	; 0x3c
   1e8a8:	ldr	r1, [r0]
   1e8ac:	ldrb	r0, [r7]
   1e8b0:	cmp	r0, #0
   1e8b4:	str	r1, [sp, #56]	; 0x38
   1e8b8:	beq	1ffe8 <putc_unlocked@plt+0xde30>
   1e8bc:	str	r6, [sp, #44]	; 0x2c
   1e8c0:	str	r3, [sp, #32]
   1e8c4:	str	r2, [sp, #36]	; 0x24
   1e8c8:	ldr	r6, [fp, #16]
   1e8cc:	sub	r1, fp, #48	; 0x30
   1e8d0:	add	r0, r1, #13
   1e8d4:	str	r0, [sp, #24]
   1e8d8:	add	r0, sp, #96	; 0x60
   1e8dc:	add	r0, r0, #1
   1e8e0:	str	r0, [sp, #48]	; 0x30
   1e8e4:	sub	r0, fp, #53	; 0x35
   1e8e8:	add	r2, r0, #3
   1e8ec:	str	r2, [sp, #52]	; 0x34
   1e8f0:	add	r0, r0, #2
   1e8f4:	str	r0, [sp, #68]	; 0x44
   1e8f8:	add	r0, r1, #14
   1e8fc:	str	r0, [sp, #64]	; 0x40
   1e900:	str	r4, [sp, #76]	; 0x4c
   1e904:	add	r0, r4, #12
   1e908:	str	r0, [sp, #28]
   1e90c:	mov	ip, #0
   1e910:	mov	r8, #-2147483648	; 0x80000000
   1e914:	movw	r3, #52428	; 0xcccc
   1e918:	movt	r3, #3276	; 0xccc
   1e91c:	mov	lr, r5
   1e920:	b	1e93c <putc_unlocked@plt+0xc784>
   1e924:	mov	lr, #0
   1e928:	add	ip, r5, ip
   1e92c:	ldrb	r0, [r7, #1]!
   1e930:	mvn	r6, #0
   1e934:	cmp	r0, #0
   1e938:	beq	1fff0 <putc_unlocked@plt+0xde38>
   1e93c:	ldrb	r0, [r7]
   1e940:	cmp	r0, #37	; 0x25
   1e944:	bne	1e9e4 <putc_unlocked@plt+0xc82c>
   1e948:	mov	r2, #0
   1e94c:	ldr	r0, [fp, #8]
   1e950:	mov	r4, r0
   1e954:	mov	sl, #0
   1e958:	mov	r9, r7
   1e95c:	add	r9, r7, #1
   1e960:	b	1e974 <putc_unlocked@plt+0xc7bc>
   1e964:	cmp	r5, #95	; 0x5f
   1e968:	bne	1e9d0 <putc_unlocked@plt+0xc818>
   1e96c:	add	r9, r9, #1
   1e970:	mov	sl, r5
   1e974:	ldrb	r5, [r9]
   1e978:	sub	r0, r5, #35	; 0x23
   1e97c:	cmp	r0, #13
   1e980:	bhi	1e964 <putc_unlocked@plt+0xc7ac>
   1e984:	add	r1, pc, #0
   1e988:	ldr	pc, [r1, r0, lsl #2]
   1e98c:	andeq	lr, r1, r4, asr #19
   1e990:	andeq	lr, r1, r4, asr sl
   1e994:	andeq	lr, r1, r4, asr sl
   1e998:	andeq	lr, r1, r4, asr sl
   1e99c:	andeq	lr, r1, r4, asr sl
   1e9a0:	andeq	lr, r1, r4, asr sl
   1e9a4:	andeq	lr, r1, r4, asr sl
   1e9a8:	andeq	lr, r1, r4, asr sl
   1e9ac:	andeq	lr, r1, ip, ror #18
   1e9b0:	andeq	lr, r1, r4, asr sl
   1e9b4:	andeq	lr, r1, ip, ror #18
   1e9b8:	andeq	lr, r1, r4, asr sl
   1e9bc:	andeq	lr, r1, r4, asr sl
   1e9c0:	andeq	lr, r1, ip, ror #18
   1e9c4:	mov	r2, #1
   1e9c8:	add	r9, r9, #1
   1e9cc:	b	1e974 <putc_unlocked@plt+0xc7bc>
   1e9d0:	cmp	r5, #94	; 0x5e
   1e9d4:	bne	1ea54 <putc_unlocked@plt+0xc89c>
   1e9d8:	mov	r4, #1
   1e9dc:	add	r9, r9, #1
   1e9e0:	b	1e974 <putc_unlocked@plt+0xc7bc>
   1e9e4:	bic	r0, r6, r6, asr #31
   1e9e8:	cmp	r0, #1
   1e9ec:	mov	r5, r0
   1e9f0:	movls	r5, #1
   1e9f4:	ldr	r1, [sp, #88]	; 0x58
   1e9f8:	sub	r1, r1, ip
   1e9fc:	cmp	r5, r1
   1ea00:	bcs	20014 <putc_unlocked@plt+0xde5c>
   1ea04:	cmp	lr, #0
   1ea08:	beq	1e924 <putc_unlocked@plt+0xc76c>
   1ea0c:	cmp	r0, #2
   1ea10:	bcc	1ea48 <putc_unlocked@plt+0xc890>
   1ea14:	sub	r4, r0, #1
   1ea18:	mov	r0, lr
   1ea1c:	mov	r1, #32
   1ea20:	mov	r2, r4
   1ea24:	mov	r8, ip
   1ea28:	mov	r6, lr
   1ea2c:	bl	12008 <memset@plt>
   1ea30:	mov	lr, r6
   1ea34:	mov	ip, r8
   1ea38:	add	lr, r6, r4
   1ea3c:	movw	r3, #52428	; 0xcccc
   1ea40:	movt	r3, #3276	; 0xccc
   1ea44:	mov	r8, #-2147483648	; 0x80000000
   1ea48:	ldrb	r0, [r7]
   1ea4c:	strb	r0, [lr], #1
   1ea50:	b	1e928 <putc_unlocked@plt+0xc770>
   1ea54:	sub	r0, r5, #48	; 0x30
   1ea58:	cmp	r0, #9
   1ea5c:	bhi	1eac4 <putc_unlocked@plt+0xc90c>
   1ea60:	mov	r6, #0
   1ea64:	cmn	r6, #1
   1ea68:	bgt	1eaa0 <putc_unlocked@plt+0xc8e8>
   1ea6c:	b	1eaac <putc_unlocked@plt+0xc8f4>
   1ea70:	ldrb	r0, [r9]
   1ea74:	add	r1, r6, r6, lsl #2
   1ea78:	add	r0, r0, r1, lsl #1
   1ea7c:	sub	r6, r0, #48	; 0x30
   1ea80:	cmp	r6, r1, lsl #1
   1ea84:	mvnvs	r6, #-2147483648	; 0x80000000
   1ea88:	ldrb	r5, [r9, #1]!
   1ea8c:	sub	r0, r5, #48	; 0x30
   1ea90:	cmp	r0, #10
   1ea94:	bcs	1eac4 <putc_unlocked@plt+0xc90c>
   1ea98:	cmn	r6, #1
   1ea9c:	ble	1eaac <putc_unlocked@plt+0xc8f4>
   1eaa0:	cmp	r6, r3
   1eaa4:	ble	1ea70 <putc_unlocked@plt+0xc8b8>
   1eaa8:	b	1eabc <putc_unlocked@plt+0xc904>
   1eaac:	beq	1ea70 <putc_unlocked@plt+0xc8b8>
   1eab0:	sdiv	r0, r8, r6
   1eab4:	cmp	r0, #10
   1eab8:	bge	1ea70 <putc_unlocked@plt+0xc8b8>
   1eabc:	mvn	r6, #-2147483648	; 0x80000000
   1eac0:	b	1ea88 <putc_unlocked@plt+0xc8d0>
   1eac4:	cmp	r5, #79	; 0x4f
   1eac8:	cmpne	r5, #69	; 0x45
   1eacc:	bne	1ead8 <putc_unlocked@plt+0xc920>
   1ead0:	add	r9, r9, #1
   1ead4:	b	1eadc <putc_unlocked@plt+0xc924>
   1ead8:	mov	r5, #0
   1eadc:	str	r4, [sp, #92]	; 0x5c
   1eae0:	str	r7, [sp, #84]	; 0x54
   1eae4:	ldrb	r3, [r9]
   1eae8:	cmp	r3, #122	; 0x7a
   1eaec:	bhi	1f4c8 <putc_unlocked@plt+0xd310>
   1eaf0:	mov	r7, r2
   1eaf4:	mov	r8, #0
   1eaf8:	mvn	r2, #0
   1eafc:	add	r0, pc, #16
   1eb00:	movw	r1, #26215	; 0x6667
   1eb04:	movt	r1, #26214	; 0x6666
   1eb08:	movw	r4, #26174	; 0x663e
   1eb0c:	movt	r4, #2
   1eb10:	ldr	pc, [r0, r3, lsl #2]
   1eb14:	andeq	lr, r1, r8, ror #27
   1eb18:	andeq	pc, r1, r8, asr #9
   1eb1c:	andeq	pc, r1, r8, asr #9
   1eb20:	andeq	pc, r1, r8, asr #9
   1eb24:	andeq	pc, r1, r8, asr #9
   1eb28:	andeq	pc, r1, r8, asr #9
   1eb2c:	andeq	pc, r1, r8, asr #9
   1eb30:	andeq	pc, r1, r8, asr #9
   1eb34:	andeq	pc, r1, r8, asr #9
   1eb38:	andeq	pc, r1, r8, asr #9
   1eb3c:	andeq	pc, r1, r8, asr #9
   1eb40:	andeq	pc, r1, r8, asr #9
   1eb44:	andeq	pc, r1, r8, asr #9
   1eb48:	andeq	pc, r1, r8, asr #9
   1eb4c:	andeq	pc, r1, r8, asr #9
   1eb50:	andeq	pc, r1, r8, asr #9
   1eb54:	andeq	pc, r1, r8, asr #9
   1eb58:	andeq	pc, r1, r8, asr #9
   1eb5c:	andeq	pc, r1, r8, asr #9
   1eb60:	andeq	pc, r1, r8, asr #9
   1eb64:	andeq	pc, r1, r8, asr #9
   1eb68:	andeq	pc, r1, r8, asr #9
   1eb6c:	andeq	pc, r1, r8, asr #9
   1eb70:	andeq	pc, r1, r8, asr #9
   1eb74:	andeq	pc, r1, r8, asr #9
   1eb78:	andeq	pc, r1, r8, asr #9
   1eb7c:	andeq	pc, r1, r8, asr #9
   1eb80:	andeq	pc, r1, r8, asr #9
   1eb84:	andeq	pc, r1, r8, asr #9
   1eb88:	andeq	pc, r1, r8, asr #9
   1eb8c:	andeq	pc, r1, r8, asr #9
   1eb90:	andeq	pc, r1, r8, asr #9
   1eb94:	andeq	pc, r1, r8, asr #9
   1eb98:	andeq	pc, r1, r8, asr #9
   1eb9c:	andeq	pc, r1, r8, asr #9
   1eba0:	andeq	pc, r1, r8, asr #9
   1eba4:	andeq	pc, r1, r8, asr #9
   1eba8:	ldrdeq	lr, [r1], -r8
   1ebac:	andeq	pc, r1, r8, asr #9
   1ebb0:	andeq	pc, r1, r8, asr #9
   1ebb4:	andeq	pc, r1, r8, asr #9
   1ebb8:	andeq	pc, r1, r8, asr #9
   1ebbc:	andeq	pc, r1, r8, asr #9
   1ebc0:	andeq	pc, r1, r8, asr #9
   1ebc4:	andeq	pc, r1, r8, asr #9
   1ebc8:	andeq	pc, r1, r8, asr #9
   1ebcc:	andeq	pc, r1, r8, asr #9
   1ebd0:	andeq	pc, r1, r8, asr #9
   1ebd4:	andeq	pc, r1, r8, asr #9
   1ebd8:	andeq	pc, r1, r8, asr #9
   1ebdc:	andeq	pc, r1, r8, asr #9
   1ebe0:	andeq	pc, r1, r8, asr #9
   1ebe4:	andeq	pc, r1, r8, asr #9
   1ebe8:	andeq	pc, r1, r8, asr #9
   1ebec:	andeq	pc, r1, r8, asr #9
   1ebf0:	andeq	pc, r1, r8, asr #9
   1ebf4:	andeq	pc, r1, r8, asr #9
   1ebf8:	andeq	pc, r1, r8, asr #9
   1ebfc:	strdeq	lr, [r1], -r0
   1ec00:	andeq	pc, r1, r8, asr #9
   1ec04:	andeq	pc, r1, r8, asr #9
   1ec08:	andeq	pc, r1, r8, asr #9
   1ec0c:	andeq	pc, r1, r8, asr #9
   1ec10:	andeq	pc, r1, r8, asr #9
   1ec14:	andeq	pc, r1, r8, asr #9
   1ec18:	andeq	lr, r1, r8, lsl #28
   1ec1c:	andeq	lr, r1, r8, lsr #28
   1ec20:	andeq	lr, r1, r8, asr #28
   1ec24:	andeq	lr, r1, ip, asr lr
   1ec28:	andeq	pc, r1, r8, asr #9
   1ec2c:	andeq	lr, r1, r0, ror lr
   1ec30:	andeq	lr, r1, r0, lsl #26
   1ec34:	muleq	r1, ip, lr
   1ec38:			; <UNDEFINED> instruction: 0x0001eeb0
   1ec3c:	andeq	pc, r1, r8, asr #9
   1ec40:	andeq	pc, r1, r8, asr #9
   1ec44:	andeq	pc, r1, r8, asr #9
   1ec48:	andeq	lr, r1, r8, asr #29
   1ec4c:	ldrdeq	lr, [r1], -ip
   1ec50:	andeq	pc, r1, r8, asr #9
   1ec54:	andeq	lr, r1, r0, asr pc
   1ec58:	andeq	pc, r1, r8, asr #9
   1ec5c:	andeq	lr, r1, ip, lsl #31
   1ec60:	andeq	lr, r1, r0, ror pc
   1ec64:	andeq	lr, r1, r4, lsl #31
   1ec68:	andeq	pc, r1, r4, lsr r0	; <UNPREDICTABLE>
   1ec6c:	andeq	lr, r1, r0, lsl #26
   1ec70:	andeq	pc, r1, r8, rrx
   1ec74:	andeq	pc, r1, r8, asr #1
   1ec78:	ldrdeq	pc, [r1], -ip
   1ec7c:	andeq	pc, r1, ip, lsl #2
   1ec80:	andeq	pc, r1, r8, asr #9
   1ec84:	andeq	pc, r1, r8, asr #9
   1ec88:	andeq	pc, r1, r8, asr #9
   1ec8c:	andeq	pc, r1, r8, asr #9
   1ec90:	andeq	pc, r1, r8, asr #9
   1ec94:	andeq	pc, r1, r8, asr #9
   1ec98:	andeq	pc, r1, r4, ror r1	; <UNPREDICTABLE>
   1ec9c:			; <UNDEFINED> instruction: 0x0001edbc
   1eca0:	muleq	r1, r4, r1
   1eca4:	andeq	pc, r1, r8, lsr #3
   1eca8:			; <UNDEFINED> instruction: 0x0001f1bc
   1ecac:	andeq	pc, r1, r8, asr #9
   1ecb0:	andeq	lr, r1, r0, lsl #26
   1ecb4:			; <UNDEFINED> instruction: 0x0001edbc
   1ecb8:	andeq	pc, r1, r8, asr #9
   1ecbc:	andeq	pc, r1, ip, asr #3
   1ecc0:	strdeq	pc, [r1], -r4
   1ecc4:	andeq	pc, r1, r8, lsl #4
   1ecc8:	andeq	pc, r1, r0, lsr #4
   1eccc:	andeq	pc, r1, r0, asr r2	; <UNPREDICTABLE>
   1ecd0:	andeq	pc, r1, r8, asr #9
   1ecd4:	andeq	lr, r1, r4, asr pc
   1ecd8:			; <UNDEFINED> instruction: 0x0001f2b0
   1ecdc:	andeq	pc, r1, r0, lsr #19
   1ece0:	ldrdeq	pc, [r1], -ip
   1ece4:	andeq	pc, r1, r8, lsr #7
   1ece8:	andeq	pc, r1, r8, lsl #8
   1ecec:	andeq	pc, r1, r8, asr #9
   1ecf0:	andeq	pc, r1, ip, lsr r4	; <UNPREDICTABLE>
   1ecf4:	andeq	pc, r1, r4, asr r4	; <UNPREDICTABLE>
   1ecf8:	andeq	pc, r1, r8, ror #8
   1ecfc:	andeq	pc, r1, r8, lsl #9
   1ed00:	cmp	r5, #69	; 0x45
   1ed04:	beq	1f4c8 <putc_unlocked@plt+0xd310>
   1ed08:	str	r3, [sp, #40]	; 0x28
   1ed0c:	str	lr, [sp, #72]	; 0x48
   1ed10:	str	ip, [sp, #80]	; 0x50
   1ed14:	ldr	r0, [sp, #76]	; 0x4c
   1ed18:	ldr	r2, [r0, #20]
   1ed1c:	ldr	r1, [r0, #24]
   1ed20:	ldr	r7, [r0, #28]
   1ed24:	mvn	r0, #99	; 0x63
   1ed28:	cmp	r2, #0
   1ed2c:	movwmi	r0, #300	; 0x12c
   1ed30:	str	r2, [sp, #20]
   1ed34:	add	r8, r0, r2
   1ed38:	mov	r0, r7
   1ed3c:	str	r1, [sp, #84]	; 0x54
   1ed40:	bl	200b0 <putc_unlocked@plt+0xdef8>
   1ed44:	cmn	r0, #1
   1ed48:	ble	1f5c4 <putc_unlocked@plt+0xd40c>
   1ed4c:	mov	r4, r0
   1ed50:	movw	r0, #365	; 0x16d
   1ed54:	tst	r8, #3
   1ed58:	bne	1ed9c <putc_unlocked@plt+0xcbe4>
   1ed5c:	movw	r0, #34079	; 0x851f
   1ed60:	movt	r0, #20971	; 0x51eb
   1ed64:	smmul	r0, r8, r0
   1ed68:	asr	r1, r0, #5
   1ed6c:	add	r1, r1, r0, lsr #31
   1ed70:	mov	r2, #100	; 0x64
   1ed74:	mls	r1, r1, r2, r8
   1ed78:	asr	r2, r0, #7
   1ed7c:	add	r0, r2, r0, lsr #31
   1ed80:	mov	r2, #400	; 0x190
   1ed84:	mls	r2, r0, r2, r8
   1ed88:	movw	r0, #365	; 0x16d
   1ed8c:	cmp	r2, #0
   1ed90:	movweq	r0, #366	; 0x16e
   1ed94:	cmp	r1, #0
   1ed98:	movwne	r0, #366	; 0x16e
   1ed9c:	sub	r0, r7, r0
   1eda0:	ldr	r1, [sp, #84]	; 0x54
   1eda4:	bl	200b0 <putc_unlocked@plt+0xdef8>
   1eda8:	cmn	r0, #1
   1edac:	movgt	r4, r0
   1edb0:	mvn	r0, r0
   1edb4:	lsr	r0, r0, #31
   1edb8:	b	1f628 <putc_unlocked@plt+0xd470>
   1edbc:	ldr	r0, [sp, #92]	; 0x5c
   1edc0:	orr	r0, r7, r0
   1edc4:	mov	r8, #0
   1edc8:	cmp	r5, #69	; 0x45
   1edcc:	str	r0, [sp, #92]	; 0x5c
   1edd0:	bne	1f9a0 <putc_unlocked@plt+0xd7e8>
   1edd4:	b	1f4c8 <putc_unlocked@plt+0xd310>
   1edd8:	sub	r0, r9, #1
   1eddc:	ldr	r1, [sp, #84]	; 0x54
   1ede0:	cmp	r0, r1
   1ede4:	beq	1fbec <putc_unlocked@plt+0xda34>
   1ede8:	sub	r9, r9, #1
   1edec:	b	1f4c8 <putc_unlocked@plt+0xd310>
   1edf0:	mov	r8, #1
   1edf4:	ldrb	r0, [r9, r8]
   1edf8:	cmp	r0, #58	; 0x3a
   1edfc:	bne	1f47c <putc_unlocked@plt+0xd2c4>
   1ee00:	add	r8, r8, #1
   1ee04:	b	1edf4 <putc_unlocked@plt+0xcc3c>
   1ee08:	cmp	r5, #0
   1ee0c:	bne	1f4c8 <putc_unlocked@plt+0xd310>
   1ee10:	ldr	r0, [sp, #92]	; 0x5c
   1ee14:	orr	r0, r7, r0
   1ee18:	str	r0, [sp, #92]	; 0x5c
   1ee1c:	mov	r8, #0
   1ee20:	mov	r3, #65	; 0x41
   1ee24:	b	1f9a0 <putc_unlocked@plt+0xd7e8>
   1ee28:	cmp	r5, #69	; 0x45
   1ee2c:	beq	1f4c8 <putc_unlocked@plt+0xd310>
   1ee30:	ldr	r0, [sp, #92]	; 0x5c
   1ee34:	orr	r0, r7, r0
   1ee38:	str	r0, [sp, #92]	; 0x5c
   1ee3c:	mov	r8, #0
   1ee40:	mov	r3, #66	; 0x42
   1ee44:	b	1f9a0 <putc_unlocked@plt+0xd7e8>
   1ee48:	cmp	r5, #69	; 0x45
   1ee4c:	bne	1f698 <putc_unlocked@plt+0xd4e0>
   1ee50:	mov	r8, #0
   1ee54:	mov	r3, #67	; 0x43
   1ee58:	b	1f9a0 <putc_unlocked@plt+0xd7e8>
   1ee5c:	cmp	r5, #0
   1ee60:	bne	1f4c8 <putc_unlocked@plt+0xd310>
   1ee64:	movw	r4, #34268	; 0x85dc
   1ee68:	movt	r4, #2
   1ee6c:	b	1ef8c <putc_unlocked@plt+0xcdd4>
   1ee70:	cmp	r5, #0
   1ee74:	bne	1f4c8 <putc_unlocked@plt+0xd310>
   1ee78:	movw	r4, #34277	; 0x85e5
   1ee7c:	movt	r4, #2
   1ee80:	cmp	sl, #0
   1ee84:	bne	1fd80 <putc_unlocked@plt+0xdbc8>
   1ee88:	cmp	r6, #0
   1ee8c:	bpl	1fd80 <putc_unlocked@plt+0xdbc8>
   1ee90:	mov	sl, #43	; 0x2b
   1ee94:	mov	r2, #4
   1ee98:	b	1ef8c <putc_unlocked@plt+0xcdd4>
   1ee9c:	cmp	r5, #69	; 0x45
   1eea0:	beq	1f4c8 <putc_unlocked@plt+0xd310>
   1eea4:	ldr	r0, [sp, #36]	; 0x24
   1eea8:	ldr	r0, [r0]
   1eeac:	b	1f86c <putc_unlocked@plt+0xd6b4>
   1eeb0:	cmp	r5, #69	; 0x45
   1eeb4:	beq	1f4c8 <putc_unlocked@plt+0xd310>
   1eeb8:	mov	r0, #2
   1eebc:	str	r0, [sp, #72]	; 0x48
   1eec0:	ldr	r0, [sp, #32]
   1eec4:	b	1f874 <putc_unlocked@plt+0xd6bc>
   1eec8:	cmp	r5, #69	; 0x45
   1eecc:	beq	1f4c8 <putc_unlocked@plt+0xd310>
   1eed0:	ldr	r0, [sp, #76]	; 0x4c
   1eed4:	ldr	r0, [r0, #4]
   1eed8:	b	1f86c <putc_unlocked@plt+0xd6b4>
   1eedc:	cmp	r5, #69	; 0x45
   1eee0:	beq	1f4c8 <putc_unlocked@plt+0xd310>
   1eee4:	mov	r2, r1
   1eee8:	cmp	r6, #1
   1eeec:	movwlt	r6, #9
   1eef0:	mov	r4, #9
   1eef4:	mov	r0, #8
   1eef8:	ldr	r1, [fp, #24]
   1eefc:	sub	r7, fp, #48	; 0x30
   1ef00:	mov	r5, r2
   1ef04:	cmp	r6, r4
   1ef08:	blt	1ef30 <putc_unlocked@plt+0xcd78>
   1ef0c:	cmp	r4, #2
   1ef10:	blt	1f6f4 <putc_unlocked@plt+0xd53c>
   1ef14:	smmul	r2, r1, r5
   1ef18:	asr	r3, r2, #2
   1ef1c:	add	r2, r3, r2, lsr #31
   1ef20:	add	r2, r2, r2, lsl #2
   1ef24:	sub	r2, r1, r2, lsl #1
   1ef28:	cmp	r2, #0
   1ef2c:	bne	1f6f4 <putc_unlocked@plt+0xd53c>
   1ef30:	smmul	r1, r1, r5
   1ef34:	asr	r2, r1, #2
   1ef38:	add	r1, r2, r1, lsr #31
   1ef3c:	sub	r0, r0, #1
   1ef40:	sub	r4, r4, #1
   1ef44:	cmp	r6, r4
   1ef48:	blt	1ef30 <putc_unlocked@plt+0xcd78>
   1ef4c:	b	1ef0c <putc_unlocked@plt+0xcd54>
   1ef50:	mov	r8, #1
   1ef54:	orr	r8, r7, r8
   1ef58:	eor	r0, r7, #1
   1ef5c:	ldr	r1, [sp, #92]	; 0x5c
   1ef60:	and	r1, r1, r0
   1ef64:	str	r1, [sp, #92]	; 0x5c
   1ef68:	mov	r3, #112	; 0x70
   1ef6c:	b	1f9a0 <putc_unlocked@plt+0xd7e8>
   1ef70:	cmp	r5, #69	; 0x45
   1ef74:	beq	1f4c8 <putc_unlocked@plt+0xd310>
   1ef78:	ldr	r0, [sp, #76]	; 0x4c
   1ef7c:	ldr	r0, [r0]
   1ef80:	b	1f86c <putc_unlocked@plt+0xd6b4>
   1ef84:	movw	r4, #34286	; 0x85ee
   1ef88:	movt	r4, #2
   1ef8c:	str	lr, [sp, #72]	; 0x48
   1ef90:	ldr	r0, [sp, #92]	; 0x5c
   1ef94:	and	r5, r0, #1
   1ef98:	stm	sp, {r5, sl}
   1ef9c:	str	r2, [sp, #92]	; 0x5c
   1efa0:	str	r2, [sp, #8]
   1efa4:	ldr	r0, [fp, #20]
   1efa8:	str	r0, [sp, #12]
   1efac:	ldr	r0, [fp, #24]
   1efb0:	str	r0, [sp, #16]
   1efb4:	mov	r0, #0
   1efb8:	mvn	r1, #0
   1efbc:	mov	r2, r4
   1efc0:	ldr	r3, [sp, #76]	; 0x4c
   1efc4:	str	ip, [sp, #80]	; 0x50
   1efc8:	bl	1e850 <putc_unlocked@plt+0xc698>
   1efcc:	ldr	ip, [sp, #80]	; 0x50
   1efd0:	mov	r8, r0
   1efd4:	subs	r0, sl, #45	; 0x2d
   1efd8:	movne	r0, r6
   1efdc:	cmp	r6, #0
   1efe0:	movwmi	r0, #0
   1efe4:	cmp	r0, r8
   1efe8:	mov	r7, r8
   1efec:	movhi	r7, r0
   1eff0:	ldr	r1, [sp, #88]	; 0x58
   1eff4:	sub	r6, r1, ip
   1eff8:	cmp	r7, r6
   1effc:	bcs	20014 <putc_unlocked@plt+0xde5c>
   1f000:	str	r5, [sp, #84]	; 0x54
   1f004:	ldr	r5, [sp, #72]	; 0x48
   1f008:	cmp	r5, #0
   1f00c:	beq	1f5b0 <putc_unlocked@plt+0xd3f8>
   1f010:	cmp	r0, r8
   1f014:	bls	1f5b8 <putc_unlocked@plt+0xd400>
   1f018:	sub	r2, r0, r8
   1f01c:	cmp	sl, #48	; 0x30
   1f020:	cmpne	sl, #43	; 0x2b
   1f024:	bne	1fd0c <putc_unlocked@plt+0xdb54>
   1f028:	mov	r0, r5
   1f02c:	mov	r1, #48	; 0x30
   1f030:	b	1fd14 <putc_unlocked@plt+0xdb5c>
   1f034:	cmp	r5, #69	; 0x45
   1f038:	beq	1f4c8 <putc_unlocked@plt+0xd310>
   1f03c:	ldr	r1, [sp, #76]	; 0x4c
   1f040:	ldr	r0, [r1, #24]
   1f044:	ldr	r1, [r1, #28]
   1f048:	sub	r0, r1, r0
   1f04c:	add	r0, r0, #7
   1f050:	movw	r1, #9363	; 0x2493
   1f054:	movt	r1, #37449	; 0x9249
   1f058:	smmla	r0, r0, r1, r0
   1f05c:	asr	r1, r0, #2
   1f060:	add	r0, r1, r0, lsr #31
   1f064:	b	1f86c <putc_unlocked@plt+0xd6b4>
   1f068:	cmp	r5, #69	; 0x45
   1f06c:	beq	1f4c8 <putc_unlocked@plt+0xd310>
   1f070:	ldr	r1, [sp, #76]	; 0x4c
   1f074:	ldr	r0, [r1, #24]
   1f078:	ldr	r1, [r1, #28]
   1f07c:	add	r0, r0, #6
   1f080:	movw	r8, #9363	; 0x2493
   1f084:	movt	r8, #37449	; 0x9249
   1f088:	mov	r2, r3
   1f08c:	smmla	r3, r0, r8, r0
   1f090:	asr	r7, r3, #2
   1f094:	add	r3, r7, r3, lsr #31
   1f098:	ldr	r4, [sp, #92]	; 0x5c
   1f09c:	rsb	r3, r3, r3, lsl #3
   1f0a0:	sub	r0, r3, r0
   1f0a4:	mov	r3, r2
   1f0a8:	add	r0, r1, r0
   1f0ac:	add	r0, r0, #7
   1f0b0:	smmla	r0, r0, r8, r0
   1f0b4:	asr	r1, r0, #2
   1f0b8:	add	r0, r1, r0, lsr #31
   1f0bc:	mov	r1, #2
   1f0c0:	str	r1, [sp, #72]	; 0x48
   1f0c4:	b	1f878 <putc_unlocked@plt+0xd6c0>
   1f0c8:	cmp	r5, #79	; 0x4f
   1f0cc:	beq	1f4c8 <putc_unlocked@plt+0xd310>
   1f0d0:	mov	r8, #0
   1f0d4:	mov	r3, #88	; 0x58
   1f0d8:	b	1f9a0 <putc_unlocked@plt+0xd7e8>
   1f0dc:	cmp	r5, #69	; 0x45
   1f0e0:	beq	1fcf8 <putc_unlocked@plt+0xdb40>
   1f0e4:	cmp	r5, #79	; 0x4f
   1f0e8:	beq	1f4c8 <putc_unlocked@plt+0xd310>
   1f0ec:	ldr	r0, [sp, #76]	; 0x4c
   1f0f0:	ldr	r0, [r0, #20]
   1f0f4:	movw	r2, #63636	; 0xf894
   1f0f8:	movt	r2, #65535	; 0xffff
   1f0fc:	mov	r1, #0
   1f100:	cmp	r0, r2
   1f104:	movwlt	r1, #1
   1f108:	b	1f7e4 <putc_unlocked@plt+0xd62c>
   1f10c:	str	lr, [sp, #72]	; 0x48
   1f110:	subs	r8, sl, #45	; 0x2d
   1f114:	bicne	r8, r6, r6, asr #31
   1f118:	ldr	r0, [sp, #44]	; 0x2c
   1f11c:	mov	r6, ip
   1f120:	bl	11fc0 <strlen@plt>
   1f124:	mov	r4, r0
   1f128:	cmp	r8, r0
   1f12c:	mov	r5, r0
   1f130:	movhi	r5, r8
   1f134:	ldr	r0, [sp, #88]	; 0x58
   1f138:	sub	r0, r0, r6
   1f13c:	cmp	r5, r0
   1f140:	bcs	20014 <putc_unlocked@plt+0xde5c>
   1f144:	ldr	r0, [sp, #72]	; 0x48
   1f148:	cmp	r0, #0
   1f14c:	beq	1fc54 <putc_unlocked@plt+0xda9c>
   1f150:	cmp	r8, r4
   1f154:	bls	1fd04 <putc_unlocked@plt+0xdb4c>
   1f158:	sub	r8, r8, r4
   1f15c:	uxtb	r1, sl
   1f160:	cmp	r1, #48	; 0x30
   1f164:	cmpne	r1, #43	; 0x2b
   1f168:	bne	1fe64 <putc_unlocked@plt+0xdcac>
   1f16c:	mov	r1, #48	; 0x30
   1f170:	b	1fe68 <putc_unlocked@plt+0xdcb0>
   1f174:	cmp	r5, #0
   1f178:	bne	1f4c8 <putc_unlocked@plt+0xd310>
   1f17c:	ldr	r0, [sp, #92]	; 0x5c
   1f180:	orr	r0, r7, r0
   1f184:	str	r0, [sp, #92]	; 0x5c
   1f188:	mov	r8, #0
   1f18c:	mov	r3, #97	; 0x61
   1f190:	b	1f9a0 <putc_unlocked@plt+0xd7e8>
   1f194:	cmp	r5, #79	; 0x4f
   1f198:	beq	1f4c8 <putc_unlocked@plt+0xd310>
   1f19c:	mov	r8, #0
   1f1a0:	mov	r3, #99	; 0x63
   1f1a4:	b	1f9a0 <putc_unlocked@plt+0xd7e8>
   1f1a8:	cmp	r5, #69	; 0x45
   1f1ac:	beq	1f4c8 <putc_unlocked@plt+0xd310>
   1f1b0:	ldr	r0, [sp, #76]	; 0x4c
   1f1b4:	ldr	r0, [r0, #12]
   1f1b8:	b	1f86c <putc_unlocked@plt+0xd6b4>
   1f1bc:	cmp	r5, #69	; 0x45
   1f1c0:	ldr	r0, [sp, #28]
   1f1c4:	bne	1f200 <putc_unlocked@plt+0xd048>
   1f1c8:	b	1f4c8 <putc_unlocked@plt+0xd310>
   1f1cc:	cmp	r5, #69	; 0x45
   1f1d0:	beq	1f4c8 <putc_unlocked@plt+0xd310>
   1f1d4:	ldr	r0, [sp, #76]	; 0x4c
   1f1d8:	ldr	r0, [r0, #28]
   1f1dc:	mov	r1, #0
   1f1e0:	cmn	r0, #1
   1f1e4:	movwlt	r1, #1
   1f1e8:	add	r0, r0, #1
   1f1ec:	mov	r2, #3
   1f1f0:	b	1f244 <putc_unlocked@plt+0xd08c>
   1f1f4:	cmp	r5, #69	; 0x45
   1f1f8:	ldr	r0, [sp, #36]	; 0x24
   1f1fc:	beq	1f4c8 <putc_unlocked@plt+0xd310>
   1f200:	ldr	r0, [r0]
   1f204:	b	1f214 <putc_unlocked@plt+0xd05c>
   1f208:	cmp	r5, #69	; 0x45
   1f20c:	ldr	r0, [sp, #32]
   1f210:	beq	1f4c8 <putc_unlocked@plt+0xd310>
   1f214:	cmp	sl, #0
   1f218:	movweq	sl, #95	; 0x5f
   1f21c:	b	1f86c <putc_unlocked@plt+0xd6b4>
   1f220:	cmp	r5, #69	; 0x45
   1f224:	beq	1f4c8 <putc_unlocked@plt+0xd310>
   1f228:	ldr	r0, [sp, #76]	; 0x4c
   1f22c:	ldr	r0, [r0, #16]
   1f230:	mov	r1, #0
   1f234:	cmn	r0, #1
   1f238:	movwlt	r1, #1
   1f23c:	add	r0, r0, #1
   1f240:	mov	r2, #2
   1f244:	str	r2, [sp, #72]	; 0x48
   1f248:	ldr	r4, [sp, #92]	; 0x5c
   1f24c:	b	1f87c <putc_unlocked@plt+0xd6c4>
   1f250:	subs	r0, sl, #45	; 0x2d
   1f254:	bicne	r0, r6, r6, asr #31
   1f258:	cmp	r0, #1
   1f25c:	mov	r5, r0
   1f260:	movls	r5, #1
   1f264:	ldr	r1, [sp, #88]	; 0x58
   1f268:	sub	r1, r1, ip
   1f26c:	cmp	r5, r1
   1f270:	bcs	20014 <putc_unlocked@plt+0xde5c>
   1f274:	cmp	lr, #0
   1f278:	mov	r8, #-2147483648	; 0x80000000
   1f27c:	movw	r3, #52428	; 0xcccc
   1f280:	movt	r3, #3276	; 0xccc
   1f284:	beq	1fc4c <putc_unlocked@plt+0xda94>
   1f288:	cmp	r0, #2
   1f28c:	bcc	1ff04 <putc_unlocked@plt+0xdd4c>
   1f290:	uxtb	r1, sl
   1f294:	sub	r4, r0, #1
   1f298:	cmp	r1, #48	; 0x30
   1f29c:	cmpne	r1, #43	; 0x2b
   1f2a0:	bne	1fed4 <putc_unlocked@plt+0xdd1c>
   1f2a4:	mov	r0, lr
   1f2a8:	mov	r1, #48	; 0x30
   1f2ac:	b	1fedc <putc_unlocked@plt+0xdd24>
   1f2b0:	ldr	r0, [sp, #76]	; 0x4c
   1f2b4:	ldr	r0, [r0, #16]
   1f2b8:	mov	r1, #11
   1f2bc:	mul	r0, r0, r1
   1f2c0:	mov	r2, #1
   1f2c4:	mov	r1, #1
   1f2c8:	str	r1, [sp, #72]	; 0x48
   1f2cc:	add	r0, r2, r0, asr #5
   1f2d0:	mov	r1, #0
   1f2d4:	ldr	r4, [sp, #92]	; 0x5c
   1f2d8:	b	1f87c <putc_unlocked@plt+0xd6c4>
   1f2dc:	mov	r5, r1
   1f2e0:	str	lr, [sp, #72]	; 0x48
   1f2e4:	str	ip, [sp, #80]	; 0x50
   1f2e8:	mov	r0, #28
   1f2ec:	ldr	r2, [sp, #76]	; 0x4c
   1f2f0:	mov	r3, r2
   1f2f4:	vld1.32	{d16-d17}, [r3], r0
   1f2f8:	add	r2, r2, #16
   1f2fc:	vld1.32	{d18-d19}, [r2]
   1f300:	add	r1, sp, #96	; 0x60
   1f304:	add	r2, r1, #16
   1f308:	vld1.32	{d20-d21}, [r3]
   1f30c:	vst1.64	{d18-d19}, [r2]
   1f310:	mov	r4, r1
   1f314:	vst1.64	{d16-d17}, [r4], r0
   1f318:	vst1.32	{d20-d21}, [r4]
   1f31c:	mvn	r0, #0
   1f320:	str	r0, [r4]
   1f324:	ldr	r0, [fp, #20]
   1f328:	bl	22718 <_obstack_memory_used@@Base+0x2338>
   1f32c:	ldr	r1, [r4]
   1f330:	cmp	r1, #0
   1f334:	bmi	20030 <putc_unlocked@plt+0xde78>
   1f338:	lsr	r1, r0, #31
   1f33c:	ldr	r2, [sp, #24]
   1f340:	mov	r3, r0
   1f344:	mov	r4, r5
   1f348:	smmul	r7, r3, r4
   1f34c:	asr	r5, r7, #2
   1f350:	add	r7, r5, r7, lsr #31
   1f354:	add	r5, r7, r7, lsl #2
   1f358:	sub	r5, r3, r5, lsl #1
   1f35c:	cmp	r0, #0
   1f360:	rsbmi	r5, r5, #0
   1f364:	add	r5, r5, #48	; 0x30
   1f368:	strb	r5, [r2], #-1
   1f36c:	add	r3, r3, #9
   1f370:	cmp	r3, #18
   1f374:	mov	r3, r7
   1f378:	bhi	1f348 <putc_unlocked@plt+0xd190>
   1f37c:	add	r8, r2, #1
   1f380:	cmp	r6, #0
   1f384:	movwmi	r6, #1
   1f388:	cmp	sl, #0
   1f38c:	movweq	sl, #48	; 0x30
   1f390:	mov	r3, #0
   1f394:	mov	r2, r6
   1f398:	str	r9, [sp, #84]	; 0x54
   1f39c:	ldr	ip, [sp, #80]	; 0x50
   1f3a0:	ldr	lr, [sp, #72]	; 0x48
   1f3a4:	b	1f91c <putc_unlocked@plt+0xd764>
   1f3a8:	subs	r0, sl, #45	; 0x2d
   1f3ac:	bicne	r0, r6, r6, asr #31
   1f3b0:	cmp	r0, #1
   1f3b4:	mov	r5, r0
   1f3b8:	movls	r5, #1
   1f3bc:	ldr	r1, [sp, #88]	; 0x58
   1f3c0:	sub	r1, r1, ip
   1f3c4:	cmp	r5, r1
   1f3c8:	bcs	20014 <putc_unlocked@plt+0xde5c>
   1f3cc:	cmp	lr, #0
   1f3d0:	mov	r8, #-2147483648	; 0x80000000
   1f3d4:	movw	r3, #52428	; 0xcccc
   1f3d8:	movt	r3, #3276	; 0xccc
   1f3dc:	beq	1fc4c <putc_unlocked@plt+0xda94>
   1f3e0:	cmp	r0, #2
   1f3e4:	bcc	1ff3c <putc_unlocked@plt+0xdd84>
   1f3e8:	uxtb	r1, sl
   1f3ec:	sub	r4, r0, #1
   1f3f0:	cmp	r1, #48	; 0x30
   1f3f4:	cmpne	r1, #43	; 0x2b
   1f3f8:	bne	1ff0c <putc_unlocked@plt+0xdd54>
   1f3fc:	mov	r0, lr
   1f400:	mov	r1, #48	; 0x30
   1f404:	b	1ff14 <putc_unlocked@plt+0xdd5c>
   1f408:	ldr	r0, [sp, #76]	; 0x4c
   1f40c:	ldr	r0, [r0, #24]
   1f410:	add	r0, r0, #6
   1f414:	movw	r1, #9363	; 0x2493
   1f418:	movt	r1, #37449	; 0x9249
   1f41c:	smmla	r1, r0, r1, r0
   1f420:	asr	r2, r1, #2
   1f424:	add	r1, r2, r1, lsr #31
   1f428:	rsb	r1, r1, r1, lsl #3
   1f42c:	sub	r0, r0, r1
   1f430:	add	r0, r0, #1
   1f434:	mov	r1, #1
   1f438:	b	1f870 <putc_unlocked@plt+0xd6b8>
   1f43c:	cmp	r5, #69	; 0x45
   1f440:	beq	1f4c8 <putc_unlocked@plt+0xd310>
   1f444:	ldr	r0, [sp, #76]	; 0x4c
   1f448:	ldr	r0, [r0, #24]
   1f44c:	mov	r1, #1
   1f450:	b	1f870 <putc_unlocked@plt+0xd6b8>
   1f454:	cmp	r5, #79	; 0x4f
   1f458:	beq	1f4c8 <putc_unlocked@plt+0xd310>
   1f45c:	mov	r8, #0
   1f460:	mov	r3, #120	; 0x78
   1f464:	b	1f9a0 <putc_unlocked@plt+0xd7e8>
   1f468:	cmp	r5, #69	; 0x45
   1f46c:	bne	1f77c <putc_unlocked@plt+0xd5c4>
   1f470:	mov	r8, #0
   1f474:	mov	r3, #121	; 0x79
   1f478:	b	1f9a0 <putc_unlocked@plt+0xd7e8>
   1f47c:	cmp	r0, #122	; 0x7a
   1f480:	bne	1f4c8 <putc_unlocked@plt+0xd310>
   1f484:	add	r9, r9, r8
   1f488:	ldr	r1, [sp, #76]	; 0x4c
   1f48c:	ldr	r0, [r1, #32]
   1f490:	cmp	r0, #0
   1f494:	bmi	1f5a8 <putc_unlocked@plt+0xd3f0>
   1f498:	ldr	r2, [r1, #36]	; 0x24
   1f49c:	cmp	r2, #0
   1f4a0:	bmi	1fc6c <putc_unlocked@plt+0xdab4>
   1f4a4:	mov	r1, #0
   1f4a8:	bne	1fc70 <putc_unlocked@plt+0xdab8>
   1f4ac:	ldr	r0, [sp, #44]	; 0x2c
   1f4b0:	ldrb	r0, [r0]
   1f4b4:	sub	r0, r0, #45	; 0x2d
   1f4b8:	clz	r0, r0
   1f4bc:	lsr	r1, r0, #5
   1f4c0:	cmp	r8, #3
   1f4c4:	bls	1fc78 <putc_unlocked@plt+0xdac0>
   1f4c8:	ldr	r2, [sp, #84]	; 0x54
   1f4cc:	subs	r0, sl, #45	; 0x2d
   1f4d0:	bicne	r0, r6, r6, asr #31
   1f4d4:	sub	r1, r9, r2
   1f4d8:	add	r4, r1, #1
   1f4dc:	cmp	r0, r4
   1f4e0:	mov	r5, r4
   1f4e4:	movhi	r5, r0
   1f4e8:	ldr	r1, [sp, #88]	; 0x58
   1f4ec:	sub	r1, r1, ip
   1f4f0:	cmp	r5, r1
   1f4f4:	bcs	20014 <putc_unlocked@plt+0xde5c>
   1f4f8:	cmp	lr, #0
   1f4fc:	beq	1f52c <putc_unlocked@plt+0xd374>
   1f500:	cmp	r0, r4
   1f504:	bls	1f558 <putc_unlocked@plt+0xd3a0>
   1f508:	str	ip, [sp, #80]	; 0x50
   1f50c:	sub	r8, r0, r4
   1f510:	uxtb	r0, sl
   1f514:	cmp	r0, #48	; 0x30
   1f518:	cmpne	r0, #43	; 0x2b
   1f51c:	bne	1f534 <putc_unlocked@plt+0xd37c>
   1f520:	mov	r0, lr
   1f524:	mov	r1, #48	; 0x30
   1f528:	b	1f53c <putc_unlocked@plt+0xd384>
   1f52c:	mov	lr, #0
   1f530:	b	1f5a4 <putc_unlocked@plt+0xd3ec>
   1f534:	mov	r0, lr
   1f538:	mov	r1, #32
   1f53c:	mov	r2, r8
   1f540:	mov	r6, lr
   1f544:	bl	12008 <memset@plt>
   1f548:	add	r6, r6, r8
   1f54c:	ldr	ip, [sp, #80]	; 0x50
   1f550:	mov	lr, r6
   1f554:	ldr	r2, [sp, #84]	; 0x54
   1f558:	ldr	r0, [sp, #92]	; 0x5c
   1f55c:	tst	r0, #1
   1f560:	beq	1f580 <putc_unlocked@plt+0xd3c8>
   1f564:	mov	r0, lr
   1f568:	mov	r1, r2
   1f56c:	mov	r2, r4
   1f570:	mov	r6, ip
   1f574:	mov	r7, lr
   1f578:	bl	20074 <putc_unlocked@plt+0xdebc>
   1f57c:	b	1f598 <putc_unlocked@plt+0xd3e0>
   1f580:	mov	r0, lr
   1f584:	mov	r1, r2
   1f588:	mov	r2, r4
   1f58c:	mov	r6, ip
   1f590:	mov	r7, lr
   1f594:	bl	11d74 <memcpy@plt>
   1f598:	mov	lr, r7
   1f59c:	mov	ip, r6
   1f5a0:	add	lr, r7, r4
   1f5a4:	add	ip, r5, ip
   1f5a8:	mov	r7, r9
   1f5ac:	b	1fb68 <putc_unlocked@plt+0xd9b0>
   1f5b0:	mov	lr, #0
   1f5b4:	b	1fd68 <putc_unlocked@plt+0xdbb0>
   1f5b8:	ldr	r3, [sp, #76]	; 0x4c
   1f5bc:	ldr	r0, [sp, #92]	; 0x5c
   1f5c0:	b	1fd30 <putc_unlocked@plt+0xdb78>
   1f5c4:	sub	r0, r8, #1
   1f5c8:	movw	r1, #365	; 0x16d
   1f5cc:	tst	r0, #3
   1f5d0:	bne	1f614 <putc_unlocked@plt+0xd45c>
   1f5d4:	movw	r1, #34079	; 0x851f
   1f5d8:	movt	r1, #20971	; 0x51eb
   1f5dc:	smmul	r1, r0, r1
   1f5e0:	asr	r2, r1, #5
   1f5e4:	add	r2, r2, r1, lsr #31
   1f5e8:	mov	r3, #100	; 0x64
   1f5ec:	mls	r2, r2, r3, r0
   1f5f0:	asr	r3, r1, #7
   1f5f4:	add	r1, r3, r1, lsr #31
   1f5f8:	mov	r3, #400	; 0x190
   1f5fc:	mls	r0, r1, r3, r0
   1f600:	movw	r1, #365	; 0x16d
   1f604:	cmp	r0, #0
   1f608:	movweq	r1, #366	; 0x16e
   1f60c:	cmp	r2, #0
   1f610:	movwne	r1, #366	; 0x16e
   1f614:	add	r0, r1, r7
   1f618:	ldr	r1, [sp, #84]	; 0x54
   1f61c:	bl	200b0 <putc_unlocked@plt+0xdef8>
   1f620:	mov	r4, r0
   1f624:	mvn	r0, #0
   1f628:	ldr	ip, [sp, #80]	; 0x50
   1f62c:	ldr	lr, [sp, #72]	; 0x48
   1f630:	ldr	r3, [sp, #40]	; 0x28
   1f634:	cmp	r3, #71	; 0x47
   1f638:	beq	1f7c4 <putc_unlocked@plt+0xd60c>
   1f63c:	cmp	r3, #103	; 0x67
   1f640:	bne	1f854 <putc_unlocked@plt+0xd69c>
   1f644:	movw	r1, #34079	; 0x851f
   1f648:	movt	r1, #20971	; 0x51eb
   1f64c:	ldr	r4, [sp, #20]
   1f650:	smmul	r2, r4, r1
   1f654:	asr	r3, r2, #5
   1f658:	add	r2, r3, r2, lsr #31
   1f65c:	mov	r3, #100	; 0x64
   1f660:	mls	r2, r2, r3, r4
   1f664:	add	r2, r0, r2
   1f668:	smmul	r1, r2, r1
   1f66c:	asr	r7, r1, #5
   1f670:	add	r1, r7, r1, lsr #31
   1f674:	mls	r2, r1, r3, r2
   1f678:	mov	r1, #2
   1f67c:	str	r1, [sp, #72]	; 0x48
   1f680:	mov	r1, #0
   1f684:	cmn	r2, #1
   1f688:	ble	1fd94 <putc_unlocked@plt+0xdbdc>
   1f68c:	mov	r0, r2
   1f690:	ldr	r3, [sp, #40]	; 0x28
   1f694:	b	1f7f4 <putc_unlocked@plt+0xd63c>
   1f698:	ldr	r0, [sp, #76]	; 0x4c
   1f69c:	ldr	r2, [r0, #20]
   1f6a0:	mov	r4, r3
   1f6a4:	movw	r3, #63636	; 0xf894
   1f6a8:	movt	r3, #65535	; 0xffff
   1f6ac:	mov	r1, #0
   1f6b0:	cmp	r2, r3
   1f6b4:	mov	r0, #0
   1f6b8:	movwge	r0, #1
   1f6bc:	and	r0, r0, r2, lsr #31
   1f6c0:	mvn	r7, #98	; 0x62
   1f6c4:	smlabb	r0, r0, r7, r2
   1f6c8:	movw	r7, #34079	; 0x851f
   1f6cc:	movt	r7, #20971	; 0x51eb
   1f6d0:	smmul	r0, r0, r7
   1f6d4:	asr	r7, r0, #5
   1f6d8:	add	r0, r7, r0, lsr #31
   1f6dc:	add	r0, r0, #19
   1f6e0:	cmp	r2, r3
   1f6e4:	mov	r3, r4
   1f6e8:	movwlt	r1, #1
   1f6ec:	mov	r2, #2
   1f6f0:	b	1f7f0 <putc_unlocked@plt+0xd638>
   1f6f4:	cmp	r4, #1
   1f6f8:	blt	1f72c <putc_unlocked@plt+0xd574>
   1f6fc:	smmul	r2, r1, r5
   1f700:	asr	r3, r2, #2
   1f704:	add	r2, r3, r2, lsr #31
   1f708:	add	r3, r2, r2, lsl #2
   1f70c:	sub	r1, r1, r3, lsl #1
   1f710:	add	r1, r1, #48	; 0x30
   1f714:	strb	r1, [r7, r0]
   1f718:	sub	r1, r0, #1
   1f71c:	cmp	r0, #0
   1f720:	mov	r0, r1
   1f724:	mov	r1, r2
   1f728:	bgt	1f6fc <putc_unlocked@plt+0xd544>
   1f72c:	ldr	r0, [sp, #88]	; 0x58
   1f730:	sub	r5, r0, ip
   1f734:	cmp	sl, #0
   1f738:	movweq	sl, #48	; 0x30
   1f73c:	cmp	r4, r5
   1f740:	bcs	20014 <putc_unlocked@plt+0xde5c>
   1f744:	mov	r8, #0
   1f748:	cmp	lr, #0
   1f74c:	mov	r7, #0
   1f750:	beq	1fe18 <putc_unlocked@plt+0xdc60>
   1f754:	str	ip, [sp, #80]	; 0x50
   1f758:	ldr	r0, [sp, #92]	; 0x5c
   1f75c:	sub	r1, fp, #48	; 0x30
   1f760:	tst	r0, #1
   1f764:	beq	1fe00 <putc_unlocked@plt+0xdc48>
   1f768:	mov	r0, lr
   1f76c:	mov	r2, r4
   1f770:	mov	r7, lr
   1f774:	bl	20074 <putc_unlocked@plt+0xdebc>
   1f778:	b	1fe10 <putc_unlocked@plt+0xdc58>
   1f77c:	mov	r4, r3
   1f780:	ldr	r0, [sp, #76]	; 0x4c
   1f784:	ldr	r2, [r0, #20]
   1f788:	movw	r0, #34079	; 0x851f
   1f78c:	movt	r0, #20971	; 0x51eb
   1f790:	smmul	r0, r2, r0
   1f794:	asr	r1, r0, #5
   1f798:	add	r0, r1, r0, lsr #31
   1f79c:	mov	r1, #100	; 0x64
   1f7a0:	mls	r3, r0, r1, r2
   1f7a4:	mov	r0, #2
   1f7a8:	str	r0, [sp, #72]	; 0x48
   1f7ac:	mov	r1, #0
   1f7b0:	cmn	r3, #1
   1f7b4:	ble	1fdb4 <putc_unlocked@plt+0xdbfc>
   1f7b8:	mov	r0, r3
   1f7bc:	mov	r3, r4
   1f7c0:	b	1f7f4 <putc_unlocked@plt+0xd63c>
   1f7c4:	movw	r1, #63636	; 0xf894
   1f7c8:	movt	r1, #65535	; 0xffff
   1f7cc:	sub	r2, r1, r0
   1f7d0:	mov	r1, #0
   1f7d4:	ldr	r4, [sp, #20]
   1f7d8:	cmp	r4, r2
   1f7dc:	movwlt	r1, #1
   1f7e0:	add	r0, r4, r0
   1f7e4:	movw	r2, #1900	; 0x76c
   1f7e8:	add	r0, r0, r2
   1f7ec:	mov	r2, #4
   1f7f0:	str	r2, [sp, #72]	; 0x48
   1f7f4:	cmp	sl, #0
   1f7f8:	ldr	r2, [fp, #12]
   1f7fc:	moveq	sl, r2
   1f800:	mov	r2, #0
   1f804:	cmp	sl, #43	; 0x2b
   1f808:	mov	r4, #0
   1f80c:	str	r4, [sp, #84]	; 0x54
   1f810:	bne	1f84c <putc_unlocked@plt+0xd694>
   1f814:	str	r3, [sp, #40]	; 0x28
   1f818:	mov	r3, #0
   1f81c:	ldr	r8, [sp, #72]	; 0x48
   1f820:	cmp	r8, r6
   1f824:	mov	r7, #0
   1f828:	movwlt	r7, #1
   1f82c:	movw	r4, #9999	; 0x270f
   1f830:	cmp	r8, #2
   1f834:	movweq	r4, #99	; 0x63
   1f838:	cmp	r4, r0
   1f83c:	movwcc	r3, #1
   1f840:	orr	r3, r7, r3
   1f844:	str	r3, [sp, #84]	; 0x54
   1f848:	ldr	r3, [sp, #40]	; 0x28
   1f84c:	ldr	r4, [sp, #92]	; 0x5c
   1f850:	b	1f890 <putc_unlocked@plt+0xd6d8>
   1f854:	movw	r0, #9363	; 0x2493
   1f858:	movt	r0, #37449	; 0x9249
   1f85c:	smmla	r0, r4, r0, r4
   1f860:	asr	r1, r0, #2
   1f864:	add	r0, r1, r0, lsr #31
   1f868:	add	r0, r0, #1
   1f86c:	mov	r1, #2
   1f870:	str	r1, [sp, #72]	; 0x48
   1f874:	ldr	r4, [sp, #92]	; 0x5c
   1f878:	lsr	r1, r0, #31
   1f87c:	cmp	r1, #0
   1f880:	movwne	r1, #1
   1f884:	mov	r2, #0
   1f888:	mov	r7, #0
   1f88c:	str	r7, [sp, #84]	; 0x54
   1f890:	cmp	r5, #79	; 0x4f
   1f894:	moveq	r8, #0
   1f898:	cmpeq	r1, #0
   1f89c:	beq	1f99c <putc_unlocked@plt+0xd7e4>
   1f8a0:	str	r4, [sp, #92]	; 0x5c
   1f8a4:	cmp	r1, #0
   1f8a8:	rsbne	r0, r0, #0
   1f8ac:	ldr	r8, [sp, #64]	; 0x40
   1f8b0:	tst	r2, #1
   1f8b4:	movne	r3, #58	; 0x3a
   1f8b8:	strbne	r3, [r8, #-1]!
   1f8bc:	movw	r3, #52429	; 0xcccd
   1f8c0:	movt	r3, #52428	; 0xcccc
   1f8c4:	umull	r3, r7, r0, r3
   1f8c8:	lsr	r3, r7, #3
   1f8cc:	add	r7, r3, r3, lsl #2
   1f8d0:	sub	r7, r0, r7, lsl #1
   1f8d4:	orr	r7, r7, #48	; 0x30
   1f8d8:	strb	r7, [r8, #-1]!
   1f8dc:	asr	r2, r2, #1
   1f8e0:	cmp	r0, #9
   1f8e4:	mov	r0, r3
   1f8e8:	bhi	1f8b0 <putc_unlocked@plt+0xd6f8>
   1f8ec:	cmp	r2, #0
   1f8f0:	mov	r0, r3
   1f8f4:	bne	1f8b0 <putc_unlocked@plt+0xd6f8>
   1f8f8:	cmp	r6, #0
   1f8fc:	ldr	r2, [sp, #72]	; 0x48
   1f900:	movpl	r2, r6
   1f904:	ldr	r3, [sp, #84]	; 0x54
   1f908:	cmp	r3, #0
   1f90c:	movwne	r3, #43	; 0x2b
   1f910:	cmp	sl, #0
   1f914:	movweq	sl, #48	; 0x30
   1f918:	str	r9, [sp, #84]	; 0x54
   1f91c:	cmp	r1, #0
   1f920:	movwne	r3, #45	; 0x2d
   1f924:	cmp	r3, #0
   1f928:	mov	r0, r2
   1f92c:	subne	r0, r0, #1
   1f930:	ldr	r1, [sp, #64]	; 0x40
   1f934:	sub	r4, r1, r8
   1f938:	sub	r0, r0, r4
   1f93c:	cmp	r0, #1
   1f940:	movwlt	r0, #0
   1f944:	subs	r6, sl, #45	; 0x2d
   1f948:	movne	r6, r0
   1f94c:	cmp	r3, #0
   1f950:	beq	1fa64 <putc_unlocked@plt+0xd8ac>
   1f954:	cmp	sl, #95	; 0x5f
   1f958:	bne	1fa6c <putc_unlocked@plt+0xd8b4>
   1f95c:	cmp	lr, #0
   1f960:	beq	1fa74 <putc_unlocked@plt+0xd8bc>
   1f964:	mov	r0, lr
   1f968:	mov	r1, #32
   1f96c:	str	r2, [sp, #72]	; 0x48
   1f970:	mov	r2, r6
   1f974:	mov	r5, ip
   1f978:	mov	r7, lr
   1f97c:	mov	r9, r3
   1f980:	bl	12008 <memset@plt>
   1f984:	mov	r3, r9
   1f988:	ldr	r2, [sp, #72]	; 0x48
   1f98c:	mov	lr, r7
   1f990:	mov	ip, r5
   1f994:	add	lr, r7, r6
   1f998:	b	1fa78 <putc_unlocked@plt+0xd8c0>
   1f99c:	str	r4, [sp, #92]	; 0x5c
   1f9a0:	str	ip, [sp, #80]	; 0x50
   1f9a4:	mov	r7, lr
   1f9a8:	movw	r0, #9504	; 0x2520
   1f9ac:	strh	r0, [fp, #-53]	; 0xffffffcb
   1f9b0:	cmp	r5, #0
   1f9b4:	ldr	r0, [sp, #68]	; 0x44
   1f9b8:	strbne	r5, [fp, #-51]	; 0xffffffcd
   1f9bc:	ldrne	r0, [sp, #52]	; 0x34
   1f9c0:	mov	r1, #0
   1f9c4:	strb	r1, [r0, #1]
   1f9c8:	strb	r3, [r0]
   1f9cc:	add	r0, sp, #96	; 0x60
   1f9d0:	sub	r2, fp, #53	; 0x35
   1f9d4:	mov	r1, #1024	; 0x400
   1f9d8:	ldr	r3, [sp, #76]	; 0x4c
   1f9dc:	bl	11f30 <strftime@plt>
   1f9e0:	cmp	r0, #0
   1f9e4:	beq	1fa48 <putc_unlocked@plt+0xd890>
   1f9e8:	subs	r1, sl, #45	; 0x2d
   1f9ec:	movne	r1, r6
   1f9f0:	cmp	r6, #0
   1f9f4:	movwmi	r1, #0
   1f9f8:	sub	r4, r0, #1
   1f9fc:	cmp	r1, r4
   1fa00:	mov	r5, r4
   1fa04:	movhi	r5, r1
   1fa08:	ldr	ip, [sp, #80]	; 0x50
   1fa0c:	ldr	r0, [sp, #88]	; 0x58
   1fa10:	sub	r0, r0, ip
   1fa14:	cmp	r5, r0
   1fa18:	bcs	20014 <putc_unlocked@plt+0xde5c>
   1fa1c:	cmp	r7, #0
   1fa20:	beq	1fc58 <putc_unlocked@plt+0xdaa0>
   1fa24:	cmp	r1, r4
   1fa28:	bls	1fb8c <putc_unlocked@plt+0xd9d4>
   1fa2c:	sub	r6, r1, r4
   1fa30:	cmp	sl, #48	; 0x30
   1fa34:	cmpne	sl, #43	; 0x2b
   1fa38:	bne	1fb78 <putc_unlocked@plt+0xd9c0>
   1fa3c:	mov	r0, r7
   1fa40:	mov	r1, #48	; 0x30
   1fa44:	b	1fb80 <putc_unlocked@plt+0xd9c8>
   1fa48:	ldr	ip, [sp, #80]	; 0x50
   1fa4c:	mov	r8, #-2147483648	; 0x80000000
   1fa50:	movw	r3, #52428	; 0xcccc
   1fa54:	movt	r3, #3276	; 0xccc
   1fa58:	mov	lr, r7
   1fa5c:	mov	r7, r9
   1fa60:	b	1e92c <putc_unlocked@plt+0xc774>
   1fa64:	ldr	r7, [sp, #92]	; 0x5c
   1fa68:	b	1faa8 <putc_unlocked@plt+0xd8f0>
   1fa6c:	ldr	r7, [sp, #92]	; 0x5c
   1fa70:	b	1fa84 <putc_unlocked@plt+0xd8cc>
   1fa74:	mov	lr, #0
   1fa78:	ldr	r7, [sp, #92]	; 0x5c
   1fa7c:	sub	r2, r2, r6
   1fa80:	add	ip, r6, ip
   1fa84:	ldr	r0, [sp, #88]	; 0x58
   1fa88:	sub	r0, r0, ip
   1fa8c:	cmp	r0, #2
   1fa90:	bcc	20014 <putc_unlocked@plt+0xde5c>
   1fa94:	cmp	lr, #0
   1fa98:	strbne	r3, [lr], #1
   1fa9c:	moveq	lr, #0
   1faa0:	sub	r2, r2, #1
   1faa4:	add	ip, ip, #1
   1faa8:	subs	r0, sl, #45	; 0x2d
   1faac:	bicne	r0, r2, r2, asr #31
   1fab0:	cmp	r0, r4
   1fab4:	mov	r5, r4
   1fab8:	movhi	r5, r0
   1fabc:	ldr	r1, [sp, #88]	; 0x58
   1fac0:	sub	r1, r1, ip
   1fac4:	cmp	r5, r1
   1fac8:	bcs	20014 <putc_unlocked@plt+0xde5c>
   1facc:	cmp	lr, #0
   1fad0:	beq	1fafc <putc_unlocked@plt+0xd944>
   1fad4:	cmp	r0, r4
   1fad8:	bls	1fb28 <putc_unlocked@plt+0xd970>
   1fadc:	str	ip, [sp, #80]	; 0x50
   1fae0:	sub	r9, r0, r4
   1fae4:	cmp	sl, #48	; 0x30
   1fae8:	cmpne	sl, #43	; 0x2b
   1faec:	bne	1fb08 <putc_unlocked@plt+0xd950>
   1faf0:	mov	r0, lr
   1faf4:	mov	r1, #48	; 0x30
   1faf8:	b	1fb10 <putc_unlocked@plt+0xd958>
   1fafc:	mov	lr, #0
   1fb00:	ldr	r7, [sp, #84]	; 0x54
   1fb04:	b	1fb64 <putc_unlocked@plt+0xd9ac>
   1fb08:	mov	r0, lr
   1fb0c:	mov	r1, #32
   1fb10:	mov	r2, r9
   1fb14:	mov	r6, lr
   1fb18:	bl	12008 <memset@plt>
   1fb1c:	add	r6, r6, r9
   1fb20:	ldr	ip, [sp, #80]	; 0x50
   1fb24:	mov	lr, r6
   1fb28:	mov	r0, lr
   1fb2c:	mov	r1, r8
   1fb30:	mov	r2, r4
   1fb34:	mov	r6, ip
   1fb38:	tst	r7, #1
   1fb3c:	beq	1fb4c <putc_unlocked@plt+0xd994>
   1fb40:	mov	r7, lr
   1fb44:	bl	20074 <putc_unlocked@plt+0xdebc>
   1fb48:	b	1fb54 <putc_unlocked@plt+0xd99c>
   1fb4c:	mov	r7, lr
   1fb50:	bl	11d74 <memcpy@plt>
   1fb54:	mov	lr, r7
   1fb58:	mov	ip, r6
   1fb5c:	ldr	r7, [sp, #84]	; 0x54
   1fb60:	add	lr, lr, r4
   1fb64:	add	ip, r5, ip
   1fb68:	mov	r8, #-2147483648	; 0x80000000
   1fb6c:	movw	r3, #52428	; 0xcccc
   1fb70:	movt	r3, #3276	; 0xccc
   1fb74:	b	1e92c <putc_unlocked@plt+0xc774>
   1fb78:	mov	r0, r7
   1fb7c:	mov	r1, #32
   1fb80:	mov	r2, r6
   1fb84:	bl	12008 <memset@plt>
   1fb88:	add	r7, r7, r6
   1fb8c:	ldr	r1, [sp, #92]	; 0x5c
   1fb90:	mov	r0, r7
   1fb94:	tst	r8, #1
   1fb98:	beq	1fbac <putc_unlocked@plt+0xd9f4>
   1fb9c:	ldr	r1, [sp, #48]	; 0x30
   1fba0:	mov	r2, r4
   1fba4:	bl	20038 <putc_unlocked@plt+0xde80>
   1fba8:	b	1fbd0 <putc_unlocked@plt+0xda18>
   1fbac:	tst	r1, #1
   1fbb0:	beq	1fbc4 <putc_unlocked@plt+0xda0c>
   1fbb4:	ldr	r1, [sp, #48]	; 0x30
   1fbb8:	mov	r2, r4
   1fbbc:	bl	20074 <putc_unlocked@plt+0xdebc>
   1fbc0:	b	1fbd0 <putc_unlocked@plt+0xda18>
   1fbc4:	ldr	r1, [sp, #48]	; 0x30
   1fbc8:	mov	r2, r4
   1fbcc:	bl	11d74 <memcpy@plt>
   1fbd0:	add	r7, r7, r4
   1fbd4:	ldr	ip, [sp, #80]	; 0x50
   1fbd8:	mov	r8, #-2147483648	; 0x80000000
   1fbdc:	movw	r3, #52428	; 0xcccc
   1fbe0:	movt	r3, #3276	; 0xccc
   1fbe4:	mov	lr, r7
   1fbe8:	b	1ffd4 <putc_unlocked@plt+0xde1c>
   1fbec:	subs	r0, sl, #45	; 0x2d
   1fbf0:	bicne	r0, r6, r6, asr #31
   1fbf4:	cmp	r0, #1
   1fbf8:	mov	r5, r0
   1fbfc:	movls	r5, #1
   1fc00:	ldr	r1, [sp, #88]	; 0x58
   1fc04:	sub	r1, r1, ip
   1fc08:	cmp	r5, r1
   1fc0c:	bcs	20014 <putc_unlocked@plt+0xde5c>
   1fc10:	cmp	lr, #0
   1fc14:	mov	r8, #-2147483648	; 0x80000000
   1fc18:	movw	r3, #52428	; 0xcccc
   1fc1c:	movt	r3, #3276	; 0xccc
   1fc20:	beq	1fc4c <putc_unlocked@plt+0xda94>
   1fc24:	cmp	r0, #2
   1fc28:	bcc	1ffcc <putc_unlocked@plt+0xde14>
   1fc2c:	uxtb	r1, sl
   1fc30:	sub	r4, r0, #1
   1fc34:	cmp	r1, #48	; 0x30
   1fc38:	cmpne	r1, #43	; 0x2b
   1fc3c:	bne	1ff9c <putc_unlocked@plt+0xdde4>
   1fc40:	mov	r0, lr
   1fc44:	mov	r1, #48	; 0x30
   1fc48:	b	1ffa4 <putc_unlocked@plt+0xddec>
   1fc4c:	mov	lr, #0
   1fc50:	b	1ffd4 <putc_unlocked@plt+0xde1c>
   1fc54:	mov	ip, r6
   1fc58:	mov	lr, #0
   1fc5c:	mov	r8, #-2147483648	; 0x80000000
   1fc60:	movw	r3, #52428	; 0xcccc
   1fc64:	movt	r3, #3276	; 0xccc
   1fc68:	b	1ffd4 <putc_unlocked@plt+0xde1c>
   1fc6c:	mov	r1, #1
   1fc70:	cmp	r8, #3
   1fc74:	bhi	1f4c8 <putc_unlocked@plt+0xd310>
   1fc78:	str	r3, [sp, #40]	; 0x28
   1fc7c:	movw	r0, #34953	; 0x8889
   1fc80:	movt	r0, #34952	; 0x8888
   1fc84:	smmla	r3, r2, r0, r2
   1fc88:	asr	r7, r3, #5
   1fc8c:	add	r7, r7, r3, lsr #31
   1fc90:	smmla	r0, r7, r0, r7
   1fc94:	asr	r3, r0, #5
   1fc98:	add	r0, r3, r0, lsr #31
   1fc9c:	rsb	r0, r0, r0, lsl #4
   1fca0:	sub	r3, r7, r0, lsl #2
   1fca4:	movw	r0, #46021	; 0xb3c5
   1fca8:	movt	r0, #37282	; 0x91a2
   1fcac:	smmla	r0, r2, r0, r2
   1fcb0:	asr	r4, r0, #11
   1fcb4:	add	r0, r4, r0, lsr #31
   1fcb8:	rsb	r7, r7, r7, lsl #4
   1fcbc:	sub	r2, r2, r7, lsl #2
   1fcc0:	add	r7, pc, #0
   1fcc4:	ldr	pc, [r7, r8, lsl #2]
   1fcc8:	ldrdeq	pc, [r1], -r8
   1fccc:	andeq	pc, r1, r4, ror pc	; <UNPREDICTABLE>
   1fcd0:	ldrdeq	pc, [r1], -r8
   1fcd4:	ldrdeq	pc, [r1], -r0
   1fcd8:	mov	r2, #100	; 0x64
   1fcdc:	mla	r0, r0, r2, r3
   1fce0:	mov	r2, #5
   1fce4:	str	r2, [sp, #72]	; 0x48
   1fce8:	mov	r2, #1
   1fcec:	str	r2, [sp, #84]	; 0x54
   1fcf0:	mov	r2, #0
   1fcf4:	b	1ff90 <putc_unlocked@plt+0xddd8>
   1fcf8:	mov	r8, #0
   1fcfc:	mov	r3, #89	; 0x59
   1fd00:	b	1f9a0 <putc_unlocked@plt+0xd7e8>
   1fd04:	ldr	r1, [sp, #44]	; 0x2c
   1fd08:	b	1fe7c <putc_unlocked@plt+0xdcc4>
   1fd0c:	mov	r0, r5
   1fd10:	mov	r1, #32
   1fd14:	mov	r5, r2
   1fd18:	bl	12008 <memset@plt>
   1fd1c:	mov	r1, r5
   1fd20:	ldr	r5, [sp, #72]	; 0x48
   1fd24:	ldr	r3, [sp, #76]	; 0x4c
   1fd28:	ldr	r0, [sp, #92]	; 0x5c
   1fd2c:	add	r5, r5, r1
   1fd30:	ldr	r1, [sp, #84]	; 0x54
   1fd34:	stm	sp, {r1, sl}
   1fd38:	str	r0, [sp, #8]
   1fd3c:	ldr	r0, [fp, #20]
   1fd40:	str	r0, [sp, #12]
   1fd44:	ldr	r0, [fp, #24]
   1fd48:	str	r0, [sp, #16]
   1fd4c:	mov	r0, r5
   1fd50:	mov	r1, r6
   1fd54:	mov	r2, r4
   1fd58:	bl	1e850 <putc_unlocked@plt+0xc698>
   1fd5c:	mov	lr, r5
   1fd60:	add	lr, r5, r8
   1fd64:	ldr	ip, [sp, #80]	; 0x50
   1fd68:	mov	r8, #-2147483648	; 0x80000000
   1fd6c:	movw	r3, #52428	; 0xcccc
   1fd70:	movt	r3, #3276	; 0xccc
   1fd74:	add	ip, r7, ip
   1fd78:	mov	r7, r9
   1fd7c:	b	1e92c <putc_unlocked@plt+0xc774>
   1fd80:	cmp	r6, #6
   1fd84:	mov	r0, r6
   1fd88:	movle	r0, #6
   1fd8c:	sub	r2, r0, #6
   1fd90:	b	1ef8c <putc_unlocked@plt+0xcdd4>
   1fd94:	movw	r3, #63636	; 0xf894
   1fd98:	movt	r3, #65535	; 0xffff
   1fd9c:	sub	r3, r3, r0
   1fda0:	add	r0, r2, #100	; 0x64
   1fda4:	cmp	r4, r3
   1fda8:	rsblt	r0, r2, #0
   1fdac:	ldr	r3, [sp, #40]	; 0x28
   1fdb0:	b	1f7f4 <putc_unlocked@plt+0xd63c>
   1fdb4:	add	r0, r3, #100	; 0x64
   1fdb8:	movw	r7, #63636	; 0xf894
   1fdbc:	movt	r7, #65535	; 0xffff
   1fdc0:	cmp	r2, r7
   1fdc4:	rsblt	r0, r3, #0
   1fdc8:	mov	r3, r4
   1fdcc:	b	1f7f4 <putc_unlocked@plt+0xd63c>
   1fdd0:	cmp	r2, #0
   1fdd4:	beq	1ff6c <putc_unlocked@plt+0xddb4>
   1fdd8:	movw	r7, #10000	; 0x2710
   1fddc:	mla	r0, r0, r7, r2
   1fde0:	mov	r2, #100	; 0x64
   1fde4:	mla	r0, r3, r2, r0
   1fde8:	mov	r2, #9
   1fdec:	str	r2, [sp, #72]	; 0x48
   1fdf0:	mov	r2, #1
   1fdf4:	str	r2, [sp, #84]	; 0x54
   1fdf8:	mov	r2, #20
   1fdfc:	b	1ff90 <putc_unlocked@plt+0xddd8>
   1fe00:	mov	r0, lr
   1fe04:	mov	r2, r4
   1fe08:	mov	r7, lr
   1fe0c:	bl	11d74 <memcpy@plt>
   1fe10:	add	r7, r7, r4
   1fe14:	ldr	ip, [sp, #80]	; 0x50
   1fe18:	cmp	sl, #45	; 0x2d
   1fe1c:	subne	r0, r6, r4
   1fe20:	bicne	r8, r0, r0, asr #31
   1fe24:	sub	r0, r5, r4
   1fe28:	cmp	r8, r0
   1fe2c:	bcs	20014 <putc_unlocked@plt+0xde5c>
   1fe30:	cmp	r7, #0
   1fe34:	beq	1fe5c <putc_unlocked@plt+0xdca4>
   1fe38:	cmp	r8, #0
   1fe3c:	beq	1fe5c <putc_unlocked@plt+0xdca4>
   1fe40:	uxtb	r0, sl
   1fe44:	cmp	r0, #48	; 0x30
   1fe48:	cmpne	r0, #43	; 0x2b
   1fe4c:	bne	1ff44 <putc_unlocked@plt+0xdd8c>
   1fe50:	mov	r0, r7
   1fe54:	mov	r1, #48	; 0x30
   1fe58:	b	1ff4c <putc_unlocked@plt+0xdd94>
   1fe5c:	mov	lr, r7
   1fe60:	b	1ff60 <putc_unlocked@plt+0xdda8>
   1fe64:	mov	r1, #32
   1fe68:	mov	r2, r8
   1fe6c:	bl	12008 <memset@plt>
   1fe70:	ldr	r0, [sp, #72]	; 0x48
   1fe74:	ldr	r1, [sp, #44]	; 0x2c
   1fe78:	add	r0, r0, r8
   1fe7c:	ldr	r3, [sp, #92]	; 0x5c
   1fe80:	tst	r7, #1
   1fe84:	beq	1fe98 <putc_unlocked@plt+0xdce0>
   1fe88:	mov	r2, r4
   1fe8c:	mov	r7, r0
   1fe90:	bl	20038 <putc_unlocked@plt+0xde80>
   1fe94:	b	1fec4 <putc_unlocked@plt+0xdd0c>
   1fe98:	eor	r2, r7, #1
   1fe9c:	and	r2, r3, r2
   1fea0:	tst	r2, #1
   1fea4:	beq	1feb8 <putc_unlocked@plt+0xdd00>
   1fea8:	mov	r2, r4
   1feac:	mov	r7, r0
   1feb0:	bl	20074 <putc_unlocked@plt+0xdebc>
   1feb4:	b	1fec4 <putc_unlocked@plt+0xdd0c>
   1feb8:	mov	r2, r4
   1febc:	mov	r7, r0
   1fec0:	bl	11d74 <memcpy@plt>
   1fec4:	mov	lr, r7
   1fec8:	mov	ip, r6
   1fecc:	add	lr, r7, r4
   1fed0:	b	1fc5c <putc_unlocked@plt+0xdaa4>
   1fed4:	mov	r0, lr
   1fed8:	mov	r1, #32
   1fedc:	mov	r2, r4
   1fee0:	mov	r6, ip
   1fee4:	mov	r7, lr
   1fee8:	bl	12008 <memset@plt>
   1feec:	mov	lr, r7
   1fef0:	mov	ip, r6
   1fef4:	add	lr, r7, r4
   1fef8:	mov	r8, #-2147483648	; 0x80000000
   1fefc:	movw	r3, #52428	; 0xcccc
   1ff00:	movt	r3, #3276	; 0xccc
   1ff04:	mov	r0, #10
   1ff08:	b	1ffd0 <putc_unlocked@plt+0xde18>
   1ff0c:	mov	r0, lr
   1ff10:	mov	r1, #32
   1ff14:	mov	r2, r4
   1ff18:	mov	r6, ip
   1ff1c:	mov	r7, lr
   1ff20:	bl	12008 <memset@plt>
   1ff24:	mov	lr, r7
   1ff28:	mov	ip, r6
   1ff2c:	add	lr, r7, r4
   1ff30:	mov	r8, #-2147483648	; 0x80000000
   1ff34:	movw	r3, #52428	; 0xcccc
   1ff38:	movt	r3, #3276	; 0xccc
   1ff3c:	mov	r0, #9
   1ff40:	b	1ffd0 <putc_unlocked@plt+0xde18>
   1ff44:	mov	r0, r7
   1ff48:	mov	r1, #32
   1ff4c:	mov	r2, r8
   1ff50:	mov	r5, ip
   1ff54:	bl	12008 <memset@plt>
   1ff58:	mov	ip, r5
   1ff5c:	add	lr, r7, r8
   1ff60:	add	r0, r8, ip
   1ff64:	add	ip, r0, r4
   1ff68:	b	1f5a8 <putc_unlocked@plt+0xd3f0>
   1ff6c:	cmp	r3, #0
   1ff70:	beq	1ffe0 <putc_unlocked@plt+0xde28>
   1ff74:	mov	r2, #100	; 0x64
   1ff78:	mla	r0, r0, r2, r3
   1ff7c:	mov	r2, #6
   1ff80:	str	r2, [sp, #72]	; 0x48
   1ff84:	mov	r2, #1
   1ff88:	str	r2, [sp, #84]	; 0x54
   1ff8c:	mov	r2, #4
   1ff90:	ldr	r4, [sp, #92]	; 0x5c
   1ff94:	ldr	r3, [sp, #40]	; 0x28
   1ff98:	b	1f890 <putc_unlocked@plt+0xd6d8>
   1ff9c:	mov	r0, lr
   1ffa0:	mov	r1, #32
   1ffa4:	mov	r2, r4
   1ffa8:	mov	r6, ip
   1ffac:	mov	r7, lr
   1ffb0:	bl	12008 <memset@plt>
   1ffb4:	mov	lr, r7
   1ffb8:	mov	ip, r6
   1ffbc:	add	lr, r7, r4
   1ffc0:	mov	r8, #-2147483648	; 0x80000000
   1ffc4:	movw	r3, #52428	; 0xcccc
   1ffc8:	movt	r3, #3276	; 0xccc
   1ffcc:	ldrb	r0, [r9]
   1ffd0:	strb	r0, [lr], #1
   1ffd4:	add	ip, r5, ip
   1ffd8:	mov	r7, r9
   1ffdc:	b	1e92c <putc_unlocked@plt+0xc774>
   1ffe0:	mov	r2, #3
   1ffe4:	b	1fce4 <putc_unlocked@plt+0xdb2c>
   1ffe8:	mov	ip, #0
   1ffec:	mov	lr, r5
   1fff0:	ldr	r0, [sp, #88]	; 0x58
   1fff4:	cmp	r0, #0
   1fff8:	cmpne	lr, #0
   1fffc:	movne	r0, #0
   20000:	strbne	r0, [lr]
   20004:	ldr	r0, [sp, #60]	; 0x3c
   20008:	ldr	r1, [sp, #56]	; 0x38
   2000c:	str	r1, [r0]
   20010:	b	20024 <putc_unlocked@plt+0xde6c>
   20014:	mov	r0, #34	; 0x22
   20018:	ldr	r1, [sp, #60]	; 0x3c
   2001c:	str	r0, [r1]
   20020:	mov	ip, #0
   20024:	mov	r0, ip
   20028:	sub	sp, fp, #28
   2002c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20030:	mov	r0, #75	; 0x4b
   20034:	b	20018 <putc_unlocked@plt+0xde60>
   20038:	push	{r4, r5, r6, sl, fp, lr}
   2003c:	add	fp, sp, #16
   20040:	cmp	r2, #0
   20044:	beq	20070 <putc_unlocked@plt+0xdeb8>
   20048:	mov	r4, r2
   2004c:	sub	r5, r1, #1
   20050:	sub	r6, r0, #1
   20054:	bl	11f48 <__ctype_tolower_loc@plt>
   20058:	ldrb	r1, [r5, r4]
   2005c:	ldr	r2, [r0]
   20060:	ldr	r1, [r2, r1, lsl #2]
   20064:	strb	r1, [r6, r4]
   20068:	subs	r4, r4, #1
   2006c:	bne	20058 <putc_unlocked@plt+0xdea0>
   20070:	pop	{r4, r5, r6, sl, fp, pc}
   20074:	push	{r4, r5, r6, sl, fp, lr}
   20078:	add	fp, sp, #16
   2007c:	cmp	r2, #0
   20080:	beq	200ac <putc_unlocked@plt+0xdef4>
   20084:	mov	r4, r2
   20088:	sub	r5, r1, #1
   2008c:	sub	r6, r0, #1
   20090:	bl	11f54 <__ctype_toupper_loc@plt>
   20094:	ldrb	r1, [r5, r4]
   20098:	ldr	r2, [r0]
   2009c:	ldr	r1, [r2, r1, lsl #2]
   200a0:	strb	r1, [r6, r4]
   200a4:	subs	r4, r4, #1
   200a8:	bne	20094 <putc_unlocked@plt+0xdedc>
   200ac:	pop	{r4, r5, r6, sl, fp, pc}
   200b0:	sub	r1, r0, r1
   200b4:	movw	r2, #382	; 0x17e
   200b8:	add	r1, r1, r2
   200bc:	movw	r2, #9363	; 0x2493
   200c0:	movt	r2, #37449	; 0x9249
   200c4:	smmla	r2, r1, r2, r1
   200c8:	asr	r3, r2, #2
   200cc:	add	r2, r3, r2, lsr #31
   200d0:	rsb	r2, r2, r2, lsl #3
   200d4:	sub	r1, r2, r1
   200d8:	add	r0, r0, r1
   200dc:	add	r0, r0, #3
   200e0:	bx	lr

000200e4 <_obstack_begin@@Base>:
   200e4:	push	{fp, lr}
   200e8:	mov	fp, sp
   200ec:	str	r3, [r0, #28]
   200f0:	ldr	r3, [fp, #8]
   200f4:	str	r3, [r0, #32]
   200f8:	ldrb	r3, [r0, #40]	; 0x28
   200fc:	and	r3, r3, #254	; 0xfe
   20100:	strb	r3, [r0, #40]	; 0x28
   20104:	bl	20110 <_obstack_begin@@Base+0x2c>
   20108:	mov	r0, #1
   2010c:	pop	{fp, pc}
   20110:	push	{r4, r5, r6, sl, fp, lr}
   20114:	add	fp, sp, #16
   20118:	mov	r5, r2
   2011c:	mov	r4, r0
   20120:	cmp	r1, #0
   20124:	movweq	r1, #4072	; 0xfe8
   20128:	str	r1, [r0]
   2012c:	cmp	r2, #0
   20130:	movweq	r5, #8
   20134:	sub	r6, r5, #1
   20138:	str	r6, [r0, #24]
   2013c:	bl	202e4 <_obstack_newchunk@@Base+0x118>
   20140:	str	r0, [r4, #4]
   20144:	cmp	r0, #0
   20148:	addne	r1, r0, r6
   2014c:	addne	r1, r1, #8
   20150:	rsbne	r2, r5, #0
   20154:	andne	r1, r1, r2
   20158:	strne	r1, [r4, #12]
   2015c:	strne	r1, [r4, #8]
   20160:	ldrne	r1, [r4]
   20164:	addne	r1, r0, r1
   20168:	strne	r1, [r0]
   2016c:	strne	r1, [r4, #16]
   20170:	movne	r1, #0
   20174:	strne	r1, [r0, #4]
   20178:	ldrbne	r0, [r4, #40]	; 0x28
   2017c:	andne	r0, r0, #249	; 0xf9
   20180:	strbne	r0, [r4, #40]	; 0x28
   20184:	popne	{r4, r5, r6, sl, fp, pc}
   20188:	movw	r0, #37576	; 0x92c8
   2018c:	movt	r0, #3
   20190:	ldr	r0, [r0]
   20194:	blx	r0

00020198 <_obstack_begin_1@@Base>:
   20198:	push	{fp, lr}
   2019c:	mov	fp, sp
   201a0:	str	r3, [r0, #28]
   201a4:	ldr	r3, [fp, #12]
   201a8:	str	r3, [r0, #36]	; 0x24
   201ac:	ldr	r3, [fp, #8]
   201b0:	str	r3, [r0, #32]
   201b4:	ldrb	r3, [r0, #40]	; 0x28
   201b8:	orr	r3, r3, #1
   201bc:	strb	r3, [r0, #40]	; 0x28
   201c0:	bl	20110 <_obstack_begin@@Base+0x2c>
   201c4:	mov	r0, #1
   201c8:	pop	{fp, pc}

000201cc <_obstack_newchunk@@Base>:
   201cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   201d0:	add	fp, sp, #28
   201d4:	sub	sp, sp, #4
   201d8:	mov	r4, r0
   201dc:	ldr	r2, [r0]
   201e0:	ldr	r0, [r0, #8]
   201e4:	ldr	r3, [r4, #12]
   201e8:	sub	sl, r3, r0
   201ec:	add	r1, sl, r1
   201f0:	ldr	r0, [r4, #24]
   201f4:	mov	r3, #0
   201f8:	adds	r7, r1, r0
   201fc:	adc	r0, r3, #0
   20200:	mov	r3, #100	; 0x64
   20204:	add	r3, r3, sl, lsr #3
   20208:	adds	r6, r3, r7
   2020c:	movcs	r6, r7
   20210:	cmp	r6, r2
   20214:	movcc	r6, r2
   20218:	cmp	r1, sl
   2021c:	bcc	202d4 <_obstack_newchunk@@Base+0x108>
   20220:	cmp	r0, #0
   20224:	bne	202d4 <_obstack_newchunk@@Base+0x108>
   20228:	ldr	r8, [r4, #4]
   2022c:	mov	r0, r4
   20230:	mov	r1, r6
   20234:	bl	202e4 <_obstack_newchunk@@Base+0x118>
   20238:	cmp	r0, #0
   2023c:	beq	202d4 <_obstack_newchunk@@Base+0x108>
   20240:	mov	r7, r0
   20244:	str	r0, [r4, #4]
   20248:	str	r8, [r0, #4]
   2024c:	add	r0, r0, r6
   20250:	str	r0, [r4, #16]
   20254:	str	r0, [r7]
   20258:	ldr	r9, [r4, #8]
   2025c:	ldr	r5, [r4, #24]
   20260:	add	r0, r7, r5
   20264:	add	r0, r0, #8
   20268:	bic	r6, r0, r5
   2026c:	mov	r0, r6
   20270:	mov	r1, r9
   20274:	mov	r2, sl
   20278:	bl	11d74 <memcpy@plt>
   2027c:	ldrb	r0, [r4, #40]	; 0x28
   20280:	tst	r0, #2
   20284:	bne	202b4 <_obstack_newchunk@@Base+0xe8>
   20288:	mvn	r0, r5
   2028c:	add	r1, r8, r5
   20290:	add	r1, r1, #8
   20294:	and	r0, r1, r0
   20298:	cmp	r9, r0
   2029c:	bne	202b4 <_obstack_newchunk@@Base+0xe8>
   202a0:	ldr	r0, [r8, #4]
   202a4:	str	r0, [r7, #4]
   202a8:	mov	r0, r4
   202ac:	mov	r1, r8
   202b0:	bl	20308 <_obstack_newchunk@@Base+0x13c>
   202b4:	add	r0, r6, sl
   202b8:	str	r6, [r4, #8]
   202bc:	str	r0, [r4, #12]
   202c0:	ldrb	r0, [r4, #40]	; 0x28
   202c4:	and	r0, r0, #253	; 0xfd
   202c8:	strb	r0, [r4, #40]	; 0x28
   202cc:	sub	sp, fp, #28
   202d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   202d4:	movw	r0, #37576	; 0x92c8
   202d8:	movt	r0, #3
   202dc:	ldr	r0, [r0]
   202e0:	blx	r0
   202e4:	ldrb	r2, [r0, #40]	; 0x28
   202e8:	tst	r2, #1
   202ec:	bne	202fc <_obstack_newchunk@@Base+0x130>
   202f0:	ldr	r2, [r0, #28]
   202f4:	mov	r0, r1
   202f8:	bx	r2
   202fc:	ldr	r2, [r0, #28]
   20300:	ldr	r0, [r0, #36]	; 0x24
   20304:	bx	r2
   20308:	ldrb	r2, [r0, #40]	; 0x28
   2030c:	tst	r2, #1
   20310:	bne	20320 <_obstack_newchunk@@Base+0x154>
   20314:	ldr	r2, [r0, #32]
   20318:	mov	r0, r1
   2031c:	bx	r2
   20320:	ldr	r2, [r0, #32]
   20324:	ldr	r0, [r0, #36]	; 0x24
   20328:	bx	r2

0002032c <_obstack_allocated_p@@Base>:
   2032c:	ldr	r2, [r0, #4]
   20330:	mov	r0, #0
   20334:	b	2033c <_obstack_allocated_p@@Base+0x10>
   20338:	ldr	r2, [r2, #4]
   2033c:	cmp	r2, #0
   20340:	bxeq	lr
   20344:	cmp	r2, r1
   20348:	bcs	20338 <_obstack_allocated_p@@Base+0xc>
   2034c:	ldr	r3, [r2]
   20350:	cmp	r3, r1
   20354:	bcc	20338 <_obstack_allocated_p@@Base+0xc>
   20358:	mov	r0, #1
   2035c:	bx	lr

00020360 <_obstack_free@@Base>:
   20360:	push	{r4, r5, r6, sl, fp, lr}
   20364:	add	fp, sp, #16
   20368:	mov	r5, r1
   2036c:	ldr	r1, [r0, #4]
   20370:	cmp	r1, #0
   20374:	beq	203d4 <_obstack_free@@Base+0x74>
   20378:	mov	r4, r0
   2037c:	cmp	r1, r5
   20380:	bcc	203b0 <_obstack_free@@Base+0x50>
   20384:	ldr	r6, [r1, #4]
   20388:	mov	r0, r4
   2038c:	bl	20308 <_obstack_newchunk@@Base+0x13c>
   20390:	ldrb	r0, [r4, #40]	; 0x28
   20394:	orr	r0, r0, #2
   20398:	strb	r0, [r4, #40]	; 0x28
   2039c:	cmp	r6, #0
   203a0:	mov	r1, r6
   203a4:	beq	203d4 <_obstack_free@@Base+0x74>
   203a8:	cmp	r1, r5
   203ac:	bcs	20384 <_obstack_free@@Base+0x24>
   203b0:	ldr	r0, [r1]
   203b4:	cmp	r0, r5
   203b8:	bcc	20384 <_obstack_free@@Base+0x24>
   203bc:	str	r5, [r4, #8]
   203c0:	str	r5, [r4, #12]
   203c4:	ldr	r0, [r1]
   203c8:	str	r1, [r4, #4]
   203cc:	str	r0, [r4, #16]
   203d0:	pop	{r4, r5, r6, sl, fp, pc}
   203d4:	cmp	r5, #0
   203d8:	popeq	{r4, r5, r6, sl, fp, pc}
   203dc:	bl	1214c <abort@plt>

000203e0 <_obstack_memory_used@@Base>:
   203e0:	ldr	r1, [r0, #4]
   203e4:	mov	r0, #0
   203e8:	b	203fc <_obstack_memory_used@@Base+0x1c>
   203ec:	sub	r0, r0, r1
   203f0:	ldr	r2, [r1]
   203f4:	ldr	r1, [r1, #4]
   203f8:	add	r0, r0, r2
   203fc:	cmp	r1, #0
   20400:	bxeq	lr
   20404:	b	203ec <_obstack_memory_used@@Base+0xc>
   20408:	push	{fp, lr}
   2040c:	mov	fp, sp
   20410:	movw	r0, #37664	; 0x9320
   20414:	movt	r0, #3
   20418:	ldr	r4, [r0]
   2041c:	movw	r1, #34295	; 0x85f7
   20420:	movt	r1, #2
   20424:	mov	r0, #0
   20428:	mov	r2, #5
   2042c:	bl	11db0 <dcgettext@plt>
   20430:	mov	r3, r0
   20434:	movw	r2, #34560	; 0x8700
   20438:	movt	r2, #2
   2043c:	mov	r0, r4
   20440:	mov	r1, #1
   20444:	bl	12044 <__fprintf_chk@plt>
   20448:	movw	r0, #37572	; 0x92c4
   2044c:	movt	r0, #3
   20450:	ldr	r0, [r0]
   20454:	bl	11f90 <exit@plt>
   20458:	push	{r4, r5, fp, lr}
   2045c:	add	fp, sp, #8
   20460:	cmp	r0, #0
   20464:	beq	204f8 <_obstack_memory_used@@Base+0x118>
   20468:	mov	r4, r0
   2046c:	mov	r1, #47	; 0x2f
   20470:	bl	12098 <strrchr@plt>
   20474:	cmp	r0, #0
   20478:	mov	r5, r4
   2047c:	addne	r5, r0, #1
   20480:	sub	r0, r5, r4
   20484:	cmp	r0, #7
   20488:	blt	204dc <_obstack_memory_used@@Base+0xfc>
   2048c:	sub	r0, r5, #7
   20490:	movw	r1, #34368	; 0x8640
   20494:	movt	r1, #2
   20498:	mov	r2, #7
   2049c:	bl	12140 <strncmp@plt>
   204a0:	cmp	r0, #0
   204a4:	bne	204dc <_obstack_memory_used@@Base+0xfc>
   204a8:	movw	r1, #34376	; 0x8648
   204ac:	movt	r1, #2
   204b0:	mov	r0, r5
   204b4:	mov	r2, #3
   204b8:	bl	12140 <strncmp@plt>
   204bc:	cmp	r0, #0
   204c0:	beq	204cc <_obstack_memory_used@@Base+0xec>
   204c4:	mov	r4, r5
   204c8:	b	204dc <_obstack_memory_used@@Base+0xfc>
   204cc:	add	r4, r5, #3
   204d0:	movw	r0, #37648	; 0x9310
   204d4:	movt	r0, #3
   204d8:	str	r4, [r0]
   204dc:	movw	r0, #37652	; 0x9314
   204e0:	movt	r0, #3
   204e4:	str	r4, [r0]
   204e8:	movw	r0, #41976	; 0xa3f8
   204ec:	movt	r0, #3
   204f0:	str	r4, [r0]
   204f4:	pop	{r4, r5, fp, pc}
   204f8:	movw	r0, #37664	; 0x9320
   204fc:	movt	r0, #3
   20500:	ldr	r3, [r0]
   20504:	movw	r0, #34312	; 0x8608
   20508:	movt	r0, #2
   2050c:	mov	r1, #55	; 0x37
   20510:	mov	r2, #1
   20514:	bl	11e4c <fwrite@plt>
   20518:	bl	1214c <abort@plt>
   2051c:	push	{r4, r5, r6, sl, fp, lr}
   20520:	add	fp, sp, #16
   20524:	mov	r4, r0
   20528:	movw	r0, #41984	; 0xa400
   2052c:	movt	r0, #3
   20530:	cmp	r4, #0
   20534:	moveq	r4, r0
   20538:	bl	11fe4 <__errno_location@plt>
   2053c:	mov	r5, r0
   20540:	ldr	r6, [r0]
   20544:	mov	r0, r4
   20548:	mov	r1, #48	; 0x30
   2054c:	bl	23098 <_obstack_memory_used@@Base+0x2cb8>
   20550:	str	r6, [r5]
   20554:	pop	{r4, r5, r6, sl, fp, pc}
   20558:	movw	r1, #41984	; 0xa400
   2055c:	movt	r1, #3
   20560:	cmp	r0, #0
   20564:	movne	r1, r0
   20568:	ldr	r0, [r1]
   2056c:	bx	lr
   20570:	movw	r2, #41984	; 0xa400
   20574:	movt	r2, #3
   20578:	cmp	r0, #0
   2057c:	movne	r2, r0
   20580:	str	r1, [r2]
   20584:	bx	lr
   20588:	movw	r3, #41984	; 0xa400
   2058c:	movt	r3, #3
   20590:	cmp	r0, #0
   20594:	movne	r3, r0
   20598:	ubfx	r0, r1, #5, #3
   2059c:	add	ip, r3, r0, lsl #2
   205a0:	ldr	r3, [ip, #8]
   205a4:	and	r1, r1, #31
   205a8:	mov	r0, #1
   205ac:	and	r0, r0, r3, lsr r1
   205b0:	and	r2, r2, #1
   205b4:	eor	r2, r0, r2
   205b8:	eor	r1, r3, r2, lsl r1
   205bc:	str	r1, [ip, #8]
   205c0:	bx	lr
   205c4:	movw	r2, #41984	; 0xa400
   205c8:	movt	r2, #3
   205cc:	cmp	r0, #0
   205d0:	movne	r2, r0
   205d4:	ldr	r0, [r2, #4]
   205d8:	str	r1, [r2, #4]
   205dc:	bx	lr
   205e0:	push	{fp, lr}
   205e4:	mov	fp, sp
   205e8:	movw	r3, #41984	; 0xa400
   205ec:	movt	r3, #3
   205f0:	cmp	r0, #0
   205f4:	movne	r3, r0
   205f8:	mov	r0, #10
   205fc:	str	r0, [r3]
   20600:	cmp	r1, #0
   20604:	cmpne	r2, #0
   20608:	bne	20610 <_obstack_memory_used@@Base+0x230>
   2060c:	bl	1214c <abort@plt>
   20610:	str	r1, [r3, #40]	; 0x28
   20614:	str	r2, [r3, #44]	; 0x2c
   20618:	pop	{fp, pc}
   2061c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20620:	add	fp, sp, #28
   20624:	sub	sp, sp, #20
   20628:	mov	r8, r3
   2062c:	mov	r9, r2
   20630:	mov	sl, r1
   20634:	mov	r7, r0
   20638:	ldr	r0, [fp, #8]
   2063c:	movw	r5, #41984	; 0xa400
   20640:	movt	r5, #3
   20644:	cmp	r0, #0
   20648:	movne	r5, r0
   2064c:	bl	11fe4 <__errno_location@plt>
   20650:	mov	r4, r0
   20654:	ldm	r5, {r0, r1}
   20658:	ldr	r2, [r5, #40]	; 0x28
   2065c:	ldr	r3, [r5, #44]	; 0x2c
   20660:	ldr	r6, [r4]
   20664:	add	r5, r5, #8
   20668:	stm	sp, {r0, r1, r5}
   2066c:	str	r2, [sp, #12]
   20670:	str	r3, [sp, #16]
   20674:	mov	r0, r7
   20678:	mov	r1, sl
   2067c:	mov	r2, r9
   20680:	mov	r3, r8
   20684:	bl	20694 <_obstack_memory_used@@Base+0x2b4>
   20688:	str	r6, [r4]
   2068c:	sub	sp, fp, #28
   20690:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20694:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20698:	add	fp, sp, #28
   2069c:	sub	sp, sp, #156	; 0x9c
   206a0:	mov	r9, r3
   206a4:	mov	r7, r1
   206a8:	mov	r6, r0
   206ac:	str	r2, [fp, #-80]	; 0xffffffb0
   206b0:	add	r0, r2, #1
   206b4:	str	r0, [sp, #76]	; 0x4c
   206b8:	ldr	r0, [fp, #12]
   206bc:	and	r1, r0, #1
   206c0:	str	r1, [sp, #40]	; 0x28
   206c4:	and	r1, r0, #4
   206c8:	str	r1, [sp, #36]	; 0x24
   206cc:	ubfx	r4, r0, #1, #1
   206d0:	bl	11e70 <__ctype_get_mb_cur_max@plt>
   206d4:	str	r0, [sp, #44]	; 0x2c
   206d8:	ldr	r0, [fp, #24]
   206dc:	str	r0, [sp, #88]	; 0x58
   206e0:	ldr	r0, [fp, #20]
   206e4:	str	r0, [sp, #80]	; 0x50
   206e8:	ldr	r1, [fp, #8]
   206ec:	mov	r0, #0
   206f0:	str	r0, [sp, #84]	; 0x54
   206f4:	mov	r0, #0
   206f8:	str	r0, [fp, #-84]	; 0xffffffac
   206fc:	mov	r0, #0
   20700:	str	r0, [fp, #-72]	; 0xffffffb8
   20704:	mov	r0, #0
   20708:	mov	r2, #0
   2070c:	str	r2, [fp, #-56]	; 0xffffffc8
   20710:	mov	r2, #0
   20714:	str	r2, [sp, #64]	; 0x40
   20718:	mov	r2, #1
   2071c:	str	r2, [fp, #-48]	; 0xffffffd0
   20720:	cmp	r1, #10
   20724:	bhi	21650 <_obstack_memory_used@@Base+0x1270>
   20728:	mov	sl, r7
   2072c:	mov	r7, r1
   20730:	add	r1, pc, #24
   20734:	mov	r8, #0
   20738:	mov	r2, #1
   2073c:	mov	r3, #0
   20740:	ldr	ip, [fp, #-80]	; 0xffffffb0
   20744:	mov	lr, r9
   20748:	mov	r5, r6
   2074c:	ldr	pc, [r1, r7, lsl #2]
   20750:	andeq	r0, r2, r4, lsr #16
   20754:	andeq	r0, r2, r4, ror #16
   20758:	andeq	r0, r2, r4, lsr r8
   2075c:	andeq	r0, r2, ip, lsl r8
   20760:	andeq	r0, r2, r8, asr r8
   20764:			; <UNDEFINED> instruction: 0x000208b8
   20768:	andeq	r0, r2, r4, asr #16
   2076c:	andeq	r0, r2, r4, lsl r9
   20770:	andeq	r0, r2, ip, ror r7
   20774:	andeq	r0, r2, ip, ror r7
   20778:	andeq	r0, r2, r8, lsr #15
   2077c:	movw	r0, #34450	; 0x8692
   20780:	movt	r0, #2
   20784:	mov	r1, r7
   20788:	bl	21c58 <_obstack_memory_used@@Base+0x1878>
   2078c:	str	r0, [sp, #80]	; 0x50
   20790:	movw	r0, #35364	; 0x8a24
   20794:	movt	r0, #2
   20798:	mov	r1, r7
   2079c:	bl	21c58 <_obstack_memory_used@@Base+0x1878>
   207a0:	mov	r5, r6
   207a4:	str	r0, [sp, #88]	; 0x58
   207a8:	mov	r8, #0
   207ac:	tst	r4, #1
   207b0:	str	r7, [fp, #-64]	; 0xffffffc0
   207b4:	bne	207ec <_obstack_memory_used@@Base+0x40c>
   207b8:	ldr	r0, [sp, #80]	; 0x50
   207bc:	ldrb	r0, [r0]
   207c0:	cmp	r0, #0
   207c4:	beq	207ec <_obstack_memory_used@@Base+0x40c>
   207c8:	ldr	r1, [sp, #80]	; 0x50
   207cc:	add	r1, r1, #1
   207d0:	mov	r8, #0
   207d4:	cmp	r8, sl
   207d8:	strbcc	r0, [r5, r8]
   207dc:	ldrb	r0, [r1, r8]
   207e0:	add	r8, r8, #1
   207e4:	cmp	r0, #0
   207e8:	bne	207d4 <_obstack_memory_used@@Base+0x3f4>
   207ec:	ldr	r7, [sp, #88]	; 0x58
   207f0:	mov	r0, r7
   207f4:	bl	11fc0 <strlen@plt>
   207f8:	mov	r5, r6
   207fc:	str	r0, [fp, #-72]	; 0xffffffb8
   20800:	str	r7, [fp, #-84]	; 0xffffffac
   20804:	mov	r2, #1
   20808:	mov	r3, r4
   2080c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   20810:	mov	lr, r9
   20814:	ldr	r7, [fp, #-64]	; 0xffffffc0
   20818:	b	20914 <_obstack_memory_used@@Base+0x534>
   2081c:	mov	r0, #1
   20820:	b	20864 <_obstack_memory_used@@Base+0x484>
   20824:	mov	r7, #0
   20828:	mov	r8, #0
   2082c:	mov	r2, r0
   20830:	b	20910 <_obstack_memory_used@@Base+0x530>
   20834:	tst	r4, #1
   20838:	bne	20864 <_obstack_memory_used@@Base+0x484>
   2083c:	mov	r2, r0
   20840:	b	2088c <_obstack_memory_used@@Base+0x4ac>
   20844:	mov	r0, #1
   20848:	str	r0, [fp, #-72]	; 0xffffffb8
   2084c:	mov	r8, #0
   20850:	mov	r7, #5
   20854:	b	208d0 <_obstack_memory_used@@Base+0x4f0>
   20858:	mov	r2, #1
   2085c:	tst	r4, #1
   20860:	beq	2088c <_obstack_memory_used@@Base+0x4ac>
   20864:	mov	r1, #1
   20868:	str	r1, [fp, #-72]	; 0xffffffb8
   2086c:	mov	r8, #0
   20870:	mov	r7, #2
   20874:	movw	r1, #35364	; 0x8a24
   20878:	movt	r1, #2
   2087c:	str	r1, [fp, #-84]	; 0xffffffac
   20880:	mov	r2, r0
   20884:	mov	r3, #1
   20888:	b	20914 <_obstack_memory_used@@Base+0x534>
   2088c:	mov	r8, #1
   20890:	mov	r7, #2
   20894:	cmp	sl, #0
   20898:	movne	r0, #39	; 0x27
   2089c:	strbne	r0, [r5]
   208a0:	movw	r0, #35364	; 0x8a24
   208a4:	movt	r0, #2
   208a8:	str	r0, [fp, #-84]	; 0xffffffac
   208ac:	mov	r0, #1
   208b0:	str	r0, [fp, #-72]	; 0xffffffb8
   208b4:	b	20910 <_obstack_memory_used@@Base+0x530>
   208b8:	mov	r7, #5
   208bc:	tst	r4, #1
   208c0:	beq	208e8 <_obstack_memory_used@@Base+0x508>
   208c4:	mov	r0, #1
   208c8:	str	r0, [fp, #-72]	; 0xffffffb8
   208cc:	mov	r8, #0
   208d0:	movw	r0, #34448	; 0x8690
   208d4:	movt	r0, #2
   208d8:	str	r0, [fp, #-84]	; 0xffffffac
   208dc:	mov	r2, #1
   208e0:	mov	r3, #1
   208e4:	b	20914 <_obstack_memory_used@@Base+0x534>
   208e8:	cmp	sl, #0
   208ec:	movne	r0, #34	; 0x22
   208f0:	strbne	r0, [r5]
   208f4:	mov	r8, #1
   208f8:	movw	r0, #34448	; 0x8690
   208fc:	movt	r0, #2
   20900:	str	r0, [fp, #-84]	; 0xffffffac
   20904:	mov	r0, #1
   20908:	str	r0, [fp, #-72]	; 0xffffffb8
   2090c:	mov	r2, #1
   20910:	mov	r3, #0
   20914:	ldr	r0, [fp, #-72]	; 0xffffffb8
   20918:	cmp	r0, #0
   2091c:	movwne	r0, #1
   20920:	and	r1, r0, r3
   20924:	and	r1, r2, r1
   20928:	str	r1, [sp, #56]	; 0x38
   2092c:	sub	r1, r7, #2
   20930:	clz	r1, r1
   20934:	lsr	r1, r1, #5
   20938:	and	r1, r1, r3
   2093c:	str	r1, [sp, #68]	; 0x44
   20940:	str	r7, [fp, #-64]	; 0xffffffc0
   20944:	subs	r1, r7, #2
   20948:	movwne	r1, #1
   2094c:	eor	r4, r3, #1
   20950:	str	r4, [fp, #-88]	; 0xffffffa8
   20954:	orr	r4, r1, r4
   20958:	str	r4, [sp, #72]	; 0x48
   2095c:	and	r1, r1, r2
   20960:	and	r0, r0, r1
   20964:	str	r0, [fp, #-60]	; 0xffffffc4
   20968:	str	r3, [fp, #-76]	; 0xffffffb4
   2096c:	orr	r0, r1, r3
   20970:	eor	r0, r0, #1
   20974:	ldr	r1, [fp, #16]
   20978:	clz	r1, r1
   2097c:	lsr	r1, r1, #5
   20980:	orr	r0, r1, r0
   20984:	str	r0, [fp, #-68]	; 0xffffffbc
   20988:	str	r2, [sp, #92]	; 0x5c
   2098c:	eor	r0, r2, #1
   20990:	str	r0, [sp, #60]	; 0x3c
   20994:	mov	r7, #0
   20998:	cmn	lr, #1
   2099c:	beq	209ac <_obstack_memory_used@@Base+0x5cc>
   209a0:	cmp	r7, lr
   209a4:	bne	209b8 <_obstack_memory_used@@Base+0x5d8>
   209a8:	b	214c4 <_obstack_memory_used@@Base+0x10e4>
   209ac:	ldrb	r0, [ip, r7]
   209b0:	cmp	r0, #0
   209b4:	beq	214c4 <_obstack_memory_used@@Base+0x10e4>
   209b8:	mov	r9, #0
   209bc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   209c0:	cmp	r0, #0
   209c4:	beq	209f8 <_obstack_memory_used@@Base+0x618>
   209c8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   209cc:	add	r4, r7, r0
   209d0:	cmp	r0, #2
   209d4:	bcc	209f0 <_obstack_memory_used@@Base+0x610>
   209d8:	cmn	lr, #1
   209dc:	bne	209f0 <_obstack_memory_used@@Base+0x610>
   209e0:	mov	r0, ip
   209e4:	bl	11fc0 <strlen@plt>
   209e8:	ldr	ip, [fp, #-80]	; 0xffffffb0
   209ec:	mov	lr, r0
   209f0:	cmp	r4, lr
   209f4:	bls	20a04 <_obstack_memory_used@@Base+0x624>
   209f8:	mov	r0, #0
   209fc:	str	r0, [fp, #-52]	; 0xffffffcc
   20a00:	b	20a48 <_obstack_memory_used@@Base+0x668>
   20a04:	mov	r4, lr
   20a08:	add	r0, ip, r7
   20a0c:	ldr	r1, [fp, #-84]	; 0xffffffac
   20a10:	ldr	r2, [fp, #-72]	; 0xffffffb8
   20a14:	bl	11fa8 <bcmp@plt>
   20a18:	cmp	r0, #0
   20a1c:	mov	r1, r0
   20a20:	movwne	r1, #1
   20a24:	ldr	r2, [fp, #-88]	; 0xffffffa8
   20a28:	orr	r1, r1, r2
   20a2c:	tst	r1, #1
   20a30:	beq	21598 <_obstack_memory_used@@Base+0x11b8>
   20a34:	clz	r0, r0
   20a38:	lsr	r0, r0, #5
   20a3c:	str	r0, [fp, #-52]	; 0xffffffcc
   20a40:	ldr	ip, [fp, #-80]	; 0xffffffb0
   20a44:	mov	lr, r4
   20a48:	ldrb	r4, [ip, r7]
   20a4c:	cmp	r4, #126	; 0x7e
   20a50:	bhi	20f80 <_obstack_memory_used@@Base+0xba0>
   20a54:	mov	r6, #1
   20a58:	mov	r2, #110	; 0x6e
   20a5c:	mov	r0, #97	; 0x61
   20a60:	add	r3, pc, #4
   20a64:	mov	r1, #0
   20a68:	ldr	pc, [r3, r4, lsl #2]
   20a6c:	andeq	r0, r2, r0, ror #27
   20a70:	andeq	r0, r2, r0, lsl #31
   20a74:	andeq	r0, r2, r0, lsl #31
   20a78:	andeq	r0, r2, r0, lsl #31
   20a7c:	andeq	r0, r2, r0, lsl #31
   20a80:	andeq	r0, r2, r0, lsl #31
   20a84:	andeq	r0, r2, r0, lsl #31
   20a88:	andeq	r1, r2, r4, asr r0
   20a8c:	andeq	r0, r2, r0, asr #27
   20a90:			; <UNDEFINED> instruction: 0x00020db8
   20a94:	andeq	r0, r2, ip, asr #27
   20a98:	andeq	r0, r2, r8, ror #29
   20a9c:			; <UNDEFINED> instruction: 0x00020db0
   20aa0:	andeq	r0, r2, r8, asr #27
   20aa4:	andeq	r0, r2, r0, lsl #31
   20aa8:	andeq	r0, r2, r0, lsl #31
   20aac:	andeq	r0, r2, r0, lsl #31
   20ab0:	andeq	r0, r2, r0, lsl #31
   20ab4:	andeq	r0, r2, r0, lsl #31
   20ab8:	andeq	r0, r2, r0, lsl #31
   20abc:	andeq	r0, r2, r0, lsl #31
   20ac0:	andeq	r0, r2, r0, lsl #31
   20ac4:	andeq	r0, r2, r0, lsl #31
   20ac8:	andeq	r0, r2, r0, lsl #31
   20acc:	andeq	r0, r2, r0, lsl #31
   20ad0:	andeq	r0, r2, r0, lsl #31
   20ad4:	andeq	r0, r2, r0, lsl #31
   20ad8:	andeq	r0, r2, r0, lsl #31
   20adc:	andeq	r0, r2, r0, lsl #31
   20ae0:	andeq	r0, r2, r0, lsl #31
   20ae4:	andeq	r0, r2, r0, lsl #31
   20ae8:	andeq	r0, r2, r0, lsl #31
   20aec:	andeq	r0, r2, r4, ror #26
   20af0:	andeq	r0, r2, r8, ror #26
   20af4:	andeq	r0, r2, r8, ror #26
   20af8:	andeq	r0, r2, r0, asr sp
   20afc:	andeq	r0, r2, r8, ror #26
   20b00:	andeq	r0, r2, r8, ror #24
   20b04:	andeq	r0, r2, r8, ror #26
   20b08:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20b0c:	andeq	r0, r2, r8, ror #26
   20b10:	andeq	r0, r2, r8, ror #26
   20b14:	andeq	r0, r2, r8, ror #26
   20b18:	andeq	r0, r2, r8, ror #24
   20b1c:	andeq	r0, r2, r8, ror #24
   20b20:	andeq	r0, r2, r8, ror #24
   20b24:	andeq	r0, r2, r8, ror #24
   20b28:	andeq	r0, r2, r8, ror #24
   20b2c:	andeq	r0, r2, r8, ror #24
   20b30:	andeq	r0, r2, r8, ror #24
   20b34:	andeq	r0, r2, r8, ror #24
   20b38:	andeq	r0, r2, r8, ror #24
   20b3c:	andeq	r0, r2, r8, ror #24
   20b40:	andeq	r0, r2, r8, ror #24
   20b44:	andeq	r0, r2, r8, ror #24
   20b48:	andeq	r0, r2, r8, ror #24
   20b4c:	andeq	r0, r2, r8, ror #24
   20b50:	andeq	r0, r2, r8, ror #24
   20b54:	andeq	r0, r2, r8, ror #24
   20b58:	andeq	r0, r2, r8, ror #26
   20b5c:	andeq	r0, r2, r8, ror #26
   20b60:	andeq	r0, r2, r8, ror #26
   20b64:	andeq	r0, r2, r8, ror #26
   20b68:			; <UNDEFINED> instruction: 0x00020eb8
   20b6c:	andeq	r0, r2, r0, lsl #31
   20b70:	andeq	r0, r2, r8, ror #24
   20b74:	andeq	r0, r2, r8, ror #24
   20b78:	andeq	r0, r2, r8, ror #24
   20b7c:	andeq	r0, r2, r8, ror #24
   20b80:	andeq	r0, r2, r8, ror #24
   20b84:	andeq	r0, r2, r8, ror #24
   20b88:	andeq	r0, r2, r8, ror #24
   20b8c:	andeq	r0, r2, r8, ror #24
   20b90:	andeq	r0, r2, r8, ror #24
   20b94:	andeq	r0, r2, r8, ror #24
   20b98:	andeq	r0, r2, r8, ror #24
   20b9c:	andeq	r0, r2, r8, ror #24
   20ba0:	andeq	r0, r2, r8, ror #24
   20ba4:	andeq	r0, r2, r8, ror #24
   20ba8:	andeq	r0, r2, r8, ror #24
   20bac:	andeq	r0, r2, r8, ror #24
   20bb0:	andeq	r0, r2, r8, ror #24
   20bb4:	andeq	r0, r2, r8, ror #24
   20bb8:	andeq	r0, r2, r8, ror #24
   20bbc:	andeq	r0, r2, r8, ror #24
   20bc0:	andeq	r0, r2, r8, ror #24
   20bc4:	andeq	r0, r2, r8, ror #24
   20bc8:	andeq	r0, r2, r8, ror #24
   20bcc:	andeq	r0, r2, r8, ror #24
   20bd0:	andeq	r0, r2, r8, ror #24
   20bd4:	andeq	r0, r2, r8, ror #24
   20bd8:	andeq	r0, r2, r8, ror #26
   20bdc:	muleq	r2, r0, sp
   20be0:	andeq	r0, r2, r8, ror #24
   20be4:	andeq	r0, r2, r8, ror #26
   20be8:	andeq	r0, r2, r8, ror #24
   20bec:	andeq	r0, r2, r8, ror #26
   20bf0:	andeq	r0, r2, r8, ror #24
   20bf4:	andeq	r0, r2, r8, ror #24
   20bf8:	andeq	r0, r2, r8, ror #24
   20bfc:	andeq	r0, r2, r8, ror #24
   20c00:	andeq	r0, r2, r8, ror #24
   20c04:	andeq	r0, r2, r8, ror #24
   20c08:	andeq	r0, r2, r8, ror #24
   20c0c:	andeq	r0, r2, r8, ror #24
   20c10:	andeq	r0, r2, r8, ror #24
   20c14:	andeq	r0, r2, r8, ror #24
   20c18:	andeq	r0, r2, r8, ror #24
   20c1c:	andeq	r0, r2, r8, ror #24
   20c20:	andeq	r0, r2, r8, ror #24
   20c24:	andeq	r0, r2, r8, ror #24
   20c28:	andeq	r0, r2, r8, ror #24
   20c2c:	andeq	r0, r2, r8, ror #24
   20c30:	andeq	r0, r2, r8, ror #24
   20c34:	andeq	r0, r2, r8, ror #24
   20c38:	andeq	r0, r2, r8, ror #24
   20c3c:	andeq	r0, r2, r8, ror #24
   20c40:	andeq	r0, r2, r8, ror #24
   20c44:	andeq	r0, r2, r8, ror #24
   20c48:	andeq	r0, r2, r8, ror #24
   20c4c:	andeq	r0, r2, r8, ror #24
   20c50:	andeq	r0, r2, r8, ror #24
   20c54:	andeq	r0, r2, r8, ror #24
   20c58:	andeq	r0, r2, r4, lsr #26
   20c5c:	andeq	r0, r2, r8, ror #26
   20c60:	andeq	r0, r2, r4, lsr #26
   20c64:	andeq	r0, r2, r0, asr sp
   20c68:	ldr	r0, [fp, #-68]	; 0xffffffbc
   20c6c:	tst	r0, #1
   20c70:	bne	20c9c <_obstack_memory_used@@Base+0x8bc>
   20c74:	ubfx	r0, r4, #5, #3
   20c78:	ldr	r1, [fp, #16]
   20c7c:	ldr	r0, [r1, r0, lsl #2]
   20c80:	and	r1, r4, #31
   20c84:	mov	r2, #1
   20c88:	tst	r0, r2, lsl r1
   20c8c:	beq	20c9c <_obstack_memory_used@@Base+0x8bc>
   20c90:	mov	r0, r4
   20c94:	mov	r1, r6
   20c98:	b	20cb0 <_obstack_memory_used@@Base+0x8d0>
   20c9c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   20ca0:	cmp	r0, #0
   20ca4:	mov	r0, r4
   20ca8:	mov	r1, r6
   20cac:	beq	20fe8 <_obstack_memory_used@@Base+0xc08>
   20cb0:	ldr	r2, [fp, #-76]	; 0xffffffb4
   20cb4:	tst	r2, #1
   20cb8:	bne	215ac <_obstack_memory_used@@Base+0x11cc>
   20cbc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   20cc0:	subs	r2, r2, #2
   20cc4:	movwne	r2, #1
   20cc8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   20ccc:	orr	r2, r2, r3
   20cd0:	tst	r2, #1
   20cd4:	bne	20d10 <_obstack_memory_used@@Base+0x930>
   20cd8:	cmp	r8, sl
   20cdc:	movcc	r2, #39	; 0x27
   20ce0:	strbcc	r2, [r5, r8]
   20ce4:	add	r2, r8, #1
   20ce8:	cmp	r2, sl
   20cec:	movcc	r3, #36	; 0x24
   20cf0:	strbcc	r3, [r5, r2]
   20cf4:	add	r2, r8, #2
   20cf8:	cmp	r2, sl
   20cfc:	movcc	r3, #39	; 0x27
   20d00:	strbcc	r3, [r5, r2]
   20d04:	add	r8, r8, #3
   20d08:	mov	r2, #1
   20d0c:	str	r2, [fp, #-56]	; 0xffffffc8
   20d10:	cmp	r8, sl
   20d14:	movcc	r2, #92	; 0x5c
   20d18:	strbcc	r2, [r5, r8]
   20d1c:	add	r8, r8, #1
   20d20:	b	2102c <_obstack_memory_used@@Base+0xc4c>
   20d24:	cmp	lr, #1
   20d28:	beq	20d50 <_obstack_memory_used@@Base+0x970>
   20d2c:	mov	r6, #0
   20d30:	cmn	lr, #1
   20d34:	bne	20d5c <_obstack_memory_used@@Base+0x97c>
   20d38:	ldrb	r0, [ip, #1]
   20d3c:	cmp	r0, #0
   20d40:	beq	20d50 <_obstack_memory_used@@Base+0x970>
   20d44:	mvn	lr, #0
   20d48:	mov	r9, #0
   20d4c:	b	20c68 <_obstack_memory_used@@Base+0x888>
   20d50:	mov	r6, #0
   20d54:	cmp	r7, #0
   20d58:	beq	20d64 <_obstack_memory_used@@Base+0x984>
   20d5c:	mov	r9, #0
   20d60:	b	20c68 <_obstack_memory_used@@Base+0x888>
   20d64:	mov	r1, #1
   20d68:	ldr	r0, [fp, #-64]	; 0xffffffc0
   20d6c:	cmp	r0, #2
   20d70:	bne	20d88 <_obstack_memory_used@@Base+0x9a8>
   20d74:	ldr	r0, [fp, #-76]	; 0xffffffb4
   20d78:	tst	r0, #1
   20d7c:	mov	r6, r1
   20d80:	beq	20c68 <_obstack_memory_used@@Base+0x888>
   20d84:	b	215ac <_obstack_memory_used@@Base+0x11cc>
   20d88:	mov	r6, r1
   20d8c:	b	20c68 <_obstack_memory_used@@Base+0x888>
   20d90:	ldr	r0, [fp, #-64]	; 0xffffffc0
   20d94:	cmp	r0, #2
   20d98:	bne	20fcc <_obstack_memory_used@@Base+0xbec>
   20d9c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   20da0:	tst	r0, #1
   20da4:	bne	215ac <_obstack_memory_used@@Base+0x11cc>
   20da8:	mov	r9, #0
   20dac:	b	20fe0 <_obstack_memory_used@@Base+0xc00>
   20db0:	mov	r0, #102	; 0x66
   20db4:	b	21054 <_obstack_memory_used@@Base+0xc74>
   20db8:	mov	r2, #116	; 0x74
   20dbc:	b	20dcc <_obstack_memory_used@@Base+0x9ec>
   20dc0:	mov	r0, #98	; 0x62
   20dc4:	b	21054 <_obstack_memory_used@@Base+0xc74>
   20dc8:	mov	r2, #114	; 0x72
   20dcc:	ldr	r0, [sp, #72]	; 0x48
   20dd0:	tst	r0, #1
   20dd4:	mov	r0, r2
   20dd8:	bne	21054 <_obstack_memory_used@@Base+0xc74>
   20ddc:	b	215ac <_obstack_memory_used@@Base+0x11cc>
   20de0:	ldr	r0, [sp, #92]	; 0x5c
   20de4:	tst	r0, #1
   20de8:	beq	21070 <_obstack_memory_used@@Base+0xc90>
   20dec:	ldr	r0, [fp, #-76]	; 0xffffffb4
   20df0:	tst	r0, #1
   20df4:	bne	215ac <_obstack_memory_used@@Base+0x11cc>
   20df8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   20dfc:	subs	r0, r0, #2
   20e00:	movwne	r0, #1
   20e04:	ldr	r1, [fp, #-56]	; 0xffffffc8
   20e08:	orr	r0, r0, r1
   20e0c:	tst	r0, #1
   20e10:	bne	20e4c <_obstack_memory_used@@Base+0xa6c>
   20e14:	cmp	r8, sl
   20e18:	movcc	r0, #39	; 0x27
   20e1c:	strbcc	r0, [r5, r8]
   20e20:	add	r0, r8, #1
   20e24:	cmp	r0, sl
   20e28:	movcc	r1, #36	; 0x24
   20e2c:	strbcc	r1, [r5, r0]
   20e30:	add	r0, r8, #2
   20e34:	cmp	r0, sl
   20e38:	movcc	r1, #39	; 0x27
   20e3c:	strbcc	r1, [r5, r0]
   20e40:	add	r8, r8, #3
   20e44:	mov	r0, #1
   20e48:	str	r0, [fp, #-56]	; 0xffffffc8
   20e4c:	cmp	r8, sl
   20e50:	movcc	r0, #92	; 0x5c
   20e54:	strbcc	r0, [r5, r8]
   20e58:	add	r0, r8, #1
   20e5c:	mov	r6, #0
   20e60:	mov	r9, #1
   20e64:	mov	r4, #48	; 0x30
   20e68:	ldr	r1, [fp, #-64]	; 0xffffffc0
   20e6c:	cmp	r1, #2
   20e70:	beq	21234 <_obstack_memory_used@@Base+0xe54>
   20e74:	add	r1, r7, #1
   20e78:	cmp	r1, lr
   20e7c:	bcs	21234 <_obstack_memory_used@@Base+0xe54>
   20e80:	ldrb	r1, [ip, r1]
   20e84:	sub	r1, r1, #48	; 0x30
   20e88:	uxtb	r1, r1
   20e8c:	cmp	r1, #9
   20e90:	bhi	21234 <_obstack_memory_used@@Base+0xe54>
   20e94:	cmp	r0, sl
   20e98:	movcc	r1, #48	; 0x30
   20e9c:	strbcc	r1, [r5, r0]
   20ea0:	add	r0, r8, #2
   20ea4:	cmp	r0, sl
   20ea8:	movcc	r1, #48	; 0x30
   20eac:	strbcc	r1, [r5, r0]
   20eb0:	add	r8, r8, #3
   20eb4:	b	20c68 <_obstack_memory_used@@Base+0x888>
   20eb8:	mov	r9, #0
   20ebc:	mov	r4, #63	; 0x3f
   20ec0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   20ec4:	cmp	r0, #5
   20ec8:	beq	2123c <_obstack_memory_used@@Base+0xe5c>
   20ecc:	cmp	r0, #2
   20ed0:	bne	212e4 <_obstack_memory_used@@Base+0xf04>
   20ed4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   20ed8:	tst	r0, #1
   20edc:	mov	r6, #0
   20ee0:	beq	20c68 <_obstack_memory_used@@Base+0x888>
   20ee4:	b	215ac <_obstack_memory_used@@Base+0x11cc>
   20ee8:	mov	r0, #118	; 0x76
   20eec:	b	21054 <_obstack_memory_used@@Base+0xc74>
   20ef0:	mov	r4, #39	; 0x27
   20ef4:	mov	r0, #1
   20ef8:	str	r0, [sp, #64]	; 0x40
   20efc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   20f00:	cmp	r0, #2
   20f04:	bne	2108c <_obstack_memory_used@@Base+0xcac>
   20f08:	ldr	r0, [fp, #-76]	; 0xffffffb4
   20f0c:	tst	r0, #1
   20f10:	bne	215ac <_obstack_memory_used@@Base+0x11cc>
   20f14:	ldr	r2, [sp, #84]	; 0x54
   20f18:	cmp	r2, #0
   20f1c:	mov	r0, r2
   20f20:	movwne	r0, #1
   20f24:	clz	r1, sl
   20f28:	lsr	r1, r1, #5
   20f2c:	orrs	r0, r0, r1
   20f30:	moveq	r2, sl
   20f34:	str	r2, [sp, #84]	; 0x54
   20f38:	moveq	sl, r0
   20f3c:	cmp	r8, sl
   20f40:	movcc	r0, #39	; 0x27
   20f44:	strbcc	r0, [r5, r8]
   20f48:	add	r0, r8, #1
   20f4c:	cmp	r0, sl
   20f50:	movcc	r1, #92	; 0x5c
   20f54:	strbcc	r1, [r5, r0]
   20f58:	add	r0, r8, #2
   20f5c:	cmp	r0, sl
   20f60:	movcc	r1, #39	; 0x27
   20f64:	strbcc	r1, [r5, r0]
   20f68:	add	r8, r8, #3
   20f6c:	mov	r0, #0
   20f70:	str	r0, [fp, #-56]	; 0xffffffc8
   20f74:	mov	r9, #0
   20f78:	mov	r6, #1
   20f7c:	b	20c68 <_obstack_memory_used@@Base+0x888>
   20f80:	ldr	r0, [sp, #44]	; 0x2c
   20f84:	cmp	r0, #1
   20f88:	bne	21094 <_obstack_memory_used@@Base+0xcb4>
   20f8c:	str	lr, [sp, #32]
   20f90:	bl	11f78 <__ctype_b_loc@plt>
   20f94:	ldr	ip, [fp, #-80]	; 0xffffffb0
   20f98:	ldr	r0, [r0]
   20f9c:	add	r0, r0, r4, lsl #1
   20fa0:	ldrb	r0, [r0, #1]
   20fa4:	ubfx	r6, r0, #6, #1
   20fa8:	mov	r2, #1
   20fac:	ldr	r0, [sp, #60]	; 0x3c
   20fb0:	orr	r1, r6, r0
   20fb4:	cmp	r2, #1
   20fb8:	bhi	212ec <_obstack_memory_used@@Base+0xf0c>
   20fbc:	tst	r1, #1
   20fc0:	beq	212ec <_obstack_memory_used@@Base+0xf0c>
   20fc4:	ldr	lr, [sp, #32]
   20fc8:	b	20c68 <_obstack_memory_used@@Base+0x888>
   20fcc:	mov	r9, #0
   20fd0:	mov	r0, #92	; 0x5c
   20fd4:	ldr	r1, [sp, #56]	; 0x38
   20fd8:	cmp	r1, #0
   20fdc:	beq	21054 <_obstack_memory_used@@Base+0xc74>
   20fe0:	mov	r4, #92	; 0x5c
   20fe4:	mov	r6, #0
   20fe8:	cmp	r9, #0
   20fec:	bne	21024 <_obstack_memory_used@@Base+0xc44>
   20ff0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   20ff4:	tst	r0, #1
   20ff8:	beq	21024 <_obstack_memory_used@@Base+0xc44>
   20ffc:	cmp	r8, sl
   21000:	movcc	r0, #39	; 0x27
   21004:	strbcc	r0, [r5, r8]
   21008:	add	r0, r8, #1
   2100c:	cmp	r0, sl
   21010:	movcc	r1, #39	; 0x27
   21014:	strbcc	r1, [r5, r0]
   21018:	add	r8, r8, #2
   2101c:	mov	r0, #0
   21020:	str	r0, [fp, #-56]	; 0xffffffc8
   21024:	mov	r1, r6
   21028:	mov	r0, r4
   2102c:	cmp	r8, sl
   21030:	strbcc	r0, [r5, r8]
   21034:	ldr	r0, [fp, #-48]	; 0xffffffd0
   21038:	and	r0, r0, r1
   2103c:	str	r0, [fp, #-48]	; 0xffffffd0
   21040:	add	r8, r8, #1
   21044:	add	r7, r7, #1
   21048:	cmn	lr, #1
   2104c:	bne	209a0 <_obstack_memory_used@@Base+0x5c0>
   21050:	b	209ac <_obstack_memory_used@@Base+0x5cc>
   21054:	mov	r9, #0
   21058:	ldr	r1, [sp, #92]	; 0x5c
   2105c:	tst	r1, #1
   21060:	mov	r6, #0
   21064:	mov	r1, #0
   21068:	beq	20c68 <_obstack_memory_used@@Base+0x888>
   2106c:	b	20cb0 <_obstack_memory_used@@Base+0x8d0>
   21070:	mov	r4, #0
   21074:	ldr	r0, [sp, #40]	; 0x28
   21078:	cmp	r0, #0
   2107c:	mov	r9, #0
   21080:	mov	r6, #0
   21084:	beq	20c68 <_obstack_memory_used@@Base+0x888>
   21088:	b	21044 <_obstack_memory_used@@Base+0xc64>
   2108c:	mov	r6, #1
   21090:	b	20c68 <_obstack_memory_used@@Base+0x888>
   21094:	mov	r0, #0
   21098:	str	r0, [fp, #-36]	; 0xffffffdc
   2109c:	str	r0, [fp, #-40]	; 0xffffffd8
   210a0:	cmn	lr, #1
   210a4:	bne	210b8 <_obstack_memory_used@@Base+0xcd8>
   210a8:	mov	r0, ip
   210ac:	bl	11fc0 <strlen@plt>
   210b0:	ldr	ip, [fp, #-80]	; 0xffffffb0
   210b4:	mov	lr, r0
   210b8:	ldr	r0, [sp, #76]	; 0x4c
   210bc:	add	r0, r0, r7
   210c0:	str	r0, [sp, #24]
   210c4:	mov	r6, #1
   210c8:	mov	r2, #0
   210cc:	sub	r0, fp, #40	; 0x28
   210d0:	mov	r3, r0
   210d4:	str	r5, [sp, #28]
   210d8:	str	lr, [sp, #32]
   210dc:	b	21120 <_obstack_memory_used@@Base+0xd40>
   210e0:	ldr	r5, [sp, #52]	; 0x34
   210e4:	add	r5, r0, r5
   210e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   210ec:	bl	11e1c <iswprint@plt>
   210f0:	cmp	r0, #0
   210f4:	movwne	r0, #1
   210f8:	and	r6, r6, r0
   210fc:	sub	r0, fp, #40	; 0x28
   21100:	bl	11d80 <mbsinit@plt>
   21104:	sub	r3, fp, #40	; 0x28
   21108:	mov	r2, r5
   2110c:	ldr	lr, [sp, #32]
   21110:	cmp	r0, #0
   21114:	ldr	r5, [sp, #28]
   21118:	ldr	ip, [fp, #-80]	; 0xffffffb0
   2111c:	bne	20fac <_obstack_memory_used@@Base+0xbcc>
   21120:	str	r2, [sp, #52]	; 0x34
   21124:	add	r0, r2, r7
   21128:	add	r1, ip, r0
   2112c:	str	r0, [sp, #48]	; 0x30
   21130:	sub	r2, lr, r0
   21134:	sub	r0, fp, #44	; 0x2c
   21138:	bl	1dd0c <putc_unlocked@plt+0xbb54>
   2113c:	cmp	r0, #0
   21140:	beq	214b8 <_obstack_memory_used@@Base+0x10d8>
   21144:	cmn	r0, #1
   21148:	beq	21474 <_obstack_memory_used@@Base+0x1094>
   2114c:	cmn	r0, #2
   21150:	ldr	lr, [sp, #32]
   21154:	beq	2147c <_obstack_memory_used@@Base+0x109c>
   21158:	cmp	r0, #2
   2115c:	mov	r1, #0
   21160:	movwcc	r1, #1
   21164:	ldr	r2, [sp, #68]	; 0x44
   21168:	eor	r2, r2, #1
   2116c:	orrs	r1, r2, r1
   21170:	bne	210e0 <_obstack_memory_used@@Base+0xd00>
   21174:	ldr	r1, [sp, #52]	; 0x34
   21178:	ldr	r2, [sp, #24]
   2117c:	add	r1, r2, r1
   21180:	sub	r2, r0, #1
   21184:	b	21194 <_obstack_memory_used@@Base+0xdb4>
   21188:	add	r1, r1, #1
   2118c:	subs	r2, r2, #1
   21190:	beq	210e0 <_obstack_memory_used@@Base+0xd00>
   21194:	ldrb	r3, [r1]
   21198:	sub	r3, r3, #91	; 0x5b
   2119c:	cmp	r3, #33	; 0x21
   211a0:	bhi	21188 <_obstack_memory_used@@Base+0xda8>
   211a4:	add	r5, pc, #0
   211a8:	ldr	pc, [r5, r3, lsl #2]
   211ac:	andeq	r1, r2, r4, lsr #11
   211b0:	andeq	r1, r2, r4, lsr #11
   211b4:	andeq	r1, r2, r8, lsl #3
   211b8:	andeq	r1, r2, r4, lsr #11
   211bc:	andeq	r1, r2, r8, lsl #3
   211c0:	andeq	r1, r2, r4, lsr #11
   211c4:	andeq	r1, r2, r8, lsl #3
   211c8:	andeq	r1, r2, r8, lsl #3
   211cc:	andeq	r1, r2, r8, lsl #3
   211d0:	andeq	r1, r2, r8, lsl #3
   211d4:	andeq	r1, r2, r8, lsl #3
   211d8:	andeq	r1, r2, r8, lsl #3
   211dc:	andeq	r1, r2, r8, lsl #3
   211e0:	andeq	r1, r2, r8, lsl #3
   211e4:	andeq	r1, r2, r8, lsl #3
   211e8:	andeq	r1, r2, r8, lsl #3
   211ec:	andeq	r1, r2, r8, lsl #3
   211f0:	andeq	r1, r2, r8, lsl #3
   211f4:	andeq	r1, r2, r8, lsl #3
   211f8:	andeq	r1, r2, r8, lsl #3
   211fc:	andeq	r1, r2, r8, lsl #3
   21200:	andeq	r1, r2, r8, lsl #3
   21204:	andeq	r1, r2, r8, lsl #3
   21208:	andeq	r1, r2, r8, lsl #3
   2120c:	andeq	r1, r2, r8, lsl #3
   21210:	andeq	r1, r2, r8, lsl #3
   21214:	andeq	r1, r2, r8, lsl #3
   21218:	andeq	r1, r2, r8, lsl #3
   2121c:	andeq	r1, r2, r8, lsl #3
   21220:	andeq	r1, r2, r8, lsl #3
   21224:	andeq	r1, r2, r8, lsl #3
   21228:	andeq	r1, r2, r8, lsl #3
   2122c:	andeq	r1, r2, r8, lsl #3
   21230:	andeq	r1, r2, r4, lsr #11
   21234:	mov	r8, r0
   21238:	b	20c68 <_obstack_memory_used@@Base+0x888>
   2123c:	ldr	r0, [sp, #36]	; 0x24
   21240:	cmp	r0, #0
   21244:	beq	212e4 <_obstack_memory_used@@Base+0xf04>
   21248:	add	r0, r7, #2
   2124c:	cmp	r0, lr
   21250:	bcs	212e4 <_obstack_memory_used@@Base+0xf04>
   21254:	add	r1, r7, ip
   21258:	ldrb	r1, [r1, #1]
   2125c:	cmp	r1, #63	; 0x3f
   21260:	bne	212e4 <_obstack_memory_used@@Base+0xf04>
   21264:	ldrb	r1, [ip, r0]
   21268:	sub	r2, r1, #33	; 0x21
   2126c:	cmp	r2, #29
   21270:	bhi	212e4 <_obstack_memory_used@@Base+0xf04>
   21274:	mov	r3, #1
   21278:	movw	r6, #20929	; 0x51c1
   2127c:	movt	r6, #14336	; 0x3800
   21280:	tst	r6, r3, lsl r2
   21284:	beq	212e4 <_obstack_memory_used@@Base+0xf04>
   21288:	ldr	r2, [fp, #-76]	; 0xffffffb4
   2128c:	tst	r2, #1
   21290:	bne	215ac <_obstack_memory_used@@Base+0x11cc>
   21294:	cmp	r8, sl
   21298:	movcc	r2, #63	; 0x3f
   2129c:	strbcc	r2, [r5, r8]
   212a0:	add	r2, r8, #1
   212a4:	cmp	r2, sl
   212a8:	movcc	r3, #34	; 0x22
   212ac:	strbcc	r3, [r5, r2]
   212b0:	add	r2, r8, #2
   212b4:	cmp	r2, sl
   212b8:	movcc	r3, #34	; 0x22
   212bc:	strbcc	r3, [r5, r2]
   212c0:	add	r2, r8, #3
   212c4:	cmp	r2, sl
   212c8:	movcc	r3, #63	; 0x3f
   212cc:	strbcc	r3, [r5, r2]
   212d0:	add	r8, r8, #4
   212d4:	mov	r7, r0
   212d8:	mov	r4, r1
   212dc:	mov	r6, #0
   212e0:	b	20c68 <_obstack_memory_used@@Base+0x888>
   212e4:	mov	r6, #0
   212e8:	b	20c68 <_obstack_memory_used@@Base+0x888>
   212ec:	add	r0, r2, r7
   212f0:	str	r0, [sp, #52]	; 0x34
   212f4:	mov	r2, #0
   212f8:	ldr	lr, [sp, #32]
   212fc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   21300:	str	r1, [sp, #48]	; 0x30
   21304:	tst	r1, #1
   21308:	bne	213e4 <_obstack_memory_used@@Base+0x1004>
   2130c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   21310:	tst	r1, #1
   21314:	bne	215ac <_obstack_memory_used@@Base+0x11cc>
   21318:	mov	r3, r0
   2131c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   21320:	subs	r1, r0, #2
   21324:	movwne	r1, #1
   21328:	orr	r1, r1, r3
   2132c:	tst	r1, #1
   21330:	bne	21368 <_obstack_memory_used@@Base+0xf88>
   21334:	cmp	r8, sl
   21338:	movcc	r0, #39	; 0x27
   2133c:	strbcc	r0, [r5, r8]
   21340:	add	r2, r8, #1
   21344:	cmp	r2, sl
   21348:	movcc	r0, #36	; 0x24
   2134c:	strbcc	r0, [r5, r2]
   21350:	add	r2, r8, #2
   21354:	cmp	r2, sl
   21358:	movcc	r0, #39	; 0x27
   2135c:	strbcc	r0, [r5, r2]
   21360:	add	r8, r8, #3
   21364:	mov	r3, #1
   21368:	cmp	r8, sl
   2136c:	movcc	r1, #92	; 0x5c
   21370:	strbcc	r1, [r5, r8]
   21374:	add	r2, r8, #1
   21378:	cmp	r2, sl
   2137c:	bcs	21390 <_obstack_memory_used@@Base+0xfb0>
   21380:	uxtb	r1, r4
   21384:	mov	r0, #48	; 0x30
   21388:	orr	r1, r0, r1, lsr #6
   2138c:	strb	r1, [r5, r2]
   21390:	add	r2, r8, #2
   21394:	cmp	r2, sl
   21398:	lsrcc	r1, r4, #3
   2139c:	movcc	r0, #6
   213a0:	bficc	r1, r0, #3, #29
   213a4:	strbcc	r1, [r5, r2]
   213a8:	mov	r0, #6
   213ac:	bfi	r4, r0, #3, #29
   213b0:	add	r8, r8, #3
   213b4:	mov	r2, #1
   213b8:	mov	r0, r3
   213bc:	b	21408 <_obstack_memory_used@@Base+0x1028>
   213c0:	cmp	r8, sl
   213c4:	strbcc	r4, [r5, r8]
   213c8:	ldr	r1, [sp, #76]	; 0x4c
   213cc:	ldrb	r4, [r1, r7]
   213d0:	add	r8, r8, #1
   213d4:	mov	r7, r3
   213d8:	ldr	r1, [sp, #48]	; 0x30
   213dc:	tst	r1, #1
   213e0:	beq	2130c <_obstack_memory_used@@Base+0xf2c>
   213e4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   213e8:	tst	r1, #1
   213ec:	beq	21400 <_obstack_memory_used@@Base+0x1020>
   213f0:	cmp	r8, sl
   213f4:	movcc	r1, #92	; 0x5c
   213f8:	strbcc	r1, [r5, r8]
   213fc:	add	r8, r8, #1
   21400:	mov	r1, #0
   21404:	str	r1, [fp, #-52]	; 0xffffffcc
   21408:	and	r9, r2, #1
   2140c:	add	r3, r7, #1
   21410:	ldr	r1, [sp, #52]	; 0x34
   21414:	cmp	r1, r3
   21418:	bls	2145c <_obstack_memory_used@@Base+0x107c>
   2141c:	cmp	r9, #0
   21420:	movwne	r9, #1
   21424:	mvn	r1, r0
   21428:	orr	r1, r1, r9
   2142c:	tst	r1, #1
   21430:	bne	213c0 <_obstack_memory_used@@Base+0xfe0>
   21434:	cmp	r8, sl
   21438:	movcc	r1, #39	; 0x27
   2143c:	strbcc	r1, [r5, r8]
   21440:	add	r1, r8, #1
   21444:	cmp	r1, sl
   21448:	movcc	r0, #39	; 0x27
   2144c:	strbcc	r0, [r5, r1]
   21450:	add	r8, r8, #2
   21454:	mov	r0, #0
   21458:	b	213c0 <_obstack_memory_used@@Base+0xfe0>
   2145c:	str	r0, [fp, #-56]	; 0xffffffc8
   21460:	cmp	r9, #0
   21464:	movwne	r9, #1
   21468:	cmp	r9, #0
   2146c:	beq	20ff0 <_obstack_memory_used@@Base+0xc10>
   21470:	b	21024 <_obstack_memory_used@@Base+0xc44>
   21474:	mov	r6, #0
   21478:	b	214b8 <_obstack_memory_used@@Base+0x10d8>
   2147c:	mov	r6, #0
   21480:	ldr	r0, [sp, #48]	; 0x30
   21484:	cmp	r0, lr
   21488:	bcs	214b8 <_obstack_memory_used@@Base+0x10d8>
   2148c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   21490:	add	r0, ip, r7
   21494:	ldr	r2, [sp, #52]	; 0x34
   21498:	ldrb	r1, [r0, r2]
   2149c:	cmp	r1, #0
   214a0:	beq	20fac <_obstack_memory_used@@Base+0xbcc>
   214a4:	add	r2, r2, #1
   214a8:	add	r1, r7, r2
   214ac:	cmp	r1, lr
   214b0:	bcc	21498 <_obstack_memory_used@@Base+0x10b8>
   214b4:	b	20fac <_obstack_memory_used@@Base+0xbcc>
   214b8:	ldr	ip, [fp, #-80]	; 0xffffffb0
   214bc:	ldr	r2, [sp, #52]	; 0x34
   214c0:	b	20fac <_obstack_memory_used@@Base+0xbcc>
   214c4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   214c8:	eor	r0, r1, #2
   214cc:	orr	r0, r0, r8
   214d0:	clz	r0, r0
   214d4:	lsr	r0, r0, #5
   214d8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   214dc:	tst	r3, r0
   214e0:	bne	215ac <_obstack_memory_used@@Base+0x11cc>
   214e4:	mov	r6, r5
   214e8:	subs	r0, r1, #2
   214ec:	movwne	r0, #1
   214f0:	orr	r0, r3, r0
   214f4:	tst	r0, #1
   214f8:	ldr	r2, [sp, #92]	; 0x5c
   214fc:	ldreq	r0, [sp, #64]	; 0x40
   21500:	eoreq	r0, r0, #1
   21504:	tsteq	r0, #1
   21508:	bne	21548 <_obstack_memory_used@@Base+0x1168>
   2150c:	mov	r9, lr
   21510:	ldr	r0, [fp, #-48]	; 0xffffffd0
   21514:	tst	r0, #1
   21518:	bne	21614 <_obstack_memory_used@@Base+0x1234>
   2151c:	ldr	r0, [sp, #84]	; 0x54
   21520:	cmp	r0, #0
   21524:	beq	21548 <_obstack_memory_used@@Base+0x1168>
   21528:	mov	r0, #0
   2152c:	str	r0, [fp, #-48]	; 0xffffffd0
   21530:	mov	r1, #2
   21534:	cmp	sl, #0
   21538:	mov	r0, r2
   2153c:	mov	r4, r3
   21540:	ldr	r7, [sp, #84]	; 0x54
   21544:	beq	20720 <_obstack_memory_used@@Base+0x340>
   21548:	ldr	r1, [fp, #-84]	; 0xffffffac
   2154c:	clz	r0, r1
   21550:	lsr	r0, r0, #5
   21554:	orr	r0, r0, r3
   21558:	tst	r0, #1
   2155c:	bne	21588 <_obstack_memory_used@@Base+0x11a8>
   21560:	ldrb	r0, [r1]
   21564:	cmp	r0, #0
   21568:	beq	21588 <_obstack_memory_used@@Base+0x11a8>
   2156c:	add	r1, r1, #1
   21570:	cmp	r8, sl
   21574:	strbcc	r0, [r6, r8]
   21578:	add	r8, r8, #1
   2157c:	ldrb	r0, [r1], #1
   21580:	cmp	r0, #0
   21584:	bne	21570 <_obstack_memory_used@@Base+0x1190>
   21588:	cmp	r8, sl
   2158c:	movcc	r0, #0
   21590:	strbcc	r0, [r6, r8]
   21594:	b	21608 <_obstack_memory_used@@Base+0x1228>
   21598:	ldr	ip, [fp, #-80]	; 0xffffffb0
   2159c:	mov	lr, r4
   215a0:	b	215ac <_obstack_memory_used@@Base+0x11cc>
   215a4:	ldr	r5, [sp, #28]
   215a8:	ldr	ip, [fp, #-80]	; 0xffffffb0
   215ac:	mov	r0, #0
   215b0:	ldr	r1, [fp, #12]
   215b4:	bic	r1, r1, #2
   215b8:	mov	r2, #2
   215bc:	ldr	r3, [sp, #92]	; 0x5c
   215c0:	tst	r3, #1
   215c4:	movwne	r2, #4
   215c8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   215cc:	cmp	r3, #2
   215d0:	movne	r2, r3
   215d4:	str	r2, [sp]
   215d8:	str	r1, [sp, #4]
   215dc:	str	r0, [sp, #8]
   215e0:	ldr	r0, [sp, #80]	; 0x50
   215e4:	str	r0, [sp, #12]
   215e8:	ldr	r0, [sp, #88]	; 0x58
   215ec:	str	r0, [sp, #16]
   215f0:	mov	r0, r5
   215f4:	mov	r1, sl
   215f8:	mov	r2, ip
   215fc:	mov	r3, lr
   21600:	bl	20694 <_obstack_memory_used@@Base+0x2b4>
   21604:	mov	r8, r0
   21608:	mov	r0, r8
   2160c:	sub	sp, fp, #28
   21610:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21614:	mov	r0, #5
   21618:	str	r0, [sp]
   2161c:	ldr	r0, [fp, #12]
   21620:	str	r0, [sp, #4]
   21624:	ldr	r0, [fp, #16]
   21628:	str	r0, [sp, #8]
   2162c:	ldr	r0, [sp, #80]	; 0x50
   21630:	str	r0, [sp, #12]
   21634:	ldr	r0, [sp, #88]	; 0x58
   21638:	str	r0, [sp, #16]
   2163c:	mov	r0, r6
   21640:	ldr	r1, [sp, #84]	; 0x54
   21644:	ldr	r2, [fp, #-80]	; 0xffffffb0
   21648:	mov	r3, r9
   2164c:	b	21600 <_obstack_memory_used@@Base+0x1220>
   21650:	bl	1214c <abort@plt>
   21654:	mov	r3, r2
   21658:	mov	r2, #0
   2165c:	b	21660 <_obstack_memory_used@@Base+0x1280>
   21660:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21664:	add	fp, sp, #28
   21668:	sub	sp, sp, #36	; 0x24
   2166c:	mov	r4, r2
   21670:	str	r2, [sp, #24]
   21674:	mov	r5, r1
   21678:	mov	r6, r0
   2167c:	str	r0, [sp, #20]
   21680:	movw	r8, #41984	; 0xa400
   21684:	movt	r8, #3
   21688:	cmp	r3, #0
   2168c:	movne	r8, r3
   21690:	bl	11fe4 <__errno_location@plt>
   21694:	str	r0, [sp, #28]
   21698:	ldm	r8, {r3, r9}
   2169c:	ldr	r1, [r8, #40]	; 0x28
   216a0:	ldr	r2, [r8, #44]	; 0x2c
   216a4:	ldr	r7, [r0]
   216a8:	str	r7, [sp, #32]
   216ac:	add	sl, r8, #8
   216b0:	cmp	r4, #0
   216b4:	orreq	r9, r9, #1
   216b8:	stm	sp, {r3, r9, sl}
   216bc:	str	r1, [sp, #12]
   216c0:	str	r2, [sp, #16]
   216c4:	mov	r0, #0
   216c8:	mov	r1, #0
   216cc:	mov	r2, r6
   216d0:	mov	r3, r5
   216d4:	mov	r7, r5
   216d8:	bl	20694 <_obstack_memory_used@@Base+0x2b4>
   216dc:	mov	r5, r0
   216e0:	add	r4, r0, #1
   216e4:	mov	r0, r4
   216e8:	bl	22dec <_obstack_memory_used@@Base+0x2a0c>
   216ec:	mov	r6, r0
   216f0:	ldr	r0, [r8]
   216f4:	ldr	r1, [r8, #40]	; 0x28
   216f8:	ldr	r2, [r8, #44]	; 0x2c
   216fc:	stm	sp, {r0, r9, sl}
   21700:	str	r1, [sp, #12]
   21704:	str	r2, [sp, #16]
   21708:	mov	r0, r6
   2170c:	mov	r1, r4
   21710:	ldr	r2, [sp, #20]
   21714:	mov	r3, r7
   21718:	bl	20694 <_obstack_memory_used@@Base+0x2b4>
   2171c:	ldr	r0, [sp, #24]
   21720:	ldr	r1, [sp, #32]
   21724:	ldr	r2, [sp, #28]
   21728:	str	r1, [r2]
   2172c:	cmp	r0, #0
   21730:	strne	r5, [r0]
   21734:	mov	r0, r6
   21738:	sub	sp, fp, #28
   2173c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21740:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   21744:	add	fp, sp, #24
   21748:	movw	r8, #37584	; 0x92d0
   2174c:	movt	r8, #3
   21750:	ldr	r4, [r8]
   21754:	movw	r5, #37588	; 0x92d4
   21758:	movt	r5, #3
   2175c:	ldr	r0, [r5]
   21760:	cmp	r0, #2
   21764:	blt	21790 <_obstack_memory_used@@Base+0x13b0>
   21768:	add	r7, r4, #12
   2176c:	mov	r6, #0
   21770:	ldr	r0, [r7, r6, lsl #3]
   21774:	bl	1bcc8 <putc_unlocked@plt+0x9b10>
   21778:	add	r0, r6, #1
   2177c:	ldr	r1, [r5]
   21780:	add	r2, r6, #2
   21784:	cmp	r2, r1
   21788:	mov	r6, r0
   2178c:	blt	21770 <_obstack_memory_used@@Base+0x1390>
   21790:	ldr	r0, [r4, #4]
   21794:	movw	r9, #42032	; 0xa430
   21798:	movt	r9, #3
   2179c:	cmp	r0, r9
   217a0:	movw	r7, #37592	; 0x92d8
   217a4:	movt	r7, #3
   217a8:	beq	217b8 <_obstack_memory_used@@Base+0x13d8>
   217ac:	bl	1bcc8 <putc_unlocked@plt+0x9b10>
   217b0:	mov	r0, #256	; 0x100
   217b4:	stm	r7, {r0, r9}
   217b8:	cmp	r4, r7
   217bc:	beq	217cc <_obstack_memory_used@@Base+0x13ec>
   217c0:	mov	r0, r4
   217c4:	bl	1bcc8 <putc_unlocked@plt+0x9b10>
   217c8:	str	r7, [r8]
   217cc:	mov	r0, #1
   217d0:	str	r0, [r5]
   217d4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   217d8:	movw	r3, #41984	; 0xa400
   217dc:	movt	r3, #3
   217e0:	mvn	r2, #0
   217e4:	b	217e8 <_obstack_memory_used@@Base+0x1408>
   217e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   217ec:	add	fp, sp, #28
   217f0:	sub	sp, sp, #44	; 0x2c
   217f4:	mov	r7, r3
   217f8:	str	r2, [sp, #36]	; 0x24
   217fc:	str	r1, [sp, #32]
   21800:	mov	r5, r0
   21804:	bl	11fe4 <__errno_location@plt>
   21808:	cmp	r5, #0
   2180c:	bmi	2197c <_obstack_memory_used@@Base+0x159c>
   21810:	cmn	r5, #-2147483647	; 0x80000001
   21814:	beq	2197c <_obstack_memory_used@@Base+0x159c>
   21818:	movw	r4, #37584	; 0x92d0
   2181c:	movt	r4, #3
   21820:	ldr	r6, [r4]
   21824:	str	r0, [sp, #28]
   21828:	ldr	r0, [r0]
   2182c:	str	r0, [sp, #24]
   21830:	movw	r8, #37588	; 0x92d4
   21834:	movt	r8, #3
   21838:	ldr	r1, [r8]
   2183c:	cmp	r1, r5
   21840:	ble	2184c <_obstack_memory_used@@Base+0x146c>
   21844:	mov	sl, r6
   21848:	b	218b8 <_obstack_memory_used@@Base+0x14d8>
   2184c:	str	r1, [fp, #-32]	; 0xffffffe0
   21850:	mov	r0, #8
   21854:	str	r0, [sp]
   21858:	movw	r9, #37592	; 0x92d8
   2185c:	movt	r9, #3
   21860:	subs	r0, r6, r9
   21864:	movne	r0, r6
   21868:	sub	r1, r5, r1
   2186c:	add	r2, r1, #1
   21870:	sub	r1, fp, #32
   21874:	mvn	r3, #-2147483648	; 0x80000000
   21878:	bl	22ec8 <_obstack_memory_used@@Base+0x2ae8>
   2187c:	mov	sl, r0
   21880:	str	r0, [r4]
   21884:	cmp	r6, r9
   21888:	bne	21894 <_obstack_memory_used@@Base+0x14b4>
   2188c:	ldrd	r0, [r9]
   21890:	stm	sl, {r0, r1}
   21894:	ldr	r1, [r8]
   21898:	add	r0, sl, r1, lsl #3
   2189c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   218a0:	sub	r1, r2, r1
   218a4:	lsl	r2, r1, #3
   218a8:	mov	r1, #0
   218ac:	bl	12008 <memset@plt>
   218b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   218b4:	str	r0, [r8]
   218b8:	mov	r9, sl
   218bc:	ldr	r6, [r9, r5, lsl #3]!
   218c0:	ldr	r4, [r9, #4]!
   218c4:	ldm	r7, {r0, r1}
   218c8:	ldr	r2, [r7, #40]	; 0x28
   218cc:	ldr	r3, [r7, #44]	; 0x2c
   218d0:	orr	r8, r1, #1
   218d4:	add	r1, r7, #8
   218d8:	stm	sp, {r0, r8}
   218dc:	str	r1, [sp, #20]
   218e0:	add	r0, sp, #8
   218e4:	stm	r0, {r1, r2, r3}
   218e8:	mov	r0, r4
   218ec:	mov	r1, r6
   218f0:	ldr	r2, [sp, #32]
   218f4:	ldr	r3, [sp, #36]	; 0x24
   218f8:	bl	20694 <_obstack_memory_used@@Base+0x2b4>
   218fc:	cmp	r6, r0
   21900:	bhi	21964 <_obstack_memory_used@@Base+0x1584>
   21904:	add	r6, r0, #1
   21908:	str	r6, [sl, r5, lsl #3]
   2190c:	movw	r0, #42032	; 0xa430
   21910:	movt	r0, #3
   21914:	cmp	r4, r0
   21918:	beq	21924 <_obstack_memory_used@@Base+0x1544>
   2191c:	mov	r0, r4
   21920:	bl	1bcc8 <putc_unlocked@plt+0x9b10>
   21924:	mov	r0, r6
   21928:	bl	22dec <_obstack_memory_used@@Base+0x2a0c>
   2192c:	mov	r4, r0
   21930:	str	r0, [r9]
   21934:	ldr	r0, [r7]
   21938:	ldr	r1, [r7, #40]	; 0x28
   2193c:	ldr	r2, [r7, #44]	; 0x2c
   21940:	stm	sp, {r0, r8}
   21944:	ldr	r0, [sp, #20]
   21948:	add	r3, sp, #8
   2194c:	stm	r3, {r0, r1, r2}
   21950:	mov	r0, r4
   21954:	mov	r1, r6
   21958:	ldr	r2, [sp, #32]
   2195c:	ldr	r3, [sp, #36]	; 0x24
   21960:	bl	20694 <_obstack_memory_used@@Base+0x2b4>
   21964:	ldr	r0, [sp, #28]
   21968:	ldr	r1, [sp, #24]
   2196c:	str	r1, [r0]
   21970:	mov	r0, r4
   21974:	sub	sp, fp, #28
   21978:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2197c:	bl	1214c <abort@plt>
   21980:	movw	r3, #41984	; 0xa400
   21984:	movt	r3, #3
   21988:	b	217e8 <_obstack_memory_used@@Base+0x1408>
   2198c:	mov	r1, r0
   21990:	mov	r0, #0
   21994:	b	217d8 <_obstack_memory_used@@Base+0x13f8>
   21998:	mov	r2, r1
   2199c:	mov	r1, r0
   219a0:	mov	r0, #0
   219a4:	b	21980 <_obstack_memory_used@@Base+0x15a0>
   219a8:	push	{r4, r5, r6, sl, fp, lr}
   219ac:	add	fp, sp, #16
   219b0:	sub	sp, sp, #48	; 0x30
   219b4:	mov	r4, r2
   219b8:	mov	r5, r0
   219bc:	mov	r6, sp
   219c0:	mov	r0, r6
   219c4:	bl	219e4 <_obstack_memory_used@@Base+0x1604>
   219c8:	mov	r0, r5
   219cc:	mov	r1, r4
   219d0:	mvn	r2, #0
   219d4:	mov	r3, r6
   219d8:	bl	217e8 <_obstack_memory_used@@Base+0x1408>
   219dc:	sub	sp, fp, #16
   219e0:	pop	{r4, r5, r6, sl, fp, pc}
   219e4:	push	{fp, lr}
   219e8:	mov	fp, sp
   219ec:	vmov.i32	q8, #0	; 0x00000000
   219f0:	mov	r2, #32
   219f4:	mov	r3, r0
   219f8:	vst1.32	{d16-d17}, [r3], r2
   219fc:	vst1.32	{d16-d17}, [r3]
   21a00:	add	r2, r0, #16
   21a04:	vst1.32	{d16-d17}, [r2]
   21a08:	cmp	r1, #10
   21a0c:	strne	r1, [r0]
   21a10:	popne	{fp, pc}
   21a14:	bl	1214c <abort@plt>
   21a18:	push	{r4, r5, r6, r7, fp, lr}
   21a1c:	add	fp, sp, #16
   21a20:	sub	sp, sp, #48	; 0x30
   21a24:	mov	r4, r3
   21a28:	mov	r5, r2
   21a2c:	mov	r6, r0
   21a30:	mov	r7, sp
   21a34:	mov	r0, r7
   21a38:	bl	219e4 <_obstack_memory_used@@Base+0x1604>
   21a3c:	mov	r0, r6
   21a40:	mov	r1, r5
   21a44:	mov	r2, r4
   21a48:	mov	r3, r7
   21a4c:	bl	217e8 <_obstack_memory_used@@Base+0x1408>
   21a50:	sub	sp, fp, #16
   21a54:	pop	{r4, r5, r6, r7, fp, pc}
   21a58:	mov	r2, r1
   21a5c:	mov	r1, r0
   21a60:	mov	r0, #0
   21a64:	b	219a8 <_obstack_memory_used@@Base+0x15c8>
   21a68:	mov	r3, r2
   21a6c:	mov	r2, r1
   21a70:	mov	r1, r0
   21a74:	mov	r0, #0
   21a78:	b	21a18 <_obstack_memory_used@@Base+0x1638>
   21a7c:	push	{r4, r5, r6, sl, fp, lr}
   21a80:	add	fp, sp, #16
   21a84:	sub	sp, sp, #48	; 0x30
   21a88:	mov	r4, r1
   21a8c:	mov	r5, r0
   21a90:	movw	r0, #41984	; 0xa400
   21a94:	movt	r0, #3
   21a98:	add	r1, r0, #16
   21a9c:	mov	r3, #32
   21aa0:	vld1.64	{d16-d17}, [r0], r3
   21aa4:	vld1.64	{d18-d19}, [r1]
   21aa8:	mov	r6, sp
   21aac:	add	r1, r6, #16
   21ab0:	vld1.64	{d20-d21}, [r0]
   21ab4:	vst1.64	{d18-d19}, [r1]
   21ab8:	mov	r0, r6
   21abc:	vst1.64	{d16-d17}, [r0], r3
   21ac0:	vst1.64	{d20-d21}, [r0]
   21ac4:	mov	r0, r6
   21ac8:	mov	r1, r2
   21acc:	mov	r2, #1
   21ad0:	bl	20588 <_obstack_memory_used@@Base+0x1a8>
   21ad4:	mov	r0, #0
   21ad8:	mov	r1, r5
   21adc:	mov	r2, r4
   21ae0:	mov	r3, r6
   21ae4:	bl	217e8 <_obstack_memory_used@@Base+0x1408>
   21ae8:	sub	sp, fp, #16
   21aec:	pop	{r4, r5, r6, sl, fp, pc}
   21af0:	mov	r2, r1
   21af4:	mvn	r1, #0
   21af8:	b	21a7c <_obstack_memory_used@@Base+0x169c>
   21afc:	mov	r1, #58	; 0x3a
   21b00:	b	21af0 <_obstack_memory_used@@Base+0x1710>
   21b04:	mov	r2, #58	; 0x3a
   21b08:	b	21a7c <_obstack_memory_used@@Base+0x169c>
   21b0c:	push	{r4, r5, r6, sl, fp, lr}
   21b10:	add	fp, sp, #16
   21b14:	sub	sp, sp, #48	; 0x30
   21b18:	mov	r4, r2
   21b1c:	mov	r5, r0
   21b20:	mov	r6, sp
   21b24:	mov	r0, r6
   21b28:	bl	219e4 <_obstack_memory_used@@Base+0x1604>
   21b2c:	mov	r0, r6
   21b30:	mov	r1, #58	; 0x3a
   21b34:	mov	r2, #1
   21b38:	bl	20588 <_obstack_memory_used@@Base+0x1a8>
   21b3c:	mov	r0, r5
   21b40:	mov	r1, r4
   21b44:	mvn	r2, #0
   21b48:	mov	r3, r6
   21b4c:	bl	217e8 <_obstack_memory_used@@Base+0x1408>
   21b50:	sub	sp, fp, #16
   21b54:	pop	{r4, r5, r6, sl, fp, pc}
   21b58:	push	{fp, lr}
   21b5c:	mov	fp, sp
   21b60:	sub	sp, sp, #8
   21b64:	mvn	ip, #0
   21b68:	str	ip, [sp]
   21b6c:	bl	21b78 <_obstack_memory_used@@Base+0x1798>
   21b70:	mov	sp, fp
   21b74:	pop	{fp, pc}
   21b78:	push	{r4, r5, r6, r7, fp, lr}
   21b7c:	add	fp, sp, #16
   21b80:	sub	sp, sp, #48	; 0x30
   21b84:	mov	r7, r3
   21b88:	mov	r5, r0
   21b8c:	movw	r0, #41984	; 0xa400
   21b90:	movt	r0, #3
   21b94:	add	r3, r0, #16
   21b98:	mov	r4, #32
   21b9c:	vld1.64	{d16-d17}, [r0], r4
   21ba0:	vld1.64	{d18-d19}, [r3]
   21ba4:	mov	r6, sp
   21ba8:	add	r3, r6, #16
   21bac:	vld1.64	{d20-d21}, [r0]
   21bb0:	vst1.64	{d18-d19}, [r3]
   21bb4:	mov	r0, r6
   21bb8:	vst1.64	{d16-d17}, [r0], r4
   21bbc:	vst1.64	{d20-d21}, [r0]
   21bc0:	mov	r0, r6
   21bc4:	bl	205e0 <_obstack_memory_used@@Base+0x200>
   21bc8:	ldr	r2, [fp, #8]
   21bcc:	mov	r0, r5
   21bd0:	mov	r1, r7
   21bd4:	mov	r3, r6
   21bd8:	bl	217e8 <_obstack_memory_used@@Base+0x1408>
   21bdc:	sub	sp, fp, #16
   21be0:	pop	{r4, r5, r6, r7, fp, pc}
   21be4:	mov	r3, r2
   21be8:	mov	r2, r1
   21bec:	mov	r1, r0
   21bf0:	mov	r0, #0
   21bf4:	b	21b58 <_obstack_memory_used@@Base+0x1778>
   21bf8:	push	{fp, lr}
   21bfc:	mov	fp, sp
   21c00:	sub	sp, sp, #8
   21c04:	mov	ip, r2
   21c08:	mov	r2, r1
   21c0c:	mov	r1, r0
   21c10:	str	r3, [sp]
   21c14:	mov	r0, #0
   21c18:	mov	r3, ip
   21c1c:	bl	21b78 <_obstack_memory_used@@Base+0x1798>
   21c20:	mov	sp, fp
   21c24:	pop	{fp, pc}
   21c28:	movw	r3, #37600	; 0x92e0
   21c2c:	movt	r3, #3
   21c30:	b	217e8 <_obstack_memory_used@@Base+0x1408>
   21c34:	mov	r2, r1
   21c38:	mov	r1, r0
   21c3c:	mov	r0, #0
   21c40:	b	21c28 <_obstack_memory_used@@Base+0x1848>
   21c44:	mvn	r2, #0
   21c48:	b	21c28 <_obstack_memory_used@@Base+0x1848>
   21c4c:	mov	r1, r0
   21c50:	mov	r0, #0
   21c54:	b	21c44 <_obstack_memory_used@@Base+0x1864>
   21c58:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   21c5c:	add	fp, sp, #24
   21c60:	sub	sp, sp, #16
   21c64:	mov	r4, r1
   21c68:	mov	r5, r0
   21c6c:	mov	r7, #0
   21c70:	mov	r0, #0
   21c74:	mov	r1, r5
   21c78:	mov	r2, #5
   21c7c:	bl	11db0 <dcgettext@plt>
   21c80:	cmp	r0, r5
   21c84:	beq	21c90 <_obstack_memory_used@@Base+0x18b0>
   21c88:	sub	sp, fp, #24
   21c8c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   21c90:	bl	23ebc <_obstack_memory_used@@Base+0x3adc>
   21c94:	mov	r6, r0
   21c98:	mov	r8, #56	; 0x38
   21c9c:	mov	r0, #45	; 0x2d
   21ca0:	stm	sp, {r0, r8}
   21ca4:	str	r7, [sp, #8]
   21ca8:	str	r7, [sp, #12]
   21cac:	mov	r0, r6
   21cb0:	mov	r1, #85	; 0x55
   21cb4:	mov	r2, #84	; 0x54
   21cb8:	mov	r3, #70	; 0x46
   21cbc:	bl	21d54 <_obstack_memory_used@@Base+0x1974>
   21cc0:	cmp	r0, #0
   21cc4:	beq	21ce0 <_obstack_memory_used@@Base+0x1900>
   21cc8:	ldrb	r1, [r5]
   21ccc:	movw	r2, #34452	; 0x8694
   21cd0:	movt	r2, #2
   21cd4:	movw	r0, #34456	; 0x8698
   21cd8:	movt	r0, #2
   21cdc:	b	21d24 <_obstack_memory_used@@Base+0x1944>
   21ce0:	mov	r0, #48	; 0x30
   21ce4:	mov	r1, #51	; 0x33
   21ce8:	str	r8, [sp]
   21cec:	stmib	sp, {r0, r1}
   21cf0:	str	r0, [sp, #12]
   21cf4:	mov	r0, r6
   21cf8:	mov	r1, #71	; 0x47
   21cfc:	mov	r2, #66	; 0x42
   21d00:	mov	r3, #49	; 0x31
   21d04:	bl	21d54 <_obstack_memory_used@@Base+0x1974>
   21d08:	cmp	r0, #0
   21d0c:	beq	21d34 <_obstack_memory_used@@Base+0x1954>
   21d10:	ldrb	r1, [r5]
   21d14:	movw	r2, #34460	; 0x869c
   21d18:	movt	r2, #2
   21d1c:	movw	r0, #34464	; 0x86a0
   21d20:	movt	r0, #2
   21d24:	cmp	r1, #96	; 0x60
   21d28:	moveq	r0, r2
   21d2c:	sub	sp, fp, #24
   21d30:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   21d34:	movw	r1, #34448	; 0x8690
   21d38:	movt	r1, #2
   21d3c:	movw	r0, #35364	; 0x8a24
   21d40:	movt	r0, #2
   21d44:	cmp	r4, #9
   21d48:	moveq	r0, r1
   21d4c:	sub	sp, fp, #24
   21d50:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   21d54:	push	{r4, r5, r6, r7, fp, lr}
   21d58:	add	fp, sp, #16
   21d5c:	sub	sp, sp, #16
   21d60:	mov	r4, r3
   21d64:	mov	r5, r2
   21d68:	mov	r7, r1
   21d6c:	mov	r6, r0
   21d70:	mov	r0, r1
   21d74:	bl	1aae0 <putc_unlocked@plt+0x8928>
   21d78:	ldrb	r1, [r6]
   21d7c:	cmp	r0, #0
   21d80:	andne	r1, r1, #223	; 0xdf
   21d84:	mov	r0, #0
   21d88:	cmp	r1, r7
   21d8c:	bne	21dc4 <_obstack_memory_used@@Base+0x19e4>
   21d90:	cmp	r7, #0
   21d94:	beq	21dcc <_obstack_memory_used@@Base+0x19ec>
   21d98:	ldr	r0, [fp, #20]
   21d9c:	ldr	r1, [fp, #16]
   21da0:	ldr	r2, [fp, #12]
   21da4:	ldr	r3, [fp, #8]
   21da8:	str	r2, [sp]
   21dac:	str	r1, [sp, #4]
   21db0:	str	r0, [sp, #8]
   21db4:	mov	r0, r6
   21db8:	mov	r1, r5
   21dbc:	mov	r2, r4
   21dc0:	bl	21dd8 <_obstack_memory_used@@Base+0x19f8>
   21dc4:	sub	sp, fp, #16
   21dc8:	pop	{r4, r5, r6, r7, fp, pc}
   21dcc:	mov	r0, #1
   21dd0:	sub	sp, fp, #16
   21dd4:	pop	{r4, r5, r6, r7, fp, pc}
   21dd8:	push	{r4, r5, r6, r7, fp, lr}
   21ddc:	add	fp, sp, #16
   21de0:	sub	sp, sp, #8
   21de4:	mov	r4, r3
   21de8:	mov	r5, r2
   21dec:	mov	r7, r1
   21df0:	mov	r6, r0
   21df4:	mov	r0, r1
   21df8:	bl	1aae0 <putc_unlocked@plt+0x8928>
   21dfc:	ldrb	r1, [r6, #1]
   21e00:	cmp	r0, #0
   21e04:	andne	r1, r1, #223	; 0xdf
   21e08:	mov	r0, #0
   21e0c:	cmp	r1, r7
   21e10:	bne	21e40 <_obstack_memory_used@@Base+0x1a60>
   21e14:	cmp	r7, #0
   21e18:	beq	21e48 <_obstack_memory_used@@Base+0x1a68>
   21e1c:	ldr	r0, [fp, #16]
   21e20:	ldr	r1, [fp, #12]
   21e24:	ldr	r3, [fp, #8]
   21e28:	str	r1, [sp]
   21e2c:	str	r0, [sp, #4]
   21e30:	mov	r0, r6
   21e34:	mov	r1, r5
   21e38:	mov	r2, r4
   21e3c:	bl	21e54 <_obstack_memory_used@@Base+0x1a74>
   21e40:	sub	sp, fp, #16
   21e44:	pop	{r4, r5, r6, r7, fp, pc}
   21e48:	mov	r0, #1
   21e4c:	sub	sp, fp, #16
   21e50:	pop	{r4, r5, r6, r7, fp, pc}
   21e54:	push	{r4, r5, r6, r7, fp, lr}
   21e58:	add	fp, sp, #16
   21e5c:	sub	sp, sp, #8
   21e60:	mov	r4, r3
   21e64:	mov	r5, r2
   21e68:	mov	r7, r1
   21e6c:	mov	r6, r0
   21e70:	mov	r0, r1
   21e74:	bl	1aae0 <putc_unlocked@plt+0x8928>
   21e78:	ldrb	r1, [r6, #2]
   21e7c:	cmp	r0, #0
   21e80:	andne	r1, r1, #223	; 0xdf
   21e84:	mov	r0, #0
   21e88:	cmp	r1, r7
   21e8c:	bne	21eb4 <_obstack_memory_used@@Base+0x1ad4>
   21e90:	cmp	r7, #0
   21e94:	beq	21ebc <_obstack_memory_used@@Base+0x1adc>
   21e98:	ldr	r0, [fp, #12]
   21e9c:	ldr	r3, [fp, #8]
   21ea0:	str	r0, [sp]
   21ea4:	mov	r0, r6
   21ea8:	mov	r1, r5
   21eac:	mov	r2, r4
   21eb0:	bl	21ec8 <_obstack_memory_used@@Base+0x1ae8>
   21eb4:	sub	sp, fp, #16
   21eb8:	pop	{r4, r5, r6, r7, fp, pc}
   21ebc:	mov	r0, #1
   21ec0:	sub	sp, fp, #16
   21ec4:	pop	{r4, r5, r6, r7, fp, pc}
   21ec8:	push	{r4, r5, r6, r7, fp, lr}
   21ecc:	add	fp, sp, #16
   21ed0:	mov	r4, r3
   21ed4:	mov	r5, r2
   21ed8:	mov	r7, r1
   21edc:	mov	r6, r0
   21ee0:	mov	r0, r1
   21ee4:	bl	1aae0 <putc_unlocked@plt+0x8928>
   21ee8:	ldrb	r1, [r6, #3]
   21eec:	ldr	r3, [fp, #8]
   21ef0:	cmp	r0, #0
   21ef4:	andne	r1, r1, #223	; 0xdf
   21ef8:	mov	r0, #0
   21efc:	cmp	r1, r7
   21f00:	bne	21f24 <_obstack_memory_used@@Base+0x1b44>
   21f04:	cmp	r7, #0
   21f08:	beq	21f20 <_obstack_memory_used@@Base+0x1b40>
   21f0c:	mov	r0, r6
   21f10:	mov	r1, r5
   21f14:	mov	r2, r4
   21f18:	pop	{r4, r5, r6, r7, fp, lr}
   21f1c:	b	21f28 <_obstack_memory_used@@Base+0x1b48>
   21f20:	mov	r0, #1
   21f24:	pop	{r4, r5, r6, r7, fp, pc}
   21f28:	push	{r4, r5, r6, r7, fp, lr}
   21f2c:	add	fp, sp, #16
   21f30:	mov	r4, r3
   21f34:	mov	r5, r2
   21f38:	mov	r7, r1
   21f3c:	mov	r6, r0
   21f40:	mov	r0, r1
   21f44:	bl	1aae0 <putc_unlocked@plt+0x8928>
   21f48:	ldrb	r1, [r6, #4]
   21f4c:	cmp	r0, #0
   21f50:	andne	r1, r1, #223	; 0xdf
   21f54:	mov	r0, #0
   21f58:	cmp	r1, r7
   21f5c:	bne	21f80 <_obstack_memory_used@@Base+0x1ba0>
   21f60:	cmp	r7, #0
   21f64:	beq	21f7c <_obstack_memory_used@@Base+0x1b9c>
   21f68:	mov	r0, r6
   21f6c:	mov	r1, r5
   21f70:	mov	r2, r4
   21f74:	pop	{r4, r5, r6, r7, fp, lr}
   21f78:	b	21f84 <_obstack_memory_used@@Base+0x1ba4>
   21f7c:	mov	r0, #1
   21f80:	pop	{r4, r5, r6, r7, fp, pc}
   21f84:	push	{r4, r5, r6, sl, fp, lr}
   21f88:	add	fp, sp, #16
   21f8c:	mov	r4, r2
   21f90:	mov	r6, r1
   21f94:	mov	r5, r0
   21f98:	mov	r0, r1
   21f9c:	bl	1aae0 <putc_unlocked@plt+0x8928>
   21fa0:	ldrb	r1, [r5, #5]
   21fa4:	cmp	r0, #0
   21fa8:	andne	r1, r1, #223	; 0xdf
   21fac:	mov	r0, #0
   21fb0:	cmp	r1, r6
   21fb4:	bne	21fd4 <_obstack_memory_used@@Base+0x1bf4>
   21fb8:	cmp	r6, #0
   21fbc:	beq	21fd0 <_obstack_memory_used@@Base+0x1bf0>
   21fc0:	mov	r0, r5
   21fc4:	mov	r1, r4
   21fc8:	pop	{r4, r5, r6, sl, fp, lr}
   21fcc:	b	21fd8 <_obstack_memory_used@@Base+0x1bf8>
   21fd0:	mov	r0, #1
   21fd4:	pop	{r4, r5, r6, sl, fp, pc}
   21fd8:	push	{r4, r5, fp, lr}
   21fdc:	add	fp, sp, #8
   21fe0:	mov	r5, r1
   21fe4:	mov	r4, r0
   21fe8:	mov	r0, r1
   21fec:	bl	1aae0 <putc_unlocked@plt+0x8928>
   21ff0:	ldrb	r1, [r4, #6]
   21ff4:	cmp	r0, #0
   21ff8:	andne	r1, r1, #223	; 0xdf
   21ffc:	mov	r0, #0
   22000:	cmp	r1, r5
   22004:	popne	{r4, r5, fp, pc}
   22008:	cmp	r5, #0
   2200c:	beq	2201c <_obstack_memory_used@@Base+0x1c3c>
   22010:	mov	r0, r4
   22014:	pop	{r4, r5, fp, lr}
   22018:	b	22024 <_obstack_memory_used@@Base+0x1c44>
   2201c:	mov	r0, #1
   22020:	pop	{r4, r5, fp, pc}
   22024:	push	{r4, sl, fp, lr}
   22028:	add	fp, sp, #8
   2202c:	mov	r4, r0
   22030:	mov	r0, #0
   22034:	bl	1aae0 <putc_unlocked@plt+0x8928>
   22038:	ldrb	r1, [r4, #7]
   2203c:	cmp	r0, #0
   22040:	beq	22054 <_obstack_memory_used@@Base+0x1c74>
   22044:	tst	r1, #223	; 0xdf
   22048:	bne	2205c <_obstack_memory_used@@Base+0x1c7c>
   2204c:	mov	r0, #1
   22050:	pop	{r4, sl, fp, pc}
   22054:	cmp	r1, #0
   22058:	beq	2204c <_obstack_memory_used@@Base+0x1c6c>
   2205c:	mov	r0, #0
   22060:	pop	{r4, sl, fp, pc}
   22064:	push	{r4, r5, r6, sl, fp, lr}
   22068:	add	fp, sp, #16
   2206c:	mov	r5, r1
   22070:	ldr	r4, [r0], #8
   22074:	cmp	r4, r0
   22078:	beq	2209c <_obstack_memory_used@@Base+0x1cbc>
   2207c:	mov	r0, r4
   22080:	mov	r1, r5
   22084:	bl	23a60 <_obstack_memory_used@@Base+0x3680>
   22088:	mov	r6, r0
   2208c:	cmp	r0, #0
   22090:	moveq	r6, r4
   22094:	mov	r0, r6
   22098:	pop	{r4, r5, r6, sl, fp, pc}
   2209c:	mov	r0, r5
   220a0:	bl	23a30 <_obstack_memory_used@@Base+0x3650>
   220a4:	cmp	r0, #0
   220a8:	beq	220c4 <_obstack_memory_used@@Base+0x1ce4>
   220ac:	mov	r6, r0
   220b0:	mov	r1, r4
   220b4:	mov	r2, r5
   220b8:	bl	11d74 <memcpy@plt>
   220bc:	mov	r0, r6
   220c0:	pop	{r4, r5, r6, sl, fp, pc}
   220c4:	mov	r6, #0
   220c8:	mov	r0, r6
   220cc:	pop	{r4, r5, r6, sl, fp, pc}
   220d0:	push	{r4, r5, fp, lr}
   220d4:	add	fp, sp, #8
   220d8:	mov	r4, r0
   220dc:	ldr	r5, [r0, #4]
   220e0:	bl	2212c <_obstack_memory_used@@Base+0x1d4c>
   220e4:	ldr	r0, [r4, #4]
   220e8:	cmp	r0, r5, lsl #1
   220ec:	bhi	22110 <_obstack_memory_used@@Base+0x1d30>
   220f0:	lsl	r5, r5, #1
   220f4:	mov	r0, r5
   220f8:	bl	23a30 <_obstack_memory_used@@Base+0x3650>
   220fc:	cmp	r0, #0
   22100:	stmne	r4, {r0, r5}
   22104:	movne	r0, #1
   22108:	popne	{r4, r5, fp, pc}
   2210c:	b	2211c <_obstack_memory_used@@Base+0x1d3c>
   22110:	bl	11fe4 <__errno_location@plt>
   22114:	mov	r1, #12
   22118:	str	r1, [r0]
   2211c:	mov	r0, r4
   22120:	bl	22140 <_obstack_memory_used@@Base+0x1d60>
   22124:	mov	r0, #0
   22128:	pop	{r4, r5, fp, pc}
   2212c:	mov	r1, r0
   22130:	ldr	r0, [r1], #8
   22134:	cmp	r0, r1
   22138:	bxeq	lr
   2213c:	b	1bcc8 <putc_unlocked@plt+0x9b10>
   22140:	mov	r1, #1024	; 0x400
   22144:	add	r2, r0, #8
   22148:	str	r2, [r0]
   2214c:	str	r1, [r0, #4]
   22150:	bx	lr
   22154:	push	{r4, r5, r6, r7, fp, lr}
   22158:	add	fp, sp, #16
   2215c:	mov	r4, r0
   22160:	add	r5, r0, #8
   22164:	ldrd	r0, [r0]
   22168:	lsl	r7, r1, #1
   2216c:	cmp	r0, r5
   22170:	beq	22194 <_obstack_memory_used@@Base+0x1db4>
   22174:	cmp	r7, r1
   22178:	bcc	221c8 <_obstack_memory_used@@Base+0x1de8>
   2217c:	mov	r1, r7
   22180:	bl	23a60 <_obstack_memory_used@@Base+0x3680>
   22184:	mov	r6, r0
   22188:	cmp	r0, #0
   2218c:	bne	221b4 <_obstack_memory_used@@Base+0x1dd4>
   22190:	b	221d4 <_obstack_memory_used@@Base+0x1df4>
   22194:	mov	r0, r7
   22198:	bl	23a30 <_obstack_memory_used@@Base+0x3650>
   2219c:	cmp	r0, #0
   221a0:	beq	221c0 <_obstack_memory_used@@Base+0x1de0>
   221a4:	mov	r6, r0
   221a8:	ldr	r2, [r4, #4]
   221ac:	mov	r1, r5
   221b0:	bl	11d74 <memcpy@plt>
   221b4:	strd	r6, [r4]
   221b8:	mov	r0, #1
   221bc:	pop	{r4, r5, r6, r7, fp, pc}
   221c0:	mov	r0, #0
   221c4:	pop	{r4, r5, r6, r7, fp, pc}
   221c8:	bl	11fe4 <__errno_location@plt>
   221cc:	mov	r1, #12
   221d0:	str	r1, [r0]
   221d4:	ldr	r0, [r4]
   221d8:	bl	1bcc8 <putc_unlocked@plt+0x9b10>
   221dc:	mov	r0, r4
   221e0:	bl	221ec <_obstack_memory_used@@Base+0x1e0c>
   221e4:	mov	r0, #0
   221e8:	pop	{r4, r5, r6, r7, fp, pc}
   221ec:	mov	r1, #1024	; 0x400
   221f0:	add	r2, r0, #8
   221f4:	str	r2, [r0]
   221f8:	str	r1, [r0, #4]
   221fc:	bx	lr
   22200:	push	{r4, sl, fp, lr}
   22204:	add	fp, sp, #8
   22208:	mov	r4, r1
   2220c:	bl	11f9c <getfilecon@plt>
   22210:	mov	r1, r4
   22214:	pop	{r4, sl, fp, lr}
   22218:	b	2221c <_obstack_memory_used@@Base+0x1e3c>
   2221c:	push	{r4, r5, fp, lr}
   22220:	add	fp, sp, #8
   22224:	cmp	r0, #10
   22228:	beq	22240 <_obstack_memory_used@@Base+0x1e60>
   2222c:	cmp	r0, #0
   22230:	bne	22288 <_obstack_memory_used@@Base+0x1ea8>
   22234:	bl	11fe4 <__errno_location@plt>
   22238:	mov	r1, #95	; 0x5f
   2223c:	b	22280 <_obstack_memory_used@@Base+0x1ea0>
   22240:	mov	r4, r1
   22244:	ldr	r5, [r1]
   22248:	movw	r1, #27222	; 0x6a56
   2224c:	movt	r1, #2
   22250:	mov	r0, r5
   22254:	bl	11ccc <strcmp@plt>
   22258:	mov	r1, r0
   2225c:	mov	r0, #10
   22260:	cmp	r1, #0
   22264:	popne	{r4, r5, fp, pc}
   22268:	mov	r0, r5
   2226c:	bl	12104 <freecon@plt>
   22270:	mov	r0, #0
   22274:	str	r0, [r4]
   22278:	bl	11fe4 <__errno_location@plt>
   2227c:	mov	r1, #61	; 0x3d
   22280:	str	r1, [r0]
   22284:	mvn	r0, #0
   22288:	pop	{r4, r5, fp, pc}
   2228c:	push	{r4, sl, fp, lr}
   22290:	add	fp, sp, #8
   22294:	mov	r4, r1
   22298:	bl	11f00 <lgetfilecon@plt>
   2229c:	mov	r1, r4
   222a0:	pop	{r4, sl, fp, lr}
   222a4:	b	2221c <_obstack_memory_used@@Base+0x1e3c>
   222a8:	push	{r4, sl, fp, lr}
   222ac:	add	fp, sp, #8
   222b0:	mov	r4, r1
   222b4:	bl	11dd4 <fgetfilecon@plt>
   222b8:	mov	r1, r4
   222bc:	pop	{r4, sl, fp, lr}
   222c0:	b	2221c <_obstack_memory_used@@Base+0x1e3c>
   222c4:	b	222c8 <_obstack_memory_used@@Base+0x1ee8>
   222c8:	push	{r4, r5, r6, r7, fp, lr}
   222cc:	add	fp, sp, #16
   222d0:	mov	r6, r2
   222d4:	mov	r4, r1
   222d8:	bl	22360 <_obstack_memory_used@@Base+0x1f80>
   222dc:	cmp	r0, #0
   222e0:	beq	22310 <_obstack_memory_used@@Base+0x1f30>
   222e4:	mov	r7, r0
   222e8:	bl	11fc0 <strlen@plt>
   222ec:	cmp	r0, r6
   222f0:	bcs	2232c <_obstack_memory_used@@Base+0x1f4c>
   222f4:	add	r2, r0, #1
   222f8:	mov	r0, r4
   222fc:	mov	r1, r7
   22300:	bl	11d74 <memcpy@plt>
   22304:	mov	r5, #0
   22308:	mov	r0, r5
   2230c:	pop	{r4, r5, r6, r7, fp, pc}
   22310:	mov	r5, #22
   22314:	cmp	r6, #0
   22318:	beq	22354 <_obstack_memory_used@@Base+0x1f74>
   2231c:	mov	r0, #0
   22320:	strb	r0, [r4]
   22324:	mov	r0, r5
   22328:	pop	{r4, r5, r6, r7, fp, pc}
   2232c:	mov	r5, #34	; 0x22
   22330:	cmp	r6, #0
   22334:	beq	22354 <_obstack_memory_used@@Base+0x1f74>
   22338:	sub	r6, r6, #1
   2233c:	mov	r0, r4
   22340:	mov	r1, r7
   22344:	mov	r2, r6
   22348:	bl	11d74 <memcpy@plt>
   2234c:	mov	r0, #0
   22350:	strb	r0, [r4, r6]
   22354:	mov	r0, r5
   22358:	pop	{r4, r5, r6, r7, fp, pc}
   2235c:	b	22360 <_obstack_memory_used@@Base+0x1f80>
   22360:	mov	r1, #0
   22364:	b	12074 <setlocale@plt>
   22368:	ldr	r0, [r0, #76]	; 0x4c
   2236c:	bx	lr
   22370:	ldr	r0, [r0, #92]	; 0x5c
   22374:	bx	lr
   22378:	ldr	r0, [r0, #84]	; 0x54
   2237c:	bx	lr
   22380:	mov	r0, #0
   22384:	bx	lr
   22388:	ldrd	r2, [r1, #72]	; 0x48
   2238c:	stm	r0, {r2, r3}
   22390:	bx	lr
   22394:	ldrd	r2, [r1, #88]	; 0x58
   22398:	stm	r0, {r2, r3}
   2239c:	bx	lr
   223a0:	ldrd	r2, [r1, #80]	; 0x50
   223a4:	stm	r0, {r2, r3}
   223a8:	bx	lr
   223ac:	mvn	r1, #0
   223b0:	str	r1, [r0]
   223b4:	str	r1, [r0, #4]
   223b8:	bx	lr
   223bc:	bx	lr
   223c0:	push	{r4, r5, r6, sl, fp, lr}
   223c4:	add	fp, sp, #16
   223c8:	mov	r4, r0
   223cc:	cmp	r0, #0
   223d0:	beq	223f4 <_obstack_memory_used@@Base+0x2014>
   223d4:	mov	r0, r4
   223d8:	bl	11fc0 <strlen@plt>
   223dc:	add	r5, r0, #1
   223e0:	cmp	r5, #58	; 0x3a
   223e4:	bls	223f8 <_obstack_memory_used@@Base+0x2018>
   223e8:	add	r0, r0, #10
   223ec:	bic	r0, r0, #3
   223f0:	b	223fc <_obstack_memory_used@@Base+0x201c>
   223f4:	mov	r5, #0
   223f8:	mov	r0, #64	; 0x40
   223fc:	bl	23a30 <_obstack_memory_used@@Base+0x3650>
   22400:	mov	r6, r0
   22404:	cmp	r0, #0
   22408:	beq	22438 <_obstack_memory_used@@Base+0x2058>
   2240c:	mov	r1, #0
   22410:	str	r1, [r6]
   22414:	cmp	r4, #0
   22418:	mov	r0, r4
   2241c:	movwne	r0, #1
   22420:	strb	r0, [r6, #4]
   22424:	mov	r0, r6
   22428:	strb	r1, [r0, #5]!
   2242c:	movne	r1, r4
   22430:	movne	r2, r5
   22434:	blne	22440 <_obstack_memory_used@@Base+0x2060>
   22438:	mov	r0, r6
   2243c:	pop	{r4, r5, r6, sl, fp, pc}
   22440:	push	{r4, r5, fp, lr}
   22444:	add	fp, sp, #8
   22448:	mov	r4, r2
   2244c:	mov	r5, r0
   22450:	bl	11d74 <memcpy@plt>
   22454:	mov	r0, #0
   22458:	strb	r0, [r5, r4]
   2245c:	pop	{r4, r5, fp, pc}
   22460:	push	{r4, sl, fp, lr}
   22464:	add	fp, sp, #8
   22468:	cmp	r0, #2
   2246c:	popcc	{r4, sl, fp, pc}
   22470:	ldr	r4, [r0]
   22474:	bl	1bcc8 <putc_unlocked@plt+0x9b10>
   22478:	cmp	r4, #0
   2247c:	mov	r0, r4
   22480:	bne	22470 <_obstack_memory_used@@Base+0x2090>
   22484:	pop	{r4, sl, fp, pc}
   22488:	push	{r4, r5, r6, r7, fp, lr}
   2248c:	add	fp, sp, #16
   22490:	mov	r4, r2
   22494:	mov	r7, r1
   22498:	cmp	r0, #0
   2249c:	beq	224dc <_obstack_memory_used@@Base+0x20fc>
   224a0:	mov	r6, r0
   224a4:	bl	22514 <_obstack_memory_used@@Base+0x2134>
   224a8:	cmp	r0, #0
   224ac:	beq	224ec <_obstack_memory_used@@Base+0x210c>
   224b0:	mov	r5, r0
   224b4:	mov	r0, r7
   224b8:	mov	r1, r4
   224bc:	bl	11de0 <localtime_r@plt>
   224c0:	cmp	r0, #0
   224c4:	beq	224f4 <_obstack_memory_used@@Base+0x2114>
   224c8:	mov	r0, r6
   224cc:	mov	r1, r4
   224d0:	bl	225ac <_obstack_memory_used@@Base+0x21cc>
   224d4:	eor	r6, r0, #1
   224d8:	b	224f8 <_obstack_memory_used@@Base+0x2118>
   224dc:	mov	r0, r7
   224e0:	mov	r1, r4
   224e4:	pop	{r4, r5, r6, r7, fp, lr}
   224e8:	b	11cb4 <gmtime_r@plt>
   224ec:	mov	r0, #0
   224f0:	pop	{r4, r5, r6, r7, fp, pc}
   224f4:	mov	r6, #1
   224f8:	mov	r0, r5
   224fc:	bl	226c4 <_obstack_memory_used@@Base+0x22e4>
   22500:	cmp	r0, #0
   22504:	movne	r0, r4
   22508:	cmp	r6, #0
   2250c:	movwne	r0, #0
   22510:	pop	{r4, r5, r6, r7, fp, pc}
   22514:	push	{r4, r5, r6, r7, fp, lr}
   22518:	add	fp, sp, #16
   2251c:	mov	r4, r0
   22520:	bl	227f0 <_obstack_memory_used@@Base+0x2410>
   22524:	mov	r5, r0
   22528:	ldrb	r0, [r4, #4]
   2252c:	cmp	r5, #0
   22530:	beq	22548 <_obstack_memory_used@@Base+0x2168>
   22534:	cmp	r0, #0
   22538:	beq	22550 <_obstack_memory_used@@Base+0x2170>
   2253c:	add	r0, r4, #5
   22540:	mov	r1, r5
   22544:	bl	11ccc <strcmp@plt>
   22548:	cmp	r0, #0
   2254c:	beq	22580 <_obstack_memory_used@@Base+0x21a0>
   22550:	mov	r0, r5
   22554:	bl	223c0 <_obstack_memory_used@@Base+0x1fe0>
   22558:	mov	r5, #0
   2255c:	cmp	r0, #0
   22560:	beq	225a4 <_obstack_memory_used@@Base+0x21c4>
   22564:	mov	r6, r0
   22568:	mov	r0, r4
   2256c:	bl	227fc <_obstack_memory_used@@Base+0x241c>
   22570:	cmp	r0, #0
   22574:	beq	2258c <_obstack_memory_used@@Base+0x21ac>
   22578:	mov	r0, r6
   2257c:	pop	{r4, r5, r6, r7, fp, pc}
   22580:	mov	r5, #1
   22584:	mov	r0, r5
   22588:	pop	{r4, r5, r6, r7, fp, pc}
   2258c:	bl	11fe4 <__errno_location@plt>
   22590:	mov	r4, r0
   22594:	ldr	r7, [r0]
   22598:	mov	r0, r6
   2259c:	bl	22460 <_obstack_memory_used@@Base+0x2080>
   225a0:	str	r7, [r4]
   225a4:	mov	r0, r5
   225a8:	pop	{r4, r5, r6, r7, fp, pc}
   225ac:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   225b0:	add	fp, sp, #24
   225b4:	ldr	r7, [r1, #40]	; 0x28
   225b8:	mov	r8, #1
   225bc:	cmp	r7, #0
   225c0:	beq	22660 <_obstack_memory_used@@Base+0x2280>
   225c4:	mov	r5, r1
   225c8:	mov	r6, r0
   225cc:	cmp	r7, r1
   225d0:	bcc	225e0 <_obstack_memory_used@@Base+0x2200>
   225d4:	add	r0, r5, #44	; 0x2c
   225d8:	cmp	r7, r0
   225dc:	bcc	22660 <_obstack_memory_used@@Base+0x2280>
   225e0:	ldrb	r0, [r7]
   225e4:	cmp	r0, #0
   225e8:	beq	22654 <_obstack_memory_used@@Base+0x2274>
   225ec:	add	r4, r6, #5
   225f0:	mov	r0, r4
   225f4:	mov	r1, r7
   225f8:	bl	11ccc <strcmp@plt>
   225fc:	cmp	r0, #0
   22600:	beq	2265c <_obstack_memory_used@@Base+0x227c>
   22604:	ldrb	r0, [r4]
   22608:	cmp	r0, #0
   2260c:	bne	22628 <_obstack_memory_used@@Base+0x2248>
   22610:	add	r0, r6, #5
   22614:	cmp	r4, r0
   22618:	bne	22668 <_obstack_memory_used@@Base+0x2288>
   2261c:	ldrb	r0, [r6, #4]
   22620:	cmp	r0, #0
   22624:	beq	22668 <_obstack_memory_used@@Base+0x2288>
   22628:	mov	r0, r4
   2262c:	bl	11fc0 <strlen@plt>
   22630:	add	r4, r0, r4
   22634:	ldrb	r0, [r4, #1]!
   22638:	cmp	r0, #0
   2263c:	bne	225f0 <_obstack_memory_used@@Base+0x2210>
   22640:	ldr	r0, [r6]
   22644:	cmp	r0, #0
   22648:	addne	r4, r0, #5
   2264c:	movne	r6, r0
   22650:	b	225f0 <_obstack_memory_used@@Base+0x2210>
   22654:	movw	r4, #27197	; 0x6a3d
   22658:	movt	r4, #2
   2265c:	str	r4, [r5, #40]	; 0x28
   22660:	mov	r0, r8
   22664:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   22668:	sub	r0, r6, r4
   2266c:	add	r9, r0, #64	; 0x40
   22670:	mov	r0, r7
   22674:	bl	11fc0 <strlen@plt>
   22678:	add	r2, r0, #1
   2267c:	cmp	r2, r9
   22680:	bge	22694 <_obstack_memory_used@@Base+0x22b4>
   22684:	mov	r0, r4
   22688:	mov	r1, r7
   2268c:	bl	22440 <_obstack_memory_used@@Base+0x2060>
   22690:	b	2265c <_obstack_memory_used@@Base+0x227c>
   22694:	mov	r0, r7
   22698:	bl	223c0 <_obstack_memory_used@@Base+0x1fe0>
   2269c:	str	r0, [r6]
   226a0:	cmp	r0, #0
   226a4:	beq	226b8 <_obstack_memory_used@@Base+0x22d8>
   226a8:	mov	r1, #0
   226ac:	strb	r1, [r0, #4]
   226b0:	add	r4, r0, #5
   226b4:	b	2265c <_obstack_memory_used@@Base+0x227c>
   226b8:	mov	r8, #0
   226bc:	mov	r0, r8
   226c0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   226c4:	push	{r4, r5, r6, r7, fp, lr}
   226c8:	add	fp, sp, #16
   226cc:	cmp	r0, #1
   226d0:	beq	2270c <_obstack_memory_used@@Base+0x232c>
   226d4:	mov	r4, r0
   226d8:	bl	11fe4 <__errno_location@plt>
   226dc:	mov	r6, r0
   226e0:	ldr	r7, [r0]
   226e4:	mov	r0, r4
   226e8:	bl	227fc <_obstack_memory_used@@Base+0x241c>
   226ec:	mov	r5, r0
   226f0:	cmp	r0, #0
   226f4:	ldreq	r7, [r6]
   226f8:	mov	r0, r4
   226fc:	bl	22460 <_obstack_memory_used@@Base+0x2080>
   22700:	str	r7, [r6]
   22704:	mov	r0, r5
   22708:	pop	{r4, r5, r6, r7, fp, pc}
   2270c:	mov	r5, #1
   22710:	mov	r0, r5
   22714:	pop	{r4, r5, r6, r7, fp, pc}
   22718:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2271c:	add	fp, sp, #24
   22720:	sub	sp, sp, #48	; 0x30
   22724:	mov	r4, r1
   22728:	cmp	r0, #0
   2272c:	beq	227c8 <_obstack_memory_used@@Base+0x23e8>
   22730:	mov	r6, r0
   22734:	bl	22514 <_obstack_memory_used@@Base+0x2134>
   22738:	cmp	r0, #0
   2273c:	beq	227e0 <_obstack_memory_used@@Base+0x2400>
   22740:	mov	r7, r0
   22744:	ldm	r4, {r0, r1, r2, r3, r5, ip}
   22748:	stm	sp, {r0, r1, r2, r3, r5}
   2274c:	mvn	r0, #0
   22750:	str	r0, [sp, #28]
   22754:	str	ip, [sp, #20]
   22758:	ldr	r0, [r4, #32]
   2275c:	str	r0, [sp, #32]
   22760:	mov	r0, sp
   22764:	bl	11cfc <mktime@plt>
   22768:	mov	r5, r0
   2276c:	ldr	r0, [sp, #28]
   22770:	cmn	r0, #1
   22774:	ble	227d8 <_obstack_memory_used@@Base+0x23f8>
   22778:	mov	r8, sp
   2277c:	mov	r0, r6
   22780:	mov	r1, r8
   22784:	bl	225ac <_obstack_memory_used@@Base+0x21cc>
   22788:	mov	r6, r0
   2278c:	mov	r0, r7
   22790:	bl	226c4 <_obstack_memory_used@@Base+0x22e4>
   22794:	cmp	r6, #0
   22798:	cmpne	r0, #0
   2279c:	beq	227e0 <_obstack_memory_used@@Base+0x2400>
   227a0:	mov	r0, #28
   227a4:	add	r1, r8, #16
   227a8:	vld1.32	{d16-d17}, [r8], r0
   227ac:	vld1.64	{d18-d19}, [r1]
   227b0:	add	r1, r4, #16
   227b4:	vld1.32	{d20-d21}, [r8]
   227b8:	vst1.32	{d18-d19}, [r1]
   227bc:	vst1.32	{d16-d17}, [r4], r0
   227c0:	vst1.32	{d20-d21}, [r4]
   227c4:	b	227e4 <_obstack_memory_used@@Base+0x2404>
   227c8:	mov	r0, r4
   227cc:	sub	sp, fp, #24
   227d0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   227d4:	b	120e0 <timegm@plt>
   227d8:	mov	r0, r7
   227dc:	bl	226c4 <_obstack_memory_used@@Base+0x22e4>
   227e0:	mvn	r5, #0
   227e4:	mov	r0, r5
   227e8:	sub	sp, fp, #24
   227ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   227f0:	movw	r0, #17964	; 0x462c
   227f4:	movt	r0, #2
   227f8:	b	11ef4 <getenv@plt>
   227fc:	push	{fp, lr}
   22800:	mov	fp, sp
   22804:	ldrb	r1, [r0, #4]
   22808:	cmp	r1, #0
   2280c:	addne	r1, r0, #5
   22810:	mov	r0, r1
   22814:	bl	22834 <_obstack_memory_used@@Base+0x2454>
   22818:	mov	r1, r0
   2281c:	mov	r0, #0
   22820:	cmp	r1, #0
   22824:	popne	{fp, pc}
   22828:	bl	11e28 <tzset@plt>
   2282c:	mov	r0, #1
   22830:	pop	{fp, pc}
   22834:	cmp	r0, #0
   22838:	beq	22850 <_obstack_memory_used@@Base+0x2470>
   2283c:	mov	r1, r0
   22840:	movw	r0, #17964	; 0x462c
   22844:	movt	r0, #2
   22848:	mov	r2, #1
   2284c:	b	11fd8 <setenv@plt>
   22850:	movw	r0, #17964	; 0x462c
   22854:	movt	r0, #2
   22858:	b	12134 <unsetenv@plt>
   2285c:	andeq	r0, r0, r0
   22860:	stm	r0, {r1, r2}
   22864:	bx	lr
   22868:	mov	ip, #0
   2286c:	cmp	r0, r2
   22870:	mov	r0, #0
   22874:	movwgt	r0, #1
   22878:	sublt	r0, r0, #1
   2287c:	cmp	r1, r3
   22880:	movwgt	ip, #1
   22884:	sublt	ip, ip, #1
   22888:	add	r0, ip, r0, lsl #1
   2288c:	bx	lr
   22890:	mov	r2, #1
   22894:	asr	r3, r0, #31
   22898:	cmp	r0, #0
   2289c:	addgt	r3, r2, r0, asr #31
   228a0:	cmp	r1, #0
   228a4:	movwne	r1, #1
   228a8:	clz	r0, r0
   228ac:	lsr	r0, r0, #5
   228b0:	and	r0, r0, r1
   228b4:	add	r0, r3, r0
   228b8:	bx	lr
   228bc:	nop	{0}
   228c0:	vldr	d16, [pc, #24]	; 228e0 <_obstack_memory_used@@Base+0x2500>
   228c4:	vmov	s0, r1
   228c8:	vcvt.f64.s32	d17, s0
   228cc:	vmov	s0, r0
   228d0:	vcvt.f64.s32	d18, s0
   228d4:	vdiv.f64	d16, d17, d16
   228d8:	vadd.f64	d0, d16, d18
   228dc:	bx	lr
   228e0:	andeq	r0, r0, r0
   228e4:	bicmi	ip, sp, r5, ror #26
   228e8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   228ec:	add	fp, sp, #24
   228f0:	sub	sp, sp, #32
   228f4:	mov	r4, r2
   228f8:	mov	r8, r0
   228fc:	ldr	r6, [fp, #12]
   22900:	ldr	r7, [fp, #8]
   22904:	cmp	r1, #0
   22908:	beq	22930 <_obstack_memory_used@@Base+0x2550>
   2290c:	mov	r5, r1
   22910:	str	r4, [sp]
   22914:	str	r3, [sp, #4]
   22918:	movw	r2, #34552	; 0x86f8
   2291c:	movt	r2, #2
   22920:	mov	r0, r8
   22924:	mov	r1, #1
   22928:	mov	r3, r5
   2292c:	b	22948 <_obstack_memory_used@@Base+0x2568>
   22930:	str	r3, [sp]
   22934:	movw	r2, #34564	; 0x8704
   22938:	movt	r2, #2
   2293c:	mov	r0, r8
   22940:	mov	r1, #1
   22944:	mov	r3, r4
   22948:	bl	12044 <__fprintf_chk@plt>
   2294c:	movw	r1, #34571	; 0x870b
   22950:	movt	r1, #2
   22954:	mov	r0, #0
   22958:	mov	r2, #5
   2295c:	bl	11db0 <dcgettext@plt>
   22960:	mov	r3, r0
   22964:	movw	r0, #2022	; 0x7e6
   22968:	str	r0, [sp]
   2296c:	movw	r2, #35289	; 0x89d9
   22970:	movt	r2, #2
   22974:	mov	r0, r8
   22978:	mov	r1, #1
   2297c:	bl	12044 <__fprintf_chk@plt>
   22980:	movw	r4, #27949	; 0x6d2d
   22984:	movt	r4, #2
   22988:	mov	r0, r4
   2298c:	mov	r1, r8
   22990:	bl	11c84 <fputs_unlocked@plt>
   22994:	movw	r1, #34575	; 0x870f
   22998:	movt	r1, #2
   2299c:	mov	r0, #0
   229a0:	mov	r2, #5
   229a4:	bl	11db0 <dcgettext@plt>
   229a8:	mov	r2, r0
   229ac:	movw	r3, #34746	; 0x87ba
   229b0:	movt	r3, #2
   229b4:	mov	r0, r8
   229b8:	mov	r1, #1
   229bc:	bl	12044 <__fprintf_chk@plt>
   229c0:	mov	r0, r4
   229c4:	mov	r1, r8
   229c8:	bl	11c84 <fputs_unlocked@plt>
   229cc:	cmp	r6, #9
   229d0:	bhi	22a0c <_obstack_memory_used@@Base+0x262c>
   229d4:	add	r0, pc, #0
   229d8:	ldr	pc, [r0, r6, lsl #2]
   229dc:	andeq	r2, r2, r4, lsl #20
   229e0:	andeq	r2, r2, r8, lsl sl
   229e4:	andeq	r2, r2, r8, asr #20
   229e8:	andeq	r2, r2, r0, ror sl
   229ec:	muleq	r2, r8, sl
   229f0:	andeq	r2, r2, r0, asr #21
   229f4:	andeq	r2, r2, r8, ror #21
   229f8:	andeq	r2, r2, r0, lsr #22
   229fc:	andeq	r2, r2, r0, asr #23
   22a00:	andeq	r2, r2, r8, ror #22
   22a04:	sub	sp, fp, #24
   22a08:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   22a0c:	movw	r1, #35099	; 0x891b
   22a10:	movt	r1, #2
   22a14:	b	22b70 <_obstack_memory_used@@Base+0x2790>
   22a18:	movw	r1, #34780	; 0x87dc
   22a1c:	movt	r1, #2
   22a20:	mov	r0, #0
   22a24:	mov	r2, #5
   22a28:	bl	11db0 <dcgettext@plt>
   22a2c:	mov	r2, r0
   22a30:	ldr	r3, [r7]
   22a34:	mov	r0, r8
   22a38:	mov	r1, #1
   22a3c:	sub	sp, fp, #24
   22a40:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   22a44:	b	12044 <__fprintf_chk@plt>
   22a48:	movw	r1, #34796	; 0x87ec
   22a4c:	movt	r1, #2
   22a50:	mov	r0, #0
   22a54:	mov	r2, #5
   22a58:	bl	11db0 <dcgettext@plt>
   22a5c:	mov	r2, r0
   22a60:	ldr	r3, [r7]
   22a64:	ldr	r0, [r7, #4]
   22a68:	str	r0, [sp]
   22a6c:	b	22b5c <_obstack_memory_used@@Base+0x277c>
   22a70:	movw	r1, #34819	; 0x8803
   22a74:	movt	r1, #2
   22a78:	mov	r0, #0
   22a7c:	mov	r2, #5
   22a80:	bl	11db0 <dcgettext@plt>
   22a84:	mov	r2, r0
   22a88:	ldr	r3, [r7]
   22a8c:	ldmib	r7, {r0, r1}
   22a90:	stm	sp, {r0, r1}
   22a94:	b	22b5c <_obstack_memory_used@@Base+0x277c>
   22a98:	movw	r1, #34847	; 0x881f
   22a9c:	movt	r1, #2
   22aa0:	mov	r0, #0
   22aa4:	mov	r2, #5
   22aa8:	bl	11db0 <dcgettext@plt>
   22aac:	mov	r2, r0
   22ab0:	ldr	r3, [r7]
   22ab4:	ldmib	r7, {r0, r1, r7}
   22ab8:	stm	sp, {r0, r1, r7}
   22abc:	b	22b5c <_obstack_memory_used@@Base+0x277c>
   22ac0:	movw	r1, #34879	; 0x883f
   22ac4:	movt	r1, #2
   22ac8:	mov	r0, #0
   22acc:	mov	r2, #5
   22ad0:	bl	11db0 <dcgettext@plt>
   22ad4:	mov	r2, r0
   22ad8:	ldr	r3, [r7]
   22adc:	ldmib	r7, {r0, r1, r6, r7}
   22ae0:	stm	sp, {r0, r1, r6, r7}
   22ae4:	b	22b5c <_obstack_memory_used@@Base+0x277c>
   22ae8:	movw	r1, #34915	; 0x8863
   22aec:	movt	r1, #2
   22af0:	mov	r0, #0
   22af4:	mov	r2, #5
   22af8:	bl	11db0 <dcgettext@plt>
   22afc:	mov	r2, r0
   22b00:	ldr	r3, [r7]
   22b04:	ldmib	r7, {r0, r1, r6}
   22b08:	ldr	r5, [r7, #16]
   22b0c:	ldr	r7, [r7, #20]
   22b10:	stm	sp, {r0, r1, r6}
   22b14:	str	r5, [sp, #12]
   22b18:	str	r7, [sp, #16]
   22b1c:	b	22b5c <_obstack_memory_used@@Base+0x277c>
   22b20:	movw	r1, #34955	; 0x888b
   22b24:	movt	r1, #2
   22b28:	mov	r0, #0
   22b2c:	mov	r2, #5
   22b30:	bl	11db0 <dcgettext@plt>
   22b34:	mov	r2, r0
   22b38:	ldr	r3, [r7]
   22b3c:	ldmib	r7, {r0, r1, r6}
   22b40:	ldr	r5, [r7, #16]
   22b44:	ldr	r4, [r7, #20]
   22b48:	ldr	r7, [r7, #24]
   22b4c:	stm	sp, {r0, r1, r6}
   22b50:	str	r5, [sp, #12]
   22b54:	str	r4, [sp, #16]
   22b58:	str	r7, [sp, #20]
   22b5c:	mov	r0, r8
   22b60:	mov	r1, #1
   22b64:	b	22c10 <_obstack_memory_used@@Base+0x2830>
   22b68:	movw	r1, #35047	; 0x88e7
   22b6c:	movt	r1, #2
   22b70:	mov	r0, #0
   22b74:	mov	r2, #5
   22b78:	bl	11db0 <dcgettext@plt>
   22b7c:	mov	ip, r0
   22b80:	ldr	r3, [r7]
   22b84:	ldr	r0, [r7, #4]
   22b88:	ldr	r1, [r7, #8]
   22b8c:	ldr	r6, [r7, #12]
   22b90:	ldr	r5, [r7, #16]
   22b94:	ldr	r4, [r7, #20]
   22b98:	ldr	r2, [r7, #24]
   22b9c:	ldr	lr, [r7, #28]
   22ba0:	ldr	r7, [r7, #32]
   22ba4:	stm	sp, {r0, r1, r6}
   22ba8:	str	r5, [sp, #12]
   22bac:	str	r4, [sp, #16]
   22bb0:	str	r2, [sp, #20]
   22bb4:	str	lr, [sp, #24]
   22bb8:	str	r7, [sp, #28]
   22bbc:	b	22c04 <_obstack_memory_used@@Base+0x2824>
   22bc0:	movw	r1, #34999	; 0x88b7
   22bc4:	movt	r1, #2
   22bc8:	mov	r0, #0
   22bcc:	mov	r2, #5
   22bd0:	bl	11db0 <dcgettext@plt>
   22bd4:	mov	ip, r0
   22bd8:	ldr	r3, [r7]
   22bdc:	ldmib	r7, {r0, r1, r6}
   22be0:	ldr	r5, [r7, #16]
   22be4:	ldr	r4, [r7, #20]
   22be8:	ldr	r2, [r7, #24]
   22bec:	ldr	r7, [r7, #28]
   22bf0:	stm	sp, {r0, r1, r6}
   22bf4:	str	r5, [sp, #12]
   22bf8:	str	r4, [sp, #16]
   22bfc:	str	r2, [sp, #20]
   22c00:	str	r7, [sp, #24]
   22c04:	mov	r0, r8
   22c08:	mov	r1, #1
   22c0c:	mov	r2, ip
   22c10:	bl	12044 <__fprintf_chk@plt>
   22c14:	sub	sp, fp, #24
   22c18:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   22c1c:	push	{r4, sl, fp, lr}
   22c20:	add	fp, sp, #8
   22c24:	sub	sp, sp, #8
   22c28:	mov	lr, #0
   22c2c:	ldr	ip, [fp, #8]
   22c30:	ldr	r4, [ip, lr, lsl #2]
   22c34:	add	lr, lr, #1
   22c38:	cmp	r4, #0
   22c3c:	bne	22c30 <_obstack_memory_used@@Base+0x2850>
   22c40:	sub	r4, lr, #1
   22c44:	str	ip, [sp]
   22c48:	str	r4, [sp, #4]
   22c4c:	bl	228e8 <_obstack_memory_used@@Base+0x2508>
   22c50:	sub	sp, fp, #8
   22c54:	pop	{r4, sl, fp, pc}
   22c58:	push	{r4, r5, fp, lr}
   22c5c:	add	fp, sp, #8
   22c60:	sub	sp, sp, #48	; 0x30
   22c64:	mov	ip, #0
   22c68:	ldr	r4, [fp, #8]
   22c6c:	add	lr, sp, #8
   22c70:	ldr	r5, [r4]
   22c74:	str	r5, [lr, ip, lsl #2]
   22c78:	cmp	r5, #0
   22c7c:	beq	22c94 <_obstack_memory_used@@Base+0x28b4>
   22c80:	add	ip, ip, #1
   22c84:	add	r4, r4, #4
   22c88:	cmp	ip, #10
   22c8c:	bne	22c70 <_obstack_memory_used@@Base+0x2890>
   22c90:	mov	ip, #10
   22c94:	str	lr, [sp]
   22c98:	str	ip, [sp, #4]
   22c9c:	bl	228e8 <_obstack_memory_used@@Base+0x2508>
   22ca0:	sub	sp, fp, #8
   22ca4:	pop	{r4, r5, fp, pc}
   22ca8:	push	{fp, lr}
   22cac:	mov	fp, sp
   22cb0:	sub	sp, sp, #8
   22cb4:	add	ip, fp, #8
   22cb8:	str	ip, [sp, #4]
   22cbc:	str	ip, [sp]
   22cc0:	bl	22c58 <_obstack_memory_used@@Base+0x2878>
   22cc4:	mov	sp, fp
   22cc8:	pop	{fp, pc}
   22ccc:	push	{fp, lr}
   22cd0:	mov	fp, sp
   22cd4:	movw	r0, #37668	; 0x9324
   22cd8:	movt	r0, #3
   22cdc:	ldr	r1, [r0]
   22ce0:	movw	r0, #27949	; 0x6d2d
   22ce4:	movt	r0, #2
   22ce8:	bl	11c84 <fputs_unlocked@plt>
   22cec:	movw	r1, #35159	; 0x8957
   22cf0:	movt	r1, #2
   22cf4:	mov	r0, #0
   22cf8:	mov	r2, #5
   22cfc:	bl	11db0 <dcgettext@plt>
   22d00:	mov	r1, r0
   22d04:	movw	r2, #35179	; 0x896b
   22d08:	movt	r2, #2
   22d0c:	mov	r0, #1
   22d10:	bl	12014 <__printf_chk@plt>
   22d14:	movw	r1, #35201	; 0x8981
   22d18:	movt	r1, #2
   22d1c:	mov	r0, #0
   22d20:	mov	r2, #5
   22d24:	bl	11db0 <dcgettext@plt>
   22d28:	mov	r1, r0
   22d2c:	movw	r2, #25755	; 0x649b
   22d30:	movt	r2, #2
   22d34:	movw	r3, #27758	; 0x6c6e
   22d38:	movt	r3, #2
   22d3c:	mov	r0, #1
   22d40:	bl	12014 <__printf_chk@plt>
   22d44:	movw	r1, #35221	; 0x8995
   22d48:	movt	r1, #2
   22d4c:	mov	r0, #0
   22d50:	mov	r2, #5
   22d54:	bl	11db0 <dcgettext@plt>
   22d58:	mov	r1, r0
   22d5c:	movw	r2, #35260	; 0x89bc
   22d60:	movt	r2, #2
   22d64:	mov	r0, #1
   22d68:	pop	{fp, lr}
   22d6c:	b	12014 <__printf_chk@plt>
   22d70:	b	22d74 <_obstack_memory_used@@Base+0x2994>
   22d74:	push	{r4, r5, r6, sl, fp, lr}
   22d78:	add	fp, sp, #16
   22d7c:	mov	r4, r2
   22d80:	mov	r5, r1
   22d84:	mov	r6, r0
   22d88:	bl	23ef4 <_obstack_memory_used@@Base+0x3b14>
   22d8c:	cmp	r0, #0
   22d90:	popne	{r4, r5, r6, sl, fp, pc}
   22d94:	cmp	r6, #0
   22d98:	beq	22dac <_obstack_memory_used@@Base+0x29cc>
   22d9c:	cmp	r5, #0
   22da0:	cmpne	r4, #0
   22da4:	bne	22dac <_obstack_memory_used@@Base+0x29cc>
   22da8:	pop	{r4, r5, r6, sl, fp, pc}
   22dac:	bl	23138 <_obstack_memory_used@@Base+0x2d58>
   22db0:	push	{fp, lr}
   22db4:	mov	fp, sp
   22db8:	bl	23a30 <_obstack_memory_used@@Base+0x3650>
   22dbc:	pop	{fp, lr}
   22dc0:	b	22dc4 <_obstack_memory_used@@Base+0x29e4>
   22dc4:	cmp	r0, #0
   22dc8:	bxne	lr
   22dcc:	push	{fp, lr}
   22dd0:	mov	fp, sp
   22dd4:	bl	23138 <_obstack_memory_used@@Base+0x2d58>
   22dd8:	push	{fp, lr}
   22ddc:	mov	fp, sp
   22de0:	bl	23e88 <_obstack_memory_used@@Base+0x3aa8>
   22de4:	pop	{fp, lr}
   22de8:	b	22dc4 <_obstack_memory_used@@Base+0x29e4>
   22dec:	b	22db0 <_obstack_memory_used@@Base+0x29d0>
   22df0:	push	{r4, r5, fp, lr}
   22df4:	add	fp, sp, #8
   22df8:	mov	r4, r1
   22dfc:	mov	r5, r0
   22e00:	bl	23a60 <_obstack_memory_used@@Base+0x3680>
   22e04:	cmp	r0, #0
   22e08:	popne	{r4, r5, fp, pc}
   22e0c:	cmp	r5, #0
   22e10:	beq	22e20 <_obstack_memory_used@@Base+0x2a40>
   22e14:	cmp	r4, #0
   22e18:	bne	22e20 <_obstack_memory_used@@Base+0x2a40>
   22e1c:	pop	{r4, r5, fp, pc}
   22e20:	bl	23138 <_obstack_memory_used@@Base+0x2d58>
   22e24:	push	{fp, lr}
   22e28:	mov	fp, sp
   22e2c:	bl	23e8c <_obstack_memory_used@@Base+0x3aac>
   22e30:	pop	{fp, lr}
   22e34:	b	22dc4 <_obstack_memory_used@@Base+0x29e4>
   22e38:	push	{fp, lr}
   22e3c:	mov	fp, sp
   22e40:	bl	23e9c <_obstack_memory_used@@Base+0x3abc>
   22e44:	pop	{fp, lr}
   22e48:	b	22dc4 <_obstack_memory_used@@Base+0x29e4>
   22e4c:	mov	r2, r1
   22e50:	mov	r1, r0
   22e54:	mov	r0, #0
   22e58:	b	22d74 <_obstack_memory_used@@Base+0x2994>
   22e5c:	mov	r2, r1
   22e60:	mov	r1, r0
   22e64:	mov	r0, #0
   22e68:	b	22e38 <_obstack_memory_used@@Base+0x2a58>
   22e6c:	mov	r2, #1
   22e70:	b	22e74 <_obstack_memory_used@@Base+0x2a94>
   22e74:	push	{r4, r5, fp, lr}
   22e78:	add	fp, sp, #8
   22e7c:	mov	r4, r1
   22e80:	ldr	r5, [r1]
   22e84:	cmp	r0, #0
   22e88:	beq	22ea0 <_obstack_memory_used@@Base+0x2ac0>
   22e8c:	mov	r1, #1
   22e90:	add	r1, r1, r5, lsr #1
   22e94:	adds	r5, r5, r1
   22e98:	bcc	22eb8 <_obstack_memory_used@@Base+0x2ad8>
   22e9c:	bl	23138 <_obstack_memory_used@@Base+0x2d58>
   22ea0:	cmp	r5, #0
   22ea4:	bne	22eb8 <_obstack_memory_used@@Base+0x2ad8>
   22ea8:	mov	r1, #64	; 0x40
   22eac:	udiv	r5, r1, r2
   22eb0:	cmp	r2, #64	; 0x40
   22eb4:	addhi	r5, r5, #1
   22eb8:	mov	r1, r5
   22ebc:	bl	22d74 <_obstack_memory_used@@Base+0x2994>
   22ec0:	str	r5, [r4]
   22ec4:	pop	{r4, r5, fp, pc}
   22ec8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   22ecc:	add	fp, sp, #24
   22ed0:	mov	r8, r1
   22ed4:	ldr	r6, [r1]
   22ed8:	add	r1, r6, r6, asr #1
   22edc:	cmp	r1, r6
   22ee0:	mvnvs	r1, #-2147483648	; 0x80000000
   22ee4:	cmp	r1, r3
   22ee8:	mov	r5, r1
   22eec:	movgt	r5, r3
   22ef0:	cmn	r3, #1
   22ef4:	movle	r5, r1
   22ef8:	ldr	r4, [fp, #8]
   22efc:	cmn	r4, #1
   22f00:	ble	22f28 <_obstack_memory_used@@Base+0x2b48>
   22f04:	cmp	r4, #0
   22f08:	beq	22f7c <_obstack_memory_used@@Base+0x2b9c>
   22f0c:	cmn	r5, #1
   22f10:	ble	22f50 <_obstack_memory_used@@Base+0x2b70>
   22f14:	mvn	r7, #-2147483648	; 0x80000000
   22f18:	udiv	r1, r7, r4
   22f1c:	cmp	r1, r5
   22f20:	bge	22f7c <_obstack_memory_used@@Base+0x2b9c>
   22f24:	b	22f8c <_obstack_memory_used@@Base+0x2bac>
   22f28:	cmn	r5, #1
   22f2c:	ble	22f6c <_obstack_memory_used@@Base+0x2b8c>
   22f30:	cmn	r4, #1
   22f34:	beq	22f7c <_obstack_memory_used@@Base+0x2b9c>
   22f38:	mov	r1, #-2147483648	; 0x80000000
   22f3c:	sdiv	r1, r1, r4
   22f40:	mvn	r7, #-2147483648	; 0x80000000
   22f44:	cmp	r1, r5
   22f48:	bge	22f7c <_obstack_memory_used@@Base+0x2b9c>
   22f4c:	b	22f8c <_obstack_memory_used@@Base+0x2bac>
   22f50:	beq	22f7c <_obstack_memory_used@@Base+0x2b9c>
   22f54:	mov	r1, #-2147483648	; 0x80000000
   22f58:	sdiv	r1, r1, r5
   22f5c:	mvn	r7, #-2147483648	; 0x80000000
   22f60:	cmp	r1, r4
   22f64:	bge	22f7c <_obstack_memory_used@@Base+0x2b9c>
   22f68:	b	22f8c <_obstack_memory_used@@Base+0x2bac>
   22f6c:	mvn	r7, #-2147483648	; 0x80000000
   22f70:	sdiv	r1, r7, r4
   22f74:	cmp	r5, r1
   22f78:	blt	22f8c <_obstack_memory_used@@Base+0x2bac>
   22f7c:	mul	r1, r5, r4
   22f80:	mov	r7, #64	; 0x40
   22f84:	cmp	r1, #63	; 0x3f
   22f88:	bgt	22f94 <_obstack_memory_used@@Base+0x2bb4>
   22f8c:	sdiv	r5, r7, r4
   22f90:	mul	r1, r5, r4
   22f94:	cmp	r0, #0
   22f98:	moveq	r7, #0
   22f9c:	streq	r7, [r8]
   22fa0:	sub	r7, r5, r6
   22fa4:	cmp	r7, r2
   22fa8:	bge	23054 <_obstack_memory_used@@Base+0x2c74>
   22fac:	add	r5, r6, r2
   22fb0:	mov	r1, #0
   22fb4:	cmp	r5, r3
   22fb8:	mov	r2, #0
   22fbc:	movwgt	r2, #1
   22fc0:	cmn	r3, #1
   22fc4:	movwgt	r1, #1
   22fc8:	cmp	r5, r6
   22fcc:	bvs	2303c <_obstack_memory_used@@Base+0x2c5c>
   22fd0:	ands	r1, r1, r2
   22fd4:	bne	2303c <_obstack_memory_used@@Base+0x2c5c>
   22fd8:	cmn	r4, #1
   22fdc:	ble	23004 <_obstack_memory_used@@Base+0x2c24>
   22fe0:	cmp	r4, #0
   22fe4:	beq	23050 <_obstack_memory_used@@Base+0x2c70>
   22fe8:	cmn	r5, #1
   22fec:	ble	23028 <_obstack_memory_used@@Base+0x2c48>
   22ff0:	mvn	r1, #-2147483648	; 0x80000000
   22ff4:	udiv	r1, r1, r4
   22ff8:	cmp	r1, r5
   22ffc:	bge	23050 <_obstack_memory_used@@Base+0x2c70>
   23000:	b	2303c <_obstack_memory_used@@Base+0x2c5c>
   23004:	cmn	r5, #1
   23008:	ble	23040 <_obstack_memory_used@@Base+0x2c60>
   2300c:	cmn	r4, #1
   23010:	beq	23050 <_obstack_memory_used@@Base+0x2c70>
   23014:	mov	r1, #-2147483648	; 0x80000000
   23018:	sdiv	r1, r1, r4
   2301c:	cmp	r1, r5
   23020:	bge	23050 <_obstack_memory_used@@Base+0x2c70>
   23024:	b	2303c <_obstack_memory_used@@Base+0x2c5c>
   23028:	beq	23050 <_obstack_memory_used@@Base+0x2c70>
   2302c:	mov	r1, #-2147483648	; 0x80000000
   23030:	sdiv	r1, r1, r5
   23034:	cmp	r1, r4
   23038:	bge	23050 <_obstack_memory_used@@Base+0x2c70>
   2303c:	bl	23138 <_obstack_memory_used@@Base+0x2d58>
   23040:	mvn	r1, #-2147483648	; 0x80000000
   23044:	sdiv	r1, r1, r4
   23048:	cmp	r5, r1
   2304c:	blt	2303c <_obstack_memory_used@@Base+0x2c5c>
   23050:	mul	r1, r5, r4
   23054:	bl	22df0 <_obstack_memory_used@@Base+0x2a10>
   23058:	str	r5, [r8]
   2305c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   23060:	mov	r1, #1
   23064:	b	23068 <_obstack_memory_used@@Base+0x2c88>
   23068:	push	{fp, lr}
   2306c:	mov	fp, sp
   23070:	bl	239dc <_obstack_memory_used@@Base+0x35fc>
   23074:	pop	{fp, lr}
   23078:	b	22dc4 <_obstack_memory_used@@Base+0x29e4>
   2307c:	mov	r1, #1
   23080:	b	23084 <_obstack_memory_used@@Base+0x2ca4>
   23084:	push	{fp, lr}
   23088:	mov	fp, sp
   2308c:	bl	23e98 <_obstack_memory_used@@Base+0x3ab8>
   23090:	pop	{fp, lr}
   23094:	b	22dc4 <_obstack_memory_used@@Base+0x29e4>
   23098:	push	{r4, r5, fp, lr}
   2309c:	add	fp, sp, #8
   230a0:	mov	r4, r1
   230a4:	mov	r5, r0
   230a8:	mov	r0, r1
   230ac:	bl	22db0 <_obstack_memory_used@@Base+0x29d0>
   230b0:	mov	r1, r5
   230b4:	mov	r2, r4
   230b8:	pop	{r4, r5, fp, lr}
   230bc:	b	11d74 <memcpy@plt>
   230c0:	push	{r4, r5, fp, lr}
   230c4:	add	fp, sp, #8
   230c8:	mov	r4, r1
   230cc:	mov	r5, r0
   230d0:	mov	r0, r1
   230d4:	bl	22dd8 <_obstack_memory_used@@Base+0x29f8>
   230d8:	mov	r1, r5
   230dc:	mov	r2, r4
   230e0:	pop	{r4, r5, fp, lr}
   230e4:	b	11d74 <memcpy@plt>
   230e8:	push	{r4, r5, fp, lr}
   230ec:	add	fp, sp, #8
   230f0:	mov	r4, r1
   230f4:	mov	r5, r0
   230f8:	add	r0, r1, #1
   230fc:	bl	22dd8 <_obstack_memory_used@@Base+0x29f8>
   23100:	mov	r1, #0
   23104:	strb	r1, [r0, r4]
   23108:	mov	r1, r5
   2310c:	mov	r2, r4
   23110:	pop	{r4, r5, fp, lr}
   23114:	b	11d74 <memcpy@plt>
   23118:	push	{r4, sl, fp, lr}
   2311c:	add	fp, sp, #8
   23120:	mov	r4, r0
   23124:	bl	11fc0 <strlen@plt>
   23128:	add	r1, r0, #1
   2312c:	mov	r0, r4
   23130:	pop	{r4, sl, fp, lr}
   23134:	b	23098 <_obstack_memory_used@@Base+0x2cb8>
   23138:	push	{fp, lr}
   2313c:	mov	fp, sp
   23140:	movw	r0, #37572	; 0x92c4
   23144:	movt	r0, #3
   23148:	ldr	r4, [r0]
   2314c:	movw	r1, #34295	; 0x85f7
   23150:	movt	r1, #2
   23154:	mov	r0, #0
   23158:	mov	r2, #5
   2315c:	bl	11db0 <dcgettext@plt>
   23160:	mov	r3, r0
   23164:	movw	r2, #34022	; 0x84e6
   23168:	movt	r2, #2
   2316c:	mov	r0, r4
   23170:	mov	r1, #0
   23174:	bl	11eb8 <error@plt>
   23178:	bl	1214c <abort@plt>
   2317c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   23180:	add	fp, sp, #24
   23184:	sub	sp, sp, #16
   23188:	mov	r5, r3
   2318c:	mov	r6, r2
   23190:	mov	r2, r1
   23194:	mov	r8, r0
   23198:	ldr	r0, [fp, #16]
   2319c:	str	r0, [sp]
   231a0:	add	r3, sp, #8
   231a4:	mov	r0, r8
   231a8:	mov	r1, #0
   231ac:	bl	234a0 <_obstack_memory_used@@Base+0x30c0>
   231b0:	cmp	r0, #0
   231b4:	bne	23244 <_obstack_memory_used@@Base+0x2e64>
   231b8:	ldr	r7, [sp, #8]
   231bc:	ldr	r4, [sp, #12]
   231c0:	subs	r0, r7, r6
   231c4:	sbcs	r0, r4, r5
   231c8:	bcc	231ec <_obstack_memory_used@@Base+0x2e0c>
   231cc:	ldr	r0, [fp, #12]
   231d0:	ldr	r1, [fp, #8]
   231d4:	subs	r1, r1, r7
   231d8:	sbcs	r0, r0, r4
   231dc:	ldrcs	r0, [sp, #8]
   231e0:	ldrcs	r1, [sp, #12]
   231e4:	subcs	sp, fp, #24
   231e8:	popcs	{r4, r5, r6, r7, r8, sl, fp, pc}
   231ec:	bl	11fe4 <__errno_location@plt>
   231f0:	subs	r1, r7, #1073741824	; 0x40000000
   231f4:	sbcs	r1, r4, #0
   231f8:	movcc	r1, #34	; 0x22
   231fc:	movcs	r1, #75	; 0x4b
   23200:	str	r1, [r0]
   23204:	ldr	r5, [fp, #24]
   23208:	ldr	r6, [fp, #20]
   2320c:	bl	11fe4 <__errno_location@plt>
   23210:	ldr	r4, [r0]
   23214:	mov	r0, r8
   23218:	bl	21c4c <_obstack_memory_used@@Base+0x186c>
   2321c:	str	r0, [sp]
   23220:	subs	r1, r4, #22
   23224:	movne	r1, r4
   23228:	cmp	r5, #0
   2322c:	movweq	r5, #1
   23230:	movw	r2, #25611	; 0x640b
   23234:	movt	r2, #2
   23238:	mov	r0, r5
   2323c:	mov	r3, r6
   23240:	bl	11eb8 <error@plt>
   23244:	cmp	r0, #1
   23248:	beq	23260 <_obstack_memory_used@@Base+0x2e80>
   2324c:	cmp	r0, #3
   23250:	bne	23204 <_obstack_memory_used@@Base+0x2e24>
   23254:	bl	11fe4 <__errno_location@plt>
   23258:	mov	r1, #0
   2325c:	b	23200 <_obstack_memory_used@@Base+0x2e20>
   23260:	bl	11fe4 <__errno_location@plt>
   23264:	mov	r1, #75	; 0x4b
   23268:	b	23200 <_obstack_memory_used@@Base+0x2e20>
   2326c:	mov	r1, #10
   23270:	b	2317c <_obstack_memory_used@@Base+0x2d9c>
   23274:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23278:	add	fp, sp, #28
   2327c:	sub	sp, sp, #108	; 0x6c
   23280:	mov	r0, #100	; 0x64
   23284:	str	r0, [sp, #4]
   23288:	mov	r9, #0
   2328c:	add	r7, sp, #8
   23290:	bl	11fe4 <__errno_location@plt>
   23294:	mov	r4, r0
   23298:	mov	sl, #1
   2329c:	add	r8, sp, #4
   232a0:	mov	r6, #0
   232a4:	ldr	r0, [sp, #4]
   232a8:	sub	r5, r0, #1
   232ac:	strb	r9, [r7, r5]
   232b0:	str	r9, [r4]
   232b4:	mov	r0, r7
   232b8:	mov	r1, r5
   232bc:	bl	11ec4 <gethostname@plt>
   232c0:	cmp	r0, #0
   232c4:	bne	232e0 <_obstack_memory_used@@Base+0x2f00>
   232c8:	mov	r0, r7
   232cc:	bl	11fc0 <strlen@plt>
   232d0:	add	r1, r0, #1
   232d4:	cmp	r1, r5
   232d8:	blt	233c4 <_obstack_memory_used@@Base+0x2fe4>
   232dc:	str	r9, [r4]
   232e0:	mov	r0, r6
   232e4:	bl	1bcc8 <putc_unlocked@plt+0x9b10>
   232e8:	ldr	r0, [r4]
   232ec:	cmp	r0, #36	; 0x24
   232f0:	bhi	233b4 <_obstack_memory_used@@Base+0x2fd4>
   232f4:	add	r1, pc, #0
   232f8:	ldr	pc, [r1, r0, lsl #2]
   232fc:	muleq	r2, r0, r3
   23300:			; <UNDEFINED> instruction: 0x000233b4
   23304:			; <UNDEFINED> instruction: 0x000233b4
   23308:			; <UNDEFINED> instruction: 0x000233b4
   2330c:			; <UNDEFINED> instruction: 0x000233b4
   23310:			; <UNDEFINED> instruction: 0x000233b4
   23314:			; <UNDEFINED> instruction: 0x000233b4
   23318:			; <UNDEFINED> instruction: 0x000233b4
   2331c:			; <UNDEFINED> instruction: 0x000233b4
   23320:			; <UNDEFINED> instruction: 0x000233b4
   23324:			; <UNDEFINED> instruction: 0x000233b4
   23328:			; <UNDEFINED> instruction: 0x000233b4
   2332c:	muleq	r2, r0, r3
   23330:			; <UNDEFINED> instruction: 0x000233b4
   23334:			; <UNDEFINED> instruction: 0x000233b4
   23338:			; <UNDEFINED> instruction: 0x000233b4
   2333c:			; <UNDEFINED> instruction: 0x000233b4
   23340:			; <UNDEFINED> instruction: 0x000233b4
   23344:			; <UNDEFINED> instruction: 0x000233b4
   23348:			; <UNDEFINED> instruction: 0x000233b4
   2334c:			; <UNDEFINED> instruction: 0x000233b4
   23350:			; <UNDEFINED> instruction: 0x000233b4
   23354:	muleq	r2, r0, r3
   23358:			; <UNDEFINED> instruction: 0x000233b4
   2335c:			; <UNDEFINED> instruction: 0x000233b4
   23360:			; <UNDEFINED> instruction: 0x000233b4
   23364:			; <UNDEFINED> instruction: 0x000233b4
   23368:			; <UNDEFINED> instruction: 0x000233b4
   2336c:			; <UNDEFINED> instruction: 0x000233b4
   23370:			; <UNDEFINED> instruction: 0x000233b4
   23374:			; <UNDEFINED> instruction: 0x000233b4
   23378:			; <UNDEFINED> instruction: 0x000233b4
   2337c:			; <UNDEFINED> instruction: 0x000233b4
   23380:			; <UNDEFINED> instruction: 0x000233b4
   23384:			; <UNDEFINED> instruction: 0x000233b4
   23388:			; <UNDEFINED> instruction: 0x000233b4
   2338c:	muleq	r2, r0, r3
   23390:	str	sl, [sp]
   23394:	mov	r0, #0
   23398:	mov	r1, r8
   2339c:	mov	r2, #1
   233a0:	mvn	r3, #0
   233a4:	bl	22ec8 <_obstack_memory_used@@Base+0x2ae8>
   233a8:	mov	r6, r0
   233ac:	mov	r7, r0
   233b0:	b	232a4 <_obstack_memory_used@@Base+0x2ec4>
   233b4:	mov	r6, #0
   233b8:	mov	r0, r6
   233bc:	sub	sp, fp, #28
   233c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   233c4:	cmp	r6, #0
   233c8:	bne	233b8 <_obstack_memory_used@@Base+0x2fd8>
   233cc:	mov	r0, r7
   233d0:	bl	230c0 <_obstack_memory_used@@Base+0x2ce0>
   233d4:	mov	r6, r0
   233d8:	b	233b8 <_obstack_memory_used@@Base+0x2fd8>
   233dc:	push	{fp, lr}
   233e0:	mov	fp, sp
   233e4:	sub	sp, sp, #8
   233e8:	movw	ip, #37572	; 0x92c4
   233ec:	movt	ip, #3
   233f0:	ldr	ip, [ip]
   233f4:	str	ip, [sp, #4]
   233f8:	ldr	ip, [fp, #8]
   233fc:	str	ip, [sp]
   23400:	bl	23408 <_obstack_memory_used@@Base+0x3028>
   23404:	bl	1214c <abort@plt>
   23408:	push	{r4, r5, r6, r7, fp, lr}
   2340c:	add	fp, sp, #16
   23410:	sub	sp, sp, #16
   23414:	sub	r0, r0, #1
   23418:	cmp	r0, #4
   2341c:	bcs	2349c <_obstack_memory_used@@Base+0x30bc>
   23420:	mov	r5, r1
   23424:	ldr	r4, [fp, #12]
   23428:	ldr	r6, [fp, #8]
   2342c:	movw	r1, #35432	; 0x8a68
   23430:	movt	r1, #2
   23434:	ldr	r1, [r1, r0, lsl #2]
   23438:	cmn	r5, #1
   2343c:	ble	23450 <_obstack_memory_used@@Base+0x3070>
   23440:	ldr	r7, [r3, r5, lsl #4]
   23444:	movw	r5, #35336	; 0x8a08
   23448:	movt	r5, #2
   2344c:	b	2346c <_obstack_memory_used@@Base+0x308c>
   23450:	mov	r0, #0
   23454:	strb	r0, [sp, #15]
   23458:	strb	r2, [sp, #14]
   2345c:	movw	r0, #35336	; 0x8a08
   23460:	movt	r0, #2
   23464:	sub	r5, r0, r5
   23468:	add	r7, sp, #14
   2346c:	mov	r0, #0
   23470:	mov	r2, #5
   23474:	bl	11db0 <dcgettext@plt>
   23478:	mov	r2, r0
   2347c:	str	r7, [sp]
   23480:	str	r6, [sp, #4]
   23484:	mov	r0, r4
   23488:	mov	r1, #0
   2348c:	mov	r3, r5
   23490:	bl	11eb8 <error@plt>
   23494:	sub	sp, fp, #16
   23498:	pop	{r4, r5, r6, r7, fp, pc}
   2349c:	bl	1214c <abort@plt>
   234a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   234a4:	add	fp, sp, #28
   234a8:	sub	sp, sp, #20
   234ac:	cmp	r2, #37	; 0x25
   234b0:	bcs	238e4 <_obstack_memory_used@@Base+0x3504>
   234b4:	mov	r5, r2
   234b8:	mov	r6, r1
   234bc:	mov	r4, r0
   234c0:	str	r3, [sp, #4]
   234c4:	ldr	sl, [fp, #8]
   234c8:	bl	11fe4 <__errno_location@plt>
   234cc:	mov	r7, r0
   234d0:	mov	r0, #0
   234d4:	str	r0, [r7]
   234d8:	bl	11f78 <__ctype_b_loc@plt>
   234dc:	ldr	r1, [r0]
   234e0:	mov	r2, r4
   234e4:	ldrb	r0, [r2], #1
   234e8:	add	r3, r1, r0, lsl #1
   234ec:	ldrb	r3, [r3, #1]
   234f0:	tst	r3, #32
   234f4:	bne	234e4 <_obstack_memory_used@@Base+0x3104>
   234f8:	add	r9, sp, #16
   234fc:	cmp	r6, #0
   23500:	movne	r9, r6
   23504:	mov	r8, #4
   23508:	cmp	r0, #45	; 0x2d
   2350c:	beq	238d8 <_obstack_memory_used@@Base+0x34f8>
   23510:	mov	r0, r4
   23514:	mov	r1, r9
   23518:	mov	r2, r5
   2351c:	bl	12038 <strtoumax@plt>
   23520:	str	r1, [sp, #12]
   23524:	str	r0, [sp, #8]
   23528:	ldr	r6, [r9]
   2352c:	cmp	r6, r4
   23530:	beq	23558 <_obstack_memory_used@@Base+0x3178>
   23534:	ldr	r0, [r7]
   23538:	cmp	r0, #0
   2353c:	beq	23590 <_obstack_memory_used@@Base+0x31b0>
   23540:	cmp	r0, #34	; 0x22
   23544:	bne	238d8 <_obstack_memory_used@@Base+0x34f8>
   23548:	mov	r8, #1
   2354c:	cmp	sl, #0
   23550:	bne	2359c <_obstack_memory_used@@Base+0x31bc>
   23554:	b	238c8 <_obstack_memory_used@@Base+0x34e8>
   23558:	cmp	sl, #0
   2355c:	beq	238d8 <_obstack_memory_used@@Base+0x34f8>
   23560:	ldrb	r1, [r6]
   23564:	cmp	r1, #0
   23568:	beq	238d8 <_obstack_memory_used@@Base+0x34f8>
   2356c:	mov	r0, sl
   23570:	bl	11fcc <strchr@plt>
   23574:	cmp	r0, #0
   23578:	beq	238d8 <_obstack_memory_used@@Base+0x34f8>
   2357c:	mov	r8, #0
   23580:	str	r8, [sp, #12]
   23584:	mov	r0, #1
   23588:	str	r0, [sp, #8]
   2358c:	b	2359c <_obstack_memory_used@@Base+0x31bc>
   23590:	mov	r8, r0
   23594:	cmp	sl, #0
   23598:	beq	238c8 <_obstack_memory_used@@Base+0x34e8>
   2359c:	ldrb	r4, [r6]
   235a0:	cmp	r4, #0
   235a4:	beq	238c8 <_obstack_memory_used@@Base+0x34e8>
   235a8:	mov	r0, sl
   235ac:	mov	r1, r4
   235b0:	bl	11fcc <strchr@plt>
   235b4:	cmp	r0, #0
   235b8:	beq	237e4 <_obstack_memory_used@@Base+0x3404>
   235bc:	sub	r0, r4, #69	; 0x45
   235c0:	mov	r7, #1
   235c4:	mov	r5, #1024	; 0x400
   235c8:	cmp	r0, #47	; 0x2f
   235cc:	bhi	236e0 <_obstack_memory_used@@Base+0x3300>
   235d0:	add	r1, pc, #0
   235d4:	ldr	pc, [r1, r0, lsl #2]
   235d8:	muleq	r2, r8, r6
   235dc:	andeq	r3, r2, r0, ror #13
   235e0:	muleq	r2, r8, r6
   235e4:	andeq	r3, r2, r0, ror #13
   235e8:	andeq	r3, r2, r0, ror #13
   235ec:	andeq	r3, r2, r0, ror #13
   235f0:	muleq	r2, r8, r6
   235f4:	andeq	r3, r2, r0, ror #13
   235f8:	muleq	r2, r8, r6
   235fc:	andeq	r3, r2, r0, ror #13
   23600:	andeq	r3, r2, r0, ror #13
   23604:	muleq	r2, r8, r6
   23608:	andeq	r3, r2, r0, ror #13
   2360c:	andeq	r3, r2, r0, ror #13
   23610:	andeq	r3, r2, r0, ror #13
   23614:	muleq	r2, r8, r6
   23618:	andeq	r3, r2, r0, ror #13
   2361c:	andeq	r3, r2, r0, ror #13
   23620:	andeq	r3, r2, r0, ror #13
   23624:	andeq	r3, r2, r0, ror #13
   23628:	muleq	r2, r8, r6
   2362c:	muleq	r2, r8, r6
   23630:	andeq	r3, r2, r0, ror #13
   23634:	andeq	r3, r2, r0, ror #13
   23638:	andeq	r3, r2, r0, ror #13
   2363c:	andeq	r3, r2, r0, ror #13
   23640:	andeq	r3, r2, r0, ror #13
   23644:	andeq	r3, r2, r0, ror #13
   23648:	andeq	r3, r2, r0, ror #13
   2364c:	andeq	r3, r2, r0, ror #13
   23650:	andeq	r3, r2, r0, ror #13
   23654:	andeq	r3, r2, r0, ror #13
   23658:	andeq	r3, r2, r0, ror #13
   2365c:	andeq	r3, r2, r0, ror #13
   23660:	muleq	r2, r8, r6
   23664:	andeq	r3, r2, r0, ror #13
   23668:	andeq	r3, r2, r0, ror #13
   2366c:	andeq	r3, r2, r0, ror #13
   23670:	muleq	r2, r8, r6
   23674:	andeq	r3, r2, r0, ror #13
   23678:	muleq	r2, r8, r6
   2367c:	andeq	r3, r2, r0, ror #13
   23680:	andeq	r3, r2, r0, ror #13
   23684:	andeq	r3, r2, r0, ror #13
   23688:	andeq	r3, r2, r0, ror #13
   2368c:	andeq	r3, r2, r0, ror #13
   23690:	andeq	r3, r2, r0, ror #13
   23694:	muleq	r2, r8, r6
   23698:	mov	r0, sl
   2369c:	mov	r1, #48	; 0x30
   236a0:	bl	11fcc <strchr@plt>
   236a4:	cmp	r0, #0
   236a8:	beq	236e0 <_obstack_memory_used@@Base+0x3300>
   236ac:	ldrb	r0, [r6, #1]
   236b0:	cmp	r0, #66	; 0x42
   236b4:	cmpne	r0, #68	; 0x44
   236b8:	bne	236c8 <_obstack_memory_used@@Base+0x32e8>
   236bc:	mov	r7, #2
   236c0:	mov	r5, #1000	; 0x3e8
   236c4:	b	236e0 <_obstack_memory_used@@Base+0x3300>
   236c8:	cmp	r0, #105	; 0x69
   236cc:	bne	236e0 <_obstack_memory_used@@Base+0x3300>
   236d0:	ldrb	r0, [r6, #2]
   236d4:	mov	r7, #1
   236d8:	cmp	r0, #66	; 0x42
   236dc:	movweq	r7, #3
   236e0:	sub	r1, r4, #66	; 0x42
   236e4:	cmp	r1, #53	; 0x35
   236e8:	bhi	237e4 <_obstack_memory_used@@Base+0x3404>
   236ec:	mov	r0, #0
   236f0:	add	r2, pc, #0
   236f4:	ldr	pc, [r2, r1, lsl #2]
   236f8:	andeq	r3, r2, ip, asr #16
   236fc:	andeq	r3, r2, r4, ror #15
   23700:	andeq	r3, r2, r4, ror #15
   23704:	andeq	r3, r2, r8, asr r8
   23708:	andeq	r3, r2, r4, ror #15
   2370c:	ldrdeq	r3, [r2], -r0
   23710:	andeq	r3, r2, r4, ror #15
   23714:	andeq	r3, r2, r4, ror #15
   23718:	andeq	r3, r2, r4, ror #15
   2371c:	strdeq	r3, [r2], -ip
   23720:	andeq	r3, r2, r4, ror #15
   23724:	andeq	r3, r2, r0, lsl r8
   23728:	andeq	r3, r2, r4, ror #15
   2372c:	andeq	r3, r2, r4, ror #15
   23730:	andeq	r3, r2, ip, ror #16
   23734:	andeq	r3, r2, r4, ror #15
   23738:	andeq	r3, r2, r4, ror #15
   2373c:	andeq	r3, r2, r4, ror #15
   23740:	andeq	r3, r2, r4, lsr #16
   23744:	andeq	r3, r2, r4, ror #15
   23748:	andeq	r3, r2, r4, ror #15
   2374c:	andeq	r3, r2, r4, ror #15
   23750:	andeq	r3, r2, r4, ror #15
   23754:	andeq	r3, r2, r0, lsl #17
   23758:	andeq	r3, r2, r8, lsr r8
   2375c:	andeq	r3, r2, r4, ror #15
   23760:	andeq	r3, r2, r4, ror #15
   23764:	andeq	r3, r2, r4, ror #15
   23768:	andeq	r3, r2, r4, ror #15
   2376c:	andeq	r3, r2, r4, ror #15
   23770:	andeq	r3, r2, r4, ror #15
   23774:	andeq	r3, r2, r4, ror #15
   23778:	muleq	r2, r4, r8
   2377c:	andeq	r3, r2, ip, lsr #17
   23780:	andeq	r3, r2, r4, ror #15
   23784:	andeq	r3, r2, r4, ror #15
   23788:	andeq	r3, r2, r4, ror #15
   2378c:	ldrdeq	r3, [r2], -r0
   23790:	andeq	r3, r2, r4, ror #15
   23794:	andeq	r3, r2, r4, ror #15
   23798:	andeq	r3, r2, r4, ror #15
   2379c:	strdeq	r3, [r2], -ip
   237a0:	andeq	r3, r2, r4, ror #15
   237a4:	andeq	r3, r2, r0, lsl r8
   237a8:	andeq	r3, r2, r4, ror #15
   237ac:	andeq	r3, r2, r4, ror #15
   237b0:	andeq	r3, r2, r4, ror #15
   237b4:	andeq	r3, r2, r4, ror #15
   237b8:	andeq	r3, r2, r4, ror #15
   237bc:	andeq	r3, r2, r4, ror #15
   237c0:	andeq	r3, r2, r4, lsr #16
   237c4:	andeq	r3, r2, r4, ror #15
   237c8:	andeq	r3, r2, r4, ror #15
   237cc:	andeq	r3, r2, r0, lsr #17
   237d0:	add	r0, sp, #8
   237d4:	mov	r1, r5
   237d8:	mov	r2, #3
   237dc:	bl	23990 <_obstack_memory_used@@Base+0x35b0>
   237e0:	b	238ac <_obstack_memory_used@@Base+0x34cc>
   237e4:	ldr	r0, [sp, #8]
   237e8:	ldr	r1, [sp, #12]
   237ec:	ldr	r2, [sp, #4]
   237f0:	strd	r0, [r2]
   237f4:	orr	r8, r8, #2
   237f8:	b	238d8 <_obstack_memory_used@@Base+0x34f8>
   237fc:	add	r0, sp, #8
   23800:	mov	r1, r5
   23804:	mov	r2, #1
   23808:	bl	23990 <_obstack_memory_used@@Base+0x35b0>
   2380c:	b	238ac <_obstack_memory_used@@Base+0x34cc>
   23810:	add	r0, sp, #8
   23814:	mov	r1, r5
   23818:	mov	r2, #2
   2381c:	bl	23990 <_obstack_memory_used@@Base+0x35b0>
   23820:	b	238ac <_obstack_memory_used@@Base+0x34cc>
   23824:	add	r0, sp, #8
   23828:	mov	r1, r5
   2382c:	mov	r2, #4
   23830:	bl	23990 <_obstack_memory_used@@Base+0x35b0>
   23834:	b	238ac <_obstack_memory_used@@Base+0x34cc>
   23838:	add	r0, sp, #8
   2383c:	mov	r1, r5
   23840:	mov	r2, #7
   23844:	bl	23990 <_obstack_memory_used@@Base+0x35b0>
   23848:	b	238ac <_obstack_memory_used@@Base+0x34cc>
   2384c:	add	r0, sp, #8
   23850:	mov	r1, #1024	; 0x400
   23854:	b	238a8 <_obstack_memory_used@@Base+0x34c8>
   23858:	add	r0, sp, #8
   2385c:	mov	r1, r5
   23860:	mov	r2, #6
   23864:	bl	23990 <_obstack_memory_used@@Base+0x35b0>
   23868:	b	238ac <_obstack_memory_used@@Base+0x34cc>
   2386c:	add	r0, sp, #8
   23870:	mov	r1, r5
   23874:	mov	r2, #5
   23878:	bl	23990 <_obstack_memory_used@@Base+0x35b0>
   2387c:	b	238ac <_obstack_memory_used@@Base+0x34cc>
   23880:	add	r0, sp, #8
   23884:	mov	r1, r5
   23888:	mov	r2, #8
   2388c:	bl	23990 <_obstack_memory_used@@Base+0x35b0>
   23890:	b	238ac <_obstack_memory_used@@Base+0x34cc>
   23894:	add	r0, sp, #8
   23898:	mov	r1, #512	; 0x200
   2389c:	b	238a8 <_obstack_memory_used@@Base+0x34c8>
   238a0:	add	r0, sp, #8
   238a4:	mov	r1, #2
   238a8:	bl	23904 <_obstack_memory_used@@Base+0x3524>
   238ac:	ldr	r1, [r9]
   238b0:	add	r2, r1, r7
   238b4:	str	r2, [r9]
   238b8:	ldrb	r1, [r1, r7]
   238bc:	orr	r8, r0, r8
   238c0:	cmp	r1, #0
   238c4:	orrne	r8, r8, #2
   238c8:	ldr	r0, [sp, #8]
   238cc:	ldr	r1, [sp, #12]
   238d0:	ldr	r2, [sp, #4]
   238d4:	strd	r0, [r2]
   238d8:	mov	r0, r8
   238dc:	sub	sp, fp, #28
   238e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   238e4:	movw	r0, #35448	; 0x8a78
   238e8:	movt	r0, #2
   238ec:	movw	r1, #35486	; 0x8a9e
   238f0:	movt	r1, #2
   238f4:	movw	r3, #35502	; 0x8aae
   238f8:	movt	r3, #2
   238fc:	mov	r2, #85	; 0x55
   23900:	bl	121ac <__assert_fail@plt>
   23904:	push	{r4, r5, r6, r7, fp, lr}
   23908:	add	fp, sp, #16
   2390c:	mov	r5, r1
   23910:	mov	r4, r0
   23914:	cmn	r1, #1
   23918:	ble	23950 <_obstack_memory_used@@Base+0x3570>
   2391c:	cmp	r5, #0
   23920:	beq	23970 <_obstack_memory_used@@Base+0x3590>
   23924:	asr	r3, r5, #31
   23928:	mvn	r6, #0
   2392c:	mvn	r0, #0
   23930:	mvn	r1, #0
   23934:	mov	r2, r5
   23938:	bl	243c4 <_obstack_memory_used@@Base+0x3fe4>
   2393c:	ldrd	r2, [r4]
   23940:	subs	r0, r0, r2
   23944:	sbcs	r0, r1, r3
   23948:	bcc	23960 <_obstack_memory_used@@Base+0x3580>
   2394c:	b	23970 <_obstack_memory_used@@Base+0x3590>
   23950:	ldrd	r0, [r4]
   23954:	orrs	r0, r0, r1
   23958:	beq	23970 <_obstack_memory_used@@Base+0x3590>
   2395c:	mvn	r6, #0
   23960:	mov	r0, #1
   23964:	mvn	r7, #0
   23968:	strd	r6, [r4]
   2396c:	pop	{r4, r5, r6, r7, fp, pc}
   23970:	ldrd	r0, [r4]
   23974:	umull	r6, r2, r0, r5
   23978:	asr	r3, r5, #31
   2397c:	mla	r0, r0, r3, r2
   23980:	mla	r7, r1, r5, r0
   23984:	mov	r0, #0
   23988:	strd	r6, [r4]
   2398c:	pop	{r4, r5, r6, r7, fp, pc}
   23990:	push	{r4, r5, r6, r7, fp, lr}
   23994:	add	fp, sp, #16
   23998:	cmp	r2, #0
   2399c:	beq	239d0 <_obstack_memory_used@@Base+0x35f0>
   239a0:	mov	r4, r2
   239a4:	mov	r5, r1
   239a8:	mov	r7, r0
   239ac:	mov	r6, #0
   239b0:	mov	r0, r7
   239b4:	mov	r1, r5
   239b8:	bl	23904 <_obstack_memory_used@@Base+0x3524>
   239bc:	orr	r6, r0, r6
   239c0:	subs	r4, r4, #1
   239c4:	bne	239b0 <_obstack_memory_used@@Base+0x35d0>
   239c8:	mov	r0, r6
   239cc:	pop	{r4, r5, r6, r7, fp, pc}
   239d0:	mov	r6, #0
   239d4:	mov	r0, r6
   239d8:	pop	{r4, r5, r6, r7, fp, pc}
   239dc:	clz	r2, r1
   239e0:	lsr	r2, r2, #5
   239e4:	clz	r3, r0
   239e8:	lsr	r3, r3, #5
   239ec:	orrs	r2, r3, r2
   239f0:	movwne	r1, #1
   239f4:	movwne	r0, #1
   239f8:	cmp	r1, #0
   239fc:	beq	23a2c <_obstack_memory_used@@Base+0x364c>
   23a00:	mvn	r2, #-2147483648	; 0x80000000
   23a04:	udiv	r2, r2, r1
   23a08:	cmp	r2, r0
   23a0c:	bcs	23a2c <_obstack_memory_used@@Base+0x364c>
   23a10:	push	{fp, lr}
   23a14:	mov	fp, sp
   23a18:	bl	11fe4 <__errno_location@plt>
   23a1c:	mov	r1, #12
   23a20:	str	r1, [r0]
   23a24:	mov	r0, #0
   23a28:	pop	{fp, pc}
   23a2c:	b	11c78 <calloc@plt>
   23a30:	cmp	r0, #0
   23a34:	movweq	r0, #1
   23a38:	cmn	r0, #1
   23a3c:	ble	23a44 <_obstack_memory_used@@Base+0x3664>
   23a40:	b	11f0c <malloc@plt>
   23a44:	push	{fp, lr}
   23a48:	mov	fp, sp
   23a4c:	bl	11fe4 <__errno_location@plt>
   23a50:	mov	r1, #12
   23a54:	str	r1, [r0]
   23a58:	mov	r0, #0
   23a5c:	pop	{fp, pc}
   23a60:	push	{fp, lr}
   23a64:	mov	fp, sp
   23a68:	cmp	r0, #0
   23a6c:	beq	23a88 <_obstack_memory_used@@Base+0x36a8>
   23a70:	cmp	r1, #0
   23a74:	beq	23a94 <_obstack_memory_used@@Base+0x36b4>
   23a78:	cmn	r1, #1
   23a7c:	ble	23aa0 <_obstack_memory_used@@Base+0x36c0>
   23a80:	pop	{fp, lr}
   23a84:	b	11dbc <realloc@plt>
   23a88:	mov	r0, r1
   23a8c:	pop	{fp, lr}
   23a90:	b	23a30 <_obstack_memory_used@@Base+0x3650>
   23a94:	bl	1bcc8 <putc_unlocked@plt+0x9b10>
   23a98:	mov	r0, #0
   23a9c:	pop	{fp, pc}
   23aa0:	bl	11fe4 <__errno_location@plt>
   23aa4:	mov	r1, #12
   23aa8:	str	r1, [r0]
   23aac:	mov	r0, #0
   23ab0:	pop	{fp, pc}
   23ab4:	push	{r4, r5, r6, sl, fp, lr}
   23ab8:	add	fp, sp, #16
   23abc:	rsb	lr, r2, #64	; 0x40
   23ac0:	lsr	ip, r0, lr
   23ac4:	rsb	r3, lr, #32
   23ac8:	orr	r3, ip, r1, lsl r3
   23acc:	rsbs	r5, r2, #32
   23ad0:	lsrpl	r3, r1, r5
   23ad4:	lsl	r4, r0, r2
   23ad8:	subs	r6, r2, #32
   23adc:	movwpl	r4, #0
   23ae0:	orr	ip, r3, r4
   23ae4:	lsr	r3, r0, r5
   23ae8:	orr	r2, r3, r1, lsl r2
   23aec:	lslpl	r2, r0, r6
   23af0:	lsr	r0, r1, lr
   23af4:	cmp	r5, #0
   23af8:	movwpl	r0, #0
   23afc:	orr	r1, r0, r2
   23b00:	mov	r0, ip
   23b04:	pop	{r4, r5, r6, sl, fp, pc}
   23b08:	push	{r4, r5, fp, lr}
   23b0c:	add	fp, sp, #8
   23b10:	lsr	ip, r0, r2
   23b14:	rsb	r3, r2, #32
   23b18:	orr	ip, ip, r1, lsl r3
   23b1c:	subs	lr, r2, #32
   23b20:	lsrpl	ip, r1, lr
   23b24:	rsb	r4, r2, #64	; 0x40
   23b28:	lsl	r5, r0, r4
   23b2c:	cmp	r3, #0
   23b30:	movwpl	r5, #0
   23b34:	orr	ip, r5, ip
   23b38:	rsb	r5, r4, #32
   23b3c:	lsr	r5, r0, r5
   23b40:	orr	r4, r5, r1, lsl r4
   23b44:	cmp	r3, #0
   23b48:	lslpl	r4, r0, r3
   23b4c:	lsr	r0, r1, r2
   23b50:	cmp	lr, #0
   23b54:	movwpl	r0, #0
   23b58:	orr	r1, r4, r0
   23b5c:	mov	r0, ip
   23b60:	pop	{r4, r5, fp, pc}
   23b64:	rsb	r1, r1, #32
   23b68:	ror	r0, r0, r1
   23b6c:	bx	lr
   23b70:	ror	r0, r0, r1
   23b74:	bx	lr
   23b78:	rsb	r1, r1, #32
   23b7c:	ror	r0, r0, r1
   23b80:	bx	lr
   23b84:	ror	r0, r0, r1
   23b88:	bx	lr
   23b8c:	and	r2, r1, #15
   23b90:	lsl	r2, r0, r2
   23b94:	rsb	r1, r1, #0
   23b98:	and	r1, r1, #15
   23b9c:	orr	r0, r2, r0, lsr r1
   23ba0:	uxth	r0, r0
   23ba4:	bx	lr
   23ba8:	rsb	r2, r1, #0
   23bac:	and	r2, r2, #15
   23bb0:	lsl	r2, r0, r2
   23bb4:	and	r1, r1, #15
   23bb8:	orr	r0, r2, r0, lsr r1
   23bbc:	uxth	r0, r0
   23bc0:	bx	lr
   23bc4:	and	r2, r1, #7
   23bc8:	lsl	r2, r0, r2
   23bcc:	rsb	r1, r1, #0
   23bd0:	and	r1, r1, #7
   23bd4:	orr	r0, r2, r0, lsr r1
   23bd8:	uxtb	r0, r0
   23bdc:	bx	lr
   23be0:	rsb	r2, r1, #0
   23be4:	and	r2, r2, #7
   23be8:	lsl	r2, r0, r2
   23bec:	and	r1, r1, #7
   23bf0:	orr	r0, r2, r0, lsr r1
   23bf4:	uxtb	r0, r0
   23bf8:	bx	lr
   23bfc:	push	{r4, r5, r6, sl, fp, lr}
   23c00:	add	fp, sp, #16
   23c04:	mov	r4, r0
   23c08:	bl	11e88 <__fpending@plt>
   23c0c:	mov	r5, r0
   23c10:	mov	r0, r4
   23c14:	bl	11e94 <ferror_unlocked@plt>
   23c18:	mov	r6, r0
   23c1c:	mov	r0, r4
   23c20:	bl	23c80 <_obstack_memory_used@@Base+0x38a0>
   23c24:	cmp	r6, #0
   23c28:	beq	23c4c <_obstack_memory_used@@Base+0x386c>
   23c2c:	mvn	r4, #0
   23c30:	cmp	r0, #0
   23c34:	bne	23c78 <_obstack_memory_used@@Base+0x3898>
   23c38:	bl	11fe4 <__errno_location@plt>
   23c3c:	mov	r1, #0
   23c40:	str	r1, [r0]
   23c44:	mov	r0, r4
   23c48:	pop	{r4, r5, r6, sl, fp, pc}
   23c4c:	cmp	r0, #0
   23c50:	mov	r4, r0
   23c54:	mvnne	r4, #0
   23c58:	cmp	r5, #0
   23c5c:	bne	23c78 <_obstack_memory_used@@Base+0x3898>
   23c60:	cmp	r0, #0
   23c64:	beq	23c78 <_obstack_memory_used@@Base+0x3898>
   23c68:	bl	11fe4 <__errno_location@plt>
   23c6c:	ldr	r0, [r0]
   23c70:	subs	r4, r0, #9
   23c74:	mvnne	r4, #0
   23c78:	mov	r0, r4
   23c7c:	pop	{r4, r5, r6, sl, fp, pc}
   23c80:	push	{r4, r5, fp, lr}
   23c84:	add	fp, sp, #8
   23c88:	sub	sp, sp, #8
   23c8c:	mov	r4, r0
   23c90:	bl	1202c <fileno@plt>
   23c94:	cmn	r0, #1
   23c98:	ble	23d10 <_obstack_memory_used@@Base+0x3930>
   23c9c:	mov	r0, r4
   23ca0:	bl	11f3c <__freading@plt>
   23ca4:	cmp	r0, #0
   23ca8:	beq	23cd4 <_obstack_memory_used@@Base+0x38f4>
   23cac:	mov	r0, r4
   23cb0:	bl	1202c <fileno@plt>
   23cb4:	mov	r1, #1
   23cb8:	str	r1, [sp]
   23cbc:	mov	r2, #0
   23cc0:	mov	r3, #0
   23cc4:	bl	11e64 <lseek64@plt>
   23cc8:	and	r0, r0, r1
   23ccc:	cmn	r0, #1
   23cd0:	beq	23d10 <_obstack_memory_used@@Base+0x3930>
   23cd4:	mov	r0, r4
   23cd8:	bl	23d20 <_obstack_memory_used@@Base+0x3940>
   23cdc:	cmp	r0, #0
   23ce0:	beq	23d10 <_obstack_memory_used@@Base+0x3930>
   23ce4:	bl	11fe4 <__errno_location@plt>
   23ce8:	ldr	r5, [r0]
   23cec:	mov	r0, r4
   23cf0:	bl	12050 <fclose@plt>
   23cf4:	cmp	r5, #0
   23cf8:	beq	23d08 <_obstack_memory_used@@Base+0x3928>
   23cfc:	bl	11fe4 <__errno_location@plt>
   23d00:	str	r5, [r0]
   23d04:	mvn	r0, #0
   23d08:	sub	sp, fp, #8
   23d0c:	pop	{r4, r5, fp, pc}
   23d10:	mov	r0, r4
   23d14:	sub	sp, fp, #8
   23d18:	pop	{r4, r5, fp, lr}
   23d1c:	b	12050 <fclose@plt>
   23d20:	push	{r4, sl, fp, lr}
   23d24:	add	fp, sp, #8
   23d28:	mov	r4, r0
   23d2c:	cmp	r0, #0
   23d30:	beq	23d48 <_obstack_memory_used@@Base+0x3968>
   23d34:	mov	r0, r4
   23d38:	bl	11f3c <__freading@plt>
   23d3c:	cmp	r0, #0
   23d40:	movne	r0, r4
   23d44:	blne	23d54 <_obstack_memory_used@@Base+0x3974>
   23d48:	mov	r0, r4
   23d4c:	pop	{r4, sl, fp, lr}
   23d50:	b	11d08 <fflush@plt>
   23d54:	push	{fp, lr}
   23d58:	mov	fp, sp
   23d5c:	sub	sp, sp, #8
   23d60:	ldrb	r1, [r0, #1]
   23d64:	tst	r1, #1
   23d68:	beq	23d80 <_obstack_memory_used@@Base+0x39a0>
   23d6c:	mov	r1, #1
   23d70:	str	r1, [sp]
   23d74:	mov	r2, #0
   23d78:	mov	r3, #0
   23d7c:	bl	23d88 <_obstack_memory_used@@Base+0x39a8>
   23d80:	mov	sp, fp
   23d84:	pop	{fp, pc}
   23d88:	push	{r4, r5, r6, r7, fp, lr}
   23d8c:	add	fp, sp, #16
   23d90:	sub	sp, sp, #8
   23d94:	mov	r5, r3
   23d98:	mov	r6, r2
   23d9c:	mov	r4, r0
   23da0:	ldr	r0, [r0, #4]
   23da4:	ldr	r1, [r4, #8]
   23da8:	cmp	r1, r0
   23dac:	bne	23dc8 <_obstack_memory_used@@Base+0x39e8>
   23db0:	ldrd	r0, [r4, #16]
   23db4:	cmp	r1, r0
   23db8:	bne	23dc8 <_obstack_memory_used@@Base+0x39e8>
   23dbc:	ldr	r0, [r4, #36]	; 0x24
   23dc0:	cmp	r0, #0
   23dc4:	beq	23de0 <_obstack_memory_used@@Base+0x3a00>
   23dc8:	mov	r0, r4
   23dcc:	mov	r2, r6
   23dd0:	mov	r3, r5
   23dd4:	sub	sp, fp, #16
   23dd8:	pop	{r4, r5, r6, r7, fp, lr}
   23ddc:	b	1205c <fseeko64@plt>
   23de0:	ldr	r7, [fp, #8]
   23de4:	mov	r0, r4
   23de8:	bl	1202c <fileno@plt>
   23dec:	str	r7, [sp]
   23df0:	mov	r2, r6
   23df4:	mov	r3, r5
   23df8:	bl	11e64 <lseek64@plt>
   23dfc:	and	r2, r0, r1
   23e00:	cmn	r2, #1
   23e04:	beq	23e24 <_obstack_memory_used@@Base+0x3a44>
   23e08:	strd	r0, [r4, #80]	; 0x50
   23e0c:	ldr	r0, [r4]
   23e10:	bic	r0, r0, #16
   23e14:	str	r0, [r4]
   23e18:	mov	r0, #0
   23e1c:	sub	sp, fp, #16
   23e20:	pop	{r4, r5, r6, r7, fp, pc}
   23e24:	mvn	r0, #0
   23e28:	sub	sp, fp, #16
   23e2c:	pop	{r4, r5, r6, r7, fp, pc}
   23e30:	ldrb	r2, [r0]
   23e34:	cmp	r2, #0
   23e38:	beq	23e5c <_obstack_memory_used@@Base+0x3a7c>
   23e3c:	add	r3, r0, #1
   23e40:	mov	r0, #0
   23e44:	ror	r0, r0, #23
   23e48:	uxtab	r0, r0, r2
   23e4c:	ldrb	r2, [r3], #1
   23e50:	cmp	r2, #0
   23e54:	bne	23e44 <_obstack_memory_used@@Base+0x3a64>
   23e58:	b	23e60 <_obstack_memory_used@@Base+0x3a80>
   23e5c:	mov	r0, #0
   23e60:	udiv	r2, r0, r1
   23e64:	mls	r0, r2, r1, r0
   23e68:	bx	lr
   23e6c:	push	{fp, lr}
   23e70:	mov	fp, sp
   23e74:	bl	11fe4 <__errno_location@plt>
   23e78:	mov	r1, #12
   23e7c:	str	r1, [r0]
   23e80:	mov	r0, #0
   23e84:	pop	{fp, pc}
   23e88:	b	23a30 <_obstack_memory_used@@Base+0x3650>
   23e8c:	cmp	r1, #0
   23e90:	orreq	r1, r1, #1
   23e94:	b	23a60 <_obstack_memory_used@@Base+0x3680>
   23e98:	b	239dc <_obstack_memory_used@@Base+0x35fc>
   23e9c:	clz	r3, r2
   23ea0:	lsr	ip, r3, #5
   23ea4:	clz	r3, r1
   23ea8:	lsr	r3, r3, #5
   23eac:	orrs	r3, r3, ip
   23eb0:	movwne	r1, #1
   23eb4:	movwne	r2, #1
   23eb8:	b	23ef4 <_obstack_memory_used@@Base+0x3b14>
   23ebc:	push	{fp, lr}
   23ec0:	mov	fp, sp
   23ec4:	mov	r0, #14
   23ec8:	bl	120b0 <nl_langinfo@plt>
   23ecc:	movw	r1, #27197	; 0x6a3d
   23ed0:	movt	r1, #2
   23ed4:	cmp	r0, #0
   23ed8:	movne	r1, r0
   23edc:	ldrb	r2, [r1]
   23ee0:	movw	r0, #35581	; 0x8afd
   23ee4:	movt	r0, #2
   23ee8:	cmp	r2, #0
   23eec:	movne	r0, r1
   23ef0:	pop	{fp, pc}
   23ef4:	cmp	r2, #0
   23ef8:	beq	23f28 <_obstack_memory_used@@Base+0x3b48>
   23efc:	mvn	r3, #0
   23f00:	udiv	r3, r3, r2
   23f04:	cmp	r3, r1
   23f08:	bcs	23f28 <_obstack_memory_used@@Base+0x3b48>
   23f0c:	push	{fp, lr}
   23f10:	mov	fp, sp
   23f14:	bl	11fe4 <__errno_location@plt>
   23f18:	mov	r1, #12
   23f1c:	str	r1, [r0]
   23f20:	mov	r0, #0
   23f24:	pop	{fp, pc}
   23f28:	mul	r1, r2, r1
   23f2c:	b	23a60 <_obstack_memory_used@@Base+0x3680>
   23f30:	eor	r1, r1, #-2147483648	; 0x80000000
   23f34:	b	23f3c <_obstack_memory_used@@Base+0x3b5c>
   23f38:	eor	r3, r3, #-2147483648	; 0x80000000
   23f3c:	push	{r4, r5, lr}
   23f40:	lsl	r4, r1, #1
   23f44:	lsl	r5, r3, #1
   23f48:	teq	r4, r5
   23f4c:	teqeq	r0, r2
   23f50:	orrsne	ip, r4, r0
   23f54:	orrsne	ip, r5, r2
   23f58:	mvnsne	ip, r4, asr #21
   23f5c:	mvnsne	ip, r5, asr #21
   23f60:	beq	2414c <_obstack_memory_used@@Base+0x3d6c>
   23f64:	lsr	r4, r4, #21
   23f68:	rsbs	r5, r4, r5, lsr #21
   23f6c:	rsblt	r5, r5, #0
   23f70:	ble	23f90 <_obstack_memory_used@@Base+0x3bb0>
   23f74:	add	r4, r4, r5
   23f78:	eor	r2, r0, r2
   23f7c:	eor	r3, r1, r3
   23f80:	eor	r0, r2, r0
   23f84:	eor	r1, r3, r1
   23f88:	eor	r2, r0, r2
   23f8c:	eor	r3, r1, r3
   23f90:	cmp	r5, #54	; 0x36
   23f94:	pophi	{r4, r5, pc}
   23f98:	tst	r1, #-2147483648	; 0x80000000
   23f9c:	lsl	r1, r1, #12
   23fa0:	mov	ip, #1048576	; 0x100000
   23fa4:	orr	r1, ip, r1, lsr #12
   23fa8:	beq	23fb4 <_obstack_memory_used@@Base+0x3bd4>
   23fac:	rsbs	r0, r0, #0
   23fb0:	rsc	r1, r1, #0
   23fb4:	tst	r3, #-2147483648	; 0x80000000
   23fb8:	lsl	r3, r3, #12
   23fbc:	orr	r3, ip, r3, lsr #12
   23fc0:	beq	23fcc <_obstack_memory_used@@Base+0x3bec>
   23fc4:	rsbs	r2, r2, #0
   23fc8:	rsc	r3, r3, #0
   23fcc:	teq	r4, r5
   23fd0:	beq	24134 <_obstack_memory_used@@Base+0x3d54>
   23fd4:	sub	r4, r4, #1
   23fd8:	rsbs	lr, r5, #32
   23fdc:	blt	23ff8 <_obstack_memory_used@@Base+0x3c18>
   23fe0:	lsl	ip, r2, lr
   23fe4:	adds	r0, r0, r2, lsr r5
   23fe8:	adc	r1, r1, #0
   23fec:	adds	r0, r0, r3, lsl lr
   23ff0:	adcs	r1, r1, r3, asr r5
   23ff4:	b	24014 <_obstack_memory_used@@Base+0x3c34>
   23ff8:	sub	r5, r5, #32
   23ffc:	add	lr, lr, #32
   24000:	cmp	r2, #1
   24004:	lsl	ip, r3, lr
   24008:	orrcs	ip, ip, #2
   2400c:	adds	r0, r0, r3, asr r5
   24010:	adcs	r1, r1, r3, asr #31
   24014:	and	r5, r1, #-2147483648	; 0x80000000
   24018:	bpl	24028 <_obstack_memory_used@@Base+0x3c48>
   2401c:	rsbs	ip, ip, #0
   24020:	rscs	r0, r0, #0
   24024:	rsc	r1, r1, #0
   24028:	cmp	r1, #1048576	; 0x100000
   2402c:	bcc	2406c <_obstack_memory_used@@Base+0x3c8c>
   24030:	cmp	r1, #2097152	; 0x200000
   24034:	bcc	24054 <_obstack_memory_used@@Base+0x3c74>
   24038:	lsrs	r1, r1, #1
   2403c:	rrxs	r0, r0
   24040:	rrx	ip, ip
   24044:	add	r4, r4, #1
   24048:	lsl	r2, r4, #21
   2404c:	cmn	r2, #4194304	; 0x400000
   24050:	bcs	241ac <_obstack_memory_used@@Base+0x3dcc>
   24054:	cmp	ip, #-2147483648	; 0x80000000
   24058:	lsrseq	ip, r0, #1
   2405c:	adcs	r0, r0, #0
   24060:	adc	r1, r1, r4, lsl #20
   24064:	orr	r1, r1, r5
   24068:	pop	{r4, r5, pc}
   2406c:	lsls	ip, ip, #1
   24070:	adcs	r0, r0, r0
   24074:	adc	r1, r1, r1
   24078:	tst	r1, #1048576	; 0x100000
   2407c:	sub	r4, r4, #1
   24080:	bne	24054 <_obstack_memory_used@@Base+0x3c74>
   24084:	teq	r1, #0
   24088:	moveq	r1, r0
   2408c:	moveq	r0, #0
   24090:	clz	r3, r1
   24094:	addeq	r3, r3, #32
   24098:	sub	r3, r3, #11
   2409c:	subs	r2, r3, #32
   240a0:	bge	240c4 <_obstack_memory_used@@Base+0x3ce4>
   240a4:	adds	r2, r2, #12
   240a8:	ble	240c0 <_obstack_memory_used@@Base+0x3ce0>
   240ac:	add	ip, r2, #20
   240b0:	rsb	r2, r2, #12
   240b4:	lsl	r0, r1, ip
   240b8:	lsr	r1, r1, r2
   240bc:	b	240d4 <_obstack_memory_used@@Base+0x3cf4>
   240c0:	add	r2, r2, #20
   240c4:	rsble	ip, r2, #32
   240c8:	lsl	r1, r1, r2
   240cc:	orrle	r1, r1, r0, lsr ip
   240d0:	lslle	r0, r0, r2
   240d4:	subs	r4, r4, r3
   240d8:	addge	r1, r1, r4, lsl #20
   240dc:	orrge	r1, r1, r5
   240e0:	popge	{r4, r5, pc}
   240e4:	mvn	r4, r4
   240e8:	subs	r4, r4, #31
   240ec:	bge	24128 <_obstack_memory_used@@Base+0x3d48>
   240f0:	adds	r4, r4, #12
   240f4:	bgt	24110 <_obstack_memory_used@@Base+0x3d30>
   240f8:	add	r4, r4, #20
   240fc:	rsb	r2, r4, #32
   24100:	lsr	r0, r0, r4
   24104:	orr	r0, r0, r1, lsl r2
   24108:	orr	r1, r5, r1, lsr r4
   2410c:	pop	{r4, r5, pc}
   24110:	rsb	r4, r4, #12
   24114:	rsb	r2, r4, #32
   24118:	lsr	r0, r0, r2
   2411c:	orr	r0, r0, r1, lsl r4
   24120:	mov	r1, r5
   24124:	pop	{r4, r5, pc}
   24128:	lsr	r0, r1, r4
   2412c:	mov	r1, r5
   24130:	pop	{r4, r5, pc}
   24134:	teq	r4, #0
   24138:	eor	r3, r3, #1048576	; 0x100000
   2413c:	eoreq	r1, r1, #1048576	; 0x100000
   24140:	addeq	r4, r4, #1
   24144:	subne	r5, r5, #1
   24148:	b	23fd4 <_obstack_memory_used@@Base+0x3bf4>
   2414c:	mvns	ip, r4, asr #21
   24150:	mvnsne	ip, r5, asr #21
   24154:	beq	241bc <_obstack_memory_used@@Base+0x3ddc>
   24158:	teq	r4, r5
   2415c:	teqeq	r0, r2
   24160:	beq	24174 <_obstack_memory_used@@Base+0x3d94>
   24164:	orrs	ip, r4, r0
   24168:	moveq	r1, r3
   2416c:	moveq	r0, r2
   24170:	pop	{r4, r5, pc}
   24174:	teq	r1, r3
   24178:	movne	r1, #0
   2417c:	movne	r0, #0
   24180:	popne	{r4, r5, pc}
   24184:	lsrs	ip, r4, #21
   24188:	bne	2419c <_obstack_memory_used@@Base+0x3dbc>
   2418c:	lsls	r0, r0, #1
   24190:	adcs	r1, r1, r1
   24194:	orrcs	r1, r1, #-2147483648	; 0x80000000
   24198:	pop	{r4, r5, pc}
   2419c:	adds	r4, r4, #4194304	; 0x400000
   241a0:	addcc	r1, r1, #1048576	; 0x100000
   241a4:	popcc	{r4, r5, pc}
   241a8:	and	r5, r1, #-2147483648	; 0x80000000
   241ac:	orr	r1, r5, #2130706432	; 0x7f000000
   241b0:	orr	r1, r1, #15728640	; 0xf00000
   241b4:	mov	r0, #0
   241b8:	pop	{r4, r5, pc}
   241bc:	mvns	ip, r4, asr #21
   241c0:	movne	r1, r3
   241c4:	movne	r0, r2
   241c8:	mvnseq	ip, r5, asr #21
   241cc:	movne	r3, r1
   241d0:	movne	r2, r0
   241d4:	orrs	r4, r0, r1, lsl #12
   241d8:	orrseq	r5, r2, r3, lsl #12
   241dc:	teqeq	r1, r3
   241e0:	orrne	r1, r1, #524288	; 0x80000
   241e4:	pop	{r4, r5, pc}
   241e8:	teq	r0, #0
   241ec:	moveq	r1, #0
   241f0:	bxeq	lr
   241f4:	push	{r4, r5, lr}
   241f8:	mov	r4, #1024	; 0x400
   241fc:	add	r4, r4, #50	; 0x32
   24200:	mov	r5, #0
   24204:	mov	r1, #0
   24208:	b	24084 <_obstack_memory_used@@Base+0x3ca4>
   2420c:	teq	r0, #0
   24210:	moveq	r1, #0
   24214:	bxeq	lr
   24218:	push	{r4, r5, lr}
   2421c:	mov	r4, #1024	; 0x400
   24220:	add	r4, r4, #50	; 0x32
   24224:	ands	r5, r0, #-2147483648	; 0x80000000
   24228:	rsbmi	r0, r0, #0
   2422c:	mov	r1, #0
   24230:	b	24084 <_obstack_memory_used@@Base+0x3ca4>
   24234:	lsls	r2, r0, #1
   24238:	asr	r1, r2, #3
   2423c:	rrx	r1, r1
   24240:	lsl	r0, r2, #28
   24244:	andsne	r3, r2, #-16777216	; 0xff000000
   24248:	teqne	r3, #-16777216	; 0xff000000
   2424c:	eorne	r1, r1, #939524096	; 0x38000000
   24250:	bxne	lr
   24254:	bics	r2, r2, #-16777216	; 0xff000000
   24258:	bxeq	lr
   2425c:	teq	r3, #-16777216	; 0xff000000
   24260:	orreq	r1, r1, #524288	; 0x80000
   24264:	bxeq	lr
   24268:	push	{r4, r5, lr}
   2426c:	mov	r4, #896	; 0x380
   24270:	and	r5, r1, #-2147483648	; 0x80000000
   24274:	bic	r1, r1, #-2147483648	; 0x80000000
   24278:	b	24084 <_obstack_memory_used@@Base+0x3ca4>
   2427c:	orrs	r2, r0, r1
   24280:	bxeq	lr
   24284:	push	{r4, r5, lr}
   24288:	mov	r5, #0
   2428c:	b	242ac <_obstack_memory_used@@Base+0x3ecc>
   24290:	orrs	r2, r0, r1
   24294:	bxeq	lr
   24298:	push	{r4, r5, lr}
   2429c:	ands	r5, r1, #-2147483648	; 0x80000000
   242a0:	bpl	242ac <_obstack_memory_used@@Base+0x3ecc>
   242a4:	rsbs	r0, r0, #0
   242a8:	rsc	r1, r1, #0
   242ac:	mov	r4, #1024	; 0x400
   242b0:	add	r4, r4, #50	; 0x32
   242b4:	lsrs	ip, r1, #22
   242b8:	beq	24028 <_obstack_memory_used@@Base+0x3c48>
   242bc:	mov	r2, #3
   242c0:	lsrs	ip, ip, #3
   242c4:	addne	r2, r2, #3
   242c8:	lsrs	ip, ip, #3
   242cc:	addne	r2, r2, #3
   242d0:	add	r2, r2, ip, lsr #3
   242d4:	rsb	r3, r2, #32
   242d8:	lsl	ip, r0, r3
   242dc:	lsr	r0, r0, r2
   242e0:	orr	r0, r0, r1, lsl r3
   242e4:	lsr	r1, r1, r2
   242e8:	add	r4, r4, r2
   242ec:	b	24028 <_obstack_memory_used@@Base+0x3c48>
   242f0:	cmp	r3, #0
   242f4:	cmpeq	r2, #0
   242f8:	bne	2431c <_obstack_memory_used@@Base+0x3f3c>
   242fc:	cmp	r1, #0
   24300:	movlt	r1, #-2147483648	; 0x80000000
   24304:	movlt	r0, #0
   24308:	blt	24318 <_obstack_memory_used@@Base+0x3f38>
   2430c:	cmpeq	r0, #0
   24310:	mvnne	r1, #-2147483648	; 0x80000000
   24314:	mvnne	r0, #0
   24318:	b	24400 <_obstack_memory_used@@Base+0x4020>
   2431c:	sub	sp, sp, #8
   24320:	push	{sp, lr}
   24324:	cmp	r1, #0
   24328:	blt	24348 <_obstack_memory_used@@Base+0x3f68>
   2432c:	cmp	r3, #0
   24330:	blt	2437c <_obstack_memory_used@@Base+0x3f9c>
   24334:	bl	24450 <_obstack_memory_used@@Base+0x4070>
   24338:	ldr	lr, [sp, #4]
   2433c:	add	sp, sp, #8
   24340:	pop	{r2, r3}
   24344:	bx	lr
   24348:	rsbs	r0, r0, #0
   2434c:	sbc	r1, r1, r1, lsl #1
   24350:	cmp	r3, #0
   24354:	blt	243a0 <_obstack_memory_used@@Base+0x3fc0>
   24358:	bl	24450 <_obstack_memory_used@@Base+0x4070>
   2435c:	ldr	lr, [sp, #4]
   24360:	add	sp, sp, #8
   24364:	pop	{r2, r3}
   24368:	rsbs	r0, r0, #0
   2436c:	sbc	r1, r1, r1, lsl #1
   24370:	rsbs	r2, r2, #0
   24374:	sbc	r3, r3, r3, lsl #1
   24378:	bx	lr
   2437c:	rsbs	r2, r2, #0
   24380:	sbc	r3, r3, r3, lsl #1
   24384:	bl	24450 <_obstack_memory_used@@Base+0x4070>
   24388:	ldr	lr, [sp, #4]
   2438c:	add	sp, sp, #8
   24390:	pop	{r2, r3}
   24394:	rsbs	r0, r0, #0
   24398:	sbc	r1, r1, r1, lsl #1
   2439c:	bx	lr
   243a0:	rsbs	r2, r2, #0
   243a4:	sbc	r3, r3, r3, lsl #1
   243a8:	bl	24450 <_obstack_memory_used@@Base+0x4070>
   243ac:	ldr	lr, [sp, #4]
   243b0:	add	sp, sp, #8
   243b4:	pop	{r2, r3}
   243b8:	rsbs	r2, r2, #0
   243bc:	sbc	r3, r3, r3, lsl #1
   243c0:	bx	lr
   243c4:	cmp	r3, #0
   243c8:	cmpeq	r2, #0
   243cc:	bne	243e4 <_obstack_memory_used@@Base+0x4004>
   243d0:	cmp	r1, #0
   243d4:	cmpeq	r0, #0
   243d8:	mvnne	r1, #0
   243dc:	mvnne	r0, #0
   243e0:	b	24400 <_obstack_memory_used@@Base+0x4020>
   243e4:	sub	sp, sp, #8
   243e8:	push	{sp, lr}
   243ec:	bl	24450 <_obstack_memory_used@@Base+0x4070>
   243f0:	ldr	lr, [sp, #4]
   243f4:	add	sp, sp, #8
   243f8:	pop	{r2, r3}
   243fc:	bx	lr
   24400:	push	{r1, lr}
   24404:	mov	r0, #8
   24408:	bl	11ca8 <raise@plt>
   2440c:	pop	{r1, pc}
   24410:	vmov	d6, r0, r1
   24414:	vldr	d7, [pc, #36]	; 24440 <_obstack_memory_used@@Base+0x4060>
   24418:	vldr	d5, [pc, #40]	; 24448 <_obstack_memory_used@@Base+0x4068>
   2441c:	vmul.f64	d7, d6, d7
   24420:	vcvt.u32.f64	s14, d7
   24424:	vcvt.f64.u32	d4, s14
   24428:	vmov	r1, s14
   2442c:	vmls.f64	d6, d4, d5
   24430:	vcvt.u32.f64	s15, d6
   24434:	vmov	r0, s15
   24438:	bx	lr
   2443c:	nop			; (mov r0, r0)
   24440:	andeq	r0, r0, r0
   24444:	ldclcc	0, cr0, [r0]
   24448:	andeq	r0, r0, r0
   2444c:	mvnsmi	r0, r0
   24450:	cmp	r1, r3
   24454:	cmpeq	r0, r2
   24458:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2445c:	mov	r4, r0
   24460:	movcc	r0, #0
   24464:	mov	r5, r1
   24468:	ldr	lr, [sp, #36]	; 0x24
   2446c:	movcc	r1, r0
   24470:	bcc	2456c <_obstack_memory_used@@Base+0x418c>
   24474:	cmp	r3, #0
   24478:	clzeq	ip, r2
   2447c:	clzne	ip, r3
   24480:	addeq	ip, ip, #32
   24484:	cmp	r5, #0
   24488:	clzeq	r1, r4
   2448c:	addeq	r1, r1, #32
   24490:	clzne	r1, r5
   24494:	sub	ip, ip, r1
   24498:	sub	sl, ip, #32
   2449c:	lsl	r9, r3, ip
   244a0:	rsb	fp, ip, #32
   244a4:	orr	r9, r9, r2, lsl sl
   244a8:	orr	r9, r9, r2, lsr fp
   244ac:	lsl	r8, r2, ip
   244b0:	cmp	r5, r9
   244b4:	cmpeq	r4, r8
   244b8:	movcc	r0, #0
   244bc:	movcc	r1, r0
   244c0:	bcc	244dc <_obstack_memory_used@@Base+0x40fc>
   244c4:	mov	r0, #1
   244c8:	subs	r4, r4, r8
   244cc:	lsl	r1, r0, sl
   244d0:	orr	r1, r1, r0, lsr fp
   244d4:	lsl	r0, r0, ip
   244d8:	sbc	r5, r5, r9
   244dc:	cmp	ip, #0
   244e0:	beq	2456c <_obstack_memory_used@@Base+0x418c>
   244e4:	lsr	r6, r8, #1
   244e8:	orr	r6, r6, r9, lsl #31
   244ec:	lsr	r7, r9, #1
   244f0:	mov	r2, ip
   244f4:	b	24518 <_obstack_memory_used@@Base+0x4138>
   244f8:	subs	r3, r4, r6
   244fc:	sbc	r8, r5, r7
   24500:	adds	r3, r3, r3
   24504:	adc	r8, r8, r8
   24508:	adds	r4, r3, #1
   2450c:	adc	r5, r8, #0
   24510:	subs	r2, r2, #1
   24514:	beq	24534 <_obstack_memory_used@@Base+0x4154>
   24518:	cmp	r5, r7
   2451c:	cmpeq	r4, r6
   24520:	bcs	244f8 <_obstack_memory_used@@Base+0x4118>
   24524:	adds	r4, r4, r4
   24528:	adc	r5, r5, r5
   2452c:	subs	r2, r2, #1
   24530:	bne	24518 <_obstack_memory_used@@Base+0x4138>
   24534:	lsr	r3, r4, ip
   24538:	orr	r3, r3, r5, lsl fp
   2453c:	lsr	r2, r5, ip
   24540:	orr	r3, r3, r5, lsr sl
   24544:	adds	r0, r0, r4
   24548:	mov	r4, r3
   2454c:	lsl	r3, r2, ip
   24550:	orr	r3, r3, r4, lsl sl
   24554:	lsl	ip, r4, ip
   24558:	orr	r3, r3, r4, lsr fp
   2455c:	adc	r1, r1, r5
   24560:	subs	r0, r0, ip
   24564:	mov	r5, r2
   24568:	sbc	r1, r1, r3
   2456c:	cmp	lr, #0
   24570:	strdne	r4, [lr]
   24574:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24578:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2457c:	mov	r7, r0
   24580:	ldr	r6, [pc, #72]	; 245d0 <_obstack_memory_used@@Base+0x41f0>
   24584:	ldr	r5, [pc, #72]	; 245d4 <_obstack_memory_used@@Base+0x41f4>
   24588:	add	r6, pc, r6
   2458c:	add	r5, pc, r5
   24590:	sub	r6, r6, r5
   24594:	mov	r8, r1
   24598:	mov	r9, r2
   2459c:	bl	11c58 <calloc@plt-0x20>
   245a0:	asrs	r6, r6, #2
   245a4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   245a8:	mov	r4, #0
   245ac:	add	r4, r4, #1
   245b0:	ldr	r3, [r5], #4
   245b4:	mov	r2, r9
   245b8:	mov	r1, r8
   245bc:	mov	r0, r7
   245c0:	blx	r3
   245c4:	cmp	r6, r4
   245c8:	bne	245ac <_obstack_memory_used@@Base+0x41cc>
   245cc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   245d0:	andeq	r4, r1, ip, ror #18
   245d4:	andeq	r4, r1, r4, ror #18
   245d8:	bx	lr
   245dc:	ldr	r3, [pc, #12]	; 245f0 <_obstack_memory_used@@Base+0x4210>
   245e0:	mov	r1, #0
   245e4:	add	r3, pc, r3
   245e8:	ldr	r2, [r3]
   245ec:	b	11ffc <__cxa_atexit@plt>
   245f0:	strdeq	r4, [r1], -r0
   245f4:	mov	r2, r1
   245f8:	mov	r1, r0
   245fc:	mov	r0, #3
   24600:	b	1211c <__xstat64@plt>

Disassembly of section .fini:

00024604 <.fini>:
   24604:	push	{r3, lr}
   24608:	pop	{r3, pc}
