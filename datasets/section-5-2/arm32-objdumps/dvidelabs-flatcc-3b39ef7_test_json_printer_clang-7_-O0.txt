
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/test_json_printer:     file format elf32-littlearm


Disassembly of section .init:

00012844 <.init>:
   12844:	push	{r3, lr}
   12848:	bl	129cc <_start@@Base+0x3c>
   1284c:	pop	{r3, pc}

Disassembly of section .plt:

00012850 <raise@plt-0x14>:
   12850:	push	{lr}		; (str lr, [sp, #-4]!)
   12854:	ldr	lr, [pc, #4]	; 12860 <raise@plt-0x4>
   12858:	add	lr, pc, lr
   1285c:	ldr	pc, [lr, #8]!
   12860:	andeq	r1, r2, r0, lsr #15

00012864 <raise@plt>:
   12864:	add	ip, pc, #0, 12
   12868:	add	ip, ip, #135168	; 0x21000
   1286c:	ldr	pc, [ip, #1952]!	; 0x7a0

00012870 <strcmp@plt>:
   12870:	add	ip, pc, #0, 12
   12874:	add	ip, ip, #135168	; 0x21000
   12878:	ldr	pc, [ip, #1944]!	; 0x798

0001287c <printf@plt>:
   1287c:	add	ip, pc, #0, 12
   12880:	add	ip, ip, #135168	; 0x21000
   12884:	ldr	pc, [ip, #1936]!	; 0x790

00012888 <fopen@plt>:
   12888:	add	ip, pc, #0, 12
   1288c:	add	ip, ip, #135168	; 0x21000
   12890:	ldr	pc, [ip, #1928]!	; 0x788

00012894 <memmove@plt>:
   12894:	add	ip, pc, #0, 12
   12898:	add	ip, ip, #135168	; 0x21000
   1289c:	ldr	pc, [ip, #1920]!	; 0x780

000128a0 <free@plt>:
   128a0:	add	ip, pc, #0, 12
   128a4:	add	ip, ip, #135168	; 0x21000
   128a8:	ldr	pc, [ip, #1912]!	; 0x778

000128ac <memcpy@plt>:
   128ac:	add	ip, pc, #0, 12
   128b0:	add	ip, ip, #135168	; 0x21000
   128b4:	ldr	pc, [ip, #1904]!	; 0x770

000128b8 <ftell@plt>:
   128b8:	add	ip, pc, #0, 12
   128bc:	add	ip, ip, #135168	; 0x21000
   128c0:	ldr	pc, [ip, #1896]!	; 0x768

000128c4 <memcmp@plt>:
   128c4:	add	ip, pc, #0, 12
   128c8:	add	ip, ip, #135168	; 0x21000
   128cc:	ldr	pc, [ip, #1888]!	; 0x760

000128d0 <rewind@plt>:
   128d0:	add	ip, pc, #0, 12
   128d4:	add	ip, ip, #135168	; 0x21000
   128d8:	ldr	pc, [ip, #1880]!	; 0x758

000128dc <realloc@plt>:
   128dc:	add	ip, pc, #0, 12
   128e0:	add	ip, ip, #135168	; 0x21000
   128e4:	ldr	pc, [ip, #1872]!	; 0x750

000128e8 <fwrite@plt>:
   128e8:	add	ip, pc, #0, 12
   128ec:	add	ip, ip, #135168	; 0x21000
   128f0:	ldr	pc, [ip, #1864]!	; 0x748

000128f4 <fread@plt>:
   128f4:	add	ip, pc, #0, 12
   128f8:	add	ip, ip, #135168	; 0x21000
   128fc:	ldr	pc, [ip, #1856]!	; 0x740

00012900 <malloc@plt>:
   12900:	add	ip, pc, #0, 12
   12904:	add	ip, ip, #135168	; 0x21000
   12908:	ldr	pc, [ip, #1848]!	; 0x738

0001290c <__libc_start_main@plt>:
   1290c:	add	ip, pc, #0, 12
   12910:	add	ip, ip, #135168	; 0x21000
   12914:	ldr	pc, [ip, #1840]!	; 0x730

00012918 <__gmon_start__@plt>:
   12918:	add	ip, pc, #0, 12
   1291c:	add	ip, ip, #135168	; 0x21000
   12920:	ldr	pc, [ip, #1832]!	; 0x728

00012924 <exit@plt>:
   12924:	add	ip, pc, #0, 12
   12928:	add	ip, ip, #135168	; 0x21000
   1292c:	ldr	pc, [ip, #1824]!	; 0x720

00012930 <fprintf@plt>:
   12930:	add	ip, pc, #0, 12
   12934:	add	ip, ip, #135168	; 0x21000
   12938:	ldr	pc, [ip, #1816]!	; 0x718

0001293c <memset@plt>:
   1293c:	add	ip, pc, #0, 12
   12940:	add	ip, ip, #135168	; 0x21000
   12944:	ldr	pc, [ip, #1808]!	; 0x710

00012948 <strncpy@plt>:
   12948:	add	ip, pc, #0, 12
   1294c:	add	ip, ip, #135168	; 0x21000
   12950:	ldr	pc, [ip, #1800]!	; 0x708

00012954 <fclose@plt>:
   12954:	add	ip, pc, #0, 12
   12958:	add	ip, ip, #135168	; 0x21000
   1295c:	ldr	pc, [ip, #1792]!	; 0x700

00012960 <sprintf@plt>:
   12960:	add	ip, pc, #0, 12
   12964:	add	ip, ip, #135168	; 0x21000
   12968:	ldr	pc, [ip, #1784]!	; 0x6f8

0001296c <fseek@plt>:
   1296c:	add	ip, pc, #0, 12
   12970:	add	ip, ip, #135168	; 0x21000
   12974:	ldr	pc, [ip, #1776]!	; 0x6f0

00012978 <abort@plt>:
   12978:	add	ip, pc, #0, 12
   1297c:	add	ip, ip, #135168	; 0x21000
   12980:	ldr	pc, [ip, #1768]!	; 0x6e8

00012984 <__assert_fail@plt>:
   12984:	add	ip, pc, #0, 12
   12988:	add	ip, ip, #135168	; 0x21000
   1298c:	ldr	pc, [ip, #1760]!	; 0x6e0

Disassembly of section .text:

00012990 <_start@@Base>:
   12990:	mov	fp, #0
   12994:	mov	lr, #0
   12998:	pop	{r1}		; (ldr r1, [sp], #4)
   1299c:	mov	r2, sp
   129a0:	push	{r2}		; (str r2, [sp, #-4]!)
   129a4:	push	{r0}		; (str r0, [sp, #-4]!)
   129a8:	ldr	ip, [pc, #16]	; 129c0 <_start@@Base+0x30>
   129ac:	push	{ip}		; (str ip, [sp, #-4]!)
   129b0:	ldr	r0, [pc, #12]	; 129c4 <_start@@Base+0x34>
   129b4:	ldr	r3, [pc, #12]	; 129c8 <_start@@Base+0x38>
   129b8:	bl	1290c <__libc_start_main@plt>
   129bc:	bl	12978 <abort@plt>
   129c0:	andeq	r2, r2, r8, asr r2
   129c4:	andeq	r3, r1, r8, ror r1
   129c8:	strdeq	r2, [r2], -r8
   129cc:	ldr	r3, [pc, #20]	; 129e8 <_start@@Base+0x58>
   129d0:	ldr	r2, [pc, #20]	; 129ec <_start@@Base+0x5c>
   129d4:	add	r3, pc, r3
   129d8:	ldr	r2, [r3, r2]
   129dc:	cmp	r2, #0
   129e0:	bxeq	lr
   129e4:	b	12918 <__gmon_start__@plt>
   129e8:	andeq	r1, r2, r4, lsr #12
   129ec:	andeq	r0, r0, r8, ror r0
   129f0:	ldr	r0, [pc, #24]	; 12a10 <_start@@Base+0x80>
   129f4:	ldr	r3, [pc, #24]	; 12a14 <_start@@Base+0x84>
   129f8:	cmp	r3, r0
   129fc:	bxeq	lr
   12a00:	ldr	r3, [pc, #16]	; 12a18 <_start@@Base+0x88>
   12a04:	cmp	r3, #0
   12a08:	bxeq	lr
   12a0c:	bx	r3
   12a10:	muleq	r3, r8, r0
   12a14:	muleq	r3, r8, r0
   12a18:	andeq	r0, r0, r0
   12a1c:	ldr	r0, [pc, #36]	; 12a48 <_start@@Base+0xb8>
   12a20:	ldr	r1, [pc, #36]	; 12a4c <_start@@Base+0xbc>
   12a24:	sub	r1, r1, r0
   12a28:	asr	r1, r1, #2
   12a2c:	add	r1, r1, r1, lsr #31
   12a30:	asrs	r1, r1, #1
   12a34:	bxeq	lr
   12a38:	ldr	r3, [pc, #16]	; 12a50 <_start@@Base+0xc0>
   12a3c:	cmp	r3, #0
   12a40:	bxeq	lr
   12a44:	bx	r3
   12a48:	muleq	r3, r8, r0
   12a4c:	muleq	r3, r8, r0
   12a50:	andeq	r0, r0, r0
   12a54:	push	{r4, lr}
   12a58:	ldr	r4, [pc, #24]	; 12a78 <_start@@Base+0xe8>
   12a5c:	ldrb	r3, [r4]
   12a60:	cmp	r3, #0
   12a64:	popne	{r4, pc}
   12a68:	bl	129f0 <_start@@Base+0x60>
   12a6c:	mov	r3, #1
   12a70:	strb	r3, [r4]
   12a74:	pop	{r4, pc}
   12a78:	muleq	r3, r8, r0
   12a7c:	b	12a1c <_start@@Base+0x8c>

00012a80 <test_print@@Base>:
   12a80:	push	{fp, lr}
   12a84:	mov	fp, sp
   12a88:	sub	sp, sp, #152	; 0x98
   12a8c:	ldr	r0, [pc, #932]	; 12e38 <test_print@@Base+0x3b8>
   12a90:	add	r1, pc, r0
   12a94:	ldr	r0, [pc, #928]	; 12e3c <test_print@@Base+0x3bc>
   12a98:	ldr	r0, [pc, r0]
   12a9c:	movw	r2, #0
   12aa0:	str	r2, [fp, #-8]
   12aa4:	str	r2, [fp, #-12]
   12aa8:	str	r2, [fp, #-16]
   12aac:	str	r2, [fp, #-20]	; 0xffffffec
   12ab0:	str	r2, [fp, #-24]	; 0xffffffe8
   12ab4:	str	r2, [fp, #-28]	; 0xffffffe4
   12ab8:	str	r2, [fp, #-32]	; 0xffffffe0
   12abc:	str	r2, [sp, #64]	; 0x40
   12ac0:	add	r2, sp, #72	; 0x48
   12ac4:	str	r2, [sp, #68]	; 0x44
   12ac8:	ldr	r0, [r0]
   12acc:	bl	12888 <fopen@plt>
   12ad0:	str	r0, [sp, #64]	; 0x40
   12ad4:	ldr	r0, [sp, #64]	; 0x40
   12ad8:	movw	r1, #0
   12adc:	cmp	r0, r1
   12ae0:	bne	12b24 <test_print@@Base+0xa4>
   12ae4:	ldr	r0, [pc, #852]	; 12e40 <test_print@@Base+0x3c0>
   12ae8:	add	r1, pc, r0
   12aec:	ldr	r0, [pc, #848]	; 12e44 <test_print@@Base+0x3c4>
   12af0:	ldr	r0, [pc, r0]
   12af4:	ldr	r2, [pc, #844]	; 12e48 <test_print@@Base+0x3c8>
   12af8:	ldr	r2, [pc, r2]
   12afc:	ldr	r2, [r2]
   12b00:	ldr	r0, [r0]
   12b04:	str	r0, [sp, #60]	; 0x3c
   12b08:	mov	r0, r2
   12b0c:	ldr	r2, [sp, #60]	; 0x3c
   12b10:	bl	12930 <fprintf@plt>
   12b14:	mvn	r1, #0
   12b18:	str	r1, [fp, #-4]
   12b1c:	str	r0, [sp, #56]	; 0x38
   12b20:	b	12e2c <test_print@@Base+0x3ac>
   12b24:	ldr	r0, [sp, #68]	; 0x44
   12b28:	ldr	r1, [sp, #64]	; 0x40
   12b2c:	bl	1fbbc <flatcc_json_printer_init@@Base>
   12b30:	ldr	r1, [sp, #68]	; 0x44
   12b34:	str	r0, [sp, #52]	; 0x34
   12b38:	mov	r0, r1
   12b3c:	bl	12ea8 <test_print@@Base+0x428>
   12b40:	ldr	r0, [pc, #772]	; 12e4c <test_print@@Base+0x3cc>
   12b44:	ldr	r0, [pc, r0]
   12b48:	ldr	r0, [r0]
   12b4c:	movw	r1, #0
   12b50:	cmp	r0, r1
   12b54:	beq	12b98 <test_print@@Base+0x118>
   12b58:	ldr	r0, [pc, #752]	; 12e50 <test_print@@Base+0x3d0>
   12b5c:	ldr	r0, [pc, r0]
   12b60:	ldr	r0, [r0]
   12b64:	ldr	r1, [pc, #824]	; 12ea4 <test_print@@Base+0x424>
   12b68:	add	r1, pc, r1
   12b6c:	bl	12870 <strcmp@plt>
   12b70:	cmp	r0, #0
   12b74:	beq	12b98 <test_print@@Base+0x118>
   12b78:	ldr	r0, [pc, #728]	; 12e58 <test_print@@Base+0x3d8>
   12b7c:	ldr	r0, [pc, r0]
   12b80:	ldr	r0, [r0]
   12b84:	movw	r1, #10240	; 0x2800
   12b88:	sub	r2, fp, #24
   12b8c:	bl	12ee8 <test_print@@Base+0x468>
   12b90:	str	r0, [fp, #-12]
   12b94:	b	12bac <test_print@@Base+0x12c>
   12b98:	ldr	r0, [pc, #692]	; 12e54 <test_print@@Base+0x3d4>
   12b9c:	add	r0, pc, r0
   12ba0:	str	r0, [fp, #-12]
   12ba4:	movw	r0, #288	; 0x120
   12ba8:	str	r0, [fp, #-24]	; 0xffffffe8
   12bac:	ldr	r0, [fp, #-12]
   12bb0:	movw	r1, #0
   12bb4:	cmp	r0, r1
   12bb8:	bne	12bf4 <test_print@@Base+0x174>
   12bbc:	ldr	r0, [pc, #664]	; 12e5c <test_print@@Base+0x3dc>
   12bc0:	add	r1, pc, r0
   12bc4:	ldr	r0, [pc, #660]	; 12e60 <test_print@@Base+0x3e0>
   12bc8:	ldr	r0, [pc, r0]
   12bcc:	ldr	r2, [pc, #656]	; 12e64 <test_print@@Base+0x3e4>
   12bd0:	ldr	r2, [pc, r2]
   12bd4:	ldr	r2, [r2]
   12bd8:	ldr	r0, [r0]
   12bdc:	str	r0, [sp, #48]	; 0x30
   12be0:	mov	r0, r2
   12be4:	ldr	r2, [sp, #48]	; 0x30
   12be8:	bl	12930 <fprintf@plt>
   12bec:	str	r0, [sp, #44]	; 0x2c
   12bf0:	b	12e20 <test_print@@Base+0x3a0>
   12bf4:	ldr	r0, [pc, #620]	; 12e68 <test_print@@Base+0x3e8>
   12bf8:	ldr	r0, [pc, r0]
   12bfc:	ldr	r0, [r0]
   12c00:	movw	r1, #10240	; 0x2800
   12c04:	sub	r2, fp, #28
   12c08:	bl	12ee8 <test_print@@Base+0x468>
   12c0c:	str	r0, [fp, #-16]
   12c10:	ldr	r0, [fp, #-16]
   12c14:	movw	r1, #0
   12c18:	cmp	r0, r1
   12c1c:	bne	12c58 <test_print@@Base+0x1d8>
   12c20:	ldr	r0, [pc, #580]	; 12e6c <test_print@@Base+0x3ec>
   12c24:	add	r1, pc, r0
   12c28:	ldr	r0, [pc, #576]	; 12e70 <test_print@@Base+0x3f0>
   12c2c:	ldr	r0, [pc, r0]
   12c30:	ldr	r2, [pc, #572]	; 12e74 <test_print@@Base+0x3f4>
   12c34:	ldr	r2, [pc, r2]
   12c38:	ldr	r2, [r2]
   12c3c:	ldr	r0, [r0]
   12c40:	str	r0, [sp, #40]	; 0x28
   12c44:	mov	r0, r2
   12c48:	ldr	r2, [sp, #40]	; 0x28
   12c4c:	bl	12930 <fprintf@plt>
   12c50:	str	r0, [sp, #36]	; 0x24
   12c54:	b	12e20 <test_print@@Base+0x3a0>
   12c58:	ldr	r0, [pc, #536]	; 12e78 <test_print@@Base+0x3f8>
   12c5c:	add	r3, pc, r0
   12c60:	ldr	r0, [sp, #68]	; 0x44
   12c64:	ldr	r1, [fp, #-12]
   12c68:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12c6c:	bl	130d8 <test_print@@Base+0x658>
   12c70:	ldr	r1, [sp, #68]	; 0x44
   12c74:	str	r0, [sp, #32]
   12c78:	mov	r0, r1
   12c7c:	bl	13120 <test_print@@Base+0x6a0>
   12c80:	ldr	r1, [sp, #68]	; 0x44
   12c84:	str	r0, [sp, #28]
   12c88:	mov	r0, r1
   12c8c:	bl	13160 <test_print@@Base+0x6e0>
   12c90:	cmp	r0, #0
   12c94:	beq	12ca8 <test_print@@Base+0x228>
   12c98:	ldr	r0, [pc, #476]	; 12e7c <test_print@@Base+0x3fc>
   12c9c:	add	r0, pc, r0
   12ca0:	bl	1287c <printf@plt>
   12ca4:	str	r0, [sp, #24]
   12ca8:	ldr	r0, [sp, #64]	; 0x40
   12cac:	bl	12954 <fclose@plt>
   12cb0:	ldr	lr, [pc, #456]	; 12e80 <test_print@@Base+0x400>
   12cb4:	ldr	lr, [pc, lr]
   12cb8:	movw	r1, #0
   12cbc:	str	r1, [sp, #64]	; 0x40
   12cc0:	ldr	r1, [lr]
   12cc4:	str	r0, [sp, #20]
   12cc8:	mov	r0, r1
   12ccc:	movw	r1, #10240	; 0x2800
   12cd0:	sub	r2, fp, #32
   12cd4:	bl	12ee8 <test_print@@Base+0x468>
   12cd8:	str	r0, [fp, #-20]	; 0xffffffec
   12cdc:	ldr	r0, [fp, #-20]	; 0xffffffec
   12ce0:	movw	r1, #0
   12ce4:	cmp	r0, r1
   12ce8:	bne	12d24 <test_print@@Base+0x2a4>
   12cec:	ldr	r0, [pc, #400]	; 12e84 <test_print@@Base+0x404>
   12cf0:	add	r1, pc, r0
   12cf4:	ldr	r0, [pc, #396]	; 12e88 <test_print@@Base+0x408>
   12cf8:	ldr	r0, [pc, r0]
   12cfc:	ldr	r2, [pc, #392]	; 12e8c <test_print@@Base+0x40c>
   12d00:	ldr	r2, [pc, r2]
   12d04:	ldr	r2, [r2]
   12d08:	ldr	r0, [r0]
   12d0c:	str	r0, [sp, #16]
   12d10:	mov	r0, r2
   12d14:	ldr	r2, [sp, #16]
   12d18:	bl	12930 <fprintf@plt>
   12d1c:	str	r0, [sp, #12]
   12d20:	b	12e20 <test_print@@Base+0x3a0>
   12d24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12d28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12d2c:	cmp	r0, r1
   12d30:	bne	12d4c <test_print@@Base+0x2cc>
   12d34:	ldr	r0, [fp, #-20]	; 0xffffffec
   12d38:	ldr	r1, [fp, #-16]
   12d3c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12d40:	bl	128c4 <memcmp@plt>
   12d44:	cmp	r0, #0
   12d48:	beq	12d6c <test_print@@Base+0x2ec>
   12d4c:	ldr	r0, [pc, #324]	; 12e98 <test_print@@Base+0x418>
   12d50:	add	r1, pc, r0
   12d54:	ldr	r0, [pc, #320]	; 12e9c <test_print@@Base+0x41c>
   12d58:	ldr	r0, [pc, r0]
   12d5c:	ldr	r0, [r0]
   12d60:	bl	12930 <fprintf@plt>
   12d64:	str	r0, [sp, #8]
   12d68:	b	12e20 <test_print@@Base+0x3a0>
   12d6c:	ldr	r0, [pc, #284]	; 12e90 <test_print@@Base+0x410>
   12d70:	add	r1, pc, r0
   12d74:	ldr	r0, [pc, #280]	; 12e94 <test_print@@Base+0x414>
   12d78:	ldr	r0, [pc, r0]
   12d7c:	ldr	r0, [r0]
   12d80:	bl	12930 <fprintf@plt>
   12d84:	str	r0, [sp, #4]
   12d88:	ldr	r0, [sp, #68]	; 0x44
   12d8c:	bl	202f4 <flatcc_json_printer_clear@@Base>
   12d90:	ldr	r0, [pc, #264]	; 12ea0 <test_print@@Base+0x420>
   12d94:	ldr	r0, [pc, r0]
   12d98:	ldr	r0, [r0]
   12d9c:	movw	lr, #0
   12da0:	cmp	r0, lr
   12da4:	bne	12db0 <test_print@@Base+0x330>
   12da8:	movw	r0, #0
   12dac:	str	r0, [fp, #-12]
   12db0:	ldr	r0, [fp, #-12]
   12db4:	movw	r1, #0
   12db8:	cmp	r0, r1
   12dbc:	beq	12dc8 <test_print@@Base+0x348>
   12dc0:	ldr	r0, [fp, #-12]
   12dc4:	bl	128a0 <free@plt>
   12dc8:	ldr	r0, [fp, #-16]
   12dcc:	movw	r1, #0
   12dd0:	cmp	r0, r1
   12dd4:	beq	12de0 <test_print@@Base+0x360>
   12dd8:	ldr	r0, [fp, #-16]
   12ddc:	bl	128a0 <free@plt>
   12de0:	ldr	r0, [fp, #-20]	; 0xffffffec
   12de4:	movw	r1, #0
   12de8:	cmp	r0, r1
   12dec:	beq	12df8 <test_print@@Base+0x378>
   12df0:	ldr	r0, [fp, #-20]	; 0xffffffec
   12df4:	bl	128a0 <free@plt>
   12df8:	ldr	r0, [sp, #64]	; 0x40
   12dfc:	movw	r1, #0
   12e00:	cmp	r0, r1
   12e04:	beq	12e14 <test_print@@Base+0x394>
   12e08:	ldr	r0, [sp, #64]	; 0x40
   12e0c:	bl	12954 <fclose@plt>
   12e10:	str	r0, [sp]
   12e14:	ldr	r0, [fp, #-8]
   12e18:	str	r0, [fp, #-4]
   12e1c:	b	12e2c <test_print@@Base+0x3ac>
   12e20:	mvn	r0, #0
   12e24:	str	r0, [fp, #-8]
   12e28:	b	12d88 <test_print@@Base+0x308>
   12e2c:	ldr	r0, [fp, #-4]
   12e30:	mov	sp, fp
   12e34:	pop	{fp, pc}
   12e38:	andeq	pc, r0, r6, lsl #16
   12e3c:	andeq	r1, r2, r4, ror #11
   12e40:			; <UNDEFINED> instruction: 0x0000f7b1
   12e44:	andeq	r1, r2, ip, lsl #11
   12e48:	andeq	r1, r2, r0, ror r5
   12e4c:	andeq	r1, r2, r0, lsr r5
   12e50:	andeq	r1, r2, r8, lsl r5
   12e54:	andeq	pc, r0, r7, ror ip	; <UNPREDICTABLE>
   12e58:	strdeq	r1, [r2], -r8
   12e5c:	strdeq	pc, [r0], -fp
   12e60:	andeq	r1, r2, ip, lsr #9
   12e64:	muleq	r2, r8, r4
   12e68:	andeq	r1, r2, r4, ror r4
   12e6c:	andeq	pc, r0, r1, asr #13
   12e70:	andeq	r1, r2, r0, asr #8
   12e74:	andeq	r1, r2, r4, lsr r4
   12e78:			; <UNDEFINED> instruction: 0x0000f6b4
   12e7c:	andeq	pc, r0, r9, ror r6	; <UNPREDICTABLE>
   12e80:	andeq	r1, r2, r8, asr #7
   12e84:	andeq	pc, r0, r3, asr #12
   12e88:	andeq	r1, r2, r4, lsl #7
   12e8c:	andeq	r1, r2, r8, ror #6
   12e90:	andeq	pc, r0, pc, lsl r6	; <UNPREDICTABLE>
   12e94:	strdeq	r1, [r2], -r0
   12e98:	andeq	pc, r0, r8, lsl #12
   12e9c:	andeq	r1, r2, r0, lsl r3
   12ea0:	andeq	r1, r2, r0, ror #5
   12ea4:	andeq	pc, r0, r1, asr r7	; <UNPREDICTABLE>
   12ea8:	push	{fp, lr}
   12eac:	mov	fp, sp
   12eb0:	sub	sp, sp, #8
   12eb4:	str	r0, [sp, #4]
   12eb8:	ldr	r0, [sp, #4]
   12ebc:	movw	r1, #2
   12ec0:	and	r1, r1, #255	; 0xff
   12ec4:	bl	13264 <main@@Base+0xec>
   12ec8:	ldr	r0, [sp, #4]
   12ecc:	movw	r1, #1
   12ed0:	bl	13284 <main@@Base+0x10c>
   12ed4:	ldr	r0, [sp, #4]
   12ed8:	movw	r1, #0
   12edc:	bl	132c0 <main@@Base+0x148>
   12ee0:	mov	sp, fp
   12ee4:	pop	{fp, pc}
   12ee8:	push	{fp, lr}
   12eec:	mov	fp, sp
   12ef0:	sub	sp, sp, #64	; 0x40
   12ef4:	str	r0, [fp, #-8]
   12ef8:	str	r1, [fp, #-12]
   12efc:	str	r2, [fp, #-16]
   12f00:	ldr	r0, [fp, #-16]
   12f04:	movw	r1, #0
   12f08:	cmp	r0, r1
   12f0c:	beq	12f1c <test_print@@Base+0x49c>
   12f10:	ldr	r0, [fp, #-16]
   12f14:	str	r0, [sp, #20]
   12f18:	b	12f28 <test_print@@Base+0x4a8>
   12f1c:	add	r0, sp, #28
   12f20:	str	r0, [sp, #20]
   12f24:	b	12f28 <test_print@@Base+0x4a8>
   12f28:	ldr	r0, [sp, #20]
   12f2c:	ldr	r1, [pc, #416]	; 130d4 <test_print@@Base+0x654>
   12f30:	add	r1, pc, r1
   12f34:	str	r0, [fp, #-16]
   12f38:	ldr	r0, [fp, #-8]
   12f3c:	bl	12888 <fopen@plt>
   12f40:	str	r0, [fp, #-20]	; 0xffffffec
   12f44:	movw	r0, #0
   12f48:	str	r0, [fp, #-24]	; 0xffffffe8
   12f4c:	str	r0, [sp, #24]
   12f50:	ldr	r1, [fp, #-20]	; 0xffffffec
   12f54:	cmp	r1, r0
   12f58:	bne	12f60 <test_print@@Base+0x4e0>
   12f5c:	b	13080 <test_print@@Base+0x600>
   12f60:	ldr	r0, [fp, #-20]	; 0xffffffec
   12f64:	movw	r1, #0
   12f68:	movw	r2, #2
   12f6c:	bl	1296c <fseek@plt>
   12f70:	ldr	r1, [fp, #-20]	; 0xffffffec
   12f74:	str	r0, [sp, #16]
   12f78:	mov	r0, r1
   12f7c:	bl	128b8 <ftell@plt>
   12f80:	str	r0, [fp, #-24]	; 0xffffffe8
   12f84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12f88:	ldr	r1, [fp, #-16]
   12f8c:	str	r0, [r1]
   12f90:	ldr	r0, [fp, #-12]
   12f94:	cmp	r0, #0
   12f98:	bls	12fb0 <test_print@@Base+0x530>
   12f9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12fa0:	ldr	r1, [fp, #-12]
   12fa4:	cmp	r0, r1
   12fa8:	bls	12fb0 <test_print@@Base+0x530>
   12fac:	b	13080 <test_print@@Base+0x600>
   12fb0:	ldr	r0, [fp, #-20]	; 0xffffffec
   12fb4:	bl	128d0 <rewind@plt>
   12fb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12fbc:	cmp	r0, #0
   12fc0:	beq	12fd0 <test_print@@Base+0x550>
   12fc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12fc8:	str	r0, [sp, #12]
   12fcc:	b	12fdc <test_print@@Base+0x55c>
   12fd0:	movw	r0, #1
   12fd4:	str	r0, [sp, #12]
   12fd8:	b	12fdc <test_print@@Base+0x55c>
   12fdc:	ldr	r0, [sp, #12]
   12fe0:	bl	12900 <malloc@plt>
   12fe4:	str	r0, [sp, #24]
   12fe8:	ldr	r0, [sp, #24]
   12fec:	movw	lr, #0
   12ff0:	cmp	r0, lr
   12ff4:	bne	12ffc <test_print@@Base+0x57c>
   12ff8:	b	13080 <test_print@@Base+0x600>
   12ffc:	movw	r0, #0
   13000:	str	r0, [fp, #-28]	; 0xffffffe4
   13004:	ldr	r0, [sp, #24]
   13008:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1300c:	add	r0, r0, r1
   13010:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13014:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13018:	sub	r2, r1, r2
   1301c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13020:	movw	r1, #1
   13024:	bl	128f4 <fread@plt>
   13028:	str	r0, [sp, #32]
   1302c:	cmp	r0, #0
   13030:	beq	13048 <test_print@@Base+0x5c8>
   13034:	ldr	r0, [sp, #32]
   13038:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1303c:	add	r0, r1, r0
   13040:	str	r0, [fp, #-28]	; 0xffffffe4
   13044:	b	13004 <test_print@@Base+0x584>
   13048:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1304c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13050:	cmp	r0, r1
   13054:	beq	1305c <test_print@@Base+0x5dc>
   13058:	b	13080 <test_print@@Base+0x600>
   1305c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13060:	bl	12954 <fclose@plt>
   13064:	ldr	lr, [fp, #-24]	; 0xffffffe8
   13068:	ldr	r1, [fp, #-16]
   1306c:	str	lr, [r1]
   13070:	ldr	r1, [sp, #24]
   13074:	str	r1, [fp, #-4]
   13078:	str	r0, [sp, #8]
   1307c:	b	130c8 <test_print@@Base+0x648>
   13080:	ldr	r0, [fp, #-20]	; 0xffffffec
   13084:	movw	r1, #0
   13088:	cmp	r0, r1
   1308c:	beq	1309c <test_print@@Base+0x61c>
   13090:	ldr	r0, [fp, #-20]	; 0xffffffec
   13094:	bl	12954 <fclose@plt>
   13098:	str	r0, [sp, #4]
   1309c:	ldr	r0, [sp, #24]
   130a0:	movw	r1, #0
   130a4:	cmp	r0, r1
   130a8:	beq	130b4 <test_print@@Base+0x634>
   130ac:	ldr	r0, [sp, #24]
   130b0:	bl	128a0 <free@plt>
   130b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   130b8:	ldr	r1, [fp, #-16]
   130bc:	str	r0, [r1]
   130c0:	movw	r0, #0
   130c4:	str	r0, [fp, #-4]
   130c8:	ldr	r0, [fp, #-4]
   130cc:	mov	sp, fp
   130d0:	pop	{fp, pc}
   130d4:	andeq	pc, r0, r3, asr r5	; <UNPREDICTABLE>
   130d8:	push	{fp, lr}
   130dc:	mov	fp, sp
   130e0:	sub	sp, sp, #24
   130e4:	ldr	ip, [pc, #48]	; 1311c <test_print@@Base+0x69c>
   130e8:	add	ip, pc, ip
   130ec:	str	r0, [fp, #-4]
   130f0:	str	r1, [fp, #-8]
   130f4:	str	r2, [sp, #12]
   130f8:	str	r3, [sp, #8]
   130fc:	ldr	r0, [fp, #-4]
   13100:	ldr	r1, [fp, #-8]
   13104:	ldr	r2, [sp, #12]
   13108:	ldr	r3, [sp, #8]
   1310c:	str	ip, [sp]
   13110:	bl	1f7cc <flatcc_json_printer_table_as_root@@Base>
   13114:	mov	sp, fp
   13118:	pop	{fp, pc}
   1311c:	andeq	r0, r0, ip, lsl #4
   13120:	push	{fp, lr}
   13124:	mov	fp, sp
   13128:	sub	sp, sp, #8
   1312c:	str	r0, [sp, #4]
   13130:	ldr	r0, [sp, #4]
   13134:	ldr	r0, [r0, #44]	; 0x2c
   13138:	ldr	r1, [sp, #4]
   1313c:	str	r0, [sp]
   13140:	mov	r0, r1
   13144:	movw	r1, #1
   13148:	ldr	r2, [sp]
   1314c:	blx	r2
   13150:	ldr	r0, [sp, #4]
   13154:	bl	14d50 <main@@Base+0x1bd8>
   13158:	mov	sp, fp
   1315c:	pop	{fp, pc}
   13160:	sub	sp, sp, #4
   13164:	str	r0, [sp]
   13168:	ldr	r0, [sp]
   1316c:	ldr	r0, [r0, #36]	; 0x24
   13170:	add	sp, sp, #4
   13174:	bx	lr

00013178 <main@@Base>:
   13178:	push	{fp, lr}
   1317c:	mov	fp, sp
   13180:	sub	sp, sp, #24
   13184:	ldr	r2, [pc, #188]	; 13248 <main@@Base+0xd0>
   13188:	add	r2, pc, r2
   1318c:	ldr	r3, [pc, #184]	; 1324c <main@@Base+0xd4>
   13190:	ldr	r3, [pc, r3]
   13194:	movw	ip, #0
   13198:	str	ip, [fp, #-4]
   1319c:	str	r0, [fp, #-8]
   131a0:	str	r1, [sp, #12]
   131a4:	ldr	r0, [r3]
   131a8:	mov	r1, r2
   131ac:	bl	12930 <fprintf@plt>
   131b0:	ldr	r1, [fp, #-8]
   131b4:	cmp	r1, #1
   131b8:	str	r0, [sp, #8]
   131bc:	beq	131f4 <main@@Base+0x7c>
   131c0:	ldr	r0, [fp, #-8]
   131c4:	cmp	r0, #4
   131c8:	beq	131f4 <main@@Base+0x7c>
   131cc:	ldr	r0, [pc, #136]	; 1325c <main@@Base+0xe4>
   131d0:	add	r1, pc, r0
   131d4:	ldr	r0, [pc, #132]	; 13260 <main@@Base+0xe8>
   131d8:	ldr	r0, [pc, r0]
   131dc:	ldr	r0, [r0]
   131e0:	bl	12930 <fprintf@plt>
   131e4:	movw	r1, #1
   131e8:	str	r0, [sp, #4]
   131ec:	mov	r0, r1
   131f0:	bl	12924 <exit@plt>
   131f4:	ldr	r0, [fp, #-8]
   131f8:	cmp	r0, #4
   131fc:	bne	1323c <main@@Base+0xc4>
   13200:	ldr	r0, [pc, #72]	; 13250 <main@@Base+0xd8>
   13204:	ldr	r0, [pc, r0]
   13208:	ldr	r1, [pc, #68]	; 13254 <main@@Base+0xdc>
   1320c:	ldr	r1, [pc, r1]
   13210:	ldr	r2, [pc, #64]	; 13258 <main@@Base+0xe0>
   13214:	ldr	r2, [pc, r2]
   13218:	ldr	r3, [sp, #12]
   1321c:	ldr	r3, [r3, #4]
   13220:	str	r3, [r2]
   13224:	ldr	r2, [sp, #12]
   13228:	ldr	r2, [r2, #8]
   1322c:	str	r2, [r1]
   13230:	ldr	r1, [sp, #12]
   13234:	ldr	r1, [r1, #12]
   13238:	str	r1, [r0]
   1323c:	bl	12a80 <test_print@@Base>
   13240:	mov	sp, fp
   13244:	pop	{fp, pc}
   13248:	andeq	pc, r0, r2, lsr #4
   1324c:	ldrdeq	r0, [r2], -r8
   13250:	andeq	r0, r2, r8, ror lr
   13254:	andeq	r0, r2, r0, ror #28
   13258:	andeq	r0, r2, r0, ror #28
   1325c:	strdeq	pc, [r0], -r3
   13260:	muleq	r2, r0, lr
   13264:	sub	sp, sp, #8
   13268:	str	r0, [sp, #4]
   1326c:	strb	r1, [sp, #3]
   13270:	ldrb	r0, [sp, #3]
   13274:	ldr	r1, [sp, #4]
   13278:	strb	r0, [r1, #25]
   1327c:	add	sp, sp, #8
   13280:	bx	lr
   13284:	sub	sp, sp, #8
   13288:	str	r0, [sp, #4]
   1328c:	str	r1, [sp]
   13290:	ldr	r0, [sp]
   13294:	cmp	r0, #0
   13298:	movw	r0, #0
   1329c:	movne	r0, #1
   132a0:	mvn	r1, #0
   132a4:	eor	r0, r0, r1
   132a8:	eor	r0, r0, r1
   132ac:	and	r0, r0, #1
   132b0:	ldr	r1, [sp, #4]
   132b4:	strb	r0, [r1, #26]
   132b8:	add	sp, sp, #8
   132bc:	bx	lr
   132c0:	sub	sp, sp, #8
   132c4:	str	r0, [sp, #4]
   132c8:	str	r1, [sp]
   132cc:	ldr	r0, [sp]
   132d0:	cmp	r0, #0
   132d4:	movw	r0, #0
   132d8:	movne	r0, #1
   132dc:	mvn	r1, #0
   132e0:	eor	r0, r0, r1
   132e4:	eor	r0, r0, r1
   132e8:	and	r0, r0, #1
   132ec:	ldr	r1, [sp, #4]
   132f0:	strb	r0, [r1, #27]
   132f4:	add	sp, sp, #8
   132f8:	bx	lr
   132fc:	push	{fp, lr}
   13300:	mov	fp, sp
   13304:	sub	sp, sp, #104	; 0x68
   13308:	ldr	r2, [pc, #1928]	; 13a98 <main@@Base+0x920>
   1330c:	add	r3, pc, r2
   13310:	ldr	r2, [pc, #1924]	; 13a9c <main@@Base+0x924>
   13314:	add	r2, pc, r2
   13318:	str	r0, [fp, #-4]
   1331c:	str	r1, [fp, #-8]
   13320:	ldr	r0, [fp, #-4]
   13324:	ldr	r1, [fp, #-8]
   13328:	movw	ip, #0
   1332c:	str	r2, [fp, #-12]
   13330:	mov	r2, ip
   13334:	movw	ip, #3
   13338:	str	ip, [sp]
   1333c:	ldr	ip, [fp, #-12]
   13340:	str	ip, [sp, #4]
   13344:	bl	1f3a4 <flatcc_json_printer_struct_field@@Base>
   13348:	ldr	r0, [pc, #1860]	; 13a94 <main@@Base+0x91c>
   1334c:	add	r3, pc, r0
   13350:	ldr	r0, [fp, #-4]
   13354:	ldr	r1, [fp, #-8]
   13358:	movw	r2, #1
   1335c:	movw	ip, #4
   13360:	str	ip, [sp]
   13364:	movw	ip, #150	; 0x96
   13368:	sxth	ip, ip
   1336c:	str	ip, [sp, #4]
   13370:	bl	18354 <flatcc_json_printer_int16_field@@Base>
   13374:	ldr	r0, [pc, #1812]	; 13a90 <main@@Base+0x918>
   13378:	add	r3, pc, r0
   1337c:	ldr	r0, [fp, #-4]
   13380:	ldr	r1, [fp, #-8]
   13384:	movw	r2, #2
   13388:	str	r2, [fp, #-16]
   1338c:	ldr	ip, [fp, #-16]
   13390:	str	ip, [sp]
   13394:	movw	lr, #100	; 0x64
   13398:	sxth	lr, lr
   1339c:	str	lr, [sp, #4]
   133a0:	bl	18354 <flatcc_json_printer_int16_field@@Base>
   133a4:	ldr	r0, [pc, #1760]	; 13a8c <main@@Base+0x914>
   133a8:	add	r3, pc, r0
   133ac:	ldr	r0, [fp, #-4]
   133b0:	ldr	r1, [fp, #-8]
   133b4:	movw	r2, #3
   133b8:	movw	ip, #4
   133bc:	str	ip, [sp]
   133c0:	bl	1777c <flatcc_json_printer_string_field@@Base>
   133c4:	ldr	r0, [pc, #1724]	; 13a88 <main@@Base+0x910>
   133c8:	add	r3, pc, r0
   133cc:	ldr	r0, [fp, #-4]
   133d0:	ldr	r1, [fp, #-8]
   133d4:	movw	r2, #5
   133d8:	movw	ip, #9
   133dc:	str	ip, [sp]
   133e0:	bl	1a824 <flatcc_json_printer_uint8_vector_field@@Base>
   133e4:	ldr	r0, [pc, #1684]	; 13a80 <main@@Base+0x908>
   133e8:	add	r3, pc, r0
   133ec:	ldr	r0, [pc, #1680]	; 13a84 <main@@Base+0x90c>
   133f0:	add	r0, pc, r0
   133f4:	ldr	r1, [fp, #-4]
   133f8:	ldr	r2, [fp, #-8]
   133fc:	str	r0, [fp, #-20]	; 0xffffffec
   13400:	mov	r0, r1
   13404:	mov	r1, r2
   13408:	movw	r2, #6
   1340c:	movw	ip, #5
   13410:	str	ip, [sp]
   13414:	movw	ip, #8
   13418:	sxtb	ip, ip
   1341c:	str	ip, [sp, #4]
   13420:	ldr	ip, [fp, #-20]	; 0xffffffec
   13424:	str	ip, [sp, #8]
   13428:	bl	19074 <flatcc_json_printer_int8_enum_field@@Base>
   1342c:	ldr	r0, [pc, #1600]	; 13a74 <main@@Base+0x8fc>
   13430:	add	r3, pc, r0
   13434:	ldr	r0, [pc, #1596]	; 13a78 <main@@Base+0x900>
   13438:	add	r0, pc, r0
   1343c:	ldr	r1, [pc, #1592]	; 13a7c <main@@Base+0x904>
   13440:	add	r1, pc, r1
   13444:	ldr	r2, [fp, #-4]
   13448:	ldr	ip, [fp, #-8]
   1344c:	str	r0, [fp, #-24]	; 0xffffffe8
   13450:	mov	r0, r2
   13454:	str	r1, [fp, #-28]	; 0xffffffe4
   13458:	mov	r1, ip
   1345c:	movw	r2, #8
   13460:	movw	ip, #4
   13464:	str	ip, [sp]
   13468:	ldr	ip, [fp, #-24]	; 0xffffffe8
   1346c:	str	ip, [sp, #4]
   13470:	ldr	lr, [fp, #-28]	; 0xffffffe4
   13474:	str	lr, [sp, #8]
   13478:	bl	1edf8 <flatcc_json_printer_union_field@@Base>
   1347c:	ldr	r0, [pc, #1512]	; 13a6c <main@@Base+0x8f4>
   13480:	add	r3, pc, r0
   13484:	ldr	r0, [pc, #1508]	; 13a70 <main@@Base+0x8f8>
   13488:	add	r0, pc, r0
   1348c:	ldr	r1, [fp, #-4]
   13490:	ldr	r2, [fp, #-8]
   13494:	str	r0, [fp, #-32]	; 0xffffffe0
   13498:	mov	r0, r1
   1349c:	mov	r1, r2
   134a0:	movw	r2, #9
   134a4:	movw	ip, #5
   134a8:	str	ip, [sp]
   134ac:	movw	ip, #4
   134b0:	str	ip, [sp, #4]
   134b4:	ldr	ip, [fp, #-32]	; 0xffffffe0
   134b8:	str	ip, [sp, #8]
   134bc:	bl	1df88 <flatcc_json_printer_struct_vector_field@@Base>
   134c0:	ldr	r0, [pc, #1440]	; 13a68 <main@@Base+0x8f0>
   134c4:	add	r3, pc, r0
   134c8:	ldr	r0, [fp, #-4]
   134cc:	ldr	r1, [fp, #-8]
   134d0:	movw	r2, #10
   134d4:	movw	ip, #17
   134d8:	str	ip, [sp]
   134dc:	bl	1e30c <flatcc_json_printer_string_vector_field@@Base>
   134e0:	ldr	r0, [pc, #1400]	; 13a60 <main@@Base+0x8e8>
   134e4:	add	r3, pc, r0
   134e8:	ldr	r0, [pc, #1396]	; 13a64 <main@@Base+0x8ec>
   134ec:	add	r0, pc, r0
   134f0:	ldr	r1, [fp, #-4]
   134f4:	ldr	r2, [fp, #-8]
   134f8:	str	r0, [fp, #-36]	; 0xffffffdc
   134fc:	mov	r0, r1
   13500:	mov	r1, r2
   13504:	movw	r2, #11
   13508:	movw	ip, #17
   1350c:	str	ip, [sp]
   13510:	ldr	ip, [fp, #-36]	; 0xffffffdc
   13514:	str	ip, [sp, #4]
   13518:	bl	1e57c <flatcc_json_printer_table_vector_field@@Base>
   1351c:	ldr	r0, [pc, #1332]	; 13a58 <main@@Base+0x8e0>
   13520:	add	r3, pc, r0
   13524:	ldr	r0, [pc, #1328]	; 13a5c <main@@Base+0x8e4>
   13528:	add	r0, pc, r0
   1352c:	ldr	r1, [fp, #-4]
   13530:	ldr	r2, [fp, #-8]
   13534:	str	r0, [fp, #-40]	; 0xffffffd8
   13538:	mov	r0, r1
   1353c:	mov	r1, r2
   13540:	movw	r2, #12
   13544:	movw	ip, #5
   13548:	str	ip, [sp]
   1354c:	ldr	ip, [fp, #-40]	; 0xffffffd8
   13550:	str	ip, [sp, #4]
   13554:	bl	1ed30 <flatcc_json_printer_table_field@@Base>
   13558:	ldr	r0, [pc, #1264]	; 13a50 <main@@Base+0x8d8>
   1355c:	add	r3, pc, r0
   13560:	ldr	r0, [pc, #1260]	; 13a54 <main@@Base+0x8dc>
   13564:	add	r0, pc, r0
   13568:	ldr	r1, [fp, #-4]
   1356c:	ldr	r2, [fp, #-8]
   13570:	str	r0, [fp, #-44]	; 0xffffffd4
   13574:	mov	r0, r1
   13578:	mov	r1, r2
   1357c:	movw	r2, #13
   13580:	movw	ip, #20
   13584:	str	ip, [sp]
   13588:	movw	ip, #0
   1358c:	str	ip, [sp, #4]
   13590:	ldr	ip, [fp, #-44]	; 0xffffffd4
   13594:	str	ip, [sp, #8]
   13598:	bl	1fa94 <flatcc_json_printer_table_as_nested_root@@Base>
   1359c:	ldr	r0, [pc, #1188]	; 13a48 <main@@Base+0x8d0>
   135a0:	add	r3, pc, r0
   135a4:	ldr	r0, [pc, #1184]	; 13a4c <main@@Base+0x8d4>
   135a8:	add	r0, pc, r0
   135ac:	ldr	r1, [fp, #-4]
   135b0:	ldr	r2, [fp, #-8]
   135b4:	str	r0, [fp, #-48]	; 0xffffffd0
   135b8:	mov	r0, r1
   135bc:	mov	r1, r2
   135c0:	movw	r2, #14
   135c4:	movw	ip, #9
   135c8:	str	ip, [sp]
   135cc:	ldr	ip, [fp, #-48]	; 0xffffffd0
   135d0:	str	ip, [sp, #4]
   135d4:	bl	1ed30 <flatcc_json_printer_table_field@@Base>
   135d8:	ldr	r0, [pc, #1124]	; 13a44 <main@@Base+0x8cc>
   135dc:	add	r3, pc, r0
   135e0:	ldr	r0, [fp, #-4]
   135e4:	ldr	r1, [fp, #-8]
   135e8:	movw	r2, #15
   135ec:	movw	ip, #8
   135f0:	str	ip, [sp]
   135f4:	movw	ip, #1
   135f8:	and	ip, ip, #255	; 0xff
   135fc:	str	ip, [sp, #4]
   13600:	bl	18714 <flatcc_json_printer_bool_field@@Base>
   13604:	ldr	r0, [pc, #1076]	; 13a40 <main@@Base+0x8c8>
   13608:	add	r3, pc, r0
   1360c:	ldr	r0, [fp, #-4]
   13610:	ldr	r1, [fp, #-8]
   13614:	movw	r2, #16
   13618:	str	r2, [sp, #52]	; 0x34
   1361c:	ldr	ip, [sp, #52]	; 0x34
   13620:	str	ip, [sp]
   13624:	movw	lr, #0
   13628:	str	lr, [sp, #4]
   1362c:	bl	18484 <flatcc_json_printer_int32_field@@Base>
   13630:	ldr	r0, [pc, #1028]	; 13a3c <main@@Base+0x8c4>
   13634:	add	r3, pc, r0
   13638:	ldr	r0, [fp, #-4]
   1363c:	ldr	r1, [fp, #-8]
   13640:	movw	r2, #17
   13644:	movw	ip, #16
   13648:	str	ip, [sp]
   1364c:	movw	ip, #0
   13650:	str	ip, [sp, #4]
   13654:	bl	17f94 <flatcc_json_printer_uint32_field@@Base>
   13658:	ldr	r0, [pc, #984]	; 13a38 <main@@Base+0x8c0>
   1365c:	add	r0, pc, r0
   13660:	ldr	r1, [fp, #-4]
   13664:	ldr	r2, [fp, #-8]
   13668:	mov	r3, sp
   1366c:	mov	ip, #0
   13670:	str	ip, [r3, #12]
   13674:	str	ip, [r3, #8]
   13678:	mov	ip, #16
   1367c:	str	ip, [r3]
   13680:	ldr	r3, [pc, #1048]	; 13aa0 <main@@Base+0x928>
   13684:	add	r3, pc, r3
   13688:	mov	ip, #18
   1368c:	str	r0, [sp, #48]	; 0x30
   13690:	mov	r0, r1
   13694:	mov	r1, r2
   13698:	mov	r2, ip
   1369c:	bl	185ac <flatcc_json_printer_int64_field@@Base>
   136a0:	ldr	r0, [pc, #908]	; 13a34 <main@@Base+0x8bc>
   136a4:	add	r0, pc, r0
   136a8:	ldr	r1, [fp, #-4]
   136ac:	ldr	r2, [fp, #-8]
   136b0:	mov	r3, sp
   136b4:	mov	ip, #0
   136b8:	str	ip, [r3, #12]
   136bc:	str	ip, [r3, #8]
   136c0:	mov	ip, #16
   136c4:	str	ip, [r3]
   136c8:	ldr	r3, [pc, #980]	; 13aa4 <main@@Base+0x92c>
   136cc:	add	r3, pc, r3
   136d0:	mov	ip, #19
   136d4:	str	r0, [sp, #44]	; 0x2c
   136d8:	mov	r0, r1
   136dc:	mov	r1, r2
   136e0:	mov	r2, ip
   136e4:	bl	180bc <flatcc_json_printer_uint64_field@@Base>
   136e8:	ldr	r0, [pc, #832]	; 13a30 <main@@Base+0x8b8>
   136ec:	add	r3, pc, r0
   136f0:	ldr	r0, [fp, #-4]
   136f4:	ldr	r1, [fp, #-8]
   136f8:	movw	r2, #20
   136fc:	movw	ip, #17
   13700:	str	ip, [sp]
   13704:	movw	ip, #0
   13708:	str	ip, [sp, #4]
   1370c:	bl	18484 <flatcc_json_printer_int32_field@@Base>
   13710:	ldr	r0, [pc, #788]	; 13a2c <main@@Base+0x8b4>
   13714:	add	r3, pc, r0
   13718:	ldr	r0, [fp, #-4]
   1371c:	ldr	r1, [fp, #-8]
   13720:	movw	r2, #21
   13724:	movw	ip, #17
   13728:	str	ip, [sp]
   1372c:	movw	ip, #0
   13730:	str	ip, [sp, #4]
   13734:	bl	17f94 <flatcc_json_printer_uint32_field@@Base>
   13738:	ldr	r0, [pc, #744]	; 13a28 <main@@Base+0x8b0>
   1373c:	add	r0, pc, r0
   13740:	ldr	r1, [fp, #-4]
   13744:	ldr	r2, [fp, #-8]
   13748:	mov	r3, sp
   1374c:	mov	ip, #0
   13750:	str	ip, [r3, #12]
   13754:	str	ip, [r3, #8]
   13758:	mov	ip, #17
   1375c:	str	ip, [r3]
   13760:	ldr	r3, [pc, #832]	; 13aa8 <main@@Base+0x930>
   13764:	add	r3, pc, r3
   13768:	mov	ip, #22
   1376c:	str	r0, [sp, #40]	; 0x28
   13770:	mov	r0, r1
   13774:	mov	r1, r2
   13778:	mov	r2, ip
   1377c:	bl	185ac <flatcc_json_printer_int64_field@@Base>
   13780:	ldr	r0, [pc, #668]	; 13a24 <main@@Base+0x8ac>
   13784:	add	r0, pc, r0
   13788:	ldr	r1, [fp, #-4]
   1378c:	ldr	r2, [fp, #-8]
   13790:	mov	r3, sp
   13794:	mov	ip, #0
   13798:	str	ip, [r3, #12]
   1379c:	str	ip, [r3, #8]
   137a0:	mov	ip, #17
   137a4:	str	ip, [r3]
   137a8:	ldr	r3, [pc, #764]	; 13aac <main@@Base+0x934>
   137ac:	add	r3, pc, r3
   137b0:	mov	ip, #23
   137b4:	str	r0, [sp, #36]	; 0x24
   137b8:	mov	r0, r1
   137bc:	mov	r1, r2
   137c0:	mov	r2, ip
   137c4:	bl	180bc <flatcc_json_printer_uint64_field@@Base>
   137c8:	ldr	r0, [pc, #592]	; 13a20 <main@@Base+0x8a8>
   137cc:	add	r3, pc, r0
   137d0:	ldr	r0, [fp, #-4]
   137d4:	ldr	r1, [fp, #-8]
   137d8:	movw	r2, #24
   137dc:	movw	ip, #16
   137e0:	str	ip, [sp]
   137e4:	bl	1bbe4 <flatcc_json_printer_bool_vector_field@@Base>
   137e8:	ldr	r0, [pc, #552]	; 13a18 <main@@Base+0x8a0>
   137ec:	add	r3, pc, r0
   137f0:	vldr	s0, [pc, #548]	; 13a1c <main@@Base+0x8a4>
   137f4:	ldr	r0, [fp, #-4]
   137f8:	ldr	r1, [fp, #-8]
   137fc:	movw	r2, #25
   13800:	movw	ip, #5
   13804:	str	ip, [sp]
   13808:	bl	188f0 <flatcc_json_printer_float_field@@Base>
   1380c:	ldr	r0, [pc, #512]	; 13a14 <main@@Base+0x89c>
   13810:	add	r3, pc, r0
   13814:	ldr	r0, [fp, #-4]
   13818:	ldr	r1, [fp, #-8]
   1381c:	movw	r2, #26
   13820:	movw	ip, #6
   13824:	str	ip, [sp]
   13828:	vmov.f32	s0, #8	; 0x40400000  3.0
   1382c:	bl	188f0 <flatcc_json_printer_float_field@@Base>
   13830:	ldr	r0, [pc, #468]	; 13a0c <main@@Base+0x894>
   13834:	add	r3, pc, r0
   13838:	vldr	s0, [pc, #464]	; 13a10 <main@@Base+0x898>
   1383c:	ldr	r0, [fp, #-4]
   13840:	ldr	r1, [fp, #-8]
   13844:	movw	r2, #27
   13848:	movw	ip, #6
   1384c:	str	ip, [sp]
   13850:	bl	188f0 <flatcc_json_printer_float_field@@Base>
   13854:	ldr	r0, [pc, #428]	; 13a08 <main@@Base+0x890>
   13858:	add	r3, pc, r0
   1385c:	ldr	r0, [fp, #-4]
   13860:	ldr	r1, [fp, #-8]
   13864:	movw	r2, #28
   13868:	movw	ip, #18
   1386c:	str	ip, [sp]
   13870:	bl	1e30c <flatcc_json_printer_string_vector_field@@Base>
   13874:	ldr	r0, [pc, #388]	; 13a00 <main@@Base+0x888>
   13878:	add	r3, pc, r0
   1387c:	ldr	r0, [pc, #384]	; 13a04 <main@@Base+0x88c>
   13880:	add	r0, pc, r0
   13884:	ldr	r1, [fp, #-4]
   13888:	ldr	r2, [fp, #-8]
   1388c:	str	r0, [sp, #32]
   13890:	mov	r0, r1
   13894:	mov	r1, r2
   13898:	movw	r2, #29
   1389c:	movw	ip, #23
   138a0:	str	ip, [sp]
   138a4:	movw	ip, #8
   138a8:	str	ip, [sp, #4]
   138ac:	ldr	ip, [sp, #32]
   138b0:	str	ip, [sp, #8]
   138b4:	bl	1df88 <flatcc_json_printer_struct_vector_field@@Base>
   138b8:	ldr	r0, [pc, #316]	; 139fc <main@@Base+0x884>
   138bc:	add	r3, pc, r0
   138c0:	ldr	r0, [fp, #-4]
   138c4:	ldr	r1, [fp, #-8]
   138c8:	movw	r2, #30
   138cc:	movw	ip, #4
   138d0:	str	ip, [sp]
   138d4:	bl	1a824 <flatcc_json_printer_uint8_vector_field@@Base>
   138d8:	ldr	r0, [pc, #276]	; 139f4 <main@@Base+0x87c>
   138dc:	add	r3, pc, r0
   138e0:	ldr	r0, [pc, #272]	; 139f8 <main@@Base+0x880>
   138e4:	add	r0, pc, r0
   138e8:	ldr	r1, [fp, #-4]
   138ec:	ldr	r2, [fp, #-8]
   138f0:	str	r0, [sp, #28]
   138f4:	mov	r0, r1
   138f8:	mov	r1, r2
   138fc:	movw	r2, #31
   13900:	movw	ip, #5
   13904:	str	ip, [sp]
   13908:	movw	ip, #4
   1390c:	str	ip, [sp, #4]
   13910:	ldr	ip, [sp, #28]
   13914:	str	ip, [sp, #8]
   13918:	bl	1df88 <flatcc_json_printer_struct_vector_field@@Base>
   1391c:	ldr	r0, [pc, #204]	; 139f0 <main@@Base+0x878>
   13920:	add	r3, pc, r0
   13924:	ldr	r0, [fp, #-4]
   13928:	ldr	r1, [fp, #-8]
   1392c:	movw	r2, #32
   13930:	movw	ip, #15
   13934:	str	ip, [sp]
   13938:	bl	1b970 <flatcc_json_printer_int64_vector_field@@Base>
   1393c:	ldr	r0, [pc, #168]	; 139ec <main@@Base+0x874>
   13940:	add	r3, pc, r0
   13944:	ldr	r0, [fp, #-4]
   13948:	ldr	r1, [fp, #-8]
   1394c:	movw	r2, #33	; 0x21
   13950:	movw	ip, #17
   13954:	str	ip, [sp]
   13958:	bl	1c0dc <flatcc_json_printer_double_vector_field@@Base>
   1395c:	ldr	r0, [pc, #128]	; 139e4 <main@@Base+0x86c>
   13960:	add	r3, pc, r0
   13964:	ldr	r0, [pc, #124]	; 139e8 <main@@Base+0x870>
   13968:	add	r0, pc, r0
   1396c:	ldr	r1, [fp, #-4]
   13970:	ldr	r2, [fp, #-8]
   13974:	str	r0, [sp, #24]
   13978:	mov	r0, r1
   1397c:	mov	r1, r2
   13980:	movw	r2, #34	; 0x22
   13984:	movw	ip, #21
   13988:	str	ip, [sp]
   1398c:	ldr	ip, [sp, #24]
   13990:	str	ip, [sp, #4]
   13994:	bl	1ed30 <flatcc_json_printer_table_field@@Base>
   13998:	ldr	r0, [pc, #60]	; 139dc <main@@Base+0x864>
   1399c:	add	r3, pc, r0
   139a0:	ldr	r0, [pc, #56]	; 139e0 <main@@Base+0x868>
   139a4:	add	r0, pc, r0
   139a8:	ldr	r1, [fp, #-4]
   139ac:	ldr	r2, [fp, #-8]
   139b0:	str	r0, [sp, #20]
   139b4:	mov	r0, r1
   139b8:	mov	r1, r2
   139bc:	movw	r2, #35	; 0x23
   139c0:	movw	ip, #10
   139c4:	str	ip, [sp]
   139c8:	ldr	ip, [sp, #20]
   139cc:	str	ip, [sp, #4]
   139d0:	bl	1ed30 <flatcc_json_printer_table_field@@Base>
   139d4:	mov	sp, fp
   139d8:	pop	{fp, pc}
   139dc:	andeq	lr, r0, r2, lsl #25
   139e0:	muleq	r0, r0, r7
   139e4:	andeq	lr, r0, r8, lsr #25
   139e8:			; <UNDEFINED> instruction: 0x000007b8
   139ec:			; <UNDEFINED> instruction: 0x0000ecb6
   139f0:	andeq	lr, r0, r6, asr #25
   139f4:	andeq	lr, r0, r4, lsl #26
   139f8:	andeq	r0, r0, r0, asr r6
   139fc:	andeq	lr, r0, pc, lsl sp
   13a00:	andeq	lr, r0, fp, asr #26
   13a04:	andeq	r0, r0, ip, lsl #16
   13a08:	andeq	lr, r0, r8, asr sp
   13a0c:	andeq	lr, r0, r5, ror sp
   13a10:	andeq	r0, r0, r0
   13a14:	muleq	r0, r2, sp
   13a18:			; <UNDEFINED> instruction: 0x0000edb0
   13a1c:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   13a20:			; <UNDEFINED> instruction: 0x0000edbf
   13a24:	strdeq	lr, [r0], -r5
   13a28:	andeq	lr, r0, fp, lsr #28
   13a2c:	andeq	lr, r0, r1, asr #28
   13a30:	andeq	lr, r0, r7, asr lr
   13a34:	andeq	lr, r0, lr, lsl #29
   13a38:	andeq	lr, r0, r5, asr #29
   13a3c:	ldrdeq	lr, [r0], -ip
   13a40:	strdeq	lr, [r0], -r7
   13a44:	andeq	lr, r0, sl, lsl pc
   13a48:	andeq	lr, r0, ip, asr #30
   13a4c:	andeq	r0, r0, r4, lsr #20
   13a50:	andeq	lr, r0, fp, ror pc
   13a54:			; <UNDEFINED> instruction: 0xfffffd90
   13a58:			; <UNDEFINED> instruction: 0x0000efb1
   13a5c:			; <UNDEFINED> instruction: 0xfffffdcc
   13a60:	ldrdeq	lr, [r0], -fp
   13a64:			; <UNDEFINED> instruction: 0xfffffe08
   13a68:	andeq	lr, r0, r9, ror #31
   13a6c:	andeq	pc, r0, r7, lsr #32
   13a70:	andeq	r0, r0, ip, lsr #21
   13a74:	andeq	pc, r0, r9, ror #3
   13a78:	andeq	r0, r0, ip, asr r9
   13a7c:	andeq	r0, r0, ip, lsr #20
   13a80:	strheq	pc, [r0], -r9	; <UNPREDICTABLE>
   13a84:	andeq	r0, r0, r4, ror r8
   13a88:	andeq	pc, r0, pc, asr #1
   13a8c:	andeq	pc, r0, sl, ror #1
   13a90:	andeq	pc, r0, r7, lsl r1	; <UNPREDICTABLE>
   13a94:	andeq	pc, r0, lr, lsr r1	; <UNPREDICTABLE>
   13a98:	andeq	pc, r0, sl, ror r1	; <UNPREDICTABLE>
   13a9c:	muleq	r0, r4, r7
   13aa0:	muleq	r0, sp, lr
   13aa4:	andeq	lr, r0, r6, ror #28
   13aa8:	andeq	lr, r0, r3, lsl #28
   13aac:	andeq	lr, r0, sp, asr #27
   13ab0:	push	{r4, sl, fp, lr}
   13ab4:	add	fp, sp, #8
   13ab8:	sub	sp, sp, #64	; 0x40
   13abc:	ldr	r2, [pc, #420]	; 13c68 <main@@Base+0xaf0>
   13ac0:	add	r2, pc, r2
   13ac4:	str	r0, [fp, #-12]
   13ac8:	str	r1, [fp, #-16]
   13acc:	ldr	r0, [fp, #-12]
   13ad0:	ldr	r1, [fp, #-16]
   13ad4:	movw	r3, #0
   13ad8:	str	r1, [fp, #-20]	; 0xffffffec
   13adc:	mov	r1, r3
   13ae0:	ldr	ip, [fp, #-20]	; 0xffffffec
   13ae4:	str	r2, [fp, #-24]	; 0xffffffe8
   13ae8:	mov	r2, ip
   13aec:	ldr	lr, [fp, #-24]	; 0xffffffe8
   13af0:	str	lr, [sp]
   13af4:	movw	r4, #1
   13af8:	str	r4, [sp, #4]
   13afc:	bl	19c7c <flatcc_json_printer_float_struct_field@@Base>
   13b00:	ldr	r0, [pc, #348]	; 13c64 <main@@Base+0xaec>
   13b04:	add	r0, pc, r0
   13b08:	ldr	r1, [fp, #-12]
   13b0c:	ldr	r2, [fp, #-16]
   13b10:	str	r0, [fp, #-28]	; 0xffffffe4
   13b14:	mov	r0, r1
   13b18:	movw	r1, #1
   13b1c:	str	r1, [fp, #-32]	; 0xffffffe0
   13b20:	movw	r3, #4
   13b24:	ldr	ip, [fp, #-28]	; 0xffffffe4
   13b28:	str	ip, [sp]
   13b2c:	ldr	lr, [fp, #-32]	; 0xffffffe0
   13b30:	str	lr, [sp, #4]
   13b34:	bl	19c7c <flatcc_json_printer_float_struct_field@@Base>
   13b38:	ldr	r0, [pc, #288]	; 13c60 <main@@Base+0xae8>
   13b3c:	add	r0, pc, r0
   13b40:	ldr	r1, [fp, #-12]
   13b44:	ldr	r2, [fp, #-16]
   13b48:	str	r0, [sp, #36]	; 0x24
   13b4c:	mov	r0, r1
   13b50:	movw	r1, #2
   13b54:	movw	r3, #8
   13b58:	ldr	ip, [sp, #36]	; 0x24
   13b5c:	str	ip, [sp]
   13b60:	movw	lr, #1
   13b64:	str	lr, [sp, #4]
   13b68:	bl	19c7c <flatcc_json_printer_float_struct_field@@Base>
   13b6c:	ldr	r0, [pc, #232]	; 13c5c <main@@Base+0xae4>
   13b70:	add	r0, pc, r0
   13b74:	ldr	r1, [fp, #-12]
   13b78:	ldr	r2, [fp, #-16]
   13b7c:	str	r0, [sp, #32]
   13b80:	mov	r0, r1
   13b84:	movw	r1, #3
   13b88:	movw	r3, #16
   13b8c:	ldr	ip, [sp, #32]
   13b90:	str	ip, [sp]
   13b94:	movw	lr, #5
   13b98:	str	lr, [sp, #4]
   13b9c:	bl	19d1c <flatcc_json_printer_double_struct_field@@Base>
   13ba0:	ldr	r0, [pc, #172]	; 13c54 <main@@Base+0xadc>
   13ba4:	add	r0, pc, r0
   13ba8:	ldr	r1, [pc, #168]	; 13c58 <main@@Base+0xae0>
   13bac:	add	r1, pc, r1
   13bb0:	ldr	r2, [fp, #-12]
   13bb4:	ldr	r3, [fp, #-16]
   13bb8:	str	r0, [sp, #28]
   13bbc:	mov	r0, r2
   13bc0:	movw	r2, #4
   13bc4:	str	r1, [sp, #24]
   13bc8:	mov	r1, r2
   13bcc:	mov	r2, r3
   13bd0:	movw	r3, #24
   13bd4:	ldr	ip, [sp, #28]
   13bd8:	str	ip, [sp]
   13bdc:	movw	lr, #5
   13be0:	str	lr, [sp, #4]
   13be4:	ldr	lr, [sp, #24]
   13be8:	str	lr, [sp, #8]
   13bec:	bl	1a120 <flatcc_json_printer_int8_enum_struct_field@@Base>
   13bf0:	ldr	r0, [pc, #84]	; 13c4c <main@@Base+0xad4>
   13bf4:	add	r0, pc, r0
   13bf8:	ldr	r1, [pc, #80]	; 13c50 <main@@Base+0xad8>
   13bfc:	add	r1, pc, r1
   13c00:	ldr	r2, [fp, #-12]
   13c04:	ldr	r3, [fp, #-16]
   13c08:	str	r0, [sp, #20]
   13c0c:	mov	r0, r2
   13c10:	movw	r2, #5
   13c14:	str	r1, [sp, #16]
   13c18:	mov	r1, r2
   13c1c:	str	r2, [sp, #12]
   13c20:	mov	r2, r3
   13c24:	movw	r3, #26
   13c28:	ldr	ip, [sp, #20]
   13c2c:	str	ip, [sp]
   13c30:	ldr	lr, [sp, #12]
   13c34:	str	lr, [sp, #4]
   13c38:	ldr	r4, [sp, #16]
   13c3c:	str	r4, [sp, #8]
   13c40:	bl	1f288 <flatcc_json_printer_embedded_struct_field@@Base>
   13c44:	sub	sp, fp, #8
   13c48:	pop	{r4, sl, fp, pc}
   13c4c:	andeq	lr, r0, r3, asr #20
   13c50:	andeq	r0, r0, r8, lsr r3
   13c54:	andeq	lr, r0, sp, lsl #21
   13c58:	strheq	r0, [r0], -r8
   13c5c:			; <UNDEFINED> instruction: 0x0000eabb
   13c60:	andeq	lr, r0, sp, ror #21
   13c64:	ldrdeq	lr, [r0], -r1
   13c68:	andeq	lr, r0, lr, lsl fp
   13c6c:	push	{fp, lr}
   13c70:	mov	fp, sp
   13c74:	sub	sp, sp, #16
   13c78:	str	r0, [fp, #-4]
   13c7c:	strb	r1, [fp, #-5]
   13c80:	ldrb	r0, [fp, #-5]
   13c84:	strb	r0, [fp, #-6]
   13c88:	ldrb	r0, [fp, #-6]
   13c8c:	ldrb	r1, [fp, #-6]
   13c90:	sub	r1, r1, #1
   13c94:	and	r0, r0, r1
   13c98:	movw	r1, #0
   13c9c:	cmp	r1, r0
   13ca0:	movw	r0, #0
   13ca4:	movne	r0, #1
   13ca8:	and	r0, r0, #1
   13cac:	str	r0, [sp, #4]
   13cb0:	str	r1, [sp]
   13cb4:	ldrb	r0, [fp, #-6]
   13cb8:	and	r0, r0, #244	; 0xf4
   13cbc:	cmp	r0, #0
   13cc0:	bne	13cd0 <main@@Base+0xb58>
   13cc4:	ldrb	r0, [fp, #-6]
   13cc8:	cmp	r0, #0
   13ccc:	bne	13ce0 <main@@Base+0xb68>
   13cd0:	ldr	r0, [fp, #-4]
   13cd4:	ldrsb	r1, [fp, #-5]
   13cd8:	bl	1721c <flatcc_json_printer_int8@@Base>
   13cdc:	b	13d88 <main@@Base+0xc10>
   13ce0:	ldr	r0, [fp, #-4]
   13ce4:	ldr	r1, [sp, #4]
   13ce8:	bl	176a4 <flatcc_json_printer_delimit_enum_flags@@Base>
   13cec:	ldrb	r0, [fp, #-6]
   13cf0:	and	r0, r0, #1
   13cf4:	cmp	r0, #0
   13cf8:	beq	13d1c <main@@Base+0xba4>
   13cfc:	ldr	r0, [pc, #140]	; 13d90 <main@@Base+0xc18>
   13d00:	add	r2, pc, r0
   13d04:	ldr	r0, [fp, #-4]
   13d08:	ldr	r1, [sp]
   13d0c:	add	r3, r1, #1
   13d10:	str	r3, [sp]
   13d14:	movw	r3, #3
   13d18:	bl	17714 <flatcc_json_printer_enum_flag@@Base>
   13d1c:	ldrb	r0, [fp, #-6]
   13d20:	and	r0, r0, #2
   13d24:	cmp	r0, #0
   13d28:	beq	13d4c <main@@Base+0xbd4>
   13d2c:	ldr	r0, [pc, #96]	; 13d94 <main@@Base+0xc1c>
   13d30:	add	r2, pc, r0
   13d34:	ldr	r0, [fp, #-4]
   13d38:	ldr	r1, [sp]
   13d3c:	add	r3, r1, #1
   13d40:	str	r3, [sp]
   13d44:	movw	r3, #5
   13d48:	bl	17714 <flatcc_json_printer_enum_flag@@Base>
   13d4c:	ldrb	r0, [fp, #-6]
   13d50:	and	r0, r0, #8
   13d54:	cmp	r0, #0
   13d58:	beq	13d7c <main@@Base+0xc04>
   13d5c:	ldr	r0, [pc, #52]	; 13d98 <main@@Base+0xc20>
   13d60:	add	r2, pc, r0
   13d64:	ldr	r0, [fp, #-4]
   13d68:	ldr	r1, [sp]
   13d6c:	add	r3, r1, #1
   13d70:	str	r3, [sp]
   13d74:	movw	r3, #4
   13d78:	bl	17714 <flatcc_json_printer_enum_flag@@Base>
   13d7c:	ldr	r0, [fp, #-4]
   13d80:	ldr	r1, [sp, #4]
   13d84:	bl	176a4 <flatcc_json_printer_delimit_enum_flags@@Base>
   13d88:	mov	sp, fp
   13d8c:	pop	{fp, pc}
   13d90:	andeq	lr, r0, sp, lsr r9
   13d94:	andeq	lr, r0, r1, lsl r9
   13d98:	andeq	lr, r0, r7, ror #17
   13d9c:	push	{fp, lr}
   13da0:	mov	fp, sp
   13da4:	sub	sp, sp, #16
   13da8:	str	r0, [fp, #-4]
   13dac:	strb	r1, [fp, #-5]
   13db0:	ldrb	r0, [fp, #-5]
   13db4:	sub	r0, r0, #1
   13db8:	cmp	r0, #3
   13dbc:	str	r0, [sp, #4]
   13dc0:	bhi	13e44 <main@@Base+0xccc>
   13dc4:	add	r0, pc, #8
   13dc8:	ldr	r1, [sp, #4]
   13dcc:	ldr	r2, [r0, r1, lsl #2]
   13dd0:	add	pc, r0, r2
   13dd4:	andeq	r0, r0, r0, lsl r0
   13dd8:	andeq	r0, r0, r8, lsr #32
   13ddc:	andeq	r0, r0, r0, asr #32
   13de0:	andeq	r0, r0, r8, asr r0
   13de4:	ldr	r0, [pc, #128]	; 13e6c <main@@Base+0xcf4>
   13de8:	add	r1, pc, r0
   13dec:	ldr	r0, [fp, #-4]
   13df0:	movw	r2, #7
   13df4:	bl	17578 <flatcc_json_printer_enum@@Base>
   13df8:	b	13e58 <main@@Base+0xce0>
   13dfc:	ldr	r0, [pc, #100]	; 13e68 <main@@Base+0xcf0>
   13e00:	add	r1, pc, r0
   13e04:	ldr	r0, [fp, #-4]
   13e08:	movw	r2, #23
   13e0c:	bl	17578 <flatcc_json_printer_enum@@Base>
   13e10:	b	13e58 <main@@Base+0xce0>
   13e14:	ldr	r0, [pc, #72]	; 13e64 <main@@Base+0xcec>
   13e18:	add	r1, pc, r0
   13e1c:	ldr	r0, [fp, #-4]
   13e20:	movw	r2, #8
   13e24:	bl	17578 <flatcc_json_printer_enum@@Base>
   13e28:	b	13e58 <main@@Base+0xce0>
   13e2c:	ldr	r0, [pc, #44]	; 13e60 <main@@Base+0xce8>
   13e30:	add	r1, pc, r0
   13e34:	ldr	r0, [fp, #-4]
   13e38:	movw	r2, #3
   13e3c:	bl	17578 <flatcc_json_printer_enum@@Base>
   13e40:	b	13e58 <main@@Base+0xce0>
   13e44:	ldr	r0, [pc, #36]	; 13e70 <main@@Base+0xcf8>
   13e48:	add	r1, pc, r0
   13e4c:	ldr	r0, [fp, #-4]
   13e50:	movw	r2, #4
   13e54:	bl	17578 <flatcc_json_printer_enum@@Base>
   13e58:	mov	sp, fp
   13e5c:	pop	{fp, pc}
   13e60:	andeq	lr, r0, r5, asr #16
   13e64:	andeq	lr, r0, r4, asr r8
   13e68:	andeq	lr, r0, r4, asr r8
   13e6c:	andeq	lr, r0, r4, ror #16
   13e70:	andeq	lr, r0, r1, lsr r8
   13e74:	push	{fp, lr}
   13e78:	mov	fp, sp
   13e7c:	sub	sp, sp, #16
   13e80:	str	r0, [fp, #-4]
   13e84:	str	r1, [sp, #8]
   13e88:	ldr	r0, [sp, #8]
   13e8c:	ldrb	r0, [r0, #8]
   13e90:	sub	r0, r0, #1
   13e94:	cmp	r0, #3
   13e98:	str	r0, [sp, #4]
   13e9c:	bhi	13f20 <main@@Base+0xda8>
   13ea0:	add	r0, pc, #8
   13ea4:	ldr	r1, [sp, #4]
   13ea8:	ldr	r2, [r0, r1, lsl #2]
   13eac:	add	pc, r0, r2
   13eb0:	andeq	r0, r0, r0, lsl r0
   13eb4:	andeq	r0, r0, r8, lsr #32
   13eb8:	andeq	r0, r0, r0, asr #32
   13ebc:	andeq	r0, r0, r8, asr r0
   13ec0:	ldr	r0, [pc, #112]	; 13f38 <main@@Base+0xdc0>
   13ec4:	add	r2, pc, r0
   13ec8:	ldr	r0, [fp, #-4]
   13ecc:	ldr	r1, [sp, #8]
   13ed0:	bl	1f10c <flatcc_json_printer_union_table@@Base>
   13ed4:	b	13f24 <main@@Base+0xdac>
   13ed8:	ldr	r0, [pc, #84]	; 13f34 <main@@Base+0xdbc>
   13edc:	add	r2, pc, r0
   13ee0:	ldr	r0, [fp, #-4]
   13ee4:	ldr	r1, [sp, #8]
   13ee8:	bl	1f10c <flatcc_json_printer_union_table@@Base>
   13eec:	b	13f24 <main@@Base+0xdac>
   13ef0:	ldr	r0, [pc, #56]	; 13f30 <main@@Base+0xdb8>
   13ef4:	add	r2, pc, r0
   13ef8:	ldr	r0, [fp, #-4]
   13efc:	ldr	r1, [sp, #8]
   13f00:	bl	1f10c <flatcc_json_printer_union_table@@Base>
   13f04:	b	13f24 <main@@Base+0xdac>
   13f08:	ldr	r0, [pc, #28]	; 13f2c <main@@Base+0xdb4>
   13f0c:	add	r2, pc, r0
   13f10:	ldr	r0, [fp, #-4]
   13f14:	ldr	r1, [sp, #8]
   13f18:	bl	1f10c <flatcc_json_printer_union_table@@Base>
   13f1c:	b	13f24 <main@@Base+0xdac>
   13f20:	b	13f24 <main@@Base+0xdac>
   13f24:	mov	sp, fp
   13f28:	pop	{fp, pc}
   13f2c:	andeq	r0, r0, r4, lsl #8
   13f30:	andeq	r0, r0, r8, lsl #8
   13f34:	andeq	r0, r0, r0, lsl #6
   13f38:			; <UNDEFINED> instruction: 0xfffff430
   13f3c:	push	{r4, sl, fp, lr}
   13f40:	add	fp, sp, #8
   13f44:	sub	sp, sp, #32
   13f48:	ldr	r2, [pc, #128]	; 13fd0 <main@@Base+0xe58>
   13f4c:	add	r2, pc, r2
   13f50:	str	r0, [fp, #-12]
   13f54:	str	r1, [fp, #-16]
   13f58:	ldr	r0, [fp, #-12]
   13f5c:	ldr	r1, [fp, #-16]
   13f60:	movw	r3, #0
   13f64:	str	r1, [sp, #20]
   13f68:	mov	r1, r3
   13f6c:	ldr	ip, [sp, #20]
   13f70:	str	r2, [sp, #16]
   13f74:	mov	r2, ip
   13f78:	ldr	lr, [sp, #16]
   13f7c:	str	lr, [sp]
   13f80:	movw	r4, #1
   13f84:	str	r4, [sp, #4]
   13f88:	bl	19a00 <flatcc_json_printer_int16_struct_field@@Base>
   13f8c:	ldr	r0, [pc, #56]	; 13fcc <main@@Base+0xe54>
   13f90:	add	r0, pc, r0
   13f94:	ldr	r1, [fp, #-12]
   13f98:	ldr	r2, [fp, #-16]
   13f9c:	str	r0, [sp, #12]
   13fa0:	mov	r0, r1
   13fa4:	movw	r1, #1
   13fa8:	str	r1, [sp, #8]
   13fac:	movw	r3, #2
   13fb0:	ldr	ip, [sp, #12]
   13fb4:	str	ip, [sp]
   13fb8:	ldr	lr, [sp, #8]
   13fbc:	str	lr, [sp, #4]
   13fc0:	bl	19960 <flatcc_json_printer_int8_struct_field@@Base>
   13fc4:	sub	sp, fp, #8
   13fc8:	pop	{r4, sl, fp, pc}
   13fcc:	andeq	lr, r0, r7, ror #14
   13fd0:	andeq	lr, r0, r7, lsl #12
   13fd4:	push	{fp, lr}
   13fd8:	mov	fp, sp
   13fdc:	sub	sp, sp, #32
   13fe0:	ldr	r2, [pc, #164]	; 1408c <main@@Base+0xf14>
   13fe4:	add	r3, pc, r2
   13fe8:	str	r0, [fp, #-4]
   13fec:	str	r1, [fp, #-8]
   13ff0:	ldr	r0, [fp, #-4]
   13ff4:	ldr	r1, [fp, #-8]
   13ff8:	movw	r2, #0
   13ffc:	movw	ip, #2
   14000:	str	ip, [sp]
   14004:	bl	1777c <flatcc_json_printer_string_field@@Base>
   14008:	ldr	r0, [pc, #120]	; 14088 <main@@Base+0xf10>
   1400c:	add	r0, pc, r0
   14010:	ldr	r1, [fp, #-4]
   14014:	ldr	r2, [fp, #-8]
   14018:	mov	r3, sp
   1401c:	mov	ip, #0
   14020:	str	ip, [r3, #12]
   14024:	str	ip, [r3, #8]
   14028:	mov	ip, #3
   1402c:	str	ip, [r3]
   14030:	ldr	r3, [pc, #88]	; 14090 <main@@Base+0xf18>
   14034:	add	r3, pc, r3
   14038:	mov	ip, #1
   1403c:	str	r0, [fp, #-12]
   14040:	mov	r0, r1
   14044:	mov	r1, r2
   14048:	mov	r2, ip
   1404c:	bl	185ac <flatcc_json_printer_int64_field@@Base>
   14050:	ldr	r0, [pc, #44]	; 14084 <main@@Base+0xf0c>
   14054:	add	r3, pc, r0
   14058:	ldr	r0, [fp, #-4]
   1405c:	ldr	r1, [fp, #-8]
   14060:	movw	r2, #2
   14064:	movw	ip, #5
   14068:	str	ip, [sp]
   1406c:	movw	ip, #0
   14070:	uxth	ip, ip
   14074:	str	ip, [sp, #4]
   14078:	bl	17e64 <flatcc_json_printer_uint16_field@@Base>
   1407c:	mov	sp, fp
   14080:	pop	{fp, pc}
   14084:	andeq	lr, r0, r1, lsr #15
   14088:	andeq	lr, r0, r5, ror #15
   1408c:	andeq	lr, r0, sl, lsl #16
   14090:			; <UNDEFINED> instruction: 0x0000e7bd
   14094:	push	{r4, sl, fp, lr}
   14098:	add	fp, sp, #8
   1409c:	sub	sp, sp, #32
   140a0:	ldr	r2, [pc, #124]	; 14124 <main@@Base+0xfac>
   140a4:	add	r2, pc, r2
   140a8:	str	r0, [fp, #-12]
   140ac:	str	r1, [fp, #-16]
   140b0:	ldr	r0, [fp, #-12]
   140b4:	ldr	r1, [fp, #-16]
   140b8:	movw	r3, #0
   140bc:	str	r1, [sp, #20]
   140c0:	mov	r1, r3
   140c4:	ldr	ip, [sp, #20]
   140c8:	str	r2, [sp, #16]
   140cc:	mov	r2, ip
   140d0:	ldr	lr, [sp, #16]
   140d4:	str	lr, [sp]
   140d8:	movw	r4, #2
   140dc:	str	r4, [sp, #4]
   140e0:	bl	19820 <flatcc_json_printer_uint32_struct_field@@Base>
   140e4:	ldr	r0, [pc, #52]	; 14120 <main@@Base+0xfa8>
   140e8:	add	r0, pc, r0
   140ec:	ldr	r1, [fp, #-12]
   140f0:	ldr	r2, [fp, #-16]
   140f4:	str	r0, [sp, #12]
   140f8:	mov	r0, r1
   140fc:	movw	r1, #1
   14100:	movw	r3, #4
   14104:	ldr	ip, [sp, #12]
   14108:	str	ip, [sp]
   1410c:	movw	lr, #8
   14110:	str	lr, [sp, #4]
   14114:	bl	19820 <flatcc_json_printer_uint32_struct_field@@Base>
   14118:	sub	sp, fp, #8
   1411c:	pop	{r4, sl, fp, pc}
   14120:	andeq	lr, r0, r3, lsl r7
   14124:	andeq	lr, r0, sl, asr #14
   14128:	sub	sp, sp, #8
   1412c:	str	r0, [sp, #4]
   14130:	str	r1, [sp]
   14134:	add	sp, sp, #8
   14138:	bx	lr
   1413c:	push	{fp, lr}
   14140:	mov	fp, sp
   14144:	sub	sp, sp, #24
   14148:	ldr	r2, [pc, #144]	; 141e0 <main@@Base+0x1068>
   1414c:	add	r3, pc, r2
   14150:	str	r0, [fp, #-4]
   14154:	str	r1, [fp, #-8]
   14158:	ldr	r0, [fp, #-4]
   1415c:	ldr	r1, [fp, #-8]
   14160:	movw	r2, #0
   14164:	str	r2, [sp, #12]
   14168:	movw	ip, #4
   1416c:	str	ip, [sp]
   14170:	ldr	ip, [sp, #12]
   14174:	str	ip, [sp, #4]
   14178:	bl	17a08 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   1417c:	ldr	r0, [pc, #88]	; 141dc <main@@Base+0x1064>
   14180:	add	r3, pc, r0
   14184:	ldr	r0, [fp, #-4]
   14188:	ldr	r1, [fp, #-8]
   1418c:	movw	r2, #1
   14190:	str	r2, [sp, #8]
   14194:	movw	ip, #7
   14198:	str	ip, [sp]
   1419c:	ldr	ip, [sp, #8]
   141a0:	str	ip, [sp, #4]
   141a4:	bl	17a08 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   141a8:	ldr	r0, [pc, #40]	; 141d8 <main@@Base+0x1060>
   141ac:	add	r3, pc, r0
   141b0:	ldr	r0, [fp, #-4]
   141b4:	ldr	r1, [fp, #-8]
   141b8:	movw	r2, #2
   141bc:	movw	ip, #6
   141c0:	str	ip, [sp]
   141c4:	movw	ip, #0
   141c8:	str	ip, [sp, #4]
   141cc:	bl	17a08 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   141d0:	mov	sp, fp
   141d4:	pop	{fp, pc}
   141d8:	andeq	lr, r0, r0, ror #12
   141dc:	andeq	lr, r0, r4, lsl #13
   141e0:			; <UNDEFINED> instruction: 0x0000e6bb
   141e4:	push	{fp, lr}
   141e8:	mov	fp, sp
   141ec:	sub	sp, sp, #40	; 0x28
   141f0:	ldr	r2, [pc, #260]	; 142fc <main@@Base+0x1184>
   141f4:	add	r3, pc, r2
   141f8:	ldr	r2, [pc, #256]	; 14300 <main@@Base+0x1188>
   141fc:	add	r2, pc, r2
   14200:	str	r0, [fp, #-4]
   14204:	str	r1, [fp, #-8]
   14208:	ldr	r0, [fp, #-4]
   1420c:	ldr	r1, [fp, #-8]
   14210:	movw	ip, #0
   14214:	str	r2, [fp, #-12]
   14218:	mov	r2, ip
   1421c:	movw	ip, #5
   14220:	str	ip, [sp]
   14224:	movw	ip, #2
   14228:	sxtb	ip, ip
   1422c:	str	ip, [sp, #4]
   14230:	ldr	ip, [fp, #-12]
   14234:	str	ip, [sp, #8]
   14238:	bl	19074 <flatcc_json_printer_int8_enum_field@@Base>
   1423c:	ldr	r0, [pc, #176]	; 142f4 <main@@Base+0x117c>
   14240:	add	r3, pc, r0
   14244:	ldr	r0, [pc, #172]	; 142f8 <main@@Base+0x1180>
   14248:	add	r0, pc, r0
   1424c:	ldr	r1, [fp, #-4]
   14250:	ldr	r2, [fp, #-8]
   14254:	str	r0, [fp, #-16]
   14258:	mov	r0, r1
   1425c:	mov	r1, r2
   14260:	movw	r2, #1
   14264:	movw	ip, #6
   14268:	str	ip, [sp]
   1426c:	movw	ip, #2
   14270:	sxtb	ip, ip
   14274:	str	ip, [sp, #4]
   14278:	ldr	ip, [fp, #-16]
   1427c:	str	ip, [sp, #8]
   14280:	bl	19074 <flatcc_json_printer_int8_enum_field@@Base>
   14284:	ldr	r0, [pc, #100]	; 142f0 <main@@Base+0x1178>
   14288:	add	r3, pc, r0
   1428c:	ldr	r0, [fp, #-4]
   14290:	ldr	r1, [fp, #-8]
   14294:	movw	r2, #2
   14298:	str	r2, [sp, #20]
   1429c:	ldr	ip, [sp, #20]
   142a0:	str	ip, [sp]
   142a4:	movw	lr, #2
   142a8:	and	lr, lr, #255	; 0xff
   142ac:	str	lr, [sp, #4]
   142b0:	bl	17d34 <flatcc_json_printer_uint8_field@@Base>
   142b4:	ldr	r0, [pc, #48]	; 142ec <main@@Base+0x1174>
   142b8:	add	r3, pc, r0
   142bc:	ldr	r0, [fp, #-4]
   142c0:	ldr	r1, [fp, #-8]
   142c4:	movw	r2, #3
   142c8:	str	r2, [sp, #16]
   142cc:	ldr	ip, [sp, #16]
   142d0:	str	ip, [sp]
   142d4:	movw	lr, #2
   142d8:	and	lr, lr, #255	; 0xff
   142dc:	str	lr, [sp, #4]
   142e0:	bl	17d34 <flatcc_json_printer_uint8_field@@Base>
   142e4:	mov	sp, fp
   142e8:	pop	{fp, pc}
   142ec:	ldrdeq	lr, [r0], -r0
   142f0:	strdeq	lr, [r0], -sp
   142f4:	andeq	lr, r0, lr, lsr r4
   142f8:			; <UNDEFINED> instruction: 0xfffffa1c
   142fc:	andeq	lr, r0, sp, lsr #5
   14300:			; <UNDEFINED> instruction: 0xfffffa68
   14304:	sub	sp, sp, #8
   14308:	str	r0, [sp, #4]
   1430c:	str	r1, [sp]
   14310:	add	sp, sp, #8
   14314:	bx	lr
   14318:	push	{fp, lr}
   1431c:	mov	fp, sp
   14320:	sub	sp, sp, #40	; 0x28
   14324:	ldr	r2, [pc, #224]	; 1440c <main@@Base+0x1294>
   14328:	add	r3, pc, r2
   1432c:	ldr	r2, [pc, #220]	; 14410 <main@@Base+0x1298>
   14330:	add	r2, pc, r2
   14334:	str	r0, [fp, #-4]
   14338:	str	r1, [fp, #-8]
   1433c:	ldr	r0, [fp, #-4]
   14340:	ldr	r1, [fp, #-8]
   14344:	movw	ip, #0
   14348:	str	r2, [fp, #-12]
   1434c:	mov	r2, ip
   14350:	movw	ip, #6
   14354:	str	ip, [sp]
   14358:	ldr	ip, [fp, #-12]
   1435c:	str	ip, [sp, #4]
   14360:	bl	1ed30 <flatcc_json_printer_table_field@@Base>
   14364:	ldr	r0, [pc, #152]	; 14404 <main@@Base+0x128c>
   14368:	add	r3, pc, r0
   1436c:	ldr	r0, [pc, #148]	; 14408 <main@@Base+0x1290>
   14370:	add	r0, pc, r0
   14374:	ldr	r1, [fp, #-4]
   14378:	ldr	r2, [fp, #-8]
   1437c:	str	r0, [fp, #-16]
   14380:	mov	r0, r1
   14384:	mov	r1, r2
   14388:	movw	r2, #1
   1438c:	movw	ip, #5
   14390:	str	ip, [sp]
   14394:	ldr	ip, [fp, #-16]
   14398:	str	ip, [sp, #4]
   1439c:	bl	1ed30 <flatcc_json_printer_table_field@@Base>
   143a0:	ldr	r0, [pc, #80]	; 143f8 <main@@Base+0x1280>
   143a4:	add	r3, pc, r0
   143a8:	ldr	r0, [pc, #76]	; 143fc <main@@Base+0x1284>
   143ac:	add	r0, pc, r0
   143b0:	ldr	r1, [pc, #72]	; 14400 <main@@Base+0x1288>
   143b4:	add	r1, pc, r1
   143b8:	ldr	r2, [fp, #-4]
   143bc:	ldr	ip, [fp, #-8]
   143c0:	str	r0, [sp, #20]
   143c4:	mov	r0, r2
   143c8:	str	r1, [sp, #16]
   143cc:	mov	r1, ip
   143d0:	movw	r2, #3
   143d4:	movw	ip, #7
   143d8:	str	ip, [sp]
   143dc:	ldr	ip, [sp, #20]
   143e0:	str	ip, [sp, #4]
   143e4:	ldr	lr, [sp, #16]
   143e8:	str	lr, [sp, #8]
   143ec:	bl	1e8c8 <flatcc_json_printer_union_vector_field@@Base>
   143f0:	mov	sp, fp
   143f4:	pop	{fp, pc}
   143f8:	strdeq	lr, [r0], -r5
   143fc:			; <UNDEFINED> instruction: 0xfffff9e8
   14400:			; <UNDEFINED> instruction: 0xfffffab8
   14404:	andeq	lr, r0, fp, lsr #6
   14408:	andeq	r0, r0, r0, lsl #3
   1440c:	andeq	lr, r0, r4, ror #6
   14410:	ldrdeq	r0, [r0], -ip
   14414:	push	{fp, lr}
   14418:	mov	fp, sp
   1441c:	sub	sp, sp, #32
   14420:	ldr	r2, [pc, #200]	; 144f0 <main@@Base+0x1378>
   14424:	add	r3, pc, r2
   14428:	ldr	r2, [pc, #196]	; 144f4 <main@@Base+0x137c>
   1442c:	add	r2, pc, r2
   14430:	str	r0, [fp, #-4]
   14434:	str	r1, [fp, #-8]
   14438:	ldr	r0, [fp, #-4]
   1443c:	ldr	r1, [fp, #-8]
   14440:	movw	ip, #0
   14444:	str	r2, [fp, #-12]
   14448:	mov	r2, ip
   1444c:	movw	ip, #21
   14450:	str	ip, [sp]
   14454:	ldr	ip, [fp, #-12]
   14458:	str	ip, [sp, #4]
   1445c:	bl	1ed30 <flatcc_json_printer_table_field@@Base>
   14460:	ldr	r0, [pc, #128]	; 144e8 <main@@Base+0x1370>
   14464:	add	r3, pc, r0
   14468:	ldr	r0, [pc, #124]	; 144ec <main@@Base+0x1374>
   1446c:	add	r0, pc, r0
   14470:	ldr	r1, [fp, #-4]
   14474:	ldr	r2, [fp, #-8]
   14478:	str	r0, [sp, #16]
   1447c:	mov	r0, r1
   14480:	mov	r1, r2
   14484:	movw	r2, #1
   14488:	movw	ip, #22
   1448c:	str	ip, [sp]
   14490:	ldr	ip, [sp, #16]
   14494:	str	ip, [sp, #4]
   14498:	bl	1ed30 <flatcc_json_printer_table_field@@Base>
   1449c:	ldr	r0, [pc, #60]	; 144e0 <main@@Base+0x1368>
   144a0:	add	r3, pc, r0
   144a4:	ldr	r0, [pc, #56]	; 144e4 <main@@Base+0x136c>
   144a8:	add	r0, pc, r0
   144ac:	ldr	r1, [fp, #-4]
   144b0:	ldr	r2, [fp, #-8]
   144b4:	str	r0, [sp, #12]
   144b8:	mov	r0, r1
   144bc:	mov	r1, r2
   144c0:	movw	r2, #2
   144c4:	movw	ip, #22
   144c8:	str	ip, [sp]
   144cc:	ldr	ip, [sp, #12]
   144d0:	str	ip, [sp, #4]
   144d4:	bl	1ed30 <flatcc_json_printer_table_field@@Base>
   144d8:	mov	sp, fp
   144dc:	pop	{fp, pc}
   144e0:	andeq	lr, r0, lr, lsr #4
   144e4:			; <UNDEFINED> instruction: 0x000004b0
   144e8:	andeq	lr, r0, r3, asr r2
   144ec:	andeq	r0, r0, r0, ror #8
   144f0:	andeq	lr, r0, sp, ror r2
   144f4:	andeq	r0, r0, r0, lsr #5
   144f8:	push	{fp, lr}
   144fc:	mov	fp, sp
   14500:	sub	sp, sp, #56	; 0x38
   14504:	ldr	r2, [pc, #444]	; 146c8 <main@@Base+0x1550>
   14508:	add	r3, pc, r2
   1450c:	ldr	r2, [pc, #440]	; 146cc <main@@Base+0x1554>
   14510:	add	r2, pc, r2
   14514:	ldr	ip, [pc, #436]	; 146d0 <main@@Base+0x1558>
   14518:	add	ip, pc, ip
   1451c:	str	r0, [fp, #-4]
   14520:	str	r1, [fp, #-8]
   14524:	ldr	r0, [fp, #-4]
   14528:	ldr	r1, [fp, #-8]
   1452c:	movw	lr, #1
   14530:	str	r2, [fp, #-12]
   14534:	mov	r2, lr
   14538:	movw	lr, #14
   1453c:	str	lr, [sp]
   14540:	ldr	lr, [fp, #-12]
   14544:	str	lr, [sp, #4]
   14548:	str	ip, [sp, #8]
   1454c:	bl	1edf8 <flatcc_json_printer_union_field@@Base>
   14550:	ldr	r0, [pc, #356]	; 146bc <main@@Base+0x1544>
   14554:	add	r3, pc, r0
   14558:	ldr	r0, [pc, #352]	; 146c0 <main@@Base+0x1548>
   1455c:	add	r0, pc, r0
   14560:	ldr	r1, [pc, #348]	; 146c4 <main@@Base+0x154c>
   14564:	add	r1, pc, r1
   14568:	ldr	r2, [fp, #-4]
   1456c:	ldr	ip, [fp, #-8]
   14570:	str	r0, [fp, #-16]
   14574:	mov	r0, r2
   14578:	str	r1, [fp, #-20]	; 0xffffffec
   1457c:	mov	r1, ip
   14580:	movw	r2, #3
   14584:	movw	ip, #10
   14588:	str	ip, [sp]
   1458c:	ldr	ip, [fp, #-16]
   14590:	str	ip, [sp, #4]
   14594:	ldr	lr, [fp, #-20]	; 0xffffffec
   14598:	str	lr, [sp, #8]
   1459c:	bl	1edf8 <flatcc_json_printer_union_field@@Base>
   145a0:	ldr	r0, [pc, #264]	; 146b0 <main@@Base+0x1538>
   145a4:	add	r3, pc, r0
   145a8:	ldr	r0, [pc, #260]	; 146b4 <main@@Base+0x153c>
   145ac:	add	r0, pc, r0
   145b0:	ldr	r1, [pc, #256]	; 146b8 <main@@Base+0x1540>
   145b4:	add	r1, pc, r1
   145b8:	ldr	r2, [fp, #-4]
   145bc:	ldr	ip, [fp, #-8]
   145c0:	str	r0, [fp, #-24]	; 0xffffffe8
   145c4:	mov	r0, r2
   145c8:	str	r1, [sp, #28]
   145cc:	mov	r1, ip
   145d0:	movw	r2, #5
   145d4:	movw	ip, #9
   145d8:	str	ip, [sp]
   145dc:	ldr	ip, [fp, #-24]	; 0xffffffe8
   145e0:	str	ip, [sp, #4]
   145e4:	ldr	lr, [sp, #28]
   145e8:	str	lr, [sp, #8]
   145ec:	bl	1edf8 <flatcc_json_printer_union_field@@Base>
   145f0:	ldr	r0, [pc, #172]	; 146a4 <main@@Base+0x152c>
   145f4:	add	r3, pc, r0
   145f8:	ldr	r0, [pc, #168]	; 146a8 <main@@Base+0x1530>
   145fc:	add	r0, pc, r0
   14600:	ldr	r1, [pc, #164]	; 146ac <main@@Base+0x1534>
   14604:	add	r1, pc, r1
   14608:	ldr	r2, [fp, #-4]
   1460c:	ldr	ip, [fp, #-8]
   14610:	str	r0, [sp, #24]
   14614:	mov	r0, r2
   14618:	str	r1, [sp, #20]
   1461c:	mov	r1, ip
   14620:	movw	r2, #7
   14624:	movw	ip, #5
   14628:	str	ip, [sp]
   1462c:	ldr	ip, [sp, #24]
   14630:	str	ip, [sp, #4]
   14634:	ldr	lr, [sp, #20]
   14638:	str	lr, [sp, #8]
   1463c:	bl	1edf8 <flatcc_json_printer_union_field@@Base>
   14640:	ldr	r0, [pc, #80]	; 14698 <main@@Base+0x1520>
   14644:	add	r3, pc, r0
   14648:	ldr	r0, [pc, #76]	; 1469c <main@@Base+0x1524>
   1464c:	add	r0, pc, r0
   14650:	ldr	r1, [pc, #72]	; 146a0 <main@@Base+0x1528>
   14654:	add	r1, pc, r1
   14658:	ldr	r2, [fp, #-4]
   1465c:	ldr	ip, [fp, #-8]
   14660:	str	r0, [sp, #16]
   14664:	mov	r0, r2
   14668:	str	r1, [sp, #12]
   1466c:	mov	r1, ip
   14670:	movw	r2, #9
   14674:	movw	ip, #10
   14678:	str	ip, [sp]
   1467c:	ldr	ip, [sp, #16]
   14680:	str	ip, [sp, #4]
   14684:	ldr	lr, [sp, #12]
   14688:	str	lr, [sp, #8]
   1468c:	bl	1e8c8 <flatcc_json_printer_union_vector_field@@Base>
   14690:	mov	sp, fp
   14694:	pop	{fp, pc}
   14698:	andeq	lr, r0, sl, asr #2
   1469c:	muleq	r0, r8, r3
   146a0:	ldrdeq	r0, [r0], -r4
   146a4:	muleq	r0, r4, r1
   146a8:	andeq	r0, r0, r8, ror #7
   146ac:	andeq	r0, r0, r4, lsr #10
   146b0:	ldrdeq	lr, [r0], -sl
   146b4:	andeq	r0, r0, r8, lsr r4
   146b8:	andeq	r0, r0, r4, ror r5
   146bc:	andeq	lr, r0, pc, lsl r2
   146c0:	andeq	r0, r0, r8, lsl #9
   146c4:	andeq	r0, r0, r4, asr #11
   146c8:	andeq	lr, r0, ip, asr r2
   146cc:	ldrdeq	r0, [r0], -r4
   146d0:	andeq	r0, r0, r0, lsl r6
   146d4:	push	{fp, lr}
   146d8:	mov	fp, sp
   146dc:	sub	sp, sp, #40	; 0x28
   146e0:	ldr	r2, [pc, #476]	; 148c4 <main@@Base+0x174c>
   146e4:	add	r3, pc, r2
   146e8:	str	r0, [fp, #-4]
   146ec:	str	r1, [fp, #-8]
   146f0:	ldr	r0, [fp, #-4]
   146f4:	ldr	r1, [fp, #-8]
   146f8:	movw	r2, #0
   146fc:	movw	ip, #4
   14700:	str	ip, [sp]
   14704:	bl	1777c <flatcc_json_printer_string_field@@Base>
   14708:	ldr	r0, [pc, #432]	; 148c0 <main@@Base+0x1748>
   1470c:	add	r3, pc, r0
   14710:	ldr	r0, [fp, #-4]
   14714:	ldr	r1, [fp, #-8]
   14718:	movw	r2, #1
   1471c:	movw	ip, #9
   14720:	str	ip, [sp]
   14724:	movw	ip, #0
   14728:	str	ip, [sp, #4]
   1472c:	bl	17f94 <flatcc_json_printer_uint32_field@@Base>
   14730:	ldr	r0, [pc, #388]	; 148bc <main@@Base+0x1744>
   14734:	add	r3, pc, r0
   14738:	ldr	r0, [fp, #-4]
   1473c:	ldr	r1, [fp, #-8]
   14740:	movw	r2, #2
   14744:	movw	ip, #4
   14748:	str	ip, [sp]
   1474c:	bl	1777c <flatcc_json_printer_string_field@@Base>
   14750:	ldr	r0, [pc, #352]	; 148b8 <main@@Base+0x1740>
   14754:	add	r0, pc, r0
   14758:	ldr	r1, [fp, #-4]
   1475c:	ldr	r2, [fp, #-8]
   14760:	mov	r3, sp
   14764:	mov	ip, #0
   14768:	str	ip, [r3, #12]
   1476c:	str	ip, [r3, #8]
   14770:	mov	ip, #8
   14774:	str	ip, [r3]
   14778:	ldr	r3, [pc, #328]	; 148c8 <main@@Base+0x1750>
   1477c:	add	r3, pc, r3
   14780:	mov	ip, #3
   14784:	str	r0, [fp, #-12]
   14788:	mov	r0, r1
   1478c:	mov	r1, r2
   14790:	mov	r2, ip
   14794:	bl	185ac <flatcc_json_printer_int64_field@@Base>
   14798:	ldr	r0, [pc, #276]	; 148b4 <main@@Base+0x173c>
   1479c:	add	r3, pc, r0
   147a0:	ldr	r0, [fp, #-4]
   147a4:	ldr	r1, [fp, #-8]
   147a8:	movw	r2, #4
   147ac:	str	r2, [fp, #-16]
   147b0:	ldr	ip, [fp, #-16]
   147b4:	str	ip, [sp]
   147b8:	bl	1777c <flatcc_json_printer_string_field@@Base>
   147bc:	ldr	r0, [pc, #236]	; 148b0 <main@@Base+0x1738>
   147c0:	add	r0, pc, r0
   147c4:	ldr	r1, [fp, #-4]
   147c8:	ldr	r2, [fp, #-8]
   147cc:	mov	r3, sp
   147d0:	mov	ip, #0
   147d4:	str	ip, [r3, #12]
   147d8:	str	ip, [r3, #8]
   147dc:	mov	ip, #8
   147e0:	str	ip, [r3]
   147e4:	ldr	r3, [pc, #224]	; 148cc <main@@Base+0x1754>
   147e8:	add	r3, pc, r3
   147ec:	mov	ip, #5
   147f0:	str	r0, [sp, #20]
   147f4:	mov	r0, r1
   147f8:	mov	r1, r2
   147fc:	mov	r2, ip
   14800:	bl	185ac <flatcc_json_printer_int64_field@@Base>
   14804:	ldr	r0, [pc, #160]	; 148ac <main@@Base+0x1734>
   14808:	add	r3, pc, r0
   1480c:	ldr	r0, [fp, #-4]
   14810:	ldr	r1, [fp, #-8]
   14814:	movw	r2, #6
   14818:	movw	ip, #9
   1481c:	str	ip, [sp]
   14820:	movw	ip, #0
   14824:	str	ip, [sp, #4]
   14828:	bl	17f94 <flatcc_json_printer_uint32_field@@Base>
   1482c:	ldr	r0, [pc, #116]	; 148a8 <main@@Base+0x1730>
   14830:	add	r0, pc, r0
   14834:	ldr	r1, [fp, #-4]
   14838:	ldr	r2, [fp, #-8]
   1483c:	mov	r3, sp
   14840:	mov	ip, #0
   14844:	str	ip, [r3, #12]
   14848:	str	ip, [r3, #8]
   1484c:	mov	ip, #8
   14850:	str	ip, [r3]
   14854:	ldr	r3, [pc, #116]	; 148d0 <main@@Base+0x1758>
   14858:	add	r3, pc, r3
   1485c:	mov	ip, #7
   14860:	str	r0, [sp, #16]
   14864:	mov	r0, r1
   14868:	mov	r1, r2
   1486c:	mov	r2, ip
   14870:	bl	185ac <flatcc_json_printer_int64_field@@Base>
   14874:	ldr	r0, [pc, #40]	; 148a4 <main@@Base+0x172c>
   14878:	add	r3, pc, r0
   1487c:	ldr	r0, [fp, #-4]
   14880:	ldr	r1, [fp, #-8]
   14884:	movw	r2, #8
   14888:	movw	ip, #9
   1488c:	str	ip, [sp]
   14890:	movw	ip, #0
   14894:	str	ip, [sp, #4]
   14898:	bl	17f94 <flatcc_json_printer_uint32_field@@Base>
   1489c:	mov	sp, fp
   148a0:	pop	{fp, pc}
   148a4:	andeq	sp, r0, fp, lsr #29
   148a8:	andeq	sp, r0, sl, ror #29
   148ac:	andeq	sp, r0, r8, lsl #30
   148b0:	andeq	sp, r0, r7, asr #30
   148b4:	andeq	sp, r0, r6, ror #30
   148b8:	andeq	sp, r0, r5, lsr #31
   148bc:	andeq	sp, r0, r0, asr #31
   148c0:	ldrdeq	sp, [r0], -lr
   148c4:	andeq	lr, r0, r1
   148c8:	andeq	sp, r0, sp, ror pc
   148cc:	andeq	sp, r0, pc, lsl pc
   148d0:	andeq	sp, r0, r2, asr #29
   148d4:	push	{fp, lr}
   148d8:	mov	fp, sp
   148dc:	sub	sp, sp, #32
   148e0:	ldr	r2, [pc, #112]	; 14958 <main@@Base+0x17e0>
   148e4:	add	r2, pc, r2
   148e8:	str	r0, [fp, #-4]
   148ec:	str	r1, [fp, #-8]
   148f0:	ldr	r0, [fp, #-4]
   148f4:	ldr	r1, [fp, #-8]
   148f8:	mov	r3, sp
   148fc:	mov	ip, #0
   14900:	str	ip, [r3, #12]
   14904:	str	ip, [r3, #8]
   14908:	mov	lr, #15
   1490c:	str	lr, [r3]
   14910:	ldr	r3, [pc, #68]	; 1495c <main@@Base+0x17e4>
   14914:	add	r3, pc, r3
   14918:	str	r2, [fp, #-12]
   1491c:	mov	r2, ip
   14920:	bl	185ac <flatcc_json_printer_int64_field@@Base>
   14924:	ldr	r0, [pc, #40]	; 14954 <main@@Base+0x17dc>
   14928:	add	r3, pc, r0
   1492c:	ldr	r0, [fp, #-4]
   14930:	ldr	r1, [fp, #-8]
   14934:	movw	r2, #1
   14938:	movw	ip, #16
   1493c:	str	ip, [sp]
   14940:	movw	ip, #0
   14944:	str	ip, [sp, #4]
   14948:	bl	17f94 <flatcc_json_printer_uint32_field@@Base>
   1494c:	mov	sp, fp
   14950:	pop	{fp, pc}
   14954:	andeq	sp, r0, r5, lsl lr
   14958:	andeq	sp, r0, r9, asr #28
   1495c:	andeq	sp, r0, r9, lsl lr
   14960:	push	{fp, lr}
   14964:	mov	fp, sp
   14968:	sub	sp, sp, #32
   1496c:	ldr	r2, [pc, #112]	; 149e4 <main@@Base+0x186c>
   14970:	add	r2, pc, r2
   14974:	str	r0, [fp, #-4]
   14978:	str	r1, [fp, #-8]
   1497c:	ldr	r0, [fp, #-4]
   14980:	ldr	r1, [fp, #-8]
   14984:	mov	r3, sp
   14988:	mov	ip, #0
   1498c:	str	ip, [r3, #12]
   14990:	str	ip, [r3, #8]
   14994:	mov	lr, #15
   14998:	str	lr, [r3]
   1499c:	ldr	r3, [pc, #68]	; 149e8 <main@@Base+0x1870>
   149a0:	add	r3, pc, r3
   149a4:	str	r2, [fp, #-12]
   149a8:	mov	r2, ip
   149ac:	bl	185ac <flatcc_json_printer_int64_field@@Base>
   149b0:	ldr	r0, [pc, #40]	; 149e0 <main@@Base+0x1868>
   149b4:	add	r3, pc, r0
   149b8:	ldr	r0, [fp, #-4]
   149bc:	ldr	r1, [fp, #-8]
   149c0:	movw	r2, #1
   149c4:	movw	ip, #21
   149c8:	str	ip, [sp]
   149cc:	movw	ip, #0
   149d0:	str	ip, [sp, #4]
   149d4:	bl	17f94 <flatcc_json_printer_uint32_field@@Base>
   149d8:	mov	sp, fp
   149dc:	pop	{fp, pc}
   149e0:	muleq	r0, sl, sp
   149e4:			; <UNDEFINED> instruction: 0x0000ddbd
   149e8:	andeq	sp, r0, sp, lsl #27
   149ec:	push	{fp, lr}
   149f0:	mov	fp, sp
   149f4:	sub	sp, sp, #16
   149f8:	str	r0, [fp, #-4]
   149fc:	strb	r1, [fp, #-5]
   14a00:	ldrb	r0, [fp, #-5]
   14a04:	mov	r1, r0
   14a08:	cmp	r0, #2
   14a0c:	str	r1, [sp, #4]
   14a10:	beq	14a68 <main@@Base+0x18f0>
   14a14:	b	14a18 <main@@Base+0x18a0>
   14a18:	ldr	r0, [sp, #4]
   14a1c:	cmp	r0, #8
   14a20:	beq	14a80 <main@@Base+0x1908>
   14a24:	b	14a28 <main@@Base+0x18b0>
   14a28:	ldr	r0, [sp, #4]
   14a2c:	cmp	r0, #9
   14a30:	beq	14a98 <main@@Base+0x1920>
   14a34:	b	14a38 <main@@Base+0x18c0>
   14a38:	ldr	r0, [sp, #4]
   14a3c:	cmp	r0, #10
   14a40:	beq	14ab0 <main@@Base+0x1938>
   14a44:	b	14a48 <main@@Base+0x18d0>
   14a48:	ldr	r0, [sp, #4]
   14a4c:	cmp	r0, #11
   14a50:	beq	14ac8 <main@@Base+0x1950>
   14a54:	b	14a58 <main@@Base+0x18e0>
   14a58:	ldr	r0, [sp, #4]
   14a5c:	cmp	r0, #255	; 0xff
   14a60:	beq	14ae0 <main@@Base+0x1968>
   14a64:	b	14af8 <main@@Base+0x1980>
   14a68:	ldr	r0, [pc, #184]	; 14b28 <main@@Base+0x19b0>
   14a6c:	add	r1, pc, r0
   14a70:	ldr	r0, [fp, #-4]
   14a74:	movw	r2, #5
   14a78:	bl	17578 <flatcc_json_printer_enum@@Base>
   14a7c:	b	14b0c <main@@Base+0x1994>
   14a80:	ldr	r0, [pc, #156]	; 14b24 <main@@Base+0x19ac>
   14a84:	add	r1, pc, r0
   14a88:	ldr	r0, [fp, #-4]
   14a8c:	movw	r2, #8
   14a90:	bl	17578 <flatcc_json_printer_enum@@Base>
   14a94:	b	14b0c <main@@Base+0x1994>
   14a98:	ldr	r0, [pc, #128]	; 14b20 <main@@Base+0x19a8>
   14a9c:	add	r1, pc, r0
   14aa0:	ldr	r0, [fp, #-4]
   14aa4:	movw	r2, #5
   14aa8:	bl	17578 <flatcc_json_printer_enum@@Base>
   14aac:	b	14b0c <main@@Base+0x1994>
   14ab0:	ldr	r0, [pc, #100]	; 14b1c <main@@Base+0x19a4>
   14ab4:	add	r1, pc, r0
   14ab8:	ldr	r0, [fp, #-4]
   14abc:	movw	r2, #7
   14ac0:	bl	17578 <flatcc_json_printer_enum@@Base>
   14ac4:	b	14b0c <main@@Base+0x1994>
   14ac8:	ldr	r0, [pc, #72]	; 14b18 <main@@Base+0x19a0>
   14acc:	add	r1, pc, r0
   14ad0:	ldr	r0, [fp, #-4]
   14ad4:	movw	r2, #5
   14ad8:	bl	17578 <flatcc_json_printer_enum@@Base>
   14adc:	b	14b0c <main@@Base+0x1994>
   14ae0:	ldr	r0, [pc, #44]	; 14b14 <main@@Base+0x199c>
   14ae4:	add	r1, pc, r0
   14ae8:	ldr	r0, [fp, #-4]
   14aec:	movw	r2, #6
   14af0:	bl	17578 <flatcc_json_printer_enum@@Base>
   14af4:	b	14b0c <main@@Base+0x1994>
   14af8:	ldr	r0, [pc, #44]	; 14b2c <main@@Base+0x19b4>
   14afc:	add	r1, pc, r0
   14b00:	ldr	r0, [fp, #-4]
   14b04:	movw	r2, #4
   14b08:	bl	17578 <flatcc_json_printer_enum@@Base>
   14b0c:	mov	sp, fp
   14b10:	pop	{fp, pc}
   14b14:	ldrdeq	sp, [r0], -r8
   14b18:	andeq	sp, r0, sl, ror #25
   14b1c:	strdeq	sp, [r0], -sl
   14b20:	andeq	sp, r0, ip, lsl #26
   14b24:	andeq	sp, r0, fp, lsl sp
   14b28:	andeq	sp, r0, sp, lsr #26
   14b2c:	andeq	sp, r0, sp, ror fp
   14b30:	push	{fp, lr}
   14b34:	mov	fp, sp
   14b38:	sub	sp, sp, #16
   14b3c:	str	r0, [fp, #-4]
   14b40:	str	r1, [sp, #8]
   14b44:	ldr	r0, [sp, #8]
   14b48:	ldrb	r0, [r0, #8]
   14b4c:	mov	r1, r0
   14b50:	cmp	r0, #2
   14b54:	str	r1, [sp, #4]
   14b58:	beq	14bb0 <main@@Base+0x1a38>
   14b5c:	b	14b60 <main@@Base+0x19e8>
   14b60:	ldr	r0, [sp, #4]
   14b64:	cmp	r0, #8
   14b68:	beq	14bc8 <main@@Base+0x1a50>
   14b6c:	b	14b70 <main@@Base+0x19f8>
   14b70:	ldr	r0, [sp, #4]
   14b74:	cmp	r0, #9
   14b78:	beq	14be0 <main@@Base+0x1a68>
   14b7c:	b	14b80 <main@@Base+0x1a08>
   14b80:	ldr	r0, [sp, #4]
   14b84:	cmp	r0, #10
   14b88:	beq	14bf8 <main@@Base+0x1a80>
   14b8c:	b	14b90 <main@@Base+0x1a18>
   14b90:	ldr	r0, [sp, #4]
   14b94:	cmp	r0, #11
   14b98:	beq	14c10 <main@@Base+0x1a98>
   14b9c:	b	14ba0 <main@@Base+0x1a28>
   14ba0:	ldr	r0, [sp, #4]
   14ba4:	cmp	r0, #255	; 0xff
   14ba8:	beq	14c20 <main@@Base+0x1aa8>
   14bac:	b	14c30 <main@@Base+0x1ab8>
   14bb0:	ldr	r0, [pc, #144]	; 14c48 <main@@Base+0x1ad0>
   14bb4:	add	r2, pc, r0
   14bb8:	ldr	r0, [fp, #-4]
   14bbc:	ldr	r1, [sp, #8]
   14bc0:	bl	1f10c <flatcc_json_printer_union_table@@Base>
   14bc4:	b	14c34 <main@@Base+0x1abc>
   14bc8:	ldr	r0, [pc, #116]	; 14c44 <main@@Base+0x1acc>
   14bcc:	add	r2, pc, r0
   14bd0:	ldr	r0, [fp, #-4]
   14bd4:	ldr	r1, [sp, #8]
   14bd8:	bl	1f164 <flatcc_json_printer_union_struct@@Base>
   14bdc:	b	14c34 <main@@Base+0x1abc>
   14be0:	ldr	r0, [pc, #88]	; 14c40 <main@@Base+0x1ac8>
   14be4:	add	r2, pc, r0
   14be8:	ldr	r0, [fp, #-4]
   14bec:	ldr	r1, [sp, #8]
   14bf0:	bl	1f164 <flatcc_json_printer_union_struct@@Base>
   14bf4:	b	14c34 <main@@Base+0x1abc>
   14bf8:	ldr	r0, [pc, #60]	; 14c3c <main@@Base+0x1ac4>
   14bfc:	add	r2, pc, r0
   14c00:	ldr	r0, [fp, #-4]
   14c04:	ldr	r1, [sp, #8]
   14c08:	bl	1f164 <flatcc_json_printer_union_struct@@Base>
   14c0c:	b	14c34 <main@@Base+0x1abc>
   14c10:	ldr	r0, [fp, #-4]
   14c14:	ldr	r1, [sp, #8]
   14c18:	bl	1f240 <flatcc_json_printer_union_string@@Base>
   14c1c:	b	14c34 <main@@Base+0x1abc>
   14c20:	ldr	r0, [fp, #-4]
   14c24:	ldr	r1, [sp, #8]
   14c28:	bl	1f240 <flatcc_json_printer_union_string@@Base>
   14c2c:	b	14c34 <main@@Base+0x1abc>
   14c30:	b	14c34 <main@@Base+0x1abc>
   14c34:	mov	sp, fp
   14c38:	pop	{fp, pc}
   14c3c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   14c40:	andeq	r0, r0, r8, lsl #2
   14c44:	andeq	r0, r0, r4, asr #1
   14c48:	muleq	r0, r0, r0
   14c4c:	push	{fp, lr}
   14c50:	mov	fp, sp
   14c54:	sub	sp, sp, #24
   14c58:	ldr	r2, [pc, #52]	; 14c94 <main@@Base+0x1b1c>
   14c5c:	add	r3, pc, r2
   14c60:	str	r0, [fp, #-4]
   14c64:	str	r1, [fp, #-8]
   14c68:	ldr	r0, [fp, #-4]
   14c6c:	ldr	r1, [fp, #-8]
   14c70:	movw	r2, #0
   14c74:	str	r2, [sp, #12]
   14c78:	movw	ip, #19
   14c7c:	str	ip, [sp]
   14c80:	ldr	ip, [sp, #12]
   14c84:	str	ip, [sp, #4]
   14c88:	bl	18484 <flatcc_json_printer_int32_field@@Base>
   14c8c:	mov	sp, fp
   14c90:	pop	{fp, pc}
   14c94:	andeq	sp, r0, r7, ror #22
   14c98:	push	{r4, sl, fp, lr}
   14c9c:	add	fp, sp, #8
   14ca0:	sub	sp, sp, #24
   14ca4:	ldr	r2, [pc, #68]	; 14cf0 <main@@Base+0x1b78>
   14ca8:	add	r2, pc, r2
   14cac:	str	r0, [fp, #-12]
   14cb0:	str	r1, [sp, #16]
   14cb4:	ldr	r0, [fp, #-12]
   14cb8:	ldr	r1, [sp, #16]
   14cbc:	movw	r3, #0
   14cc0:	str	r1, [sp, #12]
   14cc4:	mov	r1, r3
   14cc8:	ldr	ip, [sp, #12]
   14ccc:	str	r2, [sp, #8]
   14cd0:	mov	r2, ip
   14cd4:	ldr	lr, [sp, #8]
   14cd8:	str	lr, [sp]
   14cdc:	movw	r4, #11
   14ce0:	str	r4, [sp, #4]
   14ce4:	bl	19780 <flatcc_json_printer_uint16_struct_field@@Base>
   14ce8:	sub	sp, fp, #8
   14cec:	pop	{r4, sl, fp, pc}
   14cf0:	andeq	sp, r0, pc, lsr #22
   14cf4:	push	{r4, sl, fp, lr}
   14cf8:	add	fp, sp, #8
   14cfc:	sub	sp, sp, #24
   14d00:	ldr	r2, [pc, #68]	; 14d4c <main@@Base+0x1bd4>
   14d04:	add	r2, pc, r2
   14d08:	str	r0, [fp, #-12]
   14d0c:	str	r1, [sp, #16]
   14d10:	ldr	r0, [fp, #-12]
   14d14:	ldr	r1, [sp, #16]
   14d18:	movw	r3, #0
   14d1c:	str	r1, [sp, #12]
   14d20:	mov	r1, r3
   14d24:	ldr	ip, [sp, #12]
   14d28:	str	r2, [sp, #8]
   14d2c:	mov	r2, ip
   14d30:	ldr	lr, [sp, #8]
   14d34:	str	lr, [sp]
   14d38:	movw	r4, #10
   14d3c:	str	r4, [sp, #4]
   14d40:	bl	19aa0 <flatcc_json_printer_int32_struct_field@@Base>
   14d44:	sub	sp, fp, #8
   14d48:	pop	{r4, sl, fp, pc}
   14d4c:	ldrdeq	sp, [r0], -pc	; <UNPREDICTABLE>
   14d50:	sub	sp, sp, #4
   14d54:	str	r0, [sp]
   14d58:	ldr	r0, [sp]
   14d5c:	ldr	r0, [r0, #12]
   14d60:	ldr	r1, [sp]
   14d64:	ldr	r1, [r1, #20]
   14d68:	ldr	r2, [sp]
   14d6c:	ldr	r2, [r2]
   14d70:	sub	r1, r1, r2
   14d74:	add	r0, r0, r1
   14d78:	add	sp, sp, #4
   14d7c:	bx	lr

00014d80 <flatcc_json_printer_error_string@@Base>:
   14d80:	sub	sp, sp, #12
   14d84:	str	r0, [sp, #4]
   14d88:	ldr	r0, [sp, #4]
   14d8c:	cmp	r0, #3
   14d90:	str	r0, [sp]
   14d94:	bhi	14df8 <flatcc_json_printer_error_string@@Base+0x78>
   14d98:	add	r0, pc, #8
   14d9c:	ldr	r1, [sp]
   14da0:	ldr	r2, [r0, r1, lsl #2]
   14da4:	add	pc, r0, r2
   14da8:	andeq	r0, r0, r0, lsl r0
   14dac:	andeq	r0, r0, r0, lsr #32
   14db0:	andeq	r0, r0, r0, lsr r0
   14db4:	andeq	r0, r0, r0, asr #32
   14db8:	ldr	r0, [pc, #92]	; 14e1c <flatcc_json_printer_error_string@@Base+0x9c>
   14dbc:	add	r0, pc, r0
   14dc0:	str	r0, [sp, #8]
   14dc4:	b	14e04 <flatcc_json_printer_error_string@@Base+0x84>
   14dc8:	ldr	r0, [pc, #72]	; 14e18 <flatcc_json_printer_error_string@@Base+0x98>
   14dcc:	add	r0, pc, r0
   14dd0:	str	r0, [sp, #8]
   14dd4:	b	14e04 <flatcc_json_printer_error_string@@Base+0x84>
   14dd8:	ldr	r0, [pc, #52]	; 14e14 <flatcc_json_printer_error_string@@Base+0x94>
   14ddc:	add	r0, pc, r0
   14de0:	str	r0, [sp, #8]
   14de4:	b	14e04 <flatcc_json_printer_error_string@@Base+0x84>
   14de8:	ldr	r0, [pc, #32]	; 14e10 <flatcc_json_printer_error_string@@Base+0x90>
   14dec:	add	r0, pc, r0
   14df0:	str	r0, [sp, #8]
   14df4:	b	14e04 <flatcc_json_printer_error_string@@Base+0x84>
   14df8:	ldr	r0, [pc, #32]	; 14e20 <flatcc_json_printer_error_string@@Base+0xa0>
   14dfc:	add	r0, pc, r0
   14e00:	str	r0, [sp, #8]
   14e04:	ldr	r0, [sp, #8]
   14e08:	add	sp, sp, #12
   14e0c:	bx	lr
   14e10:	andeq	sp, r0, r3, ror #22
   14e14:	andeq	sp, r0, r4, ror #22
   14e18:	andeq	sp, r0, sl, ror #22
   14e1c:	andeq	sp, r0, r7, ror fp
   14e20:	andeq	sp, r0, ip, asr fp

00014e24 <flatcc_json_printer_fmt_float@@Base>:
   14e24:	push	{fp, lr}
   14e28:	mov	fp, sp
   14e2c:	sub	sp, sp, #8
   14e30:	str	r0, [sp, #4]
   14e34:	vstr	s0, [sp]
   14e38:	vldr	s0, [sp]
   14e3c:	vcvt.f64.f32	d0, s0
   14e40:	ldr	r0, [sp, #4]
   14e44:	bl	14e50 <flatcc_json_printer_fmt_float@@Base+0x2c>
   14e48:	mov	sp, fp
   14e4c:	pop	{fp, pc}
   14e50:	push	{fp, lr}
   14e54:	mov	fp, sp
   14e58:	sub	sp, sp, #80	; 0x50
   14e5c:	vstr	d0, [fp, #-16]
   14e60:	str	r0, [fp, #-20]	; 0xffffffec
   14e64:	vldr	d0, [fp, #-16]
   14e68:	bl	20350 <flatcc_json_printer_clear@@Base+0x5c>
   14e6c:	str	r1, [sp, #36]	; 0x24
   14e70:	str	r0, [sp, #32]
   14e74:	ldr	r0, [fp, #-20]	; 0xffffffec
   14e78:	str	r0, [sp, #28]
   14e7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14e80:	movw	r1, #0
   14e84:	cmp	r0, r1
   14e88:	beq	14e90 <flatcc_json_printer_fmt_float@@Base+0x6c>
   14e8c:	b	14eb0 <flatcc_json_printer_fmt_float@@Base+0x8c>
   14e90:	ldr	r0, [pc, #1312]	; 153b8 <flatcc_json_printer_fmt_float@@Base+0x594>
   14e94:	add	r0, pc, r0
   14e98:	ldr	r1, [pc, #1308]	; 153bc <flatcc_json_printer_fmt_float@@Base+0x598>
   14e9c:	add	r1, pc, r1
   14ea0:	ldr	r2, [pc, #1304]	; 153c0 <flatcc_json_printer_fmt_float@@Base+0x59c>
   14ea4:	add	r3, pc, r2
   14ea8:	movw	r2, #189	; 0xbd
   14eac:	bl	12984 <__assert_fail@plt>
   14eb0:	ldr	r0, [sp, #32]
   14eb4:	ldr	r1, [sp, #36]	; 0x24
   14eb8:	lsl	r1, r1, #1
   14ebc:	orr	r1, r1, r0, lsr #31
   14ec0:	mov	r2, #1
   14ec4:	rsbs	r0, r2, r0, lsl #1
   14ec8:	movw	r2, #0
   14ecc:	movt	r2, #65504	; 0xffe0
   14ed0:	sbcs	r1, r1, r2
   14ed4:	str	r0, [sp, #24]
   14ed8:	str	r1, [sp, #20]
   14edc:	bcc	14f04 <flatcc_json_printer_fmt_float@@Base+0xe0>
   14ee0:	b	14ee4 <flatcc_json_printer_fmt_float@@Base+0xc0>
   14ee4:	ldr	r0, [pc, #1244]	; 153c8 <flatcc_json_printer_fmt_float@@Base+0x5a4>
   14ee8:	add	r1, pc, r0
   14eec:	ldr	r0, [fp, #-20]	; 0xffffffec
   14ef0:	ldr	r3, [sp, #32]
   14ef4:	ldr	r2, [sp, #36]	; 0x24
   14ef8:	bl	12960 <sprintf@plt>
   14efc:	str	r0, [fp, #-4]
   14f00:	b	153ac <flatcc_json_printer_fmt_float@@Base+0x588>
   14f04:	ldrb	r0, [sp, #39]	; 0x27
   14f08:	tst	r0, #128	; 0x80
   14f0c:	beq	14f40 <flatcc_json_printer_fmt_float@@Base+0x11c>
   14f10:	b	14f14 <flatcc_json_printer_fmt_float@@Base+0xf0>
   14f14:	ldr	r0, [sp, #28]
   14f18:	add	r1, r0, #1
   14f1c:	str	r1, [sp, #28]
   14f20:	mov	r1, #45	; 0x2d
   14f24:	strb	r1, [r0]
   14f28:	vldr	d16, [fp, #-16]
   14f2c:	vneg.f64	d16, d16
   14f30:	vstr	d16, [fp, #-16]
   14f34:	ldr	r0, [sp, #36]	; 0x24
   14f38:	eor	r0, r0, #-2147483648	; 0x80000000
   14f3c:	str	r0, [sp, #36]	; 0x24
   14f40:	ldr	r0, [sp, #32]
   14f44:	ldr	r1, [sp, #36]	; 0x24
   14f48:	orr	r0, r0, r1
   14f4c:	cmp	r0, #0
   14f50:	bne	14f8c <flatcc_json_printer_fmt_float@@Base+0x168>
   14f54:	b	14f58 <flatcc_json_printer_fmt_float@@Base+0x134>
   14f58:	ldr	r0, [sp, #28]
   14f5c:	add	r1, r0, #1
   14f60:	str	r1, [sp, #28]
   14f64:	movw	r1, #48	; 0x30
   14f68:	strb	r1, [r0]
   14f6c:	ldr	r0, [sp, #28]
   14f70:	movw	r1, #0
   14f74:	strb	r1, [r0]
   14f78:	ldr	r0, [sp, #28]
   14f7c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14f80:	sub	r0, r0, r1
   14f84:	str	r0, [fp, #-4]
   14f88:	b	153ac <flatcc_json_printer_fmt_float@@Base+0x588>
   14f8c:	ldr	r0, [sp, #32]
   14f90:	ldr	r1, [sp, #36]	; 0x24
   14f94:	movw	r2, #0
   14f98:	movt	r2, #32752	; 0x7ff0
   14f9c:	eor	r1, r1, r2
   14fa0:	orr	r0, r0, r1
   14fa4:	cmp	r0, #0
   14fa8:	bne	1500c <flatcc_json_printer_fmt_float@@Base+0x1e8>
   14fac:	b	14fb0 <flatcc_json_printer_fmt_float@@Base+0x18c>
   14fb0:	ldr	r0, [sp, #28]
   14fb4:	add	r1, r0, #1
   14fb8:	str	r1, [sp, #28]
   14fbc:	movw	r1, #105	; 0x69
   14fc0:	strb	r1, [r0]
   14fc4:	ldr	r0, [sp, #28]
   14fc8:	add	r1, r0, #1
   14fcc:	str	r1, [sp, #28]
   14fd0:	movw	r1, #110	; 0x6e
   14fd4:	strb	r1, [r0]
   14fd8:	ldr	r0, [sp, #28]
   14fdc:	add	r1, r0, #1
   14fe0:	str	r1, [sp, #28]
   14fe4:	movw	r1, #102	; 0x66
   14fe8:	strb	r1, [r0]
   14fec:	ldr	r0, [sp, #28]
   14ff0:	movw	r1, #0
   14ff4:	strb	r1, [r0]
   14ff8:	ldr	r0, [sp, #28]
   14ffc:	ldr	r1, [fp, #-20]	; 0xffffffec
   15000:	sub	r0, r0, r1
   15004:	str	r0, [fp, #-4]
   15008:	b	153ac <flatcc_json_printer_fmt_float@@Base+0x588>
   1500c:	vldr	d0, [fp, #-16]
   15010:	ldr	r0, [sp, #28]
   15014:	sub	r1, fp, #28
   15018:	sub	r2, fp, #24
   1501c:	bl	20370 <flatcc_json_printer_clear@@Base+0x7c>
   15020:	str	r0, [fp, #-32]	; 0xffffffe0
   15024:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15028:	cmp	r0, #0
   1502c:	bne	15060 <flatcc_json_printer_fmt_float@@Base+0x23c>
   15030:	ldr	r0, [pc, #908]	; 153c4 <flatcc_json_printer_fmt_float@@Base+0x5a0>
   15034:	add	r1, pc, r0
   15038:	ldr	r0, [sp, #28]
   1503c:	vldr	d16, [fp, #-16]
   15040:	vmov	r2, r3, d16
   15044:	bl	12960 <sprintf@plt>
   15048:	ldr	r1, [sp, #28]
   1504c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15050:	sub	r1, r1, r2
   15054:	add	r0, r0, r1
   15058:	str	r0, [fp, #-4]
   1505c:	b	153ac <flatcc_json_printer_fmt_float@@Base+0x588>
   15060:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15064:	movw	r1, #0
   15068:	sub	r0, r1, r0
   1506c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15070:	sub	r1, r1, #1
   15074:	movw	r2, #1
   15078:	cmp	r2, r1
   1507c:	str	r0, [sp, #16]
   15080:	blt	15090 <flatcc_json_printer_fmt_float@@Base+0x26c>
   15084:	movw	r0, #1
   15088:	str	r0, [sp, #12]
   1508c:	b	1509c <flatcc_json_printer_fmt_float@@Base+0x278>
   15090:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15094:	sub	r0, r0, #1
   15098:	str	r0, [sp, #12]
   1509c:	ldr	r0, [sp, #12]
   150a0:	ldr	r1, [sp, #16]
   150a4:	cmp	r1, r0
   150a8:	bgt	150c0 <flatcc_json_printer_fmt_float@@Base+0x29c>
   150ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   150b0:	movw	r1, #0
   150b4:	sub	r0, r1, r0
   150b8:	str	r0, [sp, #8]
   150bc:	b	150f4 <flatcc_json_printer_fmt_float@@Base+0x2d0>
   150c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   150c4:	sub	r0, r0, #1
   150c8:	movw	r1, #1
   150cc:	cmp	r1, r0
   150d0:	blt	150e0 <flatcc_json_printer_fmt_float@@Base+0x2bc>
   150d4:	movw	r0, #1
   150d8:	str	r0, [sp, #4]
   150dc:	b	150ec <flatcc_json_printer_fmt_float@@Base+0x2c8>
   150e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   150e4:	sub	r0, r0, #1
   150e8:	str	r0, [sp, #4]
   150ec:	ldr	r0, [sp, #4]
   150f0:	str	r0, [sp, #8]
   150f4:	ldr	r0, [sp, #8]
   150f8:	str	r0, [fp, #-36]	; 0xffffffdc
   150fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15100:	cmp	r0, #0
   15104:	bge	151dc <flatcc_json_printer_fmt_float@@Base+0x3b8>
   15108:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1510c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15110:	add	r0, r0, r1
   15114:	cmn	r0, #3
   15118:	ble	151dc <flatcc_json_printer_fmt_float@@Base+0x3b8>
   1511c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15120:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15124:	movw	r2, #0
   15128:	sub	r1, r2, r1
   1512c:	cmp	r0, r1
   15130:	bgt	151dc <flatcc_json_printer_fmt_float@@Base+0x3b8>
   15134:	ldr	r0, [sp, #28]
   15138:	add	r0, r0, #2
   1513c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15140:	movw	r2, #0
   15144:	sub	r1, r2, r1
   15148:	add	r0, r0, r1
   1514c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15150:	sub	r1, r2, r1
   15154:	add	r0, r0, r1
   15158:	ldr	r1, [sp, #28]
   1515c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15160:	bl	12894 <memmove@plt>
   15164:	ldr	r0, [sp, #28]
   15168:	movw	r1, #48	; 0x30
   1516c:	strb	r1, [r0]
   15170:	ldr	r0, [sp, #28]
   15174:	movw	r1, #46	; 0x2e
   15178:	strb	r1, [r0, #1]
   1517c:	movw	r0, #2
   15180:	str	r0, [sp, #40]	; 0x28
   15184:	ldr	r0, [sp, #40]	; 0x28
   15188:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1518c:	movw	r2, #2
   15190:	sub	r1, r2, r1
   15194:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15198:	sub	r1, r1, r2
   1519c:	cmp	r0, r1
   151a0:	bge	151c8 <flatcc_json_printer_fmt_float@@Base+0x3a4>
   151a4:	ldr	r0, [sp, #28]
   151a8:	ldr	r1, [sp, #40]	; 0x28
   151ac:	add	r0, r0, r1
   151b0:	movw	r1, #48	; 0x30
   151b4:	strb	r1, [r0]
   151b8:	ldr	r0, [sp, #40]	; 0x28
   151bc:	add	r0, r0, #1
   151c0:	str	r0, [sp, #40]	; 0x28
   151c4:	b	15184 <flatcc_json_printer_fmt_float@@Base+0x360>
   151c8:	ldr	r0, [sp, #40]	; 0x28
   151cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   151d0:	add	r0, r1, r0
   151d4:	str	r0, [fp, #-28]	; 0xffffffe4
   151d8:	b	15380 <flatcc_json_printer_fmt_float@@Base+0x55c>
   151dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   151e0:	cmp	r0, #0
   151e4:	bge	152d0 <flatcc_json_printer_fmt_float@@Base+0x4ac>
   151e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   151ec:	cmp	r0, #1
   151f0:	ble	152d0 <flatcc_json_printer_fmt_float@@Base+0x4ac>
   151f4:	movw	r0, #0
   151f8:	str	r0, [sp, #40]	; 0x28
   151fc:	ldr	r0, [sp, #40]	; 0x28
   15200:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15204:	cmp	r0, r1
   15208:	bge	15250 <flatcc_json_printer_fmt_float@@Base+0x42c>
   1520c:	ldr	r0, [sp, #28]
   15210:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15214:	ldr	r2, [sp, #40]	; 0x28
   15218:	sub	r1, r1, r2
   1521c:	sub	r1, r1, #1
   15220:	add	r0, r0, r1
   15224:	ldrb	r0, [r0]
   15228:	ldr	r1, [sp, #28]
   1522c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15230:	ldr	r3, [sp, #40]	; 0x28
   15234:	sub	r2, r2, r3
   15238:	add	r1, r1, r2
   1523c:	strb	r0, [r1]
   15240:	ldr	r0, [sp, #40]	; 0x28
   15244:	add	r0, r0, #1
   15248:	str	r0, [sp, #40]	; 0x28
   1524c:	b	151fc <flatcc_json_printer_fmt_float@@Base+0x3d8>
   15250:	ldr	r0, [sp, #28]
   15254:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15258:	add	r2, r1, #1
   1525c:	str	r2, [fp, #-28]	; 0xffffffe4
   15260:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15264:	sub	r1, r1, r2
   15268:	add	r0, r0, r1
   1526c:	movw	r1, #46	; 0x2e
   15270:	strb	r1, [r0]
   15274:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15278:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1527c:	add	r0, r1, r0
   15280:	str	r0, [fp, #-24]	; 0xffffffe8
   15284:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15288:	cmp	r0, #0
   1528c:	beq	152cc <flatcc_json_printer_fmt_float@@Base+0x4a8>
   15290:	ldr	r0, [sp, #28]
   15294:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15298:	add	r2, r1, #1
   1529c:	str	r2, [fp, #-28]	; 0xffffffe4
   152a0:	add	r0, r0, r1
   152a4:	movw	r1, #101	; 0x65
   152a8:	strb	r1, [r0]
   152ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   152b0:	ldr	r1, [sp, #28]
   152b4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   152b8:	add	r1, r1, r2
   152bc:	bl	2073c <flatcc_json_printer_clear@@Base+0x448>
   152c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   152c4:	add	r0, r1, r0
   152c8:	str	r0, [fp, #-28]	; 0xffffffe4
   152cc:	b	1537c <flatcc_json_printer_fmt_float@@Base+0x558>
   152d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   152d4:	cmp	r0, #0
   152d8:	blt	152e8 <flatcc_json_printer_fmt_float@@Base+0x4c4>
   152dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   152e0:	cmp	r0, #2
   152e4:	ble	15328 <flatcc_json_printer_fmt_float@@Base+0x504>
   152e8:	ldr	r0, [sp, #28]
   152ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   152f0:	add	r2, r1, #1
   152f4:	str	r2, [fp, #-28]	; 0xffffffe4
   152f8:	add	r0, r0, r1
   152fc:	movw	r1, #101	; 0x65
   15300:	strb	r1, [r0]
   15304:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15308:	ldr	r1, [sp, #28]
   1530c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15310:	add	r1, r1, r2
   15314:	bl	2073c <flatcc_json_printer_clear@@Base+0x448>
   15318:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1531c:	add	r0, r1, r0
   15320:	str	r0, [fp, #-28]	; 0xffffffe4
   15324:	b	15378 <flatcc_json_printer_fmt_float@@Base+0x554>
   15328:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1532c:	cmp	r0, #0
   15330:	ble	15374 <flatcc_json_printer_fmt_float@@Base+0x550>
   15334:	b	15338 <flatcc_json_printer_fmt_float@@Base+0x514>
   15338:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1533c:	mvn	r1, #0
   15340:	add	r1, r0, r1
   15344:	str	r1, [fp, #-24]	; 0xffffffe8
   15348:	cmp	r0, #0
   1534c:	ble	15370 <flatcc_json_printer_fmt_float@@Base+0x54c>
   15350:	ldr	r0, [sp, #28]
   15354:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15358:	add	r2, r1, #1
   1535c:	str	r2, [fp, #-28]	; 0xffffffe4
   15360:	add	r0, r0, r1
   15364:	movw	r1, #48	; 0x30
   15368:	strb	r1, [r0]
   1536c:	b	15338 <flatcc_json_printer_fmt_float@@Base+0x514>
   15370:	b	15374 <flatcc_json_printer_fmt_float@@Base+0x550>
   15374:	b	15378 <flatcc_json_printer_fmt_float@@Base+0x554>
   15378:	b	1537c <flatcc_json_printer_fmt_float@@Base+0x558>
   1537c:	b	15380 <flatcc_json_printer_fmt_float@@Base+0x55c>
   15380:	ldr	r0, [sp, #28]
   15384:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15388:	add	r0, r0, r1
   1538c:	movw	r1, #0
   15390:	strb	r1, [r0]
   15394:	ldr	r0, [sp, #28]
   15398:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1539c:	add	r0, r0, r1
   153a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   153a4:	sub	r0, r0, r1
   153a8:	str	r0, [fp, #-4]
   153ac:	ldr	r0, [fp, #-4]
   153b0:	mov	sp, fp
   153b4:	pop	{fp, pc}
   153b8:	andeq	sp, r0, r1, lsl sp
   153bc:	andeq	sp, r0, sp, lsl #26
   153c0:	andeq	sp, r0, r3, ror sp
   153c4:	andeq	sp, r0, r9, lsl ip
   153c8:	andeq	sp, r0, r7, asr sp

000153cc <flatcc_json_printer_fmt_double@@Base>:
   153cc:	push	{fp, lr}
   153d0:	mov	fp, sp
   153d4:	sub	sp, sp, #16
   153d8:	str	r0, [fp, #-4]
   153dc:	vstr	d0, [sp]
   153e0:	vldr	d0, [sp]
   153e4:	ldr	r0, [fp, #-4]
   153e8:	bl	14e50 <flatcc_json_printer_fmt_float@@Base+0x2c>
   153ec:	mov	sp, fp
   153f0:	pop	{fp, pc}

000153f4 <flatcc_json_printer_fmt_bool@@Base>:
   153f4:	sub	sp, sp, #12
   153f8:	str	r0, [sp, #4]
   153fc:	str	r1, [sp]
   15400:	ldr	r0, [sp]
   15404:	cmp	r0, #0
   15408:	beq	15444 <flatcc_json_printer_fmt_bool@@Base+0x50>
   1540c:	ldr	r0, [pc, #124]	; 15490 <flatcc_json_printer_fmt_bool@@Base+0x9c>
   15410:	add	r0, pc, r0
   15414:	ldr	r1, [sp, #4]
   15418:	ldrb	r2, [r0]
   1541c:	strb	r2, [r1]
   15420:	ldrb	r2, [r0, #1]
   15424:	strb	r2, [r1, #1]
   15428:	ldrb	r2, [r0, #2]
   1542c:	strb	r2, [r1, #2]
   15430:	ldrb	r0, [r0, #3]
   15434:	strb	r0, [r1, #3]
   15438:	movw	r0, #4
   1543c:	str	r0, [sp, #8]
   15440:	b	15480 <flatcc_json_printer_fmt_bool@@Base+0x8c>
   15444:	ldr	r0, [pc, #64]	; 1548c <flatcc_json_printer_fmt_bool@@Base+0x98>
   15448:	add	r0, pc, r0
   1544c:	ldr	r1, [sp, #4]
   15450:	ldrb	r2, [r0]
   15454:	strb	r2, [r1]
   15458:	ldrb	r2, [r0, #1]
   1545c:	strb	r2, [r1, #1]
   15460:	ldrb	r2, [r0, #2]
   15464:	strb	r2, [r1, #2]
   15468:	ldrb	r2, [r0, #3]
   1546c:	strb	r2, [r1, #3]
   15470:	ldrb	r0, [r0, #4]
   15474:	strb	r0, [r1, #4]
   15478:	movw	r0, #5
   1547c:	str	r0, [sp, #8]
   15480:	ldr	r0, [sp, #8]
   15484:	add	sp, sp, #12
   15488:	bx	lr
   1548c:	andeq	sp, r0, sp, lsl r5
   15490:	andeq	sp, r0, r0, asr r5

00015494 <flatcc_json_printer_string@@Base>:
   15494:	push	{fp, lr}
   15498:	mov	fp, sp
   1549c:	sub	sp, sp, #16
   154a0:	str	r0, [fp, #-4]
   154a4:	str	r1, [sp, #8]
   154a8:	str	r2, [sp, #4]
   154ac:	ldr	r0, [fp, #-4]
   154b0:	ldr	r1, [sp, #8]
   154b4:	ldr	r2, [sp, #4]
   154b8:	bl	154c4 <flatcc_json_printer_string@@Base+0x30>
   154bc:	mov	sp, fp
   154c0:	pop	{fp, pc}
   154c4:	push	{fp, lr}
   154c8:	mov	fp, sp
   154cc:	sub	sp, sp, #32
   154d0:	str	r0, [fp, #-4]
   154d4:	str	r1, [fp, #-8]
   154d8:	str	r2, [fp, #-12]
   154dc:	ldr	r0, [fp, #-8]
   154e0:	str	r0, [sp, #16]
   154e4:	ldr	r0, [fp, #-4]
   154e8:	ldr	r1, [r0, #20]
   154ec:	add	r2, r1, #1
   154f0:	str	r2, [r0, #20]
   154f4:	movw	r0, #34	; 0x22
   154f8:	strb	r0, [r1]
   154fc:	ldr	r0, [sp, #16]
   15500:	ldrb	r0, [r0]
   15504:	strb	r0, [sp, #15]
   15508:	ldrb	r0, [sp, #15]
   1550c:	cmp	r0, #32
   15510:	movw	r0, #0
   15514:	str	r0, [sp, #4]
   15518:	blt	15544 <flatcc_json_printer_string@@Base+0xb0>
   1551c:	ldrb	r0, [sp, #15]
   15520:	cmp	r0, #34	; 0x22
   15524:	movw	r0, #0
   15528:	str	r0, [sp, #4]
   1552c:	beq	15544 <flatcc_json_printer_string@@Base+0xb0>
   15530:	ldrb	r0, [sp, #15]
   15534:	cmp	r0, #92	; 0x5c
   15538:	movw	r0, #0
   1553c:	movne	r0, #1
   15540:	str	r0, [sp, #4]
   15544:	ldr	r0, [sp, #4]
   15548:	tst	r0, #1
   1554c:	beq	15568 <flatcc_json_printer_string@@Base+0xd4>
   15550:	ldr	r0, [sp, #16]
   15554:	add	r1, r0, #1
   15558:	str	r1, [sp, #16]
   1555c:	ldrb	r0, [r0, #1]
   15560:	strb	r0, [sp, #15]
   15564:	b	15508 <flatcc_json_printer_string@@Base+0x74>
   15568:	ldr	r0, [sp, #16]
   1556c:	ldr	r1, [fp, #-8]
   15570:	sub	r0, r0, r1
   15574:	str	r0, [sp, #8]
   15578:	ldr	r0, [fp, #-4]
   1557c:	ldr	r1, [fp, #-8]
   15580:	ldr	r2, [sp, #8]
   15584:	bl	15864 <flatcc_json_printer_write@@Base+0x30>
   15588:	ldr	r0, [sp, #8]
   1558c:	ldr	r1, [fp, #-12]
   15590:	sub	r0, r1, r0
   15594:	str	r0, [fp, #-12]
   15598:	ldr	r0, [fp, #-12]
   1559c:	cmp	r0, #0
   155a0:	bne	155a8 <flatcc_json_printer_string@@Base+0x114>
   155a4:	b	15814 <flatcc_json_printer_string@@Base+0x380>
   155a8:	ldr	r0, [sp, #8]
   155ac:	ldr	r1, [fp, #-8]
   155b0:	add	r0, r1, r0
   155b4:	str	r0, [fp, #-8]
   155b8:	ldr	r0, [fp, #-4]
   155bc:	ldr	r1, [r0, #20]
   155c0:	add	r2, r1, #1
   155c4:	str	r2, [r0, #20]
   155c8:	mov	r0, #92	; 0x5c
   155cc:	strb	r0, [r1]
   155d0:	ldrb	r0, [sp, #15]
   155d4:	mov	r1, r0
   155d8:	cmp	r0, #8
   155dc:	str	r1, [sp]
   155e0:	beq	156f0 <flatcc_json_printer_string@@Base+0x25c>
   155e4:	b	155e8 <flatcc_json_printer_string@@Base+0x154>
   155e8:	ldr	r0, [sp]
   155ec:	cmp	r0, #9
   155f0:	beq	15680 <flatcc_json_printer_string@@Base+0x1ec>
   155f4:	b	155f8 <flatcc_json_printer_string@@Base+0x164>
   155f8:	ldr	r0, [sp]
   155fc:	cmp	r0, #10
   15600:	beq	156d4 <flatcc_json_printer_string@@Base+0x240>
   15604:	b	15608 <flatcc_json_printer_string@@Base+0x174>
   15608:	ldr	r0, [sp]
   1560c:	cmp	r0, #12
   15610:	beq	1569c <flatcc_json_printer_string@@Base+0x208>
   15614:	b	15618 <flatcc_json_printer_string@@Base+0x184>
   15618:	ldr	r0, [sp]
   1561c:	cmp	r0, #13
   15620:	beq	156b8 <flatcc_json_printer_string@@Base+0x224>
   15624:	b	15628 <flatcc_json_printer_string@@Base+0x194>
   15628:	ldr	r0, [sp]
   1562c:	cmp	r0, #34	; 0x22
   15630:	beq	15648 <flatcc_json_printer_string@@Base+0x1b4>
   15634:	b	15638 <flatcc_json_printer_string@@Base+0x1a4>
   15638:	ldr	r0, [sp]
   1563c:	cmp	r0, #92	; 0x5c
   15640:	beq	15664 <flatcc_json_printer_string@@Base+0x1d0>
   15644:	b	1570c <flatcc_json_printer_string@@Base+0x278>
   15648:	ldr	r0, [fp, #-4]
   1564c:	ldr	r1, [r0, #20]
   15650:	add	r2, r1, #1
   15654:	str	r2, [r0, #20]
   15658:	movw	r0, #34	; 0x22
   1565c:	strb	r0, [r1]
   15660:	b	157e8 <flatcc_json_printer_string@@Base+0x354>
   15664:	ldr	r0, [fp, #-4]
   15668:	ldr	r1, [r0, #20]
   1566c:	add	r2, r1, #1
   15670:	str	r2, [r0, #20]
   15674:	movw	r0, #92	; 0x5c
   15678:	strb	r0, [r1]
   1567c:	b	157e8 <flatcc_json_printer_string@@Base+0x354>
   15680:	ldr	r0, [fp, #-4]
   15684:	ldr	r1, [r0, #20]
   15688:	add	r2, r1, #1
   1568c:	str	r2, [r0, #20]
   15690:	movw	r0, #116	; 0x74
   15694:	strb	r0, [r1]
   15698:	b	157e8 <flatcc_json_printer_string@@Base+0x354>
   1569c:	ldr	r0, [fp, #-4]
   156a0:	ldr	r1, [r0, #20]
   156a4:	add	r2, r1, #1
   156a8:	str	r2, [r0, #20]
   156ac:	movw	r0, #102	; 0x66
   156b0:	strb	r0, [r1]
   156b4:	b	157e8 <flatcc_json_printer_string@@Base+0x354>
   156b8:	ldr	r0, [fp, #-4]
   156bc:	ldr	r1, [r0, #20]
   156c0:	add	r2, r1, #1
   156c4:	str	r2, [r0, #20]
   156c8:	movw	r0, #114	; 0x72
   156cc:	strb	r0, [r1]
   156d0:	b	157e8 <flatcc_json_printer_string@@Base+0x354>
   156d4:	ldr	r0, [fp, #-4]
   156d8:	ldr	r1, [r0, #20]
   156dc:	add	r2, r1, #1
   156e0:	str	r2, [r0, #20]
   156e4:	movw	r0, #110	; 0x6e
   156e8:	strb	r0, [r1]
   156ec:	b	157e8 <flatcc_json_printer_string@@Base+0x354>
   156f0:	ldr	r0, [fp, #-4]
   156f4:	ldr	r1, [r0, #20]
   156f8:	add	r2, r1, #1
   156fc:	str	r2, [r0, #20]
   15700:	movw	r0, #98	; 0x62
   15704:	strb	r0, [r1]
   15708:	b	157e8 <flatcc_json_printer_string@@Base+0x354>
   1570c:	ldr	r0, [fp, #-4]
   15710:	ldr	r1, [r0, #20]
   15714:	add	r2, r1, #1
   15718:	str	r2, [r0, #20]
   1571c:	movw	r0, #117	; 0x75
   15720:	strb	r0, [r1]
   15724:	ldr	r0, [fp, #-4]
   15728:	ldr	r1, [r0, #20]
   1572c:	add	r2, r1, #1
   15730:	str	r2, [r0, #20]
   15734:	movw	r0, #48	; 0x30
   15738:	strb	r0, [r1]
   1573c:	ldr	r1, [fp, #-4]
   15740:	ldr	r2, [r1, #20]
   15744:	add	r3, r2, #1
   15748:	str	r3, [r1, #20]
   1574c:	strb	r0, [r2]
   15750:	ldrb	r0, [sp, #15]
   15754:	asr	r0, r0, #4
   15758:	strb	r0, [sp, #14]
   1575c:	ldrb	r0, [sp, #14]
   15760:	cmp	r0, #10
   15764:	movw	r0, #0
   15768:	movlt	r0, #1
   1576c:	tst	r0, #1
   15770:	movw	r0, #48	; 0x30
   15774:	mov	r1, r0
   15778:	moveq	r1, #87	; 0x57
   1577c:	ldrb	r2, [sp, #14]
   15780:	add	r1, r2, r1
   15784:	strb	r1, [sp, #14]
   15788:	ldrb	r1, [sp, #14]
   1578c:	ldr	r2, [fp, #-4]
   15790:	ldr	r3, [r2, #20]
   15794:	add	ip, r3, #1
   15798:	str	ip, [r2, #20]
   1579c:	strb	r1, [r3]
   157a0:	ldrb	r1, [sp, #15]
   157a4:	and	r1, r1, #15
   157a8:	strb	r1, [sp, #14]
   157ac:	ldrb	r1, [sp, #14]
   157b0:	cmp	r1, #10
   157b4:	movw	r1, #0
   157b8:	movlt	r1, #1
   157bc:	tst	r1, #1
   157c0:	moveq	r0, #87	; 0x57
   157c4:	ldrb	r1, [sp, #14]
   157c8:	add	r0, r1, r0
   157cc:	strb	r0, [sp, #14]
   157d0:	ldrb	r0, [sp, #14]
   157d4:	ldr	r1, [fp, #-4]
   157d8:	ldr	r2, [r1, #20]
   157dc:	add	r3, r2, #1
   157e0:	str	r3, [r1, #20]
   157e4:	strb	r0, [r2]
   157e8:	ldr	r0, [sp, #16]
   157ec:	add	r0, r0, #1
   157f0:	str	r0, [sp, #16]
   157f4:	ldr	r0, [fp, #-12]
   157f8:	mvn	r1, #0
   157fc:	add	r0, r0, r1
   15800:	str	r0, [fp, #-12]
   15804:	ldr	r0, [fp, #-8]
   15808:	add	r0, r0, #1
   1580c:	str	r0, [fp, #-8]
   15810:	b	154fc <flatcc_json_printer_string@@Base+0x68>
   15814:	ldr	r0, [fp, #-4]
   15818:	ldr	r1, [r0, #20]
   1581c:	add	r2, r1, #1
   15820:	str	r2, [r0, #20]
   15824:	movw	r0, #34	; 0x22
   15828:	strb	r0, [r1]
   1582c:	mov	sp, fp
   15830:	pop	{fp, pc}

00015834 <flatcc_json_printer_write@@Base>:
   15834:	push	{fp, lr}
   15838:	mov	fp, sp
   1583c:	sub	sp, sp, #16
   15840:	str	r0, [fp, #-4]
   15844:	str	r1, [sp, #8]
   15848:	str	r2, [sp, #4]
   1584c:	ldr	r0, [fp, #-4]
   15850:	ldr	r1, [sp, #8]
   15854:	ldr	r2, [sp, #4]
   15858:	bl	15864 <flatcc_json_printer_write@@Base+0x30>
   1585c:	mov	sp, fp
   15860:	pop	{fp, pc}
   15864:	push	{fp, lr}
   15868:	mov	fp, sp
   1586c:	sub	sp, sp, #16
   15870:	str	r0, [fp, #-4]
   15874:	str	r1, [sp, #8]
   15878:	str	r2, [sp, #4]
   1587c:	ldr	r0, [fp, #-4]
   15880:	ldr	r0, [r0, #20]
   15884:	ldr	r1, [sp, #4]
   15888:	add	r0, r0, r1
   1588c:	ldr	r1, [fp, #-4]
   15890:	ldr	r1, [r1, #16]
   15894:	cmp	r0, r1
   15898:	bcc	158b0 <flatcc_json_printer_write@@Base+0x7c>
   1589c:	ldr	r0, [fp, #-4]
   158a0:	ldr	r1, [sp, #8]
   158a4:	ldr	r2, [sp, #4]
   158a8:	bl	217ec <flatcc_json_printer_clear@@Base+0x14f8>
   158ac:	b	158d8 <flatcc_json_printer_write@@Base+0xa4>
   158b0:	ldr	r0, [fp, #-4]
   158b4:	ldr	r0, [r0, #20]
   158b8:	ldr	r1, [sp, #8]
   158bc:	ldr	r2, [sp, #4]
   158c0:	bl	128ac <memcpy@plt>
   158c4:	ldr	r0, [sp, #4]
   158c8:	ldr	r1, [fp, #-4]
   158cc:	ldr	r2, [r1, #20]
   158d0:	add	r0, r2, r0
   158d4:	str	r0, [r1, #20]
   158d8:	mov	sp, fp
   158dc:	pop	{fp, pc}

000158e0 <flatcc_json_printer_nl@@Base>:
   158e0:	push	{fp, lr}
   158e4:	mov	fp, sp
   158e8:	sub	sp, sp, #8
   158ec:	str	r0, [sp, #4]
   158f0:	ldr	r0, [sp, #4]
   158f4:	ldr	r1, [r0, #20]
   158f8:	add	r2, r1, #1
   158fc:	str	r2, [r0, #20]
   15900:	movw	r0, #10
   15904:	strb	r0, [r1]
   15908:	ldr	r0, [sp, #4]
   1590c:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   15910:	mov	sp, fp
   15914:	pop	{fp, pc}
   15918:	push	{fp, lr}
   1591c:	mov	fp, sp
   15920:	sub	sp, sp, #8
   15924:	str	r0, [sp, #4]
   15928:	ldr	r0, [sp, #4]
   1592c:	ldr	r0, [r0, #20]
   15930:	ldr	r1, [sp, #4]
   15934:	ldr	r1, [r1, #16]
   15938:	cmp	r0, r1
   1593c:	bcc	15960 <flatcc_json_printer_nl@@Base+0x80>
   15940:	ldr	r0, [sp, #4]
   15944:	ldr	r0, [r0, #44]	; 0x2c
   15948:	ldr	r1, [sp, #4]
   1594c:	str	r0, [sp]
   15950:	mov	r0, r1
   15954:	movw	r1, #0
   15958:	ldr	r2, [sp]
   1595c:	blx	r2
   15960:	mov	sp, fp
   15964:	pop	{fp, pc}

00015968 <flatcc_json_printer_char@@Base>:
   15968:	sub	sp, sp, #8
   1596c:	str	r0, [sp, #4]
   15970:	strb	r1, [sp, #3]
   15974:	ldrb	r0, [sp, #3]
   15978:	ldr	r1, [sp, #4]
   1597c:	ldr	r2, [r1, #20]
   15980:	add	r3, r2, #1
   15984:	str	r3, [r1, #20]
   15988:	strb	r0, [r2]
   1598c:	add	sp, sp, #8
   15990:	bx	lr

00015994 <flatcc_json_printer_indent@@Base>:
   15994:	push	{fp, lr}
   15998:	mov	fp, sp
   1599c:	sub	sp, sp, #8
   159a0:	str	r0, [sp, #4]
   159a4:	ldr	r0, [sp, #4]
   159a8:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   159ac:	mov	sp, fp
   159b0:	pop	{fp, pc}
   159b4:	push	{fp, lr}
   159b8:	mov	fp, sp
   159bc:	sub	sp, sp, #8
   159c0:	str	r0, [sp, #4]
   159c4:	ldr	r0, [sp, #4]
   159c8:	ldr	r0, [r0, #32]
   159cc:	ldr	r1, [sp, #4]
   159d0:	ldrb	r1, [r1, #25]
   159d4:	mul	r0, r0, r1
   159d8:	str	r0, [sp]
   159dc:	ldr	r0, [sp, #4]
   159e0:	ldr	r0, [r0, #20]
   159e4:	ldr	r1, [sp]
   159e8:	add	r0, r0, r1
   159ec:	ldr	r1, [sp, #4]
   159f0:	ldr	r1, [r1, #16]
   159f4:	cmp	r0, r1
   159f8:	bls	15a0c <flatcc_json_printer_indent@@Base+0x78>
   159fc:	ldr	r0, [sp, #4]
   15a00:	ldr	r1, [sp]
   15a04:	bl	21918 <flatcc_json_printer_clear@@Base+0x1624>
   15a08:	b	15a38 <flatcc_json_printer_indent@@Base+0xa4>
   15a0c:	ldr	r0, [sp, #4]
   15a10:	ldr	r0, [r0, #20]
   15a14:	ldr	r2, [sp]
   15a18:	movw	r1, #32
   15a1c:	and	r1, r1, #255	; 0xff
   15a20:	bl	1293c <memset@plt>
   15a24:	ldr	r0, [sp]
   15a28:	ldr	r1, [sp, #4]
   15a2c:	ldr	r2, [r1, #20]
   15a30:	add	r0, r2, r0
   15a34:	str	r0, [r1, #20]
   15a38:	mov	sp, fp
   15a3c:	pop	{fp, pc}

00015a40 <flatcc_json_printer_add_level@@Base>:
   15a40:	sub	sp, sp, #8
   15a44:	str	r0, [sp, #4]
   15a48:	str	r1, [sp]
   15a4c:	ldr	r0, [sp]
   15a50:	ldr	r1, [sp, #4]
   15a54:	ldr	r2, [r1, #32]
   15a58:	add	r0, r2, r0
   15a5c:	str	r0, [r1, #32]
   15a60:	add	sp, sp, #8
   15a64:	bx	lr

00015a68 <flatcc_json_printer_get_level@@Base>:
   15a68:	sub	sp, sp, #4
   15a6c:	str	r0, [sp]
   15a70:	ldr	r0, [sp]
   15a74:	ldr	r0, [r0, #32]
   15a78:	add	sp, sp, #4
   15a7c:	bx	lr

00015a80 <flatcc_json_printer_uint8@@Base>:
   15a80:	push	{fp, lr}
   15a84:	mov	fp, sp
   15a88:	sub	sp, sp, #8
   15a8c:	str	r0, [sp, #4]
   15a90:	strb	r1, [sp, #3]
   15a94:	ldrb	r0, [sp, #3]
   15a98:	ldr	r1, [sp, #4]
   15a9c:	ldr	r1, [r1, #20]
   15aa0:	and	r0, r0, #255	; 0xff
   15aa4:	bl	15ac0 <flatcc_json_printer_uint8@@Base+0x40>
   15aa8:	ldr	r1, [sp, #4]
   15aac:	ldr	lr, [r1, #20]
   15ab0:	add	r0, lr, r0
   15ab4:	str	r0, [r1, #20]
   15ab8:	mov	sp, fp
   15abc:	pop	{fp, pc}
   15ac0:	sub	sp, sp, #24
   15ac4:	strb	r0, [sp, #19]
   15ac8:	str	r1, [sp, #12]
   15acc:	ldrb	r0, [sp, #19]
   15ad0:	cmp	r0, #100	; 0x64
   15ad4:	blt	15b84 <flatcc_json_printer_uint8@@Base+0x104>
   15ad8:	ldr	r0, [pc, #376]	; 15c58 <flatcc_json_printer_uint8@@Base+0x1d8>
   15adc:	add	r0, pc, r0
   15ae0:	ldr	r1, [sp, #12]
   15ae4:	add	r1, r1, #3
   15ae8:	str	r1, [sp, #12]
   15aec:	ldr	r1, [sp, #12]
   15af0:	mov	r2, #0
   15af4:	strb	r2, [r1]
   15af8:	ldr	r1, [sp, #12]
   15afc:	sub	r1, r1, #2
   15b00:	str	r1, [sp, #12]
   15b04:	ldrb	r1, [sp, #19]
   15b08:	movw	r2, #34079	; 0x851f
   15b0c:	movt	r2, #20971	; 0x51eb
   15b10:	umull	r2, r3, r1, r2
   15b14:	lsr	r3, r3, #5
   15b18:	mov	ip, #100	; 0x64
   15b1c:	mls	r1, r3, ip, r1
   15b20:	lsl	r1, r1, #1
   15b24:	add	r0, r0, r1
   15b28:	str	r0, [sp, #8]
   15b2c:	ldrb	r0, [sp, #19]
   15b30:	movw	r1, #100	; 0x64
   15b34:	sdiv	r0, r0, r1
   15b38:	strb	r0, [sp, #19]
   15b3c:	ldr	r0, [sp, #8]
   15b40:	ldrb	r0, [r0]
   15b44:	ldr	r1, [sp, #12]
   15b48:	strb	r0, [r1]
   15b4c:	ldr	r0, [sp, #8]
   15b50:	ldrb	r0, [r0, #1]
   15b54:	ldr	r1, [sp, #12]
   15b58:	strb	r0, [r1, #1]
   15b5c:	ldrb	r0, [sp, #19]
   15b60:	add	r0, r0, #48	; 0x30
   15b64:	ldr	r1, [sp, #12]
   15b68:	mvn	r3, #0
   15b6c:	add	r1, r1, r3
   15b70:	strb	r0, [r1]
   15b74:	movw	r0, #3
   15b78:	str	r0, [sp, #20]
   15b7c:	str	r2, [sp, #4]
   15b80:	b	15c48 <flatcc_json_printer_uint8@@Base+0x1c8>
   15b84:	ldrb	r0, [sp, #19]
   15b88:	cmp	r0, #10
   15b8c:	blt	15c24 <flatcc_json_printer_uint8@@Base+0x1a4>
   15b90:	ldr	r0, [pc, #188]	; 15c54 <flatcc_json_printer_uint8@@Base+0x1d4>
   15b94:	add	r0, pc, r0
   15b98:	ldr	r1, [sp, #12]
   15b9c:	add	r1, r1, #2
   15ba0:	str	r1, [sp, #12]
   15ba4:	ldr	r1, [sp, #12]
   15ba8:	mov	r2, #0
   15bac:	strb	r2, [r1]
   15bb0:	ldr	r1, [sp, #12]
   15bb4:	sub	r1, r1, #2
   15bb8:	str	r1, [sp, #12]
   15bbc:	ldrb	r1, [sp, #19]
   15bc0:	movw	r2, #34079	; 0x851f
   15bc4:	movt	r2, #20971	; 0x51eb
   15bc8:	umull	r2, r3, r1, r2
   15bcc:	lsr	r3, r3, #5
   15bd0:	mov	ip, #100	; 0x64
   15bd4:	mls	r1, r3, ip, r1
   15bd8:	lsl	r1, r1, #1
   15bdc:	add	r0, r0, r1
   15be0:	str	r0, [sp, #8]
   15be4:	ldrb	r0, [sp, #19]
   15be8:	movw	r1, #100	; 0x64
   15bec:	sdiv	r0, r0, r1
   15bf0:	strb	r0, [sp, #19]
   15bf4:	ldr	r0, [sp, #8]
   15bf8:	ldrb	r0, [r0]
   15bfc:	ldr	r1, [sp, #12]
   15c00:	strb	r0, [r1]
   15c04:	ldr	r0, [sp, #8]
   15c08:	ldrb	r0, [r0, #1]
   15c0c:	ldr	r1, [sp, #12]
   15c10:	strb	r0, [r1, #1]
   15c14:	movw	r0, #2
   15c18:	str	r0, [sp, #20]
   15c1c:	str	r2, [sp]
   15c20:	b	15c48 <flatcc_json_printer_uint8@@Base+0x1c8>
   15c24:	ldr	r0, [sp, #12]
   15c28:	movw	r1, #0
   15c2c:	strb	r1, [r0, #1]
   15c30:	ldrb	r0, [sp, #19]
   15c34:	add	r0, r0, #48	; 0x30
   15c38:	ldr	r1, [sp, #12]
   15c3c:	strb	r0, [r1]
   15c40:	movw	r0, #1
   15c44:	str	r0, [sp, #20]
   15c48:	ldr	r0, [sp, #20]
   15c4c:	add	sp, sp, #24
   15c50:	bx	lr
   15c54:	andeq	sp, r0, r0, lsr #18
   15c58:	ldrdeq	sp, [r0], -r8

00015c5c <flatcc_json_printer_uint16@@Base>:
   15c5c:	push	{fp, lr}
   15c60:	mov	fp, sp
   15c64:	sub	sp, sp, #8
   15c68:	str	r0, [sp, #4]
   15c6c:	strh	r1, [sp, #2]
   15c70:	ldrh	r0, [sp, #2]
   15c74:	ldr	r1, [sp, #4]
   15c78:	ldr	r1, [r1, #20]
   15c7c:	uxth	r0, r0
   15c80:	bl	15c9c <flatcc_json_printer_uint16@@Base+0x40>
   15c84:	ldr	r1, [sp, #4]
   15c88:	ldr	lr, [r1, #20]
   15c8c:	add	r0, lr, r0
   15c90:	str	r0, [r1, #20]
   15c94:	mov	sp, fp
   15c98:	pop	{fp, pc}
   15c9c:	sub	sp, sp, #40	; 0x28
   15ca0:	strh	r0, [sp, #38]	; 0x26
   15ca4:	str	r1, [sp, #32]
   15ca8:	movw	r0, #0
   15cac:	str	r0, [sp, #28]
   15cb0:	ldrh	r0, [sp, #38]	; 0x26
   15cb4:	cmp	r0, #1000	; 0x3e8
   15cb8:	blt	15ce4 <flatcc_json_printer_uint16@@Base+0x88>
   15cbc:	ldrh	r0, [sp, #38]	; 0x26
   15cc0:	movw	r1, #10000	; 0x2710
   15cc4:	cmp	r0, r1
   15cc8:	blt	15cd8 <flatcc_json_printer_uint16@@Base+0x7c>
   15ccc:	movw	r0, #5
   15cd0:	str	r0, [sp, #28]
   15cd4:	b	15ce0 <flatcc_json_printer_uint16@@Base+0x84>
   15cd8:	movw	r0, #4
   15cdc:	str	r0, [sp, #28]
   15ce0:	b	15d24 <flatcc_json_printer_uint16@@Base+0xc8>
   15ce4:	ldrh	r0, [sp, #38]	; 0x26
   15ce8:	cmp	r0, #100	; 0x64
   15cec:	blt	15cfc <flatcc_json_printer_uint16@@Base+0xa0>
   15cf0:	movw	r0, #3
   15cf4:	str	r0, [sp, #28]
   15cf8:	b	15d20 <flatcc_json_printer_uint16@@Base+0xc4>
   15cfc:	ldrh	r0, [sp, #38]	; 0x26
   15d00:	cmp	r0, #10
   15d04:	blt	15d14 <flatcc_json_printer_uint16@@Base+0xb8>
   15d08:	movw	r0, #2
   15d0c:	str	r0, [sp, #28]
   15d10:	b	15d1c <flatcc_json_printer_uint16@@Base+0xc0>
   15d14:	movw	r0, #1
   15d18:	str	r0, [sp, #28]
   15d1c:	b	15d20 <flatcc_json_printer_uint16@@Base+0xc4>
   15d20:	b	15d24 <flatcc_json_printer_uint16@@Base+0xc8>
   15d24:	ldr	r0, [sp, #28]
   15d28:	ldr	r1, [sp, #32]
   15d2c:	add	r0, r1, r0
   15d30:	str	r0, [sp, #32]
   15d34:	ldr	r0, [sp, #32]
   15d38:	movw	r1, #0
   15d3c:	strb	r1, [r0]
   15d40:	ldr	r0, [sp, #28]
   15d44:	and	r0, r0, #1
   15d48:	cmp	r0, #0
   15d4c:	beq	15e80 <flatcc_json_printer_uint16@@Base+0x224>
   15d50:	ldr	r0, [sp, #28]
   15d54:	cmp	r0, #1
   15d58:	str	r0, [sp, #20]
   15d5c:	beq	15e64 <flatcc_json_printer_uint16@@Base+0x208>
   15d60:	b	15d64 <flatcc_json_printer_uint16@@Base+0x108>
   15d64:	ldr	r0, [sp, #20]
   15d68:	cmp	r0, #3
   15d6c:	beq	15df4 <flatcc_json_printer_uint16@@Base+0x198>
   15d70:	b	15d74 <flatcc_json_printer_uint16@@Base+0x118>
   15d74:	ldr	r0, [sp, #20]
   15d78:	cmp	r0, #5
   15d7c:	bne	15e7c <flatcc_json_printer_uint16@@Base+0x220>
   15d80:	b	15d84 <flatcc_json_printer_uint16@@Base+0x128>
   15d84:	ldr	r0, [pc, #528]	; 15f9c <flatcc_json_printer_uint16@@Base+0x340>
   15d88:	add	r0, pc, r0
   15d8c:	ldr	r1, [sp, #32]
   15d90:	sub	r1, r1, #2
   15d94:	str	r1, [sp, #32]
   15d98:	ldrh	r1, [sp, #38]	; 0x26
   15d9c:	movw	r2, #34079	; 0x851f
   15da0:	movt	r2, #20971	; 0x51eb
   15da4:	umull	r2, r3, r1, r2
   15da8:	lsr	r3, r3, #5
   15dac:	mov	ip, #100	; 0x64
   15db0:	mls	r1, r3, ip, r1
   15db4:	lsl	r1, r1, #1
   15db8:	add	r0, r0, r1
   15dbc:	str	r0, [sp, #24]
   15dc0:	ldrh	r0, [sp, #38]	; 0x26
   15dc4:	movw	r1, #100	; 0x64
   15dc8:	sdiv	r0, r0, r1
   15dcc:	strh	r0, [sp, #38]	; 0x26
   15dd0:	ldr	r0, [sp, #24]
   15dd4:	ldrb	r0, [r0]
   15dd8:	ldr	r1, [sp, #32]
   15ddc:	strb	r0, [r1]
   15de0:	ldr	r0, [sp, #24]
   15de4:	ldrb	r0, [r0, #1]
   15de8:	ldr	r1, [sp, #32]
   15dec:	strb	r0, [r1, #1]
   15df0:	str	r2, [sp, #16]
   15df4:	ldr	r0, [pc, #420]	; 15fa0 <flatcc_json_printer_uint16@@Base+0x344>
   15df8:	add	r0, pc, r0
   15dfc:	ldr	r1, [sp, #32]
   15e00:	sub	r1, r1, #2
   15e04:	str	r1, [sp, #32]
   15e08:	ldrh	r1, [sp, #38]	; 0x26
   15e0c:	movw	r2, #34079	; 0x851f
   15e10:	movt	r2, #20971	; 0x51eb
   15e14:	umull	r2, r3, r1, r2
   15e18:	lsr	r3, r3, #5
   15e1c:	mov	ip, #100	; 0x64
   15e20:	mls	r1, r3, ip, r1
   15e24:	lsl	r1, r1, #1
   15e28:	add	r0, r0, r1
   15e2c:	str	r0, [sp, #24]
   15e30:	ldrh	r0, [sp, #38]	; 0x26
   15e34:	movw	r1, #100	; 0x64
   15e38:	sdiv	r0, r0, r1
   15e3c:	strh	r0, [sp, #38]	; 0x26
   15e40:	ldr	r0, [sp, #24]
   15e44:	ldrb	r0, [r0]
   15e48:	ldr	r1, [sp, #32]
   15e4c:	strb	r0, [r1]
   15e50:	ldr	r0, [sp, #24]
   15e54:	ldrb	r0, [r0, #1]
   15e58:	ldr	r1, [sp, #32]
   15e5c:	strb	r0, [r1, #1]
   15e60:	str	r2, [sp, #12]
   15e64:	ldrh	r0, [sp, #38]	; 0x26
   15e68:	add	r0, r0, #48	; 0x30
   15e6c:	ldr	r1, [sp, #32]
   15e70:	mvn	r2, #0
   15e74:	add	r1, r1, r2
   15e78:	strb	r0, [r1]
   15e7c:	b	15f88 <flatcc_json_printer_uint16@@Base+0x32c>
   15e80:	ldr	r0, [sp, #28]
   15e84:	cmp	r0, #2
   15e88:	str	r0, [sp, #8]
   15e8c:	beq	15f14 <flatcc_json_printer_uint16@@Base+0x2b8>
   15e90:	b	15e94 <flatcc_json_printer_uint16@@Base+0x238>
   15e94:	ldr	r0, [sp, #8]
   15e98:	cmp	r0, #4
   15e9c:	bne	15f84 <flatcc_json_printer_uint16@@Base+0x328>
   15ea0:	b	15ea4 <flatcc_json_printer_uint16@@Base+0x248>
   15ea4:	ldr	r0, [pc, #232]	; 15f94 <flatcc_json_printer_uint16@@Base+0x338>
   15ea8:	add	r0, pc, r0
   15eac:	ldr	r1, [sp, #32]
   15eb0:	sub	r1, r1, #2
   15eb4:	str	r1, [sp, #32]
   15eb8:	ldrh	r1, [sp, #38]	; 0x26
   15ebc:	movw	r2, #34079	; 0x851f
   15ec0:	movt	r2, #20971	; 0x51eb
   15ec4:	umull	r2, r3, r1, r2
   15ec8:	lsr	r3, r3, #5
   15ecc:	mov	ip, #100	; 0x64
   15ed0:	mls	r1, r3, ip, r1
   15ed4:	lsl	r1, r1, #1
   15ed8:	add	r0, r0, r1
   15edc:	str	r0, [sp, #24]
   15ee0:	ldrh	r0, [sp, #38]	; 0x26
   15ee4:	movw	r1, #100	; 0x64
   15ee8:	sdiv	r0, r0, r1
   15eec:	strh	r0, [sp, #38]	; 0x26
   15ef0:	ldr	r0, [sp, #24]
   15ef4:	ldrb	r0, [r0]
   15ef8:	ldr	r1, [sp, #32]
   15efc:	strb	r0, [r1]
   15f00:	ldr	r0, [sp, #24]
   15f04:	ldrb	r0, [r0, #1]
   15f08:	ldr	r1, [sp, #32]
   15f0c:	strb	r0, [r1, #1]
   15f10:	str	r2, [sp, #4]
   15f14:	ldr	r0, [pc, #124]	; 15f98 <flatcc_json_printer_uint16@@Base+0x33c>
   15f18:	add	r0, pc, r0
   15f1c:	ldr	r1, [sp, #32]
   15f20:	sub	r1, r1, #2
   15f24:	str	r1, [sp, #32]
   15f28:	ldrh	r1, [sp, #38]	; 0x26
   15f2c:	movw	r2, #34079	; 0x851f
   15f30:	movt	r2, #20971	; 0x51eb
   15f34:	umull	r2, r3, r1, r2
   15f38:	lsr	r3, r3, #5
   15f3c:	mov	ip, #100	; 0x64
   15f40:	mls	r1, r3, ip, r1
   15f44:	lsl	r1, r1, #1
   15f48:	add	r0, r0, r1
   15f4c:	str	r0, [sp, #24]
   15f50:	ldrh	r0, [sp, #38]	; 0x26
   15f54:	movw	r1, #100	; 0x64
   15f58:	sdiv	r0, r0, r1
   15f5c:	strh	r0, [sp, #38]	; 0x26
   15f60:	ldr	r0, [sp, #24]
   15f64:	ldrb	r0, [r0]
   15f68:	ldr	r1, [sp, #32]
   15f6c:	strb	r0, [r1]
   15f70:	ldr	r0, [sp, #24]
   15f74:	ldrb	r0, [r0, #1]
   15f78:	ldr	r1, [sp, #32]
   15f7c:	strb	r0, [r1, #1]
   15f80:	str	r2, [sp]
   15f84:	b	15f88 <flatcc_json_printer_uint16@@Base+0x32c>
   15f88:	ldr	r0, [sp, #28]
   15f8c:	add	sp, sp, #40	; 0x28
   15f90:	bx	lr
   15f94:	andeq	sp, r0, ip, lsl #12
   15f98:	muleq	r0, ip, r5
   15f9c:	andeq	sp, r0, ip, lsr #14
   15fa0:			; <UNDEFINED> instruction: 0x0000d6bc

00015fa4 <flatcc_json_printer_uint32@@Base>:
   15fa4:	push	{fp, lr}
   15fa8:	mov	fp, sp
   15fac:	sub	sp, sp, #8
   15fb0:	str	r0, [sp, #4]
   15fb4:	str	r1, [sp]
   15fb8:	ldr	r0, [sp]
   15fbc:	ldr	r1, [sp, #4]
   15fc0:	ldr	r1, [r1, #20]
   15fc4:	bl	15fe0 <flatcc_json_printer_uint32@@Base+0x3c>
   15fc8:	ldr	r1, [sp, #4]
   15fcc:	ldr	lr, [r1, #20]
   15fd0:	add	r0, lr, r0
   15fd4:	str	r0, [r1, #20]
   15fd8:	mov	sp, fp
   15fdc:	pop	{fp, pc}
   15fe0:	sub	sp, sp, #60	; 0x3c
   15fe4:	str	r0, [sp, #56]	; 0x38
   15fe8:	str	r1, [sp, #52]	; 0x34
   15fec:	movw	r0, #0
   15ff0:	str	r0, [sp, #48]	; 0x30
   15ff4:	ldr	r0, [sp, #56]	; 0x38
   15ff8:	movw	r1, #10000	; 0x2710
   15ffc:	cmp	r0, r1
   16000:	bcc	160a8 <flatcc_json_printer_uint32@@Base+0x104>
   16004:	ldr	r0, [pc, #1484]	; 165d8 <flatcc_json_printer_uint32@@Base+0x634>
   16008:	ldr	r1, [sp, #56]	; 0x38
   1600c:	cmp	r1, r0
   16010:	bcc	1605c <flatcc_json_printer_uint32@@Base+0xb8>
   16014:	ldr	r0, [pc, #1480]	; 165e4 <flatcc_json_printer_uint32@@Base+0x640>
   16018:	ldr	r1, [sp, #56]	; 0x38
   1601c:	cmp	r1, r0
   16020:	bcc	16030 <flatcc_json_printer_uint32@@Base+0x8c>
   16024:	movw	r0, #10
   16028:	str	r0, [sp, #48]	; 0x30
   1602c:	b	16058 <flatcc_json_printer_uint32@@Base+0xb4>
   16030:	ldr	r0, [pc, #1456]	; 165e8 <flatcc_json_printer_uint32@@Base+0x644>
   16034:	ldr	r1, [sp, #56]	; 0x38
   16038:	cmp	r1, r0
   1603c:	bcc	1604c <flatcc_json_printer_uint32@@Base+0xa8>
   16040:	movw	r0, #9
   16044:	str	r0, [sp, #48]	; 0x30
   16048:	b	16054 <flatcc_json_printer_uint32@@Base+0xb0>
   1604c:	movw	r0, #8
   16050:	str	r0, [sp, #48]	; 0x30
   16054:	b	16058 <flatcc_json_printer_uint32@@Base+0xb4>
   16058:	b	160a4 <flatcc_json_printer_uint32@@Base+0x100>
   1605c:	ldr	r0, [pc, #1400]	; 165dc <flatcc_json_printer_uint32@@Base+0x638>
   16060:	ldr	r1, [sp, #56]	; 0x38
   16064:	cmp	r1, r0
   16068:	bcc	16078 <flatcc_json_printer_uint32@@Base+0xd4>
   1606c:	movw	r0, #7
   16070:	str	r0, [sp, #48]	; 0x30
   16074:	b	160a0 <flatcc_json_printer_uint32@@Base+0xfc>
   16078:	ldr	r0, [pc, #1376]	; 165e0 <flatcc_json_printer_uint32@@Base+0x63c>
   1607c:	ldr	r1, [sp, #56]	; 0x38
   16080:	cmp	r1, r0
   16084:	bcc	16094 <flatcc_json_printer_uint32@@Base+0xf0>
   16088:	movw	r0, #6
   1608c:	str	r0, [sp, #48]	; 0x30
   16090:	b	1609c <flatcc_json_printer_uint32@@Base+0xf8>
   16094:	movw	r0, #5
   16098:	str	r0, [sp, #48]	; 0x30
   1609c:	b	160a0 <flatcc_json_printer_uint32@@Base+0xfc>
   160a0:	b	160a4 <flatcc_json_printer_uint32@@Base+0x100>
   160a4:	b	16100 <flatcc_json_printer_uint32@@Base+0x15c>
   160a8:	ldr	r0, [sp, #56]	; 0x38
   160ac:	cmp	r0, #100	; 0x64
   160b0:	bcc	160d8 <flatcc_json_printer_uint32@@Base+0x134>
   160b4:	ldr	r0, [sp, #56]	; 0x38
   160b8:	cmp	r0, #1000	; 0x3e8
   160bc:	bcc	160cc <flatcc_json_printer_uint32@@Base+0x128>
   160c0:	movw	r0, #4
   160c4:	str	r0, [sp, #48]	; 0x30
   160c8:	b	160d4 <flatcc_json_printer_uint32@@Base+0x130>
   160cc:	movw	r0, #3
   160d0:	str	r0, [sp, #48]	; 0x30
   160d4:	b	160fc <flatcc_json_printer_uint32@@Base+0x158>
   160d8:	ldr	r0, [sp, #56]	; 0x38
   160dc:	cmp	r0, #10
   160e0:	bcc	160f0 <flatcc_json_printer_uint32@@Base+0x14c>
   160e4:	movw	r0, #2
   160e8:	str	r0, [sp, #48]	; 0x30
   160ec:	b	160f8 <flatcc_json_printer_uint32@@Base+0x154>
   160f0:	movw	r0, #1
   160f4:	str	r0, [sp, #48]	; 0x30
   160f8:	b	160fc <flatcc_json_printer_uint32@@Base+0x158>
   160fc:	b	16100 <flatcc_json_printer_uint32@@Base+0x15c>
   16100:	ldr	r0, [sp, #48]	; 0x30
   16104:	ldr	r1, [sp, #52]	; 0x34
   16108:	add	r0, r1, r0
   1610c:	str	r0, [sp, #52]	; 0x34
   16110:	ldr	r0, [sp, #52]	; 0x34
   16114:	movw	r1, #0
   16118:	strb	r1, [r0]
   1611c:	ldr	r0, [sp, #48]	; 0x30
   16120:	and	r0, r0, #1
   16124:	cmp	r0, #0
   16128:	beq	16350 <flatcc_json_printer_uint32@@Base+0x3ac>
   1612c:	ldr	r0, [sp, #48]	; 0x30
   16130:	sub	r0, r0, #1
   16134:	cmp	r0, #8
   16138:	str	r0, [sp, #40]	; 0x28
   1613c:	bhi	1634c <flatcc_json_printer_uint32@@Base+0x3a8>
   16140:	add	r0, pc, #8
   16144:	ldr	r1, [sp, #40]	; 0x28
   16148:	ldr	r2, [r0, r1, lsl #2]
   1614c:	add	pc, r0, r2
   16150:	andeq	r0, r0, r4, ror #3
   16154:	strdeq	r0, [r0], -ip
   16158:	andeq	r0, r0, r4, ror r1
   1615c:	strdeq	r0, [r0], -ip
   16160:	andeq	r0, r0, r4, lsl #2
   16164:	strdeq	r0, [r0], -ip
   16168:	muleq	r0, r4, r0
   1616c:	strdeq	r0, [r0], -ip
   16170:	andeq	r0, r0, r4, lsr #32
   16174:	ldr	r0, [pc, #1156]	; 16600 <flatcc_json_printer_uint32@@Base+0x65c>
   16178:	add	r0, pc, r0
   1617c:	ldr	r1, [sp, #52]	; 0x34
   16180:	sub	r1, r1, #2
   16184:	str	r1, [sp, #52]	; 0x34
   16188:	ldr	r1, [sp, #56]	; 0x38
   1618c:	movw	r2, #34079	; 0x851f
   16190:	movt	r2, #20971	; 0x51eb
   16194:	umull	r2, r3, r1, r2
   16198:	lsr	r3, r3, #5
   1619c:	mov	ip, #100	; 0x64
   161a0:	mls	r1, r3, ip, r1
   161a4:	lsl	r1, r1, #1
   161a8:	add	r0, r0, r1
   161ac:	str	r0, [sp, #44]	; 0x2c
   161b0:	ldr	r0, [sp, #56]	; 0x38
   161b4:	movw	r1, #100	; 0x64
   161b8:	udiv	r0, r0, r1
   161bc:	str	r0, [sp, #56]	; 0x38
   161c0:	ldr	r0, [sp, #44]	; 0x2c
   161c4:	ldrb	r0, [r0]
   161c8:	ldr	r1, [sp, #52]	; 0x34
   161cc:	strb	r0, [r1]
   161d0:	ldr	r0, [sp, #44]	; 0x2c
   161d4:	ldrb	r0, [r0, #1]
   161d8:	ldr	r1, [sp, #52]	; 0x34
   161dc:	strb	r0, [r1, #1]
   161e0:	str	r2, [sp, #36]	; 0x24
   161e4:	ldr	r0, [pc, #1048]	; 16604 <flatcc_json_printer_uint32@@Base+0x660>
   161e8:	add	r0, pc, r0
   161ec:	ldr	r1, [sp, #52]	; 0x34
   161f0:	sub	r1, r1, #2
   161f4:	str	r1, [sp, #52]	; 0x34
   161f8:	ldr	r1, [sp, #56]	; 0x38
   161fc:	movw	r2, #34079	; 0x851f
   16200:	movt	r2, #20971	; 0x51eb
   16204:	umull	r2, r3, r1, r2
   16208:	lsr	r3, r3, #5
   1620c:	mov	ip, #100	; 0x64
   16210:	mls	r1, r3, ip, r1
   16214:	lsl	r1, r1, #1
   16218:	add	r0, r0, r1
   1621c:	str	r0, [sp, #44]	; 0x2c
   16220:	ldr	r0, [sp, #56]	; 0x38
   16224:	movw	r1, #100	; 0x64
   16228:	udiv	r0, r0, r1
   1622c:	str	r0, [sp, #56]	; 0x38
   16230:	ldr	r0, [sp, #44]	; 0x2c
   16234:	ldrb	r0, [r0]
   16238:	ldr	r1, [sp, #52]	; 0x34
   1623c:	strb	r0, [r1]
   16240:	ldr	r0, [sp, #44]	; 0x2c
   16244:	ldrb	r0, [r0, #1]
   16248:	ldr	r1, [sp, #52]	; 0x34
   1624c:	strb	r0, [r1, #1]
   16250:	str	r2, [sp, #32]
   16254:	ldr	r0, [pc, #940]	; 16608 <flatcc_json_printer_uint32@@Base+0x664>
   16258:	add	r0, pc, r0
   1625c:	ldr	r1, [sp, #52]	; 0x34
   16260:	sub	r1, r1, #2
   16264:	str	r1, [sp, #52]	; 0x34
   16268:	ldr	r1, [sp, #56]	; 0x38
   1626c:	movw	r2, #34079	; 0x851f
   16270:	movt	r2, #20971	; 0x51eb
   16274:	umull	r2, r3, r1, r2
   16278:	lsr	r3, r3, #5
   1627c:	mov	ip, #100	; 0x64
   16280:	mls	r1, r3, ip, r1
   16284:	lsl	r1, r1, #1
   16288:	add	r0, r0, r1
   1628c:	str	r0, [sp, #44]	; 0x2c
   16290:	ldr	r0, [sp, #56]	; 0x38
   16294:	movw	r1, #100	; 0x64
   16298:	udiv	r0, r0, r1
   1629c:	str	r0, [sp, #56]	; 0x38
   162a0:	ldr	r0, [sp, #44]	; 0x2c
   162a4:	ldrb	r0, [r0]
   162a8:	ldr	r1, [sp, #52]	; 0x34
   162ac:	strb	r0, [r1]
   162b0:	ldr	r0, [sp, #44]	; 0x2c
   162b4:	ldrb	r0, [r0, #1]
   162b8:	ldr	r1, [sp, #52]	; 0x34
   162bc:	strb	r0, [r1, #1]
   162c0:	str	r2, [sp, #28]
   162c4:	ldr	r0, [pc, #832]	; 1660c <flatcc_json_printer_uint32@@Base+0x668>
   162c8:	add	r0, pc, r0
   162cc:	ldr	r1, [sp, #52]	; 0x34
   162d0:	sub	r1, r1, #2
   162d4:	str	r1, [sp, #52]	; 0x34
   162d8:	ldr	r1, [sp, #56]	; 0x38
   162dc:	movw	r2, #34079	; 0x851f
   162e0:	movt	r2, #20971	; 0x51eb
   162e4:	umull	r2, r3, r1, r2
   162e8:	lsr	r3, r3, #5
   162ec:	mov	ip, #100	; 0x64
   162f0:	mls	r1, r3, ip, r1
   162f4:	lsl	r1, r1, #1
   162f8:	add	r0, r0, r1
   162fc:	str	r0, [sp, #44]	; 0x2c
   16300:	ldr	r0, [sp, #56]	; 0x38
   16304:	movw	r1, #100	; 0x64
   16308:	udiv	r0, r0, r1
   1630c:	str	r0, [sp, #56]	; 0x38
   16310:	ldr	r0, [sp, #44]	; 0x2c
   16314:	ldrb	r0, [r0]
   16318:	ldr	r1, [sp, #52]	; 0x34
   1631c:	strb	r0, [r1]
   16320:	ldr	r0, [sp, #44]	; 0x2c
   16324:	ldrb	r0, [r0, #1]
   16328:	ldr	r1, [sp, #52]	; 0x34
   1632c:	strb	r0, [r1, #1]
   16330:	str	r2, [sp, #24]
   16334:	ldr	r0, [sp, #56]	; 0x38
   16338:	add	r0, r0, #48	; 0x30
   1633c:	ldr	r1, [sp, #52]	; 0x34
   16340:	mvn	r2, #0
   16344:	add	r1, r1, r2
   16348:	strb	r0, [r1]
   1634c:	b	165cc <flatcc_json_printer_uint32@@Base+0x628>
   16350:	ldr	r0, [sp, #48]	; 0x30
   16354:	sub	r0, r0, #2
   16358:	cmp	r0, #8
   1635c:	str	r0, [sp, #20]
   16360:	bhi	165c8 <flatcc_json_printer_uint32@@Base+0x624>
   16364:	add	r0, pc, #8
   16368:	ldr	r1, [sp, #20]
   1636c:	ldr	r2, [r0, r1, lsl #2]
   16370:	add	pc, r0, r2
   16374:	andeq	r0, r0, r4, ror #3
   16378:	andeq	r0, r0, r4, asr r2
   1637c:	andeq	r0, r0, r4, ror r1
   16380:	andeq	r0, r0, r4, asr r2
   16384:	andeq	r0, r0, r4, lsl #2
   16388:	andeq	r0, r0, r4, asr r2
   1638c:	muleq	r0, r4, r0
   16390:	andeq	r0, r0, r4, asr r2
   16394:	andeq	r0, r0, r4, lsr #32
   16398:	ldr	r0, [pc, #588]	; 165ec <flatcc_json_printer_uint32@@Base+0x648>
   1639c:	add	r0, pc, r0
   163a0:	ldr	r1, [sp, #52]	; 0x34
   163a4:	sub	r1, r1, #2
   163a8:	str	r1, [sp, #52]	; 0x34
   163ac:	ldr	r1, [sp, #56]	; 0x38
   163b0:	movw	r2, #34079	; 0x851f
   163b4:	movt	r2, #20971	; 0x51eb
   163b8:	umull	r2, r3, r1, r2
   163bc:	lsr	r3, r3, #5
   163c0:	mov	ip, #100	; 0x64
   163c4:	mls	r1, r3, ip, r1
   163c8:	lsl	r1, r1, #1
   163cc:	add	r0, r0, r1
   163d0:	str	r0, [sp, #44]	; 0x2c
   163d4:	ldr	r0, [sp, #56]	; 0x38
   163d8:	movw	r1, #100	; 0x64
   163dc:	udiv	r0, r0, r1
   163e0:	str	r0, [sp, #56]	; 0x38
   163e4:	ldr	r0, [sp, #44]	; 0x2c
   163e8:	ldrb	r0, [r0]
   163ec:	ldr	r1, [sp, #52]	; 0x34
   163f0:	strb	r0, [r1]
   163f4:	ldr	r0, [sp, #44]	; 0x2c
   163f8:	ldrb	r0, [r0, #1]
   163fc:	ldr	r1, [sp, #52]	; 0x34
   16400:	strb	r0, [r1, #1]
   16404:	str	r2, [sp, #16]
   16408:	ldr	r0, [pc, #480]	; 165f0 <flatcc_json_printer_uint32@@Base+0x64c>
   1640c:	add	r0, pc, r0
   16410:	ldr	r1, [sp, #52]	; 0x34
   16414:	sub	r1, r1, #2
   16418:	str	r1, [sp, #52]	; 0x34
   1641c:	ldr	r1, [sp, #56]	; 0x38
   16420:	movw	r2, #34079	; 0x851f
   16424:	movt	r2, #20971	; 0x51eb
   16428:	umull	r2, r3, r1, r2
   1642c:	lsr	r3, r3, #5
   16430:	mov	ip, #100	; 0x64
   16434:	mls	r1, r3, ip, r1
   16438:	lsl	r1, r1, #1
   1643c:	add	r0, r0, r1
   16440:	str	r0, [sp, #44]	; 0x2c
   16444:	ldr	r0, [sp, #56]	; 0x38
   16448:	movw	r1, #100	; 0x64
   1644c:	udiv	r0, r0, r1
   16450:	str	r0, [sp, #56]	; 0x38
   16454:	ldr	r0, [sp, #44]	; 0x2c
   16458:	ldrb	r0, [r0]
   1645c:	ldr	r1, [sp, #52]	; 0x34
   16460:	strb	r0, [r1]
   16464:	ldr	r0, [sp, #44]	; 0x2c
   16468:	ldrb	r0, [r0, #1]
   1646c:	ldr	r1, [sp, #52]	; 0x34
   16470:	strb	r0, [r1, #1]
   16474:	str	r2, [sp, #12]
   16478:	ldr	r0, [pc, #372]	; 165f4 <flatcc_json_printer_uint32@@Base+0x650>
   1647c:	add	r0, pc, r0
   16480:	ldr	r1, [sp, #52]	; 0x34
   16484:	sub	r1, r1, #2
   16488:	str	r1, [sp, #52]	; 0x34
   1648c:	ldr	r1, [sp, #56]	; 0x38
   16490:	movw	r2, #34079	; 0x851f
   16494:	movt	r2, #20971	; 0x51eb
   16498:	umull	r2, r3, r1, r2
   1649c:	lsr	r3, r3, #5
   164a0:	mov	ip, #100	; 0x64
   164a4:	mls	r1, r3, ip, r1
   164a8:	lsl	r1, r1, #1
   164ac:	add	r0, r0, r1
   164b0:	str	r0, [sp, #44]	; 0x2c
   164b4:	ldr	r0, [sp, #56]	; 0x38
   164b8:	movw	r1, #100	; 0x64
   164bc:	udiv	r0, r0, r1
   164c0:	str	r0, [sp, #56]	; 0x38
   164c4:	ldr	r0, [sp, #44]	; 0x2c
   164c8:	ldrb	r0, [r0]
   164cc:	ldr	r1, [sp, #52]	; 0x34
   164d0:	strb	r0, [r1]
   164d4:	ldr	r0, [sp, #44]	; 0x2c
   164d8:	ldrb	r0, [r0, #1]
   164dc:	ldr	r1, [sp, #52]	; 0x34
   164e0:	strb	r0, [r1, #1]
   164e4:	str	r2, [sp, #8]
   164e8:	ldr	r0, [pc, #264]	; 165f8 <flatcc_json_printer_uint32@@Base+0x654>
   164ec:	add	r0, pc, r0
   164f0:	ldr	r1, [sp, #52]	; 0x34
   164f4:	sub	r1, r1, #2
   164f8:	str	r1, [sp, #52]	; 0x34
   164fc:	ldr	r1, [sp, #56]	; 0x38
   16500:	movw	r2, #34079	; 0x851f
   16504:	movt	r2, #20971	; 0x51eb
   16508:	umull	r2, r3, r1, r2
   1650c:	lsr	r3, r3, #5
   16510:	mov	ip, #100	; 0x64
   16514:	mls	r1, r3, ip, r1
   16518:	lsl	r1, r1, #1
   1651c:	add	r0, r0, r1
   16520:	str	r0, [sp, #44]	; 0x2c
   16524:	ldr	r0, [sp, #56]	; 0x38
   16528:	movw	r1, #100	; 0x64
   1652c:	udiv	r0, r0, r1
   16530:	str	r0, [sp, #56]	; 0x38
   16534:	ldr	r0, [sp, #44]	; 0x2c
   16538:	ldrb	r0, [r0]
   1653c:	ldr	r1, [sp, #52]	; 0x34
   16540:	strb	r0, [r1]
   16544:	ldr	r0, [sp, #44]	; 0x2c
   16548:	ldrb	r0, [r0, #1]
   1654c:	ldr	r1, [sp, #52]	; 0x34
   16550:	strb	r0, [r1, #1]
   16554:	str	r2, [sp, #4]
   16558:	ldr	r0, [pc, #156]	; 165fc <flatcc_json_printer_uint32@@Base+0x658>
   1655c:	add	r0, pc, r0
   16560:	ldr	r1, [sp, #52]	; 0x34
   16564:	sub	r1, r1, #2
   16568:	str	r1, [sp, #52]	; 0x34
   1656c:	ldr	r1, [sp, #56]	; 0x38
   16570:	movw	r2, #34079	; 0x851f
   16574:	movt	r2, #20971	; 0x51eb
   16578:	umull	r2, r3, r1, r2
   1657c:	lsr	r3, r3, #5
   16580:	mov	ip, #100	; 0x64
   16584:	mls	r1, r3, ip, r1
   16588:	lsl	r1, r1, #1
   1658c:	add	r0, r0, r1
   16590:	str	r0, [sp, #44]	; 0x2c
   16594:	ldr	r0, [sp, #56]	; 0x38
   16598:	movw	r1, #100	; 0x64
   1659c:	udiv	r0, r0, r1
   165a0:	str	r0, [sp, #56]	; 0x38
   165a4:	ldr	r0, [sp, #44]	; 0x2c
   165a8:	ldrb	r0, [r0]
   165ac:	ldr	r1, [sp, #52]	; 0x34
   165b0:	strb	r0, [r1]
   165b4:	ldr	r0, [sp, #44]	; 0x2c
   165b8:	ldrb	r0, [r0, #1]
   165bc:	ldr	r1, [sp, #52]	; 0x34
   165c0:	strb	r0, [r1, #1]
   165c4:	str	r2, [sp]
   165c8:	b	165cc <flatcc_json_printer_uint32@@Base+0x628>
   165cc:	ldr	r0, [sp, #48]	; 0x30
   165d0:	add	sp, sp, #60	; 0x3c
   165d4:	bx	lr
   165d8:	addseq	r9, r8, r0, lsl #13
   165dc:	andeq	r4, pc, r0, asr #4
   165e0:	andeq	r8, r1, r0, lsr #13
   165e4:	blcc	fe6c8dec <__bss_end__@@Base+0xfe694d4c>
   165e8:	ldrbeq	lr, [r5, #256]!	; 0x100
   165ec:	andeq	sp, r0, r8, lsl r1
   165f0:	andeq	sp, r0, r8, lsr #1
   165f4:	andeq	sp, r0, r8, lsr r0
   165f8:	andeq	ip, r0, r8, asr #31
   165fc:	andeq	ip, r0, r8, asr pc
   16600:	andeq	sp, r0, ip, lsr r3
   16604:	andeq	sp, r0, ip, asr #5
   16608:	andeq	sp, r0, ip, asr r2
   1660c:	andeq	sp, r0, ip, ror #3

00016610 <flatcc_json_printer_uint64@@Base>:
   16610:	push	{fp, lr}
   16614:	mov	fp, sp
   16618:	sub	sp, sp, #16
   1661c:	str	r0, [fp, #-4]
   16620:	str	r3, [sp, #4]
   16624:	str	r2, [sp]
   16628:	ldr	r0, [sp]
   1662c:	ldr	r1, [sp, #4]
   16630:	ldr	r2, [fp, #-4]
   16634:	ldr	r2, [r2, #20]
   16638:	bl	16654 <flatcc_json_printer_uint64@@Base+0x44>
   1663c:	ldr	r1, [fp, #-4]
   16640:	ldr	r2, [r1, #20]
   16644:	add	r0, r2, r0
   16648:	str	r0, [r1, #20]
   1664c:	mov	sp, fp
   16650:	pop	{fp, pc}
   16654:	push	{fp, lr}
   16658:	mov	fp, sp
   1665c:	sub	sp, sp, #368	; 0x170
   16660:	str	r0, [fp, #-16]
   16664:	str	r1, [fp, #-12]
   16668:	str	r2, [fp, #-20]	; 0xffffffec
   1666c:	mov	r0, #0
   16670:	str	r0, [fp, #-24]	; 0xffffffe8
   16674:	str	r0, [fp, #-36]	; 0xffffffdc
   16678:	movw	r0, #51712	; 0xca00
   1667c:	movt	r0, #15258	; 0x3b9a
   16680:	str	r0, [fp, #-40]	; 0xffffffd8
   16684:	ldr	r0, [fp, #-16]
   16688:	ldr	r1, [fp, #-12]
   1668c:	movw	r2, #51711	; 0xc9ff
   16690:	movt	r2, #15258	; 0x3b9a
   16694:	subs	r0, r2, r0
   16698:	rscs	r1, r1, #0
   1669c:	str	r0, [fp, #-44]	; 0xffffffd4
   166a0:	str	r1, [fp, #-48]	; 0xffffffd0
   166a4:	bcc	166c0 <flatcc_json_printer_uint64@@Base+0xb0>
   166a8:	b	166ac <flatcc_json_printer_uint64@@Base+0x9c>
   166ac:	ldr	r0, [fp, #-16]
   166b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   166b4:	bl	15fe0 <flatcc_json_printer_uint32@@Base+0x3c>
   166b8:	str	r0, [fp, #-4]
   166bc:	b	171e0 <flatcc_json_printer_uint64@@Base+0xbd0>
   166c0:	ldr	r0, [fp, #-16]
   166c4:	ldr	r1, [fp, #-12]
   166c8:	movw	r2, #40960	; 0xa000
   166cc:	movt	r2, #20082	; 0x4e72
   166d0:	subs	r0, r0, r2
   166d4:	movw	r2, #2328	; 0x918
   166d8:	sbcs	r1, r1, r2
   166dc:	str	r0, [fp, #-52]	; 0xffffffcc
   166e0:	str	r1, [fp, #-56]	; 0xffffffc8
   166e4:	bcc	16868 <flatcc_json_printer_uint64@@Base+0x258>
   166e8:	b	166ec <flatcc_json_printer_uint64@@Base+0xdc>
   166ec:	ldr	r0, [fp, #-16]
   166f0:	ldr	r1, [fp, #-12]
   166f4:	movw	r2, #0
   166f8:	movt	r2, #28609	; 0x6fc1
   166fc:	subs	r0, r0, r2
   16700:	movw	r2, #34546	; 0x86f2
   16704:	movt	r2, #35	; 0x23
   16708:	sbcs	r1, r1, r2
   1670c:	str	r0, [fp, #-60]	; 0xffffffc4
   16710:	str	r1, [fp, #-64]	; 0xffffffc0
   16714:	bcc	167e0 <flatcc_json_printer_uint64@@Base+0x1d0>
   16718:	b	1671c <flatcc_json_printer_uint64@@Base+0x10c>
   1671c:	ldr	r0, [fp, #-16]
   16720:	ldr	r1, [fp, #-12]
   16724:	movw	r2, #0
   16728:	movt	r2, #42852	; 0xa764
   1672c:	subs	r0, r0, r2
   16730:	movw	r2, #46771	; 0xb6b3
   16734:	movt	r2, #3552	; 0xde0
   16738:	sbcs	r1, r1, r2
   1673c:	str	r0, [fp, #-68]	; 0xffffffbc
   16740:	str	r1, [fp, #-72]	; 0xffffffb8
   16744:	bcc	16794 <flatcc_json_printer_uint64@@Base+0x184>
   16748:	b	1674c <flatcc_json_printer_uint64@@Base+0x13c>
   1674c:	ldr	r0, [fp, #-16]
   16750:	ldr	r1, [fp, #-12]
   16754:	movw	r2, #0
   16758:	movt	r2, #35304	; 0x89e8
   1675c:	subs	r0, r0, r2
   16760:	movw	r2, #8964	; 0x2304
   16764:	movt	r2, #35527	; 0x8ac7
   16768:	sbcs	r1, r1, r2
   1676c:	str	r0, [fp, #-76]	; 0xffffffb4
   16770:	str	r1, [fp, #-80]	; 0xffffffb0
   16774:	bcc	16788 <flatcc_json_printer_uint64@@Base+0x178>
   16778:	b	1677c <flatcc_json_printer_uint64@@Base+0x16c>
   1677c:	movw	r0, #20
   16780:	str	r0, [fp, #-24]	; 0xffffffe8
   16784:	b	16790 <flatcc_json_printer_uint64@@Base+0x180>
   16788:	movw	r0, #19
   1678c:	str	r0, [fp, #-24]	; 0xffffffe8
   16790:	b	167dc <flatcc_json_printer_uint64@@Base+0x1cc>
   16794:	ldr	r0, [fp, #-16]
   16798:	ldr	r1, [fp, #-12]
   1679c:	movw	r2, #0
   167a0:	movt	r2, #23946	; 0x5d8a
   167a4:	subs	r0, r0, r2
   167a8:	movw	r2, #17784	; 0x4578
   167ac:	movt	r2, #355	; 0x163
   167b0:	sbcs	r1, r1, r2
   167b4:	str	r0, [fp, #-84]	; 0xffffffac
   167b8:	str	r1, [fp, #-88]	; 0xffffffa8
   167bc:	bcc	167d0 <flatcc_json_printer_uint64@@Base+0x1c0>
   167c0:	b	167c4 <flatcc_json_printer_uint64@@Base+0x1b4>
   167c4:	movw	r0, #18
   167c8:	str	r0, [fp, #-24]	; 0xffffffe8
   167cc:	b	167d8 <flatcc_json_printer_uint64@@Base+0x1c8>
   167d0:	movw	r0, #17
   167d4:	str	r0, [fp, #-24]	; 0xffffffe8
   167d8:	b	167dc <flatcc_json_printer_uint64@@Base+0x1cc>
   167dc:	b	16864 <flatcc_json_printer_uint64@@Base+0x254>
   167e0:	ldr	r0, [fp, #-16]
   167e4:	ldr	r1, [fp, #-12]
   167e8:	movw	r2, #32768	; 0x8000
   167ec:	movt	r2, #42182	; 0xa4c6
   167f0:	subs	r0, r0, r2
   167f4:	movw	r2, #36222	; 0x8d7e
   167f8:	movt	r2, #3
   167fc:	sbcs	r1, r1, r2
   16800:	str	r0, [fp, #-92]	; 0xffffffa4
   16804:	str	r1, [fp, #-96]	; 0xffffffa0
   16808:	bcc	1681c <flatcc_json_printer_uint64@@Base+0x20c>
   1680c:	b	16810 <flatcc_json_printer_uint64@@Base+0x200>
   16810:	movw	r0, #16
   16814:	str	r0, [fp, #-24]	; 0xffffffe8
   16818:	b	16860 <flatcc_json_printer_uint64@@Base+0x250>
   1681c:	ldr	r0, [fp, #-16]
   16820:	ldr	r1, [fp, #-12]
   16824:	movw	r2, #16384	; 0x4000
   16828:	movt	r2, #4218	; 0x107a
   1682c:	subs	r0, r0, r2
   16830:	movw	r2, #23283	; 0x5af3
   16834:	sbcs	r1, r1, r2
   16838:	str	r0, [fp, #-100]	; 0xffffff9c
   1683c:	str	r1, [fp, #-104]	; 0xffffff98
   16840:	bcc	16854 <flatcc_json_printer_uint64@@Base+0x244>
   16844:	b	16848 <flatcc_json_printer_uint64@@Base+0x238>
   16848:	movw	r0, #15
   1684c:	str	r0, [fp, #-24]	; 0xffffffe8
   16850:	b	1685c <flatcc_json_printer_uint64@@Base+0x24c>
   16854:	movw	r0, #14
   16858:	str	r0, [fp, #-24]	; 0xffffffe8
   1685c:	b	16860 <flatcc_json_printer_uint64@@Base+0x250>
   16860:	b	16864 <flatcc_json_printer_uint64@@Base+0x254>
   16864:	b	16914 <flatcc_json_printer_uint64@@Base+0x304>
   16868:	ldr	r0, [fp, #-16]
   1686c:	ldr	r1, [fp, #-12]
   16870:	movw	r2, #59392	; 0xe800
   16874:	movt	r2, #18550	; 0x4876
   16878:	subs	r0, r0, r2
   1687c:	sbcs	r1, r1, #23
   16880:	str	r0, [fp, #-108]	; 0xffffff94
   16884:	str	r1, [fp, #-112]	; 0xffffff90
   16888:	bcc	168d0 <flatcc_json_printer_uint64@@Base+0x2c0>
   1688c:	b	16890 <flatcc_json_printer_uint64@@Base+0x280>
   16890:	ldr	r0, [fp, #-16]
   16894:	ldr	r1, [fp, #-12]
   16898:	movw	r2, #4096	; 0x1000
   1689c:	movt	r2, #54437	; 0xd4a5
   168a0:	subs	r0, r0, r2
   168a4:	sbcs	r1, r1, #232	; 0xe8
   168a8:	str	r0, [fp, #-116]	; 0xffffff8c
   168ac:	str	r1, [fp, #-120]	; 0xffffff88
   168b0:	bcc	168c4 <flatcc_json_printer_uint64@@Base+0x2b4>
   168b4:	b	168b8 <flatcc_json_printer_uint64@@Base+0x2a8>
   168b8:	movw	r0, #13
   168bc:	str	r0, [fp, #-24]	; 0xffffffe8
   168c0:	b	168cc <flatcc_json_printer_uint64@@Base+0x2bc>
   168c4:	movw	r0, #12
   168c8:	str	r0, [fp, #-24]	; 0xffffffe8
   168cc:	b	16910 <flatcc_json_printer_uint64@@Base+0x300>
   168d0:	ldr	r0, [fp, #-16]
   168d4:	ldr	r1, [fp, #-12]
   168d8:	movw	r2, #58368	; 0xe400
   168dc:	movt	r2, #21515	; 0x540b
   168e0:	subs	r0, r0, r2
   168e4:	sbcs	r1, r1, #2
   168e8:	str	r0, [fp, #-124]	; 0xffffff84
   168ec:	str	r1, [fp, #-128]	; 0xffffff80
   168f0:	bcc	16904 <flatcc_json_printer_uint64@@Base+0x2f4>
   168f4:	b	168f8 <flatcc_json_printer_uint64@@Base+0x2e8>
   168f8:	movw	r0, #11
   168fc:	str	r0, [fp, #-24]	; 0xffffffe8
   16900:	b	1690c <flatcc_json_printer_uint64@@Base+0x2fc>
   16904:	movw	r0, #10
   16908:	str	r0, [fp, #-24]	; 0xffffffe8
   1690c:	b	16910 <flatcc_json_printer_uint64@@Base+0x300>
   16910:	b	16914 <flatcc_json_printer_uint64@@Base+0x304>
   16914:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16918:	ldr	r1, [fp, #-20]	; 0xffffffec
   1691c:	add	r0, r1, r0
   16920:	str	r0, [fp, #-20]	; 0xffffffec
   16924:	ldr	r0, [fp, #-20]	; 0xffffffec
   16928:	movw	r1, #0
   1692c:	strb	r1, [r0]
   16930:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16934:	and	r0, r0, #1
   16938:	cmp	r0, #0
   1693c:	beq	16c78 <flatcc_json_printer_uint64@@Base+0x668>
   16940:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16944:	sub	r0, r0, #11
   16948:	cmp	r0, #8
   1694c:	str	r0, [fp, #-132]	; 0xffffff7c
   16950:	bhi	16c74 <flatcc_json_printer_uint64@@Base+0x664>
   16954:	add	r0, pc, #8
   16958:	ldr	r1, [fp, #-132]	; 0xffffff7c
   1695c:	ldr	r2, [r0, r1, lsl #2]
   16960:	add	pc, r0, r2
   16964:	andeq	r0, r0, r4, lsr r2
   16968:	andeq	r0, r0, r0, lsl r3
   1696c:			; <UNDEFINED> instruction: 0x000001b0
   16970:	andeq	r0, r0, r0, lsl r3
   16974:	andeq	r0, r0, ip, lsr #2
   16978:	andeq	r0, r0, r0, lsl r3
   1697c:	andeq	r0, r0, r8, lsr #1
   16980:	andeq	r0, r0, r0, lsl r3
   16984:	andeq	r0, r0, r4, lsr #32
   16988:	ldr	r0, [fp, #-20]	; 0xffffffec
   1698c:	sub	r0, r0, #2
   16990:	str	r0, [fp, #-20]	; 0xffffffec
   16994:	ldr	r0, [fp, #-16]
   16998:	ldr	r1, [fp, #-12]
   1699c:	mov	r2, #100	; 0x64
   169a0:	mov	r3, #0
   169a4:	str	r2, [fp, #-136]	; 0xffffff78
   169a8:	str	r3, [fp, #-140]	; 0xffffff74
   169ac:	bl	22084 <flatcc_json_printer_clear@@Base+0x1d90>
   169b0:	ldr	r3, [pc, #2100]	; 171ec <flatcc_json_printer_uint64@@Base+0xbdc>
   169b4:	add	r3, pc, r3
   169b8:	add	r2, r3, r2, lsl #1
   169bc:	str	r2, [fp, #-28]	; 0xffffffe4
   169c0:	ldr	r2, [fp, #-16]
   169c4:	ldr	r3, [fp, #-12]
   169c8:	str	r0, [fp, #-144]	; 0xffffff70
   169cc:	mov	r0, r2
   169d0:	str	r1, [fp, #-148]	; 0xffffff6c
   169d4:	mov	r1, r3
   169d8:	ldr	r2, [fp, #-136]	; 0xffffff78
   169dc:	ldr	r3, [fp, #-140]	; 0xffffff74
   169e0:	bl	22084 <flatcc_json_printer_clear@@Base+0x1d90>
   169e4:	str	r1, [fp, #-12]
   169e8:	str	r0, [fp, #-16]
   169ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   169f0:	ldrb	r0, [r0]
   169f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   169f8:	strb	r0, [r1]
   169fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16a00:	ldrb	r0, [r0, #1]
   16a04:	ldr	r1, [fp, #-20]	; 0xffffffec
   16a08:	strb	r0, [r1, #1]
   16a0c:	ldr	r0, [fp, #-20]	; 0xffffffec
   16a10:	sub	r0, r0, #2
   16a14:	str	r0, [fp, #-20]	; 0xffffffec
   16a18:	ldr	r0, [fp, #-16]
   16a1c:	ldr	r1, [fp, #-12]
   16a20:	mov	r2, #100	; 0x64
   16a24:	mov	r3, #0
   16a28:	str	r2, [fp, #-152]	; 0xffffff68
   16a2c:	str	r3, [fp, #-156]	; 0xffffff64
   16a30:	bl	22084 <flatcc_json_printer_clear@@Base+0x1d90>
   16a34:	ldr	r3, [pc, #1972]	; 171f0 <flatcc_json_printer_uint64@@Base+0xbe0>
   16a38:	add	r3, pc, r3
   16a3c:	add	r2, r3, r2, lsl #1
   16a40:	str	r2, [fp, #-28]	; 0xffffffe4
   16a44:	ldr	r2, [fp, #-16]
   16a48:	ldr	r3, [fp, #-12]
   16a4c:	str	r0, [fp, #-160]	; 0xffffff60
   16a50:	mov	r0, r2
   16a54:	str	r1, [fp, #-164]	; 0xffffff5c
   16a58:	mov	r1, r3
   16a5c:	ldr	r2, [fp, #-152]	; 0xffffff68
   16a60:	ldr	r3, [fp, #-156]	; 0xffffff64
   16a64:	bl	22084 <flatcc_json_printer_clear@@Base+0x1d90>
   16a68:	str	r1, [fp, #-12]
   16a6c:	str	r0, [fp, #-16]
   16a70:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16a74:	ldrb	r0, [r0]
   16a78:	ldr	r1, [fp, #-20]	; 0xffffffec
   16a7c:	strb	r0, [r1]
   16a80:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16a84:	ldrb	r0, [r0, #1]
   16a88:	ldr	r1, [fp, #-20]	; 0xffffffec
   16a8c:	strb	r0, [r1, #1]
   16a90:	ldr	r0, [fp, #-20]	; 0xffffffec
   16a94:	sub	r0, r0, #2
   16a98:	str	r0, [fp, #-20]	; 0xffffffec
   16a9c:	ldr	r0, [fp, #-16]
   16aa0:	ldr	r1, [fp, #-12]
   16aa4:	mov	r2, #100	; 0x64
   16aa8:	mov	r3, #0
   16aac:	str	r2, [fp, #-168]	; 0xffffff58
   16ab0:	str	r3, [fp, #-172]	; 0xffffff54
   16ab4:	bl	22084 <flatcc_json_printer_clear@@Base+0x1d90>
   16ab8:	ldr	r3, [pc, #1844]	; 171f4 <flatcc_json_printer_uint64@@Base+0xbe4>
   16abc:	add	r3, pc, r3
   16ac0:	add	r2, r3, r2, lsl #1
   16ac4:	str	r2, [fp, #-28]	; 0xffffffe4
   16ac8:	ldr	r2, [fp, #-16]
   16acc:	ldr	r3, [fp, #-12]
   16ad0:	str	r0, [fp, #-176]	; 0xffffff50
   16ad4:	mov	r0, r2
   16ad8:	str	r1, [fp, #-180]	; 0xffffff4c
   16adc:	mov	r1, r3
   16ae0:	ldr	r2, [fp, #-168]	; 0xffffff58
   16ae4:	ldr	r3, [fp, #-172]	; 0xffffff54
   16ae8:	bl	22084 <flatcc_json_printer_clear@@Base+0x1d90>
   16aec:	str	r1, [fp, #-12]
   16af0:	str	r0, [fp, #-16]
   16af4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16af8:	ldrb	r0, [r0]
   16afc:	ldr	r1, [fp, #-20]	; 0xffffffec
   16b00:	strb	r0, [r1]
   16b04:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16b08:	ldrb	r0, [r0, #1]
   16b0c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16b10:	strb	r0, [r1, #1]
   16b14:	ldr	r0, [fp, #-20]	; 0xffffffec
   16b18:	sub	r0, r0, #2
   16b1c:	str	r0, [fp, #-20]	; 0xffffffec
   16b20:	ldr	r0, [fp, #-16]
   16b24:	ldr	r1, [fp, #-12]
   16b28:	mov	r2, #100	; 0x64
   16b2c:	mov	r3, #0
   16b30:	str	r2, [sp, #184]	; 0xb8
   16b34:	str	r3, [sp, #180]	; 0xb4
   16b38:	bl	22084 <flatcc_json_printer_clear@@Base+0x1d90>
   16b3c:	ldr	r3, [pc, #1716]	; 171f8 <flatcc_json_printer_uint64@@Base+0xbe8>
   16b40:	add	r3, pc, r3
   16b44:	add	r2, r3, r2, lsl #1
   16b48:	str	r2, [fp, #-28]	; 0xffffffe4
   16b4c:	ldr	r2, [fp, #-16]
   16b50:	ldr	r3, [fp, #-12]
   16b54:	str	r0, [sp, #176]	; 0xb0
   16b58:	mov	r0, r2
   16b5c:	str	r1, [sp, #172]	; 0xac
   16b60:	mov	r1, r3
   16b64:	ldr	r2, [sp, #184]	; 0xb8
   16b68:	ldr	r3, [sp, #180]	; 0xb4
   16b6c:	bl	22084 <flatcc_json_printer_clear@@Base+0x1d90>
   16b70:	str	r1, [fp, #-12]
   16b74:	str	r0, [fp, #-16]
   16b78:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16b7c:	ldrb	r0, [r0]
   16b80:	ldr	r1, [fp, #-20]	; 0xffffffec
   16b84:	strb	r0, [r1]
   16b88:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16b8c:	ldrb	r0, [r0, #1]
   16b90:	ldr	r1, [fp, #-20]	; 0xffffffec
   16b94:	strb	r0, [r1, #1]
   16b98:	ldr	r0, [fp, #-20]	; 0xffffffec
   16b9c:	sub	r0, r0, #2
   16ba0:	str	r0, [fp, #-20]	; 0xffffffec
   16ba4:	ldr	r0, [fp, #-16]
   16ba8:	ldr	r1, [fp, #-12]
   16bac:	mov	r2, #100	; 0x64
   16bb0:	mov	r3, #0
   16bb4:	str	r2, [sp, #168]	; 0xa8
   16bb8:	str	r3, [sp, #164]	; 0xa4
   16bbc:	bl	22084 <flatcc_json_printer_clear@@Base+0x1d90>
   16bc0:	ldr	r3, [pc, #1588]	; 171fc <flatcc_json_printer_uint64@@Base+0xbec>
   16bc4:	add	r3, pc, r3
   16bc8:	add	r2, r3, r2, lsl #1
   16bcc:	str	r2, [fp, #-28]	; 0xffffffe4
   16bd0:	ldr	r2, [fp, #-16]
   16bd4:	ldr	r3, [fp, #-12]
   16bd8:	str	r0, [sp, #160]	; 0xa0
   16bdc:	mov	r0, r2
   16be0:	str	r1, [sp, #156]	; 0x9c
   16be4:	mov	r1, r3
   16be8:	ldr	r2, [sp, #168]	; 0xa8
   16bec:	ldr	r3, [sp, #164]	; 0xa4
   16bf0:	bl	22084 <flatcc_json_printer_clear@@Base+0x1d90>
   16bf4:	str	r1, [fp, #-12]
   16bf8:	str	r0, [fp, #-16]
   16bfc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16c00:	ldrb	r0, [r0]
   16c04:	ldr	r1, [fp, #-20]	; 0xffffffec
   16c08:	strb	r0, [r1]
   16c0c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16c10:	ldrb	r0, [r0, #1]
   16c14:	ldr	r1, [fp, #-20]	; 0xffffffec
   16c18:	strb	r0, [r1, #1]
   16c1c:	ldr	r0, [fp, #-16]
   16c20:	ldr	r1, [fp, #-12]
   16c24:	mov	r2, #10
   16c28:	str	r2, [sp, #152]	; 0x98
   16c2c:	ldr	r3, [sp, #164]	; 0xa4
   16c30:	bl	22084 <flatcc_json_printer_clear@@Base+0x1d90>
   16c34:	orr	r2, r2, #48	; 0x30
   16c38:	ldr	r3, [fp, #-20]	; 0xffffffec
   16c3c:	sub	lr, r3, #1
   16c40:	str	lr, [fp, #-20]	; 0xffffffec
   16c44:	strb	r2, [r3, #-1]
   16c48:	ldr	r2, [fp, #-16]
   16c4c:	ldr	r3, [fp, #-12]
   16c50:	str	r0, [sp, #148]	; 0x94
   16c54:	mov	r0, r2
   16c58:	str	r1, [sp, #144]	; 0x90
   16c5c:	mov	r1, r3
   16c60:	ldr	r2, [sp, #152]	; 0x98
   16c64:	ldr	r3, [sp, #164]	; 0xa4
   16c68:	bl	22084 <flatcc_json_printer_clear@@Base+0x1d90>
   16c6c:	str	r1, [fp, #-12]
   16c70:	str	r0, [fp, #-16]
   16c74:	b	16fe4 <flatcc_json_printer_uint64@@Base+0x9d4>
   16c78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c7c:	sub	r0, r0, #10
   16c80:	cmp	r0, #10
   16c84:	str	r0, [sp, #140]	; 0x8c
   16c88:	bhi	16fe0 <flatcc_json_printer_uint64@@Base+0x9d0>
   16c8c:	add	r0, pc, #8
   16c90:	ldr	r1, [sp, #140]	; 0x8c
   16c94:	ldr	r2, [r0, r1, lsl #2]
   16c98:	add	pc, r0, r2
   16c9c:	andeq	r0, r0, r0, asr #5
   16ca0:	andeq	r0, r0, r4, asr #6
   16ca4:	andeq	r0, r0, ip, lsr r2
   16ca8:	andeq	r0, r0, r4, asr #6
   16cac:			; <UNDEFINED> instruction: 0x000001b8
   16cb0:	andeq	r0, r0, r4, asr #6
   16cb4:	andeq	r0, r0, r4, lsr r1
   16cb8:	andeq	r0, r0, r4, asr #6
   16cbc:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   16cc0:	andeq	r0, r0, r4, asr #6
   16cc4:	andeq	r0, r0, ip, lsr #32
   16cc8:	ldr	r0, [fp, #-20]	; 0xffffffec
   16ccc:	sub	r0, r0, #2
   16cd0:	str	r0, [fp, #-20]	; 0xffffffec
   16cd4:	ldr	r0, [fp, #-16]
   16cd8:	ldr	r1, [fp, #-12]
   16cdc:	mov	r2, #100	; 0x64
   16ce0:	mov	r3, #0
   16ce4:	str	r2, [sp, #136]	; 0x88
   16ce8:	str	r3, [sp, #132]	; 0x84
   16cec:	bl	22084 <flatcc_json_printer_clear@@Base+0x1d90>
   16cf0:	ldr	r3, [pc, #1288]	; 17200 <flatcc_json_printer_uint64@@Base+0xbf0>
   16cf4:	add	r3, pc, r3
   16cf8:	add	r2, r3, r2, lsl #1
   16cfc:	str	r2, [fp, #-28]	; 0xffffffe4
   16d00:	ldr	r2, [fp, #-16]
   16d04:	ldr	r3, [fp, #-12]
   16d08:	str	r0, [sp, #128]	; 0x80
   16d0c:	mov	r0, r2
   16d10:	str	r1, [sp, #124]	; 0x7c
   16d14:	mov	r1, r3
   16d18:	ldr	r2, [sp, #136]	; 0x88
   16d1c:	ldr	r3, [sp, #132]	; 0x84
   16d20:	bl	22084 <flatcc_json_printer_clear@@Base+0x1d90>
   16d24:	str	r1, [fp, #-12]
   16d28:	str	r0, [fp, #-16]
   16d2c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16d30:	ldrb	r0, [r0]
   16d34:	ldr	r1, [fp, #-20]	; 0xffffffec
   16d38:	strb	r0, [r1]
   16d3c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16d40:	ldrb	r0, [r0, #1]
   16d44:	ldr	r1, [fp, #-20]	; 0xffffffec
   16d48:	strb	r0, [r1, #1]
   16d4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   16d50:	sub	r0, r0, #2
   16d54:	str	r0, [fp, #-20]	; 0xffffffec
   16d58:	ldr	r0, [fp, #-16]
   16d5c:	ldr	r1, [fp, #-12]
   16d60:	mov	r2, #100	; 0x64
   16d64:	mov	r3, #0
   16d68:	str	r2, [sp, #120]	; 0x78
   16d6c:	str	r3, [sp, #116]	; 0x74
   16d70:	bl	22084 <flatcc_json_printer_clear@@Base+0x1d90>
   16d74:	ldr	r3, [pc, #1160]	; 17204 <flatcc_json_printer_uint64@@Base+0xbf4>
   16d78:	add	r3, pc, r3
   16d7c:	add	r2, r3, r2, lsl #1
   16d80:	str	r2, [fp, #-28]	; 0xffffffe4
   16d84:	ldr	r2, [fp, #-16]
   16d88:	ldr	r3, [fp, #-12]
   16d8c:	str	r0, [sp, #112]	; 0x70
   16d90:	mov	r0, r2
   16d94:	str	r1, [sp, #108]	; 0x6c
   16d98:	mov	r1, r3
   16d9c:	ldr	r2, [sp, #120]	; 0x78
   16da0:	ldr	r3, [sp, #116]	; 0x74
   16da4:	bl	22084 <flatcc_json_printer_clear@@Base+0x1d90>
   16da8:	str	r1, [fp, #-12]
   16dac:	str	r0, [fp, #-16]
   16db0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16db4:	ldrb	r0, [r0]
   16db8:	ldr	r1, [fp, #-20]	; 0xffffffec
   16dbc:	strb	r0, [r1]
   16dc0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16dc4:	ldrb	r0, [r0, #1]
   16dc8:	ldr	r1, [fp, #-20]	; 0xffffffec
   16dcc:	strb	r0, [r1, #1]
   16dd0:	ldr	r0, [fp, #-20]	; 0xffffffec
   16dd4:	sub	r0, r0, #2
   16dd8:	str	r0, [fp, #-20]	; 0xffffffec
   16ddc:	ldr	r0, [fp, #-16]
   16de0:	ldr	r1, [fp, #-12]
   16de4:	mov	r2, #100	; 0x64
   16de8:	mov	r3, #0
   16dec:	str	r2, [sp, #104]	; 0x68
   16df0:	str	r3, [sp, #100]	; 0x64
   16df4:	bl	22084 <flatcc_json_printer_clear@@Base+0x1d90>
   16df8:	ldr	r3, [pc, #1032]	; 17208 <flatcc_json_printer_uint64@@Base+0xbf8>
   16dfc:	add	r3, pc, r3
   16e00:	add	r2, r3, r2, lsl #1
   16e04:	str	r2, [fp, #-28]	; 0xffffffe4
   16e08:	ldr	r2, [fp, #-16]
   16e0c:	ldr	r3, [fp, #-12]
   16e10:	str	r0, [sp, #96]	; 0x60
   16e14:	mov	r0, r2
   16e18:	str	r1, [sp, #92]	; 0x5c
   16e1c:	mov	r1, r3
   16e20:	ldr	r2, [sp, #104]	; 0x68
   16e24:	ldr	r3, [sp, #100]	; 0x64
   16e28:	bl	22084 <flatcc_json_printer_clear@@Base+0x1d90>
   16e2c:	str	r1, [fp, #-12]
   16e30:	str	r0, [fp, #-16]
   16e34:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16e38:	ldrb	r0, [r0]
   16e3c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16e40:	strb	r0, [r1]
   16e44:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16e48:	ldrb	r0, [r0, #1]
   16e4c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16e50:	strb	r0, [r1, #1]
   16e54:	ldr	r0, [fp, #-20]	; 0xffffffec
   16e58:	sub	r0, r0, #2
   16e5c:	str	r0, [fp, #-20]	; 0xffffffec
   16e60:	ldr	r0, [fp, #-16]
   16e64:	ldr	r1, [fp, #-12]
   16e68:	mov	r2, #100	; 0x64
   16e6c:	mov	r3, #0
   16e70:	str	r2, [sp, #88]	; 0x58
   16e74:	str	r3, [sp, #84]	; 0x54
   16e78:	bl	22084 <flatcc_json_printer_clear@@Base+0x1d90>
   16e7c:	ldr	r3, [pc, #904]	; 1720c <flatcc_json_printer_uint64@@Base+0xbfc>
   16e80:	add	r3, pc, r3
   16e84:	add	r2, r3, r2, lsl #1
   16e88:	str	r2, [fp, #-28]	; 0xffffffe4
   16e8c:	ldr	r2, [fp, #-16]
   16e90:	ldr	r3, [fp, #-12]
   16e94:	str	r0, [sp, #80]	; 0x50
   16e98:	mov	r0, r2
   16e9c:	str	r1, [sp, #76]	; 0x4c
   16ea0:	mov	r1, r3
   16ea4:	ldr	r2, [sp, #88]	; 0x58
   16ea8:	ldr	r3, [sp, #84]	; 0x54
   16eac:	bl	22084 <flatcc_json_printer_clear@@Base+0x1d90>
   16eb0:	str	r1, [fp, #-12]
   16eb4:	str	r0, [fp, #-16]
   16eb8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16ebc:	ldrb	r0, [r0]
   16ec0:	ldr	r1, [fp, #-20]	; 0xffffffec
   16ec4:	strb	r0, [r1]
   16ec8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16ecc:	ldrb	r0, [r0, #1]
   16ed0:	ldr	r1, [fp, #-20]	; 0xffffffec
   16ed4:	strb	r0, [r1, #1]
   16ed8:	ldr	r0, [fp, #-20]	; 0xffffffec
   16edc:	sub	r0, r0, #2
   16ee0:	str	r0, [fp, #-20]	; 0xffffffec
   16ee4:	ldr	r0, [fp, #-16]
   16ee8:	ldr	r1, [fp, #-12]
   16eec:	mov	r2, #100	; 0x64
   16ef0:	mov	r3, #0
   16ef4:	str	r2, [sp, #72]	; 0x48
   16ef8:	str	r3, [sp, #68]	; 0x44
   16efc:	bl	22084 <flatcc_json_printer_clear@@Base+0x1d90>
   16f00:	ldr	r3, [pc, #776]	; 17210 <flatcc_json_printer_uint64@@Base+0xc00>
   16f04:	add	r3, pc, r3
   16f08:	add	r2, r3, r2, lsl #1
   16f0c:	str	r2, [fp, #-28]	; 0xffffffe4
   16f10:	ldr	r2, [fp, #-16]
   16f14:	ldr	r3, [fp, #-12]
   16f18:	str	r0, [sp, #64]	; 0x40
   16f1c:	mov	r0, r2
   16f20:	str	r1, [sp, #60]	; 0x3c
   16f24:	mov	r1, r3
   16f28:	ldr	r2, [sp, #72]	; 0x48
   16f2c:	ldr	r3, [sp, #68]	; 0x44
   16f30:	bl	22084 <flatcc_json_printer_clear@@Base+0x1d90>
   16f34:	str	r1, [fp, #-12]
   16f38:	str	r0, [fp, #-16]
   16f3c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16f40:	ldrb	r0, [r0]
   16f44:	ldr	r1, [fp, #-20]	; 0xffffffec
   16f48:	strb	r0, [r1]
   16f4c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16f50:	ldrb	r0, [r0, #1]
   16f54:	ldr	r1, [fp, #-20]	; 0xffffffec
   16f58:	strb	r0, [r1, #1]
   16f5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   16f60:	sub	r0, r0, #2
   16f64:	str	r0, [fp, #-20]	; 0xffffffec
   16f68:	ldr	r0, [fp, #-16]
   16f6c:	ldr	r1, [fp, #-12]
   16f70:	mov	r2, #100	; 0x64
   16f74:	mov	r3, #0
   16f78:	str	r2, [sp, #56]	; 0x38
   16f7c:	str	r3, [sp, #52]	; 0x34
   16f80:	bl	22084 <flatcc_json_printer_clear@@Base+0x1d90>
   16f84:	ldr	r3, [pc, #648]	; 17214 <flatcc_json_printer_uint64@@Base+0xc04>
   16f88:	add	r3, pc, r3
   16f8c:	add	r2, r3, r2, lsl #1
   16f90:	str	r2, [fp, #-28]	; 0xffffffe4
   16f94:	ldr	r2, [fp, #-16]
   16f98:	ldr	r3, [fp, #-12]
   16f9c:	str	r0, [sp, #48]	; 0x30
   16fa0:	mov	r0, r2
   16fa4:	str	r1, [sp, #44]	; 0x2c
   16fa8:	mov	r1, r3
   16fac:	ldr	r2, [sp, #56]	; 0x38
   16fb0:	ldr	r3, [sp, #52]	; 0x34
   16fb4:	bl	22084 <flatcc_json_printer_clear@@Base+0x1d90>
   16fb8:	str	r1, [fp, #-12]
   16fbc:	str	r0, [fp, #-16]
   16fc0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16fc4:	ldrb	r0, [r0]
   16fc8:	ldr	r1, [fp, #-20]	; 0xffffffec
   16fcc:	strb	r0, [r1]
   16fd0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16fd4:	ldrb	r0, [r0, #1]
   16fd8:	ldr	r1, [fp, #-20]	; 0xffffffec
   16fdc:	strb	r0, [r1, #1]
   16fe0:	b	16fe4 <flatcc_json_printer_uint64@@Base+0x9d4>
   16fe4:	ldr	r0, [fp, #-20]	; 0xffffffec
   16fe8:	sub	r0, r0, #2
   16fec:	str	r0, [fp, #-20]	; 0xffffffec
   16ff0:	ldr	r0, [fp, #-16]
   16ff4:	ldr	r1, [fp, #-12]
   16ff8:	mov	r2, #100	; 0x64
   16ffc:	mov	r3, #0
   17000:	str	r2, [sp, #40]	; 0x28
   17004:	str	r3, [sp, #36]	; 0x24
   17008:	bl	22084 <flatcc_json_printer_clear@@Base+0x1d90>
   1700c:	ldr	r3, [pc, #516]	; 17218 <flatcc_json_printer_uint64@@Base+0xc08>
   17010:	add	r3, pc, r3
   17014:	add	r2, r3, r2, lsl #1
   17018:	str	r2, [fp, #-28]	; 0xffffffe4
   1701c:	ldr	r2, [fp, #-16]
   17020:	ldr	lr, [fp, #-12]
   17024:	str	r0, [sp, #32]
   17028:	mov	r0, r2
   1702c:	str	r1, [sp, #28]
   17030:	mov	r1, lr
   17034:	ldr	r2, [sp, #40]	; 0x28
   17038:	ldr	lr, [sp, #36]	; 0x24
   1703c:	str	r3, [sp, #24]
   17040:	mov	r3, lr
   17044:	bl	22084 <flatcc_json_printer_clear@@Base+0x1d90>
   17048:	str	r1, [fp, #-12]
   1704c:	str	r0, [fp, #-16]
   17050:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17054:	ldrb	r0, [r0]
   17058:	ldr	r1, [fp, #-20]	; 0xffffffec
   1705c:	strb	r0, [r1]
   17060:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17064:	ldrb	r0, [r0, #1]
   17068:	ldr	r1, [fp, #-20]	; 0xffffffec
   1706c:	strb	r0, [r1, #1]
   17070:	ldr	r0, [fp, #-20]	; 0xffffffec
   17074:	sub	r0, r0, #2
   17078:	str	r0, [fp, #-20]	; 0xffffffec
   1707c:	ldr	r0, [fp, #-16]
   17080:	ldr	r1, [fp, #-12]
   17084:	ldr	r2, [sp, #40]	; 0x28
   17088:	ldr	r3, [sp, #36]	; 0x24
   1708c:	bl	22084 <flatcc_json_printer_clear@@Base+0x1d90>
   17090:	ldr	r3, [sp, #24]
   17094:	add	r2, r3, r2, lsl #1
   17098:	str	r2, [fp, #-28]	; 0xffffffe4
   1709c:	ldr	r2, [fp, #-16]
   170a0:	ldr	lr, [fp, #-12]
   170a4:	str	r0, [sp, #20]
   170a8:	mov	r0, r2
   170ac:	str	r1, [sp, #16]
   170b0:	mov	r1, lr
   170b4:	ldr	r2, [sp, #40]	; 0x28
   170b8:	ldr	r3, [sp, #36]	; 0x24
   170bc:	bl	22084 <flatcc_json_printer_clear@@Base+0x1d90>
   170c0:	str	r1, [fp, #-12]
   170c4:	str	r0, [fp, #-16]
   170c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   170cc:	ldrb	r0, [r0]
   170d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   170d4:	strb	r0, [r1]
   170d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   170dc:	ldrb	r0, [r0, #1]
   170e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   170e4:	strb	r0, [r1, #1]
   170e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   170ec:	sub	r0, r0, #2
   170f0:	str	r0, [fp, #-20]	; 0xffffffec
   170f4:	ldr	r0, [fp, #-16]
   170f8:	ldr	r1, [fp, #-12]
   170fc:	ldr	r2, [sp, #40]	; 0x28
   17100:	ldr	r3, [sp, #36]	; 0x24
   17104:	bl	22084 <flatcc_json_printer_clear@@Base+0x1d90>
   17108:	ldr	r3, [sp, #24]
   1710c:	add	r2, r3, r2, lsl #1
   17110:	str	r2, [fp, #-28]	; 0xffffffe4
   17114:	ldr	r2, [fp, #-16]
   17118:	ldr	lr, [fp, #-12]
   1711c:	str	r0, [sp, #12]
   17120:	mov	r0, r2
   17124:	str	r1, [sp, #8]
   17128:	mov	r1, lr
   1712c:	ldr	r2, [sp, #40]	; 0x28
   17130:	ldr	r3, [sp, #36]	; 0x24
   17134:	bl	22084 <flatcc_json_printer_clear@@Base+0x1d90>
   17138:	str	r1, [fp, #-12]
   1713c:	str	r0, [fp, #-16]
   17140:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17144:	ldrb	r0, [r0]
   17148:	ldr	r1, [fp, #-20]	; 0xffffffec
   1714c:	strb	r0, [r1]
   17150:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17154:	ldrb	r0, [r0, #1]
   17158:	ldr	r1, [fp, #-20]	; 0xffffffec
   1715c:	strb	r0, [r1, #1]
   17160:	ldr	r0, [fp, #-20]	; 0xffffffec
   17164:	sub	r0, r0, #2
   17168:	str	r0, [fp, #-20]	; 0xffffffec
   1716c:	ldr	r0, [fp, #-16]
   17170:	ldr	r1, [fp, #-12]
   17174:	ldr	r2, [sp, #40]	; 0x28
   17178:	ldr	r3, [sp, #36]	; 0x24
   1717c:	bl	22084 <flatcc_json_printer_clear@@Base+0x1d90>
   17180:	ldr	r3, [sp, #24]
   17184:	add	r2, r3, r2, lsl #1
   17188:	str	r2, [fp, #-28]	; 0xffffffe4
   1718c:	ldr	r2, [fp, #-16]
   17190:	ldr	lr, [fp, #-12]
   17194:	str	r0, [sp, #4]
   17198:	mov	r0, r2
   1719c:	str	r1, [sp]
   171a0:	mov	r1, lr
   171a4:	ldr	r2, [sp, #40]	; 0x28
   171a8:	ldr	r3, [sp, #36]	; 0x24
   171ac:	bl	22084 <flatcc_json_printer_clear@@Base+0x1d90>
   171b0:	str	r1, [fp, #-12]
   171b4:	str	r0, [fp, #-16]
   171b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   171bc:	ldrb	r0, [r0]
   171c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   171c4:	strb	r0, [r1]
   171c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   171cc:	ldrb	r0, [r0, #1]
   171d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   171d4:	strb	r0, [r1, #1]
   171d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171dc:	str	r0, [fp, #-4]
   171e0:	ldr	r0, [fp, #-4]
   171e4:	mov	sp, fp
   171e8:	pop	{fp, pc}
   171ec:	andeq	ip, r0, r0, lsl #22
   171f0:	andeq	ip, r0, ip, ror sl
   171f4:	strdeq	ip, [r0], -r8
   171f8:	andeq	ip, r0, r4, ror r9
   171fc:	strdeq	ip, [r0], -r0
   17200:	andeq	ip, r0, r0, asr #15
   17204:	andeq	ip, r0, ip, lsr r7
   17208:			; <UNDEFINED> instruction: 0x0000c6b8
   1720c:	andeq	ip, r0, r4, lsr r6
   17210:			; <UNDEFINED> instruction: 0x0000c5b0
   17214:	andeq	ip, r0, ip, lsr #10
   17218:	andeq	ip, r0, r4, lsr #9

0001721c <flatcc_json_printer_int8@@Base>:
   1721c:	push	{fp, lr}
   17220:	mov	fp, sp
   17224:	sub	sp, sp, #8
   17228:	str	r0, [sp, #4]
   1722c:	strb	r1, [sp, #3]
   17230:	ldrb	r0, [sp, #3]
   17234:	ldr	r1, [sp, #4]
   17238:	ldr	r1, [r1, #20]
   1723c:	sxtb	r0, r0
   17240:	bl	1725c <flatcc_json_printer_int8@@Base+0x40>
   17244:	ldr	r1, [sp, #4]
   17248:	ldr	lr, [r1, #20]
   1724c:	add	r0, lr, r0
   17250:	str	r0, [r1, #20]
   17254:	mov	sp, fp
   17258:	pop	{fp, pc}
   1725c:	push	{fp, lr}
   17260:	mov	fp, sp
   17264:	sub	sp, sp, #16
   17268:	strb	r0, [fp, #-1]
   1726c:	str	r1, [sp, #8]
   17270:	ldrsb	r0, [fp, #-1]
   17274:	cmp	r0, #0
   17278:	movw	r0, #0
   1727c:	movlt	r0, #1
   17280:	and	r1, r0, #1
   17284:	str	r1, [sp, #4]
   17288:	tst	r0, #1
   1728c:	beq	172b4 <flatcc_json_printer_int8@@Base+0x98>
   17290:	ldr	r0, [sp, #8]
   17294:	add	r1, r0, #1
   17298:	str	r1, [sp, #8]
   1729c:	movw	r1, #45	; 0x2d
   172a0:	strb	r1, [r0]
   172a4:	ldrsb	r0, [fp, #-1]
   172a8:	movw	r1, #0
   172ac:	sub	r0, r1, r0
   172b0:	strb	r0, [fp, #-1]
   172b4:	ldrb	r0, [fp, #-1]
   172b8:	ldr	r1, [sp, #8]
   172bc:	and	r0, r0, #255	; 0xff
   172c0:	bl	15ac0 <flatcc_json_printer_uint8@@Base+0x40>
   172c4:	ldr	r1, [sp, #4]
   172c8:	add	r0, r0, r1
   172cc:	mov	sp, fp
   172d0:	pop	{fp, pc}

000172d4 <flatcc_json_printer_int16@@Base>:
   172d4:	push	{fp, lr}
   172d8:	mov	fp, sp
   172dc:	sub	sp, sp, #8
   172e0:	str	r0, [sp, #4]
   172e4:	strh	r1, [sp, #2]
   172e8:	ldrh	r0, [sp, #2]
   172ec:	ldr	r1, [sp, #4]
   172f0:	ldr	r1, [r1, #20]
   172f4:	sxth	r0, r0
   172f8:	bl	17314 <flatcc_json_printer_int16@@Base+0x40>
   172fc:	ldr	r1, [sp, #4]
   17300:	ldr	lr, [r1, #20]
   17304:	add	r0, lr, r0
   17308:	str	r0, [r1, #20]
   1730c:	mov	sp, fp
   17310:	pop	{fp, pc}
   17314:	push	{fp, lr}
   17318:	mov	fp, sp
   1731c:	sub	sp, sp, #16
   17320:	strh	r0, [fp, #-2]
   17324:	str	r1, [sp, #8]
   17328:	ldrsh	r0, [fp, #-2]
   1732c:	cmp	r0, #0
   17330:	movw	r0, #0
   17334:	movlt	r0, #1
   17338:	and	r1, r0, #1
   1733c:	str	r1, [sp, #4]
   17340:	tst	r0, #1
   17344:	beq	1736c <flatcc_json_printer_int16@@Base+0x98>
   17348:	ldr	r0, [sp, #8]
   1734c:	add	r1, r0, #1
   17350:	str	r1, [sp, #8]
   17354:	movw	r1, #45	; 0x2d
   17358:	strb	r1, [r0]
   1735c:	ldrsh	r0, [fp, #-2]
   17360:	movw	r1, #0
   17364:	sub	r0, r1, r0
   17368:	strh	r0, [fp, #-2]
   1736c:	ldrh	r0, [fp, #-2]
   17370:	ldr	r1, [sp, #8]
   17374:	uxth	r0, r0
   17378:	bl	15c9c <flatcc_json_printer_uint16@@Base+0x40>
   1737c:	ldr	r1, [sp, #4]
   17380:	add	r0, r0, r1
   17384:	mov	sp, fp
   17388:	pop	{fp, pc}

0001738c <flatcc_json_printer_int32@@Base>:
   1738c:	push	{fp, lr}
   17390:	mov	fp, sp
   17394:	sub	sp, sp, #8
   17398:	str	r0, [sp, #4]
   1739c:	str	r1, [sp]
   173a0:	ldr	r0, [sp]
   173a4:	ldr	r1, [sp, #4]
   173a8:	ldr	r1, [r1, #20]
   173ac:	bl	173c8 <flatcc_json_printer_int32@@Base+0x3c>
   173b0:	ldr	r1, [sp, #4]
   173b4:	ldr	lr, [r1, #20]
   173b8:	add	r0, lr, r0
   173bc:	str	r0, [r1, #20]
   173c0:	mov	sp, fp
   173c4:	pop	{fp, pc}
   173c8:	push	{fp, lr}
   173cc:	mov	fp, sp
   173d0:	sub	sp, sp, #16
   173d4:	str	r0, [fp, #-4]
   173d8:	str	r1, [sp, #8]
   173dc:	ldr	r0, [fp, #-4]
   173e0:	cmp	r0, #0
   173e4:	movw	r0, #0
   173e8:	movlt	r0, #1
   173ec:	and	r1, r0, #1
   173f0:	str	r1, [sp, #4]
   173f4:	tst	r0, #1
   173f8:	beq	17420 <flatcc_json_printer_int32@@Base+0x94>
   173fc:	ldr	r0, [sp, #8]
   17400:	add	r1, r0, #1
   17404:	str	r1, [sp, #8]
   17408:	movw	r1, #45	; 0x2d
   1740c:	strb	r1, [r0]
   17410:	ldr	r0, [fp, #-4]
   17414:	movw	r1, #0
   17418:	sub	r0, r1, r0
   1741c:	str	r0, [fp, #-4]
   17420:	ldr	r0, [fp, #-4]
   17424:	ldr	r1, [sp, #8]
   17428:	bl	15fe0 <flatcc_json_printer_uint32@@Base+0x3c>
   1742c:	ldr	r1, [sp, #4]
   17430:	add	r0, r0, r1
   17434:	mov	sp, fp
   17438:	pop	{fp, pc}

0001743c <flatcc_json_printer_int64@@Base>:
   1743c:	push	{fp, lr}
   17440:	mov	fp, sp
   17444:	sub	sp, sp, #16
   17448:	str	r0, [fp, #-4]
   1744c:	str	r3, [sp, #4]
   17450:	str	r2, [sp]
   17454:	ldr	r0, [sp]
   17458:	ldr	r1, [sp, #4]
   1745c:	ldr	r2, [fp, #-4]
   17460:	ldr	r2, [r2, #20]
   17464:	bl	17480 <flatcc_json_printer_int64@@Base+0x44>
   17468:	ldr	r1, [fp, #-4]
   1746c:	ldr	r2, [r1, #20]
   17470:	add	r0, r2, r0
   17474:	str	r0, [r1, #20]
   17478:	mov	sp, fp
   1747c:	pop	{fp, pc}
   17480:	push	{fp, lr}
   17484:	mov	fp, sp
   17488:	sub	sp, sp, #16
   1748c:	str	r0, [sp, #8]
   17490:	str	r1, [sp, #12]
   17494:	str	r2, [sp, #4]
   17498:	ldr	r0, [sp, #12]
   1749c:	lsr	r0, r0, #31
   174a0:	and	r1, r0, #1
   174a4:	str	r1, [sp]
   174a8:	tst	r0, #1
   174ac:	beq	174dc <flatcc_json_printer_int64@@Base+0xa0>
   174b0:	ldr	r0, [sp, #4]
   174b4:	add	r1, r0, #1
   174b8:	str	r1, [sp, #4]
   174bc:	mov	r1, #45	; 0x2d
   174c0:	strb	r1, [r0]
   174c4:	ldr	r0, [sp, #8]
   174c8:	ldr	r1, [sp, #12]
   174cc:	rsbs	r0, r0, #0
   174d0:	rsc	r1, r1, #0
   174d4:	str	r0, [sp, #8]
   174d8:	str	r1, [sp, #12]
   174dc:	ldr	r0, [sp, #8]
   174e0:	ldr	r1, [sp, #12]
   174e4:	ldr	r2, [sp, #4]
   174e8:	bl	16654 <flatcc_json_printer_uint64@@Base+0x44>
   174ec:	ldr	r1, [sp]
   174f0:	add	r0, r0, r1
   174f4:	mov	sp, fp
   174f8:	pop	{fp, pc}

000174fc <flatcc_json_printer_float@@Base>:
   174fc:	push	{fp, lr}
   17500:	mov	fp, sp
   17504:	sub	sp, sp, #8
   17508:	str	r0, [sp, #4]
   1750c:	vstr	s0, [sp]
   17510:	vldr	s0, [sp]
   17514:	vcvt.f64.f32	d0, s0
   17518:	ldr	r0, [sp, #4]
   1751c:	ldr	r0, [r0, #20]
   17520:	bl	14e50 <flatcc_json_printer_fmt_float@@Base+0x2c>
   17524:	ldr	lr, [sp, #4]
   17528:	ldr	r1, [lr, #20]
   1752c:	add	r0, r1, r0
   17530:	str	r0, [lr, #20]
   17534:	mov	sp, fp
   17538:	pop	{fp, pc}

0001753c <flatcc_json_printer_double@@Base>:
   1753c:	push	{fp, lr}
   17540:	mov	fp, sp
   17544:	sub	sp, sp, #16
   17548:	str	r0, [fp, #-4]
   1754c:	vstr	d0, [sp]
   17550:	vldr	d0, [sp]
   17554:	ldr	r0, [fp, #-4]
   17558:	ldr	r0, [r0, #20]
   1755c:	bl	14e50 <flatcc_json_printer_fmt_float@@Base+0x2c>
   17560:	ldr	lr, [fp, #-4]
   17564:	ldr	r1, [lr, #20]
   17568:	add	r0, r1, r0
   1756c:	str	r0, [lr, #20]
   17570:	mov	sp, fp
   17574:	pop	{fp, pc}

00017578 <flatcc_json_printer_enum@@Base>:
   17578:	push	{fp, lr}
   1757c:	mov	fp, sp
   17580:	sub	sp, sp, #16
   17584:	str	r0, [fp, #-4]
   17588:	str	r1, [sp, #8]
   1758c:	str	r2, [sp, #4]
   17590:	ldr	r0, [fp, #-4]
   17594:	ldr	r1, [sp, #8]
   17598:	ldr	r2, [sp, #4]
   1759c:	bl	175a8 <flatcc_json_printer_enum@@Base+0x30>
   175a0:	mov	sp, fp
   175a4:	pop	{fp, pc}
   175a8:	push	{fp, lr}
   175ac:	mov	fp, sp
   175b0:	sub	sp, sp, #16
   175b4:	str	r0, [fp, #-4]
   175b8:	str	r1, [sp, #8]
   175bc:	str	r2, [sp, #4]
   175c0:	ldr	r0, [fp, #-4]
   175c4:	ldr	r0, [r0, #20]
   175c8:	movw	r1, #34	; 0x22
   175cc:	strb	r1, [r0]
   175d0:	ldr	r0, [fp, #-4]
   175d4:	ldrsb	r0, [r0, #26]
   175d8:	cmp	r0, #0
   175dc:	movw	r0, #0
   175e0:	movne	r0, #1
   175e4:	mvn	r1, #0
   175e8:	eor	r0, r0, r1
   175ec:	and	r0, r0, #1
   175f0:	ldr	r1, [fp, #-4]
   175f4:	ldr	r2, [r1, #20]
   175f8:	add	r0, r2, r0
   175fc:	str	r0, [r1, #20]
   17600:	ldr	r0, [fp, #-4]
   17604:	ldr	r0, [r0, #20]
   17608:	ldr	r1, [sp, #4]
   1760c:	add	r0, r0, r1
   17610:	ldr	r1, [fp, #-4]
   17614:	ldr	r1, [r1, #16]
   17618:	cmp	r0, r1
   1761c:	bcs	1764c <flatcc_json_printer_enum@@Base+0xd4>
   17620:	ldr	r0, [fp, #-4]
   17624:	ldr	r0, [r0, #20]
   17628:	ldr	r1, [sp, #8]
   1762c:	ldr	r2, [sp, #4]
   17630:	bl	128ac <memcpy@plt>
   17634:	ldr	r0, [sp, #4]
   17638:	ldr	r1, [fp, #-4]
   1763c:	ldr	r2, [r1, #20]
   17640:	add	r0, r2, r0
   17644:	str	r0, [r1, #20]
   17648:	b	1765c <flatcc_json_printer_enum@@Base+0xe4>
   1764c:	ldr	r0, [fp, #-4]
   17650:	ldr	r1, [sp, #8]
   17654:	ldr	r2, [sp, #4]
   17658:	bl	15864 <flatcc_json_printer_write@@Base+0x30>
   1765c:	ldr	r0, [fp, #-4]
   17660:	ldr	r0, [r0, #20]
   17664:	movw	r1, #34	; 0x22
   17668:	strb	r1, [r0]
   1766c:	ldr	r0, [fp, #-4]
   17670:	ldrsb	r0, [r0, #26]
   17674:	cmp	r0, #0
   17678:	movw	r0, #0
   1767c:	movne	r0, #1
   17680:	mvn	r1, #0
   17684:	eor	r0, r0, r1
   17688:	and	r0, r0, #1
   1768c:	ldr	r1, [fp, #-4]
   17690:	ldr	r2, [r1, #20]
   17694:	add	r0, r2, r0
   17698:	str	r0, [r1, #20]
   1769c:	mov	sp, fp
   176a0:	pop	{fp, pc}

000176a4 <flatcc_json_printer_delimit_enum_flags@@Base>:
   176a4:	sub	sp, sp, #16
   176a8:	str	r0, [sp, #12]
   176ac:	str	r1, [sp, #8]
   176b0:	ldr	r0, [sp, #12]
   176b4:	ldrsb	r0, [r0, #26]
   176b8:	cmp	r0, #0
   176bc:	movw	r0, #1
   176c0:	str	r0, [sp]
   176c4:	beq	176dc <flatcc_json_printer_delimit_enum_flags@@Base+0x38>
   176c8:	ldr	r0, [sp, #8]
   176cc:	cmp	r0, #0
   176d0:	movw	r0, #0
   176d4:	movne	r0, #1
   176d8:	str	r0, [sp]
   176dc:	ldr	r0, [sp]
   176e0:	and	r0, r0, #1
   176e4:	str	r0, [sp, #4]
   176e8:	ldr	r0, [sp, #12]
   176ec:	ldr	r0, [r0, #20]
   176f0:	movw	r1, #34	; 0x22
   176f4:	strb	r1, [r0]
   176f8:	ldr	r0, [sp, #4]
   176fc:	ldr	r1, [sp, #12]
   17700:	ldr	r2, [r1, #20]
   17704:	add	r0, r2, r0
   17708:	str	r0, [r1, #20]
   1770c:	add	sp, sp, #16
   17710:	bx	lr

00017714 <flatcc_json_printer_enum_flag@@Base>:
   17714:	push	{fp, lr}
   17718:	mov	fp, sp
   1771c:	sub	sp, sp, #16
   17720:	str	r0, [fp, #-4]
   17724:	str	r1, [sp, #8]
   17728:	str	r2, [sp, #4]
   1772c:	str	r3, [sp]
   17730:	ldr	r0, [fp, #-4]
   17734:	ldr	r0, [r0, #20]
   17738:	movw	r1, #32
   1773c:	strb	r1, [r0]
   17740:	ldr	r0, [sp, #8]
   17744:	cmp	r0, #0
   17748:	movw	r0, #0
   1774c:	movgt	r0, #1
   17750:	and	r0, r0, #1
   17754:	ldr	r1, [fp, #-4]
   17758:	ldr	r2, [r1, #20]
   1775c:	add	r0, r2, r0
   17760:	str	r0, [r1, #20]
   17764:	ldr	r0, [fp, #-4]
   17768:	ldr	r1, [sp, #4]
   1776c:	ldr	r2, [sp]
   17770:	bl	15864 <flatcc_json_printer_write@@Base+0x30>
   17774:	mov	sp, fp
   17778:	pop	{fp, pc}

0001777c <flatcc_json_printer_string_field@@Base>:
   1777c:	push	{fp, lr}
   17780:	mov	fp, sp
   17784:	sub	sp, sp, #32
   17788:	ldr	ip, [fp, #8]
   1778c:	str	r0, [fp, #-4]
   17790:	str	r1, [fp, #-8]
   17794:	str	r2, [fp, #-12]
   17798:	str	r3, [sp, #16]
   1779c:	ldr	r0, [fp, #-8]
   177a0:	ldr	r1, [fp, #-12]
   177a4:	str	ip, [sp, #8]
   177a8:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   177ac:	str	r0, [sp, #12]
   177b0:	ldr	r0, [sp, #12]
   177b4:	movw	r1, #0
   177b8:	cmp	r0, r1
   177bc:	beq	17828 <flatcc_json_printer_string_field@@Base+0xac>
   177c0:	ldr	r0, [fp, #-8]
   177c4:	ldr	r1, [r0, #16]
   177c8:	add	r2, r1, #1
   177cc:	str	r2, [r0, #16]
   177d0:	cmp	r1, #0
   177d4:	beq	177f0 <flatcc_json_printer_string_field@@Base+0x74>
   177d8:	ldr	r0, [fp, #-4]
   177dc:	ldr	r1, [r0, #20]
   177e0:	add	r2, r1, #1
   177e4:	str	r2, [r0, #20]
   177e8:	movw	r0, #44	; 0x2c
   177ec:	strb	r0, [r1]
   177f0:	ldr	r0, [fp, #-4]
   177f4:	ldr	r1, [sp, #16]
   177f8:	ldr	r2, [fp, #8]
   177fc:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   17800:	ldr	r0, [fp, #-4]
   17804:	ldr	r1, [sp, #12]
   17808:	str	r0, [sp, #4]
   1780c:	mov	r0, r1
   17810:	bl	179d4 <flatcc_json_printer_string_field@@Base+0x258>
   17814:	ldr	r1, [sp, #4]
   17818:	str	r0, [sp]
   1781c:	mov	r0, r1
   17820:	ldr	r1, [sp]
   17824:	bl	17990 <flatcc_json_printer_string_field@@Base+0x214>
   17828:	mov	sp, fp
   1782c:	pop	{fp, pc}
   17830:	push	{fp, lr}
   17834:	mov	fp, sp
   17838:	sub	sp, sp, #16
   1783c:	str	r0, [sp, #8]
   17840:	str	r1, [sp, #4]
   17844:	ldr	r0, [sp, #4]
   17848:	add	r0, r0, #2
   1784c:	lsl	r0, r0, #1
   17850:	str	r0, [sp]
   17854:	ldr	r0, [sp]
   17858:	ldr	r1, [sp, #8]
   1785c:	ldr	r1, [r1, #8]
   17860:	cmp	r0, r1
   17864:	blt	17874 <flatcc_json_printer_string_field@@Base+0xf8>
   17868:	movw	r0, #0
   1786c:	str	r0, [fp, #-4]
   17870:	b	178b8 <flatcc_json_printer_string_field@@Base+0x13c>
   17874:	ldr	r0, [sp, #8]
   17878:	ldr	r0, [r0, #4]
   1787c:	ldr	r1, [sp]
   17880:	bl	21a38 <flatcc_json_printer_clear@@Base+0x1744>
   17884:	uxth	r0, r0
   17888:	str	r0, [sp]
   1788c:	ldr	r0, [sp]
   17890:	cmp	r0, #0
   17894:	bne	178a4 <flatcc_json_printer_string_field@@Base+0x128>
   17898:	movw	r0, #0
   1789c:	str	r0, [fp, #-4]
   178a0:	b	178b8 <flatcc_json_printer_string_field@@Base+0x13c>
   178a4:	ldr	r0, [sp, #8]
   178a8:	ldr	r0, [r0]
   178ac:	ldr	r1, [sp]
   178b0:	add	r0, r0, r1
   178b4:	str	r0, [fp, #-4]
   178b8:	ldr	r0, [fp, #-4]
   178bc:	mov	sp, fp
   178c0:	pop	{fp, pc}
   178c4:	push	{fp, lr}
   178c8:	mov	fp, sp
   178cc:	sub	sp, sp, #16
   178d0:	str	r0, [fp, #-4]
   178d4:	str	r1, [sp, #8]
   178d8:	str	r2, [sp, #4]
   178dc:	ldr	r0, [fp, #-4]
   178e0:	ldrsb	r0, [r0, #25]
   178e4:	cmp	r0, #0
   178e8:	beq	17910 <flatcc_json_printer_string_field@@Base+0x194>
   178ec:	ldr	r0, [fp, #-4]
   178f0:	ldr	r1, [r0, #20]
   178f4:	add	r2, r1, #1
   178f8:	str	r2, [r0, #20]
   178fc:	movw	r0, #10
   17900:	strb	r0, [r1]
   17904:	ldr	r0, [fp, #-4]
   17908:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1790c:	b	17918 <flatcc_json_printer_string_field@@Base+0x19c>
   17910:	ldr	r0, [fp, #-4]
   17914:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   17918:	b	1791c <flatcc_json_printer_string_field@@Base+0x1a0>
   1791c:	ldr	r0, [fp, #-4]
   17920:	ldr	r1, [sp, #8]
   17924:	ldr	r2, [sp, #4]
   17928:	bl	175a8 <flatcc_json_printer_enum@@Base+0x30>
   1792c:	ldr	r0, [fp, #-4]
   17930:	ldr	r1, [r0, #20]
   17934:	add	r2, r1, #1
   17938:	str	r2, [r0, #20]
   1793c:	movw	r0, #58	; 0x3a
   17940:	strb	r0, [r1]
   17944:	ldr	r0, [fp, #-4]
   17948:	ldr	r0, [r0, #20]
   1794c:	movw	r1, #32
   17950:	strb	r1, [r0]
   17954:	ldr	r0, [fp, #-4]
   17958:	ldrsb	r0, [r0, #25]
   1795c:	cmp	r0, #0
   17960:	movw	r0, #0
   17964:	movne	r0, #1
   17968:	mvn	r1, #0
   1796c:	eor	r0, r0, r1
   17970:	eor	r0, r0, r1
   17974:	and	r0, r0, #1
   17978:	ldr	r1, [fp, #-4]
   1797c:	ldr	r2, [r1, #20]
   17980:	add	r0, r2, r0
   17984:	str	r0, [r1, #20]
   17988:	mov	sp, fp
   1798c:	pop	{fp, pc}
   17990:	push	{fp, lr}
   17994:	mov	fp, sp
   17998:	sub	sp, sp, #16
   1799c:	str	r0, [fp, #-4]
   179a0:	str	r1, [sp, #8]
   179a4:	ldr	r0, [sp, #8]
   179a8:	bl	1a7d8 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   179ac:	str	r0, [sp, #4]
   179b0:	ldr	r0, [sp, #8]
   179b4:	add	r0, r0, #4
   179b8:	str	r0, [sp]
   179bc:	ldr	r0, [fp, #-4]
   179c0:	ldr	r1, [sp]
   179c4:	ldr	r2, [sp, #4]
   179c8:	bl	154c4 <flatcc_json_printer_string@@Base+0x30>
   179cc:	mov	sp, fp
   179d0:	pop	{fp, pc}
   179d4:	push	{fp, lr}
   179d8:	mov	fp, sp
   179dc:	sub	sp, sp, #8
   179e0:	str	r0, [sp, #4]
   179e4:	ldr	r0, [sp, #4]
   179e8:	ldr	r1, [sp, #4]
   179ec:	str	r0, [sp]
   179f0:	mov	r0, r1
   179f4:	bl	1a7d8 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   179f8:	ldr	r1, [sp]
   179fc:	add	r0, r1, r0
   17a00:	mov	sp, fp
   17a04:	pop	{fp, pc}

00017a08 <flatcc_json_printer_uint8_vector_base64_field@@Base>:
   17a08:	push	{fp, lr}
   17a0c:	mov	fp, sp
   17a10:	sub	sp, sp, #40	; 0x28
   17a14:	ldr	ip, [fp, #12]
   17a18:	ldr	lr, [fp, #8]
   17a1c:	str	r0, [fp, #-4]
   17a20:	str	r1, [fp, #-8]
   17a24:	str	r2, [fp, #-12]
   17a28:	str	r3, [fp, #-16]
   17a2c:	ldr	r0, [fp, #-8]
   17a30:	ldr	r1, [fp, #-12]
   17a34:	str	lr, [sp, #12]
   17a38:	str	ip, [sp, #8]
   17a3c:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   17a40:	str	r0, [sp, #20]
   17a44:	ldr	r0, [fp, #12]
   17a48:	cmp	r0, #0
   17a4c:	movw	r0, #0
   17a50:	movne	r0, #1
   17a54:	tst	r0, #1
   17a58:	movw	r0, #1
   17a5c:	moveq	r0, #0
   17a60:	str	r0, [sp, #16]
   17a64:	ldr	r0, [sp, #16]
   17a68:	orr	r0, r0, #128	; 0x80
   17a6c:	str	r0, [sp, #16]
   17a70:	ldr	r0, [sp, #20]
   17a74:	movw	r1, #0
   17a78:	cmp	r0, r1
   17a7c:	beq	17aec <flatcc_json_printer_uint8_vector_base64_field@@Base+0xe4>
   17a80:	ldr	r0, [fp, #-8]
   17a84:	ldr	r1, [r0, #16]
   17a88:	add	r2, r1, #1
   17a8c:	str	r2, [r0, #16]
   17a90:	cmp	r1, #0
   17a94:	beq	17ab0 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xa8>
   17a98:	ldr	r0, [fp, #-4]
   17a9c:	ldr	r1, [r0, #20]
   17aa0:	add	r2, r1, #1
   17aa4:	str	r2, [r0, #20]
   17aa8:	movw	r0, #44	; 0x2c
   17aac:	strb	r0, [r1]
   17ab0:	ldr	r0, [fp, #-4]
   17ab4:	ldr	r1, [fp, #-16]
   17ab8:	ldr	r2, [fp, #8]
   17abc:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   17ac0:	ldr	r0, [fp, #-4]
   17ac4:	ldr	r1, [sp, #20]
   17ac8:	str	r0, [sp, #4]
   17acc:	mov	r0, r1
   17ad0:	bl	179d4 <flatcc_json_printer_string_field@@Base+0x258>
   17ad4:	ldr	r2, [sp, #16]
   17ad8:	ldr	r1, [sp, #4]
   17adc:	str	r0, [sp]
   17ae0:	mov	r0, r1
   17ae4:	ldr	r1, [sp]
   17ae8:	bl	17af4 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xec>
   17aec:	mov	sp, fp
   17af0:	pop	{fp, pc}
   17af4:	push	{fp, lr}
   17af8:	mov	fp, sp
   17afc:	sub	sp, sp, #72	; 0x48
   17b00:	str	r0, [fp, #-4]
   17b04:	str	r1, [fp, #-8]
   17b08:	str	r2, [fp, #-12]
   17b0c:	ldr	r0, [fp, #-12]
   17b10:	mvn	r1, #128	; 0x80
   17b14:	and	r0, r0, r1
   17b18:	str	r0, [fp, #-16]
   17b1c:	ldr	r0, [fp, #-8]
   17b20:	bl	1a7d8 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   17b24:	str	r0, [sp, #36]	; 0x24
   17b28:	ldr	r0, [fp, #-8]
   17b2c:	add	r0, r0, #4
   17b30:	str	r0, [fp, #-32]	; 0xffffffe0
   17b34:	ldr	r0, [fp, #-4]
   17b38:	ldr	r1, [r0, #20]
   17b3c:	add	r2, r1, #1
   17b40:	str	r2, [r0, #20]
   17b44:	movw	r0, #34	; 0x22
   17b48:	strb	r0, [r1]
   17b4c:	ldr	r0, [sp, #36]	; 0x24
   17b50:	ldr	r1, [fp, #-12]
   17b54:	bl	21aa4 <flatcc_json_printer_clear@@Base+0x17b0>
   17b58:	str	r0, [fp, #-28]	; 0xffffffe4
   17b5c:	ldr	r0, [fp, #-4]
   17b60:	ldr	r0, [r0, #20]
   17b64:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17b68:	add	r0, r0, r1
   17b6c:	ldr	r1, [fp, #-4]
   17b70:	ldr	r1, [r1, #16]
   17b74:	cmp	r0, r1
   17b78:	bcc	17b9c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x194>
   17b7c:	ldr	r0, [fp, #-4]
   17b80:	ldr	r0, [r0, #44]	; 0x2c
   17b84:	ldr	r1, [fp, #-4]
   17b88:	str	r0, [sp, #28]
   17b8c:	mov	r0, r1
   17b90:	movw	r1, #0
   17b94:	ldr	r2, [sp, #28]
   17b98:	blx	r2
   17b9c:	b	17ba0 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x198>
   17ba0:	ldr	r0, [fp, #-4]
   17ba4:	ldr	r0, [r0, #20]
   17ba8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17bac:	add	r0, r0, r1
   17bb0:	ldr	r1, [fp, #-4]
   17bb4:	ldr	r1, [r1, #16]
   17bb8:	cmp	r0, r1
   17bbc:	bls	17cc4 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x2bc>
   17bc0:	ldr	r0, [fp, #-4]
   17bc4:	ldr	r1, [r0, #16]
   17bc8:	ldr	r0, [r0, #20]
   17bcc:	sub	r0, r1, r0
   17bd0:	bic	r0, r0, #3
   17bd4:	str	r0, [fp, #-20]	; 0xffffffec
   17bd8:	ldr	r0, [fp, #-20]	; 0xffffffec
   17bdc:	add	r0, r0, r0, lsl #1
   17be0:	lsr	r0, r0, #2
   17be4:	str	r0, [fp, #-24]	; 0xffffffe8
   17be8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17bec:	cmp	r0, #0
   17bf0:	bls	17bf8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1f0>
   17bf4:	b	17c18 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x210>
   17bf8:	ldr	r0, [pc, #296]	; 17d28 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x320>
   17bfc:	add	r0, pc, r0
   17c00:	ldr	r1, [pc, #292]	; 17d2c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x324>
   17c04:	add	r1, pc, r1
   17c08:	ldr	r2, [pc, #288]	; 17d30 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x328>
   17c0c:	add	r3, pc, r2
   17c10:	movw	r2, #277	; 0x115
   17c14:	bl	12984 <__assert_fail@plt>
   17c18:	ldr	r0, [fp, #-20]	; 0xffffffec
   17c1c:	add	r0, r0, r0, lsl #1
   17c20:	lsr	r0, r0, #2
   17c24:	str	r0, [sp, #32]
   17c28:	ldr	r0, [fp, #-4]
   17c2c:	ldr	r0, [r0, #20]
   17c30:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17c34:	ldr	r2, [fp, #-16]
   17c38:	movw	r3, #0
   17c3c:	str	r2, [sp, #24]
   17c40:	mov	r2, r3
   17c44:	add	r3, sp, #32
   17c48:	ldr	ip, [sp, #24]
   17c4c:	str	ip, [sp]
   17c50:	bl	21b64 <flatcc_json_printer_clear@@Base+0x1870>
   17c54:	ldr	r1, [fp, #-20]	; 0xffffffec
   17c58:	ldr	r2, [fp, #-4]
   17c5c:	ldr	r3, [r2, #20]
   17c60:	add	r1, r3, r1
   17c64:	str	r1, [r2, #20]
   17c68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17c6c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17c70:	add	r1, r2, r1
   17c74:	str	r1, [fp, #-32]	; 0xffffffe0
   17c78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17c7c:	ldr	r2, [sp, #36]	; 0x24
   17c80:	sub	r1, r2, r1
   17c84:	str	r1, [sp, #36]	; 0x24
   17c88:	ldr	r1, [fp, #-4]
   17c8c:	ldr	r1, [r1, #44]	; 0x2c
   17c90:	ldr	r2, [fp, #-4]
   17c94:	str	r0, [sp, #20]
   17c98:	mov	r0, r2
   17c9c:	movw	r2, #0
   17ca0:	str	r1, [sp, #16]
   17ca4:	mov	r1, r2
   17ca8:	ldr	r2, [sp, #16]
   17cac:	blx	r2
   17cb0:	ldr	r0, [sp, #36]	; 0x24
   17cb4:	ldr	r1, [fp, #-12]
   17cb8:	bl	21aa4 <flatcc_json_printer_clear@@Base+0x17b0>
   17cbc:	str	r0, [fp, #-28]	; 0xffffffe4
   17cc0:	b	17ba0 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x198>
   17cc4:	ldr	r0, [fp, #-4]
   17cc8:	ldr	r0, [r0, #20]
   17ccc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17cd0:	ldr	r2, [fp, #-12]
   17cd4:	movw	r3, #0
   17cd8:	str	r2, [sp, #12]
   17cdc:	mov	r2, r3
   17ce0:	add	r3, sp, #36	; 0x24
   17ce4:	ldr	ip, [sp, #12]
   17ce8:	str	ip, [sp]
   17cec:	bl	21b64 <flatcc_json_printer_clear@@Base+0x1870>
   17cf0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17cf4:	ldr	r2, [fp, #-4]
   17cf8:	ldr	r3, [r2, #20]
   17cfc:	add	r1, r3, r1
   17d00:	str	r1, [r2, #20]
   17d04:	ldr	r1, [fp, #-4]
   17d08:	ldr	r2, [r1, #20]
   17d0c:	add	r3, r2, #1
   17d10:	str	r3, [r1, #20]
   17d14:	movw	r1, #34	; 0x22
   17d18:	strb	r1, [r2]
   17d1c:	str	r0, [sp, #8]
   17d20:	mov	sp, fp
   17d24:	pop	{fp, pc}
   17d28:			; <UNDEFINED> instruction: 0x0000b1b3
   17d2c:	andeq	sl, r0, r2, lsl #27
   17d30:	andeq	fp, r0, r9, lsr #3

00017d34 <flatcc_json_printer_uint8_field@@Base>:
   17d34:	push	{fp, lr}
   17d38:	mov	fp, sp
   17d3c:	sub	sp, sp, #32
   17d40:	ldr	ip, [fp, #12]
   17d44:	ldr	lr, [fp, #8]
   17d48:	str	r0, [fp, #-4]
   17d4c:	str	r1, [fp, #-8]
   17d50:	str	r2, [fp, #-12]
   17d54:	str	r3, [sp, #16]
   17d58:	strb	ip, [sp, #15]
   17d5c:	ldr	r0, [fp, #-8]
   17d60:	ldr	r1, [fp, #-12]
   17d64:	str	lr, [sp, #4]
   17d68:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   17d6c:	str	r0, [sp, #8]
   17d70:	ldr	r0, [sp, #8]
   17d74:	movw	r1, #0
   17d78:	cmp	r0, r1
   17d7c:	beq	17db4 <flatcc_json_printer_uint8_field@@Base+0x80>
   17d80:	ldr	r0, [sp, #8]
   17d84:	bl	17e3c <flatcc_json_printer_uint8_field@@Base+0x108>
   17d88:	strb	r0, [sp, #14]
   17d8c:	ldrb	r0, [sp, #14]
   17d90:	ldrb	lr, [sp, #15]
   17d94:	cmp	r0, lr
   17d98:	bne	17db0 <flatcc_json_printer_uint8_field@@Base+0x7c>
   17d9c:	ldr	r0, [fp, #-4]
   17da0:	ldrb	r0, [r0, #28]
   17da4:	cmp	r0, #0
   17da8:	beq	17db0 <flatcc_json_printer_uint8_field@@Base+0x7c>
   17dac:	b	17e34 <flatcc_json_printer_uint8_field@@Base+0x100>
   17db0:	b	17dd0 <flatcc_json_printer_uint8_field@@Base+0x9c>
   17db4:	ldr	r0, [fp, #-4]
   17db8:	ldrsb	r0, [r0, #29]
   17dbc:	cmp	r0, #0
   17dc0:	bne	17dc8 <flatcc_json_printer_uint8_field@@Base+0x94>
   17dc4:	b	17e34 <flatcc_json_printer_uint8_field@@Base+0x100>
   17dc8:	ldrb	r0, [sp, #15]
   17dcc:	strb	r0, [sp, #14]
   17dd0:	ldr	r0, [fp, #-8]
   17dd4:	ldr	r1, [r0, #16]
   17dd8:	add	r2, r1, #1
   17ddc:	str	r2, [r0, #16]
   17de0:	cmp	r1, #0
   17de4:	beq	17e00 <flatcc_json_printer_uint8_field@@Base+0xcc>
   17de8:	ldr	r0, [fp, #-4]
   17dec:	ldr	r1, [r0, #20]
   17df0:	add	r2, r1, #1
   17df4:	str	r2, [r0, #20]
   17df8:	movw	r0, #44	; 0x2c
   17dfc:	strb	r0, [r1]
   17e00:	ldr	r0, [fp, #-4]
   17e04:	ldr	r1, [sp, #16]
   17e08:	ldr	r2, [fp, #8]
   17e0c:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   17e10:	ldrb	r0, [sp, #14]
   17e14:	ldr	r1, [fp, #-4]
   17e18:	ldr	r1, [r1, #20]
   17e1c:	and	r0, r0, #255	; 0xff
   17e20:	bl	15ac0 <flatcc_json_printer_uint8@@Base+0x40>
   17e24:	ldr	r1, [fp, #-4]
   17e28:	ldr	r2, [r1, #20]
   17e2c:	add	r0, r2, r0
   17e30:	str	r0, [r1, #20]
   17e34:	mov	sp, fp
   17e38:	pop	{fp, pc}
   17e3c:	push	{fp, lr}
   17e40:	mov	fp, sp
   17e44:	sub	sp, sp, #8
   17e48:	str	r0, [sp, #4]
   17e4c:	ldr	r0, [sp, #4]
   17e50:	ldrb	r0, [r0]
   17e54:	bl	21ed4 <flatcc_json_printer_clear@@Base+0x1be0>
   17e58:	and	r0, r0, #255	; 0xff
   17e5c:	mov	sp, fp
   17e60:	pop	{fp, pc}

00017e64 <flatcc_json_printer_uint16_field@@Base>:
   17e64:	push	{fp, lr}
   17e68:	mov	fp, sp
   17e6c:	sub	sp, sp, #32
   17e70:	ldr	ip, [fp, #12]
   17e74:	ldr	lr, [fp, #8]
   17e78:	str	r0, [fp, #-4]
   17e7c:	str	r1, [fp, #-8]
   17e80:	str	r2, [fp, #-12]
   17e84:	str	r3, [sp, #16]
   17e88:	strh	ip, [sp, #14]
   17e8c:	ldr	r0, [fp, #-8]
   17e90:	ldr	r1, [fp, #-12]
   17e94:	str	lr, [sp, #4]
   17e98:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   17e9c:	str	r0, [sp, #8]
   17ea0:	ldr	r0, [sp, #8]
   17ea4:	movw	r1, #0
   17ea8:	cmp	r0, r1
   17eac:	beq	17ee4 <flatcc_json_printer_uint16_field@@Base+0x80>
   17eb0:	ldr	r0, [sp, #8]
   17eb4:	bl	17f6c <flatcc_json_printer_uint16_field@@Base+0x108>
   17eb8:	strh	r0, [sp, #12]
   17ebc:	ldrh	r0, [sp, #12]
   17ec0:	ldrh	lr, [sp, #14]
   17ec4:	cmp	r0, lr
   17ec8:	bne	17ee0 <flatcc_json_printer_uint16_field@@Base+0x7c>
   17ecc:	ldr	r0, [fp, #-4]
   17ed0:	ldrb	r0, [r0, #28]
   17ed4:	cmp	r0, #0
   17ed8:	beq	17ee0 <flatcc_json_printer_uint16_field@@Base+0x7c>
   17edc:	b	17f64 <flatcc_json_printer_uint16_field@@Base+0x100>
   17ee0:	b	17f00 <flatcc_json_printer_uint16_field@@Base+0x9c>
   17ee4:	ldr	r0, [fp, #-4]
   17ee8:	ldrsb	r0, [r0, #29]
   17eec:	cmp	r0, #0
   17ef0:	bne	17ef8 <flatcc_json_printer_uint16_field@@Base+0x94>
   17ef4:	b	17f64 <flatcc_json_printer_uint16_field@@Base+0x100>
   17ef8:	ldrh	r0, [sp, #14]
   17efc:	strh	r0, [sp, #12]
   17f00:	ldr	r0, [fp, #-8]
   17f04:	ldr	r1, [r0, #16]
   17f08:	add	r2, r1, #1
   17f0c:	str	r2, [r0, #16]
   17f10:	cmp	r1, #0
   17f14:	beq	17f30 <flatcc_json_printer_uint16_field@@Base+0xcc>
   17f18:	ldr	r0, [fp, #-4]
   17f1c:	ldr	r1, [r0, #20]
   17f20:	add	r2, r1, #1
   17f24:	str	r2, [r0, #20]
   17f28:	movw	r0, #44	; 0x2c
   17f2c:	strb	r0, [r1]
   17f30:	ldr	r0, [fp, #-4]
   17f34:	ldr	r1, [sp, #16]
   17f38:	ldr	r2, [fp, #8]
   17f3c:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   17f40:	ldrh	r0, [sp, #12]
   17f44:	ldr	r1, [fp, #-4]
   17f48:	ldr	r1, [r1, #20]
   17f4c:	uxth	r0, r0
   17f50:	bl	15c9c <flatcc_json_printer_uint16@@Base+0x40>
   17f54:	ldr	r1, [fp, #-4]
   17f58:	ldr	r2, [r1, #20]
   17f5c:	add	r0, r2, r0
   17f60:	str	r0, [r1, #20]
   17f64:	mov	sp, fp
   17f68:	pop	{fp, pc}
   17f6c:	push	{fp, lr}
   17f70:	mov	fp, sp
   17f74:	sub	sp, sp, #8
   17f78:	str	r0, [sp, #4]
   17f7c:	ldr	r0, [sp, #4]
   17f80:	ldrh	r0, [r0]
   17f84:	bl	21ee8 <flatcc_json_printer_clear@@Base+0x1bf4>
   17f88:	uxth	r0, r0
   17f8c:	mov	sp, fp
   17f90:	pop	{fp, pc}

00017f94 <flatcc_json_printer_uint32_field@@Base>:
   17f94:	push	{fp, lr}
   17f98:	mov	fp, sp
   17f9c:	sub	sp, sp, #32
   17fa0:	ldr	ip, [fp, #12]
   17fa4:	ldr	lr, [fp, #8]
   17fa8:	str	r0, [fp, #-4]
   17fac:	str	r1, [fp, #-8]
   17fb0:	str	r2, [fp, #-12]
   17fb4:	str	r3, [sp, #16]
   17fb8:	ldr	r0, [fp, #-8]
   17fbc:	ldr	r1, [fp, #-12]
   17fc0:	str	lr, [sp, #4]
   17fc4:	str	ip, [sp]
   17fc8:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   17fcc:	str	r0, [sp, #8]
   17fd0:	ldr	r0, [sp, #8]
   17fd4:	movw	r1, #0
   17fd8:	cmp	r0, r1
   17fdc:	beq	18014 <flatcc_json_printer_uint32_field@@Base+0x80>
   17fe0:	ldr	r0, [sp, #8]
   17fe4:	bl	18098 <flatcc_json_printer_uint32_field@@Base+0x104>
   17fe8:	str	r0, [sp, #12]
   17fec:	ldr	r0, [sp, #12]
   17ff0:	ldr	lr, [fp, #12]
   17ff4:	cmp	r0, lr
   17ff8:	bne	18010 <flatcc_json_printer_uint32_field@@Base+0x7c>
   17ffc:	ldr	r0, [fp, #-4]
   18000:	ldrb	r0, [r0, #28]
   18004:	cmp	r0, #0
   18008:	beq	18010 <flatcc_json_printer_uint32_field@@Base+0x7c>
   1800c:	b	18090 <flatcc_json_printer_uint32_field@@Base+0xfc>
   18010:	b	18030 <flatcc_json_printer_uint32_field@@Base+0x9c>
   18014:	ldr	r0, [fp, #-4]
   18018:	ldrsb	r0, [r0, #29]
   1801c:	cmp	r0, #0
   18020:	bne	18028 <flatcc_json_printer_uint32_field@@Base+0x94>
   18024:	b	18090 <flatcc_json_printer_uint32_field@@Base+0xfc>
   18028:	ldr	r0, [fp, #12]
   1802c:	str	r0, [sp, #12]
   18030:	ldr	r0, [fp, #-8]
   18034:	ldr	r1, [r0, #16]
   18038:	add	r2, r1, #1
   1803c:	str	r2, [r0, #16]
   18040:	cmp	r1, #0
   18044:	beq	18060 <flatcc_json_printer_uint32_field@@Base+0xcc>
   18048:	ldr	r0, [fp, #-4]
   1804c:	ldr	r1, [r0, #20]
   18050:	add	r2, r1, #1
   18054:	str	r2, [r0, #20]
   18058:	movw	r0, #44	; 0x2c
   1805c:	strb	r0, [r1]
   18060:	ldr	r0, [fp, #-4]
   18064:	ldr	r1, [sp, #16]
   18068:	ldr	r2, [fp, #8]
   1806c:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   18070:	ldr	r0, [sp, #12]
   18074:	ldr	r1, [fp, #-4]
   18078:	ldr	r1, [r1, #20]
   1807c:	bl	15fe0 <flatcc_json_printer_uint32@@Base+0x3c>
   18080:	ldr	r1, [fp, #-4]
   18084:	ldr	r2, [r1, #20]
   18088:	add	r0, r2, r0
   1808c:	str	r0, [r1, #20]
   18090:	mov	sp, fp
   18094:	pop	{fp, pc}
   18098:	push	{fp, lr}
   1809c:	mov	fp, sp
   180a0:	sub	sp, sp, #8
   180a4:	str	r0, [sp, #4]
   180a8:	ldr	r0, [sp, #4]
   180ac:	ldr	r0, [r0]
   180b0:	bl	21efc <flatcc_json_printer_clear@@Base+0x1c08>
   180b4:	mov	sp, fp
   180b8:	pop	{fp, pc}

000180bc <flatcc_json_printer_uint64_field@@Base>:
   180bc:	push	{r4, sl, fp, lr}
   180c0:	add	fp, sp, #8
   180c4:	sub	sp, sp, #40	; 0x28
   180c8:	ldr	ip, [fp, #20]
   180cc:	ldr	lr, [fp, #16]
   180d0:	ldr	r4, [fp, #8]
   180d4:	str	r0, [fp, #-12]
   180d8:	str	r1, [fp, #-16]
   180dc:	str	r2, [fp, #-20]	; 0xffffffec
   180e0:	str	r3, [sp, #24]
   180e4:	str	ip, [sp, #20]
   180e8:	str	lr, [sp, #16]
   180ec:	ldr	r0, [fp, #-16]
   180f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   180f4:	str	r4, [sp]
   180f8:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   180fc:	str	r0, [sp, #4]
   18100:	ldr	r0, [sp, #4]
   18104:	movw	r1, #0
   18108:	cmp	r0, r1
   1810c:	beq	18160 <flatcc_json_printer_uint64_field@@Base+0xa4>
   18110:	ldr	r0, [sp, #4]
   18114:	bl	181f0 <flatcc_json_printer_uint64_field@@Base+0x134>
   18118:	str	r1, [sp, #12]
   1811c:	str	r0, [sp, #8]
   18120:	ldr	r0, [sp, #8]
   18124:	ldr	r1, [sp, #12]
   18128:	ldr	lr, [sp, #16]
   1812c:	ldr	r2, [sp, #20]
   18130:	eor	r1, r1, r2
   18134:	eor	r0, r0, lr
   18138:	orr	r0, r0, r1
   1813c:	cmp	r0, #0
   18140:	bne	1815c <flatcc_json_printer_uint64_field@@Base+0xa0>
   18144:	b	18148 <flatcc_json_printer_uint64_field@@Base+0x8c>
   18148:	ldr	r0, [fp, #-12]
   1814c:	ldrb	r0, [r0, #28]
   18150:	cmp	r0, #0
   18154:	beq	1815c <flatcc_json_printer_uint64_field@@Base+0xa0>
   18158:	b	181e8 <flatcc_json_printer_uint64_field@@Base+0x12c>
   1815c:	b	18184 <flatcc_json_printer_uint64_field@@Base+0xc8>
   18160:	ldr	r0, [fp, #-12]
   18164:	ldrsb	r0, [r0, #29]
   18168:	cmp	r0, #0
   1816c:	bne	18174 <flatcc_json_printer_uint64_field@@Base+0xb8>
   18170:	b	181e8 <flatcc_json_printer_uint64_field@@Base+0x12c>
   18174:	ldr	r0, [sp, #16]
   18178:	ldr	r1, [sp, #20]
   1817c:	str	r1, [sp, #12]
   18180:	str	r0, [sp, #8]
   18184:	ldr	r0, [fp, #-16]
   18188:	ldr	r1, [r0, #16]
   1818c:	add	r2, r1, #1
   18190:	str	r2, [r0, #16]
   18194:	cmp	r1, #0
   18198:	beq	181b4 <flatcc_json_printer_uint64_field@@Base+0xf8>
   1819c:	ldr	r0, [fp, #-12]
   181a0:	ldr	r1, [r0, #20]
   181a4:	add	r2, r1, #1
   181a8:	str	r2, [r0, #20]
   181ac:	movw	r0, #44	; 0x2c
   181b0:	strb	r0, [r1]
   181b4:	ldr	r0, [fp, #-12]
   181b8:	ldr	r1, [sp, #24]
   181bc:	ldr	r2, [fp, #8]
   181c0:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   181c4:	ldr	r0, [sp, #8]
   181c8:	ldr	r1, [sp, #12]
   181cc:	ldr	r2, [fp, #-12]
   181d0:	ldr	r2, [r2, #20]
   181d4:	bl	16654 <flatcc_json_printer_uint64@@Base+0x44>
   181d8:	ldr	r1, [fp, #-12]
   181dc:	ldr	r2, [r1, #20]
   181e0:	add	r0, r2, r0
   181e4:	str	r0, [r1, #20]
   181e8:	sub	sp, fp, #8
   181ec:	pop	{r4, sl, fp, pc}
   181f0:	push	{fp, lr}
   181f4:	mov	fp, sp
   181f8:	sub	sp, sp, #8
   181fc:	str	r0, [sp, #4]
   18200:	ldr	r0, [sp, #4]
   18204:	ldr	r1, [r0]
   18208:	ldr	r0, [r0, #4]
   1820c:	str	r0, [sp]
   18210:	mov	r0, r1
   18214:	ldr	r1, [sp]
   18218:	bl	21f10 <flatcc_json_printer_clear@@Base+0x1c1c>
   1821c:	mov	sp, fp
   18220:	pop	{fp, pc}

00018224 <flatcc_json_printer_int8_field@@Base>:
   18224:	push	{fp, lr}
   18228:	mov	fp, sp
   1822c:	sub	sp, sp, #32
   18230:	ldr	ip, [fp, #12]
   18234:	ldr	lr, [fp, #8]
   18238:	str	r0, [fp, #-4]
   1823c:	str	r1, [fp, #-8]
   18240:	str	r2, [fp, #-12]
   18244:	str	r3, [sp, #16]
   18248:	strb	ip, [sp, #15]
   1824c:	ldr	r0, [fp, #-8]
   18250:	ldr	r1, [fp, #-12]
   18254:	str	lr, [sp, #4]
   18258:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   1825c:	str	r0, [sp, #8]
   18260:	ldr	r0, [sp, #8]
   18264:	movw	r1, #0
   18268:	cmp	r0, r1
   1826c:	beq	182a4 <flatcc_json_printer_int8_field@@Base+0x80>
   18270:	ldr	r0, [sp, #8]
   18274:	bl	1832c <flatcc_json_printer_int8_field@@Base+0x108>
   18278:	strb	r0, [sp, #14]
   1827c:	ldrsb	r0, [sp, #14]
   18280:	ldrsb	lr, [sp, #15]
   18284:	cmp	r0, lr
   18288:	bne	182a0 <flatcc_json_printer_int8_field@@Base+0x7c>
   1828c:	ldr	r0, [fp, #-4]
   18290:	ldrb	r0, [r0, #28]
   18294:	cmp	r0, #0
   18298:	beq	182a0 <flatcc_json_printer_int8_field@@Base+0x7c>
   1829c:	b	18324 <flatcc_json_printer_int8_field@@Base+0x100>
   182a0:	b	182c0 <flatcc_json_printer_int8_field@@Base+0x9c>
   182a4:	ldr	r0, [fp, #-4]
   182a8:	ldrsb	r0, [r0, #29]
   182ac:	cmp	r0, #0
   182b0:	bne	182b8 <flatcc_json_printer_int8_field@@Base+0x94>
   182b4:	b	18324 <flatcc_json_printer_int8_field@@Base+0x100>
   182b8:	ldrb	r0, [sp, #15]
   182bc:	strb	r0, [sp, #14]
   182c0:	ldr	r0, [fp, #-8]
   182c4:	ldr	r1, [r0, #16]
   182c8:	add	r2, r1, #1
   182cc:	str	r2, [r0, #16]
   182d0:	cmp	r1, #0
   182d4:	beq	182f0 <flatcc_json_printer_int8_field@@Base+0xcc>
   182d8:	ldr	r0, [fp, #-4]
   182dc:	ldr	r1, [r0, #20]
   182e0:	add	r2, r1, #1
   182e4:	str	r2, [r0, #20]
   182e8:	movw	r0, #44	; 0x2c
   182ec:	strb	r0, [r1]
   182f0:	ldr	r0, [fp, #-4]
   182f4:	ldr	r1, [sp, #16]
   182f8:	ldr	r2, [fp, #8]
   182fc:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   18300:	ldrb	r0, [sp, #14]
   18304:	ldr	r1, [fp, #-4]
   18308:	ldr	r1, [r1, #20]
   1830c:	sxtb	r0, r0
   18310:	bl	1725c <flatcc_json_printer_int8@@Base+0x40>
   18314:	ldr	r1, [fp, #-4]
   18318:	ldr	r2, [r1, #20]
   1831c:	add	r0, r2, r0
   18320:	str	r0, [r1, #20]
   18324:	mov	sp, fp
   18328:	pop	{fp, pc}
   1832c:	push	{fp, lr}
   18330:	mov	fp, sp
   18334:	sub	sp, sp, #8
   18338:	str	r0, [sp, #4]
   1833c:	ldr	r0, [sp, #4]
   18340:	ldrsb	r0, [r0]
   18344:	bl	21f2c <flatcc_json_printer_clear@@Base+0x1c38>
   18348:	sxtb	r0, r0
   1834c:	mov	sp, fp
   18350:	pop	{fp, pc}

00018354 <flatcc_json_printer_int16_field@@Base>:
   18354:	push	{fp, lr}
   18358:	mov	fp, sp
   1835c:	sub	sp, sp, #32
   18360:	ldr	ip, [fp, #12]
   18364:	ldr	lr, [fp, #8]
   18368:	str	r0, [fp, #-4]
   1836c:	str	r1, [fp, #-8]
   18370:	str	r2, [fp, #-12]
   18374:	str	r3, [sp, #16]
   18378:	strh	ip, [sp, #14]
   1837c:	ldr	r0, [fp, #-8]
   18380:	ldr	r1, [fp, #-12]
   18384:	str	lr, [sp, #4]
   18388:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   1838c:	str	r0, [sp, #8]
   18390:	ldr	r0, [sp, #8]
   18394:	movw	r1, #0
   18398:	cmp	r0, r1
   1839c:	beq	183d4 <flatcc_json_printer_int16_field@@Base+0x80>
   183a0:	ldr	r0, [sp, #8]
   183a4:	bl	1845c <flatcc_json_printer_int16_field@@Base+0x108>
   183a8:	strh	r0, [sp, #12]
   183ac:	ldrsh	r0, [sp, #12]
   183b0:	ldrsh	lr, [sp, #14]
   183b4:	cmp	r0, lr
   183b8:	bne	183d0 <flatcc_json_printer_int16_field@@Base+0x7c>
   183bc:	ldr	r0, [fp, #-4]
   183c0:	ldrb	r0, [r0, #28]
   183c4:	cmp	r0, #0
   183c8:	beq	183d0 <flatcc_json_printer_int16_field@@Base+0x7c>
   183cc:	b	18454 <flatcc_json_printer_int16_field@@Base+0x100>
   183d0:	b	183f0 <flatcc_json_printer_int16_field@@Base+0x9c>
   183d4:	ldr	r0, [fp, #-4]
   183d8:	ldrsb	r0, [r0, #29]
   183dc:	cmp	r0, #0
   183e0:	bne	183e8 <flatcc_json_printer_int16_field@@Base+0x94>
   183e4:	b	18454 <flatcc_json_printer_int16_field@@Base+0x100>
   183e8:	ldrh	r0, [sp, #14]
   183ec:	strh	r0, [sp, #12]
   183f0:	ldr	r0, [fp, #-8]
   183f4:	ldr	r1, [r0, #16]
   183f8:	add	r2, r1, #1
   183fc:	str	r2, [r0, #16]
   18400:	cmp	r1, #0
   18404:	beq	18420 <flatcc_json_printer_int16_field@@Base+0xcc>
   18408:	ldr	r0, [fp, #-4]
   1840c:	ldr	r1, [r0, #20]
   18410:	add	r2, r1, #1
   18414:	str	r2, [r0, #20]
   18418:	movw	r0, #44	; 0x2c
   1841c:	strb	r0, [r1]
   18420:	ldr	r0, [fp, #-4]
   18424:	ldr	r1, [sp, #16]
   18428:	ldr	r2, [fp, #8]
   1842c:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   18430:	ldrh	r0, [sp, #12]
   18434:	ldr	r1, [fp, #-4]
   18438:	ldr	r1, [r1, #20]
   1843c:	sxth	r0, r0
   18440:	bl	17314 <flatcc_json_printer_int16@@Base+0x40>
   18444:	ldr	r1, [fp, #-4]
   18448:	ldr	r2, [r1, #20]
   1844c:	add	r0, r2, r0
   18450:	str	r0, [r1, #20]
   18454:	mov	sp, fp
   18458:	pop	{fp, pc}
   1845c:	push	{fp, lr}
   18460:	mov	fp, sp
   18464:	sub	sp, sp, #8
   18468:	str	r0, [sp, #4]
   1846c:	ldr	r0, [sp, #4]
   18470:	ldrsh	r0, [r0]
   18474:	bl	21f40 <flatcc_json_printer_clear@@Base+0x1c4c>
   18478:	sxth	r0, r0
   1847c:	mov	sp, fp
   18480:	pop	{fp, pc}

00018484 <flatcc_json_printer_int32_field@@Base>:
   18484:	push	{fp, lr}
   18488:	mov	fp, sp
   1848c:	sub	sp, sp, #32
   18490:	ldr	ip, [fp, #12]
   18494:	ldr	lr, [fp, #8]
   18498:	str	r0, [fp, #-4]
   1849c:	str	r1, [fp, #-8]
   184a0:	str	r2, [fp, #-12]
   184a4:	str	r3, [sp, #16]
   184a8:	ldr	r0, [fp, #-8]
   184ac:	ldr	r1, [fp, #-12]
   184b0:	str	lr, [sp, #4]
   184b4:	str	ip, [sp]
   184b8:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   184bc:	str	r0, [sp, #8]
   184c0:	ldr	r0, [sp, #8]
   184c4:	movw	r1, #0
   184c8:	cmp	r0, r1
   184cc:	beq	18504 <flatcc_json_printer_int32_field@@Base+0x80>
   184d0:	ldr	r0, [sp, #8]
   184d4:	bl	18588 <flatcc_json_printer_int32_field@@Base+0x104>
   184d8:	str	r0, [sp, #12]
   184dc:	ldr	r0, [sp, #12]
   184e0:	ldr	lr, [fp, #12]
   184e4:	cmp	r0, lr
   184e8:	bne	18500 <flatcc_json_printer_int32_field@@Base+0x7c>
   184ec:	ldr	r0, [fp, #-4]
   184f0:	ldrb	r0, [r0, #28]
   184f4:	cmp	r0, #0
   184f8:	beq	18500 <flatcc_json_printer_int32_field@@Base+0x7c>
   184fc:	b	18580 <flatcc_json_printer_int32_field@@Base+0xfc>
   18500:	b	18520 <flatcc_json_printer_int32_field@@Base+0x9c>
   18504:	ldr	r0, [fp, #-4]
   18508:	ldrsb	r0, [r0, #29]
   1850c:	cmp	r0, #0
   18510:	bne	18518 <flatcc_json_printer_int32_field@@Base+0x94>
   18514:	b	18580 <flatcc_json_printer_int32_field@@Base+0xfc>
   18518:	ldr	r0, [fp, #12]
   1851c:	str	r0, [sp, #12]
   18520:	ldr	r0, [fp, #-8]
   18524:	ldr	r1, [r0, #16]
   18528:	add	r2, r1, #1
   1852c:	str	r2, [r0, #16]
   18530:	cmp	r1, #0
   18534:	beq	18550 <flatcc_json_printer_int32_field@@Base+0xcc>
   18538:	ldr	r0, [fp, #-4]
   1853c:	ldr	r1, [r0, #20]
   18540:	add	r2, r1, #1
   18544:	str	r2, [r0, #20]
   18548:	movw	r0, #44	; 0x2c
   1854c:	strb	r0, [r1]
   18550:	ldr	r0, [fp, #-4]
   18554:	ldr	r1, [sp, #16]
   18558:	ldr	r2, [fp, #8]
   1855c:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   18560:	ldr	r0, [sp, #12]
   18564:	ldr	r1, [fp, #-4]
   18568:	ldr	r1, [r1, #20]
   1856c:	bl	173c8 <flatcc_json_printer_int32@@Base+0x3c>
   18570:	ldr	r1, [fp, #-4]
   18574:	ldr	r2, [r1, #20]
   18578:	add	r0, r2, r0
   1857c:	str	r0, [r1, #20]
   18580:	mov	sp, fp
   18584:	pop	{fp, pc}
   18588:	push	{fp, lr}
   1858c:	mov	fp, sp
   18590:	sub	sp, sp, #8
   18594:	str	r0, [sp, #4]
   18598:	ldr	r0, [sp, #4]
   1859c:	ldr	r0, [r0]
   185a0:	bl	21f54 <flatcc_json_printer_clear@@Base+0x1c60>
   185a4:	mov	sp, fp
   185a8:	pop	{fp, pc}

000185ac <flatcc_json_printer_int64_field@@Base>:
   185ac:	push	{r4, sl, fp, lr}
   185b0:	add	fp, sp, #8
   185b4:	sub	sp, sp, #40	; 0x28
   185b8:	ldr	ip, [fp, #20]
   185bc:	ldr	lr, [fp, #16]
   185c0:	ldr	r4, [fp, #8]
   185c4:	str	r0, [fp, #-12]
   185c8:	str	r1, [fp, #-16]
   185cc:	str	r2, [fp, #-20]	; 0xffffffec
   185d0:	str	r3, [sp, #24]
   185d4:	str	ip, [sp, #20]
   185d8:	str	lr, [sp, #16]
   185dc:	ldr	r0, [fp, #-16]
   185e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   185e4:	str	r4, [sp]
   185e8:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   185ec:	str	r0, [sp, #4]
   185f0:	ldr	r0, [sp, #4]
   185f4:	movw	r1, #0
   185f8:	cmp	r0, r1
   185fc:	beq	18650 <flatcc_json_printer_int64_field@@Base+0xa4>
   18600:	ldr	r0, [sp, #4]
   18604:	bl	186e0 <flatcc_json_printer_int64_field@@Base+0x134>
   18608:	str	r1, [sp, #12]
   1860c:	str	r0, [sp, #8]
   18610:	ldr	r0, [sp, #8]
   18614:	ldr	r1, [sp, #12]
   18618:	ldr	lr, [sp, #16]
   1861c:	ldr	r2, [sp, #20]
   18620:	eor	r1, r1, r2
   18624:	eor	r0, r0, lr
   18628:	orr	r0, r0, r1
   1862c:	cmp	r0, #0
   18630:	bne	1864c <flatcc_json_printer_int64_field@@Base+0xa0>
   18634:	b	18638 <flatcc_json_printer_int64_field@@Base+0x8c>
   18638:	ldr	r0, [fp, #-12]
   1863c:	ldrb	r0, [r0, #28]
   18640:	cmp	r0, #0
   18644:	beq	1864c <flatcc_json_printer_int64_field@@Base+0xa0>
   18648:	b	186d8 <flatcc_json_printer_int64_field@@Base+0x12c>
   1864c:	b	18674 <flatcc_json_printer_int64_field@@Base+0xc8>
   18650:	ldr	r0, [fp, #-12]
   18654:	ldrsb	r0, [r0, #29]
   18658:	cmp	r0, #0
   1865c:	bne	18664 <flatcc_json_printer_int64_field@@Base+0xb8>
   18660:	b	186d8 <flatcc_json_printer_int64_field@@Base+0x12c>
   18664:	ldr	r0, [sp, #16]
   18668:	ldr	r1, [sp, #20]
   1866c:	str	r1, [sp, #12]
   18670:	str	r0, [sp, #8]
   18674:	ldr	r0, [fp, #-16]
   18678:	ldr	r1, [r0, #16]
   1867c:	add	r2, r1, #1
   18680:	str	r2, [r0, #16]
   18684:	cmp	r1, #0
   18688:	beq	186a4 <flatcc_json_printer_int64_field@@Base+0xf8>
   1868c:	ldr	r0, [fp, #-12]
   18690:	ldr	r1, [r0, #20]
   18694:	add	r2, r1, #1
   18698:	str	r2, [r0, #20]
   1869c:	movw	r0, #44	; 0x2c
   186a0:	strb	r0, [r1]
   186a4:	ldr	r0, [fp, #-12]
   186a8:	ldr	r1, [sp, #24]
   186ac:	ldr	r2, [fp, #8]
   186b0:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   186b4:	ldr	r0, [sp, #8]
   186b8:	ldr	r1, [sp, #12]
   186bc:	ldr	r2, [fp, #-12]
   186c0:	ldr	r2, [r2, #20]
   186c4:	bl	17480 <flatcc_json_printer_int64@@Base+0x44>
   186c8:	ldr	r1, [fp, #-12]
   186cc:	ldr	r2, [r1, #20]
   186d0:	add	r0, r2, r0
   186d4:	str	r0, [r1, #20]
   186d8:	sub	sp, fp, #8
   186dc:	pop	{r4, sl, fp, pc}
   186e0:	push	{fp, lr}
   186e4:	mov	fp, sp
   186e8:	sub	sp, sp, #8
   186ec:	str	r0, [sp, #4]
   186f0:	ldr	r0, [sp, #4]
   186f4:	ldr	r1, [r0]
   186f8:	ldr	r0, [r0, #4]
   186fc:	str	r0, [sp]
   18700:	mov	r0, r1
   18704:	ldr	r1, [sp]
   18708:	bl	21f68 <flatcc_json_printer_clear@@Base+0x1c74>
   1870c:	mov	sp, fp
   18710:	pop	{fp, pc}

00018714 <flatcc_json_printer_bool_field@@Base>:
   18714:	push	{fp, lr}
   18718:	mov	fp, sp
   1871c:	sub	sp, sp, #32
   18720:	ldr	ip, [fp, #12]
   18724:	ldr	lr, [fp, #8]
   18728:	str	r0, [fp, #-4]
   1872c:	str	r1, [fp, #-8]
   18730:	str	r2, [fp, #-12]
   18734:	str	r3, [sp, #16]
   18738:	strb	ip, [sp, #15]
   1873c:	ldr	r0, [fp, #-8]
   18740:	ldr	r1, [fp, #-12]
   18744:	str	lr, [sp, #4]
   18748:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   1874c:	str	r0, [sp, #8]
   18750:	ldr	r0, [sp, #8]
   18754:	movw	r1, #0
   18758:	cmp	r0, r1
   1875c:	beq	18794 <flatcc_json_printer_bool_field@@Base+0x80>
   18760:	ldr	r0, [sp, #8]
   18764:	bl	18818 <flatcc_json_printer_bool_field@@Base+0x104>
   18768:	strb	r0, [sp, #14]
   1876c:	ldrb	r0, [sp, #14]
   18770:	ldrb	lr, [sp, #15]
   18774:	cmp	r0, lr
   18778:	bne	18790 <flatcc_json_printer_bool_field@@Base+0x7c>
   1877c:	ldr	r0, [fp, #-4]
   18780:	ldrb	r0, [r0, #28]
   18784:	cmp	r0, #0
   18788:	beq	18790 <flatcc_json_printer_bool_field@@Base+0x7c>
   1878c:	b	18810 <flatcc_json_printer_bool_field@@Base+0xfc>
   18790:	b	187b0 <flatcc_json_printer_bool_field@@Base+0x9c>
   18794:	ldr	r0, [fp, #-4]
   18798:	ldrsb	r0, [r0, #29]
   1879c:	cmp	r0, #0
   187a0:	bne	187a8 <flatcc_json_printer_bool_field@@Base+0x94>
   187a4:	b	18810 <flatcc_json_printer_bool_field@@Base+0xfc>
   187a8:	ldrb	r0, [sp, #15]
   187ac:	strb	r0, [sp, #14]
   187b0:	ldr	r0, [fp, #-8]
   187b4:	ldr	r1, [r0, #16]
   187b8:	add	r2, r1, #1
   187bc:	str	r2, [r0, #16]
   187c0:	cmp	r1, #0
   187c4:	beq	187e0 <flatcc_json_printer_bool_field@@Base+0xcc>
   187c8:	ldr	r0, [fp, #-4]
   187cc:	ldr	r1, [r0, #20]
   187d0:	add	r2, r1, #1
   187d4:	str	r2, [r0, #20]
   187d8:	movw	r0, #44	; 0x2c
   187dc:	strb	r0, [r1]
   187e0:	ldr	r0, [fp, #-4]
   187e4:	ldr	r1, [sp, #16]
   187e8:	ldr	r2, [fp, #8]
   187ec:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   187f0:	ldrb	r0, [sp, #14]
   187f4:	ldr	r1, [fp, #-4]
   187f8:	ldr	r1, [r1, #20]
   187fc:	bl	18840 <flatcc_json_printer_bool_field@@Base+0x12c>
   18800:	ldr	r1, [fp, #-4]
   18804:	ldr	r2, [r1, #20]
   18808:	add	r0, r2, r0
   1880c:	str	r0, [r1, #20]
   18810:	mov	sp, fp
   18814:	pop	{fp, pc}
   18818:	push	{fp, lr}
   1881c:	mov	fp, sp
   18820:	sub	sp, sp, #8
   18824:	str	r0, [sp, #4]
   18828:	ldr	r0, [sp, #4]
   1882c:	ldrb	r0, [r0]
   18830:	bl	21f84 <flatcc_json_printer_clear@@Base+0x1c90>
   18834:	and	r0, r0, #255	; 0xff
   18838:	mov	sp, fp
   1883c:	pop	{fp, pc}
   18840:	sub	sp, sp, #12
   18844:	str	r0, [sp, #4]
   18848:	str	r1, [sp]
   1884c:	ldr	r0, [sp, #4]
   18850:	cmp	r0, #0
   18854:	beq	18898 <flatcc_json_printer_bool_field@@Base+0x184>
   18858:	ldr	r0, [pc, #140]	; 188ec <flatcc_json_printer_bool_field@@Base+0x1d8>
   1885c:	add	r0, pc, r0
   18860:	ldr	r1, [sp]
   18864:	ldrb	r2, [r0]
   18868:	strb	r2, [r1]
   1886c:	ldrb	r2, [r0, #1]
   18870:	strb	r2, [r1, #1]
   18874:	ldrb	r2, [r0, #2]
   18878:	strb	r2, [r1, #2]
   1887c:	ldrb	r2, [r0, #3]
   18880:	strb	r2, [r1, #3]
   18884:	ldrb	r0, [r0, #4]
   18888:	strb	r0, [r1, #4]
   1888c:	movw	r0, #4
   18890:	str	r0, [sp, #8]
   18894:	b	188dc <flatcc_json_printer_bool_field@@Base+0x1c8>
   18898:	ldr	r0, [pc, #72]	; 188e8 <flatcc_json_printer_bool_field@@Base+0x1d4>
   1889c:	add	r0, pc, r0
   188a0:	ldr	r1, [sp]
   188a4:	ldrb	r2, [r0]
   188a8:	strb	r2, [r1]
   188ac:	ldrb	r2, [r0, #1]
   188b0:	strb	r2, [r1, #1]
   188b4:	ldrb	r2, [r0, #2]
   188b8:	strb	r2, [r1, #2]
   188bc:	ldrb	r2, [r0, #3]
   188c0:	strb	r2, [r1, #3]
   188c4:	ldrb	r2, [r0, #4]
   188c8:	strb	r2, [r1, #4]
   188cc:	ldrb	r0, [r0, #5]
   188d0:	strb	r0, [r1, #5]
   188d4:	movw	r0, #5
   188d8:	str	r0, [sp, #8]
   188dc:	ldr	r0, [sp, #8]
   188e0:	add	sp, sp, #12
   188e4:	bx	lr
   188e8:	andeq	sl, r0, r7, ror #25
   188ec:	andeq	sl, r0, r1, lsr #26

000188f0 <flatcc_json_printer_float_field@@Base>:
   188f0:	push	{fp, lr}
   188f4:	mov	fp, sp
   188f8:	sub	sp, sp, #32
   188fc:	ldr	ip, [fp, #8]
   18900:	str	r0, [fp, #-4]
   18904:	str	r1, [fp, #-8]
   18908:	str	r2, [fp, #-12]
   1890c:	str	r3, [sp, #16]
   18910:	vstr	s0, [sp, #12]
   18914:	ldr	r0, [fp, #-8]
   18918:	ldr	r1, [fp, #-12]
   1891c:	str	ip, [sp]
   18920:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   18924:	str	r0, [sp, #4]
   18928:	ldr	r0, [sp, #4]
   1892c:	movw	r1, #0
   18930:	cmp	r0, r1
   18934:	beq	18970 <flatcc_json_printer_float_field@@Base+0x80>
   18938:	ldr	r0, [sp, #4]
   1893c:	bl	189f8 <flatcc_json_printer_float_field@@Base+0x108>
   18940:	vstr	s0, [sp, #8]
   18944:	vldr	s0, [sp, #8]
   18948:	vldr	s2, [sp, #12]
   1894c:	vcmp.f32	s0, s2
   18950:	vmrs	APSR_nzcv, fpscr
   18954:	bne	1896c <flatcc_json_printer_float_field@@Base+0x7c>
   18958:	ldr	r0, [fp, #-4]
   1895c:	ldrb	r0, [r0, #28]
   18960:	cmp	r0, #0
   18964:	beq	1896c <flatcc_json_printer_float_field@@Base+0x7c>
   18968:	b	189f0 <flatcc_json_printer_float_field@@Base+0x100>
   1896c:	b	1898c <flatcc_json_printer_float_field@@Base+0x9c>
   18970:	ldr	r0, [fp, #-4]
   18974:	ldrsb	r0, [r0, #29]
   18978:	cmp	r0, #0
   1897c:	bne	18984 <flatcc_json_printer_float_field@@Base+0x94>
   18980:	b	189f0 <flatcc_json_printer_float_field@@Base+0x100>
   18984:	vldr	s0, [sp, #12]
   18988:	vstr	s0, [sp, #8]
   1898c:	ldr	r0, [fp, #-8]
   18990:	ldr	r1, [r0, #16]
   18994:	add	r2, r1, #1
   18998:	str	r2, [r0, #16]
   1899c:	cmp	r1, #0
   189a0:	beq	189bc <flatcc_json_printer_float_field@@Base+0xcc>
   189a4:	ldr	r0, [fp, #-4]
   189a8:	ldr	r1, [r0, #20]
   189ac:	add	r2, r1, #1
   189b0:	str	r2, [r0, #20]
   189b4:	movw	r0, #44	; 0x2c
   189b8:	strb	r0, [r1]
   189bc:	ldr	r0, [fp, #-4]
   189c0:	ldr	r1, [sp, #16]
   189c4:	ldr	r2, [fp, #8]
   189c8:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   189cc:	vldr	s0, [sp, #8]
   189d0:	vcvt.f64.f32	d0, s0
   189d4:	ldr	r0, [fp, #-4]
   189d8:	ldr	r0, [r0, #20]
   189dc:	bl	14e50 <flatcc_json_printer_fmt_float@@Base+0x2c>
   189e0:	ldr	r1, [fp, #-4]
   189e4:	ldr	r2, [r1, #20]
   189e8:	add	r0, r2, r0
   189ec:	str	r0, [r1, #20]
   189f0:	mov	sp, fp
   189f4:	pop	{fp, pc}
   189f8:	push	{fp, lr}
   189fc:	mov	fp, sp
   18a00:	sub	sp, sp, #8
   18a04:	str	r0, [sp, #4]
   18a08:	ldr	r0, [sp, #4]
   18a0c:	vldr	s0, [r0]
   18a10:	bl	21f98 <flatcc_json_printer_clear@@Base+0x1ca4>
   18a14:	mov	sp, fp
   18a18:	pop	{fp, pc}

00018a1c <flatcc_json_printer_double_field@@Base>:
   18a1c:	push	{fp, lr}
   18a20:	mov	fp, sp
   18a24:	sub	sp, sp, #40	; 0x28
   18a28:	ldr	ip, [fp, #8]
   18a2c:	str	r0, [fp, #-4]
   18a30:	str	r1, [fp, #-8]
   18a34:	str	r2, [fp, #-12]
   18a38:	str	r3, [fp, #-16]
   18a3c:	vstr	d0, [sp, #16]
   18a40:	ldr	r0, [fp, #-8]
   18a44:	ldr	r1, [fp, #-12]
   18a48:	str	ip, [sp]
   18a4c:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   18a50:	str	r0, [sp, #4]
   18a54:	ldr	r0, [sp, #4]
   18a58:	movw	r1, #0
   18a5c:	cmp	r0, r1
   18a60:	beq	18a9c <flatcc_json_printer_double_field@@Base+0x80>
   18a64:	ldr	r0, [sp, #4]
   18a68:	bl	18b20 <flatcc_json_printer_double_field@@Base+0x104>
   18a6c:	vstr	d0, [sp, #8]
   18a70:	vldr	d0, [sp, #8]
   18a74:	vldr	d16, [sp, #16]
   18a78:	vcmp.f64	d0, d16
   18a7c:	vmrs	APSR_nzcv, fpscr
   18a80:	bne	18a98 <flatcc_json_printer_double_field@@Base+0x7c>
   18a84:	ldr	r0, [fp, #-4]
   18a88:	ldrb	r0, [r0, #28]
   18a8c:	cmp	r0, #0
   18a90:	beq	18a98 <flatcc_json_printer_double_field@@Base+0x7c>
   18a94:	b	18b18 <flatcc_json_printer_double_field@@Base+0xfc>
   18a98:	b	18ab8 <flatcc_json_printer_double_field@@Base+0x9c>
   18a9c:	ldr	r0, [fp, #-4]
   18aa0:	ldrsb	r0, [r0, #29]
   18aa4:	cmp	r0, #0
   18aa8:	bne	18ab0 <flatcc_json_printer_double_field@@Base+0x94>
   18aac:	b	18b18 <flatcc_json_printer_double_field@@Base+0xfc>
   18ab0:	vldr	d16, [sp, #16]
   18ab4:	vstr	d16, [sp, #8]
   18ab8:	ldr	r0, [fp, #-8]
   18abc:	ldr	r1, [r0, #16]
   18ac0:	add	r2, r1, #1
   18ac4:	str	r2, [r0, #16]
   18ac8:	cmp	r1, #0
   18acc:	beq	18ae8 <flatcc_json_printer_double_field@@Base+0xcc>
   18ad0:	ldr	r0, [fp, #-4]
   18ad4:	ldr	r1, [r0, #20]
   18ad8:	add	r2, r1, #1
   18adc:	str	r2, [r0, #20]
   18ae0:	movw	r0, #44	; 0x2c
   18ae4:	strb	r0, [r1]
   18ae8:	ldr	r0, [fp, #-4]
   18aec:	ldr	r1, [fp, #-16]
   18af0:	ldr	r2, [fp, #8]
   18af4:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   18af8:	vldr	d0, [sp, #8]
   18afc:	ldr	r0, [fp, #-4]
   18b00:	ldr	r0, [r0, #20]
   18b04:	bl	14e50 <flatcc_json_printer_fmt_float@@Base+0x2c>
   18b08:	ldr	r1, [fp, #-4]
   18b0c:	ldr	r2, [r1, #20]
   18b10:	add	r0, r2, r0
   18b14:	str	r0, [r1, #20]
   18b18:	mov	sp, fp
   18b1c:	pop	{fp, pc}
   18b20:	push	{fp, lr}
   18b24:	mov	fp, sp
   18b28:	sub	sp, sp, #8
   18b2c:	str	r0, [sp, #4]
   18b30:	ldr	r0, [sp, #4]
   18b34:	vldr	d0, [r0]
   18b38:	bl	21fbc <flatcc_json_printer_clear@@Base+0x1cc8>
   18b3c:	mov	sp, fp
   18b40:	pop	{fp, pc}

00018b44 <flatcc_json_printer_uint8_enum_field@@Base>:
   18b44:	push	{r4, sl, fp, lr}
   18b48:	add	fp, sp, #8
   18b4c:	sub	sp, sp, #40	; 0x28
   18b50:	ldr	ip, [fp, #16]
   18b54:	ldr	lr, [fp, #12]
   18b58:	ldr	r4, [fp, #8]
   18b5c:	str	r0, [fp, #-12]
   18b60:	str	r1, [fp, #-16]
   18b64:	str	r2, [fp, #-20]	; 0xffffffec
   18b68:	str	r3, [sp, #24]
   18b6c:	strb	lr, [sp, #23]
   18b70:	ldr	r0, [fp, #-16]
   18b74:	ldr	r1, [fp, #-20]	; 0xffffffec
   18b78:	str	r4, [sp, #12]
   18b7c:	str	ip, [sp, #8]
   18b80:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   18b84:	str	r0, [sp, #16]
   18b88:	ldr	r0, [sp, #16]
   18b8c:	movw	r1, #0
   18b90:	cmp	r0, r1
   18b94:	beq	18bcc <flatcc_json_printer_uint8_enum_field@@Base+0x88>
   18b98:	ldr	r0, [sp, #16]
   18b9c:	bl	17e3c <flatcc_json_printer_uint8_field@@Base+0x108>
   18ba0:	strb	r0, [sp, #22]
   18ba4:	ldrb	r0, [sp, #22]
   18ba8:	ldrb	lr, [sp, #23]
   18bac:	cmp	r0, lr
   18bb0:	bne	18bc8 <flatcc_json_printer_uint8_enum_field@@Base+0x84>
   18bb4:	ldr	r0, [fp, #-12]
   18bb8:	ldrb	r0, [r0, #28]
   18bbc:	cmp	r0, #0
   18bc0:	beq	18bc8 <flatcc_json_printer_uint8_enum_field@@Base+0x84>
   18bc4:	b	18c7c <flatcc_json_printer_uint8_enum_field@@Base+0x138>
   18bc8:	b	18be8 <flatcc_json_printer_uint8_enum_field@@Base+0xa4>
   18bcc:	ldr	r0, [fp, #-12]
   18bd0:	ldrsb	r0, [r0, #29]
   18bd4:	cmp	r0, #0
   18bd8:	bne	18be0 <flatcc_json_printer_uint8_enum_field@@Base+0x9c>
   18bdc:	b	18c7c <flatcc_json_printer_uint8_enum_field@@Base+0x138>
   18be0:	ldrb	r0, [sp, #23]
   18be4:	strb	r0, [sp, #22]
   18be8:	ldr	r0, [fp, #-16]
   18bec:	ldr	r1, [r0, #16]
   18bf0:	add	r2, r1, #1
   18bf4:	str	r2, [r0, #16]
   18bf8:	cmp	r1, #0
   18bfc:	beq	18c18 <flatcc_json_printer_uint8_enum_field@@Base+0xd4>
   18c00:	ldr	r0, [fp, #-12]
   18c04:	ldr	r1, [r0, #20]
   18c08:	add	r2, r1, #1
   18c0c:	str	r2, [r0, #20]
   18c10:	movw	r0, #44	; 0x2c
   18c14:	strb	r0, [r1]
   18c18:	ldr	r0, [fp, #-12]
   18c1c:	ldr	r1, [sp, #24]
   18c20:	ldr	r2, [fp, #8]
   18c24:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   18c28:	ldr	r0, [fp, #-12]
   18c2c:	ldrsb	r0, [r0, #27]
   18c30:	cmp	r0, #0
   18c34:	beq	18c60 <flatcc_json_printer_uint8_enum_field@@Base+0x11c>
   18c38:	ldrb	r0, [sp, #22]
   18c3c:	ldr	r1, [fp, #-12]
   18c40:	ldr	r1, [r1, #20]
   18c44:	and	r0, r0, #255	; 0xff
   18c48:	bl	15ac0 <flatcc_json_printer_uint8@@Base+0x40>
   18c4c:	ldr	r1, [fp, #-12]
   18c50:	ldr	lr, [r1, #20]
   18c54:	add	r0, lr, r0
   18c58:	str	r0, [r1, #20]
   18c5c:	b	18c7c <flatcc_json_printer_uint8_enum_field@@Base+0x138>
   18c60:	ldr	r0, [fp, #16]
   18c64:	ldr	r1, [fp, #-12]
   18c68:	str	r0, [sp, #4]
   18c6c:	mov	r0, r1
   18c70:	ldrb	r1, [sp, #22]
   18c74:	ldr	r2, [sp, #4]
   18c78:	blx	r2
   18c7c:	sub	sp, fp, #8
   18c80:	pop	{r4, sl, fp, pc}

00018c84 <flatcc_json_printer_uint16_enum_field@@Base>:
   18c84:	push	{r4, sl, fp, lr}
   18c88:	add	fp, sp, #8
   18c8c:	sub	sp, sp, #40	; 0x28
   18c90:	ldr	ip, [fp, #16]
   18c94:	ldr	lr, [fp, #12]
   18c98:	ldr	r4, [fp, #8]
   18c9c:	str	r0, [fp, #-12]
   18ca0:	str	r1, [fp, #-16]
   18ca4:	str	r2, [fp, #-20]	; 0xffffffec
   18ca8:	str	r3, [sp, #24]
   18cac:	strh	lr, [sp, #22]
   18cb0:	ldr	r0, [fp, #-16]
   18cb4:	ldr	r1, [fp, #-20]	; 0xffffffec
   18cb8:	str	r4, [sp, #12]
   18cbc:	str	ip, [sp, #8]
   18cc0:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   18cc4:	str	r0, [sp, #16]
   18cc8:	ldr	r0, [sp, #16]
   18ccc:	movw	r1, #0
   18cd0:	cmp	r0, r1
   18cd4:	beq	18d0c <flatcc_json_printer_uint16_enum_field@@Base+0x88>
   18cd8:	ldr	r0, [sp, #16]
   18cdc:	bl	17f6c <flatcc_json_printer_uint16_field@@Base+0x108>
   18ce0:	strh	r0, [sp, #20]
   18ce4:	ldrh	r0, [sp, #20]
   18ce8:	ldrh	lr, [sp, #22]
   18cec:	cmp	r0, lr
   18cf0:	bne	18d08 <flatcc_json_printer_uint16_enum_field@@Base+0x84>
   18cf4:	ldr	r0, [fp, #-12]
   18cf8:	ldrb	r0, [r0, #28]
   18cfc:	cmp	r0, #0
   18d00:	beq	18d08 <flatcc_json_printer_uint16_enum_field@@Base+0x84>
   18d04:	b	18dbc <flatcc_json_printer_uint16_enum_field@@Base+0x138>
   18d08:	b	18d28 <flatcc_json_printer_uint16_enum_field@@Base+0xa4>
   18d0c:	ldr	r0, [fp, #-12]
   18d10:	ldrsb	r0, [r0, #29]
   18d14:	cmp	r0, #0
   18d18:	bne	18d20 <flatcc_json_printer_uint16_enum_field@@Base+0x9c>
   18d1c:	b	18dbc <flatcc_json_printer_uint16_enum_field@@Base+0x138>
   18d20:	ldrh	r0, [sp, #22]
   18d24:	strh	r0, [sp, #20]
   18d28:	ldr	r0, [fp, #-16]
   18d2c:	ldr	r1, [r0, #16]
   18d30:	add	r2, r1, #1
   18d34:	str	r2, [r0, #16]
   18d38:	cmp	r1, #0
   18d3c:	beq	18d58 <flatcc_json_printer_uint16_enum_field@@Base+0xd4>
   18d40:	ldr	r0, [fp, #-12]
   18d44:	ldr	r1, [r0, #20]
   18d48:	add	r2, r1, #1
   18d4c:	str	r2, [r0, #20]
   18d50:	movw	r0, #44	; 0x2c
   18d54:	strb	r0, [r1]
   18d58:	ldr	r0, [fp, #-12]
   18d5c:	ldr	r1, [sp, #24]
   18d60:	ldr	r2, [fp, #8]
   18d64:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   18d68:	ldr	r0, [fp, #-12]
   18d6c:	ldrsb	r0, [r0, #27]
   18d70:	cmp	r0, #0
   18d74:	beq	18da0 <flatcc_json_printer_uint16_enum_field@@Base+0x11c>
   18d78:	ldrh	r0, [sp, #20]
   18d7c:	ldr	r1, [fp, #-12]
   18d80:	ldr	r1, [r1, #20]
   18d84:	uxth	r0, r0
   18d88:	bl	15c9c <flatcc_json_printer_uint16@@Base+0x40>
   18d8c:	ldr	r1, [fp, #-12]
   18d90:	ldr	lr, [r1, #20]
   18d94:	add	r0, lr, r0
   18d98:	str	r0, [r1, #20]
   18d9c:	b	18dbc <flatcc_json_printer_uint16_enum_field@@Base+0x138>
   18da0:	ldr	r0, [fp, #16]
   18da4:	ldr	r1, [fp, #-12]
   18da8:	str	r0, [sp, #4]
   18dac:	mov	r0, r1
   18db0:	ldrh	r1, [sp, #20]
   18db4:	ldr	r2, [sp, #4]
   18db8:	blx	r2
   18dbc:	sub	sp, fp, #8
   18dc0:	pop	{r4, sl, fp, pc}

00018dc4 <flatcc_json_printer_uint32_enum_field@@Base>:
   18dc4:	push	{r4, sl, fp, lr}
   18dc8:	add	fp, sp, #8
   18dcc:	sub	sp, sp, #40	; 0x28
   18dd0:	ldr	ip, [fp, #16]
   18dd4:	ldr	lr, [fp, #12]
   18dd8:	ldr	r4, [fp, #8]
   18ddc:	str	r0, [fp, #-12]
   18de0:	str	r1, [fp, #-16]
   18de4:	str	r2, [fp, #-20]	; 0xffffffec
   18de8:	str	r3, [sp, #24]
   18dec:	ldr	r0, [fp, #-16]
   18df0:	ldr	r1, [fp, #-20]	; 0xffffffec
   18df4:	str	r4, [sp, #12]
   18df8:	str	lr, [sp, #8]
   18dfc:	str	ip, [sp, #4]
   18e00:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   18e04:	str	r0, [sp, #16]
   18e08:	ldr	r0, [sp, #16]
   18e0c:	movw	r1, #0
   18e10:	cmp	r0, r1
   18e14:	beq	18e4c <flatcc_json_printer_uint32_enum_field@@Base+0x88>
   18e18:	ldr	r0, [sp, #16]
   18e1c:	bl	18098 <flatcc_json_printer_uint32_field@@Base+0x104>
   18e20:	str	r0, [sp, #20]
   18e24:	ldr	r0, [sp, #20]
   18e28:	ldr	lr, [fp, #12]
   18e2c:	cmp	r0, lr
   18e30:	bne	18e48 <flatcc_json_printer_uint32_enum_field@@Base+0x84>
   18e34:	ldr	r0, [fp, #-12]
   18e38:	ldrb	r0, [r0, #28]
   18e3c:	cmp	r0, #0
   18e40:	beq	18e48 <flatcc_json_printer_uint32_enum_field@@Base+0x84>
   18e44:	b	18efc <flatcc_json_printer_uint32_enum_field@@Base+0x138>
   18e48:	b	18e68 <flatcc_json_printer_uint32_enum_field@@Base+0xa4>
   18e4c:	ldr	r0, [fp, #-12]
   18e50:	ldrsb	r0, [r0, #29]
   18e54:	cmp	r0, #0
   18e58:	bne	18e60 <flatcc_json_printer_uint32_enum_field@@Base+0x9c>
   18e5c:	b	18efc <flatcc_json_printer_uint32_enum_field@@Base+0x138>
   18e60:	ldr	r0, [fp, #12]
   18e64:	str	r0, [sp, #20]
   18e68:	ldr	r0, [fp, #-16]
   18e6c:	ldr	r1, [r0, #16]
   18e70:	add	r2, r1, #1
   18e74:	str	r2, [r0, #16]
   18e78:	cmp	r1, #0
   18e7c:	beq	18e98 <flatcc_json_printer_uint32_enum_field@@Base+0xd4>
   18e80:	ldr	r0, [fp, #-12]
   18e84:	ldr	r1, [r0, #20]
   18e88:	add	r2, r1, #1
   18e8c:	str	r2, [r0, #20]
   18e90:	movw	r0, #44	; 0x2c
   18e94:	strb	r0, [r1]
   18e98:	ldr	r0, [fp, #-12]
   18e9c:	ldr	r1, [sp, #24]
   18ea0:	ldr	r2, [fp, #8]
   18ea4:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   18ea8:	ldr	r0, [fp, #-12]
   18eac:	ldrsb	r0, [r0, #27]
   18eb0:	cmp	r0, #0
   18eb4:	beq	18edc <flatcc_json_printer_uint32_enum_field@@Base+0x118>
   18eb8:	ldr	r0, [sp, #20]
   18ebc:	ldr	r1, [fp, #-12]
   18ec0:	ldr	r1, [r1, #20]
   18ec4:	bl	15fe0 <flatcc_json_printer_uint32@@Base+0x3c>
   18ec8:	ldr	r1, [fp, #-12]
   18ecc:	ldr	lr, [r1, #20]
   18ed0:	add	r0, lr, r0
   18ed4:	str	r0, [r1, #20]
   18ed8:	b	18efc <flatcc_json_printer_uint32_enum_field@@Base+0x138>
   18edc:	ldr	r0, [fp, #16]
   18ee0:	ldr	r1, [fp, #-12]
   18ee4:	ldr	r2, [sp, #20]
   18ee8:	str	r0, [sp]
   18eec:	mov	r0, r1
   18ef0:	mov	r1, r2
   18ef4:	ldr	r2, [sp]
   18ef8:	blx	r2
   18efc:	sub	sp, fp, #8
   18f00:	pop	{r4, sl, fp, pc}

00018f04 <flatcc_json_printer_uint64_enum_field@@Base>:
   18f04:	push	{r4, r5, fp, lr}
   18f08:	add	fp, sp, #8
   18f0c:	sub	sp, sp, #48	; 0x30
   18f10:	ldr	ip, [fp, #20]
   18f14:	ldr	lr, [fp, #16]
   18f18:	ldr	r4, [fp, #24]
   18f1c:	ldr	r5, [fp, #8]
   18f20:	str	r0, [fp, #-12]
   18f24:	str	r1, [fp, #-16]
   18f28:	str	r2, [fp, #-20]	; 0xffffffec
   18f2c:	str	r3, [fp, #-24]	; 0xffffffe8
   18f30:	str	ip, [sp, #28]
   18f34:	str	lr, [sp, #24]
   18f38:	ldr	r0, [fp, #-16]
   18f3c:	ldr	r1, [fp, #-20]	; 0xffffffec
   18f40:	str	r5, [sp, #8]
   18f44:	str	r4, [sp, #4]
   18f48:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   18f4c:	str	r0, [sp, #12]
   18f50:	ldr	r0, [sp, #12]
   18f54:	movw	r1, #0
   18f58:	cmp	r0, r1
   18f5c:	beq	18fb0 <flatcc_json_printer_uint64_enum_field@@Base+0xac>
   18f60:	ldr	r0, [sp, #12]
   18f64:	bl	181f0 <flatcc_json_printer_uint64_field@@Base+0x134>
   18f68:	str	r1, [sp, #20]
   18f6c:	str	r0, [sp, #16]
   18f70:	ldr	r0, [sp, #16]
   18f74:	ldr	r1, [sp, #20]
   18f78:	ldr	lr, [sp, #24]
   18f7c:	ldr	r2, [sp, #28]
   18f80:	eor	r1, r1, r2
   18f84:	eor	r0, r0, lr
   18f88:	orr	r0, r0, r1
   18f8c:	cmp	r0, #0
   18f90:	bne	18fac <flatcc_json_printer_uint64_enum_field@@Base+0xa8>
   18f94:	b	18f98 <flatcc_json_printer_uint64_enum_field@@Base+0x94>
   18f98:	ldr	r0, [fp, #-12]
   18f9c:	ldrb	r0, [r0, #28]
   18fa0:	cmp	r0, #0
   18fa4:	beq	18fac <flatcc_json_printer_uint64_enum_field@@Base+0xa8>
   18fa8:	b	1906c <flatcc_json_printer_uint64_enum_field@@Base+0x168>
   18fac:	b	18fd4 <flatcc_json_printer_uint64_enum_field@@Base+0xd0>
   18fb0:	ldr	r0, [fp, #-12]
   18fb4:	ldrsb	r0, [r0, #29]
   18fb8:	cmp	r0, #0
   18fbc:	bne	18fc4 <flatcc_json_printer_uint64_enum_field@@Base+0xc0>
   18fc0:	b	1906c <flatcc_json_printer_uint64_enum_field@@Base+0x168>
   18fc4:	ldr	r0, [sp, #24]
   18fc8:	ldr	r1, [sp, #28]
   18fcc:	str	r1, [sp, #20]
   18fd0:	str	r0, [sp, #16]
   18fd4:	ldr	r0, [fp, #-16]
   18fd8:	ldr	r1, [r0, #16]
   18fdc:	add	r2, r1, #1
   18fe0:	str	r2, [r0, #16]
   18fe4:	cmp	r1, #0
   18fe8:	beq	19004 <flatcc_json_printer_uint64_enum_field@@Base+0x100>
   18fec:	ldr	r0, [fp, #-12]
   18ff0:	ldr	r1, [r0, #20]
   18ff4:	add	r2, r1, #1
   18ff8:	str	r2, [r0, #20]
   18ffc:	movw	r0, #44	; 0x2c
   19000:	strb	r0, [r1]
   19004:	ldr	r0, [fp, #-12]
   19008:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1900c:	ldr	r2, [fp, #8]
   19010:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   19014:	ldr	r0, [fp, #-12]
   19018:	ldrsb	r0, [r0, #27]
   1901c:	cmp	r0, #0
   19020:	beq	1904c <flatcc_json_printer_uint64_enum_field@@Base+0x148>
   19024:	ldr	r0, [sp, #16]
   19028:	ldr	r1, [sp, #20]
   1902c:	ldr	r2, [fp, #-12]
   19030:	ldr	r2, [r2, #20]
   19034:	bl	16654 <flatcc_json_printer_uint64@@Base+0x44>
   19038:	ldr	r1, [fp, #-12]
   1903c:	ldr	r2, [r1, #20]
   19040:	add	r0, r2, r0
   19044:	str	r0, [r1, #20]
   19048:	b	1906c <flatcc_json_printer_uint64_enum_field@@Base+0x168>
   1904c:	ldr	r0, [fp, #24]
   19050:	ldr	r1, [fp, #-12]
   19054:	ldr	r2, [sp, #16]
   19058:	ldr	r3, [sp, #20]
   1905c:	str	r0, [sp]
   19060:	mov	r0, r1
   19064:	ldr	r1, [sp]
   19068:	blx	r1
   1906c:	sub	sp, fp, #8
   19070:	pop	{r4, r5, fp, pc}

00019074 <flatcc_json_printer_int8_enum_field@@Base>:
   19074:	push	{r4, sl, fp, lr}
   19078:	add	fp, sp, #8
   1907c:	sub	sp, sp, #40	; 0x28
   19080:	ldr	ip, [fp, #16]
   19084:	ldr	lr, [fp, #12]
   19088:	ldr	r4, [fp, #8]
   1908c:	str	r0, [fp, #-12]
   19090:	str	r1, [fp, #-16]
   19094:	str	r2, [fp, #-20]	; 0xffffffec
   19098:	str	r3, [sp, #24]
   1909c:	strb	lr, [sp, #23]
   190a0:	ldr	r0, [fp, #-16]
   190a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   190a8:	str	r4, [sp, #12]
   190ac:	str	ip, [sp, #8]
   190b0:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   190b4:	str	r0, [sp, #16]
   190b8:	ldr	r0, [sp, #16]
   190bc:	movw	r1, #0
   190c0:	cmp	r0, r1
   190c4:	beq	190fc <flatcc_json_printer_int8_enum_field@@Base+0x88>
   190c8:	ldr	r0, [sp, #16]
   190cc:	bl	1832c <flatcc_json_printer_int8_field@@Base+0x108>
   190d0:	strb	r0, [sp, #22]
   190d4:	ldrsb	r0, [sp, #22]
   190d8:	ldrsb	lr, [sp, #23]
   190dc:	cmp	r0, lr
   190e0:	bne	190f8 <flatcc_json_printer_int8_enum_field@@Base+0x84>
   190e4:	ldr	r0, [fp, #-12]
   190e8:	ldrb	r0, [r0, #28]
   190ec:	cmp	r0, #0
   190f0:	beq	190f8 <flatcc_json_printer_int8_enum_field@@Base+0x84>
   190f4:	b	191ac <flatcc_json_printer_int8_enum_field@@Base+0x138>
   190f8:	b	19118 <flatcc_json_printer_int8_enum_field@@Base+0xa4>
   190fc:	ldr	r0, [fp, #-12]
   19100:	ldrsb	r0, [r0, #29]
   19104:	cmp	r0, #0
   19108:	bne	19110 <flatcc_json_printer_int8_enum_field@@Base+0x9c>
   1910c:	b	191ac <flatcc_json_printer_int8_enum_field@@Base+0x138>
   19110:	ldrb	r0, [sp, #23]
   19114:	strb	r0, [sp, #22]
   19118:	ldr	r0, [fp, #-16]
   1911c:	ldr	r1, [r0, #16]
   19120:	add	r2, r1, #1
   19124:	str	r2, [r0, #16]
   19128:	cmp	r1, #0
   1912c:	beq	19148 <flatcc_json_printer_int8_enum_field@@Base+0xd4>
   19130:	ldr	r0, [fp, #-12]
   19134:	ldr	r1, [r0, #20]
   19138:	add	r2, r1, #1
   1913c:	str	r2, [r0, #20]
   19140:	movw	r0, #44	; 0x2c
   19144:	strb	r0, [r1]
   19148:	ldr	r0, [fp, #-12]
   1914c:	ldr	r1, [sp, #24]
   19150:	ldr	r2, [fp, #8]
   19154:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   19158:	ldr	r0, [fp, #-12]
   1915c:	ldrsb	r0, [r0, #27]
   19160:	cmp	r0, #0
   19164:	beq	19190 <flatcc_json_printer_int8_enum_field@@Base+0x11c>
   19168:	ldrb	r0, [sp, #22]
   1916c:	ldr	r1, [fp, #-12]
   19170:	ldr	r1, [r1, #20]
   19174:	sxtb	r0, r0
   19178:	bl	1725c <flatcc_json_printer_int8@@Base+0x40>
   1917c:	ldr	r1, [fp, #-12]
   19180:	ldr	lr, [r1, #20]
   19184:	add	r0, lr, r0
   19188:	str	r0, [r1, #20]
   1918c:	b	191ac <flatcc_json_printer_int8_enum_field@@Base+0x138>
   19190:	ldr	r0, [fp, #16]
   19194:	ldr	r1, [fp, #-12]
   19198:	str	r0, [sp, #4]
   1919c:	mov	r0, r1
   191a0:	ldrsb	r1, [sp, #22]
   191a4:	ldr	r2, [sp, #4]
   191a8:	blx	r2
   191ac:	sub	sp, fp, #8
   191b0:	pop	{r4, sl, fp, pc}

000191b4 <flatcc_json_printer_int16_enum_field@@Base>:
   191b4:	push	{r4, sl, fp, lr}
   191b8:	add	fp, sp, #8
   191bc:	sub	sp, sp, #40	; 0x28
   191c0:	ldr	ip, [fp, #16]
   191c4:	ldr	lr, [fp, #12]
   191c8:	ldr	r4, [fp, #8]
   191cc:	str	r0, [fp, #-12]
   191d0:	str	r1, [fp, #-16]
   191d4:	str	r2, [fp, #-20]	; 0xffffffec
   191d8:	str	r3, [sp, #24]
   191dc:	strh	lr, [sp, #22]
   191e0:	ldr	r0, [fp, #-16]
   191e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   191e8:	str	r4, [sp, #12]
   191ec:	str	ip, [sp, #8]
   191f0:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   191f4:	str	r0, [sp, #16]
   191f8:	ldr	r0, [sp, #16]
   191fc:	movw	r1, #0
   19200:	cmp	r0, r1
   19204:	beq	1923c <flatcc_json_printer_int16_enum_field@@Base+0x88>
   19208:	ldr	r0, [sp, #16]
   1920c:	bl	1845c <flatcc_json_printer_int16_field@@Base+0x108>
   19210:	strh	r0, [sp, #20]
   19214:	ldrsh	r0, [sp, #20]
   19218:	ldrsh	lr, [sp, #22]
   1921c:	cmp	r0, lr
   19220:	bne	19238 <flatcc_json_printer_int16_enum_field@@Base+0x84>
   19224:	ldr	r0, [fp, #-12]
   19228:	ldrb	r0, [r0, #28]
   1922c:	cmp	r0, #0
   19230:	beq	19238 <flatcc_json_printer_int16_enum_field@@Base+0x84>
   19234:	b	192ec <flatcc_json_printer_int16_enum_field@@Base+0x138>
   19238:	b	19258 <flatcc_json_printer_int16_enum_field@@Base+0xa4>
   1923c:	ldr	r0, [fp, #-12]
   19240:	ldrsb	r0, [r0, #29]
   19244:	cmp	r0, #0
   19248:	bne	19250 <flatcc_json_printer_int16_enum_field@@Base+0x9c>
   1924c:	b	192ec <flatcc_json_printer_int16_enum_field@@Base+0x138>
   19250:	ldrh	r0, [sp, #22]
   19254:	strh	r0, [sp, #20]
   19258:	ldr	r0, [fp, #-16]
   1925c:	ldr	r1, [r0, #16]
   19260:	add	r2, r1, #1
   19264:	str	r2, [r0, #16]
   19268:	cmp	r1, #0
   1926c:	beq	19288 <flatcc_json_printer_int16_enum_field@@Base+0xd4>
   19270:	ldr	r0, [fp, #-12]
   19274:	ldr	r1, [r0, #20]
   19278:	add	r2, r1, #1
   1927c:	str	r2, [r0, #20]
   19280:	movw	r0, #44	; 0x2c
   19284:	strb	r0, [r1]
   19288:	ldr	r0, [fp, #-12]
   1928c:	ldr	r1, [sp, #24]
   19290:	ldr	r2, [fp, #8]
   19294:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   19298:	ldr	r0, [fp, #-12]
   1929c:	ldrsb	r0, [r0, #27]
   192a0:	cmp	r0, #0
   192a4:	beq	192d0 <flatcc_json_printer_int16_enum_field@@Base+0x11c>
   192a8:	ldrh	r0, [sp, #20]
   192ac:	ldr	r1, [fp, #-12]
   192b0:	ldr	r1, [r1, #20]
   192b4:	sxth	r0, r0
   192b8:	bl	17314 <flatcc_json_printer_int16@@Base+0x40>
   192bc:	ldr	r1, [fp, #-12]
   192c0:	ldr	lr, [r1, #20]
   192c4:	add	r0, lr, r0
   192c8:	str	r0, [r1, #20]
   192cc:	b	192ec <flatcc_json_printer_int16_enum_field@@Base+0x138>
   192d0:	ldr	r0, [fp, #16]
   192d4:	ldr	r1, [fp, #-12]
   192d8:	str	r0, [sp, #4]
   192dc:	mov	r0, r1
   192e0:	ldrsh	r1, [sp, #20]
   192e4:	ldr	r2, [sp, #4]
   192e8:	blx	r2
   192ec:	sub	sp, fp, #8
   192f0:	pop	{r4, sl, fp, pc}

000192f4 <flatcc_json_printer_int32_enum_field@@Base>:
   192f4:	push	{r4, sl, fp, lr}
   192f8:	add	fp, sp, #8
   192fc:	sub	sp, sp, #40	; 0x28
   19300:	ldr	ip, [fp, #16]
   19304:	ldr	lr, [fp, #12]
   19308:	ldr	r4, [fp, #8]
   1930c:	str	r0, [fp, #-12]
   19310:	str	r1, [fp, #-16]
   19314:	str	r2, [fp, #-20]	; 0xffffffec
   19318:	str	r3, [sp, #24]
   1931c:	ldr	r0, [fp, #-16]
   19320:	ldr	r1, [fp, #-20]	; 0xffffffec
   19324:	str	r4, [sp, #12]
   19328:	str	lr, [sp, #8]
   1932c:	str	ip, [sp, #4]
   19330:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   19334:	str	r0, [sp, #16]
   19338:	ldr	r0, [sp, #16]
   1933c:	movw	r1, #0
   19340:	cmp	r0, r1
   19344:	beq	1937c <flatcc_json_printer_int32_enum_field@@Base+0x88>
   19348:	ldr	r0, [sp, #16]
   1934c:	bl	18588 <flatcc_json_printer_int32_field@@Base+0x104>
   19350:	str	r0, [sp, #20]
   19354:	ldr	r0, [sp, #20]
   19358:	ldr	lr, [fp, #12]
   1935c:	cmp	r0, lr
   19360:	bne	19378 <flatcc_json_printer_int32_enum_field@@Base+0x84>
   19364:	ldr	r0, [fp, #-12]
   19368:	ldrb	r0, [r0, #28]
   1936c:	cmp	r0, #0
   19370:	beq	19378 <flatcc_json_printer_int32_enum_field@@Base+0x84>
   19374:	b	1942c <flatcc_json_printer_int32_enum_field@@Base+0x138>
   19378:	b	19398 <flatcc_json_printer_int32_enum_field@@Base+0xa4>
   1937c:	ldr	r0, [fp, #-12]
   19380:	ldrsb	r0, [r0, #29]
   19384:	cmp	r0, #0
   19388:	bne	19390 <flatcc_json_printer_int32_enum_field@@Base+0x9c>
   1938c:	b	1942c <flatcc_json_printer_int32_enum_field@@Base+0x138>
   19390:	ldr	r0, [fp, #12]
   19394:	str	r0, [sp, #20]
   19398:	ldr	r0, [fp, #-16]
   1939c:	ldr	r1, [r0, #16]
   193a0:	add	r2, r1, #1
   193a4:	str	r2, [r0, #16]
   193a8:	cmp	r1, #0
   193ac:	beq	193c8 <flatcc_json_printer_int32_enum_field@@Base+0xd4>
   193b0:	ldr	r0, [fp, #-12]
   193b4:	ldr	r1, [r0, #20]
   193b8:	add	r2, r1, #1
   193bc:	str	r2, [r0, #20]
   193c0:	movw	r0, #44	; 0x2c
   193c4:	strb	r0, [r1]
   193c8:	ldr	r0, [fp, #-12]
   193cc:	ldr	r1, [sp, #24]
   193d0:	ldr	r2, [fp, #8]
   193d4:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   193d8:	ldr	r0, [fp, #-12]
   193dc:	ldrsb	r0, [r0, #27]
   193e0:	cmp	r0, #0
   193e4:	beq	1940c <flatcc_json_printer_int32_enum_field@@Base+0x118>
   193e8:	ldr	r0, [sp, #20]
   193ec:	ldr	r1, [fp, #-12]
   193f0:	ldr	r1, [r1, #20]
   193f4:	bl	173c8 <flatcc_json_printer_int32@@Base+0x3c>
   193f8:	ldr	r1, [fp, #-12]
   193fc:	ldr	lr, [r1, #20]
   19400:	add	r0, lr, r0
   19404:	str	r0, [r1, #20]
   19408:	b	1942c <flatcc_json_printer_int32_enum_field@@Base+0x138>
   1940c:	ldr	r0, [fp, #16]
   19410:	ldr	r1, [fp, #-12]
   19414:	ldr	r2, [sp, #20]
   19418:	str	r0, [sp]
   1941c:	mov	r0, r1
   19420:	mov	r1, r2
   19424:	ldr	r2, [sp]
   19428:	blx	r2
   1942c:	sub	sp, fp, #8
   19430:	pop	{r4, sl, fp, pc}

00019434 <flatcc_json_printer_int64_enum_field@@Base>:
   19434:	push	{r4, r5, fp, lr}
   19438:	add	fp, sp, #8
   1943c:	sub	sp, sp, #48	; 0x30
   19440:	ldr	ip, [fp, #20]
   19444:	ldr	lr, [fp, #16]
   19448:	ldr	r4, [fp, #24]
   1944c:	ldr	r5, [fp, #8]
   19450:	str	r0, [fp, #-12]
   19454:	str	r1, [fp, #-16]
   19458:	str	r2, [fp, #-20]	; 0xffffffec
   1945c:	str	r3, [fp, #-24]	; 0xffffffe8
   19460:	str	ip, [sp, #28]
   19464:	str	lr, [sp, #24]
   19468:	ldr	r0, [fp, #-16]
   1946c:	ldr	r1, [fp, #-20]	; 0xffffffec
   19470:	str	r5, [sp, #8]
   19474:	str	r4, [sp, #4]
   19478:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   1947c:	str	r0, [sp, #12]
   19480:	ldr	r0, [sp, #12]
   19484:	movw	r1, #0
   19488:	cmp	r0, r1
   1948c:	beq	194e0 <flatcc_json_printer_int64_enum_field@@Base+0xac>
   19490:	ldr	r0, [sp, #12]
   19494:	bl	186e0 <flatcc_json_printer_int64_field@@Base+0x134>
   19498:	str	r1, [sp, #20]
   1949c:	str	r0, [sp, #16]
   194a0:	ldr	r0, [sp, #16]
   194a4:	ldr	r1, [sp, #20]
   194a8:	ldr	lr, [sp, #24]
   194ac:	ldr	r2, [sp, #28]
   194b0:	eor	r1, r1, r2
   194b4:	eor	r0, r0, lr
   194b8:	orr	r0, r0, r1
   194bc:	cmp	r0, #0
   194c0:	bne	194dc <flatcc_json_printer_int64_enum_field@@Base+0xa8>
   194c4:	b	194c8 <flatcc_json_printer_int64_enum_field@@Base+0x94>
   194c8:	ldr	r0, [fp, #-12]
   194cc:	ldrb	r0, [r0, #28]
   194d0:	cmp	r0, #0
   194d4:	beq	194dc <flatcc_json_printer_int64_enum_field@@Base+0xa8>
   194d8:	b	1959c <flatcc_json_printer_int64_enum_field@@Base+0x168>
   194dc:	b	19504 <flatcc_json_printer_int64_enum_field@@Base+0xd0>
   194e0:	ldr	r0, [fp, #-12]
   194e4:	ldrsb	r0, [r0, #29]
   194e8:	cmp	r0, #0
   194ec:	bne	194f4 <flatcc_json_printer_int64_enum_field@@Base+0xc0>
   194f0:	b	1959c <flatcc_json_printer_int64_enum_field@@Base+0x168>
   194f4:	ldr	r0, [sp, #24]
   194f8:	ldr	r1, [sp, #28]
   194fc:	str	r1, [sp, #20]
   19500:	str	r0, [sp, #16]
   19504:	ldr	r0, [fp, #-16]
   19508:	ldr	r1, [r0, #16]
   1950c:	add	r2, r1, #1
   19510:	str	r2, [r0, #16]
   19514:	cmp	r1, #0
   19518:	beq	19534 <flatcc_json_printer_int64_enum_field@@Base+0x100>
   1951c:	ldr	r0, [fp, #-12]
   19520:	ldr	r1, [r0, #20]
   19524:	add	r2, r1, #1
   19528:	str	r2, [r0, #20]
   1952c:	movw	r0, #44	; 0x2c
   19530:	strb	r0, [r1]
   19534:	ldr	r0, [fp, #-12]
   19538:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1953c:	ldr	r2, [fp, #8]
   19540:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   19544:	ldr	r0, [fp, #-12]
   19548:	ldrsb	r0, [r0, #27]
   1954c:	cmp	r0, #0
   19550:	beq	1957c <flatcc_json_printer_int64_enum_field@@Base+0x148>
   19554:	ldr	r0, [sp, #16]
   19558:	ldr	r1, [sp, #20]
   1955c:	ldr	r2, [fp, #-12]
   19560:	ldr	r2, [r2, #20]
   19564:	bl	17480 <flatcc_json_printer_int64@@Base+0x44>
   19568:	ldr	r1, [fp, #-12]
   1956c:	ldr	r2, [r1, #20]
   19570:	add	r0, r2, r0
   19574:	str	r0, [r1, #20]
   19578:	b	1959c <flatcc_json_printer_int64_enum_field@@Base+0x168>
   1957c:	ldr	r0, [fp, #24]
   19580:	ldr	r1, [fp, #-12]
   19584:	ldr	r2, [sp, #16]
   19588:	ldr	r3, [sp, #20]
   1958c:	str	r0, [sp]
   19590:	mov	r0, r1
   19594:	ldr	r1, [sp]
   19598:	blx	r1
   1959c:	sub	sp, fp, #8
   195a0:	pop	{r4, r5, fp, pc}

000195a4 <flatcc_json_printer_bool_enum_field@@Base>:
   195a4:	push	{r4, sl, fp, lr}
   195a8:	add	fp, sp, #8
   195ac:	sub	sp, sp, #40	; 0x28
   195b0:	ldr	ip, [fp, #16]
   195b4:	ldr	lr, [fp, #12]
   195b8:	ldr	r4, [fp, #8]
   195bc:	str	r0, [fp, #-12]
   195c0:	str	r1, [fp, #-16]
   195c4:	str	r2, [fp, #-20]	; 0xffffffec
   195c8:	str	r3, [sp, #24]
   195cc:	strb	lr, [sp, #23]
   195d0:	ldr	r0, [fp, #-16]
   195d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   195d8:	str	r4, [sp, #12]
   195dc:	str	ip, [sp, #8]
   195e0:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   195e4:	str	r0, [sp, #16]
   195e8:	ldr	r0, [sp, #16]
   195ec:	movw	r1, #0
   195f0:	cmp	r0, r1
   195f4:	beq	1962c <flatcc_json_printer_bool_enum_field@@Base+0x88>
   195f8:	ldr	r0, [sp, #16]
   195fc:	bl	18818 <flatcc_json_printer_bool_field@@Base+0x104>
   19600:	strb	r0, [sp, #22]
   19604:	ldrb	r0, [sp, #22]
   19608:	ldrb	lr, [sp, #23]
   1960c:	cmp	r0, lr
   19610:	bne	19628 <flatcc_json_printer_bool_enum_field@@Base+0x84>
   19614:	ldr	r0, [fp, #-12]
   19618:	ldrb	r0, [r0, #28]
   1961c:	cmp	r0, #0
   19620:	beq	19628 <flatcc_json_printer_bool_enum_field@@Base+0x84>
   19624:	b	196d8 <flatcc_json_printer_bool_enum_field@@Base+0x134>
   19628:	b	19648 <flatcc_json_printer_bool_enum_field@@Base+0xa4>
   1962c:	ldr	r0, [fp, #-12]
   19630:	ldrsb	r0, [r0, #29]
   19634:	cmp	r0, #0
   19638:	bne	19640 <flatcc_json_printer_bool_enum_field@@Base+0x9c>
   1963c:	b	196d8 <flatcc_json_printer_bool_enum_field@@Base+0x134>
   19640:	ldrb	r0, [sp, #23]
   19644:	strb	r0, [sp, #22]
   19648:	ldr	r0, [fp, #-16]
   1964c:	ldr	r1, [r0, #16]
   19650:	add	r2, r1, #1
   19654:	str	r2, [r0, #16]
   19658:	cmp	r1, #0
   1965c:	beq	19678 <flatcc_json_printer_bool_enum_field@@Base+0xd4>
   19660:	ldr	r0, [fp, #-12]
   19664:	ldr	r1, [r0, #20]
   19668:	add	r2, r1, #1
   1966c:	str	r2, [r0, #20]
   19670:	movw	r0, #44	; 0x2c
   19674:	strb	r0, [r1]
   19678:	ldr	r0, [fp, #-12]
   1967c:	ldr	r1, [sp, #24]
   19680:	ldr	r2, [fp, #8]
   19684:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   19688:	ldr	r0, [fp, #-12]
   1968c:	ldrsb	r0, [r0, #27]
   19690:	cmp	r0, #0
   19694:	beq	196bc <flatcc_json_printer_bool_enum_field@@Base+0x118>
   19698:	ldrb	r0, [sp, #22]
   1969c:	ldr	r1, [fp, #-12]
   196a0:	ldr	r1, [r1, #20]
   196a4:	bl	18840 <flatcc_json_printer_bool_field@@Base+0x12c>
   196a8:	ldr	r1, [fp, #-12]
   196ac:	ldr	lr, [r1, #20]
   196b0:	add	r0, lr, r0
   196b4:	str	r0, [r1, #20]
   196b8:	b	196d8 <flatcc_json_printer_bool_enum_field@@Base+0x134>
   196bc:	ldr	r0, [fp, #16]
   196c0:	ldr	r1, [fp, #-12]
   196c4:	str	r0, [sp, #4]
   196c8:	mov	r0, r1
   196cc:	ldrb	r1, [sp, #22]
   196d0:	ldr	r2, [sp, #4]
   196d4:	blx	r2
   196d8:	sub	sp, fp, #8
   196dc:	pop	{r4, sl, fp, pc}

000196e0 <flatcc_json_printer_uint8_struct_field@@Base>:
   196e0:	push	{fp, lr}
   196e4:	mov	fp, sp
   196e8:	sub	sp, sp, #32
   196ec:	ldr	ip, [fp, #12]
   196f0:	ldr	lr, [fp, #8]
   196f4:	str	r0, [fp, #-4]
   196f8:	str	r1, [fp, #-8]
   196fc:	str	r2, [fp, #-12]
   19700:	str	r3, [sp, #16]
   19704:	ldr	r0, [fp, #-12]
   19708:	ldr	r1, [sp, #16]
   1970c:	add	r0, r0, r1
   19710:	str	lr, [sp, #8]
   19714:	str	ip, [sp, #4]
   19718:	bl	17e3c <flatcc_json_printer_uint8_field@@Base+0x108>
   1971c:	strb	r0, [sp, #15]
   19720:	ldr	r0, [fp, #-8]
   19724:	cmp	r0, #0
   19728:	beq	19744 <flatcc_json_printer_uint8_struct_field@@Base+0x64>
   1972c:	ldr	r0, [fp, #-4]
   19730:	ldr	r1, [r0, #20]
   19734:	add	r2, r1, #1
   19738:	str	r2, [r0, #20]
   1973c:	movw	r0, #44	; 0x2c
   19740:	strb	r0, [r1]
   19744:	ldr	r0, [fp, #-4]
   19748:	ldr	r1, [fp, #8]
   1974c:	ldr	r2, [fp, #12]
   19750:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   19754:	ldrb	r0, [sp, #15]
   19758:	ldr	r1, [fp, #-4]
   1975c:	ldr	r1, [r1, #20]
   19760:	and	r0, r0, #255	; 0xff
   19764:	bl	15ac0 <flatcc_json_printer_uint8@@Base+0x40>
   19768:	ldr	r1, [fp, #-4]
   1976c:	ldr	r2, [r1, #20]
   19770:	add	r0, r2, r0
   19774:	str	r0, [r1, #20]
   19778:	mov	sp, fp
   1977c:	pop	{fp, pc}

00019780 <flatcc_json_printer_uint16_struct_field@@Base>:
   19780:	push	{fp, lr}
   19784:	mov	fp, sp
   19788:	sub	sp, sp, #32
   1978c:	ldr	ip, [fp, #12]
   19790:	ldr	lr, [fp, #8]
   19794:	str	r0, [fp, #-4]
   19798:	str	r1, [fp, #-8]
   1979c:	str	r2, [fp, #-12]
   197a0:	str	r3, [sp, #16]
   197a4:	ldr	r0, [fp, #-12]
   197a8:	ldr	r1, [sp, #16]
   197ac:	add	r0, r0, r1
   197b0:	str	lr, [sp, #8]
   197b4:	str	ip, [sp, #4]
   197b8:	bl	17f6c <flatcc_json_printer_uint16_field@@Base+0x108>
   197bc:	strh	r0, [sp, #14]
   197c0:	ldr	r0, [fp, #-8]
   197c4:	cmp	r0, #0
   197c8:	beq	197e4 <flatcc_json_printer_uint16_struct_field@@Base+0x64>
   197cc:	ldr	r0, [fp, #-4]
   197d0:	ldr	r1, [r0, #20]
   197d4:	add	r2, r1, #1
   197d8:	str	r2, [r0, #20]
   197dc:	movw	r0, #44	; 0x2c
   197e0:	strb	r0, [r1]
   197e4:	ldr	r0, [fp, #-4]
   197e8:	ldr	r1, [fp, #8]
   197ec:	ldr	r2, [fp, #12]
   197f0:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   197f4:	ldrh	r0, [sp, #14]
   197f8:	ldr	r1, [fp, #-4]
   197fc:	ldr	r1, [r1, #20]
   19800:	uxth	r0, r0
   19804:	bl	15c9c <flatcc_json_printer_uint16@@Base+0x40>
   19808:	ldr	r1, [fp, #-4]
   1980c:	ldr	r2, [r1, #20]
   19810:	add	r0, r2, r0
   19814:	str	r0, [r1, #20]
   19818:	mov	sp, fp
   1981c:	pop	{fp, pc}

00019820 <flatcc_json_printer_uint32_struct_field@@Base>:
   19820:	push	{fp, lr}
   19824:	mov	fp, sp
   19828:	sub	sp, sp, #32
   1982c:	ldr	ip, [fp, #12]
   19830:	ldr	lr, [fp, #8]
   19834:	str	r0, [fp, #-4]
   19838:	str	r1, [fp, #-8]
   1983c:	str	r2, [fp, #-12]
   19840:	str	r3, [sp, #16]
   19844:	ldr	r0, [fp, #-12]
   19848:	ldr	r1, [sp, #16]
   1984c:	add	r0, r0, r1
   19850:	str	lr, [sp, #8]
   19854:	str	ip, [sp, #4]
   19858:	bl	18098 <flatcc_json_printer_uint32_field@@Base+0x104>
   1985c:	str	r0, [sp, #12]
   19860:	ldr	r0, [fp, #-8]
   19864:	cmp	r0, #0
   19868:	beq	19884 <flatcc_json_printer_uint32_struct_field@@Base+0x64>
   1986c:	ldr	r0, [fp, #-4]
   19870:	ldr	r1, [r0, #20]
   19874:	add	r2, r1, #1
   19878:	str	r2, [r0, #20]
   1987c:	movw	r0, #44	; 0x2c
   19880:	strb	r0, [r1]
   19884:	ldr	r0, [fp, #-4]
   19888:	ldr	r1, [fp, #8]
   1988c:	ldr	r2, [fp, #12]
   19890:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   19894:	ldr	r0, [sp, #12]
   19898:	ldr	r1, [fp, #-4]
   1989c:	ldr	r1, [r1, #20]
   198a0:	bl	15fe0 <flatcc_json_printer_uint32@@Base+0x3c>
   198a4:	ldr	r1, [fp, #-4]
   198a8:	ldr	r2, [r1, #20]
   198ac:	add	r0, r2, r0
   198b0:	str	r0, [r1, #20]
   198b4:	mov	sp, fp
   198b8:	pop	{fp, pc}

000198bc <flatcc_json_printer_uint64_struct_field@@Base>:
   198bc:	push	{fp, lr}
   198c0:	mov	fp, sp
   198c4:	sub	sp, sp, #32
   198c8:	ldr	ip, [fp, #12]
   198cc:	ldr	lr, [fp, #8]
   198d0:	str	r0, [fp, #-4]
   198d4:	str	r1, [fp, #-8]
   198d8:	str	r2, [fp, #-12]
   198dc:	str	r3, [sp, #16]
   198e0:	ldr	r0, [fp, #-12]
   198e4:	ldr	r1, [sp, #16]
   198e8:	add	r0, r0, r1
   198ec:	str	lr, [sp, #4]
   198f0:	str	ip, [sp]
   198f4:	bl	181f0 <flatcc_json_printer_uint64_field@@Base+0x134>
   198f8:	str	r1, [sp, #12]
   198fc:	str	r0, [sp, #8]
   19900:	ldr	r0, [fp, #-8]
   19904:	cmp	r0, #0
   19908:	beq	19924 <flatcc_json_printer_uint64_struct_field@@Base+0x68>
   1990c:	ldr	r0, [fp, #-4]
   19910:	ldr	r1, [r0, #20]
   19914:	add	r2, r1, #1
   19918:	str	r2, [r0, #20]
   1991c:	movw	r0, #44	; 0x2c
   19920:	strb	r0, [r1]
   19924:	ldr	r0, [fp, #-4]
   19928:	ldr	r1, [fp, #8]
   1992c:	ldr	r2, [fp, #12]
   19930:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   19934:	ldr	r0, [sp, #8]
   19938:	ldr	r1, [sp, #12]
   1993c:	ldr	r2, [fp, #-4]
   19940:	ldr	r2, [r2, #20]
   19944:	bl	16654 <flatcc_json_printer_uint64@@Base+0x44>
   19948:	ldr	r1, [fp, #-4]
   1994c:	ldr	r2, [r1, #20]
   19950:	add	r0, r2, r0
   19954:	str	r0, [r1, #20]
   19958:	mov	sp, fp
   1995c:	pop	{fp, pc}

00019960 <flatcc_json_printer_int8_struct_field@@Base>:
   19960:	push	{fp, lr}
   19964:	mov	fp, sp
   19968:	sub	sp, sp, #32
   1996c:	ldr	ip, [fp, #12]
   19970:	ldr	lr, [fp, #8]
   19974:	str	r0, [fp, #-4]
   19978:	str	r1, [fp, #-8]
   1997c:	str	r2, [fp, #-12]
   19980:	str	r3, [sp, #16]
   19984:	ldr	r0, [fp, #-12]
   19988:	ldr	r1, [sp, #16]
   1998c:	add	r0, r0, r1
   19990:	str	lr, [sp, #8]
   19994:	str	ip, [sp, #4]
   19998:	bl	1832c <flatcc_json_printer_int8_field@@Base+0x108>
   1999c:	strb	r0, [sp, #15]
   199a0:	ldr	r0, [fp, #-8]
   199a4:	cmp	r0, #0
   199a8:	beq	199c4 <flatcc_json_printer_int8_struct_field@@Base+0x64>
   199ac:	ldr	r0, [fp, #-4]
   199b0:	ldr	r1, [r0, #20]
   199b4:	add	r2, r1, #1
   199b8:	str	r2, [r0, #20]
   199bc:	movw	r0, #44	; 0x2c
   199c0:	strb	r0, [r1]
   199c4:	ldr	r0, [fp, #-4]
   199c8:	ldr	r1, [fp, #8]
   199cc:	ldr	r2, [fp, #12]
   199d0:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   199d4:	ldrb	r0, [sp, #15]
   199d8:	ldr	r1, [fp, #-4]
   199dc:	ldr	r1, [r1, #20]
   199e0:	sxtb	r0, r0
   199e4:	bl	1725c <flatcc_json_printer_int8@@Base+0x40>
   199e8:	ldr	r1, [fp, #-4]
   199ec:	ldr	r2, [r1, #20]
   199f0:	add	r0, r2, r0
   199f4:	str	r0, [r1, #20]
   199f8:	mov	sp, fp
   199fc:	pop	{fp, pc}

00019a00 <flatcc_json_printer_int16_struct_field@@Base>:
   19a00:	push	{fp, lr}
   19a04:	mov	fp, sp
   19a08:	sub	sp, sp, #32
   19a0c:	ldr	ip, [fp, #12]
   19a10:	ldr	lr, [fp, #8]
   19a14:	str	r0, [fp, #-4]
   19a18:	str	r1, [fp, #-8]
   19a1c:	str	r2, [fp, #-12]
   19a20:	str	r3, [sp, #16]
   19a24:	ldr	r0, [fp, #-12]
   19a28:	ldr	r1, [sp, #16]
   19a2c:	add	r0, r0, r1
   19a30:	str	lr, [sp, #8]
   19a34:	str	ip, [sp, #4]
   19a38:	bl	1845c <flatcc_json_printer_int16_field@@Base+0x108>
   19a3c:	strh	r0, [sp, #14]
   19a40:	ldr	r0, [fp, #-8]
   19a44:	cmp	r0, #0
   19a48:	beq	19a64 <flatcc_json_printer_int16_struct_field@@Base+0x64>
   19a4c:	ldr	r0, [fp, #-4]
   19a50:	ldr	r1, [r0, #20]
   19a54:	add	r2, r1, #1
   19a58:	str	r2, [r0, #20]
   19a5c:	movw	r0, #44	; 0x2c
   19a60:	strb	r0, [r1]
   19a64:	ldr	r0, [fp, #-4]
   19a68:	ldr	r1, [fp, #8]
   19a6c:	ldr	r2, [fp, #12]
   19a70:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   19a74:	ldrh	r0, [sp, #14]
   19a78:	ldr	r1, [fp, #-4]
   19a7c:	ldr	r1, [r1, #20]
   19a80:	sxth	r0, r0
   19a84:	bl	17314 <flatcc_json_printer_int16@@Base+0x40>
   19a88:	ldr	r1, [fp, #-4]
   19a8c:	ldr	r2, [r1, #20]
   19a90:	add	r0, r2, r0
   19a94:	str	r0, [r1, #20]
   19a98:	mov	sp, fp
   19a9c:	pop	{fp, pc}

00019aa0 <flatcc_json_printer_int32_struct_field@@Base>:
   19aa0:	push	{fp, lr}
   19aa4:	mov	fp, sp
   19aa8:	sub	sp, sp, #32
   19aac:	ldr	ip, [fp, #12]
   19ab0:	ldr	lr, [fp, #8]
   19ab4:	str	r0, [fp, #-4]
   19ab8:	str	r1, [fp, #-8]
   19abc:	str	r2, [fp, #-12]
   19ac0:	str	r3, [sp, #16]
   19ac4:	ldr	r0, [fp, #-12]
   19ac8:	ldr	r1, [sp, #16]
   19acc:	add	r0, r0, r1
   19ad0:	str	lr, [sp, #8]
   19ad4:	str	ip, [sp, #4]
   19ad8:	bl	18588 <flatcc_json_printer_int32_field@@Base+0x104>
   19adc:	str	r0, [sp, #12]
   19ae0:	ldr	r0, [fp, #-8]
   19ae4:	cmp	r0, #0
   19ae8:	beq	19b04 <flatcc_json_printer_int32_struct_field@@Base+0x64>
   19aec:	ldr	r0, [fp, #-4]
   19af0:	ldr	r1, [r0, #20]
   19af4:	add	r2, r1, #1
   19af8:	str	r2, [r0, #20]
   19afc:	movw	r0, #44	; 0x2c
   19b00:	strb	r0, [r1]
   19b04:	ldr	r0, [fp, #-4]
   19b08:	ldr	r1, [fp, #8]
   19b0c:	ldr	r2, [fp, #12]
   19b10:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   19b14:	ldr	r0, [sp, #12]
   19b18:	ldr	r1, [fp, #-4]
   19b1c:	ldr	r1, [r1, #20]
   19b20:	bl	173c8 <flatcc_json_printer_int32@@Base+0x3c>
   19b24:	ldr	r1, [fp, #-4]
   19b28:	ldr	r2, [r1, #20]
   19b2c:	add	r0, r2, r0
   19b30:	str	r0, [r1, #20]
   19b34:	mov	sp, fp
   19b38:	pop	{fp, pc}

00019b3c <flatcc_json_printer_int64_struct_field@@Base>:
   19b3c:	push	{fp, lr}
   19b40:	mov	fp, sp
   19b44:	sub	sp, sp, #32
   19b48:	ldr	ip, [fp, #12]
   19b4c:	ldr	lr, [fp, #8]
   19b50:	str	r0, [fp, #-4]
   19b54:	str	r1, [fp, #-8]
   19b58:	str	r2, [fp, #-12]
   19b5c:	str	r3, [sp, #16]
   19b60:	ldr	r0, [fp, #-12]
   19b64:	ldr	r1, [sp, #16]
   19b68:	add	r0, r0, r1
   19b6c:	str	lr, [sp, #4]
   19b70:	str	ip, [sp]
   19b74:	bl	186e0 <flatcc_json_printer_int64_field@@Base+0x134>
   19b78:	str	r1, [sp, #12]
   19b7c:	str	r0, [sp, #8]
   19b80:	ldr	r0, [fp, #-8]
   19b84:	cmp	r0, #0
   19b88:	beq	19ba4 <flatcc_json_printer_int64_struct_field@@Base+0x68>
   19b8c:	ldr	r0, [fp, #-4]
   19b90:	ldr	r1, [r0, #20]
   19b94:	add	r2, r1, #1
   19b98:	str	r2, [r0, #20]
   19b9c:	movw	r0, #44	; 0x2c
   19ba0:	strb	r0, [r1]
   19ba4:	ldr	r0, [fp, #-4]
   19ba8:	ldr	r1, [fp, #8]
   19bac:	ldr	r2, [fp, #12]
   19bb0:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   19bb4:	ldr	r0, [sp, #8]
   19bb8:	ldr	r1, [sp, #12]
   19bbc:	ldr	r2, [fp, #-4]
   19bc0:	ldr	r2, [r2, #20]
   19bc4:	bl	17480 <flatcc_json_printer_int64@@Base+0x44>
   19bc8:	ldr	r1, [fp, #-4]
   19bcc:	ldr	r2, [r1, #20]
   19bd0:	add	r0, r2, r0
   19bd4:	str	r0, [r1, #20]
   19bd8:	mov	sp, fp
   19bdc:	pop	{fp, pc}

00019be0 <flatcc_json_printer_bool_struct_field@@Base>:
   19be0:	push	{fp, lr}
   19be4:	mov	fp, sp
   19be8:	sub	sp, sp, #32
   19bec:	ldr	ip, [fp, #12]
   19bf0:	ldr	lr, [fp, #8]
   19bf4:	str	r0, [fp, #-4]
   19bf8:	str	r1, [fp, #-8]
   19bfc:	str	r2, [fp, #-12]
   19c00:	str	r3, [sp, #16]
   19c04:	ldr	r0, [fp, #-12]
   19c08:	ldr	r1, [sp, #16]
   19c0c:	add	r0, r0, r1
   19c10:	str	lr, [sp, #8]
   19c14:	str	ip, [sp, #4]
   19c18:	bl	18818 <flatcc_json_printer_bool_field@@Base+0x104>
   19c1c:	strb	r0, [sp, #15]
   19c20:	ldr	r0, [fp, #-8]
   19c24:	cmp	r0, #0
   19c28:	beq	19c44 <flatcc_json_printer_bool_struct_field@@Base+0x64>
   19c2c:	ldr	r0, [fp, #-4]
   19c30:	ldr	r1, [r0, #20]
   19c34:	add	r2, r1, #1
   19c38:	str	r2, [r0, #20]
   19c3c:	movw	r0, #44	; 0x2c
   19c40:	strb	r0, [r1]
   19c44:	ldr	r0, [fp, #-4]
   19c48:	ldr	r1, [fp, #8]
   19c4c:	ldr	r2, [fp, #12]
   19c50:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   19c54:	ldrb	r0, [sp, #15]
   19c58:	ldr	r1, [fp, #-4]
   19c5c:	ldr	r1, [r1, #20]
   19c60:	bl	18840 <flatcc_json_printer_bool_field@@Base+0x12c>
   19c64:	ldr	r1, [fp, #-4]
   19c68:	ldr	r2, [r1, #20]
   19c6c:	add	r0, r2, r0
   19c70:	str	r0, [r1, #20]
   19c74:	mov	sp, fp
   19c78:	pop	{fp, pc}

00019c7c <flatcc_json_printer_float_struct_field@@Base>:
   19c7c:	push	{fp, lr}
   19c80:	mov	fp, sp
   19c84:	sub	sp, sp, #32
   19c88:	ldr	ip, [fp, #12]
   19c8c:	ldr	lr, [fp, #8]
   19c90:	str	r0, [fp, #-4]
   19c94:	str	r1, [fp, #-8]
   19c98:	str	r2, [fp, #-12]
   19c9c:	str	r3, [sp, #16]
   19ca0:	ldr	r0, [fp, #-12]
   19ca4:	ldr	r1, [sp, #16]
   19ca8:	add	r0, r0, r1
   19cac:	str	lr, [sp, #8]
   19cb0:	str	ip, [sp, #4]
   19cb4:	bl	189f8 <flatcc_json_printer_float_field@@Base+0x108>
   19cb8:	vstr	s0, [sp, #12]
   19cbc:	ldr	r0, [fp, #-8]
   19cc0:	cmp	r0, #0
   19cc4:	beq	19ce0 <flatcc_json_printer_float_struct_field@@Base+0x64>
   19cc8:	ldr	r0, [fp, #-4]
   19ccc:	ldr	r1, [r0, #20]
   19cd0:	add	r2, r1, #1
   19cd4:	str	r2, [r0, #20]
   19cd8:	movw	r0, #44	; 0x2c
   19cdc:	strb	r0, [r1]
   19ce0:	ldr	r0, [fp, #-4]
   19ce4:	ldr	r1, [fp, #8]
   19ce8:	ldr	r2, [fp, #12]
   19cec:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   19cf0:	vldr	s0, [sp, #12]
   19cf4:	vcvt.f64.f32	d0, s0
   19cf8:	ldr	r0, [fp, #-4]
   19cfc:	ldr	r0, [r0, #20]
   19d00:	bl	14e50 <flatcc_json_printer_fmt_float@@Base+0x2c>
   19d04:	ldr	r1, [fp, #-4]
   19d08:	ldr	r2, [r1, #20]
   19d0c:	add	r0, r2, r0
   19d10:	str	r0, [r1, #20]
   19d14:	mov	sp, fp
   19d18:	pop	{fp, pc}

00019d1c <flatcc_json_printer_double_struct_field@@Base>:
   19d1c:	push	{fp, lr}
   19d20:	mov	fp, sp
   19d24:	sub	sp, sp, #32
   19d28:	ldr	ip, [fp, #12]
   19d2c:	ldr	lr, [fp, #8]
   19d30:	str	r0, [fp, #-4]
   19d34:	str	r1, [fp, #-8]
   19d38:	str	r2, [fp, #-12]
   19d3c:	str	r3, [sp, #16]
   19d40:	ldr	r0, [fp, #-12]
   19d44:	ldr	r1, [sp, #16]
   19d48:	add	r0, r0, r1
   19d4c:	str	lr, [sp, #4]
   19d50:	str	ip, [sp]
   19d54:	bl	18b20 <flatcc_json_printer_double_field@@Base+0x104>
   19d58:	vstr	d0, [sp, #8]
   19d5c:	ldr	r0, [fp, #-8]
   19d60:	cmp	r0, #0
   19d64:	beq	19d80 <flatcc_json_printer_double_struct_field@@Base+0x64>
   19d68:	ldr	r0, [fp, #-4]
   19d6c:	ldr	r1, [r0, #20]
   19d70:	add	r2, r1, #1
   19d74:	str	r2, [r0, #20]
   19d78:	movw	r0, #44	; 0x2c
   19d7c:	strb	r0, [r1]
   19d80:	ldr	r0, [fp, #-4]
   19d84:	ldr	r1, [fp, #8]
   19d88:	ldr	r2, [fp, #12]
   19d8c:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   19d90:	vldr	d0, [sp, #8]
   19d94:	ldr	r0, [fp, #-4]
   19d98:	ldr	r0, [r0, #20]
   19d9c:	bl	14e50 <flatcc_json_printer_fmt_float@@Base+0x2c>
   19da0:	ldr	r1, [fp, #-4]
   19da4:	ldr	r2, [r1, #20]
   19da8:	add	r0, r2, r0
   19dac:	str	r0, [r1, #20]
   19db0:	mov	sp, fp
   19db4:	pop	{fp, pc}

00019db8 <flatcc_json_printer_uint8_enum_struct_field@@Base>:
   19db8:	push	{r4, sl, fp, lr}
   19dbc:	add	fp, sp, #8
   19dc0:	sub	sp, sp, #40	; 0x28
   19dc4:	ldr	ip, [fp, #16]
   19dc8:	ldr	lr, [fp, #12]
   19dcc:	ldr	r4, [fp, #8]
   19dd0:	str	r0, [fp, #-12]
   19dd4:	str	r1, [fp, #-16]
   19dd8:	str	r2, [fp, #-20]	; 0xffffffec
   19ddc:	str	r3, [sp, #24]
   19de0:	ldr	r0, [fp, #-20]	; 0xffffffec
   19de4:	ldr	r1, [sp, #24]
   19de8:	add	r0, r0, r1
   19dec:	str	r4, [sp, #16]
   19df0:	str	lr, [sp, #12]
   19df4:	str	ip, [sp, #8]
   19df8:	bl	17e3c <flatcc_json_printer_uint8_field@@Base+0x108>
   19dfc:	strb	r0, [sp, #23]
   19e00:	ldr	r0, [fp, #-16]
   19e04:	cmp	r0, #0
   19e08:	beq	19e24 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x6c>
   19e0c:	ldr	r0, [fp, #-12]
   19e10:	ldr	r1, [r0, #20]
   19e14:	add	r2, r1, #1
   19e18:	str	r2, [r0, #20]
   19e1c:	movw	r0, #44	; 0x2c
   19e20:	strb	r0, [r1]
   19e24:	ldr	r0, [fp, #-12]
   19e28:	ldr	r1, [fp, #8]
   19e2c:	ldr	r2, [fp, #12]
   19e30:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   19e34:	ldr	r0, [fp, #-12]
   19e38:	ldrsb	r0, [r0, #27]
   19e3c:	cmp	r0, #0
   19e40:	beq	19e6c <flatcc_json_printer_uint8_enum_struct_field@@Base+0xb4>
   19e44:	ldrb	r0, [sp, #23]
   19e48:	ldr	r1, [fp, #-12]
   19e4c:	ldr	r1, [r1, #20]
   19e50:	and	r0, r0, #255	; 0xff
   19e54:	bl	15ac0 <flatcc_json_printer_uint8@@Base+0x40>
   19e58:	ldr	r1, [fp, #-12]
   19e5c:	ldr	lr, [r1, #20]
   19e60:	add	r0, lr, r0
   19e64:	str	r0, [r1, #20]
   19e68:	b	19e88 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xd0>
   19e6c:	ldr	r0, [fp, #16]
   19e70:	ldr	r1, [fp, #-12]
   19e74:	str	r0, [sp, #4]
   19e78:	mov	r0, r1
   19e7c:	ldrb	r1, [sp, #23]
   19e80:	ldr	r2, [sp, #4]
   19e84:	blx	r2
   19e88:	sub	sp, fp, #8
   19e8c:	pop	{r4, sl, fp, pc}

00019e90 <flatcc_json_printer_uint16_enum_struct_field@@Base>:
   19e90:	push	{r4, sl, fp, lr}
   19e94:	add	fp, sp, #8
   19e98:	sub	sp, sp, #40	; 0x28
   19e9c:	ldr	ip, [fp, #16]
   19ea0:	ldr	lr, [fp, #12]
   19ea4:	ldr	r4, [fp, #8]
   19ea8:	str	r0, [fp, #-12]
   19eac:	str	r1, [fp, #-16]
   19eb0:	str	r2, [fp, #-20]	; 0xffffffec
   19eb4:	str	r3, [sp, #24]
   19eb8:	ldr	r0, [fp, #-20]	; 0xffffffec
   19ebc:	ldr	r1, [sp, #24]
   19ec0:	add	r0, r0, r1
   19ec4:	str	r4, [sp, #16]
   19ec8:	str	lr, [sp, #12]
   19ecc:	str	ip, [sp, #8]
   19ed0:	bl	17f6c <flatcc_json_printer_uint16_field@@Base+0x108>
   19ed4:	strh	r0, [sp, #22]
   19ed8:	ldr	r0, [fp, #-16]
   19edc:	cmp	r0, #0
   19ee0:	beq	19efc <flatcc_json_printer_uint16_enum_struct_field@@Base+0x6c>
   19ee4:	ldr	r0, [fp, #-12]
   19ee8:	ldr	r1, [r0, #20]
   19eec:	add	r2, r1, #1
   19ef0:	str	r2, [r0, #20]
   19ef4:	movw	r0, #44	; 0x2c
   19ef8:	strb	r0, [r1]
   19efc:	ldr	r0, [fp, #-12]
   19f00:	ldr	r1, [fp, #8]
   19f04:	ldr	r2, [fp, #12]
   19f08:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   19f0c:	ldr	r0, [fp, #-12]
   19f10:	ldrsb	r0, [r0, #27]
   19f14:	cmp	r0, #0
   19f18:	beq	19f44 <flatcc_json_printer_uint16_enum_struct_field@@Base+0xb4>
   19f1c:	ldrh	r0, [sp, #22]
   19f20:	ldr	r1, [fp, #-12]
   19f24:	ldr	r1, [r1, #20]
   19f28:	uxth	r0, r0
   19f2c:	bl	15c9c <flatcc_json_printer_uint16@@Base+0x40>
   19f30:	ldr	r1, [fp, #-12]
   19f34:	ldr	lr, [r1, #20]
   19f38:	add	r0, lr, r0
   19f3c:	str	r0, [r1, #20]
   19f40:	b	19f60 <flatcc_json_printer_uint16_enum_struct_field@@Base+0xd0>
   19f44:	ldr	r0, [fp, #16]
   19f48:	ldr	r1, [fp, #-12]
   19f4c:	str	r0, [sp, #4]
   19f50:	mov	r0, r1
   19f54:	ldrh	r1, [sp, #22]
   19f58:	ldr	r2, [sp, #4]
   19f5c:	blx	r2
   19f60:	sub	sp, fp, #8
   19f64:	pop	{r4, sl, fp, pc}

00019f68 <flatcc_json_printer_uint32_enum_struct_field@@Base>:
   19f68:	push	{r4, sl, fp, lr}
   19f6c:	add	fp, sp, #8
   19f70:	sub	sp, sp, #40	; 0x28
   19f74:	ldr	ip, [fp, #16]
   19f78:	ldr	lr, [fp, #12]
   19f7c:	ldr	r4, [fp, #8]
   19f80:	str	r0, [fp, #-12]
   19f84:	str	r1, [fp, #-16]
   19f88:	str	r2, [fp, #-20]	; 0xffffffec
   19f8c:	str	r3, [sp, #24]
   19f90:	ldr	r0, [fp, #-20]	; 0xffffffec
   19f94:	ldr	r1, [sp, #24]
   19f98:	add	r0, r0, r1
   19f9c:	str	r4, [sp, #16]
   19fa0:	str	lr, [sp, #12]
   19fa4:	str	ip, [sp, #8]
   19fa8:	bl	18098 <flatcc_json_printer_uint32_field@@Base+0x104>
   19fac:	str	r0, [sp, #20]
   19fb0:	ldr	r0, [fp, #-16]
   19fb4:	cmp	r0, #0
   19fb8:	beq	19fd4 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x6c>
   19fbc:	ldr	r0, [fp, #-12]
   19fc0:	ldr	r1, [r0, #20]
   19fc4:	add	r2, r1, #1
   19fc8:	str	r2, [r0, #20]
   19fcc:	movw	r0, #44	; 0x2c
   19fd0:	strb	r0, [r1]
   19fd4:	ldr	r0, [fp, #-12]
   19fd8:	ldr	r1, [fp, #8]
   19fdc:	ldr	r2, [fp, #12]
   19fe0:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   19fe4:	ldr	r0, [fp, #-12]
   19fe8:	ldrsb	r0, [r0, #27]
   19fec:	cmp	r0, #0
   19ff0:	beq	1a018 <flatcc_json_printer_uint32_enum_struct_field@@Base+0xb0>
   19ff4:	ldr	r0, [sp, #20]
   19ff8:	ldr	r1, [fp, #-12]
   19ffc:	ldr	r1, [r1, #20]
   1a000:	bl	15fe0 <flatcc_json_printer_uint32@@Base+0x3c>
   1a004:	ldr	r1, [fp, #-12]
   1a008:	ldr	lr, [r1, #20]
   1a00c:	add	r0, lr, r0
   1a010:	str	r0, [r1, #20]
   1a014:	b	1a038 <flatcc_json_printer_uint32_enum_struct_field@@Base+0xd0>
   1a018:	ldr	r0, [fp, #16]
   1a01c:	ldr	r1, [fp, #-12]
   1a020:	ldr	r2, [sp, #20]
   1a024:	str	r0, [sp, #4]
   1a028:	mov	r0, r1
   1a02c:	mov	r1, r2
   1a030:	ldr	r2, [sp, #4]
   1a034:	blx	r2
   1a038:	sub	sp, fp, #8
   1a03c:	pop	{r4, sl, fp, pc}

0001a040 <flatcc_json_printer_uint64_enum_struct_field@@Base>:
   1a040:	push	{r4, sl, fp, lr}
   1a044:	add	fp, sp, #8
   1a048:	sub	sp, sp, #40	; 0x28
   1a04c:	ldr	ip, [fp, #16]
   1a050:	ldr	lr, [fp, #12]
   1a054:	ldr	r4, [fp, #8]
   1a058:	str	r0, [fp, #-12]
   1a05c:	str	r1, [fp, #-16]
   1a060:	str	r2, [fp, #-20]	; 0xffffffec
   1a064:	str	r3, [sp, #24]
   1a068:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a06c:	ldr	r1, [sp, #24]
   1a070:	add	r0, r0, r1
   1a074:	str	r4, [sp, #12]
   1a078:	str	lr, [sp, #8]
   1a07c:	str	ip, [sp, #4]
   1a080:	bl	181f0 <flatcc_json_printer_uint64_field@@Base+0x134>
   1a084:	str	r1, [sp, #20]
   1a088:	str	r0, [sp, #16]
   1a08c:	ldr	r0, [fp, #-16]
   1a090:	cmp	r0, #0
   1a094:	beq	1a0b0 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x70>
   1a098:	ldr	r0, [fp, #-12]
   1a09c:	ldr	r1, [r0, #20]
   1a0a0:	add	r2, r1, #1
   1a0a4:	str	r2, [r0, #20]
   1a0a8:	movw	r0, #44	; 0x2c
   1a0ac:	strb	r0, [r1]
   1a0b0:	ldr	r0, [fp, #-12]
   1a0b4:	ldr	r1, [fp, #8]
   1a0b8:	ldr	r2, [fp, #12]
   1a0bc:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   1a0c0:	ldr	r0, [fp, #-12]
   1a0c4:	ldrsb	r0, [r0, #27]
   1a0c8:	cmp	r0, #0
   1a0cc:	beq	1a0f8 <flatcc_json_printer_uint64_enum_struct_field@@Base+0xb8>
   1a0d0:	ldr	r0, [sp, #16]
   1a0d4:	ldr	r1, [sp, #20]
   1a0d8:	ldr	r2, [fp, #-12]
   1a0dc:	ldr	r2, [r2, #20]
   1a0e0:	bl	16654 <flatcc_json_printer_uint64@@Base+0x44>
   1a0e4:	ldr	r1, [fp, #-12]
   1a0e8:	ldr	r2, [r1, #20]
   1a0ec:	add	r0, r2, r0
   1a0f0:	str	r0, [r1, #20]
   1a0f4:	b	1a118 <flatcc_json_printer_uint64_enum_struct_field@@Base+0xd8>
   1a0f8:	ldr	r0, [fp, #16]
   1a0fc:	ldr	r1, [fp, #-12]
   1a100:	ldr	r2, [sp, #16]
   1a104:	ldr	r3, [sp, #20]
   1a108:	str	r0, [sp]
   1a10c:	mov	r0, r1
   1a110:	ldr	r1, [sp]
   1a114:	blx	r1
   1a118:	sub	sp, fp, #8
   1a11c:	pop	{r4, sl, fp, pc}

0001a120 <flatcc_json_printer_int8_enum_struct_field@@Base>:
   1a120:	push	{r4, sl, fp, lr}
   1a124:	add	fp, sp, #8
   1a128:	sub	sp, sp, #40	; 0x28
   1a12c:	ldr	ip, [fp, #16]
   1a130:	ldr	lr, [fp, #12]
   1a134:	ldr	r4, [fp, #8]
   1a138:	str	r0, [fp, #-12]
   1a13c:	str	r1, [fp, #-16]
   1a140:	str	r2, [fp, #-20]	; 0xffffffec
   1a144:	str	r3, [sp, #24]
   1a148:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a14c:	ldr	r1, [sp, #24]
   1a150:	add	r0, r0, r1
   1a154:	str	r4, [sp, #16]
   1a158:	str	lr, [sp, #12]
   1a15c:	str	ip, [sp, #8]
   1a160:	bl	1832c <flatcc_json_printer_int8_field@@Base+0x108>
   1a164:	strb	r0, [sp, #23]
   1a168:	ldr	r0, [fp, #-16]
   1a16c:	cmp	r0, #0
   1a170:	beq	1a18c <flatcc_json_printer_int8_enum_struct_field@@Base+0x6c>
   1a174:	ldr	r0, [fp, #-12]
   1a178:	ldr	r1, [r0, #20]
   1a17c:	add	r2, r1, #1
   1a180:	str	r2, [r0, #20]
   1a184:	movw	r0, #44	; 0x2c
   1a188:	strb	r0, [r1]
   1a18c:	ldr	r0, [fp, #-12]
   1a190:	ldr	r1, [fp, #8]
   1a194:	ldr	r2, [fp, #12]
   1a198:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   1a19c:	ldr	r0, [fp, #-12]
   1a1a0:	ldrsb	r0, [r0, #27]
   1a1a4:	cmp	r0, #0
   1a1a8:	beq	1a1d4 <flatcc_json_printer_int8_enum_struct_field@@Base+0xb4>
   1a1ac:	ldrb	r0, [sp, #23]
   1a1b0:	ldr	r1, [fp, #-12]
   1a1b4:	ldr	r1, [r1, #20]
   1a1b8:	sxtb	r0, r0
   1a1bc:	bl	1725c <flatcc_json_printer_int8@@Base+0x40>
   1a1c0:	ldr	r1, [fp, #-12]
   1a1c4:	ldr	lr, [r1, #20]
   1a1c8:	add	r0, lr, r0
   1a1cc:	str	r0, [r1, #20]
   1a1d0:	b	1a1f0 <flatcc_json_printer_int8_enum_struct_field@@Base+0xd0>
   1a1d4:	ldr	r0, [fp, #16]
   1a1d8:	ldr	r1, [fp, #-12]
   1a1dc:	str	r0, [sp, #4]
   1a1e0:	mov	r0, r1
   1a1e4:	ldrsb	r1, [sp, #23]
   1a1e8:	ldr	r2, [sp, #4]
   1a1ec:	blx	r2
   1a1f0:	sub	sp, fp, #8
   1a1f4:	pop	{r4, sl, fp, pc}

0001a1f8 <flatcc_json_printer_int16_enum_struct_field@@Base>:
   1a1f8:	push	{r4, sl, fp, lr}
   1a1fc:	add	fp, sp, #8
   1a200:	sub	sp, sp, #40	; 0x28
   1a204:	ldr	ip, [fp, #16]
   1a208:	ldr	lr, [fp, #12]
   1a20c:	ldr	r4, [fp, #8]
   1a210:	str	r0, [fp, #-12]
   1a214:	str	r1, [fp, #-16]
   1a218:	str	r2, [fp, #-20]	; 0xffffffec
   1a21c:	str	r3, [sp, #24]
   1a220:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a224:	ldr	r1, [sp, #24]
   1a228:	add	r0, r0, r1
   1a22c:	str	r4, [sp, #16]
   1a230:	str	lr, [sp, #12]
   1a234:	str	ip, [sp, #8]
   1a238:	bl	1845c <flatcc_json_printer_int16_field@@Base+0x108>
   1a23c:	strh	r0, [sp, #22]
   1a240:	ldr	r0, [fp, #-16]
   1a244:	cmp	r0, #0
   1a248:	beq	1a264 <flatcc_json_printer_int16_enum_struct_field@@Base+0x6c>
   1a24c:	ldr	r0, [fp, #-12]
   1a250:	ldr	r1, [r0, #20]
   1a254:	add	r2, r1, #1
   1a258:	str	r2, [r0, #20]
   1a25c:	movw	r0, #44	; 0x2c
   1a260:	strb	r0, [r1]
   1a264:	ldr	r0, [fp, #-12]
   1a268:	ldr	r1, [fp, #8]
   1a26c:	ldr	r2, [fp, #12]
   1a270:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   1a274:	ldr	r0, [fp, #-12]
   1a278:	ldrsb	r0, [r0, #27]
   1a27c:	cmp	r0, #0
   1a280:	beq	1a2ac <flatcc_json_printer_int16_enum_struct_field@@Base+0xb4>
   1a284:	ldrh	r0, [sp, #22]
   1a288:	ldr	r1, [fp, #-12]
   1a28c:	ldr	r1, [r1, #20]
   1a290:	sxth	r0, r0
   1a294:	bl	17314 <flatcc_json_printer_int16@@Base+0x40>
   1a298:	ldr	r1, [fp, #-12]
   1a29c:	ldr	lr, [r1, #20]
   1a2a0:	add	r0, lr, r0
   1a2a4:	str	r0, [r1, #20]
   1a2a8:	b	1a2c8 <flatcc_json_printer_int16_enum_struct_field@@Base+0xd0>
   1a2ac:	ldr	r0, [fp, #16]
   1a2b0:	ldr	r1, [fp, #-12]
   1a2b4:	str	r0, [sp, #4]
   1a2b8:	mov	r0, r1
   1a2bc:	ldrsh	r1, [sp, #22]
   1a2c0:	ldr	r2, [sp, #4]
   1a2c4:	blx	r2
   1a2c8:	sub	sp, fp, #8
   1a2cc:	pop	{r4, sl, fp, pc}

0001a2d0 <flatcc_json_printer_int32_enum_struct_field@@Base>:
   1a2d0:	push	{r4, sl, fp, lr}
   1a2d4:	add	fp, sp, #8
   1a2d8:	sub	sp, sp, #40	; 0x28
   1a2dc:	ldr	ip, [fp, #16]
   1a2e0:	ldr	lr, [fp, #12]
   1a2e4:	ldr	r4, [fp, #8]
   1a2e8:	str	r0, [fp, #-12]
   1a2ec:	str	r1, [fp, #-16]
   1a2f0:	str	r2, [fp, #-20]	; 0xffffffec
   1a2f4:	str	r3, [sp, #24]
   1a2f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a2fc:	ldr	r1, [sp, #24]
   1a300:	add	r0, r0, r1
   1a304:	str	r4, [sp, #16]
   1a308:	str	lr, [sp, #12]
   1a30c:	str	ip, [sp, #8]
   1a310:	bl	18588 <flatcc_json_printer_int32_field@@Base+0x104>
   1a314:	str	r0, [sp, #20]
   1a318:	ldr	r0, [fp, #-16]
   1a31c:	cmp	r0, #0
   1a320:	beq	1a33c <flatcc_json_printer_int32_enum_struct_field@@Base+0x6c>
   1a324:	ldr	r0, [fp, #-12]
   1a328:	ldr	r1, [r0, #20]
   1a32c:	add	r2, r1, #1
   1a330:	str	r2, [r0, #20]
   1a334:	movw	r0, #44	; 0x2c
   1a338:	strb	r0, [r1]
   1a33c:	ldr	r0, [fp, #-12]
   1a340:	ldr	r1, [fp, #8]
   1a344:	ldr	r2, [fp, #12]
   1a348:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   1a34c:	ldr	r0, [fp, #-12]
   1a350:	ldrsb	r0, [r0, #27]
   1a354:	cmp	r0, #0
   1a358:	beq	1a380 <flatcc_json_printer_int32_enum_struct_field@@Base+0xb0>
   1a35c:	ldr	r0, [sp, #20]
   1a360:	ldr	r1, [fp, #-12]
   1a364:	ldr	r1, [r1, #20]
   1a368:	bl	173c8 <flatcc_json_printer_int32@@Base+0x3c>
   1a36c:	ldr	r1, [fp, #-12]
   1a370:	ldr	lr, [r1, #20]
   1a374:	add	r0, lr, r0
   1a378:	str	r0, [r1, #20]
   1a37c:	b	1a3a0 <flatcc_json_printer_int32_enum_struct_field@@Base+0xd0>
   1a380:	ldr	r0, [fp, #16]
   1a384:	ldr	r1, [fp, #-12]
   1a388:	ldr	r2, [sp, #20]
   1a38c:	str	r0, [sp, #4]
   1a390:	mov	r0, r1
   1a394:	mov	r1, r2
   1a398:	ldr	r2, [sp, #4]
   1a39c:	blx	r2
   1a3a0:	sub	sp, fp, #8
   1a3a4:	pop	{r4, sl, fp, pc}

0001a3a8 <flatcc_json_printer_int64_enum_struct_field@@Base>:
   1a3a8:	push	{r4, sl, fp, lr}
   1a3ac:	add	fp, sp, #8
   1a3b0:	sub	sp, sp, #40	; 0x28
   1a3b4:	ldr	ip, [fp, #16]
   1a3b8:	ldr	lr, [fp, #12]
   1a3bc:	ldr	r4, [fp, #8]
   1a3c0:	str	r0, [fp, #-12]
   1a3c4:	str	r1, [fp, #-16]
   1a3c8:	str	r2, [fp, #-20]	; 0xffffffec
   1a3cc:	str	r3, [sp, #24]
   1a3d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a3d4:	ldr	r1, [sp, #24]
   1a3d8:	add	r0, r0, r1
   1a3dc:	str	r4, [sp, #12]
   1a3e0:	str	lr, [sp, #8]
   1a3e4:	str	ip, [sp, #4]
   1a3e8:	bl	186e0 <flatcc_json_printer_int64_field@@Base+0x134>
   1a3ec:	str	r1, [sp, #20]
   1a3f0:	str	r0, [sp, #16]
   1a3f4:	ldr	r0, [fp, #-16]
   1a3f8:	cmp	r0, #0
   1a3fc:	beq	1a418 <flatcc_json_printer_int64_enum_struct_field@@Base+0x70>
   1a400:	ldr	r0, [fp, #-12]
   1a404:	ldr	r1, [r0, #20]
   1a408:	add	r2, r1, #1
   1a40c:	str	r2, [r0, #20]
   1a410:	movw	r0, #44	; 0x2c
   1a414:	strb	r0, [r1]
   1a418:	ldr	r0, [fp, #-12]
   1a41c:	ldr	r1, [fp, #8]
   1a420:	ldr	r2, [fp, #12]
   1a424:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   1a428:	ldr	r0, [fp, #-12]
   1a42c:	ldrsb	r0, [r0, #27]
   1a430:	cmp	r0, #0
   1a434:	beq	1a460 <flatcc_json_printer_int64_enum_struct_field@@Base+0xb8>
   1a438:	ldr	r0, [sp, #16]
   1a43c:	ldr	r1, [sp, #20]
   1a440:	ldr	r2, [fp, #-12]
   1a444:	ldr	r2, [r2, #20]
   1a448:	bl	17480 <flatcc_json_printer_int64@@Base+0x44>
   1a44c:	ldr	r1, [fp, #-12]
   1a450:	ldr	r2, [r1, #20]
   1a454:	add	r0, r2, r0
   1a458:	str	r0, [r1, #20]
   1a45c:	b	1a480 <flatcc_json_printer_int64_enum_struct_field@@Base+0xd8>
   1a460:	ldr	r0, [fp, #16]
   1a464:	ldr	r1, [fp, #-12]
   1a468:	ldr	r2, [sp, #16]
   1a46c:	ldr	r3, [sp, #20]
   1a470:	str	r0, [sp]
   1a474:	mov	r0, r1
   1a478:	ldr	r1, [sp]
   1a47c:	blx	r1
   1a480:	sub	sp, fp, #8
   1a484:	pop	{r4, sl, fp, pc}

0001a488 <flatcc_json_printer_bool_enum_struct_field@@Base>:
   1a488:	push	{r4, sl, fp, lr}
   1a48c:	add	fp, sp, #8
   1a490:	sub	sp, sp, #40	; 0x28
   1a494:	ldr	ip, [fp, #16]
   1a498:	ldr	lr, [fp, #12]
   1a49c:	ldr	r4, [fp, #8]
   1a4a0:	str	r0, [fp, #-12]
   1a4a4:	str	r1, [fp, #-16]
   1a4a8:	str	r2, [fp, #-20]	; 0xffffffec
   1a4ac:	str	r3, [sp, #24]
   1a4b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a4b4:	ldr	r1, [sp, #24]
   1a4b8:	add	r0, r0, r1
   1a4bc:	str	r4, [sp, #16]
   1a4c0:	str	lr, [sp, #12]
   1a4c4:	str	ip, [sp, #8]
   1a4c8:	bl	18818 <flatcc_json_printer_bool_field@@Base+0x104>
   1a4cc:	strb	r0, [sp, #23]
   1a4d0:	ldr	r0, [fp, #-16]
   1a4d4:	cmp	r0, #0
   1a4d8:	beq	1a4f4 <flatcc_json_printer_bool_enum_struct_field@@Base+0x6c>
   1a4dc:	ldr	r0, [fp, #-12]
   1a4e0:	ldr	r1, [r0, #20]
   1a4e4:	add	r2, r1, #1
   1a4e8:	str	r2, [r0, #20]
   1a4ec:	movw	r0, #44	; 0x2c
   1a4f0:	strb	r0, [r1]
   1a4f4:	ldr	r0, [fp, #-12]
   1a4f8:	ldr	r1, [fp, #8]
   1a4fc:	ldr	r2, [fp, #12]
   1a500:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   1a504:	ldr	r0, [fp, #-12]
   1a508:	ldrsb	r0, [r0, #27]
   1a50c:	cmp	r0, #0
   1a510:	beq	1a538 <flatcc_json_printer_bool_enum_struct_field@@Base+0xb0>
   1a514:	ldrb	r0, [sp, #23]
   1a518:	ldr	r1, [fp, #-12]
   1a51c:	ldr	r1, [r1, #20]
   1a520:	bl	18840 <flatcc_json_printer_bool_field@@Base+0x12c>
   1a524:	ldr	r1, [fp, #-12]
   1a528:	ldr	lr, [r1, #20]
   1a52c:	add	r0, lr, r0
   1a530:	str	r0, [r1, #20]
   1a534:	b	1a554 <flatcc_json_printer_bool_enum_struct_field@@Base+0xcc>
   1a538:	ldr	r0, [fp, #16]
   1a53c:	ldr	r1, [fp, #-12]
   1a540:	str	r0, [sp, #4]
   1a544:	mov	r0, r1
   1a548:	ldrb	r1, [sp, #23]
   1a54c:	ldr	r2, [sp, #4]
   1a550:	blx	r2
   1a554:	sub	sp, fp, #8
   1a558:	pop	{r4, sl, fp, pc}

0001a55c <flatcc_json_printer_utype_vector_field@@Base>:
   1a55c:	push	{fp, lr}
   1a560:	mov	fp, sp
   1a564:	sub	sp, sp, #32
   1a568:	ldr	ip, [fp, #8]
   1a56c:	str	r0, [fp, #-4]
   1a570:	str	r1, [fp, #-8]
   1a574:	str	r2, [fp, #-12]
   1a578:	str	r3, [sp, #16]
   1a57c:	ldr	r0, [fp, #-8]
   1a580:	ldr	r1, [fp, #-12]
   1a584:	str	ip, [sp, #4]
   1a588:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   1a58c:	str	r0, [sp, #12]
   1a590:	ldr	r0, [sp, #12]
   1a594:	movw	r1, #0
   1a598:	cmp	r0, r1
   1a59c:	beq	1a7d0 <flatcc_json_printer_utype_vector_field@@Base+0x274>
   1a5a0:	ldr	r0, [fp, #-8]
   1a5a4:	ldr	r1, [r0, #16]
   1a5a8:	add	r2, r1, #1
   1a5ac:	str	r2, [r0, #16]
   1a5b0:	cmp	r1, #0
   1a5b4:	beq	1a5d0 <flatcc_json_printer_utype_vector_field@@Base+0x74>
   1a5b8:	ldr	r0, [fp, #-4]
   1a5bc:	ldr	r1, [r0, #20]
   1a5c0:	add	r2, r1, #1
   1a5c4:	str	r2, [r0, #20]
   1a5c8:	movw	r0, #44	; 0x2c
   1a5cc:	strb	r0, [r1]
   1a5d0:	ldr	r0, [sp, #12]
   1a5d4:	bl	179d4 <flatcc_json_printer_string_field@@Base+0x258>
   1a5d8:	str	r0, [sp, #12]
   1a5dc:	ldr	r0, [sp, #12]
   1a5e0:	bl	1a7d8 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   1a5e4:	str	r0, [sp, #8]
   1a5e8:	ldr	r0, [sp, #12]
   1a5ec:	add	r0, r0, #4
   1a5f0:	str	r0, [sp, #12]
   1a5f4:	ldr	r0, [fp, #-4]
   1a5f8:	ldr	r1, [sp, #16]
   1a5fc:	ldr	r2, [fp, #8]
   1a600:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   1a604:	ldr	r0, [fp, #-4]
   1a608:	ldr	r1, [r0, #32]
   1a60c:	add	r1, r1, #1
   1a610:	str	r1, [r0, #32]
   1a614:	ldr	r0, [fp, #-4]
   1a618:	ldr	r1, [r0, #20]
   1a61c:	add	r2, r1, #1
   1a620:	str	r2, [r0, #20]
   1a624:	movw	r0, #91	; 0x5b
   1a628:	strb	r0, [r1]
   1a62c:	ldr	r0, [sp, #8]
   1a630:	cmp	r0, #0
   1a634:	beq	1a6c0 <flatcc_json_printer_utype_vector_field@@Base+0x164>
   1a638:	b	1a63c <flatcc_json_printer_utype_vector_field@@Base+0xe0>
   1a63c:	ldr	r0, [fp, #-4]
   1a640:	ldrsb	r0, [r0, #25]
   1a644:	cmp	r0, #0
   1a648:	beq	1a670 <flatcc_json_printer_utype_vector_field@@Base+0x114>
   1a64c:	ldr	r0, [fp, #-4]
   1a650:	ldr	r1, [r0, #20]
   1a654:	add	r2, r1, #1
   1a658:	str	r2, [r0, #20]
   1a65c:	movw	r0, #10
   1a660:	strb	r0, [r1]
   1a664:	ldr	r0, [fp, #-4]
   1a668:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1a66c:	b	1a678 <flatcc_json_printer_utype_vector_field@@Base+0x11c>
   1a670:	ldr	r0, [fp, #-4]
   1a674:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1a678:	b	1a67c <flatcc_json_printer_utype_vector_field@@Base+0x120>
   1a67c:	ldr	r0, [sp, #12]
   1a680:	bl	1a7fc <flatcc_json_printer_utype_vector_field@@Base+0x2a0>
   1a684:	ldr	lr, [fp, #-4]
   1a688:	ldr	r1, [lr, #20]
   1a68c:	and	r0, r0, #255	; 0xff
   1a690:	bl	15ac0 <flatcc_json_printer_uint8@@Base+0x40>
   1a694:	ldr	r1, [fp, #-4]
   1a698:	ldr	lr, [r1, #20]
   1a69c:	add	r0, lr, r0
   1a6a0:	str	r0, [r1, #20]
   1a6a4:	ldr	r0, [sp, #12]
   1a6a8:	add	r0, r0, #1
   1a6ac:	str	r0, [sp, #12]
   1a6b0:	ldr	r0, [sp, #8]
   1a6b4:	mvn	r1, #0
   1a6b8:	add	r0, r0, r1
   1a6bc:	str	r0, [sp, #8]
   1a6c0:	b	1a6c4 <flatcc_json_printer_utype_vector_field@@Base+0x168>
   1a6c4:	ldr	r0, [sp, #8]
   1a6c8:	mvn	r1, #0
   1a6cc:	add	r1, r0, r1
   1a6d0:	str	r1, [sp, #8]
   1a6d4:	cmp	r0, #0
   1a6d8:	beq	1a76c <flatcc_json_printer_utype_vector_field@@Base+0x210>
   1a6dc:	ldr	r0, [fp, #-4]
   1a6e0:	ldr	r1, [r0, #20]
   1a6e4:	add	r2, r1, #1
   1a6e8:	str	r2, [r0, #20]
   1a6ec:	movw	r0, #44	; 0x2c
   1a6f0:	strb	r0, [r1]
   1a6f4:	ldr	r0, [fp, #-4]
   1a6f8:	ldrsb	r0, [r0, #25]
   1a6fc:	cmp	r0, #0
   1a700:	beq	1a728 <flatcc_json_printer_utype_vector_field@@Base+0x1cc>
   1a704:	ldr	r0, [fp, #-4]
   1a708:	ldr	r1, [r0, #20]
   1a70c:	add	r2, r1, #1
   1a710:	str	r2, [r0, #20]
   1a714:	movw	r0, #10
   1a718:	strb	r0, [r1]
   1a71c:	ldr	r0, [fp, #-4]
   1a720:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1a724:	b	1a730 <flatcc_json_printer_utype_vector_field@@Base+0x1d4>
   1a728:	ldr	r0, [fp, #-4]
   1a72c:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1a730:	b	1a734 <flatcc_json_printer_utype_vector_field@@Base+0x1d8>
   1a734:	ldr	r0, [sp, #12]
   1a738:	bl	1a7fc <flatcc_json_printer_utype_vector_field@@Base+0x2a0>
   1a73c:	ldr	lr, [fp, #-4]
   1a740:	ldr	r1, [lr, #20]
   1a744:	and	r0, r0, #255	; 0xff
   1a748:	bl	15ac0 <flatcc_json_printer_uint8@@Base+0x40>
   1a74c:	ldr	r1, [fp, #-4]
   1a750:	ldr	lr, [r1, #20]
   1a754:	add	r0, lr, r0
   1a758:	str	r0, [r1, #20]
   1a75c:	ldr	r0, [sp, #12]
   1a760:	add	r0, r0, #1
   1a764:	str	r0, [sp, #12]
   1a768:	b	1a6c4 <flatcc_json_printer_utype_vector_field@@Base+0x168>
   1a76c:	b	1a770 <flatcc_json_printer_utype_vector_field@@Base+0x214>
   1a770:	ldr	r0, [fp, #-4]
   1a774:	ldrsb	r0, [r0, #25]
   1a778:	cmp	r0, #0
   1a77c:	beq	1a7b4 <flatcc_json_printer_utype_vector_field@@Base+0x258>
   1a780:	ldr	r0, [fp, #-4]
   1a784:	ldr	r1, [r0, #20]
   1a788:	add	r2, r1, #1
   1a78c:	str	r2, [r0, #20]
   1a790:	movw	r0, #10
   1a794:	strb	r0, [r1]
   1a798:	ldr	r0, [fp, #-4]
   1a79c:	ldr	r1, [r0, #32]
   1a7a0:	mvn	r2, #0
   1a7a4:	add	r1, r1, r2
   1a7a8:	str	r1, [r0, #32]
   1a7ac:	ldr	r0, [fp, #-4]
   1a7b0:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1a7b4:	ldr	r0, [fp, #-4]
   1a7b8:	ldr	r1, [r0, #20]
   1a7bc:	add	r2, r1, #1
   1a7c0:	str	r2, [r0, #20]
   1a7c4:	movw	r0, #93	; 0x5d
   1a7c8:	strb	r0, [r1]
   1a7cc:	b	1a7d0 <flatcc_json_printer_utype_vector_field@@Base+0x274>
   1a7d0:	mov	sp, fp
   1a7d4:	pop	{fp, pc}
   1a7d8:	push	{fp, lr}
   1a7dc:	mov	fp, sp
   1a7e0:	sub	sp, sp, #8
   1a7e4:	str	r0, [sp, #4]
   1a7e8:	ldr	r0, [sp, #4]
   1a7ec:	ldr	r0, [r0]
   1a7f0:	bl	21fd8 <flatcc_json_printer_clear@@Base+0x1ce4>
   1a7f4:	mov	sp, fp
   1a7f8:	pop	{fp, pc}
   1a7fc:	push	{fp, lr}
   1a800:	mov	fp, sp
   1a804:	sub	sp, sp, #8
   1a808:	str	r0, [sp, #4]
   1a80c:	ldr	r0, [sp, #4]
   1a810:	ldrb	r0, [r0]
   1a814:	bl	21fec <flatcc_json_printer_clear@@Base+0x1cf8>
   1a818:	and	r0, r0, #255	; 0xff
   1a81c:	mov	sp, fp
   1a820:	pop	{fp, pc}

0001a824 <flatcc_json_printer_uint8_vector_field@@Base>:
   1a824:	push	{fp, lr}
   1a828:	mov	fp, sp
   1a82c:	sub	sp, sp, #32
   1a830:	ldr	ip, [fp, #8]
   1a834:	str	r0, [fp, #-4]
   1a838:	str	r1, [fp, #-8]
   1a83c:	str	r2, [fp, #-12]
   1a840:	str	r3, [sp, #16]
   1a844:	ldr	r0, [fp, #-8]
   1a848:	ldr	r1, [fp, #-12]
   1a84c:	str	ip, [sp, #4]
   1a850:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   1a854:	str	r0, [sp, #12]
   1a858:	ldr	r0, [sp, #12]
   1a85c:	movw	r1, #0
   1a860:	cmp	r0, r1
   1a864:	beq	1aa98 <flatcc_json_printer_uint8_vector_field@@Base+0x274>
   1a868:	ldr	r0, [fp, #-8]
   1a86c:	ldr	r1, [r0, #16]
   1a870:	add	r2, r1, #1
   1a874:	str	r2, [r0, #16]
   1a878:	cmp	r1, #0
   1a87c:	beq	1a898 <flatcc_json_printer_uint8_vector_field@@Base+0x74>
   1a880:	ldr	r0, [fp, #-4]
   1a884:	ldr	r1, [r0, #20]
   1a888:	add	r2, r1, #1
   1a88c:	str	r2, [r0, #20]
   1a890:	movw	r0, #44	; 0x2c
   1a894:	strb	r0, [r1]
   1a898:	ldr	r0, [sp, #12]
   1a89c:	bl	179d4 <flatcc_json_printer_string_field@@Base+0x258>
   1a8a0:	str	r0, [sp, #12]
   1a8a4:	ldr	r0, [sp, #12]
   1a8a8:	bl	1a7d8 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   1a8ac:	str	r0, [sp, #8]
   1a8b0:	ldr	r0, [sp, #12]
   1a8b4:	add	r0, r0, #4
   1a8b8:	str	r0, [sp, #12]
   1a8bc:	ldr	r0, [fp, #-4]
   1a8c0:	ldr	r1, [sp, #16]
   1a8c4:	ldr	r2, [fp, #8]
   1a8c8:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   1a8cc:	ldr	r0, [fp, #-4]
   1a8d0:	ldr	r1, [r0, #32]
   1a8d4:	add	r1, r1, #1
   1a8d8:	str	r1, [r0, #32]
   1a8dc:	ldr	r0, [fp, #-4]
   1a8e0:	ldr	r1, [r0, #20]
   1a8e4:	add	r2, r1, #1
   1a8e8:	str	r2, [r0, #20]
   1a8ec:	movw	r0, #91	; 0x5b
   1a8f0:	strb	r0, [r1]
   1a8f4:	ldr	r0, [sp, #8]
   1a8f8:	cmp	r0, #0
   1a8fc:	beq	1a988 <flatcc_json_printer_uint8_vector_field@@Base+0x164>
   1a900:	b	1a904 <flatcc_json_printer_uint8_vector_field@@Base+0xe0>
   1a904:	ldr	r0, [fp, #-4]
   1a908:	ldrsb	r0, [r0, #25]
   1a90c:	cmp	r0, #0
   1a910:	beq	1a938 <flatcc_json_printer_uint8_vector_field@@Base+0x114>
   1a914:	ldr	r0, [fp, #-4]
   1a918:	ldr	r1, [r0, #20]
   1a91c:	add	r2, r1, #1
   1a920:	str	r2, [r0, #20]
   1a924:	movw	r0, #10
   1a928:	strb	r0, [r1]
   1a92c:	ldr	r0, [fp, #-4]
   1a930:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1a934:	b	1a940 <flatcc_json_printer_uint8_vector_field@@Base+0x11c>
   1a938:	ldr	r0, [fp, #-4]
   1a93c:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1a940:	b	1a944 <flatcc_json_printer_uint8_vector_field@@Base+0x120>
   1a944:	ldr	r0, [sp, #12]
   1a948:	bl	17e3c <flatcc_json_printer_uint8_field@@Base+0x108>
   1a94c:	ldr	lr, [fp, #-4]
   1a950:	ldr	r1, [lr, #20]
   1a954:	and	r0, r0, #255	; 0xff
   1a958:	bl	15ac0 <flatcc_json_printer_uint8@@Base+0x40>
   1a95c:	ldr	r1, [fp, #-4]
   1a960:	ldr	lr, [r1, #20]
   1a964:	add	r0, lr, r0
   1a968:	str	r0, [r1, #20]
   1a96c:	ldr	r0, [sp, #12]
   1a970:	add	r0, r0, #1
   1a974:	str	r0, [sp, #12]
   1a978:	ldr	r0, [sp, #8]
   1a97c:	mvn	r1, #0
   1a980:	add	r0, r0, r1
   1a984:	str	r0, [sp, #8]
   1a988:	b	1a98c <flatcc_json_printer_uint8_vector_field@@Base+0x168>
   1a98c:	ldr	r0, [sp, #8]
   1a990:	mvn	r1, #0
   1a994:	add	r1, r0, r1
   1a998:	str	r1, [sp, #8]
   1a99c:	cmp	r0, #0
   1a9a0:	beq	1aa34 <flatcc_json_printer_uint8_vector_field@@Base+0x210>
   1a9a4:	ldr	r0, [fp, #-4]
   1a9a8:	ldr	r1, [r0, #20]
   1a9ac:	add	r2, r1, #1
   1a9b0:	str	r2, [r0, #20]
   1a9b4:	movw	r0, #44	; 0x2c
   1a9b8:	strb	r0, [r1]
   1a9bc:	ldr	r0, [fp, #-4]
   1a9c0:	ldrsb	r0, [r0, #25]
   1a9c4:	cmp	r0, #0
   1a9c8:	beq	1a9f0 <flatcc_json_printer_uint8_vector_field@@Base+0x1cc>
   1a9cc:	ldr	r0, [fp, #-4]
   1a9d0:	ldr	r1, [r0, #20]
   1a9d4:	add	r2, r1, #1
   1a9d8:	str	r2, [r0, #20]
   1a9dc:	movw	r0, #10
   1a9e0:	strb	r0, [r1]
   1a9e4:	ldr	r0, [fp, #-4]
   1a9e8:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1a9ec:	b	1a9f8 <flatcc_json_printer_uint8_vector_field@@Base+0x1d4>
   1a9f0:	ldr	r0, [fp, #-4]
   1a9f4:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1a9f8:	b	1a9fc <flatcc_json_printer_uint8_vector_field@@Base+0x1d8>
   1a9fc:	ldr	r0, [sp, #12]
   1aa00:	bl	17e3c <flatcc_json_printer_uint8_field@@Base+0x108>
   1aa04:	ldr	lr, [fp, #-4]
   1aa08:	ldr	r1, [lr, #20]
   1aa0c:	and	r0, r0, #255	; 0xff
   1aa10:	bl	15ac0 <flatcc_json_printer_uint8@@Base+0x40>
   1aa14:	ldr	r1, [fp, #-4]
   1aa18:	ldr	lr, [r1, #20]
   1aa1c:	add	r0, lr, r0
   1aa20:	str	r0, [r1, #20]
   1aa24:	ldr	r0, [sp, #12]
   1aa28:	add	r0, r0, #1
   1aa2c:	str	r0, [sp, #12]
   1aa30:	b	1a98c <flatcc_json_printer_uint8_vector_field@@Base+0x168>
   1aa34:	b	1aa38 <flatcc_json_printer_uint8_vector_field@@Base+0x214>
   1aa38:	ldr	r0, [fp, #-4]
   1aa3c:	ldrsb	r0, [r0, #25]
   1aa40:	cmp	r0, #0
   1aa44:	beq	1aa7c <flatcc_json_printer_uint8_vector_field@@Base+0x258>
   1aa48:	ldr	r0, [fp, #-4]
   1aa4c:	ldr	r1, [r0, #20]
   1aa50:	add	r2, r1, #1
   1aa54:	str	r2, [r0, #20]
   1aa58:	movw	r0, #10
   1aa5c:	strb	r0, [r1]
   1aa60:	ldr	r0, [fp, #-4]
   1aa64:	ldr	r1, [r0, #32]
   1aa68:	mvn	r2, #0
   1aa6c:	add	r1, r1, r2
   1aa70:	str	r1, [r0, #32]
   1aa74:	ldr	r0, [fp, #-4]
   1aa78:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1aa7c:	ldr	r0, [fp, #-4]
   1aa80:	ldr	r1, [r0, #20]
   1aa84:	add	r2, r1, #1
   1aa88:	str	r2, [r0, #20]
   1aa8c:	movw	r0, #93	; 0x5d
   1aa90:	strb	r0, [r1]
   1aa94:	b	1aa98 <flatcc_json_printer_uint8_vector_field@@Base+0x274>
   1aa98:	mov	sp, fp
   1aa9c:	pop	{fp, pc}

0001aaa0 <flatcc_json_printer_uint16_vector_field@@Base>:
   1aaa0:	push	{fp, lr}
   1aaa4:	mov	fp, sp
   1aaa8:	sub	sp, sp, #32
   1aaac:	ldr	ip, [fp, #8]
   1aab0:	str	r0, [fp, #-4]
   1aab4:	str	r1, [fp, #-8]
   1aab8:	str	r2, [fp, #-12]
   1aabc:	str	r3, [sp, #16]
   1aac0:	ldr	r0, [fp, #-8]
   1aac4:	ldr	r1, [fp, #-12]
   1aac8:	str	ip, [sp, #4]
   1aacc:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   1aad0:	str	r0, [sp, #12]
   1aad4:	ldr	r0, [sp, #12]
   1aad8:	movw	r1, #0
   1aadc:	cmp	r0, r1
   1aae0:	beq	1ad14 <flatcc_json_printer_uint16_vector_field@@Base+0x274>
   1aae4:	ldr	r0, [fp, #-8]
   1aae8:	ldr	r1, [r0, #16]
   1aaec:	add	r2, r1, #1
   1aaf0:	str	r2, [r0, #16]
   1aaf4:	cmp	r1, #0
   1aaf8:	beq	1ab14 <flatcc_json_printer_uint16_vector_field@@Base+0x74>
   1aafc:	ldr	r0, [fp, #-4]
   1ab00:	ldr	r1, [r0, #20]
   1ab04:	add	r2, r1, #1
   1ab08:	str	r2, [r0, #20]
   1ab0c:	movw	r0, #44	; 0x2c
   1ab10:	strb	r0, [r1]
   1ab14:	ldr	r0, [sp, #12]
   1ab18:	bl	179d4 <flatcc_json_printer_string_field@@Base+0x258>
   1ab1c:	str	r0, [sp, #12]
   1ab20:	ldr	r0, [sp, #12]
   1ab24:	bl	1a7d8 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   1ab28:	str	r0, [sp, #8]
   1ab2c:	ldr	r0, [sp, #12]
   1ab30:	add	r0, r0, #4
   1ab34:	str	r0, [sp, #12]
   1ab38:	ldr	r0, [fp, #-4]
   1ab3c:	ldr	r1, [sp, #16]
   1ab40:	ldr	r2, [fp, #8]
   1ab44:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   1ab48:	ldr	r0, [fp, #-4]
   1ab4c:	ldr	r1, [r0, #32]
   1ab50:	add	r1, r1, #1
   1ab54:	str	r1, [r0, #32]
   1ab58:	ldr	r0, [fp, #-4]
   1ab5c:	ldr	r1, [r0, #20]
   1ab60:	add	r2, r1, #1
   1ab64:	str	r2, [r0, #20]
   1ab68:	movw	r0, #91	; 0x5b
   1ab6c:	strb	r0, [r1]
   1ab70:	ldr	r0, [sp, #8]
   1ab74:	cmp	r0, #0
   1ab78:	beq	1ac04 <flatcc_json_printer_uint16_vector_field@@Base+0x164>
   1ab7c:	b	1ab80 <flatcc_json_printer_uint16_vector_field@@Base+0xe0>
   1ab80:	ldr	r0, [fp, #-4]
   1ab84:	ldrsb	r0, [r0, #25]
   1ab88:	cmp	r0, #0
   1ab8c:	beq	1abb4 <flatcc_json_printer_uint16_vector_field@@Base+0x114>
   1ab90:	ldr	r0, [fp, #-4]
   1ab94:	ldr	r1, [r0, #20]
   1ab98:	add	r2, r1, #1
   1ab9c:	str	r2, [r0, #20]
   1aba0:	movw	r0, #10
   1aba4:	strb	r0, [r1]
   1aba8:	ldr	r0, [fp, #-4]
   1abac:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1abb0:	b	1abbc <flatcc_json_printer_uint16_vector_field@@Base+0x11c>
   1abb4:	ldr	r0, [fp, #-4]
   1abb8:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1abbc:	b	1abc0 <flatcc_json_printer_uint16_vector_field@@Base+0x120>
   1abc0:	ldr	r0, [sp, #12]
   1abc4:	bl	17f6c <flatcc_json_printer_uint16_field@@Base+0x108>
   1abc8:	ldr	lr, [fp, #-4]
   1abcc:	ldr	r1, [lr, #20]
   1abd0:	uxth	r0, r0
   1abd4:	bl	15c9c <flatcc_json_printer_uint16@@Base+0x40>
   1abd8:	ldr	r1, [fp, #-4]
   1abdc:	ldr	lr, [r1, #20]
   1abe0:	add	r0, lr, r0
   1abe4:	str	r0, [r1, #20]
   1abe8:	ldr	r0, [sp, #12]
   1abec:	add	r0, r0, #2
   1abf0:	str	r0, [sp, #12]
   1abf4:	ldr	r0, [sp, #8]
   1abf8:	mvn	r1, #0
   1abfc:	add	r0, r0, r1
   1ac00:	str	r0, [sp, #8]
   1ac04:	b	1ac08 <flatcc_json_printer_uint16_vector_field@@Base+0x168>
   1ac08:	ldr	r0, [sp, #8]
   1ac0c:	mvn	r1, #0
   1ac10:	add	r1, r0, r1
   1ac14:	str	r1, [sp, #8]
   1ac18:	cmp	r0, #0
   1ac1c:	beq	1acb0 <flatcc_json_printer_uint16_vector_field@@Base+0x210>
   1ac20:	ldr	r0, [fp, #-4]
   1ac24:	ldr	r1, [r0, #20]
   1ac28:	add	r2, r1, #1
   1ac2c:	str	r2, [r0, #20]
   1ac30:	movw	r0, #44	; 0x2c
   1ac34:	strb	r0, [r1]
   1ac38:	ldr	r0, [fp, #-4]
   1ac3c:	ldrsb	r0, [r0, #25]
   1ac40:	cmp	r0, #0
   1ac44:	beq	1ac6c <flatcc_json_printer_uint16_vector_field@@Base+0x1cc>
   1ac48:	ldr	r0, [fp, #-4]
   1ac4c:	ldr	r1, [r0, #20]
   1ac50:	add	r2, r1, #1
   1ac54:	str	r2, [r0, #20]
   1ac58:	movw	r0, #10
   1ac5c:	strb	r0, [r1]
   1ac60:	ldr	r0, [fp, #-4]
   1ac64:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1ac68:	b	1ac74 <flatcc_json_printer_uint16_vector_field@@Base+0x1d4>
   1ac6c:	ldr	r0, [fp, #-4]
   1ac70:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1ac74:	b	1ac78 <flatcc_json_printer_uint16_vector_field@@Base+0x1d8>
   1ac78:	ldr	r0, [sp, #12]
   1ac7c:	bl	17f6c <flatcc_json_printer_uint16_field@@Base+0x108>
   1ac80:	ldr	lr, [fp, #-4]
   1ac84:	ldr	r1, [lr, #20]
   1ac88:	uxth	r0, r0
   1ac8c:	bl	15c9c <flatcc_json_printer_uint16@@Base+0x40>
   1ac90:	ldr	r1, [fp, #-4]
   1ac94:	ldr	lr, [r1, #20]
   1ac98:	add	r0, lr, r0
   1ac9c:	str	r0, [r1, #20]
   1aca0:	ldr	r0, [sp, #12]
   1aca4:	add	r0, r0, #2
   1aca8:	str	r0, [sp, #12]
   1acac:	b	1ac08 <flatcc_json_printer_uint16_vector_field@@Base+0x168>
   1acb0:	b	1acb4 <flatcc_json_printer_uint16_vector_field@@Base+0x214>
   1acb4:	ldr	r0, [fp, #-4]
   1acb8:	ldrsb	r0, [r0, #25]
   1acbc:	cmp	r0, #0
   1acc0:	beq	1acf8 <flatcc_json_printer_uint16_vector_field@@Base+0x258>
   1acc4:	ldr	r0, [fp, #-4]
   1acc8:	ldr	r1, [r0, #20]
   1accc:	add	r2, r1, #1
   1acd0:	str	r2, [r0, #20]
   1acd4:	movw	r0, #10
   1acd8:	strb	r0, [r1]
   1acdc:	ldr	r0, [fp, #-4]
   1ace0:	ldr	r1, [r0, #32]
   1ace4:	mvn	r2, #0
   1ace8:	add	r1, r1, r2
   1acec:	str	r1, [r0, #32]
   1acf0:	ldr	r0, [fp, #-4]
   1acf4:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1acf8:	ldr	r0, [fp, #-4]
   1acfc:	ldr	r1, [r0, #20]
   1ad00:	add	r2, r1, #1
   1ad04:	str	r2, [r0, #20]
   1ad08:	movw	r0, #93	; 0x5d
   1ad0c:	strb	r0, [r1]
   1ad10:	b	1ad14 <flatcc_json_printer_uint16_vector_field@@Base+0x274>
   1ad14:	mov	sp, fp
   1ad18:	pop	{fp, pc}

0001ad1c <flatcc_json_printer_uint32_vector_field@@Base>:
   1ad1c:	push	{fp, lr}
   1ad20:	mov	fp, sp
   1ad24:	sub	sp, sp, #32
   1ad28:	ldr	ip, [fp, #8]
   1ad2c:	str	r0, [fp, #-4]
   1ad30:	str	r1, [fp, #-8]
   1ad34:	str	r2, [fp, #-12]
   1ad38:	str	r3, [sp, #16]
   1ad3c:	ldr	r0, [fp, #-8]
   1ad40:	ldr	r1, [fp, #-12]
   1ad44:	str	ip, [sp, #4]
   1ad48:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   1ad4c:	str	r0, [sp, #12]
   1ad50:	ldr	r0, [sp, #12]
   1ad54:	movw	r1, #0
   1ad58:	cmp	r0, r1
   1ad5c:	beq	1af88 <flatcc_json_printer_uint32_vector_field@@Base+0x26c>
   1ad60:	ldr	r0, [fp, #-8]
   1ad64:	ldr	r1, [r0, #16]
   1ad68:	add	r2, r1, #1
   1ad6c:	str	r2, [r0, #16]
   1ad70:	cmp	r1, #0
   1ad74:	beq	1ad90 <flatcc_json_printer_uint32_vector_field@@Base+0x74>
   1ad78:	ldr	r0, [fp, #-4]
   1ad7c:	ldr	r1, [r0, #20]
   1ad80:	add	r2, r1, #1
   1ad84:	str	r2, [r0, #20]
   1ad88:	movw	r0, #44	; 0x2c
   1ad8c:	strb	r0, [r1]
   1ad90:	ldr	r0, [sp, #12]
   1ad94:	bl	179d4 <flatcc_json_printer_string_field@@Base+0x258>
   1ad98:	str	r0, [sp, #12]
   1ad9c:	ldr	r0, [sp, #12]
   1ada0:	bl	1a7d8 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   1ada4:	str	r0, [sp, #8]
   1ada8:	ldr	r0, [sp, #12]
   1adac:	add	r0, r0, #4
   1adb0:	str	r0, [sp, #12]
   1adb4:	ldr	r0, [fp, #-4]
   1adb8:	ldr	r1, [sp, #16]
   1adbc:	ldr	r2, [fp, #8]
   1adc0:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   1adc4:	ldr	r0, [fp, #-4]
   1adc8:	ldr	r1, [r0, #32]
   1adcc:	add	r1, r1, #1
   1add0:	str	r1, [r0, #32]
   1add4:	ldr	r0, [fp, #-4]
   1add8:	ldr	r1, [r0, #20]
   1addc:	add	r2, r1, #1
   1ade0:	str	r2, [r0, #20]
   1ade4:	movw	r0, #91	; 0x5b
   1ade8:	strb	r0, [r1]
   1adec:	ldr	r0, [sp, #8]
   1adf0:	cmp	r0, #0
   1adf4:	beq	1ae7c <flatcc_json_printer_uint32_vector_field@@Base+0x160>
   1adf8:	b	1adfc <flatcc_json_printer_uint32_vector_field@@Base+0xe0>
   1adfc:	ldr	r0, [fp, #-4]
   1ae00:	ldrsb	r0, [r0, #25]
   1ae04:	cmp	r0, #0
   1ae08:	beq	1ae30 <flatcc_json_printer_uint32_vector_field@@Base+0x114>
   1ae0c:	ldr	r0, [fp, #-4]
   1ae10:	ldr	r1, [r0, #20]
   1ae14:	add	r2, r1, #1
   1ae18:	str	r2, [r0, #20]
   1ae1c:	movw	r0, #10
   1ae20:	strb	r0, [r1]
   1ae24:	ldr	r0, [fp, #-4]
   1ae28:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1ae2c:	b	1ae38 <flatcc_json_printer_uint32_vector_field@@Base+0x11c>
   1ae30:	ldr	r0, [fp, #-4]
   1ae34:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1ae38:	b	1ae3c <flatcc_json_printer_uint32_vector_field@@Base+0x120>
   1ae3c:	ldr	r0, [sp, #12]
   1ae40:	bl	18098 <flatcc_json_printer_uint32_field@@Base+0x104>
   1ae44:	ldr	lr, [fp, #-4]
   1ae48:	ldr	r1, [lr, #20]
   1ae4c:	bl	15fe0 <flatcc_json_printer_uint32@@Base+0x3c>
   1ae50:	ldr	r1, [fp, #-4]
   1ae54:	ldr	lr, [r1, #20]
   1ae58:	add	r0, lr, r0
   1ae5c:	str	r0, [r1, #20]
   1ae60:	ldr	r0, [sp, #12]
   1ae64:	add	r0, r0, #4
   1ae68:	str	r0, [sp, #12]
   1ae6c:	ldr	r0, [sp, #8]
   1ae70:	mvn	r1, #0
   1ae74:	add	r0, r0, r1
   1ae78:	str	r0, [sp, #8]
   1ae7c:	b	1ae80 <flatcc_json_printer_uint32_vector_field@@Base+0x164>
   1ae80:	ldr	r0, [sp, #8]
   1ae84:	mvn	r1, #0
   1ae88:	add	r1, r0, r1
   1ae8c:	str	r1, [sp, #8]
   1ae90:	cmp	r0, #0
   1ae94:	beq	1af24 <flatcc_json_printer_uint32_vector_field@@Base+0x208>
   1ae98:	ldr	r0, [fp, #-4]
   1ae9c:	ldr	r1, [r0, #20]
   1aea0:	add	r2, r1, #1
   1aea4:	str	r2, [r0, #20]
   1aea8:	movw	r0, #44	; 0x2c
   1aeac:	strb	r0, [r1]
   1aeb0:	ldr	r0, [fp, #-4]
   1aeb4:	ldrsb	r0, [r0, #25]
   1aeb8:	cmp	r0, #0
   1aebc:	beq	1aee4 <flatcc_json_printer_uint32_vector_field@@Base+0x1c8>
   1aec0:	ldr	r0, [fp, #-4]
   1aec4:	ldr	r1, [r0, #20]
   1aec8:	add	r2, r1, #1
   1aecc:	str	r2, [r0, #20]
   1aed0:	movw	r0, #10
   1aed4:	strb	r0, [r1]
   1aed8:	ldr	r0, [fp, #-4]
   1aedc:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1aee0:	b	1aeec <flatcc_json_printer_uint32_vector_field@@Base+0x1d0>
   1aee4:	ldr	r0, [fp, #-4]
   1aee8:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1aeec:	b	1aef0 <flatcc_json_printer_uint32_vector_field@@Base+0x1d4>
   1aef0:	ldr	r0, [sp, #12]
   1aef4:	bl	18098 <flatcc_json_printer_uint32_field@@Base+0x104>
   1aef8:	ldr	lr, [fp, #-4]
   1aefc:	ldr	r1, [lr, #20]
   1af00:	bl	15fe0 <flatcc_json_printer_uint32@@Base+0x3c>
   1af04:	ldr	r1, [fp, #-4]
   1af08:	ldr	lr, [r1, #20]
   1af0c:	add	r0, lr, r0
   1af10:	str	r0, [r1, #20]
   1af14:	ldr	r0, [sp, #12]
   1af18:	add	r0, r0, #4
   1af1c:	str	r0, [sp, #12]
   1af20:	b	1ae80 <flatcc_json_printer_uint32_vector_field@@Base+0x164>
   1af24:	b	1af28 <flatcc_json_printer_uint32_vector_field@@Base+0x20c>
   1af28:	ldr	r0, [fp, #-4]
   1af2c:	ldrsb	r0, [r0, #25]
   1af30:	cmp	r0, #0
   1af34:	beq	1af6c <flatcc_json_printer_uint32_vector_field@@Base+0x250>
   1af38:	ldr	r0, [fp, #-4]
   1af3c:	ldr	r1, [r0, #20]
   1af40:	add	r2, r1, #1
   1af44:	str	r2, [r0, #20]
   1af48:	movw	r0, #10
   1af4c:	strb	r0, [r1]
   1af50:	ldr	r0, [fp, #-4]
   1af54:	ldr	r1, [r0, #32]
   1af58:	mvn	r2, #0
   1af5c:	add	r1, r1, r2
   1af60:	str	r1, [r0, #32]
   1af64:	ldr	r0, [fp, #-4]
   1af68:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1af6c:	ldr	r0, [fp, #-4]
   1af70:	ldr	r1, [r0, #20]
   1af74:	add	r2, r1, #1
   1af78:	str	r2, [r0, #20]
   1af7c:	movw	r0, #93	; 0x5d
   1af80:	strb	r0, [r1]
   1af84:	b	1af88 <flatcc_json_printer_uint32_vector_field@@Base+0x26c>
   1af88:	mov	sp, fp
   1af8c:	pop	{fp, pc}

0001af90 <flatcc_json_printer_uint64_vector_field@@Base>:
   1af90:	push	{fp, lr}
   1af94:	mov	fp, sp
   1af98:	sub	sp, sp, #32
   1af9c:	ldr	ip, [fp, #8]
   1afa0:	str	r0, [fp, #-4]
   1afa4:	str	r1, [fp, #-8]
   1afa8:	str	r2, [fp, #-12]
   1afac:	str	r3, [sp, #16]
   1afb0:	ldr	r0, [fp, #-8]
   1afb4:	ldr	r1, [fp, #-12]
   1afb8:	str	ip, [sp, #4]
   1afbc:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   1afc0:	str	r0, [sp, #12]
   1afc4:	ldr	r0, [sp, #12]
   1afc8:	movw	r1, #0
   1afcc:	cmp	r0, r1
   1afd0:	beq	1b1fc <flatcc_json_printer_uint64_vector_field@@Base+0x26c>
   1afd4:	ldr	r0, [fp, #-8]
   1afd8:	ldr	r1, [r0, #16]
   1afdc:	add	r2, r1, #1
   1afe0:	str	r2, [r0, #16]
   1afe4:	cmp	r1, #0
   1afe8:	beq	1b004 <flatcc_json_printer_uint64_vector_field@@Base+0x74>
   1afec:	ldr	r0, [fp, #-4]
   1aff0:	ldr	r1, [r0, #20]
   1aff4:	add	r2, r1, #1
   1aff8:	str	r2, [r0, #20]
   1affc:	movw	r0, #44	; 0x2c
   1b000:	strb	r0, [r1]
   1b004:	ldr	r0, [sp, #12]
   1b008:	bl	179d4 <flatcc_json_printer_string_field@@Base+0x258>
   1b00c:	str	r0, [sp, #12]
   1b010:	ldr	r0, [sp, #12]
   1b014:	bl	1a7d8 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   1b018:	str	r0, [sp, #8]
   1b01c:	ldr	r0, [sp, #12]
   1b020:	add	r0, r0, #4
   1b024:	str	r0, [sp, #12]
   1b028:	ldr	r0, [fp, #-4]
   1b02c:	ldr	r1, [sp, #16]
   1b030:	ldr	r2, [fp, #8]
   1b034:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   1b038:	ldr	r0, [fp, #-4]
   1b03c:	ldr	r1, [r0, #32]
   1b040:	add	r1, r1, #1
   1b044:	str	r1, [r0, #32]
   1b048:	ldr	r0, [fp, #-4]
   1b04c:	ldr	r1, [r0, #20]
   1b050:	add	r2, r1, #1
   1b054:	str	r2, [r0, #20]
   1b058:	movw	r0, #91	; 0x5b
   1b05c:	strb	r0, [r1]
   1b060:	ldr	r0, [sp, #8]
   1b064:	cmp	r0, #0
   1b068:	beq	1b0f0 <flatcc_json_printer_uint64_vector_field@@Base+0x160>
   1b06c:	b	1b070 <flatcc_json_printer_uint64_vector_field@@Base+0xe0>
   1b070:	ldr	r0, [fp, #-4]
   1b074:	ldrsb	r0, [r0, #25]
   1b078:	cmp	r0, #0
   1b07c:	beq	1b0a4 <flatcc_json_printer_uint64_vector_field@@Base+0x114>
   1b080:	ldr	r0, [fp, #-4]
   1b084:	ldr	r1, [r0, #20]
   1b088:	add	r2, r1, #1
   1b08c:	str	r2, [r0, #20]
   1b090:	movw	r0, #10
   1b094:	strb	r0, [r1]
   1b098:	ldr	r0, [fp, #-4]
   1b09c:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1b0a0:	b	1b0ac <flatcc_json_printer_uint64_vector_field@@Base+0x11c>
   1b0a4:	ldr	r0, [fp, #-4]
   1b0a8:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1b0ac:	b	1b0b0 <flatcc_json_printer_uint64_vector_field@@Base+0x120>
   1b0b0:	ldr	r0, [sp, #12]
   1b0b4:	bl	181f0 <flatcc_json_printer_uint64_field@@Base+0x134>
   1b0b8:	ldr	lr, [fp, #-4]
   1b0bc:	ldr	r2, [lr, #20]
   1b0c0:	bl	16654 <flatcc_json_printer_uint64@@Base+0x44>
   1b0c4:	ldr	r1, [fp, #-4]
   1b0c8:	ldr	r2, [r1, #20]
   1b0cc:	add	r0, r2, r0
   1b0d0:	str	r0, [r1, #20]
   1b0d4:	ldr	r0, [sp, #12]
   1b0d8:	add	r0, r0, #8
   1b0dc:	str	r0, [sp, #12]
   1b0e0:	ldr	r0, [sp, #8]
   1b0e4:	mvn	r1, #0
   1b0e8:	add	r0, r0, r1
   1b0ec:	str	r0, [sp, #8]
   1b0f0:	b	1b0f4 <flatcc_json_printer_uint64_vector_field@@Base+0x164>
   1b0f4:	ldr	r0, [sp, #8]
   1b0f8:	mvn	r1, #0
   1b0fc:	add	r1, r0, r1
   1b100:	str	r1, [sp, #8]
   1b104:	cmp	r0, #0
   1b108:	beq	1b198 <flatcc_json_printer_uint64_vector_field@@Base+0x208>
   1b10c:	ldr	r0, [fp, #-4]
   1b110:	ldr	r1, [r0, #20]
   1b114:	add	r2, r1, #1
   1b118:	str	r2, [r0, #20]
   1b11c:	movw	r0, #44	; 0x2c
   1b120:	strb	r0, [r1]
   1b124:	ldr	r0, [fp, #-4]
   1b128:	ldrsb	r0, [r0, #25]
   1b12c:	cmp	r0, #0
   1b130:	beq	1b158 <flatcc_json_printer_uint64_vector_field@@Base+0x1c8>
   1b134:	ldr	r0, [fp, #-4]
   1b138:	ldr	r1, [r0, #20]
   1b13c:	add	r2, r1, #1
   1b140:	str	r2, [r0, #20]
   1b144:	movw	r0, #10
   1b148:	strb	r0, [r1]
   1b14c:	ldr	r0, [fp, #-4]
   1b150:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1b154:	b	1b160 <flatcc_json_printer_uint64_vector_field@@Base+0x1d0>
   1b158:	ldr	r0, [fp, #-4]
   1b15c:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1b160:	b	1b164 <flatcc_json_printer_uint64_vector_field@@Base+0x1d4>
   1b164:	ldr	r0, [sp, #12]
   1b168:	bl	181f0 <flatcc_json_printer_uint64_field@@Base+0x134>
   1b16c:	ldr	lr, [fp, #-4]
   1b170:	ldr	r2, [lr, #20]
   1b174:	bl	16654 <flatcc_json_printer_uint64@@Base+0x44>
   1b178:	ldr	r1, [fp, #-4]
   1b17c:	ldr	r2, [r1, #20]
   1b180:	add	r0, r2, r0
   1b184:	str	r0, [r1, #20]
   1b188:	ldr	r0, [sp, #12]
   1b18c:	add	r0, r0, #8
   1b190:	str	r0, [sp, #12]
   1b194:	b	1b0f4 <flatcc_json_printer_uint64_vector_field@@Base+0x164>
   1b198:	b	1b19c <flatcc_json_printer_uint64_vector_field@@Base+0x20c>
   1b19c:	ldr	r0, [fp, #-4]
   1b1a0:	ldrsb	r0, [r0, #25]
   1b1a4:	cmp	r0, #0
   1b1a8:	beq	1b1e0 <flatcc_json_printer_uint64_vector_field@@Base+0x250>
   1b1ac:	ldr	r0, [fp, #-4]
   1b1b0:	ldr	r1, [r0, #20]
   1b1b4:	add	r2, r1, #1
   1b1b8:	str	r2, [r0, #20]
   1b1bc:	movw	r0, #10
   1b1c0:	strb	r0, [r1]
   1b1c4:	ldr	r0, [fp, #-4]
   1b1c8:	ldr	r1, [r0, #32]
   1b1cc:	mvn	r2, #0
   1b1d0:	add	r1, r1, r2
   1b1d4:	str	r1, [r0, #32]
   1b1d8:	ldr	r0, [fp, #-4]
   1b1dc:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1b1e0:	ldr	r0, [fp, #-4]
   1b1e4:	ldr	r1, [r0, #20]
   1b1e8:	add	r2, r1, #1
   1b1ec:	str	r2, [r0, #20]
   1b1f0:	movw	r0, #93	; 0x5d
   1b1f4:	strb	r0, [r1]
   1b1f8:	b	1b1fc <flatcc_json_printer_uint64_vector_field@@Base+0x26c>
   1b1fc:	mov	sp, fp
   1b200:	pop	{fp, pc}

0001b204 <flatcc_json_printer_int8_vector_field@@Base>:
   1b204:	push	{fp, lr}
   1b208:	mov	fp, sp
   1b20c:	sub	sp, sp, #32
   1b210:	ldr	ip, [fp, #8]
   1b214:	str	r0, [fp, #-4]
   1b218:	str	r1, [fp, #-8]
   1b21c:	str	r2, [fp, #-12]
   1b220:	str	r3, [sp, #16]
   1b224:	ldr	r0, [fp, #-8]
   1b228:	ldr	r1, [fp, #-12]
   1b22c:	str	ip, [sp, #4]
   1b230:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   1b234:	str	r0, [sp, #12]
   1b238:	ldr	r0, [sp, #12]
   1b23c:	movw	r1, #0
   1b240:	cmp	r0, r1
   1b244:	beq	1b478 <flatcc_json_printer_int8_vector_field@@Base+0x274>
   1b248:	ldr	r0, [fp, #-8]
   1b24c:	ldr	r1, [r0, #16]
   1b250:	add	r2, r1, #1
   1b254:	str	r2, [r0, #16]
   1b258:	cmp	r1, #0
   1b25c:	beq	1b278 <flatcc_json_printer_int8_vector_field@@Base+0x74>
   1b260:	ldr	r0, [fp, #-4]
   1b264:	ldr	r1, [r0, #20]
   1b268:	add	r2, r1, #1
   1b26c:	str	r2, [r0, #20]
   1b270:	movw	r0, #44	; 0x2c
   1b274:	strb	r0, [r1]
   1b278:	ldr	r0, [sp, #12]
   1b27c:	bl	179d4 <flatcc_json_printer_string_field@@Base+0x258>
   1b280:	str	r0, [sp, #12]
   1b284:	ldr	r0, [sp, #12]
   1b288:	bl	1a7d8 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   1b28c:	str	r0, [sp, #8]
   1b290:	ldr	r0, [sp, #12]
   1b294:	add	r0, r0, #4
   1b298:	str	r0, [sp, #12]
   1b29c:	ldr	r0, [fp, #-4]
   1b2a0:	ldr	r1, [sp, #16]
   1b2a4:	ldr	r2, [fp, #8]
   1b2a8:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   1b2ac:	ldr	r0, [fp, #-4]
   1b2b0:	ldr	r1, [r0, #32]
   1b2b4:	add	r1, r1, #1
   1b2b8:	str	r1, [r0, #32]
   1b2bc:	ldr	r0, [fp, #-4]
   1b2c0:	ldr	r1, [r0, #20]
   1b2c4:	add	r2, r1, #1
   1b2c8:	str	r2, [r0, #20]
   1b2cc:	movw	r0, #91	; 0x5b
   1b2d0:	strb	r0, [r1]
   1b2d4:	ldr	r0, [sp, #8]
   1b2d8:	cmp	r0, #0
   1b2dc:	beq	1b368 <flatcc_json_printer_int8_vector_field@@Base+0x164>
   1b2e0:	b	1b2e4 <flatcc_json_printer_int8_vector_field@@Base+0xe0>
   1b2e4:	ldr	r0, [fp, #-4]
   1b2e8:	ldrsb	r0, [r0, #25]
   1b2ec:	cmp	r0, #0
   1b2f0:	beq	1b318 <flatcc_json_printer_int8_vector_field@@Base+0x114>
   1b2f4:	ldr	r0, [fp, #-4]
   1b2f8:	ldr	r1, [r0, #20]
   1b2fc:	add	r2, r1, #1
   1b300:	str	r2, [r0, #20]
   1b304:	movw	r0, #10
   1b308:	strb	r0, [r1]
   1b30c:	ldr	r0, [fp, #-4]
   1b310:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1b314:	b	1b320 <flatcc_json_printer_int8_vector_field@@Base+0x11c>
   1b318:	ldr	r0, [fp, #-4]
   1b31c:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1b320:	b	1b324 <flatcc_json_printer_int8_vector_field@@Base+0x120>
   1b324:	ldr	r0, [sp, #12]
   1b328:	bl	1832c <flatcc_json_printer_int8_field@@Base+0x108>
   1b32c:	ldr	lr, [fp, #-4]
   1b330:	ldr	r1, [lr, #20]
   1b334:	sxtb	r0, r0
   1b338:	bl	1725c <flatcc_json_printer_int8@@Base+0x40>
   1b33c:	ldr	r1, [fp, #-4]
   1b340:	ldr	lr, [r1, #20]
   1b344:	add	r0, lr, r0
   1b348:	str	r0, [r1, #20]
   1b34c:	ldr	r0, [sp, #12]
   1b350:	add	r0, r0, #1
   1b354:	str	r0, [sp, #12]
   1b358:	ldr	r0, [sp, #8]
   1b35c:	mvn	r1, #0
   1b360:	add	r0, r0, r1
   1b364:	str	r0, [sp, #8]
   1b368:	b	1b36c <flatcc_json_printer_int8_vector_field@@Base+0x168>
   1b36c:	ldr	r0, [sp, #8]
   1b370:	mvn	r1, #0
   1b374:	add	r1, r0, r1
   1b378:	str	r1, [sp, #8]
   1b37c:	cmp	r0, #0
   1b380:	beq	1b414 <flatcc_json_printer_int8_vector_field@@Base+0x210>
   1b384:	ldr	r0, [fp, #-4]
   1b388:	ldr	r1, [r0, #20]
   1b38c:	add	r2, r1, #1
   1b390:	str	r2, [r0, #20]
   1b394:	movw	r0, #44	; 0x2c
   1b398:	strb	r0, [r1]
   1b39c:	ldr	r0, [fp, #-4]
   1b3a0:	ldrsb	r0, [r0, #25]
   1b3a4:	cmp	r0, #0
   1b3a8:	beq	1b3d0 <flatcc_json_printer_int8_vector_field@@Base+0x1cc>
   1b3ac:	ldr	r0, [fp, #-4]
   1b3b0:	ldr	r1, [r0, #20]
   1b3b4:	add	r2, r1, #1
   1b3b8:	str	r2, [r0, #20]
   1b3bc:	movw	r0, #10
   1b3c0:	strb	r0, [r1]
   1b3c4:	ldr	r0, [fp, #-4]
   1b3c8:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1b3cc:	b	1b3d8 <flatcc_json_printer_int8_vector_field@@Base+0x1d4>
   1b3d0:	ldr	r0, [fp, #-4]
   1b3d4:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1b3d8:	b	1b3dc <flatcc_json_printer_int8_vector_field@@Base+0x1d8>
   1b3dc:	ldr	r0, [sp, #12]
   1b3e0:	bl	1832c <flatcc_json_printer_int8_field@@Base+0x108>
   1b3e4:	ldr	lr, [fp, #-4]
   1b3e8:	ldr	r1, [lr, #20]
   1b3ec:	sxtb	r0, r0
   1b3f0:	bl	1725c <flatcc_json_printer_int8@@Base+0x40>
   1b3f4:	ldr	r1, [fp, #-4]
   1b3f8:	ldr	lr, [r1, #20]
   1b3fc:	add	r0, lr, r0
   1b400:	str	r0, [r1, #20]
   1b404:	ldr	r0, [sp, #12]
   1b408:	add	r0, r0, #1
   1b40c:	str	r0, [sp, #12]
   1b410:	b	1b36c <flatcc_json_printer_int8_vector_field@@Base+0x168>
   1b414:	b	1b418 <flatcc_json_printer_int8_vector_field@@Base+0x214>
   1b418:	ldr	r0, [fp, #-4]
   1b41c:	ldrsb	r0, [r0, #25]
   1b420:	cmp	r0, #0
   1b424:	beq	1b45c <flatcc_json_printer_int8_vector_field@@Base+0x258>
   1b428:	ldr	r0, [fp, #-4]
   1b42c:	ldr	r1, [r0, #20]
   1b430:	add	r2, r1, #1
   1b434:	str	r2, [r0, #20]
   1b438:	movw	r0, #10
   1b43c:	strb	r0, [r1]
   1b440:	ldr	r0, [fp, #-4]
   1b444:	ldr	r1, [r0, #32]
   1b448:	mvn	r2, #0
   1b44c:	add	r1, r1, r2
   1b450:	str	r1, [r0, #32]
   1b454:	ldr	r0, [fp, #-4]
   1b458:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1b45c:	ldr	r0, [fp, #-4]
   1b460:	ldr	r1, [r0, #20]
   1b464:	add	r2, r1, #1
   1b468:	str	r2, [r0, #20]
   1b46c:	movw	r0, #93	; 0x5d
   1b470:	strb	r0, [r1]
   1b474:	b	1b478 <flatcc_json_printer_int8_vector_field@@Base+0x274>
   1b478:	mov	sp, fp
   1b47c:	pop	{fp, pc}

0001b480 <flatcc_json_printer_int16_vector_field@@Base>:
   1b480:	push	{fp, lr}
   1b484:	mov	fp, sp
   1b488:	sub	sp, sp, #32
   1b48c:	ldr	ip, [fp, #8]
   1b490:	str	r0, [fp, #-4]
   1b494:	str	r1, [fp, #-8]
   1b498:	str	r2, [fp, #-12]
   1b49c:	str	r3, [sp, #16]
   1b4a0:	ldr	r0, [fp, #-8]
   1b4a4:	ldr	r1, [fp, #-12]
   1b4a8:	str	ip, [sp, #4]
   1b4ac:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   1b4b0:	str	r0, [sp, #12]
   1b4b4:	ldr	r0, [sp, #12]
   1b4b8:	movw	r1, #0
   1b4bc:	cmp	r0, r1
   1b4c0:	beq	1b6f4 <flatcc_json_printer_int16_vector_field@@Base+0x274>
   1b4c4:	ldr	r0, [fp, #-8]
   1b4c8:	ldr	r1, [r0, #16]
   1b4cc:	add	r2, r1, #1
   1b4d0:	str	r2, [r0, #16]
   1b4d4:	cmp	r1, #0
   1b4d8:	beq	1b4f4 <flatcc_json_printer_int16_vector_field@@Base+0x74>
   1b4dc:	ldr	r0, [fp, #-4]
   1b4e0:	ldr	r1, [r0, #20]
   1b4e4:	add	r2, r1, #1
   1b4e8:	str	r2, [r0, #20]
   1b4ec:	movw	r0, #44	; 0x2c
   1b4f0:	strb	r0, [r1]
   1b4f4:	ldr	r0, [sp, #12]
   1b4f8:	bl	179d4 <flatcc_json_printer_string_field@@Base+0x258>
   1b4fc:	str	r0, [sp, #12]
   1b500:	ldr	r0, [sp, #12]
   1b504:	bl	1a7d8 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   1b508:	str	r0, [sp, #8]
   1b50c:	ldr	r0, [sp, #12]
   1b510:	add	r0, r0, #4
   1b514:	str	r0, [sp, #12]
   1b518:	ldr	r0, [fp, #-4]
   1b51c:	ldr	r1, [sp, #16]
   1b520:	ldr	r2, [fp, #8]
   1b524:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   1b528:	ldr	r0, [fp, #-4]
   1b52c:	ldr	r1, [r0, #32]
   1b530:	add	r1, r1, #1
   1b534:	str	r1, [r0, #32]
   1b538:	ldr	r0, [fp, #-4]
   1b53c:	ldr	r1, [r0, #20]
   1b540:	add	r2, r1, #1
   1b544:	str	r2, [r0, #20]
   1b548:	movw	r0, #91	; 0x5b
   1b54c:	strb	r0, [r1]
   1b550:	ldr	r0, [sp, #8]
   1b554:	cmp	r0, #0
   1b558:	beq	1b5e4 <flatcc_json_printer_int16_vector_field@@Base+0x164>
   1b55c:	b	1b560 <flatcc_json_printer_int16_vector_field@@Base+0xe0>
   1b560:	ldr	r0, [fp, #-4]
   1b564:	ldrsb	r0, [r0, #25]
   1b568:	cmp	r0, #0
   1b56c:	beq	1b594 <flatcc_json_printer_int16_vector_field@@Base+0x114>
   1b570:	ldr	r0, [fp, #-4]
   1b574:	ldr	r1, [r0, #20]
   1b578:	add	r2, r1, #1
   1b57c:	str	r2, [r0, #20]
   1b580:	movw	r0, #10
   1b584:	strb	r0, [r1]
   1b588:	ldr	r0, [fp, #-4]
   1b58c:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1b590:	b	1b59c <flatcc_json_printer_int16_vector_field@@Base+0x11c>
   1b594:	ldr	r0, [fp, #-4]
   1b598:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1b59c:	b	1b5a0 <flatcc_json_printer_int16_vector_field@@Base+0x120>
   1b5a0:	ldr	r0, [sp, #12]
   1b5a4:	bl	1845c <flatcc_json_printer_int16_field@@Base+0x108>
   1b5a8:	ldr	lr, [fp, #-4]
   1b5ac:	ldr	r1, [lr, #20]
   1b5b0:	sxth	r0, r0
   1b5b4:	bl	17314 <flatcc_json_printer_int16@@Base+0x40>
   1b5b8:	ldr	r1, [fp, #-4]
   1b5bc:	ldr	lr, [r1, #20]
   1b5c0:	add	r0, lr, r0
   1b5c4:	str	r0, [r1, #20]
   1b5c8:	ldr	r0, [sp, #12]
   1b5cc:	add	r0, r0, #2
   1b5d0:	str	r0, [sp, #12]
   1b5d4:	ldr	r0, [sp, #8]
   1b5d8:	mvn	r1, #0
   1b5dc:	add	r0, r0, r1
   1b5e0:	str	r0, [sp, #8]
   1b5e4:	b	1b5e8 <flatcc_json_printer_int16_vector_field@@Base+0x168>
   1b5e8:	ldr	r0, [sp, #8]
   1b5ec:	mvn	r1, #0
   1b5f0:	add	r1, r0, r1
   1b5f4:	str	r1, [sp, #8]
   1b5f8:	cmp	r0, #0
   1b5fc:	beq	1b690 <flatcc_json_printer_int16_vector_field@@Base+0x210>
   1b600:	ldr	r0, [fp, #-4]
   1b604:	ldr	r1, [r0, #20]
   1b608:	add	r2, r1, #1
   1b60c:	str	r2, [r0, #20]
   1b610:	movw	r0, #44	; 0x2c
   1b614:	strb	r0, [r1]
   1b618:	ldr	r0, [fp, #-4]
   1b61c:	ldrsb	r0, [r0, #25]
   1b620:	cmp	r0, #0
   1b624:	beq	1b64c <flatcc_json_printer_int16_vector_field@@Base+0x1cc>
   1b628:	ldr	r0, [fp, #-4]
   1b62c:	ldr	r1, [r0, #20]
   1b630:	add	r2, r1, #1
   1b634:	str	r2, [r0, #20]
   1b638:	movw	r0, #10
   1b63c:	strb	r0, [r1]
   1b640:	ldr	r0, [fp, #-4]
   1b644:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1b648:	b	1b654 <flatcc_json_printer_int16_vector_field@@Base+0x1d4>
   1b64c:	ldr	r0, [fp, #-4]
   1b650:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1b654:	b	1b658 <flatcc_json_printer_int16_vector_field@@Base+0x1d8>
   1b658:	ldr	r0, [sp, #12]
   1b65c:	bl	1845c <flatcc_json_printer_int16_field@@Base+0x108>
   1b660:	ldr	lr, [fp, #-4]
   1b664:	ldr	r1, [lr, #20]
   1b668:	sxth	r0, r0
   1b66c:	bl	17314 <flatcc_json_printer_int16@@Base+0x40>
   1b670:	ldr	r1, [fp, #-4]
   1b674:	ldr	lr, [r1, #20]
   1b678:	add	r0, lr, r0
   1b67c:	str	r0, [r1, #20]
   1b680:	ldr	r0, [sp, #12]
   1b684:	add	r0, r0, #2
   1b688:	str	r0, [sp, #12]
   1b68c:	b	1b5e8 <flatcc_json_printer_int16_vector_field@@Base+0x168>
   1b690:	b	1b694 <flatcc_json_printer_int16_vector_field@@Base+0x214>
   1b694:	ldr	r0, [fp, #-4]
   1b698:	ldrsb	r0, [r0, #25]
   1b69c:	cmp	r0, #0
   1b6a0:	beq	1b6d8 <flatcc_json_printer_int16_vector_field@@Base+0x258>
   1b6a4:	ldr	r0, [fp, #-4]
   1b6a8:	ldr	r1, [r0, #20]
   1b6ac:	add	r2, r1, #1
   1b6b0:	str	r2, [r0, #20]
   1b6b4:	movw	r0, #10
   1b6b8:	strb	r0, [r1]
   1b6bc:	ldr	r0, [fp, #-4]
   1b6c0:	ldr	r1, [r0, #32]
   1b6c4:	mvn	r2, #0
   1b6c8:	add	r1, r1, r2
   1b6cc:	str	r1, [r0, #32]
   1b6d0:	ldr	r0, [fp, #-4]
   1b6d4:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1b6d8:	ldr	r0, [fp, #-4]
   1b6dc:	ldr	r1, [r0, #20]
   1b6e0:	add	r2, r1, #1
   1b6e4:	str	r2, [r0, #20]
   1b6e8:	movw	r0, #93	; 0x5d
   1b6ec:	strb	r0, [r1]
   1b6f0:	b	1b6f4 <flatcc_json_printer_int16_vector_field@@Base+0x274>
   1b6f4:	mov	sp, fp
   1b6f8:	pop	{fp, pc}

0001b6fc <flatcc_json_printer_int32_vector_field@@Base>:
   1b6fc:	push	{fp, lr}
   1b700:	mov	fp, sp
   1b704:	sub	sp, sp, #32
   1b708:	ldr	ip, [fp, #8]
   1b70c:	str	r0, [fp, #-4]
   1b710:	str	r1, [fp, #-8]
   1b714:	str	r2, [fp, #-12]
   1b718:	str	r3, [sp, #16]
   1b71c:	ldr	r0, [fp, #-8]
   1b720:	ldr	r1, [fp, #-12]
   1b724:	str	ip, [sp, #4]
   1b728:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   1b72c:	str	r0, [sp, #12]
   1b730:	ldr	r0, [sp, #12]
   1b734:	movw	r1, #0
   1b738:	cmp	r0, r1
   1b73c:	beq	1b968 <flatcc_json_printer_int32_vector_field@@Base+0x26c>
   1b740:	ldr	r0, [fp, #-8]
   1b744:	ldr	r1, [r0, #16]
   1b748:	add	r2, r1, #1
   1b74c:	str	r2, [r0, #16]
   1b750:	cmp	r1, #0
   1b754:	beq	1b770 <flatcc_json_printer_int32_vector_field@@Base+0x74>
   1b758:	ldr	r0, [fp, #-4]
   1b75c:	ldr	r1, [r0, #20]
   1b760:	add	r2, r1, #1
   1b764:	str	r2, [r0, #20]
   1b768:	movw	r0, #44	; 0x2c
   1b76c:	strb	r0, [r1]
   1b770:	ldr	r0, [sp, #12]
   1b774:	bl	179d4 <flatcc_json_printer_string_field@@Base+0x258>
   1b778:	str	r0, [sp, #12]
   1b77c:	ldr	r0, [sp, #12]
   1b780:	bl	1a7d8 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   1b784:	str	r0, [sp, #8]
   1b788:	ldr	r0, [sp, #12]
   1b78c:	add	r0, r0, #4
   1b790:	str	r0, [sp, #12]
   1b794:	ldr	r0, [fp, #-4]
   1b798:	ldr	r1, [sp, #16]
   1b79c:	ldr	r2, [fp, #8]
   1b7a0:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   1b7a4:	ldr	r0, [fp, #-4]
   1b7a8:	ldr	r1, [r0, #32]
   1b7ac:	add	r1, r1, #1
   1b7b0:	str	r1, [r0, #32]
   1b7b4:	ldr	r0, [fp, #-4]
   1b7b8:	ldr	r1, [r0, #20]
   1b7bc:	add	r2, r1, #1
   1b7c0:	str	r2, [r0, #20]
   1b7c4:	movw	r0, #91	; 0x5b
   1b7c8:	strb	r0, [r1]
   1b7cc:	ldr	r0, [sp, #8]
   1b7d0:	cmp	r0, #0
   1b7d4:	beq	1b85c <flatcc_json_printer_int32_vector_field@@Base+0x160>
   1b7d8:	b	1b7dc <flatcc_json_printer_int32_vector_field@@Base+0xe0>
   1b7dc:	ldr	r0, [fp, #-4]
   1b7e0:	ldrsb	r0, [r0, #25]
   1b7e4:	cmp	r0, #0
   1b7e8:	beq	1b810 <flatcc_json_printer_int32_vector_field@@Base+0x114>
   1b7ec:	ldr	r0, [fp, #-4]
   1b7f0:	ldr	r1, [r0, #20]
   1b7f4:	add	r2, r1, #1
   1b7f8:	str	r2, [r0, #20]
   1b7fc:	movw	r0, #10
   1b800:	strb	r0, [r1]
   1b804:	ldr	r0, [fp, #-4]
   1b808:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1b80c:	b	1b818 <flatcc_json_printer_int32_vector_field@@Base+0x11c>
   1b810:	ldr	r0, [fp, #-4]
   1b814:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1b818:	b	1b81c <flatcc_json_printer_int32_vector_field@@Base+0x120>
   1b81c:	ldr	r0, [sp, #12]
   1b820:	bl	18588 <flatcc_json_printer_int32_field@@Base+0x104>
   1b824:	ldr	lr, [fp, #-4]
   1b828:	ldr	r1, [lr, #20]
   1b82c:	bl	173c8 <flatcc_json_printer_int32@@Base+0x3c>
   1b830:	ldr	r1, [fp, #-4]
   1b834:	ldr	lr, [r1, #20]
   1b838:	add	r0, lr, r0
   1b83c:	str	r0, [r1, #20]
   1b840:	ldr	r0, [sp, #12]
   1b844:	add	r0, r0, #4
   1b848:	str	r0, [sp, #12]
   1b84c:	ldr	r0, [sp, #8]
   1b850:	mvn	r1, #0
   1b854:	add	r0, r0, r1
   1b858:	str	r0, [sp, #8]
   1b85c:	b	1b860 <flatcc_json_printer_int32_vector_field@@Base+0x164>
   1b860:	ldr	r0, [sp, #8]
   1b864:	mvn	r1, #0
   1b868:	add	r1, r0, r1
   1b86c:	str	r1, [sp, #8]
   1b870:	cmp	r0, #0
   1b874:	beq	1b904 <flatcc_json_printer_int32_vector_field@@Base+0x208>
   1b878:	ldr	r0, [fp, #-4]
   1b87c:	ldr	r1, [r0, #20]
   1b880:	add	r2, r1, #1
   1b884:	str	r2, [r0, #20]
   1b888:	movw	r0, #44	; 0x2c
   1b88c:	strb	r0, [r1]
   1b890:	ldr	r0, [fp, #-4]
   1b894:	ldrsb	r0, [r0, #25]
   1b898:	cmp	r0, #0
   1b89c:	beq	1b8c4 <flatcc_json_printer_int32_vector_field@@Base+0x1c8>
   1b8a0:	ldr	r0, [fp, #-4]
   1b8a4:	ldr	r1, [r0, #20]
   1b8a8:	add	r2, r1, #1
   1b8ac:	str	r2, [r0, #20]
   1b8b0:	movw	r0, #10
   1b8b4:	strb	r0, [r1]
   1b8b8:	ldr	r0, [fp, #-4]
   1b8bc:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1b8c0:	b	1b8cc <flatcc_json_printer_int32_vector_field@@Base+0x1d0>
   1b8c4:	ldr	r0, [fp, #-4]
   1b8c8:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1b8cc:	b	1b8d0 <flatcc_json_printer_int32_vector_field@@Base+0x1d4>
   1b8d0:	ldr	r0, [sp, #12]
   1b8d4:	bl	18588 <flatcc_json_printer_int32_field@@Base+0x104>
   1b8d8:	ldr	lr, [fp, #-4]
   1b8dc:	ldr	r1, [lr, #20]
   1b8e0:	bl	173c8 <flatcc_json_printer_int32@@Base+0x3c>
   1b8e4:	ldr	r1, [fp, #-4]
   1b8e8:	ldr	lr, [r1, #20]
   1b8ec:	add	r0, lr, r0
   1b8f0:	str	r0, [r1, #20]
   1b8f4:	ldr	r0, [sp, #12]
   1b8f8:	add	r0, r0, #4
   1b8fc:	str	r0, [sp, #12]
   1b900:	b	1b860 <flatcc_json_printer_int32_vector_field@@Base+0x164>
   1b904:	b	1b908 <flatcc_json_printer_int32_vector_field@@Base+0x20c>
   1b908:	ldr	r0, [fp, #-4]
   1b90c:	ldrsb	r0, [r0, #25]
   1b910:	cmp	r0, #0
   1b914:	beq	1b94c <flatcc_json_printer_int32_vector_field@@Base+0x250>
   1b918:	ldr	r0, [fp, #-4]
   1b91c:	ldr	r1, [r0, #20]
   1b920:	add	r2, r1, #1
   1b924:	str	r2, [r0, #20]
   1b928:	movw	r0, #10
   1b92c:	strb	r0, [r1]
   1b930:	ldr	r0, [fp, #-4]
   1b934:	ldr	r1, [r0, #32]
   1b938:	mvn	r2, #0
   1b93c:	add	r1, r1, r2
   1b940:	str	r1, [r0, #32]
   1b944:	ldr	r0, [fp, #-4]
   1b948:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1b94c:	ldr	r0, [fp, #-4]
   1b950:	ldr	r1, [r0, #20]
   1b954:	add	r2, r1, #1
   1b958:	str	r2, [r0, #20]
   1b95c:	movw	r0, #93	; 0x5d
   1b960:	strb	r0, [r1]
   1b964:	b	1b968 <flatcc_json_printer_int32_vector_field@@Base+0x26c>
   1b968:	mov	sp, fp
   1b96c:	pop	{fp, pc}

0001b970 <flatcc_json_printer_int64_vector_field@@Base>:
   1b970:	push	{fp, lr}
   1b974:	mov	fp, sp
   1b978:	sub	sp, sp, #32
   1b97c:	ldr	ip, [fp, #8]
   1b980:	str	r0, [fp, #-4]
   1b984:	str	r1, [fp, #-8]
   1b988:	str	r2, [fp, #-12]
   1b98c:	str	r3, [sp, #16]
   1b990:	ldr	r0, [fp, #-8]
   1b994:	ldr	r1, [fp, #-12]
   1b998:	str	ip, [sp, #4]
   1b99c:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   1b9a0:	str	r0, [sp, #12]
   1b9a4:	ldr	r0, [sp, #12]
   1b9a8:	movw	r1, #0
   1b9ac:	cmp	r0, r1
   1b9b0:	beq	1bbdc <flatcc_json_printer_int64_vector_field@@Base+0x26c>
   1b9b4:	ldr	r0, [fp, #-8]
   1b9b8:	ldr	r1, [r0, #16]
   1b9bc:	add	r2, r1, #1
   1b9c0:	str	r2, [r0, #16]
   1b9c4:	cmp	r1, #0
   1b9c8:	beq	1b9e4 <flatcc_json_printer_int64_vector_field@@Base+0x74>
   1b9cc:	ldr	r0, [fp, #-4]
   1b9d0:	ldr	r1, [r0, #20]
   1b9d4:	add	r2, r1, #1
   1b9d8:	str	r2, [r0, #20]
   1b9dc:	movw	r0, #44	; 0x2c
   1b9e0:	strb	r0, [r1]
   1b9e4:	ldr	r0, [sp, #12]
   1b9e8:	bl	179d4 <flatcc_json_printer_string_field@@Base+0x258>
   1b9ec:	str	r0, [sp, #12]
   1b9f0:	ldr	r0, [sp, #12]
   1b9f4:	bl	1a7d8 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   1b9f8:	str	r0, [sp, #8]
   1b9fc:	ldr	r0, [sp, #12]
   1ba00:	add	r0, r0, #4
   1ba04:	str	r0, [sp, #12]
   1ba08:	ldr	r0, [fp, #-4]
   1ba0c:	ldr	r1, [sp, #16]
   1ba10:	ldr	r2, [fp, #8]
   1ba14:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   1ba18:	ldr	r0, [fp, #-4]
   1ba1c:	ldr	r1, [r0, #32]
   1ba20:	add	r1, r1, #1
   1ba24:	str	r1, [r0, #32]
   1ba28:	ldr	r0, [fp, #-4]
   1ba2c:	ldr	r1, [r0, #20]
   1ba30:	add	r2, r1, #1
   1ba34:	str	r2, [r0, #20]
   1ba38:	movw	r0, #91	; 0x5b
   1ba3c:	strb	r0, [r1]
   1ba40:	ldr	r0, [sp, #8]
   1ba44:	cmp	r0, #0
   1ba48:	beq	1bad0 <flatcc_json_printer_int64_vector_field@@Base+0x160>
   1ba4c:	b	1ba50 <flatcc_json_printer_int64_vector_field@@Base+0xe0>
   1ba50:	ldr	r0, [fp, #-4]
   1ba54:	ldrsb	r0, [r0, #25]
   1ba58:	cmp	r0, #0
   1ba5c:	beq	1ba84 <flatcc_json_printer_int64_vector_field@@Base+0x114>
   1ba60:	ldr	r0, [fp, #-4]
   1ba64:	ldr	r1, [r0, #20]
   1ba68:	add	r2, r1, #1
   1ba6c:	str	r2, [r0, #20]
   1ba70:	movw	r0, #10
   1ba74:	strb	r0, [r1]
   1ba78:	ldr	r0, [fp, #-4]
   1ba7c:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1ba80:	b	1ba8c <flatcc_json_printer_int64_vector_field@@Base+0x11c>
   1ba84:	ldr	r0, [fp, #-4]
   1ba88:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1ba8c:	b	1ba90 <flatcc_json_printer_int64_vector_field@@Base+0x120>
   1ba90:	ldr	r0, [sp, #12]
   1ba94:	bl	186e0 <flatcc_json_printer_int64_field@@Base+0x134>
   1ba98:	ldr	lr, [fp, #-4]
   1ba9c:	ldr	r2, [lr, #20]
   1baa0:	bl	17480 <flatcc_json_printer_int64@@Base+0x44>
   1baa4:	ldr	r1, [fp, #-4]
   1baa8:	ldr	r2, [r1, #20]
   1baac:	add	r0, r2, r0
   1bab0:	str	r0, [r1, #20]
   1bab4:	ldr	r0, [sp, #12]
   1bab8:	add	r0, r0, #8
   1babc:	str	r0, [sp, #12]
   1bac0:	ldr	r0, [sp, #8]
   1bac4:	mvn	r1, #0
   1bac8:	add	r0, r0, r1
   1bacc:	str	r0, [sp, #8]
   1bad0:	b	1bad4 <flatcc_json_printer_int64_vector_field@@Base+0x164>
   1bad4:	ldr	r0, [sp, #8]
   1bad8:	mvn	r1, #0
   1badc:	add	r1, r0, r1
   1bae0:	str	r1, [sp, #8]
   1bae4:	cmp	r0, #0
   1bae8:	beq	1bb78 <flatcc_json_printer_int64_vector_field@@Base+0x208>
   1baec:	ldr	r0, [fp, #-4]
   1baf0:	ldr	r1, [r0, #20]
   1baf4:	add	r2, r1, #1
   1baf8:	str	r2, [r0, #20]
   1bafc:	movw	r0, #44	; 0x2c
   1bb00:	strb	r0, [r1]
   1bb04:	ldr	r0, [fp, #-4]
   1bb08:	ldrsb	r0, [r0, #25]
   1bb0c:	cmp	r0, #0
   1bb10:	beq	1bb38 <flatcc_json_printer_int64_vector_field@@Base+0x1c8>
   1bb14:	ldr	r0, [fp, #-4]
   1bb18:	ldr	r1, [r0, #20]
   1bb1c:	add	r2, r1, #1
   1bb20:	str	r2, [r0, #20]
   1bb24:	movw	r0, #10
   1bb28:	strb	r0, [r1]
   1bb2c:	ldr	r0, [fp, #-4]
   1bb30:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1bb34:	b	1bb40 <flatcc_json_printer_int64_vector_field@@Base+0x1d0>
   1bb38:	ldr	r0, [fp, #-4]
   1bb3c:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1bb40:	b	1bb44 <flatcc_json_printer_int64_vector_field@@Base+0x1d4>
   1bb44:	ldr	r0, [sp, #12]
   1bb48:	bl	186e0 <flatcc_json_printer_int64_field@@Base+0x134>
   1bb4c:	ldr	lr, [fp, #-4]
   1bb50:	ldr	r2, [lr, #20]
   1bb54:	bl	17480 <flatcc_json_printer_int64@@Base+0x44>
   1bb58:	ldr	r1, [fp, #-4]
   1bb5c:	ldr	r2, [r1, #20]
   1bb60:	add	r0, r2, r0
   1bb64:	str	r0, [r1, #20]
   1bb68:	ldr	r0, [sp, #12]
   1bb6c:	add	r0, r0, #8
   1bb70:	str	r0, [sp, #12]
   1bb74:	b	1bad4 <flatcc_json_printer_int64_vector_field@@Base+0x164>
   1bb78:	b	1bb7c <flatcc_json_printer_int64_vector_field@@Base+0x20c>
   1bb7c:	ldr	r0, [fp, #-4]
   1bb80:	ldrsb	r0, [r0, #25]
   1bb84:	cmp	r0, #0
   1bb88:	beq	1bbc0 <flatcc_json_printer_int64_vector_field@@Base+0x250>
   1bb8c:	ldr	r0, [fp, #-4]
   1bb90:	ldr	r1, [r0, #20]
   1bb94:	add	r2, r1, #1
   1bb98:	str	r2, [r0, #20]
   1bb9c:	movw	r0, #10
   1bba0:	strb	r0, [r1]
   1bba4:	ldr	r0, [fp, #-4]
   1bba8:	ldr	r1, [r0, #32]
   1bbac:	mvn	r2, #0
   1bbb0:	add	r1, r1, r2
   1bbb4:	str	r1, [r0, #32]
   1bbb8:	ldr	r0, [fp, #-4]
   1bbbc:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1bbc0:	ldr	r0, [fp, #-4]
   1bbc4:	ldr	r1, [r0, #20]
   1bbc8:	add	r2, r1, #1
   1bbcc:	str	r2, [r0, #20]
   1bbd0:	movw	r0, #93	; 0x5d
   1bbd4:	strb	r0, [r1]
   1bbd8:	b	1bbdc <flatcc_json_printer_int64_vector_field@@Base+0x26c>
   1bbdc:	mov	sp, fp
   1bbe0:	pop	{fp, pc}

0001bbe4 <flatcc_json_printer_bool_vector_field@@Base>:
   1bbe4:	push	{fp, lr}
   1bbe8:	mov	fp, sp
   1bbec:	sub	sp, sp, #32
   1bbf0:	ldr	ip, [fp, #8]
   1bbf4:	str	r0, [fp, #-4]
   1bbf8:	str	r1, [fp, #-8]
   1bbfc:	str	r2, [fp, #-12]
   1bc00:	str	r3, [sp, #16]
   1bc04:	ldr	r0, [fp, #-8]
   1bc08:	ldr	r1, [fp, #-12]
   1bc0c:	str	ip, [sp, #4]
   1bc10:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   1bc14:	str	r0, [sp, #12]
   1bc18:	ldr	r0, [sp, #12]
   1bc1c:	movw	r1, #0
   1bc20:	cmp	r0, r1
   1bc24:	beq	1be58 <flatcc_json_printer_bool_vector_field@@Base+0x274>
   1bc28:	ldr	r0, [fp, #-8]
   1bc2c:	ldr	r1, [r0, #16]
   1bc30:	add	r2, r1, #1
   1bc34:	str	r2, [r0, #16]
   1bc38:	cmp	r1, #0
   1bc3c:	beq	1bc58 <flatcc_json_printer_bool_vector_field@@Base+0x74>
   1bc40:	ldr	r0, [fp, #-4]
   1bc44:	ldr	r1, [r0, #20]
   1bc48:	add	r2, r1, #1
   1bc4c:	str	r2, [r0, #20]
   1bc50:	movw	r0, #44	; 0x2c
   1bc54:	strb	r0, [r1]
   1bc58:	ldr	r0, [sp, #12]
   1bc5c:	bl	179d4 <flatcc_json_printer_string_field@@Base+0x258>
   1bc60:	str	r0, [sp, #12]
   1bc64:	ldr	r0, [sp, #12]
   1bc68:	bl	1a7d8 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   1bc6c:	str	r0, [sp, #8]
   1bc70:	ldr	r0, [sp, #12]
   1bc74:	add	r0, r0, #4
   1bc78:	str	r0, [sp, #12]
   1bc7c:	ldr	r0, [fp, #-4]
   1bc80:	ldr	r1, [sp, #16]
   1bc84:	ldr	r2, [fp, #8]
   1bc88:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   1bc8c:	ldr	r0, [fp, #-4]
   1bc90:	ldr	r1, [r0, #32]
   1bc94:	add	r1, r1, #1
   1bc98:	str	r1, [r0, #32]
   1bc9c:	ldr	r0, [fp, #-4]
   1bca0:	ldr	r1, [r0, #20]
   1bca4:	add	r2, r1, #1
   1bca8:	str	r2, [r0, #20]
   1bcac:	movw	r0, #91	; 0x5b
   1bcb0:	strb	r0, [r1]
   1bcb4:	ldr	r0, [sp, #8]
   1bcb8:	cmp	r0, #0
   1bcbc:	beq	1bd48 <flatcc_json_printer_bool_vector_field@@Base+0x164>
   1bcc0:	b	1bcc4 <flatcc_json_printer_bool_vector_field@@Base+0xe0>
   1bcc4:	ldr	r0, [fp, #-4]
   1bcc8:	ldrsb	r0, [r0, #25]
   1bccc:	cmp	r0, #0
   1bcd0:	beq	1bcf8 <flatcc_json_printer_bool_vector_field@@Base+0x114>
   1bcd4:	ldr	r0, [fp, #-4]
   1bcd8:	ldr	r1, [r0, #20]
   1bcdc:	add	r2, r1, #1
   1bce0:	str	r2, [r0, #20]
   1bce4:	movw	r0, #10
   1bce8:	strb	r0, [r1]
   1bcec:	ldr	r0, [fp, #-4]
   1bcf0:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1bcf4:	b	1bd00 <flatcc_json_printer_bool_vector_field@@Base+0x11c>
   1bcf8:	ldr	r0, [fp, #-4]
   1bcfc:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1bd00:	b	1bd04 <flatcc_json_printer_bool_vector_field@@Base+0x120>
   1bd04:	ldr	r0, [sp, #12]
   1bd08:	bl	18818 <flatcc_json_printer_bool_field@@Base+0x104>
   1bd0c:	and	r0, r0, #255	; 0xff
   1bd10:	ldr	lr, [fp, #-4]
   1bd14:	ldr	r1, [lr, #20]
   1bd18:	bl	18840 <flatcc_json_printer_bool_field@@Base+0x12c>
   1bd1c:	ldr	r1, [fp, #-4]
   1bd20:	ldr	lr, [r1, #20]
   1bd24:	add	r0, lr, r0
   1bd28:	str	r0, [r1, #20]
   1bd2c:	ldr	r0, [sp, #12]
   1bd30:	add	r0, r0, #1
   1bd34:	str	r0, [sp, #12]
   1bd38:	ldr	r0, [sp, #8]
   1bd3c:	mvn	r1, #0
   1bd40:	add	r0, r0, r1
   1bd44:	str	r0, [sp, #8]
   1bd48:	b	1bd4c <flatcc_json_printer_bool_vector_field@@Base+0x168>
   1bd4c:	ldr	r0, [sp, #8]
   1bd50:	mvn	r1, #0
   1bd54:	add	r1, r0, r1
   1bd58:	str	r1, [sp, #8]
   1bd5c:	cmp	r0, #0
   1bd60:	beq	1bdf4 <flatcc_json_printer_bool_vector_field@@Base+0x210>
   1bd64:	ldr	r0, [fp, #-4]
   1bd68:	ldr	r1, [r0, #20]
   1bd6c:	add	r2, r1, #1
   1bd70:	str	r2, [r0, #20]
   1bd74:	movw	r0, #44	; 0x2c
   1bd78:	strb	r0, [r1]
   1bd7c:	ldr	r0, [fp, #-4]
   1bd80:	ldrsb	r0, [r0, #25]
   1bd84:	cmp	r0, #0
   1bd88:	beq	1bdb0 <flatcc_json_printer_bool_vector_field@@Base+0x1cc>
   1bd8c:	ldr	r0, [fp, #-4]
   1bd90:	ldr	r1, [r0, #20]
   1bd94:	add	r2, r1, #1
   1bd98:	str	r2, [r0, #20]
   1bd9c:	movw	r0, #10
   1bda0:	strb	r0, [r1]
   1bda4:	ldr	r0, [fp, #-4]
   1bda8:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1bdac:	b	1bdb8 <flatcc_json_printer_bool_vector_field@@Base+0x1d4>
   1bdb0:	ldr	r0, [fp, #-4]
   1bdb4:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1bdb8:	b	1bdbc <flatcc_json_printer_bool_vector_field@@Base+0x1d8>
   1bdbc:	ldr	r0, [sp, #12]
   1bdc0:	bl	18818 <flatcc_json_printer_bool_field@@Base+0x104>
   1bdc4:	and	r0, r0, #255	; 0xff
   1bdc8:	ldr	lr, [fp, #-4]
   1bdcc:	ldr	r1, [lr, #20]
   1bdd0:	bl	18840 <flatcc_json_printer_bool_field@@Base+0x12c>
   1bdd4:	ldr	r1, [fp, #-4]
   1bdd8:	ldr	lr, [r1, #20]
   1bddc:	add	r0, lr, r0
   1bde0:	str	r0, [r1, #20]
   1bde4:	ldr	r0, [sp, #12]
   1bde8:	add	r0, r0, #1
   1bdec:	str	r0, [sp, #12]
   1bdf0:	b	1bd4c <flatcc_json_printer_bool_vector_field@@Base+0x168>
   1bdf4:	b	1bdf8 <flatcc_json_printer_bool_vector_field@@Base+0x214>
   1bdf8:	ldr	r0, [fp, #-4]
   1bdfc:	ldrsb	r0, [r0, #25]
   1be00:	cmp	r0, #0
   1be04:	beq	1be3c <flatcc_json_printer_bool_vector_field@@Base+0x258>
   1be08:	ldr	r0, [fp, #-4]
   1be0c:	ldr	r1, [r0, #20]
   1be10:	add	r2, r1, #1
   1be14:	str	r2, [r0, #20]
   1be18:	movw	r0, #10
   1be1c:	strb	r0, [r1]
   1be20:	ldr	r0, [fp, #-4]
   1be24:	ldr	r1, [r0, #32]
   1be28:	mvn	r2, #0
   1be2c:	add	r1, r1, r2
   1be30:	str	r1, [r0, #32]
   1be34:	ldr	r0, [fp, #-4]
   1be38:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1be3c:	ldr	r0, [fp, #-4]
   1be40:	ldr	r1, [r0, #20]
   1be44:	add	r2, r1, #1
   1be48:	str	r2, [r0, #20]
   1be4c:	movw	r0, #93	; 0x5d
   1be50:	strb	r0, [r1]
   1be54:	b	1be58 <flatcc_json_printer_bool_vector_field@@Base+0x274>
   1be58:	mov	sp, fp
   1be5c:	pop	{fp, pc}

0001be60 <flatcc_json_printer_float_vector_field@@Base>:
   1be60:	push	{fp, lr}
   1be64:	mov	fp, sp
   1be68:	sub	sp, sp, #32
   1be6c:	ldr	ip, [fp, #8]
   1be70:	str	r0, [fp, #-4]
   1be74:	str	r1, [fp, #-8]
   1be78:	str	r2, [fp, #-12]
   1be7c:	str	r3, [sp, #16]
   1be80:	ldr	r0, [fp, #-8]
   1be84:	ldr	r1, [fp, #-12]
   1be88:	str	ip, [sp, #4]
   1be8c:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   1be90:	str	r0, [sp, #12]
   1be94:	ldr	r0, [sp, #12]
   1be98:	movw	r1, #0
   1be9c:	cmp	r0, r1
   1bea0:	beq	1c0d4 <flatcc_json_printer_float_vector_field@@Base+0x274>
   1bea4:	ldr	r0, [fp, #-8]
   1bea8:	ldr	r1, [r0, #16]
   1beac:	add	r2, r1, #1
   1beb0:	str	r2, [r0, #16]
   1beb4:	cmp	r1, #0
   1beb8:	beq	1bed4 <flatcc_json_printer_float_vector_field@@Base+0x74>
   1bebc:	ldr	r0, [fp, #-4]
   1bec0:	ldr	r1, [r0, #20]
   1bec4:	add	r2, r1, #1
   1bec8:	str	r2, [r0, #20]
   1becc:	movw	r0, #44	; 0x2c
   1bed0:	strb	r0, [r1]
   1bed4:	ldr	r0, [sp, #12]
   1bed8:	bl	179d4 <flatcc_json_printer_string_field@@Base+0x258>
   1bedc:	str	r0, [sp, #12]
   1bee0:	ldr	r0, [sp, #12]
   1bee4:	bl	1a7d8 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   1bee8:	str	r0, [sp, #8]
   1beec:	ldr	r0, [sp, #12]
   1bef0:	add	r0, r0, #4
   1bef4:	str	r0, [sp, #12]
   1bef8:	ldr	r0, [fp, #-4]
   1befc:	ldr	r1, [sp, #16]
   1bf00:	ldr	r2, [fp, #8]
   1bf04:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   1bf08:	ldr	r0, [fp, #-4]
   1bf0c:	ldr	r1, [r0, #32]
   1bf10:	add	r1, r1, #1
   1bf14:	str	r1, [r0, #32]
   1bf18:	ldr	r0, [fp, #-4]
   1bf1c:	ldr	r1, [r0, #20]
   1bf20:	add	r2, r1, #1
   1bf24:	str	r2, [r0, #20]
   1bf28:	movw	r0, #91	; 0x5b
   1bf2c:	strb	r0, [r1]
   1bf30:	ldr	r0, [sp, #8]
   1bf34:	cmp	r0, #0
   1bf38:	beq	1bfc4 <flatcc_json_printer_float_vector_field@@Base+0x164>
   1bf3c:	b	1bf40 <flatcc_json_printer_float_vector_field@@Base+0xe0>
   1bf40:	ldr	r0, [fp, #-4]
   1bf44:	ldrsb	r0, [r0, #25]
   1bf48:	cmp	r0, #0
   1bf4c:	beq	1bf74 <flatcc_json_printer_float_vector_field@@Base+0x114>
   1bf50:	ldr	r0, [fp, #-4]
   1bf54:	ldr	r1, [r0, #20]
   1bf58:	add	r2, r1, #1
   1bf5c:	str	r2, [r0, #20]
   1bf60:	movw	r0, #10
   1bf64:	strb	r0, [r1]
   1bf68:	ldr	r0, [fp, #-4]
   1bf6c:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1bf70:	b	1bf7c <flatcc_json_printer_float_vector_field@@Base+0x11c>
   1bf74:	ldr	r0, [fp, #-4]
   1bf78:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1bf7c:	b	1bf80 <flatcc_json_printer_float_vector_field@@Base+0x120>
   1bf80:	ldr	r0, [sp, #12]
   1bf84:	bl	189f8 <flatcc_json_printer_float_field@@Base+0x108>
   1bf88:	vcvt.f64.f32	d0, s0
   1bf8c:	ldr	r0, [fp, #-4]
   1bf90:	ldr	r0, [r0, #20]
   1bf94:	bl	14e50 <flatcc_json_printer_fmt_float@@Base+0x2c>
   1bf98:	ldr	lr, [fp, #-4]
   1bf9c:	ldr	r1, [lr, #20]
   1bfa0:	add	r0, r1, r0
   1bfa4:	str	r0, [lr, #20]
   1bfa8:	ldr	r0, [sp, #12]
   1bfac:	add	r0, r0, #4
   1bfb0:	str	r0, [sp, #12]
   1bfb4:	ldr	r0, [sp, #8]
   1bfb8:	mvn	r1, #0
   1bfbc:	add	r0, r0, r1
   1bfc0:	str	r0, [sp, #8]
   1bfc4:	b	1bfc8 <flatcc_json_printer_float_vector_field@@Base+0x168>
   1bfc8:	ldr	r0, [sp, #8]
   1bfcc:	mvn	r1, #0
   1bfd0:	add	r1, r0, r1
   1bfd4:	str	r1, [sp, #8]
   1bfd8:	cmp	r0, #0
   1bfdc:	beq	1c070 <flatcc_json_printer_float_vector_field@@Base+0x210>
   1bfe0:	ldr	r0, [fp, #-4]
   1bfe4:	ldr	r1, [r0, #20]
   1bfe8:	add	r2, r1, #1
   1bfec:	str	r2, [r0, #20]
   1bff0:	movw	r0, #44	; 0x2c
   1bff4:	strb	r0, [r1]
   1bff8:	ldr	r0, [fp, #-4]
   1bffc:	ldrsb	r0, [r0, #25]
   1c000:	cmp	r0, #0
   1c004:	beq	1c02c <flatcc_json_printer_float_vector_field@@Base+0x1cc>
   1c008:	ldr	r0, [fp, #-4]
   1c00c:	ldr	r1, [r0, #20]
   1c010:	add	r2, r1, #1
   1c014:	str	r2, [r0, #20]
   1c018:	movw	r0, #10
   1c01c:	strb	r0, [r1]
   1c020:	ldr	r0, [fp, #-4]
   1c024:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1c028:	b	1c034 <flatcc_json_printer_float_vector_field@@Base+0x1d4>
   1c02c:	ldr	r0, [fp, #-4]
   1c030:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1c034:	b	1c038 <flatcc_json_printer_float_vector_field@@Base+0x1d8>
   1c038:	ldr	r0, [sp, #12]
   1c03c:	bl	189f8 <flatcc_json_printer_float_field@@Base+0x108>
   1c040:	vcvt.f64.f32	d0, s0
   1c044:	ldr	r0, [fp, #-4]
   1c048:	ldr	r0, [r0, #20]
   1c04c:	bl	14e50 <flatcc_json_printer_fmt_float@@Base+0x2c>
   1c050:	ldr	lr, [fp, #-4]
   1c054:	ldr	r1, [lr, #20]
   1c058:	add	r0, r1, r0
   1c05c:	str	r0, [lr, #20]
   1c060:	ldr	r0, [sp, #12]
   1c064:	add	r0, r0, #4
   1c068:	str	r0, [sp, #12]
   1c06c:	b	1bfc8 <flatcc_json_printer_float_vector_field@@Base+0x168>
   1c070:	b	1c074 <flatcc_json_printer_float_vector_field@@Base+0x214>
   1c074:	ldr	r0, [fp, #-4]
   1c078:	ldrsb	r0, [r0, #25]
   1c07c:	cmp	r0, #0
   1c080:	beq	1c0b8 <flatcc_json_printer_float_vector_field@@Base+0x258>
   1c084:	ldr	r0, [fp, #-4]
   1c088:	ldr	r1, [r0, #20]
   1c08c:	add	r2, r1, #1
   1c090:	str	r2, [r0, #20]
   1c094:	movw	r0, #10
   1c098:	strb	r0, [r1]
   1c09c:	ldr	r0, [fp, #-4]
   1c0a0:	ldr	r1, [r0, #32]
   1c0a4:	mvn	r2, #0
   1c0a8:	add	r1, r1, r2
   1c0ac:	str	r1, [r0, #32]
   1c0b0:	ldr	r0, [fp, #-4]
   1c0b4:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1c0b8:	ldr	r0, [fp, #-4]
   1c0bc:	ldr	r1, [r0, #20]
   1c0c0:	add	r2, r1, #1
   1c0c4:	str	r2, [r0, #20]
   1c0c8:	movw	r0, #93	; 0x5d
   1c0cc:	strb	r0, [r1]
   1c0d0:	b	1c0d4 <flatcc_json_printer_float_vector_field@@Base+0x274>
   1c0d4:	mov	sp, fp
   1c0d8:	pop	{fp, pc}

0001c0dc <flatcc_json_printer_double_vector_field@@Base>:
   1c0dc:	push	{fp, lr}
   1c0e0:	mov	fp, sp
   1c0e4:	sub	sp, sp, #32
   1c0e8:	ldr	ip, [fp, #8]
   1c0ec:	str	r0, [fp, #-4]
   1c0f0:	str	r1, [fp, #-8]
   1c0f4:	str	r2, [fp, #-12]
   1c0f8:	str	r3, [sp, #16]
   1c0fc:	ldr	r0, [fp, #-8]
   1c100:	ldr	r1, [fp, #-12]
   1c104:	str	ip, [sp, #4]
   1c108:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   1c10c:	str	r0, [sp, #12]
   1c110:	ldr	r0, [sp, #12]
   1c114:	movw	r1, #0
   1c118:	cmp	r0, r1
   1c11c:	beq	1c348 <flatcc_json_printer_double_vector_field@@Base+0x26c>
   1c120:	ldr	r0, [fp, #-8]
   1c124:	ldr	r1, [r0, #16]
   1c128:	add	r2, r1, #1
   1c12c:	str	r2, [r0, #16]
   1c130:	cmp	r1, #0
   1c134:	beq	1c150 <flatcc_json_printer_double_vector_field@@Base+0x74>
   1c138:	ldr	r0, [fp, #-4]
   1c13c:	ldr	r1, [r0, #20]
   1c140:	add	r2, r1, #1
   1c144:	str	r2, [r0, #20]
   1c148:	movw	r0, #44	; 0x2c
   1c14c:	strb	r0, [r1]
   1c150:	ldr	r0, [sp, #12]
   1c154:	bl	179d4 <flatcc_json_printer_string_field@@Base+0x258>
   1c158:	str	r0, [sp, #12]
   1c15c:	ldr	r0, [sp, #12]
   1c160:	bl	1a7d8 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   1c164:	str	r0, [sp, #8]
   1c168:	ldr	r0, [sp, #12]
   1c16c:	add	r0, r0, #4
   1c170:	str	r0, [sp, #12]
   1c174:	ldr	r0, [fp, #-4]
   1c178:	ldr	r1, [sp, #16]
   1c17c:	ldr	r2, [fp, #8]
   1c180:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   1c184:	ldr	r0, [fp, #-4]
   1c188:	ldr	r1, [r0, #32]
   1c18c:	add	r1, r1, #1
   1c190:	str	r1, [r0, #32]
   1c194:	ldr	r0, [fp, #-4]
   1c198:	ldr	r1, [r0, #20]
   1c19c:	add	r2, r1, #1
   1c1a0:	str	r2, [r0, #20]
   1c1a4:	movw	r0, #91	; 0x5b
   1c1a8:	strb	r0, [r1]
   1c1ac:	ldr	r0, [sp, #8]
   1c1b0:	cmp	r0, #0
   1c1b4:	beq	1c23c <flatcc_json_printer_double_vector_field@@Base+0x160>
   1c1b8:	b	1c1bc <flatcc_json_printer_double_vector_field@@Base+0xe0>
   1c1bc:	ldr	r0, [fp, #-4]
   1c1c0:	ldrsb	r0, [r0, #25]
   1c1c4:	cmp	r0, #0
   1c1c8:	beq	1c1f0 <flatcc_json_printer_double_vector_field@@Base+0x114>
   1c1cc:	ldr	r0, [fp, #-4]
   1c1d0:	ldr	r1, [r0, #20]
   1c1d4:	add	r2, r1, #1
   1c1d8:	str	r2, [r0, #20]
   1c1dc:	movw	r0, #10
   1c1e0:	strb	r0, [r1]
   1c1e4:	ldr	r0, [fp, #-4]
   1c1e8:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1c1ec:	b	1c1f8 <flatcc_json_printer_double_vector_field@@Base+0x11c>
   1c1f0:	ldr	r0, [fp, #-4]
   1c1f4:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1c1f8:	b	1c1fc <flatcc_json_printer_double_vector_field@@Base+0x120>
   1c1fc:	ldr	r0, [sp, #12]
   1c200:	bl	18b20 <flatcc_json_printer_double_field@@Base+0x104>
   1c204:	ldr	r0, [fp, #-4]
   1c208:	ldr	r0, [r0, #20]
   1c20c:	bl	14e50 <flatcc_json_printer_fmt_float@@Base+0x2c>
   1c210:	ldr	lr, [fp, #-4]
   1c214:	ldr	r1, [lr, #20]
   1c218:	add	r0, r1, r0
   1c21c:	str	r0, [lr, #20]
   1c220:	ldr	r0, [sp, #12]
   1c224:	add	r0, r0, #8
   1c228:	str	r0, [sp, #12]
   1c22c:	ldr	r0, [sp, #8]
   1c230:	mvn	r1, #0
   1c234:	add	r0, r0, r1
   1c238:	str	r0, [sp, #8]
   1c23c:	b	1c240 <flatcc_json_printer_double_vector_field@@Base+0x164>
   1c240:	ldr	r0, [sp, #8]
   1c244:	mvn	r1, #0
   1c248:	add	r1, r0, r1
   1c24c:	str	r1, [sp, #8]
   1c250:	cmp	r0, #0
   1c254:	beq	1c2e4 <flatcc_json_printer_double_vector_field@@Base+0x208>
   1c258:	ldr	r0, [fp, #-4]
   1c25c:	ldr	r1, [r0, #20]
   1c260:	add	r2, r1, #1
   1c264:	str	r2, [r0, #20]
   1c268:	movw	r0, #44	; 0x2c
   1c26c:	strb	r0, [r1]
   1c270:	ldr	r0, [fp, #-4]
   1c274:	ldrsb	r0, [r0, #25]
   1c278:	cmp	r0, #0
   1c27c:	beq	1c2a4 <flatcc_json_printer_double_vector_field@@Base+0x1c8>
   1c280:	ldr	r0, [fp, #-4]
   1c284:	ldr	r1, [r0, #20]
   1c288:	add	r2, r1, #1
   1c28c:	str	r2, [r0, #20]
   1c290:	movw	r0, #10
   1c294:	strb	r0, [r1]
   1c298:	ldr	r0, [fp, #-4]
   1c29c:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1c2a0:	b	1c2ac <flatcc_json_printer_double_vector_field@@Base+0x1d0>
   1c2a4:	ldr	r0, [fp, #-4]
   1c2a8:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1c2ac:	b	1c2b0 <flatcc_json_printer_double_vector_field@@Base+0x1d4>
   1c2b0:	ldr	r0, [sp, #12]
   1c2b4:	bl	18b20 <flatcc_json_printer_double_field@@Base+0x104>
   1c2b8:	ldr	r0, [fp, #-4]
   1c2bc:	ldr	r0, [r0, #20]
   1c2c0:	bl	14e50 <flatcc_json_printer_fmt_float@@Base+0x2c>
   1c2c4:	ldr	lr, [fp, #-4]
   1c2c8:	ldr	r1, [lr, #20]
   1c2cc:	add	r0, r1, r0
   1c2d0:	str	r0, [lr, #20]
   1c2d4:	ldr	r0, [sp, #12]
   1c2d8:	add	r0, r0, #8
   1c2dc:	str	r0, [sp, #12]
   1c2e0:	b	1c240 <flatcc_json_printer_double_vector_field@@Base+0x164>
   1c2e4:	b	1c2e8 <flatcc_json_printer_double_vector_field@@Base+0x20c>
   1c2e8:	ldr	r0, [fp, #-4]
   1c2ec:	ldrsb	r0, [r0, #25]
   1c2f0:	cmp	r0, #0
   1c2f4:	beq	1c32c <flatcc_json_printer_double_vector_field@@Base+0x250>
   1c2f8:	ldr	r0, [fp, #-4]
   1c2fc:	ldr	r1, [r0, #20]
   1c300:	add	r2, r1, #1
   1c304:	str	r2, [r0, #20]
   1c308:	movw	r0, #10
   1c30c:	strb	r0, [r1]
   1c310:	ldr	r0, [fp, #-4]
   1c314:	ldr	r1, [r0, #32]
   1c318:	mvn	r2, #0
   1c31c:	add	r1, r1, r2
   1c320:	str	r1, [r0, #32]
   1c324:	ldr	r0, [fp, #-4]
   1c328:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1c32c:	ldr	r0, [fp, #-4]
   1c330:	ldr	r1, [r0, #20]
   1c334:	add	r2, r1, #1
   1c338:	str	r2, [r0, #20]
   1c33c:	movw	r0, #93	; 0x5d
   1c340:	strb	r0, [r1]
   1c344:	b	1c348 <flatcc_json_printer_double_vector_field@@Base+0x26c>
   1c348:	mov	sp, fp
   1c34c:	pop	{fp, pc}

0001c350 <flatcc_json_printer_utype_enum_vector_field@@Base>:
   1c350:	push	{fp, lr}
   1c354:	mov	fp, sp
   1c358:	sub	sp, sp, #64	; 0x40
   1c35c:	ldr	ip, [fp, #12]
   1c360:	ldr	lr, [fp, #8]
   1c364:	str	r0, [fp, #-4]
   1c368:	str	r1, [fp, #-8]
   1c36c:	str	r2, [fp, #-12]
   1c370:	str	r3, [fp, #-16]
   1c374:	ldr	r0, [fp, #-4]
   1c378:	ldrsb	r0, [r0, #27]
   1c37c:	cmp	r0, #0
   1c380:	str	lr, [fp, #-28]	; 0xffffffe4
   1c384:	str	ip, [sp, #32]
   1c388:	beq	1c3ac <flatcc_json_printer_utype_enum_vector_field@@Base+0x5c>
   1c38c:	ldr	r0, [fp, #-4]
   1c390:	ldr	r1, [fp, #-8]
   1c394:	ldr	r2, [fp, #-12]
   1c398:	ldr	r3, [fp, #-16]
   1c39c:	ldr	ip, [fp, #8]
   1c3a0:	str	ip, [sp]
   1c3a4:	bl	1a55c <flatcc_json_printer_utype_vector_field@@Base>
   1c3a8:	b	1c61c <flatcc_json_printer_utype_enum_vector_field@@Base+0x2cc>
   1c3ac:	ldr	r0, [fp, #-8]
   1c3b0:	ldr	r1, [fp, #-12]
   1c3b4:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   1c3b8:	str	r0, [fp, #-20]	; 0xffffffec
   1c3bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c3c0:	movw	r1, #0
   1c3c4:	cmp	r0, r1
   1c3c8:	beq	1c61c <flatcc_json_printer_utype_enum_vector_field@@Base+0x2cc>
   1c3cc:	ldr	r0, [fp, #-8]
   1c3d0:	ldr	r1, [r0, #16]
   1c3d4:	add	r2, r1, #1
   1c3d8:	str	r2, [r0, #16]
   1c3dc:	cmp	r1, #0
   1c3e0:	beq	1c3fc <flatcc_json_printer_utype_enum_vector_field@@Base+0xac>
   1c3e4:	ldr	r0, [fp, #-4]
   1c3e8:	ldr	r1, [r0, #20]
   1c3ec:	add	r2, r1, #1
   1c3f0:	str	r2, [r0, #20]
   1c3f4:	movw	r0, #44	; 0x2c
   1c3f8:	strb	r0, [r1]
   1c3fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c400:	bl	179d4 <flatcc_json_printer_string_field@@Base+0x258>
   1c404:	str	r0, [fp, #-20]	; 0xffffffec
   1c408:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c40c:	bl	1a7d8 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   1c410:	str	r0, [fp, #-24]	; 0xffffffe8
   1c414:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c418:	add	r0, r0, #4
   1c41c:	str	r0, [fp, #-20]	; 0xffffffec
   1c420:	ldr	r0, [fp, #-4]
   1c424:	ldr	r1, [fp, #-16]
   1c428:	ldr	r2, [fp, #8]
   1c42c:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   1c430:	ldr	r0, [fp, #-4]
   1c434:	ldr	r1, [r0, #32]
   1c438:	add	r1, r1, #1
   1c43c:	str	r1, [r0, #32]
   1c440:	ldr	r0, [fp, #-4]
   1c444:	ldr	r1, [r0, #20]
   1c448:	add	r2, r1, #1
   1c44c:	str	r2, [r0, #20]
   1c450:	movw	r0, #91	; 0x5b
   1c454:	strb	r0, [r1]
   1c458:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c45c:	cmp	r0, #0
   1c460:	beq	1c4fc <flatcc_json_printer_utype_enum_vector_field@@Base+0x1ac>
   1c464:	b	1c468 <flatcc_json_printer_utype_enum_vector_field@@Base+0x118>
   1c468:	ldr	r0, [fp, #-4]
   1c46c:	ldrsb	r0, [r0, #25]
   1c470:	cmp	r0, #0
   1c474:	beq	1c49c <flatcc_json_printer_utype_enum_vector_field@@Base+0x14c>
   1c478:	ldr	r0, [fp, #-4]
   1c47c:	ldr	r1, [r0, #20]
   1c480:	add	r2, r1, #1
   1c484:	str	r2, [r0, #20]
   1c488:	movw	r0, #10
   1c48c:	strb	r0, [r1]
   1c490:	ldr	r0, [fp, #-4]
   1c494:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1c498:	b	1c4a4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x154>
   1c49c:	ldr	r0, [fp, #-4]
   1c4a0:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1c4a4:	b	1c4a8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x158>
   1c4a8:	ldr	r0, [fp, #12]
   1c4ac:	ldr	r1, [fp, #-4]
   1c4b0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1c4b4:	str	r0, [sp, #28]
   1c4b8:	mov	r0, r2
   1c4bc:	str	r1, [sp, #24]
   1c4c0:	bl	1a7fc <flatcc_json_printer_utype_vector_field@@Base+0x2a0>
   1c4c4:	ldr	r1, [sp, #24]
   1c4c8:	str	r0, [sp, #20]
   1c4cc:	mov	r0, r1
   1c4d0:	ldr	r2, [sp, #20]
   1c4d4:	and	r1, r2, #255	; 0xff
   1c4d8:	ldr	lr, [sp, #28]
   1c4dc:	blx	lr
   1c4e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c4e4:	add	r0, r0, #1
   1c4e8:	str	r0, [fp, #-20]	; 0xffffffec
   1c4ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c4f0:	mvn	r1, #0
   1c4f4:	add	r0, r0, r1
   1c4f8:	str	r0, [fp, #-24]	; 0xffffffe8
   1c4fc:	b	1c500 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1b0>
   1c500:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c504:	mvn	r1, #0
   1c508:	add	r1, r0, r1
   1c50c:	str	r1, [fp, #-24]	; 0xffffffe8
   1c510:	cmp	r0, #0
   1c514:	beq	1c5b8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x268>
   1c518:	ldr	r0, [fp, #-4]
   1c51c:	ldr	r1, [r0, #20]
   1c520:	add	r2, r1, #1
   1c524:	str	r2, [r0, #20]
   1c528:	movw	r0, #44	; 0x2c
   1c52c:	strb	r0, [r1]
   1c530:	ldr	r0, [fp, #-4]
   1c534:	ldrsb	r0, [r0, #25]
   1c538:	cmp	r0, #0
   1c53c:	beq	1c564 <flatcc_json_printer_utype_enum_vector_field@@Base+0x214>
   1c540:	ldr	r0, [fp, #-4]
   1c544:	ldr	r1, [r0, #20]
   1c548:	add	r2, r1, #1
   1c54c:	str	r2, [r0, #20]
   1c550:	movw	r0, #10
   1c554:	strb	r0, [r1]
   1c558:	ldr	r0, [fp, #-4]
   1c55c:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1c560:	b	1c56c <flatcc_json_printer_utype_enum_vector_field@@Base+0x21c>
   1c564:	ldr	r0, [fp, #-4]
   1c568:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1c56c:	b	1c570 <flatcc_json_printer_utype_enum_vector_field@@Base+0x220>
   1c570:	ldr	r0, [fp, #12]
   1c574:	ldr	r1, [fp, #-4]
   1c578:	ldr	r2, [fp, #-20]	; 0xffffffec
   1c57c:	str	r0, [sp, #16]
   1c580:	mov	r0, r2
   1c584:	str	r1, [sp, #12]
   1c588:	bl	1a7fc <flatcc_json_printer_utype_vector_field@@Base+0x2a0>
   1c58c:	ldr	r1, [sp, #12]
   1c590:	str	r0, [sp, #8]
   1c594:	mov	r0, r1
   1c598:	ldr	r2, [sp, #8]
   1c59c:	and	r1, r2, #255	; 0xff
   1c5a0:	ldr	lr, [sp, #16]
   1c5a4:	blx	lr
   1c5a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c5ac:	add	r0, r0, #1
   1c5b0:	str	r0, [fp, #-20]	; 0xffffffec
   1c5b4:	b	1c500 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1b0>
   1c5b8:	b	1c5bc <flatcc_json_printer_utype_enum_vector_field@@Base+0x26c>
   1c5bc:	ldr	r0, [fp, #-4]
   1c5c0:	ldrsb	r0, [r0, #25]
   1c5c4:	cmp	r0, #0
   1c5c8:	beq	1c600 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2b0>
   1c5cc:	ldr	r0, [fp, #-4]
   1c5d0:	ldr	r1, [r0, #20]
   1c5d4:	add	r2, r1, #1
   1c5d8:	str	r2, [r0, #20]
   1c5dc:	movw	r0, #10
   1c5e0:	strb	r0, [r1]
   1c5e4:	ldr	r0, [fp, #-4]
   1c5e8:	ldr	r1, [r0, #32]
   1c5ec:	mvn	r2, #0
   1c5f0:	add	r1, r1, r2
   1c5f4:	str	r1, [r0, #32]
   1c5f8:	ldr	r0, [fp, #-4]
   1c5fc:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1c600:	ldr	r0, [fp, #-4]
   1c604:	ldr	r1, [r0, #20]
   1c608:	add	r2, r1, #1
   1c60c:	str	r2, [r0, #20]
   1c610:	movw	r0, #93	; 0x5d
   1c614:	strb	r0, [r1]
   1c618:	b	1c61c <flatcc_json_printer_utype_enum_vector_field@@Base+0x2cc>
   1c61c:	mov	sp, fp
   1c620:	pop	{fp, pc}

0001c624 <flatcc_json_printer_uint8_enum_vector_field@@Base>:
   1c624:	push	{fp, lr}
   1c628:	mov	fp, sp
   1c62c:	sub	sp, sp, #64	; 0x40
   1c630:	ldr	ip, [fp, #12]
   1c634:	ldr	lr, [fp, #8]
   1c638:	str	r0, [fp, #-4]
   1c63c:	str	r1, [fp, #-8]
   1c640:	str	r2, [fp, #-12]
   1c644:	str	r3, [fp, #-16]
   1c648:	ldr	r0, [fp, #-4]
   1c64c:	ldrsb	r0, [r0, #27]
   1c650:	cmp	r0, #0
   1c654:	str	lr, [fp, #-28]	; 0xffffffe4
   1c658:	str	ip, [sp, #32]
   1c65c:	beq	1c680 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x5c>
   1c660:	ldr	r0, [fp, #-4]
   1c664:	ldr	r1, [fp, #-8]
   1c668:	ldr	r2, [fp, #-12]
   1c66c:	ldr	r3, [fp, #-16]
   1c670:	ldr	ip, [fp, #8]
   1c674:	str	ip, [sp]
   1c678:	bl	1a824 <flatcc_json_printer_uint8_vector_field@@Base>
   1c67c:	b	1c8f0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2cc>
   1c680:	ldr	r0, [fp, #-8]
   1c684:	ldr	r1, [fp, #-12]
   1c688:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   1c68c:	str	r0, [fp, #-20]	; 0xffffffec
   1c690:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c694:	movw	r1, #0
   1c698:	cmp	r0, r1
   1c69c:	beq	1c8f0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2cc>
   1c6a0:	ldr	r0, [fp, #-8]
   1c6a4:	ldr	r1, [r0, #16]
   1c6a8:	add	r2, r1, #1
   1c6ac:	str	r2, [r0, #16]
   1c6b0:	cmp	r1, #0
   1c6b4:	beq	1c6d0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0xac>
   1c6b8:	ldr	r0, [fp, #-4]
   1c6bc:	ldr	r1, [r0, #20]
   1c6c0:	add	r2, r1, #1
   1c6c4:	str	r2, [r0, #20]
   1c6c8:	movw	r0, #44	; 0x2c
   1c6cc:	strb	r0, [r1]
   1c6d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c6d4:	bl	179d4 <flatcc_json_printer_string_field@@Base+0x258>
   1c6d8:	str	r0, [fp, #-20]	; 0xffffffec
   1c6dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c6e0:	bl	1a7d8 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   1c6e4:	str	r0, [fp, #-24]	; 0xffffffe8
   1c6e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c6ec:	add	r0, r0, #4
   1c6f0:	str	r0, [fp, #-20]	; 0xffffffec
   1c6f4:	ldr	r0, [fp, #-4]
   1c6f8:	ldr	r1, [fp, #-16]
   1c6fc:	ldr	r2, [fp, #8]
   1c700:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   1c704:	ldr	r0, [fp, #-4]
   1c708:	ldr	r1, [r0, #32]
   1c70c:	add	r1, r1, #1
   1c710:	str	r1, [r0, #32]
   1c714:	ldr	r0, [fp, #-4]
   1c718:	ldr	r1, [r0, #20]
   1c71c:	add	r2, r1, #1
   1c720:	str	r2, [r0, #20]
   1c724:	movw	r0, #91	; 0x5b
   1c728:	strb	r0, [r1]
   1c72c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c730:	cmp	r0, #0
   1c734:	beq	1c7d0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1ac>
   1c738:	b	1c73c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x118>
   1c73c:	ldr	r0, [fp, #-4]
   1c740:	ldrsb	r0, [r0, #25]
   1c744:	cmp	r0, #0
   1c748:	beq	1c770 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x14c>
   1c74c:	ldr	r0, [fp, #-4]
   1c750:	ldr	r1, [r0, #20]
   1c754:	add	r2, r1, #1
   1c758:	str	r2, [r0, #20]
   1c75c:	movw	r0, #10
   1c760:	strb	r0, [r1]
   1c764:	ldr	r0, [fp, #-4]
   1c768:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1c76c:	b	1c778 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x154>
   1c770:	ldr	r0, [fp, #-4]
   1c774:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1c778:	b	1c77c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x158>
   1c77c:	ldr	r0, [fp, #12]
   1c780:	ldr	r1, [fp, #-4]
   1c784:	ldr	r2, [fp, #-20]	; 0xffffffec
   1c788:	str	r0, [sp, #28]
   1c78c:	mov	r0, r2
   1c790:	str	r1, [sp, #24]
   1c794:	bl	17e3c <flatcc_json_printer_uint8_field@@Base+0x108>
   1c798:	ldr	r1, [sp, #24]
   1c79c:	str	r0, [sp, #20]
   1c7a0:	mov	r0, r1
   1c7a4:	ldr	r2, [sp, #20]
   1c7a8:	and	r1, r2, #255	; 0xff
   1c7ac:	ldr	lr, [sp, #28]
   1c7b0:	blx	lr
   1c7b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c7b8:	add	r0, r0, #1
   1c7bc:	str	r0, [fp, #-20]	; 0xffffffec
   1c7c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c7c4:	mvn	r1, #0
   1c7c8:	add	r0, r0, r1
   1c7cc:	str	r0, [fp, #-24]	; 0xffffffe8
   1c7d0:	b	1c7d4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1b0>
   1c7d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c7d8:	mvn	r1, #0
   1c7dc:	add	r1, r0, r1
   1c7e0:	str	r1, [fp, #-24]	; 0xffffffe8
   1c7e4:	cmp	r0, #0
   1c7e8:	beq	1c88c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x268>
   1c7ec:	ldr	r0, [fp, #-4]
   1c7f0:	ldr	r1, [r0, #20]
   1c7f4:	add	r2, r1, #1
   1c7f8:	str	r2, [r0, #20]
   1c7fc:	movw	r0, #44	; 0x2c
   1c800:	strb	r0, [r1]
   1c804:	ldr	r0, [fp, #-4]
   1c808:	ldrsb	r0, [r0, #25]
   1c80c:	cmp	r0, #0
   1c810:	beq	1c838 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x214>
   1c814:	ldr	r0, [fp, #-4]
   1c818:	ldr	r1, [r0, #20]
   1c81c:	add	r2, r1, #1
   1c820:	str	r2, [r0, #20]
   1c824:	movw	r0, #10
   1c828:	strb	r0, [r1]
   1c82c:	ldr	r0, [fp, #-4]
   1c830:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1c834:	b	1c840 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x21c>
   1c838:	ldr	r0, [fp, #-4]
   1c83c:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1c840:	b	1c844 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x220>
   1c844:	ldr	r0, [fp, #12]
   1c848:	ldr	r1, [fp, #-4]
   1c84c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1c850:	str	r0, [sp, #16]
   1c854:	mov	r0, r2
   1c858:	str	r1, [sp, #12]
   1c85c:	bl	17e3c <flatcc_json_printer_uint8_field@@Base+0x108>
   1c860:	ldr	r1, [sp, #12]
   1c864:	str	r0, [sp, #8]
   1c868:	mov	r0, r1
   1c86c:	ldr	r2, [sp, #8]
   1c870:	and	r1, r2, #255	; 0xff
   1c874:	ldr	lr, [sp, #16]
   1c878:	blx	lr
   1c87c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c880:	add	r0, r0, #1
   1c884:	str	r0, [fp, #-20]	; 0xffffffec
   1c888:	b	1c7d4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1b0>
   1c88c:	b	1c890 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x26c>
   1c890:	ldr	r0, [fp, #-4]
   1c894:	ldrsb	r0, [r0, #25]
   1c898:	cmp	r0, #0
   1c89c:	beq	1c8d4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2b0>
   1c8a0:	ldr	r0, [fp, #-4]
   1c8a4:	ldr	r1, [r0, #20]
   1c8a8:	add	r2, r1, #1
   1c8ac:	str	r2, [r0, #20]
   1c8b0:	movw	r0, #10
   1c8b4:	strb	r0, [r1]
   1c8b8:	ldr	r0, [fp, #-4]
   1c8bc:	ldr	r1, [r0, #32]
   1c8c0:	mvn	r2, #0
   1c8c4:	add	r1, r1, r2
   1c8c8:	str	r1, [r0, #32]
   1c8cc:	ldr	r0, [fp, #-4]
   1c8d0:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1c8d4:	ldr	r0, [fp, #-4]
   1c8d8:	ldr	r1, [r0, #20]
   1c8dc:	add	r2, r1, #1
   1c8e0:	str	r2, [r0, #20]
   1c8e4:	movw	r0, #93	; 0x5d
   1c8e8:	strb	r0, [r1]
   1c8ec:	b	1c8f0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2cc>
   1c8f0:	mov	sp, fp
   1c8f4:	pop	{fp, pc}

0001c8f8 <flatcc_json_printer_uint16_enum_vector_field@@Base>:
   1c8f8:	push	{fp, lr}
   1c8fc:	mov	fp, sp
   1c900:	sub	sp, sp, #64	; 0x40
   1c904:	ldr	ip, [fp, #12]
   1c908:	ldr	lr, [fp, #8]
   1c90c:	str	r0, [fp, #-4]
   1c910:	str	r1, [fp, #-8]
   1c914:	str	r2, [fp, #-12]
   1c918:	str	r3, [fp, #-16]
   1c91c:	ldr	r0, [fp, #-4]
   1c920:	ldrsb	r0, [r0, #27]
   1c924:	cmp	r0, #0
   1c928:	str	lr, [fp, #-28]	; 0xffffffe4
   1c92c:	str	ip, [sp, #32]
   1c930:	beq	1c954 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x5c>
   1c934:	ldr	r0, [fp, #-4]
   1c938:	ldr	r1, [fp, #-8]
   1c93c:	ldr	r2, [fp, #-12]
   1c940:	ldr	r3, [fp, #-16]
   1c944:	ldr	ip, [fp, #8]
   1c948:	str	ip, [sp]
   1c94c:	bl	1aaa0 <flatcc_json_printer_uint16_vector_field@@Base>
   1c950:	b	1cbc4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2cc>
   1c954:	ldr	r0, [fp, #-8]
   1c958:	ldr	r1, [fp, #-12]
   1c95c:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   1c960:	str	r0, [fp, #-20]	; 0xffffffec
   1c964:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c968:	movw	r1, #0
   1c96c:	cmp	r0, r1
   1c970:	beq	1cbc4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2cc>
   1c974:	ldr	r0, [fp, #-8]
   1c978:	ldr	r1, [r0, #16]
   1c97c:	add	r2, r1, #1
   1c980:	str	r2, [r0, #16]
   1c984:	cmp	r1, #0
   1c988:	beq	1c9a4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0xac>
   1c98c:	ldr	r0, [fp, #-4]
   1c990:	ldr	r1, [r0, #20]
   1c994:	add	r2, r1, #1
   1c998:	str	r2, [r0, #20]
   1c99c:	movw	r0, #44	; 0x2c
   1c9a0:	strb	r0, [r1]
   1c9a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c9a8:	bl	179d4 <flatcc_json_printer_string_field@@Base+0x258>
   1c9ac:	str	r0, [fp, #-20]	; 0xffffffec
   1c9b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c9b4:	bl	1a7d8 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   1c9b8:	str	r0, [fp, #-24]	; 0xffffffe8
   1c9bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c9c0:	add	r0, r0, #4
   1c9c4:	str	r0, [fp, #-20]	; 0xffffffec
   1c9c8:	ldr	r0, [fp, #-4]
   1c9cc:	ldr	r1, [fp, #-16]
   1c9d0:	ldr	r2, [fp, #8]
   1c9d4:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   1c9d8:	ldr	r0, [fp, #-4]
   1c9dc:	ldr	r1, [r0, #32]
   1c9e0:	add	r1, r1, #1
   1c9e4:	str	r1, [r0, #32]
   1c9e8:	ldr	r0, [fp, #-4]
   1c9ec:	ldr	r1, [r0, #20]
   1c9f0:	add	r2, r1, #1
   1c9f4:	str	r2, [r0, #20]
   1c9f8:	movw	r0, #91	; 0x5b
   1c9fc:	strb	r0, [r1]
   1ca00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ca04:	cmp	r0, #0
   1ca08:	beq	1caa4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1ac>
   1ca0c:	b	1ca10 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x118>
   1ca10:	ldr	r0, [fp, #-4]
   1ca14:	ldrsb	r0, [r0, #25]
   1ca18:	cmp	r0, #0
   1ca1c:	beq	1ca44 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x14c>
   1ca20:	ldr	r0, [fp, #-4]
   1ca24:	ldr	r1, [r0, #20]
   1ca28:	add	r2, r1, #1
   1ca2c:	str	r2, [r0, #20]
   1ca30:	movw	r0, #10
   1ca34:	strb	r0, [r1]
   1ca38:	ldr	r0, [fp, #-4]
   1ca3c:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1ca40:	b	1ca4c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x154>
   1ca44:	ldr	r0, [fp, #-4]
   1ca48:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1ca4c:	b	1ca50 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x158>
   1ca50:	ldr	r0, [fp, #12]
   1ca54:	ldr	r1, [fp, #-4]
   1ca58:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ca5c:	str	r0, [sp, #28]
   1ca60:	mov	r0, r2
   1ca64:	str	r1, [sp, #24]
   1ca68:	bl	17f6c <flatcc_json_printer_uint16_field@@Base+0x108>
   1ca6c:	ldr	r1, [sp, #24]
   1ca70:	str	r0, [sp, #20]
   1ca74:	mov	r0, r1
   1ca78:	ldr	r2, [sp, #20]
   1ca7c:	uxth	r1, r2
   1ca80:	ldr	lr, [sp, #28]
   1ca84:	blx	lr
   1ca88:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ca8c:	add	r0, r0, #2
   1ca90:	str	r0, [fp, #-20]	; 0xffffffec
   1ca94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ca98:	mvn	r1, #0
   1ca9c:	add	r0, r0, r1
   1caa0:	str	r0, [fp, #-24]	; 0xffffffe8
   1caa4:	b	1caa8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1b0>
   1caa8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1caac:	mvn	r1, #0
   1cab0:	add	r1, r0, r1
   1cab4:	str	r1, [fp, #-24]	; 0xffffffe8
   1cab8:	cmp	r0, #0
   1cabc:	beq	1cb60 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x268>
   1cac0:	ldr	r0, [fp, #-4]
   1cac4:	ldr	r1, [r0, #20]
   1cac8:	add	r2, r1, #1
   1cacc:	str	r2, [r0, #20]
   1cad0:	movw	r0, #44	; 0x2c
   1cad4:	strb	r0, [r1]
   1cad8:	ldr	r0, [fp, #-4]
   1cadc:	ldrsb	r0, [r0, #25]
   1cae0:	cmp	r0, #0
   1cae4:	beq	1cb0c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x214>
   1cae8:	ldr	r0, [fp, #-4]
   1caec:	ldr	r1, [r0, #20]
   1caf0:	add	r2, r1, #1
   1caf4:	str	r2, [r0, #20]
   1caf8:	movw	r0, #10
   1cafc:	strb	r0, [r1]
   1cb00:	ldr	r0, [fp, #-4]
   1cb04:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1cb08:	b	1cb14 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x21c>
   1cb0c:	ldr	r0, [fp, #-4]
   1cb10:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1cb14:	b	1cb18 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x220>
   1cb18:	ldr	r0, [fp, #12]
   1cb1c:	ldr	r1, [fp, #-4]
   1cb20:	ldr	r2, [fp, #-20]	; 0xffffffec
   1cb24:	str	r0, [sp, #16]
   1cb28:	mov	r0, r2
   1cb2c:	str	r1, [sp, #12]
   1cb30:	bl	17f6c <flatcc_json_printer_uint16_field@@Base+0x108>
   1cb34:	ldr	r1, [sp, #12]
   1cb38:	str	r0, [sp, #8]
   1cb3c:	mov	r0, r1
   1cb40:	ldr	r2, [sp, #8]
   1cb44:	uxth	r1, r2
   1cb48:	ldr	lr, [sp, #16]
   1cb4c:	blx	lr
   1cb50:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cb54:	add	r0, r0, #2
   1cb58:	str	r0, [fp, #-20]	; 0xffffffec
   1cb5c:	b	1caa8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1b0>
   1cb60:	b	1cb64 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x26c>
   1cb64:	ldr	r0, [fp, #-4]
   1cb68:	ldrsb	r0, [r0, #25]
   1cb6c:	cmp	r0, #0
   1cb70:	beq	1cba8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2b0>
   1cb74:	ldr	r0, [fp, #-4]
   1cb78:	ldr	r1, [r0, #20]
   1cb7c:	add	r2, r1, #1
   1cb80:	str	r2, [r0, #20]
   1cb84:	movw	r0, #10
   1cb88:	strb	r0, [r1]
   1cb8c:	ldr	r0, [fp, #-4]
   1cb90:	ldr	r1, [r0, #32]
   1cb94:	mvn	r2, #0
   1cb98:	add	r1, r1, r2
   1cb9c:	str	r1, [r0, #32]
   1cba0:	ldr	r0, [fp, #-4]
   1cba4:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1cba8:	ldr	r0, [fp, #-4]
   1cbac:	ldr	r1, [r0, #20]
   1cbb0:	add	r2, r1, #1
   1cbb4:	str	r2, [r0, #20]
   1cbb8:	movw	r0, #93	; 0x5d
   1cbbc:	strb	r0, [r1]
   1cbc0:	b	1cbc4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2cc>
   1cbc4:	mov	sp, fp
   1cbc8:	pop	{fp, pc}

0001cbcc <flatcc_json_printer_uint32_enum_vector_field@@Base>:
   1cbcc:	push	{fp, lr}
   1cbd0:	mov	fp, sp
   1cbd4:	sub	sp, sp, #64	; 0x40
   1cbd8:	ldr	ip, [fp, #12]
   1cbdc:	ldr	lr, [fp, #8]
   1cbe0:	str	r0, [fp, #-4]
   1cbe4:	str	r1, [fp, #-8]
   1cbe8:	str	r2, [fp, #-12]
   1cbec:	str	r3, [fp, #-16]
   1cbf0:	ldr	r0, [fp, #-4]
   1cbf4:	ldrsb	r0, [r0, #27]
   1cbf8:	cmp	r0, #0
   1cbfc:	str	lr, [fp, #-28]	; 0xffffffe4
   1cc00:	str	ip, [sp, #32]
   1cc04:	beq	1cc28 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x5c>
   1cc08:	ldr	r0, [fp, #-4]
   1cc0c:	ldr	r1, [fp, #-8]
   1cc10:	ldr	r2, [fp, #-12]
   1cc14:	ldr	r3, [fp, #-16]
   1cc18:	ldr	ip, [fp, #8]
   1cc1c:	str	ip, [sp]
   1cc20:	bl	1ad1c <flatcc_json_printer_uint32_vector_field@@Base>
   1cc24:	b	1ce90 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c4>
   1cc28:	ldr	r0, [fp, #-8]
   1cc2c:	ldr	r1, [fp, #-12]
   1cc30:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   1cc34:	str	r0, [fp, #-20]	; 0xffffffec
   1cc38:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cc3c:	movw	r1, #0
   1cc40:	cmp	r0, r1
   1cc44:	beq	1ce90 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c4>
   1cc48:	ldr	r0, [fp, #-8]
   1cc4c:	ldr	r1, [r0, #16]
   1cc50:	add	r2, r1, #1
   1cc54:	str	r2, [r0, #16]
   1cc58:	cmp	r1, #0
   1cc5c:	beq	1cc78 <flatcc_json_printer_uint32_enum_vector_field@@Base+0xac>
   1cc60:	ldr	r0, [fp, #-4]
   1cc64:	ldr	r1, [r0, #20]
   1cc68:	add	r2, r1, #1
   1cc6c:	str	r2, [r0, #20]
   1cc70:	movw	r0, #44	; 0x2c
   1cc74:	strb	r0, [r1]
   1cc78:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cc7c:	bl	179d4 <flatcc_json_printer_string_field@@Base+0x258>
   1cc80:	str	r0, [fp, #-20]	; 0xffffffec
   1cc84:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cc88:	bl	1a7d8 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   1cc8c:	str	r0, [fp, #-24]	; 0xffffffe8
   1cc90:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cc94:	add	r0, r0, #4
   1cc98:	str	r0, [fp, #-20]	; 0xffffffec
   1cc9c:	ldr	r0, [fp, #-4]
   1cca0:	ldr	r1, [fp, #-16]
   1cca4:	ldr	r2, [fp, #8]
   1cca8:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   1ccac:	ldr	r0, [fp, #-4]
   1ccb0:	ldr	r1, [r0, #32]
   1ccb4:	add	r1, r1, #1
   1ccb8:	str	r1, [r0, #32]
   1ccbc:	ldr	r0, [fp, #-4]
   1ccc0:	ldr	r1, [r0, #20]
   1ccc4:	add	r2, r1, #1
   1ccc8:	str	r2, [r0, #20]
   1cccc:	movw	r0, #91	; 0x5b
   1ccd0:	strb	r0, [r1]
   1ccd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ccd8:	cmp	r0, #0
   1ccdc:	beq	1cd74 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1a8>
   1cce0:	b	1cce4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x118>
   1cce4:	ldr	r0, [fp, #-4]
   1cce8:	ldrsb	r0, [r0, #25]
   1ccec:	cmp	r0, #0
   1ccf0:	beq	1cd18 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x14c>
   1ccf4:	ldr	r0, [fp, #-4]
   1ccf8:	ldr	r1, [r0, #20]
   1ccfc:	add	r2, r1, #1
   1cd00:	str	r2, [r0, #20]
   1cd04:	movw	r0, #10
   1cd08:	strb	r0, [r1]
   1cd0c:	ldr	r0, [fp, #-4]
   1cd10:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1cd14:	b	1cd20 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x154>
   1cd18:	ldr	r0, [fp, #-4]
   1cd1c:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1cd20:	b	1cd24 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x158>
   1cd24:	ldr	r0, [fp, #12]
   1cd28:	ldr	r1, [fp, #-4]
   1cd2c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1cd30:	str	r0, [sp, #28]
   1cd34:	mov	r0, r2
   1cd38:	str	r1, [sp, #24]
   1cd3c:	bl	18098 <flatcc_json_printer_uint32_field@@Base+0x104>
   1cd40:	ldr	r1, [sp, #24]
   1cd44:	str	r0, [sp, #20]
   1cd48:	mov	r0, r1
   1cd4c:	ldr	r1, [sp, #20]
   1cd50:	ldr	r2, [sp, #28]
   1cd54:	blx	r2
   1cd58:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cd5c:	add	r0, r0, #4
   1cd60:	str	r0, [fp, #-20]	; 0xffffffec
   1cd64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cd68:	mvn	r1, #0
   1cd6c:	add	r0, r0, r1
   1cd70:	str	r0, [fp, #-24]	; 0xffffffe8
   1cd74:	b	1cd78 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1ac>
   1cd78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cd7c:	mvn	r1, #0
   1cd80:	add	r1, r0, r1
   1cd84:	str	r1, [fp, #-24]	; 0xffffffe8
   1cd88:	cmp	r0, #0
   1cd8c:	beq	1ce2c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x260>
   1cd90:	ldr	r0, [fp, #-4]
   1cd94:	ldr	r1, [r0, #20]
   1cd98:	add	r2, r1, #1
   1cd9c:	str	r2, [r0, #20]
   1cda0:	movw	r0, #44	; 0x2c
   1cda4:	strb	r0, [r1]
   1cda8:	ldr	r0, [fp, #-4]
   1cdac:	ldrsb	r0, [r0, #25]
   1cdb0:	cmp	r0, #0
   1cdb4:	beq	1cddc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x210>
   1cdb8:	ldr	r0, [fp, #-4]
   1cdbc:	ldr	r1, [r0, #20]
   1cdc0:	add	r2, r1, #1
   1cdc4:	str	r2, [r0, #20]
   1cdc8:	movw	r0, #10
   1cdcc:	strb	r0, [r1]
   1cdd0:	ldr	r0, [fp, #-4]
   1cdd4:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1cdd8:	b	1cde4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x218>
   1cddc:	ldr	r0, [fp, #-4]
   1cde0:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1cde4:	b	1cde8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x21c>
   1cde8:	ldr	r0, [fp, #12]
   1cdec:	ldr	r1, [fp, #-4]
   1cdf0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1cdf4:	str	r0, [sp, #16]
   1cdf8:	mov	r0, r2
   1cdfc:	str	r1, [sp, #12]
   1ce00:	bl	18098 <flatcc_json_printer_uint32_field@@Base+0x104>
   1ce04:	ldr	r1, [sp, #12]
   1ce08:	str	r0, [sp, #8]
   1ce0c:	mov	r0, r1
   1ce10:	ldr	r1, [sp, #8]
   1ce14:	ldr	r2, [sp, #16]
   1ce18:	blx	r2
   1ce1c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ce20:	add	r0, r0, #4
   1ce24:	str	r0, [fp, #-20]	; 0xffffffec
   1ce28:	b	1cd78 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1ac>
   1ce2c:	b	1ce30 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x264>
   1ce30:	ldr	r0, [fp, #-4]
   1ce34:	ldrsb	r0, [r0, #25]
   1ce38:	cmp	r0, #0
   1ce3c:	beq	1ce74 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2a8>
   1ce40:	ldr	r0, [fp, #-4]
   1ce44:	ldr	r1, [r0, #20]
   1ce48:	add	r2, r1, #1
   1ce4c:	str	r2, [r0, #20]
   1ce50:	movw	r0, #10
   1ce54:	strb	r0, [r1]
   1ce58:	ldr	r0, [fp, #-4]
   1ce5c:	ldr	r1, [r0, #32]
   1ce60:	mvn	r2, #0
   1ce64:	add	r1, r1, r2
   1ce68:	str	r1, [r0, #32]
   1ce6c:	ldr	r0, [fp, #-4]
   1ce70:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1ce74:	ldr	r0, [fp, #-4]
   1ce78:	ldr	r1, [r0, #20]
   1ce7c:	add	r2, r1, #1
   1ce80:	str	r2, [r0, #20]
   1ce84:	movw	r0, #93	; 0x5d
   1ce88:	strb	r0, [r1]
   1ce8c:	b	1ce90 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c4>
   1ce90:	mov	sp, fp
   1ce94:	pop	{fp, pc}

0001ce98 <flatcc_json_printer_uint64_enum_vector_field@@Base>:
   1ce98:	push	{fp, lr}
   1ce9c:	mov	fp, sp
   1cea0:	sub	sp, sp, #64	; 0x40
   1cea4:	ldr	ip, [fp, #12]
   1cea8:	ldr	lr, [fp, #8]
   1ceac:	str	r0, [fp, #-4]
   1ceb0:	str	r1, [fp, #-8]
   1ceb4:	str	r2, [fp, #-12]
   1ceb8:	str	r3, [fp, #-16]
   1cebc:	ldr	r0, [fp, #-4]
   1cec0:	ldrsb	r0, [r0, #27]
   1cec4:	cmp	r0, #0
   1cec8:	str	lr, [fp, #-28]	; 0xffffffe4
   1cecc:	str	ip, [sp, #32]
   1ced0:	beq	1cef4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x5c>
   1ced4:	ldr	r0, [fp, #-4]
   1ced8:	ldr	r1, [fp, #-8]
   1cedc:	ldr	r2, [fp, #-12]
   1cee0:	ldr	r3, [fp, #-16]
   1cee4:	ldr	ip, [fp, #8]
   1cee8:	str	ip, [sp]
   1ceec:	bl	1af90 <flatcc_json_printer_uint64_vector_field@@Base>
   1cef0:	b	1d164 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2cc>
   1cef4:	ldr	r0, [fp, #-8]
   1cef8:	ldr	r1, [fp, #-12]
   1cefc:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   1cf00:	str	r0, [fp, #-20]	; 0xffffffec
   1cf04:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cf08:	movw	r1, #0
   1cf0c:	cmp	r0, r1
   1cf10:	beq	1d164 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2cc>
   1cf14:	ldr	r0, [fp, #-8]
   1cf18:	ldr	r1, [r0, #16]
   1cf1c:	add	r2, r1, #1
   1cf20:	str	r2, [r0, #16]
   1cf24:	cmp	r1, #0
   1cf28:	beq	1cf44 <flatcc_json_printer_uint64_enum_vector_field@@Base+0xac>
   1cf2c:	ldr	r0, [fp, #-4]
   1cf30:	ldr	r1, [r0, #20]
   1cf34:	add	r2, r1, #1
   1cf38:	str	r2, [r0, #20]
   1cf3c:	movw	r0, #44	; 0x2c
   1cf40:	strb	r0, [r1]
   1cf44:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cf48:	bl	179d4 <flatcc_json_printer_string_field@@Base+0x258>
   1cf4c:	str	r0, [fp, #-20]	; 0xffffffec
   1cf50:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cf54:	bl	1a7d8 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   1cf58:	str	r0, [fp, #-24]	; 0xffffffe8
   1cf5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cf60:	add	r0, r0, #4
   1cf64:	str	r0, [fp, #-20]	; 0xffffffec
   1cf68:	ldr	r0, [fp, #-4]
   1cf6c:	ldr	r1, [fp, #-16]
   1cf70:	ldr	r2, [fp, #8]
   1cf74:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   1cf78:	ldr	r0, [fp, #-4]
   1cf7c:	ldr	r1, [r0, #32]
   1cf80:	add	r1, r1, #1
   1cf84:	str	r1, [r0, #32]
   1cf88:	ldr	r0, [fp, #-4]
   1cf8c:	ldr	r1, [r0, #20]
   1cf90:	add	r2, r1, #1
   1cf94:	str	r2, [r0, #20]
   1cf98:	movw	r0, #91	; 0x5b
   1cf9c:	strb	r0, [r1]
   1cfa0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cfa4:	cmp	r0, #0
   1cfa8:	beq	1d044 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1ac>
   1cfac:	b	1cfb0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x118>
   1cfb0:	ldr	r0, [fp, #-4]
   1cfb4:	ldrsb	r0, [r0, #25]
   1cfb8:	cmp	r0, #0
   1cfbc:	beq	1cfe4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x14c>
   1cfc0:	ldr	r0, [fp, #-4]
   1cfc4:	ldr	r1, [r0, #20]
   1cfc8:	add	r2, r1, #1
   1cfcc:	str	r2, [r0, #20]
   1cfd0:	movw	r0, #10
   1cfd4:	strb	r0, [r1]
   1cfd8:	ldr	r0, [fp, #-4]
   1cfdc:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1cfe0:	b	1cfec <flatcc_json_printer_uint64_enum_vector_field@@Base+0x154>
   1cfe4:	ldr	r0, [fp, #-4]
   1cfe8:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1cfec:	b	1cff0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x158>
   1cff0:	ldr	r0, [fp, #12]
   1cff4:	ldr	r1, [fp, #-4]
   1cff8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1cffc:	str	r0, [sp, #28]
   1d000:	mov	r0, r2
   1d004:	str	r1, [sp, #24]
   1d008:	bl	181f0 <flatcc_json_printer_uint64_field@@Base+0x134>
   1d00c:	ldr	r2, [sp, #24]
   1d010:	str	r0, [sp, #20]
   1d014:	mov	r0, r2
   1d018:	ldr	r2, [sp, #20]
   1d01c:	mov	r3, r1
   1d020:	ldr	r1, [sp, #28]
   1d024:	blx	r1
   1d028:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d02c:	add	r0, r0, #8
   1d030:	str	r0, [fp, #-20]	; 0xffffffec
   1d034:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d038:	mvn	r1, #0
   1d03c:	add	r0, r0, r1
   1d040:	str	r0, [fp, #-24]	; 0xffffffe8
   1d044:	b	1d048 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1b0>
   1d048:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d04c:	mvn	r1, #0
   1d050:	add	r1, r0, r1
   1d054:	str	r1, [fp, #-24]	; 0xffffffe8
   1d058:	cmp	r0, #0
   1d05c:	beq	1d100 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x268>
   1d060:	ldr	r0, [fp, #-4]
   1d064:	ldr	r1, [r0, #20]
   1d068:	add	r2, r1, #1
   1d06c:	str	r2, [r0, #20]
   1d070:	movw	r0, #44	; 0x2c
   1d074:	strb	r0, [r1]
   1d078:	ldr	r0, [fp, #-4]
   1d07c:	ldrsb	r0, [r0, #25]
   1d080:	cmp	r0, #0
   1d084:	beq	1d0ac <flatcc_json_printer_uint64_enum_vector_field@@Base+0x214>
   1d088:	ldr	r0, [fp, #-4]
   1d08c:	ldr	r1, [r0, #20]
   1d090:	add	r2, r1, #1
   1d094:	str	r2, [r0, #20]
   1d098:	movw	r0, #10
   1d09c:	strb	r0, [r1]
   1d0a0:	ldr	r0, [fp, #-4]
   1d0a4:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1d0a8:	b	1d0b4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x21c>
   1d0ac:	ldr	r0, [fp, #-4]
   1d0b0:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1d0b4:	b	1d0b8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x220>
   1d0b8:	ldr	r0, [fp, #12]
   1d0bc:	ldr	r1, [fp, #-4]
   1d0c0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d0c4:	str	r0, [sp, #16]
   1d0c8:	mov	r0, r2
   1d0cc:	str	r1, [sp, #12]
   1d0d0:	bl	181f0 <flatcc_json_printer_uint64_field@@Base+0x134>
   1d0d4:	ldr	r2, [sp, #12]
   1d0d8:	str	r0, [sp, #8]
   1d0dc:	mov	r0, r2
   1d0e0:	ldr	r2, [sp, #8]
   1d0e4:	mov	r3, r1
   1d0e8:	ldr	r1, [sp, #16]
   1d0ec:	blx	r1
   1d0f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d0f4:	add	r0, r0, #8
   1d0f8:	str	r0, [fp, #-20]	; 0xffffffec
   1d0fc:	b	1d048 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1b0>
   1d100:	b	1d104 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x26c>
   1d104:	ldr	r0, [fp, #-4]
   1d108:	ldrsb	r0, [r0, #25]
   1d10c:	cmp	r0, #0
   1d110:	beq	1d148 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2b0>
   1d114:	ldr	r0, [fp, #-4]
   1d118:	ldr	r1, [r0, #20]
   1d11c:	add	r2, r1, #1
   1d120:	str	r2, [r0, #20]
   1d124:	movw	r0, #10
   1d128:	strb	r0, [r1]
   1d12c:	ldr	r0, [fp, #-4]
   1d130:	ldr	r1, [r0, #32]
   1d134:	mvn	r2, #0
   1d138:	add	r1, r1, r2
   1d13c:	str	r1, [r0, #32]
   1d140:	ldr	r0, [fp, #-4]
   1d144:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1d148:	ldr	r0, [fp, #-4]
   1d14c:	ldr	r1, [r0, #20]
   1d150:	add	r2, r1, #1
   1d154:	str	r2, [r0, #20]
   1d158:	movw	r0, #93	; 0x5d
   1d15c:	strb	r0, [r1]
   1d160:	b	1d164 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2cc>
   1d164:	mov	sp, fp
   1d168:	pop	{fp, pc}

0001d16c <flatcc_json_printer_int8_enum_vector_field@@Base>:
   1d16c:	push	{fp, lr}
   1d170:	mov	fp, sp
   1d174:	sub	sp, sp, #64	; 0x40
   1d178:	ldr	ip, [fp, #12]
   1d17c:	ldr	lr, [fp, #8]
   1d180:	str	r0, [fp, #-4]
   1d184:	str	r1, [fp, #-8]
   1d188:	str	r2, [fp, #-12]
   1d18c:	str	r3, [fp, #-16]
   1d190:	ldr	r0, [fp, #-4]
   1d194:	ldrsb	r0, [r0, #27]
   1d198:	cmp	r0, #0
   1d19c:	str	lr, [fp, #-28]	; 0xffffffe4
   1d1a0:	str	ip, [sp, #32]
   1d1a4:	beq	1d1c8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x5c>
   1d1a8:	ldr	r0, [fp, #-4]
   1d1ac:	ldr	r1, [fp, #-8]
   1d1b0:	ldr	r2, [fp, #-12]
   1d1b4:	ldr	r3, [fp, #-16]
   1d1b8:	ldr	ip, [fp, #8]
   1d1bc:	str	ip, [sp]
   1d1c0:	bl	1b204 <flatcc_json_printer_int8_vector_field@@Base>
   1d1c4:	b	1d438 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2cc>
   1d1c8:	ldr	r0, [fp, #-8]
   1d1cc:	ldr	r1, [fp, #-12]
   1d1d0:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   1d1d4:	str	r0, [fp, #-20]	; 0xffffffec
   1d1d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d1dc:	movw	r1, #0
   1d1e0:	cmp	r0, r1
   1d1e4:	beq	1d438 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2cc>
   1d1e8:	ldr	r0, [fp, #-8]
   1d1ec:	ldr	r1, [r0, #16]
   1d1f0:	add	r2, r1, #1
   1d1f4:	str	r2, [r0, #16]
   1d1f8:	cmp	r1, #0
   1d1fc:	beq	1d218 <flatcc_json_printer_int8_enum_vector_field@@Base+0xac>
   1d200:	ldr	r0, [fp, #-4]
   1d204:	ldr	r1, [r0, #20]
   1d208:	add	r2, r1, #1
   1d20c:	str	r2, [r0, #20]
   1d210:	movw	r0, #44	; 0x2c
   1d214:	strb	r0, [r1]
   1d218:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d21c:	bl	179d4 <flatcc_json_printer_string_field@@Base+0x258>
   1d220:	str	r0, [fp, #-20]	; 0xffffffec
   1d224:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d228:	bl	1a7d8 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   1d22c:	str	r0, [fp, #-24]	; 0xffffffe8
   1d230:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d234:	add	r0, r0, #4
   1d238:	str	r0, [fp, #-20]	; 0xffffffec
   1d23c:	ldr	r0, [fp, #-4]
   1d240:	ldr	r1, [fp, #-16]
   1d244:	ldr	r2, [fp, #8]
   1d248:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   1d24c:	ldr	r0, [fp, #-4]
   1d250:	ldr	r1, [r0, #32]
   1d254:	add	r1, r1, #1
   1d258:	str	r1, [r0, #32]
   1d25c:	ldr	r0, [fp, #-4]
   1d260:	ldr	r1, [r0, #20]
   1d264:	add	r2, r1, #1
   1d268:	str	r2, [r0, #20]
   1d26c:	movw	r0, #91	; 0x5b
   1d270:	strb	r0, [r1]
   1d274:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d278:	cmp	r0, #0
   1d27c:	beq	1d318 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1ac>
   1d280:	b	1d284 <flatcc_json_printer_int8_enum_vector_field@@Base+0x118>
   1d284:	ldr	r0, [fp, #-4]
   1d288:	ldrsb	r0, [r0, #25]
   1d28c:	cmp	r0, #0
   1d290:	beq	1d2b8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x14c>
   1d294:	ldr	r0, [fp, #-4]
   1d298:	ldr	r1, [r0, #20]
   1d29c:	add	r2, r1, #1
   1d2a0:	str	r2, [r0, #20]
   1d2a4:	movw	r0, #10
   1d2a8:	strb	r0, [r1]
   1d2ac:	ldr	r0, [fp, #-4]
   1d2b0:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1d2b4:	b	1d2c0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x154>
   1d2b8:	ldr	r0, [fp, #-4]
   1d2bc:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1d2c0:	b	1d2c4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x158>
   1d2c4:	ldr	r0, [fp, #12]
   1d2c8:	ldr	r1, [fp, #-4]
   1d2cc:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d2d0:	str	r0, [sp, #28]
   1d2d4:	mov	r0, r2
   1d2d8:	str	r1, [sp, #24]
   1d2dc:	bl	1832c <flatcc_json_printer_int8_field@@Base+0x108>
   1d2e0:	ldr	r1, [sp, #24]
   1d2e4:	str	r0, [sp, #20]
   1d2e8:	mov	r0, r1
   1d2ec:	ldr	r2, [sp, #20]
   1d2f0:	sxtb	r1, r2
   1d2f4:	ldr	lr, [sp, #28]
   1d2f8:	blx	lr
   1d2fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d300:	add	r0, r0, #1
   1d304:	str	r0, [fp, #-20]	; 0xffffffec
   1d308:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d30c:	mvn	r1, #0
   1d310:	add	r0, r0, r1
   1d314:	str	r0, [fp, #-24]	; 0xffffffe8
   1d318:	b	1d31c <flatcc_json_printer_int8_enum_vector_field@@Base+0x1b0>
   1d31c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d320:	mvn	r1, #0
   1d324:	add	r1, r0, r1
   1d328:	str	r1, [fp, #-24]	; 0xffffffe8
   1d32c:	cmp	r0, #0
   1d330:	beq	1d3d4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x268>
   1d334:	ldr	r0, [fp, #-4]
   1d338:	ldr	r1, [r0, #20]
   1d33c:	add	r2, r1, #1
   1d340:	str	r2, [r0, #20]
   1d344:	movw	r0, #44	; 0x2c
   1d348:	strb	r0, [r1]
   1d34c:	ldr	r0, [fp, #-4]
   1d350:	ldrsb	r0, [r0, #25]
   1d354:	cmp	r0, #0
   1d358:	beq	1d380 <flatcc_json_printer_int8_enum_vector_field@@Base+0x214>
   1d35c:	ldr	r0, [fp, #-4]
   1d360:	ldr	r1, [r0, #20]
   1d364:	add	r2, r1, #1
   1d368:	str	r2, [r0, #20]
   1d36c:	movw	r0, #10
   1d370:	strb	r0, [r1]
   1d374:	ldr	r0, [fp, #-4]
   1d378:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1d37c:	b	1d388 <flatcc_json_printer_int8_enum_vector_field@@Base+0x21c>
   1d380:	ldr	r0, [fp, #-4]
   1d384:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1d388:	b	1d38c <flatcc_json_printer_int8_enum_vector_field@@Base+0x220>
   1d38c:	ldr	r0, [fp, #12]
   1d390:	ldr	r1, [fp, #-4]
   1d394:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d398:	str	r0, [sp, #16]
   1d39c:	mov	r0, r2
   1d3a0:	str	r1, [sp, #12]
   1d3a4:	bl	1832c <flatcc_json_printer_int8_field@@Base+0x108>
   1d3a8:	ldr	r1, [sp, #12]
   1d3ac:	str	r0, [sp, #8]
   1d3b0:	mov	r0, r1
   1d3b4:	ldr	r2, [sp, #8]
   1d3b8:	sxtb	r1, r2
   1d3bc:	ldr	lr, [sp, #16]
   1d3c0:	blx	lr
   1d3c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d3c8:	add	r0, r0, #1
   1d3cc:	str	r0, [fp, #-20]	; 0xffffffec
   1d3d0:	b	1d31c <flatcc_json_printer_int8_enum_vector_field@@Base+0x1b0>
   1d3d4:	b	1d3d8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x26c>
   1d3d8:	ldr	r0, [fp, #-4]
   1d3dc:	ldrsb	r0, [r0, #25]
   1d3e0:	cmp	r0, #0
   1d3e4:	beq	1d41c <flatcc_json_printer_int8_enum_vector_field@@Base+0x2b0>
   1d3e8:	ldr	r0, [fp, #-4]
   1d3ec:	ldr	r1, [r0, #20]
   1d3f0:	add	r2, r1, #1
   1d3f4:	str	r2, [r0, #20]
   1d3f8:	movw	r0, #10
   1d3fc:	strb	r0, [r1]
   1d400:	ldr	r0, [fp, #-4]
   1d404:	ldr	r1, [r0, #32]
   1d408:	mvn	r2, #0
   1d40c:	add	r1, r1, r2
   1d410:	str	r1, [r0, #32]
   1d414:	ldr	r0, [fp, #-4]
   1d418:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1d41c:	ldr	r0, [fp, #-4]
   1d420:	ldr	r1, [r0, #20]
   1d424:	add	r2, r1, #1
   1d428:	str	r2, [r0, #20]
   1d42c:	movw	r0, #93	; 0x5d
   1d430:	strb	r0, [r1]
   1d434:	b	1d438 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2cc>
   1d438:	mov	sp, fp
   1d43c:	pop	{fp, pc}

0001d440 <flatcc_json_printer_int16_enum_vector_field@@Base>:
   1d440:	push	{fp, lr}
   1d444:	mov	fp, sp
   1d448:	sub	sp, sp, #64	; 0x40
   1d44c:	ldr	ip, [fp, #12]
   1d450:	ldr	lr, [fp, #8]
   1d454:	str	r0, [fp, #-4]
   1d458:	str	r1, [fp, #-8]
   1d45c:	str	r2, [fp, #-12]
   1d460:	str	r3, [fp, #-16]
   1d464:	ldr	r0, [fp, #-4]
   1d468:	ldrsb	r0, [r0, #27]
   1d46c:	cmp	r0, #0
   1d470:	str	lr, [fp, #-28]	; 0xffffffe4
   1d474:	str	ip, [sp, #32]
   1d478:	beq	1d49c <flatcc_json_printer_int16_enum_vector_field@@Base+0x5c>
   1d47c:	ldr	r0, [fp, #-4]
   1d480:	ldr	r1, [fp, #-8]
   1d484:	ldr	r2, [fp, #-12]
   1d488:	ldr	r3, [fp, #-16]
   1d48c:	ldr	ip, [fp, #8]
   1d490:	str	ip, [sp]
   1d494:	bl	1b480 <flatcc_json_printer_int16_vector_field@@Base>
   1d498:	b	1d70c <flatcc_json_printer_int16_enum_vector_field@@Base+0x2cc>
   1d49c:	ldr	r0, [fp, #-8]
   1d4a0:	ldr	r1, [fp, #-12]
   1d4a4:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   1d4a8:	str	r0, [fp, #-20]	; 0xffffffec
   1d4ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d4b0:	movw	r1, #0
   1d4b4:	cmp	r0, r1
   1d4b8:	beq	1d70c <flatcc_json_printer_int16_enum_vector_field@@Base+0x2cc>
   1d4bc:	ldr	r0, [fp, #-8]
   1d4c0:	ldr	r1, [r0, #16]
   1d4c4:	add	r2, r1, #1
   1d4c8:	str	r2, [r0, #16]
   1d4cc:	cmp	r1, #0
   1d4d0:	beq	1d4ec <flatcc_json_printer_int16_enum_vector_field@@Base+0xac>
   1d4d4:	ldr	r0, [fp, #-4]
   1d4d8:	ldr	r1, [r0, #20]
   1d4dc:	add	r2, r1, #1
   1d4e0:	str	r2, [r0, #20]
   1d4e4:	movw	r0, #44	; 0x2c
   1d4e8:	strb	r0, [r1]
   1d4ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d4f0:	bl	179d4 <flatcc_json_printer_string_field@@Base+0x258>
   1d4f4:	str	r0, [fp, #-20]	; 0xffffffec
   1d4f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d4fc:	bl	1a7d8 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   1d500:	str	r0, [fp, #-24]	; 0xffffffe8
   1d504:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d508:	add	r0, r0, #4
   1d50c:	str	r0, [fp, #-20]	; 0xffffffec
   1d510:	ldr	r0, [fp, #-4]
   1d514:	ldr	r1, [fp, #-16]
   1d518:	ldr	r2, [fp, #8]
   1d51c:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   1d520:	ldr	r0, [fp, #-4]
   1d524:	ldr	r1, [r0, #32]
   1d528:	add	r1, r1, #1
   1d52c:	str	r1, [r0, #32]
   1d530:	ldr	r0, [fp, #-4]
   1d534:	ldr	r1, [r0, #20]
   1d538:	add	r2, r1, #1
   1d53c:	str	r2, [r0, #20]
   1d540:	movw	r0, #91	; 0x5b
   1d544:	strb	r0, [r1]
   1d548:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d54c:	cmp	r0, #0
   1d550:	beq	1d5ec <flatcc_json_printer_int16_enum_vector_field@@Base+0x1ac>
   1d554:	b	1d558 <flatcc_json_printer_int16_enum_vector_field@@Base+0x118>
   1d558:	ldr	r0, [fp, #-4]
   1d55c:	ldrsb	r0, [r0, #25]
   1d560:	cmp	r0, #0
   1d564:	beq	1d58c <flatcc_json_printer_int16_enum_vector_field@@Base+0x14c>
   1d568:	ldr	r0, [fp, #-4]
   1d56c:	ldr	r1, [r0, #20]
   1d570:	add	r2, r1, #1
   1d574:	str	r2, [r0, #20]
   1d578:	movw	r0, #10
   1d57c:	strb	r0, [r1]
   1d580:	ldr	r0, [fp, #-4]
   1d584:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1d588:	b	1d594 <flatcc_json_printer_int16_enum_vector_field@@Base+0x154>
   1d58c:	ldr	r0, [fp, #-4]
   1d590:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1d594:	b	1d598 <flatcc_json_printer_int16_enum_vector_field@@Base+0x158>
   1d598:	ldr	r0, [fp, #12]
   1d59c:	ldr	r1, [fp, #-4]
   1d5a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d5a4:	str	r0, [sp, #28]
   1d5a8:	mov	r0, r2
   1d5ac:	str	r1, [sp, #24]
   1d5b0:	bl	1845c <flatcc_json_printer_int16_field@@Base+0x108>
   1d5b4:	ldr	r1, [sp, #24]
   1d5b8:	str	r0, [sp, #20]
   1d5bc:	mov	r0, r1
   1d5c0:	ldr	r2, [sp, #20]
   1d5c4:	sxth	r1, r2
   1d5c8:	ldr	lr, [sp, #28]
   1d5cc:	blx	lr
   1d5d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d5d4:	add	r0, r0, #2
   1d5d8:	str	r0, [fp, #-20]	; 0xffffffec
   1d5dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d5e0:	mvn	r1, #0
   1d5e4:	add	r0, r0, r1
   1d5e8:	str	r0, [fp, #-24]	; 0xffffffe8
   1d5ec:	b	1d5f0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1b0>
   1d5f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d5f4:	mvn	r1, #0
   1d5f8:	add	r1, r0, r1
   1d5fc:	str	r1, [fp, #-24]	; 0xffffffe8
   1d600:	cmp	r0, #0
   1d604:	beq	1d6a8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x268>
   1d608:	ldr	r0, [fp, #-4]
   1d60c:	ldr	r1, [r0, #20]
   1d610:	add	r2, r1, #1
   1d614:	str	r2, [r0, #20]
   1d618:	movw	r0, #44	; 0x2c
   1d61c:	strb	r0, [r1]
   1d620:	ldr	r0, [fp, #-4]
   1d624:	ldrsb	r0, [r0, #25]
   1d628:	cmp	r0, #0
   1d62c:	beq	1d654 <flatcc_json_printer_int16_enum_vector_field@@Base+0x214>
   1d630:	ldr	r0, [fp, #-4]
   1d634:	ldr	r1, [r0, #20]
   1d638:	add	r2, r1, #1
   1d63c:	str	r2, [r0, #20]
   1d640:	movw	r0, #10
   1d644:	strb	r0, [r1]
   1d648:	ldr	r0, [fp, #-4]
   1d64c:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1d650:	b	1d65c <flatcc_json_printer_int16_enum_vector_field@@Base+0x21c>
   1d654:	ldr	r0, [fp, #-4]
   1d658:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1d65c:	b	1d660 <flatcc_json_printer_int16_enum_vector_field@@Base+0x220>
   1d660:	ldr	r0, [fp, #12]
   1d664:	ldr	r1, [fp, #-4]
   1d668:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d66c:	str	r0, [sp, #16]
   1d670:	mov	r0, r2
   1d674:	str	r1, [sp, #12]
   1d678:	bl	1845c <flatcc_json_printer_int16_field@@Base+0x108>
   1d67c:	ldr	r1, [sp, #12]
   1d680:	str	r0, [sp, #8]
   1d684:	mov	r0, r1
   1d688:	ldr	r2, [sp, #8]
   1d68c:	sxth	r1, r2
   1d690:	ldr	lr, [sp, #16]
   1d694:	blx	lr
   1d698:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d69c:	add	r0, r0, #2
   1d6a0:	str	r0, [fp, #-20]	; 0xffffffec
   1d6a4:	b	1d5f0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1b0>
   1d6a8:	b	1d6ac <flatcc_json_printer_int16_enum_vector_field@@Base+0x26c>
   1d6ac:	ldr	r0, [fp, #-4]
   1d6b0:	ldrsb	r0, [r0, #25]
   1d6b4:	cmp	r0, #0
   1d6b8:	beq	1d6f0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2b0>
   1d6bc:	ldr	r0, [fp, #-4]
   1d6c0:	ldr	r1, [r0, #20]
   1d6c4:	add	r2, r1, #1
   1d6c8:	str	r2, [r0, #20]
   1d6cc:	movw	r0, #10
   1d6d0:	strb	r0, [r1]
   1d6d4:	ldr	r0, [fp, #-4]
   1d6d8:	ldr	r1, [r0, #32]
   1d6dc:	mvn	r2, #0
   1d6e0:	add	r1, r1, r2
   1d6e4:	str	r1, [r0, #32]
   1d6e8:	ldr	r0, [fp, #-4]
   1d6ec:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1d6f0:	ldr	r0, [fp, #-4]
   1d6f4:	ldr	r1, [r0, #20]
   1d6f8:	add	r2, r1, #1
   1d6fc:	str	r2, [r0, #20]
   1d700:	movw	r0, #93	; 0x5d
   1d704:	strb	r0, [r1]
   1d708:	b	1d70c <flatcc_json_printer_int16_enum_vector_field@@Base+0x2cc>
   1d70c:	mov	sp, fp
   1d710:	pop	{fp, pc}

0001d714 <flatcc_json_printer_int32_enum_vector_field@@Base>:
   1d714:	push	{fp, lr}
   1d718:	mov	fp, sp
   1d71c:	sub	sp, sp, #64	; 0x40
   1d720:	ldr	ip, [fp, #12]
   1d724:	ldr	lr, [fp, #8]
   1d728:	str	r0, [fp, #-4]
   1d72c:	str	r1, [fp, #-8]
   1d730:	str	r2, [fp, #-12]
   1d734:	str	r3, [fp, #-16]
   1d738:	ldr	r0, [fp, #-4]
   1d73c:	ldrsb	r0, [r0, #27]
   1d740:	cmp	r0, #0
   1d744:	str	lr, [fp, #-28]	; 0xffffffe4
   1d748:	str	ip, [sp, #32]
   1d74c:	beq	1d770 <flatcc_json_printer_int32_enum_vector_field@@Base+0x5c>
   1d750:	ldr	r0, [fp, #-4]
   1d754:	ldr	r1, [fp, #-8]
   1d758:	ldr	r2, [fp, #-12]
   1d75c:	ldr	r3, [fp, #-16]
   1d760:	ldr	ip, [fp, #8]
   1d764:	str	ip, [sp]
   1d768:	bl	1b6fc <flatcc_json_printer_int32_vector_field@@Base>
   1d76c:	b	1d9d8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c4>
   1d770:	ldr	r0, [fp, #-8]
   1d774:	ldr	r1, [fp, #-12]
   1d778:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   1d77c:	str	r0, [fp, #-20]	; 0xffffffec
   1d780:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d784:	movw	r1, #0
   1d788:	cmp	r0, r1
   1d78c:	beq	1d9d8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c4>
   1d790:	ldr	r0, [fp, #-8]
   1d794:	ldr	r1, [r0, #16]
   1d798:	add	r2, r1, #1
   1d79c:	str	r2, [r0, #16]
   1d7a0:	cmp	r1, #0
   1d7a4:	beq	1d7c0 <flatcc_json_printer_int32_enum_vector_field@@Base+0xac>
   1d7a8:	ldr	r0, [fp, #-4]
   1d7ac:	ldr	r1, [r0, #20]
   1d7b0:	add	r2, r1, #1
   1d7b4:	str	r2, [r0, #20]
   1d7b8:	movw	r0, #44	; 0x2c
   1d7bc:	strb	r0, [r1]
   1d7c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d7c4:	bl	179d4 <flatcc_json_printer_string_field@@Base+0x258>
   1d7c8:	str	r0, [fp, #-20]	; 0xffffffec
   1d7cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d7d0:	bl	1a7d8 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   1d7d4:	str	r0, [fp, #-24]	; 0xffffffe8
   1d7d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d7dc:	add	r0, r0, #4
   1d7e0:	str	r0, [fp, #-20]	; 0xffffffec
   1d7e4:	ldr	r0, [fp, #-4]
   1d7e8:	ldr	r1, [fp, #-16]
   1d7ec:	ldr	r2, [fp, #8]
   1d7f0:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   1d7f4:	ldr	r0, [fp, #-4]
   1d7f8:	ldr	r1, [r0, #32]
   1d7fc:	add	r1, r1, #1
   1d800:	str	r1, [r0, #32]
   1d804:	ldr	r0, [fp, #-4]
   1d808:	ldr	r1, [r0, #20]
   1d80c:	add	r2, r1, #1
   1d810:	str	r2, [r0, #20]
   1d814:	movw	r0, #91	; 0x5b
   1d818:	strb	r0, [r1]
   1d81c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d820:	cmp	r0, #0
   1d824:	beq	1d8bc <flatcc_json_printer_int32_enum_vector_field@@Base+0x1a8>
   1d828:	b	1d82c <flatcc_json_printer_int32_enum_vector_field@@Base+0x118>
   1d82c:	ldr	r0, [fp, #-4]
   1d830:	ldrsb	r0, [r0, #25]
   1d834:	cmp	r0, #0
   1d838:	beq	1d860 <flatcc_json_printer_int32_enum_vector_field@@Base+0x14c>
   1d83c:	ldr	r0, [fp, #-4]
   1d840:	ldr	r1, [r0, #20]
   1d844:	add	r2, r1, #1
   1d848:	str	r2, [r0, #20]
   1d84c:	movw	r0, #10
   1d850:	strb	r0, [r1]
   1d854:	ldr	r0, [fp, #-4]
   1d858:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1d85c:	b	1d868 <flatcc_json_printer_int32_enum_vector_field@@Base+0x154>
   1d860:	ldr	r0, [fp, #-4]
   1d864:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1d868:	b	1d86c <flatcc_json_printer_int32_enum_vector_field@@Base+0x158>
   1d86c:	ldr	r0, [fp, #12]
   1d870:	ldr	r1, [fp, #-4]
   1d874:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d878:	str	r0, [sp, #28]
   1d87c:	mov	r0, r2
   1d880:	str	r1, [sp, #24]
   1d884:	bl	18588 <flatcc_json_printer_int32_field@@Base+0x104>
   1d888:	ldr	r1, [sp, #24]
   1d88c:	str	r0, [sp, #20]
   1d890:	mov	r0, r1
   1d894:	ldr	r1, [sp, #20]
   1d898:	ldr	r2, [sp, #28]
   1d89c:	blx	r2
   1d8a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d8a4:	add	r0, r0, #4
   1d8a8:	str	r0, [fp, #-20]	; 0xffffffec
   1d8ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d8b0:	mvn	r1, #0
   1d8b4:	add	r0, r0, r1
   1d8b8:	str	r0, [fp, #-24]	; 0xffffffe8
   1d8bc:	b	1d8c0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1ac>
   1d8c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d8c4:	mvn	r1, #0
   1d8c8:	add	r1, r0, r1
   1d8cc:	str	r1, [fp, #-24]	; 0xffffffe8
   1d8d0:	cmp	r0, #0
   1d8d4:	beq	1d974 <flatcc_json_printer_int32_enum_vector_field@@Base+0x260>
   1d8d8:	ldr	r0, [fp, #-4]
   1d8dc:	ldr	r1, [r0, #20]
   1d8e0:	add	r2, r1, #1
   1d8e4:	str	r2, [r0, #20]
   1d8e8:	movw	r0, #44	; 0x2c
   1d8ec:	strb	r0, [r1]
   1d8f0:	ldr	r0, [fp, #-4]
   1d8f4:	ldrsb	r0, [r0, #25]
   1d8f8:	cmp	r0, #0
   1d8fc:	beq	1d924 <flatcc_json_printer_int32_enum_vector_field@@Base+0x210>
   1d900:	ldr	r0, [fp, #-4]
   1d904:	ldr	r1, [r0, #20]
   1d908:	add	r2, r1, #1
   1d90c:	str	r2, [r0, #20]
   1d910:	movw	r0, #10
   1d914:	strb	r0, [r1]
   1d918:	ldr	r0, [fp, #-4]
   1d91c:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1d920:	b	1d92c <flatcc_json_printer_int32_enum_vector_field@@Base+0x218>
   1d924:	ldr	r0, [fp, #-4]
   1d928:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1d92c:	b	1d930 <flatcc_json_printer_int32_enum_vector_field@@Base+0x21c>
   1d930:	ldr	r0, [fp, #12]
   1d934:	ldr	r1, [fp, #-4]
   1d938:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d93c:	str	r0, [sp, #16]
   1d940:	mov	r0, r2
   1d944:	str	r1, [sp, #12]
   1d948:	bl	18588 <flatcc_json_printer_int32_field@@Base+0x104>
   1d94c:	ldr	r1, [sp, #12]
   1d950:	str	r0, [sp, #8]
   1d954:	mov	r0, r1
   1d958:	ldr	r1, [sp, #8]
   1d95c:	ldr	r2, [sp, #16]
   1d960:	blx	r2
   1d964:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d968:	add	r0, r0, #4
   1d96c:	str	r0, [fp, #-20]	; 0xffffffec
   1d970:	b	1d8c0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1ac>
   1d974:	b	1d978 <flatcc_json_printer_int32_enum_vector_field@@Base+0x264>
   1d978:	ldr	r0, [fp, #-4]
   1d97c:	ldrsb	r0, [r0, #25]
   1d980:	cmp	r0, #0
   1d984:	beq	1d9bc <flatcc_json_printer_int32_enum_vector_field@@Base+0x2a8>
   1d988:	ldr	r0, [fp, #-4]
   1d98c:	ldr	r1, [r0, #20]
   1d990:	add	r2, r1, #1
   1d994:	str	r2, [r0, #20]
   1d998:	movw	r0, #10
   1d99c:	strb	r0, [r1]
   1d9a0:	ldr	r0, [fp, #-4]
   1d9a4:	ldr	r1, [r0, #32]
   1d9a8:	mvn	r2, #0
   1d9ac:	add	r1, r1, r2
   1d9b0:	str	r1, [r0, #32]
   1d9b4:	ldr	r0, [fp, #-4]
   1d9b8:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1d9bc:	ldr	r0, [fp, #-4]
   1d9c0:	ldr	r1, [r0, #20]
   1d9c4:	add	r2, r1, #1
   1d9c8:	str	r2, [r0, #20]
   1d9cc:	movw	r0, #93	; 0x5d
   1d9d0:	strb	r0, [r1]
   1d9d4:	b	1d9d8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c4>
   1d9d8:	mov	sp, fp
   1d9dc:	pop	{fp, pc}

0001d9e0 <flatcc_json_printer_int64_enum_vector_field@@Base>:
   1d9e0:	push	{fp, lr}
   1d9e4:	mov	fp, sp
   1d9e8:	sub	sp, sp, #64	; 0x40
   1d9ec:	ldr	ip, [fp, #12]
   1d9f0:	ldr	lr, [fp, #8]
   1d9f4:	str	r0, [fp, #-4]
   1d9f8:	str	r1, [fp, #-8]
   1d9fc:	str	r2, [fp, #-12]
   1da00:	str	r3, [fp, #-16]
   1da04:	ldr	r0, [fp, #-4]
   1da08:	ldrsb	r0, [r0, #27]
   1da0c:	cmp	r0, #0
   1da10:	str	lr, [fp, #-28]	; 0xffffffe4
   1da14:	str	ip, [sp, #32]
   1da18:	beq	1da3c <flatcc_json_printer_int64_enum_vector_field@@Base+0x5c>
   1da1c:	ldr	r0, [fp, #-4]
   1da20:	ldr	r1, [fp, #-8]
   1da24:	ldr	r2, [fp, #-12]
   1da28:	ldr	r3, [fp, #-16]
   1da2c:	ldr	ip, [fp, #8]
   1da30:	str	ip, [sp]
   1da34:	bl	1b970 <flatcc_json_printer_int64_vector_field@@Base>
   1da38:	b	1dcac <flatcc_json_printer_int64_enum_vector_field@@Base+0x2cc>
   1da3c:	ldr	r0, [fp, #-8]
   1da40:	ldr	r1, [fp, #-12]
   1da44:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   1da48:	str	r0, [fp, #-20]	; 0xffffffec
   1da4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1da50:	movw	r1, #0
   1da54:	cmp	r0, r1
   1da58:	beq	1dcac <flatcc_json_printer_int64_enum_vector_field@@Base+0x2cc>
   1da5c:	ldr	r0, [fp, #-8]
   1da60:	ldr	r1, [r0, #16]
   1da64:	add	r2, r1, #1
   1da68:	str	r2, [r0, #16]
   1da6c:	cmp	r1, #0
   1da70:	beq	1da8c <flatcc_json_printer_int64_enum_vector_field@@Base+0xac>
   1da74:	ldr	r0, [fp, #-4]
   1da78:	ldr	r1, [r0, #20]
   1da7c:	add	r2, r1, #1
   1da80:	str	r2, [r0, #20]
   1da84:	movw	r0, #44	; 0x2c
   1da88:	strb	r0, [r1]
   1da8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1da90:	bl	179d4 <flatcc_json_printer_string_field@@Base+0x258>
   1da94:	str	r0, [fp, #-20]	; 0xffffffec
   1da98:	ldr	r0, [fp, #-20]	; 0xffffffec
   1da9c:	bl	1a7d8 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   1daa0:	str	r0, [fp, #-24]	; 0xffffffe8
   1daa4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1daa8:	add	r0, r0, #4
   1daac:	str	r0, [fp, #-20]	; 0xffffffec
   1dab0:	ldr	r0, [fp, #-4]
   1dab4:	ldr	r1, [fp, #-16]
   1dab8:	ldr	r2, [fp, #8]
   1dabc:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   1dac0:	ldr	r0, [fp, #-4]
   1dac4:	ldr	r1, [r0, #32]
   1dac8:	add	r1, r1, #1
   1dacc:	str	r1, [r0, #32]
   1dad0:	ldr	r0, [fp, #-4]
   1dad4:	ldr	r1, [r0, #20]
   1dad8:	add	r2, r1, #1
   1dadc:	str	r2, [r0, #20]
   1dae0:	movw	r0, #91	; 0x5b
   1dae4:	strb	r0, [r1]
   1dae8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1daec:	cmp	r0, #0
   1daf0:	beq	1db8c <flatcc_json_printer_int64_enum_vector_field@@Base+0x1ac>
   1daf4:	b	1daf8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x118>
   1daf8:	ldr	r0, [fp, #-4]
   1dafc:	ldrsb	r0, [r0, #25]
   1db00:	cmp	r0, #0
   1db04:	beq	1db2c <flatcc_json_printer_int64_enum_vector_field@@Base+0x14c>
   1db08:	ldr	r0, [fp, #-4]
   1db0c:	ldr	r1, [r0, #20]
   1db10:	add	r2, r1, #1
   1db14:	str	r2, [r0, #20]
   1db18:	movw	r0, #10
   1db1c:	strb	r0, [r1]
   1db20:	ldr	r0, [fp, #-4]
   1db24:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1db28:	b	1db34 <flatcc_json_printer_int64_enum_vector_field@@Base+0x154>
   1db2c:	ldr	r0, [fp, #-4]
   1db30:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1db34:	b	1db38 <flatcc_json_printer_int64_enum_vector_field@@Base+0x158>
   1db38:	ldr	r0, [fp, #12]
   1db3c:	ldr	r1, [fp, #-4]
   1db40:	ldr	r2, [fp, #-20]	; 0xffffffec
   1db44:	str	r0, [sp, #28]
   1db48:	mov	r0, r2
   1db4c:	str	r1, [sp, #24]
   1db50:	bl	186e0 <flatcc_json_printer_int64_field@@Base+0x134>
   1db54:	ldr	r2, [sp, #24]
   1db58:	str	r0, [sp, #20]
   1db5c:	mov	r0, r2
   1db60:	ldr	r2, [sp, #20]
   1db64:	mov	r3, r1
   1db68:	ldr	r1, [sp, #28]
   1db6c:	blx	r1
   1db70:	ldr	r0, [fp, #-20]	; 0xffffffec
   1db74:	add	r0, r0, #8
   1db78:	str	r0, [fp, #-20]	; 0xffffffec
   1db7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db80:	mvn	r1, #0
   1db84:	add	r0, r0, r1
   1db88:	str	r0, [fp, #-24]	; 0xffffffe8
   1db8c:	b	1db90 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1b0>
   1db90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db94:	mvn	r1, #0
   1db98:	add	r1, r0, r1
   1db9c:	str	r1, [fp, #-24]	; 0xffffffe8
   1dba0:	cmp	r0, #0
   1dba4:	beq	1dc48 <flatcc_json_printer_int64_enum_vector_field@@Base+0x268>
   1dba8:	ldr	r0, [fp, #-4]
   1dbac:	ldr	r1, [r0, #20]
   1dbb0:	add	r2, r1, #1
   1dbb4:	str	r2, [r0, #20]
   1dbb8:	movw	r0, #44	; 0x2c
   1dbbc:	strb	r0, [r1]
   1dbc0:	ldr	r0, [fp, #-4]
   1dbc4:	ldrsb	r0, [r0, #25]
   1dbc8:	cmp	r0, #0
   1dbcc:	beq	1dbf4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x214>
   1dbd0:	ldr	r0, [fp, #-4]
   1dbd4:	ldr	r1, [r0, #20]
   1dbd8:	add	r2, r1, #1
   1dbdc:	str	r2, [r0, #20]
   1dbe0:	movw	r0, #10
   1dbe4:	strb	r0, [r1]
   1dbe8:	ldr	r0, [fp, #-4]
   1dbec:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1dbf0:	b	1dbfc <flatcc_json_printer_int64_enum_vector_field@@Base+0x21c>
   1dbf4:	ldr	r0, [fp, #-4]
   1dbf8:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1dbfc:	b	1dc00 <flatcc_json_printer_int64_enum_vector_field@@Base+0x220>
   1dc00:	ldr	r0, [fp, #12]
   1dc04:	ldr	r1, [fp, #-4]
   1dc08:	ldr	r2, [fp, #-20]	; 0xffffffec
   1dc0c:	str	r0, [sp, #16]
   1dc10:	mov	r0, r2
   1dc14:	str	r1, [sp, #12]
   1dc18:	bl	186e0 <flatcc_json_printer_int64_field@@Base+0x134>
   1dc1c:	ldr	r2, [sp, #12]
   1dc20:	str	r0, [sp, #8]
   1dc24:	mov	r0, r2
   1dc28:	ldr	r2, [sp, #8]
   1dc2c:	mov	r3, r1
   1dc30:	ldr	r1, [sp, #16]
   1dc34:	blx	r1
   1dc38:	ldr	r0, [fp, #-20]	; 0xffffffec
   1dc3c:	add	r0, r0, #8
   1dc40:	str	r0, [fp, #-20]	; 0xffffffec
   1dc44:	b	1db90 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1b0>
   1dc48:	b	1dc4c <flatcc_json_printer_int64_enum_vector_field@@Base+0x26c>
   1dc4c:	ldr	r0, [fp, #-4]
   1dc50:	ldrsb	r0, [r0, #25]
   1dc54:	cmp	r0, #0
   1dc58:	beq	1dc90 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2b0>
   1dc5c:	ldr	r0, [fp, #-4]
   1dc60:	ldr	r1, [r0, #20]
   1dc64:	add	r2, r1, #1
   1dc68:	str	r2, [r0, #20]
   1dc6c:	movw	r0, #10
   1dc70:	strb	r0, [r1]
   1dc74:	ldr	r0, [fp, #-4]
   1dc78:	ldr	r1, [r0, #32]
   1dc7c:	mvn	r2, #0
   1dc80:	add	r1, r1, r2
   1dc84:	str	r1, [r0, #32]
   1dc88:	ldr	r0, [fp, #-4]
   1dc8c:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1dc90:	ldr	r0, [fp, #-4]
   1dc94:	ldr	r1, [r0, #20]
   1dc98:	add	r2, r1, #1
   1dc9c:	str	r2, [r0, #20]
   1dca0:	movw	r0, #93	; 0x5d
   1dca4:	strb	r0, [r1]
   1dca8:	b	1dcac <flatcc_json_printer_int64_enum_vector_field@@Base+0x2cc>
   1dcac:	mov	sp, fp
   1dcb0:	pop	{fp, pc}

0001dcb4 <flatcc_json_printer_bool_enum_vector_field@@Base>:
   1dcb4:	push	{fp, lr}
   1dcb8:	mov	fp, sp
   1dcbc:	sub	sp, sp, #64	; 0x40
   1dcc0:	ldr	ip, [fp, #12]
   1dcc4:	ldr	lr, [fp, #8]
   1dcc8:	str	r0, [fp, #-4]
   1dccc:	str	r1, [fp, #-8]
   1dcd0:	str	r2, [fp, #-12]
   1dcd4:	str	r3, [fp, #-16]
   1dcd8:	ldr	r0, [fp, #-4]
   1dcdc:	ldrsb	r0, [r0, #27]
   1dce0:	cmp	r0, #0
   1dce4:	str	lr, [fp, #-28]	; 0xffffffe4
   1dce8:	str	ip, [sp, #32]
   1dcec:	beq	1dd10 <flatcc_json_printer_bool_enum_vector_field@@Base+0x5c>
   1dcf0:	ldr	r0, [fp, #-4]
   1dcf4:	ldr	r1, [fp, #-8]
   1dcf8:	ldr	r2, [fp, #-12]
   1dcfc:	ldr	r3, [fp, #-16]
   1dd00:	ldr	ip, [fp, #8]
   1dd04:	str	ip, [sp]
   1dd08:	bl	1bbe4 <flatcc_json_printer_bool_vector_field@@Base>
   1dd0c:	b	1df80 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2cc>
   1dd10:	ldr	r0, [fp, #-8]
   1dd14:	ldr	r1, [fp, #-12]
   1dd18:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   1dd1c:	str	r0, [fp, #-20]	; 0xffffffec
   1dd20:	ldr	r0, [fp, #-20]	; 0xffffffec
   1dd24:	movw	r1, #0
   1dd28:	cmp	r0, r1
   1dd2c:	beq	1df80 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2cc>
   1dd30:	ldr	r0, [fp, #-8]
   1dd34:	ldr	r1, [r0, #16]
   1dd38:	add	r2, r1, #1
   1dd3c:	str	r2, [r0, #16]
   1dd40:	cmp	r1, #0
   1dd44:	beq	1dd60 <flatcc_json_printer_bool_enum_vector_field@@Base+0xac>
   1dd48:	ldr	r0, [fp, #-4]
   1dd4c:	ldr	r1, [r0, #20]
   1dd50:	add	r2, r1, #1
   1dd54:	str	r2, [r0, #20]
   1dd58:	movw	r0, #44	; 0x2c
   1dd5c:	strb	r0, [r1]
   1dd60:	ldr	r0, [fp, #-20]	; 0xffffffec
   1dd64:	bl	179d4 <flatcc_json_printer_string_field@@Base+0x258>
   1dd68:	str	r0, [fp, #-20]	; 0xffffffec
   1dd6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1dd70:	bl	1a7d8 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   1dd74:	str	r0, [fp, #-24]	; 0xffffffe8
   1dd78:	ldr	r0, [fp, #-20]	; 0xffffffec
   1dd7c:	add	r0, r0, #4
   1dd80:	str	r0, [fp, #-20]	; 0xffffffec
   1dd84:	ldr	r0, [fp, #-4]
   1dd88:	ldr	r1, [fp, #-16]
   1dd8c:	ldr	r2, [fp, #8]
   1dd90:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   1dd94:	ldr	r0, [fp, #-4]
   1dd98:	ldr	r1, [r0, #32]
   1dd9c:	add	r1, r1, #1
   1dda0:	str	r1, [r0, #32]
   1dda4:	ldr	r0, [fp, #-4]
   1dda8:	ldr	r1, [r0, #20]
   1ddac:	add	r2, r1, #1
   1ddb0:	str	r2, [r0, #20]
   1ddb4:	movw	r0, #91	; 0x5b
   1ddb8:	strb	r0, [r1]
   1ddbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ddc0:	cmp	r0, #0
   1ddc4:	beq	1de60 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1ac>
   1ddc8:	b	1ddcc <flatcc_json_printer_bool_enum_vector_field@@Base+0x118>
   1ddcc:	ldr	r0, [fp, #-4]
   1ddd0:	ldrsb	r0, [r0, #25]
   1ddd4:	cmp	r0, #0
   1ddd8:	beq	1de00 <flatcc_json_printer_bool_enum_vector_field@@Base+0x14c>
   1dddc:	ldr	r0, [fp, #-4]
   1dde0:	ldr	r1, [r0, #20]
   1dde4:	add	r2, r1, #1
   1dde8:	str	r2, [r0, #20]
   1ddec:	movw	r0, #10
   1ddf0:	strb	r0, [r1]
   1ddf4:	ldr	r0, [fp, #-4]
   1ddf8:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1ddfc:	b	1de08 <flatcc_json_printer_bool_enum_vector_field@@Base+0x154>
   1de00:	ldr	r0, [fp, #-4]
   1de04:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1de08:	b	1de0c <flatcc_json_printer_bool_enum_vector_field@@Base+0x158>
   1de0c:	ldr	r0, [fp, #12]
   1de10:	ldr	r1, [fp, #-4]
   1de14:	ldr	r2, [fp, #-20]	; 0xffffffec
   1de18:	str	r0, [sp, #28]
   1de1c:	mov	r0, r2
   1de20:	str	r1, [sp, #24]
   1de24:	bl	18818 <flatcc_json_printer_bool_field@@Base+0x104>
   1de28:	ldr	r1, [sp, #24]
   1de2c:	str	r0, [sp, #20]
   1de30:	mov	r0, r1
   1de34:	ldr	r2, [sp, #20]
   1de38:	and	r1, r2, #255	; 0xff
   1de3c:	ldr	lr, [sp, #28]
   1de40:	blx	lr
   1de44:	ldr	r0, [fp, #-20]	; 0xffffffec
   1de48:	add	r0, r0, #1
   1de4c:	str	r0, [fp, #-20]	; 0xffffffec
   1de50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1de54:	mvn	r1, #0
   1de58:	add	r0, r0, r1
   1de5c:	str	r0, [fp, #-24]	; 0xffffffe8
   1de60:	b	1de64 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1b0>
   1de64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1de68:	mvn	r1, #0
   1de6c:	add	r1, r0, r1
   1de70:	str	r1, [fp, #-24]	; 0xffffffe8
   1de74:	cmp	r0, #0
   1de78:	beq	1df1c <flatcc_json_printer_bool_enum_vector_field@@Base+0x268>
   1de7c:	ldr	r0, [fp, #-4]
   1de80:	ldr	r1, [r0, #20]
   1de84:	add	r2, r1, #1
   1de88:	str	r2, [r0, #20]
   1de8c:	movw	r0, #44	; 0x2c
   1de90:	strb	r0, [r1]
   1de94:	ldr	r0, [fp, #-4]
   1de98:	ldrsb	r0, [r0, #25]
   1de9c:	cmp	r0, #0
   1dea0:	beq	1dec8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x214>
   1dea4:	ldr	r0, [fp, #-4]
   1dea8:	ldr	r1, [r0, #20]
   1deac:	add	r2, r1, #1
   1deb0:	str	r2, [r0, #20]
   1deb4:	movw	r0, #10
   1deb8:	strb	r0, [r1]
   1debc:	ldr	r0, [fp, #-4]
   1dec0:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1dec4:	b	1ded0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x21c>
   1dec8:	ldr	r0, [fp, #-4]
   1decc:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1ded0:	b	1ded4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x220>
   1ded4:	ldr	r0, [fp, #12]
   1ded8:	ldr	r1, [fp, #-4]
   1dedc:	ldr	r2, [fp, #-20]	; 0xffffffec
   1dee0:	str	r0, [sp, #16]
   1dee4:	mov	r0, r2
   1dee8:	str	r1, [sp, #12]
   1deec:	bl	18818 <flatcc_json_printer_bool_field@@Base+0x104>
   1def0:	ldr	r1, [sp, #12]
   1def4:	str	r0, [sp, #8]
   1def8:	mov	r0, r1
   1defc:	ldr	r2, [sp, #8]
   1df00:	and	r1, r2, #255	; 0xff
   1df04:	ldr	lr, [sp, #16]
   1df08:	blx	lr
   1df0c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1df10:	add	r0, r0, #1
   1df14:	str	r0, [fp, #-20]	; 0xffffffec
   1df18:	b	1de64 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1b0>
   1df1c:	b	1df20 <flatcc_json_printer_bool_enum_vector_field@@Base+0x26c>
   1df20:	ldr	r0, [fp, #-4]
   1df24:	ldrsb	r0, [r0, #25]
   1df28:	cmp	r0, #0
   1df2c:	beq	1df64 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2b0>
   1df30:	ldr	r0, [fp, #-4]
   1df34:	ldr	r1, [r0, #20]
   1df38:	add	r2, r1, #1
   1df3c:	str	r2, [r0, #20]
   1df40:	movw	r0, #10
   1df44:	strb	r0, [r1]
   1df48:	ldr	r0, [fp, #-4]
   1df4c:	ldr	r1, [r0, #32]
   1df50:	mvn	r2, #0
   1df54:	add	r1, r1, r2
   1df58:	str	r1, [r0, #32]
   1df5c:	ldr	r0, [fp, #-4]
   1df60:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1df64:	ldr	r0, [fp, #-4]
   1df68:	ldr	r1, [r0, #20]
   1df6c:	add	r2, r1, #1
   1df70:	str	r2, [r0, #20]
   1df74:	movw	r0, #93	; 0x5d
   1df78:	strb	r0, [r1]
   1df7c:	b	1df80 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2cc>
   1df80:	mov	sp, fp
   1df84:	pop	{fp, pc}

0001df88 <flatcc_json_printer_struct_vector_field@@Base>:
   1df88:	push	{r4, sl, fp, lr}
   1df8c:	add	fp, sp, #8
   1df90:	sub	sp, sp, #48	; 0x30
   1df94:	ldr	ip, [fp, #16]
   1df98:	ldr	lr, [fp, #12]
   1df9c:	ldr	r4, [fp, #8]
   1dfa0:	str	r0, [fp, #-12]
   1dfa4:	str	r1, [fp, #-16]
   1dfa8:	str	r2, [fp, #-20]	; 0xffffffec
   1dfac:	str	r3, [fp, #-24]	; 0xffffffe8
   1dfb0:	ldr	r0, [fp, #-16]
   1dfb4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1dfb8:	str	r4, [sp, #20]
   1dfbc:	str	lr, [sp, #16]
   1dfc0:	str	ip, [sp, #12]
   1dfc4:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   1dfc8:	str	r0, [sp, #28]
   1dfcc:	ldr	r0, [sp, #28]
   1dfd0:	movw	r1, #0
   1dfd4:	cmp	r0, r1
   1dfd8:	beq	1e304 <flatcc_json_printer_struct_vector_field@@Base+0x37c>
   1dfdc:	ldr	r0, [fp, #-16]
   1dfe0:	ldr	r1, [r0, #16]
   1dfe4:	add	r2, r1, #1
   1dfe8:	str	r2, [r0, #16]
   1dfec:	cmp	r1, #0
   1dff0:	beq	1e00c <flatcc_json_printer_struct_vector_field@@Base+0x84>
   1dff4:	ldr	r0, [fp, #-12]
   1dff8:	ldr	r1, [r0, #20]
   1dffc:	add	r2, r1, #1
   1e000:	str	r2, [r0, #20]
   1e004:	movw	r0, #44	; 0x2c
   1e008:	strb	r0, [r1]
   1e00c:	ldr	r0, [sp, #28]
   1e010:	bl	179d4 <flatcc_json_printer_string_field@@Base+0x258>
   1e014:	str	r0, [sp, #28]
   1e018:	ldr	r0, [sp, #28]
   1e01c:	bl	1a7d8 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   1e020:	str	r0, [sp, #24]
   1e024:	ldr	r0, [sp, #28]
   1e028:	add	r0, r0, #4
   1e02c:	str	r0, [sp, #28]
   1e030:	ldr	r0, [fp, #-12]
   1e034:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e038:	ldr	r2, [fp, #8]
   1e03c:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   1e040:	ldr	r0, [fp, #-12]
   1e044:	ldr	r1, [r0, #32]
   1e048:	add	r1, r1, #1
   1e04c:	str	r1, [r0, #32]
   1e050:	ldr	r0, [fp, #-12]
   1e054:	ldr	r1, [r0, #20]
   1e058:	add	r2, r1, #1
   1e05c:	str	r2, [r0, #20]
   1e060:	movw	r0, #91	; 0x5b
   1e064:	strb	r0, [r1]
   1e068:	ldr	r0, [sp, #24]
   1e06c:	cmp	r0, #0
   1e070:	beq	1e170 <flatcc_json_printer_struct_vector_field@@Base+0x1e8>
   1e074:	b	1e078 <flatcc_json_printer_struct_vector_field@@Base+0xf0>
   1e078:	ldr	r0, [fp, #-12]
   1e07c:	ldrsb	r0, [r0, #25]
   1e080:	cmp	r0, #0
   1e084:	beq	1e0ac <flatcc_json_printer_struct_vector_field@@Base+0x124>
   1e088:	ldr	r0, [fp, #-12]
   1e08c:	ldr	r1, [r0, #20]
   1e090:	add	r2, r1, #1
   1e094:	str	r2, [r0, #20]
   1e098:	movw	r0, #10
   1e09c:	strb	r0, [r1]
   1e0a0:	ldr	r0, [fp, #-12]
   1e0a4:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1e0a8:	b	1e0b4 <flatcc_json_printer_struct_vector_field@@Base+0x12c>
   1e0ac:	ldr	r0, [fp, #-12]
   1e0b0:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1e0b4:	b	1e0b8 <flatcc_json_printer_struct_vector_field@@Base+0x130>
   1e0b8:	b	1e0bc <flatcc_json_printer_struct_vector_field@@Base+0x134>
   1e0bc:	ldr	r0, [fp, #-12]
   1e0c0:	ldr	r1, [r0, #32]
   1e0c4:	add	r1, r1, #1
   1e0c8:	str	r1, [r0, #32]
   1e0cc:	ldr	r0, [fp, #-12]
   1e0d0:	ldr	r1, [r0, #20]
   1e0d4:	add	r2, r1, #1
   1e0d8:	str	r2, [r0, #20]
   1e0dc:	movw	r0, #123	; 0x7b
   1e0e0:	strb	r0, [r1]
   1e0e4:	ldr	r0, [fp, #16]
   1e0e8:	ldr	r1, [fp, #-12]
   1e0ec:	ldr	r2, [sp, #28]
   1e0f0:	str	r0, [sp, #8]
   1e0f4:	mov	r0, r1
   1e0f8:	mov	r1, r2
   1e0fc:	ldr	r2, [sp, #8]
   1e100:	blx	r2
   1e104:	ldr	r0, [fp, #-12]
   1e108:	ldrsb	r0, [r0, #25]
   1e10c:	cmp	r0, #0
   1e110:	beq	1e148 <flatcc_json_printer_struct_vector_field@@Base+0x1c0>
   1e114:	ldr	r0, [fp, #-12]
   1e118:	ldr	r1, [r0, #20]
   1e11c:	add	r2, r1, #1
   1e120:	str	r2, [r0, #20]
   1e124:	movw	r0, #10
   1e128:	strb	r0, [r1]
   1e12c:	ldr	r0, [fp, #-12]
   1e130:	ldr	r1, [r0, #32]
   1e134:	mvn	r2, #0
   1e138:	add	r1, r1, r2
   1e13c:	str	r1, [r0, #32]
   1e140:	ldr	r0, [fp, #-12]
   1e144:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1e148:	ldr	r0, [fp, #-12]
   1e14c:	ldr	r1, [r0, #20]
   1e150:	add	r2, r1, #1
   1e154:	str	r2, [r0, #20]
   1e158:	movw	r0, #125	; 0x7d
   1e15c:	strb	r0, [r1]
   1e160:	ldr	r0, [sp, #24]
   1e164:	mvn	r1, #0
   1e168:	add	r0, r0, r1
   1e16c:	str	r0, [sp, #24]
   1e170:	b	1e174 <flatcc_json_printer_struct_vector_field@@Base+0x1ec>
   1e174:	ldr	r0, [sp, #24]
   1e178:	mvn	r1, #0
   1e17c:	add	r1, r0, r1
   1e180:	str	r1, [sp, #24]
   1e184:	cmp	r0, #0
   1e188:	beq	1e2a0 <flatcc_json_printer_struct_vector_field@@Base+0x318>
   1e18c:	ldr	r0, [fp, #12]
   1e190:	ldr	r1, [sp, #28]
   1e194:	add	r0, r1, r0
   1e198:	str	r0, [sp, #28]
   1e19c:	ldr	r0, [fp, #-12]
   1e1a0:	ldr	r1, [r0, #20]
   1e1a4:	add	r2, r1, #1
   1e1a8:	str	r2, [r0, #20]
   1e1ac:	movw	r0, #44	; 0x2c
   1e1b0:	strb	r0, [r1]
   1e1b4:	ldr	r0, [fp, #-12]
   1e1b8:	ldrsb	r0, [r0, #25]
   1e1bc:	cmp	r0, #0
   1e1c0:	beq	1e1e8 <flatcc_json_printer_struct_vector_field@@Base+0x260>
   1e1c4:	ldr	r0, [fp, #-12]
   1e1c8:	ldr	r1, [r0, #20]
   1e1cc:	add	r2, r1, #1
   1e1d0:	str	r2, [r0, #20]
   1e1d4:	movw	r0, #10
   1e1d8:	strb	r0, [r1]
   1e1dc:	ldr	r0, [fp, #-12]
   1e1e0:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1e1e4:	b	1e1f0 <flatcc_json_printer_struct_vector_field@@Base+0x268>
   1e1e8:	ldr	r0, [fp, #-12]
   1e1ec:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1e1f0:	b	1e1f4 <flatcc_json_printer_struct_vector_field@@Base+0x26c>
   1e1f4:	b	1e1f8 <flatcc_json_printer_struct_vector_field@@Base+0x270>
   1e1f8:	ldr	r0, [fp, #-12]
   1e1fc:	ldr	r1, [r0, #32]
   1e200:	add	r1, r1, #1
   1e204:	str	r1, [r0, #32]
   1e208:	ldr	r0, [fp, #-12]
   1e20c:	ldr	r1, [r0, #20]
   1e210:	add	r2, r1, #1
   1e214:	str	r2, [r0, #20]
   1e218:	movw	r0, #123	; 0x7b
   1e21c:	strb	r0, [r1]
   1e220:	ldr	r0, [fp, #16]
   1e224:	ldr	r1, [fp, #-12]
   1e228:	ldr	r2, [sp, #28]
   1e22c:	str	r0, [sp, #4]
   1e230:	mov	r0, r1
   1e234:	mov	r1, r2
   1e238:	ldr	r2, [sp, #4]
   1e23c:	blx	r2
   1e240:	ldr	r0, [fp, #-12]
   1e244:	ldrsb	r0, [r0, #25]
   1e248:	cmp	r0, #0
   1e24c:	beq	1e284 <flatcc_json_printer_struct_vector_field@@Base+0x2fc>
   1e250:	ldr	r0, [fp, #-12]
   1e254:	ldr	r1, [r0, #20]
   1e258:	add	r2, r1, #1
   1e25c:	str	r2, [r0, #20]
   1e260:	movw	r0, #10
   1e264:	strb	r0, [r1]
   1e268:	ldr	r0, [fp, #-12]
   1e26c:	ldr	r1, [r0, #32]
   1e270:	mvn	r2, #0
   1e274:	add	r1, r1, r2
   1e278:	str	r1, [r0, #32]
   1e27c:	ldr	r0, [fp, #-12]
   1e280:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1e284:	ldr	r0, [fp, #-12]
   1e288:	ldr	r1, [r0, #20]
   1e28c:	add	r2, r1, #1
   1e290:	str	r2, [r0, #20]
   1e294:	movw	r0, #125	; 0x7d
   1e298:	strb	r0, [r1]
   1e29c:	b	1e174 <flatcc_json_printer_struct_vector_field@@Base+0x1ec>
   1e2a0:	b	1e2a4 <flatcc_json_printer_struct_vector_field@@Base+0x31c>
   1e2a4:	ldr	r0, [fp, #-12]
   1e2a8:	ldrsb	r0, [r0, #25]
   1e2ac:	cmp	r0, #0
   1e2b0:	beq	1e2e8 <flatcc_json_printer_struct_vector_field@@Base+0x360>
   1e2b4:	ldr	r0, [fp, #-12]
   1e2b8:	ldr	r1, [r0, #20]
   1e2bc:	add	r2, r1, #1
   1e2c0:	str	r2, [r0, #20]
   1e2c4:	movw	r0, #10
   1e2c8:	strb	r0, [r1]
   1e2cc:	ldr	r0, [fp, #-12]
   1e2d0:	ldr	r1, [r0, #32]
   1e2d4:	mvn	r2, #0
   1e2d8:	add	r1, r1, r2
   1e2dc:	str	r1, [r0, #32]
   1e2e0:	ldr	r0, [fp, #-12]
   1e2e4:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1e2e8:	ldr	r0, [fp, #-12]
   1e2ec:	ldr	r1, [r0, #20]
   1e2f0:	add	r2, r1, #1
   1e2f4:	str	r2, [r0, #20]
   1e2f8:	movw	r0, #93	; 0x5d
   1e2fc:	strb	r0, [r1]
   1e300:	b	1e304 <flatcc_json_printer_struct_vector_field@@Base+0x37c>
   1e304:	sub	sp, fp, #8
   1e308:	pop	{r4, sl, fp, pc}

0001e30c <flatcc_json_printer_string_vector_field@@Base>:
   1e30c:	push	{fp, lr}
   1e310:	mov	fp, sp
   1e314:	sub	sp, sp, #48	; 0x30
   1e318:	ldr	ip, [fp, #8]
   1e31c:	str	r0, [fp, #-4]
   1e320:	str	r1, [fp, #-8]
   1e324:	str	r2, [fp, #-12]
   1e328:	str	r3, [fp, #-16]
   1e32c:	ldr	r0, [fp, #-8]
   1e330:	ldr	r1, [fp, #-12]
   1e334:	str	ip, [sp, #20]
   1e338:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   1e33c:	str	r0, [fp, #-20]	; 0xffffffec
   1e340:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e344:	movw	r1, #0
   1e348:	cmp	r0, r1
   1e34c:	beq	1e574 <flatcc_json_printer_string_vector_field@@Base+0x268>
   1e350:	ldr	r0, [fp, #-8]
   1e354:	ldr	r1, [r0, #16]
   1e358:	add	r2, r1, #1
   1e35c:	str	r2, [r0, #16]
   1e360:	cmp	r1, #0
   1e364:	beq	1e380 <flatcc_json_printer_string_vector_field@@Base+0x74>
   1e368:	ldr	r0, [fp, #-4]
   1e36c:	ldr	r1, [r0, #20]
   1e370:	add	r2, r1, #1
   1e374:	str	r2, [r0, #20]
   1e378:	movw	r0, #44	; 0x2c
   1e37c:	strb	r0, [r1]
   1e380:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e384:	bl	179d4 <flatcc_json_printer_string_field@@Base+0x258>
   1e388:	str	r0, [fp, #-20]	; 0xffffffec
   1e38c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e390:	bl	1a7d8 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   1e394:	str	r0, [sp, #24]
   1e398:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e39c:	add	r0, r0, #4
   1e3a0:	str	r0, [fp, #-20]	; 0xffffffec
   1e3a4:	ldr	r0, [fp, #-4]
   1e3a8:	ldr	r1, [fp, #-16]
   1e3ac:	ldr	r2, [fp, #8]
   1e3b0:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   1e3b4:	ldr	r0, [fp, #-4]
   1e3b8:	ldr	r1, [r0, #32]
   1e3bc:	add	r1, r1, #1
   1e3c0:	str	r1, [r0, #32]
   1e3c4:	ldr	r0, [fp, #-4]
   1e3c8:	ldr	r1, [r0, #20]
   1e3cc:	add	r2, r1, #1
   1e3d0:	str	r2, [r0, #20]
   1e3d4:	movw	r0, #91	; 0x5b
   1e3d8:	strb	r0, [r1]
   1e3dc:	ldr	r0, [sp, #24]
   1e3e0:	cmp	r0, #0
   1e3e4:	beq	1e464 <flatcc_json_printer_string_vector_field@@Base+0x158>
   1e3e8:	b	1e3ec <flatcc_json_printer_string_vector_field@@Base+0xe0>
   1e3ec:	ldr	r0, [fp, #-4]
   1e3f0:	ldrsb	r0, [r0, #25]
   1e3f4:	cmp	r0, #0
   1e3f8:	beq	1e420 <flatcc_json_printer_string_vector_field@@Base+0x114>
   1e3fc:	ldr	r0, [fp, #-4]
   1e400:	ldr	r1, [r0, #20]
   1e404:	add	r2, r1, #1
   1e408:	str	r2, [r0, #20]
   1e40c:	movw	r0, #10
   1e410:	strb	r0, [r1]
   1e414:	ldr	r0, [fp, #-4]
   1e418:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1e41c:	b	1e428 <flatcc_json_printer_string_vector_field@@Base+0x11c>
   1e420:	ldr	r0, [fp, #-4]
   1e424:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1e428:	b	1e42c <flatcc_json_printer_string_vector_field@@Base+0x120>
   1e42c:	ldr	r0, [fp, #-4]
   1e430:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e434:	str	r0, [sp, #16]
   1e438:	mov	r0, r1
   1e43c:	bl	179d4 <flatcc_json_printer_string_field@@Base+0x258>
   1e440:	ldr	r1, [sp, #16]
   1e444:	str	r0, [sp, #12]
   1e448:	mov	r0, r1
   1e44c:	ldr	r1, [sp, #12]
   1e450:	bl	17990 <flatcc_json_printer_string_field@@Base+0x214>
   1e454:	ldr	r0, [sp, #24]
   1e458:	mvn	r1, #0
   1e45c:	add	r0, r0, r1
   1e460:	str	r0, [sp, #24]
   1e464:	b	1e468 <flatcc_json_printer_string_vector_field@@Base+0x15c>
   1e468:	ldr	r0, [sp, #24]
   1e46c:	mvn	r1, #0
   1e470:	add	r1, r0, r1
   1e474:	str	r1, [sp, #24]
   1e478:	cmp	r0, #0
   1e47c:	beq	1e510 <flatcc_json_printer_string_vector_field@@Base+0x204>
   1e480:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e484:	add	r0, r0, #4
   1e488:	str	r0, [fp, #-20]	; 0xffffffec
   1e48c:	ldr	r0, [fp, #-4]
   1e490:	ldr	r1, [r0, #20]
   1e494:	add	r2, r1, #1
   1e498:	str	r2, [r0, #20]
   1e49c:	movw	r0, #44	; 0x2c
   1e4a0:	strb	r0, [r1]
   1e4a4:	ldr	r0, [fp, #-4]
   1e4a8:	ldrsb	r0, [r0, #25]
   1e4ac:	cmp	r0, #0
   1e4b0:	beq	1e4d8 <flatcc_json_printer_string_vector_field@@Base+0x1cc>
   1e4b4:	ldr	r0, [fp, #-4]
   1e4b8:	ldr	r1, [r0, #20]
   1e4bc:	add	r2, r1, #1
   1e4c0:	str	r2, [r0, #20]
   1e4c4:	movw	r0, #10
   1e4c8:	strb	r0, [r1]
   1e4cc:	ldr	r0, [fp, #-4]
   1e4d0:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1e4d4:	b	1e4e0 <flatcc_json_printer_string_vector_field@@Base+0x1d4>
   1e4d8:	ldr	r0, [fp, #-4]
   1e4dc:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1e4e0:	b	1e4e4 <flatcc_json_printer_string_vector_field@@Base+0x1d8>
   1e4e4:	ldr	r0, [fp, #-4]
   1e4e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e4ec:	str	r0, [sp, #8]
   1e4f0:	mov	r0, r1
   1e4f4:	bl	179d4 <flatcc_json_printer_string_field@@Base+0x258>
   1e4f8:	ldr	r1, [sp, #8]
   1e4fc:	str	r0, [sp, #4]
   1e500:	mov	r0, r1
   1e504:	ldr	r1, [sp, #4]
   1e508:	bl	17990 <flatcc_json_printer_string_field@@Base+0x214>
   1e50c:	b	1e468 <flatcc_json_printer_string_vector_field@@Base+0x15c>
   1e510:	b	1e514 <flatcc_json_printer_string_vector_field@@Base+0x208>
   1e514:	ldr	r0, [fp, #-4]
   1e518:	ldrsb	r0, [r0, #25]
   1e51c:	cmp	r0, #0
   1e520:	beq	1e558 <flatcc_json_printer_string_vector_field@@Base+0x24c>
   1e524:	ldr	r0, [fp, #-4]
   1e528:	ldr	r1, [r0, #20]
   1e52c:	add	r2, r1, #1
   1e530:	str	r2, [r0, #20]
   1e534:	movw	r0, #10
   1e538:	strb	r0, [r1]
   1e53c:	ldr	r0, [fp, #-4]
   1e540:	ldr	r1, [r0, #32]
   1e544:	mvn	r2, #0
   1e548:	add	r1, r1, r2
   1e54c:	str	r1, [r0, #32]
   1e550:	ldr	r0, [fp, #-4]
   1e554:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1e558:	ldr	r0, [fp, #-4]
   1e55c:	ldr	r1, [r0, #20]
   1e560:	add	r2, r1, #1
   1e564:	str	r2, [r0, #20]
   1e568:	movw	r0, #93	; 0x5d
   1e56c:	strb	r0, [r1]
   1e570:	b	1e574 <flatcc_json_printer_string_vector_field@@Base+0x268>
   1e574:	mov	sp, fp
   1e578:	pop	{fp, pc}

0001e57c <flatcc_json_printer_table_vector_field@@Base>:
   1e57c:	push	{fp, lr}
   1e580:	mov	fp, sp
   1e584:	sub	sp, sp, #48	; 0x30
   1e588:	ldr	ip, [fp, #12]
   1e58c:	ldr	lr, [fp, #8]
   1e590:	str	r0, [fp, #-4]
   1e594:	str	r1, [fp, #-8]
   1e598:	str	r2, [fp, #-12]
   1e59c:	str	r3, [fp, #-16]
   1e5a0:	ldr	r0, [fp, #-8]
   1e5a4:	ldr	r1, [fp, #-12]
   1e5a8:	str	lr, [sp, #20]
   1e5ac:	str	ip, [sp, #16]
   1e5b0:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   1e5b4:	str	r0, [fp, #-20]	; 0xffffffec
   1e5b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e5bc:	movw	r1, #0
   1e5c0:	cmp	r0, r1
   1e5c4:	beq	1e780 <flatcc_json_printer_table_vector_field@@Base+0x204>
   1e5c8:	ldr	r0, [fp, #-8]
   1e5cc:	ldr	r1, [r0, #16]
   1e5d0:	add	r2, r1, #1
   1e5d4:	str	r2, [r0, #16]
   1e5d8:	cmp	r1, #0
   1e5dc:	beq	1e5f8 <flatcc_json_printer_table_vector_field@@Base+0x7c>
   1e5e0:	ldr	r0, [fp, #-4]
   1e5e4:	ldr	r1, [r0, #20]
   1e5e8:	add	r2, r1, #1
   1e5ec:	str	r2, [r0, #20]
   1e5f0:	movw	r0, #44	; 0x2c
   1e5f4:	strb	r0, [r1]
   1e5f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e5fc:	bl	179d4 <flatcc_json_printer_string_field@@Base+0x258>
   1e600:	str	r0, [fp, #-20]	; 0xffffffec
   1e604:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e608:	bl	1a7d8 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   1e60c:	str	r0, [sp, #24]
   1e610:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e614:	add	r0, r0, #4
   1e618:	str	r0, [fp, #-20]	; 0xffffffec
   1e61c:	ldr	r0, [fp, #-4]
   1e620:	ldr	r1, [fp, #-16]
   1e624:	ldr	r2, [fp, #8]
   1e628:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   1e62c:	ldr	r0, [fp, #-4]
   1e630:	ldr	r1, [r0, #32]
   1e634:	add	r1, r1, #1
   1e638:	str	r1, [r0, #32]
   1e63c:	ldr	r0, [fp, #-4]
   1e640:	ldr	r1, [r0, #20]
   1e644:	add	r2, r1, #1
   1e648:	str	r2, [r0, #20]
   1e64c:	movw	r0, #91	; 0x5b
   1e650:	strb	r0, [r1]
   1e654:	ldr	r0, [sp, #24]
   1e658:	cmp	r0, #0
   1e65c:	beq	1e6a4 <flatcc_json_printer_table_vector_field@@Base+0x128>
   1e660:	ldr	r0, [fp, #-4]
   1e664:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e668:	str	r0, [sp, #12]
   1e66c:	mov	r0, r1
   1e670:	bl	179d4 <flatcc_json_printer_string_field@@Base+0x258>
   1e674:	ldr	r1, [fp, #-8]
   1e678:	ldr	r2, [r1, #12]
   1e67c:	ldr	r3, [fp, #12]
   1e680:	ldr	r1, [sp, #12]
   1e684:	str	r0, [sp, #8]
   1e688:	mov	r0, r1
   1e68c:	ldr	r1, [sp, #8]
   1e690:	bl	1e788 <flatcc_json_printer_table_vector_field@@Base+0x20c>
   1e694:	ldr	r0, [sp, #24]
   1e698:	mvn	r1, #0
   1e69c:	add	r0, r0, r1
   1e6a0:	str	r0, [sp, #24]
   1e6a4:	b	1e6a8 <flatcc_json_printer_table_vector_field@@Base+0x12c>
   1e6a8:	ldr	r0, [sp, #24]
   1e6ac:	mvn	r1, #0
   1e6b0:	add	r1, r0, r1
   1e6b4:	str	r1, [sp, #24]
   1e6b8:	cmp	r0, #0
   1e6bc:	beq	1e71c <flatcc_json_printer_table_vector_field@@Base+0x1a0>
   1e6c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e6c4:	add	r0, r0, #4
   1e6c8:	str	r0, [fp, #-20]	; 0xffffffec
   1e6cc:	ldr	r0, [fp, #-4]
   1e6d0:	ldr	r1, [r0, #20]
   1e6d4:	add	r2, r1, #1
   1e6d8:	str	r2, [r0, #20]
   1e6dc:	movw	r0, #44	; 0x2c
   1e6e0:	strb	r0, [r1]
   1e6e4:	ldr	r0, [fp, #-4]
   1e6e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e6ec:	str	r0, [sp, #4]
   1e6f0:	mov	r0, r1
   1e6f4:	bl	179d4 <flatcc_json_printer_string_field@@Base+0x258>
   1e6f8:	ldr	r1, [fp, #-8]
   1e6fc:	ldr	r2, [r1, #12]
   1e700:	ldr	r3, [fp, #12]
   1e704:	ldr	r1, [sp, #4]
   1e708:	str	r0, [sp]
   1e70c:	mov	r0, r1
   1e710:	ldr	r1, [sp]
   1e714:	bl	1e788 <flatcc_json_printer_table_vector_field@@Base+0x20c>
   1e718:	b	1e6a8 <flatcc_json_printer_table_vector_field@@Base+0x12c>
   1e71c:	b	1e720 <flatcc_json_printer_table_vector_field@@Base+0x1a4>
   1e720:	ldr	r0, [fp, #-4]
   1e724:	ldrsb	r0, [r0, #25]
   1e728:	cmp	r0, #0
   1e72c:	beq	1e764 <flatcc_json_printer_table_vector_field@@Base+0x1e8>
   1e730:	ldr	r0, [fp, #-4]
   1e734:	ldr	r1, [r0, #20]
   1e738:	add	r2, r1, #1
   1e73c:	str	r2, [r0, #20]
   1e740:	movw	r0, #10
   1e744:	strb	r0, [r1]
   1e748:	ldr	r0, [fp, #-4]
   1e74c:	ldr	r1, [r0, #32]
   1e750:	mvn	r2, #0
   1e754:	add	r1, r1, r2
   1e758:	str	r1, [r0, #32]
   1e75c:	ldr	r0, [fp, #-4]
   1e760:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1e764:	ldr	r0, [fp, #-4]
   1e768:	ldr	r1, [r0, #20]
   1e76c:	add	r2, r1, #1
   1e770:	str	r2, [r0, #20]
   1e774:	movw	r0, #93	; 0x5d
   1e778:	strb	r0, [r1]
   1e77c:	b	1e780 <flatcc_json_printer_table_vector_field@@Base+0x204>
   1e780:	mov	sp, fp
   1e784:	pop	{fp, pc}
   1e788:	push	{fp, lr}
   1e78c:	mov	fp, sp
   1e790:	sub	sp, sp, #48	; 0x30
   1e794:	str	r0, [fp, #-4]
   1e798:	str	r1, [fp, #-8]
   1e79c:	str	r2, [fp, #-12]
   1e7a0:	str	r3, [fp, #-16]
   1e7a4:	ldr	r0, [fp, #-12]
   1e7a8:	mvn	r1, #0
   1e7ac:	add	r0, r0, r1
   1e7b0:	str	r0, [fp, #-12]
   1e7b4:	cmp	r0, #0
   1e7b8:	bne	1e7cc <flatcc_json_printer_table_vector_field@@Base+0x250>
   1e7bc:	ldr	r0, [fp, #-4]
   1e7c0:	movw	r1, #2
   1e7c4:	bl	1ed00 <flatcc_json_printer_union_vector_field@@Base+0x438>
   1e7c8:	b	1e8c0 <flatcc_json_printer_table_vector_field@@Base+0x344>
   1e7cc:	b	1e7d0 <flatcc_json_printer_table_vector_field@@Base+0x254>
   1e7d0:	ldr	r0, [fp, #-4]
   1e7d4:	ldr	r1, [r0, #32]
   1e7d8:	add	r1, r1, #1
   1e7dc:	str	r1, [r0, #32]
   1e7e0:	ldr	r0, [fp, #-4]
   1e7e4:	ldr	r1, [r0, #20]
   1e7e8:	add	r2, r1, #1
   1e7ec:	str	r2, [r0, #20]
   1e7f0:	movw	r0, #123	; 0x7b
   1e7f4:	strb	r0, [r1]
   1e7f8:	movw	r0, #0
   1e7fc:	str	r0, [sp, #28]
   1e800:	ldr	r0, [fp, #-12]
   1e804:	str	r0, [sp, #24]
   1e808:	ldr	r0, [fp, #-8]
   1e80c:	str	r0, [sp, #12]
   1e810:	ldr	r0, [fp, #-8]
   1e814:	ldr	r1, [fp, #-8]
   1e818:	str	r0, [sp, #8]
   1e81c:	mov	r0, r1
   1e820:	bl	22000 <flatcc_json_printer_clear@@Base+0x1d0c>
   1e824:	movw	r1, #0
   1e828:	sub	r0, r1, r0
   1e82c:	ldr	r1, [sp, #8]
   1e830:	add	r0, r1, r0
   1e834:	str	r0, [sp, #16]
   1e838:	ldr	r0, [sp, #16]
   1e83c:	bl	21a68 <flatcc_json_printer_clear@@Base+0x1774>
   1e840:	uxth	r0, r0
   1e844:	str	r0, [sp, #20]
   1e848:	ldr	r0, [fp, #-16]
   1e84c:	ldr	r1, [fp, #-4]
   1e850:	str	r0, [sp, #4]
   1e854:	mov	r0, r1
   1e858:	add	r1, sp, #12
   1e85c:	ldr	lr, [sp, #4]
   1e860:	blx	lr
   1e864:	ldr	r0, [fp, #-4]
   1e868:	ldrsb	r0, [r0, #25]
   1e86c:	cmp	r0, #0
   1e870:	beq	1e8a8 <flatcc_json_printer_table_vector_field@@Base+0x32c>
   1e874:	ldr	r0, [fp, #-4]
   1e878:	ldr	r1, [r0, #20]
   1e87c:	add	r2, r1, #1
   1e880:	str	r2, [r0, #20]
   1e884:	movw	r0, #10
   1e888:	strb	r0, [r1]
   1e88c:	ldr	r0, [fp, #-4]
   1e890:	ldr	r1, [r0, #32]
   1e894:	mvn	r2, #0
   1e898:	add	r1, r1, r2
   1e89c:	str	r1, [r0, #32]
   1e8a0:	ldr	r0, [fp, #-4]
   1e8a4:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1e8a8:	ldr	r0, [fp, #-4]
   1e8ac:	ldr	r1, [r0, #20]
   1e8b0:	add	r2, r1, #1
   1e8b4:	str	r2, [r0, #20]
   1e8b8:	movw	r0, #125	; 0x7d
   1e8bc:	strb	r0, [r1]
   1e8c0:	mov	sp, fp
   1e8c4:	pop	{fp, pc}

0001e8c8 <flatcc_json_printer_union_vector_field@@Base>:
   1e8c8:	push	{r4, sl, fp, lr}
   1e8cc:	add	fp, sp, #8
   1e8d0:	sub	sp, sp, #192	; 0xc0
   1e8d4:	ldr	ip, [fp, #16]
   1e8d8:	ldr	lr, [fp, #12]
   1e8dc:	ldr	r4, [fp, #8]
   1e8e0:	str	r0, [fp, #-12]
   1e8e4:	str	r1, [fp, #-16]
   1e8e8:	str	r2, [fp, #-20]	; 0xffffffec
   1e8ec:	str	r3, [fp, #-24]	; 0xffffffe8
   1e8f0:	ldr	r0, [fp, #-16]
   1e8f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e8f8:	sub	r1, r1, #1
   1e8fc:	str	r4, [sp, #32]
   1e900:	str	lr, [sp, #28]
   1e904:	str	ip, [sp, #24]
   1e908:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   1e90c:	str	r0, [fp, #-28]	; 0xffffffe4
   1e910:	ldr	r0, [fp, #-16]
   1e914:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e918:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   1e91c:	str	r0, [fp, #-32]	; 0xffffffe0
   1e920:	ldr	r0, [fp, #-16]
   1e924:	ldr	r0, [r0, #12]
   1e928:	str	r0, [sp, #40]	; 0x28
   1e92c:	ldr	r0, [fp, #8]
   1e930:	cmp	r0, #100	; 0x64
   1e934:	ble	1e964 <flatcc_json_printer_union_vector_field@@Base+0x9c>
   1e938:	ldr	r0, [fp, #-12]
   1e93c:	movw	r1, #1
   1e940:	bl	1ed00 <flatcc_json_printer_union_vector_field@@Base+0x438>
   1e944:	ldr	r0, [pc, #936]	; 1ecf4 <flatcc_json_printer_union_vector_field@@Base+0x42c>
   1e948:	add	r0, pc, r0
   1e94c:	ldr	r1, [pc, #932]	; 1ecf8 <flatcc_json_printer_union_vector_field@@Base+0x430>
   1e950:	add	r1, pc, r1
   1e954:	ldr	lr, [pc, #928]	; 1ecfc <flatcc_json_printer_union_vector_field@@Base+0x434>
   1e958:	add	r3, pc, lr
   1e95c:	movw	r2, #843	; 0x34b
   1e960:	bl	12984 <__assert_fail@plt>
   1e964:	ldr	r0, [pc, #900]	; 1ecf0 <flatcc_json_printer_union_vector_field@@Base+0x428>
   1e968:	add	r0, pc, r0
   1e96c:	add	r1, sp, #51	; 0x33
   1e970:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e974:	ldr	r3, [fp, #8]
   1e978:	str	r0, [sp, #20]
   1e97c:	mov	r0, r1
   1e980:	str	r1, [sp, #16]
   1e984:	mov	r1, r2
   1e988:	mov	r2, r3
   1e98c:	bl	128ac <memcpy@plt>
   1e990:	ldr	r0, [fp, #8]
   1e994:	ldr	r1, [sp, #16]
   1e998:	add	r0, r1, r0
   1e99c:	ldr	r2, [sp, #20]
   1e9a0:	ldrb	r3, [r2]
   1e9a4:	strb	r3, [r0]
   1e9a8:	ldrb	r3, [r2, #1]
   1e9ac:	strb	r3, [r0, #1]
   1e9b0:	ldrb	r3, [r2, #2]
   1e9b4:	strb	r3, [r0, #2]
   1e9b8:	ldrb	r3, [r2, #3]
   1e9bc:	strb	r3, [r0, #3]
   1e9c0:	ldrb	r3, [r2, #4]
   1e9c4:	strb	r3, [r0, #4]
   1e9c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e9cc:	movw	r3, #0
   1e9d0:	cmp	r0, r3
   1e9d4:	beq	1ece8 <flatcc_json_printer_union_vector_field@@Base+0x420>
   1e9d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e9dc:	movw	r1, #0
   1e9e0:	cmp	r0, r1
   1e9e4:	beq	1ece8 <flatcc_json_printer_union_vector_field@@Base+0x420>
   1e9e8:	add	r3, sp, #51	; 0x33
   1e9ec:	ldr	r0, [fp, #-12]
   1e9f0:	ldr	r1, [fp, #-16]
   1e9f4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e9f8:	sub	r2, r2, #1
   1e9fc:	ldr	ip, [fp, #8]
   1ea00:	add	ip, ip, #5
   1ea04:	ldr	lr, [fp, #12]
   1ea08:	str	ip, [sp]
   1ea0c:	str	lr, [sp, #4]
   1ea10:	bl	1c350 <flatcc_json_printer_utype_enum_vector_field@@Base>
   1ea14:	ldr	r0, [fp, #-16]
   1ea18:	ldr	r1, [r0, #16]
   1ea1c:	add	r2, r1, #1
   1ea20:	str	r2, [r0, #16]
   1ea24:	cmp	r1, #0
   1ea28:	beq	1ea44 <flatcc_json_printer_union_vector_field@@Base+0x17c>
   1ea2c:	ldr	r0, [fp, #-12]
   1ea30:	ldr	r1, [r0, #20]
   1ea34:	add	r2, r1, #1
   1ea38:	str	r2, [r0, #20]
   1ea3c:	movw	r0, #44	; 0x2c
   1ea40:	strb	r0, [r1]
   1ea44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ea48:	bl	179d4 <flatcc_json_printer_string_field@@Base+0x258>
   1ea4c:	str	r0, [fp, #-32]	; 0xffffffe0
   1ea50:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ea54:	bl	179d4 <flatcc_json_printer_string_field@@Base+0x258>
   1ea58:	str	r0, [fp, #-28]	; 0xffffffe4
   1ea5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ea60:	bl	1a7d8 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   1ea64:	str	r0, [fp, #-44]	; 0xffffffd4
   1ea68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ea6c:	add	r0, r0, #4
   1ea70:	str	r0, [fp, #-32]	; 0xffffffe0
   1ea74:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ea78:	add	r0, r0, #4
   1ea7c:	str	r0, [fp, #-28]	; 0xffffffe4
   1ea80:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ea84:	str	r0, [fp, #-36]	; 0xffffffdc
   1ea88:	ldr	r0, [fp, #-12]
   1ea8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ea90:	ldr	r2, [fp, #8]
   1ea94:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   1ea98:	ldr	r0, [fp, #-12]
   1ea9c:	ldr	r1, [r0, #32]
   1eaa0:	add	r1, r1, #1
   1eaa4:	str	r1, [r0, #32]
   1eaa8:	ldr	r0, [fp, #-12]
   1eaac:	ldr	r1, [r0, #20]
   1eab0:	add	r2, r1, #1
   1eab4:	str	r2, [r0, #20]
   1eab8:	movw	r0, #91	; 0x5b
   1eabc:	strb	r0, [r1]
   1eac0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1eac4:	cmp	r0, #0
   1eac8:	beq	1eb88 <flatcc_json_printer_union_vector_field@@Base+0x2c0>
   1eacc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ead0:	bl	1a7fc <flatcc_json_printer_utype_vector_field@@Base+0x2a0>
   1ead4:	strb	r0, [fp, #-37]	; 0xffffffdb
   1ead8:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   1eadc:	cmp	r0, #0
   1eae0:	beq	1eb14 <flatcc_json_printer_union_vector_field@@Base+0x24c>
   1eae4:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   1eae8:	strb	r0, [sp, #44]	; 0x2c
   1eaec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1eaf0:	str	r0, [sp, #36]	; 0x24
   1eaf4:	ldr	r0, [fp, #16]
   1eaf8:	ldr	r1, [fp, #-12]
   1eafc:	str	r0, [sp, #12]
   1eb00:	mov	r0, r1
   1eb04:	add	r1, sp, #36	; 0x24
   1eb08:	ldr	r2, [sp, #12]
   1eb0c:	blx	r2
   1eb10:	b	1eb78 <flatcc_json_printer_union_vector_field@@Base+0x2b0>
   1eb14:	b	1eb18 <flatcc_json_printer_union_vector_field@@Base+0x250>
   1eb18:	ldr	r0, [fp, #-12]
   1eb1c:	ldr	r1, [r0, #20]
   1eb20:	add	r2, r1, #1
   1eb24:	str	r2, [r0, #20]
   1eb28:	movw	r0, #110	; 0x6e
   1eb2c:	strb	r0, [r1]
   1eb30:	ldr	r0, [fp, #-12]
   1eb34:	ldr	r1, [r0, #20]
   1eb38:	add	r2, r1, #1
   1eb3c:	str	r2, [r0, #20]
   1eb40:	movw	r0, #117	; 0x75
   1eb44:	strb	r0, [r1]
   1eb48:	ldr	r0, [fp, #-12]
   1eb4c:	ldr	r1, [r0, #20]
   1eb50:	add	r2, r1, #1
   1eb54:	str	r2, [r0, #20]
   1eb58:	movw	r0, #108	; 0x6c
   1eb5c:	strb	r0, [r1]
   1eb60:	ldr	r1, [fp, #-12]
   1eb64:	ldr	r2, [r1, #20]
   1eb68:	add	r3, r2, #1
   1eb6c:	str	r3, [r1, #20]
   1eb70:	strb	r0, [r2]
   1eb74:	b	1eb78 <flatcc_json_printer_union_vector_field@@Base+0x2b0>
   1eb78:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1eb7c:	mvn	r1, #0
   1eb80:	add	r0, r0, r1
   1eb84:	str	r0, [fp, #-44]	; 0xffffffd4
   1eb88:	b	1eb8c <flatcc_json_printer_union_vector_field@@Base+0x2c4>
   1eb8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1eb90:	mvn	r1, #0
   1eb94:	add	r1, r0, r1
   1eb98:	str	r1, [fp, #-44]	; 0xffffffd4
   1eb9c:	cmp	r0, #0
   1eba0:	beq	1ec84 <flatcc_json_printer_union_vector_field@@Base+0x3bc>
   1eba4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1eba8:	add	r0, r0, #4
   1ebac:	str	r0, [fp, #-32]	; 0xffffffe0
   1ebb0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ebb4:	add	r0, r0, #1
   1ebb8:	str	r0, [fp, #-36]	; 0xffffffdc
   1ebbc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ebc0:	bl	1a7fc <flatcc_json_printer_utype_vector_field@@Base+0x2a0>
   1ebc4:	strb	r0, [fp, #-37]	; 0xffffffdb
   1ebc8:	ldr	r0, [fp, #-12]
   1ebcc:	ldr	lr, [r0, #20]
   1ebd0:	add	r1, lr, #1
   1ebd4:	str	r1, [r0, #20]
   1ebd8:	movw	r0, #44	; 0x2c
   1ebdc:	strb	r0, [lr]
   1ebe0:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   1ebe4:	cmp	r0, #0
   1ebe8:	beq	1ec1c <flatcc_json_printer_union_vector_field@@Base+0x354>
   1ebec:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   1ebf0:	strb	r0, [sp, #44]	; 0x2c
   1ebf4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ebf8:	str	r0, [sp, #36]	; 0x24
   1ebfc:	ldr	r0, [fp, #16]
   1ec00:	ldr	r1, [fp, #-12]
   1ec04:	str	r0, [sp, #8]
   1ec08:	mov	r0, r1
   1ec0c:	add	r1, sp, #36	; 0x24
   1ec10:	ldr	r2, [sp, #8]
   1ec14:	blx	r2
   1ec18:	b	1ec80 <flatcc_json_printer_union_vector_field@@Base+0x3b8>
   1ec1c:	b	1ec20 <flatcc_json_printer_union_vector_field@@Base+0x358>
   1ec20:	ldr	r0, [fp, #-12]
   1ec24:	ldr	r1, [r0, #20]
   1ec28:	add	r2, r1, #1
   1ec2c:	str	r2, [r0, #20]
   1ec30:	movw	r0, #110	; 0x6e
   1ec34:	strb	r0, [r1]
   1ec38:	ldr	r0, [fp, #-12]
   1ec3c:	ldr	r1, [r0, #20]
   1ec40:	add	r2, r1, #1
   1ec44:	str	r2, [r0, #20]
   1ec48:	movw	r0, #117	; 0x75
   1ec4c:	strb	r0, [r1]
   1ec50:	ldr	r0, [fp, #-12]
   1ec54:	ldr	r1, [r0, #20]
   1ec58:	add	r2, r1, #1
   1ec5c:	str	r2, [r0, #20]
   1ec60:	movw	r0, #108	; 0x6c
   1ec64:	strb	r0, [r1]
   1ec68:	ldr	r1, [fp, #-12]
   1ec6c:	ldr	r2, [r1, #20]
   1ec70:	add	r3, r2, #1
   1ec74:	str	r3, [r1, #20]
   1ec78:	strb	r0, [r2]
   1ec7c:	b	1ec80 <flatcc_json_printer_union_vector_field@@Base+0x3b8>
   1ec80:	b	1eb8c <flatcc_json_printer_union_vector_field@@Base+0x2c4>
   1ec84:	b	1ec88 <flatcc_json_printer_union_vector_field@@Base+0x3c0>
   1ec88:	ldr	r0, [fp, #-12]
   1ec8c:	ldrsb	r0, [r0, #25]
   1ec90:	cmp	r0, #0
   1ec94:	beq	1eccc <flatcc_json_printer_union_vector_field@@Base+0x404>
   1ec98:	ldr	r0, [fp, #-12]
   1ec9c:	ldr	r1, [r0, #20]
   1eca0:	add	r2, r1, #1
   1eca4:	str	r2, [r0, #20]
   1eca8:	movw	r0, #10
   1ecac:	strb	r0, [r1]
   1ecb0:	ldr	r0, [fp, #-12]
   1ecb4:	ldr	r1, [r0, #32]
   1ecb8:	mvn	r2, #0
   1ecbc:	add	r1, r1, r2
   1ecc0:	str	r1, [r0, #32]
   1ecc4:	ldr	r0, [fp, #-12]
   1ecc8:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1eccc:	ldr	r0, [fp, #-12]
   1ecd0:	ldr	r1, [r0, #20]
   1ecd4:	add	r2, r1, #1
   1ecd8:	str	r2, [r0, #20]
   1ecdc:	movw	r0, #93	; 0x5d
   1ece0:	strb	r0, [r1]
   1ece4:	b	1ece8 <flatcc_json_printer_union_vector_field@@Base+0x420>
   1ece8:	sub	sp, fp, #8
   1ecec:	pop	{r4, sl, fp, pc}
   1ecf0:	andeq	r4, r0, sl, asr #2
   1ecf4:	andeq	r4, r0, r3, lsr #32
   1ecf8:	andeq	r4, r0, r6, lsr r0
   1ecfc:	muleq	r0, r0, r0
   1ed00:	sub	sp, sp, #8
   1ed04:	str	r0, [sp, #4]
   1ed08:	str	r1, [sp]
   1ed0c:	ldr	r0, [sp, #4]
   1ed10:	ldr	r0, [r0, #36]	; 0x24
   1ed14:	cmp	r0, #0
   1ed18:	bne	1ed28 <flatcc_json_printer_union_vector_field@@Base+0x460>
   1ed1c:	ldr	r0, [sp]
   1ed20:	ldr	r1, [sp, #4]
   1ed24:	str	r0, [r1, #36]	; 0x24
   1ed28:	add	sp, sp, #8
   1ed2c:	bx	lr

0001ed30 <flatcc_json_printer_table_field@@Base>:
   1ed30:	push	{fp, lr}
   1ed34:	mov	fp, sp
   1ed38:	sub	sp, sp, #40	; 0x28
   1ed3c:	ldr	ip, [fp, #12]
   1ed40:	ldr	lr, [fp, #8]
   1ed44:	str	r0, [fp, #-4]
   1ed48:	str	r1, [fp, #-8]
   1ed4c:	str	r2, [fp, #-12]
   1ed50:	str	r3, [fp, #-16]
   1ed54:	ldr	r0, [fp, #-8]
   1ed58:	ldr	r1, [fp, #-12]
   1ed5c:	str	lr, [sp, #16]
   1ed60:	str	ip, [sp, #12]
   1ed64:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   1ed68:	str	r0, [sp, #20]
   1ed6c:	ldr	r0, [sp, #20]
   1ed70:	movw	r1, #0
   1ed74:	cmp	r0, r1
   1ed78:	beq	1edf0 <flatcc_json_printer_table_field@@Base+0xc0>
   1ed7c:	ldr	r0, [fp, #-8]
   1ed80:	ldr	r1, [r0, #16]
   1ed84:	add	r2, r1, #1
   1ed88:	str	r2, [r0, #16]
   1ed8c:	cmp	r1, #0
   1ed90:	beq	1edac <flatcc_json_printer_table_field@@Base+0x7c>
   1ed94:	ldr	r0, [fp, #-4]
   1ed98:	ldr	r1, [r0, #20]
   1ed9c:	add	r2, r1, #1
   1eda0:	str	r2, [r0, #20]
   1eda4:	movw	r0, #44	; 0x2c
   1eda8:	strb	r0, [r1]
   1edac:	ldr	r0, [fp, #-4]
   1edb0:	ldr	r1, [fp, #-16]
   1edb4:	ldr	r2, [fp, #8]
   1edb8:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   1edbc:	ldr	r0, [fp, #-4]
   1edc0:	ldr	r1, [sp, #20]
   1edc4:	str	r0, [sp, #8]
   1edc8:	mov	r0, r1
   1edcc:	bl	179d4 <flatcc_json_printer_string_field@@Base+0x258>
   1edd0:	ldr	r1, [fp, #-8]
   1edd4:	ldr	r2, [r1, #12]
   1edd8:	ldr	r3, [fp, #12]
   1eddc:	ldr	r1, [sp, #8]
   1ede0:	str	r0, [sp, #4]
   1ede4:	mov	r0, r1
   1ede8:	ldr	r1, [sp, #4]
   1edec:	bl	1e788 <flatcc_json_printer_table_vector_field@@Base+0x20c>
   1edf0:	mov	sp, fp
   1edf4:	pop	{fp, pc}

0001edf8 <flatcc_json_printer_union_field@@Base>:
   1edf8:	push	{r4, sl, fp, lr}
   1edfc:	add	fp, sp, #8
   1ee00:	sub	sp, sp, #64	; 0x40
   1ee04:	ldr	ip, [fp, #16]
   1ee08:	ldr	lr, [fp, #12]
   1ee0c:	ldr	r4, [fp, #8]
   1ee10:	str	r0, [fp, #-12]
   1ee14:	str	r1, [fp, #-16]
   1ee18:	str	r2, [fp, #-20]	; 0xffffffec
   1ee1c:	str	r3, [fp, #-24]	; 0xffffffe8
   1ee20:	ldr	r0, [fp, #-16]
   1ee24:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ee28:	sub	r1, r1, #1
   1ee2c:	str	r4, [sp, #20]
   1ee30:	str	lr, [sp, #16]
   1ee34:	str	ip, [sp, #12]
   1ee38:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   1ee3c:	str	r0, [fp, #-28]	; 0xffffffe4
   1ee40:	ldr	r0, [fp, #-16]
   1ee44:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ee48:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   1ee4c:	str	r0, [fp, #-32]	; 0xffffffe0
   1ee50:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ee54:	movw	r1, #0
   1ee58:	cmp	r0, r1
   1ee5c:	beq	1ee70 <flatcc_json_printer_union_field@@Base+0x78>
   1ee60:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ee64:	movw	r1, #0
   1ee68:	cmp	r0, r1
   1ee6c:	bne	1ee74 <flatcc_json_printer_union_field@@Base+0x7c>
   1ee70:	b	1f100 <flatcc_json_printer_union_field@@Base+0x308>
   1ee74:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ee78:	bl	1a7fc <flatcc_json_printer_utype_vector_field@@Base+0x2a0>
   1ee7c:	strb	r0, [fp, #-33]	; 0xffffffdf
   1ee80:	ldr	r0, [fp, #-16]
   1ee84:	ldr	lr, [r0, #16]
   1ee88:	add	r1, lr, #1
   1ee8c:	str	r1, [r0, #16]
   1ee90:	cmp	lr, #0
   1ee94:	beq	1eeb0 <flatcc_json_printer_union_field@@Base+0xb8>
   1ee98:	ldr	r0, [fp, #-12]
   1ee9c:	ldr	r1, [r0, #20]
   1eea0:	add	r2, r1, #1
   1eea4:	str	r2, [r0, #20]
   1eea8:	movw	r0, #44	; 0x2c
   1eeac:	strb	r0, [r1]
   1eeb0:	b	1eeb4 <flatcc_json_printer_union_field@@Base+0xbc>
   1eeb4:	ldr	r0, [fp, #-12]
   1eeb8:	ldrsb	r0, [r0, #25]
   1eebc:	cmp	r0, #0
   1eec0:	beq	1eee8 <flatcc_json_printer_union_field@@Base+0xf0>
   1eec4:	ldr	r0, [fp, #-12]
   1eec8:	ldr	r1, [r0, #20]
   1eecc:	add	r2, r1, #1
   1eed0:	str	r2, [r0, #20]
   1eed4:	movw	r0, #10
   1eed8:	strb	r0, [r1]
   1eedc:	ldr	r0, [fp, #-12]
   1eee0:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1eee4:	b	1eef0 <flatcc_json_printer_union_field@@Base+0xf8>
   1eee8:	ldr	r0, [fp, #-12]
   1eeec:	bl	15918 <flatcc_json_printer_nl@@Base+0x38>
   1eef0:	b	1eef4 <flatcc_json_printer_union_field@@Base+0xfc>
   1eef4:	ldr	r0, [fp, #-12]
   1eef8:	ldr	r0, [r0, #20]
   1eefc:	movw	r1, #34	; 0x22
   1ef00:	strb	r1, [r0]
   1ef04:	ldr	r0, [fp, #-12]
   1ef08:	ldrsb	r0, [r0, #26]
   1ef0c:	cmp	r0, #0
   1ef10:	movw	r0, #0
   1ef14:	movne	r0, #1
   1ef18:	mvn	r1, #0
   1ef1c:	eor	r0, r0, r1
   1ef20:	and	r0, r0, #1
   1ef24:	ldr	r1, [fp, #-12]
   1ef28:	ldr	r2, [r1, #20]
   1ef2c:	add	r0, r2, r0
   1ef30:	str	r0, [r1, #20]
   1ef34:	ldr	r0, [fp, #-12]
   1ef38:	ldr	r0, [r0, #20]
   1ef3c:	ldr	r1, [fp, #8]
   1ef40:	add	r0, r0, r1
   1ef44:	ldr	r1, [fp, #-12]
   1ef48:	ldr	r1, [r1, #16]
   1ef4c:	cmp	r0, r1
   1ef50:	bcs	1ef80 <flatcc_json_printer_union_field@@Base+0x188>
   1ef54:	ldr	r0, [fp, #-12]
   1ef58:	ldr	r0, [r0, #20]
   1ef5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ef60:	ldr	r2, [fp, #8]
   1ef64:	bl	128ac <memcpy@plt>
   1ef68:	ldr	r0, [fp, #8]
   1ef6c:	ldr	r1, [fp, #-12]
   1ef70:	ldr	r2, [r1, #20]
   1ef74:	add	r0, r2, r0
   1ef78:	str	r0, [r1, #20]
   1ef7c:	b	1ef90 <flatcc_json_printer_union_field@@Base+0x198>
   1ef80:	ldr	r0, [fp, #-12]
   1ef84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ef88:	ldr	r2, [fp, #8]
   1ef8c:	bl	15864 <flatcc_json_printer_write@@Base+0x30>
   1ef90:	ldr	r0, [pc, #368]	; 1f108 <flatcc_json_printer_union_field@@Base+0x310>
   1ef94:	add	r1, pc, r0
   1ef98:	ldr	r0, [fp, #-12]
   1ef9c:	movw	r2, #5
   1efa0:	bl	15864 <flatcc_json_printer_write@@Base+0x30>
   1efa4:	ldr	r0, [fp, #-12]
   1efa8:	ldr	r0, [r0, #20]
   1efac:	movw	r1, #34	; 0x22
   1efb0:	strb	r1, [r0]
   1efb4:	ldr	r0, [fp, #-12]
   1efb8:	ldrsb	r0, [r0, #26]
   1efbc:	cmp	r0, #0
   1efc0:	movw	r0, #0
   1efc4:	movne	r0, #1
   1efc8:	mvn	r1, #0
   1efcc:	eor	r0, r0, r1
   1efd0:	and	r0, r0, #1
   1efd4:	ldr	r1, [fp, #-12]
   1efd8:	ldr	r2, [r1, #20]
   1efdc:	add	r0, r2, r0
   1efe0:	str	r0, [r1, #20]
   1efe4:	ldr	r0, [fp, #-12]
   1efe8:	ldr	r1, [r0, #20]
   1efec:	add	r2, r1, #1
   1eff0:	str	r2, [r0, #20]
   1eff4:	movw	r0, #58	; 0x3a
   1eff8:	strb	r0, [r1]
   1effc:	ldr	r0, [fp, #-12]
   1f000:	ldr	r0, [r0, #20]
   1f004:	movw	r1, #32
   1f008:	strb	r1, [r0]
   1f00c:	ldr	r0, [fp, #-12]
   1f010:	ldrsb	r0, [r0, #25]
   1f014:	cmp	r0, #0
   1f018:	movw	r0, #0
   1f01c:	movne	r0, #1
   1f020:	mvn	r1, #0
   1f024:	eor	r0, r0, r1
   1f028:	eor	r0, r0, r1
   1f02c:	and	r0, r0, #1
   1f030:	ldr	r1, [fp, #-12]
   1f034:	ldr	r2, [r1, #20]
   1f038:	add	r0, r2, r0
   1f03c:	str	r0, [r1, #20]
   1f040:	ldr	r0, [fp, #-12]
   1f044:	ldrsb	r0, [r0, #27]
   1f048:	cmp	r0, #0
   1f04c:	beq	1f078 <flatcc_json_printer_union_field@@Base+0x280>
   1f050:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   1f054:	ldr	r1, [fp, #-12]
   1f058:	ldr	r1, [r1, #20]
   1f05c:	and	r0, r0, #255	; 0xff
   1f060:	bl	15ac0 <flatcc_json_printer_uint8@@Base+0x40>
   1f064:	ldr	r1, [fp, #-12]
   1f068:	ldr	lr, [r1, #20]
   1f06c:	add	r0, lr, r0
   1f070:	str	r0, [r1, #20]
   1f074:	b	1f094 <flatcc_json_printer_union_field@@Base+0x29c>
   1f078:	ldr	r0, [fp, #12]
   1f07c:	ldr	r1, [fp, #-12]
   1f080:	str	r0, [sp, #8]
   1f084:	mov	r0, r1
   1f088:	ldrb	r1, [fp, #-33]	; 0xffffffdf
   1f08c:	ldr	r2, [sp, #8]
   1f090:	blx	r2
   1f094:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   1f098:	cmp	r0, #0
   1f09c:	beq	1f100 <flatcc_json_printer_union_field@@Base+0x308>
   1f0a0:	ldr	r0, [fp, #-12]
   1f0a4:	ldr	r1, [r0, #20]
   1f0a8:	add	r2, r1, #1
   1f0ac:	str	r2, [r0, #20]
   1f0b0:	movw	r0, #44	; 0x2c
   1f0b4:	strb	r0, [r1]
   1f0b8:	ldr	r0, [fp, #-12]
   1f0bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f0c0:	ldr	r2, [fp, #8]
   1f0c4:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   1f0c8:	ldr	r0, [fp, #-16]
   1f0cc:	ldr	r0, [r0, #12]
   1f0d0:	str	r0, [sp, #28]
   1f0d4:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   1f0d8:	strb	r0, [sp, #32]
   1f0dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f0e0:	str	r0, [sp, #24]
   1f0e4:	ldr	r0, [fp, #16]
   1f0e8:	ldr	r1, [fp, #-12]
   1f0ec:	str	r0, [sp, #4]
   1f0f0:	mov	r0, r1
   1f0f4:	add	r1, sp, #24
   1f0f8:	ldr	r2, [sp, #4]
   1f0fc:	blx	r2
   1f100:	sub	sp, fp, #8
   1f104:	pop	{r4, sl, fp, pc}
   1f108:	andeq	r3, r0, lr, lsl fp

0001f10c <flatcc_json_printer_union_table@@Base>:
   1f10c:	push	{fp, lr}
   1f110:	mov	fp, sp
   1f114:	sub	sp, sp, #24
   1f118:	str	r0, [fp, #-4]
   1f11c:	str	r1, [fp, #-8]
   1f120:	str	r2, [sp, #12]
   1f124:	ldr	r0, [fp, #-4]
   1f128:	ldr	r1, [fp, #-8]
   1f12c:	ldr	r1, [r1]
   1f130:	str	r0, [sp, #8]
   1f134:	mov	r0, r1
   1f138:	bl	179d4 <flatcc_json_printer_string_field@@Base+0x258>
   1f13c:	ldr	r1, [fp, #-8]
   1f140:	ldr	r2, [r1, #4]
   1f144:	ldr	r3, [sp, #12]
   1f148:	ldr	r1, [sp, #8]
   1f14c:	str	r0, [sp, #4]
   1f150:	mov	r0, r1
   1f154:	ldr	r1, [sp, #4]
   1f158:	bl	1e788 <flatcc_json_printer_table_vector_field@@Base+0x20c>
   1f15c:	mov	sp, fp
   1f160:	pop	{fp, pc}

0001f164 <flatcc_json_printer_union_struct@@Base>:
   1f164:	push	{fp, lr}
   1f168:	mov	fp, sp
   1f16c:	sub	sp, sp, #24
   1f170:	str	r0, [fp, #-4]
   1f174:	str	r1, [fp, #-8]
   1f178:	str	r2, [sp, #12]
   1f17c:	ldr	r0, [fp, #-4]
   1f180:	ldr	r1, [r0, #32]
   1f184:	add	r1, r1, #1
   1f188:	str	r1, [r0, #32]
   1f18c:	ldr	r0, [fp, #-4]
   1f190:	ldr	r1, [r0, #20]
   1f194:	add	r2, r1, #1
   1f198:	str	r2, [r0, #20]
   1f19c:	movw	r0, #123	; 0x7b
   1f1a0:	strb	r0, [r1]
   1f1a4:	ldr	r0, [sp, #12]
   1f1a8:	ldr	r1, [fp, #-4]
   1f1ac:	ldr	r2, [fp, #-8]
   1f1b0:	ldr	r2, [r2]
   1f1b4:	str	r0, [sp, #8]
   1f1b8:	mov	r0, r2
   1f1bc:	str	r1, [sp, #4]
   1f1c0:	bl	179d4 <flatcc_json_printer_string_field@@Base+0x258>
   1f1c4:	ldr	r1, [sp, #4]
   1f1c8:	str	r0, [sp]
   1f1cc:	mov	r0, r1
   1f1d0:	ldr	r1, [sp]
   1f1d4:	ldr	r2, [sp, #8]
   1f1d8:	blx	r2
   1f1dc:	ldr	r0, [fp, #-4]
   1f1e0:	ldrsb	r0, [r0, #25]
   1f1e4:	cmp	r0, #0
   1f1e8:	beq	1f220 <flatcc_json_printer_union_struct@@Base+0xbc>
   1f1ec:	ldr	r0, [fp, #-4]
   1f1f0:	ldr	r1, [r0, #20]
   1f1f4:	add	r2, r1, #1
   1f1f8:	str	r2, [r0, #20]
   1f1fc:	movw	r0, #10
   1f200:	strb	r0, [r1]
   1f204:	ldr	r0, [fp, #-4]
   1f208:	ldr	r1, [r0, #32]
   1f20c:	mvn	r2, #0
   1f210:	add	r1, r1, r2
   1f214:	str	r1, [r0, #32]
   1f218:	ldr	r0, [fp, #-4]
   1f21c:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1f220:	ldr	r0, [fp, #-4]
   1f224:	ldr	r1, [r0, #20]
   1f228:	add	r2, r1, #1
   1f22c:	str	r2, [r0, #20]
   1f230:	movw	r0, #125	; 0x7d
   1f234:	strb	r0, [r1]
   1f238:	mov	sp, fp
   1f23c:	pop	{fp, pc}

0001f240 <flatcc_json_printer_union_string@@Base>:
   1f240:	push	{fp, lr}
   1f244:	mov	fp, sp
   1f248:	sub	sp, sp, #16
   1f24c:	str	r0, [fp, #-4]
   1f250:	str	r1, [sp, #8]
   1f254:	ldr	r0, [fp, #-4]
   1f258:	ldr	r1, [sp, #8]
   1f25c:	ldr	r1, [r1]
   1f260:	str	r0, [sp, #4]
   1f264:	mov	r0, r1
   1f268:	bl	179d4 <flatcc_json_printer_string_field@@Base+0x258>
   1f26c:	ldr	r1, [sp, #4]
   1f270:	str	r0, [sp]
   1f274:	mov	r0, r1
   1f278:	ldr	r1, [sp]
   1f27c:	bl	17990 <flatcc_json_printer_string_field@@Base+0x214>
   1f280:	mov	sp, fp
   1f284:	pop	{fp, pc}

0001f288 <flatcc_json_printer_embedded_struct_field@@Base>:
   1f288:	push	{r4, sl, fp, lr}
   1f28c:	add	fp, sp, #8
   1f290:	sub	sp, sp, #32
   1f294:	ldr	ip, [fp, #16]
   1f298:	ldr	lr, [fp, #12]
   1f29c:	ldr	r4, [fp, #8]
   1f2a0:	str	r0, [fp, #-12]
   1f2a4:	str	r1, [fp, #-16]
   1f2a8:	str	r2, [sp, #20]
   1f2ac:	str	r3, [sp, #16]
   1f2b0:	ldr	r0, [fp, #-16]
   1f2b4:	cmp	r0, #0
   1f2b8:	str	r4, [sp, #12]
   1f2bc:	str	lr, [sp, #8]
   1f2c0:	str	ip, [sp, #4]
   1f2c4:	beq	1f2e0 <flatcc_json_printer_embedded_struct_field@@Base+0x58>
   1f2c8:	ldr	r0, [fp, #-12]
   1f2cc:	ldr	r1, [r0, #20]
   1f2d0:	add	r2, r1, #1
   1f2d4:	str	r2, [r0, #20]
   1f2d8:	movw	r0, #44	; 0x2c
   1f2dc:	strb	r0, [r1]
   1f2e0:	ldr	r0, [fp, #-12]
   1f2e4:	ldr	r1, [fp, #8]
   1f2e8:	ldr	r2, [fp, #12]
   1f2ec:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   1f2f0:	ldr	r0, [fp, #-12]
   1f2f4:	ldr	r1, [r0, #32]
   1f2f8:	add	r1, r1, #1
   1f2fc:	str	r1, [r0, #32]
   1f300:	ldr	r0, [fp, #-12]
   1f304:	ldr	r1, [r0, #20]
   1f308:	add	r2, r1, #1
   1f30c:	str	r2, [r0, #20]
   1f310:	movw	r0, #123	; 0x7b
   1f314:	strb	r0, [r1]
   1f318:	ldr	r0, [fp, #16]
   1f31c:	ldr	r1, [fp, #-12]
   1f320:	ldr	r2, [sp, #20]
   1f324:	ldr	r3, [sp, #16]
   1f328:	add	r2, r2, r3
   1f32c:	str	r0, [sp]
   1f330:	mov	r0, r1
   1f334:	mov	r1, r2
   1f338:	ldr	r2, [sp]
   1f33c:	blx	r2
   1f340:	ldr	r0, [fp, #-12]
   1f344:	ldrsb	r0, [r0, #25]
   1f348:	cmp	r0, #0
   1f34c:	beq	1f384 <flatcc_json_printer_embedded_struct_field@@Base+0xfc>
   1f350:	ldr	r0, [fp, #-12]
   1f354:	ldr	r1, [r0, #20]
   1f358:	add	r2, r1, #1
   1f35c:	str	r2, [r0, #20]
   1f360:	movw	r0, #10
   1f364:	strb	r0, [r1]
   1f368:	ldr	r0, [fp, #-12]
   1f36c:	ldr	r1, [r0, #32]
   1f370:	mvn	r2, #0
   1f374:	add	r1, r1, r2
   1f378:	str	r1, [r0, #32]
   1f37c:	ldr	r0, [fp, #-12]
   1f380:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1f384:	ldr	r0, [fp, #-12]
   1f388:	ldr	r1, [r0, #20]
   1f38c:	add	r2, r1, #1
   1f390:	str	r2, [r0, #20]
   1f394:	movw	r0, #125	; 0x7d
   1f398:	strb	r0, [r1]
   1f39c:	sub	sp, fp, #8
   1f3a0:	pop	{r4, sl, fp, pc}

0001f3a4 <flatcc_json_printer_struct_field@@Base>:
   1f3a4:	push	{fp, lr}
   1f3a8:	mov	fp, sp
   1f3ac:	sub	sp, sp, #32
   1f3b0:	ldr	ip, [fp, #12]
   1f3b4:	ldr	lr, [fp, #8]
   1f3b8:	str	r0, [fp, #-4]
   1f3bc:	str	r1, [fp, #-8]
   1f3c0:	str	r2, [fp, #-12]
   1f3c4:	str	r3, [sp, #16]
   1f3c8:	ldr	r0, [fp, #-8]
   1f3cc:	ldr	r1, [fp, #-12]
   1f3d0:	str	lr, [sp, #8]
   1f3d4:	str	ip, [sp, #4]
   1f3d8:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   1f3dc:	str	r0, [sp, #12]
   1f3e0:	ldr	r0, [sp, #12]
   1f3e4:	movw	r1, #0
   1f3e8:	cmp	r0, r1
   1f3ec:	beq	1f4d8 <flatcc_json_printer_struct_field@@Base+0x134>
   1f3f0:	ldr	r0, [fp, #-8]
   1f3f4:	ldr	r1, [r0, #16]
   1f3f8:	add	r2, r1, #1
   1f3fc:	str	r2, [r0, #16]
   1f400:	cmp	r1, #0
   1f404:	beq	1f420 <flatcc_json_printer_struct_field@@Base+0x7c>
   1f408:	ldr	r0, [fp, #-4]
   1f40c:	ldr	r1, [r0, #20]
   1f410:	add	r2, r1, #1
   1f414:	str	r2, [r0, #20]
   1f418:	movw	r0, #44	; 0x2c
   1f41c:	strb	r0, [r1]
   1f420:	ldr	r0, [fp, #-4]
   1f424:	ldr	r1, [sp, #16]
   1f428:	ldr	r2, [fp, #8]
   1f42c:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   1f430:	ldr	r0, [fp, #-4]
   1f434:	ldr	r1, [r0, #32]
   1f438:	add	r1, r1, #1
   1f43c:	str	r1, [r0, #32]
   1f440:	ldr	r0, [fp, #-4]
   1f444:	ldr	r1, [r0, #20]
   1f448:	add	r2, r1, #1
   1f44c:	str	r2, [r0, #20]
   1f450:	movw	r0, #123	; 0x7b
   1f454:	strb	r0, [r1]
   1f458:	ldr	r0, [fp, #12]
   1f45c:	ldr	r1, [fp, #-4]
   1f460:	ldr	r2, [sp, #12]
   1f464:	str	r0, [sp]
   1f468:	mov	r0, r1
   1f46c:	mov	r1, r2
   1f470:	ldr	r2, [sp]
   1f474:	blx	r2
   1f478:	ldr	r0, [fp, #-4]
   1f47c:	ldrsb	r0, [r0, #25]
   1f480:	cmp	r0, #0
   1f484:	beq	1f4bc <flatcc_json_printer_struct_field@@Base+0x118>
   1f488:	ldr	r0, [fp, #-4]
   1f48c:	ldr	r1, [r0, #20]
   1f490:	add	r2, r1, #1
   1f494:	str	r2, [r0, #20]
   1f498:	movw	r0, #10
   1f49c:	strb	r0, [r1]
   1f4a0:	ldr	r0, [fp, #-4]
   1f4a4:	ldr	r1, [r0, #32]
   1f4a8:	mvn	r2, #0
   1f4ac:	add	r1, r1, r2
   1f4b0:	str	r1, [r0, #32]
   1f4b4:	ldr	r0, [fp, #-4]
   1f4b8:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1f4bc:	ldr	r0, [fp, #-4]
   1f4c0:	ldr	r1, [r0, #20]
   1f4c4:	add	r2, r1, #1
   1f4c8:	str	r2, [r0, #20]
   1f4cc:	movw	r0, #125	; 0x7d
   1f4d0:	strb	r0, [r1]
   1f4d4:	b	1f4d8 <flatcc_json_printer_struct_field@@Base+0x134>
   1f4d8:	mov	sp, fp
   1f4dc:	pop	{fp, pc}

0001f4e0 <flatcc_json_printer_struct_as_root@@Base>:
   1f4e0:	push	{fp, lr}
   1f4e4:	mov	fp, sp
   1f4e8:	sub	sp, sp, #48	; 0x30
   1f4ec:	ldr	ip, [fp, #8]
   1f4f0:	str	r0, [fp, #-8]
   1f4f4:	str	r1, [fp, #-12]
   1f4f8:	str	r2, [fp, #-16]
   1f4fc:	str	r3, [fp, #-20]	; 0xffffffec
   1f500:	ldr	r0, [fp, #-8]
   1f504:	ldr	r1, [fp, #-12]
   1f508:	ldr	r2, [fp, #-16]
   1f50c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f510:	str	ip, [sp, #24]
   1f514:	bl	1f698 <flatcc_json_printer_struct_as_root@@Base+0x1b8>
   1f518:	cmp	r0, #0
   1f51c:	bne	1f52c <flatcc_json_printer_struct_as_root@@Base+0x4c>
   1f520:	mvn	r0, #0
   1f524:	str	r0, [fp, #-4]
   1f528:	b	1f68c <flatcc_json_printer_struct_as_root@@Base+0x1ac>
   1f52c:	b	1f530 <flatcc_json_printer_struct_as_root@@Base+0x50>
   1f530:	ldr	r0, [fp, #-8]
   1f534:	ldr	r1, [r0, #32]
   1f538:	add	r1, r1, #1
   1f53c:	str	r1, [r0, #32]
   1f540:	ldr	r0, [fp, #-8]
   1f544:	ldr	r1, [r0, #20]
   1f548:	add	r2, r1, #1
   1f54c:	str	r2, [r0, #20]
   1f550:	movw	r0, #123	; 0x7b
   1f554:	strb	r0, [r1]
   1f558:	ldr	r0, [fp, #8]
   1f55c:	ldr	r1, [fp, #-8]
   1f560:	ldr	r2, [fp, #-12]
   1f564:	str	r0, [sp, #20]
   1f568:	mov	r0, r2
   1f56c:	str	r1, [sp, #16]
   1f570:	bl	179d4 <flatcc_json_printer_string_field@@Base+0x258>
   1f574:	ldr	r1, [sp, #16]
   1f578:	str	r0, [sp, #12]
   1f57c:	mov	r0, r1
   1f580:	ldr	r1, [sp, #12]
   1f584:	ldr	r2, [sp, #20]
   1f588:	blx	r2
   1f58c:	ldr	r0, [fp, #-8]
   1f590:	ldrsb	r0, [r0, #25]
   1f594:	cmp	r0, #0
   1f598:	beq	1f5d0 <flatcc_json_printer_struct_as_root@@Base+0xf0>
   1f59c:	ldr	r0, [fp, #-8]
   1f5a0:	ldr	r1, [r0, #20]
   1f5a4:	add	r2, r1, #1
   1f5a8:	str	r2, [r0, #20]
   1f5ac:	movw	r0, #10
   1f5b0:	strb	r0, [r1]
   1f5b4:	ldr	r0, [fp, #-8]
   1f5b8:	ldr	r1, [r0, #32]
   1f5bc:	mvn	r2, #0
   1f5c0:	add	r1, r1, r2
   1f5c4:	str	r1, [r0, #32]
   1f5c8:	ldr	r0, [fp, #-8]
   1f5cc:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1f5d0:	ldr	r0, [fp, #-8]
   1f5d4:	ldr	r1, [r0, #20]
   1f5d8:	add	r2, r1, #1
   1f5dc:	str	r2, [r0, #20]
   1f5e0:	movw	r0, #125	; 0x7d
   1f5e4:	strb	r0, [r1]
   1f5e8:	b	1f5ec <flatcc_json_printer_struct_as_root@@Base+0x10c>
   1f5ec:	ldr	r0, [fp, #-8]
   1f5f0:	ldrb	r0, [r0, #25]
   1f5f4:	cmp	r0, #0
   1f5f8:	beq	1f624 <flatcc_json_printer_struct_as_root@@Base+0x144>
   1f5fc:	ldr	r0, [fp, #-8]
   1f600:	ldr	r0, [r0, #32]
   1f604:	cmp	r0, #0
   1f608:	bne	1f624 <flatcc_json_printer_struct_as_root@@Base+0x144>
   1f60c:	ldr	r0, [fp, #-8]
   1f610:	ldr	r1, [r0, #20]
   1f614:	add	r2, r1, #1
   1f618:	str	r2, [r0, #20]
   1f61c:	movw	r0, #10
   1f620:	strb	r0, [r1]
   1f624:	ldr	r0, [fp, #-8]
   1f628:	ldr	r0, [r0, #44]	; 0x2c
   1f62c:	ldr	r1, [fp, #-8]
   1f630:	str	r0, [sp, #8]
   1f634:	mov	r0, r1
   1f638:	movw	r1, #1
   1f63c:	ldr	r2, [sp, #8]
   1f640:	blx	r2
   1f644:	ldr	r0, [fp, #-8]
   1f648:	bl	1f7b4 <flatcc_json_printer_struct_as_root@@Base+0x2d4>
   1f64c:	cmp	r0, #0
   1f650:	beq	1f660 <flatcc_json_printer_struct_as_root@@Base+0x180>
   1f654:	mvn	r0, #0
   1f658:	str	r0, [sp, #4]
   1f65c:	b	1f684 <flatcc_json_printer_struct_as_root@@Base+0x1a4>
   1f660:	ldr	r0, [fp, #-8]
   1f664:	ldr	r0, [r0, #12]
   1f668:	ldr	r1, [fp, #-8]
   1f66c:	ldr	r1, [r1, #20]
   1f670:	ldr	r2, [fp, #-8]
   1f674:	ldr	r2, [r2]
   1f678:	sub	r1, r1, r2
   1f67c:	add	r0, r0, r1
   1f680:	str	r0, [sp, #4]
   1f684:	ldr	r0, [sp, #4]
   1f688:	str	r0, [fp, #-4]
   1f68c:	ldr	r0, [fp, #-4]
   1f690:	mov	sp, fp
   1f694:	pop	{fp, pc}
   1f698:	push	{fp, lr}
   1f69c:	mov	fp, sp
   1f6a0:	sub	sp, sp, #32
   1f6a4:	str	r0, [fp, #-4]
   1f6a8:	str	r1, [fp, #-8]
   1f6ac:	str	r2, [fp, #-12]
   1f6b0:	str	r3, [sp, #16]
   1f6b4:	movw	r0, #0
   1f6b8:	str	r0, [sp, #8]
   1f6bc:	ldr	r1, [fp, #-8]
   1f6c0:	cmp	r1, r0
   1f6c4:	beq	1f6d4 <flatcc_json_printer_struct_as_root@@Base+0x1f4>
   1f6c8:	ldr	r0, [fp, #-12]
   1f6cc:	cmp	r0, #8
   1f6d0:	bcs	1f700 <flatcc_json_printer_struct_as_root@@Base+0x220>
   1f6d4:	ldr	r0, [fp, #-4]
   1f6d8:	movw	r1, #1
   1f6dc:	bl	1ed00 <flatcc_json_printer_union_vector_field@@Base+0x438>
   1f6e0:	ldr	r0, [pc, #192]	; 1f7a8 <flatcc_json_printer_struct_as_root@@Base+0x2c8>
   1f6e4:	add	r0, pc, r0
   1f6e8:	ldr	r1, [pc, #188]	; 1f7ac <flatcc_json_printer_struct_as_root@@Base+0x2cc>
   1f6ec:	add	r1, pc, r1
   1f6f0:	ldr	lr, [pc, #184]	; 1f7b0 <flatcc_json_printer_struct_as_root@@Base+0x2d0>
   1f6f4:	add	r3, pc, lr
   1f6f8:	movw	r2, #1019	; 0x3fb
   1f6fc:	bl	12984 <__assert_fail@plt>
   1f700:	ldr	r0, [sp, #16]
   1f704:	movw	r1, #0
   1f708:	cmp	r0, r1
   1f70c:	beq	1f790 <flatcc_json_printer_struct_as_root@@Base+0x2b0>
   1f710:	add	r0, sp, #8
   1f714:	ldr	r1, [sp, #16]
   1f718:	movw	r2, #4
   1f71c:	bl	12948 <strncpy@plt>
   1f720:	ldr	r1, [sp, #8]
   1f724:	str	r0, [sp, #4]
   1f728:	mov	r0, r1
   1f72c:	bl	22038 <flatcc_json_printer_clear@@Base+0x1d44>
   1f730:	str	r0, [sp, #8]
   1f734:	ldr	r0, [fp, #-8]
   1f738:	add	r0, r0, #4
   1f73c:	bl	2204c <flatcc_json_printer_clear@@Base+0x1d58>
   1f740:	str	r0, [sp, #12]
   1f744:	ldr	r0, [sp, #8]
   1f748:	cmp	r0, #0
   1f74c:	beq	1f78c <flatcc_json_printer_struct_as_root@@Base+0x2ac>
   1f750:	ldr	r0, [sp, #12]
   1f754:	ldr	r1, [sp, #8]
   1f758:	cmp	r0, r1
   1f75c:	beq	1f78c <flatcc_json_printer_struct_as_root@@Base+0x2ac>
   1f760:	ldr	r0, [fp, #-4]
   1f764:	movw	r1, #1
   1f768:	bl	1ed00 <flatcc_json_printer_union_vector_field@@Base+0x438>
   1f76c:	ldr	r0, [pc, #40]	; 1f79c <flatcc_json_printer_struct_as_root@@Base+0x2bc>
   1f770:	add	r0, pc, r0
   1f774:	ldr	r1, [pc, #36]	; 1f7a0 <flatcc_json_printer_struct_as_root@@Base+0x2c0>
   1f778:	add	r1, pc, r1
   1f77c:	ldr	lr, [pc, #32]	; 1f7a4 <flatcc_json_printer_struct_as_root@@Base+0x2c4>
   1f780:	add	r3, pc, lr
   1f784:	movw	r2, #1028	; 0x404
   1f788:	bl	12984 <__assert_fail@plt>
   1f78c:	b	1f790 <flatcc_json_printer_struct_as_root@@Base+0x2b0>
   1f790:	movw	r0, #1
   1f794:	mov	sp, fp
   1f798:	pop	{fp, pc}
   1f79c:	andeq	r3, r0, r7, lsl #15
   1f7a0:	andeq	r3, r0, lr, lsl #4
   1f7a4:	andeq	r3, r0, r8, lsr #14
   1f7a8:	andeq	r3, r0, r5, lsr #15
   1f7ac:	muleq	r0, sl, r2
   1f7b0:			; <UNDEFINED> instruction: 0x000037b4
   1f7b4:	sub	sp, sp, #4
   1f7b8:	str	r0, [sp]
   1f7bc:	ldr	r0, [sp]
   1f7c0:	ldr	r0, [r0, #36]	; 0x24
   1f7c4:	add	sp, sp, #4
   1f7c8:	bx	lr

0001f7cc <flatcc_json_printer_table_as_root@@Base>:
   1f7cc:	push	{fp, lr}
   1f7d0:	mov	fp, sp
   1f7d4:	sub	sp, sp, #40	; 0x28
   1f7d8:	ldr	ip, [fp, #8]
   1f7dc:	str	r0, [fp, #-8]
   1f7e0:	str	r1, [fp, #-12]
   1f7e4:	str	r2, [fp, #-16]
   1f7e8:	str	r3, [sp, #20]
   1f7ec:	ldr	r0, [fp, #-8]
   1f7f0:	ldr	r1, [fp, #-12]
   1f7f4:	ldr	r2, [fp, #-16]
   1f7f8:	ldr	r3, [sp, #20]
   1f7fc:	str	ip, [sp, #16]
   1f800:	bl	1f698 <flatcc_json_printer_struct_as_root@@Base+0x1b8>
   1f804:	cmp	r0, #0
   1f808:	bne	1f818 <flatcc_json_printer_table_as_root@@Base+0x4c>
   1f80c:	mvn	r0, #0
   1f810:	str	r0, [fp, #-4]
   1f814:	b	1f8e8 <flatcc_json_printer_table_as_root@@Base+0x11c>
   1f818:	ldr	r0, [fp, #-8]
   1f81c:	ldr	r1, [fp, #-12]
   1f820:	str	r0, [sp, #12]
   1f824:	mov	r0, r1
   1f828:	bl	179d4 <flatcc_json_printer_string_field@@Base+0x258>
   1f82c:	ldr	r3, [fp, #8]
   1f830:	ldr	r1, [sp, #12]
   1f834:	str	r0, [sp, #8]
   1f838:	mov	r0, r1
   1f83c:	ldr	r1, [sp, #8]
   1f840:	movw	r2, #100	; 0x64
   1f844:	bl	1e788 <flatcc_json_printer_table_vector_field@@Base+0x20c>
   1f848:	ldr	r0, [fp, #-8]
   1f84c:	ldrb	r0, [r0, #25]
   1f850:	cmp	r0, #0
   1f854:	beq	1f880 <flatcc_json_printer_table_as_root@@Base+0xb4>
   1f858:	ldr	r0, [fp, #-8]
   1f85c:	ldr	r0, [r0, #32]
   1f860:	cmp	r0, #0
   1f864:	bne	1f880 <flatcc_json_printer_table_as_root@@Base+0xb4>
   1f868:	ldr	r0, [fp, #-8]
   1f86c:	ldr	r1, [r0, #20]
   1f870:	add	r2, r1, #1
   1f874:	str	r2, [r0, #20]
   1f878:	movw	r0, #10
   1f87c:	strb	r0, [r1]
   1f880:	ldr	r0, [fp, #-8]
   1f884:	ldr	r0, [r0, #44]	; 0x2c
   1f888:	ldr	r1, [fp, #-8]
   1f88c:	str	r0, [sp, #4]
   1f890:	mov	r0, r1
   1f894:	movw	r1, #1
   1f898:	ldr	r2, [sp, #4]
   1f89c:	blx	r2
   1f8a0:	ldr	r0, [fp, #-8]
   1f8a4:	bl	1f7b4 <flatcc_json_printer_struct_as_root@@Base+0x2d4>
   1f8a8:	cmp	r0, #0
   1f8ac:	beq	1f8bc <flatcc_json_printer_table_as_root@@Base+0xf0>
   1f8b0:	mvn	r0, #0
   1f8b4:	str	r0, [sp]
   1f8b8:	b	1f8e0 <flatcc_json_printer_table_as_root@@Base+0x114>
   1f8bc:	ldr	r0, [fp, #-8]
   1f8c0:	ldr	r0, [r0, #12]
   1f8c4:	ldr	r1, [fp, #-8]
   1f8c8:	ldr	r1, [r1, #20]
   1f8cc:	ldr	r2, [fp, #-8]
   1f8d0:	ldr	r2, [r2]
   1f8d4:	sub	r1, r1, r2
   1f8d8:	add	r0, r0, r1
   1f8dc:	str	r0, [sp]
   1f8e0:	ldr	r0, [sp]
   1f8e4:	str	r0, [fp, #-4]
   1f8e8:	ldr	r0, [fp, #-4]
   1f8ec:	mov	sp, fp
   1f8f0:	pop	{fp, pc}

0001f8f4 <flatcc_json_printer_struct_as_nested_root@@Base>:
   1f8f4:	push	{r4, sl, fp, lr}
   1f8f8:	add	fp, sp, #8
   1f8fc:	sub	sp, sp, #56	; 0x38
   1f900:	ldr	ip, [fp, #16]
   1f904:	ldr	lr, [fp, #12]
   1f908:	ldr	r4, [fp, #8]
   1f90c:	str	r0, [fp, #-12]
   1f910:	str	r1, [fp, #-16]
   1f914:	str	r2, [fp, #-20]	; 0xffffffec
   1f918:	str	r3, [fp, #-24]	; 0xffffffe8
   1f91c:	ldr	r0, [fp, #-16]
   1f920:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f924:	str	r4, [sp, #28]
   1f928:	str	lr, [sp, #24]
   1f92c:	str	ip, [sp, #20]
   1f930:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   1f934:	str	r0, [fp, #-28]	; 0xffffffe4
   1f938:	movw	r1, #0
   1f93c:	cmp	r1, r0
   1f940:	bne	1f948 <flatcc_json_printer_struct_as_nested_root@@Base+0x54>
   1f944:	b	1fa8c <flatcc_json_printer_struct_as_nested_root@@Base+0x198>
   1f948:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f94c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f950:	str	r0, [sp, #16]
   1f954:	mov	r0, r1
   1f958:	bl	1a7d8 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   1f95c:	ldr	r1, [sp, #16]
   1f960:	add	r0, r1, r0
   1f964:	str	r0, [fp, #-28]	; 0xffffffe4
   1f968:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f96c:	bl	1a7d8 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   1f970:	str	r0, [sp, #32]
   1f974:	ldr	r0, [fp, #-12]
   1f978:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f97c:	ldr	r2, [sp, #32]
   1f980:	ldr	r3, [fp, #12]
   1f984:	bl	1f698 <flatcc_json_printer_struct_as_root@@Base+0x1b8>
   1f988:	cmp	r0, #0
   1f98c:	bne	1f994 <flatcc_json_printer_struct_as_nested_root@@Base+0xa0>
   1f990:	b	1fa8c <flatcc_json_printer_struct_as_nested_root@@Base+0x198>
   1f994:	ldr	r0, [fp, #-16]
   1f998:	ldr	r1, [r0, #16]
   1f99c:	add	r2, r1, #1
   1f9a0:	str	r2, [r0, #16]
   1f9a4:	cmp	r1, #0
   1f9a8:	beq	1f9c4 <flatcc_json_printer_struct_as_nested_root@@Base+0xd0>
   1f9ac:	ldr	r0, [fp, #-12]
   1f9b0:	ldr	r1, [r0, #20]
   1f9b4:	add	r2, r1, #1
   1f9b8:	str	r2, [r0, #20]
   1f9bc:	movw	r0, #44	; 0x2c
   1f9c0:	strb	r0, [r1]
   1f9c4:	ldr	r0, [fp, #-12]
   1f9c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f9cc:	ldr	r2, [fp, #8]
   1f9d0:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   1f9d4:	ldr	r0, [fp, #-12]
   1f9d8:	ldr	r1, [r0, #32]
   1f9dc:	add	r1, r1, #1
   1f9e0:	str	r1, [r0, #32]
   1f9e4:	ldr	r0, [fp, #-12]
   1f9e8:	ldr	r1, [r0, #20]
   1f9ec:	add	r2, r1, #1
   1f9f0:	str	r2, [r0, #20]
   1f9f4:	movw	r0, #123	; 0x7b
   1f9f8:	strb	r0, [r1]
   1f9fc:	ldr	r0, [fp, #16]
   1fa00:	ldr	r1, [fp, #-12]
   1fa04:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1fa08:	str	r0, [sp, #12]
   1fa0c:	mov	r0, r2
   1fa10:	str	r1, [sp, #8]
   1fa14:	bl	179d4 <flatcc_json_printer_string_field@@Base+0x258>
   1fa18:	ldr	r1, [sp, #8]
   1fa1c:	str	r0, [sp, #4]
   1fa20:	mov	r0, r1
   1fa24:	ldr	r1, [sp, #4]
   1fa28:	ldr	r2, [sp, #12]
   1fa2c:	blx	r2
   1fa30:	ldr	r0, [fp, #-12]
   1fa34:	ldrsb	r0, [r0, #25]
   1fa38:	cmp	r0, #0
   1fa3c:	beq	1fa74 <flatcc_json_printer_struct_as_nested_root@@Base+0x180>
   1fa40:	ldr	r0, [fp, #-12]
   1fa44:	ldr	r1, [r0, #20]
   1fa48:	add	r2, r1, #1
   1fa4c:	str	r2, [r0, #20]
   1fa50:	movw	r0, #10
   1fa54:	strb	r0, [r1]
   1fa58:	ldr	r0, [fp, #-12]
   1fa5c:	ldr	r1, [r0, #32]
   1fa60:	mvn	r2, #0
   1fa64:	add	r1, r1, r2
   1fa68:	str	r1, [r0, #32]
   1fa6c:	ldr	r0, [fp, #-12]
   1fa70:	bl	159b4 <flatcc_json_printer_indent@@Base+0x20>
   1fa74:	ldr	r0, [fp, #-12]
   1fa78:	ldr	r1, [r0, #20]
   1fa7c:	add	r2, r1, #1
   1fa80:	str	r2, [r0, #20]
   1fa84:	movw	r0, #125	; 0x7d
   1fa88:	strb	r0, [r1]
   1fa8c:	sub	sp, fp, #8
   1fa90:	pop	{r4, sl, fp, pc}

0001fa94 <flatcc_json_printer_table_as_nested_root@@Base>:
   1fa94:	push	{r4, sl, fp, lr}
   1fa98:	add	fp, sp, #8
   1fa9c:	sub	sp, sp, #48	; 0x30
   1faa0:	ldr	ip, [fp, #16]
   1faa4:	ldr	lr, [fp, #12]
   1faa8:	ldr	r4, [fp, #8]
   1faac:	str	r0, [fp, #-12]
   1fab0:	str	r1, [fp, #-16]
   1fab4:	str	r2, [fp, #-20]	; 0xffffffec
   1fab8:	str	r3, [fp, #-24]	; 0xffffffe8
   1fabc:	ldr	r0, [fp, #-16]
   1fac0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fac4:	str	r4, [sp, #20]
   1fac8:	str	lr, [sp, #16]
   1facc:	str	ip, [sp, #12]
   1fad0:	bl	17830 <flatcc_json_printer_string_field@@Base+0xb4>
   1fad4:	str	r0, [sp, #28]
   1fad8:	movw	r1, #0
   1fadc:	cmp	r1, r0
   1fae0:	bne	1fae8 <flatcc_json_printer_table_as_nested_root@@Base+0x54>
   1fae4:	b	1fbb4 <flatcc_json_printer_table_as_nested_root@@Base+0x120>
   1fae8:	ldr	r0, [sp, #28]
   1faec:	ldr	r1, [sp, #28]
   1faf0:	str	r0, [sp, #8]
   1faf4:	mov	r0, r1
   1faf8:	bl	1a7d8 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   1fafc:	ldr	r1, [sp, #8]
   1fb00:	add	r0, r1, r0
   1fb04:	str	r0, [sp, #28]
   1fb08:	ldr	r0, [sp, #28]
   1fb0c:	bl	1a7d8 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   1fb10:	str	r0, [sp, #24]
   1fb14:	ldr	r0, [sp, #28]
   1fb18:	add	r0, r0, #4
   1fb1c:	str	r0, [sp, #28]
   1fb20:	ldr	r0, [fp, #-12]
   1fb24:	ldr	r1, [sp, #28]
   1fb28:	ldr	r2, [sp, #24]
   1fb2c:	ldr	r3, [fp, #12]
   1fb30:	bl	1f698 <flatcc_json_printer_struct_as_root@@Base+0x1b8>
   1fb34:	cmp	r0, #0
   1fb38:	bne	1fb40 <flatcc_json_printer_table_as_nested_root@@Base+0xac>
   1fb3c:	b	1fbb4 <flatcc_json_printer_table_as_nested_root@@Base+0x120>
   1fb40:	ldr	r0, [fp, #-16]
   1fb44:	ldr	r1, [r0, #16]
   1fb48:	add	r2, r1, #1
   1fb4c:	str	r2, [r0, #16]
   1fb50:	cmp	r1, #0
   1fb54:	beq	1fb70 <flatcc_json_printer_table_as_nested_root@@Base+0xdc>
   1fb58:	ldr	r0, [fp, #-12]
   1fb5c:	ldr	r1, [r0, #20]
   1fb60:	add	r2, r1, #1
   1fb64:	str	r2, [r0, #20]
   1fb68:	movw	r0, #44	; 0x2c
   1fb6c:	strb	r0, [r1]
   1fb70:	ldr	r0, [fp, #-12]
   1fb74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fb78:	ldr	r2, [fp, #8]
   1fb7c:	bl	178c4 <flatcc_json_printer_string_field@@Base+0x148>
   1fb80:	ldr	r0, [fp, #-12]
   1fb84:	ldr	r1, [sp, #28]
   1fb88:	str	r0, [sp, #4]
   1fb8c:	mov	r0, r1
   1fb90:	bl	179d4 <flatcc_json_printer_string_field@@Base+0x258>
   1fb94:	ldr	r1, [fp, #-16]
   1fb98:	ldr	r2, [r1, #12]
   1fb9c:	ldr	r3, [fp, #16]
   1fba0:	ldr	r1, [sp, #4]
   1fba4:	str	r0, [sp]
   1fba8:	mov	r0, r1
   1fbac:	ldr	r1, [sp]
   1fbb0:	bl	1e788 <flatcc_json_printer_table_vector_field@@Base+0x20c>
   1fbb4:	sub	sp, fp, #8
   1fbb8:	pop	{r4, sl, fp, pc}

0001fbbc <flatcc_json_printer_init@@Base>:
   1fbbc:	push	{fp, lr}
   1fbc0:	mov	fp, sp
   1fbc4:	sub	sp, sp, #16
   1fbc8:	str	r0, [sp, #8]
   1fbcc:	str	r1, [sp, #4]
   1fbd0:	ldr	r0, [sp, #8]
   1fbd4:	movw	r1, #0
   1fbd8:	and	r1, r1, #255	; 0xff
   1fbdc:	movw	r2, #48	; 0x30
   1fbe0:	bl	1293c <memset@plt>
   1fbe4:	ldr	r0, [sp, #4]
   1fbe8:	movw	r1, #0
   1fbec:	cmp	r0, r1
   1fbf0:	beq	1fc00 <flatcc_json_printer_init@@Base+0x44>
   1fbf4:	ldr	r0, [sp, #4]
   1fbf8:	str	r0, [sp]
   1fbfc:	b	1fc10 <flatcc_json_printer_init@@Base+0x54>
   1fc00:	ldr	r0, [pc, #240]	; 1fcf8 <flatcc_json_printer_init@@Base+0x13c>
   1fc04:	ldr	r0, [pc, r0]
   1fc08:	ldr	r0, [r0]
   1fc0c:	str	r0, [sp]
   1fc10:	ldr	r0, [sp]
   1fc14:	ldr	r1, [pc, #224]	; 1fcfc <flatcc_json_printer_init@@Base+0x140>
   1fc18:	add	r1, pc, r1
   1fc1c:	ldr	r2, [sp, #8]
   1fc20:	str	r0, [r2, #40]	; 0x28
   1fc24:	ldr	r0, [sp, #8]
   1fc28:	str	r1, [r0, #44]	; 0x2c
   1fc2c:	movw	r0, #16448	; 0x4040
   1fc30:	bl	12900 <malloc@plt>
   1fc34:	ldr	r1, [sp, #8]
   1fc38:	str	r0, [r1]
   1fc3c:	movw	r1, #0
   1fc40:	cmp	r0, r1
   1fc44:	bne	1fc54 <flatcc_json_printer_init@@Base+0x98>
   1fc48:	mvn	r0, #0
   1fc4c:	str	r0, [fp, #-4]
   1fc50:	b	1fcec <flatcc_json_printer_init@@Base+0x130>
   1fc54:	ldr	r0, [sp, #8]
   1fc58:	movw	r1, #1
   1fc5c:	strb	r1, [r0, #24]
   1fc60:	ldr	r0, [sp, #8]
   1fc64:	movw	r1, #16448	; 0x4040
   1fc68:	str	r1, [r0, #4]
   1fc6c:	ldr	r0, [sp, #8]
   1fc70:	movw	r1, #16384	; 0x4000
   1fc74:	str	r1, [r0, #8]
   1fc78:	ldr	r0, [sp, #8]
   1fc7c:	ldr	r0, [r0]
   1fc80:	ldr	r1, [sp, #8]
   1fc84:	str	r0, [r1, #20]
   1fc88:	ldr	r0, [sp, #8]
   1fc8c:	ldr	r0, [r0]
   1fc90:	ldr	r1, [sp, #8]
   1fc94:	ldr	r1, [r1, #8]
   1fc98:	add	r0, r0, r1
   1fc9c:	ldr	r1, [sp, #8]
   1fca0:	str	r0, [r1, #16]
   1fca4:	ldr	r0, [sp, #8]
   1fca8:	ldr	r0, [r0, #8]
   1fcac:	add	r0, r0, #64	; 0x40
   1fcb0:	ldr	r1, [sp, #8]
   1fcb4:	ldr	r1, [r1, #4]
   1fcb8:	cmp	r0, r1
   1fcbc:	bhi	1fcc4 <flatcc_json_printer_init@@Base+0x108>
   1fcc0:	b	1fce4 <flatcc_json_printer_init@@Base+0x128>
   1fcc4:	ldr	r0, [pc, #52]	; 1fd00 <flatcc_json_printer_init@@Base+0x144>
   1fcc8:	add	r0, pc, r0
   1fccc:	ldr	r1, [pc, #48]	; 1fd04 <flatcc_json_printer_init@@Base+0x148>
   1fcd0:	add	r1, pc, r1
   1fcd4:	ldr	r2, [pc, #44]	; 1fd08 <flatcc_json_printer_init@@Base+0x14c>
   1fcd8:	add	r3, pc, r2
   1fcdc:	movw	r2, #1147	; 0x47b
   1fce0:	bl	12984 <__assert_fail@plt>
   1fce4:	movw	r0, #0
   1fce8:	str	r0, [fp, #-4]
   1fcec:	ldr	r0, [fp, #-4]
   1fcf0:	mov	sp, fp
   1fcf4:	pop	{fp, pc}
   1fcf8:	andeq	r4, r1, r4, ror r4
   1fcfc:	andeq	r0, r0, ip, ror #1
   1fd00:	strdeq	r2, [r0], -r0
   1fd04:			; <UNDEFINED> instruction: 0x00002cb6
   1fd08:	andeq	r2, r0, r9, lsl lr
   1fd0c:	push	{fp, lr}
   1fd10:	mov	fp, sp
   1fd14:	sub	sp, sp, #32
   1fd18:	str	r0, [fp, #-4]
   1fd1c:	str	r1, [fp, #-8]
   1fd20:	ldr	r0, [fp, #-8]
   1fd24:	cmp	r0, #0
   1fd28:	bne	1fdf0 <flatcc_json_printer_init@@Base+0x234>
   1fd2c:	ldr	r0, [fp, #-4]
   1fd30:	ldr	r0, [r0, #20]
   1fd34:	ldr	r1, [fp, #-4]
   1fd38:	ldr	r1, [r1, #16]
   1fd3c:	cmp	r0, r1
   1fd40:	bcc	1fdf0 <flatcc_json_printer_init@@Base+0x234>
   1fd44:	ldr	r0, [fp, #-4]
   1fd48:	ldr	r0, [r0, #20]
   1fd4c:	ldr	r1, [fp, #-4]
   1fd50:	ldr	r1, [r1, #16]
   1fd54:	sub	r0, r0, r1
   1fd58:	str	r0, [fp, #-12]
   1fd5c:	ldr	r0, [fp, #-4]
   1fd60:	ldr	r0, [r0]
   1fd64:	ldr	r1, [fp, #-4]
   1fd68:	ldr	r1, [r1, #8]
   1fd6c:	ldr	r2, [fp, #-4]
   1fd70:	ldr	r2, [r2, #40]	; 0x28
   1fd74:	movw	r3, #1
   1fd78:	str	r2, [sp, #12]
   1fd7c:	mov	r2, r3
   1fd80:	ldr	r3, [sp, #12]
   1fd84:	bl	128e8 <fwrite@plt>
   1fd88:	ldr	r1, [fp, #-4]
   1fd8c:	ldr	r1, [r1]
   1fd90:	ldr	r2, [fp, #-4]
   1fd94:	ldr	r2, [r2]
   1fd98:	ldr	r3, [fp, #-4]
   1fd9c:	ldr	r3, [r3, #8]
   1fda0:	add	r2, r2, r3
   1fda4:	ldr	r3, [fp, #-12]
   1fda8:	str	r0, [sp, #8]
   1fdac:	mov	r0, r1
   1fdb0:	mov	r1, r2
   1fdb4:	mov	r2, r3
   1fdb8:	bl	128ac <memcpy@plt>
   1fdbc:	ldr	r0, [fp, #-4]
   1fdc0:	ldr	r0, [r0]
   1fdc4:	ldr	r1, [fp, #-12]
   1fdc8:	add	r0, r0, r1
   1fdcc:	ldr	r1, [fp, #-4]
   1fdd0:	str	r0, [r1, #20]
   1fdd4:	ldr	r0, [fp, #-4]
   1fdd8:	ldr	r0, [r0, #8]
   1fddc:	ldr	r1, [fp, #-4]
   1fde0:	ldr	r2, [r1, #12]
   1fde4:	add	r0, r2, r0
   1fde8:	str	r0, [r1, #12]
   1fdec:	b	1fe58 <flatcc_json_printer_init@@Base+0x29c>
   1fdf0:	ldr	r0, [fp, #-4]
   1fdf4:	ldr	r0, [r0, #20]
   1fdf8:	ldr	r1, [fp, #-4]
   1fdfc:	ldr	r1, [r1]
   1fe00:	sub	r0, r0, r1
   1fe04:	str	r0, [sp, #16]
   1fe08:	ldr	r0, [fp, #-4]
   1fe0c:	ldr	r0, [r0]
   1fe10:	ldr	r1, [sp, #16]
   1fe14:	ldr	r2, [fp, #-4]
   1fe18:	ldr	r2, [r2, #40]	; 0x28
   1fe1c:	movw	r3, #1
   1fe20:	str	r2, [sp, #4]
   1fe24:	mov	r2, r3
   1fe28:	ldr	r3, [sp, #4]
   1fe2c:	bl	128e8 <fwrite@plt>
   1fe30:	ldr	r1, [fp, #-4]
   1fe34:	ldr	r1, [r1]
   1fe38:	ldr	r2, [fp, #-4]
   1fe3c:	str	r1, [r2, #20]
   1fe40:	ldr	r1, [sp, #16]
   1fe44:	ldr	r2, [fp, #-4]
   1fe48:	ldr	r3, [r2, #12]
   1fe4c:	add	r1, r3, r1
   1fe50:	str	r1, [r2, #12]
   1fe54:	str	r0, [sp]
   1fe58:	ldr	r0, [fp, #-4]
   1fe5c:	ldr	r0, [r0, #20]
   1fe60:	movw	r1, #0
   1fe64:	strb	r1, [r0]
   1fe68:	mov	sp, fp
   1fe6c:	pop	{fp, pc}

0001fe70 <flatcc_json_printer_init_buffer@@Base>:
   1fe70:	push	{fp, lr}
   1fe74:	mov	fp, sp
   1fe78:	sub	sp, sp, #24
   1fe7c:	str	r0, [fp, #-8]
   1fe80:	str	r1, [sp, #12]
   1fe84:	str	r2, [sp, #8]
   1fe88:	ldr	r0, [sp, #8]
   1fe8c:	cmp	r0, #64	; 0x40
   1fe90:	bcc	1fe98 <flatcc_json_printer_init_buffer@@Base+0x28>
   1fe94:	b	1feb8 <flatcc_json_printer_init_buffer@@Base+0x48>
   1fe98:	ldr	r0, [pc, #204]	; 1ff6c <flatcc_json_printer_init_buffer@@Base+0xfc>
   1fe9c:	add	r0, pc, r0
   1fea0:	ldr	r1, [pc, #200]	; 1ff70 <flatcc_json_printer_init_buffer@@Base+0x100>
   1fea4:	add	r1, pc, r1
   1fea8:	ldr	r2, [pc, #196]	; 1ff74 <flatcc_json_printer_init_buffer@@Base+0x104>
   1feac:	add	r3, pc, r2
   1feb0:	movw	r2, #1165	; 0x48d
   1feb4:	bl	12984 <__assert_fail@plt>
   1feb8:	ldr	r0, [sp, #8]
   1febc:	cmp	r0, #64	; 0x40
   1fec0:	bcs	1fed0 <flatcc_json_printer_init_buffer@@Base+0x60>
   1fec4:	mvn	r0, #0
   1fec8:	str	r0, [fp, #-4]
   1fecc:	b	1ff60 <flatcc_json_printer_init_buffer@@Base+0xf0>
   1fed0:	ldr	r0, [pc, #160]	; 1ff78 <flatcc_json_printer_init_buffer@@Base+0x108>
   1fed4:	add	r0, pc, r0
   1fed8:	ldr	r1, [fp, #-8]
   1fedc:	str	r0, [sp, #4]
   1fee0:	mov	r0, r1
   1fee4:	movw	r1, #0
   1fee8:	and	r1, r1, #255	; 0xff
   1feec:	movw	r2, #48	; 0x30
   1fef0:	bl	1293c <memset@plt>
   1fef4:	ldr	r0, [sp, #12]
   1fef8:	ldr	r1, [fp, #-8]
   1fefc:	str	r0, [r1]
   1ff00:	ldr	r0, [sp, #8]
   1ff04:	ldr	r1, [fp, #-8]
   1ff08:	str	r0, [r1, #4]
   1ff0c:	ldr	r0, [fp, #-8]
   1ff10:	ldr	r0, [r0, #4]
   1ff14:	sub	r0, r0, #64	; 0x40
   1ff18:	ldr	r1, [fp, #-8]
   1ff1c:	str	r0, [r1, #8]
   1ff20:	ldr	r0, [fp, #-8]
   1ff24:	ldr	r0, [r0]
   1ff28:	ldr	r1, [fp, #-8]
   1ff2c:	str	r0, [r1, #20]
   1ff30:	ldr	r0, [fp, #-8]
   1ff34:	ldr	r0, [r0]
   1ff38:	ldr	r1, [fp, #-8]
   1ff3c:	ldr	r1, [r1, #8]
   1ff40:	add	r0, r0, r1
   1ff44:	ldr	r1, [fp, #-8]
   1ff48:	str	r0, [r1, #16]
   1ff4c:	ldr	r0, [fp, #-8]
   1ff50:	ldr	r1, [sp, #4]
   1ff54:	str	r1, [r0, #44]	; 0x2c
   1ff58:	movw	r0, #0
   1ff5c:	str	r0, [fp, #-4]
   1ff60:	ldr	r0, [fp, #-4]
   1ff64:	mov	sp, fp
   1ff68:	pop	{fp, pc}
   1ff6c:	muleq	r0, r3, ip
   1ff70:	andeq	r2, r0, r2, ror #21
   1ff74:	andeq	r2, r0, ip, lsr #25
   1ff78:	andeq	r0, r0, r0, lsr #1
   1ff7c:	push	{fp, lr}
   1ff80:	mov	fp, sp
   1ff84:	sub	sp, sp, #8
   1ff88:	str	r0, [sp, #4]
   1ff8c:	str	r1, [sp]
   1ff90:	ldr	r0, [sp, #4]
   1ff94:	ldr	r0, [r0, #20]
   1ff98:	ldr	r1, [sp, #4]
   1ff9c:	ldr	r1, [r1, #16]
   1ffa0:	cmp	r0, r1
   1ffa4:	bcc	1ffe8 <flatcc_json_printer_init_buffer@@Base+0x178>
   1ffa8:	ldr	r0, [sp, #4]
   1ffac:	movw	r1, #3
   1ffb0:	bl	1ed00 <flatcc_json_printer_union_vector_field@@Base+0x438>
   1ffb4:	ldr	r0, [sp, #4]
   1ffb8:	ldr	r0, [r0, #20]
   1ffbc:	ldr	r1, [sp, #4]
   1ffc0:	ldr	r1, [r1]
   1ffc4:	sub	r0, r0, r1
   1ffc8:	ldr	r1, [sp, #4]
   1ffcc:	ldr	lr, [r1, #12]
   1ffd0:	add	r0, lr, r0
   1ffd4:	str	r0, [r1, #12]
   1ffd8:	ldr	r0, [sp, #4]
   1ffdc:	ldr	r0, [r0]
   1ffe0:	ldr	r1, [sp, #4]
   1ffe4:	str	r0, [r1, #20]
   1ffe8:	ldr	r0, [sp, #4]
   1ffec:	ldr	r0, [r0, #20]
   1fff0:	movw	r1, #0
   1fff4:	strb	r1, [r0]
   1fff8:	mov	sp, fp
   1fffc:	pop	{fp, pc}

00020000 <flatcc_json_printer_init_dynamic_buffer@@Base>:
   20000:	push	{fp, lr}
   20004:	mov	fp, sp
   20008:	sub	sp, sp, #16
   2000c:	str	r0, [sp, #8]
   20010:	str	r1, [sp, #4]
   20014:	ldr	r0, [sp, #4]
   20018:	cmp	r0, #0
   2001c:	bne	20028 <flatcc_json_printer_init_dynamic_buffer@@Base+0x28>
   20020:	movw	r0, #4096	; 0x1000
   20024:	str	r0, [sp, #4]
   20028:	ldr	r0, [sp, #4]
   2002c:	cmp	r0, #64	; 0x40
   20030:	bcs	2003c <flatcc_json_printer_init_dynamic_buffer@@Base+0x3c>
   20034:	movw	r0, #64	; 0x40
   20038:	str	r0, [sp, #4]
   2003c:	ldr	r0, [sp, #8]
   20040:	movw	r1, #0
   20044:	and	r1, r1, #255	; 0xff
   20048:	movw	r2, #48	; 0x30
   2004c:	bl	1293c <memset@plt>
   20050:	ldr	r0, [sp, #4]
   20054:	bl	12900 <malloc@plt>
   20058:	ldr	r1, [pc, #168]	; 20108 <flatcc_json_printer_init_dynamic_buffer@@Base+0x108>
   2005c:	add	r1, pc, r1
   20060:	ldr	r2, [sp, #8]
   20064:	str	r0, [r2]
   20068:	ldr	r0, [sp, #8]
   2006c:	movw	r2, #1
   20070:	strb	r2, [r0, #24]
   20074:	ldr	r0, [sp, #4]
   20078:	ldr	r2, [sp, #8]
   2007c:	str	r0, [r2, #4]
   20080:	ldr	r0, [sp, #8]
   20084:	ldr	r0, [r0, #4]
   20088:	sub	r0, r0, #64	; 0x40
   2008c:	ldr	r2, [sp, #8]
   20090:	str	r0, [r2, #8]
   20094:	ldr	r0, [sp, #8]
   20098:	ldr	r0, [r0]
   2009c:	ldr	r2, [sp, #8]
   200a0:	str	r0, [r2, #20]
   200a4:	ldr	r0, [sp, #8]
   200a8:	ldr	r0, [r0]
   200ac:	ldr	r2, [sp, #8]
   200b0:	ldr	r2, [r2, #8]
   200b4:	add	r0, r0, r2
   200b8:	ldr	r2, [sp, #8]
   200bc:	str	r0, [r2, #16]
   200c0:	ldr	r0, [sp, #8]
   200c4:	str	r1, [r0, #44]	; 0x2c
   200c8:	ldr	r0, [sp, #8]
   200cc:	ldr	r0, [r0]
   200d0:	movw	r1, #0
   200d4:	cmp	r0, r1
   200d8:	bne	200f4 <flatcc_json_printer_init_dynamic_buffer@@Base+0xf4>
   200dc:	ldr	r0, [sp, #8]
   200e0:	movw	r1, #3
   200e4:	bl	1ed00 <flatcc_json_printer_union_vector_field@@Base+0x438>
   200e8:	mvn	r0, #0
   200ec:	str	r0, [fp, #-4]
   200f0:	b	200fc <flatcc_json_printer_init_dynamic_buffer@@Base+0xfc>
   200f4:	movw	r0, #0
   200f8:	str	r0, [fp, #-4]
   200fc:	ldr	r0, [fp, #-4]
   20100:	mov	sp, fp
   20104:	pop	{fp, pc}
   20108:	andeq	r0, r0, r8, lsr #1
   2010c:	push	{fp, lr}
   20110:	mov	fp, sp
   20114:	sub	sp, sp, #24
   20118:	str	r0, [fp, #-4]
   2011c:	str	r1, [fp, #-8]
   20120:	ldr	r0, [fp, #-4]
   20124:	ldr	r0, [r0, #20]
   20128:	ldr	r1, [fp, #-4]
   2012c:	ldr	r1, [r1]
   20130:	sub	r0, r0, r1
   20134:	str	r0, [sp, #12]
   20138:	ldr	r0, [fp, #-4]
   2013c:	ldr	r0, [r0, #20]
   20140:	movw	r1, #0
   20144:	strb	r1, [r0]
   20148:	ldr	r0, [fp, #-4]
   2014c:	ldr	r0, [r0, #20]
   20150:	ldr	r1, [fp, #-4]
   20154:	ldr	r1, [r1, #16]
   20158:	cmp	r0, r1
   2015c:	bcs	20164 <flatcc_json_printer_init_dynamic_buffer@@Base+0x164>
   20160:	b	20238 <flatcc_json_printer_init_dynamic_buffer@@Base+0x238>
   20164:	ldr	r0, [fp, #-4]
   20168:	ldr	r1, [r0]
   2016c:	ldr	r0, [r0, #4]
   20170:	lsl	r0, r0, #1
   20174:	str	r0, [sp, #4]
   20178:	mov	r0, r1
   2017c:	ldr	r1, [sp, #4]
   20180:	bl	128dc <realloc@plt>
   20184:	str	r0, [sp, #8]
   20188:	ldr	r0, [sp, #8]
   2018c:	movw	r1, #0
   20190:	cmp	r0, r1
   20194:	bne	201cc <flatcc_json_printer_init_dynamic_buffer@@Base+0x1cc>
   20198:	ldr	r0, [fp, #-4]
   2019c:	movw	r1, #3
   201a0:	bl	1ed00 <flatcc_json_printer_union_vector_field@@Base+0x438>
   201a4:	ldr	r0, [sp, #12]
   201a8:	ldr	r1, [fp, #-4]
   201ac:	ldr	lr, [r1, #12]
   201b0:	add	r0, lr, r0
   201b4:	str	r0, [r1, #12]
   201b8:	ldr	r0, [fp, #-4]
   201bc:	ldr	r0, [r0]
   201c0:	ldr	r1, [fp, #-4]
   201c4:	str	r0, [r1, #20]
   201c8:	b	20228 <flatcc_json_printer_init_dynamic_buffer@@Base+0x228>
   201cc:	ldr	r0, [fp, #-4]
   201d0:	ldr	r1, [r0, #4]
   201d4:	lsl	r1, r1, #1
   201d8:	str	r1, [r0, #4]
   201dc:	ldr	r0, [fp, #-4]
   201e0:	ldr	r0, [r0, #4]
   201e4:	sub	r0, r0, #64	; 0x40
   201e8:	ldr	r1, [fp, #-4]
   201ec:	str	r0, [r1, #8]
   201f0:	ldr	r0, [sp, #8]
   201f4:	ldr	r1, [fp, #-4]
   201f8:	str	r0, [r1]
   201fc:	ldr	r0, [sp, #8]
   20200:	ldr	r1, [sp, #12]
   20204:	add	r0, r0, r1
   20208:	ldr	r1, [fp, #-4]
   2020c:	str	r0, [r1, #20]
   20210:	ldr	r0, [sp, #8]
   20214:	ldr	r1, [fp, #-4]
   20218:	ldr	r1, [r1, #8]
   2021c:	add	r0, r0, r1
   20220:	ldr	r1, [fp, #-4]
   20224:	str	r0, [r1, #16]
   20228:	ldr	r0, [fp, #-4]
   2022c:	ldr	r0, [r0, #20]
   20230:	movw	r1, #0
   20234:	strb	r1, [r0]
   20238:	mov	sp, fp
   2023c:	pop	{fp, pc}

00020240 <flatcc_json_printer_get_buffer@@Base>:
   20240:	push	{fp, lr}
   20244:	mov	fp, sp
   20248:	sub	sp, sp, #16
   2024c:	str	r0, [fp, #-4]
   20250:	str	r1, [sp, #8]
   20254:	ldr	r0, [fp, #-4]
   20258:	ldr	r0, [r0, #44]	; 0x2c
   2025c:	ldr	r1, [fp, #-4]
   20260:	str	r0, [sp, #4]
   20264:	mov	r0, r1
   20268:	movw	r1, #0
   2026c:	ldr	r2, [sp, #4]
   20270:	blx	r2
   20274:	ldr	r0, [sp, #8]
   20278:	movw	r1, #0
   2027c:	cmp	r0, r1
   20280:	beq	202a0 <flatcc_json_printer_get_buffer@@Base+0x60>
   20284:	ldr	r0, [fp, #-4]
   20288:	ldr	r0, [r0, #20]
   2028c:	ldr	r1, [fp, #-4]
   20290:	ldr	r1, [r1]
   20294:	sub	r0, r0, r1
   20298:	ldr	r1, [sp, #8]
   2029c:	str	r0, [r1]
   202a0:	ldr	r0, [fp, #-4]
   202a4:	ldr	r0, [r0]
   202a8:	mov	sp, fp
   202ac:	pop	{fp, pc}

000202b0 <flatcc_json_printer_finalize_dynamic_buffer@@Base>:
   202b0:	push	{fp, lr}
   202b4:	mov	fp, sp
   202b8:	sub	sp, sp, #16
   202bc:	str	r0, [fp, #-4]
   202c0:	str	r1, [sp, #8]
   202c4:	ldr	r0, [fp, #-4]
   202c8:	ldr	r1, [sp, #8]
   202cc:	bl	20240 <flatcc_json_printer_get_buffer@@Base>
   202d0:	str	r0, [sp, #4]
   202d4:	ldr	r0, [fp, #-4]
   202d8:	movw	r1, #0
   202dc:	and	r1, r1, #255	; 0xff
   202e0:	movw	r2, #48	; 0x30
   202e4:	bl	1293c <memset@plt>
   202e8:	ldr	r0, [sp, #4]
   202ec:	mov	sp, fp
   202f0:	pop	{fp, pc}

000202f4 <flatcc_json_printer_clear@@Base>:
   202f4:	push	{fp, lr}
   202f8:	mov	fp, sp
   202fc:	sub	sp, sp, #8
   20300:	str	r0, [sp, #4]
   20304:	ldr	r0, [sp, #4]
   20308:	ldrb	r0, [r0, #24]
   2030c:	cmp	r0, #0
   20310:	beq	20334 <flatcc_json_printer_clear@@Base+0x40>
   20314:	ldr	r0, [sp, #4]
   20318:	ldr	r0, [r0]
   2031c:	movw	r1, #0
   20320:	cmp	r0, r1
   20324:	beq	20334 <flatcc_json_printer_clear@@Base+0x40>
   20328:	ldr	r0, [sp, #4]
   2032c:	ldr	r0, [r0]
   20330:	bl	128a0 <free@plt>
   20334:	ldr	r0, [sp, #4]
   20338:	movw	r1, #0
   2033c:	and	r1, r1, #255	; 0xff
   20340:	movw	r2, #48	; 0x30
   20344:	bl	1293c <memset@plt>
   20348:	mov	sp, fp
   2034c:	pop	{fp, pc}
   20350:	sub	sp, sp, #16
   20354:	vstr	d0, [sp, #8]
   20358:	vldr	d0, [sp, #8]
   2035c:	vstr	d0, [sp]
   20360:	ldr	r0, [sp]
   20364:	ldr	r1, [sp, #4]
   20368:	add	sp, sp, #16
   2036c:	bx	lr
   20370:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20374:	add	fp, sp, #28
   20378:	sub	sp, sp, #260	; 0x104
   2037c:	vstr	d0, [fp, #-40]	; 0xffffffd8
   20380:	str	r0, [fp, #-44]	; 0xffffffd4
   20384:	str	r1, [fp, #-48]	; 0xffffffd0
   20388:	str	r2, [fp, #-52]	; 0xffffffcc
   2038c:	vldr	d0, [fp, #-40]	; 0xffffffd8
   20390:	sub	r0, fp, #80	; 0x50
   20394:	bl	208a0 <flatcc_json_printer_clear@@Base+0x5ac>
   20398:	ldr	r2, [fp, #-80]	; 0xffffffb0
   2039c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   203a0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   203a4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   203a8:	mov	lr, sp
   203ac:	str	r1, [lr, #4]
   203b0:	str	r0, [lr]
   203b4:	sub	r0, fp, #96	; 0x60
   203b8:	bl	20938 <flatcc_json_printer_clear@@Base+0x644>
   203bc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   203c0:	ldr	r1, [fp, #-76]	; 0xffffffb4
   203c4:	lsl	r1, r1, #1
   203c8:	orr	r1, r1, r0, lsr #31
   203cc:	mov	r2, #1
   203d0:	orr	r0, r2, r0, lsl #1
   203d4:	str	r0, [fp, #-112]	; 0xffffff90
   203d8:	str	r1, [fp, #-108]	; 0xffffff94
   203dc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   203e0:	sub	r0, r0, #1
   203e4:	str	r0, [fp, #-104]	; 0xffffff98
   203e8:	ldr	r2, [fp, #-112]	; 0xffffff90
   203ec:	ldr	r3, [fp, #-108]	; 0xffffff94
   203f0:	ldr	r0, [fp, #-104]	; 0xffffff98
   203f4:	ldr	r1, [fp, #-100]	; 0xffffff9c
   203f8:	mov	lr, sp
   203fc:	str	r1, [lr, #4]
   20400:	str	r0, [lr]
   20404:	sub	r0, fp, #128	; 0x80
   20408:	bl	20938 <flatcc_json_printer_clear@@Base+0x644>
   2040c:	vldr	d0, [fp, #-40]	; 0xffffffd8
   20410:	bl	20350 <flatcc_json_printer_clear@@Base+0x5c>
   20414:	str	r1, [sp, #124]	; 0x7c
   20418:	str	r0, [sp, #120]	; 0x78
   2041c:	vldr	d0, [fp, #-40]	; 0xffffffd8
   20420:	vcmpe.f64	d0, #0.0
   20424:	vmrs	APSR_nzcv, fpscr
   20428:	ble	20444 <flatcc_json_printer_clear@@Base+0x150>
   2042c:	vldr	d16, [pc, #756]	; 20728 <flatcc_json_printer_clear@@Base+0x434>
   20430:	vldr	d17, [fp, #-40]	; 0xffffffd8
   20434:	vcmpe.f64	d17, d16
   20438:	vmrs	APSR_nzcv, fpscr
   2043c:	bhi	20444 <flatcc_json_printer_clear@@Base+0x150>
   20440:	b	20464 <flatcc_json_printer_clear@@Base+0x170>
   20444:	ldr	r0, [pc, #740]	; 20730 <flatcc_json_printer_clear@@Base+0x43c>
   20448:	add	r0, pc, r0
   2044c:	ldr	r1, [pc, #736]	; 20734 <flatcc_json_printer_clear@@Base+0x440>
   20450:	add	r1, pc, r1
   20454:	ldr	r2, [pc, #732]	; 20738 <flatcc_json_printer_clear@@Base+0x444>
   20458:	add	r3, pc, r2
   2045c:	movw	r2, #138	; 0x8a
   20460:	bl	12984 <__assert_fail@plt>
   20464:	ldr	r0, [sp, #120]	; 0x78
   20468:	ldr	r1, [sp, #124]	; 0x7c
   2046c:	bfc	r1, #20, #12
   20470:	orr	r0, r0, r1
   20474:	cmp	r0, #0
   20478:	bne	204c8 <flatcc_json_printer_clear@@Base+0x1d4>
   2047c:	b	20480 <flatcc_json_printer_clear@@Base+0x18c>
   20480:	ldrh	r0, [sp, #126]	; 0x7e
   20484:	movw	r1, #32752	; 0x7ff0
   20488:	tst	r0, r1
   2048c:	beq	204c8 <flatcc_json_printer_clear@@Base+0x1d4>
   20490:	b	20494 <flatcc_json_printer_clear@@Base+0x1a0>
   20494:	ldr	r0, [fp, #-80]	; 0xffffffb0
   20498:	ldr	r1, [fp, #-76]	; 0xffffffb4
   2049c:	lsl	r1, r1, #2
   204a0:	orr	r1, r1, r0, lsr #30
   204a4:	mvn	r2, #0
   204a8:	adds	r0, r2, r0, lsl #2
   204ac:	sbc	r1, r1, #0
   204b0:	str	r0, [sp, #144]	; 0x90
   204b4:	str	r1, [sp, #148]	; 0x94
   204b8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   204bc:	sub	r0, r0, #2
   204c0:	str	r0, [sp, #152]	; 0x98
   204c4:	b	204f8 <flatcc_json_printer_clear@@Base+0x204>
   204c8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   204cc:	ldr	r1, [fp, #-76]	; 0xffffffb4
   204d0:	lsl	r1, r1, #1
   204d4:	orr	r1, r1, r0, lsr #31
   204d8:	mvn	r2, #0
   204dc:	adds	r0, r2, r0, lsl #1
   204e0:	sbc	r1, r1, #0
   204e4:	str	r0, [sp, #144]	; 0x90
   204e8:	str	r1, [sp, #148]	; 0x94
   204ec:	ldr	r0, [fp, #-72]	; 0xffffffb8
   204f0:	sub	r0, r0, #1
   204f4:	str	r0, [sp, #152]	; 0x98
   204f8:	ldr	r0, [sp, #144]	; 0x90
   204fc:	ldr	r1, [sp, #148]	; 0x94
   20500:	ldr	r2, [sp, #152]	; 0x98
   20504:	ldr	r3, [fp, #-120]	; 0xffffff88
   20508:	sub	r2, r2, r3
   2050c:	rsb	r3, r2, #32
   20510:	lsr	r3, r0, r3
   20514:	orr	r1, r3, r1, lsl r2
   20518:	sub	r3, r2, #32
   2051c:	cmp	r3, #0
   20520:	lslge	r1, r0, r3
   20524:	lsl	r0, r0, r2
   20528:	cmp	r3, #0
   2052c:	movwge	r0, #0
   20530:	str	r0, [sp, #144]	; 0x90
   20534:	str	r1, [sp, #148]	; 0x94
   20538:	ldr	r0, [fp, #-120]	; 0xffffff88
   2053c:	str	r0, [sp, #152]	; 0x98
   20540:	ldr	r0, [fp, #-88]	; 0xffffffa8
   20544:	mvn	r1, #123	; 0x7b
   20548:	sub	r0, r1, r0
   2054c:	add	r1, sp, #128	; 0x80
   20550:	bl	20a78 <flatcc_json_printer_clear@@Base+0x784>
   20554:	str	r0, [fp, #-56]	; 0xffffffc8
   20558:	ldr	r2, [fp, #-96]	; 0xffffffa0
   2055c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   20560:	ldr	r0, [fp, #-88]	; 0xffffffa8
   20564:	ldr	r1, [fp, #-84]	; 0xffffffac
   20568:	ldr	lr, [sp, #128]	; 0x80
   2056c:	ldr	ip, [sp, #132]	; 0x84
   20570:	ldr	r4, [sp, #136]	; 0x88
   20574:	ldr	r5, [sp, #140]	; 0x8c
   20578:	mov	r6, sp
   2057c:	str	r5, [r6, #20]
   20580:	str	r4, [r6, #16]
   20584:	str	ip, [r6, #12]
   20588:	str	lr, [r6, #8]
   2058c:	str	r1, [r6, #4]
   20590:	str	r0, [r6]
   20594:	add	r0, sp, #104	; 0x68
   20598:	str	r0, [sp, #68]	; 0x44
   2059c:	bl	20b38 <flatcc_json_printer_clear@@Base+0x844>
   205a0:	ldr	r0, [sp, #68]	; 0x44
   205a4:	vld1.64	{d16-d17}, [r0]
   205a8:	sub	r1, fp, #96	; 0x60
   205ac:	vst1.64	{d16-d17}, [r1]
   205b0:	ldr	r2, [sp, #144]	; 0x90
   205b4:	ldr	r3, [sp, #148]	; 0x94
   205b8:	ldr	r1, [sp, #152]	; 0x98
   205bc:	ldr	ip, [sp, #156]	; 0x9c
   205c0:	ldr	lr, [sp, #128]	; 0x80
   205c4:	ldr	r4, [sp, #132]	; 0x84
   205c8:	ldr	r5, [sp, #136]	; 0x88
   205cc:	ldr	r6, [sp, #140]	; 0x8c
   205d0:	mov	r7, sp
   205d4:	str	r6, [r7, #20]
   205d8:	str	r5, [r7, #16]
   205dc:	str	r4, [r7, #12]
   205e0:	str	lr, [r7, #8]
   205e4:	str	ip, [r7, #4]
   205e8:	str	r1, [r7]
   205ec:	add	r1, sp, #88	; 0x58
   205f0:	mov	r0, r1
   205f4:	str	r1, [sp, #64]	; 0x40
   205f8:	bl	20b38 <flatcc_json_printer_clear@@Base+0x844>
   205fc:	ldr	r0, [sp, #64]	; 0x40
   20600:	vld1.64	{d16-d17}, [r0]
   20604:	add	r1, sp, #144	; 0x90
   20608:	vst1.64	{d16-d17}, [r1]
   2060c:	ldr	r2, [fp, #-128]	; 0xffffff80
   20610:	ldr	r3, [fp, #-124]	; 0xffffff84
   20614:	ldr	r1, [fp, #-120]	; 0xffffff88
   20618:	ldr	ip, [fp, #-116]	; 0xffffff8c
   2061c:	ldr	lr, [sp, #128]	; 0x80
   20620:	ldr	r4, [sp, #132]	; 0x84
   20624:	ldr	r5, [sp, #136]	; 0x88
   20628:	ldr	r6, [sp, #140]	; 0x8c
   2062c:	mov	r7, sp
   20630:	str	r6, [r7, #20]
   20634:	str	r5, [r7, #16]
   20638:	str	r4, [r7, #12]
   2063c:	str	lr, [r7, #8]
   20640:	str	ip, [r7, #4]
   20644:	str	r1, [r7]
   20648:	add	r1, sp, #72	; 0x48
   2064c:	mov	r0, r1
   20650:	str	r1, [sp, #60]	; 0x3c
   20654:	bl	20b38 <flatcc_json_printer_clear@@Base+0x844>
   20658:	ldr	r0, [sp, #60]	; 0x3c
   2065c:	vld1.64	{d16-d17}, [r0]
   20660:	sub	r1, fp, #128	; 0x80
   20664:	vst1.64	{d16-d17}, [r1]
   20668:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2066c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   20670:	ldr	r0, [sp, #144]	; 0x90
   20674:	ldr	r3, [sp, #148]	; 0x94
   20678:	ldr	ip, [sp, #152]	; 0x98
   2067c:	ldr	lr, [sp, #156]	; 0x9c
   20680:	ldr	r4, [fp, #-96]	; 0xffffffa0
   20684:	ldr	r5, [fp, #-92]	; 0xffffffa4
   20688:	ldr	r6, [fp, #-88]	; 0xffffffa8
   2068c:	ldr	r7, [fp, #-84]	; 0xffffffac
   20690:	ldr	r8, [fp, #-128]	; 0xffffff80
   20694:	ldr	r9, [fp, #-124]	; 0xffffff84
   20698:	ldr	sl, [fp, #-120]	; 0xffffff88
   2069c:	str	r0, [sp, #56]	; 0x38
   206a0:	ldr	r0, [fp, #-116]	; 0xffffff8c
   206a4:	str	r0, [sp, #52]	; 0x34
   206a8:	mov	r0, sp
   206ac:	str	r0, [sp, #48]	; 0x30
   206b0:	sub	r0, fp, #60	; 0x3c
   206b4:	str	r1, [sp, #44]	; 0x2c
   206b8:	ldr	r1, [sp, #48]	; 0x30
   206bc:	str	r0, [r1, #40]	; 0x28
   206c0:	str	r2, [r1, #36]	; 0x24
   206c4:	ldr	r0, [sp, #44]	; 0x2c
   206c8:	str	r0, [r1, #32]
   206cc:	str	r9, [r1, #20]
   206d0:	str	r8, [r1, #16]
   206d4:	str	r5, [r1, #4]
   206d8:	str	r4, [r1]
   206dc:	str	sl, [r1, #24]
   206e0:	str	r6, [r1, #8]
   206e4:	ldr	r2, [sp, #52]	; 0x34
   206e8:	str	r2, [r1, #28]
   206ec:	str	r7, [r1, #12]
   206f0:	ldr	r0, [sp, #56]	; 0x38
   206f4:	mov	r1, r3
   206f8:	mov	r2, ip
   206fc:	mov	r3, lr
   20700:	bl	20ccc <flatcc_json_printer_clear@@Base+0x9d8>
   20704:	str	r0, [fp, #-64]	; 0xffffffc0
   20708:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2070c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   20710:	sub	r0, r0, r1
   20714:	ldr	r1, [fp, #-52]	; 0xffffffcc
   20718:	str	r0, [r1]
   2071c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   20720:	sub	sp, fp, #28
   20724:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20728:			; <UNDEFINED> instruction: 0xffffffff
   2072c:	svcvc	0x00efffff
   20730:	andeq	r2, r0, fp, lsl #16
   20734:	andeq	r2, r0, r9, asr r7
   20738:	andeq	r2, r0, r0, lsr #16
   2073c:	sub	sp, sp, #36	; 0x24
   20740:	str	r0, [sp, #32]
   20744:	str	r1, [sp, #28]
   20748:	ldr	r0, [sp, #28]
   2074c:	str	r0, [sp, #12]
   20750:	ldr	r0, [sp, #32]
   20754:	cmp	r0, #0
   20758:	bge	20780 <flatcc_json_printer_clear@@Base+0x48c>
   2075c:	ldr	r0, [sp, #28]
   20760:	add	r1, r0, #1
   20764:	str	r1, [sp, #28]
   20768:	movw	r1, #45	; 0x2d
   2076c:	strb	r1, [r0]
   20770:	ldr	r0, [sp, #32]
   20774:	movw	r1, #0
   20778:	sub	r0, r1, r0
   2077c:	str	r0, [sp, #32]
   20780:	ldr	r0, [sp, #28]
   20784:	str	r0, [sp, #16]
   20788:	ldr	r0, [sp, #32]
   2078c:	movw	r1, #10
   20790:	sdiv	r0, r0, r1
   20794:	str	r0, [sp, #8]
   20798:	ldr	r0, [sp, #32]
   2079c:	ldr	r2, [sp, #8]
   207a0:	mul	r1, r2, r1
   207a4:	sub	r0, r0, r1
   207a8:	str	r0, [sp, #4]
   207ac:	ldr	r0, [sp, #4]
   207b0:	add	r0, r0, #48	; 0x30
   207b4:	ldr	r1, [sp, #16]
   207b8:	add	r2, r1, #1
   207bc:	str	r2, [sp, #16]
   207c0:	strb	r0, [r1]
   207c4:	ldr	r0, [sp, #8]
   207c8:	cmp	r0, #0
   207cc:	bne	207d4 <flatcc_json_printer_clear@@Base+0x4e0>
   207d0:	b	207e0 <flatcc_json_printer_clear@@Base+0x4ec>
   207d4:	ldr	r0, [sp, #8]
   207d8:	str	r0, [sp, #32]
   207dc:	b	20788 <flatcc_json_printer_clear@@Base+0x494>
   207e0:	ldr	r0, [sp, #16]
   207e4:	movw	r1, #0
   207e8:	strb	r1, [r0]
   207ec:	ldr	r0, [sp, #16]
   207f0:	ldr	r1, [sp, #28]
   207f4:	sub	r0, r0, r1
   207f8:	str	r0, [sp, #24]
   207fc:	movw	r0, #0
   20800:	str	r0, [sp, #20]
   20804:	ldr	r0, [sp, #20]
   20808:	ldr	r1, [sp, #24]
   2080c:	movw	r2, #2
   20810:	sdiv	r1, r1, r2
   20814:	cmp	r0, r1
   20818:	bge	2088c <flatcc_json_printer_clear@@Base+0x598>
   2081c:	ldr	r0, [sp, #28]
   20820:	ldr	r1, [sp, #20]
   20824:	add	r0, r0, r1
   20828:	ldrb	r0, [r0]
   2082c:	strb	r0, [sp, #3]
   20830:	ldr	r0, [sp, #28]
   20834:	ldr	r1, [sp, #24]
   20838:	sub	r1, r1, #1
   2083c:	ldr	r2, [sp, #20]
   20840:	sub	r1, r1, r2
   20844:	add	r0, r0, r1
   20848:	ldrb	r0, [r0]
   2084c:	ldr	r1, [sp, #28]
   20850:	ldr	r2, [sp, #20]
   20854:	add	r1, r1, r2
   20858:	strb	r0, [r1]
   2085c:	ldrb	r0, [sp, #3]
   20860:	ldr	r1, [sp, #28]
   20864:	ldr	r2, [sp, #24]
   20868:	sub	r2, r2, #1
   2086c:	ldr	r3, [sp, #20]
   20870:	sub	r2, r2, r3
   20874:	add	r1, r1, r2
   20878:	strb	r0, [r1]
   2087c:	ldr	r0, [sp, #20]
   20880:	add	r0, r0, #1
   20884:	str	r0, [sp, #20]
   20888:	b	20804 <flatcc_json_printer_clear@@Base+0x510>
   2088c:	ldr	r0, [sp, #16]
   20890:	ldr	r1, [sp, #12]
   20894:	sub	r0, r0, r1
   20898:	add	sp, sp, #36	; 0x24
   2089c:	bx	lr
   208a0:	push	{fp, lr}
   208a4:	mov	fp, sp
   208a8:	sub	sp, sp, #24
   208ac:	vstr	d0, [fp, #-8]
   208b0:	vldr	d0, [fp, #-8]
   208b4:	str	r0, [sp, #4]
   208b8:	bl	20350 <flatcc_json_printer_clear@@Base+0x5c>
   208bc:	str	r1, [sp, #12]
   208c0:	str	r0, [sp, #8]
   208c4:	ldrh	r0, [sp, #14]
   208c8:	movw	r1, #32752	; 0x7ff0
   208cc:	tst	r0, r1
   208d0:	bne	208fc <flatcc_json_printer_clear@@Base+0x608>
   208d4:	b	208d8 <flatcc_json_printer_clear@@Base+0x5e4>
   208d8:	ldr	r0, [pc, #84]	; 20934 <flatcc_json_printer_clear@@Base+0x640>
   208dc:	ldr	r1, [sp, #8]
   208e0:	ldr	r2, [sp, #12]
   208e4:	bfc	r2, #20, #12
   208e8:	ldr	r3, [sp, #4]
   208ec:	str	r1, [r3]
   208f0:	str	r2, [r3, #4]
   208f4:	str	r0, [r3, #8]
   208f8:	b	2092c <flatcc_json_printer_clear@@Base+0x638>
   208fc:	ldr	r0, [sp, #8]
   20900:	ldr	r1, [sp, #12]
   20904:	mov	r2, #1
   20908:	bfi	r1, r2, #20, #12
   2090c:	ldr	r2, [sp, #4]
   20910:	str	r0, [r2]
   20914:	str	r1, [r2, #4]
   20918:	ldr	r0, [sp, #12]
   2091c:	ubfx	r0, r0, #20, #11
   20920:	movw	r1, #1075	; 0x433
   20924:	sub	r0, r0, r1
   20928:	str	r0, [r2, #8]
   2092c:	mov	sp, fp
   20930:	pop	{fp, pc}
   20934:			; <UNDEFINED> instruction: 0xfffffbce
   20938:	push	{fp, lr}
   2093c:	mov	fp, sp
   20940:	sub	sp, sp, #24
   20944:	ldr	r1, [fp, #12]
   20948:	ldr	ip, [fp, #8]
   2094c:	str	r2, [sp, #8]
   20950:	str	r3, [sp, #12]
   20954:	str	ip, [sp, #16]
   20958:	str	r1, [sp, #20]
   2095c:	ldr	r1, [sp, #8]
   20960:	ldr	r2, [sp, #12]
   20964:	orr	r1, r1, r2
   20968:	cmp	r1, #0
   2096c:	str	r0, [sp, #4]
   20970:	beq	2097c <flatcc_json_printer_clear@@Base+0x688>
   20974:	b	20978 <flatcc_json_printer_clear@@Base+0x684>
   20978:	b	2099c <flatcc_json_printer_clear@@Base+0x6a8>
   2097c:	ldr	r0, [pc, #228]	; 20a68 <flatcc_json_printer_clear@@Base+0x774>
   20980:	add	r0, pc, r0
   20984:	ldr	r1, [pc, #224]	; 20a6c <flatcc_json_printer_clear@@Base+0x778>
   20988:	add	r1, pc, r1
   2098c:	ldr	r2, [pc, #220]	; 20a70 <flatcc_json_printer_clear@@Base+0x77c>
   20990:	add	r3, pc, r2
   20994:	movw	r2, #260	; 0x104
   20998:	bl	12984 <__assert_fail@plt>
   2099c:	b	209a0 <flatcc_json_printer_clear@@Base+0x6ac>
   209a0:	ldrh	r0, [sp, #14]
   209a4:	movw	r1, #65472	; 0xffc0
   209a8:	and	r0, r0, r1
   209ac:	cmp	r0, #0
   209b0:	movwne	r0, #1
   209b4:	mvn	r1, #0
   209b8:	eor	r0, r0, r1
   209bc:	tst	r0, #1
   209c0:	beq	209f0 <flatcc_json_printer_clear@@Base+0x6fc>
   209c4:	ldr	r0, [sp, #8]
   209c8:	ldr	r1, [sp, #12]
   209cc:	lsl	r1, r1, #10
   209d0:	orr	r1, r1, r0, lsr #22
   209d4:	lsl	r0, r0, #10
   209d8:	str	r0, [sp, #8]
   209dc:	str	r1, [sp, #12]
   209e0:	ldr	r0, [sp, #16]
   209e4:	sub	r0, r0, #10
   209e8:	str	r0, [sp, #16]
   209ec:	b	209a0 <flatcc_json_printer_clear@@Base+0x6ac>
   209f0:	b	209f4 <flatcc_json_printer_clear@@Base+0x700>
   209f4:	ldrb	r0, [sp, #15]
   209f8:	lsr	r0, r0, #7
   209fc:	mvn	r1, #0
   20a00:	eor	r0, r0, r1
   20a04:	tst	r0, #1
   20a08:	beq	20a3c <flatcc_json_printer_clear@@Base+0x748>
   20a0c:	ldr	r0, [sp, #8]
   20a10:	ldr	r1, [sp, #12]
   20a14:	lsl	r1, r1, #1
   20a18:	orr	r1, r1, r0, lsr #31
   20a1c:	lsl	r0, r0, #1
   20a20:	str	r0, [sp, #8]
   20a24:	str	r1, [sp, #12]
   20a28:	ldr	r0, [sp, #16]
   20a2c:	mvn	r1, #0
   20a30:	add	r0, r0, r1
   20a34:	str	r0, [sp, #16]
   20a38:	b	209f4 <flatcc_json_printer_clear@@Base+0x700>
   20a3c:	ldr	r0, [sp, #8]
   20a40:	ldr	r1, [sp, #4]
   20a44:	str	r0, [r1]
   20a48:	ldr	r0, [sp, #12]
   20a4c:	str	r0, [r1, #4]
   20a50:	ldr	r0, [sp, #16]
   20a54:	str	r0, [r1, #8]
   20a58:	ldr	r0, [sp, #20]
   20a5c:	str	r0, [r1, #12]
   20a60:	mov	sp, fp
   20a64:	pop	{fp, pc}
   20a68:	andeq	r2, r0, r1, lsr #6
   20a6c:	andeq	r2, r0, r2, lsr #6
   20a70:	andeq	r2, r0, r7, lsl #7
   20a74:	nop	{0}
   20a78:	push	{fp, lr}
   20a7c:	mov	fp, sp
   20a80:	sub	sp, sp, #24
   20a84:	ldr	r2, [pc, #164]	; 20b30 <flatcc_json_printer_clear@@Base+0x83c>
   20a88:	add	r2, pc, r2
   20a8c:	str	r0, [fp, #-4]
   20a90:	str	r1, [fp, #-8]
   20a94:	ldr	r0, [fp, #-4]
   20a98:	add	r0, r0, #63	; 0x3f
   20a9c:	vmov	s0, r0
   20aa0:	vcvt.f64.s32	d16, s0
   20aa4:	vldr	d17, [pc, #124]	; 20b28 <flatcc_json_printer_clear@@Base+0x834>
   20aa8:	vmul.f64	d0, d16, d17
   20aac:	str	r2, [sp, #4]
   20ab0:	bl	2127c <flatcc_json_printer_clear@@Base+0xf88>
   20ab4:	str	r0, [sp, #12]
   20ab8:	ldr	r0, [sp, #12]
   20abc:	movw	r1, #347	; 0x15b
   20ac0:	add	r0, r0, r1
   20ac4:	asr	r1, r0, #31
   20ac8:	add	r0, r0, r1, lsr #29
   20acc:	mov	r1, #1
   20ad0:	add	r0, r1, r0, asr #3
   20ad4:	str	r0, [sp, #8]
   20ad8:	ldr	r0, [sp, #8]
   20adc:	ldr	r1, [pc, #80]	; 20b34 <flatcc_json_printer_clear@@Base+0x840>
   20ae0:	add	r1, pc, r1
   20ae4:	mov	r2, r1
   20ae8:	ldr	r0, [r2, r0, lsl #4]!
   20aec:	ldr	r2, [r2, #4]
   20af0:	ldr	lr, [fp, #-8]
   20af4:	str	r2, [lr, #4]
   20af8:	str	r0, [lr]
   20afc:	ldr	r0, [sp, #8]
   20b00:	add	r0, r1, r0, lsl #4
   20b04:	ldrsh	r0, [r0, #8]
   20b08:	ldr	r2, [fp, #-8]
   20b0c:	str	r0, [r2, #8]
   20b10:	ldr	r0, [sp, #8]
   20b14:	add	r0, r1, r0, lsl #4
   20b18:	ldrsh	r0, [r0, #10]
   20b1c:	mov	sp, fp
   20b20:	pop	{fp, pc}
   20b24:	nop	{0}
   20b28:			; <UNDEFINED> instruction: 0x509f79fe
   20b2c:	svccc	0x00d34413
   20b30:	muleq	r0, r0, r4
   20b34:	andeq	r2, r0, r8, lsr r4
   20b38:	push	{r4, r5, r6, sl, fp, lr}
   20b3c:	add	fp, sp, #16
   20b40:	sub	sp, sp, #104	; 0x68
   20b44:	ldr	r1, [fp, #28]
   20b48:	ldr	ip, [fp, #24]
   20b4c:	ldr	lr, [fp, #20]
   20b50:	ldr	r4, [fp, #16]
   20b54:	ldr	r5, [fp, #12]
   20b58:	ldr	r6, [fp, #8]
   20b5c:	str	r2, [fp, #-32]	; 0xffffffe0
   20b60:	str	r3, [fp, #-28]	; 0xffffffe4
   20b64:	str	r6, [fp, #-24]	; 0xffffffe8
   20b68:	str	r5, [fp, #-20]	; 0xffffffec
   20b6c:	str	r1, [fp, #-36]	; 0xffffffdc
   20b70:	str	ip, [fp, #-40]	; 0xffffffd8
   20b74:	str	lr, [fp, #-44]	; 0xffffffd4
   20b78:	str	r4, [fp, #-48]	; 0xffffffd0
   20b7c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20b80:	mov	r2, #0
   20b84:	str	r2, [fp, #-52]	; 0xffffffcc
   20b88:	str	r1, [fp, #-56]	; 0xffffffc8
   20b8c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   20b90:	str	r2, [sp, #60]	; 0x3c
   20b94:	str	r1, [sp, #56]	; 0x38
   20b98:	ldr	r1, [fp, #-44]	; 0xffffffd4
   20b9c:	str	r2, [sp, #52]	; 0x34
   20ba0:	str	r1, [sp, #48]	; 0x30
   20ba4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   20ba8:	str	r2, [sp, #44]	; 0x2c
   20bac:	str	r1, [sp, #40]	; 0x28
   20bb0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   20bb4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   20bb8:	ldr	ip, [sp, #48]	; 0x30
   20bbc:	ldr	lr, [sp, #52]	; 0x34
   20bc0:	umull	r4, r5, r1, ip
   20bc4:	mla	r1, r1, lr, r5
   20bc8:	mla	r1, r3, ip, r1
   20bcc:	str	r4, [sp, #32]
   20bd0:	str	r1, [sp, #36]	; 0x24
   20bd4:	ldr	r1, [sp, #56]	; 0x38
   20bd8:	ldr	r3, [sp, #60]	; 0x3c
   20bdc:	ldr	ip, [sp, #48]	; 0x30
   20be0:	ldr	lr, [sp, #52]	; 0x34
   20be4:	umull	r4, r5, r1, ip
   20be8:	mla	r1, r1, lr, r5
   20bec:	mla	r1, r3, ip, r1
   20bf0:	str	r4, [sp, #24]
   20bf4:	str	r1, [sp, #28]
   20bf8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   20bfc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   20c00:	ldr	ip, [sp, #40]	; 0x28
   20c04:	ldr	lr, [sp, #44]	; 0x2c
   20c08:	umull	r4, r5, r1, ip
   20c0c:	mla	r1, r1, lr, r5
   20c10:	mla	r1, r3, ip, r1
   20c14:	str	r4, [sp, #16]
   20c18:	str	r1, [sp, #20]
   20c1c:	ldr	r1, [sp, #56]	; 0x38
   20c20:	ldr	r3, [sp, #60]	; 0x3c
   20c24:	ldr	ip, [sp, #40]	; 0x28
   20c28:	ldr	lr, [sp, #44]	; 0x2c
   20c2c:	umull	r4, r5, r1, ip
   20c30:	mla	r1, r1, lr, r5
   20c34:	mla	r1, r3, ip, r1
   20c38:	str	r4, [sp, #8]
   20c3c:	str	r1, [sp, #12]
   20c40:	ldr	r1, [sp, #12]
   20c44:	ldr	r3, [sp, #16]
   20c48:	adds	r1, r1, r3
   20c4c:	adc	r2, r2, #0
   20c50:	ldr	r3, [sp, #24]
   20c54:	adds	r1, r1, r3
   20c58:	adc	r2, r2, #0
   20c5c:	str	r1, [sp]
   20c60:	str	r2, [sp, #4]
   20c64:	ldr	r1, [sp]
   20c68:	ldr	r2, [sp, #4]
   20c6c:	adds	r1, r1, #-2147483648	; 0x80000000
   20c70:	adc	r2, r2, #0
   20c74:	str	r1, [sp]
   20c78:	str	r2, [sp, #4]
   20c7c:	ldr	r1, [sp, #32]
   20c80:	ldr	r2, [sp, #36]	; 0x24
   20c84:	ldr	r3, [sp, #20]
   20c88:	adds	r1, r1, r3
   20c8c:	adc	r2, r2, #0
   20c90:	ldr	r3, [sp, #28]
   20c94:	adds	r1, r1, r3
   20c98:	adc	r2, r2, #0
   20c9c:	ldr	r3, [sp, #4]
   20ca0:	adds	r1, r1, r3
   20ca4:	adc	r2, r2, #0
   20ca8:	str	r1, [r0]
   20cac:	str	r2, [r0, #4]
   20cb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20cb4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   20cb8:	add	r1, r1, r2
   20cbc:	add	r1, r1, #64	; 0x40
   20cc0:	str	r1, [r0, #8]
   20cc4:	sub	sp, fp, #16
   20cc8:	pop	{r4, r5, r6, sl, fp, pc}
   20ccc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20cd0:	add	fp, sp, #28
   20cd4:	sub	sp, sp, #300	; 0x12c
   20cd8:	ldr	ip, [fp, #36]	; 0x24
   20cdc:	ldr	lr, [fp, #32]
   20ce0:	ldr	r4, [fp, #28]
   20ce4:	ldr	r5, [fp, #24]
   20ce8:	ldr	r6, [fp, #20]
   20cec:	ldr	r7, [fp, #16]
   20cf0:	ldr	r8, [fp, #12]
   20cf4:	ldr	r9, [fp, #8]
   20cf8:	ldr	sl, [fp, #48]	; 0x30
   20cfc:	str	r0, [sp, #84]	; 0x54
   20d00:	ldr	r0, [fp, #44]	; 0x2c
   20d04:	str	r0, [sp, #80]	; 0x50
   20d08:	ldr	r0, [fp, #40]	; 0x28
   20d0c:	str	r0, [sp, #76]	; 0x4c
   20d10:	ldr	r0, [sp, #84]	; 0x54
   20d14:	str	r0, [fp, #-56]	; 0xffffffc8
   20d18:	str	r1, [fp, #-52]	; 0xffffffcc
   20d1c:	str	r2, [fp, #-48]	; 0xffffffd0
   20d20:	str	r3, [fp, #-44]	; 0xffffffd4
   20d24:	str	r6, [fp, #-60]	; 0xffffffc4
   20d28:	str	r7, [fp, #-64]	; 0xffffffc0
   20d2c:	str	r8, [fp, #-68]	; 0xffffffbc
   20d30:	str	r9, [fp, #-72]	; 0xffffffb8
   20d34:	str	ip, [fp, #-76]	; 0xffffffb4
   20d38:	str	lr, [fp, #-80]	; 0xffffffb0
   20d3c:	str	r4, [fp, #-84]	; 0xffffffac
   20d40:	str	r5, [fp, #-88]	; 0xffffffa8
   20d44:	mov	r1, #0
   20d48:	str	r1, [fp, #-92]	; 0xffffffa4
   20d4c:	mov	r1, #1
   20d50:	str	r1, [fp, #-96]	; 0xffffffa0
   20d54:	ldr	r2, [fp, #-56]	; 0xffffffc8
   20d58:	ldr	r3, [fp, #-52]	; 0xffffffcc
   20d5c:	ldr	ip, [fp, #-96]	; 0xffffffa0
   20d60:	ldr	lr, [fp, #-92]	; 0xffffffa4
   20d64:	subs	r2, r2, ip
   20d68:	sbc	r3, r3, lr
   20d6c:	str	r2, [fp, #-112]	; 0xffffff90
   20d70:	str	r3, [fp, #-108]	; 0xffffff94
   20d74:	ldr	r2, [fp, #-48]	; 0xffffffd0
   20d78:	str	r2, [fp, #-104]	; 0xffffff98
   20d7c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   20d80:	ldr	r3, [fp, #-84]	; 0xffffffac
   20d84:	ldr	ip, [fp, #-96]	; 0xffffffa0
   20d88:	ldr	lr, [fp, #-92]	; 0xffffffa4
   20d8c:	adds	r2, r2, ip
   20d90:	adc	r3, r3, lr
   20d94:	str	r2, [fp, #-128]	; 0xffffff80
   20d98:	str	r3, [fp, #-124]	; 0xffffff84
   20d9c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   20da0:	str	r2, [fp, #-120]	; 0xffffff88
   20da4:	ldr	r2, [fp, #-128]	; 0xffffff80
   20da8:	ldr	r3, [fp, #-124]	; 0xffffff84
   20dac:	ldr	ip, [fp, #-120]	; 0xffffff88
   20db0:	ldr	lr, [fp, #-116]	; 0xffffff8c
   20db4:	ldr	r4, [fp, #-112]	; 0xffffff90
   20db8:	ldr	r5, [fp, #-108]	; 0xffffff94
   20dbc:	ldr	r6, [fp, #-104]	; 0xffffff98
   20dc0:	ldr	r7, [fp, #-100]	; 0xffffff9c
   20dc4:	mov	r8, sp
   20dc8:	str	r7, [r8, #20]
   20dcc:	str	r6, [r8, #16]
   20dd0:	str	r5, [r8, #12]
   20dd4:	str	r4, [r8, #8]
   20dd8:	str	lr, [r8, #4]
   20ddc:	str	ip, [r8]
   20de0:	sub	r0, fp, #144	; 0x90
   20de4:	str	sl, [sp, #72]	; 0x48
   20de8:	str	r1, [sp, #68]	; 0x44
   20dec:	bl	212fc <flatcc_json_printer_clear@@Base+0x1008>
   20df0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   20df4:	rsb	r1, r0, #0
   20df8:	mvn	r2, #31
   20dfc:	sub	r3, r2, r0
   20e00:	ldr	ip, [sp, #68]	; 0x44
   20e04:	lsl	r1, ip, r1
   20e08:	cmp	r3, #0
   20e0c:	movwge	r1, #0
   20e10:	add	r0, r0, #32
   20e14:	lsr	r0, ip, r0
   20e18:	cmp	r3, #0
   20e1c:	lslge	r0, ip, r3
   20e20:	str	r0, [fp, #-156]	; 0xffffff64
   20e24:	str	r1, [fp, #-160]	; 0xffffff60
   20e28:	ldr	r0, [fp, #-64]	; 0xffffffc0
   20e2c:	str	r0, [fp, #-152]	; 0xffffff68
   20e30:	ldr	r0, [fp, #-128]	; 0xffffff80
   20e34:	ldr	r1, [fp, #-124]	; 0xffffff84
   20e38:	ldr	r3, [fp, #-152]	; 0xffffff68
   20e3c:	rsb	lr, r3, #0
   20e40:	lsr	r0, r0, lr
   20e44:	add	lr, r3, #32
   20e48:	orr	r0, r0, r1, lsl lr
   20e4c:	sub	r2, r2, r3
   20e50:	cmp	r2, #0
   20e54:	lsrge	r0, r1, r2
   20e58:	str	r0, [sp, #164]	; 0xa4
   20e5c:	ldr	r0, [fp, #-128]	; 0xffffff80
   20e60:	ldr	r1, [fp, #-124]	; 0xffffff84
   20e64:	ldr	r2, [fp, #-160]	; 0xffffff60
   20e68:	ldr	r3, [fp, #-156]	; 0xffffff64
   20e6c:	subs	r2, r2, #1
   20e70:	sbc	r3, r3, #0
   20e74:	and	r1, r1, r3
   20e78:	and	r0, r0, r2
   20e7c:	str	r0, [sp, #152]	; 0x98
   20e80:	str	r1, [sp, #156]	; 0x9c
   20e84:	ldr	r0, [sp, #164]	; 0xa4
   20e88:	ldr	r1, [fp, #-152]	; 0xffffff68
   20e8c:	add	r1, r1, #64	; 0x40
   20e90:	add	r2, sp, #148	; 0x94
   20e94:	bl	213d8 <flatcc_json_printer_clear@@Base+0x10e4>
   20e98:	ldr	r1, [fp, #48]	; 0x30
   20e9c:	str	r0, [r1]
   20ea0:	ldr	r0, [fp, #44]	; 0x2c
   20ea4:	movw	r1, #0
   20ea8:	str	r1, [r0]
   20eac:	ldr	r0, [fp, #48]	; 0x30
   20eb0:	ldr	r0, [r0]
   20eb4:	cmp	r0, #0
   20eb8:	ble	21080 <flatcc_json_printer_clear@@Base+0xd8c>
   20ebc:	ldr	r0, [sp, #164]	; 0xa4
   20ec0:	ldr	r1, [sp, #148]	; 0x94
   20ec4:	udiv	r0, r0, r1
   20ec8:	str	r0, [sp, #132]	; 0x84
   20ecc:	ldr	r0, [sp, #132]	; 0x84
   20ed0:	add	r0, r0, #48	; 0x30
   20ed4:	ldr	r1, [fp, #40]	; 0x28
   20ed8:	ldr	r2, [fp, #44]	; 0x2c
   20edc:	ldr	r2, [r2]
   20ee0:	strb	r0, [r1, r2]
   20ee4:	ldr	r0, [fp, #44]	; 0x2c
   20ee8:	ldr	r1, [r0]
   20eec:	add	r1, r1, #1
   20ef0:	str	r1, [r0]
   20ef4:	ldr	r0, [sp, #148]	; 0x94
   20ef8:	ldr	r1, [sp, #164]	; 0xa4
   20efc:	udiv	r2, r1, r0
   20f00:	mls	r0, r2, r0, r1
   20f04:	str	r0, [sp, #164]	; 0xa4
   20f08:	ldr	r0, [fp, #48]	; 0x30
   20f0c:	ldr	r1, [r0]
   20f10:	sub	r1, r1, #1
   20f14:	str	r1, [r0]
   20f18:	ldr	r0, [sp, #164]	; 0xa4
   20f1c:	ldr	r1, [fp, #-152]	; 0xffffff68
   20f20:	rsb	r2, r1, #0
   20f24:	mvn	r3, #31
   20f28:	sub	r3, r3, r1
   20f2c:	add	r1, r1, #32
   20f30:	lsr	r1, r0, r1
   20f34:	cmp	r3, #0
   20f38:	lslge	r1, r0, r3
   20f3c:	lsl	r0, r0, r2
   20f40:	cmp	r3, #0
   20f44:	movwge	r0, #0
   20f48:	ldr	r2, [sp, #152]	; 0x98
   20f4c:	ldr	r3, [sp, #156]	; 0x9c
   20f50:	adds	r0, r0, r2
   20f54:	adc	r1, r1, r3
   20f58:	str	r0, [sp, #136]	; 0x88
   20f5c:	str	r1, [sp, #140]	; 0x8c
   20f60:	ldr	r0, [sp, #136]	; 0x88
   20f64:	ldr	r1, [sp, #140]	; 0x8c
   20f68:	ldr	r2, [fp, #-144]	; 0xffffff70
   20f6c:	ldr	r3, [fp, #-140]	; 0xffffff74
   20f70:	subs	r0, r0, r2
   20f74:	sbcs	r1, r1, r3
   20f78:	str	r0, [sp, #64]	; 0x40
   20f7c:	str	r1, [sp, #60]	; 0x3c
   20f80:	bcs	2106c <flatcc_json_printer_clear@@Base+0xd78>
   20f84:	b	20f88 <flatcc_json_printer_clear@@Base+0xc94>
   20f88:	ldr	r0, [fp, #40]	; 0x28
   20f8c:	ldr	r1, [fp, #44]	; 0x2c
   20f90:	ldr	r1, [r1]
   20f94:	ldr	r2, [fp, #-128]	; 0xffffff80
   20f98:	ldr	r3, [fp, #-124]	; 0xffffff84
   20f9c:	ldr	ip, [fp, #-120]	; 0xffffff88
   20fa0:	ldr	lr, [fp, #-116]	; 0xffffff8c
   20fa4:	ldr	r4, [fp, #-72]	; 0xffffffb8
   20fa8:	ldr	r5, [fp, #-68]	; 0xffffffbc
   20fac:	ldr	r6, [fp, #-64]	; 0xffffffc0
   20fb0:	ldr	r7, [fp, #-60]	; 0xffffffc4
   20fb4:	mov	r8, sp
   20fb8:	str	r7, [r8, #20]
   20fbc:	str	r6, [r8, #16]
   20fc0:	str	r5, [r8, #12]
   20fc4:	str	r4, [r8, #8]
   20fc8:	str	lr, [r8, #4]
   20fcc:	str	ip, [r8]
   20fd0:	add	ip, sp, #112	; 0x70
   20fd4:	str	r0, [sp, #56]	; 0x38
   20fd8:	mov	r0, ip
   20fdc:	str	r1, [sp, #52]	; 0x34
   20fe0:	bl	212fc <flatcc_json_printer_clear@@Base+0x1008>
   20fe4:	ldr	r2, [sp, #112]	; 0x70
   20fe8:	ldr	r3, [sp, #116]	; 0x74
   20fec:	ldr	r0, [fp, #-144]	; 0xffffff70
   20ff0:	ldr	r1, [fp, #-140]	; 0xffffff74
   20ff4:	ldr	ip, [sp, #136]	; 0x88
   20ff8:	ldr	lr, [sp, #140]	; 0x8c
   20ffc:	ldr	r4, [sp, #148]	; 0x94
   21000:	ldr	r5, [fp, #-152]	; 0xffffff68
   21004:	rsb	r6, r5, #0
   21008:	mvn	r7, #31
   2100c:	sub	r7, r7, r5
   21010:	add	r5, r5, #32
   21014:	lsr	r5, r4, r5
   21018:	cmp	r7, #0
   2101c:	lslge	r5, r4, r7
   21020:	lsl	r4, r4, r6
   21024:	cmp	r7, #0
   21028:	movwge	r4, #0
   2102c:	ldr	r6, [fp, #-96]	; 0xffffffa0
   21030:	ldr	r7, [fp, #-92]	; 0xffffffa4
   21034:	mov	r8, sp
   21038:	str	r7, [r8, #28]
   2103c:	str	r6, [r8, #24]
   21040:	str	r5, [r8, #20]
   21044:	str	r4, [r8, #16]
   21048:	str	lr, [r8, #12]
   2104c:	str	ip, [r8, #8]
   21050:	str	r1, [r8, #4]
   21054:	str	r0, [r8]
   21058:	ldr	r0, [sp, #56]	; 0x38
   2105c:	ldr	r1, [sp, #52]	; 0x34
   21060:	bl	21484 <flatcc_json_printer_clear@@Base+0x1190>
   21064:	str	r0, [fp, #-36]	; 0xffffffdc
   21068:	b	21270 <flatcc_json_printer_clear@@Base+0xf7c>
   2106c:	ldr	r0, [sp, #148]	; 0x94
   21070:	movw	r1, #10
   21074:	udiv	r0, r0, r1
   21078:	str	r0, [sp, #148]	; 0x94
   2107c:	b	20eac <flatcc_json_printer_clear@@Base+0xbb8>
   21080:	b	21084 <flatcc_json_printer_clear@@Base+0xd90>
   21084:	ldr	r0, [sp, #152]	; 0x98
   21088:	ldr	r1, [sp, #156]	; 0x9c
   2108c:	mov	r2, #10
   21090:	umull	r0, r3, r0, r2
   21094:	add	r1, r1, r1, lsl #2
   21098:	add	r1, r3, r1, lsl #1
   2109c:	str	r0, [sp, #152]	; 0x98
   210a0:	str	r1, [sp, #156]	; 0x9c
   210a4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   210a8:	ldr	r1, [fp, #-92]	; 0xffffffa4
   210ac:	umull	r0, r3, r0, r2
   210b0:	add	r1, r1, r1, lsl #2
   210b4:	add	r1, r3, r1, lsl #1
   210b8:	str	r0, [fp, #-96]	; 0xffffffa0
   210bc:	str	r1, [fp, #-92]	; 0xffffffa4
   210c0:	ldr	r0, [fp, #-144]	; 0xffffff70
   210c4:	ldr	r1, [fp, #-140]	; 0xffffff74
   210c8:	umull	r0, r2, r0, r2
   210cc:	add	r1, r1, r1, lsl #2
   210d0:	add	r1, r2, r1, lsl #1
   210d4:	str	r0, [fp, #-144]	; 0xffffff70
   210d8:	str	r1, [fp, #-140]	; 0xffffff74
   210dc:	ldr	r0, [sp, #152]	; 0x98
   210e0:	ldr	r1, [sp, #156]	; 0x9c
   210e4:	ldr	r2, [fp, #-152]	; 0xffffff68
   210e8:	rsb	r3, r2, #0
   210ec:	lsr	r0, r0, r3
   210f0:	add	r3, r2, #32
   210f4:	orr	r0, r0, r1, lsl r3
   210f8:	mvn	r3, #31
   210fc:	sub	r2, r3, r2
   21100:	cmp	r2, #0
   21104:	lsrge	r0, r1, r2
   21108:	str	r0, [sp, #108]	; 0x6c
   2110c:	ldr	r0, [sp, #108]	; 0x6c
   21110:	add	r0, r0, #48	; 0x30
   21114:	ldr	r1, [fp, #40]	; 0x28
   21118:	ldr	r2, [fp, #44]	; 0x2c
   2111c:	ldr	r2, [r2]
   21120:	strb	r0, [r1, r2]
   21124:	ldr	r0, [fp, #44]	; 0x2c
   21128:	ldr	r1, [r0]
   2112c:	add	r1, r1, #1
   21130:	str	r1, [r0]
   21134:	ldr	r0, [fp, #-160]	; 0xffffff60
   21138:	ldr	r1, [fp, #-156]	; 0xffffff64
   2113c:	subs	r0, r0, #1
   21140:	sbc	r1, r1, #0
   21144:	ldr	r2, [sp, #152]	; 0x98
   21148:	ldr	r3, [sp, #156]	; 0x9c
   2114c:	and	r1, r3, r1
   21150:	and	r0, r2, r0
   21154:	str	r0, [sp, #152]	; 0x98
   21158:	str	r1, [sp, #156]	; 0x9c
   2115c:	ldr	r0, [fp, #48]	; 0x30
   21160:	ldr	r1, [r0]
   21164:	sub	r1, r1, #1
   21168:	str	r1, [r0]
   2116c:	ldr	r0, [sp, #152]	; 0x98
   21170:	ldr	r1, [sp, #156]	; 0x9c
   21174:	ldr	r2, [fp, #-144]	; 0xffffff70
   21178:	ldr	r3, [fp, #-140]	; 0xffffff74
   2117c:	subs	r0, r0, r2
   21180:	sbcs	r1, r1, r3
   21184:	str	r0, [sp, #48]	; 0x30
   21188:	str	r1, [sp, #44]	; 0x2c
   2118c:	bcs	2126c <flatcc_json_printer_clear@@Base+0xf78>
   21190:	b	21194 <flatcc_json_printer_clear@@Base+0xea0>
   21194:	ldr	r0, [fp, #40]	; 0x28
   21198:	ldr	r1, [fp, #44]	; 0x2c
   2119c:	ldr	r1, [r1]
   211a0:	ldr	r2, [fp, #-128]	; 0xffffff80
   211a4:	ldr	r3, [fp, #-124]	; 0xffffff84
   211a8:	ldr	ip, [fp, #-120]	; 0xffffff88
   211ac:	ldr	lr, [fp, #-116]	; 0xffffff8c
   211b0:	ldr	r4, [fp, #-72]	; 0xffffffb8
   211b4:	ldr	r5, [fp, #-68]	; 0xffffffbc
   211b8:	ldr	r6, [fp, #-64]	; 0xffffffc0
   211bc:	ldr	r7, [fp, #-60]	; 0xffffffc4
   211c0:	mov	r8, sp
   211c4:	str	r7, [r8, #20]
   211c8:	str	r6, [r8, #16]
   211cc:	str	r5, [r8, #12]
   211d0:	str	r4, [r8, #8]
   211d4:	str	lr, [r8, #4]
   211d8:	str	ip, [r8]
   211dc:	add	ip, sp, #88	; 0x58
   211e0:	str	r0, [sp, #40]	; 0x28
   211e4:	mov	r0, ip
   211e8:	str	r1, [sp, #36]	; 0x24
   211ec:	bl	212fc <flatcc_json_printer_clear@@Base+0x1008>
   211f0:	ldr	r0, [sp, #88]	; 0x58
   211f4:	ldr	r1, [sp, #92]	; 0x5c
   211f8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   211fc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   21200:	umull	ip, lr, r0, r2
   21204:	mla	r0, r0, r3, lr
   21208:	mla	r0, r1, r2, r0
   2120c:	ldr	r1, [fp, #-144]	; 0xffffff70
   21210:	ldr	lr, [fp, #-140]	; 0xffffff74
   21214:	ldr	r4, [sp, #152]	; 0x98
   21218:	ldr	r5, [sp, #156]	; 0x9c
   2121c:	ldr	r6, [fp, #-160]	; 0xffffff60
   21220:	ldr	r7, [fp, #-156]	; 0xffffff64
   21224:	mov	r8, sp
   21228:	str	r3, [r8, #28]
   2122c:	str	r2, [r8, #24]
   21230:	str	r7, [r8, #20]
   21234:	str	r6, [r8, #16]
   21238:	str	r5, [r8, #12]
   2123c:	str	r4, [r8, #8]
   21240:	str	lr, [r8, #4]
   21244:	str	r1, [r8]
   21248:	ldr	r1, [sp, #40]	; 0x28
   2124c:	str	r0, [sp, #32]
   21250:	mov	r0, r1
   21254:	ldr	r1, [sp, #36]	; 0x24
   21258:	mov	r2, ip
   2125c:	ldr	r3, [sp, #32]
   21260:	bl	21484 <flatcc_json_printer_clear@@Base+0x1190>
   21264:	str	r0, [fp, #-36]	; 0xffffffdc
   21268:	b	21270 <flatcc_json_printer_clear@@Base+0xf7c>
   2126c:	b	21084 <flatcc_json_printer_clear@@Base+0xd90>
   21270:	ldr	r0, [fp, #-36]	; 0xffffffdc
   21274:	sub	sp, fp, #28
   21278:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2127c:	sub	sp, sp, #24
   21280:	vstr	d0, [sp, #8]
   21284:	vldr	d0, [sp, #8]
   21288:	vcvt.s32.f64	s2, d0
   2128c:	vmov	r0, s2
   21290:	str	r0, [sp, #4]
   21294:	vldr	d0, [sp, #8]
   21298:	vcmpe.f64	d0, #0.0
   2129c:	vmrs	APSR_nzcv, fpscr
   212a0:	bpl	212b0 <flatcc_json_printer_clear@@Base+0xfbc>
   212a4:	ldr	r0, [sp, #4]
   212a8:	str	r0, [sp, #20]
   212ac:	b	212f0 <flatcc_json_printer_clear@@Base+0xffc>
   212b0:	vldr	d16, [sp, #8]
   212b4:	ldr	r0, [sp, #4]
   212b8:	vmov	s0, r0
   212bc:	vcvt.f64.s32	d17, s0
   212c0:	vsub.f64	d16, d16, d17
   212c4:	vcmp.f64	d16, #0.0
   212c8:	vmrs	APSR_nzcv, fpscr
   212cc:	bne	212dc <flatcc_json_printer_clear@@Base+0xfe8>
   212d0:	ldr	r0, [sp, #4]
   212d4:	str	r0, [sp]
   212d8:	b	212e8 <flatcc_json_printer_clear@@Base+0xff4>
   212dc:	ldr	r0, [sp, #4]
   212e0:	add	r0, r0, #1
   212e4:	str	r0, [sp]
   212e8:	ldr	r0, [sp]
   212ec:	str	r0, [sp, #20]
   212f0:	ldr	r0, [sp, #20]
   212f4:	add	sp, sp, #24
   212f8:	bx	lr
   212fc:	push	{r4, r5, r6, sl, fp, lr}
   21300:	add	fp, sp, #16
   21304:	sub	sp, sp, #40	; 0x28
   21308:	ldr	r1, [fp, #28]
   2130c:	ldr	ip, [fp, #24]
   21310:	ldr	lr, [fp, #20]
   21314:	ldr	r4, [fp, #16]
   21318:	ldr	r5, [fp, #12]
   2131c:	ldr	r6, [fp, #8]
   21320:	str	r2, [sp, #24]
   21324:	str	r3, [sp, #28]
   21328:	str	r6, [sp, #32]
   2132c:	str	r5, [sp, #36]	; 0x24
   21330:	str	r1, [sp, #20]
   21334:	str	ip, [sp, #16]
   21338:	str	lr, [sp, #12]
   2133c:	str	r4, [sp, #8]
   21340:	ldr	r1, [sp, #24]
   21344:	ldr	r2, [sp, #28]
   21348:	ldr	r3, [sp, #8]
   2134c:	ldr	ip, [sp, #12]
   21350:	subs	r1, r1, r3
   21354:	sbc	r2, r2, ip
   21358:	str	r1, [r0]
   2135c:	str	r2, [r0, #4]
   21360:	ldr	r1, [sp, #32]
   21364:	str	r1, [r0, #8]
   21368:	ldr	r0, [sp, #32]
   2136c:	ldr	r1, [sp, #16]
   21370:	cmp	r0, r1
   21374:	bne	213a4 <flatcc_json_printer_clear@@Base+0x10b0>
   21378:	ldr	r0, [sp, #24]
   2137c:	ldr	r1, [sp, #28]
   21380:	ldr	r2, [sp, #8]
   21384:	ldr	r3, [sp, #12]
   21388:	subs	r0, r0, r2
   2138c:	sbcs	r1, r1, r3
   21390:	str	r0, [sp, #4]
   21394:	str	r1, [sp]
   21398:	bcc	213a4 <flatcc_json_printer_clear@@Base+0x10b0>
   2139c:	b	213a0 <flatcc_json_printer_clear@@Base+0x10ac>
   213a0:	b	213c4 <flatcc_json_printer_clear@@Base+0x10d0>
   213a4:	ldr	r0, [pc, #32]	; 213cc <flatcc_json_printer_clear@@Base+0x10d8>
   213a8:	add	r0, pc, r0
   213ac:	ldr	r1, [pc, #28]	; 213d0 <flatcc_json_printer_clear@@Base+0x10dc>
   213b0:	add	r1, pc, r1
   213b4:	ldr	r2, [pc, #24]	; 213d4 <flatcc_json_printer_clear@@Base+0x10e0>
   213b8:	add	r3, pc, r2
   213bc:	movw	r2, #239	; 0xef
   213c0:	bl	12984 <__assert_fail@plt>
   213c4:	sub	sp, fp, #16
   213c8:	pop	{r4, r5, r6, sl, fp, pc}
   213cc:	andeq	r1, r0, r8, lsr #19
   213d0:	strdeq	r1, [r0], -sl
   213d4:			; <UNDEFINED> instruction: 0x000019b1
   213d8:	sub	sp, sp, #24
   213dc:	ldr	r3, [pc, #144]	; 21474 <flatcc_json_printer_clear@@Base+0x1180>
   213e0:	add	r3, pc, r3
   213e4:	str	r0, [sp, #20]
   213e8:	str	r1, [sp, #16]
   213ec:	str	r2, [sp, #12]
   213f0:	ldr	r0, [sp, #16]
   213f4:	movw	r1, #1233	; 0x4d1
   213f8:	mla	r0, r0, r1, r1
   213fc:	mov	r1, #1
   21400:	add	r0, r1, r0, asr #12
   21404:	str	r0, [sp, #8]
   21408:	ldr	r0, [sp, #20]
   2140c:	ldr	r1, [sp, #8]
   21410:	ldr	r2, [pc, #100]	; 2147c <flatcc_json_printer_clear@@Base+0x1188>
   21414:	add	r2, pc, r2
   21418:	add	r1, r2, r1, lsl #2
   2141c:	ldr	r1, [r1]
   21420:	cmp	r0, r1
   21424:	str	r3, [sp, #4]
   21428:	bcs	2143c <flatcc_json_printer_clear@@Base+0x1148>
   2142c:	ldr	r0, [sp, #8]
   21430:	mvn	r1, #0
   21434:	add	r0, r0, r1
   21438:	str	r0, [sp, #8]
   2143c:	ldr	r0, [pc, #52]	; 21478 <flatcc_json_printer_clear@@Base+0x1184>
   21440:	add	r0, pc, r0
   21444:	ldr	r1, [sp, #8]
   21448:	ldr	r2, [pc, #48]	; 21480 <flatcc_json_printer_clear@@Base+0x118c>
   2144c:	add	r2, pc, r2
   21450:	add	r1, r2, r1, lsl #2
   21454:	ldr	r1, [r1]
   21458:	ldr	r2, [sp, #12]
   2145c:	str	r1, [r2]
   21460:	ldr	r1, [sp, #8]
   21464:	str	r0, [sp]
   21468:	mov	r0, r1
   2146c:	add	sp, sp, #24
   21470:	bx	lr
   21474:	andeq	r2, r0, r8, lsr #1
   21478:	andeq	r2, r0, r8, asr #32
   2147c:	andeq	r2, r0, r4, ror r0
   21480:	andeq	r2, r0, ip, lsr r0
   21484:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   21488:	add	fp, sp, #24
   2148c:	sub	sp, sp, #168	; 0xa8
   21490:	ldr	ip, [fp, #36]	; 0x24
   21494:	ldr	lr, [fp, #32]
   21498:	ldr	r4, [fp, #28]
   2149c:	ldr	r5, [fp, #24]
   214a0:	ldr	r6, [fp, #20]
   214a4:	ldr	r7, [fp, #16]
   214a8:	ldr	r8, [fp, #12]
   214ac:	ldr	r9, [fp, #8]
   214b0:	str	r0, [fp, #-32]	; 0xffffffe0
   214b4:	str	r1, [fp, #-36]	; 0xffffffdc
   214b8:	str	r3, [fp, #-44]	; 0xffffffd4
   214bc:	str	r2, [fp, #-48]	; 0xffffffd0
   214c0:	str	r8, [fp, #-52]	; 0xffffffcc
   214c4:	str	r9, [fp, #-56]	; 0xffffffc8
   214c8:	str	r6, [fp, #-60]	; 0xffffffc4
   214cc:	str	r7, [fp, #-64]	; 0xffffffc0
   214d0:	str	r4, [fp, #-68]	; 0xffffffbc
   214d4:	str	r5, [fp, #-72]	; 0xffffffb8
   214d8:	str	ip, [fp, #-76]	; 0xffffffb4
   214dc:	str	lr, [fp, #-80]	; 0xffffffb0
   214e0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   214e4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   214e8:	ldr	r2, [fp, #-80]	; 0xffffffb0
   214ec:	ldr	r3, [fp, #-76]	; 0xffffffb4
   214f0:	subs	r0, r0, r2
   214f4:	sbc	r1, r1, r3
   214f8:	str	r0, [fp, #-88]	; 0xffffffa8
   214fc:	str	r1, [fp, #-84]	; 0xffffffac
   21500:	ldr	r0, [fp, #-48]	; 0xffffffd0
   21504:	ldr	r1, [fp, #-44]	; 0xffffffd4
   21508:	ldr	r2, [fp, #-80]	; 0xffffffb0
   2150c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   21510:	adds	r0, r0, r2
   21514:	adc	r1, r1, r3
   21518:	str	r0, [sp, #96]	; 0x60
   2151c:	str	r1, [sp, #100]	; 0x64
   21520:	ldr	r0, [fp, #-64]	; 0xffffffc0
   21524:	ldr	r1, [fp, #-60]	; 0xffffffc4
   21528:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2152c:	ldr	r3, [fp, #-84]	; 0xffffffac
   21530:	mov	ip, #0
   21534:	subs	r0, r0, r2
   21538:	sbcs	r1, r1, r3
   2153c:	str	r1, [sp, #92]	; 0x5c
   21540:	str	r0, [sp, #88]	; 0x58
   21544:	str	ip, [sp, #84]	; 0x54
   21548:	bcs	21624 <flatcc_json_printer_clear@@Base+0x1330>
   2154c:	b	21550 <flatcc_json_printer_clear@@Base+0x125c>
   21550:	ldr	r0, [fp, #-56]	; 0xffffffc8
   21554:	ldr	r1, [fp, #-52]	; 0xffffffcc
   21558:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2155c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   21560:	subs	r0, r0, r2
   21564:	sbc	r1, r1, r3
   21568:	ldr	r2, [fp, #-72]	; 0xffffffb8
   2156c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   21570:	mov	ip, #0
   21574:	subs	r0, r0, r2
   21578:	sbcs	r1, r1, r3
   2157c:	str	r1, [sp, #80]	; 0x50
   21580:	str	r0, [sp, #76]	; 0x4c
   21584:	str	ip, [sp, #84]	; 0x54
   21588:	bcc	21624 <flatcc_json_printer_clear@@Base+0x1330>
   2158c:	b	21590 <flatcc_json_printer_clear@@Base+0x129c>
   21590:	ldr	r0, [fp, #-64]	; 0xffffffc0
   21594:	ldr	r1, [fp, #-60]	; 0xffffffc4
   21598:	ldr	r2, [fp, #-72]	; 0xffffffb8
   2159c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   215a0:	adds	r0, r0, r2
   215a4:	adc	r1, r1, r3
   215a8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   215ac:	ldr	r3, [fp, #-84]	; 0xffffffac
   215b0:	mov	ip, #1
   215b4:	subs	r0, r0, r2
   215b8:	sbcs	r1, r1, r3
   215bc:	str	r1, [sp, #72]	; 0x48
   215c0:	str	r0, [sp, #68]	; 0x44
   215c4:	str	ip, [sp, #64]	; 0x40
   215c8:	bcc	2161c <flatcc_json_printer_clear@@Base+0x1328>
   215cc:	b	215d0 <flatcc_json_printer_clear@@Base+0x12dc>
   215d0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   215d4:	ldr	r1, [fp, #-84]	; 0xffffffac
   215d8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   215dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   215e0:	subs	ip, r0, r2
   215e4:	sbc	lr, r1, r3
   215e8:	ldr	r4, [fp, #-72]	; 0xffffffb8
   215ec:	ldr	r5, [fp, #-68]	; 0xffffffbc
   215f0:	adds	r2, r2, r4
   215f4:	adc	r3, r3, r5
   215f8:	subs	r0, r2, r0
   215fc:	sbc	r1, r3, r1
   21600:	subs	r0, ip, r0
   21604:	sbcs	r1, lr, r1
   21608:	mov	r2, #0
   2160c:	movwcs	r2, #1
   21610:	str	r0, [sp, #60]	; 0x3c
   21614:	str	r1, [sp, #56]	; 0x38
   21618:	str	r2, [sp, #64]	; 0x40
   2161c:	ldr	r0, [sp, #64]	; 0x40
   21620:	str	r0, [sp, #84]	; 0x54
   21624:	ldr	r0, [sp, #84]	; 0x54
   21628:	tst	r0, #1
   2162c:	beq	2166c <flatcc_json_printer_clear@@Base+0x1378>
   21630:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21634:	ldr	r1, [fp, #-36]	; 0xffffffdc
   21638:	add	r0, r0, r1
   2163c:	ldrb	r1, [r0, #-1]
   21640:	sub	r1, r1, #1
   21644:	strb	r1, [r0, #-1]
   21648:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2164c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   21650:	ldr	r2, [fp, #-64]	; 0xffffffc0
   21654:	ldr	r3, [fp, #-60]	; 0xffffffc4
   21658:	adds	r0, r2, r0
   2165c:	adc	r1, r3, r1
   21660:	str	r0, [fp, #-64]	; 0xffffffc0
   21664:	str	r1, [fp, #-60]	; 0xffffffc4
   21668:	b	21520 <flatcc_json_printer_clear@@Base+0x122c>
   2166c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   21670:	ldr	r1, [fp, #-60]	; 0xffffffc4
   21674:	ldr	r2, [sp, #96]	; 0x60
   21678:	ldr	r3, [sp, #100]	; 0x64
   2167c:	subs	r0, r0, r2
   21680:	sbcs	r1, r1, r3
   21684:	str	r0, [sp, #52]	; 0x34
   21688:	str	r1, [sp, #48]	; 0x30
   2168c:	bcs	21758 <flatcc_json_printer_clear@@Base+0x1464>
   21690:	b	21694 <flatcc_json_printer_clear@@Base+0x13a0>
   21694:	ldr	r0, [fp, #-56]	; 0xffffffc8
   21698:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2169c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   216a0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   216a4:	subs	r0, r0, r2
   216a8:	sbc	r1, r1, r3
   216ac:	ldr	r2, [fp, #-72]	; 0xffffffb8
   216b0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   216b4:	subs	r0, r0, r2
   216b8:	sbcs	r1, r1, r3
   216bc:	str	r0, [sp, #44]	; 0x2c
   216c0:	str	r1, [sp, #40]	; 0x28
   216c4:	bcc	21758 <flatcc_json_printer_clear@@Base+0x1464>
   216c8:	b	216cc <flatcc_json_printer_clear@@Base+0x13d8>
   216cc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   216d0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   216d4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   216d8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   216dc:	adds	r0, r0, r2
   216e0:	adc	r1, r1, r3
   216e4:	ldr	r2, [sp, #96]	; 0x60
   216e8:	ldr	r3, [sp, #100]	; 0x64
   216ec:	subs	r0, r0, r2
   216f0:	sbcs	r1, r1, r3
   216f4:	str	r0, [sp, #36]	; 0x24
   216f8:	str	r1, [sp, #32]
   216fc:	bcc	2174c <flatcc_json_printer_clear@@Base+0x1458>
   21700:	b	21704 <flatcc_json_printer_clear@@Base+0x1410>
   21704:	ldr	r0, [sp, #96]	; 0x60
   21708:	ldr	r1, [sp, #100]	; 0x64
   2170c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   21710:	ldr	r3, [fp, #-60]	; 0xffffffc4
   21714:	subs	ip, r0, r2
   21718:	sbc	lr, r1, r3
   2171c:	ldr	r4, [fp, #-72]	; 0xffffffb8
   21720:	ldr	r5, [fp, #-68]	; 0xffffffbc
   21724:	adds	r2, r2, r4
   21728:	adc	r3, r3, r5
   2172c:	subs	r0, r2, r0
   21730:	sbc	r1, r3, r1
   21734:	subs	r0, r0, ip
   21738:	sbcs	r1, r1, lr
   2173c:	str	r0, [sp, #28]
   21740:	str	r1, [sp, #24]
   21744:	bcs	21758 <flatcc_json_printer_clear@@Base+0x1464>
   21748:	b	2174c <flatcc_json_printer_clear@@Base+0x1458>
   2174c:	movw	r0, #0
   21750:	str	r0, [fp, #-28]	; 0xffffffe4
   21754:	b	217e0 <flatcc_json_printer_clear@@Base+0x14ec>
   21758:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2175c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   21760:	lsl	r1, r1, #1
   21764:	orr	r1, r1, r0, lsr #31
   21768:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2176c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   21770:	mov	ip, #0
   21774:	subs	r0, r2, r0, lsl #1
   21778:	sbcs	r1, r3, r1
   2177c:	str	r0, [sp, #20]
   21780:	str	r1, [sp, #16]
   21784:	str	ip, [sp, #12]
   21788:	bcc	217d4 <flatcc_json_printer_clear@@Base+0x14e0>
   2178c:	b	21790 <flatcc_json_printer_clear@@Base+0x149c>
   21790:	ldr	r0, [fp, #-64]	; 0xffffffc0
   21794:	ldr	r1, [fp, #-60]	; 0xffffffc4
   21798:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2179c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   217a0:	ldr	ip, [fp, #-80]	; 0xffffffb0
   217a4:	ldr	lr, [fp, #-76]	; 0xffffffb4
   217a8:	lsl	lr, lr, #2
   217ac:	orr	lr, lr, ip, lsr #30
   217b0:	subs	r2, r2, ip, lsl #2
   217b4:	sbc	r3, r3, lr
   217b8:	subs	r0, r2, r0
   217bc:	sbcs	r1, r3, r1
   217c0:	mov	r2, #0
   217c4:	movwcs	r2, #1
   217c8:	str	r0, [sp, #8]
   217cc:	str	r1, [sp, #4]
   217d0:	str	r2, [sp, #12]
   217d4:	ldr	r0, [sp, #12]
   217d8:	and	r0, r0, #1
   217dc:	str	r0, [fp, #-28]	; 0xffffffe4
   217e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   217e4:	sub	sp, fp, #24
   217e8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   217ec:	push	{fp, lr}
   217f0:	mov	fp, sp
   217f4:	sub	sp, sp, #24
   217f8:	str	r0, [fp, #-4]
   217fc:	str	r1, [fp, #-8]
   21800:	str	r2, [sp, #12]
   21804:	ldr	r0, [fp, #-4]
   21808:	ldr	r0, [r0, #20]
   2180c:	ldr	r1, [fp, #-4]
   21810:	ldr	r1, [r1, #16]
   21814:	cmp	r0, r1
   21818:	bcc	2183c <flatcc_json_printer_clear@@Base+0x1548>
   2181c:	ldr	r0, [fp, #-4]
   21820:	ldr	r0, [r0, #44]	; 0x2c
   21824:	ldr	r1, [fp, #-4]
   21828:	str	r0, [sp, #4]
   2182c:	mov	r0, r1
   21830:	movw	r1, #0
   21834:	ldr	r2, [sp, #4]
   21838:	blx	r2
   2183c:	ldr	r0, [fp, #-4]
   21840:	ldr	r0, [r0, #16]
   21844:	ldr	r1, [fp, #-4]
   21848:	ldr	r1, [r1, #20]
   2184c:	sub	r0, r0, r1
   21850:	str	r0, [sp, #8]
   21854:	ldr	r0, [sp, #12]
   21858:	ldr	r1, [sp, #8]
   2185c:	cmp	r0, r1
   21860:	bls	218e8 <flatcc_json_printer_clear@@Base+0x15f4>
   21864:	ldr	r0, [fp, #-4]
   21868:	ldr	r0, [r0, #20]
   2186c:	ldr	r1, [fp, #-8]
   21870:	ldr	r2, [sp, #8]
   21874:	bl	128ac <memcpy@plt>
   21878:	ldr	r0, [sp, #8]
   2187c:	ldr	r1, [fp, #-4]
   21880:	ldr	r2, [r1, #20]
   21884:	add	r0, r2, r0
   21888:	str	r0, [r1, #20]
   2188c:	ldr	r0, [sp, #8]
   21890:	ldr	r1, [fp, #-8]
   21894:	add	r0, r1, r0
   21898:	str	r0, [fp, #-8]
   2189c:	ldr	r0, [sp, #8]
   218a0:	ldr	r1, [sp, #12]
   218a4:	sub	r0, r1, r0
   218a8:	str	r0, [sp, #12]
   218ac:	ldr	r0, [fp, #-4]
   218b0:	ldr	r0, [r0, #44]	; 0x2c
   218b4:	ldr	r1, [fp, #-4]
   218b8:	str	r0, [sp]
   218bc:	mov	r0, r1
   218c0:	movw	r1, #0
   218c4:	ldr	r2, [sp]
   218c8:	blx	r2
   218cc:	ldr	r0, [fp, #-4]
   218d0:	ldr	r0, [r0, #16]
   218d4:	ldr	r1, [fp, #-4]
   218d8:	ldr	r1, [r1, #20]
   218dc:	sub	r0, r0, r1
   218e0:	str	r0, [sp, #8]
   218e4:	b	21854 <flatcc_json_printer_clear@@Base+0x1560>
   218e8:	ldr	r0, [fp, #-4]
   218ec:	ldr	r0, [r0, #20]
   218f0:	ldr	r1, [fp, #-8]
   218f4:	ldr	r2, [sp, #12]
   218f8:	bl	128ac <memcpy@plt>
   218fc:	ldr	r0, [sp, #12]
   21900:	ldr	r1, [fp, #-4]
   21904:	ldr	r2, [r1, #20]
   21908:	add	r0, r2, r0
   2190c:	str	r0, [r1, #20]
   21910:	mov	sp, fp
   21914:	pop	{fp, pc}
   21918:	push	{fp, lr}
   2191c:	mov	fp, sp
   21920:	sub	sp, sp, #24
   21924:	str	r0, [fp, #-4]
   21928:	str	r1, [fp, #-8]
   2192c:	ldr	r0, [fp, #-4]
   21930:	ldr	r0, [r0, #20]
   21934:	ldr	r1, [fp, #-4]
   21938:	ldr	r1, [r1, #16]
   2193c:	cmp	r0, r1
   21940:	bcc	21964 <flatcc_json_printer_clear@@Base+0x1670>
   21944:	ldr	r0, [fp, #-4]
   21948:	ldr	r0, [r0, #44]	; 0x2c
   2194c:	ldr	r1, [fp, #-4]
   21950:	str	r0, [sp, #8]
   21954:	mov	r0, r1
   21958:	movw	r1, #0
   2195c:	ldr	r2, [sp, #8]
   21960:	blx	r2
   21964:	ldr	r0, [fp, #-4]
   21968:	ldr	r0, [r0, #16]
   2196c:	ldr	r1, [fp, #-4]
   21970:	ldr	r1, [r1, #20]
   21974:	sub	r0, r0, r1
   21978:	str	r0, [sp, #12]
   2197c:	ldr	r0, [fp, #-8]
   21980:	ldr	r1, [sp, #12]
   21984:	cmp	r0, r1
   21988:	bls	21a04 <flatcc_json_printer_clear@@Base+0x1710>
   2198c:	ldr	r0, [fp, #-4]
   21990:	ldr	r0, [r0, #20]
   21994:	ldr	r2, [sp, #12]
   21998:	movw	r1, #32
   2199c:	and	r1, r1, #255	; 0xff
   219a0:	bl	1293c <memset@plt>
   219a4:	ldr	r0, [sp, #12]
   219a8:	ldr	r1, [fp, #-4]
   219ac:	ldr	r2, [r1, #20]
   219b0:	add	r0, r2, r0
   219b4:	str	r0, [r1, #20]
   219b8:	ldr	r0, [sp, #12]
   219bc:	ldr	r1, [fp, #-8]
   219c0:	sub	r0, r1, r0
   219c4:	str	r0, [fp, #-8]
   219c8:	ldr	r0, [fp, #-4]
   219cc:	ldr	r0, [r0, #44]	; 0x2c
   219d0:	ldr	r1, [fp, #-4]
   219d4:	str	r0, [sp, #4]
   219d8:	mov	r0, r1
   219dc:	movw	r1, #0
   219e0:	ldr	r2, [sp, #4]
   219e4:	blx	r2
   219e8:	ldr	r0, [fp, #-4]
   219ec:	ldr	r0, [r0, #16]
   219f0:	ldr	r1, [fp, #-4]
   219f4:	ldr	r1, [r1, #20]
   219f8:	sub	r0, r0, r1
   219fc:	str	r0, [sp, #12]
   21a00:	b	2197c <flatcc_json_printer_clear@@Base+0x1688>
   21a04:	ldr	r0, [fp, #-4]
   21a08:	ldr	r0, [r0, #20]
   21a0c:	ldr	r2, [fp, #-8]
   21a10:	movw	r1, #32
   21a14:	and	r1, r1, #255	; 0xff
   21a18:	bl	1293c <memset@plt>
   21a1c:	ldr	r0, [fp, #-8]
   21a20:	ldr	r1, [fp, #-4]
   21a24:	ldr	r2, [r1, #20]
   21a28:	add	r0, r2, r0
   21a2c:	str	r0, [r1, #20]
   21a30:	mov	sp, fp
   21a34:	pop	{fp, pc}
   21a38:	push	{fp, lr}
   21a3c:	mov	fp, sp
   21a40:	sub	sp, sp, #8
   21a44:	str	r0, [sp, #4]
   21a48:	str	r1, [sp]
   21a4c:	ldr	r0, [sp, #4]
   21a50:	ldr	r1, [sp]
   21a54:	add	r0, r0, r1
   21a58:	bl	21a68 <flatcc_json_printer_clear@@Base+0x1774>
   21a5c:	uxth	r0, r0
   21a60:	mov	sp, fp
   21a64:	pop	{fp, pc}
   21a68:	push	{fp, lr}
   21a6c:	mov	fp, sp
   21a70:	sub	sp, sp, #8
   21a74:	str	r0, [sp, #4]
   21a78:	ldr	r0, [sp, #4]
   21a7c:	ldrh	r0, [r0]
   21a80:	bl	21a90 <flatcc_json_printer_clear@@Base+0x179c>
   21a84:	uxth	r0, r0
   21a88:	mov	sp, fp
   21a8c:	pop	{fp, pc}
   21a90:	sub	sp, sp, #4
   21a94:	strh	r0, [sp, #2]
   21a98:	ldrh	r0, [sp, #2]
   21a9c:	add	sp, sp, #4
   21aa0:	bx	lr
   21aa4:	sub	sp, sp, #28
   21aa8:	str	r0, [sp, #24]
   21aac:	str	r1, [sp, #20]
   21ab0:	ldr	r0, [sp, #24]
   21ab4:	movw	r1, #43691	; 0xaaab
   21ab8:	movt	r1, #43690	; 0xaaaa
   21abc:	umull	r1, r2, r0, r1
   21ac0:	lsr	r2, r2, #1
   21ac4:	add	r2, r2, r2, lsl #1
   21ac8:	sub	r0, r0, r2
   21acc:	str	r0, [sp, #16]
   21ad0:	ldr	r0, [sp, #24]
   21ad4:	lsl	r0, r0, #2
   21ad8:	movw	r2, #3
   21adc:	udiv	r0, r0, r2
   21ae0:	add	r0, r0, #3
   21ae4:	mvn	r2, #3
   21ae8:	and	r0, r0, r2
   21aec:	str	r0, [sp, #12]
   21af0:	ldr	r0, [sp, #20]
   21af4:	and	r0, r0, #128	; 0x80
   21af8:	str	r0, [sp, #8]
   21afc:	ldr	r0, [sp, #8]
   21b00:	cmp	r0, #0
   21b04:	str	r1, [sp, #4]
   21b08:	bne	21b58 <flatcc_json_printer_clear@@Base+0x1864>
   21b0c:	ldr	r0, [sp, #16]
   21b10:	cmp	r0, #1
   21b14:	str	r0, [sp]
   21b18:	beq	21b40 <flatcc_json_printer_clear@@Base+0x184c>
   21b1c:	b	21b20 <flatcc_json_printer_clear@@Base+0x182c>
   21b20:	ldr	r0, [sp]
   21b24:	cmp	r0, #2
   21b28:	bne	21b50 <flatcc_json_printer_clear@@Base+0x185c>
   21b2c:	b	21b30 <flatcc_json_printer_clear@@Base+0x183c>
   21b30:	ldr	r0, [sp, #12]
   21b34:	sub	r0, r0, #1
   21b38:	str	r0, [sp, #12]
   21b3c:	b	21b54 <flatcc_json_printer_clear@@Base+0x1860>
   21b40:	ldr	r0, [sp, #12]
   21b44:	sub	r0, r0, #2
   21b48:	str	r0, [sp, #12]
   21b4c:	b	21b54 <flatcc_json_printer_clear@@Base+0x1860>
   21b50:	b	21b54 <flatcc_json_printer_clear@@Base+0x1860>
   21b54:	b	21b58 <flatcc_json_printer_clear@@Base+0x1864>
   21b58:	ldr	r0, [sp, #12]
   21b5c:	add	sp, sp, #28
   21b60:	bx	lr
   21b64:	push	{r4, sl, fp, lr}
   21b68:	add	fp, sp, #8
   21b6c:	sub	sp, sp, #56	; 0x38
   21b70:	ldr	ip, [fp, #8]
   21b74:	ldr	lr, [pc, #848]	; 21ecc <flatcc_json_printer_clear@@Base+0x1bd8>
   21b78:	add	lr, pc, lr
   21b7c:	ldr	r4, [pc, #844]	; 21ed0 <flatcc_json_printer_clear@@Base+0x1bdc>
   21b80:	add	r4, pc, r4
   21b84:	str	r0, [fp, #-12]
   21b88:	str	r1, [fp, #-16]
   21b8c:	str	r2, [fp, #-20]	; 0xffffffec
   21b90:	str	r3, [fp, #-24]	; 0xffffffe8
   21b94:	str	r4, [fp, #-28]	; 0xffffffe4
   21b98:	str	lr, [sp, #32]
   21b9c:	ldr	r0, [fp, #-12]
   21ba0:	str	r0, [sp, #24]
   21ba4:	ldr	r0, [fp, #8]
   21ba8:	and	r0, r0, #128	; 0x80
   21bac:	str	r0, [sp, #20]
   21bb0:	movw	r0, #0
   21bb4:	str	r0, [sp, #16]
   21bb8:	movw	r1, #3
   21bbc:	str	r1, [sp, #12]
   21bc0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   21bc4:	cmp	r1, r0
   21bc8:	str	ip, [sp, #8]
   21bcc:	bne	21bdc <flatcc_json_printer_clear@@Base+0x18e8>
   21bd0:	movw	r0, #2
   21bd4:	str	r0, [sp, #12]
   21bd8:	b	21e78 <flatcc_json_printer_clear@@Base+0x1b84>
   21bdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21be0:	ldr	r0, [r0]
   21be4:	str	r0, [sp, #16]
   21be8:	ldr	r0, [fp, #8]
   21bec:	bic	r0, r0, #224	; 0xe0
   21bf0:	str	r0, [fp, #8]
   21bf4:	ldr	r0, [fp, #8]
   21bf8:	cmp	r0, #0
   21bfc:	str	r0, [sp, #4]
   21c00:	beq	21c18 <flatcc_json_printer_clear@@Base+0x1924>
   21c04:	b	21c08 <flatcc_json_printer_clear@@Base+0x1914>
   21c08:	ldr	r0, [sp, #4]
   21c0c:	cmp	r0, #1
   21c10:	beq	21c24 <flatcc_json_printer_clear@@Base+0x1930>
   21c14:	b	21c30 <flatcc_json_printer_clear@@Base+0x193c>
   21c18:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21c1c:	str	r0, [sp, #28]
   21c20:	b	21c34 <flatcc_json_printer_clear@@Base+0x1940>
   21c24:	ldr	r0, [sp, #32]
   21c28:	str	r0, [sp, #28]
   21c2c:	b	21c34 <flatcc_json_printer_clear@@Base+0x1940>
   21c30:	b	21e78 <flatcc_json_printer_clear@@Base+0x1b84>
   21c34:	movw	r0, #0
   21c38:	str	r0, [sp, #12]
   21c3c:	ldr	r0, [sp, #16]
   21c40:	cmp	r0, #3
   21c44:	bcc	21d18 <flatcc_json_printer_clear@@Base+0x1a24>
   21c48:	ldr	r0, [sp, #28]
   21c4c:	ldr	r1, [fp, #-16]
   21c50:	ldrb	r1, [r1]
   21c54:	asr	r1, r1, #2
   21c58:	add	r0, r0, r1
   21c5c:	ldrb	r0, [r0]
   21c60:	ldr	r1, [fp, #-12]
   21c64:	strb	r0, [r1]
   21c68:	ldr	r0, [sp, #28]
   21c6c:	ldr	r1, [fp, #-16]
   21c70:	ldrb	r1, [r1]
   21c74:	lsl	r1, r1, #4
   21c78:	and	r1, r1, #48	; 0x30
   21c7c:	ldr	r2, [fp, #-16]
   21c80:	ldrb	r2, [r2, #1]
   21c84:	asr	r2, r2, #4
   21c88:	orr	r1, r1, r2
   21c8c:	add	r0, r0, r1
   21c90:	ldrb	r0, [r0]
   21c94:	ldr	r1, [fp, #-12]
   21c98:	strb	r0, [r1, #1]
   21c9c:	ldr	r0, [sp, #28]
   21ca0:	ldr	r1, [fp, #-16]
   21ca4:	ldrb	r1, [r1, #1]
   21ca8:	lsl	r1, r1, #2
   21cac:	and	r1, r1, #60	; 0x3c
   21cb0:	ldr	r2, [fp, #-16]
   21cb4:	ldrb	r2, [r2, #2]
   21cb8:	asr	r2, r2, #6
   21cbc:	orr	r1, r1, r2
   21cc0:	add	r0, r0, r1
   21cc4:	ldrb	r0, [r0]
   21cc8:	ldr	r1, [fp, #-12]
   21ccc:	strb	r0, [r1, #2]
   21cd0:	ldr	r0, [sp, #28]
   21cd4:	ldr	r1, [fp, #-16]
   21cd8:	ldrb	r1, [r1, #2]
   21cdc:	and	r1, r1, #63	; 0x3f
   21ce0:	add	r0, r0, r1
   21ce4:	ldrb	r0, [r0]
   21ce8:	ldr	r1, [fp, #-12]
   21cec:	strb	r0, [r1, #3]
   21cf0:	ldr	r0, [sp, #16]
   21cf4:	sub	r0, r0, #3
   21cf8:	str	r0, [sp, #16]
   21cfc:	ldr	r0, [fp, #-12]
   21d00:	add	r0, r0, #4
   21d04:	str	r0, [fp, #-12]
   21d08:	ldr	r0, [fp, #-16]
   21d0c:	add	r0, r0, #3
   21d10:	str	r0, [fp, #-16]
   21d14:	b	21c3c <flatcc_json_printer_clear@@Base+0x1948>
   21d18:	ldr	r0, [sp, #16]
   21d1c:	cmp	r0, #1
   21d20:	str	r0, [sp]
   21d24:	beq	21de4 <flatcc_json_printer_clear@@Base+0x1af0>
   21d28:	b	21d2c <flatcc_json_printer_clear@@Base+0x1a38>
   21d2c:	ldr	r0, [sp]
   21d30:	cmp	r0, #2
   21d34:	bne	21e68 <flatcc_json_printer_clear@@Base+0x1b74>
   21d38:	b	21d3c <flatcc_json_printer_clear@@Base+0x1a48>
   21d3c:	ldr	r0, [sp, #28]
   21d40:	ldr	r1, [fp, #-16]
   21d44:	ldrb	r1, [r1]
   21d48:	asr	r1, r1, #2
   21d4c:	add	r0, r0, r1
   21d50:	ldrb	r0, [r0]
   21d54:	ldr	r1, [fp, #-12]
   21d58:	strb	r0, [r1]
   21d5c:	ldr	r0, [sp, #28]
   21d60:	ldr	r1, [fp, #-16]
   21d64:	ldrb	r1, [r1]
   21d68:	lsl	r1, r1, #4
   21d6c:	and	r1, r1, #48	; 0x30
   21d70:	ldr	r2, [fp, #-16]
   21d74:	ldrb	r2, [r2, #1]
   21d78:	asr	r2, r2, #4
   21d7c:	orr	r1, r1, r2
   21d80:	add	r0, r0, r1
   21d84:	ldrb	r0, [r0]
   21d88:	ldr	r1, [fp, #-12]
   21d8c:	strb	r0, [r1, #1]
   21d90:	ldr	r0, [sp, #28]
   21d94:	ldr	r1, [fp, #-16]
   21d98:	ldrb	r1, [r1, #1]
   21d9c:	lsl	r1, r1, #2
   21da0:	and	r1, r1, #60	; 0x3c
   21da4:	add	r0, r0, r1
   21da8:	ldrb	r0, [r0]
   21dac:	ldr	r1, [fp, #-12]
   21db0:	strb	r0, [r1, #2]
   21db4:	ldr	r0, [fp, #-12]
   21db8:	add	r0, r0, #3
   21dbc:	str	r0, [fp, #-12]
   21dc0:	ldr	r0, [sp, #20]
   21dc4:	cmp	r0, #0
   21dc8:	beq	21de0 <flatcc_json_printer_clear@@Base+0x1aec>
   21dcc:	ldr	r0, [fp, #-12]
   21dd0:	add	r1, r0, #1
   21dd4:	str	r1, [fp, #-12]
   21dd8:	movw	r1, #61	; 0x3d
   21ddc:	strb	r1, [r0]
   21de0:	b	21e70 <flatcc_json_printer_clear@@Base+0x1b7c>
   21de4:	ldr	r0, [sp, #28]
   21de8:	ldr	r1, [fp, #-16]
   21dec:	ldrb	r1, [r1]
   21df0:	asr	r1, r1, #2
   21df4:	add	r0, r0, r1
   21df8:	ldrb	r0, [r0]
   21dfc:	ldr	r1, [fp, #-12]
   21e00:	strb	r0, [r1]
   21e04:	ldr	r0, [sp, #28]
   21e08:	ldr	r1, [fp, #-16]
   21e0c:	ldrb	r1, [r1]
   21e10:	lsl	r1, r1, #4
   21e14:	and	r1, r1, #48	; 0x30
   21e18:	add	r0, r0, r1
   21e1c:	ldrb	r0, [r0]
   21e20:	ldr	r1, [fp, #-12]
   21e24:	strb	r0, [r1, #1]
   21e28:	ldr	r0, [fp, #-12]
   21e2c:	add	r0, r0, #2
   21e30:	str	r0, [fp, #-12]
   21e34:	ldr	r0, [sp, #20]
   21e38:	cmp	r0, #0
   21e3c:	beq	21e64 <flatcc_json_printer_clear@@Base+0x1b70>
   21e40:	ldr	r0, [fp, #-12]
   21e44:	add	r1, r0, #1
   21e48:	str	r1, [fp, #-12]
   21e4c:	movw	r1, #61	; 0x3d
   21e50:	strb	r1, [r0]
   21e54:	ldr	r0, [fp, #-12]
   21e58:	add	r2, r0, #1
   21e5c:	str	r2, [fp, #-12]
   21e60:	strb	r1, [r0]
   21e64:	b	21e70 <flatcc_json_printer_clear@@Base+0x1b7c>
   21e68:	movw	r0, #0
   21e6c:	str	r0, [sp, #20]
   21e70:	movw	r0, #0
   21e74:	str	r0, [sp, #16]
   21e78:	ldr	r0, [fp, #-20]	; 0xffffffec
   21e7c:	movw	r1, #0
   21e80:	cmp	r0, r1
   21e84:	beq	21e9c <flatcc_json_printer_clear@@Base+0x1ba8>
   21e88:	ldr	r0, [fp, #-12]
   21e8c:	ldr	r1, [sp, #24]
   21e90:	sub	r0, r0, r1
   21e94:	ldr	r1, [fp, #-20]	; 0xffffffec
   21e98:	str	r0, [r1]
   21e9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21ea0:	movw	r1, #0
   21ea4:	cmp	r0, r1
   21ea8:	beq	21ec0 <flatcc_json_printer_clear@@Base+0x1bcc>
   21eac:	ldr	r0, [sp, #16]
   21eb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   21eb4:	ldr	r2, [r1]
   21eb8:	sub	r0, r2, r0
   21ebc:	str	r0, [r1]
   21ec0:	ldr	r0, [sp, #12]
   21ec4:	sub	sp, fp, #8
   21ec8:	pop	{r4, sl, fp, pc}
   21ecc:	ldrdeq	r1, [r0], -r0
   21ed0:	andeq	r1, r0, r7, lsl #5
   21ed4:	sub	sp, sp, #4
   21ed8:	strb	r0, [sp, #3]
   21edc:	ldrb	r0, [sp, #3]
   21ee0:	add	sp, sp, #4
   21ee4:	bx	lr
   21ee8:	sub	sp, sp, #4
   21eec:	strh	r0, [sp, #2]
   21ef0:	ldrh	r0, [sp, #2]
   21ef4:	add	sp, sp, #4
   21ef8:	bx	lr
   21efc:	sub	sp, sp, #4
   21f00:	str	r0, [sp]
   21f04:	ldr	r0, [sp]
   21f08:	add	sp, sp, #4
   21f0c:	bx	lr
   21f10:	sub	sp, sp, #8
   21f14:	str	r0, [sp]
   21f18:	str	r1, [sp, #4]
   21f1c:	ldr	r0, [sp]
   21f20:	ldr	r1, [sp, #4]
   21f24:	add	sp, sp, #8
   21f28:	bx	lr
   21f2c:	sub	sp, sp, #4
   21f30:	strb	r0, [sp, #3]
   21f34:	ldrsb	r0, [sp, #3]
   21f38:	add	sp, sp, #4
   21f3c:	bx	lr
   21f40:	sub	sp, sp, #4
   21f44:	strh	r0, [sp, #2]
   21f48:	ldrsh	r0, [sp, #2]
   21f4c:	add	sp, sp, #4
   21f50:	bx	lr
   21f54:	sub	sp, sp, #4
   21f58:	str	r0, [sp]
   21f5c:	ldr	r0, [sp]
   21f60:	add	sp, sp, #4
   21f64:	bx	lr
   21f68:	sub	sp, sp, #8
   21f6c:	str	r0, [sp]
   21f70:	str	r1, [sp, #4]
   21f74:	ldr	r0, [sp]
   21f78:	ldr	r1, [sp, #4]
   21f7c:	add	sp, sp, #8
   21f80:	bx	lr
   21f84:	sub	sp, sp, #4
   21f88:	strb	r0, [sp, #3]
   21f8c:	ldrb	r0, [sp, #3]
   21f90:	add	sp, sp, #4
   21f94:	bx	lr
   21f98:	sub	sp, sp, #8
   21f9c:	vstr	s0, [sp, #4]
   21fa0:	vldr	s0, [sp, #4]
   21fa4:	vstr	s0, [sp]
   21fa8:	ldr	r0, [sp]
   21fac:	str	r0, [sp]
   21fb0:	vldr	s0, [sp]
   21fb4:	add	sp, sp, #8
   21fb8:	bx	lr
   21fbc:	sub	sp, sp, #16
   21fc0:	vstr	d0, [sp, #8]
   21fc4:	vldr	d0, [sp, #8]
   21fc8:	vstr	d0, [sp]
   21fcc:	vldr	d0, [sp]
   21fd0:	add	sp, sp, #16
   21fd4:	bx	lr
   21fd8:	sub	sp, sp, #4
   21fdc:	str	r0, [sp]
   21fe0:	ldr	r0, [sp]
   21fe4:	add	sp, sp, #4
   21fe8:	bx	lr
   21fec:	sub	sp, sp, #4
   21ff0:	strb	r0, [sp, #3]
   21ff4:	ldrb	r0, [sp, #3]
   21ff8:	add	sp, sp, #4
   21ffc:	bx	lr
   22000:	push	{fp, lr}
   22004:	mov	fp, sp
   22008:	sub	sp, sp, #8
   2200c:	str	r0, [sp, #4]
   22010:	ldr	r0, [sp, #4]
   22014:	ldr	r0, [r0]
   22018:	bl	22024 <flatcc_json_printer_clear@@Base+0x1d30>
   2201c:	mov	sp, fp
   22020:	pop	{fp, pc}
   22024:	sub	sp, sp, #4
   22028:	str	r0, [sp]
   2202c:	ldr	r0, [sp]
   22030:	add	sp, sp, #4
   22034:	bx	lr
   22038:	sub	sp, sp, #4
   2203c:	str	r0, [sp]
   22040:	ldr	r0, [sp]
   22044:	add	sp, sp, #4
   22048:	bx	lr
   2204c:	push	{fp, lr}
   22050:	mov	fp, sp
   22054:	sub	sp, sp, #8
   22058:	str	r0, [sp, #4]
   2205c:	ldr	r0, [sp, #4]
   22060:	ldr	r0, [r0]
   22064:	bl	22070 <flatcc_json_printer_clear@@Base+0x1d7c>
   22068:	mov	sp, fp
   2206c:	pop	{fp, pc}
   22070:	sub	sp, sp, #4
   22074:	str	r0, [sp]
   22078:	ldr	r0, [sp]
   2207c:	add	sp, sp, #4
   22080:	bx	lr
   22084:	cmp	r3, #0
   22088:	cmpeq	r2, #0
   2208c:	bne	220a4 <flatcc_json_printer_clear@@Base+0x1db0>
   22090:	cmp	r1, #0
   22094:	cmpeq	r0, #0
   22098:	mvnne	r1, #0
   2209c:	mvnne	r0, #0
   220a0:	b	220c0 <flatcc_json_printer_clear@@Base+0x1dcc>
   220a4:	sub	sp, sp, #8
   220a8:	push	{sp, lr}
   220ac:	bl	220d0 <flatcc_json_printer_clear@@Base+0x1ddc>
   220b0:	ldr	lr, [sp, #4]
   220b4:	add	sp, sp, #8
   220b8:	pop	{r2, r3}
   220bc:	bx	lr
   220c0:	push	{r1, lr}
   220c4:	mov	r0, #8
   220c8:	bl	12864 <raise@plt>
   220cc:	pop	{r1, pc}
   220d0:	cmp	r1, r3
   220d4:	cmpeq	r0, r2
   220d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   220dc:	mov	r4, r0
   220e0:	movcc	r0, #0
   220e4:	mov	r5, r1
   220e8:	ldr	lr, [sp, #36]	; 0x24
   220ec:	movcc	r1, r0
   220f0:	bcc	221ec <flatcc_json_printer_clear@@Base+0x1ef8>
   220f4:	cmp	r3, #0
   220f8:	clzeq	ip, r2
   220fc:	clzne	ip, r3
   22100:	addeq	ip, ip, #32
   22104:	cmp	r5, #0
   22108:	clzeq	r1, r4
   2210c:	addeq	r1, r1, #32
   22110:	clzne	r1, r5
   22114:	sub	ip, ip, r1
   22118:	sub	sl, ip, #32
   2211c:	lsl	r9, r3, ip
   22120:	rsb	fp, ip, #32
   22124:	orr	r9, r9, r2, lsl sl
   22128:	orr	r9, r9, r2, lsr fp
   2212c:	lsl	r8, r2, ip
   22130:	cmp	r5, r9
   22134:	cmpeq	r4, r8
   22138:	movcc	r0, #0
   2213c:	movcc	r1, r0
   22140:	bcc	2215c <flatcc_json_printer_clear@@Base+0x1e68>
   22144:	mov	r0, #1
   22148:	subs	r4, r4, r8
   2214c:	lsl	r1, r0, sl
   22150:	orr	r1, r1, r0, lsr fp
   22154:	lsl	r0, r0, ip
   22158:	sbc	r5, r5, r9
   2215c:	cmp	ip, #0
   22160:	beq	221ec <flatcc_json_printer_clear@@Base+0x1ef8>
   22164:	lsr	r6, r8, #1
   22168:	orr	r6, r6, r9, lsl #31
   2216c:	lsr	r7, r9, #1
   22170:	mov	r2, ip
   22174:	b	22198 <flatcc_json_printer_clear@@Base+0x1ea4>
   22178:	subs	r3, r4, r6
   2217c:	sbc	r8, r5, r7
   22180:	adds	r3, r3, r3
   22184:	adc	r8, r8, r8
   22188:	adds	r4, r3, #1
   2218c:	adc	r5, r8, #0
   22190:	subs	r2, r2, #1
   22194:	beq	221b4 <flatcc_json_printer_clear@@Base+0x1ec0>
   22198:	cmp	r5, r7
   2219c:	cmpeq	r4, r6
   221a0:	bcs	22178 <flatcc_json_printer_clear@@Base+0x1e84>
   221a4:	adds	r4, r4, r4
   221a8:	adc	r5, r5, r5
   221ac:	subs	r2, r2, #1
   221b0:	bne	22198 <flatcc_json_printer_clear@@Base+0x1ea4>
   221b4:	lsr	r3, r4, ip
   221b8:	orr	r3, r3, r5, lsl fp
   221bc:	lsr	r2, r5, ip
   221c0:	orr	r3, r3, r5, lsr sl
   221c4:	adds	r0, r0, r4
   221c8:	mov	r4, r3
   221cc:	lsl	r3, r2, ip
   221d0:	orr	r3, r3, r4, lsl sl
   221d4:	lsl	ip, r4, ip
   221d8:	orr	r3, r3, r4, lsr fp
   221dc:	adc	r1, r1, r5
   221e0:	subs	r0, r0, ip
   221e4:	mov	r5, r2
   221e8:	sbc	r1, r1, r3
   221ec:	cmp	lr, #0
   221f0:	strdne	r4, [lr]
   221f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000221f8 <__libc_csu_init@@Base>:
   221f8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   221fc:	mov	r7, r0
   22200:	ldr	r6, [pc, #72]	; 22250 <__libc_csu_init@@Base+0x58>
   22204:	ldr	r5, [pc, #72]	; 22254 <__libc_csu_init@@Base+0x5c>
   22208:	add	r6, pc, r6
   2220c:	add	r5, pc, r5
   22210:	sub	r6, r6, r5
   22214:	mov	r8, r1
   22218:	mov	r9, r2
   2221c:	bl	12844 <raise@plt-0x20>
   22220:	asrs	r6, r6, #2
   22224:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   22228:	mov	r4, #0
   2222c:	add	r4, r4, #1
   22230:	ldr	r3, [r5], #4
   22234:	mov	r2, r9
   22238:	mov	r1, r8
   2223c:	mov	r0, r7
   22240:	blx	r3
   22244:	cmp	r6, r4
   22248:	bne	2222c <__libc_csu_init@@Base+0x34>
   2224c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   22250:	strdeq	r1, [r1], -ip
   22254:	strdeq	r1, [r1], -r4

00022258 <__libc_csu_fini@@Base>:
   22258:	bx	lr

Disassembly of section .fini:

0002225c <.fini>:
   2225c:	push	{r3, lr}
   22260:	pop	{r3, pc}
