
../repos/prog2/0.2:     file format elf32-littlearm


Disassembly of section .init:

0001064c <.init>:
   1064c:	push	{r3, lr}
   10650:	bl	106fc <_start@@Base+0x3c>
   10654:	pop	{r3, pc}

Disassembly of section .plt:

00010658 <printf@plt-0x14>:
   10658:	push	{lr}		; (str lr, [sp, #-4]!)
   1065c:	ldr	lr, [pc, #4]	; 10668 <printf@plt-0x4>
   10660:	add	lr, pc, lr
   10664:	ldr	pc, [lr, #8]!
   10668:	muleq	r1, r8, r9

0001066c <printf@plt>:
   1066c:	add	ip, pc, #0, 12
   10670:	add	ip, ip, #16, 20	; 0x10000
   10674:	ldr	pc, [ip, #2456]!	; 0x998

00010678 <puts@plt>:
   10678:	add	ip, pc, #0, 12
   1067c:	add	ip, ip, #16, 20	; 0x10000
   10680:	ldr	pc, [ip, #2448]!	; 0x990

00010684 <__libc_start_main@plt>:
   10684:	add	ip, pc, #0, 12
   10688:	add	ip, ip, #16, 20	; 0x10000
   1068c:	ldr	pc, [ip, #2440]!	; 0x988

00010690 <__gmon_start__@plt>:
   10690:	add	ip, pc, #0, 12
   10694:	add	ip, ip, #16, 20	; 0x10000
   10698:	ldr	pc, [ip, #2432]!	; 0x980

0001069c <putchar@plt>:
   1069c:	add	ip, pc, #0, 12
   106a0:	add	ip, ip, #16, 20	; 0x10000
   106a4:	ldr	pc, [ip, #2424]!	; 0x978

000106a8 <__isoc99_scanf@plt>:
   106a8:	add	ip, pc, #0, 12
   106ac:	add	ip, ip, #16, 20	; 0x10000
   106b0:	ldr	pc, [ip, #2416]!	; 0x970

000106b4 <abort@plt>:
   106b4:	add	ip, pc, #0, 12
   106b8:	add	ip, ip, #16, 20	; 0x10000
   106bc:	ldr	pc, [ip, #2408]!	; 0x968

Disassembly of section .text:

000106c0 <_start@@Base>:
   106c0:	mov	fp, #0
   106c4:	mov	lr, #0
   106c8:	pop	{r1}		; (ldr r1, [sp], #4)
   106cc:	mov	r2, sp
   106d0:	push	{r2}		; (str r2, [sp, #-4]!)
   106d4:	push	{r0}		; (str r0, [sp, #-4]!)
   106d8:	ldr	ip, [pc, #16]	; 106f0 <_start@@Base+0x30>
   106dc:	push	{ip}		; (str ip, [sp, #-4]!)
   106e0:	ldr	r0, [pc, #12]	; 106f4 <_start@@Base+0x34>
   106e4:	ldr	r3, [pc, #12]	; 106f8 <_start@@Base+0x38>
   106e8:	bl	10684 <__libc_start_main@plt>
   106ec:	bl	106b4 <abort@plt>
   106f0:	andeq	r0, r1, r8, ror sp
   106f4:			; <UNDEFINED> instruction: 0x000107b0
   106f8:	andeq	r0, r1, r8, lsl sp
   106fc:	ldr	r3, [pc, #20]	; 10718 <_start@@Base+0x58>
   10700:	ldr	r2, [pc, #20]	; 1071c <_start@@Base+0x5c>
   10704:	add	r3, pc, r3
   10708:	ldr	r2, [r3, r2]
   1070c:	cmp	r2, #0
   10710:	bxeq	lr
   10714:	b	10690 <__gmon_start__@plt>
   10718:	strdeq	r0, [r1], -r4
   1071c:	andeq	r0, r0, r8, lsr #32
   10720:	ldr	r0, [pc, #24]	; 10740 <_start@@Base+0x80>
   10724:	ldr	r3, [pc, #24]	; 10744 <_start@@Base+0x84>
   10728:	cmp	r3, r0
   1072c:	bxeq	lr
   10730:	ldr	r3, [pc, #16]	; 10748 <_start@@Base+0x88>
   10734:	cmp	r3, #0
   10738:	bxeq	lr
   1073c:	bx	r3
   10740:	andeq	r1, r2, r4, lsr r0
   10744:	andeq	r1, r2, r4, lsr r0
   10748:	andeq	r0, r0, r0
   1074c:	ldr	r0, [pc, #36]	; 10778 <_start@@Base+0xb8>
   10750:	ldr	r1, [pc, #36]	; 1077c <_start@@Base+0xbc>
   10754:	sub	r1, r1, r0
   10758:	asr	r1, r1, #2
   1075c:	add	r1, r1, r1, lsr #31
   10760:	asrs	r1, r1, #1
   10764:	bxeq	lr
   10768:	ldr	r3, [pc, #16]	; 10780 <_start@@Base+0xc0>
   1076c:	cmp	r3, #0
   10770:	bxeq	lr
   10774:	bx	r3
   10778:	andeq	r1, r2, r4, lsr r0
   1077c:	andeq	r1, r2, r4, lsr r0
   10780:	andeq	r0, r0, r0
   10784:	push	{r4, lr}
   10788:	ldr	r4, [pc, #24]	; 107a8 <_start@@Base+0xe8>
   1078c:	ldrb	r3, [r4]
   10790:	cmp	r3, #0
   10794:	popne	{r4, pc}
   10798:	bl	10720 <_start@@Base+0x60>
   1079c:	mov	r3, #1
   107a0:	strb	r3, [r4]
   107a4:	pop	{r4, pc}
   107a8:	andeq	r1, r2, r4, lsr r0
   107ac:	b	1074c <_start@@Base+0x8c>

000107b0 <main@@Base>:
   107b0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   107b4:	add	fp, sp, #24
   107b8:	sub	sp, sp, #48	; 0x30
   107bc:	mov	r0, #0
   107c0:	vmov.i32	q8, #0	; 0x00000000
   107c4:	add	r5, sp, #24
   107c8:	mov	r8, sp
   107cc:	mov	r1, #12
   107d0:	str	r0, [sp, #40]	; 0x28
   107d4:	str	r0, [sp, #16]
   107d8:	movw	r0, #3498	; 0xdaa
   107dc:	mov	r4, r5
   107e0:	mov	r9, r8
   107e4:	movt	r0, #1
   107e8:	vst1.64	{d16-d17}, [r4], r1
   107ec:	vst1.64	{d16-d17}, [r9], r1
   107f0:	bl	10678 <puts@plt>
   107f4:	movw	r6, #3464	; 0xd88
   107f8:	mov	r1, #1
   107fc:	movt	r6, #1
   10800:	mov	r0, r6
   10804:	bl	1066c <printf@plt>
   10808:	movw	r7, #3495	; 0xda7
   1080c:	mov	r1, r5
   10810:	movt	r7, #1
   10814:	mov	r0, r7
   10818:	bl	106a8 <__isoc99_scanf@plt>
   1081c:	mov	r0, r6
   10820:	mov	r1, #2
   10824:	bl	1066c <printf@plt>
   10828:	orr	r1, r5, #4
   1082c:	mov	r0, r7
   10830:	bl	106a8 <__isoc99_scanf@plt>
   10834:	mov	r0, r6
   10838:	mov	r1, #3
   1083c:	bl	1066c <printf@plt>
   10840:	add	r1, r5, #8
   10844:	mov	r0, r7
   10848:	bl	106a8 <__isoc99_scanf@plt>
   1084c:	mov	r0, r6
   10850:	mov	r1, #4
   10854:	bl	1066c <printf@plt>
   10858:	mov	r0, r7
   1085c:	mov	r1, r4
   10860:	bl	106a8 <__isoc99_scanf@plt>
   10864:	mov	r0, r6
   10868:	mov	r1, #5
   1086c:	bl	1066c <printf@plt>
   10870:	add	r1, r5, #16
   10874:	mov	r0, r7
   10878:	bl	106a8 <__isoc99_scanf@plt>
   1087c:	movw	r0, #3507	; 0xdb3
   10880:	movt	r0, #1
   10884:	bl	10678 <puts@plt>
   10888:	mov	r0, r6
   1088c:	mov	r1, #1
   10890:	bl	1066c <printf@plt>
   10894:	mov	r0, r7
   10898:	mov	r1, r8
   1089c:	bl	106a8 <__isoc99_scanf@plt>
   108a0:	mov	r0, r6
   108a4:	mov	r1, #2
   108a8:	bl	1066c <printf@plt>
   108ac:	orr	r1, r8, #4
   108b0:	mov	r0, r7
   108b4:	bl	106a8 <__isoc99_scanf@plt>
   108b8:	mov	r0, r6
   108bc:	mov	r1, #3
   108c0:	bl	1066c <printf@plt>
   108c4:	add	r1, r8, #8
   108c8:	mov	r0, r7
   108cc:	bl	106a8 <__isoc99_scanf@plt>
   108d0:	mov	r0, r6
   108d4:	mov	r1, #4
   108d8:	bl	1066c <printf@plt>
   108dc:	mov	r0, r7
   108e0:	mov	r1, r9
   108e4:	bl	106a8 <__isoc99_scanf@plt>
   108e8:	mov	r0, r6
   108ec:	mov	r1, #5
   108f0:	bl	1066c <printf@plt>
   108f4:	add	r1, r8, #16
   108f8:	mov	r0, r7
   108fc:	bl	106a8 <__isoc99_scanf@plt>
   10900:	mov	r0, #10
   10904:	bl	1069c <putchar@plt>
   10908:	movw	r0, #3486	; 0xd9e
   1090c:	movt	r0, #1
   10910:	bl	1066c <printf@plt>
   10914:	ldr	r1, [sp, #24]
   10918:	ldr	r0, [sp]
   1091c:	cmp	r1, r0
   10920:	beq	10a74 <main@@Base+0x2c4>
   10924:	ldr	r0, [sp, #4]
   10928:	cmp	r1, r0
   1092c:	beq	10a90 <main@@Base+0x2e0>
   10930:	ldr	r0, [sp, #8]
   10934:	cmp	r1, r0
   10938:	beq	10aac <main@@Base+0x2fc>
   1093c:	ldr	r0, [sp, #12]
   10940:	cmp	r1, r0
   10944:	beq	10ac8 <main@@Base+0x318>
   10948:	ldr	r0, [sp, #16]
   1094c:	cmp	r1, r0
   10950:	beq	10ae4 <main@@Base+0x334>
   10954:	ldr	r1, [sp, #28]
   10958:	ldr	r0, [sp]
   1095c:	cmp	r1, r0
   10960:	beq	10b00 <main@@Base+0x350>
   10964:	ldr	r0, [sp, #4]
   10968:	cmp	r1, r0
   1096c:	beq	10b1c <main@@Base+0x36c>
   10970:	ldr	r0, [sp, #8]
   10974:	cmp	r1, r0
   10978:	beq	10b38 <main@@Base+0x388>
   1097c:	ldr	r0, [sp, #12]
   10980:	cmp	r1, r0
   10984:	beq	10b54 <main@@Base+0x3a4>
   10988:	ldr	r0, [sp, #16]
   1098c:	cmp	r1, r0
   10990:	beq	10b70 <main@@Base+0x3c0>
   10994:	ldr	r1, [sp, #32]
   10998:	ldr	r0, [sp]
   1099c:	cmp	r1, r0
   109a0:	beq	10b8c <main@@Base+0x3dc>
   109a4:	ldr	r0, [sp, #4]
   109a8:	cmp	r1, r0
   109ac:	beq	10ba8 <main@@Base+0x3f8>
   109b0:	ldr	r0, [sp, #8]
   109b4:	cmp	r1, r0
   109b8:	beq	10bc4 <main@@Base+0x414>
   109bc:	ldr	r0, [sp, #12]
   109c0:	cmp	r1, r0
   109c4:	beq	10be0 <main@@Base+0x430>
   109c8:	ldr	r0, [sp, #16]
   109cc:	cmp	r1, r0
   109d0:	beq	10bfc <main@@Base+0x44c>
   109d4:	ldr	r1, [sp, #36]	; 0x24
   109d8:	ldr	r0, [sp]
   109dc:	cmp	r1, r0
   109e0:	beq	10c18 <main@@Base+0x468>
   109e4:	ldr	r0, [sp, #4]
   109e8:	cmp	r1, r0
   109ec:	beq	10c34 <main@@Base+0x484>
   109f0:	ldr	r0, [sp, #8]
   109f4:	cmp	r1, r0
   109f8:	beq	10c50 <main@@Base+0x4a0>
   109fc:	ldr	r0, [sp, #12]
   10a00:	cmp	r1, r0
   10a04:	beq	10c6c <main@@Base+0x4bc>
   10a08:	ldr	r0, [sp, #16]
   10a0c:	cmp	r1, r0
   10a10:	beq	10c88 <main@@Base+0x4d8>
   10a14:	ldr	r1, [sp, #40]	; 0x28
   10a18:	ldr	r0, [sp]
   10a1c:	cmp	r1, r0
   10a20:	beq	10ca4 <main@@Base+0x4f4>
   10a24:	ldr	r0, [sp, #4]
   10a28:	cmp	r1, r0
   10a2c:	beq	10cc0 <main@@Base+0x510>
   10a30:	ldr	r0, [sp, #8]
   10a34:	cmp	r1, r0
   10a38:	beq	10cdc <main@@Base+0x52c>
   10a3c:	ldr	r0, [sp, #12]
   10a40:	cmp	r1, r0
   10a44:	beq	10cf8 <main@@Base+0x548>
   10a48:	ldr	r0, [sp, #16]
   10a4c:	cmp	r1, r0
   10a50:	bne	10a60 <main@@Base+0x2b0>
   10a54:	movw	r0, #3494	; 0xda6
   10a58:	movt	r0, #1
   10a5c:	bl	1066c <printf@plt>
   10a60:	mov	r0, #10
   10a64:	bl	1069c <putchar@plt>
   10a68:	mov	r0, #0
   10a6c:	sub	sp, fp, #24
   10a70:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   10a74:	movw	r0, #3494	; 0xda6
   10a78:	movt	r0, #1
   10a7c:	bl	1066c <printf@plt>
   10a80:	ldr	r1, [sp, #24]
   10a84:	ldr	r0, [sp, #4]
   10a88:	cmp	r1, r0
   10a8c:	bne	10930 <main@@Base+0x180>
   10a90:	movw	r0, #3494	; 0xda6
   10a94:	movt	r0, #1
   10a98:	bl	1066c <printf@plt>
   10a9c:	ldr	r1, [sp, #24]
   10aa0:	ldr	r0, [sp, #8]
   10aa4:	cmp	r1, r0
   10aa8:	bne	1093c <main@@Base+0x18c>
   10aac:	movw	r0, #3494	; 0xda6
   10ab0:	movt	r0, #1
   10ab4:	bl	1066c <printf@plt>
   10ab8:	ldr	r1, [sp, #24]
   10abc:	ldr	r0, [sp, #12]
   10ac0:	cmp	r1, r0
   10ac4:	bne	10948 <main@@Base+0x198>
   10ac8:	movw	r0, #3494	; 0xda6
   10acc:	movt	r0, #1
   10ad0:	bl	1066c <printf@plt>
   10ad4:	ldr	r1, [sp, #24]
   10ad8:	ldr	r0, [sp, #16]
   10adc:	cmp	r1, r0
   10ae0:	bne	10954 <main@@Base+0x1a4>
   10ae4:	movw	r0, #3494	; 0xda6
   10ae8:	movt	r0, #1
   10aec:	bl	1066c <printf@plt>
   10af0:	ldr	r1, [sp, #28]
   10af4:	ldr	r0, [sp]
   10af8:	cmp	r1, r0
   10afc:	bne	10964 <main@@Base+0x1b4>
   10b00:	movw	r0, #3494	; 0xda6
   10b04:	movt	r0, #1
   10b08:	bl	1066c <printf@plt>
   10b0c:	ldr	r1, [sp, #28]
   10b10:	ldr	r0, [sp, #4]
   10b14:	cmp	r1, r0
   10b18:	bne	10970 <main@@Base+0x1c0>
   10b1c:	movw	r0, #3494	; 0xda6
   10b20:	movt	r0, #1
   10b24:	bl	1066c <printf@plt>
   10b28:	ldr	r1, [sp, #28]
   10b2c:	ldr	r0, [sp, #8]
   10b30:	cmp	r1, r0
   10b34:	bne	1097c <main@@Base+0x1cc>
   10b38:	movw	r0, #3494	; 0xda6
   10b3c:	movt	r0, #1
   10b40:	bl	1066c <printf@plt>
   10b44:	ldr	r1, [sp, #28]
   10b48:	ldr	r0, [sp, #12]
   10b4c:	cmp	r1, r0
   10b50:	bne	10988 <main@@Base+0x1d8>
   10b54:	movw	r0, #3494	; 0xda6
   10b58:	movt	r0, #1
   10b5c:	bl	1066c <printf@plt>
   10b60:	ldr	r1, [sp, #28]
   10b64:	ldr	r0, [sp, #16]
   10b68:	cmp	r1, r0
   10b6c:	bne	10994 <main@@Base+0x1e4>
   10b70:	movw	r0, #3494	; 0xda6
   10b74:	movt	r0, #1
   10b78:	bl	1066c <printf@plt>
   10b7c:	ldr	r1, [sp, #32]
   10b80:	ldr	r0, [sp]
   10b84:	cmp	r1, r0
   10b88:	bne	109a4 <main@@Base+0x1f4>
   10b8c:	movw	r0, #3494	; 0xda6
   10b90:	movt	r0, #1
   10b94:	bl	1066c <printf@plt>
   10b98:	ldr	r1, [sp, #32]
   10b9c:	ldr	r0, [sp, #4]
   10ba0:	cmp	r1, r0
   10ba4:	bne	109b0 <main@@Base+0x200>
   10ba8:	movw	r0, #3494	; 0xda6
   10bac:	movt	r0, #1
   10bb0:	bl	1066c <printf@plt>
   10bb4:	ldr	r1, [sp, #32]
   10bb8:	ldr	r0, [sp, #8]
   10bbc:	cmp	r1, r0
   10bc0:	bne	109bc <main@@Base+0x20c>
   10bc4:	movw	r0, #3494	; 0xda6
   10bc8:	movt	r0, #1
   10bcc:	bl	1066c <printf@plt>
   10bd0:	ldr	r1, [sp, #32]
   10bd4:	ldr	r0, [sp, #12]
   10bd8:	cmp	r1, r0
   10bdc:	bne	109c8 <main@@Base+0x218>
   10be0:	movw	r0, #3494	; 0xda6
   10be4:	movt	r0, #1
   10be8:	bl	1066c <printf@plt>
   10bec:	ldr	r1, [sp, #32]
   10bf0:	ldr	r0, [sp, #16]
   10bf4:	cmp	r1, r0
   10bf8:	bne	109d4 <main@@Base+0x224>
   10bfc:	movw	r0, #3494	; 0xda6
   10c00:	movt	r0, #1
   10c04:	bl	1066c <printf@plt>
   10c08:	ldr	r1, [sp, #36]	; 0x24
   10c0c:	ldr	r0, [sp]
   10c10:	cmp	r1, r0
   10c14:	bne	109e4 <main@@Base+0x234>
   10c18:	movw	r0, #3494	; 0xda6
   10c1c:	movt	r0, #1
   10c20:	bl	1066c <printf@plt>
   10c24:	ldr	r1, [sp, #36]	; 0x24
   10c28:	ldr	r0, [sp, #4]
   10c2c:	cmp	r1, r0
   10c30:	bne	109f0 <main@@Base+0x240>
   10c34:	movw	r0, #3494	; 0xda6
   10c38:	movt	r0, #1
   10c3c:	bl	1066c <printf@plt>
   10c40:	ldr	r1, [sp, #36]	; 0x24
   10c44:	ldr	r0, [sp, #8]
   10c48:	cmp	r1, r0
   10c4c:	bne	109fc <main@@Base+0x24c>
   10c50:	movw	r0, #3494	; 0xda6
   10c54:	movt	r0, #1
   10c58:	bl	1066c <printf@plt>
   10c5c:	ldr	r1, [sp, #36]	; 0x24
   10c60:	ldr	r0, [sp, #12]
   10c64:	cmp	r1, r0
   10c68:	bne	10a08 <main@@Base+0x258>
   10c6c:	movw	r0, #3494	; 0xda6
   10c70:	movt	r0, #1
   10c74:	bl	1066c <printf@plt>
   10c78:	ldr	r1, [sp, #36]	; 0x24
   10c7c:	ldr	r0, [sp, #16]
   10c80:	cmp	r1, r0
   10c84:	bne	10a14 <main@@Base+0x264>
   10c88:	movw	r0, #3494	; 0xda6
   10c8c:	movt	r0, #1
   10c90:	bl	1066c <printf@plt>
   10c94:	ldr	r1, [sp, #40]	; 0x28
   10c98:	ldr	r0, [sp]
   10c9c:	cmp	r1, r0
   10ca0:	bne	10a24 <main@@Base+0x274>
   10ca4:	movw	r0, #3494	; 0xda6
   10ca8:	movt	r0, #1
   10cac:	bl	1066c <printf@plt>
   10cb0:	ldr	r1, [sp, #40]	; 0x28
   10cb4:	ldr	r0, [sp, #4]
   10cb8:	cmp	r1, r0
   10cbc:	bne	10a30 <main@@Base+0x280>
   10cc0:	movw	r0, #3494	; 0xda6
   10cc4:	movt	r0, #1
   10cc8:	bl	1066c <printf@plt>
   10ccc:	ldr	r1, [sp, #40]	; 0x28
   10cd0:	ldr	r0, [sp, #8]
   10cd4:	cmp	r1, r0
   10cd8:	bne	10a3c <main@@Base+0x28c>
   10cdc:	movw	r0, #3494	; 0xda6
   10ce0:	movt	r0, #1
   10ce4:	bl	1066c <printf@plt>
   10ce8:	ldr	r1, [sp, #40]	; 0x28
   10cec:	ldr	r0, [sp, #12]
   10cf0:	cmp	r1, r0
   10cf4:	bne	10a48 <main@@Base+0x298>
   10cf8:	movw	r0, #3494	; 0xda6
   10cfc:	movt	r0, #1
   10d00:	bl	1066c <printf@plt>
   10d04:	ldr	r1, [sp, #40]	; 0x28
   10d08:	ldr	r0, [sp, #16]
   10d0c:	cmp	r1, r0
   10d10:	beq	10a54 <main@@Base+0x2a4>
   10d14:	b	10a60 <main@@Base+0x2b0>

00010d18 <__libc_csu_init@@Base>:
   10d18:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10d1c:	mov	r7, r0
   10d20:	ldr	r6, [pc, #72]	; 10d70 <__libc_csu_init@@Base+0x58>
   10d24:	ldr	r5, [pc, #72]	; 10d74 <__libc_csu_init@@Base+0x5c>
   10d28:	add	r6, pc, r6
   10d2c:	add	r5, pc, r5
   10d30:	sub	r6, r6, r5
   10d34:	mov	r8, r1
   10d38:	mov	r9, r2
   10d3c:	bl	1064c <printf@plt-0x20>
   10d40:	asrs	r6, r6, #2
   10d44:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10d48:	mov	r4, #0
   10d4c:	add	r4, r4, #1
   10d50:	ldr	r3, [r5], #4
   10d54:	mov	r2, r9
   10d58:	mov	r1, r8
   10d5c:	mov	r0, r7
   10d60:	blx	r3
   10d64:	cmp	r6, r4
   10d68:	bne	10d4c <__libc_csu_init@@Base+0x34>
   10d6c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10d70:	ldrdeq	r0, [r1], -ip
   10d74:	ldrdeq	r0, [r1], -r4

00010d78 <__libc_csu_fini@@Base>:
   10d78:	bx	lr

Disassembly of section .fini:

00010d7c <.fini>:
   10d7c:	push	{r3, lr}
   10d80:	pop	{r3, pc}
